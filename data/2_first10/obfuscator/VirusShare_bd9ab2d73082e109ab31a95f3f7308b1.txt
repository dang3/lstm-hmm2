mov
xchg
cwtl
inc
lcall
lods
sub
and
icebp
movl
pop
push
mov
push
shr
lock
sbb
loopne
push
or
pop
movsl
push
mov
mov
or
je
pop
xchg
mov
mov
fistpl
and
sbb
push
fucomp
ljmp
insb
add
shrl
adc
push
cli
inc
insb
or
ja
pop
aaa
in
cmp
sbb
cmp
icebp
gs
movsl
loope
inc
or
lods
xchg
xorb
mov
into
sub
push
mov
adc
loopne
mov
lcall
or
jns
mov
test
bound
push
outsb
fisttpl
int
or
jp
rorb
out
js
aad
sub
out
repnz
pop
inc
dec
rcl
pop
push
loope
pop
imul
das
or
pop
jg
or
daa
pop
jmp
daa
cmp
test
test
adc
jnp
les
cmp
xchg
in
loopne
ljmp
hlt
push
mov
cmpsb
cmc
outsb
into
fldcw
fs
mov
aad
test
add
jge
int
dec
inc
mov
jb
mov
movsl
mov
pop
aad
xchg
and
subl
test
je
cmp
dec
cmp
test
into
mov
fisttps
fmuls
in
adc
sti
mov
into
jg
int3
inc
in
ss
es
or
jp
pop
jbe
sbb
jle
mov
bound
inc
cmp
scas
shll
stos
enter
lods
jecxz
jno
mov
addr16
xor
jae
xorb
jns
mov
add
jecxz
out
rorl
sub
jle
fisttpll
lret
test
test
mov
test
mov
ljmp
clc
jg
rcrb
add
data16
std
mov
in
xor
int3
dec
sub
jno
in
ds
xchg
movsl
sti
jne
sbb
sub
pop
aaa
xchg
or
mov
sub
mov
test
mov
js
xchg
scas
push
ret
pusha
pop
sub
out
push
xchg
mov
jge
int3
mov
iret
popa
in
inc
pop
scas
jmp
xchg
adc
jne
test
loope
push
inc
into
cmp
les
and
loope
repz
and
pop
fimuls
push
loop
lcall
xchg
dec
jnp
and
pop
movsb
mov
in
xchg
or
xor
mov
lahf
movsl
add
jae
lock
fld1
cmpsb
fisttpll
xchg
icebp
mov
clc
fbstp
push
frstor
push
popf
loop
add
cmp
das
cld
jae
cmp
lods
mov
mov
rcll
push
notb
cmp
inc
xlat
out
mov
outsb
dec
mov
lcall
aam
lea
leave
xchg
pop
and
pop
roll
inc
sbb
int
movsl
xor
mov
fisubl
data16
pop
imul
dec
sub
jle,pn
inc
clc
cmp
lret
test
mov
out
cmp
enter
lock
divb
pop
std
cmp
adc
das
inc
adc
int
jb
adc
sbb
bound
rorb
push
xor
pop
ds
mov
loopne
rcl
pop
cmpsl
hlt
pop
loope
repnz
repz
loope
in
roll
imul
pop
jecxz
inc
loop
mov
cli
imul
lock
xchg
push
or
xchg
into
movsb
fisubl
movsb
cmpsb
cmc
out
testl
mov
and
jno
mov
bound
inc
aas
or
or
pop
dec
or
add
repz
popa
fs
dec
or
and
jo
les
cltd
cmp
lea
and
and
std
xchg
jmp
jge
mov
idivl
test
mov
ss
xor
pop
out
jae
xchg
sbb
push
jnp
sub
cmp
xchg
jbe
xchg
cmp
popa
jbe
addb
xor
clc
addr16
je
sub
pop
scas
mov
scas
testl
adc
clc
add
inc
nop
or
fldenv
xchg
std
jne
mov
outsl
mov
lahf
mov
in
fimull
mov
ret
dec
cmpl
jo
xor
adc
xchg
mov
insb
roll
rorb
or
pop
int3
leave
mov
lcall
add
mov
lods
loop
data16
xlat
mov
mov
loopne
mov
pop
push
xor
jno
test
out
rcll
test
sbb
adc
jne
and
ss
push
xchg
push
cmpsb
push
xor
mov
insl
push
mov
pop
popf
sbb
fistl
mov
inc
xchg
popf
sub
cmp
dec
xchg
push
btr
das
movsb
inc
xorb
mov
inc
sbb
pop
and
fdivs
ficompl
hlt
sub
fs
jbe
pop
stos
xor
adc
xchg
clc
add
gs
loop
add
icebp
xchg
daa
mov
and
lods
and
stc
cld
or
pusha
rol
push
jno
push
add
pop
add
push
push
jo
or
pop
pop
lea
inc
dec
nop
lea
jg
js
jg
push
add
add
fnop
not
not
jle
jae
cmp
stc
jmp
jmp
call
xor
push
push
mov
pop
pop
sub
push
cmp
pop
add
mov
inc
inc
inc
inc
push
push
or
pop
pop
stc
stc
push
add
mov
pop
ror
xor
nop
nop
push
pop
push
cltd
pop
push
mov
pop
and
push
and
pop
cmc
add
ja
mov
or
cmc
push
push
push
add
pop
pop
pop
cmc
xor
pushl
pop
push
pop
and
push
sub
pop
cld
cmc
cmc
push
pop
and
cmp
je
jle
xor
sub
jb
xchg
xchg
jbe
add
jo
cmp
push
push
add
pop
pop
and
nop
clc
nop
push
add
pop
push
sar
pop
xor
js
push
add
jae
and
cmc
add
push
mov
xor
pop
or
jl
stc
push
lea
pop
jl
push
xor
pop
push
lea
pop
add
push
mov
push
xchg
movsl
xchg
mov
pop
cmc
push
push
xor
pop
pop
or
rol
test
jno
push
test
pop
jg
ja
sub
rol
rol
stc
clc
add
push
js
and
pop
push
push
mov
pop
pop
cld
stc
dec
jne
js
push
or
pop
or
jne
push
mov
pop
jb
push
jns
push
push
pop
pop
pop
push
movzbl
or
jnp
push
or
pop
test
jl
js
xor
push
push
xor
pop
pop
rol
test
cmp
add
je
and
add
push
shr
pop
lea
stc
nop
loop
pop
push
xor
pop
push
jge
add
pop
push
call
adc
inc
test
arpl
cmp
clc
insl
push
xchg
add
pop
dec
jne
cmc
nop
push
pop
jg
add
push
push
inc
pop
pop
inc
push
flds
mov
mov
gs
lds
xchg
arpl
pop
cld
cltd
inc
imull
dec
imul
scas
jns
xchg
mov
hlt
fcmovu
filds
mov
int
movsl
addl
loopne
push
adc
push
sti
push
pushf
imul
sbb
movsl
pop
cld
push
loopne
hlt
sub
mov
loop
push
fwait
setbe
add
negb
fdivrp
mov
shll
dec
jb
xor
mov
mov
scas
sbb
aaa
pop
test
clc
cltd
jecxz
movsl
imul
cmpsb
movsb
push
mov
shr
icebp
aas
loopne
cmpb
mov
xchg
jns
xchg
pushf
cmp
cmp
mov
mov
aad
jg
and
movsl
data16
pop
enter
fadd
paddd
mov
outsb
push
shl
jmp
jle
add
popf
pop
ljmp
das
mov
and
pop
aam
pop
iret
add
add
or
daa
xor
xchg
enter
push
lcall
mov
data16
ret
push
lret
cltd
imul
sti
mov
add
jae
lret
notl
push
mov
leave
enter
add
add
cmp
lcall
popf
mov
mov
mov
adc
jge
cmp
mov
mov
into
sahf
or
cmp
test
inc
into
mov
mov
mov
scas
jno
add
les
imulb
scas
scas
sbb
sbb
lret
popa
aam
pop
sub
jge
arpl
mov
pop
cltd
push
leave
stos
aas
xchg
xchg
pushf
lret
je
imul
test
cli
pop
and
bound
add
aas
in
es
jmp
fsts
test
mov
inc
fwait
xor
out
inc
mov
aas
mov
fwait
jecxz
xchg
push
lods
add
mov
inc
lods
pop
aas
jmp
icebp
cmpsb
popf
inc
add
mov
mov
decb
in
stc
in
pop
jg
xor
xchg
mov
std
push
inc
pusha
pop
or
mov
lret
imul
stos
lcall
outsb
xor
out
xor
mov
aas
call
cmp
bound
xor
out
jp
dec
xchg
xchg
lods
xchg
mov
sahf
or
addl
mov
lods
mov
sarl
lahf
mov
imul
cmp
cmpsl
loope
mov
sbb
pop
lods
push
inc
inc
dec
loope
aad
xor
xchg
arpl
stos
outsb
jle
mov
mov
push
icebp
lcall
fnsave
lret
fldcw
lds
push
pop
xchg
pop
cwtl
add
das
adc
enter
les
add
push
jns
scas
mull
mov
int3
dec
push
mov
pushf
inc
sub
dec
sbb
cmp
test
mov
jns
lods
sub
in
inc
dec
push
es
or
out
popf
mov
ss
pop
outsb
xchg
das
shll
dec
insl
add
sub
jne
mov
xor
mov
sti
cmp
sub
push
mov
xor
into
std
repz
incb
push
pop
adc
xor
sbb
int
out
shlb
cmp
mov
jecxz
sbb
inc
cmpsl
outsb
popa
adc
je
fwait
into
mov
movsl
mov
sub
push
cwtl
push
cmp
mov
popa
mov
aas
shlb
in
push
dec
add
mov
gs
cmp
xor
lret
clc
pop
push
sbb
out
fmul
mov
int
jne
mov
ret
mov
loopne,pn
cmp
loop
loop
inc
sub
fs
jne
repz
pop
push
lds
xchg
ret
add
leave
je
sub
mov
ljmp
mov
lock
pop
mov
sub
into
cmp
frndint
rcll
cs
xor
sub
aas
lcall
lea
inc
inc
add
mov
mov
mov
mov
add
cmpsb
mov
icebp
jae
pslld
cmp
mov
fistl
stos
inc
xor
add
repz
rorl
mov
or
xchg
mov
das
and
div
scas
and
push
rorb
mov
mov
add
fsubp
cmp
lods
popf
xlat
test
jnp
into
ja
insb
jl
mov
pop
pushf
inc
mov
iret
adc
mov
stc
mov
push
xchg
mov
popa
aas
mov
pusha
mov
mov
mov
mov
mov
cli
ficoms
test
adc
pop
pop
push
into
lret
mov
adc
in
ret
cwtl
mov
mov
orl
and
outsb
inc
adc
mov
xchg
xchg
or
out
pushl
add
lcall
test
sub
mov
scas
loopne
aaa
and
inc
les
xor
stos
xor
add
add
and
nop
dec
cs
sub
shl
push
adc
stos
aaa
jae
insb
fcmovu
scas
mul
push
or
sub
mov
jge
jle
lods
dec
push
jno
ljmp
fucom
mov
xor
mov
and
pop
xchg
cmp
sub
mov
ja
dec
cmp
sub
cmp
mulb
loopne
cmp
jge
dec
add
inc
aas
rol
cld
push
sbbb
pop
cld
dec
mov
or
insl
jns
outsl
jo
inc
xor
push
xor
lods
imul
loope
cmc
mov
and
cwtl
sbb
pushf
pop
xorb
inc
mov
cmpsb
ss
push
popa
int3
lock
dec
xchg
adc
stos
std
or
sub
jne
pop
xor
xchg
cmp
pop
cmovs
sbb
daa
xor
inc
sub
xchg
ds
int
xchg
inc
ficompl
shrb
lret
xchg
or
xchg
mov
cmc
and
dec
cmpsb
cmp
jle
dec
sbb
dec
lds
cmpsb
jne
pop
push
sti
lret
inc
scas
insl
test
xchg
cltd
testb
ss
sbb
mov
push
inc
sahf
jmp
adc
iret
push
lahf
ffree
push
es
sub
inc
ja
test
sub
push
adc
or
jp
push
dec
mov
dec
scas
adc
test
ja
gs
jb
add
iret
bound
data16
add
fs
sti
movb
cmc
lret
lds
inc
icebp
adcb
xlat
sarb
popf
loop
and
into
jmpw
or
test
loope
xor
xchg
outsb
int
rcrb
or
enter
outsb
les
popf
dec
xchg
dec
xchg
sbb
inc
test
hlt
adc
push
jmp
jg
xor
pop
ret
and
dec
imul
insb
cs
sub
xchg
scas
mov
in
sbb
imul
add
movsl
inc
test
mov
and
xor
shrb
scas
lret
repz
xchg
sbb
jne
orb
adc
xor
shl
pop
test
js
daa
push
fwait
jge
add
lret
cli
sahf
push
sbb
fisubs
loop
mov
add
sub
ficompl
aam
dec
jae
addr16
in
movsl
out
mov
ljmp
or
inc
push
add
mov
sbb
adc
mov
movsb
out
lods
lcall
xchg
dec
mov
es
in
insb
rcll
loop
shll
iret
xor
pusha
negb
mov
negb
xor
repz
jne
pop
lret
ror
insl
repz
sarb
fcmovnbe
jl
mull
leave
or
test
sub
xchg
rorb
jno
pop
push
xchg
xor
and
add
les
sub
or
shr
icebp
add
or
mov
xor
cs
repnz
ret
push
xlat
add
and
mov
push
stc
mov
or
inc
out
call
lea
jge
into
pop
imul
lods
cmp
lds
push
outsl
push
jbe
movsb
pop
pop
fstp
and
sbb
ret
dec
pop
mov
xchg
push
push
int
or
movl
test
inc
xchg
mov
mov
sti
sub
dec
data16
or
adcl
bound
pop
fwait
clc
clc
sub
mov
adc
idiv
mov
gs
xor
mov
lods
test
scas
dec
in
hlt
xchg
enter
sub
jg
repz
inc
inc
lods
cmp
xor
aas
dec
andl
xlat
jl
pop
mov
ret
stos
fistpl
fxch
add
or
adc
sbb
sbb
daa
fisubs
and
inc
xchg
and
inc
lcall
dec
data16
int
mov
jo
dec
mov
and
scas
pop
add
push
dec
testl
mov
bt
dec
sub
jmp
fiaddl
xor
gs
cmp
pushf
xchg
mov
jp
lock
fildll
jo
push
push
xchg
frstor
les
sbb
repz
stos
sti
es
push
mov
mov
push
bound
mov
ret
add
cld
jmp
xchg
loope
lds
out
adc
cmpsl
and
xorb
cmp
repz
int3
inc
adc
cmp
in
sbb
shll
jne
pusha
push
adc
or
cmp
mov
xor
lock
dec
and
xchg
aaa
xor
testl
adc
add
call
bound
add
in
xchg
jae
push
add
aaa
mov
push
fcomp
push
and
outsl
fidivrs
push
sbb
jl
adc
push
lock
rcll
out
jo
and
jns
popa
sub
add
pop
lods
lds
aad
mov
xchg
leave
stc
incl
mov
dec
adc
ljmp
aaa
and
mov
cltd
mov
lret
popa
mov
sahf
cltd
mov
cmp
lea
jne
inc
pop
pop
mov
dec
adc
push
clc
xchg
mov
rcrl
push
jl
sarb
adc
add
mov
mov
ja
adc
add
and
repnz
orl
test
mov
or
xchg
cmp
sbbb
jecxz
mov
jg
xchg
fadds
xchg
xor
push
xor
mov
push
pop
jnp
cs
cmp
cmp
jg
xor
cld
imul
stos
push
cmp
inc
xchg
inc
in
and
stos
lcall
js
push
out
inc
cld
inc
hlt
dec
outsl
or
and
fwait
push
xchg
nop
ljmp
insl
pop
and
cltd
in
push
jmp
or
dec
or
or
xchg
sbb
mov
cmpsb
mov
xor
or
divb
lahf
push
fsubs
mov
fildl
mov
aam
ds
in
nop
das
push
and
fstps
xchg
sub
clc
xchg
movsb
pop
test
je
jmp
mov
xchg
push
hlt
jno
paddusb
jmp
jb
xor
call
sub
stc
sbb
mov
jne
push
push
adc
imul
subb
cmp
jmp
or
cmp
jge
sahf
sub
cmc
fisubrl
jle
popa
ror
sbb
cmp
sbb
lret
push
sbb
add
jge
daa
cmc
cmp
push
fcmove
mov
jge
cltd
mov
push
inc
fistps
mov
xchg
mov
divl
hlt
ficoms
cmp
ficoml
add
xlat
clc
ja
mov
add
pop
xor
xchg
xchg
sbb
sub
push
cmpsb
mov
rsqrtps
mov
rolb
sub
xchg
push
and
mov
popl
cmc
shlb
push
lret
pushf
daa
rorl
ss
and
sbb
popf
sete
push
in
js
lock
sub
aad
ss
dec
arpl
jmp
imul
inc
push
iret
lods
sti
adc
lret
pop
jo
pop
aas
outsb
mov
adcb
shl
out
xor
push
mov
cmpl
and
xchg
mov
out
fcomp
in
es
mov
sbb
faddl
hlt
dec
roll
inc
cmc
sti
ficoms
in
push
iret
test
inc
aas
xchg
inc
cmp
xor
fbld
adc
jp
pand
push
xchg
fmuls
add
leave
jbe
fdivrs
inc
fsubrp
cmp
loopne
mov
xor
jae
cltd
push
out
in
jle
add
dec
jnp
add
nop
xchg
lahf
inc
mov
push
mov
push
into
pop
sarl
scas
and
jae
cmove
mov
outsb
mov
inc
mov
jle
rorl
adc
sbb
adc
imul
dec
ja
pop
rcrl
mov
mov
scas
ja
mov
mov
add
outsb
pop
xor
lods
push
lds
mov
in
adc
cmp
dec
iret
mov
inc
ja
sti
inc
arpl
add
sub
out
clc
cwtl
lcall
mov
nop
aaa
rcrb
movsb
or
lret
dec
enter
mov
and
test
or
mov
mov
xor
lahf
inc
or
movl
mov
xchg
and
mov
scas
fildl
jae
jge
scas
cmp
ret
loopne
mov
jno
daa
enter
xchg
pop
test
xchg
mov
nop
or
lods
xchg
enter
cmc
cmpl
fcoms
sbb
int
adc
or
ja
dec
jle
ds
cmpsb
into
scas
jp
fiadds
dec
sub
orl
fcomi
and
mov
test
in
out
pop
add
pop
mov
mov
push
xor
lock
in
fmull
push
mov
xchg
dec
jle
in
in
loope
mov
js
lea
push
imul
cmp
pop
rclb
add
imul
mov
mov
fsts
cmp
xchg
and
bound
inc
pop
fdivs
fnstsw
fsts
pop
fbld
inc
imul
lods
clc
fistpl
loope
mov
dec
pop
lcall
push
and
les
inc
cld
mov
and
fnstenv
mov
cmp
lret
lock
push
jne
int3
or
shrb
or
mov
addr16
lret
inc
push
rcrl
adc
sbb
xor
das
sbb
pop
lcall
add
xor
pop
pop
aas
inc
int
lahf
call
call
gs
pop
in
std
mov
pop
xor
push
nop
les
mov
leave
pop
enter
or
inc
xchg
lods
jmp
pop
mov
fsubrs
mov
dec
jns
sub
add
adc
xchg
xchg
mov
rorl
paddd
cli
cltd
out
dec
push
xor
int
scas
mov
pop
sbbl
out
roll
cmp
inc
dec
fwait
sub
pop
daa
rorl
dec
sbb
aas
rclb
test
push
cmp
test
push
lret
hlt
jecxz
pop
dec
mov
pop
sbb
cs
push
out
popa
sub
shrd
or
jnp
mov
lds
mov
adc
int3
mov
jecxz
inc
cs
push
mov
jns
cmp
jl
push
mov
mov
sub
lahf
adc
fwait
ret
aas
adc
push
rorl
xor
cli
fcoms
std
repz
call
aam
incl
push
inc
mov
sbb
shrd
mov
insb
es
int
fwait
push
testb
cltd
lcall
lds
stc
push
dec
pushf
adc
and
mov
cmp
cmpsl
cmp
addb
adc
outsb
idivb
mov
daa
mov
xor
inc
xor
fnstenv
stc
inc
jg
mov
fldcw
stos
adc
push
je
cs
scas
mov
mov
adc
inc
adc
fstpt
fwait
sub
lock
jecxz
hlt
mov
mov
idiv
xchg
fildl
in
mov
outsl
jecxz
add
pop
negl
lods
je
jb
lahf
clc
fisttpll
in
inc
xchg
movsb
sahf
inc
shr
xchg
cmc
lret
cmpsb
ljmp
stos
push
aas
push
arpl
adc
or
sbb
daa
mov
pop
bound
and
mov
xor
xor
std
mov
into
inc
or
inc
mov
xor
in
sbb
fs
cmpsb
pop
inc
sahf
jne
es
bound
cli
push
adc
xchg
loope
pop
dec
call
jo
mov
push
mov
inc
cmp
push
xchg
outsl
loop
shll
cmp
popf
mov
testb
cmpl
rclb
aas
sti
js
repnz
jg
out
aam
sbb
pop
hlt
mov
aad
loop
push
dec
jecxz
bsr
push
in
bound
loope
nop
mov
adc
jle
jle
xlat
push
xchg
leave
sub
push
inc
mov
fwait
sub
jecxz
xchg
fwait
mov
roll
xor
xchg
jge
inc
bound
nop
icebp
and
stc
and
stc
leave
xor
gs
add
xchg
andb
sbb
pop
popa
in
push
sbb
cmp
repnz
aad
jmp
mov
imul
std
inc
inc
and
sub
jl
pop
mov
rorb
mov
or
pop
cwtl
jne
mov
jmp
and
nop
iret
daa
lock
inc
mov
ret
mov
scas
cmp
iret
sbbl
stos
sub
dec
sub
sti
insl
je
adc
xchg
sbb
push
jmp
pushf
push
inc
or
jnp
loope
or
pop
int3
popa
jp
mov
add
mov
insb
or
cwtl
bound
lods
push
push
dec
insl
fstpl
test
dec
pop
dec
mov
bound
ret
sub
or
jl
gs
sbb
and
bound
outsb
shlb
dec
les
imul
xchg
xor
faddl
jmp
popa
sbb
xor
and
dec
loope
sbb
push
push
jmp
pop
cmpsb
rcr
pop
in
shlb
mov
mov
jp
in
pop
clc
mov
shll
and
loope
lcall
dec
add
mov
je
cmpsb
into
cmp
push
pop
loopne
pop
into
test
lock
mov
mov
xor
fs
sbb
adcl
insb
xor
and
std
outsl
fidivrs
imulb
je
pop
cli
mov
loop
icebp
pusha
push
dec
popa
sub
es
adc
and
fsts
cmp
lahf
test
mov
jle
aas
push
or
js
pop
inc
xlat
adc
cmc
test
insb
int3
inc
ljmp
daa
lds
push
js
pop
shl
fcoms
sahf
adc
and
setb
sbb
and
es
enter
inc
repz
pushf
mov
push
leave
ljmp
imulb
lds
push
and
xor
jmp
out
dec
pop
ret
jne
outsl
inc
popf
fs
pop
jp
and
lcall
hlt
jecxz
sbb
out
pop
ds
clc
or
daa
cmp
mov
fdivs
lods
imul
je
and
mov
cld
adcb
fiadds
test
cmpsl
jo
or
jno
push
cld
mov
aad
mov
stos
loopne
dec
or
sub
outsl
outsl
dec
sbb
int
add
loope
sarl
jmp
fdivrl
adc
sub
adc
arpl
mov
xor
sbb
add
xchg
call
jecxz
fistpll
mov
das
lret
xor
fisttpll
dec
inc
out
sahf
cmp
xor
pop
xor
push
cmpsb
shrb
jae
rol
xchg
cmp
push
daa
jae
int3
fs
lahf
pop
cmp
into
aas
notl
imul
lret
pop
sub
fdivl
lahf
xor
mov
scas
mov
loopne
in
mov
insb
jmp
mov
and
enter
js
mov
dec
idiv
add
xor
adc
jbe
bound
movsl
cmc
jp
cmpsl
mov
subb
mov
inc
addr16
add
and
inc
data16
xchg
xlat
inc
jb
ss
in
dec
jbe
sahf
stc
rol
and
sbb
mov
jo
shl
lods
mov
in
or
scas
aam
mov
pop
jmp
lods
dec
fcoml
push
inc
mov
jnp
pop
sahf
imul
dec
out
aas
push
mov
and
push
loop
jg
or
dec
add
outsb
sub
repz
cmc
mov
jne
sbb
mov
in
dec
xchg
lcall
sbb
or
xorb
sahf
fldcw
adc
inc
pop
add
rorb
sub
adc
adc
pop
push
add
cli
enter
repnz
cmc
xchg
in
sahf
decb
test
fcomps
sub
push
setnp
test
mov
mov
sahf
cmc
add
fdivs
jo
mov
leave
pop
addl
dec
pop
loop
pop
out
add
and
xchg
and
fwait
imul
repnz
mov
jg
mov
mov
cmc
adc
mov
leave
fwait
dec
sbb
pop
rclb
sub
aad
push
mull
mov
insl
push
out
adc
jns
jmp
rcll
aam
or
push
and
mov
pushf
xchg
mov
push
test
cmp
inc
movsb
js
mov
mov
arpl
cmp
sbb
xchg
std
xchg
push
jne
out
jae
int
int3
mov
leave
push
int3
add
adc
dec
xchg
lret
pop
loopne
mov
movsb
sub
mov
dec
xchg
inc
insw
xchg
xlat
push
lock
and
idivb
mul
loopne
xchg
jg
fdivrl
dec
js
xor
sub
cwtl
add
or
xchg
dec
testl
cli
sbb
in
and
cmp
sbb
jnp
pusha
aas
mov
mov
jge
loop
mov
sbb
mov
mov
push
pushf
leave
subl
sbbl
leave
inc
loopne
insl
es
mov
pusha
sbb
ljmp
in
icebp
or
xchg
or
cmpb
and
fadds
jnp
outsb
jae
adc
gs
sti
pusha
jnp
sbb
jb
pop
adc
popf
ret
addr16
cwtl
pusha
repnz
in
in
fwait
icebp
pop
inc
int
lcall
sahf
push
fwait
adc
or
fmuls
addl
pop
loop
sub
jae
xchg
inc
mov
xor
out
inc
fwait
test
dec
leave
inc
stc
inc
sub
mov
adc
js
adc
iret
xchg
cmp
aam
mov
or
loopne
or
mov
dec
xchg
cmp
cmp
lods
push
stc
scas
cmpsl
inc
jg
pushf
std
divb
int3
xchg
stc
mov
lea
cmp
lcall
repz
fstpl
sbb
mov
aas
in
jno
mov
mov
and
fs
movsl
lret
cmp
mov
insb
movsb
and
mov
xor
insb
dec
and
loope
or
sub
out
outsb
repnz
inc
loop
dec
xchg
cmp
rcrl
idivl
cmp
adc
leave
mov
in
jae
mov
daa
dec
dec
or
in
fs
outsb
or
inc
push
xchg
fistpl
add
or
out
inc
stos
inc
cmp
clc
push
dec
stc
std
test
mov
test
dec
and
aaa
cltd
mov
dec
mov
mov
dec
negl
mov
out
aaa
or
or
mov
imul
xlat
push
cmp
adc
inc
or
sarl
pop
xchg
and
ljmp
mov
stos
sti
add
dec
fsubrl
pop
shll
inc
sub
jle
out
sbb
pusha
jecxz
dec
leave
sub
xchg
lcall
movb
shll
add
xor
cltd
out
xchg
jecxz
in
cmp
into
add
mov
mov
mov
cmp
push
ss
rcr
lcall
or
aam
pop
lock
mov
loopne
outsb
push
add
and
ss
adc
daa
fstl
cmp
inc
into
xor
mov
outsl
cmpsb
mov
dec
pop
out
mov
shr
cli
and
cli
mov
addr16
aaa
stc
imul
fidivrs
pop
je
fnstcw
inc
fidivl
xchg
mov
sbb
dec
stos
sbb
dec
mov
dec
stc
xor
out
xor
cmp
mov
imull
push
gs
sbb
testb
stc
into
jno
out
mov
and
mov
add
push
xor
in
cld
dec
clc
mov
in
jg
and
or
jmp
xchg
pop
out
xor
mov
cmc
xchg
mov
ds
arpl
cmpb
adc
jle
jl
pop
dec
in
pop
push
aaa
cmp
repnz
pop
mov
sbb
fistpl
fsub
add
mull
and
dec
fsubr
bound
sbb
cmp
int3
jl
or
pop
bound
or
data16
and
xchg
push
adc
pop
aas
sub
jge
push
push
adc
push
fwait
mov
and
scas
test
clc
and
mov
ja
mov
jno
ja
xchg
out
lods
inc
lret
cs
mov
mov
jp
jmp
data16
nop
add
cmp
aad
dec
or
mov
mov
adc
std
push
mov
xor
leave
mov
nop
daa
in
lret
jns
scas
pop
push
ljmp
repz
xor
cmpsl
sub
std
dec
daa
mov
rorb
mov
mov
dec
xchg
xchg
and
addr16
cmp
xor
sub
call
imul
int3
or
in
xchg
in
pop
rcrl
test
adc
pop
cmp
pop
cmc
adc
cmp
cs
or
popl
and
fucom
inc
add
int
je,pn
insb
div
push
aas
movsl
or
jne
movups
xchg
clc
inc
mov
dec
inc
stos
add
cmp
cvtps2pd
jmp
subl
or
jg
ret
pop
dec
sarb
inc
mov
jae
xor
inc
jg
insl
xchg
loope
xchg
mov
jg
idivl
sbb
push
imul
stos
lret
sub
cmp
push
cwtl
repz
dec
push
xor
push
les
push
add
pop
clc
adc
stc
pop
dec
lcall
or
and
out
fwait
add
pop
cmc
inc
pop
dec
clc
cmp
and
pushf
outsl
inc
xchg
testl
sbb
faddl
dec
jle
cmpl
fcoml
pop
jmp
or
xor
andl
in
aam
loop
mov
in
inc
in
mov
pop
loop
push
outsb
cld
pop
add
mov
in
xor
sub
push
mov
jecxz
push
loop
outsb
jno
sub
mov
jg
daa
mov
into
pusha
in
aam
leave
in
inc
dec
divl
popa
cltd
pop
push
mov
lea
pusha
cmp
inc
test
sub
mov
dec
je
imul
hlt
and
mov
jns
mov
push
and
pextrw
or
leave
or
pushl
jnp
out
or
lds
mov
jmp
cmp
nop
jbe
lock
push
mov
jne
jo
mov
mov
mov
or
addl
sti
rclb
nop
xor
sub
jbe
push
nop
fildll
imul
test
decl
jo
or
repz
hlt
jmp
out
sbb
clc
pop
cmp
int
sbb
cmp
cmp
xchg
xor
push
and
mov
das
subl
mov
mov
mov
or
es
movsl
xor
and
dec
sub
bound
inc
xchg
fnstsw
inc
dec
insl
mov
loop
lea
roll
adc
and
cli
mov
jbe
cwtl
inc
dec
daa
test
inc
imul
dec
je
or
nop
inc
aas
add
or
and
push
pop
scas
loop
pusha
cmpsb
mov
aas
insl
xchg
sub
fsubl
jle
and
lret
xchg
out
ficoml
cmp
xchg
ljmp
scas
in
push
xchg
stos
cmp
push
cmp
dec
cltd
jge
jl
inc
ss
add
imull
fistps
inc
dec
inc
ds
pusha
push
in
dec
enter
cmp
mov
int3
je
cmp
sub
push
out
nop
xor
mov
gs
loope
add
rcrl
mov
cmp
adc
bound
insl
and
and
add
inc
sub
rorl
sub
lods
pop
insl
andl
aam
push
lods
sub
arpl
movsb
jge
andl
cwtl
dec
cmp
xchg
or
push
dec
das
xorl
jmp
sub
ret
push
inc
outsl
test
je
add
sub
das
sbb
loopne
test
in
bound
xor
enter
rep
loope
insl
sbb
cmpb
inc
movsl
push
dec
test
mov
lea
enter
cmp
lods
insb
movsb
cld
push
daa
or
adc
out
stc
adc
xchg
icebp
fstp
stos
out
jecxz
hlt
push
xor
lret
imul
xchg
sbb
out
add
repz
mov
test
insl
movsb
enter
setnp
inc
sbb
dec
jle
arpl
dec
inc
xor
dec
dec
out
leave
xor
xchg
jge
pushf
mov
jo
lock
xchg
adc
jg
jns
pop
iret
scas
dec
in
fs
out
pop
jno
clc
clc
int
mov
int3
inc
iret
adc
xchg
popl
stos
sub
loope
mov
pop
jbe
arpl
push
xor
mov
fistps
sub
clc
std
aam
ds
jo
popa
rolb
mov
mov
push
xchg
cltd
int3
pop
pop
arpl
add
pop
push
sub
adc
pop
jp
cwtl
mov
add
xlat
jmp
scas
outsb
or
jecxz
inc
cs
sub
push
jo
cwtl
test
sub
mov
jae
inc
cmp
push
dec
adc
push
icebp
out
xchg
ret
cli
daa
std
pop
aad
jae
xor
in
and
jb
clc
cmpsb
lret
cltd
es
push
sub
sbb
mov
das
jbe
loope
gs
mov
jbe
into
sbb
lret
js
es
mov
in
cmpsl
test
pop
pop
and
stc
sbb
xor
rcl
jbe
out
subl
cmp
mov
adc
outsl
frstor
incb
mov
sbb
neg
mov
pop
jmp
jb
shll
mov
iret
pop
loopne
xlat
sbb
cmpsb
lret
dec
jl
xor
ja
dec
adc
dec
pop
xchg
push
pop
repnz
cwtl
arpl
pop
inc
insl
ret
or
mov
scas
mov
lea
sub
aaa
jle
or
mov
fcompl
aas
sahf
jg
cld
inc
xchg
jl
push
push
mov
cmpsb
jnp
mov
jge
ja
pop
lock
stos
push
outsl
and
jp
hlt
add
or
xchg
in
dec
add
iret
mov
cwtl
mulb
add
lea
enter
es
mov
mov
push
jecxz
adc
mov
in
dec
repz
mov
loopne
jle
mov
popf
out
popa
lret
mov
mov
jne
or
push
mov
xor
adc
in
shrb
ljmp
mov
cwtl
in
data16
mov
sbb
xor
inc
sbb
xchg
xchg
push
mov
mov
jne
je
je
pop
add
adc
cmp
outsl
sahf
jmp
test
out
xorb
fidivrl
pusha
shll
repz
ffreep
test
punpckhdq
mov
xchg
xchg
cmp
lods
ret
mov
push
sub
dec
xor
adc
pusha
push
pop
pop
pop
sub
pop
inc
stc
jno
xor
add
mov
je
cmpl
fwait
push
push
mov
adc
jg
fwait
inc
adc
out
jecxz
sbb
xchg
std
out
xor
or
sub
lods
sbb
adc
push
mov
dec
mov
dec
fldl
push
aas
stos
ret
subl
in
lret
loopne
dec
xor
rorb
push
ja
xchg
jne
dec
out
fadd
and
aad
push
jbe
movsl
mov
pop
cmc
mov
lock
sbb
jge
push
aam
test
fwait
push
push
das
adc
inc
push
xchg
inc
cmp
pop
jmp
sub
inc
lahf
aas
cmp
std
sbb
jmp
mov
fildll
into
lcall
push
cmpsl
imul
and
dec
jo
fstl
fstl
imul
dec
dec
pusha
lea
hlt
rolb
xor
dec
jmp
xor
mov
xchg
add
or
inc
cmpsl
fwait
jbe
jp
pop
sbb
cmp
jle
mov
loope
addr16
adc
popf
or
push
popa
mov
loop
js
stos
das
shrb
ds
cmp
cmp
mov
sub
leave
cmp
out
ret
mov
stos
jnp
popa
sub
cmp
sbb
ficoms
enter
sbb
movsl
out
stos
cld
sti
xchg
xor
dec
lret
cmp
jmp
push
dec
inc
subb
mov
lret
jae
xchg
adc
mov
mov
insl
xchg
clc
cmpsl
inc
pop
inc
cmp
jae
out
fs
pop
mov
nop
repnz
lcall
mov
mov
mov
push
cmp
test
mov
jne
lret
cmp
scas
fidivs
inc
test
mov
les
mov
ficoml
sub
in
push
dec
leave
xor
cmp
or
mov
dec
add
insb
insb
shlb
pop
inc
mov
adcl
jmp
jns
dec
sbb
test
lods
xchg
sub
cmpsl
xchg
pop
adc
push
hlt
out
stos
jns
xchg
rcll
repnz
or
stos
dec
rcrl
xchg
pop
stc
sahf
scas
jecxz
insl
pop
sahf
movlhps
jecxz
leave
sbb
pmuludq
fmull
stos
and
mov
inc
enter
ret
cwtl
popa
gs
lods
dec
dec
xchg
sbb
pushf
add
sahf
bound
mov
fwait
lock
adc
aaa
jmp
dec
dec
les
xchg
jns
out
or
or
insl
stos
ja
inc
fucomp
fbstp
clc
inc
mov
mov
sbb
sbb
cmp
mov
dec
in
in
aad
xchg
popa
pop
push
in
dec
sbbb
int3
fsts
mov
cmp
and
out
es
in
fwait
sarb
mov
sbb
push
xor
lcall
out
in
inc
or
jno
cmp
jl
mov
int3
lea
loope
sarl
es
hlt
movsb
outsl
add
rcll
scas
les
jmp
push
pop
fldcw
mov
push
xchg
fwait
test
xor
loope
stos
inc
xchg
xchg
xor
mov
xchg
jecxz
imulb
ljmp
sub
or
sbb
cmp
jae
test
mov
test
mov
sub
cli
cmpsb
addb
fisubrs
iret
cli
push
xor
outsb
sbb
push
sub
mov
rcll
lcall
cmp
mov
inc
insl
in
jno
adc
sub
mov
adc
add
hlt
sbb
xchg
in
lahf
test
sub
mov
cwtl
das
pop
pop
xor
sbb
rorb
sub
inc
fadd
xor
adcb
jecxz
sub
pop
sbb
dec
jge
pushl
push
xorl
mov
jge
mov
add
nop
mov
out
or
in
out
rclb
or
ret
and
lods
loop
jno
clc
mov
inc
add
xlat
adc
fmul
les
mov
mov
sahf
daa
sub
rcl
ja
daa
cltd
insb
enter
push
or
mov
cmp
lods
loopne
add
mov
or
sar
lret
pop
and
push
rorl
pop
pop
adc
adc
jle
std
push
es
lea
je
pop
fsubl
xor
in
and
leave
dec
and
push
fisttpl
hlt
push
dec
pop
int
mov
dec
push
push
mov
jns
popa
jge
or
xor
popl
push
les
jp
xor
inc
repz
mov
int
xchg
jge
inc
pushf
cmp
cli
shll
cs
roll
jo
adc
jnp
xchg
fs
inc
adc
ret
shrb
or
xor
jns
iret
in
push
mov
lret
fnstcw
sub
loope
mov
fnop
icebp
inc
in
mov
cmp
loope
mov
shll
jp
xor
cmpb
push
popa
neg
repz
adc
and
inc
dec
das
mov
jb
movsb
shrb
in
or
into
push
jae
inc
push
add
ss
sti
push
or
pop
jbe
jae
mov
popa
data16
gs
jl
jmp
repnz
aam
adc
mov
iret
inc
fs
inc
sub
jo
sub
mov
negb
fdivs
inc
inc
jno
pop
pop
jle
xchg
insb
sbb
inc
mov
arpl
cmc
mov
cmp
movsb
add
or
jge
lods
pop
repz
mov
and
dec
and
stos
cltd
lret
xor
int3
enter
push
out
pop
or
dec
or
lock
aam
dec
ret
rcr
push
sbb
and
mov
and
sbb
push
out
xchg
fldl2t
sbb
mov
add
lods
cmp
inc
adc
mov
mov
push
adc
xchg
jmp
dec
addl
adc
push
out
xchg
outsb
aas
xchg
jl
cltd
mov
add
xchg
js
bound
stos
and
xor
adc
rorb
xor
dec
inc
ret
outsl
insl
out
mov
push
xchg
mov
jl
push
cmp
mov
jg
sbb
mov
mov
std
stos
pop
test
cltd
jnp
shl
bound
stos
scas
nop
fwait
in
in
add
xchg
jl
mov
push
movb
dec
mov
and
ds
mov
xchg
popa
pushf
jne
clc
and
cmp
ds
enter
add
jl
int
sbb
mov
ret
jne
sub
ret
jp
mov
or
pop
or
scas
sbb
push
pop
pop
sbb
pop
out
cmp
mov
lock
xor
pushf
inc
dec
mov
test
std
and
data16
dec
jl
push
mov
add
xor
push
decb
fimull
shrb
pop
xchg
in
mov
inc
adc
sbbb
mov
push
add
ficomps
mov
clc
mov
stos
movsb
pop
push
lods
add
push
xchg
lcall
lds
xchg
xor
inc
ds
fldl
aam
xor
enter
jmp
and
pop
adc
pop
inc
lods
lods
mov
out
push
stos
dec
sbb
out
jns
push
cmp
ss
sub
mov
fwait
leave
push
pop
mov
pushf
aaa
cmp
mov
mov
in
and
xchg
ss
lret
mov
inc
push
mov
cmpsb
or
test
fmuls
in
lods
xor
sar
pop
cmp
jno
imulb
mov
lahf
or
in
mov
nop
jmp
insl
arpl
roll
mov
inc
fistpl
andl
in
cltd
pop
push
cmp
notb
aaa
fmull
adc
repnz
fnclex
andl
negb
adc
out
push
xchg
jle
popf
cld
dec
push
dec
or
test
pop
xlat
test
add
scas
es
stos
rcr
xchg
mov
stos
jecxz
jecxz
rorl
fistpll
cmpsb
mov
pusha
rorb
insl
xchg
les
xor
mov
xchg
mov
aam
xor
in
out
fimull
add
addr16
sub
ret
sub
dec
test
dec
add
dec
pop
xlat
ss
dec
mov
and
mov
mov
and
lahf
popa
xor
cwtl
or
mov
mull
sbb
int3
out
add
mov
add
jg
ret
jbe
call
xor
insl
lods
sti
aad
ja
arpl
mov
movsb
cld
or
push
push
adc
nop
inc
sub
fwait
and
lret
les
push
inc
inc
fiaddl
push
nop
insb
and
fidivl
mov
cmp
out
cmpsl
insb
mov
mov
mov
xchg
shll
fcmovu
jp
bound
adc
or
xchg
adc
test
out
out
mov
add
ret
int3
repnz
aaa
adc
loop
or
mov
fldcw
or
xchg
sti
sbb
fidivrl
lret
adc
jbe
repz
or
das
fdivrs
or
mov
loope
icebp
jo
or
jns
cltd
mov
mov
in
mov
gs
fnsave
shll
int3
out
in
mov
pop
int3
imul
jae
cmp
rorb
js
add
hlt
inc
scas
mov
jmp
repnz
mov
xchg
cmp
push
insl
sub
cmp
stos
sbb
je
rcll
xor
cld
push
test
fwait
sahf
cmpsb
mov
inc
and
jmp
jb
add
cs
nop
dec
jg
mov
cli
or
cmp
movsb
mov
sbb
xchg
aam
jl
imul
hlt
xrelease
repz
mov
adc
popa
das
jmp
addr16
inc
ss
imul
xchg
adc
leave
adc
pop
sahf
icebp
push
js
in
and
jle
lcall
leave
out
push
loope
mov
and
out
dec
rcr
and
xchg
dec
xor
and
and
push
mov
mov
push
sbbb
pop
mov
mov
cltd
mov
addl
adc
mov
xlat
mov
shlb
js
cmpsl
mov
pushf
jmp
or
sub
jb
fcomps
daa
call
cltd
mov
aaa
dec
dec
outsl
push
call
push
cmp
xor
int
pop
xchg
jbe
add
iret
sub
lahf
fst
adc
loopne
mov
mov
divl
je
xor
cs
pop
aaa
cld
in
push
xchg
jge
mov
out
add
in
mov
or
stos
cmpsl
jns
fcomp
xchg
clc
shl
aas
sub
cs
packssdw
imul
xor
push
into
out
clc
cmp
jbe
popf
or
or
inc
and
test
out
cwtl
fidivrs
repnz
add
popf
push
pop
pop
movsb
adc
mov
sub
dec
xchg
mulb
cmp
and
pusha
jae
xor
and
test
cli
movsb
add
repz
cwtl
dec
and
mov
clc
call
movsb
movsl
roll
cli
mov
push
fists
idivb
nop
jge
add
nop
repz
sbb
call
ss
add
popf
pushf
repz
rcl
ret
cmp
mov
dec
xor
push
push
sub
push
call
je
gs
bound
pop
cmpb
inc
shlb
scas
inc
adc
push
enter
cmpsl
ficoml
sbb
mov
inc
gs
enter
or
mov
decb
stos
xlat
push
jbe
lods
jl
addl
das
iret
pop
adc
inc
movsl
push
dec
mov
jae
mov
pop
jmp
sub
out
div
and
push
andb
dec
mov
cmpb
lret
pushf
and
mov
push
dec
jp
fsubr
fnstsw
push
jmp
notl
adc
adc
clc
add
and
orps
mov
cmp
outsb
pop
jl
jae
pushf
jbe
jmp
popf
repz
shll
cwtl
jp
nop
shr
lcall
xchg
in
ss
push
xor
sub
mov
push
fldenv
testb
les
pop
orb
out
mov
dec
jmp
sub
mov
inc
xor
sbb
and
pop
inc
mov
push
pop
repnz
mov
aam
jge
imul
and
pushf
push
das
adc
call
mov
mov
mov
lret
add
jno
idivb
inc
xchg
jnp
cmp
xchg
push
int
lcall
pop
pop
pop
psubd
cli
cmc
xchg
sbb
out
cmp
or
lds
sbb
lds
mov
xchg
test
out
and
pop
push
mov
mov
lret
shrb
jp
popf
sub
jmp
xor
repz
push
xchg
and
mov
in
sbb
je
inc
loope
les
sahf
fisubl
sbb
cwtl
inc
jne
int
jnp
test
xchg
pusha
addb
mov
xchg
sbbl
dec
pop
cmp
fldcw
mov
sub
mov
aam
ret
jp
ror
cs
pop
ja
add
ja
jb
addr16
dec
inc
dec
sub
mov
sub
sbb
ljmp
sbb
shll
lds
into
cmc
test
xlat
fdivs
js
and
out
and
stos
sahf
xchg
test
rcrb
ljmp
dec
shrl
dec
fwait
mov
mov
orb
daa
jle
cmp
stos
pusha
cwtl
cltd
lret
adc
inc
adc
add
lea
jns
xchg
ret
into
push
jmp
stos
mov
cmc
fcoms
mov
ljmp
mov
sub
in
add
add
jbe
xor
lret
sub
or
ljmp
xchg
mov
push
xchg
mov
mov
mov
xchg
fldl
mov
or
jne
insb
cmpsl
mov
int3
and
xchg
lock
jg
jbe
inc
jle
xor
daa
jb
in
mov
test
ds
jle
adcl
pop
adc
mov
xlat
fs
idivb
cmp
pop
cmp
add
mov
popa
xor
js
cmp
arpl
xchg
push
xor
pop
and
js
addr16
out
mov
test
push
lods
fdivrs
int
jge
mov
mov
sub
pop
adc
pop
sub
fs
adc
pop
xor
out
stos
sbb
pushf
lcall
je
adc
mov
add
adc
pop
adc
push
sbb
push
push
scas
and
adc
out
scas
fnsave
xor
add
popa
jns
je,pt
pushw
enter
add
adcb
std
repz
iret
divb
pop
add
dec
js
sbb
push
and
dec
cmp
add
call
jbe
fnstenv
lock
outsb
cs
xor
mov
add
out
mov
dec
sub
xor
or
cmp
lds
inc
lahf
imul
jmp
rcl
je
ret
mov
pop
sub
mov
dec
daa
clc
and
mov
cmp
pop
popf
mov
push
mov
dec
repnz
aas
xchg
cli
adc
push
xchg
std
xchg
lea
lea
aas
xor
adcl
dec
fdivs
pop
outsb
jmp
int3
add
stos
orb
shlb
call
cmp
pop
aaa
sahf
scas
repnz
rcrl
adc
and
xchg
js
pop
arpl
xchg
jl
dec
jae
or
jns
outsl
sbb
dec
mov
xchg
rorl
gs
mul
cmp
in
sub
and
mov
insl
std
pop
es
sub
cs
mov
and
xor
jnp
cltd
jne
dec
cmp
int3
fs
mov
jmp
xor
mov
fnstenv
sti
test
mov
insb
gs
gs
or
in
jns
adc
je
pushf
jle
leave
shlb
loopne
xorb
shrb
fadd
std
push
add
jnp
aaa
mov
adc
dec
xchg
add
sub
inc
cmp
clc
xlat
addl
cmp
test
fstl
out
imul
mov
aad
lcall
icebp
pop
jle
adc
mov
pop
jns
cmp
xor
dec
xchg
lods
shll
push
out
lret
push
cltd
mov
test
push
push
adc
xchg
dec
inc
fcoms
addr16
mov
sub
fldenv
inc
clc
or
mov
test
mov
jb
stc
mov
and
das
mov
lods
mov
adc
andl
aaa
pop
adc
loop
mov
mov
mov
cs
jp
lahf
mov
xor
out
jg
repz
out
jmp
repz
imul
loop
dec
ja
fdivrl
add
pop
test
outsl
mov
fs
cmp
and
xchg
rcrb
jnp
add
and
xor
mov
mov
addr16
pop
lahf
imul
cmp
test
push
loope
dec
adc
inc
nop
cmp
and
mov
insl
cmpsb
in
mov
push
shlb
aam
mov
loop
mov
add
fnsave
call
mov
fistps
mov
push
rcr
sar
mov
adc
add
ds
in
out
push
mov
fcoml
movsl
dec
inc
call
fisttps
sbb
out
movl
add
filds
shlb
pop
and
jae
jp
dec
mov
xchg
jge
jo
in
push
inc
inc
mov
inc
dec
jp
inc
pslld
sub
hlt
xor
mov
pop
jne
sbb
and
or
or
and
dec
mov
aaa
adc
sub
adc
out
fdivrs
test
aad
shlb
cwtl
sarl
aam
jp
jecxz
pop
dec
addr16
mov
adc
jae
xor
js
ja
inc
jbe
sub
shll
imul
pop
adc
dec
cli
and
icebp
jle
int
xchg
xor
setp
inc
int
imul
xlat
outsl
lret
mov
cmp
dec
add
loope
pop
xchg
pop
xor
jecxz
and
sbb
aas
bound
inc
jp
mov
pop
sub
adc
arpl
daa
xchg
cmpsb
aas
leave
hlt
xchg
insl
shl
rolb
xchg
lock
ja
std
scas
mov
sbb
pusha
aas
adc
and
adc
stos
hlt
adc
mov
mov
cmc
and
mov
nop
into
mov
scas
fisttpl
lahf
ficoms
jge
and
test
sti
xor
inc
out
filds
in
mov
pop
sub
and
pop
ss
xor
dec
repnz
xchg
nop
pushl
repnz
in
cmp
lea
pop
shlb
jo
popa
mov
call
pop
inc
inc
pop
sti
jecxz
lret
movsb
xlat
add
add
shrb
or
pop
idivb
mov
cwtl
sub
ljmp
loop
adc
sub
iret
rcl
sbb
dec
mov
into
add
add
cwtl
sbb
mov
arpl
xchg
sti
imul
sbb
sarb
push
lock
cmp
shlb
loope
fstpl
add
push
jle
adc
xor
shrl
mov
pop
xchg
ds
mov
sbb
movl
dec
sbb
rcr
les
xor
lret
or
lret
pop
addr16
in
inc
outsl
mov
mov
pop
dec
movsl
ret
imul
xchg
sarl
pushf
mov
test
mov
pushf
out
jns
mov
xor
jmp
out
and
mov
adc
or
popa
push
std
pop
loop
loop
pop
imul
dec
sub
cmc
xchg
jle
jecxz
imul
push
movsl
out
insb
cmp
dec
adc
push
fdivs
insb
sub
mov
out
fsub
cmp
push
sbb
jmp
xchg
xlat
addr16
push
mov
hlt
ret
sbb
add
pop
test
js
pusha
add
shrl
push
fidivrl
popa
fcompl
sti
add
int
imul
aad
cmp
xchg
out
jbe
mov
pushf
xlat
repnz
fldenv
movsl
rolb
inc
jo
xchg
and
and
jp
adc
or
inc
adc
xchg
outsl
add
mov
pop
data16
mov
rorl
roll
popa
stos
dec
push
stc
insb
leave
add
adc
aaa
adc
clc
test
xchg
addr16
data16
sub
jb
cld
out
outsl
adc
fidivs
pop
popa
add
sar
negb
xor
adc
dec
outsb
call
push
enter
xchg
inc
es
repnz
insl
cli
mov
dec
fs
jg
adc
adc
mov
inc
je
mov
dec
push
inc
aad
cmpsl
lret
pushf
pop
repnz
add
test
push
lods
jle
xlat
jnp
je
xor
shl
fisttpl
nop
mov
and
fdivs
arpl
sub
decb
push
test
xchg
cld
mov
aam
arpl
aad
pop
enter
cmp
in
fdivs
sbb
aam
fs
int
xor
repnz
or
cltd
clc
jb
dec
icebp
lret
mov
or
dec
mov
sub
outsb
out
or
push
sub
xor
mov
addr16
imul
jne
push
sub
jbe
jae
mov
push
rorl
sbb
push
mov
and
lcall
sub
cmp
sub
jecxz
and
outsb
ja
xor
push
adc
sbb
ss
jmp
pop
mov
push
sbb
fucomi
enter
bound
push
andl
push
dec
dec
jl
jo
add
in
push
or
cmp
stos
add
jmp
ss
lret
das
xchg
popf
or
fnstcw
and
scas
or
inc
mov
dec
add
pop
lret
mov
sub
mov
push
push
int3
xchg
mov
std
mov
in
inc
sbbl
fdivs
xchg
cs
pop
in
add
ljmp
mov
mov
mov
xor
outsl
scas
push
xchg
movsl
push
adc
xor
sbb
jno
ficoms
insb
mov
insl
pop
imul
fs
loope
call
dec
insb
add
pushf
shufps
jb
pop
stc
aad
mov
mov
sbb
fucomp
loopne
mov
pop
fdivrl
lds
outsl
jge
pop
mov
fcoms
mov
sbb
mov
pop
jle
mov
fisttpll
stc
push
ret
jno
orb
jle
das
push
lods
ret
daa
inc
lahf
inc
in
or
cmp
mov
cmp
cs
lds
mov
push
mov
adc
or
jl
fdivs
ljmp
mov
mov
insl
mov
or
fdivrs
repnz
cmp
and
enter
ja
adcl
notl
loopne
aas
pop
cmp
shr
fidivrs
dec
mov
repz
push
mov
lahf
xor
in
inc
and
xorb
add
push
xchg
aam
ret
outsb
mov
dec
sub
mov
ret
movsb
std
inc
gs
lea
adc
aad
dec
sbb
adc
pushf
xor
stc
mov
mov
jg
xor
xor
xor
lods
mov
pop
mov
xchg
mov
cmpsl
sub
cltd
in
negl
outsb
sub
lods
out
sahf
les
repnz
inc
cmp
nop
test
add
fildl
jecxz
loope
stc
and
aaa
mov
or
inc
loopne
cmc
negb
sub
icebp
into
inc
mov
iret
loopne
ret
push
pop
mov
jg
sti
call
or
or
mov
adc
xchg
push
lcall
in
add
imul
lds
pop
push
dec
xor
adc
mov
repz
push
push
jl
add
jns
xchg
nop
jp
in
jae
push
push
cmpsl
pop
repz
mov
imul
jne
push
pushf
adc
cmp
dec
xor
jo
mov
cwtl
movsb
jb
xor
orl
dec
cltd
lods
aad
mov
pextrw
movsb
sti
pop
push
pop
lock
outsb
pop
mov
adc
sbb
jecxz
dec
dec
jns
mov
into
or
or
pop
sbb
add
and
mov
lret
in
iret
dec
out
jl
inc
mov
fwait
int
push
xor
or
out
jo
cmp
das
mov
test
mov
loop
fstpl
xor
insb
std
xchg
mov
xor
out
rclb
mov
test
out
jmp
enter
dec
mov
or
dec
sbb
jmp
mov
cli
inc
and
mov
rorl
lock
gs
aam
mov
xor
arpl
fbstp
test
test
jle
jecxz
cli
mov
out
gs
xchg
inc
mov
clc
adc
ret
shrb
xorb
ror
xor
inc
repz
mov
rolb
mov
mov
movsb
mov
neg
fldt
insb
xchg
inc
sub
rcr
mov
pop
movsl
pop
lods
adc
lcall
and
or
pop
mov
adc
fs
mov
push
xor
popa
cwtl
jnp
repz
rcl
sub
mov
sbb
and
int3
adcb
push
mov
stc
es
jmp
out
dec
aad
les
push
mov
loope
sub
aaa
das
mov
and
in
sbb
ss
out
push
mov
lds
xor
push
lods
emms
dec
scas
dec
testb
xor
inc
cmpsl
lods
test
test
stos
inc
repz
adc
rcll
fs
cmp
add
outsb
test
mov
add
mov
push
fcomps
push
dec
cmp
jnp
xchg
or
pop
push
jl
out
pushf
cmpb
mov
mov
sahf
in
cmp
lods
and
and
sub
adc
sbb
xchg
jbe
iret
dec
dec
mov
pop
notb
pop
test
das
jp
repnz
push
sub
lea
sub
dec
pop
popa
jp
les
fsubl
leave
and
scas
loop
rcr
hlt
jns
pop
push
inc
cmpl
push
adc
pop
sbb
or
sub
and
and
lods
xor
lahf
add
in
orb
test
pop
jg
fdivs
stos
in
into
imul
xchg
cmp
xchg
jmp
xchg
sub
in
mov
dec
scas
sbb
or
push
push
push
xchg
mov
sub
in
mov
in
cwtl
pushf
jno
lea
xchg
aaa
fildl
xchg
flds
xorb
or
push
pop
ret
fimull
rorl
xlat
sub
repnz
push
push
xchg
insb
mov
test
inc
xchg
fwait
push
xchg
aas
movsb
ret
or
jae
stc
mov
fadd
push
movsb
mov
cmp
les
pop
push
enter
add
jcxz
push
bound
xchg
mov
shlb
sahf
enter
or
adc
sahf
stc
test
stos
loope
adc
sbbb
mov
arpl
pop
movsb
std
divl
idivb
ds
push
jl
push
stos
mov
inc
dec
sbb
lahf
or
out
dec
push
test
fildl
test
push
mov
cmp
outsb
lret
fnstsw
jo
mov
jnp
into
jge
sub
inc
jecxz
je
dec
jns
fdivrl
loop
inc
jg
loope
mov
mov
imul
enter
cmc
xchg
pusha
mov
ja
dec
and
jb
mov
flds
iret
clc
mov
xor
stc
mov
idivb
and
cwtl
lods
call
mov
test
add
mov
mov
lods
cwtl
stos
lcall
addl
push
xchg
mul
inc
fs
lret
jmp
xchg
out
call
arpl
sub
mov
xchg
pop
dec
out
push
mov
mov
adc
call
gs
jmp
and
int3
mov
ss
xor
xor
call
int
pop
movsl
jecxz
add
adc
ret
dec
ss
sbb
in
cmpsb
dec
sbb
pusha
or
or
or
in
and
std
stos
aas
adc
mov
adc
repz
add
mov
xchg
loope
imul
pop
dec
ljmp
pop
push
fwait
je
add
jmp
push
mov
js
xor
pop
es
int3
jns
adc
sub
push
push
mov
outsl
cmpb
ret
or
sahf
cmp
adc
mov
mov
mov
mov
popf
pusha
in
mov
and
in
mov
dec
xchg
aas
add
pop
pushf
out
adc
jb
add
test
std
and
lret
ds
inc
fmuls
push
je
movb
movsl
out
in
push
adcb
adc
cmpb
adc
xchg
mov
mov
xchg
mov
push
jno
cmc
bound
cmpsl
push
aam
dec
mov
fstps
xor
stc
xchg
inc
dec
xchg
lock
xchg
dec
or
scas
fxch
lcall
data16
es
sub
jl
and
lea
cmp
and
mov
imul
lods
jno
pop
faddp
fmuls
mov
mov
pop
sbb
jne
les
into
out
and
push
mov
inc
aas
shll
int3
push
aad
movsb
and
jne
mov
fbld
inc
call
lods
sbb
sbb
cmpsb
ret
sbb
pop
and
jle
xchg
sbb
out
movsl
push
clc
jnp
aam
xchg
in
fdivr
or
data16
cld
cmc
or
loopne
insl
xchg
push
sti
fcoml
loope
aad
sub
or
jecxz
xor
sbb
xchg
fwait
inc
in
cmp
out
mov
in
mov
cmp
or
and
mov
adc
mov
outsl
xor
ret
sub
movsb
mov
call
mov
insb
in
icebp
gs
lock
mov
dec
add
cmpsb
or
adc
adc
cmc
imul
mov
daa
mov
xchg
push
pop
ret
ljmp
cs
xlat
push
fnop
std
mov
addb
outsl
cltd
push
sub
fadd
outsb
push
dec
outsl
push
inc
addl
xchg
icebp
call
pop
mov
imul
lahf
lock
hlt
ja
mov
js
mov
pusha
add
or
pop
push
push
adc
aam
sti
pop
mov
cmpsb
fs
adc
pop
mov
inc
cli
xchg
add
xchg
in
in
insl
andb
push
jle
sub
js
jecxz
les
cmp
ljmp
dec
cmpsb
mov
inc
mov
jne
cmpsl
mov
mov
lcall
sti
out
movsb
aas
pusha
movsl
jl
aaa
fistps
cltd
ret
dec
pushf
push
lcall
xlat
mov
jp
mov
cmp
inc
inc
jecxz
add
aaa
xchg
and
ret
mov
stos
repnz
pop
js
adc
data16
test
in
jne
xchg
jne
pop
pop
shl
and
push
imul
jl
xchg
idivl
sbb
mov
pushw
popf
icebp
cli
and
sub
sbb
test
jl
enter
out
in
sub
pop
loopne
jp
cld
loope
inc
pop
orb
or
addr16
jge
rcr
pop
pop
cmp
mov
mov
push
jbe
mov
fidivl
dec
or
lods
lock
push
cli
lock
mov
jmp
jns
jg
lods
mov
sbb
jae
push
das
cltd
mov
mov
push
sahf
addl
jge
ljmp
shll
fldcw
out
lea
push
lret
push
or
dec
mov
mov
adc
rorl
sbb
inc
pop
sbb
push
mov
mov
in
cmpsl
add
jns
push
xor
jp
js
shrl
popf
out
adc
fwait
cs
mov
jle
pop
je
jle
adc
mov
xchg
add
pop
pop
and
es
xchg
aas
sub
and
fcomp
add
es
xor
out
jae
mov
pop
notl
sub
jae
add
jmp
cwtl
mov
mov
cmp
push
jp
lds
jno
sti
mov
and
mov
mov
jmp
add
fists
ss
cltd
mov
rol
mov
loope
xlat
mov
cld
imul
dec
sbb
dec
test
sbb
jo,pn
mov
fld
mov
fistps
add
inc
push
lahf
pop
aaa
data16
fnstenv
daa
xlat
pop
pushf
xchg
xlat
rcrl
movsb
rorb
int3
push
cmc
out
jns
mov
orb
popa
push
adc
lahf
in
dec
mov
jno
mov
xchg
add
and
push
xchg
cmp
jo
pusha
in
cmp
icebp
out
test
push
mov
push
sub
push
pushf
xor
pop
or
xor
mov
leave
pop
sub
push
mov
mov
sbb
popa
imul
lahf
inc
add
aas
adc
cld
shl
sbb
bound
push
cltd
hlt
mov
cmp
cmp
xchg
push
movsb
ret
mov
jp
sahf
or
je
stos
or
xchg
mov
xchg
test
lret
rcl
pop
pop
ss
shll
test
mov
stc
jecxz
mov
loopne
das
into
inc
dec
stos
cmp
sbb
leave
xchg
jg
mov
bound
aad
cmp
ret
repnz
out
rclb
mov
and
mov
sbb
mov
xchg
dec
adc
sbb
mov
sub
add
adc
push
int3
sub
mov
jae
iret
or
cmpl
shrb
repz
mov
daa
inc
adc
xor
sbb
inc
jp
test
fnsave
push
es
pop
mov
loop
dec
xchg
mov
outsl
mov
cmp
fwait
cmc
scas
fidivrs
shlb
into
mov
iret
in
gs
mov
jno
ja
scas
call
int3
fistpll
sub
add
mov
push
nop
sbb
pop
insl
xchg
mov
and
arpl
popf
clc
test
fdivr
stos
cs
cmp
xchg
mov
push
pop
xor
pop
sti
sbb
in
adc
mov
fs
or
push
in
and
xlat
out
test
pusha
adc
test
sub
jbe
inc
cmpsb
and
das
cmp
gs
in
bound
push
cmpsb
jae
scas
adc
hlt
loopne
cmc
call
mov
push
pop
cmpsb
fistpll
fsubl
repnz
mov
xchg
outsb
xchg
mov
arpl
cs
lods
add
shll
loope
push
gs
ds
jbe
jo
data16
xchg
jo
mov
jge
or
shrb
xor
sbb
jbe
lea
cmp
pop
pop
pop
dec
pushf
sbb
mov
or
repnz
test
mov
pop
add
push
sub
mov
inc
xor
mov
mov
shl
in
movsl
gs
adc
add
mov
cwtl
push
jbe
dec
cmp
adc
add
jle
fimull
sarb
xchg
es
cmp
mov
loop
inc
and
mov
add
je
lods
arpl
aam
icebp
lcall
imul
clc
push
xchg
pop
shll
jns
jno
dec
cwtl
jle
and
adc
pop
push
sbb
mov
repz
enter
movsb
fidivs
add
cmp
and
mov
sbb
lea
dec
movsl
add
push
hlt
lods
xchg
sbb
cmp
adc
test
xor
lea
aaa
push
scas
dec
shlb
inc
inc
and
sarb
add
ss
mov
jnp
fimuls
outsb
mov
lock
dec
sub
hlt
popf
sub
nop
pop
or
lods
sar
orl
push
fbstp
jne
dec
push
adc
lock
incl
adc
rclb
jge
das
gs
pop
adc
arpl
cmp
data16
cmpsl
mov
leave
push
jmp
sub
inc
lods
mov
cmp
mov
fsubp
and
dec
xchg
mov
add
nop
sub
popf
xlat
dec
mov
mov
adc
std
xchg
lcall
test
xchg
popf
scas
popa
sbb
push
pop
subb
outsb
fmul
jnp
push
jl
in
mov
test
out
mov
pop
addr16
jno
out
arpl
popf
or
out
inc
loopne
popf
test
or
sub
mov
leave
lret
daa
dec
lds
jmp
cltd
cld
xchg
ficoml
sbb
outsl
xchg
test
pop
addl
add
mov
fmull
mov
and
mov
add
sarb
jne
push
cli
scas
mov
aaa
mov
inc
jno
jg
incl
sub
daa
imul
lret
repz
xchg
xchg
mov
sbb
mov
jp
cmp
push
jmp
shrb
les
gs
and
push
and
jecxz
mov
mov
loop
mov
pop
jmp
cwtl
push
negl
jecxz
mov
out
fdiv
add
sti
cmp
cmc
sub
cwtl
cmp
or
xor
ja
loop
add
imul
mov
gs
int3
scas
cli
add
into
jecxz
cmp
sub
dec
adc
aad
sub
jmp
shl
push
add
xor
into
subl
fisttps
and
cmpb
jne
inc
mov
jmp
call
orb
xchg
cs
movsb
adc
dec
movsb
pop
cld
dec
jl
int
jne
pusha
jne
push
jle
imul
xor
shlb
cli
lods
rcl
xchg
lret
cwtl
daa
test
pop
adc
lret
xchg
adc
cmc
bound
xor
mov
mov
addr16
rol
adc
sub
dec
pop
cmp
stos
xor
jecxz
das
dec
aaa
outsb
jl
cmp
sub
push
sarb
ds
cli
cmp
push
sub
fdivrl
or
inc
mov
andb
jb
lods
and
jno
dec
adc
push
rclb
mov
rcr
andb
mov
jle
sub
mov
mov
pop
nop
mov
in
negl
mov
out
xor
lock
cmpsb
mov
les
popf
mov
aas
sub
sbb
in
mov
jne
xor
add
lret
hlt
mov
pop
sub
xor
lret
insb
fldl
push
sub
jno
ljmp
imul
cmp
lret
adc
mov
sub
std
sub
stc
imul
or
cmpsl
mov
insb
shrl
mov
call
or
mov
pushf
jae
push
int
mov
cmpsb
mov
cmpsl
sbb
divl
popf
pop
mov
stos
mov
push
mov
sbb
xor
mov
add
fldt
popf
sar
adc
insl
lea
aad
popa
inc
cli
adc
inc
mov
inc
jae
inc
mov
fisubrl
aas
leave
call
pusha
xorl
push
or
mov
mov
pop
pop
adc
lock
jo
mov
jo
jp
movsb
stos
insl
in
icebp
movsl
cwtl
repz
sbb
sbb
inc
mov
pushf
rorb
mov
outsb
lds
inc
mov
out
sbb
inc
push
movsl
in
or
in
jae
std
dec
mov
repnz
je
aaa
icebp
mov
mov
ret
aad
xor
jle
and
shll
xor
mov
jnp
adc
out
call
mov
cld
insl
or
outsb
mov
mov
jge
aad
sarl
test
mov
filds
and
pop
ds
adc
outsb
fisubrl
xchg
in
mov
and
mov
lods
ret
and
div
stos
test
jno
adc
jo
daa
dec
mov
mov
xchg
in
je
shll
loopne
je
fcoml
add
cmp
ja
cmpsb
insb
push
bound
popf
lret
stc
es
pop
sahf
clc
ret
mov
out
pop
and
imul
mov
or
xchg
inc
in
sbb
stos
inc
mov
inc
push
imul
fistl
inc
testb
bound
cli
or
scas
test
xlat
imul
xchg
xchg
stos
sahf
das
adc
sub
repnz
lret
push
loopne
adc
shll
xor
lahf
stos
cmovb
pushf
aam
gs
mov
mov
cmp
add
aaa
xor
add
es
std
ljmp
test
hlt
pop
add
mov
rep
mov
call
popf
daa
add
out
or
clc
inc
fldcw
cmp
mov
sbb
cs
and
je
outsb
xchg
pop
push
sbb
lcall
mov
lcall
lret
data16
out
js
ja
or
leave
sarl
loope
icebp
inc
push
aad
js
inc
inc
shrl
or
int
aas
push
stc
and
dec
push
pop
lea
cmpsb
das
fstpt
inc
lods
stos
add
lock
jge
loop
ja
pop
adc
daa
push
jb
iret
add
mov
scas
out
xor
add
lods
lock
addb
pop
leave
or
jne
xlat
in
lahf
and
jecxz
scas
insb
or
mov
subb
push
sub
out
push
mov
loopne
fldt
sub
cmpl
pop
add
out
jne
mov
incl
orl
int3
sbb
mov
dec
fdivrs
push
icebp
cmpsb
jmp
iret
and
pop
jae
jmp
addr16
jecxz
dec
ljmp
pop
rcrl
sarb
inc
sub
jnp
lret
xchg
lret
rcr
outsb
add
sbbb
fisubl
push
jle
cwtl
cld
mov
jle
add
jbe
loope
out
or
adc
clc
andl
mov
xchg
jle,pt
cwtl
fwait
jmp
jp
out
repz
add
arpl
ret
bound
movq
fsts
aad
int
or
and
cmp
jp
mov
add
iret
mov
xlat
xchg
inc
adc
mov
push
leave
jl
xlat
push
aas
or
into
pop
test
std
sbb
daa
push
inc
mov
ret
hlt
shll
dec
inc
mov
aaa
xchg
pop
call
inc
push
jle
int
xor
mov
mov
in
pop
inc
xchg
xchg
imul
in
adc
fisubrs
imulb
adc
xor
sub
incl
cmp
xor
out
flds
jecxz
mov
rorl
dec
inc
cmp
jbe
dec
pusha
shll
xchg
jl
jle
add
cmp
sbb
push
in
scas
bound
outsb
add
pop
sti
push
rorl
jmp
xor
js
and
adc
enter
cld
loop
fsubs
sti
icebp
jo
mov
loopne
shrb
aam
push
inc
or
add
cmp
mov
pop
jns
sub
cmp
cmp
jl
pop
hlt
jne
mov
dec
sarb
xchg
mov
fsubl
xchg
imul
or
sahf
shlb
push
bound
loop
or
daa
inc
mov
aam
and
xchg
push
loopne
jle
cmc
repz
rorb
and
movsb
sahf
inc
mov
out
cmp
fiadds
ja
bound
jnp
int3
cmc
dec
test
mov
fdivrs
inc
in
daa
push
jp
cmp
insl
mov
enter
loopne
pop
fsubrs
aas
xlat
cmp
es
mov
xorl
inc
inc
repnz
ja
lcall
inc
lea
mov
or
arpl
xor
jp
sbbl
bound
sarb
jae
jo
inc
mov
cmp
testb
call
pop
test
mov
popa
pop
int
push
arpl
xchg
add
xor
fnstenv
mov
xchg
mov
ret
adc
and
aas
lahf
sub
inc
jg
mov
lret
pop
or
pushf
sbb
fcmovnu
xor
push
jp
movsl
pushl
ret
in
ss
mov
test
inc
cmp
scas
push
lds
stc
sahf
push
shll
sarl
mov
mov
cmp
iret
jle
pop
je
fistps
xchg
mov
push
adc
mov
pop
mov
push
mov
adc
vmovsldup
aad
mov
xor
sub
sbb
imul
inc
fiadds
sbb
push
sub
pop
dec
nop
push
movsb
jmp
mov
mov
jecxz
fildl
imul
mov
pop
lock
xlat
repnz
neg
daa
mov
pusha
popf
add
fcomps
js
mov
jnp
stc
push
adc
mov
xor
lock
lcall
inc
mov
idivb
ljmp
outsl
bound
dec
outsb
add
pop
add
mov
je
pop
das
add
pop
dec
mov
rolb
out
ja
jg
and
pop
adc
mov
mov
sub
leave
ret
and
sub
mov
test
pop
or
jo
sbb
dec
jmp
push
imul
xchg
mov
add
data16
push
or
xchg
cmp
fdivrl
xor
cmpsb
xchg
mov
xchg
test
rcl
mov
stc
or
call
cmp
mov
and
push
sti
push
xchg
aad
cmp
shll
lcall
mov
movsb
inc
in
mov
push
aaa
fldz
xchg
negl
jg
push
xchg
push
leave
rcrb
lods
inc
dec
cmp
cld
mov
in
subb
and
test
test
cmc
sub
inc
rcr
test
fiadds
lods
mov
mov
dec
xorl
mov
inc
lds
cmpsb
jmp
insw
mov
call
cwtl
mov
cmp
in
cmpsb
pop
lret
sbb
jge
push
xor
jle
mov
cmpsb
push
xlat
mov
xorl
fcomps
std
xchg
fldt
pushf
loop
in
mov
xadd
es
cwtl
xchg
scas
adc
sbb
enter
addl
xchg
pusha
bnd
add
mov
lds
pop
into
inc
test
mov
and
lea
fnstcw
loop
inc
in
dec
and
mov
ret
rcrb
and
or
xchg
notl
out
out
jge
pop
sbb
mov
bound
xchg
test
mov
mov
mov
pop
scas
xchg
xor
lock
sbb
outsl
sti
xorps
or
sarb
mov
ss
ret
rclb
daa
das
jbe
mov
xor
jmp
cwtl
in
jecxz
cli
pop
ds
inc
ret
mov
or
dec
adc
cltd
jno
adc
ja
lea
imul
aas
into
stos
xchg
leave
pop
ret
pop
ja
ret
fcmovu
pop
mov
dec
les
je
cmpsb
jl
and
cwtl
test
mull
into
sbb
mov
or
push
nop
cwtl
inc
jge
xchg
inc
and
cmp
sarb
loopne
push
push
test
or
sahf
icebp
aam
mov
add
adc
sbb
mov
hlt
mov
xchg
sub
adc
cli
xchg
ret
leave
lods
inc
xlat
add
cmpsb
scas
mov
fcmovne
test
andb
sbb
ja
in
dec
cmp
loopne
inc
cmp
xlat
sbbb
cwtl
sti
add
testl
mov
lahf
mov
shr
inc
jne
addr16
sbb
jecxz
cmc
inc
adc
ja
xor
sbb
flds
xchg
jo
movsl
or
bound
sub
aas
mov
xor
rcrl
sbb
or
loopne
cmc
pop
jne
add
mov
fmuls
ret
mov
aam
fisttps
stos
jg
xor
inc
fsubl
aam
mov
aad
sub
in
jl
mov
rol
cmp
jmp
imul
mov
cmp
xchg
xchg
ficompl
iret
xlat
xor
mov
scas
mov
dec
ljmp
fildl
loopne
or
cwtl
imul
xor
imul
add
mov
int3
mov
dec
mov
cmovg
xchg
arpl
dec
jne
jle
and
mov
xchg
mov
xor
mov
lock
insb
mov
lret
or
xchg
push
jmp
cmp
adc
notb
cmpsl
jl
xchg
mov
xchg
xchg
repnz
shr
xchg
sbb
ja
push
iret
push
mov
sub
fwait
add
jl
out
dec
ret
sbb
out
test
daa
xor
mov
cwtl
clc
loope
mov
hlt
or
aaa
add
or
dec
push
adc
test
movsb
mov
sub
cs
clc
jecxz
arpl
sbb
enter
pop
js
out
mov
leave
ds
cmp
adc
cs
push
fldcw
mov
or
imul
cmp
cmpsl
jnp
mov
leave
clc
aad
fimull
ja
xor
subb
pop
lret
push
adc
adc
into
sbb
fdivs
mov
cwtl
addr16
mov
inc
cmpsl
movsl
imul
or
rorl
jne
mov
cmp
xor
cmp
pop
popf
adc
add
add
or
rol
push
mov
pop
inc
mov
adc
mov
fisttpl
adc
jnp
inc
test
xchg
imul
mov
aad
stos
ja
jno
and
pop
sbb
adcl
xchg
cmpsb
cmp
push
or
or
pusha
sub
shlb
insb
pop
xchg
bsf
xorb
xchg
ror
imul
ljmp
sub
arpl
push
loopne
inc
mov
aaa
jl
aam
xchg
test
insb
sub
loop
adc
mov
lods
sbb
mov
jle
xchg
adc
sub
lock
pop
and
out
add
loopne
addr16
loop
push
or
nop
fstps
inc
btc
sbb
aad
sub
cld
mov
shlb
into
fadds
or
push
or
pop
fisubs
jecxz
outsl
dec
cmp
gs
lds
sarb
pusha
loope
jnp
mov
and
pop
inc
jmp
mov
lods
jp
inc
dec
jmp
shl
sarl
mov
sub
mov
lahf
adc
sub
pop
pop
push
outsb
int3
pop
sub
insl
ljmp
jo
mov
adc
adc
out
pop
jge
ret
insl
rcr
xor
or
sbb
int
sub
mov
push
aad
cmc
cmpsb
fwait
mov
mov
lahf
sbb
pop
xor
cltd
push
jl
fadds
mov
outsb
cmpsb
subl
scas
faddl
jae
pop
addb
mov
mov
cwtl
sub
mov
mov
ds
nop
in
adc
pop
mov
into
daa
mov
out
out
mov
jns
iret
int
mov
xor
xor
in
push
push
push
dec
and
xlat
pusha
sti
mov
mov
lea
inc
xchg
fdivl
xabort
lock
xor
sahf
adc
or
push
in
mov
mov
movsb
or
ss
inc
cmpsb
sub
insb
out
cmp
pop
xchg
jle
andb
or
ret
shlb
mov
in
repnz
adc
out
inc
stc
std
sub
xchg
fcoms
lods
xchg
imul
push
fstl
into
cld
and
push
in
pop
adc
xchg
mov
out
sbb
test
pop
test
cmc
sub
xchg
or
dec
xchg
inc
movsb
xchg
xor
cmp
sbb
stos
jp
std
cli
in
pop
push
andb
xchg
jae
and
jno
in
ds
and
sbb
fdivrl
out
inc
sbbb
push
add
fstpt
jnp
and
jecxz
xor
mov
mov
push
jl
add
imul
iret
cmpsl
fbstp
cli
in
dec
cmpsl
insb
mov
mov
mov
mov
test
in
enter
fwait
xchg
push
sub
ret
js
adc
fidivrl
bound
repnz
rorl
mov
les
mov
mov
xchg
inc
fbld
xchg
jl
xchg
dec
pop
pmaxsw
ss
cmp
xchg
movsl
test
sub
scas
mov
loope
jle
xchg
mov
repnz
mov
push
xlat
push
shlb
out
and
aam
ficoms
sarb
notb
ret
fsubrl
or
pop
stos
rclb
sbb
lods
mov
leave
jnp
adc
fstp
cmp
push
fmuls
insl
mov
dec
adc
and
popa
jne
mov
sbb
xchg
ljmp
shl
sub
imul
js
push
push
cld
mov
push
dec
jge
frndint
into
add
addr16
gs
incl
out
loop
das
cltd
push
cs
clc
inc
cmpsl
push
xchg
push
cmc
fsubs
sahf
aad
push
and
and
add
or
xor
inc
push
in
inc
sbb
xchg
fsubrl
mov
lahf
mov
testb
inc
leave
pop
sbb
addr16
pop
cmp
stc
testl
push
clc
icebp
adc
popa
mov
pop
mov
mov
pop
insl
mov
stos
xchg
mov
cmp
call
sarl
mov
imul
mov
outsb
dec
clc
jno
and
jmp
movsb
orb
imul
inc
xor
jge
or
or
rclb
pop
sahf
imull
testb
dec
jecxz
push
and
cmp
ss
sbb
push
and
div
in
mov
cmp
push
mov
sub
mov
sbb
mov
cmp
pusha
das
pop
and
pop
sub
pop
dec
nop
cltd
push
jae
add
fistl
fcmovne
loope
mull
test
xchg
imul
jb
pop
pop
jns
lea
push
and
out
mov
mov
sbb
insl
or
xchg
push
cmpsl
push
push
add
xlat
pushf
sarl
rcrb
int3
dec
ljmp
xor
dec
mov
xor
das
sub
sub
cmp
adc
jmp
mov
xor
into
jl
mov
inc
jnp
cmc
testl
sbb
or
xor
add
mov
push
lret
inc
pop
enter
or
dec
hlt
and
pop
in
stos
pushf
cmpb
insl
dec
dec
loop
or
in
inc
pop
pop
clc
insb
jge
imul
adc
mov
xor
cmpsl
mov
fwait
mov
insb
sbbl
mov
inc
test
negl
xchg
mov
out
dec
out
add
fsubrs
dec
cmp
cmpsl
lahf
or
andl
enter
aam
mov
dec
movsb
lret
cmpsb
mov
push
sub
jb
pop
mov
jbe
jl
scas
adc
pop
fdivp
jno
std
and
fwait
test
jnp
mov
pop
rclb
int
mov
ds
jl
pop
inc
cmc
aad
rcll
sti
lods
lcall
in
and
in
fstpt
mov
ret
fstpl
leave
push
loop
stc
out
test
popa
pushf
cmc
stc
pop
les
adc
cmpsb
add
mov
fnstcw
movsl
ret
cmpsb
adc
test
gs
xorl
mov
add
pushf
sbb
or
ret
lods
call
int3
add
sbb
fdivs
mov
dec
xor
mov
fcmove
scas
sub
pushf
insl
sbb
sbb
push
and
cs
cmovae
sbbl
jl
cmc
andl
sub
cmp
aas
mov
jb
cli
std
daa
es
rorb
aam
out
cmpsb
xchg
arpl
push
mov
shlb
sbb
jb
cmp
xorl
adc
cmc
daa
fs
xchg
std
and
call
pop
mov
or
push
mov
dec
and
test
imul
adc
sbb
in
add
enter
mov
push
inc
je
pop
fldenv
add
test
insb
fsubs
clc
fs
cmp
jecxz
imulb
mov
jmp
call
xor
orb
fcompl
jne
pop
ljmp
imul
add
pusha
mov
test
add
loope
stos
testb
dec
cmp
lea
sub
jp
imul
push
xlat
scas
shll
and
mov
jae
jecxz
push
pop
ss
test
mov
push
gs
mov
outsl
movsl
mov
loope
aad
loopne
mov
aas
int3
in
jo
sub
stos
push
les
imul
inc
cli
bound
fs
sub
or
dec
and
popf
lret
inc
ret
hlt
pop
pcmpeqb
jle
repz
aas
and
cs
cmp
xchg
test
pop
out
push
scas
iret
mov
loope
xor
lock
imul
mov
mov
mov
and
adc
pop
jbe
push
push
ds
lea
out
negl
testb
and
add
lods
xchg
int
mov
outsb
lds
ret
pop
insl
sti
xor
dec
push
add
sbb
repnz
rolb
jg
lock
fwait
inc
popa
faddl
lret
sub
es
cmp
ja
leave
into
fisttpll
jo
aas
mov
fstpt
pop
jae
iret
add
cmp
ja
adc
shlb
icebp
les
pop
push
sub
rcrl
test
cmp
mov
popa
scas
outsl
inc
call
daa
sbb
xchg
in
and
pop
xchg
test
shr
iret
mov
mov
clc
push
push
imul
stc
aam
aam
dec
fstps
and
rolb
and
ss
pop
dec
add
popf
shl
mov
or
or
aaa
cwtl
outsb
adc
xchg
xor
xchg
rcrl
sahf
xchg
inc
inc
hlt
mov
mov
add
es
mov
mov
out
add
push
aad
filds
ret
mov
cmpsb
sahf
outsl
and
mov
sbb
adc
pop
push
mov
or
pusha
inc
xor
mov
jmp
fldpi
loope
lret
stos
add
dec
pushf
xchg
inc
test
sub
and
test
and
push
aas
push
fsubp
orl
sub
sbb
aaa
lcall
or
call
inc
jnp
fcmovne
mov
mov
xor
mov
popf
mov
stos
ficoms
out
data16
dec
popf
xchg
ss
jg
push
lret
jle
test
in
mov
int
pop
fisttpl
push
cmp
xchg
jbe
fwait
dec
das
xchg
imul
mov
inc
cmp
adc
mov
lret
push
mov
push
and
xchg
dec
and
cmp
adc
cli
xchg
pop
and
xor
testb
ljmp
ljmp
push
add
aam
mov
or
sub
cmp
sti
and
and
mov
scas
dec
cmpsl
daa
mov
ret
repz
and
cltd
push
add
and
xchg
adc
test
adc
mov
add
push
mov
add
test
xor
dec
movsl
pushl
sbb
js
or
add
mov
xchg
cmp
enter
loop
add
ja
sub
shrl
jae
add
mov
fsts
ret
mov
push
das
sti
shld
push
orb
cwtl
test
jbe
and
xor
lahf
add
cmp
xor
in
enter
fsubrs
pop
fsubrs
fs
and
js
push
push
in
dec
ds
mov
or
cmp
repz
sar
mov
xor
sbb
add
lods
pop
adc
rcrl
lods
test
and
push
enter
pop
and
int
shl
sub
mov
pop
repnz
orl
aam
int3
mov
fsubl
jecxz
or
adc
mov
fstps
insb
lcall
movsl
cmc
xor
aam
push
mov
add
xchg
sub
jno
cmp
enter
and
jns
cmp
dec
fdivp
rcrb
inc
sub
iret
sbb
outsb
mov
aam
aas
clc
data16
mov
sti
lds
ja
mov
add
push
mov
jge
inc
lcall
aas
pop
push
sarl
rorb
sbb
inc
repnz
push
mov
xchg
pop
dec
add
ds
arpl
or
pop
pandn
rolb
lods
xchg
sub
mov
ss
mov
xchg
repz
dec
faddp
xlat
mov
rolb
sbb
sahf
popf
jae
dec
sub
inc
sub
push
jb
adc
mov
enter
fwait
js
sbb
aad
jb
cs
push
cs
xor
mov
movsl
pop
pop
sbb
loope
inc
cmp
add
popf
push
ret
stc
push
adc
add
xchg
and
or
lahf
int3
jmp
roll
fistl
sbb
or
cmp
filds
push
adc
or
out
sbb
dec
rep
mov
push
cltd
scas
lahf
ret
pusha
dec
inc
cltd
pushf
dec
in
push
iret
imulb
xchg
push
dec
ret
shlb
pop
sub
push
mov
fimuls
xor
mov
clc
add
pop
repnz
incb
or
pop
loop
ret
aad
pusha
lcall
mov
xchg
push
cltd
negb
int3
int3
in
sbb
sub
jp
adc
adc
pop
int3
jnp
and
insl
cwtl
aam
mov
push
jle
push
or
push
cli
cmc
jo
mov
and
cli
loope
dec
fisubs
ja
stc
jmp
adc
jp
jns
lret
jmp
out
mov
mov
sub
pop
das
cld
insl
pop
cmp
mov
xor
xchg
xchg
jae
ret
je
pop
cltd
enter
push
mov
sub
mov
rcrb
sahf
dec
aas
dec
and
mov
in
mov
add
pushl
dec
lret
mov
stc
cmp
lahf
out
push
clc
cltd
mov
add
scas
rolb
ljmp
mov
dec
mov
popa
jno
call
xchg
je
cltd
mov
xor
fsubl
sbb
xchg
pusha
or
xchg
pop
xchg
int
cmp
or
mov
inc
dec
loope
inc
or
adc
push
mov
mov
scas
imul
inc
push
jg
rcrl
xchg
add
cmp
lock
lea
xlat
imul
sbb
pop
test
xchg
jge
mov
pop
sbb
jmp
pop
cmp
rcl
shl
loop
push
fcoml
xchg
popa
inc
push
int
scas
or
push
push
push
pusha
lret
repnz
hlt
mov
mov
jp,pn
and
mov
pop
addb
rcrl
leave
inc
daa
jns
mov
je
push
xchg
loope
mov
jecxz
dec
cmp
push
dec
pop
jns
aam
das
test
lcall
inc
or
sbb
xor
in
outsb
mov
mov
mov
cmp
int
push
mov
iret
xchg
out
mov
jp
adc
mov
jbe
sbb
cmp
mov
mov
sbb
std
and
adc
cmp
add
fsubr
test
neg
sub
les
cmp
cmp
icebp
cltd
lods
push
sub
mov
aaa
mov
outsb
orl
pop
subb
adc
pop
ret
xchg
dec
out
mov
dec
scas
scas
push
stos
xor
scas
cmp
jp
push
pop
mov
add
add
rcl
cmp
mov
push
lcall
leave
dec
mov
stos
movsb
arpl
xor
in
push
pushf
jp
das
xor
scas
add
mov
pusha
test
or
mov
mov
aaa
dec
imul
adc
nop
sub
sbb
stc
xor
test
fwait
idivl
or
cli
push
pop
add
mov
pop
mov
xor
shl
lcall
jnp
shll
pop
inc
enter
xlat
dec
xor
or
push
jno
jnp
cmpsl
fsubrs
das
inc
inc
push
dec
mov
pop
mov
push
jo
mov
sbb
adc
xor
insl
call
ja
pusha
jbe
add
shl
mov
aad
hlt
push
dec
push
cmp
xchg
cmp
pop
xchg
lods
fldpi
scas
jp
sub
push
cmp
xchg
sbb
cs
lds
mov
stos
stos
je
adc
stc
xor
fadds
pop
xor
enter
cmp
lcall
aaa
add
mov
jecxz
pop
js
jne
fsubrl
rolb
lea
ja
into
push
dec
shr
iret
cmp
rclb
jle
loop
jecxz
lret
cmc
xlat
insl
insl
xor
nop
inc
mov
dec
rorl
in
push
push
jecxz
adc
insb
fmuls
lret
mov
adc
or
test
jae
mov
push
rorb
in
dec
mov
daa
dec
mov
xchg
fwait
pop
cmc
icebp
and
daa
cmp
jmp
pusha
sub
cmpsb
ret
rcrb
in
mov
sub
or
orl
aad
aad
stos
xchg
jae
adc
jp
ret
xchg
push
xchg
es
insb
dec
inc
pop
loop
call
or
je
fdivl
xchg
add
je
outsl
das
cmp
in
jo
iret
inc
sub
inc
ret
es
push
shrb
jb
mov
roll
out
cltd
imul
daa
pusha
int3
test
xor
mov
xchg
nop
outsb
test
xchg
pop
push
imul
push
cmp
lods
mov
cmp
xchg
lahf
adc
pop
jnp
nop
add
loop
lods
pop
mov
jmp
dec
leave
mov
pop
mov
cmp
icebp
pop
imul
popf
mov
xchg
mov
xchg
dec
scas
in
push
xor
je
cli
adc
mov
rclb
cltd
push
into
and
jbe
jp
mov
adc
jns
out
ja
push
gs
sub
or
cmc
out
cmp
imul
jle
push
bound
push
sub
push
rcrl
xchg
or
scas
mov
scas
push
mov
iret
fdiv
or
adc
insb
add
xchg
fwait
imul
push
add
mov
inc
push
in
mov
jmp
pusha
adcl
mov
inc
xor
xchg
popf
pop
out
in
inc
orw
sarb
pop
push
stos
mov
stc
jl
and
jecxz
lahf
mov
inc
sarb
sarl
mov
and
and
loop
xlat
xor
xchg
fdivs
cmp
mov
cmp
sbb
fadds
iret
push
and
inc
popa
mov
mov
sbb
sub
arpl
push
mov
sub
aad
lahf
dec
adc
sbb
gs
and
fimuls
jge
lea
push
nop
or
mov
or
pop
lods
or
sahf
sbb
lods
add
sbb
clc
xor
iret
pop
mov
adc
divb
cmc
loope
adc
cmc
cmp
jg,pn
lods
insb
pop
xchg
cmp
push
pop
sub
icebp
ret
cmp
mov
xlat
inc
cmp
cmp
add
cwtl
pop
pop
push
outsb
mov
add
mov
loopne
xchg
add
push
xchg
fildl
mov
jns
or
hlt
icebp
bound
mov
cltd
xchg
movsl
jmp
xchg
stos
jge
mov
cmp
jmp
add
cmp
test
imul
ret
or
fstpt
imul
fidivrs
add
shll
in
lret
adc
mov
mulb
mov
xor
sub
and
push
ljmp
gs
test
inc
das
ret
add
dec
pop
sub
mov
mov
push
icebp
incl
movsl
add
in
xor
cmc
stos
sarl
in
loope
fcmovnu
pop
jnp
pop
cmp
loopne
jo
loop
movsb
inc
sub
movsl
dec
jl
adc
loope
imul
imul
outsl
je
dec
lret
aaa
fwait
dec
mov
cltd
iret
xchg
jb
lods
inc
aaa
cmpsb
ret
pushf
and
mov
cmp
sub
lret
push
lret
cld
mov
mov
fdivrl
jae
xor
inc
je
enter
es
mov
inc
les
and
pop
sbb
mov
and
pop
sbb
push
or
add
inc
jbe
mov
mov
xchg
pushf
pop
mov
add
mov
push
dec
sub
pushf
jp
inc
mov
insb
and
loop
fisttpll
adc
ret
lds
lock
jns
in
mov
mov
inc
sub
shrl
mov
mov
cmp
dec
push
dec
mov
sbb
test
clc
sub
pop
jno
dec
int
add
inc
ds
mov
cltd
inc
xchg
xor
gs
lret
add
inc
sbb
pop
sub
nop
xchg
mov
out
insb
shlb
dec
test
mov
insb
mov
ret
ficompl
data16
ds
push
xor
mov
stos
cwtl
xchg
mov
sub
mov
jnp
cmp
xchg
cmc
xor
sbb
inc
push
pop
xchg
dec
imul
jno
out
xor
mov
daa
scas
jae
lods
lret
prefetch
or
scas
iret
inc
sub
and
dec
in
jnp
scas
lret
cmp
pop
imul
jge
cmp
xor
test
adc
pop
pusha
pusha
mov
stos
inc
hlt
and
mov
repz
lcall
jns
fwait
push
and
shrl
xor
mov
xor
call
jae
mov
dec
xchg
mov
divb
inc
push
jmp
mov
add
arpl
shrl
insl
add
pop
imul
fisttpll
xor
fsts
sahf
rcr
dec
sub
out
int3
or
in
adc
movsb
mov
test
push
aaa
aaa
cmp
sub
mov
push
push
add
cmp
xor
pop
vpsllw
xchg
push
lret
push
mov
add
cli
test
stos
lret
fidivrs
bound
loop
fnsave
mov
call
jge
into
adc
outsb
adc
movsb
add
fistpll
push
and
jle
inc
popa
cld
adc
stc
and
adc
inc
loopne
inc
xchg
jnp
mov
js
jbe
jmp
loopne
in
push
push
cmpsb
mov
sbbl
pop
push
aam
test
int3
push
pop
adc
test
sub
popf
out
icebp
add
and
pop
gs
adc
xchg
addr16
clc
cmp
xor
jecxz
mov
stos
fsub
dec
adc
les
xchg
inc
call
push
addr16
or
push
stos
pop
icebp
seto
inc
sbb
imul
inc
jno
mov
inc
xchg
shlb
popa
loope
aas
cmp
in
lcall
shrl
mov
xchg
bound
adc
stc
js
imul
inc
pop
fwait
push
popf
les
mov
sbb
dec
and
ret
subl
sbb
xchg
inc
rol
aam
inc
cmpsl
jg
std
ds
out
jge
push
enter
mov
jmp
adc
jae
pop
sti
xorl
loope
aas
dec
cli
loope
repnz
xor
js
lahf
or
mov
add
jp
push
fs
loope
fisttpl
stc
andb
pop
mov
sbb
imul
sub
xor
hlt
les
cmc
inc
sbb
popa
jl
and
nop
mov
scas
imul
out
jno
inc
lods
mov
jnp
pop
cmp
nop
push
ja
dec
mov
mov
test
adc
scas
mov
push
xor
popf
hlt
int
xchg
negb
jbe
aas
or
xor
mov
or
into
push
mov
int3
sub
shl
dec
push
xlat
sti
loop
aad
outsl
sbb
push
aad
test
cmp
roll
aas
test
adc
jl
xchg
leave
fadd
jmp
xor
lds
nop
rclb
mov
xchg
shl
or
mov
pop
rol
mov
and
inc
jl
aam
scas
dec
test
dec
pop
mov
and
icebp
pushf
aam
dec
pop
nop
cmp
or
rolb
add
in
pop
out
jnp
sbb
mov
xchg
inc
add
iret
arpl
push
scas
sub
fldenv
and
mov
mov
ss
insl
into
dec
cmpsb
pusha
mov
enter
mov
repz
iret
test
sbb
mov
adc
mov
test
fistps
pop
adc
and
sahf
push
fldcw
inc
mov
and
mov
jne
in
movsb
xchg
and
mov
mov
and
mov
addr16
dec
sarb
mov
enter
or
pop
xchg
leave
mov
cmp
cltd
decb
pop
ficomps
push
inc
mov
sub
hlt
pop
mov
test
jg
and
add
fxch
and
scas
push
push
cmp
cld
fneni(8087
js
rcl
mov
inc
sbbl
xchg
movsb
xor
in
pop
mov
loopne
movsl
inc
xchg
push
xlat
mov
pop
adc
stos
mov
outsb
into
xchg
sbb
lock
sbb
xor
jmp
xor
popa
push
inc
imul
pusha
push
xchg
hlt
jne
jo
fsubrp
addb
add
cmpsl
sub
inc
jns
int
sar
mov
loopne
inc
sbb
and
pop
adc
cmp
test
repz
scas
sti
mov
jg
sub
shr
jl
jp
out
negb
xor
arpl
stos
loope
xchg
sub
push
rcll
add
fs
jb
lcall
add
pop
loopne
jns
and
mov
mov
ja
lods
popf
mov
pushf
xchg
into
shlb
mov
push
pop
add
xor
push
dec
mov
fcom
push
stc
repz
mov
dec
lret
dec
xor
rcrb
push
and
into
push
int3
out
mov
aas
and
arpl
fwait
push
ss
xor
test
stos
fsub
jmp
ficoms
mov
mov
cmp
std
push
scas
lods
int
inc
push
idiv
dec
xchg
add
jle
ja
pop
sub
cmp
adc
shrl
sbb
xchg
add
std
mov
xchg
sub
xor
scas
xlat
pop
cmpsl
ss
dec
stos
inc
xchg
lahf
ljmp
hlt
sbb
cmp
sarl
aaa
aas
push
cwtl
adc
jo
dec
mov
pop
lds
movzbl
push
pop
xchg
dec
in
movsl
icebp
inc
pop
cmpsl
add
hlt
sbb
test
jg
push
sbb
add
xor
mov
loopne
inc
popf
mov
mov
adc
icebp
push
in
and
xor
mov
jge
pop
roll
mov
push
add
push
movsb
rol
cmp
es
dec
jmp
inc
inc
sub
xchg
fadds
roll
adc
loope
pop
mov
adc
nopl
out
in
push
push
jecxz
cmp
jb
pop
rolb
pop
push
ror
std
into
out
pop
xchg
and
inc
cmpsb
push
dec
mov
dec
sbb
lcall
push
insb
fucomi
inc
add
cli
repz
dec
stos
jge
inc
mov
mov
xchg
imul
sub
arpl
push
mov
or
cwtl
adc
outsb
mov
jp
jp
orb
pop
loop
dec
dec
and
clc
orb
fdiv
imul
in
adc
movb
popa
int
insb
pop
fstps
mov
daa
adc
mov
or
xchg
adcb
insl
push
ss
cmp
xchg
mov
sahf
sbb
xorl
cmp
xchg
mov
jne
sbb
pop
sbbb
out
test
add
inc
icebp
push
lods
jnp
pop
icebp
repz
aad
div
xor
pop
daa
push
dec
rorl
fwait
inc
fisubs
mov
notl
xchg
sbb
sbb
je
cwtl
stc
pusha
cmpsb
hlt
mov
xchg
rcrl
lock
sub
pop
pop
push
sahf
add
stc
js
mov
jo
test
sbb
in
mov
mov
imul
ja
shll
mov
jbe
ljmp
fwait
mov
xor
push
fstpl
repnz
stc
not
and
add
adc
dec
das
mov
jge
mov
in
into
imul
sbb
lock
pop
mov
inc
push
or
dec
loope
fcmovu
outsb
adc
cmc
jp
sub
rcll
dec
mov
push
dec
jnp
outsb
mov
icebp
dec
into
pop
imul
les
loopne
mov
rorb
and
mov
pop
in
ret
fisttpll
outsb
pop
sub
dec
adc
fwait
adcb
int3
fldenv
jb
jne
mov
not
dec
rcll
cli
push
mov
xor
in
and
jne
jae
add
mov
ret
lods
jb
cs
or
dec
stos
mov
xor
push
xchg
push
push
int
mov
stos
pushf
or
movsb
cs
pop
xchg
cli
cmc
xchg
mov
scas
cmpsl
push
dec
push
adc
sbbb
cmc
fldt
fwait
imul
ds
and
and
fildll
out
movsb
adc
loopne
and
dec
enter
xor
dec
xor
sub
push
and
sbb
push
sbb
js
xor
sti
insl
in
sbb
xchg
rolb
data16
sub
lret
out
cmp
lret
js
xor
push
xlat
repz
inc
rcrl
orl
daa
push
rorl
jnp
mov
pop
adc
jno
sbb
lcall
push
jecxz
xor
mov
xchg
lcall
aad
arpl
stos
das
aad
addr16
or
xchg
mov
in
sub
imul
sbb
push
in
xor
frstor
pop
sub
add
shl
repz
jo
xor
rcl
hlt
and
inc
je
sub
jg
incb
orb
fadds
ds
jle
sbb
test
popf
das
fdivs
popf
dec
sbbl
jl
das
push
jae
ficomps
decl
ret
jo
addr16
push
and
xchg
xchg
adc
mov
jae
pop
jb
loopne
jecxz
sbb
push
jle
test
imul
sbb
fsubrp
xchg
jle
rcrb
ds
bound
or
mov
cmc
push
or
pop
into
fcomps
loope
fistpll
inc
mov
fwait
movsl
popa
xchg
int3
idivb
or
daa
sub
push
mov
xchg
sub
loopne
sub
add
xor
pusha
std
repnz
cmp
mov
ret
push
scas
sti
or
add
negl
mov
and
out
adc
dec
pop
test
mov
test
stos
in
mov
and
popa
pop
jl
paddw
sahf
pop
test
cmp
jbe
fcoml
hlt
sbb
paddsb
pop
ss
cmp
jns
cld
psubusw
imul
push
inc
pop
pop
pusha
xor
xor
sti
cmp
movntq
mov
and
cmpsl
xchg
xchg
sub
insl
ret
gs
and
sbb
into
inc
cmc
add
and
outsl
mov
inc
sti
jp
push
int
loopne
push
add
fldl
test
sub
lods
ffree
pop
les
mov
pminub
movsb
jg
out
loop
pop
xchg
sbb
xchg
add
inc
add
in
cmpsl
enter
xor
aas
pop
data16
cmp
add
push
adc
push
mov
loopne
and
xchg
mov
xor
ret
push
les
push
in
jb
and
ss
mov
test
add
pop
test
xchg
or
rorb
pushf
pusha
call
test
sbb
cmp
popa
sahf
adc
cltd
pop
cmpsb
jno
lret
addr16
mov
ja
add
out
out
jge
push
or
mov
mov
inc
out
shlb
popf
outsb
lahf
jl
lock
stos
fwait
adc
add
dec
xchg
and
out
mov
std
rcll
loope
fs
sub
sbb
or
out
pushf
je
pop
sbb
in
mov
mov
cmpsb
pop
fnstenv
leave
mov
lds
insb
push
js
popa
outsb
pop
cmpb
inc
push
fs
es
adc
sub
adc
mov
inc
mov
ljmp
jno
mov
lods
xchg
and
inc
montmul
cmpsb
test
cmp
xor
mov
xor
out
mov
insl
cmc
sub
inc
inc
xchg
pop
mov
mov
push
fidivl
stos
test
movsl
stos
loope
paddsw
add
adc
adc
push
hlt
fildll
out
psubusb
push
sub
pop
sub
cmp
movsl
iret
sub
sbb
adc
push
hlt
mov
push
or
cltd
sub
sarl
lahf
or
or
pop
dec
jbe
xor
addr16
mov
jo
ret
cmc
jecxz
inc
jne
cmp
cmpsl
pop
jl
movsl
clc
das
push
out
icebp
imul
comiss
mov
gs
xchg
mov
inc
imul
mov
sbb
xor
xor
cld
adc
nop
sbb
push
add
mov
loop
inc
xchg
pop
inc
jne
dec
notl
in
or
ss
xchg
jmp
fdivrs
cmp
push
sti
jb
pop
pushf
sub
scas
mov
cmp
inc
pusha
xchg
push
bound
fimull
xchg
inc
nop
aad
insl
rolb
je
cli
and
push
jle
test
stc
and
sbb
mov
sub
icebp
cmpsl
xchg
inc
pop
arpl
push
ljmp
cwtl
rcrl
pop
sub
leave
add
inc
sbb
or
inc
dec
or
mov
mov
and
adc
sub
pop
subb
mov
arpl
movsl
pusha
adc
daa
pop
popw
xchg
cltd
into
ret
out
mov
mov
dec
jo
addl
jns
and
cwtl
js
push
clc
les
popa
jl
fsubs
fs
mov
sub
sub
push
xchg
cltd
lea
fsts
outsl
or
mov
mov
test
inc
pusha
push
lret
fs
mov
fisttpll
pop
imul
mov
xchg
shrl
cmp
mov
and
mov
push
scas
or
aas
sub
jmp
cmp
xor
adc
cmpsb
and
sub
add
push
es
jns
push
jo
lods
cmp
repz
mov
pop
jae
orl
push
iret
stos
mov
sub
and
inc
cmp
dec
add
stos
mov
insb
jge
cmpsb
ja
xchg
adc
scas
testl
bound
cmp
pop
xchg
xchg
gs
mov
add
jmp
or
mov
push
aam
rol
adc
test
loopne
lock
mov
jle
fs
mov
in
xchg
xor
xchg
icebp
mov
lcall
std
sub
xchg
xchg
fisttpll
shlb
pop
push
fstpt
test
sbb
jg
xorl
mov
cmp
bound
cmp
pop
xchg
les
fildl
pop
jg
jge
push
loopne
mov
push
lcall
repnz
repz
pop
mov
jle
lahf
or
sbb
mov
mov
inc
fcom
sub
loop
mov
mov
xor
mov
icebp
add
not
jle
repnz
lock
addl
inc
and
ds
mov
in
xor
add
pop
loope
or
jmp
cs
adc
dec
dec
or
inc
in
fmul
int3
xchg
cmp
push
adc
jb
popf
pop
mov
adc
insl
les
test
mov
or
sbb
mov
orb
xchg
push
or
jo
aam
leave
test
xchg
jg
mov
inc
arpl
sbb
pop
push
mov
push
xchg
repz
mov
mov
sti
xor
int3
sti
and
mov
pop
js
lcall
cmp
jmp
cld
mov
addr16
pop
mov
nop
mov
cmp
data16
adc
mov
add
mov
jae
jge
add
rcll
and
push
std
sub
push
aas
pop
outsb
jle
dec
inc
daa
les
shll
mov
ret
loope
jbe
push
inc
je
and
pop
daa
movsl
out
lock
add
dec
shll
mov
mov
dec
jb
xor
mov
push
add
sti
push
out
and
sbb
nop
xchg
fsubrs
and
into
pop
negb
movsb
imul
in
push
push
aas
dec
push
jne
push
rcrl
mov
imulb
out
push
jne
faddl
sub
fstps
repnz
int3
mov
jb
lret
cmc
mov
add
sub
aaa
test
int
jmp
pop
int
push
xor
push
repnz
xor
cmp
scas
lea
pop
pop
pop
or
in
sub
lret
push
or
in
jo
sub
mov
lds
sbb
gs
icebp
jl
ret
mov
jle
iret
loope
jnp
inc
xorl
sbb
adc
in
out
orl
imul
xchg
sti
or
bound
lahf
mull
mov
test
sub
dec
jae
xor
mov
mov
jecxz
fnstenv
into
lahf
cld
shll
mov
sahf
in
or
aad
mov
movsb
pop
cmp
dec
inc
xchg
or
stos
pop
fsubs
inc
xlat
pusha
in
push
hlt
je
xor
push
rclb
loop
int
adc
dec
mov
push
jl
ror
out
and
jmp
clc
ljmp
in
mov
aaa
movsb
lcall
mov
movsb
push
jge
mov
dec
mov
imulb
cmp
jmp
sub
xor
cmp
leave
xor
stos
jbe
ja
pop
rorb
cmpb
movsl
fsubrp
pushf
repnz
outsb
adc
sub
arpl
pop
add
push
push
inc
and
mov
adc
push
push
lcall
cli
mov
ficomps
mov
lcall
loope
ds
dec
mov
sub
cmpsb
mov
int3
mov
mov
pop
adc
imul
mov
adc
mov
sbb
add
repz
repz
cmp
push
ljmp
push
fwait
iret
call
mov
stos
dec
icebp
add
mov
into
aam
mov
call
sub
xchg
add
cmpsl
adc
in
fistl
and
mov
pop
and
mov
test
in
cmp
jns
fwait
ret
mov
hlt
cltd
into
mov
pop
mov
push
mov
jle
adc
mov
or
adc
jb
cmpsb
outsl
jno
int3
loope
or
insl
leave
dec
out
fildll
xor
lcall
test
popa
sbb
cwtl
sti
sbb
add
addr16
mov
xlat
push
les
ds
int
loope
std
enter
add
lea
mov
shrb
push
popf
sbb
xchg
insb
jne
iret
mov
rorl
bound
add
inc
gs
dec
mov
pusha
shlb
jbe
inc
mov
fwait
cmp
fadds
scas
scas
xor
sarl
push
lret
add
mov
push
cmpsl
push
addr16
lahf
mov
pop
cli
mov
int
adc
je
lock
call
push
jo
cs
les
lock
iret
sbb
mov
mov
aas
rcrl
lods
pop
mulb
push
jae
cmp
inc
xchg
fisttps
push
fnstenv
loop
mov
dec
jl
ret
sbb
sahf
mov
imul
adc
sub
test
mov
xor
jmp
jnp
repnz
jle
add
outsl
push
push
jp
adc
push
movsb
push
cli
xor
mov
shrw
fmull
lea
and
mov
out
xchg
mov
stos
rclb
sbb
pop
dec
xor
out
fs
push
adc
pop
mov
xor
movsb
pop
push
inc
or
clc
fwait
dec
lea
gs
add
jne
pop
movsl
repnz
jbe
cld
sbb
mov
jl
sbb
mov
adc
push
or
scas
data16
fcmovnb
clc
test
aas
xchg
add
addb
stos
loopne
popa
sub
sbb
subl
rclb
insb
and
popf
dec
sahf
and
shrb
inc
loopne
pop
mov
cld
scas
insl
mov
push
adcb
xchg
dec
dec
je
loope
pop
xlat
push
cmp
or
jp
pop
sbbb
mov
movsl
fiadds
enter
or
popf
pushf
pusha
xchg
xchg
cmp
mov
xlat
add
nop
fs
stos
jb
jmp
ret
fs
jl
mov
pop
cmp
mov
outsb
ret
pop
push
data16
pop
dec
xchg
lock
push
inc
loope
fildll
cmp
jbe
jns
adc
push
loopne
testl
cld
lea
pusha
mov
pop
or
jo
ss
in
mov
fimuls
popf
pop
pop
in
push
cmpsl
jl
cltd
shrb
fidivrs
cltd
jno
mov
adc
test
mov
mov
sbb
mov
cmp
mov
xor
ss
and
aam
xor
js
jns
cmpsl
push
sub
cmp
and
icebp
sub
lds
and
mov
fistpl
push
inc
push
inc
ror
add
add
sub
pusha
inc
push
faddl
jbe
shl
mov
movl
add
jne
or
in
sbb
popa
adc
push
cmpsb
xor
sbb
add
cwtl
xchg
test
mov
mov
scas
repz
push
imul
pop
cwtl
xor
push
or
es
sti
inc
mov
ror
jns
aaa
pop
push
cmp
cmp
sahf
dec
test
cmpsb
loopne
rclb
mov
mov
push
lods
or
xchg
push
ret
push
movsl
test
movsl
push
je
and
push
fwait
mov
shl
test
fldl
ret
bound
cmp
mov
loope
jecxz
outsb
pop
xchg
sub
test
lret
jmp
jecxz
cmc
mov
cs
out
inc
hlt
and
inc
sub
jl
aas
mov
outsl
hlt
ret
jmp
ss
push
jecxz
inc
int3
cmp
jae
lds
outsl
push
fstps
push
aam
cli
insb
add
adc
rcrl
mov
mov
and
test
ss
xchg
ret
insb
jge
adc
pop
scas
aad
subl
in
pop
xchg
aaa
sbb
ljmp
adc
mov
mov
loop
repz
test
movsb
adc
xchg
cld
jno
xor
fs
mov
pop
sti
in
jns
xor
mull
rcr
xlat
cli
sbb
lret
cmc
insb
imul
stos
cmpsb
mov
jle
xor
stc
inc
push
push
test
mov
cmp
sbb
push
sbb
rcl
ljmp
pop
and
mov
jo
or
popa
pop
jo
in
or
xchg
clc
cs
mov
std
dec
insl
pushf
lret
mov
bound
sub
jno
int
xor
mov
inc
mov
cmp
sub
shrl
mov
mov
mov
push
xor
xchg
jl
push
ror
shlb
xchg
mov
xchg
addr16
out
cmp
daa
mov
xchg
pop
lret
das
jne
jno
cmp
fistpl
mov
or
nop
xchg
sbb
idivb
cli
or
jo
fwait
stos
mov
aam
cli
inc
xchg
hlt
mov
xchg
hlt
pop
mov
fcmovu
fadds
xor
mov
sub
jne
xchg
hlt
iret
test
mov
notl
faddp
or
dec
jb
rcll
pop
rcll
fisubrs
xlat
xchg
dec
cmp
ss
fdivrp
cltd
in
ret
mov
push
dec
or
cs
fwait
leave
mov
std
dec
mov
push
mov
shll
out
jb
xchg
out
int
loopne
nop
test
js
ret
mov
xchg
insl
push
in
lock
into
ret
addb
jle
cmpsl
pop
cmpsl
or
pop
mov
push
pop
and
loope
xor
xlat
dec
in
pop
push
fdivr
shl
cmp
adc
jecxz
mov
or
fwait
push
lock
fcoml
push
shlb
jb
sahf
pop
dec
mov
push
nop
lret
clc
stos
xchg
fnstenv
loopne
adc
inc
loop
push
jns
test
divb
rsm
push
clc
xor
xlat
dec
in
leave
jnp
sbb
adc
adc
jg
inc
pop
int3
mov
xor
jmp
xchg
cwtl
icebp
popf
popf
icebp
popa
jmp
jl
sahf
mov
push
dec
mov
jle
dec
in
lock
adc
mov
sbb
ljmp
ss
jo
xor
mov
pop
jl
movsl
jecxz
add
dec
jmp
xchg
imul
add
mov
call
mov
pop
lods
cmc
cmpl
push
data16
es
rcll
shll
aam
xlat
mov
inc
mov
mov
addr16
push
sbb
xlat
dec
icebp
sahf
sub
pop
sarb
mov
lds
aam
negl
push
cmc
loopne
mov
daa
int3
sub
pop
mov
jae
test
push
xor
out
mov
scas
rcll
dec
xchg
jnp
mov
cmpsl
adc
mov
mov
fcmovbe
dec
pop
mov
sub
cli
add
pop
sti
sub
addr16
pusha
subb
push
pop
inc
mov
adc
adc
cld
dec
ja
sbb
fstl
xchg
sbb
jo
mov
pop
pop
es
cmp
fwait
xchg
jbe
pop
cmpsl
adc
push
nop
out
sahf
pop
inc
repz
xchg
dec
imulb
xor
vxorpd
test
sbb
fs
test
sub
adc
pop
adc
sub
cmp
and
mov
movsl
cltd
ds
pusha
and
or
mov
push
je
out
jge
mov
or
scas
pop
or
inc
add
test
rorl
dec
loope
or
lret
call
mov
or
pop
adc
push
push
cmpl
sub
cmp
mov
movl
add
addr16
in
mov
sti
and
mov
lret
ss
mov
test
sbb
out
xor
push
adc
adc
xlat
sbbl
mov
cli
cmp
mov
fsubl
xchg
jecxz
cmp
sti
lds
mov
fstps
dec
sbb
pop
pop
test
cli
mov
les
fldcw
fisttpl
mov
xor
pcmpgtd
push
cli
imul
push
nop
pop
xchg
jg
out
lods
dec
jnp
add
fisubrs
sbb
sub
cld
cmpsb
and
imul
jecxz
xchg
adc
div
loop
xchg
popa
fs
xchg
sti
jae
mov
sbb
mov
cmp
cmp
adc
js
lods
fcmovb
aas
test
sub
jne
fsts
movups
inc
adc
inc
adc
test
pushf
enter
cmp
jb
nop
std
sbb
sbb
push
mov
sarl
inc
pop
pop
push
jne
int3
or
dec
adc
jne
sti
or
ljmp
or
pusha
sub
push
push
fs
sti
in
mov
sahf
dec
jp
mov
stos
aad
out
cmpsb
cli
sbbl
cltd
mulb
shrb
push
push
push
pop
dec
fnstsw
lcall
jb
pop
jne
sub
mov
test
and
movsl
xor
adc
pop
and
fwait
sub
mov
sbb
jmp
xchg
xchg
popl
and
int3
and
fdivs
lahf
loope
sahf
jnp
out
pop
mov
inc
push
shlb
aam
out
loopne
scas
ja
fiaddl
push
lahf
jns
lahf
xchg
das
dec
xchg
xor
inc
sbb
loopne
xorl
dec
es
push
jmp
jb
adc
es
and
xchg
shr
sub
int3
jo
jmp
xor
rorb
push
repz
movsl
inc
sub
mov
push
mov
gs
sub
pop
ret
and
sbb
mov
push
fdivl
insb
fnstcw
sbb
and
nop
xchg
daa
jo
out
xor
bound
rorl
mov
imul
sub
sub
jo
jg
aaa
ljmp
xchg
in
sub
in
mov
ja
and
dec
sbb
sbb
push
jmp
and
jne
cmp
gs
ds
lret
outsl
jge
mov
out
cmp
push
cmp
addr16
and
cmp
sub
roll
push
cmp
mov
lds
dec
rclb
dec
es
jb
jecxz
cmp
cld
dec
jecxz
adc
pop
dec
or
xor
and
or
sbb
sbb
movsl
xchg
sub
gs
or
push
or
dec
dec
mov
jp
push
jnp
daa
mov
xor
cs
jo
inc
das
fldl
vpaddb
test
loop
out
sbbb
dec
dec
or
les
popf
loop
std
repnz
aad
movsl
and
rolb
into
mov
adc
xlat
xor
adc
sbb
inc
mov
cmp
ja
add
sti
pop
dec
js
mov
adc
pop
lahf
mov
cmp
lods
in
seto
addl
mov
out
cmpsl
jb
jl
aas
data16
cld
push
xchg
out
jge,pt
rep
outsb
dec
cltd
push
test
and
push
mov
mov
cmp
leave
std
clc
xchg
cmpsl
jns
outsl
mov
adc
cmc
lods
dec
pop
call
inc
dec
sub
mov
test
js
or
arpl
inc
repnz
fwait
mov
in
inc
cld
rcll
stc
clc
mov
insl
adc
xorl
je
or
pop
lcall
sub
test
cmp
jo
dec
aas
push
psadbw
xchg
jecxz
adc
mov
lret
out
in
xor
jns
xchg
scas
gs
mov
rcl
mov
scas
fsubrl
or
mov
sarl
movsl
jg
jbe
loopne
loop
pop
loop
sti
jnp
lcall
inc
div
std
mov
or
push
enter
sahf
pop
into
lret
out
fcmovnbe
pop
push
daa
mov
mov
mov
out
push
inc
jno
push
sub
vshufps
scas
stc
xchg
lea
cmpsb
jge
pop
jecxz
and
inc
pop
out
cmpsb
pop
gs
ret
pop
adc
mov
les
fistpl
push
popa
cmp
xor
daa
sbb
xchg
ja
dec
aad
or
pop
lea
and
adc
roll
sub
cmp
imul
mov
pop
js
adc
js
outsl
fidivrl
lret
ret
stos
fnsave
add
mov
mov
dec
mov
pop
pop
aas
aam
in
dec
and
cmp
stos
loope
aad
shlb
cwtl
in
iret
xlat
js
stos
and
or
xchg
inc
push
inc
in
mov
or
lds
sbb
nop
imul
jp
sbbl
pop
dec
or
push
icebp
lods
and
pop
neg
es
add
xor
push
mov
out
ljmp
mov
stos
repz
pop
push
icebp
mov
add
cmpsb
mov
pushf
repz
in
ljmp
sub
ret
pop
rcrl
and
sahf
jb
in
pop
push
cmp
sbb
dec
icebp
mov
insl
dec
add
or
mov
aad
jecxz
xlat
or
sub
dec
cs
and
jp
data16
in
adc
inc
jnp
or
or
popf
pop
push
lds
mov
sbb
mov
and
jae
mov
lcall
sti
xchg
dec
cwtl
adc
nop
stc
dec
xor
pop
jo
jns
pop
inc
or
xor
xchg
adc
jo
inc
fwait
dec
flds
inc
jle
aaa
loope
insb
in
clc
insl
dec
sub
dec
stc
push
ljmp
push
dec
adc
in
mov
ss
xchg
hlt
jl
lret
aas
fsubrl
sub
jns
jecxz
sub
xchg
lds
cmpsb
lods
arpl
enter
pushf
stos
mov
popa
mov
out
cltd
faddl
adc
ja
bound
or
adcl
xchg
jns
adc
cmpsl
pop
mov
xor
movb
or
lret
cltd
test
xchg
jae
in
aaa
rclb
sti
sti
add
das
inc
cmp
fcompl
lahf
add
or
mov
and
mov
sti
jge
xchg
bound
enter
rcrb
ja
adc
lods
sbb
pop
jmp
cmp
lds
fldl
hlt
pushf
adcb
test
fwait
jp
jecxz
adc
test
jno
push
add
push
outsl
stos
mov
lods
adc
sub
jne
int
dec
aas
dec
lea
xchg
les
cmpsb
dec
lock
bnd
push
fwait
inc
cmp
lods
add
enter
xchg
daa
mov
push
jns
cmpsb
loope
or
ds
xorb
ja
in
xchg
mov
outsl
insl
nop
aad
outsl
flds
loope
test
bound
push
in
sub
push
lds
movsl
and
repnz
js
jae
aam
mov
lds
mov
shrb
mov
arpl
mov
std
loopne
cmp
pop
aaa
fwait
mov
test
mov
roll
icebp
xor
in
test
lods
inc
lcall
loop
std
stos
mov
outsb
lret
jne
inc
insb
test
pop
lods
loope
xor
loope
movsl
in
loop
mov
jno
daa
clc
inc
add
jge
cmp
es
imul
faddl
mov
insb
pop
pop
pusha
dec
xor
inc
repz
push
dec
cmc
push
sub
bound
stos
xor
cmp
and
push
scas
imul
out
and
mov
lods
mov
dec
insb
ret
cmc
xchg
sub
sti
push
push
sbb
ret
stos
out
mov
mov
pop
or
fisubrl
dec
dec
jl
or
enter
or
jns
subb
clc
pop
push
inc
mov
jae
mov
arpl
sub
popa
pop
stos
mov
dec
push
mov
lret
xchg
faddl
pushl
dec
outsb
rcrb
outsl
ror
imull
sbb
push
pop
inc
lret
or
mov
ret
mov
jno
aas
outsl
insb
std
nop
dec
push
lret
out
jns
ror
leave
mov
js
roll
cld
dec
int
icebp
adc
mov
xlat
or
and
or
sarl
test
and
xchg
add
jmp
mov
lods
insl
adc
xchg
ja
lahf
aam
or
xor
dec
sub
cmp
pushf
dec
movsb
mov
nop
cmp
mov
out
jle
pop
pop
loope
cmpsb
or
and
ss
repz
popf
sbb
dec
in
mov
inc
shrl
push
iret
out
pop
inc
adc
xor
jnp
cmp
sti
adc
pop
pop
push
mov
insb
xor
mov
js
push
or
loop
push
pop
out
add
sub
lods
xor
xchg
in
pusha
mov
popf
popa
jne
fidivs
pushf
adc
jmp
ret
daa
fucom
adc
inc
ljmp
xor
call
lret
aad
cli
addr16
inc
insb
xlat
pushf
dec
ret
and
pop
jo
mov
mov
ss
imul
sub
inc
pusha
enter
jne
lods
cmp
jo
sar
scas
pop
icebp
pusha
idivb
push
cmp
nop
outsb
dec
mov
add
lret
arpl
leave
shll
pop
test
lock
inc
addr16
adc
out
fdivrp
mov
and
hlt
cs
push
pushf
hlt
aam
aad
xchg
adc
cmp
bound
push
inc
or
push
and
fwait
cmp
dec
add
je
jmp
sub
pushw
push
dec
imul
pusha
and
mov
sub
int3
xor
and
outsb
iret
pop
in
je
inc
sbb
xchg
test
out
dec
lock
in
test
mov
call
addr16
popa
out
pmovmskb
jle
add
jnp
mov
add
orl
sti
cwtl
cld
or
inc
fwait
jle
push
and
cmpsb
cmpsl
je
mov
aad
aaa
and
aad
daa
sti
clc
sbb
movsb
push
xchg
dec
gs
mov
out
mov
jp
ss
mov
fmull
pushf
movsb
xchg
mov
popf
mov
popa
enter
adc
icebp
mov
test
pop
mov
adc
imul
rcrl
push
std
push
rcrb
pop
push
dec
and
ret
cld
test
xor
test
inc
movsl
dec
test
stos
out
lods
push
ds
pushf
bound
dec
mov
imul
ret
loopne
std
jp
sbb
and
jle
push
pop
mov
sub
gs
shrb
rcrl
jmp
mov
aam
in
xchg
add
cmp
sbb
pop
vucomiss
pop
sub
incl
ja
push
imul
ror
cmpsl
pop
fistpll
sbb
bound
loopne
ja
dec
bound
cs
xchg
add
push
sbb
clc
aaa
push
insb
mov
inc
addb
repnz
mov
inc
pop
mov
out
aam
mov
inc
mov
idiv
adc
stos
push
dec
sub
shlb
push
out
in
inc
in
sbb
ja
mov
jnp
cli
or
add
cli
pusha
in
cmp
jns
push
xlat
jno
loopne
mov
adc
ljmp
mov
in
push
push
lods
test
jbe
jge
adc
outsl
push
add
and
iret
lret
cwtl
push
test
stos
xor
xchg
rcrl
gs
stos
push
icebp
mov
inc
mov
fcompl
sbbb
mov
sub
dec
jno
jnp
aad
mov
adc
mov
out
xchg
adc
bound
inc
or
ficoms
sub
jno
jl
push
dec
push
add
xchg
or
push
loope
in
jnp
ss
mov
inc
dec
mov
imul
jae
int3
mov
fwait
or
jp
fcomip
mov
icebp
fisubs
addb
js
cmp
fcomps
cmpsb
mov
into
sub
adc
loope
cltd
dec
cld
cmpsl
nop
movsb
aad
icebp
pushf
push
mov
ret
inc
sbb
ret
negl
mov
jecxz
test
outsl
push
adc
cmp
pop
lds
ss
jg
bound
repz
xor
ret
and
push
inc
or
add
leave
push
addr16
add
xor
pop
dec
xchg
push
xor
in
outsb
sub
mov
inc
dec
ss
shl
ss
std
mov
jo
adc
cld
in
out
jb
sub
add
ret
aam
inc
dec
cmp
pop
dec
movsb
lods
addr16
sub
pop
imul
lods
xor
inc
pop
push
orl
sarb
jg
call
lcall
cmp
dec
cmp
push
stos
or
aaa
fimull
adc
pop
cmp
mov
stos
mov
mov
jnp
arpl
sub
sub
jns
gs
imul
pop
dec
cmp
cli
sti
pop
fisubrl
fwait
int3
iret
xchg
jb
and
sub
adc
cmpsl
stos
fstpl
pop
pop
jge
clc
lds
movsb
sbb
idiv
jle
nop
xor
out
mov
repz
inc
jae
ss
les
jecxz
or
sbb
call
aaa
mov
xchg
lds
cmp
sub
sbb
cmpl
in
mov
xor
fcmovnb
xor
das
xor
adcl
pusha
sahf
lea
adc
lfs
pop
scas
es
jb
fisubl
fs
pusha
std
jg
outsb
lcall
mov
shlb
psubb
int
rolb
stos
ret
push
test
push
push
movb
popa
dec
fldl
jmp
aad
cmc
dec
xor
push
push
idivl
loop
mov
lcall
adc
or
mov
ja
mov
push
out
xchg
cwtl
in
cmp
bound
cmp
mov
pusha
mov
pop
aas
pop
inc
push
jg
ljmp
and
test
pop
loope
repz
loopne
cwtl
pushf
int3
mov
xor
bound
pop
add
xchg
mov
stc
out
cmp
jns
xchg
push
mov
mov
or
int3
adc
mov
mov
movsb
int3
stc
cmp
das
lds
xchg
inc
inc
lcall
adc
jbe
aam
out
imul
inc
cmp
aaa
adc
and
xlat
dec
test
lods
lds
sti
mov
dec
sbb
push
mov
ret
dec
in
push
stos
js
loop
sbbb
cmpsl
adc
movsl
mov
sub
movsl
cmp
or
hlt
es
and
stos
dec
aad
mov
push
push
xor
mov
xchg
iret
cmp
lea
sbb
add
aad
dec
fbstp
popf
mov
and
mov
arpl
pop
xchg
mov
inc
jb
mov
cmp
pop
mov
pop
dec
lret
xchg
sub
mov
es
xchg
icebp
outsb
icebp
scas
andl
xchg
clc
scas
xchg
fildl
sbb
sub
leave
or
fisubrl
aas
pop
fwait
jno
sub
aad
jg
adc
dec
xor
xorl
not
xlat
data16
out
sbb
cld
jbe
dec
mov
cmp
movsl
mov
pushf
dec
cmc
lahf
adc
movsb
pop
fistpl
inc
sub
bound
mov
cmpsl
inc
add
xor
mov
stos
add
rol
das
pop
and
movsl
adc
add
jg
sbb
dec
pop
add
adc
push
loop
push
mov
inc
out
or
movsb
add
and
movsl
pop
lret
mov
lcall
mov
mov
arpl
sahf
cmp
es
mov
sti
jo
aam
popa
add
ja
pop
mov
in
mov
jns
insl
sub
xchg
xchg
js
fdivp
mov
jb
mov
cmpsl
leave
repnz
adc
sti
je
cltd
popf
cwtl
mov
enter
dec
or
adc
shr
push
sbb
xor
xchg
sub
jl
lods
pop
into
arpl
mov
iret
jge
insb
lods
mov
dec
jl
into
adc
sbb
jle
cli
stos
repz
mov
pushf
sbb
jae
adc
fadds
pop
lds
ljmp
lret
mov
xchg
aam
pop
je
jno
rorl
and
mov
inc
adc
mov
out
into
mov
pop
or
into
pop
mov
movsb
xchg
xchg
ret
shr
pop
xor
pop
pop
lcall
cmpsb
mov
mov
pushf
sub
dec
xorl
and
or
mov
cs
jo
insb
arpl
shlb
or
pop
stos
fnsave
push
ja
in
jo
mov
push
mov
ljmp
popf
or
mov
cs
pop
ja
jge
sbb
insb
int
push
pop
xor
lahf
mov
imul
cli
ret
jecxz
ja
mov
jo
xor
mov
das
jg
inc
mov
pop
and
fmuls
in
xchg
fistpl
fldl
aad
les
lret
jns
cltd
pop
call
jns
pusha
jbe
data16
jns
int
dec
xor
imul
and
cmp
daa
xlat
jp
push
sub
into
inc
je
aaa
out
mov
cld
sub
jno
sbb
ss
add
cmp
aaa
and
test
add
pop
sub
lods
adc
cwtl
icebp
test
lods
lret
in
dec
aaa
xchg
testl
push
in
pop
sbb
fsts
pop
adc
notb
and
add
lds
imul
mov
adc
jne
fcomi
jns
nop
pop
push
mov
dec
lret
xchg
fldl
scas
dec
xchg
xor
sub
loop
fisubrs
addps
es
mov
xchg
clc
mov
invd
mov
add
sub
cwtl
add
jbe
arpl
xlat
ljmp
pushf
or
inc
in
inc
jnp
ja
push
pop
ret
popf
scas
add
adc
stos
and
test
cmpl
jp
clc
mov
mov
cmp
shrb
jmp
mov
mov
cmpl
inc
push
pop
addr16
cld
cltd
loop
leave
add
inc
xchg
stc
jno
mov
jns
inc
fwait
inc
cltd
out
mov
ud0
jns
enter
xor
pop
loopne
sub
lahf
fldcw
hlt
pop
addr16
pop
fsubp
cmc
jge
mov
mov
std
cltd
or
jmp
adc
ja
push
into
cltd
lahf
sbb
pop
ret
add
fistpl
pop
pop
idiv
shlb
inc
pop
cld
and
dec
jo
push
xchg
mov
cmpsb
cmpsb
jb
jl
outsl
mov
jb
lcall
outsb
rcr
jmp
imulb
pop
cmp
jo
sub
xchg
push
insl
lret
test
push
cmp
xor
arpl
out
push
xchg
idivb
imul
inc
test
insb
pop
push
dec
sub
push
insb
mul
xchg
push
lods
pop
adc
movsb
mov
mov
shll
add
sbb
data16
push
push
cmp
dec
mov
cltd
out
stos
in
mov
aaa
andl
push
push
movsb
mov
mov
addr16
sub
mov
ret
mov
ss
cld
dec
ja
loopne
adc
daa
push
dec
or
ljmp
inc
cmc
into
ljmp
xchg
clc
sbb
mov
test
loop
loopne
ss
pusha
sub
enter
ret
test
sub
iret
cmpsb
je
aam
sub
insl
adc
es
jno
mov
mov
ja
mov
dec
jl
jne
pop
jns
imul
in
ljmp
mov
xchg
mov
add
mov
push
and
pop
fstl
push
cmpsb
shlb
std
jnp
call
loopne
enter
insb
in
push
adc
out
test
inc
cmp
pusha
xor
mov
or
mov
jl
pop
lods
cmp
pop
pop
push
fcos
push
xchg
push
adc
daa
sarl
mov
dec
pop
jge
lret
add
inc
loop
movsb
je
movlps
js
ficompl
mov
rclb
cmpsb
fsubrl
mov
sbb
jg
fadds
mov
cltd
and
int
add
add
push
ret
dec
test
out
xor
mov
sahf
xor
and
xchg
or
and
mov
cli
mov
sbb
lcall
push
pop
mov
popa
fists
fistps
inc
pand
inc
cli
inc
stos
mov
orl
add
sub
pop
out
sub
lret
sub
mov
pop
les
adc
out
clc
frstor
mov
lds
sub
lahf
push
mov
add
push
sbb
adc
push
mov
hlt
fistps
test
xchg
sar
dec
enter
rclb
adc
stos
push
jmp
and
xchg
mov
outsb
clc
or
je
imul
fnstenv
push
xor
xchg
pavgw
int
hlt
hlt
mov
cmp
push
popa
js
sub
mov
or
popf
adc
jns
ret
cmp
lea
test
divl
xlat
adc
sub
mov
xchg
sub
inc
adcb
fsubs
sets
sbb
sub
pop
xor
in
push
pop
lcall
pop
lods
test
push
push
in
das
lods
das
jne
adc
in
push
mov
mov
in
push
int3
inc
jg
jg
outsl
mov
sub
push
add
jb
xor
xlat
fimull
stc
andl
xchg
aam
mov
leave
inc
hlt
mov
cmp
jnp
je
dec
mov
cltd
and
mov
adc
loop
cmp
xor
fnsave
jbe
stc
jne
jo
jno
adc
in
cmp
outsl
pop
jmp
sbb
pop
fildl
mov
add
inc
leave
addr16
loop
rcl
fsubrp
or
aas
and
inc
lahf
dec
test
xchg
mov
cmpsb
xchg
mov
jno
pop
nop
in
jg
push
pop
xor
xor
fnstenv
adc
insl
sbb
xchg
sbb
sbbl
out
std
in
push
fisubs
out
jl
xor
inc
jl
mov
and
sub
push
xchg
imul
adc
jg
ss
and
push
into
or
xchg
stos
jb
add
xchg
test
xchg
pop
or
cmpsb
leave
aaa
std
scas
dec
push
div
cmpsb
lcall
sub
imul
imul
sub
and
sub
xlat
jns
push
addr16
xor
dec
adc
dec
mov
ret
push
icebp
xchg
sub
fldt
adc
and
mov
xor
adc
jno
mov
pop
mov
data16
add
mov
sahf
ss
jp
inc
mov
in
shll
adc
adc
push
clc
jbe
mov
js
xchg
adc
enter
outsl
sbb
push
call
sbb
push
inc
xor
inc
dec
push
lds
and
data16
mov
js
pop
inc
push
adcl
addr16
out
xchg
add
and
jns
mov
pop
cmp
mov
mov
out
inc
jl
jae
lahf
ds
or
insb
sbb
ret
stos
arpl
imul
bnd
and
mov
mov
sbb
mov
addl
mov
add
arpl
pushf
mov
pusha
dec
cmp
dec
repz
rcll
pop
rclb
sub
sub
shlb
xchg
ss
jb
std
mov
lods
movl
nop
ja
jp
push
cmp
out
push
push
xor
push
sbb
aas
push
dec
lahf
outsl
outsl
sbb
pop
addl
or
int3
jg
and
ret
push
lds
jb
pop
lret
adc
sar
stos
jmp
shl
sbb
jle
sub
adc
mov
dec
cltd
push
int3
mov
sub
lods
test
imul
les
das
jbe
fistps
leave
outsl
out
pop
mov
jl
movsb
lods
imull
mov
mov
shlb
cmp
cld
pop
int
xchg
fwait
ret
pop
mov
cwtl
ja
adc
mov
push
push
xor
cmp
enter
shll
insl
xor
je
cmpsb
fs
xchg
pop
int3
mov
mov
ja
out
std
dec
enter
lds
aad
push
shrl
loope
sbb
inc
or
lcall
js
sbb
pop
inc
fwait
mov
push
sub
pop
cmc
mov
cmp
scas
movsl
pop
pop
iret
mov
dec
in
shll
pop
lods
fcoms
fstp
lea
pop
movsb
outsb
call
loop
iret
xor
aaa
xor
lods
jno
std
push
push
nop
ret
xchg
sahf
sbb
sub
loope
push
stos
and
in
inc
test
cmp
xchg
rcrb
sub
mov
cmpl
jmp
cmp
out
adc
fstpl
stos
cmp
jnp
mov
adc
mov
bound
cmpsb
and
adc
adc
pop
mov
inc
addr16
cmp
pop
ret
sbb
clc
mov
es
sti
imul
jo
scas
popa
cmp
sbb
enter
scas
fucomp
shrb
mov
pop
xchg
xchg
adc
int3
out
xor
popa
stos
xor
add
movsb
inc
dec
lret
fmul
pmaddwd
and
pop
fisubrl
push
mov
dec
pop
cwtl
cmpsl
dec
inc
sub
adc
es
mov
fidivs
jbe
and
push
mov
adc
arpl
sub
loop
aas
imul
aaa
push
out
dec
add
add
setl
test
push
xchg
cmp
clc
icebp
sbb
cmpsb
mul
push
fnstcw
shl
test
in
mov
dec
int
mov
xlat
add
pop
xchg
movsl
pop
js
sub
pusha
dec
add
push
clc
pop
or
and
mov
cli
dec
lret
mov
adc
hlt
test
push
xor
push
pminsw
jns
fidivrl
cli
roll
and
sub
addb
out
and
push
cmpsb
adc
clc
cmp
pop
xlat
leave
and
popa
pop
mov
adc
xchg
jg
sbb
daa
imul
adc
flds
cmc
push
out
stos
fstl
push
mov
dec
mov
add
pop
inc
mov
lcall
je
pop
xchg
mov
xchg
jo
leave
mov
sub
stos
outsl
outsl
xor
cmpsb
out
inc
ret
mov
sub
aaa
mov
xchg
cmc
insl
outsl
pop
dec
lahf
jecxz
dec
xor
lods
mov
fsubrs
shll
out
rcrl
cmp
and
mov
popa
sti
add
enter
push
jecxz
inc
fisubl
or
loope
mov
test
add
pop
lods
in
loope
jo
test
mov
mov
sbb
adc
fstpl
je
das
mov
jmp
and
inc
or
aad
dec
int
out
xchg
lock
sbb
ret
stc
sbbb
push
lahf
out
int3
lods
jle
mov
xlat
insl
bnd
stos
loope
call
sub
push
data16
cmp
icebp
insl
imulb
insl
cmp
mov
and
inc
cmp
xor
cli
fldcw
mov
mov
loope
lods
push
repnz
inc
mov
jge
psadbw
out
clc
cmp
jmp
inc
insb
repz
les
lcall
add
push
insb
mov
xchg
in
outsb
mov
xlat
inc
fidivl
ds
dec
xchg
sti
into
mov
mov
cli
movsl
push
push
mov
dec
bound
orl
ss
test
scas
sbb
adc
add
into
jle
sar
andl
faddl
xor
loope
cmc
sub
cmpl
xchg
icebp
sub
add
dec
cld
lret
test
sub
movsl
xor
pop
mov
iret
sti
jae
add
sub
mov
stc
mov
outsl
jno
fsubrs
sub
arpl
pop
rorb
pushf
sub
jae
rcrl
daa
je
ds
arpl
int3
xchg
jmp
dec
sbb
pop
rdtsc
div
jnp
pop
sarl
lods
push
pop
fisubrs
pop
or
movl
pop
jb
inc
scas
test
pop
fs
jne
frstor
and
sbb
test
dec
pop
idivl
addl
pop
pop
or
mov
cmp
xchg
dec
add
add
and
pop
lods
push
or
mov
push
mov
sbb
cmc
mov
rorl
push
loopne
cli
ret
pop
in
and
xchg
pop
gs
cmp
mov
pusha
adc
gs
push
icebp
ret
divl
jp
xchg
pop
xchg
call
mov
bound
xorl
or
sub
cs
xor
cmp
lcall
dec
fwait
loope
or
jmp
push
scas
cmpsl
enter
mov
inc
fdivrl
decl
and
add
sbb
mov
jl
movsl
call
in
dec
repz
jmp
jbe
mov
test
xchg
mov
or
mov
ret
cmp
leave
jp
scas
mov
sub
test
arpl
mov
push
sbb
or
stos
fstpt
xchg
mov
roll
sbb
negb
jo
mov
mov
mov
shrb
inc
sub
mov
dec
scas
mov
lea
and
add
dec
cmpsl
pusha
fnstenv
mov
ja
movsb
add
mov
and
xchg
mov
adc
mov
mov
pop
shrb
into
addr16
ja
insl
xlat
pushf
push
int3
inc
push
mov
cmp
imul
fs
and
fwait
sub
sub
jno
xorl
aaa
mov
pop
test
or
aad
fisttpll
jo
inc
fldenv
pop
ja
mov
or
loop
lock
and
cld
pop
and
adc
notb
into
inc
cmpsl
jle
mov
pop
pop
lock
mov
sub
psubusw
fistpll
arpl
cmp
pop
lret
dec
mov
and
addl
js,pn
ret
dec
adc
jmp
mov
jb
and
cltd
cmpsb
mov
scas
jno
add
xor
sbb
jae
xor
pop
pop
push
ja
out
je
jmp
mov
xor
insl
fnstenv
data16
jecxz
leave
fisttpll
pop
xchg
jns
fidivs
sahf
in
pop
push
aad
loope
popw
iret
xchg
imul
mov
mov
or
inc
in
xchg
adc
xchg
add
jne
mov
pop
sub
shl
call
add
fcomp
outsl
and
sbb
mov
data16
in
fdivl
in
addr16
and
mov
push
xchg
and
sub
cmp
fidivrl
das
sub
daa
jp
gs
sarb
xchg
mov
adc
dec
xchg
fidivrs
sub
lret
jo
lret
popa
fcoms
pop
xchg
sub
sbbb
sahf
mov
mov
shr
push
loope
cmp
mov
daa
mov
xor
fldl
int3
int
push
xchg
lock
hlt
xchg
or
outsl
subb
mov
dec
jns
and
and
xor
dec
loop
dec
or
cmp
stc
sbb
and
or
lcall
mov
adc
mov
out
dec
jb
push
push
cmp
pop
mov
imul
subb
and
shlb
ror
nop
mov
ljmp
call
les
aaa
mov
mov
loope
pusha
out
ja
stc
decb
loope
cmp
inc
sbb
ja
ljmp
cld
sbb
fstp
inc
mov
xor
jle
mov
xchg
imul
cmp
lds
sub
sbb
orb
int3
cmp
call
insb
subl
and
add
dec
mov
push
lahf
xor
mov
aas
lahf
push
cmp
aaa
pop
cmp
movsl
adc
sub
inc
mov
inc
pushf
cmp
aaa
jl
push
lods
jmp
inc
gs
adcl
sbb
inc
test
inc
xchg
aad
cltd
mov
test
push
arpl
sbb
mov
or
xor
insb
std
arpl
imul
xchg
iret
movsb
mov
sar
mov
mov
cltd
cmpsl
in
popf
inc
insb
out
jb
pushf
dec
xchg
inc
pop
sti
push
call
mov
add
in
addr16
dec
jbe
cmp
add
out
push
jne
add
loop
or
gs
sbb
ljmp
cmp
xor
inc
ror
in
adc
add
pusha
in
pop
push
push
sub
xchg
sahf
testb
sbb
push
push
mov
dec
stos
mov
clc
lret
jmp
mov
and
les
lds
mov
js
inc
fld
das
jecxz
test
fwait
dec
xor
adc
cmp
adc
cmpsl
fadds
out
loope
mov
mov
gs
mov
fs
mov
xchg
mov
pop
rcll
popf
jnp
dec
cli
dec
mov
inc
xor
push
xor
mov
call
mov
fcoms
adc
adc
pop
fildll
mov
inc
loop
mov
pushf
sahf
xchg
mov
mov
jp
pop
jb
fdivrl
out
cmp
sub
pushf
jp
cli
loope
mov
ret
ja
into
test
jecxz
xchg
aas
nop
imul
cmpsb
mov
ds
mov
out
sbb
cmp
xchg
cmp
add
test
xor
inc
pop
and
fneni(8087
sti
lods
movl
jns
add
sbb
mov
sub
fs
shl
notb
inc
inc
sub
scas
inc
mov
jno
sbb
cs
push
adc
add
xlat
pop
mov
aad
jns
mov
jp
arpl
cmc
sub
cmp
out
fld
cmp
insb
int
jne
push
inc
and
push
adc
dec
nop
jge
hlt
imul
inc
sbb
js
pop
or
xchg
push
insb
mov
jl
xchg
push
mov
int
sbb
out
test
cmc
insl
pushf
pop
imulb
push
adc
jne
inc
enter
pop
push
push
pusha
or
sbbl
cmc
fistpl
bound
repnz
repnz
lahf
dec
imulb
jns
sbb
gs
and
mov
hlt
lret
sahf
inc
mov
jmp
cmp
fs
inc
xor
add
nop
pop
push
lahf
mov
push
push
jge
aaa
add
adc
jb
cltd
test
lret
aad
mov
shufps
pop
cmpsb
in
mov
and
inc
add
dec
cmp
rolb
lsl
fcmovne
adc
cli
js
push
lret
lea
xchg
fbstp
jp
add
pop
lods
jo
test
sub
mov
jl
lahf
shl
adc
cmp
out
sub
fs
push
pop
fcomps
or
jle
sub
xor
mov
push
stos
stos
xchg
insl
push
rclb
ds
hlt
or
jg
loop
addl
cmp
inc
lds
adc
push
and
and
mov
sbb
mov
add
cmp
push
adc
sub
xchg
sbb
ss
jl
or
leave
aas
push
pusha
dec
adc
lret
mov
dec
push
andb
lea
cmp
sbb
inc
jmp
add
mov
and
lea
pop
push
and
mov
pop
dec
imul
xor
inc
shrb
sub
dec
xor
add
and
dec
jecxz
adc
jg
jmp
and
dec
rorl
jnp
stos
pop
sbb
dec
das
mov
es
jae
mov
jbe
fstl
sbb
and
addr16
aad
add
mov
scas
jo
jno
fwait
xor
push
cmp
fidivrs
in
inc
ljmp
lcall
mov
sub
dec
bound
pop
cmp
push
jne
mov
push
or
notl
daa
lods
gs
cs
ficoml
popa
std
daa
pushf
mov
xor
xchg
bnd
jg
scas
stc
inc
or
out
popa
test
pop
aad
cmp
ja
icebp
int3
jo
inc
out
lcall
lods
sub
push
and
and
jae
fsubrl
cmp
xchg
pop
mov
inc
cmpsb
mov
adc
xchg
adc
xchg
lods
push
iret
in
push
cmc
loope
push
insb
adc
clc
sbb
mov
push
sub
inc
pop
adc
loopne
or
arpl
or
lock
jl
clc
aas
std
jge
mov
mov
in
mov
and
stos
ret
cltd
pop
fcmove
xor
ret
into
jp
push
and
fwait
mov
sbbb
enter
and
pop
pop
std
mov
lods
jp
xchg
dec
and
adc
cmpsb
test
in
add
jmp
push
andb
dec
push
inc
inc
imul
mov
repz
in
push
in
mov
mov
orl
mov
fbstp
hlt
fidivl
mov
into
mov
mov
idivl
adc
xchg
jnp
pop
cmpsl
adc
out
or
pop
inc
mov
pop
int
cmpsl
daa
sbbl
inc
cltd
dec
mov
xchg
iret
popa
push
mov
popa
sbb
fisubl
test
cmp
jb
and
cmp
call
aad
jg
cmc
pusha
sti
std
push
int
aam
stos
adc
les
in
ja
mov
push
xor
movsl
mov
dec
in
negb
mov
jb
push
or
pushf
repnz
jmp
pop
lock
jno
or
jle
sbb
into
rcr
sbb
dec
jb
mov
inc
xchg
mov
push
mov
push
lds
pop
aaa
out
mov
fnstenv
push
add
lds
scas
jnp
sbb
xchg
add
or
dec
idivl
sti
mov
nop
icebp
add
insb
add
xchg
dec
loop
aad
xlat
jno
lods
enter
sub
bound
cwtl
push
push
dec
vucomisd
jmp
das
push
lods
inc
pop
sub
hlt
mov
movsb
jbe
sbb
mov
int3
insb
jmp
push
in
mov
pushf
add
fidivs
repnz
repz
test
cmp
es
jo
or
loopne
mov
push
mov
fsts
xor
add
add
imul
pop
push
mov
sarb
scas
jecxz
pushf
push
mov
ret
and
push
mov
incb
xor
sub
jbe
inc
int3
insb
int
jo
cmp
nop
or
aas
xor
dec
inc
sahf
aam
test
pop
push
iret
xlat
cmp
cmpsb
mov
push
cmp
pop
adc
xor
xchg
nop
mov
sbb
sub
scas
jnp
mov
push
pushf
flds
outsl
add
clc
mov
jne
das
aam
mov
mov
push
sarl
adc
insb
or
mov
cmp
pushf
xchg
and
mov
mov
inc
shl
mov
int3
mov
popf
adc
cmpsl
cmp
ds
pop
fisttps
pop
sahf
aaa
cmp
cmp
ret
xchg
inc
stc
sbb
in
jmp
push
adc
rorb
inc
mov
inc
cs
sbb
fwait
dec
pop
mov
jecxz
jbe
pop
lret
or
inc
sub
and
cmpsl
sub
mov
xchg
flds
aam
push
mov
cwtl
mov
iret
jo
int
add
cmp
push
xchg
jge
dec
mov
fmull
ss
and
sbb
cwtl
sub
test
xchg
aam
adc
in
test
jge
sbb
fdivr
lods
inc
adc
enter
scas
dec
aaa
repz
test
cmpsl
mov
jp
arpl
lret
or
mov
xlat
jae
or
jp
jle
lds
inc
imul
sbb
lret
pop
or
repnz
push
jecxz
xor
xchg
sbb
cwtl
int3
incb
mov
sbb
cmpsb
sbb
test
push
shl
push
mov
stos
inc
orb
sbb
xor
test
xor
loope
stos
xor
add
dec
movsb
fcomp
nop
shld
enter
lds
push
fstpt
cwtl
xlat
push
fs
js
and
dec
dec
inc
jne
mov
ficoms
int3
iret
movsl
out
pop
fndisi(8087
aam
sub
mov
shrl
pop
pop
das
cmp
xor
inc
sbb
popa
fdivs
xchg
or
mov
fidivl
mov
fadd
sbb
in
mov
cmp
jb
add
dec
fmul
sub
push
call
in
inc
add
xchg
pop
and
xor
push
out
and
lds
lods
sahf
mov
stos
call
jp
mov
mov
cmp
dec
sbb
daa
loope
pop
and
sub
adcb
and
leave
push
cmpsl
gs
out
out
imul
clc
jle
es
mov
mov
inc
lock
mov
insb
out
mov
aad
xlat
cmp
inc
aaa
adc
jne
repz
pop
push
ja
fwait
mov
inc
push
push
cwtl
push
test
dec
negb
shll
iret
cmc
adc
push
add
iret
loope
sbb
out
test
pop
ret
adc
adc
jno
mov
les
jl
inc
jns
cmp
aas
fstps
out
mov
fs
or
push
das
sbb
lret
aam
sub
dec
icebp
sbb
iret
cmp
sub
test
adc
mov
mov
xchg
ljmp
lods
or
inc
mov
sahf
imul
mov
bound
les
bound
es
cmpl
stos
mov
add
dec
jp
jno
movsb
cmpsl
or
leave
mov
adc
icebp
fdivp
dec
lcall
adc
mov
cmp
mov
sub
fcmovnb
jb
sub
sub
sub
lock
push
push
adc
sbb
jns
mov
pop
xchg
adc
inc
jge
lret
xchg
aas
mov
jmp
hlt
or
mov
dec
lea
pusha
sub
sbb
or
ret
pop
imul
and
fcoml
fdivrl
aas
fdivrs
shll
inc
mov
adc
mov
xor
pop
movsl
stos
push
mov
jp
int
xor
cmp
lret
mov
in
sub
shlb
js
xchg
mov
cwtl
sti
mov
inc
popf
fadds
pop
pop
mov
fwait
int
lahf
cld
popf
addl
je
movsb
test
pushf
arpl
mov
mov
repz
nop
call
popf
std
pusha
push
outsl
xchg
push
cmp
push
xchg
push
jle
and
jns
xchg
and
pop
adc
xchg
jmp
outsl
jb
mov
sub
nop
cli
faddl
mov
mov
add
dec
imulb
mov
into
sbb
jb
push
mov
mov
movsl
cmpsb
lcall
mov
xorb
ret
popa
xchg
pop
mov
mov
pusha
call
adc
push
inc
inc
das
fists
in
adc
movsb
sarl
xchg
in
nop
cmp
mov
xchg
mov
dec
dec
sub
push
adc
aaa
adc
jmp
repnz
fwait
nop
jecxz
adc
gs
test
jns
add
add
dec
add
ss
xchg
lret
push
jle
cmp
jle
stos
js
sub
call
fldl2t
add
pop
or
xchg
add
add
mov
js
sbb
rcll
cmp
dec
dec
and
lahf
in
add
daa
adc
or
push
sbb
sbbb
xor
adc
ss
xchg
xchg
adc
jb
fadds
stc
mov
pop
push
cmp
add
lret
xor
pop
jg
cmpb
popf
test
push
into
inc
aaa
dec
out
xchg
adc
dec
test
fs
mov
pop
shll
ds
data16
rolb
lock
xor
xchg
fnsave
push
push
or
jg
mov
test
es
int
je
mov
adc
push
xchg
fsubrs
pop
dec
or
shlb
in
fsubl
add
mov
push
dec
frstor
testl
mov
sti
sub
and
push
lds
in
fcmovnb
xlat
or
movl
push
mov
jb
push
pop
arpl
xchg
or
cmp
push
jno
popf
mov
fcompl
shr
and
xchg
jbe
out
and
sbb
fstpt
push
jl
sbb
fldl
xchg
xchg
inc
lock
adc
dec
xchg
stos
push
fs
lahf
out
gs
dec
add
out
icebp
pandn
and
dec
jp
setl
addl
cmp
scas
inc
xor
and
jb
cli
test
cs
dec
xchg
and
add
xchg
in
pop
stc
push
adc
mov
in
or
cs
add
and
div
add
stos
or
rcll
cwtl
sbb
push
mov
mov
out
xor
xbegin
ss
in
push
es
jl
fadds
mov
call
mov
sbb
out
fwait
aad
mov
push
dec
sbb
loopne
xchg
push
nop
mov
and
mov
test
push
adc
cmpl
ret
inc
into
ja
out
les
mov
aaa
mov
dec
es
jae
xor
push
inc
imul
out
jg
inc
js
jnp
and
adc
aam
adc
movsb
fs
stos
addl
mov
or
dec
inc
out
sub
insb
jbe
or
xchg
sahf
aas
mov
xchg
cli
or
in
gs
insb
pushw
mov
mov
movsl
mov
xorb
sub
mov
push
divb
mov
mov
stos
cmc
repnz
lahf
insl
or
and
push
pop
adc
jp
cmp
or
add
and
lds
orb
in
mov
insb
adc
add
pcmpeqw
mov
stos
mov
ret
mov
dec
xor
xchg
dec
or
aaa
jne
jno
insb
dec
jp
aam
cmc
jl
pop
cmp
cmp
add
cmc
lret
shrl
lret
shll
lods
adc
hlt
cmpsl
or
lret
jg
scas
dec
xchg
mov
jb
jge
mov
aad
mov
cmp
cmp
mov
mov
lcall
cmp
ds
sbb
jle
or
xor
sbb
sub
dec
mov
es
addr16
dec
sub
pushf
mov
fidivl
jecxz
push
mov
pop
or
push
ja
sbb
pusha
leave
and
cwtl
pusha
add
in
push
arpl
xchg
mov
pop
and
loop
roll
jbe
mov
jo
call
lret
jo
inc
cmp
lahf
cmpsl
mov
insb
mov
add
pushf
jg
mov
jnp
fwait
mov
push
stc
mov
xchg
stos
inc
loope
xchg
addr16
repnz
in
jnp
lods
clc
xor
fdivrp
inc
pop
mov
add
add
popf
push
lret
into
cmp
pop
popa
outsb
int
andb
sub
scas
fs
add
lods
mov
xchg
lcall
outsb
stos
push
aad
lock
dec
push
outsb
ror
lea
pop
sbb
dec
adc
xchg
xchg
cwtl
jp
mov
inc
pop
loope
xor
cltd
inc
fs
jg
dec
in
jmp
fs
int
in
mov
insb
mov
jp
dec
out
cmp
movsl
cmpsb
inc
ljmp
mov
stc
xor
mov
pop
popf
xchg
jne
jae
in
fwait
js
movsb
dec
lahf
rolb
hlt
inc
test
pop
mov
loop
and
sbb
jnp
fistl
dec
cmp
ficoml
popf
pop
je
in
mov
xor
insl
scas
push
jne
cmp
cli
dec
adcl
adc
mov
cmpsb
lret
jle
adc
sarb
xchg
fcmove
cs
xchg
cld
ss
scas
push
xor
cwtl
push
mov
mov
xchg
je
arpl
fldcw
test
sahf
test
popf
mov
sbb
jae
xlat
fiadds
repz
mov
mov
pop
xor
add
loopne
pop
fsubl
or
xor
das
call
sbb
dec
gs
pop
xchg
mov
sbb
out
mov
das
and
pop
test
xlat
outsb
and
cld
int
add
scas
mov
dec
mov
incb
mov
cmpsl
lock
lret
jmp
xchg
add
fbld
fisttpll
subl
pop
cmpsl
loop
ds
cmc
cltd
cltd
push
daa
out
mov
dec
test
enter
gs
xor
aam
push
pop
xchg
adc
sarb
mov
hlt
inc
push
xchg
out
sbb
out
xor
cld
adc
shlb
sahf
outsb
jecxz
shlb
mov
lods
pop
xor
or
fists
mov
stc
es
mov
and
inc
pop
fwait
or
fcmove
sbb
imul
inc
pop
or
test
inc
add
adc
mov
mov
fdivl
jmp
jb
pusha
imul
lea
mov
sti
dec
and
fcoml
in
ss
ret
jmp
xor
add
mov
sbb
mov
out
rclb
xchg
mov
xchg
js
and
rcll
sub
push
add
cld
mov
jo
jne
aam
incb
cmpsl
movsl
sbb
aad
lds
fnop
bound
or
loop
jle
stc
fdivs
inc
jno
and
inc
lcall
pop
rolb
out
repnz
add
in
int3
call
addr16
jmp
mov
mov
jg
jle
sbb
in
idiv
andb
lock
inc
xchg
sbb
cmp
mov
shlb
cmp
mov
lret
mov
xor
jne
repnz
cld
jno
xchg
mov
dec
xchg
daa
test
outsb
cmp
jb
shlb
lret
xchg
pop
push
add
pop
push
mov
out
xorl
fadd
push
gs
test
inc
subl
mov
pop
jmp
stos
sbb
cmp
popf
fmull
mov
pop
jae
mov
xchg
fwait
mov
or
xor
xor
add
jge
loopne
fidivs
js
out
aas
adcb
mov
lgs
bound
dec
mov
inc
popf
fildll
scas
jmp
sarl
out
sub
and
je
mov
or
mov
mov
int3
bound
imull
xlat
fucomp
dec
leave
mov
insb
pop
xchg
ret
xchg
dec
mov
mov
add
xchg
into
insb
into
dec
mov
xchg
std
out
sub
or
insb
sbb
fwait
pop
andb
js
lcall
cmp
xor
mov
mov
loopne
arpl
shlb
inc
mov
push
or
ficoml
sub
mov
push
iret
je
and
jbe
ret
andl
mov
lds
gs
pop
aam
pushf
ja
inc
les
outsl
jbe
dec
pop
mov
bound
lods
enter
pop
add
pusha
in
or
pop
jae
fisubrl
call
imul
xchg
push
push
mov
lret
xchg
mov
lret
in
mov
es
mov
in
int3
mov
nop
push
mov
add
fldenv
das
aaa
lcall
sarl
ficoml
adc
cltd
inc
loop
inc
pop
mov
outsl
or
jns
mov
loope
cmpl
test
xor
bound
aad
jp
push
lret
mov
ret
out
jmp
shr
mov
inc
mov
and
cmpsb
outsl
fcomip
pop
and
mov
add
sub
shrl
dec
pop
xor
cmp
jp
aaa
xchg
or
push
stc
icebp
cmpl
cmp
sub
push
das
mov
sbb
jae
nop
mov
xchg
mov
fidivrl
push
lcall
shrb
lods
jne
xor
outsl
test
sub
outsb
stc
inc
xchg
cmp
dec
stc
mov
out
in
mov
inc
mov
jbe
fwait
sahf
sub
mov
ficompl
test
in
lock
outsb
ss
cmpsl
dec
or
mov
int
sti
decl
mov
mov
fisttpll
add
movsl
shll
je
and
dec
rcll
insl
jge
pop
jae
stos
lea
mov
jmp
daa
sub
fiadds
test
push
xchg
test
cwtl
adc
cs
push
adc
push
push
dec
dec
cltd
lods
or
int3
testb
push
ret
jle
xor
adc
out
cltd
cmp
imull
insl
sbb
mov
lret
jo
adc
popa
mov
std
mov
in
fwait
jne
push
aam
push
and
pusha
fsin
fidivs
pusha
scas
fcmovb
lea
gs
in
pop
mov
xchg
jg
add
arpl
cli
push
popaw
inc
mov
xlat
daa
leave
outsb
mov
pop
cmp
pop
imul
cmp
ret
lds
mov
add
mov
xor
movsl
test
cmp
mov
dec
fucomip
repz
dec
rolb
lock
imul
push
cli
test
movsb
dec
fldt
rol
xchg
fists
rclb
lods
sub
lea
pop
mov
jecxz
loop
test
or
and
mov
and
mov
xchg
testb
sbb
mov
xor
arpl
mov
imul
scas
jno
mov
jecxz
mov
jl
mov
adc
pop
lock
xor
repnz
jne
push
pop
adc
outsl
mov
add
xor
pop
call
jbe
jns
dec
cmpsb
xchg
scas
das
dec
pusha
xchg
push
cld
int
aam
and
jno
stos
rol
pop
push
dec
lds
pop
rcrl
repz
in
jne
mov
ja
outsl
aad
push
push
or
les
and
cmc
frstors
sub
jns
adc
push
add
xchg
or
sbb
inc
insb
jg
xor
add
mov
push
mov
int
mov
lods
call
mov
sub
add
xchg
jp
dec
adc
sub
pop
sti
sbb
inc
xor
adc
sub
rolb
popl
cmp
or
jnp
call
clc
push
push
enter
je
cmp
scas
movsb
push
jp
insb
popf
lret
xor
dec
dec
xchg
pop
lea
lret
or
out
mov
pop
js
bound
cmp
sti
outsl
xor
cmp
xor
cwtl
push
dec
pop
aaa
or
fcmovnu
outsb
lcall
imul
sbb
mov
add
mov
pop
xchg
sub
sarl
outsb
in
in
loop
mov
xchg
jne
add
mov
mov
push
hlt
gs
rorb
clc
pop
or
mov
jecxz
jbe
out
repnz
push
push
or
inc
js
pop
fistps
aas
xlat
inc
mov
or
cld
dec
pop
mov
test
inc
fdivr
pop
adc
iret
cmp
add
sub
adc
addr16
stos
xchg
pop
dec
mov
or
fmuls
inc
les
pop
pop
cmp
sbb
jb
lods
arpl
out
fsincos
fnstcw
test
sbb
inc
loopne
fs
sub
lahf
mov
je
pop
xchg
xor
popa
dec
jno
out
adc
xor
fbld
enter
shll
iret
xor
xor
jbe
ljmp
xchg
push
jne
jno
or
pop
and
ds
ja
jg
jl
mov
or
cmp
pop
jecxz
add
xchg
int
pop
es
cmp
dec
sub
cld
lock
fiadds
fstl
xor
adc
pushf
lret
fwait
in
inc
push
lea
jno
push
lock
loop
mov
cmp
rclb
mov
mov
pop
push
mov
or
popa
cvtdq2ps
in
mov
xchg
xchg
push
scas
movsl
mov
push
sbb
shll
mov
xor
sbb
mov
mov
jg
shlb
mov
fisubl
insl
mov
add
jo
hlt
shlb
shlb
cmp
inc
ljmp
push
jp
mov
lahf
or
push
ljmp
arpl
test
mov
cmp
das
fbstp
mov
lcall
mov
inc
mov
dec
out
push
pop
xor
shr
movsb
mov
jl
mov
sub
outsl
enter
insb
out
and
shlb
int3
mov
scas
mov
loopne
xchg
int
inc
or
jns
stos
int3
mov
adc
je
jg
mov
jecxz
test
xchg
out
cmp
sbb
jg
xchg
adc
fildll
jb
xor
and
testb
sub
insb
dec
pusha
test
inc
xchg
rep
mov
test
cmp
mov
adc
sti
test
add
pop
inc
inc
addr16
push
addr16
inc
fiaddl
jecxz
insl
insb
mov
outsb
mov
sbb
xchg
ss
repz
jg
stc
rolb
pop
stos
sub
sti
and
imul
js
arpl
lods
push
shlb
mov
and
pop
pop
subl
mov
dec
lret
test
cmp
push
jl
sub
sub
scas
push
add
pop
pushl
mov
icebp
mov
lds
xor
ds
adc
lret
test
xor
leave
test
in
mov
std
xchg
fcmove
inc
test
lds
sbb
mov
jp
mov
insb
cli
sub
sbb
inc
mov
xchg
sarb
push
push
rcrw
in
xlat
fistpll
repz
jno
iret
cwtl
cmp
jl
subb
or
insl
push
mov
gs
test
in
ret
insl
movb
sbb
into
and
mov
repz
sar
mov
test
and
xor
push
int
pusha
add
add
popf
pop
jecxz
sub
in
add
cld
movsl
fldcw
cmpsb
cli
pop
cmpl
adc
les
jle
push
ret
xor
popl
dec
aam
mov
nop
iret
dec
gs
xorb
das
js
pop
ss
movsb
sbb
imul
stos
faddl
mov
cmp
test
pop
sub
mov
dec
nop
adc
jbe
adc
pop
mul
mov
jg
mov
xchg
not
jg
iret
mov
or
arpl
int3
pop
leave
rclb
xor
xchg
mov
or
xor
sub
out
nop
and
jb
cmp
les
xchg
dec
push
pop
rclb
and
fyl2xp1
xchg
jl
jp
cmp
adc
fmuls
sub
jge
sbb
das
popl
stos
test
cs
xor
sti
cwtl
repnz
push
xorb
insb
sub
insl
pop
fdivrl
subb
mov
inc
mov
or
mov
push
in
fidivrl
dec
cltd
je
mov
fstl
leave
stos
and
faddl
push
adc
push
mov
aam
std
and
jno
das
or
shl
inc
adc
fcomi
lods
cmpsl
je
mov
pushf
jmp
sbb
notb
fdivs
mov
jge
out
pushf
ljmp
xor
mov
add
inc
gs
test
cmpsl
mov
jp
xor
or
mov
and
add
pop
loop
jne
or
loope
push
xor
arpl
cld
stos
xchg
clc
dec
scas
out
cmp
sub
dec
mov
ja
out
cmp
jb
aam
cld
imul
scas
inc
sub
mov
loope
push
dec
cli
sub
add
xor
enter
test
ret
inc
xchg
mov
movsl
test
jg
xlat
addr16
loop
aad
pop
cmp
js
notl
xchg
adc
stos
pop
sbb
out
jnp
je
mov
jno
sbb
loop
inc
fists
or
lods
jge
or
es
sub
push
lret
dec
xor
push
sub
and
pop
jecxz
or
stos
enter
xlat
js
and
out
repnz
jae
xor
adc
xchg
sbb
push
pop
fdivrl
mov
xchg
adc
fldcw
push
stc
ret
push
stc
int3
sti
fidivrs
inc
push
mov
adc
stos
stc
leave
aam
mov
aam
push
enter
dec
dec
jmp
xchg
mov
push
loop
jmp
xorb
mov
mov
sub
cwtl
add
stos
sub
or
mov
and
loopne
mov
inc
jb
loopne,pt
and
xor
xchg
test
call
inc
gs
xor
fcompl
sahf
cmp
sti
cli
and
inc
xor
push
js
into
shr
pusha
mov
xchg
lcall
outsl
jge
fs
xchg
mov
mov
mov
dec
mov
shlb
js
jg
icebp
les
imul
in
aad
fsubrl
out
mov
fisttpl
popl
shll
cmp
sti
adc
cld
mov
cmp
je
repnz
mov
shll
jne
or
nop
xor
or
fs
shrl
mov
add
mov
insb
xor
or
add
pop
mov
mov
aas
push
insb
push
enter
xchg
and
push
push
xchg
jnp
xchg
mov
out
dec
shll
popa
ret
dec
sbb
jecxz
push
jecxz
mov
push
cmp
cltd
int3
ljmp
pop
mov
nop
or
inc
push
cmpsl
xlat
or
sbb
add
adc
imul
lcall
mov
nop
test
dec
fnstcw
mov
sub
xchg
mov
jno
gs
push
jns
fdivr
bound
test
sub
mov
addl
fldl
jl
adc
push
xor
push
enter
pop
icebp
pop
mov
mov
sbb
fcomi
xor
jecxz
mov
faddp
daa
adc
cmc
and
fidivrl
push
fistl
out
dec
push
aas
xchg
sbb
addr16
or
pop
mov
xchg
out
aad
loopne
mov
push
sarb
and
pop
push
movsb
ffree
mov
mov
cld
xor
lcall
cmp
xor
dec
adc
or
mov
jmp
stc
pop
dec
xchg
lret
push
into
push
mov
cs
sbb
push
aas
xchg
push
rorl
scas
inc
jns
push
jge
out
subb
in
imul
hlt
push
outsl
xchg
jne
mov
fwait
lea
mov
dec
mov
aam
dec
pop
in
sbb
jb
dec
add
in
adc
and
mov
out
jne
mov
and
jns
pusha
add
sub
dec
or
inc
push
pushf
sar
dec
xchg
pusha
js
movsb
adc
sub
sbb
iret
pop
push
int3
outsl
or
dec
mov
mov
repz
cmp
sub
ret
dec
xchg
ss
imul
pop
or
pop
cmpsb
fistl
call
cmp
mov
sub
negb
cmc
daa
dec
xorb
cld
inc
or
stc
mov
lods
repnz
mov
mov
test
xchg
xchg
in
notl
pushf
stc
test
aad
scas
push
rol
sub
adc
mov
imul
out
ret
out
xor
inc
inc
mov
cmp
stos
cmp
push
outsb
jmp
mov
xor
in
add
jp
cld
pop
lock
inc
adc
inc
iret
mov
xor
xchg
scas
xor
mov
das
decb
cwtl
ljmp
jae
add
jg
icebp
sbb
enter
sbb
fnstcw
pop
lahf
push
dec
mov
ret
lret
repz
leave
pop
sbb
cmp
mov
psubusb
cltd
jbe
sub
test
dec
test
mov
lret
sti
in
jmp
push
cli
pop
cmp
inc
sti
repnz
push
inc
test
mov
inc
sbb
call
shrl
imul
add
arpl
insl
cmp
xor
mov
or
in
pusha
xor
imul
faddl
xor
fwait
add
sbb
pop
in
pop
inc
xor
out
out
adc
movsl
push
loopne
push
jle
les
sub
xchg
push
mov
ja
jno
stc
xchg
xor
push
iret
int
and
mov
cmp
ss
cmp
sub
mov
cli
mov
jne
sti
jb
push
es
sub
push
fstl
sub
in
ds
xchg
out
stc
mov
xchg
jg
and
daa
dec
xchg
clc
les
pop
xor
rcll
fcomp
jo
fisubs
jle
in
xchg
xchg
pop
mov
fcomi
mov
sub
push
and
mov
imulb
loope
jb
adc
pop
idivb
clc
call
push
pop
fsubrs
mov
or
fistps
stos
subb
outsl
sub
pop
stos
dec
bound
movsl
push
int
insl
mov
lahf
and
mov
pushf
jo
lods
push
push
inc
adc
push
sar
cmp
jl
into
adc
scas
sub
xchg
lock
loop
mov
push
mov
mov
ds
in
repz
std
lea
dec
insb
popa
stc
cmp
pop
rcll
jno
scas
mov
and
movsl
sbbb
jg
xor
inc
ds
call
es
shll
and
insl
out
jns
mov
std
fcomp
xchg
decl
pop
scas
mov
fisubrl
mov
into
negl
push
mov
dec
cmc
sub
rclb
pop
xchg
adc
and
and
jl
jge
shlb
mov
pusha
jno
push
mov
rcl
mov
outsl
xor
lret
gs
pop
pop
dec
int3
mov
mov
push
add
xchg
or
sub
mov
stos
out
test
ss
rol
popf
mov
pop
push
cwtl
testl
mov
sbb
jecxz
mull
outsl
fbstp
les
shrl
test
and
and
dec
dec
icebp
loop
jb
jb
push
xor
in
pushf
popf
push
sahf
and
and
cmpsl
fsubrs
sub
ds
jns
xlat
jb
inc
pushf
sub
mov
aam
mov
and
adcl
daa
pop
aaa
rcr
xor
sub
int3
sub
aaa
gs
adc
xchg
pop
mov
push
jns
lods
jno
icebp
xchg
cmc
pusha
mov
ds
xlat
fistl
test
bound
inc
mov
cwtl
aaa
push
pextrw
xor
sbb
cmp
int3
rcrl
sbb
stc
sbb
adc
mull
sbb
mov
xchg
mov
cs
les
push
mov
lcall
push
cli
cmp
mov
dec
in
sti
cmp
xchg
outsb
and
imul
cmp
rolb
mov
test
add
fs
icebp
pop
lcall
insb
mov
cmp
in
imul
xor
outsl
inc
rorb
mov
or
lret
pop
fcomp
flds
push
mov
mov
iret
or
cld
in
addl
int
push
nop
aam
dec
in
imul
and
inc
mov
mov
dec
cmp
mov
pop
vmulsd
out
pop
idivl
mov
push
idiv
data16
pushf
jb
aad
fwait
mov
inc
dec
sbb
jl
iret
das
pop
or
lock
enter
cs
jle
mov
cmc
pop
ret
xor
mov
pop
mov
pop
adc
faddl
sbb
movsl
add
test
arpl
je
sub
stos
je
xchg
xor
adc
add
loope
cmp
dec
mov
or
loopne
js
mov
dec
add
jno
cmp
and
xchg
jb
push
sub
jbe
cmpsb
int3
push
dec
cltd
sub
lods
jecxz
fdivs
sti
pop
stos
pop
in
rcl
xchg
jmp
movsb
cmp
sbb
xchg
ss
xchg
add
fisubrl
inc
and
dec
jb
movsl
aam
ret
loope
cltd
fsubrl
add
and
frstor
lea
mov
loop
cld
das
xchg
xor
jns
xor
or
or
adc
pop
call
popa
xor
rcrb
fsubrs
in
jmp
jmp
and
inc
xor
add
js
mov
movb
insl
sahf
fistpll
xor
aam
lea
in
mov
jno
jns
mul
push
mov
xor
js
mov
decb
in
popf
ja
nop
loop
cmp
iret
sbb
test
je
xchg
add
imul
pop
pop
pushf
or
pop
mov
xchg
stos
cmpsb
pusha
out
xchg
mov
cmp
scas
mov
scas
jp
dec
inc
push
cwtl
int
push
in
fstp
pop
mov
push
scas
in
or
int3
dec
lea
xchg
sub
xchg
adc
mov
ja
fisubs
dec
inc
test
and
dec
sub
movsl
fs
xor
aaa
and
add
pop
ds
push
imul
hlt
mov
ret
push
inc
jmp
jae
adc
or
jnp
movsb
mov
xchg
and
neg
cmpsb
jnp
push
cmpsl
mov
jnp
pop
mov
and
ret
aaa
out
push
add
push
cmc
call
fdivrl
in
outsb
and
push
aam
cmp
mov
mov
xchg
lea
jb
mov
aas
movb
shll
mov
xchg
les
test
fldcw
xchg
cmpsb
mov
sbb
xor
mov
adc
leave
mov
das
or
clc
xchg
pop
pop
xchg
mov
xchg
and
mov
dec
test
in
push
jg
sbb
mov
icebp
or
sbb
inc
jl
cmc
sub
cmpsl
call
inc
xor
dec
sbb
sti
and
cwtl
rclb
icebp
imul
jp
arpl
adc
test
loope
lods
sbb
movq
jnp
inc
fnstsw
add
lock
sti
test
mov
dec
ss
fwait
cmp
and
dec
aaa
jno
jmp
stos
add
loopne
dec
sbb
jno
pop
and
scas
adc
leave
ds
pop
mov
int3
sahf
sbb
ret
mov
xor
mov
pop
jae
sub
sahf
js
add
mov
mov
cmc
in
out
loope
jmp
push
imul
scas
test
into
aaa
jmp
cli
mov
rorb
jle
test
xchg
cmp
gs
sub
xchg
inc
mov
fwait
cmpsb
sub
bound
push
loop
xchg
repnz
fsts
ds
jl
cmp
adc
add
jns
push
dec
cmp
notl
loop
xchg
sbbl
and
jge
pusha
addr16
adc
clc
outsb
dec
pavgb
jg
jg
jae
in
clc
sub
int3
in
mov
jbe
icebp
imul
sub
scas
inc
dec
xchg
repz
pop
add
in
sub
int3
sub
adcb
mov
int3
popa
inc
dec
jmp
faddl
mov
mov
fbld
push
inc
clc
sbb
and
imul
push
movsl
out
gs
enter
pop
and
fcomps
js
cmp
movsb
xor
mov
jnp
fwait
or
or
pop
sahf
xor
shrb
push
or
pop
cmp
jae
sub
loop
mov
mov
push
inc
scas
xor
outsl
pop
or
outsb
notb
ret
loop
jge
xor
or
inc
dec
jns
lock
int3
cltd
fdivs
push
or
das
sbb
xor
lods
in
sbb
cmp
sarb
aad
fimuls
and
pop
popa
cld
mov
xor
lds
push
in
scas
cli
rolb
jle
push
sahf
mov
sarb
aam
std
inc
hlt
inc
pop
out
jno
fs
sub
ss
adc
in
mov
xchg
mov
daa
adc
daa
sub
xchg
sub
pop
insb
leave
mov
test
xchg
mov
cmpb
pop
adc
in
inc
enter
lods
aaa
mov
clc
xchg
jp
daa
or
aam
xchg
outsl
leave
sbb
and
ret
sub
imul
or
push
sti
jne
mov
inc
cltd
mov
or
xchg
xchg
filds
dec
adc
add
stos
in
mov
icebp
mov
stc
and
and
xchg
jo
push
fnstsw
fiadds
push
push
sub
js
sbbb
cmp
mov
mov
push
fnstenv
xchg
int
iret
xlat
and
xchg
push
rorb
cltd
sbb
jp
sarb
mov
xor
jg
loope
adc
push
int3
out
ds
xor
lods
cmpsb
imul
mov
adc
mov
mov
and
adc
popf
xchg
push
jge
data16
shl
lds
pop
and
xor
loopne
lea
and
xlat
jns
push
insl
push
dec
xor
call
mov
mov
push
pop
mov
out
pop
test
ja
push
push
adcb
aad
push
fstp
mov
das
aam
mov
repz
insb
jle
adc
jnp
sbb
insb
jg
lret
sbb
add
imul
repnz
gs
out
sbb
mov
ds
cmp
call
xchg
test
xchg
pop
nop
shll
and
cli
lahf
popa
cmp
icebp
pop
jbe
cwtl
ljmp
andl
cmpsb
inc
mov
pmaxsw
jno
lret
push
and
mov
and
into
or
pop
jns
mov
jno
cmpsl
dec
mov
mov
lds
jb
lret
repnz
ljmp
or
repz
cmp
fldcw
adc
hlt
pop
hlt
mov
push
test
jl
or
leave
aad
repz
imulb
seto
cmc
stc
call
stc
adc
lock
mov
push
dec
xor
arpl
das
cmp
push
mov
mov
inc
mov
cmp
lods
aas
ss
stos
lcall
leave
rol
stos
in
mov
das
lahf
repnz
notb
adc
pop
push
and
mov
cmpsb
mov
stos
or
mov
pop
inc
daa
int3
int3
mov
push
cmp
add
and
mov
loope
sbb
ret
add
xchg
add
ret
or
jne
pop
out
xchg
add
add
or
cld
call
fisttpll
or
xchg
fiaddl
out
arpl
icebp
mov
mov
out
rclb
pop
in
adc
and
jne
jmp
in
fcmovnu
pop
pushf
pop
dec
repnz
mov
jl
test
cmpb
movsl
addb
mov
subb
inc
push
insb
mov
in
outsb
mov
addr16
in
stos
lds
sub
adc
xchg
jmp
jbe
popa
andb
aam
sbb
lahf
std
aam
jno
mov
xor
add
mov
adc
xchg
les
cmpsl
aas
in
sub
out
cltd
jecxz
dec
lods
add
js
scas
nop
sbb
ret
and
sub
mov
shlb
mov
ja
aam
stc
push
loop
out
aam
jmp
push
je
dec
sahf
inc
pop
lods
loope
cld
bound
or
ret
sahf
pop
sub
cwtl
mov
cmpsb
push
loop
and
cmp
pop
mov
mov
mov
cmp
jle
rcll
bound
jp
push
fwait
add
push
test
test
push
and
mov
pop
xor
pop
fcomip
xor
mov
or
xor
and
lock
fistpll
xor
adc
lcall
dec
sbb
ret
jbe
pop
and
pop
mov
js
lret
push
xchg
dec
inc
adc
lods
inc
das
daa
adcl
adc
pop
pop
or
lret
xchg
clc
mov
hlt
jmp
scas
out
and
pinsrw
mov
xor
and
fsubs
stos
test
ja
repnz
sub
dec
jno
pop
sbb
cmp
xor
cmp
and
xlat
mov
jmp
fadds
ja
mul
mov
iret
cmpb
cmpsb
jmp
pop
push
sub
jmp
repz
jne
sub
mov
mov
jns
cmp
mov
rcrl
popa
pop
and
mov
pop
psubb
rolb
fcoml
pop
lods
push
xor
xchg
repz
ss
inc
push
lahf
mov
repnz
mov
cmc
pop
inc
mov
sub
jge
ds
in
and
jae
xor
mov
push
cwtl
leave
aaa
push
jbe
mov
inc
or
mov
es
pushl
mov
adc
fdivrp
dec
jb
movsb
sub
stc
xlat
xor
stos
push
mov
mov
xchg
cmp
add
shll
test
sbb
mov
int
dec
fdivl
ss
enter
push
sbb
sbb
fsubrl
cltd
inc
insl
mov
test
pop
dec
mov
fs
out
or
clc
cli
in
mov
pusha
or
fidivrs
or
leave
cmp
jg
adc
rcll
bound
and
or
and
dec
mov
lea
xor
or
stc
fnstsw
jbe
neg
xor
mov
in
mov
scas
mov
cs
mov
fstpt
popa
inc
inc
not
mov
inc
pop
iret
pop
dec
mov
sti
xor
orl
jp
mov
adc
gs
sbb
iret
add
push
or
loop
pop
and
in
popa
and
repz
sbb
cmp
into
jmp
rcll
ljmp
fs
sbb
aad
fidivl
aas
dec
out
push
adcb
stc
inc
push
mov
repz
out
sub
pop
nop
dec
jno
aas
adc
outsb
leave
fs
jmp
and
sbb
add
int
mov
add
xchg
pop
in
insb
sbb
testl
test
push
xor
call
add
and
jecxz
xlat
xor
adc
or
ret
lahf
pop
hlt
jae
or
mov
mov
and
or
push
and
orl
into
cwtl
push
mov
js
sbb
push
fistl
fwait
push
push
push
xchg
push
es
mov
adc
outsb
lock
xlat
decl
adc
jne
daa
test
pop
inc
pop
jmp
push
push
add
sbb
xchg
or
mov
movb
xchg
sub
sahf
insb
int
or
xor
insl
pop
bound
stos
scas
add
gs
js
ds
shl
sub
jae
rolb
sub
out
pop
pop
push
cmp
bound
ror
mov
lock
push
jmp
stos
aad
dec
js
loopne
xchg
sbb
lds
mov
push
mov
adc
test
daa
arpl
jecxz
addr16
add
loopne
fnstenv
movsl
pushf
jo
cmp
and
mov
jo
cmp
and
imul
or
aaa
ja
pop
or
adc
cmp
add
ljmp
or
jno
hlt
jns
les
pop
xlat
mov
dec
mov
insl
sub
cmp
into
sub
sub
fsub
arpl
jecxz
inc
nop
jmp
pusha
mov
xor
push
jno
movsl
add
or
int3
inc
ljmp
cmp
xor
mov
jp
leave
lret
mov
sbb
ret
int3
jb,pt
xchg
dec
aad
mov
sbb
jle
clc
repz
and
imul
pop
out
test
clc
adc
ficoml
mov
call
sub
loope
insl
adc
shll
ret
ss
or
cmp
lret
sub
and
add
hlt
adc
mov
test
fildl
cmp
push
jl
sahf
fs
push
movsb
fs
in
lret
xchg
mov
cmp
pop
imul
pop
mov
iret
ds
lods
xchg
jae
or
pop
pop
xchg
mov
divb
pusha
je
add
mov
mov
dec
jb
sub
jg
imulb
or
adc
setae
mov
sahf
enter
fidivrl
add
pop
pushw
stc
sahf
cmp
les
clc
adcb
mov
ss
xor
inc
nop
xchg
sub
jecxz
shll
and
sbb
fs
mov
sbb
mov
xchg
push
lea
cmpsl
inc
jae
in
or
add
sarl
mov
and
cmc
leave
icebp
pop
ror
inc
push
bound
call
or
add
or
mov
pop
pop
pop
filds
add
lahf
pop
orl
bound
out
xor
add
test
dec
jge
mov
pusha
divb
pop
mov
daa
dec
pop
xchg
adc
lds
shll
inc
push
push
out
push
jo
insl
jle
pushf
out
out
idivl
lcall
cmp
dec
and
and
call
rolb
cs
popf
aam
into
mov
fistpl
and
fistps
jno
cmpsl
push
cltd
sub
sbb
and
arpl
xchg
std
leave
mov
ret
jmp
gs
push
pop
pop
sbb
loopne
xchg
jne
xchg
jp
jbe
fstps
shlb
or
sub
sub
into
pop
lods
jmp
std
movsb
push
iret
mov
cmp
mov
clc
xchg
loop
sbb
imul
xchg
aam
aas
sbb
push
push
fimull
ds
inc
loop
inc
test
jo
sahf
cmp
and
lret
inc
push
pushf
xor
mov
enter
out
mov
aad
mov
xchg
mov
bound
popa
cmp
stos
inc
push
hlt
lods
sub
add
or
mov
ja
popf
out
xor
setns
fstl
enter
fildl
fildll
and
fbld
mov
and
sbb
sarb
ret
xor
xor
add
pop
aam
nop
cmp
sbb
scas
push
lcall
into
ret
mov
invd
shll
cmc
push
push
std
mov
arpl
call
aad
sub
and
ret
dec
cmp
pop
mov
or
xchg
mov
repz
cmp
rcr
ljmp
out
pop
push
pop
or
mov
cmp
test
jbe
fbld
fs
sub
or
or
mov
sub
scas
sbb
jnp
mov
outsl
jmp
cmp
adc
mov
dec
fld
xor
sub
mov
lahf
sti
xor
stos
mov
adc
mov
dec
cld
ret
or
dec
jnp
scas
fistl
push
in
arpl
mov
jle
pusha
mov
cli
jg
fcmovne
push
cmp
rcll
jo
loopne
lret
ficomps
jmp
shrl
add
push
outsl
aam
cli
sbb
sbb
nop
jle
popa
push
jae
out
js
pop
or
mov
pop
mov
repz
sub
jb
lock
and
jg
jge
in
icebp
or
mov
nop
push
dec
jo
add
andl
push
cmp
xor
and
in
cmp
fwait
outsb
js
ljmp
cs
fnsave
jb
rcll
push
mov
sub
fimuls
iret
xchg
sbbb
frstor
in
out
pusha
inc
mov
fwait
adc
push
and
hlt
mov
pop
repz
test
test
bound
out
or
and
jge
cmp
sub
sbb
pop
fisubl
pop
cmp
pop
inc
int
mov
or
das
adc
push
test
push
xchg
jecxz
in
or
lock
test
sahf
test
out
nop
cmp
stos
int
nop
std
fcmovbe
imul
adc
data16
rcr
mov
jecxz
sbb
pop
aas
out
inc
push
insb
jge
cmc
outsb
clc
inc
mov
pop
pop
fmull
fistpl
ljmp
xchg
adc
pop
push
add
cwtl
inc
dec
cmc
inc
insb
loop
xor
sbb
sub
loopne
mov
cld
jl
xlat
jns
das
adc
mov
loop
push
das
test
xlat
push
mov
addr16
jns
mov
sub
lret
xchg
arpl
ficomps
lock
xor
mov
lea
push
mov
push
pop
cs
scas
adc
ret
xor
out
lods
test
push
in
sub
mov
xchg
xchg
xchg
cld
cwtl
mov
inc
fsubl
mov
das
sbb
nop
cmpsb
fstl
cmpsb
mov
scas
popf
dec
arpl
cmpsl
aaa
or
imul
test
or
add
xchg
imul
pop
imul
loope
je
pop
pop
add
popfw
mov
xchg
mov
out
in
gs
sbb
adcl
les
pop
add
into
mov
mov
out
out
cmp
fnstenv
mov
mov
getsec
add
stos
sub
repnz
and
xor
mov
inc
sahf
mov
cs
or
lahf
pop
xor
xor
mov
dec
push
leave
andl
aam
push
cmpsb
dec
dec
ret
sbb
stos
or
sbb
add
dec
fistps
fnstcw
xor
mov
arpl
loop
fisubrl
fadds
call
fistps
and
decl
out
pop
mov
lret
mov
das
push
jmp
sbb
mov
xchg
test
sub
sub
lock
outsb
xor
outsb
cmp
push
ss
idivb
lea
nop
push
and
jg
inc
rorl
addr16
cmp
sbbb
dec
adc
insb
mov
sbb
pop
mov
mov
pop
les
test
imul
sbbl
js
hlt
sahf
aaa
cmpsb
sbb
mov
mov
jecxz
pop
repz
mov
xchg
insl
jb
dec
mov
ljmp
bound
mov
jl
pop
jecxz
loope
lock
imul
jg
jno
cmp
cs
aad
or
test
test
popf
xchg
pop
xorl
pop
imul
and
push
fisttps
sub
ljmp
mov
imul
add
adc
sbb
adcb
push
iret
mov
cld
fdivs
adc
push
inc
dec
adc
dec
ljmp
mov
fldl
xchg
jle
sti
and
test
fmull
pop
mov
fwait
addr16
push
xchg
ss
mov
and
jmp
pop
jno
sub
push
stos
mov
cmpsb
xchg
pop
mov
movsl
jnp
arpl
cmpsb
jnp
arpl
pop
push
and
lock
push
lock
cmp
stc
xchg
cs
adc
jp
sbb
adc
cmc
aaa
test
pop
movsl
jmp
mov
lret
jmp
fwait
sub
call
stos
repnz
mov
lret
mov
aad
pop
lret
sub
mov
lds
cmp
mov
ja
out
adc
add
mov
es
fldt
lods
mov
incb
call
fldenv
mov
jge
out
loope
in
lods
pop
pop
and
in
cmp
pop
xor
xchg
addr16
and
pop
adc
and
aaa
jae
out
fimull
out
add
mov
or
sub
mov
add
mov
xchg
fidivs
push
insl
push
lahf
leave
enter
mov
pop
sbb
lret
add
addl
pop
xchg
cmpsb
add
mov
leave
ss
call
push
bound
dec
dec
loope
fwait
js
lcall
sbb
pop
jnp
push
xor
lods
popf
fsubrl
cmp
ret
in
bound
mov
ffreep
xchg
mov
es
repnz
add
icebp
repz
sar
shrl
into
fdivl
add
rorb
lcall
jbe
ret
adc
scas
push
and
dec
jne
cmp
cmp
sbb
lahf
adc
pop
pop
sarb
push
scas
xchg
stos
push
mov
lds
pop
scas
cli
js
stos
xchg
mov
dec
mov
mov
sarl
scas
jp
xlat
xor
adc
lods
push
adcb
test
cld
mov
xor
push
inc
sub
fucom
fsubrs
xor
jbe
mov
mov
repz
pop
dec
cmp
jns
jmp
addr16
add
mov
or
lret
xor
and
outsb
jb
pop
sub
shrb
imul
mov
mov
mov
pop
daa
sbb
and
mov
lcall
mov
cmpsl
and
mov
std
in
gs
pop
lds
out
mov
mov
jns
incb
inc
jmp
dec
mov
test
mov
jo,pt
push
mov
daa
popf
dec
outsb
push
scas
dec
js
neg
mov
pop
xor
addb
lahf
pop
adc
mov
mov
xchg
sbb
cmpb
inc
sbbb
scas
leave
xchg
shlb
test
jge
sub
jnp
or
sti
dec
adc
adc
popa
jp
mov
pop
mov
lods
push
pop
jo
adc
je
mov
cld
iret
cmpsl
das
jle
push
jno
xchg
jle
mov
cmp
fsts
out
xor
cmpb
mov
push
int3
xor
dec
repz
out
lock
xchg
cmp
dec
sub
dec
test
inc
inc
stos
vunpcklpd
mov
mov
outsl
mov
cmc
dec
inc
cmpsb
dec
enter
push
inc
das
cwtl
xchg
dec
push
movsb
jl
in
testb
cltd
mov
ds
sbb
ja
mov
lea
stc
clc
jno
xchg
popf
mov
sbb
ds
ljmp
roll
inc
add
popf
cmp
or
cli
stos
xchg
mov
cmp
mov
xchg
jae
mov
add
rcll
and
in
and
movsl
pop
add
fdiv
lahf
adc
js
xchg
js
in
jl
filds
mov
cwtl
or
sti
add
popa
vminss
mov
in
pop
imul
into
xorl
repnz
les
jae
sub
xchg
cs
jnp
jbe
mov
pop
mov
fldenv
mov
movsl
mov
mov
test
imul
outsl
xchg
xchg
fistpl
loope
cltd
shrl
xchg
lahf
js
push
sar
dec
mov
fimuls
das
cmp
inc
shl
jb
add
pop
sub
pop
jno
xchg
or
add
adc
sti
and
cmp
and
inc
stos
cmc
inc
test
sub
outsl
xor
pop
inc
das
sarb
and
or
adc
mov
out
mov
into
xor
push
or
movsb
lcall
jmp
push
xorl
and
pop
ss
mov
xchg
adc
mov
imul
pop
les
shll
in
xchg
fists
cmpsl
mov
scas
imul
add
mov
insl
inc
dec
fisubl
or
pop
lahf
aam
pop
leave
clc
fildll
sub
xor
ret
dec
out
pop
push
scas
dec
sub
xor
cld
iret
add
lret
add
ljmp
mov
push
sbb
nop
test
mov
mov
movsb
pusha
in
mov
or
ret
dec
cli
or
ljmp
aad
icebp
pop
mov
pop
and
sub
mov
test
ljmp
nop
stc
push
std
fisubrl
stos
and
jge
jbe
fstp
ljmp
icebp
test
inc
xor
fs
mov
inc
nop
mov
test
push
sub
testb
mov
fsubl
cmp
sbb
mov
in
push
daa
jecxz
nop
in
xor
xchg
pop
pop
pop
stos
or
imul
and
mov
pushf
push
sahf
lock
push
inc
fistps
movsb
ret
lret
xchg
adc
insb
pushf
xchg
or
orl
mov
jae
jp
lea
sti
cmp
loope
sbb
adc
xor
scas
lds
into
sub
insb
test
push
shrb
pushf
negl
insl
fs
cmp
jl
jns
jnp
fucomip
mov
inc
cmp
sub
or
js
sti
cli
jb
lods
or
mov
out
jnp
jbe
movl
fdivrp
pop
iret
scas
add
push
shr
mov
popa
data16
sahf
mov
sbb
lret
pop
mov
scas
cmp
sub
sti
les
add
and
rcll
mov
mov
push
testl
xchg
fwait
enter
stc
movsl
aas
xor
test
ds
add
ja
pushf
xlat
daa
jnp
mov
insl
pop
pop
mulb
cmp
ret
sbb
mov
imul
stos
arpl
pop
int
fimuls
and
lea
sub
push
add
mov
xor
push
jp
loopne
or
mov
mov
push
add
icebp
mov
ljmp
std
js
negl
sahf
or
popf
cmp
push
jle
sbb
cld
imul
or
cmp
adc
pop
pop
lret
push
add
jns
ljmp
sbb
cld
fmull
test
ja
testl
dec
xor
shlb
sbbb
mov
paddq
sub
testl
push
loope
xor
call
mov
es
sbb
movsl
imul
push
xchg
mov
jne
jge
push
lods
sarb
fcomp
sub
sub
sti
test
idiv
add
sub
bound
sub
cmp
repnz
mov
dec
lods
lcall
outsl
lods
daa
mov
add
int
sahf
lret
pusha
hlt
insl
cmp
dec
outsb
stc
dec
aam
outsl
sbb
stos
in
sub
jne
arpl
push
fs
fs
cmpb
jmp
outsl
fnstsw
mov
shrl
ds
mov
or
cs
repnz
mov
imul
call
bound
mov
rorl
sub
cld
sub
add
aad
int
in
inc
dec
aas
mov
add
or
loopne
adc
aad
shll
jecxz
dec
mov
sbbb
in
test
sbb
lret
sbb
xchg
inc
mov
es
cld
mov
mov
mov
inc
mov
xorb
and
dec
shll
out
leave
loop
dec
mov
push
mov
rcl
cmp
enter
jle
fs
xchg
out
jp
std
xchg
add
mov
jg
stos
out
mov
sbb
jmp
andb
roll
dec
mov
cmp
jp
push
aam
pop
mov
test
inc
cmp
sbb
dec
stos
lds
inc
scas
inc
and
add
dec
push
lret
cmpsl
ja
and
push
xchg
lret
aad
inc
aaa
dec
dec
adc
frstor
fldt
add
mov
fldcw
stos
gs
mov
dec
mov
add
mov
lcall
cmp
into
fxch
enter
in
call
pop
in
pop
pushf
and
inc
cmc
mov
mov
or
sub
sbbl
add
push
not
sti
ljmp
sbb
repz
adc
std
add
mov
or
mov
sbb
mov
sbb
lds
pop
or
fstp
out
lds
mov
loopne
push
jb
hlt
stc
lret
nop
jmp
jnp
bound
data16
jmp
push
lods
push
and
jp
mov
movsl
sbbl
pop
out
push
xchg
negb
insl
nop
aam
jle
lcall
mov
enter
adc
aad
cld
leave
sarl
push
and
ljmp
leave
scas
subl
lret
push
subb
in
mov
push
mov
jge
jb
pushf
jbe
xor
arpl
or
jmp
nop
mov
xchg
ror
sbb
test
push
dec
pushw
jecxz
mov
lock
sarl
sbb
sahf
int3
push
sub
loop
cmpsb
addr16
popf
adc
sub
stos
roll
sub
lock
ss
pop
clc
repz
push
inc
fnsave
adc
cwtl
push
sbb
movsl
mov
cmpl
or
clc
pop
cmpsl
lods
jg
cmp
inc
mov
stos
adc
sub
hlt
sub
mov
or
into
jbe
cld
lods
int
testb
jns
xchg
mov
sub
pop
xor
fnstenv
hlt
out
cmp
ret
and
jecxz
loope
add
fildl
sbb
out
jb
fdivp
sub
popa
fidivrl
xor
xchg
push
das
xchg
lods
movsl
pop
movsb
shrl
sbb
dec
rcr
nop
add
inc
imul
dec
sbb
sbb
nop
lods
fists
mov
cmp
pushl
cmp
mov
imul
das
movsb
adc
or
inc
mov
popa
inc
and
outsl
cld
or
outsb
sbb
std
and
fisttps
adc
rolb
sub
and
xchg
adc
cmp
aas
rcrl
lea
jmp
sbb
scas
push
fistpll
adc
outsb
inc
push
test
cmp
outsl
ret
imul
pop
or
in
dec
in
inc
stc
fwait
movsl
rolb
jl
inc
xor
iret
lcall
movsb
aad
push
push
mov
xchg
sbb
xchg
xchg
add
dec
mov
lret
fbld
mov
sbb
mov
aad
addr16
outsb
cmc
push
sti
stos
adc
test
aas
cmc
jg
xor
mov
sbb
xor
dec
mov
mov
std
gs
sub
pop
les
popf
push
jge
out
pop
mov
es
push
out
bound
jb
aam
mov
aas
add
enter
pop
je
aaa
fs
push
inc
push
into
sarb
push
stos
bound
push
push
push
pop
and
lods
dec
mov
mov
adc
int3
loope
jg
and
push
cmc
pop
lds
fs
fildll
mov
pushf
arpl
outsl
addr16
aaa
jae
and
or
outsl
aaa
adc
fadd
cmc
shrb
fldenv
fsubrl
jb
je
enter
cmp
sti
pop
aad
pop
adc
sbb
mov
imul
jecxz
inc
push
fisttpl
mov
movsb
lods
ret
fs
repz
ljmp
jnp
pushf
push
or
pop
mov
xchg
shl
hlt
xor
cltd
xchg
jns
xchg
and
daa
add
dec
cmp
in
dec
rcr
add
outsl
xor
popf
cmp
inc
sbb
or
rcrw
sub
es
mov
stos
mov
lret
or
stc
movsl
lret
mov
into
jp
inc
xor
ds
or
divl
adc
xchg
scas
or
psrad
les
out
and
push
arpl
movsl
mov
mov
in
ljmp
or
cmpsl
stos
decl
cmp
mov
mov
sub
xor
inc
adc
inc
push
pop
outsb
aaa
enter
ss
sub
and
ret
mov
pop
lods
jo
out
les
movsl
cmp
pop
icebp
mov
or
aad
xor
scas
cld
mov
and
insb
lock
dec
mov
xchg
add
cmp
lret
adcl
xor
xchg
fldenv
aas
mov
inc
xchg
mov
rcll
push
xchg
adc
mov
fcmovnu
mov
sub
inc
pop
movsl
or
inc
pusha
push
sbb
loope
shlb
adcl
fsubs
jnp
cmpsb
jne
mov
cmp
mov
nop
cs
daa
icebp
sub
push
cmc
cmpsb
sahf
xor
movsb
jmp
add
sbb
hlt
xor
xchg
test
fisubl
shrb
push
or
das
scas
je
cmp
mov
ret
add
js
daa
fimuls
jns
nop
xorb
or
cmc
int
and
pop
jl
xchg
loope
mov
out
out
fdivp
xchg
dec
movsl
add
push
xchg
xchg
fdivl
imul
enter
loop
int3
lret
pop
mov
imul
pop
mov
ret
fsubrl
cmp
imul
and
mov
push
movsl
sbb
sbb
push
mov
jns
cltd
xor
aas
mov
mov
mov
out
fldcw
inc
sub
xchg
jo
sti
xor
pop
popf
or
daa
jl
popf
shll
cmp
scas
cmp
sbbb
pop
lcall
sub
pop
rcr
fcompl
movsb
adc
pushf
push
xchg
fnstenv
cld
xchg
push
fndisi(8087
inc
pop
add
mov
cmp
pop
sub
loop
mov
out
sub
lods
ljmp
pinsrw
cmp
and
add
aaa
or
pop
int
movsb
testb
jp
cmp
inc
cmp
adc
stos
sbb
xor
loop
fwait
mov
mov
ja
testl
dec
fstps
lds
adc
fimuls
xchg
lahf
xchg
imul
stc
pop
mov
and
add
adc
mov
pushf
push
xchg
in
test
aaa
addr16
sbb
push
mov
dec
jne
push
and
xchg
adc
push
call
sti
mov
jbe
dec
aas
cmp
lock
lahf
jmp
xchg
cmp
push
cmp
leave
popf
xchg
mov
mov
or
cwtl
out
test
roll
outsl
mov
xchg
mov
fcoms
test
fimuls
test
jb
ds
mov
jae
jp
ss
push
and
jmp
cmc
mov
xchg
push
daa
stos
das
pop
daa
cmp
fs
lock
popf
ds
dec
mov
call
pop
push
mov
jge
test
mov
xor
ss
push
fwait
ss
push
xor
and
dec
sub
xor
outsb
lcall
enter
ljmp
std
mov
xor
shr
push
jae
jo
ljmp
shrb
inc
adc
lods
sub
mov
jns
mov
out
cltd
jnp
mov
adc
dec
pop
or
add
inc
repz
out
in
test
mov
mov
fisubrl
lods
ljmp
mov
je
mov
das
and
jae
pop
repz
and
out
pop
xchg
add
push
adc
outsb
pop
sbb
loop
mov
ja
sub
and
ret
inc
push
outsb
mov
push
inc
inc
cmp
dec
jne
or
lret
pop
popa
cmpsb
sbb
aam
inc
je
xchg
and
shl
jmp
mov
push
jge
adc
dec
pop
and
xchg
jmp
inc
cmp
int3
and
and
sti
fildl
pop
iret
inc
jle
mov
mov
out
and
test
repz
int3
mov
lds
add
cmp
out
clc
lahf
and
adc
jbe
sbb
dec
jno
mov
xchg
call
movsl
inc
jmp
jne
xlat
cmpsb
mov
dec
leave
out
push
stos
mov
jge
fcomp
adc
add
jecxz
in
stc
xor
pop
push
push
cs
sub
sub
inc
cli
xlat
js
inc
mov
dec
cmc
inc
push
test
out
popf
push
and
into
mov
lods
adc
call
adc
pushf
adc
out
sub
dec
cmpsl
imul
add
push
ja
mov
lods
mov
cli
nop
loope
xchg
ss
mov
inc
out
in
sbb
pop
inc
fs
cmovnp
mov
mov
in
mov
mov
out
fstpl
dec
push
dec
cmp
mov
call
stos
outsb
lods
jl
cmp
sub
fisubs
jnp
xchg
call
mov
ret
xor
std
push
mov
cli
mov
fstps
lahf
lahf
sbb
cmp
mov
xor
and
dec
push
popf
mov
nop
lret
push
xchg
pop
cli
outsl
jb
dec
fwait
ret
cmpsb
add
jl
mov
mov
scas
jle
jmp
ss
nop
cmp
icebp
rorb
cltd
adc
jle
and
pop
insb
dec
pushf
ret
dec
imul
fistpl
lea
lds
es
js
inc
adc
pop
cli
fwait
adc
xchg
arpl
jo
shll
push
add
lret
mov
std
gs
adc
cmc
cmc
add
test
jb
outsl
lock
out
cmpsb
jmp
mov
gs
loopne
cmp
adc
in
rorl
mov
lcall
inc
push
imul
xor
out
pop
xchg
jbe
outsb
sub
addr16
aas
cltd
jnp
push
mov
xorl
sbb
xchg
xchg
test
popfw
inc
inc
fidivrl
lock
xor
test
pusha
push
or
pop
mov
push
movsb
pop
and
jnp
dec
rolb
mov
jge
fsts
push
orb
je
test
clc
push
cmc
mov
push
xchg
xor
push
mov
imul
subl
and
inc
fsubl
ret
lock
xchg
popa
jp
mov
rcrl
fidivl
idivb
aas
pop
fnstsw
xchg
adc
aaa
inc
in
lock
cmovle
mov
lret
ljmp
or
fcomps
dec
loop
push
and
in
addr16
imul
jnp
adc
push
and
lods
jg
dec
add
xor
outsl
repz
mov
jnp
repnz
pop
or
cld
stos
repz
shrb
and
cmp
fimull
addr16
es
dec
cmp
dec
or
repz
insb
stos
popf
sbb
fs
mov
loope
jle
mov
xchg
mov
inc
or
das
pop
fsubrl
ret
mov
orl
xor
inc
push
cs
repz
jle
fdivl
mov
in
jne
shrb
or
mov
mov
das
lods
mov
fcmovnb
xchg
xchg
push
lds
add
and
push
test
xchg
or
push
pop
lahf
dec
mov
inc
inc
inc
ret
or
or
and
xchg
push
loope
push
jge
icebp
xchg
in
inc
sbb
loope
test
xor
cmc
pusha
in
lock
sub
jbe
and
test
aas
dec
or
and
std
jmp
sub
les
mov
sub
test
mov
dec
sub
jmp
ror
scas
xchg
test
in
adcb
outsl
addr16
outsb
mov
test
cld
inc
inc
mov
in
fnop
movsl
mov
xchg
pop
jnp
mov
xor
push
jns
js
jns
push
stos
std
pop
sbb
sbb
cmp
adc
sbbl
movsl
pop
hlt
mov
pop
mov
lret
and
jg
or
lcall
lret
aas
inc
cs
imul
cmpsl
aaa
mov
push
ja
les
adc
inc
cmp
mov
popa
leave
scas
sub
adc
or
int
dec
es
sbb
mov
cmpsb
aam
adc
pop
ja
ds
pop
mov
or
xor
or
sub
xchg
test
les
inc
inc
add
sub
adc
es
pop
imul
xchg
fnstsw
jmp
sub
lahf
ret
inc
jle
fcoms
in
sti
push
lea
jns
sub
xchg
rcrb
mov
or
pushf
sub
lods
in
pop
je
movsl
repnz
mov
daa
xchg
rorl
cwtl
popa
scas
orb
jbe
int3
insb
lods
sub
inc
add
cmp
mov
xchg
arpl
popa
lea
jns
sub
mov
cmp
loopne
test
inc
cmc
or
dec
pop
dec
cmp
xlat
push
nop
jae
push
add
inc
fs
cld
pop
or
stc
inc
inc
das
jnp
imul
insb
cwtl
repnz
mov
xchg
xchg
dec
dec
mov
inc
ror
ja
sub
xor
int3
adc
push
imul
cld
pop
lret
aas
and
insb
rcrl
jmp
adc
sbb
jne
into
loop
sti
sbb
cmp
pop
xchg
pop
or
pop
icebp
es
cmc
jae
push
xchg
mov
sbb
popa
sbb
pop
and
xchg
and
iret
pop
bound
xchg
push
adc
lret
enter
push
scas
add
xor
sub
stos
sbb
sbb
mov
xor
das
scas
std
inc
pop
mov
mov
add
fdivrs
dec
stos
bound
jge
repnz
scas
push
into
pop
pushf
into
daa
inc
out
cmp
pop
xchg
mov
inc
pop
cmp
pop
cmc
xchg
mov
jecxz,pn
out
fnstcw
or
mov
outsl
insb
xchg
mov
scas
outsl
dec
ljmp
out
fbstp
and
push
mov
mov
scas
add
pop
pop
xlat
adc
mov
xor
aas
jp
and
mov
cwtl
adc
into
mov
dec
js
inc
imul
mov
pop
pop
mov
imul
movsl
mov
jbe
dec
lahf
in
pop
out
sub
mov
lock
xchg
leave
pop
addb
test
jno
xchg
sbb
popf
xchg
mov
cmp
push
testb
jecxz
sub
mov
and
adcb
fdivl
add
xor
aam
lahf
xor
shlb
or
cmpsb
mov
adc
push
cmpsb
mov
lods
enter
push
imul
loop
add
xchg
fisttps
pop
mov
xor
pop
xor
inc
inc
and
pop
jg
js
adc
loope
mov
dec
sbb
loope
mov
movsb
pop
imul
xor
subl
addr16
xor
out
int3
sbb
inc
mov
cmpsl
xchg
lahf
outsb
lea
pushf
jl
mov
imul
aas
jl
push
sbb
push
sub
js
cmp
pop
nop
add
orl
or
jecxz
xchg
ja
sahf
in
pop
sub
sub
shr
arpl
fmuls
subl
sarb
inc
push
jecxz
popf
fisttpll
and
adc
jb
loope
rcll
dec
mov
pushf
mov
sbb
sub
lods
dec
out
fwait
pop
push
aad
push
movsl
mov
push
dec
arpl
inc
call
xorb
iret
pushf
sbb
jg
cmp
mulb
mov
mov
stc
lods
jns
jne
test
mov
aam
out
scas
pop
pop
scas
jnp
cmp
stos
mov
mov
xchg
jp
stc
test
jb
aaa
cmp
lret
push
testb
mov
mov
sbb
test
sti
push
push
sti
lock
hlt
fisttpll
outsb
sbb
xchg
or
add
inc
stc
into
jmp
xchg
sub
ljmp
pop
mov
mov
fdivs
rcrl
jno
stc
xor
lods
cld
pop
pop
xor
shll
xchg
inc
xor
cmp
inc
sbb
cmp
push
negb
inc
dec
dec
inc
daa
int3
jbe
repz
cmp
xor
fldcw
shll
ljmp
mov
jecxz
inc
inc
mov
and
sbb
adc
adc
cmp
inc
inc
out
xchg
int
pop
or
lock
pop
sub
fld
dec
add
sbb
test
fists
jecxz
push
jnp
cli
jle
mov
int3
cmp
mov
adc
sub
sti
fnstsw
icebp
bound
jmp
es
dec
add
rcl
mov
std
ret
pushf
xchg
sbb
ljmp
je
out
fnstcw
sahf
xchg
loope
repnz
xchg
mov
inc
loopne
mov
and
jge
fwait
jbe
push
adc
and
cli
adc
cltd
cmpsl
sub
cmc
insb
scas
xor
ja
aaa
add
dec
inc
jmp
fdivr
jg
in
jecxz
rorl
arpl
or
std
jns
adc
insl
dec
lock
push
stc
enter
add
lahf
fcmovnb
mov
mov
daa
notb
push
inc
and
lods
std
popf
fcoms
insb
inc
fcmove
dec
jp
cltd
pop
arpl
mov
out
adc
call
jo
dec
out
iret
xchg
cmp
out
ret
sbb
xchg
and
inc
into
mov
fdivl
mov
jbe
cmp
lea
xor
repz
mov
add
jns
mov
cmc
fldcw
mov
shl
int3
mov
rcrb
or
nop
push
popf
es
cmc
ds
cli
adc
dec
xor
idivl
into
inc
fstpt
jecxz
jp
sbb
jecxz
addr16
dec
push
pop
xchg
std
fisubl
mov
in
pop
mov
mov
mov
xor
loope
mov
jl
jl
mov
out
or
mov
addb
les
sbb
ret
mov
and
data16
xchg
scas
rorb
scas
popf
or
xchg
rclb
outsb
insb
movsb
adc
xchg
add
jo
pop
add
push
aad
cmp
test
out
dec
call
and
jb
aad
in
jmp
pop
inc
add
rolb
pop
mov
pop
das
js
lods
mov
popa
xchg
lret
dec
jo
test
out
aaa
dec
test
sub
int
xor
or
push
jno
push
int
sbb
mov
push
jno
cmc
sbb
adc
aam
pushf
cld
add
xor
adc
mov
xchg
and
dec
mov
adc
stc
xchg
stos
push
xor
gs
cld
push
xlat
push
add
push
cmpb
add
lods
inc
test
idivl
out
cmpb
fildll
aam
xchg
push
cmp
xor
mov
or
ljmp
sbb
test
add
test
popf
gs
cmovo
push
or
insb
pop
loope
fnclex
ret
stc
hlt
adc
sub
scas
cmpsl
ljmp
cmp
lods
lock
outsl
pop
inc
mov
div
gs
repnz
inc
popf
mov
cwtl
mov
fidivs
aad
mov
or
push
mov
icebp
loope
add
mov
ja
mov
das
es
jno
movsb
sub
outsl
mov
add
inc
xchg
inc
or
cmp
stos
inc
shll
adcb
mov
push
mov
jmp
xchg
pop
inc
ljmp
call
sti
popa
loop
hlt
pop
mov
push
movsb
xchg
bound
mov
aad
adc
scas
push
sbb
xlat
std
jbe
mov
stos
mov
mov
and
aas
inc
mov
shrl
pop
fildl
lock
and
imul
ret
arpl
leave
cld
lret
xor
sub
int
xchg
xor
cmp
in
aad
idiv
mov
adc
testl
out
test
dec
fnstcw
or
fsubr
scas
loop
ljmp
sub
mov
pop
cmp
xor
jl
int3
push
aas
insb
jmp
fildl
xor
scas
ret
jmp
es
fnstcw
sub
add
adc
and
cmpsb
popf
push
push
cs
sbb
decl
cmp
mov
sahf
lea
icebp
or
push
outsl
xor
into
cmp
ja
mov
out
cmp
je
rclb
out
inc
clc
nop
adc
in
incl
loopne
bound
inc
sub
pfacc
cwtl
aaa
xchg
mov
ljmp
inc
adc
mov
adc
sbb
mov
adcb
adc
push
xchg
add
or
out
hlt
adc
jno
dec
push
push
ja
inc
insl
add
ljmp
push
stos
repnz
stc
cs
and
cwtl
adc
pop
out
test
add
ljmp
jge
add
jmp
adc
lret
test
lods
lods
in
fdivl
mov
adc
pusha
inc
push
mov
cltd
pop
stos
aaa
inc
cmp
loope
aam
mov
or
loope
addl
xchg
into
jecxz
outsl
notl
sub
in
or
mov
or
lret
lds
inc
sbb
lea
ja
inc
dec
icebp
push
dec
lods
mov
push
fwait
movsb
push
xor
cmpsl
mov
push
pop
pop
scas
adc
jp
ret
mov
ret
sar
sbb
jp
sub
push
aas
sbb
sub
cld
jnp
pop
sti
mov
mov
dec
iret
adc
das
test
xchg
test
pop
scas
adc
ficoms
orb
jno
pop
test
or
mov
stc
ret
insb
imul
push
sub
mov
in
outsl
mov
loope
jbe
adc
pop
mov
out
sbb
test
inc
pop
div
imul
add
loop
es
pop
nop
fdivrs
fisttps
std
dec
rolb
movsb
xchg
sub
bound
mov
dec
xchg
sbb
adc
inc
scas
mov
fistpll
loop
sbbl
jnp
loope
sbb
push
jne
fs
ret
mov
xor
ret
inc
movsl
sbb
push
adc
xor
in
jg
sub
int
aas
mov
in
out
imul
pushf
aad
jne
or
insl
push
sbb
sub
and
cmpsl
cmc
out
adc
arpl
adc
sub
or
leave
mov
push
ds
lahf
add
jb
sahf
mov
movsb
cmp
notb
aad
repz
shll
orb
lods
popa
sub
icebp
clc
sub
popf
aad
mov
lods
in
or
jo
test
out
mov
je
sbb
test
jnp
ja
mov
sbbl
ljmp
je
inc
push
mov
fdivrl
push
mov
dec
add
lds
pop
push
hlt
loope
pop
add
js
shrb
pop
mov
xor
data16
jne
cld
in
jmp
sub
mov
movsb
mov
pop
xchg
or
jecxz
movsl
scas
ret
xchg
jg
cmp
or
cmpl
rcr
push
add
lret
in
rorb
jp
fldl
xchg
jae
sbb
mov
cwtl
mov
cld
lret
or
shl
shr
ja
mov
push
in
sbb
js
jno
push
js
mov
int3
test
push
push
ret
dec
and
push
orb
or
jnp
call
movsb
dec
les
xor
rcll
hlt
and
jbe
mov
jae
xchg
or
mov
loope
scas
push
jnp
sub
xorb
add
xor
leave
mov
enter
sub
aaa
cmovnp
xchg
pop
push
std
js
rcrl
or
out
stos
in
inc
cwtl
lcall
scas
xchg
pushf
imulb
xor
nop
sbb
xlat
pop
xor
xchg
cmpb
mov
fwait
mov
adc
sub
clc
ds
push
sbb
test
fscale
or
shll
or
imul
ds
cmpsb
add
es
xchg
das
imul
inc
push
and
push
in
push
addr16
mov
jecxz
shrl
and
daa
into
fnstcw
inc
jg
loop
push
enter
mov
push
push
push
popa
jo
cs
mov
arpl
shrb
and
shll
cmp
jae
aam
icebp
es
jb
rcrb
std
xor
call
pushf
mov
and
stc
inc
mov
cmpsb
int
ljmp
mov
cmp
mov
push
pop
ljmp
mov
or
movl
sarb
sbb
loopne
fdivs
xor
sub
insl
cwtl
and
mov
loop
gs
cmc
int
jle
icebp
sahf
push
shlb
sub
out
orl
sub
mov
divb
xor
mov
loop
mov
lea
leave
jp
push
mov
int
sub
lret
daa
push
or
xchg
lcall
sub
lret
in
enter
cltd
push
sbb
fsubrs
sahf
icebp
shll
fldenv
pop
cmp
leave
loop
sahf
aaa
sub
mov
cmp
and
cmp
decl
aaa
mov
inc
inc
add
call
sub
push
scas
jl
sbb
adc
xor
xchg
xchg
rep
xchg
js
out
dec
ss
sbb
xor
add
or
mov
push
push
negb
mov
sub
and
in
mov
out
stos
mov
enter
lahf
xor
jge
fadd
dec
aam
sub
daa
ss
div
icebp
pop
movsb
outsb
out
cwtl
lods
inc
loop
xchg
or
and
dec
jge
xchg
sub
bound
cmc
movsb
adc
stos
lods
cmp
adc
js
jmp
flds
sbb
ss
jp
adc
jne
mov
mov
cmp
mov
push
inc
call
lcall
movsb
idivb
mov
pop
push
lods
out
inc
out
hlt
popf
push
cmp
mov
mov
pop
je
insb
sbb
mov
scas
ret
jo
add
inc
xchg
add
push
sbb
adc
repnz
out
xlat
mov
in
xchg
fdivrp
enter
imul
int
jo
je
rorb
rcrb
jecxz
sub
push
test
and
cmp
fisttpl
in
xchg
mov
insb
mov
cmp
test
push
fsubrs
sub
lods
cmp
out
iret
push
and
pusha
fidivs
xor
rcrb
stc
xor
dec
shll
adc
or
jae
jne
cmpsl
push
xorl
into
cmc
std
fnstsw
data16
pop
in
xchg
or
fadd
sahf
cmc
or
fcmovu
bound
pushf
loope
clc
es
rol
mov
mov
lds
test
push
add
xchg
push
pop
lds
aas
dec
adc
jg
pop
mov
sahf
dec
or
fdivrs
sbb
lret
mov
int
pop
popa
sub
jmp
data16
jo
jae
mov
icebp
pushf
mov
and
push
adc
mov
jns
es
cmp
jg
cmpsb
in
pop
and
stos
imull
dec
cli
aaa
mov
cmp
fcmovu
jns
daa
lods
out
cmp
int3
mov
out
pusha
mov
shl
xchg
and
dec
fisubs
add
int3
mov
dec
sub
sbb
add
adc
gs
out
hlt
in
push
dec
cmp
aas
rclb
jg
xchg
xchg
xor
dec
je
les
daa
enter
mov
pusha
ja
xchg
pop
pop
and
test
int3
testl
xchg
movsb
xchg
mov
add
mov
in
add
test
aas
insl
mov
sbb
sbb
mov
mov
add
outsl
cmc
sbb
js
push
and
sbb
dec
pop
iret
jl
aaa
xor
mov
data16
rcrb
xor
pop
cmc
sbbl
cli
std
in
jb
aaa
popf
adc
mov
push
insl
aaa
add
xlat
stos
jo
aas
jb
and
jp,pt
cmp
jo
cmp
mov
dec
aaa
repnz
mov
dec
lods
shll
add
mov
pop
test
jne
xor
popa
clts
mov
cmpsl
hlt
mov
xor
adc
mov
adc
fidivrl
sahf
das
mov
pop
mul
jmp
pop
test
dec
add
jle
mov
adc
cltd
ret
and
adc
sbb
jo
mov
aam
in
mov
xchg
out
inc
dec
loop
adc
cmpsb
faddl
aaa
jno
pop
and
ss
bound
and
inc
enter
lds
mov
in
pusha
ds
mov
xchg
imul
call
cltd
inc
sahf
imul
das
popf
sbb
fbld
cmp
mov
lea
cmp
jne
fdivr
jmp
pop
notl
fwait
mov
test
inc
test
setge
mov
ret
pop
mov
push
dec
sahf
add
loope
sbb
pushf
stos
outsb
mov
jge
out
cmc
cld
sub
xor
jns
xlat
fwait
jns
data16
or
std
stc
std
aam
jbe
push
rcl
jg
aas
sbb
cmc
shlb
lods
aaa
xlat
mov
in
push
inc
sahf
xor
mov
push
cmp
loopne
movsb
in
inc
lods
jbe
decl
jg
aaa
popf
ja
pop
adc
in
out
cmp
sub
dec
inc
arpl
push
stc
push
stos
ja
std
imul
ljmp
mov
out
fmul
stc
out
cmp
std
lea
sbb
je
jecxz
jo
fcomp
push
mov
mov
xchg
bound
inc
repnz
popa
jae
adc
dec
lea
jl
sub
push
push
push
adc
or
mov
sub
inc
add
push
xchg
sbb
shlb
mov
xor
cmp
gs
pop
xor
jae
ljmp
int3
mov
imul
lcall
mov
cmp
and
and
jno
push
jmp
hlt
call
jl
das
pop
das
aas
clc
aam
inc
out
push
orb
ljmp
aad
inc
sbb
lods
xor
sbb
dec
sbb
sbb
inc
bound
jae
jl
test
jnp
jb
mov
mov
fs
xor
sub
repnz
mov
xorb
inc
pop
fwait
mov
mov
jg
sbb
xchg
push
sbb
imul
xlat
cmc
fistpll
rorb
aad
xor
cmp
dec
jecxz
out
mov
das
das
xchg
cmp
push
pop
cmp
int
mov
mov
cmpsb
aaa
mov
push
inc
pop
push
mov
fidivs
push
lcall
xchg
cmp
mov
mov
lock
mov
fcoml
ds
mov
ret
jg
push
dec
lcall
inc
inc
inc
pop
aas
pop
or
xor
ds
add
pop
adc
ja
and
xchg
pop
fadds
add
xchg
sub
inc
fidivrl
jbe
sahf
fsubl
pop
mov
mov
loop
iret
insb
sti
out
sbb
pushf
dec
lahf
outsb
fstpt
bound
ret
push
jle
ret
in
push
sbb
popa
outsl
xor
inc
push
iret
add
out
mov
ss
xchg
nop
jp
cmpsl
scas
xor
imul
movsb
pop
repz
aas
dec
shrb
jno,pt
xchg
fidivs
dec
adc
aas
stos
cmp
fs
imul
popf
sbb
pop
rolb
loopne
movsb
inc
inc
inc
or
aad
push
mov
jl
push
in
outsb
jge
jmp
ds
xchg
lods
dec
jb
cli
inc
and
sbb
cmp
xor
inc
cmpsb
mov
mov
sahf
leave
jno
adc
xor
mov
xchg
pop
sub
icebp
aam
popa
mov
sbb
pop
pop
and
std
mov
cmc
add
add
addr16
xchg
push
mov
jnp
cmpsb
scas
inc
out
sub
icebp
pusha
push
xchg
sti
mov
mov
ja
std
pop
imul
mov
sbb
sbb
inc
dec
push
notb
loopne
dec
icebp
in
test
aad
sti
xorl
mov
ja
stc
in
lods
jnp
mov
mov
imul
push
jecxz
into
dec
shll
and
fisttpl
push
sbb
sub
icebp
jnp
loop
stos
sti
and
inc
pusha
cmp
aas
scas
in
mov
adc
dec
data16
jo
xchg
mov
orl
ds
sbb
jbe
andb
outsb
push
and
fldt
fs
adc
scas
cmp
lock
stos
mov
push
loopne
lds
gs
sub
xor
push
sbb
xchg
add
imul
loope
fsubrl
add
xlat
int3
mov
lahf
inc
jno
cs
shlb
mov
cmp
fsubl
enter
fwait
loopne
xlat
mov
pop
shlb
mov
cmc
cwtl
insl
pop
in
sti
xor
imul
mov
loope
xchg
lahf
aaa
sarb
cwtl
clc
les
rorb
cmp
lret
and
pop
cmpsl
enter
or
aam
enter
cmpsb
fidivrs
je
add
dec
nop
shll
clc
cwtl
xor
push
nop
xor
in
dec
xchg
testl
push
and
cmpb
inc
scas
xchg
pop
or
and
ss
js
pop
mov
cmp
jg
nop
mov
push
cli
cmpsl
jmp
mov
cltd
pop
add
xor
divb
or
xchg
and
adc
pop
xchg
push
sbb
mov
xchg
xor
jae
pop
hlt
fwait
int
or
aad
outsl
dec
adc
clc
in
dec
sahf
cmp
adcb
lds
ja
xchg
jo
roll
inc
jbe
mov
sub
shrl
mov
aam
sbb
jae
pop
test
cmc
sarl
jnp
pop
push
ficoml
ljmp
fistl
cmp
xor
xchg
pushw
bswap
out
and
lret
xchg
sti
lret
add
js
push
jge
dec
or
cltd
inc
ret
scas
mov
dec
cltd
inc
in
mov
sti
gs
call
ja
cmp
mov
push
dec
jp
pop
dec
imul
push
fmuls
hlt
call
addr16
cmp
fdivs
dec
add
mov
jb
mov
outsl
mov
adc
sbbb
js
sysexit
pop
mov
dec
clc
repz
loop
xor
sbb
addb
mov
fneni(8087
cltd
lds
fidivs
sbb
jbe
xor
arpl
push
cmc
sub
or
xchg
cmpsb
rorl
jp
xor
adc
lock
add
in
sti
cmc
push
ret
dec
mov
fcoms
pop
repnz
inc
clc
addl
push
inc
ja
fstpl
fldt
pop
xor
xchg
inc
push
mov
inc
pop
je
ljmp
xchg
or
cmp
mov
insl
rolb
push
push
mov
jnp
movmskps
mov
stos
cld
ja
cmp
or
xor
mulb
dec
adc
xor
jne
pop
outsb
aad
popf
mov
aaa
outsb
sub
stos
data16
orl
fdivrs
mov
sbb
push
sbbl
jmp
sbb
sbb
nop
loope
push
out
outsb
in
or
inc
xlat
xor
sub
popa
js
aad
es
xchg
adc
xchg
adc
cmp
out
cltd
xor
insl
icebp
jno
scas
add
js
into
add
ljmp
cmc
sub
dec
notl
cmc
xlat
adc
adc
jo
add
inc
cmpsb
jmp
cmp
or
cli
jecxz
in
gs
cmpsl
sbb
sbb
sub
leave
movb
call
pop
adc
dec
mov
adc
cmp
movsb
int3
cmp
pusha
mov
mov
popf
add
jne
rcr
and
in
xchg
xchg
cmp
dec
cltd
jmp
test
loop
mov
cmp
lret
inc
stc
aas
rcl
push
or
jne
mov
jne
cli
xchg
fnstsw
loop
cmp
loopne
mov
add
cmp
rcrb
adc
pmulhw
jnp
add
in
xlat
pusha
pop
add
bswap
xchg
cmp
xchg
jge
fdiv
repz
inc
jne
insl
mov
mov
cwtl
lock
adc
in
jle
cmp
sub
mov
test
scas
sbb
nop
xor
cmpsl
paddusb
jne
mov
sub
pop
loop
pop
fcoml
add
push
inc
sub
hlt
popf
jb
or
nop
sar
jnp
leave
jae
cmp
mov
movsl
pusha
add
jmp
vmovdqa
and
mov
ja
mov
jbe
sbb
push
out
loope
add
pop
or
inc
outsl
arpl
cmp
jne
aad
mov
daa
sbb
jns
mov
sub
fwait
push
dec
dec
pop
and
cmpsl
or
js
jns
push
jno
test
pop
cmpsb
mov
sub
int3
mov
mov
and
pop
lock
mov
pop
insl
sbb
xchg
imul
push
outsl
fildl
jg
adc
rol
pop
add
les
mov
xchg
stos
fstps
mov
xchg
add
aam
sbb
mov
mov
aas
std
mov
jmp
sbbl
shl
xor
inc
out
xor
int
mov
testl
jae
leave
dec
push
mov
mov
pusha
or
insl
or
mov
inc
mov
mov
cmp
das
add
mov
les
push
and
test
test
sbb
fdiv
adc
iret
scas
pop
hlt
cltd
pop
imul
in
out
fdivr
movsl
mov
fcomi
inc
adc
loop
dec
and
xchg
mov
mov
mov
mov
test
shll
or
push
shll
or
adc
icebp
testl
jp
mov
cmc
or
mov
clc
pusha
adc
mov
push
mov
jns
idivb
fildl
mov
lcall
xchg
cmp
icebp
ljmp
mov
cld
fstl
xor
loopne
fdivs
sub
out
pop
cld
mov
ret
mov
push
scas
cwtl
or
sbb
fnstenv
cmp
repz
jb
stos
xchg
les
sahf
lock
xchg
loop
and
jb
scas
repnz
sbb
ljmp
test
jmp
rcll
addr16
mov
fcomps
push
loope
js
aad
mov
fidivs
mov
dec
je
out
test
pop
int
gs
or
mov
push
test
push
insl
xchg
ret
lods
mov
addb
sbb
xchg
jle
adc
xchg
cmp
lods
pop
lods
insl
cmp
aaa
fsubrs
insl
xor
mov
rcl
fiaddl
cltd
jge
lret
adc
in
pextrw
sub
mov
lret
ret
idivb
sti
rorl
mov
adc
lcall
loop
mov
xchg
adc
scas
add
sbbb
xor
shrb
jge
cmp
jb
loopne
mov
cli
popl
mov
mov
mov
test
pop
and
test
pop
int
or
scas
mov
pop
dec
and
mov
mull
sub
add
mov
andb
mov
mov
sbb
fnsave
mov
mov
sub
aam
in
sub
cmp
mov
mov
insl
sbb
xchg
sarl
and
nop
sub
mov
mov
arpl
mov
pop
cmpb
mov
clc
arpl
push
jecxz
sahf
pop
inc
mov
mov
push
xchg
bound
sub
pop
das
adc
pop
movsl
out
adc
add
xchg
sub
aad
int3
int
outsb
iret
push
das
mov
cltd
mov
sbb
js
push
sbb
mov
aam
inc
mov
inc
add
movsl
sbb
stc
push
clc
mov
test
xchg
and
loopne
push
shrl
rcll
clc
popa
test
cmpsl
loope
mov
adc
faddp
mov
lret
jne
and
jae
push
xchg
iret
addb
loop
push
test
add
xchg
ljmp
add
stos
xor
inc
pop
js
xor
arpl
inc
pushf
aas
sbb
mull
cltd
inc
sarl
repnz
into
iret
mov
jmp
cltd
roll
dec
lahf
xlat
mov
xchg
mov
out
mov
adc
pop
xor
loop
push
cwtl
hlt
jns
mov
imul
das
pushf
xchg
push
rcrb
div
sub
and
mov
add
loope
adc
lods
push
and
je
dec
mov
push
pop
pushf
pop
and
lcall
mov
add
push
test
sbb
xor
lret
out
adc
and
jl
in
add
and
add
inc
loope
test
popa
pop
sub
pop
push
lahf
pop
ja
fisubrs
xchg
xchg
jns
scas
iret
jb
testb
lahf
in
jle
and
mov
es
push
push
imul
and
mov
xor
mov
sub
ds
xor
jp
mov
std
js
movsb
dec
mov
lret
cmp
je
push
rcrb
lahf
imul
seto
fbld
movsl
push
sbb
and
fistpll
xor
hlt
js
scas
bound
inc
pop
mov
inc
rcrb
ja
outsl
push
fisubs
fimull
sahf
test
lods
lods
cli
pop
nop
adc
dec
hlt
xor
clc
mov
jns
es
in
cli
jno
cwtl
lds
imul
add
pop
dec
movsl
dec
loope
sub
lret
inc
sbbl
cld
or
jmp
jle
sbb
jnp
xor
adc
rcrb
cmp
xchg
sub
jb
notl
and
mov
mov
push
cwtl
push
jnp
and
jne
or
lods
push
fdivrp
andl
imul
jmp
push
scas
popf
pop
sub
mov
dec
dec
add
icebp
andb
lret
out
stos
and
test
call
popa
pop
push
data16
stos
mov
ss
insl
cmp
inc
cmpsb
mov
jo
cmp
movsl
and
cmpsl
repnz
ljmp
jmp
lock
push
cmpsb
mov
push
push
shll
es
and
loope
cltd
loope
xlat
stos
push
xchg
cmp
adc
repz
test
fldt
lods
inc
pop
cld
dec
std
dec
je
xor
lret
and
mov
sahf
cld
dec
pop
movsl
mov
iret
inc
loope
or
les
push
mov
lahf
mov
into
jecxz
mov
mov
jle
subl
popf
movsb
dec
test
into
pop
divb
xlat
adc
mov
mov
fsubp
mov
in
push
add
push
pop
mov
sbb
jle
jnp
cmp
push
add
mov
push
in
push
js
test
iret
and
mov
jg
aad
adc
shlb
xor
roll
jb
rolb
and
adc
push
xchg
push
or
pop
aad
push
sub
inc
xor
repz
lcall
adc
adc
or
cmp
loop
pusha
ljmp
xchg
test
xor
nop
daa
nop
addr16
mov
dec
insb
dec
dec
lods
xchg
mov
sub
and
and
jae
jg
rcll
mov
dec
jae
xchg
push
and
dec
and
sti
dec
imul
inc
sbb
dec
xchg
xor
ljmp
outsb
mov
lods
xchg
mull
pop
mov
jns
out
mov
lock
icebp
pop
mov
cmpsb
add
js
mov
fs
orb
lret
xor
das
xor
pop
mov
jnp
lea
sbb
addr16
loope
stos
sub
or
jb
icebp
out
cs
fstpl
fs
push
pop
dec
cld
jmp
sahf
pop
fs
mov
push
scas
clc
adc
push
mov
addr16
xchg
frstor
sbb
test
xchg
mov
rorb
idivb
imul
jae
push
lahf
xchg
pop
xor
mov
adc
fdivs
dec
sub
ja
cmpsb
xchg
hlt
mov
lods
ss
mov
push
repnz
mov
push
cmpsl
dec
in
ss
and
xor
mov
fiaddl
shll
jmp
dec
pop
sub
push
and
fs
mov
dec
sub
jl
push
hlt
test
ja
jge
pusha
faddl
or
aas
addr16
dec
push
pop
jle
mov
lcall
inc
stc
stc
pop
scas
mov
xor
mov
pop
aad
pop
nop
call
inc
pop
mov
ja
ljmp
dec
push
sub
jmp
loopne
test
jle
sahf
sub
pop
mov
mov
adc
ljmp
mov
fstl
fisubs
xchg
mov
cmp
and
mov
jno
xchg
addb
xor
and
mov
pop
add
or
add
pop
dec
dec
imul
xchg
das
shlb
out
jl
dec
js
lret
mov
inc
cmp
jo
sbb
or
bound
dec
or
xchg
mov
fldt
mov
pop
mov
orl
pop
dec
addl
inc
sti
push
or
dec
sub
imul
clc
or
leave
movsb
je
movsl
pushf
pushf
arpl
roll
cmc
push
lods
cmp
andb
das
push
xor
add
dec
negl
xor
sbb
add
das
rcrl
cwtl
sbb
jb
dec
xor
or
test
fldenv
cmpsb
pusha
inc
ret
inc
aad
cltd
mov
push
sbb
pushw
sahf
adc
mov
lretw
jmp
add
fisubrl
mov
dec
dec
rorb
stos
outsb
mov
sti
mov
add
inc
xchg
adc
pushf
in
in
pop
pusha
xchg
and
ja
bound
ds
mov
jl
jp
sub
lods
mov
icebp
popf
filds
push
in
in
xor
or
not
mov
movsb
xlat
cmpsl
mov
dec
push
sub
mov
or
mov
ret
pop
push
hlt
iret
lea
aam
xor
inc
or
mov
jl
xor
ret
inc
sbb
mov
shl
fldenv
outsl
sbb
push
xor
lcall
adc
push
cmp
mov
add
sbb
lods
or
push
xor
pop
adc
push
testb
and
mov
xchg
push
mov
add
jp
jne
in
mov
cmc
jnp
in
fstpt
inc
nop
jge
sub
call
mov
mov
ljmp
into
mov
lods
call
imul
add
mov
push
pop
iret
and
inc
sub
inc
push
neg
mov
hlt
test
bound
popf
mov
push
add
rcll
fsub
xchg
loop
iret
mov
out
push
adc
sti
xchg
inc
dec
enter
cmp
pushf
ja
shll
xor
sbb
mov
push
dec
pop
daa
pop
add
xchg
or
shlb
fdivp
jb
fbstp
stos
cmp
lcall
and
sti
aaa
pop
les
sarb
insl
xchg
iret
leave
int3
jno
push
lods
cmp
inc
popf
popa
sbb
pushf
inc
push
inc
mov
cs
jb
sahf
adc
aam
dec
add
xchg
dec
mov
filds
xor
addb
add
loope
dec
stos
test
pop
mov
xchg
loop
enter
xor
int3
dec
lahf
inc
pop
shlb
sbb
mov
jno
fdivl
xor
dec
cli
cli
sti
pop
repnz
xlat
pusha
jge
mov
push
xor
jo
cmp
lea
xchg
xchg
xchg
stc
ljmp
out
xor
mov
into
pushf
loopne
loope,pn
outsb
and
mov
ds
aas
shr
sbb
sub
mov
cmp
push
addr16
int
popf
pop
sbb
imul
push
test
jmp
insl
negl
cmp
jmp
je
imul
icebp
or
stos
test
in
sbbb
sub
js
mov
es
cmpsl
sbb
loopne
push
or
rolb
jle
and
add
outsb
ds
mov
sbb
mov
jl
add
inc
mov
push
jg
fs
ss
dec
lret
popf
and
mov
ljmp
add
xchg
aas
sub
xchg
dec
out
lcall
pushf
sub
sbb
enter
mov
jae
pushf
cmpsl
imul
pop
sub
pop
dec
lret
adc
arpl
adc
hlt
mov
dec
xor
sbb
adc
fistl
push
mov
or
nop
lahf
test
inc
cmp
arpl
adc
arpl
aaa
xchg
sub
fbstp
xor
push
into
mov
imul
jb
mov
push
sarb
adc
and
adc
insb
push
push
cltd
sub
mov
cmp
xchg
mov
sbb
xorl
arpl
inc
fwait
ljmp
sub
dec
mov
cmp
out
push
push
or
pop
fs
jns
mov
pop
test
inc
sbb
int
das
test
lahf
inc
repz
mov
fadd
pop
call
xor
aad
inc
jge,pn
and
mov
into
stos
dec
shlb
ljmp
fidivrl
mov
xor
sar
stos
les
cmpb
xchg
cmp
cmpsl
cli
dec
adc
popa
pop
and
dec
sbb
in
ret
adc
push
pop
lcall
out
xor
mov
adc
leave
insl
xchg
movsb
sub
hlt
cmc
insb
xchg
daa
iret
inc
faddl
test
jo
inc
dec
cmp
pop
push
sbb
sub
push
cltd
iret
int
mov
or
hlt
mov
dec
xor
jg
jne
inc
mov
ficoml
mov
gs
jns
cs
cmc
ljmp
jns
call
lock
xchg
sbb
sar
mov
mulb
loop
aad
mov
or
xchg
xchg
aad
fs
popf
cld
jb
xor
je
test
jns
mov
int
push
repnz
xchg
dec
push
push
cmpsl
fcompl
add
add
insl
sbb
or
lods
mov
and
push
jecxz
js
xchg
std
stos
adc
push
xor
or
movsb
cmc
aas
test
cli
jecxz
loope
mov
xchg
push
daa
mov
bound
jb
add
sub
xchg
scas
mov
adc
cmp
pop
sub
les
scas
stc
inc
and
scas
dec
in
aaa
arpl
aaa
sub
faddl
or
jg
xor
cwtl
or
frstor
push
fcmovb
icebp
fcomi
scas
sbb
dec
lret
lahf
jbe
jo
and
push
xlat
mov
dec
mov
cwtl
lods
inc
lods
mov
lahf
movsb
insl
cmp
mov
push
or
xchg
in
pop
push
out
fildll
dec
mov
cld
sub
mov
mov
push
int
cmp
push
dec
mov
xchg
aad
xchg
push
mov
les
nop
jl
mov
pop
sub
bound
adc
pushf
mov
push
inc
inc
jbe
pop
mov
pop
xchg
and
inc
jg
add
test
and
adc
mov
add
lods
orb
push
inc
rolb
cmc
scas
int
in
pop
xchg
pop
test
mov
inc
test
xor
int3
jnp
add
cmc
mov
scas
sti
mov
mov
addl
lods
insl
jno
cwtl
push
inc
push
cld
dec
gs
sbb
notb
sub
and
scas
cmpsl
mov
and
fs
leave
mov
or
jle
ret
hlt
jo
mov
daa
rcll
lock
xchg
lea
orl
data16
pop
test
and
clc
fnstcw
push
mov
mov
out
xchg
mov
fwait
ljmp
cmp
out
dec
ja
mov
movsb
sub
std
xchg
push
mov
xchg
imul
ljmp
mov
popf
inc
xor
dec
xchg
popf
aad
inc
xor
push
orl
inc
js
aad
addb
ret
movsb
pop
jnp
pusha
xor
xorb
push
lret
add
mov
inc
dec
cs
sbb
push
test
popa
mov
loope
xor
push
imul
sbb
ficompl
ficompl
js
stc
loope
or
sbb
das
aas
dec
rep
leave
jmp
loop
push
jns
ret
push
add
pop
rcrb
scas
je
mov
lea
orl
dec
dec
xorb
out
pop
bound
pop
lcall
or
adc
rorb
and
push
jno
add
jmp
std
pop
mov
push
push
dec
seto
lods
sub
cmp
sbb
and
js
mov
ss
jno
lret
xor
repz
adc
in
xor
scas
arpl
pop
inc
addr16
int
rcrb
addr16
xchg
sub
imul
cmc
dec
orl
xor
ja
pop
in
js
mov
scas
lds
mov
mov
aad
inc
sub
or
push
cli
cwtl
clc
movsb
mov
jo
ja
add
out
call
cltd
aam
jmp
cmc
fidivs
jle
pop
mov
into
das
adc
mov
fsubr
and
or
jb
test
testb
mov
int3
jmp
add
fcmovnb
leave
into
mov
into
lret
scas
push
dec
cld
and
jecxz
dec
cmpsb
pop
mov
das
jnp
and
out
mov
xchg
and
xor
cmp
mov
jae
mov
clc
mov
push
inc
jg
jge
pusha
mov
pop
subl
notb
dec
cmp
mov
js
push
add
pop
lcall
mov
jle
jne
sub
ja
inc
out
sub
jbe
mov
loopne
ficompl
jl
daa
in
jge
add
xor
stos
jnp
shl
dec
xlat
test
lods
inc
enter
jmp
mov
dec
mov
jecxz
pop
add
push
loop
cli
pushf
nop
and
jne
mov
es
pop
jle
xor
adcb
mov
or
sub
inc
lods
loopne
lods
adc
mov
pop
cmp
xchg
adc
and
mov
xchg
flds
inc
sbb
ljmp
mov
mov
les
add
pop
sub
sbbl
lret
inc
mov
inc
loopne
cmp
insl
loope
addr16
flds
pop
arpl
dec
loope
decl
pop
pop
mov
xchg
add
jb
add
test
sahf
pop
stos
jo
popf
rclb
jne
mov
mov
ss
and
mov
xchg
pop
ss
stos
or
in
dec
push
jg
push
out
cmpl
stos
gs
lahf
mov
jbe
lahf
mov
mov
inc
fildl
out
jae
xchg
movsb
mov
scas
lret
lock
sbb
fists
push
repnz
pop
inc
inc
cmp
mov
aam
mov
push
sbb
push
xchg
push
notb
outsl
data16
popf
add
sbb
jmp
insb
or
jbe
mov
cmp
mov
sbb
jb
mov
call
test
imul
in
dec
stos
xchg
orb
ja
imul
xor
mov
xchg
popf
add
mov
mov
es
or
daa
dec
shr
dec
add
stos
imul
ljmp
mov
je
jns
cmc
icebp
and
fiadds
sbb
cmpsb
aad
call
imul
pop
outsl
mov
jbe
out
or
xor
push
stos
popf
mov
mov
mull
mov
popf
stc
int
mov
sub
dec
sarb
adc
insl
and
jno
mov
and
cs
mov
pop
fs
mov
cmp
pop
in
leave
mov
mov
lock
xchg
jae
jo
mov
outsb
dec
pop
sub
pushf
pop
cmp
test
sbb
inc
repnz
sbb
daa
cmpb
loopne
cmpsl
pop
jp
pop
push
dec
sar
add
dec
imul
std
sbb
out
mov
pop
add
bound
xor
stos
cld
jnp
adc
mov
nop
mov
jmp
fsubr
mov
jnp
shrl
nop
xchg
loopne
aas
pop
pop
and
rorb
fiadds
mov
pushf
add
push
inc
jbe
push
loope
dec
dec
test
xlat
test
cld
lahf
mov
out
loopne
jp
fisubl
test
cmp
lods
fsubrs
add
out
out
xchg
sub
xor
jno
lahf
xchg
pop
loop
imul
clc
test
xor
call
sarb
inc
aas
or
adc
sbb
mov
add
sub
movsb
addr16
jge
sbbb
lock
popf
cwtl
inc
pop
push
or
cmpl
mov
xor
inc
insl
or
scas
mov
stc
idivl
adc
cmp
aas
test
cmp
in
dec
xchg
cltd
dec
test
imul
dec
xor
js
cmp
cmpsb
xchg
mov
mov
pop
leave
cmpsl
cmc
cmp
sub
popa
stc
mov
inc
xchg
ret
jle
pusha
adc
repz
test
nop
imul
jg
mov
jmp
std
int3
push
call
or
out
dec
fnstenv
push
dec
cmp
cld
xlat
mov
das
sub
dec
daa
je
pusha
mov
xor
inc
sub
pop
push
call
addr16
ret
insl
push
rclb
out
mov
mov
sub
jge
test
lahf
aad
rorb
dec
popa
iret
inc
dec
pushf
inc
and
pop
fadds
aam
pop
and
mov
and
push
mov
inc
cmpsl
lea
orb
mov
pop
in
jp
loopne
sti
cmp
push
cmp
add
cmp
jge
and
cld
loop
outsb
mov
mov
rcrb
push
adc
addr16
sub
cld
push
jno
data16
les
fsubs
mov
int3
push
ror
and
out
mov
sub
push
neg
iret
ror
int
loop
loope
jae
ljmp
out
leave
lahf
insb
add
lret
xchg
xor
cmp
out
movsl
aas
test
push
jp
mov
lcall
jbe
and
dec
push
mov
add
jge
mov
mov
lock
push
mov
add
adc
ja
jecxz
test
xor
sbb
mov
test
inc
jle
orl
cmp
or
xchg
rcr
jl
icebp
dec
in
push
mov
pop
mov
xor
jmp
loopne
mov
mov
sub
sbb
pop
lahf
xlat
fcomps
shrb
pop
push
xor
ja
les
sbb
cmpl
lret
movsl
pusha
sarl
adc
mov
insl
xor
sbb
lret
cmp
add
in
cmp
fs
sbb
jle
clc
insb
cmc
sub
mov
jp
jl
popf
push
js
push
fists
xchg
dec
push
iret
dec
jb
enter
mov
scas
dec
shll
or
mov
int3
stc
jg
data16
pop
mov
outsb
xchg
mov
hlt
fs
or
iret
lahf
pop
rol
mov
cltd
sub
xor
ss
lds
imul
leave
xchg
cmp
shl
jbe
xor
jl
pop
dec
xor
in
sub
pop
xchg
push
mov
jle
in
aad
repnz
iret
cmp
scas
addr16
loopne
dec
loop
call
scas
xchg
fwait
push
das
jne
cmp
sti
ret
adc
sub
aam
stos
cmp
fwait
shrl
fxch
lcall
push
xchg
sub
mov
lcall
pop
pop
mov
mov
repz
out
lahf
dec
mov
inc
dec
inc
sti
js
das
rorb
mov
sub
aad
dec
cltd
xchg
hlt
jl
fistpll
inc
xchg
push
nop
loopne
jae
div
call
outsl
imul
lahf
sbb
testb
fstps
testb
rclb
inc
xchg
mov
neg
inc
mov
repz
std
cmp
orl
cmc
push
scas
pop
js
mov
cli
mov
sarl
jmp
es
mov
lret
js
dec
xchg
xchg
nop/reserved
lds
lret
in
pop
mov
cwtl
sub
inc
pop
add
in
pop
mov
icebp
imul
pop
scas
jp
lret
xchg
inc
aas
nop
xor
jmp
cmpsb
mov
aas
jg
inc
fcomp
sbb
imul
mov
outsb
out
push
sbbb
pop
fldt
push
inc
rclb
fs
jge
into
and
aaa
mov
lods
jne
neg
cld
sbb
jmp
ret
jecxz
sbb
or
out
lods
pop
fwait
mov
lret
icebp
mov
pop
addl
push
push
or
lock
out
sahf
dec
mov
adc
inc
inc
and
repnz
mov
and
sub
cwtl
sub
cld
jb
out
stos
sbb
movsb
or
xorb
sti
divl
enter
jo
dec
jae
fdivrp
fwait
mov
dec
push
xchg
movsl
fcmovb
jp
enter
dec
xor
cmc
add
fadd
movsb
das
in
jp
push
es
sbb
cmp
fisttpll
dec
jne
stc
mov
or
pushl
jb
add
dec
or
jl
xchg
dec
add
leave
popa
hlt
dec
or
jb
andl
cmpsl
mov
push
xchg
aaa
sub
xchg
cmp
divl
sub
xlat
xchg
jno
sub
dec
loop
pop
and
sbb
fcomip
cltd
pushf
push
in
pop
sbb
xor
lahf
mov
arpl
push
add
in
pop
in
je
add
fiaddl
jg
aad
jbe
push
stos
sahf
adc
mov
mov
stos
adc
ret
mov
hlt
adc
pushl
cmp
ret
fiadds
jle
or
fwait
cli
in
imul
mov
mov
bound
and
mov
mov
sub
pop
mov
aaa
xchg
stos
or
loope
or
movsl
cmp
sahf
dec
dec
mov
pushf
out
pop
mov
dec
mov
repz
cwtl
cltd
cmpl
loop
leave
jns
or
or
rcrl
or
push
stc
cltd
adc
fnstsw
sbb
lahf
jns
les
outsl
int
test
push
out
mov
lods
xlat
fcomip
xlat
test
divb
rclb
cltd
fiaddl
jecxz
test
add
jp
gs
fimuls
cld
push
testl
lods
scas
loop
push
add
fbld
and
dec
mov
mov
ror
repz
and
lea
test
cmpsl
clc
lock
mov
adcl
sbb
repnz
fs
rolb
adc
jg
mov
adc
sbb
pop
push
test
push
pusha
xchg
cwtl
je
xchg
and
and
adc
push
mov
jg
mov
rolb
cmpsb
jmp
adc
inc
mov
sbb
andb
xor
lret
dec
roll
scas
fsubrl
aas
scas
push
inc
aas
jecxz
movhps
lcall
negl
jl
xor
jle
adc
into
pop
jle
push
int3
sbb
popf
jg
adc
xor
xchg
push
xchg
in
gs
xchg
insb
mov
dec
inc
xor
push
cwtl
call
jecxz
shrb
sbb
outsl
in
or
pop
cltd
les
pop
xor
cmp
ljmp
stos
inc
scas
sub
pop
cmp
test
aam
mov
jg
ljmp
loopne
and
jae
gs
adc
lret
cmp
cmc
imul
mov
dec
test
ja
loopne
pop
add
xchg
fs
or
sahf
pop
push
push
in
xlat
gs
jno
fwait
jp
in
sbb
push
call
pop
sub
aam
jp
xor
leave
aam
lods
adcl
pop
or
xchg
pop
and
jnp
cs
stos
adc
lock
mov
pop
movb
imul
hlt
pop
les
mov
cli
adc
jb
fxch
xchg
loopne
test
push
stc
dec
cmpsl
fs
or
mov
leave
adcb
dec
dec
ss
jle
jns
iret
fistps
jns
lret
insl
and
hlt
push
dec
out
icebp
fistps
mov
xchg
sub
sar
loop
fstps
shlb
xchg
imul
pop
clc
leave
lea
bound
loope
mov
and
jmp
mov
js
es
mov
les
pop
testl
js
inc
stc
fsts
out
adc
push
insl
jmp
jge
and
addr16
test
adcb
mov
in
inc
add
out
sub
pushf
cltd
inc
dec
pop
fwait
inc
add
outsb
jbe
roll
jae
repnz
xchg
mov
fstpl
push
stos
popf
pop
ret
dec
push
scas
mov
push
push
insl
xchg
lods
mov
orb
inc
call
adc
jmp
xchg
xchg
es
fisubrl
adc
mul
mov
or
ret
dec
sbb
out
or
clc
lock
xchg
sbb
cmpsb
push
add
mov
push
js
sar
cld
adc
jbe
loopne
mov
jo
xorb
bound
ljmp
mov
shlb
fldenv
jle
mov
sub
mov
jge
in
add
xchg
aaa
sbb
pop
mov
stos
sub
sbb
sbb
xchg
ret
cmp
add
inc
push
and
xrelease
sub
stc
call
mov
xor
xchg
inc
xor
xor
out
jge
add
ret
loopne
orb
inc
mov
daa
out
ficompl
cmpb
mov
in
or
xor
fwait
xorl
in
pop
xor
lret
fs
fs
cld
sbb
cmpsl
cmc
cmpsl
mov
stos
cld
and
push
push
nop
sub
popa
cmp
and
cwtl
adc
and
pop
add
add
lods
bound
add
jecxz
jmp
adc
xor
jp
jae
icebp
arpl
inc
xor
add
iret
add
dec
aam
dec
or
mov
in
fadds
sub
or
jae
xchg
cmp
cwtl
sub
test
mov
mov
out
incl
repnz
jb
xchg
sub
jbe
out
push
mov
ffree
cmp
ljmp
sbb
movb
loopne
push
pop
fcompl
mov
pop
cmc
repz
aaa
scas
adc
lds
jge
stos
adc
xor
inc
inc
mov
mov
xchg
jo
xor
les
mov
mov
dec
and
ss
imulb
dec
insb
mov
adc
cmp
incl
cmp
call
imulb
and
jb
stos
or
sbb
movsl
adc
shrb
in
pop
xchg
sbb
xchg
xlat
sbb
test
addl
stos
mov
xor
outsl
std
adc
dec
inc
arpl
gs
dec
jg
sub
sbb
jp
mov
movsl
subb
lcall
fs
add
pop
cmp
idivl
mov
out
adc
add
addl
int
inc
adc
xor
xor
divl
js
imul
push
cmp
dec
and
lods
cmp
jg
mov
jmp
mov
jle
iret
mov
jo
stos
and
addr16
mov
mov
fmul
mov
std
clc
lock
popa
in
add
jnp
orl
leave
pushw
pusha
repnz
adc
jp
clc
outsb
xchg
cmp
cmp
xchg
mov
sarl
addr16
ret
add
sub
faddl
sub
lods
scas
dec
inc
and
mov
mov
outsb
xlat
test
sbb
sbb
and
mov
ljmp
cmp
dec
mov
and
loope
push
adc
cld
imul
and
mov
stc
stc
icebp
fisttpll
jnp
jp
idivl
lock
jb
imul
ja
xchg
push
inc
or
gs
aaa
mov
fld
popf
xchg
pop
dec
test
and
push
stos
pushl
sub
pusha
cmp
aas
mov
mov
add
mov
rol
into
push
or
pushf
loop
sub
cli
mov
mov
mov
push
xchg
push
jne
cwtl
iret
leave
movsl
bound
mov
or
icebp
mov
add
shl
in
adc
pop
mov
jmp
dec
ja
inc
and
mov
cltd
and
add
sub
jmp
das
push
fisttpll
xor
xchg
inc
shrl
push
mov
mov
sbb
nop
lock
pop
dec
scas
cmc
mov
popf
push
dec
sbb
xchg
jg
mov
or
cmp
out
adc
mov
in
pop
clc
and
sub
mov
pop
xor
nop
fs
push
sbb
or
stos
mov
loope
jmp
adcb
jmp
insl
sbb
cmp
repnz
movsb
stc
jno
mov
add
iret
or
and
jge
clc
inc
out
cmpsl
jbe
test
mov
fcoms
cmp
mov
adc
adc
insl
out
adc
and
ss
or
shll
mulb
or
mov
fcmovnu
mov
mov
in
rclb
ret
mov
in
shll
cmp
xchg
stos
add
inc
cmp
out
aam
jmp
or
shlb
subb
cmp
add
or
jge
mov
loope
notl
int3
icebp
and
sub
flds
xor
ds
jge
lret
push
xchg
push
xchg
jno
pop
addr16
adc
xchg
add
fidivl
lods
mov
pop
dec
jnp
lods
pop
out
lahf
sub
shl
or
pop
xchg
mov
fnstsw
jle
mov
add
popa
inc
imul
lock
xor
cmpsb
xchg
xor
dec
cmp
enter
negb
sbb
fstp
mov
cmpsb
movsb
push
sub
movsl
cli
insl
adc
push
push
and
or
enter
mov
lods
fstpl
fwait
fwait
push
mov
in
push
scas
jns
mov
or
xchg
sti
dec
inc
js
adc
imul
add
sub
xchg
jne
xchg
and
scas
dec
push
sub
mov
f2xm1
lock
lea
mov
xchg
aad
pop
cs
mov
xchg
adcb
push
xchg
mov
ss
dec
push
mov
push
mov
jmp
adc
mov
mov
inc
add
and
jge
cmp
stc
mulb
test
call
xlat
jae
sub
pop
pop
push
cmp
addr16
out
add
in
cmc
or
mov
mov
sbb
sub
mov
push
pop
adc
xor
mov
clc
sbb
fiadds
cmp
xor
lret
insl
mov
ss
leave
stc
mov
je
adc
outsb
xchg
repz
xor
xlat
mov
out
arpl
loope
mov
jbe
scas
nop
fnsave
ljmp
mov
and
and
filds
cltd
movsl
mov
xorb
jae
in
inc
outsb
ds
push
and
jbe
pop
addr16
iret
insb
addr16
cwtl
push
ret
pushf
pop
mov
rcrb
push
mov
and
test
or
gs
out
xor
lea
mov
aas
sub
cmp
sub
jbe
pop
mov
notb
add
cmpsb
and
push
adc
inc
mov
shrb
shrl
add
mov
or
xchg
int3
xchg
ja
mov
repz
inc
and
sti
mov
and
mov
xchg
ret
jle
mov
adc
call
dec
inc
lahf
dec
cmp
sahf
rcr
pop
das
or
push
and
call
adc
sub
or
cmp
pop
cmp
loopne
sub
enter
push
rcll
pusha
or
or
inc
pop
notb
ljmp
dec
mov
stc
decb
fdivrs
jecxz
into
sub
outsb
adc
lea
aaa
inc
adc
les
dec
imul
scas
iret
jmp
xor
jnp
out
mov
push
sbb
push
aam
push
iret
das
out
cltd
xor
fistl
cmp
xchg
ftst
or
sbb
loope
out
fistpl
mov
mov
pop
mov
fcmovu
and
or
mov
mov
or
in
outsb
mov
lds
cs
decl
addl
test
test
adc
dec
test
ljmp
and
iret
mov
lods
or
arpl
xor
scas
lret
cmpsl
jmp
fwait
cwtl
pop
inc
push
mov
sarl
es
std
push
je
addr16
or
mov
cmp
xchg
sbb
mov
stos
sub
lds
test
mov
loop
bound
mov
sbb
adc
dec
sbb
xor
int
jge
sbb
push
pop
pushf
push
enter
cmp
cmp
ret
jbe
mov
mov
in
sub
push
inc
pop
cmpsb
xchg
sahf
loopne
mov
int3
push
jg
xor
or
xor
sbb
dec
addr16
cmp
mov
out
enter
enter
sti
pushf
sbb
jbe
insb
repz
or
sbb
dec
push
or
adc
nop
lods
enter
mov
cs
ud0
sti
sub
mov
push
scas
mov
rolb
jb
in
push
into
cmp
shr
sub
mov
mov
inc
adc
inc
lock
and
pop
stc
call
mov
inc
mov
push
cmp
hlt
out
dec
daa
push
pop
loopne
xorl
psrlw
xchg
scas
dec
mov
ret
cmp
push
add
xor
popa
cmpsl
dec
les
aad
andl
push
pop
lahf
cld
and
and
in
popf
ds
xchg
push
fwait
push
pop
add
gs
sub
xchg
into
sbb
or
dec
and
dec
push
mov
cmp
inc
popl
int3
push
ret
in
jno
notb
push
adc
add
and
lods
dec
and
add
cmp
pop
inc
mov
dec
jmp
icebp
cmpsb
fdivs
cmp
sahf
and
and
cli
cmp
into
out
cmp
mov
xchg
push
or
mov
adc
cmc
or
mov
dec
enter
aas
popf
inc
outsb
out
lods
rcrl
mov
dec
cmc
insb
inc
pop
mov
je
push
in
lcall
cmp
or
mov
pop
jge
ss
rclb
jmp
sub
adc
pop
mov
mov
add
cmp
pushf
sbb
mov
sub
mov
mov
jb
cmp
pop
lock
mov
mov
jns
inc
clc
loopne
pop
inc
inc
push
enter
cwtl
bound
icebp
inc
xor
cmp
mov
ss
ljmp
movsb
sub
mov
sbb
clc
cltd
inc
sbb
push
inc
ret
mov
mov
sub
inc
xchg
mov
testb
lds
leave
mov
clc
jmp
jl
dec
and
lods
enter
add
cmovp
or
inc
jp
or
pop
lahf
or
pop
pop
jnp
shl
sbb
cmp
out
int
loope
scas
mov
clc
rorl
push
notl
xor
mov
dec
loope
scas
in
push
cmp
mov
jae
fnclex
jle
mov
xchg
lcall
or
push
stos
stos
sbb
pusha
pop
mov
mov
cmpl
pop
cltd
loope
lock
daa
dec
mov
dec
dec
xor
dec
ja
ret
fwait
cwtl
cmp
loop
sub
adc
fs
int3
mov
fidivrl
mov
and
cmp
je
push
adc
cltd
jbe
and
mov
jns
dec
mov
sub
mov
imul
inc
xor
jmp
inc
pop
inc
mov
inc
fimuls
addr16
adc
xor
lock
push
int3
jp
adc
fsubrl
rcrl
mov
mov
insb
cwtl
leave
mov
xchg
les
xchg
rcl
xchg
add
inc
mov
xchg
pop
popf
lcall
add
sub
cmc
pop
xor
mov
dec
mov
add
scas
sbb
in
clc
gs
jecxz
pop
scas
inc
add
push
cmp
pop
ljmp
ret
mov
icebp
sahf
loopne
mov
decl
adc
xor
inc
pop
adc
lahf
inc
adc
dec
or
and
jle
jl
out
bound
xor
mov
dec
arpl
cwtl
movsb
jne
addr16
push
push
inc
mov
enter
jp
int3
push
daa
lods
xchg
andl
adc
dec
mov
ret
push
dec
pop
sbb
daa
push
idivl
push
cltd
xchg
mov
in
dec
mov
cmpsb
mov
fdivrs
icebp
loopne
cmp
adc
dec
orl
out
sbbb
aas
xor
lahf
movsb
add
xchg
rep
sub
cmp
fs
sti
inc
push
cmp
jl
push
scas
dec
jne
ret
loop
stc
dec
fiadds
mov
pusha
popf
icebp
xchg
dec
mov
js
cmp
imul
stc
cmpsb
js
stc
mov
sub
xchg
rep
xchg
cmp
jecxz
xchg
movsb
int
test
inc
scas
adc
jb
outsb
jmp
pusha
pop
fcomip
mul
xor
enter
movl
xor
xor
inc
mov
test
mov
cmp
dec
ficompl
lock
cmpsb
shr
es
int
adc
push
into
xchg
orb
loop
popl
fmuls
sahf
hlt
ds
cltd
and
or
jne
pop
stos
loope
icebp
adc
adc
cmp
cmp
xor
idivb
mov
mov
mov
movsl
jge
push
jo
mov
out
iretw
fucom
adc
sbb
js
add
outsl
imul
sub
sub
fcompl
and
adc
mov
xchg
popf
xchg
call
cmpsl
or
int3
inc
and
lock
es
aas
loop
xor
mov
inc
scas
fmull
mov
js
fidivrs
mov
ficoms
mov
insb
add
ss
ds
stos
icebp
xchg
pushf
stc
sbb
sbb
cmp
dec
sbb
mov
push
inc
mov
stos
loopne
stos
insl
insl
scas
dec
cmp
in
xchg
js
xor
mov
ds
aaa
cmp
xchg
mov
mov
mov
cwtl
repz
cwtl
sti
cmp
dec
lahf
cmp
mov
jmp
and
jle
xchg
mov
jmp
push
lods
movsb
pop
mov
icebp
out
sub
xrelease
sbb
frstor
mov
daa
sub
icebp
xchg
xchg
les
ret
push
aad
hlt
rcl
pop
push
lds
icebp
dec
jmp
adc
mov
sub
push
xorb
mov
jb
xor
lcall
sbb
adc
mov
adc
out
add
cli
pop
jbe
xchg
jno
repnz
mov
insl
xchg
sti
loopne
ljmp
lds
push
sbb
cmc
in
inc
and
push
push
sub
adc
inc
add
hlt
jnp
enter
out
rclb
push
scas
dec
jno
cmp
bnd
das
lea
pop
adc
mov
bswap
nop
jo
hlt
lds
xchg
inc
fdivrl
shl
ret
xor
movsb
adc
mov
sbb
ret
scas
adc
lea
inc
xchg
movsb
loopne
inc
dec
dec
in
adc
repz
jg
repz
lcall
aaa
mov
fcmove
inc
and
fucompp
jae
test
lahf
mov
sub
push
stos
clc
int
mov
sti
mov
xlat
or
int3
jb
sub
lock
dec
pop
cmp
push
push
rclb
xlat
add
int
add
sti
imul
mov
pop
dec
mov
mov
dec
adc
jecxz
sub
rclb
push
mov
cld
inc
jb
lahf
push
pop
push
jmp
push
cmpsl
adc
into
add
outsl
das
lcall
and
dec
in
adc
mov
fsub
gs
lds
filds
cmpsb
sbb
dec
cmpb
cli
mov
mov
or
adc
xchg
lcall
or
mov
mov
and
cmp
lods
cmpsl
and
addb
cmp
dec
test
sahf
test
or
movsl
fwait
sarb
into
dec
jecxz
loopne
xor
jbe
stc
or
push
adc
mov
push
mov
cmp
nop
add
inc
lock
mov
mov
in
andb
stc
inc
std
inc
stc
inc
int3
icebp
loop
mov
sub
sub
or
push
out
aad
scas
inc
xchg
push
roll
fcmovnb
mov
xorb
or
adc
push
shrl
mov
jle
jns
jmp
push
mov
mov
adc
xchg
inc
pusha
mov
sub
loopne
ss
jl
out
dec
push
mov
pop
jl
add
lods
popa
adc
mov
jp
out
pop
pop
add
shld
inc
jle
idivb
mov
cmc
jge
xrelease
mov
xchg
mov
aad
std
xor
adc
rcrl
mov
std
add
push
mov
out
neg
jnp
dec
mov
data16
lds
mov
addr16
or
dec
inc
add
dec
aaa
lahf
mov
adc
push
bound
das
popf
ss
cltd
sbb
add
sbb
rorl
xchg
loopne
cmp
inc
mov
lcall
sub
cmp
sbbl
sub
in
ret
jmp
pop
xor
sub
les
sub
pop
mov
dec
andl
add
inc
and
pop
pop
jns
add
mov
aam
jne
shlb
jl
pushf
xor
and
push
lea
pop
ret
adc
imull
mov
int3
sbb
xor
push
fsubs
scas
ja
in
mov
inc
xchg
cmp
ljmp
cmp
add
cmp
jg
dec
leave
lock
sbb
fisttps
out
sarb
and
pop
xchg
test
add
imul
cmc
cltd
test
call
add
ss
push
es
imul
je
and
mov
jg
es
push
cltd
mov
dec
mov
iret
add
mov
ficoms
call
inc
in
sbb
xchg
iret
fidivl
or
xchg
mov
cmp
scas
orb
aad
cmp
push
js
and
je
mov
fildl
ret
popa
lret
addl
sub
clc
stos
xorl
pop
inc
cmp
mov
add
pop
leave
out
mov
std
push
adc
mov
fwait
rep
add
mov
xchg
in
test
push
ds
popf
aad
cmp
lea
push
xchg
outsb
inc
mov
sub
dec
mov
mov
mov
das
mov
mov
cmpb
je
xlat
push
stos
fbstp
inc
mov
pop
xchg
cmp
mov
cmp
insl
push
call
sub
sub
imulb
add
cmp
mov
pop
lock
jns
testb
sti
add
jne
cmp
pop
js
push
lea
dec
xor
sub
jne
pop
jns
sub
insl
data16
movsl
push
fdivr
xor
push
mov
sahf
xor
pop
jecxz
xchg
cltd
mov
out
outsb
add
xchg
addr16
jecxz
xor
loope
sbb
xor
jbe
push
mov
and
sbb
inc
xchg
mov
lcall
cmovo
pushl
mov
mov
or
mov
mov
cwtl
out
mov
test
xchg
leave
mov
cltd
cmpsb
push
and
std
iret
adc
cltd
mov
cmpsb
sub
outsl
fadds
mov
pop
inc
xchg
xchg
jbe
out
xlat
jle
jnp
mov
fstpl
inc
dec
xchg
outsb
outsl
xchg
incl
jecxz
shlb
and
test
pop
daa
and
jb
lds
or
xor
and
mov
xor
outsl
and
aam
mov
pop
loope
cmpsl
fidivs
sbb
lea
sar
or
fld1
xchg
adc
push
test
push
xor
push
dec
stc
add
fcoml
or
cld
stos
adc
xor
inc
sub
and
mov
pop
addr16
cld
inc
in
and
jb
sub
in
scas
ja
popa
cli
mov
xchg
movsl
pushf
cmp
sarb
cmp
push
xor
and
adc
sub
and
sub
and
and
sub
das
test
ss
mov
sub
data16
or
pcmpgtw
xor
pop
mov
addl
shl
xchg
push
inc
inc
cs
in
sub
inc
mov
scas
loopne
idiv
arpl
xor
stc
and
inc
vpunpckldq
lods
mov
jp
lcall
in
iret
mov
inc
cltd
push
js
negl
jbe
push
daa
loop
xchg
movsl
inc
movsb
jmp
and
mov
pushf
adc
rorl
inc
out
xchg
jb,pn
xor
stc
jg
les
push
cmp
sbb
pop
pop
push
mov
outsl
push
inc
dec
aas
pusha
jne
popf
inc
xchg
js
scas
mov
out
aam
xchg
mov
xchg
dec
rol
sarb
cs
in
push
movsl
scas
imul
cmp
xchg
xchg
sub
push
mov
jmp
movsb
dec
or
je
xchg
mov
icebp
fucomi
inc
mov
outsl
enter
mov
js
fprem1
sbb
mov
jecxz
loopne
push
insb
pop
sahf
aaa
aad
notb
cmp
in
or
lea
xor
dec
cmp
mov
mov
mov
pushf
jae
ss
test
stos
jp
outsl
jb
popf
inc
test
cmc
or
jp
jmp
pop
jle,pt
stos
add
mov
nop
addl
mov
popa
mov
dec
and
std
push
add
shrb
test
adc
adc
sub
and
dec
test
fwait
mov
adc
test
in
std
jo
push
lods
lds
loope
mov
movsl
pop
scas
ss
or
push
test
scas
push
sahf
cmpsl
test
mov
scas
outsb
out
mov
test
rcrb
add
test
je
xlat
cmp
cmp
aas
enter
or
dec
mov
ja
mov
pop
fsubrs
lret
js
mov
inc
push
sbb
fiaddl
mov
popa
lret
bound
mov
xor
dec
inc
outsl
xor
shll
pop
in
fimull
in
jns
mov
dec
mov
lods
lock
mov
ds
mov
daa
in
movsl
sub
sub
pushf
xor
dec
push
mov
dec
add
cmpsl
das
and
insb
dec
sar
lods
jnp
pop
mov
sahf
xlat
jecxz
es
test
imul
mov
lret
mov
ss
and
mov
popa
aas
cmp
enter
sbb
out
shrl
lds
sbb
fcmovu
sahf
popf
push
sbb
nop
mov
movsb
mov
jns
mov
push
int3
inc
cs
idivb
xor
mov
mov
jl
sahf
sub
xor
push
lds
or
xchg
addr16
dec
popf
xor
loop
lret
outsb
in
pop
dec
nop
push
in
dec
pop
push
cwtl
testb
lret
stos
inc
sub
out
aaa
add
in
dec
mov
mov
sahf
icebp
push
dec
push
jmp
mulps
push
leave
jo
mov
test
sbb
jmp
cmp
sarb
push
xlat
lods
inc
aad
rcrb
cltd
cltd
xchg
pop
movsb
nop
adc
mov
outsl
add
es
add
and
push
imul
movsl
sub
fnstenv
nop
inc
jle,pn
dec
inc
loope
jmp
cmp
je
xor
sub
gs
cmp
mov
push
mov
sbb
inc
jl
cmp
sub
mov
les
ds
test
sub
mov
popa
adc
dec
mov
test
mov
dec
push
jmp
xor
lretw
dec
insb
mov
dec
push
jb
gs
pushf
sti
pop
dec
shll
mov
fstps
mov
scas
js
fstpl
out
dec
aaa
stos
push
jp
dec
jb
and
pop
inc
mov
jne
jecxz
mov
jle
loopne
test
icebp
fidivrs
fwait
and
out
push
rolb
mov
sub
ficomps
push
jno
mov
adc
bound
orl
pop
in
fldt
int3
sub
jbe
loopne
xchg
mov
das
divb
imul
cmc
and
iret
mov
nop
pushf
mov
sub
mov
pop
push
and
sub
pop
in
cmp
fisubs
call
mov
jae
cmp
mov
xor
sbb
dec
repnz
lea
dec
imul
out
sub
popf
stc
and
and
fidivl
fstl
out
pop
fcmove
add
inc
call
add
dec
lcall
bound
cmp
shl
mov
pop
nop
cmp
sbb
push
gs
enter
pop
lahf
test
iret
aam
fabs
adc
in
pop
mov
sbb
push
adc
lods
stos
jb
inc
or
mov
dec
and
dec
jae
adc
inc
or
pop
stos
or
jle
stos
sub
testl
lods
icebp
or
xchg
sbb
imul
lret
mov
js
dec
frstor
test
add
mov
mov
inc
sti
cmp
enter
aaa
movd
jmp
lods
in
mov
jbe
loopne
pushw
movsl
pop
jl
xor
xchg
ret
packuswb
dec
mov
push
icebp
push
mov
sar
sub
fs
inc
inc
cmpsb
cmc
aam
mov
std
scas
and
aam
jge
pop
fidivl
mov
lods
or
push
in
jnp
push
xchg
stos
push
ret
or
popf
adc
cmp
mov
jo
ret
xchg
cmp
dec
jl
movsl
ffreep
dec
inc
fidivs
xor
and
rcl
inc
mov
pop
clc
cli
imul
cmc
divb
movsb
aas
xor
adc
adc
imulb
shl
mov
mov
add
pop
fcmovnb
dec
mov
aam
dec
jb
popa
push
sbb
mov
xlat
push
pop
scas
mov
lods
mov
jl
sub
insb
les
pop
sub
push
lods
rcll
leave
mov
inc
sahf
lods
dec
gs
flds
repnz
cmp
rcrl
fstpt
out
int
pop
inc
dec
mov
and
repz
pushf
rclb
jno
inc
ficompl
ret
daa
or
sub
or
xlat
push
mov
mov
mov
out
push
add
pop
jbe
pusha
and
fistpll
add
test
insl
mov
push
iret
dec
iret
cmpsl
pop
xchg
dec
les
xchg
mov
sub
js
inc
lods
dec
out
mov
mov
pop
test
nop
cltd
sub
mov
stos
fsubs
lea
add
imul
outsb
fwait
out
cmp
push
and
js
adc
push
cs
xchg
int3
inc
dec
xlat
inc
and
fwait
test
xlat
fs
dec
pop
dec
mov
jae
lahf
mov
js
sbb
call
adc
hlt
out
mov
movsb
in
jp
das
fisubl
push
cli
rolb
jl,pn
out
loope
nop
cwtl
jecxz
loope
pop
mov
int
push
inc
sbb
clc
cmpsl
js
and
and
loope
mov
mov
xor
xchg
mov
pushl
into
adc
xor
movsb
fidivs
sets
cmpsb
jmp
pushf
sbb
and
and
xchg
lea
pushl
sbb
pop
jl
int3
leave
aam
movsb
pushf
cmp
outsl
mov
or
fildl
xor
in
test
mov
sarb
pop
jecxz
leave
mov
or
and
mov
bnd
jge
pusha
and
sub
pushf
sbb
aam
subb
fadd
fstp
popf
push
push
stos
in
mov
imul
out
mov
in
test
pop
jmp
dec
sbb
repz
imul
int3
enter
cmp
aam
leave
push
pop
dec
mov
sbb
xlat
shrl
sub
ljmp
pop
or
ljmp
and
aaa
aam
inc
pushl
inc
fwait
lods
lahf
dec
popf
jo
scas
jo
sahf
in
inc
das
out
push
leave
idivb
shll
inc
cmc
loopne
fs
push
into
push
scas
cwtl
pop
ret
movsb
or
ret
les
adc
adc
movsb
mov
clc
add
ljmp
les
and
aad
adc
gs
push
pop
sbb
sahf
sbb
sbb
sub
loopne
jp
test
in
cmp
inc
out
push
call
mov
add
xchg
cmp
jmp
inc
cmp
call
iret
mov
dec
pop
icebp
or
xor
je
mov
jnp
xchg
mov
sbb
mov
lret
xor
cld
dec
enter
xor
ret
mov
mov
xor
jbe
xchg
push
jmp
lock
mov
fxch
dec
jne
jge
in
movsl
sbb
les
cmp
mov
cwtl
loope
add
push
adcl
cli
xchg
enter
adc
cld
jmp
and
adc
mov
push
dec
cmc
jb
fiadds
rcrl
loope
pop
xchg
push
lods
cmp
inc
test
push
add
push
xor
mov
les
popf
jbe
mov
fwait
lds
push
out
popf
cmp
add
jb,pn
adc
lock
sub
inc
outsb
popf
adc
fbld
ja
jle
push
rorb
xchg
and
scas
fwait
inc
aaa
repnz
jno
push
xor
push
je
sub
iret
inc
mov
lret
out
enter
loope
jo
mov
lods
jmp
dec
xchg
push
in
stos
mov
popa
adc
es
pushf
xchg
adc
sbb
mov
out
pop
iret
call
leave
lods
mov
out
push
pop
jp
sbb
mov
frstor
and
pop
pop
fisttpl
mov
xchg
shrl
and
add
rcrl
aad
je
mov
xchg
cmp
fcom
test
lea
icebp
stos
iret
aaa
stos
jno
icebp
xor
test
add
jno
mov
mov
xchg
dec
icebp
mov
mov
mov
jge
add
push
lret
mov
call
stos
clc
push
dec
outsb
je
shr
xor
insl
or
sbb
rolb
lahf
insb
xchg
sbb
push
jecxz
pop
xchg
incb
sbb
mov
sbb
iret
icebp
hlt
jmp
scas
mov
push
or
jnp
shrl
js
int3
lods
fidivl
mov
loope
pop
dec
mov
cwtl
lds
fmuls
or
sub
cmp
test
xchg
inc
lods
cmp
lods
popf
xor
les
test
aam
ss
sub
add
push
pop
ret
add
out
out
mov
sub
int
mov
xchg
push
mov
pop
data16
dec
out
add
daa
xchg
out
push
lock
jne
aas
xor
adc
ds
xor
xor
in
cmpsb
mov
repnz
add
xchg
cmp
vpmaxub
and
addr16
xchg
movsl
sti
lahf
stos
xcrypt-ecb
cmpsl
mov
mov
sahf
jae
add
lea
pop
jb
sub
fwait
mov
xor
and
mov
insb
and
pop
dec
mov
pop
lods
mov
sbb
xchg
cmpsb
sbb
jne
mov
jo
sarl
cmp
jne
js
out
inc
divl
jmp
test
test
xor
push
rep
adc
addr16
xchg
push
xor
push
ds
data16
ds
pushf
xchg
cs
fildll
cmp
ss
xchg
mov
in
jl
jb
mov
push
xchg
jmp
add
or
cli
iret
or
pop
scas
iret
adc
adc
xor
jbe
dec
outsb
jbe
mov
out
cmp
out
insl
pop
mov
pushl
mov
adc
out
cs
xchg
loope
stos
pop
cmp
lcall
and
xor
scas
dec
decb
sbb
xor
and
cmp
sub
cwtl
popl
xor
ljmp
and
add
jo
aam
pop
adc
popa
dec
js
or
popa
scas
xchg
out
cmp
data16
xchg
push
ror
test
xchg
lds
push
out
mov
jecxz
rcrl
adc
in
mov
push
or
testb
add
mov
test
aaa
test
clc
jbe
fisubs
lea
mov
in
mov
movsb
sub
call
decb
cmp
loope
jae
ds
repz
out
or
cmp
push
lahf
dec
enter
pop
adc
lcall
stc
sbb
ret
cmp
insl
test
jge
xor
xchg
sbb
and
push
sbb
and
fldenv
in
incl
test
xor
cmc
jmp
lea
push
int3
stos
cltd
cmp
dec
aaa
bound
daa
cs
sbb
sarl
and
lea
add
add
and
mov
jp
mov
jp
loop
inc
loope
shll
loop
inc
cmp
dec
jl
popf
adc
push
sbb
ficoml
mov
xlat
sti
mov
sbb
or
xor
popa
inc
mov
lds
sub
sub
lcall
les
sbb
daa
ljmp
pusha
mov
sbb
fbstp
loope
icebp
xor
push
pop
fisttpl
mov
fistps
sti
divb
adc
and
aas
lea
addr16
cmp
mov
test
in
xchg
push
lods
mov
test
pop
inc
pop
dec
jns
int3
sbb
aad
in
push
jne
and
add
adc
sbb
in
xor
call
into
dec
test
sub
xchg
adc
fadds
inc
aam
test
mov
inc
out
cmpsl
inc
lahf
and
cmp
pop
add
xchg
sub
insl
add
xchg
mov
inc
loope
ds
ss
testb
jo
sti
push
jae
xor
add
adcb
jmp
push
ret
movsb
mov
test
dec
imul
jle
mov
lret
stos
adc
aaa
inc
out
repnz
dec
jg
ljmp
sbb
decl
adc
sbb
scas
dec
xchg
add
pop
xor
xor
pop
add
mov
rcll
xchg
bound
fistps
lods
icebp
jp
mov
add
iret
xor
mov
js
daa
push
xchg
adc
xor
out
xchg
mov
sahf
negb
enter
js
pop
outsl
inc
push
mov
adc
add
bound
add
rclb
mov
xlat
aad
in
xchg
pop
int
mov
pusha
mov
cmp
push
sti
je
add
push
mov
fsubrs
test
add
std
cmp
lods
dec
jb
enter
stos
ja
dec
sub
xchg
add
xchg
mov
sub
mov
int3
and
sbb
call
pop
stc
lahf
push
movd
shll
ja
rcll
popa
insb
lcall
ds
add
shlb
movsl
xor
sbb
mov
xor
pop
mov
cld
test
xchg
fwait
lret
jp
stos
pusha
pushl
test
rcrb
stos
stos
cmp
pop
mov
test
jmp
xor
or
lret
xchg
stos
inc
dec
fwait
pushf
dec
dec
repnz
ss
jg
incl
adc
cmp
sti
xor
imul
or
rcl
push
aam
inc
push
movsl
cmp
or
addr16
pushf
sub
pop
xlat
sbb
gs
lock
fldenv
mov
lahf
addl
add
in
xor
xor
jns
add
lahf
adc
fistps
or
fs
ret
add
dec
mov
jo
push
xchg
cmpsl
cmp
loope
mov
mov
es
adc
sub
sti
sub
pop
jmp
dec
dec
pop
adc
jae
xor
lcall
sti
jle
sub
fld
cld
mov
cmp
sub
adc
push
push
loop
xchg
out
popa
xor
sub
pop
pusha
in
add
cmp
test
and
leave
bound
test
inc
sbbb
hlt
lfs
cltd
or
dec
lods
fimull
les
add
repnz
sbb
xor
outsb
shr
cmc
jne
mov
das
mov
aaa
fisubs
fstl
mov
or
sub
arpl
jnp
and
and
sbb
popf
shrl
mov
fimull
jle
or
pusha
mov
jbe
mov
cmp
cwtl
xlat
jl
add
xor
sti
imul
les
mov
pop
rol
jmp
add
push
leave
movsl
sbb
mov
in
xor
or
push
xchg
jnp
lahf
in
ret
mov
jns
dec
inc
sbb
das
sarl
xlat
and
cmp
ror
mov
pop
fistps
jecxz
lock
mov
mov
lahf
pop
adc
xor
jo
outsb
cbtw
mov
jge
in
push
ljmp
icebp
add
sub
and
sub
adc
bound
mov
and
cli
in
fs
inc
or
pushf
inc
inc
cld
add
xchg
sbbl
enter
notb
les
mov
notb
out
jg
sub
push
and
xor
mov
push
pop
mov
imul
xchg
pusha
xor
inc
aam
movsb
pop
aaa
mov
push
js
cwtl
add
xchg
inc
js
inc
sub
push
xchg
data16
sbb
out
vpmacssdqh
aas
in
adc
jge
lods
mov
popa
test
daa
in
mov
jecxz
std
test
fdivp
divb
mov
adc
ljmp
lcall
sarl
je
out
cld
mov
das
enter
enter
dec
cld
pusha
les
cmp
loopne
sub
jns
lds
cltd
inc
andl
mov
popa
jae
stc
ret
jo
sbb
sub
or
nop
pop
fmuls
or
jp
scas
lret
imul
inc
mov
push
test
add
iret
shl
sub
mov
inc
enter
iret
ret
mov
lods
jnp
into
sub
loope
es
js
cmp
mov
push
pop
sub
mov
and
test
jo
mov
cmp
jg
mov
inc
adc
mov
rcl
and
push
cld
jg
jnp
test
aam
mov
mov
mov
fwait
mov
xor
xor
inc
or
add
inc
loopne
lahf
mov
and
mov
dec
or
aaa
je
sbb
cmp
out
jle
sbb
mov
outsb
adc
pop
cld
lods
sub
cmp
inc
fs
add
fwait
mov
jecxz
inc
lcall
cld
mov
loope
jns
push
pop
and
jno
sbb
adc
push
cmp
mov
popa
pushl
test
pop
js
lea
inc
ds
insl
lea
mov
add
mov
inc
push
jp
cmpsb
xchg
pop
in
xor
push
pop
fdivrl
dec
or
cmc
loop
sbb
dec
in
push
or
mov
fwait
jae
test
xor
les
in
in
jmp
push
cmp
cmp
repnz
dec
dec
mov
inc
in
mov
movsl
cltd
rorl
fwait
ret
mov
sub
lret
jb
xor
out
push
add
imul
rcrb
mov
stos
adc
scas
jge
call
dec
pop
xchg
outsl
test
mov
lods
jle
push
push
xchg
leave
orb
xchg
sbbb
les
mov
mov
sub
rep
and
out
cmpsb
jge
outsl
movl
push
data16
enter
pop
xchg
push
xchg
imull
cld
jnp
lcall
inc
les
xchg
jp
aad
xchg
pop
xlat
jbe
push
jge
or
dec
push
popa
push
pop
hlt
or
paddsb
movsb
xchg
loop
dec
pop
push
or
jbe
inc
mov
test
jl
pusha
pop
sub
loope
sbb
ret
jle
dec
movsb
fisttpll
jp
daa
popa
xor
inc
aam
push
mov
mov
mov
popl
stos
jno
inc
fmulp
adc
xchg
push
sub
ja
xchg
js
jecxz
pop
mov
sahf
xor
mov
inc
xor
call
fbstp
repnz
rolb
xor
add
and
or
shll
js
mov
xchg
sbb
mov
popa
loopne
ds
jbe
push
fs
lret
and
cld
jo
add
cli
jae
sub
mov
aas
fisubs
pop
test
adc
loope
sbb
or
imulb
popa
sbb
movsl
ljmp
jecxz
sbb
xchg
data16
cmp
aam
arpl
stos
imul
mov
mov
mov
adc
mov
mov
push
push
adc
scas
jbe
pop
sub
sahf
pushf
pop
add
fimull
mov
xchg
pop
mov
decl
mov
adc
sbb
arpl
outsl
mov
aad
adc
pushf
dec
mov
fsubl
sbb
mov
test
addr16
pushf
jecxz
dec
push
js
xchg
arpl
mov
jmp
and
lcall
insb
nop
mov
dec
dec
fsubrl
cmp
out
pop
mov
sub
jle
mov
inc
xchg
fsub
nop
arpl
push
push
insb
out
cmc
jne
sbb
imul
out
shll
jle
inc
mov
lock
addr16
push
cmp
sub
out
push
or
movlps
ss
addb
sbb
negl
loopne
loope
add
lcall
sbb
or
mov
addb
mov
pop
jecxz
test
sbb
aad
sub
sub
in
mov
pop
cltd
or
lea
adc
jae
inc
test
popa
ss
sub
push
ret
push
jcxz
adc
test
scas
test
stc
adc
push
xchg
push
in
fistpll
add
test
lods
jge
stos
cmp
adc
shrb
xor
lret
mov
cmpl
mov
sahf
lds
js
leave
lods
shl
rorb
dec
and
icebp
repz
mov
stc
jmp
mov
cmpsb
adcl
movsb
imul
popf
int
and
dec
inc
sahf
test
sahf
fisttpl
aas
mov
sbb
ret
and
xchg
nop
xchg
into
cmp
mov
sub
dec
loop
fldcw
arpl
std
mov
ljmp
jge
loopne
push
fcmovb
push
pop
push
ss
je
test
pop
mov
cmp
out
mov
xchg
neg
mov
cmpsl
icebp
scas
test
and
es
mov
dec
jl
cli
xor
xchg
mov
mov
or
sub
nop
out
add
add
sub
inc
sbb
fdivs
int3
movsl
jns
push
pop
lods
mov
shrl
cmpl
xor
ret
adc
mov
sub
or
or
or
adc
int
and
push
mov
or
aam
inc
push
jnp
bound
popf
js
out
mov
sarb
stos
jl
pop
pop
imul
xor
pop
lahf
mov
pop
loop
sub
cmpb
repz
into
push
push
andl
push
adc
xchg
ret
rorl
and
std
addr16
lret
sbb
inc
lcall
and
scas
xor
add
mov
jp
sub
dec
popa
in
clc
push
int
loope
cltd
lahf
test
or
push
lret
mov
int3
mov
std
jns
je
into
gs
push
push
xchg
add
lods
cltd
hlt
out
shrl
pop
movsb
xor
imul
adc
and
arpl
loop
jl
xchg
out
negl
test
dec
mov
pop
movsl
push
addr16
ljmp
or
inc
cld
test
fists
in
nop
push
pop
push
int3
jo
out
sti
ljmp
sub
jbe
jbe
clc
mov
les
int3
mov
mov
cmpsb
repz
inc
pop
addr16
mov
test
add
outsl
cwtl
sbb
inc
xchg
push
subl
lret
or
push
sbb
jle
push
into
push
cmp
loope
fadds
xchg
mul
sbb
push
jg
mov
int3
call
cmp
add
int
in
mov
push
pop
arpl
inc
aaa
jecxz
orl
push
pop
cmc
mov
leave
or
jecxz
shll
or
cmpsl
inc
cld
xchg
fsts
fs
mov
stos
jmp
sbb
fidivs
inc
inc
paddsb
xchg
cltd
dec
push
mov
or
int3
daa
jecxz
push
jbe
roll
pop
inc
adc
popa
xchg
adc
pop
ss
rolb
pop
outsl
mov
jo
xchg
leave
loope
aaa
lahf
into
cmp
clc
mov
es
fdivl
js
mov
popf
imul
int
xor
mov
sub
mov
push
clc
mov
lds
das
testb
mov
in
mov
rclb
cld
js
lds
push
mov
sub
jmp
mov
hlt
push
sbb
repz
push
in
andb
push
cmpsb
ds
cltd
mov
aas
mov
ljmp
lahf
call
aas
jge
lret
dec
pop
mov
push
test
jmp
dec
mov
pop
push
sbb
push
iret
jae
jp
cwtl
cwtl
std
add
in
and
cmp
jl
aaa
mov
cmp
loop
lret
adc
and
pop
mov
lds
pop
sbb
cmpsl
mov
sbb
pop
loopne
pop
icebp
cmp
jecxz
pop
sbb
mov
xor
clc
mov
xor
aad
scas
sub
jmp
push
test
cli
xlat
jnp
pop
lahf
pop
mov
imul
add
outsl
movsb
mov
test
adcl
pop
mov
int3
lcall
jbe
mov
cmp
movsb
out
jbe
iret
dec
outsb
mov
pop
js
cld
or
jae
loopne
add
or
mov
ret
or
lods
or
sub
jg
mov
mov
jl
mov
xchg
lcall
mov
cmp
clc
lcall
hlt
pop
in
sbb
inc
ret
xchg
shrb
test
pop
int3
push
add
mov
orl
lea
in
or
push
repz
and
and
or
or
push
push
jge
xchg
jecxz
mov
dec
pop
jp
sub
cmpsb
cmp
xor
sbb
popf
cmp
je
test
mov
add
sbbl
add
add
sbb
aaa
movsb
pop
cmp
fistpll
repz
jb
in
jmp
das
jno
jmp
das
pop
mov
and
loop
and
mov
push
rcl
adc
inc
aam
xor
add
fisubrl
stos
pop
data16
jge
or
imul
push
rcrb
insl
xor
pop
les
mov
push
or
push
xchg
out
into
daa
pop
popl
adc
dec
adc
push
xchg
and
pop
dec
out
test
and
ljmp
sbb
add
sub
sbb
repz
in
es
xchg
stc
ja
xchg
xchg
mov
mov
mov
pop
cltd
bound
pop
adc
push
push
inc
mov
int3
and
dec
enter
pusha
sub
jb
inc
push
pop
imul
aaa
dec
push
in
xchg
sbb
andb
popf
stos
dec
int3
ja
daa
xchg
jo
loopne
inc
enter
mov
pop
gs
xlat
mov
xchg
jbe
fistl
enter
xchg
xor
filds
das
mov
pop
pop
xor
or
pop
adc
push
jae
idivl
push
ljmp
pop
shrl
popa
jl
ds
mov
rcll
mov
lcall
xor
lret
dec
ljmp
inc
fs
mov
in
loopne
adcb
pop
cltd
in
lret
add
aad
dec
jle
test
nop
lds
mov
jg
dec
jns
out
lea
fisubl
sub
xchg
jge
jb
jnp
push
sbb
test
and
enter
out
xor
push
ss
or
adc
ss
aad
lret
sbb
mov
pop
push
push
pop
adc
ja
adc
xchg
sub
pop
add
cmp
inc
popa
addr16
pop
xchg
dec
pop
xchg
mov
sahf
or
negb
jns
inc
sbb
out
mov
and
jecxz
adc
jmp
lock
scas
sti
push
int
sbb
rorb
mov
mov
push
out
cs
int
dec
lcall
jns
out
pop
pushf
idivl
push
push
std
mov
fstl
and
cli
outsl
icebp
push
push
sti
xor
cmpsl
insb
imul
push
je
loopne
jl
adc
inc
popa
cltd
dec
fdivr
mov
and
fidivs
aaa
fists
mov
pop
hlt
mov
adcb
jbe
sub
out
insl
popa
lahf
mov
xor
dec
fstp
mov
mov
mov
xchg
jp
data16
jae
ja
fprem1
dec
iret
mov
sbb
decb
sbb
mov
rorl
mov
or
addr16
jle
dec
inc
stos
out
loopne
movsl
fsts
jns
pop
out
pusha
gs
push
sub
xchg
outsb
or
xchg
pop
and
mov
mov
dec
or
sarb
xor
push
ljmp
dec
add
lret
sbb
rcrl
cmpsl
aam
test
and
in
mov
fldenv
in
adc
or
loop
sahf
pop
iret
push
push
stos
jl
in
inc
jge
daa
mov
aaa
jle
xor
push
in
push
aaa
ret
mov
inc
xchg
test
xor
insb
movsl
and
pop
test
repz
lret
dec
lcall
bound
or
les
fimull
rorb
mov
mov
ljmp
stc
movb
shrl
or
sbb
mov
scas
mov
xchg
shll
insb
jge
add
ror
sbb
push
xchg
ljmp
sbb
fwait
add
dec
aad
out
mov
cmpsb
icebp
push
add
xchg
mov
mov
xchg
jecxz
ljmp
sbb
outsb
loopne
adc
ret
mov
mov
daa
dec
mov
cmp
add
sbb
les
lahf
mov
ja
and
mov
outsb
mov
std
fstl
std
pop
adcb
pop
sub
es
aad
sub
ja
mov
inc
repnz
adc
xchg
out
iret
pop
xchg
mov
loopne
jno
stc
pop
and
iret
jecxz
lcall
pop
repnz
inc
dec
fwait
xlat
sbb
and
ret
ret
jae
mov
stos
cmpsl
mov
cli
jns
inc
insb
inc
in
jecxz
xchg
cltd
shr
mov
xchg
repnz
sub
xor
idivb
ret
xchg
dec
jbe
out
lret
dec
mov
jmp
fcomps
mov
hlt
popa
cmp
dec
clc
fidivrl
dec
lods
sub
adc
mov
push
sub
pop
ljmp
xchg
imul
xchg
rcrl
inc
add
dec
imul
pusha
sub
push
imull
and
or
mov
sbb
mov
outsl
out
mov
sbb
out
adc
dec
xchg
pushf
sub
push
aam
adc
sub
cmp
push
in
jbe
addr16
insl
mov
icebp
mov
push
mov
sbb
daa
mov
int3
mov
popf
cmp
lcall
xor
out
mov
std
mov
add
or
dec
mov
ss
nop
add
push
pop
dec
addr16
bound
jge
test
test
add
jp
pop
jns
cmp
sbb
jb
inc
sub
bound
jbe
inc
lret
mov
lret
sbb
je
lds
mov
push
repz
test
push
cmp
int3
rol
sbb
pusha
andb
daa
in
and
lock
into
xor
push
sub
adc
mov
xchg
data16
push
sub
loopne
aaa
lcall
pop
dec
in
cmp
out
mov
mov
add
je
ret
pop
or
push
mov
mull
iret
xchg
xlat
sub
mov
sahf
mov
sti
daa
out
adc
xorb
xor
mov
inc
or
add
es
outsl
xor
mov
bound
inc
loopne
push
or
xchg
or
aad
icebp
sub
daa
lahf
jl
mov
and
mov
in
xor
cmc
fcomps
nop
in
or
sub
adc
ss
or
sub
jmp
iret
inc
sub
mov
das
mov
out
inc
push
jno
loope
xor
pop
dec
fidivrl
push
inc
lea
dec
inc
xor
push
test
push
dec
pop
in
mov
repz
repz
cli
inc
out
lret
iret
add
scas
gs
mov
xchg
hlt
aad
pop
mov
loope
cld
dec
lret
lret
movsl
push
je
mov
andb
stc
jno
test
xchg
jge
mov
pop
shlb
sub
pop
aaa
cwtl
mov
icebp
xchg
imul
sub
adc
sbb
bound
xor
inc
pop
and
pusha
jns
add
adc
jbe
cli
stos
jmp
push
or
jbe
mov
cmp
out
xor
or
jbe
in
xor
adc
dec
movq
jns
loop
ret
lock
sbb
sbb
mov
aam
cwtl
adc
outsl
cmp
mov
push
xchg
je
adc
and
scas
xchg
sub
movsb
sub
imul
rcrl
jecxz
jne
jo
mov
insl
data16
movsb
pop
or
or
rcrl
or
test
fiadds
call
xchg
mov
jbe
or
mov
mov
pop
inc
push
pop
flds
sub
add
shl
shl
mov
dec
pop
xchg
jb
in
add
lea
pop
mov
mov
mov
dec
imull
dec
or
daa
test
lret
testl
sahf
and
push
mov
gs
push
cmp
sub
lret
cmpw
aas
xorps
mov
jns
lea
dec
lret
jl
leave
add
adc
and
adc
xor
inc
dec
inc
dec
jno
add
in
test
ret
std
clc
sbb
pcmpeqd
inc
int
jno
jge
cmpsb
cli
jmp
mov
jmp
inc
xor
sub
leave
sahf
pmulhuw
xor
push
inc
inc
xlat
cmp
jmp
je
popa
dec
lods
gs
imul
rcrl
cltd
sbb
lret
in
push
xchg
lds
popa
mov
inc
cmp
das
pop
cmpsb
xor
decb
sbb
push
lcall
mov
sub
sub
ss
add
aas
sbb
jmp
int3
sub
cmp
ljmp
mov
mov
and
orb
fcmovu
test
add
into
outsb
push
push
and
push
shlb
mov
ljmp
sub
xchg
push
mov
jle
xorl
mov
sbb
loop
push
jne
jle
shlb
jno
lods
rcrl
mov
adc
push
fisubrs
push
xchg
int
insl
and
mov
lock
stos
sub
repz
divl
fisubrs
sub
push
into
shll
pop
sub
aad
and
push
fadd
dec
xchg
jnp
lods
jl
shl
jle,pn
pop
sbb
mov
jo
scas
add
outsl
and
push
inc
clc
push
shr
insl
lea
arpl
int
cmp
mov
shrb
call
mov
push
mov
ja
notb
cmp
addr16
jg
jns
jge
fwait
enter
fisubs
mov
test
test
cmp
xchg
cmc
notb
jns
mov
inc
push
cmp
dec
rcrb
ds
push
hlt
rclb
dec
jmp
stos
js
outsb
sti
hlt
rcl
lds
pop
and
mov
addb
ds
mov
jl
push
cltd
jno
cli
push
lods
enter
xor
in
aad
inc
shll
insl
sbbb
mov
lret
xchg
ret
ret
xchg
mov
sub
mov
jnp
xchg
push
das
nop
push
jmp
int3
call
bound
arpl
push
push
xor
fnstenv
repnz
test
int
mulb
mov
shlb
inc
in
ret
push
mov
fs
adc
mov
push
mov
cmpsl
pop
xor
call
jge
xor
insl
popf
xchg
mov
dec
movsb
jg
sub
enter
mov
adc
push
cmp
test
mov
gs
pop
pop
xor
into
and
je
fiadds
dec
fstps
mov
clc
push
negb
mulb
inc
popa
xlat
or
adc
fstl
push
scas
mov
lret
xor
aas
aad
push
loopne
insb
sub
sbb
mov
mov
repz
fidivrs
lds
imul
xchg
cltd
pop
mov
mov
lcall
cmp
cld
xchg
ljmp
and
jo
enter
dec
and
jno
pop
pop
jno
sub
jp
push
and
jecxz
jecxz
cmp
mov
mov
mov
pop
adc
pop
enter
jge
jnp
stos
cwtl
add
add
gs
jmp
stos
sbb
add
xorb
inc
pop
mov
mov
cmpsl
jl
and
sub
cmp
outsb
pop
cmp
daa
adc
fisttpl
push
test
adc
or
jmp
xor
in
push
lock
dec
loopne
roll
push
or
pop
cmp
into
rol
adc
and
cmc
mov
clc
cmp
pop
or
subl
cli
mov
cmp
aam
fwait
mov
lods
andb
cmc
repz
sbb
mov
xchg
mov
mov
sbb
dec
cmp
in
test
aam
pop
int3
and
sahf
mov
ja
pop
pop
arpl
cs
push
adc
loop
sbb
push
cltd
mov
xor
ror
lcall
mov
jne
inc
xorb
push
and
daa
mov
xor
inc
mov
lock
mov
lea
arpl
cmp
push
insl
add
inc
sub
cs
jg
mov
xchg
test
ret
and
mov
fcompl
repnz
xchg
push
stos
shl
lcall
jecxz
push
pop
pop
mov
push
xchg
or
inc
dec
roll
je
mov
rolb
pop
or
mov
jb
inc
out
cwtl
cmp
adc
sbbl
insl
ljmp
dec
fbstp
jb
add
dec
leave
mov
pop
fistl
adc
sbb
lea
push
jecxz
pop
lcall
outsl
jge
loopne
aaa
clc
daa
jecxz
xchg
icebp
mov
out
lret
mov
ljmp
adc
repz
test
fs
ret
movsl
jne
mov
xchg
aad
fiadds
adc
int3
pop
push
addl
mov
loope
push
or
lret
sub
arpl
mov
and
imull
enter
mov
aaa
movsl
cmp
and
aaa
andb
stos
ds
push
mov
inc
sbb
push
adc
popf
and
subl
inc
lods
int3
dec
gs
flds
xor
pop
mov
lret
pop
popa
mov
and
or
and
mov
ffreep
stos
gs
movsb
andl
xor
adc
cmp
test
sub
xchg
shl
fwait
mov
push
stos
pushl
loop
std
mov
or
or
fcoml
mov
inc
movsl
adc
dec
cmp
xor
sub
cmp
movsb
inc
jp
jle
xor
repz
cmpsb
cmpsb
mov
dec
xchg
sub
popf
or
loop
mov
xor
in
xorb
lods
jmp
dec
push
push
mov
dec
inc
sbb
cwtl
and
mov
mov
stos
int3
jmp
and
xlat
loopne
pop
mov
cmp
iret
sub
iret
mov
mov
inc
jmp
jp
jns
ljmp
cvtps2pd
mov
add
divl
sarb
sbb
out
nop
lods
add
sbb
push
rcrb
sbb
pop
scas
gs
out
mov
jnp
push
lock
mov
imull
xlat
pop
out
or
cmpl
jecxz
pushw
pslld
xchg
mov
enter
adc
cmp
loop
pop
hlt
sti
int
negb
xchg
aaa
outsl
icebp
das
mov
sti
sub
popa
jo
fwait
jge
xor
jle
test
out
sbb
inc
and
daa
dec
inc
mov
xchg
xor
or
incl
push
mov
loope
xchg
enter
cmp
addb
aas
pushf
lock
imulb
push
ret
adc
mov
lret
int3
mov
inc
faddl
loope
in
push
or
xlat
fcompl
movsl
es
ret
mov
xor
pop
cmp
scas
sub
add
inc
mov
push
push
mov
mov
or
mov
stos
pop
je
cmpl
aad
jns
mov
cmp
fwait
xor
xchg
hlt
sti
out
push
js
add
mov
mov
and
pop
mov
inc
enter
jo
mov
xchg
sbb
aaa
fcoms
or
enter
cmpsb
dec
int
call
gs
pop
lea
xor
pop
and
arpl
pop
cltd
roll
clc
dec
rorl
xchg
cltd
rclb
rcrb
in
imul
sbb
sub
push
adc
push
sbb
add
js
pop
aaa
xchg
or
and
inc
jno
jmp
inc
sub
pop
jb
bound
pushf
sti
sub
imull
outsb
js
andl
cmpsl
icebp
mov
sbb
mov
int3
sbb
into
int
and
mov
sub
mov
jl
and
or
lods
jae
jge
jge
push
popf
sub
push
add
loope
mov
ret
aam
mov
mov
cmpsl
adc
adc
and
and
in
add
sub
repz
imul
cmp
mov
lahf
out
adc
into
hlt
out
mov
xor
jmp
mov
and
add
test
jg,pn
dec
ja
jp
mov
fs
mov
pop
jmp
sub
cld
stos
scas
cmc
mov
int3
add
dec
and
das
dec
mov
cld
repz
and
scas
mov
sarb
rcr
push
push
and
cmc
jp
and
orl
pop
and
cmpsb
movsb
fidivs
fwait
xor
pop
mov
es
push
sarb
mov
lds
lret
mov
push
adc
and
pusha
mov
in
or
fwait
jbe
mov
test
pushf
adc
icebp
pushf
dec
add
adc
imul
sahf
out
daa
pusha
outsl
loop
data16
call
div
ss
test
imul
aad
loope
xorl
mov
mov
adc
jecxz
adc
jmp
xlat
test
push
jne
sbb
andl
cs
je
popa
push
mov
push
push
or
pop
inc
addr16
pop
xchg
mov
add
call
aas
jmp
movsb
push
out
and
int3
mov
and
loope
jmp
mov
lret
aas
sbb
pop
pushf
jno
daa
xor
dec
loopne
les
jecxz
pop
add
jecxz
and
cld
popf
or
push
in
mov
pop
mov
ror
mov
popa
and
in
sub
or
jmp
jb
sar
cmc
and
jno
or
adc
lds
xchg
jmp
xchg
dec
xor
mov
test
pop
pop
out
push
sub
fwait
xor
std
pop
fldenv
pop
or
ja
pop
sbb
rol
cmpsb
adc
xor
shll
push
sub
nop
inc
sti
add
fiaddl
pop
pop
lods
icebp
cmp
movb
mov
cmp
imul
or
inc
stos
int3
clc
sub
cmp
scas
or
into
xchg
out
sbb
outsl
adc
mov
dec
sub
jb
loop
std
dec
jae
test
mov
movsl
sub
add
jl
push
fsubs
fwait
cli
scas
pop
call
sub
cld
in
ret
jae
out
add
or
lods
and
mov
pop
shlb
enter
lret
ljmp
aaa
sbb
fstps
cmp
int
lret
adc
lahf
push
popf
aaa
inc
push
je
mov
cmp
push
movsb
jnp
into
mov
neg
mov
add
cmp
or
out
jmp
ret
mov
nop
rcll
test
movb
jno
ficoms
push
cmp
shll
cmp
cltd
mov
loope
push
popf
gs
push
testl
xchg
pop
cwtl
into
fisttps
rcrl
mov
pop
and
xor
or
divl
mov
sub
cld
sahf
clc
fwait
popa
cs
scas
scas
arpl
std
out
adc
repz
in
xorb
daa
loop
jmp
or
pop
xor
icebp
mov
pop
sbb
dec
sti
pcmpgtw
inc
sbb
movsb
cmc
lds
sbb
aad
mov
es
aas
cld
or
int3
imul
in
int3
js
orl
cmp
sbb
lock
jg
mov
scas
stos
dec
mov
inc
je
or
outsb
jb
shl
call
lret
dec
fildll
movsl
xchg
movsb
mov
arpl
aas
iret
xor
daa
mov
mov
divl
mov
xchg
fwait
in
stc
push
fisubs
pop
sbb
or
push
es
fdivrl
sti
add
leave
dec
sub
inc
outsl
jmp
push
inc
test
add
pushf
subb
push
insb
add
lea
mov
xor
gs
rclb
fnsave
int3
popa
add
in
lock
lea
cmp
jb
std
adc
xchg
xchg
pop
out
bound
out
xor
xchg
dec
shll
lods
loope
lock
repnz
popf
lret
mov
mov
push
insb
mov
popa
dec
pop
cmp
int
mov
adc
loopnew
inc
mov
in
add
adcb
into
mov
or
sub
repz
lahf
sti
popa
cs
mov
shll
inc
mov
rolb
lahf
std
lods
loop
call
sub
lret
push
test
jle
push
bound
adc
jae
and
in
jge
sbb
aad
and
push
push
adc
into
xor
push
xchg
nop
pop
stos
lahf
fbld
sbb
jg
gs
stos
add
outsl
int3
in
pop
push
or
or
lcall
idiv
jge
sub
scas
xchg
into
dec
fwait
sbb
adc
xor
pop
in
pop
or
mov
int
push
popf
xchg
add
loopne
mov
inc
cmp
sbb
fildl
dec
lods
sbb
sbb
xchg
flds
xchg
les
push
push
and
mov
mov
adc
int
mov
iret
sbb
push
sub
pop
iret
push
repnz
sarb
xchg
movb
inc
cmpsb
cmpsb
ret
jmp
roll
ds
sarb
flds
mov
ss
sbb
add
add
and
mov
cld
add
andb
fmuls
mov
pop
xchg
icebp
out
mov
and
add
out
mov
stos
xchg
jae
cltd
filds
call
imul
repz
lret
xchg
xchg
cmc
imul
lock
sub
mov
scas
movsb
sub
xor
lret
nop
ud0
inc
movsb
outsl
add
negl
fisubs
xchg
insb
movsl
jae
or
in
or
and
pop
lock
ret
xchg
cli
xchg
out
and
not
jp
enter
sar
sbb
rolb
push
roll
sbb
icebp
es
adc
dec
das
ror
mov
fs
mov
scas
scas
aaa
xor
mov
push
aas
push
mov
aam
push
les
icebp
mov
jle
sahf
lahf
jae
aaa
outsl
std
repnz
addr16
lods
dec
mov
jnp
xchg
bnd
cmp
ret
xlat
xchg
cli
mul
repnz
repnz
data16
xchg
scas
fidivrl
pushl
outsb
or
movsl
pop
inc
jne
mov
mov
lods
push
push
add
or
and
push
in
outsb
mov
icebp
fsubr
cmp
mov
inc
cmp
push
and
test
loopne
imul
push
test
add
imul
mov
sbb
int
xchg
dec
push
mov
in
xchg
mov
mov
jmp
sbb
fs
or
sbb
enter
cmp
sbb
xor
add
ret
inc
inc
mov
mov
push
mov
add
jge
push
in
out
jo
test
jg
add
rcrl
mov
push
inc
mov
imul
ret
or
jno
xchg
or
pushf
fs
push
sub
mov
addw
sbb
scas
lds
jb
das
lds
repnz
lods
adc
or
inc
stos
pop
fisttpll
jne
adc
or
or
aaa
cmpl
mov
aaa
out
jae
ficoms
jmp
imul
shr
dec
sbb
sub
cli
pop
push
xchg
in
pop
inc
pop
mov
mov
int
push
xchg
mov
mov
cs
loope
sub
jle
fcomps
push
ret
jae
mov
mov
cmpsb
fs
in
out
movups
imul
andl
repnz
jns
imul
xlat
data16
ror
pop
xor
sub
xor
sbb
call
repz
arpl
mov
aad
xchg
pop
mov
js
pop
jge
lods
adc
xor
push
loopne
insb
cltd
lds
js,pn
sub
clc
push
and
cmp
adcl
mov
xor
mov
pop
xchg
pop
mov
mov
ja
adc
dec
insl
mov
mov
data16
add
fistps
dec
out
das
pop
mov
pop
arpl
xchg
shrb
push
test
decl
xchg
orb
xor
mov
cmpsb
in
cmc
inc
sahf
mov
das
rcrl
push
das
lret
sub
cmp
arpl
sarb
lret
and
pop
out
mov
push
repnz
cld
pusha
inc
int
out
call
mov
aaa
lods
je
loop
in
shlb
sub
push
mov
scas
fs
inc
scas
mov
icebp
out
xor
xchg
lods
rclb
and
ja
out
lock
cmpsl
or
cmp
dec
or
mov
sub
jmp
dec
sbb
fcomps
dec
lods
mov
shl
cmpsb
or
mov
in
pusha
ss
icebp
add
mov
adc
jecxz
icebp
cmp
stc
mov
jp
lds
push
stos
mov
jnp
sub
xor
add
or
pop
cltd
jns
sub
call
inc
and
pop
inc
idiv
jl
fdivrs
mov
lret
outsb
imul
roll
sbbl
jns
call
xor
mov
or
or
cmp
jecxz
stos
mov
jno
sbb
xlat
adcl
xchg
add
jb
stos
sub
jbe
shl
jecxz
mov
inc
scas
jmp
jmp
jle
test
addr16
and
xor
cmp
in
xchg
andb
push
movsl
lahf
and
ja
jecxz
mov
test
out
fistl
cwtl
shrl
sbb
xchg
dec
int3
push
fistps
movsb
adc
sbb
inc
fldenv
ljmp
lahf
and
cwtl
cmpsl
fwait
mov
add
dec
repz
repz
test
icebp
jae
data16
jnp
xorl
sbb
je
dec
and
aas
mov
jg
xor
dec
dec
and
ss
or
pop
push
ds
xor
rcl
push
ret
dec
sub
and
jg
outsb
adc
cltd
data16
pop
pop
ss
xlat
cmc
iret
bound
sub
in
dec
nop
mov
jmp
shrl
test
mov
mov
lret
inc
sbb
sbb
popf
loopne
and
aaa
pushf
xchg
pop
push
mov
mov
mov
out
cli
push
xchg
pop
mov
add
shl
jl
lods
js
enter
push
xchg
mov
sbb
dec
xchg
xor
aad
cmp
push
jbe
push
inc
mov
fdivrl
fidivs
mov
jecxz
cmc
dec
pop
outsb
in
fbld
pop
sub
leave
stc
gs
sbb
outsl
sti
sahf
and
cmp
clc
fdivp
in
inc
mulb
mov
scas
push
test
jbe
dec
pushf
repz
or
shlb
pop
and
cld
in
pop
pushf
mov
cmp
outsl
movsb
pushf
gs
out
out
pop
inc
ret
gs
sbb
shl
std
shlb
sbb
xor
lock
fnstcw
xlat
outsl
into
lret
pushf
xbegin
mov
jnp
dec
in
iret
pop
push
lcall
sbb
dec
lret
pop
jle
jb
cwtl
add
addb
out
xchg
mov
mov
mov
out
add
in
cwtl
add
cmp
dec
daa
call
add
push
sarl
test
fistl
subl
sub
or
mov
sbb
into
into
lret
jge
cli
pop
test
mov
nop
sub
mov
loopne
add
push
lcall
cmp
cltd
test
mov
dec
xchg
out
stos
lods
mov
jmp
ljmp
xchg
aas
in
jno
jne
rclb
cs
mov
dec
test
or
mov
mov
lods
pop
aaa
mov
pop
add
adc
in
dec
sahf
xorl
xlat
jne
lock
cmpsl
daa
ja
fildl
notl
pop
loope
cmp
les
out
dec
sub
fiadds
mov
xchg
pop
fsts
xchg
adc
lods
inc
scas
xchg
jle
mov
lea
lods
sahf
jg
jns
xor
scas
std
fbld
nop
xchg
xchg
mov
cwtl
push
adc
mov
cmpsb
jle
and
cmp
dec
mov
inc
cmc
sti
mov
icebp
push
nop
je
aaa
mov
sbbl
ds
cmp
mov
decb
add
dec
int3
out
cmp
into
fisubs
rclb
shlb
sub
mov
adc
xlat
imul
fildll
fcmovbe
mov
or
test
test
pop
push
js
push
push
imul
sub
mov
lea
pusha
pusha
pusha
cmp
jno
dec
sub
insl
lock
xchg
pop
fiaddl
inc
pop
aaa
imul
and
xchg
push
es
mov
ljmp
enter
arpl
add
outsl
loope
jae
push
cltd
push
pusha
fwait
add
ret
in
xlat
adc
pop
insb
sub
mov
pop
mov
stos
pop
jbe
inc
add
dec
cmpsb
sti
addr16
cmpsb
fsubrs
push
mov
loopne
pop
xchg
cwtl
or
jne
lods
ljmp
mov
push
pop
das
push
push
aam
testl
arpl
cmp
movsb
into
cld
mov
ret
xor
push
ja
ror
out
push
test
subb
push
ficompl
pop
mov
ficoml
mov
jmp
call
daa
outsl
clc
sbb
imul
insb
ret
sbb
orl
in
push
push
fdivrp
mov
sub
fcomi
dec
jg
jbe
cmp
and
repz
repnz
out
push
insl
iret
or
xchg
pop
xlat
push
cltd
cmp
fldenv
insb
inc
push
jb
loope
or
push
dec
push
popf
test
fldl
dec
adc
pop
mov
ss
pop
push
jo
mov
or
neg
sarl
lods
ljmp
cmp
orl
enter
adcl
mov
out
daa
fnstcw
lret
push
sub
push
adc
adc
les
xchg
out
aas
or
cmp
jmp
mov
pop
inc
pop
xor
test
clc
mov
daa
push
jne
popf
pop
or
xlat
lds
xchg
jb
subl
or
add
iret
add
xchg
inc
lods
push
adc
outsb
dec
add
or
hlt
out
add
inc
fisttpl
roll
mov
or
mov
pop
sbb
in
lret
sub
dec
sub
outsb
dec
mov
xchg
adc
jo
loope
das
mov
xlat
sarb
out
aam
jmp
ret
push
lcall
mov
rcrb
add
aas
addr16
divl
out
ljmp
mulb
xor
fld
sarl
popl
fbld
out
cmc
pop
aam
ret
dec
adc
jno
mov
mov
add
xchg
push
cmp
jp
lods
inc
hlt
mov
mov
gs
pop
adc
or
imul
mov
xor
nop
mov
shlb
xchg
inc
inc
rcr
aad
push
fildl
cmp
inc
cmpsl
cmc
cwtl
xor
sbb
repz
dec
or
xorb
or
xor
add
je
mov
fildl
pop
enter
bound
loop
xchg
pop
and
sahf
mov
inc
add
pop
lods
push
pop
nop
jnp
inc
and
jecxz
in
ret
dec
inc
bound
xchg
push
xlat
pusha
roll
je
test
cli
ror
addr16
jmp
lret
sub
aaa
cld
mov
fstpl
pop
fwait
out
outsb
jl
add
cmp
mov
push
ret
adc
dec
xchg
pop
out
fcmovb
cmpsb
inc
inc
mov
lahf
out
jg
filds
sbb
mov
xchg
repnz
jns
xor
xchg
in
fcoms
pop
ja
cmp
dec
lds
xchg
xor
xor
sbb
inc
xor
int
push
pop
and
jecxz
test
sbb
mov
incb
adc
and
ja
nop
jge
and
les
pop
mov
cmp
sub
outsb
int
push
xlat
xchg
dec
add
mov
inc
pop
inc
ljmp
add
test
inc
repz
xor
pop
ret
fidivl
mov
daa
pop
es
scas
inc
call
xchg
xchg
adc
lods
popa
jne
hlt
add
ds
test
outsl
aaa
jge
push
scas
nop
inc
mov
cld
cpuid
push
out
xchg
jge
stos
mov
and
push
xchg
push
test
lods
add
mov
xchg
sbb
xchg
and
sbb
sbb
mov
dec
loope
mov
hlt
in
leave
cmp
cmpsl
inc
cli
sti
dec
or
repz
gs
add
push
out
in
dec
inc
mov
xor
and
mov
add
lock
ds
mov
xor
insl
inc
mov
imul
push
lods
mov
imulb
fistpll
ss
mov
lock
addr16
pop
leave
mov
cmp
dec
or
hlt
xchg
mov
aam
shll
pop
push
outsl
and
fsubr
add
push
insb
icebp
jb
mov
lret
mov
int
mov
add
daa
hlt
fiaddl
pop
xchg
sub
lcall
sarb
and
sbb
ret
and
fsubrp
pop
mov
sub
imul
sub
cltd
out
adc
and
sub
sub
fwait
pop
xchg
test
sub
jns
sbb
jecxz
push
out
aas
in
ljmp
aam
jp
jo
movsb
stc
jecxz
add
pcmpeqw
mov
lahf
mov
leave
out
push
jl
jnp
jnp
fcomps
or
and
call
movsb
sub
sahf
jmp
shl
inc
aad
cmp
add
pop
test
aam
lret
or
dec
mov
push
push
lods
and
cmp
mov
imul
mov
dec
fldl
push
and
push
imul
xor
sbb
mov
jnp
sti
xor
jbe
mov
insb
mov
dec
mul
dec
bound
xchg
out
lea
inc
repnz
sar
mov
inc
lret
dec
repz
push
dec
mov
cmpsb
lods
mov
add
inc
aad
out
adc
dec
pop
stos
sbb
jbe
aad
enter
mov
rcr
sbb
dec
dec
loop
scas
mov
movsb
push
mov
or
rcr
stc
push
jae
mov
jmp
jbe
inc
pop
dec
pop
pushl
sbb
and
lea
add
adcb
lock
lds
out
jb
in
add
jae
or
xlat
leave
mov
cmp
mov
ss
xor
xchg
das
and
jnp
mov
xchg
les
bound
push
sbb
and
mov
ss
xchg
cmp
adc
lret
out
nop
scas
pop
pushf
adc
in
or
in
into
lock
xor
push
inc
jmp
mov
decb
outsl
scas
dec
add
cmp
pop
xchg
fs
sti
outsb
jno
push
add
in
in
mov
xchg
mov
jle
cmp
sub
aas
xchg
mov
and
adc
inc
or
shll
push
cmpsl
inc
inc
mov
push
mov
cmp
aad
cld
adc
lea
ret
sbb
xadd
outsl
mov
sbb
repz
push
jge
adc
mov
mov
xchg
int3
mov
pop
inc
popa
aas
ljmp
push
add
aam
int
adc
jnp
leave
ljmp
fistpll
and
mov
in
or
push
xchg
dec
inc
inc
jge
popa
pop
ss
loopne
sahf
fistps
adc
fbstp
imul
jl
add
add
add
sub
mov
stc
pavgw
sti
pusha
push
cmp
or
cmp
jb
fisttpll
push
lods
movsl
dec
js
les
add
in
push
mov
mov
fcmovb
movsl
mov
jge
sahf
fwait
lret
xor
dec
add
shr
adc
out
mov
cltd
jmp
inc
mov
in
or
lret
push
push
push
stos
popf
lcall
adc
mov
and
into
ja
add
mov
cmpsb
lods
add
cmpsl
out
pop
xor
mov
push
push
sbb
pop
sbb
push
icebp
pop
sbb
pop
inc
cmp
fstps
lret
xor
mov
notl
inc
dec
sbb
mov
scas
repnz
jo
daa
mov
or
or
lods
ficompl
lcall
in
aaa
push
clc
aaa
es
scas
scas
lret
mov
popf
imul
jl
push
je
and
xchg
out
or
cmp
xlat
mov
cli
push
mov
lret
adc
testl
test
sbb
lahf
ret
push
mov
adc
icebp
push
das
sub
xchg
cmpsl
out
lods
xchg
aad
mov
jp
pop
fs
lcall
push
pop
fidivrs
xchg
mov
pop
mov
icebp
and
sahf
push
sahf
dec
jg
cwtl
cmpsb
adc
push
in
mov
in
loope
xchg
fistpll
jp
jno
ret
sahf
ret
repz
into
out
sarl
scas
add
out
inc
testl
sbb
pushf
jg
rolb
aas
jb
fsubrs
cmpsl
bound
cmp
jmp
movsl
popa
dec
fbld
leave
das
imull
out
or
out
nop
jne
cmp
add
repz
xor
inc
call
scas
xchg
or
call
aam
jmp
rolb
jg
sbb
jg
btc
sbb
xchg
pop
cmp
mov
or
push
fpatan
cmp
adc
sbb
nopl
std
xor
sbb
xchg
push
sub
and
lods
mov
call
push
dec
push
xchg
mov
stos
pop
aam
popf
adc
scas
xchg
push
sub
fmull
cld
add
fists
lret
mov
adc
sbb
xchg
jne
fscale
cmc
mov
mov
cmp
leave
aam
mov
test
and
nop
insb
add
movsb
adc
xchg
mull
add
loope
and
sub
fs
mov
aam
sub
insl
insb
jmp
cmp
movsl
in
iret
cmpsl
and
imul
dec
jmp
pushf
repz
jl
in
jg
inc
imul
cli
sbb
add
push
test
xchg
insl
cltd
mov
mov
xor
or
pop
xchg
repnz
jmp
pop
cmp
or
mov
test
inc
out
jg
adcl
push
out
aad
arpl
clc
push
mov
cld
sarb
or
fbstp
sub
out
mov
out
adc
stc
or
xor
arpl
mov
std
push
xchg
push
loop
lret
inc
push
mov
dec
pop
push
arpl
push
xor
and
repz
adc
push
jl
jb
mov
mov
das
jmp
sub
cmpsb
mulb
mov
inc
loop
mov
lods
loopne
enter
out
xchg
loope
rolb
out
flds
mov
daa
pop
xchg
data16
or
mov
adc
pushf
je
xchg
jge
cmp
xchg
mov
add
xlat
popf
in
shll
leave
shr
xor
push
dec
hlt
in
sbb
cltd
xor
in
and
xchg
adcl
add
add
call
push
mov
movsl
fcompl
movsl
or
inc
inc
dec
inc
cmp
mov
xor
push
inc
ljmp
dec
aad
jmp
lock
mov
sbb
xor
or
sub
or
daa
xchg
and
and
rcrb
xor
push
psubq
cmp
cmp
aaa
lods
movsb
xor
mov
cwtl
inc
push
inc
sub
sub
push
sbb
cmpsl
inc
adc
data16
cmp
jbe
test
mov
mov
xchg
cmp
repnz
jecxz
ret
or
jne
push
aam
push
mov
stos
xor
mov
cmp
subb
jg
cmp
int
push
stos
in
pusha
test
clc
imul
es
cmpsl
cmp
adc
xchg
push
jo
jne
inc
iret
cmc
xor
lret
inc
mov
jnp
dec
jmp
mov
push
push
push
cwtl
cmpsb
sahf
in
jp
push
ja
negb
mov
pushf
rcll
scas
jmp
loop
xor
inc
popa
inc
outsb
fsubrl
pop
pusha
notb
ret
xchg
cli
stc
enter
lock
jl
into
shlb
ja
dec
sub
jecxz
scas
jnp
js
iret
sub
sbb
add
and
push
fdivs
xor
dec
push
je
lea
dec
sbb
inc
jo
ret
ss
pop
dec
push
push
stc
imul
mov
ss
and
bound
sbb
pop
cli
pop
or
pushf
ret
mov
into
negl
pop
aam
push
xchg
and
stos
pushw
mov
idivl
push
add
add
mov
or
stc
sahf
icebp
int
or
sub
or
jne
outsb
ds
and
mov
std
pop
or
in
xor
out
xor
std
xchg
test
dec
sti
seto
inc
dec
mov
jecxz
sbb
xor
pop
cwtl
aaa
xor
lds
mov
test
mov
je
insl
dec
lds
scas
xor
inc
nop
loop
lods
mov
fdivs
xchg
out
stos
xchg
cmp
lods
adc
icebp
jne
imul
inc
scas
sub
jbe
gs
mov
pop
adc
test
pop
sti
insl
jne
repz
xchg
inc
jge
je
sub
clc
ret
add
test
xchg
dec
ja
lret
mov
xchg
add
xor
jne
mov
pushf
jmp
sbb
pop
pop
xor
adc
idivl
push
scas
aaa
xor
xor
push
add
and
jno
lret
sbb
arpl
aam
adc
mov
out
and
sub
cmp
add
xor
test
loopne
or
mov
pop
jle
jle
fcoml
or
xchg
inc
inc
mov
sbb
test
dec
adc
push
outsl
add
xchg
inc
in
ja
jl
and
out
xchg
jno
shr
sub
jmp
cmp
ss
lahf
sbb
sub
std
scas
cld
cltd
jg
cmp
mov
xor
lock
fcoms
jmp
lods
movsb
mov
cli
test
xor
pop
sub
push
mov
dec
insb
loope
jecxz
inc
jbe
cmp
sub
outsl
gs
icebp
fnsave
inc
adc
test
pop
xchg
sbb
jae
jne
cwtl
jmp
adc
xchg
insb
aad
dec
in
mov
xchg
add
leave
and
adc
movd
nop
cmpsb
push
lds
stos
test
pop
jl
rolb
and
inc
dec
aam
push
add
mov
sbb
cmp
nop
adc
scas
dec
push
leave
inc
add
lahf
and
xadd
mov
push
sub
cwtl
push
mov
popa
xor
test
add
aaa
insb
mov
test
call
inc
int
jecxz
mov
lea
jl
shll
std
int3
dec
add
ror
push
insl
xchg
mov
test
mov
aaa
in
sub
cmp
out
dec
icebp
sub
pop
sahf
aad
xacquire
stc
adc
aam
arpl
mov
stos
xchg
lahf
test
imul
stc
insl
xor
pop
or
jns
push
roll
cmp
add
add
jno
or
bound
adc
or
add
jne
pusha
xor
leave
scas
and
add
enter
dec
and
sarb
outsb
cli
mov
dec
and
push
xchg
es
subb
sbb
add
dec
pop
popa
or
lea
loopne
movsl
adc
test
sub
push
daa
daa
in
add
jge
inc
shlb
sub
repnz
mov
push
cmp
mov
lea
pop
mov
adc
cmp
movsb
mov
pop
sarb
pusha
cmp
mov
push
push
sti
leave
mov
je
subps
or
pop
loopne
loope
nop
xchg
jne
adc
lea
pop
xor
mov
outsl
adc
mov
std
pop
xchg
out
cwtl
ja
mov
pop
push
push
fcmovbe
insl
or
stc
mov
cmp
push
add
movsb
sbb
ja
adc
inc
loope
lds
jns
aas
int3
lahf
repz
stc
icebp
sbbl
xchg
mov
jns
rcr
inc
mov
push
ffreep
or
xor
cmp
pushf
push
fcoml
mov
cmp
ss
jle
xor
mov
or
lods
mov
test
add
movsb
addr16
test
call
jge
mov
mov
add
ja
into
mov
mov
dec
nop
push
push
and
jmp
clc
pop
sub
push
insl
out
mov
pop
mov
sbb
sahf
jbe
dec
pop
inc
xlat
inc
push
add
add
lret
in
cmp
lods
sbb
test
aad
jne
lock
jge
repz
mov
mov
aaa
dec
xchg
or
fs
jge
iret
and
pop
call
sbb
mov
push
enter
aad
pushf
push
leave
mov
lods
pop
outsl
push
inc
xchg
adc
cmpsb
gs
test
push
rep
and
cmp
shl
mov
fs
mov
data16
jmp
push
push
jmp
aaa
dec
push
adcb
out
lods
mov
std
mov
fsts
cmp
pop
stos
idiv
jg
cmp
cmp
aaa
dec
in
pusha
mov
notb
orb
cmpsl
inc
fxch
inc
mov
adc
aad
and
jb
push
gs
and
pop
jb
push
xchg
xchg
popf
orl
pop
ret
pop
testl
mov
aaa
iret
test
pusha
lss
or
pop
xchg
insb
sub
xor
sub
push
adc
aas
aaa
lahf
dec
push
add
xchg
xor
sahf
stos
push
jmp
mov
pop
rcrb
jl
mov
out
adc
jbe
jmp
jbe
push
mov
xor
sbb
ds
mov
push
popw
gs
divl
shl
jmp
mov
es
rcrl
sbb
pop
mov
sbb
out
mov
loopne
mov
sbb
pop
cmovge
cmp
and
loopne
jo
popf
mov
inc
mov
sbb
mov
mov
std
addr16
mov
inc
jecxz
xchg
mov
and
xor
aam
and
int3
push
inc
cmc
fdivl
imul
xor
leave
jg
push
xchg
mov
int3
in
jne
or
addr16
int
jae
add
xor
push
lock
cmpb
cmp
shll
dec
fwait
xor
dec
and
mov
movsb
mov
pop
push
arpl
loopne
lock
jns
sub
js
ret
jle
or
fmull
mov
loop
cwtl
sti
cmp
int3
loop
loope
or
mov
jecxz
test
enter
out
lcall
xchg
std
iret
std
adc
mov
jmp
or
sbb
dec
lcall
sub
aaa
lock
icebp
jo
jns
mov
mov
into
jnp
xor
sti
jb
mov
jp
mov
add
dec
cmpsb
mov
mov
jno
push
xor
inc
popa
orb
push
mov
add
fwait
inc
sbb
and
xchg
sub
outsl
call
push
cltd
mov
mov
pop
sbb
push
and
mov
xor
or
in
andb
xor
push
mov
add
xchg
pusha
nop
cmp
je
mov
pop
out
pop
lock
cltd
jno
pop
dec
and
pop
or
shr
sub
push
roll
daa
ror
stos
mov
in
aas
or
mov
fdivrl
out
mov
data16
scas
aaa
or
cmpsl
xchg
or
ret
sti
pushf
push
push
fwait
jmp
jge
je
inc
scas
add
jg
repz
rcrb
bound
jmp
roll
stc
fsubrl
sbb
mov
sarl
jp
xor
or
and
add
cltd
mov
sub
pop
loop
xchg
mov
pop
mov
mov
and
push
in
and
ret
minps
mov
icebp
add
pop
jl
push
addb
push
mov
popf
popf
push
outsb
ljmp
repnz
sub
sbb
and
cmp
cmc
or
xor
push
sbb
fdivs
movsb
mov
inc
xchg
xchg
jl
addr16
mul
jle
pop
xchg
fwait
sbb
adc
inc
hlt
cmpsb
loopne
mov
push
add
lds
cmp
push
dec
scas
cld
jne
cmpsl
jo
les
js
pop
jnp
mov
xchg
repz
sbb
mov
stos
xchg
jo
fwait
out
movsl
movsl
pop
bound
pop
pop
clc
jle
iret
mov
dec
add
and
loopne
xchg
das
dec
pop
jg
in
mov
xchg
or
jl
cmc
les
and
xchg
push
ds
ret
adc
call
fistpll
in
clc
testb
fldlg2
pop
fidivl
into
xchg
push
cmp
nop
in
lcall
jnp,pt
and
push
dec
test
icebp
cmpsb
aad
push
outsl
popf
ret
lods
xchg
mov
lcall
dec
aaa
cmp
jae
dec
ficoml
pop
inc
ss
mov
dec
dec
jo
push
loop
mov
xchg
cmp
lds
and
into
jmp
pop
pop
lret
sub
sub
sub
bound
scas
cmp
rcrl
dec
inc
xchg
addr16
cmpsl
arpl
adc
or
cmpsl
pusha
dec
xor
stos
and
test
adc
pushf
fs
gs
pop
aas
outsb
push
mov
lcall
sahf
repz
icebp
add
push
sub
and
arpl
leave
mov
xor
outsl
repz
sub
repz
fcoml
mov
mov
cwtl
outsl
js
ljmp
xchg
dec
cmp
ret
repz
aas
fadds
or
cmp
loopne
adc
jnp
add
nop
xor
mov
sahf
push
rorl
addl
sbb
lcall
fisubrl
sbb
mov
dec
xchg
sbb
xchg
inc
adc
mov
imul
daa
dec
xlat
lods
mov
ja
or
and
pop
xchg
cmp
cmp
push
mov
test
cltd
jl
int
scas
ret
xor
imul
cmp
dec
cmp
stos
fucomi
xchg
shrl
aad
cld
mov
and
or
movsb
push
mov
or
mull
push
sub
test
mov
lcall
das
scas
xor
inc
or
sbb
test
xchg
cmp
fbstp
fcomps
std
push
adc
pusha
mov
xchg
sub
push
xchg
adc
sub
sbb
and
aas
mov
mov
mov
int
inc
adc
movsl
lock
mov
adc
mov
mov
iret
xchg
cmp
sub
jns
cmpsb
outsb
cli
daa
cmpsb
in
adc
out
push
inc
xchg
loop
xor
data16
loop
icebp
outsb
dec
pop
repnz
data16
rcr
sahf
lahf
xchg
xchg
out
pop
pop
adc
mov
out
push
fistpll
xchg
mov
jnp
loop
test
mov
rcl
rorb
lods
mov
xor
cwtl
cli
insl
xchg
sub
jno
cmp
test
push
aaa
lret
iret
sub
cs
aad
fptan
rorl
cmp
fdivrs
movsb
mov
push
iret
add
mov
js
jmp
sahf
and
and
xlat
out
jecxz
lock
dec
into
adc
dec
ficomps
pop
gs
bound
fists
mov
cmpsl
mov
scas
shlb
out
xchg
insb
xlat
mov
leave
hlt
xchg
push
sbb
or
enter
jbe
insl
repz
sbb
orb
inc
iret
jne
ficompl
pop
fsts
pop
add
xlat
ljmp
sub
inc
pop
andb
pop
pop
les
jg
lea
adc
mov
addr16
pop
fsubrl
test
test
jb
xchg
rorl
ja
dec
jmp
lret
notb
sti
inc
call
sub
inc
test
adc
or
xchg
and
push
outsl
or
lock
xor
insl
fbstp
movsb
pop
or
ret
xchg
outsb
fs
inc
shll
pusha
add
mov
fcmovb
sbb
jne
dec
test
sub
sti
inc
xlat
and
push
sbb
adc
inc
scas
mov
adcl
jmp
mov
push
pop
mov
pop
dec
jecxz
fs
outsb
arpl
pop
out
mov
ret
cmp
mov
jne
xor
int3
xchg
and
mov
jl
mov
mov
pop
xchg
aaa
jecxz
aaa
je
fimull
orl
out
mov
mov
aam
sub
sub
mov
sub
push
pop
inc
or
xchg
lods
popa
in
adc
mov
pop
adc
mov
fildll
adc
clc
pop
push
xchg
or
cmp
or
inc
mov
fistpl
sub
xchg
dec
arpl
test
jecxz
pop
fnstenv
fsts
ss
cmc
cmc
mov
iret
aam
sub
xchg
repnz
fstpl
out
dec
repz
je
add
in
mov
int3
lods
mov
pop
push
pusha
les
cmp
inc
call
test
in
cmp
je
int3
jecxz
in
inc
pop
nop
jb
ret
mov
xchg
sar
inc
and
sbb
push
mov
dec
jae
aas
cmp
std
test
push
outsb
lahf
cmp
loop
mov
add
adc
mov
out
xor
lock
in
das
adc
add
add
cmp
mov
and
addr16
mov
mov
pop
lcall
fists
mov
lcall
push
out
rolb
add
dec
xor
mov
xor
push
add
out
xor
cltd
dec
hlt
or
jecxz
jp
sub
addr16
mov
ret
jbe
cmp
daa
xor
insl
and
and
push
cmc
add
enter
sub
int
stos
xor
das
das
pop
fildll
mov
inc
mov
and
pop
mov
cltd
xchg
idiv
mov
ljmp
cmc
scas
sbb
clc
xchg
xor
pop
sbb
hlt
paddusb
pop
dec
push
or
xchg
push
outsb
insw
cwtl
push
adc
lret
mov
pop
sahf
inc
enter
sub
ds
sbb
nop
out
and
push
loope
outsl
or
sti
mov
cld
push
das
xchg
xchg
call
sahf
pop
clc
push
repz
cwtl
ret
adc
out
cmp
shlb
pop
push
jge
push
jb
ljmp
icebp
mov
leave
in
lret
ffree
add
fistpl
lret
mov
idivb
lahf
out
loope
and
pop
int
pop
xor
mov
pop
imul
lahf
dec
test
pop
adc
mov
mov
xchg
insb
push
mov
xor
ja
mov
adc
dec
mov
dec
jmp
shlb
mov
mov
xor
idivl
mov
mov
cli
mov
sbb
push
ja
clc
xchg
mov
lea
js
sub
lahf
jb
test
sarl
pop
nop
mov
lret
mov
dec
dec
dec
add
mov
inc
xlat
ret
xor
sarl
xor
jnp
mov
bound
out
and
jmp
or
mov
mov
mov
icebp
into
push
jecxz
cmp
push
leave
sbb
lock
jnp
int
inc
in
scas
enter
mov
inc
pop
in
insb
iret
inc
sbb
dec
inc
outsb
out
es
lcall
jb
lea
mov
stc
sub
jne
in
adc
sub
shl
aad
out
sub
roll
icebp
pop
into
loop
in
icebp
stos
repnz
rolb
push
or
sub
jp
ljmp
inc
leave
xchg
repnz
jnp
pop
inc
sahf
insl
clc
insb
pop
cmpsb
out
cmpsl
xchg
addl
mov
clc
adcb
jnp
sbb
cltd
push
push
cmpsb
test
cmpsl
adc
push
rorb
fistpl
pusha
mov
push
test
or
shr
xor
push
inc
sbb
inc
add
test
fnstenv
push
push
pop
ret
scas
nop
cmp
pop
xor
pop
loop
sahf
or
mov
in
aad
pop
inc
aad
and
std
movsb
scas
xor
data16
lods
outsb
stos
xchg
xchg
jmp
sahf
movsl
lcall
clc
ja
and
mov
pusha
xor
mov
mov
inc
shrb
xchg
addr16
test
push
push
nop
pop
rclb
xchg
mov
and
gs
testb
sub
push
mov
inc
lahf
and
sub
bound
addr16
scas
push
lea
jb
iret
cmp
ds
mov
mov
daa
sub
stos
into
adc
fnstenv
leave
push
inc
add
jl
xchg
or
rcll
fs
lcall
xor
inc
mov
fdivrl
hlt
aam
add
mov
aaa
fbstp
out
outsb
lret
orl
mov
das
outsl
sbb
mov
sbb
outsb
push
mov
pop
leave
stos
dec
xchg
pop
cmp
adc
aam
inc
jle
push
addl
mov
imul
mov
inc
mov
mov
xchg
into
cli
mov
ss
nop
mov
push
cmpsl
out
addr16
lcall
push
mov
xchg
sti
icebp
sarl
inc
jge
cltd
adc
call
xorb
pop
sbb
mov
pop
loop
loopne
test
or
sbb
inc
sub
notl
cmc
xchg
fdivs
lret
pop
sub
xchg
adc
lods
out
call
push
xchg
push
mov
pop
imul
push
add
xor
cmp
movsb
rolb
outsl
or
add
imull
pop
mov
cltd
aad
shl
xchg
inc
dec
mov
add
cmp
pop
adc
jg
cmc
push
mov
pop
ss
adc
stos
dec
cmpsb
add
push
sar
popa
and
jo
shrl
andb
jecxz
es
push
dec
aas
mov
scas
push
dec
mov
fdivs
mov
cmpsl
or
aas
sbb
out
cmpsb
pusha
inc
and
jl
mov
fcomps
jae
popa
or
add
or
mov
pop
mov
push
les
or
jle
jno
leave
loopne
sbb
fidivrl
fiaddl
xchg
xchg
dec
xchg
arpl
sbb
repnz
loop
in
fwait
stos
jns
test
sub
pop
std
and
test
ljmp
xchg
add
jecxz
xor
sti
shl
jae
rorl
rcr
xchg
add
mov
mov
sub
out
sbb
out
adc
mov
int3
sbb
repz
inc
shll
mov
aaa
push
fwait
cld
call
push
rcll
mov
scas
movsb
jecxz
das
in
cmovne
rorl
xchg
xchg
ret
pop
lahf
roll
popa
hlt
sub
ds
leave
xor
jmp
mov
aaa
cld
xchg
push
xchg
add
pop
inc
and
icebp
pushf
ss
lods
pop
test
jne
mov
cli
test
and
out
enter
test
sub
rcr
and
outsb
jp
xchg
dec
mov
shlb
ss
add
fsubl
jno
dec
and
inc
add
fisttpll
dec
test
push
in
jle
mov
inc
mov
mov
ds
or
dec
ss
cmc
pop
jns
adc
sahf
push
xchg
gs
dec
inc
or
adc
movsb
push
pop
addr16
adc
jbe
push
lcall
pop
fisubs
jb
cmpsl
xor
ror
in
stc
icebp
gs
pop
push
shrb
mov
stos
pop
adc
dec
sub
jge
ret
jbe
arpl
or
test
xchg
jecxz
arpl
out
jne
mov
shlb
ljmp
movsl
mov
lea
jbe
movsl
movsb
jno
bound
sub
jns
shlb
sub
xlat
ret
es
jmp
cli
mov
lods
sbb
jae
jecxz
in
xchg
xchg
sti
dec
xlat
lods
pop
xlat
roll
clc
mov
in
call
pop
push
sbb
ret
sbb
into
cmp
into
sub
push
pop
inc
lcall
repnz
and
in
mov
sbb
xorl
cmpsl
shlb
add
pop
inc
xor
div
pop
aaa
in
jmp
getsec
addl
pop
sub
xchg
mov
xchg
std
call
push
ja
enter
lcall
add
lock
dec
clc
xchg
insl
pop
dec
stos
cmp
aas
movsb
shll
je
into
jne
clc
imul
mov
add
shrl
jmp
jp
cmp
test
lds
lahf
loope
jg
mov
or
test
xchg
cmc
adc
call
ja
or
cmp
lock
ds
xchg
xchg
add
aam
adc
dec
call
pop
test
popa
lret
stos
cld
sti
mulb
xor
or
and
adc
int
mov
ljmp
push
sub
jecxz
rol
inc
mov
ljmp
mov
js
into
popa
lock
dec
lss
jnp
lret
loope
xchg
push
movsl
jb
jle
pop
loope
mov
jns
inc
aas
jl
inc
das
sti
inc
cwtl
add
mov
push
pusha
xchg
add
mov
movsl
mov
push
xor
daa
add
shll
or
or
cmpsb
lret
imull
cwtl
or
inc
sti
xchg
xchg
ljmp
pusha
pop
push
and
dec
mov
xchg
cmp
call
cmpsl
stc
jecxz
jne
add
mov
mov
sbb
out
inc
lret
lret
out
sub
cmp
add
adc
jge
loopne
jle
inc
les
inc
xor
xor
into
fs
repz
stc
dec
int
xchg
mov
push
out
lods
and
cmpsb
xchg
ret
push
lea
ss
pushw
add
cmpsb
das
mov
jne
or
inc
arpl
rcl
sub
jle
add
and
stos
jo
jle
push
add
or
ret
sbb
mov
pop
ret
adc
jmp
adc
in
enter
pop
dec
jecxz
decl
iret
xchg
xor
mov
scas
movsl
mov
negb
xchg
pop
nop
sub
cli
adc
fldt
sub
out
add
inc
mov
mov
lods
adc
subl
fimull
fildl
stos
popf
dec
jnp
xchg
mov
ret
pop
scas
jne
cmp
xchg
popf
inc
jno
add
fimull
out
imul
loop
popf
call
xor
nop
cli
ja
xor
movsb
push
mov
dec
pop
xor
es
movsb
pusha
testl
mov
outsb
cmp
mov
push
add
cmc
outsl
fucomi
hlt
daa
dec
push
pop
push
jp
xchg
cmpb
sub
jnp,pt
inc
outsl
in
mov
fiaddl
cmp
xchg
push
in
test
leave
inc
xor
add
insb
xchg
into
jge
sub
cmpsb
sbb
jbe
add
ror
shll
fistpll
repz
das
loopne
popf
stos
fbstp
xor
shl
ljmp
gs
test
dec
sbb
xchg
jb
inc
push
mov
jmp
xchg
mov
push
sbb
push
xchg
pushf
movsl
jae
xor
mov
lock
stos
mov
cmp
lds
out
hlt
dec
mov
ret
orb
sbb
cmp
sarb
adc
nop
insb
dec
push
shll
xor
jmp
or
daa
mov
jge
jl
nop
xchg
fistpl
pop
lcall
xor
cwtl
into
xor
pop
jns
fwait
lret
push
cld
or
sbb
dec
call
enter
mov
test
movsl
xchg
dec
sbb
test
jo
pop
addr16
mov
mov
stc
cmp
lret
insb
xchg
fwait
jae
popf
dec
leave
mov
int
cmp
or
cmp
add
pop
mov
xchg
mov
ja
pop
lods
lods
mov
mov
notb
fbld
int
add
loope
push
cmp
inc
jo
jp
jns
and
mov
gs
sbbl
xchg
icebp
out
scas
or
jg
jmp
test
mov
jp
and
addr16
sbb
adc
aaa
or
shr
repnz
out
testb
test
lret
inc
movsb
lods
dec
pushf
xor
outsl
out
ret
mov
mov
sbbl
xor
and
test
jns
cmpsb
xlat
fldl
and
cmpl
pop
pop
negb
mov
daa
jge
arpl
dec
int
fidivrl
add
cmp
inc
xor
mov
addl
add
das
pop
fsts
jge
arpl
jmp
mov
dec
sub
jmp
movsl
out
or
sub
outsb
sbb
leave
pop
sub
jmp
orl
mov
adc
mov
push
ds
xor
js
cmp
lahf
repnz
pop
xor
pop
adc
dec
dec
sti
jae
mov
push
or
pushf
fwait
sbb
inc
or
stc
sbb
jb
fwait
leave
fildll
lock
inc
lea
dec
xchg
lcall
jmp
test
les
xchg
xor
mov
popf
fidivs
jne
cmp
mov
cmp
pop
std
mov
je
sub
lock
in
fists
mov
and
mov
xchg
jmp
mov
adc
mov
rcrl
add
and
dec
sbb
iret
cwtl
pop
sub
xchg
or
popa
shrl
outsb
fbld
aas
mov
inc
add
das
mov
xchg
jmp
hlt
cltd
mov
sbb
push
lcall
lods
ljmp
test
ljmp
adc
mov
mov
cmpsb
push
cmc
jo
adc
outsb
bound
or
xor
cltd
jo
mov
xor
aad
rorb
jmp
and
popl
fcomip
inc
mov
adc
push
adc
mov
out
or
das
adc
insl
push
pop
les
movsb
jecxz
mov
sbb
xchg
mov
dec
stc
mov
mov
xor
cld
xor
daa
mov
jecxz
icebp
lock
repnz
stos
es
stc
inc
jbe
and
cmpsl
mov
pop
mov
sub
faddp
popa
mov
test
or
mov
test
ja
mov
cmp
mov
or
xchg
jge
add
loope
std
cmp
sub
adc
test
jg
into
ja
int
mov
mov
mov
cltd
cmpsb
out
pop
cmpb
mov
stos
jl
fldenv
fistps
xlat
jbe
inc
loopne
push
bound
push
repz
pop
adc
clc
ret
lahf
std
mov
mov
dec
notb
adc
es
mov
arpl
xor
xchg
and
in
or
sub
push
subb
inc
mov
invd
shl
mov
stos
inc
mov
pop
sbb
pushf
sbb
lods
cmpsl
push
mov
mov
push
pop
mov
testl
insl
data16
mov
inc
sbb
fcompl
fstp
jle
xor
fidivrs
adc
test
cmc
js
inc
jo
inc
add
xor
push
inc
frstpm(287
xor
fldcw
pop
aaa
mov
daa
xlat
add
push
jae
mov
bound
push
in
outsb
push
cld
aad
mov
jbe
and
mov
or
xchg
sti
jmp
add
dec
clc
xchg
or
jecxz
pusha
insb
out
out
mov
arpl
and
pop
jg
popf
nop
xchg
sbb
psrld
lods
sti
test
test
icebp
or
push
sti
outsb
inc
lret
inc
mov
mov
pop
cmp
lret
sub
xchg
sub
cwtl
jg
pusha
shrb
mov
les
fisubl
shlb
sub
jns
pop
or
in
ficomps
mov
xchg
cmpsl
xchg
imul
fdivl
xor
movsl
push
loop
inc
lods
adc
sub
adc
adc
xchg
mov
inc
sbb
jns
add
or
push
jo
xchg
out
lods
push
insb
cli
xchg
jb
incl
xor
mov
xchg
popa
loope
jb
mov
mov
xchg
add
in
mov
lret
push
xchg
jnp
xlat
les
pop
jbe
pushf
mov
in
pop
add
and
cmc
adc
scas
sbb
sub
inc
testb
xchg
mov
lods
mov
sbb
popf
xchg
pop
sbb
loope
loope
into
out
clc
loopne
lahf
jmp
push
je
xchg
jnp
xchg
test
cwtl
inc
dec
lahf
mov
jg
lea
or
repnz
pop
pop
imul
push
aaa
ret
nop
cmp
or
add
orl
pop
aaa
mov
adcb
jne
loope
fistl
fisttps
jp
shlb
inc
test
inc
pop
jmp
jl
fistl
or
mov
shll
inc
ss
cmp
jnp
pmulhw
idiv
xor
push
sub
je
jp
cli
scas
cli
mov
push
or
and
or
adc
icebp
and
add
insb
mov
in
mov
inc
je
push
cmp
mulps
sbb
sbb
cmp
in
dec
inc
mov
push
xchg
pop
test
imul
subb
shr
jge
stos
jp
into
imul
push
or
test
xlat
push
mov
jg
and
shrl
fldt
jne
data16
xchg
push
add
jne
dec
xchg
or
adc
mov
test
data16
jge
pushf
pop
dec
or
push
jne
inc
mov
movsl
aaa
push
fs
rol
sbb
insl
out
fiaddl
lret
adc
xchg
pop
hlt
movsl
adc
adc
mov
add
adc
pop
sahf
jecxz
sbb
fbstp
sub
cwtl
pop
stos
mov
jp
and
call
enter
lods
pop
insl
in
pop
mov
mov
popa
pushf
loop
push
addr16
in
pop
test
mov
sub
xor
lahf
ja
faddp
sti
incb
stos
inc
in
mov
pop
cmpsl
sbb
mov
lret
subb
jmp
mov
cmp
mov
lds
jge
push
fwait
movsl
xchg
jge
sub
scas
jbe
adc
loopne
adc
pop
clc
sbb
les
mov
shl
mov
mov
push
fdiv
jbe
add
adc
adc
fidivs
xchg
imul
xchg
jbe
test
movsl
and
imul
fnstcw
mov
or
outsl
shl
aad
and
adc
in
addl
out
mov
jp
add
dec
add
adc
pop
push
aas
mov
xor
adc
rorl
fldenv
pop
ss
pop
jle
lods
ja
pop
inc
jno
bound
pop
dec
insb
sub
xchg
lods
fists
mov
test
sub
sub
lods
leave
std
enter
push
sbb
or
inc
sarb
arpl
jmp
ja
shll
out
loope
and
push
dec
xor
sbb
add
pop
shrb
fwait
xor
mov
add
pop
call
sbb
mov
mov
push
xchg
jbe
mov
mov
fstpl
fistl
inc
cmpsb
cmp
ljmp
adc
aad
mov
fcompl
shrl
inc
pop
sti
out
in
pop
mov
pushf
inc
cmc
pop
bound
pop
in
das
mov
push
imul
and
pop
add
dec
fdiv
push
movsb
iret
inc
mov
sub
mov
add
fnsave
jns
pop
out
iret
js
push
or
in
mov
xchg
xor
lcall
inc
xor
push
xchg
adc
dec
mov
inc
and
loop
xor
jg
jecxz
mov
inc
popa
cwtl
aam
das
dec
sub
loopne
mov
test
sub
shll
insl
std
push
jecxz
lock
movsl
je
aaa
call
js
xor
and
call
mov
leave
mov
mov
aam
mov
lds
cmp
and
sbb
xchg
or
int
and
pop
pop
sub
xchg
ficompl
sbb
fsubrl
push
push
and
sbb
insl
in
pop
sbb
jno
aaa
mov
aad
xchg
mov
in
divl
pop
push
xor
xchg
mov
cmp
movsb
scas
js
mov
jne
repnz
cmc
outsb
sbb
sub
cmpsl
adc
xchg
push
pushl
mov
jecxz
sahf
jo
fsubl
pop
mov
xchg
and
or
loop
mov
bound
hlt
popa
ret
nop
aaa
xlat
mov
push
dec
rcr
repnz
mov
and
inc
add
inc
add
push
jp
xchg
mov
xor
mov
dec
cs
jo
mov
sbb
sbb
mov
pop
mov
mov
clc
inc
lcall
cmp
mov
dec
sbb
jl
rcr
rorb
icebp
in
scas
sbb
fsts
bound
cmp
loope
dec
pop
mov
xor
fidivrs
mov
xchg
xchg
adc
mov
mov
push
adc
mov
mov
bound
mov
or
mull
adc
xchg
xor
cmp
ret
add
adc
loope
jp
or
les
lods
sbb
sub
enter
push
hlt
nop
jnp
mov
aas
fidivrl
adc
enter
adc
mov
inc
dec
jns
nop
inc
enter
sub
jne
dec
lods
sti
xor
insb
add
imul
cmpb
and
adc
or
and
mov
mov
fwait
mov
jp
xor
xchg
pop
ficomps
test
sahf
cmp
adc
jo
cmpsl
scas
jmp
popa
mov
vpaddw
sti
xchg
mov
cmp
pusha
mov
push
xor
icebp
stos
cld
in
sub
dec
je
cmp
or
les
mov
mov
nop
leave
outsl
call
dec
inc
fldcw
test
mov
into
es
and
roll
pop
xchg
clc
iret
lcall
fists
add
mov
rcll
jle
fs
addr16
fmulp
adc
xchg
ja
stos
movsb
jb
jne
mov
int3
and
push
xor
stos
cmp
divl
and
in
mov
and
pop
dec
pop
add
sti
out
imul
cmp
fsubs
pop
jle
dec
and
xor
inc
pop
xor
mov
jl
pop
popaw
popa
add
shl
scas
scas
nop
addr16
lcall
push
dec
inc
fs
icebp
mov
fists
mov
xor
inc
icebp
or
mov
lock
cs
iret
testl
mov
data16
push
mov
es
xlat
and
popa
push
sub
aam
movsl
sub
add
data16
sbb
scas
jnp
movsl
and
mov
push
inc
xchg
push
dec
and
cmpsb
fsubs
jp
rcrl
mov
into
push
test
lcall
mov
sbb
iret
fdivrl
and
sbb
sub
push
les
roll
and
arpl
pop
xchg
outsl
shll
inc
jmp
in
arpl
cli
pop
sbb
clc
jo
jmp
and
pop
js
rclb
sbb
pop
out
mov
push
sbb
aas
xchg
sub
add
cs
rcll
arpl
and
mov
jle
stos
pusha
fdivrs
push
lret
cmp
mov
dec
adc
sahf
out
push
xor
shlb
repnz
sti
sarb
push
jecxz
mov
sub
dec
jns
or
imul
adc
pop
cltd
dec
or
pop
shlb
outsb
inc
rcrl
outsb
sbb
sbb
cltd
cmp
lods
test
sbb
push
dec
gs
sub
pop
inc
mull
insl
in
mov
and
sbb
in
pop
xor
dec
and
outsl
jae
pop
nop
adc
sbb
nop
add
pushf
and
inc
jns
cmp
mov
mov
out
ljmp
sarb
hlt
test
shlb
sub
lods
push
test
cltd
dec
push
add
push
pop
sub
jl
pop
sbbl
rcr
mov
aaa
cmpsb
cmp
scas
sbb
mov
xor
mov
sahf
and
sti
add
add
rcll
shlb
sub
cmp
std
add
pop
or
test
lea
mov
mov
imul
jge
es
stos
std
test
pop
mov
mov
das
cmpsl
pop
add
js
mov
cwtl
adc
ficoms
enter
std
adc
sub
ljmp
cwtl
xchg
jmp
in
inc
das
pop
mov
addr16
jb
in
mov
push
je
inc
data16
inc
push
gs
mov
push
jg
xchg
cmp
imul
cmp
push
sub
sar
loopne
jo
sbb
mov
loopne
add
shl
das
stc
dec
ds
mov
xchg
jmp
and
imul
mov
nop
add
add
push
inc
pop
and
mov
mov
cmp
mov
ss
lret
lods
sbb
out
imul
add
fiadds
xchg
jmp
fwait
out
dec
mov
repz
mov
popa
sub
or
adc
add
insb
loopne
cmp
insb
enter
in
mov
scas
mov
out
rolb
out
rorb
jns
mov
sbb
lret
fisubrs
add
gs
add
repz
sbb
push
std
sub
inc
pop
aas
in
jo
mov
xor
add
imulb
js
adcb
ret
inc
testl
or
imul
ds
test
cmc
arpl
xor
and
jb
jno
jno
scas
nop
xorb
cmpsb
in
pop
in
or
data16
or
lods
mov
jg
pop
dec
sbb
in
mov
push
xlat
test
nop
fidivs
shrl
bound
stos
xchg
and
jne
das
lds
popl
cmp
or
insb
into
fsubrs
je
mov
mov
or
adc
mov
xchg
fcomp
pop
jae
xor
mov
xchg
xlat
mov
sbbl
mov
mov
out
loop
mov
inc
xchg
xor
or
repz
hlt
movsl
mov
scas
popa
pop
lret
add
sbb
inc
cli
and
mov
setnp
xor
jl
mov
mov
lret
ret
dec
cmp
pop
cmp
and
mov
or
push
stos
sahf
mov
mov
mov
pop
ret
cmp
repnz
stc
orl
ss
push
jb
mov
and
adc
push
mov
daa
imul
mov
lahf
mov
iret
add
fisttpl
inc
out
arpl
jo
jne
lds
es
lahf
cmpsb
mov
jmp
out
push
push
xchg
add
and
int
in
lret
xchg
dec
xchg
dec
push
insl
fmul
pop
jg
or
enter
stos
jle
inc
jne
mov
shrl
fnstenv
out
repz
fisttpl
and
adc
and
pop
sarl
dec
or
mov
leave
xchg
dec
scas
push
push
movsb
fwait
inc
clc
cs
mov
pop
pop
mov
rclb
dec
pop
pop
dec
das
sub
in
xchg
sbb
push
and
dec
cmc
pop
repnz
sub
sub
into
arpl
adc
int3
pop
dec
or
out
pop
das
cmp
repz
icebp
mov
faddl
sub
mov
sub
mov
cmp
jecxz
insb
push
movsb
cmpsl
mov
ss
push
xor
mov
dec
mov
fcmovnb
xchg
scas
rorb
enter
enter
inc
cmp
mov
shl
cld
arpl
popf
popa
mov
mov
rcl
mov
cmp
jno
push
xchg
lahf
sbb
mov
fwait
push
pop
dec
push
jns
xchg
add
and
mov
into
popf
cmp
add
incb
in
mov
add
lahf
insl
stos
lea
cmc
mov
jb
mov
imul
jo
mov
xchg
nop
inc
icebp
fscale
fimull
mov
mov
popf
adc
sbb
adc
jnp
xchg
fwait
lcall
mov
or
fidivrs
push
mov
popa
dec
or
movsl
int
roll
rol
scas
pop
jp
scas
and
call
es
mov
xor
xchg
add
sbb
das
dec
sub
les
mov
or
je
mov
pop
xchg
adc
mov
mov
inc
jbe
pop
jnp
sbb
adc
pop
outsl
outsl
mov
xchg
andl
jne
shl
push
jne
sub
ret
imul
jge
loopne
fsubs
dec
mov
pop
inc
cmp
xchg
test
push
and
faddl
xor
mov
lods
sub
jae
push
bnd
mov
pop
pop
dec
out
jmp
pop
mov
rcr
cmp
pop
cmp
loop
xchg
rorl
jmp
xor
addb
pushf
out
std
out
sahf
sub
adc
inc
daa
cmc
pop
xchg
lods
pop
arpl
sbb
stc
inc
mov
insl
lfs
mov
and
or
test
insb
test
lea
stc
or
push
adc
adc
ljmp
jl
adc
and
sub
insl
jmp
mov
lods
xchg
xor
cmp
and
and
repnz
jne
push
popf
mov
pop
jmp
test
mov
mov
pushf
mov
mov
pop
cmpsb
in
les
jle
mov
sub
xchg
mov
and
and
push
test
adc
sub
repnz
dec
fs
pusha
stc
in
paddw
xor
cmp
popf
dec
lret
adc
test
push
addr16
mov
jl
xor
dec
add
mov
add
pop
and
in
hlt
fxch
es
enter
pop
aaa
adc
fs
outsl
mov
push
cltd
mov
in
jmp
cmp
dec
jo
out
lods
and
add
out
jge
aam
out
fs
std
xchg
inc
cmp
add
mov
fimuls
bound
sub
stos
cmp
inc
push
aad
lcall
inc
mov
xor
shrb
repz
push
pop
cld
in
ret
mov
inc
pushf
add
adc
pop
sbb
into
test
inc
pop
pop
xchg
stos
sbb
je
pushf
enter
ljmp
addr16
mov
jg
push
test
cld
inc
or
repz
pop
xchg
jne
mov
mov
jmp
sahf
or
mov
xchg
add
mov
fdivr
imul
mov
pop
inc
mov
dec
cld
sub
or
pop
les
add
popf
cmp
push
push
xchg
dec
push
jecxz
ds
cld
je
or
ret
dec
inc
rcr
mov
inc
ret
pop
pop
xor
cli
inc
mov
push
mov
sbb
push
mov
dec
xchg
jl
dec
ss
es
aas
andb
push
out
pusha
add
ret
and
sub
mov
inc
pop
stc
test
or
mov
lods
addl
lods
xchg
ja
cmpl
jecxz
or
push
cli
inc
adc
jnp
pop
out
pop
xchg
stos
adc
ds
cld
es
push
mov
cli
push
pop
dec
cmpsl
cli
mulb
and
dec
jle
dec
xchg
ljmp
aam
aam
out
icebp
idivl
push
movb
add
popa
xchg
arpl
inc
movsb
adc
sbb
xchg
pop
into
mov
ret
mov
xor
stos
ret
pushf
sub
stos
out
dec
xchg
xchg
addr16
inc
lods
cmpsl
pop
aad
xor
mov
mov
mov
out
add
cmp
mov
das
add
and
xchg
pop
test
and
inc
cmp
dec
mov
dec
jmp
out
insl
sub
jmp
lahf
lods
cmp
outsl
fldenv
shrb
and
ror
insb
jo
pushw
testl
nop
insb
mov
mov
out
insl
push
sbb
xchg
call
mov
pop
outsb
jmp
test
scas
and
mov
fisubl
jp
mov
stos
or
sbb
mov
and
jno
loop
aaa
sti
sbb
mov
gs
jbe
jae
outsl
scas
into
rcr
cmp
insl
fdivl
outsb
xchg
mov
jo
pop
std
aam
imul
sub
stos
jne
daa
scas
cmp
and
pop
push
mov
mov
push
push
nop
inc
jecxz
push
dec
jp
xchg
aam
imul
jp
mov
xchg
fdiv
pop
ret
cmp
push
fldenv
stos
and
jge
rcrl
cmp
repz
mov
imul
lahf
lahf
push
int3
cmpsl
mov
fisubrs
repnz
rcr
mov
dec
test
add
ja
add
mov
pop
jg
jg
jge
inc
lret
ljmp
movsb
adc
mov
jge
lock
xor
inc
in
xor
lea
out
inc
or
iret
cs
repnz
cmp
mov
or
insl
insb
data16
mov
lds
sbb
jp
arpl
cmpsb
pop
jno
dec
sub
xlat
pop
add
data16
test
mov
rolb
xor
push
into
jne
pushw
mov
repz
dec
sub
ret
adc
mov
fs
sbb
scas
rcll
loopne
movsl
mov
or
mov
lret
jne
lods
dec
sbb
ret
adc
mov
inc
sbb
sub
shl
mov
cmp
pusha
cmp
mulb
dec
loopne
sarl
inc
xchg
xchg
stc
addr16
pop
cmp
lods
lds
testb
daa
sbb
sahf
xor
push
jg
xor
push
jae
push
xchg
mov
sbb
dec
lods
mov
push
sub
cmpsl
cltd
stc
pusha
lcall
test
mov
lea
push
lods
mov
fmul
push
fcomps
movntps
iret
into
stc
push
dec
gs
in
push
or
mov
pop
inc
inc
cld
pushf
or
cmp
jo
jns
ret
sub
in
jne
shlb
xchg
outsb
fnstsw
cmp
push
insb
xor
rorb
adc
sub
sub
jne
call
aam
push
cmp
or
jl
fbld
jge
mov
mov
arpl
popa
idiv
push
lret
je
test
or
or
jnp
adc
sub
and
jle
cmp
jno
cmp
jbe
test
int3
jo
mov
pop
fucomip
dec
xchg
mov
dec
cld
and
add
pop
push
fmuls
cmpsb
mov
fbld
mov
iret
into
fimull
movsl
insb
inc
lret
out
mov
out
repnz
xchg
xchg
ja
icebp
imul
inc
and
jbe
or
or
push
sbb
push
mov
sub
je
dec
or
or
inc
jo
movb
pop
sbb
imul
mov
pop
fdiv
jnp
pop
ret
mov
fisttpl
push
sti
lock
xchg
leave
imul
hlt
icebp
pop
lcall
and
and
cmovno
sub
addr16
xor
xchg
cmp
dec
insb
sub
jno
push
sbbb
inc
add
pop
addr16
shrl
sbb
lret
loope
push
cli
outsl
scas
mov
and
jo
xchg
or
push
ffreep
fstpt
mov
inc
imul
mov
out
mov
jmp
mov
stc
and
mov
or
insb
out
in
cmp
in
inc
insl
inc
sbb
ja
imul
pop
and
push
loope
cli
lahf
inc
insb
dec
andb
ljmp
pop
push
xor
pop
sub
or
jle
test
inc
out
popf
jp
cli
dec
sub
popa
jmp
popf
dec
xor
sbb
test
mov
addl
pushf
pop
cmpsb
cmp
fwait
add
mov
arpl
fstps
mov
and
movsb
jo
enter
push
jbe
xor
mov
loopne
in
ret
aas
xor
sub
pop
sbb
xchg
loop
jne
jns
or
mov
cmpsb
mov
outsl
loop
arpl
jae
dec
in
outsl
popf
jge
cld
push
pusha
xchg
outsb
xchg
xor
push
pop
pop
add
pop
inc
sahf
xchg
push
cmp
mov
cld
push
rol
sti
sbb
imul
retw
push
mov
cld
mov
ja
lods
mov
insl
push
sub
adc
test
sub
inc
aas
inc
bound
inc
in
hlt
and
inc
gs
xlat
or
pop
push
test
in
xchg
mov
jl
pop
or
mov
xor
ret
aas
push
lcall
jbe
and
mov
mov
sub
mov
mov
cmp
stc
mov
sub
mov
cmp
daa
mov
mov
inc
push
push
inc
xchg
jo
ljmp
cmp
imul
pop
bound
fwait
test
inc
fs
outsb
jg
outsl
icebp
xchg
xchg
cmc
stos
dec
gs
aam
test
nop
push
mov
repz
cld
xorb
dec
loop
jbe
fwait
pop
test
ficompl
pop
push
push
sarb
and
mov
push
fisubl
leave
call
sub
mov
jbe
addb
pop
test
lret
loopne
mov
mov
push
repnz
sahf
pusha
and
inc
mov
call
das
int3
jo
xchg
mov
in
std
orl
inc
lret
enter
lods
in
mov
das
js
je
cmp
push
mov
mov
dec
jnp
adc
mov
and
imul
out
fwait
addl
insl
adc
adcl
inc
fnstcw
lret
mov
inc
fmull
roll
test
push
lret
cmp
in
lock
xor
outsl
sarb
int3
xchg
cmpsb
insl
sahf
push
sahf
sbb
int
or
xchg
adc
add
pop
jnp
cmp
loope
outsb
subl
jns
lahf
loop
xchg
fcompl
arpl
popf
in
or
sarl
es
push
dec
mov
pop
filds
ds
aad
mov
loop
test
or
lahf
adc
dec
repnz
adc
push
push
mov
inc
ljmp
fs
popa
cmp
mov
push
adc
cmpsb
xor
cld
inc
call
add
mov
cmp
cmp
in
imul
addr16
sbb
xor
stos
fcomps
sbb
fnstsw
mov
mov
sub
sub
cltd
in
push
outsl
std
or
xchg
mov
mov
out
fnstenv
xchg
cmpsl
xchg
dec
fcomi
pop
lahf
sti
sbbb
aad
fidivs
cmpsl
inc
aas
lahf
adc
sbb
pop
pop
push
out
stc
hlt
daa
adc
mov
stos
repnz
push
pop
movb
mov
mov
jo
and
ds
mov
push
cwtl
cmp
sub
and
adc
add
add
mov
push
xchg
aas
lahf
sbb
div
jmp
sbb
pop
jns
jg
adc
cmpsb
shr
fistpll
int
lret
test
test
shll
andb
lret
mov
pop
daa
push
outsl
dec
iret
arpl
movsb
pop
mov
lods
push
jge
push
jne
inc
or
dec
add
daa
ficompl
lea
int
mov
movsl
mov
push
dec
adc
mov
push
out
adc
mov
cs
ffree
jle
es
cwtl
jnp
bswap
movsb
adc
cltd
enter
sbb
xchg
jb
psubsb
cmp
sub
inc
cmp
movsb
mov
shlb
sbb
scas
xchg
or
in
and
sbbb
add
insl
ss
jmp
ja
imul
dec
push
stc
mov
mov
bound
mov
addr16
insb
cs
js
inc
mov
mull
ficompl
cmp
inc
fsubs
push
aaa
daa
inc
out
fdivrl
scas
inc
jb
loop
outsl
lods
sub
orl
push
lahf
inc
cli
ret
pop
test
cmp
adc
aaa
xchg
mov
dec
pop
popf
js
nop
mov
jl
xor
dec
jnp
movsl
or
xchg
popf
xor
idivb
movsb
ret
jmp
in
iret
inc
add
dec
inc
stos
inc
popa
lret
lock
ljmp
repnz
inc
cmp
repnz
xor
out
jno
sub
je
xor
aam
mov
dec
fld1
in
test
push
imul
jb
mov
sub
mov
sbb
cmp
sub
jo
mov
dec
dec
xchg
add
mov
and
cmp
out
lods
js
mov
mov
loope
xchg
sub
in
lods
outsl
add
jmp
divb
int
mov
rclb
test
lock
or
cmp
in
loopne
mov
push
jg
dec
arpl
hlt
sbb
cmp
lods
mov
dec
cmp
xchg
inc
mov
sbb
jbe
inc
rol
dec
outsl
or
aam
jb
cmp
adc
push
and
adc
pusha
lcall
lahf
and
push
fwait
jmp
jmp
mov
lcall
scas
and
in
jbe
jge
sbb
adc
loopne
mov
inc
cmovns
push
xor
dec
test
cld
push
push
test
in
cmc
mov
inc
ljmp
xchg
orb
inc
push
leave
cmp
adc
lcall
out
shl
push
lds
xchg
cmpsl
fwait
and
mov
and
je
and
fdiv
mov
mov
push
mov
add
es
imul
jno
jp
int
rol
and
cmpsl
jle
or
mov
cmpsl
pop
dec
les
pushf
daa
stc
ljmp
nop
stos
adc
add
pop
pop
xlat
xchg
mov
lcall
cmpsl
mov
in
xorl
jnp
es
push
mov
sahf
test
test
mov
or
push
push
mov
push
in
sub
int3
outsb
jbe
pop
sub
dec
shlb
inc
call
in
mov
arpl
sub
aad
pop
cmpsb
mov
mulb
cwtl
das
mov
xor
cs
xchg
into
mov
idivl
pop
pop
fidivs
mov
les
loopne
insl
push
es
push
lcall
out
loope
or
clc
cmc
jb
xchg
xor
pop
mov
jne
daa
sbb
cmp
sahf
add
mov
sub
jl
lods
mov
mov
adc
aam
insl
nop
pop
and
cld
mov
and
push
cmp
jl
or
or
sub
mov
mov
mov
rcll
test
clc
add
in
lds
loopne
movsb
shr
out
lods
enter
xchg
sub
add
loopne
pop
sub
and
arpl
mov
cmp
xor
pushl
popf
inc
cmp
lods
and
fstl
ja
cmp
mov
fadds
sbb
push
mov
lds
mov
loop
bnd
adc
push
mov
in
lea
xor
ret
int3
lcall
leave
xor
jg
mov
xor
stos
lock
dec
fisubrs
push
adc
fucom
test
mov
test
mov
cwtl
fdiv
pop
lds
xchg
stc
iret
jbe
sti
mov
xchg
mov
cmp
adc
ficomps
xchg
mov
popa
inc
sbb
into
jg
in
inc
cmpb
mov
aaa
push
pop
push
lods
sub
or
jle
clc
jge
mov
and
ja
fs
test
inc
sti
dec
cs
cwtl
sar
and
stos
lods
lcall
in
scas
imul
xlat
notb
in
gs
into
aam
mov
xor
testb
test
dec
and
jle
shrl
idiv
sbb
xor
jbe
and
xchg
cmpsl
in
pusha
aam
aaa
sub
jle
dec
push
push
and
lret
roll
test
jne
sub
sbb
pop
aas
push
clc
fildl
incl
mov
addr16
mov
mov
in
negb
jge,pt
sarb
out
psrlw
push
test
inc
lret
inc
xor
negb
xchg
push
or
sbb
fs
inc
sti
fdivs
pop
sbb
sbb
or
bound
out
mov
and
cmp
adc
sub
and
fldt
ficomps
into
arpl
dec
ja
inc
loope
mov
xchg
inc
ret
lock
dec
arpl
rcrl
out
test
arpl
fldt
sub
lds
out
int
push
rolb
sub
cli
in
iret
sub
or
xchg
into
and
orps
sbb
sbb
int
push
add
ljmp
mov
movb
adcb
popf
or
mov
insb
jnp
in
adc
gs
addr16
sbb
clc
and
dec
push
pop
scas
push
jl
pop
push
ret
cmc
or
fisubl
sbb
jmp
test
test
mov
push
ret
fbld
or
out
adc
cmp
clc
ret
or
dec
add
pop
mov
ja
shlb
movsb
in
pop
inc
sub
xchg
xchg
mov
push
inc
out
mov
cmc
mov
mov
es
lret
leave
jmp
popa
push
push
mov
mov
daa
sbb
outsb
insb
add
arpl
arpl
push
sbbb
pop
lret
add
xchg
int
fnstcw
gs
sub
add
jl
outsb
and
cmp
mov
jg
and
not
cmp
inc
pusha
add
pop
cmp
pop
cmp
jne
movsb
leave
hlt
jmp
push
jb
jnp
dec
movsb
or
mov
mull
andl
or
iret
out
in
fidivrl
cmp
stc
cmpsb
push
gs
mov
shll
loop
or
mov
into
gs
cmc
xchg
jno
mov
mov
lahf
es
push
ss
lods
sub
addl
nop
lahf
add
test
enter
pop
mov
mov
fsubs
imul
add
in
iret
popf
int
mov
cli
mov
cld
js
into
cmp
jge
jmp
lods
repnz
nop
dec
xlat
and
mov
xor
shrl
mov
xchg
cmp
dec
cmp
inc
scas
test
or
add
mov
jns
and
sub
push
mov
xchg
rcll
in
jnp
movsl
es
cwtl
andb
bound
outsb
in
imul
inc
push
cmpsl
mov
jp
or
sbb
fldcw
cmp
jns
ret
cli
mov
stc
in
xchg
fisubs
roll
push
xchg
insb
adc
or
mov
cltd
and
mov
adc
cs
xchg
cs
dec
or
stc
sbb
inc
jecxz
leave
inc
adc
bound
sbb
sbb
push
jmp
xor
jno
out
aad
addr16
jns
aad
push
imul
xchg
lret
nop
and
scas
inc
fsubl
inc
mov
push
repz
lea
mov
sub
jp
jns
lock
cmp
lods
sbb
mov
movsl
add
in
adc
jnp
mov
xor
cli
sbb
add
mov
push
pop
mov
add
pop
testl
sar
dec
sub
push
cmp
outsb
test
movntps
in
pusha
bound
insb
popf
std
repz
inc
jb
mov
and
loop
aaa
mov
lods
jle
mov
jns
sbb
lret
test
les
jl
sbb
xor
xchg
add
ja
adc
movsl
jnp
in
pop
pop
int3
into
add
jns
dec
sarl
xchg
lret
fdiv
jg
test
popf
xchg
jg
or
xor
push
aam
xchg
dec
movsl
outsb
adc
pop
call
js
dec
sbb
push
shrb
inc
arpl
cmc
push
sub
shrb
push
cs
adc
cmp
add
xchg
int
inc
addr16
sub
outsl
xchg
loopne
test
xchg
and
popf
mov
andb
int3
call
lahf
jne
loope
clc
mov
cmp
push
mov
imul
push
jnp
jmp
jge
into
jb
sbb
outsb
pop
loopne
notl
push
mov
sub
hlt
mov
jp
sub
inc
xchg
jge
gs
or
xchg
sub
or
inc
dec
pop
sahf
add
cmp
nop
dec
repnz
popa
sbbl
lock
mull
jl
pop
out
pop
cld
ret
mov
ds
pushf
aad
shrl
mov
xor
stos
inc
push
push
xor
sub
mov
test
or
sbb
movsb
jnp
in
mov
popa
movsl
cmp
inc
sbb
lods
xchg
fists
or
add
mov
sub
ds
push
mov
mov
xchg
pop
in
mov
inc
std
insb
mov
arpl
sub
cmp
jns
aad
jmp
lds
xchg
pop
add
lahf
jecxz
xor
cld
les
push
into
decb
cmc
jne
rorl
pop
jmp
mov
das
push
jp
jae
arpl
inc
push
push
stos
jmp
incb
and
ds
fdivr
xor
sbb
jns
fidivrl
adc
sub
and
in
push
inc
xor
mov
sub
xchg
addr16
xchg
sub
pop
dec
inc
xchg
push
mov
cmp
in
jmp
out
nop
fwait
cmp
fidivl
sbb
mov
mov
mov
idiv
mov
xchg
push
inc
push
pop
iret
jmp
lods
mov
mov
aaa
mov
sub
loopne
push
jecxz
push
jmp
cmpsl
or
ss
daa
pop
xchg
inc
dec
insl
pop
in
sbb
jecxz
dec
test
xchg
int
mov
xchg
jb
fdivr
jmp
ret
bound
mov
xchg
dec
push
in
dec
ret
xchg
push
out
jg
sbbl
imul
leave
and
pop
js
pop
sbb
add
pop
mov
cld
int3
shrl
ret
loopne
xchg
loop
in
pop
adc
js
outsl
ljmp
test
sbb
mov
lahf
or
sub
mov
ljmp
or
mov
jb
shlb
mov
and
pop
cmpsb
dec
popa
sbb
pushf
das
ljmp
ficomps
xlat
shll
sahf
pop
jo
sbb
cmp
scas
sub
inc
in
sub
aam
leave
push
cmp
adc
imul
push
cmp
mov
subl
cmp
mov
adc
push
mov
sub
loop
or
int3
sti
in
add
add
inc
mov
cmp
lret
xor
imul
xchg
clc
push
sbb
movsb
cmp
mov
outsl
and
cmpsl
jb
cli
xchg
stos
mov
push
pop
mov
sbb
ss
jne
fnstenv
mov
cmp
nop
cmp
jae
xor
int3
insl
sub
xor
mov
je
cmc
rorl
fucomi
pop
push
adc
cwtl
mov
add
neg
outsl
jge
add
outsl
lret
aad
fstl
loope
test
jne
mov
std
mov
sarb
pop
push
add
push
adc
inc
ss
fneni(8087
push
xchg
cmp
cmp
pushf
sti
push
push
rcrb
jle
lods
mov
adc
xchg
or
xor
sbb
pop
stos
enter
add
push
push
test
push
push
inc
es
mov
movsl
jb
loopne
jecxz
sub
adc
mov
popa
xlat
xchg
andb
mov
loop
adc
stos
cmp
pop
lods
dec
push
insl
pushl
sbb
jmp
jge
mov
je
sbb
mov
inc
insl
inc
push
imul
pop
gs
pop
lods
pop
mov
lods
js
mov
outsb
jg
movsl
jge
xchg
insb
adc
pushl
xchg
int
clc
push
mov
jns
xchg
pop
lods
inc
nop
dec
fsubl
sub
fsubrl
or
push
pop
mov
bound
mov
or
inc
mov
xchg
hlt
pop
test
rclb
push
movsl
pop
shrl
lods
ljmp
mov
push
cmp
sbb
call
popf
mov
loop
mov
movsl
push
xor
arpl
add
or
add
push
mov
and
fdivr
or
xchg
es
push
push
mov
cli
xchg
or
inc
pop
cmp
add
test
xchg
call
icebp
stos
mov
enter
dec
xchg
leave
sub
shlb
cmpsb
mov
and
mov
stc
cmpsb
sub
js
push
xor
push
mov
pop
pop
sti
cmpsb
movb
fwait
outsb
xchg
pop
mov
jmp
mov
sub
sub
mov
cmp
lret
lock
int3
filds
leave
fwait
stos
jo
sub
lods
inc
cmp
lret
ss
jecxz
sub
inc
adc
mov
xchg
jp
sub
add
frstor
and
loope
in
insl
xor
arpl
insl
or
inc
adc
xchg
push
sbb
pop
test
or
jg
xchg
cmp
iret
idiv
dec
data16
jp
dec
rcll
jno
xlat
and
inc
outsb
in
inc
aas
shr
stos
mov
jmp
push
js
inc
cs
imull
xor
mov
or
subb
or
push
int3
adc
test
fiadds
xchg
arpl
xchg
sbbl
sbb
xor
lret
ret
lahf
adc
jne
or
cmpsl
or
test
test
pusha
push
out
fs
sbb
ss
out
pushf
or
xor
jae
arpl
mov
cli
imul
xchg
mov
iret
xor
xchg
orl
adc
jge
hlt
cmp
not
add
dec
outsl
xchg
dec
pusha
push
dec
sbb
in
popa
mov
ljmp
dec
popf
jg
loop
push
icebp
xor
cwtl
icebp
fnsave
jmp
push
popa
test
mov
hlt
lret
pop
dec
or
or
xor
xor
lods
mov
xchg
out
fidivl
adc
mov
cmp
decl
cmp
pop
add
dec
jae
call
je
sub
outsb
out
pop
test
pusha
xchg
pop
pop
xchg
mov
cld
stos
xchg
adc
cltd
scas
cmp
push
std
in
fcmove
mov
cmp
mov
jecxz
rcrb
loopne
ja
inc
mov
loope
int
xchg
and
push
test
jno
aas
dec
and
je
jle
test
jl
scas
cmp
cmpsl
dec
xchg
xchg
add
fistpl
push
out
popf
into
xchg
add
dec
mov
xchg
aad
sbb
clc
adc
int
xor
fdivr
xlat
fcmovnbe
pop
sbb
pop
lods
add
aad
mov
outsl
lret
jg
sub
out
add
stos
or
shll
fldcw
fists
mov
subb
daa
sbb
gs
dec
or
sub
js
or
add
clc
mov
push
fistpll
inc
lea
mov
lock
mov
in
inc
dec
or
arpl
and
sbb
mov
xor
and
mov
push
js
std
sbb
fwait
ret
scas
lea
inc
sbb
cmp
addr16
ret
cs
hlt
add
popf
pop
pop
and
inc
in
dec
ljmp
cmpsb
dec
sbb
push
dec
mov
ret
loop
mov
rcrl
call
ja
sub
push
mov
sub
xor
push
scas
arpl
mov
icebp
xchg
mov
ret
jno
sub
into
sbb
push
xor
jge
cmp
ret
mov
shll
stos
mov
icebp
stc
shl
mov
shrb
mov
mov
and
dec
stc
arpl
push
adc
out
loope
fildl
out
add
jge
cmp
push
or
mov
mov
out
mov
aas
scas
mov
xor
pop
cmp
mov
pop
enter
data16
repz
mov
add
outsb
jle
jecxz
adc
and
jge
cmc
rcrb
rclb
fisttps
ljmp
int
add
jmp
loop
xchg
sarl
ret
adc
sti
fcomps
xchg
xor
lock
or
enter
xor
sbb
ss
or
sub
ja
jae
movsb
daa
mov
dec
cmpsb
fidivrl
popa
das
clc
mov
inc
jnp
cmpsl
and
inc
es
pop
or
sub
cmpsb
dec
inc
incb
cmpsb
js
js
dec
mov
sub
movsl
xchg
cld
sti
jp
or
std
daa
divl
mov
or
bound
xchg
or
sub
xor
pop
icebp
sub
pop
fwait
mov
aam
xchg
jmp
cmp
cmp
lcall
mov
or
out
or
sbb
subl
or
aas
jno
xchg
ljmp
adc
out
sbb
insl
out
sbb
cmp
pop
in
dec
mov
sbb
add
scas
cmp
or
jl
out
xchg
pop
push
add
cmpsl
cli
pop
adc
push
hlt
mov
adc
lods
mov
xor
mov
test
daa
or
sub
leave
divb
sub
lahf
out
addb
dec
fs
in
xchg
add
dec
or
jmp
pusha
push
sub
fnsave
adc
fisttps
rolb
xchg
mov
adc
or
popa
hlt
cld
or
leave
push
hlt
shll
in
aas
inc
into
aam
cmp
mov
mov
or
xor
or
mov
add
in
cld
test
into
rcl
fwait
sub
pop
push
jae
aad
dec
mov
stc
subb
jmp
ffree
cmp
mov
adc
jmp
push
shll
out
sarl
leave
xchg
ficompl
out
jno
cmp
xchg
mov
jmp
icebp
pop
jns
xlat
pop
sti
bound
int3
push
aas
je
and
ja
sub
nop
dec
and
psrlw
jg
test
add
or
in
push
movsb
into
or
mov
daa
pop
mov
popa
xlat
or
shll
mov
mov
int
insb
inc
hlt
movb
sbb
imul
mov
stc
inc
pop
pusha
sub
cmp
or
adc
inc
fucom
pop
push
push
and
jnp
divb
dec
cmc
shlb
jb
mov
mov
pop
inc
aas
push
in
jp
loope,pt
and
xlat
adc
nop
push
and
jmp
cmp
dec
fmul
dec
and
dec
add
push
lret
pop
fadd
mov
inc
repnz
mov
loope
jmp
dec
adc
sti
push
setle
fcmovbe
jno
dec
dec
int
mov
js
fldt
jge
loop
gs
jmp
test
xchg
leave
test
fists
mov
test
fsubrs
and
add
out
push
jo
fs
sbb
mov
sbb
add
push
inc
mov
push
into
insb
or
insb
cmp
mov
repz
cwtl
sbb
mov
pop
push
add
sbb
ds
sti
xchg
das
js
and
push
std
shlb
jae
lcall
mov
cmp
lret
scas
sub
push
sar
sti
lods
lds
xor
das
dec
and
xchg
das
in
mov
lahf
jp
enter
or
insb
mov
inc
popa
ss
out
ret
dec
imul
pusha
js,pt
aaa
fcmovnu
test
stc
adc
dec
adc
xor
pop
ret
pop
aas
pop
fneni(8087
mov
sbb
inc
jb
imul
nop
sub
jb
mov
xchg
mov
fbld
shrl
in
repz
pop
pushf
push
xor
outsb
mov
jmp
pop
mov
aaa
testb
addr16
ds
repz
daa
and
add
mov
push
loope
mov
mov
divb
int3
jb
jl
dec
adc
je
xor
sbbl
pop
adc
adc
ljmp
dec
xchg
inc
mov
or
push
adc
fcoml
icebp
cmp
pop
dec
or
jb
mov
gs
cs
mov
and
pop
fwait
sbb
sub
push
jb
add
adc
lcall
cmp
mov
rorb
shr
jmp
and
lock
mull
lret
inc
pop
xchg
scas
cld
negb
js
cmp
or
mov
xchg
es
iret
in
add
sti
pop
es
push
or
lret
je
ficomps
adc
cmpsl
js
pop
int
in
mov
movsb
push
mov
out
and
xchg
mov
cmp
cmp
fldcw
push
mov
jb
out
out
insb
inc
pop
das
inc
push
orl
lahf
in
push
int3
lods
push
xor
in
push
adc
es
in
pop
lahf
addr16
xor
negb
ret
inc
sbb
arpl
mov
fidivrl
lret
xchg
data16
xor
shrl
bound
jle
imulb
fisttps
dec
xor
push
inc
cld
sbb
scas
sub
cmp
das
dec
cmpsb
cmpsb
fwait
jo
cwtl
fimull
mov
xor
jae
filds
add
sbb
inc
popa
ds
jbe
pop
mul
adc
fs
sub
dec
mov
sarl
pusha
lea
fisubl
cmp
mov
fisttps
xchg
sub
push
popa
mov
jne
pop
imul
inc
fs
movsb
arpl
pop
insl
add
divl
iret
daa
insb
push
pop
pop
add
fs
adc
mov
fwait
arpl
je
pop
adc
xchg
outsb
loope
add
mov
movsb
mov
xor
fwait
repnz
sbb
clc
pop
xchg
fidivrs
mov
add
test
dec
inc
in
rorb
mov
fisubrs
lahf
and
xor
sbb
movsb
adc
pop
push
sti
test
cmp
dec
pop
sbb
pop
mov
xlat
fstpt
pop
xor
cli
sub
lock
sarb
mov
out
mov
xor
xlat
lcall
pop
data16
cmp
sbb
push
adc
push
leave
inc
fcomp
jb
sub
add
mov
push
pop
push
mov
jg
mov
pop
or
xchg
cwtl
lea
out
hlt
dec
in
pop
jae
lret
adcb
jne
mov
hlt
xchg
mov
cs
xor
fucomp
aam
dec
outsl
sub
cmpsb
repz
mov
jb
int
lret
dec
dec
fcoml
push
sbb
jecxz
out
xor
mov
sub
inc
arpl
cmc
mov
add
popa
cli
xchg
jbe
je
sahf
sbb
push
fdivr
sbb
iret
dec
jmp
cmp
mov
xchg
xor
mov
mov
dec
outsb
xchg
xchg
and
mov
out
dec
push
and
adc
xchg
mov
loopne
pop
inc
popf
outsl
sbb
and
xchg
in
sub
jae
je
adc
push
dec
ss
jge
fsubrs
cmp
and
lds
xor
adc
cmc
in
jl
add
mov
cmpb
pusha
jae
movsl
ljmp
call
iret
lea
push
inc
sbb
mov
inc
loopne
movsl
shrb
add
test
outsb
xchg
and
push
or
ds
enter
jmp
and
mov
xchg
popf
stos
push
repnz
bswap
inc
call
pushf
dec
pop
pop
bound
test
add
mov
in
adc
jl
out
test
mov
mov
lea
and
lret
fcmovbe
mov
rorb
jns
mov
push
dec
push
add
push
cli
mov
and
out
pop
pop
mov
pusha
fwait
pop
les
sbb
aad
mulps
mov
add
sbb
cltd
xchg
mov
mov
mov
dec
in
pop
and
int3
add
pop
add
loope
in
xchg
mov
add
push
cltd
daa
adc
fidivl
aam
mov
int3
xchg
sbb
dec
mov
stos
pop
faddp
cmc
mov
shrl
xchg
cmp
mov
push
movsl
out
in
ret
dec
sarb
fldcw
cmc
cmc
lods
data16
addr16
cmpsl
xchg
cmp
push
pop
fwait
mov
rcll
fsts
popa
dec
es
stos
hlt
adc
mov
mov
in
data16
add
xor
negl
xor
in
mov
jmp
pusha
testb
imul
xor
aad
jb
and
bound
jbe
inc
mov
leave
jmp
imul
cmp
in
sub
push
push
push
dec
test
dec
pusha
mov
imull
enter
jae
stc
inc
mov
xchg
and
inc
sbb
add
cmp
and
test
mov
insl
mov
push
or
insl
mov
fnstsw
mov
inc
fsubrl
adc
dec
imulb
sahf
xor
add
in
sbb
lods
loopne
cmpsl
jne
push
shll
fwait
mov
or
addl
and
cmp
out
mov
jmp
cmc
push
mov
mov
push
and
insl
loopne
push
clc
popa
lea
xchg
pusha
jbe
xchg
sub
decb
xchg
scas
or
or
push
mov
mov
gs
idivl
mov
pop
or
aaa
adc
adc
popf
or
jns
imul
add
pop
std
sub
std
hlt
jmp
lods
mov
dec
cmp
mov
mov
jge
adc
sahf
rol
mov
js
pop
inc
jns
into
mov
xlat
int
xor
ds
jb
and
repnz
mov
fisubl
mov
sub
dec
lods
inc
cmc
mov
dec
insb
fcompp
lret
popa
rcrl
je
fnstsw
fdivs
push
and
jne
xchg
cmp
cwtl
inc
dec
cmc
xor
jbe
pop
scas
bound
fs
mov
or
enter
addr16
mov
xchg
adc
js
mov
mov
sbb
xchg
xor
and
sub
adc
fistl
cmpsb
cmp
data16
jo
mov
scas
push
inc
mov
rcl
push
push
cs
ret
les
push
loopne
test
arpl
aad
cmpsb
mov
les
mov
scas
stc
cs
jb
fcomp
mov
mov
iret
cltd
or
mov
push
cmpsl
out
and
jle
add
rcrb
jbe
insb
add
shl
shll
out
in
popf
sbb
pop
sti
inc
add
jo
jmp
dec
aaa
in
daa
inc
or
add
mov
add
mov
mov
cmp
popf
or
push
adc
lret
mov
mov
adc
mov
incl
nop
mov
pop
jbe
mov
pop
lds
std
pop
lds
fstl
inc
push
test
sub
ret
inc
lahf
xor
or
add
sub
in
and
xchg
mov
mov
xor
lds
sbb
lret
arpl
sbb
jb
andl
mov
into
stos
cs
es
and
int3
ss
fisttps
movsl
or
xchg
xchg
ret
ficoml
sbb
mov
lds
fs
pop
jle
and
nop
out
cli
test
out
outsl
icebp
jle
and
push
add
test
mov
nop
cmp
pop
sub
add
movsb
sbb
sbb
mov
retw
push
jl
mov
psubusb
lret
testb
push
mov
filds
mov
shrl
adc
mov
shl
cmc
out
ret
dec
subl
ss
mov
sbb
out
cmp
inc
je
rcrb
aam
incl
jmp
repnz
mov
inc
mov
aam
push
movsl
push
out
push
inc
cs
sub
mov
sub
in
inc
and
mov
repnz
nop
idivl
insb
xchg
ljmp
pop
lcall
jp
out
repnz
lods
std
sbb
bound
scas
addr16
outsl
adc
cmp
jp
cmp
repnz
daa
mov
test
adc
aam
pushf
mov
dec
loopne
pop
mov
push
das
mov
sub
jbe
fimuls
jmp
fistps
push
mov
push
call
sub
jp
lock
xor
test
test
sub
jmp
std
xor
mov
test
ret
jnp
stos
push
popa
js
cmpsl
icebp
pop
add
call
iret
xor
ds
and
push
and
mov
and
cmp
push
loopne
and
inc
shll
add
bnd
xor
jecxz
enter
push
push
std
and
mov
adc
add
xchg
cmp
pop
push
jl
or
inc
mov
mov
mov
jbe
push
pop
subl
sbb
xor
jo
or
push
jb
push
inc
add
js
nop
in
or
cmp
mov
or
fmuls
sub
sub
fsubl
aas
push
cmp
cmp
dec
fwait
xor
xchg
aas
je
add
push
fs
sub
push
add
pop
xor
cmpb
mov
xchg
ret
mov
mov
add
push
push
sub
es
mov
inc
jnp
and
fisubs
cmp
pusha
in
cld
fistpl
js
mov
aaa
leave
out
xor
jno
cld
mov
mov
das
mov
mov
call
jo
dec
pusha
cmp
jo
xor
arpl
lcall
push
in
push
adc
jle
out
leave
cmp
ljmp
or
popf
xor
xchg
mov
mov
dec
push
sub
or
imul
div
add
sbb
jb
jne
push
dec
push
dec
sbb
out
test
dec
jg
gs
inc
icebp
add
push
or
add
lret
js
jmp
outsb
inc
cld
or
push
stc
or
xor
jge
movsl
int3
sbb
faddl
rclb
cmpsb
push
xchg
xchg
imul
in
push
stos
and
in
or
fs
stos
in
shl
rorb
jp
bound
lods
lret
outsb
and
sub
and
addl
sub
mov
add
sbb
jl
mov
sbb
ja
ljmp
jo
loop
jne
lods
lret
jo
or
ret
cmp
or
push
loop
shlb
mov
ret
push
sub
int
add
shlb
enter
and
int
hlt
mov
fisubrs
dec
gs
xlat
nop
lock
sub
adcl
jmp
into
inc
jb
dec
xchg
xrelease
inc
lret
cmp
or
addr16
popf
loopne
das
gs
mov
sti
xchg
mov
ja
test
xchg
xchg
hlt
xchg
rcll
mov
ss
xor
jle
xchg
xlat
lahf
ss
addr16
push
popa
pop
cwtl
imul
dec
and
or
stos
pop
gs
test
mov
cmpsb
int
pop
clc
jo
shl
lahf
adc
and
pop
out
sbbl
jecxz
xor
and
sbb
cmp
or
xchg
jns
outsb
in
and
cmp
fs
push
xor
cmpsb
sub
add
pop
sub
imul
shrl
cld
inc
mov
cld
movsl
push
sbb
sti
cltd
cltd
scas
movsl
mov
push
jne
out
inc
call
dec
stc
scas
shrl
inc
push
mov
and
pop
pop
mov
adc
test
mov
popa
cltd
pop
fldl
add
cmp
jp
shlb
mov
lcall
pop
test
add
insl
scas
mov
jecxz
outsb
shlb
inc
mov
push
pushf
outsl
or
cmpb
jmp
dec
jp
pop
mov
inc
push
push
jle
push
sbb
jb
jl
cmp
iret
insl
add
xchg
lods
popf
lea
or
jmp
clc
scas
push
ret
sahf
sub
jg
push
mov
xor
lahf
gs
cmp
xchg
xor
mov
ret
jbe
jmp
pop
pop
cmp
and
add
fidivrl
loope
dec
addb
scas
mov
xchg
xchg
fidivs
shll
addb
jae
movb
stc
sub
push
jo
shl
jg
and
arpl
add
insb
push
shr
cmpb
cmp
repnz
das
jb
xor
ja
mov
jno
lock
jns
es
out
push
jp
push
lret
fs
push
test
sti
dec
fiaddl
push
das
in
int3
into
stos
and
fiaddl
jno
mov
call
push
sub
data16
xchg
sbb
xchg
leave
mov
mov
push
pop
pop
jecxz
add
pop
mov
lea
and
adc
fiadds
xor
xchg
mov
fstps
jb
das
mov
cmp
xlat
mov
leave
add
mov
cltd
or
pop
adc
pop
push
cmp
push
or
mov
adc
lods
mov
lahf
in
mov
dec
inc
test
jb
inc
cmpsl
dec
fists
mov
sub
push
mov
aad
inc
push
mov
ss
jecxz
filds
pop
sub
test
or
inc
aad
test
jecxz
xacquire
rcll
leave
inc
and
leave
das
xor
pop
jnp
test
mov
stos
ljmp
scas
aas
mov
loope
repnz
push
push
pop
mov
sub
push
pushf
imul
and
in
movb
jg
mov
fs
lock
pop
pop
mov
test
sahf
xor
call
xchg
jnp
idivl
cmp
lods
mov
add
in
mov
mov
test
push
jb
mov
aad
pushf
lock
and
pop
out
mov
fsubr
js
out
pop
fadds
sbb
ret
shll
pop
leave
call
cltd
leave
arpl
jp
adc
add
xor
pop
mov
mov
enter
sub
cltd
out
lret
and
lds
lods
mov
test
lcall
dec
imul
jmp
mov
add
outsb
cli
bound
daa
mov
push
in
mov
imul
mov
cmovno
lods
mov
iret
loope
sbbl
push
aam
mov
jg
jmp
or
cmp
sub
test
stos
or
in
push
sub
iret
addr16
sub
stos
jl
bound
loop
dec
jg
inc
jno
dec
xlat
pop
pop
push
imul
loop
popa
push
mov
ss
jno
es
sub
jge
xor
jp
mov
cld
test
xor
pop
pop
pushf
push
mov
dec
inc
sub
lahf
stos
bound
xchg
es
insb
fcoml
push
mov
sbb
mov
dec
hlt
jbe
sbbl
fisubrs
shrl
mov
sbb
fnstsw
das
icebp
addr16
push
cs
cmp
mov
cmpsl
outsl
and
test
xchg
ret
xor
aad
sti
aaa
notl
andb
add
xchg
mov
ja
pop
sti
add
pop
fisubrl
lcall
mov
and
daa
pop
or
mov
scas
mov
scas
mov
es
popf
pushf
push
or
and
adc
lret
cmpsb
jne
cltd
hlt
in
sar
cs
ljmp
push
and
mov
inc
and
popa
arpl
add
fwait
push
enter
imul
lea
sbb
and
subb
stc
loop
repz
sub
inc
sahf
cmp
pusha
popa
cmc
or
pop
or
and
adc
subl
mov
cmp
lcall
mov
push
sub
jle
neg
or
cs
daa
sti
popa
pop
ds
mov
daa
notl
rcl
outsl
lea
aaa
ja
out
lret
push
movsl
pop
scas
imul
stc
push
loope
bound
mov
ret
les
pop
btr
scas
pop
mov
or
mov
jbe
int3
scas
mov
and
movb
flds
fsubl
lahf
ds
mov
dec
lods
push
xchg
or
lret
hlt
cmc
dec
push
mov
sub
js
adc
shrl
dec
loopne
inc
adc
pop
or
psubusw
imul
and
es
jg
adcb
pushf
push
mov
ret
daa
and
filds
leave
loopne
adc
mov
aas
mov
adc
sarl
sbb
enter
stc
lret
add
push
dec
mull
test
das
mov
jp
inc
out
xchg
clc
xor
mov
cwtl
repnz
pop
jnp
shl
aad
adc
mov
dec
cmpsl
pop
sub
outsb
lret
push
test
inc
ror
fs
pop
cltd
jmp
imul
add
fisttpl
jg
xchg
or
inc
sbbl
mov
ret
rorb
mov
das
adc
cltd
sub
or
inc
mov
js
cmpsb
leave
mov
push
shl
xor
in
sbb
inc
or
lods
adc
cmp
cwtl
dec
adc
jnp
mov
ja
jl
xchg
jnp
adcl
or
fsubl
fucomip
inc
je
add
pop
in
xor
adc
mov
mov
enter
inc
mov
inc
lahf
stos
enter
imul
orl
imul
dec
jns
loope
imul
sbb
imul
adc
scas
adc
adc
sbb
repnz
adc
push
insb
cmp
dec
prefetch
or
pop
lea
inc
jb
mov
push
icebp
mov
push
into
push
cmpsb
mov
scas
or
add
test
cld
into
sbb
popf
pop
xor
mov
out
add
add
into
mov
push
sub
ds
inc
cld
das
mov
push
add
xor
push
mov
fcomip
or
mov
cmp
pop
imul
lods
call
fs
push
xor
cmc
pop
jb
push
xchg
sahf
add
sbb
aas
daa
rcrb
pushf
xor
push
fxch
aaa
pop
lret
pushf
stos
out
icebp
xchg
lahf
push
fwait
lret
enter
pusha
push
ja
inc
ficomps
or
bound
pop
lock
inc
mov
mov
xor
push
jle
dec
lahf
imul
call
out
xchg
mov
nop
int
jno
pop
adc
lea
mov
loopne
leave
js
xchg
fisubrl
mov
jmp
cltd
cmpsb
pop
cmp
insl
mov
mov
add
pusha
stc
adc
inc
jne
lret
xchg
dec
sbb
icebp
push
xchg
outsb
inc
add
ja
sub
out
jbe
js
int3
fisubrl
adc
cltd
dec
daa
movsb
xchg
cmp
or
sbb
mov
xchg
jo
in
ret
xchg
repz
adc
out
mov
xchg
jg
out
ja
xchg
cmpsl
ror
sub
sbb
ret
pusha
jo
jl
loopne
sbb
movsl
mov
cmpsb
jbe
out
sbb
xchg
add
ljmp
fsub
cld
in
sub
cli
mov
adc
mov
mov
lods
les
dec
movsb
xchg
data16
lods
fimull
int
repnz
pop
data16
frstor
jo
xor
jp
std
ret
loopne
dec
cmpsb
push
aam
mov
inc
aam
pop
je
inc
dec
adc
xchg
push
sarb
push
push
xor
mov
jbe
dec
mov
pop
addl
mov
jg
xchg
mov
mov
mov
pop
bound
hlt
fcomps
mov
ret
sub
pop
pop
or
bound
into
mov
push
sub
or
xor
xchg
sub
mov
mov
loope
sub
cmp
jns
outsb
mov
mov
or
lods
mov
in
in
sub
adcb
jl
scas
shrb
add
jae
hlt
out
stc
dec
and
or
cmp
addl
sbb
rcrb
add
pop
outsl
xchg
cmpsb
bound
addl
jmp
or
gs
push
adc
inc
jmp
or
enter
rcrb
in
mov
xlat
sub
xorl
cmp
push
jo
and
mov
xorl
cld
jns
xor
sub
xchg
and
ret
mov
cs
and
push
adc
aas
fimuls
idivb
adc
adcb
push
adc
mov
test
test
cmp
ja
sub
into
inc
mov
xor
cmp
jp
stc
push
movsl
aam
in
push
dec
pusha
or
xchg
ja
icebp
fldt
loope
mov
xor
ljmp
imul
addr16
push
jmp
lret
sbb
pop
dec
frstor
dec
outsl
pop
jne
push
clc
into
push
dec
mov
xchg
es
xchg
dec
dec
pop
jo
mov
lret
imul
mov
leave
cmp
inc
jge
loope
addl
sub
std
orb
sbb
and
imul
lahf
jle
pop
mov
ljmp
xchg
mov
xchg
adc
xchg
in
stos
mov
loopne
inc
push
and
or
stos
fstps
fidivrl
sub
sbb
cmpsb
xlat
adc
loopne
inc
jbe
cmp
fstps
pop
call
ret
and
mov
data16
jb
push
in
lods
mov
jecxz
out
or
rcrb
stos
inc
or
lcall
fcomp
inc
mov
dec
adc
sti
sbb
insl
push
push
mov
dec
aas
data16
push
pop
aas
xchg
xor
out
repz
stc
icebp
adc
scas
lcall
lock
pop
leave
push
push
adc
out
out
inc
into
adc
cmpsb
sahf
pop
sahf
test
outsb
inc
int3
stos
add
jnp
outsb
xchg
movsl
dec
add
into
rcll
dec
jns
decl
test
xchg
dec
xchg
dec
adc
sti
add
jae
imul
insb
cmc
dec
or
pop
dec
xor
jo
inc
mov
scas
mov
scas
inc
or
pop
jno
movsb
add
mov
icebp
mov
jecxz
scas
cmp
js
fucomi
ret
iret
xor
cld
es
clc
dec
out
popa
loopne
aad
ljmp
or
ret
in
jmp
inc
mov
int
pop
push
ja
outsb
dec
jns
dec
test
jnp
ret
stos
les
jae
add
mov
divl
lea
sbb
mov
jge
mov
jo
cwtl
js
inc
and
xchg
pop
xor
lret
ret
lcall
sahf
ja
scas
pop
inc
xchg
dec
inc
adc
mov
mov
and
es
cmp
lds
outsb
adc
pop
loopne
dec
repnz
add
sbb
out
jns
or
aaa
syscall
inc
loopne
inc
sub
xor
add
rclb
loop
jb
nop
lcall
imul
int3
or
cld
aas
dec
jnp
pop
mov
or
cmp
ret
jge
adc
mov
cs
addr16
subps
mov
inc
dec
jns
test
add
sbb
cs
rcl
push
add
cmp
fwait
jbe
fwait
stos
outsl
outsb
in
je
in
inc
loope
mov
repz
sbb
xor
pushf
jecxz
mul
jno
outsl
ljmp
sahf
mov
das
sbb
gs
jl
pushf
add
mov
dec
mov
fimuls
ljmp
add
ret
and
movsb
scas
jp
mov
mov
xor
xor
mov
aad
jns
adc
mov
pushf
movntps
gs
fildll
add
jb
add
cmp
fisubrl
cmp
ficoml
mov
mov
xor
fs
mov
cmpsl
jb
mov
xchg
movsl
jmp
dec
negb
push
lcall
dec
push
inc
sbb
pushf
and
inc
push
nop
lock
cmp
mov
imul
insb
sub
cmc
jb
jmp
cltd
into
add
call
mov
es
xor
mov
orb
sbb
xchg
shrl
fs
dec
sbb
cmp
es
push
lea
fcompl
cmp
ret
sub
nop
xor
sbb
mov
loop
lret
adc
dec
div
xor
xor
aam
lds
cmp
cltd
jb
jecxz
out
aaa
dec
pop
push
dec
push
mov
dec
add
outsb
in
jbe
stos
and
xchg
shr
cmc
arpl
movsb
sub
mov
sub
ja
jge
add
imul
leave
jb
xchg
jmp
cli
in
sbb
inc
pop
ja
sub
mov
cs
dec
repnz
xor
stc
and
or
aaa
pusha
jnp
imul
aas
shlb
in
xor
rol
or
xchg
ret
and
sbb
xchg
ss
fadd
cs
mov
aad
jmp
popf
fwait
sub
cld
push
adc
fsubrs
cmp
mov
sbb
jp
rol
negb
push
sahf
rcr
pop
pop
mov
add
push
xchg
scas
imul
mulb
push
and
push
pop
pop
jo
and
imul
mov
or
push
int3
jae
in
loopne
jl
xor
les
mov
mov
cmp
sub
je
ljmp
testl
dec
mov
repnz
adc
cmp
into
stos
mov
push
adc
das
addr16
ss
jo
loopne
add
inc
and
and
ds
and
dec
data16
mov
dec
leave
inc
jp
push
movsb
xlat
ljmp
daa
adc
pop
lret
adc
rcrl
and
mov
fimuls
cmpsl
mov
xor
imull
loopne
loop
add
dec
push
sbb
outsb
add
arpl
addr16
xchg
mov
push
in
lods
iret
mov
insl
repz
adc
pop
and
mov
orb
movsl
les
in
test
jnp
dec
repz
jb
imul
or
fs
lds
scas
arpl
add
lcall
xor
add
and
jl
xchg
mov
pop
mov
sub
jmp
nop
adc
add
jg
mov
pop
mov
xor
popf
pop
test
dec
jbe
jecxz
mov
xor
std
test
sub
mov
mulb
push
push
jbe
je
mov
sbb
sbb
insl
mov
mov
push
stc
pop
push
ret
fldl2t
lock
or
lods
fildll
decb
cmp
lock
scas
sbb
mov
cmp
divl
push
sub
pop
lcall
stc
cmp
push
test
into
ja
sub
mov
lret
aam
shrl
inc
jl
xchg
add
pop
je
and
mov
push
sub
and
popf
iret
inc
in
ret
and
fsqrt
inc
ja
dec
int3
push
or
js
fisubrl
ljmp
push
lea
jge
xor
or
inc
sbb
or
lcall
pop
add
ja
xchg
cmpsl
pushf
dec
or
out
xchg
movsl
cmp
xchg
inc
movsl
xchg
hlt
mov
mov
mov
out
mov
fsts
or
rcll
jb
lcall
fsub
mov
sahf
lods
roll
inc
icebp
retw
adc
cmp
mov
adc
xor
inc
stc
test
adc
movsb
xchg
push
xchg
testl
mov
leave
je
push
jno
sub
mul
push
xor
jne
stc
push
mov
test
mov
jmp
push
mov
push
outsl
or
rcl
or
dec
adc
popa
sbb
cmpb
ss
icebp
jmp
lock
sub
lods
push
aaa
das
pop
loopne
loop
dec
sub
stc
jge
fwait
repnz
xchg
pushf
rorl
mov
or
cs
add
add
xchg
out
sti
add
and
cmp
sbbb
cmp
fucomp
ret
push
sbb
scas
push
xchg
pushf
sub
fisubrl
push
cmp
fnsetpm(287
push
mov
hlt
jns
jg
out
mov
faddl
das
adc
aaa
mov
psubq
aas
gs
mov
sbb
xchg
push
cmp
daa
insl
loop
xchg
mov
xchg
mov
xchg
stos
adc
leave
fs
enter
lds
push
shl
or
mov
xlat
shll
xchg
std
mov
out
sub
lcall
add
mov
lahf
jle
mov
shll
push
jnp
test
mov
mov
ja
ret
mov
jg
fwait
loop
add
cltd
sub
sub
add
mov
push
les
push
sbbl
cmp
leave
mov
add
mov
jp
imul
pop
pushl
mov
add
xchg
arpl
jns
cmp
pop
ds
jnp
ss
xor
xchg
pop
insl
pop
cs
xor
adc
movsl
dec
mov
sarb
and
hlt
cmpsb
pop
pop
in
push
push
push
sti
xchg
xchg
mov
xlat
mov
jmp
sub
sqrtps
sbb
push
jge
fstps
xor
push
fcmovnu
cmpsb
out
pop
cld
test
pop
jno
xchg
jp
xchg
pop
xchg
cmp
dec
je
pop
sarl
in
ljmp
shlb
jp
fidivs
ss
dec
fwait
popa
mov
nop
lcall
cwtl
imull
movsb
cmp
fwait
xor
inc
push
add
ljmp
shlb
add
mov
popa
mov
inc
cmp
loopne
mov
inc
or
leave
mov
fdivrs
sbb
inc
lds
sub
dec
scas
stos
jle
in
add
jbe
jbe
mov
and
sahf
outsl
pop
jno,pn
push
mov
adc
push
scas
ror
gs
jmp
mov
repnz
je
push
pop
outsl
add
inc
addl
test
or
bound
or
in
push
mov
adc
ds
add
daa
mov
out
hlt
lcall
sti
mov
or
aam
sub
test
cmp
pop
xchg
pop
test
cwtl
cmc
mov
cltd
jns
adc
xchg
pop
int3
pop
ja
in
jp
mov
negl
mov
add
inc
or
cwtl
sbb
adc
dec
mov
mov
push
sti
and
xlat
testb
xor
gs
and
mov
mov
test
movsl
push
imul
jns
jge
jbe
sbb
dec
std
in
jle
or
mov
fwait
jg
daa
adc
in
mov
loopne
ret
inc
jg
sub
sub
mov
call
ds
sti
jno
in
mov
pop
push
jno
pop
insl
mov
leave
xor
enter
into
cltd
cmp
fsubs
xchg
or
sbb
pop
std
add
pop
les
repz
outsb
pause
repz
push
loop
add
outsb
xor
xchg
ljmp
ljmp
int3
imull
xor
xor
fs
in
sahf
add
adc
sbb
shll
mov
jecxz
int3
xlat
arpl
cmp
pop
int
mov
mov
sbb
cmp
mov
negl
push
or
push
cmpsl
jg
sbb
sub
dec
fmull
sbb
cli
mov
rorb
cmp
xchg
jo
aaa
and
sbb
ret
ja
jg
sbb
iret
outsl
mov
loope
test
imull
das
sub
lds
jno
rcl
xor
and
adc
dec
xor
inc
adc
fsubl
sbb
mov
movsb
js
std
filds
dec
pop
add
lods
dec
dec
call
cmp
pop
fwait
push
mov
leave
mov
daa
push
shr
bnd
imul
push
cmp
repz
loop
ja
loop
mov
sbb
or
jns
into
sub
aas
adc
xchg
mov
fiaddl
xchg
and
fidivrl
cmp
inc
rcl
jecxz
lds
in
push
lock
push
dec
push
stc
in
pop
and
dec
lret
rorb
or
mov
add
sub
mov
sbb
pop
jmp
nop
mov
pop
rcr
mov
xchg
mov
dec
jg
jle
mov
lcall
dec
sbb
push
fdivr
loop
adc
add
andb
icebp
adc
mov
movsb
mov
push
out
cmpsl
fistl
testb
xchg
leave
xchg
es
iret
jbe
mov
cs
test
xor
mov
sbb
push
dec
mov
push
pushf
int3
or
sarl
or
lods
inc
inc
mov
pusha
in
adc
popf
addr16
mov
push
pop
test
sub
enter
mov
sbb
scas
dec
mul
dec
lea
loop
jge
bound
sahf
mov
leave
and
cmpsl
push
popa
or
enter
popa
rol
iret
pop
shll
roll
cltd
div
cwtl
inc
xor
movsb
hlt
add
sahf
test
jno
out
sub
xlat
jmp
fldcw
imul
add
push
push
xlat
fsubl
inc
xchg
cmpsl
into
stos
lret
in
push
lds
rolb
jne
sbb
cli
add
nop
lods
js
roll
push
jmp
add
int3
aas
mov
fs
adcb
mov
mov
sub
jl
push
mov
lods
mov
lahf
dec
iret
bound
cli
adc
xchg
lds
push
ss
sub
xor
adc
out
jp
push
mov
pop
push
or
mov
mov
cli
jb
loope
insb
adc
iret
xchg
sub
mov
adc
iret
push
mov
add
pop
test
mov
push
inc
fidivl
pop
out
push
jmp
inc
dec
dec
adc
xlat
xchg
enter
lods
xchg
add
add
aaa
fsub
add
insl
popa
push
jno
dec
fs
in
mov
adc
pop
jp
enter
scas
lock
cs
das
xlat
mov
enter
test
or
or
jmp
mov
dec
and
dec
clc
and
jl
adc
cmp
pop
add
ja
pop
sbb
sbb
pop
sbb
jno
lods
hlt
dec
ss
repnz
rorl
xchg
cmc
icebp
jns
and
dec
cltd
pop
lods
mov
xchg
ror
sbb
std
xchg
dec
sbb
outsb
in
and
lds
sar
icebp
in
cmp
push
inc
orl
dec
rclb
push
jle
lds
outsl
mov
sub
js
lret
out
daa
inc
mov
pushf
jge
push
vcvtdq2ps
and
pop
dec
ljmp
cwtl
mov
dec
int3
jns
mov
inc
xchg
or
out
mov
push
outsb
sbb
inc
bnd
ds
xchg
jge
jb
lret
mov
daa
mov
xor
lret
cmp
lahf
mov
sub
testb
cmp
insb
or
cmc
scas
or
cmpsb
cmp
addr16
inc
pop
inc
test
sahf
xchg
mov
rolb
jecxz
or
xchg
jb
fmuls
sub
pop
lods
jg
sbb
sbbl
flds
fcompl
nop
adc
add
mov
or
mov
mov
and
arpl
lds
gs
sbb
mov
jmp
enter
jecxz
leave
jg
adc
insb
xor
je
pop
out
mov
cmpsb
or
sub
pop
mov
dec
call
sub
mov
jo
mov
cmp
js
cmp
push
pusha
inc
dec
push
pop
and
jns
test
das
add
and
lock
xchg
sbb
push
loopne
cmp
xrelease
mov
out
mov
xor
movsl
fdivrp
mov
mov
aaa
mov
iret
xlat
pop
lock
mov
sub
ret
jge
popf
insl
pop
pop
lods
jl
dec
lock
sahf
pop
aad
and
fnsave
clc
aam
cmc
out
test
xchg
rorb
mov
xor
xor
lcall
xchg
jmp
hlt
cli
pop
pop
add
dec
fcoms
add
cltd
mov
rcl
xor
push
gs
in
int
rcrl
cmpsl
dec
add
mov
rcr
stc
fdivs
mov
mov
sti
int
aad
pusha
dec
les
cmpl
sub
pushf
rol
mov
mov
adc
sbb
cmp
and
pop
or
lds
mov
xor
movsb
or
outsb
daa
popa
inc
lds
push
imul
push
fwait
insl
mov
cmpsl
divb
mov
daa
ret
sbb
in
gs
icebp
mov
sbb
push
pop
sbb
es
je
cmp
push
pop
std
dec
sbb
push
mov
add
add
inc
cmp
sahf
pop
jle
jg,pt
into
add
loop
sahf
add
lahf
mov
adc
push
scas
xor
cli
mov
push
lahf
cmp
sbb
xchg
repz
popf
pop
int3
cli
popa
or
mov
mov
mov
push
dec
scas
or
xor
cs
and
ljmp
movsl
cltd
js
divl
cmc
mov
push
insl
sub
xor
sub
ss
in
fistl
adc
aam
rclb
cli
mov
mov
jge
dec
stc
jbe
ret
ficoml
xor
scas
push
rclb
mov
mov
mov
mov
lret
add
out
rorb
outsl
es
cmp
push
out
in
ret
and
push
notl
imul
repz
push
and
out
mov
leave
cmp
js
push
stos
out
je
push
cs
jg
nop
sbbl
loope
and
fdivs
xor
dec
rcrb
fwait
shlb
xchg
ljmp
ret
mov
dec
addr16
loope
inc
jp
add
sbb
xchg
pop
insb
cld
xor
jecxz
les
popf
call
dec
icebp
test
call
cltd
or
or
jnp
jbe
adc
cmp
mov
push
jae
mov
sub
imul
mov
xor
xorl
repz
ds
adc
xchg
cmc
popa
mov
xor
shrb
mov
xchg
pop
mov
jl
push
xchg
lret
pop
mov
sbb
js
sub
je
and
scas
cmp
ficoms
mov
out
popa
movzbl
or
je
jnp
cli
movsb
mov
ds
pop
ja
fisubrl
hlt
js
mov
mov
mov
int
aam
xor
push
pop
push
jns
pop
and
xlat
pop
sbb
fstps
mov
addr16
add
aas
cmpsb
mov
scas
cmpsb
stos
cltd
sbb
outsl
out
pop
ljmp
push
dec
sti
pusha
dec
xchg
jge
int3
cmc
ret
mov
cmp
jnp,pt
sub
aam
jne
hlt
push
call
fisttpl
dec
fldt
push
jnp
dec
dec
arpl
aas
jbe
pop
jge
mov
push
cmc
jne
arpl
xchg
movsl
repz
subl
lea
mov
adc
sub
daa
imul
and
inc
mov
incl
push
je
stc
repnz
ret
mov
xchg
sub
inc
sbb
dec
cli
in
int
inc
add
sahf
jmp
pop
ds
push
dec
stc
aam
xchg
sub
jae
sub
cmp
pop
sub
adc
push
mov
mov
dec
fldcw
xchg
popa
inc
dec
mov
leave
ss
inc
js
push
cmp
mov
test
fisttpl
fisttpl
xchg
iret
adc
push
adc
loop
sbb
push
jmp
out
pop
mov
push
xchg
in
and
or
popa
jl
imul
fcom
xor
adc
adc
pop
scas
push
dec
dec
rol
dec
pusha
mull
dec
insb
pushf
push
es
inc
mov
mov
xchg
inc
xor
jecxz
andb
sub
push
bound
push
xor
into
lret
sbb
in
clc
cli
dec
hlt
inc
aad
sub
cltd
push
mov
icebp
inc
test
fdivs
inc
sbb
or
ja
jecxz
and
rclb
xchg
lods
and
push
je
or
lea
and
xor
dec
cld
push
cmp
sub
and
scas
sub
repnz
xlat
xchg
sub
std
insb
and
pop
mov
or
push
xchg
dec
imul
stos
in
or
bound
xchg
call
push
movsb
xchg
mov
aad
jle
in
xor
xor
push
sbb
adc
push
mov
int3
mov
dec
sbb
inc
mov
sbb
mov
mov
movsb
jmpw
mov
mov
icebp
sub
push
cmp
jl
mov
dec
roll
jbe
cmc
iret
adc
imul
cmpsl
clc
adc
fildl
jmp
lods
stos
lock
js
pusha
mov
bound
xchg
aam
jl
inc
xchg
and
je
in
dec
mov
add
cli
cmpl
movl
test
mov
hlt
xor
imul
mov
jbe
mov
or
mov
mov
rorl
shrb
das
and
adcb
clc
and
mov
mov
mov
cmpsl
in
and
lahf
push
lods
cli
inc
push
sti
lds
xchg
pop
sub
push
xor
test
mov
rorb
mov
mov
test
xchg
cltd
scas
test
loope
mov
cltd
nop
mov
fisttpll
imul
fsubr
lcall
in
inc
cli
and
jno
jae
dec
outsb
stos
in
aaa
sub
push
notb
xchg
push
sti
aam
push
pop
fiaddl
mov
ljmp
xor
sarl
sub
fnsave
mov
cmp
es
dec
push
les
adcb
fs
and
imul
mov
shlb
cmp
fidivrl
lods
push
imull
aaa
add
call
aas
sub
movsb
test
ja
cmp
mov
dec
int
inc
xor
cmp
add
push
mov
jb
dec
adc
dec
pop
into
push
aaa
pop
addl
dec
jo
insb
jl
aas
repz
stos
outsl
in
lret
fiaddl
push
out
cmp
sarl
js
jae
imull
out
repnz
je
loop
fs
sti
mov
cmpsb
pop
jl
dec
or
shlb
cld
ljmp
mov
sub
clc
push
hlt
mov
mov
xchg
pop
ja
std
jp
mov
loop
mov
adc
sbb
movsl
inc
dec
push
xchg
dec
mov
xchg
sbb
jb
dec
repnz
dec
inc
sub
cmp
imul
jp
add
add
mov
mov
lahf
ds
fwait
inc
add
pop
xchg
lahf
daa
stos
pop
stc
scas
or
add
dec
je
std
mov
or
cmp
aaa
fs
dec
push
in
mov
cmp
ficompl
mov
jmp
adc
mov
push
les
in
jno
test
jb
cmpsl
mov
dec
mov
pop
leave
inc
repnz
jg
dec
clc
pop
and
jo
outsb
dec
add
pushf
cli
arpl
mov
sbb
pop
faddl
je
movsb
int
lahf
xchg
xchg
lods
nop
jnp
andb
mov
mov
pop
mov
mov
dec
dec
jo
jmp
push
jo
cmp
clc
in
xor
xor
test
mov
pop
les
add
out
lret
inc
or
clc
les
ret
arpl
cmp
mov
cmp
adc
ds
fbld
or
xchg
addb
out
adc
xchg
jo
push
test
add
jmp
iret
cmp
pushaw
out
cmp
data16
xor
out
pop
xor
cmpsl
jns,pn
mov
shlb
addr16
adc
sub
mov
mov
mov
adc
cltd
int
xor
nop
ss
cli
mov
jecxz
inc
dec
lahf
dec
and
jae
sub
push
sti
xor
push
cmp
fmull
mov
mov
pop
cmpsl
cmp
fbstp
jne
mov
adc
mov
xchg
dec
jp
ret
cmpsl
mov
adc
loop
add
ret
pusha
cmpsb
gs
mov
adc
xchg
data16
xchg
xor
mov
mov
es
xor
sbb
fstpt
sub
xchg
sub
movsl
call
cmp
pop
jp
xor
lds
jnp
dec
pusha
jo
xchg
and
sbb
mov
pusha
lods
pop
or
mov
adc
fs
mov
in
movsb
jns
into
sub
or
int3
pop
pop
sub
jbe
or
xor
mov
pop
pminsw
loopne
push
xorb
inc
jnp
jae
xor
sbb
enter
lahf
repnz
inc
push
daa
mov
fiadds
mov
xchg
pop
push
arpl
test
or
jg
rcrb
sbb
out
jo
movntq
out
stc
lret
xchg
jmp
or
aad
cmpsl
push
pop
adc
cmp
jg
cmp
clc
lds
sahf
adc
jo
mov
push
or
jl
adc
data16
aam
mov
das
ljmp
and
js
fisubrl
add
xor
and
outsb
jnp
add
push
fisttpl
push
push
cmp
insl
dec
cmp
inc
addl
or
mov
rcr
sbb
add
loop
cld
lret
aad
mov
jb
sub
jnp
stos
ds
xchg
adc
int3
loop
pop
mov
das
imul
fdivs
ds
add
rcrb
xchg
cmp
sub
enter
sub
sub
rol
cmp
inc
sub
jae
into
adcb
jmp
je
sbb
rolb
and
movb
mov
push
icebp
nop
xor
fsubrs
ljmp
sbb
mov
jbe
ret
bnd
loopne
jle
sahf
add
insb
inc
subl
sbb
cmc
mov
push
imul
mov
cwtl
xchg
cmp
das
cli
mov
mov
and
and
ret
xor
xor
and
push
sahf
and
jbe
inc
shll
inc
push
les
pop
add
jmp
jo
nop
or
lahf
pop
xchg
mov
adc
push
mov
icebp
or
lahf
cwtl
in
mov
rcl
lods
and
sub
mov
push
gs
or
mov
fstl
bound
inc
xor
sub
fistpll
jmp
cltd
xor
push
mov
mov
repz
jg
stos
xlat
add
or
adc
mov
outsb
movsb
push
lock
or
pop
or
scas
sbb
iret
data16
mov
dec
cs
dec
andl
cmp
push
add
outsl
lock
inc
or
pop
jge
aad
addr16
pop
cmc
gs
shl
es
enter
dec
sub
ficompl
inc
aam
pop
adc
insl
mov
push
xchg
fildll
fisubrl
cmp
dec
xchg
and
cmpsb
xor
incl
and
pop
int3
pcmpeqw
int3
cwtl
fcoms
imul
mov
jb
pop
push
sub
push
mov
rdtsc
jo
dec
divl
out
mov
push
cltd
imull
xchg
aaa
popa
mov
mov
out
mov
mov
push
outsl
sbb
outsl
push
fidivs
leave
add
cmpsl
out
lods
sub
fsts
loop
xchg
pushf
xchg
icebp
mov
dec
ljmp
fldt
fs
cmpl
inc
insb
xor
pop
movsb
clc
lds
jle
push
movsl
test
dec
xor
dec
cmpsb
jne
movsb
out
dec
sub
xchg
sarb
mov
inc
fwait
in
ljmp
sub
and
sub
mov
addr16
rdtsc
sub
push
dec
filds
xor
mov
in
xor
pop
iret
push
in
jne
add
aaa
jnp
push
mov
daa
mov
sub
getsec
inc
mov
adc
out
xor
test
aad
out
adc
jno
in
ret
pusha
movsb
fwait
dec
repnz
rorl
add
mov
mov
jecxz
mov
xchg
mov
dec
push
mov
pop
lahf
js
mov
cmp
jno
flds
cld
jae
js
lcall
xor
stc
add
dec
neg
jmp
push
mov
and
xor
fiadds
loop
cmpb
push
pop
lea
push
cs
fbstp
and
push
jbe
pop
cmpb
sub
daa
push
mov
sti
sahf
insb
test
inc
out
js
or
mov
mov
add
adc
fs
jns
mov
or
gs
out
ret
clc
push
mov
inc
xlat
jns
pop
rcrb
cltd
das
inc
xor
popf
cmp
inc
mov
ret
and
jb
xor
lods
cwtl
insl
mov
pusha
xchg
mov
sbb
mov
jno
cld
cmpsb
or
ret
add
or
xchg
arpl
dec
pop
inc
push
pop
sub
add
daa
inc
pop
out
fdivl
lret
insb
xchg
rolw
cmp
sbbb
jnp
fcoms
xchg
adc
mov
loope
push
xor
mov
pushf
movsl
inc
xchg
test
ss
rcrb
scas
xorb
stos
or
fmul
inc
dec
push
push
shrl
mov
clc
mov
or
inc
fsubs
mov
into
mov
popf
aas
inc
daa
jae
outsb
push
or
lahf
push
jle
pop
sarb
clc
push
ja
sbb
xlat
repz
xchg
push
mov
lock
inc
push
jns
fidivs
sbb
mov
pop
jmp
sar
and
lods
movsb
lcall
mov
inc
fs
lcall
push
aam
rorl
cmovl
ss
cmp
ds
xchg
lea
shl
ljmp
mov
pushf
sbb
or
jo
pop
fidivl
sti
arpl
mov
adc
orb
cmp
je
cltd
xchg
adc
in
out
push
bound
jl
pop
add
lea
add
mov
stc
mov
rorl
cmp
addb
dec
xor
lds
ret
mov
or
outsb
jge
mov
push
enter
ja
test
pop
inc
leave
mov
sbbl
loope
mov
mov
push
cltd
in
xor
inc
xor
xchg
fildl
push
or
xchg
ljmp
icebp
ret
jg
xchg
inc
inc
jge
pop
push
inc
fldl
cltd
shrl
jno
ss
inc
xchg
stc
xchg
lret
xchg
popf
test
and
fnsave
test
rcrl
or
aas
cld
out
mov
pop
mov
aad
mov
lahf
lret
fldcw
jno
pop
pop
negl
sub
enter
lods
stos
mov
shll
aas
cwtl
jae
fstps
pop
jl
mov
inc
vcmpss
xor
adc
insl
les
jne
rcrl
mov
lahf
lret
jb
sub
imul
mov
shrl
in
ss
dec
fisubrl
xlat
shlb
fcmovu
sbb
popa
into
pop
jmp
icebp
pop
lock
imull
ret
or
sbbl
jle
and
push
lds
stos
ljmp
movsb
sbb
ret
push
adc
addb
jno
cmp
test
xchg
jle
pop
or
sub
and
les
add
repz
push
mov
arpl
jo
xchg
xchg
dec
fcmovnb
jno
mov
jnp
dec
cmp
pop
jnp
cmp
call
dec
xlat
sbb
lods
test
jae
push
dec
int3
xchg
mov
or
iret
cmpsb
lds
ficomps
pop
sbb
cmpsl
inc
mov
push
mov
jno
mov
fisttpll
or
dec
insb
and
and
int
popf
pusha
inc
and
das
jecxz
inc
loope
call
dec
adc
adc
mov
or
sub
in
leave
mov
mov
cmp
and
push
insl
pop
mov
sub
je
insb
xchg
rorl
xor
sbb
ds
jl
call
lea
jg
add
insb
lcall
mov
icebp
cmp
adc
out
adc
fucom
insb
or
xchg
enter
or
xor
sub
lret
mov
sbb
jmp
inc
or
in
leave
imul
push
mov
sbb
and
sahf
push
adc
adc
fildll
xor
jg
test
jmp
fists
mov
inc
push
mov
pop
out
dec
loop
xchg
sti
in
sahf
push
xor
xchg
mov
adc
sti
pop
pop
pop
arpl
rclb
mov
add
xor
notb
loopne
lock
movsl
scas
pop
lods
jl
enter
or
iret
mov
adc
aam
lock
and
insl
push
or
jne
mov
mov
lret
ror
out
add
into
mov
call
pop
add
andb
into
inc
testb
lea
fbstp
xor
push
adc
push
mov
out
jne
mov
daa
push
push
xchg
rcl
ja
mov
lds
cmc
cmp
sahf
les
pushf
loopne
leave
adc
out
insb
pop
fwait
aaa
cmp
add
fsts
lds
es
or
xor
nop
adc
aas
mov
in
xchg
and
lret
mov
and
outsl
xchg
lock
shr
loopne
cmp
cmp
push
rol
cld
pusha
xor
data16
roll
shrl
inc
lcall
push
push
adc
fidivl
pop
inc
pop
lods
jp,pn
add
mov
popf
inc
sbb
lret
rolb
xor
or
das
inc
jbe
add
xor
or
cs
stos
scas
add
int3
test
mov
lret
out
andb
inc
jl
out
adc
data16
int
jne
push
push
mov
or
rol
popl
xchg
mov
inc
das
gs
xlat
sub
xchg
push
fisubl
push
cmp
mov
mov
jmp
pop
mov
mov
jl
ljmp
xchg
leave
inc
xchg
popf
lret
rorl
jmp
cmpb
inc
and
cmp
pushf
xchg
imul
jo
das
stos
popf
xchg
daa
push
and
andl
sbb
and
cmpsl
arpl
aam
fcoms
sbb
pop
fwait
scas
fs
pop
aad
xor
add
mov
into
shlb
dec
mov
sbb
call
loop
add
add
add
xlat
sbb
jb
loop
jge
gs
aam
out
add
sti
xor
js
inc
and
icebp
mov
notl
push
inc
mov
daa
pop
clc
cmp
jbe
xlat
mull
in
sub
inc
jnp
inc
nop
and
icebp
mov
xchg
test
sbb
daa
mov
call
sub
popf
jbe
pop
subb
adc
and
addr16
adc
xchg
js
dec
lods
adc
or
fiaddl
sub
push
cld
mov
scas
push
cli
or
mov
mov
xchg
pop
in
mov
insl
xchg
shll
mov
mov
and
mov
imul
sub
push
stos
loopne
cli
rolb
mov
shrl
add
ret
int3
cmc
xchg
sub
xchg
popf
xchg
sbb
add
and
mov
xchg
sarl
cwtl
nop
xchg
add
mov
adc
daa
pop
adc
xchg
jge
sub
je
or
pusha
push
aam
adc
push
push
cmp
sub
and
rcrb
mov
cmpsl
jae
add
mov
pop
leave
sbb
sbb
cwtl
icebp
mov
enter
add
mov
out
nop
iret
out
adc
in
inc
std
sub
mov
mov
dec
mov
or
jbe
jge
xor
mov
fldt
sbb
mov
and
inc
dec
xor
lds
mov
add
dec
or
pop
jmp
aad
inc
xchg
ss
mov
fwait
decl
out
cmp
dec
iret
fmull
enter
fistpl
fcoml
or
in
xchg
push
rorl
or
xchg
sub
insl
dec
adcl
xchg
mov
pop
out
xchg
pusha
fsts
std
mov
xchg
jl
rcl
inc
xchg
cmp
cmpsb
xchg
jns
sahf
adc
and
mov
lods
and
sub
xor
inc
test
popa
mov
mov
andb
xchg
xor
test
xor
adc
pop
into
aam
mov
push
xor
xor
adc
lcall
cmc
andb
imul
jno
mov
add
add
int3
in
test
cmp
imul
rcrl
xor
cmp
pop
int3
adc
push
test
lret
mov
inc
pop
xor
pop
jo
lds
idivb
add
pop
mov
inc
std
mov
sub
pop
add
dec
jns
xchg
sub
mov
and
xchg
add
push
test
lcall
icebp
inc
in
roll
sbbb
xor
and
push
dec
leave
insb
mov
add
push
dec
or
cmp
rcrl
xchg
fstps
xchg
inc
cmp
nop
imul
pop
ds
sahf
pop
popa
mov
pop
and
xchg
jecxz
loop
outsl
xchg
dec
into
lock
fidivrs
loope
inc
ficoml
stos
fwait
aam
inc
shll
sub
lods
lods
mov
xchg
push
xor
lret
mov
xor
ds
faddl
jge
loopne
mov
mov
fsubrl
mov
mov
xchg
push
call
jne
stos
hlt
or
xor
dec
dec
insb
pop
pop
imul
cs
xor
pop
clc
jle
push
jb,pt
xor
mov
inc
outsl
rorb
jno
out
fnstcw
fdivl
stos
stc
sbb
aam
mov
lods
add
push
cmp
lahf
sub
int
push
dec
dec
js
push
cmp
maxps
ljmp
fdivrl
pop
push
fs
nop
scas
dec
iret
mov
test
sub
testb
xchg
xor
adcl
xor
testl
popa
push
ss
jl
mov
stc
ja
out
sub
inc
cmp
mov
inc
test
xlat
ss
mov
mov
mov
mov
movsb
inc
cmp
iret
jg
inc
dec
inc
stc
enter
addr16
cld
cmp
dec
lods
stc
xor
rcr
dec
leave
mov
mov
add
and
stos
add
xchg
cmp
mov
lods
leave
popa
xchg
outsl
dec
dec
adc
push
jns
inc
mov
sti
in
js
xor
dec
popf
pusha
cmp
inc
aam
in
lds
imul
sbb
mov
sbb
pusha
dec
push
pushf
xchg
push
cwtl
mov
mov
mov
lods
arpl
or
cwtd
mov
jbe
add
inc
xchg
daa
xchg
jnp
inc
decb
aam
cmp
std
jle
cmp
divb
mov
in
mov
test
xor
aas
mov
cmpsb
aaa
stc
shlb
mov
sbbl
test
sub
pop
arpl
imul
ffree
les
enter
aad
push
fidivrs
push
mov
push
movsb
pop
cld
test
sti
pop
inc
inc
xchg
movsl
inc
icebp
std
in
scas
lods
ljmp
iret
scas
sbb
lret
mov
scas
imull
xchg
and
adc
or
fmul
movsb
jge
add
mov
addr16
int3
fdivl
adc
outsb
loop
push
push
out
cs
icebp
into
les
add
push
push
cmc
mov
scas
push
test
push
xor
push
lds
ret
push
out
ds
mov
mov
mov
cmp
ljmp
xor
lock
dec
scas
movb
data16
sbb
push
ljmp
mov
dec
push
sbb
dec
mov
cmpsb
xchg
inc
in
cmp
mov
lret
lods
adc
xlat
inc
out
icebp
sbb
sub
mov
sub
dec
push
mov
pop
adc
and
xor
jae
mov
xor
aam
das
xor
cltd
je
je
sub
adc
ljmp
adcb
fwait
pop
mov
jge
call
insb
jns
cs
loopne
iret
xchg
scas
aaa
outsb
cmp
mov
leave
add
pusha
sbb
xor
or
fcoms
mov
ror
xor
nop
mov
jne
fsubrs
in
js
adc
pop
cwtl
xchg
frstor
sub
ret
xchg
popa
xchg
int3
pop
pop
push
inc
popl
sub
lods
sahf
cli
or
fistl
stos
push
inc
hlt
outsl
jne
inc
dec
or
cmp
cmp
sbb
push
adc
testl
inc
lock
dec
xor
pop
test
adc
mov
add
mov
je
fcompl
iret
pushf
sbb
cmp
mov
xor
cld
xchg
sti
cmp
xchg
arpl
mov
clc
lods
sub
xchg
jle
mov
dec
pop
inc
scas
jnp
clc
sbb
xchg
xor
pop
jmp
jns
adc
fwait
sbb
sbb
push
dec
add
jg
inc
lret
into
bswap
push
enter
push
mov
cltd
xchg
sub
sahf
xor
pop
dec
fildll
aad
int
cmpsb
sbb
sub
je
mov
inc
inc
push
movsl
xchg
push
pop
push
mov
mov
and
cli
xchg
call
out
rcrb
xchg
dec
ret
and
das
sbb
pop
jp
push
sbb
roll
push
out
dec
fs
jle
sub
xchg
fbld
and
pop
ja
mov
xlat
js
cmpb
inc
adc
push
cltd
movsb
in
outsb
mov
rcl
imul
into
hlt
mov
test
sbb
movsl
rorb
mov
lcall
jno
in
popf
mov
sbb
and
lds
mov
xchg
sbb
fcmove
dec
dec
mov
lret
mov
in
add
aam
das
loop
add
push
ficomps
imul
cmp
in
popf
clc
adc
sub
xlat
add
pop
frndint
popf
push
es
sti
pop
pop
xchg
xchg
lcall
inc
sub
in
test
int
push
ja
or
loop
addb
xor
into
jge
loop
mov
push
push
jmp
xchg
or
das
or
in
dec
push
movsb
pop
stos
lret
cld
jo
pop
pop
out
inc
fmuls
ret
sub
insl
imulb
ja
shrl
xor
out
mov
insl
lods
xor
sbb
xchg
popf
mov
testl
add
sub
sarl
outsb
lret
pushf
inc
add
dec
inc
lock
fs
lds
test
or
xchg
dec
lds
jnp
mov
inc
rorb
pop
inc
cmpl
xchg
dec
or
pop
sbb
xchg
jg
mov
cmp
xchg
ja
mov
adc
cmp
dec
loop
iret
nop
or
xor
lret
cmp
jge
adc
out
pushl
xchg
and
pusha
aam
ud0
fwait
xor
mov
enter
wrmsr
dec
scas
add
add
pop
data16
js
dec
ljmp
rcrb
rclb
sub
aam
popf
lods
insl
repz
test
lret
test
jb
and
inc
pop
movsl
leave
sub
mov
jecxz
sbb
stc
pop
and
sbb
inc
aaa
pushf
mov
outsl
lods
fstpl
xchg
jo
sbb
pushf
adcl
les
push
shll
pusha
dec
insb
push
fisttpl
in
hlt
insb
push
mov
adc
mov
hlt
loopne
rcll
fdivr
push
fwait
cmp
call
jmp
rcrb
adc
jg
adc
rcll
xchg
movsb
dec
shrl
push
sbb
movsb
inc
pop
mov
mov
test
test
push
lret
ja
xchg
add
in
pop
fwait
pop
and
dec
dec
cwtl
in
cli
pop
sti
cmp
mov
sbb
inc
test
repz
cmpl
movb
out
sub
arpl
arpl
pop
push
imul
xchg
mov
pushf
in
rol
mov
xchg
lea
mov
fimuls
push
cmpsl
push
push
inc
int
cmc
pop
fbld
jae
pop
jne
mov
xor
hlt
sbbl
push
push
lea
pop
mov
jp
arpl
fucomi
jmp
in
fwait
mov
jmp
jg
lcall
ljmp
jp
mov
dec
add
mov
imul
dec
mov
cmp
mov
addr16
cld
add
repz
sbb
stos
mov
arpl
in
out
ja
test
in
jns
int3
mov
inc
mov
das
rcrl
adc
lds
cli
adc
movsl
push
jl
and
inc
mov
repz
call
or
es
inc
dec
lea
mov
xchg
mov
xchg
jmp
popf
jns
out
daa
rol
fwait
repnz
xchg
lea
stc
popf
call
fs
adcl
inc
dec
movsb
or
int3
loopne
fdivs
hlt
cmp
add
inc
les
pusha
xor
jl
cmp
jb
fildll
and
call
imul
jno
std
pop
inc
arpl
cmpl
fstpl
xor
popf
jg
sbb
dec
dec
stc
ret
shl
or
les
out
leave
cmp
loopne
mov
mov
pop
rcrl
outsb
cmpsl
push
cmpsb
lods
sbb
imul
cli
and
pop
mov
ret
insb
mov
jmp
shlb
mov
xchg
nop
pop
sbb
jl
jnp
mov
lret
mov
repnz
in
push
mov
lods
fiadds
enter
lods
repnz
mov
imull
or
ljmp
dec
mov
lcall
std
push
repz
lods
xchg
xchg
mov
sbb
addl
jo
cmpsb
enter
fs
xchg
dec
pop
aad
mov
je
ja
adc
add
mov
and
mov
movsb
test
pop
rcl
xchg
cmp
sbb
push
aad
ret
test
pop
add
rcll
xor
imulb
sbbb
insb
sbbl
loopne
lds
adc
sbb
cld
push
and
je
or
pop
adc
fstpt
stc
cmp
gs
bound
push
insb
fwait
add
inc
push
sti
jecxz
add
into
fcomps
jg
int3
lods
icebp
mov
inc
push
cmp
sbb
insb
loop
mov
sub
add
or
xchg
inc
leave
lret
push
cmp
sub
push
xor
repnz
xlat
int3
mov
xchg
add
loop
or
fcomps
scas
xchg
in
xchg
shld
inc
mov
sbb
divb
cld
inc
inc
add
cmpl
xchg
cld
add
insb
cli
pop
out
cmp
push
mov
fnstenv
bound
arpl
shlb
push
dec
mov
jg
rolb
icebp
orl
xchg
xor
mov
mov
dec
pop
fstps
jbe
mov
add
roll
fistps
mov
xor
insl
enter
subb
int
and
aas
loope
and
stos
xchg
imul
mov
adc
inc
push
hlt
aam
jae
pop
leave
out
adc
dec
pop
jae
test
in
imul
sub
popa
xchg
push
shll
test
cmp
inc
and
or
adc
jae
xor
outsl
lds
sbb
mov
adc
les
push
or
inc
roll
dec
call
stos
or
mov
ja
aad
aaa
std
scas
jecxz
out
pop
lret
gs
jge
xchg
popa
sub
je
cmp
ljmp
out
pop
lcall
loop
mov
popf
sub
fldt
or
popf
cmp
aam
mov
sar
jno
stos
push
enter
clc
jns
cmpsb
mov
push
adc
or
jb
mov
leave
pop
rcll
pushl
push
scas
adc
ljmp
and
rcrb
rcrl
movsb
sub
mov
mov
sbb
and
jne
adcb
inc
insb
xchg
and
shr
shll
fs
insb
popf
hlt
xor
sbb
pop
dec
outsb
addr16
lds
mov
hlt
cltd
test
test
ja
add
adc
mov
jg
clc
nop
xlat
push
add
loop
cmpsb
negb
fldcw
mov
mov
orl
push
scas
cltd
dec
sbb
lds
mov
jecxz
in
cmp
mov
lcall
iret
arpl
rorl
test
cli
or
mov
dec
jne
das
data16
jnp
pop
adc
lods
lret
ret
mov
sti
or
or
inc
fnsave
sub
les
in
idiv
popa
or
call
cmp
ficompl
movsl
shll
xchg
mov
inc
sub
das
js
xor
inc
fimull
iret
lock
mov
xchg
jle
arpl
push
int
sbb
pop
pop
push
fwait
dec
xor
mov
inc
sbb
adc
add
fld
sub
loope
mul
fidivs
push
int
arpl
testb
xchg
mov
dec
push
mov
loope
fbstp
push
loopne
jb
fwait
mov
addr16
sub
repnz
sbb
cltd
sbb
pop
imul
sbb
stos
inc
xchg
adc
pop
enter
loopne
cs
mov
rcr
iret
adc
cwtl
xchg
hlt
or
pop
int
loopne
outsl
or
outsb
test
cmp
pop
sub
mov
pushf
xor
xor
sarl
adc
xor
inc
inc
dec
cld
pop
inc
mov
fists
in
pop
or
sahf
mov
jb
ljmp
sti
xor
jo
out
fsubl
xchg
aad
jg
rcrl
mov
adc
repnz
add
pop
enter
nop
je
mov
fists
mov
out
push
sub
cwtl
test
jge
negl
cmp
cld
mov
xor
sub
enter
mov
pushf
insl
ret
stc
mov
cmp
ja
lahf
jmp
stos
dec
mov
mov
mov
test
and
jp
mov
push
lock
dec
cmpsb
and
pop
js
jmp
adc
std
jge
xchg
sbb
decl
cs
nop
rcrb
sbbb
mov
arpl
das
mov
test
jns
dec
pop
cwtl
subl
mov
ss
xor
and
push
cmc
cmp
imul
push
adc
int3
cmp
es
shrb
inc
test
out
inc
dec
and
les
pop
sub
push
push
in
ret
push
sbb
movsb
call
aad
inc
adc
mov
cmp
sub
sbb
jg
cmp
cmpsb
mov
jo
mov
and
sub
ret
pop
dec
jne
movsl
loope
popf
pushf
mov
repnz
arpl
mov
cmp
roll
sub
sub
dec
mov
mov
iret
fsub
fnsave
push
dec
clc
adc
out
sbb
int
mov
lahf
aam
cmpsl
mov
dec
std
lods
mov
iret
mov
inc
aad
mov
inc
adc
cmpsl
pop
ret
mov
cmp
inc
and
sbb
xlat
movsl
loop
xchg
cmp
or
adc
loope
fsubr
push
mov
int
pop
mov
add
xchg
fdivrs
xor
or
adcb
xor
jecxz
add
jge
cmc
fcmovbe
inc
mov
stos
aam
fistl
lods
rorb
and
stos
pop
cmp
fbld
lret
pop
jbe
mov
out
mov
fdivrl
lods
xchg
js
insb
popa
aad
sub
das
sbb
mov
cmp
int3
cwtl
jmp
imul
pusha
loope
dec
leave
xchg
or
negb
mov
mov
call
jno
push
add
test
sub
sub
jne
pop
sbb
pop
mov
sahf
push
jns
xchg
push
or
add
data16
jl
lods
dec
test
xchg
jae
sarb
mov
pop
add
mov
mov
lea
cmp
cwtl
outsl
push
addr16
or
insl
iret
pusha
or
je
cmp
and
int
cmpsb
repnz
andb
lods
sub
shlb
in
pop
pusha
fwait
mov
jnp
insl
shlb
scas
rcll
push
fnsave
pop
sbb
jecxz
outsl
push
dec
gs
int3
mov
sahf
inc
repz
imul
cltd
dec
lea
sbb
rcr
xchg
ror
or
xchg
cmc
dec
stos
lcall
mov
and
mov
shl
ficompl
jle
mov
gs
mov
or
and
outsl
and
ret
fisubrs
shr
pop
mov
sbb
mov
add
jmp
das
xor
inc
dec
movsb
inc
push
pop
and
sbb
mov
stos
cwtl
leave
mov
or
mov
pop
inc
inc
bnd
jg
rol
pop
js
pushf
inc
jnp
cli
sub
jl
rcrl
jg
arpl
inc
scas
push
sub
xor
insl
adc
mov
aam
inc
fsubrl
in
shr
jae
ret
ja
push
sbb
popf
imul
jnp
xchg
mov
mov
pusha
xlat
or
mov
icebp
and
out
push
and
testl
fdivs
repz
lcall
mov
adc
cmp
sbbb
lds
mov
iret
dec
ror
loop
cmp
fsubs
mov
inc
or
sarb
push
imull
pop
cmp
rcl
loope
sbb
insl
jo
in
mov
scas
mov
pusha
mov
leave
cmp
jno
roll
in
lret
and
cmpl
lea
enter
dec
and
movsl
and
xchg
mov
mov
dec
push
scas
inc
adc
xchg
cmp
call
or
sbb
or
mov
decl
push
dec
add
sbbl
cmc
and
jnp
jp
mov
xchg
fdivs
pop
dec
insl
cli
sub
push
fs
sub
or
mov
fwait
adc
mov
xchg
mov
add
clc
pop
jp
xor
fs
dec
jmp
add
sub
push
ret
sahf
pop
cwtl
out
push
into
push
sub
sbb
pop
pop
xor
push
lock
mov
inc
jl
add
daa
std
ljmp
cs
sahf
decb
mov
dec
data16
add
lock
leave
imul
adc
jl
mov
in
mov
mov
jmp
cs
sub
sarb
or
mov
frstor
pop
outsb
aaa
out
lcall
jp
jge
or
xor
cli
xchg
mov
inc
dec
cs
not
mov
repz
xor
and
les
lahf
dec
and
aas
arpl
js
imul
jb
add
in
jne
sub
mov
imul
dec
outsl
xor
test
sbb
out
pusha
inc
test
cmp
cli
mov
jns
dec
in
pop
aaa
jb
mov
pop
cmc
jecxz
mov
xchg
xchg
add
bound
sbb
and
jmp
repz
pop
int
jmp
movl
sarl
clc
cmc
loope
sub
cmp
sbb
mov
and
and
imul
sub
mov
movsl
cld
fwait
cmpsb
scas
ficompl
repz
fdivl
pusha
hlt
aas
inc
fisttpl
sahf
jne
mov
mov
push
ljmp
push
cmp
andb
xchg
and
nop
and
jp
and
or
rcr
cmpsl
sbb
in
add
xor
add
imul
popf
cmpsb
scas
sub
fs
sahf
ret
aad
ss
shlb
xor
or
aas
mov
mov
dec
mov
insl
pop
push
inc
sti
inc
fcomi
daa
rcrb
and
dec
pop
cli
inc
sbb
mov
and
cmpsl
jae
push
sbb
pushf
or
dec
in
mov
icebp
or
jl
neg
adc
dec
arpl
cmp
mov
jmp
mov
sbb
leave
shlb
dec
and
jno
movsb
pop
xor
insl
out
cmpsb
jge
jno
inc
movsl
mov
pusha
mov
mov
and
jge
push
jno
pop
or
xor
flds
out
gs
imul
sub
cmp
or
push
cmpsb
cld
mov
ret
outsl
jnp
adc
ja
sub
in
daa
mov
xchg
cmp
aad
jae
rcr
lcall
movsl
into
push
popa
out
pop
mov
mov
push
jo
add
mov
push
out
dec
sbb
mov
push
xchg
jmp
mov
js
les
inc
mov
cwtl
push
sub
imul
aaa
das
ss
into
mov
cmp
dec
lcall
dec
mov
pop
loop
push
jo
mov
and
sbb
sti
outsl
push
mov
call
pop
out
push
dec
fmuls
xor
jnp
inc
mov
mov
les
mov
insl
rorl
cli
fcompl
mov
dec
iret
xor
stc
sub
mov
fisttps
sub
or
mov
sbb
fdivs
xchg
sbbb
out
lock
ljmp
push
andb
shl
adc
out
jl
adc
clc
or
fwait
push
ffreep
mov
hlt
mov
outsb
leave
iret
sbbb
mov
push
iret
daa
inc
jl
outsb
shlb
cli
call
jo
fiadds
fistpll
xor
jnp
dec
movsl
in
adc
xchg
push
mov
pop
movsb
or
add
cmpsl
cli
sub
popf
xchg
xchg
dec
sbb
in
das
xchg
dec
ss
pop
aaa
js
insw
rorl
test
cmp
adcb
aas
mov
and
mov
sbb
pop
xchg
fbld
dec
je
push
dec
mov
jnp
test
xor
test
push
inc
or
cmp
lret
pop
or
int
xor
or
int3
loop
jo
jecxz
jmp
cmp
mov
shll
add
push
cmp
mov
ficoms
pop
mov
sbb
dec
xor
push
push
call
lret
cmc
xchg
adc
pushf
xrelease
lods
cmpb
dec
mov
jns
mov
xlat
mov
outsb
dec
test
jecxz
movsl
add
jnp
jnp
xchg
adc
or
sbb
add
out
ja
sub
add
sbb
mov
or
cli
push
iret
jnp
inc
subb
mov
xor
lds
cs
or
xchg
and
loope
sar
xchg
and
es
arpl
outsl
data16
fidivrs
jbe
jmp
lods
scas
add
mov
into
cmp
mov
sbb
popa
sub
fs
push
repnz
adc
repz
mov
roll
push
pop
dec
cmp
call
xchg
out
jne
dec
cmp
aaa
das
into
in
lcall
fsubs
inc
ret
dec
adc
repz
cli
push
icebp
mov
pop
loope
xchg
push
lods
jno
mov
daa
loope
mov
jno,pn
mov
addb
add
mov
ljmp
test
add
sbb
addr16
call
jo
sahf
jmp
movsl
mov
pop
cmp
stos
jnp
inc
leave
lods
cmpsl
arpl
pop
fs
test
pop
or
dec
lret
mov
popf
jne
dec
push
and
je
repnz
enter
incl
xor
sti
iret
mov
lret
mov
and
jae
jae
and
push
or
imul
jns
xchg
ret
add
adc
and
mov
pop
or
fidivrl
adc
cmpsl
jg
jne
scas
test
aas
cmp
addr16
xor
into
cld
ret
adc
or
jl
mov
and
xor
inc
outsl
fiaddl
mov
prefetch
xchg
push
fistpll
dec
int3
fnsave
push
out
outsl
insb
pop
insl
out
movsl
rcrl
test
inc
in
push
adc
mov
jge
das
mov
jnp
pop
es
dec
and
popf
xor
insl
mov
or
inc
test
add
out
and
xchg
inc
outsb
sbb
push
add
scas
adc
dec
sbb
sbb
movsb
shrb
out
add
sbb
test
std
cmp
push
add
inc
or
and
pop
movsl
jne
push
icebp
cmpsb
mov
rorl
mov
adc
ss
sarb
shll
enter
das
xor
sbb
push
sbb
nop
mov
test
and
scas
lods
cmp
mov
popa
xor
je
loop
cwtl
dec
out
dec
addr16
leave
push
dec
movsl
inc
cmpsb
fs
jne
xor
push
stos
push
es
das
sub
push
mov
mov
jl
ds
lods
sti
shll
iret
ret
rol
or
mov
lahf
mov
mov
push
shlb
mov
adcb
scas
aad
ret
mov
in
push
add
repnz
adc
push
sub
shll
mov
out
mov
into
insb
sti
repz
ror
test
sbb
sub
stos
clc
push
push
arpl
or
out
dec
loope
lcall
xor
in
mov
mov
mov
gs
or
enter
mov
out
in
mov
outsl
repnz
fidivrl
test
xchg
rorb
sti
test
scas
imul
adcl
or
lret
adc
xor
xchg
dec
inc
and
jne
pop
jg
pop
mov
sbb
cwtl
daa
mov
cs
jge
push
and
cmc
repnz
addb
popf
cmpl
popf
push
hlt
addb
leave
popa
push
dec
xor
or
das
repz
adc
mov
hlt
add
adc
mov
bound
sub
aaa
sbb
dec
adc
test
ds
dec
pop
or
daa
jbe
in
lods
mov
xor
mov
fdivs
pop
mov
gs
push
xor
andl
call
loope
sub
pop
fisubrs
pop
xchg
insb
sub
mov
jg
fistps
add
aas
cmp
mov
ficoms
xor
repz
xor
inc
mov
cmp
push
mov
fdivrs
mull
adc
repnz
inc
or
jae
lahf
pop
xchg
scas
scas
out
push
or
dec
fsub
sub
lahf
and
insb
pop
ror
repz
dec
lea
fcmovu
lock
shll
cmc
into
lods
or
inc
xchg
and
mov
xchg
xchg
addr16
out
test
xor
pop
lahf
add
sbb
movsl
mov
outsb
lods
pop
mov
push
leave
jecxz
das
stc
push
fcompl
sbb
push
fdiv
fsubr
adc
mov
adc
daa
popa
inc
mov
call
dec
sub
cmc
inc
loopne
cs
dec
xchg
ret
dec
cmpl
xchg
jle
addr16
orb
xchg
adc
daa
jl
cmc
push
ja
into
xor
js
int
push
lock
repnz
add
xor
lea
xor
and
push
and
icebp
sti
mov
out
mov
fsubrs
loopne
je
pop
xor
push
clc
ret
dec
xchg
cmp
sub
xor
stc
mov
les
cmpsb
int3
cmpsl
movsb
out
mov
or
movsl
test
pop
aam
jne
ja
ret
sbb
andl
adc
push
pop
xor
aas
shrb
bound
iret
gs
fnstenv
lahf
int3
mov
sbb
xchg
dec
mov
outsb
pop
dec
cmp
bound
adc
cmp
hlt
or
pop
les
int3
repnz
movsl
mov
jp
and
and
mov
ficomps
mov
test
push
jle
loop
imul
ret
xchg
adc
stos
js
dec
mov
lock
ss
push
inc
in
cltd
arpl
cmp
mov
sub
lret
push
xchg
int3
adc
pop
jle
lret
adc
sbb
cld
jge
pusha
push
or
jecxz
jns
mov
inc
xchg
dec
add
arpl
mov
imul
rorb
fxch
lds
or
mov
dec
je
lcall
sbb
inc
inc
lret
iret
cltd
or
ja
or
xchg
cltd
imul
xchg
push
pop
mov
adc
jb
push
cmp
ds
movsb
xchg
jns
xor
xlat
mov
movsl
push
out
mov
popa
sbb
pop
pop
pop
push
mov
aam
xor
mov
push
pop
in
out
imul
aam
mov
jnp
mov
pop
mov
in
mov
push
push
cmpsl
push
mov
add
pop
addr16
cmp
mov
mov
mov
pop
es
aam
pop
lret
mov
aam
dec
xchg
mov
xchg
scas
bound
test
ficompl
push
mov
ret
jle
sbb
inc
inc
test
fists
inc
arpl
dec
sub
xlat
aam
pusha
xor
cmp
mov
or
or
loop
push
cltd
leave
rorb
cmc
jno
inc
adc
push
xchg
nop
fsubrs
mov
dec
or
cmp
daa
xor
lds
fisubrl
insl
push
sub
cmp
mov
std
mov
and
jge
push
add
lret
mov
je
xor
in
out
pop
sub
lcall
or
lods
leave
xchg
mov
test
shlb
enter
imul
data16
iret
iret
jb
jno
mov
pushf
aaa
inc
repz
mov
sahf
or
and
fldcw
inc
or
push
pop
cmp
fwait
push
or
jnp
in
lock
sbb
dec
popf
mov
stos
mov
fisubl
mov
jge
add
enter
mov
pop
test
inc
aad
or
adc
scas
xchg
loope
lret
cmp
pop
js
pop
xchg
mov
shrl
inc
push
out
mov
jge
es
imul
sub
xchg
and
ja
loopne
xor
push
lea
lahf
imul
scas
icebp
jae
fs
out
shrl
xorb
sbb
push
inc
fidivs
lods
ret
jns
sbb
inc
scas
push
push
xor
aad
idivl
cwtl
cmp
in
cmp
or
and
clc
dec
inc
and
dec
xlat
and
mov
pop
inc
mov
dec
xchg
ljmp
inc
sub
nop
mov
movsb
fidivs
outsb
adc
das
stos
dec
addl
call
int3
aaa
cmp
cltd
add
xor
mov
or
cmc
pop
movsl
leave
or
pop
scas
fidivrl
push
jnp
push
xor
sub
fdivl
shlb
xchg
dec
mov
pushf
jmp
imul
dec
ret
push
repz
jge
mov
or
repnz
icebp
xchg
adc
out
data16
into
cli
dec
mov
push
fwait
repz
jbe
pop
daa
test
push
std
rcrl
jae
push
xchg
cli
nop
mov
mov
sahf
cwtl
fstl
dec
cmpsl
cmp
xlat
mov
push
xor
movsb
movsb
popf
mov
xchg
outsb
push
dec
movsl
xchg
dec
mov
adc
pop
inc
jge
xchg
adc
inc
lods
lods
out
cmp
xchg
lret
xchg
jmp
jge
mov
fstps
ret
sub
loopne
pop
sub
bound
ficompl
pop
out
sti
sub
or
push
aas
fdivrl
stos
mov
mov
adc
inc
jns
jl
mov
adc
ret
in
loopne
sub
cmp
mov
xchg
and
push
aad
in
sbb
push
dec
mov
cwtl
clc
call
and
jb
and
lods
mov
jge
fwait
xchg
scas
fisttpl
adc
mov
or
add
xchg
fistps
repz
push
inc
and
add
cmp
and
inc
int3
mov
out
sbb
cmp
pop
and
lahf
pushf
xor
jmp
pop
cltd
insb
mov
jg
pop
pop
add
cld
jl
scas
sub
inc
mov
call
xchg
pop
aas
adc
xchg
push
jne
dec
and
adc
std
ja
rclb
jmp
cmp
cmp
js
out
lods
nop
daa
mov
push
jge
faddl
mov
rcr
loopne
loope
pop
stos
and
mov
das
lret
rcl
dec
movsb
arpl
sbb
add
inc
push
fwait
pop
xchg
cmp
mov
mov
mov
xchg
stos
sbbb
imul
inc
or
adc
leave
jns
mov
ss
mov
ss
mov
loopne
sub
loop
xor
push
push
sub
push
adc
cmpsb
jg
ret
leave
gs
or
je
add
test
js
lea
test
or
mov
daa
push
push
adc
add
enter
cmp
jno
mov
xchg
test
scas
jae
mov
lods
insb
xor
add
dec
push
add
xchg
insl
xor
pushf
std
push
into
sbb
lods
push
jbe
cmp
add
add
lods
cwtl
xchg
or
movsl
mov
dec
sbb
clc
push
pop
in
add
loope
fldl
les
call
xchg
pop
cwtl
nop
and
cmp
bound
enter
mov
in
adc
dec
scas
test
pushl
enter
mov
ret
mov
mov
jb
push
push
jl
jno
push
xchg
subb
sub
cmp
xor
nop
andb
in
sarb
leave
or
int3
lcall
sbb
adc
scas
jle
imul
lock
call
std
push
test
imul
lds
mov
rol
mov
pop
mov
push
adc
imull
mov
add
mov
inc
mov
mov
movsl
jp
loopne
inc
loopne
inc
ds
in
sbb
mov
movsb
lods
add
lods
loop
xchg
cmc
or
es
mov
outsl
pop
sbb
cmp
faddl
xor
xchg
jp
pop
aaa
adc
or
fsubs
fs
xchg
jae
inc
add
mov
xor
pop
jmp
xor
ljmp
cmc
lds
adc
test
movsb
inc
adc
pop
mov
adc
scas
push
inc
test
mov
daa
std
scas
inc
mov
out
movsl
loop
sub
mov
lods
dec
xchg
lret
inc
sub
test
fcomps
and
cmc
pop
and
sub
add
push
cli
jns
data16
mov
iret
jle
mov
cmp
out
test
push
mov
jmp
push
shl
mov
cmpsl
sbb
daa
dec
iret
dec
cmpb
lahf
pop
mov
aaa
arpl
add
xchg
sbb
mov
pop
adc
arpl
imul
mov
mov
push
xor
fcoml
and
cmpsl
jno
js
mov
jecxz
in
arpl
pop
cld
imul
mov
add
out
jl
mov
mov
push
insb
jge
loope
cmp
pop
fisubrs
cld
inc
adc
cmpl
mov
jbe
ds
or
decb
xchg
adc
and
cmp
fmull
fwait
lret
mov
and
mov
adc
and
lret
outsl
xor
xchg
dec
pcmpeqd
mov
adc
cwtl
iret
adc
fmuls
pop
movsl
inc
mov
scas
fldl
pop
ja
mov
mov
jbe
ja
outsl
cmp
push
mov
leave
inc
inc
std
push
test
jae
jne
mov
lds
cli
scas
pop
jecxz
pop
aaa
xor
xlat
call
sbbb
sbb
dec
mov
adc
jg
mov
sub
out
arpl
icebp
and
sbbl
movsb
jns
in
sbb
adc
pop
xchg
sti
sbb
xchg
mov
cmpsb
xor
xchg
mov
jae
push
pusha
dec
fcomp
sub
jmp
and
lahf
loop
push
rorb
or
pop
and
jle
pop
and
pop
fwait
xchg
xor
outsl
daa
das
xor
bound
xchg
mov
ja
pop
pop
rolb
sbb
popa
jae
mov
cwtl
cmc
mov
and
fcmovbe
in
test
sub
popf
outsb
arpl
mov
cmpsl
scas
jo
pop
and
mov
mov
cltd
or
repz
jb
fidivrl
adc
aaa
call
adc
fcomps
mov
jge
jnp
or
jecxz
std
cmpsl
xchg
push
inc
icebp
leave
xor
popf
pop
fsubs
je
sarl
loopne
movsb
jae
jg
pop
xor
mov
shll
or
or
sti
push
jg
mov
inc
push
aaa
pop
int
push
xor
xorb
movsb
or
push
push
dec
mov
pusha
les
popf
dec
enter
push
xchg
push
add
push
add
and
or
aad
and
fdivr
stos
js
add
add
outsb
dec
cwtl
sbb
in
orb
fwait
jno
inc
mov
lret
loop
sub
mov
cli
add
jbe
xor
mov
pop
mov
and
adc
xchg
in
inc
pop
clc
repnz
mov
jno
push
xchg
test
cmp
ret
mov
push
adc
popf
jmp
ja
std
xchg
xor
aam
in
or
and
push
pop
xor
pop
std
dec
push
outsl
and
dec
mov
iret
pop
icebp
loopne
and
mov
xor
hlt
push
jge
stos
pusha
sub
sarb
daa
mov
push
push
inc
push
sbb
mov
jbe
xchg
ret
into
jae
int3
ja
jmp
add
push
icebp
push
push
mov
sahf
fisttpl
adc
and
sub
mov
loope
out
sbb
dec
cltd
ret
adc
inc
jmp
jo
jl
aad
push
cmc
inc
lea
sub
sub
pop
xor
add
repz
jmp
call
mov
lret
ljmp
pushf
movsb
cmp
mov
scas
push
pushl
scas
and
sbb
nop
sub
push
cmp
outsl
roll
aad
and
xchg
aad
sbb
or
je
test
mov
sub
movsb
push
fdivl
or
mov
xor
push
push
shll
cmc
movl
divb
mov
and
push
jl
push
lret
jbe
mov
fs
adc
xchg
imul
xchg
add
xorb
mov
aaa
push
xchg
sub
push
divb
out
loope
pusha
and
jl
inc
insl
hlt
idivb
cs
and
jge
gs
push
mov
std
and
xor
add
cltd
push
and
mov
inc
mov
add
movsl
adc
pop
jmp
rol
leave
xchg
cmpsl
aad
add
and
mov
xchg
or
mov
or
loop,pn
stos
xlat
lods
xor
mov
pop
pop
shl
mov
gs
and
mov
enter
loop
cli
cmp
sbb
or
ja
in
lods
adc
jno
fcompl
stc
xor
cltd
lock
loope
push
ljmp
leave
scas
cmpsl
mov
push
sahf
push
ret
aam
mov
loopne
data16
sub
subl
insl
pop
mov
mov
xchg
lods
movsl
rclb
add
sub
cmpsl
cmc
cmc
mov
lret
pop
mov
mov
cmp
mov
fcomip
rcr
inc
stos
pop
add
mov
arpl
cmp
jo
mov
addb
outsb
imul
movsb
test
insl
cs
xor
push
fistpl
pop
push
xchg
out
out
ret
std
shlb
jge
sbb
mov
mov
in
adc
push
outsl
addr16
dec
dec
lock
push
jno
mov
xor
std
cmp
inc
push
sbb
mov
mov
movsl
inc
cmp
xchg
xchg
inc
fnstenv
pop
rcrl
dec
add
arpl
dec
sub
mov
fldz
pop
pusha
loopne
mov
xchg
jecxz
and
inc
lahf
dec
cmp
xchg
xlat
xor
dec
ret
mov
inc
int
pusha
pop
out
jbe
pop
mov
push
inc
test
gs
and
fnstenv
xchg
sub
cmp
movq
xchg
and
and
aaa
dec
xchg
cmc
repnz
aam
push
dec
scas
stos
outsb
cld
popf
xor
push
jg
fimull
and
sbb
adc
int3
push
push
std
jmp
stos
pop
frstor
sbb
aad
inc
test
fwait
sbb
xor
xchg
icebp
inc
inc
out
fildll
in
xchg
xor
cmpl
addb
dec
inc
add
loop
mov
push
xchg
cmp
jne
xor
jnp
test
cs
imul
cmpsb
ret
nop
or
pusha
out
out
js
jo
pushl
mov
mov
xchg
xchg
enter
cwtl
push
lret
sbb
mov
adc
stos
or
shl
mov
addl
push
fldenv
dec
fiadds
xor
jne
dec
pop
and
pop
cwtl
push
orb
and
int
xchg
push
ficomps
jnp
shrb
stc
dec
jnp
jmp
sbb
sbb
shrl
jae
gs
push
mov
mov
xchg
mov
mov
pop
lds
sub
sbb
add
or
outsb
hlt
lds
lds
adc
sub
push
jge
xchg
push
leave
xchg
dec
cli
test
test
out
rolb
cmc
pop
push
and
cwtl
xchg
push
test
cs
dec
mov
outsb
xchg
js
lcall
je
push
fiaddl
rcrb
mov
jno
add
nop
outsb
and
pop
pop
insl
test
jne
inc
lock
aam
bound
into
les
lea
insl
cld
cmp
mov
bound
mov
leave
pop
cmc
rcrb
cmp
cmpsl
jne
jmp
test
lock
imul
outsb
mov
mov
repz
dec
out
xchg
push
ds
cmpsl
jecxz
lret
dec
fidivrl
cld
in
mov
or
imul
sbb
pop
lock
pop
data16
shll
rorb
aas
scas
into
add
push
or
fildll
jbe
cwtl
daa
in
sbb
dec
ret
loopne
xlat
ss
ss
push
jl
shr
insb
add
add
push
fstpl
inc
lea
sbb
test
push
sub
test
mov
mov
push
mov
andb
mov
lret
das
in
xchg
xchg
cmp
adc
out
sbb
loop
das
lret
xchg
xorl
mov
push
in
dec
lret
xor
cmpsb
shlb
stos
mov
jno
popa
pop
std
cltd
je
sbb
jle
mov
arpl
xchg
jmp
arpl
push
or
jp
cwtl
pop
mov
jne
cmp
das
mov
cld
stos
lahf
fisttpl
jg
test
pusha
mov
popa
sbb
aas
pusha
sub
and
cmpsl
out
shll
dec
frstor
sub
mov
jbe
mov
xchg
outsb
in
fmuls
movsb
mov
gs
jg
movsb
ror
lods
and
imul
dec
mov
scas
popa
scas
pop
imul
es
push
fs
movsl
in
jmp
out
data16
repnz
sub
xchg
xchg
xchg
cli
in
scas
hlt
pop
out
add
gs
sub
push
test
adc
xchg
and
and
ret
and
mov
xor
sub
es
pop
std
push
or
or
push
stc
mov
xor
xchg
cmp
cld
cltd
jmp
add
jno
mov
pop
pop
adc
dec
fwait
in
enter
idivl
add
and
fsubr
stos
insb
push
and
les
or
rol
xor
inc
rclb
push
lds
adc
adc
sub
divb
shll
push
mov
xchg
mov
sahf
enter
jmp
xchg
dec
addr16
jl
adc
inc
jnp
xchg
in
sbb
or
fmull
int3
xlat
stc
mov
jo
xor
jns
xchg
push
enter
roll
sti
mov
shll
jns
insb
mov
push
cmpsl
sub
mov
sbb
stc
push
or
xchg
stc
inc
sahf
popa
mov
int
xor
xchg
loop
fcmovu
fmull
sbb
or
lret
pop
pop
push
xchg
jo
and
repz
sahf
fnstsw
sbb
outsl
in
jnp
ljmp
popa
sub
xchg
cmpb
outsl
mov
xchg
in
or
stos
imul
pop
insb
pop
shll
push
adc
std
sbb
incl
loope
cmp
ja
ret
dec
stc
into
fldl
std
push
adc
xchg
jmp
xchg
or
push
xor
pop
outsb
mov
xchg
mov
ffree
mov
push
sub
testb
add
cltd
adc
or
or
repnz
xor
xor
and
push
lock
mov
xchg
xor
stos
mov
insl
sbb
xchg
inc
sbb
popf
out
inc
rcrl
in
cmp
inc
push
es
adc
call
pop
mov
mov
xchg
mov
scas
add
in
scas
pop
sbb
dec
xorl
and
push
push
jp
add
lods
vminpd
sub
xchg
mov
sub
insb
and
cmpl
or
ret
cmp
fsubr
ja
lock
orb
cmpsb
sbb
ss
push
cmp
xchg
lahf
or
sbb
mov
sbb
adc
push
popf
leave
aam
and
movsl
scas
shlb
mov
cmc
and
xlat
out
mov
xchg
add
push
out
xchg
pop
lcall
dec
cld
aad
cwtl
movb
lods
testl
jmp
push
pop
or
cmp
scas
out
xchg
add
jo
jle
sbbb
and
pop
sahf
mov
vmovapd
in
in
pop
hlt
push
mov
add
mov
pushf
inc
cwtl
insb
jmp
mov
test
xchg
pop
push
lret
test
mov
jle
into
mov
cwtl
inc
mov
lods
rcrb
mov
lcall
stc
movsb
pop
in
mov
jp
sbb
push
loope
pop
lahf
cwtl
mov
aas
dec
push
dec
add
psrld
and
xor
push
xchg
addr16
push
xchg
mov
push
sub
hlt
sahf
mov
lods
cs
sbb
push
push
xorb
or
xchg
rcrb
cli
sub
aam
movq
loop
mov
daa
mov
xchg
lret
daa
or
pop
ret
xor
push
movsb
addr16
sbb
mov
flds
xchg
test
ret
imul
adc
mov
sbb
xor
push
ret
xchg
jne
testb
out
aam
and
aaa
jae
mov
in
push
std
and
push
pop
or
pop
mov
mov
enter
cmp
es
mov
or
mov
xchg
fldl
leave
push
sahf
push
pop
divl
adc
shrb
fstl
out
icebp
inc
mov
mov
jne
out
out
in
inc
mov
add
gs
pop
movsb
inc
dec
shl
push
icebp
mov
cmpsb
into
outsl
pop
inc
into
ret
jp
pop
leave
push
pushf
aas
enter
cmpl
insb
xorb
aam
cltd
and
mov
fidivs
inc
push
rorb
pop
cmp
gs
mov
xchg
xor
in
jl
add
sahf
ss
loopne
icebp
lcall
fsubr
call
dec
fsubrs
dec
and
stos
pop
push
lods
ficoms
mov
fs
jo
add
ss
mov
add
loopne
ljmp
push
and
push
scas
add
or
push
test
xor
mov
rcrl
push
jg
sbb
int
add
jb
sub
addr16
insl
in
data16
xchg
test
mov
adc
mov
pushf
xchg
or
xchg
andl
daa
dec
mov
ds
lods
xchg
rcrb
jo
negb
std
or
xorl
xorps
mov
loope
icebp
and
in
loop
and
addl
cmp
fs
dec
out
adc
fstl
js
fnsave
add
push
sahf
jg
cmpsl
pop
cmp
mov
mov
adc
fimull
ja
push
and
lods
lods
out
cli
aaa
fdivrl
mul
ljmp
aam
pop
jl
cmp
cmp
outsb
in
faddl
jae
je
sbb
ret
dec
sahf
mov
xor
fstpl
dec
sub
lock
stc
arpl
inc
push
mov
scas
mov
fsubl
cmpsl
push
and
test
xchg
xchg
je
out
lods
inc
fwait
adc
sbb
ret
out
aas
js
jbe
adc
xor
cmc
xchg
cwtl
xchg
sbbl
ljmp
lock
int
mov
aaa
jp
xchg
xor
sub
xchg
rcll
cmp
or
add
cmpsl
lods
rep
ret
jle
pushf
cmp
or
cs
inc
iret
lahf
jnp
fimull
adc
xorl
pop
imul
js
cli
stos
cmpsl
mov
fs
and
add
mov
push
sbb
leave
push
std
pop
jbe
fs
orl
popa
lea
in
cmp
sub
inc
push
jecxz
je
lea
into
paddsw
push
mov
in
xor
stos
xor
sub
fsubrp
mov
pusha
outsb
xchg
push
jp
and
mov
jno
out
dec
jmp
sti
inc
inc
ret
jle
sbb
and
xchg
adc
sub
jp
push
mov
out
cmp
in
mov
add
cmp
or
popa
xor
sarb
inc
add
fldenv
sub
and
addr16
push
xchg
push
xchg
jae
push
push
sbb
stos
mov
or
adcl
pop
loopne
xor
ljmp
shl
xlat
lea
and
xor
adc
outsl
ds
fildl
adcb
cld
pop
mov
or
scas
hlt
cld
jbe
movb
cs
pop
inc
cld
sub
and
in
dec
sarl
cmp
push
imul
ja
pop
push
sub
add
sbb
mov
es
adc
testb
test
mov
int
daa
pop
mov
sbb
outsb
add
or
lahf
xor
lahf
push
testb
repnz
stc
add
jbe
in
movsl
inc
jne
inc
cmp
repz
je
push
repz
mov
push
int3
mov
inc
addb
ret
sbb
arpl
lds
pushf
dec
stos
jnp
lods
mov
dec
out
int3
rorb
push
and
fucomp
xchg
test
sahf
roll
outsl
push
xchg
sbb
xchg
xlat
ljmp
loop
icebp
lcall
push
dec
loopne
and
xor
pop
out
addr16
fsubr
or
add
stos
jnp
int3
dec
aas
pop
lahf
xor
leave
mov
negb
cld
lret
cmp
sub
mov
mov
push
mov
and
hlt
out
cli
mov
cmp
dec
mov
aaa
mov
jl
fcoml
dec
cmp
pop
push
jne
sbb
mov
xchg
mov
scas
jmp
mov
push
imul
sbb
in
outsb
sahf
push
and
insl
push
xor
adc
mov
iret
xchg
loope
adc
cltd
xchg
daa
mov
add
xor
dec
push
call
in
je
or
cld
mov
jnp
or
inc
fsubrs
fs
mov
push
xor
xor
cmp
inc
iret
mov
por
ret
mov
pop
test
sub
mov
clc
repz
mov
insl
sub
in
push
sub
cmc
rcrb
dec
adc
aaa
sbb
push
loopne
popf
aaa
and
inc
jmp
lfs
imul
data16
stos
movsl
or
sysenter
movl
out
pop
mov
xchg
and
ljmp
dec
or
pop
add
pushf
outsl
es
push
or
scas
sub
inc
sahf
sub
sbb
jle
add
pop
inc
pusha
mov
in
add
lret
add
add
xor
push
fwait
adc
inc
fcoml
pop
pop
mov
das
lock
lcall
xor
idiv
jmp
push
add
mov
or
xchg
fcom
movsl
push
cmp
jmp
jbe
jp
mov
ja
sbb
loope
int
adc
cwtl
mov
cmp
ljmp
in
gs
popa
xlat
xorb
jmp
imul
shll
imul
mov
es
inc
sbb
std
inc
into
sbb
outsl
xlat
mov
cmpsb
push
dec
lds
xchg
dec
lock
jp
push
sub
cld
sub
mov
sub
rcrb
add
sbb
pushl
cmpsl
xchg
xchg
enter
fs
bound
mov
jmp
push
cmpsl
adc
mov
mov
das
jno
out
jg
ljmp
fsubrs
sub
mov
sub
push
and
mov
jmp
and
mov
rorl
or
inc
rcrl
clc
cmpsl
dec
dec
and
lods
cwtl
fdivs
cmp
xchg
shlb
push
xchg
jno
add
xchg
mov
fwait
shrb
cmp
pop
dec
insb
arpl
lahf
sub
and
xor
cli
xchg
or
in
sub
rcl
mov
iret
sbb
in
jae
test
add
or
out
cmp
cmpsl
xchg
lock
dec
cmp
icebp
fwait
xchg
lcall
enter
enter
mov
push
cmp
les
fnstsw
jne
mov
aad
andl
pop
out
jge
std
cmp
push
mov
sbb
shlb
push
sub
jmp
push
outsb
aas
je
inc
add
lods
je
push
adc
xorb
jb
cmpsl
jns
adc
or
xchg
mov
out
jge
lret
pop
sub
or
sarl
hlt
adc
xchg
in
int
jb
sbb
adc
adc
jns
outsl
stc
divb
adc
out
sub
lret
fisubl
out
jae
push
push
mov
out
movsb
inc
test
or
arpl
sbb
add
adc
mov
orb
int3
cmp
out
jle
insb
orb
outsl
mov
adc
jno
push
jmp
dec
jnp
mulb
sub
push
mov
fistpl
mov
cmc
popf
xor
std
stc
mov
push
pop
inc
jns
popf
lret
mov
arpl
jmp
pop
fstpl
shl
push
orb
out
jb
mov
jg
sbb
enter
daa
adc
leave
mov
je
adc
lret
lcall
leave
cli
sub
jg
out
mov
inc
or
mov
lahf
xchg
out
xor
out
outsb
add
loopne
cmpsl
subb
pop
jbe
inc
pop
fldcw
in
xchg
sub
adc
std
and
in
push
test
dec
inc
inc
xor
xor
xchg
sub
call
lock
sbb
inc
or
jl
sub
enter
adc
xorb
xor
inc
adc
sti
inc
enter
fwait
xchg
adc
adc
fisttpll
test
inc
rcll
cmp
xor
dec
push
int
add
xchg
mov
fucom
push
inc
gs
out
aaa
loope
add
add
xor
push
jo
cmp
popa
add
ret
aas
mov
cmp
stc
into
in
add
psrad
fists
mov
cmp
push
fnstcw
xor
add
xchg
inc
out
sbb
dec
mov
jnp
bound
sub
cmp
jno
add
cltd
push
and
mov
xchg
shll
mov
jo
xor
and
loope
sbb
add
lret
pop
imul
cmp
pop
mov
fwait
adc
xor
inc
fidivl
daa
xchg
and
adc
xchg
jne
inc
jp
mov
scas
push
add
mov
or
xchg
in
mov
cmpsl
mov
push
jbe
les
jecxz
push
xor
sub
popf
lret
bound
or
jae
mov
rclb
cmpsb
push
fs
sbb
lods
cmc
cltd
add
dec
jmp
mov
inc
movsl
fiadds
mov
mov
jnp
jbe
cmp
cmpb
inc
rcrb
popa
addl
bound
iret
xorl
fisubrs
jle
ds
add
sub
int3
fldl
mov
ret
frstor
lahf
add
fs
mov
nop
int
mov
push
into
xchg
rcr
sbb
sub
pop
addl
outsl
xchg
mov
push
mov
xchg
mov
movsb
call
cmp
in
imul
bound
out
stos
inc
jne
arpl
jns
dec
jo
cmc
mov
inc
dec
pop
call
or
fdivrs
dec
add
or
jecxz
or
mov
cltd
sbb
add
cld
dec
addr16
mov
popf
insb
lahf
fldl
adc
cld
lods
jo
out
xchg
dec
mov
fcmovb
cmp
add
dec
pop
fisttps
outsl
mov
add
and
fcomps
cmp
push
mov
jmp
push
xchg
push
jmp
mov
xor
and
pop
test
xchg
andl
test
in
mov
fwait
dec
pop
lock
sub
dec
dec
les
iret
or
dec
xor
bound
mov
fnstenv
stos
xor
flds
or
popaw
push
push
stc
scas
sub
cmp
mov
mov
or
loopne
jnp
ss
sar
lret
scas
inc
mov
arpl
pushf
sarl
push
ss
das
cmp
pop
cmpsb
dec
jo
jmp
test
or
ja
and
push
cld
icebp
cwtl
or
sti
inc
mov
cmp
mov
sbb
mov
sbb
sub
iret
xchg
pop
cmp
in
lcall
add
inc
jmp
scas
and
or
cmc
dec
scas
jmp
ja
jno
push
std
lds
mov
push
bound
and
jp
jne
lahf
das
inc
pop
push
lcall
mov
and
jnp
sub
pusha
and
dec
movsb
mov
push
loopne
and
pop
push
dec
sbb
sbb
sbb
xchg
cmpl
std
scas
mov
lods
mov
pop
mov
and
loopne
pusha
adc
inc
faddl
das
xchg
fldl2e
mov
lods
aad
mov
les
mov
xchg
mov
sbb
dec
lret
pusha
mov
jp
nop
sub
popa
xor
xchg
sub
mov
stos
push
lods
jae
vpsrld
leave
xchg
cmpsb
mov
adc
test
repnz
dec
imul
xchg
add
xchg
add
mov
and
lret
xchg
mov
adc
fldenv
sbb
xor
out
sbb
lds
in
pop
aas
add
test
or
cli
mov
cmpl
aad
arpl
cmp
adc
jnp
aaa
leave
push
je
jo
and
dec
fists
loopne
sub
jl
xlat
lods
aaa
or
lret
adc
sbb
cmp
jae
mov
fiadds
outsb
or
pop
pop
imul
mov
cwtl
cli
fcmovnbe
mov
jno
lock
dec
fcomip
out
dec
cmp
fmull
or
inc
mov
adc
sbb
hlt
mov
lea
mov
repz
in
dec
sbb
repnz
dec
imul
in
xor
and
jmp
and
or
xor
jle
xchg
cmp
enter
outsb
sbb
jecxz
and
lods
inc
sub
cli
sub
push
sub
es
cs
test
sub
lea
jge
cwtl
mov
cmp
popa
aaa
orl
jns
aad
dec
xchg
mov
jne
mov
out
mov
lock
in
xchg
lahf
out
mov
bound
xorl
addr16
mov
mov
inc
ffree
dec
cmpsb
xor
adc
out
sbb
mov
add
push
sbb
insl
sti
push
es
mov
dec
mov
push
and
push
cmp
jno
mov
sbb
dec
in
stos
fisubrl
dec
and
xchg
int
pusha
xor
pop
adc
fists
jne
dec
bound
pop
jg
push
xor
pop
xchg
jb
imul
fdivrs
fcmovb
pop
mov
insb
int3
mov
ret
jbe
rclb
cltd
cmp
adc
inc
cmc
push
jne
cmp
incl
outsb
adc
cld
mov
adc
mov
mov
xlat
cmp
push
filds
or
into
xchg
and
adc
ds
pop
push
sbb
xorb
push
cmp
cmc
xor
fs
push
push
ficoml
dec
mov
inc
push
call
cmp
data16
mov
and
pop
loopne
fdivr
mov
fistpl
popf
cmp
mov
std
push
sub
es
lret
lret
jns
xorl
insl
ljmp
sub
and
jb
sub
mov
mov
xchg
into
push
movsb
imull
xlat
pusha
mov
mov
xchg
ss
je
divl
ror
fcom
push
cmp
or
ss
pop
in
sahf
inc
ficomps
out
cmc
mov
sbb
push
mov
or
jbe
rcrl
jl
imul
push
cld
aad
stos
movsb
mov
and
mov
das
ret
lret
adc
add
dec
and
addb
push
leave
cltd
lock
insb
pop
cmp
xchg
pop
leave
dec
mov
push
sbb
test
jb
and
aaa
ret
lds
std
xor
daa
ja
cmp
in
mov
dec
dec
int
xchg
sub
xchg
data16
sbb
or
or
xlat
pop
add
push
mov
add
rorl
mov
and
fiaddl
jle
iret
dec
mov
nop
bound
xchg
lock
cmpsb
test
rorb
icebp
adc
push
cmc
sahf
fisubrs
arpl
gs
leave
mov
jmp
dec
cs
in
jmp
mov
imul
movsl
mov
sahf
mov
xchg
sbb
push
pop
pop
fisttpll
add
cld
scas
xchg
imul
test
enter
mov
sbb
sti
pop
std
and
shlb
jecxz
jl
pusha
inc
mov
stc
mov
mov
stc
xor
pop
push
jbe
cmc
pushf
iret
iret
ss
xchg
call
loope
cwtl
aam
shl
test
jnp
arpl
mov
sbb
int3
test
mov
xlat
or
or
adc
sbb
cmp
int
daa
xchg
push
dec
sbb
xlat
leave
outsl
sti
in
and
add
rcll
mov
das
lods
pop
xchg
clc
mov
sbb
lret
push
scas
in
imul
pushf
cmpsl
or
hlt
inc
xchg
mov
lret
in
cld
into
jp
cmp
mov
stos
enter
add
jg
xorl
push
mov
jecxz
inc
pop
push
sub
xchg
fdivs
dec
into
call
lock
mov
lods
iret
popf
cmp
dec
pop
push
repnz
loop
insl
or
cmp
and
dec
jbe
jne
sbb
je
pushf
push
push
mov
xchg
sbb
and
icebp
mov
ds
out
jl
in
dec
in
stos
pushf
shr
jmp
xorl
repnz
xchg
xbegin
jle
mov
inc
add
dec
jbe
hlt
mov
loop
pop
dec
cli
insl
testb
pop
mov
push
jle
mov
and
mov
mov
cmp
rclb
and
jnp
jbe
int3
in
mov
xchg
ss
outsb
js
mov
push
mov
stos
jnp
loop
inc
iret
lods
push
mov
mov
and
ficompl
aad
sbb
pop
into
pop
adcb
jg
pushf
negb
dec
xchg
movsl
jno
xchg
sub
mov
jbe
addr16
aad
dec
cmp
aad
shlb
mov
mov
sbb
mov
jmp
mov
rclb
xchg
loop
mov
or
test
gs
pop
add
aam
sbb
push
sbb
push
popf
roll
cltd
pop
aad
and
je
insl
pop
insb
mov
mov
mov
pop
shlb
rcr
cmp
pusha
xor
xchg
neg
pop
scas
adc
sub
inc
or
movsb
mov
leave
in
push
or
or
aas
iret
sub
mov
inc
mov
xor
sbb
jl
inc
and
sub
adc
xor
push
sub
jo
add
insb
mov
sub
lea
imul
jl
pop
inc
jno
push
imul
fadds
enter
ljmp
cmp
outsl
add
std
icebp
sub
std
gs
add
xchg
pop
xchg
mov
leave
jl
insl
imul
nop
dec
jbe
mov
scas
mov
aad
popa
mov
sbb
setb
lds
mov
cmc
dec
cmc
inc
movsb
js
rol
xchg
rolb
xchg
inc
add
cmp
aad
mov
shll
in
and
adcb
mov
xchg
gs
int3
lea
rcl
jge
or
jle
out
pop
scas
mov
rclb
dec
pop
rep
and
push
ljmp
and
lcall
in
loope
xchg
aaa
pop
cmp
mov
mov
pusha
push
sub
mov
ss
push
xchg
arpl
js
push
addr16
add
aaa
rol
pop
or
in
imul
fisubrs
aas
inc
aas
push
ja
out
sahf
testb
pop
fiaddl
or
cmp
dec
ja
pop
jno
fwait
jb
cs
hlt
pop
movsb
mov
cld
pop
pop
jecxz
mov
pop
call
mov
je
mov
mov
sub
test
loopne
fldenv
and
push
leave
cmc
in
xor
pop
inc
sbb
pop
push
cmpl
orl
imul
push
dec
mov
adc
adc
or
test
or
jnp
mov
dec
fwait
mov
xor
test
mov
or
push
aas
in
imul
mov
andps
leave
fs
ret
jmp
stc
jno
ss
in
imul
xchg
jne
loope
cs
adc
lret
pop
xchg
lea
sub
out
cmp
fstpt
dec
pop
lock
mov
in
lea
and
es
push
out
stos
xor
cmp
xor
fstl
outsb
enter
sub
inc
xchg
pop
lcall
aam
lret
jae
jb
xor
pushf
stos
jecxz
adc
xor
xchg
clc
jae
sub
cmp
pop
sub
fidivrs
ljmp
stc
fstpl
stos
push
pop
push
dec
rorb
jno
pop
and
dec
cmp
repnz
or
arpl
enter
and
insl
mov
cmpsb
xor
and
fistpll
push
xchg
out
and
dec
fsubl
xchg
dec
mov
lods
adc
sub
hlt
adc
pop
inc
jl
pop
push
mov
pop
sub
test
cli
inc
adc
mov
mov
mov
daa
lods
clc
pop
into
xchg
sbbl
cmp
pop
pop
and
nop
sbb
jge
repz
hlt
stc
mov
push
and
into
inc
add
jno
aaa
inc
andl
pop
sbb
jne
loope
iret
popf
mov
enter
sarb
sbb
or
sbb
xchg
int
lret
mov
push
mov
adc
adc
insb
call
cli
mov
aam
dec
ljmp
pop
and
icebp
cltd
or
push
or
xor
xchg
xor
in
mov
push
movsb
add
add
into
pop
push
stos
lret
cmc
jl
ljmp
mov
add
adc
fdivl
xchg
std
adc
or
ljmp
mov
in
jge
pop
inc
out
fstl
das
push
jg
addb
ss
lods
int3
in
xchg
mov
mov
xchg
push
xor
je
add
cmp
push
xchg
jecxz
jmp
xor
and
data16
ficomps
ret
jnp
pop
daa
mov
andb
iret
iret
add
xor
test
xor
mov
xor
xchg
dec
lea
fwait
sub
mov
inc
imull
add
inc
inc
iret
lret
mov
dec
pop
pop
and
int3
pusha
mov
inc
aad
arpl
in
popa
inc
jo
insb
jbe
f2xm1
nop
enter
push
sbb
insb
xchg
test
or
push
cmp
mov
sub
enter
inc
addr16
mov
push
das
pop
and
sbb
add
add
adc
mov
mov
or
sub
pop
loope
or
int
les
aam
push
jbe
rorl
lock
xor
test
sbb
xor
mov
movsl
xchg
sbb
lahf
loope
push
or
fwait
nop
xchg
lahf
push
and
bound
sub
cs
aad
test
ljmp
loope
xlat
stc
arpl
aaa
pop
daa
shll
stc
or
jecxz
mov
sub
repz
push
jbe
add
jl
jle
xor
push
cs
dec
daa
out
stc
add
xchg
lea
inc
push
popa
jnp
jno
cmc
dec
daa
add
in
rorl
popa
bound
cmpsl
mov
out
mov
cwtl
sub
hlt
sub
sbb
xor
or
lcall
pop
xchg
gs
xchg
sbb
in
lods
es
aad
xchg
loop
or
loope
clc
sti
add
add
cmpsb
loope
lods
lods
lods
mov
or
mov
fs
insl
lock
test
outsb
sub
out
xor
ror
mov
call
sbb
sbb
aad
adc
mov
sti
rcrb
jmp
in
loope
mov
mov
insw
adc
les
fcompl
add
pop
add
inc
mov
push
dec
mov
mov
das
push
insb
imul
push
mov
fcoml
lcall
in
xor
scas
test
aad
sub
jbe
xor
adc
push
pop
lods
mov
push
das
mov
fisttpl
xor
jbe
scas
stos
jg
or
mov
xchg
insl
lret
push
add
xlat
lods
mov
and
sub
adc
jo
aam
in
sbb
and
mov
or
dec
test
dec
push
movsb
test
fdivrs
gs
xchg
and
icebp
repnz
xchg
cmp
xchg
scas
test
push
mov
fldl
push
sub
pushf
xor
loope
mov
dec
in
and
adc
jo
lods
ficomps
and
data16
lods
adc
mov
lahf
aaa
loop,pn
outsb
fwait
mul
jp
jo
popf
jbe
ret
adc
pop
dec
jp
loope,pn
aad
icebp
ret
push
das
cmp
jle
out
mov
cmp
lret
lret
ret
pop
ja
popf
sub
lods
pop
es
sbb
fs
sahf
jno
test
clc
inc
push
jo
fistl
jle
popf
movsl
out
adc
cmp
add
xchg
xor
into
movsl
mov
add
cmp
jmp
dec
int
lds
sbb
jle
aad
sbb
xchg
xor
mov
aas
int
pop
push
lret
pop
jae
adc
xchg
loopne
aad
pcmpgtw
flds
jns
mov
das
pop
lret
loop
mov
gs
dec
orb
push
and
aas
jle
pop
xlat
dec
mov
adc
mov
mov
sbb
push
jg
jo
bound
mov
int3
jg
or
add
loopne
mov
jns
out
push
das
adc
inc
mov
insb
mov
lea
lahf
stos
cmpsl
pop
movsl
xchg
mov
scas
aaa
data16
int3
leavew
cwtl
insb
sarl
sbb
xor
insb
mov
dec
inc
test
js
psrlq
mov
jo
mov
push
pop
pop
outsl
mov
cwtl
movsb
fbstp
add
and
nop
fadds
xchg
push
lods
enter
in
mov
cld
in
adc
sub
mov
lock
jmp
arpl
jnp
xorl
mov
pop
adc
movl
push
out
xor
adc
stc
ret
ja
leave
pushf
push
jnp
mov
stos
arpl
rol
dec
repnz
fcom
aas
mov
mov
clc
dec
rcll
shrl
loope
lret
push
mov
jp
jmp
pop
sarl
lods
inc
inc
and
nop
mov
dec
lds
fcom
pop
or
lea
jae
xor
in
notl
lcall
and
sub
pop
adc
push
std
ja
mov
add
add
or
pop
cli
inc
dec
jae
mov
aaa
out
xchg
sbb
ljmp
loop
pop
sbb
inc
jno
into
adc
cmp
int3
add
cwtl
aas
lock
pop
mov
or
add
in
aas
mov
jg
pop
repz
mov
loopne
jns
jp
sub
dec
pop
loope
inc
in
arpl
movsl
pop
and
in
jge
test
and
mov
in
xor
imul
jl
test
int3
mov
aad
mov
xchg
aaa
scas
stos
jp
nop
mov
lea
ss
xchg
jl
sub
aam
out
test
stos
sarl
sub
in
mov
jle
rcrb
scas
adc
jmp
and
lock
dec
pop
mov
nop
adc
pop
lret
xor
fadd
popa
or
mov
mov
les
stc
pusha
in
loop
xor
push
negb
xor
into
cmp
fbstp
std
aad
shrl
jo
bound
inc
push
inc
clc
fdivrs
lods
xchg
loope
mov
les
loope
imulb
lea
xor
loope
repnz
inc
dec
sbb
lds
lret
cli
push
inc
cmp
test
add
ja
sbb
xor
cld
mov
sub
mov
in
xchg
scas
in
in
rcr
loopne
mov
dec
or
in
sbb
insb
adc
das
in
imul
arpl
stc
mov
stc
mov
orb
shlb
inc
and
vpaddd
push
and
addr16
push
jle
cld
out
push
xor
add
mov
push
stc
mov
gs
inc
pop
and
dec
fsts
rol
outsl
mov
out
nop
lods
popl
icebp
or
push
jnp
mov
popf
sbb
lcall
aas
les
xchg
cmp
loop
sub
add
jg
jle
das
hlt
stos
popf
cmpsl
cmp
dec
xchg
sarl
inc
scas
stos
push
lods
xor
inc
xchg
jo
jg
in
or
movl
mov
xor
and
les
rorl
cli
movsl
xlat
pop
ret
sar
sub
loopne
push
dec
and
outsl
pop
rcl
mov
sar
cmovo
push
push
mov
sbb
popf
push
jbe
adc
mov
cwtl
xchg
xrelease
out
sub
scas
fst
mov
loop
push
mov
imul
jecxz
inc
sbb
lds
mov
imul
stos
sbb
push
lahf
xchg
cmp
out
sub
arpl
cmp
xor
inc
mov
data16
repnz
mov
mov
rcrb
pop
movsl
mov
js
inc
add
popa
stos
fisttps
xor
xor
cmpsl
and
jb
push
mov
repz
hlt
lea
ret
mov
cld
sub
loope
or
xor
lods
test
xchg
imul
in
jge
pop
int3
pop
pop
cmc
mov
pop
paddq
or
pop
xor
iret
jg
jl
enter
movsl
loopne
inc
lret
pop
xor
stc
gs
fs
popf
mov
pminub
lods
or
stos
popf
aas
push
and
mov
mov
jbe
xchg
dec
nop
insb
jbe
add
mov
es
sub
insb
xor
adc
out
repnz
sbb
call
xlat
mov
pop
leave
xchg
inc
inc
cmp
jne
loopne
iret
scas
es
cmpsl
push
cmp
adc
dec
cli
cwtl
xchg
add
mov
xor
xor
xor
shrb
ss
jb
cmp
outsl
loop
repnz
cmpsb
push
jge
push
mov
mov
or
movsb
add
xor
test
push
mov
dec
das
jg
mov
fdivrs
repnz
and
xchg
pop
mov
sbb
jl
mov
mov
pop
add
push
sbb
cmp
sub
arpl
pop
rcrl
dec
jno
insb
cld
add
mov
in
adc
pusha
mov
cmpsl
cld
test
pop
in
sbb
roll
mov
and
xor
ss
adc
orl
mov
hlt
inc
xchg
sbb
xchg
sbb
or
stos
add
pop
push
dec
outsl
ljmp
subb
push
ret
cmpsl
sbb
or
or
cmp
sbb
movsb
lret
dec
xor
sbb
push
in
inc
jmp
adc
sbb
push
mov
jno
or
cld
mov
pop
cmp
cmp
negl
add
push
or
outsl
in
jae
sbb
out
mov
mov
dec
mov
pop
std
cmpsl
cmp
incb
dec
arpl
into
popf
sbb
inc
xchg
mov
int
sub
test
xchg
nop
dec
rorl
pop
sub
sbb
add
ret
cmc
aaa
ljmp
scas
std
mov
mov
sbb
test
popf
xchg
cmpsb
int
adc
faddl
int
into
mov
jbe
and
sar
out
or
fildll
pop
testl
mov
sub
mov
jo
mov
mov
mov
push
sub
imul
lcall
sub
add
sbb
mov
add
mov
aaa
mov
pusha
fldt
popf
lret
insl
jmp
push
jns
lock
inc
dec
cmp
leave
jl
outsl
push
movsb
xchg
cmp
jbe
adc
idiv
xchg
adc
mov
scas
xor
ljmp
adc
out
add
and
and
scas
repnz
xchg
cmpsb
jg
cmp
lods
cmpsb
sub
je
and
cltd
xchg
out
inc
repnz
in
sbb
orb
sub
dec
es
add
sahf
leave
cmp
sbb
cmp
sbb
cld
jns
cld
push
lods
mov
roll
inc
mov
or
stc
sbb
cmp
and
and
fldt
movsb
insl
es
mov
roll
adc
jne
xchg
inc
cmp
mov
shlb
cmp
cmp
xorb
add
push
pop
cmp
and
inc
adc
cmpsl
outsb
sub
cmp
add
pop
shll
jb
sahf
xor
int3
imul
and
scas
sahf
or
cmpsb
cmp
adc
sub
add
in
es
pop
fmuls
cmpsb
movl
inc
mov
push
das
roll
xor
js
std
cmpsb
inc
pop
movsl
sub
das
int
add
cli
ret
or
test
mov
int3
in
add
repz
inc
push
sub
dec
js
add
inc
cli
add
arpl
sahf
push
xchg
insl
cmp
adc
jl
add
push
dec
stos
pop
popf
mov
cmp
cmpsl
lock
js
repz
xor
sbb
push
dec
shr
fistpl
and
test
add
push
and
push
pop
push
sbb
xor
mov
nop
fbld
dec
xchg
cmp
pop
fimuls
xor
orl
adc
andl
cmp
sbb
popf
les
sub
lods
and
popa
imul
pusha
jo
aam
xchg
xchg
or
std
test
xor
in
xchg
xchg
in
int
inc
adc
loope
daa
add
leave
dec
sub
addl
dec
stc
push
pop
mov
jb
pop
xor
out
mov
pop
les
pop
sub
jp
imul
out
pop
nop
pop
xor
cld
xlat
fcompl
repz
data16
cmp
scas
and
pop
daa
mov
mov
xorb
jp
adc
mov
leave
ror
push
imul
in
and
xor
cld
cltd
lods
hlt
stos
jo
jle
xchg
sub
mov
cltd
mull
xchg
adc
jb
bound
ds
push
loope
xchg
aaa
stos
or
roll
push
cli
xor
mov
stc
addr16
sub
cmpsl
jmp
inc
jne
dec
sub
mov
test
inc
dec
xchg
lods
and
adc
mov
xor
xor
aas
movsl
daa
mov
sub
insl
je
ss
ret
test
fcoml
mov
jp
scas
jbe
push
call
xchg
es
fs
and
xchg
data16
xchg
dec
movsl
xchg
push
pop
mov
add
les
and
adc
andl
mov
inc
cmpsl
xlat
sbb
gs
js
shl
cmp
sbb
add
inc
mov
lea
aam
icebp
xor
adc
push
push
or
loope
inc
jae
inc
cli
sahf
cmpsl
andb
pop
adcl
imul
rcrl
out
add
xor
jo
inc
in
cmc
cmpsl
cmp
std
xor
cli
scas
xchg
jno
mov
in
adc
cli
test
std
fnstsw
pop
or
pop
push
or
loope
out
xchg
or
pop
hlt
je
int
cltd
clc
shll
nop
ret
arpl
test
and
into
or
lds
jnp
jle
mov
aaa
popf
pop
push
ret
bound
rorl
ret
inc
mov
roll
fidivrl
aam
push
das
xor
jbe
mov
jp
add
mov
imul
jnp
cltd
jecxz
mov
xchg
cmc
lds
jbe
jbe
xchg
xor
cmp
ja
mov
mov
ljmp
dec
cmp
fdivs
mov
loope
push
sub
outsl
dec
sub
out
icebp
rdpmc
mov
stos
and
fisttpl
imulb
into
pusha
pop
push
cmp
aad
jns
cmpsl
adc
pop
jmp
dec
or
jecxz
aaa
stos
enter
test
add
add
dec
xchg
jle
fwait
pop
jbe
dec
scas
jg
fidivrl
xor
ret
pop
pushf
loopne
xchg
mov
and
subl
stos
inc
add
leave
subl
pusha
xchg
inc
pop
in
daa
es
jbe
out
addr16
inc
sarb
dec
pushf
ffree
andb
sbb
adc
mov
pop
fs
pop
sub
push
lods
mov
in
xor
pop
cmpsb
aaa
and
jno
mov
fisubrs
mov
mov
pop
lods
pop
dec
mov
add
xor
popl
inc
mov
pop
pop
and
inc
sub
push
push
rolb
mov
sub
adc
inc
out
repz
push
mov
mov
out
mov
hlt
mov
in
xor
and
adc
dec
jmp
dec
stc
push
out
push
lods
adc
faddp
and
hlt
and
jecxz
out
jne
mov
out
cmp
inc
or
cmp
mov
pop
sbb
enter
xor
and
test
push
test
cmp
stos
hlt
out
and
and
fsubl
sbb
mov
shll
rolb
les
lds
bound
scas
clc
pusha
inc
lock
sbb
sub
ds
adc
sti
add
pop
cmp
adc
fcomps
cltd
cs
or
xor
add
and
cmpsb
cltd
push
fs
movsl
xor
dec
jae
lods
xchg
dec
xor
pop
int
js
in
pop
sbb
adc
in
mov
insb
adc
push
mov
gs
jp
std
insb
cmp
xor
popf
sub
dec
mov
push
imul
aad
fcoms
nop
fbld
dec
and
or
loopne
mov
inc
imull
adc
loop
adc
cmp
dec
repz
fcoms
das
arpl
xchg
shl
enter
insb
push
add
push
fisttps
pop
les
int
jecxz
cmp
jge
repnz
mov
test
pop
inc
jmp
jnp
add
and
ss
xor
adc
xchg
test
movsb
pop
movb
adc
repnz
xchg
rol
xchg
leave
pop
lea
pop
inc
xchg
int3
cmc
in
jo
mov
pop
rcll
push
and
rcrl
pop
mov
lcall
mov
roll
cmpl
iret
inc
sub
and
hlt
lahf
div
ret
mov
out
lret
sar
loope
push
rep
and
sahf
or
idivb
rcll
fiaddl
or
add
lods
lock
xor
sysenter
out
push
hlt
mov
jl
fmuls
std
ss
je
loop
jne
jge
int3
hlt
mov
push
add
int
mov
xchg
push
pushl
ret
movsb
in
test
sub
movsb
sub
cmp
test
or
loope
mov
test
bsf
lahf
lds
pop
push
dec
push
lahf
sub
mov
jecxz
not
lahf
roll
sub
cmp
ss
xchg
lret
add
mov
jg
jne
adc
mov
jge
popf
xchg
mov
fwait
in
lods
cmp
lds
add
lock
int3
addr16
xchg
inc
lcall
pop
pushl
cltd
and
lods
push
push
lods
rcll
or
test
xchg
add
inc
xor
cmp
pop
mov
push
sub
mov
add
inc
inc
mov
mov
sub
aaa
push
jg
xor
clc
sub
sti
pop
push
test
in
into
clc
fistpll
inc
jle
lea
cmpsb
dec
nop
mov
scas
mov
inc
jmp
stos
or
ud0
cltd
xor
in
fisubs
icebp
jp
rclb
pop
dec
loope
inc
fmuls
mov
push
pop
shr
mov
stos
adc
aaa
jecxz
cmp
and
outsb
notb
or
push
pop
rclb
outsl
repz
add
loop
push
arpl
mov
cmpsl
in
out
inc
insl
jb,pt
cwtl
sahf
pop
mov
inc
scas
dec
add
push
lods
js
mov
fistpl
xchg
push
or
pusha
mov
push
repnz
pop
xor
sub
and
test
out
pop
lds
mov
iret
add
jae
shll
imul
fstps
std
push
test
into
fwait
gs
imul
std
ss
mov
inc
imul
loopne
mov
push
dec
lods
icebp
das
scas
movsb
mov
es
loope
inc
stc
lret
push
sarb
les
jge
in
int
fsubrl
add
icebp
inc
mov
clc
jbe
fdivs
out
and
cmp
xchg
xorb
cmp
push
lcall
mov
orb
xor
push
repz
in
sub
pop
les
sub
jmp
fidivs
out
subb
lds
fs
mov
imul
xchg
out
and
rcll
ljmp
jge
mov
dec
repnz
mov
push
shlb
mov
push
pop
add
xchg
mov
jns
sti
aam
and
mov
popa
in
enter
cwtl
clc
pushf
shll
xchg
push
test
int3
enter
pop
adc
pop
fildl
mov
xchg
cmp
mov
divl
mov
cmp
int
add
add
fbstp
inc
sarl
sbb
xor
lods
mov
inc
std
mov
call
fwait
inc
add
sbb
mov
cld
js
and
mov
imul
sti
cmp
mov
add
cmp
sbb
pusha
iret
or
pop
lret
add
dec
adc
fcompl
mov
imul
out
or
lcall
mov
mov
mov
push
leave
lods
loope
xor
push
xchg
and
dec
sub
call
mov
push
dec
mov
dec
mov
stos
in
imul
cmp
int3
fcom
es
out
mov
ds
fstl
mov
and
xchg
mov
jl
or
imul
jbe
add
outsl
mov
push
lods
popa
mov
imul
push
stos
out
sub
aad
out
push
mov
out
popf
ret
lret
outsb
push
addr16
dec
and
mov
shll
push
lock
call
mov
movb
jecxz
ret
cmp
mov
cmc
loopne
stos
dec
adc
pop
pop
or
or
mov
mov
dec
mov
sbb
and
jnp
dec
dec
adc
sub
and
mov
jnp
sub
imul
into
push
sbb
inc
arpl
mov
lret
ja
aas
repz
push
daa
cli
jbe
sbb
jp
cwtl
xor
repz
and
jge
cli
sbb
icebp
push
repz
mov
cwtl
cwtl
sbb
ret
call
xchg
shlb
mov
dec
dec
mov
mov
mov
add
cmp
pop
xlat
pop
fists
dec
push
jnp
mov
pop
mov
aas
adc
outsl
pop
pushf
inc
xchg
add
cmp
cmpsl
rorl
arpl
test
jp
ficomps
and
insl
movsb
inc
xchg
mov
loopne
pop
dec
ljmp
cmc
mov
dec
out
out
aad
push
inc
add
dec
mov
dec
sarl
sahf
ret
sbb
fwait
push
loopne
inc
outsb
adc
jle
ljmp
pop
push
or
xor
push
out
cld
xlat
out
out
xchg
ret
and
add
scas
sub
jecxz
xchg
cmp
movsl
jge
mov
and
pop
orb
dec
ficoml
mov
mov
sub
sub
and
in
negl
ret
mov
jp
pop
ljmp
std
inc
in
roll
cld
test
inc
repz
ret
fisttpll
add
mov
and
adc
adc
repnz
dec
mov
dec
dec
fisttps
gs
add
push
shlb
scas
imulb
xor
cmpsl
xchg
adc
mov
cltd
mov
insl
aad
subb
scas
dec
std
mov
dec
data16
jno
sbbl
lock
icebp
jle
stc
inc
sub
outsb
inc
leave
adc
movsb
and
xor
xchg
int
gs
jp
add
and
mov
pop
jle
mov
xchg
mov
mov
push
mov
dec
adc
arpl
mov
pop
in
fucomp
push
test
fwait
mov
jge,pn
mov
cmpsl
sub
adc
out
fsubrs
push
inc
mov
sbb
sub
ja
jmp
add
sub
faddl
leave
hlt
mov
arpl
sub
or
push
repnz
pop
into
in
ja
aas
dec
aam
test
lods
adc
mov
dec
mov
rclb
shlb
cmp
nop
and
fcmovne
mov
mov
sbbl
jmp
mov
pop
mov
mov
scas
xor
mov
mov
push
sbb
sbb
inc
bound
mov
scas
sbb
push
sbb
push
inc
cwtl
inc
add
faddl
lds
stos
test
movb
fldl
cs
adc
jns
push
cmc
sbb
mov
scas
pop
clc
pop
sub
pop
dec
lret
imul
push
inc
inc
jmp
jbe
sub
fs
mov
les
out
sub
popa
mov
and
xor
mov
pop
fildl
rcrb
mov
dec
dec
and
ret
inc
mov
mov
xchg
jl
dec
sub
xor
adc
xor
and
dec
dec
mov
jl
add
insl
pushf
pop
xchg
ss
xor
xor
adc
mov
int
insl
inc
add
lcall
mov
std
mov
mov
inc
mov
pushf
mov
insl
or
jmp
dec
andb
popf
and
fs
jge
mov
insb
sub
out
dec
gs
aaa
test
int
xchg
xor
jge
mov
les
bound
stos
inc
push
outsb
cmpsl
fsubs
andl
pop
cmp
jmp
and
and
test
scas
jge
cmp
sbb
fsub
add
sub
out
sbb
mov
xor
fs
outsb
fidivrl
jne
mov
xor
mov
push
pusha
push
pop
pop
mov
xchg
les
test
fdivrs
loop
xlat
je
mov
mov
jge
mov
jb
pop
rcrb
imul
mov
inc
add
movsl
test
jae
sti
popa
addr16
cli
aaa
inc
and
cmpsb
mov
arpl
cli
add
push
int3
add
adc
sbb
fs
add
rcrb
lock
sbb
idivb
inc
or
aas
mov
mov
call
subl
lods
xchg
popa
repz
inc
sbb
loope
mov
cltd
pop
loop
pop
ljmp
xchg
xchg
movsb
inc
repnz
mov
fbld
stos
pop
out
sbb
inc
inc
mov
push
bound
add
dec
popf
adc
pusha
sbb
test
jg
mov
test
repz
stc
popf
stos
add
xchg
cmc
push
pop
leave
inc
lds
push
mov
loopne
inc
mov
outsb
ljmp
subb
pop
xchg
enter
lahf
pop
loope
push
and
adc
jnp
daa
dec
or
addr16
mov
jp
insb
nop
sbb
xor
push
mov
roll
lcall
sub
mov
push
sub
aaa
xlat
xor
jmp
inc
fs
jno
mov
ret
xchg
out
dec
aam
sbb
loopne
xor
ds
mov
xor
outsl
sbb
pusha
or
int3
push
iret
out
cmp
test
xchg
jg
mov
addr16
sarl
lahf
adc
push
push
pop
popl
xor
add
lock
cld
stos
scas
and
inc
stos
jae
dec
test
pusha
lcall
xchg
fimuls
out
shlb
arpl
mov
xorb
movsl
pusha
popf
add
adc
rcll
in
mov
icebp
pusha
movsb
mov
in
shrb
mov
push
stos
sbb
dec
lods
inc
push
ficoml
or
out
xor
movntq
jae
sub
and
sbb
add
adc
pop
stc
rcl
shll
mov
loopne
sub
or
repz
movl
sbb
xor
stos
lock
inc
push
cltd
add
inc
loopne
mov
ficompl
adc
mov
mov
aam
cld
or
std
pop
sbb
pop
icebp
and
frstor
cmpb
fcoml
sbb
fptan
adc
mov
mov
inc
fsub
call
insb
das
ja
cmc
inc
addr16
fdivp
icebp
enter
cltd
lock
fisubrs
popa
movsb
adc
enter
cmpsb
ljmp
jl
mov
mov
insl
sub
scas
insl
or
mov
subb
outsb
xchg
dec
mov
sbb
pushf
repnz
jno
rolb
shlb
mov
xchg
ljmp
add
repz
mov
cmpsb
sahf
js
mov
mov
iret
leave
sbb
adc
push
cmpsb
xchg
out
push
mov
stos
pop
jae
mov
cmp
sbb
incl
sub
and
or
xchg
jo
test
and
and
andb
lahf
repz
sub
das
or
rol
dec
sbb
pop
pusha
add
bound
lret
mov
pop
mov
icebp
sbb
sahf
popf
add
fidivrs
pop
movsl
into
mov
lret
mov
loope
popa
ja
or
movsl
movsb
inc
aad
jmp
jl
sbb
mov
cmp
push
pop
bound
mov
jae
and
repz
cwtl
cmp
sub
insb
jo
ds
icebp
pop
cmpsl
cmc
mov
cmp
loop
js
cmp
das
xor
shl
dec
outsl
lods
jge,pt
mov
into
pop
adc
add
push
pop
xchg
jge
jmp
pop
xchg
cmpps
popa
pop
mov
cmp
mov
fstpl
xor
int
fists
insl
fs
lds
pushf
push
mov
mov
jecxz
jae
mov
ret
mov
out
scas
cmp
sti
into
mov
aas
mov
mov
mov
xor
and
pushf
movsb
jmp
pop
and
lahf
jg
push
iret
pushf
in
jge
pop
test
mov
repz
insl
pop
pop
and
dec
and
mov
insb
sahf
cltd
call
in
push
call
loop
out
test
push
jl
es
dec
push
xor
out
push
mov
out
bound
rcrl
je
mov
push
fisubrl
adc
movsb
in
sub
jnp
insl
mov
cld
cwtl
pop
adc
xchg
fldt
jno
leave
insl
pop
and
jecxz
lret
das
insl
and
leave
dec
pop
ja
xor
sbb
cmpsb
shrl
sbb
stos
mov
repz
mov
shlb
mov
inc
data16
aad
daa
std
push
aad
in
xor
jb
push
fisubrs
push
stos
xlat
cs
jp
xchg
inc
ror
dec
mov
inc
xchg
inc
loop
mov
jo
lret
sub
jns
loopne
sbb
cmp
out
pop
aad
out
push
lret
test
insb
sub
or
mov
inc
mov
adc
mov
ja
and
or
add
adc
daa
outsb
lods
cmp
xchg
xchg
mov
jmp
out
ja
xchg
fwait
mov
xbegin
or
in
int3
push
dec
sbbl
js
add
push
jecxz
inc
push
cmp
xchg
ss
mov
and
adc
enter
cmp
push
stos
fcoml
je
push
out
ja
inc
aam
fimull
out
dec
or
push
cmp
push
outsl
adc
pop
adc
addl
sti
add
pop
inc
pop
mov
mov
mov
push
sbbl
scas
mov
div
xchg
adc
aas
add
jmp
shrl
ss
into
out
pop
lods
xor
aad
mov
ja
fbld
push
mov
ss
aad
jl
loop
jnp
daa
int3
mov
fnsave
out
or
repz
add
pop
gs
rclb
in
adc
push
push
or
loopne
mov
ret
ljmp
cltd
out
or
sbb
jp
lds
push
das
push
cli
jl
outsb
ja
sub
jno
ss
mov
inc
imul
inc
mov
add
faddl
sbb
popa
inc
leave
mov
repnz
adc
mov
out
jp
push
imul
std
adc
xor
dec
lods
cwtl
cmp
test
int3
cmc
lods
push
in
cmp
cmc
mov
lods
sub
mov
test
mov
in
mov
or
mov
aas
xchg
xor
pusha
loopne
fstpl
lods
mov
fdivs
mov
jmp
stc
push
aaa
in
shr
pop
jmp
dec
fcmovbe
adc
repnz
xor
mov
lcall
test
sbb
insb
push
sbb
fistl
add
iret
add
sahf
pop
mov
std
repz
push
sti
ss
jne
push
out
mov
or
xchg
pop
or
imul
jg
xchg
lcall
cmp
cltd
jns
pusha
xor
scas
xor
inc
xchg
dec
mov
jbe
push
xor
cmp
push
pop
mov
jecxz
shll
xlat
es
addr16
cltd
add
mov
jl
sbb
xrelease
fwait
dec
add
or
rcll
mov
dec
jge
or
adc
mov
filds
pop
in
in
xchg
cmc
fldcw
inc
adc
adc
pop
dec
add
enter
push
lods
pushf
sbb
and
test
push
pop
cmpsl
stc
aam
jecxz
testl
and
mov
or
in
pop
dec
addr16
shlb
pusha
push
aam
fldenv
or
test
dec
cmp
jne
fs
test
out
ret
or
or
jmp
inc
sarl
addr16
mul
mov
and
dec
mov
xor
bound
or
or
adc
test
dec
sarl
icebp
in
xchg
stos
jge
pop
or
add
movsl
lea
jecxz
call
stos
fs
mov
rcrb
cmp
add
jae
test
pop
daa
push
or
cmp
gs
xchg
out
scas
lret
push
outsb
lds
mov
mov
mov
or
mov
xchg
xchg
jle
cmp
imul
push
insb
jne
add
jp
shrb
enter
push
scas
or
lahf
in
push
std
aam
insb
cltd
movsl
sub
and
cmp
stos
jb
cld
cmp
mov
sub
nop
lock
aad
jle
arpl
cmp
les
cmp
sbb
jl
xorb
test
xlat
jg
push
jg
adc
mov
hlt
mov
mov
cmp
ja
mov
cmp
jmp
xchg
test
in
xchg
mov
dec
cwtl
stos
xchg
mov
ss
loopne
inc
int
dec
adc
test
adc
or
outsl
aad
push
mov
xor
in
out
lea
test
out
push
lahf
rolb
popf
cwtl
lret
mov
sbb
sub
add
mov
jecxz
divb
mov
xchg
imul
dec
pop
popa
jmp
and
and
int3
cmp
fcoml
and
mov
pop
js
sti
dec
sbb
mov
cmp
sbb
es
aad
add
daa
cwtl
add
jo
pop
pop
clc
sub
in
mov
test
loopne
aad
pop
icebp
adc
pop
sub
fistpl
xchg
xchg
sub
gs
pop
xor
cwtl
sbb
mov
movsl
jnp
sahf
cs
xchg
lret
arpl
iret
fistps
pop
mov
sub
or
cmp
fld
pop
test
push
inc
rorl
xor
mov
pop
or
xchg
sbb
sbb
mov
jmp
and
mov
and
inc
mov
xchg
mov
cmp
pop
pusha
cmp
cld
aaa
mull
aam
imulb
pop
call
mov
insb
pusha
lock
add
leave
test
or
push
clc
pop
iret
xlat
jl
xor
cmpsb
es
mov
jnp
lcall
pop
or
les
cmpsl
dec
xchg
in
mov
mov
mov
add
mov
cmpsl
out
cltd
inc
push
aas
inc
mov
testb
push
pop
and
sti
add
jp
popf
sub
mov
and
sbb
pop
push
lahf
movsb
xchg
pop
arpl
cmp
les
imul
or
cld
sbb
lcall
push
pop
mov
add
mov
shll
rorl
jg
sub
pop
xchg
xor
roll
push
xchg
fcmovb
movsb
imul
pop
jnp
loopne
ds
push
call
xchg
in
mov
fs
mov
or
cld
sub
aad
mov
sub
sub
mov
leave
or
movsb
push
js
mov
bound
lock
cwtl
cmpsl
mov
fiaddl
enter
sub
insb
mov
add
xor
push
bound
in
ffree
push
out
in
test
les
mov
test
mov
xchg
xor
push
or
xlat
sbb
cmp
enter
inc
push
inc
pop
mov
push
push
scas
mov
call
je
shlb
mov
and
orl
cli
xor
in
sub
cmp
jle
loope
adc
xchg
xchg
and
push
fldenv
shlb
xor
xchg
repz
std
inc
mov
sti
add
sub
add
xlat
ja
scas
les
mov
ljmp
test
push
pop
stos
lods
js
lret
adc
inc
or
push
xchg
cmpsb
pushf
mov
jmp
cs
dec
and
cli
ss
stos
cmpsb
into
inc
jbe
jp
fimuls
in
mov
cmp
call
inc
loope
jg
leave
sti
call
ljmp
lods
add
dec
dec
xor
mov
lret
js
jo
and
push
inc
ret
sar
dec
cltd
fs
loope
nop
ja
pop
addr16
test
repnz
shl
inc
in
movsl
pop
adc
ja
mov
or
shrl
inc
mov
pushl
fistpl
stc
movsl
mov
add
add
data16
push
loopne
addr16
mov
xchg
push
shlb
int
inc
js
xchg
pop
inc
and
mov
jl
aad
inc
js
or
aad
cli
stc
sbb
jl
insb
dec
ds
push
mov
js
push
js
lea
cmc
fwait
push
dec
cwtl
mov
aam
daa
mov
jne
add
cmp
imul
inc
sub
sub
cld
xor
fcoml
lcall
imul
scas
scas
cmpb
mov
mov
sbb
roll
mov
repnz
jno
sti
xchg
out
jae
pop
cltd
mov
push
mov
inc
push
mov
xchg
rcr
jne
mov
xlat
sbb
loope
push
fnstcw
negl
in
and
mov
mov
test
pop
lock
jle
les
sub
fwait
or
cmp
pop
rcrl
sbb
mov
mov
pop
repz
xor
xchg
cltd
test
sbb
sub
fwait
jb
cltd
xor
jge
fwait
jnp
mov
jl
xlat
fists
mov
lods
subl
gs
int
add
fcoml
jb
popf
sbb
mov
loopne
lods
out
fsubrl
xchg
ds
dec
xorb
inc
jnp
loope
mov
pop
push
add
push
xor
les
mov
jns
cwtl
push
stos
adc
push
mov
sub
arpl
test
jae
add
lcall
jle
push
clc
mov
aas
cmp
or
push
loop
or
fistpll
xchg
fisubl
dec
mov
mov
inc
lret
pop
push
out
mov
aam
cmc
pop
int
mov
xchg
mov
mov
js
lds
mov
lret
add
mov
or
fildl
popa
je
ja
popa
rcrb
fidivrl
pop
add
int3
or
call
cmp
pushf
mov
shlb
cltd
insl
jne
dec
push
popf
jo
push
bound
mov
stc
daa
hlt
mov
or
xor
xchg
pop
and
repz
cmpsl
rcr
das
rcrl
or
mov
pop
or
test
andb
and
addr16
dec
fadd
in
jg
push
add
sbb
xor
out
push
cltd
adc
jge
mov
cmp
push
movsl
add
pop
push
push
dec
mov
gs
mul
jnp
pop
add
pusha
imul
adc
ficomps
pop
pusha
pop
fst
mov
add
fwait
jb
fstpt
fcompl
clc
stos
cmp
in
sbb
push
inc
and
sub
dec
mov
int
pushf
cmp
jg
push
das
jnp
sti
cmp
lods
daa
and
jge
mov
in
or
mov
ret
mov
cld
dec
imul
dec
int
and
fiadds
test
and
push
push
cltd
or
jge
xorb
jns
das
sar
out
inc
adc
cmp
loopne
push
or
adc
add
and
xor
add
xchg
and
or
fdiv
aad
neg
and
push
sti
dec
popf
pop
pop
cld
sbbl
ficompl
rcrl
push
lret
mov
jmp
jns
enter
sub
lods
cmpsl
insl
pop
xchg
mov
push
pop
pushf
std
fs
dec
addr16
lock
mov
add
movsl
adc
push
jns
sub
lret
pop
in
stc
cmp
dec
popa
pop
mov
fisttpll
jecxz
hlt
mov
dec
mov
das
pop
mov
adc
xor
dec
ljmp
pop
adc
mov
or
pushf
add
mov
dec
mov
xor
outsb
nop
das
xchg
adc
inc
mov
loope
pop
pop
mov
inc
mov
lahf
stc
mov
sbb
jno
dec
dec
mov
xchg
icebp
add
cmp
push
repz
cmpsb
int3
dec
or
push
in
jle
cli
mov
sar
pop
xor
fchs
cmp
push
or
pop
xor
in
hlt
or
sbb
subl
outsl
and
int3
fistpl
out
mov
cmp
xor
jle
shrb
push
add
outsl
or
movlps
dec
dec
or
cmpsl
mov
xor
test
int3
xlat
out
or
dec
add
push
mov
mov
out
add
in
adc
sub
mov
in
test
jecxz
hlt
xchg
pop
test
mov
pop
lds
jge
in
add
mov
and
add
outsb
add
mov
cld
or
mov
push
outsb
xor
push
cld
sub
xor
dec
test
mov
sub
fmuls
test
hlt
dec
fsubrl
mov
inc
cmp
mov
in
push
ds
cld
sar
sbb
inc
xchg
fs
or
dec
xchg
sti
int
setg
data16
movsl
lea
fstpt
cld
scas
ds
mov
lcall
jp
out
xchg
hlt
lret
popf
sub
or
pop
inc
mov
lcall
jae
dec
inc
stos
loopne
ja
loope
dec
cmp
jne
lock
outsb
jns
lcall
or
dec
adc
cmpsl
scas
adc
lcall
das
cmp
test
mov
or
imul
push
jmp
pop
inc
scas
js
cmp
push
pop
cmp
in
push
icebp
or
cmp
push
lret
xchg
out
int
into
ja
pop
loope
es
mov
pushf
pop
mov
sub
fwait
mov
add
in
jge
cmpsb
pop
fs
jae
mov
add
push
jnp
xchg
jg
leave
pop
sub
icebp
aam
pop
mov
ja
xchg
iret
jp
stos
xor
push
xchg
pusha
aas
jb
push
and
test
dec
xchg
lock
ret
push
xchg
mov
mov
sub
cmpsb
dec
jns
mov
or
pmuludq
pusha
scas
mov
lret
cmp
divl
push
and
mov
adc
imul
mov
cmp
lahf
dec
sbb
adc
mov
adc
sahf
jnp
xor
mov
adc
or
cmp
shl
movsb
filds
mov
bound
xor
insl
outsb
or
imul
or
insb
add
imul
sub
lahf
dec
stc
pop
sbb
xorl
fs
lea
inc
xor
and
adc
inc
inc
or
iret
jnp
imul
and
lock
stc
mov
pop
cmp
out
adcl
lods
mov
push
push
sub
and
ja
fisttpll
ficoml
les
and
ljmp
aas
push
xor
sti
aad
stos
mov
cs
movl
add
out
aad
scas
loop
lock
push
dec
fucomp
xor
pop
sub
dec
add
insb
jno
jg
sbb
lods
jns
stos
test
in
mov
lock
or
ja
xchg
add
push
test
push
fmuls
xor
add
test
cmp
cmp
enter
out
divl
lret
and
inc
sub
add
xchg
fdiv
jmp
inc
mov
cmc
fwait
subb
rcrl
orb
mov
cmpsb
insb
popa
xor
mov
sbb
xchg
aaa
aaa
movsb
jno
inc
mov
dec
jb
inc
popa
orb
mov
cmpsb
arpl
fwait
inc
add
jl
lret
xor
sbb
clc
fsubs
push
push
adc
iret
mov
xlat
in
fdivrl
or
repz
pushf
ret
mov
sti
push
sahf
mov
push
leave
in
outsb
cltd
pop
and
fsubrs
push
inc
test
imul
loope
cld
das
jbe
inc
insb
cli
outsb
push
ret
sub
cli
ret
idiv
pop
test
aaa
insb
ret
xchg
in
jle
lret
mov
jp
push
test
add
into
cltd
fsubr
test
cmpsb
popl
add
cmpsb
add
fptan
mov
mov
icebp
outsb
lret
mov
pop
rorb
cltd
xor
fisttpll
daa
dec
sub
xor
lcall
lods
adc
out
xchg
gs
or
mov
in
push
cmpsl
mulb
sbb
roll
arpl
gs
jecxz
xchg
dec
leave
adc
and
dec
sub
inc
inc
push
rcr
pop
clc
pop
cmpsb
mov
orb
fistl
inc
je
cmpsb
mov
sub
pop
mov
cltd
mov
ljmp
mov
cld
rolb
cli
js
add
xor
or
sbb
or
pop
add
jge
out
fistpll
jno
cmc
and
sbb
popf
fwait
inc
xchg
adc
movsl
ret
add
add
fimull
jnp
repz
stos
cli
ret
sbb
gs
xchg
les
xchg
lret
cmpsl
xchg
cmp
cmp
xor
jmp
imul
out
adc
mov
mov
mov
push
mov
sub
push
mov
bound
add
jmp
cwtl
lock
mov
ret
mov
pop
lcall
or
enterw
mov
jae
movb
cmp
mov
cmp
ret
hlt
pop
inc
lods
inc
xor
jmp
rclb
push
xor
stc
cmp
int
stos
mov
cmc
stc
mov
or
fisubrs
inc
push
or
sbb
lea
decl
push
popa
dec
xor
in
pop
cs
or
pop
mov
inc
insb
js
cld
leave
fildl
push
xchg
cmp
lods
pushf
hlt
test
xchg
mov
push
faddl
push
mov
enter
orb
push
cmpsb
std
repz
ljmp
arpl
leave
int
push
mov
jle
dec
dec
bound
enter
rorb
aad
mov
cmp
icebp
sub
pushf
xor
jbe
sar
jmp
ss
mov
cld
fwait
cld
or
jmp
lds
add
inc
lods
xchg
sarl
bound
jge
aas
mov
jle
shr
dec
fsts
inc
jo
jmp
sti
imul
xchg
sbb
popa
insb
mov
nop
iret
into
pop
dec
flds
mov
bound
scas
enter
pop
sub
in
pop
out
push
pop
imul
xchg
adc
fwait
add
jno
insl
pusha
pop
inc
repz
sbb
iret
mov
mov
lahf
xchg
add
add
jecxz
mov
pushf
pop
mov
rcl
movsb
mov
mov
ret
sbb
push
or
sbb
xchg
je
icebp
mov
ret
adc
pusha
scas
cwtl
push
sub
cld
mov
cmp
cmp
push
int3
adc
xor
jge
xchg
ljmp
sbb
or
jge
sub
hlt
push
cmp
and
cmp
cmp
icebp
cmp
cmp
and
add
js
mov
fwait
mov
lock
dec
jne
sbb
push
pop
loop
dec
mov
mov
xchg
bswap
push
ret
xchg
daa
jns
mov
movb
cmp
and
jne
mov
out
lods
movsl
ret
std
pop
arpl
out
push
xchg
push
add
cli
xacquire
mov
mov
push
arpl
std
out
popf
sub
cmp
in
sbb
inc
aam
xchg
pop
dec
stos
dec
movsl
mov
xchg
mov
sub
cli
ja
adc
cwtl
or
or
inc
stc
lea
dec
cmp
jae
lock
push
xchg
jecxz
notl
pop
fwait
and
and
jb
jae
aad
test
sbb
jb
pushl
jbe
cmp
cli
cltd
mov
pop
movsl
es
sbb
jns
iret
jne
fmulp
ljmp
mov
or
ja
dec
mov
xchg
sub
xor
mov
sbb
mov
cmp
push
cltd
xorl
cld
or
push
popf
lods
lock
fimull
scas
stos
insb
sbb
out
fimuls
pop
cld
xchg
add
push
out
cmp
ret
movsl
xor
sbb
inc
and
dec
adc
cs
pop
sahf
loopne
pop
mov
scas
and
xlat
add
add
xor
adc
int
cli
loopne
out
xchg
adc
mov
or
jge
dec
popf
sbb
data16
mov
shl
stos
inc
aam
lret
test
and
js
outsl
mov
mov
adc
adc
out
add
jne
and
es
adc
dec
mov
stc
mov
sub
mov
imul
xchg
push
mov
fisttps
daa
add
or
push
dec
adc
out
cmpsl
xlat
push
jge
pop
fwait
dec
jno
movsb
adc
mov
mov
popf
pushl
cmpsb
push
enter
shlb
cmp
lds
mov
loop
jbe
xor
fcmovbe
xchg
shl
jae
clc
sbb
stc
lds
leave
test
push
loope
cmc
xor
adc
push
inc
js
pop
out
mov
ja
jg
in
in
inc
sti
jns
mov
jbe
in
ret
mov
xor
into
mov
adc
mov
inc
sbb
mov
aas
jg
jge
xchg
push
std
mov
test
out
fadd
push
movsb
add
inc
inc
xchg
shl
stos
popf
repnz
ret
and
scas
sub
rorl
outsl
sbb
mov
imul
insb
mov
cmp
sub
dec
lods
fisttps
mov
mov
popf
aad
testb
fisubs
int
repz
or
mov
push
mov
popa
push
aas
xchg
push
roll
jno
pop
xchg
adc
sti
push
shrb
sbb
mov
scas
mov
push
xchg
xor
push
test
cltd
dec
push
sub
repnz
sub
ret
cmp
fisttpll
jmp
movsl
jl
mov
sar
and
idivl
sub
movsb
jbe
pop
lods
lahf
jle
and
jp
push
pop
ljmp
and
or
jmp
dec
in
jmp
stc
dec
sahf
fwait
ja
fldl
negl
mov
inc
das
mov
dec
adc
xor
fwait
push
pop
repnz
sbb
or
inc
mov
clc
sub
mov
sub
popf
popa
loop
mov
mov
sti
adc
loope
jp
jno
cld
mov
or
sbb
mov
addr16
dec
nop
inc
shl
pop
js
mov
es
int3
xor
call
mov
or
test
inc
imul
loop
xorl
dec
mov
push
enter
mov
cs
fmuls
subb
xor
out
mov
sbb
mov
push
and
mov
lods
fmuls
sahf
dec
inc
jns
inc
mov
jecxz
in
shr
pop
std
xor
fidivrl
sub
clc
cmpsl
int
and
xchg
outsb
outsl
mov
insl
mov
ljmp
mov
imul
mov
popa
xchg
test
in
xchg
xchg
in
sub
hlt
je
xor
cmovs
dec
lea
scas
mov
pop
sti
sbb
push
inc
mov
js
shl
inc
mov
xchg
mov
pop
cmp
mov
fwait
scas
imull
fwait
lret
out
jecxz
in
std
adc
add
rclb
cmp
dec
orb
adc
cmc
pop
negl
loopne
jp
mov
shll
mov
xchg
out
xor
xchg
or
sti
or
push
pop
outsl
adc
sub
push
xor
ja
fnstcw
xchg
xor
sarl
push
and
mov
cs
movsb
xor
sub
dec
push
adc
jl
ja
loopne
fisubrl
out
dec
lret
mov
adc
popf
int
nop
mov
inc
mov
jecxz
bound
push
lret
sar
and
add
repnz
js
push
leave
lahf
nop
mov
aaa
adc
mov
sahf
xchg
or
or
pushf
inc
in
movsl
in
mov
shll
lcall
fwait
outsl
repz
jnp
dec
out
pop
jle
je
in
rcl
sbb
xchg
cmp
nop
sbb
pop
int3
cli
mov
or
lret
xchg
fmull
sti
xchg
xor
test
mov
sti
insl
lock
ds
push
outsl
daa
mov
loope
xlat
xchg
and
add
add
inc
jne
aam
cld
jmp
mov
int
mov
pop
in
jl
add
repnz
into
fwait
inc
fwait
lods
pushf
sarl
test
sbb
sub
jmp
mov
aad
subl
data16
cltd
push
push
lret
addb
fs
lahf
into
stc
or
xor
push
inc
ret
mov
nop
mov
mov
test
adc
push
add
aam
icebp
mov
pusha
inc
xchg
imul
stos
repz
push
or
loope
hlt
stos
cmc
add
lahf
xor
push
or
ds
xchg
xchg
lock
sub
sbb
adc
cmpb
icebp
sub
ror
jle
sbb
push
movsl
lods
in
mov
es
push
mov
adc
inc
sub
inc
repz
scas
adc
and
mov
imul
int
out
outsl
subb
dec
call
pop
jns
or
cmp
cs
popf
or
enter
jns
adc
adc
jp
loop
mov
cmp
xchg
cmp
or
and
and
or
repnz
fst
push
mov
in
aad
ljmp
sub
fucomp
inc
out
mov
jno
aaa
scas
adc
sbb
or
je
outsb
scas
fwait
test
mov
rcrl
pop
jo
or
cmp
sbb
pop
add
jge
jbe
out
imul
test
stc
and
aaa
adc
lret
xchg
cli
aam
xor
mov
dec
sti
ffree
jnp
loope
fistl
fimull
aas
lea
decb
push
popf
inc
mov
pop
inc
test
sahf
or
or
in
mov
nop
and
idivb
jl
aam
sub
pop
das
icebp
rcll
negb
cwtl
leave
daa
dec
jae
aam
ret
rep
sub
gs
rorl
mov
clc
popf
sbb
push
xchg
xchg
pop
out
ja
ret
movsl
cli
and
in
mov
dec
xchg
rolb
adc
or
or
rolb
dec
loop
mov
lahf
mov
clc
dec
data16
jge
and
int
inc
fcomps
repz
test
in
mov
mov
sub
xorl
mov
pmulhw
push
pop
imul
inc
lea
nop
jns
or
xchg
imul
rcrl
push
int3
in
jns
inc
loopne
pusha
cmp
or
cli
leave
daa
pop
shrb
test
and
ret
ja
mov
sbb
sbb
inc
nop
push
aaa
rcll
cmpsl
mov
sub
mov
sar
add
xor
cmp
ds
out
fs
lcall
pushw
fnsave
daa
inc
test
ds
outsb
push
mov
xlat
xor
xor
js
cmp
sbb
ret
mov
pusha
jno
jno
jae
les
mov
icebp
pop
fimull
loopne
int3
dec
test
rolb
into
popa
andb
jmp
mov
inc
pop
mov
ljmp
ja
push
cmpl
xchg
enter
subl
sub
dec
je
out
dec
jnp
lock
cmpsl
fs
dec
pusha
inc
lahf
adc
pushf
stc
icebp
xor
cltd
movsl
aad
sub
dec
push
cmpsl
and
pop
wbinvd
cmc
lods
daa
outsb
fistl
lock
push
add
lea
aaa
mov
pop
shr
hlt
shlb
cli
pop
lahf
xchg
fsubs
insb
js
mov
in
pop
icebp
xor
aad
test
cmp
mov
cli
bound
dec
jmp
aam
lds
and
inc
out
roll
dec
cmp
lahf
push
or
outsb
push
cmp
aam
sub
adc
out
xchg
call
das
dec
das
push
pop
add
mov
cld
inc
fwait
mov
xor
cmp
or
int3
ljmp
xchg
mov
adc
mov
testb
iret
cmp
test
cli
lcall
mov
push
int
jp
mov
jl
xchg
enter
xchg
outsl
cmp
repz
sub
mov
adc
xor
gs
test
icebp
daa
mov
mov
pop
data16
jl
lcall
jb
jg
adc
pop
jmp
cli
mov
mov
repnz
pop
mov
jmp
add
push
subb
out
xor
negl
fiaddl
lcall
fisttpll
and
repz
rcll
adc
sahf
shll
dec
jnp
xchg
or
mov
mov
cmpsl
push
dec
sti
ss
sub
and
cmpsl
and
mov
leave
call
adc
mov
shl
popa
cmp
out
inc
push
leave
dec
repz
mov
push
popl
mov
aam
shlb
arpl
in
out
sbb
scas
jbe
mov
icebp
insl
sub
mov
cmp
sub
cmp
test
leave
add
clc
pop
leave
cwtl
daa
fistpll
mov
cltd
testl
dec
daa
repnz
sbb
pop
in
jmp
dec
mov
cmp
xlat
jns
jnp
es
int
imull
scas
and
jae
in
mov
jp
xor
outsb
add
rolb
cs
xor
sbb
inc
stos
outsb
aad
sbb
aam
stos
mov
and
xchg
pushf
jns
push
out
stc
adcb
push
and
xchg
jle
adc
xor
xchg
push
adc
enter
sahf
jbe
cs
mov
loopne
xor
pop
or
jb
inc
mov
cmc
rcrb
jne
pushf
imul
andl
test
mov
es
dec
daa
shrl
dec
inc
imul
imul
scas
leave
jp
inc
repz
fmuls
xor
sahf
pusha
jmp
push
popa
cmp
aam
jo
add
push
dec
bound
les
adc
loope
stc
pop
sub
lods
ss
out
pop
hlt
test
cmc
jae
jl
jmp
mov
popa
xor
push
test
iret
or
movb
shr
pop
inc
jecxz
mov
add
inc
jecxz
xchg
adc
aam
das
repz
cmp
inc
mov
out
add
test
dec
xchg
enter
not
ja
adc
inc
add
jl
cmpb
jg
fsubl
or
mov
ja
jno
sbb
les
fstps
jmp
loop
fldcw
sub
fdivr
push
imul
pop
jge
cmpsb
mov
adc
jecxz
push
push
in
adc
mov
clc
mov
roll
test
cltd
pop
es
inc
aas
sbb
xchg
jbe
stos
mov
rep
ljmp
lret
test
mov
daa
negb
cwtl
imul
test
xchg
fdivrs
movsl
inc
inc
dec
xchg
pop
rorl
sbb
mov
lea
sahf
movsl
cmp
sti
movsb
sbb
outsl
dec
jge
inc
dec
pop
mov
push
cmpsb
mov
test
fcoms
inc
push
lret
mov
leave
add
push
inc
mov
push
shr
adc
stos
adc
adc
mov
fiaddl
inc
push
andb
mov
mov
cld
mov
and
jno
ret
std
push
je
lock
xchg
lods
int
lret
push
cmp
xor
adc
dec
push
cmp
loop
fmuls
jecxz
pop
or
adc
sbb
fs
mov
adc
cmp
dec
ds
ret
lret
cmc
insb
adc
test
adc
fnsave
in
xor
cmp
push
push
push
mov
and
test
and
xchg
in
ss
pop
ss
inc
repnz
in
sbb
add
mov
push
cmp
addl
and
pushf
push
push
cmp
pusha
jle
mov
pop
jge
into
aad
les
push
lcall
push
xor
popa
adcb
cli
dec
fwait
inc
add
pop
mov
cltd
addr16
mov
jle
les
or
mov
mov
xchg
push
ljmp
mov
and
outsb
fiadds
push
cmpsb
mov
decl
sbb
nop
scas
jo
lock
pusha
push
or
imul
jne
jne
dec
mov
pop
lcall
fidivs
aad
incl
xchg
in
insl
cmovs
xorl
lcall
aam
sub
xchg
add
fmuls
adc
test
pop
sbb
mov
dec
push
xchg
mov
add
mov
jge
repz
cmp
push
pop
scas
add
push
pop
sub
aad
pop
dec
fildll
test
adc
push
dec
sub
cmp
hlt
fcompl
fdivrl
lods
mov
jb
cmp
bound
lods
shll
xor
dec
into
gs
jo
sbb
pop
cs
push
je
scas
insl
mov
pusha
rcr
lahf
dec
mov
movsl
pop
xor
leave
stos
cmp
outsb
xchg
xor
xlat
mov
add
ja
push
jbe
mov
fisubrl
pop
adc
cmp
mov
aad
mov
cmp
adc
iret
xchg
fucomi
and
add
dec
pop
jp
inc
into
mov
inc
xchg
arpl
std
mov
and
dec
add
sbb
mov
scas
gs
or
sbb
je
lret
xor
dec
jg
mov
sbbl
outsb
dec
fdivl
scas
jp
pop
xchg
aam
xor
push
cmpsl
das
cmp
sub
jns
movb
loope
adc
stos
lds
cmp
rclb
rcll
pop
or
mov
add
and
test
push
and
push
std
jbe
out
std
clc
scas
xor
cmp
cmp
sbb
pop
test
mov
or
mov
lock
stos
sub
aas
sti
xchg
mov
xor
cmpsl
mov
cwtl
and
xchg
cmp
jp
mov
dec
shlb
sub
push
jecxz
cmpsl
decl
shll
or
fst
adcl
mov
xchg
mov
insb
vpunpckldq
out
xchg
test
jb
adc
pusha
mov
jnp
push
movsb
push
or
xor
add
lcall
and
cmp
scas
pop
xchg
mov
je
pop
inc
jp
popa
dec
arpl
jns
push
bound
mov
add
sub
inc
aas
in
mov
sbb
mov
push
mov
les
aad
insl
mov
jp
inc
cld
into
xlat
insl
test
test
dec
mov
cmp
test
out
add
xchg
xor
cmp
fwait
jne
rcl
pop
rcrl
dec
and
mov
or
pop
mov
xorl
xchg
and
stc
push
ret
pop
imul
or
out
and
dec
test
fsubrs
insl
inc
or
in
sbb
out
xchg
sbbw
xchg
aas
jg
jmp
cs
js
mov
scas
inc
fistpll
jns
push
xlat
shlb
mov
ret
stos
fstps
add
popa
or
fcoml
aas
lds
js
push
out
adc
mov
xor
mov
and
cmp
pmulhw
pop
dec
cmc
jecxz
inc
add
or
lret
fimull
sub
jb
loopne
sub
das
pop
stos
stos
insb
outsb
jl
jp
jg
pop
or
lahf
mov
repz
mov
movsl
ficompl
sarb
xor
aaa
cltd
bound
loop
ja
pushf
mov
movsl
daa
in
xor
add
jnp
mov
arpl
xchg
das
inc
xchg
clc
pop
adc
scas
pop
bound
mov
iret
fwait
and
roll
mov
jno
cld
cmp
pop
cmpsl
and
jmp
pop
lcall
das
addr16
or
adcl
lret
icebp
lods
sbb
into
data16
cmp
out
arpl
dec
pop
iret
in
sbb
adc
xchg
adc
out
mov
cli
aam
daa
lock
xchg
dec
mov
iret
movsb
shll
sbb
or
jne
mov
fwait
in
lcall
in
adc
lret
push
lret
cmp
test
adcb
jne
pop
push
pop
adc
imul
dec
hlt
cmpsl
clc
mov
es
incb
scas
adc
and
inc
out
mov
pushf
ret
shr
decl
pop
sub
dec
int3
sbb
mov
je
popf
es
jge
cmp
stos
lock
or
xchg
lcall
pop
or
into
es
add
add
mov
mov
hlt
nop
jp
inc
xchg
je
pop
stos
filds
push
pop
ficoms
adc
int3
lods
les
int
fs
lea
lock
push
sbb
lahf
nop
and
xchg
divl
aas
mov
rolb
roll
insl
test
sbb
pop
lock
and
mov
in
je
rorb
pop
std
pop
fisubl
adc
xchg
mov
mov
push
or
xor
fcoml
sahf
jge
adc
int3
sub
fisubs
lods
and
xor
mov
xchg
bound
push
xor
hlt
sbb
icebp
and
xor
add
scas
sub
cli
xchg
movsb
scas
jp
lahf
rolb
std
mov
adc
jb
pop
stos
xchg
mov
rolb
dec
jmp
aas
fdivp
lods
adc
jg
add
insb
test
fnstsw
loope
xor
mov
or
sbb
xchg
notb
insb
shlb
push
inc
lahf
mov
out
movsb
xor
enter
frstor
out
pop
fwait
cmp
insl
loopne
push
and
mov
mov
enter
test
xor
mov
pop
sbb
adc
loop
test
cmc
sbb
cmp
xchg
test
adc
jmp
xchg
es
pop
mov
imul
jp
mov
dec
mov
adc
imul
out
fwait
mov
push
sub
out
push
sub
pop
pop
xor
mov
into
je
xchg
lea
sub
leave
ds
push
loopne
dec
push
xor
jnp
dec
arpl
cltd
std
jge
pop
sub
sbb
sub
sbb
or
mov
add
push
or
jns
jle
dec
cwtl
cmc
insb
call
dec
scas
dec
and
lods
or
xor
faddp
aaa
dec
ss
scas
in
ret
sub
std
aam
jae
xchg
dec
and
sbb
test
sbb
out
xchg
outsb
jnp
bound
loopne
lea
ret
nop
outsb
jnp
jg
jle
clc
stc
lock
xchg
lods
mov
out
mov
mov
cmpsb
pushf
pusha
or
xor
add
nop
in
jne
push
mov
stos
into
cltd
or
sbb
push
daa
mov
pop
frstor
add
sbb
sub
sahf
sbb
arpl
loope
incl
jno
pop
movsl
loope
cltd
mov
and
cld
fsubrs
dec
push
and
mov
leave
mov
or
or
dec
lods
in
out
or
xchg
std
into
stos
pop
mov
adc
mov
jp
xchg
mov
lods
jg
ret
inc
dec
shll
mov
pop
clc
sahf
xor
in
js
dec
push
fiaddl
jmp
pop
rdmsr
fmuls
pop
scas
rolb
cmc
outsl
lret
inc
jnp
iret
movsl
add
and
mov
rorb
fmul
mov
mov
test
xlat
mov
test
push
sarb
aam
jno
jle
stc
sahf
stos
xchg
rcrl
iret
in
gs
ret
test
fs
mov
xchg
xchg
repz
fisttpl
push
sahf
enter
hlt
lret
sub
fnsave
movsb
inc
mov
inc
insb
hlt
adc
stos
mov
push
lret
xchg
pop
leave
jge
cmp
out
es
std
fxch
dec
adc
bound
clc
mov
jo
insl
lea
add
call
mov
mov
cwtl
lock
pushf
sub
into
mov
and
pop
pop
out
cwtl
movlps
fisubs
push
xor
enter
loop
shrb
movb
mov
xchg
sbb
in
int3
movsb
inc
inc
add
mov
pop
pop
in
pop
test
or
jb
cmp
les
into
cld
movaps
xchg
out
cwtl
scas
pop
gs
fldl
dec
mov
xchg
cmp
jb
movsb
adc
and
adc
xchg
ja
dec
je
sbbb
xorb
add
mov
js
popa
movsb
lret
add
js
pop
in
aad
test
xor
push
jbe
and
fsubl
xorb
data16
jnp
and
or
sub
dec
repz
in
leave
jbe
push
jnp
fildll
enter
ljmp
testl
adcb
push
loop
jge
pop
jge
ret
adc
jns
cmp
push
jmp
pop
test
jne
cli
cmp
inc
int
push
sti
mov
adc
adc
pop
sbb
mov
fcmovu
mull
inc
adcb
insl
imul
mov
mov
or
es
int
lock
sub
ss
push
stos
jp
movsb
loopne
pop
mov
fadds
out
push
jnp
adc
mov
jnp
adc
lock
rcr
in
daa
rcrb
pushf
cmp
push
loope
jbe
mov
mov
ja
lahf
adc
push
adc
cmpsb
adc
pop
ja
cmp
cmp
mull
jb
sub
int
pop
dec
dec
lahf
push
adc
push
popf
test
lock
and
add
lds
jp
ret
xor
lcall
gs
sbb
fdivrs
arpl
adc
lret
sbb
jne
fmuls
jbe
popf
adc
mov
in
jecxz
fisttpll
scas
andb
push
xor
jmp
and
lahf
xchg
repz
jge
mov
in
jl
pop
outsb
mov
imull
mov
and
and
cwtl
incb
cmpsl
out
bound
cli
addr16
pop
test
sbb
push
xchg
jns
adc
ret
enter
xchg
lret
dec
add
bound
in
mov
pop
test
pop
cmc
ret
cld
inc
xchg
js
sub
fwait
out
or
aas
sub
pushf
sbb
scas
subb
pop
ret
imul
nop
push
mov
adc
add
mov
test
mov
or
ret
scas
lods
push
mov
sbb
imul
sub
push
ficoms
jmp
test
inc
repz
movsb
push
push
push
jns
xchg
mov
mov
xchg
les
ret
jg
cli
adc
xchg
mov
rcrb
xor
and
js
mov
into
stos
sbb
and
mov
xor
adc
add
push
mov
mov
push
inc
jmp
fstpt
outsl
xchg
jmp
add
movsl
pop
jne
movsb
or
push
adc
ss
cmp
and
xchg
cs
mov
push
lds
inc
stos
cli
sub
pop
mov
clc
int3
call
mov
popa
jne
mov
jae
stc
mov
mov
imul
adc
outsb
nop
inc
fisttps
adc
fnstenv
and
daa
mov
inc
mov
mov
jo
pop
out
fucomp
xchg
add
hlt
push
lret
stc
xchg
add
inc
sub
scas
jae
jne,pt
jl
fs
fidivl
or
inc
sahf
inc
das
mov
or
jle
jb
imul
mov
mov
adc
dec
sbb
cmpsl
mov
lret
out
pop
mov
sub
jg
add
aam
push
pavgb
jbe
das
call
repz
xor
xlat
stos
dec
sub
dec
int3
imul
es
mov
aam
pop
insb
mov
pop
mov
loopne
sub
xor
push
mov
sub
es
cld
repnz
rorb
push
mov
dec
jmp
or
push
ja
inc
pop
sub
pop
add
jg
stos
cs
scas
pop
mov
call
pop
fwait
arpl
popa
out
jg
and
in
xor
adc
in
jno
xchg
mov
repnz
icebp
sbb
subl
xor
push
add
ud0
mov
xchg
sbb
dec
xlat
xor
mov
adc
scas
out
std
mov
mov
cmp
dec
stc
nop
int3
fildl
xchg
cmp
in
xchg
xor
sub
dec
testl
not
add
and
mov
inc
inc
scas
loop
xchg
mov
sbb
push
ljmp
cmp
mov
fcomps
add
jp
cmp
adc
gs
out
cmp
fildll
or
xor
jl
int3
test
add
add
mov
dec
fstpl
push
jne
out
repnz
xor
dec
mov
sub
fprem1
xchg
pop
outsl
cmc
xor
int3
xchg
jnp
movsl
fwait
add
push
addr16
dec
call
jae
and
call
sub
ljmp
xchg
arpl
mov
sarb
add
dec
pop
add
xchg
mov
std
test
cmc
inc
xor
in
test
mov
jecxz
xor
sbb
shrb
cli
insl
mov
ss
pushl
mov
call
incl
leave
and
or
dec
stos
push
subb
inc
sub
xchg
scas
cld
in
ds
or
leave
notl
lret
sbb
push
xor
mov
jo
push
filds
jae
cmpsb
ss
dec
mov
xor
pushf
repnz
les
mov
adc
cmc
out
cmc
or
inc
dec
jae
inc
je
dec
inc
fwait
nop
xchg
fnstenv
imul
xor
test
insb
push
movsl
sbb
mov
in
mov
loopne
cli
jmp
inc
fistps
xor
cwtl
jge
dec
and
jp
mov
adc
dec
mov
leave
mov
cmp
rorb
push
stos
movsl
pop
jp
mov
lea
lods
or
jmp
fisubrs
push
scas
cwtl
or
jl
or
in
xchg
sub
sahf
add
push
pusha
outsl
lods
ljmp
sbb
fcomip
xchg
pop
adc
cmpsb
push
mov
add
sbb
js
inc
jecxz
stos
lods
fcoml
loopne
cli
adc
dec
pop
dec
mov
adc
inc
push
pop
xchg
cmp
in
sarl
hlt
pushf
fimuls
push
sbb
mov
mov
xor
test
andl
or
inc
inc
cmp
sbb
jbe
mov
pushf
adc
loop
imulb
jg
outsl
pop
cmpsb
repnz
in
and
pop
cmp
loope
xchg
mov
mov
stos
outsb
xchg
sbb
jmp
adc
mov
pop
aam
adc
pop
cmpsb
xor
mov
mov
out
cltd
xchg
dec
mov
into
gs
fcomps
pop
pop
iret
scas
jo
jl
rcrb
outsl
xchg
pop
iret
ds
daa
addr16
loopne
leave
and
xlat
mov
repnz
mov
insl
imul
pop
insb
jo
cmp
or
es
lods
mov
or
and
mov
jbe
push
leave
mov
mov
loopne
mov
jmp
xchg
inc
and
in
aam
addr16
inc
addb
xor
call
or
lret
dec
test
and
lcall
stos
push
pop
and
cmp
jp
arpl
mov
push
andb
mov
lds
ret
xchg
push
push
cmp
push
sub
and
lret
rol
clc
pop
repnz
in
aaa
pop
in
pop
clc
inc
xchg
fsubrp
mov
adc
mov
mov
sbb
and
insl
jne
inc
insl
xchg
out
lds
sbbl
out
xchg
mov
sub
jl
cmp
push
xchg
testl
inc
xlat
fidivs
iret
icebp
pop
cmp
sub
sahf
lds
jmp
popf
shrl
xchg
fwait
cmp
jns
push
push
out
push
xchg
pushl
cmpsb
scas
lods
loop
mov
add
jmp
fldcw
out
jae
pop
sbb
and
add
aad
sub
sahf
out
insb
lods
iret
pop
popa
push
andl
adc
fnstsw
mov
mov
dec
cmp
int
das
in
in
movb
add
sbb
mov
push
pop
xlat
jnp
inc
pop
dec
sbb
into
fmull
loope
int
or
mov
inc
sub
mov
out
jo
inc
mov
jle
dec
inc
call
or
scas
jno
scas
add
cmpsl
outsb
sti
std
fwait
andb
das
lock
mov
out
jmp
notl
in
sarb
dec
and
int3
inc
push
in
dec
cmp
rcrl
push
mov
fwait
jmp
cmpsl
jbe
cmp
lods
mov
mov
ret
push
dec
fsubr
adcl
in
sub
rcrl
adc
je
popf
movsb
xchg
dec
enter
mov
pop
test
pop
das
xchg
inc
inc
ds
lods
add
mov
lret
popa
stc
std
out
out
mov
stos
adc
inc
cmp
dec
loop
addl
cmpsl
sbb
push
jg
arpl
push
ljmp
sub
inc
lods
dec
jnp
xor
stos
in
aas
ljmp
sbb
and
add
xchg
cmp
adc
xor
popf
lock
inc
testl
out
mov
orl
out
mov
ljmp
and
fwait
dec
hlt
cmpsl
out
dec
movl
movsl
iret
pop
mov
sahf
in
inc
mov
mov
mov
inc
cmp
dec
mov
cmp
addb
xor
and
pop
xchg
std
sub
push
int3
cmpsb
dec
imul
sub
cwtl
inc
cwtl
cmp
mov
jae
cmc
fmul
int3
jl
outsb
mov
int3
fidivs
pop
dec
ss
mov
int
cmp
cmp
aad
mov
mov
push
adc
sti
loope
lret
stos
pusha
xor
out
dec
mov
inc
xor
inc
insb
cwtl
movsb
cmp
packssdw
add
sbb
dec
xchg
gs
rclb
iret
lcall
aas
push
sub
xchg
xor
and
pop
mov
pop
add
shll
xchg
pop
xchg
mov
lea
add
loop
dec
in
ds
repnz
nop
scas
inc
fs
mov
push
adc
ret
arpl
xchg
or
fs
push
fldt
fabs
push
pop
jecxz
mov
adc
or
out
std
addr16
loope
cmp
aam
into
mov
mov
loop
lods
imul
inc
inc
lock
cli
fisubrl
pop
add
push
imul
cmpb
xchg
or
fidivrl
fucomip
fimull
push
jbe
outsb
mov
dec
insl
or
xchg
cs
inc
sahf
xchg
and
cmc
adc
in
movsb
pop
movsl
test
fwait
pusha
fdivl
std
or
cmc
imul
jnp
sbb
mov
ja
popa
das
add
jnp
mov
arpl
xorb
xor
imul
jmp
sbb
xor
fstpt
out
js
adc
push
pop
mov
xchg
in
test
mov
sbb
jl
adc
mov
fiadds
jnp
cmp
pusha
inc
fcomps
add
outsl
and
aad
mov
mov
jnp
bound
adc
fbld
and
xchg
scas
dec
and
aas
shr
testb
rorb
jae
cmp
mov
stos
push
test
cltd
shr
mov
xor
scas
mov
cli
jecxz
push
je
loope
jl
add
mov
je
pushf
stos
pop
pop
jne
arpl
mov
aad
pop
popa
cmp
jae
out
in
cltd
sub
incb
insl
ret
jb
push
mov
mov
fdivr
push
sbb
jl
or
fstl
dec
jns
mov
jg
mov
mov
cmpsl
inc
insl
jnp
mov
scas
test
push
xchg
dec
insb
in
mov
int
clc
scas
jb
xlat
add
mov
jae
aad
imul
in
lcall
jno
xor
pusha
stos
lock
outsb
and
pop
aas
out
fiaddl
cmp
mov
lods
sub
push
xchg
cmp
leave
inc
cmp
lret
cmp
xor
imul
push
aad
iret
xchg
sub
lods
cwtl
dec
add
cld
add
fiadds
mov
lds
cmc
mov
inc
in
mov
or
dec
lret
scas
rolb
and
or
xchg
shlb
mov
es
or
call
push
test
pop
out
mov
stos
cmp
mov
es
xor
imul
jmp
aaa
subl
xchg
cmp
lahf
pop
push
out
adc
bound
cld
jae
jmp
into
sbb
xor
mov
mov
imul
or
call
mov
cs
pop
sbb
dec
sub
mov
aaa
sti
jl
ss
outsl
loop
and
mov
push
xor
imul
xor
or
xor
adcb
jge
cmc
lret
cld
aas
pusha
push
mov
lahf
daa
jae
scas
pop
aam
fldl
add
sbb
push
xor
mov
inc
es
jno
test
aaa
pop
inc
inc
xor
pop
xchg
leave
ja
mov
dec
push
ljmp
dec
sub
lods
out
dec
and
test
insb
and
add
jl
clc
in
jnp
aas
daa
or
aad
sbb
imul
movsb
mov
mov
dec
dec
mov
jmp
das
inc
xlat
pop
xchg
iret
repz
inc
cmpsb
imul
inc
pop
xchg
popa
jnp
add
cltd
shl
dec
stos
ret
push
adc
stos
mov
repnz
jg
pop
jmp
cmp
daa
push
inc
mov
test
subl
loope
into
test
add
jecxz
das
scas
fwait
xchg
clc
xor
pop
cmp
testl
dec
clc
xor
test
jecxz
dec
movb
outsl
mov
push
movsl
aam
xor
xchg
int3
ficoml
jne
mov
jnp
cmp
mov
and
ss
xchg
adc
cmpsl
popa
ret
cmp
pop
scas
pushf
aad
loopne
testb
out
scas
call
cli
lcall
je
fwait
sbb
pop
fsubrs
jge
int
lods
and
pop
lahf
jmp
and
movsl
mov
les
mov
inc
testl
push
pop
sub
mov
gs
testl
das
jns
seta
cltd
sub
mov
dec
movsb
inc
or
mov
xor
pop
pop
jle
pop
loope
pusha
lods
push
lret
sbb
imul
inc
ror
testl
std
xchg
mov
and
rolb
pop
out
vpacksswb
sub
jnp
cli
jnp
fstps
repz
out
test
int3
aad
je
and
dec
popf
jnp
scas
push
adc
lret
aam
mov
jb
and
rsm
xchg
pop
jp
cwtl
jne
out
fldl
nop
xor
jp
stos
loop
push
outsb
sbb
pusha
xchg
enter
int
bound
repnz
adc
mov
ljmp
aas
push
and
icebp
pop
ret
cwtl
hlt
jge
cmc
movsb
push
adc
in
pop
mov
jmpw
hlt
sbb
cmp
cwtl
inc
popa
andb
jg
fisttpll
sbb
sbb
jns
sbb
cli
jge
lahf
stos
loope
jecxz
sbb
add
and
stc
xor
test
ret
xor
ret
mov
mov
or
shrl
mov
test
pop
sbb
or
leave
and
sub
push
pop
call
cmpb
enter
into
fdivl
push
push
loope
and
dec
ficoms
or
ret
das
enter
jbe
jge
jp
or
adcl
dec
jecxz
outsb
dec
add
add
lahf
xchg
sti
sahf
jnp
ja
fisttpll
inc
es
jle
idivl
roll
dec
mov
test
test
out
shrl
mov
std
sub
jecxz
pop
outsl
in
and
push
ficompl
push
mov
xor
lods
inc
push
decb
int
sahf
xor
inc
mov
mov
movsl
sbb
mov
imul
pop
movsb
es
jno
pop
fwait
sbb
lock
ss
stos
orl
mov
in
outsl
mov
mov
jo
movsb
leave
inc
ss
mov
mov
sti
jp
aad
xor
cli
push
sbb
and
mov
data16
sub
sub
cltd
es
mov
stos
push
bnd
sbb
push
jmp
inc
ljmp
xchg
repz
sbb
mov
cmp
push
aaa
cmc
in
aad
cld
fwait
mov
pop
in
push
shll
mov
clc
test
pop
sub
push
mov
mov
mov
movsb
mov
inc
adc
or
in
fs
aad
adc
aaa
xor
leave
sbb
push
loopne
rcll
icebp
sub
xor
pop
inc
shr
sbb
fninit
cmp
or
test
scas
push
hlt
pop
mov
push
adc
sbbb
sub
cld
outsb
sahf
popf
or
outsl
or
mov
xor
mov
xor
mov
xor
les
adc
sbb
mov
jecxz
cs
jno
cmpsl
pop
pusha
aad
shlb
add
stos
or
jg
xchg
sub
lea
push
out
cmp
inc
xor
fwait
call
outsl
mov
pop
xchg
push
insb
and
mov
psubusb
inc
pushf
or
loopne
sub
cs
es
push
lahf
pushf
or
adc
lds
subl
cld
jno
lds
inc
push
sub
adc
cmpsb
nop
outsb
js
in
cmp
mov
mov
fstl
mov
fisubs
lods
jb
mov
mov
mov
decb
mov
push
lods
lods
mov
stos
mov
dec
or
jle
sbb
pop
ljmp
mov
xor
pop
jae
and
out
or
push
sahf
and
cmpsl
rol
mov
cmp
pop
pop
packuswb
sbb
push
aaa
xchg
cmpsb
ljmp
movsb
cwtl
lock
jecxz
enter
sub
iretw
leave
dec
subb
push
test
nop
les
xchg
push
ret
icebp
add
jnp
cmp
mov
add
xor
mov
dec
add
into
xlat
inc
push
jo
dec
call
fcmovnu
cli
icebp
jb
fucom
roll
dec
sbb
lea
inc
or
lock
int3
sbbl
push
xor
fdivr
jl
fiadds
jle
in
jae
mov
test
push
pop
test
xchg
fistl
push
jne
adc
adc
lds
addr16
insb
scas
xchg
adc
movsb
cmp
gs
xor
loop
add
xchg
push
or
nop
out
imul
sbb
jge
pop
jecxz
and
mov
cmp
pusha
iret
pop
sbb
or
into
cld
sti
push
dec
cmpsl
dec
jle
mov
xor
push
pop
mov
test
js
mov
cmpsl
xchg
or
jl
adc
or
insb
fsts
jge
xchg
mov
pusha
fisubrs
push
push
int
jecxz
lcall
mov
mov
out
sub
repz
sbb
cli
mov
pop
dec
cs
iret
aas
jno
insl
mov
xchg
inc
cmp
dec
movhps
les
jmp
and
xchg
pushf
inc
mov
cmp
inc
popl
push
scas
ficoml
dec
lods
pop
movsb
imull
fcoml
adc
push
pushf
rolb
cld
push
ret
sahf
push
sbb
fmulp
mov
mov
sub
add
push
and
dec
gs
xchg
movsb
out
scas
jo
es
sub
cmp
mov
mull
push
cmp
stos
fsubrp
lret
xchg
inc
adc
js
and
xchg
xchg
cltd
loopne
nop
jmp
mov
sub
mov
or
sbb
sub
sarb
sub
jge
ja
scas
push
in
push
out
xchg
pop
add
in
inc
jecxz
mov
xchg
lea
or
aam
mov
enter
mov
add
aad
fstpt
movl
mov
dec
roll
sbb
cli
cs
out
or
int3
dec
inc
add
dec
fdivrs
mov
imul
outsb
push
pop
mov
mov
sub
cmp
popf
mov
gs
imul
mov
out
and
jns
cmp
icebp
dec
push
sti
push
aaa
out
icebp
mov
mov
shl
inc
push
mov
and
cwtl
xchg
mov
add
out
movsb
rorb
sbb
shlb
into
sbb
cltd
nop
lcall
adc
cltd
adc
cmp
mov
inc
push
inc
lcall
push
inc
mov
stc
gs
push
fcmove
test
mov
mov
repz
dec
lds
xchg
fistl
sbb
add
inc
rolb
les
adc
jb
dec
pop
pop
and
pop
cmp
push
mov
ds
adc
adc
ljmp
bnd
adc
or
cmp
negb
leave
xor
sub
dec
lret
mov
negl
pop
shrb
arpl
fadds
push
add
cltd
je
sub
adc
fninit
push
test
sub
lcall
test
mov
and
gs
jae
mov
push
jne
ss
xchg
mov
mull
add
nop
jbe
mov
test
fists
dec
push
mov
ljmp
push
das
sbb
mov
es
push
std
jg
cmp
mov
xchg
lea
cs
inc
ret
jp
stos
pusha
fildll
sub
sbb
ret
jno
push
lods
jnp
mov
out
scas
les
xor
out
js
sub
scas
or
lahf
mov
and
movsb
mov
lods
cmp
mov
xor
subb
fmul
test
xchg
mov
pop
or
fsubrs
mov
loopne
cmpsl
xor
outsb
subl
ja
and
es
dec
push
daa
out
xor
push
rcll
push
rcrl
inc
dec
or
orb
mov
mov
lock
fimuls
mov
dec
mov
cmp
cwtl
push
pop
dec
jae
xor
fmuls
in
push
sub
jl
bound
test
xchg
jecxz
pop
mov
sub
movsl
mov
sub
lock
lahf
movsl
shlb
jge
mov
cwtl
jp
cmp
xchg
mov
inc
inc
jmp
into
sbb
jp
fiaddl
fisubl
dec
lret
push
sti
shll
loope
inc
or
sbb
jp
dec
push
cs
ss
stc
loopne
data16
mov
mov
adc
movsb
inc
xchg
int3
mov
adc
movsl
mov
add
add
in
mov
cmc
xchg
cmpsl
cld
fnstsw
mov
mov
jno
mov
popa
or
scas
adc
inc
cmp
push
out
pop
inc
mov
jo
lahf
aas
test
lcall
add
push
pushf
jnp
aas
dec
push
mov
ds
lock
cmpsl
dec
pop
aaa
pop
jge
out
pop
test
jmp
cmp
xchg
int
mov
movsl
addr16
mov
js
inc
ja
jbe
mov
dec
dec
dec
sub
shr
into
jp
fadds
repnz
and
mov
and
push
fstpt
push
out
cwtl
xchg
mov
cmp
add
inc
sub
fiadds
xor
pop
adc
push
jno
jle
push
dec
and
pop
test
adc
jae
mov
inc
push
sbbl
out
testl
ja
outsb
and
fnsetpm(287
aad
pusha
mov
lea
mov
orb
push
mov
jno
jae
push
mov
inc
je
sti
pop
inc
mov
jecxz
sbb
or
jge
mov
mov
mov
mov
adc
cmp
ret
and
jne
bound
shrl
push
push
mov
sbb
fidivrs
out
dec
push
clc
aad
rcrl
sbb
push
gs
bound
adcb
lods
mulb
cli
test
xor
notl
faddl
xor
mov
nop
cmp
inc
pop
cmp
std
add
jne
sub
aad
xor
mov
ja
pop
repz
mov
outsl
xor
scas
pop
adc
jmp
loopne
pop
ja
gs
decb
or
dec
jbe
movsl
mov
pushf
mov
imul
sub
aaa
mov
pop
leave
inc
int3
test
push
or
scas
movb
dec
sub
ja
xor
mov
pop
lea
cwtl
mov
imul
fucomp
lret
or
xchg
jne
or
fdivl
loopne
ficoml
out
mov
xorb
stos
xor
nop
gs
xor
ret
movsl
xchg
scas
ljmp
pop
add
out
lret
xorl
or
es
sub
sbb
insb
divb
outsb
in
mov
pop
mov
movsl
add
out
nop
sbb
lods
pop
xchg
aas
fimuls
les
pop
xor
pushf
out
mov
call
aad
nop
pop
pop
addr16
call
int
js
jg
repnz
popf
cmp
int
pop
mov
out
inc
loopne
fdivr
es
mov
pop
add
stos
andl
push
push
jp
adc
xor
xor
add
mov
ss
mov
mov
arpl
jp
jmp
jne
mov
jecxz
add
das
nop
mov
pop
mov
test
inc
aaa
push
cmc
dec
push
test
sti
mov
cmp
mov
shl
inc
cmpsb
aad
cld
rorb
cmpsl
loopne
test
add
sbb
push
flds
pop
mov
mov
or
fs
lret
int
mov
test
insb
testb
sahf
sbb
inc
adc
and
sub
popf
sub
sbb
push
xchg
add
inc
arpl
test
subb
lahf
adc
pop
cmpsl
inc
add
mov
out
and
jecxz
int3
pop
mov
inc
add
mov
out
cmp
lods
push
mov
push
imul
push
push
aas
scas
xor
icebp
mov
das
push
xchg
test
jb
pusha
in
add
rep
mov
dec
in
mov
bound
aaa
hlt
adc
push
ja
loop
or
test
fcomp
mulb
sub
out
mov
mov
and
and
xchg
or
add
add
loop
lret
mov
inc
das
jbe
adc
je
jns
or
cmpsl
mov
adc
adc
jge
pop
mov
int3
stos
mov
aaa
pop
pusha
outsl
scas
cmp
and
aad
fcom
out
out
mov
ret
pop
movsl
or
adc
add
adc
mov
mov
xchg
jl
scas
lea
adc
jmp
pushf
sub
mov
out
mov
jp
cmp
int3
aaa
pop
push
and
int
xor
div
ljmp
adc
loop
push
adc
inc
mov
stc
lahf
loope
lods
aam
and
addr16
xchg
hlt
mov
cmp
divl
xchg
jns
push
xorb
sub
mov
mov
in
cltd
nop
out
and
cmp
aas
sbb
test
xor
xor
pop
aaa
lods
adc
fs
pop
xor
iret
cmpsb
leave
aaa
inc
and
movsl
push
pushl
fnsave
jo
insl
push
mov
fisttpll
mov
mov
mov
popf
inc
clc
adc
inc
mov
out
fldt
xchg
push
sbb
sub
jecxz
jl
cmpb
icebp
in
mov
push
in
or
popa
mov
popf
js
jle
loope
and
out
sub
movsl
mov
smsw
std
movsb
pop
cltd
mov
pop
and
pop
testl
aaa
cmc
scas
sub
jns
pop
loop
and
mov
aam
mov
inc
xchg
dec
mov
ds
xlat
mov
out
test
mov
mov
shlb
icebp
cmc
xchg
jp
leave
cmp
sbb
push
sbb
jmp
arpl
insl
cwtl
or
push
clc
xor
testb
les
in
pop
sub
test
inc
in
cmp
fldcw
mov
push
and
pop
xchg
lods
mov
or
or
and
cmp
mov
test
or
ljmp
ficoms
adc
pushl
xor
dec
daa
xor
and
test
add
rcrl
jae
mov
outsl
push
mov
pop
dec
lds
inc
in
cmp
sahf
jl
or
add
push
cltd
lret
push
data16
cmc
notb
push
out
push
call
fisubrs
cvtps2pd
nop
js
dec
test
jg
mov
daa
or
push
cltd
adc
jl
cmp
imul
sub
negb
inc
ja
mov
or
mov
pop
xchg
rcrl
sti
incb
shrl
cmp
stos
xor
out
push
inc
sbb
js
shll
mov
incb
jnp
cmp
xorb
jbe
xchg
push
jecxz
pop
xchg
sub
gs
mov
lock
inc
lahf
scas
out
into
cmp
adcb
jbe
mov
out
pop
pop
or
push
add
scas
adc
into
and
fildll
dec
popf
jnp
call
fs
cmp
js
mov
mov
and
mov
imul
sbb
dec
daa
shr
push
fs
mov
inc
mov
push
sub
add
mov
andl
mov
repnz
shlb
or
call
mov
outsl
adc
in
or
inc
pusha
and
xchg
dec
inc
outsl
sub
int
aas
cld
in
cmp
ljmp
insb
xchg
addb
iret
xchg
mov
dec
xor
popf
add
out
sub
fsubrl
into
rclb
daa
mov
cmp
sub
pop
inc
jno
incl
sub
and
nop
mov
jns,pn
pop
jp
sahf
pop
fstpl
int3
pop
and
mov
imul
cmp
nop
or
xorb
jl
into
ds
inc
mov
ds
adc
lret
add
sub
ficoml
sbb
movsb
push
push
pop
mov
and
fwait
push
push
sub
or
lret
mov
adcb
sub
push
repz
add
xchg
insl
add
cs
mov
pop
inc
shll
jbe
lods
addl
decb
push
xor
jp
and
pop
inc
jp
sbb
push
aad
mov
icebp
inc
xor
int3
fwait
jge
jo
jno
cmc
mov
shr
dec
js
push
data16
mov
xlat
movsb
inc
xchg
stos
dec
clc
mov
push
je
adcl
mov
xor
and
mov
imul
sbb
addr16
and
xchg
test
pop
push
xchg
xor
pop
insl
dec
cli
popf
icebp
and
test
pop
cmc
jns
sub
arpl
pop
mov
daa
into
jecxz
and
test
jmp
mov
xchg
daa
or
jl
pop
mov
sarl
inc
adc
xor
dec
or
std
add
adc
pop
loope
sbb
xchg
jnp
lea
inc
int
adc
mov
push
mov
aad
pop
mov
sub
mov
imull
or
fisttpll
lret
mov
mov
cld
push
fdiv
jle
inc
sbb
les
enter
shrl
inc
je
data16
sbb
sbb
aaa
dec
jnp
ss
push
jbe
enter
xchg
in
ret
imul
cwtl
iret
ds
subl
dec
inc
gs
fnstcw
pop
test
int3
mov
scas
sbb
cld
adc
xor
cwtl
sub
test
push
sub
insb
xlat
pop
and
xor
into
test
pushf
lods
cmp
ret
pop
xchg
idivb
xchg
xor
xchg
stos
pop
add
insb
xchg
sub
lds
in
negb
mov
xchg
mov
or
stos
jne
addr16
je
sub
test
out
xor
mov
inc
aas
pop
insl
sub
adcb
and
jge
popf
es
xor
fimull
xchg
sbb
mov
cli
add
xchg
push
outsl
or
pushf
fucomip
mov
sub
stos
pop
cmp
push
aam
mov
lret
imul
jg
aaa
lcall
decb
mov
dec
lods
rclb
pop
int
jmp
xor
fsubl
adc
dec
popa
rorl
lea
push
and
xor
jge
lahf
push
mov
pop
push
inc
ss
inc
insb
clc
sub
lahf
test
pop
pop
xor
cmp
aam
in
xor
pop
mov
out
movsl
lods
icebp
lds
loope
fstp
xchg
xchg
or
cmc
repnz
xchg
fsubrl
mov
mov
mov
lods
pop
andb
add
xor
mov
dec
and
mov
shrb
add
cwtl
xor
adc
pop
adc
mov
push
repz
sbb
fists
scas
mov
movsl
jnp
cmp
popa
jae
push
lods
xchg
xor
pop
repz
addr16
popf
mov
stos
repnz
in
sbb
stc
add
push
arpl
sbb
jno
in
push
iret
imul
add
xor
mov
sarl
js
jg
inc
push
xor
ja
xchg
inc
movsb
fstpt
fbld
mov
lcall
add
inc
vpcmpgtq
adc
sub
insl
pop
xlat
ret
sbb
adc
sbb
mov
shr
adc
push
loopne
push
jo
jg
in
mov
cmp
loopne
or
ja
add
jmp
adc
dec
gs
sahf
daa
shrl
or
repz
cltd
mov
shlb
dec
mov
frstor
not
pusha
pop
popa
sbb
jl
ljmp
pop
cld
and
dec
cmpl
cmp
pop
push
stos
hlt
xor
ljmp
les
das
and
pop
movsl
fdivl
mov
xchg
insb
xchg
push
xchg
push
insb
adcb
adc
pop
pop
ljmp
lcall
out
xor
sbb
test
pop
sub
mov
sti
enter
xor
dec
jae
outsl
out
dec
fdivr
lds
sbb
sub
xor
fwait
mov
inc
cmp
cmp
mov
es
jmp
leave
add
adc
lea
dec
jne
xchg
in
inc
mov
movl
pop
add
aam
call
jecxz
push
add
movsb
xchg
lea
fimull
sub
jmp
or
cmp
inc
ja
leave
shl
push
lods
xchg
scas
aas
negb
mov
enter
cld
loope
push
dec
aas
test
lods
jecxz
pop
lahf
jecxz
popf
out
mov
lret
pop
pop
aaa
mov
mov
dec
push
sub
xor
or
test
jns
inc
and
cltd
cmp
incb
jae
cli
outsl
dec
mov
clc
in
adc
or
mov
ljmp
xor
loop
adc
dec
loope
sti
and
and
loopne
inc
popf
mov
xchg
push
jmp
loopne
push
mov
push
fisttpll
mov
and
add
inc
inc
mov
xor
loop
gs
pop
mov
sub
clc
push
pop
scas
in
dec
int
in
mov
cld
jne
fldcw
clc
cmp
ja
lock
mov
outsl
mov
adc
outsb
jae
sahf
mov
adc
dec
sbb
mov
sti
aaa
icebp
aaa
pop
jl
bnd
incb
cld
je
cmp
cmc
and
fnstsw
fcomip
xor
inc
adc
ret
jnp
sbb
jge
lret
das
xor
fldcw
pop
sub
xchg
cmp
lock
call
inc
push
out
jno
dec
or
in
movsb
dec
inc
test
cld
xchg
ljmp
jb
pop
test
dec
xchg
fs
push
sbb
jg
xor
jle
mov
pop
mov
jbe
js
addr16
into
push
push
cld
jg
repz
loope
out
mov
leave
enter
xchg
adc
into
adc
jo
cli
and
pop
dec
sub
inc
or
movswl
std
and
je
mov
cmp
popf
mov
pop
nop
pop
mov
lret
push
nop
out
movl
fisubrl
movsl
push
and
test
mov
call
push
sbb
lahf
mov
inc
mov
in
cltd
fs
mov
xor
cs
out
xchg
mov
xlat
pop
mov
jns
pop
xor
gs
btr
inc
push
mov
lret
xchg
xor
lret
cli
mov
lahf
shlb
xlat
stc
mov
pop
mov
sti
out
or
je
adc
pop
insl
mov
out
insb
fs
xor
mov
or
out
sub
rcrb
rcr
adc
aam
lds
sbb
xlat
mov
add
movsb
ret
fcmovnbe
mov
daa
add
dec
mov
or
in
mov
mov
sub
mov
movl
popf
xchg
mov
xor
and
mov
cltd
pop
mov
and
adc
or
popa
into
test
cld
and
pop
mov
fimuls
or
cltd
stc
andb
aad
pop
mov
les
lods
stc
out
imul
sub
sbb
jp
xchg
mov
dec
bnd
or
mov
xor
xchg
dec
and
add
clc
jbe
les
xor
adc
push
add
jg,pt
mov
dec
xchg
loop
xor
scas
scas
pushf
cmpsl
cmpsb
cmpsb
jnp
cmp
cld
cmpsb
cs
sahf
or
or
fs
push
inc
jne
sbb
fidivrs
dec
adc
dec
ja
int
add
scas
int
mov
in
aam
mov
sbb
xor
jbe
rcrl
xor
popf
mov
es
stc
sub
pop
shlb
xchg
lock
es
arpl
xchg
or
mov
mov
and
sub
mov
xchg
rorb
fbld
inc
pushf
inc
pop
out
leave
mov
in
sbb
push
fimuls
scas
xlat
fnstenv
and
cli
mov
movsl
loopne
xchg
divl
out
aaa
mov
cld
adc
fsubrl
and
roll
adc
and
std
adc
insl
mov
ja
adcb
aam
push
jne
pop
mov
out
popl
in
or
add
lret
sub
lock
xchg
xor
ds
inc
mov
adc
sub
lds
mov
ret
pop
push
xlat
sub
sub
mov
arpl
and
das
xchg
out
js
adc
mov
ja
cmc
push
inc
and
jb
movb
shlb
jp
inc
xchg
cmp
push
test
imul
stos
pop
rcrl
dec
cs
add
rcl
pop
pop
mov
xchg
test
push
cmp
popa
xor
out
dec
lret
sub
pop
pop
pop
lcall
outsb
inc
jnp
cmpsb
shll
mov
cmp
insb
out
push
mov
push
add
push
rcrb
test
shr
pop
cmpsb
in
mov
xor
cmp
cld
leave
jns
jae
les
push
pop
movsl
or
and
or
adc
incl
add
fcom
movsb
jne
shll
push
cli
fisubs
ss
mov
mov
aam
jp
das
stc
dec
addr16
in
insb
add
mov
xchg
inc
xchg
inc
shll
cmpsb
std
pushf
inc
dec
mov
pusha
xor
and
mov
xchg
mov
dec
pop
jmp
mov
stos
cmc
add
push
hlt
push
sbb
mov
cwtl
cmp
in
dec
aaa
mov
mov
movsb
frstor
or
lock
into
mov
dec
sbb
adc
dec
mov
push
mov
xchg
dec
xchg
out
mov
adc
inc
push
sbb
cli
or
lahf
pop
jl
mov
pop
ds
pop
pop
inc
add
pop
and
loope
xchg
sqrtps
ret
cmp
jo
adc
fdivr
xchg
clc
into
inc
notl
pop
cmpsb
xchg
inc
out
fs
test
bound
xchg
adc
pop
imul
insb
xchg
fsubs
jmp
mov
test
add
xlat
mov
shrl
out
daa
sbb
or
dec
fs
or
add
shlb
scas
xchg
lods
mov
movsl
repz
ds
mov
repz
push
hlt
pop
push
negb
jne
divl
fwait
push
les
and
lcall
push
dec
xchg
adc
sbb
je
imul
jmp
xchg
jle
jne
loop
pop
cmpsb
loopne
push
sub
adc
ret
test
adc
idiv
jg
ret
das
push
mov
test
mov
lcall
cmp
pushf
movsb
push
pop
add
dec
daa
cld
and
cmp
dec
jg
lods
mull
mov
or
hlt
adc
or
ficompl
scas
in
xlat
gs
movsl
add
clc
sub
pop
fisubs
in
iret
addr16
lods
mov
ror
pop
movl
dec
popa
or
cmp
sub
sub
jnp
ror
adc
movsl
notl
addr16
add
sbb
lcall
pop
mov
lock
leave
xchg
push
push
out
sub
xchg
into
or
gs
jle
cmpl
or
or
outsl
fdivs
add
and
outsl
xor
mov
fnstcw
mov
out
jmp
dec
pop
je
hlt
push
mov
mov
inc
cli
mov
mov
fs
arpl
mov
repz
ljmp
out
push
daa
ret
in
scas
jl
sarb
or
fdivrl
cs
or
dec
add
push
rol
cmc
or
mov
add
xor
and
ret
cmpsl
int
popa
int3
lahf
push
sbb
enter
xor
xchg
inc
sahf
rcr
xor
pop
imul
dec
cmp
ret
repnz
add
cli
add
pop
loopne
sti
sbb
ss
push
lcall
add
mov
decb
or
mov
push
jb
add
sbb
sbb
jbe
leave
pushf
data16
in
scas
sarl
hlt
call
mov
shrl
adc
push
loope
jno
adc
jo
insl
sbb
pop
orl
std
xor
out
and
push
xorl
mov
popa
mov
xlat
jb
sbb
icebp
jmp
pop
push
popa
popf
fcoml
sub
es
test
pop
fiaddl
inc
bound
fistpl
enter
pop
mov
mov
lahf
cmp
test
inc
das
or
mov
mov
fdivl
int
std
dec
xor
lea
sbb
test
mov
xchg
sbb
lcall
xchg
aaa
sub
add
in
aam
inc
adc
pop
push
scas
loopne
imul
push
dec
xchg
hlt
stc
in
xchg
push
sub
jg
popl
xor
out
pop
push
lods
fistl
xor
arpl
cld
mov
sti
inc
sub
mov
nop
jg
pop
in
xlat
or
pop
repz
fwait
inc
aad
fcmove
sub
test
in
dec
cmpsb
fimull
push
jle
mov
mov
inc
leave
cs
fdivp
dec
stc
roll
ljmp
mov
sub
push
int
cs
lods
imul
out
ja
fisubrs
popf
sub
adc
dec
aas
out
ss
cmp
or
iret
mov
mov
pusha
xor
jno
rcrl
in
mov
data16
mov
out
stos
pop
sub
iret
dec
pop
jle
xchg
jne
sbb
inc
xor
push
cwtl
jnp
loopne
ja
jae
or
cmp
push
ficoml
insb
aam
ljmp
inc
ss
in
push
into
ret
jbe
ja
cmp
jle
mov
push
adc
xchg
mov
add
xlat
xor
push
sbb
ss
inc
mov
xchg
pusha
or
or
data16
hlt
xor
push
idiv
out
mov
js
jnp
fcoml
adc
jp
imul
dec
int
jmp
les
and
inc
rcr
data16
popa
call
clc
xor
sbb
cld
repz
dec
add
icebp
data16
push
in
xor
lock
xor
cli
lods
pop
incb
mov
mov
xor
xor
pop
cmp
mov
and
arpl
insb
xor
loopne
inc
ja
sahf
push
mov
test
adc
jge
shl
mov
sbb
lahf
nop
and
sub
cmp
adcl
xchg
pushf
sbb
add
or
test
movhps
mov
std
enter
in
mov
popf
mov
sub
lcall
fidivl
lea
ds
insb
xchg
mov
inc
scas
cmp
stos
xchg
sbb
sub
ljmp
push
xor
add
dec
sbb
in
pop
jno
sbb
mov
hlt
imul
data16
popf
jno
push
pop
jae
push
or
inc
jg
inc
cmp
xor
popf
jle
ffreep
dec
sbbb
or
xchg
pop
ret
xchg
ds
cmp
jmp
xchg
pop
aam
cmp
mov
pop
inc
or
das
fidivrl
ds
testl
or
xchg
mov
xchg
pop
sub
cmp
in
daa
ret
loop
inc
adc
add
or
adc
push
sub
pusha
sbb
dec
mov
add
pop
xchg
mov
lods
ret
out
sbb
lret
sub
aad
xchg
test
jp
jecxz
insw
mov
xor
sbb
cmp
pop
ud0
sbb
loopne
lods
rep
je
in
fsubl
mov
dec
fs
lods
mov
pop
shrl
jo
stos
inc
faddp
sahf
outsb
mov
movsl
adc
mov
stos
nop
and
ljmp
mov
test
or
bound
push
and
sbb
pop
cmp
movsb
mov
cwtl
push
jp
cmc
mov
xchg
xchg
or
xchg
imulb
mov
mov
cmp
pop
ja
lods
push
or
pop
lea
adc
jle
xchg
cmpsb
push
cld
sti
sub
adc
lcall
arpl
mov
adc
dec
cld
movsl
ret
xor
sub
mov
jae
rolb
mov
inc
aam
jae
adc
add
or
inc
and
jmp
mov
mov
push
or
cmp
adc
lods
popa
ffree
scas
cmp
mov
or
stc
test
lods
mov
rcrb
xchg
xchg
aaa
pop
ret
mov
inc
lret
jp
add
cmp
cli
push
outsb
mov
aam
sbb
dec
push
les
fimuls
aaa
aas
pusha
jb
xchg
lahf
mov
or
dec
pop
cltd
ss
adc
scas
fildl
mov
push
lret
pop
cmp
jno
push
ss
xchg
push
cmp
int3
cwtl
jp
mov
test
add
jecxz
lcall
mov
xchg
add
jns
push
and
in
aad
mov
jp
faddl
rcr
mov
shrl
mov
aaa
test
dec
or
cmp
push
xchg
lcall
mov
mov
ss
jmp
iret
lahf
pop
inc
mov
shll
ret
push
jge
mov
pop
pop
mov
or
dec
adc
lock
push
lret
je
das
fucomp
pop
subl
shlb
ret
je
adc
test
push
mov
jnp,pt
scas
test
add
test
aas
jmp
arpl
or
pop
in
push
stc
bound
pop
mov
sub
outsl
xchg
leave
mov
jle
pop
push
shlb
inc
int3
enter
sbb
adc
pop
rcll
jl
jbe
inc
xor
push
ljmp
dec
fidivrl
mov
jle
into
xchg
sti
xchg
add
dec
adc
mov
dec
jmp
ret
sbbl
test
aas
into
ds
adc
cmpsb
loope
int
cmc
and
mov
pop
mov
insb
and
rorb
pop
sub
adc
notl
es
loopne
lds
xor
cmp
bound
lds
sub
and
test
jb
sbb
or
xchg
daa
lea
push
xor
inc
ror
dec
jne
inc
xchg
aas
mov
pop
insl
push
rorl
or
jo
shrb
xchg
imul
sti
fstp
stos
cltd
pop
mov
push
add
jle
out
jns
jb
push
fdivrl
pop
jmp
imul
sbb
test
jbe
fldl
sub
and
shll
dec
mov
cld
imul
xchg
push
ja
sbb
insb
inc
data16
fists
jbe
ljmp
jecxz
outsb
ljmp
aad
scas
lods
and
repnz
push
push
ja
push
jp
stos
in
xchg
sbb
fcmovu
popf
movl
and
test
sahf
lcall
dec
dec
test
push
dec
sub
jge
or
bound
enter
cmc
fiadds
push
aaa
inc
mov
movsb
mov
push
or
ljmp
inc
cmp
xor
mov
scas
mov
repz
xor
out
icebp
xlat
sub
aas
push
fisttpl
inc
mov
adc
icebp
lahf
sbb
inc
imul
decl
cmp
sbb
nop
imul
mov
cmp
mov
xor
into
pop
ja
inc
cmc
mov
push
movsb
movsl
adcb
mov
mov
and
int3
and
ret
outsl
test
add
sti
push
aas
int
std
pop
addr16
jge
faddl
inc
clc
mov
popf
sbb
sub
call
pushf
push
and
movsl
outsb
mov
fwait
mov
xor
movsb
scas
dec
xor
xlat
sbb
inc
cltd
cmpsb
nop
fisttpll
pop
mov
add
mov
jg,pn
stos
add
xchg
shr
stos
sbb
popf
push
mov
out
pop
cmc
mov
jo
fimuls
mov
out
daa
aam
dec
cltd
push
jecxz
es
sahf
fs
xchg
xor
mov
xor
scas
mov
inc
sahf
icebp
mov
inc
pop
inc
inc
push
es
mov
jno
and
pop
jnp
dec
xchg
divl
sbbl
test
mov
push
mov
std
inc
int
enter
inc
je
js
xchg
inc
pop
pop
mov
shrl
in
out
jmp
dec
sbb
xor
bound
cmp
mov
mov
lcall
inc
and
sub
jns
adc
mov
cwtl
sti
mov
out
arpl
inc
orl
or
jne
mov
icebp
icebp
mov
mov
sbb
lcall
cmp
and
test
jnp
lahf
mov
fdivp
repnz
adc
ja
iret
inc
or
hlt
xor
xchg
aam
cld
out
loope
gs
add
or
sbb
inc
shl
xchg
enter
pop
pop
mov
and
mov
cld
mov
cltd
fimull
push
cltd
orb
jno
cld
jmp
insb
sbb
movl
decb
shll
cmp
out
push
jno
mov
std
or
mov
fstps
xor
testl
sub
in
in
insl
dec
or
aaa
xchg
btr
std
dec
dec
sti
mov
loopne
in
cwtl
lods
stos
or
push
div
outsb
mov
popa
imul
xor
inc
popa
movsb
imul
cmpsb
sbb
arpl
ja
sbb
lret
fnstcw
sbb
jnp
push
rcll
imul
mov
mov
cmp
lret
jmp
sub
mov
sub
pop
jb
mov
push
lock
popf
pop
xchg
jbe
int3
fidivrs
mov
mov
mov
or
cld
negb
jecxz
sub
int
dec
xor
arpl
adc
or
ret
pop
add
enter
inc
mov
bound
clc
je
dec
add
xchg
push
lea
pop
inc
test
dec
shll
push
fwait
xor
stc
daa
test
jl
and
adcb
insb
sub
cmpsb
cli
and
es
xchg
lret
inc
cmpsb
push
ret
mov
rorl
xor
out
inc
pushf
add
jge
lods
xchg
cmovg
xlat
pop
mov
scas
out
push
cmp
xchg
stos
es
fucomip
inc
sbb
fs
inc
mov
in
fiaddl
mov
nop
cld
pop
popf
jb
cmpl
sti
xchg
jmp
js
scas
xlat
sbb
movsl
lret
scas
xor
inc
mov
push
mov
xchg
in
ss
xchg
mov
cmp
ret
movl
mov
lds
cmp
xchg
mov
insb
sub
pusha
cmp
nop
scas
scas
loop
cmc
outsb
xchg
repnz
dec
sbb
cmpsl
push
dec
stos
popa
mov
add
add
xchg
test
outsl
enter
pushf
xchg
push
ficomps
or
adc
sti
les
fcmovnb
mov
nop
xchg
adc
mov
push
mov
sub
and
rcrb
mov
stos
imul
pusha
mov
ja
lea
adc
imul
mov
jns
nop
and
mov
sahf
cmpsb
xchg
sbb
inc
lret
sub
rorb
mov
mov
add
jae
imul
pop
and
int3
push
xor
jb
outsl
cmp
arpl
test
mov
xor
pop
cltd
ljmp
mov
lret
xchg
or
filds
inc
in
push
fstps
arpl
push
out
push
out
out
push
inc
dec
cld
push
std
fnstenv
push
push
loop
mov
movsl
fwait
and
jne
cs
aam
xor
mov
adc
jne
or
stos
and
push
xor
jge
add
add
xor
and
xlat
and
mov
andl
cmp
jns
push
cltd
jp
sbb
adc
fwait
cmpsb
mov
scas
mov
mov
aas
test
pop
fists
cmp
dec
push
add
je
xor
stos
or
mov
arpl
xchg
lods
shl
divl
dec
pop
xor
jbe
ja
cmp
icebp
mov
daa
rorb
mov
xchg
dec
mov
cmpsb
mov
mov
xlat
negb
outsl
daa
data16
and
add
mov
mov
jns
gs
dec
mov
cmp
cmc
fcoms
out
inc
outsl
aas
fcmovb
bts
int
and
test
dec
xlat
pop
pop
stos
out
mov
addr16
cmpsl
cwtl
fs
cltd
xchg
pop
popf
jnp
jno
ja
lock
cld
call
xchg
mov
imul
lea
push
mov
cmpsl
xchg
mov
ds
repz
push
lds
dec
push
inc
daa
out
test
in
clc
mov
sti
loope
sbb
dec
cmc
lods
dec
or
mov
add
mov
pop
cli
out
frndint
aam
dec
sahf
test
in
xor
fbld
sbb
lcall
mov
popf
lds
jbe
xor
mov
jno
push
jle
les
stc
lds
negb
xchg
cmp
jne
pop
addr16
cmp
dec
mov
and
into
add
fsubrl
adc
das
mov
add
lcall
ret
or
pop
rolb
cltd
sub
sub
sbb
cmp
cmp
lcall
dec
pop
mov
idivl
jmp
daa
call
pop
js
push
xchg
lcall
test
sti
aad
push
or
into
addb
add
aad
fistpl
inc
xor
or
fwait
test
xor
bound
into
test
sbb
btc
xorb
movsl
andl
or
ljmp
and
mov
xor
pop
sub
sbb
ljmp
fs
xchg
mov
dec
push
bnd
pop
mov
push
mov
dec
addr16
jo
mov
jle
enter
sbb
push
aad
sub
je
push
cmp
fstpl
repz
mov
push
andps
sbbb
push
jns
mov
push
movsl
jp
sbb
ret
fsubrs
xor
pop
inc
sub
sbb
inc
jb
lods
push
lods
pop
pop
xor
pop
call
and
rorb
cli
push
int
jl
cmp
jecxz
into
xor
jne
and
jg
and
xchg
inc
sub
jo
fists
in
pop
fsub
add
sub
lods
mov
sub
xchg
or
xchg
mov
xchg
stos
mov
cmpsl
test
lds
stos
addr16
mov
xchg
sbb
rol
mov
inc
stos
or
bound
outsb
or
jno
imul
xor
sub
ds
fadds
ds
in
scas
rolb
add
or
sub
daa
test
sti
cmpsl
movzwl
js
and
dec
test
jo
insl
xchg
dec
dec
inc
xlat
dec
js
lods
xchg
jne
xchg
ljmp
adc
ss
popa
fstl
sbb
fbld
inc
mov
mov
jmp
pop
movsb
inc
repnz
aaa
pusha
xor
pop
mov
aad
inc
jg
cmc
push
repnz
add
insl
push
leave
xchg
mov
and
sbb
push
fmull
push
ljmp
sbb
mov
adc
outsl
insb
dec
ds
ret
arpl
sbb
test
inc
sbb
push
lock
jno
cld
stos
or
mov
or
mov
jnp
jnp
test
xchg
xor
dec
pop
sbb
push
mov
ficoms
lea
push
lea
cs
dec
xor
cld
rorb
or
pop
cmp
fiadds
pusha
pop
mov
rcrl
mov
rolb
mov
cli
lods
ds
cmc
jl
or
push
vaddsubpd
lret
pop
pop
or
subb
xor
lods
aad
add
rcrb
hlt
xor
lea
mov
xor
xor
push
xor
bound
xchg
mov
cmpsl
xor
push
fildll
xor
push
aas
sahf
lds
or
insb
lret
loopne
call
dec
add
jl
sbb
cmp
mov
loopne
repz
adcl
loopne
cwtl
insb
movsl
out
jp
push
roll
add
das
pop
pop
or
sbb
inc
mov
mov
insb
cld
jb
lds
lcall
iret
enter
mov
shrl
fmull
pop
fidivs
stos
jae
xchg
nop
loopne
pop
adc
dec
lahf
aam
fcoms
lea
push
int
cmp
jmp
add
dec
rcrl
aaa
and
dec
setb
push
sub
bnd
xchg
mov
inc
xchg
lret
scas
xor
std
adc
test
test
jecxz
out
loop
cltd
sub
fdivl
pusha
gs
inc
mov
and
stc
ret
call
jne
pusha
mov
inc
push
push
or
mov
out
lcall
xor
sahf
jle
subb
and
sub
mov
sahf
mov
adc
je
push
xchg
in
mov
pop
pop
gs
mov
out
xor
mov
inc
cmp
mov
insb
mov
adc
adc
mov
push
in
iret
cli
punpckhdq
inc
sub
ret
andb
push
pop
loope
mov
dec
rcr
or
xchg
sbb
test
pop
fbld
icebp
pop
dec
loop
pop
gs
jge
push
lods
cmpb
pop
dec
out
fs
xchg
mov
jle
sub
popf
inc
or
pop
lds
scas
ljmp
sub
add
cmp
cmpsb
push
movsl
mov
add
xchg
sbb
pop
bound
xor
ss
mov
aad
dec
cltd
mov
mov
push
or
cwtl
popf
cmp
dec
jecxz
or
sub
mov
outsb
jmp
mov
mov
sub
mov
mov
push
xchg
stc
loope
adc
cmp
or
add
lea
test
or
sub
or
in
mov
nop
pushf
aas
jbe
nop
bound
sahf
mov
lods
ret
hlt
pop
adc
and
pop
and
sbb
push
cmp
mov
jae
inc
xor
ja
mov
add
mov
pop
dec
add
paddd
adc
sahf
in
jo
mov
inc
std
das
std
cmp
push
cmp
inc
cltd
sahf
fdiv
std
xor
out
mov
mov
les
mov
sub
push
dec
cmp
mov
lock
ss
pusha
fldenv
sub
adc
out
push
mov
ds
xchg
mov
stc
out
imulb
pop
bswap
push
mov
adc
outsl
scas
outsl
out
mov
popf
adc
mov
dec
lcall
repz
sub
cmp
sahf
mov
xor
xor
push
call
lret
lret
sahf
rep
aam
push
enter
outsl
sub
cmp
mov
cmp
inc
jbe
sarb
mov
dec
enter
pop
jb
pop
jmp
push
cmp
cmp
jo
or
loop
mov
mov
push
notb
sarb
xchg
inc
jae
ss
pusha
and
orb
add
jl
pop
gs
stos
int
cld
fnstsw
xchg
mov
lea
cltd
stos
mov
imul
loop
add
push
mov
imul
mov
sub
mov
gs
mov
fcoms
shrl
cmp
dec
add
pop
cmp
jo
lea
ret
sub
lock
mov
mov
pop
xor
push
mov
jecxz
pop
cltd
addr16
divb
inc
and
xor
int3
jge
mov
adc
out
push
sub
adc
lods
rcrb
insb
bound
push
cmp
jne
lods
scas
dec
fistpll
jg
test
push
aam
leave
data16
jo
es
push
fstl
push
push
xchg
and
push
mov
pop
xor
xor
clc
lods
lret
jae
subl
sbb
inc
sti
ret
in
testl
fisubrs
fst
mov
leave
leave
ljmp
jno
and
mov
mov
pop
xchg
scas
fdivs
cmp
or
mov
daa
fdiv
aad
ss
jg
xchg
or
dec
fcoml
ficompl
sub
movsl
xchg
xchg
sarl
std
in
cmp
push
inc
cli
inc
cwtl
movsb
inc
adc
xor
stos
ret
arpl
push
mov
jnp
outsl
dec
mov
mov
jg
out
ficoml
aas
mov
popf
jl
negb
sbb
ret
loope
scas
call
leave
and
sub
ss
mov
imull
xchg
cli
in
pop
sti
lahf
cmp
repz
dec
or
push
data16
jb
mov
repz
insb
cmp
pop
dec
je
xor
jbe
xchg
lock
repz
and
sar
repz
push
inc
scas
adc
sbb
lahf
sub
pop
cmp
xor
cmc
aad
incl
je
rorb
leave
cmpsb
cwtl
cmpsb
xchg
and
mov
push
mov
int
das
icebp
wbinvd
aad
sbb
jo
stos
dec
fdivl
repz
xor
test
popf
mov
add
adcl
mov
xchg
fbld
lret
fdiv
and
mov
aaa
mov
aaa
dec
rolb
cmp
shl
cld
std
mov
mov
movsb
and
mov
scas
sbb
lret
or
xlat
clc
jmp
loop
xor
xor
cmp
lods
and
jae
dec
mov
jecxz
push
or
faddp
ret
mov
arpl
inc
rol
in
cs
scas
int
je
jno
dec
add
mov
dec
into
mov
push
xor
lahf
in
hlt
cli
test
add
dec
cwtl
push
call
fistpl
insl
mov
xchg
out
js
enter
addr16
in
imul
xchg
dec
inc
aam
int
xchg
pop
inc
pushf
inc
mov
sbbl
mov
insb
hlt
jnp
push
pusha
sahf
mov
add
mov
lods
notb
ret
fistpl
fs
mov
jecxz
sbb
orl
pop
jnp
jo
jno
sti
mov
test
cmp
pop
xor
int
mov
jb
xor
mov
mov
lock
inc
fidivrl
dec
pop
pusha
scas
pop
jno
imul
pop
cwtl
mov
add
jp
pop
add
out
mov
and
stc
fucomip
iret
mov
inc
push
insl
aaa
mov
not
mov
push
arpl
cmc
sti
ret
frstor
shlb
pop
mov
sbb
int
ret
dec
cmp
jmp
rolb
dec
cld
xor
dec
push
aam
mov
push
jge
pop
sbb
add
mov
rclb
inc
lret
or
cmp
ss
push
fstl
cmp
xor
mov
es
shlb
movsb
lea
lods
sub
push
cld
cltd
ret
rorl
sbb
lea
hlt
loope
sub
pop
adc
xlat
inc
mov
lods
pop
ljmp
inc
lahf
xchg
je
mov
call
mov
in
fadds
push
lods
sub
out
sbb
cli
stos
call
in
aam
int3
in
lret
jae
add
mov
jecxz
test
jg
ljmp
push
ds
ja
loopne
cmp
loop
dec
cltd
jne
add
std
fiaddl
pop
movsb
inc
sbb
jp
pusha
dec
mov
xchg
sti
call
enter
insb
cmp
fildll
ror
orl
ret
lock
data16
push
jmp
sub
add
pop
lret
ret
inc
lret
inc
repz
jmp
test
inc
shlb
sbb
sbb
fwait
push
lods
ss
xlat
mov
or
testb
mov
or
and
jnp
mov
xor
faddl
sub
jns
mov
or
enter
sub
cs
mov
addr16
hlt
push
es
insl
out
mov
ss
fimull
lods
dec
popf
mov
adc
mov
fcompl
mov
fldcw
xlat
mov
dec
mov
jbe
rcrb
adc
mov
or
orl
gs
cmp
jb
inc
adc
jecxz
cli
inc
cmp
in
scas
sarb
in
push
shl
in
xor
aaa
cmp
and
gs
aaa
test
pop
leave
dec
jp
lock
jecxz
outsb
ja
pushl
cmpsb
leave
fnstcw
mov
jnp
mov
sub
es
and
imul
fdivrp
in
mov
add
in
int
or
push
and
int
mull
or
cmpsb
or
leave
pop
push
sub
xchg
fldenv
aad
inc
adc
iret
insl
sbb
insl
lock
movsb
cwtl
stos
push
add
pushf
rcl
dec
dec
ret
pop
cmc
pop
add
mov
xor
add
xchg
dec
mov
inc
aam
shr
incb
out
mov
sti
push
jecxz
cmp
push
cmp
or
xor
adc
inc
jecxz
dec
out
adc
imul
repz
stc
add
in
pop
and
sbb
js
push
push
movsb
push
test
scas
aas
push
mov
ret
pop
les
add
mov
sbb
hlt
cmp
fstl
or
scas
fwait
pop
cmc
inc
in
cmp
aaa
ficoml
cmp
clc
jno
pop
xor
sub
ja
xchg
test
loopne
test
push
test
rcrl
mov
dec
bound
popa
fwait
int
xchg
syscall
int3
clc
mov
or
or
adc
xchg
fsubr
cmp
dec
jl
pop
push
sub
mov
xor
mov
cwtl
out
xor
mov
inc
enter
mov
ret
mov
and
andb
mov
fbstp
cmp
cmp
lea
pop
xchg
and
ret
lret
adc
lret
addr16
xchg
repz
push
leave
stos
add
push
xlat
rcrb
sub
mov
addl
repnz
fprem1
ja
scas
clc
push
loopne
je
pop
mov
and
out
adc
adc
les
sarb
mov
add
adc
fstpt
dec
cld
add
shlb
or
xchg
mov
mov
insb
xchg
add
cmp
mov
mov
jno
and
adc
sbb
lcall
dec
dec
adc
pop
mov
in
arpl
hlt
jno
sbb
jno
jnp
push
outsb
dec
pop
daa
xor
fnop
dec
repnz
insb
push
lock
xorl
sub
outsb
insb
dec
cmp
lock
add
stos
inc
cmp
cmp
loopne
xorb
arpl
dec
jle
andl
repz
orl
int3
mov
fiaddl
xor
fnstcw
cmp
mov
lret
std
xlat
int3
xor
cmp
nop
pusha
clc
pushf
movsb
and
xor
mov
mov
repz
push
push
adc
or
ret
adc
repnz
pushf
das
mov
arpl
xchg
jae
pop
loope
notb
mov
pop
ret
xor
xchg
dec
in
icebp
movsb
ret
dec
fiadds
mov
shl
and
rcrl
push
sbb
movntq
out
pop
les
sbb
shll
aad
cltd
add
sbb
xchg
hlt
andl
jns
xor
test
jp
stos
jb
into
out
xchg
movsb
sbb
fdivrl
mov
push
mov
dec
fcoms
pop
aad
and
inc
and
rcl
cmp
lret
iret
stos
js
into
and
push
sub
add
adc
fdivl
je
push
stc
lods
in
in
inc
nop
sbb
popf
mov
loope
hlt
lods
cmp
inc
popa
jmp
mov
mov
lock
sbb
mov
aad
inc
dec
test
repnz
sub
arpl
repnz
fs
rcll
sbb
cmp
ret
xchg
mov
fs
data16
mov
sbb
cmp
out
gs
fidivrl
in
pop
test
sbbl
out
adc
push
push
shrb
push
je
push
pop
arpl
je
inc
dec
rorl
xor
fists
dec
add
add
fyl2xp1
and
pop
scas
jae
mov
fdivs
xor
les
lret
insb
lods
push
enter
outsl
jns
mov
loope
aas
testb
or
ficompl
mov
mov
nop
stos
push
cmp
negb
adc
cwtl
add
jg
test
es
jns
cli
cmc
test
and
decl
push
add
dec
ja
hlt
std
sbb
mov
xor
cmp
clc
cmpsb
push
or
xor
das
push
adc
dec
pop
aas
jecxz
lret
mov
test
test
jl
mov
ds
loop
push
cli
test
adc
mov
fldt
pop
mov
out
out
shrb
pop
in
and
adc
in
pop
dec
dec
ss
mov
mov
sub
test
int
cmp
sub
xor
jns
hlt
stos
sub
sahf
dec
jg
iret
pop
mov
push
jp
lods
dec
mov
cmc
push
push
test
imul
mov
xchg
push
sbb
jae
push
dec
pop
dec
sti
push
gs
imul
mov
in
stc
and
addl
adc
into
mov
mov
les
mov
or
sbb
add
fucomi
sbb
test
inc
xchg
jns
dec
sbb
jge
lea
lods
or
insl
fistpl
dec
scas
ret
dec
sbbl
and
push
loop
dec
adc
clc
xchg
pop
adc
ljmp
std
mov
mov
add
adc
jecxz
adc
mov
dec
and
cmpl
cld
lea
or
or
or
adc
arpl
jle
dec
push
ret
scas
and
sub
sbb
pop
aaa
daa
jge
jno
inc
lret
lahf
outsb
add
addl
push
jmp
cmpsl
push
xor
or
xchg
arpl
and
push
scas
xchg
push
fdivl
daa
xchg
jbe
cmp
out
xchg
sbb
movl
mov
sub
in
mov
stos
gs
out
sar
add
mov
or
mov
test
lea
dec
in
fildl
rolb
outsb
mov
bound
and
xor
mov
jno
mov
dec
xor
dec
daa
jge
push
lds
xorb
faddl
pusha
jmp
jl
jp
cmp
jns
ficoml
jae
push
fldcw
jnp
pop
aaa
inc
aam
jecxz
and
js
dec
loopne
mov
test
addr16
outsl
jle
popa
add
sahf
pop
repz
outsl
fdivl
imul
data16
and
mov
and
push
dec
test
sahf
xor
loope
cmpsb
loop
xor
out
push
repz
jmp
add
xlat
push
sbb
lds
push
sbb
adc
lds
lcall
xorb
lods
scas
hlt
out
xchg
call
xor
jns
orl
cmpsb
popa
ret
pop
dec
mov
ror
sbb
aam
inc
ljmp
inc
inc
pop
bound
insl
rorl
das
sbb
add
push
xor
mov
stc
stos
sbb
clc
inc
or
insl
and
sub
jle
or
mov
sub
or
jle
and
out
out
mov
mov
xchg
inc
xlat
xor
or
dec
out
test
push
push
mov
adc
pop
mov
adc
mov
aas
bnd
adc
mov
ds
mov
mov
arpl
pop
adc
mov
cmpb
je
push
add
lock
fs
insl
gs
push
adc
jbe
fs
sub
in
jae
add
jge
xor
cmp
data16
loopne
test
fcoml
lret
in
test
repnz
adc
jb
xchg
hlt
sbb
int3
mov
aad
jg
push
adc
in
cmp
pop
dec
outsl
sbb
add
ret
push
push
adc
in
cld
push
dec
imul
pop
fisttpl
and
les
or
arpl
sbb
cli
sbb
mov
and
push
std
roll
xchg
inc
cmpsl
pop
dec
lds
pop
hlt
stos
xor
push
mov
out
data16
lret
bswap
insb
pop
lds
dec
sub
fcoml
inc
push
lods
adc
mov
jno
and
push
pop
in
shll
jno
or
jno
lcall
or
inc
rcl
cmp
jne
push
mov
sub
inc
mov
fidivrs
sub
int3
aaa
adc
fwait
in
inc
pop
das
pop
je
add
inc
call
rcrl
pop
jne
jnp
adc
das
mov
outsb
ss
pop
in
mov
das
addb
jle
cmp
dec
push
ror
pop
lret
fsubs
pop
jne
add
in
sbb
jns
popa
sbbl
adc
fidivl
hlt
stc
rcll
test
or
sbb
push
and
xchg
xchg
ret
pop
mov
fmuls
sub
pop
jne
rolb
xchg
and
add
mov
clc
mov
dec
sbb
mov
and
sbb
xor
and
sbb
mov
sbb
imulb
cmp
lods
loop
push
dec
push
pusha
jns
dec
bound
jle
scas
xor
loop,pn
out
scas
repz
cmp
mov
imul
mov
aas
push
popa
jne
in
sti
cmpsb
xor
lods
shl
ljmp
stc
inc
lea
repz
xchg
mov
adc
les
scas
pop
pop
lcall
ret
jp
daa
or
mov
dec
mov
out
dec
jl
cmp
test
adc
and
lods
popa
xchg
imull
sub
es
cmp
imul
arpl
mov
or
loop
pop
in
inc
addr16
les
aad
xor
cmp
mov
and
and
stos
lock
sub
ljmp
add
and
sub
testb
test
push
popa
pop
fstpl
pop
mov
and
jg
stos
mov
jmp
ret
daa
fs
mov
je
dec
mov
inc
in
rorl
xor
outsl
rcrb
movsb
andb
push
or
sbb
rcrl
push
push
add
movsl
xchg
shrb
leave
cli
sub
out
rclb
lret
push
shlb
ret
jecxz
and
or
outsb
insb
xor
popf
mov
stc
cmc
pop
dec
inc
sub
add
in
in
push
jmp
mov
movsb
fidivs
mov
dec
popf
inc
sbb
pop
xor
aad
push
outsb
mov
addps
leave
xlat
bound
adc
sbb
xchg
cmpsb
cld
lods
push
stc
mov
shrb
outsb
jnp
sub
addr16
cmp
or
dec
movsb
scas
cmp
repz
in
mov
jl,pn
add
lahf
pushf
fwait
push
test
idivb
pop
mov
mov
sbb
movsl
inc
xchg
xor
pop
daa
pusha
adc
lods
cmp
adc
or
call
rcll
push
fs
dec
roll
xor
aam
cmp
inc
sbb
mov
mov
jno
mov
dec
sub
push
pop
cmp
test
dec
push
or
xchg
pop
cmpl
mov
rcll
mov
mov
adc
jp
xchg
aam
ljmp
xlat
push
test
popf
xor
cmp
push
mov
and
enter
jge
or
push
cmp
xchg
mov
fsubs
sub
xor
lock
jge
adc
insl
fsts
rclb
cwtl
mov
xchg
out
cmp
adc
mov
jmp
push
jne
sub
cmc
xor
xor
adc
sbb
pusha
pop
scas
and
xchg
xor
push
xor
icebp
movsb
mov
int
cmpsb
aam
cwtl
mov
rolb
call
jmp
cli
mov
xor
pop
aas
cmp
mov
xchg
stos
nop
sahf
mov
lock
outsl
cmp
push
call
js
xchg
movsb
xor
sub
sbb
scas
fs
in
fdivrl
and
adc
pop
adc
push
pusha
out
fiadds
mov
or
pop
cmp
adc
inc
mov
dec
xchg
cmp
pop
ds
mov
sbb
sbb
enter
movsb
adc
mov
inc
shlb
push
pextrw
inc
gs
jmp
pop
sbb
std
mov
mov
inc
xor
sbb
sbbl
in
lods
mov
repnz
leave
mov
lea
pop
loop
popf
mov
fistpll
stos
lret
xchg
inc
pop
into
sub
dec
pop
push
mov
jp
jp
lcall
jbe
inc
xor
fisubrs
jecxz
cmc
sti
jg
arpl
or
roll
pop
jl
lea
jl
inc
stos
nop
xor
push
insb
jb
sub
cmp
enter
cs
inc
out
fcoml
dec
mov
jbe
rcll
test
sbbl
cmp
sub
push
lods
cwtl
je
mov
adc
or
addl
xchg
out
xchg
test
shr
inc
or
cmp
mov
sbb
jle
or
lods
mov
and
mov
sub
add
and
jno
jp
mov
adc
shl
push
scas
popl
test
jne
cltd
rcr
enter
xor
pop
pusha
sub
sar
mov
jnp
pop
mov
leave
cld
je
xchg
mov
jne
xor
adcb
push
mov
inc
adc
sbb
in
sub
stc
out
test
stc
ds
mov
mov
ss
jg
push
scas
push
inc
lods
into
and
lcall
fdivrl
xor
inc
hlt
or
ljmp
cmpl
sub
rcll
or
out
jae
mov
clc
adc
movb
ret
jno
jecxz
jp
push
mov
sbb
or
cmpsb
leave
cs
roll
inc
cli
cmc
jmp
mov
daa
sbb
xchg
mov
fwait
inc
in
rclb
insl
xor
sbb
ljmp
test
xchg
es
repz
and
test
adc
lds
das
call
call
fidivrl
and
addr16
adc
jb
in
mov
mov
mov
in
mov
or
enter
test
sub
mov
lahf
sub
ret
stos
mov
pop
mov
jo
out
in
mov
push
test
fimull
push
jl
dec
xchg
xor
mov
dec
sbb
and
cmpsb
push
mov
dec
xchg
pop
cmp
je
sub
fisubs
cltd
popa
mov
mov
mov
int3
fs
sbb
mov
inc
je
inc
cmp
aad
mov
lret
sub
pop
mov
repz
enter
std
cwtl
sub
in
mov
pop
out
sbb
fs
scas
mov
int
dec
addl
push
enter
aad
repnz
mov
ja
data16
pusha
mov
mov
xchg
pushf
cwtl
ret
xor
jns
scas
call
mov
aaa
imul
je
mov
add
dec
pop
scas
insl
pop
mov
cs
adc
leave
sub
daa
testb
clc
fisubl
and
enter
cmp
pop
xchg
mov
lret
pop
pop
fs
pop
pandn
lahf
or
icebp
ds
inc
mov
shrb
cmpl
stos
lcall
out
jbe
loopne
popa
fimull
movsl
arpl
mov
pushf
inc
mov
fsub
xor
out
sub
sub
shll
iret
adc
je
shl
icebp
lret
mov
loopne
dec
xlat
in
sub
mov
repz
test
movsl
ret
es
mov
jp
mov
scas
jb
out
mov
pusha
sub
ljmp
repnz
xor
push
repz
mov
lods
fbstp
dec
mov
cmpsl
jb
jno
into
xchg
xor
xchg
pop
movsl
push
outsl
lea
sub
pop
rorl
push
or
pop
pushf
rclb
push
scas
cmp
sbb
stc
mov
dec
mov
fistpl
xchg
cmp
imul
cmp
sar
mov
xlat
mov
fistl
mov
cmp
pop
adc
mov
xchg
and
pop
aas
rcll
fnstcw
push
out
test
jno
scas
pop
xchg
insl
nop
jmp
sbb
test
xor
sub
and
lods
loopne
mov
scas
add
sti
sbb
cmc
ret
push
cs
ljmp
ds
jmp
mov
or
cld
xchg
enter
jg
ret
xor
mov
adc
scas
aam
cmp
inc
fdiv
cmp
mov
hlt
and
mov
js
pop
inc
clc
xchg
ss
out
mov
leave
hlt
xchg
push
hlt
dec
mov
xor
sub
dec
push
cmp
jne
js
mov
scas
inc
lods
adc
push
addl
or
mov
sub
cwtl
xlat
nop
push
scas
inc
icebp
dec
fs
jle
sbb
pop
push
lahf
sti
js
test
cmpsl
add
fwait
mov
int
cs
aad
idivb
push
inc
adc
inc
ret
test
push
and
loope
push
stos
pop
push
and
fbstp
adc
xor
aam
cmpsb
dec
ret
and
xchg
sahf
cmc
dec
and
xlat
dec
fcoml
imul
or
rcrb
mov
pop
or
int
mov
mov
je
in
xchg
lds
fstpl
imul
fwait
push
sub
mov
inc
jg
mov
test
mov
push
sahf
and
push
xchg
sub
mov
pushf
mov
xchg
cmp
adc
dec
sbb
sbb
adc
add
push
mov
inc
iret
aad
xor
shlb
sbb
cltd
insb
push
xor
ret
cmc
outsl
lret
ret
repz
mov
fists
cmp
daa
mov
xchg
or
scas
out
sub
repnz
adc
pop
ret
loopne
pop
outsb
ret
jge
in
fbld
or
push
xchg
ficomps
lods
fcoml
shll
xchg
mov
bound
repz
mov
mov
and
inc
sbb
cmp
lds
xor
jmp
ds
cltd
popa
imul
scas
frstor
jnp
int
xor
insl
popf
andl
sub
imul
pushf
sbb
je
daa
dec
and
xchg
in
pushf
jmp
call
popa
push
mov
rcr
push
cmpsb
cmp
xchg
movsl
mov
lcall
inc
pop
cmp
mov
and
mov
xchg
outsl
add
es
out
sub
mov
int
add
das
repnz
xlat
mov
hlt
sti
mov
cmp
cmpsl
lea
ss
scas
icebp
jae
in
mov
mov
sahf
orl
aaa
sub
js
or
fstl
jbe
fisttps
repz
lcall
cmp
mov
pop
test
pop
sbb
mov
popf
pop
xchg
pushf
pop
popf
shrl
cltd
or
mov
movsl
shrl
mov
mov
aaa
push
cli
mov
jbe
dec
repz
jnp
or
mov
sbb
jge
out
repnz
cmp
mov
add
push
out
mov
push
push
pop
cmpsl
notb
lea
sbb
add
push
mov
cld
cmp
xchg
xchg
data16
rorb
mov
insl
push
data16
mov
int3
pop
sbb
mov
lahf
push
pop
addr16
mov
pop
sub
push
xchg
pop
pop
ret
das
std
in
xor
xchg
or
int
sub
push
out
pop
das
pop
jae
imul
dec
stos
gs
fmuls
bound
cld
dec
dec
sub
cmpsb
adc
les
push
jbe
sbb
ret
lcall
fs
mov
mov
xor
push
lds
mov
out
push
lret
cmc
addr16
cltd
fmulp
pop
test
in
adc
jbe
push
mov
mov
or
rorb
hlt
and
sti
jno
mov
jg
dec
sub
push
cmp
mov
sbbb
test
xchg
pop
dec
sbb
lcall
mov
add
je
je
add
fs
jmp
mov
or
clts
decl
sbb
in
inc
sub
xorl
push
inc
xchg
andl
sub
xor
das
es
jecxz
aam
adc
adc
jecxz
iret
aad
jno
mov
cld
fisubs
sub
inc
push
lock
push
mov
add
push
mov
jnp
movsb
dec
push
popa
pop
sub
mov
sbb
jmp
mov
push
ret
xchg
inc
add
jl
push
adc
cltd
in
add
adc
xchg
pop
popa
xor
inc
rcrl
jne
or
cmp
and
cmp
aaa
ja
or
jae
adc
test
movsl
stos
in
cld
loop
cmp
aas
pop
pop
fidivrl
mov
mov
adc
sub
push
inc
push
shll
fistl
sub
repz
pop
cmp
dec
outsl
hlt
hlt
pop
out
and
ja
orb
pop
pop
and
aas
mov
xor
inc
into
inc
pop
add
xchg
notb
dec
popa
lds
add
mov
or
insb
push
or
cli
sbb
loope
lret
stc
lret
mov
daa
dec
inc
scas
jmp
in
int
test
xlat
jo
mov
adc
sbb
out
into
mov
pop
and
fstpl
adc
clc
movsl
outsb
es
cmp
mov
popl
jp
sub
push
insb
push
xchg
mov
pop
jae
mov
jnp
icebp
dec
cld
adc
in
cmp
dec
xchg
mov
popa
cmp
add
cmpsb
in
mov
sti
and
fldenv
aaa
in
mov
cmp
xchg
subb
sbb
out
lods
jnp
dec
into
xchg
sahf
fwait
mov
or
add
dec
push
out
jns
fimuls
iret
mov
push
lods
and
call
push
inc
add
dec
jl
inc
mov
lock
popf
data16
adc
and
jp
les
stc
cmp
loopne
mov
xor
out
fwait
std
sbb
mov
mov
aaa
push
addr16
jl
push
xchg
and
xor
andl
xor
adc
int
mov
xor
arpl
clc
inc
loope
xor
pusha
movsb
push
cli
iret
ret
iret
cmp
fcoms
pop
lret
in
daa
and
jp
mov
mov
xlat
push
mov
mov
jae
rolb
jns
push
jge
in
les
adc
shll
retw
ds
stc
idiv
insl
testl
cmpsb
lock
jns
xchg
loope
adcb
sub
jno
imul
hlt
popa
xchg
adc
or
insl
fstpl
imul
clc
inc
mov
inc
inc
pop
in
adc
pop
xchg
cmp
ds
mov
sub
add
insb
dec
sti
nop
movsb
mov
xor
and
sub
lds
test
inc
arpl
adc
sbb
test
pop
inc
ret
jg
mov
adc
scas
mov
push
test
mov
jnp
gs
subl
pop
arpl
nop
scas
dec
push
mov
cmp
mov
mov
adc
sbb
dec
addb
je
push
out
pop
or
inc
popa
mov
into
xchg
or
sbb
out
mov
testb
jecxz
cwtl
sbb
aad
inc
pop
push
pop
xchg
test
jp
lret
adc
jl
mov
jnp
cmpsl
or
add
mov
add
or
lods
cmp
idiv
outsb
pop
stos
popl
push
inc
dec
mov
loope
sub
xor
aad
and
outsb
movsb
xor
mov
dec
ja
fcoml
pop
ja
mov
subl
xchg
ss
sub
test
dec
lahf
and
stc
dec
sbb
lea
sub
fsubl
mov
and
and
inc
mov
popa
out
cmpsb
pop
andb
cmp
outsl
aad
lock
lock
lods
xchg
call
and
fwait
in
push
loope
jg
fadd
mov
add
outsb
sub
inc
pop
inc
into
or
test
cmp
adc
mov
ljmp
adc
xchg
insb
mov
out
sbb
inc
mov
bound
ret
push
out
ret
rol
xchg
lock
cs
adc
and
inc
push
int
mov
aam
aas
hlt
adc
or
jge
loopne
jne
mov
into
aad
daa
cmc
scas
push
jno
mov
add
loope
pop
mov
pop
aam
addl
sbb
es
pop
ja
rolb
cld
loopne
adc
xchg
dec
or
lods
leave
lods
sbb
scas
ja
into
sarl
cmp
ss
and
mov
int3
sbb
dec
jo
clc
mov
add
sbb
jecxz
jl
jp
fildl
xchg
lock
scas
dec
data16
add
inc
add
inc
sbb
push
dec
mov
dec
pop
call
and
pop
fisubs
test
add
mov
add
into
or
mov
popa
and
lcall
addr16
mov
xlat
aam
ficoml
mov
cmp
pop
popa
popf
in
das
mov
daa
adc
jl
xchg
fimuls
push
aaa
shlb
in
int3
call
push
cmc
jg
inc
mov
cmp
or
cmp
aam
pop
loopne
addl
push
inc
pop
sbb
or
xlat
cltd
xchg
dec
or
mov
pop
test
lock
dec
mov
iret
mov
sbb
mov
sbb
pop
faddl
movsb
insl
sbb
mov
fidivrl
scas
dec
xchg
adc
in
clc
mov
movsb
push
cmpsl
fildll
sbb
negb
mov
pop
leave
js
push
adc
outsb
mov
inc
dec
cmp
sub
lods
nop
das
mov
push
and
or
lcall
sub
adc
repnz
xchg
push
mull
cli
pop
mov
dec
push
jb
fstl
mov
xchg
loopne
iret
push
fldenv
mov
test
dec
cmp
negl
jns
test
adc
pop
popf
and
sbb
mov
cmp
lahf
in
and
jnp
nop
outsb
outsb
inc
insb
dec
mov
pmaxub
xchg
xchg
cltd
andb
bound
cli
mov
out
and
xor
in
hlt
cmp
sbb
or
cli
fistl
loop
adc
stos
dec
jns
in
lahf
aas
inc
loop
in
mov
pop
in
jb
jmp
lcall
mov
lret
and
adc
cmp
sub
aad
repnz
mov
movsl
setle
fildl
sbb
sbb
repz
jecxz
divl
int3
sub
xchg
sbb
inc
ret
adc
mov
sti
hlt
adc
add
nop
pushf
push
test
add
int3
leave
das
roll
add
xchg
cwtl
test
sti
sub
add
ret
or
jle
push
shll
jmp
add
sub
es
inc
cmp
addr16
push
mov
aad
pop
test
adcb
fildll
mov
or
ljmp
js
or
sub
lods
and
and
aad
inc
adc
out
xchg
dec
testb
jmp
or
mov
sti
es
cltd
test
out
lret
and
mov
xlat
or
mov
adc
dec
mov
subl
es
test
push
shll
lods
stos
jae
mov
out
jbe
mov
orl
or
imul
xor
cwtl
pop
xor
out
push
ss
test
mov
fidivs
pop
icebp
xchg
lods
and
mov
cmpsb
inc
adc
int
lock
sub
ror
xchg
js
ret
ret
fbstp
jnp
inc
subl
stc
insb
fimull
ljmp
insl
sbb
adc
out
out
push
push
adc
std
lock
sbb
or
ret
mov
dec
setae
fwait
fs
stos
fnsave
scas
inc
sub
add
mov
mov
pop
dec
xchg
popf
dec
jno
xchg
out
pushf
mov
xlat
insl
pop
les
cmp
push
pop
ja
mov
push
bound
jns
mov
sbb
test
push
xchg
movsl
scas
xor
pop
xor
push
sub
scas
dec
scas
insb
sub
stc
mov
fcomps
lret
mov
mov
jo
outsb
and
mov
push
movsl
scas
out
sbb
fwait
xor
ror
jecxz
pop
jbe
adc
jo
aad
push
ret
xor
aad
dec
subb
mov
jg
lds
sbb
pop
outsb
push
dec
sub
cmp
sub
movsb
fs
inc
and
or
mov
ljmp
out
push
adc
in
dec
adc
xor
cmc
dec
xor
stos
cmp
adc
pushaw
xor
fcmovb
movsb
gs
rorb
xchg
dec
jns
sbb
jmp
pop
jo
mov
dec
shlb
out
mov
rcr
dec
pop
icebp
xchg
inc
imul
jb
andl
icebp
push
imul
inc
insl
outsb
mov
fstpt
clc
fidivs
cwtl
pop
bound
or
mov
negb
lods
mov
fwait
adc
daa
jge
sarb
dec
or
push
pop
div
xchg
sub
mov
lahf
xchg
rcl
pop
add
add
sub
push
push
std
xor
rorl
mov
pop
inc
scas
xchg
mov
clc
inc
pop
jns
add
push
repz
sub
adc
pop
lret
insl
push
icebp
inc
shll
inc
sbb
cmovbe
fs
aaa
leave
push
jl
lea
inc
xchg
or
mov
shlb
scas
adcb
and
sbb
sub
jle
push
mov
in
test
hlt
cmpl
je
dec
and
mov
ret
iret
mov
lea
ljmp
mov
push
scas
push
or
mov
mov
sbbb
sub
mov
mov
adc
sahf
jle
cmp
fisubs
inc
push
call
imul
jo
cmpps
aaa
xor
shll
dec
mov
incl
mov
mov
sub
xchg
lcall
sbb
cs
mov
nop
xor
test
fldcw
or
into
xor
jne
je
insl
cs
add
fistpl
inc
sahf
ljmp
subl
add
adc
int
sbb
and
xor
dec
pop
js
fcomps
jl
popa
pop
or
add
or
pop
dec
movsl
aas
aas
inc
std
xor
ds
out
pop
inc
pop
dec
and
and
clc
les
hlt
adc
mov
lds
test
xor
jmp
fistps
jmp
inc
divb
pop
push
loop
sahf
pop
adcb
imul
lret
pop
lods
fsubrl
xlat
clc
add
dec
dec
pop
ds
sbb
popa
or
arpl
into
inc
push
aam
aam
adc
popa
hlt
clc
stc
push
adc
jmp
jge
test
psubb
repnz
test
cmpl
inc
mov
stos
das
mov
sub
cmp
iret
into
sub
or
add
cmc
jge
imul
pop
pop
xlat
cmpb
jo
imul
jle
imul
pusha
imul
pusha
ja
or
outsb
xor
js
pop
push
sub
cmp
or
mov
repnz
cs
jb
lahf
out
cs
mov
cmpsb
push
lret
addr16
mov
xchg
es
jb
lds
in
imul
dec
and
imul
xchg
aam
popf
xchg
sub
mov
dec
das
cmpsl
adc
lret
mov
mov
int3
jae
call
fucomip
push
shll
pop
xchg
jmp
mov
cmc
dec
cs
aas
mov
mov
or
mov
testl
xor
mov
dec
das
mov
outsl
fldenv
cli
mov
test
mov
ret
hlt
insb
roll
mov
xchg
push
nop
subb
push
loope
xor
ret
mov
adc
clc
mov
arpl
out
mov
dec
mov
mov
les
push
movsl
jo
mov
cli
mov
xor
cmpb
out
lret
cmpsb
loopne
pusha
mov
mov
stos
repz
clc
testb
lcall
sub
dec
ljmp
mov
in
mov
mov
mov
fcoml
cmp
xchg
adc
scas
stos
cltd
sbb
movsl
pop
mov
push
push
out
insb
mov
hlt
aas
pop
imul
scas
out
inc
aas
pop
sbb
stos
xchg
push
fidivrl
es
out
stc
sbb
sbb
fnsave
and
test
jmp
mov
and
aas
push
inc
pop
mov
xchg
push
mov
cld
fmul
mov
les
aaa
stos
mov
int
call
adc
addr16
loop
adc
jae
mov
push
scas
push
push
jae
mov
inc
and
jae
sti
adcl
rcrb
mov
sti
test
enter
dec
push
lcall
inc
push
jge
test
jge
mov
sub
push
test
jmp
jno
xor
aam
xchg
sub
iret
xchg
icebp
add
or
jne
je
sbb
cmp
es
flds
loopne
loop
xchg
xchg
pop
sahf
sbb
stos
add
stos
lret
sbb
xchg
stos
je
adc
movsb
loopne
adc
pushf
mov
jge
lods
addr16
add
repnz
lahf
je
sub
mov
xchg
test
adc
mov
icebp
mov
mov
mov
lods
pushf
pop
inc
xchg
dec
sub
jmp
lods
shl
leave
mov
sub
aaa
mov
fbld
jae
dec
out
jle
arpl
mov
out
dec
int3
xchg
sbb
jcxz
xor
aad
incl
mov
sub
fisubl
mov
mov
cmpsl
mov
inc
inc
std
xchg
outsb
in
arpl
add
imull
cmpsl
into
jno
cwtl
rol
mov
rsm
int
dec
jo
inc
adc
test
lcall
xchg
pop
sub
xchg
cmpsl
xchg
lahf
rol
in
xchg
pop
lret
adc
pop
in
dec
xchg
mov
jecxz
in
and
cmp
loope
dec
out
pop
xchg
pop
mov
mov
stos
ficoms
repnz
loope
sub
fisubrl
mov
out
pop
out
loop
jne
sbb
int
add
sar
cwtl
pop
xor
rcrl
pop
in
mov
push
jno
ljmp
popf
data16
ficomps
sahf
or
push
dec
dec
out
cmp
or
xchg
ret
cld
loop
dec
mov
in
xchg
xor
lock
push
jnp
test
mov
bound
mov
dec
jge
cmp
js
mov
fadds
icebp
add
aas
jge
shr
xlat
outsl
inc
sbb
xor
out
push
cmp
outsl
into
adc
mov
loope
dec
sbb
dec
xor
push
fs
sub
jno
les
and
pushf
and
cmp
loope
pop
mov
jmp
push
leave
gs
out
push
stos
stos
adc
jmp
frstor
movsl
xchg
jmp
in
int3
fnstsw
add
mov
pop
adc
imul
rcl
inc
lds
adc
xor
mov
xchg
push
mov
xor
rcl
aas
js
ds
negl
push
imul
adc
loopne
push
sbb
sbb
jne
out
sub
cltd
pop
mov
fcmovnbe
sbb
sbb
add
xchg
or
jmp
push
jmp
adc
xchg
rcl
notl
and
adc
adc
shlb
jmp
pop
lret
sub
mov
inc
and
mov
shrb
nop
fnstcw
jae
push
ret
mov
daa
mov
or
jae
lock
or
pusha
xlat
push
clc
or
and
pop
out
lret
mov
frstor
gs
int
outsb
push
add
int
aam
dec
dec
lret
add
dec
xchg
rol
loopne
mov
dec
and
js
sbb
cmp
push
jbe
enter
and
adc
ja
adc
pop
adc
mov
pop
cltd
mov
int3
fdivs
add
out
xchg
test
push
mov
sbb
mov
fwait
test
hlt
call
mov
mov
test
fs
bound
nop
push
clc
cmp
adc
inc
das
mov
dec
idivl
out
adc
shlb
pop
aad
pop
outsl
push
sub
shll
pop
jl
scas
add
inc
adc
adc
jne
test
sbb
rorl
mov
mov
aaa
inc
mov
cs
sub
popa
mov
into
jne
push
lea
loopne
pop
push
adc
cmpb
cmpsl
pop
das
mov
xchg
add
sbb
lret
lods
sub
ja
negl
test
jo
add
cmp
mov
pop
mov
and
mov
fwait
or
mov
mov
int3
xchg
out
scas
out
mov
imul
lock
iret
cld
fucomip
enter
movl
dec
cmp
fwait
mov
pop
jbe
outsl
pop
xor
fdivrl
push
fstpl
rclb
mov
data16
inc
ret
and
repnz
in
cli
data16
pop
les
sub
push
push
ret
jae
xlat
mov
jge
mov
pop
push
leave
sbb
inc
je
ror
js
add
and
imul
mov
push
or
mov
push
out
outsl
push
out
xchg
iret
imul
xchg
push
fwait
push
imul
addb
xor
popf
fdivrs
stos
push
out
leave
ret
sahf
adc
xchg
or
std
inc
xchg
movsb
mov
xchg
push
stos
insl
cld
rclb
sbb
xor
mov
inc
pop
addb
stos
test
dec
popa
mov
mov
cmp
pop
je
ficoml
iret
test
mov
sbb
push
scas
and
into
insl
pushf
test
in
jne
jns,pn
gs
test
cli
testb
idivb
shll
sbb
mov
adc
or
or
notl
pushf
popa
enter
mov
sar
es
and
push
ret
and
or
cmpsl
sbb
popf
fcomps
outsl
jmp
xchg
pop
inc
lret
adc
sbb
push
je
and
or
mov
xor
ret
popf
xchg
lcall
mov
into
gs
cmp
or
xor
shrb
adc
or
dec
sub
dec
fnstsw
adc
and
xor
stos
fwait
imul
cmp
mov
inc
scas
je
push
dec
repnz
cmp
or
jo
pop
nop
sub
xchg
cltd
fs
andl
jns
push
xchg
sub
dec
dec
scas
xlat
int3
sti
data16
lret
xor
imul
rcrb
sub
les
and
cmpl
rcrb
rclb
pop
mov
cmpsl
cwtl
push
sahf
jmp
js
shrl
mov
aas
sub
adc
cwtl
xor
incl
call
fsub
push
jmp
iret
cmc
dec
xor
mov
pop
gs
repnz
mov
shrb
das
mov
outsl
fstp
hlt
fidivrs
dec
inc
xchg
outsb
push
imul
add
loope
mov
and
jns
push
mov
adc
addl
jp
cmpsb
and
mov
xor
pop
xor
jge
aam
sti
arpl
push
adc
int3
aad
push
cmpsl
outsb
fdivr
pushf
fsubs
test
and
ja
lds
icebp
and
ficoml
mov
cltd
and
loop
or
xchg
filds
movsl
push
lds
pop
idiv
mov
jno
mov
adc
pop
jno
mov
movsl
leave
fldcw
sub
sub
ret
loope
mov
adc
jmp
nop
mov
lret
xchg
popa
mov
mov
idivl
xor
subb
dec
adc
sub
les
out
dec
loop
pop
js
out
jbe
dec
fs
jg
push
push
cmp
jmp
es
int
adcl
add
mov
adc
jne
inc
cmp
lahf
xor
ja
xchg
dec
jle
adc
jne
stos
mov
sbb
mov
sahf
outsb
push
sbb
aam
push
or
imul
sbb
pushf
rcll
jp
gs
mov
std
out
xor
cmpl
ss
mov
fcmovb
and
movsb
in
loop
xor
les
mov
push
xlat
mov
and
aas
scas
pmaddwd
out
fdivs
cmpb
jbe
lds
jno
pop
scas
and
dec
push
lods
dec
insl
fldcw
xorb
adc
mov
xchg
subb
inc
lahf
xlat
push
xchg
push
add
stos
add
xchg
mov
cmp
or
dec
inc
inc
repnz
xlat
in
insb
into
add
orl
and
pop
and
cmpsb
push
in
xchg
icebp
xchg
mov
inc
dec
or
add
add
sahf
mov
xchg
sbb
jge
unpckhps
xchg
add
mov
xchg
cli
add
stc
cltd
out
and
lcall
scas
call
std
mov
xor
xor
pop
sbb
push
repz
xor
pop
loop
xor
rcll
ljmp
arpl
push
mov
add
jmp
adc
fimuls
jb
and
sub
xor
icebp
mov
movsl
mov
cli
loop
pop
js
adc
sbb
push
dec
push
mov
push
sbb
dec
xor
shll
push
pop
dec
dec
inc
xchg
shll
aaa
lea
inc
adc
pop
xchg
xor
sub
mov
xchg
xchg
decl
repnz
push
adc
mov
dec
cmp
loopne
fistps
into
cmp
mov
or
add
jle
rcll
sub
mov
mov
or
mov
adc
insb
sahf
insb
push
aaa
jo
xchg
hlt
loopne
jp
sub
mov
cmp
fcmovnb
lahf
push
xor
mov
fdivrs
stos
cmp
jae
rcll
mov
aam
test
int3
inc
xchg
mov
ficomps
scas
out
mov
inc
inc
je
pop
push
into
add
push
fwait
jo
shlb
mov
pop
cli
popf
dec
and
in
cmp
subl
popa
mov
fisubrl
push
mov
ljmp
dec
push
movb
outsl
pop
xchg
xor
inc
xchg
gs
add
pop
sbb
jmp
and
sub
jmp
adc
loop
cmp
inc
jno
enter
negb
repz
movsl
mov
mov
rcrl
lods
ficoms
cs
sti
jl
out
add
cld
pop
cmp
in
lahf
mov
imul
lret
fs
mov
inc
add
popf
xor
ds
mov
or
fwait
sub
and
xlat
bound
add
jne
int3
mov
cltd
imul
addr16
test
add
and
lcall
iret
mov
dec
ret
pop
xor
jge
je
jae
lahf
test
ss
or
int
repnz
mov
shrb
sub
les
pop
sbb
fdiv
sahf
ret
jns
jne
testb
adc
pop
jge
insb
pop
outsl
xor
mulb
bswap
mov
sub
pushf
in
xor
cmp
stos
fidivrs
mov
mov
pop
mov
lods
cli
mull
sbb
aaa
rclb
maskmovq
notl
push
leave
mov
lcall
mov
lahf
fistpl
mov
bound
loopne
pop
dec
pop
push
lret
mov
cli
fmull
test
movsl
data16
cli
nop
scas
repz
outsb
sbb
inc
stc
dec
jecxz
in
adcb
dec
pop
dec
xchg
dec
mov
dec
push
sub
fisubrs
cmpsl
shrb
pop
pcmpgtd
cwtl
or
jmp
xor
xor
bswap
aas
adc
or
pop
inc
lea
xchg
inc
out
mov
subb
xlat
or
mov
and
cltd
outsl
fmull
inc
ljmp
arpl
mov
mov
inc
arpl
cmp
mov
adc
test
div
xor
out
dec
mov
roll
popa
imul
fisubrs
jl
jb
clc
inc
bound
inc
jne
int3
and
aam
pop
lahf
pop
nop
or
adc
fstps
inc
sbb
cli
dec
es
bound
mov
push
and
sub
pop
mov
lock
jle,pt
inc
mov
mov
inc
mov
cmp
mov
iret
lods
data16
mov
cmp
sar
mov
or
push
dec
add
xchg
sbb
shlb
and
add
fdivrs
xor
cmp
mov
sbb
cld
ljmp
jp
fbld
test
paddq
dec
cli
xchg
addl
xor
cmp
or
mov
ret
fmull
jbe
jle
mov
dec
xor
out
ret
pop
pop
lea
fists
fsubrp
adc
stos
popa
addr16
adc
out
lret
pop
inc
cmc
mov
jecxz
int3
mov
ljmp
xor
xchg
mov
pop
sbb
outsl
or
lcall
inc
jmp
jmp
call
mov
daa
sub
add
cmp
aam
mov
and
les
fstpt
popa
clc
push
mov
mov
aam
mov
jle
fs
cmc
arpl
inc
repz
mov
inc
in
sbb
xchg
xlat
js
or
imul
pop
lods
mov
jo
rcll
dec
dec
xor
mov
push
adc
xor
lds
xchg
mov
push
add
cmp
inc
mov
pop
sbbl
in
mov
jns
sarb
out
fnstcw
sti
insb
lahf
in
int
ret
stc
das
add
pop
fsts
andb
cltd
inc
movsl
imul
pop
mov
or
xchg
xchg
and
xchg
jmp
out
in
or
jns
jmp
out
mov
inc
mov
int
cmc
loopne
fcomp
jne
lds
mov
mov
sbb
aaa
dec
out
cmp
icebp
fsubrs
cmp
ror
adc
into
addr16
scas
call
pop
and
and
scas
rcll
test
and
aaa
jecxz
jns
imul
mov
mov
outsb
out
sbb
in
jno
sbb
mov
or
dec
mov
inc
mov
push
sbb
cmp
dec
test
cs
test
jle
mov
pop
mull
nop
pop
and
mov
movsl
sub
lods
cmc
adc
scas
les
pop
mov
mov
aam
das
addr16
aad
popf
mov
sti
decl
daa
mov
in
js
subb
pop
stos
dec
jo
inc
das
lock
jmp
mov
das
fnstenv
push
pop
or
into
cli
xlat
sbb
mov
in
scas
pop
test
and
lret
aam
or
aaa
xchg
aas
push
inc
div
bound
xchg
mov
push
fmuls
inc
push
adc
shlb
inc
sub
pop
add
scas
in
push
into
adc
sar
mov
and
or
cmp
stos
cmc
mov
das
jne
mov
inc
add
lea
add
mov
mov
mov
push
imul
cmp
pusha
pop
outsb
ret
mov
inc
jne
push
pop
and
decb
test
aaa
stos
push
sti
lea
cmpsl
and
outsb
mov
add
idivb
or
inc
jo
sbb
pop
dec
cmp
add
fsub
icebp
fldenv
outsb
es
adc
loop
mov
pop
pop
mov
xchg
xor
in
repz
jbe
push
enter
hlt
out
imul
jne
pop
out
out
addb
pop
bound
mov
and
sub
outsl
bound
and
jle
cs
mov
mull
mov
leave
aam
xchg
mov
dec
cmp
jge
push
add
fs
and
loopne
mov
int
sahf
xor
push
imul
mov
and
mov
jle
pop
dec
jb
cli
mov
push
jmp
call
add
dec
test
xor
pop
mov
cmp
adc
out
push
fdivrp
stc
out
ja
dec
jns
push
aad
mov
mov
push
push
sub
scas
xlat
jns
aam
fistpl
mov
and
add
nop
push
iret
rcrl
test
inc
std
adc
xor
push
stc
jae
ss
inc
mov
xchg
dec
jle
stc
addr16
mov
insb
mov
dec
shlb
push
cmp
cltd
rorl
jo
inc
ljmp
mov
adc
cmc
inc
int
orl
mov
bound
jo
jb
ljmp
mov
xchg
xchg
ljmp
mov
out
pop
xchg
cmp
jb
or
stc
or
mov
cmp
ret
imulb
dec
push
mov
jmp
and
imul
flds
dec
mov
adc
lds
scas
mov
into
movl
mov
inc
adc
cmp
mov
enter
and
add
lret
jae
mov
aaa
jb
insb
pop
imul
popf
mov
dec
pop
test
add
stos
ds
outsl
pusha
mov
test
cmp
xchg
testb
jae
inc
movsl
sbb
lock
les
lods
and
lret
xlat
orl
dec
insl
lods
lahf
mov
push
sbbb
mov
push
icebp
loop
addb
push
sbb
loop
xor
enter
jno
inc
xchg
push
sbb
ds
jo
shll
idivb
in
sarb
pop
aam
inc
popa
dec
jmp
and
out
adc
ret
adc
mov
idivb
or
mov
lahf
cmp
adc
std
sub
stc
in
xchg
sbb
push
lock
pop
aaa
dec
mov
xor
jb
cmc
push
cld
push
xor
pop
pusha
sti
jge
or
fs
leave
arpl
xchg
int3
call
ljmp
pop
adc
ss
mov
xor
sub
in
ret
inc
sbb
sbb
bound
popf
mov
movsl
adc
mov
adc
pop
xlat
dec
adc
jp
int3
pop
cmp
mov
mov
and
xor
add
pop
cmp
lods
push
jp
pop
jb
jnp
add
lea
cmpsl
xor
jns
dec
mov
insl
repz
leave
and
loope
in
dec
adc
mov
push
or
leave
xchg
pop
mov
cmc
cltd
dec
push
inc
push
dec
sbb
sub
addl
outsl
mov
sbb
lret
add
rcrb
mov
mulb
ljmp
sbb
cmpl
push
or
xchg
shl
mov
mov
add
or
sahf
movsl
jns
jb
fs
ret
jg
hlt
fsub
loope
repz
add
cmp
dec
jne
or
and
ja
or
inc
cltd
jno
test
rcll
pop
mov
enter
mov
pop
lret
clc
pop
divl
fistpll
sbb
mov
or
jp
or
in
ror
mov
adcl
les
mov
call
or
or
push
rcrb
into
outsl
pop
lahf
xchg
jns
test
adc
jecxz
mov
popa
mov
cwtl
nop
repnz
aam
adc
sti
popa
mulps
jno
mov
push
movsl
dec
cmp
scas
les
mov
popa
hlt
xor
xchg
push
lods
xchg
cltd
gs
xchg
jl
loope
mov
in
pop
int3
rcll
leave
cmpsb
push
loop
xchg
pop
jbe
push
pop
xor
orb
ret
xchg
movsl
fs
mov
mov
jmp
test
lds
jg
cli
aaa
out
inc
push
inc
add
push
mov
test
mov
add
and
repz
dec
aas
pusha
jle
sahf
sti
or
les
push
stos
in
mov
div
std
pop
loope
xchg
and
xchg
mov
mov
xchg
push
orb
push
dec
sub
add
or
adc
mov
fs
add
sbb
out
fmull
stos
cwtl
jb
sti
lds
in
mov
data16
ja
inc
sub
mov
push
and
loopne
dec
add
mov
aad
arpl
cmc
adc
and
enter
xchg
and
or
jg
cmpsl
ret
dec
clc
pushf
test
pop
add
test
movsl
xor
test
xchg
push
and
inc
pop
jp
cmp
shl
out
pop
gs
adc
add
jno
mov
popf
scas
sbb
adc
cmc
cmp
add
inc
cmpsb
mov
loopne
pop
push
imul
lods
fldl
in
sbb
imul
push
xchg
jae
mov
add
je
inc
push
cmp
mov
scas
test
pop
push
test
lahf
sub
jns
call
jmp
xlat
cmp
dec
dec
sti
inc
inc
cwtl
jg
cltd
inc
adc
mov
ror
and
pushf
sbb
into
leave
xchg
pop
mov
add
push
jns
test
sub
dec
jbe
es
add
ficomps
sub
les
shlb
arpl
inc
les
sarl
test
pop
jle
jnp
push
dec
push
fwait
lret
mov
add
jg
nop
in
clc
xor
dec
push
les
push
cmp
ret
aaa
or
dec
out
insb
fbld
popf
push
movsw
push
sub
mov
mov
dec
in
xor
int3
inc
add
mov
shlb
xchg
push
loop
ja
push
imul
sbb
push
iret
enter
sbb
inc
inc
mov
sub
xchg
hlt
les
aaa
mov
xorl
xchg
and
scas
sub
or
jae
test
loope
push
jge
arpl
and
sahf
inc
call
jp
xlat
in
adc
repnz
push
pop
sbb
mov
imul
pushf
ss
dec
push
test
push
int
mov
lock
jae
shll
jne
or
lret
out
xchg
popf
mov
xchg
out
mov
fiaddl
loopne
ret
push
sarl
inc
mov
outsl
mov
jnp
sub
int
fnstcw
push
cld
sahf
fadds
xchg
inc
lods
lret
push
movsl
sub
and
mov
cmpsl
loope
setae
test
mov
inc
mov
dec
xchg
sub
test
xchg
lcall
jnp
stc
mov
adc
leave
add
scas
jmp
or
mov
or
cmpsb
imul
shll
add
and
mov
insl
inc
mov
cmp
test
lods
add
clc
push
push
mov
rol
fists
mov
faddl
repz
sub
rclb
aas
sbb
inc
imul
shlb
mov
test
loop
push
jns
ret
pop
das
fnstsw
arpl
xor
insl
sbb
pop
mov
shl
xchg
in
daa
cmpsl
and
pusha
je
fldpi
je
imul
mov
adc
lret
repz
cmp
shrl
cmp
push
jecxz
and
mov
cmp
sahf
push
push
enter
cmp
gs
clc
cmp
push
adcl
sub
call
mov
jge
daa
mov
pop
mov
loop
mov
or
and
or
jmp
insb
iret
cli
mov
cmp
test
push
aaa
push
mov
jg
pop
push
cli
divl
out
push
cmp
add
dec
sbb
into
ficoms
sub
mov
scas
cmp
mov
gs
pop
mov
jb
mov
scas
sahf
addr16
and
and
adc
lret
cmp
ret
dec
sub
es
xchg
loope
jns
dec
repz
pop
sbb
push
push
clc
push
rcl
aam
sbb
mov
insl
shl
adc
sub
xor
test
imul
mov
aas
mov
jg
add
mov
pop
movsl
pop
jae
push
jno
int
shrl
push
icebp
popa
movsl
pop
push
mov
and
sahf
sub
into
xor
adc
dec
test
push
fwait
xchg
movsl
mov
sub
lret
push
push
inc
xchg
jmp
lahf
add
jb
xchg
mov
pop
sahf
les
cmc
sub
cld
xchg
lret
test
enter
das
shlb
sahf
push
or
std
mov
repnz
and
lret
dec
ljmp
fldenv
or
mov
scas
scas
adc
adc
leave
mov
xchg
into
xchg
mov
add
pop
sbb
mov
fistpl
sbb
xchg
pop
outsb
dec
adc
inc
faddl
addl
adc
cli
ret
scas
pop
xchg
push
pop
fs
xor
stos
fs
adc
popf
cmp
test
repnz
mov
test
fsubs
dec
jbe
insl
ss
xchg
cltd
pop
enter
leave
adc
dec
xor
lahf
push
mov
inc
cmp
adc
mov
repnz
lds
jbe
or
add
repz
cmp
in
adcl
iret
stos
mov
push
sti
jge
jnp
imul
sub
xor
test
shll
pop
mov
sbb
lcall
cmc
lock
push
in
rcrb
insb
clc
mov
sahf
decb
loopne
mov
jnp
jns
out
insl
mov
xor
dec
mov
jle
movsl
jle
sbb
xor
inc
lods
test
or
add
cmpsb
cltd
in
jno
dec
sarl
lret
push
mov
sub
adc
call
lock
idiv
addl
cli
adc
outsl
mov
test
pop
lret
xchg
hlt
dec
call
mov
arpl
add
imul
add
insb
call
push
xchg
jg
in
ljmp
cli
and
mov
fwait
push
dec
stc
daa
sbb
mov
movsl
aas
jl
dec
shll
adc
lea
bound
jecxz
or
ja
or
push
xor
sub
inc
int
dec
adc
push
mov
dec
lcall
mov
dec
ss
loopne
shll
movsb
movmskps
loopne
pop
pop
inc
mov
cmpb
or
mov
in
fstl
fimuls
jbe
out
mov
or
mov
add
pop
cmpsl
sarb
fwait
out
js
enter
sub
mov
xor
cltd
bnd
mov
sahf
out
jmp
pop
adc
mov
rolb
sub
les
shrb
jae
push
push
call
das
cld
pop
arpl
pop
xor
movsl
sti
rcll
cs
or
lds
fsts
dec
mov
push
lret
adc
in
mov
push
cli
cmp
movsbl
test
fisubs
xor
fldl
jno
insb
int3
add
scas
add
push
das
lret
das
mov
cmp
testb
mov
dec
inc
sub
cmp
mov
outsl
adc
shlb
sbb
movsl
cmc
xchg
mov
xchg
out
xor
and
sbb
ret
iret
mov
dec
sub
mov
insl
insl
filds
je
lcall
mov
shr
cltd
inc
daa
xor
xor
cmp
lret
int3
testb
iret
mov
xchg
fwait
or
mov
inc
xor
cld
and
and
xor
repz
addr16
push
fs
mov
cmp
sub
adc
xchg
cmp
inc
dec
cmp
cmpsl
sbb
push
and
outsb
xchg
int3
cld
mov
pop
pop
pushl
adcl
mov
mov
xchg
jle
imul
pusha
test
pop
inc
mov
and
fs
jns
test
rcrl
les
das
je
test
test
sub
es
xor
sbbb
fiaddl
pop
xor
jne
inc
mov
push
mov
test
lcall
xchg
xchg
iret
xchg
cmp
mov
call
lahf
lods
dec
rcrl
ret
mov
test
and
out
sub
movsb
pop
sub
cmpsl
in
dec
cmp
orb
pop
stc
jge
fimuls
test
mov
adcb
lret
add
push
addb
jp
mov
sti
mov
push
cli
pop
and
jbe
call
cmp
hlt
inc
sub
in
test
push
jns
jmp
ret
seta
movsl
lret
cld
imul
lds
or
lea
add
stos
lret
test
lahf
shl
push
and
sarl
xchg
aam
repz
rorl
or
dec
jmp
sbb
push
xchg
out
ss
lock
push
xor
mov
add
imul
dec
scas
stc
test
mov
test
mov
out
nop
mov
jae
pop
loop
into
lcall
mov
push
cwtl
jecxz
fistl
pop
xchg
and
push
rcr
testl
adc
out
ljmp
fbld
sahf
mov
xor
aad
sub
and
lahf
lahf
dec
insl
adc
or
jp
out
daa
repz
pop
xor
mov
cltd
sbbb
test
jmp
pop
pop
jo
adc
xchg
xchg
xor
cmpsl
je
jl
cli
push
xchg
int3
outsl
cmpsb
xchg
lahf
add
dec
sti
or
subb
pop
jae
paddq
jae
jns
push
and
cmc
iret
xor
cli
pusha
fsub
sbb
sub
inc
lret
inc
ret
in
cmp
and
imul
or
push
mov
jg
ja
imul
scas
pop
fnstcw
test
jne
enter
jno
jge
fstps
inc
scas
xor
mov
pop
mov
sbb
mov
test
jp
aam
fistps
scas
out
sub
xchg
arpl
jmp
add
jo
sub
insl
in
arpl
popf
jnp
pop
aaa
mov
cmp
rorb
or
das
inc
mov
fists
addl
icebp
clc
and
or
pop
cmpl
pop
jno
imul
and
or
nop
dec
add
or
mov
mov
std
xchg
js
lret
sbb
in
xchg
orb
fwait
add
xor
sbb
xor
mov
fnstcw
jae
dec
push
mov
es
push
xor
sub
adc
mov
sub
int3
loopne
cmp
aad
sub
jl
ds
sbb
xchg
xor
ret
xchg
jg
mov
fcoms
popf
bound
sub
stos
mov
call
sahf
pop
push
mov
dec
mov
fbstp
repz
data16
jae
pop
add
daa
xor
mov
dec
sub
arpl
aad
test
xchg
mov
lcall
sub
push
push
inc
popf
push
inc
mov
mov
fisubrl
imul
sbb
adc
iret
test
mov
jb
add
cli
call
jl
jle
sub
icebp
icebp
sti
dec
mov
scas
mov
test
jno
dec
and
jge
aam
pop
mov
cmp
pop
enter
xchg
cmpsl
lods
cmp
int3
mov
push
mov
push
call
lcall
jge
jns
je
dec
pop
push
push
inc
bnd
xchg
mov
jo
fildl
fsubrs
pop
add
fs
push
sub
add
inc
aam
mov
int
jecxz
stos
loop
lcall
fistpll
sub
push
imul
jne
cltd
inc
and
jl
sub
push
jl
fsts
push
insb
xor
push
cmpb
cmp
std
adc
mov
ds
and
hlt
push
sbb
mov
mov
cld
scas
push
jne
xchg
cmpsl
xchg
pop
mov
xor
pop
sub
or
cmp
jo
push
sbb
mov
gs
loop
or
mov
sub
js
xor
adcb
sbb
cmp
mov
stc
not
cs
pushf
shr
jge
stc
nop
call
cmpsl
sub
test
pop
dec
add
and
data16
lret
test
aad
in
daa
lcall
jae
xchg
push
push
cmpsb
sub
adc
aaa
mov
out
aad
test
mov
xlat
xchg
aam
xchg
and
cmp
lret
pop
inc
or
cs
push
mov
and
mov
call
mov
rcrb
in
lahf
jle,pn
sbb
mov
xor
ret
fnsave
rcl
mov
push
mov
jle
and
icebp
arpl
push
mov
ljmp
and
jo
pushf
mov
inc
dec
cmpsb
icebp
and
inc
pop
push
mov
push
mov
lock
out
jne
or
bound
fcmovb
ds
add
mov
rol
push
dec
adc
roll
push
jo
dec
pop
outsl
pop
sbb
fildl
xor
outsl
mov
jns
shlb
pop
mov
dec
pusha
sbb
add
rcrb
mov
xor
push
cmp
jo
jmp
add
jmp
ret
enter
dec
rorl
js,pn
cmp
cmp
outsb
mov
in
cli
push
push
data16
pop
inc
xchg
leave
cmp
testl
sahf
cmp
add
pop
rolb
loope
mov
imul
inc
pop
inc
add
jle
jae
cmp
ret
adc
fstpt
popa
xchg
aas
stos
jne
pop
popa
mov
shll
xlat
pop
movsl
jecxz
xor
lods
cli
ret
out
or
cmp
jo
mov
loope
or
jp
pushf
mov
aaa
lcall
jle
ret
or
jo
je
push
sbb
test
rcr
imul
loopne
jbe
ljmp
mov
pusha
sbb
fwait
stos
inc
mov
push
sbb
adc
clc
dec
mov
add
add
push
jl
xchg
add
cmpsl
test
in
cmc
lret
add
jnp
add
in
sbb
sbb
adc
lds
shrb
cmpb
lcall
or
xchg
inc
push
mov
add
add
cmp
int3
sub
andl
test
rorl
jle
adc
sbb
dec
loop
cltd
or
mov
xor
mov
and
sbb
xchg
add
std
pushl
std
jb
pop
daa
inc
fbstp
pushf
mov
outsl
adc
shll
push
xchg
decl
fiaddl
jae
sbb
ret
imul
pop
inc
sub
cmp
sbb
fs
pop
repz
mov
jle
loopne
pop
sbb
sbb
repz
push
mov
in
inc
mov
in
mov
push
repz
push
sar
pop
mov
es
sub
add
mov
loopne
pop
insl
push
out
jmp
sbb
dec
test
xchg
stc
sti
sti
pop
xchg
int
js
and
push
xor
rcll
addr16
fwait
stos
and
pop
aam
test
sub
jns
push
xor
mov
fwait
push
pushf
adc
rcll
jmp
inc
fildl
inc
sti
rcl
push
insl
jbe
and
or
add
push
lods
scas
mov
push
cmp
add
jno
loopne
in
mov
sbb
cld
push
xor
stos
cmpsb
out
nop
xchg
int
pop
add
cs
sub
aam
fistpll
in
enter
mov
or
lret
cltd
mov
xor
fcomps
sub
inc
inc
jecxz
repnz
pop
xor
mov
mov
clc
test
out
testb
stc
mov
sub
adc
jae
jno
test
inc
and
or
and
mov
stos
stc
addr16
push
insl
dec
mov
cli
fmulp
popa
mov
xchg
mov
push
jo
iret
ret
pop
imul
int3
hlt
bound
int
mov
es
pop
pop
and
adc
nop
arpl
mov
mov
xlat
or
loope
inc
push
mov
cmp
js
inc
jae
fadd
adc
push
lret
mov
xor
aaa
aad
xchg
cld
mov
and
xor
mov
xor
dec
push
xor
pop
pop
lods
std
mov
sbb
fldcw
adc
push
sti
sub
inc
test
dec
fcmovne
xor
in
cmp
sahf
adc
dec
dec
or
mov
jle
bound
sub
cmpsl
mov
fildll
out
adc
mov
mov
mov
shrl
cmp
jecxz
cli
jecxz
dec
fmulp
dec
sub
push
inc
popf
xor
lods
pop
push
sti
jmp
in
popf
mov
push
lds
add
jbe
clc
clc
xor
xchg
adc
les
int3
cli
jb
sbb
and
rcrl
xchg
xchg
jbe
pop
inc
les
cmp
xlat
and
xchg
fs
jns
fistpl
push
scas
push
push
pop
mov
sbb
daa
cmp
jge
jmp
outsb
adc
or
push
ret
bnd
jle
inc
clc
call
popf
dec
and
jnp
mov
lods
sbb
sub
adc
stos
push
sarl
in
dec
enter
aam
dec
sbb
push
mov
jp
jnp
daa
pop
lds
sub
cmpb
and
out
dec
lahf
or
mov
mov
ljmp
jp
jne
mov
daa
shlb
push
or
jmp
loop
out
into
insl
out
push
pop
xchg
push
mov
out
lods
in
mov
pop
aas
xor
mov
fwait
int
rcrb
push
aaa
hlt
in
mov
jnp
xlat
out
cmc
clc
test
insb
sub
sti
cltd
mov
add
cmp
rcrl
insl
lahf
lods
icebp
xlat
orb
nop
rorl
cltd
xor
in
inc
inc
imul
dec
xchg
push
lods
lcall
cmp
adc
mov
add
mov
lahf
imul
dec
aad
popf
add
mov
pop
cmp
call
fwait
mov
mov
mov
fcmovbe
sbb
sti
push
popf
sbb
test
inc
movsb
cmpsb
adc
outsl
pop
xchg
cmp
rorb
mov
fwait
jae
mov
lods
std
lds
into
pushl
outsl
pop
mov
sub
dec
in
jp
lods
clc
cmpsb
loop
add
shl
stos
jl
ret
mov
xchg
lahf
lret
push
pop
lahf
xor
pop
xor
mov
jnp
xchg
dec
imul
push
add
fisttpl
cmp
lret
int3
testb
mov
mov
push
sbb
popf
in
and
addb
lret
adc
rolb
mov
cmpsb
mov
adc
out
scas
scas
stos
sbb
xchg
cwtl
mov
xchg
enter
rcr
jo
adc
xor
cmp
xor
in
mov
test
push
ds
stc
mov
cmp
aas
ljmp
push
lods
cld
sub
mov
push
sub
cs
cmpsb
pushf
cltd
push
into
cmp
lds
std
bnd
pushf
mov
outsl
or
outsb
adc
xlat
arpl
mov
sub
dec
or
repnz
cmp
les
push
jnp
or
imul
mulb
sbb
in
pop
negb
inc
jg
rol
les
pop
nop
pop
sbb
les
shlb
lock
xor
pop
inc
ficoms
adc
fwait
ret
in
in
jne
xor
sbb
jp
sahf
jl
push
push
pop
jns
adc
test
mov
fstps
xor
in
push
and
fsts
je
icebp
sub
idivb
push
movl
push
int3
push
test
pop
cmp
and
mov
xchg
iret
jle
in
add
je
mull
xor
ljmp
add
xchg
cmp
lea
in
outsl
adc
mov
hlt
int3
nop
xchg
push
mov
push
lahf
mov
imul
xchg
sbb
and
fidivl
pusha
xchg
fs
popa
dec
ljmp
dec
fildll
jbe
cwtl
ss
nop
and
inc
dec
rcrl
mov
testb
push
sub
dec
sar
fstpl
into
leave
sbbb
mov
jl
push
sub
out
es
cmp
jne
sbb
movsl
xor
into
ljmp
dec
es
insb
sbb
jbe
aaa
shll
mov
inc
fldenv
scas
outsb
xor
mov
push
push
pop
and
mov
stc
pop
sar
mov
sbb
dec
mov
dec
in
lods
sbb
adc
jmp
inc
or
sub
xchg
dec
mov
sbb
clc
inc
mov
xchg
aad
nop
fsts
pusha
xor
add
lcall
xchg
dec
roll
inc
das
rolb
add
outsl
sbb
push
jne
xchg
fdivrp
lds
inc
xchg
sbb
cli
jmp
in
jae
xor
fcmovbe
pop
ffreep
and
mov
daa
mov
mov
sub
xlat
cmp
divb
inc
mov
icebp
cmc
or
hlt
xchg
cmp
fwait
mov
cmp
cli
repz
lock
movsl
and
mov
test
ret
sahf
nop
pop
int3
mov
mov
cltd
xchg
inc
mov
cmp
mov
sbb
sbb
xchg
cs
jbe
add
add
int
lret
mov
outsb
sbb
sti
push
cmpsb
enter
imul
pop
push
lret
sub
cmp
repnz
testb
shrb
mov
mov
mov
sar
xor
adc
dec
cmpsb
call
sub
lock
or
lea
pop
push
or
xchg
in
dec
stc
imul
or
xchg
or
mov
inc
loope
pop
push
inc
hlt
fnstcw
js
mov
or
rclb
repnz
cmp
int3
out
fwait
sub
pop
sbb
icebp
pop
lds
int
out
scas
out
and
rcrl
cmp
sbbl
mov
movaps
xor
dec
dec
push
aas
cmpsl
addr16
sub
lods
std
mov
cli
or
fnsave
xchg
mov
lods
jmp
into
and
mov
es
sbb
xchg
cmp
jno
xchg
sbb
in
mov
jae
lods
pop
test
ds
push
jge
iret
push
rorl
lds
mov
inc
pushl
clc
push
sbb
nopl
inc
ds
and
jecxz
adc
mov
xchg
mov
pop
shlb
test
leave
mov
scas
mov
adcl
mov
arpl
test
sub
pop
bound
jo
pop
cmp
jl
jbe
mov
in
sub
out
mov
lea
scas
inc
and
pusha
mov
pushf
xor
push
jbe
das
and
jle
out
repnz
sbb
sbb
dec
frstor
das
or
adc
mov
adc
addr16
dec
rcrb
adc
dec
sarl
cld
loope
xlat
fidivs
mov
pop
xor
lods
pop
mulb
inc
ja
xchg
dec
call
xchg
stos
push
fsubrs
push
cs
push
xlat
repz
dec
pop
xor
mov
pushf
roll
int3
cmp
popf
ficomps
mov
jo
dec
push
rorl
out
push
les
lock
sarb
cwtl
sub
dec
add
mov
aad
subl
aaa
pop
xchg
jmp
or
dec
or
test
inc
loope
mov
jle
inc
cmp
fsubrl
data16
in
test
sub
stc
sub
jnp
cmp
inc
cli
cmp
cmp
and
popf
inc
ret
hlt
jb
out
js
and
jge
lock
cmpsb
mov
adc
dec
push
sbb
sub
add
mov
ljmp
mov
sbb
jl
inc
addr16
outsb
mov
inc
pop
xchg
jne
fcoms
call
popa
mov
pop
and
xor
js
js
cs
cli
push
aaa
sbb
loope
loop
fs
inc
std
or
mov
out
jecxz
lods
mov
or
icebp
push
inc
nop
xchg
test
inc
xchg
addl
js
pusha
jp
dec
pop
repz
push
loop
pop
out
or
inc
jge
shll
cmpsb
daa
push
xorl
sti
idivb
stos
movsb
lahf
popa
inc
inc
ret
jnp
pusha
mov
pop
and
fidivrs
mov
lret
movb
out
sub
xor
or
das
mov
fstps
pop
mov
fdiv
inc
pop
mov
out
lds
ljmp
add
insl
ds
inc
sub
mov
xchg
cmc
push
xchg
inc
fldenv
pop
sub
fs
mov
daa
sub
sub
into
hlt
dec
call
add
dec
pop
pusha
mov
sub
jns
sub
mov
stc
pop
jl
icebp
pusha
lret
enter
jle
scas
and
scas
fwait
add
inc
sbb
or
mov
shlb
xchg
fcoml
dec
bound
sub
xchg
cmp
sbb
pop
leave
lret
pusha
push
hlt
jbe
or
andl
jg
shll
jmp
fincstp
add
negl
lock
das
fisubs
cmpsl
ja
adc
lahf
push
jne
fld
mov
int
or
adc
loope
jb
lds
cmp
adc
sub
or
push
inc
pop
xchg
jb
pop
adc
xlat
push
and
outsb
lea
hlt
add
adc
add
or
outsb
xchg
cmpsb
pop
mov
jne
pop
imul
sub
in
es
xor
cmp
or
fbld
ret
sbb
cmp
andb
cltd
push
inc
sub
push
fwait
adc
sub
lahf
shrb
adc
inc
loop
inc
clc
das
add
movsl
and
jne
and
lahf
fistps
adc
iret
out
push
hlt
in
mov
repnz
imul
dec
mov
xor
sbb
sub
and
dec
mov
fimuls
loopne
pop
and
xchg
daa
mov
ljmpw
sub
dec
mov
test
lods
push
ret
nop
stc
mov
xor
jne
cmp
push
inc
insb
add
jnp
fs
or
xor
mov
sbb
stos
pop
xchg
cmp
fcomp
cld
rol
sub
mov
xchg
sarb
push
sbb
and
jb
nop
jle
add
nop
in
rclb
sti
dec
add
js
shll
sub
dec
xor
sti
xchg
fbstp
arpl
sub
cmp
mov
loop
clc
std
test
cwtl
ret
fnsave
js
xor
mov
xchg
jg
xchg
sbb
shlb
addr16
adc
push
icebp
xchg
das
pop
push
add
dec
js
pop
add
sub
mov
cmpsb
test
call
cmc
pop
movsl
jno
in
jae
pop
jge
pop
fidivl
push
cld
dec
xor
imul
mov
dec
pop
mov
sub
push
push
ljmp
mov
lods
xchg
push
or
rorb
mov
cmp
pop
dec
pop
setnp
add
jb
in
dec
dec
sub
mov
xor
lock
add
leave
xchg
orb
pop
rol
jg
xor
mov
into
shr
dec
or
test
xchg
or
js
jae
mov
repz
push
dec
pusha
sbb
inc
sub
or
hlt
ss
movsl
pop
cmc
or
cwtl
js
xchg
dec
mov
pop
lret
mov
jg
gs
iret
sahf
scas
out
pop
shll
loop
mov
mov
or
scas
rcl
inc
testb
push
jo
ljmp
lds
cmp
xchg
dec
mov
xor
jne
fs
xor
xlat
test
mov
pop
sub
inc
mov
jecxz
shrl
hlt
xor
adc
mov
fists
pop
into
aas
adc
fisubl
mov
lcall
int
std
add
and
call
out
repnz
test
cmp
hlt
push
mov
inc
sub
mov
ficomps
pop
das
inc
mov
adc
pop
fdivr
mov
repnz
imul
outsw
sbb
xor
jge
sub
loope
sub
outsb
mov
imul
test
fsubl
sarb
push
ror
cmp
push
icebp
add
out
jae
sub
sub
xchg
int3
sbb
push
insb
inc
mov
or
mov
push
sbb
repz
sub
cmp
xchg
rcrb
mov
mov
inc
out
icebp
xchg
push
aaa
add
sbb
scas
cmp
aad
mov
das
lret
insl
hlt
loope
mov
mov
into
aad
inc
mov
jp
arpl
sub
adc
cmpsb
out
iret
test
lahf
les
scas
cs
fcoml
adc
or
sbb
mov
sti
sub
fwait
jg
cmp
or
movsl
sub
pop
lock
int3
jg
pop
dec
inc
push
pop
and
mov
push
popa
pop
push
and
mov
les
sbb
rolb
out
xchg
sbb
xchg
imul
fistpl
cmp
stc
xchg
mov
add
pop
jne
jns
dec
xchg
call
lock
cmp
in
pop
or
int3
dec
inc
or
push
fwait
pop
cmpsl
in
movaps
aas
jle
push
xor
lahf
xchg
mov
rcr
mov
jg
mov
pop
cmpsl
cwtl
mov
aaa
inc
cmc
lret
xor
adc
insl
ja
xchg
mov
outsl
cmpsl
ret
dec
mov
mov
mov
xchg
jae
repz
ljmp
inc
mov
shr
pop
and
aad
and
cmpsl
repz
test
aaa
enter
fstl
mov
sbb
enter
pop
mov
pop
aam
aad
pmulhuw
outsb
add
rcrl
das
insb
inc
das
push
pop
dec
movsb
pusha
or
mov
push
iret
mov
pop
je
int
add
les
ret
mov
push
pop
sub
cmc
jbe
rolb
fmuls
mov
inc
add
pop
insb
subl
fbstp
xchg
shll
xchg
sub
arpl
dec
fidivrs
mov
mov
lcall
loope
and
dec
mov
popa
jg
mov
fcompl
rorl
mov
push
sub
mov
lods
xchg
xor
popa
add
push
incl
sete
loopne
cmp
popf
mov
and
cmp
push
adc
push
in
leave
lret
idivb
ss
cld
mov
fdiv
mov
repnz
xor
jg
loopne
outsb
pop
mov
shrb
pusha
mov
mov
jne
add
mov
fidivrs
imul
ficompl
push
ret
or
sub
icebp
jae
push
sbb
hlt
and
out
inc
sub
clc
or
cmp
add
jno
out
cltd
mov
jae
scas
lret
add
pop
mov
dec
lahf
mov
add
mov
test
mov
out
xlat
sbb
std
adc
jge
dec
icebp
out
jecxz
jecxz
enter
pop
jae
in
daa
js
fnstenv
mov
push
and
mov
pop
jp
addr16
xor
cmc
jp
shlb
dec
cld
pop
loop
les
loope
mov
push
or
or
dec
lret
mov
jo
add
or
adc
aad
repz
sub
mov
cs
outsl
sbb
notl
push
mov
ds
xor
cmpsl
dec
call
stos
dec
hlt
pop
es
imul
scas
push
in
cmp
sbb
cmpsb
lret
push
inc
das
cmp
inc
int3
and
xchg
push
pop
test
pop
lret
lret
cmpsl
stos
fsub
inc
ret
jl
test
out
cmc
lods
or
int3
mov
gs
aad
test
lds
cmpsb
inc
and
in
xchg
and
and
mov
pop
sahf
and
out
mov
fildll
out
adc
je
mov
jbe
adc
cmpsl
mov
xchg
mov
jbe
shr
nop
lret
mov
out
or
scas
jge
test
testb
push
push
mov
mov
scas
aam
es
xchg
jne
dec
je
jbe
dec
mov
mov
or
aaa
lds
imul
push
mov
mov
xchg
pop
cmp
push
out
les
data16
into
cmp
add
iret
sub
dec
out
shll
mov
insl
out
add
fwait
js
stos
mov
xchg
sub
mov
fdivr
test
cs
lods
lahf
pop
jns
mov
cmp
jmp
fiadds
ret
loope
inc
push
inc
cli
inc
xchg
das
in
sahf
xor
mov
fistpl
jmp
dec
mov
iret
cmp
mov
call
cwtl
sub
in
pop
jmp
je
roll
mov
in
dec
scas
fs
jbe
and
and
stos
pop
mul
ljmp
mov
and
mov
mov
sahf
mov
test
mov
and
add
test
out
sbb
sbb
fwait
push
mov
mov
rcl
jg
stos
xor
mov
sbb
mov
ret
lcall
test
dec
cld
push
icebp
addr16
int3
cmp
rcrb
mov
je
outsl
lahf
fidivs
fnstcw
sub
sbb
mov
ret
add
sbb
shlb
push
ret
or
dec
cmp
aaa
std
std
data16
in
pop
js
ds
mov
sbb
insb
xlat
mov
loopne
add
arpl
push
sbb
arpl
xor
repnz
dec
mov
daa
pop
cli
cmp
jae
jae
dec
push
push
adc
pop
or
dec
dec
mov
sbb
leave
and
sbb
push
lcall
mov
push
pop
lods
sub
cmp
pop
dec
pop
adc
pop
mov
sub
jns
xchg
jns
and
push
aad
fnstenv
fisubs
ret
add
adc
imul
sub
ret
pop
insb
rclb
aad
push
push
jecxz
cmpsb
or
subl
sbb
push
and
popf
cmpsb
sbb
add
lea
testb
push
movsb
mov
hlt
pop
loop
and
cld
fadds
ret
cltd
xchg
cmp
pop
outsb
std
and
scas
pop
mov
and
ss
dec
imul
es
fisubrl
mov
pop
arpl
popa
mov
jno
and
mov
jmp
pop
in
loopne
mov
push
cmp
push
sub
mov
sbb
gs
lea
dec
imull
andb
lds
das
adc
cmp
js
adc
push
sbb
add
loopne
jle
ljmp
daa
lods
pop
or
jp
popa
int
sbbl
mov
jo
sarl
push
sub
std
in
pushf
dec
adc
xchg
pop
mov
rorb
insb
shlb
mull
push
push
gs
pop
test
fwait
mov
xlat
fidivl
stos
jge
not
jl
mov
cmp
add
idivb
pop
jg
jmp
push
pop
jno
cmp
popf
push
lds
push
sbb
insl
jg
and
filds
js
pop
aas
lock
jl
bound
fdiv
xchg
lcall
cmpsl
outsb
loope
ret
mov
pop
call
mov
mov
add
and
or
push
fmulp
jbe
sbb
pcmpgtb
pop
mov
mov
push
int
mov
mov
or
test
inc
and
call
std
sub
movsl
imul
into
aad
lock
cmpsb
jne
cmp
js
xchg
aam
push
cmp
xchg
or
xchg
inc
jns
cmp
adc
movsl
adcb
das
rcrb
fisttpll
mov
movl
xor
hlt
mov
fcoms
xor
mov
addl
push
andb
cmp
dec
and
sarl
ss
imul
lock
movb
push
aam
mov
ret
mov
xor
mov
fisttpl
push
xchg
bound
jnp
jg
push
mov
ja
movsl
adc
mov
iretw
pop
in
xor
addr16
inc
mov
popf
adc
aaa
outsb
cld
inc
inc
sub
cmc
test
dec
fmull
mov
xchg
and
push
push
add
jle
sahf
xchg
mov
pushf
dec
push
aaa
push
sbb
mov
orl
pop
into
pop
pop
bnd
dec
cmp
jl
out
ljmp
and
iret
jnp
int
sarl
and
sbb
in
mov
in
in
aad
sbb
add
mov
sti
idivl
add
cli
adc
push
adc
jecxz
fs
fcmovu
pop
jp
jle
pop
mov
or
xchg
cmp
les
fst
sbb
sub
push
clc
and
and
jle
dec
in
jno
mov
stc
mov
lcall
or
cmpsl
lds
incl
and
xchg
mov
icebp
xchg
leave
add
cmp
data16
les
rolb
popf
call
enter
in
xlat
in
mov
cmp
and
arpl
xchg
cli
pop
sti
out
sbb
mov
xor
aad
sbb
xchg
test
sbb
xchg
mov
mov
leave
and
in
lock
clc
xor
idiv
mov
gs
sbb
mov
lods
inc
cmp
sbb
int3
cs
fcompl
cmc
sbb
cmpsl
push
lods
add
int3
adc
ljmp
pop
bnd
sbb
stc
ss
mov
mov
and
and
inc
aas
sbb
lcall
out
mov
ret
hlt
jb
loop
in
fiadds
iret
stos
imul
or
sbb
inc
pop
adc
xorb
inc
sbb
adc
loop
bound
jp
popf
sub
dec
fiadds
push
jge
lret
push
mov
and
aad
data16
add
std
dec
lea
push
rclb
and
aad
popa
sub
mov
sbb
pop
inc
sbb
add
fidivs
shrd
mov
aad
popa
mov
pop
cmp
mov
push
in
cmpsb
xlat
inc
addr16
stos
loopne
jnp
mov
jbe
xchg
sub
aam
sub
icebp
or
jl
daa
aad
out
repnz
pop
add
mov
xchg
mov
mov
mov
xchg
push
sbb
lahf
mov
outsl
inc
cmp
add
arpl
stos
ljmp
cli
out
inc
fsubrp
and
in
mov
adc
cmp
pusha
mov
or
nop
jb
mov
lods
add
push
fdivrp
sub
fs
std
and
adcb
sbb
enter
popf
into
push
rorb
rcrb
test
ficoml
sbb
nop
andb
push
cmp
add
jo
rcrb
hlt
adc
sub
cmp
out
mov
sti
adc
cmpsb
shlb
sbb
push
outsl
lock
lea
jb
cmp
cs
push
jl
jp
or
inc
adc
int
mov
fstp
and
mov
xorl
ret
cmp
sub
movsb
fldt
sub
sub
mov
flds
and
sbb
push
stc
fnstenv
adc
cli
divps
mov
out
negb
or
scas
adc
movb
xlat
lcall
popa
push
mov
sti
xchg
and
mov
ret
inc
mov
mov
sub
mov
inc
rorb
cli
inc
dec
xchg
adc
cld
idivl
mov
aaa
bound
sbb
push
ds
add
dec
adc
hlt
jle
into
inc
jle
push
aaa
aam
ret
sub
jg
out
das
pop
cld
sbb
push
mov
pop
pushf
cmp
mov
push
fmuls
rcr
pop
sbb
das
fwait
pop
dec
pusha
xchg
mov
mov
cmp
xor
sbb
in
jg
cmp
cmp
std
aaa
push
js
xchg
shlb
sub
pop
pop
cld
dec
jno
inc
rcrb
mov
push
pop
mov
fistpl
lcall
iret
xchg
xchg
pop
mov
cld
sbb
repz
int
js
shrb
imul
imul
jns
xor
lahf
pop
addr16
mov
xchg
add
les
inc
pushf
add
addr16
cmc
call
adc
cltd
pop
sub
jne
cmp
push
add
and
inc
movsl
inc
aaa
adc
push
sahf
pop
mov
xchg
sub
fstl
or
jle
pop
std
pop
add
das
ficomps
cmpsb
sbb
or
lds
jecxz
fmull
jge
dec
insl
or
loopne
sbb
ret
pusha
or
fmul
addb
mov
lret
xor
fsubrl
shl
cli
mov
xchg
shll
stos
repz
int
mov
cmpsl
jb
jnp
mov
mov
out
sbb
movsl
sbb
xor
in
jg
mov
jae
mov
xor
leave
xor
pop
xchg
push
inc
rolb
das
imul
mov
mov
insb
push
push
mov
push
jl
and
loopne
pop
jmp
ljmp
pusha
push
orb
and
stos
fwait
ret
adc
test
test
mov
sub
dec
data16
or
adc
call
aam
jae
shll
ret
fwait
mov
pop
ret
jmp
xchg
fistps
push
sbb
sbb
je
cld
pop
fldl
xchg
add
imul
mov
xor
push
sbb
es
xlat
fnstenv
and
out
in
jecxz
dec
stos
cmp
xor
cld
imull
adc
cmp
nop
or
rolb
push
dec
mov
pusha
sbb
xchg
jns
sbb
or
insb
push
icebp
or
xchg
pop
clc
test
push
jg
dec
xchg
xor
xor
inc
movsb
movsl
lock
ret
icebp
jg
iret
dec
mov
xchg
ret
add
mov
xor
int
pop
pop
mov
mov
fistps
and
stos
adc
pusha
add
jnp
mov
or
cwtl
fisubrs
scas
or
jp
mov
push
pop
mov
push
in
cmp
stos
and
add
or
dec
xchg
insb
repnz
test
xor
pop
ret
push
pop
icebp
push
es
lods
mov
imul
movsb
push
mov
mov
mov
xor
mov
sbb
sub
or
aam
cltd
insl
into
sub
out
sub
mov
inc
in
lret
mull
mov
nop
adc
mov
addr16
add
js
cmpsb
xchg
popa
push
in
adc
leave
mov
jb
adcb
dec
lcall
insb
in
pop
mov
shrb
mov
bndstx
sub
lahf
js
test
loope
cli
jo
call
add
out
sbb
add
sub
sahf
addb
addr16
push
movsb
jb
and
sbb
jbe
aas
sbb
jmp
clc
in
inc
jmp
push
lahf
das
gs
decb
adc
mov
jno
dec
sub
cwtl
test
enter
xor
and
and
inc
dec
xchg
out
adc
popa
cmc
pop
lods
jae,pt
fwait
push
divb
pop
out
adc
repnz
fucomip
out
fsts
xor
dec
clc
push
xchg
xlat
mov
shll
nop
cmp
pop
stos
inc
test
ret
lahf
mov
aam
xchg
call
lahf
push
mov
shll
adc
pop
and
xlat
sbb
es
adc
jmp
and
lds
negl
popa
mov
ret
hlt
roll
pop
sub
into
sbb
pop
and
pop
jo
mov
stos
xor
or
xchg
repnz
pop
mov
adc
int
icebp
push
stc
cli
xchg
jno
dec
cwtl
xchg
fcomip
icebp
pushf
pop
dec
in
test
call
mov
adc
cmp
lock
das
fwait
pop
iret
ret
pop
movsb
mov
pop
jne
testb
mov
xchg
mov
xchg
jno,pt
pop
mov
add
pop
clc
xchg
mov
das
pop
and
lahf
inc
jmp
insb
xchg
cmpsl
lea
xor
test
iret
fsubl
pop
enter
push
cltd
push
or
push
nop
mov
mov
jne
fildll
pop
iret
mov
add
xchg
scas
imul
or
rcrb
jno
inc
xor
mov
sahf
jecxz
fcompl
adc
in
dec
and
fs
aam
pop
lea
loop
jle
inc
shlb
inc
pop
es
push
arpl
in
jo
jl
hlt
sarb
cwtl
jp
xchg
xchg
or
pop
movsl
in
and
xor
loop
repnz
icebp
adc
add
push
jbe
push
popf
xor
add
out
xchg
sbb
inc
aam
popa
popa
mov
cltd
rcll
lock
mov
or
loop
stos
sub
enter
jb
cmp
dec
mov
in
jno
add
ds
xchg
fwait
sbb
aad
les
fmulp
or
jg
push
test
dec
fcoms
sbb
lcall
lock
arpl
jnp
mov
cmp
mov
inc
push
mov
insl
jb
ret
and
xor
ret
adc
mov
rolb
fimuls
hlt
sbb
ret
xlat
jg
adc
popa
andb
lock
orb
mov
jle
lea
loope
or
xchg
iret
push
jns
aaa
dec
lcall
sti
pusha
xor
sub
pop
mov
jbe
mov
inc
repnz
clc
jp
test
xorl
push
mov
addb
fnstenv
test
movsl
loope
cmc
dec
mov
insb
shlb
lahf
shll
out
scas
mov
iret
xchg
roll
xchg
push
sbb
mov
pusha
lcall
ss
and
fstl
lret
cmp
aaa
out
js
xor
stc
btc
aam
out
daa
jnp
mov
test
stos
inc
and
popf
aaa
mov
mov
dec
mov
sub
jl
jnp
lea
add
and
mov
lcall
mov
sub
scas
push
jns
mov
push
fwait
or
imul
arpl
and
hlt
ljmp
das
testb
outsl
push
repz
pop
mov
movsl
cmpsb
adc
xchg
enter
fcoms
addr16
xor
add
popl
mov
push
enter
or
inc
jmp
mov
repnz
push
or
and
andb
or
leave
xchg
rol
mov
jns
xchg
mov
popa
push
lret
mov
ffreep
scas
in
cmp
pushf
jne
sbb
jb
movsb
inc
sub
and
cmp
arpl
push
xor
mov
je
fsubrs
sbb
fs
mov
insb
xchg
mov
push
add
aam
dec
mov
jne
sub
fst
cwtl
sahf
jg
pusha
sahf
pop
cmp
in
or
sub
loope
cmp
fisttpl
or
out
xchg
insb
repz
daa
ss
mov
cmpsl
pop
fistpll
movsl
xchg
mov
mov
fst
fidivrs
add
ret
jbe
mov
aaa
or
popa
or
ficoms
into
inc
jnp
mov
xchg
fimull
mov
pop
push
ja
pop
add
fstpt
push
iret
jae
nop
mov
dec
repnz
lods
push
add
and
pop
aam
push
jmp
imul
repnz
stos
movb
sub
outsl
and
sti
inc
dec
std
int3
inc
flds
mov
out
cld
sbb
lods
ret
icebp
rclb
pusha
mov
rorl
data16
xchg
cmp
push
stos
test
mov
adc
mov
cmc
jl
sbbl
outsl
xchg
je
or
jns
cmpsb
mov
push
jle
push
push
in
xchg
out
fmul
dec
and
leave
aaa
notl
mov
dec
or
leave
aam
insb
push
std
fistps
pop
hlt
and
sub
mov
out
mov
mulb
xchg
mov
rorb
and
push
jecxz
pop
mov
cmp
imul
je
repz
mov
out
loop
mov
xchg
cmp
iret
mov
mov
pop
fdivrs
adc
lock
mov
fs
or
in
xchg
repz
dec
mov
jmp
iret
or
stos
lahf
fcompl
mov
aaa
lahf
mov
stc
push
mov
shl
push
pop
call
add
arpl
inc
dec
add
ja
cmp
jnp
adc
das
imul
daa
cltd
jo
sub
and
jnp
scas
push
loope
or
jo
hlt
lcall
out
sbb
fnstcw
in
mov
mov
push
or
std
lret
ja
icebp
push
xor
mov
ja
or
and
jp
pushf
js
pop
aaa
lods
cmp
jge
std
and
lahf
dec
or
jbe
scas
cld
test
adc
neg
repnz
sti
ss
aad
jae
fwait
sub
sub
mov
enter
sarl
xor
xlat
fwait
movsl
jne
lahf
fwait
int3
dec
mov
push
outsl
dec
xlat
stc
test
cmpsl
cmp
fadds
sahf
or
sbb
jg
orl
arpl
test
mov
loope
push
push
movsl
ds
sub
out
arpl
lods
add
js
pop
ret
and
cmpsl
and
cmp
mov
mov
jg
dec
jne
and
pop
xchg
xchg
ds
stc
lret
inc
scas
mov
mov
fadds
cmp
rcrb
dec
mov
addr16
nop
jg
add
mov
in
aad
jns
cwtl
or
test
or
imul
pop
scas
int3
addb
int3
popa
mov
dec
in
mov
mov
xor
sub
fisubrl
in
adc
add
stc
add
dec
mov
add
pextrw
add
icebp
jb
adc
hlt
cltd
hlt
in
mov
mov
insl
lods
scas
aaa
lods
xchg
idivb
mov
mov
cld
push
fldenv
es
xchg
lock
pusha
lods
dec
test
movsb
fcmovnbe
push
bound
lret
in
dec
jae
cmp
inc
popf
pop
sub
out
dec
jo
push
jp
dec
xor
insl
icebp
bound
inc
ljmp
cld
xchg
aas
mov
aas
mov
sub
dec
repz
jge
xchg
add
xchg
aad
mov
imul
jge
ret
mov
in
jle
pop
bound
push
sbb
and
stos
sahf
jo
lret
ss
addr16
mov
dec
xchg
or
jne
push
mov
or
out
lret
scas
push
dec
adc
mov
stos
in
sahf
mov
and
inc
inc
add
inc
cmpsb
fnstcw
and
ss
push
xchg
mov
insl
adc
call
rolb
cmp
fs
ljmp
add
jns
sbb
cmpsl
mov
jle
mull
test
lret
dec
add
sti
mov
mov
mov
mov
fidivs
pop
sub
sub
jb
fadds
xchg
lds
inc
daa
inc
cmpsb
shrb
sub
mov
cmp
hlt
notb
shrb
sbb
aad
push
clc
xor
cmp
jge
adc
in
mull
adc
fwait
jp
cmp
loopne
mov
test
dec
cmp
outsb
hlt
pop
cwtl
inc
addb
xor
stc
mov
lock
shll
repnz
sbb
inc
inc
shrl
adc
jbe
ljmp
arpl
xchg
dec
repnz
adc
jne
test
dec
xchg
dec
repnz
mov
push
or
adc
pop
jmp
push
pushf
mov
ja
sub
pop
pop
push
cli
fs
or
push
fidivl
test
popf
jg
push
push
jo
mov
jb
or
ds
sti
mov
push
cmp
lcall
addr16
xor
in
scas
mov
fisubrl
dec
clc
xchg
inc
repz
sub
dec
dec
pop
loop
mov
repz
lds
add
mov
nop
lcall
xchg
pop
ficompl
and
ret
outsl
cmp
xchg
add
je
sti
or
movsb
push
adc
mov
mov
jp
jnp
mov
out
sub
or
mov
pop
lahf
jl
mov
jnp
loope
mov
out
enter
mov
pop
adc
stos
xchg
xchg
dec
bound
jg
jns
mov
xchg
jno
add
mov
aam
cmp
out
xchg
or
xor
outsb
inc
arpl
jg
dec
push
lea
pop
movsl
jge
aas
ret
push
xchg
inc
dec
insb
jg
aam
jno
enter
xor
lods
mov
call
push
mov
mov
add
into
pop
lds
sbb
icebp
stc
fwait
leave
mov
adc
xchg
adc
push
test
adc
xor
xor
and
cmp
sub
mov
adc
add
pop
mov
jo
mov
scas
and
mov
dec
jge
jecxz
pushf
stos
pop
sti
call
sbb
jecxz
rcl
mov
xchg
mov
jne
mov
rorl
pop
leave
sub
mov
insl
orb
cmp
mov
inc
inc
incl
popa
inc
sahf
xor
imull
push
test
jmp
rcr
les
xchg
dec
inc
mov
push
ljmp
sahf
ficoms
mov
arpl
stos
psubsb
xor
adc
mov
inc
or
repz
sbb
cmp
mov
mov
adc
sti
out
repz
movsb
mov
jns
popf
adc
or
lcall
fstl
cmp
enter
jo
in
int3
cmp
outsl
mov
sbb
popa
xchg
aaa
jecxz
stos
int3
fiadds
fiaddl
mov
mov
repz
mov
pop
mov
cs
movsb
pop
in
and
add
mov
insb
fiaddl
arpl
pop
xorl
pop
icebp
int
into
jl
xchg
sarl
xchg
outsl
jnp
sbb
or
pop
mov
lock
mov
add
sbb
pop
mov
ja
fisttpll
pop
lcall
das
push
in
fstps
ret
adc
xor
and
cmpsb
dec
outsl
pop
jg
fisubs
stos
movsl
xlat
fiadds
mov
aas
scas
test
inc
push
cmp
dec
in
push
scas
insl
mov
ret
rorl
push
ffreep
mov
inc
sbb
dec
cmp
dec
pop
xchg
cmp
xchg
enter
pop
xchg
aas
fmull
and
mov
pop
cmp
jne
sub
push
mov
jb
cwtl
icebp
lcall
arpl
filds
lds
iret
pop
xor
lret
mov
adcl
jg
movsl
js
mov
push
loope
mov
inc
test
mov
push
pop
lret
push
jbe
unpckhps
mov
inc
ret
or
xchg
in
cli
inc
outsb
cli
adc
fiaddl
clc
shlb
cmpsl
and
hlt
sub
push
popa
push
es
push
leave
dec
mov
xchg
mov
scas
daa
outsl
sub
push
call
es
xor
cmp
mov
sbb
gs
nop
dec
ror
adc
jp
repnz
or
loop
jb
loope
pushf
sub
loope
hlt
test
movsl
sbb
stos
out
insb
xlat
aas
imul
inc
lcall
repz
mov
in
mov
mov
lret
jg
push
add
jbe
adc
test
mov
arpl
loope
xchg
inc
xchg
sbb
and
mov
jo
inc
in
adc
rolb
into
mov
jb
movsl
mov
jmp
ds
and
mov
sbb
mov
lret
dec
lret
shrl
xchg
stc
lods
fstp
lcall
sub
or
inc
dec
push
test
pushf
ljmp
pop
mov
jecxz
fsts
scas
ja
popa
rol
or
jne
mov
clc
jg
push
xchg
cli
fmul
cmp
stos
push
dec
roll
dec
jo
adc
dec
fdivl
cmp
inc
dec
or
stc
xchg
out
int
jo
add
andl
adcl
stc
iret
sbb
loope
sti
dec
mov
imul
cwtl
aam
hlt
inc
mov
stc
icebp
jnp
mov
dec
in
ljmp
insb
pop
cmp
insb
mov
movsl
stos
add
xchg
ss
add
lds
in
pop
repz
movsl
jns
scas
sahf
xlat
loope
mov
jo
outsl
aas
inc
out
inc
sbbb
lret
loopne
mov
push
loop
aam
ljmp
inc
lods
mov
sbb
pop
mov
dec
stos
js
push
fsubl
mov
shl
push
pop
lcall
lock
dec
fwait
jmp
lock
daa
mov
jo
les
add
mov
push
je
pop
aam
inc
add
mov
push
cmp
dec
fdivs
idivb
xchg
shl
dec
adc
add
push
imul
ret
stos
movsb
aas
jo
sbb
mov
pop
cmp
mov
out
lahf
inc
push
test
sub
dec
stos
push
mov
pop
pop
sbb
lcall
cmpsl
mov
xlat
rclb
pusha
xchg
das
sub
sub
daa
jp
mov
add
int
adc
pop
lret
and
out
push
xchg
or
sti
jns
insb
dec
pop
dec
xlat
sti
jae
adc
sbb
aad
movsb
scas
xor
aaa
icebp
push
inc
add
jg
mov
leave
add
push
shl
cmp
leave
movsl
and
add
aam
jge
inc
les
pushf
insl
cmc
jne
les
lods
adc
pop
xchg
arpl
clc
out
rcrl
sub
xchg
dec
data16
jo
sbb
inc
out
pop
in
sub
xor
sub
ds
fisttpll
arpl
sub
imull
push
push
adc
pop
cmc
pop
out
mov
ds
shlb
xchg
js
cli
lds
xor
lahf
popf
xor
sbb
lds
pop
lock
jo
mov
or
out
add
push
inc
mov
outsb
xor
pop
or
and
xchg
mov
mov
in
orl
mov
xchg
sbb
rcll
push
and
data16
fwait
pop
mov
add
mov
and
lea
add
into
je
pop
push
sti
mov
imul
fisttpl
cmpsl
out
xor
adc
pop
cs
sbb
mov
sub
mov
fstps
mov
dec
lods
inc
nop
push
mov
jno
xor
sti
sbb
mov
mov
stos
dec
gs
dec
jbe
xor
out
decb
fldl
cmp
jge
sahf
out
shlb
pop
pop
pusha
push
leave
dec
mov
arpl
int
sub
inc
xchg
cltd
lret
out
fcompl
cmpl
out
xor
ficoml
xor
call
mull
push
lahf
inc
sub
xchg
add
int
fdivrs
call
dec
mov
sub
cmp
fwait
sbbb
arpl
inc
icebp
pop
push
dec
loop
pop
daa
inc
imul
jae
lods
dec
dec
jle
or
adc
and
in
cmp
xchg
test
add
in
xchg
aam
es
sbbb
xchg
sbb
ss
pop
mov
outsb
and
jne
cmpsl
aad
pop
jecxz
bound
push
sbb
test
fiaddl
dec
jg
cmp
aad
les
pop
push
adc
cltd
sti
dec
pusha
or
xchg
cmovg
loopne
je
xchg
jl
clc
enter
sub
ret
cmp
jnp
inc
lock
xor
test
inc
push
jecxz
js
sub
lea
out
push
rcl
rorl
sbb
sub
or
int3
out
pop
out
push
pop
hlt
push
and
or
popf
movsl
sbb
push
movsl
jno
scas
pushf
inc
or
stc
and
jo,pn
loop
js
stc
add
mov
data16
jecxz
cmp
lods
incb
xor
stos
in
push
or
out
and
or
push
jmp
mov
sti
subl
ret
cs
cwtl
inc
mov
lds
shlb
inc
adc
mov
mov
ljmp
cmp
adcb
sub
dec
xchg
sahf
rcl
inc
jno
and
push
cmp
cli
add
xor
mov
push
sbb
push
shr
xchg
aaa
cs
incb
push
frstor
ss
dec
cs
loop
lret
inc
mov
sbb
lods
push
shrl
xchg
sbb
mov
setl
aas
aaa
out
jp
push
jbe
mov
add
sarb
sub
pushf
dec
sub
rcll
mov
movsb
outsb
call
push
dec
in
mov
dec
loope
out
xchg
mov
aaa
outsl
pop
jg
enter
xor
cmc
imul
adc
or
lret
sar
aaa
in
insb
push
outsb
mov
pop
loope
lock
and
rcll
sub
cmp
xor
push
and
fmuls
insb
out
push
fsubrl
mov
call
and
add
inc
lcall
mov
cmp
ficoml
insl
lock
push
add
out
scas
cmp
pop
sbb
ljmp
pop
movsl
outsl
imul
lods
loopne
mov
xchg
mov
fisttpll
in
scas
shlb
cmp
out
dec
jp
jmp
sbb
or
mov
aam
jne
pop
scas
sbb
sbb
leave
or
stos
inc
sbb
stc
stos
sbb
sub
adc
pop
addr16
and
cld
pop
mov
dec
sahf
addr16
cs
xor
movsl
xlat
or
cmp
stos
sbb
inc
mov
loop
jne
pop
dec
jbe
inc
jg
sub
leave
add
sbb
ss
dec
push
in
enter
cli
push
or
pop
adc
shll
xchg
mov
lcall
fimuls
cltd
add
movsl
pop
stos
ficomps
test
sbb
sti
adc
aam
ret
adc
xchg
bound
loop
int3
cmc
rolb
test
push
lret
pop
aaa
push
jp
fisttps
leave
call
add
fwait
and
out
mov
out
xchg
repz
mov
std
xor
and
mov
stc
cmp
push
push
enter
je
xchg
adc
push
inc
in
in
fstl
xor
or
stos
mov
inc
fstpl
jns
mov
sub
imul
dec
sub
or
push
inc
sub
mov
and
mov
sahf
out
jmp
xchg
mov
int3
cs
xchg
push
rorl
sahf
loopne
lods
adc
mov
cwtl
cmp
pop
divb
jae
lret
sbb
cmc
xchg
xlat
popa
adc
mov
lods
xor
rorb
lea
mov
and
test
xor
sbb
mov
out
inc
jle
lcall
xlat
xor
mov
inc
cmpsb
aaa
loopne
dec
scas
movsb
data16
mov
fdivr
arpl
sbb
jno
xor
pop
xchg
push
cld
cmp
insb
lret
insb
aaa
bt
xchg
or
or
mov
add
cs
rcll
pop
pop
pop
mov
and
cmpsl
xchg
push
add
jl
je
add
jo
jne
pop
loopne
cs
ret
xor
fstl
pusha
jg
out
in
movsl
pop
fs
mov
rcll
xor
or
jecxz
clc
push
clc
loop
push
insb
aaa
loope
imul
into
jge
hlt
hlt
xchg
int3
aad
and
iret
mov
pop
lods
jno
push
xor
lods
push
pushl
inc
mov
leave
jecxz
mov
cmp
adc
xor
xchg
mov
xchg
pop
push
movsl
mov
ss
je
into
xor
sar
add
and
adc
xchg
fists
mov
jecxz
loop
pop
aaa
cmpsl
xor
sbb
scas
fidivrl
cmp
je
rorl
cmp
xlat
pop
imul
inc
jle
pop
mov
lock
mov
fwait
mov
test
repz
and
loop
outsl
push
mov
inc
sarb
popf
xchg
fdivrs
sub
das
adc
lcall
in
mov
sbb
stc
test
subl
or
push
mov
xchg
stos
sbb
pop
sti
pop
sub
jge
xchg
mov
jo
push
dec
data16
dec
shrl
hlt
mov
xchg
add
mov
imul
pop
or
repnz
imul
pop
and
mov
pop
dec
jmp
jb
and
cs
xchg
rol
push
cmc
test
test
adc
xlat
xor
cmpsl
add
jle
pop
aas
jl
xor
push
ljmp
xor
jns
cmc
jbe
int3
pushf
or
mov
xor
dec
xchg
lahf
push
insl
lock
into
mov
into
fsubrl
jno
fcmovbe
xchg
sahf
stc
cwtl
icebp
xchg
jbe
mov
lret
sbb
test
addl
mov
sahf
js
mov
mov
das
inc
push
pop
lock
pop
addr16
fidivl
or
pop
mov
push
dec
adc
ficompl
add
repz
das
pusha
xchg
jno
or
lea
sahf
jb
fwait
out
mov
je
out
out
fs
ljmp
roll
pushf
imul
stos
xchg
psubw
pop
imul
pop
adc
or
jle
dec
sbb
and
arpl
or
add
lods
lds
pop
lcall
sub
sti
lods
xor
xchg
xchg
es
jno
fcomps
push
xor
push
scas
pop
and
sbb
mov
sub
pop
aas
mov
into
andl
bound
or
lcall
sbb
into
jne
ret
ret
sub
inc
stc
mov
arpl
mov
jae
jge
movsb
scas
roll
in
js
ds
add
adc
mov
cmp
out
push
push
adc
cmc
xor
xchg
inc
shrl
cmp
aad
and
sbb
js
add
xchg
pop
int
test
pop
cli
fists
pop
sub
xor
frstor
lret
aam
xlat
jecxz
repz
mov
inc
pop
ffreep
push
pusha
pop
push
repnz
push
or
push
pop
mov
mov
fimuls
or
stc
jg,pn
aaa
adc
or
push
xchg
lcall
fadds
test
decl
inc
cmpsb
mov
pop
mov
mov
adc
xlat
push
inc
and
cmp
sub
mov
outsl
inc
pushf
push
cmpsb
dec
inc
test
pop
sub
dec
sub
pop
fidivl
adc
mov
push
lds
xor
fstpl
cli
inc
jg
loop
or
mov
cmp
adc
pop
out
mov
aas
and
push
jle
or
mov
leave
push
cmp
leave
roll
mov
lods
fbstp
and
push
and
ret
scas
popa
jg
les
adc
in
imul
push
aas
pop
divb
xor
std
fsts
cmp
std
dec
add
mov
push
xor
jg
sub
rcll
cmp
popa
popf
leave
cli
out
cwtl
addr16
mov
add
es
push
mov
adc
fcomp
mov
mov
jg
and
mov
dec
adc
roll
shlb
outsl
fistl
sub
mov
icebp
mov
ds
push
subb
dec
dec
pop
pop
das
jno
gs
movsl
scas
sub
and
xchg
insb
dec
lret
push
pusha
in
ja
nop
sbb
mov
jb
add
test
scas
mov
xchg
bound
jae
es
std
dec
xor
xchg
nop
insb
addl
mov
xchg
call
in
or
cltd
xchg
lcall
fisubs
in
and
mov
xor
mov
out
int
sbb
dec
orl
iret
sub
out
adc
in
lret
push
mov
jmp
test
test
jb
dec
mov
push
mov
jl
dec
cmp
mov
xor
or
lahf
out
test
cmp
sbb
add
icebp
pushf
jae
or
jecxz
bound
xor
aam
and
ljmp
std
icebp
sub
push
clc
ret
ljmp
dec
push
sub
adc
jns
mov
pop
jne
loope
push
adc
cmpsl
testl
jg
cmpb
cltd
add
shrb
sti
mov
jecxz
pop
pop
xchg
adc
fmull
ds
std
jne
or
mov
add
push
adc
push
adc
leave
fcoms
jp
mov
jae
push
test
add
and
adc
push
mov
jo
out
cmp
push
add
loop
addr16
popa
add
xchg
mov
inc
fisubrl
repnz
mov
push
out
or
sub
mov
frstor
lret
cmpsl
bound
jg
mov
inc
sub
jae
mov
clc
mov
fistpl
mov
dec
xchg
dec
lods
pop
push
popf
repnz
xor
cmp
stos
mov
dec
aad
push
or
push
fmulp
and
push
repz
ret
and
xor
aam
xor
inc
sbb
jle
outsl
jmp
mov
push
cmp
insl
out
test
push
out
mov
imul
addr16
add
shrb
iret
aad
sub
add
fs
jne
pop
negl
xor
lcall
daa
orb
shrl
push
sub
dec
aam
ret
loope
pushf
dec
lret
push
fcomps
sub
inc
inc
xor
ds
enter
scas
adc
fistpl
pop
jnp,pt
jge
aaa
xchg
in
scas
inc
dec
push
xor
push
fs
add
add
sub
mov
shl
jo
or
push
or
push
xchg
sub
cmp
cmp
jae
hlt
lea
das
xor
pushf
nop
insb
sbb
insl
sbb
mov
stos
rolb
jle
mov
divb
aaa
adc
sbbl
dec
test
dec
cmc
cmc
lahf
push
jecxz
fcmovnb
in
lods
or
inc
aad
out
pusha
outsb
pop
dec
xchg
or
and
mov
mov
cwtl
imulb
lcall
sbb
imul
jmp
pop
pop
pop
cmp
cmp
and
jo
cmpsl
mov
ret
movsl
adc
cld
inc
imulb
xchg
push
dec
jns
push
ret
jge
addl
and
adc
aas
sbb
rol
cmc
ljmp
jnp
inc
mov
jno
inc
sar
mov
test
in
xchg
inc
xchg
adc
daa
sbb
movsb
in
rclb
or
push
xchg
push
jnp
xor
dec
insb
xchg
ret
enter
aad
or
jno
push
mov
inc
lds
lds
mov
or
fnstcw
loope
pop
mov
sub
movsb
imul
fsubrs
shrl
ret
fldln2
out
xchg
pop
and
loopne
out
sbbb
addb
mov
inc
pop
fwait
scas
or
mov
mov
nop
test
push
mov
int
adc
dec
hlt
fsubr
push
ds
push
bound
cmp
dec
mov
inc
outsb
test
mov
xorb
pop
ret
imul
xchg
sarl
cli
fstpl
mov
js
sbb
fsubr
test
enter
inc
ja
dec
xorb
pop
xor
test
mov
fcompl
jb
pushf
and
xchg
jle
nop
arpl
shlb
xchg
push
mov
dec
dec
psubsb
rorb
mov
scas
sub
adc
dec
mov
nop
rcr
leave
adc
repz
mov
sahf
mov
jno
div
leave
adc
rcll
xor
repz
call
pop
add
daa
movsl
leave
shrb
jae
mull
sub
aas
popa
xchg
jns
insb
jno
or
rolb
adc
cmp
or
daa
int
adcl
xchg
cmc
dec
jb
push
pop
out
jbe
xchg
mov
sub
insb
pop
mov
pop
shll
dec
mov
aaa
nop
xchg
pop
ljmp
xor
dec
xchg
sub
arpl
jb
add
stos
test
jl
jno
jbe
xchg
insl
jl
push
mov
push
insb
je
pop
test
sbb
vmovdqu
test
test
adc
arpl
mov
mov
xor
push
loop
push
sbb
sub
mov
xchg
sbb
sbb
fdivrl
cltd
negb
push
and
sub
mov
fisubl
lret
xor
pop
shlb
es
mov
xor
cwtl
rol
mov
test
xchg
into
sbbl
test
test
out
popa
adc
inc
add
xchg
mov
sbb
lret
push
dec
mov
and
mov
add
xor
clc
or
out
xchg
dec
repz
addr16
inc
ja
jb
out
fwait
jb
repnz
repz
jg
js
jle
daa
xor
xor
jo
call
in
pusha
xor
aas
test
mov
std
adc
adc
pushf
and
in
mov
ss
mov
add
ja
fnstsw
cmp
xor
add
adc
push
dec
cmp
mov
mov
mov
fsts
notl
pop
enter
dec
test
daa
cmpsb
dec
inc
add
add
adc
push
adc
ret
ficoml
int
test
iret
fwait
das
cmp
mov
pop
sub
sar
idivl
jno
pop
jg
dec
stos
push
pop
pop
jmp
xchg
out
dec
jae
xchg
pushf
shll
mov
dec
js
ficoms
pop
xor
jge
rcl
aas
icebp
ret
leave
out
push
out
xor
xchg
jno
rcrl
dec
ficoml
out
sbb
int3
outsl
addl
in
push
pop
xlat
ds
xor
shll
push
testb
shlb
jecxz
dec
jns
sub
adc
loope
dec
stos
imul
mov
into
lahf
pushf
dec
or
jge
fildl
negl
jb
int
jbe
in
clc
aas
cli
push
outsb
sbb
inc
ror
mov
push
into
shr
xor
pop
call
cmp
insb
jb
jb
mov
mov
roll
and
and
imull
bnd
cmp
mov
daa
in
cmp
lret
cld
pop
mov
cmpsb
loopne
popl
or
scas
shll
stc
cli
iret
imul
mov
adc
neg
outsb
sub
int
or
mov
xchg
inc
inc
jmp
and
out
lret
in
lret
xor
arpl
mov
arpl
ret
inc
push
movsb
sahf
or
push
insl
es
and
iret
out
xchg
popf
cmpsb
cmc
dec
sub
dec
dec
xchg
sbb
imul
fidivrl
fisttps
xchg
xor
xchg
cli
or
or
sbb
lcall
sub
xor
jg
sbb
adc
sub
addr16
mov
repz
or
rcl
dec
mov
adc
sub
xor
adc
shll
and
jo
cmp
adc
mov
sbbl
loopne
imul
mull
xlat
orl
jg
and
rorl
js,pt
xor
sbb
xor
pop
lds
popf
call
int3
bound
test
mov
ja
fnsave
data16
fcoms
mov
andb
lahf
roll
adc
mov
inc
leave
fidivrl
roll
dec
or
or
sti
push
mov
fmuls
cmp
xchg
pop
pop
mov
sub
xchg
pop
call
inc
out
andl
gs
loopne
mov
rorb
ret
roll
sbb
imull
imul
mov
outsb
lcall
aam
and
iret
mov
push
cli
stos
jmp
jbe
cltd
arpl
xor
inc
ret
mov
push
outsl
and
and
aad
xor
ds
jg
cmp
pushf
mov
xor
sbbb
push
jle
ficoms
cltd
ljmp
dec
repz
mov
jno
iret
into
add
pop
stos
push
dec
adc
pop
xchg
mov
imul
inc
push
lret
pop
and
popa
leave
das
mov
repz
jp
mov
arpl
cmpsb
adc
mov
aaa
lock
rclb
frstor
mov
add
cltd
aam
adc
testl
out
icebp
jp
dec
xchg
pop
int3
test
into
push
loopne
pop
pop
xor
push
mov
mov
add
in
push
call
jmp
aam
out
sti
fnstenv
lds
gs
out
inc
imul
dec
sbb
and
das
lock
push
adc
arpl
cwtl
nop
iret
add
mov
add
fcoml
cmp
sbb
ljmp
stc
xchg
inc
pop
jl
jg
cmc
push
test
frstor
xchg
clc
int3
sub
gs
cmp
jge
xor
in
iret
mov
stc
cs
or
sub
inc
push
push
add
jl
push
inc
mov
pushf
inc
push
and
adc
xchg
nop
roll
stos
ss
clc
dec
pop
mov
xchg
and
fs
jmp
into
dec
in
push
ss
bound
jge
mov
mov
and
add
fisubl
imul
push
inc
lret
sbb
sub
xchg
dec
xor
push
sahf
ds
pop
jg
into
jecxz
add
xchg
fisubrl
daa
lret
inc
movsb
into
adc
leave
scas
pop
mov
int
outsl
xor
adc
gs
mov
outsl
and
out
out
cwtl
mov
fwait
dec
lea
xor
add
movsb
dec
add
lret
and
loope
into
in
add
ljmp
insb
and
ss
mov
jmp
dec
push
scas
bound
jmp
sub
pop
int
jecxz
xchg
inc
dec
xor
outsl
xor
scas
mov
sbb
shll
test
and
or
or
jl
mov
fst
mov
and
imul
scas
ss
hlt
rcll
imul
or
pushf
jmp
ret
mov
sbb
dec
test
cmp
mov
jae
pop
imul
lcall
inc
pop
fdivl
aam
xor
cltd
dec
pop
ja
sbb
sti
xchg
sub
nop
or
jp
mov
es
pop
scas
scas
cmp
les
outsb
adc
mov
cmp
dec
inc
mov
inc
pop
scas
call
jno
icebp
inc
movsl
and
mov
xchg
mov
mov
lods
jae
jbe
adc
sahf
jns
test
mov
sub
data16
xor
fcomip
mov
lret
outsl
xor
das
loopne
mov
jae
lods
add
sub
pop
mov
jnp
cs
sub
stc
pushf
jne
outsb
adc
popl
ja
dec
test
aam
mov
sbb
scas
xchg
add
es
jno
xor
fidivs
jmp
inc
jmp
inc
push
adc
or
imul
cmpsb
cmp
insl
cmp
mov
test
int3
jp
shlb
and
pop
aam
loopne
ja
icebp
enter
iret
test
lock
out
into
sbb
in
loop
and
mov
or
call
push
scas
push
arpl
jnp
je
sbb
addr16
test
push
adc
fnstsw
lock
pop
stos
sub
sbb
pop
mov
dec
and
xchg
and
repz
mov
test
mov
xor
sbb
add
mov
out
sbb
and
push
inc
mov
push
andb
add
popa
lcall
fcompl
std
push
mov
mov
aaa
sbb
adcl
mov
mov
sbb
nop
jg
les
xchg
into
mov
mov
push
adc
ds
testl
adc
sbb
call
push
xchg
pop
int
dec
mov
push
or
popa
nop
subl
ljmp
xor
mov
movsl
jmp
mov
sub
cli
sbb
jne
lret
push
jne
xor
aaa
xchg
repnz
mov
loope
sbb
xor
int3
jnp
push
inc
or
repnz
adc
mov
pop
push
sub
stc
pop
add
test
das
int3
jae
jp
outsl
insb
test
cli
mov
dec
fmulp
sbb
xchg
in
jno
cmpsb
cmp
shlb
out
sarl
insb
cwtl
hlt
jge
mov
or
xchg
and
mov
mov
adcb
lahf
xchg
xchg
cmp
pop
jno
lahf
scas
mov
cmp
ret
cs
push
jecxz
dec
cmc
in
and
ljmp
insl
xchg
adc
inc
pusha
dec
in
pop
arpl
xorl
movsb
adc
add
sbb
xchg
fisubl
xor
imul
push
test
or
mov
fildll
imul
add
xor
and
pop
stc
movsl
out
pushf
ljmp
jne
lds
mov
data16
mov
xchg
shl
xor
add
jecxz
jg
push
push
pop
mov
and
test
test
icebp
js
xor
mov
pushf
cmp
jae
movsl
popf
mov
clc
jmp
loop
add
sbb
loopne
jns
cmp
std
pop
mov
and
repz
mov
mov
sbbb
or
mov
popa
jnp
pop
fdivs
imul
ret
in
popa
out
mov
movsb
aas
out
mov
inc
mov
rcl
pop
dec
nop
add
sub
inc
xchg
aam
rcrl
filds
out
or
pop
out
sbb
imul
cmpsb
add
push
imul
mov
fdivrl
add
push
adcb
sbb
int
sahf
movsl
andb
shlb
mov
adc
in
cs
popa
divl
pop
mov
xor
and
xor
cltd
imul
mov
pop
mov
mov
dec
inc
repz
setp
mov
addr16
and
push
mov
mov
cltd
inc
push
ds
stc
jne
sahf
lahf
fisubrl
jo
imul
aad
push
and
push
xor
addl
inc
cmp
dec
lods
popf
js
pusha
or
add
cmpsb
js
jg
jae
xlat
test
insb
fdiv
mov
jb
xchg
bnd
data16
push
xor
xor
adc
sti
daa
movsb
add
nop
cltd
push
mov
std
fisttpll
pop
pop
leave
mov
pop
test
out
inc
mov
das
inc
insl
jp
rclb
xchg
lock
outsb
push
rcrl
out
cmp
inc
xchg
sub
add
sahf
sub
jae
cmpsl
xor
in
jp
pusha
dec
inc
orb
and
cmpb
dec
into
cmp
sub
and
xor
add
dec
sub
mov
push
sbbl
es
jne
jbe
sub
xchg
repz
mov
dec
sbb
lea
hlt
mov
cmp
in
shll
and
insb
xor
xor
outsl
out
pop
das
fildl
or
test
cmp
push
and
push
sarl
ret
mov
fsts
or
movsl
add
inc
or
stos
adc
fistpll
arpl
push
cmc
insb
mov
xchg
cltd
ret
cmp
or
out
fdiv
cmp
pop
push
in
add
cmpsl
adc
sbb
shlb
jp
test
pushf
sbb
cs
clc
cmp
adc
and
or
jecxz
xor
mov
inc
push
adc
loop
sub
aas
xor
fisubrl
in
mov
ret
cmp
mull
aad
insb
nop
out
ja
inc
call
insb
fwait
jmp
mov
mov
push
shl
push
test
cli
jo
cmp
les
xchg
pop
sahf
jl
jnp
jb
ds
xchg
cltd
icebp
fucomi
add
xchg
into
adc
ljmp
cmpsb
je
xchg
jb
out
pop
jno
cltd
jb
leave
push
std
das
jmp
xor
push
push
fwait
adc
sbb
sub
xchg
sub
outsl
lods
scas
and
or
adc
dec
ds
cltd
adc
loop
pop
sarb
fs
nop
inc
mov
mov
push
sbb
shlb
jg
repz
jnp
fdivrp
sub
lret
fidivrs
dec
outsl
push
push
dec
in
pop
mov
xchg
adc
movsb
and
sbb
stc
ss
ret
cmpsb
into
out
pushf
adc
sti
fstpt
sub
cmp
push
lods
jbe
mov
and
lds
inc
adc
pop
lds
lret
and
aas
int3
cmp
xchg
cmp
xlat
adc
insb
add
push
int3
inc
fidivl
mov
push
popf
push
inc
or
push
imul
mov
and
sbbb
sti
push
xor
add
push
sub
test
mov
xchg
push
xor
sbb
sub
jge
pop
std
jno
and
icebp
out
mov
mov
outsl
dec
xchg
cmp
fidivl
and
pop
inc
xchg
or
pop
cmc
scas
add
pop
aad
push
push
and
xor
add
and
xlat
outsl
cwtl
cmp
xchg
mov
outsb
adcl
jle
jbe
or
lds
out
repnz
fistl
mov
cmp
inc
imull
xchg
mov
cmp
or
jg
cmc
cmpsb
imull
or
xchg
stos
das
pop
mov
add
or
ret
push
jp
jbe
enter
or
decl
mov
mov
aaa
jb
fldenv
pop
mov
sti
movsb
les
sti
pop
sub
mov
shlb
nop
jle
sub
jmp
or
add
adc
insl
pushf
sub
sbb
daa
hlt
ret
sbb
xlat
mov
movsb
pop
pop
sti
sub
or
jl
inc
sahf
sbb
mov
insl
jne
mov
dec
jmp
in
repnz
xor
rep
arpl
inc
mov
jo
scas
mov
rolb
xchg
xchg
hlt
stc
popf
mov
ret
cwtl
pop
xor
pop
or
cmp
mov
test
pop
das
sbb
std
adc
xor
push
and
iret
fucomip
or
addr16
divl
imul
out
mov
fwait
test
dec
mov
jmp
repnz
scas
xchg
aaa
outsl
mov
jbe
adc
rcll
gs
cmpsb
push
int
aam
sarl
cmpsl
add
div
lods
xor
jae
movsb
dec
dec
xchg
cltd
add
mov
inc
or
enter
and
pop
push
cmp
mov
add
lret
outsl
jae
add
cmp
ss
pusha
mov
mov
or
cmp
int
ficoms
aas
in
fldl2t
mov
andb
jle
jb
movsb
adc
mov
and
out
sub
add
and
and
testl
insl
loop
popf
jl
cmc
lds
into
in
cmpsb
jle
icebp
scas
dec
or
mov
sahf
sub
jo
insl
fwait
gs
pop
fistps
xor
sbb
sub
dec
jge
jns
cmp
ja
out
pop
and
mov
cmp
sbb
into
sbb
cmp
cmp
fdivrs
ds
frstor
xor
xor
scas
enter
xchg
bound
enter
in
and
rcrl
repnz
sub
push
mov
std
mov
loop
dec
xchg
xlat
mov
sub
xchg
jo
xlat
loop
add
test
aad
push
adc
scas
mov
mov
inc
push
ja
cmp
cmp
mov
test
inc
xchg
or
or
data16
xorb
push
sbb
pushf
sahf
mov
lds
popa
ret
mov
out
js
dec
pusha
mov
mov
dec
push
jg
xor
cs
mov
lock
lods
fisttpl
movsl
mov
xchg
mov
xor
aad
inc
dec
mov
mov
mov
or
xchg
imul
ljmp
stc
les
push
inc
and
sub
pop
add
lds
insl
cmp
push
hlt
adc
adc
stos
dec
test
jb
stc
add
divl
std
xchg
mov
jo
push
fucomip
sbb
pop
mov
jg
in
cld
mov
movsb
mov
fisttpl
scas
push
fs
fld1
cmp
sub
jecxz
add
dec
ja
fs
inc
mov
jge
addr16
in
xchg
inc
shll
dec
mov
cmp
jp
cmp
or
fildl
push
std
dec
repnz
cmp
sub
adc
rcl
push
pop
dec
jo
pop
mov
int
jp
and
push
lcall
lods
xor
ja
push
icebp
jecxz
push
add
jbe
xor
outsb
popf
popf
popa
fsubrs
movsl
pop
push
test
shlb
mov
dec
cld
and
xor
mov
sub
aas
and
int3
pop
cltd
into
jmp
cltd
dec
fisubrl
cmp
lahf
out
das
fstp
arpl
test
jg
popa
mov
pop
adc
jle
rcrb
addr16
mov
sbb
stos
in
in
jne
xor
dec
ret
jmp
xchg
inc
cmpl
pop
hlt
inc
cmpsl
inc
into
or
pop
cmp
xchg
stc
xchg
es
sbb
fidivrl
pop
sub
dec
xchg
movsl
outsl
ljmp
mov
es
xor
js
in
insb
pop
je
sbb
pop
jmp
icebp
cmp
test
add
pop
mov
adc
adc
push
pop
or
xchg
xchg
out
mov
fiaddl
dec
clc
jecxz
arpl
xor
pop
ss
stc
push
int3
jnp
cld
push
lret
mov
lret
inc
popf
adc
loopne
cld
jmp
inc
lds
lret
into
pop
movl
decl
xchg
jl
addr16
push
cmpl
fs
pop
pop
sub
sbb
nop
fcmovu
popf
jecxz
add
push
sahf
mov
mov
xchg
aas
sub
push
cmp
outsl
lods
jmp
push
pop
xchg
scas
xor
push
ficoms
arpl
icebp
cli
adc
dec
repz
push
data16
into
pop
lods
mov
dec
inc
jae
in
fdivrp
movsb
test
jecxz
sbb
mov
pusha
fisubrs
inc
out
xor
fcmovnbe
and
ret
and
inc
dec
or
mov
dec
cs
les
lock
and
xchg
cmp
lea
and
pop
or
xorl
popf
sahf
fsub
cmp
pop
fldcw
fwait
mov
xor
mov
dec
sbbb
add
and
xchg
rep
sbb
cmpsb
mov
data16
fucomip
mov
xor
sahf
jnp
pusha
mov
inc
inc
ret
out
sbb
adc
push
shll
outsb
into
and
inc
cs
push
jb
divl
dec
scas
cmp
loop
adc
enter
mov
fiadds
cld
jle
mov
jle
lret
mov
loopne
call
lods
cmp
imul
in
stos
stos
addb
popf
adc
add
cs
movsb
iret
clc
jbe
jnp
adc
sbb
call
popf
aaa
inc
scas
adc
push
repz
dec
jmp
adc
aaa
cli
mov
cld
or
fstl
xor
nop
pop
cmpsb
bound
push
sub
imul
mov
outsl
and
sbb
psrlq
test
lret
outsl
lahf
shll
arpl
pop
cwtl
cmc
push
dec
mov
xchg
inc
lret
mov
jp
dec
inc
filds
lcall
icebp
pop
xchg
ss
push
insl
mov
pushf
push
jmp
cmpsb
pushf
movsb
cli
cmp
inc
ljmp
cmp
lcall
js
inc
mov
dec
lods
in
movsl
cs
mov
mov
sub
cld
or
shr
lret
outsb
dec
push
mov
sahf
push
enter
sub
adc
es
ja
inc
cmp
ret
pop
jbe
mov
in
pop
fst
cmp
pop
dec
and
scas
sub
ret
sbb
jnp
dec
loop
or
push
xchg
xor
lods
mov
xor
xchg
pop
clc
ljmp
testb
js
pusha
into
mov
les
cmp
pop
neg
lods
leave
fsubl
sbbl
fmull
xchg
push
mov
popa
cmp
sbb
jns
outsb
push
pushl
jp
add
daa
shlb
test
out
xchg
cmp
cmp
inc
cmp
pushf
stos
adcl
mov
cmc
adc
outsb
dec
stos
mov
xor
stos
cmp
jecxz
nop
or
arpl
cwtl
lods
xchg
push
cwtl
mov
insl
es
into
xchg
ret
push
xchg
movsb
push
movsb
sbb
ret
mov
mov
adc
xchg
cmc
js
or
stc
in
subb
shll
sbb
cmp
mov
jl
int
adc
xchg
lea
fldcw
orl
adc
fcoml
inc
shlb
mov
push
xchg
aad
xchg
shrb
lcall
lret
cwtl
inc
rolb
outsb
jb
pushf
pop
repnz
jle
jge
dec
in
insl
test
fcmovnb
pop
push
inc
cld
das
je
mov
or
cmp
mov
lods
or
dec
gs
xchg
xor
rcll
in
hlt
adc
mov
cmp
sub
and
bnd
or
pushf
xor
and
pop
test
movl
daa
adc
push
out
dec
aad
aas
xchg
and
cmp
pushf
mov
dec
int3
cltd
mov
in
mov
inc
mov
xor
inc
imul
dec
notb
in
int
jle
nop
loope
movb
and
test
incb
jb
out
lret
inc
ds
mov
lret
xchg
push
mov
mov
jae
les
and
or
pop
jl
xor
outsb
add
data16
sahf
or
add
add
pop
repnz
dec
mov
shrb
lahf
xchg
and
lcall
xchg
cmp
and
lods
shrb
imul
ss
cltd
scas
shl
sub
js
frstor
out
jp
into
jmp
fdiv
in
cmpsb
push
in
push
jnp
aam
and
sub
into
into
cli
cmc
ljmp
shrl
in
push
gs
adc
sub
out
sub
icebp
ret
dec
sub
push
insl
lret
or
and
movl
and
bound
int3
aas
repz
fmuls
lret
adc
sbb
cmp
cmp
repz
push
outsl
clc
out
popa
fwait
inc
imul
add
inc
fwait
cmp
icebp
mov
repz
dec
adc
mov
leave
push
pop
mov
rol
pop
hlt
cmpl
dec
adc
cmp
mov
btr
mov
test
scas
inc
xor
mov
insb
lods
lods
jnp
push
mov
arpl
sbb
loop
mov
ret
repz
scas
jbe
das
cltd
xlat
fmuls
adc
sbb
mov
xor
jbe
mov
and
pushf
add
les
and
inc
xchg
lods
pop
mov
jne
and
les
xchg
dec
aad
pop
outsb
or
add
je
mov
inc
test
xor
adc
push
cmpsl
mov
and
rcrl
push
inc
mov
xchg
into
pop
jno
repz
inc
enter
pop
pop
movsl
mov
lods
fimull
lea
leave
imul
shll
in
stos
push
test
jmp
insl
data16
mov
fnstenv
shrb
add
ret
sub
jg
push
push
xor
sub
in
add
fwait
icebp
pop
push
xor
out
imul
sbb
xchg
das
ja
fs
xor
das
inc
cltd
pop
xchg
push
jns
push
pop
xorb
push
push
xchg
push
sbb
inc
xor
inc
inc
mov
sub
insb
outsl
sti
adcl
fistpll
sub
movsb
repz
mov
or
fwait
mov
xchg
cmp
sbb
test
push
out
pushf
pop
incl
movsb
ljmp
jno
mov
test
aas
mov
pop
das
and
cmc
mov
mov
sti
in
mov
add
cwtl
lods
mov
nop
jecxz
jp
adc
mov
leave
outsb
ljmp
mov
idiv
dec
addr16
cmp
or
or
pop
movhlps
add
outsl
sbb
shll
repz
mov
inc
xchg
pop
cmp
loop
arpl
stc
fcomps
cwtl
add
xchg
add
and
cwtl
sub
xchg
psrlq
xchg
mov
sti
xchg
pop
dec
addl
std
cmp
xor
lahf
jmp
cmpsb
movsl
add
inc
sub
and
cmp
jecxz
xchg
jne
gs
cltd
or
test
lods
sub
mov
cmp
hlt
sub
sub
cld
xchg
mov
je
sbb
loope
repz
xchg
mov
pop
xchg
inc
insl
arpl
imul
or
mov
popf
xchg
arpl
js
dec
scas
popa
or
mov
outsb
lret
cmp
xchg
mov
call
loope
aaa
dec
fcom
in
mov
add
and
fdivl
les
cmp
imul
jb
es
dec
mov
mov
das
js
jmp
ljmp
inc
sahf
push
push
sub
mov
and
adc
or
ds
pop
mov
sbb
mov
pop
loopne
mov
je
lock
outsl
into
imul
orl
lods
daa
and
ret
outsb
jne
in
data16
fs
cmp
hlt
test
jge
mov
lock
out
xor
dec
adc
leave
pop
pop
sub
add
outsl
rolb
sbb
rcl
cmp
shl
popw
jnp
xchg
mov
outsl
jl
push
sbb
fsubl
aad
xchg
insl
xchg
pop
mov
mov
cltd
or
jg
cwtl
notl
cli
in
add
dec
push
and
xlat
mov
cltd
sarl
imul
mov
add
out
ret
icebp
in
dec
inc
aad
loop
inc
enter
cwtl
call
jle
hlt
test
mov
xchg
fiaddl
push
inc
cmp
sbb
mov
rcr
leave
jle
mov
in
mov
out
enter
addr16
dec
cld
mov
clc
jb
aaa
movsb
fwait
lock
call
fsts
dec
inc
nop
push
add
loopne
mov
mov
mov
es
cmp
xchg
sbb
cmp
add
adc
enter
in
jecxz
sub
and
jnp
dec
rclb
negb
sub
mov
dec
jecxz
dec
or
mov
test
mov
stc
nop
loop
hlt
imul
push
pop
dec
jae
call
xlat
adc
add
sub
repnz
in
push
hlt
dec
inc
push
jo
mov
pop
sbb
cmp
or
retw
ret
test
sbb
clc
push
cmpsl
stos
pushf
adc
movsb
adc
stos
clc
push
in
fldenv
call
xlat
xchg
hlt
sarl
push
fisubl
fxch
mov
stos
mov
cld
outsb
mov
xlat
test
aaa
adc
pop
cli
ds
inc
inc
js
mov
mov
xor
arpl
lret
pop
push
xchg
jl
pop
jno
xor
mov
clc
fdivr
jns
sub
je
cmp
inc
ret
jno
sahf
sti
cmp
mov
adc
and
xchg
outsl
xor
mov
and
push
aaa
jno
js
into
mov
lods
mov
fldt
rcrl
mov
push
scas
mov
fdivrs
lds
or
pop
and
mov
cmp
sbb
sbb
mov
mov
lods
mov
mov
fists
test
lock
mov
xchg
dec
lock
mov
insb
mov
sbb
ja
xchg
les
or
mulb
cltd
mov
leave
nop
jg
push
mov
add
xor
je
mov
lods
scas
jmp
add
call
popf
jp
aaa
pop
popa
pop
cwtl
sbb
and
push
sti
icebp
inc
pop
psubusw
jg
xor
in
pop
adc
stc
shlb
sbb
loope
loope
or
mov
lcall
out
call
lcall
xchg
mov
sub
mov
sarb
pop
adc
pushf
jb
cmp
lret
mov
fistpl
inc
stos
sub
lds
pop
mov
pop
push
aam
add
fisttps
mov
xchg
ror
cmp
xor
add
testb
inc
test
test
into
mov
es
lret
jge
divb
push
jmp
scas
mov
push
mov
imulb
cmp
mov
cmpsl
pop
iret
iret
xor
and
adc
nop
push
or
jne
fwait
adc
xor
inc
sub
lret
push
std
mov
movsl
icebp
inc
inc
cmp
and
stc
and
sub
xchg
push
adc
ret
or
sub
andl
rolb
inc
fwait
into
in
add
cmp
ret
cmpsb
cwtl
ror
dec
push
xor
add
add
out
mov
bound
push
pslld
sbb
dec
mov
test
and
bnd
xlat
arpl
popf
jnp
add
cmp
outsb
jne
sbb
test
fs
and
mov
popf
mov
outsb
and
xor
mov
lret
lahf
adc
dec
jb
add
dec
xchg
aam
mov
cmp
sarl
fisubl
int
orl
lret
lret
xchg
int
push
rorb
aad
cli
aam
sub
outsl
xchg
inc
xor
iret
cmp
je
lea
int
ficomps
int
rclb
push
mov
sub
shr
push
sbb
int
add
lcall
jns
ret
sbb
push
bound
push
loopne
pusha
fdivrs
cmp
mov
sub
bound
cltd
xchg
mov
js
lret
fs
inc
loopne
fwait
sbb
or
lea
aam
push
jns
or
cli
push
jb
pop
jecxz
jl
xchg
std
or
in
mov
xlat
fstpl
dec
das
in
or
jo
mov
ljmp
fdiv
rcll
in
test
add
sub
in
outsb
push
sbb
jecxz
mov
jp
les
xchg
mov
test
and
pop
add
std
pusha
popa
mov
pop
push
ljmp
push
sub
add
and
cld
out
popa
cld
stc
pop
dec
add
xlat
js
cltd
inc
or
ret
jnp
pop
xchg
jge
add
loope
cmp
cld
sbb
adc
push
adc
jmp
and
inc
hlt
dec
sti
mov
and
sub
mov
popf
orb
mov
adc
adc
push
inc
mov
nop
sub
cmp
outsb
or
scas
xchg
test
insl
cli
sbb
lock
mov
test
jb
test
lret
pop
push
jge
sbb
jge
pushf
rcl
or
jae
mov
xchg
pop
sti
ret
inc
shlb
mov
xchg
pop
xor
mov
lock
or
jmp
lret
clc
mov
stc
inc
mov
push
movsl
xor
sarb
xchg
loopne
adcb
sbb
lcall
mov
add
and
lods
insb
sub
xor
sbb
mov
xor
pop
push
or
add
dec
xor
ret
push
loope
ret
popa
pop
sbb
xor
sub
or
pop
xchg
or
adc
pop
jl
int3
mov
xchg
movsl
subl
add
fisttpll
add
push
call
lods
in
dec
and
arpl
jae
outsb
lret
pusha
mov
jno
subb
lods
mov
jae
add
sub
jnp
dec
in
sub
and
repnz
add
pop
mov
push
or
jae
dec
and
lock
add
cwtl
push
loop
push
jle
xor
pop
mov
cmp
xor
fwait
int
cwtl
sbb
sahf
lods
aas
or
jns
popa
cwtl
sub
push
lret
lahf
fmull
sti
mov
je
mov
ss
repnz
inc
dec
stos
sahf
out
clc
xor
xchg
insb
inc
xor
adc
inc
mov
mov
ud1
data16
mov
fsubp
pop
push
and
push
mov
push
adc
jp
sub
shrl
lods
cmp
scas
rcll
fistl
pop
stc
jbe
leave
divl
mov
out
in
jbe
wrmsr
xor
push
gs
in
push
je
pop
test
push
mov
cmp
mov
dec
loopne
xor
gs
insb
gs
dec
fldl
ds
push
and
fpatan
loop
jge
daa
or
and
insb
push
cmp
fcompl
int
pushf
mov
mov
and
and
sbb
testl
xchg
mov
push
inc
popf
fisubrl
push
and
jle
lods
sbb
xor
sbb
add
pop
add
mov
lods
jae
jl
dec
or
leave
imul
push
cld
push
fnsave
sub
xchg
mov
mov
lea
or
xor
jmp
jmp
push
cmp
add
pop
mov
cltd
cmp
push
pop
sbb
adc
sbb
mov
dec
mov
cmp
arpl
test
or
jb
pop
adc
ja
imul
dec
fcmovnbe
arpl
insl
lret
xor
xchg
push
lret
aam
in
inc
sub
insb
sub
mov
fldcw
cmc
fwait
pop
mov
js
pop
mov
aas
das
jns
ss
mov
mov
and
icebp
cli
clc
test
int3
sbb
stos
push
std
nop
daa
scas
jno
cwtl
pop
pushf
sub
shl
adc
mov
lods
clc
add
cmp
jmp
mov
mov
add
cmp
sub
sbb
jno
jb
repz
imul
jle
lods
xchg
mov
fistpl
jbe
inc
jbe
sub
inc
xor
lods
sbb
dec
jno
cs
or
inc
adc
test
test
jle
jge
sub
adcb
cmp
adc
xor
out
pop
ljmp
call
and
pop
or
std
adc
and
push
dec
xor
ficoms
push
leave
xlat
mov
mov
pop
add
mov
adc
sbb
push
sbb
sub
jecxz
mov
dec
mov
mov
mov
pop
call
loopne
xor
adc
jmp
aas
mov
outsl
inc
in
das
jb
mov
mov
cwtl
daa
shr
out
les
pop
or
adc
lahf
push
lret
lahf
aas
arpl
stc
inc
ss
xchg
pushl
xchg
cmp
cmc
xchg
sub
cltd
adc
jb
mov
and
pop
test
in
dec
mov
xor
adc
add
xchg
sub
sbb
gs
pop
hlt
lods
shlb
out
loope
xchg
scas
ss
dec
imul
test
jbe
pushf
jb
in
jg
mov
in
xorl
pop
cmp
loope
and
dec
jmp
xchg
xor
arpl
sub
mov
cs
adc
xor
dec
ss
inc
sub
int
out
ja
ja
movl
out
lock
jg
push
xchg
fwait
les
jno
movsb
mov
inc
lcall
mov
adc
lret
cld
jo
xorl
xchg
cli
in
int3
push
pop
cmpsl
stos
js
hlt
stos
xchg
jl
cltd
je
pop
loop
mov
stc
xor
rcrb
or
and
add
pop
adc
cmp
xchg
jecxz
jg
xor
cwtl
aaa
mov
je
je
pop
jge
jmp
mov
adc
and
mov
dec
push
mov
adc
lret
imul
lds
inc
pop
out
push
mov
into
movsl
sahf
add
test
in
inc
adcl
pop
push
adc
roll
jmp
out
and
mov
gs
imul
mov
and
mov
xor
jnp
icebp
sub
cli
xor
xchg
inc
iret
or
pop
in
cmp
and
iret
xlat
outsl
and
push
mov
xchg
cltd
lds
lahf
mov
mov
mov
nop
jl
fcoms
loop
in
adc
sbb
insb
aam
mov
inc
jo
lods
cmp
mov
dec
into
push
popa
pop
or
mov
roll
js
push
jge
daa
pop
xchg
push
cmc
and
lods
les
jnp
cltd
cmpsl
jo
test
push
or
xchg
stos
add
push
inc
xor
mov
jg
insl
sarb
lods
adc
adc
adc
ljmp
cmc
push
cmp
and
imul
push
sbb
popf
inc
outsb
jo
mov
jnp
adc
xor
daa
roll
lahf
movsb
adc
jg
mov
push
push
xchg
sbb
add
fcomi
jmp
push
adc
dec
imulb
mov
or
xor
or
jecxz
cmc
xchg
mov
fwait
jecxz
push
add
sbb
stos
add
mov
int
mov
pop
loop
loop
loope
pop
cmp
lods
fs
fs
mov
xor
and
loope
cmpsl
sbb
add
ret
add
mov
jae
movsl
mov
cmp
sub
or
hlt
popa
jg
divl
fwait
stc
push
repnz
icebp
sub
xor
out
and
dec
mov
inc
call
add
repnz
mov
pop
xor
enter
pinsrw
fistpl
xchg
push
scas
adc
cmp
inc
xor
leave
setnp
cs
xchg
jle
dec
and
pushl
into
test
les
xchg
and
loop
xlat
jle
es
mov
in
aad
lods
mov
imul
xor
in
adc
mov
inc
scas
and
cli
push
outsb
stos
popf
jl
mov
push
xlat
and
mov
pop
lahf
cmp
nop
aam
or
sub
cmpsb
mov
cmpb
out
inc
fidivrl
jge
or
popa
fwait
and
fdivl
sti
or
and
xlat
gs
out
pop
cld
ds
int3
jne
dec
subb
pop
test
das
mull
sub
and
push
mov
cpuid
adc
bound
jnp
gs
movsb
add
shrb
mov
es
push
aad
mov
pop
fxtract
sbb
mov
fisubrl
inc
clc
stos
push
cmpsl
sub
mov
mov
out
insl
les
mov
xchg
pop
and
rorl
fisubrl
cmp
pop
pop
adc
or
popf
and
fwait
nop
jp
or
cmp
or
fmull
out
test
and
imul
test
jl
sub
push
cltd
sub
lcall
push
test
mov
and
sbb
jle
adcl
xchg
xor
pop
test
pop
ja
fs
stc
mov
inc
xlat
xor
inc
xor
cmp
fwait
sbb
insl
aam
andl
and
cwtl
cmpsb
adc
adc
mov
xchg
and
inc
pop
push
mov
push
mov
adc
stos
iret
data16
push
mov
mov
push
sbbl
dec
mov
cmp
mov
or
lods
stc
mull
in
jns
mov
pop
xchg
add
dec
and
iret
fs
mov
aad
mov
stc
mov
pop
int
sub
mov
pop
out
lret
push
mov
xchg
push
pop
jge
jbe
std
jno
andl
popf
adc
push
xchg
add
aad
mov
stos
pop
and
std
lahf
adc
pop
es
test
push
xchg
inc
gs
stos
sbb
fwait
xchg
mov
xchg
mov
jne
cmp
mov
enter
aam
dec
mov
mov
xor
lock
out
xlat
out
xchg
bound
call
mov
jnp
aam
mov
dec
sbb
lods
mov
pop
in
xchg
imul
sti
cmp
lods
cmp
popa
jmp
pop
adc
pop
xchg
mov
mov
sahf
test
or
jns
or
outsl
outsl
lods
or
pop
and
lcall
cmp
cli
and
and
fildll
sub
sub
sub
or
dec
push
fcoml
test
mov
xor
sub
aad
popf
xchg
ds
mov
push
jle
pop
es
mov
inc
pushf
mov
sbb
leave
or
inc
addr16
mov
jae
outsb
addr16
jno
fadds
sub
inc
mov
popf
cmp
lea
ja
sbb
loope
cmpsl
cs
jae
cld
ret
xchg
sbb
filds
and
pop
xor
and
mov
lods
pushf
mov
pop
sbb
sbb
or
aam
xor
adc
and
jl
jbe
xchg
adc
push
sub
sub
dec
cltd
scas
pusha
pop
mov
daa
xchg
xchg
jmp
test
iret
icebp
xor
out
hlt
cmp
in
pusha
scas
push
out
stc
fisubrs
cmp
add
int
sbb
mov
cmpl
xchg
test
es
sbb
mov
loop
lcall
mov
insl
inc
idivb
shrb
push
dec
cmp
jno
cmpsl
mov
cmp
icebp
jno
mov
fimull
dec
sti
sbb
ja
lret
aam
lret
aad
pop
test
sub
xchg
dec
mov
lcall
pop
cmp
jmp
mov
lods
mov
mov
rcrb
andl
mov
rcll
jbe
push
loopne
test
ljmp
sub
dec
jnp
sahf
sbb
mov
mov
sub
loopne
adc
dec
fcom
or
cmp
jmp
push
xchg
pop
shrl
test
xor
sub
sbb
or
shl
and
mov
leave
mov
stc
sti
into
inc
add
add
sbbb
test
xor
or
cmc
jns
pop
sub
sub
dec
in
inc
mov
scas
and
test
pop
test
jle
sub
push
dec
adc
ds
fdivs
mov
push
adc
lds
fiaddl
je
les
imul
pop
jmp
scas
pop
or
incl
sbb
dec
lcall
sbb
fsubs
push
inc
add
out
outsb
mov
xchg
iret
dec
mov
add
mov
hlt
add
or
lea
mov
mov
nop
sahf
xor
pop
mov
or
fisubl
push
shrl
rclb
mov
mov
push
pushf
pop
out
jg
xchg
sub
jo
and
loope
pusha
xor
test
or
pop
add
mov
sub
in
xchg
arpl
scas
xchg
sub
inc
mov
xchg
fstl
inc
data16
dec
xor
fs
insl
mov
mov
dec
jl
icebp
es
int3
sbb
loopne
mov
mov
or
mov
mov
and
xor
inc
adc
fldl
rolb
or
or
pop
sub
out
sub
sbb
into
push
pop
mov
repnz
xchg
xor
fadd
mov
sbb
cmp
fdivl
adc
popa
mov
sbb
test
repz
shr
ss
sub
lret
mov
inc
imul
sub
insb
ret
or
jge
or
std
ja
pop
adc
sbbl
sbb
ret
or
mov
and
dec
ds
and
add
scas
pop
ja
cmpsb
lahf
ds
loope
dec
adc
loopne
ret
pop
or
jmp
dec
in
jbe
sahf
mov
bound
aas
mov
fbld
js
stc
inc
je
aad
push
mov
nop
pop
xchg
ds
stos
inc
fs
fiaddl
mov
out
jle
sbb
movsb
hlt
push
outsl
mov
xor
and
mov
enter
xor
cmp
mov
pop
enter
jcxz
setns
dec
jbe
bound
adc
cmp
xor
outsb
mov
inc
jo
loopne
jb
sub
jb
adc
sarb
jo
int
out
lock
ret
insb
mov
adc
push
imul
das
scas
pusha
and
mov
xor
pop
pop
sub
repnz
repz
repz
adc
xlat
frstor
push
outsl
pop
mov
push
mov
fiadds
dec
jmp
sbbb
rcrb
mov
dec
pop
popa
in
in
push
xor
ret
adc
add
add
mov
push
int3
js
jbe
push
repnz
int3
pop
enter
push
pop
stos
aaa
jl
scas
notb
or
jns
cmp
cwtl
push
or
pop
dec
xchg
lea
cmp
aaa
mov
cmp
jae
in
mov
fwait
mov
stos
push
cmpsl
pop
mov
negb
cs
dec
paddd
xor
call
cwtl
sub
add
scas
scas
lods
sub
xchg
xchg
xor
lcall
mov
pop
lcall
scas
lcall
jp
les
xchg
add
sub
xchg
out
xor
mov
fs
sbb
xlat
lret
inc
and
loop
fcoml
cli
test
or
or
dec
testl
cld
mov
cltd
adc
gs
hlt
jle
aaa
xor
ljmp
mov
adc
popf
mov
pop
ss
fsubr
jnp
lret
fs
adc
mov
int3
jns
xchg
mov
int
cmc
lods
jb
daa
inc
inc
fdivl
mov
cwtl
xlat
imul
mov
mov
loopne
mov
mov
incl
es
ldmxcsr
call
cltd
mov
bound
arpl
ret
sub
push
ss
xor
or
enter
jo
jmp
dec
repnz
dec
xchg
lods
adc
arpl
mov
gs
mov
mov
sub
and
int
or
test
or
lcall
sub
pop
add
inc
jnp
insl
lds
ss
hlt
cld
mov
mov
jmp
mov
cltd
xor
loope
adc
ljmp
out
fiaddl
imul
in
pop
jae
sarb
mov
imul
stos
mov
daa
bound
ret
add
xchg
jnp
scas
or
xchg
cmpb
fs
inc
fistpl
cmp
xchg
iret
ret
or
sbb
or
jb
jge
push
cmp
sbb
cmpsb
rcrl
add
data16
xor
push
andb
add
jnp
movsb
and
sbb
popf
mov
loopne
mov
pop
movaps
xor
movsl
out
add
aam
fisttpl
mov
inc
ds
aas
adc
call
ret
mov
push
cli
sarb
loopne
div
aas
dec
pushf
decl
out
push
add
adc
and
stos
int
test
mov
ja
mov
ret
inc
cli
repnz
std
sub
xor
xchg
repz
inc
mov
gs
adc
mov
push
es
and
add
lea
scas
dec
dec
stc
jmp
enter
pop
fisttpll
adc
movsb
pop
mov
xor
in
adc
cmpsl
cmp
mov
mov
dec
dec
dec
pcmpeqb
shlb
mov
xchg
fcompl
mov
faddl
xor
push
push
lock
clc
pminsw
inc
jecxz
lahf
aad
xor
jge
daa
jp
sbb
mov
je
out
sub
push
sahf
int
rcll
xchg
add
shl
push
xchg
ds
or
fsubr
ja
cmpsl
in
sub
add
xchg
arpl
push
and
xchg
in
xor
lea
ja
adc
in
loop
scas
ja
sub
sub
in
pop
mov
push
loopne
and
pusha
jg
xor
stos
jle
mov
ljmp
lods
mov
out
int
pop
or
jo
loopne
fstpl
push
add
and
adc
iret
mov
sub
mov
sbb
sbb
nop
mov
je
xor
loope
aad
xchg
iret
xor
fdivrp
and
pop
mov
add
inc
loop
jp
loop
jg
inc
sub
popa
push
xchg
dec
fdiv
aaa
dec
test
lret
push
push
jo
sbb
mov
xchg
das
aad
mov
push
sti
test
sbb
and
xor
jns
inc
dec
or
add
shll
out
pusha
andb
dec
dec
ret
cmpsb
icebp
ljmp
decb
outsb
loopne
loop
inc
sub
xor
jo
mov
push
pop
cmp
sub
rcrl
push
mov
test
fistpll
mov
fisubl
lods
mov
xlat
adc
jnp
mov
bound
mov
fcmovbe
addl
sbb
dec
jnp
aas
fs
out
mov
mov
aas
pop
cmp
inc
fnstenv
cmpsl
and
int3
aad
bsr
data16
test
fwait
in
rcll
cmp
ret
cli
ss
pushf
pop
adc
pusha
xchg
sbb
pop
and
sti
mov
sub
nop
frstor
mov
add
cmp
jo
movnti
lret
dec
fidivl
push
xor
dec
or
cmovne
hlt
lods
pop
ja
or
sbb
adc
cmp
loop
jns
int3
add
xchg
inc
in
jo
or
push
sti
xor
aam
fidivrs
inc
pop
sbb
push
xlat
cmpxchg
repz
out
xor
insb
notl
sbb
in
cmp
adc
pop
adc
cmp
xor
add
push
sbb
jno
sbb
cwtl
fwait
cltd
loopne
addl
in
stos
jle
cmc
pop
xchg
hlt
pop
mov
stc
or
in
sbb
cltd
pop
xchg
fs
and
sarl
int3
fnstenv
movsl
popf
jo
jecxz
sbb
jo
jns
pop
stos
outsl
push
xchg
xchg
sbb
outsb
mov
or
cmp
rorb
sarl
movsl
add
add
into
jle
cmp
arpl
pop
out
jle
add
and
cli
cmp
inc
sub
cmp
push
fnstenv
js
aad
scas
loopne
fiaddl
xlat
jo
mov
fstl
jnp
arpl
icebp
jae
inc
push
dec
in
stos
hlt
aad
cmpsb
sbb
outsl
mov
pop
out
xor
add
cmp
jl
outsb
pop
xchg
sbb
addb
into
mov
int
pop
push
add
adc
cmp
push
sbb
cmp
loope
movsb
adc
pop
test
shr
cmc
fcoms
ja
mov
sub
mov
xor
fimuls
mov
jecxz
mov
daa
or
dec
fisubrs
lret
cmpsl
lahf
mov
inc
adc
pusha
jg
jge
popa
or
pop
sbb
je
sbbb
push
and
push
mov
cli
fistl
das
inc
fisttpl
jp
cmp
push
dec
sahf
jmp
fadds
leave
test
or
or
loop
mov
add
xorb
repz
sbb
movsl
stc
sbb
addl
pusha
lods
out
add
in
jns
aaa
sub
mov
lahf
push
cmp
dec
dec
mov
and
pop
push
cmpl
sub
mull
jecxz
sahf
mov
sbb
push
test
xor
push
bound
xchg
sub
cli
mov
xchg
mov
out
enter
clc
push
add
repz
lret
fmul
rcrl
inc
into
repnz
cmc
cwtl
cmp
js
pushf
fdivrl
aam
cmp
or
cld
lods
in
push
imul
fxch
dec
ds
mov
clc
jmp
mov
inc
push
pop
dec
or
mov
pop
jo
add
repnz
fisttps
pop
adc
lret
jb
push
bound
aaa
xor
dec
push
sub
pop
data16
stos
pop
int3
adcl
adc
or
pop
mov
aaa
add
and
daa
insb
and
jbe
call
xor
imul
jge
xlat
in
sub
in
lahf
mov
cmp
lahf
rorl
mov
test
icebp
icebp
mov
call
adc
pop
xchg
sub
fdivl
xchg
pop
sub
lock
dec
scas
dec
dec
jmp
mov
test
dec
punpcklbw
cmpsb
xchg
sti
push
and
lea
xor
jno
ss
adc
insb
mov
jb
clc
pushf
xor
fs
hlt
loope
mov
data16
fdivr
push
adc
and
cmp
add
sbb
xchg
fbstp
mov
mov
int3
popa
lods
jno
cmc
or
mov
loop
mov
sarb
adcb
dec
push
pop
xchg
pop
dec
dec
imul
orb
lahf
fnstsw
adc
mov
ret
pushf
sahf
out
mov
aaa
and
pushf
fcmovnu
and
outsb
movsb
dec
adc
rcrl
mov
lea
adc
bnd
lods
sahf
aaa
cmpsb
out
push
imul
mov
mov
fisubrl
cmc
and
inc
aas
cli
mov
dec
into
cmpsb
bound
mov
pusha
fisubrs
adc
aad
pop
mov
xor
mov
fnstenv
pop
xchg
jl
push
xchg
fiadds
gs
aas
mov
mov
out
fbld
jp
mov
ret
xchg
stos
test
push
in
adc
push
outsb
movl
mov
inc
scas
mov
inc
das
popa
daa
sub
sub
insl
push
adc
adc
arpl
push
out
cltd
pusha
cli
cmp
outsl
test
push
jbe
stc
test
mov
inc
xchg
mov
mov
pop
or
movsl
xor
pop
cmp
or
icebp
pop
sub
outsb
loopne
push
push
jns
js
cli
adc
lahf
sbb
push
dec
pop
stc
fnstsw
adc
cmpsl
je
cmp
scas
call
add
ljmp
lock
mov
aas
or
inc
jno
inc
jne
adc
sub
mov
daa
adc
aaa
mov
push
ljmp
rcll
mov
mov
inc
mov
cs
mov
xor
sbb
ret
fcmovne
sahf
adc
xchg
out
mov
insb
notb
std
fs
push
xchg
outsb
inc
lret
inc
icebp
pop
lods
movb
push
out
dec
adc
jns
mov
sub
push
push
movsb
hlt
mov
jb
enter
push
mov
add
mov
arpl
loopne
adc
lcall
je
pop
push
sbb
or
jno
mov
push
sub
push
stc
int
xor
aas
mov
clc
rcrb
aam
pop
cli
aaa
sub
repnz
fdivp
cmp
mov
pop
cmp
cli
dec
stc
add
out
fwait
arpl
leave
mov
push
sbb
pop
push
fstps
xchg
dec
adc
push
dec
xchg
jbe
push
sbb
test
lret
inc
dec
in
jbe
loopne
cmp
lods
xchg
and
cmc
outsb
dec
mov
outsl
das
sub
test
ds
cmp
cwtl
ret
dec
pop
out
mov
xchg
test
jae
dec
subl
scas
mov
sti
sub
xor
repz
fdivl
xlat
repz
loop
xor
or
loop
rcrl
aad
pusha
orb
xor
cmpsl
cltd
clc
repnz
aaa
pop
push
into
adc
push
jbe
call
mov
dec
jp
je
stos
push
nop
jae
lret
jnp
stos
mov
and
sub
add
lret
mov
shrb
pop
add
repz
push
gs
cmpsb
ret
mov
adc
push
or
or
ret
cmpsl
faddl
cmpsb
jb
mov
leave
enter
push
sbb
lea
sbb
aad
pop
mov
ljmp
or
pop
pop
fdivrl
jg
popa
dec
jno
clc
pop
jge
push
push
cmpb
jmp
add
pushl
push
rol
insl
ret
xchg
arpl
push
test
xchg
subb
dec
or
adc
dec
add
pop
ss
cmp
mov
cmpsb
lret
je
lea
out
insl
cmp
mov
cltd
movsl
xchg
pop
shr
jo
inc
push
xchg
mov
sbb
outsl
xlat
aam
aam
push
scas
movsl
aad
aad
xor
fcomps
jmp
push
and
outsl
push
mov
out
mov
movb
sbb
mov
pop
call
jo
xor
pop
cmc
push
lock
lret
mov
popa
pop
dec
jmp
into
adc
movsb
cmp
push
pop
fisubrl
mov
xchg
xchg
fnstenv
adc
clc
ja
shll
mov
add
push
sub
xlat
jge
int
or
test
xchg
stc
into
das
or
jns
aam
and
shlb
lahf
xchg
sbb
test
cltd
sbb
cmp
sub
fnstsw
push
sub
push
xchg
ljmp
addl
mov
mov
mov
sub
test
test
insb
scas
mov
xchg
push
in
sub
add
fnstenv
ss
adc
mov
push
rcrl
insl
test
xchg
pushf
sub
push
popa
mov
mov
adc
push
push
sbb
aaa
in
inc
rcrb
gs
xchg
decb
leave
dec
push
mov
add
into
sub
lods
mov
inc
xlat
jg
cwtl
jno
fimuls
xchg
fdivl
loope
mov
and
in
or
pushf
push
jmp
clc
mov
aas
xorb
repnz
xor
je
jg
cld
pop
js
push
inc
fmul
push
or
lods
insb
lock
add
push
insb
inc
jp
fwait
daa
fistpl
xor
cmp
dec
hlt
out
pop
rcr
es
pop
pop
and
push
out
push
or
or
pop
jns
das
sbb
das
jb
mov
xor
push
daa
cmpsl
pushf
lea
test
mov
das
aad
push
popa
mov
cld
shll
icebp
lahf
rcrb
hlt
and
adc
and
repz
ljmp
pop
ret
push
push
test
out
dec
inc
or
fs
aam
lea
xchg
pop
dec
mov
leave
xchg
ffree
shrb
pop
and
jp
sub
flds
daa
sbb
divl
loopne
xor
mov
add
or
mov
mov
roll
push
cmp
jp
mov
pop
jg
rol
mov
mov
mov
ja
mov
mov
loop
mov
pop
data16
or
xor
jne
pop
nop
add
incl
mov
or
mov
mov
mov
mov
pushf
jae,pt
adc
mov
mov
pop
das
lret
and
jge
adc
inc
jge
inc
lret
mov
adc
dec
mov
ja
out
fsubr
sbb
jne
mov
outsl
gs
in
fdivrl
jge
bound
ror
sub
lcall
ljmp
or
cmc
jmp
mov
js
cmp
js
pop
shr
inc
scas
andb
shll
loopne
notl
ljmp
push
call
sbb
dec
pop
in
fidivrl
in
jecxz
test
cld
xor
dec
xchg
leave
cwtl
pop
sub
pop
sub
or
aas
shrb
pop
xchg
nop
test
xchg
fnstsw
mov
sarb
sbb
mov
push
mov
call
inc
cmpsb
jo
movsl
gs
rclb
pusha
dec
xor
rorl
mov
jo
dec
push
aaa
dec
and
data16
dec
sahf
add
std
mov
dec
mov
and
clc
pop
sti
mov
sub
mov
aas
and
jne
inc
add
push
adcb
push
xadd
mov
cmp
fisubrl
imul
jecxz
jbe
xchg
jns
in
inc
mov
mov
jne
clc
in
out
fdecstp
lds
test
cwtl
dec
and
mov
bound
mov
jl
push
lret
mov
mov
mov
mov
lahf
stos
adc
sbb
adc
js
mov
pushf
arpl
fidivs
add
leave
pop
xor
imul
sbb
arpl
out
data16
mov
mov
data16
jp
movsb
hlt
jns
lods
lods
popa
sub
insb
sbb
adc
mov
ss
cwtl
pop
pusha
pop
int3
sti
dec
pop
dec
cs
lods
push
cmp
jecxz
daa
lods
into
pop
xchg
rorl
adc
mov
sub
test
pop
and
aaa
pop
cmc
movsb
int3
push
sub
add
jg
mov
mov
mov
mov
push
xchg
lds
movsb
enter
pop
into
stc
mov
sub
fistps
sbb
cmp
fdivrl
ret
sbb
jl
push
cs
add
int3
lahf
out
pop
or
insl
mov
dec
inc
pop
sbb
mov
lcall
outsl
pop
and
mov
outsl
mov
arpl
movsb
pop
sbb
adc
mov
addb
insl
lcall
inc
fistpl
cmpsb
int
je
movsb
fidivs
cmc
pop
adc
rcrl
xchg
leave
and
adc
stos
push
add
adc
into
test
pop
jno
dec
and
jge
add
jae
sbb
jmp
aam
mov
int3
mov
imul
inc
sub
call
cmp
lods
lahf
adc
jmp
fnstenv
cmp
xorb
rol
inc
test
aaa
push
fs
push
cmpsl
lret
cs
mov
incb
cmpl
pop
cmp
or
repnz
push
fdiv
xchg
add
xchg
xchg
push
jg
sub
ja
ja
jb
cld
aas
xchg
cmpsb
push
loop
stc
cs
inc
fwait
idivl
dec
sbb
das
dec
pop
push
jae
ret
decl
roll
into
cld
dec
add
nop
int3
pop
test
and
mov
push
mov
pop
movsb
repz
push
test
jmp
sbb
jl
or
jmp
imul
push
lods
mov
dec
adc
mov
popa
sbb
cmp
and
loop
sbb
mov
and
adc
jns
roll
cmpsl
mov
jmp
adc
xchg
add
or
mov
scas
push
cmp
in
ss
lret
sub
cmc
ds
dec
popf
cmc
ss
mov
mov
clc
or
and
aad
xchg
xor
popf
sbb
shll
imul
xchg
mov
int
xor
fwait
sets
jecxz
lcall
mov
bnd
rcrl
fdivl
push
push
fmuls
jg
rcr
inc
int3
stos
aad
add
stos
shrl
dec
xor
mov
push
cmpsl
fcoml
xchg
sub
sub
mov
mov
shr
mov
pushf
cltd
in
stos
sbb
xchg
jns
or
lods
daa
int
adc
addr16
lret
cmp
cmp
inc
push
pop
aam
lret
pop
movsb
out
jmp
sbb
add
jns
mov
pop
stc
mov
mov
inc
pop
adc
addr16
fistps
pop
pop
test
sbb
hlt
sbb
lcall
imul
sbb
sbb
inc
dec
jno
sub
movsl
fistpl
xor
pop
fists
push
in
mov
pop
popf
in
mov
ljmp
mov
fildl
jg
adcl
or
out
mov
les
repz
movl
sbb
insl
or
push
sbb
cmp
lret
inc
int
dec
cltd
xor
fmul
or
das
push
lahf
jnp
aam
and
aaa
jg
aad
cmpsl
cmp
sub
loop
pop
repz
mulb
stos
mov
sub
movsl
fidivs
add
test
pop
jne
adc
insb
rolb
adc
cmp
aaa
imul
mov
lret
pop
ss
loop
rcrb
int3
adcb
movsb
mov
xor
ljmp
out
out
in
and
shll
sub
push
add
sub
imul
cmp
adc
test
mov
aas
mov
hlt
cmp
cmp
xor
jne
dec
divl
pop
test
cmc
xor
out
out
shl
divl
icebp
cmp
push
jne
lahf
outsl
cmp
sbb
loopne
xlat
ss
inc
popa
dec
push
inc
dec
sub
cmc
sbb
pop
lds
cmp
sub
xor
hlt
pop
sub
mov
stc
push
mov
sbb
jb
inc
out
push
sbb
sub
les
cmpsl
pop
sub
sbb
das
dec
stos
cmpsl
stc
es
lret
jl
inc
xor
ficoms
sub
test
mov
pop
mov
dec
cs
adc
in
sti
xor
xor
in
mov
sahf
mov
add
scas
cmp
hlt
push
pop
mov
ret
testl
pop
popl
inc
or
pop
leave
adc
or
imul
jmp
pop
mov
mov
lret
bound
xor
sub
das
add
jmp
nop
pop
stos
out
or
pop
sbb
movsb
lret
lret
mov
xchg
add
outsb
out
hlt
andl
or
mov
scas
mov
pusha
or
shll
dec
sbb
push
scas
mov
adc
arpl
adc
adc
lret
in
fstpt
inc
fisttpl
subb
popf
nop
push
pop
std
call
in
add
rorb
add
mov
aad
xchg
hlt
add
out
movsb
lahf
loope
xor
mov
and
dec
add
out
inc
xchg
pop
cmpb
mov
outsb
add
dec
dec
mov
adc
cs
dec
dec
test
ljmp
jae
xor
fwait
js
repnz
cmp
test
xchg
jnp
dec
jne
fcomp
or
mov
ret
cmpsl
sub
sbb
push
mov
xor
jg
mov
jle
movsb
insl
insl
ja
pop
add
jb
lahf
mov
ror
pop
iret
xchg
adc
or
aam
mov
aas
js
push
mov
cmp
inc
faddp
into
test
pop
pusha
sbb
mov
pop
cmp
push
sbb
lock
aaa
stos
gs
ja
ja
ret
push
out
fdivr
push
sbb
popa
shll
mov
je
add
clc
dec
mov
loope
test
not
push
scas
lock
jmp
jb
sysenter
rcrb
mov
mov
mov
mov
cmp
sbb
add
sub
mov
imul
adc
xor
mov
hlt
aaa
jno
scas
or
jmp
add
mov
cs
aam
movsl
out
mov
test
sbb
gs
and
jmp
lods
pop
inc
cmp
mov
jo
sub
fistps
jnp
dec
scas
pop
pop
xchg
pop
ja
push
cli
mov
xor
fs
ds
inc
aad
iret
fwait
cld
aas
sub
lock
aas
repnz
cld
fs
push
add
sarl
push
sbb
js
xor
out
adc
jb
and
jle
fnstsw
mov
fldt
push
push
je
rcrl
test
add
and
sar
imul
cli
jb
cmp
mov
jno
iret
mov
dec
mov
sti
imul
lret
xor
sub
fwait
ret
repnz
push
mov
lds
pop
pop
jo
cwtl
push
push
push
int3
stc
mov
mov
pop
imul
mov
push
push
imul
sarb
aas
push
dec
xchg
mov
or
ljmp
int3
inc
scas
push
stc
addr16
popl
shrl
mov
mov
inc
sub
or
test
insb
bound
cmp
outsl
cmp
loopne
and
je
loope
dec
js
and
frstor
movsb
sub
jp
sbb
and
out
js
pop
sub
cmp
dec
inc
pushf
pop
sub
jmp
xchg
and
loopne
mov
ljmp
mov
add
mov
cs
orl
mov
pushf
jb
pop
push
lds
out
mov
inc
das
mov
inc
sub
aad
test
fidivs
mov
mov
scas
in
test
inc
inc
xor
xchg
in
inc
mov
mov
loope
lcall
fsubrs
mov
sub
mov
stos
lahf
mov
ret
jb,pt
pop
icebp
out
outsl
inc
push
and
or
add
push
aaa
imull
push
lock
loope
jbe
push
xor
fs
aaa
dec
adc
leave
mov
lods
mov
minps
add
jns
nop
and
and
xchg
xlat
out
popf
or
stos
fadd
out
jne
loope
idivb
push
or
xchg
ficoms
push
ret
sub
addr16
cmp
divw
xor
fldt
jae
and
popa
das
push
mov
push
push
mov
pop
lcall
push
inc
jnp
push
cmc
sarl
pop
sub
pop
ds
sub
movsl
leave
push
inc
es
push
dec
clc
test
sbb
les
out
push
fdivr
aad
pop
mov
jge
leave
bound
push
nop
rcll
mov
dec
xlat
testl
stos
leave
or
xchg
pusha
push
cli
xchg
pop
mov
xor
popa
cmpsl
fisubrl
jne
xchg
dec
out
imul
mov
push
loop
mov
std
mov
imul
xlat
aas
adc
pop
mov
arpl
ret
popf
out
int3
dec
scas
pop
mov
inc
mov
adc
cli
xor
outsl
inc
mov
or
lea
xchg
sub
xor
iret
adc
fdivp
cltd
pop
mov
ret
or
addr16
and
popf
sub
mov
xchg
aam
xchg
lds
xchg
std
jl
cli
cmp
iret
adc
push
push
or
fidivrl
push
or
dec
adc
adc
sbbl
jp
push
jne
js
movsl
sub
test
dec
mov
mov
ljmp
dec
sub
dec
cmp
dec
scas
mov
mov
cmp
xor
dec
loopne
adc
lds
add
aad
sub
enter
adc
lods
cmpsb
das
pop
loope
rcll
loop
push
in
jbe
mov
rorb
xchg
mov
rcr
test
or
fiaddl
xorl
or
add
mov
jmp
lcall
sub
pop
out
jne
dec
insl
and
push
push
lahf
mov
jecxz
push
dec
imul
or
mov
cs
cld
js
xor
popf
pop
popl
mov
ficoml
mov
sub
adc
mov
xor
push
test
pop
out
dec
mov
aam
xor
pop
arpl
ret
adc
out
mov
mov
rcl
in
xchg
sbb
cs
sarl
sbb
jnp
push
lods
lret
xor
rolb
js
cwtl
mov
push
testb
clc
pushf
gs
mulb
cmpsl
sbb
lds
jl
and
iret
or
lods
inc
cmpsl
mov
sub
lods
js
pushf
add
aad
and
and
push
js
lahf
scas
adc
pop
aas
xchg
ret
inc
mov
subl
xchg
xor
movsl
mov
cmp
test
insb
xchg
jecxz
enter
jne
cltd
loop
sahf
ljmp
je
inc
cmp
xor
das
push
imul
sbb
test
xor
cmp
into
adc
push
insl
mov
add
mov
jecxz
or
or
or
aaa
jmp
hlt
in
adc
add
jne
bound
mov
fstpt
dec
into
cmp
pushf
sub
scas
adc
imul
sbb
sti
movsl
iret
sub
fildl
push
call
push
pop
ret
bound
fimuls
je
in
mov
dec
ret
pop
cmc
sahf
xor
sbb
jbe
or
jl
xchg
das
dec
ret
out
adc
mov
lcall
push
or
ret
fmul
adc
or
bound
aaa
js
and
adc
les
aam
cld
in
je
inc
fldenv
adc
jp
inc
jmp
pushf
and
fdivrs
lds
fsubrl
dec
xchg
cmp
sbb
push
cmp
push
or
movsl
push
aam
fsubl
jg
stos
test
loopne
mov
sbb
sarb
in
mov
bndstx
les
ret
inc
sbb
add
cmpb
notb
add
repz
sahf
xacquire
jge
inc
jmp
das
lahf
or
test
push
xor
ss
or
sub
hlt
sub
jbe
scas
js
dec
cmpsb
cmpsl
dec
push
lcall
add
push
mov
push
adc
sub
dec
xchg
call
enter
in
fildl
xor
cwtl
mov
test
push
out
push
dec
scas
mov
add
mov
test
push
fdecstp
addb
mov
jge
and
dec
mov
pop
cmpsb
stos
add
icebp
arpl
pop
je
test
orl
xchg
push
sub
push
pusha
stc
add
jmp
mov
fdiv
sbb
adc
pop
jg
jge
mov
mov
inc
jg
das
jmp
std
enter
lock
and
into
adc
or
jmp
mov
and
mov
mov
inc
dec
div
inc
and
aas
inc
enter
push
xchg
or
xchg
fsubrp
sub
jge
out
das
in
mov
outsb
popa
sub
std
in
roll
mov
mov
mov
push
cwtl
and
mov
inc
cmpsl
and
cmp
push
add
push
ds
adc
jo
lahf
enter
lahf
js
push
sbb
ficoml
lret
dec
rorl
push
jno
mov
pop
push
push
jne
sti
aam
push
mov
inc
insb
mov
xchg
test
loope
loope
out
fs
mov
mov
outsb
das
add
push
lahf
mov
or
add
jle
xchg
adc
or
mov
and
popf
clc
push
cmc
ret
pushf
pop
and
inc
frstor
add
insb
out
jg
mov
sbb
stos
fadds
mov
sarb
dec
adc
sahf
fbstp
cmpsl
stc
aad
icebp
imulb
adc
push
in
out
iret
mov
sbb
arpl
mov
call
lret
pop
jge
cmp
xchg
enter
sbb
mov
into
jns
pop
and
pop
fwait
push
arpl
xor
push
out
cmp
jl
mov
inc
mov
push
dec
es
add
out
cmp
fidivs
sbb
add
xorl
inc
sbb
sbb
xchg
jmp
pusha
fsubp
orb
in
out
and
adc
xchg
or
adc
push
and
xor
mov
mov
or
or
mov
adc
mov
push
icebp
cmpsl
aam
scas
scas
adc
and
pop
in
sti
in
jmp
cmpb
sbbb
roll
jmp
or
movsl
lret
sahf
jle
insl
cmp
ds
mov
into
sub
xchg
mov
mov
jbe
add
out
pushf
sbb
pop
stos
out
mov
out
jecxz
mov
sbb
jp
jo
mov
inc
repnz
es
xor
idiv
scas
ret
push
mov
cmp
mov
jmp
jnp
cwtl
mov
sub
jecxz
std
in
insl
lea
loopne
test
mov
fcomps
mov
dec
into
jl
xor
mov
add
mov
clc
xor
sbb
push
dec
sbb
popf
outsb
mov
shufps
push
cwtl
call
shll
xor
mov
adc
mov
dec
adc
and
scas
adc
adc
cmp
add
push
jae
or
xlat
xor
hlt
ret
lcall
inc
fdivrs
mov
das
data16
pop
mov
popa
lahf
sbb
mov
push
dec
mov
jp
stos
rcr
and
mov
push
jp
dec
hlt
out
add
mov
andb
xchg
mov
out
mov
sbb
jl
int3
and
dec
fld
sbb
clc
and
ljmp
xchg
pop
lock
int3
call
scas
pushf
push
add
add
fs
sbb
jl
mov
or
lods
cli
call
addr16
xor
pop
pop
into
mov
out
into
cmc
mov
add
fsubrp
push
mov
loopne
icebp
xor
adc
icebp
xchg
mov
das
sti
out
add
sub
cs
mov
daa
mov
nop
pop
js
iret
push
pop
xchg
adc
cmp
nop
rcr
inc
inc
repnz
movsl
test
add
push
jns
les
xor
repnz
daa
mov
pop
ss
or
fnstcw
lock
jmp
jns
iret
dec
inc
sub
cli
inc
sbb
dec
dec
scas
jmp
nop
sbbb
iret
aas
dec
cli
xchg
pusha
pop
insl
out
cli
xor
fld
jmp
repz
inc
push
es
movsl
divb
mov
test
mov
mov
gs
stos
jmp
add
push
dec
lea
imul
xchg
push
mov
mov
dec
push
mov
push
aad
pop
mov
lret
and
sbb
xchg
loope
mov
push
lock
dec
outsl
ds
hlt
add
xchg
xor
adc
test
pop
sub
insb
sub
lret
sbb
std
mov
aas
adc
addr16
push
test
jmp
cwtl
xchg
lcall
dec
jnp
icebp
xchg
cmp
fmul
cmp
jae
xor
jg
rol
add
cmpsb
ljmp
jne
xorb
and
and
test
and
gs
mov
fisubrl
jp
or
xor
dec
fdivs
mov
test
push
cmp
popa
cmpsb
aaa
push
mov
rclb
pop
imul
adc
cmp
jno
arpl
dec
das
cli
dec
xchg
add
out
andl
or
lea
jae
std
test
cltd
rclb
je
fiaddl
jae
xor
out
inc
sub
bound
dec
jg
xorb
sub
es
aaa
fildll
gs
aam
adc
jno
pop
xchg
outsb
hlt
bound
mov
shr
aad
test
mov
movsl
push
mov
ds
mov
push
pop
push
cmpsl
pop
inc
dec
bound
inc
sbb
mov
in
std
pushf
pop
mov
jb
les
jle
cmp
leave
incl
jg
out
lds
ds
jle
push
jns
loope
sbb
aam
dec
sub
xchg
add
pop
cmp
rorb
xor
rolb
add
sbb
mov
insl
mov
hlt
jl
jecxz
adc
jns
adc
fiadds
xlat
or
xor
lock
xor
loopne
insb
pop
cmp
jge
cmpb
jp
inc
mov
jle
inc
ja
es
adcl
idiv
push
fisubs
xor
inc
aam
out
xchg
bound
pop
or
outsb
sahf
xor
sub
inc
fidivrl
push
mov
dec
outsl
adc
and
cmpsl
mov
jl
and
pop
into
xchg
jae
insl
sub
push
ret
sbb
outsb
cmp
inc
inc
popf
rorb
mov
pop
aaa
js
cmpsb
dec
sti
cmp
stos
jns,pn
les
sbb
mov
push
or
xchg
fstpl
fidivs
adc
xchg
fimull
sub
jge
and
nop
xor
dec
jne
and
inc
movsl
decb
scas
cmp
lock
pusha
les
enter
sub
or
or
vmread
aam
pushf
scas
addr16
test
jno
pop
xlat
sbb
mov
ja
jecxz
jne
hlt
stos
xor
call
cs
sbb
push
cmpsb
jmp
inc
sub
mov
cmpsl
sbb
loopne
mov
repnz
int3
jmp
mov
push
insl
mov
aaa
test
rcrl
lret
add
out
cmp
shrb
sub
les
mov
adc
ret
je
jns
push
mov
jl
and
mov
test
add
cli
add
xor
mov
sub
add
fstps
mov
add
and
xchg
cmpsb
fs
jo
dec
roll
orb
xchg
aam
adc
sub
sbb
movsb
jmp
and
lds
or
pop
into
mov
pop
inc
mov
mov
subb
add
loopne
cmp
push
js
pop
les
mov
jbe
sarl
in
out
mov
and
jne
xchg
lahf
cmpsb
xor
and
push
lret
cmp
subb
pop
rclb
pushf
icebp
pop
or
pusha
loop
cmp
sbb
xchg
pop
inc
mov
dec
leave
pop
ret
es
jge
pop
sub
gs
pop
mov
mov
pop
dec
rcrl
adc
aad
pop
mov
idiv
or
rcrl
mov
call
out
xchg
das
ja
inc
jge
es
daa
or
or
xlat
subl
dec
mov
fiadds
movsb
jg
cmp
dec
sub
mov
sub
and
or
fisubrl
pop
lret
jo
jl
jmp
push
mov
mov
dec
or
xorb
adc
repnz
push
jns
mov
mov
jo
push
jecxz
fmuls
scas
daa
sbb
jmp
pop
mov
xchg
or
lret
jl
out
pop
frstor
and
out
mov
and
lret
fistpll
pop
jnp
leave
or
fisttpll
and
dec
sbb
shrb
icebp
aam
fcomps
inc
lcall
xchg
lret
movsb
cmpsl
clc
pop
pop
xor
lcall
mov
mov
das
jo
jnp
mov
push
and
fcoms
mov
pop
cmp
push
cmp
mov
push
pop
aaa
jmp
xchg
cmp
add
es
cmp
aaa
scas
mov
push
js
dec
dec
xchg
inc
rorb
jg
in
loope
aas
push
ret
jge
pop
in
test
ds
or
in
rolb
xchg
fnstsw
out
mov
add
test
mov
cld
dec
fstl
cld
fisttps
jno
ret
fbld
dec
imul
xor
pop
dec
ficoml
mov
jb
clc
into
or
sub
add
and
sub
loopne
sbb
mov
jmp
jge
cld
mov
and
arpl
inc
sarb
and
or
push
fiaddl
push
pop
mulb
and
pop
int3
cld
stos
add
inc
fcoms
cmp
mov
inc
loop
ficomps
jno
add
ds
loopne
xchg
xchg
rcrl
notl
lahf
lock
leave
xchg
hlt
popf
mov
not
repnz
nop
add
xchg
xor
jae
mov
cli
adc
hlt
inc
xor
mov
adc
fnstsw
mov
int
push
sahf
pusha
lods
orb
movsb
mov
pop
fsubr
and
mov
pop
mulb
rol
lret
stc
xchg
stc
mov
xchg
dec
ds
movsl
fidivs
test
mov
mov
mov
repnz
xchg
jo
fwait
clc
cli
jg
loop
push
or
pop
mov
addl
data16
arpl
int
loopne
mov
sbb
shll
or
movsl
hlt
ret
test
and
rcll
mov
js
jge
pusha
bound
aas
xchg
xor
ret
in
sbb
mov
ret
jnp
jne
es
repz
inc
lret
add
lcall
das
sahf
cs
and
xchg
iret
jnp
mov
sbb
fs
popf
mov
nop
gs
push
inc
mov
imul
into
clc
test
test
adc
jae
pushf
push
pusha
or
orb
mov
lret
cmp
mov
faddl
mov
call
sbb
inc
orb
les
dec
and
lret
pop
icebp
outsb
stos
pop
repz
je
mov
ret
mov
cmpsb
cwtl
gs
fldt
push
pop
or
gs
push
dec
push
pop
lods
push
adc
and
cld
or
mov
mov
stc
jne
ja
or
imull
mov
dec
xchg
shr
push
sti
aas
outsb
clc
lcall
pushf
cli
arpl
sub
push
xorb
scas
mov
xchg
in
ret
je
mov
xchg
and
sub
adc
imul
fsts
stc
xchg
push
test
push
push
cli
hlt
add
and
or
adc
pop
inc
pop
sbb
jno
loopne
fwait
push
mov
inc
out
pop
or
add
and
fstl
cli
xchg
mov
loopne
aad
std
lret
cmp
inc
nop
pop
in
jmp
fnstsw
sbbl
out
mov
cmc
ret
lcall
scas
mov
sbb
mov
push
rolb
and
cmp
ljmp
push
loope
aaa
xor
pop
mov
sbb
in
decl
add
addr16
mov
xlat
ja
xchg
mov
into
add
jmp
jg
push
mov
inc
pop
xor
sbb
pop
imul
pop
ds
fmuls
push
xchg
push
mov
iret
or
push
pop
cmc
push
int3
sub
jo
cmpsb
xchg
inc
mov
inc
push
mov
std
add
inc
or
dec
jbe
test
test
jno
lods
jecxz
mov
add
mov
xor
mov
popa
mov
and
mov
dec
xchg
adc
nop
xor
das
std
sahf
mov
popa
pop
aam
mov
iret
int3
in
ja
clc
dec
pop
arpl
pop
adcb
insl
in
add
loop
mov
dec
xchg
mov
negb
or
xchg
imul
cmp
push
adc
push
cmc
push
fisttps
cmp
bnd
jp
scas
pop
xchg
inc
or
fisubl
in
mov
sbb
lods
sub
mov
xchg
xor
imul
add
cwtl
inc
sbb
cwtl
arpl
or
mov
mov
pop
xor
cmp
popa
clc
lds
test
cmpsb
scas
cwtl
push
sub
sarb
xor
xorb
adc
jge
cmpb
out
popa
test
push
xorl
push
adc
mov
fnstenv
in
dec
shrb
scas
and
test
xchg
stos
inc
inc
push
mov
movsl
in
jge
mov
inc
push
mov
cmp
insb
ficompl
sub
cs
pop
push
sbb
sti
inc
repnz
jl
mov
lcall
fs
xchg
mov
cli
out
in
and
dec
xchg
fwait
cmpsb
out
mov
ss
aas
adc
xchg
stc
or
mov
sbb
rcl
out
pop
sbb
les
mov
ljmp
mov
push
ficompl
mov
test
inc
sbb
cmpsl
adc
shrb
cmp
ds
or
fxch
pushf
sbb
mov
jp
sahf
loop
or
dec
and
inc
sbb
repnz
shlb
fistl
lcall
dec
ror
hlt
xchg
cmp
in
dec
popf
fwait
xor
mov
and
test
ficomps
fldl
repz
or
xchg
xchg
xor
push
fmul
jge
push
adc
jl
sub
jmp
mov
pop
dec
dec
fnstcw
aas
outsb
and
loope
das
jmp
jp
and
stos
adc
popf
daa
cld
int3
mov
sahf
mov
leave
xor
sbb
movsl
out
sbb
popf
bound
or
insl
mov
in
dec
or
fldl
fldenv
out
scas
psubsw
stos
out
mov
mov
mov
dec
lcall
mov
xor
pop
inc
sub
sti
or
testl
push
fists
rclb
fidivl
jmp
sbb
lds
lcall
cmp
and
push
and
jmp
xchg
imul
inc
packssdw
nop
and
mov
notb
ss
cld
pop
push
push
sahf
lods
dec
movsl
loope
leave
xor
sbb
jg
lods
iret
test
hlt
xchg
ret
sbb
lret
out
imul
ja
and
push
dec
outsb
loop
testl
rorl
shll
out
pop
ja
sbb
and
jno
lods
jp
stos
fistpl
pop
and
lret
sub
loop
mov
jecxz
pop
std
loop
fsubrl
jle
adc
insl
ljmp
xchg
jmp
lea
rol
mov
mov
lahf
fldt
mov
cmp
mov
or
jl
jae
gs
lock
fildl
rcrl
or
push
lret
cld
cs
cmpb
loopne
cmpsl
in
test
jbe
std
push
push
scas
xor
sbb
and
incb
incl
add
in
daa
xchg
cmc
xchg
std
sub
pop
sub
mov
in
mov
cltd
fsubrl
aam
repz
int
push
lcall
mov
jno
push
push
pop
xor
xchg
inc
pop
xchg
fsubr
push
lods
inc
stos
hlt
lods
dec
fstps
dec
jg
mov
and
push
jl
pop
xchg
or
or
add
mov
ss
xor
jnp
pop
push
sub
sbb
pop
dec
xchg
dec
xchg
fistps
xchg
mov
push
mov
popa
jmp
mov
pusha
clc
lods
cmp
adc
ss
aas
int3
push
pop
in
jnp
pushf
mov
inc
jbe
or
out
fistps
or
iret
mov
shl
sub
mov
in
adcl
or
aas
int
imul
ss
jl
arpl
icebp
and
xor
mov
mov
stc
cwtl
fs
out
cmp
mov
jl
stos
jecxz
cmpsb
inc
pop
or
cmp
pop
call
je
and
loopne
dec
scas
mov
mov
mov
push
movsb
ds
sbb
cmp
pushf
pop
cmpsb
out
mov
xchg
imul
jne
xorl
aaa
cmpsl
stos
adc
in
xchg
dec
or
sub
inc
adc
inc
mov
imul
dec
dec
cli
jb
xchg
push
fildll
dec
and
ret
cmpsl
dec
mov
mov
scas
mov
inc
lods
in
inc
xchg
cmpsl
mov
dec
xor
and
jmp
mov
stos
out
inc
mov
sub
mov
jmp
stos
call
das
call
mov
adc
dec
ret
insl
mov
cmp
pusha
testb
in
sti
fdivr
push
cmpsb
js,pt
in
cmp
hlt
push
mov
aas
dec
or
inc
sub
imul
xor
fldl
ss
leave
les
cli
or
sub
arpl
enter
js
pop
add
mov
sbb
cld
pop
shl
and
cmpsl
imul
cld
js
ret
arpl
inc
mov
xchg
bound
add
xchg
fwait
shr
mov
loopne
dec
pop
cmp
popa
pop
stos
jo
mov
js
mov
fidivrs
xchg
das
sbb
shr
movd
mov
push
xor
xor
cmpsl
shlb
pop
push
mov
xor
push
lds
test
cld
lods
cmp
shr
sahf
aam
daa
cmp
cmc
push
nop
adc
jecxz
push
in
lods
pop
lcall
lcall
sbb
adc
mov
adc
add
mov
push
lds
add
repz
xor
cwtl
inc
pop
dec
imul
scas
xor
mulb
dec
mov
jecxz
gs
call
adc
lcall
out
inc
push
mov
fbld
leave
jnp
repnz
call
cmpsb
icebp
shll
mov
mov
mov
int
arpl
add
out
sub
add
adc
and
imul
sbb
sub
pop
cmp
out
aam
adc
nop
icebp
pop
mov
add
push
es
mov
sub
inc
scas
push
stc
outsb
inc
repz
loope
cmpsl
aad
clc
xor
into
xor
adc
cmpsl
fnstcw
in
or
cs
and
xchg
pop
ficompl
xor
xor
mov
xor
test
inc
mov
mov
sub
gs
faddl
mov
mov
lret
mov
xchg
movsb
ja
or
and
mov
pop
push
lods
jb
jmp
push
addr16
xchg
mov
xchg
in
ret
out
xor
pop
mov
clc
test
int3
fs
xchg
idiv
rolb
or
in
test
in
arpl
test
dec
jbe
cmp
or
sahf
dec
lock
cld
and
cltd
push
xchg
lea
mov
pop
sub
ret
divb
out
out
or
jmp
pushf
sub
gs
and
test
jl
sbb
decb
repnz
lds
add
insl
add
mov
lods
movsb
out
mov
push
sti
cmp
inc
fstpl
push
or
cmp
inc
iret
dec
in
pusha
mov
add
mov
cs
dec
jbe
leave
pop
fldl
xorl
cld
sbb
repz
and
and
pop
inc
out
std
idivb
cli
adc
lea
pop
or
or
cmp
xor
sbb
movb
push
inc
add
imul
rolb
mov
decl
xlat
cmpsb
lret
sbbb
dec
pop
ret
push
int
sahf
roll
rorb
cmpsb
das
mov
mov
inc
pop
sbb
sub
xchg
flds
jecxz
xor
inc
mov
dec
repnz
add
out
and
jecxz
stos
inc
mov
fisttpll
pop
dec
push
es
loope
push
dec
repnz
sub
addb
bound
scas
in
pop
sub
fnstcw
std
test
sub
into
les
lods
pop
mov
jmp
or
cli
in
sub
popa
dec
push
ret
mov
sub
sbb
cmpsb
outsb
arpl
rorl
cwtl
cwtl
movsl
in
sbb
mov
mov
lahf
sub
mov
cli
testl
inc
lods
inc
inc
jp
or
inc
ret
cs
addb
arpl
sub
xchg
and
push
push
aaa
gs
bound
adc
out
call
rcrb
push
data16
push
fnstsw
jmp
add
mov
das
adcl
jge
mov
xlat
xchg
pushf
adc
fcoml
lea
addl
out
sahf
cld
stos
or
jmp
gs
push
fwait
movsb
stos
lds
push
sti
cwtl
test
cmp
jo
sub
xor
push
ret
mov
in
jo
cmp
fs
xor
fcoms
ja
std
data16
push
jbe
fdivl
adc
mov
push
pushf
shll
scas
test
outsb
pusha
ss
cmp
clc
push
xchg
mov
mov
sahf
outsb
and
push
scas
test
jl
lret
adc
lods
in
sub
add
in
jge
mov
lods
mov
cwtl
push
pop
pop
mov
scas
cld
push
and
jno
outsb
and
idivb
pushf
adc
lret
ret
add
cltd
mov
mov
lahf
int
iret
ds
in
ficoms
push
hlt
test
mov
xor
out
mov
xchg
mov
cli
sub
sbb
jmp
xchg
aaa
pop
or
cmp
lock
mov
sub
loopne
into
bound
leave
dec
test
daa
push
fucomip
loop
aaa
test
add
xlat
sub
jl
sub
test
sti
cmp
mov
adc
pop
inc
inc
push
aam
jno
xchg
or
fsubs
aad
mov
movsb
mov
fsub
add
mov
and
pop
es
dec
in
mov
dec
sub
inc
pop
mov
pop
mov
xchg
cwtl
inc
jae
mov
jmp
test
xor
imul
scas
dec
mov
out
sbb
loope
lods
jnp
push
ds
stc
decl
add
push
std
cvtps2pd
mov
shll
test
push
dec
scas
mov
sbb
into
add
adc
jne
fidivrl
sbb
and
pop
sar
push
sub
jns
xlat
sbbb
jo
xor
pop
cmpsl
inc
frstor
test
xchg
repz
stos
ljmp
mov
repnz
loope
jae
cmp
xor
mov
cmp
or
cli
popa
jmp
mov
lea
mov
lds
gs
iret
insb
push
push
jbe
out
push
push
dec
repnz
ret
sbb
cmp
rorl
pop
ja
and
mov
mov
dec
test
mov
and
cmpb
call
cmp
inc
aad
jae
mov
lahf
jmp
jg
ret
test
cltd
data16
movsb
jnp
add
pop
repz
into
and
inc
fiaddl
pop
pop
out
arpl
in
incl
hlt
nop
test
push
mov
mov
push
enter
cmpsl
cmp
mov
inc
inc
lea
rcr
cmp
daa
pop
inc
mov
std
mov
dec
mov
lret
jb
cmpsb
movsb
add
sub
and
adc
cld
add
fcomps
push
and
call
cmc
sub
adc
shlb
pop
sbb
add
pop
sbb
xchg
outsl
loope
and
hlt
cmp
lea
aad
sbb
cmpsb
mov
cltd
sub
loop
mov
les
das
sbb
cmp
jp
insl
int3
fistpll
roll
and
inc
lcall
stc
jns
pop
mov
sub
stos
jne
dec
lahf
jmp
fdivl
xchg
mov
and
arpl
ret
sbb
cmp
mov
lea
dec
jecxz
mov
clc
push
push
adc
mov
jbe
sarb
in
leave
jmp
push
mov
or
mov
mov
mov
outsb
ljmp
jb
repnz
xorb
pop
fisttps
loopne
mov
jecxz
pop
jge
jne
test
outsl
lahf
jg
pusha
mov
mov
pop
add
sub
movsb
adc
out
xor
mov
mov
add
add
cmpsb
sub
stos
xchg
gs
mov
adc
daa
inc
fisubs
cmpsb
jns
outsb
stc
cwtl
les
scas
mov
adc
jo
aam
int
push
lods
imul
in
xchg
inc
ljmp
add
test
pop
dec
dec
jge
cmp
push
mov
shll
xchg
mov
dec
test
mov
daa
aad
hlt
out
lods
lahf
hlt
nop
ljmp
mov
xchg
stos
std
mull
pop
test
gs
orl
cltd
inc
pushl
jnp
mov
sub
xchg
das
mov
jo
lea
mov
mov
xchg
mov
out
jne
shll
int
out
xor
mov
mov
fmull
mov
jl
xchg
pushf
add
lahf
mov
sarb
inc
out
cmp
dec
push
adc
in
mov
pushf
xor
adc
inc
xor
mov
pop
dec
push
pop
bound
addr16
sti
popf
xchg
rorb
iret
ret
adc
pop
loop
sub
push
dec
inc
ja
push
mov
xchg
sbb
dec
pop
out
lods
inc
sub
nop
aas
and
xor
xor
adc
pop
add
mov
or
std
loope
inc
out
rcll
in
and
add
and
mov
or
incl
mov
ror
pop
sub
add
cmp
cli
ss
pop
jl
iret
fcomp
pop
add
cmpsb
dec
mov
gs
out
xor
or
and
or
outsb
enter
dec
jle
dec
push
mov
adc
sti
subb
adc
jp
jae
cmpsb
rclb
fadds
imul
movsb
out
add
push
nop
pop
insl
xchg
repnz
scas
push
leave
inc
or
inc
pop
pop
test
inc
jae
push
or
daa
roll
outsb
jl
cmp
or
cmpl
mov
inc
or
jb
pop
lret
imul
cmp
mov
dec
mov
mov
lds
push
cmp
xor
ficoms
fistl
cmc
fwait
jecxz
mov
xchg
in
test
imul
inc
sbb
sub
xor
or
pop
adc
push
call
mov
xchg
xchg
test
jmp
or
jbe
popa
enter
xor
lret
mov
cmp
xor
cld
pop
adc
adc
ret
into
jno
xor
adc
dec
pop
ficoms
or
loop
xor
aad
pop
and
in
test
sub
orb
in
int3
mov
insl
test
test
mov
sbb
xor
jbe
add
mov
decb
gs
fs
movsb
sub
sub
cmpsl
out
aaa
xor
xchg
iret
jno
sti
mov
sbb
push
push
mov
sub
xbegin
xchg
mov
lahf
aad
push
and
call
push
cs
dec
cmp
aad
adc
push
cmpps
icebp
scas
inc
int
das
jp
in
adc
scas
jns
cmp
movsb
xchg
add
push
mov
scas
lods
jne
mov
fxam
hlt
int
lret
adc
jb
fidivl
mov
sarl
jno
dec
loopne
pop
push
daa
neg
je
mov
inc
xor
pop
pop
mov
lock
mov
jo
mov
cmpsl
jge
incl
scas
push
loopne
sbb
inc
pop
shlb
xchg
sbb
sub
or
mov
mov
cltd
pop
cmp
icebp
int3
adc
fcmovnu
in
pop
adc
into
push
or
imulb
shlb
outsb
pop
push
jnp
cmp
inc
stc
mov
mov
pop
test
adc
inc
sub
loopne
andl
add
shlb
dec
pop
push
popl
push
aad
rclb
and
stos
sub
dec
xchg
pop
sahf
dec
lret
mov
sbb
mov
into
cld
fwait
cmp
mov
adc
push
add
ret
xchg
lods
das
jae
jg
shlb
sub
cmp
insb
adc
mov
sti
xor
mov
sub
or
in
insl
mov
push
sti
adc
incl
sub
bound
adc
mov
sbb
ret
adc
into
arpl
sahf
cmp
aad
iret
notb
repz
mov
or
mov
add
aam
mov
lock
jmp
mov
sub
cwtl
adcl
pop
xchg
mov
int3
dec
test
jmp
and
ja
in
or
fistpll
and
push
out
imul
rcrb
ficompl
shl
sub
dec
fs
dec
movsb
fsts
popa
xor
mov
es
mov
jbe
sub
aas
nop
iret
jae
xorl
push
sbb
add
mov
mov
lret
mov
stos
dec
testl
out
pop
dec
jge
in
outsb
jmp
cmp
push
outsl
les
and
popa
xchg
mov
cmp
dec
out
or
in
ret
push
jge
pop
repnz
fwait
pop
ror
inc
and
iret
and
hlt
lret
movsl
xor
rclb
movsl
ja
add
pop
mov
lock
and
adc
inc
adc
inc
int
mov
mov
adc
arpl
stc
nop
popa
divb
roll
xlat
int
jmp
pop
xorb
testl
mov
jp
mov
xchg
cmpsb
push
in
rolb
movsl
adc
add
std
mov
dec
push
insb
pop
shrb
mov
inc
out
cld
fimull
cmp
les
clc
jne
jns
sub
dec
pop
xchg
clc
add
xor
nop
dec
hlt
xchg
pop
xchg
cltd
push
data16
call
sub
xchg
scas
test
icebp
imul
mov
in
ss
inc
call
das
out
push
aam
into
test
jecxz
and
sbb
push
xorl
add
stc
repz
mov
cmpb
push
data16
mov
inc
dec
and
in
push
adc
mov
sti
xor
popf
or
cmp
sbb
ljmp
rol
push
xor
lods
rcll
aaa
pop
mov
sbb
movsb
mov
sbb
jl
dec
scas
jecxz
dec
insb
int3
shll
fildll
mul
dec
idivl
sbb
fcmovnu
sbb
add
jns
sub
cmpsb
std
and
jbe
mov
mov
mov
xchg
mov
in
cmp
mov
mov
inc
sub
and
cmp
xchg
mov
push
mov
xchg
aam
cmp
xorb
jno
in
pop
inc
cli
and
pop
lcall
scas
nop
fadd
pop
fidivl
lds
test
pop
rcrb
or
insb
bound
cmp
rolb
jmp
xor
ds
mov
ret
int
outsb
pop
add
lods
cmp
mov
pop
xor
or
mov
pusha
rcrl
ja
out
jge
xor
sub
sbb
push
aas
aaa
sub
int3
push
stos
xor
cmc
cmc
clc
mov
shrl
pop
sbb
push
rcl
scas
rorb
mov
ljmp
dec
mov
push
fimuls
cwtl
fwait
sbb
ja
add
push
mov
int3
cli
aaa
addb
pop
mov
adc
loope
dec
mov
aaa
mov
pop
xor
repz
push
inc
loop
mov
sahf
xor
add
inc
imul
jmp
ret
repz
mov
in
lds
out
adc
iret
and
test
mov
popa
lock
pop
sub
cld
lahf
fidivrl
lods
mov
out
mov
sub
stc
clc
pop
enter
std
hlt
xor
out
std
stos
out
xor
mov
and
adc
mov
xchg
xchg
in
lret
mov
lret
adcb
mov
lods
dec
loope
fidivl
sahf
hlt
fsubl
outsb
icebp
mov
push
jno
icebp
rclb
test
mov
xchg
mov
pop
xlat
xchg
mov
push
hlt
test
mov
lods
test
push
clc
pusha
mov
enter
test
sub
out
jne
sbbb
cmp
cmc
inc
in
das
out
cmpsb
daa
mov
test
test
aas
xor
cmp
fisubrs
cmp
mov
roll
pop
dec
ret
push
cltd
pop
mov
daa
insl
bndldx
nop
jge
cltd
out
pusha
push
orl
leave
repz
push
stos
and
xor
mull
cmp
xor
lahf
mov
jmp
aas
ljmp
outsb
loope
push
push
mov
pop
mov
fstl
xor
pop
ret
enter
lahf
pop
insl
lea
nop
out
inc
not
in
shll
cltd
mov
rcrl
ljmp
inc
dec
loope
and
imul
mov
sbb
fsubp
push
repz
nop
sahf
or
sub
mov
hlt
stos
out
jle
imul
mov
out
cmpsl
jmp
bound
push
sub
faddl
aas
mov
mov
push
sub
sub
cld
aam
push
push
mov
popa
mov
insl
adc
pop
dec
push
mov
pusha
dec
insl
mov
idivl
aam
mov
dec
imulb
sub
push
sarb
lret
adc
mov
out
shlb
fs
push
sub
stos
fldpi
inc
loope
add
sbb
mov
ja
add
popf
sub
and
int3
leave
adcb
pop
cmp
and
popf
jne
dec
rol
xchg
cmp
out
ljmp
lea
bound
je
xlat
and
std
arpl
xchg
mov
cmp
inc
aam
mov
negl
jo
into
cmpsb
push
mov
shrb
cmpsl
jecxz
aam
out
push
or
in
add
or
inc
cmp
pusha
xor
cmp
mov
lret
sbb
adc
jne
dec
iret
jge
nop
sub
add
inc
int3
cmpsb
push
test
lods
mov
ljmp
lods
std
add
inc
sbb
adc
push
xor
or
sbb
ds
inc
icebp
and
notb
push
in
cmc
jae
aad
das
int3
sbb
mov
inc
jle
add
lods
push
adc
hlt
popf
mov
lock
add
out
test
movd
mov
cmp
pop
xor
pop
rcrb
inc
je
pop
addr16
shlb
out
xor
int
mov
dec
adc
cli
jge
loop
inc
cltd
lcall
dec
shl
movsb
sbb
fisttpl
pop
scas
lret
out
jb,pn
cmp
lret
add
fs
pop
xchg
and
jo
jae
scas
ss
lods
xchg
mov
movsl
rorb
das
inc
inc
das
shrb
test
dec
add
inc
hlt
xlat
sbb
lret
out
sub
xchg
xchg
repz
sbb
jl
adcl
out
xor
daa
dec
cwtl
repnz
jle
out
cmc
call
cmc
into
scas
lods
test
jmp
movsb
flds
mov
mov
aaa
pop
sub
insl
dec
jl
outsl
mov
add
in
mov
and
pushf
mov
nop
mov
push
push
add
pushf
add
out
push
inc
test
sub
dec
test
xor
push
fs
inc
test
add
mov
shrb
in
add
fdivrs
je
in
or
mov
xlat
jg
jle
popf
adc
pop
pop
mov
push
xchg
and
aaa
sbb
mov
rorl
cwtl
sbb
jo
xor
xor
adc
sub
mov
enter
fdivl
mov
xor
pop
es
push
std
pop
xor
fwait
lahf
jecxz
test
add
inc
mov
jle
jmp
mov
insl
or
sti
and
cmp
arpl
inc
jp
cs
jnp
daa
adc
testb
pshufw
xchg
and
cmc
push
cmpsl
sbb
pop
test
push
ret
lret
cmp
jbe
rorb
mov
out
ja
aas
push
and
int
sti
mov
or
adc
mov
cmp
lcall
rcrb
jecxz
push
lea
xchg
jno
mov
pop
mov
pop
ja
imul
bound
into
arpl
aaa
adc
imul
mov
test
or
dec
fcmove
sub
adc
nop
cmpsb
pop
push
lods
cwtl
imul
push
xor
pop
xchg
xor
or
movsb
mov
mov
scas
fwait
ja
and
push
out
mov
mov
test
push
iret
inc
xor
dec
mov
bnd
inc
scas
loope
jbe
leave
dec
repnz
inc
mov
aad
jge
mov
sti
aas
push
pop
mov
loope
xchg
and
into
nop
and
xchg
repz
pop
addl
fsubr
cmp
mov
jno
xor
xchg
std
testl
fldenv
mov
inc
push
mov
or
rorl
aam
out
std
push
call
mov
btc
cmp
cli
jle
xchg
iret
lods
pop
mov
insl
in
movsb
adc
fldt
or
ljmp
lods
mov
inc
push
and
mov
es
sbb
clc
addr16
push
cmp
lret
insb
stc
mov
adcb
movsb
stos
push
popa
mov
jnp
ja
ljmp
adc
sbb
lret
cli
scas
lods
mov
cmp
negb
movsb
add
and
fnstenv
push
jns
and
cmp
in
pop
lret
mov
add
mov
cli
mull
mov
inc
hlt
sub
mov
inc
xor
xchg
in
test
movsb
xchg
into
and
dec
popf
mov
mov
dec
pop
mov
xor
subb
aaa
mov
sub
popl
pop
push
cmp
icebp
dec
daa
dec
lds
push
lock
data16
ss
mov
out
push
push
push
and
mov
iret
mov
cmc
nop
mov
jbe
inc
and
insl
loope
push
mov
add
xor
xor
addb
sub
cmp
jmp
fsubs
xor
xor
or
push
and
add
cmp
fdivp
sbb
push
scas
lds
jecxz
es
std
out
push
jp
sti
cltd
sbbl
aas
lods
das
cmpsb
movsl
fistpl
jbe
js
dec
stos
mov
pop
jl
enter
rorb
in
adc
cld
lea
sbb
xchg
gs
inc
xorl
cmp
dec
add
pop
adc
adc
push
jb
push
sahf
adc
and
mov
push
rorb
hlt
xor
mov
rep
scas
jp
jg
int3
int3
xchg
cmp
ds
mov
dec
cmpsb
adc
xchg
ja
outsl
flds
jo
sbb
xor
stc
fcmove
or
int3
mov
outsb
sbb
or
add
sbb
hlt
jp
push
jge
cmc
sti
cmpsl
push
jbe
pop
mov
mov
movsl
pop
adc
popa
sbb
xchg
push
test
xor
push
push
stos
popl
pop
push
inc
jne
pushf
xchg
add
aaa
std
shrb
push
in
rclb
es
dec
or
test
inc
mov
clc
mov
mov
jl
mov
jb
ficompl
stos
inc
loope
je
gs
or
into
clc
pop
adc
mov
aam
arpl
xchg
pop
lahf
mov
inc
pop
adc
stos
in
or
xor
ljmp
inc
or
xlat
add
ret
stos
ret
fistl
mov
and
inc
dec
inc
mov
movsl
shl
pop
jo
mov
sbb
repnz
sub
je
icebp
icebp
out
xor
push
pusha
sub
out
scas
mov
sub
sub
mov
adc
iret
mov
push
push
or
push
mov
loop
js
mov
push
fistpll
icebp
stos
fnstsw
xor
push
jmp
push
cmp
iret
or
sti
adc
out
mov
jg
dec
out
push
aas
cmp
push
outsb
fists
lea
daa
hlt
idivb
test
push
jo
mov
or
sub
leave
dec
xchg
rcrb
pushf
sbb
xchg
dec
mov
add
into
cmpsl
lahf
addl
in
xor
cmp
adc
insb
add
mov
cmp
mov
ljmp
or
cmp
push
lret
pop
les
xor
sub
movsl
jmp
sub
jmp
cmp
mov
mov
mov
call
movsl
or
mov
iret
stc
push
cmp
loop
mov
or
xorl
mov
cltd
mov
into
movsb
sub
test
ret
stos
insl
int
adc
mov
or
push
mov
or
ds
int3
lock
push
stc
add
fistpl
sbb
out
add
adc
shl
inc
inc
test
addr16
icebp
xchg
xchg
xchg
orb
jno
pop
xchg
fwait
cmpsb
icebp
lea
pop
dec
sbb
cmpsb
stos
xchg
mov
pop
sbb
add
dec
push
add
outsl
repz
in
fwait
shll
rol
dec
fstl
dec
sar
daa
ds
sbb
jg
inc
adc
sub
mov
mov
in
push
fldcw
push
adc
popf
lods
outsb
cmp
push
jns
stos
movsl
jmp
loop
sti
xchg
scas
arpl
scas
inc
stos
mov
xchg
movsl
scas
jge
and
inc
xor
imul
in
out
lcall
jbe
dec
fists
lret
hlt
cltd
imulb
dec
fwait
xlat
inc
sahf
dec
mov
in
mov
xchg
adc
mov
loopne
push
outsb
cltd
shlb
jo
mov
lds
cli
adc
ret
sub
or
into
xchg
jmp
shll
mov
fcmovne
sarl
jg
popa
nop
or
jge
cmp
out
mov
out
dec
aam
pop
js
cmp
scas
push
test
mov
or
lcall
pop
daa
repnz
loopne
out
pop
push
pop
jle
iret
out
sub
cmp
or
aaa
cmp
pop
jmp
sbb
jb
xchg
jmp
xor
pop
int
mov
test
inc
fadds
rclb
cmp
into
out
movsb
and
pop
shll
stc
insb
jg
aam
dec
test
int
mov
cmpsl
mov
xor
movsb
enter
cmp
mov
addr16
mov
add
pop
mov
push
int3
lret
jno
xchg
adc
dec
pop
jae
repz
and
mov
and
jae
nop
sub
jno
dec
jno
ds
sub
adc
xor
pop
addr16
dec
shll
in
pop
cld
lret
push
es
pop
xchg
push
or
inc
dec
test
sub
mov
ljmp
daa
cli
dec
jmp
je
stos
inc
lcall
push
or
mov
ret
add
pop
fidivrs
data16
ret
pop
xor
cmpl
data16
xor
jecxz
adc
add
out
dec
mov
mov
in
jl
aas
sbb
cmp
push
aaa
mov
ds
notl
add
cmp
and
lret
push
leave
cmp
sub
dec
movsl
and
out
jnp
or
inc
or
mov
and
ja
ret
loop
xlat
int
mov
notl
js
cmp
dec
icebp
cmc
loope
xchg
sub
ja
dec
fadd
mov
add
xchg
pop
lcall
sahf
cmc
cmc
out
into
cmp
add
in
rcr
lret
sub
dec
into
push
stos
and
mov
xor
rol
das
inc
out
cmpsb
fsubs
or
mov
xchg
mov
movsb
sarl
push
pop
ja
or
cmpsl
xor
icebp
dec
clc
or
jbe
adc
aam
mov
push
cltd
push
cmpl
pop
hlt
hlt
mov
xor
lcall
cwtl
xlat
lods
sub
adc
pop
adc
sbb
jmp
ret
cld
nop
popf
mov
sti
adc
pop
inc
pop
add
mov
add
jae
pop
pop
inc
fwait
sbb
stos
addb
xchg
fsubp
mov
cs
mov
inc
mov
or
lret
lret
rol
addl
mov
dec
dec
dec
mov
lods
pop
pop
out
push
test
xor
or
adc
jne
insl
outsb
sbb
push
test
pop
aad
ficomps
ret
mov
imul
mov
adc
inc
aad
cmp
or
sub
scas
jp
fbld
aad
jne
jo
push
sbb
std
cli
mov
test
inc
push
cmpsb
pop
movsb
pop
call
push
scas
xor
into
stos
les
pop
mov
mov
xor
pop
push
or
or
jle
lahf
jns
jae
push
fs
xchg
into
repnz
mov
leave
xchg
movsl
push
loopne
cltd
lea
lcall
cld
dec
cmp
jb
imul
decl
aaa
push
or
aam
xor
sbb
and
inc
push
sub
xchg
lcall
rclb
arpl
cmp
outsl
addr16
mov
mov
les
add
and
and
xrelease
negl
and
aas
outsl
dec
mov
decb
push
lods
jl
in
sub
data16
lcall
ret
mov
push
push
jmp
insl
inc
aad
out
pop
fnstenv
ror
out
fs
push
mov
fcompl
xchg
mov
mov
inc
in
sti
cmpsl
or
add
jns
lcall
fbld
aam
adc
sub
xlat
sbb
outsb
pusha
mov
ss
test
push
adc
dec
mov
bnd
lods
js
pop
pop
arpl
cmc
sbb
jmp
xor
adc
dec
pop
mov
repz
pop
sub
fimull
sahf
pop
dec
xor
in
loope
xor
decb
mov
add
inc
adc
mov
roll
neg
ds
lret
aaa
call
lahf
outsl
push
cmp
inc
pop
ss
out
insl
adc
xchg
scas
sarl
out
fsubl
jge
mov
xchg
jle
pop
cmc
pop
fbstp
jl
iret
adc
inc
or
jo
sub
leave
call
enter
xor
adc
loop
cmp
repnz
jmp
iret
push
pop
leave
bound
mov
sub
stos
loopne
sbb
subb
xchg
shlb
fs
mov
and
icebp
push
xchg
mov
scas
insl
jns
fucomip
pop
xlat
call
xbegin
cmp
jno
mov
mov
lds
les
jmp
out
shr
add
mov
loopne
addr16
imul
sub
xor
cwtl
sbb
stc
sbb
popf
xchg
adc
and
loop
loopne
adc
pop
cmp
lahf
test
add
enter
xchg
sbb
mov
bound
push
call
push
insb
sbb
mov
cmp
aaa
sub
cmp
xchg
sti
daa
adc
jp
mov
lods
loope
add
or
out
shr
mov
mov
rcr
xlat
loopne
roll
out
xchg
add
fidivl
cmp
push
xor
scas
push
or
cmc
mov
inc
aas
fst
aas
cmc
sub
mov
cs
and
mov
xchg
lock
hlt
loope
xchg
lahf
adc
sub
ret
pop
addr16
dec
add
mov
jnp
icebp
enter
test
clc
fstps
jne
push
mov
sub
pop
sbb
xchg
lock
hlt
imul
insl
sbb
aas
xchg
ds
negl
dec
adcb
jl
jmp
jae
jge
and
jle
jge
sbb
inc
pop
lods
loop
mov
leave
xchg
dec
fbstp
jno
push
xchg
imul
push
push
iret
mov
fmuls
roll
add
lret
sbb
jecxz
rcrb
shl
adc
sub
push
jo
inc
insl
out
jmp
fstpt
xchg
jae
and
pop
mov
mov
add
mov
scas
fisttpll
gs
fisubl
and
mov
fldt
loop
xor
mov
cmp
xchg
pop
inc
nop
sarl
cmp
jb
adc
xchg
adc
mov
stc
jno
lds
push
sub
mov
mov
xor
mov
adc
jb
rcl
pusha
lods
stc
fwait
sar
nop
sbb
lret
jmp
sbb
xlat
sbb
mov
insl
scas
popa
pop
mov
dec
test
daa
jno
daa
mov
lds
cmp
test
jno
add
in
rorb
mov
push
hlt
push
ds
and
push
jo
push
shlb
xchg
fcmovu
mov
push
add
sti
adc
xor
xchg
add
add
lock
in
hlt
xchg
mov
fiaddl
jg
or
loope
add
inc
inc
and
cmpsb
push
mov
cmp
inc
sbb
push
push
and
popa
rcl
adc
xorl
popf
cmp
out
and
add
frstor
addr16
mov
mov
lds
jbe,pt
mov
sub
jl
enter
loop
mov
test
xor
ss
push
stos
stos
fidivrs
dec
mov
and
sahf
mov
movsb
andb
pushf
sbb
mov
pop
xchg
push
cmp
repnz
push
dec
repz
mov
sti
jge
data16
inc
cmpsl
out
aaa
lcall
push
scas
rclb
fmuls
lcall
clc
cmp
imul
adc
stc
mov
insb
std
xor
jb
push
xchg
data16
jmp
sub
and
out
add
adc
dec
mov
ss
xor
lods
jns
push
adc
or
push
mov
aaa
in
rolb
insl
dec
pop
clc
jae
sahf
les
iret
ret
push
jp
call
lahf
ds
sbb
arpl
fs
xchg
lds
adc
out
push
jnp
xor
ja
jecxz
jmp
jb
or
aaa
jo
fmul
out
int3
or
mov
push
out
icebp
push
cmc
popf
xorl
imul
in
mov
pop
mov
fs
sbb
adc
stos
or
cmp
and
mov
cltd
stc
fsubr
int
mov
mov
or
xchg
into
icebp
gs
in
jg
idivl
pop
mov
fbstp
and
or
jg
lcall
xlat
rorb
and
into
aad
dec
dec
cmp
imul
mov
mov
dec
stos
mov
bound
sarl
pop
out
mov
dec
scas
push
sub
in
sbb
testb
outsl
in
add
sahf
and
inc
ret
ss
je
mov
mov
pop
or
xor
fcomp
add
into
or
clc
sarl
das
xchg
dec
mov
scas
jae
sub
sti
push
mov
jle
das
lret
sbb
mov
daa
mov
xchg
cmp
int
rcll
cmp
xlat
fucomi
rcrl
xchg
dec
in
je
add
fstpt
shr
xchg
xchg
adc
sbb
repnz
out
int
mov
pop
xchg
mov
jp
clc
sub
mov
lcall
popf
adc
cmpsb
inc
mov
pop
inc
stc
cltd
divb
xorb
and
jecxz
repnz
repz
dec
ja
pop
lret
cmp
ja
sbb
and
sub
jg
test
jne
mov
xor
fwait
pop
popa
mov
test
push
dec
mov
mov
add
lock
pop
sub
jecxz
icebp
jo
shrb
mov
lahf
adc
arpl
push
inc
sub
adc
sub
mov
or
repnz
and
add
cmpsl
shlb
inc
sti
mov
pop
mov
xlat
std
ja
jne
lea
mov
mov
adc
cmpsb
daa
call
cwtl
test
push
fcom
cwtl
pop
dec
sub
dec
ds
jo
mov
jnp
adc
mov
dec
pushf
jecxz
jmp
pushf
adc
sub
adc
mov
jbe
dec
mov
jo
mov
aam
loopne
jmp
and
daa
cmpsb
stc
in
inc
pop
outsl
jmp
jg
movsl
rcr
xchg
push
enter
fwait
lods
lods
cmp
or
repnz
xchg
addr16
xor
fsubs
mov
test
push
insl
fdivrl
insb
xchg
aad
addr16
cmp
inc
jo
sbb
mov
jl
push
inc
int
lahf
mov
rorb
iret
test
daa
gs
adc
jns
mov
and
ljmp
push
mov
in
test
ret
scas
mov
loop
rcrl
xor
push
mov
cwtl
sub
pop
outsb
shl
mov
cwtl
xor
call
push
loopne
or
push
movsl
mov
fcmovb
pusha
rorl
out
rclb
and
fimull
imul
dec
ljmp
shlb
push
out
jle
out
inc
out
cmp
in
cld
push
mov
sub
pop
lcall
mov
push
or
xchg
adc
out
jle
inc
out
adc
jae
mov
jge
cmpsl
xchg
dec
jno
cwtl
sbb
jle
or
rcl
add
xor
jo
xor
xchg
in
out
and
or
push
cmp
xor
mov
or
sbbb
and
cmpl
push
xor
cltd
pop
and
xchg
je
inc
lods
lret
int3
mov
cld
stos
outsb
movsl
xchg
xchg
pop
adc
mov
les
cmp
scas
jbe
jl
xor
aam
adc
cmc
clc
loope
xor
adc
fiaddl
movsb
mov
lods
es
insb
ja
sub
dec
adc
icebp
sub
jge
adc
or
xor
data16
test
imul
movsb
mov
mov
push
stos
and
adc
js
loop
dec
add
cltd
pop
sahf
mov
cmpsb
fdivrp
pop
nop
mov
pop
and
inc
sub
movsb
mov
cmpsl
fsubs
in
mov
out
clc
out
or
xchg
mov
jmp
loopne
xlat
xor
sbb
jno
popf
subl
jb
push
inc
in
mov
sarl
cmp
js
in
sbb
ja
es
in
mov
xlat
or
xlat
int3
xor
sti
and
stc
jo
fmuls
xor
inc
scas
data16
pop
dec
add
test
pusha
js
inc
mov
test
pop
mov
add
push
ret
sbb
ret
inc
pop
iret
sbb
jecxz
pusha
inc
dec
lock
push
sahf
cmpsl
outsl
mov
add
push
or
fiaddl
inc
or
outsb
mov
mov
dec
lcall
jl
cmp
es
minps
or
mov
dec
rorl
sub
fdivrs
jp
dec
je
aad
aas
fisttps
mov
lock
stos
shr
popf
dec
mov
xchg
sbb
xchg
jno
xchg
arpl
add
mov
fsub
jmp
movsl
pushf
push
mov
cltd
je
mov
test
jl
or
ret
imulb
faddl
jo
jmp
ds
insb
std
lret
fdivs
mov
mov
cmpsl
and
jg
rep
mov
push
mulb
cmp
pop
cwtl
add
repz
shll
jge
pop
repnz
jne
popf
jecxz
pop
out
pop
mov
push
pop
fistpl
test
pop
test
or
and
out
aaa
mov
adc
mov
add
std
jo
test
jl
ret
andl
add
inc
and
int3
xlat
jno
pop
xor
pop
mov
outsl
sarl
imul
add
ljmp
mov
cmp
inc
xchg
cmc
push
outsb
xor
push
cmp
xchg
sub
test
push
aad
xor
cmp
lret
jge
dec
call
jp
sub
and
cwtl
cmovb
mov
loope
mov
dec
and
test
xchg
mov
decb
xchg
shl
ljmp
es
fdivl
in
jns
repnz
adc
mov
add
mov
mov
dec
push
xchg
cmpl
and
nop
test
xor
ja
js
jbe
pop
sub
rol
lods
ss
dec
and
bound
enter
pushf
or
inc
dec
lods
pop
pop
stc
and
push
add
add
mov
shr
decl
out
fcomp
push
iret
jo
add
dec
js
sub
push
pop
and
dec
gs
fs
push
or
popf
inc
cmc
test
enter
cld
imul
sarb
pop
adc
inc
sub
jns
adc
inc
insl
xor
mov
aam
in
lcall
ficoms
adc
ljmp
push
insb
std
lods
data16
sub
cli
jae
mov
cs
jle
clc
icebp
inc
cmpb
sub
pop
out
adc
scas
insb
das
mov
mov
mov
arpl
push
in
pop
mov
xchg
push
bound
add
xchg
inc
lret
jne
adc
movsb
stc
pop
add
setno
and
cmp
scas
imul
add
mov
adc
out
push
push
jno
andb
cs
push
cmp
int
push
jne
dec
jg
pop
mov
pop
jmp
mov
loope
loop
jo
sarl
mov
cmp
nop
mov
dec
aad
add
cltd
je
out
cmc
mov
aad
popf
xor
adc
cli
ss
je
push
sbb
and
cmpsl
cwtl
cmp
xchg
xchg
mov
insb
sbb
xchg
cs
inc
adc
out
cltd
xor
repnz
cltd
icebp
adc
dec
pusha
jl
incb
jge
aad
xor
les
popa
cld
test
xor
inc
scas
nop
fcomps
adcb
rcrl
mov
fldenv
and
adc
or
sbb
jnp
stos
mov
pop
pop
and
enter
in
std
fldt
sarl
es
ss
call
sub
mov
adcl
push
ret
lcall
dec
sbbl
sub
ss
cld
icebp
hlt
mov
std
movsl
mov
xor
test
int3
adc
mov
xor
or
mov
mov
aad
cltd
mov
imul
in
cmp
xor
dec
or
test
shlb
push
mov
and
out
xchg
leave
outsl
pop
lock
insl
fsubp
mov
test
cwtl
xchg
bound
dec
loope
mov
jmp
mov
xor
push
sti
push
je
mov
pushf
fdiv
test
repz
fcmovnu
adc
pop
pop
bnd
pop
in
dec
out
adc
mov
mov
jae
hlt
mov
cwtl
arpl
mov
fcompl
inc
mov
sub
fistpl
je
fildl
jae
mov
and
hlt
clc
or
addr16
xchg
inc
jmp
jnp
mov
icebp
jmp
mov
imul
xchg
es
ffree
mov
sub
lret
imul
leave
jae
push
cmp
ficompl
and
loop
mov
pop
jno
mov
push
xchg
lcall
xchg
adcb
lret
mov
ljmpw
jnp
lahf
ret
xchg
mov
adcb
int
sbbb
inc
mov
add
xor
add
arpl
scas
js
out
or
mov
das
sub
or
fs
es
push
subl
test
push
xchg
sub
mul
jl
add
fwait
pop
notb
mov
sub
ja
push
push
pop
fs
push
mov
adc
inc
adc
outsl
loopne
pop
push
mov
popf
fwait
rolb
dec
jl
aaa
test
pop
adc
stos
inc
out
sub
movsl
lcall
dec
mov
icebp
les
les
es
or
arpl
push
lods
xchg
pop
arpl
inc
sbb
push
outsl
aad
cwtl
sbb
lds
stc
jg
jge
push
jge
xchg
lods
jae
adcb
in
and
lcall
stc
sub
push
sbb
push
push
add
lods
loopne
loope
outsb
or
fstpt
mov
dec
adc
jecxz
ficompl
jp
pop
jbe
sti
data16
jl
scas
inc
adc
mov
fildl
and
addb
fbld
mul
sub
cmp
and
pop
mov
cltd
adc
mov
mov
lahf
pop
sbb
xor
fdivrl
mov
fcoms
push
loopne
pusha
push
xorl
jmp
jbe
mov
shl
xchg
xor
dec
dec
aam
shld
sarb
pop
es
mov
sbb
and
and
das
ds
xchg
cmpsl
jns
mov
pop
lds
xor
mov
mul
and
inc
cmc
imul
ja
repnz
stos
fisttps
aad
out
iret
xor
test
mov
shll
pop
jecxz
push
jl
cmp
mov
loope
loopne
loop
jp
mov
sbb
xchg
or
jg
loopne
push
xchg
insl
ficoms
loop
dec
andl
cmp
dec
push
rcll
cli
ss
jo
add
pusha
mov
add
dec
arpl
test
iret
cmc
scas
cmpsl
dec
setge
pop
loope
cli
or
or
out
adc
xor
jmp
mov
mov
sbb
cmp
hlt
lea
mull
mov
mov
dec
lds
notl
es
roll
lcall
adc
jo
adc
push
adc
cmp
aaa
adc
stos
aam
sti
adc
inc
jg
rolb
scas
mov
outsb
jb
andl
pusha
pop
pop
movsb
mov
cmpsl
lcall
es
js
inc
call
cmp
sub
pop
aaa
mov
mov
xchg
mov
repnz
dec
cmp
sarb
rcrb
loop
sbb
push
arpl
test
pop
mov
cmp
mov
push
push
rcll
sti
sahf
mov
movsb
sub
fsqrt
add
aaa
js
jne
hlt
jno
shlb
stos
dec
sbb
pop
divl
xchg
mov
insb
sbb
les
xor
pop
fadds
push
lds
es
cld
fwait
jnp
xorb
xor
es
imulb
lock
or
es
loopne
mov
xor
mov
lahf
add
cmp
stc
pop
cltd
push
mov
fs
mov
push
xchg
mov
in
shrb
pop
sti
shl
cmpsb
leave
jns
mov
mov
jecxz
lods
mov
xchg
jb
xchg
aad
push
cmp
lret
mov
cmp
pop
push
clc
cmp
in
add
ds
add
sub
dec
jno
lret
pop
ljmp
lea
cmpsb
mov
mov
lret
aas
stc
out
fimuls
shrb
xchg
loope
dec
cmp
mov
mov
lcall
fcompl
lock
add
fstl
in
scas
jb
jb
cmp
loopne
mov
jle
cs
inc
pmulhuw
cld
les
sub
mov
pop
lock
jne
and
xchg
fs
stc
sub
sub
call
cmc
stc
mov
lea
jmp
aaa
nop
xor
nop
ljmp
insl
xor
xor
out
fldenv
les
mov
add
cmpsb
loopne
cld
sti
push
jp
cmc
adc
mov
lret
inc
cmp
inc
xchg
orl
movsl
sub
movsl
movsb
jp
jecxz
ror
imul
sbbb
mov
negl
sub
mov
aas
arpl
xorl
xor
push
inc
inc
out
mov
or
mov
pusha
push
out
mov
xor
or
push
cltd
movsb
mov
sbb
scas
xor
or
ror
sbb
dec
add
lods
push
push
lock
lods
inc
or
mov
jmp
inc
inc
shl
in
out
xor
xcrypt-ofb
sahf
jle
inc
sub
pop
mov
inc
xchg
es
jmp
sbb
jnp
inc
xchg
mov
mov
inc
bnd
xchg
cmp
loope
mov
xor
or
sbb
mov
ja
push
cmp
xchg
or
fldenv
in
in
lods
jg
pop
jmp
in
fcmovnb
cs
and
lods
xchg
jge
pop
arpl
mov
stos
pop
adc
or
fldenv
push
int
adc
fistpl
pushf
movb
pop
pop
push
push
fmul
mov
jmp
xchg
xchg
daa
test
xorb
or
jb
mov
push
mov
pop
lret
add
imul
inc
fs
push
mov
icebp
and
fimuls
cltd
ja
stos
lea
cmp
and
in
das
ds
lret
ljmp
push
mov
ds
subb
in
lods
mov
xchg
lods
jg
sub
das
lea
int
loope
fadds
cld
jno
push
lret
mov
fs
sbb
mov
mov
xor
sti
test
in
pop
mov
cmp
hlt
add
bsf
push
and
scas
ret
cli
xor
mov
stos
dec
icebp
aas
push
and
and
pusha
gs
mov
movsb
sbb
outsl
mov
add
dec
cmp
xor
lods
inc
sbb
sbb
addr16
int
sbb
adc
sub
mov
and
inc
popa
mov
sbb
xor
stc
fistpl
insl
mov
sti
mov
mov
fdivl
dec
insb
xlat
or
jbe
adc
add
leave
lods
push
jg
sti
pop
jnp
sbb
cmovg
sahf
in
xchg
adc
lods
enter
out
mov
inc
addr16
cmc
and
push
mov
shrb
xor
fs
mov
mov
push
pop
icebp
out
into
dec
jbe
cltd
mov
cmp
add
sub
cmp
cmp
out
dec
insl
or
cmp
lods
cmp
cld
stos
bound
xchg
pop
pop
inc
fcomps
bound
mov
movntq
xor
stos
sahf
mov
cs
sub
mov
xchg
negb
xlat
std
dec
and
out
xchg
and
dec
mov
mov
aad
mov
push
std
addl
ja
xor
mov
sbb
mov
xor
push
insl
dec
jb
jnp
dec
mov
cltd
dec
push
pop
insl
stos
pop
call
and
subl
inc
int
ss
mov
aas
mov
jns
dec
sub
fs
mov
xor
fs
sahf
xor
mov
xchg
rcll
jmp
cs
sbb
and
push
jbe
cmc
push
sbb
iret
fs
adc
push
add
cmpsb
lahf
dec
not
outsb
xor
call
into
push
sbb
mov
pop
jg
xchg
mov
mov
jge
dec
xchg
jnp
sub
mov
dec
push
pop
mov
mov
sub
inc
jnp
jle
cld
jl
jo
out
inc
inc
scas
insb
jb
les
or
scas
mov
shr
rorb
adc
cwtl
call
xor
ljmp
int3
dec
push
inc
mov
call
cmp
inc
adc
dec
sub
push
aam
push
ljmp
xchg
daa
mov
in
fldt
pop
scas
arpl
pop
sbb
iret
cmp
xchg
pop
cmp
mov
push
fisubs
mov
pop
and
push
xor
arpl
cmp
mov
jg
clc
ljmp
sbb
repnz
and
shrb
repnz
jg
push
sbb
and
into
adc
test
ds
lods
adc
iret
cwtl
shrb
mov
jp
arpl
add
test
fs
rcll
push
aas
inc
nop
ja
cmp
sbb
shlb
test
aam
lds
push
and
clc
out
loopne
adc
subl
popa
hlt
lahf
lods
or
jbe
xchg
aaa
jle
xor
jbe
scas
add
inc
cmp
push
adc
inc
jg
jne
mov
cmp
popa
cwtl
test
pop
stos
les
cmp
arpl
sar
push
jo
sti
and
enter
mov
outsb
fisttps
aaa
jbe
cmp
imul
notl
movsb
or
or
mov
loopw
mov
mov
xchg
pop
imul
testb
lret
add
mov
jae
mov
mov
push
aaa
lcall
cmp
mov
pop
mov
testb
bnd
movsb
jne
sbb
inc
mov
jmp
mov
sbb
jmp
mov
out
sub
pop
pop
jp
ljmp
dec
icebp
leave
mov
adc
mov
subl
cld
adc
mov
pop
aas
clc
clc
add
mov
fstpl
sbb
jae
or
sbb
dec
or
sub
lcall
lret
push
ret
lret
adc
sbb
repz
xchg
ret
movsl
les
into
enter
pop
mov
inc
test
jmp
push
sbbl
gs
cmc
sarl
dec
pop
xor
not
push
pop
cmpb
jecxz
js
aaa
push
inc
mov
mov
ljmp
inc
push
imul
pop
in
mov
mov
push
sti
mov
rclb
in
lea
iret
add
pop
inc
daa
adc
scas
repnz
pop
pop
test
imul
dec
cmpl
mov
movsl
cmpb
outsb
mov
pop
jl
mov
xor
les
fdivr
xchg
xor
jns
aam
aas
pop
test
and
scas
ret
push
lea
lcall
lock
xor
pop
mov
xchg
cmpsb
lds
js
push
sub
sub
and
mov
into
pop
mov
xor
repnz
sbb
sbb
fdivp
mov
pop
sarb
and
scas
outsb
jne
leave
inc
cmpl
stc
mov
xor
add
sub
mov
sti
xchg
les
jne
mov
hlt
movsl
jne
cmp
add
leave
in
sub
mov
xchg
fcoms
pop
sbb
push
stos
dec
sub
sub
iret
and
xlat
sarb
bound
das
jle
xor
cmp
ds
cwtl
mov
mov
aad
loope
and
adc
dec
lret
mov
js
iret
mov
inc
pop
and
scas
mov
dec
xchg
mov
mov
mov
cs
fsubs
call
loope
xchg
test
sub
fwait
mov
or
and
push
stc
xchg
jle
insl
test
rorl
cs
sbb
xchg
aad
push
add
jno
mov
or
xor
rorb
sahf
adc
leave
imul
cmpsl
mov
jecxz
leave
xchg
mov
idivb
push
leave
pop
out
insb
adc
mov
lahf
xor
lcall
mov
mov
mov
dec
or
adc
push
pushf
inc
cli
int3
pop
push
stc
push
in
mov
cmp
sarb
faddp
add
lret
sti
mov
icebp
mov
leave
inc
ljmp
pusha
xchg
aam
leave
cmovns
fdivrl
add
jl
lock
or
adc
inc
stc
and
movsb
fmuls
jg
xchg
mov
jo
das
sbb
in
imulb
add
scas
push
movsl
mov
mov
cltd
stos
imull
mov
mov
add
iret
mov
lds
sbb
mov
imul
push
or
push
fisubl
mov
mov
gs
loope
loop
cmc
repnz
add
popa
cmp
push
and
test
pop
inc
xchg
je
cmpsl
xor
shl
jle
xor
addr16
lods
popf
add
ret
aad
sarl
inc
mov
jp
lock
gs
fildl
enter
dec
mov
ljmp
and
jmp
jge
push
enter
sub
imul
mov
adc
xchg
pop
cmp
cmpsl
lea
in
pushl
sub
jne
inc
xor
jnp
fdivrs
pushf
jnp
inc
adc
daa
push
ss
clc
dec
nop
inc
xchg
es
pop
cltd
push
dec
fdiv
xchg
or
ficoml
push
sub
stos
popl
movsl
lcall
pop
lret
fnsave
sub
mov
iret
jnp
add
xor
push
bound
add
mov
or
sbb
in
scas
ljmp
mov
mov
push
pop
lds
add
adc
mov
loop
popf
popa
jbe
out
das
push
add
sub
mov
ficoms
fstl
lret
inc
xor
adc
pop
fxch
lods
rcrb
insb
loope
lret
shl
cmp
pop
pop
ljmp
xchg
aas
fsubrp
test
loop
jge
cmpb
call
adc
push
loope
test
xchg
mov
cmc
mov
xchg
repnz
call
fmul
mov
lret
rorb
cli
filds
jmp
aas
inc
jg
xchg
pop
fnstenv
adc
stos
xor
ret
sbb
sub
sub
pushf
leave
push
push
icebp
loope
xchg
sub
xor
arpl
popf
shlb
hlt
pushf
dec
jg
cmp
flds
dec
loopne
and
sub
cmp
jne
jbe
jns
fisubrs
clc
pop
push
push
and
push
mov
mov
packuswb
loope
sbb
push
inc
mov
pop
repz
jbe
inc
mov
sbb
or
or
xor
sub
push
subb
adc
scas
xor
mov
sti
shrl
aad
pop
fisubrl
xor
imul
fimull
xchg
sbb
lods
jne
xorb
int3
add
imul
rclb
movsb
icebp
mov
mov
dec
sbb
pop
mov
mov
fsubp
mov
cmp
and
int
fidivl
xlat
pop
mov
sti
dec
fidivrl
loopne
jge
out
mov
jecxz
cmp
cmc
and
pop
push
mov
orb
jo
push
enter
cs
push
jno
pop
rol
fimuls
rcll
lret
pop
xchg
popa
sbb
cltd
sbb
rol
jle
adc
dec
lock
shll
popf
sbb
mov
adc
push
cmp
lods
mov
xchg
push
xchg
mov
popf
sbb
cmp
ss
mov
popa
loopne
pop
ret
sub
cmp
cld
dec
cli
or
in
addr16
cs
dec
shlb
jg
mov
jmp
ret
lock
daa
pop
sbbb
cmc
xor
dec
lret
jno
cmp
jae
pop
pop
loopne
push
sub
add
xor
std
sahf
addb
dec
cmp
adc
cld
js
shlb
mov
jecxz
sbb
and
das
das
xchg
arpl
add
bnd
dec
cmpsl
test
loop
cmp
push
lods
iret
jb
movsl
mov
jmp
and
mov
jns
push
cmp
bound
aam
mov
hlt
add
insb
cmc
daa
xor
enter
pop
shr
and
or
dec
sub
ljmp
jo
out
fisubrl
shr
lea
xchg
xor
imul
or
lret
addr16
sbb
scas
stos
stos
ret
pop
nop
ret
ljmp
movsb
add
out
jecxz
insl
addr16
stc
mov
add
pop
xchg
jne
xchg
jne
jle
cmpsl
fs
push
mov
xchg
fldcw
aam
cmp
xchg
rcrb
iret
dec
leave
pop
dec
jo
sbb
jecxz
inc
cmp
cwtl
xchg
fs
enter
stos
test
aad
repz
cmp
out
cmp
xchg
sbb
iret
repnz
jge,pn
lods
ja
insl
dec
movsl
push
cwtl
xchg
stc
mov
je
inc
dec
cwtl
data16
daa
sub
mov
movl
fnstsw
and
pop
insl
or
loope
stos
jmp
sbb
xor
pop
xchg
dec
sub
pop
pop
lahf
inc
test
jg
push
aaa
dec
cmpsl
mov
mov
inc
pushfw
std
lret
jl
push
dec
or
sub
fdivr
xchg
xchg
mov
pop
stos
push
jp
adc
jecxz
pop
stos
scas
cmpsb
out
fimull
adc
cwtl
sub
pop
jl
jne
cwtl
in
mov
dec
push
jp
sub
fs
pop
dec
test
jb
cmpsl
arpl
fsubrl
add
sub
stos
clc
or
jne
adc
jae
stos
dec
lret
push
outsl
je
push
in
test
adc
xor
js
pop
push
lock
and
dec
enter
jae
orl
ret
push
cmpb
jb
dec
and
out
lcall
pop
inc
jg
cmp
mov
out
cmc
iret
xchg
sub
dec
dec
push
adc
jecxz
arpl
inc
pushl
xchg
stos
sbbl
into
xchg
bound
push
movsl
cltd
xlat
mov
adc
daa
and
outsl
inc
sahf
jb
mov
sbb
in
outsb
push
or
add
in
or
mov
sub
adcb
dec
int3
scas
aad
imul
test
and
sbb
test
ficompl
sbb
add
sbb
or
mov
mov
jne
mov
loope
sbb
pop
cs
insb
movsl
adc
push
repz
inc
mov
cld
cmp
lock
dec
stos
rcll
mov
or
test
sub
pop
jnp
lcall
push
fistps
test
xor
pop
xchg
dec
dec
repz
mov
rolb
lahf
fistl
loope
popa
add
add
dec
outsl
mov
in
mov
jmp
mov
mov
cmp
add
pop
push
arpl
cmp
aad
mov
roll
push
sub
cmpsl
enter
sarb
push
mov
pop
ficoml
lahf
nop
loopne
jp
or
pusha
addr16
inc
movsb
mov
movsl
mov
stos
cltd
mov
mov
nop
push
mov
sbb
jns
mov
lahf
inc
pop
xlat
add
add
sbb
lods
push
adc
lret
jmp
fsts
stc
test
and
enter
add
movsb
call
add
pop
out
arpl
cmp
jae
xchg
or
mov
fsubrl
les
sub
mov
dec
cld
mov
dec
fimuls
sbb
cmp
enter
cmp
adcl
xor
test
ljmp
and
aam
in
mov
cmp
repnz
sub
pushw
in
mov
mov
or
mov
mov
scas
adc
popa
test
lahf
call
sbb
jo
jl
inc
call
sub
pop
popa
cmp
test
mov
and
aam
jp
push
notb
scas
mov
push
rcll
adc
sbb
sub
dec
mov
insb
loop
xor
xor
pusha
adcb
or
pop
push
adc
sti
push
pop
pop
sub
rcrl
jnp
std
xchg
push
push
xchg
pop
shrl
aam
pop
mov
jge
mov
pusha
dec
or
rolb
dec
enter
mov
stos
or
test
adc
push
inc
ror
addr16
xor
or
add
movsb
push
repnz
jo
push
jp
mov
push
cli
sub
js
push
dec
jb
adc
popa
jo
out
lcall
xchg
add
test
jo
scas
fs
fwait
sub
adc
sub
xor
jbe
mov
xlat
das
repz
push
jge
jl
pop
mov
cs
sbb
fs
pop
mov
jae
ds
mov
imull
imul
dec
inc
xchg
gs
xlat
pop
dec
push
push
add
sbb
jo
and
push
pop
add
insl
nop
or
out
sbb
and
xchg
insb
es
pop
jp
push
cmpsl
jno
mov
fs
test
pop
inc
ja
shll
stos
es
outsl
xlat
pushf
in
mov
test
jle
adc
in
push
mov
push
bound
jo
sarl
shr
jmp
popa
addl
ja
into
xor
cwtl
xchg
jecxz
push
imul
cmpsb
aas
into
dec
mov
pop
test
icebp
xchg
pop
out
imul
mov
mov
jno
xchg
outsl
mov
or
into
sub
or
insb
fisttps
cmpsl
out
es
imul
je
inc
scas
xor
stc
pushf
int
fsts
es
aas
xchg
jb
adc
fdivrp
sub
negb
sub
adc
nop
jge
push
push
movsl
sub
daa
ret
and
pop
lock
test
xor
add
jp
ret
mov
push
stc
xchg
gs
in
and
aaa
dec
sub
call
jbe
jmp
aaa
negl
jmp
lea
xor
cld
mov
add
std
clc
clc
loopne
push
sbb
insb
and
push
cwtl
inc
cwtl
inc
or
mov
lea
mov
xor
inc
and
dec
inc
sarb
sti
call
xchg
push
lock
sub
jecxz
mov
iret
and
loopne
jns
xchg
ss
xlat
mov
push
cmp
imul
cmpsb
fimull
sbb
bswap
pop
dec
shlb
sbb
mov
scas
and
pop
lock
xor
jg
out
pop
scas
call
bound
in
ret
fnsave
sahf
jp
adc
stc
outsb
jnp
testl
outsl
pop
inc
mov
mov
or
cmp
jne
xlat
inc
rclb
aaa
xor
xor
jno
daa
gs
sarb
jae
dec
cwtl
adc
jno
loope
inc
push
es
and
das
jp
cwtl
outsb
addr16
sbb
push
push
fisubs
sbbl
fists
out
hlt
mov
aam
mov
int
sub
lret
mov
xchg
mov
mov
sub
or
jns
jae
add
repz
mov
xchg
push
std
fdivrl
mov
xor
repnz
in
jmp
cmpl
push
xchg
xchg
les
sub
or
xor
out
dec
in
xchg
lods
push
fwait
cmp
imul
sbb
cmp
jns
push
aad
push
sub
xchg
movsl
pop
repnz
lret
pop
sbb
fldl
jg
dec
addl
shll
lret
mov
scas
rcrb
std
sub
lods
adc
fldenv
int
mov
ret
xchg
mov
cltd
lret
test
jg
push
sub
sbb
push
mov
add
cwtl
mov
mov
sbb
and
sub
jbe
mov
ss
sbb
in
pop
bound
cmp
lret
push
jle
pop
iret
xchg
xchg
popa
jno
sahf
dec
or
xchg
jb
int3
es
adc
movsb
loopne
adc
sbb
adc
dec
push
inc
jne
mul
sub
clc
out
outsl
or
ficomps
shll
lds
idivb
push
pop
pop
cmc
test
cmp
lret
lods
xchg
out
test
inc
loop
inc
fimuls
cmp
sub
cwtl
sbb
enter
cmpsb
xchg
sbb
mov
sub
xchg
shrl
mov
push
sub
add
movsl
sar
std
sahf
bound
scas
jb
xchg
call
mov
sbb
pop
lahf
jmp
lock
scas
int3
jle
ds
stc
xor
testl
push
and
subb
out
push
ja
mov
xchg
call
add
inc
mov
and
cmc
shll
push
test
js
push
sbb
mov
lret
add
movsl
jns
into
jnp
sub
mov
data16
push
xor
cmpsw
sahf
sbb
jecxz
sbb
xor
jne
xchg
out
pop
inc
jbe
cmpsl
push
inc
mov
or
sub
jb
pushf
mov
inc
das
stc
fcmove
stc
rolb
loope
sub
jnp
cs
xchg
loope
add
xor
aas
push
stos
mov
jbe
insl
mov
out
in
lret
cmp
sbb
call
pop
mov
fs
add
sahf
inc
adcl
stc
add
xor
push
cmp
mov
mov
rclb
and
je
in
push
inc
jns
mov
cmp
sbb
adc
jae
jl
mov
and
xchg
jbe
icebp
and
cs
in
movsb
xor
out
cmc
mov
ss
mov
lcall
leave
dec
stc
filds
stc
push
outsl
cmp
mov
xor
addr16
xchg
fisttpll
fwait
add
mov
outsl
lock
mov
lcall
push
push
sub
lods
daa
mov
cmp
and
pop
inc
mov
shrb
and
je
sahf
clc
lods
fisubs
jg
ss
or
fidivrl
out
bound
pop
ret
push
test
jmp
arpl
call
push
sub
sub
out
sbb
fwait
js
stos
rorl
rorb
les
xlat
cmp
add
rorb
push
daa
and
in
addl
adc
fisubs
mov
mov
and
lcall
fcmovnb
lods
jno
rcrl
das
jnp
scas
dec
sbb
fwait
and
pop
jns
imul
xor
jp
loop
add
rcrb
pusha
out
sbb
ljmp
fbstp
sbb
mov
scas
mov
int3
je
sbb
lret
mov
mov
and
pop
shll
cmp
aaa
dec
xor
leave
into
dec
mov
in
loope
sub
dec
adc
sbb
jmp
aam
into
cmpsb
mov
jge
inc
jecxz
adc
mov
adc
dec
mov
imul
mov
jge
sbb
sbb
pushf
lea
cmp
push
stc
or
xor
test
pop
aas
sub
cmpsb
lock
sub
pop
mov
mov
push
cmp
es
xlat
jb
and
sub
rclb
push
mov
in
add
test
push
loope
dec
fldl
cwtl
lret
loopne
aam
aas
fwait
cmp
jge
and
es
cltd
xchg
jle
rorl
xchg
xchg
sbb
adc
fistpll
jns,pt
pop
lods
jbe
xchg
dec
data16
in
or
popa
xchg
testb
and
add
hlt
xchg
outsl
dec
sub
in
mov
imul
fdivs
push
mov
push
cmpsb
mov
push
sbb
xchg
and
push
out
ljmp
lcall
idivl
out
aaa
bound
aad
ror
iret
add
mov
push
mov
adc
int
hlt
cld
popa
scas
enter
adc
cmp
and
pop
inc
stos
outsl
call
sbb
adc
mov
inc
mov
leave
pushf
xchg
outsb
insl
imul
xchg
cmp
or
out
jno
lea
bound
mov
stc
lods
push
mov
leave
jle
xchg
call
jnp
xor
lret
pop
xchg
fisttpll
add
shll
xchg
repz
and
mov
aaa
add
xor
test
jno
jl
in
popa
mov
add
movsb
inc
ret
pop
cltd
push
xlat
fs
ret
cmp
and
pushf
push
std
pop
jbe
cltd
push
lock
movsb
movsb
mov
fstl
mov
shrl
add
hlt
pop
cmp
jns
or
scas
xchg
cmpsb
test
mov
shll
mov
imul
add
imul
aas
ficompl
popa
lea
dec
out
adc
mov
stos
psubsw
dec
mov
into
inc
push
jge,pn
sbb
pop
jp
fs
inc
and
inc
add
add
cmc
adc
pop
ficomps
jne
jne
rcll
icebp
mov
xor
xchg
mov
pusha
ljmp
jns
mov
je
xchg
mov
xor
int3
fcomps
mov
mov
xchg
xchg
dec
imul
inc
scas
cli
stc
repz
cmp
mov
notb
cld
sbb
mov
popf
xor
clc
lock
mov
cmp
repz
cmp
jns
ljmp
aaa
ds
shll
scas
psubd
lcall
xor
decl
std
xchg
and
fidivrl
push
and
sub
shl
push
pop
sti
mov
mov
aas
in
imul
shlb
imul
cwtl
dec
stc
sbb
mov
pop
push
adc
stc
xor
mov
xchg
xor
jle
xchg
or
out
or
or
addr16
popa
cmpl
cmp
jne
sbbb
pop
mov
lret
fadds
out
aas
xchg
lret
sbb
adc
loopnew
into
int3
sahf
lea
cltd
xor
test
imul
inc
jb
andb
addr16
lahf
and
xchg
sbb
and
sub
mov
lahf
inc
movsb
icebp
outsl
loop
sbb
add
sbb
jno
pop
jnp
bound
loop
sub
cs
daa
pop
test
stc
mov
add
jmp
lea
mov
cmp
xchg
fists
and
mov
mov
rclb
ret
pop
ja
stc
int3
and
aam
shlb
sub
or
addr16
or
pop
fs
cmpsl
inc
xchg
mov
mov
mov
pop
jns
adc
out
jp
push
and
fdivr
pop
push
or
xor
es
mov
cs
sbb
test
mov
div
pop
sub
ds
cltd
xor
cmp
xchg
cwtl
dec
test
mov
sub
sub
lods
mov
and
pop
ljmp
sub
shlb
das
pop
icebp
mov
jmp
mov
xor
jbe
push
addr16
scas
cld
je
or
imul
pop
xchg
fstl
xor
jno
jo
mov
adc
in
push
stos
das
inc
mov
mov
or
in
cmp
cltd
loop
sar
mov
decb
cmpsl
iret
leave
jmp
mov
iret
jnp
jle
xchg
jg
pop
pcmpgtd
mov
inc
mov
jb
test
andb
dec
arpl
js,pn
sbb
lods
pop
inc
arpl
add
push
dec
xor
xchg
call
pop
push
fistpl
add
mov
xchg
cmc
xor
sahf
jle
subb
scas
jmp
stos
and
mov
imul
out
push
fists
jmp
push
sub
xchg
xor
or
xchg
push
cmp
add
mov
aas
loope
outsl
daa
call
push
lea
dec
sti
dec
sbbb
sarb
int
inc
stos
sbb
adc
out
xor
mov
subb
mov
mov
imul
shll
jo
mov
sbb
test
adc
fs
jbe
cmp
iret
dec
mov
and
movsb
js
pop
movsb
push
and
mov
mov
insl
fildl
xchg
and
fcmovb
out
mov
repz
add
dec
ja
mov
and
fstp
cmp
adc
cmp
and
push
pop
sub
jo
imul
mov
xchg
popl
imul
xlat
dec
push
int
cwtl
jbe
mov
lock
in
mov
mov
cmp
std
in
cltd
inc
popa
cmpsl
daa
call
jge
dec
sbb
dec
hlt
mov
cmp
inc
xchg
jge
idivl
dec
insb
scas
aaa
daa
or
and
imul
rcrb
andb
lea
roll
xlat
addr16
andb
sub
push
cltd
mov
fsubs
cmp
iret
jp
add
psubq
jno
pop
clc
mov
pop
pop
ficompl
push
add
in
adc
sbb
neg
lret
jo
out
lods
repnz
cli
xlat
test
pushf
adc
jnp
xchg
and
cmp
or
push
stos
and
jle
stos
dec
push
dec
imul
lahf
aad
aad
mov
mov
repz
lret
dec
adc
push
jae
insb
mov
adc
sub
mov
pop
sub
adc
into
jno
or
fldpi
jle
xchg
decb
mov
std
mov
or
lahf
mov
sbb
out
push
pop
mov
push
inc
lahf
std
and
push
inc
cmp
xchg
pop
xchg
out
add
inc
outsb
sarl
or
push
and
mov
xor
dec
leave
test
push
and
fsubs
xor
lret
push
test
sub
ljmp
outsb
popf
push
cmpsb
cmpsb
cmpsl
jae
ficompl
jo
lahf
stos
pop
sbb
xor
mov
inc
pop
ss
ret
sub
mov
lods
jmp
andb
rolb
imul
mov
cmp
xchg
mov
sbb
add
jmp
int
jmp
xchg
xchg
sbb
fdivl
adc
ljmp
iret
mov
ss
sub
in
jp
push
and
or
bound
out
sbb
adc
daa
out
mov
sbbb
cld
jb
sbb
stc
jne
outsb
shr
scas
into
mov
pusha
bound
or
cmp
or
adc
add
xchg
and
xchg
inc
test
push
cs
mov
out
loop
pop
shlb
rorl
jns
imul
popa
jge
insl
cmp
leave
fwait
iret
adc
popa
sbb
adc
lret
dec
filds
xor
cmpl
jle
or
pop
clc
test
sbb
and
jmp
popf
movsl
lret
clc
stos
or
shl
inc
iret
ja
cmp
movsb
jnp
jo
outsb
popl
adc
lret
adcb
icebp
jno
pop
clc
cmp
sbb
sub
data16
mov
mov
jecxz
mov
mov
mov
lds
ret
aaa
mov
inc
cwtl
jge
and
das
gs
in
lret
in
das
jmp
mov
xchg
int3
xchg
int
xchg
jb
cs
neg
xlat
dec
pop
sub
lods
push
dec
jl
cmpsl
je
lock
jne
ss
ror
adc
test
mov
pop
lds
popl
xchg
scas
pusha
repz
cli
or
loope
jae
fimuls
ljmp
lahf
pop
mov
and
loop
dec
aas
loope
sub
dec
decb
sub
xchg
push
int3
xchg
out
sub
lods
push
iret
fimull
fucomi
dec
or
outsl
pushf
aad
loope
adc
mov
dec
xor
stos
mov
push
repnz
int3
nop
adc
add
sbb
neg
sbb
sub
lcall
call
lds
add
add
adcb
iret
sarb
pop
loopne
aad
jmp
adc
in
in
mov
lcall
test
sbb
cwtl
adc
xchg
cld
inc
or
arpl
jnp
xchg
je
icebp
dec
in
sbb
cmp
or
pop
xchg
jg
loope
fcmovnu
out
outsl
jnp
sbb
jp
jmp
jmp
and
add
stos
cmp
in
and
mov
addl
js
js
pop
or
cmp
pop
imul
jmp
loop
in
xor
insb
mov
idiv
ret
or
rorl
fwait
add
push
sbb
adc
movsl
lret
sarl
scas
adc
push
mov
or
gs
gs
push
jnp
xor
aam
ljmp
pop
loopne
pop
fwait
push
jns
dec
ret
push
push
mov
inc
mov
inc
push
xchg
mov
mov
adc
shr
f2xm1
movb
shrl
adc
jecxz
mov
jae
imul
loope
adc
jb
and
inc
aam
jle
or
dec
aaa
xor
jecxz
jmp
movsb
add
add
jno
js
cwtl
and
dec
fisttps
mov
in
call
mov
jns
push
push
inc
movsb
dec
xor
mov
pop
repnz
mov
fmuls
adc
out
pop
icebp
sbb
scas
xorb
pop
loopne
leave
in
jp
add
popa
mov
dec
pop
push
mov
cmp
dec
add
sarl
lods
call
or
arpl
jns
repz
int3
inc
push
jecxz
cmp
jmp
sahf
and
pop
ficoml
mov
clc
ds
dec
mov
cmp
cmc
call
add
popf
sub
in
aam
ret
inc
lods
xor
xchg
lahf
es
and
pop
push
pop
sbbl
sbb
dec
mov
repnz
sub
and
std
in
jl
mov
nop
test
in
push
push
sbb
jmp
cmpsb
sahf
out
mov
mov
dec
add
pop
cmp
mov
mov
xchg
push
stos
dec
or
idivl
jecxz
test
push
rolb
and
dec
cmpsb
pusha
pop
push
add
adc
inc
lahf
and
fisubrs
leave
incb
fwait
lret
pop
dec
mov
and
push
negl
jp
push
jge
push
pop
jbe
push
aam
into
cmpsl
loopne
mov
or
add
cs
mov
sbb
mov
mov
push
push
mov
repnz
loop
push
in
pop
loope
rcl
filds
ss
lahf
fists
cmp
hlt
nop
add
dec
xchg
loop
gs
add
dec
pop
adc
pop
mov
inc
or
pusha
shl
and
aad
hlt
dec
cmc
or
outsl
repnz
pop
rolb
cmpsl
punpcklbw
push
ljmp
push
in
sbb
lcall
imul
push
fwait
sub
orl
and
in
test
mov
sbb
sub
pop
movsl
in
dec
dec
cmp
sbb
and
add
pop
push
repnz
bound
xor
and
add
adc
sbb
adc
pop
pop
cs
add
or
cs
sbb
jg
loope
and
or
lods
repz
lahf
negb
mov
mov
popa
mov
sub
ja
push
cmpsl
xchg
sbb
xchg
mov
mov
loopne
movsl
mov
jae
add
sub
xchg
rcr
lods
hlt
xchg
fs
xor
lret
push
ret
mov
pop
clc
test
mov
cld
in
and
cmp
jbe
insl
or
inc
mov
cs
inc
cmp
int3
push
fnstenv
push
aad
push
mov
mov
jecxz
mov
aas
pop
and
fidivl
jg
aaa
mov
jl
add
xchg
int
call
sbb
scas
test
aaa
sub
addr16
sbb
das
inc
fdivrl
mov
xlat
int
pop
loop
and
inc
mov
outsl
xchg
mov
mov
push
fstpl
mov
sbb
cltd
out
mov
push
jo
jp
inc
popf
or
stos
and
pusha
push
adc
in
mov
push
cmp
in
push
dec
fcoml
in
stos
xchg
aas
in
rcr
leave
lds
cmp
into
xchg
mov
pusha
ret
jbe
ja
shlb
push
xor
adc
pop
rcrl
sub
mov
or
dec
xor
sbb
mov
lret
jb
lahf
sbb
ds
daa
mov
inc
ret
repnz
push
jae
je
sub
andb
pop
dec
ds
and
daa
or
mov
xchg
rorl
idiv
and
cs
inc
lahf
orb
std
adc
mov
mov
jne
inc
cld
adc
in
icebp
jl
mov
mov
fucom
stc
test
in
xchg
pop
cmp
add
mov
pop
sbb
stc
je
mov
shlb
addr16
fdiv
scas
lods
adc
add
jae
es
push
inc
mov
mov
push
mov
cmpsb
xchg
into
jae
jmp
lcall
xchg
cmpsl
fisubs
cltd
sub
arpl
mov
mov
and
jmp
adc
cmp
and
aam
fstpt
fsubrp
xchg
xchg
je
mov
insl
inc
jle
xor
push
jns
push
shlb
mov
clc
push
dec
fsubr
fsubrl
push
xor
xor
lock
dec
call
mov
dec
mov
out
lahf
mov
mov
rcll
orb
or
lret
outsb
cmpsl
or
cmpsl
inc
dec
bound
fsubl
out
aad
push
adc
dec
mov
xor
add
test
aad
das
mov
xchg
mov
sbbb
mov
and
hlt
inc
lods
jns
mov
cmp
adc
fdiv
aam
xor
std
gs
cmp
addb
int
cld
stc
stos
cld
jb
lock
add
into
push
adc
xchg
mov
leave
arpl
or
xchg
add
lea
icebp
repnz
loop
mov
imul
insl
outsb
lahf
push
add
orl
jno
shl
pop
aaa
xchg
out
push
xchg
cmp
es
call
dec
xchg
dec
sbb
ret
fwait
movsl
movsl
movsl
insl
xor
lahf
mov
cmp
cwtl
xor
sbb
push
and
lods
enter
movsb
int3
fs
je
mov
int3
push
and
incb
imul
aaa
dec
jno
mov
mov
dec
fcomip
mov
and
ja
js
push
int3
aad
and
shlb
es
sub
mov
loope
into
enter
rcl
jb
pushf
shl
sub
mov
gs
lods
aaa
daa
fisttpl
sahf
lcall
adc
sub
and
mov
or
cmp
inc
mov
clc
test
cli
shrb
and
ficompl
xchg
cs
popf
out
movsb
cmp
nop
sub
xchg
scas
shlb
lds
in
dec
lock
mov
add
mov
jne
pop
sar
xlat
icebp
pop
ss
pop
jb
arpl
test
cmp
or
adc
and
test
and
xchg
pop
enter
aam
jge
fs
add
popa
pop
or
daa
fdivrl
hlt
testl
aaa
push
push
and
xchg
add
or
sbb
mov
in
iret
pop
push
adc
xchg
iret
negb
mov
jle
sti
test
roll
in
mov
mov
fildl
push
sub
xor
imul
rclb
jne
push
add
or
test
insb
sub
es
jg
mov
pop
cmpsb
push
into
push
push
loopne
je
repz
inc
mov
pop
cwtl
push
push
clc
cmpsl
aas
jp
movsl
icebp
out
inc
cwtl
mov
mov
xlat
lods
push
mov
xchg
xor
adc
movl
sahf
lcall
adc
or
movl
hlt
dec
in
cmp
rclb
push
into
jo
xorb
in
in
imul
loope
inc
push
in
dec
inc
pop
insb
sub
cmp
adc
push
mov
dec
pop
and
push
js
out
mov
out
mov
pusha
jp
pushf
ds
cmpsb
movsl
jp
loop
out
insl
jne
and
stos
je
mov
sbb
pop
push
fcmove
mov
sbb
jle
sbb
inc
les
push
mov
add
cltd
sub
xchg
movsl
pop
xchg
add
movsl
fs
cmp
and
movsb
jno
aam
in
xor
xor
jge
adc
call
aam
pop
mov
xchg
adc
pop
popa
add
lss
push
mov
mov
stc
jp
ljmp
mov
push
add
pushf
add
mov
std
sbb
in
icebp
outsb
cmpsl
imul
icebp
jo
sbbl
out
add
add
sahf
sub
adc
xor
mov
sub
sbb
shll
movl
inc
sbb
jmp
in
mov
xchg
dec
push
pop
int3
jle
fcmove
js
pop
popf
push
push
adc
adc
sub
jae
sbb
sbb
push
adcb
int3
sbb
stos
gs
dec
stos
testl
repnz
testb
push
dec
jmp
stos
dec
pusha
scas
pop
mov
push
mov
aad
pop
fists
fucom
cmp
lcall
in
inc
sub
cmc
adc
dec
xor
outsb
pop
sub
add
lcall
mov
aaa
jp
mov
push
insl
lret
bound
adc
test
mov
inc
mov
mov
stos
out
mov
shr
inc
add
mov
out
lcall
int3
sub
rolb
xor
mov
push
mov
xchg
mov
dec
fsub
movsl
xchg
pop
outsl
jmp
rcrl
inc
cmp
js
ja
dec
cmc
mov
push
cs
pop
or
xor
sub
out
add
fxch
pop
dec
dec
jnp
enter
data16
pop
and
movsl
sbb
loopne
or
lds
or
nop
ja
mov
lds
cmpb
decl
pop
jle
rolb
or
mov
and
xchg
sub
adc
cmp
lea
add
mov
xchg
jae
jne
mov
push
movsl
inc
cmp
push
inc
sti
out
sbb
and
xlat
out
mov
and
cmp
sub
push
nop
les
ret
jmp
mov
add
dec
lock
lods
pop
outsl
les
mov
xor
lret
jne
mov
add
jle
cmpsb
pop
gs
push
stos
push
pop
mov
sti
daa
lods
jnp
pushf
scas
pop
stos
das
mov
lods
jmp
or
lock
mov
inc
fstps
leave
lea
jnp
mov
loop
mov
adc
jmp
mov
mov
inc
pusha
aaa
inc
jle
stos
das
jge
out
add
test
cld
cmpb
pusha
imul
hlt
dec
inc
repnz
in
aad
inc
fbstp
scas
push
aas
loop
sbb
out
push
int
mov
or
js
mov
movsl
jecxz
stos
ror
push
leave
cmpsb
cmp
insb
add
xchg
jp
mov
int
cli
dec
scas
xor
dec
pop
and
cmpsb
mov
ficoml
repnz
imul
and
mov
pop
jge
mov
notl
or
pop
sub
icebp
cmp
mov
xor
dec
mov
leave
pop
js
pop
mov
jp
inc
jle
mov
xor
xlat
lret
pop
or
test
lcall
fscale
pop
dec
pushf
cmp
mov
pop
and
loopne
cmpsl
out
pusha
lock
nop
push
mov
push
pop
inc
in
and
ds
push
arpl
dec
outsb
out
data16
xchg
sub
dec
test
lods
pushf
pop
fs
repz
stc
negl
outsb
or
push
add
jb
push
dec
dec
cmp
jbe
mov
icebp
xor
lret
hlt
repnz
in
add
fmuls
fnstenv
push
lret
add
cli
xchg
push
int3
loopne
mov
scas
lds
sti
adc
and
addr16
lods
mov
xchg
clc
cmp
fs
bound
ret
dec
pusha
jb
xchg
inc
pop
jl
inc
les
inc
outsw
imul
mov
addr16
movsb
movsb
sahf
sub
sub
jo
adc
adc
cmp
cld
in
mov
jmp
push
push
xchg
leave
mov
fs
xchg
mov
push
aam
and
cmp
js
add
pop
popf
out
fimull
repnz
jns
movsb
mov
sub
repz
cmp
add
fwait
popa
test
xchg
pop
mov
jecxz
jmp
xor
jmp
xor
les
fs
sub
mov
popa
mov
aam
xchg
enter
xchg
shl
fmull
cld
sub
js
jns
jnp
jecxz
sbb
sub
fs
inc
insb
cs
mov
sahf
out
ja
jbe
push
sub
cmp
in
jb
sahf
sub
je
add
adc
xchg
out
scas
ret
push
mov
xor
jo
pop
push
sub
pop
or
inc
lock
adc
pop
cli
inc
or
lret
cld
pop
out
cs
in
jb
out
jne
cmp
ljmp
lea
xor
lret
mov
push
push
jo
mov
jne
inc
inc
inc
cmc
mov
and
push
fstpt
out
scas
pop
pop
out
je
xor
pusha
xor
mov
mulb
cltd
cmp
push
out
pop
xchg
insb
test
mov
jb
or
xchg
mov
push
popf
cmp
adc
nop
lret
and
pop
std
xchg
jbe
cs
loope
jnp
lock
cmp
or
and
lret
dec
iret
outsb
push
in
mov
sub
aaa
or
add
sub
aam
pop
lods
xor
mov
inc
pop
cmp
ja
pop
mov
jge
push
pop
add
add
icebp
and
mov
pop
jns
cmp
add
arpl
lcall
xchg
or
jbe
stos
repz
popf
into
fnstcw
inc
mov
sub
mov
imul
xor
xor
cmp
mov
sub
test
inc
xchg
lahf
add
or
std
add
push
mov
pop
aas
push
sub
pusha
mov
insl
stc
xchg
fisttps
les
jl
lret
hlt
mov
sbb
stos
mov
mov
adc
cld
ja
iret
popa
mov
pop
mov
repz
inc
push
adc
cmp
mov
add
inc
scas
inc
sbb
test
cwtl
je
sub
mov
insl
mov
or
adc
dec
mov
call
lahf
adc
inc
pushf
push
adc
pop
lahf
lods
imul
or
mov
mov
int
xor
aaa
jnp
dec
ret
aaa
rorb
lock
daa
pop
call
xchg
mov
xor
sub
addr16
mov
iret
mov
test
sbb
inc
aas
mov
pop
lods
scas
sbbl
fs
add
dec
popf
mov
xlat
mov
subl
mov
mov
insb
push
dec
movsl
pop
xlat
xchg
mov
rorl
push
cmp
dec
dec
xor
push
aaa
addr16
aas
mov
mov
mov
mov
and
popf
dec
xor
sbb
cli
mov
cmp
mov
sub
or
cmc
adc
lahf
out
je
stos
sbb
pop
dec
xchg
ret
xor
arpl
out
inc
dec
and
sub
clc
xor
popa
sarl
and
dec
mov
cli
mov
or
mov
xchg
push
iret
or
adc
pop
out
or
lea
ss
push
pop
popa
je
adc
xchg
into
fildl
les
xchg
out
stos
hlt
sbb
dec
jle
std
fdivs
lock
outsl
outsl
mov
mov
mov
shrl
cld
sub
or
in
pop
pop
test
pushf
stos
movsl
in
pushf
sub
xchg
int3
and
lret
mov
ds
int
add
test
sub
sub
add
mov
mov
cmpsl
mov
lahf
push
add
mov
and
adc
scas
enter
xchg
lret
stos
rcll
das
lods
xchg
add
fisubs
jl
lock
shrl
hlt
addb
les
sbb
dec
xchg
out
ss
push
inc
in
cmp
cmp
jnp
jp
jle
bound
inc
inc
xchg
ja
js
shll
cli
xlat
jnp
mov
push
arpl
fwait
adc
mov
fsub
jge
dec
clc
jns
scas
repnz
adc
adc
cltd
sub
push
movsb
xchg
xor
fimuls
scas
inc
dec
addr16
pop
xchg
bound
lcall
lods
xchg
scas
and
imul
outsl
adc
xchg
xor
cmovae
dec
fwait
jo
or
mov
sbb
and
mov
push
mov
js
movsl
repz
pusha
out
icebp
faddl
push
jo
mov
xchg
faddl
mov
xchg
cmp
movsb
lahf
pop
lret
fnstcw
sbb
hlt
icebp
test
or
inc
xchg
jecxz
xor
dec
push
loope
mov
cwtl
dec
or
pop
push
cmpl
fcoms
or
push
aas
xchg
inc
and
imul
mov
shrb
jae
lods
cmp
in
add
pop
xorl
and
pop
dec
icebp
cmp
out
mov
sbb
xchg
mov
add
adc
mov
xchg
lock
cwtl
insl
and
aas
aam
imul
jb
push
pop
xchg
ret
pop
jle
inc
fwait
je,pt
or
mov
cli
xlat
and
or
xchg
mov
lea
mov
fs
ljmp
adc
sbb
in
aam
in
sub
xchg
popa
repnz
or
fmuls
cli
icebp
or
jl
sub
pop
jae
jp
loop
mov
out
add
push
out
pop
ja
lods
movsl
mov
mov
ja
sbb
sbb
adc
dec
cltd
inc
pop
push
out
clc
xchg
jmp
repnz
cwtl
push
push
outsl
scas
mov
outsb
adc
xor
ljmp
dec
xchg
lods
mov
fldcw
cmpsl
xor
in
pop
mov
lahf
es
data16
dec
or
iret
dec
and
pop
loope
add
mov
inc
sbb
in
add
in
pop
cmp
mov
add
xor
gs
inc
sbb
icebp
pop
or
add
sahf
daa
xchg
in
push
pusha
mov
mov
aam
sbb
xor
jg
fisubs
daa
dec
push
cmp
pop
loopne
mov
mov
xchg
dec
fistpl
ss
notl
movsb
scas
sbb
dec
mov
sub
movsl
and
test
sbb
add
in
call
cmp
movb
sbb
mov
xor
lcall
pop
dec
xchg
xor
mov
dec
push
daa
mov
lcall
push
add
and
push
data16
jle
out
cmp
dec
or
push
sbb
xlat
sbb
xor
sbb
jb
mov
push
call
data16
imul
cmp
cmp
and
add
lahf
clc
test
dec
inc
add
pusha
in
cltd
mov
mov
insb
stc
popa
or
jge
sarb
popf
sub
iret
or
sbb
push
aad
or
jo
out
nop
outsl
jne
gs
mov
pop
push
and
mov
jae
aaa
imul
ja
dec
sar
jae
adc
sbb
inc
daa
or
aaa
int3
inc
inc
lods
pop
jnp
shl
sub
jg
fld
aam
in
and
push
in
add
rep
adcb
jno
icebp
cmpsb
sbb
inc
mov
std
sbb
xchg
leave
mov
mov
iret
xchg
xor
stc
shl
orps
scas
stos
frstor
mov
pop
outsb
mov
push
adc
push
scas
or
sbb
mov
adc
movsb
dec
int3
test
cmp
dec
fisttpl
repz
call
sub
inc
add
push
mov
pusha
sub
test
cmp
push
mov
push
icebp
inc
add
insb
cmc
test
in
test
push
pop
leave
adc
inc
aaa
sahf
clc
test
cmpsb
mov
inc
fldl
adc
cmpsl
ss
xor
mov
stos
push
mov
clc
jmp
outsl
jo
or
mov
xor
inc
movsl
adc
pop
sbb
dec
mov
movsb
stc
out
jl
iret
jns
imull
add
jne
imul
cmp
dec
stos
addb
and
sbb
fdivrs
sub
add
add
dec
sub
push
clc
jg
push
adc
sbbl
test
jl
inc
adc
fcoms
mov
scas
jg
nop
mov
cmp
mov
mov
je
dec
mov
xchg
push
divb
int
adc
je
jnp
adc
lret
and
jns
push
push
daa
xor
cmp
mov
ret
cltd
into
and
mov
leave
popf
repnz
mov
stos
xor
arpl
cmp
add
ss
shlb
push
imul
add
mov
push
mov
add
and
xchg
xor
pop
mov
arpl
or
mov
sti
fcmove
cmp
pushf
cmp
dec
lea
push
mov
sub
inc
mov
imulb
and
insb
push
pop
mov
pop
popa
adc
lcall
movsl
adc
dec
ljmp
popa
cmp
sub
add
popf
dec
push
dec
jp
xor
mov
or
mov
clc
lcall
nop
adc
and
mov
ljmp
dec
or
cmp
mov
add
insl
fs
aad
add
rorb
ss
out
in
rcr
lock
rcrb
bound
icebp
pop
stos
xor
les
loop
fmul
or
cld
hlt
pop
add
mov
ret
stc
aad
and
sub
stos
push
dec
imul
xor
iret
adc
dec
cwtl
xchg
xchg
add
bound
push
cli
inc
mov
mov
or
fmulp
lcall
push
stos
mov
aam
mov
test
xchg
in
jns
sub
shll
pop
mov
jbe
push
and
int
mov
jmp
push
in
xor
inc
dec
or
rclb
push
sti
imul
cmp
sti
test
out
outsb
outsb
pop
pop
in
std
les
inc
aaa
jne
pushf
lock
sbb
ret
push
dec
loopne
insl
mov
incb
mov
shlb
ja
fdivrp
pop
or
icebp
push
inc
mov
push
add
mov
push
mov
mov
out
jnp
mov
mov
jae
or
adc
lea
jne
lods
mov
cmp
add
inc
push
jo
jmp
lea
add
enter
sbb
int3
bound
out
lahf
loope
mov
xchg
pop
push
mov
inc
jo
jge
add
rorl
xor
pop
mov
pusha
outsb
movb
fldenv
es
inc
jns
mov
cli
sub
mov
add
inc
xor
jno
jb
add
int3
xchg
stc
push
idivb
jb
mov
pop
rclb
mov
jg
test
xor
mov
push
mov
sub
mov
imul
and
cmp
repnz
xlat
in
add
lahf
jb
std
in
aam
out
add
jmp
mov
divb
cmc
pop
pop
mov
mov
fmull
addr16
pop
add
frstor
add
or
xor
and
push
stc
pop
popa
inc
movsl
testl
lds
sub
cs
int3
insl
mov
into
pushl
add
das
mov
inc
addb
std
and
adc
mov
aaa
sbb
fcomp
nop
gs
cld
ja
mov
rcr
lcall
pop
ret
inc
jne
insb
inc
repz
mov
mov
out
mov
inc
insl
clc
cmpsl
daa
pop
jae
mov
call
mov
add
int3
imul
lret
aam
inc
sub
jnp
cltd
add
fs
daa
std
in
cmpsl
push
imul
push
movsl
mov
xchg
dec
enter
fistps
sbb
scas
mov
xchg
jle
js
arpl
cltd
and
ret
sub
call
push
xor
jecxz
ja
mov
in
and
sub
shll
add
sti
aaa
fwait
imul
push
roll
in
mov
shl
addb
test
ret
mov
inc
test
xor
enter
popa
fcompl
inc
das
xchg
and
xor
mov
or
pushf
fwait
insb
ret
lea
push
push
push
push
scas
jne
or
fdivrs
cmpsb
pushf
and
dec
and
mov
shrb
fsubr
aas
push
fwait
pop
push
mov
add
adc
cmc
add
lea
rclb
int3
jnp
test
xchg
xor
test
jnp
and
xchg
int3
pop
cmp
aad
shr
aas
jl
sbb
cli
pop
xor
test
test
mov
mov
imul
movq
test
scas
mov
shll
dec
out
dec
dec
add
outsb
dec
xchg
push
fdivl
sub
pop
pop
fdivrs
insb
and
out
mov
cs
gs
xor
push
jae
mov
lds
push
pusha
mov
test
and
xlat
mov
or
and
sub
fs
cmpb
push
cltd
pop
cmpsl
dec
mov
cmpb
push
xchg
xor
jmp
pop
mov
adc
adc
cli
push
ds
outsl
add
xchg
repnz
adc
jo
mov
jnp
jo
mov
push
sub
shl
fcmovb
fwait
push
lcall
mov
es
or
xchg
jecxz
imul
jbe
inc
push
enter
das
dec
inc
in
lret
shlb
insl
pop
xor
pop
sub
mov
mov
mov
out
jp
popa
adc
pop
sub
cltd
and
xor
cld
xor
repnz
cld
jp
pusha
sbb
dec
push
push
xor
push
add
in
add
and
xor
lods
inc
repnz
add
adc
sub
stc
mov
pop
iret
sub
mov
xor
cmp
jg
sarl
shl
mov
inc
xor
ret
pop
push
pop
cmc
lret
jle
push
xor
push
xor
lods
sub
dec
or
mov
dec
xchg
mov
cli
inc
and
adc
popa
dec
dec
push
fcmovnbe
stc
xor
or
nop
push
mov
or
loope
push
pop
add
push
lods
pop
rolb
push
movsb
aam
push
addb
movsl
scas
and
push
fstps
push
inc
and
test
leave
sbb
dec
or
arpl
xor
cmpsb
xor
jns
push
or
stc
push
mov
dec
fbstp
syscall
pop
xlat
lret
inc
pop
ficomps
mov
in
push
aaa
insb
out
subl
xchg
adc
ljmp
mov
sub
mov
fldt
sub
or
mov
cmpsb
imul
mov
push
dec
cmc
fisttpll
dec
mov
dec
adcl
ja
jne
repnz
add
js
imul
test
ljmp
xchg
ja
int
xor
pop
movsl
addl
mov
cmp
inc
mov
gs
es
lds
fldenv
jge
pop
adc
pop
scas
mov
mov
test
ja
lods
mov
shrl
and
sub
xchg
xlat
stos
out
pop
rcl
cmc
mov
arpl
fnsave
adc
addr16
adc
and
fdivr
out
movsb
cmp
push
loopne
mov
ljmp
aas
mov
push
pop
or
lea
push
xchg
hlt
clc
popf
aaa
movsb
stc
and
add
add
sbb
inc
and
mov
and
pop
pop
mov
addr16
dec
das
xchg
and
lea
mov
adc
xor
ss
std
mov
dec
add
cwtl
shlb
rolb
test
cmp
js
mov
daa
lret
stos
jnp
sub
and
xchg
inc
inc
lea
shll
scas
dec
adc
mov
leavew
stc
data16
ret
out
lret
rclb
das
add
pop
popf
adc
scas
add
test
test
hlt
pop
movsb
pushl
out
in
testb
sbb
mov
mov
out
jae
sahf
mov
mov
repz
sub
xchg
lahf
pusha
sub
pushf
shll
in
mov
testb
js
add
repnz
sub
push
sbbl
js
cmc
adc
repnz
xor
jbe
or
repnz
loopne
lods
or
add
insl
aam
jle
lea
sbb
sbb
ret
shrb
imul
add
test
pushf
sbb
vcvtdq2pd
rcl
cmp
sub
fidivrl
adc
dec
hlt
lea
out
iret
shr
mov
and
pop
sub
and
push
mov
bound
mov
push
inc
lret
xchg
cmp
or
xchg
pop
jecxz
jge
ret
push
push
ret
ret
dec
lods
mov
repz
cmp
cmp
mov
call
add
mov
mov
sbb
mov
movsb
xchg
dec
fistl
repnz
push
mov
scas
mov
xor
lea
ja
sbb
xchg
pop
ja,pt
divl
and
pop
pop
inc
rcr
xor
ss
xor
pop
in
push
xor
movl
outsl
hlt
mov
mov
pop
out
lea
sub
jmp
and
sbb
lcall
jbe
test
js
pop
shll
insb
dec
in
push
inc
cmp
xchg
shl
fwait
scas
aad
jl
and
jg
gs
and
cmc
adcb
lret
xchg
xor
int3
ret
push
jo
xchg
xor
fcomp
pop
mov
add
imul
stos
movl
push
loopne
lea
pusha
cli
lret
sub
addr16
and
pusha
popa
icebp
mov
int
add
mov
loop
cmp
into
scas
or
int3
out
xchg
xchg
add
xchg
shll
ficompl
jmp
adc
sub
jne
outsb
jl
and
xorl
add
pushf
and
jle
or
cmp
divb
fdivs
pop
out
dec
pop
gs
std
sti
rorb
and
insb
xchg
leave
call
mov
xor
and
outsl
mov
pop
cmp
movd
lret
mov
jns
fwait
addr16
shlb
lods
lcall
sub
repz
js,pt
loop
jmp
jo
loop
jbe
mov
stos
insb
xor
stos
push
notb
dec
shlb
lea
sbb
out
add
xlat
mov
inc
push
jg
pusha
cmp
inc
mov
mov
mov
mov
xchg
cmpl
sbb
mov
not
js
sbb
mov
adc
jae
dec
scas
jle
and
test
pop
jno
out
jmp
inc
loop
xor
xchg
and
stc
mov
in
test
sysexit
xchg
lret
rorl
jecxz
xchg
push
out
mov
mov
or
lods
and
in
sti
and
or
loope
sub
sub
inc
cwtl
xor
outsb
shlb
testl
mov
xchg
push
dec
xchg
lock
lcall
inc
push
cmpsb
pop
xorl
in
mov
push
imul
loop
xor
aas
jno
icebp
loop
push
stc
out
imul
and
cwtl
sbb
cmpsl
mov
sub
out
push
dec
push
jecxz
inc
xor
imul
jmp
adc
std
ret
aaa
and
dec
pop
pusha
xchg
mov
js
lods
test
mov
mov
xlat
mov
mov
sub
cli
cmp
call
add
and
or
and
outsl
loope
sti
push
cmp
lret
mov
pop
and
test
loope
cmpsb
or
fcomps
or
cwtl
popa
in
cmp
jmp
jbe
push
jb
in
push
mov
xchg
adc
andb
addr16
pop
in
out
pop
sub
cmp
xchg
mov
cld
add
enter
ss
and
jno
scas
in
in
cmp
cmp
xor
pushf
lock
mov
or
pop
xchg
jg
je
pushf
lret
mov
lret
xchg
or
adc
jecxz
sti
mov
push
add
shlb
ret
push
jecxz
sbb
mov
jbe
add
in
rcll
mov
or
cmc
movsl
add
xchg
loop
push
jle
cmp
outsl
sub
lcall
mov
pop
stc
out
mov
mov
xchg
addr16
push
scas
xor
imul
in
sbb
add
lret
pop
or
xchg
jno
jle
sub
test
mov
add
or
shl
in
and
jl
je
cmc
sub
mov
adc
push
sub
push
cmp
cmpl
push
pushl
imul
sbb
scas
sub
mov
xchg
cmpb
shr
ljmp
mov
cmpsb
mov
sbb
adc
lock
divl
in
mov
int3
insb
pop
sub
cmp
and
je
clc
xor
and
sbb
outsb
or
pop
shrl
or
jne
inc
mov
mov
xor
jp
aam
nop
cltd
jnp
dec
sub
cmc
je
rol
sbb
aam
or
lret
aas
cld
mov
js
mov
lret
scas
add
mov
mov
and
imul
push
xor
out
pop
xor
out
adc
add
int
sbb
sub
loope
cmpsl
shll
push
mov
pop
lock
pop
stc
push
jle
pop
pop
sbb
push
ret
mov
sbb
xor
sbb
jnp
idiv
stc
sti
xchg
lcall
inc
sub
sbb
xor
jno
dec
sahf
scas
add
add
lcall
mov
rolb
pop
test
mov
xor
jno
mov
xchg
jo
and
lahf
imul
fwait
xlat
adc
xchg
into
pop
cmp
enter
sbb
or
mov
cmpsl
mov
imul
cmp
ficomps
dec
frstor
dec
mov
andl
inc
push
sti
mov
sbb
inc
or
pop
xlat
test
or
rorl
jecxz
xor
lea
fldcw
xchg
outsb
mov
inc
dec
push
test
pop
decl
lret
push
pop
add
lock
add
and
pop
fcmovnb
mov
adc
test
int3
cmp
lcall
clc
js
mov
mov
repz
or
outsl
push
fdivrl
test
adc
push
aas
and
pop
add
pop
loope
cmp
pop
stc
es
lret
sub
xchg
push
test
inc
fiadds
loopne
insl
jge
insl
xchg
mov
dec
outsl
dec
push
mov
data16
fidivs
imulb
xor
addr16
pop
shrb
push
addr16
leave
mov
mov
xor
je
lock
mov
insb
les
inc
mov
inc
outsb
push
inc
xchg
cwtl
cmc
push
insb
jb
xchg
popf
sub
icebp
lds
rorb
inc
lret
cmp
sahf
adc
dec
out
les
ret
inc
add
test
xchg
shl
mov
adc
cmp
scas
out
inc
xor
stc
into
movl
filds
mov
dec
data16
jmp
inc
mov
and
cmp
jle
jae
add
add
sbb
nop
mov
icebp
out
and
xchg
fwait
daa
shll
xchg
lcall
mov
adc
fdivr
cmp
inc
xor
repz
xor
adc
insl
or
leave
xchg
mov
pusha
in
xchg
dec
add
mov
mov
ljmp
xlat
pop
fcmovnbe
pop
mov
in
adc
into
inc
daa
xor
xlat
sbb
lcall
push
scas
shlb
inc
sbb
stc
mov
or
inc
and
or
aaa
add
dec
negb
shl
push
sub
mov
nop
fdiv
inc
insb
xchg
arpl
push
sbb
aam
and
stos
cmp
addr16
push
mov
rorl
test
inc
sti
mov
push
test
test
dec
or
cld
pushf
jmp
mov
jns
sbb
xlat
pop
das
aad
adc
imul
jl
mov
mov
ret
dec
push
cli
sahf
test
insb
hlt
mov
stos
cmp
xor
sti
mov
ja
ficompl
arpl
mov
jle
scas
lods
dec
mov
cmpsb
mov
in
xor
shlb
cli
lock
dec
ja
dec
fldcw
dec
push
pop
mov
jns
test
sbb
hlt
mov
cmp
jno
rol
adc
shll
mov
fcomip
or
mov
jecxz
rorb
sub
rcr
mov
mov
sbb
sub
dec
adc
cld
jo
stc
popa
sbb
mov
xchg
popa
test
call
jp
je
push
mov
test
sub
inc
sbb
jbe
xor
outsl
mov
fs
subb
out
test
lea
xor
cs
push
mov
leave
and
rcrb
lock
addb
add
xchg
or
jo
repnz
push
add
and
fwait
jl
das
into
inc
push
out
sahf
adc
sahf
cmp
cmp
jae
js
int
pop
repz
in
mov
cltd
sbb
pop
cli
mov
insb
mov
pop
jge
ror
out
mov
lret
dec
out
push
adc
arpl
cwtl
cs
sbb
mov
cmp
lds
ss
mov
js
enter
sub
add
lret
imul
inc
mov
popa
mov
idivb
fmull
dec
out
cmpsb
adc
cmp
or
scas
xor
inc
mov
xchg
je
pushf
fs
fcmovnbe
js
arpl
mov
xor
xor
pop
or
pop
add
xor
cmc
out
dec
inc
jbe
mov
cld
sub
stos
sbb
jmp
pop
cs
pop
adcl
mov
jbe
push
mov
sahf
mov
xchg
call
in
pop
sbb
test
out
inc
cltd
fwait
dec
test
mov
fdivs
sahf
mov
aam
loopne
daa
lahf
cmp
lahf
ss
mov
push
fdiv
push
sub
rclb
mov
mov
imul
xor
push
cmp
lcall
push
add
enter
prefetcht2
mov
jbe
jecxz
ja
pop
dec
pop
or
in
lcall
cld
inc
scas
dec
push
add
or
cmpb
mov
and
aad
cmpsb
dec
sub
cli
or
xor
jo
test
push
adc
add
ljmp
das
adc
add
sub
jae
cltd
push
adcb
push
addr16
or
icebp
add
sti
fcmovnb
cmp
sti
inc
mov
das
test
cltd
mov
cmpsl
aam
out
mov
in
jmp
dec
lds
fildl
bound
jp
push
insb
in
add
jg
mov
xor
je
cmpsb
ljmp
shll
mov
dec
jge
mov
push
mov
stos
jne
jmp
scas
dec
mov
pop
prefetch
or
cmp
frstor
js
xchg
mov
cmp
lcall
dec
orl
push
in
addl
dec
xor
call
divb
scas
aas
rcr
fwait
mov
jmp
cmpsl
dec
push
mov
hlt
dec
ja
pop
inc
jno
sbb
sub
jne
std
clc
dec
pop
fnstenv
add
int
cltd
pop
ret
into
adc
mov
ss
les
add
ljmp
pop
test
jbe
cwtl
mov
dec
cmp
data16
sbb
mov
adc
int
push
sub
les
pop
or
clc
or
roll
mov
xchg
dec
std
test
adc
sbb
pusha
cmpsl
sti
movsb
aaa
add
push
mov
pop
mov
fildll
mov
les
test
or
push
popa
imul
adc
stos
fwait
adc
inc
inc
orl
call
mov
in
mov
adc
pop
sbb
adc
xchg
out
ds
repz
pop
outsb
add
sbb
mov
fistps
lods
ret
xchg
fs
in
ret
push
xor
jle
cltd
and
inc
into
in
inc
mov
jmp
xor
lret
out
loope
jne
iret
lret
or
xchg
adc
loop
adc
lds
call
ja
xchg
shrl
pop
xor
jp
fildll
cli
push
loopne
outsb
ficomps
mov
xlat
mov
jb
mov
call
sbb
jbe
lret
testb
sub
clc
sub
cmp
mov
loopne
sub
inc
jp
bound
sub
adc
shufps
fisttpll
push
addr16
or
jne
sub
adc
adc
movzwl
push
cltd
xchg
sbb
or
mov
xlat
subl
cmp
jno
dec
jnp
fimuls
mov
or
leave
push
mov
inc
shl
dec
and
push
outsb
sarl
jl
mov
faddl
movsl
xchg
jae
push
cmp
sub
xchg
sarb
sbbb
jno
cld
mov
lcall
leave
stc
ss
fnstenv
sub
cmp
data16
test
xor
dec
daa
or
rcrb
xchg
in
aaa
mov
out
sub
in
or
stc
lahf
outsb
dec
dec
mov
test
ja
fcoms
dec
jne
jne
mov
mov
jl
test
cld
in
xlat
adc
test
mov
pop
divb
xchg
mov
jmp
pop
cmc
repnz
inc
cs
iret
pop
mov
movsb
aaa
leave
js
cmp
jp
popa
adc
jb
cmp
aas
pusha
jnp
pop
fmuls
iret
inc
jge
lret
jo
push
fdivr
push
in
lahf
push
pop
scas
fistpl
jge
ss
cmc
mov
dec
jg
mov
lds
hlt
sub
mov
inc
or
jge
lahf
mov
std
xchg
nop
insl
je
mov
pop
int
jno
mov
idivl
in
and
dec
cmp
push
int3
push
sbb
mov
cwtl
shlb
divb
adc
sub
cwtl
popa
clc
test
ja
sarb
inc
jbe
loop
iret
mov
rol
adc
popa
cmp
lods
ja
lret
add
push
mov
fildll
loope
test
and
xor
sub
mov
dec
mov
inc
xchg
js
mov
mov
xor
add
add
mov
sti
rcl
sbb
into
add
xchg
push
cmp
jmp
mov
inc
mov
inc
push
fs
lahf
imul
xchg
sub
incb
loop
dec
push
or
out
or
and
xor
mov
sub
outsl
and
push
out
add
mov
popf
shlb
stc
js
jmp
dec
xchg
xor
mov
sbb
xchg
push
and
mov
arpl
jp
scas
xchg
cmpsb
popf
and
in
dec
xchg
dec
pop
jo
insb
push
push
or
mov
aam
int3
out
xchg
cmpsb
outsb
xor
lahf
mov
xchg
jbe
push
sub
inc
ret
aam
outsl
or
nop
lret
out
sbb
mov
aad
leave
cmp
mov
jmp
mov
or
xchg
inc
xlat
mov
je
jge
mov
mov
ljmp
loope
stos
adc
pusha
dec
push
pop
sub
insl
push
sbb
lahf
imul
cs
movsb
int3
add
movl
mov
push
mov
jp
pop
ss
mov
repz
pushf
rorb
aas
pop
inc
sub
pop
mov
mov
lret
inc
daa
cmp
cmp
cld
jns
in
xchg
mov
loope
lods
rcll
sbb
stc
iret
mov
push
adcl
mov
test
loope
orl
push
imul
inc
mov
adc
je
jns
ljmp
mov
stos
push
dec
ss
jl
fiaddl
xor
iret
dec
test
rcl
or
in
sahf
add
lock
enter
ss
mov
iret
xlat
pop
test
push
push
push
mov
mov
mov
xor
out
int3
adc
decb
jle
sbb
jno
fcmovnb
xor
pop
mov
push
pop
pusha
test
jmp
pop
inc
pop
rorl
sbb
dec
add
adcl
mov
dec
les
iret
jmp
pop
rcll
mov
cld
sahf
mov
test
cs
rcl
into
add
add
out
mov
bound
xor
mov
push
sub
xor
std
incl
xchg
cmp
mov
mov
pop
test
movsl
mov
xlat
ds
gs
fidivrl
jge
push
cltd
pop
out
mov
mov
jo
and
and
enter
push
xor
sub
add
and
xchg
xor
adc
lret
xchg
ljmp
int3
roll
mov
xor
shl
addb
jl
lcall
fnsave
das
or
int3
xorb
jmp
out
rclb
jno
into
test
sbb
or
loop
insl
sahf
cmp
xor
into
lahf
adc
out
mov
sub
loope
es
aaa
nop
stc
in
bnd
fnstsw
mov
mov
mov
mov
gs
jbe
out
or
sub
test
inc
adc
ljmp
cmp
cmp
dec
jmp
and
add
or
stc
pop
cmp
add
int3
std
stos
sub
jae
outsb
mov
push
sbb
jge
cmp
es
int
dec
std
mov
scas
sbb
cmp
push
push
pop
stc
outsb
inc
daa
in
cmpsb
or
gs
dec
add
pop
dec
repz
xchg
xor
xchg
mov
data16
movaps
jnp
ds
and
imul
push
mov
sbb
aas
cmpsl
sbbb
fists
adc
in
xor
movsb
aad
pop
mov
xor
jae
pop
xorb
and
pushl
mov
cmpb
dec
dec
das
jl
adc
jl
and
rorl
jle
into
pushf
inc
inc
mov
dec
ja
mov
sub
jg
out
cld
popa
xchg
adc
push
popa
dec
loopne
xor
cwtl
cmpb
roll
lahf
mov
mov
pop
negl
les
adc
test
in
div
sub
lods
xchg
adcl
test
les
or
mov
and
fbstp
lret
or
mov
test
inc
std
push
jo
adc
int
fnsave
jne
jae,pt
nop
test
or
inc
outsb
aas
mov
xor
inc
les
push
xchg
mov
scas
cmp
leave
lahf
cmp
dec
sub
xchg
dec
mov
ret
push
adc
and
stos
push
in
call
and
ljmp
shll
in
bound
unpckhps
mov
sub
pop
mov
xor
push
cmp
sub
test
out
test
xlat
enter
push
sub
or
xchg
inc
dec
sub
leave
mov
sub
sub
lret
test
es
xorb
arpl
pop
push
pop
stc
jno
test
or
cmc
add
lds
push
in
xor
adc
add
add
test
jo
std
pop
cmpb
test
icebp
cmpsl
sub
ret
and
add
stc
xchg
gs
pop
out
or
mov
mov
mov
test
jb
test
cmp
and
scas
adc
push
insl
inc
leave
test
test
call
jecxz
addr16
jo
jae
cs
mov
mov
pop
cmpsb
mov
dec
out
test
xor
aam
cmp
inc
mov
and
xor
mov
push
xor
lods
cld
int3
push
dec
inc
mov
aad
pop
ja
xor
jae
fs
leave
xchg
in
lea
fcompp
in
rclb
std
mov
sti
mov
inc
xchg
xchg
mov
inc
xchg
sti
cld
push
fistpl
push
scas
lahf
imul
lods
pushf
push
mov
jnp
and
inc
jbe
es
inc
js
loope
inc
cmpsb
xor
adc
out
popa
inc
mov
lcall
stc
ror
ret
out
sbb
test
push
fs
or
fistpl
cmp
fmull
pop
sbb
testl
das
jne
cmp
lea
arpl
inc
imul
rcrb
cmp
pop
ffreep
add
inc
mov
inc
jle
sub
xor
mov
ss
out
out
push
jmp
clc
sbb
add
in
pushf
leave
aad
cltd
jg
incl
adc
push
fisttpll
mov
pop
add
adc
pop
jo
shrb
dec
lcall
stos
adc
aad
jnp
dec
or
lahf
xchg
outsl
or
and
mov
jbe
repnz
test
lahf
pop
adc
push
xchg
outsl
lds
and
jno
mov
out
add
push
xchg
push
pop
scas
fstl
rol
pop
js
mov
out
ret
test
adc
sti
cli
add
jg
xor
jecxz
imul
push
in
les
sti
lret
hlt
in
sarl
sub
lret
mov
bound
lods
pop
adc
popa
sbb
or
sub
pop
jl
int
or
aam
dec
into
movsl
andb
loop
sahf
lods
cmp
rolb
and
or
xchg
inc
clc
mov
xchg
dec
cs
fsubrp
in
xchg
or
shll
ret
add
and
jp
pop
pop
inc
mov
imul
mov
pop
sbb
lahf
popa
and
dec
mov
jge
add
mov
cvtps2pi
or
xor
mov
mov
xchg
jo
sub
popa
icebp
sti
pop
cmpsb
movsb
mov
cmpsb
nop
inc
fildll
mov
and
mov
lea
repnz
insb
dec
mov
mov
arpl
scas
mov
out
insb
adc
add
out
xlat
mov
decb
shll
les
lods
pop
ja
add
aaa
ret
ds
fisubs
cmp
stc
jnp
push
mov
cmp
ds
adc
xchg
cli
out
add
mov
sub
das
scas
inc
push
divps
scas
sub
push
jp
xchg
or
mov
xchg
sub
aam
lret
call
pop
cmp
add
push
inc
xor
xor
rcl
mov
call
ficomps
sbb
push
ret
out
shl
mov
mov
int3
fildll
adcl
filds
pop
ret
cld
shll
ret
ficoms
sub
lahf
push
imul
pop
sbbb
mov
movsl
enter
cmp
mov
lods
js
sub
ds
and
bswap
mov
lods
addr16
icebp
mov
test
pop
inc
and
insb
inc
repz
out
outsb
repz
jmp
and
xor
adc
xor
mov
fs
out
inc
int3
inc
inc
jg
test
xor
xor
jns
push
out
outsb
dec
sbb
pushf
in
fisubrs
fstpl
push
movsl
sub
xchg
mov
xor
leave
and
mov
mov
pushf
pop
outsl
or
inc
inc
iret
shll
cltd
dec
subl
mov
mov
adc
fnstcw
mov
movsb
mov
ljmp
sub
push
or
bound
rcrb
xchg
or
push
mov
pop
add
testb
push
xchg
sub
orl
nop
fadd
pop
repnz
cltd
sbb
dec
inc
mov
mov
cmc
das
pop
or
xchg
mov
jp
orb
lea
sbb
and
lret
xchg
int
dec
ss
repz
jb
jmp
jmp
out
mov
mov
mov
loope
add
jmp
jne
or
in
or
pop
dec
mov
push
pop
or
xchg
jmp
inc
pop
jo
jmp
and
add
jb
ret
ftst
sbb
int
push
je
fildll
xor
stos
xchg
or
mov
cmpsb
les
mov
jns
imul
dec
jns
test
insb
icebp
pop
jns
cmp
mov
xchg
ret
mov
cmp
hlt
outsl
cmp
fcmovnu
sbb
xchg
inc
mov
mov
sub
fistl
push
int
pop
lret
pmaddwd
out
jg
pop
push
inc
rcrb
sub
xor
and
add
int
lds
push
dec
ret
les
mov
inc
sub
adc
push
gs
or
mov
jno
test
inc
xor
and
daa
pushf
les
and
mov
lock
scas
mov
es
xor
lea
enter
ret
cmp
fists
int3
mov
popf
and
mov
repz
xor
out
test
das
test
cwtl
int
test
ljmp
mov
fwait
adc
pop
aas
sbb
clc
nop
push
int
inc
gs
inc
mov
mov
mov
xchg
xchg
repz
pop
rcll
ret
and
dec
stos
or
pop
stos
adc
add
mov
mov
inc
or
mov
mov
lods
push
fstpt
adc
sub
repz
ljmp
xchg
loope
mov
fadds
xor
mov
push
repz
ret
dec
adc
mov
sub
addl
mov
nop
dec
add
jg,pt
add
add
daa
aad
cmp
stos
js
adc
daa
push
dec
data16
xor
loopne
pop
cmpsb
sarb
and
and
mov
dec
jle
das
sbb
mov
pop
cmpsl
cmp
test
aaa
pop
push
loopne
jb
jb
ja
or
mov
cmp
mov
push
fwait
sub
dec
rolb
les
mov
xlat
and
push
mov
adc
ret
inc
jmp
jne
hlt
inc
push
jle
mov
imul
and
int3
mov
sbb
xor
outsb
sbb
ljmp
jge
mov
sub
ds
xor
cld
subb
and
fidivrs
aam
hlt
int
cmp
in
cmp
test
mov
cmc
sbb
mov
and
fwait
jns
push
dec
fbstp
cmp
fcmove
test
in
pop
and
mov
mov
xchg
push
aam
fs
lea
loope
popa
mov
test
mov
testl
and
jno
imul
push
add
lds
ss
lods
mov
mov
push
out
aas
push
repz
hlt
test
clc
inc
xchg
jae
gs
or
sbb
hlt
flds
mov
inc
shll
dec
push
pop
or
sbb
movsb
push
test
jmp
dec
out
je
or
inc
loope
cwtl
int3
xchg
scas
adc
sub
mov
hlt
cltd
cmp
test
leave
test
outsb
lahf
jmp
ljmp
inc
imul
fisttps
adc
loop,pt
notb
cmc
fnstcw
cmpsl
int3
pop
jl
flds
cmp
mov
cld
in
roll
bound
xor
std
jecxz
xor
shll
sub
lcall
bound
cli
pop
ss
ror
sbb
out
in
insl
xchg
cld
pushf
loopne
cmc
mov
and
cli
mov
out
movsb
xor
or
mov
xchg
xchg
dec
lds
daa
iret
movsl
xor
adcl
and
mov
hlt
fisubrl
mov
sub
push
inc
lods
jns
lret
es
or
sub
mov
cltd
movsl
xchg
push
xor
inc
nop
pop
jecxz
sahf
sar
jno
subl
cmc
ja
push
push
or
push
pop
fldenv
subl
jns
add
xchg
xor
inc
xchg
test
and
cwtl
lahf
xchg
or
mov
daa
imul
outsb
out
sar
pushaw
fs
fadds
mov
pop
pop
jae
push
add
insl
sbb
stc
lret
rcrl
sub
cmp
mov
jg
and
pop
jg
leave
ss
dec
mov
dec
push
mov
cmp
shlb
sarl
cwtl
add
mov
jp
call
mov
pop
pop
mov
add
into
jl
mov
mov
push
inc
mov
outsl
inc
test
ljmp
mov
sub
popa
pop
jecxz
repz
add
and
push
xchg
rcrb
lret
fucomp
test
jg
insl
ds
add
iret
outsl
out
mov
cld
sub
out
add
add
in
jmp
xchg
sarb
outsl
sub
ds
mov
adc
enter
push
test
mov
jb
lea
mov
xor
loop
in
xor
xor
xor
cmp
jmp
mov
cmp
cmp
adc
dec
sbb
lahf
mov
adc
sub
sbb
out
and
xor
repnz
ret
cli
in
push
test
gs
incl
or
sub
int3
out
test
sahf
andb
dec
mov
popa
mov
mov
fsts
icebp
enter
in
cwtl
jmp
mov
inc
popa
xorb
xchg
mov
xor
inc
pop
and
mov
or
xor
cmp
add
mov
inc
pop
fiaddl
inc
adc
icebp
mov
cs
push
pop
pop
imul
mov
mov
aam
popa
pop
mov
sbb
push
rorl
es
out
sti
inc
scas
ret
cld
jecxz
mov
mov
or
pop
mov
adc
repz
dec
scas
fadds
lcall
cmp
push
inc
mov
xchg
xor
fstpl
pop
lods
pop
mov
int3
popf
jno
scas
int
xorl
testl
sahf
or
dec
pop
mov
lods
pop
popa
mov
scas
jecxz
ja
gs
aas
pushf
or
dec
in
andb
stos
bound
dec
mov
or
in
dec
int
or
sbb
pop
lret
test
jecxz
invd
js
mov
cmp
sub
push
inc
popf
mov
mov
adc
movsb
popf
pop
test
mov
icebp
xchg
inc
sub
jns
gs
adcl
cmp
test
mov
das
inc
mov
mov
add
loope
and
xorl
into
push
push
hlt
mov
push
loope
jmp
outsb
push
inc
shrb
jno
insb
xchg
das
jnp
cmc
push
cmp
cmp
insl
loope
lret
dec
scas
xchg
in
jp
enter
cmp
hlt
pop
jns
ret
nop
xchg
fwait
sub
dec
add
faddp
fcompl
sbb
pop
lea
int3
mov
push
dec
push
in
testb
cltd
int3
enter
stos
out
icebp
movsb
pop
mov
shl
stos
jmp
jge
sbb
mov
imul
cmp
and
sbb
inc
lahf
lea
mov
mov
xchg
xor
or
dec
and
xor
jb
cmp
iret
push
std
mov
mov
push
insl
ja
imul
scas
fnstsw
loope
and
pushf
mov
int3
pop
sti
jp
mov
sub
adc
push
imul
or
xor
jmp
mov
shr
rcl
popa
andl
in
xor
push
nop
lret
mov
push
pop
inc
jo
jecxz
cmpsb
mov
cmpsl
sbb
lahf
mov
out
aas
xlat
cmpsb
out
popf
arpl
imul
sbbl
ss
and
outsl
adc
push
xlat
mov
inc
inc
add
lahf
mov
mov
das
pop
mov
mov
pusha
rclb
pop
mov
lahf
fs
push
inc
loop
in
jnp
add
js
iret
push
clc
je
mov
ss
in
jp
jecxz
mov
sbb
jl
mov
ss
jb
mov
movsb
mov
mov
sbb
leave
add
lret
push
jecxz
mov
out
movsb
in
xchg
gs
push
daa
inc
sti
cmp
aad
mov
mov
push
add
ficoml
dec
scas
pop
inc
mov
mov
push
sub
js
cmp
push
gs
sub
insl
aaa
loopne
in
or
pop
in
ja
xor
loope
inc
push
add
inc
pop
xchg
mov
insl
and
xchg
subb
xchg
les
xor
sub
je
ss
jno
fmuls
fistpll
insl
lock
popf
fsts
pop
pop
adc
jne
adc
out
das
inc
out
sahf
ret
inc
mov
je
or
jge
fisubl
fnstenv
dec
adc
lcall
clc
push
idivl
cltd
cwtl
mov
cs
movsl
xor
dec
mov
push
test
pop
loopne
loop
dec
out
adc
dec
xlat
enter
aaa
in
xor
insl
cmp
dec
das
and
lods
jae
xor
sub
mov
hlt
inc
out
sub
loopne
inc
out
push
or
pop
das
in
push
mov
fistl
stos
mov
mov
cmp
andl
sub
mov
lods
mov
aad
jo
pop
call
xor
mov
lods
in
lds
jmp
rol
shlb
push
or
mov
out
xchg
ja
ja
mov
jge
add
leave
sbb
cmp
lods
dec
jge
sub
mov
push
in
or
loope
xchg
adc
mov
call
push
and
jp
ret
push
pop
lods
repz
mov
movsl
xchg
testl
xchg
stos
jecxz,pt
and
int
arpl
or
ret
push
rorb
pushf
or
mov
sbb
scas
sub
aam
push
mov
push
shrl
loop
sbb
or
imul
incl
pop
pop
jo
mov
mov
xchg
or
cwtl
or
cmc
jae
xchg
add
or
jge
sub
inc
xchg
shl
cld
add
adc
sbb
mov
jp
inc
dec
sub
sbb
pop
ja
shlb
adc
bound
bound
cs
or
mov
jno
inc
hlt
inc
out
inc
out
js
lods
lods
and
lock
jns
xlat
push
clc
rcrl
mov
nop
sbb
push
push
push
out
test
add
cmc
cli
out
or
dec
lcall
imul
lcall
ret
add
mov
test
lea
add
lods
outsl
in
sub
push
stc
stos
or
test
in
je
and
test
sarb
pop
cmp
xchg
sub
scas
fs
es
out
rclb
cmpsb
push
adc
add
lcall
push
mov
sarl
or
xor
dec
jp
ja
rolb
inc
shl
adc
jbe
mov
imul
dec
mov
push
jno
in
pop
mov
jg
icebp
mov
popa
sbb
mov
xor
mov
sbb
stc
or
xchg
arpl
mov
xchg
mov
or
xor
iret
in
scas
loop
sbb
fucomip
sbb
hlt
inc
pop
mov
xchg
jo
stos
out
gs
out
cltd
daa
jmp
lock
rorb
mov
adc
and
roll
fnstcw
mov
je
sub
daa
daa
mov
test
mov
arpl
lods
adc
dec
push
idivl
cmp
sti
dec
dec
data16
out
push
lcall
jp
addr16
mov
lds
ja
xchg
test
insl
dec
out
push
mov
stc
clc
cltd
pusha
ljmp
dec
pop
pop
clc
insb
aad
jno
shlb
mov
adcl
lods
shl
lods
fildl
jl
and
adc
cmpsb
test
mov
stos
mulb
xchg
in
fsub
es
dec
and
fcoml
gs
xor
cld
xor
dec
aam
mov
dec
lcall
scas
imul
xchg
jbe
push
movb
adc
cli
ss
push
pop
pop
sub
not
shll
adc
cmpsl
aaa
or
or
pop
insb
ja
mov
add
cmpsl
jl
xchg
or
roll
jnp
ja
das
lcall
pop
js
les
inc
fidivrl
pusha
inc
hlt
push
inc
test
add
push
fisttps
add
xor
insl
das
dec
mov
lods
in
inc
into
bound
inc
lea
fisubs
or
jnp
pop
in
inc
notl
jno
mov
cld
inc
xor
pop
pop
xor
sahf
popa
fnstenv
pop
ljmp
outsl
mov
ja
and
jg
pop
and
hlt
out
adc
jge
sbb
sbb
int
lea
lret
xchg
lods
sub
leave
sub
dec
adc
xchg
arpl
jb
add
mov
dec
int3
pop
cmc
fiaddl
jo
fbstp
aad
xchg
lds
pop
jno
push
cmp
hlt
pop
in
mov
daa
cmp
aad
gs
cmpsl
negb
sbb
pop
adc
aam
sbb
xor
clc
mov
adc
ljmp
scas
jl
sub
bound
xchg
xor
adc
inc
xor
mov
push
cmpb
mov
sub
inc
roll
add
insb
nop
outsb
outsb
push
lods
ljmp
push
mov
add
ljmp
mov
sbb
dec
lods
xchg
mov
aam
mov
xchg
shl
leave
sbb
mov
insl
fcom
jns
pop
cmc
pop
inc
in
gs
je
outsb
cmp
lds
add
sbb
sbb
and
dec
out
test
mov
adc
test
stos
sub
sub
faddp
enter
imul
fidivrs
aam
dec
mov
mov
lcall
psubq
cs
push
mov
call
xchg
xchg
mov
push
orps
lods
test
push
outsb
mov
icebp
dec
fistps
mov
dec
mov
rcll
add
mov
sbb
push
lods
int
sub
dec
push
mov
xchg
repz
jecxz
ss
sub
push
sbb
fbstp
gs
sub
dec
stos
cli
out
mov
or
mov
js
pop
iret
rol
imul
adc
inc
in
jg
shlb
leave
add
fsqrt
bound
push
push
fisubrl
push
inc
inc
xchg
or
xchg
xlat
sahf
sub
jbe
jmp
jge
mov
loope
sbb
loope
insl
xchg
sub
popa
dec
outsl
in
xlat
jecxz
lret
inc
sbb
addb
out
sbb
adc
adc
je
mov
call
clc
pop
mov
and
or
jge
mov
xlat
pusha
xor
cmpsb
xor
xor
sbb
sub
sarl
mov
sti
push
mov
mov
mov
movsb
cmc
repz
ret
xchg
insl
sbb
jnp
mov
test
mov
mov
pushf
ljmp
insb
adc
daa
mov
mov
sub
rclb
shrb
mov
mov
sarb
in
test
jno
arpl
dec
pop
fwait
push
dec
jnp
xor
dec
mov
imul
ja
lret
sub
inc
adc
mov
mov
sti
sbb
jne
pusha
std
add
add
addl
jns
add
cmp
out
insb
jns
stos
jae
leave
and
test
xchg
arpl
push
pop
lods
out
jmp
sbbl
jo
sbb
test
inc
xchg
sarb
inc
ret
mov
scas
push
sbb
cs
pop
popf
sub
mov
sbb
adc
pop
push
push
adc
hlt
sbb
sti
mov
mov
push
jp
add
jnp
call
inc
fadds
cmp
sarb
add
adc
repnz
cwtl
or
out
data16
and
outsl
insl
adc
sahf
sti
mov
mov
aam
xchg
pop
cmp
mov
add
cli
inc
fnstenv
or
stos
emms
jns
cwtl
sub
inc
and
hlt
repnz
cmc
cmc
je
cmpsb
xchg
fwait
add
outsl
cmc
ss
and
int3
dec
in
sbb
push
push
dec
inc
loope
jb
and
in
mov
gs
cmc
inc
fiaddl
sub
rorb
mov
imul
jae
std
lret
inc
mov
or
enter
and
xor
mov
dec
nop
fstl
sti
sar
aam
add
push
shl
mov
out
loopne
or
adc
pop
xchg
sti
out
jmp
xchg
dec
add
push
jbe
enter
xchg
sbb
dec
dec
adc
xor
dec
jecxz
in
ljmp
jns
sbb
push
mov
std
inc
push
jge
aam
cmp
dec
xchg
jg
sub
pop
xchg
in
neg
insl
add
sar
insl
lods
mov
testb
int
mov
es
out
mov
inc
ja
push
cmp
adc
arpl
xlat
lods
mov
mov
scas
inc
mov
dec
sub
xor
mov
shl
js
sbb
xor
outsl
jp
movsb
mov
fadd
adc
scas
sbb
bound
xlat
imul
cwtl
inc
pop
cmpsl
push
or
adc
test
ja
push
imul
mov
add
inc
xchg
loop
push
cs
bound
adc
pop
mov
fwait
or
div
cmpsl
les
pop
fisttpl
sbb
jmp
adc
mov
cmpsl
inc
rcr
push
sub
pushf
cld
insl
and
stc
cmp
jecxz
mov
jmp
test
shlb
cmp
dec
xor
cmpsl
js
sti
pop
clc
ds
jle
push
push
mov
negb
pop
aas
repz
mov
push
mov
call
lea
test
addr16
frstor
movsl
pop
inc
dec
lea
xchg
cmp
xor
adc
or
std
adc
adc
jecxz
inc
das
mov
fsts
nop
cmc
cmpsb
inc
bound
pop
adc
inc
dec
out
imul
data16
out
push
jecxz
fs
leave
cmp
test
sub
mov
mov
cmp
mov
shl
add
mov
cmp
repz
pushf
addr16
in
inc
cmp
and
das
add
and
inc
fsubl
lret
jns
lret
jns
hlt
in
nop
dec
stos
cmc
mov
aas
pop
mov
jle
jae
lret
push
cmc
lcall
sahf
adc
xchg
sarb
repnz
cmp
int
mov
jmp
cli
and
js
mov
jl
dec
mov
icebp
fwait
jge
sbb
outsb
sti
neg
jno
push
xlat
lock
mov
je
popa
int
xor
sub
xor
and
and
add
inc
divl
ja
ss
jmp
push
adc
jmp
imul
pop
popf
fadds
xor
fstpl
xchg
xchg
shll
iret
sbb
jle
mov
xchg
mov
sub
wbinvd
dec
or
hlt
lahf
adc
jno
mov
sbb
dec
ja
sbb
mov
cs
mov
aad
outsl
xchg
xlat
mov
add
add
mov
popa
outsl
mov
fdivrl
test
jno
lcall
jne
out
sub
out
dec
xchg
xor
sbb
add
mov
dec
cwtl
and
add
bound
scas
bound
bound
stc
cmp
mov
iret
out
jno
mov
mov
and
cmp
cli
add
sub
cmpl
in
mov
sbb
jae,pn
sbb
mov
out
sub
out
pop
fldenv
mov
repnz
dec
add
clc
push
add
push
xchg
cltd
add
lret
xchg
into
pop
pusha
add
mov
cmp
or
das
mov
lret
int3
sub
sub
int
xor
sbb
cmp
mov
test
mov
cltd
sahf
sub
daa
add
or
inc
pop
arpl
std
dec
xchg
inc
dec
incb
sbb
fcmovnu
std
stc
test
rcr
js
add
bsf
pop
add
push
xor
cmpsl
loope
fdivrl
xor
cltd
cmp
or
dec
ret
push
adc
dec
and
in
sahf
scas
cld
push
mov
mov
lds
aam
mov
xchg
and
int3
out
movsb
push
lock
test
insl
into
addr16
adc
dec
jne
je
iret
xchg
fs
push
imul
mov
sbb
dec
dec
push
lcall
aas
pushf
fwait
insl
jo
fidivl
aam
out
sbb
rol
sahf
push
xchg
aam
and
jp
sub
lods
repz
mov
xor
test
dec
stos
fcmovnbe
imul
je
ret
jb
mov
mov
fcomps
mov
xor
icebp
xchg
pop
cld
enter
sbb
jmp
or
mov
cwtl
pushf
sti
ja
pop
xor
dec
out
fs
mov
gs
push
enter
or
mov
cld
mov
sbb
or
adc
lods
adc
mov
shll
mov
pop
jecxz
cmp
push
sbb
loopne
lcall
jbe
pop
adc
inc
sbb
push
outsl
mov
or
lcall
fsubrs
int
int
push
inc
in
jbe
fbld
sub
pop
sub
and
gs
xchg
imull
js
faddl
shll
jns
xchg
arpl
add
int3
lret
insb
jb
sub
jle
mov
cmc
pushf
clc
dec
sbb
out
push
pop
mov
aas
std
mov
aam
fstps
or
sbb
mov
aaa
mov
sbb
lret
ror
mov
sub
pop
jbe
mov
stos
pop
sbb
popa
aaa
inc
fs
or
rorl
into
fdivp
and
cmp
push
adc
jl
mov
flds
setle
mov
pop
inc
in
and
mull
popf
inc
mov
sbb
push
push
fsub
mov
or
lods
shl
jle
pusha
mov
jp
int3
ja
xchg
pop
and
xor
xchg
pop
cltd
aam
shll
push
inc
imul
loope
repz
popf
sbb
movl
inc
mov
mov
aaa
movsl
mov
xor
jo
testb
xchg
fstl
dec
fdivrs
jg
adc
or
push
sbb
adc
dec
push
jno
pop
enter
test
mov
dec
push
fcoms
rcl
mov
inc
jl
xor
ret
fisttps
xrelease
lods
les
lret
fwait
mov
scas
test
inc
aad
dec
xor
sub
jmp
pop
xor
sbb
rclb
shl
inc
pop
push
iret
or
jle
or
add
fiaddl
icebp
mov
repnz
and
xor
js
in
push
outsb
pop
or
adc
es
push
sbb
imul
shlb
mov
jo
insb
mov
jae
push
sub
outsb
loopne
mov
hlt
out
cmp
sub
mulb
cmp
outsb
lahf
shlb
mov
inc
dec
orb
sti
outsb
pusha
pop
push
or
sbb
enter
repz
sub
jnp
jl
xorb
int3
pop
in
and
jbe
add
out
or
divl
push
add
aad
mov
test
mov
mov
rcll
or
sub
fisubrl
xor
mov
pop
jns,pn
int
sub
mov
adc
sbb
subl
in
in
xor
cmp
fcmove
arpl
or
dec
pushf
mov
popa
lock
jge
in
dec
rcr
add
mov
sub
outsb
test
pop
mov
out
push
pop
fldt
mov
add
cwtl
push
jecxz
sahf
std
popf
jmp
shll
mov
jmp
cltd
popa
cmpl
or
adc
leave
sbb
aad
xor
stos
aam
push
jne
test
dec
mov
add
xchg
cmpb
adc
push
add
insb
push
jge
sub
xchg
sarb
xor
testb
sub
fisubl
popa
lret
out
pmaddwd
jge
fists
into
repz
pushf
nop
ljmp
jb
lret
repnz
xchg
std
cld
mov
mov
mov
mov
mov
lods
fisttpl
insb
sbbb
jl
and
push
outsb
adc
movsb
mov
adc
xchg
adc
cmpsl
inc
popf
mov
cmp
es
xchg
faddl
js
cmp
je
or
dec
pop
out
pop
push
lods
push
mov
push
or
inc
xchg
inc
push
inc
push
add
inc
xchg
push
cmp
mov
pushf
insb
pop
daa
subb
cld
scas
pop
ret
gs
lea
adc
mov
pop
sub
fldl
addl
xchg
jne
adc
mov
hlt
cli
sbb
dec
sahf
add
int3
xchg
icebp
in
les
jns
jmp
lahf
pop
and
xchg
cmpsb
adc
dec
inc
std
leave
aam
into
rcr
fsincos
dec
fisttpll
cltd
andb
int3
pop
rorb
mov
dec
jae
cmpsb
leave
jo
inc
imul
jnp
repnz
sub
pusha
pop
xchg
or
adc
roll
rclb
inc
dec
xchg
add
mov
add
rol
pop
cmpsb
push
jno
cltd
pop
push
xor
stos
push
test
stos
daa
lds
stc
xor
mov
imul
movsb
out
add
and
lods
dec
xor
cmp
inc
mov
lds
hlt
ljmp
pusha
dec
sub
imul
mov
mov
cmpl
stos
push
jns
xor
inc
mov
out
mov
cld
ja
in
sbb
jb
mov
push
jno
shl
cmp
imul
adc
loop
fidivl
xor
ret
cs
add
jae
imul
and
sbbl
mov
fdivr
xchg
mov
adc
inc
data16
jno
shrb
inc
movsb
push
mov
adc
inc
cs
mov
daa
and
test
addl
imul
std
add
mov
cmpsl
xor
into
stc
int3
cmpsl
or
lahf
jmp
mov
sub
mov
pop
pop
jne
jle
clc
pop
sub
push
cld
shlb
dec
jmp
cmpsl
and
inc
mov
in
pusha
test
pop
pop
lret
movsl
fsubs
jns
addl
cwtl
int3
iret
popa
movsl
pop
xor
pop
jo
addl
xchg
aaa
push
rcrb
in
lret
inc
jne
inc
arpl
decb
jl
xchg
divl
mov
add
fldenv
rcrb
mov
fwait
call
cltd
stos
xchg
outsb
jno
jp
call
sub
rcll
add
sbb
or
imul
lahf
dec
stos
push
cmpsl
aas
sub
rolb
sub
dec
addr16
pop
xchg
fisubl
test
ja
push
cmpsl
fadds
jmp
inc
lods
jns
and
dec
push
pusha
out
mov
es
xchg
mov
aam
fs
pop
lret
decl
inc
pop
fnstsw
in
adc
imul
je
insl
xchg
lds
dec
mov
mov
out
mov
adc
repnz
push
cs
pop
test
jb
shrl
je
fs
loopne
imul
in
mov
xor
cmc
lret
in
insb
sbb
es
orb
xlat
pop
add
mov
jno
fisubrl
out
ror
xchg
repnz
jmp
fdivl
xor
das
cwtl
adc
xacquire
fcoms
mov
icebp
jne
movsb
xor
jp
and
int
cmpsl
shlb
daa
pop
and
lock
lcall
lods
pop
mov
adc
mov
sbb
xor
dec
testl
or
jecxz
xchg
jns
dec
aam
lock
jle
adc
sub
xor
adc
xchg
dec
sub
or
imul
inc
lods
sub
shll
pop
jge
loop
push
cli
sti
in
jmp
mov
jecxz
ret
notb
sub
insb
push
jne
dec
mov
jg
inc
ds
std
ret
and
cli
push
pop
outsl
xchg
rcll
push
es
out
mov
push
std
aam
test
in
adc
jle
cs
lds
movsb
xchg
sub
notl
inc
pop
jp
test
push
and
ljmp
sbb
scas
rorl
pop
mov
push
pop
mov
inc
vrcp28ps
add
dec
mov
pop
ds
out
adcl
jmp
decl
in
mov
ss
out
lret
mov
jmp
or
and
or
imul
scas
mov
divb
roll
aas
fcoms
pushf
add
mov
lods
es
push
jg
insb
sbb
jno
push
jmp
imul
mov
icebp
incl
sub
xchg
or
xor
cwtl
jg
loopne
add
cmpsl
cld
lahf
sbb
lods
ret
fs
mov
sbb
stos
sub
cltd
sbb
hlt
sub
adc
cs
jae
cld
ret
cmp
cmpb
adc
mov
inc
imul
adc
sbb
js
sbb
push
add
data16
pop
sbb
pop
mov
cmp
std
fisubrs
ja
mov
push
mov
fs
or
mov
jo
and
mov
fimull
gs
stos
fdivrs
pop
enter
lods
cmp
xlat
sub
jae
jne
mov
push
push
inc
push
mov
or
push
push
sbb
fimull
jmp
rcll
mov
fistps
cmp
in
push
xor
imul
or
es
and
inc
and
cmp
into
push
or
mov
jae
leave
jnp
sub
jecxz
stc
adcl
lock
arpl
std
out
sub
mov
es
sbb
xor
adc
ret
dec
mov
add
dec
mov
inc
jne
rcl
daa
sbb
and
cmpsb
xor
or
in
sub
xor
nop
negl
in
aaa
jecxz
popa
xchg
lea
fsubrs
mov
mov
pop
iret
incb
xchg
cmp
popf
mov
mov
fs
mov
test
arpl
add
loop
sbb
dec
das
sub
mov
pop
cmpsb
jae
test
cmp
lret
sahf
inc
sbbl
push
loope
icebp
push
add
xor
leave
lock
mov
call
sub
and
bnd
insl
shll
hlt
scas
cmc
sub
mov
mov
push
push
mov
mov
xor
cltd
pop
repz
sbb
ss
lcall
outsb
inc
sahf
das
arpl
sbb
sarb
test
mov
jmp
push
imul
icebp
mov
lea
and
jg
shrl
mov
fistps
add
pop
inc
add
mov
inc
dec
cltd
clc
push
clc
and
mov
cli
fcoms
dec
sub
mov
cmp
jl
cltd
subl
cmpsb
jno
sbb
popf
mov
popl
mov
mov
xor
into
xchg
jae
test
sub
jmp
and
in
and
das
dec
inc
add
jg
ds
and
and
adc
inc
jae
adc
cmpsb
ja
insb
dec
lods
int
jns
pop
lds
or
and
test
notb
or
mov
mov
leave
jecxz
push
cld
shll
or
imul
xchg
pop
aaa
cmpsb
inc
mov
fwait
dec
add
sbb
adc
or
repz
ret
xbegin
imul
sbb
push
sbb
adc
inc
adc
sub
cmp
roll
aas
out
mov
lea
mov
mov
std
jne
popf
scas
repnz
adc
aaa
scas
sbb
addl
push
sti
lods
mov
sub
mov
mov
lods
out
mov
jp,pt
int
ret
cmovno
test
cli
mov
in
ljmp
cli
sbb
and
and
movsb
in
inc
push
popa
pushl
mov
je
jecxz
shlb
call
xchg
jne
ret
cmpsb
xlat
cmp
and
pop
rcr
mov
adcl
xchg
dec
enter
jo
and
xorb
jmp
jge
jae
sbb
push
loop
pop
in
cmp
inc
jbe
fsub
pop
mov
ss
lret
jmp
add
cmp
adc
cld
dec
xchg
fucomip
cli
and
sahf
add
repz
add
mov
test
mov
mov
dec
test
inc
sub
mov
enter
ss
xor
ficoml
mov
sub
shl
add
jg
pop
lahf
pop
push
loope
movb
mov
jmp
fildll
mov
dec
mov
xchg
imul
sar
pop
lahf
xor
sbb
pop
movsl
cmp
sub
mov
aas
rorb
push
mov
or
mov
fbld
inc
lret
lea
inc
pusha
mov
inc
test
mov
jmp
jg
xor
jb
mov
and
ljmp
push
andl
xchg
mov
rorb
movb
outsl
jecxz
jb
xor
ja
mov
pop
aaa
pop
cmp
stc
push
mov
cmpsl
or
push
scas
std
mov
and
sahf
insl
nop
imul
in
adc
stc
add
out
add
inc
ret
push
cmp
es
mov
lods
or
inc
and
scas
lods
pusha
mov
mov
mov
pusha
pop
inc
mov
mov
sqrtps
lock
mov
xchg
out
jbe
mov
sub
jmp
lahf
push
sbb
mov
jecxz
ret
sub
jbe
and
cmp
scas
mov
and
add
ds
lods
addr16
dec
mov
xchg
xor
cmp
xor
cmp
jo
mov
xchg
or
jmp
iret
pop
mov
inc
mov
cmp
mov
sbb
or
or
out
and
adc
jl
lods
pop
mov
ljmp
mov
subb
jg
pop
shlb
stc
inc
fst
push
or
xchg
jo
mov
lcall
mov
sub
jecxz
pop
in
mov
mov
scas
out
mov
add
dec
or
aad
fdivrl
mov
and
inc
dec
add
roll
mov
test
int3
push
sbb
lret
mov
adc
aaa
xor
xorb
neg
mov
lds
movsb
shr
stc
jbe
or
push
ret
jnp
iret
arpl
or
std
scas
push
dec
jo
mov
imul
loopne
movsb
pop
and
mov
jne
pop
pop
fmul
mov
les
outsl
cli
enter
nop
cmp
lods
jmp
xchg
imul
mov
rcl
jmp
sti
add
loope
pop
enter
mov
pop
xchg
orl
cltd
rolb
clc
or
repz
call
test
xchg
adc
jo
mov
pop
addb
loopne
push
and
subl
add
adc
nop
sub
cmp
sub
mov
imul
mov
xchg
test
cwtl
fbld
std
ljmp
cld
dec
fsubl
jmp
das
scas
jl
mov
push
addl
movsb
roll
jp
xchg
mov
pop
hlt
jae
push
into
jbe
push
call
stos
leave
sub
daa
shll
in
add
dec
pop
aam
inc
and
mov
mov
xchg
pop
mov
xchg
sbb
movsb
inc
insb
sub
sub
adc
mov
mov
icebp
test
inc
fnstcw
rcr
xlat
mov
shll
xchg
pop
dec
roll
inc
mov
sbb
test
fistpl
adc
out
mov
sbbb
nop
lds
aas
ja
out
mov
and
or
and
mov
and
cmp
pop
mov
call
dec
pop
mov
test
imul
into
jne
or
aas
and
and
inc
scas
sahf
cs
push
cmpsb
cmp
outsb
ds
add
push
loope
or
aaa
repnz
fs
jle
mov
add
in
mov
andl
cmovge
add
frstor
mov
imul
test
and
mov
pop
ror
push
divl
jbe
vandps
fxch
movsl
das
pop
pop
pop
push
ljmp
push
inc
in
icebp
or
stos
or
xor
addr16
movsb
mov
outsl
das
jg
jb
sub
dec
push
scas
cmpsl
cmp
sar
rorb
pop
adc
ficomps
stc
and
fcoms
fwait
adc
jp
mov
sub
clc
mov
cmp
or
ja
push
xor
popa
fcoml
out
inc
sub
sahf
rcr
incb
xchg
in
inc
fwait
jl
popa
dec
out
inc
adc
mov
jp
sub
push
cltd
push
in
xlat
xor
add
pop
push
add
out
and
je
xchg
into
xor
jge
lcall
dec
jmp
mov
es
inc
insb
call
pop
jl
mov
cmp
das
add
mov
jl
mov
sub
fwait
jae
idiv
add
mov
add
dec
adc
enter
sub
insb
divl
loopne
mov
negl
jmp
movsl
daa
call
pop
insl
dec
ret
dec
sub
cs
lds
xor
movl
lahf
sub
fcomip
pop
sub
lods
xor
outsb
das
inc
mov
mov
sbb
ret
mov
das
cmp
es
inc
vpmovdb
bound
call
sbb
and
push
pusha
or
lret
subl
and
addr16
mov
icebp
and
pop
xchg
test
push
sbb
adc
dec
add
dec
mov
inc
push
mov
repnz
std
inc
and
or
add
loopne
stc
jmp
push
adcl
mov
and
in
ja
mov
dec
dec
std
dec
out
fadds
scas
inc
xchg
aam
pusha
nop
shll
std
or
loop
sub
jbe
into
scas
mov
ret
lret
int
mov
rcrl
es
mov
inc
dec
imul
dec
mov
cmpsb
in
sub
adc
scas
add
pop
sbb
bound
mov
jne
test
mov
mov
js
push
push
fadds
cltd
inc
lcall
dec
inc
repnz
inc
dec
inc
pop
inc
lret
inc
and
fs
inc
enter
lret
adc
notb
or
push
lcall
jbe
jb
cmpsl
divb
divb
xchg
add
repnz
inc
add
sub
repnz
fmull
ja
mov
loopne
push
int
fidivl
mov
test
cmp
aas
cmpsl
inc
and
fptan
pop
adc
repnz
xlat
sub
stos
cmp
jge
push
mov
lods
adc
rolb
mov
shll
jge
test
adc
sar
mov
cwtl
test
icebp
sub
into
push
in
repnz
cmp
int
imulb
cmp
xor
and
sarb
sub
cld
xchg
add
hlt
jle
jmp
or
sbb
std
lods
cmp
dec
or
popf
popa
test
pop
and
aad
jb
les
xchg
mov
dec
adc
daa
das
out
adc
dec
fldt
push
out
jl
and
push
mov
mov
inc
outsb
mov
mov
pop
das
sub
inc
pop
ja
idivl
inc
jnp
ret
fsubl
stos
rdtsc
repz
push
lds
aaa
adc
pop
inc
stos
pop
pop
loop
insb
jg
js
sub
insl
popa
xchg
pop
stc
sbb
orl
mov
push
adc
mov
push
pusha
sbb
mov
loope
dec
in
jmp
push
add
pop
fimuls
imul
cmc
mov
stos
sbb
rorl
jb
push
cmc
cmp
scas
inc
rclb
push
pop
jg
or
push
mov
aas
mov
cmpsb
xchg
aam
jp
lcall
xchg
jle
and
pop
popa
xchg
jbe
outsl
and
add
pop
imul
mov
insl
sub
aas
cmp
push
out
fs
dec
popf
scas
enter
and
cmp
or
mov
mov
imul
inc
je
add
dec
mov
sti
stc
test
movsl
mov
pop
test
rclb
ljmp
je
sub
cld
jnp
repz
sub
sub
mov
jmp
mov
jge
pushf
or
jp
jb
mov
jo
sbb
push
daa
lods
pop
xchg
in
cmp
and
fists
add
in
mov
iret
mov
int3
lret
ss
inc
stc
push
adc
pop
mov
insb
sbbl
sar
ljmp
in
inc
stos
sub
movsb
jbe
ss
es
mov
int3
dec
push
sub
int3
sub
adc
mov
andb
adc
inc
pop
mov
mov
xchg
gs
mov
fcmovbe
fdivp
and
fidivrl
pop
movsl
repz
xor
xchg
int3
sbb
lods
adc
dec
insl
or
and
cmp
dec
lret
jmp
outsl
jg
mov
aad
cld
jno
or
dec
pop
shll
stc
sub
mov
out
xchg
adc
lea
loop
lahf
mov
sbb
stos
pop
rcll
xchg
add
push
jae
sub
aam
sub
popf
mov
add
frstor
cld
js
sbb
test
jg
mov
xchg
push
ss
cwtl
cmp
adc
das
outsl
pop
lcall
rclb
stos
and
xchg
cmp
loop
dec
jo
xor
cmp
jnp
push
movsl
clc
jnp
and
adc
mov
push
mov
pop
or
sahf
sbb
out
or
pop
daa
sahf
icebp
dec
out
fucom
mov
iret
std
ja
pop
adc
int3
push
in
repnz
or
push
dec
add
movsl
push
jae
in
and
je
push
xchg
lock
imul
js
inc
pop
movsb
cmp
sbb
hlt
int
adc
add
out
push
fs
cli
cmpsl
das
sahf
sti
clc
out
rcrb
cmp
andb
or
pop
mov
adc
sbb
push
mov
mov
fiaddl
and
adc
mov
lcall
or
repnz
inc
xor
int3
sbb
jg
enter
in
xor
fdivrs
ret
xor
jecxz
jmp
ret
loopne
ja
adc
jmp
fs
dec
cwtl
pop
xchg
stc
js
pop
inc
popf
and
cmp
clc
inc
xorb
jle
push
enter
int3
roll
cmp
mov
mov
js
xor
jno
jmp
dec
sti
sub
jne
and
pop
inc
fwait
test
add
inc
in
mov
mov
jns
repz
out
sbb
call
cmp
sub
adc
test
fidivrs
int3
ds
loope
fidivrs
sub
sub
xor
test
pop
push
int
test
xchg
pushf
fwait
mov
xchg
sbb
push
inc
decb
cmp
jg
cmp
roll
mov
dec
ret
jl
mov
mov
stos
movswl
pop
clc
pop
lret
and
ret
xlat
int
dec
xor
dec
mov
jmp
roll
mov
aad
gs
lea
and
aas
mov
jb
fdivp
or
popf
mov
sti
fsts
add
cmpsb
insl
add
popf
daa
pop
adc
fwait
popa
mov
mov
and
mov
jge
int
pusha
jae
and
inc
aas
movsb
pop
sub
inc
popf
imul
pop
mov
xchg
in
daa
dec
ljmp
adc
in
pusha
cld
adc
pushf
mov
cmp
arpl
or
scas
inc
cltd
out
movsl
mov
aas
mov
jmp
js
push
das
pop
and
and
adc
rcrb
xchg
pop
push
mov
ljmp
shlb
into
mov
fwait
sub
push
dec
lock
test
cmp
cmp
lds
jge
loopne
arpl
inc
fsubrs
sub
call
xlat
and
mov
in
pop
sbb
aam
or
cmpsl
leave
sbb
icebp
xchg
popf
popf
push
dec
cmpsb
jecxz
fwait
aad
cwtl
call
xlat
and
pop
mov
sub
popa
xchg
add
xchg
mov
mov
jno
inc
pushf
clc
inc
clc
xchg
inc
rorb
int
mov
xor
mov
adc
inc
shll
pop
fwait
dec
lret
movsb
jmp
and
mov
scas
stc
ljmp
data16
jne
iret
mov
aad
rcrl
or
inc
mov
pinsrw
nop
push
fwait
sub
xchg
push
cli
decl
sbb
adc
inc
addl
fdivr
cmp
mov
sub
in
aas
lods
cmpb
js
repnz
into
ds
idivl
or
adc
es
fldcw
out
andl
sbb
pop
or
imul
sub
nop
test
shlb
xchg
insb
aad
loope
push
cmp
cmc
sub
enter
mov
rcrl
cmpl
movsb
aaa
sub
jle
test
dec
sahf
pop
inc
out
in
fs
mov
hlt
mov
rclb
enter
xchg
outsl
cmpsl
mov
leave
sbb
enter
or
cmp
mov
and
add
xchg
pop
fnstcw
inc
push
out
pop
adc
jae
leave
dec
pop
adc
sub
sub
xchg
inc
or
filds
nop
sbb
ret
sahf
pusha
mov
xchg
sbb
mov
pop
out
add
mov
clc
incl
sub
inc
js
into
push
mov
enter
jno
xor
sub
inc
sub
xchg
inc
lods
mov
test
movsb
add
pop
dec
out
mov
orl
fnstenv
push
test
jno
mov
or
cmp
scas
nop
dec
out
or
lcall
in
je
adc
int3
jae
aaa
es
jecxz
lock
fisttps
push
adc
mov
js
das
cmp
push
les
or
enter
bswap
sti
aad
std
loop
adc
arpl
ds
rclb
ljmp
mov
xchg
sbb
jle
fidivs
leave
repz
add
and
dec
inc
mov
add
pop
sahf
mov
inc
out
je
inc
inc
movsl
xor
xlat
aam
aad
std
xchg
fcmovb
mov
ja
outsb
jns
cmc
cmp
add
pop
movsl
mov
mov
or
add
jae
aaa
mov
and
dec
adc
out
xor
add
jbe
roll
rcrl
les
adc
int3
dec
fwait
pop
rcl
icebp
mov
inc
lret
mov
jns
pop
iret
adc
addr16
mov
sub
jno
or
popf
jnp
jb
xchg
jno
andb
scas
movsl
mov
cmp
hlt
adc
sub
addr16
mov
notb
adc
ret
adc
ret
rcrl
and
jle
mov
and
daa
adc
jb
cmpsb
xor
pop
imul
cmp
or
push
fsubl
push
mov
mov
imul
data16
xor
test
mov
and
subb
mov
inc
test
xlat
sbb
push
mov
fmul
aaa
xchg
insb
xor
cmc
call
jmp
pop
fcoms
or
mov
lcall
mov
fdivrp
xchg
scas
inc
pop
xor
pop
mov
imul
movsb
roll
xor
jne
and
adc
add
xchg
lret
dec
out
push
rcl
in
je
pop
sub
push
push
push
shlb
addb
bound
mov
outsb
or
daa
or
cmc
fstpl
push
dec
pop
jle
shr
in
mov
lcall
cmp
imul
movsb
stos
das
mov
pop
scas
lea
push
jge
push
out
xchg
addr16
mov
popl
jb
pop
jg
cmp
sbb
es
shlb
cmpsl
enter
sub
icebp
mov
jecxz
add
test
xchg
push
push
jo
rorl
or
jmp
aaa
jae
shr
mov
and
sbb
dec
icebp
sub
xchg
inc
xchg
mov
mov
pop
jp
arpl
cwtl
sbb
cld
dec
xor
in
pop
enter
sub
addl
xlat
add
add
lret
adc
les
cltd
jae
loope
and
int3
xor
loope
dec
in
adc
push
je
call
mov
xor
stc
mov
lods
lods
push
jle
mov
call
and
pop
add
sbb
cmp
or
loopne
adc
sub
bound
aaa
das
int
xlat
loope
inc
xor
push
mov
xlat
repnz
stos
sub
add
jae
fwait
sub
fiadds
dec
orb
xor
jmp
aaa
dec
aaa
push
xchg
mov
pop
stos
push
jnp
hlt
daa
jae
dec
scas
call
dec
jbe
dec
xor
jmp
jle
or
jge
mov
stc
rcl
add
add
movsb
sti
sbb
sahf
sbb
cmc
dec
enter
xchg
ja
adc
repnz
cmp
xor
outsb
call
jbe
xchg
add
jmp
jb
std
adc
roll
push
fdiv
iret
mov
xor
jo
lock
push
data16
mov
mov
jecxz
mov
push
or
adc
int3
jne
or
rol
jmp
call
sub
jno
pop
pop
aaa
xor
lcall
push
loop
fldt
sbb
mov
jle
cmp
mov
shlb
mov
out
addr16
and
mov
lds
pushf
pop
cmpb
xchg
inc
or
rorl
push
or
clc
xchg
mov
loope
test
mov
clc
cld
mov
stos
rcll
pop
sbb
test
sub
xor
icebp
fwait
adc
push
rorl
push
in
inc
cmc
lcall
xor
push
stos
sub
out
lds
sbb
fadds
scas
pop
push
mov
aad
xlat
leave
inc
insl
inc
std
push
mov
ds
mov
dec
or
xchg
dec
add
in
aaa
mov
add
jno
jl
or
nop
pop
lods
and
stos
xlat
mov
leave
inc
sub
insb
mov
cmp
cli
pop
jl
push
scas
jg
inc
mov
or
sarb
lock
gs
mov
loopne
call
fsubs
loopne
xchg
pop
push
shrb
stos
xchg
neg
push
cld
jnp
mov
test
jno
insl
mov
jmp
cmp
aam
cwtl
jp
push
fisubl
in
dec
sbb
push
out
ss
push
pop
daa
fmull
inc
test
test
push
icebp
push
int3
iret
lea
sub
mov
les
js
mov
icebp
cld
ss
aaa
mov
loope
pop
insb
es
or
mov
mov
aaa
cmc
pop
jns
stc
add
scas
loope
xchg
mov
imul
pop
pop
jnp
sarb
insb
xchg
push
out
add
pop
sub
pop
leave
or
xorb
fsubrs
xchg
mov
xlat
fists
out
pop
jae
test
pushf
add
xor
sbb
scas
pop
lret
add
out
add
das
test
js
test
rolb
rorl
or
lahf
xchg
inc
cmp
popa
popf
mov
dec
stos
fiaddl
adc
lahf
sbb
jmp
push
mov
mov
mov
sub
xor
mov
ljmp
sti
mov
jg
mov
sti
popf
fidivrl
imull
jb
mov
mov
pop
ss
pop
sub
jl
cmpb
in
fisttps
push
cmp
jnp
push
push
out
nop
xchg
dec
inc
dec
push
jae
sub
aad
mov
outsb
or
xlat
push
ja
mov
jb
jae
xchg
or
repz
std
adc
inc
adc
dec
fcompl
push
pusha
lods
jo
mov
stc
cmp
and
add
mov
or
add
stos
mov
sbb
add
adc
je
mov
xchg
mov
inc
lds
push
cmpsb
repz
aam
mov
test
aam
mov
insl
clc
ds
or
bound
or
xor
adc
fsts
out
les
push
in
test
shl
push
mov
cmove
jge
jnp
inc
and
mov
mov
mov
sahf
xchg
andl
cmpsl
lods
lret
fsts
sbb
imul
lods
fstpt
xor
fnop
sahf
lock
lea
sbb
arpl
pop
pop
and
xchg
push
call
das
into
lock
adc
mov
outsl
ret
jns
inc
xchg
ror
pushf
fcoml
repnz
add
mov
mov
rcrl
repnz
lock
xor
dec
pop
or
jle
outsb
iret
sub
pop
mov
shll
js
and
mov
sbb
fcmove
iret
push
popl
insl
enter
cmp
out
int
push
pop
insl
mov
mov
cli
stos
jp
in
das
jbe
mov
test
xchg
mov
xchg
inc
cld
push
je
and
pop
xchg
mov
jge
push
dec
dec
xlat
push
imul
sub
sahf
xor
or
inc
repnz
je
addr16
loop
mov
cmpsl
lea
lret
mov
mov
jmp
clc
inc
dec
push
fdivs
mov
pop
jnp
imul
cld
xchg
jp
xor
xor
test
xor
jne
stos
arpl
xchg
sub
shl
scas
ror
dec
and
movsl
out
orl
outsl
int3
fdivp
ret
jle
cli
ja
inc
push
fwait
pop
fstl
and
das
xchg
inc
sbb
nop
mov
out
jge
inc
pop
lahf
es
outsb
push
or
inc
sub
mull
aas
and
pop
push
sub
mov
jl
mov
movsb
dec
mov
dec
dec
push
inc
sbbl
adc
repnz
ds
push
jg
push
cmc
outsl
jmp
sbb
mov
mov
cmp
daa
mov
movsl
inc
jecxz
xor
mov
jl
adc
je
inc
out
scas
xchg
and
loope
flds
scas
xor
js
cmpsb
movsb
lock
cwtl
ficoms
cmovbe
push
or
dec
jnp
pop
push
inc
ja
mov
fs
pop
mov
push
decl
iret
dec
clc
das
fmull
cld
jmp
inc
mov
pop
and
fistl
mov
and
xchg
or
pop
xchg
in
lds
fdivl
bound
std
out
mov
daa
or
jae
mov
div
imul
mov
subb
push
lods
xchg
jg
sbb
and
pop
push
jmp
mov
add
mov
push
mov
push
xchg
mov
push
jns
and
in
movsl
push
or
cwtl
sarb
sub
pop
test
push
pop
aaa
jne
push
sub
popa
cli
sahf
push
dec
cmp
dec
in
ds
sbb
fsubs
lods
stos
jmp
ret
cmpsb
ret
or
dec
push
sub
jbe
aam
xlat
sahf
push
and
push
cmp
cmp
ficoml
test
aad
lahf
mov
lcall
xchg
or
xchg
lds
xor
adc
jbe
dec
or
les
push
es
rcrb
bound
pop
inc
in
lock
bound
xchg
mov
xchg
sub
mov
inc
push
fdivs
pop
cmp
mov
push
xlat
and
cmp
pop
dec
inc
add
dec
jo
and
aam
adc
lea
inc
scas
arpl
mov
dec
clc
loopne
imul
mov
cmp
and
sbb
repnz
sbb
pop
leave
mov
push
loop
lahf
xchg
outsb
lahf
add
sub
adc
mov
out
hlt
mov
push
push
mov
pop
mov
inc
xor
addl
cmc
mov
stos
adc
outsl
cs
xor
adc
xor
sbb
stos
pop
dec
pop
stos
xor
fidivrl
imul
jg
fstpt
fstl
or
xchg
xorl
push
shll
or
mov
xor
lret
aad
adc
ficompl
xor
inc
xor
push
scas
cwtl
push
fistpl
out
mov
enter
je
pop
push
sbb
sub
mov
mov
lcall
mov
sbb
addr16
movsl
fidivl
mov
push
xchg
push
mov
pop
push
or
cmc
cmc
aad
idiv
inc
faddl
jmp
add
loop
sbb
push
stc
mov
xlat
mov
mov
push
dec
in
lods
clc
out
stos
mov
popa
ror
xchg
lret
pushf
insl
int3
in
sbb
add
loope,pt
mov
fistps
leave
lahf
ljmp
push
xchg
sbb
ljmp
inc
sbbl
cmp
sbb
nop
pop
int3
push
in
or
leave
mov
fdivr
add
inc
cmc
inc
push
int
out
aam
or
sbb
push
mov
mul
roll
jno
push
and
scas
nop
test
addb
cmp
fisttps
cli
rcrl
xchg
stos
adc
cmpsb
popa
jns
inc
imul
test
in
mov
out
sub
add
xlat
scas
lock
fucomi
inc
mov
insl
inc
cmpsl
pop
jbe
jns
pop
ret
cmp
jp
sub
cmp
negw
into
adc
outsb
leave
or
daa
dec
push
add
jno
aad
jae
aam
pop
sbbl
adc
pop
sub
push
xor
adc
jmp
les
adc
or
xor
cmpsb
push
inc
or
jge
sub
and
movsl
and
mov
mov
ljmp
sub
in
push
xlat
add
fists
xor
out
jp
xchg
inc
outsl
int
dec
jb
in
adc
jge
mov
outsl
jb
aam
js
dec
jb
sbb
pop
sbb
mov
inc
fwait
pushf
and
inc
sbb
imul
push
out
pushf
jl
push
adc
pop
into
ljmp
iret
pop
inc
jmp
or
xchg
add
mov
dec
and
jb
xor
or
fs
mov
push
jne
cmc
dec
push
fwait
pop
sub
dec
lret
std
xor
jp
int
fldt
mull
repz
mov
and
mov
sub
push
or
inc
das
pop
inc
sbb
ljmp
leave
test
lds
push
or
ds
or
pop
push
shlb
xor
mov
leave
mov
mov
movl
mov
or
adc
loope
dec
adc
or
inc
cld
enter
mov
push
cmpsl
pushf
pop
inc
shrb
pop
scas
jp
lea
xchg
mov
test
js
shrl
pop
cmpsb
addr16
fs
rorb
mov
xchg
mov
and
mov
pop
mov
add
or
mov
outsb
pop
dec
inc
sub
out
jnp
push
scas
mov
ds
mov
push
in
int
fstpt
fs
xchg
inc
loopne
pushf
pop
inc
jae
xchg
stos
flds
inc
inc
or
andl
loopne
push
sbb
fwait
jle
fwait
ss
in
xchg
sub
cmp
inc
xor
and
inc
rorl
stc
leave
lahf
inc
shr
xchg
adc
or
aaa
scas
adc
fwait
testl
jbe
and
and
add
mov
test
sbb
lcall
cmp
dec
imul
and
push
inc
pop
bnd
test
mov
rolb
and
sub
cmp
add
cmp
stos
xchg
pop
dec
mov
pop
push
cmpsl
iret
test
outsl
xchg
add
and
dec
pop
fiadds
or
rol
fldt
or
rcl
icebp
aas
pop
and
ficoms
data16
xor
hlt
lds
int3
jo
in
sub
loop
jae
or
imul
xchg
ret
push
xor
cmp
cmp
sub
sbb
in
dec
inc
insl
stc
cli
fsubl
les
jne
xchg
insb
cmp
push
ficomps
jns
mov
jle
push
pop
push
push
xchg
roll
jle
lods
fistl
jne
xor
jnp
vshufpd
inc
inc
cld
or
dec
into
adc
push
insl
pop
or
or
xor
xchg
and
call
xor
cmp
mov
sarl
xor
popf
xorb
in
dec
adc
ljmp
add
gs
inc
mov
rcrb
xor
sub
push
pop
stos
movsb
and
aam
sub
mov
jle
rcrb
sbb
aad
xchg
dec
pop
movsb
push
cmpsl
call
inc
cmpsb
jo
lea
enter
dec
lds
mov
in
stc
adc
sbb
jecxz
fisubs
cmovne
out
sub
mov
vcvtsd2usi
inc
or
lods
pop
pop
mov
inc
mov
mov
shrb
mov
and
mov
sbb
xor
scas
sahf
add
test
je
pop
push
dec
mov
fcmovbe
mov
cltd
mov
push
nop
divl
pushf
inc
push
mov
cwtl
push
or
les
mov
jb
cli
adc
push
jle,pn
sub
adc
js
jle
xchg
sbbb
pop
fdivrl
outsb
push
mov
fwait
sti
xor
dec
or
lods
cmp
inc
loop
pushf
pop
mov
mov
aaa
std
jnp
clc
cmp
xor
negb
sub
hlt
mov
leave
mov
mov
adc
pop
jbe
mov
jno
mov
ljmp
or
clc
mov
lret
fsts
mov
sub
addb
loop
lods
inc
jno
js
xchg
ret
adc
lcall
mov
mov
enter
stc
test
push
mov
repnz
outsb
xor
push
mov
push
jb
out
mov
into
pop
or
aam
mov
jo
mov
dec
fwait
fwait
subb
jnp
js
push
idiv
mov
mov
inc
jns
xor
scas
call
popa
adc
or
xchg
sbb
leave
icebp
insb
adc
scas
mov
pop
stos
pusha
fwait
mov
jl
cld
mov
xor
cltd
cmp
mov
ljmp
push
jne
fnstsw
mov
hlt
cmp
fistpl
data16
jg
test
sbb
sub
sbb
mov
cltd
jmp
adc
dec
dec
shlb
movsl
add
hlt
loopne
cli
adc
fcomip
mov
mov
add
insl
xor
addr16
sbb
fmuls
push
cltd
shrb
sbb
bound
add
mov
enter
sti
adc
dec
mov
addl
xchg
cli
pushf
je
fstl
jbe
xor
mov
lcall
repnz
sub
push
mov
data16
cli
mov
mov
std
js
jmp
insl
xor
clc
in
cmpb
lret
fisubs
push
scas
rclb
sbb
dec
cwtl
andb
cli
mov
or
adc
imul
icebp
fdivrs
and
sbb
ja
fadd
push
dec
jl
gs
popf
push
scas
leave
gs
or
ljmp
movsb
sbbw
insl
movsl
gs
xchg
loop
add
inc
adc
jae
outsl
rdtsc
sub
mov
pop
push
mov
sub
cwtl
notb
xorl
jns
mov
xorl
ds
xchg
addl
mov
inc
int
adc
or
sub
lds
adc
xor
fisubs
inc
sbb
test
lcall
xchg
pop
gs
push
cmp
dec
sub
pop
sub
xchg
mov
sti
rolb
dec
imul
int
cmp
pop
push
or
cmp
cwtl
and
lods
lcall
icebp
sbbl
add
je
mov
sub
xor
push
adc
out
adc
stos
xor
xchg
scas
loop
popf
sub
jl
popa
fwait
mov
out
out
mov
ds
sbb
mov
es
pop
cmpsb
lods
xchg
fmull
js
aas
add
mov
fidivrs
mov
xchg
push
std
bound
subl
lea
cmpsl
mov
inc
dec
cs
and
gs
pushf
and
push
add
ror
xor
fnstsw
or
push
pop
cmpsb
sbb
mov
adc
imull
sub
xchg
cmpsl
in
dec
jae
mov
push
out
mov
pop
jl
fstpt
and
test
cmp
add
out
sub
mov
pop
in
cmp
dec
xchg
inc
in
fistl
xor
push
nop
ja
or
xor
sbb
dec
jg
loop
lock
xlat
mov
inc
push
and
inc
add
jmp
inc
jne
jl
and
mov
stos
xchg
pusha
xor
mov
dec
cwtl
rclb
hlt
stos
mov
aas
ljmp
sbb
sbb
lahf
jecxz
mov
sbb
jo
aam
mov
repnz
dec
inc
sub
jne
push
sbb
insl
push
mov
push
push
jle
sahf
mov
outsl
mov
test
std
mov
stos
add
inc
setbe
stc
imul
lods
scas
fs
outsb
lea
popa
int3
sarl
jecxz
notl
stc
fisttps
inc
jge
jp
jle
stos
pop
out
pop
aad
adc
jmp
or
xchg
ret
mov
popf
cs
aaa
ficomps
popa
jae
add
adc
movsl
push
and
jecxz
mov
jmp
mov
rcrl
pushl
iret
cmp
xchg
cmc
push
sbb
push
inc
jbe
push
add
ret
pusha
nop
sbb
sarb
hlt
in
arpl
aaa
push
cmc
popa
test
inc
adc
mov
imul
divl
loop
das
in
arpl
jge
xchg
test
and
inc
imul
sbbl
sub
jno
xchg
and
and
pop
lods
das
insl
inc
add
sub
mov
fldenv
mov
scas
mov
or
mov
lret
add
xor
stc
xchg
movb
push
or
mov
xor
aam
int3
ss
loopne
push
sbb
inc
pop
ficomps
mov
cmp
xor
aam
mov
pop
out
test
inc
call
pop
pusha
lea
jns
in
push
add
lds
sbbl
mov
and
dec
inc
subl
xchg
or
insl
inc
dec
jmp
and
shll
inc
jle
adc
inc
in
out
mov
popf
fs
out
inc
aam
leave
rorb
cmp
and
ss
sbb
push
jmp
ret
cmp
push
cmp
fiadds
arpl
and
and
adc
insl
stc
icebp
mov
mov
test
dec
mov
shlb
push
xor
mov
and
pop
pop
int
daa
push
mov
enter
addr16
or
or
clc
lods
push
xchg
jnp
dec
or
mov
aad
or
adc
jg
ja
jp
fs
cmpsb
mov
aas
add
xor
cmpsl
pop
add
mov
mov
aaa
bound
pop
int3
xor
shrb
jp
sub
sbb
jbe
dec
mov
adcl
int
mov
dec
push
fldt
jne
adc
dec
scas
fldl
pop
addr16
mov
ljmp
rcll
jb
data16
cmpb
push
inc
adc
sub
jle
sarl
mov
sbb
xor
jl
js
xchg
shlb
xchg
and
jb
ljmp
push
iret
and
js
push
push
jnp
andb
adc
inc
stc
mov
add
out
cmp
mov
push
js
mov
pusha
enter
jnp
sbb
xchg
jnp
rcll
add
leave
fidivl
cmp
add
sub
js
fstpt
arpl
scas
pop
jl
out
js
adc
dec
pusha
insl
and
dec
mov
repnz
cltd
add
inc
push
shrl
lds
mov
push
xor
mov
test
sbb
jge
push
mov
xchg
xchg
pop
clc
aas
scas
jmp
lds
mov
sahf
dec
int
adc
loopne
jp
fsts
inc
scas
les
adc
xchg
sbb
pop
sbb
cmp
jbe
sub
jns
mov
dec
push
jno
div
lret
je
sub
xchg
imulb
pop
push
ret
xchg
or
cmp
scas
adc
adcl
dec
or
cmc
sbb
cwtl
outsb
jle
jge
mov
mov
or
test
rcl
lahf
pop
push
out
mov
dec
aas
mov
and
xchg
inc
jns
and
inc
cmp
outsl
dec
mov
shlb
cltd
frstpm(287
jo
aas
cmc
aas
cli
sub
mov
xchg
es
sbb
inc
pop
loop
sarl
jecxz
pop
sahf
adc
mov
xchg
mov
es
push
rcll
add
or
dec
cmp
jo
push
arpl
fidivs
xor
fdivs
jl
mov
test
mov
leave
fcomps
mov
push
int
dec
jne
and
pop
pop
adc
jmp
addb
mov
sub
sbb
in
sub
jbe
ret
adc
inc
sti
sbb
cwtl
int
pop
add
xchg
mov
adc
pusha
lods
lahf
repnz
xchg
and
popf
xor
mov
push
dec
hlt
rclb
or
cmp
aam
int
sti
and
cs
jle
push
jb
mov
dec
fistpll
es
fcompl
and
sbb
ret
xchg
not
jmp
xchg
sub
fmull
cmp
xor
mov
test
cs
mov
in
daa
and
int
pop
and
addr16
mov
mov
or
daa
fs
dec
addr16
ret
out
push
loopne
mov
xor
rcll
pop
inc
sbb
dec
inc
test
mov
inc
cmp
inc
adc
mov
movups
xchg
xor
dec
pop
mov
clc
mov
andl
rcr
xchg
pop
stos
add
enter
mov
shll
or
mov
or
inc
cmp
shrb
insb
or
dec
fldt
dec
stos
dec
loope
xor
sbb
inc
mov
xor
mov
fistpll
dec
dec
js
mov
shlb
cmp
and
pop
dec
cmp
fadds
adc
loope
xchg
mov
adc
push
cltd
subl
xchg
jo
mov
mov
push
add
pop
adc
stos
sti
ja
fwait
mov
jnp
mov
leave
jbe
stc
insl
test
sbb
fisubrs
xlat
andb
cwtl
mov
pop
fs
push
sbb
std
mov
mov
icebp
std
nop
es
andl
shll
add
push
into
cmp
dec
mov
stc
mov
lret
xor
mov
aaa
sub
push
push
or
pop
pop
imul
subb
clc
cmpsl
int3
mov
pop
lret
jb
jns
xor
adc
mov
dec
dec
movsl
adcb
inc
and
add
mov
pop
sub
addl
pop
test
sbb
movsb
or
cmp
stos
cmpsb
mov
inc
or
cwtl
setle
mov
decl
bound
push
xchg
out
adc
pop
pop
cmp
sbb
add
fidivrs
or
test
push
call
pop
pusha
pop
jo
or
test
jns
sub
jl
xlat
insb
faddl
adc
int3
lcall
insl
adc
movsl
fiadds
out
stos
adc
iret
sbb
insb
cmpsb
ret
xchg
or
push
dec
sbb
mov
and
sbb
inc
mov
aaa
xlat
or
add
rcrl
sub
mov
into
pop
loopne
aad
cmp
js
cmova
mov
or
je
shrb
je
push
jnp
daa
xor
popa
frstor
out
sub
daa
in
and
cli
or
mov
xchg
aad
push
or
jge
mov
cmpsb
dec
repnz
pop
bound
and
clc
mov
jle
call
lret
dec
aad
adc
in
test
add
cwtl
in
ljmp
dec
xchg
cltd
out
repnz
push
cmp
add
and
enter
xlat
out
pop
xchg
ret
xchg
in
mov
or
outsl
movsl
gs
or
xchg
lret
xchg
pop
dec
jmp
js
inc
lcall
cmp
xor
scas
sub
xor
bound
xor
cmp
mov
jge
cmp
and
add
sbb
pop
lods
sub
jmp
or
das
jmp
mov
cltd
ds
mov
int
in
lods
repz
cmp
push
xchg
xchg
jg
lock
mov
addr16
decb
cmp
xchg
cmp
and
dec
scas
inc
mov
mov
push
and
aad
push
push
imul
or
fwait
test
outsl
inc
inc
push
test
jae
pop
dec
pop
fisubrs
push
and
cli
out
sub
test
lock
lret
or
in
testl
int3
add
out
icebp
push
adc
ss
sbb
ja
js
mov
or
movsb
ja
scas
subb
and
cmp
loop
pusha
iret
or
xchg
inc
pop
add
inc
sbb
fnsave
dec
push
into
ja
std
and
pop
mov
sbb
push
test
pusha
in
jae
mov
arpl
push
pushf
bswap
sbb
stc
fsts
adc
rol
add
xor
xor
je
sub
or
in
xchg
in
sub
cwtl
mov
addr16
mov
and
icebp
dec
inc
lock
mov
movb
xchg
divb
push
mov
pushf
mov
jge
jl
int
movsl
sub
pop
arpl
js
mov
mov
xchg
in
jecxz
push
loop
daa
imul
xchg
fs
and
push
sar
pop
xor
inc
fadds
call
ret
test
cmp
push
cmp
mov
into
xchg
jge
pop
out
nop
hlt
pusha
std
adc
dec
push
push
adc
cmp
loopne
inc
iret
cs
xor
push
mov
in
in
fs
sti
jle
out
adc
sbb
dec
push
xlat
sbb
arpl
in
sbb
aam
mov
call
push
and
ret
lret
jp
sti
xchg
mov
mov
jb
int3
xchg
stc
mov
jle
pusha
pop
daa
xchg
mov
add
xchg
into
clc
xor
xchg
mov
inc
xchg
and
out
xlat
lsl
ja
cmpsl
inc
or
push
gs
insl
lret
mov
in
imul
add
cwtl
jge
imul
sbb
lret
xchg
mov
mov
jmp
icebp
jb
add
adc
shll
xor
xor
imul
add
xor
inc
sti
xlat
and
mov
dec
gs
cmpsl
fwait
cli
mov
lods
jmp
dec
pop
xchg
shlb
and
mov
mov
mov
mov
inc
push
xchg
cmp
mov
pop
adc
fisttps
jg
mov
notb
adc
dec
add
pop
faddp
sets
push
test
sbb
mov
insl
call
les
pop
iret
push
push
negl
xor
test
pop
adcb
shlb
fcoml
lds
out
xchg
mov
lret
fldcw
push
xchg
mov
lea
cltd
mov
ss
lea
xchg
push
push
ret
dec
adc
inc
push
xchg
mov
std
xchg
pusha
pop
insb
enter
lahf
push
les
inc
sahf
arpl
dec
mov
cltd
out
mov
pop
xchg
out
shlb
fs
sub
lcall
sub
add
push
iret
shl
adc
fwait
xchg
nop
jge
out
push
aaa
cmp
jbe
sti
mov
or
jle
sub
push
sub
cli
jp
sbb
pop
inc
add
and
fpatan
sbb
ret
lahf
ds
push
jns
cld
pop
mov
clc
pushl
pop
pop
sbb
cmpsl
cltd
je
imul
mov
in
push
cmp
add
icebp
pop
movsb
movsl
mov
filds
mov
adc
and
jle,pn
imul
lods
stos
mov
movsl
insl
mov
add
fcompl
pop
xchg
push
add
ss
cmpsb
imul
in
cltd
repnz
mov
cltd
daa
xor
dec
enter
adc
lea
scas
sub
push
mov
xlat
cmpsl
imul
mov
arpl
mov
mov
or
cmpb
inc
dec
xor
nop
aaa
pop
adc
cmpsl
jbe
sti
xchg
mov
ret
pop
and
enter
jmp
sub
je
sbb
aaa
dec
mov
out
pop
mov
sub
sub
mov
pop
sahf
mov
xlat
inc
imul
inc
popa
sub
lea
mov
jae
mov
xor
cltd
or
mov
aaa
test
shlb
adc
es
sbb
pop
mov
jno
mov
nop
inc
xor
cwtl
inc
fwait
pop
sub
jp
ja
and
mov
inc
rorl
mov
sub
jne
and
cmpl
les
xchg
mov
lret
jp
in
aam
shl
rcrl
mov
pushw
enter
jmp
cmp
lea
outsb
cltd
sahf
subl
lcall
jnp
fildll
sahf
jae
adc
jno
shlb
out
xchg
mov
pop
cmc
xchg
push
pop
or
movb
test
push
mov
push
call
lret
hlt
jp
sub
mov
or
and
fdivrs
cmp
sub
into
add
mov
adc
cltd
ljmp
loopne
dec
lods
inc
pop
imul
inc
inc
jmp
jno
mov
es
jmp
jecxz
mov
adc
stos
pop
fnsave
insl
jmp
pop
xor
nop
lcall
jecxz
data16
sub
or
outsl
cmc
mov
mov
ds
cmp
pop
in
stc
fs
pop
subb
fsubr
mov
rorb
lcall
push
or
sbb
xchg
xchg
sahf
adc
jno
sbb
test
sbb
push
lea
push
sub
daa
xchg
xorl
arpl
jge
fwait
xor
shlb
xchg
sub
xchg
in
into
ret
xor
mov
ret
mov
adc
push
aad
sub
adc
push
insl
adc
lds
mov
mov
jecxz
xchg
and
sbb
mov
fldenv
fbstp
sahf
sbb
das
arpl
or
shr
pop
mov
cmp
jp
mov
js
mov
mov
add
push
push
xor
cltd
adc
jmp
push
mov
cs
out
fsubr
jns
pop
mov
test
test
sti
jg
push
aaa
call
icebp
or
repnz
jl
mov
inc
repz
mov
testb
lock
adc
fsubs
push
sub
imul
test
push
loop
jmp
loop
add
out
inc
ja
les
jmp
jecxz
stos
cmp
add
loop
jns
mov
push
mov
loope
arpl
jecxz
push
jle
insb
and
test
sub
inc
popf
movsl
and
mov
inc
sbb
inc
nop
xchg
roll
push
pop
mov
or
mov
pop
addr16
scas
or
rcll
cld
inc
or
rcll
mov
int
loop
sub
inc
sbb
ret
loope
mov
xor
cwtl
movsb
or
jb
hlt
out
aas
fidivrs
ret
mov
jmp
jno
adc
inc
inc
xor
lahf
adc
mov
cli
mov
loop
in
add
adc
sub
imul
and
push
and
shr
sub
fimull
add
jmp
lods
aad
inc
inc
or
or
subl
repz
shrl
sti
adc
dec
test
inc
jg
jns
int
repz
out
stc
sub
stos
jae
mov
scas
bound
std
mov
mov
push
gs
outsl
imul
pushf
dec
insl
out
in
sub
sti
mov
add
cmpsb
jbe
stos
ss
jp
mov
bound
and
adc
cs
jb,pt
cmp
sbb
lock
mov
mul
inc
sub
hlt
push
dec
push
cmp
sub
sbb
mov
or
xchg
jns
in
fldcw
notl
jle
xchg
mov
cli
or
movsl
sbb
ret
pushf
bound
enter
fcomps
pushf
cmp
ret
in
js
cs
push
dec
or
cmpsb
mov
mov
movsl
jne
xlat
cmpb
xchg
mov
cmp
stos
adc
lea
fcmovnb
sub
pop
xor
loopne
jp
xchg
inc
sub
pop
and
jg
and
hlt
or
or
inc
mov
jecxz
jle
xlat
aas
jle
mov
or
ja
inc
mov
inc
int
sub
xchg
inc
addl
pop
jl
loopne
inc
pop
adc
mov
add
xchg
mov
cmpsb
je
popa
in
sbb
rcrl
fwait
test
test
fidivrl
outsl
call
ja
rorb
pop
jg
sub
add
test
nopl
mov
seta
cltd
and
push
in
stc
lods
icebp
pop
popa
iret
lret
movsb
add
shrl
insl
out
mov
les
lods
or
jae
mov
iret
sbb
stos
push
mov
in
aad
jbe
sub
xchg
cld
jge
cmp
mov
mov
mov
lea
sbb
gs
push
std
cltd
outsl
push
push
xchg
pop
adc
sarb
push
imul
fnstsw
dec
pop
pop
pop
out
mov
sbb
jle
or
icebp
push
xorl
daa
stos
punpckldq
mov
popa
cmp
stos
ficoml
repnz
jae
or
cmp
mov
sbb
pop
jno
fstp
andl
pop
sub
mov
loopne
cmpsb
out
cs
push
pop
cmp
pop
fsubrp
iret
xor
and
shll
cvttps2pi
out
push
push
dec
or
mov
jmp
sahf
cmc
fs
add
loopne
cld
xchg
movb
pop
cmp
loope
jmp
cmp
lods
push
sub
cmp
push
adc
xlat
push
jp
and
adc
leave
out
xchg
mov
jae
jle
loopne
in
sub
adc
daa
js
mov
xchg
push
decl
out
push
jne
fnstsw
xchg
mov
int3
aaa
fistl
pop
mov
xchg
testb
cmp
cmpsb
push
and
sub
xlat
inc
jecxz
pop
jb
subb
sarl
popa
adc
mov
fsubl
jbe
adc
mov
movsb
iret
insb
in
insb
push
adc
in
pop
idivl
xlat
dec
cmp
cli
sbb
dec
mov
sbb
cmp
mov
or
inc
adc
rorl
popf
insb
idivb
pushl
daa
mov
int
lds
xlat
movsl
stc
and
out
jns
pop
out
cli
in
jg
test
jo
lods
aas
cmc
test
stc
push
movsl
mov
inc
push
cmp
sbb
ret
into
repnz
repz
in
push
xchg
mov
fidivl
push
jl
loopne
xor
lcall
mov
adc
xor
in
jbe
sub
sbb
fisubrl
or
sti
inc
int3
lret
ja
xchg
addb
lock
lds
and
ljmp
sbb
cmc
mov
push
jo
ja
lcall
adc
sbb
mov
ret
mov
push
jae
inc
xlat
jnp
icebp
es
cmc
cmp
enter
pop
cltd
std
inc
pusha
iret
js
mov
jp
pushf
xlat
lods
cld
dec
xchg
jle
sub
out
daa
imul
push
insb
dec
rcl
cltd
shll
adc
cmp
mov
jno
mov
adc
scas
cs
and
jbe
cmp
pop
push
data16
or
gs
out
push
mov
rorb
in
cmc
inc
movsl
add
subl
test
sbb
loopne
push
cli
sbb
sbb
jmp
cwtl
dec
cmpsl
xor
testb
test
imul
sub
fbstp
arpl
push
xor
in
jp
fbstp
sbb
out
in
dec
sub
mov
cmpb
rolb
cmp
and
fdivs
test
mov
imul
ret
addr16
cmpsb
es
aas
arpl
mov
inc
loopne
loopne
faddp
xchg
mov
sub
loop
push
jbe
jae
movsb
out
sub
cmpsl
xchg
dec
mov
push
or
xchg
jle
imul
xchg
loopne
imul
or
cmc
in
mov
cmp
imul
roll
jl
and
idivb
mov
push
test
sub
add
ljmp
adc
adc
sub
in
xchg
cmp
jno
or
or
add
inc
sub
xchg
bound
jno
aam
adc
xchg
inc
sti
das
push
cmc
scas
dec
dec
pop
mov
mov
mov
ss
stos
stos
and
adc
lret
sti
imul
leave
and
jge
in
mov
xor
xchg
push
inc
ret
xor
and
addr16
loop
cmp
sbb
mov
mov
xor
xchg
xor
std
sbb
scas
xchg
subb
sbb
sti
dec
pop
adc
dec
out
lea
push
and
cmpsb
sbb
pop
adc
jle
sbbl
dec
fidivrs
in
addb
hlt
fistpll
push
in
in
mov
in
jle
outsb
nop
inc
mov
sarl
jg
cmp
das
adc
push
arpl
in
sbb
jmp
adc
push
pusha
push
sbb
sbb
in
and
xlat
roll
ret
es
je
adc
int3
in
ret
rcl
call
mov
movb
jl
xchg
jg
inc
mov
in
inc
stc
jnp
popa
push
jecxz
lret
mov
and
in
inc
ret
enter
int3
mov
ds
xor
push
pop
es
ss
ja
scas
ds
pop
shll
mov
imul
sbb
inc
lock
dec
cmp
push
xor
inc
mov
or
xchg
sub
jno
sbb
cmc
js
stc
or
xor
arpl
mov
adc
and
mov
call
or
outsl
jle
sbb
sbb
rcrb
dec
pop
push
push
jp
fwait
lcall
push
add
xor
in
loopne
inc
mov
push
cmpsl
or
ret
mov
aam
jb
mov
rorl
test
in
mov
mov
xchg
pop
mov
test
add
mov
adc
pop
jl
push
push
imul
lret
push
add
enter
lds
push
jo
bound
xchg
jnp
stos
scas
and
jne
aam
test
outsb
mov
lock
filds
mov
sub
out
lret
scas
test
push
cmp
adc
sub
and
out
stos
pushf
fwait
sti
and
out
mov
sti
gs
test
js
and
pop
jle
nop
fldl
or
subl
addb
out
sti
xrelease
cmp
sbb
hlt
jmp
mov
cltd
daa
das
pop
js
fnop
adc
xchg
out
jne
fsts
xor
cmc
sbb
jbe
shrd
xorb
dec
bnd
lret
pop
movb
pop
add
pop
cmc
int3
fldcw
pop
adc
sub
sti
push
mov
mov
lahf
loope
cmp
jb
jb
mov
and
fmuls
subb
mov
pop
xor
inc
add
mov
jmp
xor
addr16
mov
js
test
shrl
loop
icebp
icebp
pop
pop
adc
mov
and
movsl
fcmovbe
cmpsl
xor
cmp
jmp
mov
std
fisttpll
fadds
scas
shrb
sbb
in
movsl
insb
repz
loopne
adc
jnp
sbb
mov
mov
xchg
sbb
pop
fdivs
scas
jmp
inc
sti
jno
sub
inc
data16
sbb
repz
lods
push
xchg
sti
mov
sub
das
or
xchg
inc
rcrl
out
lsl
imul
sub
lea
ficomps
notb
data16
mov
orl
xor
fisttpl
dec
mov
arpl
ds
rcrb
cmp
lods
sarl
mov
and
mov
sbb
mov
nop
test
jge
mov
jmp
sahf
shl
xlat
adc
pusha
and
cltd
cli
mov
ret
cwtl
bound
outsl
push
xchg
dec
lock
rcrb
out
push
cmp
xchg
cwtl
fs
sub
loope
mov
add
gs
fidivl
jp
cmp
jl
cli
or
pop
adc
xchg
lock
dec
cwtl
leave
movsl
int3
mov
lock
mov
das
aad
push
test
std
dec
cld
dec
xchg
pop
out
jge
cmp
cmovno
sub
xor
andb
push
pop
mull
inc
add
push
mov
mov
seto
mov
jmp
sbb
mov
mov
jb
das
xor
pushf
movsb
pop
push
inc
sbb
stos
in
adc
fdivr
shll
shlb
sti
dec
and
test
ds
jg
and
clc
ja
add
xchg
mov
test
xchg
aas
mov
push
pop
add
test
and
xor
shr
or
cltd
mov
inc
mov
inc
lret
jmp
push
loope
cwtl
aas
sbb
xchg
xor
push
push
lret
sbb
in
enter
sarb
sub
out
into
faddl
or
mov
inc
mov
fwait
cmp
pop
jo
loopne
xor
jb
xor
pop
lret
add
gs
rorb
xor
aam
int
sub
xchg
xor
and
les
mov
lahf
sub
fisubrl
pusha
and
jae
clc
jbe
in
xchg
popa
out
adc
or
out
sbb
push
mov
add
insl
out
xor
xlat
and
pop
jmp
or
mov
cmp
dec
push
int
sti
inc
mov
mov
mov
inc
jnp
mov
and
sbb
enter
inc
mov
shrb
mov
jne
dec
pop
fdivs
mov
mov
jae
dec
pop
inc
push
ss
push
sysexit
dec
mov
xor
cs
sub
xor
cmp
cmp
xchg
mov
sub
out
push
push
push
mov
sub
inc
repz
ds
scas
imul
shll
push
mov
lock
jbe
mov
data16
push
jno
call
loopne
out
and
insb
adc
dec
sbb
ds
divl
jb
or
mov
fisubl
mov
sub
out
push
flds
out
cmp
in
inc
push
jb
mov
mov
xchg
je
jl
repnz
inc
inc
or
xchg
jl
adcb
je
push
loopne
pushfw
pop
jns
cld
and
aad
lods
sub
and
jge
lret
or
mov
xchg
ljmp
in
ret
mov
sahf
add
js
in
dec
push
int
inc
xor
mov
mov
mov
push
mov
push
hlt
or
idivl
and
aaa
pusha
cs
dec
mov
lods
mov
int3
adc
jge
andl
cmp
in
cmp
hlt
stos
fcomi
dec
sbb
fcmovu
popf
jae
pop
xor
aam
mov
into
jns
bnd
adc
mov
add
adc
cmp
dec
scas
mov
and
js
or
icebp
cmpsb
out
iret
and
lock
outsl
test
ss
push
xchg
jg
andb
and
js
sub
cmp
add
out
mov
jno
xchg
mov
sarb
push
cmp
in
jge
sbb
fwait
adc
mov
sti
je
mov
push
mov
sbb
in
addr16
inc
add
test
sti
mov
mov
sub
fcomps
jnp
add
in
repnz
pop
movsb
pushl
inc
jae
cs
push
push
lods
add
mov
loopne
cmpsl
mov
mov
pop
ficoms
lods
lods
in
mov
mov
push
push
xchg
pop
jmp
shlb
sub
fcoms
xchg
sbb
lods
dec
cmp
mov
mov
ljmp
aam
lret
cmp
lret
pop
stos
fisubs
xchg
dec
xchg
or
sahf
repz
iret
and
ret
movsl
xor
push
loop
mov
inc
jbe
or
fistpll
rcll
rclb
or
into
pop
cmpsb
mov
cmp
das
pop
lods
fdivl
dec
js
inc
dec
iret
in
lret
xchg
into
inc
dec
mov
gs
xor
flds
mov
push
cmp
jmp
das
pop
push
xor
inc
aaa
aam
pop
xchg
adc
push
and
ljmp
or
inc
push
mov
pop
outsb
ja
fidivrs
cmp
lcall
jle
call
dec
sti
sbb
loop
and
in
lret
xchg
out
sbb
stos
push
sbb
int3
nop
sbb
out
sbbb
jecxz
repnz
pop
stos
inc
imul
and
bound
dec
repnz
clc
jp
inc
inc
push
std
lods
mov
js
and
mov
cmpsb
push
daa
pop
xor
jbe
push
jns
mov
jns
scas
cmp
push
add
xchg
mov
adc
mov
mov
lods
mov
adc
orl
and
push
insl
mov
adc
popa
push
out
data16
rcr
lds
mov
in
mov
inc
or
jns
pop
out
push
rcrl
and
inc
push
cmc
cli
fidivrl
push
stc
mov
shrl
ret
enter
jo
lcall
add
loop
ret
out
jp
call
loopne
pushl
xchg
std
in
daa
lods
xchg
or
pop
and
push
loopne
mov
mov
lahf
pop
gs
push
ss
mov
cmc
iret
outsb
imul
adc
loope
inc
sbb
movsb
sti
in
sub
lock
mov
mov
test
xchg
sti
ja
xchg
inc
push
push
push
fcmovne
loop
mov
mov
and
adc
es
sti
xor
and
or
or
test
push
sub
jge
and
inc
pop
pop
in
pop
jle
xor
andl
or
in
lret
or
pop
xchg
inc
dec
call
inc
jmp
roll
popf
xchg
stos
stos
pop
mov
jg
dec
jns
jo
push
mov
pop
adc
dec
std
push
stc
test
daa
fnsave
scas
into
push
rolb
pop
js
fwait
call
xchg
cmp
dec
jp
mov
out
int3
outsb
lldt
xchg
daa
jmp
insb
jno
xchg
clc
jge
daa
hlt
push
cld
cmpsb
pop
shl
mov
inc
sbb
ljmp
lret
pop
jge
stc
outsl
mov
cld
sbb
push
inc
inc
cmp
jge
mov
inc
cmc
push
sti
out
and
pusha
hlt
dec
fwait
mov
nop
inc
pop
mov
xor
shll
ficompl
or
in
xchg
stos
out
ss
cltd
outsl
pop
lret
in
lcall
push
inc
inc
inc
mov
test
cmc
jbe
or
nop
jb
and
or
sti
fsubrl
and
cs
loopne
mov
mov
jp
out
ret
scas
mov
xchg
int
dec
movsl
cld
mov
cwtl
loop
jbe
in
sub
adc
popa
jle
out
dec
xchg
clc
cmpsb
sub
xorb
stos
pusha
or
scas
insb
fldcw
nop
and
arpl
mov
jmp
aaa
add
inc
test
push
xor
sbb
add
jp
mull
rcrl
test
repz
int3
or
pop
shll
int3
mov
imul
pop
fdiv
lret
mov
test
mov
mov
pop
inc
or
cmp
fmul
int3
roll
or
imul
mov
in
mov
nop
add
mov
cmp
dec
pop
pop
xchg
clc
ss
or
xor
push
sub
popa
pushf
jae
ja
shll
hlt
loope
push
xor
inc
xchg
lcall
repnz
push
mov
cmp
xchg
pop
inc
inc
aad
lea
repnz
out
movsb
cltd
aam
ret
pop
mov
rol
dec
out
xor
xchg
push
add
dec
cmp
ljmp
hlt
ljmp
movsl
out
rorb
xchg
ret
xchg
mov
outsb
int
out
xor
lea
cltd
negl
pop
jne
adc
inc
pop
jo
jmp
sbb
std
in
push
jl
and
sar
aam
mov
mov
dec
or
mov
sub
xchg
mov
into
mov
mov
add
fiadds
lahf
cmpb
xchg
stos
hlt
mov
xor
mov
mov
fwait
daa
repnz
outsb
mov
inc
and
push
push
cmp
dec
jne
push
mov
inc
push
add
or
int3
mov
out
mov
stos
mov
cmp
arpl
subb
out
add
and
push
int3
adc
cmp
insb
fistl
popf
mov
divl
pop
enter
cmp
push
imul
loope
pop
dec
sub
leave
xchg
dec
addr16
mov
and
lock
arpl
cmc
dec
sub
mov
mov
xchg
sti
jl
jne
ljmp
enter
addl
jge
push
add
and
mov
hlt
cmpl
aam
inc
inc
sub
or
gs
sbb
xchg
sub
fistpl
shl
mov
jp
fcomps
divl
into
add
scas
cmc
push
or
jb
mov
notl
ss
aam
dec
cld
and
xchg
mov
adc
push
pop
fadds
jbe
cmp
sub
dec
jl
les
ret
lahf
jl
stos
push
cmpsb
mov
clc
icebp
adc
mov
pusha
repnz
pop
mov
cmp
sbb
xchg
mov
gs
inc
pop
mov
ret
dec
xchg
mov
fmull
add
push
movsl
into
sbb
jecxz
out
out
inc
mov
sub
mov
test
faddl
cmp
xchg
or
mov
mov
sbb
inc
fdivl
or
outsb
stos
pop
std
sub
mov
fcoml
subl
sub
fidivl
fmull
adc
shrl
mov
pop
cli
dec
les
and
mov
xchg
and
ret
loopne
cmp
cmp
mov
fidivs
xchg
fwait
jg
clc
adc
js
cmc
cmpsl
jge
push
xchg
ljmp
rorl
insb
pop
dec
out
lahf
imul
mov
mov
push
dec
bound
mov
out
inc
lods
jmp
dec
es
lret
inc
add
stos
popf
test
dec
das
popf
inc
jnp
or
cmp
jp
loopne
push
cmp
es
sar
cmpsl
jmp
pop
ror
xchg
fdivl
mov
mov
idiv
cs
std
sub
cmp
jmp
arpl
stos
stos
cmp
xchg
outsl
adc
or
sti
lods
push
mov
inc
pop
icebp
shrb
xchg
aas
clc
cmp
popf
adc
add
mov
and
mov
mov
ss
mov
jo
int
xor
fisttpll
or
pop
in
sub
mov
inc
or
cmp
sahf
dec
pop
stc
outsl
pop
fmul
mov
adc
cltd
addr16
sbb
pop
outsb
xor
ret
in
push
out
dec
pop
push
dec
test
lds
arpl
loope
cmpsl
sbb
add
xchg
mov
inc
cwtl
rcr
jmp
jecxz
and
enter
sub
insb
scas
mulb
mov
aad
jo
sbb
cmp
pushf
out
hlt
sahf
mov
bound
add
add
nop
jge
nop
stos
pushf
pop
dec
push
sbbb
or
subl
lods
jp
repz
shrb
pop
shrb
pop
fisubrl
lea
and
sar
xchg
cmpsb
jp
adc
fwait
sti
call
inc
add
and
lods
add
jo
shr
jae
pop
movsb
cli
xchg
xor
ret
and
jmp
cld
mov
xchg
leave
sub
and
cltd
pop
sti
push
shll
cmp
fwait
dec
or
push
in
lcall
xchg
jle
cmpsl
jg
xchg
cmp
push
mov
inc
outsb
fimull
xor
cmp
das
mov
nop
pop
pop
jmp
xchg
aam
jnp
push
xor
mov
loopne
jecxz
cmpb
ja
arpl
push
cltd
nop
or
call
mov
dec
pop
imul
mov
and
jmp
inc
fbld
mov
pushf
das
int3
push
cmp
adc
outsl
mov
adc
je
insl
repnz
pop
fsubp
lcall
aad
mov
push
shlb
push
mov
add
pop
xchg
push
scas
cmpsb
inc
xor
xchg
in
sbb
and
xchg
add
sbb
xchg
popf
nop
test
jle
jecxz
jns
mov
addr16
mov
stc
sbb
pop
nop
mov
mov
mov
fdivr
scas
xchg
add
daa
lods
xor
cld
dec
mov
mov
dec
jnp
jmp
incb
and
lcall
add
outsl
add
mov
mov
xchg
or
jle
xchg
scas
cmpsb
imul
xor
fsubl
jb
adc
ljmp
push
mov
dec
mov
je
pusha
sbb
fs
imul
ficoml
lock
inc
insl
out
and
pop
mov
or
aaa
mov
xor
add
nop
jle
dec
mov
lods
out
arpl
cmpb
mov
pop
out
cmp
add
mov
data16
sbb
xor
and
cmp
arpl
sbbb
pop
scas
push
icebp
jbe
ja
je
popf
data16
sbb
stos
ret
mov
jo
jo
pop
in
iret
ds
xor
std
pop
jge
loop
lea
jmp
es
stc
xchg
rclb
inc
js
jecxz
std
test
or
add
das
fistps
jp
loope
jnp
cmp
pusha
aam
scas
add
jge
mov
xor
dec
call
push
or
mov
mov
pop
adc
sbb
fiadds
mov
pop
inc
jge
rorl
pop
insl
cmp
bsr
std
mov
lahf
inc
fstp
ja
fcomps
or
int3
je
repnz
mov
mov
outsb
repz
fmuls
mov
mov
add
imul
loope
hlt
cmp
test
xor
movsb
add
cmp
gs
sarl
nop
xchg
xchg
stos
sub
rorl
stos
and
dec
out
lds
adc
mov
push
adc
inc
mov
shrb
stos
addb
push
sub
loope
loope
mov
fldl
inc
das
test
mov
cmc
and
sbb
mov
mov
into
mov
aam
lods
mov
sahf
sub
fldt
mov
cld
mov
cmpsb
xchg
or
lock
ja
jp
xchg
repnz
sarl
out
jmp
mov
push
call
cs
pop
mov
imul
adcl
mov
mov
adc
and
lret
cltd
loope
cmp
ret
scas
scas
xor
lahf
xlat
xchg
insl
addr16
sbb
mov
in
lcall
test
dec
inc
lods
or
or
jne
jo
mov
add
push
rolb
sub
pusha
fsubs
pop
pop
push
pop
adc
or
sbb
cmpsb
push
and
pop
outsl
lahf
mov
jae
ds
add
adc
pop
hlt
add
xor
mov
mov
fldt
adc
dec
movb
jmp
dec
jmp
push
repnz
mov
pusha
adc
inc
push
leave
inc
mov
pop
add
and
cmp
sbb
hlt
pushf
mov
cld
stos
mov
movsl
jno
or
adc
mov
xor
sub
aaa
push
jle
test
aam
adc
mov
xchg
outsl
or
aam
lods
cmp
mov
in
lret
and
jne
pop
in
push
cmpsb
inc
inc
subl
jo
dec
lods
push
inc
test
ficomps
push
ret
rolb
cwtl
adc
sbb
in
rol
or
imul
adc
clc
fildll
js
cli
inc
and
mov
mov
xchg
inc
push
bound
jnp
mov
ss
mov
daa
or
adc
jp,pt
outsl
cmpsl
adc
icebp
add
in
sahf
push
sbb
aas
add
fcomps
mov
std
or
inc
add
mov
stc
pop
aas
test
xor
popf
push
push
test
cmp
mov
inc
insb
and
adc
jb
xchg
jp
dec
add
xor
int
jns
xor
in
mov
ja
cmp
jge
int3
addr16
mov
insb
outsl
push
arpl
movsb
sbb
cmp
getsec
xchg
cli
test
cmpsb
cld
xchg
dec
lods
popf
xchg
rclb
bound
add
out
cmc
bnd
popa
leave
shll
push
sub
jmp
mov
fstpl
sub
mov
scas
mov
push
xchg
shll
cmp
aam
add
lahf
lock
mov
mov
out
and
pop
fmull
ret
repz
leave
mov
mov
jp
cli
push
repnz
sub
mov
scas
test
inc
push
mov
rorb
dec
rclb
push
movsl
push
mov
mov
xor
fisubs
popl
into
lahf
inc
xor
out
pop
push
xor
jmp
test
xchg
dec
or
mov
jle
fwait
mov
mov
fisubl
dec
jle
cmp
adcl
test
mov
add
pop
pop
pop
jle
xchg
mov
popa
xchg
or
leave
adc
pop
jmp
inc
negl
les
daa
or
push
stc
inc
inc
aaa
addb
or
or
call
push
lcall
mov
bound
or
pop
inc
cmp
jb
sub
and
mov
scas
or
mov
and
fidivl
jne
xor
js
jbe
cwtl
lret
jnp
fs
sub
adc
sahf
shl
dec
push
mov
jns
ds
inc
incb
adc
jno
jg
dec
lods
jne
jno
xchg
leave
pop
cmp
loope
fbstp
pop
mov
sbb
inc
aas
movsl
adc
das
mov
mov
fsubp
xor
jle
mov
pop
pop
std
mov
adc
dec
ss
mov
aad
pop
loopne
ficoms
xor
dec
sbb
inc
dec
loop
sub
or
mov
testl
add
or
jbe
ja
out
sub
aad
dec
inc
clc
nop
xor
push
mov
pop
lahf
outsl
int
sbb
push
shl
lcall
hlt
xchg
mov
fistl
fisttpl
jecxz
xchg
mov
daa
xor
fadd
out
xchg
sub
pop
xlat
xchg
dec
sbb
inc
insb
sub
dec
mov
pop
jmp
dec
dec
lret
frstor
dec
jns
inc
fs
fbld
mov
push
dec
add
das
rorl
aam
sub
and
sahf
fstps
cli
pushf
mov
sarl
sub
jl
jl
fistl
into
pop
loope
xchg
gs
inc
or
jbe
cltd
and
adc
fistl
out
mov
sahf
je
imul
inc
dec
push
loopne
inc
and
mov
fadd
es
mov
ret
mov
push
repz
push
imulb
add
cld
notl
push
lcall
or
insl
jge
pop
push
and
inc
xlat
push
adc
test
jnp
jae
ljmp
pop
xchg
jo
jne
leave
mov
pop
es
sbb
clc
mov
push
mov
dec
cmp
je
push
outsl
std
sbb
cmpsl
xorl
sub
or
mov
inc
mov
add
ljmp
sbbl
jmp
test
jg
cmp
jae
mov
mov
or
lret
inc
jl
sti
inc
mov
mov
sbb
sub
mov
nop
cmp
enter
aas
inc
out
test
ja
or
dec
pop
les
cmp
mov
rolb
cmp
je
jmp
inc
sti
or
mov
fists
pop
adc
pop
pop
adcl
lock
lret
cs
add
aaa
aad
sbbb
xchg
icebp
pop
cmp
stos
ljmp
adc
push
push
ret
jle
sbb
mov
or
dec
add
out
inc
ficomps
out
sub
inc
cmp
cmpsb
adc
sti
movsl
clc
jmp
shll
mov
pop
pop
setl
leave
lcall
jl
loope
and
cmpsl
std
pop
mov
add
jne
sub
mov
cli
or
fs
push
addr16
push
add
cli
aam
add
inc
add
es
lods
rcl
bnd
inc
dec
test
insl
pop
iret
icebp
lods
movsl
xchg
pop
popa
sub
ret
ret
pusha
jno
dec
mov
rcrl
sub
inc
adc
xchg
call
int3
dec
xchg
xchg
cmp
cmp
add
and
rsqrtps
inc
push
add
mov
sub
adc
and
sub
gs
lcall
cmp
mov
pusha
mov
mov
sbb
add
add
inc
js
hlt
mov
mov
sbb
push
and
xor
rorl
mov
pop
inc
sbb
push
sbb
sub
cli
inc
dec
mov
in
jmp
pop
shlb
jg
mov
or
dec
test
adc
add
stos
jp
sti
test
push
push
cwtl
test
stos
mov
out
pushf
not
inc
out
xor
ficoml
push
call
xchg
movsb
call
hlt
imul
lods
imul
push
jge
enter
shlb
jge
xlat
je
addr16
or
and
or
push
sub
out
ja
mov
xchg
cmpsb
lods
scas
pop
out
jb
xlat
in
and
lea
adc
sbb
jbe
push
int
cmp
hlt
test
sbb
dec
jae
inc
jbe
pusha
ret
sub
imul
imul
mov
or
xlat
rcl
xor
jb
or
mov
arpl
imul
in
int
add
fmull
hlt
xchg
sub
cmp
movl
loop
rorl
andb
push
pushf
jb
push
mov
cmp
or
testl
jne
jne
add
dec
mov
mov
pop
or
push
in
or
sub
sub
in
aam
gs
or
lock
lods
adc
cs
mov
aaa
push
in
sahf
in
cld
ficoms
mov
inc
aad
roll
xchg
ret
rcrl
rcll
push
loopne
and
lret
stc
pop
lods
and
das
insl
pop
cmpsl
out
jae
xchg
mov
jnp
imul
ds
xchg
dec
aaa
sub
int
decb
jae
xlat
int
popf
in
divl
xor
inc
push
pop
adc
rcrl
outsb
mov
arpl
push
pop
es
or
push
movsb
mov
adcl
imul
call
cli
dec
xchg
mov
popf
jp
rclb
sbb
mov
or
loope
jo
orb
popa
imul
pop
mov
sub
dec
xchg
inc
push
test
mov
xorb
in
lds
add
or
repnz
aas
pushf
xor
inc
rolb
and
repnz
inc
or
dec
call
fwait
pushf
dec
fcomi
xor
rcl
gs
cmp
xor
subl
imul
cmpsl
adc
pop
call
lock
data16
push
push
mov
cmc
js
xchg
mov
and
push
jno
aad
scas
push
roll
cltd
dec
test
int3
jg
jae
scas
xchg
inc
cmpsb
mov
pop
mov
fdivs
sbb
jge
xchg
or
push
or
cmp
imul
pop
cmpl
jmp
jl
icebp
xor
mov
pmullw
xlat
hlt
orl
loop
scas
fldenv
mul
imul
lea
inc
cs
aad
dec
in
idivl
sub
pop
aam
ljmp
mov
in
jbe
aaa
aad
pop
push
or
fdiv
push
mov
paddsb
mov
xchg
in
mov
ljmp
mov
dec
mov
pop
and
stc
out
pop
cmp
je
imul
mov
dec
pop
fcoms
pop
in
fnsave
int3
mov
xchg
push
adc
or
fcompl
mov
dec
hlt
mov
ds
mov
dec
mov
ret
jno
mov
lods
jl
cmp
fwait
daa
jl
outsl
shlb
push
jo
xor
dec
pop
and
inc
bnd
out
adc
push
fwait
mov
cwtl
mov
leave
out
movsl
jae
cld
js
inc
int3
out
pop
shlb
push
mov
cmpsl
std
repnz
sub
loope
pop
cwtl
fs
xorl
inc
cli
push
dec
cmpsb
testl
arpl
adc
scas
adc
jo
lret
lcall
sub
sbb
cmovl
sub
xchg
xchg
mov
or
loop
fists
xor
js
movb
enter
push
adc
in
movsl
dec
mov
fxch
add
bound
push
les
inc
ret
lret
std
ss
outsb
pop
cmp
mov
mov
negl
mov
mov
cmp
cmp
idiv
shlb
xchg
xor
jae
adc
mov
out
fistl
xor
xchg
inc
mov
add
inc
daa
cltd
insl
mov
pop
pop
sar
push
sbb
xor
adc
xchg
xor
fucom
xchg
dec
cmp
xchg
clc
or
pop
dec
cwtl
sbb
mov
lret
sbb
lret
jns
pushf
icebp
test
mov
inc
lret
pop
popf
sbb
xchg
int3
push
mov
jle
loopne
dec
cmp
mov
cmpsb
aas
mov
rorb
in
add
fwait
ss
inc
push
mov
js
push
jecxz
mov
andb
repnz
mov
scas
push
fwait
mov
sbb
cs
je
mov
jae
mov
lcall
aaa
outsl
dec
cs
and
mov
addr16
mov
xor
subb
jno
and
pop
pushf
and
cld
xor
jno
mov
daa
lea
xchg
in
es
test
push
xchg
jb
fstl
or
xchg
fcmove
aas
rclb
mov
jmp
ficompl
add
mov
leave
xchg
mov
into
iret
pop
push
rorl
mov
sbb
icebp
add
dec
lock
push
pop
mov
int
test
insb
inc
and
xchg
push
lds
call
ret
stos
sub
ds
ljmp
xor
ds
sbb
test
mov
fiaddl
stos
xchg
add
and
mov
punpckldq
jle
pop
and
adc
ja
cli
add
pushf
jns
adcl
mov
xchg
pop
mov
cmp
subb
mov
in
iret
je
push
cmpsb
jns
pop
imul
fldenv
cmp
pop
push
add
and
gs
mulb
pop
scas
cltd
repz
jb
jmp
xor
cmp
sub
call
ret
adc
outsl
sbb
ffree
insb
pushf
jno
sbbb
repz
cmpsb
jp
testb
push
bound
lods
ret
push
or
jge
adc
pop
cmp
sbb
fsubl
cmp
mov
pop
xchg
pop
fimuls
fdiv
testl
mov
mov
push
stc
pop
in
popf
dec
das
test
dec
jp
jp
cmp
and
lds
mov
enter
jg
fldenv
loopne
xor
jmp
lahf
push
jg
sarb
cmpsb
xchg
mov
dec
push
and
rorb
movsb
js
jnp
test
imull
fisttpll
ja
rcll
jl
fldcw
push
inc
cmp
pop
xchg
cmp
jmp
mov
jb
cmp
push
das
inc
xlat
adc
das
sti
lods
lret
dec
mov
add
into
jne,pt
sahf
orb
sbbb
jb
cli
push
mov
sub
fucomi
loope
pop
cmc
xchg
mov
out
das
decb
test
push
insb
fsubrl
loopne
jl
ds
inc
sub
adc
mov
lcall
subl
mov
or
jp
pop
movsb
lock
insb
push
mov
lock
jg
cmp
xchg
imul
cmpsl
sub
hlt
fldt
fcoms
out
cs
push
mov
dec
clc
mov
test
cld
dec
and
cwtl
xor
mov
mov
mov
ja
sbb
dec
mov
push
mov
and
push
rorl
and
call
xchg
xor
jmp
xchg
adc
mov
xor
sub
imul
mov
mov
xchg
lds
dec
sub
test
pushf
mov
push
gs
mov
or
sub
aad
push
in
xchg
jb
mov
cmp
push
add
or
mov
rorb
mov
ds
mov
mov
sbb
push
mov
push
xor
jecxz
lods
pop
popf
loop
or
popa
ss
mov
nop
push
adc
pop
daa
roll
mov
jae
mov
pop
int
aaa
xor
test
fldl
push
pop
incb
ljmp
nop
imul
fimull
ror
push
inc
push
sub
pop
jecxz
mov
xor
dec
push
imul
mov
push
or
mov
shl
lock
sub
add
and
push
out
jnp
shl
movsl
mov
js
mov
dec
jge
xchg
mov
pcmpeqd
xchg
xor
fwait
or
test
jnp
push
sub
push
cmp
fsts
cmc
sahf
subl
inc
shr
inc
dec
test
push
int3
cmp
out
pusha
jno
xchg
mov
xchg
push
scas
cs
inc
push
sbb
rcl
mov
pop
pop
xchg
dec
popa
mov
add
imul
ljmp
push
lods
adc
loop
stos
not
fisubrs
jge
ret
sahf
scas
movsb
adc
bnd
les
sbb
mov
rorb
mov
pop
loope
in
mov
push
jge
hlt
push
inc
call
outsb
outsl
mov
mov
das
stc
scas
push
lock
mov
inc
cs
pop
fstpl
imul
mov
pop
mov
scas
add
mov
xchg
xor
out
or
aaa
push
xor
out
sub
push
pop
in
insb
rol
dec
out
rorl
addr16
sbb
jo
pop
outsl
pop
pop
or
das
int
fwait
sbb
sbb
push
nop
pushf
loope
mov
and
popa
inc
mov
sbb
rclb
sbb
ror
push
dec
jle
popa
into
call
fstpt
int
mul
lahf
fxch
imul
mov
aam
cmpsb
testl
cmp
pop
or
xchg
push
cmp
loop
notl
imul
leave
ret
dec
and
push
loope
xlat
xor
mov
push
jns
call
ja
out
mov
push
or
mov
jbe
sbb
jo
jo
sbb
ds
ret
test
insl
mov
outsl
lods
sub
mov
or
push
sub
into
dec
mov
in
or
adc
push
testl
mov
cltd
mov
fdivr
insb
insb
out
pop
stc
loopne
xchg
pop
imul
mov
out
lcall
decl
add
fucom
mov
mov
pop
cmp
inc
cwtl
add
jp
dec
xchg
or
pop
test
mov
clc
mov
insl
push
dec
fidivl
jmp
pop
sbb
push
andb
mov
pop
es
dec
jge
inc
add
imul
das
fld
adc
inc
inc
mov
out
pop
xor
lret
stos
adc
cmp
mov
leave
lods
rclb
negb
rorb
fidivrs
ret
or
sub
dec
dec
bound
sti
push
enter
out
sbb
xchg
into
pop
test
jp
cmp
and
cmpsl
sub
int
sub
xor
dec
out
push
mov
pusha
nop
repz
inc
pop
movsb
add
mov
dec
jo
lahf
sbb
adc
jnp
cmc
ss
out
or
repz
pop
adc
cs
or
push
push
mov
xchg
mov
cmp
mov
sbb
jo
aad
arpl
outsb
mov
jl
jns
in
hlt
hlt
cmp
bound
push
mov
mov
and
test
pop
pushf
mov
loopne
les
pusha
mov
jl
sti
xor
push
lock
sarl
aam
adc
cmp
mov
jmp
call
mov
movsl
mov
in
es
gs
test
pop
cmp
out
mov
cmpb
adc
sbb
sbb
push
or
push
mov
mov
insb
imul
mov
inc
lds
sbb
mov
in
jno
push
and
repz
xchg
mov
fwait
dec
fwait
pop
sub
testl
insb
dec
out
inc
outsb
loopne
mov
lock
inc
pushf
lahf
adcl
pop
sahf
jb
sbb
or
fwait
shl
xor
adc
cmp
sbbb
iret
mov
dec
outsb
xchg
divl
cli
mov
sub
inc
or
inc
shrb
sarb
mov
xor
out
xchg
int
pop
pop
xchg
not
inc
lock
dec
cmc
xchg
iret
fcmovnb
cs
lock
jecxz
sub
cld
nop
mov
inc
fidivl
test
iret
jle
fldl2e
sbb
orl
test
mov
jmp
jmp
cmpsl
movsl
data16
inc
push
and
push
cli
mov
mov
addr16
stos
cs
je
add
mov
jnp
lret
rol
add
pop
mov
sbb
data16
aaa
jl
xlat
pop
adc
mov
or
repz
test
push
out
inc
shlb
mov
xorb
mov
and
insb
xchg
orb
iret
out
out
push
add
jle
sub
dec
shll
shl
and
pushf
int3
xor
mov
std
adc
mov
pop
pcmpeqw
cmp
inc
push
mov
dec
or
je
lret
ds
jno
rcr
jmp
mov
xchg
and
xchg
mov
aam
fcoms
jp
lods
in
das
adc
les
xchg
push
jp
mov
dec
stos
adc
pop
cmc
mov
sub
jo
inc
hlt
movlps
mov
mov
mov
or
push
pushf
mov
enter
icebp
mov
jb
popa
and
pop
lahf
test
inc
mov
lea
add
cmpsl
sarl
lods
xlat
jl
cmc
cmp
jb
inc
nop
mov
int3
sub
dec
nop
imul
dec
xchg
push
fsubrs
daa
lods
fcoms
testb
ja
and
pop
push
pop
ret
lret
inc
cli
dec
xor
dec
lret
cs
sbb
dec
jnp
dec
das
std
das
sti
cmpsl
ljmp
shlb
addb
iret
in
hlt
dec
cmp
bound
cld
adc
adc
push
stos
bound
aas
aaa
movsb
mov
mov
js
mov
mov
sub
mov
or
out
dec
dec
scas
sbb
push
cmp
add
adc
fcomps
push
icebp
pop
bound
xchg
clc
les
cmp
jle
mov
sub
ds
shll
xor
cmp
push
xor
les
jno
mov
push
pop
pop
cltd
xor
inc
jg
xor
sbb
mov
pushf
cli
mov
es
shll
push
cli
icebp
mov
mov
outsb
mov
cmp
jmp
add
stc
icebp
repnz
sbb
or
cmp
fwait
lret
lods
fimull
pop
cmp
add
mov
mov
inc
jl
push
in
sbb
je
adc
sahf
fldenv
add
xlat
xor
xchg
mov
inc
js
scas
add
dec
jl
xchg
cmp
rorb
dec
push
cmp
sbb
loop
sbb
stos
pop
mov
pop
and
cmp
adc
sti
fs
in
popf
pop
push
stos
cmpsb
and
rcrb
push
lods
mov
dec
add
jnp
pop
pop
jle
dec
pop
mov
sbb
mov
add
sbb
jecxz
push
dec
xchg
push
out
leave
fidivl
loope
or
or
jbe
sub
cmp
int
iret
pop
dec
mov
pushf
push
mov
push
cmp
lea
mov
pop
popa
pop
pop
pop
arpl
adc
inc
loopne
adc
or
insl
mov
stc
jne
out
jl
or
xor
add
mov
or
pop
jne
xor
push
jo
inc
in
xorl
inc
xchg
sub
mov
pop
mov
jmp
sub
cmp
xchg
xor
pushf
std
jae
aam
cmp
rorl
jbe
jb
out
fcmovnb
or
movsl
shlb
dec
fldz
nop
dec
and
pop
cmp
pusha
out
xchg
insl
out
push
pop
scas
std
cli
mov
insb
jae
mov
sbb
sbb
ss
push
int3
in
icebp
int3
adc
dec
arpl
jle
js
and
push
sub
loop
push
xchg
lods
jnp
test
push
ds
mov
movsl
xor
inc
test
mov
data16
mov
sarl
adc
mov
dec
push
sahf
mov
icebp
clc
dec
sub
push
xchg
aas
pop
mov
in
or
lods
stos
push
pushf
ds
mov
push
dec
inc
clc
sub
sbb
bound
out
sarb
sbb
cmc
jb
aam
or
xchg
lahf
xchg
and
out
mov
jg
jg
mov
fwait
loope
test
orb
scas
lret
outsl
test
jne
sti
popa
hlt
mov
pop
mov
pop
iret
add
int3
les
xor
dec
mov
pop
mov
pop
jl
mov
mov
rcrb
adc
cs
pop
icebp
cmp
and
or
iret
or
xchg
or
sbb
push
or
jo
cmp
pusha
mov
lock
std
sub
cli
je
mov
out
dec
add
jns
test
inc
mov
ja
push
std
movsb
fisttpll
and
sub
mov
jns
lods
mov
pop
in
xchg
repnz
rcrl
idiv
xchg
add
sbb
lcall
pop
iret
test
mov
cmp
mov
shll
lahf
gs
fisttps
dec
or
movsl
add
imul
adc
lcall
mov
jmp
call
shlb
jns
sti
repnz
pop
es
jmp
ret
mov
scas
movsl
xchg
jno
add
call
call
sbb
adcb
jp
mov
mov
mov
movsl
pop
adc
push
insb
insl
adc
sti
dec
pop
clc
test
aaa
stos
xchg
cmpsb
and
outsb
rorb
orl
ret
fdivr
cld
iret
aad
cltd
pmulhuw
cmp
or
jnp
gs
xchg
dec
lcall
inc
and
sub
call
movsw
and
insl
fidivl
stos
aaa
jmp
push
mov
mov
stos
add
mov
cmp
cmp
sub
add
ja
iret
mov
sub
push
mov
jle
cmp
inc
xor
pop
push
fldenv
push
inc
rcrb
push
scas
loopne
lret
fwait
adc
sub
leave
shrl
xor
sbb
mov
gs
sbb
ret
not
dec
pop
jge
or
mov
bound
mov
insl
xor
aas
or
xchg
repz
into
jg
mov
enter
sub
pop
push
push
cmpsb
pop
scas
in
cli
push
mov
xchg
jg
or
mov
sbb
cmp
mov
xor
fsubs
mov
stc
fs
inc
aad
dec
ds
xchg
mov
gs
adc
adc
cwtl
roll
rolb
inc
dec
mov
int
sub
or
incb
lods
clc
xchg
pop
not
adc
sub
cmp
jg
push
clc
lahf
cltd
outsb
inc
daa
xchg
push
lret
mov
xlat
arpl
jbe
sub
mov
inc
adc
shl
push
jae
push
mov
mov
mov
pop
xchg
mov
sub
test
or
xor
or
int3
mov
xchg
mov
mov
fsub
add
les
imul
dec
sub
push
cmp
cmp
mov
popa
mov
inc
xchg
mov
aam
dec
mov
sahf
aam
ja
mov
jmp
call
add
and
imul
mov
jecxz
add
scas
inc
fdiv
aad
dec
enter
dec
pop
insb
outsl
jo
or
test
lea
ds
sahf
xor
aaa
pop
outsb
jmp
fnsave
test
icebp
jmp
imul
cld
mull
mov
rorl
out
nop
jne
js
test
test
mov
push
testl
lahf
inc
negl
jge
pand
addl
lods
es
cs
mov
movsb
xor
mov
lahf
mov
fisttpl
pop
inc
push
aam
cmp
fwait
shlb
push
test
jp
cmpsl
mov
loop
fwait
sbb
aaa
pop
dec
es
adc
jmp
add
mov
jmp
xor
insb
mov
add
lahf
xlat
cmp
mov
push
std
push
sub
mov
and
stos
mov
push
adc
xchg
in
cmp
loopne
mov
jecxz
fisubs
in
outsl
pop
cmp
pop
adcl
or
mov
jo
les
add
das
cld
in
jge
mov
push
jp
or
and
loop
cmp
dec
push
cmp
mov
add
lods
loope
mov
popf
xchg
scas
sub
sub
stos
mov
xchg
xor
mov
mov
sti
dec
es
and
aaa
cmp
pushf
xchg
pop
cli
mov
mov
bound
in
mov
stos
pusha
not
jle
fs
cmp
xor
cmpsl
dec
xlat
adc
push
mov
loopne
rcrb
pusha
ret
sub
sub
cld
pop
xlat
jge
es
addr16
lock
roll
pushf
sbb
inc
ret
test
sub
pop
imul
jo
iret
jge
data16
outsb
stos
mov
lret
movsl
daa
out
fimull
rcll
jnp
jmp
arpl
in
cs
ret
popa
cmp
out
shl
lods
jg
fld
sbb
orb
xchg
dec
ja
dec
dec
shrb
mov
adc
into
pusha
sub
movb
dec
mov
lock
dec
adc
xchg
cmp
add
std
pop
cs
xor
cwtl
jle
test
pop
mov
sarl
nop
xor
mov
push
leave
sbb
pop
das
lds
sub
mov
fmull
rcrb
sub
jno
mov
and
inc
aad
pop
sub
jbe
mov
push
cltd
leave
jp
fnstsw
adc
mov
jg
fdivrs
bnd
sbb
pusha
push
adc
sub
push
push
fcomip
mov
subl
ss
loopne
dec
fwait
or
int3
jecxz
es
js
cmp
dec
cli
lds
mov
mov
mov
or
pusha
mov
imul
and
out
mov
cmpsl
fs
cmpsl
mov
out
cmpsb
fisubs
andl
dec
repnz
rol
ljmp
sub
cmpsl
mov
sbb
adc
div
in
faddp
dec
add
sbb
mov
and
adc
mov
or
das
addr16
rcrb
push
xchg
jg
decl
fisttps
out
sub
ss
decl
ret
scas
pop
or
test
dec
fstl
fistps
pushf
lret
mov
fcmovne
xor
aas
je
shrl
movsl
xor
inc
jecxz
push
addr16
mov
xchg
push
daa
pushf
jecxz
test
xor
xchg
enter
add
xor
es
ljmp
cltd
lret
lds
icebp
xchg
gs
sbb
xorb
push
and
lock
dec
mov
push
xchg
mov
xor
rcll
inc
dec
dec
dec
add
rcl
dec
int
or
add
jecxz
arpl
das
sbb
outsl
and
sbbl
mov
test
xor
fsubs
push
lahf
outsl
xchg
sbb
shlb
repz
pop
xchg
xor
in
pop
in
imul
and
loopne
push
jge
stos
mov
inc
mov
stos
in
xor
ds
cmp
xor
test
mov
jecxz
lret
xor
mov
imul
ret
lcall
or
aaa
xchg
shl
lock
or
out
rcrl
mov
dec
dec
inc
out
inc
sbb
xchg
or
and
adc
push
add
mov
push
popa
cmp
std
cmp
outsb
sbb
xchg
push
cld
jmp
aad
rcl
inc
sbb
sarb
xchg
push
cmpsl
mov
push
sbb
idiv
rclb
dec
jae
movsl
push
stos
inc
dec
pop
shrb
inc
test
jns
mov
push
mov
sub
div
xor
adc
lea
outsl
ljmp
cmp
int
mov
fs
cld
ret
or
mov
pop
pusha
jp
dec
and
leave
gs
pusha
pusha
cmpsb
dec
inc
push
outsl
inc
scas
lea
fdivrs
subl
fdivs
addr16
pop
jmp
cmp
add
xchg
movsb
lea
inc
loopne
fisttpll
mov
sbb
sub
bound
adc
mov
jmp
mov
rcrl
ljmp
jno
mov
fwait
push
sub
sbb
aad
andb
jle
clc
subb
cli
cltd
sub
movsb
inc
jns
xchg
aaa
rcrl
mov
cmp
mov
pop
sbb
mov
fadd
sub
test
push
dec
out
push
sarb
call
cmp
xor
shrl
push
inc
cmp
push
adc
push
jo
dec
arpl
adc
or
sbb
enter
loop
sub
inc
xor
sub
add
pushf
shlb
jge
test
dec
lcall
cmp
cmp
out
loope
test
lret
jne
lods
arpl
insb
mov
sbb
out
xchg
in
inc
mov
outsb
test
lret
mov
dec
and
addl
imul
mov
inc
ret
pusha
mov
adc
insl
adcl
push
scas
jnp
dec
ret
out
or
mov
fistl
push
hlt
push
cld
and
repnz
arpl
scas
jo,pn
and
pusha
jb
aas
pop
xchg
aam
repnz
iret
push
sub
fildl
nop
addb
stc
xchg
mov
and
jmp
sti
add
xlat
jge
call
xor
push
cld
lock
faddp
dec
jmp
push
out
jne
stos
mov
imul
mov
mov
insl
test
aas
add
jl
pop
loope
aad
scas
std
mov
mov
je
testl
fimuls
cmp
ud0
push
lods
xor
xor
bound
or
push
lock
xchg
cmp
cmp
sbbl
dec
dec
inc
and
and
adc
sbb
inc
cmp
lods
ja
mov
xchg
xchg
push
out
mov
mov
in
popl
and
ljmp
mov
add
jp
insl
out
dec
es
add
enter
movsl
repnz
sub
inc
fildll
inc
scas
stos
jae
jnp
mov
sub
test
inc
dec
ret
in
mov
cmp
fcomps
push
add
cmpsb
xor
aam
fcoms
pop
cld
xchg
test
repnz
push
ds
sbb
pop
cmp
or
movsb
dec
subb
fisttpl
push
movsb
in
xor
dec
mov
ss
dec
or
or
inc
pop
sub
clc
imul
popa
inc
pop
and
push
stos
jp
shll
jne
insl
clc
lock
imul
xchg
stos
mov
lahf
add
xchg
testb
mov
popa
xor
sahf
fwait
dec
in
aad
out
dec
jge
rorl
das
lret
push
and
or
sub
jmp
sub
cmp
cmpb
call
fwait
jmp
addl
outsl
mov
fnsave
xchg
loop
sbb
test
pop
sbbb
pop
inc
push
or
cs
inc
xchg
mov
cltd
ds
fdivl
out
loop
push
cmp
in
out
push
sahf
inc
ret
shr
cmp
adc
ficoml
xor
pop
xor
cmp
cmp
push
pop
fstps
mov
idivb
aas
int3
call
je
movsb
jno
mov
int
add
mov
popa
mov
cmp
sbb
add
or
stos
outsl
jg
cmp
xor
aas
ret
mov
bound
orb
js
int
adc
xor
mov
add
cmp
jb
mov
jge
pop
sbb
loop
fnstsw
pop
lods
arpl
out
nop
add
test
push
inc
and
aaa
rorb
adc
clc
fldcw
or
push
dec
enter
adc
repz
daa
imul
adc
xchg
jecxz
and
jge
jmp
popf
les
ret
pop
test
pop
pop
mov
divl
pop
or
mov
das
out
in
sub
and
sbbb
push
jae
inc
add
incl
out
das
pop
pop
sbb
in
sar
sbb
xor
mov
pushw
mov
jmp
and
jns
shrb
sbb
inc
fs
orl
je
add
mov
lock
mov
pop
mov
sub
loop
loopne
sbb
mov
loopne
mov
inc
or
add
xlat
sbb
out
xchg
mov
hlt
daa
mov
fsts
mov
aam
xor
adc
aas
lods
iret
lods
add
jecxz
xor
adc
cmp
mov
jl
push
cmp
fwait
adc
fidivrl
lods
call
fistps
mov
push
jo
mov
adc
pop
mov
xchg
jnp
mov
inc
xor
test
jmp
repnz
out
daa
pop
sti
fsts
pop
pushf
jle
fstpt
mov
movsb
mov
fimull
fwait
mov
sbb
mov
add
bnd
mov
add
jns
cmp
dec
xchg
dec
cmp
mov
bound
mov
or
and
dec
int3
out
jg
mov
rol
popa
in
in
mov
xor
in
shrb
sub
leave
inc
dec
jl
mov
nop
out
and
out
movsb
jno
xor
cmp
fbld
jl,pn
data16
arpl
sub
jne
add
mov
es
cwtl
clc
push
pop
out
jno
xchg
fistpl
sbb
cmp
push
cmpsl
mov
mov
js
sbb
mov
xchg
and
cmpb
filds
cmp
jbe
fdivrl
cmpsb
in
xor
mull
add
adcb
cmp
pop
push
cmp
jecxz
fiadds
orl
sar
sbb
cmc
pop
push
movsl
mov
imul
lds
mov
es
outsb
push
and
pop
out
int
mov
push
lock
pop
sbb
cmpsl
scas
sbb
roll
jno
stos
pop
ret
pop
loope
mov
orl
or
mov
ret
test
fidivl
stos
jmp
int
out
inc
push
aad
pop
mov
rcrb
push
mov
or
ds
sub
call
test
hlt
enter
push
nop
popa
jnp
push
xchg
jae
adc
xchg
xor
std
and
out
pop
les
stos
ds
dec
sahf
daa
out
out
cmc
mov
loop
xchg
repnz
and
sub
inc
inc
mov
cwtl
cli
xor
jo
outsl
sbb
stos
dec
scas
fwait
inc
daa
mov
lret
bound
xor
pop
cli
aam
fwait
test
in
inc
and
mov
sub
xor
dec
inc
fcmovb
dec
nop
mov
stos
adc
fsubrs
jl
fnstcw
jle
leave
scas
daa
and
andb
and
fadds
in
lahf
arpl
adc
mov
hlt
push
jno
mov
das
add
out
icebp
add
or
push
mov
mov
jge
pop
popf
stc
push
dec
nop
adc
mov
jecxz
mov
jl
out
outsl
xor
popa
add
sub
dec
pop
ret
cltd
dec
insb
adc
xor
cltd
push
pushf
jb
add
mov
and
lods
lea
jnp
mov
test
xchg
cmp
mov
out
fwait
or
inc
inc
movl
stos
adc
shlb
rcrl
and
in
xchg
cmc
dec
xor
pop
testl
lahf
sub
ja
pushf
xor
jo
sbb
xor
xor
pop
xor
test
dec
mov
mov
dec
mov
inc
adc
clc
mov
mov
into
sub
xor
scas
ret
ret
std
or
dec
pop
addr16
cmp
and
test
outsl
mov
mov
add
adc
inc
andl
pop
test
hlt
in
scas
les
cmp
fdecstp
leave
fucomi
lret
cmc
push
daa
daa
or
xchg
add
rolb
mov
or
sub
sub
int3
and
cmc
mov
inc
iret
pop
mov
in
rorl
inc
xchg
cmp
push
nop
xchg
adc
jns
je
inc
pop
push
push
xchg
mov
scas
in
je
inc
mov
fisttpl
adc
int
push
inc
pop
iret
xor
out
int3
fsubrp
movsl
jbe
add
int
test
mov
cmp
adc
or
aaa
fwait
addl
fsts
mov
clc
or
inc
mov
addr16
sub
dec
or
mov
push
je
scas
jbe
or
jg
and
int3
push
in
int3
lods
aam
aad
lods
scas
pop
flds
test
sub
push
int
gs
in
pop
lock
dec
lock
cmp
ficomps
fsubl
addr16
incb
daa
out
jne
pop
pop
outsl
sub
fidivl
leave
stc
xchg
imul
pusha
lret
jg
add
jecxz
loop
sbb
mov
dec
xor
imul
dec
mov
aam
jmp
sub
fnstsw
mov
icebp
pop
pop
add
or
fdivl
in
jg
push
cmp
push
add
jge
int3
repz
mov
push
insb
jl
popa
mov
sbb
lret
leave
xchg
in
sbb
stos
scas
mov
in
das
mov
xlat
cmp
clc
xlat
fwait
or
xor
mov
mov
fucomip
adc
cmpsb
iret
sub
xlat
and
in
std
into
lahf
adc
push
jnp
mov
insl
insb
lahf
je
jb
add
push
stos
adc
sbb
pusha
mov
test
pusha
ror
lret
cwtl
cmp
in
push
lock
inc
inc
les
and
dec
and
pop
pop
bound
xor
decb
sub
mov
inc
adc
xchg
dec
loopne
in
sub
dec
mulb
js
sub
cmpsb
fldl
notb
jp
lret
ja
test
dec
or
rorl
dec
imul
lret
lcall
stc
int3
inc
aaa
xor
and
enter
jp
jb
mov
push
inc
je
cli
xor
gs
xchg
into
fs
push
js
inc
add
cmp
shl
jmp
push
sbb
inc
mov
lcall
dec
mov
xchg
lods
dec
jmp
push
std
push
mov
push
mov
sar
data16
cwtl
aam
mov
xchg
jae
outsb
inc
inc
jne
das
fcmove
add
and
aaa
dec
or
nop
inc
loope
repz
dec
dec
mov
inc
sub
dec
stos
mov
add
push
mov
and
aam
mul
cmc
divl
adc
arpl
sti
loopne
cmc
cmp
pusha
clc
fldenv
mov
in
sbb
das
in
pop
aaa
xor
mov
push
inc
lret
lea
sub
fwait
or
inc
outsb
stc
arpl
pop
sub
xchg
mov
ret
mov
push
cmp
push
or
popa
mov
fs
rorl
jnp
adc
cmp
testb
sahf
ret
fisttpll
mov
inc
ffree
inc
sub
es
movl
mov
fs
push
pop
mov
testb
shll
inc
das
aad
mov
int3
rol
ret
test
pop
xchg
push
scas
out
movsb
test
inc
mov
int3
and
test
stos
push
pop
into
test
lahf
sbb
pop
arpl
mov
bound
inc
or
mov
ds
ret
ds
mov
xor
cmpsl
cmpsl
xchg
push
add
jo
push
and
in
daa
xchg
fmuls
nop
xchg
mov
adc
add
out
dec
out
sahf
pop
cmpsl
dec
sbb
gs
ss
jp
xor
xor
push
popf
daa
or
data16
test
popw
js
ljmp
insw
jge
jnp
das
pop
cmp
and
pop
clc
mov
cmp
adc
mov
and
xchg
mov
ss
cmp
push
imull
mov
call
leave
mov
fst
mov
lock
insb
mov
push
jno
inc
and
push
imul
mov
mov
push
repnz
repz
or
jge
mov
jb
add
fdivrl
sbb
jns
pop
loope
sbb
hlt
or
aad
adc
mov
mov
sub
jno
push
or
or
in
or
push
adc
push
nop
aas
std
in
hlt
out
pop
pop
pop
fadds
xor
imul
dec
add
xlat
mov
mov
mov
adc
mov
fisttpll
arpl
sbb
mov
mov
lea
mov
les
pop
mov
rcrb
xchg
insl
sbb
ja
sbb
xchg
sub
repz
mov
loope
inc
inc
or
pop
xor
cmp
mov
aas
pop
or
bound
or
add
outsl
pop
mov
cmpl
fidivrl
add
mov
mov
rcll
loope
inc
in
jecxz
int3
cltd
outsl
adc
ss
orl
ss
pop
mov
test
call
outsb
sub
mov
mov
jecxz
ret
pop
pop
inc
pop
xchg
cld
add
sbb
mov
and
xor
ror
push
adc
cmp
sbb
mov
mov
xchg
jp
xor
sub
test
inc
sub
jb
xchg
imul
pushf
inc
pop
faddp
and
push
mov
call
lcall
lcall
out
push
xor
outsl
std
sbb
pop
inc
xor
mov
in
push
xchg
sub
inc
test
jns
pop
cmc
xor
and
cmp
pop
stos
mov
insl
test
push
adc
test
push
gs
inc
dec
jbe
insl
pusha
into
fcmovnbe
repz
sbb
pop
inc
mov
pop
xor
lret
mov
pushf
fsubr
sbb
pushf
adc
xor
fistpl
test
pop
aas
out
test
or
inc
sbb
add
lcall
push
aam
mov
repnz
fsubl
jg
jecxz
jmp
jecxz
adc
inc
fidivrs
ficoml
cmp
pop
sbb
dec
pusha
lods
add
insl
sub
cmp
rcl
sbb
sub
mov
cmp
or
cmc
mov
inc
jg
cmove
inc
and
push
cmc
fldcw
sbb
pop
mov
iret
bound
xor
jno
adc
lods
insl
mov
mov
pushf
cld
add
mov
icebp
dec
negb
inc
je
pop
aaa
xchg
sbb
pop
dec
adc
test
or
cmp
into
lock
in
sbbl
es
cmpsb
xlat
outsb
pop
fs
insl
push
imul
mov
ds
push
jne
pop
xor
and
mov
xchg
pop
pop
sbb
aaa
add
push
inc
pop
cmp
in
in
rcrb
jns
mov
inc
in
inc
addr16
inc
adc
das
test
push
fwait
cmp
mov
fsubr
pop
test
call
cltd
out
loopne
lods
out
jmp
mov
xchg
rsm
jmp
sti
movsb
pop
mov
jnp
jo
sbb
add
flds
dec
sub
sbb
pop
outsl
adc
sbb
sbb
mov
cmp
mov
cwtl
xor
sub
jns
stos
jns
jp
out
call
jb
cwtl
lcall
les
cmp
lods
shr
sbb
jmp
xor
mov
inc
ss
push
inc
ret
scas
pusha
ret
mov
idiv
adc
aaa
adc
xor
int
xchg
dec
mov
test
js
sub
negl
and
mov
loopne
mov
and
lcall
rorb
imul
jne
cmp
mov
not
aad
add
repnz
mov
mov
mov
cltd
loope
pop
outsl
adc
xchg
in
pop
push
push
out
mov
cltd
xor
rclb
cmc
pushf
push
xchg
inc
mov
dec
mov
inc
or
movsb
xchg
xor
int
popa
pushw
cmc
aaa
mov
mov
dec
add
pop
jns
sti
sub
cmp
js
jp
mov
jle
stc
pop
xchg
dec
sub
icebp
lahf
push
lods
and
int3
mov
lds
fisttps
scas
into
fistpll
ljmp
adc
mov
pusha
js
aas
push
movsb
mov
outsb
mov
jne
add
add
cmp
sbb
sub
mov
jmp
into
les
pop
rcrl
push
adc
pop
rol
adc
sub
lock
testl
xor
scas
je
cli
and
dec
and
cli
xchg
std
xchg
xor
das
jmp
push
jno
imul
stos
ss
stos
push
push
pop
mov
xchg
dec
iret
ret
xlat
inc
into
mov
cmc
pop
cmp
mov
inc
out
jmp
pop
bound
xchg
popa
push
daa
test
loope
fisubs
cmp
push
bound
pop
aas
aas
mov
cmp
ja
cmp
inc
add
iret
mov
and
mov
dec
ret
hlt
insb
popa
cmp
lods
nop
mov
lahf
jb
enter
ja
int
ja
cltd
stc
push
out
xor
mov
jecxz
jmp
dec
cld
sbb
sbb
mov
test
in
es
xor
xchg
pusha
sbb
cmp
lret
sbb
mov
aas
adc
dec
lahf
cmp
mov
scas
xor
je
push
incl
stc
add
mov
adc
aas
mov
or
fstps
mov
ret
and
dec
popa
mov
aaa
orb
push
les
rol
jae
jecxz
mov
fs
call
dec
jne
xor
aad
or
cmp
divb
lock
add
lods
add
jmp
push
xchg
imul
jae
adc
and
mov
addr16
adc
xchg
in
and
sbb
les
cmp
hlt
sub
lret
jmp
icebp
dec
out
and
sub
jne
jmp
mov
cmp
sbb
daa
add
popa
add
dec
into
mov
cmp
pop
push
jmp
push
aaa
in
xor
jmp
daa
in
faddp
adc
mov
divb
sub
mov
cwtl
or
sub
xchg
mov
loop
scas
cmp
loopne
pushf
push
js
xorl
divb
jecxz
add
mov
int3
jmp
sbb
mov
xchg
sub
mov
je
push
mov
ss
ss
sbb
push
xchg
adc
add
out
ss
push
or
imull
pop
subl
sub
pop
and
sub
sbb
xor
dec
jle
ret
cmp
sarl
jle
hlt
sub
push
xor
enter
mov
mov
out
push
mov
test
mov
incb
movsl
test
mov
mov
jg
xor
push
mov
lret
cmp
mov
loopne
xchg
jns
das
jl
scas
add
push
test
popf
sub
xor
sub
dec
push
push
repnz
into
cmc
in
jb
lds
inc
push
mov
inc
push
xchg
daa
loop
jmp
testl
push
pop
push
mov
dec
enterw
rcll
jb
or
mov
out
mov
push
jg
aas
push
sahf
sbbb
pushf
sbb
mov
or
pop
cmp
fcoms
fdivs
imul
pop
vpsubsw
xchg
loop
inc
arpl
pop
pop
pop
out
dec
inc
repnz
mov
push
addb
or
push
movsl
adc
cmpsl
in
sbb
rcll
cmp
sub
mov
out
in
dec
pop
jb
sbb
adc
into
out
sahf
jbe
outsb
rorb
stos
test
pop
mov
movsl
shll
adc
pop
jecxz
test
lods
loope
loopne
les
loop
dec
les
push
arpl
cs
pop
push
sahf
sub
push
or
push
mov
gs
sbb
push
pop
fdivrl
sbb
adc
jg
loope
sub
shll
or
lahf
cmc
ret
pushl
bound
mov
rcrl
push
cmp
push
mov
out
pop
mov
fbld
test
aas
add
mov
xchg
cld
add
pusha
cmp
dec
aaa
cmp
xor
fxch
pop
jge
imul
pop
mov
dec
shrb
gs
and
sbb
outsb
loop
sbb
dec
xchg
test
je
sti
loop
add
jnp
daa
xchg
mov
aaa
ja
cmp
ret
dec
sbb
int3
xchg
add
sbb
and
aas
mov
cmp
inc
jnp
dec
pop
push
jb
sahf
xor
xlat
shl
mov
roll
cmp
fdivr
sub
cmpb
fimuls
inc
xchg
int3
pop
mov
icebp
cmp
pop
xchg
fistps
or
std
shll
xor
cmpsb
cmp
xchg
pop
or
sub
xor
sbb
mov
mov
adc
push
mov
repnz
inc
call
mov
sti
mov
insb
stos
sbb
push
pop
dec
sarl
adc
je
flds
ds
mov
push
mov
jle
pusha
stos
outsl
subl
xchg
subb
lods
inc
cmpsl
adc
or
adcb
daa
enter
shl
xor
mov
imul
arpl
pop
ja
inc
xchg
and
sub
inc
pop
sti
add
xchg
in
cmp
add
jmp
jl
push
xchg
mov
mov
mov
and
inc
nop
cltd
adc
lods
popf
bound
jae
push
and
leave
sbb
lahf
inc
mov
adc
stc
aas
insb
xchg
fistl
in
in
pop
stc
ljmp
push
mov
fidivrs
gs
jmp
cmc
loop
das
enter
mov
jns
mov
sti
jo
ss
push
cmp
out
sub
add
xchg
cmp
add
adc
and
lahf
ds
fdivs
dec
popa
cli
dec
cli
or
adc
imul
lods
xchg
inc
rcrl
mov
mov
cli
adc
out
cmp
dec
push
sub
push
fdivs
outsl
ret
hlt
ret
xor
cmpsl
push
pop
fnsave
and
popf
xor
aas
push
push
push
fsubr
notb
fdivrl
lock
mov
and
pop
test
fldcw
inc
pop
bnd
outsl
imul
jnp
adc
shr
scas
mov
mov
mov
iret
jmp
fcompl
mov
sti
int
jo
sarb
mov
test
popf
lock
popa
mov
xchg
inc
xchg
movsb
std
shrb
adc
hlt
jae
push
cli
lds
inc
pop
dec
dec
loopne
mov
jb
stos
push
addr16
out
popa
subb
sti
loop
mov
or
push
mov
pushf
xchg
cmp
jle
mov
push
stc
sub
mov
pop
aad
mov
pop
lret
push
mov
mov
pushf
inc
cli
faddp
lock
add
jns
jns
lods
icebp
push
fs
push
movsl
movsb
push
rorb
xchg
xchg
ljmp
dec
pushf
mov
out
xchg
mov
bound
gs
in
and
scas
and
and
jmp
add
test
sub
ljmp
and
mov
adc
mov
mov
lds
imul
add
sbb
lahf
popf
xchg
push
push
lds
test
icebp
lock
jecxz
scas
or
outsl
jo
xchg
jg
fistps
scas
adc
test
in
or
or
lds
fnstenv
mov
mov
add
inc
out
in
inc
dec
xchg
cmp
push
in
aas
imul
or
scas
sbb
dec
pop
les
out
rolb
andb
and
xchg
push
sbb
mov
cmp
cmc
add
pop
mov
xchg
mov
not
insl
inc
nop
cmpsl
rolb
test
movsl
xchg
loop
mov
cwtl
cmp
xor
fcmovnbe
dec
popa
out
fisubl
push
fmuls
xor
dec
push
mov
jo
add
mov
mov
pop
mov
mov
mov
and
js
dec
jne
lcall
cltd
mov
jnp
cmp
push
xor
mov
jae
jge
ja
int3
xchg
dec
das
jne
jne
js
stos
mov
push
pop
xor
adc
xchg
add
stos
outsl
mov
test
push
sub
hlt
into
jne
adc
jae
out
pmulhw
int3
call
rcrb
pop
orl
andb
cld
sub
pop
cmp
jmp
mov
and
test
imul
push
iret
in
push
or
imul
sub
mov
popf
imul
sbb
inc
pop
cmp
int
mov
push
fs
adc
adc
ficompl
sub
lds
inc
pop
data16
push
popl
sahf
iret
xor
cmpsl
inc
pusha
daa
stc
pusha
add
cmpsl
push
sub
les
int
xlat
test
add
inc
int
stos
lods
adc
xchg
jg
adc
into
fs
xchg
testl
addr16
pop
mov
sti
sbb
es
mov
mov
loope
pop
out
mov
prefetchw
or
xor
les
icebp
xchg
push
lea
mov
nop
xor
imul
inc
fidivl
loopne
add
mov
int3
cmp
fiadds
mov
fbld
mov
fildll
aas
lock
aas
add
sbb
cmc
dec
imul
mov
cmpsb
pop
mov
mov
adc
leave
add
scas
pushf
cltd
test
fildll
sbb
sti
push
addr16
dec
int
xchg
or
imul
iret
ret
repz
les
push
inc
stos
jge
sbb
sbb
stos
sahf
sbb
adc
mov
jecxz
outsb
popf
dec
fwait
dec
ret
les
fcmovnbe
pop
mov
movsl
xchg
shlb
test
stos
dec
mov
adc
ret
sbb
pop
sub
sbbb
xor
sub
cmp
in
call
or
add
mov
sub
mov
xlat
jl
pop
pop
push
je
pop
fsubrs
popa
xchg
jnp
lahf
push
push
notl
cmpsb
cltd
clc
mov
roll
jae
lods
hlt
popa
mov
jge
dec
hlt
mov
orl
dec
adc
leave
gs
ds
fstp
ret
lea
lock
out
xlat
xchg
xorl
fdivr
loope
repz
test
and
jmp
pop
add
shr
hlt
dec
shll
or
insl
add
fwait
cwtl
adc
movsb
fistl
fsub
push
test
jb
jl
adc
mov
xchg
ljmp
insb
pop
int3
sub
loopne
in
push
iret
or
fnstsw
or
out
mov
repnz
inc
ds
adc
add
mov
aas
xor
mov
push
lcall
push
repnz
adc
lods
std
mov
pop
cmc
push
mov
mov
cmp
orl
push
mov
adc
pop
sbb
push
cmp
mov
mov
les
sbb
mov
cmc
mov
mov
stos
jnp
sbb
push
sbb
sbb
push
sbb
pop
in
adc
insl
mov
mov
dec
sahf
je
ljmp
stos
loop
add
mov
cmp
outsl
sub
iret
sti
bound
lods
push
mov
adc
cmpsl
sarl
inc
add
pop
js
cld
ret
dec
int3
add
jo
sub
out
jns
shlb
xchg
ror
adcb
in
mov
into
or
mov
ret
dec
pop
rcll
bound
and
sahf
idivb
shl
enter
cmp
xchg
mov
out
jg
int3
lea
xchg
cmpsl
shl
dec
bound
sub
ret
hlt
lock
add
cmp
outsl
xchg
add
jno
cld
cmp
and
loope
xor
ret
scas
orb
xchg
call
push
scas
jbe
cwtl
scas
std
hlt
stos
ja
enter
cmc
add
sbb
ljmp
andl
push
sub
mov
sub
mov
push
dec
push
popf
sbb
xor
stos
inc
inc
jnp
aaa
dec
mov
je
popa
fadd
add
cmc
xorb
popf
out
and
pop
mov
pop
cmp
jge
cmp
int
fs
les
xchg
shl
ljmp
jae
add
adcl
jns
sbb
sti
jno
out
mov
stos
sub
xor
mov
dec
inc
pop
pop
outsl
mov
xor
jmp
cs
bound
mov
xchg
xlat
mov
mov
xlat
pop
mov
jne
cmp
idivb
jno
mov
sbb
ljmp
sub
test
gs
paddusw
dec
std
or
xor
or
pop
sub
notb
int3
xorl
mov
cmpsb
out
sub
out
add
idivl
negb
clc
push
push
notl
sub
out
pop
aaa
and
movsl
xorb
and
int
mov
ljmp
fnstsw
mov
mov
imul
dec
push
out
in
cwtl
push
jns
mov
icebp
or
push
in
cmpsl
add
mov
pop
nop
sbb
hlt
mov
call
jmp
sbb
pusha
lods
adc
repz
fisttps
pop
clc
fmuls
fstl
mov
push
dec
dec
cmpsb
roll
shll
and
sub
jae
mov
icebp
aam
int
insb
mov
shrl
insl
sbbl
pop
mov
mov
loope
dec
loope
fcoml
jnp,pn
adc
pop
xor
jo
sbb
mov
mov
leave
mov
lea
imul
jp
data16
fldt
aam
push
inc
sub
or
subl
ret
dec
stc
les
test
out
add
test
and
dec
xchg
push
or
cli
push
mov
adc
jg
fwait
sub
loop
fistps
aam
mov
aas
or
adc
lock
lods
out
lcall
outsl
cmpsl
lcall
push
fisubl
push
jl
jo
mov
lret
je
dec
ret
and
xor
cwtl
lods
gs
push
pop
push
movq
pop
out
inc
call
test
fs
xchg
cmp
jl
sbb
das
and
xlat
int3
stos
adc
xchg
xchg
push
shl
cmpsb
adc
and
mov
fistpll
mov
cmp
aas
dec
das
repnz
or
iret
clc
cmp
jnp
mov
inc
jle
mov
mov
mov
movsl
cwtl
mov
xor
mov
cwtl
arpl
sub
call
into
cltd
jb
lea
sbb
pop
mov
call
sbb
cwtl
mov
xor
sbb
stos
pop
push
enter
clc
push
cwtl
push
stos
icebp
sbbl
inc
dec
ja
xchg
xchg
sub
xchg
pop
ss
cmpsb
and
adc
or
mov
stos
leave
jbe
or
pop
leave
pop
pop
gs
arpl
cmp
decb
cmpsl
push
sub
mov
ret
and
xor
in
fists
sti
mov
mov
xchg
mov
pop
clc
mov
dec
jne
pop
clc
fsubrp
xor
test
mov
xlat
leave
popa
lock
dec
pop
dec
es
sbb
jb
xor
mov
sahf
loop
xlat
aaa
daa
xor
fsts
fldt
xchg
or
mov
adc
shll
or
lds
mov
or
mov
aas
lods
cmc
fistps
and
insb
arpl
out
cwtl
lea
bound
insb
jae
mov
mov
pop
loop
mov
mov
mov
add
pop
fidivrs
fpatan
mov
mov
xchg
ljmp
shlb
mov
out
push
jg
ret
add
cs
test
jne
filds
test
stc
clc
mov
es
mov
adc
stos
push
in
sahf
fisubs
cmpsb
cltd
push
add
lea
add
shlb
dec
and
adc
out
mov
lods
push
icebp
ret
faddp
or
ret
ljmp
shrl
movsb
mov
mov
je
loopne
sub
jne
add
mov
sub
cs
cmpl
mov
ss
pushf
xchg
js
fildll
mov
repnz
jbe
fisttpll
shrl
aaa
cmc
popf
fstl
push
sub
sarb
orl
cmp
nop
inc
jp
scas
aam
push
imul
mov
adc
shl
sbb
add
in
dec
adc
push
ficompl
pop
insb
xor
mov
movsb
aaa
pop
push
inc
jge
cmpsb
pushf
movsb
add
rcll
test
push
dec
lret
adc
lods
xchg
int3
fcoml
inc
pop
xor
rol
and
push
in
ja
mov
push
add
sub
mov
jl
push
movsl
xchg
std
scas
adc
dec
mov
mov
or
push
xchg
pop
enter
rcrb
pop
sub
dec
insl
jnp
sbb
loop
inc
sub
lret
push
inc
mov
testb
ja
cli
pop
xchg
sub
dec
xchg
arpl
outsl
mov
cs
mov
or
inc
dec
andb
dec
fwait
out
dec
sub
dec
insl
sbb
cld
insl
mov
cmp
in
sub
and
dec
test
mov
loope
mov
fimull
sti
jmp
xlat
push
inc
add
adc
mov
inc
data16
adc
movsl
cmp
into
sub
sbb
pop
subl
loopne
ljmp
movsb
clc
sti
jne
scas
cmp
pop
lahf
cmpsl
dec
cmp
pop
int3
mov
ss
add
jne
inc
jo
rorl
sahf
adc
fdivs
add
jp
pop
decl
push
cwtl
das
sbb
and
hlt
les
dec
adc
into
loop
mov
mov
xchg
cld
out
push
inc
ret
fstps
ret
daa
adc
and
inc
insl
push
mov
jne
shr
mov
lahf
in
aas
cmovle
pop
aad
add
movsl
push
mov
xchg
mov
iret
arpl
sub
lret
pop
jmp
into
xchg
js
jb
lods
loop
test
fimuls
scas
inc
pop
push
addr16
dec
adc
in
insl
or
add
lea
shlb
icebp
fs
xor
sbb
pop
cltd
out
out
bound
xchg
std
xor
cmc
fsts
xchg
lea
xor
and
loopne
mov
cmp
mov
inc
icebp
add
mov
fnstenv
js
sahf
inc
out
or
mov
and
sub
dec
mov
mov
mov
push
enter
lock
mov
sbb
pop
and
into
jg
repz
clc
imul
fsubp
mov
pop
out
push
or
push
cmp
addr16
data16
jns
mov
jae
jle
andl
popa
sub
mov
xchg
sti
scas
ret
stc
cmpsl
daa
shll
xchg
sti
shlb
dec
or
popa
movsb
cmp
dec
in
sub
frstor
gs
pop
mov
cmp
jnp
cmp
repnz
and
loope
mov
xchg
mov
pop
outsl
add
cld
dec
cwtl
popf
jecxz
push
push
xor
adc
nop
push
repz
dec
cmpl
adc
pop
xor
mov
push
mov
pop
push
cmp
pop
jnp
les
cmp
adcb
insb
or
cmpsl
daa
xor
adc
lret
in
mov
shll
out
mov
loop
inc
or
out
push
dec
push
mov
pop
out
loop
dec
dec
repnz
aam
push
call
mov
rcll
inc
mov
add
dec
cld
mov
ret
test
shrl
inc
jo
mov
push
daa
js
in
xchg
pop
or
jns
mov
mov
arpl
daa
dec
xchg
lcall
aad
inc
faddl
imul
inc
cltd
push
pushf
mov
ljmp
je
cmp
mov
ds
test
cmp
cmp
repnz
and
push
dec
jecxz
rclb
fmuls
loop
mov
push
test
jno
cwtl
insb
pop
fistps
rolb
inc
js
aad
inc
fstps
imul
add
dec
outsb
arpl
nop
dec
sbb
cmp
rorl
adc
out
repnz
repz
xchg
mov
stc
clc
lods
imul
ljmp
lock
xchg
sahf
lds
xchg
icebp
lcall
fdivl
pop
and
add
gs
or
in
ljmp
sbb
rcll
loop
adc
xchg
xlat
aam
outsb
push
pusha
gs
mov
inc
flds
cli
cld
mov
sbb
inc
inc
shlb
cs
lods
jb
fwait
ds
cmp
lods
mov
test
cli
cmpl
cmp
sbb
push
pop
out
inc
mov
xchg
jno
lea
add
mov
mov
stos
iret
decl
add
icebp
mov
inc
sbb
xor
mov
xchg
addr16
xor
iret
add
cmp
add
outsb
dec
push
add
fldenv
nop
jae
sets
cltd
icebp
push
cli
pusha
outsb
jge
ficomps
sub
add
mov
aad
sbb
test
pop
stc
pop
and
in
pop
imul
lods
or
sub
adc
stos
fsubr
pop
je
call
jae
cs
cwtl
jle
push
lahf
push
mov
jb
inc
sub
cmp
fcomps
mov
mov
jb
mov
dec
ja
sbb
mov
cltd
outsb
inc
std
out
in
pop
mov
in
ja
dec
sbb
jle
push
xorl
leave
test
ja
imul
push
out
mov
pop
sbb
xor
dec
adc
jge
jns
aam
push
inc
jns
sbb
mov
ds
mov
jmp
pushf
add
pop
cwtl
pop
mov
aas
mov
mov
and
and
cmp
lret
sub
sub
shlb
or
cmp
out
jmp
mov
mov
mov
std
mov
mov
pop
pop
jmp
and
movsb
sahf
iret
push
out
push
mov
jb
lea
lea
aas
and
outsb
pop
cmpsl
push
sahf
cmp
xchg
lret
and
rorb
or
push
pop
jg
andl
in
or
push
mov
fiadds
push
mov
xchg
sbb
and
jnp
sub
add
fsubrl
sub
repnz
ret
push
jmp
mov
sarl
pop
or
push
rcr
mov
addl
stos
rolb
adc
cmp
adc
ret
cmp
and
es
out
movsl
nop
rcrl
and
testl
dec
sti
faddl
jl
add
add
gs
and
fldcw
push
pop
loop
xlat
sbb
inc
jmp
pusha
in
sahf
sbb
aad
ds
sahf
jno
sbb
pop
sbb
xor
cmc
cld
jno
xlat
jb
push
iret
push
popf
jecxz
dec
push
xor
and
pop
push
mov
mov
xchg
xor
inc
mov
pop
push
mov
imul
sahf
dec
mov
and
sub
adc
pop
mov
add
lcall
aaa
push
insb
adc
add
cmp
cwtl
les
mov
fsubl
add
xor
or
stos
jnp
xchg
sbb
lret
mov
jb
insb
or
or
pop
fcmovne
jg
mov
mov
insb
cld
pop
data16
repz
xchg
nop
sbb
jmp
ds
test
jle
mov
es
mov
dec
mov
js
fsubl
mov
out
test
mov
cmp
jge
sub
imul
jae
shr
pop
jle
int3
test
push
jecxz
sub
rcrb
sub
fstl
add
inc
pop
outsl
rorl
push
jmp
xchg
popf
xchg
das
sub
js
popf
mov
inc
aam
jae
enter
or
push
cmpsl
push
dec
mov
inc
pushf
and
stc
sub
shr
mov
inc
in
adc
insb
cltd
mov
push
insl
out
jl
movsb
rolb
test
push
mov
add
iret
js
sub
mov
cmc
and
mov
and
lret
fistpll
inc
jg
rolb
orl
loope
inc
scas
dec
xchg
lret
faddl
cmp
cmpsl
cld
cmp
fdivl
cmp
mov
es
push
enter
mov
das
push
pusha
mov
jl
ljmp
scas
dec
icebp
xor
dec
inc
cmp
mov
dec
mov
xchg
dec
arpl
xchg
push
xor
rolb
push
adc
pop
lods
shlb
cli
into
call
mov
scas
pushf
mov
mov
adc
stc
pmulhw
add
mov
mov
push
call
je
mov
pusha
adc
mov
outsb
cmp
fstpt
mov
adc
out
adc
jg
subb
imul
fsubl
movsl
adcb
sbb
or
add
shr
loopne
and
push
xor
adc
inc
out
xor
insl
popf
je
mov
push
cltd
xchg
xor
fnclex
xor
das
push
lcall
jb
out
pop
lcall
jp
stc
jb
sbb
ljmp
aam
and
or
iret
and
inc
ja
or
push
mov
inc
mov
sarl
pop
imul
mov
push
jecxz
ljmpw
mov
push
adc
repz
out
dec
mov
cld
mov
mov
dec
ffreep
add
enter
test
push
loop
fsubl
sub
lods
test
test
adc
adcl
xchg
test
xchg
pushf
jb
in
add
cmp
daa
pop
xchg
mov
sahf
mov
in
jge
iret
in
in
cmp
xor
dec
fwait
sbb
pop
sub
push
gs
add
and
push
pop
nop
and
push
test
adc
scas
jns
mov
xchg
sbb
pop
dec
lods
pop
xchg
jb
mov
cli
cmp
lcall
or
cltd
push
mov
leave
mov
adc
iret
ret
lock
inc
pop
out
icebp
nop
and
mov
test
jae
inc
scas
push
adc
outsb
cmc
adc
popf
jbe
test
inc
sbb
test
leave
sub
jo
adc
lods
mov
popa
pusha
inc
je
mov
outsl
das
fsubs
popf
pop
add
les
lret
scas
mov
mov
out
mov
adc
cwtl
jle
or
or
loop
push
gs
movhps
fstpt
xchg
fs
gs
es
aas
fwait
jo
xchg
outsl
movsb
imul
xchg
mov
ja
cltd
cmc
pop
sbb
push
mov
push
outsl
jl
adc
daa
addr16
out
mov
repnz
jl
xor
cmp
xor
arpl
and
add
test
stos
mov
and
dec
int3
fwait
cmp
mov
lret
inc
adc
arpl
stc
popa
and
or
aad
inc
push
imul
rorl
shrb
lret
inc
sub
xor
sbb
cmp
adcb
jp
popa
push
fisttpl
sar
dec
daa
sub
jno
mov
push
push
pop
adc
mov
dec
push
mov
and
sub
das
jae
add
stos
cld
lods
mov
jg
mov
mov
mov
call
cmp
xor
xchg
jns
xor
lea
mov
dec
sti
movsb
jae
mov
jge
pushf
shl
mov
lods
sarb
xor
jne
inc
xor
adc
dec
dec
fdivrl
mov
sbb
ds
add
out
std
scas
data16
xor
mov
call
repz
dec
aad
or
sub
pop
imul
or
insl
inc
adc
mov
inc
imul
push
test
adc
mov
shl
cmpsl
push
and
js
inc
test
test
push
sarb
fsin
lcall
popa
push
jns
inc
inc
stc
lcall
outsl
shl
mov
movsb
es
push
mov
leave
test
jne
cmc
push
filds
inc
pop
push
lods
cmpsl
je
and
int3
dec
addl
aas
xor
or
fisttpl
push
dec
loop
jmp
mov
push
in
sbb
mov
and
shl
add
sbb
repnz
lret
mov
inc
jge
xchg
jg
outsl
and
fcomps
popf
mov
add
cli
lea
xor
mov
sbb
ljmp
cmp
mov
neg
xor
popf
pop
rcll
lahf
mov
pop
outsb
push
out
cmpsb
sbbb
push
loop
scas
aam
jbe
mov
mov
or
push
push
aas
xchg
jl
aas
push
mov
push
sbb
inc
pusha
aaa
mov
aad
idivl
cmc
push
xorl
mov
cltd
or
mov
cmc
push
mov
fsub
sub
ss
sarl
lea
lcall
xor
cmpsb
iret
js
mov
loop
pop
push
push
aad
imul
fcoms
inc
jnp
add
ret
pushl
and
push
test
or
outsb
stos
imul
xchg
cmp
js
push
dec
popf
sbb
xchg
cltd
in
lods
jns
xchg
popfw
push
inc
scas
dec
rcrb
hlt
pop
adc
fcompl
fdivrs
in
sbbb
mov
in
fwait
cmp
dec
adcl
arpl
andl
out
pop
lods
dec
aad
insb
rorl
mov
or
mov
sbbb
int3
scas
fisubrl
mov
push
mov
sbb
sbb
push
push
cli
ds
push
or
nop
into
rcrb
outsl
arpl
push
sub
pop
and
inc
jecxz
mov
pusha
pop
pop
xchg
xchg
adc
push
xchg
dec
call
mov
loope
insb
mov
loop
dec
cmp
dec
popf
pop
push
int3
sbb
out
enter
out
fldenv
xor
and
pop
push
lret
adc
mov
dec
test
stos
insb
inc
pop
les
inc
cmp
repz
jno
sub
fcoml
movb
aad
test
out
cmp
push
shl
cwtl
jbe
mov
loopne
test
mov
stc
mul
imul
inc
imul
push
sub
push
hlt
in
sub
in
xor
nop
add
cli
outsb
cs
in
int3
and
xchg
xor
dec
pop
enter
xchg
lahf
mov
mov
shl
add
sahf
adcl
out
leave
cltd
dec
outsl
stos
scas
ja
push
and
loopne
sbb
mov
and
cmp
test
in
test
fdivrl
into
mov
push
adc
test
or
in
inc
stc
push
cmp
and
loope
xor
or
xchg
stos
pop
ficoml
mov
hlt
sbb
inc
out
sub
sbb
clc
in
gs
jnp
inc
nop
leave
mov
pop
test
inc
aas
mov
mov
inc
loope
sub
mov
pop
cld
int
negb
popa
jp
in
subb
cmp
out
inc
dec
setno
jo
cmpsb
push
dec
movsb
cmp
xor
ja
lods
rorl
add
add
fcos
daa
hlt
test
aam
dec
stc
xchg
sub
cwtl
adc
lock
mov
in
add
popa
sbb
je
mov
scas
loopne
mov
pop
int3
mov
cltd
pop
xor
pusha
cmc
xchg
pop
sti
pop
test
fnstcw
out
test
subl
enter
pop
add
jl
fs
add
movsl
mulb
xchg
movsl
lods
adc
jno
enter
sub
into
movl
mov
scas
es
xor
cmp
scas
inc
scas
inc
cmp
filds
pop
pop
mov
test
mov
xchg
jp
addr16
or
cltd
sub
mov
pop
inc
cli
mov
fucom
dec
push
push
pop
fsubrs
mov
dec
mov
ficompl
push
lret
push
lcall
fld
ds
jle
fimull
jne
cs
fimuls
mov
mov
add
popf
pop
mov
sbb
cmpsl
mov
ljmp
out
mov
xor
add
cmpsl
jp
inc
jns
mov
cmp
push
xchg
movsb
fiaddl
scas
push
jo
shrl
xor
into
jns
pop
dec
mov
movsl
mov
adc
aam
pop
cmp
pop
sub
xor
inc
push
out
lock
outsb
std
push
test
popa
cltd
sbb
std
ja
lods
insb
ficompl
daa
imul
push
pop
test
inc
pop
rolb
les
push
ja
adc
imul
mull
icebp
hlt
std
sub
add
xor
add
movsb
fdivs
scas
push
mov
ja
mov
cs
aad
int
push
loop
scas
jecxz
mov
icebp
sbb
push
in
ds
mov
aas
outsl
xor
jl
pop
cltd
cmp
dec
mov
mov
outsb
add
xchg
pop
sbb
in
push
push
xor
notb
inc
repnz
sub
notb
ret
jmp
enter
out
test
mov
mov
mov
dec
xchg
mov
mov
int
es
cmpsl
mov
mov
push
or
and
mov
add
sub
arpl
lods
and
out
inc
mov
cmp
jbe
pop
mov
pop
loope
jno
push
int3
cmc
jecxz
jp
in
pop
or
popa
adc
or
mov
dec
sub
sub
mov
push
xchg
xlat
mov
cltd
bound
sbb
xor
dec
icebp
mov
xor
mov
popf
in
add
outsl
xchg
jns
add
stos
xor
les
pop
dec
mov
sub
inc
push
int3
mov
fidivl
outsb
mov
sahf
mov
jo
mov
mov
in
and
xchg
jbe
jae
or
sub
int
popa
popa
shrb
cmp
push
insb
inc
ret
pop
xor
xchg
adc
icebp
xchg
lcall
add
bound
popf
mov
sbb
pushf
mov
mov
cmp
out
popl
sub
lcall
mov
fcoms
fwait
clc
cmp
pop
stos
adc
cmp
imul
jnp
push
out
sbb
mov
popf
sbb
ds
jbe
inc
and
sti
adc
jecxz
testb
pop
mov
mov
fsubrs
das
inc
xor
int
xchg
pop
ljmp
test
mov
mov
push
cmpsb
add
int3
bound
je
fidivrl
scas
dec
pop
pop
cmp
test
notb
dec
roll
cmp
jnp
jg
add
rolb
sahf
push
ret
test
nop
sub
push
gs
int
or
into
jae
in
addr16
mov
int
add
scas
in
adcl
mov
cmp
dec
push
pop
push
sub
mov
into
push
mov
stc
popf
xchg
sub
inc
sti
sub
mov
dec
mov
iret
xchg
test
sub
jmp
nop
hlt
scas
pop
inc
push
test
jp
xchg
pop
aas
sbb
ja
sub
xor
setb
xchg
dec
jl
fwait
push
test
mov
bound
stos
inc
push
xchg
mov
rcrb
xchg
add
sbb
fsubl
lcall
stc
ror
movsb
pop
bound
shll
jns
das
pop
int
jmp
xor
xchg
lea
push
xchg
xor
mov
out
sti
addr16
jb
shll
ds
dec
mov
xchg
and
cmp
mov
push
pop
scas
outsl
out
mov
movsb
dec
pop
fwait
int
sahf
and
scas
push
inc
push
or
xchg
dec
test
ret
js
xlat
fcoms
push
adc
subb
gs
cwtl
call
and
xor
sub
pushf
loopne
or
scas
adc
aam
stos
pop
jge
mov
xchg
or
loope
nop
push
imull
add
push
mov
stc
fildl
sbb
je
add
xor
jle
sti
push
leave
movsb
cmpsl
and
into
mov
or
sahf
fcomi
or
and
and
jb
jb
and
xchg
jno
jle
mov
push
add
inc
jp
mov
ljmp
lahf
inc
inc
popa
dec
and
sahf
outsl
lahf
out
adc
inc
sbb
in
and
fcmovb
std
xchg
testb
in
jmp
daa
push
jb
movsb
xchg
pop
cmp
mov
mov
orl
pop
push
aam
push
add
jno
in
and
test
ret
out
jns
push
js
mov
sti
std
lret
sbb
inc
xor
pop
cmp
f2xm1
mov
inc
in
icebp
shrb
push
hlt
and
les
ja
cs
and
add
ficoms
mov
leave
cmpsl
xor
or
sbb
outsl
cmp
xor
out
jge
mov
mov
jge
inc
fnstcw
cmc
mov
sbb
and
repnz
mov
add
clc
inc
push
leave
in
xor
adc
push
mov
dec
mov
fsubl
fs
ljmp
insl
adc
cmp
sti
test
clc
pop
shrb
mov
pop
pop
inc
pop
and
clc
and
cli
push
js
mov
jecxz
stos
push
pop
sbb
jecxz
push
in
mov
mov
and
cltd
mov
pusha
in
dec
lea
xchg
mov
dec
xor
dec
xor
jb
mov
and
fildl
in
shlb
scas
lock
cs
ret
pop
adc
xchg
setbe
push
add
dec
lods
mov
outsb
sbb
jo
sub
xchg
lahf
mov
in
or
pop
add
scas
dec
xor
add
mov
jp
mov
mov
xchg
cmp
sarl
jmp
fisubrs
call
inc
cmpsl
in
popa
test
and
hlt
loopne
inc
jo
push
cmp
fsubrs
dec
pop
add
es
mov
insl
pop
jge
dec
mov
pop
aas
call
lods
sub
mov
xchg
out
pusha
push
or
dec
enter
cmp
push
mov
push
shlb
out
mov
ljmp
fmuls
ljmp
cmc
sbb
shll
jbe
fisubrl
cmp
xor
mov
aad
je
fsubl
mov
scas
xchg
pusha
popa
stc
sbb
jne
aaa
or
or
push
mov
jmp
cs
jo
dec
dec
fcom
stos
icebp
das
adcl
push
addr16
mov
sbb
inc
addb
movsl
jl
fs
sub
lds
loop
lds
inc
mov
push
hlt
out
inc
out
sbb
divl
xchg
popa
dec
mov
xor
push
jne
or
ret
ret
mov
xor
pop
in
jo
fwait
jp
cmp
mov
cltd
sbb
mov
mov
cli
scas
pusha
dec
xor
enter
cli
pop
mov
mov
aaa
add
adc
jl
insb
nop
int
inc
imul
sti
ss
lahf
add
rclb
jl
mov
push
xlat
inc
cmpsl
mov
out
sub
xchg
popf
mov
imul
or
jno
cmc
into
add
jne
das
addr16
jge,pn
mov
popa
mov
xlat
sub
sbb
femms
push
mov
sub
cmp
ret
push
pop
cli
scas
dec
rorl
addb
mov
add
mov
popa
mov
sarb
sub
in
sub
sti
jecxz
xlat
mov
adc
stos
fadds
cltd
in
push
push
icebp
lret
dec
out
aad
sub
mov
outsl
xchg
push
movsb
dec
mov
jne
mov
icebp
xchg
leave
add
or
and
mov
sbbl
sub
clc
mov
shlb
push
inc
jmp
mov
into
loopne
movsb
imul
mov
cmp
push
aad
mov
xlat
fwait
mov
movsl
addr16
pusha
mov
jp
mov
mov
add
cmpsb
sub
mov
xor
aad
sbb
sub
mov
cltd
popa
imul
jae
outsb
dec
pop
or
jl
push
dec
mov
and
aad
pop
into
sarb
out
mov
sub
aas
pop
lods
ret
mov
mov
pushf
daa
shll
out
filds
mov
sbb
pop
push
xchg
push
or
cs
out
mov
xor
lahf
loope
bound
rclb
jo
mov
rol
pop
jne
test
mov
fisubs
imul
jmp
push
cmp
dec
ja
aad
out
cli
rcrl
lods
ret
ljmp
je
jnp
test
addl
jnp
and
mov
mov
adc
loope
cmpsl
aad
sub
adcl
scas
mov
into
mov
push
lea
lock
stos
int3
in
dec
pop
mov
repnz
aad
clc
pop
sbb
pushf
outsb
mov
and
and
sub
adc
divl
xchg
jmp
mov
data16
pop
ficompl
xlat
add
ljmp
and
scas
ret
sahf
test
cmp
xchg
sub
push
scas
inc
loop
mov
mov
fsubrs
jae
jecxz
cmp
stc
repnz
out
mov
fcmovu
int
aad
jno
jns
pop
in
fidivrs
negl
sub
test
leave
test
and
jmp
pop
xchg
xor
jns
xor
push
jae
cmp
hlt
and
jp
ljmp
mov
and
in
cwtl
dec
cmpb
icebp
nop
aaa
jbe
xchg
cmpsl
iret
fcmovnb
push
test
dec
loopne
jns
push
out
xchg
adc
lea
imul
push
flds
in
scas
lcall
cs
xor
outsb
mov
sbb
vmread
mov
in
cmpsl
out
test
push
ret
jmp
out
push
scas
xchg
cmovge
pusha
sbb
insb
pmullw
push
pop
xchg
fiadds
gs
mov
gs
xor
fs
iret
adc
bound
sbb
push
ljmp
jmp
and
dec
imul
daa
in
xor
dec
xchg
data16
xor
mov
jge
sub
test
push
test
jg
xchg
shrl
inc
or
sarl
loop
mov
popf
cs
pop
mov
pop
cmp
daa
test
out
pop
aaa
or
xor
fdivrs
or
stos
stc
out
push
sbb
roll
jmp
dec
leave
repnz
pushf
jg
or
int
inc
cmp
mov
lds
pop
pop
lods
stos
push
sahf
pop
dec
jge
xchg
mov
fsubs
test
mov
or
xor
dec
mov
sub
lods
or
call
or
mov
or
add
mov
rorb
rorb
xor
pop
fldl
mov
je
jo
pop
xchg
xchg
daa
cmp
addl
decb
lock
mov
fidivrs
mov
sub
xor
sub
xor
mov
push
cvtps2pd
sbb
movsb
scas
outsl
jb
jne
mov
pop
sub
pusha
test
sub
adc
movsb
jmp
lods
fwait
mov
xchg
dec
push
js
xor
mov
cmp
shlb
dec
xor
cmp
xlat
dec
insb
mov
stos
xor
cli
lods
xchg
rorb
xchg
int
in
mov
pop
push
shld
mov
sar
imul
pop
mov
mov
xchg
jle
fimuls
push
push
ficoml
ja
add
mov
adc
ds
movsb
and
out
mov
pushf
xchg
add
das
ret
mov
add
loope
jmp
ljmp
imul
hlt
xchg
dec
and
or
imul
into
and
fidivl
xchg
addr16
inc
mov
inc
sti
push
inc
push
inc
jnp
out
push
scas
push
bound
lods
sub
sahf
adc
xor
js
test
in
imul
pop
adcb
aad
mov
arpl
js
dec
cmpsl
loopne
jecxz
int
dec
jg
aam
mov
ja
push
pop
xchg
adc
cmpsl
fnstsw
push
add
or
call
sbbl
sub
sbbl
push
xchg
mov
inc
dec
mov
sub
or
sub
lea
xor
push
jbe
jne
sub
add
adc
pop
rol
out
inc
imul
movsl
les
pop
mov
cmp
xchg
addl
jp
adc
push
push
insb
inc
addr16
and
cmp
xorl
adc
ds
xor
popa
mov
into
ja
shll
jmp
filds
inc
fnsave
pop
stc
jne
loop
dec
out
fildll
stc
iret
push
lcall
inc
in
mov
push
push
cmp
test
popa
addr16
loope
pop
aad
sbb
bnd
lret
mov
jns
lea
aam
sub
repnz
or
mov
xorb
jmp
sub
ret
addb
sti
or
jge
mov
jno
out
add
cs
xor
lret
adc
xor
test
pop
push
sbb
mov
pop
imul
in
sub
cmp
movsl
imul
les
pusha
sub
fwait
lahf
push
stos
das
dec
addr16
push
push
sbb
adc
out
or
and
sbb
and
or
mov
outsb
js,pt
jp
push
mov
pushf
and
adc
sbb
push
and
mov
orb
or
mov
insb
fcomps
jo
mov
mov
xchg
in
jbe
aam
mov
add
enter
fiadds
imul
mov
inc
insl
aas
ret
ljmp
rorb
xchg
jns
stos
addr16
or
in
mov
aam
or
inc
callw
xchg
lcall
adc
dec
jno
dec
cmc
leave
ret
mov
or
pop
xor
scas
push
jecxz
cs
pop
xchg
lcall
cmp
in
inc
int
push
mov
popa
scas
adc
scas
jae
inc
inc
cwtl
xchg
cmpsl
mov
fistpl
or
inc
jmp
loop
jecxz
fildl
xor
mov
mov
int3
bound
mov
mov
push
jecxz
cmp
out
pushl
xor
imul
cmp
shr
into
cmp
int3
pop
dec
push
insb
jne
cmp
test
push
and
mov
lea
or
dec
popf
insb
iret
nop
outsb
incl
fbld
cmc
repz
add
pop
sub
lret
into
or
dec
loopne
loopne
ret
adc
push
mov
push
ss
dec
bound
icebp
fmuls
clc
aam
dec
inc
arpl
push
ds
sarb
xor
lcall
mov
sbb
pop
or
jo
sub
or
in
pop
repz
xchg
inc
push
mov
xchg
or
aam
mov
xchg
icebp
lret
jno
iret
outsl
inc
dec
sub
ret
lods
cmpsb
sahf
jno
frstor
jne
fdivrl
and
jbe
dec
repz
stos
pop
xor
out
cmc
sub
and
aas
xchg
mov
sub
or
shll
fwait
inc
inc
pop
sbb
gs
mov
test
cld
push
push
mov
xchg
dec
js
popf
dec
xchg
inc
imul
pop
sbb
sbbl
aam
outsb
xor
sub
and
mov
and
aad
ss
xor
xchg
sub
xor
mov
fistpl
popf
sbb
pop
pop
lods
jg
rcrl
mov
xor
aad
fiaddl
mov
cltd
mov
jno
jle
adc
fs
pop
arpl
fwait
das
lret
pop
shrl
cmp
sub
sub
fsubl
lea
fcmove
pop
dec
push
lods
mov
popf
leave
xor
popf
or
leave
dec
leave
ljmp
jp
stc
ret
sbb
mov
in
jns
outsl
jae
xchg
inc
adc
out
mov
shl
out
cmp
ds
pop
pushf
adc
lcall
mov
cmp
push
xchg
sub
xor
sub
popf
push
inc
popf
imul
mov
pop
mov
movsb
mov
popa
jecxz
movsl
mov
pop
cld
fwait
add
shl
movsl
rcl
subl
shlb
mov
insb
ss
lahf
adc
mov
ret
mov
push
mov
daa
mov
iret
pop
cmpsl
lret
push
add
cwtl
add
xor
jle
or
pushw
dec
rcrl
aam
test
jae
inc
dec
cmc
imull
dec
jnp
aad
or
push
push
lods
je
mov
push
dec
sbb
sub
push
cmp
aaa
ret
add
fcompl
loope
js
mov
mov
xor
lcall
push
rcll
shll
pop
pop
je
pop
hlt
test
andl
sub
mov
inc
stc
or
adc
jno
sub
rorb
cmp
adc
mov
adc
das
repz
pop
outsl
add
mov
push
bound
or
fldl
cld
imul
pop
mov
gs
hlt
sub
push
idiv
inc
sub
mov
dec
lcall
shlb
sti
jb
dec
mov
mov
mov
iret
aam
sbb
fwait
lds
mov
jge
adc
out
popf
dec
leave
pop
pop
push
in
mov
mov
outsl
sbb
mov
loope
pop
pushf
cmp
shll
add
enter
dec
jae
xor
cld
pop
jg
jmp
push
add
daa
pop
pop
push
iret
lcall
xchg
movsl
shl
adc
outsl
fldcw
cli
xchg
xor
mov
fs
ljmp
push
jmp
cli
xchg
mov
repz
ds
rep
sub
jmp
mov
mov
or
adc
inc
dec
and
jg
imul
add
stc
fldl
push
in
dec
shrl
mov
push
push
cmp
cmpsl
addr16
pop
mov
xlat
sar
fwait
imul
pop
sahf
ja
and
inc
lcall
insl
add
and
xor
and
sub
out
and
pop
sub
out
call
or
testb
adc
sub
aaa
clc
pop
ja
mov
jg
mov
addr16
jo
sub
dec
and
mov
repnz
push
pop
fwait
adc
andl
add
stos
add
mov
fiaddl
popa
mov
outsl
push
inc
adc
push
pushf
mov
sti
fadds
rclb
stc
sbb
cmp
jecxz
shrl
fmull
xor
imul
scas
loope
ja
lcall
div
or
push
and
popf
aaa
je
mov
dec
add
pop
outsb
decb
adc
mov
repnz
jno
jb
mov
int
xchg
sbb
adc
mov
cltd
aas
lcall
mov
pand
pop
scas
ficomps
dec
nop
mov
dec
ret
add
mov
hlt
test
mov
inc
jo
stc
arpl
hlt
insl
mov
hlt
inc
icebp
lock
xor
out
inc
add
dec
stos
es
loope
divl
adc
stos
cld
push
or
mov
pop
mov
xorb
addr16
sbbl
into
sbbb
fcoms
jne,pt
sbb
repz
rcrl
push
mov
aaa
sub
xor
sub
test
je
push
ja
sbb
jmp
cld
mov
das
sbb
popf
ret
in
ss
xor
cltd
cwtl
xor
call
sub
mov
lcall
push
js
sbb
sub
je
pop
cwtl
jge
mov
cld
loopne
add
into
jbe
not
mov
mov
xchg
inc
xor
xor
or
cmp
xor
mov
bound
mov
xchg
mov
shl
in
mov
dec
repnz
mov
dec
pop
pop
pop
fsts
shrl
imul
pop
mov
jnp
xchg
and
rolb
pop
push
shrb
je
pop
lock
pop
cmp
scas
dec
inc
add
movsb
push
out
outsl
xchg
ja
fisttpll
loopne
sbb
std
aad
int3
dec
xor
lcall
push
mov
jp
jl
cmpsb
xchg
popa
popa
shl
add
xor
mov
inc
imul
pop
imul
js
or
or
and
inc
mov
push
repnz
or
inc
mov
mov
mov
rcrl
mov
add
inc
cmp
cmp
ja
aad
aas
rol
loope
in
out
mov
sarl
fisubs
dec
xchg
aas
jns
inc
mov
and
mov
sbb
push
xor
rclb
test
repz
shl
sbb
pusha
call
in
aas
or
xchg
rorb
mov
add
lcall
dec
cld
inc
fstp
push
xchg
jmp
sbb
sub
mov
pop
std
loopne
das
adc
add
adc
push
pop
cltd
push
les
jo
xchg
cmp
and
push
sbb
test
ficomps
lods
outsb
call
or
enter
mov
sbb
stos
fstl
fiadds
stc
jp
adc
jg
call
test
out
xor
cmpsb
mov
movsl
mov
ja
jl
out
add
aam
inc
sbb
in
jae
cmpb
jne
addr16
inc
dec
lea
mov
out
xchg
mov
stc
sti
xchg
ja
cmpsl
insl
inc
fs
outsb
or
mov
sbb
pop
mov
add
rolb
xchg
mov
lcall
pop
inc
in
sub
lock
xchg
jae
mov
lock
aad
in
int
mov
cltd
and
dec
loopne
add
fld
aad
leave
ret
stc
sarb
pop
xor
jne
aam
mov
out
jno
cmp
stos
mov
subl
rcl
or
inc
xor
jno
std
push
or
cmc
je
push
lods
and
push
fistl
jl
dec
dec
testl
movb
xor
or
pop
imul
out
push
mov
push
and
repz
scas
mov
por
and
mov
les
push
push
and
adc
jp
inc
and
in
jmp
mov
xor
int
leave
mov
testl
add
fdivs
lcall
cmp
dec
cmpsl
in
aad
push
leave
inc
adc
sbb
xchg
mov
push
loop
dec
jbe
xor
test
sub
pop
jne
movsb
add
mov
roll
sarb
loopne
insl
mov
mov
push
add
pop
cmpsb
cmp
ds
test
pop
mov
or
jmp
subl
xor
ja
std
enter
or
mov
xchg
test
push
cmp
dec
and
je
ss
adc
cmovae
sbb
and
cmpsl
sub
xchg
xor
ds
xlat
pusha
loope
pop
sub
inc
sbb
repnz
out
mov
lea
cmp
roll
loop
lcall
test
test
add
mov
inc
jl
sub
and
rorl
mov
pop
sub
jbe
lock
cli
out
js
push
test
xchg
and
stos
jae
lea
enter
and
pop
or
and
and
aad
adc
inc
out
jg
cld
jle
cmpb
cmpsl
pushf
fwait
sub
cmp
popf
mov
mov
and
outsb
mov
stos
ret
in
stc
xchg
mov
mov
xchg
stos
jno
lret
cmp
in
ret
push
out
mov
pop
mov
sbb
push
roll
xchg
xchg
sbb
std
mov
jp
mov
push
mov
iret
mov
aaa
cmp
shrl
in
pop
xchg
push
fsubs
sub
xchg
sti
push
inc
jmp
fsubs
lret
mov
sub
movsl
adc
mov
std
insb
pop
icebp
fimull
mov
lods
xchg
inc
sub
sbb
imul
sti
jns
jno
xchg
shrl
adc
pop
and
mov
adc
pop
hlt
pop
jne
jge
pop
xchg
push
mov
add
stc
ss
rcrl
clc
sub
sub
lret
mov
dec
sub
loop
push
enter
cmovae
mov
pop
rcrl
das
test
enter
mov
jae
push
andl
dec
xor
je
mov
lret
dec
mov
js
push
ljmp
push
popa
sub
xchg
xchg
xchg
sahf
add
mov
nopl
add
mov
scas
cmpl
cli
cmp
pop
mov
jnp
xchg
xor
add
mov
cmpsl
sbb
lods
inc
mov
mov
sbb
or
push
mov
mov
push
int3
enter
addr16
or
cld
idivb
or
mov
sub
mov
out
mov
js
mov
jl
js
mov
dec
fucomip
xlat
test
ficoms
leave
mov
cmpb
push
dec
adc
lret
fwait
in
jb
dec
dec
dec
movsb
push
es
xor
jns
out
orb
jg
sti
pop
rorb
inc
adc
mov
or
loope
mov
scas
mov
jmp
lods
and
dec
cld
mov
loop
scas
jnp
cmp
fisubl
mov
enter
cmp
adc
cmp
jae
cmpsb
hlt
nop
or
lcall
mov
sbb
lret
or
jne
out
test
mov
add
mov
rorl
pop
ret
sti
push
add
ror
xor
ret
and
push
xlat
and
outsb
or
ret
and
sbb
or
cmc
lock
inc
movsl
cmp
cltd
push
sub
cmp
mov
scas
fdivl
gs
adc
push
stc
sub
xor
rorl
fs
out
leave
stos
xor
loop
push
mov
push
pop
movsb
xchg
shlb
cmp
in
cs
decl
xchg
lret
push
inc
lahf
add
and
mov
push
jbe
push
xchg
adc
je
sahf
sbb
add
mov
cld
in
sbb
cmp
push
jge
leave
sahf
pop
out
jo
mov
sub
jge
addl
pop
adcb
in
xor
lret
add
and
xlat
pop
sbb
test
sub
fsts
sahf
xor
imul
xor
cmp
lds
adc
scas
rorl
cmc
sub
sub
enter
xor
scas
lock
sar
dec
or
or
cli
and
or
mov
mov
push
ret
push
mov
xor
leave
pop
filds
xchg
insb
aas
cmp
pop
cmpsb
leave
add
out
outsb
out
out
pop
jl
imul
jb
mov
xchg
xchg
in
jno
mov
aas
int
fimull
ret
cmpb
cmpsl
rorl
mov
out
xchg
and
icebp
inc
dec
ret
jp
mov
daa
mov
adc
pop
or
pop
mov
lret
andb
out
cld
or
jle
sub
adc
push
imulb
outsb
mov
inc
push
and
movsl
dec
dec
ss
aad
popa
or
mov
jb
jmp
jle
out
push
mov
pop
sub
ret
mov
aaa
pop
pop
inc
push
dec
ja
or
or
sub
aaa
jmp
dec
sbb
nop
inc
or
mov
pusha
jbe
adc
movups
mov
pop
icebp
push
jnp
or
or
mov
rol
lods
push
add
cmp
sub
add
scas
and
mov
aas
sub
dec
aad
cwtl
xor
cmpsl
pop
rdtsc
das
aas
jne
icebp
test
je
sbbl
xchg
lds
flds
inc
andl
mov
lock
mov
bound
mov
mov
or
testl
mov
movsb
xchg
shl
push
push
pop
pusha
mov
in
mov
sub
jb
sbb
movl
cmp
scas
xchg
push
xchg
sub
addr16
jmp
inc
stc
movsb
notl
imul
fistpl
sbb
or
sti
sti
sub
out
push
mov
mov
jns
popa
mov
xor
nop
inc
mov
and
insb
call
inc
loop
and
dec
hlt
push
or
or
in
test
ss
movb
test
lds
enter
gs
in
mov
jg
inc
mov
or
push
mov
addr16
push
ret
xchg
mov
lret
mov
js
jle
xor
cld
and
dec
pop
mov
dec
ss
push
pop
xchg
imul
add
sub
out
xchg
divb
das
mov
fistps
lods
jne
dec
push
or
inc
pop
movl
push
add
xchg
or
jg
jp
scas
cmpsl
and
data16
cmpsb
push
lods
cwtl
aam
scas
ret
mov
push
addr16
nop
and
popf
insb
push
insl
test
and
ds
jbe
je
fstps
xor
repnz
mov
fisubl
imul
add
cmp
dec
dec
jge
jns
dec
pop
mov
mov
shlb
mov
ds
lret
cmpsl
push
aas
jno
cmp
sub
setge
cmp
dec
addr16
mov
out
pop
test
cmp
xchg
mov
je
aaa
data16
adc
pop
cld
rclb
jp
pop
aaa
xlat
cmp
inc
inc
jnp
sub
jmp
pop
sbb
sahf
call
jb
daa
test
mov
jp
scas
and
jle
sbb
subl
cmp
jecxz
xlat
xchg
add
xlat
inc
inc
andl
rcll
and
enter
xchg
std
ffreep
cmpsl
es
dec
push
lock
stos
xchg
push
out
push
idivb
pop
dec
in
out
or
stos
cmp
mov
fwait
sbb
aad
jns
in
scas
les
pop
adcb
ret
pop
in
mov
sahf
iret
adcb
sti
mov
fmull
pop
cmpsb
adc
out
cmp
bound
in
outsl
ljmp
sahf
stos
movsb
jb
sbb
pop
aam
adc
mov
push
insl
or
lods
fisubl
mov
mov
push
sbbb
adc
push
xlat
cmpsb
daa
push
or
cmpsl
or
sub
inc
adc
dec
adcl
mov
popa
nop
dec
adc
fs
scas
xrelease
or
xchg
dec
jne
jnp
or
jg
int3
sbb
out
mov
outsb
mov
scas
fdivs
xchg
mov
inc
jae
cmp
fnstsw
mov
dec
mov
xchg
mov
jbe
popa
pop
xorl
xchg
or
aad
or
or
pop
stos
mov
mov
shr
pop
loope
jge
shrl
or
loopne
xor
imul
pop
enter
push
cli
std
pop
push
mov
and
scas
lods
ds
test
mov
frstor
mov
or
jb
add
outsl
fwait
scas
aam
mov
jns
out
imul
pop
xor
jns
push
shr
cld
stos
das
scas
insb
leave
push
rcl
ret
jle
mov
push
test
iret
lret
stc
push
lods
std
lock
mov
jp
insb
stos
mov
lods
lahf
pop
xchg
sbb
aam
ficomps
sbb
ret
cmc
test
imul
mull
xchg
pop
mov
out
movsb
jbe
sub
dec
icebp
xchg
and
mov
xchg
mov
push
call
idivb
test
fwait
addr16
bound
in
sbb
sbb
enter
and
fildl
pop
call
pop
movsl
jo
adc
xchg
xor
pop
fsubrs
push
pop
bound
add
cltd
and
mov
int
mov
jecxz
ret
mov
jno
adc
imulb
xlat
lahf
xchg
lret
xchg
xor
dec
push
repnz
lahf
jo
jp
xor
add
test
push
gs
lahf
mov
das
dec
mov
adc
mov
jne
push
mov
sbb
and
insb
sbb
loopne
das
dec
push
push
cmp
repz
or
or
add
xchg
inc
jge
pop
daa
testl
and
ret
repnz
add
pop
mov
mov
mov
dec
stos
notl
or
jmp
dec
test
jmp
negl
sahf
push
xchg
push
pop
sbb
mov
add
sbb
inc
rcl
mov
sahf
mov
lea
or
cld
sbb
sub
sbb
xchg
out
mov
sub
jecxz
loope
int
fsubs
adc
lods
es
subb
or
pop
int
or
dec
mov
sub
inc
jecxz
cmp
adc
aam
loop
dec
cmp
mov
inc
inc
sub
push
mov
in
pop
jne
popa
orb
mov
or
jno
mov
sub
add
cmp
fisttpll
stos
sarb
nop
sub
pop
ficompl
pop
jg
mov
pop
out
push
fs
int3
leave
mov
outsl
je
scas
shlb
std
fstpl
ret
mov
mov
inc
fs
cwtl
daa
scas
aam
pop
sub
inc
adc
lea
sarb
pusha
or
repnz
mov
into
and
cmpsb
lcall
arpl
imul
popa
lock
pushl
lods
push
int
pop
int
mov
xor
lcall
pop
and
mov
loope
dec
xchg
jnp
cltd
addl
cli
mov
je
xchg
stos
aad
lods
mov
add
or
dec
xchg
xor
xchg
mov
mov
in
cmp
hlt
clc
dec
and
push
int
scas
adc
mov
adc
xor
jl
adc
mov
xor
lods
pop
movsb
and
sbbb
dec
sbb
out
lds
fidivl
sub
mov
lods
or
sub
movsb
js
ljmp
loope
and
inc
sub
xor
lahf
dec
xchg
sbb
cmp
divl
loope
inc
fwait
push
scas
mov
inc
xchg
jnp
and
test
add
dec
test
out
cmpsb
aam
mov
dec
stos
test
mov
sub
imull
in
push
bound
jmp
add
xchg
xchg
lret
pop
push
jns
loopne
cmp
aaa
lods
idiv
sub
filds
sbb
mov
dec
jbe
movsb
clc
push
ret
xchg
adc
xor
fwait
and
add
and
mov
cmpsl
inc
dec
fstl
or
xchg
mov
ret
and
arpl
sub
lds
aad
movsb
test
insb
push
das
or
iret
ja
xchg
jmp
cmp
mov
pop
inc
dec
jbe
add
jp
mov
lock
inc
jno,pn
in
pop
xchg
js
aas
lock
sbb
pushf
ds
sbb
test
in
lods
pop
and
adc
lret
xor
bound
cmc
pop
nop
jne
test
cwtl
cmp
data16
rcrb
jns
pop
and
hlt
fwait
js
lock
mov
sub
gs
xchg
out
inc
imul
jmp
mov
in
enter
shll
cmc
and
pop
mov
push
cmpb
aas
xchg
inc
sub
jmp
add
push
add
or
jl
call
sub
sub
cld
pop
test
cmp
movsb
mov
jne
pop
and
in
sbb
fs
rol
mov
cmpsl
dec
mov
xchg
jl
xor
mov
xchg
movsb
out
xchg
jno
dec
xchg
cmp
hlt
dec
fwait
jnp
adc
jge
jle
inc
inc
adc
inc
popf
dec
cltd
push
cwtl
popf
jl
sub
jne
cs
nop
cmpsl
dec
jp
test
nop
shl
xchg
xchg
push
popa
jp
push
push
push
and
and
mov
cmp
outsl
pushf
roll
jmp
pop
and
outsl
sbb
mov
icebp
outsb
jae
fstl
pushf
mov
jl
jp
or
cmc
jno
movsl
ftst
jl
into
jnp
popa
sbb
jg
adc
xor
xorb
inc
inc
insb
sub
test
dec
jb
mov
xor
loop
fnstsw
mov
cmp
dec
loopne
jp
adc
add
outsb
nop
xor
dec
nop
push
xchg
sahf
into
cmc
mov
aas
add
or
mov
xor
push
sbb
stos
insb
incb
nop
mov
xchg
aam
push
andb
aaa
cli
pop
mov
outsl
js
es
push
shlb
or
or
push
je
cmp
dec
jno
ds
dec
insb
or
aaa
fisttpll
clc
and
pop
push
mov
stc
jle
pop
and
stc
insb
movsl
and
and
sub
push
lcall
je
inc
or
xor
mov
movsb
pop
cmp
xchg
sbb
test
out
add
std
push
iret
pop
mov
cli
dec
rcl
sbb
sub
in
inc
imul
jno
pushf
jne
adc
addr16
xor
test
mov
movsl
cmp
jne
and
push
mov
movsl
aas
std
jp
pop
dec
mov
inc
xchg
out
jbe
bound
dec
and
es
aam
movsl
fiaddl
xor
jno
outsl
inc
cmp
dec
jns
ljmp
lret
int3
xchg
int3
or
fcoms
and
xchg
test
es
and
rcll
ss
cmpsb
aas
gs
neg
cmp
push
and
hlt
cmp
push
mov
adc
mov
fmuls
adc
loop
push
loop
cmpsb
mov
scas
stc
insb
and
mov
add
adc
pop
scas
push
or
mov
lds
sbb
pop
cmp
repz
ja
ret
pop
jns
xchg
push
mov
jb
andps
fwait
aas
mov
xchg
sub
js
mov
in
cmp
in
push
cmpsb
cmp
mov
aas
data16
fisttpl
out
ljmp
inc
mov
mov
leave
sbb
pushf
aad
mov
clc
ficoml
lds
mov
stos
sub
pop
daa
into
loope
dec
jne
push
mov
inc
push
int3
pop
ret
cltd
stos
pop
bound
xor
leave
cli
mov
insb
popl
lods
int
pop
sahf
unpcklps
jb
xchg
jbe
imul
mov
mov
xchg
pop
xchg
test
cmp
sub
pop
pusha
mov
lret
adc
stc
arpl
mov
adc
dec
fcmove
pop
add
push
sbb
mov
repnz
sbb
adc
into
scas
in
mov
xchg
push
out
shlb
std
daa
js
inc
adc
add
imul
or
fiaddl
lcall
cs
add
mov
outsl
mov
cmpsb
dec
xchg
jge
mov
xor
ror
cmp
fisubl
xor
inc
xchg
xchg
lods
or
inc
repz
es
hlt
mov
push
or
popl
rcll
cmpsl
sbb
pop
push
mov
pusha
mov
cmp
inc
popf
ffree
cli
in
popf
mov
inc
sub
inc
inc
sub
cmpsb
xor
hlt
mov
fcomps
pop
pusha
cmp
mov
mov
push
adc
mov
and
dec
pop
loopne
gs
dec
xlat
adc
rclb
repz
jg
lret
stos
hlt
iret
out
sbb
jg
pop
loope
inc
hlt
je
xchg
insl
les
hlt
push
pop
fcmovne
outsb
mov
jb
lcall
popf
stos
into
fistpl
int
push
notl
dec
sub
aas
dec
jg
popa
cmp
les
xorl
or
cmp
ja
xchg
es
in
mov
xchg
ss
gs
push
add
scas
push
fwait
mov
addb
rolb
jb
mov
aas
cmpb
add
xchg
arpl
leave
mov
dec
mov
inc
icebp
fimuls
ja
xorl
clc
orl
shr
push
stos
mov
les
pop
sbb
jmp
cmpsb
sub
mov
mov
jbe
xor
sti
pop
pop
imul
mov
es
ret
jbe
xchg
dec
inc
add
jp
dec
inc
jecxz
notb
sub
data16
and
mov
negl
sub
pop
sti
hlt
into
push
int
pop
or
pop
push
repnz
push
xor
sahf
pop
sbb
mov
pop
addr16
lcall
xchg
sub
or
xchg
aas
jle
xchg
out
xchg
dec
cmp
or
xor
sti
jecxz
jecxz
dec
fs
daa
or
jae
aas
fs
xor
negl
and
mov
push
inc
bound
xor
jp
mov
sbb
inc
pop
ret
clc
jge
ja
fwait
mov
cmp
arpl
jle
fmull
mov
adc
jno
mov
cli
push
sbb
test
dec
xor
loope
cltd
outsl
lret
xchg
cmp
xchg
adcb
mov
sub
jmp
loop
leave
pop
outsl
push
ret
imul
shll
mov
push
xor
mov
mov
xchg
insl
out
bound
jmp
int3
hlt
dec
addr16
outsl
mov
adc
xchg
movsl
cmpsb
std
lcall
fnstsw
push
mov
sbb
inc
insb
movsl
cs
punpcklwd
push
adc
stos
lahf
jne
jle
sbb
jns
push
cmp
pop
inc
xor
mov
rcr
loope
add
mov
repz
stos
les
das
mov
xor
and
push
mov
or
icebp
xchg
out
test
sub
adcl
aam
xchg
out
das
mov
aam
inc
adc
mov
inc
adc
push
movsl
mov
jp
and
sbb
add
in
cmpsl
push
xor
xchg
xchg
push
cmp
pop
outsl
in
loop
xchg
inc
xor
iret
shrb
mov
push
mov
pop
in
inc
cmp
or
mov
add
lcall
loope
mov
pop
sbb
mov
adc
std
gs
fisttpl
imul
xor
stos
pop
jo
xor
or
lret
in
or
sbbl
popa
gs
mov
jno
das
outsb
lock
stos
mov
std
push
inc
arpl
push
add
push
inc
es
sub
test
mov
xchg
pop
ja
jo
pop
aaa
mov
jecxz
cmpsl
dec
inc
or
dec
ret
les
jg
std
mov
pop
or
lcall
xor
sbb
pop
adc
ljmp
or
inc
cmpsl
imul
bound
mov
aas
adc
sbb
mov
stos
test
pushf
pop
stos
in
xchg
push
pop
mov
test
xor
sub
push
jge
cmp
aaa
jge
in
mov
das
call
or
int
jne
push
ftst
ret
add
sub
movsl
test
mov
loope
pop
fwait
loop
ds
imul
outsb
test
or
ss
pop
push
fcomip
in
jmp
adc
push
mov
popf
shll
jae
sbb
sub
std
cmp
mov
test
sub
mov
pop
cwtl
pop
adcb
push
mov
stc
jno
pop
xchg
or
add
adc
outsb
inc
ret
outsl
xor
cmpsl
stc
inc
ret
addl
and
movsl
pop
adc
lock
outsb
mov
int3
jmp
push
mov
arpl
les
fs
or
jo
lcall
ja
jl
adc
lahf
iret
sbb
inc
mov
pop
sbb
xchg
sub
fs
stos
mov
xor
fstpt
cltd
outsl
mov
ljmp
push
pop
mov
push
push
stos
int3
push
int
jno
jg
sub
add
lods
push
out
xor
hlt
adc
pop
push
rcrb
lea
ret
mov
pop
lret
das
lcall
pop
sub
pop
or
arpl
xor
loopne
lcall
jmp
icebp
jmp
cltd
loop
cmp
pushl
leave
sub
sub
jp
add
arpl
lock
lretw
jnp
or
shlb
xchg
lock
adcl
add
movsb
stos
sbb
sarb
cmpb
mov
mov
add
je
sub
fmul
cmp
pop
stos
xor
andl
xor
cmp
fs
not
jp
pop
ja
rcl
inc
sub
xchg
or
adc
setp
out
mov
sarb
cld
jae
bnd
mov
dec
in
push
inc
add
or
mov
cwtl
repz
or
push
cmpsl
adc
test
or
les
cmp
cmpsl
dec
mov
scas
stos
push
mov
arpl
stos
ret
xchg
inc
push
push
push
testl
push
jno
mov
inc
aaa
pusha
mov
out
lret
adcb
daa
aas
dec
loope
push
daa
imul
in
inc
sti
orl
insl
sub
push
mov
xchg
out
data16
insb
dec
cli
mov
nop
jl
mov
sbb
gs
and
pop
xor
pop
outsb
ficomps
stc
mov
xchg
popf
mov
movsb
repz
inc
pop
sub
xor
loopne
add
or
addb
lea
jle
daa
jmp
adc
cmp
jg
xchg
or
cmovs
push
inc
pop
out
pusha
adc
mov
xchg
mov
pop
out
or
pushf
mov
stc
gs
sbb
aad
cld
xchg
loopne
out
in
notl
sub
jmp
testb
sbb
daa
xchg
dec
jle
sub
call
sbb
repnz
jnp
xchg
inc
cmp
mov
dec
mov
push
xor
xchg
xchg
lcall
push
push
in
mov
and
push
out
pop
fsubrp
cli
cld
in
push
pushf
mov
mov
sub
test
mov
hlt
mov
rcll
or
add
jp
popf
push
jle
andl
outsl
inc
loopne
inc
lret
ljmp
mov
ljmp
loopne
repz
aas
cmp
adc
shlb
nop
lret
mov
fwait
mov
pop
xchg
mov
pop
loopne
clc
dec
cmpsl
icebp
out
sti
jg
inc
sbb
push
adc
sbb
mov
fstl
xchg
jo
jae
ja
gs
xor
pop
stc
and
pop
mov
cmp
fwait
mov
imul
jae
push
fs
mov
mov
mov
shrb
lcall
sbb
fs
cmp
or
adc
cmp
dec
fmull
sbb
and
movsl
scas
jnp
jnp
push
das
stos
cltd
cmp
outsl
popf
add
push
bound
pop
icebp
loopne
cli
dec
out
xor
pop
movsb
inc
ja
and
iret
cld
mov
push
fcoms
inc
clc
aam
in
xchg
cmp
push
aaa
mov
loopne
cld
cmpsl
xchg
repnz
outsl
lea
lcall
nop
repz
jg
push
inc
fucom
lods
scas
inc
xchg
add
mov
dec
xchg
sbb
jg
fsubl
mov
loope
push
mov
test
adc
mov
or
ds
jne
data16
mov
outsl
pushl
mov
xchg
push
filds
adc
jo
mov
shlb
dec
inc
mov
ret
add
in
pusha
pushf
and
cmp
mov
pop
cmp
int3
in
fs
push
jne
aas
cmp
hlt
js
push
add
sahf
adc
xchg
push
inc
hlt
inc
or
xor
xchg
sub
push
push
cwtl
insb
popa
pop
hlt
imul
mov
cltd
mov
or
mov
pop
popf
lahf
xor
fucomp
jl
fwait
adcb
data16
adc
data16
aam
mov
out
jmp
out
cmpsl
imul
xor
popf
pop
and
push
mov
lods
jecxz
pop
scas
jnp
xor
cmp
inc
sbb
pushl
dec
xor
cwtl
xchg
inc
movsl
cli
das
cmp
aad
mov
jnp
lret
push
popf
ljmp
jmp
pushl
rorl
inc
fdivl
aaa
and
and
test
cmp
inc
cltd
cmp
sahf
add
jecxz
rolb
pop
or
cmp
int
or
pop
inc
repnz
xchg
negb
inc
repnz
mov
shl
aad
cmc
cmp
cmp
sub
xchg
cmp
out
sub
and
xchg
mov
shrb
cmp
pop
pop
imul
test
adc
jns
add
push
jmp
insl
into
mov
add
and
pop
pop
xchg
dec
dec
or
out
mov
int
add
add
roll
cli
mov
jg
dec
jp
das
hlt
push
add
fidivrl
jge
fcomps
adc
shlb
das
cmp
push
push
push
mov
std
mov
lahf
mov
ret
test
test
arpl
pop
repnz
and
cmp
jnp
js
pop
cmp
sbb
fistpl
loope
cmpl
cmp
push
cltd
lods
ret
ljmp
mov
mov
in
notb
push
int3
loopne
and
push
push
jmp
outsl
clc
and
or
inc
mov
fnsave
jne
sbb
notl
imul
cld
stos
rorl
cltd
gs
add
into
mov
outsl
push
add
enter
insl
jg
mov
lret
test
sti
lret
xchg
popa
shrb
fnstenv
loop
xchg
dec
or
ja
outsb
xchg
sub
stc
pop
cld
push
mov
lods
xor
add
notl
cmpsb
daa
mov
mov
aad
jp
fisttpl
bound
stos
add
scas
and
inc
idivl
push
inc
inc
push
adc
scas
out
jmp
mov
push
mulb
add
or
or
enter
repnz
push
cmp
jmp
jb
mov
sbb
shlb
mov
pop
repz
mov
mov
jb
push
push
enter
inc
mov
aaa
addr16
lods
jns
stc
scas
pushf
mov
sub
cltd
push
inc
pop
cmp
dec
leave
xchg
and
roll
call
je
push
sbb
bound
inc
xlat
xor
push
mov
lcall
fdivrs
fcmovnb
iret
sti
js
nop
addl
mov
dec
je
mov
xor
fidivs
fdivs
movsb
stos
jl
and
mov
pop
jmp
cmpsb
test
mov
cmp
mov
adc
mov
sbb
sub
sub
cmp
lea
push
sbb
shlb
cwtl
cwtl
icebp
pop
popa
lahf
aaa
and
add
dec
out
jne
or
hlt
and
adc
aad
jno
incl
pop
xor
cmp
int
xchg
sti
js
movsl
data16
or
lret
dec
sub
push
dec
test
sub
lds
xor
aam
rcl
jbe
mov
and
adc
test
jo
jae
jl
push
jbe
flds
mov
push
loopne
ret
loope,pn
add
ja
xor
jns
adc
stos
stos
push
out
push
xchg
popl
push
andl
cmp
daa
pop
test
repz
and
cmp
push
adc
int
pop
fbstp
shlb
add
mov
icebp
ja
inc
cltd
shrl
addr16
and
push
lret
dec
add
ja
lock
cmp
sub
movsb
daa
sti
cmpb
test
dec
cs
pop
sahf
sub
hlt
ret
pop
stos
aad
add
repz
jbe
lock
add
sarl
sub
adc
adc
inc
inc
mov
add
mov
add
idivl
pop
mov
pop
cli
mov
in
inc
adc
loope
lods
das
cmovno
shl
cwtl
xorl
subb
add
xor
nop
std
xchg
push
sub
stc
xchg
mul
xchg
addr16
xorl
inc
js
push
cwtl
xor
and
jle
push
pop
scas
icebp
pushf
roll
inc
stos
xchg
cmpsb
sbb
dec
shrl
xor
shrb
lret
es
les
and
loope
int3
je
push
or
out
sbb
js
push
or
aaa
jne
scas
imul
fwait
jmp
nop
fs
mov
jp
or
xchg
lcall
fcompl
push
adc
xchg
mov
and
in
rolb
sbb
pop
int3
mov
outsl
mov
ljmp
add
es
mov
enter
lret
push
ljmp
inc
or
in
pop
push
or
popf
cmp
xchg
sub
gs
cmp
js
sarb
inc
bound
mov
psrlw
outsl
lods
mov
lcall
jae
scas
or
dec
pushf
inc
pop
sub
call
ljmp
cmpsl
scas
test
aaa
sbb
inc
in
jmp
adc
jne
test
insl
mov
mov
xchg
inc
jo
mov
lahf
mov
mov
pop
inc
in
stc
in
popf
loope
xlat
mov
mov
lods
mov
lea
ds
aaa
mov
cmp
cld
mov
mov
cmpsb
add
push
inc
dec
jge,pt
insl
dec
jge
mov
fsts
xchg
in
mov
jge
push
inc
inc
dec
fisubrs
rcl
imul
mov
sbb
mov
ss
ja
test
or
cmp
notl
push
jo
add
ss
fsubp
aad
add
cmp
pop
std
fisubs
sub
cwtl
mov
cmp
test
test
out
adc
addr16
mov
cmp
sahf
pop
sbb
mov
cmovg
jnp
xchg
mov
gs
insb
lret
in
xor
cmp
mov
lea
push
jle
pushl
mov
sbb
pop
arpl
ja
mov
jne,pt
jne
dec
pop
add
outsb
arpl
dec
movsl
inc
gs
jo
cmc
xchg
adc
and
jmp
dec
adc
adcb
int
mov
test
push
andb
popf
ficoml
fstl
rolb
jnp
jle
std
fildl
inc
push
mov
jnp
mov
sbb
mov
push
fs
outsb
jb
cltd
aaa
adc
imul
jne
cld
call
pusha
ss
adc
jne
sub
adc
or
jg
out
mov
push
out
jge
inc
std
je
fdivrs
and
cmp
test
jmp
adc
pushf
mov
imul
sbb
mov
xchg
jg
popl
pusha
mov
cltd
movsl
imul
jo
or
or
jae
sbb
mov
jmp
in
jecxz
subb
jns
lret
mov
cmp
rcll
aaa
rcrb
sub
int3
xchg
ljmp
mov
add
jg
sbb
jns
push
lds
shlb
dec
adc
test
adc
out
dec
cmp
mov
mov
int3
mov
out
sbb
xchg
mov
call
shll
ljmp
leave
xchg
aas
pop
aaa
mov
negb
mov
jl
fsubrl
int
or
sbb
and
aaa
dec
movsl
xchg
es
popf
sbbl
sbb
rclb
pop
mov
push
push
ds
push
jl
roll
fstl
leave
inc
xchg
add
cmc
int
jecxz
ret
add
into
rcr
sbb
rcrb
jb
sbbb
stos
push
push
rorl
xchg
pop
and
push
xchg
cmp
data16
aaa
stc
and
loopne
fldl
inc
cmp
xchg
adc
mov
aas
cmp
mov
add
mov
aad
nop
ret
ljmp
cli
dec
stc
dec
sbb
push
mov
jl
add
cmp
mov
stos
add
mov
lods
in
mov
pop
adc
ret
shl
xor
cmp
jl
fs
in
inc
dec
aas
dec
adc
mov
sub
inc
xor
aam
dec
pop
adc
fsub
fstps
sbb
adc
cs
mov
mov
in
mov
jecxz,pn
scas
cmpb
jp
jns
pusha
jno
inc
sbb
mov
xchg
mov
hlt
inc
movsl
sbb
ret
out
movsb
adcb
push
test
inc
jp
adc
xor
adcl
inc
hlt
outsl
pop
ljmp
jo
jno
sbb
dec
aas
inc
mov
or
sbb
jns
inc
add
je
jmp
mov
clc
adc
push
les
sub
mov
scas
lds
inc
in
jmp
mov
fdivrl
jp
ret
push
mov
push
filds
addr16
daa
lret
and
lahf
gs
cmp
out
retw
sbb
inc
icebp
jbe
mov
inc
sub
mov
lcall
fwait
rcl
lds
es
mov
out
addr16
mov
out
out
dec
xor
insl
lods
add
sbb
xchg
or
push
cmpsb
lods
jae
add
cwtl
jl
jo
jo
add
push
loop
mov
rcrl
sbb
les
test
mov
pop
into
out
cmpsl
mov
dec
mov
push
lods
pop
inc
movsl
loopne
adc
xor
aaa
hlt
jp
cmpsl
xor
fnstcw
sub
repnz
hlt
cmp
jg
sub
arpl
xchg
arpl
nop
mov
js
push
xchg
sarb
add
mov
jbe
and
mov
js
daa
add
fnsave
mov
fldt
inc
nop
fs
int3
in
and
scas
cwtl
in
aas
jbe
pushf
stos
push
aaa
and
stc
js
repnz
sar
fisubl
call
in
xor
insb
cmp
push
push
pop
imul
jno
int
sbb
xor
mov
jne
mov
imul
pushf
nop
int3
pop
push
in
sbb
ds
fwait
imul
dec
jg
clc
mov
or
out
out
pop
push
test
fidivrs
mov
out
or
push
sbb
inc
ror
stos
fs
mov
popf
hlt
xor
jo
daa
sub
cli
push
pop
or
loop
loope
push
lds
test
inc
cmp
sbb
sbb
test
pop
pop
ret
inc
add
inc
jb
cmp
cmp
or
and
jg
lret
xor
xor
cmpsl
into
incl
lret
jns
fs
subb
bound
in
iret
adc
jb
fwait
or
icebp
push
push
pushf
mov
and
inc
js
push
incb
clc
lds
sub
xchg
fidivrs
cs
push
imul
jge
mov
mov
inc
sub
push
into
movsb
push
inc
rcr
popa
shrl
sub
out
mov
testl
mov
stos
jecxz
xor
jb
mov
push
inc
nop
bound
mov
sub
js
test
ljmp
inc
push
mov
mov
mov
insb
hlt
mov
fcomp
sbb
lods
fiaddl
jge
xchg
mov
dec
xchg
ja
icebp
shrl
loop
add
shr
dec
gs
push
jno
lock
mov
bound
inc
xchg
dec
dec
pusha
lds
xlat
ljmp
xchg
inc
xchg
fisubl
sti
aad
rcll
fwait
jg
repnz
scas
inc
sti
push
je
pop
dec
jmp
push
pusha
cmp
and
nop
dec
mov
cld
insl
cmp
insl
test
cmp
jg
cli
sbb
popf
incb
mov
inc
call
adc
imul
mov
or
sbb
mov
jno
out
aaa
dec
jo
dec
lret
lret
mov
sbb
popf
inc
adc
aas
pop
pop
mov
jp
adc
decl
fidivl
pusha
mov
sbb
in
push
sub
rorb
pop
push
cmc
lret
imul
add
sub
cmpsb
inc
mov
and
rcrb
xchg
pusha
negl
xor
xchg
pop
sbb
shlb
add
pop
jnp
stos
popa
testl
int3
push
sbb
cmp
movsb
sub
sbb
adc
pop
sbb
stos
fidivrl
mov
mov
xorl
iret
pop
iret
or
imul
ret
test
test
xchg
das
js
sahf
sarb
add
pushf
dec
pop
fwait
and
push
cmp
ds
inc
push
ljmp
cld
sbb
lahf
push
ja
cltd
xchg
jns
adc
xchg
popa
add
cmc
cmc
inc
add
xchg
xchg
xor
push
and
std
jmp
dec
xlat
dec
inc
mov
rolb
mov
in
out
add
es
sbb
rorl
cmp
fcomip
push
nop
pop
and
fmull
mov
or
mov
sub
xchg
aas
insb
mov
xchg
mov
fisttpl
sahf
mov
je
scas
jmp
and
movsb
nop
xchg
in
add
sub
inc
fldl
add
mov
in
aas
sti
dec
fucomip
into
cli
sbb
inc
mov
icebp
in
jno
or
xor
mov
fwait
push
pop
inc
mov
pop
les
cld
cmp
call
sub
push
cwtl
add
out
ss
repz
pop
or
cmp
xchg
sbbb
insb
lock
sbb
aad
pusha
lds
inc
in
pop
jae
dec
divb
inc
and
mov
push
push
pop
dec
xor
icebp
pop
stos
clc
cltd
movsl
ds
gs
cli
prefetcht2
loopne
inc
pushf
pusha
test
jmp
leave
xchg
pop
mov
push
jmp
sarb
xchg
getsec
rclb
pop
xchg
test
mov
sub
and
xor
mov
xchg
jge
shld
mov
sti
hlt
rclb
dec
or
add
popl
mov
lods
mov
cmpsl
mov
jge
jns
je
sbb
mov
add
sarb
xchg
xchg
fsts
movsb
fstl
fwait
xchg
sub
xchg
and
jle
addr16
decb
xor
gs
adc
add
int3
jne
sahf
jb
mov
xorl
mov
and
shrl
and
inc
addr16
inc
sti
dec
movsb
call
sub
popa
fsubp
jmp
loopne
jmp
ret
mov
push
out
push
inc
aad
lea
jl
aas
fidivrl
ja
mov
or
lcall
loopne
lock
pop
inc
pop
hlt
lock
adc
and
sub
je
inc
push
adc
push
pop
notb
jae
dec
cmp
out
sub
fcmovnb
mov
mov
jbe
inc
jb
popf
stos
adc
sti
rolb
jbe
in
jecxz
and
mov
dec
lock
int
fadds
xor
fistps
mov
shrl
pop
imul
les
add
pop
ss
fmul
cmc
push
dec
pop
push
cli
pop
loop
jg
mov
arpl
stos
pop
fisubl
mov
or
or
xor
enter
into
adc
test
loope
inc
push
adc
std
or
pop
mov
dec
pop
leave
mov
in
in
add
icebp
jl
push
xor
dec
or
sahf
or
loop
or
pop
movsb
jno
test
xchg
imul
push
cmc
or
pop
cmp
add
sub
je
cmc
inc
lahf
dec
pop
sub
pusha
mov
stos
or
lods
flds
add
sbb
rolb
sti
iret
inc
lods
movlps
out
xor
sub
jnp
pop
or
sub
rorl
lahf
insl
cmp
mov
cltd
add
add
cmp
add
dec
cmpsl
jmp
outsb
or
xchg
push
std
xchg
xchg
jg
mov
mov
imul
pop
and
dec
and
adc
xchg
test
lods
jmp
pop
push
add
int
mov
cltd
jae
rolb
shl
xchg
inc
pushf
insl
pop
mov
add
je
xchg
shll
in
mov
xor
aam
test
roll
adc
pop
cmpsl
pop
scas
sahf
je
jno,pn
sub
xor
xchg
mov
inc
shrb
popaw
mov
fcom
add
and
dec
fs
mov
cmp
push
imul
and
fnstcw
scas
scas
dec
xchg
cmpsl
mov
mov
stc
call
imul
and
outsl
pop
and
pop
lods
xor
ljmp
pop
in
cli
adcb
outsb
ljmp
fs
cmp
stc
stos
mov
lods
decl
imull
push
aaa
mov
sbb
pushf
or
xor
out
lret
loope
in
paddsw
cli
test
leave
pop
cs
xchg
clc
addr16
pop
push
or
lods
ret
fildl
sbb
pusha
sub
or
test
jae
lea
fwait
arpl
cmp
in
mov
jmp
and
div
rorl
es
mov
pop
bnd
xchg
sbbb
pop
push
add
shlb
mov
hlt
cmpsl
or
and
xorl
sbb
dec
sub
sti
push
push
adc
sbb
adc
ds
fstl
xchg
and
leave
lahf
inc
loope
test
pop
out
mov
jmp
fisttps
lock
dec
imul
aad
inc
push
cltd
decl
mov
fdiv
faddl
cmp
and
inc
xchg
ss
cmpl
shlb
mov
pushf
jmp
push
lret
jb
inc
sbb
ja
pop
sbb
int3
dec
ret
loope
rcl
insb
adc
push
hlt
ljmp
out
test
js
mov
xor
jecxz
pop
lcall
xlat
or
adc
mov
aaa
sahf
test
jg
jmp
fwait
xlat
lcall
jae
xchg
mov
xchg
lret
mov
into
andl
popa
in
imull
stos
dec
mov
jecxz
cmp
mov
clc
gs
add
fs
xor
cmp
jne
sub
adc
dec
loope
dec
fldl
in
xchg
and
ret
push
mov
nop
xor
mov
aas
gs
stc
add
andl
int
call
add
xchg
outsb
mov
stos
mov
dec
shlb
dec
data16
shlb
mov
push
sbb
add
in
in
pop
or
neg
add
rorb
jns
jecxz
sbb
mov
inc
scas
mov
dec
lcall
daa
out
push
test
push
cmp
or
into
int
lods
add
mov
dec
push
iret
add
out
lock
mov
insl
out
cwtl
cltd
and
outsl
repnz
push
sbb
xor
mov
and
rolb
xchg
cs
inc
repz
sti
iret
mov
cs
mov
mov
lds
mov
pop
lock
popa
mov
cmpsl
js
pop
push
xor
mov
dec
sbb
xchg
insl
icebp
test
mov
jmp
adc
mov
mov
cmp
dec
mov
aas
xor
mov
dec
xchg
or
xor
dec
pop
or
push
rcll
sar
lds
inc
aad
mov
jg
setp
or
rolb
scas
stos
test
mov
movsb
jo
jbe
lods
dec
loop
pushf
mov
jp
inc
jb
popa
push
mov
mov
movsb
xchg
cwtl
jp
rcrl
and
scas
clc
push
xchg
mov
lahf
jbe
mov
sub
cmp
pop
adc
adc
mov
fdivr
and
in
das
std
lcall
xchg
adc
test
scas
into
in
dec
jg
out
and
stos
mov
inc
fimull
push
shll
in
inc
push
inc
mov
cmp
enter
xchg
rcrb
imul
push
ds
jo
pop
fldln2
movsb
sbb
js
jns
jno
xchg
loope
daa
lahf
jnp
test
stc
adc
fists
stos
ja
push
scas
mov
aas
loopne
push
push
add
sub
lahf
cmp
or
mov
xchg
inc
int
fcompl
sub
mov
mov
dec
xchg
sbb
pop
clc
andl
mov
xchg
iret
daa
inc
mov
in
pop
mov
dec
push
std
repnz
jo
xchg
mov
push
mov
xchg
sbb
jl
pusha
cmp
mov
sahf
pop
test
mov
cmp
gs
pop
iret
or
lea
mov
cs
jmp
test
and
push
mov
icebp
dec
imul
inc
insl
das
test
or
inc
ja
mov
clc
add
sarb
ficomps
imul
adc
jl
inc
fistpll
jecxz
dec
popa
cmp
jmp
pop
imul
jle
dec
outsl
and
or
and
mov
into
rcrl
jo
repz
mov
xchg
and
stos
repz
mov
cmc
dec
cld
and
sbb
rcr
mov
bound
mov
mov
cmp
cs
add
iret
push
lds
xchg
jecxz
addr16
std
testl
and
es
jle
mov
mov
les
xor
dec
inc
xchg
movsl
adc
sti
mulb
sub
xchg
add
push
sbb
stos
icebp
add
xchg
in
push
std
pop
cmp
je
hlt
jae
ss
and
mov
daa
cli
iret
in
in
out
xchg
rcrl
subb
xchg
fidivs
mov
jae
mov
lcall
push
loop
mov
jge
adc
xor
mov
or
xchg
aam
and
sahf
mov
decb
ret
clc
pop
cmp
popf
out
mov
orb
sbb
cmp
mov
or
out
mov
adcl
rorl
push
cld
jns
sub
int3
aas
aad
bound
lcall
sahf
lock
repz
addr16
test
push
stos
mov
ds
fsubr
dec
sub
pcmpeqb
cld
stc
cmp
pop
out
jb
lea
mov
mov
mov
jno
imul
and
sar
or
icebp
sbb
push
int3
rclb
mov
mov
add
mov
jbe
push
push
ds
or
mov
inc
mov
loope
push
data16
push
and
mov
dec
cwtl
scas
inc
leave
xor
jl
div
xchg
pop
shll
pop
sub
scas
loope
dec
leave
xor
aaa
rorb
stos
push
pusha
or
jo
scas
shl
mov
aad
aaa
pop
insl
add
rorl
jb
hlt
push
pop
bound
and
inc
inc
xchg
loop
cli
and
ds
inc
pusha
lods
div
push
les
shrb
cli
xchg
lcallw
xor
mov
jle
pop
sahf
mov
movsb
or
js
fcoml
test
pop
je
push
push
call
fldenv
lret
mov
addb
pop
lock
sbb
mov
push
fnstcw
mov
pushf
int
cmpb
xor
cli
sub
dec
cs
xchg
fs
movsl
leave
testl
cs
inc
and
stc
imulb
addr16
pop
mov
iret
jne
scas
sub
loope
mov
add
jl
dec
imul
lcall
frstor
sbb
test
xchg
cmp
or
icebp
in
mov
dec
mov
shlb
cmp
and
jmp
data16
mov
cwtl
xchg
dec
shr
loopne
dec
in
push
cmp
mul
mov
mov
cmp
add
or
xlat
test
repnz
push
jnp
gs
pop
ficomps
push
pop
inc
int
pop
int3
pxor
lret
fs
cmp
jg
adc
or
icebp
cld
iret
movsl
movsl
scas
dec
pop
test
hlt
imul
fmull
testb
adc
jmp
xchg
mov
int
pop
dec
mov
js
or
mov
push
sbbb
shlb
cmpl
sub
sub
test
dec
pop
fldt
jb
mov
sbb
inc
push
sbb
fldt
inc
and
lock
mov
loope
movsb
fwait
mov
xchg
mov
dec
pop
or
loopne
sbb
sbb
enter
xchg
cmp
jnp
insl
andl
inc
cld
xchg
pop
test
mov
mov
pop
mov
xchg
jge
jne
mov
pop
sbb
mov
scas
rorl
pop
sub
jmp
push
enter
call
xchg
mov
fmul
jl
lret
in
jmp
cmp
fcomp
pop
shr
mov
arpl
cmp
icebp
cs
popl
pop
stos
test
jecxz
dec
in
adc
dec
xor
popa
jecxz
lea
ljmp
roll
push
and
jg
pop
jno
xlat
or
cld
xchg
pop
mov
leave
and
jnp
jno
ret
adc
mov
test
add
lcall
push
push
int3
mov
loop
cmpsb
jo
shll
add
cs
pop
inc
push
clc
adc
test
inc
inc
inc
ja
insl
dec
push
cmp
adc
fs
pop
mov
ficoms
in
pop
jp
mov
and
sbb
cmp
xor
xor
lret
or
in
loop
clc
fdivr
add
aad
shrl
push
push
xor
and
fistl
xor
inc
pop
or
dec
inc
push
andb
mov
out
jnp
xor
loop
nop
stos
cmp
jae
xor
add
xchg
push
fiadds
out
mov
aad
add
lret
mov
cmpsl
in
add
or
pop
add
les
jle
test
jmp
sti
sar
mov
jns
decb
js
mov
mov
clc
dec
shll
jb
mov
mov
jnp
add
xor
push
ds
push
mov
inc
pop
xchg
push
jbe
mov
or
in
icebp
lods
fs
lea
inc
jecxz
push
sub
pop
out
popa
add
jbe
adc
jb
mov
sbb
and
rolb
mov
xchg
pop
dec
mov
lret
pop
xor
rol
add
mov
ret
xor
adc
push
mov
jo
mov
dec
or
dec
daa
sub
frstor
shrb
lods
in
sub
pop
and
xchg
mov
fisttpl
pop
jp
js
fsubl
fs
and
mov
jb
sub
loop
shl
ss
cmp
pusha
in
xchg
fcomps
in
lods
orb
ret
mov
push
cmpsl
mov
lahf
decb
pop
into
sub
test
inc
lods
in
or
xlat
insl
cmp
push
pop
fidivl
loope
push
inc
pushw
mov
test
mov
jle
leave
and
ret
push
dec
jae
sub
xor
ret
sub
dec
imul
inc
add
leave
movsb
push
in
rcrl
sbb
xor
mov
dec
mov
push
in
jne
imul
jp
outsb
pop
pop
adc
mov
mov
jae
cmpsl
adc
and
add
je
jl
mov
or
xor
jle
insl
addr16
mov
jmp
or
sti
in
mov
aaa
int3
and
les
jbe
adc
iret
daa
fnstcw
sti
inc
sahf
jb
int3
addr16
adc
push
and
inc
negb
mov
test
fs
cmpsl
enter
sbb
push
call
inc
pop
lcall
test
xor
push
mov
sbb
movsb
xor
xor
inc
loopne
jb
inc
andl
and
add
stos
push
and
sbb
scas
aaa
sti
pop
pop
dec
mov
les
cld
cwtl
jbe
push
sbb
fisubrs
sub
mov
mov
adc
sbb
mul
mov
xor
movsl
or
xchg
sub
and
xchg
and
mov
int
cli
dec
inc
fcmovne
iret
or
mov
lods
push
pop
or
mov
dec
sub
repz
mov
shrl
fidivl
xor
sub
sub
testb
les
or
ja
mov
push
xlat
mov
inc
and
pop
nop
mov
cmc
in
pop
cltd
clc
imul
xchg
pop
movsl
lods
je
cwtl
push
fcom
mov
push
pop
and
imul
and
clc
xchg
pop
inc
lret
std
inc
xchg
sahf
pusha
xchg
jge
xorb
cmp
sbb
xor
fsubs
push
jne
ror
in
lock
ret
or
xchg
in
sbb
xor
inc
imul
je
adc
ret
cmp
call
pop
lods
xchg
jno
call
cmpsl
movsb
xlat
test
adc
daa
stos
movsl
inc
fs
test
fbstp
push
sbb
cmp
cmp
cmpsb
dec
fistps
pop
insb
adc
pop
lret
lret
popf
adc
and
aaa
daa
cltd
shl
stos
aam
daa
out
xchg
inc
adc
cmp
or
sbb
out
leave
push
les
das
inc
imul
jb
mov
push
aaa
popa
pop
xchg
push
pushf
mov
call
push
xor
shll
pop
mov
jb
and
inc
fstps
sarb
cmp
xlat
rorl
dec
dec
out
adc
sub
stc
fdivrp
daa
adc
test
data16
cmp
pop
test
dec
lea
mov
mov
das
jp
ja
lock
dec
pop
mov
push
movsb
hlt
std
mov
cltd
es
stos
data16
mov
test
push
lods
cld
xor
mov
repnz
adc
jbe
xor
es
cmpsb
mov
stc
inc
call
sbb
subl
pop
xor
jno
bound
in
subb
xchg
aad
jecxz
push
sub
fs
in
add
cltd
xchg
out
ljmp
gs
mov
ficomps
hlt
jno
lods
mov
into
cmpps
dec
in
lahf
mov
dec
and
and
push
test
sub
xor
roll
lret
movsl
dec
xchg
jp
mov
js
cmpsb
xchg
inc
push
ja
or
sbb
mov
cld
jg
idivb
adc
sub
nop
cmp
cmpsl
addl
lcall
cmc
jmp
pop
mov
popf
das
pop
xor
ds
cli
sub
mov
cmp
sahf
xor
add
pop
es
out
cltd
and
sbb
stos
and
insb
int3
sbb
sti
inc
and
daa
cmp
sub
ljmp
movsb
repz
sbb
pop
inc
pop
inc
pop
mov
sub
cmc
into
push
imul
aam
or
mov
jecxz
fistl
mov
sub
inc
mov
popa
leave
sub
imul
xor
mov
jmp
inc
rclb
or
sahf
add
and
std
inc
pushf
int3
cli
sbb
aaa
fisubl
movsb
xor
jne
xor
push
test
stos
stos
mov
add
adc
mov
pushf
jge
ds
out
mov
pop
lea
ds
inc
pop
aad
xor
jmp
adc
lcall
xchg
stc
sbb
movb
lock
sub
mov
cld
jle
xchg
cmp
call
pusha
fdivr
in
je
pop
lds
sbb
inc
xor
pop
pop
outsb
int3
sbb
inc
in
push
mov
jge
jmp
mov
sub
mov
in
icebp
int
fcmovb
sarl
inc
sub
add
cmp
jecxz
iret
das
sahf
pop
jge
cmp
pop
mov
jl
jg
shll
mov
mov
xchg
scas
xchg
lret
jnp
push
aaa
int
dec
jae
sub
adc
icebp
ds
mov
adc
out
mov
add
ljmp
cmpsl
mov
out
inc
cmp
sub
psraw
push
bnd
inc
pop
sub
adc
and
test
mov
pop
aas
cmp
cwtl
popa
push
push
jb
ffreep
cmp
mov
mov
push
push
mov
mov
sbb
xlat
insb
xchg
xchg
roll
in
adc
inc
adc
mov
enter
lds
in
mov
int3
xor
aaa
xor
fwait
sub
or
push
cmp
mov
sub
pusha
je
add
dec
push
push
mov
xchg
push
xor
aad
fs
pop
inc
cs
leave
dec
cmp
mov
and
add
test
jp
imulb
sahf
loope
xchg
outsl
pop
jg
pop
mov
mov
pusha
sti
lcall
imul
add
push
enter
insb
in
pop
adc
fists
pop
in
lret
jo
lods
fwait
pop
daa
jp
jl
cmp
push
adc
rcr
xor
aaa
rcrl
mov
mov
les
loop
out
mov
pop
xchg
mov
bound
lea
sub
std
lock
inc
es
push
jp
push
dec
pop
fs
xchg
leave
or
pop
insb
movl
jmp
and
mov
and
lods
addr16
popa
mov
dec
out
leave
xor
push
inc
mov
jmp
pop
mov
dec
pop
inc
mov
lret
pusha
adc
pop
add
mov
ficomps
xchg
test
push
aas
insb
popa
lods
pop
push
shl
sahf
and
mov
arpl
pop
in
dec
sarl
xchg
mov
fwait
jmp
inc
mov
stos
sarl
mov
pop
add
push
jb
mov
mov
lods
push
dec
adc
ret
test
push
lods
xor
adc
dec
fwait
into
fs
pop
outsl
mov
xor
inc
ljmp
mov
mov
add
pop
mov
cmc
sbb
sub
jno
jg
nop
mov
fldenv
fwait
or
cmp
ficomps
bnd
outsb
sbb
in
js
cmpb
jb
iret
fldcw
test
mov
scas
and
push
loopne
lret
jae
cli
mov
pop
fcompl
push
mov
scas
cmpsl
gs
adc
inc
ljmp
loop
lahf
jne
sub
ret
clc
test
stos
cs
pop
push
call
cmpb
dec
insb
adc
pop
imul
int
xchg
jns
push
xorl
popa
inc
call
icebp
cld
jl
out
push
ljmp
sbb
lret
cmpsb
sahf
test
xchg
jmp
into
aad
mov
add
rolb
repz
fnstsw
and
pop
add
add
adc
jl
pop
dec
cmp
xchg
jbe
cmp
add
push
dec
add
jns
adc
fwait
outsl
dec
mov
xor
cs
push
and
adc
lret
into
pop
fidivrl
test
mov
fimuls
mov
and
push
imul
lock
cmp
sub
xlat
push
add
daa
lahf
sbb
jnp
sub
js
xor
and
xchg
or
mov
add
dec
je
add
mov
pop
sbb
loop
cmpsb
scas
sbb
stos
cltd
sti
in
stos
add
imul
and
insl
pop
in
mov
hlt
lahf
enter
test
cltd
pop
jl
in
sbb
sbb
arpl
jge
pop
ds
lods
stos
lds
das
movsb
ja
shrb
lea
mov
lcall
rcrb
out
mov
loope
pop
mov
mov
scas
gs
fcomps
ret
imul
add
add
incb
cmp
pop
out
pop
faddp
adc
fwait
je
mov
repz
jbe
cmp
adc
push
xor
or
xchg
stos
test
push
inc
and
push
pusha
ficompl
out
pop
ret
outsb
add
enter
mov
xor
sub
hlt
mov
subl
sbb
dec
push
sbb
cmp
sbb
out
dec
pop
xchg
cli
loope
cmpsl
jae
js
ret
mov
push
cmp
or
mov
out
cmpsb
loopne
js
xchg
das
stos
inc
movsl
scas
movsl
sub
lret
test
or
imul
push
test
jae
loop
jecxz
bound
mov
ljmp
sahf
inc
xor
jg
xchg
xchg
jnp
jmp
orb
sbb
std
in
pop
movsb
mov
xchg
arpl
pop
mov
jmp
mov
dec
mov
xchg
in
fwait
push
mov
lock
ss
adc
adc
or
pop
push
and
pop
test
xor
inc
out
mov
imul
fcomps
xor
fdivrl
je
mov
cmp
sub
fistpll
cmp
cmpsb
aas
sub
ret
and
arpl
cmp
imul
stos
sbb
or
call
mov
sub
or
leave
fdivrl
int
mov
dec
mov
cmpsb
jg
add
fdivs
adc
sub
xor
jmp
fwait
or
stc
cmpl
lret
push
sub
inc
inc
sbb
jae
cli
push
movsl
push
cmp
add
adc
cld
mulb
jecxz
fildll
dec
push
ljmp
inc
sub
or
sub
sub
jge
mov
push
push
add
jbe
push
lcall
adc
pushf
movsl
and
cmp
es
daa
cmp
lea
test
push
ja
pop
jle
fldcw
sub
test
dec
sbb
ret
sbb
pop
mov
mov
dec
shr
cmp
leave
shl
out
and
clc
cmc
and
dec
sub
aam
and
ret
inc
ljmp
insl
fadd
cmp
rcl
jg
popa
xor
movsl
leave
adc
jbe
sbbb
aam
add
pushf
cltd
jecxz
enter
xor
and
out
dec
testb
popf
cmp
add
outsb
push
rorl
mov
inc
or
xor
stos
and
mov
xor
mov
xor
sub
cmp
lahf
loop
push
std
lds
cmp
adc
cmc
mov
add
les
repz
jge
rclb
fwait
xor
add
pop
sub
dec
mov
lock
loope
ja
out
repnz
scas
clc
and
sub
and
jle
sbb
push
scas
pop
or
mov
mov
stos
pop
arpl
cmpsl
mov
jg
popf
mov
fiaddl
cmp
inc
pop
js
clc
sarl
notl
cmp
pop
or
mov
push
mov
jbe
gs
inc
out
push
jno,pn
adc
popa
cmpsb
stos
insl
inc
adc
int3
push
nop
subl
sbb
fisubs
cld
test
and
sahf
cs
pop
outsl
fnstsw
xchg
sbb
rorb
mov
clc
cwtl
dec
adc
jae
cltd
mov
call
in
push
jbe
test
lahf
jmp
std
dec
push
addr16
loop
xchg
outsl
ds
xorb
and
inc
pop
test
scas
dec
fimull
mull
sar
mov
popa
pop
lea
cmp
mov
or
hlt
mov
daa
add
imul
adc
popf
pop
xchg
adc
in
mov
iret
cmovle
je
xchg
lds
jo
jle
pusha
dec
dec
and
or
jns
testb
shll
pop
test
mov
and
into
cmp
dec
pushf
clc
stc
lds
mov
cmp
push
cmp
pop
jle
imul
sub
test
lret
add
sbbl
leave
adc
dec
dec
xor
subl
std
loop
fistpl
lea
xchg
int
adc
nop
cli
push
mov
sti
fldt
adc
lahf
int3
xchg
push
push
shll
lahf
push
pop
sbb
mov
jmp
pop
test
in
data16
mov
sub
push
sbb
jae
fs
mov
inc
shrb
hlt
mov
xor
aaa
aaa
push
imul
mov
fs
into
in
and
fmull
jnp
mov
fwait
add
and
and
cmp
gs
data16
cld
gs
int
mov
pop
dec
push
dec
push
dec
andb
xchg
mov
sub
out
dec
popl
push
sbb
mov
dec
mov
pop
repz
add
test
push
sbb
repz
shlb
cld
mov
stc
movsl
push
test
xlat
xor
popa
cltd
mov
push
or
push
or
push
adc
xchg
shlb
sub
insl
dec
dec
and
sub
rcl
add
flds
xlat
jl
push
ljmp
ja
sub
test
and
ja
lret
ds
aaa
mov
pop
jge
mov
test
cmp
adcl
xorb
xchg
popf
mov
mov
iret
int
xchg
adc
jmp
fidivs
sub
aam
int
and
aaa
je
cmp
inc
sub
jo
std
xor
sarl
or
sbb
mov
mov
adc
fildll
je
pop
inc
ss
int3
add
es
xchg
cmp
enter
rep
or
mov
repz
shlb
push
repz
test
mov
pop
movsb
xor
mov
inc
adc
outsb
shl
repz
mov
add
pushf
mov
push
movsl
sub
jl
mov
add
inc
jnp
and
stc
inc
add
shl
push
inc
fimuls
sbb
push
rcrb
out
sub
adc
cmp
aas
out
inc
and
jb
inc
mov
pop
dec
jns
cld
cltd
push
repz
ja
cwtl
lods
mov
push
fs
and
mov
ja
jnp
lods
rcrl
ret
inc
push
pop
pushf
test
cmp
pushf
loopne
cmp
outsl
stos
clc
lret
jp
sub
adc
dec
enter
fimull
mov
bound
repnz
pop
lods
sub
add
push
lahf
cld
fdivs
cmpsb
popa
mov
add
jo
out
jbe
pop
mov
mov
lea
lahf
inc
push
push
mov
cs
adc
inc
and
arpl
xchg
out
repnz
dec
lret
mov
mov
aam
mov
ret
sub
sub
jl
cmp
daa
repnz
enter
or
arpl
mov
out
in
imul
adc
push
mov
lcall
inc
aaa
and
sub
xchg
fwait
and
and
inc
push
mov
fstps
sarl
dec
add
add
inc
pop
stos
lret
cmc
mov
dec
mov
hlt
loopne
enter
outsb
dec
adc
clc
js
push
push
stos
sbb
pusha
adc
adc
fnsave
std
or
arpl
mov
mov
sbb
xchg
mov
clc
in
aam
jg
ret
fwait
call
mov
adc
and
dec
push
shlb
add
jl
inc
jp
xchg
dec
and
outsl
or
cmp
inc
aad
inc
pop
jge
mov
addl
les
xor
jmp
lea
idivl
push
cli
shlb
or
xchg
arpl
shl
cmp
jbe
clc
and
add
adc
mov
cld
pop
imul
jns
faddl
mov
arpl
es
jecxz
scas
sub
jp
cmpsl
cwtl
imul
xor
in
jmp
adc
sbb
jmp
sbb
pop
cwtl
and
nop
fisubrl
push
adc
les
xchg
jge
inc
flds
push
mov
repz
xor
shlb
mov
jle
xor
outsb
pop
or
insb
xor
or
push
cmp
mov
add
movsl
mov
xchg
pop
lock
mov
xchg
jl
or
push
in
lea
xor
mov
add
out
xor
sbb
push
jmp
push
mov
inc
lods
mov
push
call
loop
jne
int
cmp
and
mov
movsl
add
mov
sub
or
cmpsl
mov
jecxz
or
adc
mov
popa
out
fucomi
xor
pusha
add
push
nop
jae
mov
out
fidivrl
lock
add
mov
subb
adc
sub
lahf
pop
inc
or
xchg
xchg
js
cmpsb
xchg
sub
repz
pop
adc
adc
xor
xchg
loopne
or
cli
mov
jle
icebp
sbb
fmul
jecxz
xchg
dec
leave
sub
xchg
insb
mov
rorl
cmp
cli
and
add
dec
xchg
push
js
rcll
mov
js
arpl
ja
mov
pop
bnd
fistpll
dec
inc
jbe
push
jg
jecxz
pandn
in
sbb
push
hlt
lret
mov
and
scas
or
mov
or
inc
push
dec
stc
lcall
add
sahf
add
shl
adc
push
movsl
out
mov
outsb
test
pop
cmp
fstpl
push
xor
dec
push
mov
lcall
inc
shlb
addl
push
mov
xlat
push
aad
push
adc
iret
icebp
and
aam
enter
cmp
mov
fidivrl
mov
mov
outsl
or
mov
pop
jmp
outsb
je
ret
jmp
jae
hlt
leave
nop
outsb
and
clc
cmp
mov
add
mov
or
dec
xor
adc
clc
aas
and
inc
jmp
shrl
jno
sub
data16
in
mov
cmpsb
jecxz
push
ret
pop
jp
sub
aad
push
testb
add
dec
stc
mov
leave
mov
and
ds
push
xchg
jg
mov
mov
push
leave
roll
jnp
outsl
and
inc
xchg
aam
sub
mov
inc
sbb
jmp
sub
lods
dec
lret
int3
shl
push
hlt
hlt
or
push
dec
push
sub
jo
xchg
flds
adc
sub
daa
enter
repnz
mov
push
xor
jbe
mov
dec
das
mov
jl
pop
mov
arpl
lret
xorb
pop
xchg
inc
ret
cvtpi2ps
mov
sub
leave
js
sub
sbb
mov
dec
adc
pop
sti
aas
leave
xchg
out
mov
scas
jbe
dec
movsl
sti
sbb
mov
sub
lahf
lods
aad
push
mov
adc
aas
mov
dec
pop
sahf
ret
cltd
sahf
in
xchg
mov
mov
pushf
cmp
sbb
add
mov
pop
in
adc
push
cltd
scas
dec
out
out
popa
mov
mov
sbb
clc
out
aad
pop
cwtl
pop
xchg
fmul
lcall
xlat
mov
leave
insl
sbb
and
and
je
xor
inc
outsl
outsb
xchg
xor
jmp
jl
int3
repz
adc
and
lcall
loopne
shr
mov
sbb
in
nop
or
clc
aam
push
mov
mov
int
idivl
dec
repz
xor
inc
popf
out
dec
inc
lods
add
test
iret
in
mov
cmpsl
sbb
loopne
xor
push
mov
into
cld
add
insb
movsb
movsl
andb
leave
pop
hlt
out
mov
mov
pushf
icebp
mov
fstpt
inc
xor
xor
in
pop
lret
dec
int3
sbb
je
dec
lods
add
pop
inc
daa
and
xchg
jno
ret
fnstcw
out
test
add
mov
adc
mov
mov
test
mov
sub
std
nop
push
decb
out
out
mov
in
inc
icebp
jl
adc
std
das
arpl
mov
int
adc
cwtl
out
and
jnp
jo
cmpl
jge,pt
dec
out
adc
in
out
popa
or
imul
inc
xchg
xchg
sbb
loopne
jb
jbe
xor
lahf
xor
inc
inc
ficompl
ss
sub
adc
js
les
imul
xchg
inc
xchg
ds
pop
sahf
jge
leave
and
ss
mov
bound
jmp
cld
xchg
pop
pushf
add
pusha
xor
fnstcw
push
cs
cltd
jg
dec
movsl
xchg
in
lock
imul
daa
push
push
icebp
sub
mov
adc
in
mov
shlb
scas
mov
xchg
lods
das
mov
mov
jg
das
jmp
es
jb
testb
add
mov
fistl
imul
cmp
jae
pop
dec
mov
jbe
in
add
mov
dec
outsl
adc
mov
divb
lods
xor
adc
popl
faddp
pushf
xlat
negl
sbb
add
cmp
push
sub
data16
out
rcll
out
lock
push
mov
xchg
xchg
inc
adc
sbb
mov
popa
xor
leave
add
push
cmp
aaa
cmp
imul
or
stos
out
enter
cmp
add
mov
mov
imull
sub
jecxz
pop
movsl
test
mov
jnp
cmp
pop
fisttpll
stos
jns
push
xchg
adc
and
out
xor
mov
jnp
jge
dec
add
sub
stc
addr16
sti
std
repnz
sbb
shl
push
clc
cmpb
inc
jmp
sub
add
adc
shr
and
xor
xchg
stos
rcrl
push
add
pop
mov
cld
inc
cmp
lret
scas
call
xchg
jp
pop
fs
xchg
arpl
sarl
dec
xor
xchg
mov
mov
mov
loop
or
cli
cmp
fucomp
shr
out
xor
mov
inc
ljmp
fwait
jecxz
mov
test
aam
cmp
outsb
jns
and
pop
movsb
icebp
jb
sbb
inc
movsl
setl
mov
addr16
fstl
mov
mov
stc
scas
sub
dec
mov
mov
je
test
cltd
jl
cld
out
mov
jae
lret
fnclex
jne
inc
out
sbb
sub
js
lahf
out
repz
cs
inc
jle
or
inc
sbb
xchg
adc
outsb
cld
cltd
push
mov
xor
add
frstor
mov
enter
or
in
xor
push
inc
insb
add
cmp
xor
or
dec
sub
sub
or
mov
mov
xchg
or
mov
push
test
addr16
add
xor
hlt
cmp
push
enter
push
mov
jecxz
pop
fnstcw
push
ror
and
loop
fcom
rorl
test
aad
clc
xor
add
xchg
fmull
in
jo
adc
fsub
pop
ret
push
lret
aam
aad
and
inc
sbb
push
mov
inc
pop
adc
addr16
push
jmp
push
jne
or
mov
sub
loope
add
xchg
mov
push
fwait
push
inc
mov
push
add
jecxz
call
out
jg
or
mov
mov
mov
into
repz
push
psllw
push
fst
cld
mov
and
popa
imul
inc
and
enter
inc
and
into
je
js
pop
sbb
movsl
aaa
int
jae
dec
mov
pop
js
xchg
in
xor
dec
pusha
pop
or
and
sbb
cmp
adc
xor
bound
jmp
adc
rcl
rcr
je
mov
mov
lods
pop
scas
mov
inc
out
mov
iret
mov
ss
stc
add
xchg
and
inc
push
xlat
into
or
xor
fbld
jmp
mov
outsl
and
dec
sarl
jge
rclb
adc
pop
dec
fld
out
dec
and
mov
aad
cld
xor
lahf
rcrl
add
es
and
xor
inc
in
daa
add
repnz
cmp
jbe
inc
movsl
cmp
push
inc
adcb
xchg
mov
xchg
adc
out
outsb
cld
aas
jnp
inc
sub
outsl
inc
pop
and
out
pop
xchg
or
es
repz
push
pop
mov
insl
addr16
imul
cwtl
in
mov
xchg
adc
enter
push
xchg
add
hlt
mov
cmp
ljmp
hlt
inc
xchg
xchg
and
xorb
mov
mov
ljmp
call
js,pn
and
dec
in
enter
jg
adcb
stos
pushf
incl
aad
xor
jns
aaa
cmpsl
cmc
ss
fists
mov
in
add
test
mov
clc
inc
cli
mov
in
mov
pop
pop
scas
jne
popa
adc
or
je
pop
xor
mov
scas
xchg
test
sub
aas
xor
and
or
adc
and
mov
xchg
add
hlt
jle
ret
sub
and
mov
push
and
pop
inc
icebp
cmp
jp
sbb
roll
mov
jmp
mov
mov
pop
roll
pop
sub
insb
testl
pop
imul
jle
test
pop
pop
pusha
aaa
cmpsb
sti
add
mov
sub
mov
mov
mov
fistpll
sbb
jp
inc
jne
arpl
push
test
pushf
push
js
inc
insb
lods
test
push
jmp
mov
imul
movsl
xlat
pop
pushf
inc
mov
sbb
daa
sarb
xor
push
loop
dec
fcmovnbe
repz
sub
pop
xchg
inc
dec
out
push
mov
ficoms
flds
sub
xchg
and
aam
push
pop
push
rorb
push
or
ljmp
fstl
jl
popa
sbb
inc
ljmp
outsl
aam
jbe
cli
es
cld
gs
jecxz
and
jns
hlt
pop
jecxz
mov
xchg
rcrb
xchg
and
popf
stos
insl
mov
ja
xor
out
scas
mov
xchg
cwtl
sbb
mov
sub
cmpsl
jge
sti
mov
mov
enter
xchg
mov
pushf
pop
pusha
jno
xchg
xchg
jb
add
mov
dec
mov
and
dec
jne
add
pushf
xorl
cwtl
test
gs
xor
testl
pop
fisubrs
sbb
rolb
cs
jl
pop
out
inc
push
cltd
test
js
pop
cwtl
mov
cmc
add
xor
lret
loop
xlat
dec
and
cld
imul
add
cmp
mov
xchg
call
lock
xchg
xor
dec
orb
and
mov
ss
mov
dec
and
dec
mov
fbstp
add
push
andl
icebp
lcall
lret
outsl
popa
lahf
jae
clc
xchg
cld
pop
push
popa
or
dec
idivb
jo
testl
mov
add
push
fcmovbe
xor
mov
stos
cmpsl
pop
test
xchg
inc
pushf
lret
push
test
jp
gs
jle
adc
and
dec
loopne
cwtl
loope
int3
sbb
roll
xor
inc
sbb
push
push
nop
xorl
arpl
fidivrs
rcrb
and
fildll
or
sbbl
cld
js
scas
mov
in
xchg
daa
pop
or
xor
or
outsb
std
add
jo
fs
lods
xor
popa
dec
fsubl
sbb
aaa
lds
clc
cmp
inc
loope
cmpsb
bound
call
cmp
sub
test
fldcw
insl
rcll
lcall
xor
dec
xchg
dec
push
push
sahf
jae
xor
push
sbb
mov
lcall
mov
mov
nop
fdivl
movsb
daa
xchg
mov
outsl
daa
jecxz
cmc
nop
mov
fs
or
ret
shl
mov
xor
cmpl
movsl
sub
ljmp
sbb
stc
mov
adc
inc
sbb
and
sbb
sub
insb
aaa
xchg
sbb
stos
push
insb
nop
test
scas
dec
xchg
inc
xchg
sbb
or
pop
ret
pop
lods
shlb
testb
jp
mov
mov
int3
dec
cmp
vmovsd
pusha
lods
lds
ret
xorl
out
jnp
js
cmp
push
popf
nop
xor
jl
or
mov
pushf
daa
dec
mov
imull
xchg
mov
and
and
stos
push
dec
popf
jns
adc
scas
mov
sub
or
or
int
lahf
ljmp
cmp
rcrb
inc
jae
pop
nop
xchg
sbb
sub
out
mov
cld
mov
mov
dec
sbb
cwtl
dec
mov
xchg
inc
push
cwtl
adc
push
nop
add
adc
addb
add
pop
mov
rcr
mov
add
inc
in
test
fcoml
pop
adc
mov
mov
push
inc
mov
sub
add
xor
mov
punpcklwd
jns
and
int
cmpsl
sbb
andl
lcall
loope
pop
loop
cmp
mov
nop
stos
cltd
jmp
inc
icebp
dec
ljmp
mov
or
xlat
fimuls
add
imulb
jnp
test
cs
out
out
pop
shrl
je
lcall
jmp
push
fistpll
pop
mov
aas
pop
daa
dec
add
jbe
lahf
or
xchg
jp
adc
jbe
test
arpl
push
jp
in
cmp
in
popf
cmp
or
mov
jp
ss
lock
and
nop
test
dec
jo
jg
pop
and
lods
inc
push
aad
in
or
sub
mov
mov
dec
pushf
jge
nop
out
sbb
sahf
and
pop
cltd
and
inc
aad
jle
pop
add
jo
cmpsl
inc
inc
sub
push
cwtl
negb
pop
loope
fstpl
aas
adc
xor
test
mov
sbb
or
mov
dec
mov
in
push
lods
mov
lds
mov
pop
in
popf
cli
lods
inc
pop
adc
dec
aam
jg
mov
adc
lahf
ror
inc
cltd
pop
and
mov
les
dec
loope
imul
dec
adc
iret
or
or
sbb
fistl
jae
dec
daa
testb
mov
sub
lods
pushf
scas
add
lods
outsb
lds
fbld
sub
ds
inc
mov
cs
lock
shr
xchg
imul
rolb
mov
sbbl
shlb
pop
mov
in
jge
lods
int
mov
loopne
and
xor
int3
jl
cmp
repz
mov
add
xchg
adc
outsl
mov
aam
mov
mov
pop
pop
pushf
lahf
push
cmpsl
insb
xor
mov
pop
jp
push
fbld
lods
pop
inc
pop
int3
lahf
pushf
mov
fisubs
pop
dec
fdivl
jg
adc
ljmp
ficomps
inc
cmp
mov
mov
aam
mov
inc
adc
ds
mov
aaa
ffreep
das
ja
je
outsl
call
dec
insl
xchg
or
mov
jg
mov
repnz
jmp
pusha
and
sbb
js
int
push
mov
mov
pop
sahf
ja
aaa
popf
xor
cmpsl
ret
sbb
mov
mov
push
test
push
sub
xchg
insb
fnstenv
pop
inc
insl
xlat
xor
out
popa
addr16
nop
sub
xchg
jl
lea
scas
adc
dec
arpl
mov
xchg
push
push
test
shl
lahf
clc
pushf
add
xchg
loop
jbe
fmull
lds
in
sbb
push
decl
sub
mov
fdivrs
out
mov
incl
mov
je
push
dec
mov
sbb
mov
outsb
pop
push
loopne
stos
mov
leave
cmpl
pop
das
fs
adc
push
enter
inc
loop
xor
mov
lods
in
xchg
pop
leave
dec
or
shlb
dec
aad
sbb
insb
lock
int
sbb
push
xchg
jnp
sbb
pop
dec
add
faddl
xchg
int3
subl
sbb
lret
pop
popa
outsl
xchg
xchg
bound
xchg
orb
mov
push
ja
ss
push
or
mov
mov
std
and
ret
stos
or
xor
and
pop
pop
dec
adc
sub
addr16
sbb
pushf
jne
adcb
or
adc
into
scas
sahf
jge
inc
imulb
lret
mov
out
in
shrl
popf
loopne
mov
xor
out
mov
imul
lea
jns
int
cld
jg
and
mov
or
mov
fldl
push
adc
mov
adc
and
and
pop
pusha
or
adc
adc
fmull
stos
pop
icebp
clc
int3
cmovne
mov
popl
mov
out
pop
inc
sub
or
mov
inc
nop
mov
out
adc
pushf
enter
andb
jno
jl
pop
push
or
xchg
fisubrl
bound
loop
lods
push
jno
cmpsb
sbb
add
stc
pop
xor
adc
pop
or
add
addr16
ret
mov
ret
jnp
pop
cmp
stc
push
or
xlat
jae
inc
in
hlt
inc
push
mov
xchg
int3
or
imul
pop
push
aaa
inc
xchg
adc
or
mov
pop
jmp
cmp
fcompl
sbb
dec
mov
cltd
push
int
xorl
push
nop
push
dec
or
mov
fs
outsl
cwtl
pop
sub
stc
add
sbb
and
or
pop
jns
jne
cmp
push
test
jne
nop
xchg
push
jo
inc
cmp
pop
cmp
shlb
cwtl
daa
scas
ret
out
fdivrp
int
adc
sbb
cmp
bt
scas
pop
mov
loope
lods
movsl
mov
clc
shl
inc
movsb
incb
jecxz
and
jge
in
adc
cmp
sahf
out
lods
add
and
mov
fucom
int3
loope
data16
mov
xor
xorb
mov
cmpsb
jnp
hlt
das
int3
cwtl
or
and
jecxz,pt
rclb
cmp
rclb
mov
sbb
outsb
mov
mov
in
out
add
jmp
test
test
jne
add
jp
push
xchg
out
jae
rcll
mov
mov
ljmp
popf
mov
fildll
sbb
cmp
sbb
insl
mov
xchg
sbb
dec
adc
adc
xchg
mov
repz
mov
mov
loop
push
push
mov
out
cmpsl
jp
mov
inc
repnz
out
mov
aam
insb
scas
int
int3
stos
sbb
dec
push
xchg
xchg
xor
lret
jmp
sbb
or
push
lods
imul
sbb
add
les
cli
outsb
fstpt
jb
nop
cmp
xor
stos
push
sbb
mov
xchg
jae
pop
addb
push
push
test
adc
scas
ss
outsl
cmc
fbstp
fucomip
lcall
pusha
dec
ja
shlb
jmp
sti
flds
xorl
adc
jae
cmp
mov
jae
out
stc
enter
pop
fmuls
les
js
ret
dec
mov
movsb
cmpsb
leave
lock
sarl
out
add
subb
bound
jg
ljmp
xchg
xor
jmp
aam
pop
or
cmp
dec
daa
inc
fcmovnb
or
jne
jg
in
pop
jecxz
push
push
dec
mov
out
mov
or
push
jl
sbb
fdivrs
std
cli
notb
addb
pop
dec
xlat
fstpl
std
sbb
mov
jmp
clc
jmp
or
or
sarb
add
int3
stos
inc
popf
out
push
jbe
rclb
xchg
aaa
js,pt
mov
dec
sbb
imul
fildll
inc
jle
sarl
cld
in
fdivs
js
jne
xchg
test
aaa
cltd
mov
rolb
out
adc
arpl
xor
mov
int
fs
lods
dec
cmpsb
push
push
fs
dec
xchg
je
and
test
movsb
xor
out
adc
mov
sub
add
cmp
cli
icebp
dec
add
ret
xchg
mov
jae
sarb
clc
dec
adc
mov
xchg
cmp
or
cmpsb
loop
cwtl
jg
pop
mov
or
cmpb
push
fs
and
popa
dec
cli
jb
out
push
lods
pop
inc
or
out
cmp
jnp
dec
test
pop
pop
in
mulb
cmp
jae
outsl
cmc
lret
fnstsw
jmp
lret
iret
sbb
push
inc
jns
out
inc
movsb
mov
gs
pop
push
int
adc
cltd
mov
push
xor
cwtl
jae
pop
and
das
cmp
mov
and
mov
mov
push
xor
stos
loop
aad
lret
mov
push
mov
cmpsl
notb
jmp
push
sbb
inc
dec
jae
fisttpl
pop
sbb
nop
lods
aaa
jmp
inc
or
mov
cld
jg
push
aad
add
xor
daa
jo
fldcw
jecxz
aad
out
ds
rorl
out
jecxz
adc
repz
sub
xchg
inc
xchg
mov
inc
sbb
sub
add
rcll
mov
data16
push
jle
daa
cmc
adc
imul
fadds
jmp
dec
sarb
imul
pop
mov
push
test
jno,pn
push
pushf
iret
popf
cli
mov
fisttpll
popa
cli
out
pop
div
jmp
mov
add
or
push
stc
inc
mov
add
fldpi
aam
in
fistpl
xor
mov
add
jae
pusha
dec
scas
sti
test
or
sbb
jns
xchg
imul
faddp
xor
xchg
dec
sbb
xor
add
push
mov
and
int3
lcall
xor
pop
dec
push
rcrb
in
pop
in
add
jp
repnz
inc
xor
gs
xchg
xchg
mov
or
xchg
pop
jb
push
negb
ljmp
test
orb
mov
push
adc
fwait
xchg
daa
jge
xchg
aaa
movb
mov
imul
std
inc
ljmp
daa
mov
mov
out
mov
dec
sbb
test
outsl
ret
inc
stos
or
xchg
mov
or
mov
rorl
mov
outsl
and
adc
inc
loopne
and
scas
adc
fcompl
push
push
dec
js
ljmp
cmp
mov
xchg
xchg
loope
push
xor
pop
push
into
loopne
rcl
test
sbb
stc
adc
pop
and
insl
push
aaa
mov
inc
sub
jno
fsubrl
outsl
popa
and
mov
jp
and
sub
or
and
ret
adc
dec
jp
add
sbb
inc
jl
gs
sub
mov
sub
pushf
push
in
mov
scas
sbb
xor
daa
test
add
ret
ret
ss
fidivl
lds
insb
in
cmpb
cmp
mov
fistpl
pop
mov
outsl
adc
std
int
or
adc
xorb
xorl
fisubrl
bound
add
fbstp
movl
mov
mov
or
mov
mov
mov
and
ss
add
rol
ljmp
adc
gs
xor
mov
push
fwait
push
xor
in
in
je
popa
fcomps
shrd
sar
enter
jmp
jo
aam
mov
pop
xor
idivl
mov
je
fisubl
lret
and
cmpsl
jae
lahf
loopne
loope
sbb
out
sbb
dec
std
inc
repnz
sub
inc
add
lods
xchg
inc
mov
cmp
pop
push
sub
jae
sub
mov
dec
mov
aam
xchg
or
push
fnstcw
mov
push
pop
push
xchg
pop
pop
loopne
push
lret
mov
insl
xchg
xor
aad
jo
xchg
jg
out
in
in
add
jl
jp
stc
or
movb
sub
cmp
adc
jmp
cmp
insl
pop
cmp
mov
jnp
add
mov
and
addr16
rclb
into
into
cmp
sar
cs
mov
add
out
xor
adc
test
test
pop
loopne
push
ret
imul
fimull
jl
int3
adc
jecxz
popf
and
pop
js
push
sahf
mov
mov
and
imul
outsb
test
sub
into
fldl
or
stos
mov
xor
xorb
mov
cmp
je
mov
inc
or
aad
jge
hlt
mov
mov
stos
addr16
int3
and
push
repnz
mov
insl
cmp
fstl
xchg
push
leave
outsb
cmpsl
sub
sahf
mov
iret
adc
into
das
pop
cmp
mov
jne
sub
out
and
sbbb
adc
fsubrs
lret
scas
adc
xor
aam
push
rcl
cmpsb
aad
dec
cmp
push
adc
jle
mov
or
nop
adc
gs
in
loop
shr
hlt
stos
repz
cmp
out
pop
divl
pop
test
add
sbb
add
bound
rolb
leave
inc
cmp
mov
mov
fldcw
nop
sub
ret
mov
adc
int3
insb
xchg
add
dec
mov
xor
jne
cwtl
add
cmp
or
dec
ja
dec
cli
les
in
xor
and
test
fildll
insb
adc
xchg
xchg
inc
dec
test
fldl
fsubrp
mov
setg
or
pushf
xchg
jno
cmp
ja
lea
mov
xlat
push
sub
fldt
gs
cmc
or
push
fists
cwtl
xor
fiadds
push
dec
and
in
adc
call
in
fcomip
mov
daa
or
pop
jns
push
das
fistpll
sbb
out
mov
in
ss
fnstenv
inc
ljmp
jg
lods
shl
adc
sahf
sbb
inc
in
lret
cmp
fisubrs
out
sbb
out
shll
movsb
repz
in
lret
or
ret
insb
loopne
pop
mov
cmp
pop
cmp
out
mov
repnz
dec
ficompl
dec
insb
sub
negl
mov
adc
dec
addr16
mov
rclb
daa
xchg
enter
jmp
hlt
inc
mov
repnz
add
dec
stos
sahf
mov
pop
imul
imul
les
xchg
mov
sub
dec
inc
fwait
xor
adc
enter
mov
repz
fistl
xchg
loopne
inc
pop
jp
xchg
jae
push
fnstsw
cmp
and
sub
aam
test
inc
adcb
jmp
int
das
jnp
cli
int3
dec
mov
faddl
mov
sub
test
scas
and
nop
adc
dec
inc
xchg
jae
xchg
sub
mov
xlat
aad
push
out
scas
or
xor
insl
pop
lods
icebp
adc
lahf
and
add
xor
push
xchg
or
jle
dec
mov
mov
cmpsl
cltd
push
sub
xchg
divl
pusha
xor
aam
je
or
gs
push
cs
lahf
mov
lret
inc
mov
mov
fldt
jbe
push
pop
xchg
and
sub
push
gs
cwtl
mov
cmpsl
and
or
fdivr
mov
cs
je
lret
nop
xor
cmp
and
inc
or
imul
cwtl
xor
and
sbb
ss
inc
mov
mov
dec
fs
stc
adc
xchg
push
pop
cmp
divl
push
xor
out
add
in
inc
stc
mov
cmp
push
mov
dec
xchg
xchg
xor
xor
outsb
insl
pushf
test
sub
scas
scas
testb
outsb
das
rcr
jno
add
cwtl
add
mov
inc
sub
inc
bound
mov
das
adc
mov
cmpsl
inc
lods
add
xchg
xor
inc
mov
in
gs
ds
imul
fstl
ds
sti
bound
jl
js
mov
movsl
mov
cvtpi2ps
loope
jnp
jns
push
ret
adc
mov
clc
lcall
xchg
in
shr
xor
xchg
cmp
mov
cmp
sub
cmpsl
lret
mov
test
dec
mov
add
call
mov
daa
dec
add
or
cwtl
sbb
fsubs
dec
rorb
and
scas
or
pop
pop
mov
or
dec
cmp
out
les
inc
enter
cmp
daa
xor
add
jle
mov
jae
fistpll
fisubrl
mov
popf
mov
fildll
cwtl
xchg
stos
enter
cmp
and
mov
dec
push
imul
fistpl
xchg
roll
or
js
sbb
mov
les
jl
dec
mov
push
mov
lahf
lock
int3
mov
mov
shl
or
pop
dec
inc
fbld
xor
jmp
xchg
fwait
pop
fmulp
cmp
aad
aaa
push
mov
cmp
call
xorb
leave
cld
mov
or
cmp
arpl
es
pop
jns
pop
dec
push
dec
cs
es
dec
fldcw
mov
aad
pop
mov
popa
push
lds
sub
push
add
push
add
push
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
