dec
jae
push
xor
je
dec
jno
add
add
push
mov
add
mov
pop
ret
mov
push
mov
add
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
cmp
jg
movl
jmp
and
mov
mov
mov
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
jne
and
movl
mov
mov
and
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
call
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
test
je
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movl
movw
mov
lea
mov
mov
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
je
movl
movw
mov
lea
mov
mov
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
je
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
and
movl
mov
mov
and
movl
mov
push
call
test
je
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
je
movl
movw
mov
lea
mov
mov
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
and
movl
mov
mov
and
call
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
cmp
jg
movl
jmp
and
mov
mov
mov
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
jne
and
movl
mov
mov
and
call
and
movl
mov
mov
and
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
mov
pop
ret
mov
push
mov
add
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
jne
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
je
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
and
movl
mov
mov
and
call
movl
mov
push
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
movw
mov
lea
mov
mov
movl
mov
push
call
and
movl
mov
mov
and
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
test
je
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
jne
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movl
mov
push
call
test
jne
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
movl
mov
push
call
cmp
jg
movl
jmp
and
mov
mov
mov
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
mov
pop
ret
lea
push
mov
add
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
mov
mov
cmpl
jle
mov
mov
movl
call
jmp
push
push
call
movl
movw
mov
lea
mov
mov
call
movl
movw
mov
lea
mov
mov
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
call
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
je
and
movl
mov
mov
and
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
je
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
call
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
and
movl
mov
mov
and
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
call
movb
test
jne
movb
push
push
call
jmp
lea
movl
mov
movl
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
cmp
popa
imul
insb
insb
add
xor
call
sub
mov
add
mov
movl
test
jne
call
push
push
call
jmp
xchg
call
movl
add
mov
movl
movw
mov
lea
mov
mov
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
call
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
je
and
movl
mov
mov
and
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
je
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
call
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
and
movl
mov
mov
and
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
call
jmp
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
mov
pop
ret
push
mov
add
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
mov
pop
ret
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
call
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
push
movl
movw
mov
lea
mov
mov
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movb
mov
pop
pop
ret
mov
adc
aas
jbe
gs
push
dec
pop
into
nop
in
push
pop
test
xorb
bound
and
arpl
out
xor
mov
mov
repz
andb
cs
inc
inc
sub
dec
fistl
andb
fsincos
loopne
in
jmp
andb
out
sbb
icebp
hlt
insl
repz
adc
push
andb
arpl
add
add
push
sbb
add
add
inc
mov
or
pop
andb
cmp
mov
sub
lds
andb
jecxz
mov
in
lods
fistps
sub
inc
jnp
cmp
xchg
std
int
xchg
cmp
xchg
into
adc
and
movsb
cmpsb
call
cmc
fs
mov
aas
ret
lahf
inc
dec
mov
shlb
pop
loop
jae
and
xor
clc
mov
xchg
xchg
pop
add
dec
in
mov
in
sub
cmp
adc
fildl
inc
mov
lret
pop
lret
pop
fsub
or
icebp
cmp
inc
cwtl
jg
mov
pushl
adcb
enter
cwtl
lcall
jecxz
aaa
stos
xor
pop
pop
sub
cmc
push
cmp
cwtl
and
fwait
sub
lock
push
jae
je
stos
push
cmpl
dec
push
jmp
cmpsl
push
sub
scas
mov
loopne
je
inc
out
inc
inc
inc
inc
or
mov
xorb
andb
jae
jo
xchg
andb
jbe
jl
subb
dec
and
cwtl
adc
add
push
andb
fwait
and
add
mov
andb
imull
andb
repz
inc
pop
repz
cmp
dec
dec
mov
pop
out
andb
jmp
andb
in
lock
imul
adc
add
add
adc
cmp
andb
daa
and
sub
sub
arpl
cmp
add
in
loopne
ljmp
arpl
mov
add
push
pop
andb
or
scas
int
sub
arpl
jecxz
mov
and
das
mov
mov
stc
inc
xchg
jmp
adc
or
clc
xchg
and
add
popl
andb
mov
sub
jp
push
popa
in
ficoml
andb
loopne
inc
inc
push
mov
xor
xchg
pop
cmp
adc
mov
or
test
adc
pop
andb
les
notb
add
mov
fwait
ja
and
popf
pop
push
fdivl
add
add
sub
das
pop
andb
xchg
mov
jno
add
sbb
push
push
ret
pusha
bound
and
jmp
pop
sub
loopne
mov
or
pop
cld
mov
sbb
pop
lds
andb
test
das
lds
push
push
pop
mov
arpl
xor
inc
aas
test
xor
pop
mov
sub
sbb
mov
test
jbe
sbb
adc
es
sbb
insb
in
pop
pop
andb
gs
cmp
loope
mov
add
mov
mov
arpl
sbb
pop
fistpl
arpl
fldenv
mov
insb
stos
xor
jbe
jp
push
cmp
adc
adc
or
fcomps
and
arpl
pop
jns
sbb
pop
jo
mov
andb
movsl
adc
mov
sbb
add
mov
aam
test
popa
mov
pop
rcrb
mov
arpl
ja
and
sub
sub
arpl
jecxz
adc
arpl
push
push
sbb
pop
or
xchg
push
add
pop
hlt
cmpsl
and
push
dec
popf
jge
mov
test
sub
or
arpl
stc
inc
sbb
dec
dec
xlat
popa
sbb
add
mov
pop
pop
pusha
adc
and
je
dec
xor
sub
or
cmpsl
cltd
pushf
sahf
sar
movsb
add
mov
mov
inc
call
ret
hlt
lcall
test
popa
mov
pop
rcrb
cmpsb
jae
sub
adc
pop
andb
mov
sub
arpl
jns
stos
lret
xchg
dec
adc
push
sbb
movsl
out
popf
loope
nop
addl
arpl
addr16
sbb
cmp
push
push
sub
inc
cs
xor
jo
or
and
sbb
xor
mov
in
sti
add
hlt
pop
add
iret
out
jmp
out
into
leave
enter
mov
mov
mov
call
xchg
nop
out
call
add
or
imul
jge
andb
and
sub
sub
xor
dec
cmp
cmp
inc
xchg
sub
or
pop
es
xor
cmp
inc
and
and
daa
cmp
adc
adc
xchg
out
scas
repnz
push
pushf
sahf
mov
outsb
fs
mov
aas
pop
mov
int3
into
inc
notb
inc
inc
add
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
add
add
inc
add
inc
add
inc
add
aas
add
xor
movl
lds
aas
add
sbb
ret
pop
mov
add
mov
add
add
dec
mov
aas
add
mov
cmpsl
gs
cmp
mov
call
aas
add
mov
mov
in
movsb
aas
gs
adc
pushf
in
stos
fldenv
mov
inc
inc
lods
mov
ss
add
cmp
fnstsw
lret
jbe
mov
lcall
cmc
pusha
das
cmp
mov
dec
aas
lea
push
mov
dec
push
je
movsl
inc
imull
jno
inc
jne
inc
fbstp
lds
xchg
xchg
dec
clc
mov
lea
lahf
or
sar
mov
jne
repz
cmp
inc
inc
rorl
inc
jno
adc
jns,pt
mov
imul
nop
out
js
aas
xchg
add
pushf
out
or
inc
dec
cltd
pusha
and
sub
push
scas
pop
notl
add
pop
pop
cmp
push
dec
xchg
xor
inc
movsl
adc
mov
adc
xchg
test
rclb
mov
ds
push
jle
jb
jno
xlat
lods
mov
orl
shrb
pop
pop
pop
jecxz
test
inc
out
xor
xchg
cs
les
call
cs
mov
xor
insb
sub
mov
push
repnz
mov
push
repz
rcl
dec
xchg
push
popa
sahf
fcomps
inc
pop
lods
push
outsl
mov
cmpl
jmp
jge
pop
int3
push
jp
popf
insl
test
jo
test
dec
jb
orl
pop
pop
in
lock
jb
sub
push
cs
mov
in
shll
jne
clc
sbb
sbbb
push
mov
mov
cld
mov
aam
mov
dec
popf
cmp
pop
mov
jno
in
mov
outsl
mov
test
xchg
push
fmuls
fcompl
aam
pavgb
fldt
inc
inc
inc
mov
mov
fimull
sub
aaa
xchg
out
cmp
test
adc
cmpsb
cltd
fnstcw
loope
addr16
cli
aaa
cmc
push
aaa
fistpl
ret
cmp
enter
dec
cli
aam
fbld
and
loope
inc
jno
inc
jne
xor
ljmp
sbb
mov
pop
add
fdivl
fsubrs
lds
int3
cmp
lcall
fs
loopne
dec
xor
sub
adc
push
in
xchg
xchg
and
and
daa
push
push
add
repz
push
out
clc
cmp
outsb
aas
int3
dec
mov
push
xchg
sbb
popa
cltd
adc
in
out
push
imul
add
xchg
or
add
push
xor
pop
cli
cmpsl
gs
lahf
arpl
push
imul
jbe
rorl
add
adc
sbb
sub
faddl
cmp
pop
inc
mov
inc
inc
adc
mov
xlat
push
lock
jecxz
xor
mov
push
in
lret
inc
enter
mov
movsb
dec
xchg
jbe
mov
and
xor
mov
test
sbb
dec
ss
jo
xor
imul
ljmp
jnp
inc
ds
mov
mov
lret
inc
dec
int
push
popl
push
adc
jbe
nop
dec
lds
sti
test
push
push
xchg
cwtl
lcall
cwtl
push
cmc
scas
mov
les
dec
iret
xchg
es
js
sti
lret
negl
out
pushf
loopne
cld
jp
adc
cli
xchg
cmp
or
fimull
or
adc
push
test
repnz
cmpsl
lock
xor
lods
rorb
sbb
push
mov
sbb
xchg
mov
xchg
mov
mov
adc
cwtl
xchg
cwtl
and
pop
sub
imul
pop
pop
push
push
movsl
mov
jne
cmp
cmp
cmp
arpl
push
gs
and
or
add
sub
sbb
out
test
jle
or
add
dec
pop
nop
jge
push
addl
pop
mulb
cltd
popa
in
rorb
scas
jae
mov
ret
dec
dec
mov
loop
mov
pop
stos
fisubrs
pop
mov
outsl
xchg
xchg
lea
mov
pop
fnstenv
outsb
loope
sub
addr16
xorl
jl
dec
les
std
and
mov
lret
sub
sub
jmp
fistpll
insb
pop
jmp
gs
ds
push
or
xchg
dec
push
inc
aam
push
repz
add
mov
call
enter
add
jg
rorb
push
stc
shrl
pop
or
daa
stos
jne
int3
or
add
dec
lahf
je
js
or
add
loopne
push
add
add
push
add
add
lcall
lods
bound
add
sub
add
out
popa
popf
jb
or
add
cmp
add
push
add
inc
or
add
add
inc
dec
fs
add
sbb
push
gs
insb
pusha
or
gs
adc
or
add
pop
orb
add
xor
sbb
cli
cld
xchg
dec
pop
cwtl
nop
or
add
nop
pop
imulb
in
mov
lods
mul
lods
imul
imul
test
andb
inc
xchg
push
or
pop
pop
in
add
popa
sbb
sub
arpl
in
popa
sub
andb
push
jg
add
mov
sbb
cwtl
lcall
andb
xchg
sbb
mov
xchg
fs
pop
aas
gs
xchg
lds
add
rcrl
inc
inc
push
ljmp
ret
into
jb
dec
inc
add
aas
add
in
call
add
out
repnz
insl
repz
sub
add
jmp
andb
adc
or
andb
cmp
andb
sbb
andb
das
adc
or
aas
add
arpl
mov
push
andb
daa
and
push
andb
ds
andb
adcl
or
and
adc
adc
test
gs
sub
lahf
xor
loopne
add
add
or
std
in
cmpsb
test
xor
jbe
aam
pop
aas
gs
xchg
mov
int3
lds
push
inc
inc
or
pop
andb
push
inc
ret
call
arpl
andb
aam
add
lods
jne
or
sub
incb
add
add
add
inc
inc
add
add
stc
ja
fistpl
daa
andb
jg
sub
xor
add
cmp
andb
xor
pop
xchg
lret
daa
ret
les
and
jmp
mov
inc
pusha
mov
add
dec
sbb
adc
sarb
cmp
add
sbb
addb
xor
pop
xor
push
push
push
jns
add
lret
or
aam
ret
int3
sbb
add
leave
jecxz
pop
in
andb
std
imul
pop
jns
cli
cld
test
adc
and
push
ret
push
inc
adc
xchg
sbb
sub
out
mov
ficoml
sti
icebp
cmp
mov
aas
inc
mov
add
pop
and
arpl
repz
gs
adc
add
test
jb
add
mov
add
subl
mov
add
add
andb
dec
adc
adc
or
jp
pop
dec
inc
add
movsb
cmpsb
sbb
cli
jbe
pop
andb
cmp
adc
andb
ficoms
or
leave
or
sub
fcompl
andb
jmp
andb
pop
sub
arpl
jno
sbb
sbb
jo
inc
add
or
mov
add
andb
test
push
add
andb
mov
xor
add
add
jg
lds
rorl
ror
dec
out
sbb
in
mov
cmpsb
subb
xor
sub
inc
xchg
stc
xor
mov
daa
in
pop
jecxz
sub
pushf
mov
xor
mov
cmp
push
push
pushf
cli
xchg
add
fsubr
sbb
cs
jne
loop
cmp
cli
cld
test
add
sub
or
and
andb
or
adc
andb
xor
andb
and
andb
daa
adc
inc
test
add
add
mov
arpl
sti
cmp
andb
inc
inc
dec
shll
andb
or
fidivrl
sub
jmp
sub
adc
outsb
adc
into
and
dec
sbb
jbe
pop
in
lods
clc
xor
inc
stc
jo
pop
enter
push
xchg
cmp
pop
popa
mov
sub
ljmp
hlt
jp
test
hlt
inc
dec
fidivrl
mov
movsl
and
fs
inc
mov
push
fnsave
xlat
xchg
dec
or
jle
or
les
lods
fbld
mov
aaa
xchg
out
cmp
sti
inc
mov
inc
aam
rcrb
mov
jmp
mov
add
push
cltd
cmp
sbb
fidivl
pop
test
jno
or
or
mov
out
inc
sub
sbb
adc
andb
sbb
andb
loope
sbb
imul
add
arpl
std
cmp
andb
push
inc
inc
inc
push
adc
sbbl
cmp
mov
andb
jg
andb
sbb
cwtl
in
xor
nop
pop
cmp
fbstp
push
cmpsb
cwtl
cmpsl
and
jecxz
aaa
stos
xor
pop
dec
sub
add
push
cltd
cmp
sbb
fisttpl
lcall
and
imul
jnp
dec
add
mov
pop
iret
adc
popf
insl
fdivl
aam
inc
mov
test
mov
in
mov
testl
cmp
cmp
xchg
jbe
outsl
jge
xchg
fstpl
fisttpl
mov
lcall
inc
std
pop
aas
add
aam
addr16
cmp
gs
push
sub
ds
jne
sbb
pop
mov
add
add
push
add
dec
dec
inc
or
fwait
xor
andb
cld
pusha
ss
or
arpl
leave
inc
sahf
pop
cmp
inc
cmpl
add
andb
xlat
or
gs
or
sbb
gs
cmp
jo
je
inc
add
xchg
pop
inc
dec
popa
mov
xchg
cwtl
out
mov
cmpsb
test
push
stos
imul
mov
add
nop
mov
push
mov
xchg
repnz
adc
in
andb
out
jae
or
fmuls
cmc
and
arpl
push
inc
inc
inc
add
mov
inc
inc
add
push
aad
sub
sbb
jp
daa
add
mov
mov
adc
lods
inc
sbb
dec
inc
inc
add
dec
lret
aam
scas
and
sbb
imul
inc
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
mov
mov
sub
jb
inc
mov
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
je
cmp
jg
movl
jmp
and
mov
mov
mov
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
jne
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
and
movl
mov
mov
and
call
movl
mov
push
call
test
je
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
movl
mov
push
call
test
jne
and
movl
mov
mov
and
movl
mov
push
call
test
jne
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
jne
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
movl
mov
push
call
test
jne
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
jne
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
call
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
je
and
movl
mov
mov
and
call
movl
mov
push
call
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
and
movl
mov
mov
and
call
movl
mov
push
call
test
jne
call
mov
pop
ret
nop
push
mov
add
mov
mov
lea
movl
lea
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
mov
xchg
sub
mov
mov
call
mov
mov
mov
mov
cmpl
jle
mov
mov
movl
call
jmp
push
push
call
jmp
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
mov
mov
dec
cmp
jae
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
movb
test
jne
movb
push
push
call
jmp
lea
movl
mov
movl
mov
mov
xchg
mov
push
mov
push
call
mov
mov
movl
test
jne
call
push
push
call
jmp
xchg
call
movl
add
mov
mov
mov
pop
ret
lea
push
mov
add
mov
movb
mov
mov
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
cmpl
je
and
movl
mov
mov
and
mov
mov
mov
cmp
jb
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
mov
mov
cmpl
je
mov
mov
mov
cmp
jbe
mov
mov
jmp
sub
mov
test
je
mov
mov
inc
mov
movb
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
mov
mov
mov
cmp
jne
movb
mov
mov
jmp
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
incl
cmpl
jne
movl
movw
mov
lea
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmpl
jle
mov
mov
movl
call
jmp
push
push
call
push
call
mov
lea
mov
subl
movb
movb
movb
movb
movb
movb
sub
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
mov
mov
call
mov
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
subl
mov
mov
add
mov
call
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
cmpl
je
movb
test
jne
movb
push
push
call
jmp
lea
movl
mov
movl
mov
mov
xchg
lea
push
push
mov
sub
push
mov
push
call
movl
xor
mov
mov
lea
movl
lea
mov
addl
mov
cmp
je
movl
movw
mov
lea
mov
mov
call
mov
call
test
je
addl
addl
jmp
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
mov
addb
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
mov
and
test
jne
incl
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
mov
dec
mov
inc
xor
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
incl
incl
incl
mov
cmp
jne
movb
test
jne
movb
push
push
call
jmp
lea
movl
mov
movl
mov
mov
xchg
mov
call
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
mov
push
mov
push
call
cmpl
je
mov
mov
mov
xchg
sub
mov
lea
movl
lea
mov
mov
mov
mov
mov
mov
pushl
mov
pushl
add
push
jmp
mov
mov
cmpl
jle
mov
mov
movl
call
jmp
push
push
call
mov
pop
ret
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
mov
add
movl
movw
mov
lea
mov
mov
call
movl
mov
push
call
test
je
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
test
jne
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
jne
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
call
movl
movw
mov
lea
mov
mov
movl
mov
push
call
test
jne
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
movl
mov
push
call
test
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
test
jne
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
cmpl
jle
mov
mov
mov
jmp
mov
inc
mov
sub
mov
mov
movl
mov
push
call
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
movl
mov
push
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
je
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
test
jne
call
movl
movw
mov
lea
mov
mov
movl
mov
push
call
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
movw
mov
lea
mov
mov
movl
mov
push
call
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
movl
mov
push
call
call
and
movl
mov
mov
and
call
movl
mov
push
call
call
movl
movw
mov
lea
mov
mov
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
cmp
jg
movl
jmp
and
mov
mov
mov
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
and
movl
mov
mov
and
movl
mov
push
call
test
je
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
test
je
mov
mov
movl
cmp
jle
movl
mov
mov
cmp
jne
mov
mov
mov
movl
mov
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
movl
mov
push
call
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
call
movl
mov
push
call
test
jne
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movl
mov
push
call
test
je
and
movl
mov
mov
and
movl
mov
push
call
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
mov
mov
xchg
sub
mov
lea
movl
lea
mov
movb
mov
and
mov
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
mov
mov
mov
mov
inc
xor
mov
dec
cmp
jne
mov
pop
ret
sub
sub
mov
inc
cmp
jne
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
cmpb
jne
sub
mov
test
je
mov
jmp
mov
inc
mov
movb
movb
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
xchg
sub
jmp
mov
movl
test
jne
call
push
push
call
jmp
xchg
call
movl
add
mov
movb
mov
mov
mov
mov
mov
mov
mov
pop
ret
je
ja
popa
add
outsb
add
xor
xor
add
add
add
add
in
add
cmp
jg
mov
mov
mov
sub
inc
xchg
and
mov
mov
mov
mov
cmp
jg
movl
jmp
and
mov
mov
mov
call
test
jne
call
jmp
mov
mov
mov
mov
mov
movw
movl
lea
movl
cmpw
jg
mov
mov
mov
movl
movl
xchg
call
mov
pop
ret
mov
cmpl
jne
cmpl
jge
movl
mov
movw
inc
movb
mov
movl
cmp
jg
inc
sub
mov
jmp
mov
mov
mov
mov
mov
movl
cmp
jne
movl
mov
jmp
xchg
mov
mov
mov
inc
mov
lea
mov
call
movb
test
jne
mov
add
jmp
mov
inc
mov
sub
and
mov
mov
xchg
ret
lea
add
pop
xor
adc
test
jp
add
pop
cmpsl
lret
push
push
mov
mov
pop
push
add
jne
lock
jbe
add
ret
cli
xchg
ret
add
fwait
in
inc
hlt
add
or
out
add
ret
out
xor
mov
add
cmp
xor
lds
cli
add
in
iret
iret
movl
inc
fbstp
push
mov
icebp
mov
mov
and
and
pinsrw
and
lock
repz
xchg
mov
add
adc
xor
xor
clc
add
or
and
mov
add
dec
mov
xor
push
enter
mov
mov
adc
leave
and
cmp
and
mov
add
xchg
push
xor
jns
out
mov
aam
out
and
add
aam
test
cmp
and
push
pop
pop
scas
mov
add
les
sub
xor
lcall
mov
aas
mov
rolb
incb
das
movsb
stos
je
inc
mov
xchg
xor
add
pop
sbb
aas
sbb
add
inc
popa
adc
add
xlat
and
add
hlt
fildll
or
stos
dec
pop
call
out
xor
inc
scas
negl
add
stos
out
add
aad
sahf
cs
or
std
ja
or
daa
xchg
push
add
movsl
add
or
push
lods
and
je
call
xchg
inc
add
movl
sbb
inc
lahf
adc
inc
add
add
outsl
xchg
jae
adc
pop
dec
ja
mov
add
add
or
ss
xor
popa
xor
stos
jbe
str
adc
sti
mov
push
push
jle
mov
lcall
mov
push
lea
inc
inc
inc
repnz
push
fmuls
mov
cmpsb
cmp
cmp
sbb
lahf
std
xor
lahf
sbb
add
mov
add
and
mov
xchg
or
mov
fs
loop
inc
fcompl
cmpsl
cmpsl
ret
xor
int3
jne
fwait
pop
pushf
add
adc
or
sbb
inc
add
add
idivb
negb
aaa
dec
stc
out
xchg
add
test
dec
dec
fimuls
adc
pop
rolb
add
add
testl
add
test
cmc
jecxz
mov
pop
roll
add
push
mov
sub
or
test
inc
add
lret
rclb
add
push
add
and
pop
adc
jle
cli
pop
jo
mov
add
mov
mov
push
mov
add
jbe
imul
mov
jecxz
insb
or
sbb
scas
int3
add
sub
sbbl
outsb
cmp
in
push
andl
xchg
out
das
add
mov
in
lds
mov
ret
out
cld
or
add
or
cmc
adc
add
mov
shrb
cmpsl
pop
fs
div
push
xorl
sbb
rorb
xorb
jno
push
add
dec
mov
nop
xor
and
xor
lret
dec
mov
mov
dec
pop
add
add
push
sahf
inc
add
rcrl
popa
popf
adc
inc
xor
dec
pop
sbb
adc
add
push
add
add
mov
jae
inc
add
jg,pt
dec
dec
jge
sahf
imul
scas
dec
ss
ss
jle
testb
or
faddl
cmc
xor
jae
pop
and
enter
gs
xchg
jp
out
mov
cltd
add
pop
or
ret
cli
jb
xchg
dec
out
push
cmp
mov
add
mov
iret
add
scas
cltd
test
jle
cld
lret
mov
test
les
scas
stc
scas
add
mov
imull
nop
cmp
repnz
add
fdivl
add
std
popa
dec
test
or
int
and
enter
push
or
mov
sbb
dec
rcrb
or
in
les
scas
movsb
dec
add
bswap
clc
xchg
xchg
mov
lcall
mov
mov
dec
add
add
and
ja
loope
mov
add
aaa
mov
mov
filds
std
fdivs
mov
pop
mov
xor
mov
imul
sub
add
stos
insl
loop
aam
sub
xchg
xlat
in
add
mov
dec
pop
cmp
repnz
aas
fisttpl
lret
lcall
cwtl
daa
pop
incb
test
mov
add
add
data16
js
mov
jbe
pop
rcr
popa
sub
sbb
add
into
repnz
add
xlat
fiaddl
mov
test
jo
out
or
cs
negb
add
data16
xor
cmp
dec
add
imul
leave
push
cmpsb
loopne
in
xor
out
push
cwtl
push
aad
outsl
repz
cmp
xchg
call
fcoml
add
mov
cltd
sbb
jge
mov
je
in
test
add
ficompl
cwtl
add
movsb
mov
ret
arpl
mov
xchg
mov
add
mov
inc
adc
push
xor
and
add
mov
mov
add
sbb
movsl
xchg
mov
imul
adc
add
mov
xchg
push
fidivrs
mov
push
ljmp
jle
add
pop
into
cmc
ljmp
jmp
push
add
in
mov
loope
je
add
or
fidivrl
movsl
push
aam
test
pop
cmp
iret
mov
adc
add
negb
ret
rep
pop
xor
mov
inc
scas
filds
jmp
sbb
add
lcall
lods
xor
mov
mov
rolb
and
add
jne
movsb
loop
mov
jmp
sub
push
push
add
iret
popa
stos
jg
ljmp
into
xlat
xchg
xchg
in
mov
or
push
dec
mov
daa
clc
cmp
sub
arpl
add
sub
mov
into
cmpsl
xor
add
add
mov
mov
cmpsl
rorl
push
jnp
idivl
shl
or
jmp
rcr
fldl
outsl
add
add
xor
xor
out
dec
fiaddl
jbe
fpatan
xor
repz
pushf
shr
xchg
push
roll
jne
add
add
xchg
dec
push
add
and
inc
insl
xchg
iret
add
mov
aaa
mov
add
pop
sti
push
mov
adc
addl
in
or
ljmp
xor
cmp
push
test
add
sbb
inc
push
adc
cmpl
cmp
sbb
xchg
popf
sub
scas
add
add
fidivs
mov
insl
in
add
sarl
mov
int
je
addb
mov
adc
mov
sbb
enter
adc
pop
pop
leave
xchg
adc
inc
jne
add
inc
push
movsb
testb
aad
cmpl
add
pop
call
mov
adc
jnp
lods
fidivrl
stc
sbb
mov
xchg
lods
push
jo
or
sahf
iret
test
add
std
add
add
xchg
iret
inc
inc
push
lods
sub
jo
sub
cli
or
or
sar
popa
int3
mov
sub
or
jno
add
sub
xchg
out
data16
psadbw
mov
arpl
lahf
popf
and
lea
sbb
or
dec
mov
pusha
xchg
push
add
es
mov
sbb
xchg
pop
xchg
pusha
je
mov
xor
adcl
leave
movl
ja
xor
int
rorl
fadd
mov
scas
cmp
insb
xchg
xor
cs
pop
mov
add
push
inc
loope
stos
pop
xchg
and
sub
insb
add
mov
mov
add
pop
and
xchg
call
mov
pusha
loope
add
sub
arpl
sahf
add
add
mov
cmovno
push
lahf
dec
cli
fs
iret
push
insl
jl
add
dec
push
add
insb
lock
xor
or
imul
pushf
xchg
add
jle
fsubs
push
testl
dec
pop
sbb
jg
imul
lods
add
cmp
add
popa
dec
add
rclb
dec
xor
and
fbld
xchg
in
popf
lock
ret
adc
mov
sbb
mov
fstl
nop
add
dec
cmpl
or
sub
cwtl
add
or
adc
mov
movsb
mov
sub
adc
or
push
test
dec
mov
cmpsl
addl
or
push
adc
scas
and
add
fadds
leave
out
add
es
xchg
stos
add
add
outsb
sbb
mov
dec
xchg
lahf
add
leave
inc
dec
mov
repz
in
insl
lret
jbe
push
mov
add
add
and
nop
xchg
mov
xorl
inc
rcrb
inc
out
jns
movl
add
inc
insb
pop
xchg
add
add
test
outsl
add
fs
nop
push
andl
adc
mov
popa
in
push
cs
adc
fdivrl
jo
cli
push
xor
or
inc
sbb
lahf
lock
jne
add
push
or
lock
jmp
add
add
mov
sbb
inc
test
test
leave
dec
jl
lds
inc
pop
add
inc
inc
mov
or
cmp
imul
sub
dec
inc
add
add
jg
adc
aam
aas
test
dec
std
popf
jg
bound
out
pop
jno
in
ss
stos
pop
push
cmp
cli
bnd
popf
push
lea
dec
xchg
std
divl
pop
inc
roll
add
lock
xor
add
ja
mul
add
mov
xorl
push
insb
adc
jae
testb
add
jp
push
add
stos
pop
dec
add
add
pop
and
pop
inc
mov
aam
sbb
insb
je
add
repz
pop
mov
jno
inc
lds
mov
mov
add
mov
dec
add
adc
in
mov
and
add
jl
gs
es
clc
and
or
pop
dec
mov
stos
push
xor
xor
add
sub
and
mov
push
aas
jle
into
or
loopne
aaa
mov
add
add
popf
mov
inc
mov
out
std
jne
popf
xchg
rorl
mov
sarb
cmp
ss
cvtpi2ps
adc
sbb
fldl
aam
xor
ret
fiadds
push
add
pushf
repnz
xchg
mov
sarb
xor
dec
xor
addr16
add
sbb
pop
mov
je
push
add
aas
leave
pop
fstpl
mov
lds
data16
mov
clc
clc
stc
add
add
filds
push
pop
add
in
bound
ret
jo
dec
inc
mov
dec
mov
dec
and
jmp
cmpsl
add
cmp
daa
jbe
pusha
loope
xor
push
dec
sub
ret
in
mov
or
out
mov
lret
sub
lahf
dec
xchg
sub
dec
push
mov
sub
xor
adc
add
jae
xchg
daa
mov
dec
lock
dec
add
faddl
push
mov
roll
in
sub
call
ss
fcmovb
jne
xlat
cmp
sub
jge
add
je
or
out
rcr
jns
cmp
out
add
je
lock
dec
cmp
movb
cld
xor
aam
scas
add
into
pop
daa
call
jp
shrb
inc
sbb
and
adc
rcrl
scas
add
xchg
xor
add
aam
je
jo
scas
mov
popf
adc
mov
dec
leave
dec
rclb
jbe
loope
out
mov
test
add
and
jge
lock
xchg
mov
pop
daa
or
paddd
in
iret
fsubrp
mov
xor
xchg
xchg
pop
out
and
mov
fisttpl
inc
ljmp
xor
call
test
fcompl
or
imul
mov
cmp
adc
jb
frstor
push
jne
sti
mov
lret
sub
and
leave
or
push
pushf
push
fimull
pop
imul
xchg
add
in
ss
sbb
fimull
divl
xchg
sahf
cli
adc
filds
add
add
cli
lods
leave
push
sbbb
xor
lods
push
push
lret
sbbl
popf
dec
outsl
lds
pop
jne
rolb
add
mov
add
mov
cmp
rorb
push
add
dec
imul
add
repz
out
mov
sub
imul
pop
or
inc
pop
mov
shll
mov
cmp
cmp
mov
popa
or
cmp
inc
jg
add
add
mov
and
test
mov
jg
mov
std
push
loope
imulb
int3
rclb
loop
add
xchg
add
add
mov
mov
loop
push
inc
dec
cmpsb
push
mov
ret
or
pop
cmp
sbbb
lds
lcall
daa
fstpt
enter
std
and
popf
add
jno
ret
aaa
test
jb
inc
jp
sub
add
inc
fcmovne
mov
icebp
cmp
mov
movsl
and
mov
adc
popa
mov
jge
add
lods
dec
add
add
out
cmc
push
dec
lock
mov
dec
icebp
xchg
add
lret
add
popa
and
lods
add
add
cld
stos
mov
and
jae
sub
push
popa
push
into
rolb
out
rorl
mov
sbb
dec
jecxz
push
adc
add
pop
ret
test
add
mov
out
add
loopne
dec
push
lcall
inc
testb
inc
add
and
add
js
xor
cmp
sbb
jnp
sub
or
add
in
push
add
repnz
xor
cmp
repz
bound
orb
or
mov
cmp
dec
fwait
cltd
out
dec
out
jl
mov
aas
data16
lret
mov
xor
out
xchg
mov
and
and
lods
xlat
ret
cmpsb
inc
repnz
call
es
add
loopne
cmp
add
push
sub
out
sbb
pusha
clc
add
sub
cmc
jns
add
scas
outsb
push
mov
scas
xlat
fistl
bnd
add
adc
push
daa
and
shlb
mov
es
bnd
mov
movsb
out
andl
aam
pop
xor
add
cmc
jmp
stc
movsb
inc
roll
sbb
sub
lret
out
mov
popa
push
add
adc
imul
sub
loopne
nop
lods
test
jo
enter
sbb
out
xchg
clc
push
popa
aad
add
scas
movsb
xchg
imul
movsb
add
sbb
add
mov
inc
cwtl
jge
mov
xchg
add
out
sbbl
jne
push
mov
push
outsb
push
shlb
jne
insl
sub
dec
or
movsl
testl
enter
inc
pop
add
inc
mov
pop
xor
mov
mov
push
mov
push
xor
into
inc
push
or
add
push
stos
rcll
cmpsb
dec
adc
mov
jae
add
pushf
hlt
xchg
ret
xchg
test
add
jle
push
int3
mov
mov
and
mov
clc
inc
push
add
cmp
inc
add
outsb
mov
insb
push
and
pushf
mov
mov
push
lcall
sub
ret
lret
inc
sbb
push
ljmp
std
ret
rcrl
or
xor
dec
mov
sahf
or
sub
and
xchg
lock
ja
in
incl
cmpsb
xor
mov
lea
jg
sub
add
mov
fstps
loopne
add
adc
loopne
xchg
sub
add
test
adc
add
dec
adc
xchg
add
rolb
data16
cmpsb
fadds
sti
hlt
sbb
mov
shlb
push
les
imul
pop
push
int
mov
add
rcrl
fsubr
jge
stos
pop
adc
xor
scas
and
jb
adcb
leave
add
lcall
xor
clc
mov
or
sub
nop
mov
add
pop
bound
sbb
out
push
sub
imul
add
jg
mov
insb
adc
les
add
add
loope
inc
sbb
fcompl
in
adc
push
loopne
jge
sbb
add
add
add
and
lods
mov
add
insb
adc
scas
stos
adc
add
sub
adc
ret
out
leave
add
sarl
or
pop
adc
loopne
pop
add
mov
add
mov
sub
or
sub
and
or
push
or
incb
lock
push
xchg
add
lods
addb
movsb
mov
xor
pop
inc
push
sub
jecxz
mov
xor
movsl
add
stos
pop
sub
ss
push
push
add
les
mov
shll
data16
outsl
pop
add
mov
dec
das
or
add
mov
xchg
imul
pop
add
ret
push
test
roll
or
mov
add
loope
jmp
add
mov
shrl
ret
adc
fcomps
adcb
mov
jp
enter
lahf
dec
jmp
insl
daa
addb
inc
dec
cmp
sbb
dec
jbe
adc
jno
sti
cmpl
inc
jb
in
jne
cmpsb
addb
sub
add
add
sbb
lcall
sub
insl
or
xor
xor
pop
add
add
and
arpl
jmp
add
mov
adc
sbb
dec
xchg
decl
test
enter
xor
add
add
popl
adc
int
push
inc
push
int
ret
or
add
add
outsb
popf
pop
fcos
xchg
sub
push
sbb
mov
imul
add
sahf
in
mov
mov
mov
add
cld
in
mov
add
sub
nop
add
add
pop
xchg
xor
fdivs
and
add
cs
pop
cmpsb
xchg
lock
aaa
out
decb
pop
movsb
add
push
mov
les
mov
mov
aad
stos
stos
pop
js
push
in
ficomps
arpl
jo
xchg
popf
and
repz
lods
add
insl
pop
add
rclb
outsb
lret
hlt
cwtl
dec
or
add
add
adc
ds
jo
xchg
add
outsl
cmp
notb
test
pop
lods
inc
add
fadds
or
or
jae
stc
loop
xor
lret
mov
add
xor
jne
add
fcmovbe
push
or
jnp
iret
jle
fsub
add
inc
add
aad
sbb
dec
mov
cmpsb
popa
sbb
sbb
xchg
adc
lret
lret
insl
sbb
or
xchg
jns
jl
cltd
es
icebp
and
add
mov
loope
add
insl
jae
pop
jle
add
fistps
add
push
pop
loopne
add
cmp
adc
xlat
mov
lret
lea
pop
test
add
lahf
xor
mov
repz
pop
loop
inc
add
xchg
mov
scas
nop
xor
lahf
adc
mov
outsl
inc
and
and
and
push
push
inc
pop
mov
mov
jno
add
add
xorl
pop
cmp
push
mov
xor
add
inc
mov
int
push
adc
jl
lret
dec
je
sbb
nopl
inc
cmc
add
sbb
cs
pop
push
xchg
cltd
in
dec
cmp
pushf
push
mov
and
pop
add
push
subb
mov
loope
mov
add
and
inc
imul
mov
out
pop
add
xchg
push
popl
sub
pop
outsl
add
sahf
test
jle
xchg
out
inc
pop
lods
inc
mov
push
sub
and
dec
lgs
gs
push
add
mov
inc
add
pop
adc
and
fwait
stos
add
add
cmpsb
aam
dec
jae
jle
sahf
fmul
add
pop
frstor
pop
add
cli
jmp
decb
mov
sub
pushf
and
mov
scas
daa
sub
mov
sub
mov
xor
sarb
mov
inc
movb
je
je
test
dec
into
add
cs
sub
fnstenv
mov
jp
add
xor
adc
popl
fimull
jmp
enter
in
inc
sti
mov
mov
pop
aad
aaa
arpl
imul
mov
inc
add
icebp
stos
inc
dec
outsl
adc
adcb
or
pop
leave
decb
outsl
push
mov
or
jnp
xor
js
xchg
add
add
movb
repnz
add
add
cmp
add
sbb
js
leave
fidivrs
aaa
add
aas
xlat
and
add
add
cmpsb
mov
ficompl
jmp
inc
mov
xor
int
scas
cmp
add
stc
cltd
mov
pop
pop
add
mov
les
push
add
push
and
jae
out
testl
out
sbb
in
push
aad
sub
pop
mov
rcll
add
rolb
push
xor
xchg
xchg
xorl
lds
inc
cmp
daa
add
cmp
ss
out
pop
out
inc
add
pop
lods
js
pop
xlat
inc
lcall
mulb
nop
sar
stc
add
jnp
in
pop
push
pop
dec
cmpsb
lods
fs
iret
xchg
dec
mov
imul
sbb
xor
push
add
mov
and
pusha
sti
nop
or
jp
xchg
jb
dec
decl
dec
push
adc
dec
std
es
mov
stc
cmp
mov
xchg
and
icebp
das
or
inc
pop
iret
es
sbb
sbb
call
add
sub
adc
cmp
nop
dec
or
shrb
mov
add
rcrl
int
pop
add
clc
lock
ret
and
jl
push
add
pop
xchg
add
sahf
cld
or
into
mov
push
outsb
pop
aaa
clc
push
cmpsb
fistpl
add
sbb
push
arpl
cmp
leave
push
stos
enter
add
lea
add
jae
les
stos
add
pop
add
mov
imul
iret
inc
cmp
jae
enter
push
jmp
stos
add
pop
jmp
jo
dec
push
xor
sti
xor
xchg
adc
push
or
lods
add
jns
sbb
pusha
fcomps
push
pop
inc
add
xor
int
loop
loopne
pop
sub
xchg
jle
lahf
rolb
sbb
loopne
jp
add
dec
roll
movsb
sub
js
movsl
loope
test
inc
lock
cmp
scas
stos
call
jp
add
or
jbe
or
loopne
add
inc
lds
jg
in
scas
adc
xchg
dec
add
mov
sbb
mov
aad
mov
add
rolb
repnz
jg,pt
xor
pushf
mov
scas
add
leave
xchg
sahf
jns
push
sub
add
xor
lods
mov
inc
mov
inc
jmp
out
ret
mov
enter
sbb
push
add
int3
sub
add
and
mov
loop
xchg
lock
dec
push
cmpsl
push
cmp
add
popa
xchg
add
inc
mov
push
mov
andl
rorb
mov
mov
add
lock
lds
pop
adc
and
in
add
shrb
stos
lret
aas
jl
add
out
add
sub
fcomi
jo
orb
lea
stos
outsl
test
scas
add
cs
dec
ror
jns
jne
jbe
xchg
add
incb
and
push
xchg
jbe
or
fmull
xchg
add
cwtl
mov
stos
lcall
xor
xchg
mov
jecxz
adc
lcall
fs
push
xchg
add
push
xchg
sbb
push
push
flds
pop
in
fadd
jb
and
push
loope
xor
inc
test
lahf
loope
iret
push
jbe
or
js
movsb
inc
les
testb
mov
sub
mov
or
aad
loope
pop
pop
sar
repnz
cmp
inc
lds
lcall
in
add
add
repnz
or
sub
pop
clc
and
es
fwait
cmpl
add
out
add
cmp
mov
or
add
add
add
add
outsl
jns
adc
xchg
cld
ja
add
sbb
imul
pop
add
pop
jae
adc
sbb
mov
sbb
add
add
pushf
loopne
xor
cld
dec
aas
push
add
idivl
sbb
test
pop
roll
add
add
js
xor
pop
lret
and
sbbb
fwait
iret
xorl
mov
pop
adc
fsubrl
add
cltd
fiaddl
mov
in
adc
and
fisubrs
in
xor
shrb
imul
dec
inc
push
and
mov
cmpsl
jl
test
xchg
rorb
fdivrs
outsl
add
sub
add
bsr
add
mov
in
jp,pt
mov
add
jns
xchg
jmp
aad
js
add
cmp
add
das
add
inc
sti
pop
pop
mov
add
add
jp,pt
add
cmp
and
int
out
cmc
push
lock
cmp
stc
mov
push
mov
inc
mov
mov
ja
mov
mov
andb
jl
bndstx
jae
in
sbbl
add
mov
mov
add
sub
add
or
push
imul
das
aad
push
xor
ja
fadds
and
cmp
xchg
jl
push
sub
inc
ss
xor
sub
pusha
push
imulb
cwtl
out
inc
nop
xchg
jnp
jl
mov
push
sub
in
ljmp
fwait
sub
jp
mov
xchg
std
in
mov
mov
add
loope
push
cld
add
cmc
add
addb
inc
add
add
cmpsb
add
gs
aad
test
sbb
add
inc
pop
lea
jecxz
sbb
jge
cs
add
or
jge
adc
sbb
push
clc
je
jl
mov
sbb
add
movsb
cmp
dec
je
jb
and
je
xchg
scas
jbe
jb
jno
sub
mov
loop
add
enter
out
mov
jp
add
stc
or
cmp
add
sbb
in
add
popa
mov
mov
inc
gs
iret
sub
das
int3
add
out
cld
push
in
pop
and
jns
add
add
pop
clc
mov
pusha
add
inc
dec
cmpsl
lock
add
add
cmp
adc
cmp
xchg
jae
xor
out
lahf
mov
mov
add
pushf
sub
loop
pop
sub
scas
add
or
mov
das
std
pushf
fmulp
js
dec
mov
lret
notl
cmp
add
mov
add
jo
add
push
test
dec
add
xchg
imul
and
iret
clc
add
dec
add
add
idivb
loope
push
ss
dec
fldenv
push
out
pop
add
xchg
fisubrs
xchg
fstps
add
add
movsl
pop
insl
aaa
loopne
add
fs
mov
jge
sahf
and
or
in
fidivs
push
fs
jno
lret
add
je
clc
push
out
push
test
scas
xor
into
cmpsb
cld
and
mov
out
jmp
ja
add
dec
push
add
mov
add
scas
mov
add
dec
insb
xor
push
fstps
rcl
mov
jne
add
pop
jg
mov
jo
pusha
add
and
pop
inc
and
out
add
mov
add
add
add
sub
add
addr16
enter
fdivrl
add
add
cmp
mov
push
and
pop
xor
jg
popa
xlat
je
aam
xor
xchg
mov
jle
or
adc
in
cmpsb
add
clc
addl
outsl
sbbl
mov
cmp
and
roll
test
jmp
iret
addl
jno
add
dec
mov
adcl
das
add
add
in
xchg
add
or
adc
pop
dec
cmpsl
fs
daa
shlb
sbb
add
daa
aad
dec
insl
add
lea
ret
add
dec
xor
stc
enter
xor
and
add
push
add
jno
fwait
ja
mov
add
dec
addr16
lret
subb
mov
pop
sub
mov
inc
ss
adc
cwtl
loopne
mov
jo
jbe
outsb
adc
add
fnstsw
xlat
fchs
add
nop
pop
cmpb
pop
push
data16
enter
add
jne
push
or
push
jl
pop
call
add
jns
ja
movb
adc
pop
sub
mov
call
add
cld
push
pop
in
add
pusha
filds
int3
iret
ret
add
pop
movb
dec
iret
dec
cmp
cmp
lods
pop
outsb
imul
lods
or
nop
xor
push
ret
les
cltd
mov
add
add
add
sarb
fstpl
out
inc
pop
mov
fsubrs
js
xchg
add
mov
cmp
mov
add
dec
mov
add
push
mov
mov
mov
movb
xor
add
jle
nop
and
add
lea
jo
out
mul
shlb
inc
dec
int3
mov
mov
sbb
inc
ret
sbb
push
mov
inc
jno
inc
and
pop
adc
iret
inc
mov
int
xor
jbe
add
sahf
pop
in
mov
push
lcall
loop
pop
add
and
sbb
mov
mov
test
add
xchg
or
outsb
sahf
xlat
jo
add
or
add
add
leave
or
jo
dec
data16
lret
adc
push
xchg
and
fsubrl
mov
add
addr16
lret
add
jne
popl
push
xor
mov
dec
add
mov
lods
call
jl
aas
xchg
push
fldenv
pop
sub
pop
add
lods
mov
test
add
xor
pop
inc
frstor
cmp
ss
nop
add
sub
xchg
sbb
fbstp
push
add
mov
dec
xchg
cmp
pop
stos
lock
popa
push
cs
push
sub
movsb
js
sub
cld
divb
jae
push
movsb
add
add
pop
scas
int
jle
push
mov
push
jmp
fwait
mov
add
dec
rcr
dec
ret
add
mov
mul
pop
xchg
cmp
mov
icebp
xchg
dec
hlt
inc
xor
dec
paddq
add
add
out
pop
push
out
stc
xchg
jmp
or
mov
fdivr
out
jb
push
mov
filds
mov
inc
sub
inc
add
outsl
fsubrp
int3
aam
ret
jmp
test
pop
jno
mov
add
out
add
add
iret
push
xchg
and
stos
cmp
push
cmp
add
stos
pop
add
jno
sbb
add
mov
icebp
add
enter
dec
jb
mov
test
push
scas
xchg
dec
dec
lea
xchg
jg
adc
jmp
inc
jge
enter
cmp
aas
and
movsl
movsl
mov
out
pop
lea
add
in
cmc
add
add
and
or
add
mov
and
roll
out
add
cli
and
testl
cmp
add
pushf
xorb
cmpsb
add
mov
pop
add
es
mov
rcrl
mov
cs
adc
out
push
jae
push
ret
sub
std
cli
add
das
scas
sbb
cmpsl
add
sahf
jo
add
sub
push
roll
push
add
jmp
xchg
pop
test
je
rcrb
xchg
lea
shlb
cmp
cmp
add
jl
mov
add
adc
and
mov
loop
test
add
and
xlat
add
outsl
adc
arpl
add
pop
mov
mulb
push
outsb
test
stc
cmp
xchg
add
sbb
lods
inc
mov
inc
lret
fcomps
js
or
add
cltd
mov
add
fcmovne
cmp
dec
mov
pop
inc
in
arpl
aad
inc
in
sbb
movb
jnp
cs
jb
jbe
mov
daa
xor
pop
lds
testl
cli
ja
fs
add
push
push
div
popa
fnsave
add
pop
push
dec
adc
pop
add
adc
es
imul
add
dec
fcmovbe
mov
mov
add
loop
jle
mov
dec
test
outsb
les
iret
cwtl
add
push
aas
sbb
sbb
and
repnz
mov
clc
push
sub
addb
movsb
cmp
in
xor
sbb
mov
jne
add
add
xchg
outsb
clc
push
test
mov
add
sub
movsl
outsb
add
insb
mov
jmp
fwait
das
mov
add
xor
add
add
add
shll
insl
xchg
sub
dec
or
cld
mov
mov
adc
mov
jb
cmp
lock
add
jle
iret
mov
mov
movsb
xchg
test
daa
add
add
test
mov
xchg
mov
aas
add
jbe
mov
adc
jecxz
add
cmpsb
insb
dec
loop
xorl
aam
xchg
lock
call
lret
fiaddl
cs
add
mov
push
add
jbe
mov
adc
xchg
iret
scas
add
or
nop
cli
movsb
mov
push
sar
push
lock
pushaw
dec
add
push
stos
xlat
adc
add
add
pop
je
aad
jg
push
dec
add
dec
mov
in
dec
pop
jb
cmc
js
inc
fisubrl
lcall
sti
jbe
nop
xor
add
or
lods
jmp
test
cmpsb
mov
dec
sub
pop
dec
mov
xor
xor
out
xchg
inc
mov
repz
enter
mov
add
outsl
movb
xchg
add
mov
sub
ds
xchg
icebp
add
xchg
xor
xlat
dec
mov
movsl
aad
addb
push
repnz
jae
dec
xchg
inc
mov
xor
fistpll
test
push
fdivrl
xor
cli
add
mov
and
ljmp
outsb
add
cmc
sub
jb
mov
xor
push
xchg
xor
lock
inc
push
jb
adc
mov
scas
std
lahf
mov
hlt
or
push
jmp
ror
sub
jecxz
lcall
nop
sub
cmp
pop
incl
fs
xlat
and
inc
pop
lahf
add
xchg
cmp
cpuid
mov
sub
push
jns
ds
mov
les
mov
mov
pop
mov
outsl
add
cmp
icebp
popl
or
mov
loope
ja
imul
jp
js
xchg
or
xor
inc
std
xchg
pushf
sbb
add
stos
add
movsl
add
repnz
mov
in
imul
dec
mov
mov
xchg
inc
push
imul
mov
or
pop
data16
cmpsl
adc
add
cli
mov
add
shll
or
cmp
in
scas
addr16
add
jae
pop
icebp
add
divb
add
xchg
add
xchg
push
jne
arpl
arpl
leave
xor
sub
test
cld
push
les
add
pop
pusha
push
xor
sbb
pusha
in
nop
dec
adc
lahf
jnp
lret
mov
add
ljmp
xlat
dec
mov
sbb
rcll
mov
shrl
popf
sub
xchg
repz
insb
pop
addl
and
mov
out
repz
nop
repnz
in
repz
insb
adc
mov
mov
add
and
xchg
xor
sbb
dec
inc
cwtl
pusha
jne
rorl
push
clc
filds
addl
rclb
mov
movsl
roll
outsl
add
mov
xor
mov
jg
sahf
push
fcomip
push
js
aaa
add
sbb
lds
shr
mov
arpl
dec
gs
cwtl
xchg
xchg
movsl
das
and
dec
shl
push
int3
sarb
add
adc
add
inc
cmp
popf
in
add
das
in
xor
push
add
or
jmp
jg
sbb
add
jnp
fiaddl
sahf
mov
leave
mov
js
add
xorb
jg
cmp
sbb
jmp
pop
fists
lods
int3
xchg
mov
add
push
add
fstpl
lcall
add
mov
pushf
stos
inc
ljmp
loop
pop
push
int
sbb
cs
jnp
roll
add
and
lret
inc
outsb
gs
mov
and
ja
movsb
jp
gs
fldl
pop
cmp
sbb
mov
add
call
iret
sub
mov
sti
flds
outsl
addr16
lret
jecxz
inc
mov
mov
dec
lcall
jns
int3
push
xchg
dec
mov
push
inc
enter
cwtl
pushl
ja
xor
jle
loopne
lds
jmp
xchg
adc
add
sbb
jnp
int3
add
add
cmp
xchg
add
push
adc
fs
loop
and
push
sbb
mov
and
add
ja
fcmovbe
add
cwtl
sbb
stos
lds
movsl
loopne
or
dec
push
aas
dec
dec
add
pop
dec
sbb
push
in
enter
out
jmp
movl
mov
ficoms
sub
mov
pushf
das
fcmovnbe
ds
dec
sbb
sub
in
jno
mov
add
xor
cli
add
arpl
cmp
sub
hlt
adc
dec
clc
jecxz
out
mov
sahf
add
icebp
aam
mov
add
jge
out
add
and
push
add
idivl
mov
sti
pop
arpl
jmp
mov
sub
lcall
mov
dec
fdivrs
mov
mov
add
repnz
add
int
mov
xor
add
add
fucomi
loop
jp
ljmp
pop
ret
loope
sub
mov
add
popl
adc
nop
pop
add
scas
ret
jle
aaa
repnz
cmpsl
je
cli
and
add
in
lds
or
cmp
or
inc
aam
popa
mov
mov
add
fldcw
add
idivl
lahf
dec
std
mov
jl
jb
mov
and
add
pop
xor
add
je
iret
in
sub
xchg
push
push
gs
popa
adc
add
add
adc
inc
push
out
adc
rorl
mov
outsb
cld
sub
jle
sbb
mov
or
cmpsl
mov
adc
mov
pop
inc
enter
in
mov
jl
add
cltd
push
add
in
es
push
inc
aam
push
inc
sbb
jle
inc
icebp
fcompl
aam
add
inc
add
cmp
xchg
adc
shl
inc
jo
push
mov
add
add
mov
add
pop
add
and
xchg
jb
imul
inc
nopl
out
add
outsb
lods
fnsave
inc
loope
call
fiadds
inc
xchg
sbb
loopne
inc
testl
int
adc
inc
add
cmp
jae
push
or
fisubrs
popa
fwait
xchg
adc
daa
mov
repnz
xchg
test
lock
je
inc
nop
aad
add
out
bound
bound
lahf
icebp
adc
ds
add
je
push
add
es
fndisi(8087
insb
xlat
dec
shlb
loop
add
js
rolb
push
pop
push
loop
out
popa
jecxz
lods
fsubrl
add
inc
mov
sub
or
sbb
and
push
roll
adc
sbb
add
xchg
dec
aas
daa
repnz
mov
push
adc
dec
leave
sbb
test
add
and
pop
dec
aaa
fmull
mov
jmp
mov
mov
jl
add
jno
test
subl
cli
fdivr
and
bound
cmp
push
add
mov
xchg
xchg
std
aad
dec
jge
add
fsubrl
add
xor
pusha
xchg
pop
and
mov
jp
subl
push
add
pop
add
mov
jns
test
stc
cmpsb
stos
mov
or
js
sbb
stc
ret
add
into
xchg
add
mov
cmpsl
int3
add
mov
push
test
mov
cmpsb
add
inc
mov
xor
add
out
add
mov
dec
in
ficoms
popf
enter
sbbl
mov
aas
xchg
outsb
xor
mov
cmp
scas
or
pop
call
pop
shlb
add
add
cmpsl
add
cmp
push
lds
add
mov
push
inc
fildl
lods
jae
rclb
fnsave
add
ja
add
sub
push
add
push
add
mov
cmpsl
push
push
pop
pop
enter
test
mov
jp
pop
push
fs
sbb
dec
add
daa
push
or
adc
fs
add
add
test
add
push
sub
das
mov
sub
jb
or
stc
hlt
add
inc
jns
xchg
xor
or
fnstcw
push
or
mov
adc
xor
mov
movsl
ffreep
mov
pop
or
add
mov
add
addl
xor
cmpsb
mov
sbb
cli
push
mov
adc
cmp
movb
outsl
sahf
sbb
lea
into
enter
std
cmp
ss
pop
add
dec
add
jp
imul
mov
test
jge
lds
add
cmp
dec
repz
es
add
dec
cltd
dec
fdivr
outsb
and
sbbl
add
add
sti
sub
cli
add
cmp
addr16
pusha
add
add
or
push
dec
cs
cmpsb
cmpsb
xchg
jae
int
xor
jg
data16
movsl
mov
sbb
das
push
popa
add
stos
add
subl
and
cmp
jg
stos
sub
sbb
add
pop
xor
movl
cmpsl
ds
fildll
in
or
sti
cmp
fwait
xchg
add
iret
fbstp
lcall
cltd
xor
aaa
adc
scas
add
add
add
daa
int
push
or
add
bound
sub
mov
or
inc
xor
mov
push
mov
mov
sub
or
fwait
sahf
sub
mov
add
lcall
loopne
roll
sbbb
add
mov
je
cwtl
pop
xchg
jge
dec
add
inc
sub
cs
sub
cwtl
lods
push
cmp
pop
jg
sahf
data16
sbb
fcomps
xchg
fildl
cmpsl
jno
add
jl
mov
mov
push
negb
jmp
lods
mov
jle
inc
in
jb
ror
push
add
add
mov
fldl
ljmp
pop
or
or
fcomi
fldt
mov
fs
popf
xor
push
pop
imul
cmp
mov
or
jle
add
push
cmp
jo
stos
sub
sub
and
xchg
sbb
push
xor
pop
lds
repz
add
pop
cmp
jns
cmp
aas
dec
add
nop
cli
push
mov
push
outsl
enter
jl
add
dec
add
xorb
sbb
pop
outsl
cmpsl
lds
mov
push
aad
mov
and
jbe
xchg
pushf
pop
jb
xchg
pushf
sti
cmp
pushf
test
data16
out
jl
ds
xchg
jle
add
nop
xchg
pop
xlat
xor
push
andl
frstor
jp
mov
sub
jmp
jecxz
loope
add
repnz
in
dec
out
push
aaa
add
iret
scas
and
das
xor
testb
and
sub
outsb
cli
lea
aas
add
mov
movsl
jg
outsb
lret
popa
cltd
add
cmp
dec
jbe
mov
iret
add
leave
push
subb
add
imul
add
lds
inc
cmp
ret
pop
movsb
or
int3
xchg
outsl
push
cmpsb
add
add
mov
ss
xor
mov
mov
push
imul
add
pop
xchg
shll
push
xor
ljmp
gs
mov
stos
clc
lea
inc
jl
push
pop
xchg
fldl
jae
push
test
add
xor
ds
loope
or
add
lahf
and
adc
jmp
add
ss
jecxz
jno
and
sub
bound
insl
out
ljmp
and
sub
movsb
das
gs
insl
add
add
clc
outsl
push
sub
and
out
outsb
pop
add
shrl
add
pop
add
add
lcall
aaa
out
add
mov
stc
push
xchg
sub
mov
imul
pop
adc
mov
jbe
ljmp
adc
mov
add
mov
out
out
lods
push
add
jmp
mov
das
daa
and
add
test
jae
inc
add
jmp
add
lldt
jl
add
pop
add
bound
fcoml
xlat
dec
gs
xchg
rorb
adc
xor
push
xor
inc
mov
mov
add
out
sti
insl
add
add
add
adc
and
aad
cmp
bnd
ja
xor
insl
movsb
das
out
add
es
pop
jg
incb
pusha
or
les
mov
lret
xchg
xlat
mov
clc
into
xor
lods
pop
cld
stos
mov
or
cld
cmp
cmp
imul
add
mov
testb
loope
mov
xlat
adc
clc
mov
sti
subl
dec
inc
ljmp
jbe
bound
or
mov
jg
push
loope
dec
sbb
shll
setge
mov
jno
lods
jne
out
mov
pop
aam
push
sub
andb
sarl
inc
gs
mov
andl
jle
add
mov
or
popf
push
jl
mov
addr16
add
mov
data16
add
jp
lcall
xlat
mov
ljmp
add
inc
aas
sbb
add
and
pop
mov
mov
stos
lods
lahf
imul
cmp
add
or
add
lret
nopl
jnp
add
data16
lea
and
call
add
rcrb
outsl
movsb
gs
dec
push
popf
fistpl
test
push
xor
push
out
inc
pop
add
fidivrl
adc
jl
out
add
js
add
cmp
push
xchg
ret
aas
push
stos
mov
pop
mov
cwtl
lods
mov
add
add
cmpl
fs
pop
or
lock
push
push
xchg
add
ja
test
push
mov
dec
cwtl
loopne
add
mov
add
enter
in
lods
cmp
add
add
add
xchg
push
orl
sarb
andl
add
daa
add
cmp
out
cmp
add
or
add
add
ljmp
filds
and
cmp
movl
and
lret
push
mov
mov
cmc
or
test
mov
and
adc
stc
imul
movsl
icebp
cli
lcall
cld
in
popf
mov
add
jnp
dec
mov
and
lahf
shll
rcrl
incl
aas
fs
add
icebp
out
dec
call
push
or
pop
add
mov
std
and
add
mov
mov
mov
lea
popa
aad
outsl
cmp
pop
xchg
les
or
push
mov
adc
add
mulb
add
add
add
stos
imul
push
jne
daa
data16
dec
mov
imul
cld
pop
sbb
pop
mov
mov
add
or
nop
sbb
int3
mov
xor
jmp
jle
pop
and
mov
mov
add
add
and
aam
push
lock
and
outsb
and
adc
popa
xchg
adc
out
lret
dec
dec
push
inc
pop
inc
cmp
push
inc
adc
shlb
push
push
lock
arpl
out
iret
xchg
xchg
lock
and
dec
fsubrp
sbb
push
flds
fcmovnbe
aad
mov
add
and
repnz
xor
add
out
imul
jnp
jmp
jae
cmp
add
add
arpl
arpl
mov
or
push
pop
inc
pop
nop
push
movsb
inc
mov
cld
add
xor
add
push
bound
jl
shl
lods
xchg
pop
pushaw
push
ror
mov
out
add
clc
push
mov
add
enter
stos
enter
movsl
lret
add
add
lods
clc
mov
add
adc
cltd
cltd
mov
xchg
dec
push
out
jne
clc
and
jle
es
xchg
clc
jns
push
popf
icebp
add
push
push
imul
xor
sbb
and
popf
jp
movsb
ret
out
pushf
adc
stc
andl
adc
popf
nop
xor
add
pop
xor
add
in
and
or
not
lret
and
pop
sti
add
movsb
stos
dec
out
scas
sbb
les
cltd
outsl
ljmp
mov
dec
in
add
outsl
pop
jp
add
mov
pop
mov
dec
fdivrs
mov
daa
pusha
inc
cmp
scas
jmp
dec
test
add
jmp
test
lret
xchg
flds
dec
notb
aad
movsl
mov
gs
stos
popl
imul
add
or
pop
mov
add
add
mov
pop
add
adc
mov
mov
dec
int3
rcrb
rorb
jmp
cmp
dec
lcall
mov
add
fdiv
nop
test
and
pushf
xor
push
ficomps
pop
fiadds
xorl
push
adc
mov
aaa
add
lcall
aad
es
xchg
roll
daa
out
popf
sbb
or
dec
in
mov
cmp
mov
rorb
push
mov
mov
jnp
filds
out
aad
or
add
lahf
adc
imul
in
icebp
mov
into
sub
es
scas
movsl
jo
pop
mov
popa
push
mov
jl
movl
xchg
push
mov
repnz
jmp
int3
rcr
fcoml
movsb
pop
sti
sbb
outsl
mov
movsb
addr16
pusha
push
sub
mov
mov
pop
add
leave
push
test
adc
enter
rcll
add
sub
add
dec
pop
les
mov
dec
adc
fcompl
mov
inc
add
or
movl
and
pop
imul
add
shrb
cmp
stos
pushw
fildl
add
xchg
imull
jb
xor
cli
add
xor
aaa
dec
cmp
test
mov
add
iret
sub
ror
ljmp
in
std
aaa
lods
lret
add
cmpsb
sub
stos
rolb
mov
pusha
mov
jno
sbb
add
popa
ret
add
and
aam
sub
cmp
push
xchg
in
dec
enter
add
pop
add
add
popf
add
mov
add
ret
sbb
out
pop
push
stc
xchg
cmp
push
push
mov
arpl
lods
dec
inc
and
stos
pusha
add
in
ljmp
jb
fs
or
sahf
popl
nop
ret
add
add
or
add
and
add
divl
add
inc
rcr
mov
pop
es
sbb
add
inc
lcall
sti
ljmp
push
cmp
jp
mulb
or
and
adc
add
mov
mov
std
and
add
xchg
add
stos
add
add
lea
xor
bound
popf
add
js
add
loope
add
std
cld
adc
add
push
outsb
iret
pop
mov
jg
int3
mov
jecxz
adc
add
mov
movb
or
mov
adc
imul
push
sub
arpl
add
add
adc
mov
push
pop
repz
ret
pop
add
dec
test
add
add
jmp
loop
je
jp
jbe
pop
push
ret
out
xchg
repnz
das
add
jl
add
add
imul
cmc
stos
add
adc
mov
out
ljmp
jns
xchg
test
or
ret
adc
imul
cwtl
lods
inc
mov
or
add
mov
add
push
scas
dec
add
add
testl
pop
flds
push
pusha
stos
cmpsl
lahf
mov
add
iret
dec
add
add
sbb
xchg
sar
ss
mov
cltd
lods
xchg
fiaddl
or
imul
sbb
arpl
add
dec
mov
jno
enter
test
into
mov
cmc
ret
sbb
popa
movsl
dec
ret
xor
scas
or
sbb
mov
push
sbb
jge
js
add
psubusb
dec
mov
adc
test
pop
mov
add
push
clc
add
jo
mov
inc
pop
mov
jl
outsb
data16
xchg
add
add
mov
repz
jb
mov
add
jo
aas
cwtl
jae
sub
es
stc
and
popa
cwtl
mov
dec
out
inc
add
xchg
xchg
sub
dec
xchg
adc
and
push
rorl
lds
imul
push
or
sbb
pop
stos
add
out
inc
pusha
ret
mov
mov
cli
ds
loop
jae
sub
add
dec
test
push
dec
mov
out
rclb
enter
out
inc
pop
jl
inc
lds
add
inc
add
arpl
jbe
mov
mov
mov
jl
jnp
test
pusha
xchg
out
aad
add
pushf
call
mov
push
xor
dec
sbb
ss
or
dec
enter
cltd
addb
mov
jg
in
sbb
inc
pop
movsl
insb
push
push
pop
aam
loopne
ss
test
jae
mov
repz
rcrb
in
push
jbe
mov
add
adc
add
movsl
or
stos
nop
add
xchg
hlt
fadds
mov
jns
add
cmp
push
add
add
add
xor
das
mov
add
xchg
rorb
mov
pusha
xchg
out
sbb
sub
xchg
push
and
gs
cmp
inc
imulb
sahf
outsl
mov
loop
aam
pop
cld
and
xchg
cmc
pop
cli
adc
or
lea
cmp
cmc
jne
or
pop
loopne
inc
outsb
xor
sbb
jns
mov
aas
add
mov
iret
imul
and
gs
inc
dec
ja
mov
fdivl
push
sti
jmp
bound
rorb
ret
add
mov
push
sti
in
sbb
xchg
popl
repnz
sub
push
in
mov
pop
sahf
enter
add
inc
mov
fists
sarl
je
sub
xchg
jl
sub
adc
add
aad
add
jecxz
pop
sahf
mov
into
arpl
xor
fiadds
lea
add
mov
add
add
dec
mov
sti
dec
ret
xor
mov
sub
roll
stos
jb
sub
aad
repz
add
cmp
inc
int
lret
add
iret
cmpsb
add
push
and
sub
add
add
mov
iret
mov
aaa
stos
mov
nop
jnp
fbstp
fsubrl
out
lods
lock
mov
push
mov
jo
push
mov
lods
pop
pop
mov
loope
add
in
fistps
stc
add
xchg
sahf
add
adc
push
add
dec
add
xchg
aam
cmpsb
movb
dec
adc
add
jge
cmp
test
enter
movsb
sahf
imull
add
cmpsb
add
adc
xor
into
les
rcl
add
pop
sti
ficomps
cmp
mov
sub
mov
and
sbb
dec
add
insb
or
pop
into
data16
add
dec
sbb
push
add
push
add
push
cmc
pop
ret
pop
and
sahf
mov
mov
push
fmulp
add
xor
mul
negl
and
dec
push
inc
dec
and
jns
in
insl
xchg
sub
jmp
pop
ret
scas
adc
daa
and
mov
fwait
push
in
adc
mov
push
sub
and
add
dec
mov
jmp
aas
dec
adc
hlt
push
and
sahf
mov
rcrl
shrl
mov
aam
rcrl
push
xchg
adc
jb
lods
repz
fwait
xchg
xchg
push
in
or
mov
xchg
pop
add
push
add
sub
add
outsl
fucomi
les
or
mov
add
or
add
xor
add
repz
fiaddl
mov
int3
scas
sahf
leave
icebp
lcall
arpl
pop
enter
test
pop
mov
or
ret
mov
sub
sbb
hlt
pop
add
mov
xchg
pop
add
cmp
jmp
fs
clc
add
test
data16
fildl
sarl
xchg
in
xor
sub
lea
add
jne
mov
icebp
adc
add
stos
icebp
mov
gs
lret
hlt
mov
dec
int3
add
adc
mov
jmp
mov
or
mov
pop
movsl
inc
pop
mov
sub
and
call
adc
in
add
push
cmpsl
add
repnz
add
mov
adc
inc
js
insl
ret
ss
fwait
mov
push
mov
jne
insl
mov
pop
jmp
xor
fiadds
xor
mov
rol
pop
addr16
add
cmp
inc
add
ja
xlat
add
inc
push
and
jae
mov
lcall
daa
ljmp
inc
repz
int3
sub
insl
iret
lret
mov
stos
xlat
dec
outsb
push
lods
and
roll
fsub
mov
scas
leave
aas
test
insl
call
sub
cmp
fisubl
fadds
mov
or
sub
rolb
in
mov
push
add
cmp
xchg
push
addl
sub
dec
das
fs
push
jnp
inc
cld
inc
sub
dec
sub
add
test
call
mov
sub
fidivl
add
mov
xchg
divb
filds
push
dec
add
jb
add
add
in
sbb
push
sub
and
inc
add
lock
add
xor
cmp
jns
test
data16
in
add
ret
add
push
add
stos
xchg
inc
mov
add
push
add
pop
rclb
stc
fnstsw
rorb
mov
sbb
push
and
lcall
adc
imul
arpl
out
cmp
hlt
and
loop
jo
jnp
jmp
lea
add
cmpsl
add
enter
pusha
pop
lahf
dec
fildl
psrlw
outsb
lods
out
ss
xchg
fistps
outsl
scas
jb
roll
xor
inc
and
mov
add
mov
scas
in
xchg
add
jmp
mov
test
or
loopne
out
inc
push
push
add
jno
push
pop
and
inc
jnp
fwait
sub
es
xor
or
int3
jp
out
cld
mov
mov
fldt
push
dec
repz
repnz
push
add
pop
repz
sbb
mov
xor
inc
dec
scas
push
add
xchg
push
andl
jg
cmpl
sub
sbb
jae
add
loop
add
xor
push
mov
sbb
adc
push
imul
xchg
scas
adc
cmp
rolb
movsl
mov
je
cmpsb
add
xchg
add
mov
test
add
mov
ret
out
mov
testb
push
rol
aam
les
xchg
xchg
cmp
pop
daa
aam
mov
mov
xor
ret
sub
nop
pop
mov
popf
xor
add
mov
mov
add
flds
sarb
xchg
add
xor
cld
mov
or
hlt
ret
adc
and
in
add
or
neg
pop
mov
add
shll
mov
jmp
add
lds
xchg
pop
cmp
jne
pushf
pop
lods
sub
jnp
mov
or
sub
rolb
add
sub
add
adc
inc
mov
sub
test
addr16
jb
add
jecxz
xchg
gs
sbb
data16
lods
jae
inc
add
enter
mov
adc
cmpsl
xor
and
call
add
lds
js
icebp
cmp
fisubrl
inc
mov
push
ficoms
xor
aas
orl
fiaddl
add
idiv
adc
add
aaa
rclb
xchg
sbb
movsb
pop
icebp
icebp
push
add
mov
js
adc
add
xchg
add
xchg
push
shl
mov
jle
stc
or
mov
mov
mov
ret
add
mov
lods
stc
add
movsb
add
add
or
mov
call
daa
xor
dec
add
add
mov
cwtl
dec
push
inc
lea
dec
mov
int
movsl
mov
mov
add
dec
jle
adc
xor
faddl
cmp
xor
fldenv
pop
jecxz
loop
mov
js
sbb
dec
aam
sarl
movsb
mov
add
add
mov
xchg
adcl
jge
push
add
mov
aam
add
add
dec
cmpsb
push
xor
push
inc
mov
mov
cmp
aas
push
adc
inc
dec
xlat
jnp
inc
sahf
out
mov
sti
adc
aam
pop
adc
pop
jae
dec
mov
ret
jp
add
les
mov
sub
stc
aam
and
add
ja
fsubrp
int
mov
xchg
into
fsubrp
aad
jp
mov
out
out
dec
in
shrb
les
aas
jne
or
rclb
popf
push
popl
add
push
jle
inc
hlt
mov
and
stos
cwtl
daa
sbb
loop
add
mov
mov
repnz
dec
loopne
pop
xchg
pusha
push
popl
divl
cli
rcll
shll
mov
lcall
or
aas
fwait
aas
add
dec
dec
scas
adc
call
icebp
ljmp
cs
lock
cmp
add
cmpsb
dec
lock
add
pop
jb
std
sbb
fidivs
push
cld
add
sub
test
lds
push
into
add
jne
pop
icebp
adc
jl
or
mov
or
jg
add
lret
add
push
jno
add
sub
mov
push
enter
mov
ja
mov
and
subb
addb
xchg
icebp
add
mov
repnz
stos
daa
dec
adc
in
hlt
add
push
push
pop
je
cmc
ret
or
lcall
addr16
orb
adc
cmp
mov
dec
xchg
cmp
mov
dec
outsl
lcall
or
add
add
stos
pop
lret
out
cmc
sub
or
fucomi
or
xor
out
pop
out
add
xchg
mov
loopne
mov
pop
lret
out
ds
pop
popa
push
add
fnsave
fwait
mov
gs
aas
pop
add
stos
fisubl
add
das
addl
bound
adc
lret
sbb
out
cmp
inc
pop
add
test
pop
pusha
add
testb
dec
add
movsb
mov
stc
xor
pushf
lods
pop
dec
pop
inc
mov
int
nop
mov
inc
sbb
jne
outsb
lock
test
imul
imul
add
incl
mov
push
outsl
aad
pop
pop
add
lahf
push
fwait
leave
xor
jns
insb
or
xchg
and
sbb
andl
mov
repnz
add
mov
daa
or
sbb
xchg
sub
repnz
test
jns
inc
push
adc
adc
add
jnp
add
xchg
xchg
or
inc
ret
jmp
in
add
jmp
inc
sbb
cmp
into
adc
xchg
or
xchg
fcmovb
push
lret
mov
add
jo
enter
xor
sub
out
inc
add
imul
and
pop
sub
or
push
pop
jl
mov
movsb
enter
das
jne
aaa
add
add
push
add
cmpsb
pop
xchg
add
add
lods
fwait
jmp
xchg
sarb
rclw
mov
push
adc
sub
pop
add
add
pshufw
fwait
pop
add
popa
push
inc
xor
in
icebp
sbb
adc
shrb
xchg
xor
adc
cmp
add
adc
jae
add
xchg
sahf
add
add
push
or
xchg
movsb
add
add
pop
jg
das
xchg
or
int3
mov
frstpm(287
add
xor
test
inc
push
xchg
cmp
arpl
dec
inc
inc
sbb
out
mov
cmpsb
pop
mov
cmpl
inc
adc
add
lret
insb
loopne
xchg
mov
or
add
sti
arpl
push
dec
lods
add
gs
mov
sarl
lock
mov
lock
add
enter
ljmp
aam
jbe
mov
add
aam
gs
iret
sub
lahf
bnd
dec
sar
mov
mov
repz
cmc
ds
mov
cltd
push
out
mov
push
mov
add
add
sbb
or
shlb
push
add
roll
scas
jne
adc
pusha
in
mov
iretw
push
outsb
add
xchg
and
les
rolb
add
je
mov
inc
add
sar
push
xchg
inc
mov
dec
add
mov
add
add
rolb
pop
ds
adc
sub
loop
lods
and
add
shlb
pop
jno
mov
pop
sbb
add
add
jb
stc
cmpsl
imul
pusha
iret
mov
jb
addl
lcall
int
add
pop
out
adc
xchg
add
cmc
add
lods
push
addb
pop
mov
mov
inc
mulb
jmp
fcompl
decl
std
and
add
filds
sub
outsb
sbb
mov
cltd
cld
jecxz
add
sub
test
cmp
out
jo
call
hlt
sub
lock
push
or
dec
push
or
shrb
cmpsl
cmp
rcrl
mov
add
jbe
jl
add
xor
adc
and
pusha
notb
outsl
push
inc
pop
jns
xchg
test
roll
add
test
jns
rolb
fldl
std
mov
in
mov
add
jno
add
and
cmpsl
cmpsl
out
incl
imul
inc
sar
push
mov
add
adc
notl
add
add
test
push
adc
add
pop
lea
rcrl
add
movsb
test
movsb
in
in
pop
sub
mov
fcmovbe
add
iret
sti
add
fcoml
xor
sub
shlb
ret
add
sti
push
inc
add
sub
and
icebp
shlb
mov
xor
in
cmp
lods
add
dec
mov
cltd
test
icebp
sarb
popf
xor
cmp
adc
adcb
jecxz
mov
xchg
fs
mov
lds
adc
jbe
loop
pop
jge
push
cli
add
mov
gs
add
mov
out
test
add
inc
push
push
fisubrl
mov
jnp
add
add
fsubl
dec
pop
cmp
xchg
xchg
out
movsl
mov
or
cmp
dec
add
sbb
adc
xor
shll
sbb
cmp
xchg
push
fnstenv
test
test
sar
push
mov
pop
or
inc
inc
adc
pop
cmp
popf
test
in
jge
pop
cmp
jmp
jmp
and
movsl
fs
cmpsb
or
pop
mov
arpl
pushf
pushf
ret
mov
add
jle
adc
cs
mov
and
add
cmpsl
aad
out
insb
and
ljmp
xchg
cli
add
add
mov
cmp
lods
add
jp
jg
leave
clc
gs
add
or
sti
daa
rcl
hlt
dec
fsubrl
sub
add
sbb
shl
clc
mov
stc
cli
in
push
scas
je
or
xchg
add
popl
mov
jle
jb
loop
jle
adc
movb
inc
pop
rcl
add
cmp
loop
cmp
xchg
add
stc
dec
cmp
push
int3
adc
nop
fisubs
pushf
lods
mov
mov
mov
pop
stc
leave
pop
push
sub
imul
push
add
ret
mov
push
lcall
jb
mov
lea
out
inc
add
lret
add
into
jge
pop
pop
add
lods
inc
mov
inc
add
push
jg
dec
repnz
leave
movsl
add
add
add
stc
outsl
sbb
test
push
add
xchg
icebp
unpcklps
out
test
aad
negl
arpl
or
pop
aam
rcl
jnp
push
sbb
mov
loopne
add
shl
fs
sbb
aad
rolb
test
dec
es
cld
std
stc
inc
lahf
ret
xor
fists
popa
xor
ret
arpl
adc
jp
add
bound
push
testl
add
sbb
out
bound
mov
add
dec
js
xchg
add
ret
mov
fnstenv
pusha
add
leave
mov
dec
add
jl
fldcw
or
adc
adc
inc
jle
sub
sub
jl
sbb
inc
leave
and
das
adc
sbb
leave
scas
push
das
ja
or
mov
sbb
jecxz
jae
gs
fs
xchg
outsb
push
add
mov
lahf
rorb
and
leave
pop
xchg
push
add
add
negl
test
and
fdivrp
imul
pop
popf
add
loop
insb
leave
mov
lea
ret
push
xchg
sbb
int3
nop
daa
lea
stos
jo
add
jmp
pusha
fcompl
popf
dec
in
insb
pusha
mov
jge
mov
add
enter
repnz
add
cmp
xchg
in
push
ljmp
jbe
jl
push
adc
stos
add
add
mov
lds
icebp
jno
mov
push
mov
jmp
pop
sbb
add
mov
cld
mov
nop
xlat
mov
out
mov
cltd
outsb
sbb
sub
pop
dec
xor
addr16
ror
stos
add
popf
pop
mov
and
cmc
add
inc
aaa
adc
popf
std
ljmp
sbb
mov
in
stos
add
mov
cwtl
aas
sbb
cli
loopne
dec
sbb
jb
sub
add
dec
add
nop
cli
inc
add
test
push
lds
xlat
inc
pop
fs
jg
lods
cwtl
addr16
sbb
mov
mov
popf
pop
lret
jo
add
andnps
lcall
dec
aas
pxor
test
xchg
add
pusha
mov
xchg
popa
and
subb
add
dec
add
xchg
das
int3
lcall
mov
mov
jns
or
jbe
cli
int
sbb
xor
shll
inc
dec
enter
adc
add
add
shlb
add
or
insl
int
dec
and
add
scas
mov
stos
mov
mov
pop
jnp
jp
mov
enter
shll
stos
ja
jns
test
and
fwait
loop
add
int3
lods
bnd
rcl
pop
pushf
sarb
and
mov
out
pushf
fiadds
jo
das
push
add
xorl
sbb
xchg
jns
xchg
or
push
fisubl
add
xor
pop
adc
test
adc
jl
add
and
enter
addr16
std
pop
mov
mov
cmp
add
aam
add
cmp
loopne
push
into
fsub
lea
stos
out
stos
mov
icebp
fiaddl
adc
iret
mov
out
rcr
adc
add
adc
xlat
and
lods
lea
inc
ror
or
jmp
shl
mov
mull
mov
mov
cmp
iret
lcall
jge
test
adc
in
jne
jecxz
inc
mov
jle
into
fwait
jb
add
lds
add
lret
mov
add
mov
push
sub
push
dec
lret
out
dec
les
xor
mov
xchg
hlt
mov
add
repz
sub
pop
xor
adc
jbe
scas
add
sbb
push
add
add
stc
push
ljmp
fisubs
push
inc
pop
add
loop
or
bound
addl
jnp
or
sub
cltd
enter
lds
fsubl
adcb
sub
add
jg
add
push
mov
xchg
pop
add
fistps
push
add
leave
repnz
jp
cld
sub
std
rorb
add
sub
inc
xor
ret
or
or
cld
jmp
inc
adc
pop
loope
sbb
iret
push
add
cmpsl
or
ljmp
mov
loopne
out
pop
pop
popl
aam
std
inc
mov
jge
dec
xchg
inc
mov
enter
add
sbb
cli
aad
xchg
fwait
lods
leave
icebp
push
and
mov
inc
add
jecxz
jae
or
ljmp
add
push
jo
add
mov
jne
add
add
cmp
cmovle
mov
ret
rolb
scas
add
dec
jnp
mov
add
test
lea
lea
bound
sbb
data16
aam
test
imul
cmp
lods
add
add
pop
jmp
leave
jns
aad
scas
mov
and
lahf
jge
dec
in
xlat
push
imul
test
out
outsb
roll
cwtl
add
mov
add
repnz
in
mov
dec
lcall
ss
fiadds
testl
cld
pop
add
push
clc
lods
lcall
xchg
inc
push
mov
jo
in
xor
das
mov
mov
pop
icebp
insb
out
inc
je
push
inc
xor
fcmove
icebp
pop
mov
xchg
js
shll
es
in
add
rorb
sbb
mov
sub
sbb
stc
rolb
inc
dec
fs
shll
pop
imul
call
mov
negl
sbb
insl
inc
mov
testl
in
mov
rcrb
push
and
add
and
movl
andl
icebp
in
leave
inc
pusha
in
aaa
int
jmp
jno
inc
add
int3
dec
dec
add
or
add
sub
cli
xorb
out
add
inc
add
xor
testb
sub
xor
add
sub
fst
push
lods
add
pop
lcall
mov
subl
clc
cmp
icebp
mov
inc
enter
mov
xchg
fwait
pop
add
push
add
mov
popf
scas
aad
sbb
adc
pop
shr
and
push
xor
loope
add
push
imul
incl
enter
subl
repnz
adc
cmp
xchg
ss
dec
and
or
lret
test
lret
add
sbbb
sbb
fimull
fisttpl
cltd
hlt
inc
jnp
sub
xor
les
jne
flds
arpl
pop
adc
xor
sbb
cmpsb
mov
cwtl
daa
adc
inc
ss
cmp
ljmp
mov
and
pop
and
sbb
out
shl
pop
ljmp
aaa
xchg
int
add
negb
sar
pop
sub
out
mov
cmp
int
out
dec
add
add
nop
bound
pop
inc
or
add
je
mov
das
cmovnp
flds
mov
sbb
aas
push
mov
in
push
xor
adc
mov
xchg
mov
mov
add
test
hlt
jg
sahf
add
aaa
add
in
outsl
gs
stos
cld
loop
addb
xor
test
inc
xchg
aad
xchg
xor
xchg
add
sbb
mov
pop
andb
daa
insb
adc
add
cltd
jecxz
test
push
mov
jne
add
mov
jns
shll
inc
pop
je
repz
sar
dec
ret
push
adc
cld
js
xchg
add
cmp
dec
movsl
cltd
push
add
xchg
aaa
push
dec
cmc
es
xchg
add
aad
mov
inc
call
dec
xor
pop
add
and
mov
scas
nop
add
nop
inc
xor
add
bound
decl
pop
or
push
inc
mov
cld
add
dec
jb
adc
ds
or
lahf
mov
inc
xchg
mov
xchg
pusha
pop
jecxz
inc
or
push
scas
cmc
xor
rorb
mov
cli
mov
inc
jg
or
addr16
jbe
mov
add
mov
int
loopne
add
mov
mov
jl
pop
mov
sbb
ret
cmc
jmp
clc
add
cmp
cs
add
jns
and
imul
pop
add
test
fistpl
adc
int3
dec
or
das
repnz
add
pop
add
lods
les
dec
mov
mov
mov
mov
pop
test
mov
add
jae
iret
and
femms
mov
jmp
ja
dec
add
push
jp
pop
notb
lds
add
inc
stc
testb
adc
jbe
and
pop
loope
mov
lods
enter
mov
sbb
jo
shll
lahf
add
sbb
aam
jl
jmp
xor
scas
adc
push
lcall
stos
movsb
scas
mov
pop
mov
mov
popf
dec
xchg
cmp
add
and
mov
hlt
push
or
push
ficomps
jmp
fistpl
stos
mov
imul
add
add
les
mov
adc
add
dec
lock
sbb
shrb
leave
jo
dec
popf
mov
shr
mov
xchg
add
jge
push
lods
pusha
lods
pop
add
jmp
jnp
and
push
in
nop
les
popa
mov
test
or
repnz
clc
xlat
dec
push
into
add
mov
je
icebp
xchg
push
add
dec
push
loop
or
xchg
pop
pop
fstps
dec
add
add
add
iret
inc
test
data16
pop
pop
pusha
repnz
jg
pop
add
fwait
addr16
mov
lret
xchg
dec
add
push
cmp
fiaddl
or
scas
mov
dec
ficoml
add
inc
repnz
lods
add
je,pn
push
mov
push
lds
or
add
test
add
or
sbb
mov
add
push
addb
out
lds
pop
fstps
ds
sarb
jge
imul
mov
pop
inc
pop
stos
js
or
imul
dec
movsb
xor
push
add
test
outsl
test
push
lret
and
add
in
xchg
sub
les
xor
mov
cltd
xlat
hlt
push
mov
pop
mov
add
dec
mov
std
out
pop
push
pop
push
lea
and
xor
add
sub
mov
loope
ror
and
jl
add
je
mov
enter
add
add
test
test
pop
inc
loopne
adc
sub
mov
jnp
sbb
add
fiaddl
daa
hlt
clc
addr16
aas
mov
clc
mov
cmp
out
mov
xor
aad
cs
adc
and
clc
aam
add
add
pop
daa
lock
std
pusha
adc
add
lds
aad
mov
add
fst
and
in
lret
daa
scas
lock
add
xchg
add
scas
imul
pusha
and
out
or
add
add
mov
movsl
add
inc
inc
push
add
add
adc
ret
sbb
add
aam
xchg
add
cs
pop
pushf
test
mov
jae
add
lret
sub
fstps
mov
repz
mov
add
xchg
cmp
mov
rcrb
add
lret
sub
adc
inc
mov
pusha
lock
adc
ja
dec
dec
or
add
insb
shlb
dec
dec
imul
jge
loopew
outsl
sub
pop
mov
add
push
mov
add
cmp
dec
lcall
test
loop
add
push
movsb
add
lahf
ljmp
or
mov
cmpsb
lods
inc
mov
add
adc
mov
add
lods
repnz
bound
jp
mov
sub
push
add
jl
data16
rolb
lahf
movsl
outsl
scas
push
insb
add
and
cmpsb
lods
cltd
add
stos
cltd
add
clc
add
out
add
dec
jp
cmp
in
xor
repz
sbb
cli
repnz
add
inc
sub
cmc
fbstp
add
add
dec
aad
outsb
cmpsb
and
incb
cmp
gs
aad
xor
enter
mov
sub
pop
mov
add
out
xchg
push
daa
hlt
xor
repz
mov
mov
cwtl
loop
mov
add
mov
mov
add
add
int3
pop
fidivrs
add
fwait
imul
in
sahf
cmp
data16
push
call
xchg
lahf
lods
cmp
mov
out
add
mov
pop
add
add
stos
loopne
int
in
push
push
and
aad
add
xor
popa
stos
popa
std
lea
idiv
add
add
mov
test
xor
mov
jle
leave
add
bound
push
into
mov
adc
aas
lret
or
inc
movsb
add
push
jmp
out
test
mov
cmp
int
xor
lds
xor
adc
out
in
popa
arpl
jbe
adc
add
sbb
daa
clc
add
add
mov
cmpsb
add
xor
data16
and
cmp
repnz
xchg
rorb
mov
das
jp
out
fcmovnu
dec
cmp
hlt
cmp
lods
add
data16
push
inc
inc
xchg
js
push
in
cld
lcall
pop
orb
and
jbe
ret
popf
sbb
cwtl
idivb
xchg
lret
jp
sbb
push
rcr
andl
mov
xchg
add
popf
xor
pop
and
and
mov
rol
or
cli
mov
add
inc
mov
sbb
in
add
adc
add
testb
gs
mov
lret
bound
popf
xor
fadds
data16
mov
jns
xor
insb
xchg
xor
add
add
insb
lods
js
xchg
push
popf
loopne
fidivrl
aam
add
dec
call
or
rol
imul
xor
loope
leave
jnp
leave
dec
pop
repnz
add
mov
call
mov
push
push
sub
mov
daa
or
cltd
ror
enter
mov
aas
xchg
mov
aas
cmc
adc
dec
cmp
mov
in
xrelease
int
das
xchg
add
dec
add
notl
aaa
cld
shrl
add
inc
cli
clc
add
mov
jp
loopne
lret
push
es
push
cmpsl
mov
add
mov
pop
pop
xor
inc
sbb
mov
push
notb
adc
lret
pop
add
data16
sahf
insb
icebp
inc
lahf
fucomi
add
scas
add
add
mov
xlat
shl
movsb
mov
jne
mov
push
repz
outsl
roll
insl
xlat
loopne
dec
adc
rorl
jnp
loopne
dec
in
and
cld
and
pop
pop
repz
add
sub
add
push
sub
mov
sub
add
inc
jmp
mov
push
push
sub
insb
out
arpl
add
xchg
movsl
xchg
pop
inc
pop
add
cmp
add
shl
fucomip
popf
movb
rcl
dec
push
insl
push
and
add
mov
add
es
mov
jg
mov
mov
ret
mov
xor
lret
mov
mov
stos
sub
lahf
dec
icebp
push
xor
es
sub
ret
mov
inc
aas
jne
jmp
push
roll
test
pop
or
idivl
and
sub
mov
orl
xor
and
jae
les
stc
jno
frndint
xor
xchg
add
pop
out
inc
cmp
add
test
mov
inc
add
je
rorb
sbb
and
fmuls
pop
lea
xchg
lahf
pop
adc
lret
add
xchg
fiadds
jl
push
repz
js
jl
inc
add
movsl
pushf
repz
add
leave
cmp
fsubrl
cld
out
cmp
pushf
jb
mov
movsl
les
jo
pop
enter
add
stc
test
add
cmp
cwtl
or
leave
clc
and
data16
adc
cmp
mov
sbbl
xor
test
xchg
add
aam
inc
add
add
mov
add
mov
push
xor
fadds
or
push
add
add
push
cmp
imul
pop
int3
add
add
in
mov
out
out
or
add
or
sbb
adc
mov
add
push
lods
sbb
add
gs
scas
add
cmp
sti
sbb
shll
or
and
pushf
in
pushf
push
js
mov
dec
and
mov
nop
addb
add
sbb
mov
add
stos
std
lcall
add
cmc
sbb
enter
pop
cmpsl
mov
sub
mov
adc
loope
ret
clc
lea
sub
movsl
in
xor
bound
sub
pop
pop
js
movsl
cmp
mov
pusha
arpl
push
push
movsl
aad
mov
push
jns
dec
and
int3
orb
je
jo
add
mov
cmp
int3
add
cld
sub
push
jnp
or
cltd
xlat
sbb
add
dec
jl
adc
js
popa
aas
je
lcall
add
popl
add
inc
add
movsb
rcl
outsb
xor
mov
push
xor
das
orl
add
add
lcall
pop
jg
mov
ret
and
ret
mov
int3
movsl
in
fisubs
xor
mov
jmp
out
out
loop
add
in
sbb
mov
popf
sti
mov
mov
mov
mov
add
add
push
addl
mov
fistl
mov
les
or
movq
iret
adc
stc
push
cmpsl
push
add
mov
mov
or
dec
pop
xor
and
outsl
add
mov
add
cmp
movsl
das
inc
mov
inc
dec
sbb
inc
or
fcmovnb
in
add
add
push
pop
add
pop
push
add
ljmp
add
les
mov
test
jecxz
adc
repnz
jmp
es
int3
push
push
call
jno
packsswb
jl
dec
testb
jo
outsl
push
sbb
cmp
add
cmp
mov
inc
add
fildl
and
cmc
into
mov
and
add
loop
pop
and
mov
lea
cld
popa
add
add
mov
daa
out
ja
push
xchg
cmp
loopne
sbb
stos
outsb
xor
ss
pop
add
das
jb
cmp
into
xchg
cmpsb
stc
into
or
mov
popa
or
out
jae
sahf
xor
mov
or
stc
iret
lods
sahf
enter
gs
nop
testl
mov
add
int
clc
push
add
mov
je
rolb
add
loop
dec
fstpl
and
add
mov
add
mov
jp
and
popa
pop
icebp
arpl
scas
pop
jl
and
dec
sbb
fnstcw
add
pop
xchg
pop
push
clc
inc
xor
cmp
xchg
push
test
out
mov
add
mov
hlt
sub
in
fidivrl
cmp
cli
sbb
mov
ljmp
cmpsb
dec
call
repz
add
jo
add
sub
cld
add
add
add
dec
or
ret
jns
add
adc
subb
mov
jne
mov
add
cwtl
mov
mov
xorb
aaa
hlt
add
xor
dec
add
enter
stc
push
popf
int
xrelease
sub
xor
gs
ret
lret
mov
sar
outsb
jle
jle
mov
icebp
cmc
inc
mulb
into
and
addb
icebp
push
add
sti
add
jnp,pt
fbld
sbb
sub
inc
mov
jl
outsb
push
stos
xor
outsb
sahf
push
push
fldenv
lea
je,pn
cmpsl
lods
call
arpl
lahf
xlat
pop
cmp
sar
mov
sub
in
test
loope
mov
mov
out
jmp
adc
bound
inc
arpl
data16
add
add
imul
add
lcall
push
push
pop
mov
out
mov
shlb
mov
lds
inc
mov
cli
decl
and
mov
pop
mov
inc
cmc
outsb
inc
sbb
sub
adc
stos
add
enter
jl
and
add
push
in
das
adc
sub
jns
xchg
sub
filds
das
loopne
cmp
mov
xchg
stc
pop
scas
sub
add
loop
xchg
cmp
bnd
je
add
cwtl
or
icebp
lret
jno
in
lock
mov
stos
push
shl
gs
sarl
imul
movsb
add
cmp
mov
cmpb
ret
faddp
fisttpll
jg
add
das
mov
repnz
xor
fisubs
or
add
cmpsl
mov
add
loopne
rolb
push
and
cmp
or
fiadds
aam
xchg
add
outsl
xchg
sarl
movsl
jns
sbb
stos
lods
add
add
fwait
mov
cltd
add
xlat
repnz
dec
cmpsb
or
testb
inc
or
push
int
cmpsl
jg
fnsave
sub
or
or
add
xchg
jne
addl
mov
or
jecxz
clts
orl
rcrl
adc
add
or
add
fldl2e
add
ljmp
xor
mov
xchg
push
lret
call
xor
jl
stos
add
dec
adc
mov
pushl
mov
or
jmp
and
and
mov
pusha
frstpm(287
and
scas
repz
lcall
add
pusha
cmp
pop
clc
jle
sarl
add
movsb
push
jmp
and
aaa
jle
jmp
out
push
cmp
add
jmp
pop
sub
imul
cmc
in
add
push
fsubrs
dec
stos
add
dec
xchg
aaa
add
mov
mov
in
mov
out
mov
out
scas
ret
push
xor
and
add
mov
fildll
add
popa
cmp
jl
pushf
arpl
and
hlt
popa
cmpsb
movb
pop
lahf
notb
sub
and
xor
push
mov
sub
fldl
out
rcll
xchg
arpl
pop
rcll
or
mov
ja
addr16
rorb
aas
mov
add
mov
loope
xor
sbb
push
adc
adc
xchg
push
push
das
ds
cli
scas
mov
add
inc
lcall
ret
sahf
adc
push
and
popa
mov
in
adc
push
cmpsl
xor
popa
pop
xor
popf
sti
shrl
cmp
add
add
lock
std
clc
add
sbb
add
mov
add
cwtl
mov
and
lea
pop
mov
or
jbe
out
sbb
outsl
jle
popf
pop
xor
inc
faddl
aas
enter
jge
inc
pusha
and
andl
jns
lahf
pop
inc
fidivrs
fsubrp
dec
into
jbe
add
lods
data16
add
and
and
sbb
je
into
mov
mov
movsl
adc
lcall
mov
pushf
lea
sbb
ficoms
add
xchg
sbb
out
dec
sub
movl
cmp
enter
pushf
pop
cmp
jbe
stos
cmp
sbb
and
xchg
add
popa
loop
stos
arpl
inc
sbb
fs
and
add
sbb
add
test
data16
shr
mov
push
pushf
jmp
cwtl
gs
add
push
sbb
stos
jne
hlt
push
aas
add
pop
fs
sub
sbb
inc
add
je
add
fadds
inc
jmp
jno
add
xchg
add
add
lret
jle
add
movsl
or
mov
pop
add
push
test
push
cli
xchg
repz
mov
xchg
sub
mov
dec
and
mov
or
mov
push
push
js
mov
cmp
addl
sahf
add
andb
fnsave
test
mov
lods
in
cmp
sbb
incb
aaa
lea
sbb
push
mov
cmp
add
out
push
inc
popf
jo
inc
xor
popa
or
jo
out
xor
push
xchg
test
fs
xchg
inc
add
fisubl
fs
repnz
fisttpll
shr
xchg
aaa
incl
sub
add
cmpsl
clc
pop
into
add
dec
pop
mov
or
inc
test
sbb
or
mov
sbb
fnstcw
test
fistpll
or
add
push
add
outsb
jmp
inc
push
filds
cmp
add
lret
cs
xlat
adc
movsl
mov
inc
shlb
mov
fstpt
orl
xor
mov
idiv
outsl
lcall
mov
add
adc
xor
in
in
call
jbe
push
pop
cli
mov
stc
jmp
add
hlt
add
add
cmp
xchg
stos
xor
fs
cmp
add
fldl
test
dec
dec
mov
int3
and
add
push
add
lea
mov
xor
inc
add
add
push
ret
jle
add
cmpl
test
fists
cmpsl
sbb
dec
sub
jb
inc
imul
aad
push
popf
int
add
loope
fneni(8087
lods
mov
push
mov
push
data16
sub
add
movl
aaa
adcb
xchg
adc
push
cmp
mov
sub
movsl
lock
jbe
icebp
jbe
and
add
add
pushf
repz
js
cwtl
fstps
add
add
mov
mov
sbb
or
dec
lea
scas
jp
inc
add
hlt
pop
pop
mov
mov
repnz
mov
leave
in
adc
lods
mov
out
lahf
add
xchg
or
jno
mov
add
loope
mov
arpl
mov
mov
fisubl
xchg
push
add
fwait
add
sbb
aaa
mov
add
sti
sub
xor
dec
xor
add
mov
rcr
pop
fwait
mov
cli
xchg
add
aad
add
pop
cmp
sbbl
sbb
add
mov
fstps
adc
movsl
imulb
test
dec
add
imul
and
add
xchg
dec
sbb
lods
das
and
adc
push
mov
stos
add
insb
lcall
push
pop
xchg
xchg
add
dec
fwait
movsl
jno
in
bound
adc
enter
adc
push
lret
or
stos
pop
pop
jmp
xor
add
aam
loope
cmpsb
stc
cmp
and
add
adc
cmp
push
jne
sub
push
data16
dec
add
pusha
mov
and
push
jnp
dec
sar
inc
push
mov
pop
into
in
add
outsb
rorb
cmpsb
loop
push
sub
scas
cld
cmc
push
fwait
je
mov
add
push
adc
add
pop
cli
add
add
xchg
add
scas
cld
sub
sub
push
imul
inc
or
ss
push
lahf
out
push
movsb
leave
xor
or
mov
add
aas
mov
push
push
outsb
mov
push
push
add
in
pop
sbb
mov
insb
mov
inc
rolb
dec
lods
inc
and
icebp
mov
adcb
scas
sbb
js
mov
lds
xlat
stc
fwait
add
aad
inc
add
popf
cmp
and
sbb
js
add
lds
mov
cmp
xor
dec
lock
les
mov
sbb
mov
add
pop
rcr
cmc
add
out
roll
aam
cmp
enter
push
jnp
dec
add
sbb
push
rcll
out
xchg
or
xor
mov
pop
pop
jo
std
inc
push
add
ret
imul
ret
push
nop
jl
clc
shll
cmp
popf
jae
jae
loop
or
ret
add
stos
mov
filds
into
shll
movsl
pusha
testb
add
enter
xor
cltd
add
add
pop
bound
sbb
xorl
mov
dec
jne
insl
sbb
add
mov
stos
or
sub
into
sub
lret
or
cmc
mov
inc
ljmp
imul
sahf
addr16
cmp
xor
adc
data16
adc
jns
jmp
fs
add
ja
add
push
mov
out
insl
movsb
dec
jb
inc
dec
add
lret
out
clc
add
xor
mov
mov
out
lods
cmpsb
pop
xor
lcall
filds
xor
add
popa
add
add
or
addr16
movsb
enter
push
shlb
add
dec
lods
cmpsb
pop
pop
std
or
cmp
adc
movl
bound
mov
shrb
mov
scas
lds
adc
mov
outsl
fwait
cltd
sub
mov
in
pusha
add
pop
mov
jo
leave
lds
or
cmpsb
xor
leave
imulb
aad
inc
dec
push
imull
mov
es
jbe
cmp
lods
fcomps
fsubs
dec
pop
add
add
cmpsb
hlt
adc
add
loop
add
xchg
adc
adc
xchg
shrb
push
adc
stc
jle
mov
jmp
dec
cmp
cmpsb
mov
jne
scas
loope
or
dec
out
push
lea
call
adc
shl
add
cli
scas
add
lods
int
push
jmp
jl
fisttps
add
dec
push
pop
out
sub
jmp
and
imul
dec
iret
aaa
loope
add
cwtl
xor
sub
rolb
add
xchg
add
mov
mov
add
out
stos
popl
mov
fists
stc
sbb
sub
inc
dec
add
jecxz
add
push
cltd
add
sbb
addr16
add
sbb
pushf
add
aas
test
mov
roll
add
mov
stos
test
push
adc
add
shlb
mov
add
and
clc
xor
push
xchg
out
sahf
in
add
int
sbb
xlat
add
loop
rolb
idiv
loopne
push
mov
out
xor
push
int3
mov
jle
repz
jns
xor
cld
jbe
test
add
or
mov
add
and
les
jg
stos
roll
jb
xchg
into
clc
and
add
fistpll
mov
dec
jnp
scas
pop
data16
inc
dec
cmpsb
sbb
ds
lock
imul
mov
sahf
cld
in
jne
into
cli
loopne
add
stc
adc
or
add
add
dec
cmpsl
pop
imul
mov
xchg
pop
push
sbb
inc
inc
and
push
mov
fs
inc
clc
js
rcll
add
cltd
xor
push
repnz
adc
outsb
stc
add
jge
pop
add
mov
add
outsl
and
test
dec
cli
or
icebp
int3
scas
cmp
fldcw
lds
push
scas
add
repz
mov
out
cli
outsl
test
mov
jmp
sar
mov
jl
incl
adc
ja
lods
add
call
add
sub
add
sbb
pop
cmpsb
inc
adc
add
in
xor
add
pop
or
inc
sarb
jge
test
fiadds
out
add
xchg
and
lahf
or
fwait
stos
push
push
stc
ljmp
inc
xor
add
add
fdivrs
pop
aas
loope
mov
rcrb
sbb
pop
loope
adc
mov
xchg
mov
add
jnp
jmp
push
inc
and
nop
adc
adc
in
mov
inc
pop
push
push
pop
mov
add
xchg
jg
push
test
dec
lock
stc
add
ja
loop
or
shrl
mov
cmp
icebp
jl
mov
bound
lea
push
add
push
imul
or
jge
cmpsl
inc
mov
scas
shr
lcall
jae
loopne
sub
lea
or
and
add
dec
xor
pusha
xor
cmp
mov
jmp
stos
ja
std
shlb
jmp
or
add
movhps
aas
add
xchg
in
div
xchg
das
jo
add
fldl
cli
out
jle
add
xor
daa
dec
repnz
lret
addl
or
push
inc
stc
cmp
push
cli
add
aaa
sti
mov
cmp
lea
or
xor
pop
pop
leave
cmp
xlat
psrlw
mov
mov
xlat
push
inc
add
xchg
inc
pop
sub
nop
jg
lcall
push
add
mov
in
mov
or
or
push
test
mov
movsl
jns
repz
mov
mov
fidivrl
sub
jnp
test
sarl
arpl
in
push
xor
iret
in
adc
push
mov
xor
test
add
in
xchg
and
inc
ljmp
mov
loope
jp
je
and
mov
dec
sub
push
and
out
add
inc
insl
rclb
adc
add
adc
hlt
add
push
mov
movb
xchg
push
dec
pop
aam
stc
pop
cmp
or
ret
mov
xor
shrl
movsl
inc
inc
add
lahf
int3
ja
jp
insl
add
popf
clc
add
cmpsb
or
call
jb
mov
bound
add
rclb
ss
scas
inc
add
imul
cmpsl
add
mov
sub
add
lret
mov
flds
or
cli
out
push
push
movl
or
stos
add
inc
push
cmp
and
xchg
add
fcmovnb
movsl
add
jns
stos
adc
icebp
fildl
add
mov
jae
outsb
push
aaa
inc
sbb
push
dec
push
ljmp
lods
fistpll
ss
pop
jnp
sub
push
in
call
sub
stos
jnp
cmp
and
xchg
lret
mov
or
push
jbe
dec
sub
cmp
jg
sahf
das
clc
repz
xor
ss
stc
push
inc
add
lds
xor
xchg
add
add
es
repnz
add
mov
ja
into
jle
jns
repnz
roll
mov
push
add
fiadds
sub
mov
fmuls
add
mov
out
aam
add
xor
fimuls
aad
mov
std
filds
scas
add
xor
and
das
pop
mov
jae
insl
into
add
sbb
cmc
lcall
arpl
adc
fsubrs
imul
fbld
inc
add
push
mov
and
mov
mov
fildl
lea
lret
and
add
pop
mov
clc
sbb
ljmp
std
pushf
adc
out
out
fsqrt
add
add
rolb
scas
std
addr16
ds
mov
je
add
add
sbb
aas
sbb
inc
add
shrb
adc
push
movb
mov
xchg
std
pop
stos
push
pop
add
jmp
add
fs
ret
adc
adcl
push
xor
inc
cmp
cmc
or
jnp
xchg
sbb
cmp
and
jg
jb
popf
popa
imul
adc
data16
jg
sub
into
jg
daa
inc
add
iret
fstpt
std
call
addl
out
data16
jp
rcl
push
test
xchg
mov
pop
pop
mov
mov
sti
add
xlat
add
pusha
and
mov
mov
repz
mov
cwtl
stc
subl
test
mov
push
in
idivb
movsl
add
xchg
and
push
lret
out
roll
xor
xor
fldcw
jns
jge
and
das
dec
call
add
add
imull
add
add
sbb
iret
fwait
rorl
stos
cmpsb
xchg
push
or
nop
lret
jne
sbb
and
pop
mov
aaa
dec
testb
cli
sub
dec
shrl
inc
data16
inc
xchg
repz
std
xor
jge
cmp
out
xor
cli
jno
inc
dec
enter
int3
adc
or
lock
in
jns
pop
add
fisttpll
pop
xor
nop
lea
add
in
out
add
lret
data16
dec
add
add
rcrl
imul
push
mov
and
sbb
fwait
mov
test
test
filds
adc
sbb
sub
mov
lods
mov
add
mov
fldz
pop
stos
gs
xchg
sbb
shll
fs
inc
jle
jb
outsb
dec
add
mov
fdivs
mov
sar
add
mov
cmp
xor
xor
add
in
inc
add
out
cmp
imul
cld
add
dec
mov
add
mov
add
add
jp
push
xchg
jae
fidivl
test
sub
push
add
add
pop
add
imul
inc
add
cltd
inc
sub
add
lret
lods
push
pushf
add
shrl
dec
test
xchg
call
add
imul
mov
fwait
je
pop
add
stos
add
jne
mov
xchg
lcall
sub
or
cmp
mov
sub
add
addb
fmull
and
ret
add
in
and
movsb
cmc
test
dec
xchg
add
add
inc
inc
xlat
jo
inc
imul
push
fnstcw
lods
add
out
fldl
add
xor
adc
clc
cld
jmp
sub
stos
xchg
xchg
and
jl
mov
or
scas
inc
es
stos
add
ja
roll
insb
cmp
adc
sbbl
pop
push
cld
xchg
inc
jnp
sub
lods
cmp
add
add
arpl
lret
leave
insb
add
and
scas
add
inc
add
add
mov
or
sbb
push
add
iret
stos
imul
push
fiadds
ret
lret
sub
lret
lock
test
sub
iret
add
fsubs
mov
pop
cmp
inc
add
loopne
stos
aaa
dec
imul
scas
add
movsl
push
pop
add
int3
mov
mov
out
and
add
cwtl
add
xchg
mov
pop
ja
das
popa
jo
out
add
dec
stos
movsb
icebp
add
mov
mov
jno
icebp
ret
sar
lcall
aaa
lret
push
int3
cltd
sti
and
xchg
pop
cli
cmp
and
adc
int3
push
popa
pop
jl
ja
fisubrs
jl
out
in
sbb
std
jp
popl
xor
push
outsb
dec
ss
add
incl
out
xchg
mov
mov
shl
xchg
add
cli
aaa
xor
add
testl
aam
add
add
add
cld
jmp
push
add
out
mov
cld
or
icebp
lcall
cmp
add
xor
mov
call
and
scas
sbb
mov
inc
es
in
push
test
cmpsb
fsubrs
dec
add
test
push
popa
aad
movlps
pop
loop
fisttpl
in
repz
jle
push
add
andl
jp
mov
pop
inc
add
out
mov
out
inc
bnd
gs
jae
stc
fldcw
dec
inc
add
das
cmp
fs
push
movsb
dec
ds
and
stos
add
mov
add
jo
sbb
push
jb
cmp
shlb
test
add
mov
add
xchg
adc
lock
mov
jb
adc
or
xchg
adcb
sbb
inc
mov
mov
inc
cld
insb
push
daa
jbe
test
mov
and
sub
std
pop
add
lahf
lea
sub
aas
add
mov
xchg
add
fisubrs
cwtl
rolb
ficomps
adc
mov
punpcklwd
ud2
xor
cwtl
pop
adc
mov
arpl
inc
shlb
mov
add
and
sbb
inc
and
shr
push
push
sub
roll
xchg
inc
flds
daa
mov
pusha
cmpsl
notrack
add
cmpsl
and
loopne
add
inc
xchg
add
pop
jno
shll
add
jmp
add
int
pop
adc
add
add
cmp
scas
cmp
popf
movsb
cmp
aam
inc
mov
scas
stos
imulb
sbb
sahf
add
outsl
stos
xchg
in
stc
dec
cmp
stc
add
add
cld
subl
or
dec
sbb
add
mov
lods
dec
add
shl
dec
sahf
aam
xchg
lcall
and
insl
std
add
xor
ror
sbb
lret
dec
ret
add
test
xor
shr
push
xchg
inc
add
fwait
pop
fiaddl
aam
rcll
mov
jecxz
add
dec
jo
pushf
or
or
or
cmc
testb
inc
mov
mov
imul
add
insb
inc
mov
add
fdivrl
hlt
leave
mov
icebp
roll
call
inc
cmpsb
fisubrl
jmp
repnz
pop
and
sub
push
add
int3
stc
push
jecxz
sub
add
add
arpl
add
xchg
xchg
sbb
add
push
mov
or
push
lea
hlt
sub
add
mov
lock
inc
test
enter
mov
ret
sti
lock
cmc
jo
or
in
orl
xor
mov
add
mov
sarb
mov
add
xchg
add
gs
sub
pop
inc
adc
hlt
xor
push
arpl
push
sub
mov
add
xchg
int
cmp
jno
xchg
add
add
xor
and
jle
sbb
add
add
fs
dec
les
test
pop
push
movsb
sbb
dec
jg
add
or
mov
or
pop
cltd
mov
inc
add
fcoms
fistpl
jg
add
or
mov
jbe
add
dec
nop
lods
mov
push
rclb
cmp
pop
or
rcr
push
xor
sbb
stos
pop
cmpsb
inc
dec
or
fadds
bound
lcall
mov
or
cmp
inc
addr16
shrb
and
orl
mov
fstl
xchg
push
push
jge
xchg
lret
sbb
decl
inc
scas
std
or
out
out
fsub
sbb
inc
sahf
loopne
sbb
add
stos
mov
aam
in
xor
pop
jae
mov
ret
test
cmp
xchg
outsl
pusha
xor
jl
jbe
add
and
xchg
mov
iret
add
xchg
roll
ljmp
rol
jmp
pop
scas
push
add
andb
je
add
imulb
or
imul
leave
fld
push
addr16
xor
rcll
daa
lea
addb
dec
xchg
add
fldl
pop
pop
cmp
ret
push
std
data16
adc
inc
lret
or
push
sub
movsl
xchg
jle
push
je
int
sbb
jl
js
shlb
mov
loope
mov
hlt
les
mov
test
jbe
adc
cmc
dec
into
inc
mov
mov
ret
mov
pop
jp
ret
pop
aam
inc
lahf
mov
es
dec
dec
mov
pop
in
outsb
into
or
add
loop
sub
xchg
pop
cmpsb
jno
repz
fsubrs
xchg
fadds
icebp
enter
cwtl
out
shll
in
arpl
jb
mov
pushl
test
dec
subl
add
mov
dec
fisubrl
add
lock
dec
dec
mov
mov
ficoms
ret
jae
add
pop
shll
mov
jmp
fsubrp
xchg
pop
adcl
xchg
sub
or
add
add
scas
and
pop
xlat
fcomi
jle
ret
cltd
lods
add
xchg
rorl
adc
cwtl
add
mov
inc
icebp
lret
xchg
repz
cltd
mov
pop
and
or
bound
aam
adc
roll
daa
sub
pop
jns
sbb
inc
lahf
idiv
add
nop
sti
movsb
mov
xchg
mov
sbb
je
adc
add
ret
xor
xor
dec
cmp
mov
roll
inc
sub
jle
loopne
in
out
popf
cmp
pusha
aas
add
ret
mov
xchg
cmp
fildl
mov
gs
cmpl
fmuls
xchg
or
mov
jno
adc
insb
movsl
dec
or
jne
test
and
int3
aad
sbb
mov
daa
jae
xchg
sub
add
mov
or
sbb
add
or
mov
loopne
testl
or
mov
out
call
fwait
and
jl
add
xor
jne
add
sahf
xchg
push
popf
mov
call
ja
add
jle
jno
fists
mov
push
mov
inc
lea
stos
add
inc
lods
push
add
fiadds
lret
mov
pop
xlat
cmc
notl
clc
roll
scas
daa
cmpsb
mov
orb
push
pop
dec
add
add
mov
std
add
xor
xlat
xchg
aas
es
mov
jmp
or
mov
pop
data16
adc
add
sub
push
pop
jp
add
add
mov
sub
mov
adc
add
scas
fcmovnb
gs
inc
les
mov
mov
out
rorb
mov
adc
nop
shll
cmp
shll
nop
or
mov
nop
testl
jb
ret
adc
inc
pop
or
push
test
sbb
jmp
mov
inc
mov
xchg
xchg
movsb
inc
add
ja
outsl
stos
roll
mov
movsl
add
or
mov
cli
sarb
sub
enter
adc
idivl
icebp
adc
cmpsl
mov
and
sarl
jl
adc
xchg
add
mov
sub
mov
mov
add
into
call
pop
add
fcomi
add
push
adc
push
es
add
jge
out
cli
test
sti
addr16
xchg
das
jp
stc
movsb
jbe
clc
inc
cs
xchg
adc
add
jl
inc
pop
lods
fnsave
sahf
lret
xor
and
lea
inc
lret
pop
rolb
mov
js
dec
and
and
inc
add
mov
adc
dec
lret
sub
dec
or
jb
and
cltd
testl
and
pop
rclb
xor
bound
jp
or
push
stos
pop
and
push
cwtl
test
pop
out
add
addr16
cmp
add
dec
arpl
add
mov
mov
lea
sti
sbb
cmp
scas
repnz
pop
arpl
leave
data16
and
insb
xchg
fs
add
mov
jge
cmp
and
lea
callw
addb
insb
bound
sbb
movsb
decb
inc
add
add
sbb
dec
dec
lahf
outsb
stos
mov
inc
cmp
pop
push
inc
adc
add
xchg
in
inc
and
inc
add
dec
add
or
inc
mov
xor
jo
add
sbb
imul
lock
push
fstl
clc
out
popf
adc
jecxz
push
add
add
mov
add
add
sub
cmp
sbb
adc
add
inc
xchg
lods
push
loope
fwait
xor
stos
jmp
mov
popf
test
jg
add
xchg
shlb
adc
push
pushw
std
mov
add
mov
stc
adc
dec
jne
pop
or
test
adc
add
mov
cmp
add
call
add
addr16
xchg
add
iret
add
add
out
dec
fildl
jb
add
test
sti
pop
mov
mov
sbb
fs
add
push
pusha
xchg
dec
rolb
outsb
das
decb
push
pop
xchg
repz
mov
cli
aaa
pop
xchg
adc
and
aas
mov
ljmp
add
nop
idivb
add
add
xchg
add
add
add
pop
sbb
adc
adc
add
stos
adc
stos
pushf
pop
jb
mov
insl
add
adc
pop
mov
cmpsl
fcomip
or
shlb
push
add
inc
or
mov
dec
pop
adc
push
inc
mov
adc
aaa
jns
in
ljmp
icebp
sbb
sbb
cld
and
push
push
scas
cmp
pop
test
inc
andb
jo
stos
mov
inc
aad
int3
cwtl
xor
add
ret
add
or
leave
adc
fidivrs
subl
add
add
fcomps
add
cmp
orb
pop
adc
xchg
add
add
fstp
icebp
pusha
fsubrs
ror
mov
stos
add
pop
mov
add
aam
addr16
fnsave
xor
mov
lcall
addr16
add
repz
rclb
adc
xchg
sbb
jecxz
scas
and
cmp
fidivrl
loope
repz
cld
lock
jle
pop
test
and
jg
mov
pop
jge
mov
and
mov
cwtl
and
into
mov
rorb
mov
mov
dec
inc
lods
sub
nop
pusha
add
or
sub
add
into
scas
xor
inc
scas
mov
lods
mov
sti
ja
inc
inc
add
add
add
loopne
inc
jge
outsb
bnd
dec
add
pop
add
cli
shll
jge
ds
roll
mov
aaa
subb
mov
pop
sbb
negb
adc
or
add
sahf
or
cmpsb
lds
jle
inc
xor
xor
fwait
lahf
add
stos
in
shl
roll
or
or
dec
inc
push
xor
add
push
dec
out
add
cwtl
add
sbb
lret
idiv
mov
pop
xor
sbb
dec
fimull
mov
cli
lods
add
scas
mov
pop
lret
mov
push
pop
xor
icebp
dec
add
fcompl
inc
inc
mov
popf
mov
icebp
xor
fldl
mov
sbb
ljmp
mov
sub
negb
pop
int3
inc
xor
negl
out
les
jo
fidivrl
add
cltd
dec
cmp
push
out
adc
jmp
push
sub
fdivs
pusha
gs
xchg
dec
jl
stos
push
imul
mov
pop
mov
mov
and
sub
sub
or
imul
inc
sub
lahf
cmp
pop
ret
push
leave
or
aad
sbb
sbb
call
sbb
add
in
sub
add
xchg
sarb
and
sti
int
or
shl
rol
add
data16
pop
inc
pop
testl
push
iret
sbbb
sti
dec
add
sub
lret
add
jb
push
stos
pop
cmp
mov
sahf
add
fldl
es
nop
jecxz
jbe
mov
es
sar
ret
adc
in
ja
add
out
and
xchg
mov
jecxz
in
xchg
jge
test
in
fistpl
add
insb
rolb
jns
jle
mov
sbb
add
lock
push
add
add
push
pop
cmpsl
jp
jo
scas
xchg
dec
mov
dec
pusha
push
adc
repz
add
and
add
add
pop
loopne
add
imul
mov
add
js
and
in
add
sbb
cli
fadds
sub
lds
xchg
inc
aad
adc
mov
sub
and
mov
cmp
ds
sub
shlb
mov
daa
adc
add
dec
in
fldl
aad
mov
or
lahf
sarb
jae
add
inc
data16
cld
in
out
arpl
ret
and
lcall
cmp
sti
pop
push
mov
call
aas
inc
mov
mov
lock
and
pop
filds
xor
add
dec
mov
adc
addr16
xchg
aam
aam
shll
cs
push
sahf
lcall
jb
incb
dec
or
test
add
or
arpl
inc
insb
call
xor
mull
movl
adc
xchg
inc
jo
mov
sahf
push
mov
add
popf
cmc
lahf
divb
andb
mov
lret
adc
cmpsl
jb
push
adc
sbb
dec
in
mov
loop
dec
movsb
leave
push
add
ret
divb
xor
cmp
push
cmpsl
add
or
sub
nop
add
shl
inc
insl
movaps
mov
or
aaa
cs
and
sub
fsts
mov
sbb
push
mov
add
loop
jnp
mov
cltd
xchg
movsbl
add
xor
orl
add
jecxz
xchg
jmp
or
mov
add
jbe
pop
inc
adc
add
inc
sahf
mov
add
mov
push
pop
and
push
sub
push
add
out
pop
shll
inc
cmp
mov
sbb
das
add
xor
jle
push
repz
push
repnz
idivl
or
mov
add
adc
and
das
xadd
push
std
bound
sub
add
dec
mov
rcrl
call
sub
mov
inc
dec
lds
dec
push
jb
xchg
outsl
insb
or
mov
add
int
adc
sub
imulb
repnz
sbb
movsb
popa
jmp
out
xchg
xor
enter
loop
or
roll
sub
pop
lret
inc
test
mov
leave
cmp
jnp
insb
mov
add
pop
add
or
xchg
inc
test
mov
push
add
fsubl
sub
testb
sub
xor
loope
mov
rolb
nop
pop
out
fstps
lahf
or
fidivs
adc
pop
ds
stc
mov
jle
or
add
loope
in
adc
add
mov
xchg
xchg
push
dec
add
lods
add
xchg
dec
pusha
mov
cmp
dec
gs
adc
sub
adc
rclb
prefetch
mov
add
sbb
sub
and
push
jnp
cmp
lcall
inc
dec
dec
ljmp
jl
or
inc
insb
lret
cli
mov
xchg
out
mov
add
adc
sub
or
mov
loop
movsl
rclb
add
add
test
fimuls
add
mov
movsl
add
loopne
daa
pop
add
push
cs
sahf
in
mov
sub
aas
fucom
mov
xor
out
ljmp
fmull
jp
push
pop
jg
cmpsl
fwait
mov
add
pop
pop
cmpsb
add
dec
aad
jl
pop
fmul
orb
pushf
shlb
inc
in
mov
imul
pop
mov
icebp
bound
int
mov
pop
cmp
push
movl
add
mov
out
pop
cmc
mov
pop
pop
push
cmp
lret
iret
shl
dec
out
xor
add
leave
xor
dec
push
cs
mov
inc
popa
int
mov
jnp
adcb
sub
pop
test
call
ja
mov
dec
int3
add
adcb
mov
add
add
shlb
fidivs
in
pop
repz
es
jge
fisubl
push
loop
lcall
or
adc
cmp
adc
and
or
add
ret
mov
and
and
out
sti
add
pop
aaa
push
or
imul
push
pop
push
push
mov
lds
fstpl
shr
cli
mov
add
adc
test
ja
jae
out
mov
movsb
mov
dec
data16
sbb
aas
stos
push
add
jae
cmpsb
and
ljmp
enter
in
int3
jo
push
jnp
add
lret
and
outsl
in
add
add
add
jnp
add
lahf
fdivrs
or
rcrb
nop
test
mov
andl
cltd
pop
add
jl
add
mov
iret
jl
sbb
mov
jle
cli
add
push
mov
jo
insl
add
xchg
lret
xchg
add
pop
cld
adc
push
add
add
lret
test
arpl
test
pushf
pusha
iret
je
lea
loope
dec
pop
or
push
inc
cmc
mov
lock
call
push
inc
hlt
cmpsl
stos
and
xchg
movsl
add
push
jl
test
xchg
mov
xorl
add
subl
dec
scas
fcomp
push
add
cld
xchg
xor
jnp
cld
loope
push
xor
outsb
jo
inc
pop
loop
or
cmp
add
push
das
inc
fldl
cmpsl
mov
cmp
aad
sub
mov
sti
adc
or
push
aam
gs
mov
and
inc
lret
xchg
hlt
add
loop
jp
addb
mov
icebp
arpl
es
les
mov
xchg
jge
pop
mov
dec
mov
sub
or
mov
rcrb
test
movsl
test
in
nop
add
lock
js
xlat
add
pop
xor
orb
mov
leave
cmpsb
jge
or
add
ret
rcll
and
mov
pop
loop
pop
ficompl
mov
mov
dec
ss
jne
bound
cwtl
out
add
lods
lcall
add
and
jge
or
push
push
inc
cmp
in
add
rclb
xchg
xchg
sub
jecxz
push
add
xchg
scas
add
inc
add
push
add
stos
pop
bound
inc
jecxz
and
popf
xchg
dec
ret
adc
fwait
sbb
jmp
add
std
arpl
sub
mov
in
adc
frstpm(287
lret
in
shrl
push
push
sub
clc
mov
jp
out
mov
sbb
roll
mov
stc
add
dec
das
push
xor
sub
popl
cmp
ltr
clc
mov
mov
cwtl
and
xchg
fdivrs
je
cmp
pushf
lret
pop
jecxz
xor
scas
out
loop
mov
fs
cli
and
sub
mov
loope
xchg
das
mov
fidivs
cmpb
cwtl
or
and
add
ss
fimull
popa
add
cmp
pop
and
fwait
pop
xor
or
into
xchg
push
add
aam
and
cmp
push
sbb
add
add
add
rdmsr
pop
mov
mov
and
mov
jbe
mov
jmp
icebp
mov
incb
pop
js
imul
mov
add
sbb
push
iret
mov
and
jbe
pop
inc
fimuls
pop
mov
and
imul
fcom
adc
push
or
fucomp
imul
adc
in
adc
mov
cmpsl
add
ja
pop
xchg
xor
mov
mov
mov
mov
sub
add
xchg
push
fisubrs
mov
xchg
add
icebp
xchg
and
mov
mov
das
repnz
int3
add
int3
xor
cwtl
scas
push
pusha
mov
add
fnstcw
mov
push
js
insb
nop
add
xchg
je
add
stos
iret
jle
mov
adc
lcall
pop
sub
add
clc
add
out
xor
add
mov
push
loopne
addr16
inc
es
pop
add
add
and
jle
dec
cmpsb
rclb
dec
add
bound
add
pop
loope
add
and
insl
enter
out
xor
arpl
sub
ds
aad
lcall
mov
inc
scas
jle
pop
sbb
cltd
cmpsl
leave
pop
xor
stc
pop
les
std
js
xor
cwtl
push
adc
lds
iret
fdivrs
and
mov
add
shrl
jecxz
clc
insl
xor
mov
mov
iret
add
push
jge
xlat
and
jnp
add
add
imul
sahf
jbe
out
andl
cmp
fwait
dec
cmp
add
pop
rcr
add
add
icebp
add
iret
pop
xchg
imull
add
lahf
iret
push
adc
mov
add
roll
popa
out
movsb
or
stc
mov
clc
popf
add
add
roll
flds
add
subl
jl
sub
sahf
imul
push
pop
ret
cmp
jecxz
jb
aam
add
out
xchg
cmpsb
inc
mulb
lea
adc
mov
push
cmp
push
inc
ljmp
add
fsubrs
lahf
xor
inc
or
jle
add
fadd
add
add
mov
int3
add
cli
lcall
cmc
jg
imul
ret
adc
pop
add
mov
aas
aad
rolb
add
sub
adc
jge
add
pushf
addl
sahf
add
pop
sub
and
fdiv
lods
sbb
movsl
xor
test
and
bnd
out
mov
js
hlt
negb
popa
sbb
add
sub
daa
ja
pop
add
cmpsb
cmp
add
mov
push
xchg
push
xchg
or
mov
and
nop
roll
add
cld
cmp
mov
cli
fiadds
mov
loope
add
adc
shr
mov
cmpsl
stc
add
sub
add
aaa
or
test
add
add
lea
mov
and
ljmp
inc
xorl
movl
dec
mov
pop
sub
fimull
fsub
add
clc
cmpsl
mov
mov
pop
push
fbstp
pop
add
add
pop
arpl
sub
jge
push
add
lods
mov
sub
int3
jns
js
pushf
xor
add
into
clc
mov
mov
and
mov
add
pop
cltd
clc
inc
xchg
add
add
test
add
clc
inc
cmp
stos
enter
cli
sti
mov
push
add
aam
push
fsubl
jno
add
jbe
daa
enter
aam
into
mov
push
outsb
push
add
inc
sub
sbb
mov
xchg
iret
pop
fwait
orb
xchg
sbb
in
shrl
push
add
ficoms
jmp
or
mov
add
pop
inc
scas
add
inc
push
add
mov
add
adcb
inc
add
cmp
mov
addr16
inc
inc
push
add
dec
stos
pop
mov
nop
mov
jmp
inc
popa
push
adc
movsb
sbb
add
testl
enter
dec
cmp
popa
add
stos
lds
fadds
sub
lea
sub
cmp
jg
movsb
mov
adc
mov
lret
add
jle
fmul
jo
pop
daa
lret
subb
and
jbe
mov
sbb
add
add
add
out
add
inc
movsl
sahf
add
adcb
cmp
fimuls
pop
mov
out
hlt
mov
jecxz
ret
icebp
sub
fbstp
inc
xchg
xchg
in
mov
mov
add
inc
fbstp
lahf
push
jecxz
lods
mov
mov
sbb
xchg
jl
mov
nop
xor
loope
jbe
addl
es
mov
mov
test
jp
scas
sub
xor
add
stos
pop
push
pop
sbb
cltd
or
ss
jmp
les
add
xor
test
dec
push
push
test
cmc
cmp
mov
pusha
mov
stos
es
mov
mov
je
add
sbb
and
outsb
sahf
pop
insl
sbb
call
dec
xchg
xchg
addr16
sbb
dec
incl
rolb
add
subb
mov
dec
aas
jmp
cwtl
xor
lcall
pop
cwtl
jnp
and
add
sahf
add
add
or
loope
cmp
push
add
scas
dec
jne
cmp
test
ret
add
cmp
je
ljmp
push
cs
xchg
xchg
add
add
sbb
cld
jg
bound
hlt
and
add
stos
out
add
sub
push
sub
mov
push
lock
xchg
sahf
cmpsl
cltd
leave
adc
hlt
jg
cmp
mov
sub
in
addr16
pop
pop
add
pop
mov
jne
pop
orb
jo
sbb
fsubs
jp
mov
mov
add
adc
push
add
mov
add
jne
jbe
pop
pop
in
or
imul
sub
dec
popf
je
ret
out
add
jnp
add
add
add
inc
add
cwtl
xchg
jmp
add
add
add
clc
push
pop
enter
daa
nop
jge
movb
mov
dec
adc
repnz
popa
pop
daa
push
jle
pop
out
jne
stos
fldl
dec
mov
mov
add
sbb
add
movsl
add
mov
sbb
ja
sbb
jae
outsl
add
icebp
and
int
adc
mov
inc
movsb
and
bound
out
xchg
je
ficompl
sub
mov
xchg
sub
or
add
add
es
fisttps
inc
test
jbe
jb
outsl
add
sub
inc
sbb
adc
cmpl
or
fnstcw
xorl
jle
push
repz
jecxz
xor
xor
xor
dec
insl
add
sbb
jns
push
add
pop
leave
and
mov
out
xor
sub
add
pop
sahf
cmp
leave
cmc
rclb
add
int
jno
fs
mov
add
addb
repnz
adc
movsl
fnsave
sub
rolb
xor
lahf
dec
push
xor
test
mov
ret
and
lret
pop
mov
jae
ror
cmp
lods
push
cmpsb
movsl
mov
lret
adc
or
pop
xchg
adc
sub
and
ret
mov
rcll
cmpsb
pop
push
das
inc
xchg
dec
push
push
pop
popa
iret
les
out
or
add
addl
repnz
add
push
or
add
andl
mov
int
adc
imul
cmp
ds
daa
rcll
add
sarb
stos
pushw
adc
jecxz
inc
adc
add
mov
add
add
cli
add
inc
imul
xchg
out
add
push
out
das
je
jns
add
lods
cli
inc
sub
jb
add
mov
jae
add
faddl
cli
jl
arpl
add
or
pop
int3
dec
fiaddl
mov
mov
arpl
xchg
dec
mov
add
pop
push
and
add
sub
and
lock
cmp
xchg
leave
mov
fs
add
fcompl
and
fs
dec
data16
push
mov
mov
cltd
dec
mov
popf
pop
add
xor
cld
imul
ja
lahf
stos
add
add
cmp
sbb
inc
sbb
jl
mov
setle
fidivrs
popl
xchg
inc
xchg
add
sbb
add
aaa
push
sbb
xor
cli
push
xor
cmp
mov
push
adc
adc
add
add
icebp
pop
gs
push
sub
mov
inc
lret
cmpsb
inc
int
add
add
out
jl
cmp
add
xchg
xor
cld
dec
ret
push
jg
es
mov
add
into
mov
adc
or
call
cmpsb
add
aaa
out
test
cmp
adc
addps
dec
xlat
xchg
sub
add
xchg
push
jg
test
add
cmp
ret
cmp
lahf
jecxz
pop
test
cmpsl
cmp
aad
dec
and
push
sbb
cwtl
adc
xchg
loopne
lret
data16
dec
mov
pop
add
or
imul
cmc
in
nop
mov
xchg
ja
add
pushf
ss
jg
add
add
in
pop
inc
les
js
outsb
add
or
pop
sub
mov
jge
sbb
mov
dec
add
mov
cltd
pop
add
mov
mov
out
add
jle
shll
icebp
outsl
jne
sub
mov
xor
pop
adc
pushf
lcall
cmp
fcmovne
add
dec
cwtl
pop
aad
push
aam
add
sbb
es
add
jmp
add
movsl
add
push
xor
loop
dec
cmp
adc
cwtl
adc
add
or
mov
cmpsl
orb
jo
jl
push
subl
ljmp
popf
xchg
xchg
mov
ret
fcmovnu
push
push
inc
ljmp
cmp
cmc
mov
stos
jmp
dec
inc
dec
push
lock
xor
ret
nop
inc
fisubs
aas
and
subl
xchg
jl
sbb
jecxz
mov
xchg
jecxz
add
sub
sbb
add
push
xchg
ljmp
inc
dec
mov
daa
daa
add
add
imul
add
add
loopne
dec
add
xchg
cmp
or
add
add
pop
bound
mov
jmp
mov
test
fdivl
test
ds
aam
mov
fwait
dec
adc
divb
lret
dec
add
mov
push
add
pop
in
mov
sahf
xchg
dec
push
and
int3
cmp
sti
adcl
mov
aam
sbb
sbb
mov
jae
push
in
ds
mov
sahf
nop
push
loope
mov
imul
fnstsw
loop
add
cmp
pop
lret
mov
cld
iret
add
xchg
adc
or
aam
xor
pushf
mov
or
or
jnp
jmp
adc
add
mov
add
movsl
add
enterw
or
fcoml
pop
adcl
push
js
out
push
jns
addr16
mov
add
mov
sbb
sub
push
pusha
cmp
cmp
add
dec
hlt
pop
jnp
lods
cmp
out
addl
es
and
add
add
mov
add
repnz
fdiv
pop
cmp
inc
mov
adc
jae
out
push
mov
testl
mov
mov
cmp
add
rcrb
or
pop
loop
push
mov
mov
cli
xor
js
aam
xchg
incb
sbb
pop
mov
imul
in
jb
xlat
mov
incl
jb
jbe
repz
add
mov
pop
xchg
jns
cmpsl
add
lahf
cmp
cmpsl
lods
mov
lea
add
popa
add
mulb
cmp
addb
or
add
movsl
rcll
sldt
mov
loop
jp
jno
cmpl
mulb
insl
cmpsl
lret
sbb
xchg
add
jge
mov
dec
rcll
add
add
cmc
ffree
add
add
mov
rolb
push
jmp
int
loop
push
pop
xorb
mov
ss
inc
add
push
movsb
xorb
mov
jecxz
inc
or
add
nop
add
divb
addb
loope
mov
enter
shrb
sub
les
mov
test
inc
sub
add
mov
pop
shl
sbb
sbb
add
popl
mov
mov
inc
add
adc
shl
loop
jg
add
add
cmp
pop
inc
repz
mov
aad
cld
adcb
cli
jae
or
mov
add
mov
mov
cmp
sub
iret
dec
sub
push
add
lcall
std
adc
dec
mov
mov
les
lock
fidivrl
ror
mov
dec
stos
add
hlt
jle
pop
pop
jge
enter
dec
sbb
add
lcall
inc
std
and
insl
jns
xor
fildl
and
mov
cmpsb
add
inc
lret
sub
inc
mov
in
inc
arpl
push
xchg
sbb
dec
adc
add
in
add
xchg
test
xchg
dec
mov
mov
iret
aam
in
push
mov
mov
or
fdivl
sbb
mov
jl
add
mov
xor
pop
push
in
and
cmp
jmp
push
push
jb
add
mov
cmp
xchg
or
repnz
aaa
cmp
mov
pop
stos
scas
or
in
mov
and
jno
jnp
lcall
mov
pop
jno
add
push
insl
jne
jnp
mov
add
push
or
add
cmc
jl
push
loope
test
imul
mov
andl
rolb
lock
clc
lods
test
out
and
nop
push
aam
popa
jb
mov
dec
lahf
dec
mov
mov
cmp
lea
add
inc
hlt
ds
rclb
imul
jge
std
das
xchg
pop
xchg
verw
imul
and
mov
jbe
aam
inc
xchg
dec
mov
lret
lahf
xor
jg
outsl
ret
sub
add
stos
jp
jno
cs
std
dec
lret
bound
jle
jno
add
pop
lcall
call
sub
int3
mov
mov
icebp
mov
lds
adc
push
sbb
mov
ds
pop
subl
or
out
pop
xlat
pushl
popa
mov
jmp
scas
and
enter
push
lret
in
mov
adc
test
push
outsl
and
add
add
fcomip
scas
mov
lret
xorb
add
addr16
mov
ds
test
or
sbb
enter
push
iret
cmp
in
push
lods
call
add
jg
or
pop
cmp
ss
jne
fiadds
mov
jle
lcall
pushf
xor
lahf
ss
fadds
or
jle
mov
inc
mov
arpl
pop
add
test
sbb
cmp
sub
and
jnp
push
mov
jbe
mov
lea
stos
xchg
add
clc
mov
add
pop
adc
ror
push
add
add
add
dec
verr
out
add
cs
pop
cmp
sarl
mov
ja
inc
add
add
sbb
pop
out
push
fistl
sub
mov
ja
adc
into
dec
int
jno
loop
mov
testb
add
mov
mov
mov
mov
or
add
jo
movb
mov
add
inc
scas
repz
or
test
inc
cmp
out
mov
sbbb
rorb
enter
fwait
push
xor
jbe
jns
loopne
xor
sbb
lret
iret
insb
xchg
dec
movsb
adc
aas
dec
addl
leave
popa
mov
push
iret
dec
or
add
enter
push
add
pop
xor
push
mov
mov
xchg
add
dec
adc
pop
lret
add
out
lock
in
push
push
sub
add
pop
cmp
pop
sbb
into
lcall
test
repz
sahf
add
adc
sub
push
addb
fs
sbb
xchg
call
pop
xor
sbbl
or
rcl
inc
cmp
je
ret
push
add
in
dec
loop
cli
fwait
jbe
or
test
fcomi
repnz
aam
add
adc
jle
push
add
lods
fwait
sbb
xchg
add
adc
sbb
mov
xor
iret
ror
cmp
mov
stos
or
xorb
inc
addb
xor
xchg
in
cmc
rcrb
push
xor
and
jle
sub
xorl
call
pop
mov
mov
movsl
fdivr
and
fwait
in
int
lods
imul
out
outsl
imul
add
mov
xchg
inc
add
xchg
adc
test
jno
or
xchg
add
les
adc
or
jge
inc
jnp
xlat
jl
clc
push
mov
in
pop
repz
xlat
sahf
push
pop
fildl
in
add
out
pop
or
sub
dec
push
shlb
imul
fs
add
inc
lods
outsb
mov
add
dec
inc
loope
das
outsl
add
cmp
fcompl
jecxz
cmpl
push
inc
add
add
add
jae
or
aam
cmp
ficoml
push
add
xchg
mov
hlt
add
xor
rorl
xchg
mov
sahf
add
pusha
movsl
xor
test
cmp
sbb
or
shll
pop
repz
add
push
xchg
loopne
fstps
rolb
fs
fisttpll
lcall
mov
add
outsl
lret
data16
lret
jno
mov
mov
adc
mov
or
lcall
xor
add
testl
sbb
add
fdivp
inc
sub
adc
adc
fcoml
pop
add
add
cmp
mov
cwtl
movsb
negl
jne
test
fs
stos
movsl
leave
fnstsw
and
mov
shll
cmp
lret
notb
pop
popf
push
fidivrs
iret
adc
push
in
xorl
sub
dec
pop
imul
add
and
add
sbb
lret
mov
loopne
or
das
add
fisttpl
xchg
add
add
mov
add
jae
dec
repnz
sub
fadds
push
jmp
add
cmp
stc
sbb
ja
add
icebp
mov
cmpsb
cmpsl
movsb
mov
sbb
add
add
rolb
dec
add
cmp
cmp
out
movsb
sub
scas
loope
lcall
es
jecxz
aaa
xchg
je
cmc
insl
ja
inc
or
inc
adc
add
add
imul
js
lret
add
mov
mov
sub
pop
js
jb
pop
or
cli
lods
in
add
cmp
push
jo
xor
ret
push
dec
add
xchg
lret
push
daa
mov
cmp
jnp
mov
outsl
leave
pop
mov
push
mov
ret
imul
mov
test
mov
andb
cmp
dec
fwait
dec
stos
dec
incl
push
scas
xchg
adc
loop
add
jnp
subl
loop
mov
cmp
sbb
dec
daa
sub
jge
test
mov
sub
outsb
adc
mov
xchg
fcomps
pop
imul
add
add
int3
stos
add
fs
mov
and
dec
movsb
pop
push
lret
mov
sbb
or
xorb
scas
pop
add
aad
stc
fcoms
dec
popa
pop
add
cltd
push
xor
mov
popa
push
add
daa
push
mov
inc
add
add
jmp
mov
add
xlat
lretw
pop
add
dec
lods
add
adc
push
add
and
add
xor
add
push
or
insl
sahf
add
sub
pop
xchg
adc
mov
add
test
icebp
dec
mov
mov
sahf
mov
mov
aam
add
out
std
mov
xchg
scas
pop
dec
sbb
jbe
imulb
ret
sbb
mov
cmpsb
push
mov
push
add
mov
dec
push
subb
push
insb
add
mov
mov
push
push
xchg
push
cmovae
ss
gs
xor
push
and
lods
aam
jnp
and
clc
push
push
and
jno
ss
add
dec
and
dec
pop
jp
or
rcrb
add
scas
es
leave
add
stos
frstor
test
push
nop
add
lea
mov
mov
shrl
xor
test
add
push
lds
les
mov
xchg
push
ja
and
les
add
add
jo
push
in
dec
dec
div
icebp
out
jle
mov
add
mov
gs
mov
addr16
aas
xchg
add
cmp
sbb
lods
or
adc
add
in
inc
mov
test
xchg
imul
mov
add
push
loope
fwait
add
dec
xor
dec
xor
pop
sub
faddl
add
mov
or
outsl
sti
adc
or
jne
sti
add
add
je
or
test
mov
test
sbb
dec
out
xor
lock
add
mov
hlt
fisubrs
js
adc
addr16
lret
mov
hlt
cmpsb
repz
int
cs
inc
xchg
push
inc
xor
sub
filds
enter
add
sub
inc
adc
shll
mov
pop
cli
out
lcall
aam
int
cld
push
fcompl
lcall
jno
inc
cmp
pushf
insb
iret
add
cld
add
pop
movsl
inc
pusha
dec
test
mov
mov
hlt
scas
add
mov
xchg
or
cmp
orb
push
aam
insl
mov
xorb
imul
sbb
add
adc
fbld
fdiv
mov
aas
rolb
mov
leave
dec
add
loopne
cltd
inc
cmp
sbb
bound
jb
push
or
incb
cmp
std
push
mov
ror
xor
jne
cmp
mov
test
push
fmulp
fs
icebp
add
aaa
add
push
jg
mov
xacquire
loope
jb
stc
pop
mov
add
sti
shl
push
mov
add
adc
sahf
xchg
dec
add
inc
lods
push
xchg
addr16
fcmovnbe
pop
add
and
and
iret
dec
fdivl
mov
adc
add
iret
lods
sbb
xchg
or
out
out
sahf
mov
adc
inc
pop
xchg
repnz
dec
and
stc
push
out
mov
ret
mov
out
out
xchg
mov
and
cli
mov
sti
inc
cmp
movb
lock
mov
test
mov
jns
cmp
add
aaa
loop
pop
add
add
in
arpl
adc
jo
jge
sbb
repz
cmp
rep
inc
ss
stos
popa
adc
test
adc
push
jo
jnp
push
add
leave
lock
aam
fs
add
or
mov
inc
fstl
and
sbb
add
add
jo
test
sbb
add
add
add
out
clc
adc
add
cmp
in
jno
or
add
filds
mov
cmp
and
jbe
cltd
add
fadds
dec
xchg
ss
js
add
xchg
mov
inc
xor
inc
jne
inc
mov
lea
cltd
inc
mov
add
jmp
xor
pop
pusha
add
lock
lcall
lcall
mov
popa
mov
inc
add
jmp
push
or
mov
pop
fcmovbe
mov
pop
faddl
dec
repz
bound
mov
add
je
push
jmp
push
add
test
add
incb
and
adc
xor
or
inc
movsl
pushf
push
inc
mov
imul
cwtl
add
inc
mov
push
inc
mov
enter
insb
and
inc
xor
les
stos
pop
fmul
mov
stc
mov
add
pop
daa
test
or
popa
xor
adc
jg
mov
ja
jmp
or
aam
and
or
mov
addr16
mov
ss
add
add
mov
jle
xchg
cmc
add
add
xchg
mov
dec
lods
mov
fcoms
add
mov
sub
mov
mov
push
add
fs
sbb
cli
push
out
ficoms
add
mov
scas
je
shll
cli
xor
jg
aas
xor
cmp
idivl
out
iret
cmp
repnz
or
push
stos
in
push
cmp
jl
mov
fcompl
add
mov
arpl
in
xchg
mov
insb
mov
xlat
add
xchg
mov
mov
mov
adc
daa
in
stc
rcll
mov
add
loopne
in
add
daa
decl
int
arpl
call
addb
out
test
sbb
lods
add
xchg
es
movsb
cmp
add
mov
rolb
xor
cmc
add
mov
inc
imul
jne
inc
or
cmp
bnd
add
adc
add
push
stc
pusha
sbb
stos
mov
int3
jle
jnp
insl
out
movl
aas
andl
cmp
test
mov
cltd
int3
adc
out
add
pushf
loope
mov
movsl
aad
subb
cmp
inc
scas
les
gs
xchg
test
cmp
and
xchg
enter
je
aas
mov
lahf
in
or
pop
pop
mov
aam
jg
fisttpl
or
int
sbb
pushf
fwait
and
add
inc
repz
and
xlat
add
pushf
add
fwait
cs
pop
sbb
jbe
add
lock
mov
movsl
jp
mov
cltd
add
cmpsb
mov
out
add
movsl
cld
pop
or
lods
into
es
xchg
and
lock
adc
lods
add
out
daa
aam
add
inc
jecxz
test
pusha
cwtl
sbb
xor
adc
sub
mov
int
cltd
xchg
pop
push
mov
push
test
clc
xchg
outsb
outsb
and
or
stos
push
sbb
into
insb
mov
add
pop
rolb
xlat
cmp
popf
out
call
add
scas
xchg
cs
mov
inc
push
and
add
add
popl
adc
repz
adcl
add
lock
scas
fwait
add
pushl
movsb
pop
stos
add
pmulhw
add
pop
xor
add
in
je
pop
fildl
jp
test
sub
jmp
cmpsl
pop
push
add
mov
jnp
sub
inc
add
push
lcall
push
fwait
jle
sub
mov
loop
sbbb
add
cmp
outsb
dec
testl
fucom
js
or
mov
add
inc
dec
and
test
inc
test
and
daa
pushf
js
jecxz
pop
or
xchg
add
add
and
cmpb
in
or
sbb
xlat
shrb
fiaddl
xchg
lods
ja
dec
pop
xchg
or
int3
add
cmp
add
mov
xchg
add
rclb
add
sbb
lods
push
out
lahf
fstl
xor
xchg
lds
les
mov
add
add
xchg
leavew
or
aas
stc
add
rcrl
pop
sbb
mov
test
stc
add
lds
es
cmp
imul
mov
add
dec
fisubrs
ja
cmp
jae
scas
das
mov
sahf
mov
dec
mov
inc
popa
test
fs
mov
add
and
dec
push
add
stos
push
add
xchg
imul
addl
mov
mov
add
in
xchg
cwtl
cmc
or
adc
ljmp
add
cwtl
cmc
out
das
cmpsb
jae
or
pop
inc
lea
push
mov
pusha
and
lcall
fiadds
xor
lcall
add
jp
push
inc
jbe
nop
jmp
clc
das
fbld
decl
add
add
jl
push
cs
out
add
inc
shrl
and
pop
add
mov
fwait
arpl
xor
add
mov
hlt
pop
pop
stos
adc
add
mov
jp
xchg
mov
cmp
jp
ljmp
cmp
sub
add
cli
test
xchg
jne
ds
ja
jno
add
outsb
lcall
roll
cmp
add
jl
add
add
add
or
ret
pop
pop
push
sbb
sub
nop
sub
fnstsw
sbb
add
add
add
jb
add
fs
stc
aaa
adc
scas
fistps
mov
jge
cmp
add
mov
or
clc
fs
out
lret
out
dec
imul
or
pusha
aad
aad
xchg
cmp
call
repnz
push
add
add
inc
inc
mov
add
mov
pop
aas
pop
push
sub
fxtract
mov
and
xchg
adc
jae
out
lock
add
jl
xchg
sbb
enter
add
mov
aad
loop
sbb
mov
sbb
mov
xor
add
jb
cld
adc
add
callw
in
mov
ror
pop
inc
insl
incb
dec
stc
xlat
jmp
push
lods
xor
pop
addr16
inc
jns
scas
outsb
jae
je
dec
iret
add
std
js
dec
dec
mov
dec
jg
ret
call
sahf
or
and
fwait
jl
gs
popl
xchg
std
add
xchg
pop
add
cs
adc
or
xchg
notb
out
add
imul
add
sub
and
outsb
mov
inc
scas
mov
nop
dec
sub
sti
loop
in
add
dec
fsts
into
test
fistl
lods
add
and
inc
and
adc
arpl
xor
xchg
add
es
ja
movsb
inc
jmp
gs
jne
pushf
mov
add
or
or
imul
int
cmp
imul
add
inc
aam
out
inc
lahf
add
bound
push
sbb
pop
adc
arpl
div
iret
xchg
add
iret
std
xchg
mov
test
adc
add
jns
adc
cmpsl
mov
cld
popf
xchg
jle
add
rclb
xchg
leave
insl
add
and
jp
out
imul
add
ficompl
add
pop
jge
mov
mov
sub
sbb
scas
out
jb
or
add
jb
loop
out
hlt
sub
ja
mov
insb
push
add
add
add
nop
aas
fists
and
jb
sbb
add
xorb
push
subl
mov
int3
frstor
mov
add
inc
xchg
xlat
cmp
push
xor
clc
add
mov
xchg
pop
or
mov
add
xchg
cmpsb
push
mov
push
mov
jno
add
mov
mov
cmc
popa
popa
mov
test
mov
and
add
hlt
add
scas
add
add
loope
and
inc
or
ljmp
xchg
fcmovbe
ja
filds
push
xor
fstpt
cmpsl
xchg
add
fimull
cwtl
fdivrs
dec
sbb
add
out
sbb
andl
sub
inc
dec
call
xchg
or
inc
sub
insl
and
add
add
ds
out
pop
aas
add
fwait
ljmp
pop
fldenv
xchg
notl
lahf
cli
jmp
test
mov
jae
pop
lahf
xchg
or
adc
sbb
pop
repz
ds
std
push
pop
lcall
and
add
lahf
add
imul
pop
jmp
outsl
push
iret
loop
fwait
add
jle
add
popf
add
or
cmc
nop
adc
cs
mov
int
cmp
icebp
add
lock
add
imul
rcrl
add
jle
and
setnp
jmp
inc
xchg
xor
inc
jp
shlb
mov
cmpsb
add
jecxz
xchg
fildl
mov
lret
dec
cmp
shrb
xchg
jp
inc
adc
test
rcrb
popf
shlb
loop
mov
adc
rorb
dec
js
iret
sub
and
adcl
enter
xchg
sub
add
loopne
inc
movsb
xchg
clc
daa
push
add
add
mov
cmp
iret
repnz
and
inc
push
add
data16
scas
add
pop
add
mov
pop
subb
in
lock
cmc
dec
mov
std
mov
xchg
mov
push
test
add
daa
add
jno
add
adcl
pop
jnp
shr
imull
mov
mov
add
scas
push
xchg
fldl
fimuls
rcll
xchg
js
mov
add
cmp
and
aas
ljmp
sbb
lods
or
xor
faddl
jmp
adc
mov
in
imul
lahf
jae
add
add
add
xchg
jecxz
xchg
repz
push
mov
jle
add
jle
xchg
aad
incl
outsb
add
jmp
scas
add
int3
mov
push
mov
int3
lea
cmc
setnp
mov
lldt
adc
push
xor
mov
sub
ja
jecxz
add
add
ficompl
negl
out
add
rcrb
repz
lret
xor
push
lret
sti
add
and
addl
mov
sti
sbb
push
jnp
adc
xchg
mov
movsl
sub
mov
add
jecxz
xlat
decl
or
addl
call
loop
nop
stos
push
mov
mov
subb
xlat
add
mov
lock
data16
push
push
push
pop
ja
pop
rcr
or
push
push
adc
add
mov
dec
fcmovnb
dec
aas
mov
out
in
mov
lods
add
dec
inc
xchg
addr16
sbb
in
adcl
sbbb
push
inc
lret
add
flds
pop
nop
add
add
sbb
loop
shlb
cmp
adc
and
sbbb
xchg
popf
inc
mov
popf
sub
sub
add
lcall
or
dec
cmp
add
mov
xchg
cmp
jne
js
add
add
mov
rcrb
insl
mov
aas
dec
sbb
mov
push
dec
push
jmp
stos
daa
sub
daa
rolb
push
and
mull
je
scas
mov
mov
add
adc
out
push
cmp
push
clc
jns
inc
push
mov
or
mov
inc
push
repz
pop
add
inc
cmp
in
ja
or
mov
jmp
mov
mov
daa
mov
add
sub
sub
subb
cmp
fildll
add
push
popf
inc
imulb
mov
add
insl
aam
xchg
add
push
add
outsb
dec
xchg
xor
xchg
add
pop
and
lcall
mov
xchg
hlt
xor
je
inc
outsb
aas
popf
cmpsl
and
iret
iret
js
popa
push
cltd
ret
push
data16
lret
fisubrs
insl
adc
test
sub
inc
cs
or
inc
aas
sti
mov
add
leave
popa
add
add
jmp
fimuls
cmp
ja
stos
push
xlat
or
cmc
repz
xchg
das
cmp
mov
out
cmp
add
loopne
add
jmp
mov
imul
cmp
sbb
add
stos
xor
hlt
inc
add
xchg
xor
sub
dec
jmp
cmp
pop
idivb
mov
xor
faddl
pop
cs
cmp
icebp
sbb
mov
mov
stc
add
ret
add
out
in
enter
lcall
imul
cmc
mov
and
xchg
add
popf
pop
arpl
add
int
xlat
sub
imul
add
jae
add
sbb
push
fadds
push
hlt
xor
stos
and
inc
add
adc
leave
add
das
add
add
jecxz
dec
push
push
push
cmp
add
test
or
lods
add
cmp
fadds
cmp
jmp
inc
mov
add
cmovge
stos
dec
in
mov
or
push
out
mov
add
xor
popa
in
push
push
add
cli
add
rolb
shll
nop
mov
shl
xchg
or
xchg
adc
sti
mov
cld
out
dec
xor
and
cmpb
sbb
int
mov
insb
es
dec
leave
dec
ja
mov
hlt
pop
cmp
adcb
push
xor
jge
subl
cmp
pop
bound
sldt
jge
psrlq
aam
jecxz
imul
mov
pop
mov
xchg
and
inc
clc
mov
add
xchg
add
js
jnp
lret
incb
cmc
add
mov
inc
mov
sbb
mov
repz
jp
loop
cmp
scas
and
testb
push
mov
and
fistpll
mov
add
aaa
xchg
jbe
popl
push
std
jg
loope
insb
enter
adc
sub
lods
sub
mov
add
add
add
adc
outsb
mov
std
rcr
adc
ja
adc
add
faddl
mov
or
fxch
jb
add
jmp
subb
in
xchg
mov
cwtl
cmp
mov
out
sbb
insl
add
add
push
daa
lea
jnp
add
push
in
pop
mov
add
out
pop
lret
aam
hlt
jbe
or
js
mov
lods
mov
jmp
mov
dec
and
push
add
push
lds
lds
mul
pusha
jp
dec
pop
xor
addr16
sbb
repnz
aas
mov
add
test
adc
in
add
add
pop
out
mov
sbb
mov
stos
jbe
and
mov
ret
sbb
sti
xchg
stc
jge
lcall
jl
out
add
sub
mov
stos
mov
jbe
insb
rsqrtps
xchg
das
outsl
push
jae
pop
arpl
sub
xor
fldl
xor
dec
lahf
arpl
mov
divl
and
add
sub
xor
insl
jp
cli
jno
sbb
inc
jns
hlt
add
jns
jecxz
xor
add
adc
add
daa
stos
sub
add
push
jge
mov
in
jo
scas
loop
int
hlt
insb
rolb
add
jno
add
hlt
jo
pop
fwait
les
push
adc
lock
addl
or
mov
sub
out
mov
cwtl
jmp
cmp
push
std
mov
jl
cs
or
add
jnp
add
aam
out
cld
push
and
xchg
leave
add
add
mov
sbb
mov
subb
mov
or
push
icebp
jmp
lods
xchg
incb
add
mov
xor
xor
lods
pop
pushf
mov
popa
adc
push
sub
mov
add
mov
ja
xor
add
hlt
testb
mov
add
push
cmp
xor
aaa
xor
pop
inc
mov
push
arpl
or
push
xchg
sub
add
push
out
mov
iret
or
repz
jle
lds
adc
lcall
jae
fmull
outsl
sbb
int
push
inc
push
jno
sbb
out
lcall
rol
or
jmp
lock
frstor
call
cwtl
add
add
push
xchg
pop
jbe
add
adc
jns
lea
cmp
mov
xor
add
add
add
sbb
inc
push
repz
dec
sahf
jnp
sub
lret
add
mov
shlb
fiadds
cmp
push
mov
jno
mov
add
xor
jle
cmpsb
jecxz
add
xchg
add
outsl
dec
iret
jp
pop
pop
jo
mov
inc
aaa
pop
shlb
add
bound
xor
sub
dec
add
ja
xchg
jbe
inc
mov
sub
outsb
add
add
mov
xor
sub
or
push
in
add
out
push
scas
mov
js
xchg
mov
pusha
fistpll
repnz
movsl
add
stc
add
pop
jmp
or
pop
add
add
in
outsb
testl
jl
call
popf
mov
pop
jno
dec
add
loop
andl
adc
add
pop
ljmp
jge
dec
mov
jnp
int3
push
bound
aam
xor
push
rolb
pusha
jne
rol
popl
fldl
push
add
mov
lods
stc
add
xchg
mov
add
mov
sbb
fs
or
cmp
or
lods
sbb
sqrtps
xchg
test
push
mov
in
add
xorl
add
adc
pop
jp
imul
push
int3
add
add
add
add
adc
push
jecxz
or
add
inc
repnz
and
lcall
jbe
fiadds
mov
out
pop
xor
test
mov
xlat
add
data16
inc
and
add
sbb
xor
dec
pop
push
mov
cld
lcall
roll
add
mov
dec
mov
add
dec
pop
mov
add
sub
mov
int3
and
fmul
xchg
add
mov
xchg
xchg
jne
cmpsb
lds
jae
pop
sub
add
in
cmp
cmpsb
test
or
adc
or
cmp
scas
add
dec
add
icebp
add
xor
les
push
push
outsl
add
push
jae
dec
dec
rcrb
loopne
bound
add
fwait
roll
sahf
cmp
adc
xchg
pop
mov
add
mov
test
cmpl
arpl
jp
inc
pop
out
insl
xchg
pusha
pop
in
clc
push
and
repz
pop
mov
add
imul
mov
aaa
cld
js
xchg
ja
sbb
add
mov
lods
add
dec
int
out
jno
sub
xchg
xchg
popf
loop
mov
add
ja
outsl
arpl
inc
ret
jnp
loopne
xor
mov
add
pop
or
push
add
mov
mov
sub
gs
cmp
mov
push
jge
hlt
movsl
xor
aas
add
sti
sub
pop
add
rol
sub
repz
xchg
pop
ja
pop
stos
pop
lret
push
mov
cwtl
es
inc
push
mov
mov
add
add
fmuls
pop
imul
push
dec
jl
pop
inc
adc
add
mov
rolb
leave
mov
mov
movsl
xor
jnp
jae
into
add
cltd
mov
cmpsl
cld
jno
sub
test
add
inc
mov
mov
addb
add
and
pop
fucomp
insl
xchg
xor
insb
into
scas
add
sbb
imul
sti
pop
jmp
cli
add
mov
jmp
icebp
xlat
pop
fwait
les
cmp
mov
incl
test
popf
add
mov
mull
adc
ljmp
pop
adcb
push
add
add
dec
xor
aam
and
ror
xchg
xor
pop
inc
pop
add
push
fiadds
pop
imul
cltd
repnz
mov
ljmp
mov
jle
dec
sbb
fwait
xor
push
xchg
lret
mov
push
mov
loop
add
cmpsl
xor
add
cltd
lea
xlat
or
xchg
movsb
pop
jb
sbb
add
clc
mov
add
repz
sub
xchg
inc
sub
mov
push
add
iret
xchg
subb
ffree
repz
inc
jecxz
fsts
dec
lock
scas
imul
sti
sbb
or
ftst
inc
mov
or
popf
sbb
scas
add
sub
cli
pop
or
cmp
xchg
add
inc
mov
add
jmp
mov
addb
rolb
pop
stos
sub
lds
jmp
add
push
popa
in
xor
les
adc
js
pop
xor
add
fcoml
mov
adc
xor
int3
std
add
add
flds
mov
inc
push
sbb
movsb
flds
mov
pushf
ja
outsl
add
add
and
sub
sahf
loope
jp
xchg
xchg
xchg
out
out
add
stos
sub
sub
sbb
fadds
hlt
xchg
testb
insb
dec
pop
bound
sarb
popf
xor
das
stc
inc
into
add
fwait
ret
lea
leave
mov
out
imul
test
add
loope
addr16
imul
jge
popf
or
nop
mov
aaa
popf
xor
xchg
push
sar
add
or
das
arpl
inc
ret
into
dec
or
stos
shll
and
or
rorb
jne
mov
data16
jge
jae
push
mov
xor
or
xchg
out
pop
mull
subb
cltd
add
push
dec
das
lcall
ss
mov
pop
add
mov
inc
mov
ss
adc
loope
lea
movsl
bound
add
add
js
int
loopne
stos
sub
dec
lcall
js
stos
add
xchg
mov
dec
or
mov
mov
add
add
xchg
add
pop
jnp
lret
sub
fdivp
mov
sahf
mov
call
fcoms
fsubrs
mov
mov
add
hlt
jb
scas
add
hlt
push
arpl
std
add
stos
xor
cwtl
imul
add
add
sbb
add
test
std
pop
in
add
loopne
mov
ds
pop
mov
inc
sahf
rcll
pop
jecxz
add
add
stos
pop
enterw
ret
push
testb
test
mov
add
fsubrs
push
add
pusha
mov
push
movsl
loop
aas
sarb
rcll
scas
mov
mov
push
pop
cmpsb
add
out
daa
and
jge
xchg
adc
xor
add
add
xchg
loopne
inc
or
inc
add
pop
mov
jp
outsb
in
daa
mov
push
sbb
mov
inc
inc
mov
lret
aas
fisubrs
push
mov
xor
add
xorl
xor
mov
mov
or
sti
cmp
or
add
dec
clc
jg
add
or
lock
cmp
or
lcallw
jb
scas
inc
test
xor
into
mov
add
add
leave
xor
movb
leave
icebp
daa
mov
mov
cmc
adc
push
in
sub
imul
add
enter
outsb
add
sarb
add
add
daa
pop
addb
jnp
imul
jecxz
loopne
xchg
inc
push
cmpl
mov
clc
jecxz
adc
mov
daa
loopne
add
add
lret
sub
mov
test
dec
pop
sub
mov
or
add
xchg
add
cmp
lods
push
pop
jl
add
dec
add
add
sarb
rorb
bound
inc
jnp
pushl
jle
test
adc
inc
mov
ret
pop
inc
mov
out
dec
fs
push
adc
and
inc
stos
jmp
pop
xchg
outsl
lret
mov
rolb
jp
inc
mov
jns
jns
xor
insl
add
cltd
mov
cmp
adc
lret
jne
and
jb
mov
mov
fnstcw
shll
pop
in
add
pop
dec
jnp
jmp
jo
add
xchg
mov
bound
imul
dec
mov
sbb
imul
cld
and
or
add
call
pushl
repz
test
inc
rcll
add
fisubrl
mov
or
out
add
cmp
mov
outsb
leave
add
jge
or
add
add
cld
sbb
sbbb
jge
push
mov
mov
or
add
js
in
dec
std
jmp
out
incl
rolb
in
ret
jns
xchg
enter
cmpsb
push
mov
mov
sub
rolb
sbb
mov
rcrl
and
add
out
fwait
into
movsb
jbe
dec
aad
imul
lahf
add
mov
add
mov
outsb
mov
sbb
inc
inc
stos
add
cmp
sub
sub
and
push
adc
mov
ror
push
arpl
adc
test
dec
jno
inc
popf
jl
add
cwtl
add
enter
aas
in
lock
test
test
repz
xchg
cmp
push
xor
fmull
mov
mov
and
xchg
add
add
aam
add
add
mov
add
jo
inc
js
add
add
add
xor
mov
pop
es
mov
test
stos
add
test
jp
xchg
aad
in
add
mov
loope
mov
add
push
or
xchg
xor
add
xor
in
insb
xchg
insb
std
add
push
add
and
fyl2x
lea
pop
add
mov
add
loope
xchg
add
mov
xorb
xor
pop
std
out
hlt
dec
bnd
ret
mov
fcoms
mov
add
mov
pop
movl
nop
roll
adc
or
xchg
ljmp
test
stos
jp
outsl
repnz
pushf
data16
test
cmc
add
sub
adc
sbb
xor
pop
inc
pushf
mov
out
xchg
xchg
shl
xchg
jp
add
pop
loop
stos
sbb
jmp
xchg
jle
add
jmp
fbstp
sub
das
imul
test
xchg
filds
jo
cmp
or
add
push
or
jnp
js
xchg
sub
cmp
mov
mov
add
into
add
inc
fiaddl
daa
stos
push
jmp
daa
in
cld
mov
loopne
lds
arpl
inc
insb
outsb
mov
add
mov
add
inc
add
out
or
ror
stos
dec
add
xchg
add
ds
sub
add
loop
movsl
lcall
dec
lods
mov
sub
jg
fistl
jg
popa
dec
stos
call
mov
adc
xor
jl
inc
aaa
sub
mov
scas
dec
je
xchg
test
das
add
push
pop
mov
adc
lods
in
stos
add
xchg
mov
and
sbb
adc
add
leave
movlps
cmp
add
cmp
ret
in
pop
stc
push
out
push
mov
mov
and
js
sub
mov
in
xor
pop
dec
and
xchg
push
jo
sbb
jo
jno
inc
fdivl
dec
sub
add
add
mov
pop
aaa
and
add
in
add
shrl
mov
sbb
mov
add
sbb
xchg
push
or
push
popf
pop
sbb
addb
mov
pop
pop
out
pop
add
rorb
jecxz
mov
addb
ficompl
xchg
mov
icebp
fwait
jo
inc
mov
daa
add
testb
cmpl
mov
add
mov
ds
stos
dec
and
cld
adc
inc
inc
add
xchg
arpl
jle
in
mov
and
mov
fsubs
add
push
sbb
mov
mov
sbbl
dec
addr16
dec
inc
pop
rcr
sub
pop
add
les
sbb
mov
pop
sub
std
push
nop
mov
push
fsubl
lock
add
add
inc
jmp
scas
lahf
enter
jo
pop
bound
loope
jbe
fdivr
jl
out
andb
fcomp
xchg
test
test
pushf
out
push
rcrl
sar
add
jecxz
add
inc
jnp
loopne
push
shl
bound
into
add
sbb
cmp
xor
add
inc
lds
addl
je
and
dec
push
pop
ds
ja
insb
andb
pusha
xchg
cmpsl
xor
dec
add
outsb
clc
add
cli
add
jmp
or
ds
add
popf
pop
mov
add
mov
fisubrl
mov
ffree
add
or
cli
jg
dec
sbb
roll
mov
xor
rcrb
movsb
lods
stos
lret
cli
xchg
add
stc
dec
loope
pushf
and
add
in
mov
inc
addr16
pop
add
cmc
cli
lds
inc
loopne
mov
xchg
arpl
imul
dec
inc
sub
sub
xchg
repz
jge
stos
add
mov
inc
pop
sbb
in
cmp
push
cmp
dec
mov
add
movsb
xor
orl
mov
imul
add
insb
scas
mov
cwtd
xlat
cmp
ja
outsl
xor
imul
mov
pop
das
loop
add
arpl
testl
and
fadds
jo
adc
mov
int
pop
dec
mov
stos
imul
push
lds
sti
mov
mov
das
js
xchg
add
pop
insb
test
fiadds
inc
inc
inc
pop
pusha
int
jp
por
loop
popa
sbb
cmp
jmp
or
cmp
xchg
xchg
fdivrl
add
and
xchg
in
push
fistpl
and
divb
test
je
add
push
bound
rcll
and
mov
test
das
int
jbe
add
add
std
into
jnp
repz
adc
cmpl
mov
add
mov
jbe
push
mov
add
pop
jle
xor
add
int3
mov
add
dec
mov
and
sbb
and
sarl
sub
mov
data16
repz
or
int
push
jecxz
cld
sub
add
jns
mov
cmpsb
test
cmpsl
sub
mov
cmp
add
dec
sub
out
add
movsb
sahf
add
stos
js
inc
inc
jle
lcall
outsb
lcall
push
int
ret
push
stos
out
push
lretw
movsb
imul
add
mov
cs
sahf
add
push
mov
in
push
test
shll
push
or
inc
outsb
aad
add
lcall
sub
jl
add
xchg
sbb
and
movsl
pop
adc
fistpl
fcmovne
lret
sbb
jae
inc
xor
dec
inc
test
cmp
in
ret
in
je
inc
xor
and
add
dec
mov
xor
dec
aas
sbb
stos
add
inc
xchg
sub
sbb
sbb
xchg
and
xlat
or
imull
mov
add
push
and
add
stos
push
inc
mov
inc
mov
icebp
push
clc
sub
jmp
inc
cmpsl
mov
adc
jbe
sbb
ret
mov
push
dec
mov
addb
jbe
imul
repnz
cmpsl
add
aam
adcb
mov
and
mov
rcrb
negb
pop
pop
mov
leave
add
test
shrl
in
add
adc
add
push
popf
outsb
add
pusha
ret
pop
add
mov
or
adcl
xor
add
sar
add
xchg
dec
add
dec
mov
xchg
scas
add
popf
add
ds
or
cmpsb
faddl
rcrb
inc
add
dec
add
out
repnz
cwtl
scas
pop
mov
add
sub
push
add
loopne
sbb
add
jno
cmp
inc
data16
incl
rolb
sbb
mul
mov
insl
add
mov
sbb
out
cmp
xor
sti
pop
jge
mov
add
mov
add
test
testb
jnp
xchg
rorl
and
add
cmove
and
push
mov
add
ss
aas
pop
in
inc
sbb
or
cs
test
jae
add
pop
add
les
add
ja
movsb
subb
rolb
daa
movsl
adc
mov
mov
mov
cmp
mov
aad
inc
add
lods
push
xchg
int3
add
sub
mov
jl
sub
push
dec
add
inc
mov
mov
jo
or
subb
mov
mov
mov
test
fistpl
push
fisubs
pushf
push
cmpb
repz
ficoml
mov
pop
cmpsl
push
inc
incb
sub
call
xor
out
ret
cmc
sub
dec
pop
pop
sbb
add
js
xchg
mov
cmpsl
dec
mov
jae
mov
pop
add
clc
and
add
jp
jo
xor
icebp
lods
mov
xchg
add
add
fcomip
ficoml
mov
and
outsb
inc
fsubl
jns
add
test
and
mov
add
mov
arpl
sub
gs
adc
pop
add
push
sar
cltd
xor
push
add
dec
jbe
mov
jmp
add
les
add
mov
push
mov
pop
in
pop
outsb
pop
sub
mov
jns
inc
fs
dec
sub
pop
xlat
add
mov
fstps
push
ljmp
lahf
add
add
test
xor
cmp
addr16
faddl
mov
add
shrl
mov
or
out
add
pop
dec
fistl
imul
xchg
rclb
and
test
mov
add
ror
push
xor
jecxz
or
adc
add
nop
push
hlt
sbb
aaa
cmp
adc
sub
mov
loopne
add
int
ret
out
sti
int
jb
sbb
sbb
fmull
ja
mov
daa
add
fbld
unpcklps
cmpb
dec
inc
add
xchg
xorl
add
xor
int3
mov
rcrb
ret
inc
add
pop
sub
cmp
ljmp
adc
dec
jbe
pop
add
add
xor
xchg
jnp
and
xor
cmp
sbb
sub
ja
xchg
push
cld
mov
jp
sub
xchg
sub
insb
or
jl
jnp
xor
lods
in
xor
imul
jbe
in
add
add
dec
enter
int
or
jne
adc
sbb
xor
es
sub
pop
cwtl
or
ja
xorb
cmp
add
in
divb
mov
adc
jg
mov
sti
lods
add
pusha
rorl
mov
mov
lds
addb
xchg
lea
leave
leave
xchg
imul
add
aam
roll
fsub
push
dec
dec
or
sub
add
sub
or
or
sbb
inc
inc
lea
cmc
jg
outsb
dec
mulb
mov
mov
movsl
dec
add
and
dec
loope
push
jecxz
fildl
adcl
fnsave
sbb
pop
test
lret
sahf
cltd
pop
ror
adc
test
push
jle
into
je
mov
fistpll
cmp
add
std
xor
andl
push
js
add
movsb
dec
inc
jbe
daa
pminsw
pop
std
push
verw
insl
xor
into
lods
mov
add
push
inc
pop
jecxz
add
cmp
adc
outsl
push
test
add
sbb
icebp
scas
add
or
mov
add
push
fcom
call
jmp
add
add
cmpsb
add
pop
clc
fisttps
fisubs
fisubrs
fdivs
outsl
hlt
add
cmp
rolb
jnp
xor
push
mov
pop
cltd
sbb
and
mov
add
lods
sti
lock
enter
mov
dec
and
sub
mov
addr16
add
dec
fcmovnb
add
add
dec
movsl
add
cmp
add
push
out
int
in
mov
mov
add
xchg
inc
fdivl
add
testb
bound
in
fs
xor
add
aad
scas
add
mov
fwait
mov
idiv
shrl
add
outsb
or
lea
fs
mov
roll
rcll
sbb
aam
adc
push
push
add
ds
fwait
cli
popa
add
dec
or
add
mov
pop
pop
adc
orl
addr16
js
clc
out
and
test
sbb
push
xlat
lret
push
popa
or
fcompl
ljmp
jbe
bound
sbb
lods
push
add
aam
inc
add
es
test
nop
imul
push
rcl
jo
ljmp
pop
je
pop
roll
xor
stc
and
aaa
out
xor
and
add
mov
imul
xchg
xchg
sahf
sub
dec
jle
ja
decb
add
out
addr16
je
icebp
push
inc
add
add
xor
mov
out
mov
cld
sti
pusha
pop
fistpll
sub
je
push
test
sub
inc
scas
and
insb
add
bound
push
dec
dec
sbb
lock
test
ret
sbb
fs
pop
jle
add
add
jns
insl
xor
pop
jp
and
sahf
xchg
push
dec
or
incb
push
pop
mov
add
and
xchg
push
and
faddp
xor
add
dec
sbb
shrb
pop
dec
xlat
lcall
or
cwtl
andb
and
repnz
mov
insl
add
cwtl
js
into
sub
imul
sbb
add
fidivrs
sub
inc
xchg
adc
add
mov
mov
xchg
mov
sub
push
jo
dec
adc
popl
cli
add
imul
xor
insb
pusha
lock
fiaddl
jns
cmp
push
adc
jb
add
add
jnp
add
shr
adc
and
cltd
mov
add
loopne
testl
add
add
daa
push
add
testl
adc
pop
xor
repz
and
fwait
mov
rcl
push
cld
cmp
popf
sbb
cli
cmc
lcall
pop
add
push
clc
arpl
add
popl
aad
clc
xchg
add
add
popa
lret
lods
call
nop
adc
cwtl
mov
push
sub
or
popa
into
iret
rcll
pop
mov
add
stos
out
rolb
out
ljmp
pop
adc
cld
insb
in
adcb
mov
popa
add
xchg
daa
cld
mov
fs
fwait
push
xchg
js
das
pop
mov
ss
push
add
sub
and
scas
mov
mov
faddl
xor
lods
data16
sbb
repnz
jnp
sub
std
push
imul
mov
mov
jo
push
add
loopne
sub
test
outsb
push
jbe
and
add
pop
mov
cmpsb
stos
popl
icebp
add
pop
xchg
dec
push
lds
inc
mov
rcr
jae
lds
adc
lret
mov
outsl
dec
pmulhw
xchg
fldcw
add
xor
mov
enter
adc
movsl
jmp
mov
sbbl
mov
bnd
jle
push
cmp
daa
xchg
cmp
jo
sub
dec
mov
adc
lahf
xor
out
mov
fadds
jmp
sti
mov
adc
inc
cmp
mov
and
lock
pop
sahf
add
enter
dec
push
in
cmp
xor
jbe
jbe
xchg
add
push
pusha
mov
bound
pusha
add
push
xchg
jne
cmpsb
cmpsb
xchg
dec
add
ljmp
add
in
dec
jbe
or
pop
add
dec
out
push
dec
rolb
add
or
add
xor
insl
mov
loopne
loop
cmc
xlat
adc
mov
sub
fmul
cmpsb
push
andb
lcall
mov
jbe
inc
sub
mov
or
push
jp
xchg
movsl
addb
jbe
push
lahf
aas
out
mov
shrb
sahf
test
jge
insb
addb
test
jle
push
pop
movsb
xchg
lds
adc
xor
pop
fsubrl
lret
xchg
sbb
add
add
pop
or
xchg
ljmp
test
cli
xor
pop
jo
xor
in
add
negl
outsb
ds
mov
lds
mov
xchg
add
leave
nop
aaa
jbe
or
jge
das
lcall
cmpsb
inc
lock
test
sahf
xchg
add
add
int
outsb
dec
dec
inc
mov
loope
cld
add
add
mov
enter
inc
xorl
scas
add
stos
mov
popa
jne
hlt
movsl
testb
add
lea
dec
add
add
scas
shlb
mov
xor
icebp
movsl
add
out
sub
push
icebp
add
dec
or
add
add
rcll
mov
pop
jne
jl
add
jno
xchg
stc
repnz
inc
in
icebp
sub
add
mov
add
out
mov
add
add
mov
xor
xchg
out
sub
out
mov
pop
push
addr16
jae
push
insl
add
roll
ds
call
adc
xchg
jnp
call
dec
fwait
pop
add
insl
rolb
pop
test
call
add
sub
dec
jle
cmpsl
and
adc
rorb
pop
inc
sub
pop
adc
cmp
sbb
inc
inc
xor
pop
sbb
adc
in
loope
push
pushl
mov
jbe
icebp
nop
decl
roll
add
dec
mov
addb
aas
arpl
popl
inc
js
add
cmp
xchg
test
pop
rolb
push
dec
xor
xchg
mov
int
xchg
add
enter
adc
mov
add
pop
jle
aam
sti
push
add
sbbl
fwait
out
xchg
cmc
aam
outsl
dec
add
call
sub
inc
jge
ja
lea
rcrl
jle
xlat
push
xchg
loop
in
mov
push
adc
and
pop
add
mov
adc
testb
fldenv
push
scas
aas
add
ds
je
jmp
mov
sbb
rcrb
xor
mov
add
mov
or
dec
push
mov
lahf
clc
and
sbb
rol
loope
dec
inc
or
stos
imul
std
shll
add
mov
pop
leave
dec
pop
les
insl
lret
js
add
lahf
or
cmpsl
pop
int
xchg
dec
stos
and
jb
adc
cmp
ret
cmp
ds
orb
cmp
add
ss
cwtl
cltd
adc
add
in
les
jae
mov
cwtl
adc
push
fcoml
jg
pushf
xchg
add
add
jno
inc
jmp
or
fmull
xor
ret
shrl
stos
mov
jmp
sahf
bound
pop
insb
add
pop
pop
add
push
lods
jns
dec
adc
push
pop
push
das
inc
dec
xchg
cld
aad
add
into
scas
sbb
xchg
pop
add
sbb
add
mov
add
mov
and
mov
jecxz
cld
mov
mov
lea
out
and
in
cltd
and
fnstcw
jb
pop
push
lods
jb
mov
dec
sbbb
xor
mov
inc
ret
in
jg
push
jnp
mov
cltd
les
push
xor
fwait
es
lods
and
icebp
push
add
stc
push
push
ja
add
fcmovne
popa
int3
ja
sbb
lds
add
sub
sub
in
test
pop
jecxz
push
add
mov
shrb
lret
mov
xor
push
xchg
dec
fldenv
ss
sbb
popf
add
jecxz
cwtl
add
jg
push
lods
push
jo
and
jecxz
mov
or
mov
jb
push
enter
mov
icebp
add
add
test
fwait
adc
sub
mov
mov
dec
fdivrs
fwait
push
mov
out
or
addr16
add
and
scas
push
mov
mov
sub
and
xchg
adc
lea
out
xchg
fcmovne
mov
lret
cwtl
mov
lods
add
add
mov
jnp
dec
lds
jb
xor
movsb
addr16
push
popa
inc
pop
mov
jecxz
cmp
pushf
add
cmp
push
cld
push
jp
mov
cmp
repz
pop
dec
pop
mov
bound
test
addb
add
jecxz
mov
lods
add
es
fiaddl
fidivrs
cmpsb
jo
xchg
add
adc
push
jmp
cli
fs
push
insb
or
xchg
add
push
divl
jmp
push
and
add
add
push
or
push
add
scas
sbb
adc
mov
iret
jb
fstps
fidivrs
and
mov
mov
or
loope
ret
fdivrs
mov
xchg
in
sahf
xor
lods
enter
cmpsl
lock
pushf
mov
repz
add
pop
push
add
mov
add
push
add
push
add
add
popa
and
test
add
add
adc
dec
gs
pop
inc
and
call
out
and
pop
add
lods
add
call
mov
or
dec
xchg
xchg
shlb
xor
pop
adc
pop
cmp
dec
mov
lret
dec
add
xchg
pop
push
dec
dec
aas
add
add
push
xor
and
xor
mov
xor
loop
add
xchg
sub
in
mov
in
aaa
xchg
xor
mov
add
test
add
add
inc
filds
xchg
bound
pop
aad
in
out
cmp
bound
push
ffree
mov
stos
in
jg
mov
adc
mov
outsb
das
xor
push
add
repnz
inc
movsl
mov
mov
jmp
push
ja
outsb
sbb
sarb
je
push
push
add
lret
pop
add
lods
jecxz
pop
dec
xchg
lds
or
xor
add
repz
add
push
mov
pop
xorl
inc
sbb
in
mov
iret
lcall
fsubrp
jecxz
movsb
inc
push
xlat
xorb
dec
and
lahf
ror
testb
add
sbbl
mov
outsl
jg
push
inc
mov
cmp
sbb
add
cltd
pop
aaa
lret
out
cwtl
cmp
or
pop
xor
add
repz
jns
xor
mov
sbb
imul
mov
loope
mov
add
mov
ret
mov
pop
sub
rcll
rolb
shll
jno
sbb
pop
mov
ret
and
inc
inc
daa
mov
ror
jl
add
arpl
sub
xlat
add
test
dec
iret
nop
cmp
mov
push
sti
ffree
pusha
in
mov
jne
inc
scas
das
mov
cmp
jl
add
data16
insl
test
jp
dec
scas
pop
push
movsb
xchg
fstps
add
push
add
movb
jl
leave
dec
test
addr16
ljmp
pop
and
lret
inc
loope
push
add
sbb
rcr
test
xor
mov
pop
add
rcll
aaa
push
leave
insb
add
push
and
icebp
add
add
xchg
add
add
or
faddl
arpl
stos
cmp
cmpsb
leave
mov
imul
insl
lret
andl
add
push
add
inc
pminub
lds
adc
mov
adc
cld
mov
xchg
mov
sub
int3
fbstp
adcb
add
add
or
out
sbbb
add
cmovle
mov
aaa
push
inc
xchg
fcmovnb
insl
stc
mov
or
sbb
pop
cmp
pop
inc
ljmp
add
into
scas
lods
or
xchg
insl
push
add
roll
dec
pushf
add
jnp
and
jb
mov
jb
add
js
mov
test
sbb
outsb
pushf
cli
sub
cli
mov
push
mov
xchg
pop
mov
sbb
mov
xor
push
cwtl
roll
fwait
ljmp
shll
lods
adc
add
xchg
add
and
in
icebp
pop
sbb
fs
jbe
pop
xchg
add
mov
mov
dec
imul
sbbl
nop
pop
add
sub
insb
xchg
add
add
repnz
outsl
fs
pop
inc
out
inc
fisubrs
lret
add
scas
dec
dec
lods
jbe
int3
mov
divb
fistpl
push
cmc
xor
or
popf
mov
jns
testb
sub
hlt
add
jge
pushf
lret
dec
xchg
push
pop
pop
outsl
shrb
add
cwtl
fs
sbb
insb
mov
xchg
test
jle
adc
push
sub
outsb
pop
lahf
xor
add
sbb
and
dec
popf
bound
adc
insb
in
add
out
mov
jge
cltd
lret
add
fidivl
cmpsb
add
add
out
rolb
inc
add
das
addb
jns
test
dec
xchg
pop
inc
imulb
add
inc
add
pushf
push
imul
pop
push
push
jmp
jns
inc
sbb
mov
add
test
xchg
pop
and
out
inc
add
jo
test
call
dec
add
xchg
pop
mov
movsb
jecxz
fidivs
jno
imul
leave
push
mov
jns
testl
adc
ja
ret
imul
test
and
incb
add
cwtl
imul
mov
pop
pushf
lret
pop
push
sbb
out
push
inc
push
icebp
add
sub
inc
outsb
add
in
mov
add
lods
jecxz
add
adc
lds
mov
sbb
push
pop
es
cmc
xchg
add
adc
fildl
repz
dec
add
lds
sti
add
out
pop
cmp
dec
cli
sub
cmp
fisubrs
ds
jmp
inc
in
pop
add
insb
add
mov
dec
and
and
cmp
fwait
hlt
int
add
das
or
dec
flds
jmp
arpl
and
mov
mov
pop
add
iret
xor
mov
add
xor
mov
mov
cmp
mov
add
add
lret
jno
icebp
sarb
rol
sub
outsl
out
inc
lea
jp
testb
adc
pusha
je
mov
mov
mov
add
add
add
in
push
inc
inc
fdivs
in
sub
fsubs
dec
mov
add
andl
nop
adc
sub
jnp
push
mov
out
lods
popa
pop
sbb
mov
data16
fdivrs
lods
add
sbb
adc
jo
mov
add
mov
outsl
lret
movsl
jle
outsb
dec
ret
add
imul
mov
orb
aam
sarb
dec
push
add
mov
aam
xchg
add
add
cmpsb
push
inc
sbb
test
jae
pushf
aaa
adc
addb
arpl
hlt
scas
fs
jecxz
inc
sti
fcompl
loop
lea
jge
adc
push
stos
add
repnz
lods
std
push
add
jge
pop
jns
test
fiaddl
add
mov
jo
mov
add
scas
shll
fs
lods
lret
arpl
jb
popa
rclw
cwtl
ret
sbb
dec
xor
add
mov
add
and
push
cli
bound
scas
mov
pop
add
mov
add
add
xchg
mov
fwait
insb
inc
and
add
add
mov
dec
das
pop
outsl
push
add
test
add
lcall
jmp
into
pusha
repnz
addb
dec
jl
mov
arpl
adc
pop
cld
and
mov
xchg
cmpsl
ja
push
cmp
cmp
xchg
js
xchg
pusha
mov
add
aaa
repz
xor
push
jp
movsl
lods
add
and
jo
push
sbb
jnp
pushf
mov
sub
add
jmp
std
push
test
and
loope
or
add
jp
add
inc
sub
xor
notb
add
add
bound
mov
sub
mov
cmp
push
or
xor
add
and
add
mov
daa
dec
pop
adc
test
mov
mov
mov
js
dec
add
jb
scas
push
inc
lds
pop
sbb
add
ja
cmc
pop
xor
mov
xchg
inc
push
leave
enter
push
sbb
add
mov
push
cmp
lods
pusha
add
loope
daa
add
lcall
dec
aam
in
dec
add
in
xchg
or
and
and
or
adcl
add
aas
and
ret
add
pop
ret
xchg
sub
cmpsl
jb
adc
add
dec
sarl
imul
and
in
or
dec
add
mov
jmp
push
add
movsb
sub
aam
adc
sbb
cmpsb
movsl
mov
rcrw
add
sub
add
test
cmp
aaa
icebp
add
addl
dec
popa
ficoml
jnp
mov
shlb
ss
xchg
or
mov
push
movsl
add
add
stc
pop
add
inc
lea
push
add
out
pop
pop
push
test
std
addb
je
data16
mov
stc
out
cmpsl
cs
icebp
fwait
aad
adc
sbb
jnp
sbb
loop
test
add
inc
sbb
repnz
mov
inc
cmp
mov
add
inc
loopne
cmp
and
addl
sahf
cltd
aaa
adcl
pop
adc
roll
test
add
jae
add
leave
add
pop
jle
xor
sbb
scas
add
mov
mov
test
js
dec
dec
adc
mov
push
add
and
insb
jb
and
and
lds
jg
mov
repnz
ss
push
push
mov
sbb
test
inc
repnz
lock
sbb
cmp
lods
add
dec
push
hlt
lock
xchg
into
adc
outsb
mov
inc
mov
xchg
imul
je
clc
sbb
dec
pop
pop
icebp
add
test
mov
add
pop
jp
jbe
add
fldl
mov
mov
loop
push
cmp
decb
add
cmp
mov
loopne
and
mov
out
adc
sbbl
outsb
mov
insb
mov
scas
xchg
arpl
es
and
insl
jp
add
movsl
sti
add
cmc
pop
cmp
add
xchg
and
cmp
cmpsl
add
iret
jecxz
fcomi
push
add
mov
loope
cmp
or
aam
and
cli
push
add
pop
mov
fadd
lock
inc
pusha
add
add
test
pop
fmull
or
outsl
scas
xor
aam
jno
inc
mov
mov
sub
cmpsl
adc
pusha
dec
movsl
lret
test
daa
pushf
add
jo
fdivr
lods
sbb
jle
sbb
add
pop
bound
xor
pusha
nop
xor
test
jns
aaa
jb
cmp
xor
xchg
mov
mov
fadds
and
add
pop
imul
test
enter
xor
inc
xor
dec
in
inc
pop
jo
pop
shrl
push
cld
jmp
add
lahf
das
loopne
fmuls
jle
add
cli
test
add
out
jno
xchg
orl
aad
xor
push
cld
add
fstp
and
clc
add
push
pop
je
pop
adc
in
fs
das
ja
add
sti
mov
xchg
jmp
addl
frstor
cwtl
insb
pop
add
in
ret
lea
cmp
adc
sahf
inc
add
add
imul
cmp
add
imul
xor
icebp
add
jne
xor
xchg
out
nop
add
test
daa
mov
mov
cmc
pop
mov
xor
sbb
jge
push
add
jle,pt
pop
mov
icebp
fwait
add
or
push
in
mov
jge
jg
aas
mov
adc
pop
add
cwtl
scas
add
cmp
xchg
sbb
add
orb
pop
add
in
jae
mov
aaa
out
mov
test
mov
xchg
and
icebp
xchg
cmp
pop
imul
mov
mov
add
stos
dec
dec
add
add
mov
fiadds
add
in
push
fwait
mov
add
sahf
aam
fiadds
add
add
lds
pusha
mov
int
loopne
jecxz
test
aaa
add
imul
mov
jecxz
cwtl
jle
loopne
add
mov
dec
add
loopne
push
xlat
push
add
pop
and
es
mov
mov
add
add
jg
pop
test
adc
jb
pop
jg
add
jns
mov
add
in
xor
icebp
sbb
jns
out
xor
mov
dec
inc
sbb
add
inc
add
mov
mov
movsl
rcrl
sti
aas
imul
mov
add
out
push
add
push
and
iret
inc
sub
adc
ljmp
or
imul
into
push
leave
or
cmpsb
jl
call
pop
mov
je
fidivrl
add
orl
pusha
flds
cmp
add
jb
gs
fwait
xchg
ja
sub
icebp
or
mov
jecxz
icebp
push
shr
outsb
or
jo
inc
push
add
add
pop
and
adc
add
fcmovne
add
push
jecxz
icebp
mov
movsb
es
jecxz
cmp
inc
push
mov
lea
loopne
out
test
movsl
lcall
cs
sbb
popa
addr16
cwtl
jle
or
insb
push
dec
inc
push
leave
sub
mov
jecxz
mov
lds
or
xchg
decb
add
jg,pt
mov
mov
sbb
dec
mov
xor
adc
xchg
imull
fwait
add
test
xchg
inc
adc
or
scas
ficoms
dec
cwtl
test
push
mov
enter
add
mov
inc
imul
inc
cmp
add
cmp
stos
or
inc
sub
test
mov
sbb
xchg
add
or
scas
and
std
mov
add
jge
push
stc
xor
xor
sbb
push
xlat
add
sarb
pop
jmp
add
out
mov
loop
mov
arpl
fwait
add
pushf
subb
add
mov
lret
add
out
aas
stos
add
divl
cmpl
int3
xor
cs
stc
mov
and
cmp
add
sbb
xchg
frstor
add
mov
add
add
dec
pop
jl
dec
add
mov
pop
jmp
xchg
add
sub
mov
lcall
sub
mov
pop
imul
movl
iret
dec
xor
mov
lldt
out
icebp
imull
sbb
das
ficoms
mov
jbe
ljmp
in
sahf
fiaddl
leave
pop
xchg
imul
sbb
movsb
push
into
add
add
add
push
push
sub
out
or
adc
add
add
fbld
push
pop
xor
add
hlt
add
cs
sbb
add
push
movsl
mov
hlt
orb
in
add
fsub
jle
add
or
cmc
add
cs
jg
or
pushf
jg
imul
add
sub
mov
iret
popa
push
cld
repz
sub
and
adcl
enter
lret
mov
ret
roll
addl
add
sub
jg
and
cli
dec
lahf
push
mov
inc
push
inc
int3
or
inc
jle
scas
fmulp
add
test
arpl
mov
xor
jmp
mov
icebp
andb
add
into
js
jp
imul
xor
fwait
leave
add
adc
and
shlb
cltd
jns
cmp
inc
add
lret
int3
mov
mov
ret
repz
push
pop
pusha
scas
lret
loop
cmp
jle
add
lods
sbb
cmpsb
xchg
bnd
inc
xchg
sub
add
add
jg
mov
sub
pop
mov
pop
xor
sbb
cmp
and
mov
pop
sti
out
outsb
cmpsl
ret
inc
jo
rcrl
fsubs
sbb
out
divb
xor
cmp
add
push
cs
fnstsw
inc
add
in
mov
jecxz
js
mov
shlb
out
aaa
and
rcl
sub
js
adc
outsl
mov
rorl
xchg
sti
inc
adcl
ret
imul
sub
add
sbb
inc
mov
adc
push
xor
xchg
and
cmp
add
mov
mov
insb
pop
in
mov
cmc
push
gs
add
addr16
jle
mov
inc
and
loopne
js
dec
imul
jl
and
mov
aad
in
xor
add
mov
mov
jmp
lds
out
add
and
xchg
pop
jl
fcmovnb
mov
cwtl
call
mov
mov
xchg
or
imul
xchg
add
add
and
lds
sbb
mov
inc
mul
sub
xor
dec
xlat
pop
jns
add
movsl
add
push
mov
into
dec
jnp
je
add
je
rcrl
pop
ljmp
cmp
add
mov
add
cmp
pushw
test
aaa
xor
sbb
mov
jno
add
movsl
adcb
add
es
and
jne
sub
or
cltd
call
pop
add
divb
bound
lock
pop
popf
push
movsl
pop
adc
add
cmp
in
mov
sbb
and
nop
jns
lcall
popa
xchg
adc
nop
sbb
sbbb
bound
jl
call
add
sub
adc
xor
iret
fldl
icebp
add
mov
fisubl
add
add
jl
sbb
fiadds
sti
ljmp
cmp
cmp
dec
scas
xchg
add
dec
leave
pop
test
cmp
aad
test
sub
fimuls
cmc
jecxz
push
add
sahf
in
lcall
add
xor
xorb
std
add
add
xchg
fwait
add
adc
test
jae
sahf
in
or
add
cs
pushf
cmc
arpl
ljmp
jle
cld
inc
ljmp
flds
add
lea
mov
push
xor
add
add
xchg
jle
pop
dec
add
inc
test
jge
setp
mov
in
xor
insb
inc
xor
jle
mov
cmp
aaa
sbb
movl
xor
mov
jne
or
test
jnp
int
or
add
jae
mov
lock
aam
inc
add
stos
std
sub
fneni(8087
adc
loopne
cmp
add
cmp
inc
sub
inc
in
or
add
gs
jg
jb
sarb
loopne
clc
mov
loop
fs
or
jmp
mov
sub
sub
lret
jo
ss
insl
mov
cltd
rcll
xchg
mov
push
imul
ret
mov
stos
add
push
add
mov
jae
ret
xor
mov
clc
cltd
shl
sbb
leave
xchg
add
in
mov
movsl
or
mov
mov
imul
add
mov
aas
adc
fwait
scas
mov
cmpsb
imul
in
inc
aaa
lock
jne
scas
lods
pop
sub
cmp
add
or
cmc
sbb
out
add
add
sub
icebp
add
mov
je
out
popf
mov
fisttpl
in
push
adc
in
fcoms
push
jecxz
adc
int3
pmaxsw
scas
add
and
mov
xor
aas
cmpsl
add
je
out
pop
push
add
pusha
shrl
or
add
cmp
aad
and
icebp
push
adc
lea
add
inc
sub
push
mov
add
push
cmpsb
test
sub
or
mov
push
mov
lcall
pop
sub
add
popa
enter
adc
jle
cmp
movsb
movsb
mov
rclb
inc
popf
add
push
jns
push
ret
roll
jmp
pop
add
dec
xchg
sub
or
pop
or
jle
outsl
fwait
or
pop
imulb
arpl
pushf
addr16
push
add
cmp
lds
cmp
sbb
in
mov
xchg
add
jns
dec
add
ret
fbstp
xchg
jb
adc
je
ss
filds
xchg
cli
push
flds
stc
fldenv
mov
test
add
jae
dec
pusha
lea
pushf
cmp
add
xchg
lock
sub
jge
fbstp
inc
adc
adc
loop
js
lret
lret
sbb
mov
adc
ljmp
sub
or
add
inc
imul
xchg
movsl
or
popa
popf
dec
mov
mov
xchg
xchg
cmp
adc
add
dec
mov
bound
ret
pop
xchg
fisttpl
push
rolb
sbb
dec
sub
add
cmp
test
or
mov
jno
test
sbb
add
add
rclb
mov
adc
fldt
jns
dec
sbb
sub
shll
add
or
pop
add
mov
jb
fdivl
lcall
mov
jle
xchg
fldcw
lret
jp
sub
push
sbb
mov
inc
and
leave
lock
jge
lahf
adc
fs
add
pushf
adc
inc
jp
fiaddl
adc
daa
stc
sub
cmp
xchg
flds
pop
pushf
add
cs
inc
in
scas
pop
or
rcr
xchg
push
or
add
sbb
add
js
fidivrs
aas
sbb
cs
xchg
idivl
test
aad
daa
or
ret
adc
test
fsubs
imul
sub
mov
sub
xchg
daa
push
mov
gs
add
lcall
cmp
out
sarl
ret
or
push
xor
add
add
sarl
push
in
push
xchg
jb
out
loopne
jg
add
int
loopne
adc
xchg
push
stc
add
iret
inc
mov
jge
add
sub
stos
cld
dec
addr16
push
push
mov
mov
add
lret
pushf
rcrb
test
xchg
jne
xchg
and
into
push
cmp
pop
cmp
hlt
aaa
lgs
lods
adc
jnp
into
dec
add
or
lods
push
cs
inc
mull
push
add
fsubr
xchg
mov
push
add
add
mov
sti
in
nop
or
mov
jmp
or
jg
or
nop
jns
sbb
xchg
add
mov
sub
cmpsb
rcr
add
jns
inc
repnz
mov
inc
sbb
cmp
cmp
test
in
aad
cmp
add
jo
jmp
inc
int3
add
popa
dec
push
cmp
xchg
outsb
add
push
add
pop
std
or
jns
push
push
sbb
dec
inc
lds
gs
add
pop
jb
pop
sbb
orb
xor
sbb
jg,pt
aas
mov
jnp
jl
mov
dec
xchg
dec
cmpsl
fnsave
xchg
cmp
jbe
adc
sub
mov
fcomip
push
cmp
mov
clc
pop
mov
loop
test
test
ret
cmp
sbb
mov
jns
and
sub
arpl
add
push
adc
in
jbe
or
ljmp
jecxz
lods
xchg
jbe
call
add
sbb
rolb
bound
add
fstp
mov
insl
cmp
pushf
xor
xlat
cld
or
lret
mov
xchg
movsl
sbb
loope
sub
fdivrs
add
cmp
loope
call
add
mov
ds
pop
lods
adc
int3
add
test
pop
ss
inc
sbb
mov
cmpsb
mov
inc
add
out
adc
cmpsb
xchg
out
movsl
push
jb
adc
push
in
add
inc
nop
xchg
fninit
push
add
adc
mov
add
or
add
mov
add
fldenv
adc
xchg
pop
xchg
pop
jno
or
add
xor
das
flds
pop
mov
cmp
mov
mov
jno
mov
add
push
pusha
add
cltd
mov
dec
fisttpll
sbb
in
pop
jg
mov
shll
xchg
add
jbe
cmpsb
insl
add
add
xchg
pop
jbe
pusha
or
test
push
bound
popf
sub
jge
mov
add
loop
mov
or
jbe
outsb
movsb
xchg
into
xor
pushf
inc
loope
mov
repnz
lds
outsb
repnz
cmpb
add
and
stc
add
mov
pop
add
cmp
frstor
ret
imul
loope
xor
clc
dec
scas
inc
jo
add
xor
leave
mov
cmpl
sub
sbb
xchg
inc
adc
orb
loopne
out
add
call
sti
mov
bnd
xor
cmpsb
xchg
mov
sub
imul
add
jle
push
bound
scas
xchg
ljmp
aas
iret
sub
pusha
add
dec
add
pop
test
add
add
inc
insb
sbb
addr16
xor
das
test
aam
mov
pop
lret
cld
icebp
addr16
adc
xor
stos
mov
dec
mov
add
jle
rol
or
jecxz
add
mov
shll
sbbb
les
inc
inc
add
add
test
jecxz
dec
add
incb
push
aad
cltd
mov
fimull
sub
aam
cld
xchg
aam
std
or
cltd
add
mov
add
add
inc
add
pop
adc
mov
ja
mov
xchg
inc
pop
mov
call
outsl
sbbb
fadd
xchg
xchg
not
inc
shrl
and
ret
add
xchg
fdivs
mov
rcl
sub
add
add
js
sbb
pop
in
lcall
add
pop
or
aaa
test
add
add
js
iret
add
pop
sti
adc
mov
incl
addb
inc
out
movsb
add
inc
fcompl
ss
in
jecxz,pt
lcall
add
cmp
push
add
mov
adc
scas
dec
add
clc
mov
mov
scas
dec
fdivr
sbb
adcl
mov
pop
lret
jns
mov
bound
iret
pop
push
andl
cmc
sub
bound
or
add
add
test
adc
xchg
adc
repnz
push
inc
add
ret
cs
sub
add
cmpsl
icebp
addr16
add
subb
xchg
adc
aad
ds
pop
mov
and
add
dec
in
out
push
xchg
or
dec
jnp
data16
outsl
pop
and
sahf
pop
or
lods
adc
jo
mov
add
lret
enter
mov
jl
divl
cmp
add
pop
sub
add
mov
or
push
mov
cwtl
adc
sub
add
xor
mov
mov
loope
mov
mov
std
jb
mov
clts
cwtl
arpl
gs
imul
xchg
jae
add
add
add
movsb
pop
dec
int
loope
sahf
mov
add
cmp
xlat
aas
sbb
lret
push
inc
jl
sub
arpl
xor
sti
or
cmp
mov
dec
loop
add
add
mov
gs
add
add
setle
push
push
dec
fsubl
aam
dec
add
enter
dec
add
ret
sub
imul
movsl
loopne
jg
fnsave
add
jle
out
add
mov
in
inc
je
insb
movsb
in
push
dec
test
inc
cmp
cmpb
add
dec
cmp
jmp
add
scas
add
mov
jle
clc
and
call
pop
dec
mov
nop
mov
xor
add
add
fxch
cmp
mov
sbb
jmp
arpl
les
bound
add
add
add
add
test
bound
lret
int3
cmp
jb
and
scas
ret
jecxz
or
add
push
sub
cmc
cmpsl
jb
or
addr16
fidivl
fsubrs
inc
add
jle
push
mov
add
outsl
in
or
clc
sahf
xchg
or
sbb
mov
lret
fisttpl
pop
divb
xchg
les
sub
inc
mov
jl
lds
lret
pop
mov
jecxz
push
stos
xor
dec
fists
mov
aam
in
add
aaa
jnp
push
rcrl
clc
dec
push
clc
add
sub
jnp
or
push
int3
imul
cmp
les
jne
test
dec
mov
fcmovnb
ret
fmul
mov
in
add
xor
mov
cltd
jns
cmpsl
in
outsb
dec
es
rorb
lods
cld
add
add
in
sarl
ja
sbb
pop
add
jge
xchg
jae
iret
inc
rolb
xlat
sub
add
rclb
test
hlt
add
inc
stos
lret
call
jmp
jne
shll
and
popl
repz
cmp
incb
and
fnstcw
cmp
jne
push
push
xchg
mov
add
jnp
xchg
es
xor
fsubs
sub
push
je
shll
movsb
xchg
add
sbb
sub
add
add
cmp
adc
push
jg
mov
cmp
addl
pop
jno
popf
ret
ljmp
add
add
inc
inc
add
add
or
insl
push
pop
xchg
add
jg
sahf
mov
and
dec
je
add
test
scas
add
or
adcl
pusha
lods
jg
scas
jno
mov
add
out
jo
xor
sbb
mov
add
sub
mov
clc
into
fwait
lcall
sbb
sbb
fadds
cmp
dec
ss
call
pop
cmpsb
out
lods
aaa
fsubs
add
mov
inc
and
out
test
mov
sbb
les
inc
rolb
xor
push
rcr
int3
mov
test
jo
mov
iret
aad
lock
imul
add
jns
mov
sbb
aam
xlat
add
ljmp
push
jecxz
adc
cmpsb
rolb
lock
popa
xchg
popf
mov
pop
cmp
loop
mov
sbb
popa
cmp
push
cltd
dec
add
rol
mov
cmpsb
dec
dec
xchg
aam
out
int
cmpsl
addb
out
aad
push
cmp
xor
stos
add
mov
stc
jge,pn
ret
pop
fstps
dec
dec
add
hlt
jnp
movsl
add
inc
testb
dec
push
popf
fimuls
mov
sbb
pop
out
cmp
push
aas
pop
test
mov
sbb
mov
addr16
inc
imul
lcall
add
push
in
pop
mov
dec
pusha
dec
add
jp
or
ret
xor
popa
scas
fwait
xchg
iret
iret
push
fmuls
lcall
sub
mov
icebp
add
xorb
fisubs
and
fucomp
dec
and
mov
aaa
or
arpl
dec
pop
pop
cmp
add
add
scas
ret
push
jns
mov
xor
xor
cltd
add
jge
popl
outsb
add
les
repnz
push
clc
push
popf
enter
and
pop
dec
insb
mov
sbb
push
lahf
jb
in
incl
sub
or
xor
rclb
mov
add
cmpsl
mov
or
fwait
sbb
mov
dec
add
cs
and
leave
add
add
pop
xor
inc
je
rorl
pop
fildl
roll
cltd
jo
std
add
and
jmp
mov
enter
jnp
ret
dec
adc
cmpsb
adc
lock
mov
rolb
cmpsb
xor
and
testl
add
addr16
mov
subl
sbb
jne
xor
pushf
lea
sbb
adc
sub
and
add
cwtl
out
add
icebp
adcb
arpl
orb
in
jbe
ret
sahf
test
pop
push
dec
aas
jg
mov
rcrb
xor
lds
add
dec
or
loop
ljmp
mov
faddl
enter
mov
or
fld
inc
inc
adc
add
popf
loop
jb
and
mov
jns
mov
inc
xabort
addr16
mov
cmpsl
idivb
pop
mov
mov
and
mov
fdivrl
aas
lcall
pop
aad
in
add
xchg
add
call
inc
mov
sub
jb
fnstcw
add
push
out
loop
in
mov
fmulp
cmp
add
ret
jns
xor
call
out
xchg
push
stc
push
add
mov
cmp
xchg
xchg
xchg
fadds
movsl
call
xchg
xor
mov
sbb
mov
add
and
or
dec
popa
add
mov
clc
xchg
push
nop
inc
or
add
sub
mov
roll
xchg
inc
lods
mov
mov
mov
adc
add
and
out
out
lock
inc
insb
stos
fs
xor
test
sahf
xchg
pop
pushf
ss
mov
xor
ljmp
aas
movb
cmp
add
loope
mov
add
adc
inc
iret
js
and
movsb
call
stos
push
outsl
fs
jg
jg
bound
mov
mov
lahf
cmp
push
dec
xchg
xchg
push
add
das
or
mov
mov
sub
test
add
in
filds
pop
xchg
cwtl
bnd
add
ss
cmp
pop
mov
mov
mov
enter
ja
add
push
lds
dec
dec
mov
add
lcall
push
aas
add
in
add
inc
gs
jnp
jno
sti
xchg
and
dec
dec
pop
std
add
popf
cmp
or
push
add
shll
arpl
xor
into
movsl
es
cmp
jg
add
mov
roll
cs
sub
cmpsl
add
addb
push
lods
inc
test
xchg
push
lods
imul
stos
push
cmpsl
shl
inc
jg
sub
add
shll
aaa
lock
pop
add
push
movsb
adc
sarb
dec
in
xchg
cmp
mov
out
mov
dec
sahf
add
cld
in
int3
xchg
std
test
xchg
mov
in
add
int3
repz
cmp
stos
imul
orl
sub
jl
mov
jecxz
cld
icebp
inc
add
cmp
fsubl
add
push
dec
xor
andb
push
jge
cmc
out
push
mov
loope
xor
insl
sbb
aas
jno
rep
repz
leave
mov
ret
jno
or
xor
fdivs
mov
mov
add
imul
add
inc
outsl
xor
jp
icebp
sub
dec
push
add
mov
lret
cmpsl
into
imul
jl
dec
adc
add
mov
out
test
loopne
xor
push
pop
add
rolb
push
mov
add
fs
cmp
sub
push
enter
add
jo
fwait
and
cwtl
aam
shll
mov
sub
leave
pop
and
pop
daa
fs
cmp
add
cmp
push
in
cs
test
in
dec
add
pop
add
stos
fwait
enter
pop
push
add
cwtl
mov
mov
pop
out
jae
lods
add
cmpsb
add
fdivrp
mov
mov
xchg
outsl
dec
call
xchg
mov
test
jnp
shrb
popa
cwtl
add
pop
adc
xchg
insb
dec
jnp
pop
les
ljmp
lock
xor
lods
add
jno
imul
repz
add
add
add
hlt
mov
dec
testb
jp
jp
jo
bound
sub
xor
out
imul
or
jle
cmpsl
sub
add
push
and
mov
out
stos
xchg
xlat
dec
loopne
jb
sbb
cli
jge
loopne
xor
loopne
ret
pushl
mov
fcmovb
adc
and
fiaddl
dec
popa
add
outsl
jns
ljmp
inc
mov
xor
or
insl
add
add
jp
add
scas
addb
mov
fs
add
shlb
in
push
aaa
mov
lret
xchg
ss
fmul
xor
add
fadds
add
push
push
addr16
jbe
cld
add
add
lock
sub
and
ja
lcall
add
loopne
mov
xchg
cmpsb
cli
call
rclb
icebp
sub
mov
sti
push
dec
and
xchg
and
mov
cld
jbe
add
mov
outsl
inc
push
lods
cli
jo
xchg
cmp
jle
mov
cmpsl
mov
xchg
in
xlat
imul
bound
xor
add
push
jle
lods
lcall
mov
push
add
mov
mov
lods
aad
js
sti
lahf
sti
push
outsb
sbb
dec
mov
add
jmp
rolb
cmc
aas
mov
les
idivl
mov
stos
mov
push
mov
add
movsl
or
arpl
or
loope
adc
or
dec
mov
test
sub
pop
adc
cld
mov
pop
data16
icebp
outsb
add
or
cmp
xor
in
loop
mov
cmpsl
and
mov
into
add
jns
jg
push
add
add
xor
jno
sub
mov
dec
inc
ret
cmp
or
sbb
scas
jo
pop
ljmp
addr16
pop
pop
cli
out
add
lar
dec
inc
add
or
movsb
jmp
cs
fdivrl
add
add
jmp
adc
das
inc
nop
add
mov
xor
ja
add
leave
or
adc
or
pop
xor
mov
in
push
sbb
cmp
cwtl
xchg
int3
cltd
cmp
test
fbld
add
mov
adc
cli
dec
and
push
xchg
ss
cmp
or
add
sbb
ret
sub
imul
xorl
test
ja
cmpl
fs
das
push
scas
add
lret
popf
popf
shrl
and
out
pop
fldl
imul
mov
add
js
fstpl
mov
lods
rolb
mov
sti
ja
inc
lods
add
pop
not
mov
movl
push
add
mov
pop
mov
dec
cli
sarl
and
mov
sub
or
jnp
stc
ds
push
popf
pop
imul
fbld
mov
mov
dec
std
add
mov
movsb
sub
lcall
mov
cld
sub
add
or
movsl
idivb
pop
cmp
dec
and
mov
fidivl
jg
inc
mov
roll
push
loop
jp
cmc
cld
mov
push
pop
ljmp
push
cwtl
rcrb
jp
jae
and
gs
mov
add
cmc
add
inc
leave
sub
shl
cmpsl
add
out
add
pusha
idivb
cmp
pop
and
pushf
inc
add
xor
dec
aad
pop
sub
inc
lcall
adc
mov
push
incl
addl
pusha
add
shlb
iret
cmc
add
cmc
movsb
push
bound
das
push
inc
xor
or
out
stos
inc
and
fistps
test
add
add
test
iret
leave
xchg
push
dec
cmpsl
add
cmp
fcmovne
add
pop
sbb
add
cmp
sub
pop
sbb
div
cmp
add
add
push
mov
xor
and
fiadds
movsb
add
jo
popa
clc
scas
sbb
jo
sub
xchg
add
sahf
shr
cli
add
mov
pop
loop
xlat
adc
push
lcall
insb
and
sub
sub
loopne
cmp
test
pushf
sti
add
dec
xor
lret
dec
pop
fmulp
add
mov
pop
and
sub
cmc
push
aas
arpl
enter
iret
add
loopne
les
mov
and
pop
cmp
jo
mov
mov
push
dec
and
cli
sub
mov
mov
lret
gs
xchg
inc
cmp
test
stos
arpl
or
mov
pop
fnstsw
mov
pop
add
push
fmull
fwait
push
fidivrl
add
fnsave
mov
add
shr
and
inc
mov
and
rolb
mov
out
adc
enter
scas
aam
mov
jne
cmp
push
in
add
dec
fyl2xp1
rolb
loop
fbld
mov
or
jmp
mov
xchg
jns
daa
push
jns
sub
cmp
test
into
mov
inc
sbb
add
ficoml
xor
jp
mov
rcll
jmp
add
inc
out
leave
mov
sub
mov
in
mov
stos
fmuls
mov
push
insb
in
and
addb
bound
mov
mov
add
shll
jle
adc
cmpsl
pop
scas
loopne
add
rolb
es
mov
add
xchg
mov
mov
mov
in
add
jecxz
imul
scas
jo
orl
xlat
push
cmp
and
jmp
jl
add
jb
shl
out
xor
push
add
pusha
pushf
cmpsb
adc
mov
add
add
mov
test
call
roll
outsl
add
mov
add
jns
inc
xor
add
push
rclb
mov
cltd
mov
stc
add
mov
mov
in
or
aad
push
lcall
icebp
imul
cmp
imul
out
xchg
sbb
or
xchg
add
lea
push
add
divl
mov
fildl
jge
mov
sub
out
test
add
mov
sbb
aaa
cmp
add
add
push
sub
fiadds
test
or
mov
arpl
add
push
add
and
popa
fnstsw
push
pusha
int
enter
jg
cwtl
xor
cmp
sub
test
sub
xor
pop
add
sarl
add
sbb
pop
mov
out
mov
sahf
xchg
nop
sub
je
and
or
mov
dec
adc
push
and
movsb
leave
sahf
shlb
fiaddl
mov
cli
lahf
sbb
rol
add
push
inc
pushf
cmp
push
xor
push
add
cmp
add
push
mov
jo
sarb
iret
push
out
mov
or
mov
fiadds
sub
xchg
jnp
decl
in
aaa
pushf
lahf
fiadds
cmp
add
jmp
add
sub
jg
sbb
testb
xor
ss
mov
add
and
add
fsubrl
and
jecxz
aad
cmp
xchg
ds
sbb
loope
adc
push
in
push
and
scas
add
mov
lret
fildl
mov
add
pop
add
mov
gs
cld
mov
xchg
outsb
aad
sub
add
rcll
mov
insl
jmp
roll
test
addr16
xchg
in
jecxz
mov
xchg
push
fdivr
ret
aad
jae
cmc
cmp
push
enter
add
inc
add
lcall
and
test
fs
dec
or
add
and
push
inc
sub
add
repnz
ret
in
add
in
sub
pop
adc
cs
ljmp
add
xor
add
mov
add
sbb
push
test
rcl
mov
sbb
add
iret
and
clc
lock
ret
scas
std
xchg
int
jbe
inc
push
add
add
push
cld
mov
das
or
lods
jnp
xor
imul
icebp
add
adc
mov
std
jo
mov
add
in
pop
dec
aad
outsl
add
js
cltd
nop
adc
inc
fdivr
rsm
or
dec
in
push
mov
mov
cld
ret
outsl
cmp
jno
outsb
add
xor
add
dec
mov
fmuls
and
test
dec
repz
xchg
leave
popf
jae
pop
movsl
in
ret
cld
add
outsl
push
call
icebp
adc
pop
add
mov
mov
push
cmp
sbb
cmp
pushf
cld
sbb
sub
jmp
add
mov
dec
movb
add
fdiv
add
push
dec
cmc
xor
add
pop
jno
stos
xlat
xor
push
adc
adc
mov
push
add
add
xor
es
pop
add
movsl
lcall
push
xchg
inc
add
add
xchg
pop
cmp
mov
add
lret
cmc
xchg
outsl
inc
add
aad
call
sarl
ss
add
mov
cmpl
add
rcl
and
xchg
clc
push
in
dec
into
fs
sub
add
cwtl
ja
push
add
add
push
es
xor
add
iret
sbb
cmp
lahf
stos
xor
int
add
cmp
adc
jo
cmp
add
xchg
sub
cli
add
add
inc
add
adc
adc
dec
movsb
xchg
sub
jle
add
cli
fldl
hlt
std
xlat
push
dec
add
mov
pusha
mov
lea
test
fcmovne
lds
xchg
pop
add
adc
add
cmc
ss
ret
dec
add
mov
pop
and
or
sbb
inc
add
add
add
std
sub
lret
push
add
add
lahf
push
lods
mov
sahf
outsb
inc
hlt
stos
add
insl
mov
xor
add
jp
dec
or
fisubrl
sub
inc
roll
jecxz
or
aas
rcrb
out
inc
push
out
mov
cmpsl
ret
add
mov
stc
pop
mov
mov
negl
insb
cltd
xor
mov
add
mov
push
pusha
xchg
clc
addb
add
mov
sub
dec
jbe
int3
sbbl
adc
xchg
lcall
push
inc
xorl
mov
inc
mov
inc
ret
popl
incb
out
out
xchg
loop
add
cmpsb
add
add
sub
add
ret
cmpsb
push
or
sub
sbb
dec
add
jg
mov
rorb
inc
pop
addr16
lahf
lret
mov
hlt
add
sub
cld
sbb
in
jae
pop
clc
add
ficoml
out
pop
sti
sbb
mov
add
add
add
fisubl
jae
loope
dec
jbe
add
mov
add
insl
push
mov
dec
add
pop
iretw
sbb
add
aad
imul
xor
pop
or
imul
rcrl
loope
test
cwtl
pop
dec
jne
sub
inc
ss
add
xchg
cli
mov
add
dec
adc
bound
loop
push
imul
ret
xor
ret
mov
inc
jg
mov
mov
mov
subb
mov
leave
inc
xchg
pusha
push
pop
and
scas
bound
push
add
sbb
push
xor
ss
xor
es
xchg
add
push
add
fwait
pop
cmp
addb
add
sti
xchg
sbb
flds
xchg
jns
lods
inc
or
in
sahf
inc
jge
jo
mov
mov
cmp
add
cmp
les
and
pop
xchg
decl
pop
jecxz
into
fstps
xorl
inc
stos
scas
fisttpl
add
lods
xchg
lret
imulb
add
push
icebp
add
cli
fidivrl
pushf
add
or
add
mov
loope
mov
jl
push
test
add
add
and
push
add
inc
mov
mov
add
out
mov
pop
add
imul
std
add
adcb
sbb
jno
add
xor
adc
das
lea
mull
push
cmc
mov
sbb
leave
stos
jg
add
inc
mov
sub
loopne
jns
jge
add
pop
mov
fwait
mov
out
mov
add
add
sub
pop
and
adc
aad
mov
test
add
cmp
aad
icebp
imul
sub
outsb
stos
adc
mov
mov
mov
sub
and
out
cmpsl
test
addb
and
jge
fwait
lret
scas
pop
pop
push
dec
add
test
test
lcall
sub
ret
jbe
and
add
mov
cli
rcll
popa
out
movsl
add
xchg
mov
inc
pusha
scas
dec
and
inc
xchg
movsl
inc
in
add
ss
outsl
int
aaa
imul
lods
out
sahf
add
add
ror
jne
pop
cvtdq2ps
lret
cld
inc
fcomi
test
or
or
mov
or
enter
add
xchg
jl
fildl
push
add
js
repnz
jp
in
add
int
dec
sbb
add
inc
push
inc
add
xor
jl
outsl
jp
add
or
rcrb
pusha
imul
adc
movq
loopne
mov
adc
inc
ds
cmp
aaa
cltd
add
add
arpl
jae
mov
sub
sbb
idivl
jl
mov
div
and
fcmove
add
add
es
cli
pop
ds
int3
or
add
inc
or
sub
test
and
test
jo
faddp
xchg
and
or
cmc
mov
loopne
inc
aad
add
enter
fbstp
jecxz
mov
xchg
testl
or
mov
push
pop
xchg
les
enter
add
cmp
imulb
clc
ret
rcll
sbb
daa
adc
xor
mov
dec
add
xor
outsl
xor
ljmp
and
pushf
inc
add
outsb
sbb
mov
add
jae
mov
ret
out
nop
ret
jecxz
repnz
dec
shrb
lret
les
sub
mov
in
dec
imull
mov
mov
cmp
imulb
jmp
mov
std
stos
adc
jle
lods
push
add
addr16
jno
loopne
ja
jo
xorl
add
push
xor
or
inc
mov
push
push
jns
add
clc
xor
scas
stos
add
imul
insl
outsb
out
cmpb
jo
mov
cmp
daa
or
lds
add
addl
int3
bound
sahf
mov
mov
mov
adc
jae
sarb
mov
dec
fsubl
enter
add
cmp
adcb
lds
mov
jge
inc
mov
add
push
add
pop
in
pop
aaa
add
fnsave
stos
cmp
or
add
inc
adc
add
sbb
pop
mov
add
pop
test
and
fisubrs
dec
and
lret
cltd
push
xchg
or
pop
sbb
mov
rcl
cs
lds
mov
jne
jb
pop
push
loop
imull
insl
fildl
push
call
int3
sbb
xchg
clc
repz
scas
mov
shrl
stc
pusha
sahf
and
jo
ret
and
push
hlt
pop
add
loop
mov
enter
push
adc
push
pop
add
adc
jno
add
or
adc
add
xor
int
out
loope
add
add
xor
pop
cmp
add
mov
push
pop
lahf
iret
push
mov
out
push
jp
in
inc
pop
sbb
jle
and
xchg
in
scas
cli
andb
imulb
add
xor
ltr
mov
arpl
jbe
push
movnti
loop
xchg
mov
iret
add
pop
sbb
sysexit
cmpsl
add
add
leave
mov
add
xlat
in
cmpsb
mov
scas
mov
cmp
jnp
fimuls
mov
jb
mov
fildll
int
fimuls
jb
jnp
fadds
push
in
inc
or
mov
imul
adc
aaa
out
into
mov
add
adc
and
xor
jne
push
stos
and
add
add
mov
rolb
add
aas
add
sub
iret
sbb
sbb
movsl
gs
rdpmc
add
fldcw
cltd
mov
les
xchg
dec
add
es
add
loop
push
pop
leave
pop
cli
add
pop
lcall
ret
pushf
bound
or
rolb
andl
jmp
mov
repz
jno
and
xor
and
outsl
adc
dec
aad
int3
mov
lea
xor
int
or
xorl
push
test
das
mov
and
in
inc
mov
push
add
jp
out
and
imul
sub
lcall
push
repnz
dec
mov
jnp
aam
add
push
test
fildl
sbb
dec
sti
scas
push
inc
setp
jbe
addr16
loopne
sub
adc
or
fildl
mov
pop
adc
call
push
cmpsl
xchg
aad
jbe
add
push
add
xor
rol
test
cwtl
sub
mov
mov
add
pop
imul
lcall
add
xor
cmp
and
inc
xor
xchg
add
add
xchg
loope
xchg
add
rcrb
aas
fildll
fbld
mov
sbb
mov
sarl
sub
roll
in
ljmp
add
lock
xor
push
inc
fdivrp
or
stc
adc
jne
xchg
pushf
dec
xchg
out
clc
mov
mov
add
xor
add
xchg
cmp
lock
jo
add
adc
cmc
xchg
pop
add
lock
lcall
shlb
loope
iret
sub
loop
xor
or
ds
out
sbb
out
out
add
and
lahf
add
outsl
push
add
fidivl
mov
xor
mov
int
jne
cli
sub
je
pop
insl
mov
add
jno
and
cmp
les
mov
xchg
or
out
xor
add
add
ficompl
jbe
int
push
add
int
push
aam
imul
mov
shll
push
or
add
dec
test
dec
dec
cmpsl
mov
mov
xchg
in
dec
xor
add
and
mulb
add
push
mov
add
cmp
add
add
popf
xchg
fmul
add
inc
and
int3
push
ds
inc
pop
xor
cmpsb
or
inc
lcall
ljmp
jecxz
xlat
add
inc
popl
fldcw
movsl
dec
dec
pop
bound
sahf
jb
icebp
add
inc
sbb
roll
mov
fldcw
pop
push
dec
addb
repnz
out
adc
mov
out
sahf
loop
add
xchg
add
test
jb,pt
pushf
aaa
mov
add
test
pop
add
sbb
roll
jmp
mov
mov
add
movsl
lcall
call
jne
ljmp
add
add
add
xchg
aas
sbb
add
xchg
add
cmp
popa
inc
xchg
imul
hlt
adc
and
pop
data16
loopne
xor
mov
push
inc
mov
cmc
lods
mov
push
lret
lahf
cmc
dec
add
mov
add
add
jne
daa
gs
dec
mov
or
pop
add
add
add
inc
or
cmp
enter
xchg
js
inc
push
dec
add
sbb
cmpsl
jecxz
xor
mov
pop
add
shrb
aaa
sub
jo
xchg
and
add
sub
inc
or
mov
inc
pop
lcall
pop
fnstenv
pop
cli
or
inc
cltd
cltd
add
jmp
pop
inc
inc
or
dec
mov
jbe
add
add
dec
add
jbe
es
data16
and
popf
add
jg
loop
out
and
hlt
arpl
fcompl
stc
idiv
xchg
and
repnz
add
dec
jae
add
sbb
fidivs
repz
add
cmp
ljmp
xchg
negb
mov
popa
inc
xchg
cs
adc
inc
imull
aaa
or
mov
in
push
stc
push
movsl
int
bound
cmpsl
bnd
fists
add
fnsave
xorb
in
dec
test
fsubl
add
and
addb
sbb
cmp
daa
sbb
add
push
jae
add
sti
inc
jecxz
pop
add
outsl
jo
cmpb
add
add
cmpsb
and
push
movsl
rolb
sub
add
and
lret
add
loope
lcall
dec
add
pop
repz
nop
jecxz
outsb
fsts
cmc
push
lahf
push
clc
or
lods
inc
sub
test
fnstcw
sub
xchg
add
or
mov
mov
test
dec
push
mov
inc
scas
pop
fists
flds
adcl
mov
pop
jb
pop
das
loop
sub
mov
pushf
fisubl
cs
mov
add
pop
xchg
xchg
fldenv
and
into
jns
add
xor
push
add
popf
mov
out
scas
jp
stc
dec
inc
sub
stos
inc
daa
sub
or
pop
ret
mov
cli
add
xorl
jmp
add
popa
add
inc
inc
push
pop
sbb
repz
xor
and
repz
daa
ds
push
fwait
jp
jns
rcl
jmp
mov
xchg
ss
lret
lahf
lock
mov
in
lods
notb
pcmpeqb
sbb
adc
xor
test
mov
lds
imul
adc
test
adc
xchg
add
dec
fisttps
neg
add
imul
lods
insl
push
add
add
adc
pop
stos
xchg
xor
mov
cmpsl
arpl
xchg
shll
mov
push
add
fld
addl
or
sbb
movsb
mov
hlt
cmp
add
dec
mov
nop
call
int
jle
into
mov
xor
cld
rcll
cmp
fmuls
add
iret
add
push
lock
cmpsl
add
xchg
sbb
xchg
std
and
popf
cmc
js
sbb
sub
pop
cmp
sub
add
fisubrl
adc
adc
incl
add
jmp
pop
lods
clc
hlt
cmpsl
add
push
addr16
add
aas
xor
ljmp
adc
xchg
roll
add
and
scas
add
and
add
xor
dec
jnp
cwtl
dec
cmpsb
mov
pushf
mov
clc
hlt
jecxz
rol
pop
jmp
pop
hlt
jae
add
add
and
pop
add
pop
popa
mov
sub
add
arpl
push
sub
sub
or
mov
iret
add
push
mov
out
mov
ljmp
cmp
repz
scas
jge
str
inc
js
rclb
es
add
cld
and
in
insb
es
in
loop
arpl
pop
jns
hlt
add
xchg
dec
mov
jge
or
int3
inc
cmp
mov
add
in
mov
add
loope
sahf
js
push
and
and
int3
fstps
shlb
into
out
scas
or
add
pushf
xchg
adcb
in
xor
lret
add
xor
fimuls
lock
dec
jae
int
pop
fistpl
lds
inc
outsb
clc
inc
add
xchg
inc
pushf
add
popf
iret
iret
inc
lds
add
or
sbb
rcrl
xlat
mov
or
mov
pop
push
adc
ja
add
pop
sub
ret
add
mov
sub
mov
jbe
add
popa
add
add
stos
hlt
jnp
es
pop
fsubrl
xor
int
mov
and
xchg
add
gs
xor
scas
test
and
mov
add
add
adc
sbb
out
jle
leave
fwait
add
repz
cmp
shl
and
cmp
add
test
aam
arpl
inc
xchg
cmpsl
movsb
add
mov
pusha
push
test
in
cmp
and
stc
and
lcall
xchg
inc
in
jg
out
or
test
or
seta
add
pop
xchg
shr
push
add
add
and
mov
lds
push
incb
jle
fs
sub
js
stos
adc
xor
cs
pop
roll
mov
std
insb
add
mov
or
lret
cmp
inc
scas
pop
mov
dec
or
fisttpl
fstpt
mov
les
pop
jg
call
add
add
jp
dec
gs
and
cmpsl
pop
inc
nop
fists
pop
inc
cmpb
xor
std
sub
fs
test
sbb
dec
cmp
cmpsb
iret
jge
es
jbe
push
sub
lahf
mov
pusha
push
test
xchg
pop
inc
jg
or
mov
xchg
fcoml
mov
cmp
mov
and
cli
sub
fnstenv
mov
push
pop
add
sbb
mov
add
mov
test
mov
add
jmp
add
mov
nop
std
xchg
add
add
data16
test
out
jne
pop
cmp
adc
testb
out
xchg
xor
inc
inc
mov
test
mov
in
jb
in
add
movsb
mov
pop
and
imul
enter
sbb
cltd
jo
mov
sub
sub
inc
adc
pop
cmp
pusha
add
cmp
cmpl
sub
cmp
push
fwait
cmp
gs
mov
fcompl
mov
xchg
inc
pop
sub
cltd
pop
mov
mov
xor
add
stos
loopne
std
lock
mov
sbb
add
fstpl
adc
addl
out
add
xchg
fcoml
loop
clc
jno
dec
loopne
ds
or
leave
clc
add
push
into
and
add
aad
xchg
push
add
xchg
add
scas
shlb
xor
add
nop
xchg
and
pop
sub
push
and
inc
and
add
nop
test
sbb
shll
das
int
push
out
dec
mov
into
mov
xchg
leave
mov
add
add
inc
push
adc
xor
popa
push
or
jl
cmp
add
popf
pushf
and
mov
push
test
outsl
das
sbb
jl
add
shl
jmp
imul
add
jge
cmp
jge
mov
and
dec
insb
lock
mov
mov
gs
repnz
repnz
and
cmp
add
scas
fldcw
popf
leave
bound
imul
pop
lock
xchg
add
add
lds
lahf
nop
movsl
add
mov
shll
mov
add
lcall
or
or
and
dec
or
loop
dec
adc
fildl
stc
mov
loope
pop
and
dec
out
mov
push
daa
js
daa
imul
fsubrl
out
popa
insb
push
or
movsb
sub
loop
and
arpl
ret
mov
pop
mov
dec
or
andl
cmp
add
fwait
add
or
popa
push
push
popf
sbb
cmp
add
push
cli
orb
pop
lock
enter
mov
push
dec
pop
add
push
fs
push
xchg
jb
add
push
add
xchg
imul
or
add
or
add
add
xlat
std
inc
mov
pushf
pushf
inc
lods
imul
cli
rcr
flds
cltd
add
test
add
jg
in
or
enter
loop
out
and
push
pop
inc
add
add
xchg
and
enter
out
outsb
add
dec
sbb
jne
add
and
add
add
mov
lods
inc
mov
scas
inc
aaa
scas
in
cmp
adc
pop
inc
stos
xlat
mov
pop
popf
mov
frndint
pushf
add
jo
or
ret
or
in
add
cmp
add
mov
and
cltd
add
xor
cld
xchg
fmuls
fiadds
gs
clc
adc
or
dec
nop
xchg
and
add
scas
loop
dec
sbb
out
mov
lods
jne
repnz
sub
scas
mov
loope
fsts
imul
repz
xchg
lret
jmp
add
ret
cmpsl
mov
or
cwtl
push
and
imul
mov
iret
add
jl
aas
jae
scas
lods
lods
sti
add
in
fs
jmp
ret
jmp
sub
ret
add
fstps
fstps
ljmp
clc
inc
add
add
dec
stos
jns
ret
stos
pop
xor
fidivl
add
scas
jmp
inc
add
xor
dec
repnz
movsb
xchg
mov
mov
xchg
ds
mov
addr16
out
leave
scas
add
jne
xchg
inc
add
int
mov
add
outsl
pushf
push
xchg
sti
pop
lods
cmp
jns
add
add
rcrb
add
repz
mov
pusha
push
cld
movsl
add
xchg
xchg
mov
xor
jb
cltd
aaa
lret
shr
add
cld
repz
stos
faddl
xchg
les
add
add
inc
add
push
push
in
mov
add
in
jmp
pop
add
fldl
and
add
pop
pop
sbb
or
jle
dec
add
inc
je
push
sbb
and
nop
fidivs
mov
pop
inc
lea
push
lret
arpl
push
and
mov
fsts
and
mov
ret
sbb
sub
dec
xchg
jbe
jp
adc
addr16
sbb
mov
mov
ja
push
fcoms
ds
mov
jg
pop
into
xchg
sbb
or
cmp
arpl
scas
mov
jl
pop
add
or
stc
inc
arpl
insb
das
add
sahf
in
pushl
aaa
ror
hlt
test
std
sub
gs
push
push
sub
push
bound
xor
test
push
or
loopne
add
outsl
sahf
dec
add
clc
add
sub
mov
or
or
std
out
cmp
cmpsb
mov
mov
fisubs
jo
mov
xchg
jmp
in
or
add
inc
add
xchg
pusha
add
lods
mov
lea
pop
push
mov
push
cli
xor
int3
xor
add
xor
xchg
add
add
add
push
sarb
mov
push
inc
pop
add
add
je
add
add
adc
xlat
mov
fisubs
or
mov
cwtl
xchg
ret
dec
add
dec
add
add
add
mov
add
lock
inc
xor
inc
add
dec
roll
mov
add
aas
mov
push
test
add
add
arpl
pusha
std
lock
xchg
xor
add
xchg
fimull
or
loop
loop
jmp
movsb
test
jmp
add
test
mov
in
imul
out
push
inc
jp
sub
and
mov
or
fwait
pop
add
add
ret
xor
cmp
enter
jo
add
mov
cltd
pop
jp
adc
dec
rcl
inc
test
or
mov
add
clc
jmp
rolb
cmc
jb
out
and
jns
or
fdivrs
int3
xchg
cltd
push
add
aaa
fldt
xor
pop
cs
add
add
lock
mov
loop
jns
push
loope
sbb
jecxz
leave
fcmovb
dec
adc
or
mov
rcl
add
dec
jns
sbb
xor
sub
xor
push
sarl
add
jmp
pop
mov
xorl
mov
mov
push
sub
or
sahf
repz
stos
add
rcrb
adc
jo
dec
mov
sub
add
mov
mov
mov
add
scas
inc
cmpsl
ljmp
add
lock
jmp
sub
rorl
mov
add
inc
xchg
dec
jmp
dec
sub
sub
adc
in
cmc
jae
je
jnp
add
jg
sbb
lds
sub
or
xchg
dec
es
rcrb
mov
sub
xchg
adc
jae
add
scas
adc
popf
fimuls
push
and
repz
or
fldl
xor
mov
movsb
add
add
pop
mov
cmp
clc
sub
les
cmp
inc
add
xchg
movsb
dec
cs
negb
aaa
scas
mov
pop
inc
pusha
xchg
pop
scas
jl
push
je
lds
mov
scas
pop
sub
inc
inc
pop
xor
mov
jle
sub
push
pop
sbb
pop
fnsave
leave
pop
outsl
lret
enter
iret
mov
movntq
add
add
dec
add
push
iret
jl
add
add
mov
aas
push
outsb
cld
or
negl
jge
jnp
lret
aaa
popw
int
les
shll
cmpsl
lret
enter
add
jmp
rcr
sbb
jo
dec
add
mov
fwait
mov
push
mov
lahf
leave
dec
repz
add
or
sbb
xor
enter
add
xor
push
lret
xchg
jmp
sti
dec
gs
ret
mov
adc
cmp
aad
cmpb
sbb
sub
xor
jmp
jae
fdivrs
aaa
mov
jle
aad
ficoms
inc
loop
mov
mov
push
add
push
xor
xor
subb
lds
cmc
in
add
or
xchg
add
subb
stos
fmuls
arpl
pop
in
add
xchg
mov
lods
lods
xchg
repz
xchg
imul
sbb
call
jnp
add
jae
push
add
mov
cmp
jg
cmpsb
mov
int
sbb
add
inc
sub
push
mov
pop
and
fmuls
in
je
pop
jbe
mov
fwait
or
push
testb
xchg
jbe
xor
jnp
add
push
add
lret
loope
or
push
push
test
sbb
mov
add
nop
arpl
sub
xchg
xor
negl
or
leave
pop
xor
mov
add
push
cmp
mov
ss
jle
push
jg
aas
jg
sub
cmc
std
lcall
inc
add
adc
inc
iret
sub
add
lahf
clc
pop
popa
je
add
push
loope
xor
pop
daa
mov
mov
mov
inc
add
iret
insl
rcrb
add
dec
jns
mov
pop
add
dec
add
ret
mov
xor
add
adc
mov
jbe
insb
pop
jp
add
pushf
shlb
ret
out
fisubs
ret
dec
gs
sahf
sbb
adc
das
jo
rorb
dec
leave
pushf
sub
mov
aam
pusha
xor
fistl
fdivrs
xor
sub
call
psrad
add
mov
stos
adc
mov
mov
xchg
add
add
mov
jae
sbb
shrb
add
dec
pop
in
adc
add
add
and
enter
and
shl
mov
outsb
pop
add
xor
dec
lock
loopne
xor
jle
add
pushw
leave
fistpll
test
pop
nop
mov
scas
leave
hlt
pushf
inc
push
sub
inc
push
mov
call
add
cld
jmp
out
cmp
push
dec
lea
pop
xchg
push
insb
lret
add
add
jo
stos
sahf
loopne
cmp
sbb
adc
jno
jg
mov
pop
push
xchg
ds
std
inc
cmpb
cmp
push
sbb
pusha
cs
xchg
and
mov
inc
add
pop
cmp
add
mov
add
in
xlat
inc
cltd
popf
sbb
insl
xorl
cmp
cmpsb
imul
js
insl
dec
inc
test
ds
add
mov
lds
stc
mov
pextrw
add
ja
rolb
adc
sbb
add
add
dec
sbb
cmp
scas
out
add
inc
mov
jecxz
inc
fdivrl
add
add
leave
sti
push
into
jnp
jnp
rcrl
into
popa
pusha
xor
xor
in
jecxz
xchg
fbstp
dec
adc
or
push
sbb
cmp
gs
test
dec
cmp
pusha
dec
repz
icebp
add
mov
mov
add
cmc
and
shlb
push
scas
pop
dec
mov
lret
in
aad
and
xor
add
imul
dec
add
add
mov
adcl
int3
mov
mov
roll
call
jo
push
cmp
je
lret
cmp
xor
roll
mov
shll
sbb
sbb
ds
sbb
sbb
loope
roll
inc
mov
imul
test
loope
ret
mov
inc
add
adc
add
jno
and
push
add
aaa
and
add
inc
ljmp
jns
fcmovne
enter
add
add
add
fidivl
ljmp
into
mov
and
jo
insb
test
sub
or
sub
gs
add
add
sbb
fs
in
add
xor
int3
adc
hlt
xor
in
sub
add
cmp
jecxz
les
add
lcall
stos
lds
mov
out
pop
dec
cmp
push
push
add
stos
dec
popa
addr16
shrl
pushf
fldenv
xor
call
flds
sub
lock
fdivs
imul
daa
sbb
fs
out
add
daa
loope
data16
push
lock
xchg
jge
lret
cmp
mov
add
mov
mov
add
pop
sub
add
mov
cmpsl
add
fsubs
push
or
mov
xor
add
xchg
mov
addl
rcrl
wbinvd
dec
xchg
jg
or
outsl
xchg
add
sbb
cld
add
jne
sub
mov
or
rcl
adc
int
aaa
test
jno
add
aaa
nop
xchg
fwait
add
aaa
adc
adc
stos
aas
or
pop
sub
inc
and
and
jge
dec
fidivrl
cmp
in
test
cld
jg
mov
aas
aad
add
xchg
add
bound
or
jg
add
sbb
int
arpl
jno
rcrl
add
bound
pop
add
jno
add
push
subl
cmp
gs
pusha
sbb
cmp
sub
jnp
sub
inc
jno
adc
les
xchg
adc
popf
in
add
adc
insb
xor
inc
rclb
dec
imulb
enter
in
push
mov
lods
mov
nop
mov
push
jmp
xchg
jno
ficoms
mov
adc
xchg
sub
daa
jns
xor
push
int
jbe
outsb
pop
cmp
and
add
int
jg
mov
fs
push
jl
arpl
mov
add
mov
popa
lahf
aaa
sbb
and
xchg
loope
je
push
in
add
dec
movsb
cmpsl
cmpb
cmp
pop
push
pop
mov
xor
add
ret
ret
fcomps
cwtl
mov
pop
jl
pop
mov
xchg
pop
mov
mov
enter
out
push
jns
add
pop
pushf
fisttpll
push
push
add
sub
scas
ja
negb
ficomps
je
jne
mov
test
rol
adc
or
cs
jge
xchg
nop
push
add
add
mov
xchg
stos
add
test
sbb
es
cmpsl
mov
push
fistpll
inc
andl
stc
pop
out
push
mov
xchg
fsubl
lcall
sub
addl
mov
lret
add
and
sbb
mov
cmp
mov
mov
cmc
outsb
add
mov
add
jae
jg
movb
outsb
inc
mov
fst
push
lret
cmp
iret
jns
mov
es
clc
lods
je
insl
add
cmp
leave
mov
inc
mov
jbe
test
data16
test
add
jg
and
add
testl
dec
into
jae
add
repnz
loopne
mov
add
xorb
and
push
sti
stos
test
pop
imul
push
dec
sbb
aam
mov
cmp
xchg
add
adc
add
mov
inc
cmp
popf
pop
mov
movsl
ret
add
les
aam
xchg
inc
das
ljmp
sbb
bound
fstps
xor
or
jo
pusha
imul
in
popf
aad
pop
xchg
dec
push
jg
add
scas
xchg
addb
cmc
and
inc
sbb
jno
pushf
stc
xchg
adc
cwtl
mov
loop
cld
in
xor
jo
dec
fs
test
sub
jbe
loopne
jp
inc
lock
bound
xlat
orb
in
test
pop
bnd
pop
push
sub
es
stos
insb
mov
lret
xchg
nop
and
xor
pop
dec
cmp
add
out
xlat
add
filds
jmp
add
daa
popf
loopne
lcall
add
cmp
push
mov
push
inc
add
add
mov
push
xchg
add
ds
or
int
mov
add
rcrb
inc
js
sub
addr16
add
jo
add
push
pop
push
mov
add
aaa
add
jb
add
push
call
cwtl
pop
shrb
add
sub
in
xchg
xor
dec
add
push
out
out
adc
ljmp
out
pop
mov
mov
add
add
pop
out
add
pop
mov
add
push
add
jmp
push
add
add
sub
push
repz
cmpsb
mov
jl
mov
mov
leave
es
xchg
pop
arpl
call
pop
movsb
les
pop
das
out
add
dec
or
or
xlat
cmpsb
cmp
inc
push
add
jno
roll
or
mov
push
incl
or
stos
and
inc
add
mov
out
shll
mov
mov
mov
add
add
jnp
xor
bound
je
mov
sub
xor
dec
es
jne
test
add
sbb
xor
andb
add
add
mov
mov
mov
mov
imul
pop
xchg
add
pop
add
add
fwait
add
add
jnp
xchg
jle
mov
xchg
add
add
repnz
push
sbb
add
jl
mov
lods
into
dec
jne
mov
push
mov
add
in
mov
addb
enter
jbe
outsb
adc
add
dec
dec
add
add
cli
lret
in
mov
push
dec
je
pop
and
call
lods
xchg
pop
xchg
add
dec
ret
push
xor
lock
sahf
jmp
xor
adc
mov
add
clc
pop
addb
push
adc
int
rcrb
fwait
rolb
jle
cmp
loopne
mov
push
sub
nop
mov
cmp
add
call
adc
loopne
or
add
cmp
repnz
add
imul
outsb
add
or
mov
and
jne
lea
xor
add
cmp
int3
add
shll
mov
pushf
call
pop
imul
lahf
adc
push
xor
mov
mov
and
in
add
mov
xchg
add
cltd
cs
push
inc
pop
shll
and
dec
add
nop
les
or
cltd
mov
mov
mov
shrb
jge
das
jb
inc
fbstp
fstpt
adc
pop
and
insl
or
cli
in
lods
mov
bound
add
imul
fnsave
push
dec
dec
test
sbb
jae
incb
inc
add
pop
in
lds
push
add
insl
or
outsl
clc
add
xor
inc
push
xchg
add
mov
jns
fstpt
add
rorl
mov
inc
fldl
mov
int
or
xchg
rolb
fcoml
add
add
fiadds
pop
jns
and
lret
dec
push
xchg
push
sbb
jle
fsubr
stc
arpl
xor
stos
aaa
test
insl
push
add
add
mov
jnp
add
cltd
cmp
jmp
fsubl
insb
add
int3
in
xchg
mov
mov
dec
in
cmp
inc
cwtl
hlt
fnstcw
dec
fcompl
jnp
cmp
mov
sub
and
mov
mov
lods
test
mov
test
add
aad
scas
pop
jbe
cmpsb
xchg
and
lea
fs
stc
adc
movsb
add
xlat
adc
loope
fs
inc
xor
jb
cmp
push
add
out
push
fstl
or
adc
pushl
jge
pop
mov
leave
lret
cmc
sbb
stos
sbb
inc
icebp
add
inc
aaa
mov
sub
jg
fmull
out
shlb
mov
out
sub
jmp
sbb
lcall
ljmp
ret
pop
mov
xorb
add
inc
movsb
add
sub
repnz
fwait
lahf
sbb
and
add
sti
add
out
sub
add
and
mov
cmc
push
cmpsl
mov
push
xchg
ds
jecxz
out
sbb
das
shll
and
incl
stos
enter
sub
add
sarb
cmp
inc
ljmp
cmp
sub
mov
lods
jl
push
push
mov
das
lret
jae
je
test
adc
addr16
lcall
jno
cmp
and
lcall
add
adc
movsb
scas
add
and
hlt
add
adc
fs
mov
mov
add
jle
xchg
fwait
push
cmova
aam
or
xor
cmpsb
jge
sbb
adc
nop
dec
mov
dec
lds
add
xor
and
les
mov
adc
fmull
xchg
cs
repz
xchg
mov
add
adc
xchg
add
data16
str
cmpsb
add
scas
gs
call
adc
lods
dec
mov
add
iret
and
dec
add
sub
push
cmp
in
int3
add
add
mov
pushf
iret
ret
jne
push
add
cmc
xchg
dec
dec
mov
cmp
xchg
and
test
jne
add
aas
sahf
mov
push
les
into
add
out
dec
movb
add
jnp
add
jp
sarb
fldt
push
fildl
xchg
loopne
int
cli
sbbb
add
jns
or
push
out
cwtl
movsb
xor
sub
std
or
ret
sub
mov
repnz
cltd
add
mov
das
and
dec
add
leave
popa
sbb
push
aaa
sub
add
sub
jle
mov
adc
aas
xor
xchg
pop
aaa
xchg
sbb
mov
subl
add
repz
fstpt
add
ret
add
inc
inc
and
xchg
in
popf
test
add
and
and
push
jnp
mov
in
jmp
mov
loop
dec
inc
and
fsubrs
mov
push
test
call
xor
rcll
ret
add
popl
sub
cmp
xchg
in
in
push
cmp
mov
popa
in
xor
add
jns
inc
add
dec
jle
pop
jne
out
dec
or
add
insb
inc
addl
add
leave
aad
call
mov
lret
sbb
add
rcrl
out
ja
add
add
in
cmp
popa
add
aas
sbb
and
lds
mov
pop
sti
lret
add
into
lret
add
push
adc
xchg
pop
inc
and
sti
jp
mov
add
pop
add
push
loop
imul
dec
add
pop
dec
inc
add
jns
add
mov
popa
out
xchg
decb
mov
jbe
add
add
lds
int3
repz
inc
sub
pop
pop
frstor
push
jns
jno
mov
lret
stos
clc
adc
aaa
sbb
ret
in
out
fs
test
insl
cmp
add
fdivl
adc
scas
push
or
push
add
push
cmp
fmull
add
movsb
or
inc
test
aaa
add
jae
int
jo
dec
dec
cmp
fs
add
lock
pop
mov
mov
iret
mov
out
jno
sub
aas
or
xchg
add
add
sar
das
mov
in
mov
sub
ss
adc
cmpb
fsub
stos
cs
imul
test
and
add
add
cltd
cmpsl
push
push
gs
pop
ss
push
std
add
push
sub
add
mov
ret
pop
cld
dec
add
jge
cs
add
jp
add
xchg
mov
sbb
aam
ffree
add
jo
stos
rcll
lret
add
add
add
cmpsb
mov
pop
stos
add
push
pop
add
mov
xlat
jg
add
nop
push
fs
lahf
and
or
cmp
sub
pop
scas
scas
inc
sbbb
or
jecxz
sub
or
push
nop
jno
jmp
add
loop
rolb
inc
jae
add
xor
add
sub
repnz
popa
add
mov
sub
in
lret
into
inc
pop
add
test
add
xchg
mov
sbb
int
cltd
scas
inc
jo
insb
xchg
adc
lods
mov
jb
arpl
cmp
push
mov
mov
pushf
loop
js
lds
pop
xchg
adc
hlt
je
imulb
fsubs
jle
jo
test
pushf
xor
push
sbb
dec
dec
movb
data16
or
enter
inc
sub
ja
mov
pop
sub
das
add
fistl
push
inc
stos
push
daa
push
sub
into
xor
in
repz
movsb
cmpsl
sub
loope
and
ret
mov
sti
test
add
pop
xchg
mov
pop
add
test
or
icebp
jb
xor
loop
sub
decl
pusha
xor
add
add
add
mov
not
jbe
push
leave
mov
fstl
or
nop
xchg
lds
daa
pop
bound
cli
sti
add
les
and
jbe
idivl
mov
jno
mov
push
pop
in
add
xchg
jl
in
mov
cs
out
push
sub
stos
cmpb
jg
addr16
in
push
mov
jl
jb
ret
xor
cmc
xchg
and
mov
rclb
pop
sti
cmp
pop
inc
pop
test
inc
mov
add
mov
push
loopne
add
inc
repz
dec
andb
pop
jae
mov
cs
repnz
out
inc
stc
dec
mov
mov
popa
push
cmp
outsl
lock
sbb
or
and
push
dec
cmpsb
cmovge
cmp
enter
cmp
mov
xor
add
jl
add
mov
lret
jns
xchg
loope
xchg
mov
sub
add
leave
cmp
in
add
mov
repz
lahf
sbb
push
add
inc
repz
shrb
add
push
inc
faddl
and
mov
add
fisttpl
test
add
add
inc
pop
lock
cmp
pop
mov
nop
mov
cmp
add
enter
pusha
mov
fistps
mov
ds
push
cmp
pusha
bound
dec
mov
xchg
mov
cmp
movsl
sar
aam
stos
mov
movsb
add
repnz
jmp
sbb
jnp
sbb
pop
add
pop
xchg
jecxz
jl
dec
dec
mov
decb
fcom
mov
pop
mov
xor
ljmp
sbbl
testl
test
push
rcll
add
ja
add
xchg
push
add
sbb
mov
repnz
shrb
test
xor
xchg
push
ret
negl
iret
scas
dec
jp
pop
xchg
add
into
adc
in
add
mov
dec
sbb
mov
enter
es
fdivl
pop
add
in
aas
test
cmpl
add
jb
iret
roll
add
inc
sbb
lock
push
or
aaa
add
js
pop
fldt
xchg
or
ja
pop
pusha
xor
je
add
daa
push
insl
lock
imul
hlt
xor
cs
rorb
bound
addb
add
add
pop
adc
or
jmp
dec
add
or
push
add
and
adc
in
xlat
sbb
repnz
push
add
or
sub
out
cwtl
inc
inc
fildll
xchg
clc
fwait
pop
orb
add
int
mov
mov
repnz
add
cmpsl
cmp
mov
pop
addr16
inc
add
les
and
add
daa
js
repnz
sbb
push
dec
add
and
rclb
je
cmp
mov
loop
push
add
roll
lea
lret
jae
add
or
mov
shrb
call
out
jmp
faddl
lea
inc
xchg
js
add
aas
add
sbb
adcb
movsb
or
jle
test
orb
inc
mov
stos
push
filds
out
addl
mov
repz
aam
jmp
add
and
add
test
xor
jl
mov
sbb
xchg
sbb
ja
insb
jmp
aad
push
repz
bound
add
in
dec
inc
out
mov
add
fnstsw
xchg
add
aam
add
arpl
out
sti
xlat
dec
mov
lahf
scas
inc
add
gs
fidivs
jne
xchg
jl
fs
repnz
mov
lret
add
mov
add
sbb
popf
fimuls
mov
add
add
sarl
outsl
outsl
aas
fiadds
xor
xor
incb
cmp
jmp
add
add
add
dec
add
lock
add
pop
pop
cmpb
sub
mov
popa
std
or
add
add
pop
sbb
imul
mov
add
daa
mov
add
xor
lock
sub
adc
cmp
jno
add
add
jae
xchg
xchg
dec
xor
jne
mov
lret
faddl
fnstsw
xchg
add
add
mov
incl
jmp
jecxz
cmc
es
adc
mov
mov
sahf
insl
fcomip
xor
mov
xchg
push
jg
xor
imulb
push
call
push
in
add
sub
add
movsl
fdivs
push
add
in
mov
sub
add
out
mov
pop
lock
call
add
roll
mov
loopne
add
aaa
or
push
ds
jg
or
xor
aas
jmp
sahf
mov
in
stos
insb
daa
sar
lcall
sub
js
ds
inc
adc
jne
add
or
xor
outsb
xchg
pop
jmp
dec
jns
cli
andb
adc
mov
and
test
out
adc
and
push
mov
out
adc
push
jne
in
inc
les
sahf
add
ret
push
fcom
sub
fbstp
xchg
lcall
inc
test
mov
add
mov
or
add
push
pusha
push
inc
movsl
pop
jl
and
out
jmp
ret
les
arpl
loopne
jmp
out
push
adc
outsb
and
popf
jo
pop
bound
test
lcall
cmp
xchg
lds
in
push
xlat
add
jne
add
push
add
orl
aam
xchg
hlt
out
outsb
roll
mov
pushf
out
add
push
std
scas
mov
lods
lock
jmp
add
out
outsl
add
scas
pop
add
inc
loope
lahf
or
shll
bound
xor
jnp
jnp
mov
inc
fs
roll
jb
in
add
adc
les
sub
mov
add
sti
jae
scas
pop
sar
daa
add
stos
lea
popa
cltd
movsb
push
aaa
add
cmpsb
xor
lods
dec
leave
stos
loopne
mov
outsb
dec
dec
xchg
lret
fdivr
mov
xor
xchg
jmp
cld
mov
push
xor
sub
or
mov
jmp
cli
and
dec
ud0
popl
roll
lock
push
popw
add
pop
inc
dec
mov
mov
push
mov
mov
rcrl
push
sbb
mov
cmp
int
dec
add
loope
test
jne
lods
add
mov
test
adc
add
and
mov
and
mov
add
push
mov
cmpsb
mov
pop
and
mov
aad
add
fsts
pop
add
mov
inc
icebp
imul
hlt
xchg
add
testl
xlat
popf
sub
and
sub
xor
call
insb
jg
pop
ficoml
mov
adc
test
pop
dec
clc
xchg
outsl
mov
xor
add
dec
aad
adc
xchg
icebp
shl
std
pop
add
push
mov
add
cmpsb
sbb
lahf
stos
mov
jmp
sub
sub
mov
or
fisubrl
jo
jno
popl
sti
inc
sbb
sbb
dec
push
mov
shlb
adc
push
shll
dec
sbb
sahf
outsb
mov
or
fisubrl
imul
ds
lds
lods
add
imul
adc
push
les
mov
add
push
cltd
add
adc
push
pop
out
out
xchg
cmp
xor
mov
add
clc
clc
mov
sbb
addb
or
xchg
xor
lods
outsb
imul
out
mov
xchg
cmpsb
or
mov
sbb
add
faddl
dec
xchg
mov
arpl
gs
cmp
add
pop
aaa
ss
add
xor
inc
loopne
dec
arpl
nop
je
maxps
int
dec
movsb
add
in
hlt
inc
mov
arpl
mov
pop
sub
jnp
mov
outsl
cmp
jmp
out
jb
or
mov
lock
push
mov
dec
add
out
lods
mov
xlat
pusha
movsb
sub
push
call
cmp
daa
ljmp
mov
xchg
cmpsb
add
jo
test
xchg
cmc
insb
sub
mov
sub
sbb
mov
add
push
add
xlat
dec
pop
or
or
xor
das
popf
movsl
xchg
les
dec
dec
lea
fs
xor
arpl
outsl
dec
sbb
sub
in
add
popa
fdivrs
mov
lcall
dec
add
inc
das
cmc
add
dec
pop
sbb
mov
call
test
jae
jb
push
les
add
push
mov
xorb
and
add
jb
pop
cwtl
je
or
lds
push
outsb
scas
mov
push
xor
ljmp
inc
dec
xchg
xor
pop
mov
sub
add
mov
repnz
inc
ror
add
mov
and
or
xor
movsl
inc
jmp
dec
jl
out
add
incb
add
xchg
lods
mov
test
flds
pop
popa
xchg
scas
xchg
add
adc
ja
nop
jno
addr16
jno
shr
aad
sub
lods
sbb
add
scas
mov
push
xchg
cmp
lcall
daa
arpl
mov
repnz
jmp
lret
add
cmp
jl
fildll
dec
ret
loopne
pop
aaa
push
rorb
mov
add
dec
aad
cld
add
inc
repz
movsb
mov
add
clc
jle
adc
stos
sub
pop
aas
and
insl
imul
cmp
hlt
out
add
dec
scas
fcom
sub
arpl
stos
test
add
ljmp
jae
adc
add
mov
sbb
outsl
lds
xchg
fistps
scas
push
mov
add
sub
and
inc
add
insb
outsb
pop
fwait
add
push
inc
cld
add
jl
xchg
sub
mov
mov
cmp
adc
add
inc
add
ret
sub
push
add
jb
add
enter
psllq
jno
add
sub
mov
add
adc
push
xchg
icebp
mov
xchg
into
aad
cltd
jle
inc
ss
cld
xchg
push
add
ja
out
sbb
inc
jp
xor
insl
push
add
add
rorb
pop
imulb
xchg
sub
adc
and
orl
rclb
or
fadds
push
xchg
add
dec
dec
je
sbb
mov
pop
leave
adc
sbb
cmp
cmp
xchg
mov
sbb
jno
mov
inc
or
add
xchg
mov
push
xchg
jl
and
inc
adc
dec
sub
mov
mov
test
iret
xorl
inc
push
jbe
std
jbe
lea
pop
dec
add
inc
add
in
mov
dec
add
mov
cmpsb
lea
sbb
stc
mov
mov
or
clc
push
sahf
push
push
sub
push
or
leave
pop
xchg
adc
add
mov
inc
add
std
repnz
add
lods
loope
push
mov
and
sahf
mov
add
dec
add
bound
add
add
add
stc
adc
pop
push
jecxz
xchg
xchg
arpl
orl
inc
pop
filds
in
ret
lret
ljmp
icebp
leave
mov
inc
in
add
pop
jo
daa
xchg
gs
add
push
nop
nop
dec
add
popa
jge
loop
das
xchg
add
in
shlb
add
pop
dec
out
repz
xchg
push
repz
jge
add
sub
pop
cmp
mov
jno
call
cli
push
loope
mov
jns
add
adc
scas
jg
cli
dec
or
pop
lret
add
aaa
mov
add
add
mov
mov
dec
lock
add
mov
mov
mov
jcxz
scas
xchg
mov
inc
out
out
add
insb
cmpsb
hlt
fiaddl
xlat
outsl
add
xor
mov
fldl
loopnew
sub
fsubrp
ljmp
add
pusha
aas
jno
jl
sar
in
mov
jg
xchg
lds
xor
clc
outsl
pop
std
xchg
fstps
xchg
repz
test
jp
adc
sarb
mov
sbb
sahf
add
shlb
out
xlat
jmp
jmp
mov
stc
loope
xor
popa
inc
push
pop
sub
add
pushf
xor
not
cld
cli
mov
jecxz
push
je
push
cltd
xchg
fisubrl
cmp
sbb
mov
jle
push
insb
test
nop
push
fildl
out
rorl
mov
adc
mov
add
sub
scas
mov
add
pop
gs
addr16
mov
dec
push
lcall
stos
inc
add
popa
jae
es
and
adc
add
sub
cmc
jp
push
adc
popw
cwtl
cmp
pop
pop
lcall
add
fists
pusha
add
jle
stos
sahf
addr16
sub
dec
mov
cmpl
add
loope
je
ljmp
mov
mov
xor
dec
xchg
stos
stc
sarb
in
add
aam
lea
ror
xchg
cli
icebp
jle
mov
movsb
sbb
mov
cmp
jle
das
scas
fwait
shrb
jo
lock
sbb
add
adc
out
xor
add
jp
lds
into
test
fs
add
shrl
or
add
xchg
xor
xchg
add
pop
push
out
arpl
add
or
insl
add
lcall
dec
add
add
insb
pop
out
cmovbe
add
cld
and
xlat
pop
add
sbb
jl
sarb
sub
fidivl
outsb
add
sbb
add
rol
cmp
mov
cmp
mov
and
daa
in
jnp
nop
bound
add
popf
pop
push
lods
scas
cmpsb
mov
sbb
int3
add
inc
cmp
add
ljmp
stos
arpl
and
mov
jo
xchg
or
mov
sub
mov
xor
mov
popa
xor
and
mov
pop
adc
inc
add
fcomp
add
mov
cmpsb
add
cld
dec
add
cmpsb
inc
scas
add
cmp
and
int
add
mov
subb
xor
and
fcoms
xchg
add
sahf
sub
cli
jg
push
sub
sarl
mov
ds
push
les
mov
decl
cmc
add
add
mov
add
out
ljmp
cmpsl
fs
mov
jmp
inc
dec
sbb
add
in
lods
xchg
push
dec
push
jg
jle
xchg
push
inc
adc
aad
cmpsl
test
fwait
out
cli
or
mov
xor
or
xor
push
inc
or
mov
cmpsl
dec
add
xlat
stc
test
sbb
add
xorl
jns
in
outsl
cmp
dec
sub
adc
mov
xchg
ljmp
iret
cmp
dec
aas
in
imul
mov
xor
insl
add
mov
xchg
add
pop
mov
add
jno
push
dec
mov
pushf
movsb
clc
mov
loope
add
cmp
lds
mov
pop
mov
inc
add
mov
push
add
add
arpl
push
pushf
outsb
dec
les
test
jb
cmp
mov
daa
shrb
orb
mov
cmpsb
sub
enter
in
xor
movsl
jmp
mov
add
jb
mov
sbb
pop
and
xor
add
dec
push
adc
nop
ss
icebp
mov
add
js
add
rorl
outsb
scas
dec
icebp
and
push
out
aad
sub
jge
sbb
rorl
adc
lahf
pop
sbb
xor
fists
ds
inc
push
jo
pop
add
add
das
pop
jg
adc
lods
lock
push
add
mov
add
xchg
add
les
add
jecxz
fwait
test
mov
ds
repz
inc
lock
leave
xchg
fwait
ja
or
pushf
out
add
add
inc
test
stos
pop
imul
fnstcw
add
xchg
ret
xlat
dec
xchg
push
lods
push
jns
ret
mov
lret
jae
push
popf
loope
or
jg
or
mov
xchg
pop
jns
xor
jle
cmpsb
dec
push
xchg
add
fdivr
add
cmp
fnstsw
adc
and
xchg
cmp
mov
addr16
movsb
jmp
jp
ja
adc
jmp
ljmp
dec
push
scas
inc
dec
cld
add
ss
test
movsl
jns
cmp
icebp
shll
inc
ss
scas
pop
xchg
mov
outsl
add
popa
push
cmp
add
dec
test
stc
icebp
lcall
insl
pop
cmc
repz
out
sub
roll
shrl
add
addb
into
xlat
popa
adc
testl
and
das
insb
insb
cmc
add
mov
mov
scas
pop
add
pop
xchg
push
int3
inc
dec
sbb
add
or
add
fldcw
sbb
add
jecxz
add
shlb
js
into
lcall
jo
xchg
shrb
push
add
or
ficoml
and
inc
add
jmp
test
idivl
or
mov
dec
mov
cmpsl
mov
add
pop
jno
movsb
pusha
nop
imul
bound
jge
mov
mov
cwtl
arpl
jne
add
or
shrb
leave
push
cmpb
push
inc
or
int3
repnz
inc
std
sbb
fildl
xchg
sbb
fimuls
dec
add
mov
test
add
add
in
roll
lcall
movsl
add
clc
add
xchg
fnstcw
jl
popa
push
pop
jecxz
in
loope
sahf
std
das
sti
push
test
outsb
movsl
cmp
pushf
pushf
cmp
aam
inc
add
fidivs
mov
imul
add
fstps
xchg
add
out
test
shll
xor
ds
xor
nop
pop
mov
and
sti
stos
stc
adc
sbb
stc
push
out
addb
stos
data16
mov
cltd
lret
jge
cmp
ret
bound
inc
xchg
std
inc
add
aam
imul
aaa
jb
mov
jg
mov
or
popa
add
into
cmp
push
dec
fnstsw
dec
inc
xchg
mov
pop
or
fimuls
pop
xchg
add
jp
add
sbbb
and
insb
pop
add
add
popa
inc
add
jb
sbb
jb
mov
xchg
loop
xor
out
sub
sbb
cld
add
pop
xor
adc
pop
filds
adc
cmp
add
scas
mov
das
aas
cmp
int
mov
jge
dec
pop
mov
test
mov
or
stos
cmp
sub
add
add
and
loop
aad
add
inc
pop
cmp
xchg
nop
lock
mov
or
xor
add
mov
push
lods
mov
addr16
int
cmp
mov
add
cmpsb
add
pop
adc
add
jmp
sbb
mov
cltd
fwait
out
negb
pop
mov
lahf
outsb
movsl
add
icebp
xchg
mov
adc
pop
mov
inc
sub
ret
rorl
inc
mov
fwait
sub
ljmp
outsb
inc
insb
scas
ja
rorb
clc
ljmp
sub
pusha
mov
stos
insb
icebp
dec
pop
cs
mov
xor
push
and
and
xor
shll
ret
arpl
add
add
cld
add
sahf
wrmsr
pop
shrl
lds
inc
test
adc
add
mov
adc
add
popl
jnp
sbb
std
jp
xchg
jecxz
adc
fstps
or
add
imul
sub
adc
orl
ds
outsl
xor
add
pusha
push
adc
mov
xchg
add
jg
lods
fcomp
iret
and
in
call
ret
lods
lods
in
mov
test
push
ret
mov
push
leave
mov
filds
add
adc
cmp
pop
jle
pop
sub
call
outsb
add
push
aaa
jno
jg
icebp
pop
jge
cmpsb
sub
sub
mov
arpl
aaa
dec
adc
addr16
in
and
mov
adcl
sarl
fs
loop
jp
add
divl
xchg
pusha
lods
add
add
xchg
mov
add
add
add
sub
add
cld
fiadds
or
outsb
pop
adcl
pop
test
inc
pusha
out
xor
push
inc
setb
push
add
mov
into
sub
int
or
outsb
sbbb
adc
jp
es
fisubrl
js
data16
add
mov
mov
in
sbb
jns
add
xchg
js
test
and
add
jg
add
pop
outsl
add
jmp
add
out
add
ja
sbb
out
bound
out
and
hlt
cmp
addb
popf
pop
icebp
orl
sbb
xchg
lahf
or
rol
pop
push
and
fdivs
pop
add
daa
add
lret
mov
cmp
xor
add
leave
push
mov
cmp
adc
hlt
ljmp
sub
and
mov
les
dec
inc
mov
ret
add
aas
dec
ret
sarl
leave
add
les
xchg
mov
cmp
cli
mov
out
cmc
hlt
sbb
inc
incb
int
movl
mov
or
inc
stos
pop
sbb
in
add
scas
mov
sub
jb
fiadds
sub
call
push
loop
and
push
ret
add
jnp
cltd
inc
fwait
testb
sub
test
mov
testb
mov
pop
and
outsb
xor
sbb
imulb
fwait
outsb
loop
adc
lea
test
push
test
inc
jmp
add
lea
test
scas
fiadds
sub
cmp
scas
jmp
or
or
jns
cmp
stos
cmp
dec
addr16
push
adc
cld
dec
add
xlat
in
inc
lods
test
xchg
in
mov
orb
fmuls
add
test
mov
add
add
out
lahf
lods
lods
movsb
dec
or
pop
mov
dec
out
or
dec
adc
push
cmc
outsb
fcom
mov
sub
mov
adc
push
adc
adc
jp
inc
je
inc
sbb
je
add
jbe
popl
adc
sarl
pushf
popa
push
cld
push
add
icebp
arpl
arpl
test
subb
mov
sahf
add
bound
cmp
outsl
loop
add
inc
es
dec
hlt
xor
jns
lods
daa
cmpsb
cmpsb
or
rol
sbbb
push
xchg
add
test
sti
gs
stos
add
or
jo
cmp
lods
push
add
int3
push
dec
insl
push
into
test
outsl
int
push
lods
sbb
sbb
jp
push
add
in
inc
xchg
loope
and
add
fcmovnbe
aas
movsl
sub
add
rorl
pop
cmpsb
lret
in
mov
add
inc
inc
dec
nop
jns
fisttpl
add
loop
add
cwtl
dec
push
sub
gs
mov
lret
jbe
insl
xor
or
mov
sbb
jge
jae
call
int3
add
mov
loop
mov
jp
ret
add
add
mov
and
inc
add
int3
leave
add
cmp
sub
fucom
cwtl
add
inc
test
lods
fists
cwtl
dec
push
rolb
jbe
inc
jno
dec
jo
ja
incl
push
int3
stos
cmpsl
lods
addr16
add
js
mov
into
in
push
lcall
outsb
add
mov
push
sbb
or
mov
xor
pop
jo
ficomps
adc
add
rorb
pop
add
add
add
pop
xchg
es
and
jge
dec
add
iret
jne
lods
imull
movsl
inc
nop
mov
lds
lds
cmp
outsb
nop
cld
faddl
adc
pop
stc
mov
in
add
add
fcom
roll
or
xchg
pop
in
into
add
fists
cltd
add
add
adc
add
popa
out
data16
loopne
les
test
aad
sbb
aad
add
dec
cmpl
xor
xor
xor
dec
or
lahf
clc
movsb
js
movsl
mov
push
jecxz
jecxz
test
mov
fnsave
test
xchg
add
cmpsl
pop
scas
mov
std
enter
jmp
xchg
add
das
data16
repnz
push
call
stos
imul
jbe
imul
fisttps
push
lds
jge
loop
les
test
sub
pushf
testb
scas
jle
in
add
cmp
adc
pusha
js
mov
nop
add
xchg
mov
gs
jmp
pop
mov
fwait
sbb
lds
sub
pop
por
sbb
add
in
cld
sub
pop
mov
add
sbb
cmpsl
mov
nop
add
lret
inc
mov
int3
movl
in
mov
inc
in
xor
out
fld
jle
sbb
mov
cmc
movsl
adc
jmp
cs
add
out
lcall
test
xor
mov
add
add
addb
daa
mov
stos
add
dec
pop
inc
xchg
scas
xor
add
add
test
mov
mov
jmp
add
xchg
pop
xor
sub
outsb
xlat
add
pop
inc
mov
sbb
aam
add
mov
ljmp
aam
pop
sbb
fnstenv
aas
mov
jmp
add
data16
fnstsw
in
dec
dec
test
pusha
inc
push
adcb
mov
daa
pop
push
add
cmp
mov
mov
test
add
adc
lret
lahf
sbb
dec
add
sub
or
add
ret
add
inc
mov
ds
dec
ret
out
gs
push
sbb
lahf
push
cmpsl
add
ror
adc
push
popf
xchg
movsb
push
add
imul
fsubrp
cmpsb
add
add
add
sbb
adc
rol
arpl
xor
sahf
sub
js
pop
mov
pop
test
int
cmp
sbb
scas
pop
pop
ja
lods
xor
ss
add
ret
mov
out
add
add
mov
adc
add
add
xor
sub
insl
arpl
mov
xor
in
mov
imul
jge
mov
cmp
add
mov
mov
inc
sbb
jmp
pop
mov
daa
pop
jne
pop
ljmp
pop
push
and
lods
int
lds
jnp
push
add
enter
fidivs
test
add
mov
mov
cli
jecxz
or
loopne
mov
mov
and
pop
add
mov
lock
fadds
mov
out
sahf
push
inc
push
shr
add
scas
mov
pop
ss
inc
adc
movl
add
aad
mov
and
push
aaa
dec
sahf
fwait
inc
aas
add
add
in
repz
inc
les
cli
test
mov
icebp
add
addl
gs
cmpsb
stc
fldenv
movsb
in
jle
or
jmp
stos
pop
pushf
fidivs
add
jg
dec
xbegin
repnz
inc
jbe
stc
popa
movsl
jne
aaa
packuswb
add
fidivrs
xchg
add
mov
add
push
add
adc
inc
pop
sub
push
xor
call
movsb
jmp
add
push
sahf
sub
xchg
jne
sbb
push
mov
call
lods
inc
inc
pop
and
push
addr16
adc
jbe
sar
dec
ret
lret
dec
cmc
mov
mov
adc
mov
dec
and
scas
xor
daa
mov
cmp
xchg
push
popa
sbb
add
stc
mov
lcall
das
add
stos
jns
and
dec
test
cmp
div
xor
add
cmp
inc
add
shl
pop
loopne
mov
mov
scas
mov
add
lods
fs
mov
divl
stos
mov
jge,pt
lahf
mov
add
add
mov
pop
mov
je
add
add
call
jae
test
dec
cmp
sahf
mov
add
mov
dec
ds
and
scas
lds
stos
jge
test
out
int3
jbe
mov
mov
pusha
dec
cwtl
add
gs
add
mov
push
icebp
and
or
pusha
out
stos
daa
xchg
pop
ret
xchg
or
outsb
incl
or
mov
pop
repz
sbb
jle
mov
add
and
ret
loop
mov
pop
rcl
sbb
stos
xchg
pop
loopne
ret
or
fwait
lods
sub
mov
ss
add
lods
ja
jecxz
sub
add
cs
mov
add
stc
hlt
adc
add
jp
imul
jmp
mov
add
add
or
sub
loopne
add
and
xchg
cmpb
sahf
sbb
add
sti
mov
xchg
movsl
gs
das
jge
xor
hlt
push
mov
xchg
adc
js
inc
pop
add
stc
jns
cwtl
add
fisttpl
insb
cmp
push
add
add
push
test
jne
cmpl
sbb
xchg
test
pop
xor
mov
and
popa
pop
inc
aaa
movsb
xor
fs
into
xor
pop
decl
fs
jno
xor
jp
xor
gs
add
daa
pop
bound
add
filds
out
int3
pushf
jno,pt
push
sbb
inc
sbb
std
cmp
push
mov
add
fcoml
push
cmpsb
ret
xchg
mov
fsubs
lahf
fsubs
hlt
adc
dec
inc
mov
test
inc
cwtl
mov
cmpsb
adc
arpl
push
inc
shll
cmp
add
xor
and
fsubrl
in
inc
subb
adc
insb
xchg
mov
mov
test
fnstsw
repz
mov
dec
sub
xorb
fiadds
and
mov
sti
pop
cmpsl
add
add
clc
push
repz
add
stc
shll
lret
add
icebp
sbb
mov
mov
ret
fcmovbe
mov
add
and
mov
das
pop
jle
icebp
or
pop
add
jmp
cli
add
out
and
mov
xchg
push
jecxz
into
test
add
pop
leave
mov
fistpl
dec
push
add
aaa
cs
sbb
or
add
push
add
pop
add
mov
or
ret
pop
nop
into
add
add
or
sub
shl
mov
and
inc
sub
sarw
pop
pop
inc
sti
push
or
sbb
mov
movb
sahf
jne
aam
cld
mov
repnz
add
repz
fld
mov
add
aas
loope
cmp
nop
or
inc
rcrb
lds
enter
fwait
test
mov
push
sbb
mov
add
lret
in
mov
aam
sub
inc
jbe
mov
stos
xchg
inc
orl
hlt
mov
adc
add
xchg
mov
add
testb
aad
and
mov
mov
stos
pop
adc
xor
test
add
add
add
sti
int3
adc
push
cmp
nop
dec
cmc
mov
lcall
ret
insl
add
je
lds
mov
push
ljmp
inc
in
inc
xor
xor
inc
rcr
rolb
imul
lods
lret
dec
fildl
lds
leave
pop
xor
shll
pop
adc
push
sub
dec
test
std
mov
mov
mov
pop
es
mov
fs
add
ds
mov
out
test
xchg
jge
mov
jae
stos
sti
repnz
loope
outsb
xor
je
mov
mov
dec
push
dec
lret
loop
fcoms
add
insl
and
mov
adc
sub
add
adc
xchg
pop
push
lcall
bound
lret
add
insb
aas
pop
xchg
adc
cmpsb
in
adc
push
dec
mov
pop
add
mov
int
mov
repz
imul
lock
add
hlt
subb
mov
cmp
filds
sub
add
dec
xor
iret
push
push
xor
lret
pop
sbb
sub
scas
cmp
addr16
push
add
push
aaa
pop
add
add
addr16
cli
insl
sub
cmp
inc
inc
and
and
or
fcompl
push
pusha
add
sub
sbb
out
mov
leave
clc
aad
dec
dec
mov
repz
dec
outsl
cmp
adc
lret
out
jno
andl
or
bound
mov
push
in
orb
mov
adc
pop
adc
insl
push
lret
mov
nop
test
aam
dec
fsts
jle
lcall
xchg
ret
jge
into
pushf
push
add
in
xchg
add
add
inc
adcl
mov
pop
testl
fwait
stos
push
fsubrs
fwait
cmp
ja
inc
add
int3
outsb
add
lods
lahf
mov
sub
enter
pushf
ret
push
test
imull
cmpl
mov
push
add
fdivrp
pop
add
sub
xchg
mov
or
hlt
adc
push
cld
insl
pop
cmp
scas
and
sub
inc
jae
aad
pop
es
mov
pop
xor
xlat
fdivrs
or
add
xor
rclb
add
mov
push
outsl
lea
sub
add
xor
outsl
xor
add
xor
clc
sarb
cmp
pop
cmpsb
cmpsl
out
jp
sub
test
and
call
pop
xchg
mov
mov
aad
popa
sti
in
lock
repnz
add
xchg
sti
mov
in
add
sub
cmpb
jnp
xchg
pop
add
add
xchg
out
and
shl
mov
xchg
add
adc
dec
fucomp
pushl
popf
mov
or
ret
inc
rolb
pop
push
sahf
add
mov
xor
ret
aaa
add
out
fldcw
add
mov
mov
adc
or
add
fs
cs
add
andb
jp
and
jmp
and
adc
mov
add
jnp
subl
add
in
cmp
loop
hlt
add
lahf
jmp
inc
jp
sub
jge
inc
cmp
test
ss
loop
dec
sub
cmp
add
inc
rcrb
mov
jge
jno
mov
add
loopne
add
std
push
mov
adc
test
mov
sub
pop
ja
add
jne
xor
int3
sub
add
or
add
pop
repnz
push
shrl
jp
add
add
cmpsl
push
out
lcall
inc
inc
jbe
push
add
and
incl
orl
cmpsl
mov
add
repz
adc
shlb
pop
les
jbe
mov
xor
dec
lods
mov
mov
or
mov
push
sub
push
popf
cmpsl
add
lods
add
add
jne
lcall
xor
mov
add
addr16
in
sbb
scas
rclb
xor
loopne
add
cs
xchg
jbe
push
cld
add
add
and
push
sub
fwait
add
jns
and
fsubrl
add
pop
jge
push
das
add
xorb
jl
xchg
mov
imul
push
mov
ljmp
cmp
add
jecxz
sbb
nop
aaa
cmp
cmp
jne
sbb
imul
aas
xchg
call
pop
pop
adc
sarl
mov
sbb
scas
enter
mov
cmpsl
jo
scas
into
mov
add
cmp
mov
out
dec
mov
push
and
andb
jns
mov
rorb
push
scas
clc
add
sbb
faddp
inc
rcr
call
std
sbb
stos
inc
push
cmpsb
add
add
or
clc
inc
hlt
add
mov
dec
aad
inc
enter
outsl
test
lock
sti
cli
out
loope
inc
or
jge
pop
inc
mov
push
xchg
push
imul
arpl
dec
lds
mov
dec
cmp
lahf
addr16
jecxz
cmp
mov
imul
inc
mov
cli
out
push
or
mov
jecxz
add
add
add
aaa
and
outsb
add
mov
jp
test
mov
mov
add
enter
addr16
into
js
out
cmp
sub
inc
dec
out
inc
push
adc
scas
push
cld
sbb
add
stos
dec
inc
mov
add
dec
mov
orl
dec
pop
je
adc
push
mov
daa
int3
mov
pop
add
call
cmp
lret
cs
mov
xchg
sbb
sti
dec
push
add
cmc
out
xchg
add
addr16
push
or
daa
sbb
ja
mov
ret
jns
arpl
shrb
mov
data16
test
add
inc
pop
add
add
aas
add
lret
push
and
jo
aam
jo
xchg
xchg
inc
add
add
add
and
mov
adc
int
cmp
inc
in
xchg
ret
adc
test
pop
clc
add
out
xor
sarl
add
lahf
add
arpl
cmp
dec
mov
add
add
fadds
in
sub
push
sbb
cld
mov
ret
and
loopne
inc
fnsave
or
sbb
push
pop
insl
ljmp
add
jae
stos
add
cwtl
dec
pop
incb
lahf
arpl
push
mov
inc
divl
icebp
mov
cmp
lock
sub
jnp
in
aam
adc
inc
pop
jecxz
add
pusha
popf
repz
mov
add
mov
lahf
jno
es
pop
outsl
lods
and
mov
dec
rolb
push
xor
add
dec
scas
push
cld
xchg
add
daa
add
xchg
add
fsts
mov
fstl
dec
or
lods
orb
xchg
mov
cmp
hlt
stc
xchg
pop
jecxz
lahf
mov
movsl
lcall
pushf
scas
xchg
lods
sbb
push
mov
push
nop
je
add
push
rcrb
pop
lds
jbe
sti
xchg
daa
iret
push
loope
cmp
xchg
fildl
or
xchg
lcall
xlat
add
rcrl
add
add
mov
stos
aas
aas
adc
pop
test
add
and
in
jmp
hlt
mov
bound
pop
test
mov
jmp
mov
test
xchg
and
jle
mull
push
jb
rclb
les
fs
add
mov
cs
sub
sbb
add
into
xchg
popf
inc
add
add
mov
jbe
mov
sub
and
jge
jnp
std
mov
adc
adc
sahf
dec
adc
and
add
sbb
jo
cld
fsubrs
outsb
cld
xchg
outsl
ror
cmp
ljmp
dec
push
mov
xchg
lahf
adc
dec
inc
sub
xchg
push
movsl
add
sub
push
adc
das
push
mov
orl
jae
lahf
fiadds
js
sub
add
push
sub
lahf
dec
mov
add
outsl
cwtl
addr16
rcll
or
call
add
xor
add
cmpb
or
lahf
adc
mov
fisubl
pusha
mov
adc
flds
aad
add
popf
pop
sbb
inc
add
and
sub
mov
jno
inc
ljmp
sbb
pop
xor
add
or
leave
push
cmp
adc
fcomps
lea
dec
repz
lock
mov
and
push
testl
fldl
pop
loopne
or
jae
add
xlat
lea
mov
pop
jno
orb
and
int
test
sbb
sbb
mov
push
popa
add
insb
fcmovnbe
add
sub
add
fldenv
inc
and
sub
pusha
or
cli
jmp
ljmp
add
mov
add
testl
sti
pop
rcll
add
imul
inc
movsb
inc
jno
push
leave
add
dec
or
add
add
add
lods
pop
and
lods
lea
push
and
pusha
add
dec
aaa
add
push
andl
shl
repz
imul
testb
stos
pop
xchg
and
mov
fiadds
mov
loopne
ret
fs
add
mov
push
adc
xor
and
sbb
add
les
lcall
cmp
add
cmp
jne
xor
repz
addl
rcrl
cmp
xchg
mov
lock
imul
add
add
mov
daa
jae
add
int3
cmp
add
xchg
jp
fldl
mov
inc
push
add
push
mov
inc
iret
add
and
push
inc
mov
xlat
cmp
add
xor
pop
pusha
loop
and
lret
mov
test
test
test
xchg
mov
rclb
loop
mov
add
cmpsl
loop
inc
fidivrl
sahf
or
std
shrb
stos
iret
subb
xor
cmp
lock
xchg
in
add
or
loop
add
jp
adc
popa
cwtl
out
add
pop
adc
xor
pop
pop
xchg
lea
add
pop
mov
rol
add
test
push
movsb
paddsb
add
mov
add
ret
mov
add
add
or
mov
jmp
test
jmp
add
and
fldl
xor
jp
xchg
in
add
jae
je
mov
mov
scas
out
mov
mov
add
test
idivl
iret
inc
or
xlat
ret
popa
pusha
and
dec
or
aas
jge
jo
jl
testb
sub
imul
add
rcrb
iret
xchg
ret
and
jo
add
inc
sbb
mov
les
in
inc
dec
mov
out
add
cmp
add
scas
out
stos
sbb
push
push
cwtl
fisubs
cltd
pop
xchg
test
cmp
cmpsl
sub
mov
lds
add
pop
shlb
daa
dec
and
and
jg
mov
mov
mov
cmp
shll
adc
vmovaps
sbb
add
testl
or
imul
add
mov
pop
out
push
mov
xor
popl
xchg
dec
out
xlat
xchg
pushf
lret
bound
adc
or
push
pusha
dec
jb
loopne
loopne
das
mov
jl
xchg
lret
je
cmpsl
mov
push
add
jle
mov
scas
fldcw
inc
nop
add
push
push
cs
cmpsl
out
movsb
jo
and
jne
mov
or
jb
add
cmpsb
or
sbb
cmpsb
cmp
xchg
hlt
addr16
add
roll
add
mov
push
fs
inc
lret
xchg
call
mov
xor
add
cmp
movsb
push
lret
sub
pop
push
dec
clc
add
push
sub
ja
rorl
add
add
int3
scas
pop
scas
lea
jo
out
xchg
loop
sub
mov
mov
inc
add
rolb
int
mov
movsl
int
xor
jge
jae
add
mov
cld
add
enter
inc
add
movl
jecxz
xchg
push
jnp
or
ja
xor
jecxz
jnp
sbb
add
push
jbe
outsl
mov
cmpsl
iret
add
mov
xchg
push
frstor
jle
lods
cmc
in
add
test
jae
orb
daa
lcall
addb
cwtl
xor
mov
dec
and
aam
mov
jae
jo
lock
inc
add
xchg
popf
add
add
fsubl
test
clc
push
add
cltd
xlat
dec
lock
add
hlt
scas
sub
test
add
ds
jecxz
inc
dec
or
mov
xor
test
scas
add
xchg
movsb
add
xor
push
pop
dec
add
into
outsb
cld
inc
psubsb
mov
add
cmp
rcll
test
out
or
jge
push
xchg
sbb
cltd
mov
or
and
add
das
in
add
ret
push
sub
test
pop
add
and
iret
lods
cli
js
cld
xor
ret
add
mov
das
add
arpl
pop
xchg
and
testb
scas
out
jb
sbb
add
push
add
add
roll
cmp
nop
movsb
pop
sub
lods
fistl
push
push
insb
add
mov
push
fcoms
ja
pop
sbb
pop
jo
sbb
pop
add
out
out
add
jp
dec
hlt
add
and
mov
in
pop
testl
xor
mov
std
mov
sub
push
dec
jge
roll
stos
jne
out
sub
sub
sub
add
push
xchg
and
fwait
pmullw
xor
cmc
les
adc
or
jecxz
xor
push
inc
gs
lds
arpl
inc
in
mov
roll
insl
cmp
mov
xor
pop
outsb
jae
into
js
fldenv
out
add
testb
jno
test
fcompl
idivl
bound
out
xchg
fsubs
pop
sbb
mov
lods
cmc
iret
sbb
das
rolb
movsl
add
add
add
dec
add
rcrl
cmc
mov
add
roll
adc
out
imul
pop
loop
mov
rorb
add
ret
xchg
add
push
push
add
xor
mov
sahf
push
mov
push
dec
and
and
mov
xchg
sbb
add
jne
xchg
add
push
jge
xlat
mov
loope
xor
fcompl
add
sahf
clc
cmp
leave
dec
add
insb
int3
pop
inc
out
ja
or
adcl
push
add
dec
xchg
clc
outsb
mov
std
cmp
in
and
mov
cmp
out
into
cwtl
in
aaa
adc
hlt
fisubrl
cmpb
dec
jg
mov
mov
push
add
pop
add
nop
in
addb
xor
std
push
scas
add
adc
mov
jmp
cli
xchg
cmp
xchg
add
adc
and
clc
cmpsl
lods
or
inc
add
mov
addb
push
mov
xchg
lret
push
jp
lods
aam
push
jb
lahf
add
icebp
add
mov
divb
dec
mov
add
mov
xlat
popa
lock
ss
dec
lods
int
push
inc
add
lret
test
jecxz
inc
pop
sub
inc
daa
or
sub
lds
pop
dec
imul
cmp
mov
cld
add
xchg
cltd
add
cmp
sub
add
cmp
int
mov
popl
dec
mov
add
inc
cwtl
fiaddl
mov
movsb
pop
incl
dec
xlat
jge
stos
jg
mov
mov
mov
mov
rorb
jecxz
mov
addb
sub
movsl
sbb
jecxz
mov
data16
add
push
test
out
pop
add
xchg
arpl
sub
test
add
into
add
iret
inc
arpl
ja
sldt
jmp
mov
mov
and
fldt
xchg
jge
cmpb
fwait
sbb
pop
push
dec
ss
add
cltd
and
or
dec
mov
add
adc
mov
add
fisttpl
jb
add
inc
inc
or
dec
jmp
addr16
mov
add
mov
cmp
fisubl
xchg
jge
mov
aad
cwtl
xchg
add
out
and
add
mov
or
add
ficomps
test
cmp
enter
in
and
add
aas
adc
aad
sbbl
cld
mov
lea
fisttpl
and
in
jle
clc
ret
push
cld
imul
lock
gs
scas
adc
sub
mov
add
mov
add
insl
push
aas
nop
es
mov
pop
xor
mov
xor
dec
outsb
mov
xchg
push
jge
lcall
inc
jbe
ret
cs
push
sub
ljmp
add
jbe
inc
mov
push
fs
jmp
loopne
push
imul
add
es
xorb
mov
mov
loope
xchg
add
out
xor
jle
push
in
dec
mov
or
fcomip
dec
dec
es
pop
sbb
inc
or
sti
lcall
mov
xor
sub
add
dec
mov
sbb
repnz
push
pop
out
mov
push
pop
xor
ret
xor
mov
dec
js
push
add
add
rclb
xor
stos
cmp
sub
lock
movsb
cmp
or
fnsave
add
aad
jnp
popl
push
imul
mov
pop
int
movsl
jle
jmp
call
arpl
or
add
into
and
rolb
jo
cmp
mov
mov
push
jb
into
in
xlat
adc
adc
aad
and
jbe
mov
test
push
cmc
add
daa
out
inc
inc
mov
imul
sbb
add
add
dec
jae
sbb
xchg
in
imul
and
adc
data16
or
mov
imull
inc
subb
add
add
xchg
push
fxsave
sub
shr
mov
adc
push
enter
adc
sub
insl
lea
xchg
sarl
pop
mov
adc
sub
pop
arpl
sbb
fs
lret
repnz
ret
andl
jo
add
fistpl
lea
int3
add
dec
and
loope
cmp
xor
jbe
mov
inc
xchg
iret
test
dec
cmp
xlat
add
pop
jge
roll
add
xchg
inc
les
xlat
negb
iret
clc
sqrtps
jmp
aam
stos
fidivl
adc
dec
add
pop
adc
hlt
xchg
hlt
repz
les
cmp
sti
mov
add
push
psubsb
mov
cld
sub
jl
xchg
mov
push
lea
pop
cmp
push
xlat
insb
stc
cmc
add
xchg
out
add
mov
inc
aad
jo
add
es
ret
sahf
clc
inc
inc
add
mov
add
xchg
xor
fcompl
pop
pop
aaa
cmpsl
push
add
mov
enter
mov
add
sbb
lret
inc
fidivrs
add
adc
and
addl
in
js
xor
add
xchg
xorl
into
add
add
sbb
popf
rclb
cmp
dec
fdivr
mov
adc
jns
jnp
popa
ret
push
add
push
pusha
pop
stc
fnstsw
cld
rolb
sbb
fstpt
add
add
or
push
add
cmp
mov
add
add
test
adc
lods
cmp
outsb
xlat
out
cltd
sub
add
add
mov
stos
inc
add
test
mov
rcrl
scas
std
cs
add
push
push
cmp
push
call
aas
adc
pushl
pusha
test
xlat
or
orl
imul
add
mov
outsb
mov
int3
insl
lret
or
mov
cld
aad
pop
jae
mov
adc
push
xor
or
add
xlat
pushf
subl
lods
xchg
fidivrs
pop
cmp
adc
add
roll
mov
lcall
push
in
addb
fmuls
in
daa
xchg
cltd
insb
imul
je
add
rcrl
ja
pop
add
add
stos
and
sbb
shlb
orl
mov
fsubs
ljmp
mov
sub
pop
iret
scas
pop
add
enter
ss
idivl
fmulp
add
or
jno
lahf
lahf
push
movsb
clc
ret
xchg
add
mov
int
add
add
mov
add
sub
push
mov
dec
add
inc
jmp
imul
pop
shrb
adc
shlb
pushf
mov
mov
loop
int3
sbb
sahf
add
ss
ss
add
cmpsb
loopne
mov
add
aam
add
inc
fildl
imul
adc
loopne
std
xchg
mov
xchg
rcr
stos
mov
dec
inc
movsb
cld
das
aaa
mov
addl
inc
outsb
cli
fwait
es
mov
mov
push
or
int
out
cmp
sbb
incl
lods
mov
sub
add
xor
xor
mov
pushf
inc
test
mov
repnz
cmp
add
add
add
adc
push
add
cmp
fsubr
imul
xor
mov
sbb
sbb
sti
mov
pop
add
and
popa
fdivs
inc
mov
jmp
scas
sub
stos
add
xchg
mov
push
xor
pop
test
push
adc
rol
popf
mov
pop
and
loope
add
ror
jle
aas
add
add
mov
or
mov
loopne
int3
out
or
shl
rcr
insl
mov
jge
leave
testl
inc
cmp
lods
sub
stos
test
add
mov
das
cmp
add
nop
sub
add
imul
pop
add
xor
adcb
in
loopne
jne
out
push
xchg
mov
orl
lahf
mov
add
add
xchg
mov
adc
inc
lahf
clc
push
add
stos
inc
add
leave
out
adc
sbb
inc
cltd
add
lret
push
loopne
jecxz
push
cmp
jmp
pop
sub
outsb
decl
gs
aaa
jbe
xor
les
mov
leave
add
cmp
add
cwtl
xchg
lods
outsb
adc
add
add
and
jbe
adc
xchg
mov
repz
test
cmp
rorb
popa
inc
push
add
in
gs
mov
pop
add
adc
and
pop
or
gs
adcl
cmpsb
mov
push
sbb
loope
mov
ret
mov
mov
and
pop
filds
mov
mov
add
xchg
add
cltd
and
popa
inc
add
roll
add
mov
add
push
sbb
mov
jnp
jo
into
leave
aad
xor
pop
dec
outsl
int3
add
add
or
lods
or
inc
insb
dec
push
leave
jmp
jge
and
lds
sbb
jl
or
add
add
push
add
inc
sbb
sub
mov
jg
out
jecxz
adc
add
sbb
and
movsl
hlt
andl
add
push
jp
add
push
dec
daa
sub
pushf
inc
inc
jmp
mov
pop
les
mov
push
test
stos
add
xchg
sub
jp
je
add
pop
imul
cltd
push
outsl
int
cmp
jnp
pop
jnp
into
push
mov
jmp
or
xor
stos
adc
mov
jns
pop
add
add
aad
mov
nop
dec
rolb
jp
mov
mov
add
stos
loope,pn
dec
outsl
adc
push
add
in
mov
inc
pop
add
sub
scas
and
call
or
cltd
inc
cmpsl
lea
cltd
add
scas
ljmp
xlat
mov
ja
sub
inc
inc
ret
negl
stc
jns
sar
add
or
mov
sbb
mov
cmp
xchg
push
inc
push
sbb
mov
fadds
push
lret
mov
imul
add
mov
rcl
or
lods
push
lock
sub
mov
lea
stos
cmp
pushl
push
jno
jle
sbb
mov
push
pop
push
popf
pop
outsb
popa
lcall
and
mov
mov
outsb
add
mov
add
bound
mov
dec
dec
adc
add
mov
in
add
into
sbb
sub
cmpsb
test
pop
out
push
add
loope
and
dec
scas
jae
scas
mov
repz
and
add
cmc
sub
add
add
xchg
rolb
pop
jmp
ljmp
jo
sbb
mov
add
dec
push
clc
add
repz
adc
shl
mov
add
mov
jns
fwait
push
int3
and
cmp
mov
inc
enter
test
pop
bound
out
sub
add
pop
stos
nop
inc
mov
sbb
je
add
add
arpl
ds
mov
adc
icebp
add
pop
shrl
lret
fwait
loop
test
and
in
aam
int3
das
xlat
mov
add
vcvtsi2ssl
xchg
pop
add
push
add
jne
cld
jg
sarb
loopne
bound
cmp
mov
cmpsb
mov
add
std
or
icebp
and
xor
mov
jno
mov
push
int
inc
and
jge
not
movsl
dec
mov
add
mov
dec
sub
test
push
or
cmc
pop
ljmp
add
stos
int
jne
lods
cmp
and
cli
sbb
jo
sub
lea
lds
mov
sbb
mov
or
cmpsl
sbb
lahf
inc
jne
cmpsl
cmpsl
add
jl
jl
pop
arpl
sub
add
jnp
pop
mov
add
cmpsl
je
ret
jge
repz
sbb
stos
mov
lods
jecxz
in
inc
lret
mov
fcmovnu
inc
lock
mov
push
ljmp
cmp
pop
adc
mov
inc
add
andb
scas
addr16
adc
xlat
stos
mov
mov
xchg
mov
push
push
fldl
or
iret
roll
jnp
mov
add
inc
cmpsb
sbb
xchg
mov
cmp
lahf
push
out
xchg
cld
add
and
mov
dec
push
mov
jnp
fistps
cmpl
cli
jo
cmpsl
xor
add
cmp
enter
add
push
mov
mov
pop
add
adc
push
cmc
fcom
add
add
shrl
pop
fldt
add
cmp
inc
movzwl
pop
and
dec
push
xchg
data16
adc
sbb
add
loop
icebp
add
adc
jnp
adc
xor
xchg
or
push
jg
inc
mov
pushf
sub
mov
adc
mov
aad
out
sub
int
roll
movsl
fadd
cmpsl
mov
test
test
mov
add
int3
inc
cmp
nop
jmp
setnp
add
jl
add
orb
rcrb
fiadds
outsl
popf
enter
and
sub
mov
cltd
fsts
clc
mov
faddl
imul
add
je
push
shll
data16
out
add
cwtl
xor
push
pop
inc
inc
loop
lds
mov
sbb
cmpsb
bnd
insb
outsb
testb
add
pop
xor
sbb
addr16
xor
aad
add
int
imul
add
pop
outsl
mov
add
sbb
xor
jmp
cmp
add
in
push
aaa
gs
xchg
test
pop
sbb
int
jb
je
adc
std
dec
xlat
push
test
les
xchg
add
xchg
fdivs
add
adc
xchg
pop
pop
mov
inc
add
pop
fnstcw
sahf
adc
add
add
arpl
cmp
push
pusha
add
push
mov
cmpsl
add
inc
xchg
sub
loop
int
add
add
dec
mov
inc
jne
imul
jbe
stos
add
pusha
bnd
mov
lock
inc
int3
lds
cmp
add
or
xchg
ja
stos
lret
sbb
and
add
dec
pop
or
into
aaa
lcall
mov
rcrw
ss
data16
sti
mov
xor
cmpsb
std
add
ss
sarb
push
aas
cmpsb
int3
icebp
into
leave
movsl
scas
dec
das
loopne
cmp
in
sarl
int
xchg
mov
mov
out
sbb
push
sub
fistl
xor
loope
js
mov
mov
add
int3
incb
fldz
add
jb
add
and
add
pop
or
fwait
adc
push
xchg
xchg
mov
xor
jno
lds
mov
call
sbb
add
fisubrs
inc
rolb
ljmp
outsb
sbb
aam
dec
into
add
daa
push
push
sub
sti
mov
push
push
in
jecxz
fsin
daa
xchg
ret
add
fstcw
cmc
cld
arpl
lret
es
push
inc
add
cmp
sahf
push
xchg
dec
add
cmp
sbb
fistps
popf
es
mov
pushf
test
mov
lods
into
and
inc
sub
movsb
add
cmp
fld
clc
fidivrl
push
add
roll
bound
add
jnp
inc
test
lcall
lods
arpl
and
lret
lock
mov
in
add
adc
xchg
test
mov
mov
divl
dec
lahf
add
and
sbb
push
rcr
imul
dec
addl
jns
mov
push
jg
mov
lret
dec
es
int
mov
sti
fisubl
add
aad
mov
pop
inc
push
aad
shrb
cmp
mov
lret
or
lods
loope
cltd
xchg
jb
adc
movsb
jo
cmp
in
and
push
and
stos
mov
add
popf
xor
arpl
ret
and
in
jle
insl
popa
les
add
add
add
pop
lea
jnp
sbb
ret
shll
add
add
cmpsb
jne
fisubrl
xor
xchg
push
test
or
add
add
fs
sbb
scas
shl
mov
popa
leave
xor
xor
aas
mov
in
clc
mov
ror
stos
xchg
add
in
add
add
mov
mov
je
loop
cs
je
push
arpl
add
add
sti
sbb
mov
scas
pop
adc
push
add
lea
adc
sbb
push
or
scas
out
push
pushf
mov
add
ret
ja
or
cwtl
push
xor
hlt
movsl
outsl
gs
sbb
jne
mov
daa
mov
in
xchg
xor
repnz
jl
mov
loop
or
int3
xorb
popl
mov
xlat
pop
das
in
sub
push
outsl
fwait
shrb
rsqrtps
add
pop
pop
negb
push
cld
shlb
mov
inc
stos
lods
sub
jnp
loope
lods
scas
das
outsl
add
pop
stc
rolb
jecxz
cmpsl
add
xor
and
lret
sti
out
mov
cli
add
and
pop
cmpsl
xchg
jge
mov
insl
in
add
lea
pop
shlb
push
stos
add
in
sub
cmp
test
add
sahf
jp
cli
enter
xchg
clc
mov
jno
jmp
pop
addr16
or
clc
add
pop
inc
xor
or
mov
xchg
add
and
pusha
in
push
adc
sbb
loop
jne
add
xor
adc
push
add
sbb
mov
loope
sub
mov
or
dec
aam
test
adc
sub
loope
xchg
sub
fdiv
adc
and
add
clc
in
mov
andl
sbb
notl
add
test
jo
xor
out
shll
cmp
lret
scas
pop
mov
bndstx
mov
inc
push
cmc
xor
lods
out
mov
pop
add
in
in
push
pop
lret
adc
and
and
jmp
js
stos
sub
dec
mov
movsl
cmp
xor
or
add
or
inc
inc
stos
cmpsl
lock
in
insl
jecxz
aad
adc
cmp
dec
sbb
leave
lock
adc
imul
dec
popf
dec
cs
dec
fsubl
daa
dec
pop
mov
stos
mov
lods
xchg
ret
push
cmp
add
add
push
call
mov
add
adc
inc
int3
pop
push
sbb
add
test
fisttpll
into
sbb
add
or
in
xor
shr
adc
add
or
aaa
loop
divl
inc
add
sbb
inc
andb
loop
or
push
xchg
loop
dec
fs
fmulp
int3
jne
inc
inc
leave
jns
mov
xchg
in
add
lea
add
loopne
mov
mov
add
push
sbb
and
std
lret
jecxz
movb
mov
bound
mov
cmc
movb
jnp
pop
popa
sub
lret
scas
shl
mov
sarb
divl
test
add
dec
and
cmpsb
ljmp
pop
inc
arpl
lock
xlat
xchg
xor
pop
and
add
add
call
ror
lret
mov
test
add
scas
in
add
pop
xor
jb
jne
fidivl
popa
fcoml
add
in
add
repz
sbb
stos
pop
scas
pop
ss
mov
sbb
frndint
stos
sahf
push
sbb
or
mov
imul
sysenter
leave
adc
xor
lock
hlt
ljmp
pusha
out
inc
js
sbb
adc
ret
popa
mov
rolb
dec
out
outsl
add
pop
cmp
test
add
mov
mov
fiaddl
xchg
mov
add
inc
out
sbb
jno
lock
repnz
aad
in
test
into
arpl
mov
add
fcompl
in
repnz
shl
into
int3
dec
aas
cmp
jp
mov
notb
add
xor
pop
add
popf
adc
pop
inc
add
mov
into
scas
psrad
sbb
and
push
mov
xor
ret
not
xchg
in
mov
add
daa
pop
add
int
or
cmc
push
mov
div
lahf
dec
adc
aaa
add
jmp
inc
add
and
inc
subb
subb
add
or
xor
add
je
adc
sahf
into
cwtl
xor
cmp
xchg
or
lcall
cld
outsl
shrb
or
fs
fs
push
ds
movsb
bound
mov
push
mov
das
loopne
mov
jns
inc
lods
rcr
add
xchg
adc
popf
xor
cmp
popa
cs
sub
and
pop
fwait
jge
add
scas
ja
insb
adc
xlat
sbb
aaa
rolb
jge
jns
adc
push
sub
in
or
imul
jmp
and
lds
popa
inc
sbb
out
add
add
push
xchg
stc
push
jns
inc
dec
fcoml
push
dec
dec
mov
sub
into
add
add
dec
cs
xchg
scas
and
inc
mov
push
mov
cld
mov
add
adc
popf
cli
clc
je
jne
pop
inc
test
test
mull
daa
vpgatherdd
ret
nop
jmp
push
sbb
lret
daa
call
in
inc
gs
inc
jnp
push
ftst
and
and
dec
rolb
adc
cmp
xchg
add
hlt
lods
std
dec
repnz
rolb
jnp
sub
addb
add
sarl
and
in
scas
xor
dec
je
mov
jno
lret
mov
or
pop
sub
outsb
mov
clc
ret
mov
cmp
gs
cmpsl
mov
jmp
add
add
jae
mov
dec
cmp
push
nop
jmp
add
or
jo
insl
sbb
add
jg
mov
stc
imul
out
insb
imul
lea
in
dec
add
xor
xchg
test
xchg
push
mov
adc
xchg
adc
decb
lds
add
jge
lods
fadd
in
xor
push
mov
fildl
vmread
shll
mov
jecxz
addr16
xor
mov
jae
es
add
call
rclb
orb
sbbb
and
insl
stc
subl
stos
xchg
sub
addl
dec
sub
bound
sbb
or
add
arpl
sti
repnz
add
in
sbb
jle
mov
cmp
and
xor
es
mov
add
or
add
sub
pop
hlt
dec
add
loope
cwtl
sti
inc
cmp
cmp
rorb
add
mov
or
mov
pop
decl
add
stos
xchg
adc
xchg
jp
test
jmp
mov
les
add
out
enter
lds
xchg
aad
inc
sbb
xchg
clc
mov
add
add
add
adc
add
jp
test
sbb
pop
je
out
test
and
lods
mov
mov
cli
ljmp
lcall
call
adc
sub
add
out
aam
add
ds
mov
add
cltd
stc
cmpl
inc
popf
push
jnp
sbb
sbb
jecxz
sbbl
add
add
cmp
pushf
popa
xor
notb
fstpt
cmp
hlt
add
popf
scas
lahf
pop
popf
mov
jg
pusha
pop
xchg
aas
fs
cmp
dec
scas
sbb
add
push
sbb
pop
cmp
mov
scas
roll
lods
lret
sbb
hlt
dec
addr16
mov
insl
jge
in
add
ds
lcall
mov
sub
outsb
and
aam
mov
add
pop
lods
cwtl
cld
push
das
addr16
sub
cmp
add
nop
std
test
xor
mov
xchg
xchg
jns
cmc
mov
add
orb
pop
aas
cmp
mov
adc
add
pushf
std
jb
lock
sub
inc
inc
xchg
xor
add
and
loope
pop
or
ror
cmp
add
pushf
je
push
add
testl
pop
inc
fisubrs
lret
pop
ja
adc
mov
adc
mov
loop
push
fs
out
fstl
mov
xchg
add
test
mov
add
stc
add
pop
jno
fidivrl
sub
add
repnz
into
and
mov
lock
push
jns
jg
mov
jmp
adc
cmp
sahf
outsb
ret
jo
pop
in
loop
clc
mov
or
xor
push
lock
mov
dec
addl
outsl
mov
les
nop
adcl
add
shlb
add
fbld
xor
loopne
icebp
outsl
pop
mov
movsb
sbb
outsl
fiaddl
rcrl
sub
pusha
add
data16
aam
add
es
fldl
in
sub
mov
add
fidivs
sti
xor
mov
add
jecxz
pusha
jbe
add
sub
insb
ja
cmp
stc
pop
xchg
pop
cmpsl
push
inc
addl
pop
sbb
cmc
sub
inc
out
mov
cmp
aad
rcrl
out
add
push
mov
inc
movl
in
dec
sti
xchg
push
mov
add
mov
gs
das
mov
inc
and
addb
pusha
push
shl
out
inc
jg
xchg
mov
dec
or
mov
xchg
jno
inc
add
add
xchg
xor
mov
scas
outsb
jbe
aaa
js
mov
add
fs
adc
mov
icebp
mov
xchg
add
movsb
pusha
jmp
and
lea
aam
add
adc
mov
test
loopne
dec
mov
fnstsw
addr16
xlat
or
imul
push
es
jecxz
pop
dec
fildl
and
stos
add
aaa
incb
mov
les
lahf
push
fs
dec
add
fmuls
add
test
inc
aaa
movlps
add
pop
jnp
cltd
xor
pop
add
ficoml
incl
ret
movl
rolb
int
mov
popf
push
adc
xchg
jbe
hlt
fwait
cmp
xor
add
scas
adcl
jg
test
pop
imul
jo
and
out
xchg
push
cmp
adc
inc
jmp
mov
add
pop
insl
add
sub
xor
pop
add
add
mov
outsb
lret
rolb
xchg
pop
jp
lods
lds
movl
lds
xor
cs
or
fdivrl
cmp
add
in
add
add
add
pop
mov
xor
in
xchg
stos
loopne
add
sahf
stos
push
sub
mov
add
popf
ss
es
scas
addr16
and
fwait
add
in
pop
xchg
push
pushf
xor
shl
add
inc
test
mov
sbb
mov
xchg
test
sub
in
add
sub
add
cwtl
pop
gs
in
add
pop
add
std
xchg
adc
shl
test
icebp
lret
jne
mov
mov
pusha
jbe
add
mov
jg
mov
add
mov
cmp
adc
add
mov
jmp
push
lea
outsl
pop
cmp
ja
or
add
je
or
dec
hlt
jo
or
inc
paddusb
sbbl
addb
inc
inc
mov
in
add
jae
les
nop
imul
cmpsb
or
cli
pop
mov
out
mov
mov
mov
mov
mov
add
add
xchg
xor
test
rolb
daa
int
mov
mov
imul
fs
add
out
icebp
outsb
std
cli
sbb
mov
sbb
fucomi
add
sbb
add
mov
jmp
setne
and
add
shrb
sub
les
stos
jle
add
push
sahf
repnz
dec
add
loopne
lret
out
dec
cltd
mov
imul
cmp
orl
push
daa
flds
std
cld
dec
mov
jmp
dec
inc
cmpsw
add
shlb
sbb
xchg
cmc
test
and
pop
and
dec
insl
repnz
mov
adc
bound
push
push
mov
push
mov
sbb
push
dec
jl
dec
shlb
add
dec
in
out
mov
dec
sub
xlat
movsl
xchg
jmp
jge
and
jns
clc
add
jp
add
add
jnp
add
sub
nop
test
jl
adc
mov
jae
pop
in
push
add
jns
test
sahf
lods
xlat
xlat
xorl
repnz
xor
xor
mov
in
inc
les
jle
ss
js
lret
add
ret
insb
aas
in
scas
cmp
add
test
add
fimuls
or
add
dec
jge
add
or
scas
neg
xchg
push
add
int
add
dec
pop
add
stos
stc
push
push
add
lahf
cmpsl
incw
jg
sub
lods
mov
mov
push
adc
mov
int
lock
fs
imul
add
pop
dec
adc
mov
nop
pop
pop
insb
popa
jnp
icebp
add
mov
test
dec
mov
push
fldt
repz
inc
jns
add
std
push
or
pop
cmp
in
inc
leave
xor
and
test
mov
aaa
sub
std
insb
aas
xchg
repz
rolb
sbb
dec
aam
add
inc
bnd
jmp
inc
add
jbe
bnd
push
xchg
mov
shrl
mov
pusha
xor
cli
add
sbb
mov
push
push
gs
adc
fwait
jg
mov
jnp
stos
rorl
dec
sub
pop
pop
cmp
scas
xchg
imul
pop
xor
xchg
pop
insl
xor
push
pop
sahf
inc
icebp
and
dec
jae
std
movsb
cmp
ljmp
jl
add
in
js
je
pop
xchg
adc
movsl
pop
add
lods
add
xor
mov
movsb
mov
add
mov
add
ljmp
cmpsl
add
add
ja
arpl
add
pop
cmp
xchg
cli
lea
jmp
fcmovnbe
push
add
and
and
movsl
adc
inc
mov
xor
scas
add
mov
add
cmc
test
not
mov
and
cmpsl
add
rclb
cli
xchg
xchg
mov
es
mov
add
sti
add
jle
xchg
add
arpl
arpl
movsl
cmp
add
arpl
inc
sub
movsb
nop
movsb
sahf
inc
pop
les
add
mov
repnz
xchg
cwtl
aaa
add
mov
jo
add
shll
jnp
stos
add
sbb
add
into
sbb
nop
repz
xchg
testl
aam
dec
cmp
stos
ds
dec
dec
lea
in
in
sub
push
xchg
das
sub
mov
add
ret
repz
mov
add
push
aaa
in
out
inc
lods
cwtl
xor
xchg
xchg
lahf
and
rorb
jge
mov
xchg
lret
mov
add
sbb
pushf
out
mov
push
push
lods
add
sub
add
fsubl
and
int3
push
fildll
and
pop
aam
fcmovb
sahf
xor
lcall
loopne
divb
test
xchg
std
in
push
icebp
dec
fisubrl
inc
inc
cmp
lods
jbe
sub
dec
addb
or
add
rcll
inc
or
mov
jnp
mov
sbb
sub
sub
push
imul
out
movl
mov
xchg
mov
dec
add
hlt
movsl
movups
pop
mov
add
jo
stos
jp
pop
cbtw
or
popf
add
inc
hlt
sbb
mov
ret
pop
nop
jb
testb
add
andb
jmp
out
add
in
or
sbb
xor
push
add
adc
test
dec
add
dec
push
add
sub
arpl
arpl
pop
shll
fs
sbb
push
mov
test
and
addr16
jns
xor
mov
jmp
insl
cmp
mov
sub
mov
jbe
jno
fsubr
and
add
add
and
iret
add
cmp
mov
cmp
adc
add
scas
loope
add
push
add
popl
dec
and
hlt
icebp
sahf
and
add
dec
fwait
out
add
sti
inc
inc
ret
faddl
in
add
dec
cmp
add
bound
repz
rorb
cld
mov
push
rolb
xchg
and
jns
sbb
std
dec
or
add
dec
push
push
sbb
dec
add
push
add
or
hlt
aam
xor
leave
xchg
inc
jmp
fs
add
or
add
or
add
adc
xor
test
xchg
mov
add
adc
sub
add
ljmp
xor
add
cmp
ljmp
inc
lods
add
ljmp
pop
jecxz
in
add
arpl
add
sbb
pushf
inc
jmp
add
in
js
xor
xchg
adc
pop
mov
jo
mov
jmp
add
add
js
xor
or
jge
xor
fldcw
loopne
add
loop
add
jl
inc
stos
mov
lods
fs
add
push
add
lods
call
add
roll
loop
les
add
and
clc
pop
sbb
xor
cmp
subb
add
loopne
push
xor
jmp
dec
sbb
add
adc
add
or
xchg
roll
jbe
out
ret
cs
pop
dec
in
add
cmp
flds
xor
scas
mov
add
out
data16
add
addl
sbb
push
aaa
shlb
cwtl
sbb
movsb
adc
add
mov
lret
sbb
add
add
add
xchg
repz
loope
in
jno
lock
pop
add
dec
cmc
fwait
mov
mov
aad
and
pop
imul
inc
mov
fistpl
and
rol
add
cld
dec
cmp
les
jns
adc
mov
sbb
adc
and
clc
inc
jl
jae
or
out
dec
int3
cmp
xchg
or
mov
addl
cmp
daa
mov
add
ss
bound
mov
lret
inc
push
in
popa
popf
add
sub
sub
mov
subb
add
sbb
ljmp
outsl
add
sub
mov
adc
call
mov
add
sub
lcall
mov
cltd
xchg
in
jnp
mov
add
jae
push
fcoml
scas
int3
or
cltd
scas
mov
cmc
push
das
jle
cmpl
pop
add
xchg
lahf
in
dec
insl
arpl
jbe
or
aas
pop
fistpl
add
inc
fiadds
add
dec
jmp
push
add
pinsrw
divb
pop
popf
mov
iret
or
icebp
push
scas
ret
add
pop
cmp
xchg
or
das
mov
mov
add
mov
mov
and
shll
aam
jmp
jb
cmp
adc
push
push
adc
mov
sub
push
dec
jns
outsb
mov
pop
add
clc
push
xchg
xchg
xchg
add
add
xor
shrb
popa
addr16
jno
hlt
pop
jo
aad
add
jp
and
cmpsb
and
sti
add
add
push
jge
add
sbb
push
mov
shl
cmpsl
mov
jecxz
cli
cmc
or
cmp
gs
es
fisubl
jbe
scas
mov
push
sbb
jp
mov
add
xor
add
mov
push
add
add
push
jg
movb
add
add
jb
inc
add
loop
add
jnp
add
or
mov
mov
icebp
ret
xor
test
into
nop
sbb
addr16
data16
or
push
mov
dec
xor
pop
out
push
rcrl
jecxz
xor
mov
flds
flds
rorl
cltd
add
in
out
pop
sub
fsubrs
or
mov
je
aaa
add
add
xchg
and
mov
and
add
sub
in
mov
jno
push
das
ljmp
sub
jle
ljmp
sbb
xor
testl
sbb
sbb
mov
xor
jl
jns,pt
xor
nop
aas
push
and
negl
sbb
add
add
les
clc
es
test
fiadds
mov
add
hlt
or
sbb
pop
push
inc
imul
add
push
enter
mov
repnz
mov
js
call
inc
push
mov
add
and
ljmp
push
add
std
loopne
add
xchg
mov
push
xor
mov
mov
repnz
and
cmp
imul
inc
cmp
sbb
push
push
pusha
aas
into
add
pushf
add
add
xchg
and
sbb
shl
cmc
add
jo
fists
lods
dec
pusha
dec
jmp
add
mov
lret
cld
mov
jns
repz
mov
mov
pop
xchg
fidivs
imul
test
bound
xor
iret
ja
push
test
push
mov
adc
adc
push
mov
jno
ljmp
lods
sahf
subb
adc
cs
mov
scas
jo
xor
pop
negl
les
mov
xchg
cmpsb
pusha
lds
ljmp
mov
pop
add
mov
mov
por
ss
add
add
fs
jp
lahf
loope
inc
ljmp
stos
fbstp
scas
inc
lock
mov
aas
mov
adc
mov
mov
sub
stc
jg
add
stos
cli
xor
add
push
addr16
dec
lock
jg
add
jge
inc
ds
push
ret
cmp
nop
mov
jae
repnz
jecxz
dec
inc
test
mov
inc
fs
xor
push
jb
mov
into
test
add
mov
loope,pn
fidivrl
mov
shlb
ss
add
loope
xchg
int
add
add
add
dec
add
dec
jno
mov
jge
inc
out
jo
mov
sbb
mov
lcall
add
inc
jmp
icebp
add
js
out
in
cmpsl
and
mov
scas
iret
cmpsb
mov
mov
push
add
into
in
mov
mov
adc
add
xchg
jg
cmp
ffree
sti
cwtl
sub
xor
add
call
clc
sar
data16
add
add
idivl
cmpsl
add
xor
cwtl
inc
jp
xor
lea
or
jnp
add
push
ds
cltd
mov
sub
and
test
mov
dec
leave
sbb
jmp
sti
dec
shl
movsl
push
das
orl
testb
fbld
mov
add
lret
stc
test
shlb
nop
sti
add
adc
adc
out
test
fsubl
stc
sub
dec
add
sbbb
jecxz
add
cltd
pop
add
pop
sub
imul
sti
popa
add
arpl
mov
mov
sub
inc
push
and
sbb
mov
dec
add
add
stos
add
add
add
loope
hlt
js
hlt
scas
xchg
in
nop
jecxz
xchg
pop
xor
inc
movsb
mov
push
adc
fwait
lock
lret
imul
adc
mov
dec
filds
adc
mov
adc
aas
and
movsl
xlat
add
ja
add
fildll
out
add
icebp
rcrl
add
out
int
es
xchg
add
add
mov
loopne
rcl
add
add
or
mov
add
push
and
cmc
jl
mov
or
movsl
adc
rdmsr
out
scas
mov
fdivs
cmp
adcl
jmp
or
fdivrl
dec
xchg
push
popa
stos
sbb
loopne
aaa
add
lret
mov
repnz
mov
cs
mov
push
icebp
adc
adc
push
and
pop
lds
lret
test
pop
in
insl
add
ljmp
call
clc
jns
jne
je
add
in
dec
repz
mov
or
mov
das
xchg
aam
rolb
mov
inc
insl
std
lea
nop
pop
pop
dec
cmpsb
jmp
iret
add
lods
add
sub
jne
jbe
cmp
mov
movsb
cs
popf
push
push
loopne
push
add
jb
xchg
add
jmp
sbb
sub
faddl
popa
inc
add
cmpb
fs
pop
pop
push
rorb
xor
popf
cmpsb
enter
add
add
mov
aas
mov
add
mov
add
das
xchg
lods
or
push
movsl
xchg
and
jbe
movsb
pusha
add
mov
add
das
aas
shrl
add
cmp
repz
jg
out
and
mov
and
sbb
pop
sarl
pop
inc
pop
add
jnp
xchg
adc
shr
add
stos
push
xor
sub
add
or
add
imul
or
cmp
xor
add
adcb
pop
scas
dec
imul
cld
add
sarb
shlb
fsubrl
push
cmp
jo
inc
dec
sbbb
cmpl
and
mov
push
sbb
jp
inc
cmp
ja,pt
and
xchg
ror
add
add
add
push
shrl
mov
add
push
jmp
push
outsl
sbb
addr16
sub
xor
js
lret
add
movsb
add
xchg
add
adc
cwtl
jg
into
and
or
repnz
add
or
add
cmc
test
jbe
jl
loopne
sbb
adc
mov
add
mov
pop
lret
mov
push
mov
cli
add
aad
clc
sub
add
test
push
add
clc
cmpsl
xchg
fistpll
movq
sub
stc
cld
stos
xchg
add
add
jb
aad
fisttpl
arpl
add
iret
loopne
add
es
stos
ficoml
lret
and
dec
cli
sbb
and
mov
lcall
stos
mov
push
add
add
sbb
sbb
lahf
add
mov
mov
imul
loope
into
divb
dec
mov
shll
ror
pop
js
lock
pusha
pop
pop
pop
arpl
js
pushf
xor
cwtl
push
rolb
cmp
stos
xchg
cld
add
icebp
inc
sub
jno
add
je
pop
mov
je
dec
dec
into
es
push
add
aam
jbe
test
cmp
mov
icebp
lahf
push
push
push
lret
sbb
pop
bound
sbb
in
shll
push
sbb
xor
out
pop
rcrl
adc
fdivs
dec
pusha
cmp
pop
mov
fwait
mov
jne
cmp
dec
cmpsl
add
add
mov
xchg
cmp
loop
jl
pop
cmp
cwtl
shr
lds
or
pusha
jae
cmp
mull
push
neg
in
movsl
std
add
lods
push
add
push
adc
mov
aas
sti
les
faddl
pop
fs
repz
inc
sub
in
pop
add
push
ret
fistl
lcall
and
call
out
mov
jge
adc
data16
ds
cli
sarl
pushf
adc
mov
jle
or
or
or
iret
inc
mov
in
mov
data16
jecxz
ss
orl
scas
bound
lods
fnstsw
call
jbe
mov
pushf
data16
ja
jle
test
add
popa
enter
cmp
mov
ss
sbb
shrl
pop
testl
imul
mov
add
pop
leave
pop
adc
out
add
roll
movsb
popa
lret
scas
test
arpl
dec
cltd
or
cmp
inc
inc
add
jmp
and
jae
or
popl
fldenv
mov
repnz
cmp
js
xchg
in
mov
das
cld
inc
and
dec
mov
push
jge
jbe
ljmp
dec
add
pop
mov
aam
sbb
push
pop
int3
adc
cmpsl
and
push
inc
push
test
lods
cmpsl
lods
subl
pop
shrl
pop
loop
ret
aam
aas
add
out
mov
or
pop
inc
sub
pop
add
dec
xor
ds
xor
hlt
xchg
add
sub
push
inc
jae
sbb
into
add
fistpl
pop
push
insb
clc
rcr
mov
enter
insb
scas
shll
xchg
xor
cmovbe
pusha
addr16
dec
or
cmc
dec
inc
inc
pop
sub
testb
xlat
jmp
add
add
mov
jl
mov
fsubrp
or
loope
ja
iret
roll
fdivrs
mov
push
orb
shlb
rorl
add
leave
dec
inc
push
add
add
sub
inc
jge
lret
scas
jmp
mov
and
jne
add
imul
sbb
test
and
add
mov
mov
nop
mov
push
add
repz
sbb
mov
add
dec
jae
cmpsl
or
lods
pop
std
std
lds
lret
add
aaa
icebp
hlt
xchg
leave
add
mov
add
sbb
lahf
popf
add
lahf
push
dec
add
out
mov
add
test
push
jb
in
les
testl
sbb
faddp
cmp
mov
lret
enter
lods
in
xor
dec
mov
add
xchg
daa
daa
cmp
imul
in
shll
add
pop
test
loopne
push
inc
test
fnstsw
fcom
fwait
sub
jne
out
pop
mov
sbb
sbb
xor
jecxz
inc
scas
xor
imul
jp
sub
adc
fwait
jns
push
pushf
mov
vpsraw
lock
xchg
and
add
callw
lcall
repz
mov
add
add
divb
pushf
ljmp
popa
in
add
pop
and
or
sub
in
mov
jo
dec
push
leave
mov
mov
add
pop
dec
cld
dec
add
mov
insl
cmp
data16
dec
addr16
and
int
loope
mov
add
inc
dec
or
ja
xchg
add
add
inc
inc
mov
outsb
mov
test
mov
or
loope
adc
roll
leave
push
insl
arpl
add
add
add
dec
inc
sub
pop
popf
incl
mov
add
add
mov
mov
inc
std
cmp
mov
add
cwtl
ss
lea
std
add
pop
or
inc
ret
add
jnp
leave
add
inc
data16
sbb
add
jmp
push
xorb
sub
jecxz
scas
clc
xchg
jbe
popl
sbb
jl
sub
inc
xor
add
in
sub
pop
inc
or
cmp
out
add
inc
aad
subb
add
add
xchg
aad
movsb
idivl
cltd
int
jmp
xchg
ja
mov
sbb
ds
inc
loop
push
dec
jbe
pop
lcall
movsl
ret
dec
nop
in
sbb
inc
fidivl
shll
pop
lea
cwtl
cmp
or
mov
addr16
hlt
aas
add
out
dec
rolb
inc
cmpsb
sbb
sub
inc
or
rolb
pop
add
xor
daa
js
les
stos
lret
inc
loop
repz
add
es
xchg
add
cmpsl
je
outsl
mov
jne
test
mov
fcompl
mov
add
push
test
and
mov
ds
inc
add
les
add
xor
jmp
loope
push
and
or
imul
jne
sub
negb
jg
test
mov
in
pushf
sbb
xchg
fsubs
ret
cli
xor
lret
shlb
int3
xchg
lea
sbb
sti
add
lret
ds
gs
test
mov
push
fldenv
repz
repz
rorb
sub
pop
negl
jecxz
mov
add
cmc
pop
iret
hlt
add
inc
sbb
add
in
es
in
ret
popf
hlt
fdivr
ret
cmovo
cltd
inc
push
not
nop
addb
lods
inc
push
insb
aaa
add
or
push
mov
sbb
mov
add
push
add
add
add
cmp
xlat
movl
stos
fstl
add
out
test
sbb
xchg
mov
mov
mov
or
xor
rolb
push
or
sbb
out
in
jns
jae
add
sbb
mov
sbb
jae
pop
cs
std
sub
add
in
dec
mov
popa
cwtl
in
imul
roll
lret
adc
or
or
aaa
add
mov
pop
xor
dec
out
ja
stos
inc
nop
xor
aas
xor
movl
xor
flds
movsb
out
scas
pop
push
bound
enter
push
aaa
mov
sbb
stc
and
dec
pop
xchg
mov
popf
mov
jg
add
adc
cltd
push
ss
push
fwait
pop
pop
fildll
ljmp
push
xor
jle
mov
sub
pop
push
lahf
sub
cmp
push
jbe
enter
push
lods
add
cmp
dec
fldenv
andb
shlb
mov
hlt
out
jo
call
leave
and
bound
into
sub
rcrl
add
inc
pushf
xchg
adc
and
xchg
dec
cmp
sub
pop
inc
xorb
repnz
add
fdivr
roll
push
fiaddl
mov
mov
cmp
rorb
pop
insb
add
xor
cmpsb
rcl
mov
ljmp
adc
inc
push
inc
dec
lock
jbe
scas
mov
cmp
andnps
cld
add
mov
sbb
mov
daa
add
roll
add
pop
dec
sbb
or
xchg
xor
out
stos
lods
mov
std
hlt
cli
sub
outsl
adc
nop
cmp
add
sbb
pop
addr16
fists
cmc
or
popa
dec
add
and
add
cmp
loop
inc
or
test
aam
xor
xchg
movsb
add
lret
add
adc
aas
jbe
fadd
dec
popf
nop
add
jmp
arpl
adc
scas
cmp
cmc
dec
push
dec
xor
mov
into
sub
mov
push
cwtl
loope
popf
add
popa
in
sub
add
add
xlat
test
call
mov
test
out
mov
cwtl
xchg
movsb
add
inc
add
or
mov
jl
sarl
mov
pushf
sub
mov
mov
push
daa
push
xchg
add
add
sahf
add
add
test
sbb
add
add
sub
dec
fldl
mov
fidivrs
inc
lds
rol
dec
sub
cltd
pop
add
pop
sahf
jp
fwait
add
shll
in
or
mov
arpl
fcmovu
fsubrp
sub
mov
push
or
add
push
mov
add
dec
pop
push
and
arpl
add
inc
push
mov
jecxz
add
add
ja
gs
mov
pop
add
test
repnz
push
jno
dec
dec
fldcw
add
mov
add
xchg
xlat
cmp
lods
add
adc
shlb
add
dec
jg
stos
add
cmp
xchg
add
xchg
aas
jle
hlt
int3
mov
gs
addl
in
rolb
aad
dec
mov
popf
imulb
add
mov
xchg
jecxz
mov
imul
push
clc
xor
mov
cmpsb
push
jno
add
add
fucom
add
add
mov
js
mov
es
mov
out
inc
int
jecxz
es
dec
xchg
adc
test
pop
dec
add
lods
testl
xchg
lcall
jp
jg
adc
add
mov
cs
or
inc
pop
adc
jae
push
rcr
sbb
xchg
dec
mov
sub
adc
fcomi
in
mov
add
outsl
add
jecxz
rcrb
or
rcrl
js
mov
add
gs
mov
push
lock
lret
jge
dec
cltd
adc
add
adc
daa
pusha
mov
ja
into
sbb
into
fdivrp
lcall
lret
stos
mov
lahf
add
push
mov
xchg
lcall
arpl
fwait
add
jle
ljmp
sub
pop
add
sahf
pop
fldenv
mov
cmp
lds
sub
push
pop
pop
mov
xchg
mov
lds
daa
mov
and
dec
lods
jp
rolb
push
mov
cltd
es
add
mov
cmp
filds
dec
jo
mov
sbb
popa
push
outsb
push
mov
dec
mov
int
sub
add
add
add
add
sub
dec
lldt
ret
jno
cli
push
mov
push
xor
mov
mov
outsb
push
xor
loopne
sbb
pop
ret
insb
fildl
std
lock
cs
jae
lret
into
add
dec
add
push
add
add
mov
iret
mov
sub
add
fiadds
mov
sti
add
xor
xchg
push
icebp
add
and
cld
add
mov
lret
or
outsb
add
cmp
xchg
jns
jp
lds
add
add
or
add
mov
js
xor
xchg
pop
rolb
enter
clc
jns
icebp
mov
pop
push
rcrl
mov
dec
inc
aad
push
lock
xchg
fldcw
xchg
cld
xchg
sub
add
inc
gs
nop
add
xchg
sbb
fs
cmp
mov
xor
test
xor
pusha
dec
cmp
add
loope
sbb
test
inc
in
loopne
push
pusha
cmp
xor
mov
jge
dec
loop
stos
sti
stc
sub
xlat
push
mov
push
testl
popl
push
xchg
adc
push
lea
push
lea
mov
add
jge
jo
cmp
jb
push
mov
cmp
inc
bound
sub
xorl
mov
mov
lret
add
and
gs
dec
and
mov
shl
das
popf
ss
pop
popa
add
inc
daa
leave
mov
lcall
push
add
scas
jb
add
int
jbe
jno
dec
test
jge
xchg
aad
loope
dec
xor
in
fcoms
clc
cmp
adc
adc
sbb
add
movsb
gs
pushf
lahf
dec
cltd
jb
cmp
xchg
mov
pusha
adc
xchg
sub
xchg
icebp
push
inc
in
push
iret
popf
std
jle
push
fadds
xor
xchg
push
add
mov
or
push
mov
pop
lcall
int
ficompl
xchg
add
add
mov
xchg
das
or
call
nop
mov
lock
fidivs
or
cmp
cmpsb
aas
jne
jecxz
arpl
mull
int
test
adc
add
add
adc
sbb
fs
dec
arpl
adc
or
mov
add
add
arpl
mov
imul
into
mov
add
pop
int
add
mov
jmp
add
mov
mov
mov
or
ds
xor
incl
mov
scas
fwait
int3
mov
loop
add
add
nop
lret
lahf
out
jb
decb
add
pop
fldenv
and
and
call
add
push
sub
fwait
ljmp
imul
insb
add
pop
mov
dec
adcb
mov
shl
sbb
sub
movsl
es
daa
icebp
dec
xor
rolb
add
out
mov
jl
mov
cmpsb
add
cmc
add
pop
jb
addb
iret
jo
je
leave
fidivl
add
into
jecxz
and
sbb
adc
push
roll
enter
xlat
pop
das
rolb
or
addb
sub
fmul
shrl
xorl
xchg
dec
push
jo
jle
outsb
sub
ret
jg
out
and
cmp
ss
pop
xlat
scas
inc
ja
add
mov
addr16
jo
mov
cvtps2pi
jns
add
and
xor
cmpsb
mov
les
jbe
jnp
xor
cmp
out
stos
sbbl
sbb
adc
aaa
cmpl
shll
movsb
mov
cmp
je
jl
ret
inc
fldt
lock
dec
xor
loopne
cltd
mov
decl
and
pop
jbe
or
adc
fldt
xchg
mov
xchg
enter
sub
ror
icebp
push
add
lahf
sbb
mov
mov
sub
push
sbb
add
movsb
sarb
mov
pop
lds
push
jno
jge
jne
orb
and
dec
add
ja
jg
add
hlt
fisttpl
popl
push
lret
sahf
and
inc
das
dec
les
call
add
cld
fldt
icebp
sub
roll
cmc
dec
add
out
sbb
outsb
loope
in
add
add
sti
sbb
out
add
lret
movsb
push
mov
add
addb
add
inc
fstp
dec
add
stos
pusha
scas
aam
sub
add
adc
int
jecxz
outsl
xchg
dec
hlt
lcall
sbb
xor
pushf
xor
fistl
dec
push
mov
xor
pusha
pop
mov
sbb
repnz
stc
xchg
or
ljmp
mov
pop
xor
call
dec
xchg
test
imull
jnp
dec
shlb
pushf
jns
mov
push
add
add
out
stos
std
movsl
pop
js
push
add
add
xchg
cld
fcmovnbe
ljmp
pop
outsl
rorl
std
int
cmc
fstpt
lahf
pushf
mov
cmp
fucomi
add
or
jp
add
or
loop
pop
push
fwait
push
jno
pop
fnstenv
stos
add
cld
fimull
dec
adc
mov
xlat
inc
outsb
dec
les
mov
insb
cmp
mov
mov
inc
xlat
xchg
sti
add
fucomp
sub
add
call
xchg
sbb
add
add
repz
cmp
adc
jecxz
add
pop
int3
shll
pop
pop
lret
mov
xchg
std
sbbl
das
out
inc
stos
imul
sub
fistps
daa
sahf
and
enter
add
imulb
cmp
sahf
add
push
out
test
arpl
in
adc
pop
xchg
adc
testb
dec
sahf
testb
mov
insl
in
mov
orb
mov
xor
mov
sub
adc
add
bound
mov
push
jno
lods
jge
push
leave
lret
mov
pop
cs
add
jb
faddl
push
loope
jmp
lret
add
fisubrl
jmp
jbe
jmp
add
arpl
test
gs
fdivs
and
lcall
add
das
pop
fucomi
loop
bound
jno
xchg
ss
icebp
ljmp
lcall
jno
sbb
rorl
cli
jns
pop
jmp
fisttpl
xchg
mov
push
dec
add
push
jp
push
out
in
add
outsb
push
test
add
mov
adc
jg
testl
loopne
mov
lahf
in
add
aas
mov
popa
push
ljmp
pop
add
fiadds
repnz
add
xorb
add
ret
and
les
pop
mul
les
inc
push
add
inc
data16
in
fldenv
popa
rep
roll
test
push
cmp
sub
aam
pop
push
mov
aaa
cltd
mov
ret
inc
inc
add
int
push
test
loope
adc
cwtl
pop
mov
ds
add
sbb
inc
add
repnz
ljmp
sbb
add
in
iret
jge
push
test
mov
js
mov
in
or
hlt
mov
add
adc
cmpb
mov
pop
add
pop
mull
jl
jecxz
lret
enter
inc
add
sub
or
add
add
mov
sbb
push
cmp
add
insb
lods
sub
add
pop
inc
in
mov
add
pop
shll
gs
and
mov
into
sbbl
pop
aam
insl
dec
fisubrs
add
aam
jns
cmp
fsts
and
or
pop
jge
loop
push
mov
add
or
mov
fs
mov
push
cmpl
inc
push
jae
scas
in
add
fwait
outsl
push
fisttps
and
jno
iret
sub
scas
mov
cld
inc
dec
insl
mov
mov
leave
sbb
push
flds
out
push
add
cmc
cld
arpl
stos
pusha
shrb
in
jg
cmpsl
jo
sbb
aad
xor
add
add
mov
adc
xchg
pusha
mov
jge
xor
pushf
add
pop
lahf
jo
stos
fidivrs
popf
push
lock
sti
dec
fiadds
outsb
jbe
out
std
sbb
jne
push
add
fstl
insl
call
dec
push
add
test
add
repz
dec
and
faddl
sub
inc
jne
sbb
lcall
js
dec
aam
pop
xor
clc
adc
mov
xchg
data16
pop
sub
mov
add
add
push
insb
addr16
or
add
add
jo
and
pop
aas
xchg
add
push
test
fldl
jb
lcall
and
push
call
mov
inc
jb
add
data16
mov
add
cltd
xchg
dec
mov
inc
test
sub
out
int
fiadds
fisttpl
mov
leave
pop
pop
call
fcmovnu
cmp
dec
addl
xchg
sbb
out
push
mov
vmwrite
ret
mov
int3
cmpsb
xor
and
nopl
rcrb
sbb
mov
xlat
adc
pop
mov
cmc
xor
nop
jp
repz
sub
push
mov
jle
pop
mov
lds
lcall
out
push
sahf
add
xchg
inc
add
test
and
pop
mov
pop
dec
jbe
sub
cld
and
push
dec
rol
insb
sub
lods
add
xchg
jp
test
jo
jo
dec
jmp
mov
add
add
add
xlat
cmpsl
jbe
lret
add
div
add
add
das
xchg
shll
pop
sbbl
sub
dec
andb
aam
daa
push
or
mov
cmp
push
ds
mov
out
std
cmc
insl
push
add
mov
out
add
repnz
stc
or
mov
adc
ret
inc
outsb
lods
loop
inc
cld
sti
test
test
flds
shlb
add
int
mov
inc
add
xchg
stos
add
mov
add
mov
pop
and
add
add
mov
mov
sahf
mov
mov
int
sbb
lret
loopne
pop
scas
out
add
pop
add
js
mov
add
ret
xchg
imul
and
add
jae
cld
pop
add
sbb
pop
mov
fmuls
push
jp
mov
sbb
mov
cwtl
add
mov
inc
add
lcall
or
call
out
mov
imul
rol
hlt
test
lea
mov
insl
push
ret
xor
xor
fwait
push
cmc
and
filds
notl
lcall
add
add
mov
outsl
rcrl
jne
hlt
push
pop
jae
stos
mov
adc
insl
push
xchg
aam
pop
inc
xor
xor
sbb
mov
incb
jmp
xor
mov
fs
mov
rorb
xchg
push
mov
add
aas
push
push
inc
dec
dec
mov
imul
dec
add
mov
add
add
lods
inc
sahf
adc
testl
push
mov
inc
add
xor
dec
add
add
jl
adc
jne
stos
push
dec
lock
mov
add
xor
cli
dec
inc
add
xchg
add
ret
scas
add
fnstenv
aaa
imul
xor
cmp
jg
mov
fnstcw
push
jg
aam
cmpsl
pusha
sbbb
call
xchg
mov
add
loope
add
stos
dec
ds
mov
mov
stos
les
in
insl
in
mov
data16
push
fwait
lret
jbe
aas
jg
or
jb
loop
sbb
movsb
adc
lods
inc
cmp
leave
add
nopl
or
or
and
xchg
mov
lret
test
and
mov
dec
dec
pop
and
pop
xchg
add
pop
insl
sub
jecxz
sbb
inc
les
add
outsl
add
inc
mov
ljmp
add
pushf
test
add
inc
mov
mov
jp
and
cmpsl
leave
test
inc
adcl
jnp
fidivl
clc
xor
push
clc
out
mov
lcall
or
cmp
andl
cs
ljmp
sbb
mov
negl
mov
and
in
imul
pushf
push
insl
ja
fisubrs
push
mov
cld
xchg
test
cli
gs
ja
loop
adc
mov
stc
add
dec
inc
out
mov
cmp
aaa
lcall
movl
lcall
popf
and
lea
insl
add
mov
sub
or
pop
cmpsl
push
adc
mov
dec
int
or
and
fsubl
lock
insl
pop
mov
jmp
mov
inc
addr16
push
adc
inc
out
push
xchg
aad
jle
out
xchg
xor
jo
pop
bound
jl
pop
outsb
add
les
mov
add
jbe
sub
test
lret
add
inc
mov
add
insb
in
mov
rolb
stos
fidivl
jae
add
sbb
or
ja
add
mov
fcoml
jge
dec
pop
add
push
rorb
outsb
pop
mov
add
jne
push
fwait
mov
lods
call
xlat
ficomps
add
sti
cmp
inc
call
insl
jge
push
mov
enter
addb
push
rcll
mov
pushf
add
cltd
inc
cltd
push
out
lds
mov
add
xor
imul
xchg
jb
pop
pop
xchg
jle
inc
add
and
insl
mov
aad
shl
jp
adc
jg
jmp
inc
test
insl
push
lahf
jp
mov
jl
ret
cmp
xor
movsb
int
jmp
pop
jp
hlt
insl
and
add
mov
fst
jae
xchg
fiaddl
or
cmp
das
lahf
ficompl
inc
fwait
test
xor
sbb
add
jp
lea
je
xor
inc
mov
cmp
fwait
orb
mov
incb
cmpsb
dec
add
jg
cmp
int
das
out
mov
js
pushf
sbb
dec
lds
cmp
dec
lods
in
jne
popa
xchg
fwait
sbb
xor
cmp
inc
sub
add
pop
add
jl
fistps
add
xchg
mov
test
mov
push
int
es
add
adc
lahf
mov
add
push
mov
loopne
jns
bound
arpl
mov
add
inc
dec
test
ficoms
out
pop
outsb
negb
and
mov
or
dec
gs
pop
pop
cmpsl
jo
pop
movsb
pop
stos
and
loopne
ss
mov
dec
xchg
mov
out
or
xor
add
add
sub
mov
movups
xor
push
mov
das
subl
sub
mov
repnz
into
imul
and
sub
push
add
in
mov
add
xchg
add
inc
add
fs
pusha
add
mov
xchg
in
iret
push
sbb
cli
adc
dec
dec
jo
cli
jmp
cmpsb
test
rolb
jle
push
and
rolb
add
add
js
cmpsl
rcrb
test
addb
cmp
xor
rolb
ljmp
cs
and
add
nop
xor
outsl
fxtract
addl
inc
sbb
out
adc
add
icebp
jp
push
shll
insl
add
out
sub
ljmp
in
jg
jae
hlt
shll
mov
or
add
push
sbb
sub
xchg
lods
call
sbb
push
lret
mov
or
push
fstl
cli
add
jg
ret
dec
ret
in
add
jecxz
mov
inc
mov
mov
ds
out
jne
out
xchg
sahf
cmp
add
and
lret
cmp
out
add
lret
lock
xor
out
das
xchg
pop
jbe
adcl
cmpsl
and
leave
sbb
add
cmpsl
popl
mov
and
lret
lods
dec
add
test
cmpsb
pop
and
dec
or
popf
das
push
out
jne
ret
ret
push
add
mov
iret
add
jecxz
rcrl
cld
addb
add
mov
cs
xor
mov
jmp
push
out
movsl
cltd
scas
jge
and
cmpsl
add
cwtl
rcr
jmp
cli
cmp
dec
popf
push
add
jge
mov
mov
dec
add
add
sub
lahf
arpl
fiadds
lahf
add
mov
sub
cmpl
mov
lret
pushf
stc
add
push
xchg
or
sbbl
movl
lock
sti
loopne
inc
cmp
add
add
ljmp
mov
jmp
sbb
sbb
mov
enter
xor
rolb
sbb
addb
ljmp
and
mov
add
fildl
mov
push
add
mov
out
pop
adc
das
pop
loopne
dec
test
dec
mov
loope
data16
push
idivl
lcall
xchg
hlt
adc
into
pop
and
pop
jno
leave
add
add
sub
lcall
add
cmp
das
out
incl
cmp
cs
xchg
aam
push
call
imul
les
shll
add
mov
push
bound
sbb
sbb
add
sti
mov
int
arpl
and
push
filds
icebp
pop
mov
lds
xchg
outsb
or
outsl
andb
mov
in
add
mov
cmp
repz
addr16
sub
cmc
stos
jle
cli
inc
cmp
mov
push
ja
mulb
mov
ja
in
add
cmp
inc
iret
addb
out
incb
into
les
add
sbb
sbb
aad
or
push
xchg
push
mov
in
insb
pop
jnp
mov
or
bound
and
sub
add
push
pop
jl
or
aaa
mov
sub
jmp
cmpsl
add
bound
dec
ret
mov
pop
pushf
in
mov
pop
xchg
sub
add
push
rolb
cld
sub
mov
and
adc
sub
push
mov
pop
arpl
pop
inc
ret
mov
add
xlat
iret
mov
rcll
cmp
cwtl
cmp
jg
mov
add
lcall
xorl
or
mov
jl
mov
add
add
and
inc
aas
mov
push
sub
stos
cmp
add
sub
mov
orl
jo
cltd
dec
scas
int
dec
push
lea
inc
adc
sbb
addb
into
insb
xlat
mov
call
adc
test
inc
inc
add
push
xchg
repz
add
lret
adc
aam
or
mov
cmp
xchg
loop
and
lea
lcall
pop
add
vcomisd
xor
clc
cmp
out
ficoms
test
add
and
pop
and
cmpsl
add
dec
xchg
fcoms
stc
jno
push
aad
fstpl
fsubrl
push
and
mov
jg
cmp
xchg
add
sti
pop
add
sbb
cmpsb
outsb
pop
imul
add
inc
add
sub
adc
incl
in
jo
dec
les
scas
mov
push
add
sub
jmp
add
cmp
add
add
dec
lret
in
add
mov
cwtl
aam
test
mov
inc
and
inc
hlt
insl
and
dec
inc
xchg
out
push
sahf
add
insb
scas
add
bound
dec
xor
add
out
pop
addb
cmp
jl
mov
xchg
rolb
inc
loopne
dec
fiadds
xlat
inc
or
push
push
jo
cltd
js
aam
mov
arpl
lret
adc
add
enter
lcall
add
mov
add
test
shlb
mov
or
pop
and
adc
inc
mov
repz
dec
add
sub
loopne
loopne
jno
xor
js
andb
cld
imul
cmp
inc
inc
pop
aaa
test
add
sub
sbb
stc
jns
adc
repnz
stos
mov
rorl
leave
xchg
jae
add
icebp
mov
add
dec
push
out
cmp
push
insb
push
sub
lret
clc
loopne
iret
insb
pop
fldcw
mov
out
push
jne
repnz
push
sub
adc
shll
mov
xchg
jl
jbe
jbe
mov
ljmp
cmp
aaa
pop
jecxz
push
mov
sbb
xor
cli
dec
sahf
adc
dec
and
mov
or
rolb
jae
daa
jmp
mov
inc
cmp
mov
cmp
cmp
mov
popa
push
mov
or
mov
add
mov
sbb
cmpb
movsb
ja
dec
add
shlb
addr16
inc
shll
fnstcw
out
cmp
std
mov
test
add
jnp
pop
bound
push
jp
xchg
inc
pop
mull
mov
add
call
push
add
add
rclb
fdivp
add
mov
rorb
add
sti
add
sub
pop
mov
outsb
or
xor
xor
insb
fwait
mov
jno
add
out
add
cmp
iret
xor
xchg
rolb
mov
add
repnz
or
std
mov
inc
add
movsb
mov
sub
mov
pusha
addr16
iret
daa
add
es
cld
in
pop
into
addb
in
xchg
sahf
cmp
and
mov
scas
add
in
fiadds
add
fcoms
jbe
jbe
pop
xchg
fsubl
addb
lods
shrb
add
jo
leave
and
and
popa
stc
adc
std
stc
add
add
add
cmpsl
push
int3
loop
negb
pop
test
jp
ljmp
je
fiadds
aam
ret
lods
push
add
jnp
dec
mov
into
nop
loop
orl
cwtl
add
mov
call
mov
out
ja
push
je
mov
iret
das
add
jp
add
push
xchg
fstp
test
jae
pop
ret
dec
arpl
push
scas
push
inc
xchg
dec
jmp
out
sub
mov
stos
add
sbb
outsl
pop
add
mov
add
add
addr16
inc
clc
mov
sub
push
loopne
add
push
rorl
jae
jmp
out
xor
xchg
sub
daa
js
xchg
insl
pop
addl
add
jmp
jbe
into
xor
fmul
sbb
inc
mov
mov
ror
adc
mov
push
mov
popf
mov
dec
ds
xchg
xchg
movsl
xor
jnp
je
mov
push
sub
aad
mov
add
and
mov
shrb
xor
inc
add
je
sub
xor
lcall
add
ss
cmp
dec
add
pop
mov
loope
xor
rolb
mov
inc
lock
add
in
fists
or
rcrl
or
or
jge
add
dec
sub
loopne
xor
mov
add
pop
dec
add
test
adc
sbbl
lret
test
sarb
aad
loopne
test
jg
imul
add
cmpsl
leave
adc
dec
add
movsl
insl
lahf
dec
ss
fimuls
push
and
xchg
inc
jns
fbld
cmp
stc
pushl
cmpsl
int
add
out
push
inc
pop
add
and
std
push
or
sub
loop
inc
lods
cmp
icebp
sub
pinsrw
movsl
inc
add
inc
in
call
mov
lds
sahf
add
sub
or
or
xchg
aas
jp
sbb
fs
xchg
add
sub
int
mov
sarl
add
cltd
pop
in
add
xor
nop
push
das
cltd
nop
lods
inc
ret
mov
scas
jbe
ja
cmp
cltd
out
mov
and
add
xchg
xor
movsl
repnz
jns
js
xchg
ret
dec
xor
inc
test
pop
je
lods
out
pop
xchg
enter
cld
and
roll
add
inc
sbb
or
push
clc
cmp
sbbl
jmp
sbb
and
dec
sti
fistps
mov
pop
add
add
sbb
add
sub
bound
adc
inc
xchg
fdivs
xchg
minps
mov
add
daa
add
pop
and
pushf
movsl
pop
add
mov
add
xchg
sbb
mov
cmp
outsl
aad
mov
add
aad
aam
push
pop
or
stc
xchg
xor
xchg
add
loope
cld
mov
outsl
or
and
cltd
cmp
ret
aaa
inc
lahf
xor
dec
xor
dec
push
xchg
sahf
ficoms
in
imul
jae
jmp
push
cmpsb
xor
fmuls
stos
rcr
in
int
add
jns
jns
imul
test
dec
push
jmp
add
enter
add
add
jle
mov
pop
xor
outsb
mov
fs
dec
call
popa
mov
sbb
jne
arpl
and
mov
dec
add
add
insl
add
ja
xchg
mov
add
mov
add
ds
pop
add
jge
sbb
test
xlat
lods
xor
andb
lahf
mov
mov
dec
sbb
and
add
add
or
mov
cmp
cmpsb
int3
lods
jmp
sbb
push
or
aas
scas
mov
jbe
dec
je
aam
in
into
out
and
adc
sub
out
addr16
xchg
js
pop
sbb
xchg
aaa
mov
out
gs
jmp
jbe
shll
cltd
test
cli
pop
loope
insl
push
mov
add
mov
jb
add
inc
mov
into
data16
cmc
je
add
dec
mov
push
push
fistpll
loop
imul
xchg
stos
das
bound
testb
cmp
inc
lret
add
push
pop
popf
jbe
add
lcall
fistpl
push
into
xorl
add
bound
movl
adc
push
xchg
mov
addr16
cmp
sbb
shll
cld
repnz
ljmp
mov
push
leave
mov
mov
test
decl
xchg
push
mov
inc
enter
mov
mov
add
push
fwait
add
test
xor
mov
pop
cmp
adcb
fadds
sub
jp
loope
dec
mov
pop
mov
xchg
sbb
stos
pushf
xchg
push
add
in
das
imul
jmp
or
mov
pop
add
test
inc
and
and
pop
xchg
inc
movl
sbb
jl
and
pop
loop
mov
idiv
gs
frstor
and
inc
push
ja
cmp
add
dec
mov
xor
ljmp
lock
pop
das
daa
rolb
insb
xchg
cmpsl
or
fcmovnb
stc
test
scas
or
push
add
scas
jb
call
mov
adc
add
pop
fldl
lock
xor
add
adc
add
pop
lock
hlt
sti
sbb
xchg
dec
inc
sub
sbb
cmc
aas
aam
add
push
push
push
cmpl
mov
clc
or
dec
push
and
ja
mov
add
dec
sti
and
jo
popa
lds
sbb
testb
arpl
and
es
adc
jmp
popa
addl
sbb
and
addr16
adc
mov
pop
mov
add
jp
xchg
mov
push
pop
bound
and
and
xchg
sbb
cwtl
je
sbb
jb
insb
fwait
or
lcall
mov
add
bound
and
and
into
pushl
addr16
imul
xor
cld
push
and
hlt
add
leave
nop
add
add
jns
pop
loopne
iret
jmp
orb
xor
xchg
xlat
pop
ds
les
pop
hlt
or
fldt
jno
int
fisttpll
push
nop
mov
mov
sub
add
sub
jmp
rcrb
xlat
dec
inc
popa
pop
mov
shll
out
pop
lret
outsb
add
dec
xor
jp
insl
add
fsubrl
push
pop
test
insb
ss
lods
call
lahf
jae
jmp
lcall
add
fld
sub
arpl
or
sbb
add
mov
cltd
addr16
dec
push
sub
push
jno
mov
sbb
testb
mov
insl
ret
shl
daa
fs
add
pop
sub
add
inc
movsl
jmp
icebp
cmpsl
and
adc
jmp
ss
cli
mov
sahf
ss
xchg
xchg
imul
pop
sub
push
jp
add
dec
outsb
push
ss
gs
into
test
jbe
out
sub
cmc
jb
add
scas
mov
xor
aaa
adcl
push
and
xor
pop
push
sub
mov
pop
sub
enter
adc
pop
add
adc
mov
push
lea
mov
out
xor
xor
inc
mov
ljmp
dec
jno
mov
cwtl
push
test
inc
mov
ret
rcr
mov
dec
mov
add
and
mov
dec
sbbb
fsubr
in
add
clc
lret
aas
test
test
scas
add
xor
movsb
std
in
aad
arpl
out
add
pop
adc
sbb
xchg
incl
ret
movb
sub
arpl
fimuls
movsl
shll
sub
jg
daa
iret
or
stos
pop
xor
add
jbe
mov
repnz
mov
data16
ret
divl
cli
jae
testl
add
add
clc
push
sub
add
rorb
data16
in
jb
or
or
movb
cmp
faddl
sub
jb
jp
xor
mov
rcrb
adc
lea
xor
add
pop
push
jmp
jae
sbb
pop
cmp
hlt
sbb
mov
dec
mov
cmp
dec
xor
mov
add
add
mov
xchg
nop
add
int
push
add
inc
lock
mov
cld
mov
lods
mov
pop
add
std
shr
test
sub
imul
cmp
ljmp
or
xchg
push
dec
dec
out
pop
xor
jne
or
pop
push
push
and
aaa
jns
dec
clc
mov
add
add
cld
sbb
cli
es
jae
aas
and
jle
scas
movsl
add
mov
mov
jmp
ja
in
add
add
push
inc
cmp
pxor
rcll
cmp
fisubs
inc
push
cmpsl
aam
add
fsubrl
or
mov
mov
scas
mov
mov
inc
std
cmpsl
lock
sbb
daa
add
inc
in
movsb
repnz
mov
sub
pop
adc
push
dec
sub
add
incl
lcall
dec
sub
sbb
xchg
rcrl
lea
lock
out
fdivrl
insl
push
sub
shlb
pop
cmp
sub
repz
sarb
or
imulb
cltd
and
or
adc
ds
loopne
add
ja
dec
scas
add
into
add
push
int
inc
mov
das
enter
sub
or
cli
andl
testl
divl
mov
pop
pop
outsb
mov
xchg
aaa
mov
pop
add
add
xchg
add
pop
mov
and
pop
idivb
add
push
add
mov
and
push
nop
sub
roll
cmp
mov
pop
jb
bound
lds
pop
mov
jbe
mov
push
enter
in
inc
ja
sub
rcrb
cwtl
pop
and
mov
mov
lods
sub
sub
jo
fadds
cmc
mov
iret
adc
fidivs
adc
lahf
inc
xchg
adc
aad
popa
xlat
addr16
sbb
cmp
xchg
push
daa
sub
add
cmpsb
aaa
rorb
inc
mov
and
add
add
add
shl
mov
dec
add
cwtl
mov
inc
add
xor
xor
mov
jbe
incl
dec
jl
lods
xchg
incl
lock
shlb
pushw
xchg
ss
daa
repnz
add
std
inc
mov
mov
adc
push
adc
cmp
adc
xor
cltd
das
lahf
ss
and
lahf
or
mov
je
add
pop
lret
data16
add
xchg
je
aad
add
sbb
cli
and
loope
cmp
xchg
sub
and
push
dec
in
aaa
imul
lldt
fs
mov
adc
add
push
add
add
in
mov
push
aaa
mov
int3
add
lret
xchg
lods
shlb
push
icebp
mov
push
xchg
dec
lret
sbb
xor
pop
lret
add
cmp
xchg
sub
fbld
add
mov
cmp
xchg
jo
or
iret
in
fwait
mov
cmp
enter
push
add
incl
test
popa
sub
jns
cli
add
add
outsl
sub
lret
sahf
enter
out
add
out
roll
xchg
xor
imul
iret
hlt
or
out
pop
mov
in
inc
xchg
add
add
jno
out
in
or
sub
add
lock
test
lcall
adc
andb
fildll
es
stos
jle
adc
lock
xor
sub
cld
in
jo
ljmp
push
pushf
mov
scas
jno
jecxz
pushf
fisubrs
sub
pop
loope
jge
inc
stc
push
add
add
lret
cmpsl
add
dec
adc
sub
cmp
jns
add
inc
in
push
loopne
inc
repz
pop
decl
lds
lahf
dec
add
add
add
push
pop
in
dec
cmp
movsl
sub
sub
dec
and
xchg
jno
add
push
push
cltd
mov
movb
aad
cmpl
cmp
repnz
cmp
lock
push
pop
jmp
jmp
add
jns
inc
lret
xchg
or
xor
movsl
add
inc
dec
xor
adc
xchg
fcoml
pop
and
out
xor
aam
or
push
mov
and
out
aam
popf
hlt
add
dec
jg
pop
inc
test
popa
cmp
call
cmc
and
fwait
or
xlat
add
cli
das
mov
inc
bound
test
cmp
pop
adc
dec
add
jae
jecxz
dec
add
in
das
add
inc
lret
pop
leave
in
fbld
or
aas
adc
les
jle
in
stc
repnz
inc
in
mov
add
add
pop
cmp
loope
lea
jle
sub
loope
xor
loope
fidivs
push
jb
movsl
adc
jnp
jmp
push
pop
push
lahf
shll
pop
mov
scas
rcl
fs
xchg
sbb
in
push
jecxz
stc
loope
add
fistpl
out
arpl
jecxz
cmp
jmp
sti
pop
lods
cld
out
bound
test
sbb
shll
jno
sbb
add
aad
shll
add
mov
stc
xchg
xchg
add
mov
incl
cs
cmp
mov
addb
movsb
push
stos
and
test
loope
add
ljmp
adc
fisubs
fiadds
scas
dec
xchg
mov
add
jne
sbb
mov
dec
push
sti
shll
xchg
add
lds
leave
add
xchg
or
add
or
pop
lahf
xor
fists
mov
or
shrb
cwtl
add
xor
pop
mov
add
sahf
movb
add
lock
fstpt
add
dec
loopne
out
xchg
and
pop
push
mov
popf
std
adcl
dec
fimuls
fdivr
mov
scas
clc
mov
inc
pop
je
xor
das
xchg
or
testl
mov
aas
add
add
mov
jle
inc
mov
icebp
sbbb
sbb
repz
xchg
outsl
aam
inc
cltd
bound
add
mov
mov
sarb
xchg
pushf
scas
mov
mov
je
mov
cmp
pop
nop
dec
cmpsb
aaa
mov
add
and
cmp
xchg
into
data16
enter
and
lock
push
add
add
and
lcall
xor
popa
inc
cmp
ljmp
add
test
sbb
cmp
fisubrl
add
ss
popf
push
cltd
mov
push
lods
insl
or
cmp
jg
shrb
jbe
daa
add
and
xchg
lret
sub
gs
cmpsl
jmp
frstor
add
sbbb
adc
jb
mov
lcall
xor
push
or
pop
mov
xchg
int3
dec
adc
add
sbb
and
jnp
xor
sub
add
gs
xchg
out
pop
enter
add
add
dec
push
add
jg
pop
xor
inc
sbb
sub
adc
cmpsb
jp
sti
in
movsl
inc
add
add
int3
enter
pop
nop
popf
push
or
arpl
or
add
add
arpl
call
iret
lods
decb
out
dec
ret
add
add
sbb
imul
dec
mov
ret
sbb
mov
mov
jo
fisubs
pop
mov
jns
add
and
cwtl
dec
out
cmp
mov
inc
sub
add
jl
mov
mov
arpl
pop
mov
cwtl
lcall
out
inc
mov
fldl
pop
pushf
mov
dec
dec
lds
inc
add
movsl
js
sarl
jecxz
or
jb
dec
sbb
or
in
imul
push
lea
inc
add
mov
insb
add
addr16
push
in
shll
aam
push
stc
je
mov
inc
xchg
shr
mov
enter
and
adc
mov
adc
sub
mov
and
ret
iret
enter
sub
aas
add
cli
pop
fidivs
push
das
and
outsl
add
add
jmp
movsl
sub
fdiv
jo
in
pmulhw
mov
add
xchg
aaa
fists
add
adc
add
test
fwait
push
mov
and
mov
invd
jb
or
mov
dec
add
ljmp
clc
gs
out
xchg
sub
lahf
ljmp
jl
add
or
ret
cmp
inc
jmp
sub
repz
add
sbb
add
inc
ud0
fbstp
in
cltd
fwait
add
xor
jae
xor
pop
add
rorb
or
cmc
mov
xor
jnp
repnz
push
add
pop
push
mov
int3
mov
push
test
xchg
or
dec
cmp
cmpsb
inc
pop
push
aas
fs
dec
mov
popa
add
addb
rcr
std
push
add
add
sbb
add
mov
mov
add
aaa
movsb
jne
xor
xorb
jnp
mov
push
scas
xlat
add
or
sub
insl
sub
sub
push
dec
add
jns
add
ljmp
ja
in
repnz
and
mov
outsl
fsubrs
outsl
add
jb
loop
xchg
mov
push
cld
add
push
fsub
fwait
call
popa
jmp
pop
loope
jo
jg
adc
cwtl
adc
jo
add
pand
jmp
add
push
xchg
push
xor
call
aad
cs
les
push
ss
sbb
icebp
push
lods
xor
bound
pusha
sub
mov
imull
pop
xor
pop
ret
sbb
add
xchg
inc
mov
cld
std
lds
cmp
mov
jb
xchg
or
xchg
push
or
arpl
add
stc
mov
insb
cmp
fiaddl
jg
cs
movsb
add
add
xlat
or
add
dec
adc
add
test
push
stos
mov
and
mov
mov
ds
notb
add
xor
into
in
out
add
les
mov
sub
inc
popf
outsl
mov
icebp
sbb
movsl
cltd
gs
cmpsb
xchg
sub
or
dec
mov
push
cmpsl
lods
test
cmp
ljmp
xchg
repz
cmc
out
test
xchg
call
xor
fstl
add
sarb
inc
sub
in
xchg
lods
in
repz
loopne
add
mov
stos
dec
outsb
adc
inc
add
mov
nop
icebp
aam
std
mov
add
rcll
lds
mov
pop
xchg
push
mov
stc
aas
add
lahf
je
pop
filds
mov
shlb
lcall
test
fmul
cmp
jne
jge
mov
outsb
inc
outsb
inc
add
test
dec
mov
add
out
out
add
push
mov
add
dec
add
pop
adc
jb
mov
and
fcomp
or
lret
jl
imul
xor
add
adc
add
cmpsb
mov
and
add
xchg
and
dec
aam
nop
xor
pop
dec
mov
ja
dec
cmp
add
scas
cmp
add
sbb
xor
mov
jbe
mov
jb
addr16
int
jg
iret
aam
sub
pop
flds
cwtl
push
mov
mov
mov
mov
pop
jg
add
dec
or
aas
stos
pop
mov
adc
loopne
push
call
iret
dec
mov
test
sub
nop
and
jle
push
inc
inc
xchg
loop
inc
cmp
add
inc
inc
mov
jae
mov
xchg
sbb
lods
subb
mulb
sbb
sbb
and
xchg
inc
movl
movsl
sub
aad
in
and
loopne
fs
inc
xchg
ficompl
in
dec
add
fisubl
mov
add
outsl
add
add
push
add
xchg
add
sbb
inc
test
mov
push
inc
lds
cltd
int
int
xchg
les
add
xchg
cwtl
add
jecxz
movb
add
add
test
add
dec
out
add
mov
add
int
fdivs
out
clc
int
int
std
sub
mov
pop
mov
pop
add
ret
inc
add
jae
mov
mov
movsb
xlat
mov
sti
and
push
or
xchg
mov
add
sub
add
add
fistl
loope
add
loopne
es
jo
dec
arpl
xchg
add
mov
add
ja
ds
add
dec
cmp
and
ret
mov
cld
movsb
mov
cmp
loop
imul
xor
add
sub
sbb
gs
outsb
int
mov
add
xchg
sbb
jp
js
xor
sub
xchg
repnz
nop
lods
jmp
nop
aaa
in
in
jae
and
adc
test
inc
fsubl
jne
or
lret
into
popa
add
xchg
pop
loopne
stos
jo
in
or
dec
lret
les
hlt
xchg
push
arpl
mov
xchg
add
push
ret
inc
test
lods
dec
icebp
cmp
aam
ljmp
aaa
mov
cltd
mov
cmpsl
mov
flds
jns
inc
jp
jbe
jb
lods
xchg
nop
add
add
pop
sbbl
push
add
xorl
fmul
insl
add
andl
push
repz
fistpl
ljmp
test
adc
out
push
cmp
or
mov
call
add
push
dec
pop
cmc
add
lret
xchg
rorb
clc
fldl
add
add
scas
mov
push
in
xchg
mov
pop
rolb
add
aad
ja
fiaddl
push
jae
pop
adc
pop
pop
xor
dec
in
ret
push
cmpsl
lds
scas
lock
mov
popf
jmp
jmp
add
loopne
and
and
pop
dec
icebp
adc
negb
mov
pushf
or
scas
add
sbb
loope
jecxz
mov
jnp
inc
bound
dec
add
add
ja
jle
cmp
aam
fwait
out
adc
adc
stos
cmp
mov
sub
out
cmp
or
mov
add
xchg
mov
ss
sub
ljmp
lret
in
push
cmp
sub
add
add
xor
std
fisttpl
pop
shrl
mov
andl
fdivrl
cmp
fs
faddl
pusha
push
cmp
iret
int
std
test
loopne
in
dec
dec
addl
add
aaa
pop
add
nop
dec
xchg
mov
add
lret
cmp
std
pop
js
rclb
sub
xor
adc
pusha
jg
mov
add
add
dec
cmp
xchg
mov
inc
add
or
scas
add
add
push
aas
or
xchg
insl
lahf
cmpsl
outsb
lcall
and
cmp
ficompl
icebp
test
out
xor
pop
adc
mov
call
add
in
popf
push
adc
mov
mov
add
xchg
or
outsl
xchg
cmp
dec
outsl
hlt
xorb
daa
loopne
cmp
into
and
sti
xchg
inc
ljmp
jb
add
inc
inc
mov
insl
shll
aas
test
ret
cmp
jle
ret
repz
clc
dec
inc
sahf
and
scas
add
inc
mov
dec
in
jle
add
add
js
movaps
mov
movsl
dec
add
sub
add
mov
mov
mov
add
add
movsb
push
xor
mov
mov
mov
testl
jg
pop
icebp
addb
push
jo
cmpl
inc
adc
or
mov
push
and
xchg
add
shr
pop
xchg
inc
xlat
push
lcall
mov
inc
xchg
and
pop
add
pushf
add
cmp
int
add
mov
add
push
imul
pop
movsl
dec
inc
daa
lcall
scas
add
andb
cmp
lahf
test
je
mov
sub
jno
add
jns
addr16
add
mov
call
lods
or
pop
sbb
xor
std
add
adc
add
inc
add
push
xor
aas
add
jge
sbb
add
adc
imul
push
cmp
outsb
xchg
lods
and
std
cmp
cmpsb
fmul
jne
flds
icebp
sarb
decl
add
dec
clc
cwtl
xor
stos
add
xor
sub
int3
cmp
add
scas
cltd
movsl
gs
aad
ds
add
popa
ret
rclb
add
inc
dec
mov
mov
sbb
clc
xor
imul
scas
aad
mov
jg
adc
mov
xchg
sbb
jb
adc
shrl
pop
insl
dec
in
pop
mov
pop
mov
clc
test
out
xor
popf
lahf
aaa
or
cmp
loop
push
outsb
push
mov
pop
es
or
mov
mov
mov
out
scas
push
jle
adc
and
pop
lea
mov
mov
adc
add
es
sub
add
push
movb
pop
sbb
inc
cmp
ja
and
xchg
popl
out
in
xchg
jmp
add
pushf
ljmp
xlat
cmpsb
mov
and
pusha
add
rorl
daa
xchg
add
shrl
mov
ljmp
rclb
ret
add
sahf
add
movsb
cli
jle
adc
xchg
jnp
mov
in
loopne
outsb
add
movsl
lcall
or
fwait
add
mulb
add
cwtl
sub
lock
clc
or
jno
pcmpeqw
popf
gs
cmp
ss
cmc
inc
jl
jecxz
jg
inc
push
dec
jne
adc
lret
add
mov
std
dec
dec
ffree
stc
push
fists
ljmp
ljmp
lret
dec
cmpsl
inc
out
bnd
or
mov
add
or
add
insb
mov
je
mov
sbb
sub
push
pop
nop
pop
add
add
jns
add
cmp
out
xor
sbbl
pop
in
les
addr16
movsl
hlt
xchg
jl
dec
lock
sub
mov
dec
jnp
xchg
jbe
leave
aad
add
daa
push
dec
mov
out
add
cmp
add
add
iret
frstor
test
adc
cltd
inc
add
lods
jmp
dec
ss
scas
push
sbb
push
jae
int
dec
mov
inc
add
mov
stos
push
add
xchg
hlt
dec
add
pop
pop
pop
inc
addb
enter
out
imull
mov
lods
add
add
stc
dec
add
jns
add
scas
inc
add
imul
cwtl
cmp
addr16
data16
sub
les
std
mov
dec
add
mov
pop
push
add
dec
mov
add
pop
cld
pop
fwait
std
pop
outsl
sahf
cwtl
add
sbb
insb
add
push
adc
pop
xchg
inc
outsb
cmpsb
into
jo
xchg
iret
dec
rorl
roll
and
add
xlat
cmp
adc
in
nopl
push
nop
xchg
push
or
add
push
shr
mov
push
add
adc
add
add
jl
push
dec
add
ja
call
xchg
ljmp
push
pop
insl
xchg
data16
outsb
sub
or
add
adc
aaa
dec
and
adc
add
ja,pt
or
mov
jecxz
mov
rcll
xor
jno
stc
jbe
int
or
mov
ficomps
pop
mov
insl
ficompl
add
add
dec
xchg
add
inc
cmp
add
flds
mov
cwtl
sbb
add
loope
jno
mov
cmp
cmc
in
push
imul
add
push
pop
adc
loop
mov
sahf
pop
aaa
push
loopne
jp
mov
fs
add
mov
jmp
outsb
xchg
sub
push
dec
mov
or
inc
push
test
push
testl
pushf
in
test
and
add
push
popa
or
add
sbb
and
mov
jl
je
insl
add
ljmp
jmp
ja
sub
adc
popa
shll
fcomp
push
mov
lea
leave
jno
shr
lock
push
jno
add
push
divl
std
jmp
imul
dec
mov
iret
lea
mov
add
pop
sbb
add
sub
add
inc
arpl
lock
rolb
ds
push
fcomp
fcmovb
mov
lods
inc
jge
stos
mov
add
ljmp
add
add
sub
or
xor
addr16
add
push
or
push
xchg
out
fucomp
xor
stos
xor
and
ljmp
jle
testb
imul
cmp
dec
xor
push
cltd
mov
xor
lds
adc
mov
add
fdivl
add
xchg
sbb
roll
push
and
add
add
pusha
fnstsw
jmp
xlat
sbb
sbb
ret
aad
sub
pop
sub
add
mov
loope
repnz
and
add
fs
jo
outsl
sub
pop
dec
jmp
das
xchg
cmp
pop
mov
add
mov
rorb
mov
xor
pop
sub
mov
nop
add
or
hlt
stos
je
outsl
add
mov
ljmp
je
xchg
add
xchg
hlt
pop
ss
or
je
inc
dec
movb
rorl
mov
xchg
fbld
mov
jnp
add
fbstp
leave
call
in
sbb
sub
add
into
or
sbb
outsl
add
lahf
andl
or
aas
frstor
dec
movsl
cmp
cltd
sahf
cmc
jne
cmp
jne
push
pop
xchg
das
pop
and
not
rcll
loop
loope
add
inc
popa
mov
cld
out
push
clc
in
movl
mov
outsb
mov
fldt
shlb
dec
cltd
mov
dec
aam
jbe
imul
mov
cmpsb
add
add
inc
mov
enter
inc
repz
leave
mov
pop
adc
jmp
lret
push
push
sarb
mov
aam
xor
rolb
js
lret
mov
pop
in
adc
mov
arpl
out
push
xor
mov
mov
push
mov
cwtl
add
push
mov
mov
add
mov
adc
into
add
add
add
mov
adc
add
loop
scas
stos
dec
pop
jmp
pop
out
xor
sub
dec
add
std
lret
jo
dec
push
hlt
sbb
lea
ljmp
add
aaa
add
mov
xchg
dec
mov
stc
and
xor
pop
add
shll
inc
movl
pop
je
faddl
fsubr
xor
mov
ljmp
add
inc
addl
ds
adc
xchg
sub
pop
sub
add
stos
push
out
push
je
jns
jle
nop
ljmp
mov
push
aas
arpl
jns
lahf
mov
or
leave
negl
xchg
push
cmp
repz
arpl
fwait
js
jnp
mov
loopne
inc
jne
mov
xchg
xchg
gs
jg
hlt
xchg
sub
xchg
ret
in
or
add
xchg
xlat
pop
arpl
ret
cmp
jmp
cs
fisubl
mov
cmc
adc
add
std
insb
verr
repz
iret
push
cmp
sub
adc
shll
pop
push
inc
pop
popf
leave
pop
pop
scas
dec
add
inc
add
mov
jg
jnp
xlat
mov
lods
jae
add
pop
cmp
int3
out
pop
add
test
sar
cmp
jb
pop
insb
cmpsl
das
sub
and
test
mov
add
out
cwtl
loop
dec
sbb
test
sbb
rolb
sti
mov
xchg
insb
addr16
mov
or
and
in
add
add
je
add
add
add
fucomi
in
sbbl
push
insl
jne
cmp
mov
nop
add
pop
mov
and
sbb
pop
iret
mov
xchg
mov
pop
dec
popf
repz
fwait
movsl
dec
sbb
jne
in
add
lahf
adc
xchg
stos
clc
add
lods
scas
filds
data16
les
enter
add
mov
icebp
popa
add
sub
add
sbb
pop
fwait
cmp
lds
push
dec
add
add
mov
add
nop
push
mov
cli
ret
mov
out
adc
imul
jg
add
sub
shlb
pop
cli
in
mov
dec
add
push
and
fadds
jge
pusha
adc
gs
push
add
xchg
add
lret
mov
lods
stos
or
pop
add
lds
clc
pop
divl
dec
js
add
jp
icebp
clc
cmp
or
push
pop
add
add
push
adc
out
push
iret
sub
xor
clc
das
iret
ret
pop
sub
xchg
mov
mov
add
ja
and
dec
and
mov
inc
sbb
add
aad
push
add
add
std
jae
jnp
mov
decb
adc
nop
bound
sbb
rolb
mov
xor
dec
mov
mov
sub
cld
jmp
test
dec
add
jge
xchg
ja
call
add
rolb
or
cmp
daa
add
fnstenv
add
jle
pop
add
addb
jne
add
repz
lods
mov
mov
xor
mov
aam
lods
push
jae
lods
les
sbbl
cmpsl
pusha
and
in
add
xor
cmp
pusha
jne
repz
mov
cwtl
push
leave
sub
inc
mov
add
sbb
cli
xor
movsl
ds
and
daa
ret
add
xor
lcall
roll
pop
pop
repz
cmc
sub
mov
cmp
inc
int
mov
inc
inc
lds
test
jmp
dec
or
lret
movsb
pop
cmp
add
call
and
in
xor
dec
sub
ret
test
push
add
push
test
mov
pop
shlb
fistpll
int3
jae
sbb
fists
into
addl
xchg
mov
fsubl
or
mov
popf
fstps
lea
xchg
add
scas
jne
add
sbb
pusha
push
xchg
pop
sbb
imul
inc
pop
inc
add
pop
dec
push
xchg
add
or
outsl
inc
mov
gs
outsb
xchg
outsl
filds
into
ret
push
add
cmp
xor
ficoml
sub
push
std
shrl
add
adc
add
mov
clc
sbb
xchg
cwtl
daa
xchg
pop
add
inc
repz
gs
lods
add
das
and
pop
fistps
cmpsb
cmpsl
pop
jb
fisubs
ret
es
lret
mov
inc
mov
cmp
push
sub
scas
repnz
mov
xor
loop
inc
add
les
jmp
cmp
cmp
out
imul
nop
cltd
or
add
or
push
dec
dec
add
add
jae
lret
add
jae
xor
repz
ljmp
or
cli
add
scas
adc
lods
sub
repz
inc
lea
leave
fistpll
stos
in
jns
and
outsl
lahf
je
addr16
add
lahf
xor
add
push
cwtl
fs
lea
pop
jne
mov
adc
lods
sahf
stos
add
mov
push
in
pushf
jmp
in
popa
dec
je
or
xor
and
inc
xchg
push
jecxz
mov
ljmp
xchg
inc
pop
xchg
push
add
add
dec
jb
sub
notb
fnstsw
mov
fs
arpl
dec
mov
mov
add
movhps
sub
add
add
push
xchg
test
sub
mov
add
and
add
xchg
add
dec
out
jno
fcomip
scas
lods
movsl
mov
or
ds
aam
pop
push
cmp
and
dec
add
and
jne
cmpb
add
inc
int
cld
lea
cmpl
jnp
jb
or
inc
adc
pushf
and
daa
roll
sbb
mov
adc
and
sbb
arpl
test
cs
cmc
add
stos
xor
xchg
or
dec
add
fnsave
and
aam
jnp
xchg
cltd
xchg
mov
fldl
cmp
leave
cwtl
inc
xor
lcall
pop
and
ret
out
adc
dec
add
inc
push
lds
cmp
jb
ja
add
rolb
hlt
lock
add
xchg
inc
sahf
mov
add
fdivl
out
adc
in
add
insl
filds
pop
add
rcrb
mov
or
add
sub
les
je
add
lret
mov
addr16
jp
add
mov
mov
add
inc
lahf
add
adc
add
push
pop
call
add
repz
pop
jnp
mov
mov
mov
add
mov
pop
nop
add
pop
jno
ret
inc
out
mov
cmc
add
add
rorb
pop
aas
add
maxps
mov
mov
add
sub
rorl
out
scas
aam
bound
cmpl
or
cli
faddl
or
out
call
fcmovnu
stos
test
pop
lods
popa
add
jecxz
test
mov
xchg
jecxz
rolb
add
add
aad
push
xor
add
xchg
cli
outsb
add
or
addps
jp
xchg
cmp
jns
mov
outsb
sbb
loop
arpl
mov
push
outsw
sti
mov
jb
inc
add
mov
in
mov
add
stos
in
add
aam
add
adc
sub
jmp
push
add
add
jmp
push
cmpsb
add
jae
ror
insb
push
xor
xchg
sub
int3
stc
or
push
sti
xor
ss
push
mov
daa
sbb
dec
xchg
int
fildl
std
add
icebp
loope
outsb
aas
add
add
sbb
xor
scas
ret
imulb
inc
xchg
in
dec
imul
xor
loop
add
cmp
or
sar
add
pusha
out
jl
jmp
fwait
add
pushf
stos
mov
iret
inc
add
push
cmc
jge
mov
mov
int
scas
add
xor
inc
cltd
mov
inc
xchg
mov
bound
sub
mov
push
into
sti
aam
jo
scas
mov
push
cmp
add
cltd
lret
sbb
add
jp
add
in
jne
and
out
adc
push
add
test
mov
rorb
cmp
mov
mov
jg
inc
add
not
or
xchg
push
jmp
lock
add
cmp
mov
lea
add
push
stos
jbe
in
push
out
outsl
push
subb
mov
sbb
pushf
ss
lods
jne
dec
mov
insb
and
les
mov
sti
xor
or
divl
dec
dec
popa
lahf
icebp
push
sub
xchg
pop
out
jecxz
add
sbb
add
pop
sub
add
nop
add
add
adc
add
shl
mov
nop
test
pop
idivl
sub
cltd
push
inc
pushl
bound
lea
dec
aam
or
popa
cmp
int3
test
pop
push
pop
adc
test
xchg
verr
ja
mov
and
cli
jecxz
cli
add
fwait
push
call
bound
push
stc
lods
push
add
dec
pop
add
add
push
cwtl
pop
outsb
ret
and
and
add
movsl
push
stos
push
ffree
dec
xchg
icebp
mov
pop
mov
js
jecxz
add
push
add
cmp
mov
testl
xor
aaa
out
int3
mov
inc
sub
and
cmp
or
or
mov
or
adc
sub
push
push
test
lret
lret
sbb
or
int3
cmpsl
push
add
sub
dec
pop
push
lahf
call
into
inc
dec
xor
pop
mov
icebp
adc
cmp
add
lret
add
shlb
push
outsb
sbb
inc
psrlw
iret
push
xor
mov
jb
pop
cmpb
cli
lret
jnp
cwtl
add
out
je
xchg
adc
mov
push
pop
add
cli
enter
add
sub
notb
icebp
add
lahf
lods
test
cwtl
icebp
test
pop
fs
mov
cmpsb
sub
or
loopne
jne
fs
dec
add
aad
adc
jl
xchg
ltr
xchg
inc
xor
cli
dec
in
xchg
xor
inc
pusha
cmp
iret
pop
cmp
mov
jmp
out
mov
push
add
push
push
add
inc
shrl
push
and
pop
imulb
cltd
push
stos
fnstenv
stos
bound
inc
jle
push
aad
aaa
xchg
dec
movsl
jmp
jno
popa
pop
test
jp
add
dec
pop
push
add
xor
add
add
aam
inc
or
lock
mov
cltd
shlb
test
fistpll
subb
pop
mov
cmpsl
pop
cltd
mov
gs
imul
push
addl
add
jnp
aas
add
testb
adc
les
sar
ficoml
cmp
add
adc
mov
xchg
or
lea
or
xchg
add
andb
pop
scas
daa
in
fldcw
push
lock
inc
push
sub
push
fistl
add
int3
add
mov
mov
and
adc
es
clc
adc
cmp
gs
cmp
adc
nop
jecxz
das
lret
cmp
dec
mov
and
sbb
sbb
pop
sbb
inc
test
cs
cmpsl
jo
or
int3
push
xchg
repz
stos
inc
jns
xor
jae
sti
mov
lds
pop
call
xor
filds
cmp
mov
rolb
loope
adc
rol
enter
inc
push
sbb
stos
orl
or
cmpsb
mov
add
hlt
or
add
jns
mov
pop
insb
add
scas
add
arpl
xor
in
movl
aad
nop
cmc
notb
add
and
jle
testb
aam
jbe
icebp
pop
test
fsubl
mov
add
push
sahf
cmc
inc
sbb
inc
outsb
ficomps
add
mov
push
mov
mov
add
add
add
dec
push
add
adc
pop
fimuls
inc
shr
jge
pop
inc
pushf
clc
into
jp
jle
sbb
push
test
add
add
xor
mov
or
xchg
rol
add
bound
mov
adc
fiaddl
cmpl
loop
addr16
into
out
and
xor
insl
jmp
jecxz
adc
inc
sub
inc
jo
je
jecxz
testl
add
sbbb
sub
xchg
add
test
mov
sbb
or
pop
xlat
addl
pushf
and
cld
jo
cmp
dec
testb
cmp
test
push
inc
mov
into
inc
ret
int3
mov
mov
je
xor
dec
sbb
xor
and
push
ss
xor
or
lods
add
xchg
movl
jle
dec
hlt
out
add
repz
mov
scas
clc
and
imul
in
ja
pop
add
xchg
fadds
lods
pop
jmp
inc
lahf
add
mov
shrl
andb
outsb
aas
adc
cmp
add
add
add
adc
mov
add
push
add
scas
stos
mov
ss
ret
xchg
xchg
or
mov
mov
insb
fstpl
cld
xor
add
gs
cmc
ss
in
cltd
xchg
add
bound
addl
fwait
add
negl
push
push
xor
xor
xchg
adc
daa
ret
clc
add
cmpsl
cmpsl
and
outsl
xchg
add
mov
repz
xchg
out
push
mov
push
xor
jmp
leave
sub
jl
mov
es
addl
xchg
insl
in
sub
inc
mov
mov
in
sbb
adc
add
daa
aad
mov
mov
add
shrl
nop
lcall
scas
je
lret
aam
xor
add
dec
insb
lea
cmp
push
pop
cmp
mov
push
lret
and
das
push
pop
jb
and
mulb
hlt
imul
jb
pop
sbb
scas
push
cmp
mov
js
adc
add
lock
dec
add
out
add
in
sar
dec
fwait
add
andl
and
mov
adc
enter
and
test
jno
add
adc
inc
sbb
mov
xor
or
xchg
inc
lods
call
js
push
inc
add
int3
add
pop
les
popf
hlt
lahf
rcll
scas
mov
insl
mov
jo
add
xor
sbb
xor
call
int3
push
mov
push
es
ret
mov
js
push
pop
stos
ljmp
or
dec
mov
mov
imulb
add
fcoml
cmp
lods
add
mov
lds
mov
sub
nop
adcl
mov
mov
sbb
loop
fisubs
mov
fists
mov
test
add
out
add
in
add
mov
pop
ret
cmpsb
insb
add
inc
fdivs
xor
lahf
sbb
subb
add
add
mov
xlat
push
addl
add
es
add
mov
out
sub
inc
je
lcall
xchg
shlb
sbb
add
xor
in
dec
push
and
fwait
xlat
inc
outsl
jecxz
popa
mov
jecxz
sbb
xchg
mov
pusha
jnp
popa
dec
mov
imul
push
sarl
and
cmp
sbb
inc
or
movsb
lods
sub
add
mov
or
repnz
lods
andl
xchg
mov
or
jb
xchg
push
add
add
add
mov
mov
sbb
dec
cmp
pop
sbb
outsl
xor
stos
cmp
into
inc
adc
xchg
sbb
adc
ret
and
imul
inc
rcrb
dec
mov
movsl
call
and
mov
aad
xor
xor
sbb
in
cwtl
loop
negb
add
cld
mov
dec
jle
pop
dec
imul
insl
dec
sub
push
cli
add
imul
stos
jns
jge
or
and
iret
outsb
lods
jl
add
dec
pop
push
call
pop
pop
and
popf
or
cli
add
add
rclb
mov
sti
jmp
or
popf
loopne
or
jmp
or
xchg
int3
test
lods
and
aaa
adc
ret
xor
push
jg
and
nop
xchg
leave
adc
sub
cmp
jno
add
fstps
cmp
cmp
add
jns
stos
jnp
icebp
aad
sub
lock
jmp
loopne
lcall
lods
push
fistl
sbb
add
add
fdivs
sbb
inc
push
sbb
push
jnp
and
jle
in
xor
aaa
negb
ss
mov
dec
sub
ror
addb
xchg
add
imull
ret
add
pushf
add
jle
jns
enter
sbb
testb
pusha
push
cmp
push
dec
ret
scas
sub
add
sbb
nop
add
push
addb
movsl
adc
pop
shrb
in
pop
mov
add
loopne
adc
lahf
and
mov
cmp
dec
add
add
icebp
jge
sar
push
cmp
inc
sub
movsb
fwait
call
pop
pusha
call
add
sbb
add
inc
add
hlt
sbb
out
add
imul
xor
jge
add
sub
loope
inc
mov
pop
imul
out
mov
sbb
out
mov
sub
call
data16
dec
xorl
pop
pop
and
out
sahf
sarl
mov
fcoml
adc
push
mov
add
jg
add
dec
ret
dec
cmp
das
jg
es
inc
add
mov
into
add
mov
hlt
xchg
sub
dec
outsl
idivb
es
cmp
inc
out
out
inc
neg
push
jo
pop
out
cmp
adc
add
add
jno
push
cmp
repz
add
ss
in
repz
add
pop
les
mov
xor
xchg
mov
mov
cmc
adc
jne
push
scas
leave
pop
push
pop
inc
push
push
das
adc
into
mov
cmp
insl
pop
xchg
lcall
in
push
and
pop
jnp
pop
mov
sub
adc
xor
xchg
call
xchg
movsb
add
add
add
sti
enter
jno
insl
mov
push
roll
pop
loop
push
loopne
push
fdivr
ds
int
cmp
sub
bound
int3
cltd
xor
pop
cmp
push
repnz
xor
mov
mov
into
lcall
std
push
inc
mov
pop
leave
testl
js
ret
nop
push
enter
mov
xor
popf
test
aaa
or
add
sahf
fsubs
mov
test
add
jle
add
repz
xchg
or
fiadds
dec
cs
pop
icebp
inc
mov
jl
sub
fidivl
fwait
mov
adc
aaa
mov
rorl
aam
pop
js
imul
push
insb
lods
cld
xor
xchg
pop
cli
int
stc
dec
cld
add
add
es
pop
imul
std
enter
jg
clc
dec
int3
cmc
test
add
fsts
cmc
push
or
add
xchg
dec
fwait
add
push
xchg
lea
cmc
push
jo,pt
lcall
movsl
mov
bound
jl
push
mov
xchg
fists
add
add
add
hlt
jmp
push
pop
shlb
popf
add
add
mov
add
add
lea
decb
add
add
scas
add
and
add
sub
jle
stc
pop
leave
jmp
add
cmp
cltd
push
in
mov
xorl
add
dec
push
mov
or
push
jno
add
rol
adc
add
cmp
movsl
add
lret
add
lcall
sub
adc
xchg
std
or
sbb
mov
sub
cmp
add
daa
adc
add
add
add
daa
xchg
xor
pop
xor
inc
pop
call
sbb
mov
mov
xchg
mov
add
lret
cmp
sbb
adc
pop
add
jbe
pop
stc
add
call
lea
add
cli
mov
loopne
pop
or
cmp
or
scas
dec
lret
push
lock
cs
shll
push
pop
add
lock
sti
add
fs
js
mov
movq
cmpsl
fwait
inc
pop
dec
push
adc
jns
lods
flds
lds
cwtl
jns
xor
xchg
xchg
or
add
movsl
add
adc
add
pop
lds
psrlq
daa
sub
add
xor
mov
aaa
sub
lock
sbb
das
pop
dec
mov
mov
add
lods
mov
mov
add
jg
mov
stc
push
or
add
mov
pop
movsl
add
fsubs
add
dec
mov
int
aad
mov
movsb
xchg
test
mov
mov
xor
insl
mov
and
pop
and
js
mov
xchg
sub
das
scas
adc
es
add
fs
add
inc
movsl
add
dec
cmp
cmp
adc
pushf
inc
xchg
ja
cmp
inc
add
add
jae
add
add
jmp
repz
mov
aad
imul
fstpl
adc
shlb
fldl
in
add
mov
pop
in
adc
sub
add
pop
mov
add
es
jb
mov
push
or
test
xor
mov
jmp
bound
push
js
add
dec
dec
jnp
stos
and
inc
add
xor
or
add
push
jnp
repz
ret
jl
mov
jns
dec
es
mov
xchg
add
je
adc
ret
add
loop
push
add
push
sub
movsl
cli
ljmp
arpl
dec
or
test
pop
add
jnp
or
js
dec
das
mov
mov
or
dec
push
add
add
cli
ljmp
cmp
add
adc
lods
sub
inc
cld
sbb
adc
and
imul
addb
mov
je
xchg
pop
add
pop
and
loop
arpl
rolb
rolb
bnd
add
inc
jnp
filds
add
lea
push
pop
addr16
mov
cld
lahf
cmp
sbb
add
lret
adc
cwtl
dec
add
stos
xchg
out
ret
stos
jmp
jmp
ds
jb
jns
lea
push
sbb
arpl
dec
jp
ja
fadds
add
enter
adc
adc
mov
leave
pop
iret
and
out
movsb
add
imul
mov
lods
test
push
push
stc
ret
sarl
add
add
int3
jmp
iret
add
aas
push
adc
aad
incl
sbb
add
sub
shlb
or
xor
repz
arpl
bound
or
sub
outsl
stos
xchg
aam
sbb
cwtl
add
and
pop
or
gs
in
ret
jg
sub
roll
imulb
orps
xchg
inc
outsb
cmpl
mov
movsl
add
movsl
dec
in
in
mov
repnz
out
xlat
cld
pusha
xchg
pop
inc
mov
addr16
movsb
sahf
add
into
mov
add
inc
dec
cmp
fnstcw
mov
xor
ljmp
xchg
je
sub
add
push
imul
dec
jp
aad
imull
add
out
mov
in
add
stos
shlb
addr16
adc
mov
lds
sub
pop
enter
push
add
cli
push
add
and
fnstsw
and
outsb
int
fldenv
add
cmp
popa
cmp
or
adc
jno
lock
inc
stos
add
xor
in
jecxz
add
pop
or
add
faddl
push
cmp
add
push
add
jle
insb
xor
data16
lcall
call
lea
push
je
mov
je
adc
lea
pop
add
iret
xor
xor
out
repz
add
jge
mov
pop
inc
bound
mov
jl
xor
test
loop
push
add
push
fucomip
addr16
les
test
jo
imulb
lods
sub
fisubs
movsl
mov
or
add
add
cs
add
add
jo
add
je
loope
xchg
cmp
daa
gs
loopne
mov
xchg
popf
iret
adc
cwtl
in
cmp
push
fistpll
fidivs
inc
scas
aas
xor
icebp
mov
cmp
xchg
rolb
clc
xchg
add
leave
out
sub
add
and
add
sbb
add
or
sti
ret
mov
in
or
jg
in
leave
push
pop
popa
dec
das
or
outsb
add
mov
mov
mov
add
cmp
sub
cltd
gs
jno
or
inc
jmp
sarb
dec
add
insl
sub
mov
lret
in
pusha
sub
lods
push
mov
std
mov
nop
mov
aas
cmp
jl
mov
add
out
outsb
add
mov
xchg
or
push
data16
add
cmp
or
popf
das
xchg
sub
add
fnstsw
add
cmpsl
popa
push
fcmovne
ja
out
and
outsb
ret
test
xlat
sub
cmp
add
fwait
pop
fisubl
dec
mov
in
add
adc
add
outsb
mov
add
cwtl
addr16
sub
ljmp
push
push
cwtl
test
cmpsl
sti
jmp
mov
ror
add
and
loopne
push
rol
loopne
xchg
int3
xlat
lods
lock
and
stc
imul
test
lcall
pop
in
sub
mov
roll
pop
rclb
mov
or
and
out
out
mov
jns
add
sbb
lea
leave
xor
mov
push
jbe
popl
xor
lods
jmp
gs
dec
push
xchg
out
lock
fbld
lea
push
and
add
fimuls
in
sub
or
es
shrb
add
repz
subl
adc
add
mov
add
xorb
xor
mov
jl
cwtl
daa
jo
inc
fnstcw
sbb
rorb
mov
push
mov
ja
inc
add
mov
xchg
or
mov
cmc
mov
iret
in
sub
sub
aam
je
je
xlat
add
sub
ret
jno
jbe
jle
test
scas
rcr
add
pop
dec
pop
add
fs
add
mov
cmp
shrb
jg
ljmp
iret
std
dec
jnp
inc
sarl
xchg
shlb
pusha
sub
stos
pop
add
push
fsubr
insb
dec
lods
cmp
movsb
aaa
fists
xchg
sbb
out
int3
lea
in
add
pop
hlt
sbb
pusha
add
rcll
out
frstor
or
adc
add
push
roll
mov
js
adc
cltd
lea
movsl
aas
and
sub
add
sti
test
test
add
xor
mov
xor
and
sahf
imul
inc
lret
add
sbb
in
push
cmp
leave
shll
push
out
sbb
pushf
iret
cmp
mov
out
inc
subl
aaa
sub
add
fildll
push
mov
mov
es
test
mov
dec
inc
pop
xor
and
aam
lock
ds
add
fnstcw
mov
xchg
test
call
jle
shlb
inc
add
cmp
jl
mov
mov
into
lret
jg
js
cmpsl
repnz
pop
pop
mov
cmp
jns
cs
xchg
jno
in
nop
mov
fs
mov
imul
addb
and
lret
add
insb
push
sbb
add
add
xchg
mov
call
movsl
sbb
cmp
mov
rolb
or
adc
inc
mov
add
imul
jp
add
and
xchg
adc
add
push
xor
inc
mov
stos
add
enter
js
jge
les
test
jbe
icebp
pusha
adc
add
lock
scas
add
bound
ja
sub
mov
jnp
xor
fs
mov
rolb
fcomip
add
dec
pop
push
lea
xchg
xor
mov
push
cmp
add
mov
pop
add
movsl
cmp
sub
xor
stos
mov
repz
clc
out
lret
stc
add
xchg
iret
or
add
cmpsb
popa
movsb
or
int
outsl
stc
sub
clc
in
cmpsb
sub
sub
lret
mov
inc
add
aam
or
sbb
mov
jge
add
jnp
dec
sbb
xchg
sbb
mov
sarb
mov
dec
out
xchg
iret
sbbb
xchg
das
pop
mov
dec
jns
xor
sub
add
arpl
add
push
and
xchg
les
add
fwait
aam
ja
cwtl
mov
pop
aam
mov
xbegin
add
or
or
add
push
add
mov
and
int
xchg
mov
mov
cltd
stos
add
cmp
aas
test
add
add
inc
pop
fnstenv
or
insb
adc
cld
gs
add
and
inc
add
add
mov
bound
inc
adc
testl
jecxz
xchg
or
sbbb
add
jo
mov
lret
mov
add
pusha
add
adc
sbb
iret
faddl
inc
in
inc
call
sub
addb
jge
repz
inc
jbe
mov
cld
fadds
les
rolb
add
mov
add
pop
add
mov
jnp
mov
loope
mov
inc
mov
pop
shl
out
mov
jle
adc
incb
and
out
add
add
std
scas
jmp
jmp
cmc
mov
add
daa
adc
jmp
add
subb
cmp
adc
scas
or
add
push
mov
icebp
into
add
push
cmpsb
push
jle
lds
and
add
push
sub
pop
stos
enter
sub
push
dec
rcrl
jns
xchg
inc
clc
adc
data16
movsb
sub
loope
in
or
jecxz
and
pop
jbe
shrl
aaa
jmp
cs
lret
sbb
dec
out
fildll
lcall
xor
xchg
das
cli
push
adc
pop
in
es
testb
rolb
roll
add
es
add
pop
les
jp
mov
mov
push
imul
stos
fnstsw
test
jle
pushf
mov
jo
sarl
dec
cmp
mov
hlt
leave
jno
pop
decl
fbld
dec
mov
ss
add
shll
sti
pop
fs
add
xchg
aad
cld
loop
add
lods
je
test
pusha
pop
or
out
mov
xchg
add
add
movsl
pop
cmp
cmp
into
ljmp
and
cmp
mov
xorl
je
push
mov
mov
push
adc
add
push
mov
add
mov
div
fsubrs
add
and
add
cmp
push
hlt
ret
js
insl
aaa
clc
fs
sbb
rcrl
add
popa
mov
mov
dec
push
cmp
sbbl
jno
aas
xchg
ret
sbb
add
loop
imul
xchg
outsb
add
pop
and
xchg
add
adc
fnstsw
mov
or
mov
push
sub
dec
add
pusha
les
shr
adc
sub
xor
add
mov
je
add
jnp
add
sbb
arpl
adc
adcl
loopne
jmp
pusha
int3
cmp
out
mov
mov
sbb
lret
sbb
jmp
fninit
add
mov
dec
mov
cmp
xchg
clc
mov
imul
out
inc
add
jmp
int
sahf
xor
and
out
mov
sahf
jne
mov
mov
xlat
jo
adc
inc
add
mov
adc
mov
push
cmc
rorb
and
stos
sub
mov
add
cld
push
mov
add
push
popa
movsl
xchg
outsl
cld
ficompl
loop
imul
mov
xlat
addr16
mov
adc
push
inc
incl
nop
lret
das
iret
int3
xchg
test
cmp
cmpsl
pop
xchg
movsl
fnsave
add
adc
outsb
into
mov
or
add
popf
dec
add
and
jp
mov
stos
push
cmpsl
outsb
addr16
int3
add
jle
sbb
imul
xor
add
adc
add
clc
and
jns
mov
adc
loope
add
clc
xchg
jbe
sbb
sar
addl
out
add
mov
xchg
jmp
xchg
in
mov
cltd
ud2
add
sub
xor
mov
out
sub
add
stc
add
and
std
fs
cld
jns
adc
xchg
or
jnp
inc
adc
es
adc
arpl
icebp
add
mov
or
lahf
dec
jo
add
repnz
add
add
or
jl
gs
nop
stos
call
lock
jae
mov
in
push
push
jp
push
lods
xchg
sahf
add
dec
hlt
add
xor
push
repnz
pop
sub
xlat
data16
xchg
les
loop
call
scas
and
arpl
sub
add
jo
mov
fnstenv
xchg
es
push
add
in
testl
ljmp
add
jne
inc
movsl
mov
push
faddl
sbb
cld
sarb
sub
das
push
out
add
add
jo
push
lock
sub
add
mov
xchg
add
imul
add
add
add
fildl
icebp
cmpsb
sbb
mov
push
mov
xchg
pop
int3
jno
add
jno
int
sahf
popa
fwait
int
int3
imul
push
pushf
add
add
fisttpl
testl
scas
add
fimull
pop
hlt
add
js
xlat
xchg
js
popf
sbb
jge
add
add
mov
xchg
gs
pop
pop
xchg
dec
add
faddl
cmpsl
lods
lds
push
mov
int
sbb
inc
mov
std
loop
setle
or
lret
popf
mov
paddsw
popa
or
pushl
jnp
jno
xor
stc
std
sti
orl
es
cmpsl
cli
push
xchg
out
inc
flds
addr16
fcomps
mov
mov
add
add
andb
test
pop
add
and
sti
ss
ja
sub
add
cld
add
repnz
test
push
int3
push
sub
lock
add
mov
popf
andl
xchg
and
add
cltd
popf
add
cmc
mov
addr16
in
dec
jo
xchg
fcoms
cltd
push
lahf
int
sarl
lret
int3
ffree
dec
push
jno
mov
or
enter
add
cmpsl
shll
repz
jae
dec
mov
or
imul
fisubs
jns
add
fdivrl
pop
add
push
or
mov
cmp
mov
mov
imul
add
pop
push
fsts
add
adc
push
popf
mov
sarl
xchg
repz
stc
sbb
jge
adc
xchg
jl
lea
add
mov
arpl
lea
mov
and
arpl
aam
mov
jno
push
mov
or
add
lods
mov
je
push
pop
mov
mov
and
scas
mov
add
add
inc
les
cmpsl
xchg
pop
fmuls
test
add
test
int
adc
adc
xor
add
lods
and
mov
add
mov
popf
mov
mov
nop
mov
in
xchg
faddl
cmp
push
dec
and
rolb
add
or
xchg
movsb
xor
cmp
imul
push
push
xchg
mov
out
sahf
dec
adc
sbb
adc
dec
outsb
fs
jg
fdivrl
es
lds
shlb
in
sub
enter
or
xchg
aaa
mov
inc
call
ret
loopne
cmpl
push
outsb
xor
jl
or
push
ljmp
adc
push
enter
cld
add
or
dec
inc
es
mov
mov
call
mov
arpl
add
imul
jg
sbb
mov
sub
scas
add
es
and
xchg
push
add
insl
je
pusha
adc
add
lahf
cmp
in
add
cmp
push
scas
jne
leave
mov
sbb
popf
stc
ja
popl
dec
add
popa
jb
cmp
out
adcl
pop
lcall
push
add
pushf
sub
xchg
rcll
or
sahf
les
test
mov
decl
stos
jns
push
js
add
cmp
cmp
subb
adcl
push
std
adc
bound
sub
movsb
add
mov
pop
mov
pushw
add
inc
sbb
add
pop
movhps
inc
add
mov
leave
jmp
call
add
push
out
jne
cwtl
add
inc
adc
push
inc
ja
cmovno
fs
inc
imul
cli
mov
add
ds
add
mov
in
xchg
stc
push
mov
iret
xchg
add
sub
out
cwtl
movsl
cmpsb
ret
mov
and
xor
add
test
test
mov
add
adc
loopne
pop
or
cmpsb
ret
jne
decb
jecxz
dec
sbb
pop
aam
add
inc
sbb
fidivs
add
sub
and
pop
add
pop
in
mov
xor
sbb
rcll
jle
dec
push
inc
mov
add
daa
addb
mov
inc
imul
sti
add
or
and
mov
call
add
dec
nop
inc
test
inc
test
out
popa
mov
nop
aam
cmpsb
clc
movsl
add
xchg
push
add
cmpsl
shlb
fidivrl
xor
add
sbb
dec
loopne
mov
clc
mov
pop
and
mov
jp
aad
inc
daa
sbb
mov
out
mov
jne
mov
push
add
adcl
dec
sub
xchg
pop
xor
pop
arpl
leave
add
int
test
test
add
leave
loop
cmpsl
add
in
mov
sub
pop
sub
rolb
repnz
lret
jecxz
enter
arpl
sarb
or
in
ret
cmp
in
or
push
xchg
ret
insl
dec
popa
jle
leave
add
mov
ja
or
lahf
add
mov
mov
mov
iret
inc
mov
xor
add
mov
sbb
lds
mov
push
invd
popa
and
repnz
and
dec
add
in
add
fsqrt
test
je
sub
mov
cmp
xor
inc
add
jne
add
lcall
pop
movsb
inc
add
inc
in
pop
pop
test
jp
pop
sub
and
lea
inc
add
jb
lcall
sbb
jecxz
push
mov
pop
es
add
xchg
fldl
repz
cmpsl
sub
add
jo
push
call
mov
shl
or
mov
mov
roll
mov
loope
sbb
jo
or
mov
push
or
mov
sub
data16
filds
or
out
dec
xchg
or
subb
xor
dec
lret
bound
or
lret
flds
inc
cmpl
std
ss
sbb
xor
inc
xchg
test
add
add
sub
push
iret
mov
cmpsb
xchg
push
sub
xchg
pop
add
xlat
push
int3
lods
popf
mov
mov
cmc
add
cwtl
pop
lods
jne
pop
and
xor
add
stos
pop
add
cli
fdivrs
fisttps
sbb
fldt
mov
popa
movsl
pop
add
fcomps
push
pop
push
xchg
add
ja
adc
push
out
xor
fnstenv
mov
jge
push
xchg
pop
add
mov
movsl
cmpsl
mov
pop
lret
add
lcall
insl
jns
popa
push
adc
cmp
dec
scas
movsl
mov
add
mov
in
insb
xor
stos
add
ret
inc
sti
mov
jecxz
jge
mov
mov
in
add
arpl
adc
das
leave
jg
add
loope
mov
rol
fidivrl
cmc
dec
mov
xor
add
dec
cmp
mov
add
lock
testb
xor
pop
lret
xor
add
xchg
mov
loopne
pop
bound
jo
ret
dec
push
movsl
push
mov
stos
dec
js
add
dec
dec
add
test
mov
jl
inc
outsb
and
sbb
aam
jmp
call
adc
rcr
jle
and
add
out
loop
ljmp
dec
xor
and
leave
cmp
mov
ds
add
push
pop
and
incl
mov
jbe
cltd
xchg
xchg
add
lret
stos
mov
iret
fsubrs
lcall
add
js
dec
out
bound
fwait
add
xchg
inc
add
imul
jmp
xchg
nop
in
adc
mov
xorb
push
add
fldt
gs
lcall
cmpsl
mov
movsl
inc
xchg
lods
iret
inc
bound
add
into
mov
xchg
inc
andb
rcrb
out
mov
xlat
arpl
sub
sub
add
in
jbe
flds
decb
push
mov
aas
pop
sbb
xchg
gs
inc
loope
insb
rorb
pop
popa
mov
ljmp
add
in
ljmp
pop
pop
jmp
mov
jnp
xorb
sahf
mov
outsl
ret
das
xchg
leave
xchg
ss
lods
mov
dec
sbb
fwait
mov
xchg
mov
add
shll
and
dec
inc
lock
jnp
mov
js
pop
je
aaa
lret
jne
or
inc
adc
dec
or
push
sub
in
add
ficompl
aaa
push
mov
daa
or
push
and
add
sub
mov
add
test
sbb
xor
call
jno
or
repz
xchg
stos
fadds
jle
int
outsl
ja
add
rcrb
imul
push
pusha
or
out
cmp
ljmp
inc
adc
ficoms
xor
repnz
and
cmp
add
mov
out
mov
in
call
bound
push
out
shll
fldcw
add
inc
fdivl
xchg
and
pusha
sbb
outsl
test
dec
jp
xchg
xor
cwtl
fisttpll
inc
cwtl
test
add
or
das
jge
inc
popf
cmp
loop
xchg
test
in
aam
and
sub
mov
add
add
add
mov
lods
adc
setns
pop
je
jnp
insl
inc
jo
jmp
mov
std
add
adc
adc
shll
imul
mov
inc
xchg
cmp
in
test
adc
dec
xchg
loopne
add
jge
inc
call
ljmp
pop
mov
stos
into
mov
sbb
pop
testl
add
arpl
inc
xchg
arpl
iret
add
add
and
cmp
xchg
xchg
or
hlt
sub
jno
scas
bound
ret
loope
and
les
jns
pusha
dec
add
add
inc
mov
xor
movsb
das
xchg
xchg
or
cmp
or
add
fstpt
push
add
and
add
stc
scas
adc
and
add
orl
cmp
repz
pushf
add
push
jg
mov
sbb
stos
inc
add
in
jg
sbb
fmull
add
roll
xchg
scas
push
insl
ljmp
dec
add
jl
mov
ror
aaa
pusha
in
loop
fs
push
and
shl
out
imul
add
mov
inc
adc
sarl
add
lea
add
and
je
xlat
mov
ficoms
add
dec
or
add
movb
inc
sti
lock
test
mov
jle
jbe
add
mov
add
mov
add
cmc
fldenv
and
sub
out
mov
fldenv
mov
add
out
or
lock
sti
xchg
test
add
stos
mov
dec
add
mov
xor
mov
mov
fisubs
add
lahf
add
and
and
add
add
ror
cmpsb
push
xchg
inc
add
sub
adc
add
mov
std
xchg
flds
mov
mov
add
mov
add
jge
call
mov
test
pop
pop
mov
sbb
insl
das
lods
xchg
testl
and
lods
mov
enter
adc
test
pop
incb
cmp
rcrb
ss
add
jne
jno
and
add
ret
mov
repnz
add
mov
adc
push
andb
test
dec
mov
rorb
jo
leave
fidivs
or
mulb
repnz
xor
add
shlb
inc
insb
cmpsl
sub
lock
mov
mov
out
adc
popa
rolb
lret
xchg
sub
mov
subps
pop
mov
add
inc
pop
mov
mov
jge
sbb
xor
cmp
ljmp
add
push
xchg
mov
icebp
imul
cmpps
xchg
adc
xor
and
cmp
and
xlat
inc
lcall
pop
dec
dec
mov
call
inc
sub
or
outsb
jle
sbb
cmpb
add
sbb
aas
push
pop
ret
jbe
push
or
das
cli
rclb
jo
aad
xor
enter
lock
lret
mov
sub
hlt
mov
sbb
orl
add
loope
sbb
int
mov
push
push
sub
mov
leave
dec
or
mov
sub
aaa
movsl
aas
and
fisubrs
ljmp
or
jne
jp
sbb
pop
enter
jle
mov
sbb
sti
sub
cmp
cmp
jmp
add
jmp
js
add
fstpt
dec
mov
incb
inc
add
mov
lods
fwait
into
mov
ror
add
push
add
out
push
lcall
pop
stc
ss
add
add
pop
in
cmp
jns
add
inc
cmp
ss
push
clc
add
or
cld
sarb
jg
aam
add
pop
roll
test
fnstenv
sbb
fimull
roll
pop
mov
jno
inc
lock
popf
mov
add
pop
jg
out
iret
inc
test
add
outsl
mov
hlt
lds
push
sbb
add
sbb
add
adc
out
orb
mov
movsl
incb
push
iret
add
sub
cmc
jmp
xchg
xor
cmc
cmp
flds
sahf
imul
pushf
les
inc
add
dec
shlb
add
lds
lods
push
adc
add
cmp
jae
cwtl
jg
mov
mov
jge
push
jmp
popf
and
shlb
stc
pop
enter
mov
aad
xor
in
cltd
sarl
mov
cmp
add
fildll
cmpsb
loop
js
mov
sahf
or
add
add
aas
xchg
sbb
sbb
popa
or
dec
xor
test
rcll
dec
or
or
insl
mov
mov
mov
arpl
jns
push
add
xor
mov
xor
xchg
rcll
ss
inc
rolb
gs
out
js
sti
add
sub
mov
aaa
or
jge
push
cwtl
sub
mov
mov
jge
add
xor
scas
or
ja
mov
data16
cli
jmp
add
push
mov
rolb
in
mov
pop
add
sbb
sbb
push
xchg
add
jge
loopne
je
jbe
dec
gs
add
add
cs
sbb
add
push
inc
add
cmp
sbbb
mov
call
sbb
lods
bnd
add
mov
jno
ret
sti
dec
or
or
dec
popf
arpl
and
jp
lret
xchg
cwtl
mov
ret
add
test
bound
fwait
or
in
xchg
call
xor
insl
sub
mov
sub
js
xchg
sub
add
pop
add
push
fisubl
movsl
stos
pop
aas
adc
xchg
dec
stc
fwait
mov
push
jmp
test
data16
mov
pop
add
pop
adc
int3
xlat
imul
out
fcoml
leave
enter
lcall
aam
cltd
fs
add
add
cs
xchg
add
outsl
add
lea
pusha
add
pextrw
cmpsb
sub
and
repnz
add
bound
jmp
add
or
mov
xor
push
fisttpll
stos
aaa
add
out
fcompl
hlt
loop
gs
negl
outsl
cmc
data16
in
sahf
add
add
adc
mov
add
or
mov
leave
stos
sub
fs
inc
add
jp
and
lahf
shlb
add
jne
loopne
shrl
mov
jmp
xor
cmc
and
leave
add
xchg
inc
pop
push
adc
fistl
in
xor
sbb
xlat
out
jg
and
mov
add
test
in
arpl
popf
lea
or
push
testl
jb
inc
fwait
add
fs
adcl
sub
rcll
out
xchg
les
lea
jbe
rol
mov
imul
cs
pop
add
adc
xor
popa
add
jg
inc
into
add
adc
dec
jae
add
mov
jns
push
js
and
jge
js
push
mov
cmp
mov
add
adcb
fbld
cmpb
lret
xor
pop
dec
pop
and
fbld
or
and
and
push
cmp
pushf
push
add
cli
lahf
in
out
in
xor
or
add
or
popa
movsl
lahf
shlb
popf
xor
or
jmp
fsub
and
fdivr
add
movsb
mov
jbe
and
popf
fimull
mov
and
jbe
add
les
adc
leave
pop
add
add
push
lock
dec
int3
test
and
add
adc
add
adc
fwait
aam
mov
testb
aad
inc
xor
mov
add
dec
out
add
aaa
xor
es
les
mov
fiaddl
daa
add
rdtsc
adc
stos
add
repz
mov
mov
mov
mov
pop
mov
fimull
add
test
insl
mov
cmp
and
mov
add
add
dec
lahf
dec
aam
lock
cld
add
dec
jns
sbb
lret
mov
js
dec
cli
xor
lret
xchg
add
jmp
decl
add
add
daa
std
fildll
pop
jmp
sbb
aam
sbbl
xchg
mov
jb
cmp
add
add
add
dec
bound
js
add
or
movsl
cmp
cmp
popa
mov
pop
test
xchg
cmp
ljmp
outsl
js
and
leave
mov
or
add
lahf
dec
inc
cmpsl
xor
add
pop
aad
stos
in
add
dec
xor
or
add
add
test
xor
das
mov
mov
add
add
lods
nop
jmp
jae
test
scas
dec
sub
rcrl
insl
inc
xchg
scas
add
filds
mov
inc
add
xor
push
inc
pop
clc
mov
pop
sbb
dec
jp
lds
scas
adc
xchg
dec
jmp
gs
repz
shrl
pop
add
add
add
xchg
bound
push
xchg
adc
add
push
outsb
add
icebp
mov
or
mov
call
bound
icebp
fwait
jmp
sbb
xchg
cltd
push
enter
out
push
fdivs
add
pop
rcll
call
xchg
dec
pop
cvttps2pi
adc
ja
jmp
and
sub
cmp
push
adc
sti
adc
push
js
adc
xchg
fabs
pop
cmpsb
push
inc
ret
adc
xchg
faddp
push
xchg
adc
add
test
in
loope
int3
ja
dec
add
jecxz
jl
mov
mov
mov
mul
add
out
add
loope
fwait
jb
in
xchg
jno
or
movsl
das
jnp
add
or
sub
jge
pop
xor
add
mov
imul
lock
push
aam
add
outsl
lahf
lahf
sbb
loope
inc
popa
in
dec
js
in
fcmovnbe
mov
push
adc
inc
add
pop
and
jb
sbb
add
add
or
jmp
cli
nop
dec
dec
aas
mov
add
sub
and
adc
push
xchg
push
and
xor
xchg
inc
xchg
sub
add
add
lea
sti
or
in
jns
mov
or
sbb
or
testl
into
pop
cmp
mov
aas
out
dec
mov
rclb
data16
sbb
call
fildll
aaa
aam
ja
jmp
dec
jb
int3
mov
add
inc
jb
roll
mov
xchg
out
mov
dec
add
mov
lds
inc
sbb
add
add
es
jne
dec
add
jae
xchg
cmc
sub
push
lods
fwait
out
test
sbb
out
incl
movsl
mov
fisubrs
je
add
popf
xchg
xchg
cmp
scas
roll
inc
int3
sbb
daa
xor
or
loopne
adc
fcmovb
add
cmp
loopne
pop
or
add
xor
push
mov
push
fstl
ret
adc
daa
into
add
add
jne
add
cmc
adc
mov
mov
stc
add
push
adc
and
shrb
in
stos
or
inc
add
sbb
cmpsl
adc
mov
clc
inc
cmp
mov
mov
pop
mov
push
add
add
adc
fimull
in
pushl
imul
cld
bound
out
out
add
int
push
add
add
add
out
stos
sub
dec
leave
std
dec
mov
pop
jg
pop
loopne
rclb
add
add
out
into
add
dec
jecxz
xor
call
and
popa
add
cld
scas
mov
scas
das
add
test
xchg
cmp
mul
push
seta
push
push
adc
fldlg2
mov
pop
mov
mov
xchg
iret
pop
into
adc
aam
or
fildll
mov
nop
out
mov
push
jbe
jecxz
add
jmp
test
lods
add
pop
iret
pusha
lret
push
icebp
dec
fistpl
lahf
add
imul
cmp
add
test
imul
xor
filds
aas
in
xchg
add
jmp
pandn
les
test
call
ret
adc
mov
loope
movl
aad
sub
adcb
loopne
cmpl
jle
add
cs
xchg
cltd
and
sti
scas
add
add
imul
dec
into
lret
loop
add
in
push
add
mov
push
xor
es
jecxz
adc
std
aaa
xchg
mov
mov
pushf
sub
or
add
ret
sbb
add
jno
mov
add
push
das
jle
pop
jb
and
cmp
pop
xlat
subl
ds
push
scas
cli
cld
roll
add
cmp
add
cmp
cmp
add
pop
fildl
xchg
and
jnp
jp
push
testb
push
bound
add
add
dec
dec
das
cmp
add
add
sbb
add
pop
lds
cmp
scas
add
in
repz
add
inc
add
in
daa
xlat
lret
xor
cmp
lods
cmc
mov
fcmovb
xchg
das
sub
adc
mov
ja
int
xlat
leave
and
jnp
cmp
sbb
das
jae
adc
aaa
lods
sbb
push
xor
data16
out
mov
push
xor
adc
mov
mov
imul
mov
adc
dec
add
xchg
cmp
jae
test
cmc
mov
lahf
jg
es
into
jo
cmp
add
xchg
mov
mov
jno
nop
sub
pop
xchg
dec
ds
pop
mov
out
testb
scas
add
ret
sub
jbe
lods
jmp
stc
sub
mov
or
pop
add
push
mov
mov
mov
fcomps
sbb
add
or
mov
decl
add
add
out
scas
add
push
add
jb
sub
and
outsb
popa
sub
repnz
mov
das
cmpsl
mov
pop
lea
das
mov
mov
insb
add
in
sbb
std
add
aaa
add
jg
mov
add
aam
jp
mov
cmp
pusha
pop
push
push
mov
imull
ret
mov
data16
adc
je
or
or
dec
pop
add
mov
out
xchg
cmc
loope
outsl
push
mov
sar
pop
jne
xchg
adc
xchg
sahf
mov
sub
mov
cld
fisttps
mov
adc
push
scas
je
out
cltd
dec
jg
in
mov
xor
dec
add
add
dec
jb
shlb
cmpsb
fldl
js
int3
xor
push
je
mov
push
aad
xor
outsb
add
xchg
add
shlb
mov
or
loop
pop
gs
add
pushf
mov
adc
lea
lret
cwtl
rcll
add
subb
decb
das
push
roll
ret
add
repnz
push
inc
jl
mov
sub
inc
sub
lock
inc
lcall
scas
mov
jb
pop
aam
ret
mov
xchg
inc
jno
cmp
add
andl
sbb
xchg
mov
mov
pop
fstpt
enter
hlt
and
jmp
xchg
jg
repnz
enter
lock
cmp
iret
adc
mov
fcoms
sbb
ficompl
mov
rol
push
pop
add
add
pop
sbb
gs
je
pop
pushf
lds
stos
lret
pop
out
mov
mov
add
into
cmp
inc
jb
cltd
loopne
jecxz
adc
push
movsl
lcall
xor
ja
pop
repnz
repz
insb
rcrl
jp
inc
jp
mov
pushf
xchg
cltd
add
shl
add
lcall
add
inc
inc
repnz
aas
lea
hlt
push
out
xchg
out
fucomip
push
or
aas
mov
out
mov
cmpsl
adc
mov
lret
sahf
add
inc
bound
mov
push
faddl
mov
xor
jb
add
pop
inc
xor
or
cmp
cmp
inc
inc
add
cmpsl
test
in
add
adc
cld
adc
push
add
test
cmpb
dec
inc
sbb
dec
int3
pusha
add
stos
pop
push
addl
sbb
jle
add
mov
roll
sbbl
leave
add
push
add
mov
add
mov
xchg
add
repnz
cmpsl
pop
movsb
xchg
add
fisttps
mov
clc
in
sbb
out
sub
faddl
stos
inc
sbb
mov
or
mov
jmp
mov
mov
dec
cs
mov
fildl
push
add
add
mov
add
add
lds
data16
les
cmp
sbb
dec
pop
cmpsl
add
and
sbb
xchg
pusha
push
jmp
pop
push
lds
mov
and
mov
mov
add
add
add
outsl
inc
cmp
inc
pop
add
out
jne
and
xchg
sub
cwtl
sbb
int3
adc
dec
add
fmuls
aad
push
jns
sub
ja
add
add
ljmp
in
jmp
add
pop
jnp
add
iret
add
pop
add
in
xchg
stc
out
notl
mov
fcomp
rcll
or
scas
testb
bswap
mov
pop
add
jo
stos
cli
adc
aad
xorl
repnz
mov
mov
lcall
arpl
mov
rolb
nop
add
jg
jmp
lods
rorl
enter
scas
add
add
call
sub
stc
lret
fwait
stos
popa
dec
add
outsb
dec
mov
in
dec
imul
add
cmpsb
dec
mov
leave
sbb
add
shr
lahf
iret
add
lods
xchg
roll
add
sub
and
xchg
push
in
jo
jge
xor
lods
push
mov
addr16
popa
push
jnp
cmp
ret
pusha
push
add
xor
loopne
enter
in
movsl
pop
add
pop
loop
add
add
push
jne
jl
fadds
xor
addb
mov
jno
jg
xor
cmp
cmp
mov
lahf
es
dec
dec
cmpsb
loopne
stos
enter
dec
sbb
adc
inc
sbb
gs
testb
sbb
call
adc
or
out
mov
dec
out
std
jns
cld
and
jge
rcrb
or
inc
cld
xchg
mov
jle
and
iret
mov
push
in
lea
push
rol
in
movsb
std
jno
outsl
xor
lock
aam
out
pop
sub
sarb
add
sti
and
gs
shrl
pop
pop
dec
daa
jge
lahf
negb
push
add
add
pusha
add
lret
and
les
and
dec
push
fcmovnu
add
pop
pop
sbb
gs
enter
jl
add
add
push
cwtl
xchg
mov
jge
loop
inc
and
into
xchg
mov
adc
in
in
fwait
xor
add
add
pop
dec
cmp
into
and
sbb
mov
sbb
je
sub
leave
add
adc
mov
xor
sbb
sahf
and
mov
add
mov
sbb
cmp
outsl
cvtpi2ps
imul
and
sub
clc
cmp
inc
xlat
adc
fcomps
push
adc
cs
cltd
iret
pop
mov
lock
out
lea
cmp
mov
xchg
pop
scas
add
lret
jle
les
add
pop
movsl
sahf
shr
add
enter
ficomps
and
test
add
out
loope
add
shll
or
xchg
add
xchg
inc
dec
push
add
push
mov
int3
push
pop
jns
rolb
mov
adc
and
fs
shrl
adc
mov
in
or
add
sarb
add
popf
jge
mov
lods
xchg
shrb
stos
leave
xor
test
inc
push
fimuls
or
fidivl
jbe
push
cwtl
mov
mov
fisubs
rcll
mov
out
in
fiadds
mov
pop
es
add
in
adc
data16
add
jae
test
test
jmp
scas
xchg
pop
push
jns
push
add
enter
pop
add
xor
mov
add
out
xor
cmpsb
jae
stos
pop
ljmp
roll
sub
lock
cmp
test
testl
lds
hlt
and
addr16
push
dec
pop
sub
add
aas
sbb
add
pop
jecxz
add
add
add
arpl
sar
add
ret
ffree
sub
add
fiaddl
jmp
mov
inc
push
add
pop
in
inc
xor
das
sbb
jle
and
cs
push
cmpsb
testb
dec
clc
dec
lds
mov
xchg
or
mov
inc
arpl
adc
pop
adc
sbb
inc
mov
movsl
add
xchg
inc
pop
sahf
leave
xchg
pop
adc
adc
mov
cmp
clc
inc
add
pusha
mov
dec
mov
ret
pushf
push
test
xchg
repz
adc
je
jnp
or
and
aas
mov
or
mov
fstl
fmull
mov
add
adc
xchg
in
popa
cmp
push
add
add
dec
roll
sbb
std
pop
test
sub
mov
ja
test
sti
add
test
cmpsl
ret
stos
inc
mov
insl
enter
add
mov
add
out
add
imul
jo
and
xor
mov
inc
xchg
pushf
nop
add
cmpsb
add
jo
adc
add
add
add
testb
lods
pop
add
roll
and
fistpll
inc
mov
push
add
push
jmp
inc
or
dec
add
add
xchg
xor
cmp
daa
lret
roll
adc
sub
add
push
push
add
or
push
cmp
rorl
aam
jmp
or
cmpsl
inc
hlt
add
push
jecxz
lods
sub
ficompl
jbe
mov
scas
nop
push
inc
push
inc
add
ds
movl
insb
imul
push
add
das
add
add
outsb
jge
mov
jecxz
push
or
mov
mov
js
jl
mov
test
add
or
push
addl
xchg
cmp
add
outsl
xor
pop
dec
je
push
je
gs
push
jo,pn
shrb
hlt
jp
inc
mov
jmp
xchg
inc
cmp
lahf
nop
mov
dec
add
hlt
daa
pop
sbb
rcrl
movsb
mov
dec
repnz
xor
mov
pop
cmp
mov
test
push
adc
stos
mov
push
lods
imul
fldenv
cmp
sub
daa
popa
cli
mov
and
adc
or
or
cmp
fiadds
imul
add
add
jmp
inc
lcall
jae
add
jno
aam
lods
xchg
data16
sub
jmp
andl
sbb
fidivrl
mov
add
das
scas
pop
fisttps
leave
fdivrs
int
push
or
push
add
cmc
or
or
aam
in
mov
add
sti
lods
loopne
add
xchg
and
rcrb
pop
rcrb
notb
movsb
inc
mov
sub
add
add
pushf
add
faddl
movl
movl
pop
int
mov
push
add
in
stc
add
dec
sti
push
inc
mov
jmp
add
insb
leave
inc
imul
mov
dec
xchg
in
cmp
sub
and
scas
sub
popf
movsb
and
mov
add
fwait
add
pop
cmp
mov
pop
pop
push
xor
add
sub
add
insl
pop
and
str
add
adc
mov
scas
inc
mov
test
and
es
add
add
mov
xchg
shrl
fmuls
inc
mov
mov
cmp
xchg
mov
inc
jb
inc
xor
pop
xor
sub
sub
idiv
icebp
dec
or
cld
add
std
or
popl
aaa
cwtl
jo
clc
fldt
push
std
and
add
pop
mov
add
add
cs
aas
mov
push
test
sbb
cltd
jae
insl
cmp
and
mov
in
add
mov
or
pop
sti
mov
sub
in
xor
stos
add
scas
push
cmp
das
lds
add
popf
mov
js
test
ja
push
xchg
js
jb
inc
add
and
pop
arpl
shrb
je
lcall
mov
movsb
les
and
dec
loopne
sub
inc
mov
lea
and
lock
add
fistpll
filds
inc
mov
cli
inc
or
mov
push
stos
pop
jns
mov
scas
mov
inc
mov
mov
mov
imull
call
insl
xor
lret
stos
and
lods
std
scas
addr16
inc
movsb
add
dec
cs
cmp
and
dec
mov
adc
or
ss
add
cli
inc
lahf
add
int
scas
aad
outsb
add
xchg
jno
xchg
adc
add
in
dec
xor
ds
stos
fs
mov
add
mov
fldl
ds
xor
popa
lods
jle
xchg
in
add
pushf
and
or
arpl
sub
inc
xor
add
stc
add
add
add
filds
push
jno
repz
pop
pop
filds
out
and
pop
adc
or
pushf
and
popa
call
adc
jae
popa
jb
adc
or
pop
push
stc
pop
add
add
add
sbb
out
in
aas
sub
mov
ljmp
and
mov
push
adc
mov
xchg
imul
sbb
loop
out
insb
xchg
int3
add
add
test
mov
mov
ljmp
fimull
sahf
jnp
dec
mov
mov
sub
lods
push
lahf
incb
pop
add
icebp
and
cmp
mov
inc
push
ja
mov
cld
ret
es
fcmove
imul
or
fucomi
fisubrs
push
je
mov
inc
and
stos
and
jl
jg
ret
roll
stos
mov
jle
filds
in
movsl
xor
cmpsl
cmp
xchg
jge
sbb
xor
pop
jg
sbb
lret
test
lods
lods
lock
movsb
push
stc
add
fs
push
or
mov
push
push
push
pop
mov
sbb
loope
xor
add
sbb
add
dec
jne
fisttpl
or
mov
add
mov
jns
fidivl
js
cmp
push
fiaddl
outsb
bound
mov
inc
add
test
push
jb
lock
pop
xlat
add
push
mov
add
pop
in
movsb
push
div
add
sub
push
sbb
sbb
push
add
and
lret
or
add
int
mov
sbb
pop
es
test
xchg
mov
pop
fnstenv
pop
or
ljmp
inc
adc
lret
push
push
pushaw
dec
jb
nop
add
or
clc
xlat
pop
sbb
fldl
mov
add
pushf
test
aaa
cld
jecxz
popa
xor
movsb
or
jae
ja
sbb
adc
add
push
xchg
pop
dec
add
add
lret
sbb
test
sbb
add
adc
int
js
add
lods
push
subb
or
mov
mov
aaa
push
mov
xor
inc
adc
dec
aam
es
xor
out
outsb
fldl
and
pop
sti
dec
add
adc
loope
mov
xor
ret
or
jne
shrb
mov
mov
adc
dec
add
das
xor
inc
iret
xor
fiaddl
jae
push
add
push
dec
push
xchg
mov
sar
push
imul
sbb
icebp
sbb
add
sub
mov
repnz
pop
and
outsb
pop
icebp
js
adc
iret
pop
add
jo
or
fwait
add
jo
test
ds
cmp
dec
dec
mov
rclb
mov
addb
aad
push
adc
scas
pushf
and
mov
mov
xor
pop
sub
mov
mov
push
cli
or
outsb
mov
add
lahf
xor
test
and
adc
fwait
adc
incb
out
cmp
fucom
aaa
add
cmp
inc
cmpsl
fdivrs
insl
bound
jp
cmp
mov
out
inc
aas
das
mov
and
push
mov
push
mov
mov
std
add
add
out
pushf
xchg
xchg
inc
xchg
lods
xchg
lods
hlt
push
mov
xor
add
popa
jb
or
fsubl
jbe
mov
xchg
fists
stos
dec
fcoml
mov
and
add
testb
jb
nop
in
pop
xor
ror
or
xlat
je
dec
popw
lods
push
ss
jnp
outsb
xor
lcall
add
clc
ror
ss
inc
mov
add
fidivs
mov
mov
jo
jg
jns
nop
add
cmp
call
jle
in
add
cmc
lret
add
dec
mov
add
aaa
or
dec
sbb
movsl
hlt
adc
pushf
push
mov
stc
cmpsb
or
fdivrs
add
mov
push
or
add
nop
jp
add
movl
sbb
mov
mov
jne
add
cmc
cmc
add
adc
inc
scas
pop
icebp
or
add
clc
and
add
xor
lret
or
xchg
js
icebp
adc
mov
les
loope
jl
cmp
out
or
popa
add
lea
sti
push
rolb
dec
dec
inc
mov
dec
add
add
lcall
aaa
lea
aaa
add
xor
add
add
pop
std
bound
adc
mov
movb
xor
add
pop
add
sub
iret
lahf
aad
testl
add
cmpsl
dec
push
shll
add
adc
cmpsl
sub
dec
add
xchg
out
sub
inc
lcall
sbb
xchg
fcomps
mov
test
mov
push
cmc
cmpsl
notl
xchg
push
subb
int3
dec
mov
sub
dec
add
push
pop
ljmp
hlt
imul
addb
xchg
add
jecxz
dec
add
add
scas
add
ljmp
loope
imul
std
add
sbb
shlb
xchg
add
into
cmp
sub
ja
fs
xor
rolb
xchg
and
testb
add
add
add
mov
dec
dec
add
shlb
add
dec
xor
or
add
jns
enter
insb
adc
movsl
rcrl
mov
mov
sub
cltd
add
cld
add
jo
jle
add
mov
movsb
pop
dec
cld
inc
stos
imul
sub
repz
cmp
shrl
jle
fidivs
sub
scas
add
and
repnz
std
add
scas
add
pop
insb
add
sub
pusha
dec
add
int3
pop
fnstsw
sahf
mov
add
or
inc
adcl
inc
sahf
push
jmp
fxch
mov
enter
jno
jae
add
data16
push
mov
xchg
add
add
lcall
push
jle
aas
ljmp
add
push
xchg
loope
fs
arpl
cmp
or
sbb
add
fs
add
dec
jle
popf
nop
add
test
add
mov
imul
mov
inc
or
pop
lods
mov
std
ficoml
pop
iret
cmp
sub
lret
cmc
add
xor
add
stos
add
repz
out
lds
mov
sbb
add
fadd
add
inc
jp
and
cld
xchg
mov
out
movhps
sub
in
pop
js
out
add
pop
add
mov
sbb
nop
iret
out
lock
stc
xor
cmp
dec
mov
xchg
or
fiaddl
fsubl
scas
add
jge
test
sbb
xor
fsts
push
mov
push
les
in
jnp
sub
je
ja
sbb
int
mov
add
lret
jnp
aaa
push
adc
das
inc
cmp
mov
add
and
clc
xchg
xchg
shll
adc
in
rcrl
sbb
push
aas
pop
in
movsl
lock
sub
outsb
mov
stc
sarb
jbe
mov
ljmp
jbe
xor
jo
add
das
aad
and
movsb
out
or
add
add
jns
int
add
inc
pop
xor
cmp
out
add
rorl
inc
movsb
add
jge
lret
dec
push
outsb
push
aad
adc
dec
in
sbb
movl
push
and
add
dec
mov
add
add
add
testb
bound
cwtl
mov
mov
jle
lcall
add
add
sub
and
addr16
into
add
mov
add
iret
dec
mov
mov
mov
pushf
out
icebp
ljmp
ror
and
pusha
xor
jge
add
cmp
push
out
inc
mov
jecxz
bnd
icebp
out
je
mov
jno
add
add
cmpl
pop
add
xor
xchg
in
mov
sbb
jge
dec
add
movsl
test
addb
mov
cs
scas
push
add
or
cltd
jl
repnz
push
sub
xchg
add
xlat
jae
or
mov
pop
add
xchg
xchg
cmp
out
jg
lods
ret
push
cmp
add
and
rcrl
ret
add
das
mov
add
adc
cmp
stos
cltd
movsb
add
jecxz
je
cmp
jnp
and
int
fdivl
fwait
jae
add
add
xchg
xchg
cmp
leave
mov
insb
sahf
mov
push
add
add
adc
dec
xchg
sub
sbb
push
inc
enter
mov
sbb
push
scas
aas
imul
add
jge
xor
lea
fmull
xor
add
gs
iret
dec
lahf
mov
inc
inc
cmp
ja
arpl
add
call
clc
ljmp
pop
fscale
mov
jne
ljmp
add
sbb
out
mov
aam
fsubrs
mov
cmp
add
into
jmp
pop
add
and
into
jo
or
or
add
add
pop
lds
addr16
sub
inc
fldl
cmpsl
pop
fwait
ret
in
lret
pop
mov
push
xchg
data16
adc
addr16
lock
in
roll
jecxz
test
add
jo
jns
dec
lret
adc
adc
mov
ss
xchg
sar
xor
out
into
jl
iret
decb
add
lret
cmpl
sub
imulb
add
sub
repnz
mov
jns
cmp
and
add
push
jl
add
and
cltd
stos
in
inc
aaa
add
sbbl
ljmp
add
sub
add
mov
inc
jnp
sub
ss
loopne
sub
dec
inc
xor
insl
push
add
push
aas
add
add
fstpt
and
dec
pop
pop
and
push
jno
js
add
add
hlt
jno
imul
pop
jg
loop
cltd
cwtl
jmp
cmc
repz
sub
arpl
adc
pusha
xchg
add
or
sub
mov
shlb
imul
dec
mov
jbe
or
jle
inc
fadds
sbb
xchg
push
mov
subl
and
pusha
cmp
add
pop
adc
ss
push
icebp
aaa
xchg
xchg
sub
movsb
inc
jmp
bound
lods
fldl
mov
inc
and
cmp
cmp
mov
aas
data16
add
les
add
xor
push
push
je
cmp
add
jnp
stc
aad
loop
xor
jns
xor
xlat
add
pop
lock
repnz
dec
xor
out
add
fsub
movsl
xchg
add
fwait
add
inc
add
push
sbb
xor
loope
or
mov
xor
adc
loopne
sahf
mov
and
mov
jo
pop
rol
jne
out
inc
push
ret
jl
dec
movsb
push
loope
mov
jecxz
lods
addb
mov
loope
ret
shlb
std
sub
dec
mov
ss
lods
add
xor
ret
ds
sub
dec
add
add
cli
sbb
mov
pop
imul
rcrl
and
push
push
ja
push
add
out
mov
add
cs
sbb
or
cwtl
mov
pop
fcmovnu
inc
test
push
test
mov
imul
cmp
lods
dec
jo
gs
push
sub
mov
test
pop
lcall
mov
fbstp
jne
push
fs
add
ss
xchg
xchg
adc
cmpsl
push
sar
aas
roll
cmp
pop
add
add
add
push
pop
ret
pop
push
xchg
je
ds
sub
mov
jg
cmp
xchg
out
push
lds
daa
add
pop
push
add
mov
inc
jmp
jl
adc
or
or
das
popf
inc
mov
scas
push
inc
add
sub
xchg
lahf
add
push
push
add
stos
lahf
outsb
stos
sti
bound
mov
pushf
fnsave
mov
addr16
mov
mov
add
lret
add
bound
mov
addr16
movsl
add
or
test
jo
jno
add
add
pop
push
and
or
dec
inc
scas
ret
mov
sti
addr16
shll
leave
std
js
data16
hlt
fucomp
in
in
dec
dec
pop
fildl
xor
andb
enter
add
mov
add
sub
adc
sub
out
sbb
rclb
orb
add
mov
adc
or
add
jg
dec
pop
dec
lret
xor
ds
decb
add
adc
sbb
add
mov
sti
add
xchg
enter
sbb
repz
pop
jb
lods
negb
fstp
adc
mov
adcb
cwtl
mov
push
add
pusha
adc
inc
add
add
mov
mov
add
arpl
sbb
pusha
sub
popf
addb
stos
add
lea
add
adc
testl
imul
dec
mov
repnz
stos
and
add
add
imulb
push
out
mov
push
add
and
jle
mov
add
pop
loope
sub
add
das
add
or
inc
sbb
loop
add
cmp
cmp
clts
fmull
cmp
arpl
mov
add
cli
rorl
sbb
or
push
gs
ret
sbb
xchg
add
fidivs
das
xor
pop
and
pop
loopne
mov
dec
xchg
fldl
enter
jnp
cs
cli
add
cmp
shrl
lds
xchg
es
sbb
test
aad
cwtl
dec
dec
xor
push
shll
test
add
add
mov
push
cs
cli
xchg
dec
lods
ret
loopne
sub
xchg
testb
les
lods
test
cltd
cmpb
jno
pushf
mov
inc
fcompl
jecxz
xchg
stos
jecxz
mov
push
stc
aad
pop
stos
bound
mov
leave
sub
mov
stc
adc
sti
add
xchg
stc
mov
stos
mov
stc
push
sub
and
frstor
add
ror
stos
outsb
sub
cmc
fildl
mov
add
mov
adc
lea
mov
fadds
lcall
adc
fdivrl
mov
add
ret
mov
pop
test
push
imul
insl
pusha
and
add
lock
mov
lea
add
add
inc
stc
pushf
sub
mov
fcoms
xor
out
add
pop
mov
add
mov
fisttpl
and
xchg
xor
add
leave
add
push
and
mov
test
and
add
flds
sbb
and
repnz
xor
push
cld
insl
out
cmp
rol
aam
in
add
add
sbb
inc
gs
loopne
aaa
mov
push
notb
insl
cmp
dec
mov
add
mov
add
frstor
jo
lret
cltd
add
pop
add
xor
pop
mov
mov
aaa
ss
xchg
shl
mov
test
jg
mov
push
fisttpll
jo
jmp
gs
rcrb
cmp
scas
pop
adc
push
test
push
xor
push
fstps
add
dec
inc
fs
rcr
push
xor
data16
mov
scas
push
in
sar
test
jp
incl
outsb
adc
add
mov
or
mov
or
add
bound
and
repz
lods
stc
out
pop
jmp
cmp
add
inc
leave
cmp
jo
jp
dec
cltd
xor
jnp
aas
sub
mov
cwtl
sub
sub
imul
push
mov
stos
xorl
incl
push
add
dec
or
add
xor
lcall
jp
insl
push
popl
xchg
inc
push
cmpsl
insl
push
mov
out
arpl
push
lcall
aas
or
ret
add
pop
scas
cltd
mov
stos
clc
mov
jmp
inc
mov
add
add
inc
or
mov
dec
rolb
cmpb
inc
add
add
aad
mov
mov
add
out
divl
fcmovu
sub
mov
test
mov
nop
iret
xchg
push
jbe
sbbl
add
test
jns
add
mov
sub
add
test
loop
pop
jbe
mov
add
add
dec
popf
jg
movsb
jecxz
mov
ss
mov
aaa
out
add
sub
cltd
stos
scas
fwait
out
mov
lods
out
in
xor
mov
ds
push
add
mov
mov
adc
or
jmp
popa
jo
add
push
test
pop
jp
add
daa
adc
int3
rcll
jecxz
loop
or
pop
dec
std
add
cld
sbb
add
mov
mov
les
shrl
ss
repz
roll
pushf
sti
or
or
inc
cmpsl
lret
pop
pop
sbb
movsb
jnp
add
dec
aad
xchg
inc
testl
lea
loope
dec
lds
mov
jne
js
jae
add
and
and
add
fcomi
xchg
dec
add
mov
sub
and
js
add
push
jmp
in
add
daa
sub
call
add
mov
outsl
aaa
insl
sub
movl
add
inc
add
inc
pop
add
add
in
or
pop
scas
ljmp
jmp
add
sub
mov
add
pushf
rolb
hlt
outsl
sbb
cltd
add
add
add
fidivrl
add
out
aas
adc
adc
fidivrs
clc
jle
add
add
lods
add
lret
dec
out
add
lcall
mov
sbb
xchg
jno
push
xor
xchg
inc
ljmp
inc
add
mov
aam
jbe
lods
xchg
add
push
lock
xor
add
jp
xchg
cmpsl
add
adc
push
pusha
push
mov
fildl
add
int
xchg
mov
push
add
inc
cmpsl
and
in
int3
or
inc
cld
cmp
inc
mov
xor
pop
pop
enter
and
add
dec
orb
jnp
sarb
inc
xlat
cmp
and
lcall
in
outsl
lods
addb
sbb
xchg
push
sbb
lret
fisttpll
aam
adc
mov
pop
pop
mov
enter
ss
mov
lahf
aaa
pop
add
push
arpl
mov
jmp
out
dec
mov
rcrl
es
or
insb
inc
dec
add
pop
pop
lret
mov
ret
iret
in
cmp
push
push
stos
dec
sbb
cld
adcb
inc
fstps
xchg
inc
or
add
int3
clc
mov
add
dec
adc
add
add
mov
inc
inc
sahf
add
add
pushf
outsb
xchg
pusha
addl
xchg
dec
outsl
mov
imul
jno
add
int
outsb
cmp
sarb
les
lds
fsubr
gs
rcrb
sub
cmp
adc
jp
movsl
es
xchg
add
pop
add
dec
cmp
xchg
cmpsl
clc
xchg
add
dec
stos
jbe
sti
push
rclb
in
scas
loope
pop
and
xchg
add
es
mov
push
roll
andb
idivb
add
cmpsl
pop
in
repnz
add
cwtl
popa
test
and
test
test
cltd
adc
sbb
icebp
mov
insl
push
xchg
ficoml
insb
pop
js
fwait
jb
jbe
sub
add
testb
jne
loope
add
jb
push
add
lods
shrl
mov
add
jb
or
call
push
sbb
cmpsb
dec
add
mov
mov
add
jo
add
sbb
bound
in
add
and
out
mov
pop
les
sub
mov
repz
daa
or
pop
arpl
loopne
add
push
sbb
adc
movsl
mov
add
adc
out
adc
rolb
xor
ss
fninit
mov
push
clc
addb
add
in
pusha
or
je
jecxz
add
repnz
and
cwtl
add
or
int3
hlt
sbb
jno
fmull
pop
jmp
dec
and
adc
insb
out
and
sbb
add
stos
ficomps
or
aaa
les
xchg
add
jecxz
add
jge
cli
hlt
add
dec
add
in
cmp
pop
lock
add
out
add
cmp
jnp
and
inc
sbb
fs
ja
enter
lods
add
xchg
sub
dec
out
mov
dec
out
mov
loop
cmp
jae
and
outsl
insb
lahf
add
aam
or
add
mov
add
add
jns
add
addb
xor
fwait
es
inc
lahf
ljmp
sbb
add
mov
rolb
sbb
movsb
fstps
add
add
mov
xlat
xchg
push
and
sub
adc
dec
xor
mov
cs
clc
mov
mov
dec
mov
add
add
arpl
insb
mov
sbb
push
arpl
inc
sbb
outsl
rcrl
mov
sub
inc
out
in
cwtl
add
dec
add
mov
in
loopne
push
out
add
jmp
loopne
mov
xor
jae
inc
cmp
cmp
xor
outsb
std
arpl
scas
out
add
loopne
stos
add
mov
xor
sbb
sti
shrl
adc
ret
lret
add
cmpsl
push
mov
scas
inc
mov
jne
outsb
add
enter
mov
mov
ds
aam
mov
rsm
hlt
mov
push
push
mov
push
rcll
cmpsb
push
xchg
ret
add
enter
test
fildll
mov
jb
std
pop
xchg
xchg
sub
outsl
gs
aad
adc
call
mov
test
test
mov
dec
xor
cmp
inc
filds
clc
dec
enter
inc
sub
rolb
pushfw
movsl
push
push
clc
stos
dec
sbb
and
jge
and
add
pop
cmc
add
sub
icebp
sbb
inc
inc
and
xor
bound
jmp
push
cmp
pop
sahf
or
xchg
mov
jno
jne
imul
mov
fdivrl
test
stos
fsubrs
stos
xchg
aam
fwait
or
push
mov
aad
add
inc
pop
outsl
inc
pop
mov
mov
push
jmp
pop
jg
loopne
add
and
outsb
sub
sbbl
into
mov
loope
pop
pop
sub
test
push
mov
iret
jmp
repz
add
mov
xor
ss
jbe
push
push
push
add
and
fs
int
add
orb
loope
in
hlt
lcall
addr16
push
add
jae
ja
popa
add
pop
imul
jle
jecxz
ret
push
add
or
add
dec
jo
dec
cwtl
mov
xchg
xor
addb
clc
sbb
pop
nop
add
popf
pop
add
ja
adc
dec
push
pop
or
add
mov
incb
or
adc
and
shl
es
lods
sbb
std
aad
cli
xchg
movsl
dec
pop
jnp
psllq
addr16
add
lods
or
in
in
cmp
xchg
jnp
pusha
add
add
test
xor
shlb
bound
cwtl
ja
mov
push
add
cmpsb
imul
fsub
add
mov
clc
push
data16
fmuls
add
inc
jb
or
fisttpll
jecxz
xorb
cmp
or
cmc
sub
add
sub
jnp
add
int
das
and
popa
mov
dec
or
add
jbe
cli
xchg
daa
outsb
repnz
add
filds
pop
add
fmul
mov
add
in
mov
cmpl
pop
add
mov
and
or
lahf
aad
lcall
in
pop
and
xchg
push
add
insb
sbbb
sub
js
mov
sbb
and
cmp
decl
ficompl
sub
xchg
add
outsl
ficomps
fwait
es
lret
add
xchg
xchg
or
stos
sbb
das
add
xor
popf
lods
pop
imul
jecxz
or
or
pop
sbb
les
add
sbb
adc
and
or
add
fwait
xor
ljmp
aaa
jbe
mov
loope
out
cmp
add
test
es
paddq
mov
sub
mov
mov
pop
leave
add
inc
push
cmp
lret
call
add
xor
test
and
in
pop
dec
sub
dec
push
popa
push
rolb
out
mov
cli
int
adc
clc
popa
xor
add
ljmp
and
loop
push
insb
mov
add
repz
add
jp
ja
dec
add
movl
jmp
rorl
sbb
and
add
dec
xchg
or
sub
insl
inc
das
aas
mov
dec
lds
or
ret
push
fistl
or
mov
mov
sub
call
add
repz
add
or
pop
jbe
stos
xor
inc
jecxz
add
inc
sahf
scas
sti
sub
jl
add
add
sub
adc
and
pop
jl
add
loopne
mov
filds
dec
sub
add
fsubrp
gs
ficoml
xor
gs
adc
mov
add
ja
mov
outsb
pop
inc
mov
addb
pop
clc
fwait
mov
data16
add
inc
cld
xor
add
pop
loop
rorl
stos
cmp
inc
fwait
sub
cmp
js
or
and
xchg
inc
inc
add
jg
lds
dec
icebp
lock
in
sub
push
or
rolb
arpl
mov
xor
cmp
add
xlat
xor
mov
mov
mov
add
add
dec
stos
or
mov
dec
add
add
lods
rol
add
add
sbb
sbb
repz
push
and
add
es
out
outsl
scas
ja
add
arpl
int
sbb
cmp
jns
shlb
jnp
jle
and
sbb
stos
sbb
das
add
in
mov
icebp
ja
test
push
sbb
add
adc
pop
push
xchg
pop
jbe
iret
bound
dec
pop
int3
add
push
xor
loopne
out
clc
mov
nop
je
insl
out
fiadds
jns
mov
sub
mov
xor
fwait
pop
test
add
sbb
xchg
sbb
xor
ljmp
dec
add
sbb
mov
xor
xchg
mov
loop
fwait
into
or
inc
jle
fsubl
fstl
ficompl
lea
xchg
cltd
daa
repz
or
add
aam
adc
in
lock
mov
cmpsb
rorl
movsb
std
cmp
xchg
int
add
insb
cmpsl
mov
add
add
or
sub
inc
jmp
add
add
insb
xor
shrl
daa
fcomps
dec
imul
xor
loopne
mov
add
or
jg
fstpt
test
das
inc
add
test
add
add
xor
into
es
add
addr16
add
xchg
pusha
popa
stos
add
es
pop
adc
and
ljmp
add
insl
mov
pop
or
dec
cwtl
jbe
mov
add
mov
sbb
pushf
dec
imul
ret
incb
ret
lret
stos
fildl
sbb
adc
fimull
out
mov
loope
mov
add
sbb
add
enter
or
mov
icebp
or
iret
int
add
fs
push
xchg
adc
out
out
sub
push
add
ja
mov
xchg
std
gs
mov
insb
push
loopne
imul
pop
add
lods
je
inc
push
in
push
sbb
sbb
xor
test
adc
pop
outsb
mov
les
iret
mov
addr16
xchg
scas
cmp
rclb
mov
scas
xchg
xchg
ret
stos
add
add
sub
push
add
xchg
mov
xchg
les
jmp
xchg
cwtl
add
call
mov
add
cmp
add
aad
leave
fstp
inc
mov
stc
push
jnp
ret
fs
add
push
outsb
jo
nop
jmp
stos
ds
add
pop
loop
push
sarb
mov
cli
scas
fisubs
lds
ret
jmp
jecxz
into
and
sub
xor
mov
dec
pop
add
jmp
out
aaa
add
jb
add
bnd
rolb
imul
add
clc
aas
mov
add
arpl
mov
cli
orl
dec
push
insl
mov
add
xor
push
xchg
std
adc
popa
dec
lods
stos
lock
adc
jo
add
mov
or
push
push
xchg
mov
jo
add
dec
dec
aas
dec
fiadds
cwtl
pop
pop
fmul
rolb
stos
sub
outsb
mov
lods
push
mov
fs
inc
repnz
push
test
mov
sub
enter
add
clc
pop
daa
adcl
dec
icebp
test
fisttps
call
cs
inc
and
lods
jne
pop
sub
repz
rcrl
insb
add
sbb
mov
add
adc
gs
cmpsl
cli
ret
imul
add
test
pop
add
out
cltd
mov
push
imulb
push
dec
cmc
add
mov
add
cmp
add
insb
lea
nop
test
inc
and
cli
into
in
notl
xor
shll
add
push
insb
jl
cltd
cmc
cwtl
sub
subl
push
add
mov
je
mov
add
add
ret
pop
pop
and
add
nop
push
add
jno
cmpsb
or
fistl
test
ficoms
cmc
add
add
test
aam
es
inc
mov
add
add
aad
ja
mov
mov
int3
cmp
xchg
xchg
mov
int3
inc
dec
adc
pop
mov
fistps
add
mov
mov
test
add
stc
or
pop
cmp
push
jl
add
add
pop
add
outsl
or
add
adc
xor
cmc
mov
dec
cli
jg
in
xchg
into
lret
roll
push
cmp
stos
add
or
dec
mov
pop
cmp
int
out
mov
add
scas
and
mov
test
scas
popf
lret
incl
jmp
sahf
add
call
mov
add
aas
push
sub
and
xchg
outsl
jmp
add
outsl
jns
sarl
pop
fadds
daa
push
push
add
inc
fs
xor
pop
sub
cmpsb
lea
adc
add
mov
xchg
pop
sarb
mov
inc
push
ret
fs
add
repz
add
hlt
loope
add
in
add
insl
outsl
add
xor
in
adc
add
fmuls
shll
and
sub
scas
xor
dec
cmp
enter
xchg
add
add
sbb
xor
add
mov
jp
inc
mov
jns
and
add
dec
or
adc
cltd
insl
enter
pop
jmp
popf
loop
push
mov
mov
gs
add
sub
mov
bound
mov
xchg
mov
inc
imul
and
cmp
sub
in
push
mov
pop
pop
sbb
iret
insl
test
enter
sahf
cmp
popf
int
pop
add
mov
into
mov
and
push
push
jns
int3
fisubs
sub
mov
test
adc
test
test
fnstsw
xor
add
pop
add
sub
dec
dec
lcall
xor
fadds
rcll
loop
pop
jne
fsub
dec
cmp
faddl
fsubs
lea
dec
mov
lcallw
sti
jno
push
xchg
fsubr
dec
inc
push
sub
dec
adc
add
verw
and
push
add
xor
incb
ds
testb
add
aam
push
std
inc
xor
add
mov
or
push
sub
lcall
test
sbb
ja
inc
xlat
add
or
andb
sub
adc
call
ret
jbe
add
push
or
add
add
lret
push
mov
insl
add
repnz
add
xlat
loopne
push
mov
dec
push
mov
add
add
and
ret
pop
rcrb
mov
or
lcall
add
xor
add
faddl
js
fwait
cmc
popf
mov
adc
adc
cmc
fcompl
es
pop
mov
jge
or
add
sub
mov
push
iret
and
cmp
dec
aad
fdivrs
add
pop
dec
lret
push
pop
sbb
in
add
outsl
mov
fimull
pop
dec
dec
xchg
jbe
daa
je
mov
pop
ljmp
add
lahf
int3
mov
add
fcom
out
shrl
add
sub
add
sahf
jbe
dec
scas
fwait
daa
test
lods
jnp
cmp
and
out
xchg
add
add
ret
jae
adc
ret
std
sub
call
xchg
xor
movsb
sub
sbb
aam
pop
pop
add
daa
nop
add
sub
add
icebp
sbb
dec
add
addb
or
add
mov
dec
push
add
leave
add
push
mov
and
xor
add
xchg
push
movsl
add
add
add
scas
cmpsl
popf
popf
xchg
jb
sbb
daa
mov
popa
mov
bound
xchg
dec
iret
int3
xchg
add
adc
mov
inc
cmp
lahf
pop
add
lcall
sbb
or
or
mov
dec
pop
addr16
sti
repnz
lds
cmpsb
push
sbb
lods
pop
cs
mov
pop
adc
xchg
dec
in
jle
jns
and
stos
add
add
mov
xchg
fxch
mov
or
out
mov
cld
add
out
push
sub
or
popf
push
jle
cmpsl
data16
cli
push
xor
mov
cmpsb
sbbl
or
mov
dec
cmp
push
test
frstor
insb
nop
add
filds
or
movsb
cld
dec
add
in
xchg
cmp
adc
outsb
fnstsw
test
or
in
rcr
data16
subb
inc
push
add
stc
push
out
jecxz
shl
aad
xchg
sub
out
sbb
adc
sahf
pop
push
pop
dec
scas
inc
and
ffree
test
fistpll
sub
or
cld
dec
sbb
jne
mov
ret
gs
cmp
ja
inc
das
add
inc
les
add
cmp
add
cs
add
sbb
stos
and
scas
je
test
gs
fbstp
imul
push
and
aad
stos
add
and
add
jb
ljmp
outsl
jno
into
jmp
mov
push
add
sbb
hlt
mov
movsl
add
divb
dec
pop
xor
cli
loop
add
jmp
dec
adc
sbb
cmp
jnp
push
add
ljmp
add
rorl
pushf
push
pop
scas
addr16
fidivrl
jae
add
icebp
insb
les
orl
out
inc
add
dec
mov
movb
je
add
popa
inc
xor
test
lret
add
orl
xchg
pop
cs
mov
and
test
xor
add
mov
out
xchg
inc
add
inc
xchg
xchg
add
add
mov
jmp
adc
xor
call
pop
xor
dec
into
adc
mov
jo
scas
mov
hlt
pusha
lret
mov
xchg
dec
dec
pop
pop
sub
movsl
jmp
add
mov
fdivs
negl
mov
cmc
testl
push
and
push
jae
sahf
mov
clc
add
out
or
addl
sub
ret
xor
add
or
jmp
call
in
jb
popa
xchg
daa
sti
add
jg
jl
or
lods
pop
andl
push
imul
and
ja
lcall
inc
cmp
sbb
jmp
xchg
outsb
enter
movsb
loope
loope
bound
ficompl
and
push
jecxz
ja
add
hlt
cld
je
sbb
flds
or
iret
aas
popf
sub
pop
aam
add
notb
aad
lods
dec
mov
add
mov
in
push
cltd
mov
mov
add
imull
shlb
rcrb
popf
addr16
push
movsl
mov
stos
add
jnp
mov
mov
mov
mov
and
nop
mov
jno
add
insl
jne
or
data16
orl
sub
and
dec
mov
pop
lcall
les
addl
out
jl
or
push
test
xor
mov
mov
xlat
outsl
xor
lldt
cmpsb
add
add
scas
push
fwait
dec
mov
cmpb
xor
std
andb
pop
aam
fs
aad
inc
pop
add
add
pop
xor
lods
testb
cmc
sbb
shr
xchg
arpl
adc
add
xor
and
dec
jne
mov
add
lods
inc
add
push
push
xchg
cld
outsb
out
aad
adc
daa
add
push
add
xchg
sbb
test
testl
insb
aaa
clc
insl
jne
push
loopne
xchg
in
xlat
fsubrl
shll
inc
cld
sub
lock
add
sub
pop
add
add
fwait
xchg
cmpsb
mov
and
movsl
daa
xlat
add
lods
lock
gs
push
add
push
add
push
je
nop
add
and
sahf
lea
inc
xchg
pop
aaa
pop
fadds
cmp
stos
mov
jno
loope
xchg
xchg
add
insb
add
inc
dec
fildl
sub
lods
ja
loopne
inc
inc
add
and
in
push
and
outsb
popl
clc
sub
aam
lret
es
iret
and
jl
add
shll
int3
push
popf
pop
inc
test
jmp
fidivrl
add
or
adcl
jl
popa
mov
adc
popa
jae
add
cmp
movsb
bound
add
push
jge
test
or
in
mov
pop
mov
mov
add
in
sbb
or
add
add
inc
aad
mov
inc
cli
inc
add
mov
stos
jae
notl
mov
shlb
add
push
push
xchg
adc
adc
or
dec
sub
add
inc
xchg
mov
inc
lret
push
popa
adc
or
mov
out
push
mov
sbb
lods
push
outsl
add
pop
imul
xchg
hlt
add
add
in
jg
sbb
jae
and
fiadds
jbe
addr16
fstps
and
les
and
test
mov
jp
mov
xor
xor
je
cmp
das
add
mov
add
ds
jecxz
push
outsb
xchg
add
mov
add
sarb
xchg
add
std
dec
add
cltd
stos
loopne
in
in
jmp
loope
and
lods
push
out
divb
sub
add
je
cs
movl
mov
mov
pop
dec
icebp
sbb
jmp
add
mov
cmpsl
jbe
xchg
add
into
lods
les
andb
fidivs
fiaddl
lcall
adc
daa
and
or
adc
aas
add
mov
nop
stos
or
hlt
jb
mov
mov
adc
insl
and
and
add
add
push
imul
pop
jae
test
push
adc
test
or
xchg
dec
in
dec
bnd
je
push
and
ss
daa
loope
clc
and
pop
icebp
xor
xchg
test
or
mov
dec
xor
ret
pusha
mov
mov
faddl
push
ret
xorl
or
mov
cs
and
lcall
ja
fldcw
addb
add
bound
add
dec
jnp
xchg
xor
rclb
jne
push
push
cmpsl
or
xchg
mov
outsb
ljmp
insl
sub
shll
aad
mov
out
enter
push
in
add
xchg
add
or
pop
mov
add
inc
xchg
fwait
pushf
bnd
and
inc
add
add
ja
addr16
inc
lock
push
scas
icebp
cld
add
or
es
int3
xor
add
mov
sarl
js
repnz
mov
jle
cmp
lds
mov
gs
or
sub
dec
add
add
sub
or
add
sbb
jo
icebp
out
add
mov
fildl
lret
add
sahf
lods
xor
or
adc
int
and
sbb
lea
fiadds
mov
enter
out
add
and
add
scas
pop
pop
sub
movl
lea
imul
add
sub
add
ret
add
sub
faddl
mov
mov
imul
dec
repz
add
add
or
inc
dec
popa
adc
lahf
adc
add
sub
mov
icebp
sti
les
adc
pop
dec
orb
dec
repz
insb
push
xor
add
add
xchg
and
pop
call
mov
popa
enter
fisttps
jno
or
div
flds
fxrstor
pop
pop
jp
xor
adc
scas
pop
push
imul
cld
pop
mov
aam
pushf
cli
iret
add
das
pop
add
add
xchg
daa
out
lahf
cmp
int3
cmp
pop
cmp
or
cmp
add
movsl
mov
add
dec
mov
xor
inc
cwtl
nop
cmpsl
add
popf
cmp
pop
jb
cmp
movsl
div
cmp
loop
push
pop
sub
mov
dec
aad
inc
sbb
rorb
sub
je
pop
cmp
lock
push
dec
push
mov
add
add
add
xchg
arpl
pop
ret
repnz
out
xchg
and
scas
jecxz
adc
data16
imul
xlat
inc
fsts
aad
jl
add
xlat
add
out
fldt
stos
mov
pop
xlat
push
cwtl
jle
jg
add
pop
and
cmp
imul
add
or
mov
insb
mov
loop
xor
call
dec
outsb
add
out
clc
mov
pop
das
arpl
or
mov
pop
add
and
and
out
jecxz
push
outsb
pop
repnz
lods
add
mov
mov
sub
adc
push
je
hlt
add
or
cltd
add
sub
repnz
daa
daa
push
mov
mov
hlt
loop
ljmp
aas
sub
add
xlat
pop
or
and
test
xor
inc
add
sbb
ljmp
and
add
xor
fsubl
sbb
add
stos
aas
repz
adc
int3
add
sarl
test
xlat
out
add
jo
in
in
push
add
leave
add
push
mov
and
dec
jno
lret
xor
sbb
pop
adc
and
adc
and
fadd
add
loopne
ss
dec
xor
add
or
add
jnp
scas
shrl
and
or
push
or
mov
mov
push
xor
mov
sbb
aas
sub
cmpsl
lds
add
or
push
push
mov
add
scas
dec
sti
lret
lods
sbb
cmpsb
imul
vmread
mov
mov
leave
insb
test
stos
insl
add
sbb
mov
bound
jecxz
and
inc
inc
add
repz
sub
sbb
cmp
and
std
enter
repnz
jno
cli
cmpsb
adc
lea
add
add
adc
mov
xchg
sbb
fsubrl
push
outsb
mov
pop
jno
addr16
add
sbb
push
subl
sub
mov
add
adcb
and
outsb
cmp
pop
push
or
dec
mov
sarb
xor
jae
verr
jbe
and
shl
xchg
mov
mov
adc
inc
icebp
add
ret
scas
xor
mov
fbstp
xchg
pop
and
mov
mov
je
inc
js
fnstsw
dec
add
cwtl
in
jnp
mov
push
pop
fcoml
testl
sbb
add
cli
add
add
mov
add
int3
rcrl
ret
pop
loop
in
nop
adc
fiadds
sub
psrld
add
dec
push
pop
dec
adc
inc
jl
sub
add
pushf
imul
roll
dec
or
xchg
in
pop
mov
aaa
mov
xlat
lds
and
js
add
inc
ja
icebp
in
in
loop
enter
adc
cltd
bound
scas
sti
sbb
sahf
inc
add
aam
stos
add
mov
sub
call
bound
pop
add
arpl
mov
das
add
into
sti
or
add
ret
mov
mov
mov
cs
shrl
xchg
imul
in
pusha
xchg
testl
add
add
fisubs
sti
add
scas
xlat
push
adc
and
fadds
js
in
cmpsb
add
sbb
add
std
jb
add
add
enter
xchg
es
ja
push
call
adc
xor
pop
clc
adc
outsl
sub
fcompl
xor
jns
xor
mov
enter
pushf
xchg
jle
inc
ret
pop
fcomps
scas
mov
jns
aas
icebp
add
jmp
add
repnz
add
sub
mov
repnz
test
std
adc
aaa
add
add
add
test
dec
test
add
add
repnz
add
add
cld
mov
repz
adc
dec
mov
add
add
add
iret
clc
hlt
add
stc
fwait
xor
mov
orl
test
add
lock
xchg
jno
pop
inc
cs
adc
ds
fcoms
mov
add
add
add
add
xor
in
add
add
add
lahf
sub
xchg
sbb
movsb
cmc
inc
negb
movsb
and
adc
push
dec
push
cmpsb
add
lahf
mov
ret
sbb
lock
add
sub
add
push
fistpl
sbb
jo
adc
add
out
std
fisubrs
popa
lcall
adc
out
add
or
add
push
and
cmpsl
aad
inc
frstor
jne
add
add
scas
sub
mov
or
pop
ficoms
cld
mov
add
pop
daa
mov
jge
sbb
mov
into
adc
sbb
mov
jbe
mov
leave
xchg
push
rorl
rcll
in
pop
ja
jecxz
jno
mov
xchg
cwtl
cmpsl
scas
out
dec
into
jb
mov
cmp
out
push
jg
push
lods
mov
inc
add
and
je
icebp
mov
dec
mov
das
mov
popa
shrb
mov
inc
mov
mov
aas
add
add
add
add
out
inc
xchg
pushf
push
jne
dec
adc
aas
aad
dec
inc
dec
xor
add
xchg
add
add
pop
fcomps
shr
push
ror
xor
jle
xorl
sbb
mov
cs
jae
aas
icebp
test
inc
sbb
ss
push
mov
add
inc
dec
push
pop
dec
adc
mov
into
sbb
adc
cmp
adc
pop
xor
and
jns
jbe
and
aas
pop
in
and
ljmp
jecxz
aas
rcrl
add
std
mov
mov
movsb
mov
and
pop
stos
push
push
incl
out
sub
add
out
add
lahf
sbb
push
pop
jbe
xor
add
add
add
aas
cld
sub
xchg
mov
insl
stc
add
jns
add
orb
mov
aas
or
sbb
out
xchg
add
push
add
pop
outsb
mov
mov
xchg
icebp
xor
fs
popl
add
adc
sbb
xchg
jmp
add
mov
imul
cmpsb
pop
lret
jnp
out
test
mov
xor
sahf
out
aaa
sbb
fcoms
xlat
int
loope
lock
mov
cmc
add
xchg
jnp
sahf
pop
inc
cmp
push
add
outsb
and
das
add
sbb
jmp
sahf
popa
add
add
mov
sbb
lods
sub
dec
addl
sti
int
lea
mov
sub
pop
xor
push
cmpsb
repnz
inc
push
std
jne
dec
lods
or
je
push
mov
in
mov
mov
add
in
pop
fildl
push
or
rcr
imul
outsb
and
add
add
leave
out
mov
dec
xchg
rcrb
push
subl
mov
mov
incl
int3
mov
add
fistl
add
icebp
and
cmp
addb
sbb
jbe
cwtl
out
dec
loope
enter
jecxz
iret
add
push
add
mov
sbb
in
ljmp
xorb
dec
cmp
rol
pop
and
push
es
dec
fnstsw
mov
cmpsb
cmc
imul
xchg
mov
push
mov
das
das
loop
movsb
scas
and
rcrb
loop
dec
push
jge
out
push
or
dec
out
dec
xchg
loope
lods
sbb
push
add
lret
sub
pop
shrl
push
add
repnz
pop
stc
cmp
out
movsl
mov
add
test
sub
jl
pop
icebp
sub
jne
js
cwtl
lret
mov
cmp
pop
mov
fdivl
lods
sub
aam
inc
popf
jg
insb
pushf
adc
fxch
xchg
testb
inc
sub
jne
mov
ljmp
inc
ret
mov
in
cmp
xlat
loopne
inc
repnz
sub
xor
mov
mov
push
scas
repz
call
fsubl
cmp
stos
cld
cmpb
push
sbb
adc
movb
pop
mov
sahf
pop
lods
dec
xchg
inc
sbb
add
push
pop
sti
xor
or
mov
xchg
ja
imul
shll
xor
mov
cmpsl
mull
add
es
add
and
out
push
pop
push
cmp
lds
jne
or
mov
sub
jecxz
jge
jb
fs
arpl
jae
lcall
fcmovnb
add
cmp
inc
push
cwtl
lahf
repz
enter
inc
mov
mov
add
fimull
add
dec
stos
add
sbb
add
add
ret
mov
lahf
ficomps
mov
xor
movb
push
stos
and
add
jns
rcll
test
mov
les
adc
ret
cmpsb
add
mov
xor
es
aam
mov
dec
std
dec
push
cmpsb
fdivp
add
dec
inc
rclb
mov
std
add
pop
stos
dec
ds
pop
add
mov
dec
add
and
push
fnclex
mov
arpl
inc
sbb
movsl
jno
fidivl
fldl
aad
into
mov
loope
xchg
movsb
add
inc
cs
notb
add
add
or
jg
jns
dec
mov
dec
push
out
shrl
or
imul
iret
sti
stos
xchg
xchg
sub
dec
add
lcall
rcrl
gs
jae
add
shll
add
lahf
popa
add
jp
add
js
inc
sbb
dec
sub
jl
jbe
stc
pop
sbb
add
fsubrs
imul
gs
cmc
outsb
insb
cmpl
dec
fcomps
xor
test
and
mov
les
xchg
imul
add
pop
loop
fidivrs
pop
and
mov
pop
add
or
rcrl
jge
icebp
fdivl
fdivrs
mov
ja
aaa
jnp
int
in
shrb
add
arpl
mov
mov
jnp
add
pop
xchg
mov
lds
lods
rcll
clc
das
mov
repnz
shrb
add
call
add
mov
or
jb
xor
jmp
aam
add
dec
shrl
ficomps
imulb
test
mov
aad
or
mov
aad
adc
repz
cli
mov
inc
pop
js
sbb
push
cmp
push
inc
jle
sarl
stos
mov
mov
and
add
xchg
add
push
pop
lods
add
add
out
jmp
pop
add
bound
data16
jecxz
negb
adc
int
loope
out
inc
pop
lret
shrl
out
movsl
aas
push
ds
mov
sub
push
sbb
mov
mov
add
nop
pop
popa
fadds
jae
add
sahf
and
mov
xchg
add
add
out
int3
add
mov
in
dec
lret
push
lahf
fcomip
movsl
mov
add
jmp
repz
sub
mov
je
push
in
xor
add
and
jmp
addl
test
out
sti
leave
out
loope
xor
add
sub
jo
and
add
dec
or
push
sti
cwtl
adc
test
sbb
test
inc
pop
inc
lcall
add
mov
mov
in
lret
push
jb
cld
out
sbb
xchg
stc
sbbl
in
in
inc
and
sub
cld
shlb
jnp
cmp
shr
cli
fs
insl
add
insl
push
outsb
cmc
jbe
jg
push
add
movsl
aam
inc
and
mov
add
add
or
outsl
nop
cld
xor
push
insl
push
cmpb
orl
imul
sub
mov
add
fcmovbe
sub
outsl
inc
mov
sub
ffreep
add
int
push
xchg
mov
and
inc
add
jge
push
cmc
movb
out
jle
xchg
gs
dec
xchg
cs
sub
aad
and
jns
add
inc
jns
mov
shlb
lock
add
js
inc
xor
movsb
add
repnz
cmp
ss
mov
mov
jno
mov
add
push
pop
xrelease
fiadds
mov
and
addb
int3
pop
fsts
adc
add
add
inc
push
add
pop
ss
add
add
imul
sbb
or
or
dec
inc
cmp
add
inc
ljmp
dec
subl
sub
cmp
add
idivb
addr16
mov
mov
xchg
cmpsl
and
add
in
movsl
pop
gs
mov
xor
lods
xchg
mov
xchg
gs
xchg
lcall
pop
es
in
gs
mov
leave
and
dec
xor
add
add
dec
adc
sub
fildl
adcl
test
roll
push
mov
cmp
mov
cld
cltd
aas
out
out
out
int3
fldt
or
fs
stos
add
lret
test
daa
hlt
jmp
add
lret
cmp
xor
sub
push
add
cli
add
arpl
pop
out
sbb
insl
adc
ret
lcall
imul
add
dec
inc
inc
adc
add
loop
cmp
add
and
add
arpl
jle
testb
cmp
arpl
shrl
xchg
cmpl
dec
notb
bound
add
andb
sbb
fimull
ds
mov
test
shrb
xor
mov
stc
popa
dec
out
push
add
hlt
pop
mov
js
loopne
test
outsl
and
mov
into
mov
inc
fwait
adcl
xorb
sub
pop
cmp
sbb
xor
negl
or
and
fwait
lods
inc
and
test
or
fists
sti
jo
pop
add
mov
dec
inc
into
movsb
push
jmp
add
add
add
dec
add
es
cmp
inc
mov
les
stos
ja
xor
pusha
push
adc
jmp
dec
add
lret
xlat
cli
add
add
addr16
push
mov
dec
pop
movsl
dec
mov
mov
add
xchg
test
xlat
ja
cltd
sahf
jno
add
data16
js
cld
pop
and
add
pop
andb
xchg
push
mov
leave
sbb
shll
inc
test
aaa
add
inc
notl
add
xor
xchg
sbb
dec
inc
and
stos
adc
push
add
add
les
inc
mov
push
imul
ficompl
dec
push
rcr
jg
and
sbb
test
push
mov
push
aad
xchg
push
jne
mov
das
adc
jmp
jne
mov
orb
xchg
icebp
cmp
mov
scas
aas
mov
adc
push
stos
arpl
or
add
cmp
cmp
cmp
cs
add
fmull
outsl
jae
pushf
pop
mov
dec
add
adc
loop
aaa
ljmp
mov
and
nop
mov
add
sub
pusha
add
mov
lods
or
xchg
mov
add
sarl
cli
inc
dec
xchg
je
sbb
loop
jp
mov
lret
ret
add
sub
imul
jmp
add
xor
js
mov
addl
inc
and
xchg
add
dec
push
paddsw
out
push
faddp
or
xchg
pop
push
dec
add
pop
jge
adc
cmp
mov
add
mov
pop
pop
jnp
dec
xchg
add
jns
mov
orl
or
adc
fistl
test
push
ret
xorb
movsb
or
jge
xor
test
cmp
je
in
jae
or
push
pop
mov
in
pop
lcall
jne
hlt
add
push
pop
add
push
mov
scas
xchg
movsl
add
mov
adc
push
lret
jge
mov
push
sbb
mov
xchg
lods
and
add
push
mov
pop
fcomp
xchg
scas
pop
jp
ljmp
in
mov
add
jl
xchg
in
inc
shrb
pop
pop
icebp
xchg
add
mov
fdivs
divb
inc
xchg
add
cs
xchg
in
icebp
sub
and
loop
shlb
push
in
pop
push
push
outsb
pusha
bound
add
jp
pusha
movsb
xchg
add
sbb
call
add
add
in
jecxz
cmp
push
xchg
inc
mov
movsl
pop
push
stos
negb
clc
fstl
leave
lock
or
add
add
cmpl
xchg
cmp
add
mov
idivb
add
aam
inc
push
cwtl
lea
push
and
das
cmc
jle
cmp
xchg
push
and
sub
xor
sub
stos
or
cmpsl
pop
mov
jno
lods
mov
aas
dec
mov
inc
push
test
inc
insl
cmp
pop
push
sbb
xchg
dec
mov
mov
outsl
mov
outsl
pusha
lcall
add
cltd
mov
sbb
sub
loopne
int
dec
int3
andl
popa
jmp
sti
pop
adc
loope
inc
add
cmc
cmc
push
cld
pushf
inc
dec
xor
mov
or
test
sub
pop
xchg
hlt
dec
adc
add
add
lret
add
dec
adc
fistl
mov
aam
jg
loop
repnz
fsubrl
inc
push
iret
and
imul
mov
es
add
sub
pop
cmp
shll
sahf
add
xor
insb
mov
loop
mov
incl
dec
ret
dec
add
in
out
stc
add
add
test
aaa
jmp
sbb
add
mov
leave
sbb
add
xor
pushl
pop
mov
add
mov
mov
push
add
mov
daa
icebp
enter
or
fwait
pop
or
push
mov
lret
push
mov
cmp
adc
mov
adc
testl
clc
lret
mov
stos
cwtl
imul
mov
fmuls
dec
stos
xor
lret
add
add
cli
dec
xor
nop
pminsw
mov
cmpsl
add
xor
inc
cmp
push
sbb
lds
add
decb
cwtl
add
add
or
in
and
cmp
cli
decb
cld
daa
dec
jmp
xchg
femms
cmp
je
insb
test
jne
add
popf
xchg
loop
rolb
call
lea
add
mul
add
cmc
aam
and
adc
shr
lahf
pop
jmp
or
cmp
sbb
stc
xchg
icebp
add
push
xchg
pop
push
mov
rcl
inc
mov
dec
popl
pop
lret
sub
or
xchg
and
inc
sbb
in
or
shr
es
cmp
enter
dec
scas
cwtl
adc
daa
cs
mov
out
mov
xlat
jae
add
fs
flds
jb
fldcw
jae
addr16
push
push
cmp
add
pop
mov
mov
inc
add
or
pop
add
lock
adc
gs
xchg
mov
fnstsw
add
repnz
ljmp
dec
lcall
xchg
push
add
and
sub
xor
inc
add
shrl
sbb
icebp
xor
cli
pop
inc
add
mov
xlat
mov
add
pop
in
fsubrl
add
push
jbe
leave
inc
imulb
jns
mov
arpl
sbb
subb
insb
dec
push
hlt
mov
test
push
jg
ds
mov
pop
sub
popf
dec
stc
cmp
jbe
outsl
cmpsb
and
push
not
bound
aad
lret
out
shrb
sbb
push
add
and
add
adc
add
shrd
mov
jl
sbb
mov
sbb
jo
aas
sub
lods
add
ljmp
nop
js
add
punpcklwd
adc
add
jmp
mov
aam
aam
add
sub
add
test
and
mov
lods
cli
and
sahf
xchg
or
nop
mov
add
add
add
orl
movsb
mov
sub
push
ret
sbbb
lcall
xchg
jno
push
dec
jmp
mov
sbb
xor
inc
sub
sub
inc
in
mov
mov
push
add
sahf
dec
mov
imul
les
push
mov
mov
jecxz
sbb
xlat
movsl
xchg
sub
push
xchg
shr
push
enter
mov
imul
lods
push
jecxz
xchg
add
test
std
cmp
inc
fs
add
add
and
adc
cmp
add
shl
mov
in
lods
hlt
leave
jne
add
or
loop
add
or
pop
mov
jno
xor
enter
mov
imul
stos
inc
pop
adc
sub
pop
loopne
sti
jl
pop
mov
xchg
imul
out
outsb
add
cmpsl
aad
dec
cld
sti
gs
shrl
mov
out
push
mov
jl
jmp
nop
push
jmp
sbb
testl
xor
xchg
and
iret
add
lret
add
and
mov
negb
stc
jge
test
xchg
add
add
fistps
rorb
loope
addb
jno
add
xchg
nop
push
adc
or
push
and
imul
sub
add
sbb
int
test
outsb
inc
mov
fcmovbe
add
daa
add
mov
mov
mov
mov
cli
iret
jnp
add
iret
and
mov
scas
jl
sbb
test
add
jl
leave
add
repz
dec
xchg
xor
repz
cld
cmp
cmp
movsb
add
mov
dec
push
add
daa
nop
dec
cmp
cli
add
add
out
pop
cmpsb
cmc
ror
or
inc
lock
push
dec
add
cmp
jmp
jecxz
sub
mov
dec
pop
ds
jl
mov
add
jbe
inc
mov
pop
inc
mov
fs
rorb
mov
xor
add
pushf
js
xchg
popl
jb
mov
xchg
mov
push
add
cld
roll
negb
inc
sbb
mov
push
xchg
mov
frstor
and
mov
add
or
jno
or
jecxz
scas
add
call
add
movsb
mov
add
mov
sub
dec
stc
in
pop
mov
dec
loope
dec
push
repz
add
dec
add
mov
iret
shrb
loopne
out
outsb
add
xchg
add
outsb
or
fwait
xchg
fmuls
add
fcmovbe
out
test
add
mov
loopne
imul
pushf
cwtl
add
addr16
add
cmp
cmp
adc
scas
int3
pop
xchg
dec
jg
mov
call
add
sbb
je
mov
or
out
push
ljmp
and
and
insl
in
and
xor
lret
nop
repz
inc
push
push
push
bound
inc
cmp
aaa
addl
jge
add
pusha
adc
sub
push
inc
inc
mov
jg
int
rolb
add
into
leave
add
or
test
xchg
mov
sbb
out
fimuls
jmp
pop
xlat
gs
repz
sub
call
dec
mov
aam
cmpb
popl
add
and
loop
and
sub
aam
and
add
movsb
cmp
mov
mov
add
jb
cld
rorb
push
stos
aad
cld
aaa
sbb
add
stos
mov
hlt
jae
push
add
in
xor
dec
out
adc
sub
add
in
ds
aad
ja
adc
es
dec
add
push
mov
das
jb
adc
and
out
shl
aaa
ljmp
add
pusha
jno
sbbl
popa
sub
sub
add
mov
mov
add
and
xchg
dec
or
sbb
add
inc
xor
or
scas
out
xor
dec
mov
push
sub
sub
andl
and
lods
outsl
add
ss
es
fsts
cmpsl
push
fistps
or
xchg
lret
es
jmp
sub
dec
push
add
add
shlb
and
pop
js
add
add
cmp
mov
cmp
outsl
xlat
sub
cli
mov
jo
sbb
add
lods
adc
ljmp
jae
push
sub
mov
add
sub
popf
sub
scas
jo
cmp
ret
xor
lds
and
movsb
add
add
fwait
or
ret
jle
add
xor
loope
into
popa
aas
lret
call
add
pop
in
fisttpl
pusha
cmpsl
std
inc
dec
cmp
add
popl
test
popa
mov
movsb
or
mov
add
test
lcall
and
lods
or
jecxz
loopne
sub
jp
fsubr
hlt
daa
mov
gs
mov
lret
add
lret
add
fsubs
ljmp
shrl
loop
or
mov
or
pop
dec
add
cmpsl
jl
or
loopne
mov
pop
lret
roll
lahf
fstl
mov
add
outsl
add
jmp
scas
add
xor
sub
cli
add
fs
js
adc
mov
jbe
pop
jge
hlt
inc
pop
adc
mov
and
cmp
and
add
pop
mov
lock
imul
out
aad
fimull
add
repz
jp
add
dec
rolb
pop
add
lods
and
dec
aad
imul
movsl
daa
dec
add
cltd
xchg
push
cli
push
in
push
add
jmp
jge
shrb
sub
jmp
mov
inc
daa
ds
insl
add
pop
jp
pop
lock
mov
or
sahf
test
test
in
dec
cli
jge
inc
lret
sub
addr16
pop
cld
addr16
jns
inc
je
add
add
dec
lahf
inc
mov
imul
add
dec
dec
jmp
idivb
fwait
cld
adc
sub
jmp
pop
filds
clc
and
or
mov
and
or
and
add
xchg
ret
movb
dec
inc
or
sub
sbbl
add
add
aam
out
js
sbb
adc
sub
lds
popf
imul
sub
das
xor
or
stos
sbb
sub
add
cmp
popf
jmp
jno
push
inc
cmp
and
add
stos
pop
jnp
and
rclb
dec
daa
push
adc
imul
ret
mov
scas
pop
inc
outsl
imul
sbb
mov
jg
int
fadds
divl
psrlq
sbb
fists
rcll
mov
cmpsl
out
loope
sbb
sahf
pop
jl
sbb
dec
mov
cmp
mov
test
verr
ffree
mov
fistpl
or
bound
les
push
dec
mov
add
add
lock
fdivp
in
stos
pop
and
or
outsb
cli
mov
pop
movsl
push
jg
aam
add
in
jecxz
pop
jo
add
mov
addb
and
rorb
cwtl
loope
loop
xor
pop
mov
fildl
sub
or
add
cmc
iret
test
imul
dec
jl
mov
lods
or
imul
in
scas
fsubs
add
dec
add
jle
adc
add
out
lret
mov
subl
arpl
mov
icebp
loop
sti
and
xchg
push
jnp
add
mov
lahf
add
mov
gs
add
test
repnz
fldl
popa
xor
add
into
stc
add
mov
fcom
adc
xor
add
mov
bound
shll
mov
jmp
sub
popf
jg
push
mov
pusha
push
mov
fs
mov
fdivs
add
andl
out
movsl
aas
jns
add
adc
repnz
mov
or
aas
pop
aam
data16
xchg
movsl
add
ja
push
lods
mov
mov
addb
testl
es
add
stos
jnp
cmpl
fidivrs
pop
loop
dec
imul
inc
lock
push
jbe
mov
cmp
xlat
lahf
fiaddl
js
test
cmp
addr16
xchg
cli
loop
mov
test
cmp
fwait
test
cmp
imulb
fldt
pop
jne
mov
cs
sarb
mov
push
xchg
mov
inc
xor
or
push
scas
add
int
popf
test
and
xchg
xchg
sub
adc
and
mov
ret
mov
add
fnstenv
fwait
incl
dec
jmp
xchg
daa
mov
sub
out
js
dec
imulb
es
ffree
dec
xor
loopne
lods
mov
ljmp
pop
pushf
shlb
jmp
popa
rcl
cld
lea
repnz
out
mov
out
jmp
ja
dec
sahf
outsl
scas
push
out
xor
or
es
inc
enter
add
push
mov
cmc
pop
ds
sub
add
add
mov
popl
cmpsl
popl
out
cmpsb
push
jg
inc
lock
enter
dec
mov
jmp
mov
out
add
mov
add
std
je
or
cwtl
cmp
or
cmpsl
add
or
arpl
jae
cmp
int3
inc
push
dec
inc
adc
lods
sbb
add
outsl
iret
mov
aad
sub
popa
cmpsl
sbb
cmpsl
adc
movsb
pop
add
ret
mov
sbb
add
sub
push
push
cmc
testb
xor
jno
sbb
add
add
imul
mov
mov
mov
dec
jp
adc
sub
xchg
cli
gs
cmp
outsl
pop
lahf
jp
dec
sti
inc
imul
and
test
mov
push
xchg
jp
and
lret
test
and
add
jge
add
dec
lods
mov
push
sub
fcoms
lea
pop
cmc
int
cmp
xor
data16
std
xor
gs
jo
rclb
push
jb
repnz
mov
pop
addr16
icebp
push
sbb
and
add
sbb
dec
std
add
es
inc
dec
fsubl
sub
mov
jg
sub
test
sbb
jle
pop
push
addl
inc
pop
jns
or
mov
aas
sbb
fdivs
and
fisttpl
adc
jg
pop
add
mov
jno
mov
out
add
add
sub
ja
rolb
into
pop
add
add
mov
clc
cli
push
mov
add
mov
inc
cwtl
xchg
pop
mov
push
testb
iret
and
mov
cmp
enter
pop
add
or
mov
dec
jle
sbb
flds
cwtl
testb
pop
movsb
jp
movsb
inc
add
sti
add
push
dec
add
mov
mov
jbe
xchg
mov
add
mov
jge
adc
xchg
sbb
lods
and
jg
movsl
sub
fisttps
dec
mov
pop
insl
pusha
divl
aas
mov
sahf
dec
mov
loopne
or
adc
inc
scas
inc
add
push
add
pop
pop
loop
into
loopne
into
add
lahf
out
sbbl
in
sub
add
mov
cltd
in
push
insl
mov
jecxz
dec
xchg
hlt
cld
add
insb
jp
mov
add
sub
sub
cmc
adc
lea
mov
add
push
mov
in
inc
xchg
xor
sub
add
enter
enter
out
insb
outsl
mov
fimull
add
jl
out
popf
ret
leave
popl
xchg
mov
push
and
jno
mov
cmc
int
ret
inc
add
mov
dec
push
jnp
push
repz
test
jae
sti
sbb
jl
mov
dec
in
push
ja
add
add
adc
in
int
add
test
inc
in
jo
bound
ljmp
jge
add
add
or
outsl
sub
and
add
sbbb
ss
lods
scas
mov
loopne
popa
cltd
add
movl
str
mov
cmp
pop
jle
cmp
add
pop
sub
or
cwtl
jmp
test
daa
and
and
add
fiadds
jno
stos
cmpsl
cltd
sbb
add
add
mov
inc
test
add
into
or
loope
add
add
mov
xchg
add
pop
mov
push
add
add
push
subb
dec
dec
neg
cmpsb
mov
lret
jge
add
ret
rcll
push
add
in
shl
xor
or
add
clc
add
mov
and
test
sub
fisttps
shrl
loope
xor
test
mov
movsb
pop
add
or
add
sub
jp
ljmp
lret
pop
or
lret
sbb
xchg
mov
xchg
jmp
xchg
or
sbb
inc
sysret
in
xor
add
call
add
adc
das
sub
jno
push
jne
add
xchg
mov
scas
jns
add
testb
mov
add
or
and
jecxz
lods
sbb
bnd
out
imul
fidivl
call
mov
jne
push
mov
pop
out
add
rclb
push
add
jns
pusha
int3
jbe
dec
stos
insl
and
xor
fistps
les
inc
into
sahf
push
dec
jne
inc
add
dec
add
mov
aad
adc
push
push
ja
mov
into
push
mov
ss
push
add
mov
rolb
and
sti
cmp
inc
dec
add
add
das
addl
add
loop
jmp
lcall
add
sbb
sbb
testb
std
push
dec
jns
dec
fcoml
or
pop
mov
dec
mov
pop
lea
cmc
int
or
gs
inc
and
jecxz
sub
and
add
and
in
inc
int3
ret
add
dec
adc
xchg
sbb
fsubr
xchg
sahf
add
jae
sbb
stos
cmp
adc
fsub
dec
inc
add
add
in
int
jbe
add
inc
insl
nop
add
sti
loope
push
enter
xchg
mov
cld
add
cmp
scas
daa
pop
fs
sbbb
addl
cmp
add
xor
push
mov
mov
lcall
cmc
je
ret
adc
jno
outsb
add
mov
adc
les
cmovne
dec
add
cmp
cmpsb
lcall
in
mov
sbb
pop
or
mov
rolb
iret
sahf
add
lcall
pop
pop
sahf
add
test
xchg
insb
and
push
enter
pop
movsb
jl
frstor
or
add
dec
cmc
lret
cli
aas
scas
cmp
rolb
insl
cmp
loope
sub
sti
push
pop
pop
aad
add
je
loop
mov
mov
addb
xor
inc
sarb
lea
inc
mov
push
sub
sahf
pop
test
int3
ljmp
push
shlb
adc
add
lds
pushf
add
int
cmp
pop
xor
rolb
sub
push
push
push
sub
sahf
dec
xor
lret
add
lcall
and
xchg
jo
je
mov
mov
sbb
add
add
inc
out
inc
mov
je
adc
pushf
mov
mov
ds
in
mov
in
popf
push
pop
test
out
xor
xor
adc
call
jecxz
pop
and
jp
add
les
les
xor
leave
jne
xchg
add
movsb
popa
sbb
add
xor
fistl
add
mov
inc
in
stos
popa
xchg
insb
mov
test
icebp
fiadds
fiadds
xchg
test
bound
cld
lock
fcomip
add
sbb
add
pop
add
inc
xor
inc
shrb
mov
add
cli
fwait
pop
add
push
lahf
sbb
add
imul
mov
roll
pop
adc
mov
lods
add
aam
les
xchg
inc
fldl
jno
sbb
scas
inc
mov
mov
push
pop
or
outsl
mov
cli
sarl
daa
rcrl
dec
jns
and
dec
dec
xor
insb
or
dec
add
add
or
jge
add
repnz
jecxz
movsl
pop
add
movl
add
mov
mov
popf
lret
xor
jns
sbb
pop
cmpsl
hlt
pushf
roll
xchg
push
mov
xchg
pop
outsb
jl
sbb
cwtl
sarl
xchg
push
jl
dec
arpl
add
cmp
jb
cmpsb
push
cmp
pushf
add
sub
nop
sub
lds
inc
inc
in
inc
adc
jbe
lcall
push
add
mov
add
xor
mov
adc
cmp
cmp
sub
push
fstl
str
cmpsl
add
ja
jmp
ss
insl
or
testl
jmp
push
int
mov
orl
add
aas
xchg
rep
or
ljmp
mov
test
inc
push
push
lods
repz
add
jecxz
dec
add
aad
rcrl
add
inc
and
sarb
fstpt
sub
mov
inc
add
into
sbb
mov
xor
mov
jns
bound
and
add
add
and
mov
or
jae
adc
popf
outsl
test
pop
call
push
loopne
mov
or
lret
leave
pop
sbb
shl
add
leave
push
push
add
sti
xchg
std
pop
dec
ret
clc
les
lods
in
int
adcb
shll
inc
and
mov
push
mov
es
jb
jnp
stos
pushf
xchg
dec
loope
fwait
add
cmpsb
fnstsw
dec
add
stos
jp
xorb
push
jnp
movl
and
mov
and
fstpt
add
add
sbb
hlt
test
xchg
push
mov
or
fdivrs
stc
aam
std
mov
cmpsb
xor
xchg
add
xlat
roll
xchg
mov
hlt
mov
call
es
incb
fnstsw
mov
pushf
push
xor
add
mov
jg
test
js
adc
add
dec
clc
mov
fisubl
mov
fisttpl
mov
xor
aad
pop
aaa
repnz
and
pop
test
pop
mov
test
lcall
cli
into
add
pop
inc
decl
xchg
popa
ret
sbb
adc
fisubrl
add
inc
adc
add
dec
clc
adc
inc
or
sbb
adc
ret
lods
mov
aam
xor
inc
mov
adc
add
dec
or
inc
bnd
lods
sahf
cmp
aad
mov
js
bound
addl
lods
add
es
rcll
int
arpl
mov
add
mov
out
stc
xor
mov
jle
hlt
aas
inc
push
fstps
lahf
fs
sub
loope
add
jns
stos
test
nop
mov
aaa
pop
sti
ret
xor
push
add
push
inc
push
or
rcrb
cld
xchg
pop
xor
stc
inc
fcmovnbe
pop
add
xor
sbb
or
repz
fimuls
sub
dec
push
add
mov
pop
add
pop
pop
stc
adc
inc
das
add
push
cwtl
push
inc
shll
inc
mov
fcomps
addb
jl
ficompl
sbb
sbb
shlb
lahf
es
xor
andl
sub
lahf
ficomps
add
xor
xchg
dec
jno
mov
jle
sbb
add
lds
push
sti
jns
xor
xchg
mov
adc
add
sbb
sbb
insl
outsb
outsl
lock
test
stc
imul
or
sub
repnz
imull
cmpsb
sbb
lods
and
push
add
shlb
mov
mov
xchg
and
cltd
or
adc
or
fwait
push
sbb
add
hlt
dec
insb
jmp
lods
mov
add
inc
push
imul
inc
mov
inc
push
gs
jnp
popa
add
repz
mov
push
add
cld
fld1
mov
lcall
pusha
mov
addb
push
ja
ss
in
jae
scas
pop
dec
mov
test
adc
pop
imul
out
sti
dec
sbb
cmp
jle
out
mov
orb
ds
add
sub
add
and
std
or
pop
add
xchg
or
add
sahf
dec
add
mov
loopne,pn
add
adcb
mov
mov
and
subb
pop
inc
xchg
dec
enter
inc
mov
add
outsb
popl
dec
xor
add
mov
bound
scas
mov
xor
sbb
add
add
sbb
movl
cmpsb
out
add
add
push
sub
push
pop
popa
or
push
mov
nop
cmpsb
pop
mov
cmp
loop
adc
shrb
xchg
adc
inc
ret
pop
es
outsl
cmp
cli
xor
mov
push
xchg
add
xor
lret
sbb
mov
add
in
or
add
push
mov
sbb
inc
popf
add
rcrl
daa
add
adc
leave
in
inc
popa
add
fistpll
add
ds
loopne
add
dec
push
or
add
jge
cmp
scas
iret
clc
aad
and
std
out
add
fnstcw
or
lar
pop
sub
fmulp
add
les
add
stc
xor
dec
pop
xchg
test
cmpl
scas
out
push
xor
add
lds
xor
mov
ja
or
pop
cmpsl
sub
add
mov
mov
mov
iret
push
lds
aad
and
add
imul
xor
mov
add
cmp
insl
add
and
mov
lods
dec
aaa
xchg
inc
add
cltd
icebp
add
inc
test
test
in
movsb
lcall
daa
test
add
pop
int
jb
xor
enter
jbe
in
out
test
add
cld
push
das
and
sub
adc
outsl
flds
inc
inc
sbb
and
push
imul
add
sbb
or
ja
fildl
lea
aas
mov
add
sbb
add
push
dec
push
xor
add
fiaddl
inc
xor
add
ljmp
push
dec
add
cmp
push
mov
push
and
add
sub
jnp
js
sbb
aaa
xchg
pop
std
inc
push
and
lea
addl
movb
arpl
add
xchg
cmpsb
mov
loopne
movsb
xor
fcomip
push
add
pop
movsb
jno
lret
or
xor
cmp
mov
and
add
push
or
mov
test
jge
jp
add
push
jg
out
inc
cmpsb
lods
add
test
pop
add
jmp
ret
and
icebp
fst
sahf
pop
add
movb
cmpsb
adc
or
push
mov
test
addl
fdivrl
clc
inc
dec
negl
mov
inc
pop
xchg
repnz
data16
push
andb
clc
loope
sbb
sub
mov
sbb
int3
fistps
mov
push
pop
nop
jecxz
out
insl
pop
adc
mov
movb
movl
adc
test
sbb
loope
jo
xor
pusha
push
jae
stc
inc
add
inc
jle
jg
aam
push
dec
add
add
insl
xchg
testl
pop
out
loop
imul
lods
pop
roll
xchg
jg
mov
add
stc
mov
add
cmp
sub
push
push
add
or
and
cmpsb
cli
inc
pop
jbe
mov
jb
add
loop
mull
imull
out
cmp
add
pop
add
mov
mov
mov
test
add
add
fwait
lahf
xchg
stos
or
cmp
push
popa
or
add
jecxz
hlt
iret
pop
or
xor
lods
add
stos
lea
push
in
xchg
cld
push
cmc
aaa
test
add
or
movsl
stc
in
xchg
and
aaa
leave
add
imul
mov
cli
push
dec
lea
dec
scas
sub
call
test
sbb
sar
pop
addb
dec
in
mov
daa
dec
dec
ss
cmp
scas
xchg
add
mov
imul
pop
loope
push
movsb
sub
daa
paddsb
xor
ja
jo
pop
in
in
add
lret
outsb
mov
add
test
or
aad
imulb
add
sar
cld
bound
cld
pop
sub
add
lock
xchg
sub
add
pop
mov
pop
add
lret
lods
or
lea
mov
adc
add
jg
and
orl
cmp
call
mov
cmpsb
inc
xor
pop
movsl
push
dec
add
pop
fs
inc
and
mov
inc
or
add
notb
decb
mov
jno
add
rolb
mov
and
aaa
insl
add
push
insl
xchg
leave
outsb
add
call
data16
cmp
mov
pop
in
pop
and
push
sbb
addb
subl
and
cmpsb
cmc
jge
mov
lcall
xor
push
pop
int
lock
mov
shll
aad
add
inc
hlt
xchg
lock
mov
lahf
mov
push
add
iret
test
jbe
std
adc
pop
jge
mov
xchg
jo
and
mov
pop
data16
cltd
pop
xchg
int3
cmp
iret
hlt
sbb
mov
in
in
or
push
sbb
jne
add
test
mov
jle
insl
fwait
add
pop
ror
add
popa
and
aad
outsl
clc
sbb
mov
jns
scas
test
lds
jl,pt
rorb
add
dec
add
mov
cmpsl
fldt
mov
rcrl
inc
cmc
sbb
lock
dec
bound
das
mov
inc
lock
fiaddl
push
das
pop
test
adc
out
xchg
add
mov
and
lret
negb
or
nop
push
adc
xchg
cmp
add
cld
inc
jmp
inc
mov
call
xlat
sbb
lahf
add
mov
mov
push
adc
mov
das
sbb
int3
test
loop
push
push
popa
and
mov
cmc
add
add
push
ret
lock
mov
fbstp
jo
popf
mov
gs
add
pop
subl
std
push
or
push
sub
js
nop
movsl
mov
rclb
pop
in
mov
int3
or
dec
popf
inc
sbb
mov
movsb
push
add
std
mov
cwtl
add
push
mov
aaa
aaa
push
pop
mov
mov
jl
or
mov
push
sbb
xor
andb
lods
lcall
add
add
mov
add
fisttpl
test
fs
add
add
mov
pop
enter
mov
pop
adc
jns
sub
cwtl
xor
adc
iret
xchg
mov
in
add
popf
mov
adcl
or
loop
add
sahf
jo
loope
jmp
in
ret
fcoms
mov
dec
and
insb
mov
or
push
add
mov
nop
fdivp
roll
pop
aad
pusha
movsb
add
mov
mov
shll
std
fbld
stos
fisubrs
add
out
jnp
push
xchg
add
add
dec
pop
add
and
push
add
add
add
add
out
out
sbb
imulb
jecxz
mov
enter
add
imul
lahf
addr16
jg
or
adc
cmpsb
push
dec
mov
aaa
jg
mov
inc
and
fcoml
pop
add
repz
inc
test
mov
sahf
dec
in
outsb
adc
mov
and
inc
rcl
and
push
add
mov
jecxz
add
add
add
ret
xor
push
test
movsl
repz
inc
repz
xor
clc
enter
insb
pop
lcall
mov
adc
in
add
add
pop
clc
inc
push
sbb
or
add
mov
sub
testb
cli
jnp
rorb
add
add
test
jp
out
lods
ret
mov
xor
shl
mov
aam
xchg
mov
aaa
add
xchg
push
sahf
fimull
lods
jecxz
leave
push
mov
push
loope
mov
int
aad
mov
inc
xchg
cmp
mov
movsl
add
mov
xchg
es
pop
addl
jmp
loopne
stos
ss
jbe
push
inc
in
lods
mov
xchg
add
dec
arpl
add
test
ret
sbb
jno
aas
jno
adc
push
mov
push
pop
add
aad
jmp
pop
inc
nop
imul
xchg
mov
ret
add
rorb
sahf
add
cli
lds
sub
and
xlat
insl
ljmp
mov
idivb
inc
add
add
addr16
add
inc
add
add
xchg
cld
lds
jo
sti
ljmp
lock
mov
sub
xchg
imul
push
jl
push
add
add
push
xor
dec
sbb
pop
pop
or
icebp
cmp
pop
pusha
pop
stos
add
lcall
or
jp
fsubs
adc
add
jmp
add
mov
popf
and
sbb
inc
push
push
mov
andl
add
sub
add
xor
imul
sbb
sub
lea
dec
enter
push
sbb
add
lock
push
dec
call
pop
inc
inc
fsts
pop
xor
imul
mov
jo
xor
pusha
in
add
idiv
push
xchg
xlat
or
xchg
mov
sarb
aam
int
int
outsl
mov
push
add
es
push
add
ss
mov
and
into
or
pop
imul
loope
push
and
das
aad
add
cs
daa
loop
adc
js
mov
xchg
jmp
mov
cmc
sub
cmp
das
jmp
jg
cmp
sub
mov
out
in
ja
add
xor
and
addb
pop
cmp
xor
ret
push
call
aam
cli
dec
and
gs
dec
or
mov
mov
inc
lods
inc
loope
jmp
add
mov
push
cmp
adc
jg
xchg
add
outsl
or
pop
cmp
mov
fxam
mov
adc
add
sbb
inc
pop
es
pop
movsb
adc
mov
fsubrl
movsl
sub
and
pop
test
mov
lods
test
dec
sbb
outsb
add
mov
rorb
aad
push
movsb
movsb
pusha
mov
loope
inc
add
adc
sbb
mov
add
sbb
jge
jle
xlat
add
cmpsb
out
arpl
inc
add
add
cmp
mov
mov
fcmove
ds
xchg
icebp
aas
add
inc
out
stos
push
add
sarb
enter
data16
sbb
aaa
xor
sti
les
mov
scas
push
sub
insl
pop
scas
mov
mov
mov
in
push
add
nop
dec
sbb
fiaddl
es
sbb
xor
outsl
mov
addr16
adc
add
add
xchg
xchg
rorb
and
out
mov
movhps
inc
add
jns
pop
in
lcall
in
ret
mov
fists
pop
jmp
and
rclb
jmp
and
dec
jae
mov
add
ljmp
inc
xlat
andl
in
test
inc
les
sbb
mov
leave
push
ret
push
add
cmpl
sarl
lods
push
inc
xchg
and
jle
cmp
cmp
nop
or
out
pop
pop
iret
xor
and
out
pushf
in
or
pop
in
int
test
into
add
adc
add
add
stc
rorl
adc
stc
mov
push
inc
sbb
mov
and
imul
mov
and
enter
fxam
jmp
mov
leave
xor
xor
aas
pop
out
push
data16
cmp
or
ljmp
shrl
lods
hlt
sbb
adc
lea
outsb
aad
pusha
data16
mov
in
inc
scas
jge
stc
bound
add
mov
xchg
or
int3
rcrl
add
push
mov
jae
cmpsb
dec
or
call
push
ret
out
xchg
add
push
sbb
xchg
add
aas
and
adc
fnstsw
xchg
aad
in
pop
fildll
fwait
mov
jne
rcrb
add
out
pop
cmp
vhaddpd
int
ret
or
jns
testb
add
jg
jmp
ficoml
rcrl
popa
fwait
sarb
xchg
imul
daa
popa
xchg
jge
mov
pushf
sahf
leave
out
mov
cmpsl
jae
outsb
pusha
add
fists
mov
jo
sbb
pop
pushf
iret
leave
add
in
mov
adc
js
cs
add
lock
in
out
vpacksswb
dec
ret
and
lock
daa
fs
inc
jl
dec
lea
push
insb
or
int3
add
daa
mov
pop
mov
aas
dec
into
mov
fwait
dec
mov
fildl
adc
stos
sub
xchg
add
jo
push
push
pop
push
in
jno
xchg
mov
xchg
push
jp
jno
rolb
and
sbbl
mov
add
add
adc
add
roll
cmp
lahf
arpl
cltd
xchg
in
push
addl
jne
leave
lret
pop
fcomps
gs
dec
outsl
xor
cmpsl
sbb
mov
fs
mov
ret
aaa
pop
fidivrl
mov
push
add
push
add
pop
mov
repz
jb
dec
jmp
idivl
fidivs
push
jbe
dec
pop
xor
daa
pop
hlt
subl
jo
hlt
aad
shll
hlt
push
lahf
add
icebp
push
mov
lea
cmp
inc
imul
cmp
push
stos
sub
or
xchg
jmp
push
in
mov
add
push
addr16
add
add
add
adc
dec
mov
arpl
stc
push
xlat
jno
icebp
xor
xchg
add
and
ja
dec
sarb
cmp
pop
xor
mov
pop
loope
mov
add
data16
popa
add
pop
out
adc
cmp
iret
pop
jbe
in
or
test
leave
push
sarb
xchg
loop
push
loopne
or
add
lcall
insl
lahf
pusha
loop
lcall
inc
dec
adc
roll
add
or
pusha
loop
push
xor
push
push
test
outsl
add
add
or
mov
add
ljmp
les
mov
xchg
add
mov
push
fwait
movsl
bound
fildll
mov
iret
ss
in
inc
mov
dec
sbb
pop
jns
or
dec
add
add
jle
ftst
pop
pushf
jecxz
rcrb
jl
xlat
clc
add
xchg
mov
inc
jbe
pop
bound
push
and
mov
push
or
jno
cwtl
clc
push
out
inc
pop
fimull
cld
scas
dec
clc
ljmp
outsb
popf
add
jl
lret
ja
add
jecxz
sub
mov
cli
fadd
mov
mov
imul
jne
test
sub
pop
pop
jo
ja
pop
pop
mov
xchg
jecxz
push
xchg
ja
cmp
mov
sbbl
sbb
add
fildl
mov
add
jmp
and
mov
into
xchg
mov
clc
jge
pop
imul
shl
in
add
cli
adc
cmpsl
enter
sub
daa
sbb
fyl2xp1
sub
lret
inc
push
sbb
sti
add
mov
jecxz
lds
or
pop
inc
lahf
roll
mov
jbe
push
sahf
inc
in
mov
push
lcall
daa
jmp
or
pop
jecxz
sbb
lds
stc
insl
movsb
fiadds
add
test
add
cld
icebp
inc
xor
mov
jmp
sub
lock
shrb
nop
add
jmp
movsb
sub
into
aad
or
xchg
xor
add
aad
xlat
cmovns
jmp
outsb
cmp
jno
or
mov
mov
aaa
in
add
xor
jp
push
daa
xchg
icebp
push
adc
mov
out
cmc
inc
xchg
icebp
jle
add
jae
dec
test
pop
pusha
lods
outsl
xor
cld
cmp
or
or
push
cmp
push
fistl
pushf
mov
fisubs
add
mov
pop
jns
add
call
pop
scas
or
jae
enter
add
fnstsw
add
mov
push
cmp
add
add
sub
jno
mov
jno
dec
xlat
sti
aad
push
inc
add
mov
les
leave
dec
loopne
jns
les
sbb
cmp
dec
jno
lock
out
and
pop
jp
test
add
es
int
shr
int
dec
add
mov
fistl
dec
pop
sti
add
inc
arpl
sbb
imul
jno
loope
jmp
sub
pusha
lods
add
mov
or
ficoml
pmaddwd
mov
add
shrb
in
dec
push
cltd
push
dec
add
les
sbb
nop
adc
cmpsl
les
push
xor
adc
xchg
xor
fildll
sub
mov
pop
mov
and
sti
add
add
je
das
addl
or
sbb
adc
test
jmp
pusha
sub
mov
pusha
in
xor
add
mov
pop
std
push
jne
adc
inc
xor
push
or
or
pop
cwtl
adc
in
xorl
scas
add
jp
pop
in
icebp
and
push
add
mov
imulb
xchg
mov
mov
pop
add
das
movsb
arpl
jo
decb
mov
loope
test
jo
popa
pop
jmp
sub
mov
das
loop
add
add
adc
mov
add
add
bound
insb
shr
insl
popf
subb
scas
and
add
daa
aad
pop
sbb
fdivs
mov
mov
decb
test
dec
adc
mov
sub
push
lods
pushf
add
xchg
ljmp
jbe
icebp
shl
out
popa
sub
bnd
mov
int
add
mov
push
insb
lret
jg
negl
aas
sbb
repz
xlat
mov
icebp
add
cmp
xor
add
add
pop
daa
fs
movl
mov
test
xchg
xchg
add
mov
lock
xchg
icebp
sbb
lret
push
scas
push
add
xchg
fwait
dec
mov
mov
dec
negl
popf
add
jb
sbb
lcall
ss
int
fisubl
fadds
mov
add
inc
pop
inc
pop
push
add
loop
add
add
aas
add
rol
ret
mov
mov
jae
cs
je
mov
test
nop
repnz
cmp
add
mov
add
fistps
inc
push
notb
sbb
fisttps
fistl
in
and
xor
lock
dec
rorb
mov
add
pop
aam
add
mov
add
add
outsl
outsl
test
sub
jne
arpl
mov
sub
pop
add
aaa
cmpsb
test
and
xchg
xchg
lods
add
xchg
clc
add
mov
add
mov
rolb
movb
jp
ret
cmp
divb
and
add
mov
lock
push
and
stos
adcb
sbb
pop
jb
cli
sbb
cmp
subb
lods
lea
mov
xchg
add
stos
cmp
pop
call
add
mov
pop
add
les
inc
xor
movsb
clc
pop
cmpsl
fidivs
xchg
les
xor
sahf
enter
or
out
in
sub
mov
mov
xchg
sbb
test
cmc
sub
bound
sti
test
add
pop
rolb
or
mov
cmc
xlat
cmp
sbbb
movsl
jb
arpl
test
js
pusha
xor
test
xor
xchg
jne
ljmp
dec
jp
mov
adc
add
movsb
sub
lcall
sub
inc
imul
xor
ja
pop
rorl
in
push
daa
add
add
cmpsl
sbb
ds
inc
dec
inc
jns
arpl
mul
inc
enter
xor
stos
or
daa
xor
inc
or
or
aas
cli
mov
mov
push
loopne
cwtl
or
fisubs
test
xchg
enter
lcall
cmpsb
movsl
add
xor
pusha
fwait
add
xchg
dec
cltd
sbb
test
jp
xchg
jle
insb
inc
and
test
add
fs
outsl
lods
mov
jge
inc
daa
inc
dec
call
add
sub
add
sbb
adc
addb
mov
js
aaa
cmp
fwait
inc
add
jo
adc
fcom
lcall
add
xlat
add
out
aad
inc
jne
mov
int3
add
cmp
mov
scas
xchg
cwtl
lds
stos
xchg
mov
add
pop
fwait
or
ror
xchg
mov
roll
xchg
jl
sub
push
data16
pop
push
movb
lcall
add
add
jg
cwtl
and
push
jmp
ss
fs
cld
dec
jno
push
push
xlat
bndldx
mov
int
jae
inc
fs
lcall
add
jb
add
ljmp
or
mov
or
push
dec
sub
leave
sub
ds
pop
ja
pop
push
je
xchg
fldl
or
add
or
xor
sub
lods
fsub
add
mov
call
mov
mov
lds
aam
pop
pop
adc
jno
aad
std
stos
mov
iret
frstor
mov
push
add
xchg
rorl
std
cli
movsb
add
xor
mov
lods
jp
jno
add
pop
add
xor
push
fdivrl
scas
andl
test
les
mov
cld
mov
xchg
popa
call
out
and
imul
mov
icebp
mov
lahf
cmp
cs
add
mov
or
sub
lds
inc
in
ja
push
popf
cmp
roll
or
push
and
mov
mov
orl
movsb
sub
sub
mov
add
jl
push
xchg
sahf
sub
sbb
add
jmp
pop
pop
jecxz
pushf
sub
xor
dec
xchg
add
jae
nop
pop
push
into
and
mov
mov
mov
sbb
es
add
pop
jae
cmpsb
add
xchg
sbb
inc
adc
aam
scas
add
push
jbe
int
add
xchg
sarb
jl
repnz
cmc
in
pop
cld
push
or
ret
loopne
es
push
lcall
imul
lods
notl
addr16
jnp
gs
jae
fadd
hlt
scas
popf
mov
add
roll
mov
dec
mov
adc
mov
scas
cli
or
and
or
mov
xor
sbb
mov
push
mov
loopne
lret
rolb
xlat
movsl
stos
jbe
mov
addr16
adc
push
add
add
shlb
xor
mov
add
loopne
lahf
jge
outsb
cld
lods
xor
aaa
or
add
and
mov
and
and
xor
call
lret
sub
add
push
ss
or
jne
sahf
add
fsub
xor
popa
ficoml
mov
jge
filds
lds
pusha
cmp
add
add
add
out
out
push
jae
mov
xor
add
into
rorb
jno
add
dec
fucomip
pop
lea
mov
jne
cmpsb
lcall
push
add
sbb
stos
mov
sub
mov
mov
lea
push
orb
jecxz
scas
adc
in
cwtl
aam
aad
in
addr16
xchg
imul
ficoml
mov
push
mov
xchg
insl
push
sub
cmp
movsl
xchg
cwtl
loope
jb
xchg
mov
jp
add
xchg
divb
fs
sbb
fistpll
ficomps
mov
popf
test
adc
shlb
mov
add
sbb
jae
cmp
sbb
insl
add
gs
add
ret
add
add
xchg
sub
mov
imul
pop
dec
dec
and
xchg
sti
in
push
sbb
aad
pushf
add
loopne
rolb
dec
rcrb
das
test
cmpsb
add
fisubs
ja
dec
div
add
xchg
test
or
std
jbe
insb
cs
pusha
sbbb
cwtl
add
mov
sahf
add
cwtl
xchg
pop
mov
cmpsl
mov
outsb
je
inc
add
sbb
cltd
inc
sub
xchg
add
add
xchg
and
in
push
sti
bound
xchg
add
lcall
rcrl
js
out
add
out
add
dec
and
lahf
pop
push
outsb
cmp
pop
xchg
and
jns
mov
add
add
out
jno
jge
xchg
jae
in
add
dec
add
jno
pusha
xchg
or
jne
out
add
add
addl
xchg
ljmp
pop
cmp
sahf
add
inc
xchg
xor
mov
test
pop
shlb
cli
mov
jo
push
int3
mov
mov
je
sub
mov
mov
add
scas
orb
std
add
fsubrl
outsb
mov
sbb
add
out
add
lret
scas
add
xchg
loope
mov
add
add
jecxz
call
inc
jge
popa
inc
add
add
mov
push
popf
jne
popl
dec
jmp
inc
es
jnp
pop
cmpsl
in
mov
imul
pop
and
fiadds
loope
es
inc
pop
push
mov
add
or
add
sahf
shll
in
iret
inc
xchg
clc
add
leave
loope
das
outsl
dec
mov
adc
cmp
pop
mov
cmp
int3
fwait
inc
fldl
daa
dec
push
add
cmpb
add
mov
inc
in
mov
movsl
add
lret
cmp
cltd
das
jno
or
cmp
dec
xchg
add
subl
mov
lret
shll
dec
mov
xor
inc
inc
add
pushf
in
xor
xor
pushf
outsb
jne
add
add
pop
out
aad
fdivrl
add
add
popa
test
andnps
imul
loope
stc
xor
pusha
movsb
xor
loopne
and
or
mov
je
out
push
js
xchg
idivb
repnz
bound
xchg
sbb
jp
and
cld
sbb
xor
add
je
add
add
cmp
shl
adc
xor
outsl
leave
sub
pusha
push
rorl
dec
inc
push
mov
pop
sub
sub
xchg
cmp
and
mov
in
lods
sbb
mov
or
fisubs
ret
popf
or
xchg
or
cwtl
lret
stc
rol
repz
test
cmp
add
dec
jl
cmp
or
pushl
adc
add
lret
add
aaa
dec
scas
dec
mov
addb
subl
daa
test
adc
sub
add
daa
lret
pushf
jl
cmp
dec
test
mov
repz
test
mov
cmpb
add
mov
jge
out
xchg
or
ja
stc
and
into
xor
outsb
iret
or
roll
mov
pop
sar
ss
fildl
sbb
ret
test
cmp
sub
mov
mov
es
and
and
dec
fbld
add
mov
ja
mov
ljmp
sahf
pop
repnz
lds
add
inc
addps
mov
push
xchg
sbb
sarb
and
add
jge
aas
stos
inc
add
in
cmc
pop
mov
aaa
movsb
popf
add
andl
inc
ss
inc
lcall
popa
xorl
add
into
add
add
add
pop
xchg
hlt
mov
mov
sub
les
and
and
dec
add
sbb
addr16
sbb
sbb
sub
xorb
mov
movsl
pushf
xor
add
add
push
in
daa
outsl
jno
xchg
cwtl
in
add
dec
and
incb
mov
sbb
pop
je
testb
sbb
xchg
inc
push
add
push
mov
addb
xor
stos
cmp
and
repnz
adc
mov
xchg
sarb
and
push
pop
lcall
call
add
xor
jns
daa
sbb
fcmovnu
xor
dec
push
cmp
lret
js
add
leave
insb
push
icebp
jmp
jnp
icebp
xor
fwait
sbb
sbb
repz
sti
inc
inc
in
pushf
stc
add
orl
or
add
subl
in
sub
pop
mov
sub
add
and
mov
cmp
jo
imul
inc
pop
stos
cld
ja
push
or
sub
test
add
push
mov
add
inc
jbe
faddl
stos
mov
fsubl
xorl
decb
push
cli
and
out
or
or
sub
xor
cmc
jle
pop
cmp
jbe
mov
jecxz
mov
ja
dec
sbb
push
dec
sbb
stc
arpl
imul
add
sahf
adc
mov
add
add
into
add
add
adc
lds
cmpsl
xchg
nop
jbe
xchg
loop
lcall
add
fistps
mov
mov
hlt
xlat
aam
xor
mov
cwtl
jp
rorb
xchg
out
dec
push
cmp
rcl
fdivs
add
add
add
ja
mov
cld
add
and
sbb
push
xchg
mov
or
insl
adc
clc
dec
pop
jle
lret
jl
mov
bound
int3
add
aad
add
add
out
cmp
in
ss
les
loope
xchg
adc
subb
stos
sub
mov
mov
cmp
nop
pop
cmc
add
sahf
cwtl
movsl
in
aaa
fisubrl
in
jae
xor
push
dec
and
lahf
or
xchg
and
pop
mov
xchg
daa
mov
insb
add
js
dec
jne
faddl
movntps
push
mov
mov
out
cli
testb
jp
call
add
or
add
popa
jno
out
mov
addl
inc
mov
rolb
and
cmp
fistpll
or
fdiv
out
inc
adc
sahf
hlt
cmp
add
xchg
xor
pop
mov
jg
jl
cmp
lods
lahf
movsb
sarl
sbb
push
mov
dec
cmpsb
inc
test
imul
sbb
aas
pushf
sub
mov
sbbl
add
in
and
fstl
sub
jno
fcom
add
ret
inc
adc
add
aad
mov
xor
dec
pop
mov
pop
xor
or
mov
pop
mov
ja
dec
push
sub
loop
sbb
add
rcll
fs
mov
addl
dec
faddl
mov
xchg
out
and
setg
test
add
jo
leave
aad
xchg
add
mov
lods
push
add
cmpsb
rcrb
int
inc
mov
cmc
faddl
iret
add
sbb
dec
mov
inc
pop
mov
nop
xor
std
fimull
or
push
dec
add
or
push
in
add
add
mov
add
fiadds
push
jecxz
fldenv
adc
sub
nop
cli
adc
dec
sub
repz
sbb
inc
sbb
dec
and
mov
lods
add
push
add
imul
pop
sbbl
xchg
stos
out
xchg
lahf
mov
sub
fdivrs
mov
cltd
fldl
push
iret
lods
add
pushf
mov
movsb
fisubs
adc
lahf
in
add
add
jp
mov
jmp
cmp
loope
add
ss
rcl
lret
lcall
or
jp,pt
lcall
inc
add
shll
pop
pop
fs
call
mov
add
pusha
pop
mov
nop
mov
push
bound
xor
sahf
mov
add
xchg
ficoml
inc
add
out
add
sub
mov
mov
addl
out
add
gs
add
dec
add
mov
add
popf
jnp
mov
mov
sub
add
cmpsb
push
dec
jne
jp
fs
popf
enter
dec
mov
sbb
jnp
ljmp
out
sbb
jmp
fiadds
jecxz
jl
pop
dec
pusha
dec
add
xor
enter
add
add
inc
add
pop
mov
loopne
insl
add
mov
xchg
lcall
sbb
setb
add
repz
and
in
xchg
sub
add
sahf
fstpt
dec
pop
add
xchg
out
jge
add
scas
and
in
xchg
add
and
add
add
repnz
add
add
mov
pop
mov
dec
pop
sbb
add
add
cli
repnz
and
xchg
mov
cmpsl
jle
inc
repz
mul
sbb
add
lods
lret
mov
add
xor
mov
adc
add
add
adc
leave
inc
add
add
cmpsl
clc
inc
xlat
mov
movsl
movb
jb
rolb
flds
push
andl
xor
dec
add
adc
sldt
pop
sbb
xor
dec
fs
lcall
pop
cmpsl
mov
sub
pop
int3
add
add
jle
xorb
into
adc
jbe
mov
dec
aaa
add
es
jl
add
xor
pop
add
add
xchg
add
mov
mov
cmp
add
mov
int3
xchg
jp
cmp
ljmp
add
lods
enter
rcll
or
jo
dec
mov
pop
mov
push
push
mov
fistpll
outsl
xor
xchg
sarb
fistps
add
push
rolb
jp
in
adc
mov
stos
lcall
imul
inc
pop
add
mov
aam
add
fildll
and
inc
lret
cld
jg
adc
push
mov
inc
push
and
pop
add
push
lret
dec
clc
jns
add
rcll
loopne
ljmp
mov
add
scas
add
and
mov
mov
cmp
xchg
add
add
cmp
mov
jle
jb
dec
cltd
or
insl
fsubrl
insl
test
popa
add
lcall
sub
cmp
incl
xor
pop
or
add
add
add
pushl
sub
add
mov
icebp
mov
andl
lea
jnp
mov
pusha
inc
add
lock
dec
test
ss
sub
cmpsb
bound
pop
add
adc
jmp
jo
sub
xor
mov
sti
push
mov
test
push
mov
dec
add
dec
xchg
add
hlt
fildl
fbld
dec
ret
cs
mov
mov
xchg
sti
add
pop
add
pop
push
push
lcall
test
pop
add
xchg
push
stc
mov
iret
sbb
mov
js
sbb
fcmovbe
or
xchg
pop
xchg
adc
mov
xchg
fadds
icebp
stc
inc
jno
push
sub
mov
cli
and
popf
pop
xchg
or
pop
mov
mov
xchg
pop
jmp
add
push
push
loopne
test
jp
xor
insl
add
outsb
jmp
dec
incl
shl
xor
ret
outsb
out
sub
cmpsl
add
pop
cs
jge
and
inc
cmp
xchg
push
shll
imul
mov
icebp
xchg
add
push
insl
add
jmp
sub
sub
adc
cmpsl
inc
lret
lcall
mov
std
sahf
mov
movsl
xchg
lcall
adc
xor
jl
clc
add
cmp
mov
add
push
add
mov
lcall
int3
loopne
arpl
push
add
dec
pop
test
stos
out
push
pop
add
pop
push
and
dec
jge
mov
dec
push
fldt
pop
popf
fsubrl
cli
sbb
imull
mov
add
mov
mulb
lret
jae
jmp
cmpsl
inc
add
in
imul
stos
cs
mov
movsl
and
and
jno
or
ljmp
lahf
xchg
dec
scas
aad
xchg
add
dec
inc
stos
mov
sub
mov
jl
xlat
xor
ss
inc
data16
xchg
add
sub
xchg
dec
scas
out
mov
arpl
sub
add
test
push
dec
scas
xor
sub
xor
mov
and
shll
jmp
leave
push
shlb
jecxz
flds
call
jnp
fwait
pop
push
add
cmp
testb
loop
lods
pop
loop
inc
mov
dec
dec
jl
cmpsb
sbb
and
push
add
mov
repz
xlat
inc
mov
or
push
cli
inc
adc
dec
std
cmpsb
in
jle
and
lret
dec
cmovo
jns
and
inc
jge
gs
add
mov
xor
mov
mov
push
adc
add
xor
pop
sub
inc
test
jl
push
test
out
leave
or
mov
xor
test
add
jns
add
or
iret
cmp
jp
or
ret
insb
cmp
arpl
mov
lock
mov
stos
fbstp
rcrl
add
stc
add
in
sbb
jmp
mov
sbb
xor
loop
mov
outsl
lret
jp
jne
dec
adc
cmp
mull
es
into
mov
in
sub
xchg
add
iret
push
scas
bndldx
sbb
pop
add
stc
ss
out
mov
sub
call
add
and
xchg
and
adc
mov
dec
push
sub
and
sbb
xorl
xchg
push
add
cmpsl
pop
push
push
int
add
scas
mov
dec
scas
mov
or
iret
into
daa
out
xor
loop
out
inc
jns
xor
stc
loopne
enter
scas
faddl
aaa
add
mov
jp
push
jae
inc
jbe
jb
add
loopne
es
xor
flds
es
push
fisttps
add
cwtl
mov
popa
popa
lock
or
iret
mov
add
xor
xor
add
test
dec
lahf
shll
cli
cs
sahf
adc
xchg
pushf
jge
std
mov
arpl
fwait
int3
insl
rclb
and
or
lret
incb
dec
add
add
in
stc
mov
fsubr
pushf
mov
add
jge
fnstsw
in
scas
lahf
add
test
sub
add
fidivrs
gs
add
jl
pop
sub
in
jle
in
rcll
jl
xchg
add
push
or
jg
stc
sub
sub
add
lret
rcrl
aam
or
lahf
cwtl
add
lds
jmp
cmp
stos
cld
xchg
xchg
stos
jbe
push
adc
push
lods
adc
xor
or
nop
js
and
cmp
push
push
nop
std
cmp
add
add
xor
jbe
mov
dec
adc
mov
add
add
ficomps
inc
aaa
xabort
add
or
jne
adc
mov
enter
inc
add
jae
mov
push
add
pop
lds
or
sub
ret
cltd
test
jg
add
lods
sbb
and
je
mov
int
xchg
lods
sbb
xchg
mov
mov
int3
popa
jmp
dec
xor
pop
pop
inc
xchg
jge
mov
movsb
lret
adc
pop
dec
xor
pop
and
mov
in
lcall
add
leave
and
ds
and
add
movsl
fcmovb
das
loop
add
cwtl
xor
push
adc
cmpsl
mov
push
divb
xor
cmp
cmpsb
movsb
jecxz
sbb
xlat
aas
fcom
jb
int
cmc
push
fcoms
add
sti
xchg
loop
loopne
lods
es
xor
das
add
clc
and
xchg
and
mov
ljmp
int
push
loopne
mov
xchg
inc
xor
cmc
cwtl
mov
gs
sub
jecxz
fisubrs
shlb
test
aad
add
add
xor
scas
jecxz
cmp
push
mov
jecxz
popa
inc
add
mov
add
adc
adc
add
and
sbb
inc
imul
xlat
test
incl
jb
add
sbb
jns
clc
cld
xlat
ffreep
sub
mov
add
out
inc
loope
jmp
pop
lahf
mov
inc
add
inc
adc
xchg
xlat
outsl
and
push
or
xchg
mov
cmpsb
ret
pcmpgtw
iret
and
add
push
int3
pusha
xchg
pop
add
dec
pop
fists
flds
imul
jns
inc
pop
testl
int3
push
mov
push
cld
cmovno
dec
add
hlt
cltd
in
add
mov
pop
pop
arpl
add
rclb
sbb
lret
jne
pop
dec
cmp
fs
add
sub
lea
rolb
adc
xor
pop
add
not
notl
dec
mov
xchg
cmp
shr
xchg
lea
cmp
add
add
daa
enter
aas
add
rolb
testl
sbb
push
jne
pop
sbb
add
add
or
mov
iret
sbb
mov
aad
jbe
imul
add
sarb
inc
icebp
test
inc
add
loop
xchg
adc
in
mov
mov
rclb
adc
scas
xchg
push
cmp
jbe
add
bnd
data16
add
pop
dec
add
lods
sbb
leave
sbb
or
pop
outsl
nop
insb
push
inc
jo
xchg
add
mov
test
add
das
bound
leave
cmpsl
add
js
jnp
push
shr
into
scas
pop
jp
mov
lret
push
imul
std
or
pop
mov
adc
fsubp
lods
es
add
inc
and
push
pop
bswap
scas
pop
aas
sub
roll
loop
ret
mov
add
jb
mov
xchg
or
mov
mov
outsb
fnsetpm(287
cmc
adc
shlb
xor
push
in
das
inc
dec
xrelease
orb
cwtl
dec
add
aaa
sarb
cmp
sbb
add
aas
xchg
jae
push
nop
add
decb
add
negl
add
sub
imul
in
add
add
scas
fmul
or
pop
lahf
in
mov
xor
add
js
or
mov
scas
test
fildl
out
push
push
lea
imul
cmc
add
cmp
xor
inc
cs
xchg
mov
push
shlb
sahf
stos
test
add
mov
add
call
add
pop
pop
dec
rorl
cli
add
xchg
lea
dec
in
addr16
aas
test
or
xchg
mov
add
sub
mov
mov
adc
pop
mov
inc
cmp
xorl
and
popf
or
std
daa
fcmovnu
xchg
sbb
movb
add
push
and
push
add
in
popa
mov
inc
pushf
jmp
je
push
xchg
mov
into
sub
pop
les
add
divl
add
orl
dec
jae
add
fdivrs
adc
inc
mov
icebp
and
or
cmpl
subb
mov
mov
and
add
or
ret
xchg
add
rcrb
lock
push
add
sub
dec
jp
xchg
filds
push
adc
dec
add
add
add
and
aad
fcomps
inc
ja
add
add
mov
mov
pop
and
xchg
cwtl
pop
mov
and
adc
icebp
pop
dec
mul
ret
and
add
and
iret
dec
and
or
cmc
shll
add
or
scas
push
cmpb
insl
pop
flds
gs
insb
in
leave
xor
inc
ret
pushf
call
xchg
stos
enter
pop
in
mov
in
add
pop
lds
add
popa
jne
jb
data16
scas
pop
ficoms
inc
addr16
pop
lods
adc
ret
or
fbstp
mov
adc
into
jno
sub
mov
mov
jl
ror
rcr
inc
insl
and
insl
out
cld
push
xchg
es
lea
aam
addb
jae
mov
inc
test
sbb
cld
add
jl
add
inc
cmp
test
ss
mov
ljmp
cli
add
jns
inc
iret
or
inc
test
roll
adc
repnz
add
add
cwtl
mov
in
mov
arpl
notl
add
sbb
leave
imul
inc
jb
mov
jo
into
lcall
cmp
push
mov
test
ja
adc
std
repz
sti
fiadds
std
push
scas
mulb
test
roll
in
add
and
add
fldcw
aas
in
add
filds
lds
loopne
aaa
stos
or
add
lds
pop
cwtl
dec
sbb
testb
stc
mov
jbe
xchg
rorb
add
jle
or
lock
int
enter
loop
mov
lcall
dec
jo
dec
test
int
jnp
int
fcmovu
mov
add
adc
data16
stc
push
dec
lahf
jbe
insb
push
stos
test
aam
aaa
jbe
jae
movb
lods
push
pop
aam
xchg
cmp
mov
in
xor
ss
jno
bnd
bound
std
stos
add
add
and
jo
dec
mov
sub
adc
pusha
xor
mov
loope
add
flds
inc
rep
push
test
jg
fxam
and
adcl
mov
xlat
movsl
fwait
clc
or
jp
xorl
xchg
mov
jg
flds
dec
mov
cmpsb
or
and
jns
push
pop
add
inc
outsb
vsqrtss
test
pushf
sub
lahf
pop
cli
dec
leave
add
sahf
push
jl
mull
xchg
lahf
aas
add
mov
mov
pop
add
cld
add
out
add
dec
mov
inc
add
pop
add
jmp
push
scas
add
repnz
outsb
dec
dec
scas
xchg
add
test
add
les
cmpsl
add
cmp
mov
xchg
lock
xchg
testl
dec
cmp
mov
sbb
xchg
fucom
add
cmpsb
push
iret
add
and
add
andl
push
lods
rorl
xchg
ret
cmpsl
jl
lret
pop
jbe
add
push
xor
add
dec
out
push
push
cmp
jne
and
xlat
clc
sbb
aas
lahf
sub
les
mov
jecxz
sahf
lret
bound
pop
pop
add
jmp
or
sub
add
pop
add
ljmp
and
jl
pop
in
pop
sub
add
mov
xor
add
add
add
gs
fstp
popl
movsl
fmul
sub
loop
sub
add
xchg
mov
push
xor
flds
repnz
jp
add
sbb
add
mov
je
jo
fwait
lods
fucomi
jbe
in
out
lret
add
dec
jmp
add
add
sbb
jae
mov
mov
add
pop
in
pop
push
mov
ss
add
cmp
xor
jmp
outsl
sbb
addr16
inc
cmp
movb
insb
adc
jne
push
pop
pop
add
ljmp
sbb
cmpsl
jae
add
in
cmpsb
sub
das
out
add
pop
outsl
call
pop
mov
push
loope
dec
add
add
fbld
dec
pop
dec
cmp
inc
in
fistl
and
jle
jb
push
mov
pop
mov
pop
jno
add
mov
mov
xchg
or
incl
and
sub
cli
stos
add
jl
add
add
add
add
add
add
push
stos
popf
mov
push
int
add
inc
add
mov
les
pop
jle
add
xor
dec
sbbl
out
push
stc
and
sbb
call
push
es
ljmp
in
movsl
add
push
js
mov
jnp
shll
inc
xlat
add
pop
iret
inc
jle
cmp
add
les
cli
cmp
gs
mov
add
xchg
pop
into
sbb
and
loope
sub
jecxz
inc
add
and
cmp
push
clc
add
shrb
mov
popa
add
scas
shlb
in
loopne
mov
cld
int
gs
cli
aaa
insl
xor
mov
add
dec
loop
xor
filds
int3
call
xor
pop
aaa
add
adc
xchg
add
add
add
pop
sbb
jne
cmpsl
dec
add
ret
adc
jp
stos
add
out
add
add
sub
dec
loop
mov
adc
ret
mov
fs
add
bound
and
mov
jb
dec
dec
and
lds
out
popl
push
xor
lods
test
xlat
sub
sbb
imul
cmp
mov
insb
aam
sub
nop
add
shll
or
adc
fistpll
movsl
jmp
sti
push
mov
in
push
add
xor
lahf
adc
push
call
movsl
add
in
lahf
mov
sbb
xchg
add
in
ljmp
fbstp
mov
xor
or
jnp
xor
sbb
test
outsl
add
add
es
addr16
pop
inc
mov
and
nop
add
dec
push
jle
popf
ss
adcb
mov
fsts
outsl
add
popa
and
push
mov
addl
stos
cs
add
clc
aad
lock
mov
aas
imul
test
sbb
jmp
inc
cmc
or
or
add
fsubl
outsl
sbb
inc
jle
in
imul
or
adc
fildll
je
or
add
mov
mov
xor
insb
aaa
inc
jbe
cmp
adc
in
add
add
cmc
mov
std
cmpsb
jp
imul
adc
pop
sub
xchg
mov
push
bound
pop
inc
cmp
mov
xchg
lds
test
ja
xor
fisubs
add
dec
push
adc
call
xor
pusha
xor
andl
les
xor
mov
xchg
cs
xchg
add
xlat
rorb
orl
cmp
mov
enter
shr
dec
add
adc
jo
xchg
test
scas
movb
lret
clc
sbb
mov
xlat
dec
dec
in
add
jmp
fsubs
mov
jnp
ds
xor
and
aad
sub
test
sbb
mov
push
push
xchg
add
push
nop
stc
pusha
adc
push
mov
das
aad
mov
call
sbb
jle
repnz
mov
inc
jg
aas
xchg
mov
sti
scas
xchg
add
movsl
and
sub
add
xor
mov
add
lcall
cmp
add
and
pop
sbb
add
arpl
data16
sbb
xchg
mov
add
jle
fildl
imul
imul
pop
ret
adc
jo
add
ds
sbb
les
dec
and
jmp
inc
push
add
cmp
addb
cld
add
jb
or
add
push
mull
leave
cmc
add
cmpsl
mov
in
inc
adc
inc
add
and
sub
nop
or
xor
add
xchg
add
xchg
stc
inc
or
inc
jecxz
add
out
jl
js
push
or
fldenv
ljmp
lret
ds
pop
jg
mov
fisubrl
push
cmpsl
cmp
xchg
add
xor
and
hlt
jmp
cs
aas
int
add
mov
test
pusha
pop
mov
pusha
lock
cmc
add
jbe
loope
sbb
fldl
xchg
daa
sub
or
dec
leave
fisttps
aas
in
push
sub
or
xchg
xchg
adc
mov
movsb
ret
or
or
in
add
push
es
inc
imul
into
iret
mov
out
add
not
imul
jl
imul
xor
cmpsb
leave
cli
xchg
mov
aas
imul
mov
mov
adc
sub
adc
inc
test
insb
movsl
mov
cltd
inc
aad
lcall
mov
stos
add
mov
pop
and
and
dec
sbb
add
and
jno
push
imul
push
sub
xor
add
mov
mov
cs
loop
mov
cmp
xorb
push
ret
out
ret
out
add
popa
mov
jbe
inc
test
loop
pop
xor
cmp
add
in
pusha
cmpsl
int3
xor
adc
pop
outsb
sti
test
mov
aam
fadds
mov
add
mov
mov
pushf
add
add
jnp
sbb
outsl
sub
pop
aad
das
in
pop
addl
cmpsl
cmc
push
xor
insb
lds
push
add
add
add
aad
cmc
xchg
mov
mov
rcrb
mov
xchg
xchg
subb
mov
mov
add
add
or
or
adc
jo
or
jne
xor
sti
xchg
pop
xchg
pusha
call
mov
cmc
cmc
and
xlat
scas
mov
mov
xor
mov
xchg
test
mov
jo
adc
add
ficoml
dec
pop
jbe
mov
inc
xchg
insb
push
and
loopne
add
imul
or
sbb
mov
ds
fs
addr16
xor
ds
push
mov
loop
sbb
sbb
mov
pop
outsb
lret
insb
fwait
add
es
cwtl
cld
add
lret
shr
adc
cmpsb
add
and
dec
jl
pop
dec
jbe
jcxz
mov
nop
insl
bound
sub
add
popa
fsubl
jecxz
mov
fildl
mov
add
lds
subb
and
sbbb
sar
cmpsl
pop
lret
xchg
iret
iret
loope
xor
repnz
fistps
in
push
xorl
sub
push
adc
enter
out
icebp
sub
xor
add
add
repnz
add
mov
loope
push
add
pop
mov
mov
stos
ret
cwtl
test
add
lret
lods
xchg
mov
cmp
lock
pushf
push
xchg
pop
push
add
add
mov
arpl
lret
fsubrp
loope
add
cmpsb
xor
and
cld
jl
out
popa
inc
adc
in
or
pop
xchg
fildll
mov
test
add
iret
mov
mov
rclb
xor
rclb
fildl
fs
mov
cmpb
fstpl
dec
jecxz
lods
add
and
sahf
push
cmp
add
cmp
sahf
bound
mov
pop
cmc
adc
cs
add
in
popf
les
icebp
in
add
mov
cmp
push
push
and
pop
add
inc
lods
mov
bound
inc
jo
xchg
lock
xlat
rclb
mov
jne
jne
sub
sub
inc
add
add
add
aaa
aas
xor
push
sbb
push
outsl
xchg
or
adc
add
push
loope
xchg
addr16
add
adc
cli
pop
adc
sahf
and
call
or
jno
iret
mov
mov
add
pop
frstor
sbb
inc
ret
cli
ret
push
pop
xlat
sbb
or
sub
cmpsl
adcl
add
shrl
cmp
in
and
pop
arpl
add
andb
pop
gs
jmp
rcll
push
add
inc
jne
fadds
inc
aaa
aas
add
add
jecxz
pop
push
je
test
sub
test
inc
push
inc
jg
adc
mov
test
les
ds
fadds
dec
xchg
mov
out
iret
xor
add
add
inc
lahf
daa
lret
dec
cmpsl
pop
icebp
inc
mov
jge
stos
add
gs
add
mov
mov
and
add
or
cmp
popf
add
xchg
add
add
pop
cmpsb
xchg
ja
pop
add
pop
mov
add
repz
cld
fnstcw
add
xchg
xchg
js
hlt
test
dec
aas
pop
sbb
sub
mov
add
adc
rcr
jle
add
movsl
je
mov
push
or
jge
pop
and
outsb
add
leave
imul
jp
sbb
xchg
insl
push
mov
ds
sti
test
adc
xor
dec
pop
out
mov
shrl
jb
into
es
xlat
das
jo
mov
xor
sbb
add
enter
hlt
js
pop
pop
or
push
cmp
or
mov
push
jg
mov
sbb
mov
push
or
popf
mov
cmp
hlt
icebp
ds
pop
pop
addr16
sti
cmpsb
push
shl
and
jle
call
imul
mov
inc
add
mov
add
jo
add
push
clc
xchg
and
movsl
push
xchg
or
xor
and
xchg
xchg
vcvtsd2si
xchg
mov
outsl
sbb
nop
add
insl
movsb
pop
xchg
xor
inc
mov
sub
xchg
xor
stc
xchg
mov
lods
inc
repz
cld
xor
outsb
sbb
leave
jo
mov
mov
add
and
inc
mov
jnp
inc
ret
ret
cwtl
mov
jne
xchg
sbb
lret
das
ret
push
jne
sbb
popf
add
jge
ficoms
lods
lods
mov
mov
bound
mov
push
add
mov
stc
pop
mov
pop
sub
xorb
push
jb
inc
addl
fcmovu
jg
add
inc
mov
cwtl
loopne
loopne
mov
outsb
sbb
sub
aad
shrb
std
push
sbb
mov
xchg
cs
dec
shl
jbe
lods
pop
dec
sub
mov
add
mov
inc
popf
add
sbb
loop
mov
imul
mov
aaa
xchg
movsb
loop
dec
adc
xchg
add
repz
inc
cmp
sub
cmp
daa
sahf
add
push
or
decl
cmpsb
mov
mov
pop
inc
test
ret
add
rolb
outsl
add
ret
std
mov
nop
jmp
cwtl
cmp
or
pop
add
cmp
add
jecxz
insb
cli
adc
clc
loope
data16
int
xchg
mov
leave
mov
popa
mov
push
pop
rcll
out
cmp
pop
aas
repz
sub
movsb
std
mov
push
xor
push
aaa
add
pop
sbb
add
in
xor
stos
in
loop
test
clc
add
ffree
jg
xlat
hlt
out
or
rorb
add
add
lock
sub
xchg
adc
xchg
mov
jnp
inc
in
pop
add
inc
jae
out
lahf
fstp
push
enter
sarb
xchg
das
lea
adc
inc
dec
and
ja
mov
cltd
pop
sahf
add
push
adc
add
rolb
adc
aaa
or
pop
dec
rcrl
inc
mov
dec
dec
movsl
dec
movsl
add
xchg
lret
cmp
cs
aad
sub
add
lcall
add
xchg
xlat
add
dec
icebp
outsb
pop
add
push
stos
fldenv
mov
add
pop
mov
add
fistpll
inc
or
pop
push
lea
add
call
xor
xor
add
push
adc
add
ss
sbb
xchg
cmc
test
xchg
cmc
cmp
pop
pop
mull
sbb
add
jno
xchg
xor
sub
sub
or
fmuls
mov
adc
jmp
ds
hlt
xor
or
jmp
mov
xrelease
mov
leave
mov
cli
sarb
mov
xlat
xorl
pushf
or
add
add
xchg
hlt
inc
clc
mov
add
pop
ja
add
add
outsb
mov
adc
or
xchg
sbb
add
paddsb
repnz
lds
push
cmc
mov
repnz
and
int
mov
adc
insb
daa
cmp
mov
imul
repnz
lahf
push
mov
xor
pop
xchg
inc
cltd
push
lods
push
xchg
addb
loopne
mov
enter
mov
mov
sbb
add
stos
xor
lea
push
hlt
into
out
out
jae
push
mov
push
imul
jbe
dec
sbb
int3
add
mov
stc
add
std
and
add
sub
test
int
adc
mov
das
pop
into
cmc
add
mov
add
jmp
mov
xchg
mov
add
xorb
repz
mov
data16
cld
lds
cmpsl
loopne
sbb
and
mov
add
add
adc
ljmp
pop
dec
mov
bound
out
cmp
lea
sub
pop
fs
je
idiv
popa
leave
jmp
sbb
mov
mov
lds
sub
mov
cmp
call
pop
stos
rcr
jb
shr
subb
stos
dec
xchg
pop
cmp
add
lret
xchg
ja
and
or
push
or
xchg
mov
xor
lcall
dec
add
imul
add
mov
cmp
pop
cmp
adc
rolb
add
pop
adc
mov
ds
rcrl
add
pop
add
popa
add
xor
add
nop
mov
add
stc
jle
add
pusha
fnsave
popf
push
and
xor
push
add
add
lea
mov
cmp
lock
movsb
scas
or
mov
pop
faddl
clc
xchg
mov
jns
add
add
push
jle
into
add
sub
push
insl
out
cmpsl
lds
push
mov
sbb
cwtl
mov
test
mov
add
movsl
cmp
ss
adc
daa
mov
cltd
enter
mov
cli
dec
add
jg
jb
mov
jge
add
stos
push
mov
jnp
xchg
das
inc
add
stos
add
fs
int3
jbe
aam
ja
add
mov
idiv
testb
add
inc
cmpsb
lahf
movsb
imul
lock
add
ljmp
push
mov
in
mov
movsl
xor
add
xchg
sub
or
mov
cmp
sub
add
addr16
add
add
movsl
xchg
mov
insl
add
xchg
pushf
cmp
cmp
scas
arpl
inc
sub
adc
sbb
add
add
loop
es
cld
vaddpd
jae
mov
insl
lods
mov
lock
adc
fldl
ret
mov
xchg
jbe
jne
insb
adc
scas
xchg
in
lods
push
push
add
sbbb
sub
int
fidivs
pop
nop
and
dec
inc
adc
sub
sub
ret
dec
add
cmp
imul
cmp
add
lcall
adc
divl
push
clc
ret
add
add
cmp
lock
or
xchg
add
shl
lahf
nop
cmpl
or
inc
lods
pop
cmpsl
fwait
push
sub
add
fs
add
add
mov
and
add
mov
movsb
push
dec
mov
add
nop
out
add
xchg
push
je
mov
jl
fdiv
js
xor
int3
xlat
jecxz
push
shr
cmpl
rorl
or
loop
mov
inc
mov
test
adc
mov
shlb
adc
xor
std
cmp
addr16
shll
rclb
jb
mov
daa
or
repz
jecxz
dec
or
lcall
inc
in
and
push
sbb
pop
rolb
out
out
push
rcrb
xor
pop
cmp
orl
addb
add
verr
dec
fwait
imul
bnd
or
das
mov
sbb
mov
jle
xor
pop
mov
xchg
inc
mov
pop
xchg
mov
popf
add
aaa
cmp
test
xchg
inc
xchg
mov
xchg
add
mov
add
fadds
das
je
daa
ja
das
jnp
xchg
imul
adc
rolb
fadds
notb
inc
pusha
mov
add
jmp
add
out
xorl
push
fstps
loop
mov
insl
and
movsl
add
dec
mov
outsb
test
jo
xchg
add
xlat
je
sub
shrd
push
adc
cmp
or
testl
push
push
test
sti
ret
inc
outsb
dec
pushf
cmpsb
iret
mov
popf
int3
cli
cmp
stos
out
add
insb
nop
sbb
add
add
scas
dec
mov
add
sub
vpaddsb
add
iret
adc
test
into
and
and
mov
adc
add
pop
mov
add
pop
addr16
enter
jnp
mov
loope
adc
jo
mov
add
nop
sbb
add
add
icebp
dec
ds
pop
sub
lret
aas
mov
sub
inc
mov
outsl
shrb
mov
xchg
jle
clc
dec
je
adc
pop
xchg
cmpsb
lret
dec
add
add
xorb
ltr
mov
hlt
loop
mov
pop
dec
es
bound
push
popf
aad
add
leave
sub
inc
rorl
add
ficompl
ljmp
xchg
xor
sub
sahf
adc
jecxz
repnz
add
pusha
and
add
dec
js
or
pop
roll
ds
adc
sub
cmp
std
pop
adc
add
data16
add
in
xor
and
mov
sub
pop
pop
in
mov
cmc
test
arpl
push
in
push
lds
divb
int3
dec
jnp
inc
std
add
mov
imul
sbbl
push
adc
xlat
data16
jno
std
inc
sbb
decl
mov
call
push
push
xchg
enter
jo
dec
add
aam
xchg
or
outsl
adc
inc
mov
jg
adc
mov
xchg
leave
pop
call
xchg
add
inc
jae
pop
pop
or
pop
mov
xor
insb
enter
cmp
add
xchg
cmp
cmp
or
movsl
incl
dec
cmp
pushf
push
fldl
gs
push
sbb
fstp
std
jge
jecxz
sahf
add
xor
in
mov
push
mov
clc
jecxz
cmp
out
and
pop
arpl
xlat
mov
jp
or
inc
add
sahf
test
push
mov
sbb
repnz
add
fnsave
iret
add
mov
in
movsl
jb
add
hlt
pop
popl
in
add
outsl
fdivr
xchg
add
jecxz
mov
xchg
push
push
add
push
les
int
dec
aaa
stos
mov
in
rclb
jecxz
fildl
lods
add
push
adc
dec
mov
push
imul
push
data16
push
outsl
into
and
add
mov
aas
pop
sbb
fucomip
pop
jge
inc
dec
pop
loopne
test
jg
addr16
add
sub
add
mov
dec
into
inc
out
add
add
out
or
cltd
jmp
xchg
or
and
add
add
jnp
add
push
adc
add
je
xchg
lret
add
inc
xor
sbb
insb
add
sbb
lock
imul
push
sbb
and
ss
call
cltd
movsb
add
xchg
je
repnz
call
add
push
stos
clc
rolb
cltd
add
add
loop
int3
ljmp
aam
sub
jnp
sbb
mov
mov
mov
add
aas
xor
sub
notb
aam
fbstp
inc
inc
xchg
add
mov
gs
pop
daa
pop
clc
xor
push
stos
xlat
jle
out
add
add
pop
xor
add
mov
xchg
dec
and
xorl
mov
out
das
cmp
lcall
nop
sub
lahf
sub
dec
add
fchs
and
xor
sub
xor
or
inc
jo
mov
xor
add
imul
popa
or
dec
int
xchg
iret
inc
adc
inc
mov
add
add
sbb
add
lcall
in
scas
or
ret
push
add
pop
idivb
ds
add
sub
es
mov
add
cmp
fs
and
popf
gs
cmp
cmp
sbb
mov
mov
fsubs
mov
out
daa
xlat
in
aas
incb
std
nop
outsl
cmpl
add
inc
pinsrw
popa
add
mov
mov
mov
push
movsl
add
hlt
cwtl
xchg
cld
or
mov
lret
ljmp
in
inc
pushf
pop
fs
sbb
pop
pop
and
repz
add
rcrl
cmpsb
add
add
push
add
sbb
or
sub
add
mov
pop
adc
cmp
xchg
xchg
mov
mov
sub
mov
add
and
sbb
cltd
popa
stc
sub
inc
sub
data16
pop
mov
add
sbb
popa
jne
pshufw
mov
pop
xor
call
hlt
lret
sub
es
fisubs
jno
adc
jae
fcomi
jp
test
out
test
pusha
or
or
movsb
mov
cmpsl
dec
cmpl
lods
mov
add
imul
add
decl
aas
cli
mov
bound
xchg
or
in
dec
add
imul
jns
cmp
or
dec
mov
xchg
push
sub
xor
aam
pushf
sti
movsl
mov
jb
add
movsb
sbbl
jae
enter
add
hlt
sti
dec
push
mov
cmp
mov
inc
push
xor
pop
cltd
repnz
add
jne
std
xchg
mov
pop
xor
fldenv
add
icebp
lods
jge
sub
xor
xchg
cld
push
fcmovu
ljmp
push
loope
inc
decb
mov
pop
loopnew
sub
incl
cmp
jmp
inc
movsl
imul
jle
push
push
push
fmulp
test
sub
jnp
add
imul
xor
add
add
or
notl
add
add
dec
str
add
add
sbb
mov
sub
fldl
or
aam
test
adc
adc
or
cmc
push
mov
xchg
int3
incl
scas
repnz
into
jns
push
add
sub
jns
mov
pop
or
xor
dec
add
lock
add
add
imul
andb
add
jne
nop
dec
mov
pop
push
xor
xchg
stc
and
jbe
mov
int
arpl
add
cltd
or
out
add
sub
lds
sarb
mov
out
test
in
add
aas
add
add
fildll
mov
cmp
sahf
les
inc
stos
push
xchg
and
lahf
sahf
add
jo
rcll
std
adc
arpl
add
xor
and
add
leave
dec
add
repnz
push
jmp
dec
sti
sbb
jmp
insb
push
test
jmp
ds
test
lds
jp
incb
loope
sbb
aas
inc
mov
add
neg
in
xchg
mov
filds
nop
test
stos
loop
add
mov
mov
daa
and
push
mov
popa
sbb
add
push
pop
fcmovnbe
add
pop
xchg
push
cmp
jb
dec
aaa
stos
mov
adc
xlat
inc
sub
add
daa
mov
jae
adc
aas
jecxz
jne
add
lods
fs
rclb
push
icebp
scas
sub
sub
mov
out
pop
test
jne
jno
cwtl
pop
push
add
and
icebp
mov
pop
jns
jecxz
push
inc
push
jp
dec
aaa
insb
add
sub
daa
pop
out
add
mov
xor
loopne
leave
or
cmp
addr16
in
pop
push
out
ret
push
les
out
lret
jb,pn
dec
jp
jle
orl
test
mov
pop
pop
add
or
stos
mov
jae
jno
int3
add
add
sbb
js
mov
add
add
cld
lea
fiaddl
lahf
cmp
fwait
add
popaw
adc
push
sub
mov
ja
inc
dec
add
ret
lcall
mov
fs
jne
lods
inc
add
pop
ja
or
js
dec
add
outsl
cmp
mov
cmp
aaa
add
out
rcrl
pop
mov
lock
mov
lock
pusha
js
xchg
sahf
add
xchg
mov
ja
je
xchg
add
outsl
add
pop
xchg
xchg
mov
dec
in
dec
hlt
aam
sbb
pop
sub
mov
inc
cmp
cmc
adc
and
cmpsl
pusha
rolb
shll
add
outsb
mov
fisubrs
repz
add
dec
data16
xor
jno
fwait
mov
ljmp
test
out
insl
xchg
push
and
add
sbb
mov
xchg
rolb
jns
xor
pop
pop
addr16
inc
leave
jne
imul
ds
cmp
xor
out
inc
add
into
add
icebp
xor
mov
sub
pop
pop
push
jge
xchg
ljmp
aam
sub
add
out
jno
xor
test
fwait
xchg
cmp
push
cmp
xor
add
add
fs
add
push
push
add
dec
xchg
neg
sub
addr16
stc
lret
pop
xor
test
mov
jl
in
ret
cmp
pop
mov
add
push
sar
insw
sbb
jns
out
inc
lock
add
add
sbb
push
sub
loop
insb
inc
fcomip
pusha
iret
clc
mov
lods
lods
mov
and
sub
out
fsubrs
mov
jbe
or
mov
xchg
decl
loop
push
cmp
mov
add
xlat
lret
fldt
and
add
adcl
mov
stc
inc
mov
dec
mov
jge
add
mov
out
sub
or
out
pop
add
addr16
add
adc
out
mov
sub
inc
jb
cltd
jmp
mov
dec
ljmp
stos
and
push
jp
xchg
mov
push
out
sbb
pop
lods
xchg
fsts
out
jp
mov
dec
add
es
arpl
lds
imull
sbb
xchg
sbb
mov
enter
jno
enter
mov
mov
inc
sub
stos
add
nop
ret
addb
jne
addb
jno
pop
mov
mov
cmp
add
iret
add
add
ret
sbb
sbb
scas
cld
mov
mov
call
xchg
movsb
inc
das
inc
pop
jl
mull
add
cli
pop
inc
xor
add
xchg
mov
add
mov
pop
js
int3
push
mov
jg
sub
add
imulb
sbb
pop
xlat
or
inc
dec
bnd
fsubr
ret
push
or
call
int
mov
add
setno
jb
je
std
or
out
xchg
and
add
inc
lods
xlat
and
jge
rol
roll
or
fistpll
out
add
sahf
adc
pop
ljmp
lcall
add
dec
add
ficompl
mulb
jo
ret
inc
inc
loop
movl
pop
cld
add
jns
mov
pop
addl
iret
sbb
scas
mov
xchg
ret
dec
mov
stos
cmc
orl
cmpsl
in
jmp
add
cmp
sti
stos
add
ret
jle
or
repz
aas
hlt
pushw
inc
movsl
aaa
into
cmc
mov
add
imul
call
incb
movsl
add
add
add
and
das
sti
mov
xchg
test
filds
sbb
adc
lock
and
pop
xor
mov
hlt
or
clc
or
rcl
pop
cmpsb
popf
and
int
sbb
push
orl
inc
shrb
adc
sub
cmp
add
or
mov
data16
shrb
inc
scas
jno
into
sub
les
add
sub
mov
xlat
inc
mov
xchg
scas
add
stos
push
xchg
into
add
sbb
mov
enter
mull
addr16
test
add
mov
out
xchg
add
cmp
call
sbb
push
push
add
inc
popf
ret
mov
cld
and
ja
pushf
cmpb
mov
inc
sahf
dec
daa
ljmp
mov
adcb
add
and
add
cs
push
and
pop
lret
loope
mov
pop
jg
add
ljmp
dec
sbb
cmp
mov
repnz
sbb
out
jge
add
jp
clc
push
cltd
iret
mov
mov
adc
dec
inc
pop
loopne
inc
cs
arpl
outsl
and
xor
add
out
add
xlat
addb
or
ljmp
mov
pop
sbb
add
rorb
add
xchg
stos
add
add
push
jbe
xchg
add
and
sbbl
mov
fisubl
lahf
xchg
out
xor
lret
push
mov
nop
sbb
inc
fcmovnbe
cmp
scas
out
daa
lock
pusha
xor
std
mov
dec
xchg
pop
sub
aas
je
das
sar
movsl
mov
fidivrs
sbb
xchg
jl
jno
fsubl
add
push
jns
xchg
leave
test
hlt
gs
decb
mov
add
fstpl
ret
xor
mov
lea
lods
or
lea
xchg
mov
jnp
nop
adc
add
xchg
dec
inc
add
dec
mov
add
dec
imul
add
add
add
xor
add
add
mov
addb
sysret
sbb
add
loop
sbb
lahf
ret
add
dec
mov
xor
add
jl
dec
push
cmp
hlt
fistpll
add
mov
dec
fisubl
push
add
dec
lret
in
enter
mov
in
stos
add
outsb
cld
xor
add
or
xchg
push
subb
mov
faddl
in
mov
gs
loop
mov
xchg
or
jno
jecxz
add
fisttpl
mov
loope
imulb
call
shll
sub
cmp
adc
push
add
nop
add
push
add
mov
push
and
inc
lods
ltr
sbb
lods
sub
ficoml
rolb
pop
mov
xor
in
jmp
jg
sbb
add
clc
push
add
ja
mov
xor
fwait
push
incl
jb
adc
das
pop
and
lahf
ss
flds
into
fs
scas
int
jg
inc
and
shrl
jp
jo
cmpsb
stos
add
add
cli
popa
out
rcll
icebp
add
aas
xchg
xchg
jne
mov
xchg
add
fdivrl
enter
add
fimull
and
add
lods
lds
pop
xchg
add
mov
inc
add
nop
or
push
test
push
arpl
rcrl
or
and
sbb
stc
push
sbb
xor
cmpsb
push
in
dec
cmc
das
clc
xor
mov
in
adc
sub
ss
jb
mov
mov
mov
add
mov
pop
lds
jge
pop
or
loopne
aas
and
test
cli
add
dec
xchg
lahf
push
icebp
loope
inc
push
lret
push
pop
mov
inc
lds
popf
add
push
call
lret
add
and
popf
xchg
sub
incl
sub
cmp
mov
outsb
sub
repnz
jnp
inc
adc
add
je
jecxz
mov
imull
mov
adc
aas
sbb
rcrl
out
add
add
pop
daa
add
fisubrs
xlat
xor
mov
add
fbstp
insb
test
mov
in
test
jge
push
enter
stc
mov
jge
add
fcompl
mov
mov
xchg
je
lret
add
cli
outsl
mull
fisttps
enter
sub
add
incb
insl
jle
xchg
call
faddp
js
add
lds
in
lods
inc
add
aad
and
pop
pop
out
cmp
mov
loop
jl
jecxz
fbstp
add
add
mov
out
jno
jnp
outsb
adc
repnz
xchg
cld
mov
cmc
pop
lods
xor
mov
jns
aam
jge
push
fldl
and
shrl
ja
xchg
cmp
push
loop
inc
arpl
addr16
pop
dec
negl
scas
int3
inc
add
aad
mull
add
scas
jnp
mov
inc
rcr
adc
adc
add
add
in
add
jl
or
adc
into
xor
inc
addl
cwtl
cmp
mov
outsl
jmp
pop
xchg
push
or
outsb
ljmp
subb
ja
cli
push
jae
xor
sbb
cld
cld
repz
xchg
adc
and
push
sahf
dec
out
out
sbb
out
aam
pop
orl
mov
push
inc
addl
add
mov
in
inc
xor
repz
push
sarb
mov
es
fwait
pushf
jmp
cltd
pop
adc
add
js
movsl
mov
loop,pt
insb
stc
or
aaa
mov
xor
add
das
push
push
add
cmp
ljmp
pop
ret
lds
outsl
repnz
lahf
mov
adc
add
mov
jae
add
or
ja
inc
fisubl
dec
int3
add
lds
dec
test
add
fildl
xor
repnz
add
or
cmp
adc
inc
add
fisubrl
or
cltd
insl
popa
enter
add
add
nop
pop
push
mov
sbb
xlat
sti
les
push
hlt
push
sub
or
aad
add
leave
add
in
add
inc
lahf
cmp
push
xor
fadds
cmpsl
add
inc
add
pop
dec
pop
pop
lods
shl
leave
sbb
push
in
sti
out
das
lods
add
add
pop
scas
xor
push
test
mov
sahf
mov
push
daa
into
add
dec
add
xchg
add
and
mov
sub
not
mov
mov
mov
mov
add
call
inc
adc
enter
fmulp
dec
in
or
cs
mov
dec
mov
push
repnz
mov
rclb
cmp
and
push
cwtl
movsl
sub
addr16
sbb
xor
xchg
cmp
pop
xchg
push
xor
inc
sbb
lods
mov
cmpsl
imull
or
inc
add
call
movsb
jbe
stos
cltd
iret
mov
push
xor
dec
mov
add
int3
and
mov
mov
add
mov
scas
fnsave
inc
and
or
jae
sbb
dec
fmuls
xchg
arpl
shl
xchg
push
sbb
inc
repz
jmp
fsubrs
cmpb
loopne
mov
int3
jle
jmp
hlt
jno
add
loope
push
cmp
xchg
cmp
or
and
adc
fcmovnu
inc
mov
imul
add
mov
or
dec
pushf
jge
cmpsl
scas
add
add
or
pop
add
popa
add
mov
jmp
cltd
cli
dec
adc
aad
scas
add
dec
movsl
dec
sti
enter
data16
jnp
sub
icebp
shrb
xchg
mov
in
aas
pop
mov
fidivl
sub
mov
lcall
popa
sub
push
jbe
jne
in
sbb
pop
push
xor
sti
and
add
test
popw
xor
daa
xchg
xor
ja
sub
and
imul
dec
push
inc
or
sub
pop
stc
sub
dec
adc
mov
ret
in
xor
push
mov
or
negl
sbb
inc
sub
xchg
lcall
adc
xchg
int3
and
ds
mov
xchg
and
loopne
repz
loope
inc
stos
dec
pop
es
inc
cwtl
add
or
movd
sub
add
push
out
in
add
testl
rcr
push
add
add
push
int
adc
cmpsl
dec
daa
add
add
inc
stos
mov
andl
mov
test
fimuls
fldcw
push
rorb
xor
pop
addr16
mov
add
decb
sldt
mov
inc
pop
mov
xchg
hlt
lock
inc
loope
sahf
pop
push
das
in
add
stos
inc
outsb
leave
xchg
popa
adc
dec
push
daa
leave
fmull
or
mov
sahf
into
jbe
ret
cmpsl
es
das
cmc
lcall
inc
hlt
mov
fmull
hlt
cmp
fildl
lcall
jb
rcll
enter
sbb
adc
fsubrs
mov
pandn
fbld
loop
enter
cmp
ljmp
add
push
stos
fstpl
dec
mov
push
shll
push
push
mov
testb
cli
xchg
or
out
lcall
decl
add
jb
cwtl
add
add
leave
add
xor
add
add
add
xchg
sub
sbb
arpl
add
lock
mov
inc
xchg
inc
push
mov
sub
in
ljmp
je
add
pop
pop
mov
jns
test
call
pop
mov
movsl
mov
push
icebp
dec
cld
jno
pop
xor
fwait
add
push
call
add
js
movsb
outsl
fiadds
movsl
inc
mov
add
cmpsl
lods
sbb
pushf
je
add
into
mov
test
push
fstl
add
sub
ss
or
clc
sbb
call
add
and
out
aad
or
out
loopne
or
jbe
add
xor
sbb
dec
pop
out
fdivr
xchg
scas
push
mov
cmp
nop
add
add
loope
add
add
aaa
rep
rorl
add
incl
pop
mov
ret
gs
imul
jbe
xchg
mov
mov
sub
aad
sub
add
mov
jp
push
jo
fincstp
xor
iret
mov
add
add
sbb
add
sahf
jmp
add
int
ficoml
add
data16
test
mov
nop
mov
cli
lcall
sarl
in
jge
cli
int3
add
fwait
push
push
or
cltd
in
call
or
push
in
cmpsl
cmp
push
loop
inc
add
cmp
xor
xchg
mov
loope
into
stos
daa
add
bswap
dec
add
add
mov
or
cs
cmp
hlt
and
mov
test
push
lds
dec
int3
jmp
jg
jecxz
cmp
add
cmpsb
pusha
sub
lcall
add
inc
aas
or
pop
das
push
lea
jmp
mov
add
popf
pop
out
dec
pushf
add
loop
js
push
fldenv
aaa
sub
mov
add
in
outsb
cmp
loope
mov
std
add
icebp
add
jmp
mov
imul
mov
and
lock
in
xchg
mov
nop
lds
fs
cwtl
xchg
test
out
addl
xorb
inc
or
xor
fidivrl
push
std
xor
fiaddl
testl
pushf
pop
test
popa
mov
sbb
imul
inc
ret
or
bound
and
add
popa
shlb
jl
out
cmp
add
pop
je
dec
add
sarb
imul
sbb
add
add
add
and
mov
ret
xor
mov
mov
aam
imul
int3
add
addl
add
jnp
incb
cmc
insb
jl
int
lods
push
mov
aaa
ret
cmc
add
add
cmp
movsb
je
add
mov
sbb
mov
jno
sub
sbb
xchg
xorl
xchg
cli
jno
fnop
arpl
popw
jne
sbb
int3
aaa
fldenv
add
js
lods
push
ds
mov
fisubs
sbb
rolb
dec
flds
mov
sub
js
dec
in
in
adc
js
jbe
cmpb
mov
sub
xchg
sbb
test
push
add
inc
fs
sbb
add
mov
xchg
imul
add
push
loop
adc
popl
pop
sbb
cmp
int
add
fdivr
sti
and
ret
aad
stos
fcmovnu
push
lcall
test
adc
imul
pop
mov
add
adc
sti
mov
dec
jmp
mov
icebp
push
mov
pop
or
gs
enter
cmp
add
jbe
xchg
add
mov
or
scas
xor
xor
or
and
sub
xor
jno
mov
jno
pop
cwtl
xor
popa
repnz
cwtl
daa
push
or
ss
xor
push
out
add
push
lods
clc
jge
mov
mov
sub
call
clc
dec
pop
push
hlt
mov
int3
in
ret
jb
out
mov
mov
mov
cmpsl
cmpsb
lret
dec
adc
and
mov
add
arpl
lcall
add
outsb
lea
mov
inc
mov
sub
mov
clc
add
add
xchg
sub
fdivrs
or
imul
push
mov
or
add
add
movl
mov
testl
add
mov
push
cmp
xchg
jmp
or
sar
add
mov
jno
push
aam
enter
and
test
and
mov
add
data16
mov
add
movsl
and
mov
cwtl
add
ljmp
or
mov
arpl
cmp
push
add
cld
outsl
add
test
pop
lods
mov
push
inc
lahf
lret
inc
clc
imul
aad
mov
dec
rcrb
and
jo
add
fldl
loope
push
add
test
pop
inc
cmp
xor
or
fsubrs
jo
scas
pop
ja
popa
push
add
ret
add
pop
xor
mov
mov
xchg
push
les
int3
out
mov
pop
adc
jns
or
mov
or
xchg
xor
mov
iret
inc
sahf
cltd
push
adc
mov
xchg
rolb
mov
or
jne
xor
add
lret
sub
or
mov
out
add
imul
cld
add
xchg
lret
add
sbb
movsb
sub
fdivrs
mov
mov
fbld
mov
cmpsl
or
insl
clc
xor
mov
cmp
std
subb
popa
push
inc
rolb
dec
cmpsl
jmp
xchg
aas
jmp
fwait
idivl
cmp
add
enter
mov
mov
push
dec
adc
push
mov
or
fs
cwtl
adc
in
pop
add
sarb
xchg
rcr
and
xchg
js
sub
movsb
pushf
add
mov
jbe
add
aad
imul
sub
adc
into
add
xchg
scas
adc
sbb
movb
daa
xor
dec
cmp
adc
jnp
push
sti
mov
int
inc
mov
add
lock
jb
add
stos
add
movb
int
out
sub
out
pop
push
nop
push
push
adc
push
popa
cmpsb
ljmp
xlat
mov
dec
xchg
add
and
cld
inc
pop
and
addr16
push
push
xor
push
fcmovu
int3
aam
add
rcr
xorl
lea
fists
iret
out
inc
xor
jmp
mov
push
mov
sub
mov
shlb
fcom
add
fs
push
into
arpl
inc
add
add
xor
loop
sub
into
pushf
out
sbb
mov
jge
rcrb
jp
ret
call
fs
xchg
aam
inc
test
add
pushf
or
test
jle
pop
dec
jnp
add
leave
mov
mov
sub
lods
fwait
add
out
mov
xor
mov
mov
iret
jbe
or
sbb
inc
fisttps
adcb
dec
dec
xchg
test
nop
ds
cmp
arpl
xor
dec
dec
push
pusha
pop
xor
ss
fldenv
xchg
pop
mov
pop
andl
mov
mov
ret
inc
addr16
flds
test
pushf
fbstp
add
pop
shlb
inc
mov
add
rcrl
aaa
push
add
addl
cmp
sbb
mov
add
in
mov
inc
push
mov
clc
addl
inc
pop
mov
out
inc
mov
adc
leave
repz
loopne
dec
ja
mov
add
cmpsb
add
cli
add
pop
pop
inc
mov
adc
std
mov
add
cmp
add
cmpb
cltd
xlat
and
lea
mov
add
enter
jo
xor
or
pop
push
mov
das
imul
ljmp
pop
mov
pushf
push
and
loopne
les
repz
dec
xor
pop
jae
or
mov
fcmovnu
pop
jmp
repnz
pop
adc
add
sub
nop
nop
inc
push
add
test
sub
xor
add
jmp
push
aas
mov
push
add
or
inc
xor
lds
and
dec
push
cwtl
inc
add
adc
sbb
bound
into
sub
adc
mov
std
incb
push
ss
subl
push
sub
xor
pop
add
loop
rcrl
bound
push
inc
push
sahf
add
add
xor
adc
inc
pop
xchg
ljmp
in
sub
pop
mov
jle
push
add
aam
andl
cli
jb
test
xchg
ror
and
mov
stc
cwtl
and
mov
add
stos
xor
add
push
add
rcll
sbb
dec
inc
adc
push
push
mov
pop
jmp
sti
movsb
enter
lret
mov
mov
add
rorl
mov
js
scas
xchg
pop
cs
into
add
imul
adc
dec
jbe
push
push
test
cmp
jnp
sbb
add
dec
repnz
add
fcmovnb
add
jmp
adc
pop
and
sub
add
xor
or
leave
dec
rolb
jns
pop
lea
daa
out
sub
pop
in
std
push
fisttpll
lahf
jb
daa
out
popa
mov
inc
filds
mov
adc
or
pop
les
ds
cmc
add
enter
sbb
mov
bound
data16
addr16
add
adc
add
adc
add
inc
push
add
in
negb
and
adc
in
adc
dec
stos
addl
test
test
xor
dec
mov
fcoms
and
jl
mov
leavew
jmp
jnp
pop
mov
repz
cld
add
aam
lods
mov
sbb
test
mov
rorl
outsl
test
xchg
loop
insb
cmpsb
mov
insl
inc
outsl
pop
pushf
iret
inc
shl
test
testb
add
jne
mov
mov
lret
outsl
dec
add
adc
popa
jae
mov
sahf
sub
lret
mov
dec
add
outsb
jno
add
insb
pop
hlt
add
push
push
pop
add
popa
jp
mov
leave
xor
add
es
xorb
jmp
lcall
mov
les
cmp
call
mov
mov
shl
inc
je
or
xchg
movsb
jg
scas
ret
dec
ret
jbe
cltd
sbb
adc
mov
mov
mov
xchg
roll
mov
mov
scas
imul
cli
ja
cmp
fwait
mov
aam
mov
add
inc
fwait
xor
xchg
sbb
cld
sahf
inc
pop
test
mov
into
xor
rcrb
int3
imul
dec
scas
sbb
outsl
fdivr
inc
out
push
sbb
fwait
mov
inc
outsl
add
mov
flds
jne
mov
sub
jmp
add
dec
roll
mov
outsb
pushl
add
xor
xchg
jne
jmp
jmp
sub
pop
push
sbb
add
stos
add
add
add
mov
sbb
xchg
mov
sbb
sub
mov
cmp
je
dec
imul
and
das
divl
add
cli
nop
popf
or
jl
xchg
rcll
scas
mov
sbb
imul
push
jnp
ffree
add
cwtl
ja
mov
in
and
pop
lcall
xchg
inc
xchg
pop
xor
xor
push
popa
mov
scas
xchg
arpl
mov
rclb
inc
cmp
add
add
fsubl
je
int
ja
scas
stos
leave
push
insb
insl
rsm
enter
mov
cli
add
cld
ss
ret
in
and
add
mov
jne
shrl
popa
cmpsb
jl
loop
jne
xor
cmp
leave
mov
mov
mov
lock
sbb
and
push
popa
mov
cmp
xor
mov
and
mov
sahf
insb
leave
les
add
rolb
push
insb
popf
jmp
xchg
test
js
sbb
sbb
add
add
test
push
test
les
cmpsb
orl
pop
add
mov
cmp
mov
je
pop
add
push
dec
loop
jae
cmc
mov
sbb
or
stos
adc
pop
enter
sbb
dec
cltd
test
dec
jb
scas
popa
or
add
movl
add
data16
sbb
in
call
fucom
xchg
pop
add
mov
rorl
idivl
cltd
pop
mov
clc
aas
mov
jae
repnz
dec
add
lret
add
es
push
loopne
xor
add
ret
or
lret
in
add
fstpl
test
lret
add
popf
rorl
add
fsubs
sbb
adc
fs
add
addr16
add
scas
aas
add
mov
lods
hlt
add
cld
stos
outsb
outsb
and
fs
jmp
je
or
sbb
leave
addl
int
test
pop
sub
pop
xchg
sub
add
add
add
cmp
test
and
push
aad
clc
faddl
push
addr16
inc
dec
cmp
cld
sahf
nop
sbb
pop
iret
cltd
lods
outsb
mov
inc
cmp
xchg
mov
hlt
movsl
imul
push
movsl
cmp
std
add
cmpsb
test
scas
cmp
add
mov
loope
add
push
push
add
add
test
das
lret
ret
add
xorb
add
jb
std
cmp
cmp
sahf
cmp
lock
add
add
mov
adc
sti
movsl
xchg
rol
xor
ds
clc
in
loopne
sub
cltd
mov
arpl
pop
outsl
mov
cmpb
out
dec
shrl
add
push
lret
loope
jl
repnz
mov
cmp
add
shrl
or
sub
out
mov
js
jmp
and
or
ret
push
jno
push
add
cmp
sbb
xor
fmuls
inc
add
sbb
fldl
pusha
pop
sbb
not
leave
and
add
add
and
cs
aad
jne
stos
add
inc
jl
and
mov
das
pop
push
scas
add
pusha
subl
and
rorb
pop
lods
cmc
mov
scas
xchg
cmpsl
sarb
bound
mov
mov
popa
lcall
hlt
or
iret
add
and
adc
shlb
nop
ficoms
or
loope
lds
push
inc
pop
test
jo
fldl
bnd
enter
adc
repnz
subb
fidivrs
add
and
ds
fld
jecxz
dec
sub
xchg
imul
lcall
add
call
push
and
cmp
jg
xchg
jb
into
cmp
adc
add
add
lods
popf
lea
adc
inc
cmp
xchg
mov
add
popf
cmpsb
dec
add
subl
cmpsl
sbb
add
pop
pop
out
andl
pop
sub
add
pop
add
push
mov
add
lods
or
cltd
jns
mov
movsb
add
or
inc
xchg
das
pop
push
add
test
test
cmp
pop
incl
cmp
in
mov
push
ljmp
addr16
mov
adc
aaa
in
push
mov
scas
mov
xchg
sti
ljmp
loopne
int3
dec
xor
jo
movsl
pop
lret
xchg
lret
push
add
push
sbb
add
mov
xchg
push
inc
inc
add
xor
in
and
dec
and
pop
mov
xlat
jmp
data16
fstps
rcrl
mov
add
jo
add
stos
addl
loope
aas
sbb
add
ret
testb
xchg
inc
fistl
nop
call
or
sub
jns
pavgw
outsl
addr16
xchg
imulb
add
add
mov
adc
jl
inc
movl
lods
add
out
jge
call
sbb
mov
cmp
cmp
pop
movsb
ja
ja
jle
xchg
lods
xor
add
mov
xor
or
inc
xorb
inc
repz
push
push
add
cmpsl
push
mov
rclb
scas
imul
lods
push
lods
mov
cmpsl
sbb
enter
mov
add
mov
lods
mov
mov
cmpsb
add
cli
fldl
ss
frstor
mov
pop
mov
ja
or
add
data16
dec
mov
enter
dec
in
push
add
dec
mov
call
add
add
dec
cmp
rcll
xchg
lcall
sub
testl
sahf
cmp
setl
fwait
jle
scas
test
push
shrl
add
clc
and
push
in
push
or
lret
adc
xchg
filds
in
xor
out
sub
push
add
int
icebp
and
add
add
add
push
inc
cmpl
data16
fwait
scas
push
fmuls
sti
test
in
jg
adc
push
fldcw
leave
pop
push
cmpl
ret
lock
daa
mov
push
add
inc
pusha
dec
repz
sub
repz
outsl
sub
sbb
adc
add
seto
xchg
enter
adc
mov
movsb
mov
mov
hlt
adc
pop
mov
pop
add
test
daa
push
jmp
nop
add
daa
int3
sub
add
popa
add
add
pop
cmpsl
mov
fimull
push
add
out
add
add
mov
hlt
test
lea
cmp
leave
push
repz
jne
das
roll
aam
xor
mov
xor
inc
mov
mov
add
movsb
lret
subl
mov
loop
jmp
pop
xlat
jno
push
fiadds
les
lds
and
cmp
add
or
xchg
pushf
test
xor
adc
mov
add
stc
inc
shrb
add
push
xor
sahf
lahf
roll
test
cli
add
inc
dec
add
add
mov
loop
add
mov
jnp
add
add
mov
divb
rolb
ret
incb
push
lock
sub
fwait
pop
dec
push
add
jo
add
add
add
inc
cmp
sub
push
fwait
test
add
jg
repnz
xchg
add
fiaddl
dec
add
popa
out
pop
mov
incl
mov
dec
test
pop
xchg
leave
out
sub
cmpsb
cmp
movsb
hlt
add
inc
xor
add
cmpsb
rclb
mov
idivb
xchg
sbb
lret
mov
pop
push
fs
push
das
adc
mov
push
out
loope
mov
adc
add
add
xchg
push
cltd
cmp
cmpl
or
add
lcall
adc
mov
add
divl
in
jmp
test
adc
add
stos
jge
setbe
shl
mov
mov
add
mov
test
add
ret
cs
sti
or
movsb
and
xchg
sbb
push
mov
cmc
cmp
roll
inc
jae
and
sub
andb
add
push
inc
stos
ret
ss
xor
lret
add
es
push
and
fstpl
add
jecxz
cmp
xor
xor
pusha
loop
adc
adc
add
lret
xchg
gs
mov
sbb
inc
jmp
pop
add
cmp
mov
popf
adc
add
jmp
mov
pop
jae
in
cmpsl
xrelease
mov
std
push
mov
pop
sar
das
add
ss
cmp
jae
in
cli
jmp
scas
lret
bound
pusha
or
jbe
lock
and
cld
add
jecxz
mov
jno
add
pop
adc
or
mov
push
add
push
xchg
ja
loope
in
add
pusha
push
push
dec
or
stc
out
int3
fs
lock
dec
stos
or
xor
sub
andl
ficompl
push
pop
push
sub
adc
test
lea
mov
add
xchg
cmp
out
mov
adc
pushf
add
js
mov
lahf
jl
rcr
nop
and
insb
pushf
jno
xor
sbb
scas
cmpsb
add
insl
iret
push
ja
fwait
or
push
add
cwtl
xchg
movsl
add
sub
push
inc
add
add
fcmovne
add
gs
repnz
movl
loopne
or
jg
ss
movl
sub
test
jp
fs
add
inc
inc
mov
stos
cmp
pop
lret
iret
xor
mov
cmpsb
add
pop
or
dec
lcall
lret
pop
push
popf
jnp
add
sub
aam
pop
and
mov
shll
je
pop
pop
insb
mov
fiaddl
lea
out
sub
out
in
lahf
call
lds
scas
dec
lcall
sbb
mov
xor
jge
int3
mov
repz
ds
ja
xchg
inc
or
cld
add
lock
add
divb
jne
push
mov
push
cwtl
arpl
loope
movsl
cmp
dec
mov
imul
data16
inc
shl
inc
testb
inc
inc
loope
xchg
pusha
push
add
sub
std
xchg
add
pop
push
add
add
lret
shll
add
push
adc
pop
xchg
leave
cmc
popf
xchg
aaa
sbb
cld
sti
push
and
scas
or
adc
ror
sbb
add
jns
mov
push
add
les
inc
xor
daa
xchg
test
inc
stos
lods
dec
inc
xchg
add
inc
jno
test
and
jbe
push
mov
daa
sub
sub
pushf
mov
xor
mov
fstl
mov
xchg
arpl
inc
dec
cmc
add
adc
pop
into
pop
add
adc
add
push
daa
js
mov
xchg
testl
mov
sub
cmp
sbb
jbe
stos
daa
add
loop
fidivrs
mov
and
mov
add
add
mov
add
pop
fistpl
sub
loop
add
mov
pusha
add
jbe
ret
mov
arpl
js
add
dec
cmp
pusha
add
jp
fmull
loop
jns
outsl
call
sub
add
cmp
add
lea
add
mov
mov
add
popa
jbe
pop
add
out
mov
mov
dec
mov
lret
fwait
or
jae
mov
pop
push
inc
add
cmpsb
mov
add
fwait
das
cmp
add
jg
ljmp
adc
rcll
roll
mov
sub
lahf
mov
gs
mov
scas
push
mov
or
add
pop
push
jo
in
push
ja
xor
gs
add
out
enter
ja
les
dec
jns
add
inc
jg
enter
and
imul
add
ja
mov
clc
sbb
rcl
add
jo
sbb
lahf
mov
sbb
aaa
fidivrl
and
std
or
es
xchg
xlat
jo
inc
pop
add
add
add
mov
add
pop
xor
aad
xchg
cmpl
sbb
add
enter
loopne
jae
and
nop
or
inc
cmp
inc
push
bound
cli
fnstcw
add
jle
sub
hlt
cs
push
ljmp
mov
xor
pop
cltd
push
insl
ret
test
bound
and
or
movsl
scas
fdivrl
add
roll
sub
sub
push
add
push
add
repnz
adc
cmpb
xchg
nop
mov
cmpsb
stos
shll
add
xor
inc
mov
push
push
imul
sahf
lcall
rcrl
or
lcall
cmc
jmp
push
stos
sub
push
mov
ret
add
and
mov
push
sbb
cld
mov
int3
les
push
cmp
cmp
xchg
loope
add
add
pop
imulb
cli
mov
fwait
in
fbstp
push
mov
lock
in
add
xchg
sbb
cld
add
lods
push
loop
add
xor
shll
add
mov
shl
out
lcall
add
mov
add
arpl
test
inc
lea
mov
das
loop
lods
enter
cmp
dec
add
fdivp
addb
dec
sbb
sub
shll
xor
sub
sub
enter
loope
xor
fistl
push
jmp
das
sub
add
xchg
pop
test
xchg
add
or
int
outsb
add
nop
sub
dec
imul
je
test
mov
jecxz
lcall
sub
xchg
add
dec
outsb
into
popf
jns
popf
adc
jp
pop
sbb
sbb
and
or
add
stos
xchg
in
repz
add
xchg
pop
ror
add
int
xor
mov
bound
xor
lea
xchg
pop
mov
pop
outsb
add
mov
push
push
loope
loopne
iret
es
push
sbb
pop
mov
add
inc
pop
fildl
push
cmp
cmp
shll
add
in
xor
rolb
push
test
cli
mov
add
or
sub
inc
std
mov
pop
jp
iret
ret
fwait
mov
out
jae
sub
add
or
or
xchg
cli
mov
add
incl
mov
lock
movsb
add
sbb
mov
cmp
xchg
fldt
add
inc
in
daa
xchg
addr16
divb
mov
mov
daa
cmp
fdivr
add
insl
jecxz
sub
lods
cmp
xor
sbb
xor
mov
cs
jmp
sbb
add
lcallw
mov
mov
in
xchg
add
pop
dec
cmp
xlat
mov
push
testb
loopne
inc
dec
insl
sahf
add
add
lret
test
testl
add
nop
sbb
add
add
rcrb
xor
add
in
mov
int
lahf
aam
inc
jg
cmp
xchg
xor
ret
add
fmull
outsl
adc
insl
or
push
scas
sti
cmpsb
inc
jecxz
pop
paddw
add
push
sub
jle
enter
xor
xchg
add
or
adc
mov
xor
pop
lock
push
cmpsb
push
mov
mov
aam
imul
setb
cmp
test
add
pushf
lahf
add
les
and
xchg
push
test
adc
dec
outsb
cmp
push
pop
movsl
pop
jg
add
js
add
out
mov
push
dec
mov
dec
or
cmp
pop
scas
ret
and
or
jae
sub
out
or
xor
xor
lods
sbb
insb
hlt
add
add
add
add
pop
mov
out
cmp
add
loopne
push
daa
add
and
mov
icebp
push
adc
xor
push
dec
add
push
cltd
pop
jle
jecxz
jl
add
insb
xlat
stos
fldenv
xlat
mov
mov
pop
je
pop
std
out
mov
std
push
add
push
adc
xor
imul
lret
cwtl
pop
add
mov
jns
dec
stos
fldl
xor
js
push
std
add
insl
jp
pushf
adc
hlt
cld
add
mov
mov
push
mov
test
adc
add
dec
pop
jge
in
pop
xor
add
fldl
stos
into
inc
and
add
cmp
pop
inc
sbb
sub
pop
mov
mov
add
add
xlat
jbe
loopne
test
jmp
sub
mov
fistl
and
lahf
mov
adc
sub
stos
lret
data16
faddl
jp
out
out
xor
adc
fcompl
add
or
jns
imul
ljmp
clc
xchg
xor
add
xchg
xor
test
sub
mov
add
add
push
sub
inc
dec
adc
and
adc
push
add
sbb
add
push
xchg
incl
pop
add
lret
sbb
mov
out
mov
loop
pusha
jno
cwtl
sbb
push
mov
or
stos
fwait
push
mov
push
pop
push
adcb
fwait
pop
add
mov
add
push
add
inc
movsb
mov
xchg
ss
test
pusha
lahf
and
mov
adc
ds
mov
push
fistpll
mov
repz
jb
sub
cmp
aas
aad
xchg
add
mov
mov
int
mov
push
cmp
add
mov
leave
push
adc
in
and
xor
inc
cs
xchg
fsubl
and
sub
add
inc
repnz
mov
push
daa
push
add
jl
mov
into
filds
addb
xlat
cmp
pop
dec
movsb
mov
jnp
dec
mov
test
aad
aas
push
adc
mov
push
mov
cmpsl
icebp
in
mov
add
pop
addr16
mov
pop
add
out
jne
adc
and
arpl
sub
sahf
lahf
xchg
mov
stos
mov
jmp
mov
mov
push
repnz
lcall
add
out
outsl
aam
cmpsb
ljmp
mov
mov
andl
sub
push
and
add
cmp
pop
mov
sub
dec
pop
dec
inc
inc
xor
mov
add
dec
clc
mov
call
faddl
and
xchg
sub
push
pop
cmpsb
mov
dec
pusha
dec
push
mov
add
mov
ja
stc
add
pop
insl
mov
mov
or
sbb
sub
inc
push
pop
lea
test
shlb
subb
pop
sbb
dec
xchg
dec
dec
test
sub
sti
jmp
xor
or
pop
add
add
aad
pop
adc
stos
ljmp
dec
jl
sub
dec
lock
fs
push
ret
xchg
movsl
jns
mov
fwait
shl
add
push
popa
out
add
add
add
push
pushl
sbb
sub
sti
mov
cmpsb
daa
add
push
test
add
xchg
adc
aaa
pop
mov
pop
stc
xor
push
add
add
add
into
lods
mov
jno
loopne
xchg
jl
add
dec
adc
cli
xchg
xlat
dec
pusha
call
push
ss
jl
sarb
repz
inc
add
inc
xor
rclb
mov
jg
loopne
jl
inc
dec
dec
mov
mov
jns
mov
fucom
arpl
movsb
icebp
lcall
inc
movsb
dec
push
add
sbb
addl
sub
and
push
fimuls
outsb
add
sbb
add
inc
push
inc
icebp
and
xchg
cs
and
movsl
add
xchg
lea
pop
dec
pop
adc
fisttpl
fisubl
jmp
add
add
ss
into
and
outsl
add
mov
sbb
out
imul
sbb
pop
push
mov
mov
mov
add
push
xchg
push
add
popf
lds
push
inc
mov
cltd
adc
add
les
add
mov
arpl
jns
jl
xor
roll
enter
imul
arpl
testb
cmp
mov
sub
dec
mov
xchg
cmpsl
adc
das
xchg
mov
mov
in
xchg
lcall
adc
xchg
pop
mov
sub
xchg
jge
add
push
xchg
pusha
cli
xchg
imul
outsb
fwait
das
sub
ljmp
sti
add
or
xor
inc
daa
sub
shrd
cltd
jg
cld
xchg
xchg
aaa
add
cwtl
js
push
pushf
xchg
add
adc
add
ds
icebp
push
out
popf
inc
outsl
xor
out
push
rol
int
ss
add
pop
add
mov
jno
clc
fnstenv
push
add
or
add
cmp
cmp
scas
xchg
mov
fimuls
lods
iret
sbb
cwtl
sbb
pop
mov
in
mov
push
out
adc
rcrl
std
dec
dec
sbb
inc
fsubrl
arpl
int
add
in
pop
sbb
rolb
inc
mov
add
pop
mov
dec
jle
sarl
movsl
add
add
xchg
add
jmp
mov
arpl
cld
xchg
mov
adc
xchg
inc
leave
add
lahf
add
lds
out
pop
ret
test
hlt
push
and
adc
mov
dec
pop
mov
xor
add
xor
lret
test
aam
loope
sub
sbb
dec
lds
pop
loope
out
add
pop
fwait
xor
add
cltd
in
icebp
add
sub
push
mov
adc
repnz
mov
movsl
jmp
inc
sub
inc
pop
adc
push
add
lretw
mov
imul
add
jns
mov
xorl
lahf
faddl
xor
adc
fldenv
into
in
mov
push
add
push
popf
pop
pop
lock
mov
fnstsw
add
sub
movsb
shll
push
inc
dec
int
add
data16
push
les
das
mov
ret
call
fs
jl
or
add
fiadds
inc
mov
pop
aas
test
inc
mov
rcrl
adc
cmpsb
mov
ds
dec
and
enter
jno
pop
push
jnp
popf
bound
cltd
add
test
mov
add
pop
jnp
pop
mov
mov
mov
add
enter
add
movsl
ljmp
lldt
lock
adc
scas
aaa
lret
xor
out
xchg
cmpsb
mov
add
sti
cmp
and
jle
mov
mov
xor
add
fdivs
out
in
icebp
or
les
push
in
push
mov
push
add
cwtl
mov
imul
cmpsb
dec
test
sbb
outsb
xor
icebp
mov
dec
mov
add
add
shlb
inc
add
call
outsl
aas
into
dec
sahf
sbb
xchg
repnz
idivb
sahf
imul
scas
and
in
push
mov
and
rolb
xchg
xor
add
test
rcrl
xor
pop
js
js
cmp
in
lds
fcmovne
lods
pop
outsl
add
mov
mov
pop
sbbb
push
fidivs
mov
jle
sub
fwait
iret
cmp
add
fstpl
into
fdivrp
call
add
pop
std
mov
dec
add
pop
testb
inc
lds
imul
add
xchg
mov
or
icebp
ss
rolb
xor
and
add
sub
adc
inc
add
fiaddl
mov
add
loopne
int
push
push
sub
sbb
scas
mov
xchg
addb
out
je
dec
jae
popa
pop
push
jle
es
jae
js
xchg
sub
dec
add
push
and
add
pop
test
or
adc
dec
out
movl
cli
cmp
lret
imull
mov
mov
ljmp
dec
enter
test
add
pop
aad
push
jmp
leave
add
add
mov
sti
or
daa
push
xchg
adc
insl
stos
cmc
mov
add
iret
inc
fcompl
dec
dec
add
insl
add
or
mov
push
adc
push
add
sub
jnp
inc
cmp
adc
xchg
pop
jmp
lea
addl
sub
out
add
xor
fmul
push
or
add
outsb
js
mov
loopne
mov
push
xlat
hlt
jge
push
rcrb
cld
test
xor
mov
pop
mov
out
adc
cmp
adc
int
xchg
cli
movl
flds
pushf
mov
sahf
movsb
push
inc
mov
lea
cmp
cli
gs
dec
mov
adc
add
add
jno
aas
add
sbb
sbb
test
mov
pop
jle
mov
cmp
f2xm1
mov
xchg
movsb
out
xor
test
clc
mov
add
mov
ja
add
and
push
or
sahf
inc
cmpsb
and
cli
push
mov
pop
fistpll
push
xor
pop
jne
pop
call
cmp
shll
sbb
iret
add
add
ss
mov
pop
mov
inc
ja
in
imull
sub
mov
out
push
add
add
and
fildll
js
jg
popf
aaa
dec
cmp
imul
cmpsl
hlt
dec
jecxz
imul
pop
test
xor
mov
sub
jge
test
aas
loopne
in
add
in
dec
add
aad
xchg
jae
sbb
add
add
rolb
sub
loopne
aas
add
jo
int3
push
sub
add
mov
add
xor
js
add
add
cwtl
or
addr16
clc
bound
xor
aad
out
fadds
movb
popf
bnd
pop
and
push
sbb
dec
cli
int
cltd
mov
add
xchg
or
pushf
jbe
pop
sbb
test
ret
lret
gs
sub
add
daa
js
aam
roll
push
add
cmp
add
roll
xor
neg
mov
lods
mov
lret
xchg
inc
movsl
mov
mov
scas
fadd
cmc
add
or
test
nop
or
mov
add
dec
push
lds
xorb
dec
cmp
inc
incb
mov
mov
sub
cmp
pop
cmp
cmpb
add
fsubs
mov
aas
and
jne
cmpsb
add
mov
gs
mov
add
sbb
sub
push
or
fdivr
push
cs
ja
push
mov
mov
pop
imul
add
in
add
add
jecxz
ror
add
mov
inc
repnz
jge
adc
pop
test
sbb
mov
add
sbb
xchg
mov
adc
jo
pop
push
or
int3
pop
mov
rolb
and
inc
jg
negl
shll
inc
ja
push
lcall
sbb
movsl
sti
push
leave
push
ja
dec
out
mov
add
fs
mov
pop
add
fistps
mov
iret
insb
and
xchg
mov
lds
cmpsl
mov
mov
dec
add
and
dec
stc
rcrb
cmp
mov
add
add
inc
add
daa
xchg
scas
divb
out
push
pop
push
js
add
mov
adc
in
in
das
inc
add
add
pop
dec
test
add
push
addr16
or
lock
or
add
add
mov
lods
dec
mov
inc
imul
push
dec
aaa
add
dec
sbb
add
les
jl
outsb
in
add
loop
adc
pop
aam
fcmove
dec
dec
stc
jb
popf
mov
fimuls
xchg
es
cmp
push
sbb
push
pop
incb
out
inc
repnz
out
adc
lret
add
xchg
loopne
mov
sub
pop
in
xchg
mov
ret
xchg
loopne
and
shl
lock
pop
add
push
xchg
sub
fwait
jne
add
cs
imul
sub
add
add
out
enter
and
mov
fldcw
sbb
add
ret
mov
mov
push
add
mov
lret
pop
addr16
add
mov
add
sbb
sar
xchg
jne
shll
and
cmp
push
fnstsw
push
pop
mov
cmp
sbb
repnz
dec
faddl
inc
test
mov
add
push
add
inc
jbe
aam
sub
mov
outsl
jo
push
stc
sub
out
mov
fmull
mov
data16
loopne
std
jo
fcos
sbb
stos
sbb
sub
lea
jmp
add
xchg
iret
test
loope
mov
mov
jnp
clc
jecxz
scas
jge
test
je
scas
push
and
and
cli
fdivrp
das
or
dec
jp
mov
lds
add
mov
fisttps
and
repnz
jne
add
fcmovu
mov
scas
fisttps
scas
add
mov
add
cmp
push
cmc
clc
mov
pop
and
stos
fidivl
push
push
shll
dec
ret
pop
mov
xchg
inc
pushf
jne
add
call
sbb
add
add
jnp
addb
stos
ret
cmp
jle
cltd
enter
cmp
or
test
mov
pusha
jbe
add
sbb
inc
insl
push
rolb
add
mov
pop
pusha
sbb
sahf
or
pop
mov
addb
mov
jae
mov
sub
pop
xor
stc
mov
icebp
dec
jecxz
jb
inc
push
dec
fiadds
lds
or
cwtl
add
push
add
add
ljmp
out
fdivr
dec
add
int
addr16
xchg
out
sub
lea
lds
lods
cmpsl
add
test
xor
lea
cmp
aam
ljmp
out
xor
mov
add
repz
and
aam
lret
shlb
aad
and
adc
add
add
add
add
add
mov
xchg
inc
movsl
in
jl
xchg
cmpsb
call
je
add
daa
aaa
add
fdivl
xchg
jmp
adc
test
arpl
add
push
popa
inc
mov
test
out
add
filds
gs
std
leave
jnp
add
jae
inc
jge
pop
push
das
filds
add
dec
push
or
adc
add
mov
leave
test
sbb
mov
push
xchg
and
mov
xor
and
jbe
add
mov
dec
es
mov
mov
push
sbb
mov
pop
push
adc
inc
mov
cmc
popf
roll
pop
add
sub
nop
mov
add
add
push
and
add
add
stc
cltd
jo
verw
mov
fildll
jno
out
es
enter
or
dec
mov
rolb
inc
outsl
dec
and
push
add
add
je
pop
xor
cmp
mov
add
arpl
add
cld
inc
pop
push
imul
sbb
sub
jns
testl
das
pop
dec
aaa
pop
arpl
test
es
add
fwait
sub
repnz
or
pop
sub
cmp
jbe
imul
mov
cmpsb
mov
sti
mov
pushf
add
mov
lock
int
addl
add
loope
mov
inc
add
xchg
nop
sub
cmp
ja
loop
ret
push
cwtl
decl
xchg
add
lds
cmp
cmpsl
push
sbb
mov
in
adc
and
lahf
xor
adc
pop
push
repnz
loopne
push
inc
repz
repz
jnp
mov
dec
add
scas
jne
test
cld
add
out
inc
cmp
jle
inc
mov
jbe
push
outsl
add
mov
mov
pop
les
sub
mov
mov
sbb
mov
pop
aas
scas
negb
push
pop
or
push
repz
iret
sbb
xchg
fcomip
int3
enter
push
add
mov
in
int
movsb
cmp
outsb
mov
add
sub
in
in
xor
jnp
enter
pop
push
iret
dec
add
cwtl
int
popf
stos
add
mov
mov
pop
adc
popa
inc
stos
mov
xchg
mov
cld
mov
add
roll
push
outsb
sbb
movsb
pushf
test
mov
mov
push
xchg
iret
jg
add
nop
movl
jae
sbb
insl
pop
push
movsl
mov
jbe
ret
sti
xor
lock
fildl
lahf
jnp
cltd
mov
jns
cmp
add
ret
cmp
fwait
jae
enter
inc
add
and
cmpsb
popl
cmp
mov
mov
leave
in
inc
jnp
adc
aam
sub
cmp
movb
or
add
js
push
fxch
mov
lea
mull
or
lds
mov
add
mov
jp
xor
inc
into
mov
shrl
enter
lock
shl
add
pop
inc
arpl
and
sub
inc
jns
dec
dec
push
sbb
or
push
mov
mov
jle
lahf
insb
stc
in
movsl
lahf
or
bound
inc
dec
add
lods
fidivrl
repz
mov
test
jge
jae
rorb
mov
sub
ret
and
inc
pop
and
add
loopne
lds
loop
repnz
xchg
jb
add
jo
outsl
push
rclb
mov
es
add
pushf
pavgb
stos
outsb
mov
js
add
add
mov
xor
pop
cmp
inc
dec
outsl
push
add
and
dec
inc
mov
add
or
xchg
rolb
icebp
rcrb
clc
sbb
cmp
cmp
xchg
in
rorb
pop
xchg
and
add
pop
add
jp
cmp
pop
mov
add
inc
jmp
and
aas
add
jns
clc
and
rcrb
dec
sahf
inc
add
pop
insb
xchg
lock
ds
and
xchg
push
xorps
xor
int3
pop
xchg
pop
pop
lock
add
fstps
dec
aas
cmpsb
data16
adc
maskmovq
testl
in
jl
aaa
mov
imul
icebp
cmc
pop
and
xchg
mov
add
lea
add
add
and
sti
mov
int
pop
leave
xchg
inc
jnp
cltd
in
dec
js
dec
mov
mov
cmp
jbe
push
add
in
rcr
ret
js
nop
xor
dec
mov
repz
mov
add
pop
push
pop
jmp
add
sub
lods
pushf
in
cmpl
popa
jb
add
adc
ljmp
and
shll
adc
pop
in
sub
out
mov
xlat
jmp
aad
xchg
orb
das
xchg
xchg
jae
xchg
sbb
add
mov
adcl
xchg
es
pop
jle
arpl
in
add
push
fcomip
jne
jmp
and
pop
rcr
jecxz
jle
in
sbb
add
mov
xlat
add
add
stos
jmp
ja
pop
add
mov
push
add
repz
sub
ds
or
mov
mov
dec
cld
mov
into
mov
popa
add
mov
cmp
and
add
xchg
add
into
cmc
or
add
adc
leave
dec
and
imull
out
jmp
pop
nop
lahf
xor
add
fildll
mov
sbb
or
mov
xchg
xchg
out
push
dec
jno
mov
dec
and
add
shlb
add
mov
add
es
ror
inc
xchg
ficompl
add
xor
or
mov
lea
jb
iret
adc
mov
repnz
push
dec
rolb
fists
add
ds
and
flds
adc
repz
jmp
dec
rolb
fistl
mov
mov
repnz
add
add
outsb
push
out
imul
add
ljmp
add
jno
jae
mov
inc
sbb
fwait
push
add
xor
cmp
add
test
fbld
fnstsw
mov
pop
arpl
mov
mov
rcll
popa
mov
add
and
cld
dec
jg
jl
xlat
add
mov
xor
inc
jno
bound
add
popf
cli
add
sbb
cld
lds
mov
mov
flds
mov
into
mov
add
pop
lret
sbb
fcoms
mov
xor
sub
inc
add
mov
jb
xchg
mov
test
cwtl
cltd
dec
loope
mov
lret
sbb
fadds
cld
inc
add
rep
mov
hlt
mov
xchg
jl
dec
out
mov
out
xchg
push
jno
add
add
scas
add
push
jge
add
int3
out
inc
iret
cmp
cmpsl
shll
scas
gs
pusha
in
push
imul
es
push
in
add
adc
pop
sahf
push
pop
aas
in
dec
sahf
inc
or
add
out
hlt
push
ficoml
pop
andl
jo
pop
add
jle
ret
lcall
add
sbb
mov
push
mov
mov
roll
mov
xchg
add
cli
pusha
and
sti
lds
icebp
push
adc
jae
inc
or
sbb
sbb
inc
test
sbb
movsb
xchg
testb
add
add
mov
cmp
push
inc
dec
inc
or
mov
add
mov
add
mulb
arpl
cmp
mov
push
adc
adc
sbb
push
shrl
pop
cltd
dec
adc
int
lahf
or
adc
cmp
sarl
nop
or
cld
add
add
jo
jg
mov
pop
fs
add
sbb
push
push
adc
aaa
adc
rol
pop
test
mov
mov
mov
cmp
pop
xor
lock
jmp
negb
fldl
inc
push
push
pop
lret
je
dec
push
mov
add
ret
idivb
sbb
jmp
push
add
push
into
push
out
cmp
xorl
inc
jne
mov
mov
icebp
repnz
pop
pop
pop
cs
ret
ret
jl
jp
xchg
imul
pusha
iret
out
pop
jp
es
sub
jle
movsb
imul
cli
aaa
sti
int
outsb
sub
dec
ja
add
inc
pop
nop
in
add
dec
lret
add
test
cmp
and
out
sbb
xchg
mov
mov
out
add
cmp
sti
adc
add
sub
pop
ret
dec
push
pop
aaa
cmpsb
or
repnz
add
or
loope
insl
mov
sbb
lock
addl
push
data16
lahf
add
fisubl
mov
cmp
mov
adc
imul
xor
nopl
andb
imul
add
or
mov
push
mov
cwtl
fildll
add
inc
add
sbb
cmp
or
pop
stc
scas
bound
movsb
xchg
add
addb
add
mov
jb
pop
mov
jp
and
je
lret
add
cmp
icebp
add
cmp
sbb
jl
test
adc
add
aaa
sbb
add
pop
out
out
rol
xor
hlt
out
mov
add
test
dec
mov
xor
xchg
jae
lds
cwtl
les
jno
xor
mov
xchg
add
mov
imul
fldl
jmp
ljmp
std
insl
cld
cmp
inc
sub
add
jne
add
add
or
xor
test
loope
in
add
jl
xor
and
mov
sbbl
cmpsb
arpl
add
cmpsl
pop
push
add
out
mull
add
push
addl
mov
stos
add
pop
xor
add
out
pop
inc
xchg
push
mov
add
fldenv
adc
adc
xor
sbb
inc
inc
cmc
repnz
push
push
add
dec
mov
gs
dec
xchg
int
inc
and
dec
add
loopne
add
xorl
ja
add
jno
scas
std
add
xchg
scas
loopne
mov
rolb
jg
leave
pop
xchg
or
mov
incb
inc
aas
test
mov
and
fucom
add
cld
in
rclb
and
push
fwait
mov
sbb
cmp
add
mov
addr16
test
pop
jnp
ja
jle
cmp
push
aaa
xlat
bound
ja
lret
stos
xchg
add
add
xor
aaa
mov
lret
leave
lret
inc
xor
push
pop
adc
aas
aam
inc
add
push
push
add
fildl
add
popf
test
pop
rcll
std
add
testb
push
pop
sub
adc
push
sub
jno
enter
add
push
std
mov
add
filds
adc
add
add
pop
or
pushf
sub
push
fistpl
xor
loope
imul
imul
or
aad
test
into
mov
pop
fimuls
mov
push
loopne
nop
outsb
xchg
cmp
push
fdivl
dec
aaa
dec
out
idiv
or
rolb
roll
xchg
rorl
cmpsl
pop
popa
mov
nop
sarb
pusha
add
jl
add
cmpsb
jnp
xchg
or
fistpll
add
pop
mov
popf
xchg
xchg
sbb
jecxz
cld
and
pushf
mov
and
push
mov
push
pop
lods
or
enter
scas
xor
mov
or
mov
and
fisubrs
add
mov
xchg
mov
inc
cmpsl
int
and
add
add
mov
push
add
das
stos
and
stos
into
cmp
push
insb
add
dec
add
add
scas
test
ja
inc
cmpsl
dec
pop
sbb
dec
scas
add
adc
xorb
mov
add
cmp
arpl
insb
adcb
jge
cmp
mov
sub
pusha
stc
or
pop
pop
mov
mov
push
int3
in
cmp
sbb
ret
cli
out
mov
leave
and
cmp
mov
jbe
fsub
pop
int3
add
add
rcrl
mov
gs
add
mov
sti
pop
adc
sub
jle
add
add
dec
cwtl
or
mov
imul
add
mov
aaa
cmp
inc
add
xchg
mov
dec
xor
cs
jle
adc
or
je
cld
cltd
lods
add
pop
cmp
adcb
jae
xchg
stos
daa
insb
jnp
inc
notb
dec
jae
mov
cmp
add
jo
mov
or
jb
and
out
call
dec
dec
insl
jg
mov
sub
add
adc
enter
jbe
xchg
xchg
incb
add
jl
lret
fistl
orl
into
xor
enter
jo
pop
int3
push
addr16
add
lods
mov
jno
push
seta
jle
add
lea
push
mov
popa
mov
in
xor
lret
mov
gs
inc
loop
in
addl
nop
enter
mov
or
inc
push
jno
or
pop
pop
inc
sub
pop
xorl
add
add
and
fwait
cmc
test
push
enter
cmp
jo
loop
mulb
inc
jmp
jp
xchg
sahf
inc
and
daa
mov
pop
mov
mov
int3
inc
enter
lahf
adc
sub
iret
mov
add
xor
shlb
cmp
lret
add
add
add
mov
fistps
outsb
add
cmc
pop
pusha
shlb
xchg
sub
sbb
inc
mov
pop
adc
xor
sti
add
xchg
lret
and
sbb
jle
inc
loopne
loope
fstps
mov
mov
mov
add
jmp
jle
mov
rcll
push
movb
cmp
popf
das
pushf
out
cmp
out
pop
push
jb
aas
cwtl
xchg
lcall
add
cld
mov
add
in
sbb
adc
fyl2x
repnz
je
and
and
or
sub
jns
xlat
add
cmc
arpl
add
mov
mov
pop
push
lods
addr16
pushf
mov
movsl
popf
push
shrb
inc
cmpsl
test
adc
pop
add
pop
in
clc
inc
xchg
loope
xor
lods
in
jecxz
jb
cltd
sbb
dec
add
add
xor
in
jmp
mov
push
add
popa
add
les
call
or
xchg
add
cmp
popl
scas
and
clc
addl
add
adc
leave
cltd
cs
add
lret
dec
pop
imul
add
jne
xchg
mov
add
js
fildl
enter
jne
sub
add
inc
inc
lret
gs
xor
sbb
xlat
cli
andb
incl
cmp
sbb
push
add
test
dec
mov
lret
mov
ss
add
add
add
xchg
or
mov
mov
or
movsb
rolb
mov
and
add
test
inc
mov
and
push
repnz
mov
adc
mov
cld
fbld
mov
in
add
xor
add
inc
sub
loop
movsl
js
dec
add
cmp
jecxz
adc
inc
mov
cmp
roll
jns
add
adcb
xchg
arpl
sbb
and
inc
or
add
add
inc
inc
outsb
xor
in
or
ret
push
push
pop
pop
fnstenv
mov
sbb
arpl
cli
xchg
add
dec
scas
sbb
add
loope
add
jle
inc
pop
mov
mov
stos
sub
dec
enter
sub
add
add
aam
int3
jmp
lods
mov
out
int
jae
cwtl
scas
add
mov
inc
sti
sbb
hlt
mov
sub
test
pusha
cmp
mov
adc
loopne
divb
ds
fldl
add
xchg
sar
int
add
stc
and
xor
adc
mov
adc
jno
pop
jmp
add
push
and
mov
push
cltd
pop
adc
add
jnp
sarb
dec
inc
mov
pop
roll
xor
outsl
or
and
jns
mov
mov
add
into
add
mov
out
dec
shlb
scas
adc
sbb
and
adc
xor
vcvttps2dq
push
cmp
xorb
outsl
andnps
mov
mov
add
outsb
add
aam
ss
setge
nop
or
hlt
js
in
sbb
cmc
add
cwtl
test
std
lret
mov
add
enter
add
jge
sub
loop
xor
add
sub
inc
mov
pop
imul
in
in
jmp
dec
insl
outsl
add
and
jbe
faddl
and
enter
push
out
inc
notb
out
adc
pop
imul
movl
sbb
or
sub
pop
rorb
mov
lret
add
movsl
jp
outsl
jle
add
cmp
fnstsw
dec
roll
nopl
xchg
rcrb
jbe
lret
cwtl
sub
xchg
or
dec
imul
adc
call
jne
add
and
jb
pop
out
dec
xor
lret
or
call
sti
xorl
add
xor
lock
outsb
ds
jg
jo
add
xchg
sub
sahf
out
inc
std
pop
pop
add
pusha
adc
cmp
loop
ljmp
jne
jp
xchg
sbb
jno
jle
add
addr16
stos
pusha
rcl
push
jge
mov
pop
ret
loop
push
add
pop
pop
add
mov
or
add
dec
dec
push
pop
xchg
xchg
push
xor
add
in
pusha
add
add
ljmp
mov
ljmp
lods
add
stc
xchg
ss
jo,pt
es
addr16
mov
add
and
lahf
add
pop
les
sarl
mov
in
mov
inc
add
gs
in
mov
fld
iret
dec
push
mov
mov
sbb
daa
cmp
adc
rol
loop
dec
pushf
push
int3
aad
add
add
mov
add
adc
out
cltd
ljmp
jl
pop
and
cmc
dec
cld
adc
sbb
sbb
rolb
mov
inc
xor
push
subb
inc
add
mov
push
cmpsb
sbb
cmp
add
fistps
stc
xor
ret
iret
dec
in
test
add
cmp
scas
jge
add
shlb
in
xchg
stos
cmp
fs
adc
mov
add
cmc
mov
mov
mov
cmp
insb
addr16
out
and
lods
je
mov
add
add
leave
xlat
add
sub
push
or
jb
lret
lods
les
dec
mov
in
sub
sti
mov
add
iret
popf
xchg
sbb
push
movl
inc
cld
mov
push
xor
shr
cld
mov
add
cld
cwtl
add
leave
add
add
add
push
dec
ja
sbb
or
and
inc
loop,pt
and
push
pop
testl
dec
daa
rorb
sbb
xchg
push
call
je
add
xor
mov
negb
jge
sbb
add
loopne
add
add
int
sti
aam
inc
rolb
and
xchg
andb
fs
add
test
dec
fdivs
sarl
jo
mov
sub
fnstenv
pop
clc
xlat
add
pop
mov
add
xchg
add
addr16
mov
nop
add
or
jecxz
mov
cmp
lock
outsl
dec
test
das
cwtl
sbb
jnp
jae
mov
iret
pop
pop
add
pop
outsb
or
adc
pop
mov
and
sar
mov
add
cwtl
lcall
sub
mov
pop
dec
or
add
add
icebp
add
mull
mov
add
outsb
sub
rorb
iret
pop
rclb
repnz
xchg
mov
jne
cwtl
jne
fisttpl
xchg
inc
adc
test
add
push
stos
and
lods
aas
aad
cwtl
adc
outsb
add
mov
add
cmp
enter
adc
pop
lret
mov
xchg
out
mov
js
pop
lock
push
icebp
hlt
xchg
cwtl
outsb
imul
outsb
add
in
cs
xchg
inc
jnp
push
dec
push
cmp
arpl
data16
test
out
sub
enter
ja
test
fsubrl
loopne
xchg
mov
add
stos
std
add
clc
add
ret
pop
jg
mov
jge
ret
fldenv
pop
pop
sub
ret
fmull
xchg
adc
adc
hlt
leave
fcomps
sub
lods
pop
xor
and
je
mov
insb
adc
jnp
push
out
adc
sahf
out
daa
fsubl
out
cmpsb
push
adc
repnz
mov
sti
icebp
add
push
sar
dec
adc
cmp
fstl
push
scas
call
shll
jae
xlat
mov
jp
jns
xor
push
push
jecxz
sub
add
xrelease
sbb
add
cltd
outsb
adc
imul
daa
shr
dec
test
or
and
cmp
sti
cs
shrl
test
ret
xchg
out
arpl
shll
outsl
aad
add
mov
pop
push
lds
push
aaa
add
pushf
test
add
repz
add
lods
mov
leave
sahf
mov
lret
addb
std
addr16
arpl
jns
sbb
add
jb
inc
mov
cmpsl
fiaddl
hlt
pop
or
add
dec
xchg
stos
lret
mov
cltd
pop
add
push
dec
mov
push
pushf
add
add
lods
dec
adcl
imul
inc
jg
in
add
push
jge
lds
ss
mov
mov
pop
movsb
dec
pop
lahf
or
fdiv
pop
push
cwtl
dec
cmp
fdivs
std
inc
stos
xchg
pop
pop
andb
mov
mov
pop
ret
or
sbb
scas
scas
inc
or
add
shrl
pusha
mov
mov
sub
and
cmpsl
adc
and
or
int
mov
subb
ds
insb
xor
stos
inc
shll
pop
jb
add
xor
test
gs
mov
sbb
pop
add
pop
add
xchg
hlt
sbb
cltd
arpl
movsb
lret
addr16
add
dec
add
cmpsl
pusha
sub
jnp
lods
mov
addl
pop
add
mov
add
add
mov
mov
rorb
add
insl
test
inc
cmp
mov
outsb
add
and
mov
decb
adc
jle
and
addb
xchg
add
mov
inc
scas
jne
or
dec
add
dec
and
flds
mov
xorb
mov
fldenv
add
add
add
mov
mov
pusha
mov
xchg
fcompl
int
xchg
stos
jae
pop
lds
test
add
and
mov
xchg
jge
mov
add
cwtl
xor
fistps
add
lcall
xchg
stc
lods
push
cmp
testb
cli
add
decb
mov
sarl
push
sar
add
daa
popf
push
jbe
pop
add
mov
stos
les
mov
add
add
setge
add
lds
dec
int3
mov
pop
or
dec
pop
ss
mov
call
add
nop
push
mov
mov
mov
fimuls
or
cltd
repz
cmc
ficomps
fcompl
push
add
lods
in
add
adc
xorl
mov
pop
rolb
outsb
jne
and
stc
loop
imul
fwait
lret
lret
paddd
lret
dec
xchg
adc
rol
int
icebp
jb
add
pop
cmp
movl
call
lds
add
add
dec
cmp
in
pop
or
pop
hlt
sbb
and
out
ret
testl
add
test
mov
add
cs
adc
jmp
std
sub
dec
mov
add
adc
sbb
add
popa
filds
lret
xchg
bound
clc
fsts
shll
add
sub
inc
int
ret
mov
gs
dec
int3
std
cwtl
dec
cmp
add
cmpsl
add
sbb
mov
sbb
pop
stc
mov
add
inc
add
mov
fildl
add
sub
repz
inc
jmp
push
xchg
scas
pop
in
or
popf
push
xorb
jbe
repnz
sbb
dec
mov
push
popf
fsubrp
nop
add
adc
jle
stc
sub
std
jno
cmp
cmp
mov
cmpsb
cltd
xchg
test
iret
ret
hlt
int3
lret
cltd
pop
push
adc
sbb
add
roll
das
jl
lea
bound
pop
dec
test
clc
adc
xchg
add
into
nop
pop
sahf
xchg
stc
pop
jnp
ret
cmp
xchg
mov
je
sbb
adc
iret
in
add
dec
jo
add
sub
add
pop
and
jmp
test
push
and
stos
in
or
popa
add
xorl
inc
ljmp
out
sub
xor
shr
cwtl
lock
push
jmp
mov
cwtl
jae
cmpb
sbb
push
sbb
mov
mov
lcall
dec
inc
iret
popf
xchg
aam
add
arpl
stc
add
add
add
mov
xchg
inc
orb
or
push
mov
xorl
jge
mov
cltd
or
aad
add
lret
sub
fs
arpl
lea
shl
ja
test
cmp
outsl
push
sub
bound
xor
hlt
lea
mov
stos
mov
jae
push
sahf
add
fldenv
fimuls
syscall
bound
jmp
mov
add
add
and
xchg
push
hlt
add
and
aam
pop
lret
ret
adc
mov
sbb
lcall
jo
dec
inc
scas
add
dec
add
nop
cmp
repz
ss
jno
add
adc
stos
adc
push
add
sub
push
push
fdivr
hlt
sub
add
add
fistl
lea
add
mov
les
out
jne
fs
push
lret
test
or
mov
or
fdiv
and
mov
push
jge
aam
sahf
popl
xchg
sbb
cmp
shlb
add
add
das
data16
add
xchg
dec
not
dec
pop
push
add
aaa
enter
xor
push
pushf
out
xor
pop
icebp
mov
inc
divb
and
add
add
mov
fcmovbe
push
enter
add
daa
and
pop
dec
test
xor
push
imul
out
cmp
mov
insb
jge
ds
pop
and
inc
mov
and
mov
es
add
xchg
mov
add
mov
add
lds
dec
mov
lds
xchg
pop
push
mov
mov
lods
xor
push
add
xchg
add
mov
inc
cli
add
das
add
js
lahf
xchg
je
nop
pop
bound
mov
orl
jg
xchg
aad
push
mov
mov
lods
sub
outsb
outsb
mov
add
xchg
jne
mov
cli
mov
lock
clc
add
and
jae
cmpsl
mov
push
and
out
or
cltd
sub
xchg
sahf
hlt
ficoml
mov
xchg
add
gs
xor
and
xor
lahf
cmpsl
cld
pop
mov
daa
fildl
inc
stos
addl
jbe
add
jae
pop
popa
push
gs
add
dec
add
push
loopne
pop
add
mov
sbb
mov
add
stos
or
push
add
hlt
mov
add
lods
adc
je
sub
js
adc
scas
inc
pop
daa
lahf
mov
mov
shrb
push
fwait
rol
mov
fdivl
frstor
add
mov
push
jnp
pop
lea
inc
into
or
rclb
xchg
cmp
rcr
repz
and
sbb
sbb
xchg
and
cwtl
out
xor
mov
lahf
push
add
outsb
arpl
jmp
stc
inc
fstpt
addr16
add
les
inc
xchg
hlt
pop
xchg
xchg
in
and
xor
mov
add
lcall
inc
jo
in
add
mov
jns
push
mov
repz
mov
sbbl
dec
aaa
add
add
cmp
andl
add
push
ja
jns
sbb
mov
int3
add
std
in
push
mov
and
add
pop
mov
mov
add
sbbb
pop
loope
leave
jge
xchg
ret
xor
or
jl
pop
out
dec
hlt
daa
in
lds
xor
push
push
fidivl
daa
mov
add
cwtl
add
mov
mov
dec
gs
xor
mov
fwait
loop
std
stos
movsl
jp
adc
sub
inc
xchg
pop
push
test
mov
lea
push
leave
add
popf
mov
cmpsl
jae
rorl
add
subb
xchg
mov
bnd
shrl
daa
scas
aam
ret
loopne
sar
push
or
mov
add
jle
add
loopne
or
cmp
push
fsts
dec
ljmp
add
add
add
insb
mov
adc
sbbl
stc
sti
dec
scas
mov
ss
xchg
add
push
add
inc
leave
in
mov
xchg
loopne
jnp
pop
mov
push
add
sbb
add
arpl
test
cmp
pushf
cmp
popf
mov
pop
add
test
faddl
xor
addr16
fimuls
int3
pop
sub
and
hlt
jbe
adc
or
push
jnp
add
sub
sbb
aad
outsb
push
test
push
ret
mov
add
ret
daa
dec
faddl
setne
add
or
mov
mov
enter
add
jnp
sbb
jle
mov
add
xorb
or
jns
xor
add
mov
mov
fstps
in
xchg
push
xchg
cmpsl
or
push
test
ret
add
inc
fstp
pop
cmp
pop
mov
mov
jbe
pop
add
xor
repnz
add
cs
or
les
adc
xor
xor
out
fnstsw
jp
repz
add
adc
hlt
js
xchg
insl
push
icebp
sub
daa
js
cmpsl
lret
sbb
movsl
sti
and
sbb
pop
test
dec
jge
xor
cwtl
sbb
add
sub
mov
in
cld
mov
jmp
push
pop
fistpl
push
aas
scas
int
and
add
xchg
jae
pop
dec
xlat
dec
sbb
add
call
jne
sbb
dec
orb
add
add
cmc
sub
xor
cmp
enter
sti
lods
pop
add
dec
push
cwtl
loop
scas
mov
aas
mov
jnp
aas
push
test
iret
xor
cli
test
or
dec
dec
mov
repz
icebp
mov
data16
xchg
loop
add
cmpsl
adc
mov
push
and
pop
jp
pop
and
pop
add
add
add
insl
jno
fstpl
add
fcoml
jno
gs
ret
popf
dec
sahf
add
fwait
add
jno
push
int
loopne
jno
sub
jns
add
test
inc
xchg
adcl
xchg
dec
dec
add
push
rcr
or
add
bound
add
pop
loop
add
mov
lahf
scas
in
jns
adc
dec
rolb
fcompl
and
fistl
sbb
fistps
mov
leave
out
decb
testb
stos
cmp
popf
add
mov
mov
mov
loop
loope
loopne
lahf
jno
ljmp
sub
jnp
mov
lret
add
dec
dec
jbe
sti
add
mov
leave
int3
lods
sbb
movsl
add
ret
test
pop
ret
dec
xor
sbb
movl
add
adc
loop
add
outsl
aas
or
shlb
push
shrl
xlat
test
dec
out
or
divb
addr16
mov
stc
cmc
lea
les
add
mov
push
out
nop
jne
in
or
add
jb
lret
sub
or
loop
fnsave
fsubs
rcl
xchg
push
cs
xchg
cmp
add
loope
inc
outsb
add
gs
inc
lcall
stc
mov
add
push
jb
sbb
dec
lret
push
daa
sbb
and
clc
scas
daa
mov
or
push
dec
cwtl
mov
add
insl
in
adc
mov
xchg
xchg
xchg
out
add
mov
or
xchg
xor
add
icebp
sahf
add
gs
add
mov
arpl
dec
pushf
jecxz
push
shll
lea
rcrb
mov
leave
popl
mov
push
pop
sbb
add
idivl
jl
add
xchg
aad
lcall
add
add
add
adc
pop
mov
mov
add
and
add
xor
pop
add
add
add
add
mov
and
repz
mov
out
jnp
xor
lahf
add
loope
shrl
outsl
add
add
lahf
mov
and
fwait
cmp
insl
dec
dec
add
jg
lods
add
push
jg
jbe
nop
hlt
xlat
fwait
pop
sahf
jge
add
xchg
out
fisubl
jne
lea
lods
cli
xchg
push
cmpsl
lret
js
add
pop
and
in
mov
jns
in
fdivs
or
xchg
mov
mov
addl
xchg
add
jns
mov
xchg
add
lret
cmc
xor
cwtl
mov
ret
in
outsl
in
arpl
jnp
stos
cmp
out
xor
pop
lcall
jnp
lahf
test
rcl
dec
add
add
jo
add
mov
mov
add
adc
leave
lds
sub
mov
add
cwtl
test
test
jo
add
and
addb
fnstenv
push
add
in
add
or
add
cmp
cs
add
add
or
or
cmp
push
sbb
inc
aas
loop
ss
je
mov
sti
les
inc
sbb
popa
add
and
test
fsubl
add
add
xor
inc
push
andb
pusha
pop
mov
mov
test
imul
loope
add
fistps
sti
stos
add
out
pop
addl
add
adc
jecxz
add
add
add
testb
lahf
pop
add
inc
add
ret
sub
imul
jbe
je
jns
push
mov
cmp
sub
xchg
lahf
movl
xchg
popa
inc
movl
add
or
and
adc
push
test
mov
cs
dec
in
push
fdivl
lahf
cmpl
xchg
movsb
dec
cltd
xchg
das
and
xchg
sbb
xchg
pop
popa
inc
inc
in
jmp
andb
sahf
movsl
add
sbb
add
mov
add
into
leave
add
rcl
mov
mov
js
lcall
mov
push
or
es
cltd
push
xor
add
push
imulb
push
in
das
jg
gs
mov
pop
fcoms
out
ss
loop
rcpps
add
jmp
add
mov
ja
mov
mov
gs
cld
cs
xchg
cmp
fstps
dec
loop
test
cmp
or
inc
jmp
sbb
xor
iret
xor
sbb
pop
leave
clc
faddl
add
or
sub
fstps
xchg
cmc
or
xchg
data16
inc
pop
and
add
jecxz
jg
add
fistpll
jns
add
add
jp
icebp
ret
add
fsubp
data16
dec
mov
xor
clc
and
inc
cmp
lock
aam
stos
inc
mov
add
mov
in
push
push
add
xchg
std
xor
push
mov
inc
xchg
add
nop
lods
aad
stc
out
add
or
pop
add
aas
scas
mov
iret
fwait
mov
xor
mov
stos
adc
lret
in
push
dec
clc
add
jae
sbb
jl
mov
das
inc
or
add
pop
bound
data16
pop
inc
sahf
data16
ss
push
loope
dec
call
or
push
jae
pop
in
and
out
add
mov
add
insb
or
mov
mov
lea
js
add
icebp
add
in
cwtl
sub
loopne
loop
fstpt
pop
inc
pop
add
mov
mov
pop
nop
stc
dec
push
add
mov
lods
sti
aam
fcmove
je
sub
jecxz
outsl
pop
push
cwtl
xchg
out
or
jge
mov
add
lock
shlb
xor
sbb
int3
push
in
pop
mov
mov
pop
sub
popa
add
cmpsl
add
sub
and
add
leave
test
or
add
sub
cmp
fcmovne
add
push
in
cmp
add
cmp
add
jnp
popl
push
add
mov
add
decl
jno
sbb
add
mov
ret
test
mov
push
jb
lcall
xor
and
cmp
inc
mov
fwait
add
jmp
push
into
mov
lahf
dec
cmp
sbb
and
or
out
jge
outsl
pop
data16
adc
add
inc
fbstp
mov
test
scas
add
push
jo
jp
jne
popl
xor
mov
cli
add
and
add
add
lret
add
jl
cltd
nop
add
mov
lds
addl
in
cmpsb
stos
out
popf
push
jle
adc
pop
and
or
cltd
ja
jecxz
add
dec
ror
imul
cwtl
add
arpl
push
jb
fdivrs
mov
aam
add
push
or
mov
add
mov
add
pop
cmp
jns
rolb
add
fisubrl
stc
cmc
mov
mov
flds
insl
pop
icebp
stc
je
sub
add
call
lds
add
add
add
add
mov
pusha
add
sbb
fdiv
adc
inc
arpl
pop
je
push
fdivs
add
sbb
adc
mov
fbstp
add
std
lcall
add
hlt
jmp
and
repnz
mov
add
add
call
pusha
test
jbe
ret
jge
test
cmpsl
shll
dec
sub
add
adc
inc
sub
lods
xor
mov
and
mov
in
test
sub
xchg
dec
les
mov
mov
cmpl
add
xor
fimuls
inc
jnp
je
movsl
cmpsl
mov
nop
shll
mov
add
mov
pop
in
stos
add
dec
add
test
jno
add
mov
mov
add
dec
jae
push
adc
xchg
adc
xchg
push
pop
mov
stos
add
dec
jmp
mov
fsubr
lods
jb
mov
aad
das
scas
sub
scas
mov
mov
pusha
mov
jns
or
mov
pop
pop
pcmpgtd
add
inc
daa
add
cmp
xchg
sub
mov
das
add
or
cmp
in
scas
sbb
xchg
adc
in
add
add
aas
add
addr16
lea
add
push
loope
andb
mov
inc
fdivrp
add
add
cmp
in
movsl
lods
mov
jle
nop
push
add
xor
pop
add
adc
repz
loopne
jb
std
jp
les
jp
adc
fimuls
in
sbb
aaa
call
inc
sbb
add
push
leave
mov
movsl
sarl
inc
push
adc
lock
push
insb
sub
lcall
add
shl
data16
shrl
aaa
icebp
xor
or
lods
jns
outsb
add
push
pop
xchg
rcr
lret
movb
mov
in
add
bound
xor
xchg
out
add
push
push
rclb
inc
lcallw
push
mov
and
mov
add
ret
lea
idiv
pusha
loop
inc
aam
mov
mov
adc
inc
mov
xchg
stc
nop
xchg
lods
add
lea
roll
hlt
addb
jg
popf
outsl
add
jne
mov
aad
addb
add
push
cpuid
pop
push
push
lret
sub
cmpsb
incl
clc
adc
add
fildl
push
add
sarb
sub
lds
int3
in
lcall
lcall
add
add
sub
dec
lea
movsb
add
pop
leave
pusha
fs
sbb
xor
das
sbb
push
fcmovb
test
and
pop
push
aaa
gs
add
inc
int
addw
out
add
mov
icebp
add
push
fwait
or
add
leave
mov
pop
lcall
push
push
les
add
and
sbb
add
ljmp
cmp
mov
jae
bound
and
stos
rorb
jns
dec
daa
mov
lock
jp
add
test
add
pop
add
adc
add
js
pop
subl
dec
call
repz
sub
or
xchg
lldt
ret
inc
enter
pushf
add
push
aam
add
dec
cld
lea
ljmp
ljmp
lcall
popf
dec
ret
xchg
dec
or
into
mov
pop
fstl
dec
loop
jmp
sub
pop
xchg
push
lods
pushf
sub
mov
cmpb
dec
outsl
add
dec
inc
add
mov
lock
mov
pusha
add
jle
mov
add
ja
mov
add
and
cmp
iret
imul
les
add
adc
pop
mov
mov
jne
sbb
popf
iret
jne
mov
and
popf
xchg
add
xchg
adc
cmc
add
mov
add
lock
test
shrb
jp
adc
fimuls
add
sbb
mov
push
push
dec
xchg
orb
orb
mov
add
idivb
jb
and
or
xor
neg
add
into
inc
add
add
push
out
mov
add
sahf
jae
add
add
jo
adc
add
sahf
push
add
pushf
mov
xor
loopne
xchg
out
arpl
add
xchg
rcr
dec
sub
add
mov
add
mov
xor
pushf
enter
not
adc
icebp
fwait
or
add
and
out
xor
add
iret
out
les
leave
shlb
rcll
jne
mov
sub
jmp
inc
insb
or
popa
mov
push
add
lods
test
add
add
sahf
out
pop
add
or
inc
add
int
in
enter
push
jnp
mov
jl
fmull
inc
int3
shlb
pop
notl
cmp
aad
push
jge
sti
aad
add
fstpl
aaa
add
xchg
shrb
cwtl
lret
or
or
aas
jge
add
jne
inc
fcompl
js
jb
cmc
push
pop
sbb
jmp
rcrl
mov
push
cwtl
mov
and
inc
loop
loope
hlt
add
add
jno
addb
mov
or
lret
inc
or
or
test
lock
insb
sahf
and
pop
test
jl
loop
mov
mov
fisubs
rol
bound
adc
inc
xchg
out
pushf
arpl
call
das
xchg
push
js
mov
adc
test
xor
add
arpl
jecxz
add
fsubrl
mov
push
fdivs
mov
inc
ror
and
mov
enter
or
xorl
ja
xor
or
inc
iret
push
aas
sub
mov
movsb
and
jne
arpl
dec
sarl
pop
in
mov
add
lods
in
add
xlat
imull
out
add
and
ja
lahf
add
push
sbb
lods
add
dec
inc
mov
int
sbb
or
lods
or
xchg
js
mov
add
loopne
jb
mov
push
cli
int3
jne
ss
adc
cmp
add
and
les
lret
int
loope
push
and
mov
fwait
orl
imul
mov
mov
add
adcb
pushf
cmp
fldl2e
les
out
add
push
add
push
inc
or
sar
repnz
adc
fsubrl
rorl
test
add
fnstcw
and
sub
sub
xchg
push
lock
dec
jnp
add
mov
movsb
aaa
pop
add
test
push
add
in
push
sbb
pushf
movb
push
out
mov
iret
test
or
mov
int3
pushf
repz
xchg
lret
add
push
pop
push
push
jge
pop
jp
pop
sbb
mov
or
mov
add
dec
xor
mov
fldenv
bound
add
mov
std
bound
mov
xchg
fidivl
imul
jo
jno
add
push
mov
arpl
xlat
lods
xor
loope
sub
inc
sarb
pop
icebp
push
je
into
pop
lret
cmovae
and
mov
enter
and
mov
rclb
xor
lret
add
add
incl
add
add
aas
add
add
aas
xor
push
leave
dec
stc
mov
aad
je
push
movsb
xor
jge
int3
push
rcrl
inc
sub
subps
addl
notb
add
push
add
mov
dec
jbe
and
add
sti
filds
inc
adc
fwait
mov
hlt
je
cs
in
test
dec
test
or
add
cmpsb
xor
lds
mov
inc
jle
ss
mov
add
jg
add
push
inc
add
or
fistl
test
add
in
pop
jb
inc
mov
cmp
mov
add
adc
cmp
loope
cmp
add
jae
add
aam
add
scas
stos
and
incb
xor
jge
jb
fnsave
hlt
popa
mov
sub
mov
jne
mov
push
and
imul
addl
popf
pop
push
mov
aam
cs
stos
add
ds
es
mov
adc
sbb
iret
add
pop
mov
sbb
pop
and
cmp
std
fstpl
pusha
mov
lods
mov
xchg
mov
gs
sub
in
add
cli
sbb
xor
cmp
add
iret
mov
cmp
jae
lock
add
add
icebp
jmp
adc
test
test
aad
add
xor
pop
and
cltd
pop
rcll
in
out
jmp
or
add
stos
push
add
add
pushf
adc
aad
inc
jge
sub
xchg
mov
add
frstor
cltd
and
pop
lret
cmp
icebp
lods
jnp
pop
jno
gs
fadds
shlb
push
cmpsb
insb
and
sub
cmp
int3
rcll
lds
push
jl
xchg
in
pop
pushf
scas
inc
dec
cmpsl
jmp
cmp
movsl
pop
add
mov
jno
dec
es
xchg
int
popa
cmp
mov
push
stos
stos
int
and
xor
add
add
jecxz
mov
jb
sub
add
inc
dec
jo
cld
lret
mov
and
addr16
daa
call
arpl
adc
and
and
add
subb
aas
sub
fwait
clc
pop
cs
xchg
lods
lea
pop
call
add
cmpsl
xlat
push
cwtl
addl
imul
lret
in
mov
jo
add
std
push
jnp
lret
add
imul
inc
add
icebp
adc
notl
in
pop
xor
stos
outsl
outsb
add
out
arpl
add
add
repz
xchg
scas
les
dec
mov
mov
jecxz
pusha
add
inc
add
int3
and
aaa
fdivr
test
sub
mov
mov
cld
mov
add
test
jmp
pop
imull
sbb
add
popl
add
shlb
fcmove
jnp
xor
dec
movsb
insl
cwtl
add
mov
and
mov
test
add
jne
lcall
inc
pop
and
xor
sub
in
jno
add
mov
mov
jp
add
push
add
data16
daa
inc
add
fidivrl
or
rcr
dec
pop
cmpsb
cmpsb
movsl
dec
arpl
js
jns
sub
mov
mov
fucomip
ja
sbb
or
cmp
push
mov
in
addr16
incb
add
add
imul
add
test
test
jns
mov
das
ss
shll
les
add
or
out
cltd
out
fnsave
push
and
add
cltd
add
cmc
std
sbb
test
add
dec
rolb
jp
add
or
add
fdivs
add
push
lret
add
push
inc
mov
xor
out
pop
push
add
add
cmp
stc
sahf
push
add
sbb
arpl
cmp
add
pop
xchg
mov
inc
push
inc
enter
cmpsb
push
inc
rcrb
xorb
add
sarl
jl
dec
push
daa
add
mov
fwait
dec
mov
jg
add
out
mov
push
popf
mov
mov
push
add
ja
lea
fs
sub
mov
add
mov
add
sbb
repz
add
adc
adc
loopne
movsb
aad
cmpsb
ds
das
xor
lds
lcall
add
pusha
cld
add
xchg
scas
xchg
inc
add
mov
mov
dec
mov
inc
pop
sbb
shlb
sarb
jno
dec
arpl
pop
sub
lods
fs
scas
sub
mov
ljmp
lods
pop
add
mov
aad
out
or
mov
dec
push
lds
movsb
sbb
jne
popa
leave
add
dec
aas
scas
repnz
je
mov
mov
sub
mov
shl
and
aad
push
xor
xchg
fidivrs
pop
cli
add
fcmovbe
adc
prefetchw
adc
dec
push
push
cli
add
add
jo
imul
add
fisubl
sub
jecxz
cmpsl
sub
add
loop
aaa
pop
ss
pop
cli
add
loope
pop
clc
andb
sub
pop
add
sbb
fidivs
xor
inc
adc
loop
fisubl
repz
add
mov
into
inc
cmp
push
mov
ljmp
mov
iret
jmp
push
je
push
imul
insl
jbe,pt
mov
or
lds
push
push
cwtl
cmp
rclb
es
push
fcomps
add
push
imul
cmp
xchg
cmc
outsb
push
mov
or
cmpsb
test
and
push
mov
daa
repz
add
test
xor
xor
or
cmpsb
add
and
fmull
cmpsl
shrl
mov
jb
les
pop
lret
enter
sub
repnz
xchg
add
add
test
mov
mov
xchg
jmp
add
nop
xor
hlt
add
cwtl
jmp
clc
subb
aad
loop
dec
mov
enter
xor
lret
pop
mov
shrl
adc
xchg
cmp
or
test
and
mov
pop
jo
in
cmpsb
inc
pop
add
add
popf
mov
mov
test
add
push
xor
out
out
rolb
popa
mov
and
xor
cmp
int3
add
jae
aad
call
rcrb
pop
icebp
or
popa
adc
mov
test
and
cmp
movsb
icebp
clc
aaa
mov
push
lods
scas
pop
fnstsw
clc
add
xor
mov
outsb
sbb
add
jecxz
sub
cwtl
jecxz
or
les
mov
add
jae
mov
dec
nop
mov
add
mov
push
sub
or
addb
repnz
divl
enter
outsl
rcr
les
aaa
gs
dec
mov
ror
icebp
sub
sub
ss
mov
rcrb
cmp
and
leave
mov
pop
pop
gs
mov
jnp
mov
adc
ret
ljmp
call
mov
rcl
repz
mov
sbb
cmp
popf
pop
mov
orb
mov
mov
bound
test
hlt
sub
je
cmp
movl
insl
int
popf
es
jnp
cmp
outsl
push
adc
sbb
sbb
pop
stos
pusha
pop
dec
add
dec
pop
lcall
lock
sub
and
lret
sub
nop
loop
lock
mov
scas
add
xchg
add
sahf
inc
mov
xlat
stos
lahf
inc
inc
mov
test
add
or
and
xchg
jmp
pop
popf
adc
jp
out
stos
test
mov
and
inc
and
mov
clc
jnp
cmp
dec
pop
sbb
popf
or
int
into
imul
fidivl
aaa
fimull
addr16
xchg
popa
adc
lock
xor
in
xor
sbb
cmp
xchg
frstor
add
mov
fcoml
add
mov
aam
jp
xchg
aas
push
lahf
mov
jg
sbb
movups
cltd
push
loopne
dec
sub
and
adc
sub
cmp
push
and
add
lahf
xor
ja
idiv
mov
cld
insl
dec
push
add
cmpsb
test
mov
cmp
inc
lcall
loop
push
add
add
sbb
mov
pop
sbb
popf
nop
inc
add
fimuls
cld
add
cmc
aaa
stos
loope
leave
adc
call
es
adc
subl
add
in
cmp
push
dec
outsl
adc
repz
outsb
pop
add
add
insl
add
mov
out
ds
xchg
add
xor
add
add
das
std
push
mov
dec
push
sbb
out
cmp
in
data16
jmp
jmp
mov
data16
add
out
inc
mov
mov
lds
std
bound
lret
inc
add
xor
imull
nop
idivb
mov
and
subl
imul
or
stos
or
inc
mov
sub
jae
faddp
mov
and
sbbb
mov
movsl
inc
cmp
roll
jno
push
xlat
xor
xor
test
sbb
sbb
sbb
test
movsb
sahf
add
cmpsl
shl
mov
or
out
xchg
add
pop
jl
std
xchg
xchg
mov
and
inc
or
xor
add
mov
mov
nop
je
gs
aam
test
push
test
jmp
fadds
mov
inc
adc
mov
fldt
fs
mov
pusha
jp
adc
mov
rolb
add
ret
scas
push
or
mulb
cwtl
pop
or
stos
add
fcmovnu
xchg
sub
insb
adc
rcr
and
gs
adc
add
test
je
mov
mov
jns
mov
inc
push
pop
add
scas
pusha
sbb
xor
push
inc
mov
add
add
aam
inc
inc
jge
mov
popl
adc
jns
cwtl
add
inc
mov
fcmovnbe
add
repnz
add
sarl
mov
fdivrp
add
ds
sbb
jmp
add
shrb
pop
test
mov
pop
pusha
repz
dec
repnz
push
push
mov
leave
mov
push
add
ret
push
pop
rcll
jle
cld
pop
cmpsl
fs
in
out
mov
mov
adc
mov
movsl
adc
add
add
je
add
add
add
jo
and
dec
xchg
add
xor
mov
xorb
push
iret
js
cltd
adc
mov
ljmp
inc
fwait
mov
jae
jl
xchg
xchg
cmp
insl
jecxz
pusha
or
dec
inc
out
lea
pop
es
add
jp
inc
repz
add
xor
nop
add
ljmp
jmp
bound
add
jns
enter
jne
adc
add
aad
mov
xor
aas
add
incb
adc
mov
mov
fwait
lret
jl
lahf
pop
xchg
add
pop
pop
push
push
sub
icebp
adc
push
aam
add
mov
repz
xor
adc
pop
pop
nop
pop
shll
mov
ret
xchg
sbb
cmp
clc
push
jnp
add
pushf
outsb
dec
pop
add
mov
gs
xor
lock
sub
cmpsl
dec
fldenv
xchg
rol
daa
and
mov
fadds
or
insb
jl
add
lea
adc
incl
clc
push
pusha
cld
add
xor
popa
fwait
shrl
adc
mov
sbb
mov
loop
pop
roll
pop
pop
pop
imul
jg
cmpsl
jg
sub
inc
dec
lret
stos
add
xor
cmp
jns
stc
adc
js
aam
in
push
das
cmpsl
fiaddl
jae
out
cmp
aad
adc
imul
icebp
push
mov
xor
add
dec
add
jecxz
jo
andb
iret
adc
xor
pusha
std
mov
lret
cs
mov
add
xchg
mov
aas
dec
mov
lahf
push
ds
or
mov
dec
xchg
push
push
sbb
sub
cmp
and
movb
adc
mov
pusha
add
cmp
in
clc
mov
add
jp
lods
xchg
or
add
je
mov
out
movsl
add
shl
mov
popa
add
add
pop
cmp
sar
sub
push
je
sub
adc
shl
out
outsl
cmpsl
xor
pop
push
cmp
inc
inc
dec
aaa
in
xchg
sbb
pop
int3
ds
lea
inc
sub
add
mov
add
cld
push
pop
push
jecxz
aad
dec
or
nop
movl
dec
fbstp
rorb
cld
cmp
mov
outsb
popf
ds
mov
sti
mov
aas
mov
lock
sbb
add
lods
push
and
lcall
clc
pop
repnz
or
es
add
in
data16
adc
insl
and
push
add
lret
sub
into
add
add
bound
or
arpl
jbe
pushf
sub
mov
pop
lret
add
xchg
sub
sub
out
bound
hlt
test
test
cltd
add
or
lcall
xlat
data16
ds
inc
add
or
mov
filds
push
mov
sbb
test
and
push
or
insl
aad
ljmp
mov
sbb
mov
push
outsl
adc
push
add
pop
inc
sub
lods
in
test
pop
xchg
daa
pop
add
into
rcrb
mov
dec
dec
pop
mov
pop
dec
push
sub
jl
mov
sub
popa
sbb
xchg
mulb
pop
loop
jl
add
adc
movsl
add
jae
dec
lock
jno
das
andl
je
sbb
mov
dec
push
add
inc
jbe
fcomps
pop
jae
pushf
shll
test
ss
add
popa
js
mov
xor
add
std
xchg
loopne
inc
test
mov
dec
cli
or
sub
ror
add
inc
loopne
add
pop
cmpsb
mov
jg
nop
adc
adc
xchg
xchg
mov
dec
and
test
aad
inc
adc
pusha
jnp
movsb
insl
repnz
jle
pop
leave
add
mov
imul
ret
insl
loope
das
add
shlb
xchg
adc
cwtl
push
add
push
bound
jae
lret
flds
xchg
jbe
lods
sbb
aad
jnp
cld
push
add
jmp
mov
inc
int
fxam
ds
mov
adc
dec
rolb
xchg
add
xor
xchg
push
or
loopne
xchg
daa
jne
cmp
push
mov
xorl
sbb
data16
cmpsb
sub
mov
or
scas
xchg
jno
daa
lret
in
repz
movsl
outsb
lods
les
xchg
xor
imul
add
insl
lcall
in
aaa
pop
jae
lock
xchg
mov
lods
add
pop
xchg
out
xchg
stc
jb
add
rcll
shl
idivl
stos
lahf
ret
aaa
popf
bound
or
aaa
pop
add
arpl
pop
dec
adc
enter
fwait
push
fisttpll
cmc
mulb
lea
dec
pop
xchg
jae
les
testl
add
push
inc
adc
push
cmpb
adc
add
mov
aas
xchg
mov
aas
jmp
imul
lods
add
jle
and
incl
shrl
daa
scas
fimull
and
into
mov
out
lret
cmp
loopne
mov
loope
jg
stc
pop
xchg
in
dec
mov
add
pop
mov
test
and
pop
jg
mov
mov
add
add
dec
add
dec
mull
imul
cwtl
mov
out
popl
mov
mov
pop
xor
add
sti
inc
fnstenv
scas
mov
loopne
std
sub
test
add
sbb
and
xchg
jle
mov
test
inc
add
dec
dec
ss
xor
hlt
add
inc
cmp
jle
push
out
jmp
push
or
hlt
pop
in
inc
ret
mov
cmp
pushf
movsl
add
adc
lret
popa
mov
stos
and
mov
add
arpl
roll
add
add
push
jnp
out
outsl
ja
lea
sub
aam
stos
dec
xchg
cmp
icebp
adc
adc
jmp
mov
mov
rclb
or
mov
jb
sub
inc
push
sbb
nop
stc
dec
push
ror
fiaddl
pop
mov
rcrb
push
lock
push
and
out
loope
adc
int3
adc
push
add
gs
cmp
push
add
add
aaa
push
add
fisttpll
insl
sbb
push
inc
adc
adc
pop
sub
add
add
add
and
jle
pusha
xchg
cmp
add
pop
mov
aam
cmpsb
shrb
outsb
mov
mov
lods
add
inc
clc
add
mov
je
daa
sub
pop
mov
mov
add
fs
add
dec
lock
pop
pop
out
stos
inc
and
sbb
add
lret
pop
xchg
xlat
ret
push
push
adc
pushf
mov
mov
or
jbe
sub
out
addl
xchg
push
lret
add
insb
mov
adc
popa
addw
fcoms
sbb
test
or
jge
cmp
andl
xchg
imul
add
pop
inc
mov
push
adc
xor
add
xchg
add
cmp
xorb
jge
cmpsb
sbb
pop
xchg
negb
sbb
add
fsts
divl
dec
add
mov
es
mov
mov
and
mov
pop
dec
cmp
pop
sbb
jl
hlt
inc
cmp
add
maxps
add
jns
sar
inc
loopne
clc
sbb
sbb
stos
aaa
jp
ret
xchg
pusha
divb
int
sbb
data16
out
add
add
add
or
jecxz
add
mov
xchg
repz
add
push
and
int
scas
gs
decb
ss
pop
xor
sbb
jbe
xor
mov
add
lods
push
jnp
aad
mov
push
mov
ss
add
testb
test
adc
into
test
divb
pop
scas
filds
sarb
push
jecxz
jp
lea
push
sub
fs
movsl
shrb
jmp
mov
jge
jge
add
aas
dec
cmpsb
aam
ljmp
std
imul
mov
sbbl
sti
js
add
je
add
cmc
aas
xchg
add
lea
imul
push
cmp
repz
fidivl
mov
and
cmp
in
push
mov
dec
xchg
xchg
lahf
rol
stos
cli
iret
push
rcrb
xchg
mov
inc
mov
aam
add
add
add
sub
icebp
fnsave
decb
popf
dec
sub
add
ja
and
add
add
loopne
add
add
roll
add
scas
shll
xor
outsl
pop
add
mov
je
fnstsw
mov
add
add
mov
adc
xchg
add
fndisi(8087
sarb
and
movsl
dec
jp
mov
and
ljmp
sahf
sbb
std
sbb
cwtl
aad
aam
mov
add
xchg
rcrb
lahf
js
add
mov
out
and
insb
add
call
lods
clc
or
out
mov
add
nop
int
adc
in
jmp
inc
pusha
push
push
fdivr
push
imul
add
dec
pop
verw
push
sbb
jns
inc
dec
cmpsl
bound
push
movl
add
pop
es
adc
lahf
push
xchg
jb
pop
mov
adc
push
stos
mov
cld
push
add
add
cmp
int3
js
ret
or
out
sbb
out
mov
add
jp
aaa
outsb
adc
rol
add
add
fcompl
arpl
add
xchg
and
add
xchg
jle
arpl
outsl
or
add
push
enter
and
mov
lds
stos
mulb
xchg
pop
clc
aas
sbb
jbe
in
aam
sub
jne
sbb
inc
arpl
xchg
push
imul
stc
insb
add
loopne
fdiv
dec
add
adc
test
fsub
movsb
push
int
push
mov
push
insb
cmp
call
je
add
mov
dec
and
mov
sbb
ret
les
push
add
pop
add
movsb
add
movsb
lahf
repnz
sbb
mov
mov
test
mov
mov
add
insl
cmpsl
dec
or
mov
mov
mov
sub
mov
pop
jns
das
fmuls
shrb
int3
out
xor
stos
sub
sbb
hlt
add
mov
dec
imull
gs
xchg
lds
popf
hlt
call
mov
outsb
test
mov
mov
or
cmp
xchg
pop
add
popa
add
mov
mov
jecxz
dec
fwait
mov
push
imul
mov
addl
mov
jae
cmp
adc
xor
sbb
mov
add
or
popa
xor
jle
add
movsl
inc
add
or
cs
inc
add
mov
mov
sub
sbb
or
stos
mov
mov
dec
xorb
test
mov
call
sahf
mov
sub
sbb
cmc
sbb
adc
or
lock
loopne
xor
inc
insb
add
sahf
repz
sub
les
outsl
mov
mov
les
inc
xchg
pusha
lcall
scas
mov
xor
mov
in
sbb
fidivrl
aad
and
loopne
cmp
jnp
dec
mov
jge
js
add
lahf
xchg
xchg
xlat
pop
data16
mov
add
and
roll
cmp
aad
fs
icebp
mov
inc
pop
out
ficoms
xchg
arpl
ljmp
mov
xor
jecxz
add
aad
cmpb
sub
das
adc
mov
add
jae
inc
aad
mov
repnz
out
fcmove
add
iret
add
mov
addb
pop
in
out
and
fiadds
xchg
or
jno
jns
dec
fsubr
jmp
sbb
imul
lahf
and
mov
xchg
inc
rol
add
fptan
add
dec
fldl
mov
add
ds
in
and
repz
lcall
adc
inc
cltd
add
xchg
add
push
arpl
stos
add
xchg
sub
fs
daa
mov
arpl
js
jmp
fidivs
jecxz
xor
jg
sub
enter
mov
xor
jmp
dec
sbb
pop
mov
add
push
int
or
outsl
cmp
and
lds
scas
adc
mov
outsl
cmpsl
and
and
inc
jle
add
xchg
repz
xor
mov
mov
std
add
jo
xor
mov
inc
rcll
into
cmpsb
cwtl
sub
std
das
rcrb
dec
lcall
out
fistpl
lcall
rclb
mov
pop
xchg
ljmp
insl
sarl
add
pop
add
addb
rol
daa
add
pop
or
in
sub
inc
sbb
mov
cli
add
add
jbe
jmp
mov
sbb
jnp
inc
test
add
add
gs
add
imul
test
adc
repnz
loop
sar
add
push
push
and
xor
jns
cld
inc
pop
fildll
mov
lds
lahf
or
mov
mov
add
push
not
movsb
push
pop
jmp
dec
js
in
jns
pop
jne
push
jno
imul
sbb
call
fwait
movsb
jb
movsb
xchg
mov
pop
outsb
test
cmp
mov
add
jle
add
cmpsb
jl
add
mov
test
xchg
dec
scas
push
ds
and
mov
jae
and
jne
xor
add
lcall
add
scas
lods
dec
add
jnp
lret
mov
push
add
xchg
xor
mov
dec
mov
imul
fimuls
mov
sub
cli
jns
jge
idivb
rcll
add
sbb
mov
aaa
adc
test
mov
mov
xor
arpl
jnp
mov
idivl
fwait
lea
or
dec
add
add
loope
add
sub
xchg
dec
out
mov
imulb
or
ret
insb
mov
testl
or
sbb
xor
dec
mov
jp
fiadds
push
add
sarb
add
jbe
inc
add
cmp
jmp
daa
add
sbb
out
mov
das
int3
jmp
add
or
add
divl
sbb
pop
add
push
inc
mov
sbb
dec
orb
add
adc
dec
fdivrl
mov
out
jp
mov
stos
add
add
push
test
jmp
fucom
test
sbb
add
pop
leave
add
popa
push
sub
cmpsl
sbb
mov
pushf
mov
in
rorb
fldenv
out
in
push
add
cmp
rorl
mov
xchg
push
pop
mov
das
dec
sarl
sbb
imul
ja
rcrl
or
adc
in
js
into
adc
push
jp
loope
es
add
push
dec
inc
subl
cmp
jl
ljmp
test
andb
mov
enter
into
cmc
out
movsb
or
cmp
in
add
daa
popa
nop
fldenv
and
repz
lods
add
add
out
cmp
ds
in
inc
mov
mov
mov
pop
call
mov
addb
les
add
sub
hlt
in
cmp
pop
adc
iret
mov
mov
add
sbb
sbb
add
push
test
movsl
add
shll
add
or
adc
mov
add
stos
cmpsb
push
hlt
and
addr16
adc
das
or
push
addl
lcall
test
es
add
xor
popa
xor
pop
xchg
adc
add
add
pop
stos
xchg
add
mov
mov
jp
or
adc
or
test
pusha
aas
add
add
addb
pop
ljmp
sbb
add
pop
jle
pop
and
add
jmp
push
inc
jp
sub
test
in
lds
rclb
cmp
les
lock
not
add
mov
add
jle
cmp
mov
push
rolb
ret
add
sti
inc
stos
lods
adc
sbb
fadds
and
add
add
out
cltd
in
stc
pushl
jle
pusha
push
shll
pop
dec
popf
add
jecxz
imul
std
add
pop
jg
jnp
pop
cmp
les
mov
pop
dec
mov
int
out
pop
ret
add
inc
sbb
sbb
or
mov
jnp
das
ss
rcr
mov
add
inc
add
add
sbb
mov
lea
add
add
adc
push
add
add
call
daa
pop
add
cmpsl
xchg
cmc
scas
mov
add
add
dec
mov
add
add
jmp
pushf
add
inc
mov
add
ss
dec
sub
pushf
dec
pushf
pusha
pop
inc
dec
jge
insl
adc
scas
xchg
bnd
sbb
sbb
add
movsl
lcall
addr16
lahf
test
add
add
inc
add
xor
ret
xchg
sub
jp
jns
lret
inc
popa
icebp
jns
out
adc
pusha
ss
mov
xor
out
add
or
cmpsl
sub
pop
and
pusha
ja
addr16
xchg
out
shl
mov
mov
and
test
dec
add
adc
add
sub
dec
mov
lcall
movsb
push
ret
insb
sbb
mov
sbb
xchg
lahf
push
add
mov
ds
testl
sub
add
add
sub
adc
sbb
add
cld
sbb
add
hlt
mov
cmp
dec
or
xchg
pusha
ja
inc
cmp
jno
paddsb
and
subl
xchg
jle
test
mov
sub
inc
add
add
sub
jae
clc
push
add
pop
inc
and
mov
mov
add
add
fsubl
add
stos
icebp
add
pop
aaa
mov
jns
test
loope
jp
inc
rcr
mov
imul
les
loope
mov
add
push
adc
iret
jp
inc
mov
push
xchg
mov
fcmovne
pop
or
cwtl
fs
jl
jno
nop
push
stc
sahf
adc
lret
nop
mov
push
add
test
add
notb
fs
xchg
and
or
outsl
sbb
shlb
sbb
repnz
jns
ljmp
mov
test
ret
pop
aas
inc
mov
mov
mov
das
lods
das
add
mov
jbe
add
add
jo
push
sub
adc
out
add
sbb
add
mov
pop
das
jbe
loopne
mov
mov
add
jl
mov
sub
lret
add
add
sahf
lahf
add
lods
pop
pop
sub
pop
add
pop
push
out
xorb
ss
xchg
jns
je
lcall
cwtl
cs
adc
or
mov
xlat
mov
or
movsl
mov
pop
add
gs
xor
mov
add
mov
add
out
test
add
dec
add
lods
add
push
icebp
cld
dec
das
sahf
fs
add
jnp
gs
arpl
add
std
jb
lods
xor
inc
fiadds
sbb
cs
add
dec
add
mov
xor
setae
mov
sub
xchg
dec
xlat
sti
mov
xor
bound
add
inc
cmpsl
rep
cld
ja
ja
imul
dec
leave
sbb
addr16
ret
sub
sub
insb
fildl
cmp
pop
add
cmp
pop
xor
push
fisubl
insb
aaa
add
cs
sbbl
xor
add
cmpsb
jmp
js
add
mov
arpl
push
cmp
popf
push
ret
or
sahf
and
mov
lret
lret
add
loope
rcll
push
bound
adc
mov
jmp
shrb
test
cwtl
cmp
add
jl
or
mov
mov
mov
dec
pop
cmpsl
push
sbbb
xchg
sbb
jb
test
out
or
add
enter
mov
scas
icebp
sbb
mov
mov
aaa
dec
push
mov
sub
add
faddl
push
sub
add
adc
xor
add
add
sbb
iret
test
add
dec
push
les
nop
add
dec
add
dec
dec
push
push
shll
jg
or
xchg
shr
mov
jb
mov
stos
mov
out
scas
fstps
leave
out
pop
fwait
movsb
outsl
xchg
mov
sbb
pop
int3
movsb
add
jns
or
imul
cwtl
pop
add
shr
shrl
pop
jmp
outsl
mov
fisubrl
sub
daa
aas
xor
imul
aas
das
push
pushf
inc
fsubrp
cmpsb
ret
lea
aam
xchg
xlat
xor
jl
add
sub
and
aad
jecxz
sub
call
or
dec
fiadds
repz
mov
push
jne
test
icebp
sub
stos
popf
add
dec
mov
push
les
pop
jg
cwtl
pop
repz
and
push
mov
in
inc
add
dec
rorb
inc
mov
clc
sub
aad
insl
cli
mov
subb
ret
inc
dec
adc
pop
add
adc
shll
inc
out
and
add
xor
fisttps
and
sti
mov
mov
mov
cmc
movsb
jge
xchg
daa
popf
lds
cmp
or
dec
fsubl
cli
cmp
mov
inc
dec
sbb
xlat
xor
add
pop
stos
bound
dec
mov
ljmp
inc
rclb
enter
movsl
jp
cmp
repnz
lods
out
mov
dec
add
sbb
mov
xor
repnz
rcrb
pop
stos
add
push
sub
mov
inc
fistps
popl
pop
inc
cmp
add
jl
fstpl
add
sbb
xor
popf
clc
daa
clc
rol
fucomi
inc
dec
pop
test
mov
push
push
add
add
add
mov
push
add
movsb
xchg
inc
lds
adc
cmp
pusha
cld
cmpsl
scas
jge
cmc
add
jp
push
lret
movsb
add
xchg
shll
xchg
jbe
ds
and
cmp
cli
decl
and
std
add
dec
scas
pushf
imul
add
push
add
and
add
std
lods
dec
fsts
add
rcll
dec
add
dec
cmpsb
ljmp
add
lock
push
push
add
xchg
cmpsb
jmp
mov
add
xchg
insb
stos
not
jno
add
aad
test
xor
add
add
cmpsb
mov
gs
test
add
add
cs
cmpsb
test
js
sti
scas
leave
add
mov
loope
jge
hlt
sar
sbb
test
lods
aaa
dec
xchg
jae
mov
push
les
orl
mov
push
scas
mov
add
mov
push
cmp
pop
push
add
add
callw
add
add
cltd
movsl
mov
mov
jmp
xchg
loope
mov
stos
add
aam
jmp
pushf
xor
sbb
aad
xchg
popa
imull
xchg
lock
add
inc
testl
sbb
or
push
cmpsl
jnp
pushl
sbb
and
mov
cmp
ss
xor
and
pusha
push
jo
ljmp
pusha
mov
sbb
fadd
lods
adc
pop
outsl
mov
mov
sbb
add
add
add
add
data16
push
push
test
iret
add
mov
cltd
push
into
imul
pop
lret
cli
cmpsb
mov
add
sarb
jmp
add
add
sub
cmp
inc
cli
sub
movsl
invd
mov
imul
adc
imul
jmp
add
mov
add
cmp
sbb
pop
mov
jg
jecxz
fnstsw
add
xor
addl
out
jbe
sub
xor
pop
mov
movsl
inc
pop
sbb
stos
and
and
push
lret
into
jno
ljmp
push
fwait
clc
pop
push
sub
xchg
fnsave
call
imul
add
inc
push
xor
xchg
or
daa
inc
add
daa
mov
frstor
cli
xchg
test
add
int3
add
add
sbb
mov
sbb
add
push
out
mov
cmpb
sbb
imul
dec
or
shlb
ret
sub
add
stos
rorl
add
dec
push
stos
int3
add
cmp
bound
out
dec
pop
sarl
mov
fsubr
mov
inc
add
add
or
iret
jne
mov
es
out
or
push
pop
loopne
pop
mov
ja
add
dec
dec
lock
nop
push
incl
int
add
ljmp
pop
add
inc
es
inc
cmpsl
pop
dec
cli
add
cmp
sub
cmp
cli
inc
call
or
pop
mov
jnp
pusha
xlat
sub
hlt
bound
sub
dec
jno
mov
in
fdivrl
roll
lods
std
xor
popa
add
es
test
add
sbb
mov
lcall
gs
mov
fistl
adc
out
scas
and
lea
add
mov
push
add
jl
out
cmp
inc
dec
mov
dec
movl
mov
mov
xor
add
aas
inc
add
sub
ret
imul
mov
add
lds
add
dec
add
sbb
push
add
xchg
sub
jns
test
clc
xlat
mov
scas
or
subb
out
pop
roll
push
pop
scas
adc
add
cmp
push
mov
and
iret
mov
jmp
rcll
mov
sbb
les
cmpsl
add
push
jge
mov
stc
cwtl
rorb
pop
add
jp
icebp
xchg
dec
add
stos
add
pusha
mull
fstpt
jge
rcl
sbb
add
lea
leave
into
std
mov
mov
add
mov
inc
rcr
incb
mov
scas
inc
mov
insb
add
or
add
cmp
dec
jmp
fnstcw
ss
xor
pop
add
sub
add
cs
jbe
arpl
xor
inc
cltd
push
out
xor
jmp
mov
sbb
adc
push
add
scas
jbe
sbb
cmp
xor
addl
sbb
push
lret
lret
add
ss
imul
xorl
pushf
test
pushf
mov
sub
fmulp
jo
cmp
fucomip
adc
into
stc
stos
pop
sub
ljmp
cmp
push
loop
rorl
xchg
push
movsb
jmp
jns
cmpsl
mov
scas
fiaddl
popf
push
dec
mov
fs
add
les
sub
add
fimull
aam
neg
add
flds
add
jecxz
bound
mov
outsl
add
and
aas
pop
lahf
add
movsb
lds
mov
add
push
pop
mov
dec
inc
out
pushf
mov
cmp
in
add
insb
loope
mov
add
adc
repnz
cmpb
pop
cmpsb
call
and
or
mov
outsb
dec
call
push
xor
push
dec
setae
mov
xor
ss
into
add
pop
lods
dec
inc
stc
pop
add
cld
cld
ljmp
lret
mov
fistps
cmpsb
push
pop
sbb
lcall
add
jo
aam
xchg
ret
into
add
stc
sbb
or
mov
push
stos
xchg
sub
cmp
insl
repz
sbb
sbb
test
aad
loopne
lea
cld
xchg
add
sub
dec
decl
mov
add
clc
sub
lods
das
and
push
xchg
add
xchg
icebp
jno
idiv
stos
lret
popf
add
jbe
push
adc
add
add
xchg
fucomip
pop
xchg
sarb
cmc
add
sbb
insl
xchg
pusha
out
and
push
add
outsb
sbb
dec
add
hlt
jecxz
scas
out
mov
imul
add
aam
add
hlt
add
add
add
sahf
rcrb
mov
xor
add
cmp
and
dec
jge,pn
add
add
push
lahf
fwait
add
push
or
cmp
inc
repnz
frstor
lret
add
imul
pop
xchg
js
test
jb
mov
add
in
pop
sarb
lret
cmp
stos
stc
add
fnstsw
jg
push
inc
outsb
lods
pop
add
mov
sub
enter
repnz
cmp
add
movsl
jmp
cwtl
add
add
aam
lret
lods
sub
data16
jns
xchg
xor
cs
les
add
adc
subl
xchg
repz
add
add
cs
xchg
dec
ret
rorb
add
out
mov
mov
sub
and
imul
or
testl
dec
pop
loope
in
addl
or
add
stos
mov
pusha
push
pop
or
xor
mov
outsb
add
test
push
add
mov
xchg
add
xor
push
sbb
or
add
and
xchg
add
mov
popf
lahf
cwtl
sub
notb
sub
pushf
lds
and
add
inc
inc
xor
test
mov
cld
xchg
push
dec
pop
add
add
add
add
sub
add
xor
cmp
inc
xor
pusha
add
jl
and
add
das
push
sub
mov
mov
add
mov
add
cmp
into
jmp
dec
popa
enter
add
xor
jno
jno
or
add
add
aas
lret
xor
xor
sbb
push
rcl
cmpsb
push
or
adc
or
stos
push
jns
cmpsb
dec
add
and
xchg
mov
add
pop
sbbl
and
sub
add
add
dec
sar
sub
fstpt
jmp
lds
pop
roll
jle
or
jmp
adc
sbb
pop
lret
mov
repnz
xchg
mov
int3
and
or
pop
roll
cmp
cwtl
out
add
and
stos
push
xchg
add
aaa
adc
mov
stos
int
pop
push
mov
inc
add
mov
js
jmp
cmp
inc
add
scas
inc
arpl
lea
insl
mov
dec
imul
xchg
adc
xchg
lret
add
imul
es
or
je
mov
mov
mov
xorl
fisttps
testl
add
in
lea
pusha
push
into
pop
fdivl
push
arpl
sbb
movsb
test
and
flds
cmc
xchg
std
mov
xchg
mov
aaa
push
mov
xlat
icebp
push
xor
xchg
mov
xchg
repz
jl
adc
sub
cmp
sub
das
add
lcall
shll
add
inc
mov
in
stos
mov
add
out
sbb
imul
sub
sbb
add
cs
data16
inc
dec
and
cmpl
and
sets
sti
add
add
jmp
jmp
imul
sbb
mov
sahf
rolb
pop
xor
pop
ja
inc
lods
jbe
sub
xor
xor
addr16
xchg
sub
add
mov
cmp
add
xchg
jle
or
shr
sbb
sub
stos
and
mov
xor
pop
mov
push
adc
jle
and
arpl
cmpsl
jnp
ficoml
mov
into
mov
jne
movsb
or
pop
pushl
adc
aad
push
xchg
add
dec
movsl
iret
push
push
add
xchg
enter
je
add
add
dec
ljmp
gs
cwtl
jl,pn
stos
adc
mov
imul
jae
add
in
xchg
push
fistl
add
into
daa
adc
add
add
mov
ds
nop
push
add
jecxz
cltd
add
or
cmp
out
ss
mov
xchg
add
add
pop
sub
push
ss
std
movsl
sbb
fldl2t
ss
jp
add
add
xchg
aad
clc
bound
lret
jns
adc
test
in
jno
xchg
scas
mov
scas
pop
xor
cmp
insl
mov
mov
mov
sahf
scas
push
pop
push
push
and
daa
mov
add
addl
dec
push
push
add
loop
mov
daa
adc
push
mov
cwtl
shufps
mov
and
outsb
lret
pop
inc
cs
iret
in
popf
cmp
sahf
sbb
cs
or
inc
add
adc
imul
xchg
cwtl
scas
xchg
add
test
mov
mov
js
jbe
stos
inc
and
scas
sbb
or
in
sub
jecxz
add
cmc
xor
movl
or
sbb
enter
add
icebp
lods
mov
cmpsl
mov
or
int3
out
aas
push
rcr
in
and
movl
jne
push
in
sub
repnz
leave
in
lods
ret
les
bsr
jne
into
mov
adc
dec
add
xor
cmc
les
jle
pop
fbld
stc
test
add
pop
in
add
add
repnz
or
adc
sub
data16
xchg
cwtl
aam
sub
sbb
xchg
movsl
add
out
dec
mov
in
push
or
outsb
cmp
mov
addr16
orb
inc
lods
movsl
stos
inc
xor
es
js
bound
js
add
or
les
pop
add
cwtl
in
icebp
inc
inc
test
dec
idivl
mov
insb
mov
rolb
sbb
add
pusha
add
jno
dec
pop
xor
ror
arpl
shlb
add
int
or
lret
addb
lock
add
add
jg
les
jno
data16
mov
jno
xchg
adc
dec
jecxz
add
xchg
movb
xchg
sub
add
cs
pushl
sbb
idiv
bound
fisubrl
push
adc
sub
push
insb
std
mov
xchg
pop
or
loopne
push
mov
add
add
fwait
nop
inc
and
inc
mov
loop
cmp
out
int
add
sahf
add
jo
and
push
outsb
sbb
and
jp
pop
out
add
inc
dec
and
inc
sub
inc
add
sti
pusha
cmp
add
add
jp
push
outsb
das
mov
add
js
add
pop
inc
lcall
dec
jb
stos
dec
mov
les
cmp
sub
in
mov
mov
pop
sldt
pushf
in
sub
ljmp
sti
add
mov
ljmp
jp
mov
lret
push
cmp
add
add
test
xor
nop
js,pt
fistl
mov
arpl
xor
add
out
lods
movsb
dec
fldcw
xchg
xchg
inc
daa
add
je
aam
int
adc
mov
cmp
add
adc
sub
inc
lods
cmc
add
pop
mov
or
inc
lret
push
mov
or
jmp
in
test
xor
fstps
leave
sbb
jmp
jne
mov
cmp
or
fnstcw
adc
jno
out
roll
repnz
sbb
fistl
cmp
scas
cmp
pop
pop
mov
lods
popa
xorb
jo
adc
or
lret
push
repz
xchg
mov
lock
add
daa
imul
jle
lock
add
mov
in
push
xchg
lret
inc
inc
leave
add
popa
inc
cli
or
negb
add
insb
fiadds
xor
xchg
add
leave
fwait
loopne
and
imul
push
cmpsb
cmp
add
iret
lahf
add
push
push
mov
ficomps
stos
or
jne
fisubrl
add
sbb
sub
xchg
add
stos
aas
inc
mov
jno
lret
inc
cwtl
adc
or
mov
testb
xchg
in
lret
and
sbb
sbb
movsb
jnp
addb
add
xchg
cmp
gs
dec
lret
lock
mov
gs
add
push
in
jg
stos
iret
test
dec
fs
add
vmread
fimull
sub
lds
add
add
fs
add
test
adc
add
adc
add
jp
sar
vpcmpeqd
pop
inc
bound
cmc
popl
inc
mov
js
mov
repnz
fidivs
or
cmp
scas
xchg
xor
jo,pt
int
add
and
mov
cmp
fistps
or
test
sbb
stos
sbb
push
pop
add
sbb
pop
in
cmpsl
outsb
sbb
popa
push
xor
add
outsb
repz
lahf
push
lea
push
call
add
add
cmp
daa
mov
mov
cmp
mov
push
insl
jnp
sbb
call
clc
pop
xor
loop
adc
add
ja
add
xor
cld
jge
add
jb
xor
adc
add
jecxz
sub
inc
xor
jbe
out
gs
jbe
loopne
xchg
cmp
xor
xchg
add
movsl
mov
int3
in
xor
lret
add
gs
jg
cmp
mov
stos
addr16
mov
nop
cmpsl
lret
repnz
and
add
fwait
cltd
xchg
xlat
jb
imul
gs
sub
inc
add
add
add
pop
test
adc
sub
add
xor
xchg
add
mov
sahf
dec
add
add
xchg
xor
rclb
addr16
inc
in
std
xchg
jb
add
dec
pop
adc
mov
shl
or
add
arpl
add
add
jno
adc
inc
out
sub
test
ds
test
add
xchg
mov
pop
mov
or
negb
popf
outsl
jbe
arpl
cltd
xlat
add
lds
das
cmp
add
add
arpl
rcrb
xor
push
pop
test
and
inc
in
cmpsl
mov
sbb
pusha
xor
or
rcrb
cmp
out
adc
or
rolb
add
add
pop
fidivs
cld
jne
stos
mov
and
add
dec
push
pop
dec
lock
mov
mov
rorb
xchg
cmp
add
cltd
xchg
add
ljmp
fildl
mov
or
into
les
mov
add
xor
or
out
decl
addb
adc
add
lods
adc
xor
fadd
inc
cltd
enter
mov
sbb
outsl
loop
fs
add
rorl
orb
mov
push
xchg
shl
cld
jmp
sbbb
mov
push
sub
cmp
out
imul
sub
push
lret
xor
adc
rclb
add
pop
clc
add
cmpsl
cwtl
xchg
sub
xchg
add
inc
call
add
into
push
inc
cmpsb
roll
arpl
add
adc
addr16
clc
outsb
jl
in
jb
jno
add
add
scas
dec
data16
cmpsl
and
xchg
popa
filds
je
out
xor
jl
add
jmp
clc
add
nop
inc
bound
jnp
lret
inc
push
xor
mov
imul
add
lds
daa
push
shlb
add
xchg
in
out
mov
cld
ret
lret
loop
jp
cmc
out
jne
jl
xor
jae
insl
mov
test
or
cwtl
int
jp
adc
sbb
in
ret
jo
jo
xor
int
xlat
mov
add
das
push
xchg
cmp
in
xor
inc
add
adc
setge
push
leave
testl
add
add
push
and
add
icebp
xor
div
cs
cmp
lahf
lods
inc
mov
adc
adc
mov
jno
mov
dec
cwtl
cld
int3
pop
imul
dec
xchg
xchg
mov
ja
fs
lods
or
arpl
add
sub
or
ds
add
jp
add
xchg
xor
xchg
xchg
inc
add
push
data16
ficoms
sub
icebp
sti
and
lods
sarl
jbe
mov
mov
adc
mov
mov
mov
or
test
dec
sub
stos
jo
ret
enter
je
subb
mov
movsl
jge
fbld
add
and
add
hlt
rolb
sub
push
sub
nop
xchg
jmp
cmp
or
add
sbb
pusha
inc
or
fcomps
test
in
add
cmp
jg
lcall
les
in
cwtl
mov
add
add
add
dec
dec
in
jecxz
stos
and
sahf
clc
mov
dec
pop
xlat
sub
push
pop
es
lods
int
outsl
add
and
xchg
daa
add
jb
enter
dec
mov
xlat
sti
fstpl
lods
push
mov
dec
nop
xorb
pop
add
out
sub
sar
inc
xor
push
mov
test
incl
bound
les
adc
xchg
pop
mov
add
popf
add
xor
add
fcmovnu
mov
add
jl
pop
cmp
cltd
fiadds
mov
mov
or
xchg
and
and
repnz
incl
add
xor
inc
mov
lds
fs
insb
add
mov
dec
mov
add
inc
test
dec
push
movsb
dec
inc
jecxz
or
and
cmp
ja
jle
mov
sub
js
ficoml
out
add
cltd
js
pop
pop
inc
add
jb
and
add
sbb
mov
pop
cmpsl
sub
leave
add
inc
add
inc
push
dec
lret
or
ja
adc
stc
inc
lods
sbb
into
cmpsl
xor
aad
lea
insb
inc
xchg
loope
out
push
aas
cs
cmp
push
push
in
pop
dec
dec
mov
add
lret
cmp
and
sbb
xor
add
and
adc
push
das
xchg
push
test
mov
cmp
jne
movsb
int
add
add
inc
add
sub
shlb
ftst
add
cmp
repz
sbb
xor
sub
imul
in
jo
inc
lods
sbb
add
jae
data16
sbb
add
mov
fiadds
push
insb
movl
aad
add
xchg
jp
sbb
xor
and
imul
insb
aad
push
add
lret
jns
cwtl
add
add
sub
dec
imulb
in
int3
inc
out
aas
in
pop
into
loopne
insl
dec
cli
mov
testb
adc
insb
and
lret
and
shll
xchg
sub
jbe
mov
jns
push
jmp
xchg
je
sub
sbb
mov
jecxz
or
addl
out
popa
add
addl
fldl
inc
outsb
mov
inc
inc
mov
cmp
mov
shrl
and
je
add
or
add
rcrb
sbbb
push
mov
insl
leave
out
aaa
push
in
xchg
adc
mov
aad
call
push
bound
mov
jno
push
les
add
aaa
roll
mov
ret
jmp
push
movsb
add
outsl
mov
fisttpll
inc
stos
nop
jmp
pop
mov
xchg
inc
add
sbb
insb
jno
sbb
pop
imul
into
arpl
leave
push
jmp
add
cli
mov
lods
pushl
pop
cmp
mov
mov
xor
push
inc
pop
dec
rorb
dec
test
inc
mov
add
mov
sahf
add
sarb
ds
pop
push
and
cmpsl
add
in
mov
xor
inc
cmp
aam
mov
adc
fxch
cmc
lea
shll
mov
xchg
xor
sarb
add
jl
mov
and
pop
pop
jb
ss
out
push
add
pop
mov
add
cmp
cltd
mov
cmc
inc
ds
add
sub
mov
push
mov
lahf
or
gs
arpl
add
dec
inc
mov
int
cmp
mov
rorl
cmp
xchg
mov
inc
add
or
aas
mov
push
fldl
mov
sub
data16
cmp
adc
in
vpacksswb
je
outsb
shlb
push
add
loopne
mov
negl
push
lahf
xor
das
test
add
std
nop
test
push
pop
add
xor
fimull
mov
out
add
sub
add
dec
pop
imul
lock
push
mov
les
add
xchg
hlt
xchg
jl
add
addr16
in
add
jnp
outsl
rcrl
xchg
push
add
add
mov
iret
lldt
pop
mov
push
adc
adc
pop
and
adc
lods
mov
add
mov
inc
aam
test
fisttps
shll
imul
mov
les
popa
xorb
adc
add
jns
idivl
and
ds
sub
pop
add
and
loopne
mov
scas
cwtl
fldenv
repz
pop
add
aad
jae
push
ret
fisubs
adc
add
and
and
cltd
inc
mov
adc
cwtl
lods
jb
lea
ret
or
add
or
add
add
ret
pushf
leave
dec
add
xchg
mov
jmp
jmp
loope
jmp
pop
add
dec
ja
and
nop
adc
pop
xor
or
add
mov
les
je
lldt
jo
jo
adc
mov
xchg
add
dec
cmpsl
add
mov
outsl
add
add
fstps
movsl
add
or
add
lods
aam
lock
cld
out
pop
into
xchg
xchg
and
iret
and
push
test
ffreep
dec
imul
repnz
punpckhbw
cltd
mov
push
adc
add
add
jle
xor
xchg
movsl
jb
add
and
std
mov
pop
pusha
mov
cmc
in
push
loopne
jbe,pt
ret
inc
mov
mov
push
std
enter
xor
pop
or
lds
xlat
lock
xchg
loopne
dec
mov
int3
mov
fildl
sub
adc
mov
add
out
jp
shrl
hlt
sub
into
dec
mov
es
cmp
incl
xorb
and
add
roll
dec
adcb
add
add
mov
outsb
inc
dec
add
iret
xchg
pop
add
sbb
popl
add
inc
adc
add
sbb
dec
hlt
test
bound
jno
insl
push
test
out
pop
cmp
in
pop
ljmp
pushf
mov
clc
imul
test
add
push
rorl
in
jns
or
mov
or
jb
add
cmpsl
mov
mov
dec
mov
mov
sub
mov
push
jge
and
movsb
mov
jle
lods
sub
inc
dec
rcll
icebp
and
lock
xchg
xor
lret
repnz
cmp
push
jle
xor
sbb
xorb
stc
in
dec
add
dec
into
or
pop
test
aaa
add
test
ficoml
fucom
fmull
add
rcl
push
adc
flds
dec
push
js
cwtl
add
sub
fdivrp
inc
pop
jmpw
into
adc
xor
or
std
loopne
jnp
bound
add
add
repnz
jmp
pop
shrb
add
xor
cmp
sub
fistpl
pop
sahf
cmp
xorb
adc
dec
fdivrl
loop
aad
add
outsl
into
jp
pusha
mov
rclb
nop
mov
fld
sbb
sub
ljmp
pop
pop
jp
aad
jb
push
xor
add
pop
arpl
mov
add
cltd
enter
fdivl
add
lret
aas
mov
inc
adc
movsb
ljmp
add
adc
adc
psllw
add
xchg
fwait
adc
sub
cmpl
mov
inc
mov
push
mov
data16
addb
pop
pop
es
mov
faddl
pushf
js
test
out
and
push
aam
mov
or
add
pop
es
bound
cmc
hlt
out
jmp
andl
jge
xchg
lea
mov
fidivl
dec
divb
add
push
in
cmp
imul
ficompl
add
or
das
ja
push
int
dec
scas
xchg
add
imul
push
roll
add
subl
in
mov
stc
and
fcoml
push
repnz
add
lcall
scas
jno
push
sti
add
push
add
pop
sub
divb
cmp
cmpsb
pop
xrelease
mov
sbb
lea
cmp
cmp
and
pop
push
dec
add
and
sbb
sarb
pop
mov
incb
mov
inc
cwtl
mov
pop
jge
jne
jle
arpl
into
aas
dec
or
int3
ror
sbb
es
xor
loope
pop
pop
pop
pop
fmul
ret
inc
insb
push
mov
mov
mov
pop
cli
add
dec
cmc
dec
mov
add
add
adc
repnz
js
fsubrs
scas
add
mov
push
lds
outsl
add
inc
inc
fwait
insl
and
push
repz
std
pop
mov
adc
push
or
mov
or
movl
repnz
cmp
aam
sbb
add
pop
nop
and
pop
mov
add
fiaddl
adc
popf
add
lods
or
add
mov
pop
push
dec
nop
popf
pop
scas
jne
pop
and
jmp
and
add
jbe
popa
pop
test
push
xor
mov
leave
loopne
pop
repnz
xorb
mov
sub
jns
add
push
nop
into
enter
dec
dec
ret
cltd
mov
adc
loope
push
clc
stc
pop
loopne
test
add
pop
and
add
sub
and
dec
add
lahf
stos
jg
imul
push
add
jno
add
popf
jecxz
dec
fmuls
and
xchg
scas
fiadds
jno
push
pop
out
xchg
add
xor
add
sbb
sbb
mov
fadds
popa
and
orl
mov
arpl
cwtl
ret
cld
or
mov
lret
mov
cmp
std
int3
scas
or
inc
mov
add
pop
jecxz
stos
mov
cmp
mov
stc
add
add
imul
add
mov
jbe
hlt
dec
mov
and
inc
cmc
ja
idivl
mov
in
inc
xlat
add
cltd
mov
ljmp
daa
add
mov
or
add
int
shll
cwtl
pop
dec
xchg
shlb
rorb
sub
mov
fwait
lods
push
dec
aas
inc
fildll
mov
dec
lds
add
mov
inc
add
cmpsl
add
cld
jo
arpl
in
inc
ret
jg
jge
push
test
aad
insb
lock
cmpb
add
dec
cltd
push
mov
test
jl
fldl
pop
lea
outsb
dec
test
cmpsl
mov
movl
sarb
lret
mov
mov
mov
rolb
add
das
or
in
jle
outsb
pop
add
add
and
sarb
fs
repnz
scas
add
aam
sar
mov
xlat
sbb
or
sbb
and
cmp
shrb
add
fcomp
mov
cmp
cmp
jno
in
jecxz
int3
fbld
mov
addr16
xor
add
cmp
fs
add
out
jl
mov
dec
or
dec
enter
cmpsb
fists
lock
pop
xchg
jnp
stos
add
add
stc
fcompl
lcall
mov
add
mov
sbb
inc
and
or
cmp
js
jmp
add
sti
out
push
cli
leave
aam
cmp
sahf
xor
mov
xchg
fisttpl
aaa
push
dec
add
sbb
call
mov
mov
pop
cmp
adc
ja
hlt
add
and
sbb
sub
subl
clc
inc
movsb
insl
inc
xchg
push
pop
ja
cli
or
sub
adc
out
fsubl
loope
fistl
std
out
mov
mov
mov
mov
jns
jge
sbb
arpl
push
mov
mov
mov
mov
dec
xor
cmp
and
jns
jns
push
mov
fidivrs
and
and
push
pop
fdivrs
aam
and
mov
pop
xchg
es
pusha
hlt
add
int
mov
add
jmp
popa
popa
cld
xor
cmc
push
mov
pop
jmp
push
mov
add
add
sbb
lock
test
insb
jbe
push
sbb
mov
leave
adc
xchg
fwait
daa
ss
outsl
les
dec
xor
add
bound
sub
pop
adc
inc
xchg
ret
jecxz
push
jmp
push
lods
dec
add
adc
xor
pop
scas
xor
add
in
out
add
fidivrs
mov
out
sbbl
stos
nop
mov
rcrb
int3
iret
icebp
mov
aam
sub
sub
push
add
imul
jb
pop
mov
repnz
xor
out
pop
fwait
lods
and
add
xchg
add
adc
and
mov
xchg
inc
jae
mov
sbb
sti
sub
xor
mov
subb
add
movsb
add
mov
pop
xorb
aam
inc
or
add
jbe
icebp
mov
ss
lcall
mov
pop
rcr
test
ss
xorl
movsb
push
inc
mov
jle
inc
mov
adc
pusha
add
fistl
data16
fistpl
mov
jp
inc
mov
scas
arpl
mov
xlat
adcb
dec
arpl
xlat
test
pop
lcall
aas
xlat
call
add
lret
in
sar
add
push
add
inc
sbb
xor
hlt
ret
and
icebp
mov
mov
mov
in
add
adc
add
add
cmp
adc
add
add
mov
pop
test
lcall
or
adc
push
roll
int3
shl
push
or
pop
cli
mov
dec
outsb
lods
call
jmp
push
jbe
in
jo
mov
popa
mov
in
inc
fcompl
push
push
push
aad
movsl
int3
cmpsb
mov
lcall
push
cmpsb
xor
cld
and
cmp
add
xor
mov
push
pop
xchg
inc
lea
pusha
hlt
adc
xchg
fdivl
xchg
dec
and
outsl
xchg
aaa
ret
sbb
adc
testl
add
jge
pop
pop
and
xor
dec
jl
das
mov
call
cld
or
clc
pushf
imul
or
popl
testb
mov
sbb
ds
mov
sub
sub
inc
xsaveopt
add
sbb
test
dec
jg
in
es
add
xchg
aas
add
shll
xor
test
mov
add
leave
mov
push
mov
lock
push
in
push
cmp
mov
add
ret
icebp
inc
fs
push
mov
lahf
cmp
inc
jno
xchg
mov
add
nop
inc
test
add
xor
add
mov
push
cmc
or
rorl
jne
lods
stc
enter
xchg
jns
iret
pop
pop
add
pop
lods
mov
add
add
add
push
repnz
xor
mov
sti
jbe
and
mov
add
test
dec
jnp
push
inc
mov
popf
pusha
add
add
mov
lret
nop
push
jge
fdiv
out
outsl
shr
addr16
fidivrl
jl
cli
push
in
pop
aad
ss
nop
dec
xchg
sbb
adc
dec
xchg
mov
and
and
add
dec
jbe
aad
daa
cmp
mov
lahf
jns
in
adc
and
add
stc
arpl
mov
add
mov
scas
ja
clc
inc
sbb
xor
fnstcw
xor
lds
ds
test
cwtl
push
dec
pop
and
test
pop
add
test
int
dec
jns
add
dec
je
dec
ja
xchg
popl
mov
sub
sub
xor
insb
mov
add
jo
lret
mov
add
pushf
mov
test
loope
imul
sbb
jne
cs
cmp
mov
jnp
scas
or
arpl
fwait
add
test
add
frstor
add
add
cli
nop
lods
lldt
mov
popf
fidivs
enter
add
mov
adc
aam
inc
adcb
jbe
inc
loope
mov
cli
ret
mov
add
cmpsb
ret
mov
ja
flds
pop
mov
add
cmpsl
sbb
xor
idivl
hlt
pop
rcrb
mov
or
cmpsb
fiaddl
xor
das
lea
pop
fdivs
mov
xchg
jno
outsl
pushf
jno
leave
or
mov
xchg
cltd
add
add
cmp
aas
cmpsl
scas
pop
push
jae
lea
dec
lds
pop
add
add
sahf
jmp
stos
outsw
and
lods
aad
pop
add
jp
jl
add
testb
mov
adc
iret
adc
mov
and
popf
cmp
mov
or
inc
pop
cmp
xchg
in
das
push
stos
or
and
jmp
push
jb,pn
pop
inc
call
bound
mov
ja
popa
add
cmp
ret
stc
stc
ja
jmp
mov
mov
addr16
cs
pop
clc
int
call
add
add
imull
mov
sbb
add
inc
push
jae
pop
add
jp
sub
lds
fsubp
or
out
cmp
mov
mov
pop
pusha
jl
ret
add
rclb
xchg
les
negb
dec
or
fcomps
lods
ss
add
sub
dec
cmp
add
push
inc
add
call
mov
test
ljmp
mov
scas
cwtl
xor
out
xchg
inc
add
stc
cmp
call
adc
push
mov
xchg
xchg
or
cwtl
inc
sub
bound
add
mov
imul
push
cltd
dec
lahf
jbe
mov
jle
cwtl
inc
add
add
push
jg
fxam
add
cmpsl
js
pop
sbb
mov
add
jmp
in
into
xor
cwtl
out
add
pop
stc
add
rorb
sub
pop
movsb
nop
pop
lods
dec
lock
mov
loope
add
add
jae
pop
pop
add
push
sbb
jb
xchg
push
cmpl
mov
aad
add
cmp
add
addl
adc
inc
in
jbe
or
cmp
add
sub
ljmp
loopne
fistl
subb
pop
or
fidivl
popa
test
addr16
ret
add
hlt
add
jmp
cmc
jae
pop
push
lret
dec
push
aam
xchg
add
dec
cld
or
jmp
inc
repz
inc
popf
adc
idiv
xchg
arpl
ret
cld
xor
mov
fdivrs
mov
scas
int
xor
adc
ss
mov
mov
js
jecxz
and
call
lea
push
into
add
xchg
pop
cmp
cmp
jp
add
dec
push
add
pop
cmp
into
mov
in
dec
sbbl
repnz
call
xchg
cmpsb
daa
pop
mov
sbb
or
aas
xchg
jae
mov
imul
jns
add
ficompl
adc
cmp
dec
xor
fcoms
push
xchg
and
xor
jl
add
inc
std
add
mov
pop
orl
aas
push
rol
cmp
xchg
js
lret
cmp
jns
mov
loopne
mov
mov
stos
outsb
and
dec
movsb
roll
cltd
je
cld
cltd
mov
pop
mov
jmp
xchg
bound
add
mov
add
ds
add
mov
dec
mov
and
ljmp
jp
xor
call
jns
rolb
stc
dec
xor
and
fs
loope
xor
outsl
je
mov
add
add
fwait
aad
ja
xor
add
ficomps
cmp
pop
xchg
loope
push
cltd
push
loopne
jp
push
jmp
pusha
push
dec
jmp
push
push
iret
mov
push
sbb
shrb
or
jle
jl
imul
mov
mov
add
addl
clc
or
cld
pop
pop
nop
mov
add
inc
das
subl
jbe
pusha
add
test
addr16
and
add
dec
xor
in
jecxz
sub
pop
clc
stos
or
ret
and
and
add
dec
jae
in
shll
add
imulb
add
or
inc
pop
pop
mov
popf
add
pushf
add
lret
push
rorb
push
mov
sahf
pop
cmpsb
repnz
push
std
mov
xor
dec
cmp
push
repnz
in
xor
cld
ljmp
add
inc
jb
test
add
dec
into
mov
mov
dec
xorl
decl
dec
ret
add
std
sbb
movsl
jne
gs
sbb
xchg
dec
hlt
test
inc
mov
mov
xorb
into
mov
into
iret
loopne
xchg
loope
testl
jbe
cs
lds
and
jle
fistps
lods
inc
pop
cmc
add
ret
gs
adc
jne
fnsave
xchg
popf
bound
sbb
inc
bound
adc
pushf
sbb
pop
or
sub
jmp
dec
add
or
stc
jo
popa
sbb
add
dec
add
str
and
inc
xchg
and
sbb
out
dec
add
add
daa
mov
push
cmpsl
pop
ss
mov
push
sub
js
mov
pop
mov
push
sub
insb
add
mov
enter
addb
nop
mov
fisubrl
shll
add
and
xor
push
pop
cmp
and
insl
mov
add
inc
xor
cmpsb
cmp
xor
ljmp
cmpsl
or
out
adc
jecxz
lods
fwait
or
lds
imul
sub
loopne
mov
sub
outsl
cmp
loop
data16
add
mov
sbb
mov
adc
push
mov
inc
mov
sub
add
test
das
mov
sub
push
push
and
pop
dec
lahf
add
cmpsl
test
jne
out
test
add
and
add
test
cmp
mov
or
push
cmpsb
sub
bound
popa
push
cwtl
add
mov
add
and
shll
inc
das
add
add
and
lcall
cmpsl
adc
xor
add
das
inc
jo
test
jnp
test
fimull
cmc
pop
mov
sub
mov
dec
popf
into
add
or
repz
xchg
fnstsw
mov
inc
pop
out
cli
adc
jmp
inc
add
xchg
les
dec
cmpsb
or
in
xchg
mov
inc
push
inc
pop
inc
or
addr16
mov
xlat
insl
popf
popa
jmp
pop
and
bound
stos
in
in
lret
inc
push
push
sti
add
mov
aam
enter
xchg
stc
cmpsl
out
sub
or
add
ljmp
in
inc
add
add
jne
insb
sub
cmp
add
iret
dec
lahf
scas
arpl
les
popf
adc
jecxz
hlt
cmpsl
pop
and
add
xor
push
lcall
xor
sbb
pop
stos
xor
mov
push
push
mov
mov
pop
clc
fcompl
xchg
cmp
pop
sbb
repnz
movsl
mov
inc
push
inc
add
sub
cmp
add
pop
add
dec
sahf
leave
xlat
stc
nop
or
addl
add
dec
hlt
lea
add
mov
push
hlt
fnstsw
shlb
or
stos
int3
mov
inc
and
loopne
mov
dec
dec
jmp
add
push
sbb
jnp
cmp
orb
call
add
data16
outsb
lods
push
mov
pop
fistpl
jae
push
xlat
or
mov
or
xlat
add
outsl
mov
faddl
lahf
jecxz
out
cmp
popf
cmp
xlat
xor
cltd
daa
das
insl
dec
and
sub
sarl
xlat
cmp
aam
inc
loopne
enter
push
hlt
pop
add
add
add
pop
add
loop
push
loopne
insl
ret
push
or
add
push
in
push
xor
mov
outsl
out
das
xchg
xlat
adc
fadd
out
vhaddpd
xchg
test
ds
push
jg
lret
gs
rclb
movsl
adc
jae
add
les
inc
sbb
mov
stc
mov
jg
cwtl
sub
movsb
cmp
push
mov
xchg
fiadds
add
add
rolb
fbld
je
ss
lret
add
cwtl
add
inc
mov
mov
pushf
test
mov
xchg
add
or
add
xchg
add
into
add
sti
adc
ljmp
scas
add
mov
xchg
insl
pop
jg
out
jnp
shll
movsb
jae
icebp
mov
inc
ds
jno
scas
shlb
xor
cmpsb
sbb
jns
data16
mov
mov
popa
out
out
adc
mov
mov
lods
add
add
sbb
mov
push
aad
add
adc
lret
call
imul
or
movsb
mov
jae
adc
cld
es
std
mov
add
popa
mov
cmp
jns
out
mov
les
mov
fstpt
cmp
mov
cmpsb
in
mov
test
int
mov
hlt
pop
into
or
test
scas
addr16
inc
shl
loopne
mov
add
sbb
add
push
fnstenv
add
xchg
dec
sub
notb
add
in
jo
xor
add
push
jl
out
popf
stos
push
mov
add
push
xchg
and
out
or
jecxz
mov
xor
mov
inc
rcrl
sbb
sbb
add
xor
rorl
add
push
loopew
inc
shll
stos
rol
add
pcmpeqd
mov
aad
add
jl
mov
and
add
dec
add
inc
sub
idivb
cmp
fs
mov
subb
in
and
pop
push
pushf
inc
lahf
fcoms
jmp
addr16
push
add
in
sbb
repz
int3
int3
add
cmp
cmc
pop
mov
and
add
add
gs
mov
add
adc
addr16
mov
aas
iret
pop
add
insb
stc
shll
cmp
push
jp
sub
jno
push
xor
add
dec
flds
sarl
add
adc
inc
mov
imul
jo
popl
and
aaa
or
call
cmpsl
adc
sub
mov
hlt
scas
jbe
adc
jge
test
xchg
mov
sub
dec
loopne
pop
out
or
mov
insb
mov
sahf
cmpsb
jno
lods
cmp
mov
faddp
add
xchg
add
mov
add
loopne
dec
mov
lea
mov
in
pushf
pop
adc
stc
xor
div
jl
jne
inc
mov
sbb
lods
push
and
add
mov
add
jno
ficompl
push
add
fincstp
stos
lods
fistl
adc
aad
xchg
int3
cmpl
fs
add
lods
loop
pusha
add
add
cmp
js
les
daa
rolb
es
pop
bound
and
inc
dec
xchg
add
or
das
in
lahf
std
pcmpgtd
xorb
ffree
add
ss
add
inc
cmpsb
jl
add
out
scas
add
inc
mov
add
jl
fs
dec
insl
add
outsl
sub
add
cwtl
dec
sbb
and
add
xchg
dec
jmp
mov
jno
sbb
cmc
mov
add
jmp
mov
add
jmp
cltd
add
clc
pmaddwd
pop
into
enter
add
scas
xchg
add
or
add
sbb
and
mov
popf
es
cmc
push
mov
xchg
add
enter
and
out
mov
add
inc
std
add
cld
adc
sbb
cmp
idivb
sub
pcmpgtb
out
xchg
add
stc
ret
adc
push
std
flds
push
xchg
js
cmc
les
push
mov
aaa
add
aad
movsl
sahf
xchg
aaa
rcll
pop
mov
mov
inc
fmull
pop
xchg
mov
jno
pop
pop
fistpl
mov
add
xchg
std
xchg
adc
mov
add
enter
pop
mov
or
mov
xor
in
repz
mov
popf
rcr
and
mov
inc
imul
jae
or
inc
data16
mov
andb
xor
or
sti
push
jnp
xchg
mov
mov
data16
popa
cli
call
mov
out
sbb
add
inc
mov
mov
mov
push
int
push
insb
or
iret
push
pop
lret
fidivrs
shlb
sbb
sub
imul
jge
jge
cmpsb
dec
aaa
jecxz
lcall
sbb
pop
ret
bound
dec
sbb
dec
imul
add
xor
mov
sub
mov
xchg
push
pop
shr
and
jo
push
into
jl
sub
and
add
adc
es
mov
or
movsl
inc
mov
inc
test
add
or
add
mov
rcr
add
imul
and
sub
in
movsb
jl
add
adc
jae
jmp
add
cmpsb
ljmp
pop
add
inc
cmp
lcall
out
roll
cmpsb
push
lods
add
dec
cmp
mov
push
jno
or
das
lods
outsl
daa
add
mov
aaa
pop
cmp
add
leave
sbb
add
push
test
dec
scas
xchg
test
subl
add
jns
jo
push
in
sub
repnz
dec
mov
adc
cmpsb
xlat
rcll
dec
add
dec
fadds
rcrb
or
inc
push
inc
sti
mov
fistps
jecxz
dec
sub
jo
lea
jne
add
rcll
lock
test
emms
jb
insb
dec
lldt
aad
xchg
mov
cs
mov
movsb
test
mov
psubb
in
xchg
jl
jg
cld
jbe
stos
jbe
add
cld
mov
loop
enter
dec
add
push
dec
inc
and
and
scas
push
stos
add
xor
test
fsubs
xor
push
pop
repnz
addb
pop
inc
outsl
add
mov
add
push
dec
add
jbe
xchg
push
jb
fstpl
into
or
pop
test
or
mov
lods
fmulp
ret
outsb
add
test
pop
or
push
loop
mov
repnz
mov
out
imul
lahf
add
insb
add
test
xorb
sbb
mov
mov
mov
imul
adc
addr16
pop
cmpsl
outsb
xor
arpl
inc
pop
add
jmp
mov
test
fdivrl
es
and
aas
out
lahf
sbb
sbb
add
mov
movb
jne
out
dec
std
fs
mov
mov
test
test
pop
add
add
mov
ficompl
popf
in
out
fistps
xchg
add
sti
pop
add
mov
mov
push
xchg
dec
fadds
mov
gs
insl
mov
rorb
ret
push
imul
inc
xchg
cmc
es
ljmp
xchg
ja
scas
sti
fildl
mov
mov
psubsb
fnstcw
dec
leave
sahf
call
push
add
mov
fs
mov
fwait
adc
ds
ret
mov
sbb
cmpsb
mov
sbb
je
pushl
mov
add
dec
add
insb
out
jno
add
cs
ja
mov
jle,pn
shrl
stos
push
push
add
xor
pushf
push
les
add
mov
xlat
pop
jmp
ds
lea
aaa
dec
inc
fiadds
test
cmp
pusha
or
pop
and
mov
dec
mov
push
and
mov
rcll
add
adc
fs
and
push
aaa
fldcw
add
jo
dec
mov
dec
in
add
insb
mov
push
mov
gs
jge
ret
or
ja
repz
add
bound
add
jl
je
sbbl
mov
xchg
cmpsb
mov
xchg
bound
inc
sbb
add
add
mov
mov
iret
push
adc
dec
out
rolb
scas
xchg
mov
ss
mov
inc
add
sbb
lret
aaa
xchg
test
push
add
icebp
mov
jae
xchg
pop
mov
mov
cmp
and
loop
ret
xchg
sub
add
add
mov
mov
or
cwtl
cld
add
jne
std
cwtl
movsl
out
pop
push
cmpsl
sbb
xchg
test
stos
ss
xchg
in
adc
add
or
adc
jp
add
mov
adcb
and
adc
into
or
add
mov
sbb
in
sbb
pop
sbb
int
jg
cmp
lods
cli
rclb
sub
scas
popa
bound
jae
sbb
dec
jbe
xor
xor
xor
mov
adc
jp
mov
cmp
and
jp
sub
xchg
outsb
cld
lret
mov
sahf
popf
dec
inc
iret
cmpsl
lods
jmp
inc
pushf
push
and
push
push
sbb
ja
add
fistl
pop
mov
xchg
xchg
pop
test
push
jecxz
xchg
lea
adc
test
leave
mov
je
mov
repz
cmp
and
lock
push
out
mov
adc
push
hlt
jbe
sti
inc
sti
jl
addr16
or
rcr
add
adc
icebp
cs
mov
add
imul
fidivl
je
out
hlt
outsb
dec
adc
jne
mov
mov
dec
gs
mov
jge
rolb
mov
lods
add
push
stos
adc
add
imul
mov
cmp
mov
out
sbbl
adc
pusha
add
dec
xchg
sub
bound
add
add
test
pshufw
adc
push
cli
adc
popf
xor
jl
fs
add
jno
adc
hlt
inc
in
add
add
fs
adc
add
mov
or
icebp
mov
and
add
mov
js
mov
aaa
iret
adc
test
sub
mov
jg
into
add
add
pop
imul
hlt
push
add
scas
add
add
aam
add
xor
lods
xchg
test
jae
mov
add
lahf
and
add
cmp
in
popl
test
mov
xchg
jl
add
dec
mov
xchg
xchg
push
add
popl
dec
rcrl
and
fwait
psllw
pop
pushf
popl
adc
jbe
add
subl
orl
stos
test
in
xlat
nop
add
test
add
add
add
lret
ljmp
mov
mov
jl
sti
lret
jne
pop
xor
add
int3
inc
test
imul
inc
mov
xchg
mov
add
lcall
ja
add
scas
ja
out
movsl
push
mov
hlt
je
inc
add
inc
sbb
mov
mov
gs
stc
test
sbb
loop
add
add
inc
sbb
and
dec
inc
add
lods
pusha
mov
or
mov
jmp
ds
scas
mov
sbb
and
notl
lock
add
mov
xchg
ds
insb
jle
and
lret
and
je
add
mov
fwait
repnz
hlt
mov
lods
add
xchg
adc
xor
lock
cmp
push
adc
je
add
push
into
lahf
out
add
das
inc
outsl
add
jno
jmp
dec
sbb
stos
dec
aad
and
movsb
and
pop
cli
outsl
ds
ret
or
sbb
xchg
jno
fwait
sub
add
adc
mov
into
inc
cmpsb
popf
test
lock
cmpsb
scas
fwait
mov
xchg
aad
and
xchg
test
xor
mov
sbb
push
bndstx
jl
js
add
jb
mov
add
mov
add
mov
jp
mov
aaa
ret
xchg
adc
int3
push
adc
jno
mov
hlt
movb
sub
stos
jl
adc
xchg
inc
adc
jmp
dec
or
ljmp
xor
jb
mov
orl
mov
and
notl
aam
cs
flds
scas
mov
jae
sbb
sub
shlb
flds
ljmp
cmp
pop
jb
and
je
xor
jle
loop
pop
inc
clc
enter
cmpsl
mov
add
stc
and
add
add
add
lcall
add
push
push
mov
pop
dec
jg
add
inc
repz
sbb
pop
inc
outsl
stc
add
ret
out
mov
imul
adc
dec
fsubrl
mov
mov
cmp
mov
test
aas
xchg
daa
push
mov
adc
dec
aaa
mov
inc
loopne
pushf
sub
mov
inc
jmp
push
movsl
mov
ljmp
inc
shrl
jo
push
shr
insl
add
xorb
hlt
add
mov
movl
lcall
ret
add
or
push
out
inc
pushf
add
sub
xchg
loopne
push
pop
sbb
enter
inc
hlt
jne
add
add
xchg
shll
and
or
and
cmc
add
aad
inc
sbbb
pop
shlb
shl
pop
mov
out
push
pushf
push
push
pushf
ss
in
fsubr
pusha
pop
cmpsl
stos
in
add
xor
xchg
subb
sbb
jecxz
mov
add
jmp
faddl
mov
pop
pop
test
add
push
add
stos
fcos
cltd
mov
loop,pn
mov
push
or
cmp
jmp
loop
fnstenv
xchg
or
add
push
mov
ret
jnp
scas
sbb
fwait
ljmp
pop
add
and
push
add
add
mov
std
hlt
sub
bound
movsb
add
mov
pop
and
inc
cltd
jp
repz
xchg
inc
inc
inc
add
sbb
les
test
fwait
add
mov
jb
add
sbb
cmp
jmp
cmp
dec
add
jp
add
icebp
fmull
add
adc
test
dec
sbb
dec
xor
cwtl
push
or
mov
imul
hlt
add
shll
add
inc
fidivl
add
not
add
or
dec
loop
cmp
xor
mov
in
cmp
mov
or
imul
inc
push
aas
lret
gs
loopne
pop
adc
inc
jo
repz
sahf
add
pusha
sbb
or
bound
imul
js
mov
add
jmp
mov
sahf
inc
aam
lock
mov
jp
jo
adc
aas
add
add
add
add
fdiv
sub
mov
sahf
insb
and
dec
mov
es
nop
inc
je
jb
or
cmp
add
adc
pop
xor
xchg
or
xchg
xchg
fadd
lea
jl
rcrb
fidivrl
sub
add
jmp
insb
add
mov
mov
insl
add
mov
je
mov
or
add
jbe
cld
mov
xchg
add
sub
add
push
sbb
dec
push
add
dec
sti
jno
add
clc
adc
xor
jnp
add
int
push
jb
add
sbb
pop
fidivrs
add
jecxz
std
addb
lret
inc
jle
push
roll
add
jmp
lea
subb
add
push
xchg
cmp
jnp
dec
xchg
adc
jnp
push
sub
pop
cmpsb
shll
xchg
mov
add
aaa
add
add
add
xchg
popf
xchg
mov
lds
add
or
mov
or
push
dec
add
cmp
jmp
sub
pop
xchg
dec
movsb
jae
add
daa
adc
inc
test
jae
ret
mov
mov
lock
out
cmp
cmp
add
pop
inc
mov
clc
iret
mov
cmp
add
lds
lahf
add
push
add
stos
push
icebp
sahf
negb
push
out
dec
xchg
nop
hlt
dec
add
jno
lretw
in
cmc
sbb
pushf
push
xlat
xor
and
flds
push
add
push
add
adc
test
add
stc
daa
sub
cmp
xchg
xchg
jb
scas
push
aaa
repnz
add
add
jmp
jno
data16
pop
mov
aaa
add
or
sbbl
cmpsb
mov
add
cld
mov
add
in
clc
push
or
add
sub
outsb
cmp
int
or
arpl
enter
call
cmpsl
inc
xchg
test
ficoms
lahf
or
adc
push
pop
mov
pcmpeqd
add
pop
push
pusha
cmpsl
movsl
push
ss
mov
daa
pop
jle
adc
rcll
inc
add
push
add
xor
push
xor
les
pushf
push
xchg
clc
jl
shlb
sbb
push
xor
xlat
pop
cmpsb
adc
inc
add
into
int
lahf
xchg
mov
push
pop
add
adc
xor
aas
add
add
jl
pop
in
lods
xor
loop
insb
mov
xor
add
push
test
in
jp
add
and
sub
inc
insl
xchg
jp
loop
inc
push
lcall
cmp
popa
aaa
leave
fisttps
ljmp
popa
int
and
cmp
add
mov
fnstenv
ljmp
jl
adc
sub
sbb
sbbb
nop
inc
repz
test
ds
call
lcall
pop
mov
lret
jae
mov
xchg
xchg
add
lock
mov
in
les
aas
jmp
daa
jecxz
ficompl
int3
sahf
push
test
insl
pop
add
fdiv
mov
inc
pusha
sti
add
shll
adc
repz
add
sbb
aaa
add
add
cld
inc
xchg
mov
or
adc
pushf
hlt
rcrl
ljmp
add
mov
fsubp
aaa
les
das
inc
aam
mov
lock
sbb
add
mov
movsb
pop
inc
xchg
mov
mov
das
and
mov
mov
jl
cmc
fmuls
call
add
fbstp
repz
sub
fs
in
mov
bound
or
loop
clc
jnp
dec
or
icebp
test
ror
mov
and
adcb
xchg
dec
pop
call
add
dec
pop
xchg
ss
sbb
rorb
pop
add
lea
out
rolb
les
push
lea
push
add
stc
mov
and
jmp
lea
addr16
push
addb
adc
xor
dec
add
add
aas
cmp
stos
dec
js
inc
leave
add
int
pusha
dec
add
mov
or
xlat
jg
add
stos
cmpsl
add
xchg
std
pop
shll
lahf
lret
sarb
fnstenv
test
push
imul
stc
adc
mov
sub
in
pop
add
xlat
and
mov
xchg
inc
loop
add
add
pop
or
xchg
cmp
das
outsl
inc
lds
mov
xchg
jp
cmp
dec
pop
xchg
fs
and
sub
mov
and
xchg
testb
jl
add
pop
scas
mov
fcoms
data16
loope
or
dec
xchg
xlat
push
add
mov
mov
sub
gs
add
ljmp
out
xor
jg
dec
mov
xchg
xchg
inc
xor
and
add
mov
fwait
pop
ret
ss
ja
sbb
subl
loope
es
xchg
cmpsl
or
sub
ds
sbb
push
or
gs
aaa
inc
ljmp
cmpsl
add
pop
push
into
test
pop
push
inc
push
mov
les
bnd
mov
test
daa
in
xlat
sbb
or
jmp
nop
repz
addl
jno
pop
lea
fldl
test
add
add
mov
mov
aad
data16
sub
and
sbb
cwtl
or
in
scas
pusha
popf
rcll
inc
push
daa
add
arpl
into
rcll
mov
xor
out
out
mov
sub
push
test
sub
out
repz
pop
inc
popf
cld
xchg
call
or
fidivs
je
sbb
cltd
fcompl
add
push
add
inc
inc
and
mov
movsl
lds
pop
add
inc
sbb
icebp
stos
es
pop
add
mov
sbb
and
scas
add
push
mov
jecxz
lret
call
push
cmp
xchg
cmpsb
add
bound
cmp
sti
mov
inc
js
jnp
or
adc
movb
dec
or
test
mov
add
or
in
dec
and
stos
xor
movsl
and
pop
add
mov
xor
jno
add
nop
add
aaa
rolb
fcomi
or
sub
pop
dec
push
add
xor
mov
mov
insl
add
inc
fnstcw
fwait
xchg
xchg
sbb
je
push
jl
jg
fbld
fidivl
xor
nop
ret
mov
test
add
add
ret
sbb
inc
add
flds
testl
lock
jb
push
nop
and
cld
pop
dec
mov
and
enter
sbb
add
fisttpl
adc
fimuls
sub
fwait
sbb
xlat
les
adc
ret
lret
jb
add
rcrb
repz
xchg
dec
cld
sti
adc
xor
fisttpl
das
fadd
lret
leave
jmp
mov
add
mov
inc
stos
fstpt
jo
pop
dec
and
stos
fiadds
mov
mov
jbe
fldt
and
mov
add
std
mov
ret
stos
add
out
mov
aas
cwtl
frstor
sbb
sti
dec
mov
outsb
sahf
or
pushf
leave
sbb
sbb
clc
scas
add
xchg
aas
jno
lea
xchg
out
inc
add
inc
jno
cli
xchg
push
dec
push
dec
lahf
sub
pop
cs
lds
xor
lcall
mov
add
movsb
add
test
loope
adc
dec
inc
or
dec
movb
mov
add
jmp
aas
int3
sub
and
add
jmp
cmp
les
cmc
mov
xor
incl
pop
mov
add
jne
push
add
insb
popf
push
int3
xchg
jmp
jecxz
mov
fldt
push
nop
add
dec
js
mov
setp
mov
jp
scas
repz
std
popf
push
add
add
adc
cltd
xchg
stos
std
and
loope
inc
and
jl
xchg
add
mov
add
popf
shlb
pop
les
cld
jmp
jno
push
lcall
jp
mov
pop
pop
stos
add
add
adc
outsb
jbe
pcmpgtb
pop
lret
adc
push
jmp
stc
push
dec
mov
movsl
cmpsb
cli
cmp
or
inc
sbb
mov
je
mov
add
imul
cmc
add
mov
scas
cmpsl
sbb
fbstp
add
and
bound
add
inc
repnz
add
lcall
outsl
add
add
sbb
lahf
add
or
stos
add
sti
push
cmpsb
sub
sub
das
les
addr16
sbb
add
div
in
das
es
or
cltd
leave
inc
add
pop
cli
stc
pop
xchg
in
mov
ljmp
test
addb
xchg
lods
aas
and
jmp
adc
add
gs
xchg
cli
sub
adc
mov
sub
cmp
aas
nop
xchg
call
cld
enter
sbb
orl
cmc
push
sbb
mov
inc
test
test
adc
mov
imul
xor
sahf
xlat
mov
jmp
les
testb
mov
add
mov
inc
add
stos
jb
aas
add
jge
xchg
rorl
add
inc
mov
sbb
xor
xchg
cmp
stc
stos
roll
insb
lret
jb
pop
add
xor
sbb
stos
jns
pushf
pushf
add
add
jo
sahf
fsub
jp
fiaddl
movl
scas
sub
add
jge
mov
ret
sbb
xor
add
add
adc
sub
mov
insb
lods
mov
push
frstor
cltd
idivl
fildll
inc
and
mov
sarb
pop
adc
lret
scas
mov
add
cmp
divb
cli
roll
pop
sub
mov
lods
sbb
push
loop
and
call
xchg
inc
add
add
faddl
lods
stos
push
lcall
push
add
leave
pop
pop
add
and
daa
mov
dec
rorb
jne
add
or
mov
or
gs
dec
mov
insb
std
jo
sbb
adc
out
movl
mov
dec
mov
loop
dec
jae
xchg
mov
shrl
shr
cmp
fsubrs
mov
mov
sti
lock
mov
add
test
mov
scas
xchg
or
add
sub
shrl
add
sub
xor
xchg
pusha
adc
add
adc
adc
mov
stos
jo
dec
ror
mov
arpl
add
mov
lea
mov
int3
pushf
add
xor
and
enter
jmp
sbb
hlt
mov
cmp
push
pop
pop
roll
xchg
cmp
add
int
imul
fiaddl
mov
add
add
bound
mov
arpl
add
aas
and
aas
add
xchg
cmp
fisttpll
and
add
lahf
mov
adc
adc
xorl
add
pop
lret
in
add
and
add
pop
mov
add
outsb
push
sti
sbbb
cmp
out
or
sbb
add
xor
mov
pop
in
aam
hlt
mov
mov
inc
stc
xchg
mov
rorb
adc
pop
fs
fdivs
xor
arpl
xor
pop
lret
jo
add
ds
jns
ret
adc
mov
dec
fs
out
outsl
mov
ret
or
jae
sbb
inc
inc
data16
cwtl
add
dec
imul
push
push
scas
outsl
pop
mov
inc
jbe
and
call
push
fiadds
sar
add
mov
cmp
jbe
inc
mov
pop
into
pop
test
popf
rolb
pop
shll
out
fisubrs
ret
or
aas
xor
cmp
stc
pop
insl
dec
es
mov
stc
cmpsb
les
jmp
mov
xlat
aam
arpl
cmp
push
xchg
push
add
mov
and
imul
push
inc
pop
dec
int
push
dec
mov
sti
out
mov
dec
xor
mov
and
and
add
jl
sbb
xor
notb
mov
xchg
add
add
push
subb
xchg
sbb
add
mov
jl
das
jo
or
sub
or
mov
flds
inc
test
fstpt
scas
mov
inc
stc
lods
and
cmp
jbe
adc
dec
add
mov
sub
ljmp
movsb
pop
jl
daa
nop
fcoms
icebp
shufps
mov
ja
push
sahf
pop
nop
add
add
sbb
inc
sbb
push
jbe
push
pop
lock
or
fiadds
cld
aaa
xchg
push
xchg
add
in
pushf
pusha
and
pop
xor
pop
lea
mov
cli
shrl
sub
out
testl
add
xchg
add
loopne
icebp
xchg
das
stc
xor
and
dec
xor
cmp
mov
repnz
pop
bswap
iret
rcll
or
pop
bnd
std
jmp
pop
ret
add
pop
cmpsb
in
sti
add
mov
aad
mov
add
mov
jae
mov
or
add
pop
repz
jmp
inc
ror
in
cld
popf
push
dec
and
add
shl
fldenv
pop
loope
xchg
mov
rorb
push
sub
lds
arpl
mov
xor
jbe
xor
jo
pop
push
out
xchg
add
or
sbb
push
or
xchg
sub
add
or
cld
push
orb
bswap
cmp
jmp
push
mov
push
add
dec
jb
ljmp
call
cwtl
add
xchg
jmp
int
jbe
adc
adc
aam
aas
pushf
mov
add
push
clc
add
xchg
push
fwait
lret
xchg
test
fcompl
fistpll
fwait
das
ss
mov
in
out
add
cmp
subb
mov
mov
jmp
sbb
mov
mov
mov
adc
cmp
mov
pop
loopne
xor
dec
add
mov
add
popa
xor
aas
imul
add
sahf
and
and
mov
xchg
dec
mov
idiv
add
addl
shll
jnp
sar
add
test
mov
pusha
ret
in
cmpsl
mov
add
cld
sarl
xor
add
add
lds
jae
cmp
lcall
jp
out
mov
push
dec
andb
sbb
add
mov
sub
sbb
iret
or
test
xchg
leave
aaa
jecxz
adc
aaa
vxorps
push
mov
mov
add
repnz
add
cli
add
add
add
cmp
add
test
add
add
stos
jno
mov
xchg
xlat
push
add
js
inc
inc
xchg
jo
mov
out
sar
sbb
jae
sbb
insl
pusha
push
add
pop
sub
jne
insb
sbb
out
jns
paddusb
imul
call
sub
aaa
hlt
fwait
xor
sbb
ret
cmp
arpl
scas
jle
cld
test
push
xorl
dec
sbb
add
add
setle
jp
xchg
add
adc
add
pusha
cmp
push
jle
aaa
jb
adc
je
test
add
mov
in
inc
pop
sub
inc
rolb
je
pop
femms
lahf
add
add
ss
lods
ja
jno
mov
cmp
sbb
gs
add
add
je
add
add
mov
add
aad
repz
pop
jp
test
jo
mov
or
mov
xchg
mov
inc
in
in
pop
add
hlt
mov
xchg
dec
inc
xor
inc
test
cmpsb
mov
iret
inc
add
dec
fs
repz
add
ret
cwtl
xchg
and
mov
test
ss
cli
andl
add
orb
pop
inc
xchg
add
jg
arpl
add
dec
cmpps
push
das
jnp
loop
fadds
push
lods
imul
repnz
pop
mov
push
popa
push
xor
in
push
stos
imul
in
jnp
loopne
mov
roll
mov
out
or
jmp
clc
or
mov
xchg
or
add
dec
or
mov
testb
mov
bound
fdivrl
icebp
das
adc
pushf
mov
adc
xchg
and
xchg
and
sub
enter
data16
mov
xchg
int
enter
mov
lret
xor
or
je
incl
inc
sub
add
popf
sub
add
add
mov
pushf
mov
xor
jae
inc
inc
lret
adc
mov
push
das
add
add
dec
nop
and
cmpsl
fs
jle
cmp
imul
push
add
sbb
dec
xor
lds
adc
add
inc
push
loope
dec
into
jecxz
enter
xorb
pop
pop
pop
testl
inc
add
cltd
add
test
pop
mov
fistl
int
arpl
adc
das
out
lea
add
aam
mov
bndldx
and
out
push
add
mov
xor
add
rolb
lcall
sbbb
add
xor
sub
mov
aam
adc
rclb
add
add
scas
jnp
stos
fisubrs
jge
call
xchg
add
mov
pop
add
nop
mov
pop
mov
out
push
add
jnp
xor
mov
popa
imul
cmp
rcrl
rcll
jne
add
sub
ror
outsb
xchg
add
cmp
push
popa
popa
jb
jns
mov
push
mov
fistl
jns
clc
es
push
leave
add
jp
enter
lret
pop
divl
loopne
nop
enter
notl
mov
xor
push
popa
dec
inc
cmp
stc
data16
jp
inc
fisubrs
xchg
add
jg
aaa
jecxz
stos
xchg
dec
aas
xor
mov
push
test
jo
push
or
mov
push
sarl
mov
bound
mov
push
xchg
scas
jo
sub
add
dec
add
mov
out
bound
stc
add
fst
pop
add
mov
ret
inc
and
add
sahf
mov
mov
sti
pop
pop
add
aad
push
leave
cmpsl
add
add
mov
lahf
out
ret
aad
ficomps
stc
sbb
add
mov
cmpsb
jne
sub
add
dec
mov
icebp
add
mov
jge
xchg
add
pinsrw
xor
push
jae
and
shll
leave
mov
jnp
cmpl
adcl
push
sbb
addr16
aam
stos
cld
js
sahf
xor
test
mov
out
out
jno
sbb
mov
lds
lea
xchg
out
add
popa
pop
cltd
insl
and
shll
jns
scas
add
and
imul
stc
mov
sti
mov
pop
icebp
add
imul
mov
mov
inc
in
xlat
jmp
mov
incb
ja
rcrl
in
adc
add
sbb
pop
pop
mul
sub
cmp
jbe
push
stos
lods
cmp
es
dec
pop
push
and
daa
cmp
ficoml
enter
in
cmp
add
fnstenv
inc
cmp
imul
add
test
add
int
push
pop
mov
add
or
punpcklbw
pop
add
fidivs
push
add
call
pop
push
jb
les
inc
movsl
daa
pop
push
add
pop
push
scas
out
sub
add
jmp
loop
out
push
fdivrl
stc
pusha
cmp
inc
and
add
mov
cld
xor
push
push
or
cmc
push
add
dec
std
incb
mov
inc
add
out
bound
add
jns
dec
lret
sub
add
add
fisttpl
mov
mov
xlat
jge
mov
je
cmp
inc
movsl
imul
sub
push
imul
mov
popa
push
add
pop
ja
add
cmp
or
add
add
jbe
lds
les
mov
mov
mov
jns
bound
imul
mov
xor
fsubrs
add
add
bound
push
adc
lret
ja
add
xchg
adc
xorb
mov
mov
inc
aaa
add
or
callw
push
or
pop
push
pop
lock
and
add
add
inc
mov
xor
mov
stos
or
scas
int
je
or
mov
mov
inc
addl
std
loopne
and
rcll
xchg
push
push
jbe
xchg
lret
shr
fld
pushf
dec
gs
call
mov
cmpsb
xchg
out
xchg
mov
outsl
hlt
data16
pop
pusha
insl
add
mov
and
cmp
add
adc
cmp
stc
js
mov
xchg
cmp
pop
xor
imul
add
xchg
dec
cmpsl
xor
cltd
add
cmp
incl
dec
add
add
test
pop
jne
add
mov
push
and
or
mov
dec
inc
cmp
bound
loope
dec
repnz
das
add
subb
add
lea
stos
add
mov
add
imul
adc
mov
adc
cmp
dec
dec
faddp
add
sarb
stc
in
mov
cli
add
adc
add
add
push
add
gs
in
iret
mov
fisubrs
push
xor
mov
xor
mov
xchg
mov
shr
push
adc
sub
add
int3
ficoml
add
add
sahf
sti
popf
rorb
add
add
lret
shlb
aaa
pop
clc
jl
lods
inc
std
shll
add
dec
inc
inc
nop
add
mov
mov
subl
push
jle
push
pop
in
push
ss
inc
mov
inc
dec
adc
movl
cmp
add
pusha
xlat
lds
push
icebp
mov
push
iret
add
add
sbb
cmp
mov
mov
dec
dec
enter
xor
int
mov
incl
push
add
or
pop
bound
push
add
add
add
ds
add
cmp
in
inc
cmp
pushf
mov
mov
inc
push
ljmp
pop
push
xor
movb
add
lea
lds
cs
pop
and
inc
inc
sub
cmp
push
test
mov
mov
cmc
pop
iret
call
aaa
repz
push
add
ret
dec
and
shl
in
daa
mov
dec
sbb
cli
pop
push
sub
enter
cmpsb
jbe
shlb
sub
hlt
iret
hlt
sbb
sub
outsb
cmp
lea
add
adc
jmp
xorl
cmpsl
add
mov
sbb
filds
nop
into
pop
aaa
addl
aam
insb
mov
xchg
push
cli
and
pop
add
jl
lea
cmc
shrb
add
jbe
push
xorl
fadds
sub
sbb
shlb
jb
rolb
and
outsl
sbb
mov
lahf
test
ljmp
fiaddl
add
add
cmpsb
hlt
in
cltd
mov
jl
lcall
int
and
mov
lock
pop
cmp
clc
pushf
add
fcoml
loope
xor
dec
ret
arpl
dec
inc
mov
mov
into
pop
aas
fildll
pop
mov
and
mov
xor
xchg
cmpsb
fsubrp
or
adc
pushf
test
push
and
je
xor
add
xchg
std
pop
ds
cmpsb
pushf
cld
sar
enter
xor
add
outsb
out
sbb
add
faddp
in
add
inc
imul
pop
add
sbb
sbb
ror
stos
xchg
mov
jle
rolb
test
popa
icebp
push
sub
mov
insl
pop
adc
addb
add
add
inc
out
or
mov
ja
add
xchg
push
ffreep
sti
inc
mov
push
int3
and
std
xchg
sub
filds
ljmp
ljmp
sahf
sub
xchg
add
shrb
push
or
sub
in
cmpsl
lret
dec
stos
or
inc
xchg
add
xchg
loopne
fwait
xor
sti
add
lret
adc
push
sbb
adc
fcmovne
push
jbe
add
mov
arpl
fnstsw
mov
add
add
daa
sahf
fwait
and
mov
inc
ja
push
pop
mov
sub
repz
dec
test
cmp
in
mov
mov
add
adc
sti
adc
pushl
fstps
dec
dec
lea
repnz
add
scas
dec
inc
mov
sub
icebp
jmp
int3
jne
mov
add
cmc
cmpsl
decl
dec
test
add
lcall
xor
push
jb
and
cld
rorl
or
in
add
ljmp
stos
pop
roll
aaa
sahf
add
cmp
inc
cmc
push
mov
out
sbb
jge
xchg
push
mov
aam
jle
xlat
inc
mov
jnp
std
call
add
xor
jo
push
jne
lods
in
ret
and
sbb
test
add
gs
add
jge
cltd
and
sbb
nop
incb
call
rcll
mov
add
add
insb
pusha
je
sarl
leave
cltd
or
cli
sahf
add
stos
xchg
aaa
push
cltd
mov
cs
add
fdivrl
lret
enter
fisttpll
xchg
add
cs
add
add
lahf
mov
dec
daa
jg
mov
add
jg
xchg
add
notb
fs
sti
xchg
rclb
aas
test
push
daa
arpl
in
bound
in
xlat
mov
ret
les
in
xchg
in
movsb
cmp
add
pop
push
add
add
js
and
ret
cli
mov
jnp
jmp
sti
xchg
orl
dec
pop
add
add
test
mov
lcall
aaa
hlt
sarl
push
fdivrl
add
pusha
mov
add
mov
sbb
push
cmc
xor
and
or
loopne
popa
addl
xor
add
js
push
jns
xor
dec
clc
pop
das
add
push
arpl
mov
bound
imul
mov
or
or
cmpsl
mov
outsb
jp
add
stos
add
xchg
addb
cmp
orl
mov
and
call
scas
mov
aam
or
xor
sbb
pop
add
pop
fistpl
fisubs
ja
cltd
cmp
lods
and
add
mov
mov
add
shr
mov
mul
pop
sti
pop
jbe
pop
dec
cld
jb
inc
add
xor
add
sarb
xor
es
pop
stos
mov
mov
or
xor
sbb
inc
xor
cmc
add
mov
cmpsl
mov
add
adc
jo
movsl
cmp
lahf
add
dec
inc
xlat
call
sbb
adc
imul
dec
mov
jge
in
dec
add
in
inc
cmp
sub
insl
dec
rcr
lods
add
add
or
or
lds
les
rorb
add
movsb
mov
inc
repz
mov
outsl
cmc
out
push
add
push
sti
xchg
mov
das
xchg
push
incb
mov
mov
add
jp
add
aad
jmp
xchg
in
pop
adc
sahf
sub
cmp
jns
cmc
sbb
add
jb
cmp
repnz
xchg
test
pop
jae
add
sarl
push
pop
jo
push
ljmp
mov
repz
fldt
add
cmp
mov
adc
jmp
inc
jge
inc
add
push
clc
add
push
and
insb
pop
jl
aaa
sub
lock
sub
nop
add
stos
pop
lret
xor
add
add
ret
add
add
fadd
rolb
push
stos
sbb
adc
xlat
jae
add
scas
loopne
cwtl
sti
jb
mov
bound
push
popa
push
rolb
in
iret
add
jl
mov
inc
sahf
movsb
jmp
outsl
add
jnp
add
gs
mov
or
mov
scas
mov
test
pop
add
xor
add
fdivrl
dec
ss
cmpsl
adcb
sbb
call
push
roll
mov
rcll
pop
dec
fcom
adc
mov
inc
aam
nop
stc
add
pop
bswap
adc
push
push
add
jecxz
add
xchg
sub
mov
repnz
inc
dec
push
xor
xor
in
cwtl
xlat
cmp
xorb
call
add
sub
movsl
add
xchg
lods
xor
flds
fisubl
or
jbe
xchg
cmp
sub
add
xlat
sahf
lds
or
mov
popa
add
add
add
arpl
xchg
adc
roll
add
jmp
and
mov
test
sbb
rclb
xchg
add
dec
adc
repnz
jae
dec
jmp
xlat
sbb
adc
shr
push
xor
lahf
push
dec
mov
inc
mov
dec
pop
das
dec
leave
add
ds
fdivl
mov
fisttpl
add
cmp
mov
add
andl
fnstsw
push
cmp
hlt
jg
push
push
repnz
aaa
mov
add
add
scas
dec
add
xlat
jp
push
mov
sub
sarb
outsl
stos
add
xchg
add
inc
add
push
add
mov
imul
jb
pop
outsl
movsb
adc
dec
jge
into
or
jno
cli
add
push
push
xchg
stos
mov
out
mov
ret
rcr
in
movsb
jmp
js
pop
mov
jne
dec
fistpll
flds
cld
jg
ret
xchg
lcall
out
out
push
sub
sub
mov
ljmp
outsl
fldcw
push
jo
push
pop
cmp
mov
sbbb
push
mov
daa
addr16
inc
pop
mov
pop
fisttpl
jne
add
add
and
rorb
pop
add
dec
addr16
add
add
int
push
das
lock
icebp
out
out
mov
jmp
repz
jge
push
push
fldt
lldt
add
outsb
rolb
push
push
inc
dec
mov
pusha
ret
fistl
add
ss
xchg
fstpl
add
out
mov
add
cmp
cmp
jns
add
pop
xor
jg
outsl
ds
mov
out
testl
add
movsb
sbb
xor
pop
fbld
add
sarl
js
xlat
loope
in
cltd
add
push
or
add
lds
rcl
sbb
or
bound
jecxz
pop
stos
call
xchg
jle
push
push
fdivrl
xchg
add
rolb
mov
add
pop
xor
add
lahf
scas
pop
cltd
aam
jge
add
test
inc
inc
add
jecxz
pop
daa
sbbl
scas
xchg
push
mov
xlat
mov
xor
outsb
dec
popf
xchg
jne
mov
mov
xor
mov
mov
negl
in
loopne
inc
inc
add
test
orb
mov
clc
pop
je
adc
call
or
sbb
push
cmp
and
or
leave
xchg
bound
xor
jnp
mov
jbe
push
sbb
add
sbb
repz
mov
popf
inc
scas
ljmp
out
add
add
add
sbbl
enter
or
mov
cmp
scas
lods
add
arpl
faddl
mov
pop
movsb
xchg
push
clc
jle
xchg
and
pop
popa
frstor
push
xor
cmp
add
fadds
and
jne
add
pop
fidivs
cmp
imul
add
push
lahf
jb
fdivrs
and
mov
pop
popf
out
inc
xchg
ss
cld
enter
cmp
subb
test
mov
insb
rcr
int3
pop
cmp
arpl
xchg
scas
pop
int3
lret
add
mov
fsubr
jl
ljmp
sbb
inc
sbb
addl
das
pop
mov
add
mov
rcrl
add
cli
add
in
popf
mov
fwait
cmp
dec
xor
rolb
pop
loopne
lock
lret
or
fwait
outsb
mov
mov
push
das
pop
pop
cli
sbb
add
incb
xor
add
int
mov
leave
cmpsl
sbb
filds
repz
pop
pop
xchg
dec
repz
sub
push
ljmp
sbb
jle
sti
push
mov
xchg
data16
push
jns
scas
xor
sbb
add
jno
fs
mov
roll
sub
xchg
jmp
or
add
add
push
push
andb
sub
or
lds
or
cli
insl
push
lcall
sbb
notl
jne
add
in
xchg
mov
add
es
jmp
jmp
cli
mov
mov
add
std
jle
push
inc
jb
add
mov
fucomi
adc
lcall
push
dec
add
fnsave
or
mov
enter
sbb
out
loop
mov
pop
add
test
lcall
or
mov
or
sub
jg
pop
add
add
add
dec
adc
add
pop
fs
add
cmp
cmc
or
rolb
cmpsl
and
jns
sub
xor
addr16
and
cmp
test
jbe
loopne
xchg
jmp
cmp
jae
stos
lods
aad
dec
push
dec
add
lds
push
dec
jecxz
add
sbb
int
out
jns
add
add
adc
push
mov
pop
dec
xchg
or
jns
mov
cmpsl
or
push
decb
loopne
shr
xchg
and
push
xlat
mov
loope
pop
jns
add
cmpsl
imul
jge
cmpb
push
add
jns
mov
cmp
add
xchg
add
add
add
inc
divl
sbb
cmc
or
cvttps2pi
mov
mov
xor
sub
lock
mov
mov
les
fs
out
mov
cmp
leave
mov
int3
outsl
jmp
dec
scas
cltd
int3
jbe
add
lods
add
dec
push
les
or
xchg
mov
cmp
subl
add
xor
idiv
insb
add
cmp
adc
mov
rolb
sarl
mov
in
add
fsub
dec
bound
shl
cmpsl
sbb
ljmp
out
jne
test
push
mov
add
test
popa
dec
sub
inc
jle
es
adc
and
insl
lock
or
jo
add
push
fcmovnbe
xor
add
into
jno
and
repz
pushf
daa
push
dec
cmpsb
dec
ja
push
repz
mov
cmpsb
out
pop
and
add
or
sub
jo
xchg
gs
add
push
add
fiadds
pusha
add
inc
das
call
mov
cltd
lds
addb
lret
mov
inc
mov
lock
addr16
cmp
in
dec
ja
inc
add
mov
int
dec
mov
xchg
add
mov
adc
add
jecxz
addl
lret
mov
les
into
xor
sbb
filds
pop
xchg
int3
mov
and
cmp
ret
pop
sbb
lea
nop
push
shrb
push
daa
int
mov
lods
test
inc
jb
mov
dec
and
addr16
cs
movb
dec
xchg
pop
inc
cwtl
sti
jp
sahf
setb
mov
push
pop
add
add
fcoms
jae
mov
mov
xchg
jmp
ss
lret
adc
mov
es
pop
sti
fwait
sub
loop
pop
cmovo
mov
movsl
mov
lcall
into
aaa
sub
stos
inc
insb
mov
cld
push
mov
arpl
cmp
push
stos
lods
imul
popf
cmp
inc
into
dec
iret
add
ds
add
sub
or
inc
aad
cmpsl
bnd
dec
int
pop
add
dec
add
mov
aam
dec
les
pusha
add
loop
mov
dec
and
jle
mov
sub
pusha
dec
lahf
push
pop
js
test
add
push
roll
jl
and
stos
pusha
lcall
cmc
negl
mov
test
xchg
dec
add
add
popa
pop
sti
push
pop
test
add
aas
rol
add
cmpsb
pop
mov
adc
lret
inc
scas
inc
add
pop
xlat
mov
iret
aam
pushf
outsb
out
xchg
aad
xor
lock
fbstp
jnp
cld
lds
je
jns
pop
xor
jnp
clc
push
add
hlt
push
jno
out
mov
sub
daa
add
lods
jae
xor
sbb
les
xchg
in
cld
arpl
mov
into
lcall
xor
data16
jno
dec
dec
adc
add
arpl
lret
push
or
jo
xor
jmp
addl
mov
cmp
aad
rolb
fidivs
jo
test
mov
and
add
mov
outsb
push
pop
data16
jg
xor
cltd
pop
test
sbb
ljmp
mov
jg
sbb
insl
xor
pop
ja
cld
mov
add
cltd
push
cs
mov
xor
adc
add
into
add
nop
cmp
sub
jmp
jmp
stos
fs
add
or
popf
sub
mov
xlat
mov
add
movb
pop
ljmp
cmc
and
lock
push
mov
or
dec
fidivs
push
jb
cvtdq2ps
aam
and
add
pop
inc
stc
jle
dec
push
cltd
test
sbb
imul
das
cmp
outsb
dec
mov
std
lret
pop
popa
nop
mov
hlt
mov
add
adc
test
rorb
sub
jg
xor
dec
lret
xor
inc
mov
neg
daa
push
pop
out
mov
icebp
pop
mov
xchg
and
sub
cmp
jecxz
pop
inc
mov
add
or
jo
jne
pop
outsb
out
add
lock
mov
out
out
inc
decl
mov
fsubl
jecxz
sub
mov
orb
lods
add
mov
mov
mov
scas
pop
sti
push
add
daa
sub
rorl
or
and
pop
sub
xchg
mov
in
je
and
subb
jmp
pop
mov
les
mov
int
add
ret
or
fninit
dec
rolb
jl
popf
jg
bound
mov
sub
in
add
addr16
push
lea
add
test
adc
pop
cmp
sbb
add
and
enter
arpl
jg
data16
repnz
fsts
pop
xor
add
add
jmp
bound
inc
mov
cmp
insl
pop
ljmp
mov
mov
jne
cmp
aas
mov
mov
add
fs
mov
xchg
cld
jg
inc
int3
inc
mov
mov
add
les
icebp
add
ljmp
sar
mov
in
bound
test
mov
pusha
sbb
mov
xchg
aam
std
dec
iret
add
add
dec
pop
lock
fimuls
xor
ja
add
xchg
add
cmpsl
iret
cwtl
and
lahf
test
jb
fldenv
jo
add
lahf
mov
sbb
cmpb
pop
aas
mov
or
sub
push
push
pop
add
push
addr16
sub
push
lods
add
cmp
cmc
sub
jmp
xchg
in
mov
add
pop
add
pop
xor
add
cmp
ljmp
sti
jne
mov
add
adc
jl
test
add
mov
sub
ret
lds
popa
inc
add
fmull
int3
add
repz
gs
negl
mov
repz
pop
mov
nop
push
add
or
push
mov
xor
sbb
and
fst
xchg
mov
adc
cmp
jno
mov
xchg
adc
orl
add
cli
push
push
jecxz
or
mov
andb
push
cmpsb
jbe
lahf
xchg
add
ds
and
add
xor
movsl
add
or
mov
add
das
cmc
mov
in
add
test
mov
inc
sub
and
xchg
sbb
pusha
cmp
jo
aam
and
or
cmp
jne
int
fisubl
cmp
or
adc
add
xchg
jo
mov
hlt
cmpsb
dec
mov
sbb
cli
xchg
mov
nop
loop
mov
dec
inc
stc
inc
adc
add
jnp
test
inc
dec
lret
daa
stos
adc
addr16
or
lods
mov
add
repz
je
cmp
mov
or
push
xor
aam
xchg
fwait
lret
shlb
xor
fdivrp
and
cmpsl
roll
cs
lahf
xchg
jno
cmpl
mov
adc
pop
fdivr
mov
leave
xor
adc
xchg
mov
inc
inc
fdivs
sbb
or
dec
fildll
rcrl
sti
and
cmp
popf
pop
mov
jle
rcrb
add
push
pusha
mov
mov
cltd
in
idiv
jno
pop
inc
sbb
imul
aas
mov
sti
cltd
add
int3
mov
arpl
cmp
push
mov
push
sbb
stos
fwait
pop
jl
jno
ljmp
mov
fwait
or
sub
jle
push
add
pop
outsb
fsub
pop
adc
sbb
repz
in
add
gs
mov
pop
mov
fwait
iret
dec
in
inc
inc
add
daa
rcrb
scas
add
jecxz
aam
scas
dec
xchg
cmc
jnp
stc
mov
add
jg
adc
cmp
out
mov
bound
xchg
stos
cltd
jae
or
mov
and
add
push
mov
pop
xchg
out
add
push
pop
add
jb
push
pop
aam
add
fs
mov
xchg
repnz
sbb
jnp
je
dec
ljmp
sbb
add
add
rorl
add
adc
lods
add
mov
insb
jp
add
pop
out
add
mov
popf
mov
ret
out
shr
add
mov
outsl
les
cwtl
jecxz
test
or
addl
test
add
stos
push
sub
add
std
add
lds
mov
aam
daa
add
hlt
jp
mov
dec
inc
push
imul
cmp
out
scas
mov
dec
add
test
sub
xor
add
fists
js
std
push
lods
add
jp
fidivl
or
ss
sahf
add
add
jb
push
test
leave
add
roll
adc
mov
xchg
mov
notl
dec
outsl
bound
cmp
xchg
jge
addr16
fistpl
cwtl
xchg
ret
pushf
insl
movsb
add
movsb
iret
lea
mov
fdivs
ret
sbb
rcr
push
imul
lock
add
insb
das
add
int3
jmp
je
rolb
insl
jae
rcl
div
add
jp
add
adc
add
sbb
mov
imul
mov
add
sbb
dec
push
xchg
cs
repz
mov
xor
add
adc
rclb
jl
inc
inc
add
xlat
loopne
sti
out
fadds
filds
ds
sub
outsb
es
push
fmuls
cmc
or
xchg
and
add
iret
mov
add
jo
test
and
jge
add
push
pusha
into
rcll
cwtl
lret
cmp
mov
std
aas
lcall
ljmp
movsb
dec
fnstsw
mov
or
jno
sub
mov
inc
mov
ljmp
popa
xchg
daa
jne
dec
add
popf
mov
pop
popf
add
lahf
push
loop
xor
clc
adc
mov
addl
push
add
in
fldt
or
xchg
mov
mov
shll
xchg
ret
int
sub
xor
inc
xor
pushf
inc
lea
aam
add
add
rolb
cmpsl
inc
in
test
inc
test
sbb
add
sbb
ljmpw
xor
mov
mov
inc
nop
mov
add
and
add
sarb
popa
test
out
mov
das
movsl
mov
adc
push
leave
test
notb
out
jbe
fwait
dec
jmp
addl
sub
add
fs
rorb
push
lds
jmp
aad
addl
xchg
mov
sbb
fiadds
ret
dec
fldl
xchg
lcall
add
mov
out
loope
dec
loopw
out
shrl
push
xlat
pop
add
jb
lcall
add
inc
add
in
or
push
add
cs
or
jae
add
movsl
sub
lds
add
dec
add
inc
pop
in
and
pop
and
jecxz
popf
add
filds
in
cwtl
lock
add
pop
add
add
fsubs
xor
test
xchg
cld
adc
dec
xchg
mov
aad
xor
leave
ljmp
stos
xchg
dec
xchg
xchg
xchg
mov
xchg
cmp
push
add
xchg
xor
cmp
add
lahf
inc
mov
xchg
add
push
cltd
inc
mov
jb
pop
flds
iret
adc
adc
jmp
int
repnz
add
mov
dec
mov
xor
fstp
cmp
adc
mov
cmpb
xor
imull
push
add
mov
mov
xor
xor
out
addr16
sub
daa
fisubrl
pop
cmp
popw
dec
dec
add
add
xchg
xor
dec
pop
pop
iret
sbb
sbb
sub
out
mov
cmpl
out
dec
fmul
or
je
add
push
lds
cmp
into
inc
pop
aad
lds
cltd
jnp
cmpsb
loope
add
sbb
jne
xor
add
lcall
incb
sub
imull
inc
out
sub
add
xor
pop
jle
and
xchg
mov
add
pop
movsb
dec
push
lea
pop
mov
or
std
shrb
gs
and
iret
xor
pop
push
add
jecxz
bound
xchg
out
add
xor
sub
xor
cli
add
daa
cmp
add
cld
dec
sti
std
std
add
mov
je
mov
pop
cli
dec
add
jp
loope
pop
xchg
inc
push
fwait
jle
and
arpl
cmp
jne
inc
add
mov
shr
xorb
add
add
xchg
fcoml
jge
and
sub
push
outsl
addr16
add
fdivs
mov
pinsrw
add
mov
mull
jmp
fs
int
mov
add
imul
sbb
cmp
mov
push
mov
mov
and
push
jle
enter
aaa
loope
ds
dec
jg
enter
out
push
add
incb
es
and
dec
das
and
mov
movsl
add
les
out
add
scas
xor
xor
outsb
repz
or
jno
in
jo
pop
push
dec
add
pushf
add
inc
mov
xor
add
adc
repnz
cmp
mov
mov
jbe
cmp
pop
xchg
in
sub
xor
add
in
fiadds
jl
mov
addr16
mov
bound
inc
mov
imul
jmp
cmc
add
add
pop
dec
ret
ficompl
or
inc
pop
testb
add
mov
mov
lahf
mov
lds
inc
jae
xchg
add
stc
xchg
jp
sbb
add
mov
in
add
jne
ret
sti
pop
add
std
add
or
mov
out
sbb
cmpsl
sbb
xchg
les
fldcw
ja
xor
cmp
cmp
inc
les
aam
mov
int
loope
int3
rcl
push
out
fsubs
faddl
bound
add
pop
add
push
and
sub
ljmp
cmpsl
les
xchg
inc
stos
js
push
adc
fnstcw
jg
call
mov
jnp
add
jl
xlat
jmp
add
xorl
dec
addl
jo
adc
mov
add
leave
push
mov
stos
dec
aad
add
dec
add
inc
add
or
push
add
shrl
inc
faddl
pop
add
sub
mov
add
bound
or
push
movsb
adc
jns
insl
pop
hlt
adc
inc
pop
and
inc
das
dec
pop
jp
popa
lahf
add
repnz
ljmp
push
pop
jbe
in
and
mov
xor
fcmovne
and
inc
add
mov
mov
jno
sub
in
jnp
or
inc
out
imul
add
add
in
xor
hlt
faddl
je
mov
add
jmp
and
jns
sahf
xchg
pop
push
mov
movsl
test
mov
push
fwait
mov
add
push
mov
pop
or
imul
fnstsw
add
into
rolb
or
jp
repnz
xor
lea
aas
je
mov
xchg
dec
pop
loop
add
cmp
jb
add
insb
lea
jne
cmp
jne
push
add
incl
mov
imul
pusha
in
out
sub
out
add
add
fs
push
lcall
nop
pop
lods
ret
lock
outsl
imul
shrb
nop
pop
add
rolb
push
pop
jo
cltd
mov
add
dec
or
add
stos
pop
sbb
jns
inc
rorb
dec
out
inc
cmc
cwtl
add
pop
adc
mov
dec
mov
adc
xor
jl
xchg
add
adc
fnsave
mov
test
adc
xor
sub
pop
add
gs
imul
repz
fwait
lods
add
int3
cltd
jp
add
push
imul
pop
xor
repnz
jle
inc
push
xor
clc
int
pop
lahf
lods
xchg
inc
xor
pop
cld
dec
mov
lahf
call
add
insl
dec
mov
lret
mov
outsb
cld
add
xchg
add
mov
fwait
stc
icebp
cmc
push
inc
dec
scas
imul
mov
je
add
stc
fildl
aad
xor
add
cmpsl
rcll
ljmp
decl
sbb
dec
fstpt
pop
add
repz
mov
insb
cmpl
scas
addr16
loop
cmp
orl
jno
adc
add
in
jle
repz
fsubs
mov
mov
jp
add
pop
mov
sahf
pushf
imul
rorb
cmp
xor
push
popa
pop
movsb
das
fists
adc
rolb
iret
add
add
xor
cmp
add
sub
mov
jl
jo
sub
and
xchg
movsl
push
push
push
mov
aam
xchg
leave
mov
jno
inc
lahf
sbb
adc
inc
add
add
add
add
out
iret
idiv
push
sahf
add
jne
mov
lahf
and
call
add
pop
xor
leave
push
icebp
popf
mov
sti
mov
jp
add
add
add
add
push
cmp
ficompl
cmp
xor
add
sbb
and
xchg
test
lcall
xchg
xchg
and
add
inc
dec
fnstenv
xchg
jg
xchg
mov
mov
lock
dec
add
push
xchg
inc
xor
sub
jbe
js
iret
add
jb
pop
mov
xchg
por
loope
mov
cs
insl
jecxz
int
repz
mov
or
call
sbb
add
xor
mov
pop
xchg
xor
push
imul
ret
aam
xchg
iret
or
ljmp
and
shrl
pop
ror
scas
jg
dec
iret
scas
ret
cmpsb
push
add
inc
xchg
daa
cmp
mov
orb
das
std
xlat
mov
add
jl
loop
add
and
lds
cmpsb
dec
inc
fildl
add
push
inc
loop
mov
iret
add
lods
and
or
add
or
scas
add
add
inc
mov
add
add
data16
pop
xchg
sbb
popa
sahf
std
cmpsl
addr16
mov
enter
push
cs
out
fucomip
pop
pop
jl
loop
add
fldl
mov
fisubrs
add
movsl
pop
stos
lods
inc
mov
and
adc
lods
cmp
ret
add
adc
mov
out
leave
mov
into
or
fnsave
or
fs
jns
sbb
add
xlat
iret
and
sub
enter
add
add
push
sbb
xor
movsl
lock
fistpl
mov
pop
jae
push
push
add
cmc
push
and
add
sbb
outsl
mov
xchg
xor
add
and
mov
stos
iret
insb
dec
inc
hlt
add
das
push
mul
movb
xorl
pop
add
pop
add
xor
or
ret
cmp
clc
mov
mov
jae
sub
repz
mov
out
sbb
add
xor
mov
dec
insl
sti
add
mov
iret
pop
out
jmp
push
dec
repz
lock
adc
ljmp
mov
cmp
mov
ljmp
add
add
cli
xor
inc
cmp
and
sahf
push
sub
out
dec
cmp
jecxz
test
out
add
xchg
sbb
inc
ret
test
lds
gs
jle
or
adc
xor
mov
sti
push
js
cmp
add
lcall
jno
mov
insb
sbb
adc
inc
and
mov
sbb
push
lods
sahf
fwait
pavgw
cmp
xchg
add
cmp
push
and
roll
lret
enter
adc
mov
daa
pop
scas
cltd
sbb
cmp
mov
dec
add
lods
bound
cmp
shrb
mov
sarb
add
or
add
and
cmp
addb
in
mov
mov
cmpl
mov
and
enter
sbb
ret
sbb
movsl
jb
cmp
push
mov
xor
pop
jae
or
xor
es
pop
push
dec
jae
add
int
es
add
sbb
xlat
add
add
mov
cld
xor
fwait
imul
adc
jmp
lret
and
repz
mov
xor
filds
dec
sub
jnp
insl
pushf
or
add
jbe
add
add
pop
push
xchg
ja
sbb
add
xchg
fdivrs
mov
icebp
repnz
pushf
xor
mov
mov
push
sbb
aad
mov
fbstp
add
cmpsl
inc
push
mov
mov
lea
les
add
mov
pop
std
ror
push
add
mov
mov
pop
mov
xchg
loope
mov
push
add
pop
fimuls
sbb
lcall
add
popf
cmpsl
ljmp
push
fldcw
xchg
cmc
push
xchg
fstl
xchg
into
das
std
add
sarl
sarb
or
shrb
vpunpckldq
add
add
xor
or
dec
dec
add
outsl
add
mov
jg
push
push
cmpsl
cmp
movsl
add
popa
add
add
add
mov
stos
scas
add
in
das
inc
pop
gs
sub
fsubrl
sub
dec
in
add
pop
data16
sbb
add
mov
sbb
add
orb
cmpb
add
cld
xchg
push
jnp
xor
out
jns
inc
fistl
ss
into
stos
add
mov
mov
xchg
test
std
xchg
add
pop
test
pop
add
pop
bound
or
cld
test
dec
add
sbb
aas
ret
ljmp
sub
xchg
popf
add
push
stos
push
push
in
and
mov
jbe
rorl
mov
stos
add
fidivs
push
cmc
das
movsb
and
fisubs
dec
cli
js
out
cltd
add
roll
pop
cwtl
mov
xchg
call
adc
adc
inc
inc
lret
aad
repz
add
add
add
add
in
les
xchg
xor
and
jmp
mov
or
push
pop
cmp
insl
mov
shlb
and
scas
dec
cli
ror
pop
fcmovb
paddusw
xchg
and
mov
lods
fdivr
sahf
and
imul
movsl
inc
ret
loopne
pop
sbb
in
divb
mov
mov
and
and
cltd
sub
fisttpl
aas
icebp
add
out
aas
out
mov
jbe
dec
sbb
sub
lods
or
cmpsb
push
or
shr
iret
pusha
cmp
movsb
scas
dec
inc
shl
lea
adc
mulb
adc
repnz
aas
add
icebp
push
add
cmp
aam
push
pop
out
roll
call
cmpsl
add
pop
outsb
mov
add
gs
icebp
mov
sbb
sti
add
rorb
pop
in
repz
pop
xor
add
add
mov
mov
sub
lea
stos
imul
out
adc
or
bound
cmp
int
or
icebp
mov
fiadds
and
inc
mov
push
out
mov
jmp
add
jbe
aaa
cmp
or
and
sub
pop
mov
pop
inc
adcb
les
mov
adc
push
mov
jl
mov
scas
sub
cmpsb
pop
loop
iret
adc
mov
stos
cmpsb
lret
mov
xchg
xor
jecxz
in
xor
push
inc
add
add
ficomps
add
add
test
push
add
pusha
lret
incl
ss
jp
add
xchg
es
cmp
add
ret
push
das
or
adc
xor
jnp
ret
jle
popa
stos
loop
std
stc
sub
aaa
mov
push
xor
add
push
pop
pop
mov
imul
popa
insb
jo
subb
inc
add
inc
cmpsb
adc
repnz
and
addr16
push
add
pop
stos
stos
loope
add
add
jmp
jno
out
xchg
mov
outsb
xchg
nop
sahf
push
int
in
movsb
insb
xor
imul
add
add
push
mov
fsubr
add
add
fdivr
fmull
or
mov
mov
pushf
in
test
stos
mov
or
in
imulb
pop
repz
int
xchg
outsl
xlat
add
daa
popa
loopne
sbb
add
add
inc
sub
fisttpl
sub
mov
or
les
push
mov
pop
stc
xchg
in
add
pop
cmp
int
add
mov
dec
push
movsb
xchg
dec
test
xor
je
arpl
cmp
xchg
add
add
jo
aas
sub
and
outsb
add
mov
mov
and
sahf
div
test
stos
enter
pop
js
sarb
cmp
rolb
cmp
stc
add
jbe
add
xchg
mov
add
out
and
mov
xchg
sbb
add
or
repz
ljmp
add
add
pop
pop
add
or
sub
outsb
and
mov
mov
add
adc
pop
outsl
xlat
mov
rcrb
hlt
pop
clc
mov
nop
and
mov
cmp
jle
mov
sub
push
fisttpl
push
push
cmp
mov
add
push
mov
inc
les
out
movsb
in
cwtl
xchg
xchg
mov
dec
into
xchg
jbe
sbb
add
daa
mov
jae
cmp
jae
aam
mov
xor
test
jecxz
pusha
std
adc
cmp
sbb
test
xchg
sbb
mov
pop
add
xor
xchg
mov
dec
daa
add
xchg
stos
jno,pn
add
icebp
mov
jnp
sub
and
popl
cmp
add
pop
xchg
cli
fdivl
cmc
imul
mov
mov
or
add
stos
add
sub
test
or
mov
pop
push
sbb
mov
pop
add
inc
dec
push
pop
daa
dec
add
jecxz
or
sti
pop
push
dec
dec
xor
in
gs
pop
add
mov
sub
sbb
xor
shrl
shrb
call
mov
dec
jle
pop
jle
nop
mov
add
sub
scas
adc
sub
jmp
outsl
stos
mov
inc
ficomps
add
xlat
add
pop
xchg
add
sbb
or
in
das
mov
aam
inc
add
stc
add
sub
add
lret
into
rclb
int3
sbb
and
jne
pop
int3
lret
mov
xchg
add
and
divb
add
inc
jmp
xchg
ljmp
shl
imul
jae
fs
push
mov
cmp
xchg
add
das
and
dec
int3
add
or
add
add
sub
ds
adc
dec
data16
movsb
sbb
add
pop
xor
mov
enter
sub
loope
mov
arpl
or
ffree
std
add
mov
jae
mov
push
das
add
pop
add
or
aaa
roll
outsb
test
in
mov
adc
pusha
stos
pop
add
rorl
lods
dec
int3
shll
mov
cmpsb
sahf
mov
lcall
jb
mov
je
xchg
lea
in
xchg
sub
push
pop
and
jne
stos
mov
hlt
out
and
popa
and
push
fistps
or
sbb
imul
dec
adc
and
sbb
sub
cmp
dec
test
adc
mov
adc
add
adc
lds
loopne
dec
pop
dec
xor
stos
xchg
scas
dec
add
add
sub
xlat
cmpsl
mov
pop
ljmp
outsl
xchg
jns
push
nop
ret
jbe
daa
jl
mov
pop
add
add
ljmp
add
dec
and
popa
sbb
adc
fistps
rcll
add
call
pop
repnz
stc
fs
rorb
shl
sbb
ss
cmp
xchg
ds
add
ljmp
add
add
jle
clc
jnp
add
psrad
out
inc
pop
cmp
iret
pop
jle
mov
push
js
push
or
daa
rorl
lea
add
mov
pusha
xchg
out
inc
enter
adc
push
es
xor
in
mov
jmp
fsubrs
add
aaa
xor
mov
dec
xchg
xchg
sbb
xor
add
aad
cmp
pop
lcall
mov
mov
lret
icebp
arpl
add
mov
mov
dec
adc
mov
add
js
mov
add
jne
mov
adc
fsub
add
cld
pop
insb
xor
sub
sub
add
insl
sub
xchg
cmp
mov
and
lods
mov
mov
xchg
lea
hlt
hlt
add
pop
dec
out
add
and
cld
jne
repz
add
ret
pop
pop
fcmovnu
out
push
popf
sbb
inc
leave
jp
xchg
mov
mov
add
add
das
ds
fldl
sub
inc
mov
add
add
xor
ljmp
mov
hlt
fmul
add
andl
lds
push
mov
stc
add
cmpsl
imul
nop
or
addr16
cmpsl
push
sbb
dec
inc
mov
and
lods
xor
out
xor
xor
adc
jno
add
sub
add
scas
or
jae
pusha
push
mov
or
add
icebp
cmp
stos
scas
sbb
sub
outsb
lods
pop
add
in
je
mov
je
sub
and
inc
andl
fistpl
cmp
faddl
ss
aad
xlat
mov
fidivl
nop
push
aaa
aad
push
adc
jmp
xor
popl
add
cs
scas
mov
add
jecxz
orl
and
xor
nop
pop
xor
hlt
sbb
add
cwtl
or
xor
xor
inc
pop
das
add
clc
add
ljmp
inc
mov
sub
add
int3
and
add
rep
fwait
jb
and
add
je
call
fcomps
sub
adc
fs
push
sub
insb
xlat
push
add
sub
fisttps
fsubl
popa
pop
add
movsl
sbb
lds
bound
jae
jp
dec
mov
add
xchg
lds
xor
add
insl
mov
stos
adc
add
lock
mulb
jns
pop
jmp
test
and
sbb
push
xchg
ficoms
fs
mov
xor
inc
xchg
inc
jecxz
or
lcall
push
xchg
pop
test
add
clc
jnp
sarb
into
xor
sub
add
jb
dec
push
inc
fwait
ljmp
push
lock
das
add
xchg
call
push
scas
icebp
adc
add
xchg
cmpsl
fadds
jne
ss
out
test
cmp
fadds
stos
sbb
and
sbb
mov
sarb
fldt
inc
jae
mov
jno
pushl
add
sbb
bound
test
add
add
push
addb
or
push
cmp
jle
mov
mov
cs
add
lret
ds
add
lahf
or
fmull
es
add
mov
add
test
movsb
aaa
add
pop
cmpsb
pop
lret
ret
decl
mov
mov
add
in
int
lcall
add
roll
hlt
xchg
jb
push
or
divb
mov
mov
stos
push
dec
popw
add
nop
inc
incl
les
clc
add
sub
add
imull
out
cmp
call
lea
push
inc
dec
xchg
mov
mov
lea
mov
push
mov
mov
mov
add
pop
sti
shrb
dec
sbb
fwait
cmp
adc
fwait
scas
inc
push
jecxz
add
fildl
mov
into
in
push
roll
sub
or
cmp
push
xchg
popa
xchg
pop
xchg
jle
pop
jbe
mov
bound
jmp
mov
pop
enter
dec
sub
sbb
out
add
dec
fldt
xchg
xchg
mov
in
mov
dec
das
lret
lock
inc
cltd
stos
fwait
pop
in
not
flds
xchg
xchg
iret
leave
or
mov
cmp
add
insl
sub
add
add
jae
add
sub
clc
xor
push
cli
mov
sti
add
leave
add
add
push
add
adcl
cli
push
ret
daa
repz
add
loopne
add
adc
inc
and
js
cmp
popa
out
push
test
add
movsb
adc
add
xchg
sbb
add
push
or
fcmovnu
sub
add
in
jo
inc
fidivs
addr16
mov
pop
or
in
in
sbb
adc
movsl
ljmp
popf
pop
out
add
lods
hlt
pop
add
pusha
cmpsl
xor
outsl
fcomps
sahf
inc
cmp
pop
jb
adc
mov
add
repnz
int3
cmp
pop
inc
imul
dec
inc
dec
pop
fldl
loopne
pop
jbe
scas
push
int3
hlt
lea
add
push
repz
inc
inc
pushf
pop
ja
push
add
mov
cmp
mov
adc
push
test
add
outsl
add
and
add
inc
or
cmp
push
sbb
add
js
in
jmp
lahf
insb
add
xor
ret
incl
in
sub
testl
jmp
cmp
xor
add
xchg
idivl
mov
and
pop
in
xchg
mov
out
pop
call
add
sbb
add
hlt
lret
jecxz
jmp
lock
lea
das
cld
ret
pop
mov
or
jmp
mov
mov
sbb
repz
adc
add
leave
push
add
push
daa
add
sbb
cwtl
movsb
xor
inc
sbb
testb
adc
sbb
add
add
inc
add
ss
pushf
jns
add
add
imul
add
gs
imul
cmp
test
aas
imul
sbb
jb
shl
rep
jne
ja
pop
xor
sbb
fdivs
movb
jp
loop
out
test
shl
add
cltd
rorl
push
adc
sub
es
lret
adc
mov
push
mov
outsl
mov
sub
add
clc
sbb
imul
and
sarb
in
push
pop
mov
dec
cwtl
ret
pop
repnz
mov
inc
int
cld
dec
scas
insl
mov
xchg
mov
add
fldl
or
add
xor
icebp
test
sbb
inc
or
add
and
out
push
jl
xor
loopne
js
hlt
dec
dec
add
pop
sarl
cmpsb
pushf
nop
lods
push
xchg
int
or
mov
scas
adc
mov
mov
inc
sbb
inc
add
cmp
sbb
mov
sub
ret
and
xchg
pop
nop
clc
mov
and
push
add
jne
dec
xor
inc
or
int3
dec
or
jg
in
sbb
xor
mov
stc
jle
add
std
lods
add
sub
xchg
xchg
mov
pop
dec
push
fcomp
roll
inc
ret
cld
stos
add
pop
mov
ds
enter
sub
cmc
pop
sbb
sets
cli
push
nop
and
add
xor
and
orl
dec
jae
ja
sbbb
cs
and
xor
push
fdivs
mov
lret
into
cmpsl
xchg
add
mov
mov
mov
push
jmp
adc
outsl
inc
xor
stc
test
data16
dec
movsb
jns
scas
pop
jo
add
mov
data16
cli
in
popa
push
out
add
scas
mov
in
frstor
sub
dec
mov
inc
std
aas
xchg
out
add
clc
push
mov
test
pop
add
mov
xchg
add
addr16
sub
inc
pop
or
dec
sub
cs
clc
iret
push
and
or
add
and
xchg
jns
jg
add
sti
lahf
xchg
xor
and
add
mov
add
or
add
test
ficoml
push
cmc
in
pusha
enter
aam
es
bound
add
add
sub
imul
les
xor
push
sbb
pop
bound
dec
fstpt
pop
add
add
or
push
add
push
mov
addr16
mov
scas
fnstsw
leave
and
arpl
xchg
mov
pop
sbb
popf
int3
loop
lret
jge
cwtl
mov
sub
mov
mov
cmpsl
les
cmp
in
add
mov
push
xchg
push
add
test
rcll
adc
xchg
mov
mov
mov
push
orb
adc
dec
loope
pop
add
sub
jge
jl
sub
shll
cmp
arpl
jl
shlb
mov
popf
aad
data16
call
jp
push
out
push
mov
movsb
mov
cltd
loopne
sbb
out
xchg
mov
add
cmp
adc
pop
test
hlt
sub
aam
int
push
cmpsb
fldcw
dec
cmc
adc
fiadds
jl
or
lods
jae
scas
fildll
xor
nop
outsb
jmp
cmc
fldl
out
mov
xchg
inc
xchg
pop
mov
push
loope
lods
shlb
fcmove
movsl
cmp
add
decl
add
sti
jmp
and
add
add
and
add
sub
out
sti
add
loope
negb
test
sub
pop
add
gs
push
lret
pop
in
sbb
es
jns
sbb
add
mov
push
daa
xor
add
fcompl
das
scas
push
lcall
add
mov
jne
inc
pop
mov
mov
xchg
add
repz
pop
inc
push
pushf
dec
cmp
cmp
dec
xor
aas
rorl
popa
adc
lahf
push
mov
bound
fcoms
enter
xchg
lea
popa
inc
mov
dec
or
jl
adc
add
add
mov
inc
or
scas
dec
sub
xor
es
rcll
add
lcall
sti
cmc
cltd
add
xchg
mov
out
jecxz
lds
adc
and
mov
ja
xor
dec
out
pop
aaa
mov
leave
xor
or
mov
hlt
or
sar
loope
pusha
aaa
sub
aaa
pop
enter
lds
sub
sub
mov
lret
addr16
icebp
xor
adc
aad
stos
xchg
add
dec
pop
push
movsb
sbbb
add
verr
pop
mov
mov
and
orl
data16
push
pop
pop
addr16
imul
stc
fldl
ss
in
inc
jecxz
test
insb
mov
add
add
mov
in
jmp
add
das
aas
orb
cmp
add
clc
sbb
sti
and
cmp
movsl
add
popf
xchg
stc
add
xchg
push
add
cmpsl
add
jg
add
push
test
adc
jge
inc
inc
test
insb
inc
add
jle
sbb
add
ja
fldl
push
jmp
nop
in
adc
mov
insl
inc
or
data16
hlt
add
repz
jl
outsl
ljmp
add
add
add
es
mov
leave
aaa
sbb
pop
es
xchg
ret
in
repz
repnz
sbb
jge
push
mov
scas
enter
fs
add
sbb
and
cmp
jns
push
nop
popa
xchg
sbb
xchg
mov
lcall
jnp
xchg
sub
gs
lret
or
pop
add
or
scas
bound
and
xchg
and
and
mov
aad
leave
xor
pop
sbb
inc
lcall
dec
loopne
mov
mov
xorl
mov
push
incb
xchg
fildl
and
sbb
rolb
add
add
add
sub
add
pop
aas
dec
mov
cmpsb
aam
pop
cmpsb
popa
add
adc
jae
inc
dec
lahf
or
jmp
mov
jge
bound
call
adc
incl
jbe,pn
mov
sub
fs
xchg
add
insb
clc
adc
jns
aad
into
add
int3
add
mov
int3
inc
cmp
sahf
rcr
jbe
adc
push
jb
mov
pop
movsb
xor
pop
mov
pop
into
jno
xchg
add
add
add
in
sub
lret
pop
test
pop
shll
aam
push
rol
add
add
add
fists
aas
or
xor
ds
adc
test
nop
xor
mov
test
sub
imul
adc
cltd
sub
int3
mov
dec
bound
dec
pop
dec
inc
scas
or
and
xchg
add
inc
add
and
inc
icebp
xor
pusha
sbb
push
adc
popf
pop
push
jg
pop
or
rcll
bound
fnstsw
sbb
sbbb
jne
push
lods
jae
js
add
dec
pusha
jb
pop
lahf
add
arpl
xor
push
repz
cmp
movsl
dec
xchg
stc
hlt
lret
jo
outsb
mov
add
movsl
mov
pop
in
hlt
in
push
sbb
mov
cli
pop
cmovle
add
dec
testb
adc
dec
mov
pop
notl
sub
sbb
mov
rolb
jl
dec
dec
daa
mov
add
add
negb
add
out
xorl
loope
sub
xchg
out
jne
popl
jne
dec
add
pushf
add
dec
imul
add
out
lahf
pop
cmp
and
push
adc
fwait
mov
aaa
mov
ret
inc
popf
adc
cmp
sbb
mov
lds
jle
lods
add
push
stos
jnp
rorl
insb
mov
pop
add
mov
lahf
fcmovnb
add
add
add
mov
addr16
pop
mov
fwait
xor
add
push
sub
aam
cmpsl
add
test
test
add
testl
lock
int
adc
test
mov
shll
mov
loope
add
xchg
incl
adc
add
jecxz
or
inc
xchg
cmp
idiv
add
push
add
mov
loopne
pop
lods
add
loopne
xchg
jecxz,pt
sub
add
sbb
sub
js
hlt
dec
jmp
push
data16
int3
and
add
cmp
mov
cmp
icebp
jecxz
pop
push
inc
outsl
add
and
aaa
xor
outsl
in
cmp
and
xor
dec
xor
pop
out
or
cmp
inc
add
mov
jmp
daa
int
lds
sbb
adc
xor
outsb
xor
mov
jle
pop
cs
movsl
in
jnp
iret
add
dec
add
dec
mulb
adc
aas
and
in
mov
mov
shll
xchg
push
add
enter
xchg
xor
test
xchg
and
mov
pop
cli
addb
inc
sbb
iret
addb
adc
add
cwtl
testl
ljmp
add
push
pop
lods
push
cmp
aam
aaa
loop
or
call
mov
fwait
or
pop
add
add
push
add
loopne
cmp
loope
add
add
mov
add
movsb
add
shlb
test
or
sub
add
adc
popa
mov
mov
outsb
cld
dec
xlat
and
push
xor
sub
and
sub
cli
add
bound
imul
repnz
xchg
jle
fisubl
es
ljmp
insl
xor
jmp
cmp
adc
enter
mov
mov
mov
add
add
loop
add
fsubs
and
xchg
scas
cmc
push
roll
inc
jne
sub
adc
lret
sbb
loopne
in
mov
mov
add
cli
fldl
push
dec
xchg
push
movsb
mov
pop
aas
shl
add
cmp
or
push
push
lahf
add
sbb
fcoms
or
fcmovnu
or
xor
std
sbb
add
or
xchg
out
push
mov
cmp
fwait
add
insl
ja
imulb
sub
in
cmpsb
inc
lret
repz
cmp
leave
dec
add
mov
dec
lcall
push
push
add
add
std
icebp
fcompl
sarb
xor
addb
add
jecxz
dec
pop
add
ret
add
jo
sahf
adc
pop
mov
pop
add
add
adcb
dec
xchg
mov
mov
pop
xchg
cmpsl
add
pop
out
xchg
add
mov
mov
jmp
jb
sbb
xor
addb
data16
add
mov
sahf
roll
repnz
jb
scas
movb
push
iret
add
pop
add
jo
adc
mov
jno
into
add
inc
add
add
sysexit
jp
cmpsb
fmuls
sub
push
jo
sub
cld
adc
outsb
add
adc
push
sbb
adc
add
and
dec
loopne
incl
sarl
stos
inc
stos
dec
dec
stos
adc
pop
mov
or
test
sbb
mov
push
mov
aas
adc
dec
call
divl
into
bound
insl
cltd
xchg
mov
sub
xorb
pop
stos
shll
pop
orb
add
add
jae
mov
mov
xchg
outsb
insl
add
sti
stos
cmp
sub
mov
mov
arpl
dec
dec
adc
aam
inc
in
sub
xchg
mov
jl
int3
xchg
lret
mov
arpl
ljmp
out
dec
xlat
sbb
call
lods
add
insl
das
add
push
cmp
jg
add
fsub
pop
sahf
and
jl
pop
cld
and
push
clc
ss
inc
fsubrs
or
pop
jp
pop
popa
mov
jne
mov
add
or
push
jnp
add
mov
mov
das
add
mov
jne
jb
or
sub
mov
mov
mov
add
add
pop
pop
ja
add
inc
popf
cmp
lods
mov
pop
add
adcl
test
xor
add
mov
inc
add
add
cmp
in
sub
sahf
xor
testb
popl
sbb
lcall
add
insl
dec
mov
pop
shl
add
xor
xor
repnz
rcrb
fnstcw
add
add
incl
arpl
fsubs
xchg
mov
push
adc
add
push
ds
push
test
adc
and
lahf
xorb
push
pop
lret
sbb
push
pop
daa
sbb
dec
jg
movsl
out
sbb
and
add
sar
dec
xor
mov
lahf
inc
dec
add
mov
int3
mov
add
jmp
rcrl
push
sbb
xchg
mov
add
inc
cmpsl
jae
pop
dec
out
shlb
or
add
sub
enter
push
push
cli
sti
test
mov
add
mov
sub
lock
mov
repz
mov
arpl
sub
sub
pop
pushf
add
aam
rorb
jbe
mov
enter
push
add
mov
icebp
and
cli
push
mov
insl
xchg
inc
or
mov
lcall
and
addb
repz
xor
or
add
into
add
cli
cs
into
ja
movsb
loopne
mov
add
add
dec
arpl
mov
mov
pushf
cwtl
in
adc
inc
add
xor
rorl
outsl
jo
xchg
sub
xor
adc
jo
cmc
mov
popf
popf
and
cmovns
jno
cmp
add
push
sahf
pop
add
pushf
aas
push
xor
mov
cmp
or
add
jp
icebp
xor
push
or
popa
jmp
scas
sbb
cwtl
xor
out
push
push
roll
dec
dec
outsl
aas
cmpsl
push
dec
in
stc
je
mov
sahf
add
jmp
dec
jne
add
jb
sbb
cmp
mov
jl
lahf
fsubl
into
insb
xchg
jae
andb
add
sbb
or
sub
push
mov
imull
adc
pop
and
jle
inc
adc
sbb
inc
lods
jo
mov
add
hlt
jne
pop
jb
xchg
inc
movsl
int
push
arpl
cmp
adc
cwtl
add
jbe
add
lahf
add
jae
push
mov
std
fstpt
push
lods
xchg
bound
outsb
xchg
mov
arpl
push
xor
mov
add
add
arpl
push
pop
negb
and
mov
cmp
incb
add
mov
xchg
mov
jmp
sarl
xor
jne
inc
movsl
add
lds
movsl
lret
lds
ret
pop
insl
hlt
rcrb
es
push
add
outsb
mov
cmp
mov
mov
insb
stos
adc
xor
add
cli
cmpsb
repz
xchg
cmp
add
add
mov
nop
adc
stos
cli
jae
lret
jmp
iret
sbbb
xchg
fadds
test
ret
fildl
faddl
mov
jge
jl,pt
fs
adc
ds
and
jg
out
roll
pop
mov
aas
xor
pusha
jae
push
jle
aas
mov
add
movsl
cmp
add
jno
xor
aas
mov
pop
push
sub
add
data16
or
dec
inc
push
add
iret
mov
add
aaa
add
out
or
pushf
fsubs
push
lret
add
int3
and
jle
jbe
shl
add
add
adc
inc
pop
add
and
lods
xchg
xor
es
add
sub
mov
les
mov
xchg
sbb
push
notl
popf
mov
inc
in
inc
pop
xchg
inc
in
popf
test
jmp
mov
dec
push
ret
in
andb
cmp
aas
dec
add
add
inc
sti
add
ja
sub
dec
adc
cmp
jg
jge
mov
add
adc
push
fistpl
lret
push
add
xor
adc
data16
mov
sbb
mov
sub
mov
mov
inc
and
inc
inc
aad
adc
sub
lret
pop
sbb
leave
dec
enter
ret
dec
aam
mov
gs
add
call
addl
in
jnp
pop
std
ret
mov
js
xchg
dec
adc
push
pop
loop
shrb
add
sub
nop
and
add
inc
add
incb
test
add
add
mov
int3
add
clc
lcall
push
outsb
mov
clc
mov
mov
setp
mov
add
pushf
popa
jl
loop
pop
lods
fldenv
leave
cmp
mov
sub
xlat
imul
pusha
xchg
sub
add
aas
push
push
movsb
icebp
cli
add
push
adc
lret
jle
sbb
dec
mov
jnp
inc
les
sbb
and
push
mov
and
add
xor
jle
mov
sti
push
mov
jle
cmpsb
cmp
mov
repz
mov
add
loope
mov
inc
mov
lret
clc
xchg
xchg
adcb
out
popf
sbb
test
js
mov
xchg
mov
push
mov
push
add
insb
bound
mov
jae
and
inc
ja
push
push
push
add
cwtl
mov
push
push
repnz
aad
cmpl
inc
dec
aam
add
in
xchg
add
stos
int
stos
xchg
pop
fdivs
in
aaa
addr16
nop
ljmp
or
bound
add
push
dec
test
fbstp
add
jno
mov
add
push
in
fildll
jb
add
mov
dec
inc
sbb
add
imul
add
cli
cmc
mov
add
lret
ja
add
add
jmp
and
add
lcall
loope
insb
sub
push
daa
ss
sahf
or
test
jge
jns
and
mov
sub
pushf
fildll
cmp
cmpsl
add
jecxz
and
hlt
mov
or
imul
test
lock
les
fistpl
or
pushf
sbb
mov
lahf
xchg
repz
shrb
add
dec
cmp
lods
ss
js
hlt
enter
push
jp
jecxz
add
push
cmp
lret
xor
cltd
pop
add
dec
cmp
sub
outsb
insl
outsb
ret
mov
rcl
or
popf
iret
jb
sbb
int3
sub
nop
xor
icebp
pop
sbb
push
pop
or
sub
jle
add
inc
mov
movsl
add
add
jl
mov
push
mov
popf
jg
push
adc
jl
addl
or
test
scas
loopne
subl
sahf
imul
aas
setbe
iret
fists
mov
adc
push
mov
call
xor
icebp
aad
jmp
or
sub
out
mov
pop
dec
add
stc
push
into
push
or
int
adc
add
outsl
shrb
and
leave
mov
in
and
out
out
iret
mov
pop
incl
test
test
xchg
push
lds
or
push
in
pop
outsb
pop
push
sub
int
mov
push
adc
and
int3
or
aaa
lods
and
cli
movsb
push
adc
lds
out
icebp
add
adc
inc
add
int
add
push
and
sub
cli
sbb
imul
jle
lods
xchg
dec
fwait
pop
sbb
xchg
xchg
sbb
add
mov
cld
repz
add
in
add
popf
add
push
xorb
push
jp
add
xor
aas
mov
jmp
add
add
xchg
push
xchg
or
add
add
mov
dec
mov
xchg
dec
jmp
inc
cwtl
popa
pop
fsubrs
adc
into
inc
test
mov
jl
adc
fnsave
sbb
inc
fiadds
dec
repnz
mov
adc
jns
add
dec
aam
pop
dec
dec
add
add
pop
ds
or
fiaddl
mov
pop
xchg
int
pop
mov
lret
xor
fstps
fwait
cmp
add
loope
daa
add
mov
mov
adc
or
adc
cmpsb
cmpsl
insb
loope
imul
pop
add
pop
add
mov
cmp
add
fdivrs
add
ss
dec
in
jmp
cltd
add
shl
popa
xorl
fdivrl
adc
dec
push
pop
sub
sbb
outsl
cld
xor
mov
add
push
dec
push
addb
push
add
mov
add
jp
xchg
xchg
lds
adc
ficomps
push
lds
add
jbe
jno
outsb
adc
dec
into
and
rclb
pop
fcmove
push
repnz
inc
sub
sahf
ret
add
cs
cmp
cmp
inc
push
jno
in
test
or
ret
addr16
icebp
mov
add
push
sbb
cmpsb
dec
movsl
sub
outsb
lret
add
les
stos
xchg
lock
add
aas
jecxz
mov
add
add
push
sbb
movsl
out
add
test
not
nop
js
pushw
add
test
shrl
adc
std
cltd
cmp
popf
pop
add
mov
arpl
lods
and
add
imul
add
flds
mov
or
xchg
add
nop
and
mov
test
and
mov
and
add
jne
ljmp
movb
cmpsb
cwtl
dec
mov
cltd
add
jo
add
pop
fcomi
pop
insb
push
les
lods
pushf
add
jmp
shl
add
mov
add
add
aas
aad
pop
sub
add
xchg
outsb
push
cmp
push
cmp
or
clc
mov
dec
jbe
dec
dec
imul
push
outsl
cmp
dec
add
cld
mov
fdivs
add
jecxz
pop
test
lret
movsl
add
cli
scas
pop
cltd
aas
test
mov
repnz
add
cmpsl
add
scas
push
mov
push
lahf
jo
add
pop
sub
or
cmpsb
add
push
adcl
dec
cmp
scas
push
loop
int
bound
push
jbe
cmpsl
aas
sub
shrb
aad
mov
add
and
xor
aam
lahf
scas
mov
cmp
add
ret
inc
pop
pop
adc
inc
lds
xor
flds
scas
lret
sbb
and
mov
add
add
cld
leave
in
xchg
pop
add
inc
pop
inc
mov
cmp
stos
mov
jmp
jl
add
mov
dec
mov
or
test
hlt
add
jbe
pop
add
jmp
push
or
addl
das
leave
icebp
cld
faddl
popa
add
jp
add
mov
mov
insb
push
cmpsl
fs
add
dec
cmpl
add
aad
add
es
push
lret
mov
dec
mov
xchg
incl
into
ds
add
repz
stos
mov
sbb
and
jmp
and
outsb
pushf
loop
das
out
repz
pop
cld
aaa
leave
add
jmp
dec
and
adc
call
cmpb
add
xchg
sbb
sub
add
add
jae
lcall
test
mov
test
inc
out
xchg
inc
cmp
ret
xchg
cld
fwait
es
mov
jb
mov
push
nop
adc
push
shll
mov
jne
add
loope
out
inc
inc
cmp
add
add
popa
fistpll
add
lds
aas
dec
loope
mov
mov
in
pop
aam
cmp
push
add
add
or
lods
jno
rcr
inc
out
or
das
and
mov
add
jnp
pop
adc
test
das
loope
movsl
pushf
add
sbb
push
movsb
lahf
add
cmc
pop
loop
mov
add
xchg
cld
ja
xor
data16
gs
je
aas
fisubrl
sbb
sub
lock
cs
push
jns
adc
repnz
repz
mov
arpl
adc
push
xlat
push
jo
or
loopne
pop
repnz
popf
mov
daa
pop
ret
pop
fdivrs
cmp
pop
lcall
adc
fiadds
out
inc
dec
add
add
add
fidivs
lret
mov
xchg
fsubrs
jne
aam
cli
std
add
shl
push
and
mov
aaa
enter
dec
add
lea
cltd
jle
xor
bound
enter
aas
imul
xchg
dec
mul
inc
push
sbb
mov
out
sub
add
push
pop
rcrl
sub
lock
sbb
test
xor
push
pop
inc
mov
lea
sahf
mov
mov
verw
jle
adc
insb
out
cwtl
mov
out
ret
inc
sahf
sub
push
add
sahf
mov
add
add
inc
mov
xor
mov
repz
inc
xchg
popa
adc
sbb
data16
add
inc
adc
xchg
fadds
jg
hlt
push
test
xor
cmp
mov
jae
xor
add
sarl
ds
add
xchg
test
rcrb
mov
pop
and
add
add
cmp
add
sbb
add
xor
cli
add
data16
cmpsl
sbb
xchg
xchg
cmpsl
mov
cmp
addr16
push
aam
dec
js
inc
enter
movb
pop
or
dec
push
pushf
and
sub
add
mov
jb
push
push
sub
nop
fimull
out
leave
adc
dec
add
sbb
sub
push
addb
add
add
mov
push
test
mov
lahf
add
add
add
jns
xor
jo
cli
enter
add
add
xor
jmp
inc
or
add
jns
nop
mov
repz
ljmp
lods
out
add
sbbl
mov
pusha
call
inc
mov
cmp
dec
xchg
cmpsb
add
loop
ss
cmp
ret
icebp
jle
jecxz
push
adc
sub
add
cmp
cmpsb
or
mov
test
cmp
in
inc
xchg
inc
xchg
and
add
xor
pop
push
sar
lods
push
inc
add
add
popf
sbb
mov
pop
dec
add
cs
arpl
fwait
sbb
lret
and
cli
dec
inc
add
arpl
adcl
push
push
add
cli
clc
pop
push
add
addr16
add
sbb
and
mov
mov
outsb
add
add
test
mov
adcl
sub
add
cli
sbb
loope
add
in
mov
jle
mov
mov
add
mov
dec
sub
mov
add
mov
cmpb
cmp
outsb
sub
dec
sbb
sub
repz
cmpsb
add
dec
push
add
pop
out
push
aad
scas
add
sbb
push
add
sub
orl
test
lcall
pop
xor
push
sbb
add
popa
out
cs
fstpt
daa
mov
mov
roll
add
jmp
cmp
mov
pop
repz
mov
repnz
add
int3
push
and
stc
out
add
andl
add
and
pop
je
sbb
xor
mov
pop
cs
aad
int
inc
ljmp
and
jns
and
popf
addl
dec
add
jge
jbe
enter
mov
dec
orb
cmp
or
push
inc
or
jmp
add
decb
xor
xchg
pop
lds
push
xor
lret
or
mov
jg
repnz
rcll
lahf
adc
movsl
xor
mov
inc
insl
jno
mov
jp
into
lret
out
nop
lahf
jg
add
inc
push
es
mov
jnp
mov
in
dec
sub
rolb
inc
lds
xchg
mov
or
rcrb
add
insb
cmpsb
pop
push
jns
jge
rcrb
lods
pop
jae
repnz
mov
adc
adc
adc
jno
imul
jns
les
es
jle
cmp
pop
push
push
idivl
add
jg
dec
popa
inc
shl
cmpsb
or
push
popa
inc
into
ltr
stc
add
test
sti
push
add
and
test
jo
or
add
add
dec
and
sbb
add
xchg
pop
add
dec
add
push
cmp
jnp
lods
xchg
into
cmpsl
xor
mov
push
add
add
lcall
out
std
push
pop
xor
test
mov
bound
daa
test
icebp
push
std
push
xchg
inc
or
add
cmc
js
add
push
add
addl
add
jge
popa
xchg
add
orl
mov
addb
pushf
cmpsb
sub
mov
jne
xchg
push
ficomps
xor
loope
scas
push
add
cmpsb
lret
pop
xchg
out
mov
pop
cmp
cmpsb
add
add
lods
add
add
xor
or
xor
mov
push
in
data16
add
jle
rolb
jno
push
mov
iret
pop
adc
pop
jecxz
dec
mov
sub
ret
fwait
jle
sub
rsqrtps
inc
out
pop
add
mov
jno
push
dec
jnp
mov
leave
xchg
adc
icebp
cs
sub
push
add
leave
dec
dec
mov
and
stos
imul
jecxz
jnp
test
ja
xor
sub
ljmp
add
sub
dec
neg
add
ljmp
mov
mov
add
xchg
popa
xchg
mov
testb
inc
add
mov
stos
fs
loopne
add
push
xchg
mov
pop
test
mov
pop
dec
xrelease
sub
inc
cmp
add
outsl
lods
fsubp
add
inc
pop
mov
add
push
cmp
addr16
cltd
jl
mov
pop
add
add
push
movsb
daa
aam
xor
xor
cmpsb
cli
int3
mov
inc
mov
adc
add
and
add
mov
mov
fistpl
mov
mov
add
inc
pop
arpl
outsb
std
fbld
fsts
mov
shl
add
mov
imul
roll
mov
adc
lret
xchg
scas
movsl
andb
mov
add
cmp
stos
inc
inc
mov
stos
add
adc
sbb
aam
push
stos
jge
add
add
lret
or
cmp
jmp
ret
sbb
add
add
iret
outsl
add
addr16
roll
xor
xchg
add
out
add
cmpsb
shl
dec
mov
push
xchg
cmp
xchg
imul
in
fisttps
add
stos
lret
hlt
add
mov
add
loop
sbb
or
lea
xchg
jae
jle
lcall
scas
add
repnz
in
jbe
mov
pshufw
pop
mov
repnz
pusha
iret
dec
js
adc
pusha
inc
nop
mov
sub
sub
add
push
arpl
mov
lret
mov
in
mov
inc
jns
in
add
lahf
jns
mov
cld
add
adc
pop
mov
dec
data16
movsl
jnp
or
mov
jno
ljmp
bound
adc
pop
add
or
gs
cmpsl
repnz
adc
xchg
int3
imul
push
cwtl
mov
sbb
cmp
push
movl
or
pop
add
or
out
adc
mov
dec
pop
test
mov
mov
int
add
mov
jg
sahf
lods
add
mov
push
mov
add
mov
add
add
cli
cmp
fwait
jecxz
jp
test
mov
sbb
inc
mov
scas
inc
bound
pop
sub
adc
add
cltd
fnstsw
inc
int
in
in
jb
inc
xlat
mov
lret
sti
xlat
fsubrl
adc
cmp
add
add
fcomps
add
daa
sbb
ja
add
mov
stos
hlt
shl
fildl
out
cmpb
add
lcall
xchg
mov
hlt
jns
inc
adc
popa
test
or
add
add
add
add
in
add
cmp
mov
xor
xchg
add
xor
push
ficoms
add
scas
stos
pop
sub
push
jns
sarl
mov
jmp
jle
loopne
rolb
push
dec
add
into
inc
pop
and
mov
mov
out
test
stos
mov
push
adcb
sbb
add
out
mov
cmp
mov
rolb
add
loop
shrb
mov
mov
and
rolb
sub
add
add
add
je
fisttpll
cmp
popa
add
push
or
xchg
and
add
cmpsb
add
rclb
or
sbb
push
sbb
or
adc
or
jg
ret
jg
add
stos
arpl
clc
and
pop
testl
bnd
add
pop
testb
mov
adc
jo
mov
add
mov
jl
mov
scas
sub
outsb
xor
mov
ljmp
sub
push
sub
add
xchg
pop
fildll
imul
pop
orl
jnp
pop
xor
sbb
mov
push
add
notb
lret
add
mov
mov
dec
ret
jmp
loopne
mov
add
cli
lock
imul
pop
jno
data16
dec
add
jns
inc
or
add
mov
add
xchg
ss
xchg
in
add
add
nop
loop
sbb
stos
jne
mov
in
mov
or
add
jo
pop
pop
out
inc
xchg
popa
inc
es
loope
mul
sbbl
add
jae
push
add
insl
add
ja
sub
xor
pop
fisubrl
cmp
pusha
push
mov
inc
lahf
push
mov
ret
test
xchg
xchg
pop
popf
add
jae
mov
fcomip
movzwl
cmpsb
xchg
adc
sbb
data16
inc
add
or
int3
les
or
xor
add
dec
xor
dec
loop
jnp
pop
and
mov
setge
add
jb
incb
fldenv
out
test
mov
and
add
jmp
push
in
ficomps
in
add
mov
add
add
add
mov
loopne
mov
lret
add
add
enter
add
insb
sbb
scas
cmpsl
cli
lds
fdivrs
out
das
xchg
sbbl
in
sub
rorl
pop
sub
sbb
int
xlat
add
and
mov
shrl
outsl
add
movsb
cmp
dec
imul
test
pusha
xchg
mov
xchg
mov
in
mov
idivb
test
xchg
adc
ss
out
add
mov
aaa
dec
shlb
adc
xlat
ja
mov
mov
push
and
add
leave
roll
pop
pop
mov
add
push
lret
pushf
out
icebp
or
pushf
add
add
into
jecxz,pt
movsl
add
cmp
or
insl
mov
nop
add
jb
push
and
pop
add
mov
out
and
inc
xor
jo
mov
add
adc
xor
fsubs
pop
cmpsl
loop
add
adc
jl
faddl
push
out
cwtl
xlat
stos
add
sub
out
adc
ss
fwait
arpl
or
pop
lret
stos
aas
orb
xor
mov
les
orl
mov
insb
mov
add
cli
cmp
cmpsb
jne
jg
cld
inc
rolb
dec
repnz
jne
sbb
cmp
movsl
outsb
cwtl
lea
lahf
add
cwtl
addr16
xchg
in
mov
fwait
inc
pop
pushf
add
addl
push
test
mov
xchg
inc
add
fldl
sarl
popf
shlb
es
pop
add
pop
add
addr16
idivl
leave
push
add
jle
cmpsb
add
inc
js
add
filds
imul
cmp
add
arpl
ss
add
add
xchg
mov
and
add
pop
leave
jmp
add
sahf
mov
int
orb
jmp
add
sub
ret
jge
rcrl
jg
loop
adc
out
clc
mov
pop
add
cmp
push
outsl
inc
mov
and
and
sbb
mov
rolb
scas
repnz
cmp
aas
jge
rcrl
out
les
add
xchg
push
mov
mov
pop
inc
stos
sti
push
iret
lret
es
mov
add
test
rolb
jns
xchg
xchg
dec
add
addb
jle
scas
cmp
insl
es
push
add
inc
cmc
pop
lds
add
or
xor
testl
rcll
enter
or
inc
xchg
inc
fnstcw
ret
and
push
push
rclb
stos
mov
add
mov
cmpsb
or
fistpl
add
popf
mov
and
add
jo
ret
add
cmc
fs
pusha
insb
add
mov
out
std
add
cmp
add
mov
loopne
push
jmp
cmp
add
ret
xor
into
sub
inc
mov
or
xchg
lds
ss
movsb
push
add
add
incb
mov
xlat
push
and
pop
mov
sub
jbe
jnp
add
pop
add
mov
stos
jae
stc
sbb
hlt
repnz
add
push
movsl
inc
add
push
xchg
push
cli
add
sbb
insb
dec
cmp
sarl
mov
push
hlt
aam
or
inc
adc
jno
cwtl
loope
add
add
add
pop
enter
hlt
add
ds
arpl
pushf
mov
add
in
inc
ljmp
not
fsts
jb
pop
jb
mov
xchg
dec
dec
add
adc
xor
add
movsb
out
mov
lahf
cmp
je
mov
dec
aaa
lcall
dec
pop
imul
sub
rorl
mov
xchg
sbb
cmpsb
hlt
push
ret
sub
jmp
xchg
lds
and
jg
mov
adc
adc
inc
add
add
xor
add
roll
inc
popa
jp
ucomiss
mov
add
add
movsl
cmp
mov
lods
gs
addr16
into
clc
pop
xchg
data16
aas
jnp
sbb
enter
pop
add
mov
pop
xor
and
xor
lret
add
out
mov
push
vphaddubq
lret
scas
mov
out
inc
sub
mov
xor
cld
cmp
adc
dec
arpl
pop
push
mov
std
lcall
outsl
les
mov
jns
sub
stos
lcall
out
cmpsl
pop
andb
add
cmp
add
cmc
and
mov
add
add
add
es
sbb
and
sbb
mov
stos
sub
add
or
cltd
pop
clc
aaa
jo
cltd
add
ss
stos
shll
mov
adc
and
jbe
repnz
add
xor
push
mov
ds
dec
test
mov
adc
pop
add
add
fsubr
js
add
std
les
add
xchg
xor
fsubr
subb
jmp
aam
mov
je
and
orl
cmpb
jge
fisubl
xor
cmpsb
dec
push
cmpsl
add
push
aas
cmp
cmp
add
rcl
pop
aad
xchg
repnz
popa
mov
add
rcrl
jg
xor
shlb
inc
popa
adc
cmp
sub
add
cmp
add
mov
repz
mov
adc
pop
xor
add
loop
outsb
out
pushf
xchg
xchg
jmp
push
addr16
mov
pusha
das
dec
cwtl
pop
cmp
push
add
add
xchg
inc
testb
cmp
jg
sbb
dec
add
cmpsl
inc
hlt
scas
mov
pop
and
xor
inc
fildl
fcoml
and
sbb
scas
add
aas
mov
push
add
jo
add
and
xchg
xchg
addr16
fldl
mov
cmp
movl
xor
stos
sbb
inc
add
adc
aaa
sbb
fimull
clc
push
sub
sub
je
mov
push
add
adc
mov
cmovne
sub
cmpsb
fisttps
dec
lcall
sbb
jns
add
mov
xchg
lahf
mov
or
inc
add
subl
sbb
call
pop
cli
add
out
push
dec
sbb
into
mov
dec
or
mov
pop
stos
mov
push
dec
push
shll
inc
jo
aas
je
iret
xchg
mov
hlt
xchg
es
adc
mov
push
lock
xor
mov
mov
xlat
and
add
dec
add
cmp
decl
xor
lock
jmp
dec
adc
test
add
xor
cwtl
aam
and
cmpsl
and
add
roll
lret
fldt
dec
dec
out
mov
sbb
ret
pop
rclb
ror
pop
jmp
int
jge
jno
add
frstor
sub
add
add
dec
roll
push
jbe
sahf
mov
add
add
or
mov
test
xchg
je
add
pop
out
add
lods
mov
pop
mov
fiadds
dec
mov
xchg
and
jns
out
xchg
add
outsl
dec
jae
inc
mov
je
and
out
in
dec
call
and
popf
or
call
add
lahf
cmp
mov
mov
xor
dec
or
loop
add
push
popa
add
mov
cmp
in
sub
test
cwtl
sub
inc
mov
into
ror
pop
movsl
adc
push
xchg
mov
xchg
add
imul
std
lods
add
add
cmp
push
cwtl
xlat
pop
sub
mov
mov
adc
adc
dec
lods
mov
mov
push
jg
add
add
lcall
daa
mov
mov
shl
ret
clts
dec
movsb
jbe
inc
aas
lock
arpl
inc
rcrb
bndstx
hlt
iret
jmp
jnp
and
add
push
addl
sti
dec
cli
mov
std
cmp
scas
add
nop
fildll
push
mov
cli
nop
pop
sbb
ret
jg
cmp
icebp
or
in
scas
jno
pop
repz
jecxz
pop
out
movsb
daa
sub
ss
add
stc
lahf
add
and
inc
add
ror
mov
stos
aaa
lldt
xlat
and
test
dec
leave
pop
fstpl
add
fiadds
xchg
outsl
lods
fimuls
or
push
push
cwtl
lahf
add
add
or
pop
int
jbe
dec
fwait
add
cmp
aad
xchg
es
insl
andb
pop
shll
sarb
push
outsb
inc
and
fcomps
stos
mov
add
es
repnz
aad
scas
or
addl
add
std
cmp
jg
stos
call
mov
movsb
lcall
mov
sub
add
in
inc
imul
mov
pop
add
testb
pop
xor
add
and
add
add
leave
ficomps
push
popf
xchg
leave
stos
outsb
faddl
jge
push
ja
push
dec
sti
add
inc
inc
or
jnp
testl
out
fwait
jns
sub
sti
rorl
mov
mov
call
mov
ror
ret
add
rorb
stos
xlat
cmp
mov
xchg
adc
std
add
mov
cmp
addr16
xor
clc
add
popf
add
aad
enter
mov
iret
mov
xor
xor
repz
add
add
adc
rorb
sub
jge
and
adc
jmp
inc
jp
jl
ljmp
mov
or
arpl
dec
add
add
mov
clc
inc
jge
lea
cmp
pop
xor
mov
test
adc
bound
call
out
hlt
sbb
add
add
mov
add
pop
bsr
rclb
or
pop
add
push
xchg
shll
mov
movsb
cwtl
xchg
add
sti
dec
shrl
call
add
pop
xor
push
lock
mov
push
ja
repnz
add
repnz
add
or
add
das
pcmpgtw
sbb
jne
push
sldt
fcomi
mov
sub
or
clc
pushf
rclb
inc
add
add
add
call
mov
jge
add
jae
mov
add
push
mov
roll
cmpsl
lcall
leave
fists
ljmp
loopne
jge
adc
nop
rolb
mov
inc
add
add
in
ja
xor
mov
rol
add
insl
add
movsl
add
add
adc
jl
add
or
int3
hlt
inc
aaa
xchg
xchg
pop
xchg
iret
cltd
sub
jp
imul
mov
cwtl
lods
xchg
ds
in
test
adcb
push
leave
shrb
inc
test
pxor
enter
inc
and
dec
loope
adc
pop
out
sub
mov
xor
lahf
pop
loope
lcall
add
rcrl
cwtl
push
xchg
daa
aam
add
inc
stos
and
xor
or
in
xchg
cmp
adc
jo
mov
jle
popa
jge
inc
push
mov
push
cmp
mov
inc
push
fstl
test
jne
add
add
sbb
jle
ss
sbb
in
cld
addl
add
stc
cwtl
inc
mov
adc
jmp
pop
or
mov
cmc
popf
out
add
add
cmpsb
mov
mov
jecxz
add
test
sbb
mov
out
add
xchg
or
sub
fistps
sbb
add
dec
pop
out
outsb
out
pop
push
dec
adc
mov
in
popf
mov
lret
dec
jb
js
incb
lcall
add
xlat
inc
cmp
test
scas
fptan
xor
mov
adc
add
lods
loope
js
mov
call
jno
sbb
aas
add
movsb
xchg
gs
leave
cli
xchg
pop
add
sahf
out
mov
mov
popa
cs
scas
jp
decl
iret
jge
bound
add
mov
add
fs
cmp
push
hlt
jl
inc
add
enter
add
jmp
dec
mov
cltd
add
sbb
pushf
repz
mov
mov
and
out
xor
add
sahf
jno
popa
out
sar
out
arpl
pusha
or
sub
into
cmp
and
add
je
add
add
rorb
xchg
mov
iret
sub
scas
pop
cli
sub
popf
dec
and
scas
hlt
add
dec
frstor
hlt
lds
aam
adc
add
mov
out
movsb
add
dec
mov
cli
pop
add
in
add
data16
dec
adc
cmp
shll
lahf
in
add
testb
cmc
ffreep
mov
orl
push
sub
stos
aam
sbb
mov
adc
inc
add
mov
add
jge
loope
mov
ja
mov
add
push
and
stos
cmp
sub
mov
call
sub
sub
cmp
cmp
push
add
mov
out
subl
dec
leave
test
incb
loopne
pushf
adc
and
movsb
add
add
jne
inc
pushf
xlat
testl
add
and
push
imul
int
fimuls
iret
popf
cs
out
lret
xchg
mov
outsb
pop
lds
adc
add
add
data16
int3
jo
insb
sub
add
pusha
dec
add
xchg
add
lret
push
inc
xchg
lock
je
imul
add
mov
add
pop
jb
lretw
dec
or
fisttps
add
add
std
add
jmp
add
mov
xchg
filds
push
mov
test
enter
test
sbb
xchg
mov
lock
or
jge
xchg
mov
sub
push
mov
cmp
and
sub
or
test
mov
sub
cltd
pop
lods
mov
and
xchg
iret
add
mov
pop
mov
aas
mov
aas
mov
popf
sbb
mov
mov
out
stos
add
lret
mov
icebp
sahf
loope
or
in
xor
xor
pop
rol
mov
add
inc
add
xchg
ss
adc
in
movsl
jo
scas
out
add
push
sub
xchg
adc
subl
sub
das
inc
inc
jge
mov
sbb
jno
lods
je
or
clc
pop
xchg
add
inc
shlb
push
mov
add
adc
outsb
dec
or
mov
out
or
inc
mov
ret
pop
outsb
out
add
sti
lods
add
fdivrp
or
sbb
add
sbb
xchg
mov
aaa
insb
ja
pop
stc
mov
in
push
cs
push
out
add
ja
orb
add
ss
fistpll
cmpsb
inc
add
shll
sahf
inc
mov
dec
clc
int3
add
roll
or
rolw
mov
mov
js
push
add
fisubrs
leave
repz
out
mov
xchg
mov
inc
mov
push
sub
dec
repnz
rcrl
inc
sarl
cmp
pop
dec
aaa
or
xorb
add
adc
scas
cmp
add
gs
add
push
sub
pop
adc
or
mov
fcomps
xchg
icebp
test
jbe
mov
movsb
aaa
sahf
leave
or
push
pop
pop
lock
out
jl
mov
in
inc
in
sub
out
ss
rclb
jb
ret
add
mov
aad
dec
mov
cmp
add
sti
jno
xchg
scas
push
je
data16
or
mov
lret
popf
add
inc
or
aas
dec
cmc
add
or
push
bound
push
lods
pop
call
scas
inc
in
add
mov
add
cmpl
lock
lods
js
test
pop
mov
js
push
mov
mov
dec
flds
jge
int
mov
push
adc
add
hlt
push
push
pop
add
add
add
jns
push
sub
shl
or
mov
adc
dec
inc
xchg
add
repnz
sub
lret
and
push
test
xlat
add
loop
cmpsb
out
in
mov
roll
mov
popf
gs
xchg
or
js
sbb
sahf
orb
cs
add
push
das
ret
pusha
mov
cwtl
clc
adc
ja
add
filds
cmp
pop
ss
jge
xchg
repz
pop
add
mov
jecxz
jg
xchg
in
inc
xor
das
mov
xor
xchg
pushf
jg
mov
in
pop
pop
add
imul
ja
mov
aam
jl
inc
cmp
push
out
aad
adc
xchg
xchg
pop
mov
push
leave
sti
nop
xor
bound
in
add
inc
paddusw
loope
add
jbe
adc
dec
ret
add
xchg
in
std
mov
dec
inc
test
repnz
add
inc
fs
adc
mov
test
jo
lods
push
xor
pop
adc
cmp
repz
dec
cli
filds
aas
dec
lcall
xor
sahf
add
into
xchg
iret
add
sub
xchg
push
cwtl
mov
add
or
or
add
xchg
std
xlat
pop
lds
jo
and
mov
addr16
add
ffreep
aam
sbbl
inc
into
dec
stc
cmpsl
cmpsl
add
addr16
fs
xchg
cltd
pop
dec
mov
je
out
iret
fistl
mul
in
pop
stos
add
call
out
popa
pop
repz
cwtl
test
sub
mov
in
mov
repnz
fsts
icebp
xor
xor
out
mov
xchg
cs
add
js
adc
nop
loope
add
add
or
ja
out
xchg
sub
sahf
fidivrl
adc
add
cwtl
das
in
add
jbe
test
pop
add
mov
pushf
cmpsl
add
lret
jg
xchg
ret
push
enter
pop
jo
cld
add
dec
push
jb
hlt
dec
xchg
dec
insb
pop
push
push
xor
push
pop
cwtl
pop
cwtl
mov
jb
pop
or
sbb
cltd
insl
scas
sbb
sbb
mov
xor
and
xchg
add
push
add
sbb
add
add
lret
movsb
roll
add
sbb
fwait
pop
test
lret
add
mov
lahf
sub
shll
xor
fidivrl
dec
sbb
xor
add
mov
sar
lret
adc
push
add
lods
or
fsubrs
jne
push
inc
mov
mov
xchg
push
ss
popf
add
xor
outsl
push
test
and
cld
ret
scas
and
movb
and
mov
add
add
add
fwait
mov
pushf
outsl
push
pop
sbb
addr16
cmpsl
push
and
jg
add
xor
fcmove
adc
mov
scas
cmp
or
loope
xor
mov
lea
dec
sbb
pop
inc
gs
pop
mov
jmp
lret
sub
stos
mov
add
rclb
add
test
sub
add
stc
add
push
and
add
incl
out
movsl
jle
mov
in
shll
xlat
push
add
inc
scas
jmp
je
adc
and
lods
cmp
sub
inc
pop
adc
xchg
test
and
out
add
add
pop
in
test
nop
push
shlb
hlt
pop
push
push
addb
add
lea
add
je
xor
push
add
add
add
fiadds
adc
jo
add
imul
stos
roll
mov
addr16
add
sub
pop
je
gs
lahf
xchg
jo
dec
mov
add
pop
mov
filds
push
ds
inc
add
or
xlat
cwtl
sub
add
push
add
add
frstor
mov
in
mov
add
and
sbb
shrb
cmpb
add
add
data16
lcall
mov
fistpl
inc
fdivl
pop
inc
inc
push
sti
test
aad
xor
mov
pop
add
mov
jge
adc
inc
pushf
or
mov
mov
xchg
mov
add
mov
jl
popa
insb
out
aaa
dec
in
pop
out
lods
testb
in
rcr
sub
or
sub
dec
mov
jno
popa
loopne
xor
inc
loope
addb
fstp
fsincos
dec
and
and
cmp
push
xor
mov
stos
dec
add
movsb
add
jp
push
out
add
in
addl
and
push
push
push
stc
xchg
and
std
or
call
test
push
addl
adc
or
fidivl
aas
arpl
shl
xchg
mov
mov
in
jns
add
cwtl
pop
subl
adc
pop
add
push
add
repnz
pop
ljmp
into
fdivp
jo
inc
insb
sub
popa
mov
push
clc
dec
repz
aam
sbb
mov
cld
xor
add
add
add
xchg
scas
lock
and
adc
jge
les
and
pop
call
xchg
or
fstl
add
pop
popf
rcll
add
xchg
lock
mov
add
fiaddl
pusha
es
std
mov
cmp
lock
push
jge
add
int3
inc
iret
and
or
imulb
in
popl
std
js
into
shlb
movsb
and
subl
add
pop
pusha
mov
gs
cltd
shrl
lea
mov
test
sub
gs
mov
xor
movsb
pop
add
rcrl
js
shlb
out
into
loopne
negl
and
cmp
gs
or
je
or
and
and
push
pop
fwait
lcall
lret
push
out
test
pushf
jnp
int
lcall
adc
inc
popf
add
lahf
nop
push
or
movsl
mov
fsub
add
sbb
cmp
lcall
sti
adc
add
mov
mov
inc
decl
jbe
test
push
adc
add
pop
arpl
pop
outsl
movsl
test
shlb
outsl
sbb
rorb
or
loop
sub
loop
subl
idivb
inc
dec
outsb
lods
add
or
add
mov
mov
xchg
lods
add
xchg
add
data16
scas
icebp
mov
xor
sbb
add
xchg
and
add
lret
jo
shlb
jle
add
mov
mov
loope
fnstenv
mov
xchg
adc
mov
add
call
add
rorl
pop
add
je
mov
sbb
inc
xor
pop
xchg
or
xchg
add
add
filds
stos
scas
and
stc
xor
xor
aas
mov
add
lods
insl
mov
jle
adc
filds
repnz
push
ljmp
add
adc
insb
nop
lods
jo
pop
jo
mov
lcall
add
push
rcll
add
in
test
pusha
rcll
mov
pop
es
ret
and
add
inc
addb
addb
lret
les
flds
xorl
lock
mov
xchg
add
and
dec
inc
dec
outsb
or
add
scas
push
pop
mov
stos
add
lods
mov
cltd
enter
and
xor
xor
cmp
jp
int
inc
int3
or
inc
aam
popa
outsb
add
scas
add
in
sub
add
pushf
repz
stc
imul
cmp
pop
add
nop
add
jge
jl
lea
xor
je
push
cmc
or
leave
add
call
dec
outsl
xor
xchg
add
push
sub
testb
and
out
add
cvtpi2ps
jno
add
inc
add
inc
mov
test
dec
sbb
es
inc
scas
fwait
xor
adc
sbb
add
add
out
insb
inc
popa
add
enter
mov
sbb
dec
iret
and
dec
cmpsl
fucomp
inc
push
xor
and
dec
jns
test
jp
add
stc
add
push
mov
ret
insb
inc
idivb
cmpsb
inc
out
faddl
js
dec
add
add
mov
arpl
pop
add
sub
loop
out
popa
jb
dec
push
pop
cmp
aad
stos
dec
add
gs
mov
addr16
pop
add
imul
add
shlb
sub
jbe
add
lods
add
push
jb
cmpb
push
and
push
mov
add
out
in
adc
mov
daa
xchg
sti
fildll
mov
movsl
loopne
xlat
xchg
mov
call
mov
popa
pop
dec
jb
fwait
testb
int
and
ret
stos
or
lods
push
jge
ret
push
sub
jge
adc
sbb
in
outsb
lock
out
push
frstor
ljmp
cltd
xchg
pop
dec
mov
cmp
out
mov
test
insl
xchg
addr16
out
push
mov
jae
int
push
iret
cli
push
mov
sbb
data16
repnz
mov
into
or
add
xlat
push
push
cmp
ret
xor
sbb
cmpsl
add
ss
push
add
lock
aas
adc
add
and
add
and
scas
jecxz
add
jge
lahf
cmp
cmpsl
cmc
jl
add
pushf
add
repz
add
add
adc
enter
fwait
pusha
jne
mov
pop
stc
psraw
enter
cmp
test
mov
jle
dec
inc
pop
sarb
dec
mov
add
imul
xchg
fmul
rcrl
ffreep
add
cwtl
cmp
and
mov
mov
gs
pop
xchg
add
mull
or
pop
ret
add
xchg
xchg
dec
jge
jg
sub
mov
mov
push
mov
leave
test
lock
dec
mov
pop
cli
or
repz
inc
pop
dec
adc
hlt
add
pusha
or
cmc
std
pop
add
add
dec
sub
cltd
pop
add
popf
pop
add
ret
lcall
mov
test
sbb
add
add
mov
add
mov
faddl
add
sub
push
cmpsl
add
add
add
movsb
out
inc
push
lret
in
pop
inc
add
mov
and
enter
inc
add
adc
mov
add
ljmp
jno
jb
mov
fidivs
and
xor
xlat
or
mov
dec
push
mov
xor
scas
inc
out
add
pop
fsubr
imul
adc
xor
add
pop
in
rol
mov
push
sub
add
cmp
jae
push
repnz
xor
dec
insb
jae
insl
add
in
cltd
int3
xchg
lea
ss
add
cmp
pop
push
test
xchg
add
add
add
imul
add
das
scas
add
mov
imulb
rolb
adcl
xor
push
cmpsl
lods
nop
es
pop
sub
xchg
lcall
lahf
xor
push
pop
aad
std
test
jecxz
sbb
add
outsl
or
add
std
and
iret
add
scas
or
aas
lods
enter
aad
test
imul
mov
add
mov
adc
cs
xor
or
add
xchg
and
add
mov
stc
mov
mov
xor
adc
and
in
inc
add
push
movsl
and
mov
dec
pop
lea
push
sub
cmp
scas
add
xor
sbb
or
out
ficoms
pop
nop
out
jmp
jp
clc
lahf
xchg
dec
in
push
jnp
push
inc
shl
pop
inc
cmp
cmp
arpl
arpl
mov
mov
add
xor
pop
xchg
pop
cmc
sbb
pop
mov
incb
lods
pusha
jle
and
cmpsb
sub
add
add
popf
jg
cld
test
popf
lcall
push
pop
pop
mov
push
imul
lea
fsts
sbbl
adc
adc
xchg
stos
imul
adc
cs
addl
aam
mov
mov
add
scas
int3
aaa
xchg
outsb
pavgb
and
loopne
rep
jg
cmpsb
and
out
js
jecxz
and
shrb
mov
test
cs
add
jns
sub
add
add
psllq
int3
push
in
outsl
movl
stc
out
insb
arpl
push
add
divl
popa
repnz
cmp
push
test
add
inc
add
pop
into
xchg
inc
adc
jno
add
movl
mov
xor
mov
xor
jge
lret
clc
sbb
testb
mov
xchg
or
sahf
lods
js
rcrl
xor
xchg
lcall
cmpsb
leave
and
popa
clc
nop
mov
xchg
in
dec
jo
notl
lea
jns
imul
fadds
icebp
imul
or
fdivs
or
sarl
arpl
test
popf
add
in
int
mov
je
push
add
mov
or
fdivl
mov
dec
sub
scas
or
add
inc
sbb
and
add
int
jge
dec
mov
adc
sub
mov
daa
lcall
add
xchg
pop
ret
ss
mov
xchg
fidivrl
xchg
popa
mov
push
in
ss
loopne
mov
push
mov
push
pop
lods
mov
inc
xchg
fucomip
push
popa
xor
cmp
add
add
cmp
sub
mov
jl
es
arpl
pop
imul
icebp
inc
add
push
jae
cmc
out
mov
inc
push
inc
mov
add
pop
pusha
loop
popa
movb
sub
add
xchg
mov
fisttpll
fwait
add
insb
les
sbb
js
cltd
xor
repz
dec
aad
jnp
arpl
fisttpl
add
ljmp
in
mov
cs
cltd
mov
mov
rorl
inc
add
add
rolb
mov
add
cmp
pop
add
aam
shlb
jle
pop
in
pop
add
aas
fldl
fwait
xchg
mov
rolb
sbb
xchg
push
test
adc
out
pop
sub
rolb
push
inc
jp
stc
add
mov
mov
xor
hlt
mov
cs
dec
js
xchg
adc
adc
add
add
adc
clc
add
movsl
js
or
xor
ds
add
pop
jle
mov
ficoms
out
cli
in
mov
sbb
in
fldl
adcl
mov
aas
loope
test
or
test
cmc
lods
sbb
mov
loopne
fadds
das
jmp
fcomps
dec
testb
add
pop
mov
xchg
add
stos
add
jle
cmp
xchg
test
int3
pushf
dec
sbb
jecxz
mov
and
sub
add
test
inc
mov
pop
push
add
test
add
mov
popf
xor
add
mov
mov
or
jle
pop
dec
std
pop
xor
mov
lret
mov
cmp
sahf
push
pop
hlt
add
iret
add
lds
in
pop
in
add
or
pop
add
mov
repz
jg
out
push
adc
adcb
dec
jmp
mov
iret
xor
movl
and
adc
inc
add
fnsave
arpl
add
add
clc
lret
cmp
pop
add
add
gs
xchg
in
add
mov
mov
add
xchg
xor
push
int
push
xor
jecxz
js
push
push
mov
add
inc
ficoms
cmp
daa
aaa
sbb
js
add
popa
dec
and
adc
test
or
stos
mov
or
add
lea
ja
mov
int
loop
push
xor
jnp
and
cli
mov
and
inc
mov
adc
cmp
outsb
xor
pop
sub
mov
add
push
out
dec
xchg
sub
mov
in
jmp
fnstsw
add
imul
fadds
add
hlt
dec
shl
mov
xchg
or
stc
stos
jns
cmp
adc
aad
daa
repnz
enter
inc
shrl
cmp
pop
cmc
xor
shlb
add
outsb
mov
popf
xor
fwait
mov
testb
subb
icebp
sbb
lods
in
adc
pop
xchg
adc
mov
insl
in
repz
cmp
in
bound
call
cld
nop
addl
adc
cmp
shrb
mov
fists
mov
sbb
and
add
sub
cmpsb
mov
pushf
xchg
cli
and
cmc
mov
xchg
in
add
outsb
negb
sbb
ret
hlt
les
jno,pn
or
imul
insl
scas
aam
ss
in
lcall
jecxz
mov
add
push
mov
add
outsl
cltd
push
mov
jno
test
mov
cmpsl
movsl
imul
sahf
push
mov
jne
jge
outsl
lds
test
cmpsl
or
mov
mov
lea
pop
nop
mov
pmaxub
stos
shrb
jge
mov
jge
inc
dec
fwait
jne
aaa
cmp
adc
loop
inc
add
xor
dec
packssdw
jg
sub
cmpsb
in
arpl
add
arpl
aas
insl
int
test
aas
dec
bound
jae
outsl
mov
push
daa
pop
in
enter
rcrl
add
pop
add
push
flds
add
iret
xchg
inc
ja
arpl
inc
or
add
pop
sbb
filds
push
sub
push
test
xchg
add
adc
je
sub
fwait
cmc
and
test
jp
iret
add
repz
cltd
inc
ret
mov
pop
mov
push
and
xchg
pushf
sbbb
call
dec
push
std
in
cmpsb
js,pt
les
add
cld
xor
imul
pop
sub
test
add
mov
cmp
jge
sbb
add
add
les
je
std
jno
pushf
pop
incb
add
sub
xchg
push
add
jo
incl
aad
dec
lea
fneni(8087
xorb
inc
add
das
add
popf
adc
pop
sbb
adc
fwait
inc
add
jnp
dec
add
push
pop
mov
sub
test
jge
mov
add
ror
cmp
cmpsb
call
xchg
daa
lock
adc
add
pop
in
ffree
dec
add
loop
in
scas
repz
je
rcr
add
dec
push
test
sub
push
stc
or
loopne
dec
jmp
pop
ljmp
lods
inc
push
or
pop
stos
lea
adc
ljmp
faddl
xchg
add
add
scas
cwtl
shlb
inc
cmp
and
cltd
in
fisttpl
mov
addr16
xchg
das
enter
add
xchg
push
clc
scas
add
es
pop
imul
gs
adcb
cmp
dec
std
add
mov
xlat
ljmp
mov
pop
lds
ja
pop
pop
add
mov
jno
sbb
mov
add
pop
mov
je
jmp
movsl
insb
out
add
rol
sbb
iret
out
inc
add
add
and
pop
lret
add
scas
sub
add
stos
inc
sti
add
inc
or
loopne
mov
adc
icebp
and
dec
xor
add
add
movsl
out
jecxz
in
cmc
test
add
sub
lahf
add
pop
hlt
stos
add
gs
and
popf
ficoms
insb
mov
sbb
imul
shl
add
adc
arpl
mov
sbb
hlt
fwait
scas
dec
push
jmp
cmc
arpl
add
je
addb
out
and
add
or
sub
mov
sbb
into
jmp
addr16
and
add
cwtl
inc
sbb
addl
paddw
mov
mov
push
insl
dec
xchg
shl
pusha
jecxz
push
pop
or
or
lcall
aaa
bound
jp
xchg
dec
dec
faddl
aam
jae
ja
adc
or
test
push
add
mov
push
enter
adc
add
add
out
mov
mov
ljmp
int3
jnp
loope
and
xor
pushf
add
aas
add
outsb
movsb
inc
mov
ret
add
and
aas
push
xor
push
add
mov
add
shlb
popa
das
popf
add
cs
add
ds
add
sub
xchg
and
bound
leave
dec
xor
adc
leave
xor
cltd
mov
fildl
fisubl
ret
pop
imul
jecxz
pop
jno
pushf
in
pop
add
fldenv
add
add
add
ret
gs
fbld
int3
add
mov
pop
push
add
es
add
xchg
push
lds
jbe
fbld
inc
jae
out
add
daa
jne
cmc
xchg
das
pop
cs
dec
mov
icebp
std
lcall
leave
push
lds
pusha
subl
sub
pop
cli
adc
pop
idivb
inc
or
jge
call
add
das
add
add
jle
add
in
sub
dec
add
pop
add
pop
inc
pop
fadds
adc
bound
mov
insb
inc
sub
pusha
pop
add
inc
cmc
jp
out
gs
push
dec
mov
cltd
sub
and
rclb
inc
push
jg
mov
dec
add
out
add
add
out
add
mov
add
outsl
mov
pop
jge
xchg
repnz
imul
push
mov
fdivrl
es
neg
add
push
xor
or
mov
fmull
add
push
xor
movb
adc
test
dec
lock
add
emms
mov
je
sub
mov
add
cmp
ret
dec
inc
clc
fcmovbe
mov
jo
mov
cmp
xchg
mov
pop
add
aaa
jnp
cmp
add
sbb
jge
mov
sti
ljmp
xor
popf
lcall
lcall
mov
cmc
and
sbb
cmpsb
clc
dec
add
or
test
pusha
mov
je
fcmovb
xchg
clc
mov
mov
movsb
cmp
out
fcoms
aaa
dec
add
movl
pop
add
in
add
dec
sub
addb
fistpl
fildl
add
add
jmp
dec
in
dec
mov
sub
inc
call
adc
test
shll
aam
add
mov
add
sbb
push
das
aaa
mov
jle
push
adc
not
fldenv
cmp
sub
cmp
dec
sub
push
in
mov
add
add
add
add
add
in
cmp
ret
add
or
or
add
mov
repz
xor
fidivrs
adc
cmp
movsl
jp
lcall
dec
add
and
iret
mov
cwtl
add
jns
cltd
pop
hlt
and
int
xchg
fcmovb
xor
adc
xor
cmp
xchg
les
and
rcrl
sbb
or
scas
cmpsb
fcom
div
ret
jb
test
cltd
dec
cmp
sbb
mov
add
cld
jmp
add
mov
add
scas
pop
sbb
sarb
in
mov
or
push
add
arpl
push
mov
dec
repz
mov
jns
add
push
pop
xor
sub
jb
or
cmp
add
add
icebp
push
mov
sti
add
jnp
push
int
cmp
clc
add
sub
aaa
iret
pop
add
addb
fidivrs
add
ja
clc
sahf
movsb
andb
add
imul
add
inc
push
scas
adc
fldl
or
gs
or
enter
bnd
push
xchg
pusha
push
pop
push
add
andb
xchg
iret
cwtl
xchg
add
out
fs
xchg
or
pop
sar
dec
out
dec
jo
and
add
add
dec
add
and
inc
jno
inc
add
jnp
outsl
add
jmp
mov
cmp
xor
and
outsb
subb
loope
push
mov
push
push
push
aad
into
loopne
add
cwtl
sbbb
pop
push
xchg
pop
fcoml
add
xor
arpl
jo
pop
pop
lcall
adc
movsb
or
pop
push
call
sti
xorl
jno
iret
fldl
cmp
lea
popa
lock
addr16
add
testb
les
add
incl
xor
mov
sub
push
pop
xor
or
scas
sbb
add
inc
sahf
pop
aaa
add
sub
add
test
xor
add
add
imul
dec
and
fiaddl
movsb
test
inc
mov
add
sub
add
clc
xchg
jo
mov
jnp
mov
imul
xchg
fcmovu
mov
push
mov
push
add
sub
add
and
maskmovq
testl
add
jmp
popf
add
cli
xchg
aas
add
ss
mov
xorb
push
cmp
inc
jmp
arpl
jno
inc
stos
cwtl
in
xchg
insl
mov
fs
add
and
mov
stos
scas
pop
pop
in
add
stos
add
inc
lock
inc
enter
das
xchg
lret
mov
xchg
outsb
pop
out
add
push
add
lret
in
popf
adc
push
ljmp
lcall
sub
or
mov
rorl
push
mov
adc
push
leave
bndstx
mov
push
pop
cmpsb
sub
add
arpl
sub
xchg
icebp
sahf
add
jb
idivl
lods
push
fwait
mov
adc
push
jl
lds
loope
or
popf
loopne
sub
les
lret
add
outsb
cltd
lcall
dec
jmp
lcall
jae
adc
add
mov
test
jg
sbb
xor
test
xchg
cmp
add
mov
mov
outsb
aam
cmpsb
stos
add
or
cli
jge
lock
aad
cmpsl
and
fnsave
add
or
stc
add
scas
push
xlat
mov
pop
fcomps
mov
lea
pop
mov
add
add
cmpsb
movsb
push
add
xchg
mov
fld
jb
and
imul
ret
pop
add
fimull
adc
out
inc
das
jle
push
movsl
jns
repz
dec
push
sbb
or
lcall
xor
add
add
scas
and
cmp
cmp
or
pop
push
xor
aaa
jge
jns
mov
aam
add
pushf
xchg
xchg
jb
mov
ret
mov
sbb
dec
dec
xchg
repz
jl
addr16
ljmp
lock
adc
pop
add
cmp
shlb
sub
sbb
jno
pop
add
arpl
push
add
pop
mov
xchg
add
or
mov
clc
jo
adc
lock
test
ja
and
sbb
loope
pusha
cwtl
xlat
gs
mov
add
lock
pushf
insb
cli
inc
pop
xlat
insl
dec
jns
adc
sub
les
movl
mov
mov
jae
jae
jg
divb
inc
add
pop
ss
jae
pop
lea
mov
mov
sti
xor
add
or
adc
cli
leave
add
xlat
int
call
pop
mov
mov
mov
push
mov
add
add
mov
pop
add
sub
lods
cmpb
out
add
in
movsb
add
add
inc
ljmp
les
and
cli
dec
shlb
mov
add
loop
jo
pop
pop
movsb
aad
sbb
scas
or
popa
dec
add
mov
and
sub
mov
out
add
adc
push
testl
mov
xor
fsubrp
sbb
cmp
cmp
jo
and
add
daa
add
add
inc
xchg
mov
sub
cmpb
mov
xchg
jmp
js
stos
push
push
pop
sub
or
into
sub
dec
xorl
push
in
sbb
cmp
loop
mov
adc
pop
mov
lret
sbb
push
mov
mov
cmp
arpl
shrb
outsl
xor
shlb
imul
cmp
movsl
pop
pop
xor
xor
lcall
inc
push
pusha
pop
pop
adc
add
cli
hlt
add
je
mov
mov
in
push
cmp
push
add
push
inc
out
push
add
add
pop
leave
pop
push
xchg
cltd
jge
xor
insb
subl
flds
lcall
shlb
andl
stos
mov
xchg
loop
add
test
ret
add
mov
sbb
and
mov
test
or
popa
sti
jo
das
xchg
jne
add
gs
add
add
add
inc
add
push
mov
jl
and
fisttps
loopne
bound
xor
add
data16
jmp
jl
sahf
add
in
add
stos
xchg
add
xchg
mov
sbb
add
push
pop
or
lock
push
jb
mov
fs
loopne
call
xor
rolb
sub
and
rorl
and
ljmp
cmp
add
push
test
push
and
jbe
cmp
add
add
add
jg
lsl
add
xlat
jg
imul
rcrl
negl
xchg
js
sub
sbbb
aaa
pop
loope
popa
sub
mov
orl
enter
jbe
stos
pop
and
jge
into
or
dec
ret
mov
pop
rclb
fsubl
popf
faddl
sub
rolb
loope
push
mov
add
jbe
rcrl
or
cmp
add
pop
xor
mulb
std
jbe
test
pushf
mov
adc
stos
adc
icebp
push
scas
add
daa
in
jle
push
add
inc
negb
push
les
sub
sbb
aam
add
mov
push
cmpsb
jbe
sub
dec
mov
mov
pop
insb
jo
push
scas
dec
xor
stc
cli
add
add
test
add
dec
rcl
clc
jae
out
bound
push
add
xchg
outsl
test
add
cli
push
out
push
imulb
cmp
int3
add
divb
push
daa
push
xchg
arpl
dec
sub
add
xchg
jns
mov
inc
aam
add
xor
add
xor
sub
fs
adc
scas
pushf
mov
push
pop
or
or
add
leave
or
ret
inc
or
add
in
outsb
adc
inc
and
call
inc
insl
inc
cmp
aaa
sbb
pop
mov
sbb
xchg
stos
cmp
cmp
ret
ljmp
nop
loop
int
sub
je
cli
loopne
dec
test
and
cmp
addr16
in
dec
and
roll
dec
cmp
xlat
sbb
dec
sti
mov
sub
pop
mov
hlt
divb
mov
mov
mov
enter
in
out
jle
push
inc
dec
sub
add
movsl
test
bound
cmpl
fwait
and
xchg
jbe
out
sub
cwtl
sub
insb
addr16
jge
icebp
jbe
mov
test
sub
shr
movsb
data16
fisubrs
add
or
push
push
push
push
inc
dec
popf
ss
add
inc
out
fldl
movl
pop
add
das
add
jp
adcl
push
pop
clc
fwait
adc
add
in
add
cli
call
push
or
mov
lret
add
clc
mov
lret
push
sbb
add
dec
cmp
testb
or
sub
add
cmp
mov
sbb
push
add
sbb
push
sub
jne
loop
adc
mov
cli
pop
rclb
movsb
xchg
mov
mov
loop
cld
shlb
dec
sub
jbe
add
faddl
xchg
lock
mov
push
dec
pop
inc
xor
sbb
add
out
std
push
sbb
sbbl
add
push
add
xor
inc
incb
cmp
add
add
sbb
iret
mov
lret
jg
movb
hlt
add
mov
and
xlat
inc
popa
xchg
add
lds
sbb
add
jecxz
aas
inc
cmpsl
add
xchg
sbb
inc
cli
sbb
push
in
xlat
mov
inc
mov
add
or
dec
inc
adc
js
stc
sub
push
adc
mov
mull
mov
dec
cmp
inc
push
push
adc
mov
outsb
push
add
insl
xchg
or
lods
add
jmp
push
inc
arpl
sub
add
pop
testl
fcomps
xor
push
loop
cmp
mov
inc
pop
add
js
sub
inc
add
mov
add
fists
mov
and
int3
add
lret
leave
add
add
rolb
jae
mov
push
mov
add
mov
add
inc
jo
mov
push
mov
int
inc
enter
mov
pushl
and
adc
fnstsw
jnp
add
pop
rorb
adc
push
fsubl
add
mov
xchg
xlat
add
mov
aam
dec
pop
sub
mov
fistps
add
push
pop
outsb
loop
cmp
pop
sti
jecxz
lea
lcall
pop
jl
or
mov
mov
jne
mov
inc
dec
jno
shll
stos
daa
ljmp
sbb
add
add
pop
mov
hlt
jmp
sub
and
pop
mov
push
outsb
imul
pop
push
inc
add
ret
add
adc
inc
jne
cs
test
mov
outsl
ja
leave
adc
mov
testl
ret
xor
mov
sub
add
inc
dec
push
push
insl
loopne
pop
repnz
mov
mov
add
pop
fidivs
movsl
lock
lea
sub
add
xor
mov
pushf
push
test
jo
sub
and
mov
jecxz
add
dec
mov
test
std
fwait
push
pop
xorl
xor
mov
ss
pop
add
loop
adc
shlb
movsl
push
scas
dec
add
sub
xchg
push
adc
mov
ss
in
push
add
jmp
pop
jne
or
stos
push
hlt
lret
add
mov
cmpsb
dec
nop
bound
add
js
dec
mov
out
push
ljmp
mov
cmp
nop
mov
mov
add
jmp
and
mov
mov
jnp
mov
ret
mov
bnd
lods
add
jo
data16
pop
push
add
mov
and
or
es
dec
adc
outsl
jae
call
pop
jns
mov
add
jno
arpl
andl
dec
push
inc
add
daa
je
mov
xchg
pop
add
add
cmp
mov
sahf
add
mov
sub
jae
add
mov
mov
sete
dec
add
cs
add
dec
aaa
stos
shrl
idivb
rcll
add
insl
cmp
sub
or
mov
daa
movsl
mov
insl
cmpsb
aas
fisubrl
test
add
xchg
add
pop
or
out
add
cmp
dec
std
xlat
jp
add
add
push
push
cmp
or
adc
add
push
add
fistpll
mov
lods
in
adc
lret
sbbb
add
outsb
sbb
sarl
cmp
daa
ret
nop
enter
add
jge
add
movsl
imul
dec
pop
test
aas
movl
loopne
xlat
push
pop
xchg
jo
fistl
mov
add
daa
inc
add
inc
xchg
movsb
and
sub
and
ret
add
cld
jb
sub
sbb
mov
outsl
and
jae
inc
xchg
mov
mov
add
outsb
xchg
daa
add
cmp
mov
xlat
mov
in
push
pxor
cld
mov
add
add
add
jge
sbb
inc
cmp
add
pop
popa
add
roll
incb
ds
cmp
sbb
imul
push
fincstp
fs
pop
xor
mov
push
movsl
mov
adc
lds
icebp
out
add
mov
and
sbb
inc
out
imul
add
push
pushf
jnp
gs
cmc
add
jmp
add
inc
stos
xchg
xchg
pop
icebp
mov
aas
jae
or
xor
mov
push
ljmp
jge
adc
add
aad
cmc
and
mov
lret
dec
std
pop
not
dec
mov
jns
xor
xchg
add
inc
mov
mov
mov
xchg
lret
xchg
mov
inc
add
test
mov
cwtl
lcall
add
fsub
sbb
push
dec
dec
lcall
sbb
and
pushf
add
or
add
add
inc
and
movsb
out
xchg
imul
jo
xor
mov
xchg
add
lods
jne
cmp
stos
add
sbb
cmp
fwait
imul
sub
xor
jbe
ja
lret
mov
add
or
ss
in
cmp
pusha
int
add
add
and
push
adcl
inc
add
add
je
ds
fcmovbe
and
roll
int
pusha
mov
sbb
lock
sbb
pop
xchg
ljmp
sbb
das
es
nop
push
or
lret
add
push
add
add
push
xchg
add
sbb
shll
adc
popf
ss
dec
hlt
cld
enter
adc
adc
repnz
sub
mov
repz
push
orb
insl
sub
orl
out
sti
stos
pop
mov
repnz
lods
lret
push
popa
shrb
add
xchg
add
mov
movsb
add
add
out
lret
ljmp
cmc
push
cmpsl
dec
and
out
add
testl
sbbl
xor
sbb
dec
cmp
cs
cltd
dec
sahf
dec
mov
sbb
pop
ds
xchg
pop
sub
sub
inc
shrb
add
fisttpll
in
cltd
jo
lcall
cmp
loope
sbb
pop
mov
icebp
cmpl
jbe
xor
add
fnstenv
aam
divl
pop
mov
add
cmp
mov
mov
outsb
push
lods
push
mov
sbb
addr16
out
rolb
sbb
jns
lock
or
pop
adc
push
add
pushf
add
data16
jno
int3
ret
sarl
mov
xchg
push
add
pop
jne
inc
or
test
out
pop
pop
out
sbb
and
push
addr16
inc
and
add
add
mov
ficoms
mov
inc
cmpsb
mov
mov
rclb
xchg
cltd
sub
sub
outsb
stos
fisubrl
out
imul
sar
mov
push
ss
nop
add
cli
add
push
mov
test
cli
adcb
lret
notb
jnp
std
pop
jmp
cwtl
xchg
adc
mov
mov
loope
test
dec
inc
adc
mov
cmpb
and
mov
out
adc
jp
add
pop
imul
popf
inc
test
nop
insb
add
mov
into
arpl
sti
cmpsb
mov
std
dec
leave
ljmp
cmp
testl
cmp
dec
fadd
xlat
fsubrs
fwait
pop
mov
mov
cltd
sbb
add
and
xor
mov
push
add
mov
in
xchg
inc
repnz
in
mov
cmp
push
insl
dec
js
jno
je
mov
push
lods
movsl
sbb
cmp
add
or
rolb
fdivr
jnp
mov
xchg
or
dec
push
ds
xor
addl
mov
fdivs
arpl
dec
jmp
xchg
pop
mov
ss
add
mov
xor
mov
adc
xor
dec
test
xchg
iret
idivb
arpl
push
popa
xor
xchg
pop
mov
filds
mov
mov
push
cld
daa
add
push
arpl
jb
mov
adc
adc
ljmp
leave
aam
packssdw
les
pushf
push
flds
fwait
enter
icebp
mov
xchg
roll
sbb
fstps
in
xor
jecxz
mov
mov
adc
and
int3
dec
cmp
mov
aaa
pushf
mov
bound
add
movsb
cltd
pop
adc
testb
in
inc
jp
les
jecxz
shlb
or
sti
cmp
mov
repnz
add
shll
sahf
add
incl
dec
jp
arpl
mov
xchg
and
mov
aam
in
mov
pop
xchg
or
mov
inc
dec
sahf
cltd
and
lret
mov
sbb
stos
ficoms
pop
jnp
push
mov
lds
je
addb
sub
std
sub
scas
aam
add
in
add
gs
sub
add
imul
add
in
ss
enter
cmp
cmp
lds
leave
in
xor
loopne
pushf
inc
jno
adc
pop
cltd
roll
ss
pop
fdivr
add
add
add
xchg
addl
mov
out
xorl
orl
cmc
lret
xlat
add
out
clc
jmp
outsb
add
inc
in
dec
icebp
std
fsts
add
mov
sub
mov
dec
mov
sub
mov
cmp
jb
add
jo
add
test
les
inc
adc
inc
mov
add
flds
sbb
add
add
dec
jp
shr
enter
or
mov
dec
adc
pushf
add
popa
xchg
es
imul
mov
scas
mov
outsl
pop
push
aam
add
add
jno
or
rolb
xchg
add
mov
gs
mov
xchg
clc
or
addr16
xchg
filds
add
mov
dec
addr16
outsb
bound
add
outsl
lds
xor
inc
outsb
and
or
push
lcall
inc
ficoms
test
xor
cmp
add
dec
mov
pop
push
sti
imul
jbe
flds
flds
inc
adc
xchg
push
sub
inc
cs
cli
ret
sub
outsb
adc
addb
inc
daa
xchg
ljmp
fdivrp
in
dec
fcompl
xor
rolb
mov
rclb
mov
and
add
xlat
sti
out
hlt
das
pop
xor
rcrb
add
pop
sti
mov
ss
add
pop
loop
in
push
fsubr
sbb
mov
les
fiadds
cli
pop
js
outsb
and
pop
sub
or
mov
push
mov
fildl
xchg
sbb
lcall
bound
push
jnp
mov
add
mov
cmp
jge
mov
scas
sub
sub
pop
jle
push
mov
lcall
adc
in
pop
fwait
movsb
test
sbb
add
cmp
sub
dec
test
sub
dec
mov
fcompl
enter
push
jns
or
add
mov
orl
jle
cli
int
pop
pop
inc
out
dec
push
xchg
add
add
cwtl
mov
outsb
jmp
inc
es
mov
jae
mov
sub
add
mov
adc
addr16
jecxz
out
cmp
test
jb
aam
fcoml
cmpsb
lahf
xchg
pop
movsl
sbb
xor
fsubl
mov
addl
out
sbb
sub
mov
dec
jno
mov
loop
xor
test
inc
add
mov
sub
ljmp
xchg
leave
inc
adc
inc
push
outsl
std
iret
gs
xchg
iret
or
add
mov
fwait
add
cli
mov
jnp
push
lds
std
cmpsb
jae
and
push
cmp
shr
int3
add
aas
adc
test
fmulp
push
bound
test
testb
add
push
push
cwtl
cmp
test
add
loop
call
icebp
not
dec
mov
add
mov
add
and
push
xor
outsl
mov
add
in
mov
push
cmpsl
push
popa
add
stos
add
adc
jo
add
mov
xor
jp
mov
adc
je
add
xor
scas
push
add
movsb
insl
inc
roll
scas
fstps
pop
lea
jne
add
jecxz
jno
inc
std
dec
and
and
dec
outsl
cmp
add
faddp
js
add
and
int3
add
and
cli
add
bnd
xchg
add
rclb
sahf
nop
sahf
aad
mov
out
jmp
stc
add
gs
add
cmp
movsb
sub
cmp
outsb
mov
pop
popa
das
lahf
pop
add
out
inc
add
sarb
insb
jmp
daa
adc
or
lock
lods
push
add
sub
add
push
add
cmp
in
add
pop
inc
add
mov
testb
mov
jne
mov
jmp
ficoms
mov
ja
or
inc
das
xchg
add
mov
and
scas
and
out
data16
popa
mov
xchg
push
lret
add
add
cmc
scas
addl
add
cmp
lret
popf
daa
gs
xchg
sub
les
or
inc
mov
jge
imul
incl
aad
add
mov
pushf
bound
adc
or
sub
inc
xor
inc
into
popa
xchg
outsb
pop
mov
sbb
sbb
xor
sti
push
mov
in
popa
cmp
stc
mov
xchg
jns
mov
sahf
xchg
enter
mov
loope
jecxz
jecxz
dec
mov
and
push
add
dec
sub
pushf
ja
imul
adc
cmp
lret
inc
call
pop
sbb
fsubrp
inc
jo
add
pop
xchg
dec
add
outsl
mov
add
lret
pop
jmp
stc
add
mov
mov
adc
test
dec
jmp
lods
test
subl
rcl
inc
pusha
inc
xor
test
mov
ficoml
mov
inc
xor
adc
nop
add
stc
pop
mov
dec
jae
addl
jno
iret
mov
add
call
inc
dec
fwait
pushf
das
enter
xchg
xor
jnp
pop
add
mov
lods
jmp
cld
ljmp
in
dec
pushl
notb
sub
sahf
add
push
rolb
incb
test
add
push
cmp
xchg
xchg
sub
add
daa
add
jge
mov
imul
daa
insl
xchg
jmp
push
hlt
mov
and
add
push
fwait
mov
xchg
dec
jp
push
cmp
lods
inc
dec
add
cmp
pop
loopne
or
mov
roll
cld
and
subl
leave
stos
lea
add
out
push
in
add
fidivl
add
fldlg2
nop
add
movsl
mov
push
stos
jo
mov
or
lods
popa
enter
fcmovu
lret
test
scas
jle
testl
loopne
xor
iret
add
add
pop
jb
cli
in
movsl
or
and
scas
and
aaa
dec
pop
movsl
in
add
dec
add
cld
popf
iret
jp
xchg
dec
cmp
call
cmp
and
aaa
dec
movsb
mov
jge
or
lods
hlt
outsl
add
mov
filds
movsb
std
sub
jle
mov
mov
cmp
lcall
jecxz
and
cmp
cmpsb
cmp
fcom
sbb
xor
add
xor
repz
loopne
sub
mov
and
imul
mov
add
jg
mov
mov
cmp
add
or
cmp
add
fimuls
xchg
test
int3
cltd
push
add
inc
loopne
pop
ficoms
verw
add
adc
clc
mov
add
test
xor
pusha
ss
jo
rolb
lret
cmpsl
mov
ja
loope
aam
popl
rolb
inc
add
dec
in
dec
xor
inc
mov
daa
add
repnz
popa
add
sbb
loop
addb
push
adc
add
add
push
mov
outsb
mov
loopne
add
and
add
mov
xorb
decb
jne
push
add
add
dec
add
shr
lea
dec
pop
push
sbb
sahf
data16
and
addb
push
jmp
xor
into
out
push
imul
add
fstpt
jle
and
sub
dec
dec
shrl
add
shll
test
add
gs
mov
cltd
push
fists
daa
mov
inc
sbb
and
push
sub
cmpsb
sbb
sbb
inc
dec
fst
sti
sub
test
jmp
fidivs
mov
pop
movb
cwtl
mov
adc
cmpsb
testb
insl
push
fs
enter
mov
adc
repz
in
add
add
aam
les
add
lahf
aaa
add
xchg
jns
push
xchg
xor
insb
pop
inc
call
lods
add
repz
cli
and
pop
mov
movsl
add
pop
mov
call
shll
or
mov
xor
inc
in
xchg
add
std
push
add
pop
mov
or
ss
loop
in
dec
sbb
add
cmp
adc
pusha
repnz
pop
pop
ret
imul
std
pop
test
pop
sbb
push
scas
mov
vzeroupper
lcall
mov
sbb
mov
jecxz
mov
lret
in
fs
and
adc
fiadds
arpl
insl
mov
adc
jbe
test
repz
sbb
jns
or
lcall
push
cmp
push
push
add
push
jno
pop
add
and
pop
dec
shl
xchg
mov
mov
inc
add
dec
push
es
cmp
add
mov
or
dec
add
dec
mov
cmc
int3
lods
sti
js
test
push
add
mov
jns
dec
std
push
sub
es
push
mov
rorl
fwait
inc
pushf
and
into
push
fxsave
jns
pop
mov
div
lcall
arpl
add
pop
adc
add
or
cltd
push
add
or
enter
aad
mov
dec
mov
scas
add
cmp
std
shlb
test
in
sahf
add
dec
cmp
test
sub
fs
inc
sub
inc
dec
mov
arpl
xor
test
test
aaa
rolb
add
in
add
addr16
sub
cmp
test
adc
sbb
add
mov
into
xchg
add
and
in
and
add
xchg
mov
fldcw
pop
xchg
pop
push
outsl
aad
cmc
sti
push
shlb
int3
sbb
mov
or
jae
jmp
add
push
push
stos
jnp
mov
and
jl
xchg
add
inc
or
mov
mov
movsb
xlat
cs
mov
cmpl
outsb
add
push
repnz
enter
mov
dec
andb
push
out
cmc
xor
add
inc
add
jne
add
daa
adc
fs
in
ficoml
add
xchg
popa
notl
cmpb
cmp
jno
add
icebp
ljmp
inc
jbe
xor
in
pop
push
dec
popa
add
push
add
pop
into
adc
xchg
add
aas
adc
inc
jo
adc
int3
and
mov
sbb
popa
std
mov
out
push
ficompl
cmp
filds
dec
sbb
outsl
test
push
push
fldl
movsb
inc
cmp
jno
add
cwtl
lock
aad
push
add
movsl
xor
jno
imul
add
inc
push
cmp
add
shr
mov
add
mov
xor
cmpsl
loope
clc
fldl
pop
dec
add
jle
xchg
add
mov
jle
dec
scas
adc
imul
mov
lea
add
dec
add
sarb
mov
fsubl
push
sub
test
cmpsb
push
orb
jp
in
stc
mov
faddl
jb
add
cmp
add
movsl
or
popf
mov
fucomip
jg
inc
ds
aad
jae
pop
jmp
sbb
into
fadds
xor
ja
pusha
add
mov
jl
push
loop
rcr
push
jmp
add
pop
jns
add
or
and
xor
fdivrl
add
pop
mov
jbe
mov
add
movsb
int
dec
stos
dec
add
sbb
shlb
mov
push
add
dec
sub
adc
in
stos
inc
test
add
xchg
jp
xor
out
xchg
jnp
push
xchg
imul
les
push
pop
mov
dec
mov
add
mov
popa
movl
pop
add
push
cltd
shll
mov
daa
add
pop
sbb
add
outsb
pop
scas
xor
inc
data16
jle
sbb
xor
or
mov
jo
mov
sbb
add
loopne
loop
out
add
jmp
jnp
in
dec
fs
dec
dec
xor
add
lods
fbstp
fstl
push
fiadds
cld
cmpsb
mov
lahf
pushf
repnz
dec
lods
add
xchg
loopne
aaa
inc
mov
dec
mov
jmp
clc
stc
jecxz
push
lds
sbb
fmull
adc
insl
rcrl
ja
mov
add
add
cmc
add
and
sbbb
mov
ds
mov
movsb
aas
or
jmp
movsb
ljmp
pop
outsb
dec
push
jnp
std
idivl
shr
std
sbb
mulb
jle
or
sbb
cmc
into
icebp
and
dec
sti
add
or
sahf
and
pop
out
push
lods
add
cwtl
stc
loop
jo
mov
sbb
push
jecxz
das
jno
andl
push
pop
dec
mov
cmc
mov
xor
fs
jnp
dec
test
lods
add
outsl
in
popa
mov
cmp
fwait
or
dec
lahf
scas
jg
dec
dec
test
popf
inc
ds
jb
pop
push
dec
sub
add
mov
or
sub
cmp
shrl
adc
sub
add
pop
pop
xchg
imul
mov
scas
push
pop
xchg
mov
fidivrl
push
sub
add
mov
imul
jg
mov
add
mov
inc
insb
sbb
ljmp
pop
cmp
add
rorl
fwait
enter
xor
adc
aas
cmp
inc
in
add
or
int3
add
loop
in
mov
or
cmp
outsl
mov
lods
lret
mov
push
pop
movups
push
add
inc
int3
insb
xor
add
es
out
ds
fwait
xor
xorb
sarb
add
sbb
and
movsb
mov
mov
cmp
xchg
add
fadd
mov
jo
insb
mov
cmpl
test
add
mov
mov
add
and
xchg
negb
add
loope
lock
add
jmp
clc
mov
cmp
pop
mov
jnp
adcl
imul
jmp
sbb
int
inc
mov
sbb
add
xchg
add
out
fidivl
add
lcall
leave
test
shl
int
jno
nop
add
into
lods
xor
rcr
ret
subb
flds
xchg
inc
mov
push
iret
js
cmp
add
sub
add
mov
add
fsub
aaa
call
ljmp
add
xor
into
mov
mov
mov
fbld
pop
xor
leave
int3
into
cli
test
leave
add
aas
add
and
mov
out
sbb
out
and
mov
and
sbb
pop
add
sbb
pop
xor
mov
test
push
cs
sub
add
cld
push
test
mov
int
add
lea
add
shlb
and
and
push
dec
ja
xor
push
negb
xchg
jns
adc
stos
mov
pop
fcmovnu
roll
add
idivl
add
ret
jae
xchg
testl
test
jae
mov
lret
inc
movsb
in
mov
jmp
sti
pop
dec
aaa
pop
fsubrl
xor
xchg
pop
add
rclb
inc
cmpsl
mov
dec
data16
ss
fs
mov
popf
add
jnp
mov
pop
cmp
cmp
add
divl
sarl
out
add
fnsave
out
add
addr16
in
stos
movb
ret
imul
xchg
cmp
cmp
add
mov
xor
jl
add
in
outsl
xchg
je
adc
and
add
jl
mov
add
push
pop
xor
mov
inc
xor
push
repz
sub
mov
iret
mov
cmp
adc
test
pop
pop
rcrb
cltd
nop
iret
xchg
mov
leave
push
outsb
lahf
in
add
lea
sub
xor
add
pop
inc
je
ret
cmp
aad
getsec
adc
mov
in
add
add
dec
and
mov
mov
sub
fwait
enter
scas
or
pop
add
add
add
gs
incb
adc
lea
hlt
xchg
add
cmpb
sub
nop
addr16
mov
sub
fs
sub
adc
xchg
adc
test
xchg
pop
mov
insb
aam
jmp
jno
ljmp
loopne
out
jecxz
shll
push
sbb
cwtl
addb
inc
js
dec
fsubl
into
stos
push
push
ss
bnd
mov
jbe
adc
cltd
jb
xchg
pop
add
jp
sbb
call
xor
push
pop
imul
or
add
stos
jb
loopne
arpl
cmp
xchg
insb
repz
jb
std
das
jp
mov
xor
dec
stos
push
mov
mov
add
mov
cmp
out
and
adc
mov
mov
mov
add
jge
and
xor
mov
sahf
rclb
cmp
rorl
cltd
das
xor
add
ja
add
sub
cs
add
add
sti
test
jbe
mov
mov
ret
add
add
or
cmp
int3
or
cmp
in
in
jno
push
jecxz
jno
scas
sub
fcoml
push
addr16
or
pop
fsubrp
pusha
add
gs
loope
jbe
xchg
dec
repnz
mov
mov
dec
sbb
add
stos
add
mov
les
stos
xor
add
xchg
pop
mov
sub
xor
jecxz
ret
xor
and
mov
xchg
rcrl
sub
sbb
jg
std
add
loope
clc
rcrb
clc
xor
fcomps
push
insl
jl
or
rorb
loopne
add
mov
or
adc
adc
mov
lret
dec
in
xor
fs
cmp
inc
push
imul
mov
add
cmpsb
xor
add
inc
inc
inc
xchg
push
les
pushf
xchg
and
add
push
filds
jl
jae
movsb
cmp
pop
jae
cltd
out
sub
xlat
mov
scas
or
pushf
add
into
mov
filds
mov
negb
insb
nop
add
cmp
sbb
inc
and
xchg
lahf
out
push
loop
lcall
add
add
cmp
mov
into
xor
cmpb
add
xchg
nop
jl
xor
inc
faddl
xor
inc
in
dec
add
daa
ljmpw
cmp
ds
cmpsb
add
cmp
lahf
inc
incl
pop
jo
jae
aaa
add
jbe
in
adc
inc
add
rcrb
pusha
rorb
cs
add
in
pop
adc
iret
mov
adc
mov
adcl
aad
mov
cmp
xchg
jle
xchg
xor
imul
ja
dec
out
addr16
cmp
jmp
cmc
add
rorl
lods
mov
jecxz
adc
jno
pop
clc
sbb
add
imul
mov
pushf
mov
dec
out
add
sbb
movsl
sbb
inc
xor
xlat
stos
aad
pop
mov
and
outsl
loop
rolb
ljmp
push
leave
repnz
xor
jb
sub
in
pop
lcall
add
ljmp
adc
cmc
sub
mov
pop
test
mov
add
pop
mov
push
add
mov
mov
pop
add
push
and
push
mov
dec
add
mov
jge
es
xor
dec
jnp
aam
add
repnz
cmp
ret
xor
mov
xor
add
add
int
out
inc
jo
mov
stc
pusha
inc
jno
inc
and
push
jb
jnp
in
std
aaa
dec
jle
movsl
mov
mov
mov
adc
push
sbb
add
cld
inc
sbb
dec
lea
push
rcrb
fdivrl
hlt
ja
xor
out
fcoml
mov
and
divb
inc
add
jo
mov
or
nop
push
push
test
add
mov
stc
dec
add
roll
add
ja
or
push
mov
repnz
pushf
or
jg
add
cmc
movsl
xor
sbb
syscall
daa
push
sub
mov
lea
out
lahf
mov
cmp
add
push
add
mov
inc
jbe
dec
fistpll
loope
aaa
sbb
shl
insb
dec
in
addr16
mov
push
fsubr
insl
xor
sbb
imul
ss
add
push
cmp
movsl
cmp
adc
jo
add
sbb
lods
fcomi
add
pop
add
and
ljmp
adc
out
and
add
dec
nop
and
xor
push
xchg
xor
pop
sti
add
xchg
lock
mov
push
in
jecxz
dec
es
jl
das
mov
popf
pop
fs
dec
cmp
jbe
data16
add
cltd
xchg
mov
andb
in
ja
or
xor
popa
jbe
cmpsl
add
cmp
and
addl
inc
add
incl
adc
mov
addr16
inc
push
add
inc
repnz
js
xor
push
fldl
xchg
pop
sbb
add
fisubrs
and
add
add
and
fwait
loopne
cld
ror
push
pop
cmpsl
fiaddl
add
lcall
inc
mov
bsf
mov
in
jmp
inc
fs
cwtl
push
mov
cltd
sarl
add
and
andl
subb
mov
ss
mov
cmc
mov
call
cmp
fs
pop
sub
add
dec
ret
pop
orb
xchg
repnz
pusha
cltd
adc
mov
addl
add
loopne
add
add
stos
sbb
lret
xor
insb
xchg
or
inc
pop
shlb
sbb
pop
ss
sbb
outsl
fmul
cmp
cli
test
add
data16
insl
aas
cmp
add
idivl
jle
add
testl
mov
repnz
popl
in
lahf
add
ja
jbe
inc
rolb
mov
add
pop
ljmp
sarl
into
dec
imul
fwait
xor
push
js
call
sahf
add
sbb
add
add
mov
shl
add
mov
mov
and
pop
add
jns
add
pop
loope
test
jl
add
push
ret
lock
enter
leave
xlat
sbb
or
and
das
push
and
sbb
inc
mov
add
push
inc
add
ja
scas
add
repnz
stc
mov
xchg
test
xchg
test
push
repnz
pop
mov
mov
popf
add
jp
movsl
pop
and
sahf
repnz
inc
dec
in
inc
out
sub
les
mov
jmp
mov
dec
jmp
sub
sbb
add
int3
pop
mov
mov
mov
ljmp
cmp
ss
dec
dec
push
fwait
push
sub
mov
shrl
iret
add
das
and
aas
add
incb
mov
add
pop
mov
pop
lds
dec
addl
xor
sahf
add
rorl
leave
int3
inc
jb
js
mov
and
data16
fisubrs
xchg
or
cmp
dec
ljmp
sub
imul
push
mov
loope
scas
xchg
dec
mov
out
xor
out
pushl
push
cmp
out
loop
lahf
test
shrb
outsl
testb
adc
dec
test
xchg
add
jl
cmp
rolb
scas
fbld
jno
divb
jecxz
mov
es
int
je
dec
lret
in
dec
or
inc
jg
xlat
push
xlat
mov
les
mov
test
and
add
shrl
add
shl
jne
int
repnz
jae
add
shlb
add
lods
lret
jecxz
cltd
sti
fildl
add
add
andb
cmovne
push
aad
popf
in
pop
test
out
pop
fmuls
add
jecxz
inc
xchg
decb
xchg
pop
ja
repz
add
enter
sub
sub
es
mov
int
and
jnp
pop
cmp
push
into
xor
in
rorl
fs
sub
or
push
mov
xor
mov
sub
cmp
daa
fisttpll
add
jl
mov
mov
stos
loopne
rol
or
cmp
sbb
sahf
add
in
fiadds
insb
fisubrs
xchg
dec
imul
mov
or
iret
imul
adc
mov
arpl
fidivrl
inc
aas
movl
sbb
or
faddl
inc
xor
mov
sbb
loope
outsb
pop
jg
mov
sbb
mov
lret
andl
jns
push
push
mov
jle
cmp
mov
adc
push
icebp
add
xor
mov
jbe
stos
orl
aas
ja
arpl
loope
mov
dec
xor
testb
jb
in
jno
scas
notb
fwait
push
imul
add
cmp
pop
jmp
mov
add
fucomip
xor
jae
dec
movsl
out
sub
movb
cmpb
sbb
add
inc
add
ljmp
push
add
fucomip
js
push
lahf
push
test
mov
imul
popa
mov
sbbb
mov
jno
fmul
out
cmp
add
aad
add
lcall
inc
outsl
sub
into
xchg
aaa
stos
data16
shrl
inc
push
inc
pop
test
pushf
cmp
inc
pushl
sbb
ja
add
mov
and
in
push
and
pop
andb
xchg
bound
push
adc
test
dec
je
mov
or
xchg
lock
pop
lret
loopne
cmc
cmp
inc
jmp
stos
cmp
andb
roll
mov
incb
fsts
xlat
out
xor
test
dec
add
mov
sbb
stos
inc
jno
push
je
pop
add
pop
and
insl
adc
lcall
push
pop
enter
cmp
decb
xchg
das
fmulp
ss
test
rcll
jmp
lods
push
stc
and
out
add
jecxz
pop
or
add
xlat
mov
fisubrs
fnstenv
test
sub
mov
dec
mov
movsl
push
adc
lret
lods
popa
sbb
fcmovbe
rcll
cmp
pop
mov
adc
add
jbe
lds
sbb
jg
ret
scas
mov
mov
mov
add
dec
dec
add
inc
jb
add
mov
cli
adc
sti
add
shlb
call
cmp
mov
scas
jno
or
xor
int3
pushf
cltd
adc
aam
mov
test
mov
nopl
inc
push
lods
int3
adc
lods
adc
es
add
inc
push
mov
adc
dec
std
ffree
nop
add
add
jecxz
loop
jae
out
jle
dec
imul
push
push
sahf
outsb
pushf
mov
xchg
mov
pop
cltd
cld
adc
fs
rcl
testl
xor
bound
push
jae
pop
stc
rolb
mov
scas
jb
clc
pop
in
shlb
push
xor
add
add
add
cmp
cwtl
pop
bsf
mov
add
repz
push
push
call
push
sarb
dec
sbb
jnp
mov
in
inc
or
lahf
xor
add
pop
xor
add
les
push
pop
push
sbb
jo
sub
in
rorb
iret
sahf
lret
sahf
add
cs
add
add
cmp
jecxz
mov
jge
mov
es
loop
out
pusha
or
add
mul
loop
clc
sub
dec
int
je
mov
fiaddl
jb
lea
mov
arpl
dec
fiaddl
mov
xlat
sbb
mov
inc
shll
mov
test
jno
jns
jg
fmuls
cmp
add
mov
je
cli
xchg
fistps
aaa
push
scas
icebp
daa
add
daa
cld
lds
repz
pushf
pop
and
jnp
mov
mov
in
iret
adc
add
jae
icebp
aaa
ret
xchg
imul
cmp
and
loopne
add
sti
adc
pushf
or
jmp
pop
mov
push
mov
dec
xchg
mov
add
scas
pop
stc
mov
and
cwtl
sub
jecxz
and
or
mov
push
mov
sub
pop
sub
icebp
cmc
lcall
pop
add
push
test
and
daa
mov
outsb
lcall
xchg
call
jns
daa
test
and
rcrb
repnz
test
jmp
jl
ret
repnz
rclb
int3
push
mov
mov
das
jae
lret
icebp
sbb
mov
fisttpll
lds
xchg
mov
insl
cmp
adc
jnp
jo
and
cmp
imul
xor
rolb
inc
push
sub
pop
js
arpl
push
mov
adcl
sbb
arpl
inc
clc
push
xor
clc
jne
jo
add
adc
int3
sub
aas
sub
cmp
mov
cmp
xlat
add
cmp
inc
popa
sub
sub
leave
add
fistl
sub
hlt
cld
js
push
orl
push
push
popa
jns
mov
lahf
aam
xchg
test
enter
dec
ficomps
lcall
nop
add
xor
mov
add
cmp
sbb
rorl
pusha
add
popa
ret
or
adc
sbb
cld
add
adc
mov
push
stc
xor
add
cmpsl
add
add
call
add
and
push
xlat
stc
sub
xchg
pop
xchg
cs
in
xchg
sbb
out
cmpsl
dec
cwtl
mov
loope
xchg
xor
stc
add
jge
subb
aas
mov
mov
dec
lods
out
insb
stos
mov
cmp
inc
fs
or
leave
xor
mov
loopne
sub
add
out
mov
shl
pop
fildl
ljmp
xchg
add
add
dec
movsl
fildl
add
inc
pop
or
testb
enter
pusha
test
movsl
pop
add
push
sbb
shrb
sub
stc
out
in
dec
pop
cmpsb
dec
cmp
jno
add
mov
add
cwtl
sub
xor
rorb
imul
arpl
add
adcb
dec
or
lock
jnp
pop
aam
js
adc
ret
and
out
pop
add
js
arpl
mov
scas
and
scas
lret
adc
push
call
xlat
sahf
outsb
and
or
pop
popa
add
add
lahf
std
cmp
xor
cmp
xlat
inc
sub
inc
insb
aaa
ss
push
push
push
lret
push
and
mov
cmp
xor
sub
into
sbb
pop
sbb
add
aaa
jae
pop
lret
pop
lea
js
aam
test
mov
and
sti
aad
xchg
daa
inc
add
inc
out
int3
and
mov
sub
push
add
xchg
into
jns
and
mov
pop
out
adc
xchg
sbb
bound
mov
ja
mov
add
sbb
inc
insl
push
rolb
enter
loop
xchg
jbe
pop
add
cli
push
adc
scas
roll
pop
cmp
mov
add
and
scas
xor
mov
add
pop
rcrb
dec
push
enter
mov
lea
mov
push
mov
pop
mov
push
add
cwtl
push
enter
add
loopne
and
add
lret
jl
lcall
fs
insl
sahf
jns
dec
and
or
lret
inc
and
lahf
add
xor
out
pushf
pop
cmp
cwtl
cmp
xchg
in
lret
lea
xor
into
cmp
je
jg
subb
jecxz
jmp
movsb
pop
push
loop
sbbb
pop
dec
add
lods
jge
stos
xor
dec
push
movsb
gs
sbb
call
and
clc
add
push
inc
add
push
js
cmpsb
inc
or
mov
sbb
out
push
fadds
inc
push
cmp
hlt
push
cwtl
dec
in
and
je
das
add
mov
imul
cwtl
pop
xchg
fdivr
ds
cmp
mov
movsl
adc
or
cmp
xchg
iret
add
push
xchg
mov
xor
into
divb
push
sahf
add
loop
sbb
scas
cmpsl
lahf
loope
xchg
add
mov
push
js
push
ret
sub
daa
xchg
jp
dec
xor
frstors
aad
outsl
and
push
mov
mov
arpl
inc
pop
popf
stos
fadds
sbb
nop
push
inc
add
jns
aas
sahf
shll
fimuls
test
add
lods
rorb
jbe
cmp
add
add
fdivrs
inc
cmp
add
and
clc
sub
idiv
mov
in
inc
xchg
add
xchg
stc
fdivrs
sahf
inc
mov
jge
add
rcr
mov
popa
jp
push
jg
cmp
pusha
addr16
inc
sbb
add
std
xchg
xchg
and
push
add
stc
cmp
arpl
pop
add
xchg
nop
aaa
pusha
mov
add
fdivrl
add
add
sub
in
sbb
fwait
addb
push
add
push
addr16
sbbb
cltd
shrl
repz
movsb
sti
movsb
lods
inc
shlb
add
mov
int
or
icebp
lea
dec
push
push
call
in
rorb
mov
sub
ljmp
mov
or
test
xor
in
or
adc
icebp
mov
cmp
xor
inc
mov
add
jns
scas
subb
imul
les
notb
fmuls
xor
cs
jecxz
pop
dec
fs
pop
lahf
aam
push
and
jns
add
notb
sub
push
jecxz
pop
xchg
mov
mov
add
out
xor
in
push
in
lods
outsb
cmp
sbb
add
dec
icebp
stos
lea
imul
cltd
mov
ret
add
add
jno,pt
das
inc
dec
lea
pop
mov
hlt
enter
enter
push
jle
push
push
xor
mov
lea
nop
rorb
push
add
lret
lock
insl
xor
call
push
mov
sbb
or
jp
push
jae
mov
cli
and
and
adc
mov
popl
jne
fiaddl
sti
movl
adc
jnp
es
add
fldl
lcall
enter
mov
inc
mov
sbbl
pop
in
inc
fcoms
mov
cmp
mov
mov
jmp
clc
in
add
add
pop
repnz
inc
pushf
or
or
add
movsl
daa
add
addr16
hlt
jne
add
push
push
aam
pushf
sarb
and
mov
add
dec
add
add
ja
dec
xchg
movb
add
push
sub
divb
xchg
loopne
shlb
cmc
lahf
mov
add
nop
ja
add
mov
fimull
cmp
mov
mov
repnz
inc
rcrb
mov
cmpsl
mov
jns
rolb
mov
dec
data16
xlat
leave
scas
pop
add
popa
insb
push
add
cltd
lds
lock
icebp
xor
or
cmc
jmp
jo
pop
add
ret
add
pop
ds
add
xchg
or
sbb
inc
popf
shr
xchg
aas
insb
mov
dec
add
jecxz
pop
cmp
add
add
stos
mov
mov
dec
xchg
addb
inc
in
xchg
jns
sub
fildll
std
cs
rcrl
push
add
add
enter
mov
push
xor
or
popl
adc
lods
jns
and
cmp
aam
jle
clc
clc
push
movsl
in
sub
jbe
add
and
or
lea
pop
xor
inc
out
dec
iret
dec
sub
fcoms
stos
in
mov
add
sub
jle
add
addb
jge
cmpsl
insl
js
fsts
inc
mov
lds
add
loope
adc
add
add
xchg
xchg
dec
add
push
add
add
sub
in
add
adc
mov
xchg
mov
call
stos
mov
bound
cmp
cld
cld
shrl
in
enter
add
xchg
lods
mov
out
ljmp
stos
mov
movb
and
roll
mov
push
add
insl
dec
add
mov
jb
ss
jmp
mov
mov
stos
data16
test
dec
aad
outsb
dec
xchg
es
cli
jl
in
add
pop
xchg
adc
cmp
mov
add
mov
push
je
jns
dec
add
inc
test
add
add
or
lods
sahf
inc
inc
lret
cmp
je
sub
inc
add
inc
add
nop
add
sub
mov
mov
mov
cwtl
cmpsl
arpl
arpl
add
out
jge
ja
imul
add
and
test
pop
xor
lcall
pop
fs
test
rol
mov
push
pop
mov
push
dec
into
push
scas
shll
mov
int3
call
sub
mov
dec
push
outsb
jmp
subb
add
into
lcall
aaa
out
movsl
mov
xchg
adc
adc
add
fwait
aaa
add
aad
pop
adc
add
cmp
imul
add
push
mov
subl
enter
add
out
loop
mov
push
imul
fwait
pextrw
roll
xlat
stc
outsl
mov
ljmp
mov
xor
pop
jmp
divl
ficomps
xorb
aas
ficompl
subl
jb
xorl
add
mov
xor
test
xchg
xchg
dec
enter
pop
fisttps
cld
sbb
mov
ljmp
sub
dec
insb
pop
dec
cmp
push
dec
adc
out
mov
ret
scas
sbb
add
add
xchg
mull
out
push
mov
jecxz
push
outsl
rcrb
add
cmp
push
scas
ret
mov
pminsw
push
imulb
aas
outsl
jle
adc
repz
sbb
fisubrl
stc
push
sub
faddl
push
pop
imul
mov
ret
inc
add
das
jle
add
lret
push
ficomps
stc
add
mov
xchg
push
cmp
dec
xchg
xchg
pushf
loope
icebp
insb
push
movsl
cltd
add
js
add
test
cmp
inc
adc
sbb
sbb
add
stc
add
adc
sbb
jns
cmp
jp
aaa
add
pop
add
aad
sbb
roll
imul
mov
inc
jno
ss
mov
testb
rorb
cli
rclb
cli
cmpsl
js
push
rcr
cmc
inc
cmp
or
testb
sbb
push
push
ds
je
mov
add
xorb
lods
sbb
jp
outsl
jbe
jbe
add
cmp
addr16
or
pop
add
leave
addb
mov
std
xlat
mov
sbb
mov
faddl
xchg
or
sub
je
iret
rcr
popf
xchg
jbe
sbb
insb
sbb
add
out
nop
push
adc
or
dec
add
add
repnz
xchg
dec
addb
push
hlt
dec
mov
add
and
sub
scas
loop
fcompl
mov
test
push
xchg
pop
add
mov
aaa
xlat
or
orb
jl
add
add
popl
pop
inc
or
add
jnp
test
sbb
inc
dec
and
loop
xchg
jno
clc
sub
mov
xchg
or
aaa
inc
cli
push
popf
or
and
jne
inc
fildll
mov
pop
sub
push
mov
jae
in
mov
jp
in
or
pop
jne
jmp
add
lahf
shrl
loope
xchg
inc
jns
sbb
xchg
out
sub
and
add
rolb
sbb
sub
xchg
fsubrs
push
dec
dec
popf
or
add
add
xor
out
sbb
or
xor
popf
add
icebp
dec
add
mov
push
imul
cmp
push
jmp
mov
add
ja
adc
xlat
shr
mov
add
lods
xlat
repz
jnp
out
stc
add
sub
adc
xchg
repnz
jae
xor
mov
js
xlat
jne
add
pop
xchg
xor
insl
sub
mov
subl
add
aad
cmp
imul
fchs
fiadds
das
mov
add
mov
out
mov
lret
mov
popa
or
mov
std
mov
cmp
add
push
add
pop
push
sbb
xchg
pop
push
out
xlat
enter
push
inc
adc
mov
pusha
test
fidivrs
leave
add
cld
mov
ljmp
push
add
add
bound
add
push
aam
lock
xchg
stos
std
add
pop
das
lods
dec
sbb
dec
add
or
add
dec
out
push
dec
das
or
xchg
inc
pop
add
ja
add
dec
mov
add
xchg
ja
add
xchg
jae
test
das
mov
cmp
movsl
cmp
add
in
notb
dec
cltd
add
xchg
cwtl
add
or
add
xor
mov
cltd
add
jmp
push
nop
add
mov
pop
push
mov
popf
add
pop
insl
jne
mov
notl
push
jbe
cs
ja
popa
add
js
pusha
add
out
jecxz
add
add
add
dec
popf
jb
and
popa
add
push
or
xchg
loop
popa
cmc
sbb
loop
push
inc
imul
cmp
loope
inc
cmp
loopne
jb
inc
dec
daa
movups
jg
insl
mov
push
inc
dec
cld
loop
xchg
and
cld
orl
xchg
push
add
add
mov
adc
xchg
inc
pop
test
add
add
add
rol
xor
add
inc
dec
cmpsb
pusha
jne
add
into
popl
pushl
enter
mov
push
test
xor
add
mov
mov
and
add
dec
xor
add
add
add
sbb
jne
adc
imul
call
mov
pop
mov
daa
add
dec
cmp
scas
movsl
sub
add
xchg
pop
outsl
adc
push
push
push
add
pop
pop
adc
xchg
add
shlb
pusha
add
mov
add
pop
scas
filds
sbb
lret
fs
stc
jo
repz
in
inc
mov
inc
sbb
dec
add
add
adc
add
sbb
or
lret
sbb
add
cmp
sahf
add
adc
lds
and
pushf
add
mov
lock
mov
jo
sbb
xorl
addb
fiadds
and
pop
pop
ret
dec
xlat
jne
push
inc
fsubs
cmp
add
mov
add
jge
sti
or
add
mov
xor
or
dec
or
push
out
dec
das
add
scas
ret
lret
in
xor
arpl
imul
sbb
push
xchg
cmp
add
and
jo
push
adc
add
movsb
bound
or
scas
xchg
addr16
cmp
es
push
jo
loop
jbe
cld
sub
xor
add
inc
add
sti
add
jmp
pop
mov
or
dec
movb
and
cmp
aas
add
arpl
les
out
pop
mov
pop
pushf
sub
pop
add
ja
push
dec
push
test
aas
cld
leave
mov
out
sbb
push
push
add
sbb
sti
and
pusha
push
imul
fnstcw
sub
push
dec
ds
jg
xlat
frstor
in
mov
add
nop
add
mov
mov
push
divl
arpl
outsb
cmp
mov
jae
ss
mov
sub
mov
mov
dec
jne
std
xchg
sti
inc
push
lcall
pop
repz
mov
dec
lcall
pop
icebp
sbb
pushf
push
add
jl
add
jo
jnp
aam
xchg
jmp
inc
scas
inc
out
xchg
mov
cmp
mov
pop
inc
dec
arpl
add
jae
inc
pop
push
std
push
in
sbb
stos
mov
cmp
mov
aam
hlt
cwtl
stos
push
cmp
and
das
or
and
out
call
cmp
mov
add
mov
sbbl
rcrl
mov
sub
sub
repnz
rolb
popf
add
inc
push
xchg
movsl
xor
push
sub
add
add
mov
mov
lods
arpl
movsl
mov
adc
lcall
xor
bound
mov
cmp
or
divb
shll
cmpsb
rcl
cmp
cmp
std
or
mov
xchg
or
aad
std
add
pop
insb
add
add
jmp
insl
in
nop
jl
test
ltr
sti
cli
add
dec
jecxz
ss
int3
xor
inc
sbb
std
fidivl
push
xchg
lcall
adc
mov
lock
xor
scas
ret
or
sahf
xor
add
pop
xor
mov
dec
lock
addb
stos
mov
shr
xlat
pushf
cmp
je
or
mov
in
and
push
test
repz
jmp
add
and
divl
lret
or
add
outsl
shr
add
add
push
add
push
mov
mov
mov
inc
jg
stos
push
notb
jnp
cmpsl
and
mov
iret
fs
add
mov
sahf
xchg
push
cmp
xchg
add
nop
add
pop
push
xor
imul
jl
pop
jne
mov
cld
lret
cs
xor
adcl
lcall
or
inc
std
rolb
mov
push
cs
lds
add
pop
inc
add
xor
arpl
and
add
add
jne
and
jne
das
add
mov
lods
add
mov
insl
and
push
sbb
ss
stc
push
in
add
arpl
es
imul
push
xchg
repnz
sub
leave
jecxz
movsl
mov
mov
flds
add
cli
mull
pusha
add
inc
mov
cli
cmpsb
addl
rcrb
xchg
cmp
xlat
mov
push
icebp
dec
pop
outsb
push
inc
icebp
xor
ret
das
xchg
add
cmpsb
iret
shl
push
and
add
add
add
cmp
stc
in
add
sub
sbb
in
sarb
sbb
or
mov
mov
gs
xchg
notl
or
add
jmp
pusha
ficompl
sbb
sbb
stc
inc
push
arpl
mov
add
mov
fs
add
jmp
pop
jge
jns
adc
es
adc
out
add
push
xor
or
add
fsts
push
rcrb
cmpsl
push
je
add
roll
cmpsb
jge
add
nop
movsb
add
jmp
adc
je
and
sub
cmp
xor
inc
ljmp
add
xor
leave
inc
addr16
in
andl
add
dec
cld
add
add
rcrl
add
lldt
dec
in
lods
add
dec
js
pop
aad
add
mov
dec
addr16
lret
add
jmp
daa
or
pop
cltd
jnp
add
dec
lret
out
fmull
inc
aam
cmc
aas
or
scas
sbb
lea
ffree
ret
sub
cltd
mov
mov
adc
clc
add
add
fcompl
add
push
outsl
cwtl
xor
fiadds
mov
daa
pushl
sbb
faddl
ja
push
roll
or
jg
push
repz
or
jbe
or
mov
xchg
push
or
add
mov
test
and
lods
or
inc
pop
xor
xor
ljmp
xor
add
cmp
test
rcll
pop
shrl
jl
jl
mov
in
xor
add
ja
sbb
cmp
mov
cmp
jl
std
push
and
fcmovb
pop
adc
add
js
leave
add
dec
xchg
stos
int3
push
sub
out
in
repnz
int3
dec
pop
aas
add
jo
add
add
xchg
fsubrs
mov
pop
aam
xchg
andl
dec
mov
imul
outsb
scas
jbe
arpl
aam
pop
fyl2xp1
sub
negb
jecxz
test
in
xor
leave
sbb
pop
mov
mov
lret
inc
stc
or
xor
test
xor
repnz
hlt
inc
jae
std
nop
fwait
or
je
movsl
push
and
xchg
hlt
lea
push
pushf
cld
test
pusha
fldt
pop
add
sbb
mov
cmp
mov
sub
push
mov
push
xchg
mov
mov
add
mov
or
pop
jno
mov
hlt
fs
pushl
fwait
sub
into
add
add
pop
add
xor
imul
inc
add
pop
lret
das
dec
jbe
and
adc
add
shll
iret
aaa
mov
icebp
aam
fimuls
out
or
shll
mov
xor
icebp
sub
or
mov
xorl
daa
or
cld
push
dec
sub
sbbl
add
cmpsb
daa
cld
jp
mov
fcoms
loopne
pop
call
leave
aam
mov
add
das
fmuls
add
add
cmpb
ds
sbb
enter
mov
imull
xchg
add
std
popa
je
gs
push
in
leave
addr16
aad
arpl
mov
or
add
push
mov
pop
inc
sbb
ret
mov
mov
lock
or
repnz
pop
push
stc
test
dec
xor
popa
or
add
scas
scas
lcall
mov
adc
or
gs
cwtl
xor
out
add
jne
and
pop
and
subb
mov
add
push
mov
add
add
fidivs
fistpll
sub
dec
enter
loopne
dec
push
jle
push
ljmp
push
cmp
inc
push
dec
cmp
ret
xor
cs
sbb
jne
dec
xchg
cmp
sahf
cmp
add
scas
std
inc
std
add
movsl
frstor
sbb
cmp
add
dec
ljmp
es
add
jno
icebp
dec
les
jne
cmpsl
lahf
mov
mov
and
loop
mov
push
add
add
push
cmpsl
jno
pop
jbe
leave
mov
push
rcrl
pop
xor
adc
lret
add
xchg
in
inc
dec
add
enter
or
sbb
pop
xchg
in
mov
test
scas
add
outsl
sub
adc
sub
xchg
dec
dec
xor
pushf
imul
cmp
xchg
dec
rolb
xor
jnp
and
outsl
daa
outsl
mov
stos
cld
gs
add
ljmp
or
xlat
cs
dec
lret
dec
dec
in
data16
popf
lcall
xor
push
ret
and
add
cli
sub
cwtl
fisttpl
sbb
lods
lea
push
incl
xchg
flds
pushf
jp
pcmpgtw
scas
sbb
add
mov
repnz
gs
in
and
add
add
scas
ds
mov
or
nop
xor
add
fimuls
fwait
mov
sbb
aad
jmp
sub
sbb
xor
adc
xor
loope
pop
adc
rolb
or
mov
testb
adc
mov
add
mov
add
add
pop
dec
rcr
mov
addr16
add
fdiv
out
mov
sub
add
loope
out
dec
cmp
jle
add
fbstp
add
enter
cmpsl
or
push
cs
mov
ret
jmp
pop
out
mov
stc
pop
sbb
aas
bnd
dec
mov
xor
push
jns
cs
jnp
push
lods
add
iret
xchg
in
sahf
mov
ljmp
popa
pop
xlat
rolb
cmp
filds
aaa
adc
mov
je
popa
int3
push
inc
sbb
pusha
iret
mov
mov
jmp
cli
add
bound
mov
add
fdivrl
lret
dec
jbe
or
je
in
mov
sbb
adc
mov
adc
lods
loop
insb
loopne
add
pavgb
pop
imul
mov
pop
mov
and
outsb
pushf
adc
inc
pop
lods
dec
add
mov
sarl
push
ret
add
lods
mov
xlat
clc
add
aas
loopne
add
mov
cli
std
cmp
ss
mov
scas
sahf
jne
jg
cli
xchg
popf
pop
jns
xor
add
insb
pusha
sti
add
or
add
pop
mov
add
arpl
add
sub
add
fwait
ljmp
xchg
leave
sbbb
in
mov
outsb
sti
ss
clc
leave
add
inc
in
dec
call
insl
sbb
in
jne
in
cmp
xor
pop
popl
mov
jmp
sub
cmp
ret
aas
idivb
cltd
in
int
jl
enter
xchg
lret
add
nop
mov
jae
in
in
arpl
add
enter
sbb
or
or
jnp
add
jns
add
lahf
or
das
xor
jae
out
movsb
insl
mov
sahf
enter
rorl
add
stc
sti
test
addb
bound
add
push
jg
mov
adcl
roll
mov
test
add
mov
pushf
inc
in
mov
mov
into
sbb
pusha
popf
adcl
jns
or
mov
out
add
mov
stc
les
push
add
mov
add
and
lea
leave
arpl
push
add
inc
adc
add
push
movsl
outsl
imul
pop
repz
add
fdivr
mov
movsl
mov
xchg
fwait
rorl
inc
sub
mov
js
decb
cmp
add
add
add
pop
bound
jecxz
inc
bound
outsb
shrb
movsl
pusha
xchg
arpl
add
das
xchg
add
add
vmovaps
add
push
inc
add
inc
inc
add
cmovb
add
add
ret
fucomp
shll
clc
push
mov
mov
out
cwtl
insb
add
ficompl
sbb
test
xchg
mov
add
lret
fldl
dec
xor
sbb
popa
add
pop
jle
sbb
xor
sti
dec
adc
std
add
and
xor
clc
dec
test
cmp
movsb
jle
shlb
mov
and
jb
jnp
mov
add
jb,pn
xor
inc
push
mov
mov
pop
xchg
jp
andb
jl
in
fcmovu
add
xlat
rcr
xchg
xchg
ror
clc
jnp
jne
enter
xchg
add
adc
stos
inc
push
mov
pop
sub
imul
repnz
xchg
mov
xor
sbb
mov
call
or
xor
pop
pop
push
xchg
subl
xchg
add
sbb
jp
jns
popa
cmpsb
cli
mov
and
xor
and
lret
push
xor
aad
dec
dec
cli
cmpsl
mov
pop
es
mov
ss
sbb
fisttpll
ljmp
jle
jns
add
aad
inc
fisttpll
mov
sbb
repz
and
call
lret
jp
out
add
subl
insl
dec
cmp
jb
in
mov
xchg
int
lsl
sub
data16
aaa
test
aam
hlt
sar
jmp
outsl
cmpsb
addl
imul
jo
aaa
add
jbe
cmpsb
add
xchg
fcoms
jl
std
aad
adc
test
aas
xchg
pop
add
add
lods
or
mov
aaa
add
loope
js
mov
xor
cmc
cs
roll
loope
leave
cltd
movsl
pop
sbb
in
lahf
add
scas
aas
subl
shrb
add
mov
cli
iret
fdiv
pop
mov
push
cmp
lcall
add
xor
gs
jo
cmc
stos
pop
add
mov
sub
add
into
sbb
mov
xlat
cmp
es
add
loope
dec
dec
jb
cmp
sbb
lahf
push
stos
aad
mov
add
xor
movsb
fstpt
add
lds
pop
sti
push
cmp
insl
fldenv
rolb
sti
add
lods
aas
sub
jg
ss
push
inc
mov
inc
repz
fs
shlb
sbb
add
dec
movsb
jg
mov
mov
add
jle
nop
divl
and
mov
adc
xlat
fmul
or
push
xlat
sbb
xchg
test
mov
insb
clc
mov
adc
jmp
jge
aam
sahf
or
xchg
inc
inc
pusha
fsubrl
jo
subb
push
jge
test
add
xor
jae
rclb
mov
movsb
scas
pop
daa
sub
fdiv
cld
sbb
add
stc
pop
sahf
xor
and
mov
loop
pushl
addl
cli
pop
add
xchg
ss
aad
add
xchg
les
sub
jb
lret
add
xchg
mov
jno
lock
xchg
push
lock
adcb
mov
lock
lret
adc
mov
or
aas
add
xor
and
xchg
and
cwtl
xor
add
movsl
ret
and
add
mov
cmp
lret
mov
mov
into
sub
int
and
xor
imul
mov
pop
insb
jl
sub
out
roll
mov
dec
cmc
add
sbb
test
inc
push
jo
push
add
test
sahf
out
cmp
or
xor
mov
decb
clc
jg
xchg
test
sbb
push
mov
add
aaa
repnz
add
add
add
mov
cmp
sbb
push
or
and
fmul
adc
fimuls
mov
nop
sti
daa
mov
inc
dec
enter
mov
or
mov
or
and
mov
and
ret
mov
xchg
add
inc
or
fiaddl
gs
add
or
xchg
test
ljmp
nop
arpl
test
add
adc
inc
or
add
add
sub
dec
scas
pop
mov
aam
lret
inc
add
cmc
or
cmp
fsubrs
loope
ret
and
xchg
push
xor
cmp
jne
jnp
add
mov
sub
fcompl
sub
idivl
movsl
pop
sbb
hlt
shl
push
xor
scas
lds
pushf
dec
xorb
sbb
fwait
dec
jbe
incb
in
add
popa
mov
add
subl
adc
popl
or
nop
cld
add
imul
ret
stos
inc
add
testl
jmp
fistpl
into
mov
mov
add
js
add
pop
mov
mov
iret
outsb
dec
pop
mov
lret
add
out
repnz
mov
xor
outsl
adc
mov
sub
pusha
mov
xlat
jle
test
in
mov
mov
add
out
out
mov
ret
lcall
dec
add
mov
inc
mov
clc
popa
xchg
outsb
or
es
mov
push
push
aam
fimull
addl
mov
fadds
add
mov
or
push
pop
std
xchg
dec
loope
inc
inc
mov
ja
dec
sbb
imul
iret
bound
lods
les
sub
imul
test
sbb
push
ss
imul
dec
popf
mov
xchg
in
cmp
lds
sub
cltd
add
push
add
call
xchg
test
push
add
add
lret
arpl
add
cltd
xor
shr
dec
add
shll
cmp
scas
sbb
or
leave
dec
add
ljmp
hlt
pop
add
sbb
addl
add
cli
inc
jmp
jb
aad
mov
xchg
xchg
cmpsb
jae
or
sub
popf
fimull
mov
cltd
in
hlt
sbb
gs
mov
jb
pop
xchg
add
adcl
mov
in
movsb
sbb
das
mov
inc
lds
mov
cld
push
xchg
pop
mov
xor
mov
cmovs
add
add
add
int
push
lcall
mov
leave
shlb
add
mov
dec
pusha
add
dec
lods
adc
insl
add
sub
int3
mov
and
cld
addb
fsubrs
int3
je
mov
stc
cmp
xchg
pop
jb
fs
shlb
mov
jbe
xchg
jecxz
rorl
cmp
mov
lods
insb
in
rcl
add
lahf
xor
test
enter
andl
enter
std
aas
roll
shl
or
add
lea
lods
adc
into
es
lret
sub
adc
mov
sub
push
ja
popf
stos
add
sbb
js
dec
push
movb
add
add
jg
int
xor
add
add
pop
push
pushf
xchg
add
cmp
xchg
mov
sub
jg
lahf
mov
fs
out
sbb
pop
adc
xchg
jp
jno
add
adc
aaa
loopne
mov
cmpsb
pop
and
dec
push
inc
lret
add
rcll
xchg
inc
pushf
add
mov
stos
shll
outsb
outsl
test
pop
jle
mov
cmp
sbb
add
out
lret
add
aad
xor
gs
jne
xor
insl
orl
ds
ficomps
push
xchg
clc
add
notl
mov
fstpl
push
cmp
inc
and
jp
movq
call
lea
mov
ja
cs
loope
orl
fstpt
push
das
adc
lods
jno
negb
xlat
sahf
enter
rolb
jl
xchg
dec
jmp
sarb
dec
push
xor
aad
cwtl
mov
movsl
jb
in
in
add
loope
add
cmp
sbb
lds
adc
sahf
add
jle
or
dec
lret
mov
pusha
pop
pop
inc
jns
add
and
add
push
jmp
cmpb
lret
push
mov
add
insb
add
add
dec
push
jbe
cli
jae
stos
test
xor
inc
jb
ja
mov
add
addr16
cmp
jne
les
sti
sbbb
and
jl
pushf
and
and
pop
lea
in
movsl
add
cmp
add
les
cld
in
xchg
cmpsb
rcrb
fdivrl
sahf
into
add
pop
mov
xor
add
and
pop
add
or
cmp
sub
mov
dec
adc
inc
cli
nop
cmc
add
dec
xor
xor
mov
call
insl
rolb
sub
cs
add
mov
fwait
cld
cld
or
arpl
icebp
jl
aam
or
je
mov
inc
cmp
and
mov
ret
xor
xchg
leave
mov
cmpsb
add
mov
mov
jp
cli
lods
dec
pop
add
add
lahf
pop
test
pop
jle
add
aaa
xchg
add
js
inc
cld
adc
mov
jecxz
xchg
fidivs
xor
sbb
cmc
push
add
mov
jo
mov
jge
pop
dec
add
loop
imul
out
adcb
dec
mov
repz
pop
fisttpll
pop
xor
rcrb
add
sbb
lret
add
add
pop
inc
in
push
cmp
jne
rclb
test
sarl
xor
push
cmp
into
gs
add
add
push
addr16
ss
and
or
fldl
xchg
out
inc
add
mov
or
dec
add
aad
mov
inc
add
add
test
mov
add
popa
sahf
mov
pusha
add
je
stos
ds
mov
std
dec
filds
pop
sbb
out
push
jo
add
adc
xchg
in
add
inc
jl
add
scas
in
pop
test
add
jno
xor
push
loop
outsb
mov
mov
call
add
xlat
pop
pop
adc
sub
sbb
push
ficomps
idivb
arpl
mov
add
sub
mov
ja
cmp
pop
fstp
mov
fiadds
cmp
pop
cmpsl
mov
es
add
jo
push
cmpsb
push
jbe
lock
xchg
add
pushf
or
push
and
and
hlt
xor
pop
das
jmp
jecxz
push
insb
sub
jns
mov
mov
mov
sbb
mov
mov
mov
add
or
adc
or
mov
pop
xchg
test
or
dec
iret
push
add
push
add
jp
add
ds
mov
add
movsl
mov
push
add
je
das
in
inc
sbb
shlb
push
xchg
mov
or
adc
bound
mov
add
adc
inc
inc
add
adc
test
dec
cmpsl
jg
stc
iret
fists
or
add
arpl
xor
pmaxub
mov
insl
mov
mov
mov
jp
adc
lods
leave
add
add
cwtl
push
lret
sbb
xchg
push
add
add
ret
xchg
jo
add
scas
add
xorl
popf
fs
shr
push
add
push
loope
inc
fcomip
out
lods
push
jp
insl
mov
and
or
mov
inc
sbb
add
pop
int3
pop
add
fsubrs
pop
sahf
pop
add
into
add
femms
add
add
xlat
add
scas
mov
std
push
stos
fdivrl
fldenv
movsl
add
mov
hlt
int3
jl
inc
dec
xchg
or
loop
push
dec
sahf
adc
aaa
mov
inc
shlb
ja
rolb
dec
pop
pop
jb
add
xchg
add
sbb
cmp
sub
outsl
mov
xor
aaa
add
mov
xlat
test
sub
rcl
lahf
mov
data16
notl
lahf
adc
mov
xor
and
test
out
es
loope
add
add
sub
or
lcall
iret
imul
or
pop
std
add
in
mov
movsl
andl
sub
adc
nop
add
xchg
out
add
lret
lds
dec
mov
fnstcw
sbb
xchg
popa
and
mov
add
cmp
ljmp
outsb
push
jp
into
jnp
outsb
js
les
addb
dec
test
lds
test
lahf
inc
shrl
or
push
mov
xor
inc
add
loop
mov
insb
in
add
nop
push
jge
movsl
xchg
daa
xlat
fnsave
movl
cmp
faddl
mov
cwtl
icebp
testb
add
loop
orb
fbstp
and
cmp
cs
mov
add
stos
add
outsl
jbe
inc
insl
lods
idivl
add
loop
mov
xchg
shlb
iret
xchg
push
outsb
in
mov
dec
add
aad
add
mov
andl
inc
xchg
int3
lds
push
insb
imul
lahf
add
sub
add
cmp
jae
add
push
add
out
mov
ds
shrl
mov
outsl
inc
lds
icebp
mov
sub
adc
add
daa
cmp
test
mov
ficomps
lcall
push
or
xor
push
loop
jl
xchg
mov
xorb
dec
std
jmp
xor
repz
stos
in
out
push
stc
and
add
adc
popl
arpl
xor
call
nop
sbb
stc
imul
sub
sub
add
std
xor
jnp
pop
and
aad
addr16
add
arpl
test
add
add
testl
int3
mov
mov
stc
mov
lea
loopne
or
mov
std
stos
mov
add
mov
xor
insb
dec
aam
mov
clc
or
sbb
test
mov
cmpsl
add
mov
divb
or
arpl
or
mov
test
ja
mov
xor
mov
repz
mov
inc
pop
sbb
add
lds
jo
jbe
inc
addr16
cmpsb
add
movsb
fistps
roll
loop
in
arpl
mov
pusha
add
data16
cmpsl
sub
cmc
add
mov
add
int
inc
add
push
cmp
jmp
gs
fbld
sti
stc
pop
movsl
dec
out
outsb
jae
ret
jne
fistps
and
push
out
mov
mov
fs
pushf
add
addr16
add
pop
dec
mov
push
out
sbb
xchg
add
pusha
dec
cmpl
insl
ljmp
adc
push
add
in
inc
in
or
mov
nop
xchg
pop
or
add
cli
inc
test
cmpsb
jmp
call
out
or
enter
push
idivl
sbb
ss
mov
xor
pop
add
mov
out
add
flds
push
jnp
add
inc
add
stos
jb
lret
lret
add
popf
add
test
fidivs
mov
fwait
imul
adc
mov
add
clc
pop
cmp
into
add
mov
ficompl
out
add
push
into
push
or
or
push
mulb
loopne
mov
cmp
push
xor
jecxz
nop
sub
fnstenv
out
pushf
add
add
andb
inc
add
call
pusha
cmp
push
xor
mov
fimuls
test
jae
add
mov
mov
add
fbstp
jb
pop
add
sub
je
enter
sbb
test
or
lods
add
xchg
insb
out
test
add
mov
xor
add
xchg
lret
lock
fstpt
add
sbb
push
inc
out
imul
add
add
cmove
sub
flds
xchg
iret
cld
movsb
xor
scas
push
dec
mov
jae
add
lcall
inc
add
and
shlb
adc
lcall
in
xor
add
jne
push
cs
dec
or
cmp
push
scas
cs
mov
jmp
add
add
pop
lahf
add
or
scas
in
mov
cwtl
add
add
inc
repz
inc
mov
mov
roll
nop
add
int
lcall
ficoml
add
mov
cmp
adc
das
xor
in
add
xor
test
lcall
dec
sbb
mov
gs
and
push
inc
xchg
mov
aas
das
pop
push
ds
adc
add
push
xor
in
int
stos
call
fisubrl
xor
pop
out
sub
add
jge
jecxz
mov
mov
out
jae
mov
sarb
in
cld
lcall
pop
add
cmp
outsb
icebp
xchg
add
jmp
xchg
sbb
shlb
add
add
push
fsts
test
fadds
inc
bound
pusha
pop
mov
push
mov
xor
cmp
jns
add
or
lahf
mov
lea
shl
adc
add
mov
mov
repz
pop
insb
push
dec
insl
pushf
lahf
in
filds
mov
adc
mov
filds
gs
mov
xor
lret
dec
push
jo
out
inc
mov
add
push
daa
xor
fsubs
stc
cmp
jmp
mov
into
fcmovnu
lahf
cmp
lods
ljmp
xchg
in
sub
test
mov
outsb
divb
loop
sub
mov
add
insl
lea
int
or
cmp
movsb
in
aas
addr16
xchg
es
sbb
xor
addr16
mov
push
clc
dec
fistps
loopne
das
fwait
cli
add
cmpsb
add
pop
setle
sub
repnz
mov
addr16
faddl
dec
xor
add
sbb
jnp
lret
sub
push
out
pop
mov
ss
add
add
loop
add
iret
dec
add
outsl
aam
pop
add
jecxz
cmp
or
add
jg
mov
pop
and
pop
lea
pop
add
sbb
push
push
add
mov
test
push
fdivl
jp
mov
add
xchg
pop
lock
add
push
sbb
xlat
cli
push
into
mov
push
add
insl
ret
aam
stos
aas
push
dec
pop
xor
push
push
movb
inc
sub
xchg
mov
das
jnp
pop
sbb
jp
sub
mov
leave
mov
out
test
mov
add
xor
xlat
dec
add
fisubrs
es
push
dec
mov
xchg
pusha
add
addl
add
adc
inc
add
adc
clc
cmp
mov
add
jne
xor
outsl
sub
gs
pop
push
mov
add
pushf
les
lret
push
inc
mov
add
jbe
sub
mov
es
adc
push
add
int
call
add
push
xchg
popa
hlt
mov
dec
repz
cmp
cld
add
ljmp
mov
add
movb
add
cmp
pop
inc
cmp
lods
ffree
jns
jmp
inc
add
add
bound
nop
mov
mov
jmp
push
push
push
gs
mov
gs
es
in
mov
xchg
ficomps
xor
jae
mov
sbb
cwtl
jmp
cltd
and
or
and
cmp
notb
xchg
sub
mov
adc
sub
mov
pop
add
mov
xor
sbb
into
cltd
lock
iret
sbb
aam
test
add
int3
mov
jge
push
jl
mov
clc
in
add
sub
iret
add
pop
lcall
add
and
xchg
push
jbe
test
sbb
stc
jle
sbb
or
add
fadds
in
mov
xor
or
pop
and
pop
add
xor
call
xlat
push
pop
jne
or
enter
mov
pop
mov
icebp
loope
sti
jno
shrl
pop
and
push
add
jp
xor
fwait
sub
out
cld
lock
int3
xchg
add
push
xor
xchg
sub
xchg
lret
add
loopne
imul
add
addl
aad
jnp
dec
add
cmc
cmc
or
cltd
dec
add
sbb
or
push
add
sti
lahf
inc
js
mov
push
cmp
mov
test
std
xchg
add
mov
pop
inc
push
mov
xor
jecxz
jecxz
clc
lcall
inc
xor
aaa
cmpsl
iret
xor
pop
add
fists
mov
addb
push
fwait
outsb
dec
inc
xchg
add
in
sbb
or
jns,pt
loopne
loope
add
add
xchg
add
pusha
xlat
ss
sub
sub
mov
mov
and
or
sbb
adc
add
add
adc
cwtl
mov
hlt
add
fcmovbe
insl
jmp
add
addl
shr
lret
add
inc
lds
xchg
xchg
pop
cwtl
xchg
xor
add
idivb
add
push
cmc
jp
jae
dec
call
or
fs
adc
mov
fcomip
and
push
pop
mov
jnp
movsb
pop
shll
repz
fs
xchg
sahf
mov
dec
faddl
test
out
ljmp
test
mov
pusha
add
add
enter
aaa
add
pop
xchg
data16
xchg
in
stos
add
mov
aam
or
pushf
scas
inc
filds
pop
jg
les
add
sbb
mov
gs
mov
stc
int3
lahf
or
add
xor
scas
mov
pop
fadds
push
cmpsl
adc
bound
add
int3
xchg
lret
push
test
imul
jnp
ljmp
adc
in
add
stc
and
je
outsb
add
add
rol
mov
jae
add
or
jl
clc
verr
popa
mov
dec
mov
add
mov
add
cmp
filds
inc
ret
add
call
adc
adc
gs
jp
lods
int3
das
mov
mov
lcall
in
int
inc
dec
add
mov
fsts
out
in
sub
outsl
inc
xor
push
add
pop
mov
xchg
cltd
jge
daa
inc
leave
add
xor
xchg
in
xchg
outsl
xchg
arpl
filds
ret
sub
push
dec
add
push
jnp
lcall
sbb
add
jmp
cmc
sub
test
add
in
add
add
add
jg
out
inc
or
movb
mov
add
aad
xor
or
dec
jle
xor
jmp
add
mov
call
inc
jnp
xlat
dec
cmp
test
stos
mov
mov
in
call
xor
inc
loopne
test
add
std
ds
clc
leave
push
jmp
jns
fstps
lcall
or
add
loopne
push
lahf
push
les
aad
adc
testl
add
cltd
icebp
ds
or
inc
xorl
add
ss
sahf
add
xchg
jp
and
add
inc
add
add
bound
test
int3
sub
sahf
cmp
std
mov
loop
int3
add
sub
inc
adc
sbb
add
adc
add
les
pop
or
add
aad
cmp
aaa
sar
fsubl
jno
sbb
test
mov
push
sub
add
xor
movsl
adc
add
loopne
dec
imul
fbld
mov
fsubrl
add
add
push
xchg
aam
jge
dec
shll
push
movaps
or
aam
fnstcw
pop
es
jb
mov
add
dec
pusha
mov
or
cmpsl
cmpsb
stos
adc
and
xor
enter
fldt
push
int3
ret
aas
sub
pop
cmp
or
fwait
inc
add
gs
incb
pop
jmp
or
dec
pushf
aad
cmp
shrl
push
in
jns
inc
xor
fs
push
inc
add
arpl
xchg
xor
ja
fisttpll
orb
jno
mov
sbb
loope
cld
das
add
xchg
mov
out
add
add
xor
add
jmp
add
jae
jecxz
add
bound
add
loop
movsb
add
pop
cmc
addl
add
lahf
sub
inc
outsb
mov
add
inc
cmp
dec
mov
add
or
add
dec
out
and
xchg
dec
add
dec
dec
sub
test
push
or
pusha
xchg
pop
add
scas
cmc
xor
mov
adc
push
jnp
ret
add
lcall
pop
fmul
cmp
mov
jae
rclb
in
icebp
hlt
mov
mov
adc
add
add
add
lods
aam
sub
add
cmp
js
jp
add
cmpsl
scas
std
adc
les
xchg
add
loopne
outsb
or
jecxz
es
sbb
lds
insb
add
cmpsl
clc
sub
mov
jmp
xor
xor
es
xchg
js
add
stos
nop
sbb
movsb
inc
outsb
fistl
sub
insb
je
std
movsl
pop
xchg
add
aad
or
mov
hlt
std
loop
push
add
inc
xor
stc
mov
push
add
insb
xchg
mov
jae
inc
sti
std
addb
xor
int3
jmp
mov
arpl
mov
add
pop
out
test
sub
outsl
adc
xor
mov
jmp
lods
test
or
xor
cmp
add
pusha
lcall
add
inc
test
shlb
ja
add
add
fucomi
test
add
mov
aam
out
pusha
stos
mov
add
mov
and
sti
inc
inc
cmp
sbb
dec
test
enter
fwait
dec
and
mov
pop
mov
daa
add
aam
pop
pop
push
inc
mov
mov
mov
lret
sbb
pop
mov
outsl
aaa
js
jge
inc
mov
cwtl
mov
add
popa
sbb
scas
or
add
push
les
inc
stos
and
add
mov
cmp
jo
aam
add
mov
add
fimull
mov
ret
inc
repz
xlat
add
mov
shlb
cmp
push
outsb
lods
sub
jno
mov
mov
repnz
mov
test
push
or
cmp
hlt
imull
dec
jecxz
cmp
out
xorb
dec
fstpl
insb
or
push
jne
xor
bound
add
mov
push
and
ds
jg
xchg
or
xchg
out
cmp
ret
repz
je
movsb
out
popf
pop
inc
push
add
push
insb
fs
gs
testb
out
add
mov
push
inc
popa
or
pushf
mov
call
imul
test
add
pop
cltd
dec
adc
adc
add
dec
cld
mov
outsl
sub
fsubr
add
add
add
fucomip
add
mov
sbb
mov
test
push
cmp
pop
jp
and
mov
inc
dec
pop
pop
inc
dec
sub
add
int
sti
add
add
mov
stc
add
mov
aam
mov
outsb
xchg
inc
in
pop
es
mov
roll
lea
leave
sbb
aaa
mov
inc
dec
cld
repz
cmpsl
jge
mov
inc
add
sahf
int3
or
rcl
dec
xchg
lods
negl
fisubrs
xor
or
xchg
sahf
mov
jno
inc
out
mov
aad
mov
addr16
pop
mov
jl
push
sub
es
cmp
xchg
sub
sbb
add
push
enter
stc
movsl
push
sbb
push
and
gs
jo
pop
cmp
pop
into
inc
push
mov
pop
add
scas
mov
and
add
jne
jmp
ret
push
mov
jne
push
sbb
pop
in
cmp
or
add
lock
imul
add
jbe
movl
cltd
sbb
mov
int
lds
sub
arpl
mov
sbb
sub
ss
mov
pop
imul
out
mov
or
ret
cmpsb
fs
mov
xor
lcall
icebp
add
mov
ja
or
xor
std
sub
jae
fisttpll
push
add
fsubrs
add
vmovsd
adc
in
jle
sub
mov
xchg
das
add
mov
mov
fs
adc
faddl
pop
pushf
jmp
inc
jnp
xor
add
add
lock
into
mov
ret
and
sahf
mov
popa
add
mov
daa
data16
cmpsb
pop
notb
lds
pop
adc
stc
cmpsl
pusha
inc
cld
xchg
rorl
pop
push
jb
mov
mov
filds
fimuls
push
enter
pop
mov
add
add
xchg
insb
add
add
movsb
fnop
add
test
or
add
repnz
sub
jp
out
push
test
cmc
sbb
sub
fists
and
dec
icebp
add
and
jns
add
cmp
movb
sub
mov
mov
inc
nop
add
add
repnz
jl
sub
fsubrl
pop
pushf
cltd
jb
and
aam
add
fiaddl
jg,pt
ficompl
inc
dec
sbb
mov
add
adc
aaa
sbb
mov
xor
cmp
in
push
cmp
sub
and
add
cmp
test
push
xor
add
aas
arpl
and
xchg
mov
sub
mov
sti
add
imul
test
sbb
jg
add
int3
out
pop
xor
nop
into
mov
imul
mov
sub
outsl
test
dec
and
imul
sbb
cmp
xchg
addr16
das
dec
mov
add
negl
lahf
xchg
test
mov
adc
enter
in
adc
inc
mulb
shll
pop
andl
fiadds
pop
hlt
jp
mov
aad
dec
mov
popl
idiv
jne
sahf
and
jno
cli
jno
addr16
aaa
xor
scas
test
cmp
rcll
dec
mov
adc
xchg
add
mov
stos
ljmp
cmp
add
jle
add
arpl
jae
jl
ljmp
add
ret
stc
pop
mov
xor
xchg
out
inc
nop
out
mov
in
mov
test
sub
lret
loopne
sbb
pop
out
push
add
or
and
cmp
lods
dec
add
add
mov
mov
add
mov
and
dec
stos
flds
pop
shll
mov
add
cmpsb
lcall
ret
add
bound
jl
cmp
inc
cmp
shlb
int3
pop
test
cs
test
test
add
push
sub
mov
add
mov
test
fsubs
outsl
rcll
out
cli
add
mov
popa
fisubrs
xor
add
or
or
dec
ljmp
sahf
rcrb
pop
add
push
insl
add
push
inc
int3
xor
add
dec
frstor
adc
mov
add
aam
insb
add
or
mov
add
sbb
add
mov
xor
call
push
dec
testl
jno
jl
test
mov
pop
add
test
adc
rolb
mov
or
xor
mov
addb
xor
sbb
mov
mov
adc
add
fs
icebp
jg
hlt
daa
dec
add
in
add
mov
loope
sbb
xor
add
jg
push
lcall
sbb
insb
jp
xor
ror
mov
push
pop
lods
test
mov
cli
stos
fs
gs
cmp
mov
fs
add
mov
cmp
into
rolb
add
adc
add
cli
xchg
cs
sub
sub
or
lea
push
incl
mov
bound
sbb
xor
xor
jns
and
repz
mov
pusha
and
test
loope
pushf
popf
call
add
sahf
outsl
jp
in
mov
mov
test
mov
nop
insl
pop
mov
int3
lods
test
pop
sbb
movsb
or
imul
xchg
stc
ss
add
imul
push
les
pop
rcrb
cmp
lock
bswap
sub
mov
adc
sub
dec
in
push
dec
xor
or
mov
movl
jae
mov
or
add
inc
jb
add
cmpsb
inc
add
add
mov
outsl
mov
out
dec
mov
xchg
xchg
inc
sub
mov
push
in
add
les
mov
lds
pop
add
dec
pop
dec
rclb
cmpsl
sahf
leave
add
mov
mov
scas
cltd
xchg
test
add
mov
push
push
fistpl
push
jge
sub
lret
xor
movsl
mov
add
fcompl
out
hlt
adc
movsb
pop
push
mov
add
shll
js
or
add
fcompl
movsb
pop
pop
movl
andb
fmuls
sub
jb
add
lret
jnp
add
dec
add
stos
std
add
mov
ds
xchg
xor
cmp
push
cmp
push
xchg
sbb
cs
pop
jmp
sub
add
add
sbb
daa
mov
sub
pop
sarb
add
or
subl
dec
sbb
inc
add
add
add
add
aas
movsb
dec
add
mov
orl
clc
ds
gs
jg
xlat
cmpl
add
popa
js
xchg
sbb
xor
daa
sub
xchg
pop
popf
mov
add
push
mulb
jl
mov
push
and
pop
inc
das
or
lods
fwait
add
xor
pop
xor
xchg
push
add
add
xor
es
lods
scas
js
cmp
and
cmp
movsb
dec
leave
push
out
pop
push
stc
pop
in
mov
enter
mov
es
adc
mov
dec
and
cmp
add
cmpsb
es
mov
cmpsl
add
jae
addr16
add
jno
cmpsb
or
pop
mov
cmp
add
test
mov
push
insl
mov
sahf
xor
loop
dec
das
outsb
gs
fisttpll
add
or
add
out
add
insb
clc
add
add
push
stos
and
xchg
sarb
outsl
fsts
mov
add
repz
pushf
sarb
add
adc
shll
mov
sbb
add
subl
jge
out
mov
inc
insb
into
pop
push
inc
add
fwait
push
or
ficoml
add
jg
add
mov
sarl
cwtl
add
xchg
jno
add
push
icebp
in
inc
in
cltd
je
add
add
movsb
loopne
mov
and
push
inc
add
aam
rorb
ror
pop
clc
sti
imul
inc
imul
arpl
icebp
hlt
jnp
mov
add
add
ss
xchg
daa
movsl
scas
add
fldenv
repz
sub
or
dec
add
sti
xchg
arpl
xlat
add
add
fdivl
test
nop
add
jp
stc
iret
mov
test
xchg
mov
inc
add
add
mov
xchg
scas
jecxz
mov
mov
or
dec
or
aam
sub
lret
stc
mov
xor
fldenv
out
push
inc
int
inc
jl
dec
mov
add
push
jb
jns
dec
adcl
mov
btr
add
mov
add
xlat
daa
add
call
repnz
sbb
xor
mov
and
testb
lods
movb
cmpsl
push
cmc
bound
push
pushf
int3
clc
lahf
inc
add
mov
add
dec
mov
push
mov
jo
xchg
ss
push
add
dec
movsl
es
pop
inc
push
xchg
add
lret
loope
sti
pop
dec
dec
fbld
stos
add
js
mov
and
cmp
clc
sub
sbb
dec
add
lret
and
jge
add
lock
add
mov
cs
test
add
sahf
jne
push
adc
add
shr
bnd
mov
or
sbb
mov
icebp
iret
lock
pusha
mov
push
dec
jl
lock
es
or
addr16
or
sub
adc
ret
add
inc
pop
cmp
mov
popf
loop
outsb
out
add
add
xor
sbb
roll
fstpl
xchg
roll
in
or
add
fidivrs
push
popa
call
stos
jb
push
aas
add
cmc
add
test
inc
inc
mov
inc
or
aam
add
xchg
add
adc
je
add
jmp
mov
add
pusha
fldcw
jne
js
jbe
dec
into
adc
add
int
add
je
adc
add
jne
mov
gs
or
add
xor
add
in
rcl
aam
xchg
sbb
add
xor
pop
adc
xchg
add
or
daa
push
std
or
and
out
mov
add
add
or
loop
ja
adc
loopne
loopne
jbe
lock
push
cmc
add
and
jle
xor
sti
hlt
dec
add
scas
add
or
push
bound
sub
sub
cmpsb
xor
jp
xchg
cmp
xor
and
les
or
mov
xchg
push
jo
addr16
std
pop
int3
mov
inc
cmpsl
jnp
adc
mov
dec
aam
outsl
subl
add
add
and
xchg
push
les
sub
push
std
je
add
in
test
cmp
inc
mulb
xchg
lds
cli
dec
push
loopne
iret
ret
lea
jne
into
mov
mov
les
or
add
lds
mov
sahf
outsl
mov
aas
xlat
adc
jl
mov
imul
add
push
add
pop
add
ret
dec
sbb
inc
xchg
add
movsb
jno
add
cmp
subl
notb
mov
pushf
cmp
mov
loop
dec
nop
add
jo
add
lods
pushl
js
iret
add
mov
jecxz
dec
sbb
imul
inc
mov
aad
sbb
mov
outsb
add
dec
inc
add
popa
mov
fnstsw
ret
cltd
push
fnstsw
xchg
ret
mov
movl
movsl
fsubrl
cs
jge
aad
jecxz
xchg
add
sbb
cltd
lret
add
add
popa
add
add
cmc
or
mov
ret
dec
in
cltd
push
scas
adc
add
imul
rclb
mov
xor
or
cld
jo
lret
xor
cli
add
sub
mov
mov
jl
sbb
lea
push
sub
mov
in
sub
imul
dec
add
out
cmpsb
hlt
sub
mov
scas
xor
xor
popf
add
mov
iret
add
addl
or
inc
xor
pop
mov
insl
add
pop
pop
aaa
aad
add
jne
aad
addr16
or
pushf
xor
adc
movsl
xchg
mov
mov
add
push
repnz
and
and
fildl
test
pop
add
add
outsl
sub
add
and
punpcklwd
inc
scas
lea
pop
in
or
dec
xchg
test
movsb
adc
jb
mov
mov
outsl
and
popa
in
pop
add
cmp
rep
leave
add
mov
fadd
add
xor
leave
pop
add
fcmove
dec
add
sub
cs
loop
pop
das
mov
sar
mov
cli
sub
or
test
cmpsl
addr16
add
add
pusha
xor
mov
mov
jb
iret
or
das
fcomps
sbb
call
repnz
dec
lods
and
mov
xchg
sbb
push
mov
inc
shrl
add
mov
sub
inc
adc
push
add
out
or
add
out
lea
push
mov
test
xchg
mov
lahf
sbb
xor
pushw
push
add
fwait
add
push
daa
out
sbb
bts
add
add
mov
and
rorb
ficompl
cmp
pop
repz
test
sbb
add
mov
push
cmp
inc
hlt
push
inc
xor
sub
mov
out
je
add
scas
lret
add
shrl
rorb
adc
cs
in
movb
push
add
add
jbe
or
jg
lret
data16
jmp
pop
xchg
adc
bound
xchg
mov
mov
test
andl
out
mov
je
jge
roll
xchg
js
push
xor
xor
inc
testb
mov
add
pop
mov
mov
add
mov
pop
in
repnz
add
stos
jns
mov
inc
and
inc
into
pop
enter
jl
mov
idivb
mov
fwait
jb
add
adc
lds
test
call
mov
sbb
out
push
dec
aad
add
jo
jne
rclb
pop
jp
sti
pushf
cwtl
test
push
adc
add
add
repz
pop
sub
sub
movsb
das
cmp
mov
and
dec
sbb
and
mov
add
pop
imul
add
mov
test
scas
outsb
add
rcrl
sub
push
popl
xchg
inc
ljmp
js
add
push
mov
clc
or
das
sbb
push
xchg
and
or
addr16
and
dec
add
add
in
xor
imul
pop
aad
or
push
pop
dec
xchg
ja
push
push
imul
dec
cltd
leave
add
rcrb
insb
das
stos
out
and
stc
sub
add
orl
clc
add
pop
mov
dec
mov
jge
add
movsb
pop
push
sbb
shll
lahf
test
lock
push
cmp
xor
ds
stos
and
or
xchg
mov
stos
decb
add
push
jp
loopne
mov
push
xchg
push
clc
es
mov
add
jno
or
xor
add
bound
pop
shl
add
iret
ret
jle
mov
outsb
push
add
push
sbb
mov
ja
movsb
ss
test
test
add
aas
inc
add
lret
push
jmp
sub
js
repnz
mov
inc
sbb
adc
add
cwtl
add
cld
outsb
jne
xchg
dec
or
dec
mov
pop
fs
add
mov
cmc
jmp
push
xchg
das
insb
add
test
popa
icebp
lods
push
add
jno
jp
adc
cmpsb
dec
clc
add
dec
sbb
je
pop
sub
frstor
cs
xor
mov
bswap
and
sub
mul
jb
cld
js
jbe
add
add
push
loop
xor
push
push
mov
xchg
bound
or
jnp
add
jg
add
pop
or
sub
roll
clc
xchg
test
arpl
mov
in
and
dec
cmp
cmp
xor
inc
jp
es
lahf
add
xor
lods
add
sbbb
jle
or
inc
add
popf
jne
nop
add
das
jge
in
call
insb
int
mov
push
push
dec
sar
xchg
mov
mov
dec
add
in
imul
pusha
iret
jo
sub
mov
shl
outsl
lret
in
add
add
scas
test
push
jge
add
lcall
ja
mov
pop
pop
in
setle
pop
pop
pop
add
js
sbb
fsubs
mov
movsb
sub
dec
sbb
test
sbb
addl
imul
popa
lods
sbb
cmp
xor
mov
jno
enter
lcall
sbb
xor
sbb
test
add
movsb
push
pop
aad
popf
push
xor
add
jnp
cs
sub
push
addl
lret
insb
stos
mov
pop
xor
cmp
stc
scas
push
repz
add
cld
push
pop
add
cmp
push
pop
sub
add
pop
add
leave
push
lds
add
cmpsl
sub
filds
mov
dec
int3
sahf
and
sbb
test
push
test
cmpsl
ds
loopne
pop
pop
push
xor
lret
out
xor
cmc
add
into
pop
dec
lods
and
popf
mov
mov
add
adc
hlt
xlat
push
pop
pop
add
cmp
lock
jne
enter
icebp
mov
mov
in
sbb
fcomps
insb
xor
stos
cmp
and
movl
shlb
sahf
std
add
bound
xchg
cmp
das
sbb
pop
add
cmp
and
mov
imul
in
test
dec
add
mov
fisttps
add
clc
in
add
arpl
stos
adc
sbb
pop
add
sbb
pop
inc
push
lahf
add
loope
add
inc
push
sbb
or
xchg
cmp
push
add
ret
pop
add
cld
aam
inc
inc
frstor
fdivp
xchg
add
leave
lods
push
push
or
mov
lea
out
cmpb
jb
jo
repz
push
add
mov
sbb
mov
sub
and
push
imul
xor
stc
push
add
popa
xchg
pop
sbbl
add
add
nop
imul
add
les
sbb
cwtl
popa
jp
out
jb
mov
mov
nop
pop
push
jecxz
sbb
or
rolb
pop
sbb
sub
std
fldl
ljmp
clc
mov
insl
jns
add
cmp
add
lcall
add
enter
push
mov
sub
cmp
sub
add
jge
adc
xor
aad
add
call
xchg
test
popl
rcrl
adc
pop
aaa
or
jae
roll
xchg
xor
push
cmp
add
jmp
push
adc
add
stc
mov
mov
adc
pop
sbb
sbb
loop
mov
pop
inc
push
cmpl
add
cmpsl
das
jne
jge
inc
jb
mov
cmp
pusha
push
push
ror
lods
repz
cmc
push
popl
xchg
insl
call
fsubrl
mov
pop
shll
test
repnz
and
aas
dec
adc
cmp
add
les
mov
out
out
add
push
jo
pop
jnp
insl
xlat
adc
dec
das
jae
mov
add
orb
add
outsb
sbb
jl
xor
adc
add
imul
add
jecxz
jae
push
xor
and
sub
and
sub
adc
pop
lods
mov
fwait
test
sahf
add
sbb
call
leave
and
push
mov
push
mov
aad
loopne
push
add
xchg
add
dec
add
lahf
test
pop
insl
hlt
pop
or
sysret
ret
fildll
mov
jmp
inc
sbb
add
aaa
add
fildll
fs
adc
lea
daa
jmp
adc
enter
sub
lods
dec
add
verr
cmp
int
dec
inc
jmp
pushf
imul
test
imul
jae
and
add
add
lret
mov
xchg
adc
add
stc
mov
stc
add
sub
int
lret
mov
or
mov
rcll
inc
jmp
add
jp
jnp
adc
cwtl
add
repnz
add
pop
pop
add
lahf
mov
push
add
add
jmp
add
mov
mov
inc
out
adc
cs
inc
add
push
add
and
lock
in
call
mov
mov
inc
cmpsb
jno
leave
jnp
and
sbb
or
push
mov
add
add
lock
xor
adc
xchg
mov
dec
add
push
repnz
add
fdivrp
mov
cmp
mov
or
or
lock
fwait
mov
mov
push
cmovnp
inc
inc
cli
push
jb
mov
push
das
sbb
cmp
jnp
add
push
add
int
xchg
xor
jp
and
cmp
rorb
test
jmp
ss
adc
lcall
jae
and
adc
mov
cltd
pop
cmc
insl
movsb
lock
add
lods
mov
pusha
jno
add
pop
jo
add
fidivrl
add
dec
add
add
add
cli
add
pop
outsl
imul
mov
push
mov
xor
ret
push
xor
int
add
scas
mov
cmp
lcall
cwtl
add
hlt
inc
jae
jle
mov
jnp
jns
imul
popa
data16
sbb
add
and
push
jl
cmp
imull
mov
mov
mov
adc
jmp
jne
add
lods
repz
mov
xor
xor
sbb
add
sbb
inc
int
sub
push
outsl
cmc
cmp
pop
test
lret
jns
mov
hlt
fcoms
std
push
add
xchg
or
loope
imul
add
jge
es
shlb
add
jp
dec
aam
push
cmp
flds
push
push
inc
mov
jecxz
xor
jo
inc
xor
and
cmpsb
push
popf
add
mov
add
mov
mov
shl
add
pop
inc
dec
add
sub
add
les
lods
adc
dec
addb
movsb
cld
or
push
push
push
add
aad
adc
push
stos
test
add
or
pop
sbb
add
js
dec
jg
stc
shl
push
push
sbb
adc
push
add
add
addr16
inc
jo
hlt
mov
sub
add
lea
imul
push
inc
add
jecxz
stos
insl
xor
or
adc
cmp
in
je
insl
mov
sbb
mov
pop
push
add
jbe
and
gs
lea
push
shll
pushf
sbb
inc
inc
leave
jae
and
add
nop
pop
xchg
shrl
mov
add
push
dec
movsl
xchg
or
jae
jge
mov
xor
outsl
pushl
flds
adc
stos
lahf
out
imul
mov
orl
xor
js
add
lds
test
loop
xchg
addr16
jmp
cwtl
addr16
mov
add
lock
cltd
fs
push
add
js
ret
xchg
shll
add
out
adc
mov
mov
aad
movl
and
in
inc
pop
mov
addl
insl
lods
cwtl
gs
int
cmp
ds
ja
imul
insl
fst
add
jb
das
jo
mull
or
xor
outsb
mov
adc
test
cmpsl
lret
add
mov
push
das
js
fistpll
ud0
add
xchg
mov
ss
pop
inc
mov
mov
loopne
in
push
fcmovnb
and
fsubs
xlat
or
sub
inc
fisttpll
add
ror
pusha
add
jmp
add
lds
fs
add
das
mov
or
xor
iret
ret
call
mov
je
jl
sbb
lods
das
xor
sub
test
in
jmp
enter
adc
into
test
aas
cmp
add
pop
push
add
lods
add
pop
mov
hlt
insl
add
add
xor
add
add
mov
mov
add
sti
sub
add
add
dec
cli
push
dec
fiadds
test
xchg
cli
push
movsb
xchg
test
mov
dec
aam
dec
in
push
add
add
fstp
add
pop
arpl
ficoml
mov
jge
mov
ja
mov
loope
add
add
add
jbe
pop
out
add
pop
add
fcom
bound
mov
add
bound
sub
outsb
in
xchg
popl
mov
movsb
rolb
add
sbb
lods
mov
test
dec
movsl
cmp
test
push
movsl
pop
xchg
pop
mov
and
push
push
test
js
out
mov
mov
inc
add
add
jmp
call
add
roll
adc
and
jnp
add
mov
add
icebp
sbb
into
sub
clc
ret
mov
cwtl
mov
fimull
xchg
in
idiv
ret
pop
add
aad
lds
and
dec
ja
pop
mov
sub
loope
rcll
into
pop
push
into
add
add
jae
mov
insl
add
shlb
jle
rcrl
adc
in
inc
dec
clc
dec
mov
lods
mov
dec
inc
dec
imul
test
sub
mov
mov
add
rorb
dec
jne
xchg
push
xor
mov
in
or
leave
loopne
shll
fisttpl
add
push
pop
push
xor
rcll
test
jecxz
inc
insb
mov
sbb
push
add
mov
lods
pop
cmp
push
xor
cmpsb
xor
sar
out
pop
push
jno
or
ret
mov
das
dec
out
mov
mov
adc
jns
insl
and
cmp
xlat
adc
cltd
adc
mov
nop
cmp
lret
iret
mov
inc
add
loope
aad
cwtl
iret
mulb
xchg
pop
pop
add
mov
add
inc
mov
xor
push
test
pop
add
jne
mov
sti
cmp
add
sub
add
add
outsb
fldt
lcall
nop
jo
push
les
jmp
push
insb
mov
leave
mov
stc
cltd
pop
test
test
add
sub
daa
mov
daa
cs
iret
movl
clc
add
jo
mov
int3
out
jns
flds
sub
sti
sbbl
repnz
clc
popa
jmp
and
or
inc
xlat
push
imul
sbbl
aas
scas
out
sub
sub
int3
roll
in
ret
mov
mov
cmp
xor
push
add
lds
pop
add
scas
push
mov
or
cmpb
ljmp
test
add
jmp
push
pop
dec
test
adc
xor
jp
add
loop
jns
add
pop
fdivr
fwait
adc
push
push
jae
jl
ljmp
xchg
sbb
xlat
add
xchg
inc
sbb
adc
outsl
sbb
aam
bound
xchg
jbe
stos
mov
xchg
fimull
sbb
add
pop
mov
psrlq
sbb
lahf
das
add
xchg
or
cmp
lcall
add
in
frstor
add
inc
movsb
ds
pop
filds
flds
jne
or
in
and
add
sti
xor
lret
je
stos
add
and
jb
jmp
cwtl
cmpsb
xchg
lods
sbb
add
js
add
mov
push
mov
mov
pop
je
mov
mov
mov
ljmp
xchg
fsubl
add
loop
repz
cmpsl
ljmp
scas
in
jmp
inc
enter
js
ss
daa
cli
add
mov
push
mov
out
enter
sti
fistps
push
mov
in
and
loop
movsb
test
push
sbb
test
jp
sbb
sbb
fldenv
and
cmp
cmpsb
sbb
pop
test
jp
mov
pushw
iret
add
add
mov
xchg
mov
add
lcall
xchg
and
adc
lss
cmp
or
movsb
pop
or
adc
add
imul
or
stos
sbb
jmp
add
xor
push
add
add
add
cmp
neg
or
loope
or
leave
loopne
mov
dec
sbb
jge
jg
add
shlb
rolb
sub
cs
test
out
adc
cmp
dec
mov
dec
repnz
lods
leave
mov
dec
jb
fstp
test
add
inc
popf
or
add
shll
push
jb
mov
add
sub
in
stos
nop
add
push
fnstsw
fnstenv
add
add
sub
data16
movsb
test
adc
movsb
inc
or
inc
pop
adc
mov
mov
movsb
in
cmp
les
cli
sbb
movsl
pop
or
jl
ljmp
push
popf
scas
roll
fs
mov
sahf
inc
pop
in
cmp
ror
cld
sti
out
fstps
pushf
and
pop
aas
stos
or
popf
daa
nop
out
pop
int3
cmp
cld
add
cmp
pop
aaa
cmp
fisttps
xchg
inc
mov
sbb
jl
cmp
xchg
add
ja
adc
out
inc
enter
jne
pop
cmp
or
push
bound
sub
je
pop
sti
mov
jae
stos
out
cmp
imul
jmp
fsubr
add
ja
js
gs
add
mov
add
sbb
test
jmp
mov
or
leave
sbb
shll
adc
add
jge
xlat
jb
lods
xchg
out
xchg
inc
test
add
sahf
push
cmc
cwtl
xlat
push
cltd
ret
imul
add
pop
pop
out
add
sub
lock
xacquire
lcall
repnz
xor
in
add
ds
xor
scas
data16
mov
idivl
adc
dec
add
lret
sbb
in
push
or
mov
js
je
ss
js
cli
add
cwtl
mov
insb
mov
jge
mov
ds
sbb
stc
es
clc
xor
ds
pop
ljmp
mov
jnp
fiaddl
add
add
mov
jmp
ds
das
adc
xchg
stc
push
adc
dec
inc
mov
sbb
mov
lret
add
sub
pop
add
popa
sbb
insb
sahf
mov
jmp
or
cmp
das
mov
fwait
negb
add
jno
es
push
xor
imul
lods
mov
jne
outsb
mov
sub
add
mov
stos
int3
pop
dec
mov
lcall
addr16
add
stos
mov
mov
movsb
mov
adc
lcall
mov
mov
add
faddl
iret
sbb
add
pop
cli
daa
mov
in
pop
test
ficoml
xchg
nop
add
dec
push
xchg
fsubrp
call
aad
sbb
sti
cld
add
or
daa
add
scas
jmp
shrl
xchg
or
sti
mov
inc
xchg
in
popf
push
scas
pop
test
add
mov
or
lock
lock
dec
popf
je
add
adc
add
out
cmpsl
push
negl
jo
add
sbb
fdivs
dec
cmpb
adc
es
popa
in
cmp
dec
add
xlat
ficoml
sti
outsb
mov
push
xchg
mov
test
or
rcl
ljmp
pop
or
pop
and
sub
and
or
add
dec
push
xchg
pop
mov
jb
nop
jge
fmuls
mov
mov
icebp
add
outsb
push
cld
mov
subb
adc
adc
xlat
xor
fs
add
inc
aas
sbb
lds
and
add
xor
ret
mov
add
incb
mov
lahf
mov
push
roll
je
adc
mov
lret
cwtl
pop
add
daa
jge
iret
arpl
scas
jns
dec
loopne
add
hlt
clc
js
sahf
push
jo
adc
pop
mov
push
dec
xchg
pop
repnz
add
adc
or
ljmp
mov
mov
pushl
xor
and
inc
cld
jmp
test
xor
add
repnz
pop
add
adc
std
or
repnz
insb
or
loopne
cmp
js
push
loope
add
xorb
add
mov
cmp
sahf
test
push
mov
aaa
hlt
pop
hlt
or
push
and
data16
add
xor
pcmpgtd
mov
insb
addr16
mov
sub
or
mov
cmp
ret
loope
and
popf
pop
jae
enter
fwait
or
lea
jp
add
daa
sbb
add
aaa
fidivrl
add
call
je
add
arpl
mov
mov
incl
shll
fcompl
inc
pop
shrl
stc
add
inc
sub
jmp
or
mov
xchg
jge
xchg
jl
in
add
adc
mov
mov
add
scas
mov
daa
pop
pusha
fwait
adc
cmp
add
sbb
fwait
addl
mov
or
push
aad
sub
cmp
xor
dec
mov
ds
sti
or
orl
repz
mov
dec
inc
or
daa
mov
mov
das
lock
jb
lods
dec
jp
popa
add
xor
mov
add
mov
bound
add
into
add
repz
cmp
jl
mov
push
enter
ficomps
inc
add
push
popa
add
jnp
add
add
aam
popf
pusha
inc
cmp
sti
xchg
repz
mov
lock
add
adc
add
shlb
add
xor
jge
sahf
inc
add
add
aaa
inc
out
push
notb
add
das
and
push
cs
mov
popf
scas
pushf
push
push
imul
add
rorl
jbe
hlt
sbb
jbe
lcall
inc
inc
xor
std
cmpsb
dec
and
mov
mov
mov
je
lock
mov
ret
sbb
cmp
inc
add
cltd
nop
bound
mov
add
cltd
adc
or
xchg
out
jecxz
mov
adc
mov
add
arpl
stos
out
outsb
out
cmp
jne
xor
loopne
push
sub
roll
cmp
add
jnp
push
add
add
or
and
inc
add
add
mov
xchg
loope
into
arpl
lcall
xor
cmp
add
cmc
mov
sbb
xor
dec
les
popf
push
in
push
inc
inc
bound
out
enter
imul
mov
jg
xchg
add
movsb
cld
push
fists
or
sub
dec
xor
aas
dec
pop
xor
jp
mov
or
xchg
sbb
xor
fldenv
mov
push
rcrl
fsubs
and
fs
add
inc
into
mov
jl
in
add
mov
aam
dec
push
xchg
cmp
popf
test
add
out
cmp
add
xor
jg
andl
fwait
mov
add
popa
enter
data16
adc
hlt
insl
pop
in
add
mov
add
dec
sbb
dec
and
xchg
testl
int
call
jge
vmwrite
add
add
lock
mov
pop
fcmovbe
test
xchg
repnz
add
repnz
mov
push
xchg
jo
adc
add
data16
rcrl
lret
das
mov
fdivrs
and
fstpl
xor
push
bound
ljmp
jo
mov
aam
cmp
inc
test
push
cmpsb
mov
insb
nop
out
xchg
cmpsb
add
xchg
loopne
cmp
test
or
xor
jbe
xchg
mov
repz
mov
mov
mov
fwait
adc
sti
and
jae
add
adc
enter
lret
sarl
add
add
add
stc
outsl
add
cs
cs
pop
lahf
sub
add
add
imul
ljmp
fdivs
lcall
add
int
dec
push
add
lret
jp
lea
xchg
dec
bound
loop
repnz
inc
fwait
clc
std
clc
add
fiaddl
add
xor
aad
mov
mov
add
repnz
sbb
push
out
out
loopne
push
add
jmp
jbe
mov
cmp
paddw
mov
mov
push
sbb
add
dec
add
rcll
hlt
xchg
mov
or
mov
xchg
push
dec
cmp
fs
pop
push
sub
xchg
cmp
data16
cltd
add
lock
and
test
arpl
add
movsb
xchg
add
add
push
sbb
xchg
or
mov
mov
add
jmp
xor
add
and
add
xchg
int
faddl
lahf
mov
lret
jmp
cli
xchg
rcrb
lds
inc
add
mov
rcl
xchg
jbe
jecxz
mov
or
in
xchg
mov
xchg
jp
cs
lods
dec
repnz
ja
es
arpl
or
push
scas
fwait
add
sti
frstor
mov
rorb
dec
adc
cmp
fsubs
rclb
shll
in
sbb
or
jmp
leave
in
xchg
out
sahf
add
int
inc
xchg
xchg
lock
fiadds
add
call
je
cmp
lahf
mov
clc
ret
ret
lahf
jae
icebp
mov
or
clc
sbb
cmp
test
add
in
push
loope
add
sub
aas
sti
push
adc
lock
add
cmpsb
insl
dec
jmp
pop
inc
jnp
jl
xor
loopne
dec
leave
xchg
add
imul
cmp
add
repz
enter
adc
inc
mov
lods
cmp
push
cmp
add
add
lahf
mov
cmp
aam
jp
pop
cmp
push
sbb
push
mov
loopne
fdivl
sbb
es
add
cmpl
xor
bound
jo
push
jbe
mov
add
int
xor
and
jns
add
dec
sub
cmpsl
movsl
mov
and
and
push
out
pop
sub
xor
mov
sarb
out
jecxz
push
adc
mov
or
test
xor
fildll
push
push
sbb
add
fadds
push
pop
inc
call
hlt
jmp
add
xchg
stos
xor
ret
out
repnz
xlat
cld
mov
sub
mov
add
cld
int
out
gs
in
or
aam
add
add
clc
movb
rolb
mov
mov
jmp
mov
pop
mov
pop
fisubrl
data16
dec
orb
lods
jp
cmpsl
and
test
mov
popa
mov
daa
cmp
mov
and
add
and
mov
je
ficoml
add
filds
sbb
add
cmp
dec
add
dec
mov
divps
imul
jae
add
je
and
add
xchg
xor
push
sub
cmp
jg
mov
jge
push
loop
add
lods
cmp
mov
adc
mov
inc
sbb
add
and
inc
mov
movsl
loope
imul
sti
jg
add
jae
je
cmp
mov
adc
lods
imul
enter
add
in
mov
sbbb
ljmp
dec
lods
jmp
es
sbb
mov
inc
iret
pop
push
mov
mov
add
cltd
in
dec
mov
mov
in
cmp
sbb
add
jp
icebp
add
xor
xlat
ret
cmpsl
add
scas
js
or
sarb
jb
inc
call
sbb
pusha
aaa
mov
mov
xchg
add
das
mov
cld
cmp
push
jmp
add
call
mov
outsl
jle
leave
ret
mov
idivb
xor
hlt
mov
xor
add
and
sub
adc
sarb
add
or
push
add
add
add
pop
shll
sbb
inc
stos
sub
and
push
sub
push
shrl
repz
mov
loopne
push
out
adc
jge
fildl
jmp
and
jno
pop
add
inc
sarl
xor
add
mov
add
cld
and
mov
int
mov
add
mov
and
addb
add
out
push
mov
daa
roll
cli
sub
mov
popa
add
out
in
pop
cmpsl
mov
sub
mov
add
cmp
xchg
mov
add
dec
roll
jecxz
add
faddl
mov
ss
sbb
inc
add
xchg
add
adc
aad
mov
inc
loop,pt
faddl
adc
in
insl
cmp
loopne
xor
mov
rcrl
or
mov
pop
fs
lea
es
xchg
dec
and
jae
mov
add
push
xchg
jae
add
add
fldl
xor
ja
mov
cmp
and
loope
push
mov
and
xor
sub
aad
lret
repnz
in
das
das
mov
cmp
cltd
add
xchg
out
lret
mov
daa
push
insl
daa
test
jmp
fldl
cmp
fsubl
push
adc
adc
push
popf
nop
insb
push
jg
mov
pop
scas
cwtl
fisttpl
xor
jns
in
push
out
loopne
sar
add
add
add
inc
dec
inc
xor
dec
adc
dec
add
leave
loop
pop
cs
xchg
add
dec
dec
mov
xor
out
xchg
adc
int
add
xor
out
daa
adc
mov
xchg
push
adc
xchg
dec
jmp
jmp
outsl
push
aaa
add
pusha
out
lock
fwait
push
cmpsl
jnp
add
movsl
pop
insb
out
int
aas
add
jp
add
mov
jo
adc
mov
aas
inc
daa
add
insl
and
aas
mov
nop
and
or
xchg
jp
scas
add
rcr
add
mov
pop
aaa
and
daa
sbb
sahf
lods
or
nop
xchg
mov
imul
xorl
mov
and
cmpsb
data16
sbb
addb
xchg
jne
cli
adc
adc
loopne
add
and
mov
add
adc
movl
aad
aas
dec
sub
ds
sub
sbb
imul
aam
cld
push
pop
jbe
stos
xor
or
leave
loop
rorb
inc
rcr
in
mov
cmp
test
mov
jns
add
mov
push
rorl
filds
movsl
add
pop
lret
in
out
loop
mov
or
test
inc
fisubrl
jge
loop
pushf
xchg
mov
pop
jno
fisubs
xchg
fs
lods
shrl
fnstcw
and
xchg
sub
jmp
add
add
push
mov
adc
mov
add
mov
inc
xor
vorps
add
mov
cmc
pusha
mov
les
mov
dec
enter
fidivl
mov
fildll
add
push
les
add
and
nop
adc
add
iret
lods
rcll
mov
ds
aas
add
imul
imul
add
in
mov
in
cltd
fwait
gs
jle
std
loop
add
and
sub
cld
jg
lret
sbb
cmpl
push
stos
and
loop
out
imul
repnz
cld
in
xchg
std
mov
cmpl
fldcw
mov
cmp
jae
mov
mov
scas
jne
add
jae
jo
sarb
pop
rolb
pop
xchg
mov
pop
or
xchg
pop
mov
or
xchg
rclb
aas
shlb
pop
add
loopne
push
mov
jns
xor
popa
jbe
mov
cmp
pop
loopne
mov
mov
pop
mov
sti
popa
out
test
add
stos
std
jno
dec
lret
xchg
xchg
shrl
and
inc
mov
fnsave
pusha
add
jl
mov
add
jns
push
pop
inc
lahf
aam
iret
loope
push
imul
cmpsb
add
outsb
stos
push
push
mov
je
repz
jg
pop
dec
hlt
std
jae
xor
out
in
leave
sti
aad
sbb
mov
push
and
sub
daa
add
in
dec
insb
mov
add
out
cmp
mov
lods
orb
jns
movb
xchg
pushf
mov
add
lret
loop
movsb
sbb
and
data16
inc
roll
cmpsl
je
or
mov
pusha
test
mov
add
sbb
push
add
mov
test
pushf
insb
negb
xor
xchg
push
mov
add
cmp
add
outsb
cwtl
dec
dec
std
dec
add
push
lods
xlat
andnps
pop
sub
add
movsl
add
jl
int
add
js
arpl
outsl
aam
fmul
xchg
pop
sub
sahf
and
pop
enter
ljmp
sub
inc
cld
lret
dec
inc
js
lock
adc
loopne
add
repnz
in
insl
mov
cmpsl
mov
pop
orb
int3
mov
sbb
arpl
fistl
pop
sub
xor
pop
pop
adc
or
lods
insl
dec
gs
lahf
sub
sbb
mov
add
sub
aaa
fiaddl
stc
xor
fs
ljmp
add
jle
mov
pop
xor
mov
lret
mov
rcrl
add
into
xor
pop
lret
fbstp
pop
push
jl
inc
xlat
add
cmp
stos
xchg
xchg
pop
repnz
mov
cmpsl
dec
ffree
pushf
add
dec
xchg
repnz
dec
popa
pop
adc
inc
mov
adc
add
stc
loop
les
loop
aam
lret
adc
inc
arpl
and
test
xchg
add
rol
mov
jmp
addr16
xchg
dec
in
stos
std
js
sub
pop
xor
adc
mov
sbb
leave
add
sub
scas
sahf
lahf
rorl
cmp
stc
inc
fdivl
and
sbb
faddl
stos
jnp
adc
loopne
sahf
mov
movsb
add
add
insl
mov
cmp
push
std
add
fcmovu
jb
fisttpll
mov
imul
sub
xchg
pop
xchg
add
or
xadd
cmpsb
add
add
cld
cmp
or
rol
mov
and
sub
cmpsb
push
test
sub
inc
mov
subl
shll
roll
test
jecxz
cmp
mov
add
scas
cmc
das
icebp
fstl
and
inc
stos
ret
mov
outsl
inc
add
or
xchg
out
dec
sub
push
frstor
pop
dec
insb
fists
int3
adc
push
xchg
mov
pop
cmp
adc
add
xor
pop
xor
push
push
pop
in
filds
xchg
xchg
push
lds
adcl
shll
or
ds
dec
shr
imul
fs
and
cs
hlt
add
mov
lahf
jecxz
arpl
addl
jno
jg
xor
loop
test
pop
jb
test
lods
hlt
add
sbb
test
cmc
iret
pop
scas
rcrl
add
pop
aas
push
outsl
pusha
push
pop
gs
cmpsb
jmp
or
ds
fiaddl
sahf
out
in
cmp
sub
xchg
scas
sbb
test
jle
jmp
add
cmc
cvtpi2ps
mov
scas
fisubs
out
cmc
addr16
loopne
daa
dec
fisubl
xchg
mov
xor
loopne
negb
in
mov
mov
mov
xchg
mul
mov
mov
cld
dec
add
push
pushf
pop
dec
popa
fmul
add
mov
out
jp
mov
jmp
mov
xor
add
and
test
and
xor
mov
cmp
sub
pop
mov
clc
add
sub
jmp
mov
mov
mov
adc
or
adc
xchg
lcall
popf
jns
jb
mov
add
iret
add
rolb
jbe
add
add
idivb
movsb
mov
imul
add
test
addr16
push
enter
or
dec
sub
test
mov
jl
call
sub
in
xchg
jmp
add
lock
popf
fwait
inc
pop
add
add
cmp
add
fistpll
xor
aad
scas
xor
cmp
add
outsl
cmp
jo
mov
push
dec
jo
dec
sbb
dec
repnz
mov
add
cld
add
add
outsb
jmp
enter
shrb
add
test
andb
add
daa
add
pop
enter
push
mov
lret
insl
shrb
add
add
les
das
xor
jmp
faddl
sahf
leave
add
push
aas
add
mov
add
ror
add
xchg
sahf
insb
jns
dec
mov
addr16
or
lock
andb
iret
data16
out
sbb
add
push
fldenv
mov
sub
ret
in
incl
in
or
xchg
add
ds
aad
arpl
aam
cmpsl
xorb
lcall
add
sbb
or
movsb
xchg
adc
add
xor
je
lods
xchg
jnp
cltd
mov
jno
fdivrp
sbb
idivb
mov
push
add
add
jnp
rcrl
dec
adc
ret
les
sbb
aas
add
and
and
push
add
mov
xor
bound
inc
clc
in
push
pop
lcall
add
int
pop
and
fildl
mov
mov
jle
lods
inc
add
add
add
popf
movsb
mov
cmp
mov
incl
insl
cltd
dec
mov
mov
and
sti
es
mov
push
xor
shlb
les
xchg
subb
mov
out
lea
mov
jb
data16
stc
test
or
add
call
mov
outsb
jae
or
cmpb
mov
mov
shr
loop
scas
push
or
mov
add
repnz
into
into
add
mov
xchg
shll
rolb
push
addl
jbe
sub
movb
add
jge
jne
mov
inc
add
jmp
pop
out
sub
adc
pop
sbb
sbb
insb
popa
inc
repnz
stc
rcr
ds
cmp
add
jns
pop
mov
push
imul
mov
mov
xchg
movsb
and
push
and
dec
jns
adc
mov
cmp
sub
fwait
inc
add
addr16
ja
or
fdiv
add
int
iret
lahf
push
fwait
add
div
add
add
sbbb
add
fimull
xchg
pop
xchg
aaa
pop
xchg
pop
fdivrl
dec
adc
cmpsl
addl
out
div
sub
mov
sub
add
inc
ret
jmp
dec
xchg
aas
inc
mov
pop
mov
and
add
dec
mov
lret
add
js
push
add
inc
test
es
mov
sbb
and
dec
add
repnz
arpl
add
add
or
cld
adc
xor
xlat
xchg
in
sbb
add
int
cmpsl
rcrl
incl
outsb
lcall
popf
in
flds
loop
xchg
pop
shl
add
push
notb
cwtl
mov
xor
leave
mov
fstps
pop
jmp
lret
jnp
negb
test
inc
adc
sahf
mov
rcrl
pop
add
pop
push
fimull
jl
outsl
stos
fucomi
dec
filds
pop
xchg
rorl
jbe
xchg
jecxz
ret
scas
push
inc
fldl2e
add
and
and
cmp
mov
push
and
mov
rol
stos
mov
fistpll
mov
xor
or
lock
dec
mov
fcmovne
add
mov
mov
sub
sbb
rcr
jle
add
add
fmuls
and
xor
fisubs
jle
add
push
jnp
sub
xchg
xchg
add
mov
cmpsb
dec
add
add
test
ja
pop
das
popl
mov
ror
shll
dec
and
jle
jno
sub
cltd
popf
call
pop
and
ret
mov
test
cmp
and
lea
ret
dec
xchg
out
mov
icebp
loop
sbb
cmc
push
pop
int
pop
add
fs
roll
or
scas
popf
add
or
icebp
add
inc
xor
add
push
mov
add
xchg
mov
lcall
push
mov
call
and
adc
andb
xchg
fidivl
sti
ret
out
xchg
shrl
jp
sub
mov
and
dec
call
js
add
xor
add
mov
and
lahf
pop
push
mov
add
pcmpeqd
or
xor
add
add
ds
cld
and
lods
int
push
pop
aas
xchg
jg
push
ja
dec
mov
nop
push
enter
js
sbb
xchg
mov
xchg
enter
push
add
fs
ret
add
jb
mov
add
icebp
jp
mov
add
jge
jo
stos
iret
mov
sbb
inc
pop
pop
add
jle
pop
add
adc
enter
dec
addr16
scas
mov
call
sub
fnstsw
inc
lahf
dec
js
sub
add
popf
cli
sub
cmp
inc
fdivrp
mov
and
fimuls
hlt
mov
mov
xchg
bndstx
inc
mov
mov
mul
ficomps
jns
imulb
out
shrl
fcomps
mov
xchg
adc
stos
cmc
mov
test
cli
dec
shlb
push
xchg
subb
xchg
cwtl
and
or
mov
pushf
fsubl
pushf
push
jns
mov
mov
add
loope
mov
sbb
push
cltd
add
dec
pusha
add
bound
scas
xlat
call
jl
add
adc
sub
hlt
add
dec
and
les
jmp
push
cmp
mov
aas
add
mov
pop
add
add
add
in
add
out
add
scas
std
insl
fwait
ja
adc
into
add
sbb
dec
sbb
lea
mov
jl
lock
mov
les
jns
dec
pop
unpckhps
add
sub
add
xchg
add
sub
cmp
xchg
lods
and
lahf
outsb
les
inc
dec
lock
add
scas
mov
jne
add
scas
sub
xchg
inc
push
jae
adc
mov
test
add
lods
add
add
and
sub
lods
sub
adc
loop
daa
popf
call
xor
mov
push
xchg
add
aas
cmpsb
add
add
add
inc
mov
in
dec
and
sti
push
add
push
in
push
inc
fs
test
lods
scas
jecxz
pop
xchg
jbe
lret
push
jne
xlat
jb
mov
dec
add
mov
std
inc
sbbl
ret
add
nop
call
adc
add
mov
mov
popf
add
out
mov
fcmove
add
icebp
dec
push
and
lcall
dec
pop
add
push
in
add
push
inc
and
fwait
popf
add
adc
add
sub
and
and
jno
arpl
sarb
shlb
rolb
inc
movsl
mov
jmp
in
mul
daa
and
lcall
sarl
cmp
add
add
mov
add
xchg
into
add
mov
jno
sti
and
hlt
push
mov
mov
add
cmp
rsm
adc
icebp
std
mov
lret
xor
xchg
xor
push
int
les
pop
xor
sub
add
xchg
decl
shlb
lret
mov
mov
cmp
mov
sbb
mov
outsb
mov
ljmp
xchg
jbe
dec
add
std
outsl
mov
arpl
inc
lret
mov
sub
mov
idivl
sbb
sti
xor
popf
and
push
add
jmp
or
add
add
arpl
dec
sub
fldl
jl
das
jae
in
dec
test
fsub
mov
sub
add
add
cmp
or
mov
insb
push
push
mov
int3
movsb
jmp
repnz
sbb
xchg
dec
fnstcw
sbb
imul
add
cltd
int
adc
inc
stos
aaa
add
hlt
popf
jge
push
add
add
cltd
outsl
adc
pop
push
mov
xor
mov
xchg
dec
sbb
insl
xchg
inc
add
sahf
xchg
aam
add
push
sub
cwtl
bnd
cmp
mov
ljmp
lea
push
mov
rep
test
xchg
call
cmc
addr16
lcall
pop
push
lds
push
sbb
xor
mov
mov
rclb
add
or
cmp
add
mull
adc
mov
inc
clc
in
jl
pop
push
rclb
dec
rcrl
xchg
xor
in
and
std
dec
mov
fcompl
das
fidivrl
in
push
pop
xor
lea
mov
sbb
xchg
adc
jmp
jg
cmc
mov
add
out
sbb
jecxz
xchg
out
xchg
cmpsl
fistpll
movsb
pushf
inc
add
push
lahf
into
sahf
lret
add
add
inc
int3
pop
add
push
sbbb
cmp
and
add
cmp
pop
stos
inc
test
cli
repnz
adc
loop
bound
inc
add
es
push
add
fldenv
movsb
cli
add
imul
cmp
dec
add
add
ja
aam
std
cmp
sahf
pop
mov
mov
fabs
sub
loop
stos
mov
les
imul
test
in
add
or
jp
incb
xor
xchg
jb
add
add
inc
xchg
adc
adc
xor
aam
add
fisttps
jne
outsb
sub
xchg
add
adc
int3
out
xchg
loope
popa
sbb
jge
add
jecxz
dec
and
and
cmp
les
xchg
js
fnsave
xchg
popf
cmp
dec
pop
sub
test
pop
push
aam
ljmp
push
andb
xchg
dec
xchg
adcb
scas
lret
fisttps
leave
push
nop
cmc
fstp
cmpsl
scas
add
sahf
adc
or
in
dec
mov
ja
fildll
lods
fs
sbb
je
out
stos
in
and
pop
sub
outsb
sbb
pop
iret
adc
dec
pop
cmp
add
test
lock
add
leave
rolb
adc
fisubrs
scas
add
dec
scas
dec
cmp
add
push
mov
dec
cmpsl
mov
call
stos
cmpsl
stos
add
jb
int3
lock
jbe
add
or
fstpl
add
mov
sub
int3
pop
cmp
add
mov
popf
add
ret
movsb
scas
and
adc
mov
add
xorb
xchg
stos
fstl
sub
xor
pop
scas
xchg
movsl
div
add
add
jmp
add
and
xor
fwait
add
adc
add
pop
shlb
cmp
mov
andb
cmpb
sub
movsb
pop
xchg
out
loopne
push
mov
dec
add
jae
lret
nop
fwait
insl
loop
pop
add
in
ds
add
mov
loop
jg
hlt
bound
push
add
les
out
int
daa
in
xor
movsb
sbb
lods
mov
jl
scas
ljmp
add
fstpt
lods
outsl
mov
mov
imul
inc
testw
mov
movsl
gs
cmp
sub
mov
and
movsl
xor
clc
out
or
jg
pop
add
inc
std
aad
add
lret
cmp
outsb
push
clc
hlt
add
push
scas
push
aam
movl
lcall
lcall
ds
andb
sub
mov
fcmove
add
es
lock
arpl
das
pop
lock
inc
mov
mov
lea
mov
imul
xchg
in
pushf
pop
lahf
push
add
mov
addr16
cmp
push
repz
add
lret
push
jg
pop
mov
jl
mov
imul
mov
add
and
add
cltd
pop
add
add
add
mov
add
add
jno
xchg
out
adc
inc
loopne
gs
sbb
pop
xchg
mov
add
icebp
xchg
jne
mov
in
js
pop
xor
and
add
stos
arpl
testb
repnz
lods
out
das
loope
outsl
lods
enter
sub
sub
mov
dec
sub
fwait
jno
pop
pop
repz
or
add
clc
lods
add
jl
add
pop
push
imul
xor
fs
js
sub
dec
push
les
arpl
add
dec
cmp
xchg
xchg
mov
shrl
sbb
xchg
mov
push
add
mov
insl
jp
cmpsb
je
test
add
sbb
leave
inc
fcoml
push
add
int
add
push
sbbl
repz
es
add
adc
js
push
sub
je
cmc
add
add
andb
cmc
jle
sbb
je
adc
sbb
lock
icebp
add
sbb
add
and
jb
cmc
ja
rolb
lret
push
mov
lods
sbbl
sub
mov
ret
and
add
mov
hlt
ds
mov
add
add
cmp
cmc
idivl
pop
xor
and
pop
loopne
rcl
outsb
cld
outsb
cmp
inc
rcll
add
int3
adc
stos
pop
je
add
push
add
add
add
dec
addr16
bound
add
jne
pop
and
ds
out
sarb
xorl
cmp
jno
sub
push
cmpsb
add
mov
lods
shll
insb
mov
jmp
cmp
add
sbbb
cmpsb
rolb
jno
pop
dec
jnp
inc
push
jae
mov
jb
loope
add
inc
pop
adc
popa
adc
scas
mov
jne
mov
mov
cmp
or
mov
xchg
add
adc
lods
les
jg
sti
outsb
adc
outsl
push
pusha
dec
insl
xchg
or
in
dec
push
imul
sub
arpl
jnp
pop
cmpsl
xor
cli
mov
es
inc
dec
push
gs
cld
outsb
sbb
pop
sbb
test
cmovl
and
add
pop
js
cmc
push
sub
in
add
out
or
clc
push
dec
adc
mov
push
sbb
ds
fwait
add
hlt
inc
xor
sub
out
out
test
xchg
inc
jg
jecxz
sar
add
add
js
pop
leave
xlat
lods
add
mov
jl
adc
orb
repnz
mov
mov
xor
jb
push
lret
cmp
xchg
in
jb
fidivs
and
add
loope
mov
in
sub
sbb
add
xor
fisttpl
pop
dec
mov
popa
pop
lahf
cmp
sbb
xor
ret
mov
mov
call
push
daa
add
adc
icebp
sbb
rcll
mov
sbbb
and
xchg
sbb
test
adc
jmp
cwtl
add
test
mov
mov
aam
jne
add
lock
jle
cmp
add
bound
nop
adc
int
add
jae
cld
inc
pushf
bnd
adc
movl
add
rorl
loope
sahf
xchg
lods
mov
cmp
sbb
outsl
jecxz
pusha
dec
dec
stos
mov
andb
mov
hlt
or
adc
pop
cli
adc
add
add
rol
mov
out
cmp
cmp
push
movsl
adc
popa
push
jb
and
nop
add
mov
push
push
xor
sbb
in
mov
xchg
mov
dec
xchg
imul
xchg
insl
jecxz
push
push
dec
outsb
xor
popf
cmp
and
sbb
mov
xor
xor
xor
jo
add
fiadds
and
test
test
add
dec
or
cmpsb
out
jmp
pop
leave
mov
xor
push
add
pushf
xchg
and
adc
rcll
leave
loope
jmp
das
mov
ret
sbb
adc
jae
jmp
cmc
sarb
cmp
lea
lds
or
cmp
mov
mov
jnp
adc
mov
add
pop
xlat
add
or
sbb
fbld
shll
loope
and
jb
xor
pop
push
enter
cmp
roll
mov
std
jae
enter
cmc
jge
das
add
es
jbe
adc
out
into
xchg
adc
stos
ss
movsl
lods
adc
leave
andb
adc
sub
jbe
jp
xlat
push
push
daa
add
pop
inc
int
das
mov
add
mov
add
or
adc
mov
add
lods
loope
js
shrb
add
call
add
popa
cld
int3
inc
inc
push
jne
fists
enter
adc
jbe
out
es
push
push
mov
pop
push
stos
add
jp
je
mov
daa
push
cmp
in
dec
and
xor
add
or
add
xchg
jnp
bound
add
out
les
sbb
int
and
push
mov
add
mov
or
xchg
cmp
push
cmc
cli
dec
int3
dec
inc
dec
dec
mov
mov
lds
out
pop
add
and
lret
push
outsb
mov
xchg
movsb
sbb
lods
push
cwtl
cwtl
lea
push
and
push
arpl
pop
mov
mov
jbe
roll
xchg
into
sahf
aaa
xor
sub
dec
mov
push
add
dec
sti
jecxz
jns
fldl
push
add
dec
andb
mov
push
enter
add
add
mov
xchg
push
xchg
mov
xor
fxch
call
add
stos
xchg
and
flds
xor
pop
out
push
int
iret
xchg
or
mov
pusha
shl
pop
lods
push
iret
mov
scas
push
mov
add
add
xlat
scas
inc
or
jne
es
sbb
cmpsb
bound
bound
cmc
repnz
fs
mov
insl
rcrb
dec
add
pushf
aaa
add
cmp
movb
addl
lea
int3
int3
cmpsl
outsb
mov
xor
mov
mov
add
pop
hlt
in
andl
add
xor
push
xchg
mov
xor
inc
mov
mov
imul
push
mov
add
add
leave
adc
pop
pop
sub
aam
stc
mov
popf
iret
mov
push
push
int
aas
sub
fwait
test
lret
popfw
pop
ficomps
and
push
in
aas
inc
mov
or
add
jl
scas
fistl
xchg
clc
pop
inc
and
cld
add
push
add
mov
fs
add
out
and
cmp
loopne
mov
ds
lock
cltd
jno
mov
add
ss
lcall
jb
lret
test
sbb
xor
xchg
push
xchg
ret
add
mov
dec
mov
xchg
insl
push
scas
ret
pop
pop
or
push
negb
add
jne
and
sbb
sbb
add
add
mov
sarb
xchg
insb
dec
or
inc
inc
add
or
add
aas
adc
add
insl
inc
add
fs
mov
or
add
jge
and
push
clc
jp
or
in
or
xchg
jp
loopne
roll
inc
add
and
cltd
add
xchg
cld
inc
mov
jge
mov
xchg
ljmp
sbb
xlat
pusha
mov
call
nop
add
pop
sahf
scas
cmp
fnstsw
cmp
adc
movsb
xchg
add
add
scas
cmc
or
pop
inc
mov
arpl
jmp
and
cmp
addr16
cmc
popa
and
sbb
sahf
insb
notl
imul
imul
add
push
add
xchg
mov
or
push
lret
insl
cs
push
test
xchg
add
cmp
popa
xor
push
cmp
lods
sbb
icebp
mov
push
test
add
and
add
push
xor
inc
add
jg
mov
cmp
lea
xchg
mov
add
jmp
aad
add
add
cwtl
lods
adc
add
nop
and
add
lods
cmp
pop
sub
pushf
inc
push
cli
mov
jbe
push
xchg
insb
adc
fsubl
xor
mov
clc
add
call
sub
ret
xchg
sub
cltd
mov
es
loopne
inc
inc
rolb
ffree
daa
mov
mov
sub
hlt
hlt
xlat
test
xor
repnz
adc
out
add
xor
iret
add
call
push
add
aas
repz
xchg
sbb
push
mov
xchg
add
jle
add
or
cmpsl
sub
jno
outsb
add
icebp
xor
in
js
pop
adc
fmull
add
jp
mov
daa
mov
imul
lds
cmp
fs
cmc
addr16
clc
jns
mov
xchg
int3
and
and
adc
mov
add
lret
mov
iret
ljmp
add
faddl
mov
add
add
add
sub
push
hlt
pop
fisttpl
mov
adc
scas
jbe
dec
sub
cmpsb
adc
mov
lods
sbb
mov
or
add
pop
stc
adc
outsl
xchg
mov
add
dec
push
lea
add
pop
scas
imul
inc
mov
mov
jns
push
cmp
push
fidivrl
jle
xchg
roll
out
pop
add
sub
enter
addl
pop
mov
ljmp
in
lods
add
call
mov
adc
add
push
push
inc
add
movaps
cmpsl
nop
inc
pusha
lds
popf
popf
add
enter
shrb
insb
es
mov
incl
aad
xchg
or
mov
add
mov
std
add
jns
jmp
mov
push
mov
add
mov
push
jb
jnp
add
lods
adc
sbb
popf
add
cmpsb
pop
and
dec
imulb
and
dec
jle
mov
xor
add
lods
icebp
iret
add
jnp
cmpsb
ss
ficoms
clc
xor
aam
mov
push
js
es
add
lock
or
daa
icebp
push
sahf
pop
add
js
cmc
pop
int3
call
xor
sub
add
retw
pop
dec
or
push
xchg
xor
pop
add
incl
fimull
out
adc
add
mov
test
cmp
sbb
jb
mov
repnz
aas
adcl
insl
lret
mov
sahf
out
add
and
or
sbb
xchg
mov
fiadds
and
xchg
dec
xchg
cmp
adc
scas
cmp
data16
jne
dec
push
jns
int
dec
subl
push
mov
xor
xchg
add
andb
adc
icebp
adc
ss
testl
mov
mov
inc
cmp
popa
add
add
repnz
jle
sub
push
adc
inc
jg
push
fiadds
in
add
lcall
rcrb
mov
je
and
dec
push
add
dec
lret
add
insl
jl
add
add
add
sbb
sahf
rorl
nop
out
add
mov
push
mov
decb
popf
xor
inc
push
sbb
stos
add
addl
jecxz
stos
add
dec
ret
out
add
cwtl
inc
sbb
fcmovu
sarb
mov
cwtl
adc
mov
pop
fcomps
gs
add
mov
fdivs
lahf
sarl
xor
or
nop
daa
jg
add
mov
jnp
and
cmp
add
loopne
cmp
loop
add
movsb
pop
xchg
in
fidivrs
adcl
stos
dec
or
sbb
inc
fldl
push
cmp
jnp
or
inc
rcrb
sbb
sti
xor
adc
adc
jmp
dec
mov
mov
std
mov
movsl
outsl
xor
add
in
add
sbb
sub
inc
mov
adc
inc
pop
cmp
and
sarb
cmp
mov
sub
insl
add
cld
pop
add
bound
jg
pop
or
mov
rorb
push
xchg
cs
or
adc
fs
add
xchg
lods
repnz
lahf
popf
mov
sub
sub
pushf
add
call
pop
add
and
stos
sub
jp
dec
fisubs
outsl
loopne
dec
mov
mov
adc
jb
icebp
imul
pushf
add
arpl
das
mov
add
add
add
push
add
decl
sbb
sub
sub
mov
mov
jmp
jb
into
rolb
ret
mov
jo
stos
cmc
add
std
fistpll
addb
or
jo
dec
add
adc
add
inc
imul
jle
cmpsl
loop
pop
stc
out
add
adc
add
dec
push
mov
mov
add
lods
sti
add
inc
sbb
xchg
je
jge
push
andl
xor
sub
stos
mov
add
mov
pop
jb
sti
add
mov
push
loope
leave
sub
popf
mov
dec
pop
and
jp
jo
out
mov
push
insb
jecxz
add
into
in
push
xchg
mov
outsb
add
dec
sbb
dec
cld
add
pop
fs
cltd
inc
clc
pop
cmp
sbb
cmp
add
mov
add
lds
mov
sbb
mov
lahf
xor
xchg
push
jno
addr16
out
dec
xchg
pop
add
add
xchg
outsl
pop
sbb
add
dec
ss
cmp
movsl
pusha
mov
push
jbe
add
mov
push
push
mov
lahf
out
pop
data16
add
shll
inc
icebp
jb
cmpsb
imul
ret
dec
add
sub
les
inc
lret
addr16
je
aas
xchg
xchg
ja
fstpl
jno
lods
int
out
addr16
or
inc
cmpsl
push
mov
push
cld
idivl
lods
loope
rolb
fisttps
sub
sbb
add
and
test
sbb
jns
rolb
xchg
add
jmp
xlat
pop
cli
inc
fs
add
outsb
out
mov
jnp
mov
fs
sub
inc
add
adcl
inc
sbb
mov
dec
add
pop
loop
adc
cli
jae
pop
aas
arpl
jno
mov
insb
sbb
jecxz
dec
jmp
in
add
xchg
icebp
sti
jns
inc
add
dec
add
es
mov
add
add
add
xor
sahf
lahf
xor
pop
fldcw
int
mov
stos
cltd
loopne
sub
dec
fstpt
ds
inc
add
aad
cmp
pop
push
out
pusha
or
lds
mov
sub
mov
xor
testb
adc
sbb
stos
cld
mov
adc
outsb
add
add
ret
add
add
pop
inc
and
ljmp
sbb
imul
aad
fwait
mov
nop
daa
std
imul
std
sub
push
fiaddl
sbb
call
jns
xchg
mov
dec
aad
leave
movsb
mov
inc
add
hlt
inc
sbb
jecxz
iret
pop
cmp
mov
pop
adc
add
cmp
mov
add
pop
mov
push
sbb
mov
sahf
fnstenv
jae
hlt
mov
repz
add
xchg
mov
stc
int3
or
inc
add
push
jno
sbb
add
push
mov
out
leave
jmp
xchg
cmpsb
mov
leave
loopne
ja
insl
sbb
or
addb
mov
adc
out
sub
dec
add
lret
mov
sti
mov
sub
ja
and
mov
outsl
in
aam
add
jbe
or
mov
pop
popa
add
mov
xorb
pand
fs
incl
mov
gs
mov
mov
jno
stos
js
add
aad
repnz
cmp
sub
xor
jnp
sbb
cmp
add
add
movsb
cmp
mov
arpl
lahf
add
push
jecxz
cli
pop
gs
cmpb
loop
jo
shrb
scas
es
add
shl
daa
add
mov
sbb
mov
lods
mov
xchg
popa
imul
mov
jecxz
into
xor
mov
out
in
add
or
imul
mov
or
outsl
add
shlb
in
adc
sti
or
add
sub
jb
jne
stos
lea
sbb
add
mov
jge
xchg
dec
xchg
jns
jmp
bound
hlt
mov
in
mov
out
jp
mov
ss
jne
pushf
bound
inc
jle
pop
add
insl
sub
xchg
loop
jg
les
adc
dec
aam
mov
jb
add
les
mov
pop
mov
add
add
xor
xchg
cmp
vpmaxsw
inc
xchg
jno
add
adc
std
in
pop
addr16
cmp
popf
push
or
das
push
mov
add
dec
cmpsb
push
pop
fs
add
jecxz
adc
inc
pop
leave
push
jne
add
dec
lods
subb
sbb
sub
js
loope
sahf
add
push
lret
xchg
pop
push
cmp
mov
orl
in
sbb
add
andb
mov
and
cmp
pop
out
enter
mov
testb
leave
mov
or
add
mov
roll
xor
add
add
shll
inc
fnstcw
inc
mov
cwtl
test
das
imul
ljmp
je
pop
or
pop
daa
int3
repnz
and
add
and
xor
mov
fstps
test
mul
mov
ljmp
jmp
scas
fisttps
push
mov
cmc
cmpsl
leave
add
jno
or
test
mov
gs
and
mov
lods
ds
cmp
test
mov
enter
push
xor
mov
add
pop
int
into
add
dec
das
out
push
ret
cmc
add
push
popa
adc
xchg
add
adc
std
jae
cmp
or
mov
fs
mov
subb
dec
dec
cmp
sbb
testl
jbe
push
out
testl
fmull
add
cmc
loopne
inc
add
push
or
inc
icebp
mov
dec
js
pop
jne
pushf
pop
add
je
sub
jb
dec
add
mov
add
and
xor
or
lds
roll
xor
sbb
xchg
pop
mov
and
cmp
ss
ljmp
mov
add
into
in
test
cli
add
add
add
mulb
jno
mov
int3
add
cmp
push
adc
add
and
push
add
add
leave
mov
mov
filds
add
pop
adc
je
inc
comiss
dec
sub
mov
inc
add
add
sarl
xchg
add
jo
repz
test
mov
add
test
insl
enter
lret
push
cmp
add
pop
subl
jae
mov
movsb
das
xchg
add
xchg
mov
cmc
and
andb
pop
lods
dec
cwtl
jmp
inc
add
repz
add
xor
arpl
and
or
jns
add
sub
add
imul
rcrb
xchg
xchg
adc
sbb
pop
enter
sub
mov
frstor
mov
aas
dec
loop
cld
sbb
hlt
jl
fcoms
adc
out
mov
scas
rcrl
adcl
mov
or
ljmp
stc
mov
hlt
xorl
out
lds
lock
cmp
lock
add
js
cld
or
lret
pop
insl
mov
idivl
cmp
imul
mov
pop
stc
das
mov
je
rcl
outsl
add
pop
fildl
push
and
hlt
gs
add
popf
jmp
add
add
cmp
xchg
pop
int3
push
add
push
add
cltd
loop
mov
inc
les
xchg
add
rcr
add
mov
in
add
jnp
out
cwtl
addb
adc
xchg
push
imul
add
and
mov
add
xchg
mov
pop
mov
decb
mov
lret
lret
rcrl
ret
sub
or
clc
cmp
paddsw
pop
add
mulb
mov
je
adc
and
pop
testb
movsl
jo
jle
sarb
jns
mov
or
ret
leave
add
daa
sbb
add
push
dec
xor
push
jns
jp
add
add
mov
gs
jo
out
inc
add
cmp
add
cmc
mov
add
movsl
push
pop
sub
sbb
xor
stc
nop
dec
out
mov
add
push
sub
add
xchg
jl
divb
and
sbb
sub
mov
inc
add
addb
xchg
out
cwtl
add
adc
es
sub
and
popf
add
push
daa
dec
arpl
loope
add
pop
in
sahf
add
or
jg
cmp
lret
inc
clc
imul
loop
lods
addr16
push
pop
fcomip
add
lret
add
mov
filds
pop
xor
lret
enter
add
call
add
add
xor
xchg
negb
and
inc
leave
push
add
adc
push
cmpsl
lds
xchg
xchg
or
add
call
cmp
test
cmp
sarl
fs
xor
push
jnp
in
cli
pusha
pop
mulb
add
fstpt
int
fnsave
xchg
loope
sub
sub
cwtl
xchg
push
add
movsl
add
mov
cmpb
mov
add
dec
pop
mov
lods
jnp
push
filds
cli
or
jae
int3
add
lods
xchg
insl
rolb
mov
pop
cwtl
hlt
das
orb
mov
fmull
mov
push
dec
ja
stos
push
dec
in
or
in
push
mov
add
add
inc
add
xchg
fists
and
stos
cmpsb
dec
fildl
les
ss
push
jne
hlt
add
add
std
push
lahf
add
xlat
mov
xchg
cmp
popa
in
inc
cwtl
adc
jp
outsb
aas
test
mov
cmc
dec
mov
sub
cmp
mov
fisubrl
add
rolb
mov
adc
mov
mov
sahf
add
cli
dec
ja
imul
repz
pop
cmpl
lock
adc
cmp
pushf
inc
add
add
mov
inc
add
cs
dec
inc
rclb
es
cmp
movsl
xchg
repz
mov
mov
es
add
xor
mov
sbb
imull
testb
adc
add
or
xchg
or
data16
in
aam
mov
out
enter
add
push
sbb
lock
fnstsw
mov
mov
roll
xor
popf
xor
or
das
enter
aas
cmp
leave
pusha
add
adc
cmp
add
add
jns
inc
loope
mov
fcom
xor
cmp
scas
mov
imul
repnz
fs
pop
dec
lods
mov
sbb
mov
add
xchg
add
sbb
loope
dec
xor
sbb
add
cltd
negl
or
add
add
sti
loop
add
fdivr
add
ljmp
pop
daa
xchg
sub
add
arpl
fstps
add
add
movl
jle
popa
int3
out
mov
andb
jno
popl
sbb
loopne
add
xlat
stos
add
es
decl
or
mov
cmp
jp
add
push
mov
add
push
push
test
jno
add
cmc
lods
dec
mov
push
orb
sahf
stc
add
mov
in
iret
or
or
push
xchg
lahf
push
and
push
inc
add
inc
shll
sar
outsb
or
in
and
mov
outsb
shrl
add
bound
add
rolb
and
movsl
sub
insl
add
add
into
add
rolb
adc
sbb
aam
daa
push
xor
bound
inc
test
es
aam
jmp
ss
add
pop
or
mov
imul
int
jmp
pop
bswap
out
test
popa
pop
add
jbe
add
pop
add
lock
push
ja
and
das
and
add
loope
push
pop
cmp
dec
xor
pop
push
lahf
mov
outsb
mov
push
pusha
jmp
inc
int3
jo
popf
inc
sub
aam
insl
cmp
std
sbb
lods
fnstsw
cmp
pop
outsl
das
mov
cmp
cmp
add
add
add
jecxz
stc
scas
ret
je
pop
mov
adc
mov
clc
xor
xchg
cmp
aaa
into
add
cwtl
add
push
test
or
sub
mov
pop
mov
ja
and
mov
loop
pop
add
add
mov
std
add
in
adc
loopne
cmp
pusha
add
cltd
cld
push
add
mov
cmp
mov
add
jg
or
mov
add
inc
add
inc
dec
push
shll
notl
jecxz
mov
fwait
push
mov
inc
add
mov
push
filds
lea
add
mov
lahf
sbb
sbb
int
sub
and
mov
xlat
ret
xor
sbb
in
add
arpl
mov
and
jne
mov
xor
imul
addb
sub
test
scas
lahf
in
inc
js
sbbl
fpatan
test
xlat
mov
push
arpl
mov
dec
add
pop
addb
out
add
push
add
xchg
push
add
push
jg
cmp
push
mov
dec
stc
jnp
out
inc
dec
cmp
pextrw
pop
push
lret
fcmovnu
or
pop
mov
add
gs
movsb
mov
rclb
adc
push
fcmovnu
rorl
loop
xor
ss
test
mov
popa
dec
sub
je
iret
mov
add
inc
sbb
incb
movsl
add
dec
dec
jns
fnstsw
sar
stos
das
insl
cmpsl
arpl
mov
add
hlt
cmp
push
add
lock
xor
test
repz
in
jb
xchg
add
add
aam
jae
stos
pop
add
fs
popf
fucomip
adc
mov
ficompl
add
test
test
push
add
adc
dec
add
mov
cld
inc
sub
test
les
push
add
add
add
add
xor
je
fldcw
push
repnz
jmp
jge
mov
pushf
push
jne
mov
push
movsb
push
cmp
inc
cmp
adc
or
out
add
mov
add
mov
fsubr
fbld
add
ds
ss
and
adc
mov
push
dec
into
movb
loope
jnp
mov
movsb
out
cmp
add
push
lcall
push
pop
dec
aam
push
xchg
add
pop
add
add
dec
xor
outsl
inc
mov
xlat
hlt
jbe
add
shlb
pusha
fildl
mov
sti
clc
repnz
outsl
outsl
dec
fiaddl
stos
xchg
dec
stc
sar
repnz
push
dec
xchg
mov
jno
xor
ret
mov
stos
jmp
add
add
add
xchg
fwait
mov
int
sub
ret
xorb
cld
daa
add
add
pop
fs
aaa
mov
mov
and
stos
sarl
sub
pop
in
xchg
jecxz
das
xor
add
dec
arpl
bound
xchg
push
in
ret
and
pop
enter
jg
jae
add
jp
mov
adc
in
faddl
xor
push
xchg
fmull
es
push
push
pop
ret
int
lods
into
pop
dec
int3
repnz
and
inc
cli
mov
cmp
mov
cwtl
stos
scas
xor
fucom
add
sub
push
cmp
add
jmp
pop
movsl
mov
add
out
add
addr16
and
xor
jne
shlb
mov
push
mov
add
add
add
les
lock
lea
fcoms
clc
pop
mov
add
lret
fsubs
add
lret
mov
leave
mov
lahf
pop
mov
inc
iret
add
pushf
add
rcl
pop
gs
mov
sti
jmp
iret
hlt
icebp
in
add
push
repnz
test
xchg
jo
cld
loopne
movsb
ds
insb
dec
mov
mov
hlt
clc
cmpsl
fs
jl
mov
testb
hlt
sbb
xchg
icebp
or
stos
sub
rolb
cli
xchg
add
imul
fwait
mov
cld
popa
or
daa
add
cmp
mulb
lea
xor
or
sub
testb
aad
adc
mov
lods
fdivrl
xor
lahf
inc
ds
ret
fwait
or
jne
in
fmull
xchg
and
add
es
stos
stos
add
cmp
pop
aaa
fildl
aad
or
lahf
fs
ljmp
and
add
daa
aas
cmpsb
push
lret
int
mov
in
add
or
inc
popa
and
aam
jmp
sbb
add
add
int3
je
push
loopne
mov
cld
mov
dec
push
lcall
add
fs
cmp
or
vminps
add
push
sbb
lret
pop
mov
or
insb
inc
add
test
sti
add
add
mov
call
push
inc
add
roll
loope
popa
add
jo
scas
xor
clc
mov
xor
cmp
je
es
or
dec
mov
fst
decl
mov
rolb
jecxz
dec
cs
sub
cmp
sub
test
mov
add
pop
out
pop
filds
jg
and
add
lods
shrl
fmull
repz
ret
add
or
cmp
adc
mov
in
add
xchg
outsl
push
mov
cmpsl
xor
inc
adc
pusha
push
scas
cmp
mov
sub
cs
das
inc
fmul
mov
adc
push
and
bound
add
cmp
add
add
fcoml
add
cmpl
out
add
sbb
cmp
add
jnp
fwait
mov
in
mov
xlat
pushf
add
add
out
es
sub
add
lods
jmp
add
scas
lcall
mov
hlt
adc
sub
imul
mov
jb
ret
xchg
push
mov
dec
int
scas
sub
xchg
add
lahf
sbb
push
fistpll
add
adc
loop
xorl
out
push
add
lods
shll
aas
add
add
jnp
add
cmc
mov
pop
ja
popa
xchg
stos
mov
push
dec
xchg
mov
add
lea
enter
out
add
push
mov
mov
add
imul
daa
xchg
jnp
sub
and
mov
insb
dec
pop
scas
add
cmp
jle
cli
add
add
xchg
cli
lds
push
add
lock
cmp
iret
lea
lret
pop
add
mov
aad
sbb
aas
shlb
xor
jae
mov
lcall
cs
jle
test
addb
mov
or
sub
add
sub
xor
xchg
into
repz
ret
mov
push
pop
pop
movb
dec
mov
scas
push
add
stos
mov
jecxz
leave
jg
add
mov
data16
fcmovnb
adcl
pop
xchg
add
jb
imul
lds
test
add
push
clc
movsl
lret
xor
xchg
dec
push
xchg
nop
sbb
ret
in
mov
stos
add
pop
mov
sqrtps
test
cld
lcall
dec
pop
cmp
bound
jb
shlb
push
pop
adcl
mov
xchg
jmp
xchg
mov
or
add
ss
test
mov
and
shl
add
movsb
and
jle
and
bswap
pop
adc
inc
mov
add
cmp
test
jae
ret
add
insl
insb
scas
sti
arpl
stc
adc
mov
out
xor
add
arpl
sub
add
add
ljmp
add
fnstcw
mov
fistps
xor
add
adc
testb
mov
push
je
mov
jno
loop
sub
add
cmp
lods
ja
mov
out
push
shlb
fsubp
dec
jne
dec
add
mov
add
add
adc
outsb
cmp
lods
mov
fisubrl
rorl
sbb
lock
shrb
pop
mov
push
popa
sbb
sti
jnp
xor
aam
sub
xchg
stos
xlat
ja
movsb
or
add
jbe
xor
fwait
or
hlt
cmp
jg
and
stos
xor
add
jle
dec
and
xchg
xor
js
stos
loope
aas
scas
xor
add
mov
add
push
icebp
inc
cmp
divb
add
leave
js
fwait
add
inc
add
loope
mov
push
add
jmp
adc
mov
mov
orb
jno
leave
jl
frstor
mov
add
fidivl
sub
ret
add
enter
cmp
lret
int3
movsb
mov
div
dec
addb
popa
jg
jmp
bound
sub
adc
addr16
mov
dec
add
dec
cmpsb
cmp
loopne
jb
cmp
and
incb
push
mov
js
pop
mov
cmp
add
lret
mov
add
fistpl
arpl
add
mov
jb
pmaxub
sub
pusha
add
xchg
scas
jg
insl
leave
aam
xor
add
jb
mov
or
adc
add
loop
pop
enter
sub
xchg
cmp
stc
push
adc
and
arpl
jo
sub
nop
aad
push
push
pop
les
dec
arpl
dec
mov
cwtl
xchg
ds
sbb
and
add
aam
add
clc
mov
les
or
sbb
xchg
sti
jb
add
repnz
and
add
and
cmp
add
popl
test
sub
cmp
das
ret
test
cmpsl
add
cmp
mov
ljmpw
mov
lods
push
lds
out
add
push
mov
test
popa
bound
repz
and
in
push
cmpsb
aaa
fbstp
pop
arpl
pop
pop
into
enter
orb
push
jno
push
push
popa
pop
ja
out
fstpl
xor
arpl
pop
mov
sahf
cmp
gs
sti
mov
xor
add
flds
out
hlt
pop
push
xorl
sbb
xchg
dec
imul
push
add
jecxz
push
add
xchg
jns
and
jnp
add
mov
or
add
inc
add
mov
mov
iret
push
stos
xchg
out
sub
mov
fwait
std
fcomps
lcall
aad
add
jp
mov
fcomps
call
xor
addb
mov
xchg
lahf
mov
hlt
mov
sbb
sbb
add
outsb
shlb
push
pop
nop
sbb
cmp
mov
jno
or
ja
lods
insl
push
ja
ror
aaa
pushw
fildl
sub
jo
ss
cltd
loope
mov
mov
test
pusha
fistl
lret
sbb
add
dec
leave
xchg
sub
cld
cmp
add
dec
es
cmp
pop
dec
fcmovnb
inc
sarb
mov
lcall
jb
mov
outsb
push
sbb
outsb
add
dec
insb
stc
cwtl
inc
lock
roll
mov
mov
mov
mov
xchg
ffree
jp
cs
mov
cmp
mov
sahf
cmpsb
inc
or
mov
and
push
sbb
xor
sub
adc
dec
dec
test
xrelease
adc
pop
stos
sbb
mov
pop
fsubs
je
stos
inc
repnz
add
inc
inc
or
es
sti
imul
dec
insl
jge
xchg
mov
hlt
cs
or
or
xchg
jae
inc
fstl
mov
xchg
ss
inc
push
add
mov
xor
mov
in
cli
inc
flds
fldenv
jle
or
xchg
imul
add
cmpsb
xchg
je
clc
insl
loop
pop
pop
jmp
add
das
pop
mov
fbstp
enter
pop
out
outsl
stos
in
mov
icebp
ret
jl
add
sbb
add
js
or
or
cmpsl
popa
push
leave
dec
jns
fsubrl
xchg
and
add
mov
sub
cmp
mov
add
dec
mov
js
dec
sbb
mov
int3
add
inc
pop
add
test
adc
lcall
iret
sbb
dec
adc
fwait
and
shlb
mov
adc
pop
mov
adcl
inc
add
bound
mov
jg
lods
loope
sub
fldenv
sbb
add
mov
add
add
stc
inc
dec
xor
and
mov
sub
xchg
movsb
jae
xor
lock
or
add
add
cmc
sbb
aam
jmp
pop
add
or
sahf
and
aas
out
add
jecxz
add
jo
iret
icebp
add
pop
push
cltd
mov
mov
mov
push
sbb
xor
pop
add
bound
mov
hlt
add
adc
es
mov
xchg
test
add
jge
imul
or
aad
ja
pop
mov
mov
mov
jp
test
add
add
lods
cmp
aad
jbe
out
inc
adc
add
add
lods
ret
sub
pop
add
repnz
into
fwait
adc
loopne
mov
pushf
stos
push
loope
nop
setg
cmp
add
bound
pop
add
push
es
shrl
stos
fmull
loop
mov
jg
dec
outsl
push
dec
fwait
sahf
cmp
pushw
cs
add
sahf
xchg
xor
loopne
into
push
push
push
sub
hlt
sbb
add
sbb
or
inc
add
dec
xchg
ret
cld
in
pop
inc
ja
sbb
add
in
sti
jmp
push
ds
clc
inc
int
mov
hlt
add
out
add
add
ds
and
pop
or
lock
mov
sbbb
idivb
jb
popa
loopne
jmp
mov
mov
xchg
push
aaa
das
sub
jo
inc
jae
in
sub
push
dec
add
js
add
xor
test
test
out
cs
daa
fwait
add
cmpsl
call
aaa
jnp
adc
adc
sbb
dec
fcmovne
lret
xor
lock
iret
dec
add
loopne
movsb
add
or
xchg
addr16
cmp
dec
mov
insb
add
and
cmp
rorb
add
test
fbld
flds
push
mov
xor
mov
sub
out
lret
add
cli
js
jae
add
jno
jno
mov
out
mov
jg
add
push
xchg
in
jg
ss
lahf
mov
add
add
shlb
iret
fistl
test
sub
pop
popf
jl
loop
shlb
testb
sbb
mov
jle
ljmp
mov
jg
mov
mov
xchg
pop
add
lds
data16
and
dec
fwait
mov
mov
add
adc
out
cmp
mov
inc
add
mov
push
ja
add
ja
inc
add
test
ljmp
add
lret
negl
mov
stos
popf
and
jno
pop
mov
repnz
add
add
add
mov
or
dec
or
js
add
inc
nop
cmp
bound
dec
add
stc
call
cmp
lds
jp
clc
repz
add
or
xlat
mov
jnp
sbb
jmp
je
fnstenv
jp
dec
daa
loopne
xchg
sbb
ret
sbb
lcall
mov
jecxz
enter
cmp
inc
xor
mov
fs
add
cmp
lret
xchg
lret
ss
push
pop
xchg
push
xchg
add
add
cmpsl
stc
leave
mov
sbb
in
icebp
lcall
imul
pushf
xor
das
push
dec
sbb
loopne
add
movb
push
xor
pop
shll
xchg
mov
mulb
dec
push
mov
pusha
imull
nop
out
fldcw
mov
icebp
add
add
loop
testl
aam
ljmp
sbb
cmp
mov
add
jns
or
pop
cmp
lock
addr16
push
add
jecxz
add
add
add
addr16
insb
shlb
push
add
lahf
xor
out
outsb
test
add
add
loop
sub
adc
push
add
cmpl
loope
cmp
push
int3
sub
imul
insl
int
push
add
push
mov
mov
jne
sbb
pushf
xor
cli
mov
mov
daa
je
xor
adcb
xchg
int
pop
add
sbb
data16
subb
iret
xor
gs
xor
mov
mov
andb
cltd
fistpl
nop
sub
aad
xchg
inc
test
or
xor
mov
shll
cmp
pop
movsl
js
es
pop
jle
decb
or
sub
popf
aas
add
btr
sub
xchg
and
cmp
nop
addb
repnz
inc
mov
imul
add
mov
sbb
rcrb
jg
pop
nop
bound
mov
dec
imul
inc
addb
add
or
pusha
add
jmp
mov
add
xor
xor
ret
add
js
jl
pop
add
push
sbb
add
push
push
sbb
fisttpl
jp
fs
dec
xchg
js
add
fldt
bound
daa
push
mov
add
cmp
clc
jmp
push
add
arpl
mov
lret
pop
in
pop
mov
jp
push
lret
pop
xchg
icebp
pop
mov
aaa
push
push
sub
pop
aaa
add
adc
cmpsl
ds
inc
leave
cs
roll
jl
sub
sti
leave
mov
add
std
sbb
and
and
inc
push
sub
ret
mov
ljmp
pop
lret
add
add
pushf
mov
sbb
jbe
xchg
mov
pop
jmp
inc
call
pop
add
daa
pop
je
cmp
sub
jge
pop
dec
ss
loope
daa
xor
shll
push
add
jnp
add
sub
jb
or
xor
add
and
cmc
add
arpl
hlt
cmpsb
aam
adc
movsb
out
dec
lahf
add
mov
pusha
add
add
push
nop
adc
outsl
mov
ret
cmp
add
arpl
add
add
xor
pop
add
shl
add
add
push
fsubrs
aaa
xchg
test
add
in
add
inc
addr16
add
push
add
sub
pushl
mov
add
negl
andb
out
add
mov
das
dec
jmp
mov
mov
leave
jb
ljmp
add
roll
jb
mov
add
pushf
sub
inc
ret
inc
gs
sbb
repz
jmp
leave
test
and
imull
pusha
add
dec
add
std
or
repnz
add
fs
add
mov
add
loopne
pop
dec
xlat
in
rolb
inc
call
pop
xchg
or
mov
inc
iret
or
add
sbb
sbb
inc
add
lahf
ds
mov
jae
cmp
addr16
mov
outsb
shlb
adc
or
out
mov
adc
cmp
loope
push
cmc
add
jne
mov
pushf
mov
hlt
xchg
xchg
in
add
or
adc
cld
scas
aad
fwait
sub
lcall
mov
jecxz
mov
lahf
and
and
pop
loopne
lods
cmp
loopne
adc
cmpsl
sbb
push
nop
xor
jne
test
dec
push
and
mov
scas
mul
pop
push
dec
rcl
pop
int
adc
push
xor
pop
pop
jnp
addr16
mov
or
push
add
or
rcl
add
adc
dec
adc
add
inc
cmp
sub
test
xchg
add
push
xchg
mov
icebp
xor
shl
xor
jge
fistpll
mov
xlat
adc
push
xchg
add
mov
pusha
jle
mov
push
icebp
sbb
mov
xchg
add
insl
ljmp
lret
fildll
scas
subl
jle
ds
aad
arpl
scas
aam
leave
mov
or
push
push
add
add
xchg
dec
pop
insl
inc
repz
xor
and
sbb
mov
add
fisubl
cmpsl
add
pop
pop
aaa
mov
add
add
mov
xor
jne
push
mov
sbb
inc
add
jl
lahf
incb
sbb
dec
xchg
add
roll
sti
xor
fwait
mov
lods
mull
jge
xchg
adc
cmp
cmc
add
mov
mov
iret
cmp
xchg
sub
jbe
daa
lret
mov
jo
mov
aaa
repz
add
pop
sbb
add
sbb
out
mov
adc
cmp
dec
cmp
cwtl
dec
cmpsb
dec
imul
jbe
push
mov
add
push
add
jnp
cmp
dec
xchg
xor
testb
jo
adc
out
pop
push
outsl
mov
test
out
dec
xlat
cmp
pop
sub
pop
test
cld
mov
mov
pop
cmpsl
js
jl
xor
and
mov
ret
push
icebp
xchg
add
dec
pushf
loop
add
mov
shlb
push
inc
pop
decl
in
stos
loope
cmp
stos
mov
jne
or
mov
jns
shrb
lea
pop
popa
xor
les
pop
pop
fisttpll
adc
xchg
add
add
inc
imul
xor
mov
cwtl
test
mov
xchg
loopne
push
fs
subl
in
pop
scas
sbb
mov
in
cmc
shr
loope
out
add
hlt
mov
jp
outsb
fwait
jp
add
mov
mov
mov
cmpsb
icebp
lret
add
xlat
cmp
out
or
and
jns
shll
inc
jmp
inc
in
int
cs
lret
pop
adc
pop
xor
xor
test
add
cmpsl
add
sbb
cmp
test
push
jge
jmp
movsl
adcl
fbstp
lret
jmp
add
cmpsb
nop
inc
stos
insb
pop
repz
push
in
dec
and
push
call
add
pop
int3
iret
arpl
insl
and
cld
dec
adcb
xrelease
inc
cmpsb
adc
push
push
push
mov
and
add
pop
jns
xor
in
adc
pop
in
test
lock
stos
ss
call
adc
faddl
lock
lea
es
add
inc
xchg
in
or
mov
sub
iret
adc
fcoms
lcall
push
xchg
mov
mov
notb
mov
and
dec
sub
insl
cmpsl
cs
mov
cmp
mov
add
pop
push
int3
les
xchg
fmul
inc
add
and
xor
data16
arpl
dec
aaa
or
sub
xlat
add
insl
sub
push
inc
mov
push
xlat
jno
int
cltd
xchg
into
xor
sbb
add
in
jb
mov
and
pop
pop
add
out
pushf
addl
pop
cmp
mov
sbb
test
cwtl
bound
jnp
mov
add
imul
jnp
lock
mov
dec
std
cmc
insl
fs
jmp
and
mulb
movl
adc
cwtl
popa
xchg
dec
aas
mov
rorl
shlb
sub
and
insb
cmpsl
inc
push
addr16
add
add
cmp
cmp
notl
fsubl
aas
out
add
add
sbb
mov
cmp
test
and
dec
adc
pop
mov
or
fwait
adc
dec
or
sub
in
stos
dec
addb
fbstp
cmpsb
sbb
xor
sub
jmp
ret
pop
inc
mov
je
ja
adc
in
cmp
adc
xchg
xchg
test
push
iret
cmpsl
loop
add
into
imul
dec
mov
mov
jg
rolb
mov
subb
mov
filds
jmp
mov
inc
push
incl
dec
lods
shlb
sub
loop
pop
add
stos
leave
dec
stos
add
add
add
jp
and
mov
loop,pt
in
add
sbbb
xchg
add
scas
ljmp
shrb
or
or
mov
dec
cmp
cld
sbb
mov
movsl
rcrl
xor
or
repz
add
fnstenv
add
push
test
je
inc
add
fs
mov
cmp
out
out
add
insl
jo
roll
push
add
jns
pop
lds
xor
aad
pop
rolb
lret
xor
int
add
insl
inc
dec
lcall
repz
cwtl
pop
add
add
add
leave
testl
and
xor
enter
jmp
add
cltd
pop
loopne
insb
cmp
sub
adc
inc
fldt
mov
add
adc
mov
jmp
lods
faddl
in
jge
fsubrs
add
adc
ret
xchg
icebp
xor
jns
sti
add
lret
push
add
shl
adc
and
mov
aaa
cmp
push
cmpsl
xor
mov
dec
insl
cmpsl
test
mov
push
adcb
jns
scas
popf
sub
push
clc
inc
mov
roll
xchg
or
mov
ljmp
and
dec
pop
mov
or
cmp
std
ds
sub
dec
jecxz
add
xor
loop
ror
loopne
repz
aad
ds
shrb
mov
cmc
add
ja
ror
dec
pop
loope
add
sti
outsb
add
mov
add
movsb
cmpsl
add
jbe
xchg
test
add
daa
push
add
add
cld
push
jne
pop
les
and
pop
inc
outsb
cltd
adc
xchg
add
into
and
fistl
sbb
loope
mov
add
add
cltd
xlat
sbb
sti
in
negl
stos
nopl
iret
or
add
adc
add
in
adc
add
push
add
je
add
leave
or
xor
out
fstl
sub
in
mov
xor
adc
add
inc
loope
rorb
mov
xchg
jns
push
icebp
add
mov
gs
xchg
add
ret
dec
cmp
inc
sub
cmp
push
jbe
push
mov
pusha
sti
shrl
mov
mov
cmpsb
mov
pop
sub
jmp
je
pop
add
stc
dec
sub
and
adc
jg
dec
int3
rcrb
add
add
add
add
popa
xchg
push
add
sub
ja
and
fs
inc
jl
daa
add
ds
mov
add
xor
mov
adc
add
fbstp
shrl
in
sub
inc
decb
xchg
add
sarl
sbb
mov
lahf
sub
lds
adc
and
sub
lret
add
or
pop
rcrb
xor
pop
fiaddl
jnp
dec
pop
repz
inc
aaa
sbb
and
test
push
pop
inc
fisubl
and
adc
add
pop
aas
pop
sahf
cld
or
imul
fiadds
jnp
xchg
push
scas
lds
movsb
mov
inc
popf
repz
xchg
add
call
dec
fs
fimuls
stc
push
fsubs
cmp
subl
xchg
lahf
lea
xor
add
inc
sbb
loopne
add
enter
sub
add
xchg
int
gs
ret
mov
fldl
mov
dec
sub
sub
out
mov
dec
or
add
mov
out
in
loopne
cmpsl
hlt
inc
mov
inc
mov
dec
and
je
inc
add
mov
orb
rcll
iret
push
jge
mov
sub
loope
es
add
mov
mov
fcoml
push
mov
sub
and
xchg
rolb
dec
xchg
adc
data16
sub
add
cld
or
mov
scas
mov
jp
mov
mov
icebp
adc
mov
add
pop
gs
push
call
push
js
cmc
mov
rcrb
scas
dec
sbb
add
sahf
add
cmpb
jge
rcrb
add
leave
add
aam
and
incl
push
lods
push
imul
out
mov
in
mov
sbb
ss
and
adc
aam
adc
xchg
add
dec
cmp
es
adc
negl
push
push
sbb
andb
ja
iret
aam
cli
fucomp
add
fmuls
fiadds
mov
aam
mov
and
outsl
pushf
push
lea
sbb
mov
frstor
sub
add
std
repnz
jp
scas
add
ss
into
xchg
pushf
cs
jp
push
lcall
enter
xor
pop
add
dec
in
add
sti
or
add
cmp
test
push
xor
dec
jno
fs
push
int3
push
mov
das
xor
jecxz
add
rcl
push
shll
add
push
add
stc
xchg
stos
jmp
xlat
pop
jae
test
xchg
lret
mov
gs
sarl
jae
add
sbb
lds
lahf
rcr
lcall
push
cmp
add
cmp
andl
mov
xor
in
push
add
out
add
pop
aaa
imul
fiaddl
mov
or
les
xchg
push
jg
pop
rclb
add
pushf
movb
aad
in
add
add
cmp
xor
jb
icebp
xchg
mov
add
pop
ret
add
data16
stc
xor
pop
out
sbb
sti
sbb
cs
push
movsl
mov
fwait
dec
adc
call
mov
pop
mov
cmp
pop
xlat
add
filds
mov
rclb
test
add
cmc
popa
add
xchg
add
jno
insl
and
rorl
and
shr
adc
mov
aaa
xchg
sub
add
fsubp
pop
push
cmpsb
push
mov
push
push
jne
iret
or
loope
fwait
subb
add
iret
mov
data16
mov
push
add
fnstenv
nop
xchg
pop
jmp
adc
mov
leave
pop
imul
fucomp
mov
xor
sbb
dec
outsl
pop
fstl
icebp
mov
outsl
negl
jge
aas
sub
cltd
bnd
jns
push
add
jne
add
fmul
push
inc
add
scas
mov
fsubrl
icebp
dec
dec
lret
add
add
cmp
add
into
cs
mov
stos
lahf
outsl
add
add
ss
sbb
outsl
sub
mov
xchg
int
popa
mov
or
cwtl
inc
inc
jo
mov
iret
sub
sub
scas
push
xchg
jl
dec
ret
add
xchg
scas
push
imul
cmp
add
ss
cmc
int
push
adc
add
and
xchg
imul
cmp
in
dec
mov
or
cwtl
sub
xchg
mov
sub
mov
cmp
ss
bndstx
cmp
les
add
add
add
cmp
jo
jb
and
aam
outsl
addb
ss
sub
dec
jge
repnz
and
or
and
dec
call
popf
aam
cmc
outsb
adc
out
push
xchg
mov
push
dec
mov
cmp
push
jne
mov
add
scas
call
add
adc
and
mov
mov
adc
mov
movsl
daa
add
add
add
insl
xor
adc
mov
lods
fs
ss
fcoml
cmpsb
mov
stos
dec
jns
sub
xor
xchg
stos
mov
jno
ljmp
jmp
rclb
xor
mov
imulb
jne
bound
popa
loope
mov
xchg
fidivs
adc
lret
add
ja
jecxz
cmc
lods
adc
adc
mov
pushf
neg
add
jb
add
jns
dec
scas
mov
inc
pusha
cmpsl
pop
into
ret
loopne
push
in
rcl
insl
cmp
dec
push
sbb
add
int
pop
mov
out
or
lahf
aam
mov
cltd
int3
add
lret
mov
cld
cwtl
cmp
lret
add
shrb
push
in
mov
in
jge
inc
mov
imul
lret
sub
xchg
add
add
jmp
cmp
loop
or
jbe
cmpsl
add
add
leave
and
out
cli
je
add
cmp
pop
shll
dec
negb
in
dec
add
adc
cwtl
stc
fildll
inc
movb
cmc
flds
add
mov
sbb
in
add
add
pushf
in
mov
cmp
add
fldlg2
insl
adc
mov
lea
cmpsl
pop
fs
add
ss
out
add
fs
dec
mov
xchg
mov
ljmp
adc
pop
lds
shrb
or
xor
jge
bound
inc
sbb
xchg
push
mov
lds
or
insb
stos
and
sahf
sti
repz
scas
xchg
fidivs
jbe
mov
jbe
insb
fisttpll
mov
fbld
cs
mov
mov
sbb
popf
add
xor
mov
add
adc
outsl
xchg
jns
divl
dec
fdivl
in
shl
inc
sub
pushf
outsl
push
pushl
and
fadd
mov
add
faddl
cmp
iret
aas
decb
add
sbb
sbb
movl
movsl
push
push
add
int
sbb
imul
add
sbbl
xchg
sbb
jmp
and
mov
movsb
add
pop
mov
add
jmp
les
pop
lods
loope
std
mov
call
push
iret
xlat
mov
jne
add
add
aaa
nop
dec
mov
lcall
xchg
dec
nop
xorl
sub
cli
add
movsb
jae
test
pop
leave
rcl
andl
add
cmp
xlat
push
dec
sbb
insl
add
imul
mov
into
jmp
aam
cmp
lods
cmp
mov
mov
jle
mov
sub
fcmovnu
pop
mov
pop
sbb
add
dec
iret
and
stos
cwtl
or
sbb
add
outsl
pop
arpl
mov
lods
add
inc
iret
xchg
jns
add
sti
or
jle
andl
inc
sub
sbbl
rolb
lods
test
mov
dec
add
pop
add
xor
call
inc
dec
out
xchg
popa
jbe
mov
daa
mov
pop
jno
or
sub
add
xor
in
mov
outsl
mov
dec
xor
popl
sbb
sarb
pop
lcall
fcom
mov
adc
and
mov
popa
loop
mov
add
in
shl
adc
ja
sbb
push
adcb
inc
ss
jb
mov
repnz
inc
mov
add
sbb
jo
add
add
mov
stos
adc
es
jo
lahf
add
add
pop
xchg
add
add
add
out
fsubr
sti
cwtl
pop
add
jle
mov
clc
xor
shll
inc
mov
gs
jecxz
mov
notl
add
sbb
cmp
add
loop
dec
jg
push
outsb
add
imull
jmp
sbb
dec
aam
std
enter
and
lea
daa
std
pextrw
mov
jno
mov
xchg
pop
mov
and
cmp
sbb
int
push
ss
test
cmp
cs
into
or
add
aam
clc
mov
add
rorl
je
nop
adc
and
rorl
add
jne
subl
pop
and
es
push
testb
sub
roll
xor
xor
mov
inc
jmp
add
das
clc
mov
enter
and
stos
ror
or
mov
dec
mov
xor
mov
fdivs
xchg
cmpl
cmp
bound
adc
add
dec
cwtl
add
add
ficoml
push
add
xchg
and
js
mov
clc
xor
imul
fadds
pop
or
push
sbb
mov
icebp
cwtl
mov
push
aam
dec
imul
or
js
nop
pop
jo
lock
mull
add
cmp
xchg
add
je
imul
push
push
xchg
mov
cmp
popf
outsl
ljmp
push
xchg
xbegin
cmp
add
pusha
data16
mov
fisubl
rolb
add
rcl
jle
add
jnp
pop
add
pop
lods
imul
jmp
ret
pusha
lret
rcrb
mov
fistps
shll
das
mov
mov
mov
and
add
aas
test
int
and
add
popa
loopne
ficoms
ret
sub
mov
jo
cmp
inc
aam
cwtl
out
in
push
iret
pop
cmp
add
andb
push
mov
add
jb
icebp
js
sbb
jae
shl
inc
add
jb
mov
hlt
ja
dec
movsb
js
and
dec
mov
inc
lahf
adc
test
xchg
enter
int
jbe
outsb
push
inc
xchg
xchg
mov
jg
mov
fildl
dec
pushf
imul
pusha
adc
lods
lods
pop
adc
loope
call
add
leave
add
sub
add
test
sti
subb
mov
mov
adc
bound
jnp
dec
adc
sbb
cmp
lea
sub
pop
push
addb
mov
mov
add
add
inc
xchg
dec
outsb
cmp
mov
inc
flds
daa
pop
mov
aad
push
sub
xor
push
popa
pop
in
xchg
dec
sbb
jae
daa
add
mov
test
dec
lods
sbb
pop
jne
sub
or
aad
stos
adc
add
leave
das
cmp
into
add
inc
dec
stos
jbe
ror
mov
gs
in
fildll
push
add
lahf
adc
push
repnz
jbe
or
dec
add
add
add
xlat
cwtl
and
adc
pop
pop
out
push
pop
jp
mov
push
pop
mov
iret
fstp
dec
jnp
add
jecxz
insl
out
mov
movsl
sub
jmp
push
add
inc
cld
xor
or
pop
inc
pop
add
repnz
xor
jmp
and
add
std
int3
lea
fcoml
mov
jns
jae,pt
sub
mov
push
inc
fwait
dec
pop
add
incl
push
or
rcrb
dec
and
ss
aaa
cmc
dec
pop
loopne
roll
or
in
add
push
in
data16
cmpsl
add
cmp
mov
mov
mov
out
pop
mov
adc
push
mov
add
mov
inc
cmp
pop
and
dec
out
add
mov
jae
pushf
adc
adc
sbb
sbb
out
push
aas
mov
andb
push
mov
popa
neg
in
jmp
insb
clc
ja
xchg
dec
mov
xchg
mov
mov
cmp
ja
dec
loopne
xchg
push
cli
add
fldl
mov
inc
hlt
dec
inc
rorb
js
aas
add
pavgb
lods
inc
flds
or
subl
xchg
add
mov
inc
add
popf
jns
and
inc
out
aam
rcrl
add
in
loopne
jge
sub
add
mov
add
mov
incl
add
jb
mov
jno
shrl
filds
add
lret
fwait
mov
push
lahf
add
xchg
movsb
add
mov
and
inc
xchg
add
pop
ds
cmc
mov
pop
mov
mov
pop
out
shlb
subb
add
daa
test
add
pop
push
jle
ss
sub
inc
cmp
shlb
shrb
sub
push
in
roll
mov
inc
addb
xchg
dec
mov
sbb
inc
pop
xor
sbbb
les
jno
mov
dec
cmp
sbb
out
sub
pusha
jg
mov
add
shll
mov
pop
mov
jge
jb
add
cmp
push
add
cltd
dec
xor
mov
xor
mov
xor
int3
cmc
insb
sbb
test
add
and
sub
xchg
add
sub
dec
lea
xchg
loop
pop
ror
push
add
add
pop
lahf
jno
test
stos
push
mov
mov
ret
loop
jge
add
cwtl
push
cmp
ljmp
xorb
imul
test
add
add
testl
adc
and
adc
cmp
add
rolb
sbb
setp
pushf
add
adcl
add
in
icebp
sbb
ss
add
mov
data16
lret
or
fidivs
inc
lock
add
or
adc
mov
rclb
pop
lcall
push
add
scas
xchg
sti
jmp
add
add
sub
loopne
data16
and
or
mov
clc
pusha
push
shrb
add
mov
mov
cld
sbb
xor
ret
mov
icebp
sbb
in
movsl
push
add
pop
loop
adc
dec
shlb
sbb
jge
add
xchg
and
push
lock
add
inc
aad
push
or
add
ror
lret
lea
andb
ljmp
add
data16
adc
je
push
int3
or
adc
cli
psubsw
aas
or
out
je
sub
loop
add
in
pop
jbe
add
sbb
adc
pop
sbb
int3
mull
or
and
and
add
add
mov
pusha
punpckhwd
add
add
bound
ja
dec
add
pop
or
out
push
mov
and
fadd
adcb
faddl
adc
popa
js
add
or
pop
repz
mov
mull
out
in
mov
insb
or
lcall
add
ret
and
mov
jp
sbb
cmp
shlb
push
in
jl
pop
sub
out
push
sub
xor
or
cwtl
cltd
fisubl
fs
add
pop
aaa
fwait
test
xchg
pop
jge
push
nop
pop
jmp
bound
fnstcw
mov
js
insl
pop
xor
mov
lahf
mov
lods
cmp
bound
inc
jo
addl
stos
jl
xor
push
push
mov
lock
cmpl
cmp
test
sbb
loopne
mov
add
add
adcl
add
cltd
mov
or
insb
test
movsb
inc
mov
pop
icebp
movsb
sub
stos
popl
nop
fstps
mov
testl
lcall
fwait
andb
jb
adc
or
fcomi
pop
notb
ja
add
daa
dec
mov
mov
andb
aam
add
ror
ret
mov
mov
mov
in
je
xor
and
jecxz
adc
inc
or
mov
pop
and
cmpsl
test
loop
movsb
lea
cmp
adc
lds
hlt
or
cmpsb
rcll
mov
xchg
push
out
out
mov
mov
test
mov
and
arpl
aam
adc
stc
sub
add
test
filds
mov
cmp
das
cmp
out
fs
pop
loope
and
adc
mov
add
leave
add
ret
mov
cmp
adc
adc
push
pop
jae
add
pop
mov
jne
call
mov
and
adc
add
ja
das
inc
rcll
daa
mov
sub
xlat
mov
test
lods
add
fs
mov
mov
sti
add
add
cltd
jb
push
pop
push
add
sti
loop
cmp
scas
std
push
jg
divl
mov
jno
and
and
jmp
push
sub
jg
jl
cmc
mov
popa
or
std
inc
mov
mov
pop
inc
call
jne
push
daa
add
fisttpl
mov
and
mov
and
jns
test
add
rcrl
fdivl
lods
std
test
int
ljmp
dec
push
add
addr16
mov
cmpsb
in
add
jle
or
or
cpuid
jecxz
rolb
inc
jg
add
nop
jb
bound
clc
fsubr
pop
or
scas
adc
cmp
cli
add
add
jae
jmp
xor
mov
jp
lock
jp
and
mov
cwtl
adcb
jno
jne
nop
sbb
push
jl
aas
add
cmpsl
dec
add
pop
rcrb
dec
jle
mov
cmp
cld
sahf
mov
pop
dec
inc
addr16
sub
mov
dec
xchg
jno
xor
add
inc
mov
jo
flds
pop
ljmp
add
sub
inc
and
add
jae
cmp
inc
cmp
push
jns
push
mov
in
dec
addr16
mov
out
lods
push
mov
int3
jmp
mov
cmpsb
adc
push
inc
imul
xchg
ja
inc
lahf
in
orb
testb
xor
jnp
mov
les
sti
mov
out
adc
xchg
in
sub
jge
pop
out
mov
sbb
cmpsb
lds
fsubrs
stc
mov
andb
mov
mov
lcall
sar
inc
mov
mov
cmp
ljmp
xchg
stc
cmp
mov
mov
imul
cwtl
ds
dec
xchg
pop
add
mov
add
add
jbe
mov
movsl
dec
addr16
mov
xor
pop
sbb
pop
pcmpeqw
dec
ja
scas
jb
aas
scas
das
add
stc
rol
test
aas
add
adc
pop
xchg
fcmovu
lods
lods
cmp
sub
daa
sub
fidivl
xor
add
popa
fwait
loop
add
stc
or
clc
bound
stc
cmp
add
dec
cmp
fildl
inc
add
or
sbb
xchg
inc
add
dec
cs
add
add
cmp
xor
push
push
sbb
nop
divl
push
xchg
pop
dec
addr16
mov
dec
mov
lds
add
mov
repz
lods
shrb
add
add
mov
mov
xor
mov
popa
and
xchg
int3
mov
inc
jno
fs
cmpsb
ja
jle
xchg
adc
cmp
pop
in
rcr
add
clc
jle
lcall
out
iret
add
dec
out
addr16
add
jnp
call
lahf
mov
mov
mov
callw
mov
sbb
std
mov
icebp
push
pop
add
stos
push
call
loop
dec
jb
jmp
cmc
xor
dec
inc
std
repnz
int3
fucomp
mov
xlat
testl
call
in
clc
push
or
sub
cmpsb
xchg
dec
icebp
add
rcr
push
pop
cwtl
add
and
xor
cmp
leave
gs
add
rcrl
popf
into
cmc
sub
add
cltd
jno
cmovne
pop
sub
dec
clc
push
inc
mov
mov
mov
add
hlt
lds
jnp
mov
andb
pusha
add
les
lods
fld1
add
pop
sub
push
add
sti
stos
fiaddl
inc
nop
mov
pop
aad
add
xor
sub
aaa
add
imul
test
add
lds
sahf
xlat
jo
mov
cmp
dec
ficompl
push
push
bnd
mov
aas
fcomps
pop
and
push
insl
add
jb
add
sbb
into
daa
inc
add
sahf
add
jp
outsl
lock
jle
xchg
and
loop
add
add
add
jle
jno
aad
sbb
cli
neg
icebp
in
jecxz
lcall
sti
test
sbb
aad
mov
or
sub
mov
pushf
mov
les
stc
push
lcall
scas
add
xchg
cmp
mov
jne
jnp
sti
lcall
cmp
or
fists
mov
add
add
rolb
cmp
adc
ljmp
test
push
xor
out
jge
pop
add
ss
add
add
andb
mov
insl
add
mov
push
push
push
mov
inc
stos
sub
dec
out
sbb
cld
mov
sbbl
inc
push
dec
mov
xchg
mov
mov
pushf
jnp
mov
cmp
push
icebp
sbb
mulb
jp
mov
testl
pop
mov
adc
push
add
leave
popa
add
add
xchg
add
adc
mov
pusha
cs
push
std
ljmp
add
out
repz
testl
inc
icebp
frstor
pop
adc
insl
pop
add
add
mov
sbb
push
data16
add
loope
les
movsb
addl
push
out
adc
add
mov
es
mov
lea
jle
insl
cmp
add
xchg
adc
add
cmpl
scas
das
cmp
sahf
inc
in
mov
adc
pop
add
xor
cmpl
lret
mov
repz
aas
cmp
test
or
lds
mov
add
lock
or
sbb
add
outsl
ljmp
loopne
sub
mov
push
add
cmp
mov
loop
xchg
dec
sub
cmp
pop
or
out
adc
inc
test
add
and
mov
divb
lods
jge
fadds
fimull
and
in
outsl
outsb
push
roll
mov
and
add
add
dec
leave
ljmp
inc
or
add
sbb
xor
lret
lret
mov
jbe
mov
out
inc
scas
rcll
ja
add
add
jmp
repz
cmp
add
popf
add
add
jnp
cs
or
or
pop
lahf
push
roll
or
jle
loop
add
fdivrs
add
mov
add
rcll
lahf
add
imul
add
add
xor
pop
cmp
rolb
push
add
cmc
add
out
std
loopne
ja
sub
cli
add
adc
cli
add
push
add
ss
dec
add
add
xor
jo
mov
add
loope
iret
add
stc
mov
pop
or
add
je
inc
in
cmp
rclb
cmp
addl
push
pushf
jo
add
rcll
lcall
shll
mov
xchg
xchg
sub
cmp
or
add
adc
sbb
cmp
xchg
pop
or
push
mov
cld
add
ljmp
add
aam
shr
push
add
push
icebp
popl
addr16
call
mov
inc
cmp
push
pusha
dec
cmp
xlat
jae
btl
mov
rcll
add
idivl
adc
test
inc
js
jbe
sbb
or
sub
out
xchg
add
pop
jge
loopne
pop
fwait
repnz
lcall
loopne
mov
adc
and
jg
adc
add
lds
xor
mov
iret
jb
scas
jge
mov
add
ret
das
clc
aad
lock
lock
sti
add
add
add
mov
adc
movsl
pop
mov
repz
inc
jb
ret
in
push
dec
sti
add
fwait
or
mov
ret
icebp
mov
add
lret
rcll
loop
movsb
inc
loopne
and
shll
es
mov
hlt
adc
fisttpll
leave
lret
mov
pop
loop
sub
dec
cmp
into
push
ret
ja
negl
inc
xor
xchg
xor
mov
or
and
fstl
aas
cs
insb
and
cli
dec
push
cmp
jp
mov
movsb
shll
subb
mov
add
mov
add
jg
mov
ret
std
sbb
add
shlb
add
lods
jmp
outsb
add
push
idivl
cmp
or
inc
sbb
add
jo
pusha
add
movsl
pop
mov
pop
inc
stc
push
test
or
roll
test
add
cmc
xor
es
jg
jmp
add
orl
xchg
xchg
bound
xchg
out
popa
sbb
les
add
cwtl
test
mov
mov
add
add
daa
pushf
sub
inc
movsl
repnz
lea
jb
jle
decl
lcall
inc
mov
pop
inc
lds
mov
xor
add
adc
sbb
adc
rolb
sbb
frstor
sti
jmp
xor
add
push
push
mov
leave
ja
pop
xor
scas
pop
xchg
push
sbb
mov
pop
stc
lret
addr16
aas
inc
pushf
mov
jecxz
mov
xor
std
jecxz
pop
sub
test
xchg
arpl
movb
sbb
mov
ret
add
mov
cmpsl
roll
loope
bound
dec
jb
jg
iret
divb
add
add
int
and
push
loope
stos
and
testb
xchg
out
jno
add
dec
and
gs
clc
fildll
or
add
cmpsl
adc
push
cltd
stos
inc
push
xor
xchg
out
jecxz
mov
xchg
out
jl
addr16
push
dec
mov
hlt
or
rorl
mov
jnp
int
pop
add
movsb
int3
add
cs
arpl
push
imul
jecxz
pop
and
adc
jae
push
add
mov
jge
cmove
pusha
popa
loop
sub
mov
jae
out
pop
xchg
pop
push
push
iret
shrb
out
add
and
inc
sbbb
jo
aaa
cltd
cld
sbb
add
dec
inc
add
jmp
incb
pop
ja
xchg
cmp
add
jno
loop
aad
ljmp
xchg
jecxz
test
out
pop
jmp
call
jl
aas
in
int
cmp
and
push
jp
mov
iret
or
xor
jmp
out
mov
add
pop
inc
add
rolb
cmc
jns
mov
sub
cwtl
test
sub
mov
dec
adc
mov
dec
fdivrl
and
xlat
ds
inc
add
mov
sti
mov
mov
cli
push
cmp
ficompl
xor
jmp
in
xchg
outsl
sbb
scas
add
cmp
cmp
pop
leave
sbb
fcmove
mov
xor
loop
mov
mov
mov
sub
jns
adc
stos
and
sbb
pop
add
repz
sub
sarl
mov
aam
popa
loop
mov
test
xchg
addl
ficomps
mov
clc
mov
mov
scas
loopne
add
hlt
dec
stc
dec
mov
orb
add
or
add
push
ret
sub
xchg
pusha
aaa
nop
adc
js
jecxz
jae
mov
sbb
aas
lods
imull
mov
cmc
lock
mov
add
jno
mov
mov
add
add
test
add
xchg
sub
add
idivb
add
lds
push
into
popa
xor
pop
and
call
xor
add
push
add
mov
cmc
loope
mov
jnp
add
call
mov
pop
int
add
loop
fnstcw
xlat
add
int
and
fidivrl
iret
add
ljmp
sbb
add
push
sub
std
xor
rorb
add
ret
mov
add
jbe
jmp
lcall
fsubl
add
dec
xchg
mov
lods
pop
addr16
mov
lods
in
mov
int
dec
sbb
sbb
aas
scas
add
les
cmp
negl
add
out
xchg
jmp
push
and
and
js
cwtl
and
sbb
add
sbb
xchg
je
jle
sahf
std
shrl
inc
mov
fwait
mov
xor
add
out
icebp
xchg
mov
aas
pop
outsl
push
push
sahf
jb
testl
out
arpl
add
scas
jae
add
scas
test
xor
fisttpll
insl
dec
add
scas
push
cli
inc
or
mov
jnp
xchg
and
rcl
jecxz
add
outsl
add
aaa
xor
pop
lea
sbb
fisubs
add
sarl
fisttpll
xchg
data16
add
add
lods
xchg
lods
inc
repnz
add
add
rol
jno
mov
cli
adc
cmp
ljmp
das
add
xchg
mov
stc
call
or
incb
cmp
fbstp
mov
push
jge
add
xchg
add
and
sub
mov
add
inc
repz
pop
add
add
add
aam
pop
xchg
pop
cmp
xchg
add
or
int
je
sub
ffree
xchg
sbb
mov
enter
jecxz
ja
leave
add
sahf
fdivrl
xor
jo
insl
inc
xor
mov
pop
lock
fs
jnp
adc
gs
adc
push
inc
test
fildl
icebp
cmp
divl
xchg
pop
jbe
movsb
add
bound
xlat
jl
test
add
shrb
pop
mov
add
xor
lret
or
mov
fcompl
call
jp
ficompl
in
repnz
jge
mov
cmp
jecxz
mov
push
fildll
add
cmp
rorb
add
jae
jbe
aad
sub
ds
aaa
xor
sbb
fbstp
out
lret
inc
fildl
fbstp
into
lret
test
data16
pop
mov
outsl
or
add
aaa
xchg
stc
add
xor
test
ficomps
pop
js
jecxz
lcall
adc
jae
xor
pop
fadds
ret
stos
xchg
adc
iret
jb
stos
mov
repz
icebp
add
ret
add
ret
mov
xor
adc
sbb
push
call
sbb
out
add
mov
movsb
and
fstps
xchg
aas
add
dec
add
cmp
stc
or
mov
xor
mov
incl
sbb
fcmovnbe
bound
jg
cmp
cmp
pop
cltd
inc
shlb
dec
add
add
sti
fs
fiadds
sbb
add
int
xchg
push
shl
sbb
xchg
lret
mov
in
icebp
dec
aaa
xorl
and
and
xchg
call
shrl
push
mov
add
ja
ss
adc
je
movsb
notb
add
loopne
mov
sbb
in
xor
xchg
add
gs
jp
inc
add
cld
push
mov
jecxz
jno
out
out
js
mov
xlat
fwait
bound
imul
iret
add
pop
add
or
add
xlat
roll
xchg
shl
lods
dec
add
lds
mov
movsl
aas
xchg
add
retw
mov
in
add
jp
mov
lock
lret
mov
das
add
add
xor
sub
inc
adc
xchg
xchg
jb
add
pop
arpl
imul
das
mov
add
addb
add
movb
add
shll
sti
jmp
mov
jae
cmc
pop
mov
adc
dec
mov
mov
add
push
xchg
mov
add
inc
sbb
out
cmp
mov
loop
add
orb
jns
into
jo
mov
scas
adc
arpl
leave
mov
es
cmc
call
xchg
test
ret
adc
popa
adc
cmp
negb
pop
cld
cmp
std
andb
dec
movsl
sub
sar
in
xchg
mov
push
inc
add
dec
mov
enter
mov
pop
jne
lock
add
imul
inc
sub
add
insb
movb
out
mov
push
xor
or
inc
sub
hlt
es
aas
mov
adc
add
and
ficoms
add
add
ror
cmp
inc
pop
jbe
inc
shlb
push
and
adc
add
mov
push
sub
into
jg
lret
lods
jae
push
nop
adc
out
sub
je
inc
cmp
ja
xchg
adc
daa
inc
out
enter
rcll
or
xchg
add
add
sub
adc
add
add
mov
popf
imul
inc
mov
cld
push
add
aas
pusha
mov
add
xchg
es
in
lret
scas
fisubrs
xchg
imull
mov
push
dec
dec
add
gs
add
pop
add
dec
add
dec
mov
push
adcl
loop
lods
in
jne
push
add
ret
in
cmovnp
ret
add
inc
test
mov
roll
mov
jg
in
jno
add
jecxz
daa
dec
cmc
mov
xor
xor
xchg
pop
mov
jecxz
outsl
mov
cmp
loop
or
add
push
leave
inc
mov
adc
pop
mov
pusha
test
jecxz
mov
add
add
addr16
jle
testl
push
das
pop
sbb
add
dec
push
not
cmpsl
mov
loopne
sbb
sbb
pop
add
mov
lret
jmp
les
sbb
add
incb
int3
push
int
add
mov
aas
stos
sti
cmpsb
ljmp
nop
jae
add
mull
inc
mov
sahf
add
sbb
stos
adcl
das
mov
and
stos
xchg
daa
repnz
icebp
inc
sub
popl
ljmp
xor
hlt
or
sub
mov
mov
fdivrs
adc
sti
sahf
xchg
out
mov
out
push
inc
das
xor
rolb
pop
lods
in
incb
jg
sar
sbb
outsl
dec
sbb
lods
xchg
repnz
mov
repnz
add
fldenv
xchg
or
jnp
pop
aas
add
add
sbb
add
sarb
fmull
lds
mov
mov
test
xchg
out
test
add
sbb
aaa
jge
cs
pop
xor
adc
out
ficomps
jg
inc
repnz
ss
mov
popa
pop
jno
movsb
mov
pop
enter
and
pusha
fdivr
out
inc
add
sarb
jp
add
inc
xchg
xor
push
xor
sub
shrl
mov
xchg
add
loopne,pn
ret
xchg
int
repnz
leave
xchg
add
sub
or
or
mov
mov
lcall
in
jae
lods
push
xchg
sbb
push
fsubrs
test
scas
out
fnstsw
inc
fsubrl
push
push
cmp
arpl
loopne
add
xor
xor
ja
and
xchg
xor
push
pop
add
pop
repz
add
jle
or
pop
sub
fsts
adc
inc
test
pop
push
movsl
mov
xchg
xor
out
mov
push
rclb
sub
out
add
dec
xorb
sarb
dec
inc
inc
jmp
icebp
adc
out
sbb
xchg
inc
call
ljmp
push
insl
and
fisubrl
ja
daa
shrb
add
les
cmp
data16
dec
in
jl
cmp
das
mov
mov
lahf
adc
jno
lods
aas
or
add
cmp
add
test
jno
stos
adc
push
dec
fcmovbe
inc
pushf
add
mov
add
adc
add
andl
push
and
push
mov
xor
mov
xorb
addl
and
mov
icebp
stc
sbb
test
icebp
add
inc
add
pop
ret
sbb
andl
pusha
loope
mov
xchg
mov
sarl
push
ljmp
and
add
inc
add
dec
pop
ljmp
dec
adc
pop
icebp
add
pop
out
bound
mov
mov
call
inc
add
pop
jno
jecxz
jl
pop
ret
sbb
es
dec
ret
sbb
dec
aad
adc
mov
sete
out
add
adc
jnp
loop
add
dec
roll
inc
add
or
xor
lcall
fs
lods
inc
or
pusha
addr16
arpl
testb
adc
add
leave
sahf
add
sahf
pop
push
sub
add
mov
movsb
fildll
cmp
mov
add
pop
add
aad
call
jl
dec
arpl
fdivrp
negl
sbb
mov
or
mov
push
jmp
inc
iret
mov
pop
cmp
mov
pop
add
pop
jb
clc
ret
repnz
xor
push
aad
add
ja
push
movsb
or
jb
ror
push
fstp
inc
adcl
cli
add
dec
pop
or
jge
xor
jecxz
jne
adc
mov
add
lcall
mov
push
add
ror
pop
mov
fnsave
add
cmp
xchg
hlt
push
push
jle
add
int3
pop
mov
sbb
add
sub
jb
cmp
movsb
push
rorl
loopne
arpl
pop
out
add
jo
mov
mov
add
orl
pop
loop
jle,pn
mov
loope
jp
add
addl
fadds
add
sub
push
aas
or
pop
loopne
xchg
xor
xor
jl
test
add
or
mov
add
out
bound
outsb
mov
xchg
mov
xchg
addb
out
and
aaa
cmp
aaa
and
nop
shl
mov
add
jge
pop
stc
das
add
mov
outsb
xor
jno
add
rorb
lock
das
sub
popl
mov
jnp
xchg
stc
mov
sub
insl
add
jae
adc
add
xchg
push
xor
sti
nop
lock
mov
inc
jge
xor
out
div
aaa
add
mov
push
xchg
mov
mov
shlb
cli
adc
add
mov
cmp
cli
mov
aaa
mov
movsb
pusha
add
add
addb
lcall
pop
push
sarl
ds
outsb
je
cltd
pop
mov
add
lcall
add
dec
je
adc
adc
out
pop
les
add
mov
dec
sub
add
jmp
ljmp
jb
add
sub
das
js
add
jnp
xor
ja
repz
xchg
hlt
cltd
cli
in
out
jecxz
dec
add
inc
insl
lods
and
pop
add
push
pushf
mov
lahf
add
data16
into
loopne
mov
add
inc
mov
inc
mov
lods
add
in
stc
mov
push
gs
into
push
cmc
push
mov
mov
jnp
ret
repz
add
arpl
fadds
push
xor
cmp
lea
iret
bound
xchg
adc
or
popf
addb
add
mov
cmp
mov
add
xchg
sbb
add
pop
lahf
orl
mov
cltd
mov
or
push
aas
mov
xchg
pop
add
roll
add
dec
pop
int3
and
movsl
movsb
loop
xor
ds
les
add
fsubs
jno,pt
cmp
hlt
and
dec
test
jbe
cltd
pop
add
add
mov
and
int3
in
lcall
mov
xor
dec
push
test
mov
incl
and
jl
or
fwait
add
pop
mov
popa
mov
mov
or
pop
jl
inc
push
or
call
pop
xlat
mov
daa
add
lock
cmp
ret
sbb
pop
stc
mov
scas
mov
push
or
stos
add
xchg
mov
out
into
lock
shll
sbb
dec
add
fisttpll
sbb
and
pop
mov
or
jae
pop
xlat
mov
int3
jmp
test
xchg
ds
push
imul
je
mov
out
jle
cmp
fcoms
jl
icebp
std
add
imul
jb
repz
xchg
sub
cwtl
je
xlat
pushf
les
add
add
mov
add
das
add
int3
incl
neg
aas
stos
mov
and
sub
lods
fidivs
and
and
and
out
lods
sub
mov
imul
mov
das
push
sbb
and
sbb
mov
add
dec
xorb
sub
movsl
mov
sti
in
add
or
lcall
add
jp
push
hlt
sarb
hlt
into
add
cmp
mov
mov
fcmovbe
add
mov
or
jmp
faddl
mov
aas
sarb
fs
pop
add
mov
xor
in
add
mov
fiaddl
popf
push
xchg
iret
call
arpl
test
cmp
mov
or
and
adcl
jae
and
pop
sbb
dec
adc
xor
cmpb
sbb
and
pop
add
sbb
xchg
xor
add
in
pop
ljmp
pop
popl
mov
pusha
cmp
repz
add
add
cmpsb
js
push
fcmovu
lods
gs
add
mov
fcmovnu
mov
dec
fwait
add
xchg
test
pop
adc
xchg
push
jb
call
xchg
pusha
mov
clc
addr16
fistpll
add
xor
pop
sti
and
pushf
movsl
sub
xlat
cs
nop
add
loopne
out
add
cmp
mov
shlb
jmp
ds
sub
pushf
xlat
mov
test
je
add
xor
fwait
orl
fistps
movsb
enter
dec
stos
add
add
mov
sbb
rorl
rclb
add
pusha
filds
cmpsl
add
pop
push
add
div
aas
adc
mov
sub
pop
adc
jns
pop
ja
jg
ljmp
and
sub
mov
aam
add
push
adc
add
add
dec
je
cld
cmp
fmuls
add
sbb
sahf
pop
add
push
lea
out
sub
add
enter
addr16
pusha
addb
and
or
jmp
adc
sbb
cmp
mov
stos
pop
mov
clc
add
daa
jg
push
cltd
rcrb
add
add
add
outsl
mov
add
sahf
shll
add
add
sub
lods
add
adc
cmc
push
xor
mov
and
pop
pop
adc
add
repz
mov
aam
sub
jbe
inc
xlat
faddl
and
xor
add
xchg
out
add
imul
add
std
sub
cmpsb
xchg
cmpsb
stc
mov
or
add
sub
incl
mov
aaa
stos
xchg
inc
rol
dec
pushf
lcall
dec
add
cmpsb
add
in
movl
push
icebp
std
aam
jno
add
add
std
cmpsb
mov
dec
pop
add
add
add
fldcw
pop
mov
lea
adc
pop
mov
add
ljmp
add
push
in
icebp
jle
cmp
add
cmpsb
test
sub
mov
repz
mov
fs
xchg
mov
add
jle
cmp
add
iret
add
inc
ret
jne
into
repz
add
ss
loop
cs
stc
add
add
jbe
pop
push
imul
or
stc
iret
aad
add
add
movl
cmp
sub
mov
dec
cs
loopne
stos
addb
mov
enter
xchg
data16
add
and
cmp
dec
ret
sbb
add
test
fistps
int
sbb
mov
test
adc
lods
into
sub
add
movaps
rorl
aad
iret
aam
sbb
or
in
add
add
add
mov
jmp
add
imul
andnps
mov
jno
popa
mov
pop
adc
add
push
add
mov
imul
mov
inc
sti
insl
inc
mov
repz
cld
mov
add
adc
jns
pop
sub
or
push
addl
push
loopne,pt
dec
loop
adc
int3
inc
adc
test
sub
loop
loop
ss
popa
rolb
mov
pop
push
dec
outsb
repz
cmp
push
cld
test
inc
and
push
add
insb
and
inc
cmc
fbld
test
push
dec
push
xor
fadd
fdivr
xor
sbb
mov
add
addr16
mov
int3
adc
add
or
fdivrp
xchg
lods
push
cs
pop
rorb
push
inc
add
test
bound
xor
cmp
out
add
ljmp
stos
or
and
mov
sub
sbb
mov
add
bnd
dec
pop
lea
jnp
add
test
dec
lock
popf
add
pop
cmpb
mov
add
je
and
mov
test
mov
mov
add
add
cltd
or
sti
add
adc
imul
jp
sub
add
inc
mov
cmp
mov
xchg
stos
pop
into
mov
shlb
sbb
scas
pushl
lahf
push
addr16
pop
inc
cld
stos
cmp
insb
mov
pop
cmp
dec
add
xchg
jp
sbb
sub
int
test
es
sahf
and
out
aas
in
daa
sub
add
add
stos
jns
pop
inc
repz
mov
mov
dec
lock
call
sub
pop
fwait
int
out
orl
fidivrl
in
insl
out
mov
out
add
and
push
mov
test
dec
data16
sar
add
sbb
into
mov
add
adc
or
push
jbe
mov
add
call
push
mov
ds
pop
outsb
inc
xchg
cs
outsb
jns
dec
push
jmp
add
push
adc
sbb
jge
insb
loope
add
loop
pop
jg
sub
add
mov
out
cmpsb
cwtl
xor
loope
jo
nop
inc
rcr
mov
add
movsb
add
dec
cltd
cmp
mov
xorb
add
jns
pop
rclb
insl
rorb
mov
popf
sub
mov
leave
dec
popa
in
push
and
mov
add
xchg
and
aam
inc
add
adc
in
addl
roll
jnp
add
inc
es
es
lods
or
mov
mov
imul
ret
cltd
jmp
daa
mov
add
loope
jnp
aas
cld
add
mov
stos
mov
cmc
add
mov
push
add
jle
sbb
jle
gs
add
adc
mov
sub
and
int
stc
cltd
push
pop
add
sbb
push
add
sub
ret
cmp
cwtl
pop
and
adc
and
jp
jbe
xchg
scas
and
jne
push
mov
fildll
and
pop
mov
fdivs
push
add
mov
push
add
and
mov
out
add
negl
add
or
sbb
jbe
jo
imul
pop
ljmp
hlt
dec
shrb
inc
pop
mov
mov
add
lock
cmp
pop
sub
sub
or
inc
add
sub
int
mov
jno
mov
add
mov
pop
int3
fistpll
lods
je
stos
cmp
jae
jl
out
inc
popl
sbb
or
ds
push
scas
shr
sub
ret
repz
push
dec
cmpsl
mov
xor
scas
inc
xchg
xchg
std
or
xchg
push
dec
adc
mov
adc
add
push
mov
push
leave
in
mov
inc
xchg
dec
jl
lock
inc
pop
cmpsb
add
popf
push
jae
pop
push
int
mov
int
dec
loope
ret
ss
out
hlt
sub
xchg
enter
cmc
xor
dec
xlat
inc
xchg
jle
add
popl
sbb
xchg
aaa
pop
daa
sbb
and
add
mov
cmp
push
rclb
xlat
aam
add
jl
xchg
sbb
add
sub
rorb
inc
or
sbb
mov
mov
int
dec
mov
push
dec
pop
fwait
jo
cli
xchg
and
mov
add
repz
add
std
push
leave
add
stc
add
stos
or
jmp
mov
aam
or
pushf
test
jbe
jae
shlb
xchg
and
mov
sub
jns
in
sahf
notb
out
push
and
and
aaa
and
pop
daa
stos
data16
insl
out
add
ljmp
dec
data16
mov
jmp
rol
xchg
mov
cmpl
add
push
jp
mov
lods
in
add
in
sbb
jge
fstpl
pop
psubusb
pop
test
jg
jle
ret
xchg
push
movsl
sbb
ja
adc
out
xorb
jae
add
repz
ja
mov
lret
pop
jo
push
jne
mov
xchg
jne
shrb
add
add
fdivrl
add
sbb
sbb
xor
ds
cmp
test
mov
add
rcrl
lret
shll
clc
mov
pop
jne
push
add
outsl
push
adc
addb
fwait
add
or
int
pop
lret
movsl
add
add
mov
or
push
or
xor
jmp
add
push
ret
addb
add
add
paddsw
lock
adc
gs
inc
mov
test
jbe
je
lods
add
rcrl
and
int
add
add
xor
frstor
sbb
sub
lods
pop
ljmp
movsb
sbb
add
add
cmp
xchg
pop
add
add
negl
jp
seto
add
pop
stos
push
jo
lods
mov
dec
mov
xchg
push
cwtl
cwtl
std
add
dec
ljmp
push
jns
icebp
add
hlt
pop
dec
pop
add
fistpll
jb
pop
jmp
rcr
jo
add
out
sbb
add
add
xchg
xabort
int
fsts
in
inc
imull
add
mov
insb
add
das
movl
add
xchg
push
loopne
sbb
inc
lea
or
sbb
mov
add
sub
ret
repz
scas
pop
in
movl
pop
push
adc
out
fistpll
add
stos
fcmovu
adc
and
pop
stos
xor
mov
add
mov
cltd
in
or
les
aam
dec
mov
dec
add
push
negb
add
inc
and
cwtl
add
pop
push
mov
adc
call
lock
je
lods
jecxz
lret
mov
add
repz
cwtl
fsubrp
in
scas
jne
cmp
xor
out
mov
in
sbb
mov
fcompl
test
jmp
jo
adc
or
sub
pop
add
js
sbb
push
adc
js
cmpsl
push
xchg
es
xchg
mov
adc
cltd
dec
jp
push
jge
jg
inc
dec
adc
sbb
pusha
mov
push
dec
add
and
add
xchg
daa
mov
push
pop
and
cltd
add
sbb
jg
inc
jp
push
ret
lock
lds
adc
loope
call
mov
push
add
add
mov
repz
and
pop
xor
cmp
add
mov
cld
mov
add
or
les
add
add
or
add
add
jg
xchg
push
add
add
add
ficompl
int
adc
add
add
pushf
subw
sub
and
jp
testb
aas
or
adc
fdivs
sbbl
test
movb
push
add
cli
and
nop
ja
cmpb
add
add
adc
add
sub
lea
in
mov
push
movsl
icebp
pop
mov
sbb
xchg
cmc
add
popf
mov
or
xor
cs
xor
add
mov
jmp
xor
push
add
inc
add
add
add
adc
push
ja
lcall
pop
adc
loop
cmp
das
xchg
leave
clc
clc
add
fwait
pushf
pop
add
jmp
out
fmul
add
mov
imul
mov
add
cmpsb
sub
or
sub
mov
or
mov
loop
bound
xor
and
cmp
cli
cmc
inc
add
adc
sub
push
int
push
mov
add
mov
add
imul
or
xor
dec
inc
arpl
add
cs
add
add
adc
xor
data16
pop
lahf
jp
mov
fwait
dec
push
jmp
xor
push
cmpsb
jg
andb
pusha
ficoms
xor
pop
cmpl
cmp
add
fcmovne
and
mov
or
gs
push
lods
sbb
xchg
ljmp
fcomps
movsb
cwtl
int3
add
add
add
ljmp
int3
add
xchg
call
gs
or
inc
add
sub
mov
stos
xchg
aad
mov
fdivr
mov
idivb
add
cmp
add
cltd
cmp
sub
add
push
sbb
add
jge
mov
ss
add
addb
mov
out
int
sbb
dec
xchg
pusha
xchg
lret
add
pop
test
jmp
jl
je
ret
push
add
add
testl
dec
movsl
add
or
cmp
ds
movsb
jmp
pop
cli
mov
test
jecxz
add
pop
sbb
sbb
mov
and
mulb
and
lahf
scas
add
int
mov
jb
xchg
mov
sub
sahf
mov
cmp
mov
lret
popa
leave
pushf
sbb
mov
fwait
lods
pop
mov
dec
mov
xchg
push
shlb
sbb
and
push
push
out
pop
fcoml
dec
fstpt
addr16
add
sarb
sbb
shlb
cmp
add
or
mov
out
dec
scas
cld
or
fiaddl
stos
lock
test
push
out
sbb
in
repz
push
mov
jle
add
pusha
lds
add
xchg
loopne
imull
mov
fs
daa
pop
cmp
inc
ja
mov
lretw
add
repz
xchg
push
add
cmpsl
addb
mov
imul
add
outsl
add
into
test
out
add
hlt
arpl
jbe
imul
stos
add
mov
mov
sub
adc
adc
insl
add
imul
pop
sub
lods
xchg
lahf
dec
popa
fistps
out
out
push
cmpsb
outsl
out
push
add
lcall
jo
add
mov
add
push
add
jno
lds
xchg
lret
xchg
push
rol
mov
mov
add
or
es
cmc
xchg
outsl
xchg
push
sub
cmpsl
dec
roll
add
aam
out
fwait
popa
add
jp
addb
jae
xor
loopne
pop
add
fildl
pop
cmp
fildl
xor
pop
xor
aam
add
nopl
cmp
adc
lods
mov
or
lcall
sub
cmp
testb
pop
lret
jg
gs
mov
cld
insl
push
popa
mov
push
add
lods
add
push
mov
lods
push
jmp
ds
push
jnp
mov
loope
ljmp
xor
jno
pop
jl
sub
add
shlb
sub
cmpsb
pop
mov
mov
adc
pusha
test
fldl
sub
shlb
push
jo
popa
push
out
iret
adc
andb
xlat
test
push
repnz
add
cs
inc
xchg
push
inc
add
shll
shrb
in
xchg
dec
test
cmp
or
cs
lods
scas
add
pop
inc
xchg
sbb
mov
mov
out
hlt
in
loop
shll
or
add
or
out
jg
add
loop
push
add
add
cltd
faddp
inc
add
cmpl
fucom
movsb
push
mov
add
inc
shll
dec
cld
mov
pop
add
in
and
add
add
mov
pop
cs
sub
lahf
xchg
mov
iret
in
leave
outsl
bound
inc
mov
clc
cmovp
jb
lret
sarl
imul
add
add
add
inc
aam
es
dec
pop
jp
out
inc
xchg
jle
out
rol
mov
aas
xchg
imull
inc
out
imul
jmp
test
jecxz
call
add
rol
jmp
lret
pop
sbb
mov
add
push
jecxz
sbb
add
pop
ja
xor
add
mov
xchg
jo
pop
add
je
daa
push
lret
cmc
add
cmpsw
ja
inc
daa
pop
popf
mov
test
jmp
cltd
pop
lret
popf
lahf
jle
add
les
jne
add
lock
inc
xchg
mov
add
or
in
bound
add
mov
add
lock
out
cwtl
aas
out
mov
fdivrs
mov
add
std
ds
fsub
sub
add
sbb
in
dec
aaa
adcl
add
adc
pop
inc
test
aam
shlb
pop
test
ljmp
xchg
test
ljmp
cltd
ljmp
das
gs
sub
mov
or
add
hlt
lahf
sbb
add
or
mov
add
rolb
je
test
stos
xchg
push
cmc
push
add
or
add
lret
jno
mov
inc
fiadds
dec
add
jns
sti
add
aad
mov
shlb
mov
and
scas
xorl
push
pop
ds
push
add
add
adc
xor
sub
popa
in
ret
pop
jb
inc
add
xlat
in
mov
call
dec
push
fdivrl
pop
pop
add
pop
aam
lods
das
loop
add
mov
ret
pop
xchg
mov
dec
push
popf
sub
push
jnp
mov
xchg
sub
stos
and
popf
sub
jns
stc
add
popa
adc
in
lea
or
push
int3
sbb
data16
push
sub
push
push
out
xor
pusha
enter
jle
jg
fsubrl
mov
inc
cli
add
sbb
mov
sub
icebp
add
jnp
lret
xlat
adc
xchg
adc
jmp
mov
shlb
add
cmp
push
sbb
mov
inc
inc
jo
adc
orl
pop
subb
cmp
jb
adc
out
sbb
aaa
outsb
mov
insb
and
sahf
fidivrs
add
dec
sub
insl
outsb
sahf
rolb
mov
dec
or
inc
add
add
test
es
inc
pop
sahf
mov
mov
and
popf
push
je
arpl
mov
cmp
add
pop
pop
cmp
int3
push
jecxz
sarb
adcl
addr16
mov
jcxz
jecxz
subb
out
xchg
cmp
cmp
adc
clc
lods
add
add
lods
mov
jmp
stos
roll
xchg
ror
inc
push
add
das
dec
jnp
mov
jbe
movsb
fsubrs
mov
adc
adc
mov
xor
push
or
aas
cli
into
jb
add
leave
pusha
insb
add
add
ljmp
push
lods
xor
popa
mov
push
inc
ret
add
sbb
jne
icebp
and
rcrb
bound
nop
mov
aaa
test
and
mov
js
xchg
out
outsb
dec
cld
add
cwtl
sub
ret
lock
in
cmp
stc
or
daa
and
subl
out
rolb
add
int3
cltd
cs
jmp
or
in
movsl
fstps
pop
imull
or
loopne
add
fiaddl
add
mov
jmp
data16
sbb
lret
clc
loop
leave
rolb
int3
incl
bound
dec
inc
pushf
mov
add
sbb
add
fidivl
test
cmp
or
leave
push
mov
loope
daa
add
sub
push
mov
sti
inc
or
orl
lds
add
sbb
push
mov
mov
inc
das
xchg
lret
push
sub
mov
sbb
in
jp
lret
xor
aas
add
bound
dec
inc
sub
imul
mov
ljmp
sub
lret
push
nop
or
add
add
xor
add
adc
inc
xor
daa
sarb
lea
sahf
scas
mov
in
daa
add
nop
add
popa
add
xlat
cld
inc
clc
push
push
xor
xchg
idivb
lret
xor
outsb
lret
xor
dec
les
mov
add
sub
dec
stc
jl
add
nop
add
mov
andl
nop
movsb
inc
outsl
clc
test
pop
fwait
add
mov
add
or
dec
in
pop
fs
mov
adc
aam
popa
add
imul
mov
fildl
jae
pop
sbb
test
jecxz
jl
pop
pop
push
into
jno
out
sub
pushf
leave
jmp
mov
add
xor
and
pop
dec
arpl
add
ds
sbb
mov
and
movsl
fwait
add
add
iret
sbb
in
or
or
jl
xchg
aam
add
jp
pusha
or
add
ret
aam
adc
add
dec
xor
pushf
mov
xchg
es
xor
dec
xchg
iret
mov
pop
enter
lret
jb
stos
or
dec
sbb
sbb
and
movsb
arpl
push
aad
jecxz
dec
adc
insl
add
cmpsb
add
mov
xorl
out
add
sbb
and
xchg
cmp
mov
addb
lods
pop
inc
xchg
mov
or
pop
sub
aaa
jae
mov
out
rdpmc
mov
jmp
mov
outsb
and
testl
jle
add
xchg
add
fs
ret
pop
push
lahf
lea
xchg
pusha
je
or
push
sbb
inc
movsl
add
addb
icebp
and
stc
cltd
scas
imul
mov
pop
push
sub
sub
insb
sbb
inc
ds
pop
fildl
imul
pop
ljmp
dec
push
xorl
mov
add
add
sub
mov
and
fdivr
and
mov
add
scas
xchg
cs
stos
add
ret
sbb
pop
xchg
scas
rcll
scas
out
stos
add
out
cmpsb
roll
inc
enter
pop
pop
test
inc
movsl
stos
shlb
mov
stos
xchg
push
mov
mov
mov
sub
sub
mov
pop
add
sub
addb
mov
jb
fdivrs
enter
and
dec
and
cwtl
pop
pop
loop
scas
cli
lock
sub
cmp
add
test
adc
insb
cmc
clc
jl
out
outsl
jae
jmp
aas
pop
sahf
das
cmc
rcrl
mov
leave
popa
and
cli
add
and
add
scas
push
iret
ss
out
sets
aad
and
sub
xchg
mov
cmpsl
ss
stc
subl
pop
mov
push
jl
lcall
aas
xchg
or
inc
push
fldenv
fwait
xchg
mov
bound
push
adc
test
pop
call
scas
adc
push
add
add
add
leave
data16
jb
cmp
lds
inc
ds
pop
add
jns
sar
or
cmpsl
mov
dec
aam
pop
push
mov
fisubl
in
add
push
mov
pop
js
push
push
sbb
rolb
cld
sub
inc
add
incb
insl
push
add
sub
daa
aam
out
sti
stc
ret
add
imul
push
add
lds
sbb
fdivs
in
jle
xor
add
adc
cmp
outsb
arpl
pop
scas
xchg
push
bnd
mov
push
xchg
adc
cwtl
mov
mov
cmpsb
movb
sub
jecxz
sbb
cmp
mov
cmpsl
repnz
jl
mov
rolb
test
mov
arpl
rcrl
xchg
repz
ja
xor
xchg
jo
ret
roll
imul
mov
fisubrs
shl
pop
cmp
movb
adc
cmovle
add
cmpsl
cld
dec
es
mov
add
pop
in
push
lahf
movsb
lock
pop
orl
add
pop
xor
es
pop
fstl
add
clc
loopne
subl
mov
out
push
cli
sub
out
add
add
mov
xchg
adc
inc
sub
les
push
inc
lea
pop
add
mov
cmpsl
pop
xor
scas
ficomps
push
pop
fbld
xchg
sbb
mov
or
cmpsl
mov
data16
repz
mov
mov
aaa
xchg
push
push
lcall
jbe
shrl
sub
mov
jp
xor
add
xor
arpl
push
and
cs
add
dec
add
pop
mov
movsb
dec
bound
bndstx
iret
or
aas
lods
pushf
daa
jo
mov
sbb
lahf
add
push
mov
adc
jnp
sbb
or
pop
dec
add
imul
enter
test
cs
into
inc
push
cmp
add
enter
inc
sbb
add
mov
cmc
push
leave
xchg
pop
pushw
mov
pop
icebp
lcall
inc
fstpt
negl
in
dec
add
add
insl
inc
mov
push
pusha
lds
loopne
inc
lret
jne
mov
nop
mov
inc
mov
add
xor
jnp
faddl
clc
mov
test
cmc
mov
es
add
add
in
add
mov
test
add
fsts
push
jecxz
mov
scas
sbb
pop
sub
les
roll
sub
and
bound
insl
je
jp
jecxz
outsl
pop
inc
or
cmp
adc
loop
rolb
add
sar
adc
push
add
mov
add
inc
dec
mov
out
lock
add
add
mov
mov
lods
xor
jns
gs
test
and
dec
mov
jae
pop
icebp
fisttps
sbb
std
add
dec
pop
pop
pop
pop
hlt
or
loopne
dec
cmp
add
cs
pop
aad
stos
xor
mov
pop
add
cwtl
mov
insb
popf
stos
test
fldcw
in
sub
add
xor
fistps
xor
fwait
fiaddl
mov
push
jne
jnp
cmp
xchg
mov
in
cmpsb
push
add
add
push
or
adc
or
and
and
lcall
stos
iret
mov
in
fucomi
inc
popa
mov
and
test
insl
fwait
aas
mov
pop
add
mov
out
pop
stos
nop
scas
fcmovu
sahf
xchg
sub
xchg
jo
shrl
test
inc
cmpsb
and
add
add
xor
lods
fcomip
cmp
xor
test
add
lods
push
movsb
add
pop
add
sahf
call
call
movsb
add
add
pushf
add
xchg
add
lret
cmp
mov
xor
repz
mov
aad
inc
out
mov
pop
imul
inc
mov
mov
test
xchg
mov
adc
jle
lcall
pop
pop
add
cld
push
push
ficoms
sbb
cmpsl
es
bound
mov
arpl
test
xor
das
add
fsincos
mov
addb
popf
xchg
imull
jl
add
add
cmp
jp
add
cmp
cs
pop
adc
insb
fdivr
imul
sbb
fsubs
in
sbb
scas
mov
insb
cmp
add
addl
push
add
popf
and
pop
add
cltd
insl
add
push
xor
icebp
pop
movsb
jne
ss
push
inc
loope
test
inc
repz
dec
rol
add
out
mov
cmp
or
rcrl
jl
add
imulb
pop
push
sahf
and
js
in
sub
les
push
add
add
push
cmp
add
adc
mov
jne
in
loope
add
cli
ret
dec
add
mov
adc
or
sahf
add
add
movb
sbb
movsb
mov
test
push
xchg
pop
sahf
xchg
add
js
or
test
add
sub
dec
push
mov
scas
leave
or
jl
add
flds
cmpsb
out
lcall
xchg
cmp
xchg
sbb
add
stc
add
das
rolb
push
lret
aam
add
bound
mov
cmc
and
add
add
ret
xor
test
xchg
mov
jge
add
lods
shlb
xchg
out
movsb
cld
je
pop
push
push
adc
or
jne
jp
stos
sbb
mov
pop
lds
test
add
dec
into
ljmp
xchg
ret
in
mov
jle
cmp
cld
push
mov
leave
jge
sbb
pushf
add
cli
negl
xchg
mov
jg
mov
add
add
cltd
add
std
push
add
mov
std
jno
xor
test
add
in
jecxz
push
fstps
addb
inc
movsb
pop
add
pop
test
inc
ret
or
es
mov
movsl
inc
stos
int
andl
jge
in
add
xor
bound
push
into
push
push
shll
xor
scas
xchg
push
mov
clc
push
insb
enter
sahf
mov
popa
lret
dec
adc
jl
push
outsb
stos
jmp
inc
out
cmp
insb
add
xchg
or
arpl
add
mov
leave
and
inc
add
in
xor
mov
add
dec
out
xor
pop
add
outsb
insb
cli
dec
jle
jle
imull
xor
movsl
fdiv
insb
add
pop
mov
cmpsl
pop
loop
push
jno
mov
pop
out
int3
andl
xchg
js
xchg
adc
idiv
push
in
add
roll
mov
mov
mov
push
add
dec
dec
add
popa
mov
push
push
jb
add
pop
xchg
mov
imul
cmp
sbb
mov
add
ljmp
in
movsb
lock
sahf
imul
adc
jb
ja
in
jecxz
scas
push
add
add
xlat
cmp
gs
out
dec
sbb
inc
int
cmpsb
scas
ljmp
jo
xor
jb
in
inc
sbb
xchg
cmp
fs
mov
sub
mov
lock
add
pop
pop
arpl
add
and
ret
adc
clc
sub
push
add
add
add
push
lea
mov
sbb
cmpsb
sub
add
inc
lahf
pop
add
enter
ja
ja
add
adc
add
movsb
jge
mov
xchg
scas
add
dec
or
inc
add
push
add
add
out
add
mov
adc
jp
cmp
or
add
out
pop
push
into
push
xor
iret
je
scas
out
adc
jge
ret
add
test
out
cmpsl
adc
scas
ljmp
loop
sbb
adc
add
pop
sub
jno
mov
std
mov
nop
add
ljmp
icebp
int
ret
cmpsl
arpl
dec
dec
out
fisubs
insb
addr16
nop
lahf
mov
cmp
or
stos
or
xchg
xor
add
rcl
mov
mov
jmp
sub
sahf
stos
xchg
lret
add
out
add
xor
or
adc
inc
loopne
imul
lea
inc
je
jmp
cmpb
je
or
pop
ja
and
and
jmp
add
add
lret
lret
xchg
dec
cmpsl
add
fldl
jmp
push
rcl
in
repnz
mov
aam
push
cs
xchg
fcmovb
les
dec
lock
jb
sbbl
mov
add
add
or
stos
inc
sbb
sbb
sarb
inc
jge
inc
push
inc
faddl
add
pop
mov
stos
or
outsb
lds
js
dec
xor
leave
in
adc
dec
sub
mov
cs
dec
push
out
imul
jp
add
std
and
mov
pop
sbb
std
push
add
inc
pop
jmp
addr16
jmp
lret
xor
sub
shrl
sahf
push
jg
std
adc
xchg
repz
add
mov
ss
aam
xor
lds
mov
adc
ret
sti
cmp
add
cwtl
jg
dec
decb
div
cmp
scas
cmpsb
in
mov
xor
fwait
cli
sbb
out
mov
in
and
or
je
mov
sub
add
push
jbe
add
rcrb
addr16
icebp
lods
mov
and
popf
sbb
cmpsb
xor
xchg
and
lods
dec
ret
or
cmp
push
add
add
scas
out
in
flds
in
sub
mov
dec
dec
add
pop
push
xor
test
imul
cmp
xor
dec
cmc
xor
fsubrs
add
je
subb
testl
mov
out
add
dec
push
roll
dec
or
lcall
pop
arpl
inc
mov
ja
xor
cmpsl
add
cmpsl
fdivrl
je
cmp
lods
bound
aam
push
stc
outsb
or
xchg
adc
push
jp
pop
mov
mov
sub
add
leave
fidivs
testl
cmp
ss
push
or
push
add
lcall
iret
insb
cmp
add
add
and
test
insb
add
xor
push
adc
adc
mov
call
insl
test
mov
add
addl
aad
dec
xor
cmpsb
pushf
and
xchg
mov
stc
cmc
mov
test
dec
mov
add
add
jb
add
cwtl
dec
add
sub
dec
add
outsb
mov
xor
lahf
inc
dec
dec
cltd
add
mov
mov
dec
xor
push
jg
and
loopne
mov
sbb
xor
add
fwait
xchg
lds
nop
loope
lea
fnstsw
mov
popf
xor
and
cs
rorl
jns
dec
roll
add
sub
mov
mov
push
dec
inc
out
and
aad
stos
push
fwait
das
scas
or
xor
xchg
sub
xor
lcall
cmp
test
xchg
dec
pushf
inc
add
sahf
enter
push
add
popa
push
in
or
mov
cs
push
insl
or
mov
push
pop
add
add
pop
inc
push
iret
dec
and
roll
mulb
mov
lods
add
inc
insl
and
jecxz
adc
lock
push
adc
add
imul
fwait
insl
add
cmp
cwtl
inc
or
adc
xor
xchg
popf
scas
fdivl
pop
sub
sbb
add
and
or
mov
dec
xchg
push
add
add
adcl
cmp
jbe
es
inc
loop
add
mov
xchg
mov
and
xchg
ret
add
mov
pop
push
mov
add
jns
cwtl
repnz
loope
jne
mov
fcompl
add
mov
jns
dec
push
add
xchg
add
jle
lds
and
sbb
jge,pn
icebp
aas
add
repnz
std
arpl
add
mov
outsb
cmc
or
fildl
pop
jecxz
imul
push
add
arpl
push
add
notl
mov
cmp
fcomip
and
lahf
outsl
cltd
sub
add
enter
add
int3
daa
repz
mov
add
xchg
cmp
scas
jbe
pop
pop
into
pop
sbb
stc
or
repz
add
aam
lds
xor
mov
sub
sub
xor
in
fbld
negl
mov
add
sub
add
xchg
push
outsb
mov
lds
add
int3
xor
iret
add
xchg
aam
scas
mov
das
mov
fiadds
jb,pn
pushf
in
sbb
out
add
fs
fldt
push
inc
mov
ljmp
sti
add
add
outsb
cmp
daa
popf
or
cmc
push
out
pop
adc
ret
shlb
xorl
divb
clc
lock
cmpps
adc
stos
push
add
push
cmpsb
hlt
pop
add
add
outsl
int
movzwl
inc
add
mov
add
adc
xlat
or
aam
inc
imul
pop
jle
sbb
pushf
adc
inc
and
out
outsb
dec
dec
pusha
shrb
movsl
pop
test
add
fisttps
adc
xchg
loopnew
inc
inc
lods
ret
dec
movsb
insb
out
std
or
frstor
cmp
mov
add
add
add
daa
mov
test
ret
cmp
cmpsb
add
inc
bound
adc
push
scas
into
add
cld
lods
popf
sub
and
stc
push
add
push
push
jle
je
push
xor
lods
mov
mov
repz
add
or
fisubrs
dec
inc
cmp
lea
incl
fisubrs
and
sbb
mov
icebp
add
lret
ss
xor
add
or
fisubl
mov
lcall
imul
adc
pop
push
addr16
int3
call
mov
loopne
add
into
or
icebp
add
add
mov
and
add
pop
mov
add
pop
jns
add
add
pop
cmp
sub
add
fsubs
pop
addr16
add
mov
lahf
jae
test
sbb
mov
add
jecxz
add
pop
push
push
push
inc
add
add
xor
fdivl
mov
push
mov
xchg
add
sti
test
movsl
testb
add
imul
sub
cmpsb
cli
mov
outsb
pop
pop
addr16
adc
sub
pop
xchg
sbb
and
test
jb
dec
test
add
add
cmp
add
push
pusha
fiadds
pop
inc
and
pop
addl
leave
pop
dec
mov
push
or
pop
in
icebp
xchg
aas
fisubs
js
subps
or
lds
xchg
inc
adc
or
sbb
push
leave
fdivrl
sbb
sub
es
dec
mov
add
add
push
cmp
mov
push
xor
out
std
or
cmpsl
shrl
cwtl
sub
or
and
leave
testl
push
data16
je
inc
cmpsb
xchg
call
hlt
mov
lahf
push
cmp
mov
mov
dec
push
add
add
outsb
add
std
sub
imul
bound
sub
add
pop
sbb
cmpsl
pushf
add
xchg
mov
push
insl
mov
xor
push
sub
add
adc
rolb
add
popf
test
addb
cld
fs
add
pop
mov
outsl
jl
sbb
in
add
das
and
jo
mov
pop
repz
add
inc
or
add
xchg
add
xor
mov
out
add
daa
cmp
cmpsl
in
push
pop
cmp
fidivs
roll
lock
in
pop
clc
jp
fsts
rclb
jo
daa
mov
mov
ret
xor
repz
add
dec
pop
gs
adc
or
pusha
imul
push
push
jnp
cwtl
fistps
push
lock
add
push
sbb
fldl
xchg
sub
movl
popa
push
sub
addl
and
pushf
aas
mov
lock
add
add
mov
pop
arpl
adc
mov
push
inc
jle
sub
mov
sub
clc
add
xlat
stc
add
cmp
lea
mov
pop
mov
int
ljmp
pop
bound
add
outsb
lea
mov
mov
or
sbb
call
ds
sbbb
loopew
push
test
repnz
outsb
lret
pusha
xchg
daa
jp
pop
push
add
outsb
add
popa
cmp
inc
je
mov
dec
sahf
and
add
push
loop
aaa
fcoms
lds
xor
cwtl
push
xor
add
cltd
and
mov
in
std
mov
aaa
and
incb
std
dec
pop
test
dec
add
jecxz
jb
in
pusha
jge
out
dec
test
xchg
mov
sbb
call
push
faddl
fidivl
dec
cmp
add
jae
pop
cmp
sbb
stos
in
jmp
mov
mov
cmp
mov
testl
std
loope
insb
mov
stc
jge
lods
dec
pop
cmc
daa
mov
jmp
mov
in
les
imul
fsubl
fcompl
sbb
sahf
arpl
cmc
dec
dec
add
test
fldenv
enter
push
in
or
add
out
add
add
outsl
sar
mov
and
aas
jno
xor
scas
add
inc
xchg
pavgw
inc
push
sub
ja
push
pop
ror
add
add
outsb
fistl
stos
add
sub
adc
or
flds
repz
nop
xchg
dec
fsubs
adc
fwait
push
testb
in
enter
outsb
adc
cmovae
lds
lods
in
jle
pusha
popf
jle
add
xor
cmpsl
push
dec
xor
movb
mov
add
adc
add
adc
xor
scas
push
xchg
sbb
stos
cmp
mov
cli
nop
mov
in
inc
add
ja
cli
rorl
insb
add
jle
fwait
pusha
mov
movsb
sub
inc
mov
or
bound
xlat
dec
cmp
jmp
xor
pxor
push
jmp
add
rcrb
mov
and
add
push
fst
test
add
loopne
xor
sub
test
add
add
mov
call
mov
stos
jmp
xchg
pop
add
sbb
mov
pop
adc
popf
push
jne
and
add
add
jecxz
pop
add
dec
loopne
add
jae
inc
int
jnp
add
add
arpl
lods
mov
scas
add
xlat
xchg
into
add
insl
pop
fisttpl
inc
popa
add
cmpsl
pop
or
insl
hlt
jp
cmpsl
sub
adc
addr16
into
adc
imul
and
dec
orl
jl
call
inc
outsb
lea
roll
movsl
mov
out
rcr
add
filds
insl
stc
inc
sbb
add
mov
rcll
jmp
xchg
add
add
cmp
adc
sbb
adc
adc
lret
jns
divl
stos
fiadds
lods
add
nop
mov
mov
shll
test
xor
push
cs
dec
jl
dec
rcrb
dec
mov
add
sbb
add
lock
fcomps
mov
adc
jae
out
dec
mov
scas
xchg
dec
sbb
add
add
les
out
adc
pop
pop
test
dec
cmp
mov
iret
pop
lds
dec
pop
insl
movsb
add
xchg
aam
xor
or
rcr
out
clc
into
shrl
es
inc
add
add
test
lret
mov
add
mov
mov
mov
sub
lods
sub
pop
loopne
int3
fidivl
hlt
and
jno
scas
into
xor
pusha
pop
jae
or
loop
shrl
mov
out
cli
popa
clc
add
inc
imul
and
pusha
lods
and
sub
ss
jae
add
sahf
push
or
push
testb
cmc
or
mov
cmp
sbb
push
fisubl
add
fmull
mov
or
out
jl
mov
cmpsl
cs
pop
push
les
xor
push
imul
cmp
les
insb
insl
add
add
cmp
jne
pushf
ja
outsl
int3
mov
inc
pop
mov
pop
hlt
sub
mov
mov
add
fidivs
add
cmp
call
test
or
mov
ret
dec
add
sbb
clc
jecxz
add
and
movsb
xor
mov
add
ret
sahf
sbb
pop
loop
and
push
xchg
adc
sub
sub
fnstsw
jb
loop
shlb
mov
divl
mov
add
addr16
gs
xchg
sbb
mov
inc
bound
sbb
mov
cmp
add
jne
cmp
adc
add
in
data16
sbb
jns,pn
sub
pushf
add
jl
dec
aad
or
jo
vucomisd
push
arpl
jge
imul
mov
adc
add
lcall
pop
ret
ljmp
and
aaa
into
scas
add
repnz
jge
pop
jl
pop
lock
mov
add
ret
add
cmpsb
iret
cwtl
out
xchg
jle
aas
das
pusha
call
add
filds
push
add
cmpsl
cmp
mov
inc
add
test
sbb
enter
cmp
xchg
pop
subl
int
inc
fcomp
cmp
fstl
cmpsl
mov
sbb
movsl
rcll
mov
bound
or
dec
xchg
not
sub
mov
mov
jb
push
out
or
out
mov
and
inc
mov
lods
roll
mov
add
sbb
jp
sbb
pop
add
int3
mov
sbb
outsb
add
test
pop
leave
or
add
enter
mov
ljmp
insb
dec
fdiv
mov
add
clc
pop
mov
add
ljmp
xor
dec
insb
push
leave
mov
lret
cmpsl
or
rol
orb
xor
xchg
int3
bound
dec
imul
xchg
jmp
daa
cli
pop
push
je
popf
xchg
add
addl
inc
add
mov
dec
movsb
add
add
stc
hlt
xchg
or
hlt
xor
pop
out
mov
cmp
jb
mov
mov
rcll
cs
pop
rolb
add
or
icebp
add
cmpsl
and
cmpsl
repz
dec
inc
cld
jg
mov
add
mov
inc
andb
mov
insb
lock
aam
out
mov
sub
cmp
add
mov
dec
aaa
sub
inc
add
adc
and
lahf
jmp
or
add
jno
rorl
cmp
add
fcomps
cmp
lods
add
adc
and
imul
jmp
neg
inc
das
mov
xchg
mov
xchg
pusha
sub
cmp
test
adc
stos
push
les
mov
sub
out
add
cld
es
iret
popf
and
jg
mov
xchg
sbbb
xchg
add
mov
or
lahf
adc
imul
jb
shll
xchg
rcll
inc
fsubs
pop
push
nop
dec
cltd
adc
xor
sub
jno
adc
push
sbb
add
mov
lret
test
add
sbb
add
add
fs
jbe
outsl
add
add
imul
inc
repz
not
add
aas
imul
js
sbb
sub
pop
lret
jmp
int
mov
ret
add
mov
dec
jmp
jae
ficompl
hlt
in
call
push
icebp
scas
xor
xchg
cli
xchg
xchg
insb
inc
mov
dec
js
fs
xor
add
sub
jl
mov
and
outsb
jae
shl
push
add
cli
ret
icebp
fisubrs
pop
push
test
into
ficoml
mov
aaa
mov
sub
mov
xchg
mov
stos
scas
rcrl
sub
jl
je
pop
pop
xor
pop
dec
sub
or
cmc
aam
add
sbb
addb
add
lock
push
adc
xor
jg
test
dec
add
xor
add
jp
cmp
jge
push
out
jmp
mov
push
add
add
fistpl
mov
mov
sbb
or
outsl
mov
clc
mov
mov
pop
sahf
inc
loop
push
out
sbb
mov
fwait
push
loope
sbb
adc
add
movsl
sti
add
and
mov
push
mov
mov
add
xor
sbb
add
enter
fimuls
cltd
mov
ja
insl
rdtsc
add
sub
push
sub
add
faddl
cmp
movsb
orb
mov
mov
mov
sahf
inc
cmp
outsl
jge
dec
add
add
add
inc
imul
mov
dec
xor
test
pop
faddl
pop
fucomip
ret
add
jle
add
add
loop
jge
add
add
add
pop
mov
and
mov
mov
add
xor
or
sahf
in
sub
ss
lret
sub
mov
mov
lahf
sub
ficomps
add
pop
mov
lock
cmp
mov
scas
mov
popf
mov
lret
mov
jmp
xchg
imul
jp
add
fnstsw
out
add
adc
ss
sahf
adc
fadd
cmp
inc
pop
xchg
sbb
pop
mov
push
sub
aad
outsl
xchg
aaa
xor
pop
jg
jns
pop
sbb
or
or
cmp
popf
add
push
or
jo
mov
mov
enter
pop
movsl
lock
add
add
jmp
or
popf
cwtl
dec
std
mov
out
add
add
adc
pop
in
clc
adc
insl
adc
int
into
popl
mov
ss
mov
add
mov
add
lahf
add
xchg
push
les
pop
mov
push
jg
loopne
or
out
cmp
aam
cmc
add
je
pusha
inc
xor
and
std
jo
lcall
and
xchg
inc
lock
or
in
add
repnz
icebp
add
les
cli
mov
inc
fldl
and
loope
push
sbb
add
push
movsb
mov
sbb
sub
adc
mov
cltd
push
adc
dec
xchg
add
clc
jnp
repz
mov
jp
push
jg
add
repz
add
mov
dec
pusha
in
insl
pushf
add
add
idivb
ljmp
mov
je
ja
add
add
xor
outsb
add
sbb
lret
jg
shr
test
add
cli
push
rcll
dec
inc
jb
xchg
flds
dec
lods
test
lods
sahf
imul
add
sti
mov
push
fmull
pusha
int
jo
mov
shrb
roll
outsb
add
cmp
sub
adc
cmp
ja
insb
sub
sub
push
inc
gs
dec
add
sahf
pop
in
push
add
add
add
or
push
adc
add
popa
or
dec
ds
add
cltd
push
jmp
push
loopne
das
lock
scas
add
loop
and
push
popa
or
and
jle
mov
test
add
add
add
pop
add
sub
mov
pop
out
fsubp
xlat
movsb
push
cmpsl
outsl
fcoms
daa
mov
push
divb
inc
push
jg
xor
add
popa
xchg
pop
ja
fwait
pop
add
xchg
adcl
push
fists
gs
nop
mov
add
scas
xchg
ja
cmp
pop
mov
dec
add
insb
adc
fcomp
ret
add
dec
push
mov
cld
dec
movsl
cmp
mov
ljmp
inc
jmp
add
xor
add
nop
addr16
add
mov
push
rorb
orb
fisubrl
loopne
and
pushaw
fs
add
loope
sub
inc
jns
mov
cmp
add
jbe
outsb
out
add
xchg
and
mov
int3
sti
scas
shrl
lret
or
addb
out
sub
fstl
add
xchg
faddl
out
call
mov
sbbb
add
xor
mov
add
dec
movsl
mov
stos
fdivr
inc
and
xchg
pop
add
adc
jp
sub
inc
pop
add
add
into
add
lret
int3
stc
scas
or
add
adc
std
xchg
add
insb
leave
pop
adc
add
lock
popa
mov
add
daa
mov
mov
pop
imul
lahf
mov
sub
push
in
dec
xchg
stc
pusha
mov
ja
cmc
das
cmpb
pop
xlat
adc
add
push
ret
jecxz
mull
shrl
ret
ja
add
mov
pop
cld
push
and
add
cld
add
cmp
int
mov
adc
dec
xor
repz
add
in
das
test
adc
idivl
xchg
sbb
push
mov
fisttps
shlb
add
xchg
inc
addb
add
roll
jno
fisubl
inc
cmpl
sub
std
sbb
pop
sub
mov
lahf
test
pusha
inc
mov
call
rep
mov
mov
popf
aam
xor
jmp
stc
sub
fdivrs
cmp
outsb
add
mov
inc
ja
mov
sub
push
pushf
inc
sar
test
repnz
xchg
out
dec
lret
adc
adc
jne
xchg
and
sub
add
in
addr16
lods
addr16
and
mov
test
or
jb
adc
add
lcall
fmul
dec
inc
adcb
add
arpl
xor
add
adc
pop
cld
inc
jmp
xor
add
dec
jge
mov
pop
cwtl
fwait
jl
add
cmpsl
imul
pop
or
rolb
adc
mov
or
fisubs
xlat
test
mov
loop
popf
outsb
inc
dec
push
or
into
mov
sub
push
test
and
in
add
inc
stos
pop
add
sahf
das
outsb
push
sbb
jp
hlt
mov
in
jle
rcrl
push
inc
fcoml
inc
ficompl
xor
push
cwtl
adc
insl
inc
je
add
popa
in
sbb
shll
je
pop
sahf
aaa
mov
int3
testl
add
push
ficomps
aad
outsl
sqrtps
in
insb
add
pop
testl
cmp
js
or
adc
pusha
lcall
ret
ret
sbb
sub
in
push
add
mov
add
movsb
and
sbb
mov
xchg
in
adc
mov
dec
test
sbb
add
bound
aaa
movsb
sbb
movsb
out
fidivl
ja
mov
dec
ja
mov
add
rclb
xchg
jno
xor
int3
in
fldl
jp
add
adc
xchg
shr
push
jo
pushf
push
lock
dec
or
mov
push
cmp
std
sub
add
sub
add
sub
add
add
sahf
movsl
add
test
jne
or
and
add
mov
push
idiv
add
jmp
inc
add
das
rcr
push
add
out
push
sub
mov
pop
cwtl
daa
aad
xchg
add
add
mov
xchg
adc
mov
and
add
inc
and
xchg
fisttps
imul
add
mov
loope
cli
jmp
sub
xchg
aas
add
aam
in
add
cld
icebp
insb
mov
pushf
push
add
out
sub
test
inc
add
add
pop
sbb
stos
lahf
bound
xchg
outsl
sub
enter
fldenv
and
popa
cmp
roll
jmp
fwait
add
cmpsb
out
push
sub
push
push
inc
sbb
xchg
mov
movsb
add
add
jo
push
xchg
loopne
jo
add
add
add
repz
xor
inc
int3
pop
add
cmp
sti
xor
fstpt
je
xor
in
mov
mov
mov
sub
add
enter
mov
push
pusha
or
das
jecxz
iret
pop
mov
dec
les
movsl
add
iret
adc
inc
mov
jae
inc
repnz
add
jbe
cmp
lds
into
nop
xor
sahf
insb
adc
pop
jg
stos
nop
sub
lahf
add
add
fadds
mov
add
sahf
or
cmp
outsb
adc
mov
jl
inc
cltd
std
test
loop
xor
cld
lock
test
sub
add
jae
add
xchg
test
push
adc
repnz
out
popa
add
sub
cmpl
gs
add
cmp
add
dec
scas
add
sbb
fcoml
adc
popf
jl
in
aam
adcb
pop
xor
and
adc
subb
xchg
adc
sbb
flds
stc
sub
add
bound
imul
dec
scas
push
pop
pop
lcall
add
ljmp
jge
add
rorb
add
arpl
pop
mov
cmpsl
add
add
cs
xchg
sbbl
test
lahf
add
or
add
sbb
xor
cmp
mov
sub
add
jne
test
loop
add
or
mov
pop
push
adc
push
ja
out
hlt
arpl
fwait
mov
mov
jae
inc
lahf
add
xchg
xorb
popa
out
jp
mov
add
outsl
mov
mov
ret
out
jbe
xchg
fwait
mov
nop
inc
fwait
xchg
add
fnsave
fstpt
mov
and
mov
adc
or
or
xchg
addb
bound
inc
mov
and
movsb
loop
out
ret
push
mov
leave
dec
addr16
pop
mov
cmp
inc
icebp
mov
lret
adc
out
popf
adc
fistpll
ficoms
lods
rorl
add
push
xor
add
jbe
insl
jp
or
add
pop
xchg
cmpsl
scas
jo
add
push
ds
dec
mov
push
add
outsl
outsl
ret
icebp
and
fstl
ljmp
sbb
push
sub
sbb
add
shll
push
stos
and
cli
fsubp
popf
add
mov
add
scas
test
test
push
sti
jne
lock
add
jne
testb
fidivs
add
xchg
sub
in
fmuls
inc
jae
xchg
ret
dec
sbb
or
call
lret
jl
jnp
mov
and
pop
add
sahf
int
dec
add
sub
inc
or
add
sub
add
mov
movsb
mov
out
pop
add
pusha
inc
jle
xchg
push
cs
dec
aas
out
add
add
or
add
ljmp
dec
repz
fdivrs
jp
shll
add
push
lods
popa
in
cmp
aas
adc
push
scas
aam
add
and
mov
js
mov
sub
icebp
imul
mov
xor
mov
outsl
sub
cltd
cmp
icebp
pop
mov
mov
adc
or
pusha
inc
lret
add
mov
mov
mov
push
mov
add
stos
pop
test
fwait
in
jmp
lods
ljmp
fwait
push
outsl
xor
aad
cwtl
movsb
mov
inc
xchg
ss
inc
add
dec
push
xor
cs
add
les
sub
mov
cs
add
jecxz
aaa
push
sbb
mov
movd
push
push
inc
std
mov
rol
adc
cmc
pop
add
cmp
dec
jl
shll
jmp
pop
add
cmp
xlat
arpl
in
or
out
adc
adc
cmp
pusha
fsub
daa
gs
add
pop
push
sbb
dec
lcall
add
cmp
dec
cwtl
xorl
loop
inc
jl
jmp
mov
xchg
jne
sbb
adc
sbb
add
movsb
jae
jmp
add
push
subb
sbb
add
cli
int
fwait
add
push
shlb
xchg
arpl
fadd
mov
stos
ret
sub
and
roll
div
add
test
stos
arpl
popa
stc
pop
push
inc
in
stos
mov
rcl
popl
mov
add
mov
jbe
pop
ss
sar
arpl
add
add
repnz
scas
mov
jmp
cmpsb
jle
data16
cmpsl
adc
sarl
add
in
mov
or
mov
add
inc
and
add
mov
lcall
es
mov
aam
dec
push
scas
xchg
jbe
lock
sub
pop
add
push
mov
add
sbb
sub
mov
add
aam
data16
sub
out
mov
xlat
ret
and
mov
push
inc
fiadds
popf
fwait
sbb
xchg
pop
or
mov
xor
mov
add
imul
data16
inc
jns
aad
inc
test
sbb
add
std
push
or
loop
push
insl
fsubrl
fsubl
outsb
sub
pop
in
add
fdivl
jae
inc
dec
shrb
push
je
add
icebp
or
inc
add
mov
sbb
out
and
lret
stos
fcomp
roll
mov
fwait
xchg
jns
std
push
sbb
add
inc
xchg
pop
mov
shlb
adc
add
add
add
fbld
inc
sbbb
xor
pop
sti
or
dec
adc
mov
ja
iret
push
inc
xor
dec
jns
jecxz
int3
ror
add
xchg
add
aas
add
mov
add
dec
add
dec
add
dec
aad
jmp
sub
imul
mov
in
push
adc
push
add
jge
je
push
mov
add
roll
adc
daa
cwtl
lcall
sbb
jno
dec
mov
loopne
add
pop
jmp
xchg
test
adc
jge
enter
movsb
sbb
ja
dec
mov
jmp
add
push
push
xchg
and
push
cld
inc
dec
add
sub
jp
add
movsb
imul
lds
xchg
jp
leave
mov
outsl
stos
mov
and
bndstx
cmp
mov
mov
test
lret
jne
loopne
mov
lcall
xchg
push
daa
fs
add
lock
ror
add
jg
popl
adc
adc
mov
aas
mov
pop
add
syscall
inc
add
jno
mov
aad
inc
sbb
add
iret
mov
js
sub
adc
mov
arpl
adc
xchg
mov
push
shll
lds
mov
add
aaa
scas
ljmp
xchg
add
popl
mov
bt
push
mov
or
pop
add
jmp
or
and
jns
fisttps
mov
ljmp
xor
mov
push
push
loope
mov
mov
inc
add
dec
inc
sbb
add
test
pop
lahf
or
xchg
add
cmp
cmp
cmc
add
jle
cmp
cmpb
add
adc
sub
ret
add
packuswb
outsb
xor
mov
test
movsl
add
movsl
imul
inc
xor
cmp
add
xlat
pop
arpl
mov
jnp
push
push
push
jae
lret
mov
push
fcoml
add
loopne
mov
lret
add
add
sbb
mov
divb
add
outsb
or
mov
daa
and
sbb
aaa
and
flds
and
add
mov
test
mov
mov
adc
xorl
out
dec
sbb
pop
push
push
adc
psrlq
add
ret
andb
sbb
fstl
dec
aas
sub
jae
xor
inc
jle
jb
jmp
in
add
and
mov
push
les
outsb
pop
andl
in
sahf
call
xchg
rcl
add
mov
cld
movsl
pop
das
add
xchg
jb
adc
pop
stos
in
mov
test
add
inc
std
mov
test
inc
push
addb
leave
push
out
in
ficoms
xor
and
rol
cmp
pop
adc
in
lahf
jae
fiaddl
mov
mov
fdiv
add
mov
test
adcl
ds
test
add
dec
insl
jecxz
add
rclb
pop
inc
push
pop
xchg
cmpsl
inc
adc
add
arpl
nop
lahf
movsl
push
inc
out
adc
inc
add
dec
jmp
xchg
adcl
xchg
jns
adc
int
xchg
stos
stc
sbb
add
add
xchg
mov
cwtl
jl
or
sar
add
mov
fwait
and
push
add
dec
xor
pop
pop
and
sbbl
inc
jl
jp
and
and
jmp
or
xchg
iret
es
jecxz
add
ror
add
or
leave
rcrl
jge
hlt
clc
or
cli
pushf
rorb
aaa
or
outsb
lods
lret
sbb
or
push
cmp
out
jg
and
mov
les
cwtl
jg
test
in
les
ja
add
testb
into
and
push
mov
add
push
inc
sbb
repnz
mov
add
loopne
addr16
pop
pop
sub
adc
pop
mov
inc
xchg
lds
shl
add
mov
pop
movsl
pop
popa
scas
adc
sub
repnz
adc
in
jg
sub
aam
pushf
mov
lret
incb
jmp
cmp
ret
insb
rcll
leave
das
add
xchg
ljmp
push
nop
fwait
hlt
mov
push
add
fisttpll
rcrb
pop
cmp
mulb
out
mov
repz
xorl
fildl
sahf
lret
stos
add
pop
xchg
insl
cmc
add
push
push
fistpl
fwait
out
add
inc
add
mov
add
andb
inc
imul
andb
iret
xchg
lods
and
cmp
mov
lods
sbb
pop
dec
addr16
inc
push
ljmp
xchg
mov
adc
push
xor
add
push
add
rcrl
bound
mov
test
nop
add
mov
incb
int3
out
mov
lds
push
cmp
xor
mov
add
or
int3
in
jb
jecxz
xchg
test
mov
and
outsb
cmp
lock
jns
xor
pushl
aam
lock
add
mov
xlat
pop
aaa
add
jbe
pop
cli
and
dec
or
imul
add
lods
xchg
out
add
jg
popf
pop
jge
push
pop
add
push
dec
pop
add
pop
adc
fcomip
test
icebp
or
dec
add
rol
jg
sbb
jle
es
add
add
stos
sbb
adc
push
iret
into
adc
int3
cmp
es
add
add
fcmovne
cltd
jp
add
shll
add
lods
fistpl
cmova
lcall
add
loopne
and
and
add
inc
bound
iret
insl
add
subl
lea
add
add
mov
ret
cmp
repnz
imul
xchg
jmp
jb
push
test
cmpb
fcomi
jmp
mov
jl
sub
add
test
push
or
adc
jae
jp
and
shrb
neg
add
stos
cld
cmc
cmp
mov
jp
rolb
negl
incb
push
testl
in
jp
repnz
adc
add
or
sub
xor
jl
hlt
sbb
aaa
add
mov
and
add
lret
push
add
jbe
pop
addr16
mov
add
sahf
in
out
inc
outsl
flds
push
stc
je
sbb
or
sub
bound
mov
pop
add
push
add
inc
and
test
add
dec
jmp
out
movb
sub
xchg
mov
inc
lret
mov
mov
adc
pop
inc
ljmp
inc
imulb
mov
push
add
fwait
jns
pop
fs
push
push
cmp
filds
jne
inc
pop
sbb
mov
add
pusha
leave
loope
sub
or
cs
es
ja
and
loop
aam
sub
add
scas
add
jne
repz
movsl
pop
add
adc
fimull
or
cmp
jne
mov
add
adc
cmp
cmp
shrl
in
inc
lahf
add
add
sub
out
into
in
add
sbb
dec
xor
add
and
out
lret
cs
or
int
add
mov
add
stc
add
add
or
fwait
cmp
repz
xchg
jb
lea
fs
adc
mov
popa
adc
sbb
sbb
add
add
std
add
xor
add
rorb
clc
aad
loope
add
add
inc
add
add
xchg
bnd
call
out
add
jge
sbb
lds
cmp
in
add
push
mov
hlt
negl
leave
sub
sbb
in
sub
pusha
pop
test
add
shll
call
add
pop
pushf
pop
xchg
xlat
sub
lar
out
cmpsb
push
ljmp
adc
xor
or
jle
test
gs
cmovno
add
repz
lock
bound
iret
lret
mov
ja
nop
or
icebp
add
or
insl
mov
insb
add
inc
stos
flds
push
and
jle
test
push
shl
mov
fdivs
aam
cltd
xor
inc
rcrb
xchg
repz
add
sub
add
lret
aad
into
lods
add
add
or
add
das
aad
mov
lret
test
shr
pminub
cmp
push
stc
popf
and
pop
imul
fdivr
test
dec
pop
add
sbb
sbbb
push
mov
fisttpll
fdivr
add
cmp
add
jl
insb
in
stos
fwait
add
test
sti
xor
dec
push
nop
lods
pop
adc
xor
jle
bound
add
and
popf
or
mov
add
dec
pop
sbb
mov
mov
and
and
les
insb
jp
pusha
fdivrp
xchg
pop
adc
lea
lock
stc
jle
repz
add
cmpsl
add
cmp
add
int
outsb
fcmovbe
addl
add
lods
andb
sub
psllw
daa
fisubrl
add
das
mov
testb
imul
pop
lahf
bound
fs
arpl
inc
xchg
loopne
lock
and
cwtl
mov
fistps
add
mov
sbb
lcall
mov
pop
mov
call
fbstp
es
mov
sbb
add
jb
xor
in
cs
popf
pop
add
cmp
sbb
lret
mov
pop
dec
add
iret
insb
mov
sbb
dec
sub
adc
add
cmp
cld
sbb
add
mov
add
or
cmp
cs
push
cmpb
adc
jmp
loopne
int
add
out
in
testl
jl
ret
mov
and
aas
xchg
add
testb
pushl
mov
or
imul
ds
cmp
insb
scas
add
inc
cli
mov
sbb
ficomps
std
jecxz
rolb
repnz
ja
or
inc
add
mov
xor
sub
fdivrl
roll
jge
mov
das
pop
orb
push
mov
adc
push
cmc
xchg
fists
fs
add
sti
flds
lret
aad
add
dec
xchg
add
add
sub
out
pusha
add
outsb
cltd
rolb
push
add
push
pop
push
fbld
inc
mov
add
jp
dec
or
adc
out
mov
add
popa
mov
inc
ja
pop
fwait
push
rorl
mov
add
jns
xorps
jne
vunpckhps
add
mov
sbb
add
mov
cli
fiadds
pop
jno
xor
xchg
rclb
pop
add
cmp
cmp
lock
test
pop
sbb
das
shlb
or
mov
sbb
sti
sbb
push
and
and
sub
daa
jae
pop
cmc
jecxz
xchg
add
mov
dec
repnz
pushf
ja
sbb
pusha
and
mov
movsb
push
mov
pop
sub
int
mov
ja
mov
pop
gs
add
sahf
xchg
in
test
inc
sub
mov
pop
push
add
mov
stos
cmp
mov
mov
outsl
mov
push
nop
inc
jo
sub
enter
scas
mov
sub
cmp
add
cmp
cltd
fs
sbb
xor
test
mov
inc
inc
add
sbb
add
add
jl
cmp
sub
mov
mov
push
mov
lock
aas
int
or
jo
xchg
add
rcr
mov
add
add
out
in
stos
pop
adc
xchg
fwait
sbb
add
outsb
add
or
mov
jns
sub
or
lcall
xor
mov
sbb
xor
in
push
xchg
mov
insb
pop
daa
sub
pop
xchg
loop
add
daa
lods
mul
shrb
icebp
dec
jecxz
add
cmp
scas
or
add
clc
mov
dec
lea
lcall
into
pop
dec
cmp
popa
dec
and
xchg
add
jae
testl
fsubs
mov
fimuls
test
add
ds
repz
jb
mov
xor
mov
sbb
hlt
aaa
add
imul
xchg
stc
xchg
lret
adc
or
sub
jecxz
outsb
add
or
nop
str
mov
bound
or
test
dec
adcb
push
imul
push
push
push
add
xchg
pop
lcall
jg
or
pusha
add
imul
fisttpl
sub
add
or
test
fwait
pushf
stos
aas
push
outsb
lea
fdivr
push
inc
push
add
add
imul
subl
mov
xor
add
or
fdivs
pop
jbe
add
icebp
push
mov
iret
pusha
push
pop
mov
push
hlt
sbb
jbe,pt
dec
add
mov
adc
jmp
push
add
in
xor
add
pop
add
sbb
scas
repz
inc
add
ret
cmpsb
leave
sti
in
inc
mov
fs
and
xor
and
push
sub
fidivrs
xorl
push
fwait
addb
add
cmp
dec
add
lret
dec
jg
cmpsl
idiv
out
aad
ret
mov
jb
sbb
filds
pop
insl
test
sbb
cmp
pop
push
lret
add
shl
pop
ds
mov
jns
mov
add
mov
inc
add
mov
push
test
test
xchg
xor
add
add
icebp
and
fimull
sub
mov
add
incl
jnp
sub
add
jns
fisubrs
mov
adc
xchg
jae
out
lahf
ret
mov
sub
dec
jae
mov
ja
adc
xchg
pop
mov
mov
add
xchg
push
iret
add
std
mov
adc
cwtl
divb
and
dec
add
dec
cmp
sub
adc
mov
add
add
adc
add
lahf
pusha
aas
inc
test
add
ja
daa
mov
loop
sub
shrl
add
lahf
add
rcrb
add
imulb
sub
lret
jbe
xchg
add
xor
iret
mov
add
cmp
ljmp
or
ja
mov
das
ffreep
adc
mov
mov
sub
sub
mov
imul
cmc
in
sbb
sahf
push
scas
fidivrs
test
mov
xchg
push
daa
jnp
out
jl
xchg
lret
add
gs
int3
mov
ljmp
sbb
loope
es
add
fildl
jne
ds
pushl
adc
and
jge
in
mov
push
push
add
mov
push
stos
mov
adc
sbb
popf
jnp
in
xchg
aad
pop
or
testl
xor
push
sub
mov
xchg
popf
mov
jns
adc
cld
cli
sub
hlt
jne
cld
test
insl
mov
pop
loopne
mov
lret
add
sbb
adc
adc
and
into
or
cmpsl
add
cmp
add
andb
add
jae
scas
sub
out
adc
cmp
test
les
push
mov
scas
mov
cmp
add
inc
sbb
cld
hlt
sbb
icebp
in
mov
mov
add
pop
mov
jge
add
push
xchg
sub
sub
jns
jno
in
sub
dec
add
ds
ret
test
dec
fisubrs
stc
jg
add
xlat
lret
inc
xchg
sub
rcrl
push
insb
lahf
in
pop
pushf
leave
sub
enter
ljmp
rcrl
add
jecxz
pop
add
lods
add
jp
mov
sti
push
dec
ret
aas
sbb
mov
test
jbe
dec
pusha
mov
pop
pop
jp
rolb
push
dec
fwait
mov
ficoml
jp
hlt
insb
shld
lret
outsl
mov
cmc
mov
adc
in
and
lcall
adc
cmpsl
sbb
add
into
bound
xchg
mov
out
lret
fisttpll
lcall
sub
mov
aad
add
push
add
add
add
iret
or
mov
mov
subb
sub
push
xchg
jmp
clc
and
subl
lea
and
adc
std
int
pushf
test
jmp
add
mov
xor
jb
adc
das
in
add
movsb
and
ltr
mov
mov
xor
add
push
js
ljmp
xor
cmovg
dec
fisttpll
xchg
dec
adc
dec
fidivl
lahf
and
add
add
xor
dec
add
mov
movsl
insl
and
inc
jns
ja
inc
lock
daa
imul
cli
add
dec
sarl
hlt
mov
xor
and
mov
push
sub
std
rcll
xchg
ret
bound
dec
sbb
adc
add
pop
add
sub
dec
add
fildll
inc
mov
push
movsb
mov
mov
dec
ja
test
enter
imul
push
sti
test
pop
ja
mov
jmp
xlat
add
jmp
inc
jg
das
std
ficoml
sbb
add
mov
dec
add
cli
mov
inc
in
and
xor
loopne
mov
push
push
ficompl
pop
or
fildll
and
add
cmp
sbb
inc
adc
add
lods
inc
imul
ret
dec
add
inc
xor
test
scas
push
movsl
xchg
add
jle
mov
mov
cli
mov
or
lcall
ror
xchg
flds
addb
cwtl
loopne
and
xchg
add
orl
inc
mov
or
push
dec
push
push
add
pop
inc
pop
pop
add
out
xchg
leave
inc
cli
add
inc
mov
out
sub
roll
inc
sbb
sub
aam
js
cmp
push
stc
out
loope
mov
add
xor
dec
xchg
add
add
pop
mov
adc
lahf
pop
add
aas
add
dec
and
add
pop
xor
jbe
fnsave
loopne
mov
add
lods
shrb
mov
movsb
add
adc
push
cmp
dec
jmp
and
or
jne
lods
jnp
push
xchg
idivl
and
add
add
xlat
cld
jne
das
adc
mov
add
add
repz
jnp
lret
lods
scas
ret
in
mov
in
jmp
mov
fs
xlat
xchg
mov
mov
xor
cmpl
mov
dec
add
loop
add
mov
xor
dec
out
repnz
add
fbld
aad
dec
dec
add
add
lcall
pop
or
imul
and
xchg
pop
mov
pop
add
pop
add
jns
xor
neg
call
dec
mov
mov
or
sbb
add
mov
sti
aas
cmc
xchg
in
ret
testb
cwtl
jbe
pop
sub
add
adc
imul
leave
xlat
add
mov
jmp
stc
dec
xchg
add
scas
loop
movb
mov
int3
jbe
add
mov
cmc
inc
add
push
push
mov
mov
ret
jne
sbb
fs
xchg
add
and
fcomip
loop
aad
inc
mov
add
and
arpl
shl
inc
scas
jb
add
add
outsb
cltd
push
leave
shl
nop
add
fmull
cmp
xlat
add
outsb
rorl
iret
cli
add
push
add
or
cli
popa
add
lods
sub
jb
xlat
dec
lea
xchg
addl
aas
add
add
and
popa
push
mov
mov
inc
bound
cmp
or
fistpll
dec
pop
outsb
jo
sub
add
das
push
cmp
add
cs
xor
es
add
adc
dec
mov
mov
sbb
faddl
inc
cmp
test
pop
add
imul
das
adc
add
push
xchg
or
outsb
iret
or
mov
in
ret
sbb
ja
xchg
inc
aam
add
call
out
pop
test
outsl
addr16
push
shrl
ret
je
xchg
sbb
jp
add
and
fs
pop
mov
loope
fsubrl
lods
sub
add
jle
fisubrs
xchg
cld
sub
jp
out
add
nop
ljmp
dec
aas
dec
xor
mov
imul
mov
scas
out
mov
or
xchg
pop
sbb
icebp
sub
add
push
cmp
or
imul
and
pop
add
mov
adc
ret
xchg
bound
pop
add
movsl
mov
cmc
inc
mov
fdivl
mov
cld
imulb
jbe
add
add
in
push
xor
fmulp
add
nop
into
aaa
push
mov
out
pop
add
in
pushf
rcrl
add
ja
mov
ror
imul
mov
push
jo
loopne
pusha
add
adc
xorl
outsb
mov
xor
lret
and
das
les
cmp
mov
sti
out
and
call
sub
in
loop
jnp
jnp
int3
and
popf
dec
pop
lret
in
lahf
leave
cmc
jne
sti
out
xchg
sub
pop
jb
aas
pop
pop
imul
lods
push
pop
iret
or
fnstcw
pop
jne
and
lea
call
imul
mov
fstps
shrl
jl
mov
out
jecxz
add
movb
xchg
arpl
sbb
stc
add
push
cmp
orl
mov
popw
js
and
jl
lcall
sub
sub
sbb
movsb
add
jecxz
add
mov
mov
pusha
jnp
std
add
xor
roll
jne
fwait
cltd
sar
jo
je
xor
xchg
cmp
add
jecxz
jmp
inc
movsb
sahf
push
add
cmc
push
fadds
int
sbb
iret
outsl
adc
ret
scas
call
cs
fcomp
push
pop
loop
vpunpckhwd
add
jne
dec
cmp
pop
fwait
popf
and
cli
mov
add
cmp
ficomps
adcl
jp
out
fcmovb
cmp
add
xchg
cmpsl
gs
les
nop
ret
xchg
sub
add
add
jp
scas
pop
cld
in
lods
sub
push
cmpsl
rcr
push
add
push
mov
adc
lret
add
les
or
dec
jp
xchg
add
mov
insb
pusha
mov
pop
iret
gs
pop
adc
cwtl
sub
pop
das
test
jl
sbb
or
push
push
sbb
loop
out
push
cmpsl
outsb
sbb
mov
push
xor
pop
push
out
test
sub
mov
push
and
cmpsb
xor
or
cmp
or
lahf
cwtl
loopne
rorb
add
fsubrl
pop
lret
std
inc
mov
pop
loope
aas
popa
and
mov
mov
push
dec
adc
lods
fwait
jae
cmp
rolb
and
add
mov
inc
add
add
jmp
dec
sbb
cmp
xor
and
jle
fcompl
testb
lds
ja
jmp
or
dec
add
pop
cmp
ficoml
sub
sbb
mov
xchg
add
ss
add
and
shrb
cmp
jmp
lea
cmpsl
cmpsl
mov
or
pop
jg
add
add
out
ljmp
jb
imul
inc
cmp
pop
add
stc
cld
add
mov
cmp
incl
dec
fildl
sub
and
jnp
sbb
sbbl
jb
pop
inc
push
sub
lods
js
insl
sub
pop
sub
enter
pusha
and
inc
xchg
add
push
mov
ja
mov
cli
fildl
icebp
add
add
and
fndisi(8087
jl
test
add
add
pop
std
add
out
sahf
mov
lret
mov
jl,pn
add
inc
aam
add
out
jg
add
lret
push
fwait
shlb
sub
aaa
cmp
add
dec
cs
jbe
sbb
ret
sbb
inc
cmpsl
call
popa
loop
aam
adc
push
mov
lea
sahf
mov
xchg
addr16
or
adc
jnp
add
sbb
fisubs
jns
mov
bswap
jns
loopne
std
je
clc
test
popa
pop
add
pusha
sbbl
pop
push
sbb
ret
add
push
daa
and
lods
das
aaa
inc
add
dec
mov
and
jmp
lahf
fimull
mov
or
inc
mov
push
cmp
test
inc
push
push
push
mov
inc
add
add
jnp
sbb
xor
add
or
cmpl
inc
add
or
xor
fs
clc
cmp
ljmp
sub
das
shll
sub
inc
pop
push
scas
mov
andl
dec
mov
xor
int3
repz
imul
mov
pop
movsl
dec
icebp
or
or
add
mov
or
int3
push
test
bnd
or
jecxz
dec
dec
adc
ljmp
lea
in
push
lahf
cmpsb
adc
push
insb
inc
jnp
in
mov
add
jg
jmp
push
mov
repnz
adc
jmp
fucom
add
bound
mov
sub
loop
inc
repnz
inc
outsl
mov
dec
push
push
daa
pop
add
iret
divl
mov
jbe
add
sub
rclb
jg
in
sbb
sub
push
es
add
add
mov
jne
jb
fidivs
nop
mov
ljmp
push
add
xor
jecxz
add
add
add
mov
mov
xor
pop
nop
mov
fiaddl
insb
adc
aam
add
mov
add
mov
movsl
dec
hlt
clc
insb
in
add
test
dec
fistps
adc
mov
pcmpgtd
test
adc
movsl
add
jp
add
clc
repnz
into
jbe
add
jno
sbb
leave
xchg
sub
jno
pop
jl
leave
push
lret
iret
jmp
add
add
xchg
mov
add
sbb
fdivrl
adc
pushf
fnstsw
mov
flds
mov
lea
pop
pop
push
std
nop
push
loop
xor
lret
mov
cmpsl
dec
jnp
dec
in
sahf
pop
add
mov
push
push
hlt
add
sbbl
cmc
inc
scas
test
inc
mov
ljmp
sbb
jl
sbb
add
or
fildl
or
jg
cltd
jle
ljmp
add
test
scas
nop
pop
mov
add
dec
aaa
pop
arpl
mov
subb
ret
dec
test
dec
data16
sub
mov
sbb
add
nop
ss
mov
add
inc
add
popf
dec
xlat
inc
push
jg
aas
icebp
test
pop
mov
xor
mov
cmp
inc
xor
pop
es
aad
sub
mov
dec
xlat
and
or
sub
mov
clc
mov
add
sub
add
fstl
lods
mov
loop
sub
cmp
out
std
add
mov
lods
loop
mov
adc
xchg
xchg
mov
ret
mov
sub
sar
mov
sub
fs
ljmp
movsb
hlt
push
add
int3
movsl
xor
push
lahf
jecxz
ss
test
add
add
jb
shlb
arpl
add
add
pop
add
sbbb
push
and
adc
pop
add
cwtl
iret
sbb
in
imul
sub
add
adc
fsubl
add
js
jle
pop
pop
adcl
jle
testl
xor
push
xor
add
insl
jge
xchg
sbb
movsl
add
clc
adc
insb
movsl
loopne
jg
add
mov
add
mov
inc
add
ffreep
ds
push
aam
ds
xchg
mov
or
jecxz
jp
cmp
mov
aas
into
mov
and
jecxz
jae
orl
scas
xchg
ds
enter
add
mov
add
cwtl
xchg
pop
fildl
mov
cmpsb
adc
imul
adc
icebp
cld
jnp
sbb
rcrb
leave
add
inc
iret
mov
mov
dec
adc
push
dec
jns
aas
push
into
outsl
and
fisubrl
into
push
mov
fisttps
mov
jl
add
pop
int3
pop
scas
jle
aas
aaa
orb
mov
mov
sahf
add
add
fwait
xor
icebp
xor
clc
test
push
mov
das
jle
mov
or
lret
add
aas
mov
jbe
pushf
stos
das
push
add
fsubr
or
add
mov
add
sarb
cmp
ljmp
jne
fwait
cwtl
jp
mov
inc
scas
mov
or
lds
mov
icebp
pop
add
add
sub
jp
negb
test
mov
mov
daa
add
dec
lret
inc
cltd
add
out
jo
fdivrl
lret
mov
push
cld
sub
add
adc
sbb
pop
dec
sbb
sbb
cmp
fsubrs
pavgb
std
mov
mov
jbe
pusha
mov
aad
std
xchg
sbb
std
or
sbb
ret
push
add
jle
imul
dec
add
mov
add
jno
xchg
sbb
and
xchg
mov
add
jbe
lods
add
in
and
add
add
add
sahf
jne
add
dec
stos
test
xchg
sarb
fiaddl
inc
mov
inc
repnz
incl
pop
ss
xor
icebp
dec
jbe
add
add
mov
mov
sbb
and
out
or
mov
mov
shrl
cmc
push
data16
add
loope
mov
test
inc
xchg
rcrb
jbe
jle
xchg
sarl
xchg
das
enter
pop
add
mov
xor
sbb
mov
int
jle
xor
data16
add
out
loope
inc
push
loope
cmp
jo
movsl
and
in
xor
xchg
ja
jnp
imul
cmp
add
xor
inc
add
sbb
loopne
pop
cmp
push
push
test
inc
and
popa
or
fs
in
insl
inc
mov
or
pop
imul
pop
add
loopne
repnz
bound
pop
mov
lret
gs
fidivrl
sbb
out
in
or
add
and
sub
add
jge
insb
sub
mov
popf
or
lahf
mov
sub
mov
lret
xlat
aam
movsl
mov
add
dec
jnp
faddl
mov
inc
test
popf
lea
add
rorl
add
add
mov
or
add
in
add
xchg
call
fimuls
fldcw
out
scas
and
pop
arpl
add
mov
add
loope
dec
cmovp
jecxz
call
add
add
sub
mov
ja
add
orl
lods
fbld
cmc
insl
aam
add
jge
fwait
add
add
lds
add
add
add
test
mov
out
mov
add
dec
jp
jo
gs
fs
cmp
cmc
cmp
push
sub
inc
push
jmp
inc
pop
add
movl
je
xchg
sub
xor
adc
sbb
add
filds
push
dec
add
insb
xchg
mov
xchg
mov
pop
call
pop
xadd
jmp
hlt
out
cld
add
xor
add
ja
sub
nop
add
inc
loop
inc
ret
and
sbb
sbb
mov
popa
pop
cmc
imul
shlb
xchg
and
or
in
ja
rorl
jmp
add
loop
enter
hlt
inc
and
add
add
inc
mov
add
mov
loopne
xchg
add
add
xchg
test
push
mov
cmp
or
stos
fcmovnu
mov
mov
dec
add
add
mov
xchg
xlat
jmp
enter
cli
add
sbb
int3
dec
sub
nop
or
mov
xchg
xor
push
call
add
jmp
aad
push
push
rcrl
add
test
mov
cmp
pop
adc
push
pop
sahf
out
pop
mov
jbe
inc
fs
ftst
add
jmp
add
ja
in
stc
repnz
add
ficoms
add
in
sbb
mov
dec
add
int
xchg
mov
addr16
xchg
cwtl
lds
mov
mov
inc
and
add
mov
pushf
lea
pusha
cmp
fs
inc
add
fldenv
jle
and
lahf
fldl
jp
sub
bound
bound
daa
ljmp
es
stos
add
add
das
add
and
mov
leave
daa
stc
pop
in
mov
loop
cmc
pushf
fildll
movsb
adc
popf
mov
inc
pushf
push
mov
outsl
add
sub
insl
xor
rcr
sbb
gs
mov
xor
in
out
jge
add
popa
push
mov
add
fcmovnbe
xchg
add
adcl
sub
dec
dec
loop
gs
mov
inc
orl
or
mov
and
mov
pop
push
ret
add
adc
adc
xchg
bswap
add
in
ret
loopne
and
add
inc
addb
aam
pop
daa
push
xchg
faddp
jp
add
add
orb
mov
mov
data16
push
lods
add
ja
add
xor
bound
add
pop
cmp
call
lret
in
jne
je
bound
pop
pop
in
cmp
cld
aad
fwait
andb
popf
insl
cs
sahf
mov
sbb
icebp
add
mov
jecxz
cmp
andb
mov
cmpsl
add
mov
xchg
fdivr
inc
es
loope
mov
adc
enter
and
daa
dec
les
dec
jmp
add
loope
add
data16
and
mov
add
dec
mov
lock
testl
mov
mov
add
out
lret
cmpsb
insl
add
inc
add
bound
aam
divb
insl
mov
cmpsl
and
fldt
fs
in
repz
sbb
pminsw
repz
mov
mov
scas
add
in
aaa
inc
test
sbb
add
sub
jne
sub
lcall
xchg
fnsave
mov
fimull
xchg
mov
and
adc
or
add
adc
stos
add
mov
loopne
lea
fsub
inc
adc
or
fadds
out
dec
or
adc
adc
fmuls
lock
adc
jns
hlt
lret
mov
and
add
dec
lea
add
movsl
dec
add
ret
dec
add
mov
add
jge
add
shrl
fucomi
sarl
repnz
pop
ss
inc
fdivr
shlb
aam
enter
inc
add
add
outsl
popf
iret
sub
push
add
cmpsb
ljmp
dec
pop
in
xchg
pop
mov
mov
push
inc
xchg
add
xchg
mov
adc
cmp
sub
aad
fildll
ljmp
add
insl
add
shll
cs
dec
mov
out
add
mov
pop
jge
adc
xor
rcll
add
xor
ljmp
add
dec
enter
cmpxchg
push
mov
jmp
imul
cmp
mov
xor
sbb
add
jge
jl
rcpps
outsb
fbstp
mov
in
and
mov
add
mov
fs
js
dec
adc
mov
mov
push
add
push
mov
push
add
loop
arpl
mov
cmp
pushw
rorb
jae
pop
or
shrb
lea
xchg
aam
loope
or
insl
cmpsb
push
add
add
fcmovb
pop
loope
jmp
movb
inc
mov
ljmp
sbb
add
jp
push
out
push
mov
inc
sti
decl
push
mov
jmp
rorb
push
pop
in
sbb
cmp
mov
add
das
pop
xor
inc
icebp
pusha
out
shll
jg
mov
mov
dec
xor
and
sub
pop
sub
pop
das
pop
push
adc
add
xchg
lock
mov
and
pop
fsub
mov
xchg
aas
xchg
pop
out
or
lret
pop
add
test
pop
testb
add
insl
add
jne
sub
add
jbe
xor
stos
clc
bound
int3
popf
es
jl
loope
add
shr
add
push
negb
fsub
imul
dec
sahf
stos
insl
repz
sbb
add
dec
scas
add
pop
jne
cmpsb
rolb
test
pop
inc
adc
les
mov
dec
add
sbb
pop
repnz
pushf
jbe
add
test
add
mov
and
add
add
and
add
add
push
add
pop
jb
pop
pop
cltd
iret
cmp
daa
pop
add
xor
scas
inc
mov
jbe
or
stos
add
cmc
loopne
lret
adc
mov
and
sub
push
cltd
xchg
add
jmp
push
sub
pop
insb
cmp
adc
shrl
pop
add
add
mov
xchg
cltd
add
pop
push
xchg
es
add
add
cmpsb
inc
fwait
add
shr
and
iret
add
xchg
xchg
mov
ljmp
xor
enter
add
pop
sub
js
adcb
xchg
add
jbe
aas
xor
xchg
aam
push
lret
adc
movsb
inc
shlb
je
push
and
push
mov
mov
xchg
inc
add
test
dec
cwtl
icebp
jo
jmp
sbb
or
sarb
or
das
xchg
mov
sub
push
rcrb
add
je
pusha
mov
icebp
xor
mov
jl
and
in
ret
lret
mov
add
scas
ja
lods
jmp
out
pop
leave
add
repz
jge
add
add
mov
rcll
stos
push
addl
pusha
in
int3
lahf
lcall
subb
or
addr16
mov
pop
mov
pop
inc
out
pop
add
add
add
shl
lcall
fldt
mov
jl
push
jg
mov
insb
add
add
leave
insb
test
xchg
cmp
ds
push
adc
cld
add
inc
add
pop
test
movlps
add
jae
and
imul
mov
xchg
or
loope,pn
test
mov
ret
pop
cltd
hlt
push
mov
add
jecxz
add
test
cmpsb
add
lods
and
add
xor
jae
push
cmp
add
push
xchg
jecxz
jnp
popa
pop
aas
out
jecxz
or
mov
mov
pop
mov
mov
paddd
in
ret
inc
fsubl
adcl
add
add
inc
xchg
sbb
cli
icebp
test
adc
jns
jecxz
sub
dec
cmp
xchg
fwait
add
dec
shrb
mov
pop
aad
movl
dec
mov
dec
pop
je
sbb
push
cltd
mov
mov
ljmp
jg
xlat
pushf
add
jl
mov
ret
xchg
cs
ret
loop
cld
xor
add
add
bound
scas
mov
dec
scas
adcb
add
mov
dec
pop
ja
add
clc
sbb
add
push
mov
bound
pop
or
jg
hlt
pop
xor
in
lock
cmp
push
sub
push
jne
jne
add
mov
push
push
movsb
imul
sub
scas
test
adc
imul
jne
lds
movsb
incl
adc
add
push
inc
sub
jmp
test
mov
sub
shr
leave
les
adc
mov
pop
in
enter
adc
rolb
pop
mov
stc
jb
andb
add
cmp
aas
jb
repnz
push
add
push
repnz
sarb
pop
rolb
ljmp
in
mul
xor
adc
inc
mov
jecxz
push
add
adc
jg
mov
pop
cli
add
dec
xor
inc
jg
test
imul
xchg
add
xchg
xchg
and
std
mov
sbbl
add
add
or
pop
add
jmp
xorl
out
push
cmp
add
cmc
or
negl
imul
ret
sahf
jne
jno
push
mov
pop
dec
imul
cltd
enter
push
jbe
mov
lcall
in
insl
xchg
dec
pop
dec
and
pusha
pusha
es
bound
sbb
lea
mov
add
add
sub
cmp
fnstsw
int
aaa
addr16
add
popaw
addr16
add
add
mov
jge
adc
insl
popa
xor
pop
sub
fcomps
add
add
jb
loop
push
fwait
cli
xchg
add
add
add
nop
or
jne
push
into
xor
cmp
adc
sub
sbb
addr16
cmp
jle
lahf
xor
lock
sti
ljmp
mov
jo
and
testw
test
jne
cmp
push
cmp
test
inc
sbbb
fdivs
pop
ds
add
mov
stc
dec
sahf
lea
test
dec
xchg
cld
jo
push
add
add
mov
idivb
aas
pop
test
mov
nop
sub
jl
sub
mov
xlat
addr16
rcl
inc
sbb
add
add
ljmp
loop
mov
mov
stos
and
lahf
xor
adc
add
xor
shl
xchg
lods
imul
nop
lret
pop
push
movsl
jl
fisttps
mov
mov
out
jbe
add
fldenv
add
int
add
pop
adc
cmp
lds
xchg
sbb
ficoms
xchg
fs
bound
leave
mov
sti
add
jl
testl
aaa
inc
xchg
mov
out
in
out
js
push
add
lret
jmp
rcrl
aas
add
sbb
add
scas
int
out
lea
mov
fstpl
add
and
jae
or
pop
mov
scas
sbb
add
add
sub
push
xor
push
je
aaa
dec
jb
add
es
sbb
add
cmp
rcll
js
lea
loope
add
loopne
test
pop
adcb
stos
and
push
pop
shlb
stos
lret
sub
jbe
sub
movsb
aaa
mov
andb
mov
lahf
insl
roll
mov
push
add
jle
push
mov
add
sbb
es
mov
in
repz
movsb
push
inc
aas
cmc
inc
xor
out
add
jbe
dec
inc
inc
mov
data16
lea
sub
jo
sub
cmp
add
add
jmp
mov
gs
lcall
daa
add
add
jle
jl
mov
outsl
push
das
add
jb
jmp
add
sub
test
cmp
push
mov
lds
add
pop
add
jge
stc
sbb
fwait
push
test
sub
add
out
add
xor
pop
jl
dec
shrl
xchg
cmp
arpl
ret
push
dec
push
add
loope,pn
jne
popl
add
aas
or
fldl
jle
add
and
aam
pop
xchg
jae
pop
rolb
push
push
and
push
aad
push
push
adcl
add
push
mov
jmp
mov
cmp
cld
adc
cmp
arpl
aas
bound
movl
xor
jb
out
mov
jmp
xlat
lds
and
nop
cmp
sub
cld
rcll
add
jl
sub
faddl
sti
cmp
add
cmpsl
add
add
push
int3
mov
or
in
jecxz
daa
lds
add
movsb
dec
mov
xchg
xchg
ret
mov
pop
dec
mov
aaa
imul
add
pusha
addr16
nop
iret
fldl
add
divb
push
enter
repnz
js
pop
ltr
movsb
das
fisttpl
add
std
roll
and
je
sbb
aas
mov
insb
add
test
push
bound
aam
adc
add
inc
popf
pop
sub
add
jl
jmp
je
popa
lea
ficompl
add
dec
add
hlt
push
push
iret
adc
push
sbb
pop
add
add
sub
arpl
mov
push
cmpsb
mov
cmp
bound
sahf
int
adc
add
xor
insb
repnz
push
dec
dec
pop
push
mov
lods
ja
add
and
adc
out
cs
jnp
adc
cmpsb
inc
sub
add
test
aam
and
sub
ljmp
out
add
pushl
std
mov
nop
add
add
sbb
add
push
out
pop
mov
cmp
add
addr16
mov
xchg
mov
hlt
mov
inc
das
add
filds
aad
sbb
xchg
stos
jmp
pop
iret
nop
or
xchg
pop
imul
lret
push
jbe
push
xchg
xor
jmp
jo
and
jne
test
or
xchg
push
add
loopne
hlt
add
ljmp
pusha
faddp
jne
arpl
jl
push
add
add
pop
sub
lret
les
dec
cltd
lahf
add
or
fiaddl
loope
inc
cmp
push
mov
jne
push
add
sbb
jae
jns
push
push
push
sbb
xor
xchg
fldenv
mov
jae
insl
lret
cmpl
sti
lea
pop
push
mov
xchg
add
xlat
jmp
aas
add
test
push
push
and
mov
orb
mov
and
pop
mov
and
jl
arpl
mov
xor
jp
pop
lret
enter
pop
or
jle
mov
lahf
lock
add
test
mov
ret
xchg
aas
imul
out
lahf
filds
dec
mov
add
mov
mov
fcoms
add
gs
lret
push
cmpsb
jmp
inc
les
fs
pop
loope
push
dec
cmp
add
pop
into
adc
inc
clc
sahf
sub
jp
add
fwait
and
aam
mov
push
rcrl
fs
mov
mov
movsb
cltd
add
inc
mov
out
and
hlt
and
mov
les
dec
test
ja
test
lods
insl
add
imul
xchg
sbb
and
js
call
add
jp
mov
jno
sub
jns
mov
xor
add
sub
inc
add
mov
popl
xor
adc
mov
aam
lock
ja
scas
inc
adc
mov
add
shll
clc
lods
push
cmc
mov
sub
xor
out
add
dec
int
cmp
or
xor
sbb
fs
add
in
sub
pop
adcl
iret
enter
fnclex
out
pop
test
pusha
testb
mulb
and
inc
cmpsb
push
xchg
or
insb
push
in
fcoms
lahf
add
xorl
xchg
xchg
flds
mov
mov
ret
pusha
or
cmpsl
inc
xor
mov
test
sub
cmc
clc
pop
add
push
mov
jnp
pop
add
fidivs
dec
lret
into
hlt
sub
jo
mov
adc
dec
or
dec
fistps
push
setbe
cmp
cltd
jb
and
sbb
pop
jno
addl
add
jne
cmc
stos
popa
add
cmp
pop
bound
outsb
aad
add
aas
add
add
xchg
add
add
lock
xchg
adc
add
fs
push
insb
stos
mov
push
lods
add
stos
into
scas
pop
mov
rep
ja
sbb
add
add
sub
jg
jnp
lret
inc
ss
add
mov
nop
pop
add
inc
test
xchg
ret
psubusb
dec
push
stos
adc
stc
inc
into
lret
movsb
adc
ret
add
xchg
fisttpl
add
fs
add
int3
xchg
and
sahf
imul
mov
or
cli
jle
jnp
bound
lds
adc
rolb
jne
pop
jbe
and
pop
add
add
stos
mov
nop
pop
std
mov
xrelease
xor
mov
stos
sub
sub
push
roll
or
xchg
mov
xor
add
int3
lret
xor
mov
add
lcall
jecxz
leave
lcall
fwait
loopne
cld
jne
mov
jns
iret
ss
jae
int
lea
incb
or
in
sahf
inc
or
sbb
int3
pop
or
and
or
js
xchg
popf
mov
sub
or
dec
stos
scas
or
ret
test
jne
jne
push
xchg
jmp
xorl
add
xor
outsl
sub
addr16
int3
sub
jp
cmpsb
xor
jno
loop
xor
add
cmpsb
aas
icebp
hlt
in
fistps
jg
mov
mov
loopne
dec
daa
mov
add
shl
pop
popf
sub
rolb
add
outsb
add
divl
out
cs
fldenv
mov
sub
adc
pop
mov
lods
or
lock
aad
push
inc
pusha
pop
pop
and
pushf
pop
sub
cltd
lods
ret
jns
add
push
rorl
or
dec
daa
add
lahf
jp
sub
test
pop
cld
mov
pushf
xor
add
lds
pop
mov
dec
pop
inc
add
adcl
xchg
int3
clc
aam
sub
in
add
mov
stos
inc
lods
add
add
or
sbb
insl
mov
inc
adc
out
cmp
faddp
bound
xchg
inc
ss
xchg
adc
test
add
inc
inc
mov
add
inc
inc
loop
sub
xlat
add
dec
mov
leave
cs
roll
loopne
push
sub
orb
stos
enter
push
iret
add
cmp
fildl
jno
les
xor
xor
popf
sbbl
cmpsb
aas
ret
out
testl
rorb
xor
jl
mov
sub
or
into
out
jae
test
add
jno
push
add
mov
mov
mov
cmpsb
fwait
mov
and
add
add
adc
dec
sbb
sti
inc
add
adc
jl
cwtl
mov
ds
xchg
rcrl
push
adc
leave
test
imul
idivb
xor
push
push
add
jl
mov
mov
push
mov
add
in
or
add
test
fbstp
sti
mov
sar
push
sbb
out
fldl
adc
mov
add
push
mov
push
xor
inc
add
das
xchg
or
loope
jge
add
xor
int
icebp
push
js
jge
ret
js
sub
test
in
sub
pop
add
cmpsb
lahf
outsb
add
lret
cmp
add
pop
add
inc
mov
loop
ds
imul
and
test
sbb
addl
bound
lret
add
daa
cmp
inc
xchg
stos
mov
add
jnp
pusha
jmp
and
leave
dec
mull
cmp
jno
pop
inc
lret
lock
push
jae
mov
lcall
add
push
add
fcomip
aam
push
dec
sub
scas
call
add
xchg
push
jb
cmp
jb
mov
test
popl
stos
sarb
cmp
xor
or
jle
adc
out
dec
test
jne
dec
push
sbb
push
repnz
and
mov
std
add
add
call
mov
enter
aaa
jnp
sbb
fnstcw
testb
add
ds
pusha
je
dec
icebp
lret
stos
lds
mov
or
lock
lea
int
sub
push
xchg
mov
lcall
ss
jl
mov
pop
add
mulb
test
xchg
add
mov
jge
cmp
leave
in
dec
add
mov
cmpsl
xor
call
xchg
fldcw
xlat
push
add
shll
xor
hlt
pushf
and
xor
data16
xor
stos
push
add
mov
dec
sahf
jp
popf
mov
adc
dec
imul
call
rorl
cmc
fwait
ljmp
scas
add
out
sbb
mov
push
push
sub
xor
push
jno
add
movsb
dec
add
movsb
xchg
cltd
std
rclb
add
loope
dec
popa
mov
adc
add
out
pop
lcall
dec
fdivp
xor
lock
aad
inc
or
fwait
mov
jle
adc
sbb
fimull
push
jge
aas
add
movsb
fsubs
add
imul
imul
fcomp
xchg
and
fs
or
fbstp
shl
insl
insb
cwtl
push
add
lods
pop
adc
jno
popf
inc
dec
add
jmp
add
scas
dec
xor
scas
mov
addl
add
iret
les
mov
mov
pop
jp
incl
inc
sub
loope
dec
cwtl
mov
pop
or
jl
in
push
int3
nop
mov
add
add
add
add
repnz
lret
add
jle
push
xchg
add
or
testl
in
dec
xor
cltd
mov
dec
xchg
add
in
je
scas
imul
add
inc
sub
sub
repnz
in
daa
fld
sub
pop
sbb
fiaddl
jg
cmpl
adc
cmpl
add
outsl
pop
adc
outsl
cmp
pop
lea
cmp
inc
pop
in
pop
add
mov
mov
fnstcw
add
mov
in
jns
loope
inc
inc
cmp
xchg
add
mov
push
xchg
rorb
mov
inc
loope
mov
outsb
inc
add
and
dec
sbbb
and
das
nop
cli
xchg
fimull
push
add
xchg
pop
add
pop
push
pop
mov
add
or
loope
jae
lods
and
mov
pusha
push
sbb
repz
cmova
mov
fiadds
jle
xor
js
ret
daa
out
add
sahf
add
mov
cmpsb
fldenv
imulb
or
add
insl
dec
add
mov
addb
mov
push
insb
nop
lahf
das
push
out
add
add
adc
stos
mov
add
push
loope
pop
add
pop
jno
add
mov
sbb
aad
mov
fs
add
bound
fsubrp
outsb
out
add
les
fisttps
dec
xchg
mov
dec
dec
cmpsl
cmp
mov
add
and
fs
sub
add
adc
pop
daa
les
mov
call
mov
imul
das
add
xchg
pop
loope
push
pop
je
outsl
je
imul
sub
je
ficompl
jmp
and
add
rolb
test
lret
push
stc
cli
pop
call
loope
jb
and
call
add
sbb
mov
push
add
pop
mov
popl
loope
loop
popa
or
add
outsl
dec
sub
xor
sub
dec
add
jge
xor
pop
jbe
movsl
roll
jns
adc
loopne
jl
add
add
xor
add
mov
test
jle
or
popa
add
sti
mov
pop
data16
ss
add
mov
test
add
mov
clc
out
mov
lock
clc
add
pop
adc
aam
push
sbb
push
cmc
test
and
jne
mov
jle
sahf
loope
xorb
lea
test
lock
xchg
call
xor
enter
js
ret
add
xchg
sbb
lcall
and
enter
sub
xchg
xorb
or
dec
lret
add
mov
pop
sbb
mov
test
ss
adc
cltd
loope
gs
mov
test
push
push
add
and
hlt
mov
pop
cmpsb
sub
cmp
add
loope
sub
repnz
mov
add
call
inc
loopne
out
fdivl
aam
inc
out
push
call
jo
out
inc
add
out
mov
aas
add
lret
pop
push
sbb
popa
scas
fwait
mov
add
jne
cmpsl
add
push
int3
imul
test
add
cs
fildl
push
jge
frstor
add
add
fwait
add
mov
fldt
mov
inc
out
into
add
arpl
or
notl
call
fiadds
and
add
jp
and
xchg
push
arpl
repnz
push
addr16
sarl
pop
mov
std
or
int
ljmp
decb
xchg
add
sub
mov
divl
sbb
inc
add
out
mov
imul
out
dec
cld
dec
add
imul
xor
sar
mov
add
sub
inc
xor
lret
rcrl
cltd
lock
xchg
clc
mov
test
int3
daa
cmp
xor
ja
cmovb
cmp
repnz
pop
clc
mov
loope
mov
push
cli
xchg
add
and
aam
add
lods
push
mov
sti
rcrl
add
cmc
loope
and
mov
daa
jns
mov
push
cs
xor
test
add
add
mov
fadds
fsubrp
xchg
add
dec
aad
lds
or
cmc
loop,pn
insl
or
add
test
jne
pop
cmc
test
push
or
int3
push
push
out
sti
aad
popa
sub
jne
lcall
sub
push
into
sbb
push
push
dec
loop
sti
mov
xor
cmpsl
data16
dec
add
loope
xlat
pusha
inc
pop
insl
add
aaa
adc
fldpi
xor
push
pop
jp
mov
in
or
scas
mov
adc
mov
xlat
xor
add
add
mov
test
jg
add
mov
add
add
add
ss
cmpsb
mov
mov
cmpsl
pop
add
int3
add
bound
add
sahf
push
or
xchg
lea
test
pop
test
inc
sub
or
jp
or
jle
lods
jo
repnz
in
mov
add
sbb
adc
sbb
pop
out
lahf
int
and
shl
repnz
xchg
add
jge
ret
jl
xchg
dec
mov
pop
bound
test
cmp
rolb
add
cmpsl
popa
out
add
mov
popa
cmpsl
xchg
push
imul
push
fwait
mov
adc
push
xlat
les
pop
out
add
dec
sub
add
xchg
cmpsl
xor
xchg
shrb
inc
gs
mov
cli
stos
push
cmp
push
inc
mov
pop
add
sbb
pop
cwtl
push
add
gs
add
add
jo
mov
adc
out
in
addb
xchg
add
cli
cmp
sbb
shlb
cwtl
jmp
push
jns
jnp
sub
add
pop
scas
int
jbe
mov
es
out
leave
inc
xchg
dec
jg
xor
test
mov
aaa
insl
mov
add
stos
imul
aaa
sar
or
add
sbbl
push
jl
pop
rorb
xchg
add
in
cmp
push
add
fisttpl
add
pop
dec
adc
clc
out
inc
shr
and
or
push
lahf
movsl
and
mov
cmp
and
cmpsl
mov
sub
add
mov
inc
pop
or
sti
or
xchg
or
stos
add
xchg
sub
mov
sub
push
setb
sahf
xchg
mov
mull
inc
jne
adcl
push
cmp
add
cmp
push
in
add
dec
push
add
fsts
pop
or
fxtract
out
in
cs
outsb
std
cmpsb
test
xor
and
cmc
and
test
mov
xchg
xor
inc
outsb
sbb
int
mov
out
cld
clc
add
lods
in
add
or
clc
adc
dec
verr
push
sub
lcall
push
mov
xchg
movsb
add
adc
mov
add
jmp
daa
inc
add
pop
pusha
xchg
adc
inc
or
add
pop
push
mov
popl
adc
mov
std
shlb
add
xor
add
add
call
arpl
jmp
xchg
mov
sub
push
js
shlb
data16
xchg
lea
or
xor
addl
adc
mov
enter
fsubs
and
xchg
and
push
test
cmp
sub
shrl
pop
pop
lock
sbbb
mov
fstpt
push
mov
out
add
insb
outsb
push
int
mov
in
stc
arpl
arpl
or
movsl
adcl
inc
fstp
add
mov
push
lea
jb
lock
or
mull
ljmp
pop
add
or
js
fs
pop
out
pusha
or
xchg
pop
xchg
clc
sub
dec
add
mov
dec
adc
add
jl
jnp
push
pop
cwtl
outsb
sbb
ss
lea
lods
jp
imul
repz
in
cmp
jbe
jnp
mov
mov
aam
xchg
pop
ret
push
iret
or
jb
mov
loope
fs
inc
xor
dec
fstps
test
push
loopne
fadds
or
jnp
addb
stos
add
inc
xchg
ffreep
int3
cmpsb
add
inc
add
pop
mov
sbb
mov
lods
out
jo
les
pop
ficomps
leave
aam
or
mov
add
arpl
movsb
test
fiadds
js
sub
mov
push
out
inc
call
cmp
in
bnd
in
cmp
enter
xchg
stos
inc
add
mov
adc
repnz
mov
in
out
add
mov
mov
shll
outsb
mov
pop
pop
cmp
inc
mov
ret
pop
add
add
cwtl
lahf
test
xchg
xchg
cmp
xchg
arpl
sbb
push
add
add
xor
popf
mov
test
xor
out
mov
xchg
rorl
data16
aad
ret
add
add
sub
enter
cmp
and
add
xchg
pop
push
test
push
push
xchg
add
lods
enter
jge
dec
cmp
loop
pop
jle
sub
negb
jnp
xor
or
xchg
incl
mov
add
push
addr16
leave
in
shll
adc
fimuls
mov
add
jg
mov
add
mov
jp
jbe
pop
lea
push
loopne
rcrb
lock
aad
inc
xlat
add
dec
add
dec
cs
push
iret
xchg
xor
add
mov
pop
xor
lcall
add
add
jb
mov
subb
mov
enter
add
cmpl
fisubrs
pop
stc
jge
cmp
scas
mov
xchg
jo
pop
rcrb
pop
xor
xor
add
push
aaa
cmp
push
mov
scas
test
ret
mov
adc
cmpsl
insb
add
cmp
add
xchg
mov
into
sbb
mov
cmp
adc
icebp
push
adc
push
fildll
gs
jnp
stos
sub
sbb
int3
jmp
cltd
add
incl
push
add
inc
add
pop
cmp
sub
add
lods
jp
add
mov
nop
adc
jge
add
shr
popa
push
push
mov
lcall
inc
clc
js
imul
popl
movsl
add
push
xor
add
rcrl
mov
les
push
stos
xor
call
mov
movsl
xor
fiaddl
ss
popf
add
lea
cmp
xor
mov
out
xchg
add
and
mov
add
jl
enter
je
cli
movsb
xchg
loope
shlb
pop
pop
add
dec
fucomp
pushf
xor
cmp
pushf
pop
imul
or
pop
mov
xchg
or
jno
xchg
aas
outsl
das
cwtl
icebp
sbb
cmc
ja
addl
dec
add
movsl
jae
jmp
dec
or
add
mov
xorl
insb
add
xchg
xor
pop
mov
mov
push
mov
add
and
xlat
and
out
rcll
lahf
notb
in
aad
add
inc
sti
in
push
cmp
pop
mov
cmp
push
stos
or
jb
xor
cwtl
mov
cmp
jl
add
les
cltd
add
sub
jmp
mov
mov
sub
dec
sub
stos
sbb
inc
add
das
jae
dec
or
test
sbb
outsl
add
xor
or
add
add
pop
test
ret
add
xchg
dec
xchg
loopne
jb
add
out
ss
xlat
sbb
mov
popf
test
test
loopne
mov
add
and
dec
xchg
lods
or
fildl
inc
xchg
arpl
add
pop
push
mov
movsb
dec
mov
dec
js
mov
inc
pop
and
cmp
sub
inc
pop
in
xchg
mov
icebp
mov
mov
xchg
cmc
and
aas
out
sti
push
inc
mov
cwtl
or
add
ret
daa
int
push
lret
push
loopne
push
cmpsb
shl
add
xor
cs
movsl
sub
adc
sbb
jg
xchg
into
orb
sub
and
add
add
ret
sub
xchg
popa
xor
popa
outsb
cli
adc
add
mov
ja
push
or
int3
mov
in
jmp
sbb
cmp
mov
adc
icebp
mov
pop
mov
and
lods
jae
in
sti
pop
push
dec
pop
inc
pop
add
lock
insl
push
adc
hlt
push
in
in
popf
xchg
ja
ss
xor
in
and
cmpsb
add
and
jp
jbe
stos
jmp
adc
xchg
or
dec
lods
clc
arpl
call
cmp
add
dec
mov
push
mov
xor
push
push
aam
inc
jne
adc
jmp
xor
and
scas
mov
inc
adc
aad
iret
les
sub
add
dec
add
add
xor
lock
or
mov
jnp
add
xlat
add
add
or
lcall
add
jecxz
lds
mov
sbb
add
ds
pop
addr16
adc
cli
scas
hlt
add
insb
inc
jmp
push
fcomps
xchg
add
subl
or
sahf
mov
sub
mov
sub
jmp
sbb
stos
loope
mov
sbb
addr16
push
dec
aaa
add
xchg
cmc
pop
mov
loop
fisttpl
cld
fsubrs
mov
dec
bound
add
loopne
sub
out
leave
rcrl
mov
movl
push
js
add
push
cltd
hlt
mov
cwtl
mov
shll
mov
lcall
mov
mov
push
xor
cmp
sbb
mov
sub
popa
bound
sti
xorl
add
fstps
mov
sbb
ret
mov
adc
push
lods
jp
xor
cmp
mov
mov
sub
cmp
sbb
sti
add
hlt
stos
and
dec
adc
aam
xor
add
ds
je
test
bound
mov
aam
add
mov
xor
xor
outsl
cltd
leave
in
add
add
xor
fs
add
int3
xchg
add
sbb
pop
leave
add
test
sbb
jmp
and
sbb
out
lret
push
cmp
pop
add
test
pop
scas
pop
mov
sbb
or
data16
jmp
cmpsl
shr
aaa
cmp
mov
rolb
jne
cwtl
imul
out
jne
add
popa
cmc
add
inc
leave
jns
ret
pop
aad
gs
mov
push
mov
mov
jb
bound
mov
jecxz
bnd
lds
jns
jb
xor
add
clc
loope
test
aas
xchg
add
push
add
add
or
sub
fwait
nop
and
add
xor
popf
data16
aaa
cs
scas
jg
pop
mov
add
sub
dec
bound
cmp
movsl
push
outsl
pop
xlat
insl
mov
int3
and
lret
dec
popa
imul
inc
stos
in
lahf
sub
pop
jne
popl
aad
push
mov
push
add
out
movsb
jns
sub
xchg
inc
cmp
dec
add
mov
out
mov
dec
aaa
pop
pop
je
nop
sub
scas
idivb
add
loope
xor
imul
add
add
mov
aas
push
add
push
add
push
push
pusha
cmpsl
fucom
and
add
lcall
roll
and
and
in
add
in
mov
mov
test
sub
add
je
xor
add
ds
fcmovnbe
jo
loope
push
add
add
add
in
add
fimull
add
mov
push
mov
in
push
xor
sbb
mov
mov
adc
dec
jp
add
sahf
ljmp
test
mov
in
add
jp
mov
aaa
push
dec
test
sahf
cmc
repz
xor
cmp
ds
and
data16
in
inc
sbb
push
adc
inc
push
adc
ret
push
int3
xchg
inc
in
scas
enter
hlt
add
cmpsl
ret
xlat
fs
cli
cs
mov
jnp
enter
push
fiaddl
shr
cmp
push
jne
add
xchg
adc
ljmp
add
and
popf
add
cld
lds
and
add
cmp
mov
aad
jae
incb
shl
and
adc
or
xchg
pop
cld
sti
xor
testl
adc
mov
add
jmp
pop
mov
jno
sbb
fs
addb
pop
push
fidivl
scas
sbb
add
stos
add
sub
or
mov
mov
cmp
std
sbb
xchg
push
mov
out
mov
das
add
add
mov
stos
popa
cmc
adc
pushf
push
dec
inc
testb
repnz
mov
inc
jne
jle
and
icebp
or
scas
rcr
add
lcall
push
sbb
lahf
leave
mov
push
ja
jne
inc
sbb
add
add
dec
imul
inc
and
cmc
ret
cmp
decl
mov
fdivrs
add
xchg
jl
leave
fildll
jns
xor
jp
add
push
jns
xchg
dec
dec
leave
xor
cmp
xor
and
pop
popf
aam
or
push
fstl
ja
jo
mov
jl
mov
adc
iret
je
aad
add
pop
sub
add
xor
and
roll
jnp
add
pop
imul
lea
inc
push
add
mov
adc
test
pminsw
lahf
add
add
mov
aad
arpl
cmp
xchg
bound
outsb
inc
mov
xor
popf
push
cmp
repz
int
add
lcall
xor
add
add
divl
jp
xor
xor
js
adc
mov
mov
and
add
add
data16
outsl
out
adc
inc
sbb
or
xlat
sbb
test
mov
inc
sub
stos
hlt
cwtl
cmp
dec
sub
and
out
outsl
xchg
scas
lret
aam
aas
test
repnz
mov
stos
loope
fidivrs
xchg
mov
dec
roll
stos
aaa
add
inc
test
push
cmp
add
push
lods
jge
xlat
loop
imul
outsl
pusha
add
add
out
ret
push
add
add
adc
xlat
out
pop
push
sub
cmpsb
sbb
add
jmp
imul
dec
in
add
add
divb
add
rclb
sub
add
add
frstor
inc
js
add
lret
pop
lret
ds
leave
xor
cmp
or
pop
fcompl
cmpsb
jbe
add
push
in
scas
bound
xchg
ret
roll
into
add
popa
mov
dec
add
inc
fsubl
add
add
xor
iret
add
faddl
aad
add
mov
filds
popa
int
cwtl
jae
ljmp
push
inc
sub
xor
dec
lods
xor
incl
roll
push
add
mov
push
xor
xchg
mov
dec
add
xchg
fldenv
mov
xlat
push
call
in
lock
imul
xor
add
add
jne
test
in
sbb
daa
sub
push
add
push
sbb
enter
add
xchg
movl
xchg
mov
cmp
stc
mov
dec
fildl
filds
mov
and
popf
jnp
jo
pop
aam
enter
xor
add
outsl
lret
out
push
pop
int
mov
mov
fistpl
mov
js
sub
popl
pop
or
add
imul
sbb
ds
inc
mov
je
cmp
lcall
sub
inc
push
xchg
xchg
jb
lock
jl
add
and
dec
into
add
dec
ss
lea
mov
or
setnp
add
sbb
or
pop
data16
data16
adc
or
lcall
or
mov
and
mov
inc
adc
in
shrb
je
andl
add
add
sub
sbb
addl
repz
fildl
sti
add
pop
movb
adc
or
or
daa
jg
fstpl
setns
push
stc
jo
dec
inc
dec
push
add
xor
mov
je
sbb
loop
mov
mov
xchg
mov
ss
add
movsb
jne
sub
lret
xchg
cli
add
add
xchg
xor
shlb
les
xlat
xor
loop
push
jbe
stos
add
insb
gs
pop
xor
lret
out
inc
mov
aaa
jnp
add
push
cmp
ds
dec
into
xchg
xor
sub
xlat
pusha
bound
pusha
out
pop
sub
pop
enter
rcrl
gs
xchg
fisttpl
ja
sbb
add
xchg
add
jbe
loope
add
inc
push
inc
sub
add
add
outsl
sbb
add
pop
mov
outsb
add
test
hlt
add
add
add
jae
fbstp
mov
mov
cltd
xchg
add
push
add
adc
outsl
cli
stos
add
push
adc
mov
scas
test
jnp
dec
sbb
into
sub
add
test
daa
and
add
and
or
mov
sbb
lahf
inc
fnsave
outsl
movsl
divb
xchg
adc
sbb
cltd
mov
daa
pop
pop
sar
cmp
jg
sbb
data16
add
mov
pop
xchg
lea
dec
mov
rorl
cltd
add
inc
popf
add
add
iret
add
daa
popa
push
xchg
test
in
cld
ret
xor
add
or
shl
icebp
das
and
mov
add
adc
jp
mov
loope
push
mov
add
add
cmc
xchg
jg
ja
out
cmp
popa
repz
add
add
xor
sub
int3
ja
add
dec
add
xchg
pop
and
sub
mov
add
outsb
cmp
sub
out
mov
dec
push
inc
cmp
add
xchg
inc
mov
jbe
inc
test
les
ds
ret
xchg
imulb
test
mov
add
ret
faddl
push
cmpsl
lea
push
nop
out
dec
sub
add
nop
pop
xor
push
add
add
scas
fcoms
push
or
test
xor
xor
mov
rcrb
aaa
jns
cld
in
testl
xor
xor
outsb
xor
daa
add
shrl
and
hlt
xor
jge
out
lret
clc
cmp
or
push
add
or
lods
loopne
adc
mov
sahf
pop
push
mulb
ret
pop
mov
pop
or
add
mov
sbb
adc
sbb
xor
sti
add
push
jb
jmp
inc
movsb
xlat
cmp
daa
fwait
test
inc
repnz
push
insb
ss
xlat
stos
bnd
jmp
out
scas
push
negl
jg
xchg
call
aam
sub
mov
add
aam
outsb
jnp
incb
add
repnz
fwait
arpl
sub
sub
filds
loop
jmp
push
add
inc
xchg
es
addr16
push
stc
enter
add
jmp
inc
mov
mov
xchg
sbb
pop
imull
fdivrs
jp
cmpsb
add
rcl
ficoms
add
in
add
into
dec
adc
lahf
add
and
lahf
cmpsl
add
pop
popl
in
jl
add
mov
and
pop
cltd
cli
add
lds
add
jne
es
sub
jl
add
pop
mov
filds
std
lret
pop
test
add
cmp
sub
fcompl
aas
pop
pop
cmp
fmull
xor
cwtl
into
fwait
cmp
mov
cmp
dec
push
mov
adc
data16
cli
pop
sti
add
jp
insl
stos
and
stc
int
add
daa
lcall
add
jae
cmp
sub
test
add
pushf
mov
push
mov
mov
add
adc
clc
jge
add
jp
lea
jbe
push
add
mov
ss
hlt
lods
xchg
jecxz
cmp
mov
in
sub
sub
leave
cmp
sub
daa
xchg
add
jp
dec
test
es
sbb
inc
sahf
and
jno
mov
adc
addr16
mov
add
jge
clc
shrl
and
gs
shlb
and
cld
pop
rcrb
add
pop
add
cmp
sub
test
xchg
cmpsl
sbb
jns
gs
pop
movsb
incb
insl
aaa
add
outsl
lahf
add
pop
inc
cmc
and
fldt
clc
aaa
aaa
jecxz
cmp
mov
cmp
dec
sub
add
movsb
outsl
jp
sti
scas
test
xchg
mov
movsl
sbb
out
mov
outsb
add
test
aas
lods
and
inc
xor
jno
mov
mov
mov
mov
sti
sahf
add
test
jae
in
add
enter
stc
outsb
sbb
jp
aam
jbe
divb
test
inc
inc
lcall
mov
add
add
out
or
test
loop
dec
rolb
out
add
add
cmpsb
paddd
jno
mov
std
xlat
push
popa
stos
xchg
insl
fisttps
mov
inc
stos
push
dec
add
sahf
jge
mov
inc
push
in
cmp
add
adc
mov
adc
or
pop
arpl
add
add
or
mov
push
push
mov
xchg
rolb
dec
xchg
xor
and
filds
and
lcall
mov
add
mov
ss
in
inc
lahf
leave
adc
in
rolb
add
xor
push
clc
jecxz
inc
add
mov
iret
lds
inc
loop
add
inc
or
daa
dec
popf
add
adc
or
push
addb
sahf
and
xchg
mov
cmp
ljmp
mov
test
flds
das
xchg
mov
jp
out
pop
mov
xchg
push
stc
in
xchg
add
add
mov
dec
fistl
or
inc
lods
jno
jns
nop
jle
inc
gs
jo
fs
add
scas
and
movsl
cmp
test
jecxz
add
add
and
xorl
shrb
ss
sbb
dec
lret
add
pushf
add
sub
jo,pt
cs
jle
enter
xor
jg
push
movsl
adc
pop
in
stos
push
adc
lock
jecxz
test
loopne
mov
call
add
in
mov
repnz
xchg
dec
fldcw
add
gs
xor
push
mov
inc
sub
and
add
mov
mov
in
or
rcrb
cltd
xlat
inc
adc
adc
add
mov
push
add
add
add
cmpb
shlb
lds
add
add
std
ja
repnz
inc
lock
mov
ljmp
add
sub
js
adc
sar
add
add
dec
ss
fisttpl
lahf
and
add
mov
jne
xor
xor
mov
sub
inc
arpl
aas
or
mov
fisttpl
or
in
dec
loopne
outsb
or
lods
ss
adc
dec
add
sti
sbb
and
add
add
mov
stc
arpl
pop
mov
xlat
das
and
lods
xchg
add
icebp
mov
jae
int3
add
and
push
arpl
rorb
xor
mov
aad
rclb
lahf
add
inc
pop
mov
test
xor
sub
jecxz
lea
dec
dec
in
xlat
int3
add
or
mov
add
imul
sub
sbb
adc
adc
inc
cmp
xlat
sub
inc
add
insl
add
das
lret
into
jp
nop
and
rorb
mov
ret
jg
mov
push
add
xor
lea
cltd
cmpsl
jne
add
lods
pop
inc
push
mov
std
xchg
add
nopl
cmc
mov
cld
ret
mov
sub
mov
sti
add
stos
aad
arpl
add
add
add
imul
daa
add
add
std
fimuls
inc
pop
mov
pop
clc
call
add
cmc
adc
push
clts
and
add
xor
cld
add
scas
outsb
push
lcall
cmc
cmpsb
dec
add
sub
addb
mov
xchg
loopne
xchg
add
xchg
xor
fnstsw
adc
inc
jmp
xchg
add
movsl
push
add
sbb
jge
push
adc
std
jp
mov
mov
pop
mov
mov
xor
cmp
insb
out
js
les
cmp
add
aas
js
cwtl
cli
cmpb
lea
and
dec
sarl
pop
add
xchg
add
fadds
xor
adc
add
add
stos
add
std
dec
stos
pop
add
or
and
sar
movsb
push
add
les
dec
lret
test
or
subl
jb
xchg
push
shrl
sbb
xchg
daa
cmp
jnp
stos
add
add
cmc
sbb
imul
jnp
sub
pusha
add
mov
in
fadds
loope
add
les
roll
mov
sub
arpl
mov
or
ljmp
rorb
outsb
hlt
cmp
adc
add
out
jae
dec
add
popf
push
cld
shrl
add
inc
mov
leave
xor
inc
add
scas
sub
jmp
add
pop
and
inc
xchg
xchg
rcrl
cwtl
ljmp
pop
dec
inc
inc
push
dec
lea
pop
scas
and
pop
push
ret
jmp
das
or
pop
adc
cmp
imul
push
xchg
ret
mov
gs
push
sub
shrl
mov
add
loope
add
add
dec
xchg
sbb
mov
movb
xchg
stos
mov
fdivl
mov
loopne
popa
out
hlt
and
dec
std
scas
jne
rol
mov
add
aam
call
jmp
idiv
xchg
and
xor
xchg
cld
or
les
xchg
stos
pop
mov
insb
rolb
leave
mov
jmp
addr16
pop
fidivrs
inc
add
add
xor
add
dec
outsl
jmp
outsl
in
adc
add
cmc
cmp
add
es
pop
push
call
iret
mov
subb
in
iret
mov
std
add
insb
sbb
incl
add
mov
lods
in
data16
sbb
or
add
loope
jnp
xor
add
add
imul
xor
sbb
lods
inc
add
popa
push
add
and
push
adc
loopne
inc
xor
aas
jmp
xchg
mov
movsl
loopne
fldt
popa
pop
add
scas
jbe
sub
pop
add
add
jb
mov
dec
add
insl
aaa
sub
pushf
test
pop
add
std
xor
jl
aas
je
or
mov
rcrl
dec
and
flds
xchg
lods
add
leave
sub
repz
mov
jb
xchg
adc
xchg
jne
das
int
and
add
enter
add
inc
or
iret
and
mov
sub
xchg
sbb
xchg
pushf
push
cmp
add
xor
and
jl
out
int3
add
lods
aad
add
sbb
in
xchg
fildl
mov
inc
push
lock
out
addb
add
rcrl
push
shl
data16
loop
xchg
sub
jno
pop
es
out
repnz
lret
mov
fmuls
adc
sub
add
clc
mov
test
into
dec
xchg
inc
clc
push
xorl
add
pushf
jae
jle
repnz
mov
add
add
dec
mov
inc
int3
cwtl
pop
mov
pop
add
cmc
shrl
dec
mov
add
xchg
fstps
mov
es
add
jle
movb
adc
ret
imul
loop
std
sub
ficomps
add
add
dec
adc
cmpsb
lcall
cmp
pop
or
and
data16
das
testb
cmp
xor
inc
push
pop
xchg
in
sti
mov
sub
push
add
shl
mov
cmp
out
push
jecxz
inc
mul
sbb
jecxz
into
pop
stos
jb
push
dec
dec
addr16
pusha
lock
mov
fldcw
in
cmp
in
lock
mov
inc
sub
mov
pop
xchg
ds
inc
jno
out
add
push
cwtl
je
add
inc
add
sub
push
xor
inc
xchg
mov
outsl
in
jb
add
jns
add
jb
add
and
add
ss
or
and
aad
fnstenv
test
scas
imul
add
sbb
add
xchg
icebp
scas
lret
push
les
inc
arpl
xchg
mov
pop
xor
nop
add
pop
mov
scas
add
mov
add
inc
xchg
aaa
xchg
bound
mov
sub
shll
xor
aad
testb
or
mov
pop
lods
or
adc
mov
xor
xchg
je
sbb
dec
jmp
popf
mov
mov
lock
or
sti
jnp
les
leave
pop
or
fcmovbe
push
inc
cmp
in
dec
sbb
add
xchg
fistl
add
ret
jp,pn
cmp
js
lds
daa
push
mov
es
fwait
adc
adc
dec
mov
shrl
fiaddl
adc
ja
dec
sbb
add
insb
loop
sub
nop
stos
fnstcw
ret
or
add
and
xchg
jg
add
add
add
xchg
add
out
mov
ljmp
nop
popa
in
dec
cmp
gs
cmp
loopne
scas
pop
add
adc
cmp
dec
fwait
dec
fbld
lret
add
adc
mov
out
pop
lahf
cmpsb
test
add
add
add
mov
sub
push
es
xchg
xchg
ss
bound
add
xchg
inc
js
hlt
jmp
iret
and
icebp
rolb
jnp
pop
xchg
add
mov
dec
add
mov
sahf
outsb
mov
jle
and
dec
jbe
and
or
lods
aad
and
mov
xor
add
jg
push
push
add
flds
addr16
cli
mov
mov
pusha
icebp
push
dec
mov
adc
inc
mov
lahf
aaa
popf
repz
pop
pop
daa
jb
and
mov
ljmp
add
jle
pop
mov
xlat
daa
sahf
push
stc
daa
add
add
out
add
mov
dec
dec
jo
xchg
and
sub
mov
jg
add
sti
fwait
mov
add
jmp
es
stos
mov
mov
add
pop
arpl
dec
xor
aad
popf
je
dec
ret
ret
jne
popf
popl
rcll
clc
ja
fidivl
pop
in
add
incl
arpl
cmp
mov
aaa
sub
push
mov
data16
inc
outsl
fcmovne
mov
dec
aam
adc
push
insl
sbb
cli
daa
ret
mov
push
and
sbb
insl
enter
or
scas
popa
stos
pop
sbb
add
xor
mov
adc
mov
add
adc
in
pop
xchg
add
mov
add
insb
inc
add
std
inc
mov
jbe
mov
xchg
push
cld
add
mov
add
add
or
push
xchg
jmp
or
add
sub
addr16
mov
mov
ret
rcll
call
loope
out
push
mov
xchg
in
pusha
hlt
hlt
dec
jl
out
imul
mov
jle
test
sub
jbe
add
aaa
add
inc
dec
cmp
lods
aas
pop
es
cwtl
cmp
aas
sti
imul
pop
push
psubsb
test
shl
out
in
jecxz
jnp
pusha
add
flds
jge
cmp
adc
and
add
add
int3
push
cs
mov
mov
cmp
movsb
arpl
xchg
push
insb
mov
aad
das
dec
es
fildl
je
call
xchg
cmpsb
stos
cwtl
add
fsubs
outsb
jmp
add
xor
fldl
movsb
mov
ljmp
int
aas
pop
cmc
inc
pushf
add
movsl
jg
sub
add
into
jne
je
iret
loope
dec
add
cmp
add
cs
insl
das
cmpsl
adc
pop
jne
cltd
notb
pop
outsl
cmp
in
popf
pop
clc
add
xlat
enter
cld
push
jmp
add
push
bound
add
mov
outsb
mov
inc
add
cmc
mov
scas
int3
nop
sbb
mov
je
push
and
add
pop
lret
adc
push
inc
stos
or
fst
lea
mov
add
add
sub
iret
insb
mov
arpl
sahf
cmp
jnp
lea
in
jb
hlt
cltd
into
lods
lret
push
mov
stos
insb
lahf
pop
insb
ja
add
sub
add
arpl
stc
mov
jp
imul
dec
faddl
stos
add
outsb
and
add
mov
std
xor
pop
addr16
add
in
or
dec
xchg
and
jp
in
fs
add
call
and
addb
leave
pop
pop
adc
lcall
cmp
ds
mov
jl
add
add
cs
xchg
in
repz
pop
dec
shlb
and
orb
sub
dec
push
push
mov
scas
adc
mov
sub
jbe
add
outsl
adc
pop
in
lds
mov
add
or
xchg
dec
push
add
add
add
insl
add
push
add
sbb
adc
out
adc
fstps
jg
mov
adc
gs
add
push
ret
ja
jmp
add
add
cli
lock
out
dec
test
daa
sub
fdiv
mov
les
leave
add
adc
loope
add
icebp
push
jnp
andb
subl
lock
xlat
pushf
xchg
add
out
aam
adc
add
inc
sub
xchg
sub
dec
add
cmp
adc
add
gs
aaa
ds
and
mov
fisubrs
rolb
cmp
adc
int
sbbl
faddl
adc
pop
xlat
sbb
pop
push
and
lods
add
xor
mov
in
push
adcb
mov
add
pop
sbb
orl
mov
inc
cmp
pop
pop
bound
roll
push
loop
enter
leave
sub
mov
movb
loopne
cmp
or
add
push
jecxz
adc
loop
or
sub
xchg
int3
mov
mov
or
dec
or
mov
mov
adc
xchg
pop
outsb
mov
push
or
test
mov
mov
movsl
and
add
adc
mov
daa
xchg
dec
subb
jne
pop
pop
sti
lock
test
xor
fs
out
iret
dec
cs
jns
cmp
or
xor
dec
cmp
push
cmp
add
js
xchg
add
mov
popa
push
jbe
repnz
jg
out
pop
mov
stos
fwait
and
push
or
xchg
add
mov
mov
add
loop
push
add
test
shrb
clc
outsb
stc
xor
inc
addr16
add
pushf
iret
xchg
fisttpll
pop
xor
inc
icebp
cltd
adc
jo
gs
jecxz
or
mov
repnz
popa
int
adc
xor
pusha
les
into
adc
cmp
cmpxchg
jne
sahf
push
fldl
dec
sub
aad
add
jle
test
bound
jns
and
gs
str
sbb
mov
shll
popl
out
xor
aad
test
int
sti
pop
cli
nop
inc
pop
push
add
jecxz
mov
and
sbb
jno
inc
mov
add
jmp
add
sub
pop
inc
jl
fldenv
adc
add
xor
dec
xor
daa
stos
add
add
ljmp
pop
mov
lods
clc
add
mov
out
testl
cmpsb
xor
lret
mov
mov
iret
popa
addl
mull
or
daa
add
icebp
popa
in
jmp
inc
and
and
mov
sub
add
mov
imul
mov
add
pop
lods
andb
and
sub
ja
adc
xor
push
push
adc
mov
inc
mov
mov
std
dec
adc
sbb
lods
mov
daa
jnp
fcmove
inc
lret
gs
dec
dec
mov
add
stc
loop
push
cmp
shlb
sti
sbb
push
cmp
fs
shl
pop
lds
mov
and
add
loopw
stos
inc
xchg
add
popw
adc
pop
jmp
mov
sti
and
xor
popa
pop
dec
mov
fisubrs
test
jle
ss
pop
imul
add
lcall
sub
jmp
mov
mov
cmpsl
fdiv
mov
xchg
add
test
adc
add
out
in
gs
push
lock
notl
add
add
addr16
mov
add
mov
stos
xor
lahf
aaa
sbb
mov
pop
loop
mov
pop
cmp
push
add
xchg
mov
sbb
icebp
mov
pop
popa
add
sbb
or
xlat
fisubrs
xchg
add
fsubrs
add
test
dec
add
pop
insb
mov
mov
add
pop
jb
test
dec
inc
push
adc
mov
int3
stc
or
add
xor
jne
insl
sub
popa
aaa
push
hlt
add
pop
add
or
out
and
sub
out
call
push
cmp
push
sbb
and
add
call
enter
push
cmp
mov
cmp
leave
sti
ret
push
stc
dec
xor
roll
sub
push
mov
insb
adc
jecxz
js
neg
push
adc
pop
cmp
add
sub
popf
mov
inc
xchg
sub
fisubs
mov
test
sbb
cld
fxsave
orl
aas
movb
xor
adc
adc
push
stos
notl
ljmp
add
add
xorb
pop
int
inc
fdivrl
ds
xor
add
imul
das
mov
jp
es
stos
iret
add
lret
ljmp
fidivs
dec
fsubrs
inc
lods
add
cmp
pop
add
bound
jns
adc
cwtl
jo
outsl
pop
daa
and
fidivrl
insb
repnz
xchg
push
aaa
into
and
ret
cld
cmp
cltd
push
sub
mov
out
xchg
jnp
iret
xchg
inc
cmc
push
lods
inc
fisttps
cmp
add
cwtl
xor
mov
dec
xchg
pop
add
pop
test
push
push
outsl
repz
sub
sub
notb
loop
lcall
mov
roll
xor
mov
add
arpl
or
push
add
mov
ja
lea
inc
inc
xchg
in
loope
jo
pop
add
mov
sbb
imul
inc
repnz
push
jne
inc
cmpsb
xchg
fidivs
loopne
add
push
filds
xor
push
add
add
inc
stos
and
aam
fistps
repnz
add
add
add
add
sub
leave
pushf
push
call
cld
jb
mov
inc
add
add
test
add
mov
inc
lds
mov
add
ljmp
adc
mov
scas
out
xor
inc
xchg
sub
jnp
push
or
mov
call
push
notl
jae
iret
neg
push
inc
imulb
cmc
movsl
push
jns
inc
loopne
inc
xchg
sti
sbb
jl
call
rolb
jno
mov
mov
enter
and
fiadds
mov
imul
adc
test
jmp
sbb
add
push
push
xchg
fcmovu
add
dec
lods
mov
inc
inc
add
fcoml
xchg
out
sbb
insb
or
imul
sahf
add
out
stos
jnp
sti
push
mov
std
clc
xorb
and
xor
sub
and
ret
and
add
arpl
mov
xchg
aaa
add
inc
mov
add
add
add
into
gs
mov
aaa
lods
or
clc
enter
xchg
add
push
andl
sub
clc
jno
ret
push
inc
sbb
sub
xor
in
xor
out
and
jmp
adc
les
sub
bound
xor
add
add
sbb
ret
xor
sbb
jns
je
aam
cmpsl
push
or
or
in
add
in
add
xchg
push
push
add
not
xchg
cmp
fisubl
xor
lahf
add
mov
lea
fdiv
add
dec
icebp
aad
fildll
inc
orb
faddl
stos
push
xchg
cld
xor
aaa
imul
lret
add
stos
insb
ljmp
xchg
xor
sub
in
xor
lldt
mov
fidivs
xor
jle
dec
xchg
loop
push
ret
pusha
jae
lcall
add
xchg
fldenv
nop
pop
push
add
push
lea
dec
mul
push
xchg
loop
sbb
cmp
idivb
pop
add
adc
pop
mov
and
xor
push
aam
inc
and
mov
les
add
mov
push
add
mov
ds
aas
clc
add
add
loop
jp
mov
xor
add
add
cs
mov
push
add
push
jb
xchg
mov
mov
add
add
popa
and
adc
xchg
jg
or
and
dec
add
push
mov
and
push
aad
clc
adc
inc
dec
add
push
add
cmp
stos
pushf
add
push
cmp
hlt
mov
insb
or
mov
adc
stos
js
hlt
out
pop
push
fldt
jmp
push
add
jle
add
mov
test
call
push
pop
mov
xor
fistpll
xchg
add
enter
gs
add
sub
pop
cmp
and
cmp
add
addr16
sub
out
add
je
loopne
ficomps
cmpsb
imul
sbb
sub
sbb
push
jg
add
cmp
pop
dec
mov
aam
in
loopne
and
mov
lods
mov
add
lea
data16
xchg
xor
mov
test
add
cmp
add
pop
add
stos
outsb
push
push
dec
add
test
and
aad
xchg
repnz
lretw
mov
test
mov
hlt
jge
outsb
jl
cli
sub
and
flds
dec
xchg
stos
add
int
aas
mov
movsb
push
pop
mov
sub
or
add
cmc
int3
cmpl
gs
aad
mov
out
sbb
ret
shl
sbb
mov
roll
and
push
insb
aad
dec
push
stc
dec
data16
arpl
jmp
addr16
icebp
xchg
xor
mov
jp
add
add
add
iret
fwait
testb
adc
lret
mov
in
aas
cs
scas
add
jl
in
dec
inc
ljmp
std
add
mov
gs
add
mov
jo
add
movsb
xchg
xor
inc
add
stc
js
popa
sbbb
loope
jecxz
fdivrl
out
add
mov
lret
mov
xor
loopne
adc
mov
inc
jl
sti
jno
mov
push
mov
add
frndint
test
insb
ret
das
add
mov
adc
iret
test
cmp
gs
clc
out
add
mov
or
add
in
pusha
jbe
add
enter
fimuls
push
out
mov
sbb
pusha
add
clc
outsb
ret
cs
and
xlat
or
rorl
lahf
nop
add
jecxz
dec
xchg
mov
stos
sbb
add
mov
mov
inc
pop
inc
jno
gs
out
ret
testl
fldl
call
add
iret
cmpsb
sbb
aas
jns
popf
or
aaa
add
xorb
xor
addr16
add
add
inc
cmp
in
mov
cli
sub
cmp
nop
cmp
lret
add
or
jp
mov
adc
mov
adc
fildl
cld
inc
loope
dec
jg
xchg
gs
sete
inc
add
orb
add
mov
add
cmpsb
mov
sub
jp
shlb
push
adc
add
mov
ss
xor
or
jne
shrl
je
add
aam
add
sbb
jl
add
das
add
mov
mov
and
sub
sbb
inc
jne
movsb
push
jbe
and
or
call
mov
mov
jmp
add
mov
addr16
sti
adc
into
lods
int
adc
add
push
add
jo
or
cmp
add
add
data16
in
add
fwait
rol
std
sbb
and
enter
adc
data16
lret
int
inc
aas
stos
cld
sub
dec
push
insl
ds
xchg
lea
or
mov
aaa
imul
jo
arpl
mov
dec
popf
mov
pop
pop
add
cmp
in
add
mov
pop
add
xchg
sbb
cmc
xchg
scas
loope
jmp
mov
mov
push
mov
adc
adc
test
add
call
push
sbb
hlt
out
add
lret
sub
and
and
pop
movsb
sbb
cmpsb
add
fcoms
out
mov
dec
xchg
xor
jge
fsubrp
add
jnp
add
push
leave
in
add
bound
pop
rolb
jmp
add
jbe
mov
add
xor
dec
pop
ljmp
xorb
jnp
pop
or
cmp
incl
xchg
jne
faddl
xchg
cmp
sub
jbe
xchg
roll
fwait
xor
xchg
xchg
and
add
lods
mov
roll
xchg
or
dec
sbb
mov
inc
add
add
adc
cmpsl
clc
sbb
pop
and
lock
mov
mov
mov
int3
add
int
sahf
dec
or
lahf
testb
jbe
and
inc
sub
xchg
lret
sbb
pop
add
add
add
imul
mov
hlt
stc
dec
xchg
pop
and
lcall
jmp
call
adc
aaa
lahf
adc
and
or
xchg
test
push
push
scas
pusha
adc
shr
mov
adc
pop
int3
adc
xor
mov
out
inc
jecxz
addb
jae
mov
sbb
insl
mov
dec
lret
inc
push
add
je
sbb
sahf
mov
dec
mov
mov
jl,pt
mov
fsubl
mov
pop
adc
dec
xchg
add
das
mov
jg
lds
negl
lret
repnz
out
add
push
push
sub
mov
mov
add
lds
mov
add
aam
jmp
icebp
arpl
dec
jle
pushf
or
pop
sbb
aam
scas
push
adc
lods
lds
popf
jl
add
add
push
xchg
push
clc
or
rcll
sub
aas
clc
out
add
mov
and
add
xor
xlat
push
outsb
sbb
mov
arpl
ret
push
and
loopne
out
pop
mov
rolb
loope
jp
pushf
lret
add
dec
xchg
pop
outsb
mov
mov
sbb
ret
mov
cwtl
orb
pop
add
add
jle
into
cs
mov
pop
jne
add
push
sbb
dec
jecxz
cwtl
dec
subl
repz
mov
xchg
pop
adc
pop
inc
pop
push
cmpsl
clc
mov
add
ss
inc
add
cs
inc
aad
add
dec
push
mov
loope
fs
mov
pop
dec
cmp
leave
sub
popa
jl
in
xlat
add
xchg
inc
fiaddl
adc
add
push
addb
shlb
add
add
mov
je
rcr
cmp
lret
adc
xor
jbe
imull
jge
imul
mov
mov
push
sub
sbb
insl
add
xor
jecxz
jo
lods
push
add
and
int3
sbb
push
ret
jg
lds
rcl
mov
lret
add
lahf
popf
pop
clc
mov
inc
repnz
add
popa
js
fisubrs
aad
fwait
or
enter
pop
jl
imul
dec
sub
pop
dec
xor
dec
into
ret
cmp
xlat
iret
xchg
or
mov
fadds
mov
add
jg
sbb
hlt
sbb
insl
xchg
pop
mov
jno
sbb
rolb
into
stos
addr16
inc
mov
popa
add
inc
inc
add
or
ret
mov
sub
test
pusha
test
ja
push
adc
jbe,pt
mov
add
fs
sarl
push
add
push
dec
sbb
fwait
mov
mov
loopne
rorb
loop
sub
mov
int
mov
cmc
ds
add
sahf
sub
jae
add
xchg
inc
mov
dec
xchg
ret
stc
fwait
and
addb
fimuls
notl
push
addr16
insb
fdivs
xlat
rorb
clc
add
pushf
dec
in
mov
xchg
add
add
dec
incb
popf
adcb
inc
bound
popa
inc
aas
add
outsb
push
aad
sub
jo
outsl
mov
les
jp
inc
mov
lods
push
lahf
mov
pop
fistl
cmp
fs
xlat
push
mov
dec
stos
add
das
repnz
mov
push
pop
nop
lcall
mov
inc
ljmp
ja
outsl
inc
mov
mov
cmp
add
sbb
mov
stc
nop
insl
jg
add
add
mov
xchg
adc
scas
fildl
xor
test
mov
and
lahf
cltd
mov
cmp
sti
ja
xchg
jmp
dec
imul
or
jmp
dec
and
cmpsl
in
mov
mov
lds
pop
pushf
xlat
out
cmpsb
cmp
add
cmp
add
repz
or
loop
jns
dec
ss
jbe
push
push
loopne
into
dec
push
cwtl
fdivr
fstps
mov
fldt
mov
mov
xchg
insl
in
lods
jl
adc
scas
fbld
out
dec
add
inc
xor
xchg
mov
inc
imul
imul
xorb
sub
mov
cmc
add
mov
add
mov
add
cmp
add
mov
enter
out
add
pop
ljmp
pusha
push
cmp
mov
lds
mov
cmp
push
and
xor
jne
repz
popa
and
idivb
add
scas
add
and
imul
lds
push
push
pushf
imul
and
movsb
jno
mov
or
xor
sbb
xor
jne
add
mov
in
shlb
pop
xchg
xor
add
repnz
and
push
movsb
pop
add
pop
popa
mov
arpl
call
dec
adc
aaa
xor
mov
shl
ds
mov
adc
sub
jne
add
lock
loop
das
add
iret
dec
in
adc
mov
and
in
xchg
shlb
push
das
xchg
mov
loope
xor
dec
add
jb
xchg
ficoms
cmp
mov
add
call
push
mov
sti
movsl
xchg
add
inc
into
pop
mov
add
mov
bound
fdivr
sahf
lock
add
mov
add
fistps
jo
cmp
inc
out
cmp
lods
filds
insb
mov
jne
mov
push
xor
or
cmp
add
aaa
aaa
sub
icebp
add
inc
sbbl
xor
push
mov
pop
add
xlat
lods
sub
ficompl
scas
outsl
add
cmp
out
xchg
push
lea
pushf
add
add
cmp
repnz
add
cs
sbb
xchg
orl
testb
add
aaa
add
fwait
gs
movsb
into
inc
jbe
flds
jge
jo
das
inc
jae
mov
dec
pop
inc
add
jns
add
loope
mov
inc
imul
mov
sbb
repnz
push
or
sub
mov
cmpsb
stos
or
adc
dec
ds
or
and
nop
jecxz
js
add
into
mov
aam
mov
sub
sbb
test
mov
jno
sbb
fisubrs
pop
loope
into
ja
add
arpl
iret
loope
stc
loope
xchg
push
add
jbe
sub
push
add
fs
pusha
stc
shlb
xchg
addr16
stos
stc
pop
shlb
mov
or
jno
sarb
pop
add
fistps
notl
cltd
or
sub
or
add
out
iret
add
lea
adc
add
shlb
insl
add
scas
fs
jp
add
movsl
push
add
mov
mov
add
lock
mov
lret
fisubrl
loop
adc
mov
push
lret
xor
in
les
add
sbb
jge
rol
add
sbb
mov
lret
push
in
adc
sbb
loopne
mov
stos
pop
xchg
mov
adc
insb
fsts
inc
loopne
test
inc
mov
mov
inc
inc
es
mov
mov
push
cmp
int
in
flds
movsl
repz
fmulp
cmc
es
scas
daa
into
loope
cmpsl
push
jl
les
inc
lahf
shl
test
mov
and
sub
jl
in
add
add
out
jge
jb
mov
xchg
push
movsl
pop
es
dec
mov
add
repnz
jnp
lcall
movsb
test
dec
add
inc
jp
mov
test
ret
test
jo
test
imul
xor
xchg
rcrb
fsubs
mov
push
sahf
jae
lds
ret
fnstsw
sub
cmp
cmp
xor
xlat
dec
es
cli
cmp
cli
sbbb
notl
add
push
mov
sub
popl
ret
xchg
fldl
add
orb
pop
lock
and
or
stos
push
lea
fbstp
dec
add
pop
push
add
jnp
mov
push
jns
fwait
jl
sbbb
enter
xchg
jae
ds
add
add
out
pop
pop
test
and
rcll
daa
xchg
je
dec
and
jmp
shrb
jmp
dec
ljmp
leave
jno
decl
adc
daa
and
and
mov
push
ficoml
fs
mov
cmp
adc
mov
add
ret
inc
adc
imul
cs
in
sbb
loopne
and
pop
sbb
ret
push
shrb
jns
cltd
mov
sbb
add
lcall
dec
pop
mov
fcomps
add
sahf
cli
add
push
push
scas
mov
push
mov
sbb
daa
stc
mov
add
add
push
xor
xchg
xchg
fiaddl
sbb
inc
dec
mov
add
outsl
and
sub
adc
loopne
add
mov
add
sub
movsl
add
mov
add
dec
jae
and
lea
jnp
ss
add
test
inc
mov
add
jp
mov
std
add
inc
out
mov
xor
xor
out
clc
repnz
add
or
jb
repz
inc
xchg
jns
pop
inc
lds
adc
jecxz
adcl
add
in
notl
add
add
mov
dec
mov
pop
insb
add
jp
cwtl
xchg
add
in
mov
out
add
dec
mov
lret
rol
xor
and
add
daa
orl
loop
push
int3
in
lods
test
testb
xlat
test
push
or
addb
sarl
add
cmp
filds
xor
add
xor
adc
add
iret
and
mov
add
pushf
out
mov
add
dec
arpl
cli
mov
cmp
add
aaa
ljmp
in
rep
inc
xchg
loopne
xchg
cld
ret
mov
xchg
push
adc
call
add
adc
popa
push
lods
std
and
xchg
jg
mov
in
lds
and
jb
push
out
or
and
movsl
fstpl
lea
je
aam
mov
mov
mov
filds
or
add
shll
xchg
add
in
adc
and
das
push
je
sbb
adc
ret
and
cpuid
push
or
add
enter
sub
imul
mov
jl
rorl
add
lret
mov
arpl
xchg
adc
sub
scas
sbb
int3
std
aas
call
add
adc
mov
add
xchg
pop
add
sbb
pushf
outsl
icebp
mov
push
repz
int3
cmpb
inc
adc
stc
cltd
mov
jno
add
add
push
sub
mov
or
pusha
add
shrb
lea
adc
pop
xlat
xchg
sub
adc
lret
push
movsl
mov
xlat
dec
rorl
daa
xchg
cmp
sti
gs
add
aam
out
scas
flds
call
sbb
aaa
mov
jbe
gs
inc
push
dec
loopne
out
add
ja
add
mov
les
add
add
add
pop
out
adc
push
arpl
adcl
mov
test
add
add
stc
rcrb
lahf
add
hlt
filds
mov
add
jb
jns
add
js
jnp
inc
outsl
rorb
addr16
mov
addb
push
sbb
lods
mov
sub
mov
clc
add
out
jg
stos
sbb
add
insl
mov
lahf
fnstenv
addr16
leave
mov
sub
dec
add
jmp
addb
add
cmp
fidivrl
std
mov
cltd
mov
fildl
jge
inc
lret
test
pop
cmpsb
adc
dec
cltd
out
fmuls
pop
jo
xor
sub
add
je
test
out
mov
push
xchg
insb
add
pop
in
add
and
xchg
bound
add
push
and
xor
xchg
or
and
shrl
out
sbb
push
mov
mov
fistpll
pop
jmp
sbb
fcoms
roll
imul
fldl
mov
out
mov
pop
add
adc
mov
cmp
loopne
sub
pop
nop
es
jmp
les
inc
imul
jbe
loopne
mov
sbbb
fwait
adc
test
sbb
xorb
xchg
add
sbb
dec
aas
scas
or
imul
sub
sbb
jl
add
add
add
add
pop
loopne
cmp
xor
mov
jo
leave
test
add
shr
jne
mov
movsl
xor
test
push
pop
mov
add
imul
mov
sbb
aad
xchg
xor
add
into
cmpsb
pop
mov
adc
xchg
mov
lret
loope
add
cmp
or
dec
cmpsl
ficomps
test
jo
jp
mov
mov
scas
mov
and
adc
add
add
outsl
imul
mov
test
leave
cmp
add
daa
add
cmp
inc
xchg
adc
inc
sarb
pop
or
out
sub
loopne
je
lock
cmpsb
jbe
lods
mov
fwait
test
sub
add
lds
jecxz
aad
cltd
inc
or
mov
mov
xchg
inc
cmp
add
xchg
add
or
pop
testb
dec
movsb
in
push
leave
adc
jnp
mov
and
fisubs
scas
add
push
add
fs
or
pop
push
and
add
ljmp
push
pop
lds
xchg
mov
cld
and
jp
mov
jae
scas
push
and
lcall
pop
adc
cs
xchg
insb
add
push
sub
rorl
jle
or
xchg
push
pushf
rcr
pop
aad
push
push
aam
or
add
movsl
add
pop
daa
adc
hlt
ds
test
add
bound
mov
aam
es
test
jle
add
jne
add
aas
pop
pop
loop
insl
and
sbb
loop
add
add
pushf
add
mov
in
les
bound
bound
aad
dec
xor
add
ror
incl
cld
dec
arpl
icebp
pop
add
jl
mov
add
mov
push
mov
add
jne
dec
lret
nop
clc
sub
pop
sub
jne
sub
adc
mov
jnp
push
into
popf
fldt
add
xchg
mov
popa
pop
inc
lds
lods
xor
and
inc
add
mov
orl
mov
cmp
cmpsl
mov
imul
addr16
add
sbb
pop
add
aas
shll
jns
add
testb
mov
faddl
sbb
dec
sub
cwtl
pop
mov
xchg
js
xchg
outsb
add
mov
loop
aam
das
pop
movsl
xchg
adc
jp
movsl
push
std
and
and
xchg
fcmovnbe
nop
sub
add
sbb
or
loope
jbe,pn
les
and
sub
inc
add
nop
pop
add
loopne
fsts
into
popa
int
add
add
imul
shrl
add
call
xchg
adc
test
or
test
andl
and
cltd
cwtl
pop
adc
adc
aad
pop
ljmp
js
add
xor
clc
fists
jge
hlt
jg
add
mov
mov
jns
pop
lahf
xchg
es
int3
in
lret
mov
add
lds
add
push
push
inc
mov
loope
repnz
add
dec
mov
xchg
cli
in
xor
jb
add
aad
cmp
mov
ja
jecxz
and
sub
xchg
push
add
test
lods
add
add
enter
cmp
outsl
ret
xor
push
je
std
or
jae
add
in
or
add
add
test
add
add
and
add
pop
inc
scas
cmpsb
jle
fiadds
lret
jno
push
xchg
add
cmp
and
jne
hlt
movsb
mov
les
sbb
punpcklwd
into
xchg
test
mov
pop
and
dec
add
cmp
mov
sbb
mov
xchg
add
scas
rcl
and
mov
add
icebp
call
dec
jp
cmp
jns
mov
add
sti
cmpsl
mov
and
ret
mov
in
addr16
mov
jns
ret
xor
pop
les
addb
cmpb
popf
testl
mov
pop
pop
add
daa
pop
repz
add
out
aas
lahf
ja
add
xchg
ror
push
mov
bound
jnp
push
sarl
adc
sbb
test
add
jl
add
lock
add
sbb
xor
test
add
data16
icebp
inc
add
mov
add
push
mov
sbb
lcall
ljmp
daa
add
repnz
xchg
pop
mov
jae
inc
or
push
mov
inc
aaa
add
je
jg
jle
cmpb
stos
adcb
push
xchg
hlt
add
cmp
test
int
pop
push
in
add
sahf
rsqrtps
test
add
jecxz
decb
decl
outsb
jmp
std
add
xor
pop
cmp
daa
pop
cmpb
adc
add
sbb
add
xchg
lahf
aas
ret
sti
and
insb
scas
push
popf
xchg
inc
aad
mov
cld
fdivrl
lahf
dec
add
push
iret
in
ljmp
andb
mov
roll
add
cmp
sbbl
inc
pushf
fldenv
add
inc
fstl
pop
add
sbb
sub
jbe
add
jno
push
mov
dec
cs
testl
or
xor
add
add
adc
sbb
loop
js
mov
fmul
in
cmp
mov
sub
mov
mov
cmc
jnp
or
test
add
insb
cmp
or
inc
push
loop
add
sub
mov
add
leave
xor
insb
add
cmp
cli
addb
lcall
pop
sub
insb
mov
inc
pop
inc
mov
jns
roll
add
mov
add
add
add
leave
push
mov
xchg
add
out
lods
ret
xor
add
hlt
cmpsl
jne
add
cli
add
fwait
add
enter
and
jle
insb
jne
xchg
stos
pop
pop
inc
cmp
lahf
rcrl
test
add
add
adc
add
leave
jecxz
mov
jbe
fisubl
jb
push
and
jmp
sub
repnz
js
outsb
dec
and
in
iret
sbb
test
arpl
stos
filds
pop
lea
jmp
push
add
sub
push
aad
out
movl
cltd
add
scas
test
mov
push
adc
cmp
repz
push
or
lcall
add
data16
add
sub
jmp
inc
or
adc
add
jmp
xchg
lret
and
pop
icebp
add
mov
insb
add
cmp
stos
out
jp
pop
jmp
cmp
clc
int3
push
adc
jmp
push
insl
adc
dec
adc
add
enter
jnp
push
mov
cltd
sbb
loop
test
sbb
in
dec
repnz
roll
lret
dec
xchg
add
movsb
addl
loop
push
xchg
repz
icebp
fiaddl
xchg
clc
lods
add
adc
jp
lcall
push
cltd
fnstenv
iret
and
cmp
mov
add
jmp
mov
pop
add
pop
adc
add
push
jmp
sti
fsubl
mov
inc
jae
lcall
sti
add
mov
add
dec
xchg
add
idivl
inc
popf
mov
imul
rclb
in
pop
adc
scas
in
rolb
xchg
cmp
pop
repz
xchg
in
jmp
outsb
add
mov
fldenv
push
and
add
or
add
xor
aas
into
outsb
cmpsb
in
stos
and
xchg
push
add
and
add
cmp
mov
add
mov
add
and
ja
clc
mov
mov
and
add
fimuls
or
popf
push
push
inc
xchg
or
cmp
scas
dec
xchg
mov
adc
or
add
sbb
insl
pop
je
ficoms
roll
les
mov
push
mov
jne
add
mov
inc
xchg
pop
xrelease
fs
pop
repz
into
xchg
mov
jmp
rol
subb
and
add
add
pop
push
push
dec
addl
sbb
or
jle
out
add
mov
dec
mov
mov
fs
in
sti
add
sbb
lret
scas
mov
dec
xchg
add
faddl
sbb
adc
and
mov
shl
lods
ficoml
scas
adc
jle
or
jo
add
add
rolb
sub
test
add
xor
mov
cmpsb
loop
cld
ss
push
mov
roll
adc
mov
add
fidivrs
iret
sahf
mov
in
xor
int3
fildl
adc
xorb
xchg
repnz
or
inc
aad
repnz
add
jmp
call
add
jecxz
add
cmp
cmc
mov
fstpl
sbb
outsb
lock
jne
xor
rorl
add
test
adcb
xor
pop
popa
sub
clc
or
dec
jbe
push
add
ficomps
dec
sbb
push
xlat
jp
mov
sbb
mov
xchg
add
sub
add
lret
mov
add
adc
jno
cli
out
in
sub
push
add
push
adc
xchg
dec
orb
leave
add
cltd
aas
add
out
dec
or
add
jne
int
and
add
push
lds
shlb
mov
in
in
or
xchg
adc
xor
xchg
repnz
in
push
or
mov
sub
inc
xchg
add
jl
stos
popa
lea
push
cmp
stc
inc
add
subl
jecxz
add
pop
daa
xchg
mov
int
xor
jne
lcall
popf
lock
js
insl
insl
cs
pop
imul
stos
adc
cltd
xor
add
add
loopne
out
jno
mov
rcr
mov
inc
fs
mov
pop
push
js
repnz
xor
insb
jl
call
pop
add
add
sbb
inc
inc
cs
pop
bound
add
pop
mov
rolb
shr
pop
rolb
mov
jbe
mov
test
add
jbe
pusha
add
ltr
inc
mov
jp
movsl
pop
or
xlat
movsl
add
mov
ljmp
sub
in
stc
jmp
xor
mov
arpl
roll
pop
mov
cmp
fmulp
cmpb
lgs
add
sbb
lret
incb
outsb
pop
inc
in
jecxz
mov
ja
es
cmpsl
xchg
frndint
jmp
jmp
xchg
std
inc
lret
push
add
cmp
sahf
daa
sub
lock
mov
push
pusha
add
jne
out
mov
pop
adc
jp
adc
add
jp
pop
pop
out
daa
nop
idiv
incl
xor
xlat
cmova
mov
cmp
add
lret
clc
xor
or
insb
push
push
lea
add
xorb
push
sub
ret
sbb
sti
mov
mov
mov
movsl
rolb
mov
add
aad
pop
out
lds
jo
fbstp
push
sahf
fstpl
sbb
add
aam
sbb
repnz
mov
cli
les
sbb
int
add
push
in
push
push
cmp
pop
cmp
inc
mov
gs
inc
outsb
cld
add
ret
sarl
sub
adc
adc
or
add
add
imul
fidivrl
inc
jmp
repz
add
and
push
mov
rolb
and
mov
stos
add
xor
fsts
push
std
cmp
mov
jg
inc
sbb
movsl
add
add
add
clc
andb
mov
pop
push
push
pop
ljmp
int
test
add
push
ror
stos
test
pop
add
lods
fisubl
lcall
xchg
cmpsb
mov
xchg
jo
addr16
dec
add
adc
jno
pop
movsl
sbb
iret
cmpb
pop
mov
add
sbb
enter
xchg
adc
and
jmp
pop
repz
bound
sbb
add
rcrb
fucomip
clc
inc
clc
add
lds
mov
test
pop
gs
add
mov
shll
xor
add
sbb
cmp
add
shl
dec
out
xlat
add
sbb
rorl
add
and
lcall
iret
leave
leave
dec
aas
fdiv
insb
adc
push
jmp
idivl
add
cmp
mov
add
xchg
insl
push
str
mov
ljmp
xchg
stos
mov
shlb
add
add
mov
add
rolb
call
test
dec
mov
jo
add
insb
adc
loop
into
add
xchg
add
out
insl
inc
and
push
xchg
rol
inc
dec
push
out
add
cltd
adc
add
add
pushf
jg
fisttpl
add
inc
sbb
mov
xchg
pop
in
jg
add
add
sub
popf
popf
cmp
in
jb
cmp
add
popf
les
xchg
popf
jecxz
add
loopne
mov
loope
loopne
jno
xlat
inc
addl
sti
mov
fwait
jb
sar
jle
packuswb
test
push
scas
pop
cmp
and
jmp
push
out
jno
add
enter
and
add
dec
add
in
out
and
std
add
jl
jecxz
cmp
iret
add
pop
std
jno
cmpb
test
sub
aam
jo
pushl
mov
dec
xor
loope
pop
std
add
xchg
pop
push
lods
add
xor
cmpl
add
push
push
inc
sbbb
add
jg
xchg
add
dec
int3
pop
repz
or
std
lahf
pop
add
add
pushf
add
mov
inc
fs
and
mov
cld
add
rcrb
or
or
add
dec
inc
push
arpl
jnp
enter
inc
sub
insl
pop
in
jns
dec
sbb
pop
add
test
pop
and
push
dec
pop
aam
out
jne
int
out
add
sub
mov
cmpl
xor
fistl
lea
movsl
popf
mov
movsb
js
add
jne
cli
es
mov
pop
loopne
cmp
cmc
call
jg
sub
add
loope
dec
xchg
scas
dec
and
pop
jl
cwtl
pop
cwtl
stos
sar
sbb
push
cmp
push
adc
outsb
outsb
push
popf
mov
scas
sti
sub
stc
movsb
sbb
or
add
or
dec
mov
je
outsb
push
jne
pop
test
rorl
lock
push
pop
in
add
cmp
mov
xchg
test
imul
cltd
xor
aam
aad
imul
popf
pop
xor
ds
daa
int3
add
push
add
addb
add
shrl
cmp
int3
and
rol
daa
daa
mov
mov
or
mov
pop
mov
sub
aaa
stc
and
movsb
out
es
aas
leave
and
add
add
dec
adcl
rolb
add
lret
test
pop
jp
cld
push
unpcklps
dec
xchg
lods
cmpsl
scas
scas
inc
addb
call
mov
iret
mov
jb
pop
fistl
clc
shrb
es
xor
sbb
adc
push
insb
daa
add
jle
add
rcrb
or
outsb
icebp
lahf
pop
push
jp
push
dec
mov
xchg
xchg
add
pop
mov
sub
pop
pop
xor
fstpt
outsl
mov
add
fwait
rol
and
rclb
add
dec
mov
push
add
push
popf
in
pop
das
cmp
std
push
add
clc
pop
in
sti
push
mov
and
test
push
fs
lret
pop
movsb
add
dec
sub
les
ret
lds
xchg
imul
in
push
add
in
sub
iret
adc
push
push
pop
add
add
cmp
ja
sti
add
mov
xchg
add
mov
bound
std
push
add
sub
jns
fxch
add
leave
iret
popf
dec
scas
dec
sbbl
sbb
lahf
mov
cmp
push
test
add
lods
add
jl
fucomip
add
lea
ficoms
jp
mov
mov
jge
xor
pop
add
mov
pop
insl
out
adc
pop
mov
add
pushl
jmp
and
add
testb
mov
mov
fldl
xchg
mov
decb
outsl
pop
aaa
jae
lret
add
ds
add
cmp
jnp
mov
push
inc
adc
add
sub
push
sahf
jae
mov
or
xlat
add
sbb
cmp
xlat
in
cltd
xlat
dec
or
add
add
imulb
es
and
sbb
and
mov
xchg
pop
loopne
xor
enter
add
or
mov
orb
push
leave
inc
lahf
test
les
ffreep
jmp
jg
mov
in
enter
mov
jnp
or
add
fcompl
lods
add
add
sahf
mov
sub
sbb
cmp
add
in
mov
cmp
add
scas
pop
sub
push
std
jmp
call
mov
xlat
iret
test
xor
xchg
cmp
lret
fisubl
rcrl
lds
pop
dec
cmp
and
adc
je
sbb
pop
mov
lods
add
push
add
xor
add
jmp
mov
cmp
or
mov
cli
cmp
add
pop
push
cld
adc
cmp
out
mov
in
stos
xor
outsb
es
jb
sub
push
sarl
mov
faddl
loope
mov
inc
add
cmp
aas
add
add
in
out
pop
add
outsb
add
ret
adc
add
inc
verr
int
xor
push
mov
pop
mov
pushf
adc
mov
push
and
arpl
add
or
inc
call
mov
inc
sbb
sbbb
jle
mov
add
add
xchg
inc
inc
mov
jl
loopne
jae
sbb
lcall
les
adc
cmp
xchg
insb
das
add
sbb
and
inc
ja,pt
out
out
xchg
addr16
pop
in
cld
add
rorb
sub
add
sbb
inc
dec
ret
stos
mov
out
add
sbb
jb
outsl
add
cmp
adc
fwait
add
xor
add
fmulp
jmp
push
cmp
or
lret
test
mov
add
or
test
je
sbb
addl
add
js
and
repnz
inc
add
inc
movsb
rolb
std
std
mov
aam
or
cltd
loop
push
aas
sti
js
push
add
je
fisubl
xor
lds
mov
pop
dec
into
jl
cmc
fidivs
cltd
dec
add
inc
push
pusha
pop
movsb
add
xchg
mov
jp
shlb
cs
xor
mov
mov
loopne
add
push
add
mov
sbb
loop
aas
sti
xchg
mov
adc
xor
daa
mov
cli
xchg
mov
and
cmp
push
enter
jo
nop
cmp
lret
or
pushf
ltr
add
ss
ret
cmp
or
data16
or
test
add
pop
stos
add
cmp
add
push
push
fsub
daa
ja
jo
add
sahf
add
add
mov
dec
add
sbb
test
sbb
jg
jle
nop
inc
stos
adc
dec
ljmp
mov
xchg
clc
jbe
mov
dec
jo
add
jecxz
popa
aad
arpl
jecxz,pt
sub
adcb
pushf
dec
lock
jmp
mov
sbb
pop
inc
cmp
xchg
imul
icebp
pop
mov
add
hlt
cmp
in
les
outsl
jmp
xor
add
add
mov
add
xchg
jnp
add
sti
mov
cli
gs
adc
in
mov
mov
nop
xchg
xor
in
cmp
sub
push
push
inc
lcall
xchg
push
int
mov
inc
stc
mov
mov
popl
aad
insl
pop
add
mov
sti
repnz
or
scas
scas
repz
mov
jnp
add
decl
in
add
add
in
add
arpl
inc
add
mov
jno
mov
jnp
shl
add
jle
xchg
and
sarb
std
test
insb
push
push
in
fs
aas
sbb
fnstsw
jge
sub
movsl
roll
mov
inc
ljmp
add
enter
pop
into
add
and
test
cwtl
inc
negb
jns
cmp
add
aas
add
dec
and
pop
popa
out
daa
mov
mov
jmp
add
mov
add
push
push
push
add
xor
rcll
movsl
push
cmc
xchg
sbbl
addb
xor
into
mov
iret
adc
adc
jb
and
lret
xor
stos
lahf
hlt
and
add
outsb
pop
mov
out
movsl
add
je
add
mov
xchg
add
jmp
add
add
mull
dec
mov
scas
xlat
adc
rcll
cmpsb
scas
xchg
adc
push
ret
xor
and
xchg
cltd
lds
jo
data16
loopne
flds
in
stos
cmp
sub
mov
addb
push
and
data16
jl
dec
add
cmp
lods
push
mov
mov
mov
stos
out
aaa
repnz
or
pop
xchg
out
lods
add
std
ds
dec
add
jecxz
add
lea
jbe
lds
xchg
aam
cmc
add
insl
mov
add
add
pusha
add
sbb
ret
xor
push
mov
dec
jge
xlat
pop
loopne
dec
inc
imul
sbb
add
sti
add
cmpl
add
push
pop
sbb
lea
push
je
push
cmp
or
xor
mov
adc
xor
in
inc
add
mov
scas
pop
add
outsl
mov
push
xchg
mov
add
xchg
xor
arpl
push
movb
push
add
push
test
cmp
repz
lcall
pop
sahf
dec
push
adc
test
mov
pop
add
repz
icebp
int3
add
pop
add
shlb
aas
and
add
fidivs
loope
sbb
sti
shrb
add
repnz
jge
push
push
xor
xorl
out
sbb
xor
push
setp
lods
aaa
push
xor
add
icebp
aaa
aad
dec
add
stos
jne
or
insb
xchg
push
test
das
loopne
add
add
mov
inc
mov
pushf
iret
je
popf
xchg
subb
add
add
pop
addr16
movsl
popf
in
loop
or
outsl
jnp
inc
lea
ret
pusha
test
mov
or
scas
ja
std
rcrl
fbstp
add
aam
inc
popa
sbbl
jecxz
in
std
iret
int
xchg
add
es
add
shrb
jno
add
or
lods
add
adc
pop
sbb
cld
pusha
mov
divl
dec
push
mov
adc
aad
shrb
add
fldcw
mul
add
inc
add
or
add
addl
add
data16
sbb
ret
xor
loopne
addr16
jns
jns
xor
cltd
shlb
outsl
add
pushf
dec
xchg
jne
inc
dec
or
xor
rcrb
in
cmpsl
jl
daa
scas
inc
fcmovne
ds
insl
xor
stc
push
fidivs
mov
aaa
push
add
faddl
push
test
mov
add
lcall
int3
jmp
inc
insb
add
andl
jmp
push
pop
inc
arpl
cmp
sub
push
cli
pusha
stos
insl
xchg
mov
xchg
push
lahf
add
push
stos
and
dec
mov
pop
add
sbb
xor
arpl
add
inc
shlb
sbb
cmp
dec
xor
xchg
das
clc
jne
add
add
lcall
iret
addb
add
repz
clc
add
outsb
jg
add
or
jmp
or
lret
and
fldl
pop
into
lcall
fwait
mov
sub
out
add
add
cwtl
loopne
icebp
add
dec
add
inc
xchg
fwait
sbb
dec
shll
sarb
cli
mov
pop
popa
mov
mov
cli
sbb
xchg
testb
dec
jae
mov
cltd
pop
jb
adc
movl
add
add
xor
pop
add
push
call
lcall
add
in
mov
mov
imul
enter
lret
test
sub
lea
outsl
xchg
push
or
adc
dec
mov
and
bound
inc
subl
xchg
mov
outsb
stc
int
mov
adc
aas
add
movsb
add
jmp
and
inc
push
clc
fbld
sbbb
aaa
sbb
push
dec
popf
add
cmpsl
gs
cmc
add
cld
sahf
sub
ror
cmp
push
mov
pop
sub
add
xor
mov
dec
testb
outsb
mov
cmp
jle
clc
and
out
ret
inc
test
sub
ljmp
mov
mov
jle
add
lea
mov
or
lret
subl
outsb
jb
push
rolb
add
jo
loope
pop
pop
rorl
jp
ret
sub
jl
add
movsb
and
add
or
mov
push
loopne
call
pop
repz
les
imul
data16
addr16
es
jae
inc
into
mov
adc
and
popf
add
lret
les
shll
push
repnz
out
add
or
std
dec
fwait
mov
adc
add
and
iret
bound
xchg
enter
jne
sub
aad
jb
inc
xchg
push
mov
add
in
pop
dec
pop
xor
or
loop
mov
sbb
hlt
in
cwtl
enter
mov
add
in
gs
cmpsl
xchg
imull
and
and
pop
xchg
mov
sti
xor
imul
cmp
lret
xchg
mov
push
dec
push
mov
sub
adc
movsl
add
mov
fbld
add
mov
ret
jbe
lea
fbstp
add
rcrb
mov
dec
add
dec
gs
push
sub
addr16
adc
cltd
pop
add
xchg
xorb
push
in
movsl
add
lret
out
test
pop
subb
ficoms
dec
mov
pushf
add
movsl
cmp
pop
inc
or
jle
add
mov
pop
insb
xor
imul
jge
jnp
sub
aas
addr16
and
sbb
mov
stc
cmp
pop
inc
dec
insb
jle
jnp
std
pusha
popf
mov
pop
int
fisubl
xor
add
sete
jge
add
jecxz
fdivrl
mov
inc
add
xor
cltd
and
loope
adc
cmp
sub
pminsw
pop
push
sarb
clc
cmp
out
sub
das
mov
inc
mov
mov
aas
xchg
addl
addb
jo
push
xchg
das
inc
add
add
cli
mov
jge
icebp
in
cmp
add
mov
mov
ficoml
cli
ja
jl
aas
add
xlat
sbb
mov
lea
dec
popf
jmp
xlat
mov
aas
sbb
imul
and
rclb
adc
jbe
scas
sar
fdiv
mov
xchg
cmp
scas
add
enter
je
xor
scas
test
xchg
scas
mov
jae
inc
sub
lds
insb
out
imul
add
lods
lahf
mov
jl
push
add
add
push
push
out
int3
mov
mov
call
sub
mov
mov
mov
js,pt
cmp
xlat
aaa
add
insb
in
insl
std
add
and
jno
outsl
xchg
scas
adc
int3
mov
rcrl
and
sbbb
sti
dec
rolb
orb
dec
and
pop
and
push
add
add
adc
push
jne
lahf
add
leave
in
jecxz
xor
pop
add
mov
jae
cmc
out
mov
cmp
lods
rolb
jb
outsl
add
mov
xor
inc
inc
or
sub
add
xchg
xchg
adc
lds
lahf
test
add
mov
call
or
push
add
push
add
jns
inc
add
add
add
lock
push
inc
data16
stc
sti
repz
scas
insb
jmp
ljmp
mov
pusha
ja
and
mov
sti
adc
dec
sbb
push
sub
mov
push
ljmp
add
add
pop
std
add
ljmp
ss
sti
mov
add
sbb
add
pop
nop
add
and
testl
add
mov
dec
and
mov
mov
push
sbb
lock
out
decb
sti
in
or
dec
xor
ret
add
insl
push
jne
push
pop
push
js
je
xchg
int
inc
mov
sub
es
and
pusha
fdivl
loopne
stos
mov
dec
scas
xchg
mov
mov
fidivrl
mov
add
add
mov
mov
clc
pop
negl
or
fwait
sti
sub
sti
mov
jns
mov
and
and
popf
aas
int3
aas
ror
push
add
xchg
popf
push
aaa
ss
adc
or
inc
cli
pop
add
rcrb
pop
inc
iret
loopne
cli
pop
stos
or
push
jecxz,pt
out
mov
inc
mov
pop
add
pop
fnstsw
mov
leave
mov
add
addr16
xchg
sub
push
add
add
jbe
arpl
inc
cmpsb
das
cs
insl
shll
add
out
mov
add
add
shrb
push
fldenv
mov
mov
lcall
mov
mov
das
mov
cmc
rol
js
pusha
add
add
aad
and
ja
loop
out
mov
cld
mov
dec
arpl
and
mov
jno
rcrl
pop
sbb
sub
imul
cmc
xchg
adc
lds
mov
mov
sub
xchg
std
mov
mov
or
test
and
mov
adc
jle
ja
mov
add
add
cmc
sub
mov
jecxz
jnp
daa
push
or
push
mov
adc
sahf
adc
std
jl
or
adc
push
lret
enter
insl
push
mov
dec
inc
add
mov
fs
add
scas
add
xchg
add
mov
mov
mov
xchg
push
jns
or
mov
addr16
ret
adc
add
add
add
and
stos
lahf
fiaddl
outsb
pop
xchg
xor
mov
stos
mov
push
sbb
cmpsb
ret
xor
pusha
xchg
jl
fadds
js
add
int3
jg
adc
in
jbe
mov
cli
add
add
dec
add
loopne
js
mov
mov
adc
outsb
add
cwtl
stos
aas
cltd
add
cmp
adc
fsubl
dec
je
insl
icebp
add
lahf
nop
cs
mov
add
push
out
fsubr
sti
dec
fwait
pop
test
push
mov
add
mov
data16
sub
inc
loop
cmp
iret
push
jns
adc
in
add
mov
cli
stos
dec
jne
cmpsb
pop
inc
add
pop
pop
ds
cmc
inc
rorl
add
add
mov
mov
dec
pop
jg
dec
lahf
add
xchg
not
jecxz
add
gs
adc
popf
lds
int3
cmpsl
xchg
fnstsw
xchg
mov
add
adc
push
add
mov
mov
mov
les
ljmp
xor
adc
cmp
popf
or
mov
pop
fwait
dec
out
adc
dec
mov
push
int3
pop
cmp
sbb
adc
mov
js
fcompl
pop
inc
adc
je
and
lret
shrl
pop
je
fstpl
cwtl
push
ret
pop
jbe
add
and
es
popa
cwtl
add
mov
mov
xor
add
insb
xorps
sub
arpl
or
pop
in
cmc
mov
mov
int3
push
inc
add
mov
adc
popl
shrl
cmp
jns
or
int3
jmp
test
shlb
jl
fcmove
addl
popl
add
add
scas
fs
add
adc
sbb
adc
test
shl
add
or
jbe
and
and
lret
jo
test
mov
stos
pop
jecxz
dec
std
sbb
jbe
icebp
cmp
jecxz
cmp
sbb
popa
lods
xchg
fidivrs
imul
cmp
loopne
ret
lret
movsb
popl
fsubrp
inc
dec
mov
cmpsl
pop
stc
sbb
aam
inc
dec
sti
mov
roll
mov
add
mov
roll
mov
cwtl
addb
inc
push
fs
push
push
add
jo
add
mov
and
add
popa
push
sbb
cmpsl
repnz
shrl
adc
mov
cs
aad
mov
icebp
mov
mov
cmp
jle
sub
imul
jo
add
in
dec
out
add
cwtl
sbb
mov
mov
add
sub
add
mov
mov
adc
jae
testb
xchg
cvtps2pi
pop
add
add
add
inc
adc
stos
jmp
xchg
add
jp
cmp
jmp
mov
and
xchg
and
jae
mov
lea
popl
insl
pop
jp
pop
dec
add
cs
push
mov
pop
in
in
push
outsl
scas
shrl
sub
or
je
dec
inc
pop
out
add
scas
xchg
nop
fdiv
or
adc
or
add
lcall
adc
incb
add
fwait
outsl
pop
inc
out
pop
add
mov
jbe
sub
sbb
xor
lea
popf
or
out
fcomip
pop
aaa
pop
push
loopne
aam
mov
pop
sar
test
orb
mov
pop
push
cmp
pusha
xlat
add
lea
lret
cld
movsb
adc
add
dec
out
inc
andps
pop
mov
add
add
loope
aad
mov
sub
aas
adc
jle
jmp
add
lret
jo
push
les
call
cmp
jmp
xor
imul
and
ret
mov
push
idivl
sti
lods
fadds
mov
lret
lret
mov
mov
sbb
cmp
xchg
fldenv
repz
and
out
in
add
loopne
call
xchg
mov
mov
sbb
and
add
cmp
test
das
inc
jl
add
cmpl
pop
cs
mov
cmp
add
or
mov
out
shr
jne
push
mov
addl
arpl
adc
call
insl
add
insb
cmpsl
imul
repnz
add
push
dec
jno
sub
cmp
cmpsb
leave
cmp
fs
daa
enter
fdivl
add
add
fwait
jg
jns
inc
scas
test
push
jp
cwtl
decl
cmp
repz
or
xchg
add
push
movsb
pop
sti
add
jecxz
push
test
aas
out
lea
cwtl
das
add
add
repz
inc
push
pushf
and
rolb
inc
stos
mov
sbb
scas
cld
adc
add
stos
es
cmp
add
cmpsb
inc
int3
push
inc
sbb
les
repz
lahf
dec
mov
add
popa
adc
es
add
in
hlt
insl
add
jbe
inc
fcoms
push
pusha
aas
pop
mov
jno
mov
pop
test
add
inc
dec
cmc
cmp
adc
add
and
dec
jge
xchg
fwait
pop
add
movsl
and
xor
push
dec
add
add
push
stc
mov
adc
cmp
pop
in
add
fdivrs
pop
sarl
les
jae
mov
push
andb
mov
lock
loope
cmp
das
out
xor
inc
add
sub
cli
clc
add
insl
dec
add
dec
adc
and
cmp
pop
cltd
dec
jno
test
xchg
cli
add
addr16
xor
jb
push
das
cli
sub
int3
cmp
jecxz
jg
les
add
add
cmp
adc
jno
hlt
cmp
dec
xstore-rng
cmpsl
cmpb
icebp
sbb
add
shrb
add
fsubrl
mov
mov
xor
push
cld
xchg
xor
cmp
sub
in
mov
jle
lea
mov
scas
xchg
dec
mov
adc
mov
add
gs
sub
lea
add
jmp
jl
pop
cmp
pop
mov
add
sub
cmp
add
dec
add
sub
and
sub
in
test
dec
pop
pop
sub
pop
or
int
add
jb
mov
add
in
pop
mov
stos
fstl
es
cmp
cmc
bound
inc
xchg
xor
lret
jno
sub
sub
in
imul
popf
and
and
das
mov
xor
addr16
adc
outsb
jmp
add
jmp
or
int
faddl
subb
clc
pop
inc
pusha
insl
jno
les
pop
xchg
add
fsubrs
inc
xor
loope
lods
jbe
mov
pop
and
gs
aas
mov
fadds
lods
inc
cmpsl
cli
lds
cmpsl
push
shll
sbbl
adc
dec
xlat
jnp
pushf
mov
jnp
pop
das
add
sbb
cmpsb
add
ficoms
add
mov
pop
in
into
xchg
nop
adc
mov
imul
adc
sub
mov
dec
xchg
movsl
mov
negl
mov
int
cmp
add
cmp
sub
xlat
cmp
aaa
loop
jg
mov
xchg
mov
lock
ret
mov
stos
or
push
xchg
lea
add
xor
sbb
add
clc
mov
iret
add
adc
pop
je
xchg
int
cmc
jmp
add
jl
xor
jl
xchg
xor
inc
cli
push
es
out
mov
enter
pop
stc
cwtl
push
daa
add
mov
test
sub
and
hlt
or
aad
cmovnp
call
mov
cmp
xchg
xor
jmp
lea
cli
fimull
outsb
mov
pusha
add
mov
test
jo
add
xchg
mov
fdivl
ss
add
pop
insl
push
xor
cmp
add
addl
mov
ret
pop
ljmp
sub
push
jb
ret
add
xlat
in
add
sub
cmp
cmp
movsb
enter
add
adc
pop
xchg
sahf
dec
imul
or
popf
cmc
gs
leave
out
insb
mov
add
push
jbe
clc
push
leave
cs
std
dec
dec
mov
adc
cmp
pop
shld
jmp
and
xor
pop
cmc
jmp
in
adc
add
stos
push
inc
add
mov
mov
sbb
outsb
push
out
or
push
xchg
add
shrl
ja
xor
sub
pop
cmpsl
xor
pop
adc
jbe
mov
xor
dec
xor
rclb
pop
dec
and
mov
dec
and
and
add
mov
add
movsb
int3
sahf
test
jno
sbb
push
scas
hlt
inc
add
ljmp
stos
nop
not
cmpsb
jo
push
data16
icebp
add
mov
jg
mov
lods
lret
movsb
xor
repz
and
das
sub
xchg
je
lcall
dec
aas
leave
scas
cmp
add
jg
lock
push
rolb
scas
shlb
add
add
add
adc
addr16
inc
popa
dec
mov
adc
push
jnp
call
inc
add
jg
add
add
xor
ja
push
je
xchg
pusha
lods
lds
add
inc
ljmp
add
imul
adc
inc
pop
mov
mov
adc
sub
mov
mov
into
jb
push
add
mov
lcall
int3
xor
or
mov
rclb
dec
or
leave
iret
push
mov
lahf
pop
js
in
and
jle
fistpl
add
xor
enter
and
xlat
ficomps
jae
jbe
fiaddl
add
rcr
add
xchg
push
and
sub
inc
mov
add
add
mov
ss
pop
push
movsl
mov
lcall
push
sahf
xchg
hlt
inc
clc
std
ret
lds
dec
add
pop
js
push
adc
mov
add
pusha
loopne
imul
repnz
add
arpl
xlat
ja
popa
inc
push
mov
outsb
cmp
stc
imul
xchg
sbb
fldl
test
shlb
mov
fdiv
out
pop
cmp
test
out
dec
adc
nop
and
and
clc
inc
cmp
add
mov
dec
xlat
testl
add
sahf
xchg
nop
add
pop
out
inc
leave
cmp
pusha
incl
jmp
add
jnp
push
mov
lods
call
fcmovb
pop
sub
fsubrl
lds
andl
cmc
or
add
mov
jb
test
in
add
lahf
fwait
fs
xor
cs
pop
add
sub
add
les
movsl
and
sub
add
sub
inc
xor
and
mov
jecxz
add
xor
test
fsubrs
add
inc
add
movsb
scas
test
lods
and
cmp
repz
mov
xor
push
fidivl
add
add
sbb
loope
push
adc
adc
jecxz
push
cmc
or
sbb
xchg
ret
sbb
pushf
cmpsb
xchg
data16
scas
mov
sbb
gs
jns
pushf
addr16
xchg
inc
add
movl
sbb
xchg
cmp
xor
jb
mov
roll
fwait
cmc
std
push
add
addr16
pop
hlt
jmp
mov
or
fsubs
ret
pop
jne
pop
inc
mov
jbe
inc
mov
xlat
sub
inc
fsub
add
jne
je
sub
lds
fstl
jecxz
test
adc
add
mov
xchg
add
out
cld
add
mov
pop
mov
je
or
pop
xlat
push
lods
sarl
test
cld
in
jo
push
cwtl
add
add
push
pop
sbb
or
add
add
add
sbb
sbb
or
push
add
add
push
scas
movsb
insl
xchg
add
mov
mov
jecxz
push
xchg
adc
mov
add
leave
add
add
test
pop
jno
add
add
xor
xchg
movsl
jmp
inc
push
xchg
jecxz
clc
pop
cmp
enter
adc
add
incl
push
frstor
mov
cld
rcrl
cmp
lods
inc
push
jae
roll
mov
int
mov
bound
or
jae
add
bound
add
add
xor
or
cwtl
add
push
push
lea
pop
cli
jnp
xchg
sbb
adc
and
and
mov
and
clc
or
fsubrs
pop
dec
push
xchg
insl
mov
adc
adc
mov
sbb
push
push
mov
sbb
cli
jne
push
mov
dec
push
rolb
dec
add
add
xchg
inc
adc
mov
lods
out
and
test
xor
cmp
xchg
inc
push
call
data16
shll
inc
outsl
add
movsl
or
mov
out
sub
xchg
rcrl
jns
add
pop
addr16
jo
adc
rcll
loope
jno
pop
cwtl
aam
movsl
cmpsb
fiaddl
inc
testb
mov
xchg
sbb
ret
cwtl
pop
in
sub
mov
inc
inc
pop
pusha
push
stos
mov
xchg
jo
dec
iret
ljmp
dec
ss
pop
test
pop
adc
das
fmull
cmpsb
int
jl
push
xchg
or
in
hlt
push
and
add
pop
ficoml
lahf
cs
add
push
enter
add
add
scas
popf
add
cmpsb
bound
adc
repnz
add
push
add
push
iretw
add
pop
pop
cmp
mov
ja
lock
push
shrl
cmpsl
cli
xchg
push
pop
xor
loop
dec
push
data16
add
xor
clc
inc
mov
sub
daa
push
clc
pushf
hlt
pop
lds
mov
pop
add
cmp
out
mov
mov
cli
sub
jmp
cmpsb
adc
sahf
dec
adc
xchg
lcall
sub
fsubr
xor
test
or
popa
lret
pusha
mov
addr16
scas
out
cmovns
lock
xorb
mov
xchg
and
push
iret
jl
xor
int
les
scas
add
sub
lea
lret
subb
mov
mov
add
repnz
add
sub
mov
add
hlt
add
dec
ja
sub
or
inc
add
ds
add
sbb
push
inc
mov
daa
add
adc
jne
push
pop
add
shlb
push
inc
rcrb
xchg
out
repz
add
push
and
mov
jnp
clc
lret
stos
hlt
je
add
push
test
sbb
inc
pop
and
nop
aaa
mov
lret
ss
mov
xor
outsl
shrb
sub
cmp
jp
add
imul
dec
cmc
cmp
inc
lods
xchg
fwait
mov
cld
filds
sbb
mov
add
add
xchg
and
ja
sbb
push
sbb
push
xor
in
test
inc
lcall
cmc
push
jns
shlb
jecxz
imul
add
jmp
xchg
add
add
mov
or
adc
ret
sahf
pop
pop
clc
add
lcall
mov
push
repnz
outsl
fsubrs
inc
jg
daa
movsb
int
cwtl
aad
push
popf
lods
xchg
pop
jge
dec
pop
imul
and
or
imul
mov
mov
mov
mov
imulb
int3
fcmove
jge
push
xor
push
cltd
out
in
mov
push
lock
add
fstpl
sbb
xchg
mov
push
push
push
add
adc
rclb
das
add
icebp
xchg
add
in
lds
ljmp
xor
ds
movsb
sbb
scas
into
int3
or
add
sarb
pop
add
mov
cmp
and
xor
add
lret
mov
and
mov
jl
pushf
sub
sbbl
or
orb
push
xor
mov
lret
xor
stc
shll
push
int3
js
mov
hlt
addr16
cs
jg
mov
mov
xor
add
mov
inc
frstor
dec
fcoml
add
pushf
imul
dec
add
pop
movsb
sub
add
cmovbe
sub
fisttpl
ja
add
dec
in
xchg
add
add
nop
leave
pop
mov
lret
mov
aaa
pusha
jno
dec
cmpsb
int
mov
jge
add
movsb
inc
jnp
pop
insb
js
jl
push
sub
inc
aaa
fmulp
sti
daa
xchg
stos
xchg
and
jge
or
scas
outsb
or
mov
aas
jmp
mov
sub
xchg
sub
dec
data16
add
push
out
add
add
lcall
popf
test
imul
fmuls
add
fwait
stos
and
cltd
and
adc
rcr
and
add
aaa
add
add
pop
data16
mov
jl
idiv
scas
fsubrs
sti
arpl
dec
or
add
movsl
scas
adc
and
cmc
loop
jecxz
aad
insl
gs
repz
mov
add
pop
lcall
stos
sub
imul
mov
int3
cmpl
pop
add
xor
mov
ss
fcmovbe
pop
xlat
ficompl
mov
push
inc
imul
notb
add
loop
aas
outsl
add
in
mov
fbld
mov
add
cmpsb
push
loop
leave
xchg
scas
mov
inc
negl
or
popa
jle
jg
out
and
mov
inc
aas
loope
in
std
cmp
cli
dec
in
inc
jmp
mov
pusha
xchg
stos
dec
roll
mov
add
cli
cmpl
clc
jmp
mov
push
add
xor
and
popa
add
add
pop
sbb
fs
in
minps
jbe
dec
aas
sub
fadds
js
dec
dec
sarb
imull
inc
repz
add
js
xor
jnp
xchg
cmovg
pusha
pop
insb
test
insl
sbb
jne
andb
pop
sub
add
pop
mov
pop
movsl
sahf
mov
xor
and
add
insb
sbb
adcb
sbb
cwtl
jge
pop
add
xor
jge
aam
addl
mov
push
enter
add
jle
add
adc
add
add
add
lds
ljmp
in
xchg
ja
out
or
data16
pop
and
push
stos
movsl
jl
insb
lea
das
fs
loop
jo
fwait
fs
jnp
sti
add
insl
xchg
into
and
imul
insb
xchg
add
sahf
sbb
test
mov
lahf
add
outsl
outsb
cmp
cmpl
filds
mov
data16
pop
xor
daa
xlat
pop
push
aas
repnz
andb
gs
cwtl
mov
xchg
inc
add
sub
mov
jecxz
fadds
mov
adc
lret
dec
inc
add
xchg
call
add
inc
imulb
fcmovne
nop
or
push
push
inc
hlt
cltd
mov
mov
push
cmp
xor
negl
or
pop
push
fcompl
jmp
loope
lcall
push
add
sbb
in
fidivl
adc
mov
push
mov
and
cmp
xlat
mov
add
out
inc
and
cmp
nop
sti
ss
aam
lods
and
mov
in
ret
cwtl
xchg
pusha
loopne
dec
inc
mov
pop
jge
cmp
mov
aam
outsb
addb
cmp
repz
sub
int3
mov
daa
sbb
fimull
mov
das
stos
out
xor
pop
jp
mov
mov
jmp
sahf
je
lret
je
sbb
mov
xchg
sbb
adc
shl
xor
leave
jae
mov
into
pop
lock
or
fucom
inc
pop
jo
int
pop
add
jle
jno
mov
fisttpll
push
xchg
call
add
push
fstpl
xchg
cmp
mov
mov
loope
mov
add
push
shlb
and
outsl
cmp
add
mov
xchg
inc
mov
out
dec
pop
add
fcom
inc
cmp
mov
add
xchg
popf
inc
adc
xor
idivb
negb
test
pusha
sbb
call
and
in
or
add
xchg
xchg
sub
sahf
pcmpgtd
mov
sub
push
hlt
mov
jne
lods
add
pop
and
repz
cmpsb
test
adc
int
lahf
push
add
adc
push
es
jbe
cmp
test
adc
je
sbb
dec
add
xchg
push
outsl
pushf
sahf
or
hlt
stos
lock
add
add
add
push
rcrb
cmp
icebp
xchg
rcl
mov
push
sub
repnz
cld
lahf
inc
sub
sahf
gs
or
rcrl
xor
pop
ja
xchg
filds
aad
scas
cmp
xor
notl
add
add
jmp
stos
iret
jne
rolb
loopne
sbb
add
mov
insb
and
xchg
cld
cmp
add
push
xchg
mov
adc
adc
or
mull
or
inc
jb
add
in
imul
sarl
stos
jnp
lea
inc
dec
arpl
add
mov
dec
movsb
add
sbb
xchg
in
fbstp
cmpsl
push
mov
rcll
dec
add
sbb
add
add
xor
add
imul
add
adcl
lldt
sub
aad
fsubrs
sub
xchg
movsb
cmp
shrb
xchg
mov
repnz
lock
std
and
dec
and
shl
push
aam
xor
jl
addr16
or
jnp
and
mov
and
mov
fcomps
mov
in
mov
enter
push
xchg
xchg
add
mov
xor
test
leave
add
mov
ret
xlat
add
and
xchg
jbe
add
add
mov
icebp
add
xor
push
aad
mov
in
fmul
dec
addb
add
adc
pusha
inc
dec
add
inc
mov
xor
ret
adc
in
ret
gs
mov
add
jg
xor
push
aaa
pop
mov
mov
jg
int
sbb
xchg
push
add
fwait
mov
subl
dec
out
push
xchg
mov
enter
mov
jno
or
jns
xchg
dec
lods
and
pusha
aaa
out
sub
jge
mov
adc
push
add
jg
jecxz
iret
xchg
mov
lret
lods
mov
icebp
pop
adc
repz
arpl
je
inc
jmp
int
add
xor
add
fistpl
sbb
gs
movl
add
and
xor
xchg
in
add
data16
jle
into
dec
add
lds
scas
add
adc
sub
ret
fwait
mov
fadds
enter
sbb
add
inc
push
add
repnz
out
int3
sti
jnp
hlt
pop
jb
shr
adc
dec
inc
hlt
jnp
cmp
jmp
das
and
mov
sbb
ljmp
cltd
mov
pop
pop
repnz
gs
sub
pop
jns
add
adc
xchg
mov
cmpsb
lock
add
sbb
in
jmp
add
shll
cmp
or
adc
jecxz
sub
pop
pop
xor
add
xlat
dec
fdivs
mov
inc
fwait
mov
aas
xor
lret
mov
rcll
xor
cmpsb
or
mov
ss
push
sarb
mov
mov
out
add
aaa
adc
arpl
addr16
mov
loopne
add
out
push
outsb
jb
jg
dec
adc
popf
mov
mov
and
sub
outsb
ret
add
mov
add
push
or
jnp
mov
outsl
lods
test
add
sbb
leave
cli
movw
dec
push
sbb
fucomip
add
bswap
leave
rolb
insb
ret
fnsave
stos
add
sub
std
add
lcall
ficomps
xchg
or
cmc
xchg
pushf
cmp
ja
push
lock
lods
add
pop
in
xchg
pop
sbb
cmc
add
mov
cld
str
out
dec
xchg
jmp
cmp
add
sbb
add
or
loope
nop
push
cs
in
cmpsl
push
pushf
mov
jg
push
fsubrs
add
xor
or
gs
mov
std
lods
scas
pop
nop
adc
out
xchg
sbb
xchg
add
cmp
dec
xchg
push
enter
or
cwtl
adc
in
test
outsb
sarb
iret
adc
clc
inc
add
mov
add
push
fisubs
les
mov
shlb
add
mov
push
mov
xor
dec
aad
push
sub
cmpsl
mov
inc
inc
insl
repz
popf
insb
pushf
hlt
pusha
std
sub
adc
xchg
aas
imul
cwtl
imul
inc
inc
lahf
fidivrs
jne
add
in
mov
nop
imul
scas
les
clc
xor
test
ds
push
jbe
sub
sbb
scas
pop
pop
mov
test
cmpl
andb
jne
xchg
inc
sub
jecxz
inc
mov
mov
pop
int
aam
aad
or
iret
cmpl
cmp
cmp
jns
scas
mov
icebp
data16
flds
daa
popa
xchg
add
cmp
lahf
inc
adc
lods
inc
mov
gs
or
je
pop
jno
or
lea
insb
jae
jae
and
sbb
push
inc
enter
jne
add
push
aad
enter
push
pop
add
add
add
mov
bound
into
jb
cltd
add
int
add
cmp
add
add
fldcw
hlt
dec
lods
jle
dec
out
cwtl
inc
adc
sbb
mov
sub
stos
test
ds
addr16
pop
movl
xor
xor
add
popf
mov
sub
add
jns
popa
add
and
out
jge
shrl
rcrl
test
dec
scas
add
pop
and
ds
in
dec
push
mov
imul
add
inc
add
push
sub
iret
das
arpl
into
mov
mov
jge
push
in
flds
add
inc
push
fcom
jbe
leave
sub
fadds
notb
cltd
jl
mull
mov
inc
mov
test
jle
mov
or
sahf
sub
shlb
loopne
mov
mov
adc
outsb
pop
bound
inc
lea
mov
and
out
stc
cltd
sbb
xor
aad
cmp
mov
cmp
jmp
test
jns
ljmp
push
es
inc
dec
jg
add
cmpsb
pop
cmp
xlat
inc
xchg
mov
and
pusha
mov
insl
shl
sbb
fwait
roll
cld
daa
cmp
mov
mov
divl
sub
add
test
nop
loopne
or
or
sub
addr16
roll
clc
or
jo
xorl
add
scas
ret
clc
in
dec
sub
rorb
add
jmp
cmp
subl
add
dec
or
pushf
repnz
jle
cmpsl
mov
lea
mov
rolb
cld
sub
jmp
add
jnp
movsl
push
mov
xor
hlt
aam
pop
popf
js
sbb
xchg
daa
in
xchg
outsl
or
add
add
pop
xor
iret
pop
mov
add
daa
out
loop
cld
sbb
pop
iret
mov
lock
stos
gs
and
es
add
lods
insl
jbe
std
scas
or
ljmp
pop
pop
add
jne
jae
movsl
and
fiadds
adc
and
add
les
inc
cmp
ja
aas
add
dec
and
sub
mov
mov
mov
lret
sub
and
add
pop
add
pop
fadds
inc
jmp
add
loopne
add
jno
lea
sub
push
mov
inc
dec
mov
push
mov
shrl
mov
vhsubps
add
nop
sub
jecxz
sbb
add
or
xchg
sub
dec
dec
jecxz
add
and
add
cmpsb
add
arpl
or
xor
ds
push
cmpl
fnstsw
jl
dec
add
repnz
testb
mov
stc
inc
imul
or
add
add
out
mov
push
call
lods
popa
rcrl
mov
in
js
push
push
addr16
sti
out
add
mov
test
add
sub
js
and
inc
or
pop
jp
push
push
fisubrl
mov
and
out
add
mov
popa
int3
ret
mov
mov
inc
jmp
and
cltd
enter
push
push
adc
test
mov
lret
or
inc
shrb
xchg
pop
mov
jne
into
sbb
xchg
add
push
sub
mov
in
ljmp
dec
inc
mov
je
sbb
ja
faddl
xor
pop
mov
jae
sbb
sbb
lds
add
in
movsl
xchg
add
adc
add
mov
mov
add
test
push
out
flds
aas
sbb
cmpsb
cs
cmp
and
enter
jle
test
pop
sub
sahf
xchg
push
aaa
mov
fildl
test
ss
sbb
and
jp
sbb
sub
icebp
js
push
and
dec
push
aam
add
and
lds
mov
or
lret
les
jg
add
rcl
dec
or
xor
sarl
mov
out
std
pop
add
nop
jne
popf
dec
push
addr16
setne
in
adc
add
xlat
add
xchg
int
in
std
mov
daa
adc
andl
sbb
adcb
mov
add
xor
ja
sbb
and
sbb
mov
push
cmpsl
or
cmp
into
mov
add
xlat
pop
push
fcompl
dec
idivb
add
lret
cs
xchg
and
lods
mov
popf
sbb
cld
or
xchg
cmpl
mov
jle
loop
add
adc
add
pop
add
add
add
test
lds
mov
dec
jno
std
testb
add
int3
mov
sub
xchg
popa
out
pop
xchg
add
cmpsl
add
pop
jle
add
pop
in
add
leave
mov
mov
cs
fmull
sarb
add
push
and
aaa
xlat
lds
add
add
mov
mov
xchg
je
and
dec
sbb
or
ljmp
loopne
pop
fldt
scas
adc
dec
or
mov
ficoms
adc
sub
std
mov
leave
jecxz
fwait
cmp
add
mov
push
add
inc
add
add
adc
lods
inc
add
mov
or
notl
out
in
sbb
stos
mov
pop
inc
add
mov
cli
add
sti
sbb
aas
loop
xchg
push
add
cmp
sbb
xchg
pop
add
add
mov
mov
add
lahf
pop
jmp
ja
jo
push
gs
dec
cmp
xor
daa
push
mov
std
lret
sbb
scas
sbb
xor
mov
add
pushf
add
aam
mov
in
add
iret
daa
cli
add
dec
xchg
dec
aad
xor
sbb
mov
mov
cmp
jl
add
rolb
push
mov
testb
jecxz
cmp
pop
test
push
jge
add
or
dec
sbb
dec
fstps
cmp
loopne
add
xor
pop
pop
jae
repz
adc
scas
add
sub
mov
out
sbb
mov
imul
mov
add
jbe
jp
sbbb
sub
lock
movsb
dec
dec
cmp
mov
test
sbb
pop
add
add
repnz
jp
add
fstpt
mov
sub
insb
mov
sub
jbe
add
je
add
adc
in
inc
inc
jb
dec
mov
icebp
mov
out
sbb
adc
xor
mov
into
je
imul
test
les
negl
jb
sub
or
sbb
in
pushf
pop
addr16
xchg
dec
jo
push
jns
add
sub
mov
pushf
pop
adc
fnsave
nop
add
addr16
or
add
pop
jle
movb
xchg
int3
add
cmp
ss
je
inc
xor
in
es
iret
pop
dec
add
stc
data16
je
push
sub
cli
fucomp
out
dec
daa
ljmp
jb
stos
leave
xchg
lea
icebp
inc
add
stos
mov
pop
lret
or
pop
add
aas
ret
mov
xor
movsl
lahf
sub
cltd
adc
jo
pop
loop
cltd
in
jmp
cmp
sbb
pusha
and
add
outsl
ret
jno
mov
sarb
add
mov
dec
add
js
mov
clc
jecxz
test
add
add
subl
into
add
mov
inc
sub
xor
add
data16
dec
mov
gs
and
jno
mov
mov
je
lcall
test
aas
or
fildl
sub
sbb
dec
xor
insl
dec
push
add
bound
push
dec
or
cmp
inc
add
fistpl
loop
pop
fcomps
scas
mov
add
stos
nop
movlhps
scas
mov
test
sbb
push
add
add
jbe
mov
add
sti
mov
add
leave
xorb
push
inc
lds
out
add
shufps
es
lods
mov
add
push
rclb
push
lea
movsb
add
add
mov
add
sbb
mov
movsl
jo
icebp
repz
push
scas
adc
outsl
push
fsqrt
mov
add
movsl
add
jne
pop
sbb
push
scas
add
lret
pusha
jne
add
enter
repz
cmc
adc
scas
mov
dec
inc
push
ljmp
fstp
or
push
add
add
gs
cmpsl
pop
pop
add
mov
cmc
inc
jmp
add
pushf
add
loope
in
imul
inc
mov
mov
test
stos
mov
sarl
out
movsl
dec
out
push
subl
push
dec
xchg
or
dec
daa
add
add
add
popa
cs
leave
pop
dec
jns
add
icebp
cltd
or
divb
repz
mov
or
mov
cmp
add
hlt
addr16
mov
push
pop
or
das
add
push
mov
lods
clc
or
add
sub
pop
xchg
sbb
mov
cld
or
sahf
stc
clc
add
pop
repnz
mov
bound
push
or
pushf
scas
pop
cld
jp
xchg
add
lcall
add
mov
mov
out
and
loop
push
mov
and
mov
xchg
inc
xor
add
mov
add
xchg
jp
gs
pop
cli
mov
add
out
notl
sbb
and
add
and
sbb
add
jno
sbb
xor
cs
popf
adc
and
pusha
ds
adc
mov
shl
ds
cmp
cmp
mov
in
push
sbb
inc
scas
and
js
add
mov
xor
ss
outsl
or
rolb
add
pusha
call
iret
cmc
mov
fcoms
repz
add
inc
add
sub
add
pop
lock
add
push
call
add
add
cltd
subb
inc
loop
out
dec
add
fldenv
insb
scas
add
pop
lcall
mov
addb
push
xchg
cmpl
addl
dec
fcmovnu
pop
add
xlat
pop
andb
popf
inc
push
add
nop
push
cmp
jo
xor
out
add
in
int
dec
or
inc
incb
add
daa
jp
scas
movsb
dec
cltd
add
mov
pop
je
add
movb
movsb
inc
pop
rcl
inc
dec
leave
sub
add
daa
jbe
cld
add
rorl
add
leave
cmpsl
or
dec
arpl
push
add
add
or
push
push
in
fwait
pop
or
stos
xchg
push
add
mov
loope
popa
out
insl
inc
xor
mov
cmpsl
fs
sbb
cltd
mov
jo
ja
pop
push
add
add
inc
pop
mov
or
ja
lahf
add
jne
aas
flds
xor
add
adc
add
movsb
mov
add
nop
pusha
in
adc
pop
mov
jnp
ds
sub
outsb
dec
loope
mov
ret
in
cmp
push
lret
xchg
cmpb
xchg
sbb
andl
sbb
xchg
mov
adc
dec
scas
mov
inc
clc
mov
je
daa
mov
cli
cmpsl
addr16
js
out
lds
mov
jbe
sub
and
shrl
icebp
rorl
jnp
lcall
xchg
push
or
pop
into
dec
imul
pop
or
dec
mov
icebp
adc
mov
mov
push
push
ds
test
fiadds
arpl
dec
and
pop
sbb
add
and
test
mov
push
or
pop
cltd
sub
ret
iret
add
aam
cwtl
jne
cld
add
cmp
pop
leave
jae
int3
lea
mov
mov
gs
inc
or
popa
sub
pop
adc
pusha
setg
push
aaa
sbb
ljmp
add
push
cld
pop
cli
out
xor
add
mov
or
rcr
sub
fwait
shrb
add
fwait
adc
les
and
ljmp
dec
in
mov
add
mov
je
cmp
xor
fistl
cld
push
lods
sbb
pop
jl
cmpsl
xchg
inc
faddl
into
test
add
mov
ljmp
add
lock
push
mov
das
add
add
add
icebp
into
xchg
xor
xchg
mov
pusha
xchg
jns
popa
push
add
add
cmp
pusha
add
add
mov
repz
and
inc
outsl
and
lret
lahf
ja
out
adc
aas
dec
arpl
fnstenv
add
push
xor
or
add
fs
lock
pop
jmp
lret
pop
daa
mov
mov
les
rorl
add
addb
in
xchg
shlb
xchg
add
loope
xchg
add
jg
pop
sbb
inc
push
pop
rcrl
std
data16
mulb
mov
test
lcall
mov
addr16
mov
mov
dec
cwtl
add
mov
cmp
in
shl
and
add
push
add
pushf
aas
pop
dec
hlt
mov
lock
repnz
adc
movsb
jnp
add
stos
push
fldenv
add
add
in
xchg
dec
loop
inc
jae
test
pop
mov
dec
add
dec
mov
and
in
dec
pop
jg
sahf
in
mov
inc
lods
add
mov
daa
gs
jg
adc
add
and
and
mov
push
outsb
add
dec
rcll
in
add
add
movsb
std
arpl
adc
mov
add
push
add
into
jmp
add
dec
push
daa
lea
mov
push
stc
add
mov
jnp
int3
test
stc
iret
add
jg
xor
or
imul
mull
add
pop
dec
scas
out
adc
rolb
sbb
inc
hlt
mov
add
add
mov
loop
add
add
pop
add
popa
lahf
mov
outsl
mov
push
in
sbb
xchg
push
lcall
adcb
or
inc
xor
in
inc
loopne
data16
mov
adc
das
mov
push
mov
mov
sbb
add
test
es
cmp
aaa
ja
fldpi
adc
xlat
imul
cmp
in
mov
xchg
stc
push
loope
jnp
xchg
jno
or
add
jge
add
mov
mov
xor
pushf
or
scas
and
sbb
and
lret
jmp
jle
pop
roll
subb
jae
imul
adc
inc
cmp
add
add
add
jg
lahf
mov
test
xchg
lret
jno
arpl
push
add
cmp
cmpsl
mov
in
hlt
inc
and
mov
mov
mov
xchg
dec
push
add
mull
in
adc
aas
aaa
adc
shll
cmp
cltd
sub
dec
rclb
jo
xchg
mov
fnstsw
ljmp
fiadds
sbb
test
out
add
cmp
mov
adc
jbe
dec
aas
push
addr16
clc
enter
test
test
rclb
pop
push
lahf
in
aad
mov
dec
std
jle
mov
out
std
cmpsl
or
dec
push
pop
mov
jne
lds
xor
adc
outsw
imul
or
gs
roll
jle
int
xchg
cmpsb
sbb
push
add
mov
add
add
jge
and
jae
push
outsb
aad
fcoms
dec
mov
andl
jecxz
xchg
xor
call
xor
shlb
pushf
cs
ret
mov
test
sbb
jb
or
adc
mov
aam
cmp
test
add
jo
or
mov
daa
push
xor
mov
push
pushf
repz
mov
loop
mov
outsb
push
in
repnz
testb
add
add
in
xor
inc
idiv
mov
loopne
add
pushl
push
inc
les
push
lret
les
mov
and
xor
jmp
push
push
cmp
mov
and
add
test
scas
arpl
dec
pop
test
movl
add
les
sub
and
pop
inc
pop
and
add
and
cmpsb
xchg
pop
add
sbb
in
xor
mov
xchg
dec
cmc
xor
push
jnp
pop
push
mov
filds
pop
test
stc
push
add
add
stos
jl
test
sub
or
cmp
sub
shll
dec
out
add
add
dec
xchg
ret
or
push
jns
cs
or
push
or
inc
mov
leave
in
sbb
add
mov
int
roll
lock
in
mov
xlat
cmova
int
lret
stos
flds
orl
jmp
add
jbe
stc
enter
add
push
cmp
fxch
xchg
sub
mov
bound
mov
inc
pop
add
jbe
jmp
mov
add
nop
xchg
push
sub
movsb
sbb
stc
push
and
arpl
add
ret
sbb
mov
sub
adc
insb
iret
in
add
xchg
push
dec
adc
add
out
insl
loopne
jg
push
das
ficoms
das
mov
out
dec
cmpsl
stos
loope
call
sub
bound
sahf
loop
add
add
mov
in
add
add
mov
ffree
add
movsb
das
sbb
inc
add
in
cld
sub
lret
cltd
roll
lock
int3
xorb
fwait
popf
add
push
push
movsb
pop
jmp
jns
test
stc
test
out
sub
or
xchg
fwait
inc
add
add
add
sbb
dec
rorb
add
lods
int
xor
repz
sti
add
mov
adc
in
mov
cli
lds
out
jp
iret
ss
sbb
push
push
jbe
popa
inc
aam
xchg
sti
sbb
cmp
and
movl
pop
mov
pop
pop
or
push
sub
mov
mov
pop
pop
in
mov
dec
in
scas
push
inc
in
cld
jae
andb
daa
ror
dec
aas
add
add
pop
pop
mov
out
stos
insb
xchg
pop
xor
shr
inc
ret
mov
int3
test
outsl
pusha
add
xchg
cmp
ss
jae
or
dec
push
add
int3
or
fdivrl
iret
pop
push
push
add
sbb
lea
nop
in
mov
mov
test
inc
push
dec
mov
lcall
jnp
stc
xor
test
push
add
xchg
jne
add
add
aaa
add
clc
add
add
loopne
add
jo
add
mov
ja
mov
sbbb
iret
out
iret
and
sub
add
add
pand
push
cmp
fucomp
cli
insl
aaa
pop
mov
xor
add
jae
int
pop
add
add
sub
nop
xchg
cli
add
mov
in
add
add
aas
inc
rcll
push
inc
cmpsb
add
pop
pop
aas
mov
sbb
lds
lods
in
ror
ljmp
add
jl
scas
xlat
fnsave
dec
mov
enter
aas
xchg
popf
in
mov
sti
roll
cmp
dec
lds
mov
sub
sub
lock
inc
mov
das
cmpsl
js
add
adc
fdivrl
add
xor
add
add
shrb
loope
mov
pop
dec
push
add
fimull
dec
adc
add
add
xor
aad
adc
and
add
stos
jb
pop
sub
fwait
leave
std
test
test
lret
add
xor
mov
lret
bound
insl
jbe
add
movsl
push
mov
add
mov
ret
cmp
pop
in
std
mov
lock
xchg
int
jbe
push
mov
mull
sub
bound
pusha
xchg
pop
add
rcll
add
test
jae
sbb
dec
jecxz
iret
mov
push
sbbb
add
add
insl
mov
sahf
add
and
xchg
sbb
mov
add
sbb
or
cmpsl
jge
sub
mov
ret
aam
jmp
add
jmp
lahf
add
push
add
add
add
add
inc
xchg
mov
popf
xchg
add
add
sub
add
sub
xchg
add
pop
ret
mov
sbb
adc
lahf
and
add
nop
adc
int3
lods
enter
leave
xchg
add
xchg
mov
in
cmp
roll
xor
cltd
jnp
cmpsb
mov
cmp
scas
loopne
out
push
fcomps
movsb
dec
sub
fs
aam
cmp
sti
addb
rolb
jo
or
mov
bound
pop
test
repz
jle
push
jmp
pop
les
aad
lret
add
add
pop
jae
add
loope
add
loope
jge
fdivs
rolb
ret
mov
pop
jns
ljmp
repz
aad
sub
mov
jnp
negb
in
daa
in
lods
add
pop
fdivrl
jae
dec
adc
jno
push
scas
ds
add
add
add
mov
inc
testb
dec
add
shrb
popf
pop
or
adc
inc
inc
dec
add
cli
and
repz
gs
rolb
cs
add
and
sahf
xchg
outsb
add
mov
sbb
and
add
cwtl
shl
push
add
add
pop
inc
cli
hlt
subl
jbe
test
jae
stos
lcall
or
dec
jl
clc
lea
int3
rcrb
jo
xchg
scas
push
push
cmpsb
mov
lock
dec
add
xchg
movsl
and
test
in
dec
fwait
add
dec
adc
iret
stos
sbb
cmpsl
jns
test
sbb
pmaxsw
mov
cmp
add
lock
mov
push
pop
fisubrl
mov
and
in
or
add
lcall
or
xchg
call
add
or
push
lret
or
xchg
int3
xchg
les
and
jae
or
mov
fadd
dec
ret
pushf
out
mov
add
mov
mov
add
sarl
push
bswap
fs
fildl
xchg
or
sbb
lods
cwtl
movl
iret
xchg
dec
add
stos
xor
mov
jl
add
repnz
pop
add
add
sub
mov
add
sbb
add
xchg
stos
mov
clc
xor
pusha
or
sbb
cs
or
add
andl
sahf
pop
or
lahf
ja
xor
add
pop
add
push
rorl
xchg
or
sub
arpl
addr16
pop
ds
push
jge
out
in
lret
in
xchg
pop
adcl
sbb
test
sub
xorl
ret
cmp
xchg
inc
jp
sub
int
notl
mov
inc
mov
jle
aas
add
mov
imul
mov
arpl
sbb
cmp
mov
mov
dec
or
lcall
cmp
loop
hlt
add
sbb
in
adc
int3
xor
mov
add
filds
jne
stos
xlat
mov
pusha
dec
out
clc
dec
sbb
jecxz
jecxz
add
mov
cmpb
arpl
add
jae
jg
xchg
jnp
pop
push
sarb
add
or
lahf
push
or
sahf
dec
add
add
and
fisubrl
lret
cmpb
add
scas
lods
and
cli
test
mov
inc
aaa
jnp
arpl
adc
pop
lahf
jns
std
sbb
cmc
xor
sbb
daa
xchg
leave
or
arpl
sbb
dec
cli
jecxz
pop
or
movsb
add
addr16
jp
sahf
mov
sbb
aaa
lret
dec
sbb
inc
outsb
test
pop
jge
push
ljmp
sub
jo
pop
push
rclb
jge
scas
add
add
outsb
sbb
sbb
faddl
mov
inc
push
shl
adc
loop
add
pop
push
popf
test
add
dec
xor
outsl
add
push
sti
ffreep
stos
xchg
mov
jp
add
es
lahf
mov
add
add
inc
xor
xchg
fsubrs
dec
bound
fcomps
mov
xor
nop
mov
aaa
lds
mov
inc
jb
popf
xlat
pop
pop
cmpsl
dec
int3
pop
or
mov
gs
add
rorb
loope
bound
dec
outsb
nop
mov
ret
pop
pop
xchg
aad
dec
fistl
fiadds
arpl
mov
rolb
dec
add
loope
notl
xor
inc
int
mov
xchg
push
dec
adc
movsb
sbb
push
dec
shll
out
jecxz
out
xor
sub
jge
sbb
add
mov
jb
add
mov
add
sub
stc
jbe
add
rclb
jae
or
adc
mov
mov
mov
lret
int
pop
cli
es
jnp
pop
add
add
push
xchg
in
dec
popf
loopne
sbb
arpl
add
and
cld
data16
das
rolb
or
cmp
enter
jnp
xchg
loopne
pop
jp
xor
xchg
sbb
add
add
mov
lds
xor
cmp
adc
sarb
iret
addb
jg
mov
inc
das
pop
mov
or
dec
add
sub
xor
or
jle
add
js
nop
add
cmpsl
add
popf
out
pop
movsl
enter
sbb
xchg
cmpb
hlt
fcmovnb
fs
pop
jns
add
lds
adc
mov
add
add
lcall
sbb
mov
ftst
jo
add
push
mov
add
ds
iret
push
mov
ljmp
pop
fnclex
add
icebp
subb
inc
pop
lahf
pop
add
popf
loope
mov
ficomps
inc
ss
les
add
fcomip
add
dec
add
and
push
jle
andb
mov
mov
jno
inc
jbe
mov
popa
leave
jecxz
pop
xchg
ds
push
sbb
add
adc
jo
add
push
mov
xchg
or
adc
jo
stos
and
pop
mov
inc
adc
mov
ljmp
xor
add
push
add
fisubl
lods
add
nop
sub
mov
ret
inc
test
cmc
sub
push
mov
dec
jg
sbb
aas
pop
cld
mov
cmp
fsubrl
dec
mov
fadds
loopne
movsb
icebp
mov
scas
add
sahf
fisttpl
addr16
jle
and
dec
sarl
or
testb
test
rorb
lcall
jg
push
nop
fwait
out
std
xor
pop
in
outsb
mov
add
pop
xchg
enter
fmuls
stos
daa
mov
std
add
add
push
bound
pushf
sbb
mov
cmc
inc
add
pop
add
mov
cld
or
add
int
sbb
jmp
mov
inc
add
add
popa
scas
cs
ret
ljmp
pop
add
mov
mov
jae
hlt
xor
pop
mov
sbb
inc
popf
popa
inc
hlt
xor
mov
mov
out
mov
in
hlt
out
add
insl
pop
sub
pop
jnp
insb
add
sbbl
movl
fs
add
xor
fcompl
jl
sahf
mov
cmc
add
xchg
pop
push
lock
roll
adc
pop
xor
pop
addr16
adc
sbb
sub
add
xor
aas
es
push
pop
mov
add
pushf
incb
icebp
lret
adc
sbb
adc
lds
leave
pop
sub
inc
or
add
mov
cmp
cmp
add
mov
sbbb
add
push
push
mov
fs
dec
add
mov
add
pop
add
pushf
aaa
in
icebp
mov
xchg
add
mov
xchg
mov
bound
xchg
mov
loopne
xchg
notl
cmp
add
loop
push
add
push
loopne
dec
add
cmpsb
mov
jmp
filds
mov
xlat
fdivr
sbb
ds
sub
cmpsb
add
enter
xchg
gs
les
fildll
add
ss
add
or
mov
dec
aaa
cmc
dec
cli
add
stos
add
imul
mov
jne
pushf
incl
jle
jl
xor
sbb
add
je
dec
testb
rcrb
test
cmc
pop
mov
xorb
mov
cmp
in
xchg
pushf
cmp
and
sub
stc
mov
pop
out
leave
ret
ficomps
add
ljmp
bound
push
mov
dec
push
movsb
lods
add
outsl
gs
adc
in
out
and
adc
adc
cmpsb
rcll
mov
xor
inc
add
push
jle
aam
dec
arpl
mov
mov
mov
addr16
popl
mov
xor
out
outsl
outsb
or
or
icebp
sbbb
sub
fmull
sahf
add
pop
insl
push
adc
adc
in
iret
push
inc
inc
leave
mov
movl
mov
cmp
in
cld
subb
or
lret
inc
fstl
outsl
adc
jge
adc
test
shrl
fldcw
add
or
sbb
ljmp
sub
lds
xor
lds
add
add
jne
enter
cmpsb
pop
rolb
test
fs
aaa
xchg
test
add
addb
movsb
push
mov
lret
sbb
push
xchg
sub
add
daa
mov
jl
pop
mov
dec
andb
mov
jns
pop
fs
add
dec
push
sbb
add
adc
add
aas
pop
out
subl
sbb
xchg
pop
std
jge
pop
or
push
adc
sbb
loop
add
sahf
in
mov
add
lds
lcall
push
jae
add
mov
add
add
push
jo,pt
jb
adc
mov
push
or
cmp
es
or
add
add
scas
adc
stc
stos
push
add
add
popa
in
fnstsw
inc
imul
shlb
repz
mov
sub
jbe
test
add
add
jne
cmpsl
aaa
scas
add
sbb
int
nop
mov
mov
adc
add
sbb
add
popa
mov
push
add
add
add
sbb
lahf
sbb
loop
stc
mov
add
movsl
add
push
or
outsl
xor
mov
ss
xchg
test
in
sbb
push
outsb
push
push
ljmp
add
shl
add
aam
and
repnz
aad
sarl
fidivl
sbb
popa
test
ret
fsub
repnz
dec
enter
shl
and
mov
sub
sub
cli
pushw
fisttpll
add
pop
les
or
sub
frstor
rolb
adc
out
add
push
call
and
dec
repnz
cmp
dec
repnz
xchg
xchg
add
lods
add
test
lods
and
fiaddl
lcall
divl
jge
add
sti
shlb
das
push
add
or
sbb
loop
lock
push
lods
add
inc
adc
push
out
lcall
mov
push
into
fwait
sbb
mov
dec
pop
push
out
bound
xchg
das
adc
arpl
pushf
add
out
std
sbb
jnp
inc
push
add
lock
add
pop
sahf
repnz
pushf
xchg
loop
std
jne
or
ss
ret
sbb
jecxz
adc
call
mul
xor
add
stos
andb
fcoml
movsl
mov
je
cmp
mov
push
insl
inc
inc
inc
cld
jg
dec
dec
xor
cmp
jmp
sbb
pop
out
sbb
add
pushf
add
je
add
orl
ds
int
add
push
add
add
or
sbb
mov
mov
jae
cmc
add
add
xor
or
xor
mov
xor
cmpsb
out
inc
or
add
rcl
add
add
jmp
add
push
aad
sbb
mov
sub
ret
loop
mov
dec
xchg
hlt
enter
enter
mov
shrb
std
aam
mov
sete
or
into
cmp
jmp
aaa
add
add
add
call
sbb
adc
mov
xor
ret
push
sbb
cmp
sub
in
pop
mov
jns
add
pop
int3
add
sub
pop
add
xchg
rolb
add
push
ja
subl
xchg
test
add
mov
cli
into
mov
adc
out
add
xchg
cmpsb
scas
mov
add
xor
cmp
push
add
or
icebp
bound
stc
pop
fisttpl
out
sbb
push
pusha
ss
or
pusha
enter
jns
sub
sbb
lods
adc
lahf
movsb
in
push
in
add
aad
push
pushf
mov
into
loope
enter
dec
add
inc
add
xor
adc
fs
fnsave
ja
dec
jg
add
xchg
push
push
or
mov
cmc
ret
add
add
jbe
scas
push
xor
pop
mov
aas
mov
mov
cmp
sbb
dec
pusha
add
inc
jo
add
outsb
cmpsb
movsl
and
stos
push
out
insl
xor
fwait
adc
ficoms
or
insl
mov
addr16
pusha
sub
cmp
pop
cmp
ja
test
popf
adc
xchg
cmp
js
sub
add
lcall
or
ja
or
mov
push
push
ljmp
adc
mov
fs
add
add
push
mov
add
inc
or
rorl
insl
loope
test
int3
pop
sti
add
in
pop
jmp
in
or
mov
fs
call
enter
add
leave
aam
mov
and
fcmovnb
movsl
mov
mov
popa
stos
jmp
push
scas
rolb
sub
sub
jle
add
sbb
out
add
daa
push
xchg
adc
verr
cmp
sbb
int3
les
or
out
test
xchg
movsb
xchg
add
cs
xor
clc
loopne
cmp
sub
mov
push
out
test
add
dec
test
or
add
and
mov
add
sub
popf
scas
nop
and
mov
mov
mov
fidivrs
add
add
ja
je
fstps
mov
test
movb
or
jnp
cmp
scas
ror
scas
stc
push
cmpsl
js
inc
inc
add
daa
pop
xor
enter
or
insb
retw
test
mov
aam
pop
mov
scas
push
xrelease
daa
inc
inc
je
add
and
inc
add
in
and
cmp
test
xor
add
adc
stc
lret
inc
mov
sub
ljmp
add
adc
pusha
cs
add
adc
cmovbe
mov
push
mov
jbe
sarl
add
add
iret
enter
sub
add
jb
inc
add
lret
lods
sbb
cmp
add
add
jno
cld
jl
cmp
mov
sub
sar
std
add
test
pushf
aad
add
add
adc
and
sbb
jle
mov
mov
and
cwtl
add
add
push
mov
fmull
pop
xchg
add
add
cmc
ds
adc
inc
mov
flds
or
mov
add
mov
adc
pushf
rorb
int3
add
add
popa
in
fsubrl
js
mov
arpl
mov
cwtl
sti
xor
mov
or
ds
add
cmp
or
xlat
movsb
jbe
dec
lea
add
test
fcmovnbe
popa
or
lret
mov
mov
mov
lahf
and
lods
idivl
les
sub
jge
and
dec
xorb
jne
pop
arpl
sbbl
movsb
mov
adc
adc
xor
stos
add
add
enter
add
pusha
mov
nop
adc
add
bound
outsl
stc
shl
popf
cmpsl
add
dec
add
adc
sbb
xor
lahf
adc
mov
adc
repnz
aad
and
mov
add
add
xchg
xchg
outsl
cmpsb
xor
push
add
xchg
mov
cmp
test
add
nop
sub
pusha
add
mov
pop
in
es
jg
in
pushf
or
repz
push
mov
mov
add
jo
inc
jnp
cmp
pop
xlat
add
add
add
mov
or
jnp
inc
test
push
iret
in
cmp
xor
es
imul
shrb
pop
adc
cmp
das
sub
add
in
pop
adc
fildl
inc
fnsave
adc
mov
add
lock
cltd
dec
mov
add
add
jl
mov
pop
fldt
add
push
leave
sahf
dec
xor
xchg
leave
mov
lods
mov
repz
push
leave
add
sbb
jb
lahf
jnp
and
inc
or
adc
stc
loope
mov
mov
out
ja
out
les
mov
out
imulb
add
push
add
dec
mov
xchg
cltd
add
sub
add
sarb
pop
xchg
fldenv
push
xchg
bound
repz
in
dec
add
pop
pop
fcoml
xor
xor
shr
sbb
dec
sbb
xchg
test
sbb
and
fwait
ja
loop
sub
es
out
popa
sub
jae
rcl
sub
gs
insb
mov
add
in
and
pusha
jae
add
add
push
mov
and
mov
je
add
add
loop
aad
mov
and
push
movb
sarl
fsts
bound
dec
xchg
stc
sbb
push
push
fstps
push
pushf
add
roll
push
xorl
push
test
cld
and
ret
add
mov
xchg
lret
adc
ja
add
and
xor
mov
inc
add
add
dec
scas
mov
add
add
add
xchg
add
or
ret
mov
jno
inc
lods
and
push
fstl
mov
inc
ffreep
call
mov
loopne
movsl
jg
cmp
addl
leave
sbb
mov
into
lahf
xchg
inc
into
mov
in
mov
sbb
pop
pop
scas
popf
cmp
add
andb
mov
jge
outsl
add
adc
je
stos
add
add
cmpsb
pop
movsl
icebp
sub
rcrb
imulb
jae
push
arpl
push
add
incl
out
pop
int3
cmp
lcall
push
mov
negl
sti
dec
mov
daa
jns
mov
imul
add
repz
scas
and
add
add
push
lea
ret
popf
pop
inc
out
and
mov
mov
push
jp
mov
or
fs
movsl
shrl
add
roll
mov
or
jae
jo
mov
test
cmp
add
out
lods
loopne
cmp
icebp
push
cmp
fldl
sub
add
mov
dec
add
aas
orl
aad
out
mov
into
mov
add
mov
xchg
add
dec
shll
iret
add
sbb
inc
test
mov
xor
fildl
lods
push
lock
sub
add
cmpsl
push
in
jnp
lret
aam
lret
js
mov
repz
jb
popf
mov
mov
sarb
jmp
adc
pop
add
inc
jb,pn
roll
pop
testl
std
push
add
insb
ds
mull
les
add
aas
pop
mov
sarb
jl
pop
adc
mov
add
fldenv
popf
pop
test
add
mov
mov
test
add
xchg
inc
ret
fists
fmuls
lcall
popa
leave
cwtl
sub
sub
push
mov
popf
icebp
sbb
out
adc
fistps
loope
loope
inc
push
jl
mov
aas
mov
push
add
add
pusha
add
stos
mov
cli
add
pop
xchg
add
ret
int
mov
loopne
xchg
nop
repz
jle
pusha
pop
movsb
stos
cmp
and
mov
pop
push
add
cmp
movsb
and
int
cwtl
cmp
or
daa
imul
xchg
mov
xchg
pop
xchg
add
mov
adc
lret
mov
sahf
jp
mov
and
aaa
dec
aas
or
arpl
jns
add
ja
loop
add
enter
pop
test
add
sub
stc
cmp
add
lea
mov
sbb
fidivrl
mov
loope
mov
push
jb
push
sbb
enter
mov
add
add
add
mov
add
pop
js
in
add
push
add
idivb
lret
and
nop
or
jle
add
pushf
or
fdivs
call
pop
jno
add
xchg
add
jb
addb
mov
inc
jle
iret
add
scas
dec
and
into
and
out
movsb
add
lcall
frstor
mov
xor
je
push
fistpl
bound
sbb
bound
push
fiadds
xchg
jnp
sub
jb
xchg
das
std
xchg
mov
and
out
or
rolb
dec
mov
shrl
dec
setb
sub
imul
fs
int
pop
add
inc
xchg
cmp
shrl
mov
cmp
jne
pop
ret
lret
xchg
mov
fwait
sbb
add
stos
pop
cltd
jmp
add
mov
outsb
and
mov
adc
push
fwait
subl
mov
inc
jbe
fs
or
sub
dec
fwait
in
in
cmp
cwtl
push
lret
bound
add
inc
or
push
add
inc
add
cmp
lcall
sahf
mov
push
pop
fsubp
add
jb
or
mov
add
mov
add
inc
cmp
or
aad
addb
or
and
adc
mov
pusha
inc
push
lret
mov
sarl
jb
in
adc
jmp
push
pop
mov
mov
mov
arpl
add
loop
pop
insb
scas
lret
popa
add
dec
pop
sti
mov
ret
out
popf
ret
inc
xchg
loop
sub
xor
inc
add
inc
das
mov
lds
mov
or
pop
in
fs
mov
insl
add
add
mov
add
add
test
add
add
push
add
scas
or
pop
add
es
push
pusha
jg
add
int3
cwtl
or
push
pop
mov
xchg
out
mov
and
shlb
pop
cmp
xor
push
fildl
push
sbb
mov
sti
adc
cmpsl
xchg
xchg
sub
ret
push
repnz
or
aas
scas
add
jmp
insb
jmp
mov
cmpsl
out
es
add
fldcw
jnp
cmp
cmp
jbe
lods
xchg
push
push
push
add
pop
pushf
add
insb
and
into
lret
sti
mov
pushf
inc
xor
pop
nop
test
push
add
mov
mov
pusha
data16
dec
mov
pop
push
inc
jno
jnp
outsb
xchg
xchg
gs
dec
add
mov
ret
insl
orb
ds
pusha
jno
cmc
inc
add
jne
pop
divl
cmp
outsb
and
cli
iret
jno
adc
xchg
add
lock
add
lret
hlt
movsb
add
cli
jbe
ljmp
add
xlat
mov
pop
scas
push
iret
mov
xchg
or
rol
mov
inc
xor
daa
roll
dec
je
add
push
insl
add
faddl
and
movsl
mov
pop
and
sbb
adc
sub
movsb
push
lea
add
push
and
dec
shll
push
or
imul
addb
xchg
add
add
and
xchg
cmp
stc
add
aam
add
mov
cwtl
and
mov
adc
add
nop
movsl
insl
aas
pop
out
add
and
addb
add
or
jo
mov
xchg
into
pop
ljmp
pop
sub
mov
push
sbb
loope
adc
add
in
out
bnd
sti
xchg
stos
pop
add
pop
popa
add
add
xor
imul
or
add
mov
mov
data16
jmp
pop
dec
mov
sti
fdivrl
dec
mov
in
add
add
lahf
add
pop
jo
sahf
add
test
stos
add
test
ret
imul
ficomps
ret
test
xor
cltd
sub
sbb
jae
addr16
xchg
sbb
das
jbe
pop
loope
fsubrp
jmp
jnp
outsb
arpl
sbb
add
jo
adc
jns
add
test
orb
int3
lret
mov
lods
xchg
jo
add
or
add
push
sbb
add
adc
icebp
mov
ja
inc
cmp
gs
push
jl
dec
adc
jne
or
push
pop
add
add
nop
add
add
in
pop
or
push
shr
pop
mov
jb
add
outsb
clc
out
add
pop
xor
loop
fnstsw
adc
call
push
inc
mov
fwait
jecxz
shlb
jb
dec
outsb
aad
cmp
add
adc
xor
shrl
test
push
ljmp
push
aam
push
add
movsb
inc
outsl
adc
add
mov
ret
rolb
inc
inc
idivl
lock
add
inc
enter
xor
sbb
jle
cmp
loop
popa
aaa
jb
add
stos
push
or
icebp
pusha
add
push
sbb
sahf
add
pop
push
jns
dec
addl
jnp
pop
pop
or
lret
add
pop
add
outsb
ret
outsl
testl
add
add
test
insl
xchg
cmp
addb
cld
jno
pop
mov
mov
sysenter
ss
repnz
js
test
add
push
jno
mov
repz
lret
cmp
adc
mov
lret
jge
push
scas
xor
and
add
popa
sub
mov
gs
add
filds
ret
add
mov
add
and
add
popa
push
smsw
xchg
and
lea
jmp
and
mov
jb
or
lods
adc
loop
add
push
lods
add
mov
sti
xchg
adc
stos
add
int3
pop
jl
sbb
mov
movsl
sub
mov
dec
ficompl
repnz
or
mov
scas
dec
xlat
out
jge
filds
popf
aas
dec
add
pop
inc
fadds
clc
add
aaa
movsb
pop
dec
cmp
enter
push
add
cli
daa
insb
arpl
xchg
icebp
mov
out
mov
or
sbb
xlat
ss
xchg
mov
cmp
xchg
loop
add
lock
sub
xchg
adc
add
repz
aam
lcall
dec
clc
scas
xlat
add
pusha
cmp
outsl
mov
jne
push
enter
movsl
lods
nop
add
add
loopne
ret
xchg
sti
and
mov
jns
add
sub
add
add
lds
xor
cmp
xor
adc
jl
add
pop
in
inc
adc
int
mov
add
scas
or
sub
dec
mov
add
fisubrs
sbb
add
jns
fisttpl
adc
lret
fsubrl
in
lret
push
add
add
xor
cwtl
inc
test
sub
add
add
mov
pop
pusha
add
mov
popa
add
add
mov
lahf
pop
or
nop
add
inc
add
jmp
sub
xchg
add
cmc
sahf
mov
divl
leave
pop
dec
add
xchg
add
jg
cmp
sbbb
out
mov
add
nop
dec
stos
in
psubb
dec
dec
pop
mov
jg
aam
les
mov
lret
cmpsb
sbb
mov
push
imul
roll
testl
jmp
test
mov
add
mov
cs
pop
jno
push
cmpsl
cmp
add
inc
inc
xor
sub
pop
and
inc
fldcw
push
cmp
mov
ds
int3
mov
dec
sbb
gs
fcoml
ss
pop
insl
add
mov
fldl2e
add
int3
cmp
in
inc
sub
add
jae
inc
lahf
adc
push
inc
push
jae
jmp
xor
add
mov
lock
ss
int
bswap
arpl
loopne
dec
mov
xchg
lahf
test
fcmovu
test
xchg
xor
jle
lcall
add
testb
adc
mov
cmpsb
dec
dec
pop
adcb
xor
dec
pop
mov
push
add
mov
lcall
jl
mov
cmp
out
push
cwtl
adc
arpl
mul
cmc
stc
aas
and
pop
outsb
add
aas
flds
pop
mov
sbbb
cmpsb
push
or
add
out
add
push
adcl
test
mov
data16
sarb
lret
adc
add
int
test
push
stc
data16
outsl
lods
dec
pop
mov
dec
outsl
adc
leave
fwait
push
sub
in
push
dec
cmp
jns
jecxz
icebp
mov
mov
cmpsb
sub
js
adc
addl
adc
add
stc
pushf
add
push
ret
add
cmp
push
xlat
sub
and
rorb
ret
inc
jns
jp
loope
xchg
jns
add
add
fildl
popa
ja
rol
jne
add
imul
add
iret
lea
or
fildl
cmp
add
jb
add
and
add
outsb
inc
xorb
popl
jbe
cmpsl
fnstsw
mov
pop
jb
jg
cmp
fistl
aas
mov
pop
pop
imul
daa
mov
aaa
xor
push
add
test
mov
xlat
incl
repz
adc
mov
loope
add
cli
add
sbb
push
add
push
adc
fbld
mov
dec
push
mov
inc
mov
in
roll
add
sub
fldenv
fs
pop
mov
add
add
fadds
call
iret
xchg
add
je
clc
mov
dec
and
test
adc
or
stos
add
cmp
add
jle
ficoml
xor
jo
or
sub
push
test
repnz
scas
cmp
or
dec
fldlg2
es
stc
mov
insb
mov
movsl
movsb
mov
jnp
or
cld
sub
aad
imul
into
fiadds
popf
cmpsl
xchg
fs
sub
and
lea
out
add
mov
pop
adc
add
add
mov
cli
add
mov
dec
js
lds
add
sub
push
stc
xor
push
imul
out
testl
add
test
jle
and
inc
ss
xchg
or
cld
and
hlt
push
fdivrs
ja
mov
stos
mov
add
add
xchg
mov
out
mov
loope
fadds
insb
add
add
fisubrl
das
loopne
xor
inc
out
inc
sbb
mov
sbb
add
dec
sbb
and
nop
jl
mov
sbb
std
push
into
xchg
mov
repz
in
add
jecxz
and
push
adc
pop
ljmp
repnz
stos
sahf
push
add
call
add
cmp
data16
pop
mov
add
jae
sub
fcomip
add
daa
int
add
xchg
add
es
add
mov
and
xor
stos
sbb
lods
aam
fldl
inc
sbb
add
and
add
fimuls
int
out
lock
rorb
lock
rcll
nop
daa
jmp
adc
jnp
jns
xchg
repnz
add
dec
gs
inc
adc
push
mov
mov
add
add
out
leave
nop
xchg
aas
fimull
outsl
add
jae
mov
pop
pushf
add
adc
aas
mov
jo
lcall
fdivrl
nop
sub
adc
lcall
lcall
add
add
les
add
std
adc
or
popa
adcl
stos
aas
das
inc
loope
ds
add
xchg
xchg
fwait
dec
arpl
mov
aaa
gs
pop
pop
repnz
cmpsl
pop
lods
loope
mov
in
stc
aad
add
std
ss
int3
je
sub
fisubrs
test
mov
cltd
or
jne
inc
andps
cmp
jae
push
aas
stc
jb
in
lods
add
fmull
add
add
xor
sbb
sbb
loope
sbb
in
or
jmp
outsl
cmpsb
xor
mov
xchg
js
add
jo
insl
xchg
push
pop
push
adc
cmp
jmp
stos
out
dec
dec
pusha
add
aam
nop
das
leave
rol
add
imul
bound
mov
jecxz
add
add
mov
call
sbb
out
jecxz
imul
add
cmc
sbb
add
les
push
pop
imul
dec
loop
lock
test
mov
mov
sbb
loopne
mov
outsb
in
jno
xor
aad
rdmsr
add
add
fst
or
flds
aaa
cmc
mov
sbb
xchg
and
adc
xchg
aas
jne
sbb
mov
fstps
das
xor
pop
inc
ljmp
lahf
xor
push
and
out
pop
push
mov
mov
sbb
mov
add
mov
push
inc
ss
dec
xchg
jbe
enter
add
shl
push
imul
mov
repnz
in
inc
movsl
aaa
or
popa
aas
pop
fs
mov
ja
mov
cmp
add
mov
sbb
mov
mov
add
js
in
sub
into
adc
add
add
add
int
fisttps
maxps
push
xchg
repz
cld
push
aas
add
xor
cmp
enter
add
test
pop
mov
or
iret
aad
sarl
shrb
dec
mov
out
pop
add
cmp
pop
jns
leave
push
mov
hlt
push
push
pop
loope
repz
xor
test
gs
adc
adc
aaa
scas
dec
jo
rol
add
xlat
frstor
pop
imul
xchg
inc
imul
adc
mov
movsb
sbb
jo
add
adc
rolb
add
inc
add
adc
ljmp
std
jbe
mov
jle
popf
imul
addb
mov
add
cmp
in
scas
decb
iret
mov
mov
add
and
xlat
jmp
add
push
push
cs
add
pushf
pusha
xchg
aaa
cmpsl
pop
mov
imul
mov
dec
push
adc
out
lea
add
add
out
or
inc
pusha
jne
sti
xor
xor
es
lods
jns
add
or
mov
adc
xchg
xchg
sbb
roll
addl
sub
pop
add
adc
cld
les
dec
inc
pop
xor
jb
or
adcb
inc
leave
imul
xor
push
add
repnz
ret
das
cmp
add
mov
mov
mov
add
sbb
jg
stos
xor
ja
sbb
mov
mov
jne
out
das
sub
mov
fnstcw
add
mov
inc
sahf
popf
std
std
es
or
pop
out
add
add
inc
mov
rorb
stos
push
add
add
les
movsb
aam
cmpsb
xor
testl
jmp
push
leave
xor
add
pop
leave
lea
sbb
negb
jecxz
imul
inc
mov
and
add
jbe
add
dec
add
lods
push
cmc
add
stc
sbb
sahf
leave
add
xor
add
jb
in
add
xchg
mov
add
fwait
lea
add
add
lock
inc
push
cmp
jl
jmp
or
add
dec
jo
dec
and
jbe
add
adc
push
mov
add
into
mov
rclb
sbb
sti
loope
cmp
push
ret
xor
out
lea
mov
or
add
in
lret
and
inc
loopne
movsl
out
mov
xchg
jns
rclb
xchg
and
cmp
fsubrp
mov
add
int
mov
or
cli
cmpsl
notl
jle
ret
lret
mov
adc
mov
popf
shll
or
push
lea
scas
add
lock
cmp
jp
inc
lea
add
cltd
sbb
test
loope
stos
jecxz
add
dec
sbb
insb
and
inc
test
test
add
shlb
sub
cmp
in
fcmovbe
xchg
ljmp
bnd
jg
pop
nop
mov
std
sub
push
sbb
jg
in
loope
mul
pop
scas
xor
xlat
fyl2x
dec
cltd
lahf
add
cwtl
push
cld
fwait
pop
jns
pop
add
out
into
out
mov
lret
test
lcall
repz
push
scas
and
cmp
cmpsb
shrb
jge
pop
jbe
add
mov
fwait
test
add
mov
dec
in
xchg
jle
stos
mov
add
push
xchg
mov
pop
add
inc
pop
add
sub
jo
adc
mov
inc
imul
cmpsl
push
movsl
xchg
notb
in
jge
outsb
fwait
add
sbb
in
jmp
fwait
lods
inc
add
cmp
sbb
push
jbe
add
sbb
imul
xor
lock
add
arpl
sub
add
add
pop
push
scas
add
xor
xchg
or
add
cmp
adc
sub
mov
jmp
cli
or
lret
push
inc
outsl
cmp
es
push
mov
mov
dec
sbb
loopne
out
sub
xchg
sub
stc
push
and
enter
cmp
jle
das
daa
push
orb
pop
sbb
stos
and
repnz
add
fldl
add
clc
sahf
mov
cmp
adc
pusha
mov
jg
repnz
inc
sbb
add
mov
push
add
ljmp
sub
and
pushf
je
dec
sbb
sbb
sbb
xchg
jo
addb
or
dec
repnz
cmc
test
jo
test
dec
xchg
stc
repnz
or
scas
cmc
in
sahf
arpl
out
pop
jb
lret
fnstcw
aas
cmp
cmpsl
pop
jl
sub
add
imul
xchg
cmp
int
ret
cmp
pop
in
or
fsubrl
sbb
push
adc
inc
mov
pop
cvttps2pi
sub
pusha
xor
insl
cs
or
inc
sti
lods
pop
imull
or
push
push
test
pop
inc
daa
pop
je
mov
in
decb
mov
add
bnd
push
add
lock
out
xchg
pusha
dec
and
pop
arpl
movl
sarl
dec
jbe
mov
pop
inc
gs
cltd
cmp
xchg
dec
inc
pop
gs
cld
pop
or
adc
scas
or
xor
mov
xchg
jl
mov
or
ds
push
mov
xor
dec
aaa
lods
xor
ds
inc
pushf
jmp
or
push
jo
in
mov
sbb
arpl
out
jmp
inc
mov
xchg
jecxz
push
into
add
pop
mov
cs
je
dec
and
fildl
scas
mov
test
push
add
xchg
xchg
stc
aaa
inc
push
sbb
add
mov
mov
xchg
ss
dec
add
es
in
enter
xchg
dec
clc
add
mov
testl
mov
xor
mov
add
xchg
sub
int3
or
leave
inc
add
xorl
and
mov
ja
faddl
icebp
add
cs
push
cmpsb
test
cltd
sub
jg
sysexit
add
add
jae
dec
jae
or
mov
add
lds
addl
insl
bound
cmp
mov
sbb
push
add
mov
add
addl
pop
or
add
int3
popf
lcall
add
jp
jb
in
roll
mov
in
jo
outsb
clc
dec
ljmp
imul
std
pop
ds
je
cmp
jo
fildl
stos
aas
xor
xor
push
xor
or
aaa
add
in
pop
sbb
fisubrl
popf
daa
cmp
add
add
add
pop
lds
dec
sbb
push
cmpsb
inc
sub
lret
pop
dec
add
add
jne
sub
add
iret
div
add
add
arpl
lcall
add
xchg
roll
jnp
adc
push
fistpl
cmp
je
test
jg
add
dec
daa
popa
jmp
dec
aas
lcall
scas
lock
fsubrs
fiaddl
mov
daa
stc
inc
into
dec
mov
add
cmpsb
pop
sbb
jp
hlt
popf
adc
dec
jne
add
lds
push
sbb
mov
dec
faddl
push
jbe
jo
clc
add
pusha
test
dec
pop
pop
test
mov
cli
sbb
and
inc
movsb
int
jl
loopne
add
push
jae
je
scas
or
mov
cli
fstpt
xchg
add
jg
std
fisttpl
mov
ja
sub
in
out
int
cwtl
rcll
mov
mov
add
ljmp
loop
jmp
aad
icebp
bound
popa
sahf
aaa
mov
inc
cmp
mov
cmp
bsf
add
and
inc
int3
or
jns
fwait
inc
dec
loopne
cwtl
daa
pop
repz
jecxz
mov
and
mov
aad
xor
fcmovb
add
loopne
mov
clc
dec
push
inc
push
push
pop
add
add
shl
xor
lods
and
sub
das
xor
dec
lock
mov
incb
loope
sbb
sub
adc
inc
ljmp
out
or
push
mov
pop
add
add
mov
cmc
into
add
fs
das
push
add
inc
or
mov
gs
icebp
add
push
add
aaa
add
xor
sub
out
cld
mov
and
inc
xchg
xor
sub
xor
push
push
add
add
gs
and
xchg
add
repz
out
test
or
sub
mov
add
leave
sub
aad
xchg
ja
clc
mov
movsl
das
repnz
pusha
push
fisttpl
mov
push
bound
loope
ja
sarw
or
stc
popf
idiv
je
iret
add
mov
push
ss
andl
inc
inc
out
push
cld
dec
cmp
sub
popa
int
lods
int
and
dec
mov
add
fyl2xp1
adc
xchg
dec
test
cwtl
pushf
mov
out
push
push
jae
lods
and
sbb
inc
pusha
adc
lret
jg
add
popa
inc
xchg
movsb
cwtl
jle
imul
xchg
jecxz
scas
xor
outsb
icebp
fsubs
add
shrl
mov
movsl
jae,pt
aas
aas
aad
test
imul
inc
clc
popa
cmpsl
xchg
jl
addr16
add
cmc
push
mov
add
stos
imul
adc
out
cmc
movsl
sbb
dec
and
jnp
add
leave
mov
ret
push
pusha
sti
cmpsb
les
xchg
jp
cmp
sbb
xor
icebp
add
mov
xlat
sub
mov
jnp
push
fsubrp
add
push
lret
test
in
shl
outsb
mov
mov
adc
dec
ss
cmp
mov
arpl
xchg
and
ftst
add
mov
sbb
jle
mov
ljmp
out
decl
and
ret
fidivl
fildll
jne
fildl
or
clc
jle
stos
outsb
add
cs
mov
and
test
add
movsl
dec
inc
loop
add
fwait
rolb
xor
mov
and
add
add
add
cmpb
xchg
push
add
add
das
add
jae
ljmp
in
xor
mov
cmp
fbld
mov
pusha
popa
add
jne
mov
push
fwait
clc
mov
pop
add
jno
add
mov
dec
cmp
addb
outsb
xor
and
out
adc
shlb
adc
fwait
xchg
add
cmp
sbb
daa
jecxz
xor
xchg
sti
daa
stos
sub
mov
dec
arpl
push
xchg
inc
lds
hlt
bnd
adc
inc
outsb
pop
add
sbb
add
sub
mov
iret
out
idivl
call
jmp
fdivr
or
mov
sbb
add
call
int3
mov
sub
pop
push
add
into
mov
dec
cmp
aad
sub
mov
jp
inc
repz
stc
test
add
call
fldcw
mov
add
add
push
and
leave
pushw
cmp
add
push
add
cs
hlt
add
add
aam
cld
xor
int3
push
je
mov
adc
not
mov
add
std
mov
xchg
out
lret
sub
push
inc
add
or
bound
xchg
and
dec
jnp
xchg
xchg
xor
loopne
fistps
mov
pop
push
mov
push
das
sti
xchg
mov
add
call
loop
repz
mov
adc
lcall
cmp
mov
xor
fsubs
lods
movb
add
pop
cmp
add
add
jmp
add
sub
fadds
testb
movsl
dec
xor
xchg
push
xor
js
or
add
loop
loop
das
add
fsubrl
add
jge
xchg
ss
decb
add
ja
jae
insb
adc
addb
add
subl
jp
xor
inc
sbb
add
stc
out
pusha
leave
jle
sub
sub
cwtl
and
cmp
bound
inc
aas
cmp
jns
bound
sbb
add
sbb
ja
add
fidivrl
out
insl
sti
add
jb
add
xor
cmp
mov
filds
xchg
mov
int
sbb
pop
in
lret
cmc
mov
addr16
enter
mov
or
mov
push
test
inc
imul
adc
add
cwtl
push
sbb
std
shll
mov
dec
adc
jae
add
pop
xor
pop
repz
popa
imul
push
int3
js
fs
adc
dec
jmp
cli
fsubs
or
add
lret
inc
cli
fadds
mov
shll
xor
cmpsb
xchg
adc
ret
out
mov
mov
adc
pop
fwait
popa
jmp
inc
inc
mov
loope
mov
add
cmc
sbbb
cmpsb
stos
adc
adc
add
inc
add
pop
pop
cwtl
je
add
cmp
or
or
sub
add
ljmp
pop
cmp
ljmp
xchg
mov
hlt
and
mov
dec
int
mov
xor
mov
add
jae
nop
add
pop
scas
dec
pop
js
add
outsl
pop
jge
lret
push
pop
divb
add
stc
add
ljmp
fildl
or
xchg
and
mov
insb
inc
add
inc
imul
lods
pop
testl
test
add
pop
add
sub
inc
adc
std
addb
mov
stos
lds
sbb
daa
hlt
mov
adc
push
test
fdivl
ljmp
out
inc
lods
jae
add
push
sbb
xchg
add
lods
mov
cmp
andb
je
fildll
push
add
sub
add
add
add
ret
fcomp
cmpsb
in
adc
add
das
sbbl
daa
cs
imul
add
dec
imul
sbb
sub
mov
call
test
fldl
push
add
fisubrl
sbb
pusha
xor
mov
cmp
push
sarl
jbe
ds
fists
push
out
pop
jl
int
int
rolb
popf
sbb
mov
and
jb
and
jo
xchg
outsb
daa
mov
stc
shrb
lcall
jl
out
push
pop
add
push
out
xor
pop
fwait
mov
push
add
add
stos
pushf
mov
add
fdivrs
jecxz
in
shrl
add
rcll
bound
cmpsb
std
std
add
adc
push
out
stos
or
and
jg
filds
es
mov
stos
aam
jp
add
cmp
idivb
fs
or
add
push
push
loop
and
int3
adc
push
add
ret
add
cmp
xlat
out
dec
arpl
or
fincstp
dec
test
mov
add
cmp
or
ja
dec
inc
adc
movsb
outsl
pop
and
mov
loope
cmp
xor
in
mov
add
mov
dec
xlat
add
add
pop
sarb
es
dec
push
clc
inc
out
je
xorl
ret
punpckhdq
out
in
push
fisubl
loop
mov
push
mov
js
add
xchg
sbb
pop
and
mov
scas
add
mov
icebp
test
out
pop
push
push
ret
or
daa
pop
add
mov
mov
jb
sahf
add
leave
divl
add
cmpsl
psrlw
add
mov
fidivrs
pop
inc
add
mov
add
jno
mulb
add
leave
mov
jo
adc
fcmovu
push
clc
push
enter
adc
jmp
add
sbb
add
xor
int
ds
cmp
sbb
cld
popa
push
sub
je
out
imul
push
js
outsl
in
cmpsl
lret
inc
pop
pop
loope
enter
fistps
mov
roll
xchg
mov
repnz
push
lcall
out
mov
pop
mov
in
add
push
es
out
test
mov
add
xchg
push
lock
push
xchg
xor
jb
int
jmp
cmp
pop
bnd
sub
dec
testb
fimuls
cwtl
filds
divl
out
add
adc
scas
inc
jp
add
and
cmp
push
in
add
mov
js
add
jmp
repnz
nop
jne
repnz
pop
xor
push
clc
out
or
pop
add
ljmp
arpl
xor
mov
inc
jno
enter
adc
xor
cmp
aad
hlt
pop
lea
ret
and
mov
xchg
jno
add
jb
ljmp
sub
or
adc
jae
out
add
and
adcl
lea
sbb
push
push
imul
mov
pushf
sbb
adc
sbbl
or
mov
enter
stos
cmp
fs
testb
test
jmp
jno
push
add
add
loope
cmpsb
andl
xchg
rclb
add
insl
or
dec
std
adc
dec
sahf
les
add
inc
add
xor
scas
push
push
test
stc
inc
sbb
stos
sysexit
jle
cmc
mov
mov
test
scas
xchg
iret
jno
pop
popl
dec
lahf
push
push
add
or
jns
add
add
or
xor
add
add
add
popa
add
in
frstor
add
or
mov
pop
inc
cltd
test
push
sbb
add
cmpsl
add
mov
pop
sbb
sub
xchg
pop
push
ss
leave
stos
jne
mov
add
add
push
neg
dec
into
push
lret
add
or
xor
popf
jmp
push
or
push
stos
inc
sti
in
inc
pop
cmp
stos
mov
sub
dec
dec
xchg
insl
push
and
or
cmpsb
aad
cwtl
xor
loope
test
add
xor
cmpsl
inc
mov
add
and
imul
jnp
adc
inc
sub
addb
add
mov
xor
movsl
ss
adc
xchg
insl
push
popl
in
mov
sub
pop
movsl
sub
mov
adc
ds
mov
enter
add
int
push
sbb
dec
mov
push
mov
lock
enter
inc
push
lock
mov
add
cmpsb
sub
mov
or
pop
xor
add
fstl
xchg
pop
or
mov
add
scas
add
sub
leave
mov
cltd
xchg
movsb
pusha
in
test
add
add
gs
lea
addr16
nop
push
inc
fldenv
cmpsb
test
popf
jae
add
cld
fsubrl
xchg
xchg
jl
fsubs
add
mov
ret
add
negl
scas
inc
push
sub
lea
push
sbb
sub
add
add
sahf
insb
fldl
mov
sti
mov
add
or
or
xchg
addb
in
add
pop
ljmp
psubsb
cmpb
ret
testb
jae
stc
ds
add
fsubr
lods
repnz
fs
popa
test
mov
add
je
sub
mov
mov
push
jp
out
push
add
shlb
loope
pusha
push
push
push
es
cmp
test
filds
inc
sbb
lods
inc
jno
add
mov
arpl
jp
mov
pop
jle
insl
add
mov
clc
push
mov
fwait
add
je
sub
mov
test
or
push
pop
cmpsb
add
sbb
add
outsb
add
add
out
jbe
and
adc
jne
addr16
add
adc
data16
mov
cmp
in
adc
lcall
pop
lea
cmpsl
lret
jecxz
sub
add
mov
and
inc
add
sti
rolb
add
filds
inc
leave
push
xor
mov
adc
stos
sub
roll
int
jecxz
clc
imul
add
sti
fs
and
in
cmp
cmp
jle
fistpl
dec
aad
mov
movaps
fldt
add
cmpsl
mov
inc
mov
push
push
call
inc
loop
mov
sbb
jge
mov
jmpw
lea
cmpsl
mov
xchg
add
out
add
jle
jno
add
in
mov
mov
inc
push
add
addr16
das
xor
mov
cwtl
fbld
and
mov
add
pop
mov
add
setg
lret
push
dec
cwtl
pop
in
in
ret
and
stc
adc
xchg
add
test
pushf
insb
add
shrb
testb
mov
lea
jge
ja
pop
add
xchg
add
loopne
add
xchg
out
mov
mov
mov
add
sarl
xchg
int3
dec
imul
fildll
push
pop
sbb
sbb
add
sbb
cmpsl
mov
scas
xchg
insl
xorb
cmp
xchg
add
mov
repnz
ret
sub
test
arpl
pushf
cld
andl
cmp
add
ja
lock
inc
ret
xor
mov
sub
dec
out
div
pop
add
add
outsl
add
or
inc
cmp
push
jp
or
scas
in
inc
jae
cld
add
inc
call
add
add
sbb
pusha
roll
ds
daa
cmp
pushf
inc
test
rolb
cmp
sbb
popf
jp
fidivl
jle
movsb
sub
add
lods
push
nop
adc
push
insl
or
test
es
cmp
or
test
cmp
movsb
jns
jl
cmp
mov
and
call
add
es
add
add
jb
cs
xchg
rol
cli
adc
stos
or
mov
mov
push
int3
add
xchg
inc
aas
inc
jg
imul
dec
mov
pop
add
or
add
ljmp
int3
mov
jp
pop
data16
jmp
out
xor
ljmp
rorl
sub
outsb
cli
adc
adc
dec
xorl
add
add
cld
add
movsl
xlat
xchg
inc
or
cmp
adc
or
pushf
fs
push
inc
insb
jg
push
cltd
in
add
add
les
movsl
test
xor
sbb
lea
add
or
or
insl
enter
stos
stc
xchg
jo
add
mov
outsb
cmp
sub
and
add
ret
aaa
inc
and
inc
dec
addr16
loop
pop
popl
ret
aam
aas
jbe
mov
push
test
xchg
das
add
add
ljmp
pusha
lea
pop
sbb
jg
cs
pop
and
shl
out
or
sbb
lret
xor
jbe
hlt
sbb
cmpl
jecxz
add
jle
testl
mov
in
pushf
insl
cmp
xor
xor
pusha
jne
lret
hlt
es
dec
pop
lret
pop
ja
je
repnz
cmp
addr16
or
mov
push
pop
inc
lock
lea
or
or
add
popf
pop
add
movsb
pop
add
mov
imul
add
icebp
stos
jae
rorl
pop
xchg
jle
sbb
mov
loope
and
scas
lret
pop
and
mov
mov
mov
lods
xor
sahf
lods
push
scas
ret
push
mov
jno
adc
lock
shl
pop
add
or
xor
sbb
stos
leave
outsl
in
mov
add
lds
aad
add
add
push
sbb
cmp
sub
add
aas
push
negb
dec
mov
lods
add
loopne
mov
sarl
loopne
mov
push
add
lods
xor
loope
test
in
add
add
fdivrs
jle
inc
mov
push
cmp
add
aas
or
push
je
leave
call
xchg
mov
add
push
mov
xor
mov
mov
iret
cltd
movsl
add
add
test
pop
add
mov
sbb
add
leave
repz
push
cmpl
push
sbb
enter
sbb
add
scas
add
fcos
fbstp
stos
mov
push
sbb
imul
mov
jnp
adc
sub
push
add
in
clc
xchg
xchg
xor
ja
clc
lret
insb
mov
popa
cli
add
mov
in
pop
push
add
sub
sar
bnd
add
xchg
xchg
or
pop
dec
aad
sbb
dec
mov
push
pop
lea
pop
call
sbb
add
das
out
mov
xchg
mov
xlat
repz
hlt
sub
sbb
mov
jo
pop
cmp
pop
jae
cmp
push
adc
loop
out
sbb
jecxz
daa
fistpl
imul
enter
aad
sub
outsl
pop
adc
xchg
das
mov
lds
popf
cs
or
add
rolb
mov
add
ret
sar
rcr
jae
insl
add
repz
loopne
or
sub
imul
or
mov
mov
mov
xlat
mov
lahf
xchg
mov
jge
test
je
pop
dec
jno
inc
xchg
push
call
fwait
jge
cmp
inc
out
sub
sub
out
or
mov
aas
jmp
mov
or
mov
pop
jl
pop
jge
dec
ja
add
movsl
ret
mov
add
add
fisttpll
xchg
loopne
fidivl
xor
add
mov
xchg
jne
add
or
loopne
add
jae
pop
pop
cmp
add
arpl
mov
add
dec
mov
mul
fnstsw
cwtl
add
movsb
clc
mov
cmp
cmpb
inc
add
xchg
jl
sub
out
enter
in
and
or
push
or
fistpl
adcl
popf
dec
inc
mov
sahf
cmp
push
inc
push
rcrl
add
mov
mov
push
xor
lock
into
cs
lahf
pusha
insl
add
mov
xchg
add
cmp
fsub
jbe
stos
xorb
pop
dec
and
sub
mov
nop
mov
lock
jno
lods
sub
fistps
xchg
jl
test
stos
cld
mov
dec
and
xchg
xor
push
sub
push
cmp
xchg
sub
pop
incl
or
and
std
xorl
fwait
push
div
adc
mov
imul
dec
in
add
rclb
mov
mov
imul
pop
add
dec
ret
jne
add
inc
fdiv
add
lods
xchg
mov
in
push
decl
push
jle
xchg
mov
or
das
add
rcrb
jl
jmp
adc
pop
cmc
pop
push
push
add
add
add
dec
pushw
and
jae
push
cmp
jno
adc
jge
mov
inc
push
stos
fs
out
fdivs
es
xchg
lea
sub
xchg
push
mov
mov
test
add
movb
mov
lret
out
fldcw
aad
fisubrs
xor
and
lods
xchg
jae
cmpsl
aam
pop
add
xor
jne
and
popa
add
add
add
test
sbb
subb
fldl
jbe
mov
jecxz
push
rclb
repz
loop
lcall
or
lea
negl
hlt
inc
sbb
rolb
test
inc
inc
lds
add
add
xchg
out
clc
int3
jmp
push
std
mov
mov
jmp
jbe
lahf
add
shl
ja
divb
outsb
mov
leave
inc
add
inc
enter
push
movsl
lret
aam
add
or
lds
dec
add
xlat
movsb
fidivs
stos
add
test
lds
xchg
push
popf
call
push
xor
mov
ret
and
mov
push
ja
push
xor
sbb
imul
bound
cld
dec
or
int3
shrl
scas
push
push
clc
mov
imul
adc
loopne
cwtl
add
add
lret
add
add
ret
fs
cmpsl
call
hlt
lcall
fcoms
push
addb
push
int
jl
add
addr16
stos
pop
fdivrp
mov
faddl
arpl
push
in
popl
mov
pop
push
add
mov
loope
call
xor
xor
push
jmp
or
daa
cltd
jle
add
bound
dec
mov
xor
pushf
xor
aaa
inc
add
mov
dec
jle
mov
dec
add
xor
dec
ficoml
or
pop
repnz
add
mov
jle
je
lods
cs
pop
ficomps
adc
add
add
in
es
pop
add
adc
add
fwait
push
lcall
roll
mov
push
ds
cs
rcrl
jo
jbe
jecxz
cld
in
sbb
mull
add
rcrl
sbb
mov
mov
sahf
dec
pop
pop
je
addr16
pop
add
sti
add
push
pop
add
mov
xor
fstpl
and
mov
and
ret
das
add
pop
xor
mov
add
mov
inc
testb
sub
pushf
inc
add
push
jnp
mov
add
mov
mov
sarb
in
stos
adc
and
ret
sbbb
pop
add
jle
lret
aaa
popf
pop
inc
mov
sbb
add
addl
and
daa
add
mov
incl
xchg
cltd
insl
jle
ja
mov
xor
xchg
add
sub
add
pop
xchg
add
xorl
cmp
ja
imul
sti
add
cmp
aaa
xor
ja
xor
jb
adc
jge
lds
movsl
mov
pop
pop
jmp
pop
jne
mov
sbb
fldl
jbe
inc
add
fistl
jne
jmp
call
fs
imul
les
clc
mov
movsb
add
pop
test
dec
pusha
lret
in
fneni(8087
pop
insb
pushf
in
test
push
stc
test
cmp
dec
ljmp
iret
fwait
ss
sbb
xor
pop
mov
dec
js
and
sub
scas
test
arpl
sub
bound
xor
adc
popa
sbb
out
test
jo
into
call
push
add
mov
sub
add
mov
daa
add
add
and
pop
add
pop
lea
sarb
cmp
flds
push
jbe
and
and
dec
and
sbb
xor
outsl
sub
add
push
ja,pt
rolb
mov
add
pop
pop
jo
add
dec
cld
sub
pop
mov
insb
add
insb
lods
arpl
inc
test
cld
add
arpl
ljmp
xchg
add
in
mov
ret
inc
inc
sbb
cmp
mov
flds
add
sub
pop
roll
mov
int3
add
ret
push
sub
push
push
add
flds
sbb
movsb
adc
into
sbb
insl
sti
mov
inc
sub
or
add
or
lock
out
lret
and
jmp
pushf
ret
stos
add
in
sti
sahf
pop
adc
adc
sub
sahf
jle
sbb
push
add
and
dec
add
pop
dec
pop
iret
jl
jmp
inc
movsb
inc
pop
inc
lods
sub
pop
jmp
mov
nop
cmp
jns
push
cmp
add
cmc
push
pop
add
daa
gs
and
mov
bound
daa
fwait
imul
add
out
mov
adc
add
and
sub
add
popa
arpl
scas
add
add
mov
movsl
mov
dec
inc
outsl
mov
lods
dec
add
aas
ret
add
sub
dec
add
imul
stos
xchg
mov
mov
clc
sbbl
mov
femms
pop
out
cmp
xchg
cwtl
in
sub
mov
adc
pop
out
out
adcl
mov
clc
iret
jmp
in
sub
iret
cmp
add
call
dec
gs
adc
push
add
add
add
mov
sarl
adc
xchg
icebp
mov
repnz
xor
push
xchg
sbb
inc
jae
push
lods
jecxz
mov
xor
cmp
add
add
pop
add
push
shll
add
pop
fnstcw
adc
inc
hlt
lock
jo
and
jge
pop
fdivs
add
stc
mov
sti
ja
sbb
jne
add
call
shrb
inc
lods
add
cmpsb
enter
je
push
inc
jno
in
xor
in
xchg
outsb
pusha
mov
cmc
mov
mov
es
sti
add
fiaddl
add
add
add
xchg
in
inc
inc
fwait
and
jmp
xor
roll
cmpsb
and
lret
popa
xchg
addr16
push
movsb
fs
es
aam
pusha
inc
ror
mov
ja
dec
test
mov
sbb
jecxz
movsb
mov
arpl
xor
sub
cld
sub
icebp
mov
push
add
fs
shll
stos
stos
add
mov
mov
mov
mov
push
add
lods
add
mov
in
add
mov
lret
sbb
add
and
cmp
sbb
jmp
outsb
faddp
outsb
mov
cli
push
add
aaa
cmpsb
mov
fimull
mov
test
in
pop
stos
out
loop
dec
jo
xor
outsb
sub
js
pop
add
insl
int3
pushf
add
dec
add
xchg
pop
popf
cltd
loop
xor
sbb
les
add
mov
dec
or
imul
mov
fbld
and
or
jecxz
sub
xor
in
add
add
cmp
mov
mov
xor
aas
fadds
or
jmp
mov
test
xorl
add
adc
dec
add
rorl
iret
add
jge
pop
pop
or
add
add
pop
mov
jg
repz
dec
pop
mov
jb
enter
xchg
stos
and
lahf
add
mov
add
dec
add
push
add
movb
dec
add
aad
ss
or
mov
mov
sbb
mov
por
cmp
mov
lods
jg
pushf
jp
pop
mov
pop
lods
dec
jmp
lret
mov
add
dec
clc
add
fdivrl
pop
or
js
dec
pop
add
push
mov
cltd
das
pop
add
add
mov
lcall
fmul
add
add
add
loopne
dec
lret
int3
and
pop
jecxz
add
mov
add
inc
test
mov
pop
xor
add
test
subb
out
add
and
clc
dec
sbb
dec
in
in
out
add
das
mov
push
cmp
cmp
std
or
add
push
xor
cs
repnz
dec
and
aaa
loope
and
mov
and
sbb
push
jp
repz
add
sub
int3
dec
cltd
icebp
loope
stc
ss
jl
sbb
dec
gs
dec
ret
lock
bound
mov
and
ljmp
in
adcb
mov
add
xor
inc
sub
mov
sbb
add
add
xchg
mov
push
mov
jbe
aam
sub
add
add
mov
adc
push
cmp
rorl
cmp
pop
mov
ret
insb
iret
and
cmc
mov
mov
ret
sub
inc
mov
mov
fwait
mov
ljmp
sbb
loope
push
jg
movsl
and
push
pop
hlt
cmp
dec
flds
or
push
addb
andb
dec
dec
test
sbb
in
add
sahf
and
adc
mov
dec
mov
add
jns
adc
add
test
pop
sub
jbe
sub
iret
subl
push
rcr
jp
mov
adc
add
and
inc
ret
xor
sub
or
jge
lcall
into
jge
mov
adc
call
repz
push
testl
lahf
inc
add
adc
sub
add
data16
xlat
sbb
xlat
js
jle
pushf
es
mov
add
sbb
mov
jbe
dec
lock
aam
cmp
jno
add
je
add
or
push
shll
sub
mov
dec
testb
std
popf
pop
dec
inc
cmp
out
and
mov
push
add
jbe
in
push
pop
and
rcll
lods
xchg
stc
ljmp
add
jp
push
movsb
add
test
mov
repz
push
or
out
fstpl
mov
inc
add
adc
xchg
inc
test
xchg
and
mov
add
sub
mov
jne
lret
movsl
addr16
in
mov
test
mov
fdivr
or
add
push
and
mov
push
xlat
or
ret
aas
iret
nop
gs
repnz
inc
push
jb
imul
mov
lcall
xchg
shl
aaa
dec
cmp
or
mov
xchg
out
mov
xor
cld
jne
jno
sbb
xchg
movsb
fisubrl
inc
pop
sbb
xor
dec
pop
data16
arpl
or
data16
cmpsl
es
jnp
cmp
rorl
sti
daa
insb
loop
fimuls
mov
sbb
popf
jbe
jns
mov
mov
int3
add
andl
comiss
jg
sbb
clc
cmc
ja
mov
stos
adc
insl
test
gs
test
cmp
jge
movsb
leave
add
fadds
push
push
sbb
add
and
jae
push
scas
cmpsw
push
in
add
add
add
push
pop
or
mov
scas
xor
rcl
and
adc
jg
outsl
cltd
and
into
lret
add
fcoms
dec
jae
ljmp
aam
test
xchg
rcrb
cmpsb
and
lock
xor
add
push
mov
add
sbbb
hlt
jp
add
imul
out
mov
mov
pop
add
movb
leave
pop
pop
or
xor
sub
jg
jp
and
sub
popa
jno
add
jg
sub
and
imul
pop
repnz
jnp
das
push
adc
js
add
add
mov
add
orl
ljmp
mov
mov
notl
xor
in
mov
pushf
xchg
and
imul
jo
movsl
mov
icebp
inc
loopne
inc
int3
jg
lcall
dec
or
ja
jl
mov
lods
jbe
andl
jl
add
aad
add
mov
popf
sbb
sbb
sub
aam
sub
and
sbb
pop
and
dec
popf
inc
jb
shlb
mov
sbb
loope
pop
adc
leave
mov
int3
int3
fs
popf
jmp
mov
incb
push
jae
xchg
lret
pop
clc
xor
cs
jae
xor
gs
and
add
cmp
push
shlb
inc
push
push
push
pop
jmp
push
movsb
or
mov
jmp
outsl
push
xchg
add
add
test
imul
shrb
fsub
std
and
in
xlat
gs
and
add
inc
sarl
or
mov
add
test
add
iret
in
cli
or
jl
cmp
pop
add
sub
or
mov
lret
add
addl
enter
mov
add
insb
test
roll
adc
orb
mov
mov
push
loope
pop
add
inc
and
mov
fcoms
bound
movb
loopne,pt
add
push
aaa
pop
or
lahf
mov
jg
pop
hlt
cmp
popf
int3
add
filds
dec
and
rcrl
lods
push
das
add
das
cld
push
and
add
or
push
add
pop
add
cmc
imul
sbb
cmpb
movsl
stos
lods
sbb
mov
mov
call
in
add
enter
adc
push
cmp
add
pop
mov
roll
loope
out
ret
mov
add
clc
int
xor
outsb
adc
mov
jp
imul
jb
in
pop
repz
add
xchg
sub
loop
or
push
adc
ss
test
and
hlt
add
daa
mov
test
sbb
cli
fmuls
in
or
lsl
add
arpl
adc
sbb
mov
pop
cmp
dec
jbe
sub
pop
push
cmc
or
lds
and
ret
scas
inc
inc
cmp
xchg
mov
stos
cmp
pop
and
add
add
add
leave
and
sub
inc
or
add
pushf
cmc
filds
cmp
jp
mov
iret
mov
pop
pop
pop
or
out
lock
inc
iret
out
sbb
enter
jmp
add
xchg
push
into
adcl
push
add
in
push
bound
sub
add
cwtl
jl
adc
and
push
and
mov
sub
add
fldt
pop
arpl
adc
push
rclb
inc
dec
mov
insl
adc
jbe
add
cs
fwait
push
mov
cmp
and
jae
add
cmp
int
add
xor
add
in
xor
add
rol
adc
or
in
mov
or
incl
ret
or
or
sahf
in
lods
mov
testb
pop
add
mov
pop
jns
mov
add
push
cmpsb
daa
mov
das
push
flds
jo
cld
repnz
xchg
mov
fwait
movsb
fwait
jae
cmpsb
stc
iret
stos
ficoml
or
nop
shll
in
outsb
xchg
into
add
mov
add
pop
xor
dec
stc
push
sbb
movsl
bound
fstps
xchg
mov
fistl
add
mov
adc
pop
adc
testb
lds
inc
call
jmp
xchg
dec
jne
lods
sti
xor
mov
fst
sahf
add
hlt
add
sbb
mov
mov
popa
les
mov
mov
pop
insl
fmuls
jb
add
jbe
xchg
push
mov
inc
les
pop
sbb
xcrypt-cfb
cmpsl
jecxz
sub
loopne
add
movsl
inc
addl
inc
dec
dec
adc
pop
cli
add
add
mov
and
sub
jl
int
aaa
and
aad
add
add
adc
jne
sbb
inc
in
sbb
add
add
loopne
insb
stos
adc
add
arpl
pop
enter
xchg
add
jns
js
std
andl
pop
out
mov
add
push
sbb
mov
xor
into
sbb
push
sbb
adc
rorl
add
dec
pusha
sub
cmp
out
xchg
dec
adc
sub
pop
sahf
add
or
pushf
add
push
iret
or
push
add
or
push
add
sub
push
xlat
ss
fbstp
add
and
pushf
cltd
or
repnz
and
add
push
xor
jbe
imul
sti
dec
push
mov
jne
mov
xchg
rol
mov
insl
ss
or
push
jge
add
shll
xchg
test
arpl
xlat
add
pop
les
movsl
or
add
cmp
cmp
movsb
add
ss
mov
test
fadds
std
pop
and
sub
js
out
xchg
xchg
gs
add
insb
add
out
mov
outsb
xchg
sub
insl
out
lret
loope
sbb
adc
or
cmpsb
xchg
adc
sbb
xchg
dec
add
lret
adc
push
ds
and
scas
outsb
pop
sub
sti
mov
add
add
add
outsl
cmpsl
fisubrl
ljmp
addr16
mov
cli
aam
push
bound
shlb
push
stos
mov
cmp
add
fcom
pop
je
add
ret
xor
lods
aaa
sub
out
push
int3
jno
in
adc
jmp
out
sub
dec
sahf
push
dec
mov
jl
sahf
jl
ret
add
xchg
sub
inc
in
pop
test
mov
jae
cwtl
inc
pop
cmc
popf
xlat
lds
add
mov
and
sbb
int3
int3
lods
inc
lock
add
xor
jmp
jmp
jle
add
mov
and
insb
lock
add
dec
adcb
mov
push
adc
pop
inc
adc
add
xor
fistl
or
int
hlt
mov
jb
lds
and
and
dec
pushf
cltd
shll
xchg
stc
dec
sti
pop
add
xchg
dec
add
push
out
push
add
jecxz
das
daa
ss
cli
inc
adc
sbb
mov
cmpl
repz
cmpsb
and
xchg
sbb
orb
mov
mov
add
inc
mov
jno
imul
call
sarl
ja
and
add
data16
lahf
aad
pop
testl
ljmp
fldl
je
movsl
push
and
es
enter
mov
inc
add
cmp
pop
add
inc
pop
repz
adc
add
movb
lret
mov
mov
pop
je
and
sbb
cmc
mov
pop
add
push
mov
add
loopne
call
xor
popa
sarb
xchg
dec
lods
rcr
lock
pop
xor
jge
mov
pop
loopne
adc
pop
and
testb
fistps
sub
dec
cmp
add
fnstenv
mov
xchg
mov
pop
imul
pop
out
test
scas
push
pop
pop
nop
lahf
cld
clc
fiadds
in
popf
dec
mov
mov
xor
pop
add
or
pop
add
scas
pop
call
test
add
repnz
xchg
das
xchg
inc
outsb
lods
add
jge
aaa
add
lahf
xchg
cmp
and
ficomps
add
imul
mov
xor
lret
cmpsl
test
out
mov
arpl
aam
fxch
mov
ljmp
mov
stos
ja
shrl
test
fildl
faddl
mov
imul
xchg
test
jo
rol
jnp
mov
xor
into
adc
inc
xlat
sub
xor
int3
add
xor
dec
cld
and
loopne
pop
lods
adc
pop
shrl
add
add
sbb
xchg
popa
jne
push
add
rcl
cmpsb
icebp
inc
jb
es
mov
fs
mov
fsts
add
mov
movsl
mov
into
xor
add
lds
add
incb
or
inc
mov
loop
test
push
fs
hlt
push
mov
cld
or
pop
mov
xchg
or
xchg
or
add
inc
jae
cli
mov
add
aad
gs
enter
and
add
rorl
stos
and
push
sahf
lds
ret
jge
mov
push
xchg
add
faddl
sub
and
repnz
cmp
repnz
jno
lds
sbb
lret
cmpsb
dec
add
add
add
xchg
cmp
jb
jmp
shll
cmpsl
in
add
mov
pop
and
push
int
add
iret
loopne
add
ja
test
add
scas
push
outsl
dec
repz
xlat
loopne
fcompl
or
dec
inc
add
or
jp
movsb
cli
mov
inc
int
add
out
cmpsb
int
pop
shll
jnp
jmp
ljmp
sub
loope
incb
cmpsb
sbb
add
sub
xchg
mov
adc
adc
aas
dec
or
add
cmp
jb,pt
mov
test
sbb
mov
sub
mov
cmp
les
out
mov
and
inc
xor
add
adc
sbb
cmpsb
xchg
adc
or
pop
inc
dec
sar
gs
sti
pop
fdivrl
add
into
rorl
sub
push
loop
je
lock
mov
add
add
imul
in
add
add
mov
loopne
mov
or
mov
fimull
pop
mov
add
out
fisubrs
inc
push
iret
add
and
inc
push
inc
jmp
clc
fidivrl
inc
mov
arpl
mov
sub
jo
pop
mov
cli
xor
cs
fwait
int
adc
add
add
bound
out
cmp
mov
pop
add
ss
cltd
fwait
xchg
mov
ret
add
mov
test
add
adc
jne
bound
pop
mov
cmp
add
xchg
andb
in
dec
dec
cmp
test
daa
mov
lods
xor
jge
jmp
add
mov
pop
mov
lods
lock
shll
jne
xor
push
and
dec
dec
sbb
mov
cmp
daa
push
jnp
xchg
mov
push
jb
jb
or
push
iret
sahf
loopne
stc
add
repz
icebp
std
shlb
sahf
push
idivb
sti
fmuls
repnz
sbb
lret
add
das
dec
add
adc
and
cmc
fiaddl
or
and
out
jno
into
fwait
pop
jge
sub
push
das
jnp
sub
push
cmp
cwtl
repz
adc
outsb
mov
roll
movsb
adc
mov
fdivrs
cmpsl
adc
mov
shlb
mov
out
jle
shll
pop
das
add
mov
add
add
ljmp
inc
sbb
pop
add
dec
pop
cwtl
pop
mov
cs
sub
xor
mov
mov
add
movb
into
add
add
and
idivb
test
cmp
push
pop
mov
add
das
mov
test
sub
add
mov
push
xor
sub
jno
lods
ss
cltd
aaa
ret
das
add
lods
cmp
insb
popl
pop
clc
popf
mov
push
adc
xchg
jns
js
test
or
mov
data16
test
adc
addl
push
mov
add
mov
aam
xchg
fadds
movsl
sbb
fidivs
and
mov
add
sbb
loop
hlt
cli
add
iret
mov
jg
mov
add
daa
or
mov
mov
shrl
arpl
sbb
mov
push
sbb
jo
add
mov
push
into
in
mov
js
mov
pop
cwtl
push
sbb
xchg
aaa
xchg
push
inc
cld
int3
daa
jne
in
xor
add
outsb
out
or
sub
pop
add
enter
add
and
mov
mov
pop
mov
sbb
aas
sbb
cmpb
test
out
add
sbb
fsub
add
into
push
add
faddl
cmc
mov
movsl
fs
enter
lock
xchg
popa
stos
mov
cmc
inc
hlt
push
popf
mov
adc
aad
add
out
clc
lock
movl
sub
or
call
add
adc
add
pop
enter
xor
in
add
repz
adc
aas
iret
movsl
cs
fcmovu
jae
loope
ss
pop
adc
cmp
fcomps
fldcw
sub
je
ss
lods
or
popf
das
add
add
pop
add
ficomps
arpl
sbb
out
mov
mov
pop
xor
mov
addr16
dec
cmp
movsb
loopne
and
inc
mov
add
pop
add
sbb
pop
sub
cmp
xor
sahf
out
jnp
adc
dec
xor
mov
mov
pop
mov
and
inc
dec
adc
sbb
loop
enter
pop
jno
add
icebp
lahf
xor
add
adc
inc
arpl
inc
jmp
sbb
pop
mov
jl
push
mov
loopne
pop
add
xchg
add
cmp
xor
aam
pop
cmp
sti
arpl
lods
lock
push
mov
jmp
jno
test
shl
movsb
inc
add
jbe
aad
add
ss
pop
cmp
sahf
xchg
mov
mov
mov
scas
gs
out
inc
xchg
add
add
xchg
outsb
and
or
jmp
mov
add
fnstsw
ret
add
xchg
cwtl
int
rorb
lock
repz
cmp
hlt
in
cmpl
mov
cmp
imul
xor
cli
mov
cmp
ja
mov
pushf
jno
sub
push
adc
fcmovb
arpl
add
xchg
add
cli
cmp
inc
pop
mov
push
sbb
sahf
cmpb
sti
push
mov
add
addl
jecxz
or
bound
inc
add
sbb
mov
cmp
cwtl
in
adc
jno
out
mov
mov
cmp
or
cmp
jno
mov
dec
data16
jae
lahf
orl
stos
or
xchg
fwait
mov
adc
push
pop
jge
mov
test
mov
cli
inc
adc
jno
rcl
cmpl
outsl
jecxz
add
xor
push
sub
dec
xchg
push
in
sti
gs
adc
les
mov
pushf
adc
mov
imul
fisttpll
loop
sbb
cli
dec
jg
ret
push
js
inc
call
add
lret
mov
pop
and
repz
pop
repz
cmp
arpl
jo
jge
mov
daa
and
outsb
cld
add
out
icebp
lods
add
loopne
shlb
add
mov
int3
test
mov
mov
cmp
mov
outsb
sub
push
add
popl
add
lret
movsl
repz
cmpsb
jno
mov
adc
outsl
jle
outsl
add
sub
add
pop
int3
cmp
fisubs
mov
jge
rclb
movsl
jne
pushf
xlat
in
inc
das
dec
mov
jmp
fistl
add
jns
push
int3
jne
add
add
loopne
cmp
loopne
test
mov
test
add
add
add
or
out
inc
sub
push
in
insb
daa
xor
lds
add
cmp
popf
fwait
cmp
jo
pop
mov
pop
and
imul
scas
sub
lret
adc
mov
jnp
add
add
popa
sub
sti
push
sbb
adc
in
and
pop
rorb
add
inc
jle
inc
mov
jmp
add
lds
inc
fists
or
mov
add
add
xor
outsb
jb
adc
mov
mov
into
dec
imul
jle
add
hlt
call
push
add
gs
add
div
loope
xor
mov
add
inc
in
aam
mov
xchg
push
xchg
add
add
or
cmc
cmc
mov
shlb
add
jne
pop
mov
aam
iret
outsl
inc
mov
es
pop
jge
aas
fimuls
push
add
leave
add
mov
add
mov
mov
std
and
std
push
add
push
sub
test
cmpsb
add
ret
mov
mov
sub
fisubrl
imul
test
push
add
inc
push
jae
xor
mov
pop
jmp
sbb
inc
ret
out
pop
roll
mov
cmp
mov
pop
loop
mov
jno
add
cld
movl
pushf
mov
inc
inc
in
add
jae
or
iret
mov
xchg
nop
sub
in
retw
add
adc
inc
mov
aam
mov
imul
ret
dec
in
gs
push
sub
sub
pop
repz
rcll
mov
mov
dec
repz
into
or
out
pusha
xor
std
add
lods
lds
rolb
inc
pop
aaa
inc
dec
mov
mov
jge
dec
out
add
pop
in
sub
icebp
pop
mov
push
add
add
fcmovne
push
jbe
add
pop
sti
dec
sahf
or
test
mov
in
lcall
add
pop
add
mov
sbb
out
sub
add
test
add
es
and
rorl
in
mov
add
sahf
in
sbb
test
jno
addl
shll
add
mov
test
pop
fsubr
dec
ret
or
mov
adc
mov
fisubrs
add
jg
dec
in
sub
lcall
push
add
dec
ss
aam
out
inc
push
xlat
and
add
adc
sbb
push
jge
xor
in
push
cs
enter
lea
inc
add
inc
aaa
dec
add
stos
rorl
inc
add
add
dec
fldl
fprem1
filds
imul
cli
std
dec
mov
or
xchg
add
mov
add
adc
sub
inc
imul
xor
xchg
mov
dec
add
in
xor
dec
iret
mov
xchg
les
and
mov
mov
mov
mov
inc
fsts
mov
test
or
sti
out
add
js
xchg
mov
mov
ja
cwtl
and
add
int
adc
roll
mov
add
xchg
stos
dec
cltd
cmp
xorb
adc
out
add
out
cmp
std
nop
push
mov
xchg
add
das
test
inc
sbb
add
les
movsl
add
and
xor
mov
ljmp
cwtl
fbld
fwait
cmc
add
jge
out
sbb
xchg
ret
jle
inc
sub
popa
loopne
arpl
imul
xor
es
add
xchg
pop
add
add
add
pop
and
adc
push
push
mov
mov
adc
sub
outsl
in
adcb
movsb
es
cmp
test
cmp
imul
in
fdivp
scas
add
bound
sti
add
dec
or
xchg
mov
test
mov
xor
add
movb
scas
pop
add
dec
test
cmc
icebp
aas
andb
shlb
mov
movsb
add
dec
imul
insb
mov
cs
loope
add
ja
push
sub
inc
add
add
test
out
and
icebp
das
mov
jnp
dec
subb
cmp
sub
adc
daa
mov
imul
mov
inc
mov
xor
mov
movsl
mov
add
call
dec
push
jg
xchg
add
pop
mov
adc
mov
pop
sub
sahf
add
add
push
mov
add
stos
xorl
iret
hlt
lret
lods
xor
cmp
dec
in
push
scas
clc
add
sub
xor
add
int
hlt
add
xchg
in
scas
fwait
cmpsb
sbb
xchg
add
sbb
mov
sahf
mov
cmc
outsl
pop
lret
lcall
cmp
push
push
xchg
mov
imul
aaa
shll
xor
xlat
fwait
ljmp
out
add
adc
sbbb
pop
int
sbb
push
add
add
sarb
loopne
mov
cltd
jb
and
xchg
rclb
push
in
outsl
pushf
dec
sub
lds
dec
and
dec
jne
test
add
lock
add
push
insl
inc
out
nop
faddl
mov
pop
cli
sub
sarl
pop
pop
push
or
cmpsl
cld
mov
popa
filds
outsb
dec
add
faddl
stos
pop
mov
adc
sub
dec
push
mov
shl
push
rclb
xor
add
pop
add
xchg
rolb
inc
mov
dec
jo
fldl
icebp
shl
ss
add
pop
mov
inc
add
pop
sbb
add
push
mov
add
push
add
push
roll
push
pushf
into
incb
movsb
xlat
les
inc
dec
inc
adc
push
pushf
inc
jle
add
insb
xchg
add
xor
push
cmp
sti
gs
mov
mov
cmp
jle
xor
xor
movb
dec
push
rcrb
stos
lcall
jle
insb
xchg
test
jecxz
ja
dec
add
mov
jnp
sub
inc
lods
add
xchg
jb
test
ja
add
mov
or
add
popf
out
repz
push
cs
inc
add
cmpsb
subb
out
cltd
inc
cmpsb
add
int
lods
test
inc
mov
lock
add
cmp
add
leave
into
mov
jecxz
shll
xor
mov
in
xor
sub
shl
push
push
push
or
cltd
sbb
adc
ja
rolb
sbb
sub
push
push
add
add
inc
divl
cmpsb
and
sub
mov
add
lds
add
insl
out
int3
sbb
into
sub
sub
stos
pop
add
in
popa
xchg
push
mov
clc
repnz
sub
ljmp
push
add
sbb
mov
lock
nop
dec
lds
fwait
mov
rolb
push
or
out
inc
out
nop
lds
jp
fidivrs
test
out
dec
fisubs
mov
xchg
pop
lret
add
jl
loope
test
add
incb
mov
pop
jne
add
add
mov
iret
out
inc
stc
lods
cmp
jp
add
pop
ljmp
mov
add
or
shrl
rcrl
and
mov
sub
add
lret
sub
lds
push
fistpl
in
push
xor
xor
jle
add
fistl
add
cmp
popf
aaa
imul
add
dec
cmpsb
xchg
imul
cmp
pop
jg
sbb
lea
jb
mov
jle
insl
fisttpl
or
add
dec
jnp
sti
js
mov
dec
sbb
jns
dec
sbb
incb
loop
pop
mov
xchg
divl
add
add
lahf
test
dec
add
push
loop
inc
add
notb
mov
push
nop
sub
ja
add
add
enter
dec
xchg
cwtl
ljmp
adc
add
push
rolb
ret
jmp
dec
incl
loope
dec
sar
lods
add
add
insl
xor
cld
sub
dec
xchg
daa
aas
add
adc
dec
inc
add
xchg
jmp
adc
ljmp
mov
dec
xor
and
add
pop
adc
rcl
sub
pop
xor
sbb
stos
cltd
push
pop
add
insb
outsl
and
pop
aad
push
jb
std
arpl
jmp
sub
flds
and
pop
mov
dec
cmpsb
rcrb
xchg
cli
sbb
adc
sbb
idivl
shlb
sub
push
scas
dec
popa
and
hlt
jecxz
rcrb
shl
insb
add
dec
mov
sub
pop
pop
cmpsl
es
add
out
stos
insl
sbb
dec
xor
pop
bound
popa
jp
push
or
cmp
gs
cmp
aas
mov
sahf
cld
push
fisttpll
xor
js
out
ret
mov
cs
sbb
inc
cmp
incb
mov
fcomi
push
dec
mov
repz
fildl
fisubrl
orb
dec
or
call
xlat
or
orl
cmpb
pop
pop
cld
add
lcall
jmp
dec
lods
fisubl
std
mov
xor
mov
add
add
mov
pop
addl
cmp
and
inc
add
mov
sti
or
xchg
cmp
mov
stos
sub
mov
mov
lret
cmpsb
add
add
je
sub
push
push
repz
fcomps
enter
xchg
out
repnz
iret
add
sti
outsb
das
aas
rol
test
dec
arpl
fmull
push
je
xlat
dec
inc
add
inc
je
repnz
add
xchg
aam
mov
add
dec
inc
mov
loopne
pop
out
addl
pop
xlat
and
dec
call
or
jae
lret
cmp
gs
add
scas
test
ret
insl
cmp
in
adc
rorl
int3
push
xor
jecxz
inc
roll
jp
fdiv
xlat
and
es
adcb
push
cld
dec
add
mov
insb
xchg
sar
out
imul
xchg
add
loope
cld
aaa
out
and
scas
or
mov
xchg
pop
loopne
stc
test
jp
sbb
fwait
xchg
in
imul
xor
add
jnp
mov
repz
add
sbb
pop
cld
sub
adc
pop
popa
fimull
jo
dec
stos
pop
add
cmc
push
push
cmp
adc
lcall
lock
sbb
movsb
jp
add
rcll
jno
adc
push
out
lea
lahf
int
mov
fisttps
push
push
popf
sbb
call
xchg
xorb
pusha
nop
fcmovbe
test
add
jmp
hlt
ljmp
jo
int
arpl
clc
pop
xchg
push
imul
sbb
add
and
push
add
mov
xchg
jo
ja
int
call
into
inc
xor
sti
test
shll
movsl
add
xchg
add
adc
push
negl
enter
repz
push
in
aam
rcrb
aaa
ljmp
pusha
and
rolb
pop
add
cmpsb
cmc
out
fiadds
mov
mov
jg
jmp
call
pop
or
popa
or
add
push
sub
dec
add
xchg
adc
xchg
mov
mov
mov
inc
add
jmp
sub
es
adc
push
enter
dec
movsl
add
es
or
or
insl
adc
and
mov
enter
push
test
add
push
test
into
inc
pusha
jbe
scas
xchg
es
aam
rolb
push
and
mov
and
mov
sbb
add
out
push
sahf
push
fldl
mov
push
gs
jb
sbb
stos
push
add
push
insb
mov
je
lods
leave
movsl
outsb
daa
sbb
enter
roll
scas
insb
xor
add
movsb
mov
fwait
jl
fsubr
outsb
outsb
out
cs
push
add
cwtl
icebp
mov
lret
aas
push
pop
xchg
jmp
pop
add
add
fadds
test
add
or
jns
sbb
inc
add
and
add
inc
wbinvd
insb
popf
mov
push
add
test
out
add
cmp
push
adc
xchg
repz
jns
orb
pop
sahf
mov
in
push
sbb
pop
subb
push
mov
std
leave
cmpsl
add
nop
xchg
cwtl
inc
sub
lock
shl
or
mov
imul
add
movsl
add
andb
cmp
out
xchg
add
push
test
pop
js
dec
add
jnp
xor
add
sbbl
and
outsb
mov
mov
loopne
add
mov
out
xlat
add
test
cld
jecxz
add
or
jmp
sbb
and
jae
mov
or
add
subb
arpl
add
add
inc
outsb
fisttpll
inc
lret
or
xor
xor
je
jg
and
ja
popa
and
inc
sbbl
sbb
add
movsb
pop
xchg
push
push
adc
lods
jge
cwtl
test
add
hlt
test
je
test
add
mov
sbb
pop
inc
or
add
out
sub
iret
outsl
test
out
sub
cmp
xchg
pop
filds
pop
push
xchg
and
xchg
loopne
push
pop
mov
and
mov
rorl
dec
add
sahf
pusha
out
in
pop
dec
and
lahf
mov
icebp
jmp
pop
sahf
add
in
add
imull
lcall
lods
xchg
addl
dec
cmpsb
mov
js
cmp
mov
add
decl
add
push
into
pop
mov
js
insb
sub
ss
sbb
dec
loopne
pop
sub
add
or
cmp
sbb
push
push
add
mov
gs
add
lock
in
test
adc
icebp
dec
loopne
inc
push
jae
pusha
add
add
sub
mov
ds
mov
fdivl
pop
push
sbb
sar
jae
mov
xor
sub
dec
movl
pop
test
add
adc
int3
adc
add
dec
lea
jle
das
cltd
mov
cmc
sub
test
ret
xor
subb
lods
lret
jb
inc
out
cli
dec
or
mov
fmuls
pop
insb
enter
xchg
add
push
shrb
cmp
popf
nop
add
adc
push
add
add
xchg
test
xchg
and
and
cmpsb
dec
lahf
mov
jg
jp
in
push
cmp
mov
std
dec
jmp
bound
decl
add
insl
mov
push
mov
loope
cmpsl
incb
push
push
incb
mov
sarl
add
xor
add
mov
add
jae
jl
xchg
in
jg
xor
rcr
jmp
add
fadds
mov
fldcw
cmp
pushl
gs
push
dec
push
inc
add
mov
lea
rcr
rolb
jecxz
fwait
jae
cs
add
enter
adc
add
push
js
andb
or
ret
mov
mov
nop
das
jmp
mov
int
rcll
adc
mov
add
sbb
test
lds
jge
in
add
mov
rolb
mov
add
add
inc
sub
pop
add
mov
mov
popf
inc
sbb
pop
jmp
inc
shlb
lods
pop
daa
out
pop
call
lret
popa
push
faddp
das
jno
rclb
add
fdivr
cmp
not
mov
adc
push
adc
add
push
xor
add
popa
clc
repz
insl
mov
add
call
mov
jbe,pn
push
les
add
loopne
add
ficomps
sbb
jmp
dec
nop
into
jae
or
adc
stc
out
dec
test
xlat
mov
add
xor
pop
les
inc
xchg
cmp
xor
insl
push
lret
mov
jae
jne
sahf
xchg
sub
pop
xchg
add
sub
lcall
mov
xchg
or
loop
sbb
loop
adc
mov
movsl
pop
add
cmp
fs
shl
and
pop
aaa
popa
outsl
sbb
mov
mov
push
add
daa
mov
and
jg
pusha
loopne
mov
leave
mov
pop
pop
cs
and
stos
or
movb
fnstsw
or
inc
rclb
cltd
imul
inc
mov
add
add
scas
and
into
adc
pushf
dec
sub
stos
or
test
adc
js
addb
mov
mov
pop
outsl
adc
push
add
add
push
sub
pop
test
add
loope
pop
ss
xchg
jbe
jae
sbb
mov
testl
lods
mov
addl
add
push
push
push
dec
push
add
cltd
aad
nop
aam
pop
lock
mov
mov
lods
lcall
loop
or
jne
push
add
sub
mov
test
add
loope
add
sub
bound
sbb
mov
pop
sbb
xchg
cltd
xor
call
and
scas
ret
sarb
cltd
xchg
fisttpll
insb
std
mov
inc
add
add
push
decl
mov
mov
jbe
popl
inc
arpl
xchg
add
add
leave
and
jg
scas
hlt
add
pop
mov
int3
xor
lods
cli
jns
add
call
xchg
pop
mov
out
movsb
in
xchg
test
std
bound
inc
mov
lods
pmulhuw
pop
clc
push
unpcklps
idivb
decb
ret
add
add
scas
add
mov
mov
fbld
lods
arpl
inc
ljmp
mov
ljmp
mov
cltd
repz
pop
add
mov
xchg
pop
test
cmpsl
repz
fisttpl
imul
pop
or
cmp
bound
mov
shl
dec
cmp
sub
xchg
fwait
test
das
add
scas
and
mov
fistl
subl
jae
int
jae
cwtl
into
add
jb
mov
inc
dec
and
pop
add
mov
in
push
in
mov
scas
xor
sti
cltd
aaa
push
imul
icebp
lcall
add
pop
add
loopne
pop
test
dec
sbb
repnz
add
outsl
xor
jle
leave
pop
cmp
loop
test
pop
mov
inc
mov
xlat
cwtl
adc
dec
mov
and
xorl
cmp
pop
add
subl
mov
mov
xor
add
sbb
jne
mov
mov
lds
mov
das
subb
loope
scas
xor
add
ret
imul
jmp
add
jb
sbb
lcall
add
rcr
lret
pop
and
inc
jae
test
ljmp
add
fistl
add
adc
xor
push
orl
clc
out
add
popa
out
notb
mov
sbb
loope
ja
pop
pop
bnd
cwtl
sub
mov
cmpsl
dec
mov
or
jp
add
lock
rorl
xchg
push
push
sub
mov
pusha
sub
rorb
or
idivl
jge
push
rcrl
fstl
cmp
cmpsb
add
into
jge
mov
into
cld
sbb
mov
add
imul
pop
out
push
xchg
add
jno
adc
int3
cmp
subl
or
clc
pop
cmpsl
repz
sub
pop
loopne
push
push
add
pushf
add
fsubs
lods
add
xchg
in
dec
mov
scas
orb
loopne
fidivl
std
sbb
push
add
addr16
retw
idivb
and
in
dec
pop
add
enter
jne
int3
aam
xor
mov
loopne
lret
add
pusha
add
repnz
pop
mov
mov
aas
sbb
jl
ret
fdivrs
addr16
rclb
or
adc
pop
mov
sar
in
mov
cmpsl
inc
add
and
popf
and
cmp
add
jecxz
add
cmp
and
loope
adc
fistl
repnz
call
jno
ljmp
out
addb
cmpb
nop
lods
push
mov
test
ljmp
pushf
fwait
mov
xchg
sbb
mov
pop
rol
clc
inc
add
add
js
add
jge
xchg
adc
mov
xor
add
sbbb
inc
mov
aad
mov
sbb
xor
pop
sbb
fsubrs
pop
loope
sub
mov
sahf
loop
push
cli
scas
mov
add
dec
xor
sbb
push
movsb
and
sub
add
jb
add
aaa
add
int
inc
xor
mov
test
sbb
es
hlt
and
fildl
pop
push
add
fcmove
les
call
xchg
add
cmp
or
lds
dec
notb
rolb
sbb
popf
xchg
jge
mov
add
pushf
push
add
mov
iret
cld
xchg
insl
or
add
movsl
fldl
add
cmpl
pop
sub
jnp
jge
or
daa
test
fchs
out
push
lahf
out
jge
pop
mov
roll
add
push
inc
xchg
dec
jp
out
xchg
daa
sbb
jmp
sbb
jmp
add
test
test
aad
inc
ds
mov
mov
int
jo
insb
test
sbb
mov
test
out
mov
and
and
mov
cmpsl
in
and
addl
xchg
inc
mov
in
popa
add
jne
push
jge
aaa
mov
add
or
mov
iret
push
jecxz
add
sub
jns
movsl
xchg
insl
add
dec
add
inc
lret
dec
popa
add
sub
and
fcmovnbe
loop
jl
pop
push
mov
movb
add
cmp
and
pop
pop
dec
push
scas
sahf
jbe
sbb
xchg
add
out
pushf
or
lods
add
fnsave
or
mov
add
fidivs
add
test
push
adc
xor
jnp
das
bound
in
repz
adc
and
enter
subl
fscale
fisubrs
push
sub
mov
iret
mov
scas
add
sbbl
add
mov
lods
mov
xchg
cltd
sub
mov
outsb
or
jl
not
push
xchg
lods
push
mov
add
add
adc
jg
movsl
add
pushf
sahf
or
sbb
daa
mov
add
test
jmp
dec
nop
xchg
add
inc
loop
adc
push
mov
jmp
lcall
or
std
add
sub
shr
jg
mov
or
or
inc
into
add
push
inc
mov
out
mov
jecxz
add
add
add
out
add
and
jbe
scas
xchg
dec
jmp
test
scas
cli
sahf
push
mov
jns
ja
daa
xor
fistl
fxch
arpl
call
ds
mov
add
in
out
xchg
fsubl
xchg
frstor
and
adc
add
add
mov
add
cmp
mov
repnz
jo
sbb
in
insl
mov
aad
aaa
adc
cmp
js
fisubs
add
sub
sbb
roll
dec
adc
push
mov
lcall
test
mov
dec
jbe
xor
les
in
dec
add
add
loop
jbe
dec
and
mov
rcrl
push
aad
and
add
movl
leave
mov
scas
adc
aam
sar
adc
mov
pop
mov
or
add
xor
xchg
add
jecxz
jecxz
pop
fcoml
add
mov
add
add
mov
hlt
xor
pop
scas
jle
mov
ljmp
pop
bound
cld
mov
cli
mov
xchg
nop
icebp
cmpsb
test
add
fidivl
mov
rorl
xchg
cmp
sub
nop
insb
add
loopne
inc
xchg
add
stos
in
sub
xchg
cmp
jo
add
cmpsl
mov
xchg
data16
jl
add
pop
add
add
addr16
xchg
cwtl
pop
pop
or
add
adc
out
push
xchg
mov
test
xlat
inc
pop
fidivrs
lds
push
loopne
add
add
scas
jnp
mov
add
add
aaa
pusha
sbb
cld
fs
mov
jb
sub
hlt
add
cwtl
jl
and
adc
shr
sbb
jnp
push
test
bound
inc
xor
lds
and
shll
jg
in
push
push
or
add
sub
sahf
xor
lret
loopne
push
xor
and
cmp
loop
incl
xchg
push
fwait
xchg
fs
insb
test
cli
adc
or
mov
xor
pop
jecxz
loop
mov
xor
add
jno
cld
push
ret
loope
ljmp
mov
xlat
adc
xor
mov
push
es
je
jae
and
fcoml
jecxz
test
shrl
lods
push
mov
scas
shrb
or
sbb
adc
movsb
sahf
gs
sub
call
add
push
out
lret
dec
lds
fwait
mov
sbb
rolb
push
xchg
adc
lahf
dec
mov
lds
inc
xchg
or
enter
mov
mov
xor
mov
popa
add
add
push
mov
lods
mov
idivl
adc
dec
add
add
aaa
add
js
mov
fstpl
popf
stc
pop
mov
es
dec
add
ja
jne
pusha
adc
pop
add
loopne
cmc
pop
adc
mov
testb
out
lods
mov
or
mov
inc
in
in
add
pop
inc
clc
mov
pop
call
push
addl
pop
add
xor
push
push
xchg
fwait
sbb
add
sahf
sub
outsb
outsb
xor
fxch
add
das
repnz
and
popf
call
pop
clc
xchg
add
test
repz
mov
ds
cli
inc
push
or
cltd
mov
add
sbb
pop
fdivrs
ljmp
or
notl
add
imul
aaa
pop
mov
cli
cmp
add
icebp
clc
mov
jp
jmp
lea
pop
cmp
add
add
add
ret
add
iret
lea
push
out
mov
icebp
iret
into
inc
scas
lods
xor
scas
adc
dec
add
lods
movsb
pop
sub
data16
pop
jns
pop
and
push
pushf
sahf
and
mov
adc
cs
leave
mov
fwait
add
jge
cmp
jecxz
and
cltd
cwtl
ret
out
addr16
popa
fistpl
inc
pop
add
adc
add
dec
push
or
xchg
add
push
add
test
int
xlat
add
inc
sbb
fisubl
sti
cltd
dec
add
cmp
scas
mov
jmp
push
add
push
add
ljmpw
outsl
negb
sbb
add
outsl
sbb
add
add
jnp
cmc
and
insb
call
jb
imul
pop
xchg
stc
sub
sub
push
add
add
xor
pop
and
add
aaa
adc
out
lcall
mov
orb
cmc
xchg
jae
in
push
in
sbb
xor
shrl
mov
mov
outsl
clc
add
imul
insl
stc
push
sub
add
mov
scas
add
xchg
add
gs
out
mov
mov
sbb
mov
fsubrl
sbb
add
xchg
fdiv
nop
add
stos
cwtl
imul
sbb
lea
sub
aam
mov
scas
add
adc
pushf
aad
push
or
aas
cmp
arpl
cmp
and
movb
std
rclb
pop
popa
sbb
xlat
push
cmpsb
popf
out
add
in
test
adc
cmc
or
fs
xor
rorb
flds
cmp
add
adc
js
add
jp
adc
bound
xchg
mov
jns
rcll
cmc
xchg
xchg
dec
xor
cwtl
cmp
pushf
add
add
ljmp
dec
adc
insb
add
jmp
cmc
pop
shl
into
mov
jmp
adc
jns
pushf
jne
jmp
fsts
andl
push
out
out
cld
lret
insl
sbb
sbb
inc
es
fmulp
loope
add
pop
xchg
sub
hlt
retw
mov
test
mov
mov
popa
add
xchg
sahf
add
movl
lahf
sahf
inc
gs
lods
mov
inc
or
jns
aas
or
add
sbb
mov
push
jo
mov
fwait
push
push
jb
pushf
xor
lcall
or
add
pop
rolb
jge
lret
add
fstps
out
data16
into
shrl
push
aas
jb
iret
add
fcmovnu
add
add
data16
jge
fmuls
lods
mov
pop
fdivl
sahf
cmp
outsl
fcomp
ds
xchg
das
sbb
out
add
int3
add
push
jmp
in
js
jns
add
or
addb
cmp
lea
mov
movsl
test
cmpsl
dec
lods
data16
pushf
add
add
add
xlat
movsb
mov
cmp
imul
adc
add
dec
lods
shlb
dec
pop
sbb
cmp
outsb
push
gs
iret
inc
sbb
and
mov
add
add
lret
jg
jge
ret
xchg
dec
incb
inc
push
xor
add
repz
or
cld
pop
popa
or
cmp
loopne
push
das
sbb
pop
sbb
in
jle
xchg
add
ret
lret
pop
push
std
insb
mov
push
jnp
pop
pop
fwait
push
add
inc
xor
sti
cld
mov
sub
push
jne
fidivrl
ss
dec
jecxz
insl
test
out
add
inc
add
aad
jge
add
mov
fsubs
xor
inc
nop
loope
cmp
xor
jmp
add
sbb
xor
inc
push
icebp
xor
dec
out
lahf
xchg
insl
push
lods
add
clc
cmp
rclb
je
xchg
iret
test
add
xchg
jmp
cmp
cmc
add
repnz
push
js
arpl
js
add
bound
mov
fiadds
add
add
jbe
add
adc
mov
and
add
xor
add
mov
fsubs
add
ljmp
add
jo
dec
insl
cltd
inc
pop
push
in
add
rolb
add
sbb
push
imul
push
notb
push
push
push
xchg
nop
add
add
js
add
push
rolb
lret
sub
xor
push
and
dec
and
add
sub
dec
fisubrl
adc
dec
jmp
xchg
sti
je
std
xchg
and
pop
or
pusha
jle
or
fwait
cmp
iret
ret
scas
lods
dec
adc
int
inc
imul
pop
sub
outsl
rclb
lret
pop
loopne
xchg
mov
andb
add
add
xor
insb
sub
gs
push
mov
hlt
push
in
mov
fs
pop
and
rorb
add
sub
dec
sbb
push
addb
mov
inc
mov
shlb
imul
idivb
addb
jecxz
adc
cmp
ret
add
xor
lods
jle
ss
rorl
and
cmp
add
jne
ss
add
bound
repnz
mov
fstl
or
xor
and
cmpsb
xchg
sti
add
pop
push
inc
xchg
xor
jns,pn
adc
es
imul
add
mov
stos
push
inc
out
out
imul
dec
add
mov
lea
add
mov
push
les
iret
jmp
xor
add
add
xchg
addl
or
xchg
xchg
iret
cltd
scas
shr
pop
xchg
mov
call
jo
sub
adc
stos
add
cmp
add
sahf
xchg
add
push
xor
mov
add
sub
mov
adc
sbb
fimull
add
ja
pusha
add
push
pop
jp
inc
adc
sti
add
pushf
pop
lods
mov
in
fwait
es
jb
out
push
xchg
push
add
mov
add
mov
add
mov
icebp
jge
jbe
xchg
jne
outsl
sahf
push
out
dec
scas
stc
mov
stc
xor
push
inc
imul
pop
add
add
repz
js
add
shrb
adc
pop
mov
js
add
into
lock
and
enter
icebp
xchg
mov
lea
add
pop
inc
add
pop
or
dec
jecxz
mov
loope
jmp
xchg
jp
lret
xchg
dec
shrb
and
out
jl
jne
jbe
cmp
test
pop
int
add
movsb
in
mov
mov
add
arpl
aas
add
dec
push
jge
les
aas
add
jle
push
inc
push
xlat
xchg
fwait
jl
stos
rorl
sti
cmp
mov
sbb
cltd
push
or
add
add
add
es
jecxz
xor
movsl
jmp
mov
dec
int3
mov
push
ret
add
xchg
cmpsl
movsl
lods
jne
dec
push
subb
mov
ljmp
add
nop
jo
lret
lods
add
dec
fs
push
dec
pop
xor
lods
es
sub
add
pop
aad
add
push
jge
inc
push
in
mov
out
in
xor
and
imul
int3
mov
in
dec
aad
xchg
cltd
inc
cld
jmp
popf
dec
stc
mov
jge
add
add
sub
mov
cmp
mov
push
cwtl
pop
and
pusha
popa
sub
sbb
add
fsubrl
cmpsb
lahf
daa
mov
in
rcr
pop
movsl
flds
ret
pop
jmp
in
lahf
mov
cmp
cmpsb
add
subb
in
mov
and
lods
adc
mov
dec
in
add
dec
mov
ret
cmpsb
lret
jbe
pop
out
insl
ret
jo
outsb
or
out
add
scas
insb
lds
jge
jne
aaa
push
movb
mov
blci
call
add
push
and
dec
xchg
fiadds
adc
mov
jo,pn
dec
push
aam
add
adc
push
aad
mov
dec
mov
jns
push
dec
call
or
jno
int
hlt
jno
add
aaa
adc
fcomip
iret
andl
mov
add
mov
daa
add
mov
and
outsb
das
sub
add
jle
xor
push
lock
int3
xor
xchg
adc
xor
lods
mov
lea
adc
mov
add
add
push
jl
repnz
push
in
and
imul
inc
cmpsb
mov
pusha
add
addl
incl
movsl
jg
loop
xchg
cmp
add
jno
pop
jl
sbb
mov
mov
xchg
cmp
mov
add
pushf
add
inc
add
adc
test
pop
mov
sahf
pop
pop
out
sti
sti
loop
std
movsl
das
dec
hlt
or
xor
test
dec
pop
add
clc
scas
cmp
mov
shlb
pop
shlb
xchg
push
xchg
dec
insb
fcom
xchg
clc
xchg
stc
push
pop
and
pop
push
xor
leave
push
insb
add
add
lock
add
imul
jo
and
add
jl
sub
shll
cmpsb
and
jns
mov
hlt
divb
addb
enter
cmp
fisttpll
xorb
test
xchg
addr16
aaa
push
imul
sbb
loope
add
lcall
into
add
push
ds
mov
xchg
add
in
fidivs
add
add
call
mov
mov
push
movsl
ret
mov
lods
cltd
daa
cmp
stos
push
subb
push
inc
adc
mov
push
pop
or
mov
xlat
lock
add
pop
sub
es
jge
jmp
popa
imul
outsl
xor
mov
add
jl
mov
test
fisttpll
std
scas
lods
mov
insb
pushf
or
mov
add
xor
ja
cld
and
cwtl
push
pop
cmp
test
dec
imul
jge
cld
mov
dec
sahf
add
and
jmp
add
add
aam
dec
icebp
pop
pusha
mov
shlb
idivb
scas
add
xor
sub
movsl
lods
mov
popa
cmp
add
add
xor
add
popa
jne
add
mov
dec
add
cli
adc
insl
jns
lods
mov
addb
add
jp
sahf
into
lahf
jl
mov
mov
fs
sbbb
add
add
jle
addb
push
mov
inc
rclb
cltd
ja
push
pop
jmp
jge
xchg
jg
dec
loopne
xor
jne
clc
fcmovnbe
nop
fadds
stos
clc
aas
sub
imul
sarb
and
jbe
add
sub
or
fists
test
or
repz
imul
pop
aas
rcr
pop
xor
push
subl
roll
sti
mov
pop
testb
xchg
in
enter
add
arpl
push
inc
stos
sarl
xchg
push
xchg
add
mov
int
pop
jmp
outsl
lds
and
lahf
add
inc
add
lea
outsl
fbld
add
inc
pop
lahf
mov
push
lret
add
sub
pop
bound
cltd
add
nop
mov
insb
mov
repnz
filds
xchg
inc
std
cmp
orl
cs
enter
sub
inc
pop
push
mov
xchg
jnp
std
sub
push
or
ljmp
push
inc
pop
call
push
add
out
add
inc
mov
sub
add
xchg
add
add
cmc
push
mov
je
ret
xor
xor
out
jp
fwait
mov
mov
push
add
stos
lods
sub
fldt
pusha
imul
adc
cmp
hlt
std
roll
movb
sahf
add
stos
add
sub
andl
lods
gs
mov
xchg
shl
es
and
xor
popf
sbb
repz
lret
shlb
sbbl
inc
outsl
pop
enter
nop
loopne
add
sub
cli
loop
nop
or
xor
push
sub
cmpsl
roll
test
add
fidivrl
int3
cmp
add
add
inc
add
push
xchg
lret
add
add
cld
ds
test
stc
mov
jge
push
add
sbb
data16
mov
inc
jns
outsb
or
cmpsl
fistps
mov
out
push
add
sub
das
aaa
dec
dec
add
outsb
pop
pop
scas
and
inc
add
add
or
shll
dec
pop
fsubrp
add
add
cmpsb
jecxz
scas
mov
xchg
inc
movsl
fmull
adcl
shll
jecxz
push
push
insl
add
stc
mov
mov
nop
roll
enter
adc
cmp
ja
fimuls
sahf
sahf
or
adc
sub
xchg
ljmp
jo
fidivrs
jmp
inc
outsb
xor
push
xchg
xchg
pop
cmp
sub
cmp
dec
cmpl
jnp
dec
aaa
iret
pusha
xor
jp
scas
lcall
jns
push
xorl
lods
bound
das
dec
out
pop
scas
mov
xor
mov
add
aad
out
jbe
inc
lcall
adc
mov
popa
add
jns
xor
jb
jg
add
mov
cmp
pop
repnz
mov
flds
and
sbb
fadds
add
add
adc
inc
xchg
sbb
scas
aam
cmpl
inc
add
jne
rcr
pop
add
push
jge
fadds
add
jecxz
and
push
cli
lods
adc
sub
sbb
mov
mov
sbb
mov
sbb
sbb
xor
cwtl
roll
sbb
push
inc
shrb
cli
add
pop
dec
dec
dec
pop
pop
mov
mov
lahf
dec
sub
cmpsb
cli
cld
bound
push
push
inc
pop
icebp
or
pop
movsl
andl
pushf
ds
popf
xor
jb
dec
sbb
mov
jbe
mov
aas
ret
jmp
dec
in
clc
jl
xchg
in
fwait
enter
stc
pop
add
cmp
and
hlt
sub
out
pop
push
pop
xchg
fcomps
jg
subb
push
popf
movsl
or
popf
aam
in
mov
fwait
jb
mov
dec
fcomps
je
lret
add
fidivrl
push
add
add
pusha
test
popf
mov
xor
and
call
inc
out
push
dec
dec
add
add
add
mov
mov
int3
mov
loop
mov
mov
mov
repz
sbb
adc
sub
inc
into
push
xor
rclb
mov
ret
jns
es
xor
jl
sbb
lock
test
push
and
xor
stc
add
cmc
jbe
pusha
push
add
cmp
sar
adc
and
push
in
dec
xchg
or
xchg
pop
arpl
sub
shll
fwait
xchg
cli
add
stos
addb
arpl
and
pop
scas
daa
pop
cmp
out
sbb
arpl
pop
repz
add
mov
imull
pop
dec
pop
jmp
sbb
fisubrl
push
lahf
xor
xlat
jle
xor
lcall
inc
inc
scas
sbb
dec
sahf
fs
call
jl
add
xor
add
add
fstpl
insb
shr
orb
xchg
or
je
std
and
mov
xor
sti
test
in
lret
add
add
ss
add
out
push
js
je
sbb
push
cmpsb
mov
inc
add
jbe
and
mov
in
je
xchg
jbe
jp
dec
sbb
mov
add
add
jno
jge
jg
and
arpl
add
fsub
stc
sbb
push
mov
jecxz
insb
sub
add
xlat
or
add
inc
dec
cmpb
add
test
dec
cltd
dec
fadd
adc
add
or
pop
add
jae
cli
add
add
push
add
jns
add
inc
fs
add
pop
jo
cld
insl
andl
add
add
sub
jmp
addb
or
xchg
pop
addr16
test
mov
add
mov
sti
nop
adc
and
adc
fisttpl
div
sub
ss
xor
fst
mov
jg
dec
add
sbbb
dec
add
pop
das
jg
sbb
push
and
lods
insb
and
mov
cmpsb
add
dec
push
test
xor
pop
or
mov
in
jecxz
out
add
and
sub
add
shll
loope
negl
in
lahf
mov
aas
outsl
ret
sbb
mov
push
and
test
and
dec
test
mov
dec
adcl
aam
lock
inc
cwtl
lahf
icebp
hlt
dec
jnp
lods
pop
test
push
xchg
incb
sub
rclb
bound
or
pop
sub
push
mov
push
xchg
lret
add
push
sahf
cmp
add
inc
adc
adc
or
xor
sub
stos
out
add
nop
cmpsb
jne
clc
mov
ret
push
add
xchg
add
add
dec
sub
rcl
out
add
movsl
jmp
cmp
add
cs
add
add
push
sub
stc
cs
pop
fwait
adc
scas
test
add
and
add
inc
insl
add
push
enter
scas
xchg
into
fwait
je
bnd
mov
mov
xor
cmc
lret
inc
add
sarb
aam
or
pop
je
fisttps
mov
push
push
xchg
inc
add
adc
or
push
add
mov
add
repz
sbb
push
lods
stos
mov
aaa
mov
xlat
loopne
jns
mov
dec
in
call
or
adc
shr
popa
pushf
fstpl
push
add
es
xchg
je
add
mov
and
add
add
add
pop
negb
fistpl
idivb
inc
iret
pop
jo
roll
fwait
mov
pop
popa
in
mov
ficomps
dec
fs
roll
shrl
rclb
sub
js
ja
jae
popf
popa
xchg
jge
roll
add
dec
push
add
dec
add
xor
inc
add
push
xchg
mov
ss
cmc
mov
mov
add
popf
add
loopne
add
dec
adc
bound
jbe,pn
outsl
out
lahf
sbb
dec
test
add
push
dec
cmpl
add
pop
inc
outsb
std
jae
mov
or
pop
xorb
push
xor
mov
sub
add
cwtl
pop
push
and
fwait
cmpsb
rcrb
push
fwait
sbb
xlat
shlb
and
and
pusha
popa
push
add
push
inc
faddl
mov
popf
mov
inc
inc
or
test
push
sub
pop
fsubrl
ret
scas
pop
cmp
outsl
pop
lret
mov
cli
add
jne
lods
mov
jbe
data16
and
repnz
push
inc
sub
add
mov
pop
fiaddl
mov
jns
sti
stos
xor
imull
mov
dec
pushf
add
pop
scas
xchg
int
jae
scas
popf
mov
mov
xor
test
test
xchg
xor
rorb
and
into
xchg
sub
jge
mov
adc
push
push
mov
inc
aas
fcoml
roll
add
mov
add
inc
adc
mov
add
or
mov
test
inc
add
pusha
xchg
xchg
adc
aam
aam
add
add
cmpsl
add
push
xchg
scas
mov
inc
fildll
inc
repnz
xchg
cmovg
xor
add
add
call
sbb
dec
leave
ret
mov
aam
scas
add
or
push
dec
and
mov
cld
sub
inc
sbb
push
push
push
add
or
add
shll
sahf
outsl
enter
add
and
dec
ds
add
sub
mov
leave
aad
imul
cmp
outsl
mov
and
repnz
shl
push
fwait
push
push
xor
sbb
jnp
add
nop
out
xchg
dec
push
test
mov
and
xchg
and
pop
add
and
lret
cltd
daa
xchg
fwait
aaa
lahf
dec
add
adc
adc
imul
add
and
sbb
and
or
mov
mov
fisubs
inc
filds
inc
add
cld
ret
pop
sbb
add
inc
jle
push
arpl
xor
push
aam
in
cld
and
cmpb
add
add
add
or
sarl
sbb
jno
push
add
add
xor
jb
std
aad
add
fdivs
lret
fidivrs
push
jnp
fsubl
rolb
fadds
push
adc
dec
mov
ret
cmpsl
out
push
add
out
jg
cmpsb
out
adc
cmp
or
push
sub
fstp
mov
pushf
xorb
add
int3
mov
push
xlat
outsb
add
jae
jmp
rcl
mulb
cmc
cmp
or
imul
pop
push
add
mov
xor
ret
pop
ljmp
push
push
add
fisttpl
mov
jp
add
hlt
pop
cmp
add
cmp
sbb
jge
push
loop
or
in
ret
add
push
test
ret
scas
je
sbb
adc
push
xchg
sub
lea
jb
pop
add
test
push
add
pop
test
add
pop
lret
sub
pop
mov
mov
or
gs
dec
jbe
notb
add
dec
aaa
add
add
add
adc
xchg
pushf
dec
cli
mov
mov
mov
int3
mov
rolb
cmc
inc
pushf
add
mov
test
icebp
jp
jbe
adc
mov
add
pop
imul
cmpb
push
and
in
std
lahf
xchg
add
xchg
clc
jo
sbb
cmp
fucomi
inc
add
jg
sub
outsl
mov
imul
pop
xor
inc
inc
xorl
add
cmpsb
add
enter
mov
movsb
jg
inc
xchg
mov
adc
xlat
pop
add
test
mov
lea
adc
lods
stos
mov
mov
push
adc
call
enter
ljmp
adc
cmc
push
rclb
add
mov
fs
inc
cmpsl
sub
adc
jnp
push
or
and
mov
test
xlat
pop
pop
or
mov
xchg
aad
out
stc
dec
and
jo
add
subb
pop
add
out
std
push
repz
stos
lcall
je
bound
popa
push
out
pop
faddl
push
mov
popa
adc
mov
rolb
jmp
sbb
test
fs
dec
jae
add
cltd
cmp
test
rcrl
add
add
cmp
add
imul
mov
jbe
pop
jae
addl
ret
lds
cmpsl
inc
mov
cltd
mov
jl
mov
stos
stos
push
aas
shufps
pusha
push
add
or
cmp
pop
mov
pop
jo
add
pop
outsl
add
pop
jnp
xchg
je
xor
dec
pop
dec
js
xlat
pushf
scas
add
call
and
lds
add
jmp
fistpll
jmp
fiaddl
jg
out
jg
negl
int
or
insb
xor
movb
xchg
push
sbb
loope
jl
add
outsl
add
fiaddl
adc
mov
add
or
ljmp
pop
push
jl
iret
add
inc
test
call
add
add
pop
xor
test
dec
adc
notl
outsl
js
test
sub
dec
push
pop
dec
std
jns
inc
sbb
add
jo
add
ror
lods
cmp
ret
add
cmp
add
add
jne
and
mov
adc
jns
xor
add
cld
nop
jnp
subl
add
jno
add
mov
add
int
data16
mov
push
fwait
gs
jmp
sub
mov
push
rorl
mov
jmp
roll
leave
or
cld
jecxz
add
enter
fwait
xchg
addl
ja
sbb
scas
push
cmp
mul
test
add
mov
add
add
leave
add
jmp
fistps
dec
sub
push
enter
scas
add
arpl
outsb
cwtl
mov
lods
roll
sub
jecxz
cmp
push
cmp
lods
mov
iret
mov
aad
loop
sub
mov
js
inc
jecxz
gs
pop
and
inc
pop
arpl
aaa
mov
sahf
mov
add
adc
inc
or
push
cmpsl
adc
add
dec
add
stos
int3
push
push
sub
xchg
dec
add
dec
popf
ret
out
adc
ss
insl
test
sub
xchg
scas
lea
mov
lret
xchg
mov
insl
add
pop
bound
adc
add
into
shrl
and
mov
in
mov
inc
outsb
jb
sbb
mov
inc
scas
lock
add
sbb
push
jne
pop
add
jnp
pop
add
cmpsl
push
add
sub
mov
xor
scas
xchg
scas
scas
add
fld
in
and
xor
std
add
insb
and
lea
xchg
dec
out
xor
pop
add
jno
loope
mov
ret
xor
sbb
dec
sub
incb
mov
popl
cmc
cmp
push
add
fucom
and
adcb
mov
js
jmp
and
adc
adc
jns
andl
cld
loopne
inc
lods
push
popa
sbb
popl
and
add
mov
adc
cmc
lcall
sbbb
pop
out
dec
adc
inc
push
nop
mov
ret
adc
nop
add
hlt
rcrb
push
xchg
fldl
add
sub
add
rolb
xchg
mov
inc
ja
dec
dec
orl
mov
das
data16
imul
sbb
lret
xchg
jae
loope
dec
jge
add
mov
xchg
insl
ja
imul
pusha
test
mov
sbb
shlb
filds
fistps
sti
testb
mov
push
stos
loop
add
bswap
ljmp
sarb
xor
adc
repnz
js
or
adc
call
or
out
adc
add
js
add
shlb
insb
push
jae
mov
enter
add
outsl
xor
shlb
push
ret
and
add
lret
testl
ret
jp
jae
xor
pop
mov
add
divl
repnz
xor
xchg
or
out
pop
xchg
sbb
xchg
js
xor
dec
jg
xchg
icebp
pushf
fs
loope
enter
xchg
ss
lret
cmp
xchg
dec
push
enter
push
sub
gs
ja
stos
sub
add
xor
push
out
add
sub
push
dec
or
or
mov
add
into
add
push
rolb
ja
dec
xchg
ljmp
scas
cmp
inc
popf
call
push
pop
or
and
fisubs
out
loop
jmp
add
lret
scas
sub
faddl
orl
mov
inc
cmp
inc
imul
add
add
add
popa
lea
xor
sbb
mov
add
push
dec
and
clc
jecxz
ljmp
ja
dec
mov
jp
loopne
iret
nop
lret
mov
dec
push
mov
aaa
add
xchg
cltd
imul
add
jae
add
xor
add
loope
mov
aad
mov
add
add
and
and
jns
leave
movsl
mov
mov
fildl
popl
jno
cld
mov
notb
sub
adc
xlat
add
lea
call
add
cmp
adcl
mov
jge
push
and
xchg
in
jae
add
movl
and
add
mov
add
jge
lods
pop
leave
inc
xchg
lret
push
stos
push
add
push
pop
call
fs
inc
add
dec
enter
rclb
movsl
filds
adc
rolb
inc
xlat
dec
fs
push
or
and
mov
test
pop
es
mov
sbb
add
fwait
push
inc
sub
pop
sbb
sbb
or
mov
jnp
or
dec
loope
cmpl
add
add
scas
stc
or
std
push
add
pushf
cwtl
xchg
pop
lahf
mov
dec
in
les
jne
mov
xchg
push
out
jbe
lret
sbb
incb
push
jmp
add
jmp
popl
or
sbb
pop
idivl
inc
addr16
push
pop
nop
mov
and
push
mov
push
jecxz
dec
insl
addr16
mov
xchg
lods
cmpsb
add
popl
add
inc
inc
mov
pushf
int
in
in
shlb
sbb
xchg
leave
add
insb
mov
jmp
sbbl
les
test
xchg
loopne
leave
ljmp
sahf
push
scas
rolb
rorb
jb
popa
xor
lcall
enter
mov
adc
jns
repz
cmpsl
test
sbb
mov
add
fsubl
gs
lret
mov
mov
and
adcl
mov
and
push
add
mov
add
and
pop
sub
mov
sub
add
add
in
mov
mov
subl
pop
cmp
and
xchg
outsl
sub
jbe
enter
jnp
das
iret
sub
in
leave
xor
xor
sub
fcomi
arpl
push
add
aas
test
xchg
mov
push
ljmpw
add
icebp
or
push
repnz
rcr
cmp
add
pop
movsl
shll
adc
sub
lcall
cmp
adc
out
and
dec
add
xchg
adc
or
mov
pop
cmp
cli
orb
andl
add
fmuls
lret
add
xchg
add
push
add
cmp
xor
jns
jbe
sub
sarb
ret
scas
inc
scas
movsl
add
push
enter
ret
dec
jp
pop
push
add
add
jno
xor
aam
sahf
gs
mov
add
dec
fs
or
test
test
popa
adc
sarb
push
rclb
add
lock
sub
enter
push
fldenv
jl
mov
push
dec
add
mov
adc
mov
andb
add
cmpsl
cld
repz
roll
ljmp
add
push
add
jl
fisubrs
ds
scas
xchg
inc
mov
cmp
cld
fiadds
ja
in
pop
add
and
cli
imul
mov
sbb
mov
pop
push
sarl
inc
fcompl
imul
ds
arpl
ret
clc
scas
push
repnz
test
jmp
or
out
cmpsl
jno
mov
jecxz
rorl
pushf
add
sub
in
push
add
lea
inc
pop
gs
test
aad
std
lret
ja
lods
sbb
testb
push
or
add
popf
and
outsb
int
dec
xchg
adc
fwait
lea
dec
mov
je
add
xor
add
sub
js
mov
xor
add
cli
mov
jne
and
xchg
mov
add
mov
cli
sub
xor
scas
add
in
loope
xor
jmp
xchg
andl
sub
aam
aaa
arpl
lods
mov
sbb
add
add
pusha
push
xchg
rcrb
test
mov
push
push
negl
in
fnstenv
add
add
dec
mov
ja
in
add
add
push
lret
cmpl
imul
inc
mov
xchg
adc
sub
bsr
jge
xor
das
mov
mov
mov
mov
pusha
add
cmp
outsl
jmp
inc
repz
mov
sbb
jnp
shrd
xchg
fldl
test
mov
lret
mov
mov
push
lods
out
add
sbbl
push
sub
jg
or
iret
mov
xchg
out
lock
test
add
sbb
pop
orb
mov
loop
add
fidivl
add
shll
inc
ds
mov
daa
jns
sub
cmpsb
xchg
lret
shll
out
call
test
ljmp
jb
mov
popa
enter
push
adc
inc
inc
aaa
sub
jp
xor
retw
fiaddl
ret
mov
into
add
nop
lds
and
imul
mov
add
cld
and
aad
inc
in
push
lcall
push
lock
jg
xchg
rolb
xchg
add
ret
fiadds
lcall
jnp
inc
add
fisubl
xchg
sub
cltd
lea
cmc
lock
or
decl
sbb
andb
add
mov
inc
dec
pusha
sbbl
add
add
das
dec
repnz
adc
add
das
in
xchg
pop
in
pop
add
enter
adc
pop
lcall
inc
neg
pop
add
repz
lods
or
test
xchg
lock
add
jns
push
imul
jae
das
mov
ret
stc
fisubl
xchg
jb
stc
xchg
xchg
sbb
mov
pop
or
mov
fdivl
fdivrs
gs
push
pop
das
add
pop
xor
aas
mov
pop
mov
adc
pop
add
ret
lods
mov
in
dec
push
mov
cmp
shll
mov
arpl
jns
or
push
adc
add
dec
ret
or
add
mov
lret
add
add
xchg
test
xchg
xchg
add
mov
in
mov
jg
ljmp
gs
add
shl
inc
sbb
dec
stc
jns
lret
xor
push
addr16
int3
and
pushl
into
push
gs
pop
ljmp
and
es
outsb
inc
repnz
pop
sub
xor
mov
ret
inc
and
xor
sbb
add
outsb
jae
mov
jl
mov
out
and
dec
scas
orl
mov
popf
add
inc
mov
jae
addr16
jo
addl
add
std
shlb
mov
push
test
inc
push
shrb
rolb
jle
hlt
xchg
cmp
inc
sub
xor
fldl
shrl
add
test
lret
lahf
add
lods
out
pushf
sbb
jne
cwtl
or
and
pop
pushf
add
es
stos
or
jge
addl
scas
and
pop
sub
cmp
rcrb
cmp
inc
jg
inc
je
movsb
mov
add
sarl
push
jge
xor
pop
jg
lret
adc
scas
add
pop
pop
mov
clc
add
jg
scas
push
pop
xor
enter
dec
subb
add
imul
xor
push
cmp
stc
xchg
rcrl
jg
cmp
xchg
sbb
cmp
push
test
add
divb
cli
shrl
sahf
adcl
add
add
pop
add
xor
loopne
dec
movsl
nop
and
sarb
add
imul
or
xor
pop
in
mov
insl
fistps
fstps
les
push
bound
insb
mov
add
add
jp
jno
add
add
mov
mov
add
add
fidivs
jl
aad
pop
push
pusha
push
outsb
les
jle
xor
mov
push
dec
les
in
xchg
add
fcomip
fdivp
fmull
dec
and
pop
in
sarl
xor
je
add
or
xor
pop
clc
mov
push
xchg
sar
sub
inc
jno
orb
push
jae
sbb
jp
leave
mov
xchg
adc
sbb
add
fisubrl
inc
fs
aad
inc
aaa
fs
xchg
mov
adc
inc
inc
adc
imul
int3
dec
jne
insb
inc
add
bound
hlt
mov
cli
cmc
insb
outsb
ret
or
lds
iret
aas
test
cs
shrb
pop
insb
mov
push
popf
out
cwtl
imul
bnd
icebp
pop
scas
adc
inc
mov
jns
jae
mull
mov
add
repnz
or
sahf
out
pop
add
add
jmp
fsubrl
ds
es
jne
mov
repz
pop
imul
jno
fnstenv
dec
xchg
add
add
mov
mov
sbb
jge
or
loop
or
cmp
jge
int
add
jb
repnz
cmp
add
stos
add
stos
sub
les
fdivrs
add
sti
mov
add
lods
xchg
adc
popf
leave
cmc
jo
sub
xor
sti
fnsave
xor
out
ret
test
ret
sahf
inc
xchg
call
mov
xchg
add
mov
cmp
push
push
addr16
xor
mov
addb
clc
jns
add
jae
push
add
pop
xor
in
cmp
arpl
push
push
adc
sub
shlb
mov
mov
xchg
push
xor
es
data16
ret
dec
rcrb
add
nop
cwtl
test
sbb
mov
sub
push
xor
pop
sti
add
mov
or
fs
add
je
xor
add
xchg
push
jl
dec
add
push
lahf
cwtl
mov
cwtl
xchg
or
popa
icebp
add
mov
rorb
push
dec
push
add
push
scas
xchg
mov
cltd
cli
imul
xchg
lea
pop
inc
sbb
pushf
sub
and
cmp
add
pop
adc
sbbl
ja
add
int
jo
add
mov
call
cli
fldt
add
add
inc
mov
outsb
pusha
pop
add
stos
mov
xchg
lods
add
and
pushf
add
sbb
in
enter
add
cmp
sub
dec
ret
xor
push
or
dec
inc
fs
add
shr
test
insb
add
lods
fdivs
mov
mov
mov
dec
pop
fsubrs
add
iret
sub
lcall
fmull
or
lods
fadd
push
ss
jae
icebp
xchg
add
ja
xor
and
mov
cmp
add
cmp
cli
xchg
mov
mov
adc
add
and
sbb
loope
xchg
or
cmp
and
add
add
into
clc
xor
inc
push
or
mov
dec
dec
or
xlat
adc
sbb
lea
push
fadds
dec
fiadds
adc
and
pushf
adc
sbb
adc
add
add
outsb
out
xor
sbb
pop
shl
jecxz
mov
mov
xor
loop
addr16
bound
mov
sbb
mov
add
mov
jns
jl
xchg
faddl
dec
std
out
push
popf
ret
in
or
push
lret
addr16
mov
add
fidivl
pop
push
jo
mov
leave
mov
pop
sar
pushf
popf
xchg
scas
add
sbb
das
ret
jge
mov
add
adc
xor
popf
jne
add
push
adc
or
and
sbb
lret
sbb
add
test
dec
push
les
dec
movsl
je
add
enter
pop
lds
pop
sub
push
jg
adc
mov
pop
je
xchg
push
pushf
insb
sub
add
push
push
andb
clc
add
jno
mov
adc
stos
add
pop
sub
filds
sar
rcrl
mov
push
add
mov
das
add
add
add
pop
ror
dec
jns
xlat
jg
jp
mov
ret
imull
ret
jmp
mov
add
xor
fsubrl
sbbl
sbb
imul
add
out
dec
xorb
pop
mov
add
test
aad
addl
test
dec
add
pop
or
pop
push
cltd
add
xchg
adc
cmp
mov
sbb
sub
aas
je
jmp
add
pop
or
add
pop
jns
mov
pop
add
test
xchg
add
inc
adc
je
test
addl
jl
mov
inc
adc
fdiv
xchg
sub
push
mov
adc
ficompl
dec
cltd
push
mov
xor
rol
rcrb
add
and
in
orb
adc
mov
shrl
fldl
pop
in
sub
andb
add
push
xorb
daa
mov
add
add
loopne
add
xlat
out
add
lods
inc
xchg
add
add
es
push
pop
cmpsb
popa
aas
cld
push
int3
fst
add
xchg
sub
repz
add
gs
int3
push
in
rcrb
out
dec
adc
repz
repnz
cltd
fs
jnp
fadd
mov
mul
mov
inc
out
aad
imul
and
jp
ja
cli
and
ret
cmc
rcl
lsl
mov
cld
cmp
jl
fisubrl
and
mov
add
or
dec
xchg
pop
push
dec
mov
add
xor
pop
mov
add
js
push
or
mov
je
add
popf
inc
inc
push
test
add
pop
jb
std
add
orl
add
add
or
mov
xorb
pop
movsb
mov
mov
insb
sbb
cli
fisubrl
sbb
enter
rcl
jbe
add
or
outsb
add
jmp
sbb
push
push
fwait
mov
je
pop
xchg
or
lret
xchg
popf
add
or
jmp
popf
jp
scas
out
and
pop
add
or
int3
in
sub
and
cmp
jp
sarl
add
repnz
xlat
jb
xchg
xchg
push
movsl
cs
stos
or
add
or
or
inc
mov
add
push
pusha
jl
or
add
enter
leave
insb
cmpsl
xor
fistpl
dec
lock
push
roll
xor
xor
add
ret
in
into
loope
int
repnz
sbb
inc
pushf
outsl
aas
mov
push
cltd
add
ror
loope
add
or
or
shl
add
add
add
or
inc
mov
add
or
js
test
cltd
je
pop
jmp
sti
insb
in
mov
xrelease
dec
enter
popl
scas
or
xor
cmp
loope
lods
pop
add
fadds
jb
xchg
jo
nop
imul
and
mov
cmp
push
imul
pop
xor
add
andb
call
xchg
icebp
add
adc
dec
xchg
frstor
cltd
add
out
lods
dec
pop
add
adc
clc
add
and
outsl
sarb
add
adc
add
das
mov
fsts
add
or
cmp
test
sub
push
push
scas
gs
pop
cmp
aam
pop
adc
mov
xchg
test
sbb
sub
cmpsb
add
xchg
pop
add
xlat
mov
mov
mull
jecxz
inc
push
movsb
dec
jmp
xchg
mov
leave
dec
jne
mov
ficomps
add
stos
dec
ret
repnz
or
xor
imul
jnp
or
frstor
and
inc
dec
push
pop
xor
mov
repz
xchg
dec
add
jmp
sub
adc
jge
sarb
icebp
lds
add
mov
mov
jmp
push
push
xchg
push
pop
data16
add
ja
add
sub
aaa
and
add
jno
push
out
in
sub
shlb
cltd
sbb
add
xchg
ljmp
inc
fisttpl
fdiv
outsb
shrd
adc
aam
dec
mov
into
mov
add
push
jecxz
mov
xor
add
cmc
sub
sbb
jns
add
dec
xchg
add
mov
movsl
pop
in
or
sahf
xlat
jae
inc
ja
add
pusha
rcl
aam
add
in
inc
push
add
mov
push
inc
and
in
nop
xchg
pop
jl
sbb
mov
sbb
sbbb
mov
stc
daa
pop
add
xchg
jbe
aas
xchg
aad
in
mov
movsb
fs
dec
cmc
xchg
test
add
xor
sbb
pop
lea
pop
jb
adc
icebp
add
add
mov
or
pop
test
dec
mov
in
loop
aad
jmp
ja
xchg
cmp
dec
test
je
lds
pop
adc
mov
mov
int
std
popl
in
fildl
cmpsb
add
nop
inc
mov
inc
cmp
rcll
fildl
dec
leave
jns
pop
push
add
dec
je
add
insb
stos
mov
or
popa
lahf
femms
loopne
add
add
punpckhdq
xchg
icebp
rclb
stos
mov
fyl2x
fldt
sbb
testb
xchg
cli
test
outsl
inc
insl
dec
or
imul
shrb
cmp
pop
add
lret
pop
add
pushf
icebp
mov
mov
xchg
dec
xchg
out
nop
mov
and
pusha
inc
shr
add
lret
jp
mov
sub
jo
mov
add
and
mov
fildl
test
adc
loopne
loope
cmp
sub
leave
jae
add
add
jns
popa
sbb
shlb
movsb
or
xor
xor
dec
repz
add
sub
push
lret
out
pop
xor
inc
add
mov
cli
cli
ret
cmp
add
ficoml
pop
loopne
add
sahf
lds
adc
sbb
adc
lret
add
push
fldl
add
fistl
jae
and
jmp
mov
lea
push
push
cld
insb
sub
inc
in
imul
push
mov
loope
outsb
outsb
or
lret
pop
pop
aad
int3
arpl
xchg
jo
mov
add
adc
in
mov
and
jp
xchg
xchg
pop
push
pop
ds
in
cwtl
lahf
xchg
mov
js
fimull
inc
cli
adc
add
add
push
adc
jbe
fldcw
xor
add
dec
shlb
and
push
inc
and
scas
jl
insl
add
cmpsl
mov
ret
movsl
pop
inc
popf
xor
mov
mov
add
sub
xchg
popl
mov
stos
mov
xorl
jne
lods
xchg
push
ret
jns
push
shl
xchg
inc
popf
popa
rclb
ds
cltd
mov
add
mov
popl
mov
add
fidivrs
aam
cs
loope
pop
pop
xchg
popf
pop
je
rolb
pop
cmpsl
mov
insb
js
cld
sbbl
out
xchg
fs
add
add
mov
jo
adc
mov
out
pop
rorl
stos
lret
xor
fcmovnu
sbb
mov
inc
gs
popa
rol
or
add
xchg
ja
jp
testb
enter
and
cmp
mov
add
icebp
jg
fs
push
xor
insb
cmp
test
dec
loop
xchg
pop
adc
push
pop
insb
add
add
or
add
add
decb
sbb
daa
cwtl
jmp
sub
dec
adc
jnp
push
fucomp
inc
cld
in
push
add
jmp
cwtl
jns
push
or
aad
rcr
push
sbb
out
cmp
data16
sub
add
add
das
je
loop
les
nop
or
xor
cmp
sub
inc
divb
add
out
adc
and
push
add
aam
lods
and
sbb
pop
rcl
mov
loopne
add
scas
and
jno
repnz
call
add
push
mov
mov
mov
shl
cmpsl
dec
adc
sub
adc
std
xchg
xchg
test
push
inc
dec
push
add
sti
add
xchg
add
shrb
add
shrl
inc
lea
call
leave
and
mov
dec
add
rclb
mov
jne
mov
xor
and
inc
scas
rol
add
xor
lcall
jl
andl
push
sbb
aam
sub
dec
add
add
xchg
loopne
push
mov
lret
shlb
dec
cmp
sti
add
lcall
or
jns
push
xlat
test
dec
add
cld
lds
or
inc
add
mov
and
add
sahf
leave
add
push
inc
jo
add
out
ds
test
pop
add
mov
hlt
inc
dec
adc
push
fs
dec
out
flds
repz
aad
inc
movl
add
jl
jns
fsubrl
aaa
in
jno
mov
lock
add
sub
sub
cmp
jnp
data16
test
mov
test
inc
lock
xor
roll
dec
fs
testb
nop
cmpsb
add
add
sub
lds
dec
add
add
out
xor
lods
movsb
or
fbld
sub
lret
call
pusha
fisubrl
add
pop
test
les
add
add
mov
jae
sub
xchg
jp
pop
gs
add
loope
sbb
or
xchg
pop
insl
push
add
stos
pop
dec
stos
pop
pop
push
in
popf
ljmp
lcall
sub
dec
enter
dec
cmpsl
lret
sahf
das
dec
aad
lds
ds
xor
repnz
dec
add
jne
xorl
inc
add
lret
xor
add
mov
into
xlat
push
cmpsl
pop
lods
bound
ret
mov
xchg
ret
push
add
jae
add
jp
push
loop
cmp
adc
test
push
mov
xchg
dec
leave
push
out
push
add
add
xchg
insb
roll
jp
inc
out
add
aas
pop
bound
sub
gs
cmc
addl
xchg
sbb
pusha
xor
stos
sbb
fmulp
add
xchg
add
mov
lahf
in
movsb
lods
mov
testb
mov
insb
mov
inc
or
add
mov
mov
dec
jns
nop
mov
and
stos
mov
mov
cmp
and
sbb
add
das
xor
add
test
add
add
mov
add
jne
dec
into
or
movsb
cmpsl
lods
sub
add
orb
lock
mov
xchg
cli
xchg
xchg
bound
sub
mov
jle
out
sbb
cmp
aad
mull
je
pop
sbb
dec
push
cmp
test
movsb
adc
add
xchg
mov
jne
cmc
jns
movb
addr16
cltd
and
push
or
cmp
cld
fldt
dec
incl
jg
or
jae
add
hlt
pusha
outsl
outsl
dec
push
das
pop
out
insl
or
fiaddl
inc
hlt
adc
add
push
pop
add
imul
adc
push
arpl
cltd
inc
push
xchg
jecxz
add
push
pop
scas
js
in
jp
out
pop
sbb
dec
jmp
mov
loope
cmpsl
mov
sbb
sbb
push
push
rolb
lods
or
fsubrl
add
imul
jg
and
jb
loop
aaa
ret
mov
out
mov
push
push
mov
in
aaa
sub
jp
cli
rorl
mov
jb
cld
dec
mov
shl
mov
daa
sti
mov
add
add
xchg
ret
pusha
push
cltd
dec
clc
cmp
les
xor
mov
adc
add
pop
enter
cmc
jbe
jge
aaa
icebp
pop
js
add
shlb
enter
imul
in
and
stos
add
pushf
aaa
mov
add
wbinvd
sti
mov
and
lock
cmpl
dec
stc
push
or
add
xchg
and
or
lret
roll
and
push
icebp
mov
sub
pop
test
xlat
add
test
sub
lahf
or
add
pop
mov
sbb
pop
add
rolb
dec
jg
xchg
mov
test
les
cmp
xchg
mov
add
inc
pop
add
jge
or
ret
add
add
pusha
adc
jle
cwtl
pop
clc
dec
push
jbe
or
push
jge
pop
fwait
jl
mov
lock
mov
jnp
lods
or
and
xchg
xchg
aas
lcall
orb
dec
in
sbb
and
fwait
gs
cmp
scas
add
xchg
add
dec
add
lds
rcr
popa
ljmp
and
dec
pop
sbbl
xor
and
hlt
fimuls
inc
mov
shlb
xchg
mov
cltd
popf
add
dec
add
add
lds
and
xor
add
add
jecxz
mov
in
test
aad
movsb
mov
js
test
add
inc
sahf
xchg
and
mov
pop
ljmp
lods
ljmp
dec
pop
push
add
add
mov
xchg
imulb
loopne
sbb
pop
add
or
add
sub
fdivrl
jl
or
mov
add
fdecstp
test
hlt
testl
jns
aaa
je
pop
aad
dec
mov
imul
cmc
or
mov
push
jl
mov
push
test
mov
dec
shr
outsl
push
add
idivb
xchg
add
adc
fsts
jle
sbb
pop
loopne
xchg
sub
xchg
add
ds
insl
cmp
lds
add
add
in
xor
xor
adc
add
xchg
xor
mov
pop
pop
pop
or
enter
std
aam
paddd
jno
add
add
insl
aad
hlt
mov
leave
subb
lahf
enter
hlt
inc
or
add
bound
mov
fldl
mov
pop
popa
aaa
daa
jmp
add
and
mov
insb
add
rcrl
scas
inc
mov
pushf
xchg
popl
jb
fwait
clc
add
mov
movaps
cmp
add
pop
sbb
mov
loope
ret
sbbb
lahf
push
add
add
sub
rolb
addb
data16
mov
mov
sbb
add
lea
test
das
mov
mov
push
daa
cmp
lods
add
jne
mov
mov
flds
sbb
icebp
jae
rol
pushl
inc
pop
or
and
pop
xchg
and
addr16
mov
mov
adc
dec
aaa
in
pop
test
sub
insb
in
sub
mov
xchg
jg
mov
ror
lcall
cmp
ss
cs
xchg
in
daa
test
push
add
push
js
fxch
das
push
add
aam
dec
lods
sbb
sahf
xchg
popa
pop
stc
and
add
icebp
das
ret
add
or
add
xchg
push
mov
pop
aas
xor
push
push
int3
add
add
xchg
xor
sub
and
xorl
imul
add
add
scas
jmp
add
fldenv
sub
cs
jg
push
inc
and
pop
repz
hlt
jb
jle
sub
enter
mov
dec
in
rorl
and
add
dec
mov
push
jge
inc
push
add
dec
and
test
shll
jae
dec
bound
rolb
sub
cmp
add
mov
mov
std
out
cwtl
cmp
add
test
call
sub
sub
add
imul
cmc
jmp
cmp
push
add
rcll
out
lods
lock
add
cmp
jne
add
cmp
gs
inc
add
ljmp
xchg
push
pop
pop
mov
jl
sub
mov
add
inc
inc
xor
sahf
xor
add
pop
add
sub
xchg
imul
ljmp
test
in
addr16
adc
aad
stos
ljmp
repz
loop
nop
das
dec
popf
insb
add
das
jne
aas
mov
cld
popl
insl
mov
sub
sbb
int
jmp
push
and
les
fimuls
das
add
popf
in
fisttpl
push
push
and
ja
add
jbe
push
dec
lods
out
std
idivb
pop
outsb
inc
add
cmc
and
fistps
cmp
mov
xchg
lock
mov
movsl
add
repz
ljmp
repnz
js
arpl
add
shrb
mov
mov
add
idivb
popa
xchg
push
jne
jae
rclb
adc
cmpb
out
adc
popa
xchg
fs
clc
push
jl
mov
aaa
add
sub
mov
sub
xor
add
mov
notb
dec
in
adc
inc
lret
add
std
push
scas
xlat
xor
add
enter
add
adc
test
add
dec
mov
popf
add
je
cmpsb
out
fidivrs
xchg
loop
sbb
add
mov
pop
cmp
test
add
stos
into
outsl
or
sbb
adc
xor
arpl
in
xchg
mov
jns
dec
jecxz
xchg
add
aam
pop
fs
xchg
jle
jns
mov
mov
jp
and
add
cmp
xor
out
cmp
sbb
jecxz
dec
inc
push
cmc
mov
and
dec
add
enter
sbb
xchg
rcll
or
add
mull
mov
inc
jb
sbb
es
hlt
jbe
lahf
sbb
es
scas
mov
repnz
sbb
or
or
lock
xor
mov
push
or
jb
out
add
into
sub
insb
add
pop
or
cmpsb
shlb
sahf
jns
int
int3
data16
insb
add
cmp
out
add
mov
stos
mov
pushf
xchg
frstor
jb
add
insl
popa
shlb
inc
cmp
mov
in
sahf
in
add
push
pushf
jge
mov
or
push
and
sbb
xchg
or
xchg
fidivl
lret
mov
jle
sub
iret
movsl
aaa
mov
movsl
add
shrl
pop
jbe
xchg
dec
add
into
cmc
inc
fwait
sbb
mov
mov
inc
mov
sbb
mov
fidivrs
mov
dec
dec
js
inc
mov
or
add
push
inc
push
data16
jno
jg
sbb
cmp
adc
jg
lret
xchg
push
push
jbe
arpl
repnz
testb
pop
xchg
jl
mov
dec
add
fcoms
sbb
das
inc
dec
add
sbb
adc
jae
insb
clc
push
pop
leave
add
jmp
cmpsl
fiadds
incb
xorb
mov
das
jo
sahf
ret
sub
and
push
lret
rcl
sbb
int
dec
xchg
add
add
add
dec
pop
or
ja
mov
adcb
jle
dec
sarb
and
xchg
add
sbbl
outsb
jo
and
cmp
inc
call
pop
jo
sahf
jecxz
jp
mov
jne
and
xor
pusha
mov
icebp
sub
push
dec
outsb
addr16
add
imul
push
add
ret
pusha
rcrl
add
out
inc
mov
inc
add
mov
add
cmp
es
sub
push
dec
mov
mov
sub
dec
sbb
add
divl
sbbb
test
dec
lds
xchg
add
icebp
jle
pop
dec
push
push
popf
dec
xor
incl
fcmovbe
out
push
ds
imul
add
xchg
sbb
bound
add
xchg
dec
imul
mov
jnp
jne
dec
clc
push
push
ret
sbb
lret
outsl
sahf
into
push
add
inc
enter
add
js
jae
iret
les
fdivr
inc
int3
icebp
mov
mov
cli
add
xchg
add
pop
sub
dec
adc
stos
push
lods
cmp
gs
add
jae
mov
outsb
movsb
add
iret
loop
ljmp
jns
adc
lret
test
daa
sarb
add
and
mov
and
and
xor
mov
or
add
fs
mov
inc
mov
movsb
je
push
test
addr16
add
leave
mov
mov
add
mov
push
cmpb
add
cmp
fucom
jl
sbb
mov
call
jns
push
inc
mov
xor
lea
sub
xchg
inc
dec
xor
add
sbb
add
add
xchg
push
add
add
xchg
mov
and
mov
mov
in
jno
rolb
sub
push
mov
pop
testb
inc
mov
push
add
push
dec
js
or
dec
cmp
pop
lret
jmp
lock
flds
mov
out
movsl
repnz
add
adc
adc
movsl
push
jp
adc
ds
xlat
aad
and
negl
cmp
xchg
adc
cmp
hlt
jge
or
gs
jne
shl
xchg
inc
in
mov
mov
mov
dec
pop
adc
inc
pop
stc
jecxz
and
iret
inc
push
mov
jle
jnp
push
out
cmpsl
fildl
test
pusha
insl
and
iret
cli
out
cmp
add
into
enter
mov
lock
add
frstor
hlt
mov
aam
mov
cwtl
mov
dec
and
add
iret
xchg
sub
dec
repnz
cmpsb
add
arpl
into
sbbl
in
mov
sbb
lods
cmc
xor
gs
orb
push
lods
xchg
adc
insb
rdpmc
add
sbb
pop
lds
xchg
dec
cmp
in
add
dec
cwtl
pop
dec
and
xchg
cmp
xor
mov
pop
lock
dec
mov
dec
jmp
add
gs
add
popa
xchg
sub
movsb
lock
xlat
inc
jns
fwait
or
repz
add
cmpl
iret
add
sub
mov
pop
and
in
orl
rol
mov
adc
pop
mov
imul
in
push
mov
add
fcmove
jle
sbb
dec
femms
mov
outsb
scas
lods
adc
movsb
push
out
sub
xchg
add
outsl
mov
iret
rcr
lods
add
push
xchg
repz
das
pop
pop
fndisi(8087
inc
cmp
iret
test
lea
mov
notb
adc
xchg
adc
xor
add
js
mov
or
push
leave
out
or
xchg
add
add
add
adc
scas
push
jl
lret
mov
and
enter
add
add
push
test
and
push
sbb
pop
in
out
fstl
loope
cmp
inc
jb
pop
lods
stos
sbb
mov
add
cwtl
insb
bound
loop
and
test
pop
mov
nop
add
jmp
add
in
into
add
add
and
fiadds
jbe
ljmp
les
into
or
mov
lret
aaa
mov
iret
pop
iret
roll
rorl
dec
add
andb
aaa
add
adc
pusha
shll
inc
and
insb
adc
and
testl
mov
mov
int3
and
or
sub
sbb
xor
jo
add
in
inc
lcall
xor
not
call
pop
push
data16
fcmovne
out
mov
add
add
push
fsubrl
push
inc
pop
and
pop
inc
fstps
bound
pop
imul
shl
sub
add
push
dec
fmulp
jmp
lahf
jmp
aam
shlb
pop
and
push
ds
xchg
cmp
adc
mov
push
push
pop
loopne
outsl
push
and
sbb
mov
ret
and
in
add
push
or
mov
call
mulb
add
push
fildl
mov
add
sbb
push
or
add
push
cmp
sub
lea
je
movsb
push
enter
jne
loope
jns
mov
lcall
rclb
aam
jg
sbb
outsl
lret
stos
cmp
push
fnstcw
jp
arpl
add
loopne
add
inc
int
sarb
neg
pop
lea
xor
out
push
add
mov
add
and
incb
mov
rcrb
push
dec
aaa
inc
gs
cmp
push
add
int3
incl
inc
shl
add
pop
inc
fildll
xchg
cmpb
pop
popf
add
push
in
add
push
mov
jle
je
inc
idivb
inc
loope
cmp
and
aaa
inc
in
add
imul
pop
inc
add
cltd
or
or
lret
cmpsl
cmp
mov
xchg
imull
addb
xchg
add
clc
movb
pop
cmp
push
test
push
sbb
mov
sub
cmpsb
sub
mov
hlt
add
mov
lahf
xchg
lcall
fistps
hlt
popa
imul
xchg
cwtl
pop
adc
sub
mov
das
or
fsts
pop
loopne
cmp
add
add
pop
add
or
loope
inc
add
scas
xchg
and
mov
mov
dec
jo
mov
xor
inc
xchg
imul
or
cli
scas
mov
xor
adc
addl
cmp
outsb
pop
add
dec
add
xchg
loop
add
xchg
inc
arpl
pop
add
dec
lret
incb
ficoms
call
inc
push
lcall
push
add
sti
movl
add
xchg
sbb
test
add
add
add
out
add
les
jp
jb
gs
mov
add
push
add
inc
adc
sub
add
ja
es
ja
add
stc
out
add
mov
cli
jle
add
scas
loop
pop
lahf
ret
xor
pop
adc
daa
adc
push
lods
dec
hlt
add
mov
add
push
add
inc
in
arpl
mov
sub
or
fidivrl
addb
fisubrs
xchg
enter
cwtl
sub
addb
and
movsb
adc
xor
add
lcall
add
cs
into
lcall
lahf
inc
cmp
loope
add
pop
insb
aaa
and
arpl
mov
sbb
xor
add
add
jge
into
mov
pop
add
adc
js
mov
in
add
out
mov
add
stos
shl
inc
movsb
inc
test
sbb
add
aad
mov
sahf
xor
dec
js
mov
add
cmpsl
fbld
repnz
add
and
add
sbb
cli
sbb
add
in
idivl
xchg
pusha
add
iret
xchg
adc
mov
pop
es
scas
mov
pop
fisubl
stos
sub
cmpsl
cs
add
das
add
sub
add
dec
or
jle
add
aaa
adc
sbb
add
xchg
adc
add
push
add
dec
clc
mov
pop
add
punpckhwd
dec
xor
pusha
fwait
or
or
jle
aad
std
pop
add
and
ffreep
jp
das
inc
dec
mov
int
xchg
mov
jnp
aaa
mov
aas
shll
outsl
daa
mov
inc
or
jecxz
sbb
repnz
aad
pop
ret
hlt
pop
add
nop
andl
adc
aad
outsb
add
add
inc
je
add
mov
mov
sbbl
gs
ret
and
testb
dec
sub
test
push
mov
push
fsubr
adc
nop
inc
add
in
mov
cld
mov
and
sbb
fsubs
movsb
sub
dec
push
data16
cmpsl
addl
ss
sub
aad
jnp
pop
add
cwtl
leave
pusha
ret
pop
sub
test
in
cmpsb
test
cmp
int3
sahf
add
test
mov
test
jmp
mov
jl
mov
lcall
or
sarl
ja
lds
icebp
inc
add
sub
push
lock
mov
add
push
dec
cmp
out
cmp
inc
add
lea
jecxz
mov
ja
jmp
jnp
sub
int3
adc
scas
add
add
xchg
rcll
mull
add
fimuls
out
jbe
or
cmovo
inc
popf
jb
jo
into
sbb
std
mov
cmp
xor
inc
sbb
push
into
fildll
cld
icebp
xchg
out
adc
scas
xor
testl
adc
add
das
jns
call
loope
in
add
ret
inc
addl
jmp
int
and
jno
clc
jecxz
cmovne
xchg
jl
and
add
lahf
mov
sub
pop
add
lret
aam
pop
xchg
push
or
loop
add
inc
pop
push
add
hlt
xchg
add
xor
sbb
push
add
lcall
mov
les
insl
adc
int
inc
fidivrs
push
mov
push
decl
mov
dec
jge
add
sub
stc
or
pop
push
mov
pop
lods
out
mov
test
shll
xchg
test
ret
xchg
aad
fildll
popf
sahf
scas
in
add
faddl
fsubl
xor
mov
adc
xchg
mov
add
push
cmp
mov
add
add
xor
add
add
mov
pusha
xchg
les
mov
rol
sahf
or
scas
cmp
dec
pop
clc
push
ret
mov
pop
dec
fdivr
adc
add
pop
push
pop
js
xchg
add
mov
lret
sti
fwait
das
sti
nop
rolb
push
loope
cld
ds
out
sahf
jnp
or
lods
mov
sbb
inc
push
fstps
and
test
pop
jmp
push
loope
clc
inc
jns
cmpsb
jp
pop
js
popf
sbb
shl
bound
pushf
gs
in
fcomps
or
pop
jnp
xchg
movsl
push
jns
icebp
js
add
das
mov
add
pushf
adc
jnp
xchg
lods
add
xorl
nop
test
lods
cmp
clc
sbb
cltd
test
ret
xlat
rcrb
jno
stc
xchg
jle
leave
cmpsl
dec
add
data16
pop
incl
pushf
and
sbb
or
inc
les
ds
add
in
or
fisubs
xchg
xor
sbb
or
add
outsl
inc
outsb
js
jg,pn
fdivp
movsb
add
loopne
jge
sbb
lods
add
mov
add
call
xchg
xchg
xchg
jmp
popa
mov
pop
ja
outsb
insl
mov
es
add
imul
inc
mov
mov
pop
xorl
adc
pop
aam
and
les
push
push
idivb
fcmovb
fs
pop
add
or
je
add
sub
dec
scas
cld
jo
push
sub
add
xadd
ret
cmc
addb
mov
shlb
movsl
flds
jnp
mov
fwait
repnz
shlb
add
dec
add
add
int3
add
gs
mov
pop
das
mov
pop
leave
mov
and
mov
add
iret
push
add
cmpsl
cmp
ja
out
sar
fnstenv
jns
imul
sti
add
clc
add
adc
repz
data16
fs
xchg
and
jmp
icebp
mov
add
lret
sub
in
push
jne
add
xor
std
loop
stc
and
xlat
inc
ljmp
and
mov
push
xchg
cwtl
gs
cmp
mov
push
popa
je
cmp
rorl
pop
shll
ficoml
mov
add
mov
add
shll
add
pop
jno
xor
sbb
in
lods
outsb
pop
xor
call
or
addl
shlb
push
sub
sub
inc
imul
pop
add
add
sub
pop
sbb
xchg
xor
aam
dec
scas
cwtl
aaa
out
xchg
add
push
adc
inc
test
cmp
and
jg
ret
sub
push
test
cltd
dec
sti
ja
or
xchg
push
in
jb
shl
es
cmc
rep
jg
mov
sbb
fildl
imul
test
shlb
add
aam
leave
movsl
add
or
scas
mov
out
enter
mov
loop
mov
mov
add
push
mov
add
push
fwait
sub
adc
je
cs
mov
jge
clc
cwtl
sbb
add
aas
jg
sbb
sbb
int
pop
add
imul
add
jb
inc
push
imul
sti
lea
das
add
pop
add
add
lods
subb
movsb
ror
pop
push
add
movl
in
xor
stos
pushw
loope
ret
sub
xchg
jl
ljmp
push
xor
in
lea
add
dec
push
test
mov
push
xchg
or
add
add
xorl
add
pushf
addr16
repnz
paddd
fildll
aaa
and
jl
jbe
dec
int3
mov
add
add
mov
and
stos
mov
repz
pushf
and
add
and
push
xlat
cltd
movsl
xor
rolb
add
lods
and
sbb
cli
cmp
mov
cmp
cmc
push
test
push
sti
rcr
mov
out
cmpsb
movsl
arpl
sbb
out
rol
mov
and
mov
mov
add
xchg
push
and
test
icebp
push
jmp
dec
inc
mov
stos
and
daa
pop
scas
dec
repz
jl
inc
in
jecxz
aam
and
mov
or
mov
add
add
push
pushf
push
lahf
addr16
jecxz
pop
fisttps
mov
add
hlt
test
adc
jno
in
lret
ljmp
or
add
loop
mov
add
jp
mov
jg
les
rcll
ss
add
arpl
aam
jae
cmp
in
std
or
gs
add
ja
mov
mov
mov
nop
popf
cwtl
add
xchg
add
xchg
dec
jo
and
cmp
xchg
imul
cmp
mov
xchg
mov
lret
shll
outsb
pop
scas
jp
mov
icebp
les
add
scas
push
mov
sahf
aam
add
xchg
add
xor
xchg
inc
clc
das
add
add
and
insb
mov
push
pop
in
loop
and
mov
ljmp
push
lea
xorl
lods
loope
arpl
cld
pusha
dec
cmp
sub
add
sub
das
shll
popl
mov
test
outsl
xchg
int
mov
and
decl
adc
push
add
repz
rcr
xchg
sbbl
add
popf
hlt
subb
add
stc
mov
mov
cmpsw
and
push
rcr
push
add
cmp
add
or
push
call
mov
insl
jno
add
adc
lds
gs
add
add
cmpsl
push
or
push
add
cmpsb
cmc
js
in
xchg
in
mov
add
repnz
in
and
add
test
add
push
xchg
dec
xchg
fucomi
push
sbb
xchg
paddd
inc
jbe
mov
std
cltd
pop
mov
in
cli
cmp
sbb
jp
mov
mov
push
jle
xor
pop
ret
sub
adc
mov
out
push
xor
cmpsl
push
add
push
fldt
add
lds
fwait
mov
sahf
push
push
out
jecxz
jb
mov
icebp
or
xor
xchg
sbb
push
out
jbe
adc
push
fcomps
imul
shrl
leave
loopne
add
mov
sbb
outsb
jmp
push
arpl
cmp
add
and
fistps
test
popf
inc
enter
mov
test
in
js
addr16
filds
lds
aad
pop
pop
into
jmp
pop
mov
addl
data16
aam
or
inc
fildl
jg
ja
add
das
aaa
mov
repnz
insb
in
pop
mov
add
xor
sub
stc
inc
add
dec
and
into
pop
rolb
cmp
xchg
add
lock
add
add
dec
mov
clc
xchg
ds
rclb
mov
pop
ffree
mov
test
inc
stos
dec
frstor
add
lds
daa
add
add
add
add
add
adc
push
fildl
lret
jbe
dec
mov
sub
add
in
jns
aam
into
add
adcb
jae
mov
pop
mov
fistps
ss
aad
add
cmpb
dec
data16
jno
sub
or
pop
add
aaa
stc
mov
jecxz
inc
sbb
mov
add
xchg
mov
sub
arpl
cmp
sub
test
js
inc
add
lods
popa
out
and
push
stos
add
jg
adc
insb
inc
inc
cld
inc
push
movsb
add
add
loopne
push
iret
insl
add
add
or
or
fsubs
add
aas
mov
mov
popl
xchg
xchg
xor
sbb
lods
push
adc
stos
cmp
insl
pop
js
mov
push
dec
pop
sub
test
add
lret
xor
add
lods
ljmp
stc
cmp
mov
mov
push
sbbb
cmp
mov
loope
test
stc
fsubr
push
mov
fstpl
add
out
les
mov
sub
xor
cmp
cli
mov
insb
sti
or
add
pop
add
mov
fmull
daa
add
pop
popf
add
cli
ja
repnz
int
dec
pushf
sti
push
aas
or
movsl
dec
pop
add
or
scas
inc
fwait
icebp
gs
and
fistpl
add
mov
sahf
dec
flds
mov
xor
call
aaa
call
add
jge
fwait
push
lock
add
clc
add
xchg
add
incl
push
hlt
scas
rcll
outsb
movsl
mov
stos
push
jno
stos
add
mov
dec
add
cwtl
pop
orb
in
add
or
add
add
push
pop
mov
push
rolb
pop
arpl
inc
leave
mov
incl
out
dec
clc
mov
add
jg
mov
mov
jmp
fadds
cli
test
sub
add
bound
in
push
pop
mov
leave
add
jbe
add
lcall
rcll
lock
jle
cs
outsb
pop
lock
xor
mov
push
lcall
sub
sub
fiaddl
leave
add
jmp
sub
xchg
in
or
bound
or
add
clc
cli
cmp
mov
popa
push
orl
inc
test
js
mov
lds
jne
test
adc
adc
mov
mov
call
lds
bound
mov
call
pop
add
divb
push
pop
add
inc
add
add
mov
aas
pop
add
mov
in
movsb
aas
test
arpl
and
add
pop
add
in
adc
orl
add
dec
sbb
inc
xor
xchg
cmpsl
or
xchg
arpl
fstp
push
jp
add
rorb
mov
lea
movsl
dec
testl
mov
dec
cmp
arpl
dec
adc
fdivr
jmp
jp
cmp
mov
lods
stos
add
and
les
je
add
mov
rorl
add
add
mov
aam
push
daa
mov
fbstp
dec
or
movsb
ja
aad
dec
inc
add
aam
dec
imul
movsl
jno
shlb
in
sbb
dec
scas
dec
sbb
adcl
xchg
orl
nop
pushf
cmpsl
mov
sub
pop
rol
and
pop
mov
cmpsl
adc
movsb
out
add
out
scas
xchg
add
jns
pop
sbb
js
nop
and
cmpsl
add
stos
add
popf
add
dec
or
mov
popf
jae
add
pop
out
add
repz
add
xchg
sbb
or
cmp
inc
stos
mov
push
mov
mov
mov
add
stos
aas
bnd
add
jecxz
add
cmp
jae
inc
outsl
mov
sub
leave
inc
and
cmp
add
add
dec
push
mov
cli
clc
js
cli
in
inc
lock
or
test
mov
jp
dec
add
loopne
sarb
sbb
and
add
out
mov
inc
call
sub
icebp
xchg
mul
jl
movsb
fsubrl
add
mov
mov
sar
dec
pop
insb
lods
xor
jo
inc
add
pusha
sti
add
jne
add
cli
add
cmp
addl
nop
lea
cmp
sbb
inc
xor
arpl
std
mov
adc
adc
repz
add
jle
cmp
pop
and
pop
add
xor
int3
jb
repz
mov
repnz
movl
sub
push
push
fsubr
rolb
xchg
xchg
fimuls
push
jg
jbe
add
sbb
jg
add
dec
mov
sbb
add
jnp
lods
add
mov
jno
sbb
push
inc
sahf
std
jne
inc
inc
mov
add
add
pop
stos
aad
and
movsb
add
lea
push
sbb
sub
cs
sbb
pop
in
add
bound
mov
sub
fcoms
in
gs
add
pop
test
fwait
mov
and
mov
add
outsb
mov
sahf
xor
fldl
inc
push
jo
loop
add
and
insb
test
loop
cmpsb
fsubrl
add
add
mov
mov
add
add
inc
mov
and
lret
roll
inc
outsl
je
or
inc
and
jge
movb
cwtl
add
xor
add
dec
call
jb
pushf
cmpsb
mov
mov
std
adc
add
mov
sub
inc
frstor
adc
add
add
aas
aaa
ss
std
insb
push
setp
jl
cltd
add
out
lea
or
push
inc
inc
and
or
xorl
inc
mov
pop
popa
add
inc
push
jp
dec
pop
fsub
or
cli
dec
add
scas
notb
aas
and
sub
add
add
add
add
lret
xor
daa
sahf
jbe
sbb
add
dec
add
inc
iret
sahf
cmc
add
mov
jo
andb
mov
dec
sub
lea
dec
cld
mov
add
in
jbe
mov
push
add
inc
jmp
bound
xlat
dec
xchg
and
inc
test
adc
add
mov
sahf
push
pop
add
popa
mov
add
cld
roll
cld
jns
sub
add
fadds
lret
in
adc
xor
testb
nop
sub
inc
mov
nop
shrb
sbb
push
lret
ljmp
fsubrl
cmp
add
scas
fdivrl
push
sarb
push
pop
lods
jb
add
aad
aaa
movsl
adc
cmpsl
push
mov
loope
popf
dec
ret
xchg
add
mov
lahf
push
cmpsl
ljmp
and
add
xor
dec
in
lcall
and
add
add
xlat
adc
into
cwtl
mov
loope
or
dec
cmp
les
popf
push
xchg
daa
in
fistl
insl
enter
sbb
lea
mov
mov
stos
pushf
add
add
in
sbb
aaa
leave
mov
mov
data16
pusha
mov
add
add
add
xchg
ja
fwait
xor
sbb
and
imul
cmpsb
add
sub
add
inc
psllw
pop
or
mov
xlat
punpckhwd
stos
cmpsl
cmovb
mov
out
fsts
mov
fwait
push
push
push
or
sbb
xchg
or
and
hlt
push
test
cltd
cli
push
jns
daa
jecxz
add
jecxz
ljmp
add
std
iret
cmp
mov
push
cmpsb
push
dec
subl
imul
add
andb
repz
add
mov
mov
xor
cmp
imul
out
or
mov
mov
outsb
mov
sub
enter
js
pop
out
and
pop
aas
ret
add
add
adc
xor
cmp
adc
mov
mov
sbb
mov
push
mov
or
fnstenv
inc
stos
lds
int3
jne
enter
jns
add
pushf
jno
add
add
push
sub
sbb
push
dec
lret
test
sub
cmp
loopne
mov
arpl
add
adc
add
xlat
add
test
pop
jne
arpl
pusha
data16
adc
orl
out
push
dec
gs
xor
add
mov
jmp
push
cwtl
lahf
frstor
jecxz
incl
or
xor
add
cltd
ret
cmp
mov
push
sahf
fsub
push
lret
mov
mov
das
and
and
in
sub
mov
outsb
jge
jns
and
pop
push
or
mov
add
inc
lret
stos
pop
mov
repz
aad
lret
add
das
add
test
pop
das
xor
stos
in
pushf
and
fisubl
int
fwait
scas
xchg
cmp
xchg
pop
and
out
or
adc
push
add
enter
int3
aas
lret
adc
add
xchg
jbe
gs
xchg
jb
cmc
cwtl
and
sarb
fimull
out
dec
inc
ljmp
add
or
xlat
jmp
dec
mov
sahf
push
add
fiadds
jp
sub
xor
add
stos
xor
orl
shlb
and
inc
and
add
jl
shll
lods
sarl
xchg
pushf
mov
mov
outsl
jecxz
ja
sub
add
add
add
cmc
add
add
fdivrs
dec
int3
hlt
add
xchg
mov
je
push
and
insb
add
add
lds
das
movsl
or
int
add
mov
imul
repz
cmp
das
enter
jge
and
pop
mov
mov
add
and
jno
inc
ljmp
cmp
xor
pop
add
int3
add
loopne
cwtl
add
lret
xchg
add
js
jbe
pop
cmp
mov
push
jno
addr16
pop
rolb
cltd
mov
add
xor
fcmovu
bound
jmp
add
pop
push
add
mov
cmp
sub
add
mov
lds
push
cmp
cld
cmp
pop
add
push
mov
add
fs
mov
push
mov
cmp
stc
es
push
pop
add
jo
jle
add
in
add
mov
sbb
leave
ds
push
jb
dec
lahf
call
mov
mov
mov
inc
ret
pop
mov
add
pop
add
test
popa
icebp
mov
mov
int
sub
pop
add
sub
mov
inc
inc
daa
mov
aaa
popf
mov
pushf
xchg
cli
add
mov
or
cmpsb
mov
jnp
insb
jns
push
xor
lret
mov
cmp
xchg
jae
xchg
dec
jmp
insl
aam
add
js
fidivl
ds
es
lea
sbbl
lock
jle
and
fldenv
add
insb
arpl
mov
add
sahf
lods
sahf
dec
sti
cld
in
cmpsb
add
shll
gs
add
push
add
js
mov
jecxz
jmp
add
ret
cmpsb
or
add
lcall
push
in
or
mov
pop
add
inc
mov
out
aad
pop
jae
push
sahf
jnp
xchg
adc
xchg
mov
cmp
arpl
mov
bound
push
jnp
jmp
sbb
dec
pop
insl
add
push
mul
cmpsb
scas
mov
gs
cmp
and
mov
xor
aam
in
adc
jmp
je
test
inc
popf
mov
cmpl
out
add
scas
adc
push
ret
add
mov
mov
aas
leave
out
push
shll
add
scas
mov
add
std
test
adc
push
mov
and
xchg
jg
cmpsl
add
nop
insb
dec
pop
bound
fnstsw
daa
dec
fnsave
subl
add
mov
stos
dec
loopne
stos
andl
mov
test
sbb
push
or
add
sbb
cmpsl
into
xor
mov
pop
and
bound
mov
and
lret
mov
imul
cmp
mov
scas
cltd
push
xor
add
pop
pop
xchg
mov
push
fwait
jecxz
js
push
push
xor
add
pop
jae
jae
out
repz
sub
ds
xlat
sti
sbb
insl
push
xor
add
lods
xor
repnz
sbb
shlb
push
add
test
xor
xchg
mov
in
gs
xchg
cld
and
mov
andl
mov
bound
dec
add
cld
add
movsb
call
add
jo
push
sbb
xchg
ficoms
sub
add
inc
sub
add
or
sbb
add
cld
add
cld
stos
xchg
out
sbb
ljmp
mov
aaa
je
mov
mov
or
or
push
add
pop
and
std
adc
add
cld
mov
dec
out
add
add
dec
fwait
pop
out
lahf
addr16
pushf
or
and
inc
fildll
faddl
sub
adc
xchg
jo
mov
movsb
scas
dec
mov
insb
pushf
xor
xchg
push
rcll
adc
add
repz
pop
ja
inc
sbb
adc
out
pop
xor
push
cwtl
pop
js
fcmovnb
ds
fimull
xchg
add
inc
adc
add
sub
dec
sub
xor
add
xor
mov
movb
xor
mov
mov
or
movl
mov
mov
popf
mov
pop
adc
inc
ljmp
arpl
cmp
add
or
inc
inc
filds
and
div
dec
push
pop
repnz
xchg
sub
pushf
inc
pop
add
out
inc
sbb
xor
add
add
cmpsb
je
cs
lret
push
adc
aam
in
add
adc
or
xor
mov
add
or
mov
pop
ja
roll
cmp
xor
mov
cmp
cwtl
pop
add
pusha
pusha
mov
std
dec
ja
sbb
push
push
inc
jo
inc
repz
add
mov
pusha
mov
mov
dec
add
dec
add
or
push
push
mov
xchg
xor
cmp
push
loope
push
sub
mov
notb
ljmp
push
or
sub
add
mov
xchg
mov
or
addr16
jb
imul
xchg
ja
push
sub
in
dec
inc
add
clc
add
add
inc
add
push
in
cmpsl
fsubrl
mov
inc
lds
fnsave
cmp
ljmp
mov
sti
add
mov
push
popf
rcpps
mov
pop
jle
cwtl
and
add
pop
add
sbb
mov
add
jae
add
mov
add
push
lods
dec
add
lahf
mov
pop
add
out
pop
jecxz
stos
add
cli
stos
xlat
jg
add
add
xor
cmp
dec
sub
inc
testl
dec
and
pop
add
add
pop
mov
add
add
testl
sub
inc
add
inc
and
dec
nop
jp
sub
aad
mov
insl
cmp
mov
hlt
lahf
add
xchg
fsubr
add
and
rolb
pop
add
cmp
sbb
jns
dec
add
out
lods
fiadds
leave
jmp
dec
sbb
sub
pusha
add
leave
pop
add
mov
mov
push
out
xlat
pop
add
sahf
das
and
add
cmpsb
div
addr16
or
movsl
fidivl
or
add
orb
insl
push
adc
add
cltd
test
aaa
pop
fs
and
mov
or
sbb
add
cmp
pushf
flds
ss
lods
add
mov
test
addr16
test
leave
inc
sub
cli
add
dec
gs
arpl
lods
add
add
out
repnz
fdiv
add
mov
dec
or
lods
faddl
iret
add
repz
testb
add
movsl
add
sbb
pop
mov
push
mov
mov
sub
cmpsb
push
arpl
push
adc
cmpsb
fs
lret
inc
iret
mov
cltd
add
pop
ljmp
cmp
aad
in
jo
std
jo
int
roll
push
mov
aad
add
xchg
push
and
mov
jae
das
ret
test
sbb
iret
push
dec
aas
xchg
lods
adc
faddl
add
adc
or
aas
cmpb
andps
dec
aas
mov
movsl
add
sbb
and
inc
pop
mov
pusha
xor
int3
in
sahf
pop
or
lea
notl
loope
add
add
adc
fstp
loop
pop
sbbl
sub
sbb
lock
add
cmpsl
jne,pn
les
pop
cmp
add
push
arpl
cmp
lahf
adc
mov
icebp
dec
ds
gs
cmp
shll
pushf
jle
roll
addl
mov
les
adc
out
test
jge
pop
add
add
and
inc
rcrl
sbb
sbb
jbe
nop
add
inc
and
addr16
lea
mov
divl
jle
xor
add
adc
inc
xchg
in
add
es
sbb
jb
xchg
sti
cmp
cmp
adc
add
mov
sub
xor
mov
rclb
mov
imul
test
pop
add
cwtl
leave
add
int3
imul
add
aaa
aam
imul
xchg
mov
lret
add
push
in
mov
push
and
loope
fimuls
xor
pop
cwtl
mov
pop
int
jbe
adc
inc
jo
cli
divl
or
sti
xor
movsb
dec
sahf
enter
and
mov
jl
cld
or
je
add
xor
mov
fisttpl
mov
aam
ss
pop
xchg
jno
xor
mov
jo
mov
sub
or
jg
cmpsl
lret
mov
adc
sbb
ljmp
xor
mov
mov
fwait
cmp
xor
mov
dec
jmp
test
mov
pop
push
pop
repnz
xchg
sahf
imulb
mov
xor
xor
outsl
push
ss
and
add
test
sub
mov
aaa
add
or
testb
mov
out
xchg
pop
int3
xchg
jnp
sbb
add
add
jl
xchg
or
popf
or
and
cmpsl
or
dec
ds
mov
icebp
add
inc
int3
add
ret
stos
fwait
pop
push
out
lahf
push
mov
xchg
leave
push
xchg
cmp
mov
js
dec
add
rorl
out
push
pop
add
addb
cmp
and
addl
push
sbb
into
sbb
ljmp
add
stos
add
xchg
push
add
jmp
paddsw
jo
xor
jle
inc
sbb
push
dec
add
shll
or
dec
stos
sbb
cmpsl
push
inc
or
loope
subb
sub
lds
add
sub
insb
mov
add
push
add
bound
insl
sbb
jecxz
jno
test
add
add
mov
push
iret
imul
mov
int3
inc
lret
enter
loopne
add
add
int
movsl
xchg
push
mov
add
pop
pop
mov
mov
dec
add
add
mov
cli
fsubl
jge
push
sub
mov
xchg
int3
fisttps
test
xchg
outsl
or
xchg
dec
in
and
je
add
dec
add
jnp
loopne
fcmovnu
sub
cmp
dec
mov
add
data16
push
loop
cmp
jo
sbb
jbe
xor
adc
mov
add
and
and
sarl
inc
jg
mov
push
jle
aas
ss
mov
int
pusha
sbbb
xlat
int3
fwait
add
adc
xchg
add
add
mov
xchg
xchg
sub
cmp
add
add
pop
outsl
popf
cmp
mov
repnz
mov
add
stc
jl
mov
negb
push
ja
test
sbb
js
jle
xchg
pop
push
xor
xor
add
or
cltd
mov
add
add
fisubrl
xchg
addr16
popa
adc
pop
cmp
rorl
aam
js
fsubrl
cs
jnp
fwait
add
lsl
ret
rorl
roll
nop
ljmp
add
testb
xor
imul
pushf
and
rolb
or
pop
adc
add
and
mov
xchg
dec
mov
mov
cwtl
inc
fsubrs
adc
xor
cmp
xchg
adc
push
movsb
mov
fstp
add
test
add
inc
sbb
sub
insb
cmp
jnp
out
mov
shll
add
out
clc
and
xchg
add
outsl
and
sub
mov
jno
cli
popa
xor
adc
dec
lea
insb
sub
mov
fmuls
and
int
ds
or
sahf
cwtl
add
mov
pop
and
pop
or
sbb
add
and
and
or
cmp
inc
std
loop
lret
mov
ljmp
xchg
js
or
add
xchg
getsec
mov
outsl
les
add
sub
add
in
inc
test
xchg
add
mov
ds
sbbb
push
loop
jbe
scas
ja
sbb
aas
sbb
sarl
pop
mov
push
fcoms
cmp
mov
jle
adc
add
xor
rolb
inc
or
pop
mov
scas
ret
call
pop
fbstp
push
jo
scas
add
inc
xchg
int
add
fucomip
lret
add
sub
sub
fcoms
mov
out
inc
cmpsb
or
imul
adc
shrl
add
fadds
je
or
or
scas
sbb
ret
mov
lods
insb
cltd
mov
pop
cmp
add
xchg
pop
jns
leave
mov
dec
sub
test
and
push
fucomp
add
sarl
int3
xchg
xchg
dec
jl
and
mov
movsl
cmp
jle
les
leave
add
jne
sub
jge
add
and
fstpl
mov
or
inc
mov
test
and
xchg
stc
add
popl
mov
mov
adc
or
xor
loope
add
mov
into
fsubs
das
cld
aam
lock
mov
rclb
lret
into
les
imul
jns
pusha
add
cmovno
mov
push
xor
aad
jns
pop
aas
mov
stos
add
aad
arpl
mov
mov
inc
jg
push
add
add
add
loopne
jnp
sbb
dec
mov
pop
add
daa
rorl
aad
aaa
int
sti
add
mov
pop
add
push
add
icebp
mov
sbb
es
shll
call
pop
fbld
sub
pop
das
dec
add
sbb
outsl
xchg
sti
cmpsl
mov
flds
incl
fisubs
cmc
push
add
rolb
testb
mov
xor
mov
inc
mov
jo
xchg
and
rorl
call
fdivs
sub
push
and
pusha
lods
les
sbb
push
scas
sub
add
out
xlat
and
add
add
fnstcw
out
test
and
add
cwtl
ss
mov
and
in
dec
fimull
andl
mov
add
pop
pop
mov
mov
sub
mov
psrlq
arpl
popa
lret
fdivs
loope
xor
mov
outsl
dec
push
addl
jle
inc
jg
imulb
test
add
int
and
je
add
add
jge
mov
push
sub
out
add
lret
imul
imul
dec
add
push
fistl
daa
faddl
inc
cmc
dec
and
mov
pop
call
dec
cmpsb
bound
popf
mov
shrb
sbb
mov
mov
add
xchg
dec
add
test
or
addl
cmp
add
jge
mov
pop
pop
std
test
mov
cmp
add
cld
iret
mov
pop
stos
lcall
shld
adc
addps
and
and
cwtl
push
add
fsubs
add
insb
and
xchg
fldl
rcrb
adc
add
sbb
ljmp
inc
add
add
test
in
xchg
inc
mov
addb
in
add
add
adc
orl
adc
and
push
incl
jne
adc
xchg
cld
mov
sub
push
and
push
test
xchg
pop
dec
in
inc
add
lock
add
sub
movb
ffree
aaa
push
dec
cmpsb
push
lea
add
lahf
mul
cs
inc
add
sub
jp
out
loop
xchg
and
lret
add
mov
mov
lret
xorl
mov
mov
outsb
add
dec
add
fs
adc
xchg
xchg
xchg
movsb
cli
and
mov
mov
inc
daa
in
dec
jecxz
into
and
jp
sub
add
cmp
incl
and
rol
add
add
insl
ljmp
popa
jmp
push
xchg
in
stos
inc
pushf
adc
mov
in
jne
sbb
push
add
movsb
xchg
jbe
push
adc
fsub
push
add
mov
std
and
push
pop
test
pop
scas
rclb
test
xor
sti
repz
add
popf
popf
nop
std
sub
call
push
xor
add
adc
mov
add
xor
inc
mov
add
addr16
imul
nop
pop
add
cmp
mov
sahf
jl
cmp
adc
ret
test
lret
pop
pop
adc
in
xlat
or
shl
xor
dec
xchg
mov
je
adc
and
mov
push
add
ss
add
nop
add
pop
inc
add
fs
cmpsb
xchg
add
lea
fiadds
pop
fs
sahf
cmp
int3
add
jnp
enter
add
jns
fidivrl
pop
pop
add
add
cs
leave
jae
xor
jne
cmp
sub
aaa
push
and
xchg
push
fdivl
push
push
dec
movsb
xchg
add
je
lahf
adc
mov
inc
fisubl
add
in
pop
pop
mov
push
into
pinsrw
int3
jb
push
add
imulb
add
in
aaa
or
inc
add
test
mov
xchg
test
lcall
lret
cmpsb
jmp
lcall
pop
add
pop
push
push
movq
sbb
imul
test
repnz
imul
daa
aaa
dec
das
add
mov
ret
rclb
fisttpl
or
sub
cli
int3
leave
pop
add
rolb
pop
pop
test
add
imul
sub
call
add
in
popa
add
ss
ljmp
mov
and
movsb
push
in
in
stc
or
mov
push
cmpb
sbb
sbb
xchg
jl
adc
xor
add
fidivl
or
out
es
xchg
clc
icebp
add
lahf
jle
arpl
push
movsl
sub
adc
add
loop
pop
sbb
out
lds
jo
orb
push
add
mov
xchg
mul
add
and
shll
pop
fstl
pop
add
cltd
and
pop
ljmp
stc
jb
les
aaa
iret
dec
mov
add
add
or
repnz
sbb
add
cwtl
shr
popl
push
fistps
sub
and
bound
stos
aam
sahf
rorb
cli
insl
push
shll
push
or
stos
lret
daa
lea
and
fstpl
and
mov
scas
add
sub
mov
mov
push
arpl
xchg
add
xor
rcll
mov
inc
mov
sarl
sbb
push
movsb
inc
add
mov
pop
mov
out
add
dec
scas
add
and
mov
jne
mov
daa
mov
and
jbe
scas
das
sub
fucomip
xchg
push
add
scas
add
movsl
inc
sbb
adc
rolb
ret
xchg
pop
add
bound
ds
test
xchg
mov
pop
sbb
sbb
inc
js
xchg
pusha
pop
inc
dec
lods
cmpsb
sub
loope
int
ucomiss
cmpb
jnp
jns
add
jno
aaa
add
sahf
add
popf
addr16
out
cs
xor
mov
cmp
stos
int
push
icebp
or
add
xlat
test
mov
movsl
dec
xchg
add
je
push
addl
insl
jp
adcb
push
add
pop
sarb
ret
mov
add
xor
add
std
pop
add
push
call
sbb
add
adc
pop
inc
and
leave
cmp
sbb
outsb
pop
es
jle
outsb
mov
cmovnp
mov
ss
and
data16
gs
mov
add
out
push
mov
sbb
daa
add
adc
enter
imul
xor
push
add
xchg
dec
dec
push
mov
lret
iret
pop
add
mov
xchg
in
add
jne
push
mov
add
test
add
sub
sbb
int
push
pop
mov
pop
call
cli
pop
scas
add
pop
mulb
out
aaa
repz
dec
jmp
xlat
push
fwait
cmp
maskmovq
pop
out
clc
mov
in
pop
add
movl
scas
divb
jg
pop
add
mov
adc
addb
scas
or
add
add
sti
jbe
jge
add
data16
xchg
and
loopne
lods
scas
sbb
test
test
push
insl
xchg
xlat
pop
mov
xchg
scas
dec
cld
mov
cwtl
push
mov
xchg
out
xadd
adc
ror
addb
mov
lds
xor
sub
arpl
push
fiadds
test
mov
dec
add
add
imul
ja
add
and
pop
mov
mov
push
and
test
sahf
aam
lods
add
add
daa
push
and
pushf
add
or
loopne
add
aas
xlat
ljmp
cwtl
clc
push
fwait
jb
sbb
repnz
test
dec
hlt
out
xchg
aas
dec
cmp
jnp
push
cmp
add
xor
repz
add
jne
mov
add
or
add
shlb
ljmp
fidivrs
rclb
mov
mov
jge
add
cwtl
push
out
rorb
in
and
and
int
xchg
pushf
popa
out
movsb
nop
add
pop
add
scas
stc
and
xor
pop
orl
inc
hlt
jb
xor
mov
and
stos
inc
pop
inc
mov
mov
add
xchg
mov
add
pop
or
mov
xor
push
dec
mov
xchg
nop
leave
adc
mov
in
jl
jp
xchg
imul
and
aas
aam
je
sbb
je
pop
pop
movsl
add
sub
stos
pop
xchg
push
roll
add
scas
fs
add
pushf
push
dec
pop
and
ret
movsb
add
pop
mov
or
and
push
fcmovnb
dec
hlt
rcrl
es
das
lcall
sbb
pop
mov
bound
int
and
roll
add
push
pop
pusha
aad
daa
push
add
add
add
push
inc
cld
ljmp
ja
sbb
hlt
mov
jp
les
repz
sbb
icebp
mov
jmp
lldt
add
inc
mov
sub
cmp
std
dec
add
jns
add
sub
in
pop
setl
cld
sub
es
add
sbb
jne
cmp
pop
xor
jo
enter
jge
xchg
adc
stos
add
lcall
pop
pop
inc
in
dec
add
dec
scas
push
lds
int
repz
mov
or
cmp
cmp
pop
mov
mov
mov
bound
cmp
and
repz
adc
inc
enter
cmp
add
xchg
pop
inc
inc
add
jle,pn
imul
test
mov
outsl
cmp
icebp
aaa
pop
mov
pop
mov
ret
add
call
push
xchg
push
mov
mov
sti
xor
dec
sbb
test
psrlw
loope
or
dec
cmp
add
imul
jns
movsl
nop
iret
repnz
add
sub
repnz
push
aam
sti
add
movl
ss
arpl
inc
add
jae
nop
xchg
inc
sbb
add
add
add
je
mov
add
add
add
int
nop
ret
or
xchg
adc
or
sub
and
in
push
pop
gs
sub
mov
std
cltd
xlat
and
pop
push
stos
add
out
add
add
addr16
mul
sbb
add
inc
gs
flds
push
pushf
xor
jne
mov
addr16
jmp
push
xor
dec
mov
jl
inc
push
loope
pop
fwait
inc
aas
push
loopne
push
mov
add
jecxz
push
add
daa
dec
ret
or
xor
nop
movsb
adc
clc
xchg
add
subl
sub
repnz
cld
daa
xchg
jp
dec
push
mov
pop
aaa
lret
lods
filds
or
loop
jp
mov
movsb
cltd
pusha
or
stos
push
and
mov
popa
notl
pop
movsb
and
jg
ja
fnsetpm(287
test
jo
or
xor
stc
xor
push
and
add
add
add
popa
std
jo
fwait
add
add
sbb
ss
dec
stos
jns
pop
xchg
mov
pop
iret
sub
add
pop
popf
adc
or
add
cmc
insb
cmpsl
dec
add
xor
mov
js
in
push
mov
arpl
cltd
jns
lret
sbb
lock
jae
das
push
mov
or
rcr
pop
add
add
pusha
pop
or
jbe
jecxz
imul
inc
imul
or
mov
xchg
push
outsb
xchg
adc
pop
mov
adc
add
repnz
xchg
sbb
add
in
sbb
rolb
lret
sbb
mov
out
add
sbb
inc
mov
mov
or
int3
add
inc
xlat
imull
neg
xor
mov
dec
sbb
push
push
imul
mov
add
adc
and
repz
push
push
add
nop
xor
inc
add
add
xchg
bnd
test
push
test
inc
popa
adcb
mov
inc
aam
push
jmp
mov
fsubrl
cld
adc
add
mov
sub
cs
xchg
xchg
mov
sbb
xor
fcmovu
lret
push
sbb
orb
push
cmp
mov
cmpsb
jmp
in
jo
xchg
add
mov
lret
or
enter
push
cmp
int3
movb
mov
sbb
aas
fldenv
push
sub
sbb
add
insb
mov
das
xchg
inc
add
insb
mov
mov
mov
xchg
repnz
enter
xchg
das
daa
jp
add
jno
andb
shll
sbb
add
inc
loop
ds
mov
aaa
pop
xor
lods
lock
inc
xchg
xchg
add
mov
pop
pop
add
mov
inc
icebp
add
bound
dec
movsb
aad
sti
addl
pusha
pop
add
sbb
in
cld
adc
lods
add
add
sbb
jb
out
dec
sbb
cmpsl
cmpsl
cld
cmp
pop
mov
pop
or
sarb
icebp
cmpsl
add
mov
std
xor
jmp
push
xor
mov
add
pop
add
pusha
inc
fldenv
add
je
fistpl
orl
add
out
jp
js
mov
mov
fldenv
in
add
lret
cmpsb
popa
push
les
cmp
int
and
out
sub
std
shrl
roll
xor
jmp
mov
jl
in
add
mov
inc
outsl
shlb
adc
fisubrl
inc
sbb
sub
addl
add
int3
hlt
insl
mov
fiaddl
mov
cmp
add
mov
fwait
hlt
add
cmp
fsubrs
push
in
mov
xor
push
imul
daa
lock
imul
addr16
addl
aam
add
pop
pop
xchg
sbb
jge
fwait
dec
xchg
cwtl
in
mov
inc
mov
add
fs
mov
lahf
push
out
pusha
int
rorb
ja
into
and
inc
ret
ja
add
int3
add
mov
ret
cmp
lret
dec
rclb
add
adc
adc
pop
rorb
push
cwtl
data16
and
push
jno
xchg
aam
jae
into
mov
mov
sti
hlt
sbb
or
push
adc
push
out
mov
add
and
push
testl
mov
jmp
sub
pop
lods
lret
sahf
push
cmpsb
mov
push
xor
ror
jle
sbb
adc
hlt
sahf
fildl
inc
je
dec
mov
xor
xchg
shlb
pop
lock
pop
cmp
adc
mov
xor
lahf
sahf
xchg
add
daa
mov
xchg
bound
adc
mov
jne
push
push
out
das
roll
push
fistl
pop
jmp
mov
loopne
lods
push
jae
out
enter
cmpsl
imul
leave
add
cmp
lret
cmpb
add
mov
add
shll
jae
pushf
faddl
or
jmp
fldl
fbld
push
push
inc
xor
fsubr
add
fcoml
movsl
jmp
mov
test
xchg
mov
ja
imull
add
pop
cmovbe
jge
andl
inc
cld
mov
sbb
insb
in
pop
mov
xor
push
mov
push
imul
mov
pop
mov
fwait
sub
jbe
adc
faddl
add
fcomp
scas
jae
inc
pop
mov
psubq
jne
cmp
testb
add
rcll
add
loopne
sub
aaa
mov
dec
add
je
add
push
xor
push
sub
daa
mov
add
xchg
xchg
and
inc
fdivs
and
in
ret
dec
jb
jp
clc
dec
or
dec
add
lds
add
das
popa
lods
nopl
xor
mov
adc
inc
add
mov
add
push
jbe
cmp
orb
jns
lret
pop
xchg
je
stos
dec
hlt
inc
popl
cwtl
sbb
push
fs
dec
lods
js
pop
push
dec
adc
cmp
mov
add
jo
jge
inc
add
nop
filds
or
xor
add
push
pop
or
lock
addb
jnp
popa
push
or
add
and
imul
lahf
sub
testl
push
sbb
fs
repz
add
mov
add
lods
add
aaa
push
jecxz
ja
mov
jns
cmc
leave
lahf
add
add
sti
sub
or
pop
or
xchg
pop
and
ljmp
dec
movl
add
xor
mov
jae
jbe
xchg
adc
mov
and
shlb
mov
jmp
xor
ds
pop
ficoml
shrl
flds
in
aas
aad
inc
mov
scas
dec
add
sub
push
jg
mov
push
inc
sub
movsb
add
jnp
mov
inc
mov
inc
sbbb
arpl
test
gs
adc
mov
push
inc
lcall
in
cmc
leave
call
test
mov
sub
aaa
popa
inc
aad
add
add
adc
adc
fstps
sub
test
mov
xchg
iret
mov
shll
xor
dec
mov
xor
lahf
sbb
or
popf
inc
aam
mov
clc
js
dec
lock
mov
out
sub
push
add
rolb
xor
fmulp
ja
ja
add
add
add
insl
jne
xchg
pop
add
sub
adc
imulb
cmp
mov
xchg
call
out
dec
jo
xor
or
lds
jle
movsb
imul
in
movl
dec
mov
add
inc
in
stos
roll
fs
mov
push
adc
out
cld
xor
inc
bound
or
clc
cmp
mov
inc
sahf
in
insl
mov
inc
or
mulb
fmulp
add
push
clc
add
repnz
dec
add
mov
ret
mov
sbb
cmpsl
nop
dec
rcr
pop
xchg
push
sarb
add
cmp
insb
add
add
mov
adc
inc
add
add
pop
in
jbe
leave
fcmovnb
das
je
call
call
mov
outsb
push
add
repnz
or
inc
int3
inc
add
sahf
jp
loopne
mov
or
mov
rcll
dec
pushf
xlat
xor
lret
sub
clc
xchg
in
out
ja
sub
push
add
inc
sbb
hlt
icebp
and
jmp
jae
pop
add
or
pusha
insl
xor
stc
sbb
sbb
add
repnz
mov
lock
jl
push
jmp
push
add
push
sub
mov
add
psubb
push
cmpsl
fwait
jecxz
xchg
add
add
jmp
jb
lods
or
ret
mov
lret
add
repnz
jno
sar
add
cmp
push
daa
pop
sbb
lds
adc
int
dec
gs
movsb
lock
aam
cmc
jnp
adc
cld
add
inc
mov
mov
xchg
xchg
mov
xchg
rorb
pop
pop
xchg
sub
mov
add
inc
and
jnp
cmc
repz
jne
stos
or
push
mov
out
test
inc
sub
lahf
jp
in
fwait
sbb
xlat
add
cli
psubusb
add
pop
enter
sarl
cwtl
pushf
push
movsb
addr16
adc
rcll
repz
mov
push
adc
or
add
loope
into
push
dec
add
add
cmp
dec
lcall
jne
xchg
push
add
rolb
or
popa
or
add
or
push
adc
pusha
mov
int3
ret
dec
add
add
loope
push
jp
test
outsl
xor
ret
insb
ja
mov
ja
dec
js
add
js
jno
repz
je
js
dec
sbb
xor
popf
adc
icebp
add
add
scas
mov
push
add
mov
adc
imul
lahf
ds
stos
push
bound
xchg
inc
ja
inc
cmp
icebp
add
shlb
pop
mov
imul
clc
lods
and
push
fmuls
or
mov
leave
add
adc
imul
scas
cmp
je
negb
adcb
cmp
lea
push
xor
mov
add
add
int3
sub
xor
addr16
push
loop
test
leave
movsb
sti
std
add
scas
sbb
insl
inc
sbb
and
add
add
cmp
add
stc
mov
dec
mov
into
fbstp
jp
cmp
mov
add
sub
daa
and
mov
ret
bound
mov
icebp
into
jg
scas
mov
enter
push
add
std
xchg
inc
mov
xlat
mov
jb
sub
repnz
js
inc
pop
jmp
mov
aad
add
dec
jg
enter
xor
mov
push
repz
jno
mov
push
adcb
add
outsb
xchg
fwait
sub
xchg
xchg
inc
add
mov
xor
jnp
lret
xchg
shrb
cmp
pop
mov
pop
xor
mov
aad
add
pop
dec
cmp
sub
mov
bnd
mov
add
movsl
add
sahf
in
sarb
mov
imul
mov
mulb
inc
scas
cmp
inc
dec
in
pop
pop
push
test
fneni(8087
sub
and
pop
cld
in
or
jnp
add
sub
or
testb
lret
out
popa
decl
sbb
lahf
pop
push
inc
outsl
les
mov
addb
test
scas
das
push
loopne
and
out
insl
andl
ss
mov
es
add
xor
add
nop
das
adc
test
or
jbe
jne
jae
les
sub
aaa
bound
ds
inc
es
fadd
das
jp
sbb
shlb
xchg
mov
mov
and
aas
push
sbb
pop
add
add
call
fld
sti
mov
sbb
or
andb
ret
inc
orl
rolb
bnd
pop
inc
xchg
or
add
test
add
repz
add
cs
push
jnp
neg
add
jmp
inc
push
lods
je
imul
cmp
rolb
stos
xor
adc
add
ror
pusha
icebp
hlt
int3
int3
add
enter
cmp
add
fwait
outsb
and
pop
movsl
dec
xorb
add
ds
stc
loop
xor
fsts
lret
add
mov
add
popf
dec
cmp
shll
cmpsb
mov
fcoml
push
add
xchg
lret
stos
insl
xchg
mov
add
sbb
or
add
add
and
add
push
inc
jae
mov
mov
call
cmp
jne
loopne
gs
jle
incb
pop
in
push
pop
insl
pop
add
xchg
roll
push
and
inc
dec
mov
adc
push
ljmp
push
inc
cli
or
data16
and
sbb
add
fmuls
pop
dec
scas
add
mov
jno
shlb
or
or
push
inc
add
je
jmp
lock
or
xor
ficoms
add
add
addr16
std
push
push
cmp
int
loope
jl
inc
add
pop
or
cmpb
rolb
cwtl
xchg
in
adc
or
and
add
cmpsl
arpl
dec
add
dec
arpl
and
fistps
mov
pusha
testb
mov
push
add
push
xchg
adc
push
mov
adc
fwait
inc
jnp
into
push
add
adcb
call
add
jne
sub
lcall
jl
loopne
lret
jno
sub
jnp
imul
fsubrp
and
movsl
or
insb
sub
fyl2xp1
cs
sti
add
xlat
mov
and
clc
sbb
sbb
addb
daa
sub
pop
das
pop
jle
test
add
lcall
popa
je
scas
or
push
pop
sub
ds
jp
mov
jb
dec
add
dec
cmpsb
jno
mov
mov
popf
add
lret
dec
sbb
add
das
xorl
insb
sahf
popa
add
nop
jmp
test
int
mov
jge
das
adc
add
add
dec
lea
pop
out
subl
mov
push
mov
add
pop
cmp
and
jne
aam
addl
fstps
das
pop
imul
ljmp
push
mov
stos
add
lock
mov
stos
jge
add
push
dec
inc
add
leave
out
fstps
pop
xor
test
fsts
inc
ja
add
add
arpl
jle
icebp
jae
nop
cmp
mov
add
fildl
es
jg
inc
add
add
cmpsb
gs
xlat
aad
jae
dec
add
mov
xchg
scas
insl
add
dec
aaa
stos
push
push
into
adc
add
pop
addl
mov
sub
add
sbb
jg
xchg
sbb
add
lcall
xchg
add
sbb
or
mov
pop
xchg
rolb
ljmp
add
or
mov
rolb
inc
ljmp
js
es
shll
lds
enter
icebp
add
add
fisubs
cmp
stos
mov
mov
inc
add
jge
dec
adc
popa
shrb
xor
sub
test
push
mov
cmp
ds
sub
cmpl
add
add
add
jo
xorl
xchg
or
add
das
loopne
or
push
or
popa
cmpb
movsb
mov
gs
jle
test
adc
sub
add
xchg
add
xchg
xchg
clc
or
xor
dec
add
pop
nop
out
movsb
sub
xor
movsl
sbb
jne
sarb
enter
jl
mov
add
xor
int3
int
aam
inc
imul
add
adc
and
xchg
rcl
repnz
sub
xchg
or
sti
and
dec
outsl
mov
stos
out
fwait
add
int
add
add
sbb
frstor
mov
icebp
add
mov
das
or
mov
std
sbb
add
or
dec
into
enter
fisubs
push
and
and
mov
mov
mov
xlat
lahf
mov
pop
adcb
sub
dec
incl
cmp
pop
fsubs
jmp
xchg
cs
cmc
movsb
scas
or
add
add
xor
inc
sbb
pop
sbb
jns
cmp
jb
xchg
inc
jl
stc
fwait
test
out
mov
jns
add
test
daa
ret
shlb
and
lret
jmp
add
jecxz
in
ss
leave
ljmp
dec
lods
add
testb
loopne
cmp
mov
js
ja
mov
add
mov
orb
xor
std
inc
mov
push
add
ss
ret
add
push
jne
pop
jp
inc
or
mov
enter
mov
add
stos
imul
aad
pop
add
sbb
pop
mov
sub
xchg
cmp
dec
stos
push
scas
lahf
add
mov
outsl
push
add
mov
jl
cltd
sub
add
jmp
test
cmp
sub
mov
sub
add
cmp
sbb
jnp
fs
adc
add
cmpsb
xchg
out
add
lock
pop
rol
or
adc
dec
sub
jmp
cwtl
fwait
rcll
imul
repnz
and
add
xor
insb
add
in
xchg
data16
arpl
mov
imul
pop
pop
push
popf
enter
add
imul
push
xchg
js
nop
dec
lds
xchg
inc
icebp
testb
push
scas
aas
mov
icebp
loop
jecxz
inc
rcr
rolb
outsb
add
and
jl
add
add
add
negl
test
add
mov
mov
add
lcall
add
inc
loopne
lret
sbbl
adc
clc
add
jle
add
push
add
xchg
repz
out
mov
std
in
cltd
outsl
and
add
inc
enter
push
daa
mov
push
pop
or
adc
pop
fstpt
mov
movsb
adc
sub
xabort
xchg
negl
add
dec
xor
dec
adc
pop
inc
adc
inc
add
cwtl
icebp
adc
jno
add
mov
lds
sahf
sbb
out
lods
xchg
xor
into
repz
xor
adc
pop
in
cmp
incb
pop
scas
xor
mov
jbe
sub
inc
mov
add
adc
push
mov
add
insb
imul
add
add
adc
and
loop
nop
add
in
xlat
mull
pushf
inc
jo
jo
scas
sbb
add
aam
int
mov
in
aad
add
dec
mov
jb
adc
stos
inc
mov
or
cmpsl
sbb
jmp
loopne
fnsave
add
add
mov
xchg
lcall
sub
mov
jae
hlt
test
es
fs
movsl
push
push
mov
inc
rorb
movsb
ret
add
pop
add
add
sub
arpl
mov
push
or
enter
add
adc
mov
pop
inc
ljmp
jns
push
cmp
mov
inc
add
push
inc
rolb
addl
fistpl
cmp
daa
xor
in
and
jo
cmc
xchg
or
mov
mov
lahf
repz
add
lahf
pop
cmpsl
cmc
cmp
mov
sbb
inc
and
add
pop
sahf
inc
cmp
add
jmp
xchg
movl
add
filds
mov
jb
push
lcall
aaa
roll
add
rcrb
sbb
and
mov
add
inc
add
jle
rolb
call
jb
testl
xor
das
sub
rol
cs
movb
iret
push
clc
daa
jne
scas
and
psubusb
mov
cltd
data16
sarl
mov
push
add
out
inc
dec
das
shll
fiaddl
mov
cltd
fimull
pop
mov
outsl
loop
jecxz
repz
loope
rorl
cld
es
addb
ds
xchg
add
cs
mov
mov
mov
and
jae
lods
sub
add
stos
jae
add
mulb
shll
sbbl
mov
sbb
pop
inc
jno
stos
add
repnz
and
mov
adc
aas
add
cmp
sub
xor
data16
rorb
cmp
jb
add
test
xor
and
add
popf
mov
inc
add
xor
and
repz
gs
stos
ret
mov
cmp
mov
mov
mov
add
ds
dec
mov
push
xor
add
jne
adc
adc
int
fdivrl
cmp
or
add
jnp
ja
pop
je
xor
mov
or
mov
jne
mov
lret
out
clc
rcrb
lods
pop
fsubs
fnstcw
add
add
xchg
lret
push
add
push
aaa
add
dec
add
xor
imul
shrb
cmc
xlat
adc
cmp
mov
pop
fildll
or
outsl
cmp
mov
mov
jb
cmpsl
sub
and
mov
mov
jge
push
xchg
andb
sbb
movsl
jle
dec
inc
xchg
pop
cltd
cmp
mov
add
sub
dec
shl
add
testb
daa
and
xor
mov
ljmp
jecxz
mov
fists
inc
adc
adc
rcll
pop
cmp
inc
or
cld
mov
jmp
jbe
pop
add
or
and
clc
gs
scas
outsl
nop
jmp
sbb
sti
shlb
jecxz
add
sub
add
sub
test
adc
xor
add
iret
fwait
ss
xlat
movsb
add
mov
inc
sub
je
and
jae
sbb
sub
lret
aaa
and
aaa
pusha
shll
sub
adc
aas
call
mov
inc
add
and
mov
push
sbb
mov
add
adc
xor
sub
cmpsb
rol
cmp
pop
cmpsb
lock
xchg
add
nop
out
cmp
adc
out
mov
jg
fmulp
add
dec
in
add
add
out
in
jg
cmpsl
leave
ret
leave
pop
ja
add
push
xchg
jno
enter
fbstp
xchg
or
pusha
loopne
adc
jb
lods
enter
inc
push
push
ja
mov
add
push
mov
pop
ja
scas
add
add
test
prefetch
sbb
xor
cltd
mov
clc
addb
fmull
call
divl
ret
xchg
xchg
shll
add
cmp
add
test
add
pop
dec
in
add
xor
push
jo
loop
add
mulb
jb
js
pop
cmp
jb
fnstsw
sub
and
add
in
scas
lea
addl
push
cmp
mov
push
pop
add
mov
or
add
add
testl
outsb
add
loope
sarl
pop
cmp
add
or
fmul
cmp
push
mov
fmull
add
inc
js
xor
sbb
ds
mov
xor
rolb
pop
xchg
in
jbe
mov
dec
clc
push
sti
jecxz
mov
insb
dec
ret
inc
movsl
dec
mov
xchg
dec
inc
cmpsl
jmp
enter
adc
add
mov
shl
mov
mov
add
mov
dec
inc
jp
lret
stc
and
add
or
dec
fstl
lret
xor
add
bound
outsl
imul
push
push
cmpsb
inc
mov
lret
push
mov
and
inc
add
and
stos
stc
pop
dec
xlat
mov
push
add
fimull
ljmp
xchg
cltd
mov
push
into
scas
add
xor
sub
push
add
movsl
faddl
push
sarb
icebp
subl
jae
push
iret
movb
fbstp
adc
push
movsl
mov
aad
adc
lods
addb
stos
mov
mov
mov
test
dec
or
xchg
xor
out
mov
imul
push
mov
cmp
cmpsb
mov
push
adc
popa
adc
stc
or
and
insb
mov
mov
mov
add
sbb
xchg
popa
cmc
mov
pop
ja
cmp
add
and
int
push
dec
xlat
idivb
sub
jmp
and
in
cmp
add
nop
add
jp
lcall
or
add
add
sub
hlt
fldt
xor
in
jo
enter
sub
add
shll
add
mov
jecxz
add
jne
adc
and
and
mov
sub
inc
aaa
out
ret
add
fidivs
fsubrl
lahf
add
add
dec
rcll
cmp
sarl
das
pusha
jp
jo
sbb
jno
jo
jnp
fs
mov
add
push
ficoml
lret
push
ja
loop
pushf
lahf
dec
add
sub
fildl
mov
inc
jo
in
xchg
jl
lahf
sub
lret
add
sub
nop
aam
add
jl
pusha
and
mov
push
add
enter
pop
push
icebp
or
sub
xchg
mov
lds
shr
insb
sarl
lret
xchg
ror
inc
je
sbb
inc
pop
stos
clc
popf
add
dec
jmp
pusha
inc
addr16
push
add
or
mov
sub
add
sbb
inc
add
rcrl
mov
sbb
lret
in
sbb
add
cli
add
pop
ficomps
adc
test
push
int
in
lahf
mov
jg
sbb
pop
es
out
test
dec
faddl
out
loop
add
xchg
cmp
insl
sarb
mov
std
cmp
faddl
pop
add
std
xchg
in
hlt
decb
stc
in
dec
add
xchg
mov
and
mov
add
jns
add
add
in
sub
pop
ret
push
cmp
hlt
cmpsl
orl
incl
pop
sbb
ds
jl
xor
mul
jbe
adc
testb
mov
push
xchg
ja
cltd
jle
mov
stc
sbb
dec
testb
inc
mov
jg
incl
push
inc
aas
icebp
and
add
dec
or
mov
fcoml
mov
add
add
fistps
pop
push
ret
arpl
sub
add
outsl
std
dec
add
add
add
or
cld
or
inc
pop
push
lcall
add
into
dec
ss
mov
daa
add
xchg
xchg
sbb
lea
int
mov
shll
add
inc
cmp
sahf
fnstenv
push
add
push
cmp
cld
jge
cmp
pop
fcmovne
sahf
stos
add
lret
std
lds
loope
insl
int3
sbb
add
stos
punpckhdq
fcoml
add
int
and
test
add
ds
out
sub
and
xor
mov
add
add
xchg
cmp
jbe
dec
add
cld
in
rorl
dec
and
mov
dec
jnp
add
test
lea
imulb
sub
jl
xchg
mov
mov
out
popf
fisubrs
add
jmp
fdivl
mov
jle
out
or
fnstenv
sbb
adc
jbe
jle
lea
in
repz
fcomi
sub
jns
or
fdivrl
cmc
mov
add
add
mov
sub
sbb
aam
push
mov
xchg
xor
xor
in
mov
in
add
pop
ss
xchg
dec
into
adc
fcomps
and
ds
cmc
add
popf
stos
es
inc
push
cld
xor
jns
aad
insl
cld
add
aad
sbb
adc
aas
xor
push
fsub
dec
pop
add
xor
outsl
jg
dec
cmp
sub
sub
or
dec
leave
ss
cmpsl
jp
js
jecxz
jb
mov
mov
add
cli
mov
fidivrl
inc
out
imul
push
les
dec
fadds
xchg
push
aad
test
add
clc
cmpl
pop
enter
imul
add
inc
popf
outsb
mov
mov
iret
dec
sub
xor
test
pop
cs
xor
popf
push
cmc
popa
xor
mov
push
cmp
or
movsb
mov
push
add
mov
sbb
pop
hlt
sub
add
flds
jbe
add
jmp
popa
les
insl
sbb
fs
mov
mov
mov
and
mov
in
mov
fists
xchg
sar
add
loop
and
sub
xor
loopne
shl
add
lods
add
xlat
rcrl
into
push
add
aad
ljmp
adc
sbb
fs
mov
xchg
sub
push
in
mov
jle
jae
test
adc
and
add
mov
hlt
xchg
sbb
add
jnp
fsubr
cmc
add
adc
add
mov
mov
pop
cmp
add
cmp
std
int3
dec
push
jp
jle
add
mov
and
stc
jg
mov
roll
jge
push
adc
xorb
sbb
xorb
icebp
or
outsb
add
and
xor
clc
mov
sti
rcl
add
loop
push
add
mov
fwait
jno
fs
mov
cmp
xchg
bound
loop
jmp
inc
xor
add
dec
mov
add
mov
imull
leave
push
mov
xor
add
push
aam
in
ja
cmp
inc
loopne
sbb
push
mov
add
pop
dec
gs
imul
add
clc
push
mov
negl
ror
rol
mov
bnd
add
insl
rolb
xchg
ret
xor
adc
pop
push
pop
inc
lcall
test
shrb
jmp
outsl
xor
add
xor
mov
sub
mov
xor
cwtl
cmp
mov
mov
push
int3
add
sub
testb
dec
cmp
cmpsb
popf
mov
push
lcall
xor
mov
jo
push
mov
pop
add
mov
add
rcll
daa
mov
mov
cwtl
lock
shlb
xor
add
sub
mov
jnp
or
lret
or
sbb
aas
add
add
mov
imul
cmp
pmulhw
add
pop
inc
jno
gs
xchg
cmc
jge
add
cmp
add
mov
push
and
ret
add
mov
stos
mov
add
add
cmpsl
insl
es
cmp
repnz
rcl
lods
test
jp
dec
fstp
add
jbe
mov
pop
xchg
and
adc
push
arpl
inc
je
lds
sub
mov
add
movd
add
dec
stos
and
sahf
add
data16
lods
ljmp
pop
cli
inc
outsl
jg
cmp
mov
add
stc
scas
jb
int
add
test
push
mov
xor
hlt
cmp
push
daa
adc
mov
mov
inc
add
add
add
roll
xchg
sub
std
jp
adc
test
pop
xor
inc
in
test
dec
xchg
add
hlt
jl
sbb
cmp
popf
inc
rclb
add
sub
outsl
stos
add
add
stos
mov
test
daa
sub
sbb
mov
imul
mov
xchg
dec
lea
push
mov
or
scas
mov
pop
jbe
ds
int
jo
bound
add
mov
cmp
sbb
pop
dec
les
adc
push
int
or
mov
jne
add
xchg
add
in
shll
add
mov
loope
cmp
test
and
and
xorl
in
or
add
lret
out
inc
add
cmp
imul
add
xor
push
pop
push
or
jbe
enter
add
outsl
mov
fnsave
and
inc
lock
add
ja
add
repnz
cmpsl
jp
add
xchg
out
add
sarl
out
loope
pop
scas
cmpsl
add
fnsave
out
rcrl
dec
mov
dec
or
xor
or
lea
pop
lods
ret
jb
dec
leave
in
fnstsw
dec
clc
aam
es
and
out
cmp
cmpsl
xchg
or
push
adcb
mov
add
push
adc
cli
or
push
pop
add
xchg
arpl
enter
mov
inc
rcrb
xchg
push
fistpl
inc
mov
aad
fcoml
cld
add
pop
adc
add
cld
adc
add
jmp
jecxz
clc
mov
data16
cs
lds
sub
fsts
inc
out
hlt
xchg
inc
add
and
push
filds
fwait
push
test
fistl
jmp
leave
pop
add
pop
movsb
fcmovnbe
add
stc
jno
or
add
sbb
push
negb
ret
popf
into
jno
outsl
jle
inc
push
dec
jecxz
aas
dec
cmpsl
cli
inc
bnd
pop
add
les
data16
or
lahf
mov
or
in
sti
ja
je
jecxz
cmp
fdivr
add
mov
dec
inc
in
jge
xor
sub
fiaddl
mov
stc
or
xor
add
xor
dec
add
jmp
adc
jo
clc
xchg
pop
add
mov
inc
pop
inc
sbb
push
push
pushl
test
inc
lods
dec
mov
push
cmp
add
add
jo
movsb
and
add
fmuls
cli
sbb
cmp
push
and
cmp
push
fnsave
cmp
cmp
shl
shll
inc
jne
add
sub
and
cmpsl
xor
dec
inc
ficoml
push
scas
dec
in
and
add
daa
dec
add
aaa
movsl
inc
or
lret
aad
mov
adc
jb
imul
pop
add
ja
jp
add
pop
push
mov
out
ficoml
add
rol
and
and
mov
sub
lods
insl
pop
loope
nop
cs
imul
add
pop
mov
icebp
jmp
add
and
stos
pop
pop
pop
pop
jnp
ja
cmc
inc
add
lock
test
rorl
add
jb
add
xor
cs
lds
jae
add
push
add
xor
adc
imul
aaa
add
movsl
mov
cli
adc
cmp
add
into
adc
add
add
inc
xor
cld
push
cmp
add
push
fsts
mov
cmove
xchg
mov
add
sbbb
movsb
add
add
sbb
ret
sbb
dec
loopne
adc
dec
cmp
lcall
sbb
lods
dec
push
add
imull
outsl
xchg
inc
cmp
ret
sub
jge
pusha
add
xchg
leave
add
jle
sbb
iret
jge
xor
mov
sahf
add
pop
mov
jl
pop
in
aam
imul
jle
clc
jge
imulb
sti
mov
incl
push
pop
adc
mov
lret
add
add
fwait
aam
mov
cs
pop
xchg
inc
mov
add
mov
mov
lds
test
rolb
xor
add
jae
fs
add
sub
xchg
movsl
add
fwait
repnz
xchg
add
xor
es
mov
jbe
pop
rolb
pop
sarb
roll
mov
adc
leave
push
inc
fdivrl
adcb
add
add
out
adc
bound
mov
dec
and
add
add
xor
fs
call
sbb
xchg
mov
ret
repnz
or
in
jbe
add
add
xchg
cmpsl
test
ret
icebp
add
ss
cmp
dec
cmpsl
mov
inc
leave
sub
andl
add
mov
in
dec
imul
sub
jb
imull
dec
daa
pusha
lahf
pop
push
or
hlt
mov
je
cmp
test
pop
cmpsb
xor
push
jl
fs
add
cmp
inc
popf
sbb
dec
bound
sbb
xchg
sbb
add
std
decl
enter
bound
testb
shl
xchg
jge
cmp
xlat
jb
sbb
xchg
push
add
fsubs
adc
xchg
jmp
pop
add
mov
pop
pushf
cwtl
mov
xchg
in
data16
clc
jnp
mov
dec
lds
and
push
scas
add
adc
scas
add
pop
out
add
inc
sbb
mov
out
cltd
xchg
outsb
lcall
jl
and
xchg
fwait
and
push
add
cmp
in
adc
cli
xchg
add
push
inc
or
push
dec
dec
add
sub
and
sub
add
xchg
pop
sti
psllq
movsl
fimuls
stc
scas
mov
cld
jl
cmp
scas
add
in
sbb
out
cmp
outsl
bound
sub
mov
add
outsl
ror
lods
rcll
loopne
jecxz
xlat
std
imul
add
inc
add
ret
daa
pop
jle
mov
mov
mov
loop
pop
pop
adc
pusha
sbb
in
jmp
pop
mov
lcall
mov
pop
imul
add
push
pushf
movsb
jmp
xor
pop
dec
mov
sbb
xchg
fiaddl
js
mov
add
je
inc
aad
cmp
push
out
sub
repz
add
daa
ret
out
adc
int3
fsts
cld
jecxz
je
add
or
add
daa
inc
icebp
push
mov
imul
xor
xchg
mov
nop
adc
xlat
pop
add
loopne
and
add
stos
add
mov
and
lret
in
inc
xchg
and
adc
cwtl
jnp
add
mov
push
xchg
fiadds
in
insb
xchg
jns
inc
fucomp
jg
movlps
adc
test
out
movsl
add
sarl
mov
test
jg
fwait
cld
bound
add
sub
adc
inc
pop
sub
jbe
add
push
add
lods
test
jbe
dec
mov
lock
add
fwait
adc
add
push
pop
cmp
add
add
aam
add
xchg
into
movsl
dec
cmp
test
mov
add
jge
test
jge
or
jmp
ljmp
sub
push
rclb
pushf
add
adc
int3
cmp
js
movsl
xchg
call
inc
pop
cmpsl
adc
lcall
and
xor
lret
add
sbb
test
mov
mov
test
add
mov
popf
add
stos
mov
mov
xor
clc
incl
sbb
or
adc
add
mov
add
jno
or
jecxz
out
shrb
mov
push
xchg
cltd
sbb
daa
frstor
scas
pop
xsave
test
in
leave
cmp
push
pop
loope
mov
jbe
daa
popf
add
sub
add
sar
jge
out
jo
cwtl
mov
adc
mov
pop
mov
pushf
and
pop
mov
sahf
addb
addr16
lock
imul
jmp
mov
mov
add
add
lcall
out
stos
jb
mov
inc
mov
out
or
mov
shl
cltd
or
loope
in
test
mov
sub
data16
inc
and
pop
stos
mov
inc
pop
xchg
and
sub
xchg
pop
repnz
lcall
mov
push
cmpsb
pusha
add
sahf
sub
inc
shll
dec
lahf
test
jno
jns
sub
into
test
ja
and
clc
repnz
mov
lock
and
xchg
xchg
loop
mov
ret
scas
lcall
jbe
insl
out
pop
iret
mov
add
mov
sub
sub
movl
mov
add
lret
xorl
stos
enter
lds
add
inc
and
add
pop
lods
repz
cs
and
sub
add
out
mov
push
insb
dec
mov
fld
sbb
xor
inc
mov
push
inc
jp
test
and
std
or
fcmovb
sbb
mov
xor
xlat
add
xchg
lds
and
add
xlat
ficoms
pushf
imul
sti
fdivs
nop
jecxz
rcrb
mov
lahf
mov
add
sbb
push
loop
or
ret
lods
xchg
xor
add
das
dec
mov
mov
pop
jae
testb
push
je
out
push
lods
or
fnstenv
add
add
sub
add
sub
rol
fsubrl
xchg
loop
and
ja
out
aas
mov
repz
ljmp
xchg
add
leave
add
movsb
xor
enter
mov
sub
sub
sbb
xchg
add
xor
scas
jl
push
fidivrs
add
jns
cmp
or
fiaddl
inc
xlat
inc
daa
sbb
inc
adc
adc
add
jmp
aad
pop
xlat
add
lods
sbb
fisubrs
add
lods
or
adc
add
mov
das
add
jnp
pop
jo
insb
mov
movl
add
aam
add
jecxz
add
pop
add
fldl
add
mov
lods
loopne
mov
push
push
int
mov
loope
mov
cli
cld
push
popf
add
add
insl
out
lock
and
pop
das
pushf
inc
add
or
mov
mov
mov
push
gs
add
add
sub
aad
nop
add
mov
scas
stc
mov
mov
aam
mov
add
xchg
jne
inc
add
sahf
jnp
pop
fidivs
pop
mov
test
jne
in
mov
mov
outsb
sub
mov
outsl
enter
xchg
sub
rcrl
cmp
sub
xchg
mov
mov
rcr
add
sbb
adc
sbb
test
mov
jb
inc
mov
enter
testl
sbb
xor
add
push
movsb
iret
int
imul
inc
popa
cmp
loopne
movsl
outsb
jo
adc
adc
cld
cltd
hlt
push
dec
sti
aad
add
add
popa
pusha
jae
add
aas
jl
add
nop
fdivrl
pop
jge
adc
lcall
add
insl
jl
sbb
sbb
fwait
add
lahf
mov
xchg
lret
mov
sbb
push
hlt
cltd
icebp
push
ret
push
fsubl
jp
ret
dec
cmpsl
add
std
sahf
jg
into
leave
push
xor
add
std
pop
dec
stc
cmp
clc
add
adc
cli
orb
mov
adc
xorl
int3
in
dec
add
popl
add
jge
loopne
jnp
in
add
xchg
fsts
imul
inc
pop
in
pop
add
xchg
push
cwtl
inc
enter
add
add
in
sarl
inc
mov
cmp
int3
mov
xchg
test
scas
cmp
sbb
add
hlt
outsb
stos
into
sub
pusha
push
call
or
xchg
cmp
xchg
jle
push
pop
call
cld
add
ficoms
popl
and
pop
mov
push
push
ret
lret
xlat
jge
in
std
loopne
pushf
push
scas
data16
push
adc
fimull
dec
cmpsl
imul
add
sub
mov
lret
imul
into
xor
sbbb
lods
adcl
add
lahf
pop
xchg
xchg
cwtl
aad
dec
adc
adc
rcrb
pop
add
mov
xabort
push
idivb
add
ret
mov
or
cmp
arpl
scas
cli
xchg
mov
outsl
cwtl
dec
xor
mov
xor
stos
add
add
pop
rcll
fisttpl
cmp
incl
xchg
add
adc
mov
push
lret
sub
in
dec
xor
sub
push
scas
cmc
cmp
mov
and
add
mov
add
sub
sahf
addr16
add
and
adc
mov
xor
ds
cs
mov
mov
or
add
xor
cld
add
test
test
fisubrl
notb
aas
arpl
and
xor
add
stos
ja
in
cmpsl
adc
ds
fwait
mov
in
testl
add
add
jae
dec
mov
pop
push
jl
or
jecxz
inc
jecxz
lods
jbe
jb
mov
add
add
fstpl
and
xchg
filds
sbb
insb
les
ds
mov
sbb
cs
push
movsb
shrb
incb
xchg
lret
popf
add
in
sbb
sbb
add
adc
inc
scas
push
or
mov
adc
out
sbb
add
sub
cli
mov
adc
mov
xor
add
imul
jo
mov
fsubrs
aam
xchg
repz
mov
add
dec
add
ret
jg
fwait
add
cwtl
mov
adc
fmull
push
inc
push
sbb
pop
lods
in
or
dec
pop
sbb
popa
pop
or
outsw
add
add
test
add
jge
dec
xor
sub
pushf
push
hlt
mov
inc
add
sub
add
clc
in
xorl
mov
mov
imul
dec
in
mov
sub
pop
adc
xchg
pop
ror
push
test
add
aas
lcall
daa
add
push
not
lock
push
lret
pop
add
push
or
out
pusha
push
pop
xchg
mov
lcall
jge
xor
jb
xchg
push
in
mov
or
das
add
adc
xor
add
movsl
and
inc
aaa
int3
dec
sahf
sbb
pop
ljmp
add
add
test
mov
outsb
push
and
jp
scas
jb
add
mov
mov
mov
es
add
dec
roll
aaa
dec
add
and
mov
popa
xchg
addl
cld
dec
push
jmp
mov
testl
add
roll
jns
dec
sub
add
scas
mov
dec
insb
stos
out
add
add
dec
fdivs
add
popf
add
add
paddb
push
pop
add
ret
sub
sti
mov
add
mov
loop
scas
pop
mov
je
imul
push
or
sub
add
cli
add
add
dec
mov
mov
xorl
jp
dec
lret
push
jmp
int
je
pop
negl
push
movsb
sbb
add
push
add
shld
test
cld
aam
add
add
add
jno
mov
dec
mov
add
push
sub
sub
pop
into
fidivrs
in
fwait
adc
mov
mov
add
xchg
sub
mov
icebp
test
sarl
mov
pop
addr16
les
jp
int3
jnp
movsl
adc
div
lds
jl
addb
cmpsl
cmp
sub
lcall
lcall
xchg
add
add
xchg
pop
popf
test
mov
push
fiaddl
aaa
subl
lret
jl
sub
addr16
inc
mov
sarb
xor
dec
int
in
std
sahf
cltd
mov
push
jmp
stc
mov
lods
les
add
shl
jg
int
dec
mov
xchg
pusha
add
lahf
imul
test
ds
mov
adc
push
add
popf
insl
lock
loop
dec
and
sbb
in
sahf
dec
aam
lods
cltd
call
xchg
add
xor
xor
enter
xor
cwtl
in
into
imul
pop
lock
jmp
or
jecxz
add
add
lds
test
push
cmp
sbb
pushf
push
lock
dec
inc
sub
out
repnz
push
cmpsl
sbbb
add
ss
incl
mov
mov
sbb
add
sbb
test
add
test
inc
add
aas
rolb
push
jb
pop
imul
sarb
mov
lock
cld
mov
outsl
dec
jb
insl
adc
push
and
test
loope
cmp
and
pop
adc
pushf
adc
repnz
xchg
loopne
add
lret
and
fwait
jno
pop
test
maxps
aaa
lcall
and
add
or
add
or
cld
test
and
lods
cs
jae
jo
adc
pop
adc
add
arpl
mov
mov
aad
popa
mov
bound
add
roll
sub
flds
mov
mov
lock
push
lds
inc
mov
push
lret
data16
sbb
inc
int
ja
popa
pop
push
nop
dec
mov
and
push
xchg
dec
add
call
fsubrp
jg
aad
push
adc
bound
cmp
ja
or
xchg
add
mov
xor
xchg
inc
mov
pop
mov
add
in
and
aad
pop
add
mov
lcall
sti
jg
mov
movsb
in
jp
je
enter
roll
sub
sub
dec
shlb
sub
mov
push
add
mov
sbb
mov
jb
pop
insl
inc
sbb
mov
in
dec
jne
lods
add
icebp
jne
add
sub
lea
fs
sbb
sub
adc
xorb
pop
cs
and
mov
nop
test
jg
outsb
push
and
fidivrs
ljmp
sub
xlat
sub
les
add
aad
add
add
add
adc
sbb
cltd
add
inc
pop
pusha
and
adc
xchg
sbb
mov
add
idivl
mov
push
pop
sbb
js
call
cmp
adc
insl
jle
pusha
int
pushf
cmp
xor
add
add
mov
lcall
add
add
mov
cmp
xor
mov
cmp
sub
push
mov
or
lds
fs
or
fadd
pop
mov
loop
lret
jg
hlt
add
lcall
stos
add
xchg
aam
fs
mov
notb
call
lods
add
int3
sbb
icebp
repnz
and
add
insl
pop
in
cld
out
push
inc
xchg
pop
fadds
call
aad
mov
add
mov
mov
sahf
mov
lret
add
mov
add
sti
int3
jmp
add
mul
sbb
fwait
jge
add
jmp
in
ljmp
in
scas
mov
xor
push
and
stos
jge
sbb
jae
push
push
addr16
popl
xor
pop
add
add
mov
std
fildl
mov
mov
adc
inc
add
fld
sub
out
mov
xor
out
xchg
jb
movsb
add
insl
jo
lret
in
fcoml
shll
pop
cmp
adc
ret
data16
pop
cmp
xor
xor
cmp
sbb
out
dec
lea
add
add
push
mov
fidivl
push
jmp
jl
pop
pop
popa
loope
cmp
iret
int
leave
jmp
scas
insb
rolb
mov
lods
cmp
sub
addr16
and
add
inc
idivb
clc
jbe
jo
sbb
add
movsb
add
and
js
movb
js
ret
pop
shlb
popa
add
xchg
test
inc
call
pushf
jne
sbb
add
push
add
dec
xor
add
xorl
and
fildl
or
xor
and
mov
addl
sbb
icebp
ljmp
jb
sarb
loope
push
enter
mov
scas
jecxz
popf
lahf
add
sbb
in
xchg
add
or
jg
mov
sbb
test
mov
add
ds
loop
leave
adcb
push
test
xor
add
adc
mov
mov
push
icebp
pop
add
add
aas
dec
ret
pmulhw
dec
add
xchg
mov
add
loopne
imulb
pop
mov
add
dec
xor
and
mov
out
add
cmp
cmp
iret
add
mov
enter
mov
add
jge
add
test
add
add
test
fs
jo
and
add
dec
push
mov
and
pop
cmp
loop
jnp
sub
pop
adc
push
push
jo
add
xchg
xchg
adc
pop
adc
add
add
ja
mov
repnz
or
inc
cmp
stos
iret
inc
arpl
pop
adc
out
mov
jmp
gs
push
jp
push
in
call
push
and
add
dec
call
repnz
test
insb
ficoml
ret
ljmp
loopne
add
nop
cli
add
add
lret
fbstp
js
add
stos
stos
lock
imul
aam
xor
sub
xor
push
aas
mov
xor
aad
jno
mov
popa
mov
mov
mov
add
push
push
jg
pop
cmp
arpl
les
sub
stos
or
and
in
and
hlt
xchg
add
decl
adc
mov
in
ja
mov
mov
fwait
add
fistl
push
jae
in
jne
lods
mov
sbb
fldenv
mov
add
mov
xor
sbb
xorb
enter
or
in
add
add
fmul
std
inc
push
add
pop
and
aas
mov
jbe
add
stos
pop
js
dec
add
sbb
repz
in
fildl
sbbl
out
mov
test
call
pop
cmp
add
jmp
add
push
dec
jmp
mov
add
movb
add
out
pushf
adc
xchg
stos
xor
inc
sub
dec
push
cmp
push
int3
or
flds
out
jne
test
dec
add
or
cs
adc
add
mov
adc
mov
adc
or
pop
push
cmc
insl
jmp
push
xor
ret
xchg
fistps
xor
cld
or
adc
jns
fistl
push
jmp
repnz
je
add
call
dec
aaa
hlt
sub
ret
jle
jmp
sbb
sub
lds
call
lret
inc
add
ret
dec
cli
div
jmp
lock
push
jbe
mov
cld
pop
daa
add
adc
dec
add
add
add
cs
xchg
add
sbb
inc
and
and
out
and
rorl
orb
pop
add
add
xchg
xchg
sbb
jbe
push
or
and
popf
add
cmp
lds
das
leave
fistpll
push
mov
add
dec
rorb
add
shl
test
add
push
loope
jae
jo
add
lds
lea
ja
pop
sub
in
cmp
add
dec
movsl
gs
mov
test
test
ret
add
rorb
pop
add
cmp
xchg
and
dec
pop
add
loop
das
add
xchg
cmp
or
sbb
cmp
xor
sub
dec
mov
jae
jle
add
sub
rolb
inc
insb
add
ljmp
adc
jle
icebp
das
cmp
add
inc
xor
sbb
push
xor
inc
mov
fstl
jno
adcb
cmp
in
das
push
hlt
or
orl
decb
add
out
add
push
jp
add
xlat
xchg
mov
lahf
lock
add
add
nop
frstor
jb,pt
stc
dec
push
fdiv
cld
dec
aad
add
mov
lods
imul
cmpb
mov
fmuls
lahf
push
xchg
sbb
mov
pop
jns
or
adc
fcoms
sub
fwait
inc
xchg
jg
sahf
add
push
dec
enter
add
and
pop
mov
fisubrl
or
mov
clc
add
outsl
shrb
mov
pushf
mov
sub
cmp
add
inc
cmp
add
pop
mov
out
add
xchg
xor
add
test
ljmp
es
sub
aas
dec
jbe
add
and
add
xlat
inc
cmc
std
fdivl
lahf
push
adc
add
es
int
outsb
imul
bound
rcr
jmp
jo
incb
cmpsl
inc
add
leave
arpl
xor
sbb
fstl
cmp
iret
add
dec
cmp
mov
movsl
dec
adc
xchg
mov
test
xchg
mov
and
sbbl
fdivp
imul
arpl
arpl
test
popa
ds
popf
xor
gs
arpl
push
int3
lock
add
add
add
dec
subb
xchg
add
add
aaa
jge
outsb
repnz
jmp
add
xor
gs
jecxz
inc
or
jno
adc
xor
shrl
add
sub
xchg
fs
mov
pop
xchg
jge
add
adc
imul
sub
jb
bndstx
xchg
jmp
jp
mov
xchg
cwtl
pop
bound
inc
adc
xor
add
mov
scas
in
push
or
push
into
xchg
cmpsl
fwait
pop
or
clc
addb
jae
loopne
stos
cmpl
mov
test
jl
jecxz
in
jns
fdivl
outsl
fwait
jl
add
js
jle
nop
das
sbb
push
push
mov
sub
cmc
bound
stc
daa
std
add
packsswb
mov
jp
cwtl
pop
adc
scas
and
cmpsb
xchg
lret
xor
dec
jl
pop
add
fisubl
add
pop
cmp
leave
cmp
cmp
cli
inc
nop
lods
mov
xor
or
ds
add
xor
add
sbb
push
mov
add
jb
stos
pop
insb
jle
std
jns
mov
popa
dec
adc
popl
push
add
sahf
out
mov
gs
add
fs
sub
xchg
add
jg
inc
add
test
outsb
mov
dec
arpl
add
xor
in
pop
adc
jo
cmp
sub
insb
mov
pop
dec
or
int
mov
scas
add
jae
inc
int3
cli
lods
adc
add
push
ljmp
add
xchg
dec
pop
push
mov
icebp
and
xlat
jns
ja
mov
lods
dec
or
xor
lea
add
sub
inc
mov
mov
add
jo
les
js
mov
pop
stc
mov
mov
jp
call
and
sbb
nop
icebp
aad
test
jae
jno
insl
fdiv
insl
in
mov
push
lea
lods
add
gs
inc
add
pop
insl
imulb
add
stc
push
push
sub
cli
daa
mov
dec
lcall
leave
adc
pushf
sub
outsb
out
sbb
stos
fnstenv
mov
cld
in
cmp
push
pop
mov
jl
xchg
in
add
sbb
mulb
sbbb
xchg
push
mov
lea
addb
mov
in
mov
mov
and
sub
fs
xor
adc
filds
pop
add
xor
jbe
mov
call
insl
outsb
xchg
add
mov
rcl
sahf
jno
test
pushl
push
je
pop
cld
mov
cmp
scas
dec
jmp
aad
arpl
sahf
cltd
testb
adc
clc
adcb
cld
dec
js
add
outsl
out
fcomps
sbb
sub
inc
xchg
add
and
mov
jmp
sbb
mov
sub
dec
adc
les
add
out
push
sbb
sbb
add
sub
imul
cs
xchg
mov
into
sub
push
xor
es
and
push
sti
add
adc
pop
push
sahf
add
out
testl
add
js
gs
add
xchg
popl
push
jle
sub
push
scas
stc
pop
jl
sub
aaa
sub
xlat
adc
je
test
movsl
test
mov
idivl
insl
shrl
popf
xchg
sbb
jno
mov
icebp
cwtl
jo
add
negb
data16
rcrb
adc
sti
arpl
movsl
cltd
dec
sbb
add
push
inc
add
add
popa
iret
insl
and
sbb
xlat
add
inc
fidivrs
xchg
mov
sub
add
enter
add
das
mov
sub
push
movsb
adc
jmp
aad
fcomps
repnz
movsl
add
movsl
xchg
jb
subl
push
fwait
add
mov
mov
add
movsb
sti
stc
test
test
je
pop
daa
jle
push
shll
ret
jne
fdivr
dec
pop
mov
adc
leave
movsb
adc
xor
out
ficoms
das
xchg
and
lock
movsl
jge
dec
add
ja
inc
jecxz
or
add
addl
pushf
jmp
outsb
orb
daa
mov
add
sbb
stos
std
repnz
jns
pop
xchg
sbb
enter
fcomps
pop
or
cwtl
jae
xchg
jle
or
mov
xchg
add
pop
and
push
movsb
add
daa
out
outsl
inc
in
pushf
imul
jge
je
loope
add
push
arpl
lea
push
stc
xchg
push
add
add
and
test
inc
test
sub
inc
je
sbbb
das
inc
jno
add
lret
add
addr16
inc
dec
clc
adc
jbe
out
fadds
bound
add
subl
add
sbb
sub
adc
cld
inc
sbb
into
xchg
in
dec
cmpsl
add
test
sbb
jecxz
add
or
xchg
sbb
sbb
jge
add
lds
push
arpl
push
rorb
cmp
imul
nop
movsl
shlb
jns
sbb
push
scas
hlt
orb
inc
mov
cmp
aam
add
mov
push
dec
fxtract
int
push
adc
adcl
enter
cs
dec
inc
xchg
adcl
mov
pop
add
add
lds
mov
jecxz
sti
movsb
jecxz
lods
jo
mov
add
jg
add
mov
xor
add
push
push
add
add
fwait
add
pop
and
fs
mov
mov
cli
mov
xor
push
shrb
xor
filds
jecxz
sbb
cltd
xor
mov
mov
add
jbe
lods
jp
movsb
dec
jg
mov
add
mov
cmc
xchg
js
add
sub
filds
and
mov
in
xchg
xchg
add
xchg
cmp
fwait
ret
add
rorl
add
adc
pusha
pushf
cmp
insl
xchg
ret
lahf
lods
add
in
out
in
xchg
hlt
add
add
ss
out
add
in
fldcw
add
mov
cmp
add
mov
pop
adc
andb
rcl
jl
jg
cmp
sub
mov
push
sbb
iret
lds
sub
add
mov
repz
outsl
dec
js
inc
xchg
add
xchg
inc
scas
nop
adc
xchg
xor
inc
cwtl
dec
pop
jp
or
rolb
fistpl
andl
add
or
and
xor
imul
test
pop
cltd
mov
data16
dec
out
cmp
adc
dec
cltd
aam
hlt
loope
ret
repz
ljmp
push
add
add
fidivl
out
sbb
mov
dec
int
lret
loop
jge
add
adcb
add
xor
cmp
mov
pop
popa
and
adc
mov
je
xchg
insl
add
add
es
sti
sbb
jno
pop
fdivrp
add
push
clc
add
xchg
mov
jmp
push
aas
adc
mov
movsl
lds
add
or
jp
adc
pop
in
xchg
sbb
mov
iret
sbb
xor
and
shll
adc
hlt
or
arpl
into
mov
repz
filds
mov
js
adc
outsl
add
sbb
cmpb
clc
decb
push
add
push
test
fnstsw
add
popl
das
pop
pop
jecxz
lock
adc
add
add
loope
mov
fs
add
xchg
mov
inc
add
mov
push
lock
mov
addb
add
add
repz
push
add
out
add
imul
ficoms
test
lcall
lret
mov
or
add
pop
enter
push
in
cs
sub
outsl
fadd
lret
aaa
jnp
movsl
dec
xor
mov
or
aaa
add
adc
xchg
cmp
cmp
jecxz
movsb
inc
sub
iret
and
fxch
jo
gs
or
add
rclb
movsl
lahf
and
jnp
push
inc
add
mov
jge
ret
out
cmp
inc
out
xor
cmp
cmp
sbb
rorl
add
jmp
test
or
mul
fwait
or
es
imul
xor
and
arpl
ret
mov
nop
mov
orb
xchg
popl
clc
jl
loope
in
or
outsl
add
jp
push
jl
mov
and
pop
add
mov
mov
xor
push
xchg
xlat
shrb
aam
leave
add
in
movsl
pop
fsub
jg
adc
xor
xchg
mov
xor
sbb
add
add
inc
inc
outsl
cmp
mov
add
adc
cmpsl
add
add
arpl
in
add
test
add
pop
test
cltd
outsl
add
subb
sub
imul
sahf
push
jg
add
out
mov
push
jge
mov
push
loopne
adc
add
add
aad
imul
xchg
jns
ja
add
lret
pop
test
cwtl
push
lock
imul
mov
xchg
jmp
add
fisttps
push
add
add
add
adc
ss
cwtl
push
inc
test
inc
jp,pn
insb
mov
add
sbb
push
add
inc
sub
add
mov
out
add
xchg
jle
dec
cmp
xor
movl
cmp
pop
lds
mov
fistps
int3
add
add
sub
jecxz
dec
sbbb
cmp
fucomp
testb
adc
ja
xlat
fnclex
mov
popf
add
lock
iret
fidivrs
add
les
mov
jmp
add
push
pop
loop
cmc
out
scas
in
inc
mov
xchg
jle
aad
loopne
xor
loope
int
pop
rolb
sub
mov
loopne
jnp
icebp
mov
es
and
aas
or
fiadds
sbbb
mov
scas
pop
inc
jmp
inc
add
add
jae
aaa
cmpsb
add
fmull
std
push
add
cmp
dec
add
loop
adc
push
or
loopne
pop
aad
rol
enter
add
push
jp
sahf
add
pushf
imul
aaa
or
mov
in
add
int3
loopne
mov
pop
inc
adc
inc
cli
sub
xchg
add
and
test
std
icebp
dec
and
loop
out
fldl
sub
xchg
das
sbb
loop
adc
clc
adc
add
and
insl
adc
jl
out
lcall
cltd
int3
ljmp
or
ret
add
dec
inc
add
mov
jae
cmp
je
sub
jmp
jne
sahf
mov
and
scas
jl
es
adc
out
das
outsw
sbb
sbb
iret
scas
neg
add
inc
add
xchg
jp
fildl
testb
test
mov
push
clc
adc
ljmp
outsl
js
push
xchg
imul
jne
adc
js
xchg
stc
adc
js
arpl
sub
jmp
jb
add
sbb
and
jecxz
cmpl
xchg
addr16
sahf
fiaddl
ss
mov
inc
add
add
test
enter
add
mov
cli
clc
popa
xchg
push
adc
out
mov
cmp
xchg
xor
and
add
add
cmp
mov
lock
add
mov
ds
xor
movsl
mov
sub
lret
addl
mov
pop
and
xor
sub
xchg
mov
xor
add
bound
mov
pop
add
nop
sbb
into
scas
dec
lcall
cmp
xchg
cld
sahf
sbb
cltd
repz
pop
cmp
and
add
loop
lret
out
add
add
jmp
or
or
add
clc
mov
add
rorb
inc
add
push
jnp
push
add
mov
xchg
cmpsl
jle
jmp
roll
jb
push
mov
lods
sub
les
in
pop
addb
sbb
shrl
push
in
in
push
lahf
mov
lret
decl
or
test
mov
movsb
push
adc
add
xchg
cwtl
mov
pop
pusha
push
xor
mov
popw
xchg
cmp
icebp
add
xchg
add
addr16
dec
sbb
ss
jo
fcompl
push
in
ficoms
mov
pop
aam
mov
dec
push
add
popf
mov
mov
or
ret
push
add
pop
add
mov
mov
pop
testl
add
ret
pop
xchg
jmp
push
sbb
cmp
xlat
ret
shrb
sub
mov
daa
dec
push
xlat
dec
outsb
add
pop
push
mov
push
pop
add
add
push
add
xchg
xchg
mov
mov
data16
scas
hlt
leave
fisubl
adc
sti
xor
sahf
mov
fstps
or
je
nopl
add
add
pushf
or
and
mov
sahf
mov
add
dec
rcrb
mov
mov
fs
add
jecxz
push
and
add
fst
sti
pop
jo
int
movsl
shr
mov
cmc
or
dec
fcmove
int
add
adc
mov
stc
repz
lret
inc
pop
xor
add
mov
outsl
cmp
sub
inc
cmp
pop
pop
add
add
pusha
nop
stos
add
lds
and
aaa
arpl
jno
add
push
daa
dec
add
sbb
xor
lea
cli
xchg
verr
imul
fsubrl
add
in
sbb
add
daa
lret
add
loop
leave
mov
lahf
mov
inc
inc
les
jbe
loope
out
add
test
add
add
aad
iret
mov
cmp
lods
cmp
pop
jg
and
xchg
and
dec
add
xchg
lret
cld
and
mov
add
inc
inc
sbb
in
xor
rolb
push
jl
arpl
jg
add
push
sbb
cmove
cmc
sub
sahf
or
aam
xor
rorl
add
jmp
ror
aaa
and
cmp
add
adc
ror
push
add
mov
push
subl
ljmp
cmp
ja
pop
shll
test
mov
push
dec
jmp
xchg
inc
sbb
mov
jecxz
cmp
push
pushf
xlat
test
dec
dec
ret
xor
add
sbb
out
add
call
mov
pop
push
xlat
xchg
dec
add
lods
xchg
cmpsb
fidivl
shr
dec
mov
push
pop
adc
inc
sub
adc
adc
add
fisttpl
add
ficomps
jo
daa
test
push
ror
faddl
lret
gs
mov
repnz
out
loopne
insl
jno
pop
add
push
lea
shlb
add
inc
dec
add
or
out
push
dec
lods
add
add
fildl
fiaddl
mov
push
out
mov
mov
add
mov
add
sub
shrl
arpl
mov
mov
add
mov
imull
jnp
stos
add
repz
add
add
sbb
push
fidivs
jle
adc
mov
xor
add
sbb
out
dec
mov
lcall
scas
mov
and
in
testb
add
sti
stos
or
es
loop
in
shll
pop
inc
test
xor
push
dec
int
mov
rcll
dec
add
sahf
call
inc
iret
and
inc
aas
pop
or
inc
jmp
add
imul
push
fwait
dec
add
sub
movsb
jnp
lret
mov
add
inc
push
add
xor
mov
xchg
scas
pop
lods
add
pop
test
out
mov
shll
lret
or
lods
add
data16
jo
pusha
mov
inc
dec
add
sub
das
cmpsb
jp
cld
xchg
push
loop
sub
xchg
add
and
pop
add
sbb
mov
xor
mov
mov
dec
add
enter
add
mov
cmp
jnp
cli
sbb
loopne
cmp
add
and
push
add
mov
push
sti
leave
pushl
push
es
pop
aad
js
nop
adc
aad
cmp
dec
stc
jns
movsb
adc
mov
pop
mov
rol
out
mov
xchg
add
xlat
fadd
pop
inc
or
sbb
sub
pop
andb
outsl
fsubrp
mov
pop
movsl
pop
mov
daa
mov
mov
mov
aas
rorl
add
idivb
ret
movsl
orb
or
cli
mov
cli
push
dec
aas
int
xchg
iret
ret
lret
or
inc
ss
or
and
adc
lock
cmpsb
xchg
dec
add
pop
xchg
fldl
mov
push
testl
add
movsb
call
test
mov
add
cs
inc
adc
or
xchg
xchg
popa
mov
aas
push
push
add
repnz
movb
add
arpl
out
add
stc
fs
cmp
lea
call
cmp
add
insl
add
popf
push
and
lret
jl
push
and
popa
or
gs
xchg
test
jmp
and
inc
add
push
add
pop
push
pop
jp
and
xchg
in
push
xor
push
iret
add
and
xlat
mov
clc
int
stc
add
add
fists
dec
sub
add
mov
in
loop
jns
pop
dec
test
xchg
or
js
enter
xchg
add
add
mov
inc
push
mov
xor
push
fldl
sbb
add
or
mov
dec
cmp
mov
add
xlat
xor
push
pop
cmp
add
xchg
cltd
xor
ss
fsub
fdiv
inc
cmp
or
testb
emms
mov
dec
push
scas
cmp
mov
add
or
xchg
add
and
out
scas
das
push
cmp
add
leave
inc
inc
lret
push
cwtl
mov
lock
fwait
add
test
fwait
add
outsl
cmpsb
mov
lea
aad
repz
pop
clc
test
in
mov
add
ret
add
pop
mov
push
stos
lea
and
pop
add
clc
pop
clc
adc
jno
jge
add
mov
xor
mov
lret
mov
pop
xchg
mov
addb
inc
out
push
or
out
dec
mov
adc
mov
add
repnz
jne
data16
lea
pop
push
cmp
dec
push
cli
imul
stos
shll
add
jle
jnp
in
push
pushf
cld
rorl
push
and
jae
adc
and
pop
cmpsb
mov
clc
inc
dec
mov
mov
in
sbb
or
aas
sbb
aam
in
jne
add
jp
xor
fcomi
push
push
icebp
rcr
int
jp
or
jmp
xor
sbb
add
push
aas
sahf
test
and
ljmp
movsl
sbb
imul
xchg
add
cmpsb
and
lahf
mov
push
or
or
movb
sbb
rcrb
test
add
movups
add
inc
ja
call
push
insl
xchg
fimull
dec
mov
xchg
cmp
sub
fprem
or
mov
xchg
daa
mov
sub
or
jne
add
loopne
xorl
mov
pop
adc
jo
and
add
add
and
jmp
add
inc
add
xchg
shr
dec
fmull
xacquire
dec
rcrl
add
push
cli
loop
lret
push
mov
xchg
add
push
cmp
inc
push
lods
mov
pop
popf
cmpb
add
stos
lods
loop
fnsave
add
lret
bound
xor
pop
add
sbb
idivl
das
add
lcall
sub
and
daa
add
fwait
add
scas
les
js
arpl
lods
sbb
jne
jnp
outsb
sbbl
loope
xchg
push
or
add
add
dec
push
addl
out
sbb
jmp
jbe
jns
js
notl
imul
sub
inc
daa
das
outsl
sub
sub
mov
add
xor
xchg
lds
and
out
push
jmp
adc
xchg
inc
sarl
ret
leave
xchg
fisttpl
inc
inc
and
cmp
hlt
repnz
xchg
pop
xchg
and
add
addr16
ljmp
mov
std
clc
add
inc
fadds
incl
ja
andnps
icebp
mov
or
dec
call
in
add
add
scas
pop
inc
fs
out
mov
stc
pushf
lds
cmpsl
daa
xchg
inc
add
ljmp
repnz
mov
lods
mov
xchg
add
add
mov
sub
pushf
sbb
out
add
in
xchg
pop
mov
roll
cmp
lcall
fdivl
add
mov
loopne
jne
add
sbb
roll
xchg
mov
scas
stos
les
mov
or
pushf
insb
out
jmp
push
inc
add
adc
pop
mov
and
add
fiadds
xchg
push
ret
fld
mov
inc
jo
out
les
cwtl
sbb
sub
add
test
sub
dec
push
dec
rorl
add
jge
push
xor
add
lods
inc
add
data16
adc
xor
in
sbb
push
cld
cmp
imul
pop
lret
jmp
mov
xchg
add
cmc
add
in
mov
add
dec
dec
push
das
lcall
insl
imul
aas
add
push
gs
std
mov
sbb
cmp
pop
push
mov
loopne
xor
fiadds
and
push
inc
pop
stos
add
adc
mov
or
cltd
sbb
xchg
mov
jbe
cmpsl
clc
fcmovnb
mov
mov
add
sbb
xchg
cmp
movsl
mov
xor
cmp
push
out
xchg
push
sub
les
test
ficomps
add
jg
pushf
inc
mov
adc
inc
xchg
scas
xchg
cmp
inc
push
mov
add
adc
cmc
adc
jnp
push
or
fidivrl
outsl
add
cmp
mov
mov
add
add
mov
jne
lea
cmp
xor
sbb
test
add
dec
lret
rep
rcrl
icebp
bound
js
fistpl
iret
add
mov
cmpsb
sub
movsb
cmpsb
int3
add
add
lea
dec
or
add
cmp
imul
push
notb
add
add
movl
jo
mov
jmp
pop
add
and
xchg
adc
add
repnz
loop
push
mov
or
lock
out
lea
add
pop
mov
adc
xchg
lds
sbb
in
mov
pop
xlat
daa
and
add
in
std
pushf
inc
std
je
js
std
mov
mov
imul
and
out
mov
push
inc
lods
inc
shll
pop
jmp
inc
xorb
outsl
mov
mov
mov
cmp
out
sbb
cltd
add
jnp
in
test
out
test
lret
js
nop
mov
ret
imul
out
cltd
dec
and
cmp
iret
stc
aam
loope
nop
cmp
xor
cmp
pop
std
cmp
pop
mov
out
add
lds
pop
lcall
or
cmp
cmp
ror
mov
pop
jae
xor
xchg
adc
add
xor
jae
cmp
add
test
outsl
xor
call
and
jmp
jbe
cwtl
sbb
inc
adc
sub
jmp
sub
pop
add
adc
push
push
shlb
mov
add
add
add
add
push
adc
sub
in
js
sbb
dec
loop
inc
or
dec
push
jmp
and
lods
push
jp
mov
mov
into
add
aad
mov
add
add
sbb
shrl
pop
mulb
fldl
add
test
adc
addb
adc
stos
xchg
add
test
sbb
in
pop
add
jae
mov
add
and
icebp
fbld
enter
or
insl
out
xor
cmp
mov
or
sbb
lods
add
adc
mov
lcall
orl
lods
inc
test
inc
jno
loop
add
add
ljmp
mov
stc
xchg
dec
mov
mov
xchg
in
in
mov
nop
jmp
mov
shll
or
mov
outsb
push
jle
cmpsl
cli
or
pop
lcall
leave
mov
cmpsb
inc
and
movsb
add
jge
mov
mov
pop
sti
jle
jnp
jbe
movsb
mov
jmp
jmp
mov
mov
pop
jle
add
add
dec
and
add
iret
in
mov
pop
add
xchg
repnz
cmp
cmc
jge
hlt
xor
ja
fwait
popf
shrb
clc
rolb
outsl
ds
add
mov
push
add
add
push
sti
dec
add
arpl
daa
aas
add
jecxz
jmp
ret
ret
out
mov
mov
shrb
jb
mov
jecxz
and
pusha
lret
fwait
mov
cmovge
mov
popf
sub
adc
scas
mov
adc
sbb
loop
ljmp
add
mov
cmp
loopne
mov
add
mov
testb
movb
out
cmpsb
mov
popa
add
pop
cli
cmpsb
add
lods
sub
cmpsb
add
addr16
add
push
pop
mov
adc
mov
pop
test
xor
mov
adc
sar
cmp
add
loopne
cmp
filds
add
mov
lods
sbb
or
mov
inc
jnp
add
pop
adc
xor
add
shl
add
test
mov
int
dec
into
scas
fnstcw
push
mov
mov
shlb
pushf
or
lods
iret
adc
das
pushf
mov
inc
xor
add
cmp
cmp
jmp
aad
pop
push
sbb
add
add
fld
mov
xor
and
mov
outsl
les
push
dec
imul
xchg
and
jbe
fildl
data16
flds
mov
add
mov
dec
popf
or
mov
inc
imul
in
mov
and
xor
add
xchg
fwait
dec
pop
add
lock
enter
xchg
pop
xlat
popf
xor
adc
add
push
test
aas
arpl
jle
or
add
movsl
jle
mov
xchg
stc
push
mov
aad
and
pop
or
cmp
ja
into
jne
in
cmp
das
add
or
mov
add
cli
pop
xor
pop
out
fdivs
add
pushf
cmp
cmpsl
lods
scas
push
cmpsb
pop
movsb
gs
add
fstpt
dec
mov
cld
insb
add
dec
cmp
cwtl
adc
sub
sub
sub
xchg
out
add
mov
mov
fimuls
add
cmp
out
jecxz
add
in
add
imul
out
adc
xor
verw
xchg
incb
push
jbe
movsb
mov
mov
lds
pop
dec
pop
add
xor
stos
jns
push
dec
mov
dec
push
push
out
test
cmpl
sbb
leave
push
bound
add
sbb
ret
lods
roll
add
lods
adc
fwait
dec
add
sbb
mov
dec
sub
push
jecxz
orl
inc
mov
mov
mov
inc
push
push
sub
and
jnp
add
loop
stc
cltd
add
out
ja
inc
add
pop
and
aad
std
sub
xchg
mov
fisubrs
cmp
loopne
add
test
stos
add
outsb
xchg
sahf
movl
loope
ljmp
add
xchg
pop
jmp
jo
insl
outsb
mov
jecxz
add
movsl
mov
mov
ss
pop
and
add
adc
mov
sub
or
dec
adc
lret
add
in
lretw
pop
mov
clc
add
jle
sub
xor
decl
add
imul
fisubl
cmpsb
jne
xchg
arpl
cwtl
stos
add
adc
rolb
xchg
rorl
add
push
sub
mov
jmp
jmp
aam
add
sahf
add
out
into
call
adc
ret
shl
mov
jmp
add
jmp
push
dec
mov
dec
xchg
push
add
in
pop
andb
adc
xor
push
or
test
aaa
jge
gs
icebp
lcall
push
add
xchg
mov
pop
and
stc
dec
mov
sub
mov
leave
mov
rclb
lret
icebp
xchg
cwtl
mov
adc
sbb
inc
cmc
cmp
jl
lock
add
inc
mov
hlt
add
pop
push
adc
add
or
add
sbb
sbb
push
loopne
lods
push
add
dec
repnz
jl
mov
cmpsl
add
mov
cwtl
cli
loopne
push
mov
pop
hlt
add
add
mov
daa
fadds
mov
mov
or
xor
daa
inc
add
aad
imul
add
sbb
jnp
out
mov
aaa
xchg
mov
sbb
push
add
stos
dec
add
pop
fsubrs
iret
or
aas
dec
cld
push
xor
mov
push
int3
lahf
lock
adc
adc
mov
std
pop
fidivs
mov
cmp
xchg
push
and
cmp
int
add
mov
add
cmp
stc
push
sub
sbb
div
daa
adc
jae
leave
push
jecxz
xchg
repz
in
aad
mov
add
bound
cld
add
lret
sti
adc
or
jmp
add
add
out
add
cmpsl
sbb
add
pushf
sub
sub
lock
inc
je
movsl
push
aaa
aam
int3
inc
cli
cmpl
sub
outsl
roll
repnz
mov
add
mov
aaa
adc
leave
shl
sub
inc
sbb
mov
iret
add
xchg
imul
lods
push
xchg
cmpl
jg
test
and
mov
sbb
push
jae
push
shrb
arpl
pusha
mov
push
scas
pop
sbb
fs
push
ficoml
incb
pop
push
xchg
adc
sahf
sbb
add
mov
popf
das
sub
jo
not
mov
cmpsb
mov
in
dec
pop
fstpl
stc
js
insb
jno
outsl
adc
add
addl
sbb
into
xchg
inc
rclb
cmpsb
not
cld
pop
ret
add
sbb
jnp
popf
in
insb
out
mov
test
idivb
add
add
gs
jbe
mov
add
pop
stc
mov
mov
add
sbb
jno
inc
mov
pushf
xchg
sub
or
mov
add
pop
fiaddl
add
movsb
add
mov
ret
pop
adc
ljmp
test
inc
stc
pop
stos
mov
lcall
push
add
bound
iret
add
add
bound
testl
out
adc
xchg
ja
push
popf
loop
adc
flds
repnz
inc
nop
scas
mov
shll
sub
add
xchg
xor
out
push
push
lds
xchg
lret
add
push
xchg
mov
mov
outsl
xchg
xchg
dec
pop
push
incb
pop
sub
sbb
add
daa
insl
in
add
add
cmp
dec
push
xchg
mov
lret
repnz
or
roll
dec
add
insb
sub
pop
sarb
xlat
pop
orl
movsb
add
das
stc
pop
scas
call
push
fsub
cwtl
cmp
push
sub
xor
add
add
pop
xchg
adc
mov
and
dec
dec
add
mov
fstps
add
mov
adc
daa
popf
add
add
push
add
or
test
fistps
inc
add
xor
add
cs
cmpsb
adc
shl
push
mov
sahf
inc
jp
or
inc
in
pop
xor
xor
std
add
arpl
pusha
jnp
push
inc
ret
mov
or
adc
or
add
or
xchg
push
cmp
aam
or
fneni(8087
int
inc
vmread
in
add
lret
clc
add
ja
xchg
popf
push
in
push
xor
enter
lea
in
mov
stos
iret
int3
pop
cli
xchg
sub
fisttpll
jb
jge
fsubs
pop
out
movsl
mov
mov
adc
cmp
fcomi
adc
aas
fisubs
ds
mov
add
cmp
aam
push
mov
test
and
lret
mov
movsb
out
pop
mov
sahf
fsts
sub
outsb
cmpsl
jae
mov
sbb
test
pop
pop
add
pop
icebp
aas
add
and
lahf
ss
ret
cltd
cmpsl
jg
popf
add
int
add
mov
lahf
adc
aam
push
sbb
aad
dec
add
mov
int3
or
add
sbb
push
mov
add
add
cmp
mov
dec
jns
add
add
cwtl
dec
adc
and
xor
jno
in
mov
pop
fcomps
add
pop
adc
pushf
or
or
imul
mov
hlt
outsl
lods
or
cltd
jae
pop
xor
cmp
mov
pop
out
insb
aam
add
movsb
add
cmp
ss
pop
in
dec
cmp
shlb
push
add
add
dec
pop
popa
jae
addl
out
add
jp
and
aam
rcr
inc
pop
inc
scas
pop
jecxz
imul
aad
xor
fistl
xor
testb
mov
pushf
push
add
lea
cmp
inc
in
sahf
add
lds
test
ja
je
imul
xor
sbb
sub
xorl
sbb
or
inc
lret
mov
or
xchg
xchg
add
js
mov
push
test
lods
push
loopne
mov
adc
movsb
loop
out
inc
mov
call
xor
add
mov
movsb
cmp
fiadds
mov
cmc
lret
subb
mov
adc
inc
add
mov
scas
pop
add
and
or
add
add
add
cli
xor
push
mov
mov
test
pop
enter
adc
filds
test
cwtl
push
imul
cwtl
loopne
pop
lahf
and
mov
cmc
add
mov
mov
cwtl
push
adcb
mov
dec
sbb
mov
movb
or
jo
dec
add
rolb
insb
enter
pop
lds
lcall
aam
out
add
push
xchg
adc
cmpsl
mov
fwait
add
or
mov
pop
adc
add
mov
loope
je
add
mov
pop
jmp
ja
lahf
mov
cmp
add
movl
add
in
add
xchg
pop
mov
sbb
sbb
sub
pushf
stc
push
lds
sti
pushl
in
clc
add
add
imul
dec
stos
rorl
mov
lea
add
mulb
push
mov
lea
jb
add
sti
xor
push
ret
xlat
xchg
or
cmp
cld
mov
pop
test
iret
sub
jl
dec
sbb
mov
add
jge
or
fs
mov
mov
push
add
std
aaa
pop
xor
insb
sbb
push
imul
ss
dec
dec
iret
mov
add
mov
cmp
add
iret
inc
add
add
push
ja
push
add
lahf
aas
jecxz
push
js
outsl
add
pusha
lods
sbb
icebp
test
shl
scas
shrb
mov
es
stc
icebp
cli
jg
js
xor
inc
push
push
repnz
popa
std
xor
lahf
imul
add
jbe
push
mov
push
fadds
rcll
sbb
pop
add
push
mov
jo
add
add
das
scas
or
xchg
add
aam
lahf
add
test
aad
add
add
fidivl
add
icebp
rol
dec
jle
gs
cmp
or
addl
out
cwtl
ficoml
inc
dec
out
subps
add
and
in
sbb
sti
add
xchg
add
inc
and
push
sub
addl
js
xor
mov
enter
xchg
sbb
rcl
add
fsub
out
sub
push
push
inc
pop
andl
xor
aam
or
push
adc
rclb
xchg
jne
fimull
push
mov
or
cmp
adc
gs
out
pop
sub
dec
add
rcll
loop
fcom
add
pop
jo
pop
test
xchg
fmulp
xchg
popa
dec
and
xlat
add
cwtl
jae
sti
iret
mov
or
test
rcl
roll
in
iret
add
jg
popf
mov
dec
gs
xchg
fidivl
out
dec
lret
push
sbb
add
out
rcrb
xor
ja
mov
jne
xlat
lea
lahf
lock
inc
rorl
movsb
cmp
out
aam
mov
mov
push
pop
jo
inc
xor
movsb
add
dec
aas
add
or
out
scas
in
cmc
mov
xchg
into
xor
pop
inc
add
dec
pop
cltd
stos
add
lcall
sub
stos
mov
stc
stos
cmpsl
pusha
sbb
xchg
out
aam
outsb
jne
push
loop
mov
pop
push
jbe
cmp
add
lock
enter
add
add
inc
ret
push
loope
rcrl
mov
add
push
cli
sub
pop
loopne
mov
and
scas
add
out
push
add
data16
xchg
cmp
lea
mov
aas
mov
jno
sbb
dec
fldt
repnz
imul
add
mov
and
add
cltd
mov
int
add
cmpl
les
dec
movsb
lods
negb
repnz
dec
sub
jo
stos
xor
es
aaa
movsbl
jmp
add
sbb
popa
push
stos
add
sbb
aad
enter
je
and
xor
add
mov
out
ds
stos
rolb
add
enter
add
inc
cmpsb
test
lds
xchg
mov
int3
flds
mov
sbb
add
pop
jp
xlat
sub
aaa
adc
call
dec
popl
clc
xchg
iret
push
stos
arpl
pop
lahf
ret
add
shrl
mov
insb
dec
lds
in
std
jnp
enter
jno
movsl
nop
fidivrs
orb
mov
mov
add
pop
fisttps
push
add
dec
out
cmc
inc
fbld
mov
add
add
flds
fdivrs
ss
cmc
scas
adc
dec
test
dec
push
xchg
xchg
cmp
sub
add
scas
push
pop
mov
mov
push
testb
xor
adc
aaa
lret
or
loopne
movsl
or
fucom
add
movb
mov
mov
jle
sti
add
mov
add
sbb
daa
pop
sub
xchg
sahf
cmp
pop
xchg
ss
mov
inc
adc
inc
xchg
or
xor
xlat
add
push
sbb
idivl
movl
icebp
es
stos
mov
jne
adc
push
fmull
sbb
sbb
rorb
cmp
pop
add
lea
jg
push
int
scas
flds
mov
inc
daa
shrb
outsl
dec
add
and
sub
xchg
jp
in
add
push
push
sahf
out
pop
or
add
outsb
call
jmp
data16
adc
cmp
add
pop
movsl
cmp
xor
lea
add
add
xchg
xchg
sarb
sbb
add
xchg
stc
mov
or
sahf
add
sub
lock
movsl
push
add
pop
jle
xchg
push
lods
scas
cwtl
inc
aad
addr16
xchg
and
adcl
popl
aad
movsl
rolb
mov
lcall
add
jg
fisubrl
push
add
sub
dec
and
mov
jmp
cmp
add
scas
cld
add
loopne
add
addl
das
testb
xlat
std
sbb
inc
sub
sub
cmp
sti
repz
push
pop
mov
jge
addr16
dec
cmpsb
or
icebp
and
push
cmp
mov
sti
push
ficompl
fbstp
shl
cmp
or
mov
add
xchg
in
fildl
inc
es
and
add
add
and
mov
pop
dec
xor
pop
mov
xchg
cld
daa
or
ffreep
movsb
pop
inc
daa
pop
popa
in
cs
cmc
out
and
mov
sbb
mov
movsl
and
movb
ljmp
int
add
push
mov
lods
sbbb
xchg
jecxz
xor
call
mov
sbb
push
repnz
mov
add
mov
int3
add
or
call
das
sbb
cmpsl
add
inc
add
mov
pop
add
rcll
enter
lret
pop
or
push
pop
aaa
xor
sbb
jbe
sbb
mov
popl
inc
add
add
dec
inc
es
enter
mov
xlat
cmpsb
mov
add
ret
fiadds
jge
and
push
mov
cmp
cmpsl
add
test
js
shll
push
movsb
sbb
movsb
mov
mov
mov
shl
lahf
cmp
cmp
bound
push
push
sub
or
cmc
xor
loop
add
sub
adcl
xor
out
sbb
std
add
pop
and
and
jge
enter
xchg
popa
jno
push
ja
sahf
add
cmpsl
xchg
inc
mov
sti
rolb
mov
pop
fldenv
mov
xor
adc
adc
push
add
xchg
dec
jle
movsb
xlat
lea
lea
movsb
fcoms
pop
pop
clc
sahf
xlat
cmp
lcall
sub
adc
dec
xorl
add
add
push
jbe
ds
repz
pop
or
cmp
dec
add
aad
add
in
xchg
daa
roll
xchg
jb
ss
xlat
jg
cmpsb
pusha
stos
and
ljmp
cmpsb
es
mov
add
arpl
jb
insb
jne
cmpsl
test
dec
mov
loopne
sbb
data16
add
xor
xor
or
sbb
fists
sbb
xlat
xchg
add
mov
add
xchg
call
fwait
mov
jmp
shlb
xchg
push
pop
add
std
sbb
pop
pop
ljmp
clc
stos
lock
add
push
scas
enter
push
pop
addr16
std
pop
sub
add
sahf
add
or
add
cli
stc
add
mov
stos
aad
fsts
movsw
cmp
add
das
cmp
scas
add
shlb
jge
add
adcb
xchg
push
mov
add
iret
mov
cmp
add
les
xor
js
push
imul
pop
xchg
pop
add
enter
jmp
cmp
inc
lds
add
xor
add
pushf
pop
cmpsl
fs
imul
sbbb
mov
in
jmp
fstpt
aas
mov
mov
popa
cmp
adc
insl
inc
imul
pop
mov
je
add
add
cld
and
and
ss
add
das
int3
dec
xor
les
pop
mov
pop
test
xchg
out
xlat
dec
add
add
rcrb
dec
mov
sub
add
not
movsb
and
out
adc
cmp
sub
lret
ret
data16
sub
xor
xchg
push
xor
add
out
dec
scas
mov
mov
jns
dec
add
jl
arpl
and
fwait
ljmp
cli
sub
inc
cmpl
out
pop
pushf
popa
fst
inc
shr
es
sbb
es
dec
cmp
scas
push
leave
fst
add
cli
and
xor
add
sub
inc
mov
mov
outsl
add
insl
add
cmp
add
or
push
lods
int3
cs
cltd
mov
jnp
fdivrl
adc
inc
roll
add
leave
and
pusha
add
outsl
ror
mov
lea
cs
add
push
add
dec
adc
imul
into
icebp
dec
test
call
inc
pop
sub
rcrl
dec
add
sub
addb
cmpsl
lock
dec
mov
pop
fadds
lahf
in
out
xchg
loope
xor
lea
aaa
addb
imul
loop
jnp
xor
push
pop
sub
lock
and
add
pop
imul
in
add
xor
xchg
cmp
add
mov
add
cmpsl
add
and
roll
sbb
push
add
add
add
mov
cmp
sbb
jge
jle
dec
fisubrl
mov
scas
add
add
mov
sbb
lahf
rcr
ds
cmp
cld
xor
add
lods
gs
notb
sbb
pop
xchg
mov
mov
test
filds
add
addr16
add
push
adc
enter
pusha
add
insl
add
cwtl
mov
inc
cld
enter
jp
insl
xor
out
popa
add
push
sbb
jo
ljmp
jnp
add
pop
add
add
rclb
push
ret
and
add
xor
and
add
adc
mov
mov
pop
xor
sbb
in
scas
aad
xor
sub
mov
lret
imul
call
jnp
adc
add
rolb
push
fcmove
inc
ror
into
adc
lods
clc
xor
xor
sahf
xchg
or
and
add
call
mov
ljmp
adc
xor
mov
lods
mov
rcr
push
cmp
and
cmc
lcall
int3
sub
xor
mov
and
inc
jo
push
add
lret
xlat
pop
cmp
sbb
and
pop
aad
cmp
movsb
sub
or
add
test
cltd
bound
xor
and
mov
fists
mov
les
add
ja
and
test
mov
xchg
push
sub
cmp
loopne
loope
mov
push
mov
add
hlt
mov
add
repz
ljmp
lds
inc
mov
ljmp
add
insb
mov
daa
imul
jge
jno
adc
insl
xchg
das
xchg
incl
cmp
stos
xorb
mov
add
mov
inc
out
dec
sbb
hlt
dec
add
add
or
push
cmp
movsb
daa
jno
cmpsl
idivb
add
add
ss
and
pop
add
lret
add
push
inc
adc
ja
js
loopne
mov
test
cld
pop
add
scas
call
nop
xchg
add
sub
inc
add
add
arpl
jb
test
lea
data16
js
xlat
add
add
cld
jnp
insb
push
or
xor
add
sub
lock
add
mov
lahf
das
xchg
xchg
data16
enter
mov
add
sub
jmp
add
inc
push
loopne
xor
popa
out
jp
sub
bound
or
mov
ljmp
inc
sbb
push
jns
add
adc
add
and
nop
icebp
js
sub
outsb
cmp
mov
inc
cmp
add
xor
test
mov
jnp
mov
mov
add
push
mov
push
pusha
pop
pop
add
mov
add
iret
daa
pop
sbb
test
fs
add
lea
inc
xchg
xchg
dec
rcrl
xchg
xchg
jo
or
and
xchg
inc
jb
ja
pop
rolb
cmp
and
insl
inc
in
sbb
mov
pop
inc
add
gs
stos
add
push
andl
hlt
aam
in
sub
out
dec
addb
add
add
push
xor
add
or
jg
inc
stos
dec
jns
mov
imul
xchg
int
xchg
mov
mov
int
sbb
xchg
daa
jne
movsb
adc
hlt
and
or
pusha
fistps
test
pop
add
pop
inc
fwait
insb
add
int3
cwtl
dec
add
dec
pop
add
add
xor
add
or
mov
push
cmp
lcall
outsl
ret
mov
fiadds
dec
and
ljmp
adc
sbbl
lret
outsw
mov
or
mov
jnp
xor
out
add
cltd
popf
pop
add
clc
xor
mov
stos
pop
mov
dec
call
jge
mov
les
or
and
fisttpl
mov
pushw
hlt
test
xchg
add
cmc
out
int
cld
int
bound
leave
pop
push
pop
loop
sbb
pusha
mov
and
lahf
cmp
add
dec
adc
sub
push
and
add
and
call
dec
lret
push
sar
add
pop
push
loopne
adc
pop
and
pop
add
sbb
in
bound
push
daa
lds
popa
pop
js
clc
jnp
pop
mov
push
divl
mov
and
add
or
xchg
add
icebp
xorb
add
int3
andb
mov
fmuls
cli
test
push
sbb
rcl
ljmp
cmp
jle
mov
ljmp
mov
xchg
movsl
idivl
mov
incb
lock
add
or
sub
cmp
add
cmpb
incl
stos
imul
xchg
and
test
fiaddl
sub
mov
lret
mov
shrb
jo
dec
out
test
adc
cmp
inc
push
fildll
xor
addl
negl
add
mov
push
test
pop
xchg
xor
add
int
and
int3
xor
pop
or
push
sub
add
mov
sahf
add
sub
in
cwtl
sbb
lock
fnsave
push
call
add
bound
lcall
ss
sarl
sub
mov
mov
cld
lret
mov
incl
loop
add
fstpt
push
inc
cmpsb
fcomp
and
adc
jp
mov
je
arpl
lret
lcall
add
add
xchg
cmp
add
sub
scas
stos
sbb
push
jo
sbb
ret
mov
cltd
lahf
js
inc
or
lock
mov
adc
rolb
dec
add
inc
stos
xor
fcompl
loopw
pop
jbe
push
xchg
mov
flds
fisubs
mov
jo
adc
pop
popa
shll
testl
insl
mov
int
xor
nop
and
sbb
pop
ret
mov
fwait
repnz
add
add
add
add
ljmp
push
push
cmp
jb
adc
inc
add
sub
sbb
rolb
ret
add
jno
negl
stos
adc
add
and
divl
add
cmp
mov
add
add
std
mov
sahf
out
cmp
add
scas
fiaddl
push
loop
ret
xchg
mov
rorl
out
push
pop
dec
add
nop
dec
inc
faddl
xor
outsb
add
rolb
stos
xor
adc
shll
xchg
cmp
sub
data16
aaa
in
jmp
push
sub
flds
ret
mov
cwtl
jno
and
test
mov
add
out
pop
lcall
int
mov
push
fildl
and
inc
insb
push
add
mov
xchg
sub
dec
popa
cltd
xchg
pop
fnstenv
in
in
cmp
push
jne
push
xor
sub
stos
add
add
add
add
xor
push
subl
xor
dec
les
cld
push
add
add
add
out
popf
stos
mov
aaa
inc
dec
xchg
insl
mov
dec
add
add
jmp
outsl
mov
mov
add
negl
dec
in
add
push
pop
ret
insb
or
lea
add
aas
add
or
adc
sub
inc
cltd
xchg
push
cmp
add
in
lds
and
cmpsb
sub
ret
pop
cmp
test
add
push
add
add
mov
es
adc
sbb
pop
nop
mov
cmp
int
jnp
jmp
dec
add
add
xor
das
add
fildll
add
lods
or
verr
and
add
test
fldcw
sti
lcall
push
roll
jmp
lcall
cmpsl
push
fsubs
gs
leave
add
dec
lcall
mov
cmp
xor
pop
lcall
cvtps2pd
inc
sbb
pop
test
add
imul
pop
add
fldenv
inc
cmp
stos
add
push
inc
jle
dec
mov
jbe
mov
jne
bound
in
cmp
adc
cmp
sbb
add
adc
lahf
mov
inc
jo
ds
push
jo
dec
mov
inc
xor
mov
xor
rol
pop
push
push
scas
push
stos
add
and
pushf
test
xchg
insb
lret
imul
movsl
push
das
test
inc
inc
add
icebp
xor
fimuls
aas
in
xchg
add
xchg
bound
out
inc
pushf
dec
ljmp
js
test
jmp
movsb
into
mov
push
jno
stos
dec
jns
pop
movsb
add
mov
jo
xor
inc
dec
sbb
je
mov
ja
mov
mov
cli
push
push
xor
pop
add
or
arpl
or
pop
mov
xor
pop
and
test
int3
dec
and
mov
mov
add
mov
push
add
inc
xor
fcom
push
add
jb
cs
data16
mov
inc
xchg
mov
sub
sbb
dec
add
ret
push
test
sub
xor
add
mov
jb
daa
add
or
push
xchg
cld
inc
add
sub
xchg
pop
and
in
add
xor
push
or
in
out
adc
jb
xchg
icebp
loopne
xchg
add
test
shr
dec
mov
in
and
mov
add
divl
adc
pop
leave
in
pop
pop
loopne
sbbb
ret
inc
fadds
xor
jp
leave
sarl
push
push
scas
mov
sbb
dec
cltd
adc
push
dec
lods
sbb
mov
cltd
neg
fisttpl
bound
les
add
push
adc
mov
xor
lods
xchg
dec
in
popa
pop
lds
xchg
mov
push
and
sub
incb
jecxz
xor
add
lods
mov
call
add
push
xlat
jge
cmp
aad
popaw
icebp
mov
lret
xchg
xor
mov
nop
adcl
bound
add
add
jo
les
shl
ja
xor
or
xor
push
add
xchg
movsb
pop
xor
jo
insb
sbb
xchg
add
and
cwtl
push
ret
mov
dec
xchg
cmpsl
add
sub
adc
jge
add
es
mov
inc
or
pop
sahf
push
pop
pusha
add
test
les
inc
add
mov
add
rcrb
aam
adc
fs
lods
mov
cmpsb
test
adc
ja
add
inc
stc
jmp
jbe
add
mov
push
jbe
mov
sub
pop
fs
and
dec
cld
add
inc
dec
adc
int
test
push
into
mov
mov
and
cmp
or
mov
add
sbb
imul
sbb
add
addl
insl
jns
out
pop
ss
xchg
jns
lods
cmp
xchg
sbb
cli
sub
in
xor
stos
outsl
add
add
pop
jnp
inc
sti
dec
addr16
push
jmp
aas
frstor
jle
ret
add
movsb
hlt
lods
mov
or
cmp
mov
add
divb
add
stc
aas
sbb
xor
mov
fmull
sub
ss
add
add
xor
lock
mov
add
aam
pop
mov
clc
std
out
in
lret
add
iret
jno
xlat
push
jb
or
insl
and
add
cmp
inc
sub
repnz
push
add
mov
cmp
loop
mov
add
stos
pusha
add
push
cmp
mov
aad
leave
xor
mov
jno
movl
add
pop
add
out
or
cmpsl
dec
add
movsb
and
ss
imul
mov
push
in
sub
xor
dec
pop
fcomip
sti
inc
dec
inc
jge
les
pop
pop
pop
and
cmp
add
scas
pop
add
dec
aam
shrb
cltd
mov
ror
in
sbb
call
and
clc
sahf
cmp
inc
jo
lcall
and
cs
pop
mov
enter
stos
jo
rclb
sbb
int
int3
das
pusha
inc
addl
pushf
push
add
mov
dec
ss
add
jecxz
loope
lock
adc
inc
inc
add
in
jbe
jecxz
pusha
jg
mov
inc
addb
mov
loopne
vpsrad
cmp
lods
ret
add
cmp
add
jo
or
int
int3
mov
pop
fwait
adc
call
sub
push
ret
add
js
std
jmp
add
in
push
xor
and
dec
pushf
add
and
inc
cld
aaa
fs
shll
push
cmp
ret
push
les
sub
notl
add
mov
sbbb
shr
addb
add
int3
in
lcall
sbb
cmp
dec
add
cmp
jno
adc
sbb
imul
lret
push
repz
push
mov
and
in
inc
add
cmp
add
shl
psrld
movsb
bound
mov
addb
add
cmova
icebp
mov
popl
das
cli
fs
mov
push
xchg
and
inc
fadds
ret
or
add
adc
or
ret
mov
add
mov
js
das
inc
je
or
cli
stos
popf
insb
add
add
mov
xchg
add
stos
cs
nop
mov
ljmp
sbb
push
ret
and
loopne
mov
xchg
push
inc
xchg
lds
jmp
addb
dec
jge
lods
sub
jg
pop
stos
clc
jns
sbb
add
adc
mov
aas
jle
clc
add
adc
or
adc
test
jp
xorl
fsubrp
nop
nop
test
add
push
lods
aam
cmp
scas
ljmp
sbb
mov
sub
imul
sbb
mov
push
xor
add
enter
jmp
rcrb
outsl
test
and
and
ja
xchg
xchg
cmpb
sub
add
gs
decb
sbbl
cmp
test
mov
add
rcrb
and
cmp
push
add
push
les
dec
add
fidivrs
mov
xorb
push
mov
cmp
sbb
sbb
out
test
lret
adc
jae
or
mov
cmpsl
jb
pushf
lahf
pop
adc
outsb
add
sub
fwait
push
pop
inc
mov
dec
jge
arpl
cwtl
and
mov
test
iret
flds
out
inc
clc
and
loop
in
pop
and
shrl
mov
jle
pop
and
mov
or
add
jmp
lahf
mov
aad
inc
jae
push
sbb
add
lds
leave
fs
jl
imul
mov
push
push
outsb
inc
add
pop
lret
sbb
cli
add
shrb
xchg
jp
add
mov
jp
dec
add
xor
enter
xor
test
push
dec
pop
add
add
add
add
popa
int3
pop
sub
adc
rcl
push
add
add
xor
xchg
orl
xchg
rolb
rorb
es
cmp
cmp
imul
add
inc
icebp
sbb
loope
mov
jbe
mov
xchg
fs
xchg
pop
push
mov
icebp
sti
ljmp
gs
mov
mov
push
push
or
sub
mov
cmp
es
add
sub
sub
add
add
lcall
pop
xchg
pop
mov
add
xor
lret
lret
fs
in
loopne
add
add
sbb
xchg
mov
sub
lahf
xchg
add
xlat
push
xlat
aam
jno
ret
sub
in
inc
pop
add
push
in
arpl
andb
xor
sbb
dec
shl
jmp
adc
mov
add
add
push
mov
nop
sbb
js
sbb
movsl
fisubs
aaa
ret
dec
sti
out
or
sbb
xchg
fldlg2
ret
mov
inc
mov
and
pop
fistpl
clc
int3
or
insb
sbb
lds
mov
lods
dec
cmc
pop
mov
in
pop
push
inc
adc
jae
int
mov
push
xor
jb
add
cmp
pop
lea
cmp
insl
in
xor
sar
cmp
mov
or
mov
dec
xor
pop
dec
leave
aam
xchg
adc
push
xor
add
sbb
jmp
xchg
idivl
cld
add
add
and
jnp
cmp
mov
or
sub
and
inc
aaa
add
ss
cs
movl
cmp
add
xchg
aad
or
add
mov
jmp
cmp
repnz
push
mov
and
fildl
daa
or
inc
cmpb
add
cmp
pop
rolb
nop
push
aad
xor
push
mov
xchg
in
ror
arpl
inc
push
or
arpl
shufps
add
scas
add
add
mov
out
lock
xor
sub
dec
adc
mov
dec
pusha
loopne
add
mov
sbb
add
add
mov
add
add
mov
rol
pusha
jmp
repnz
cltd
int
int
or
cmp
cltd
jmp
imul
push
aas
pusha
mov
mov
inc
add
mov
and
mov
daa
lret
and
mov
pop
js
lds
add
add
jne
loopne
int3
icebp
addb
fidivl
insb
add
jnp
cmp
add
ljmp
or
lret
ds
icebp
or
loop
aaa
pop
pop
inc
push
pop
jne
test
out
inc
stos
pop
mov
mov
xchg
and
in
repnz
lret
cwtl
adc
rcl
fsts
pop
addb
pushf
test
add
in
or
add
ljmp
push
shll
in
xlat
in
mov
js
xchg
pop
cld
iret
sbb
mov
fnsetpm(287
mov
idiv
cwtl
mov
dec
out
add
mov
into
stos
aas
jge
adc
dec
sub
add
xchg
cmpb
inc
sbb
pop
test
out
repz
hlt
pop
add
int
add
jmp
push
push
clc
loop
in
pop
mov
mulb
je
popa
lret
mov
sbb
mov
cs
mov
mov
outsb
sub
jmp
mov
jbe
xchg
cmc
sub
push
pop
into
xor
shlb
mov
xor
pop
mov
in
pop
or
gs
add
sub
scas
add
out
push
mov
add
fs
pop
std
xor
rolb
nop
outsl
fsubs
inc
out
rcrb
add
cs
sbb
cmp
stos
aaa
and
imul
cltd
pop
cs
jno
addb
xlat
inc
roll
lods
add
out
sub
add
cmpsb
repnz
and
xor
cmpsl
rolb
jnp
mov
jl
jmp
dec
insl
pop
mov
daa
repz
dec
aam
nop
pop
cmp
mov
push
cmpsb
add
addr16
push
stc
xor
push
jne
sub
or
xlat
pop
dec
cmp
pop
stos
cmp
cmpsb
add
mov
add
mov
xchg
and
call
push
dec
adc
push
push
add
adc
mov
cltd
pop
addl
gs
in
sub
icebp
popa
ret
add
mov
in
pusha
jbe
ss
in
es
add
pop
add
out
in
test
add
outsb
xchg
scas
je
inc
pop
fldcw
aam
lock
scas
out
xor
mov
rolb
mov
xchg
mov
mov
push
pop
add
rcrl
adc
cld
stos
cmp
filds
add
xor
mov
add
lds
cmp
sbb
mov
mov
xor
imul
inc
add
jne
push
mov
das
add
movsb
and
lahf
pushf
push
and
popa
popa
mov
add
add
inc
cli
std
mov
aad
fwait
add
add
test
scas
dec
jb
jecxz
add
frstor
fwait
loop
mov
fcomi
inc
push
add
loope
ret
pop
mov
and
lahf
lahf
push
mov
add
cmp
mov
or
cwtl
push
pop
push
xchg
fmul
mov
add
scas
add
push
and
xor
mov
add
jl
cwtl
bound
sub
mov
push
ljmp
imul
std
hlt
sub
push
pushf
cmp
add
mov
inc
cmp
das
mov
aaa
mov
in
ss
inc
dec
dec
test
jo
push
incb
jb
nop
lret
xchg
nop
jg
sbb
fbstp
lods
xchg
cmp
ret
add
test
adc
adc
add
out
dec
pop
push
lret
push
rorb
ss
repnz
pop
fsubrl
or
bound
mov
mov
dec
ja
adcb
jp
add
fistpl
pop
add
jmp
pop
enter
add
sub
jae
or
aam
xchg
mov
jns
ljmp
dec
test
and
outsl
pop
insl
add
cmp
lods
enter
movb
lock
cmp
mov
add
das
push
pop
fstpl
fidivs
push
cmp
dec
push
adc
add
cmc
mov
aad
mov
add
xchg
push
add
ret
rclb
push
cltd
repz
andb
add
sub
add
popa
add
or
add
pop
pop
lret
add
addr16
stos
mov
into
xchg
mov
addl
test
add
add
jns
scas
stos
add
imull
mov
add
scas
repz
inc
add
push
xor
xor
xor
jmp
xor
sbb
push
jbe
jns
and
cmpsb
hlt
in
adcb
cmp
or
loop
jle
gs
add
or
mov
add
push
add
push
pop
inc
mov
mov
mov
into
add
lea
jp
cmp
ljmp
add
cwtl
fmull
pop
addb
pop
mov
push
cmp
inc
int
mov
add
pop
jbe
mov
push
inc
cmc
cmpsb
sti
stos
fisubl
loop
incb
pop
add
mov
lahf
and
or
lods
xor
adc
outsl
push
out
test
lods
loope
sub
or
mov
sahf
pop
mov
jle
rorb
or
sbb
inc
mov
add
sbb
mov
stc
xchg
pop
xor
test
add
movsl
sub
dec
dec
xor
add
or
xor
pusha
xchg
jno
push
add
add
add
int3
stos
add
inc
push
mov
clc
dec
pop
adc
int
scas
sbb
push
sbb
push
cmp
pop
sbbb
jno
or
lcall
dec
xchg
fwait
out
add
cld
mov
mov
sbb
mov
bound
daa
lret
aam
pop
or
mov
mov
imul
lcall
in
insl
xchg
push
add
movsl
xchg
push
cmp
add
fdivrl
lahf
ljmp
dec
add
or
sub
std
addl
loopne
addr16
cmp
ja
call
call
fs
cmp
add
aad
sub
popf
lahf
lods
xor
sbb
lds
scas
in
and
and
adc
add
push
adc
push
sub
pushl
out
mov
pusha
add
inc
lock
mov
inc
mov
add
push
lret
jg
cmp
jae
push
add
lods
sub
mov
imul
and
add
sub
push
add
pop
iret
xor
out
add
les
lea
aad
pop
add
dec
adc
xchg
into
pusha
popa
jb
inc
add
or
jnp
add
sahf
jecxz
pushf
or
jmp
inc
xchg
pop
loopne
push
mov
and
push
pop
icebp
push
out
sbb
and
insl
inc
mov
jg
cmpsb
jmp
pop
lahf
insl
add
cli
dec
jo
cmp
sub
outsl
loop
out
pop
dec
xchg
add
aas
dec
add
cli
and
mov
addr16
cmp
cld
imulb
scas
add
lret
add
jp
aam
js
mov
inc
negb
mov
cs
rolb
test
mov
mov
mov
sbb
pop
mov
nop
shll
gs
cmc
imul
jge
jmp
in
mov
pop
addl
arpl
and
movsb
js
sub
lds
sbb
dec
mov
ljmp
ljmp
or
fidivrs
test
in
mov
js
scas
dec
push
mov
mov
roll
dec
rolb
addl
cmp
push
add
mov
add
das
jb
loop
pop
movsb
add
movsb
jne
add
dec
add
cmpsb
ret
xor
and
jl
sarb
or
inc
enter
lret
xchg
mov
repnz
pusha
flds
xchg
in
sbb
movsb
testb
popf
xchg
or
call
imul
pop
add
pop
pushf
or
testb
jo
or
movb
fildll
nop
add
ljmp
lret
jecxz
test
jle
cwtl
xor
mov
fistl
dec
je
insl
mov
inc
sbb
push
mov
mov
jnp
repz
add
add
popf
mov
xchg
dec
push
add
into
dec
add
or
mov
pop
add
xor
push
adc
adc
cli
add
mov
clc
add
push
dec
pop
fnsave
add
add
inc
add
jmp
bound
ds
repz
dec
dec
mov
dec
imul
jl,pn
push
jge
and
push
je
add
fistps
or
jbe
add
jnp
adc
ljmp
adc
add
pop
xchg
lret
leave
or
xchg
movsl
xor
push
addb
xchg
sub
inc
sub
inc
das
inc
or
data16
insl
loop
add
add
insb
add
add
ret
sub
xlat
pop
inc
sbb
cmc
mov
iret
push
push
mov
fcom
add
xor
mov
pop
add
add
or
push
adc
sub
shll
imul
adc
roll
lock
dec
loopne
mov
cld
sar
orb
ss
xlat
push
daa
lahf
and
xor
cmp
cwtl
sub
or
out
and
es
sbb
mov
sbb
push
cld
push
add
xchg
add
add
pusha
cmc
lea
fistpll
pop
arpl
into
ror
pop
or
add
xchg
cmp
xchg
cmp
dec
cltd
pop
adcb
sub
xchg
add
jp
push
push
cmp
mov
sarb
insb
gs
cmp
sbb
pusha
add
pop
dec
inc
sub
push
dec
sub
cli
adc
test
mov
adc
or
jae
fs
xor
add
lea
stc
inc
add
push
add
add
jg
add
bound
add
jo
adc
pushf
and
mov
adc
add
xor
push
mov
fcoms
cmpb
out
sub
jmp
out
add
add
push
mov
sub
add
add
ss
add
add
fwait
jnp
jle
daa
push
mov
jmp
adc
movb
add
inc
inc
xchg
mov
mov
jns
lahf
bswap
or
mulb
loope
inc
scas
jbe
add
inc
adc
add
add
mov
dec
and
test
push
cwtl
imul
push
push
sbb
fidivl
insl
xchg
mov
cli
inc
loop
cmp
sbb
push
mov
mov
fiaddl
imul
dec
sti
add
xchg
add
sub
xchg
ret
add
fbstp
sbb
push
movsb
add
mov
movl
xlat
jbe
and
test
xor
or
add
mov
mov
xchg
js
sub
add
pop
es
add
add
test
xor
add
or
cmpsb
pop
jg
xchg
ffree
xchg
test
jle
mov
inc
jp
push
aad
mov
mov
add
in
cmp
cmp
xor
andb
add
add
sub
mov
add
jbe
mov
std
sbb
mulb
int
ja
sahf
add
popf
cld
sub
push
fildl
push
dec
shrl
mov
inc
int
xor
add
add
mov
es
test
add
das
pop
xchg
clc
mov
movsl
aaa
inc
mov
int3
xchg
xchg
push
add
dec
fadds
push
sbb
pop
popa
push
xchg
mov
pusha
add
push
movsb
adcb
cs
insl
pop
fsubrs
mov
out
cs
cmp
pop
sub
mov
mov
lcall
adc
inc
add
pusha
mov
xchg
add
adc
push
mov
pop
jno
jp
iret
jns
push
pop
add
jle
loopne
push
lahf
mov
pop
mov
in
xchg
sbb
or
add
add
sub
xchg
pop
iret
add
add
dec
arpl
call
adc
mov
cmc
add
sub
lods
add
sbb
adc
test
sbbl
mov
fs
ds
push
add
aad
adc
iret
sbbb
cli
mov
dec
mov
sbb
add
mov
push
add
sub
and
and
xor
fwait
adc
imul
jae
nop
dec
dec
jmp
cltd
jle
add
lret
ss
mov
cmovns
inc
add
ret
popf
fwait
bswap
dec
mov
stos
or
movsl
add
xchg
stc
add
adc
test
mov
lds
stos
aas
dec
insl
sub
lods
idivb
out
enter
add
dec
add
imul
or
push
mov
es
or
dec
pop
xchg
add
push
xor
xchg
std
sub
mov
iret
push
add
pop
out
jg
xor
xor
repz
test
vmovdqu
jnp
jnp
and
push
or
scas
sbb
sub
add
shr
add
sub
inc
jb
sbb
pop
cs
pop
cmp
add
add
jl
aam
lds
xchg
sub
add
add
stos
rorl
add
mov
imul
in
das
fnsave
inc
mov
push
fwait
aaa
add
add
dec
imul
cmp
mov
xchg
loopew
dec
inc
add
loope
dec
rolb
ja
add
push
mov
xchg
pop
jns
in
push
add
sub
add
aaa
mov
jae
pop
add
xchg
cmpl
dec
repnz
cmc
inc
fwait
adc
push
push
and
fdivrs
jecxz
pop
add
ret
ret
cltd
add
mov
add
dec
ja
stos
jge
pop
add
or
loopne
pop
add
xor
add
mov
jl
addb
push
pop
push
rcrl
and
repz
jno
push
stc
xor
cmp
jne
inc
fcompl
fisubl
mov
push
or
xor
mov
mov
or
lds
add
jns
loop
mov
imul
cmp
cmp
dec
cwtl
fs
fimuls
adc
xor
daa
adc
jle
mov
cmp
loop
fisttpll
mov
rclb
jnp
xchg
adc
mov
push
loopne
jbe
or
pop
sbb
jnp
jecxz
jle
pushf
nop
pop
mov
enter
add
lret
push
add
fdivr
lock
sub
or
jns
mov
dec
mov
or
lods
inc
add
rolb
fwait
add
pop
xor
jo
cmpsl
add
xor
test
lret
roll
lahf
dec
shrl
add
icebp
inc
fldl
cmp
or
mov
xadd
adc
test
pop
pop
enter
pop
jge
add
mov
xor
or
enter
add
rcll
xor
lcall
add
insb
and
push
or
sahf
icebp
shlb
add
pop
cmp
cli
movsl
mov
repz
add
add
lods
movsl
dec
nop
push
std
popl
roll
dec
js
cmovle
cli
stc
std
add
imull
jl
jo
and
sbb
adc
cmpsb
xorl
add
fwait
cmp
cmp
cmpl
xchg
cld
lahf
sbb
push
repz
hlt
add
push
and
mov
pop
std
mov
cld
lcall
xlat
pop
add
in
add
neg
shrl
mov
mov
mov
clc
sub
add
mov
and
rolb
xor
out
in
popf
movmskps
add
jmp
pop
ret
inc
xchg
popa
loopne
in
bound
scas
inc
adc
mov
adc
pop
add
jno
cmp
push
jp
aaa
test
mov
lea
add
mov
add
or
lcall
mov
adc
dec
mov
in
add
sbb
int3
or
in
cmp
cwtl
inc
lods
imul
xchg
adcb
add
cmpb
cmp
js
mov
shlb
xorb
sahf
xchg
add
add
add
xor
and
iret
add
mov
or
sarb
lahf
xlat
sbb
jp
pop
fs
sbb
mov
add
xchg
in
and
cld
pop
sbb
scas
aad
rolb
or
out
xchg
add
insl
aad
and
and
daa
jnp
sbb
inc
pop
sbb
add
push
movl
add
mov
call
in
cmp
cld
aam
mov
pop
pop
ja
xor
mov
pop
jbe
cmp
ret
fs
movsl
xchg
add
outsb
add
push
pop
fsubrs
add
test
sahf
addr16
sbb
jb
cmpsb
pop
cmc
xor
jae
imul
mov
push
sbb
stos
int3
ss
sahf
add
add
xchg
rcl
xor
fstpt
sub
mov
mov
rclb
adc
jle
fmull
sub
cld
testb
mov
dec
jmp
int
bound
push
jbe,pt
dec
daa
or
xchg
mov
mov
test
add
dec
imul
sahf
sub
cmp
cld
push
ljmp
add
ret
sub
nop
xchg
add
sbb
push
mov
fcmovnbe
mov
aaa
pop
add
add
call
in
add
pop
mov
call
add
lods
jg
in
sub
jle
cmp
xor
push
xor
stos
test
and
imul
lds
jge
add
cli
mov
and
fwait
sbb
stc
push
adc
arpl
pop
cmp
bound
add
add
push
add
sbb
cmp
jb
rcrl
or
sbb
mov
pop
push
in
add
jno
push
mov
xchg
out
stos
xchg
adc
jmp
js
cld
shr
or
push
roll
in
aad
cmp
mov
hlt
ja
pop
in
ja
cmp
outsl
add
cmpsl
xor
js
imull
xchg
add
adc
jno
ret
xchg
out
add
add
sbb
stos
imul
push
mov
mov
test
add
jno
and
mov
pop
lret
loopne
push
movsb
in
mov
push
loope
or
in
add
and
sbb
ret
in
add
sahf
add
addl
movsl
mov
add
test
adc
scas
dec
fnstenv
mov
fs
mov
enter
test
shl
xchg
nop
loopne
adc
add
add
lock
cmpsl
leave
mov
sub
pop
lahf
fwait
add
js
lock
in
faddl
pop
movsl
mov
push
cmp
pop
xor
xor
push
mov
sbb
leave
jle
xchg
mov
adc
mov
sub
repnz
dec
or
dec
jecxz
dec
repz
sub
adc
lds
pop
mov
jns
or
or
xchg
scas
cli
int3
add
adc
xor
dec
adc
mul
add
add
loopne
pop
lock
push
nop
leave
push
add
push
popf
sbb
xchg
adc
xor
call
mov
adc
push
pushf
in
push
add
mov
mov
jns
add
ss
aas
lods
pavgb
sub
mov
sub
and
insb
xor
add
add
jmp
add
shr
imul
adc
add
rorb
xchg
leave
je
jp
add
out
adc
cld
mov
or
mov
in
cmp
and
dec
pop
shll
add
add
add
scas
add
xchg
sub
popf
sahf
fistpl
add
or
into
push
and
sub
jne
sub
cmp
add
lds
ss
dec
in
add
out
adc
xchg
movups
add
push
cmpsl
loopne
add
add
or
and
ja
and
add
or
mov
fstps
loopne
fildl
push
out
mov
insb
and
push
inc
outsl
in
add
push
cld
lods
cmc
sahf
nop
add
out
xchg
mov
sub
jb
shrb
xchg
push
jl
mov
lods
add
xchg
dec
push
mov
dec
mov
adcl
fisttps
mov
add
dec
add
out
dec
pop
jne
mov
stc
scas
scas
or
test
testl
push
add
movsl
faddl
sub
mov
ja
repz
je
pusha
dec
jl
and
push
inc
push
sbb
out
cmp
mov
pop
add
dec
std
mov
or
cwtl
xor
add
mov
pop
sbb
xchg
adc
jle
addr16
rorl
pop
shlb
mov
decl
inc
jle
inc
or
adc
or
rcrl
dec
adc
std
mov
sbb
shlb
dec
insb
sarb
dec
aad
je
lock
ficoml
or
dec
and
pop
jns
and
add
dec
jge
add
add
leave
shll
add
sti
insl
jecxz
sbb
mov
icebp
add
movsl
add
das
sub
xor
add
add
repnz
bound
dec
out
xor
pop
int
ds
dec
cwtl
test
cmp
not
ja
out
pop
sub
xchg
xor
cmp
push
mov
mov
cltd
lea
cmp
jns
fimull
lret
mov
ja
ljmp
subb
loopne
jns
imul
mov
cmp
xor
decl
scas
inc
push
dec
add
add
pop
add
cmpsb
sub
ljmp
mov
aam
add
adc
sahf
sub
xor
push
fisttpll
xchg
inc
fstp
pop
add
dec
add
es
sbb
aaa
jmp
lcall
pop
scas
mov
add
and
add
pop
mov
loop
push
fadd
es
jecxz
or
add
pusha
jmp
push
add
repnz
cmp
add
imul
adc
imul
jle
cmp
push
gs
jmp
or
and
lret
lods
mov
mov
dec
cmp
pop
pushf
pmullw
jb
into
add
xor
inc
mov
mov
fistpl
mov
mov
push
push
int3
mov
push
inc
nop
add
cmp
jmp
xor
sarl
mov
gs
mov
outsl
push
push
jp
faddl
pop
cmp
mov
push
push
movl
ss
pushf
xor
lcall
xchg
mov
jmp
push
xchg
xchg
fsub
sbb
add
in
and
jmp
push
insb
pop
or
sub
ret
add
dec
cmpsb
cmpsl
or
inc
or
sti
es
sahf
cmpsb
shrb
imul
and
dec
jb
aad
jae
cmc
clc
or
add
inc
and
add
mov
inc
push
sti
add
sbb
daa
fisubrl
add
sub
inc
xorb
call
jne
or
lds
add
jno
rorl
and
inc
sbb
push
out
push
mov
pop
cli
leave
add
movsl
and
fldl
test
addr16
add
ljmp
loopne
sub
xchg
sub
mov
ret
daa
xor
inc
ficompl
jo
ret
mov
mov
xlat
push
push
loop
push
add
xchg
pop
adc
cld
out
sbb
cmpsl
add
add
mov
and
cmp
push
add
push
xor
fstl
mov
adc
xchg
das
mov
or
pop
pushf
add
jae
repnz
dec
repz
lods
sahf
fucom
ljmp
pop
add
test
xchg
cld
icebp
insl
ret
xor
mov
sub
cmp
push
loop
jno
imul
xchg
test
cmc
je
inc
push
mov
lss
jl
add
push
sub
roll
cmc
jmp
sahf
xchg
push
das
cmpsl
or
mov
ja
cld
add
pop
mov
add
inc
xchg
pop
imul
andnps
outsb
pop
lret
mov
cltd
adcl
add
cwtl
pusha
aas
push
adc
mov
jecxz
cmp
add
shlb
add
jecxz,pn
push
pop
and
sub
sbb
shrl
sbb
dec
push
add
push
rolb
daa
mov
cmpsb
push
add
and
sti
mov
add
rolb
xchg
in
hlt
add
add
leave
add
push
push
and
xchg
psubq
out
into
rclb
add
popf
ljmp
mov
popa
fwait
xchg
xchg
enter
cltd
lods
mov
aas
data16
push
cli
push
push
inc
push
popl
into
xchg
jp
add
ret
cmp
sub
add
mov
and
or
ficoms
mov
xchg
push
mov
or
jge
jne
repz
add
add
rclb
ljmp
mov
test
icebp
addr16
adc
push
add
pop
pop
push
add
sbb
add
jbe
xchg
sti
shll
cmp
add
into
jo
pusha
cmp
fimuls
mov
mov
push
shrl
mov
dec
add
xchg
dec
add
add
fs
daa
shrb
xchg
fstl
add
xchg
add
bound
sahf
cld
enter
and
push
mov
mov
ret
lods
mov
jno
andl
sahf
add
fldl
nop
inc
add
push
into
jp
add
lods
add
mov
inc
inc
outsl
jl
mov
dec
sub
and
jmp
in
mov
mov
sub
imul
push
mov
or
jnp
inc
inc
jb
jecxz
fmul
outsl
nop
mov
sub
ffree
ret
inc
push
mov
popa
arpl
mov
aas
dec
lret
int3
sub
dec
call
add
gs
push
push
inc
jmp
dec
sysexit
imul
jg
scas
addr16
in
ljmp
cmc
mov
inc
pop
push
mov
sahf
repz
in
adc
xchg
add
sbb
addl
mov
hlt
out
cmp
adc
lds
js
cmc
cmp
js
add
mov
or
lret
or
jnp
scas
arpl
repz
scas
add
js
mov
out
jb
xchg
jmp
add
dec
cwtl
push
ljmp
sbb
push
lods
mov
inc
mov
and
cmp
pop
dec
lahf
pop
and
pusha
mov
sbb
les
stos
mov
xor
add
movsl
xchg
push
data16
arpl
js
add
push
outsl
mov
cli
push
cmp
adc
sub
stos
dec
mov
shrb
push
outsl
xor
xchg
arpl
cmc
xchg
add
or
sahf
arpl
xchg
rclb
orb
mov
repz
rorb
add
pop
xchg
es
mov
add
cmp
add
add
xchg
jle
push
add
cmpb
add
mov
or
bound
jge
cs
jno
push
cltd
add
add
jecxz
jl
rorl
add
enter
fcompl
pushf
adc
popa
xchg
adc
jae
push
popf
in
add
rorl
pop
imul
push
test
mov
cmp
ret
fs
xchg
lods
jmp
sbb
push
xchg
mov
cmp
xchg
insl
int
loope
push
xchg
xchg
decl
cmp
sti
out
aas
fsubr
sbb
add
adc
add
mov
mov
test
cmp
pushf
inc
add
pop
add
or
xor
mov
negb
data16
mov
xchg
jne
push
testb
outsb
dec
mov
sub
dec
jo
pop
jl
inc
movsb
jp
jge
add
movsl
cli
mov
ret
lahf
ss
xchg
mov
push
arpl
mov
daa
and
cs
idiv
push
stc
test
inc
popa
pop
xchg
lods
inc
add
jl
sahf
loope
std
ljmp
add
add
and
pushf
psrld
adc
les
je
add
adc
xchg
xchg
pushf
insb
sbb
out
mov
push
pop
inc
jbe
clc
cli
clc
imulb
cmp
inc
adc
add
pop
pushf
and
and
popa
mov
mov
fnstsw
push
cmpsb
jne
mov
ret
add
xchg
and
arpl
jnp
lret
imul
sbb
push
add
sahf
jb
pop
lods
arpl
icebp
add
nop
mov
sbb
mov
lods
mov
xor
sbb
sbb
add
test
inc
jnp
shll
mov
out
ror
sbb
jne
in
gs
cmp
mov
push
add
test
cmp
dec
jae
mov
mov
add
dec
jb
imul
push
pushf
add
lds
jg
add
pop
or
jle
mov
sub
lahf
mov
cmp
std
sbb
jmp
push
stc
pop
push
pop
cmp
mov
loopne
cmp
enter
lahf
aaa
jbe
pop
mov
push
and
and
mov
mov
xor
xchg
bound
icebp
lods
inc
lret
push
xchg
ret
subl
or
test
add
aad
aaa
pop
outsl
push
mov
push
jecxz
cltd
test
jo
adc
jne
push
dec
mov
popa
add
sub
roll
mov
add
sub
add
clc
insb
xor
stos
xchg
or
mov
sbb
mov
sbb
dec
cmc
xchg
iret
add
rcl
dec
mov
testl
jmp
mov
fcmovnbe
dec
push
imul
sarb
xchg
gs
dec
pop
jno
add
cs
add
pusha
dec
data16
arpl
lods
and
lods
add
push
outsl
pop
cmc
insl
ja
icebp
sahf
adc
jns
mov
mov
jb
and
and
mov
flds
fnstenv
mov
or
add
cmp
int
loope
ret
mov
lcall
roll
in
or
jl
dec
shrl
pop
push
imul
aaa
gs
add
push
test
add
shrb
jp
add
jmp
or
fst
into
add
js
xor
insl
mov
inc
cmp
and
je
add
or
xor
push
inc
fbstp
add
bound
pusha
cmp
fsub
leave
imul
scas
in
sbb
sbb
call
push
scas
insb
adc
ljmp
stos
sbb
lock
mov
add
sub
test
ss
test
sbb
add
mov
sub
sahf
add
push
repnz
popf
mov
add
addl
test
ljmp
pop
push
or
add
stos
aas
push
shl
mov
or
nop
add
mov
incb
stc
add
and
clc
movsl
add
add
sbb
jmp
int3
or
push
sub
ds
int3
addl
xor
mov
mov
je
xor
or
mov
xlat
push
or
jno
cmp
add
push
cmc
test
daa
jno
add
mov
fldenv
stos
cmp
mov
out
mov
ret
xor
inc
ror
adc
mov
shlb
mov
stos
ret
fdivl
mov
mov
and
xchg
xchg
xchg
add
cltd
insb
xchg
cmp
add
push
inc
adc
and
xor
inc
or
sub
jg
and
or
dec
cli
add
test
jbe
add
fmuls
pop
mov
pop
xchg
push
add
int
and
add
sahf
adc
fsubs
xchg
inc
cmc
cld
add
cltd
sub
test
js
hlt
lods
in
cmp
xchg
lods
pop
push
push
xchg
or
inc
jns
lods
cli
add
xlat
push
mov
add
add
sbb
pop
in
xchg
sbb
add
add
pop
test
in
xor
cmp
cmp
cmp
scas
jge
or
xchg
fadds
scas
or
add
cld
imul
jno
clc
add
popl
mov
pop
and
add
mov
add
inc
mov
mov
lds
fadds
and
adc
movsl
imul
fists
call
push
add
outsb
adc
ds
add
pop
jns,pn
cmpsb
xor
fsubrl
add
mov
sub
xor
inc
jge
div
fcomps
rcll
insl
fstpl
mov
mov
sbb
push
dec
sub
faddl
pusha
nop
in
pushf
lods
add
push
out
mov
mov
jle
jno
adc
jns
add
jmp
and
sbb
add
ss
push
push
das
pop
out
or
mov
clc
xchg
add
mov
xchg
push
decb
movsb
or
and
out
xchg
popa
add
movsb
mov
mov
bound
es
data16
jle
inc
sbb
cmp
cmpsb
add
add
lock
push
jle
jmp
int3
sbb
mov
jge
insl
inc
xor
sub
sarb
add
jbe
pop
and
add
inc
adc
add
repz
add
mov
ds
fnclex
xor
hlt
pop
cmpsb
jne
lds
bound
movsb
bswap
dec
add
sub
out
sti
fnstcw
add
mov
scas
cmp
mov
push
cli
add
add
pop
add
scas
orl
scas
data16
lahf
movsb
dec
int3
jns
inc
jl
pop
mov
add
das
add
xor
xchg
ljmp
or
clc
jne
xchg
cmp
dec
add
adc
fcmove
sub
and
rorl
imul
and
mov
inc
jo
push
add
adc
and
and
mov
xchg
aaa
pop
lret
sarb
clc
add
add
fwait
add
adc
sahf
add
add
dec
add
cwtl
jns
mov
xor
fldl
fs
xor
adc
xor
dec
push
mov
imul
xor
in
outsl
das
or
rolb
add
das
dec
dec
xor
in
dec
add
inc
or
in
sub
dec
cmc
push
add
leave
mov
js
mov
xor
add
cmp
std
sbb
dec
pop
push
xor
loop
adc
add
mov
jne
mov
cmc
movsl
add
cmp
or
daa
rclb
xchg
add
jne
fiaddl
mov
lds
mov
add
ss
cs
mov
inc
inc
lcall
adc
adc
fadd
in
sbb
std
mov
stos
pop
add
mov
lea
push
sbb
and
xlat
adc
jg
or
add
inc
leave
add
mov
call
xchg
mov
inc
je
or
xchg
in
test
or
xchg
sbb
add
add
daa
add
xchg
pop
lea
adc
pop
testl
mov
mov
jmp
addr16
cmp
sub
xchg
cli
nop
mov
xchg
mov
adc
add
enter
imul
iret
xchg
mov
cmp
pop
fcoms
mov
sub
out
sub
sub
sub
sub
add
cs
pop
outsb
loope
push
jmp
inc
pop
add
dec
add
add
and
push
sbb
jns
cld
popa
inc
sbb
popa
dec
pusha
faddl
and
xchg
ljmp
jg
and
push
push
ja
push
jp
cmp
test
jns
dec
add
add
ljmp
enter
imul
ret
add
test
dec
sub
add
push
test
aad
aad
jp
xchg
jnp
push
loop
fstpt
cli
inc
xor
out
add
and
into
fists
subb
jp
aad
in
cltd
popa
jno
fdivr
push
mov
pop
cmpsl
jnp
add
xchg
and
jo
hlt
add
mov
mov
sbb
sbb
cmc
aad
or
fsubs
cltd
addl
add
es
cmp
mov
addr16
mov
add
mov
push
dec
sbb
xor
dec
rolb
popf
test
cmp
jo
outsl
ja
cmp
sbb
push
sti
mov
add
xchg
test
addr16
lahf
xchg
mov
add
shl
xlat
adc
add
bound
jo
add
loopne
lcall
mov
jbe
pop
aaa
sarb
mov
add
test
xor
mov
pop
nop
or
adc
add
mov
rolb
add
dec
arpl
daa
out
add
add
in
sahf
mov
addl
mov
neg
lret
sbb
xor
add
sbb
aaa
cmp
ss
out
sahf
mov
inc
stc
or
jns
std
xor
out
add
lods
lcall
mov
sub
add
call
fwait
xor
in
mov
add
orl
cmp
ja
lret
aas
iret
xchg
stos
add
push
pop
cld
cmp
fisttpl
xchg
dec
cmp
push
inc
jl
xchg
mov
sarl
and
and
adc
int3
push
mov
add
faddl
push
mov
sbb
add
aad
adc
or
es
jg
ret
imul
push
jp
sbb
call
add
enter
sub
out
add
pop
add
mov
or
testb
mov
push
xor
add
add
je
inc
or
add
shrb
and
das
push
inc
and
and
add
mov
sbb
inc
or
sti
xor
push
lret
push
lcall
or
aas
jnp
cltd
cmp
lods
adc
jle
sub
hlt
push
pop
rcll
xchg
sbb
jns
pop
mov
lock
lods
in
add
call
pop
icebp
add
andl
add
mov
inc
add
xor
sar
iret
cmp
out
cli
xchg
pop
add
jb
and
adc
or
push
push
mov
and
aam
es
cmpsl
sub
dec
lds
sub
add
add
or
and
cmpsl
fdivrl
lods
fldenv
fldt
add
pop
add
xchg
in
cli
mov
xor
hlt
add
leave
dec
scas
ret
xor
add
and
mov
mov
adc
xor
ret
sub
add
mov
ljmp
data16
aaa
js
std
mov
popf
add
cltd
mov
push
movsb
xchg
and
stos
pusha
xor
jne
xchg
jl
sub
sbb
test
add
add
adc
add
orl
mov
push
aam
adc
notl
push
cmc
mov
fwait
cmc
arpl
inc
xchg
repnz
aam
inc
xchg
pop
js
xor
scas
aam
xchg
repnz
ret
add
fmuls
pop
loope
repz
add
xchg
in
or
or
sbb
dec
dec
imul
icebp
addl
out
mov
pextrw
mov
adcl
leave
nop
jg
cld
mov
jecxz
add
or
daa
push
imul
push
lods
jns
xchg
dec
mov
fsts
dec
nop
mov
sbb
pop
out
sub
testl
es
push
cmp
test
push
sub
mov
push
jnp
call
mov
add
iret
jnp
push
push
mov
mov
out
hlt
cmpsb
lds
and
and
push
fnsave
add
gs
sbb
push
add
ja
and
mov
mov
or
jne
daa
into
xor
test
xchg
sub
stos
rcl
and
add
add
push
mov
pop
sbb
mov
jnp
dec
add
add
cmpsl
fists
aas
add
mov
and
add
mov
loopne
push
and
pop
je
rclb
sbb
stos
add
inc
out
jmp
dec
shl
nop
popa
add
mov
cmp
nop
dec
shrl
jnp
pop
sub
lahf
scas
add
push
mov
xchg
cmpsl
dec
repnz
mov
cmp
add
orl
mov
daa
insl
xchg
push
jecxz
adc
xchg
jle
sbb
xchg
add
add
xor
mov
xchg
pop
pusha
movsl
enter
les
mov
cmp
mov
inc
outsl
cmc
push
add
or
mov
shrb
je
cs
xchg
lahf
loope
mov
inc
xor
outsb
and
and
add
inc
mov
mov
mov
mov
mov
aas
ret
stos
test
inc
movb
call
cmpsl
enter
mov
lock
xchg
mov
call
adc
pop
pushf
xor
sbb
sub
mov
and
jmp
mov
mov
mov
popf
sbb
cmp
stos
lods
sub
rcll
add
xlat
push
xor
pop
mov
push
xlat
mov
add
mov
cld
jae
add
xor
ja
pop
js
add
pop
add
push
push
leave
xchg
mov
cmp
jecxz
sbb
add
cmp
ljmp
and
imul
adc
cli
dec
bound
add
repz
hlt
mov
in
push
jb
fs
add
lret
movsl
jl
outsl
dec
sub
push
clc
mov
push
add
add
inc
jne
add
into
fstpl
push
lret
cmp
outsb
and
xlat
testb
lea
jnp
or
dec
data16
jnp
push
popf
push
fcoms
add
jns
jg
jp
add
cli
add
push
aaa
ss
or
out
cltd
jle
cmpsb
or
jno
add
ret
outsb
pcmpeqw
pushf
pop
neg
cs
sbb
sahf
add
out
movsb
les
add
inc
xchg
sub
jp
add
add
pop
xlat
aaa
xor
xlat
sahf
and
xchg
movsb
add
mov
push
inc
add
je
cmp
cwtl
cmp
add
adc
mov
call
jo
and
repz
rcr
int
push
push
jae
jno
mov
mov
add
sbb
xor
add
xor
add
pop
jp
in
cmpsb
sarb
mov
pop
pop
cmp
gs
sub
push
xor
push
pusha
or
pop
in
jle
cmp
sbb
jl
add
test
or
add
mov
je
add
inc
xor
lcall
xorw
lock
scas
jecxz
int
jl
ret
adc
cld
mov
scas
repnz
dec
add
loop
add
in
add
push
cmp
cs
and
jle
sti
jp
xor
jp
or
iret
add
sub
hlt
xchg
dec
add
cltd
add
xor
cmp
jbe
loope
xchg
popa
add
lcall
pushf
cli
and
or
xorl
popf
jb
clc
inc
add
mov
cmpb
dec
push
shrl
add
cltd
fwait
push
and
push
shr
sub
mov
sbb
mov
jge
imul
inc
pop
cmp
ror
les
sbb
mov
and
mov
lock
xor
add
lock
adc
mov
sbb
jmp
jl
pop
add
cltd
add
shll
add
sub
inc
jle
daa
inc
popf
pop
andl
outsb
and
sbb
adc
popa
jg
add
pushf
mov
jl
add
mov
add
push
jg
leave
out
stos
into
and
adc
jnp
lcall
lods
pusha
out
cwtl
or
push
lods
pop
add
inc
sbb
push
push
pop
dec
sbb
addr16
or
movsl
imul
mov
pop
push
cmp
loopne
adc
or
inc
repz
hlt
loopne
adc
bound
xchg
dec
fldl
fadd
sbb
ret
pop
call
lret
mov
mov
jo
add
sub
scas
std
ja
push
in
jle
jbe
pusha
sarb
dec
unpcklps
hlt
push
add
xor
add
lods
dec
jmp
sub
testb
cmp
insb
scas
xor
nop
neg
add
mov
sub
mov
add
dec
loop
xchg
in
filds
in
adc
repz
mov
sbb
loop
xchg
outsl
or
pop
and
test
outsl
call
lds
outsb
jnp
jnp
dec
mov
sub
xchg
dec
inc
inc
add
push
cmp
mov
aas
add
add
mov
roll
sub
sub
sub
ljmp
test
mov
sub
mov
test
cs
xor
aaa
sbbb
pop
fsubs
xor
add
es
inc
mov
and
mov
inc
loop
inc
sub
xlat
pop
jns
enter
ficoms
cmc
add
add
dec
add
pusha
add
arpl
inc
pmullw
mov
add
pop
sti
mov
int
je
loope
pushf
lds
popf
add
add
and
inc
fisttpl
adc
outsl
cmp
cs
adc
int
adc
scas
add
jb
adcl
into
cmp
imull
sbb
xchg
add
pop
bound
mov
imul
gs
add
or
repnz
add
sub
mov
faddp
jmp
xor
movsl
scas
outsb
je
cmp
xchg
mov
xchg
jmp
cwtl
pop
jle
cmp
jmp
imull
mov
push
fimull
jno
pop
add
sub
fnstcw
jbe
movsl
daa
add
je
xor
xchg
add
aaa
xor
jnp
cmp
add
and
adc
mov
push
in
sti
adc
movsb
xor
xlat
push
jae
push
push
out
insb
in
push
sbb
repz
mov
addb
sbbb
jns
pop
add
pop
adc
mov
add
cld
jnp
inc
add
ljmp
enter
sti
add
cmp
test
shl
enter
rorb
popl
xor
push
cmp
pop
test
xchg
pop
dec
xchg
test
push
popa
mov
sub
and
lcall
cs
push
out
addb
lock
jg
add
inc
daa
add
scas
mov
test
test
enter
pop
add
dec
mov
pushf
and
aaa
dec
jmp
xchg
lea
cltd
inc
lret
out
arpl
mov
rcrb
add
call
jnp
jns
add
and
stos
jo
sub
mov
inc
sub
cmp
aaa
ss
test
mulb
pushf
jnp
lods
pop
call
lcall
pop
stos
lds
clc
mov
push
insb
add
mov
fwait
cmp
push
jnp
add
mov
mov
push
movsl
roll
mov
push
add
loopne
jnp
clc
subb
movsl
gs
mov
inc
cltd
xchg
dec
or
data16
popa
and
sub
test
lahf
jns
jne
add
mov
stos
jnp
mov
mov
jle
mov
add
or
dec
mov
lods
adc
int
xor
mov
orb
mov
cmpl
std
xchg
jns
or
push
sbb
push
add
leave
mov
sahf
add
mov
ret
aaa
xor
adc
imul
js
jnp
add
int3
xchg
jp
add
cmp
rorb
clc
in
mov
mov
mov
std
addr16
popf
mov
cmp
or
mov
inc
mov
mov
push
jmp
jp
and
mov
mov
pop
ds
lock
inc
jb
sbb
xor
sbb
inc
mov
push
mov
push
mov
jge
push
pop
xchg
add
jbe
fisubl
loope
add
or
add
stos
add
and
pop
adc
pop
mov
or
mov
ret
stos
add
adc
sub
stc
pop
or
ljmp
out
xchg
pusha
add
and
mov
es
lods
xchg
bound
js
xor
repz
jl
lahf
xor
daa
jg
dec
add
mov
mov
arpl
and
sub
add
jp
add
add
mov
mov
movsb
xchg
jl
add
dec
pop
insb
add
jmp
mov
test
add
xchg
sbb
mov
popf
lahf
test
movsb
pop
lcall
or
adc
push
add
insb
add
mov
mov
scas
and
scas
add
jnp
jle,pt
add
jg
or
sarl
in
mov
mov
adc
std
div
add
dec
push
pop
popf
add
fsub
pushf
add
pushf
fs
inc
lcall
jb
adc
sub
aad
pop
arpl
jne
xchg
cmp
aam
add
mov
jbe
insl
jp
fisttps
ss
lahf
add
inc
mov
add
test
scas
cmp
pop
dec
add
mov
gs
scas
movsb
add
pop
add
ret
cmpsl
mov
std
iret
add
movsl
bound
mov
jl
rcll
inc
sbb
inc
push
jmp
adc
dec
roll
cmp
add
xor
jne
scas
push
adcl
xor
gs
xchg
dec
add
ret
and
movsb
push
clc
mov
sarb
in
xchg
fs
or
or
jge
add
dec
addb
inc
lcall
mov
popa
rcll
mov
daa
dec
fs
test
fsts
movsb
adc
xlat
cmp
insb
cmp
dec
add
mov
adc
push
testl
cld
dec
mov
sbb
or
push
add
xchg
jno
add
sub
popf
add
das
pop
sti
popf
ret
rcll
mov
leave
add
sbb
add
out
sbb
je
add
movsb
xchg
shl
stos
inc
lcall
into
das
push
in
iret
sbb
pop
lock
add
mov
das
lret
scas
repz
xchg
pop
mov
into
add
insb
data16
jns
add
jo
sbb
lods
mov
int3
leave
stos
cmc
push
mov
push
pushf
fmull
in
cmp
add
loopne
push
je
add
dec
add
push
push
add
mov
fwait
sbb
xchg
sub
sbb
add
inc
mov
test
xor
insl
ljmp
add
jmp
add
pop
loop,pn
add
verw
cmc
cmp
xchg
mov
mov
sbb
add
pop
or
inc
sbb
mov
push
stos
fbstp
out
add
push
add
push
call
add
add
adc
ret
stos
add
fadds
sub
ss
add
sbb
ds
sub
dec
bound
mov
add
loop
fwait
mov
ds
add
fsubs
mov
fwait
xlat
loop
xchg
sahf
inc
sub
xlat
mov
les
out
jae
xchg
push
int
push
loopne
and
add
jecxz
jmp
jb
lret
addb
sub
push
ss
sbb
mov
les
and
jle
test
cmp
push
cmpsl
add
sahf
aam
movsl
add
jnp
push
inc
xlat
in
jg
add
imul
push
stos
nop
dec
adc
add
add
std
mov
nop
add
adc
stos
stc
lcall
xchg
jg
jae
add
mov
push
xlat
add
sub
pop
int3
mov
lret
repnz
inc
data16
popf
shlb
mov
dec
cltd
addr16
xor
add
sbb
add
xchg
lcall
inc
mull
xor
int
xor
jp
mov
rolb
int
mov
pushf
ja
fildl
and
push
push
add
clc
test
add
pop
jmp
pop
mov
mov
and
xchg
adc
add
fwait
or
lock
cmp
mov
and
mov
xchg
sbbl
ljmp
sub
add
js
sub
cmp
das
jnp
and
imul
mov
and
hlt
mov
stc
xor
mov
mov
shl
addl
xchg
add
ja
lea
adc
mov
mov
ljmp
testb
jge
in
jg
in
cmpl
pop
xchg
sub
and
mov
push
adc
subl
push
jb
addl
lahf
out
lret
inc
push
xchg
jecxz
lods
inc
add
pop
add
mov
add
ljmp
xor
push
mov
sub
add
movl
push
sahf
jae
cmp
sub
out
mov
adc
and
xor
add
lods
add
mov
mov
sub
test
jae
add
rorl
cmp
add
test
test
mov
lock
std
lods
mov
add
mov
fprem
adc
add
into
out
les
add
add
aam
and
dec
cmpsb
push
sub
rcrb
inc
out
nop
add
cs
add
add
push
cmp
rclb
and
xchg
push
jecxz
pop
jg
add
iret
or
aas
add
sbb
xor
mov
in
out
scas
push
mov
pop
mov
movl
mov
and
add
jmp
add
mov
add
das
int3
sbb
rep
dec
mov
cmp
insl
dec
out
data16
adc
mov
bound
and
jno
bt
adc
mov
push
cwtl
dec
imul
or
call
sub
sbb
jnp
cltd
fdivl
ret
xor
ss
push
jp
jnp
pop
dec
lds
ret
and
repz
dec
add
add
add
loopne
push
sbb
aam
dec
mov
or
mov
fs
imul
xchg
ja
push
add
lock
fsubs
outsl
pop
push
cwtl
push
cmp
cmp
add
test
aas
outsb
sub
test
sbb
sub
sub
add
add
ret
jns
movsb
push
fiaddl
test
repz
push
mov
lock
out
es
mov
xchg
jl
inc
mov
fmulp
in
dec
xchg
add
push
cltd
or
fwait
incl
add
xorl
add
add
pop
arpl
ljmp
sub
fdivl
ret
int
div
add
cmpsl
xchg
call
in
inc
add
push
add
mov
pusha
and
scas
adc
cmpsl
out
sub
lds
dec
push
push
add
add
or
xlat
outsb
add
and
arpl
pop
in
stc
sub
daa
cmpsl
inc
scas
arpl
clc
jbe
inc
dec
in
lahf
cltd
jo
mov
mov
jp
xorl
ljmp
cmp
xor
or
addl
lods
ror
add
add
cmp
sbbl
mov
inc
clc
xchg
cmpsb
mov
add
push
insl
dec
sbb
xchg
jle
and
add
and
addl
mov
mov
nop
add
push
push
dec
pop
cld
lret
push
dec
insb
xchg
and
movsl
add
cltd
add
add
gs
or
idivl
ret
push
loope
and
jp
enter
add
sub
ljmp
repz
add
mov
sub
imul
ds
cmp
je
xor
dec
mov
add
lcall
xchg
sub
cld
mov
icebp
cld
inc
in
or
pandn
adc
leave
add
cmpsb
inc
adc
or
gs
push
push
mov
addb
sbb
adc
in
pop
mov
mov
jns
mov
mov
mov
add
adc
pop
pop
ljmp
add
aam
pop
add
cli
incl
adc
jl
add
add
inc
and
mov
mov
mov
fidivl
in
fs
stc
addb
pop
clc
or
cmpb
xchg
jecxz
imulb
or
stos
xor
sbb
add
adc
shlb
sbb
sub
sub
cmp
out
mov
adc
push
popl
sub
adc
add
jg
dec
arpl
dec
bound
xchg
push
push
js
mov
and
popf
inc
hlt
jae
dec
xchg
divl
push
dec
pop
into
mov
xchg
stc
add
aam
dec
cmpsb
hlt
add
outsl
mov
mov
fwait
mov
add
mov
sub
packuswb
inc
add
sbb
push
in
out
add
adc
or
or
scas
xor
sbb
mov
adcl
sbb
int3
call
inc
hlt
cmp
pop
push
pusha
xor
repnz
add
add
add
movlps
jbe
adc
gs
jnp
push
gs
fcomps
repnz
out
mov
js
adc
mov
push
inc
out
and
push
cmp
nop
testb
cmp
ds
addl
imul
lret
inc
or
push
mov
mov
sub
pop
add
add
movsb
int3
add
icebp
and
xor
add
loopne
add
outsb
dec
push
inc
lods
push
adc
dec
in
scas
lds
sub
loope
cwtl
dec
test
dec
cmpsb
rcll
add
sbb
add
add
dec
std
add
cmp
outsb
insb
in
jnp
fists
or
mov
test
sbb
pop
scas
inc
daa
add
insb
mov
scas
lcall
adcl
inc
xlat
sbbb
add
ja
and
jg
xor
add
leave
push
insb
add
push
xor
mov
nop
xchg
xchg
add
inc
ljmp
jge
push
and
leave
add
loopne
lea
sub
lahf
pop
mov
add
imul
or
clc
add
add
pop
clc
inc
int3
pop
adc
out
mov
pusha
loop
shrl
add
add
push
shlb
jl
mov
push
popa
dec
addl
mov
pop
int3
cmp
fadd
ret
loop
lcall
pop
add
roll
sbb
fsubrs
pop
add
aad
shll
aad
add
jne
add
lea
popa
cld
shrl
add
loop
or
jns
push
mov
jnp
xchg
aas
in
test
or
shr
add
out
xor
sbb
dec
sub
and
add
mov
js
add
ret
push
add
movsl
mov
push
add
or
add
xor
push
xor
faddl
cmp
or
add
ljmp
mov
add
nop
call
decl
leave
add
add
pop
add
mov
in
movsb
and
in
add
in
mov
sbb
nop
and
fisttpl
pop
cmpb
enter
scas
aam
cmp
mov
inc
pop
and
loop
jl
cmp
inc
jns,pt
dec
lds
mov
decb
insl
popf
std
xor
xchg
movsb
push
fisubrl
mov
addr16
xchg
cmp
xlat
fcompl
add
lahf
int3
lahf
and
adcb
mov
xchg
xorb
leave
hlt
insb
add
add
bound
jno
in
cmp
aas
add
out
push
mov
xchg
push
les
cmc
dec
jnp
fisubl
sub
rorb
lods
lret
testb
icebp
pusha
sub
cmp
add
xchg
mov
mov
fists
and
sahf
or
fs
pop
push
inc
shlb
and
or
add
sahf
mov
sarl
aam
out
das
dec
sbb
pop
arpl
pop
test
add
out
mov
or
shrl
insl
dec
ds
daa
mov
cmp
xor
xchg
mov
roll
out
sbb
jb
pop
xor
movsl
cmp
jecxz
test
and
clc
mov
inc
push
or
ss
xor
pop
rcrb
mov
and
shlb
pop
lock
add
leave
lcall
je
add
dec
scas
dec
or
mov
stos
push
adc
lods
inc
sbb
add
aad
mov
insb
loopne
adc
add
pop
inc
xchg
pop
insb
loope
cmp
xchg
insl
movzbl
xchg
mov
add
mov
out
int3
stc
add
addb
pop
cmpsl
adc
shrl
pop
sub
test
lds
addb
or
lret
add
push
imul
push
add
sahf
inc
adc
scas
pushf
mov
add
add
jne
mov
jp
mov
mov
jle
leave
call
dec
dec
fiaddl
cmc
add
mov
ret
push
cs
cwtl
lods
out
push
cld
call
add
add
mov
sub
push
push
stc
je
or
inc
xor
imul
test
mov
out
cs
pushf
pop
and
add
xor
je
xchg
inc
adcb
xchg
push
lahf
cmp
lods
pop
add
xor
mov
mov
lcall
and
mov
sub
mov
rcl
sub
cld
aam
iret
mov
and
add
mov
fucom
mov
jae
push
js
lods
push
les
insl
add
lahf
add
testl
mov
test
mov
mulb
cmp
sub
imulb
push
aad
add
rcrb
xchg
dec
imul
xor
in
sub
sbb
stos
add
pop
push
add
cmc
add
pushf
out
pop
sbb
iret
push
hlt
xchg
pop
int3
mov
mov
mov
mov
sub
adc
stos
add
cmp
cmp
outsb
aas
cmp
cmp
add
adc
xchg
sub
inc
pop
scas
jmp
add
push
outsl
pusha
dec
jp
add
add
subl
or
dec
loope
add
mov
outsb
ja
add
les
ja
ret
mov
popa
sti
add
lods
js
mov
add
enter
mov
or
sbb
cmp
fcoms
xor
lcall
in
imul
and
les
mov
or
cmpsl
sbb
xchg
pop
jne
add
push
inc
or
insb
pop
pop
add
enter
jge
add
add
ds
add
jl
popl
dec
nop
out
sbb
push
push
add
or
div
jge
push
sub
repz
xchg
loope
mov
adc
add
loope
xor
xchg
xor
cli
lahf
inc
sbb
add
pop
sub
mov
aaa
push
xchg
push
fwait
xchg
and
jo
das
add
push
cmpsl
call
jecxz
mov
add
mov
jne
nop
out
mov
outsb
cld
add
lahf
add
sub
jmp
cwtl
add
movb
scas
adc
in
dec
mov
push
add
jge
rcrl
inc
add
add
cltd
xor
add
neg
or
scas
or
and
stos
jb
fisubl
add
das
adcb
imul
cltd
add
imul
push
sub
ret
das
shll
lods
leave
pusha
ss
xadd
cmp
jge
data16
fisttps
add
add
sub
outsb
add
xchg
cmp
mov
sub
and
sahf
sub
add
jae
pop
in
mov
pop
sbbl
jo
mov
mov
and
aam
es
cltd
jmp
adc
xchg
mov
adc
mov
add
and
or
add
add
in
mov
mov
lret
ret
inc
xor
mov
cmp
pushf
jecxz
pop
fisubrl
sub
xchg
pop
imul
lahf
sbb
add
add
imul
pop
rcrb
jb
cwtl
ss
jno
lods
inc
out
mov
loopne
insb
sub
cs
mov
test
mov
pop
pop
addb
mov
popf
push
into
adc
xchg
xor
in
cmc
lret
add
cmp
in
jle
mov
add
jmp
test
stc
test
sbb
and
mov
or
inc
add
sub
xor
mov
add
jle
fmuls
mov
xchg
sbb
cmp
mov
sub
add
xor
xchg
cmp
pop
jnp
lret
push
nop
and
ja
jns
mov
mov
push
cmp
jp
or
arpl
mov
dec
adc
add
inc
fbld
jo
ds
mov
xchg
dec
fldcw
sbb
jl
add
adc
mov
add
cmpsl
fildll
cmp
mov
add
dec
inc
lret
dec
push
add
push
add
les
mov
mov
add
mov
sbb
jle
js
testb
in
add
add
add
hlt
cwtl
mov
add
push
addr16
mov
aas
out
add
add
jl
adc
xchg
add
inc
aaa
or
jne
sub
add
rcrb
arpl
popl
scas
fiaddl
lea
adc
sbb
xor
pop
add
dec
out
xor
jle
and
push
ds
cld
into
testl
mov
mov
cmp
mov
les
xchg
xchg
mov
lret
out
incb
add
add
adc
pop
cmpl
push
cld
test
push
lock
add
sub
adc
add
dec
rcl
xchg
push
in
stos
or
in
cld
ljmp
pop
daa
lret
xor
lcall
inc
je
or
in
psllq
xor
clc
jbe
jl
add
sbb
in
loopne
lds
insl
imul
mov
pop
inc
xor
testl
loopne
es
in
inc
out
dec
test
movl
add
iret
add
pop
xor
add
add
and
jmp
xchg
mov
rcl
lods
cli
lcall
mov
add
cmp
adc
sbb
add
pop
das
pop
inc
cld
clc
cmc
ljmp
pop
inc
arpl
jne
cmp
mov
push
fwait
or
stos
mov
jns
add
add
test
add
test
addb
addb
sub
testl
inc
xlat
add
push
in
inc
ja
cmp
fdiv
xchg
push
xor
push
add
dec
adc
daa
push
dec
xlat
push
scas
test
add
add
gs
mov
outsb
add
xchg
in
sub
testl
loope
pop
xor
pushf
ret
mov
repz
and
movsb
pop
je
in
push
inc
mov
add
outsl
cli
scas
push
dec
test
dec
js
and
inc
ds
add
out
addr16
testb
push
push
stc
add
cmpsb
inc
imul
lods
jmp
add
imul
or
adc
sti
push
outsb
int3
xchg
fimull
push
testb
shl
xor
push
mov
lods
cltd
jecxz
push
mov
add
ja
sbb
pop
add
iret
fdivrl
xor
cmc
xchg
into
xchg
mov
add
jnp
emms
popfw
test
sti
andb
jae
iret
fxch
arpl
adc
pop
add
rcll
mov
jnp
pop
enter
ds
cmc
fcmove
jae
rclb
xchg
xchg
test
add
mov
and
sbb
test
in
xchg
pop
popa
imul
pop
arpl
test
pop
std
loop
jns
movsb
add
repz
insl
or
jle
sub
hlt
add
or
inc
in
and
mov
mov
jo
rcll
es
sbb
sbb
or
or
fisubl
or
inc
jns
fisubrs
loop
xchg
sub
adc
lock
lock
fldl
sbb
add
shlb
lock
movsl
sahf
inc
or
fnstcw
add
stos
addb
js
mov
shlb
or
addb
and
add
test
cli
addl
es
fldl
addb
xor
mov
mov
jns
cmp
mov
mov
or
out
add
sbb
xchg
push
add
mov
adc
test
sahf
add
test
lret
mov
xchg
push
fidivrs
repz
xchg
mov
xor
xchg
imulb
add
mov
jae
jo
add
into
mov
or
inc
sub
xlat
or
pop
ljmp
repz
dec
xchg
push
xchg
lret
cld
fistl
inc
adc
or
roll
lret
add
mov
aam
pop
scas
inc
push
stos
and
add
add
xor
imul
push
ja
sbb
add
in
push
mov
ja
mov
sar
add
add
in
cmp
lds
cmp
insb
loop
repz
lret
xchg
pop
jno
jmp
lods
fwait
arpl
test
std
jle
incb
lods
jmp
jne
add
dec
push
xor
mov
stc
dec
sub
or
mov
sbb
rorb
sub
or
sbb
or
xchg
lods
insb
or
inc
xchg
fstl
push
add
insb
add
pop
lods
pop
add
mov
add
add
roll
inc
clc
and
mov
int3
mov
mov
nop
jno
inc
icebp
xor
add
out
xor
lcallw
scas
add
inc
les
popf
popa
add
subl
mov
incb
sub
mov
dec
movups
shr
and
aam
fwait
test
das
add
push
jg
xor
cmpsl
jne
rcll
and
mov
xlat
movsb
mov
pop
dec
add
jl
jae
das
fidivrs
sbb
pop
and
jbe
pusha
lldt
ds
mov
imul
cmp
push
add
incb
mov
inc
sub
dec
clc
mov
in
lea
mov
inc
aas
cmp
or
push
fs
cmp
leave
addr16
inc
add
addl
or
clc
into
xor
mov
pop
add
xchg
leave
pop
lods
test
xchg
or
pop
push
sub
fisttpll
add
pushf
subb
add
pop
loop
sbb
addr16
popf
in
dec
inc
add
add
push
mov
xor
cmp
scas
lea
adc
xchg
xchg
inc
add
mul
in
jl
adc
dec
sub
add
add
or
adc
clc
mov
or
ss
cli
loope
jns
fs
xor
add
cmpl
inc
scas
add
daa
out
test
inc
sti
mov
pop
jmp
fldcw
push
lods
test
lret
inc
xor
aam
push
mov
jbe
mov
pop
pop
ds
pop
mov
addr16
ss
fwait
lods
fsubl
ja
scas
mov
or
sub
adc
jb
int3
lods
push
add
idivl
xlat
cmc
add
add
je
test
je
add
loope
aam
or
push
sbb
jge
pop
mov
loopne
cmp
loop
scas
maxps
dec
push
adc
adc
cld
push
inc
bnd
add
add
add
inc
dec
cwtl
mov
dec
out
cs
outsb
outsl
pop
call
and
inc
xor
mov
dec
mov
sub
adc
add
mov
int3
cltd
mov
mov
xor
adc
dec
out
xchg
sbb
adc
or
add
jns
inc
add
cld
xorb
inc
shll
sub
mov
mov
sbb
xor
loopne
add
sbb
fincstp
scas
leave
jns
sbb
out
dec
int3
sub
cmc
add
orl
pop
xor
sbb
leave
lret
scas
push
add
insb
push
xchg
or
or
mov
fldenv
jne
loop
and
add
mov
xor
add
push
fs
sub
add
xlat
push
repz
roll
xchg
fdivrs
add
and
or
insb
add
ret
or
and
shrl
inc
cmc
dec
jp
stos
sahf
pop
insb
das
add
sahf
outsl
adc
cmpsb
add
inc
shll
test
fldenv
es
add
xor
sub
out
add
ror
loopne
jge
mov
cli
adc
mov
pop
aaa
test
xlat
test
sbb
push
xor
push
push
add
out
loopne
leave
sbb
mov
cmp
outsb
jno
and
xchg
hlt
sub
pusha
add
loope
std
xchg
scas
cmpsl
mov
sbb
test
int3
faddp
push
cld
inc
inc
mov
push
xchg
sbb
test
add
fiaddl
fmuls
mov
in
cmc
dec
xor
ss
add
add
push
stc
push
jge
adc
add
add
mov
int3
dec
addr16
add
int3
add
jae
or
add
add
ss
lret
sub
and
adc
add
add
add
push
mov
push
les
add
repz
ret
pusha
inc
cmpl
mov
add
add
in
dec
outsb
popf
stc
stc
add
mov
xchg
lahf
lods
lock
mov
jecxz
in
dec
mov
adc
les
mov
pop
mov
sarb
out
out
push
negl
test
cli
je
fbld
clc
aad
push
lret
and
in
sub
push
add
sarb
xchg
test
out
call
add
cmp
jle
add
insb
pusha
test
mov
jmp
mov
jb
inc
mov
iret
adc
rcl
add
add
jecxz
mov
push
fs
mov
lret
or
sbb
add
pop
lret
lret
pop
pop
pop
add
sbb
mov
pop
movsb
xor
fisttpl
sub
movsl
rcrl
insb
add
xor
xor
add
cltd
dec
add
cmp
je
mov
mov
fisttpl
jp
add
les
add
mov
pop
inc
add
push
imul
stos
add
sbb
lock
movsl
add
add
incb
iret
and
in
stos
fsts
dec
sbb
sahf
pop
mov
push
xchg
mov
ds
stos
or
pop
nop
not
jno
add
xlat
nop
stos
fcompl
pop
mov
aas
mov
add
mov
xchg
int3
aam
jno
int3
jbe
xchg
add
mov
xchg
enter
mov
jae
push
add
xchg
push
add
imul
push
add
andb
in
ret
mull
insb
rol
ds
jbe
movsl
ret
push
xor
adc
lods
popf
inc
mov
test
push
cmp
add
ret
add
add
mov
scas
jno
or
ds
mov
mov
inc
jge
pop
test
cmpsl
leave
rolb
inc
push
inc
lea
jb
add
pop
notb
add
pop
lret
cld
push
je
push
lods
sub
mov
sub
sbb
push
mov
dec
imul
sub
into
mov
xchg
adc
or
notb
xor
fadd
mov
shlb
and
add
into
iret
jbe
pop
fs
scas
fdivs
pushf
cltd
sahf
lock
xor
and
jae
sahf
pop
sub
xor
add
pop
por
jns
gs
test
cmp
inc
cmp
and
pop
and
dec
lret
dec
mov
lods
push
arpl
fwait
aas
addb
stos
aad
mov
addb
sub
test
add
cmp
hlt
pusha
xchg
add
lock
jbe
jns
add
daa
jno
arpl
inc
sbb
repz
xor
int
xchg
fldenv
push
xor
icebp
cvtpi2ps
fdivl
add
add
xchg
jle
imul
add
mov
add
rcrb
mov
add
bound
sub
add
sbb
sub
loop
add
sbb
adc
cmp
pusha
lock
xor
cmpb
roll
dec
loopne
cltd
inc
add
dec
out
or
or
xchg
add
js
add
mov
or
leave
sub
pop
or
in
ficompl
imul
and
push
sbbb
adc
add
push
xchg
clc
add
movl
xchg
into
mov
or
pop
xor
inc
mulb
arpl
sub
inc
adc
xor
inc
clc
sub
es
imul
clc
inc
add
push
xchg
mov
test
add
testb
sub
pop
loop
int
fildl
fistps
cmp
adc
dec
or
js
flds
mov
mov
xchg
pusha
push
fldenv
js
dec
add
cmp
in
aam
loop
add
xor
pop
addl
and
ss
add
xor
push
cmp
add
dec
aam
cmp
ja
add
mov
inc
cwtl
mov
mov
sbb
lock
mov
mov
cmp
mov
add
mov
sub
xor
cmp
add
or
add
lods
add
sahf
mov
out
pop
and
or
or
dec
std
cmp
sub
sbb
mov
mov
loopne
fwait
add
and
shr
std
adc
jno
ret
cld
dec
sub
stos
push
lahf
pop
push
add
lret
sbb
ret
and
sub
popl
imul
push
mov
das
jb
fs
or
fistl
push
push
xor
je
mov
xorl
push
lock
push
inc
add
add
cmp
repz
jbe
xor
lahf
ss
and
jb
lds
add
cmp
or
push
addb
and
movsl
cltd
das
push
jecxz
jne
mov
mov
jae
mov
mov
sub
lock
push
mov
add
test
add
lret
mov
cld
inc
adc
test
or
add
test
arpl
rolb
add
or
dec
push
xchg
add
inc
adc
jae
ljmp
insl
aam
add
or
pushl
sarl
loop
popf
pop
in
loope
scas
add
add
or
fcmove
push
xlat
fstps
or
ss
add
cmovo
or
add
xchg
jmp
movsb
negl
addl
inc
arpl
mov
adc
subl
add
lds
add
enter
inc
std
divl
dec
mov
dec
sbb
fs
or
xchg
mov
stc
add
cmpsb
outsl
add
sub
add
fildl
das
mov
xchg
sub
and
inc
icebp
or
push
xchg
and
enter
add
add
lcall
pop
imul
add
sbb
cltd
repnz
or
inc
xor
ret
lret
pushf
fst
lds
fisttps
dec
and
inc
add
leave
hlt
mov
lcall
push
ss
add
xor
jmp
cltd
cmp
xor
negb
adc
ficompl
test
fwait
jl
push
jns
pop
test
jno
clc
arpl
ret
add
add
push
testb
pusha
loope
add
sbb
orl
pop
inc
mov
inc
xchg
push
cmc
pop
xor
cli
lods
rcrb
stc
cmp
flds
mov
cmpsb
rcll
ss
jge
mov
sub
add
add
push
lds
jg
test
lods
dec
addl
mov
divl
add
adc
push
ds
fidivl
xor
jae
das
sub
jbe
sbb
jp
jp
fdivp
adc
adc
hlt
add
cmc
mov
add
leave
inc
add
add
xchg
mov
push
ds
push
mov
xchg
push
add
sbb
frstor
add
mov
outsl
or
inc
fistpll
test
iret
rorl
fstpt
out
xor
lcall
add
test
inc
mulps
xor
test
divl
jp
xor
data16
scas
lods
movsb
inc
jecxz
xchg
jbe
xchg
push
xchg
fisubrs
xchg
call
rcl
or
dec
rcrl
push
test
xorb
xchg
sub
pop
cwtl
out
cmp
add
xchg
stos
out
sub
sbb
add
adc
movb
add
dec
scas
mov
add
add
xchg
pop
lock
in
push
sbb
mov
jmp
xor
cmp
adc
inc
roll
mov
rolb
add
lea
ds
add
popf
outsl
add
imul
cld
adc
add
pop
add
and
std
sub
xor
repz
popa
fiadds
push
dec
or
ja
lahf
in
test
mov
rorb
mov
loop
add
insl
and
enter
aas
int3
or
lods
push
mov
pusha
fsts
add
cmp
lahf
add
sub
add
hlt
and
out
in
aam
fistps
add
ja
add
icebp
add
shl
call
add
sbb
lock
inc
inc
push
ja
push
mov
insb
ret
xor
outsl
movsb
out
shll
mov
add
rcrb
add
shrd
out
mov
add
mov
dec
repnz
sub
mov
jne
nop
pop
pop
lock
mov
add
ret
mov
add
aas
mov
mov
adc
into
lretw
jae
aaa
cmp
pushf
dec
mov
loope
nop
jge
jb
fs
insb
push
and
add
mov
mov
adc
mov
fucomip
fwait
pop
mov
or
das
fiaddl
pop
jmp
test
add
pop
cld
add
mov
nop
add
xlat
xor
add
or
add
cmc
imul
repz
mov
cmp
and
mov
scas
xchg
sti
add
mov
iret
mov
inc
dec
push
mov
add
and
cmpsb
sbb
jg
fwait
les
ljmp
mov
inc
aad
pop
sbb
add
xchg
adc
decl
mov
inc
addl
repnz
scas
cs
or
dec
push
hlt
ffreep
in
add
or
lods
mov
daa
lahf
xor
cmp
inc
in
testb
add
push
int3
rclb
inc
add
xor
cmpsl
add
aad
outsl
xchg
add
mov
aas
pop
and
int
addr16
cmpb
mov
fstl
movswl
jmp
push
xchg
add
mov
push
sub
push
mov
pop
adc
clc
lcall
lret
cmp
mov
fldpi
add
mov
lods
push
push
cmpsl
test
in
cmp
jl
pushf
stc
add
movsb
add
xchg
mov
jle
out
add
fsubrl
loopne
xchg
inc
lahf
inc
or
jge
movb
decl
inc
add
loopne
fs
xor
xor
je
cs
push
test
pop
xchg
add
loopne
ret
xchg
lods
addr16
or
ljmp
movsb
ss
jbe
inc
sub
or
scas
movsl
inc
lcall
mov
sar
mov
mov
push
sub
and
cmp
jbe
imul
add
jmp
dec
sbb
jmp
or
imul
jle
dec
dec
xchg
add
mov
mov
roll
inc
push
mov
cltd
push
mov
add
leave
stos
cwtl
imul
imul
dec
negb
jp
pop
mov
cmp
inc
not
lods
popf
out
stos
mov
adc
add
arpl
sbb
push
xor
mov
imul
aam
fsubl
adc
sub
cmp
add
rclb
bound
rclb
sti
push
add
cld
or
add
fbld
xchg
cmpsb
add
push
loop
add
fcoml
jl
jne
add
mov
sbb
out
add
or
cld
pop
xchg
mov
fistpl
insb
cltd
je
mov
add
sub
and
lods
add
lds
fxch
aam
cmp
les
lds
ficoml
loop
add
push
add
adc
fadds
push
pop
cmpsb
add
and
xchg
xor
mov
scas
cmp
sbb
pop
mov
sub
nop
test
add
adc
pop
testl
mov
inc
dec
add
adc
xchg
daa
pushf
pop
aam
jle
pop
sbb
xor
cwtl
sbb
gs
fnstcw
adc
loopne
rolb
add
lea
mov
stos
in
dec
jae
loop
repz
test
xchg
test
lea
adc
jb
ret
jbe
mov
sahf
notl
mov
cmpsl
mov
icebp
xor
push
mov
cld
in
aaa
sub
fsubrl
push
lock
movsl
and
push
movsl
testb
mov
xor
jnp
mov
mov
add
dec
jno
movb
outsl
xchg
arpl
fsts
les
add
hlt
adc
adc
xchg
inc
add
add
xor
add
stos
mov
sbb
inc
xchg
clc
rolb
mov
adc
sub
pop
fadds
sub
movl
dec
decl
add
add
cltd
cmp
inc
add
lret
daa
mov
or
in
pop
ss
add
out
cmpsb
push
lret
or
add
add
sub
add
cmp
mov
sbb
scas
adcb
scas
dec
nop
int
stc
test
mov
enter
je
fstps
adc
and
in
sub
jae
inc
xchg
xchg
xchg
xchg
js
les
sbb
sbb
in
loope
outsl
pop
sub
add
lcall
dec
xchg
add
pop
mov
aad
sbb
aas
add
mov
out
imul
jns
mov
cmpsl
mov
mov
sti
add
mov
out
dec
mov
add
mov
add
aas
cmp
dec
add
jbe
leave
and
test
xchg
push
test
lea
pop
xlat
outsb
add
add
test
mov
mov
inc
add
mov
mov
add
add
hlt
sbb
out
add
push
add
incb
jno
add
into
mov
popa
add
incb
cmp
stos
push
in
push
jl
add
add
cmc
fwait
clc
pop
adc
push
xor
loopne
add
pop
sub
stos
add
mov
mulb
pop
aaa
mov
call
sub
pop
inc
push
fisubs
lcall
nop
daa
dec
push
and
push
stos
cmp
cmpsb
jge
pusha
mov
ja
je
xchg
int3
mov
jo
mov
lock
push
test
jl
inc
xor
aam
jb
lret
or
jne
frstor
add
cmp
sub
add
aaa
inc
jp
or
cmp
mov
test
push
imul
addr16
jno
in
imul
stos
jb
xchg
add
jl
bnd
lret
scas
in
add
mull
pusha
bnd
dec
xchg
sbb
lods
mov
in
xchg
mov
dec
mov
in
je
and
xor
shll
add
lds
out
sahf
sbb
mov
sbb
bound
lahf
add
lock
js
clc
addb
mov
addl
lods
push
add
call
inc
dec
mov
cmp
add
add
cmp
test
jl
pop
dec
inc
out
js
inc
sub
ss
cmpsb
or
dec
add
fdiv
ret
xor
lret
push
loop
je
clc
in
insb
add
popa
jae
inc
cmp
push
pop
xor
mov
test
or
jno
aad
inc
roll
sbb
test
into
ja
roll
adc
cmp
hlt
xor
dec
add
es
mov
mov
test
insl
lahf
mov
inc
cmp
sub
repnz
sbbb
mov
xchg
push
pop
jmp
add
clc
mov
stos
test
es
mov
jno
icebp
cmp
int
add
pop
test
fcoml
add
cmp
imul
repnz
stc
cltd
add
int
mov
pop
and
sub
inc
les
outsl
sti
addr16
pop
movsl
add
mov
adc
test
stos
fildl
push
mov
mov
push
cmp
scas
outsl
popf
sbb
xchg
pop
xor
mov
fildl
and
add
pop
fisubl
mov
test
sub
fistl
int3
les
fiaddl
mov
xlat
push
and
lock
add
movsl
adc
add
inc
inc
jnp
icebp
inc
mov
jbe
jb
test
mov
outsl
ljmp
add
inc
xchg
xchg
rolb
subl
lods
add
mov
dec
cwtl
movsb
xorps
add
ljmp
or
pop
cmpsl
add
xchg
sub
push
sbb
dec
xorl
sub
mov
test
aam
push
pop
jne
int
outsl
int
sbb
mov
aad
test
mov
xor
rclb
mov
add
aaa
aam
in
fs
add
cmp
add
dec
movsl
mov
inc
add
icebp
imul
sub
mov
add
lods
or
int3
clc
cli
add
add
aaa
add
push
pop
str
xchg
scas
push
fwait
int3
push
push
pop
addr16
les
test
rcr
aad
cwtl
xlat
out
push
add
cmp
pop
inc
and
add
adc
jb
out
mov
push
adc
arpl
ret
add
ret
push
inc
test
xchg
dec
arpl
rorl
and
mov
push
add
roll
daa
popf
sub
inc
add
add
fbstp
jns
ret
faddl
sbb
cmpsb
repnz
les
loope
adc
adc
aaa
test
aam
mov
bound
int3
stc
add
andb
add
xor
jg
xor
add
mov
loope
add
xchg
sub
cmpsb
add
push
xchg
test
add
inc
gs
into
outsb
mov
pushf
ficoml
pop
js
add
and
test
push
lcall
std
adc
out
dec
addl
int
hlt
ja
mov
and
add
xchg
inc
daa
and
and
int
add
insl
aaa
fprem
mov
add
test
shll
push
test
add
add
add
add
cmpsl
nop
clc
aam
addr16
push
or
es
xchg
jno
mov
add
repz
cmp
lods
cmc
sub
lcall
out
int3
inc
dec
scas
adc
pop
sahf
cmc
xchg
jge
jns
leave
cli
push
adc
add
ds
mov
mov
mov
testl
in
add
jle
mov
adc
add
jbe
imul
xlat
sti
push
lods
cmp
stc
pop
add
mov
add
add
adc
js
or
add
mov
bound
xchg
push
js
movb
mov
fsts
lea
mull
push
daa
add
orb
fidivrl
cmp
add
nop
add
mov
cld
xchg
add
mov
and
test
movsb
mov
sub
hlt
pop
lods
mov
leave
aad
add
dec
pop
fsub
cmovb
pop
lahf
add
add
xor
pushw
add
fnstenv
es
js
bound
std
outsb
jns
movsb
pop
add
aas
or
loopne
and
jecxz
testb
mov
movsl
lcall
lock
lret
jmp
minps
dec
into
repnz
sub
cmpsl
out
add
test
jle
dec
mov
jnp
inc
popa
mov
lock
aas
fmull
cmp
popf
ficomps
add
add
test
scas
loopne
add
xchg
mov
cmpsb
add
cmp
jbe
outsb
mov
lahf
add
orb
js
aad
xchg
push
add
repnz
lock
mov
in
ss
cmp
xchg
push
add
mov
cs
cli
add
sbb
jle
cwtl
add
adc
arpl
incb
out
test
shlb
add
hlt
test
pop
cmp
insb
xchg
test
mov
inc
fbstp
loopne
lea
je
mov
add
or
je
push
add
inc
push
in
sbb
mov
lods
leave
or
and
lea
dec
les
scas
mov
or
pop
in
aad
xor
cmpsb
add
pop
test
roll
dec
fsubrl
inc
xchg
dec
push
test
pop
xchg
adc
mov
in
sbb
aad
add
dec
add
xor
pop
jo
mov
add
sub
dec
fdivp
outsl
mov
sub
add
jecxz
jmp
mov
adc
andl
aam
xor
pop
sub
xchg
push
lods
js
add
stos
add
loopne
andb
adc
add
bound
lret
add
cltd
dec
sub
mov
push
push
jmp
add
inc
jmp
dec
inc
adc
pop
push
push
xor
in
fcoms
xor
pop
inc
add
xlat
mov
add
or
insl
sbb
cmpsb
rcrb
lods
jbe
out
push
mov
ds
orb
shrl
mov
sbb
movsb
sbb
ds
repz
mov
aad
jecxz
dec
pop
inc
add
pushf
mov
add
and
xchg
scas
dec
push
push
sub
sahf
cmc
dec
jb
lahf
ljmp
addb
xlat
stos
movsb
dec
sti
add
jmp
mov
xchg
aad
outsb
xchg
mov
mov
loope
mov
shll
add
imul
hlt
cmc
cs
push
shlb
test
data16
and
push
ss
nop
add
push
fsubrs
shll
add
adc
mov
sbb
add
repnz
loop
pop
and
gs
imul
negl
pop
add
or
pushf
add
fstl
out
add
subb
jge
fistps
dec
cltd
jae
jns
cs
add
arpl
mov
add
popf
insb
mov
mov
outsb
pop
jns
mov
xchg
dec
cmp
addr16
fildl
lods
cwtl
sbbb
roll
js
add
xor
cmp
mov
push
mov
inc
dec
call
xchg
repz
imul
add
add
jns
mov
add
adc
enter
fs
dec
add
movsl
add
pop
filds
mov
add
add
add
into
add
jle,pt
push
or
cmp
cmp
dec
int
cmpsl
pop
add
jns
scas
enter
gs
mov
rorb
pop
repnz
add
fwait
nop
lea
lret
or
in
sub
or
lret
xchg
mov
imul
sbb
ljmp
jl
dec
pop
ficompl
add
jbe
add
aas
push
xorl
pop
push
int
adc
xchg
outsb
mov
fisubrl
daa
add
dec
xor
les
xor
inc
data16
sarl
ss
bound
fiadds
incb
adc
cmp
xchg
popf
outsb
or
cli
jle
cmc
daa
inc
mov
dec
xchg
xchg
mov
sbbl
xchg
sub
inc
push
sbb
pop
iret
jne
mov
mov
rcll
add
xor
sahf
pop
add
jbe
push
sub
sub
xor
fwait
add
ss
xchg
dec
inc
add
les
sbb
push
pop
push
jb
add
mov
mov
mov
add
inc
roll
ja
mov
sbb
dec
aaa
sub
pushf
adc
xchg
pop
repz
mov
outsl
out
in
add
ds
push
cltd
sbb
mov
std
incb
in
inc
jb
adc
inc
fstpt
add
dec
fidivrl
add
in
xchg
mov
pop
add
xchg
push
lcall
and
inc
outsb
pop
int3
lcall
aas
rorb
in
add
xor
insb
xchg
mov
loope
stc
lahf
lds
adc
and
in
dec
jl
push
cltd
repz
push
mov
pop
call
mov
sbb
sbb
and
add
mov
ret
add
add
jne
cmc
add
hlt
xor
sub
push
pop
sub
test
stos
or
lods
sub
xchg
jmp
add
cltd
lock
adc
fadds
insb
sarl
push
xor
pop
addr16
push
and
adc
xchg
lcall
movl
inc
adc
mov
aas
shr
and
sti
lahf
cmp
lahf
add
addl
add
pop
jns
pop
cmp
mov
jb
dec
xchg
xor
icebp
in
popf
push
mov
mov
shlb
mov
lea
mov
fs
dec
inc
sbb
add
sub
pop
cmp
add
mov
and
xor
jb
xor
std
jl
xchg
imul
add
jns
jg
jge
add
iret
add
push
add
mov
mov
mov
test
xchg
lds
jmp
in
aas
incl
cmp
add
hlt
mov
imul
mov
filds
test
popw
xor
pop
cmp
test
sti
pop
add
cmc
test
push
jg
cmc
movl
mov
ret
push
jno
add
push
add
rcrl
cltd
aam
xchg
mov
cli
sub
insb
and
lahf
mov
dec
dec
xlat
pop
std
mov
jno
movb
jns
mov
pushf
das
in
out
mov
int3
aaa
add
mov
add
add
arpl
sbb
sbb
rorb
hlt
in
add
add
xor
add
test
cli
incb
sbb
fidivl
dec
push
loopne
add
dec
fdivrl
rolb
xor
add
cmpsb
jae
aam
leave
scas
std
int3
int3
pop
je
es
xchg
push
lock
aam
stc
jp
movsl
daa
sbb
sub
push
xchg
sbbb
and
dec
test
mov
push
cltd
and
pop
fdivs
notb
dec
hlt
insb
loop
int3
popf
aad
pushf
stc
imul
sub
daa
addb
inc
add
sbb
ja
dec
xor
scas
mov
enter
jne
dec
bound
add
int
add
test
mov
add
or
addr16
cli
xlat
push
pusha
cmp
lret
push
jo
aas
mov
pop
repz
inc
add
fidivs
stos
adc
mov
sub
add
push
in
cmp
fdivs
dec
out
add
ficompl
pop
xor
mov
in
xor
movsb
lret
test
sarb
mov
add
incl
cltd
mov
mov
xor
dec
sub
shrb
mov
xchg
stos
mov
mov
and
hlt
add
cmp
pop
lcall
add
call
loopne
leave
daa
stos
inc
lods
ficomps
je
ljmp
int
scas
add
in
lods
test
add
sarl
mov
stos
inc
mov
sahf
xchg
add
jnp
jbe
pushf
out
xchg
dec
add
add
sbb
pop
das
shll
mov
cwtl
andb
jb
jo
fdivr
hlt
cli
and
pop
pop
fldenv
fcmovu
xchg
and
test
sub
cmpsl
arpl
aas
ret
dec
dec
add
inc
rcl
cmp
mov
add
adc
fidivrs
add
call
lea
mov
add
add
out
pushf
dec
push
or
or
out
add
fmull
dec
add
push
int
int
cmp
add
add
mov
add
out
hlt
inc
iret
inc
mov
cmc
mov
add
mov
lea
xchg
xlat
jo
add
add
loop
fcomps
xor
cmp
mov
cmp
decb
inc
cmc
push
mov
aas
xchg
addr16
add
repnz
mov
sbb
jecxz
add
xor
inc
cmp
push
adc
add
rcrb
xor
pop
mov
or
daa
fiadds
adcb
and
in
mov
mov
push
mov
lcall
add
xchg
push
and
call
push
add
push
jge
cmp
mov
sub
fiadds
ds
sub
flds
mov
add
cmp
cmpsb
sub
add
cmp
add
int
sbb
loop
mov
movsl
xchg
push
add
adc
sarl
mov
popf
or
xchg
xor
cltd
sahf
cmpsl
stos
or
add
repz
addr16
sahf
mov
push
xchg
das
cmpsb
adc
add
inc
orl
inc
mov
movsb
stos
xchg
cli
js
sahf
mov
push
add
pop
dec
stos
aaa
mov
mov
or
add
add
clc
adc
lea
gs
ret
addl
jns
test
cltd
push
mov
push
out
mov
push
stos
or
add
inc
sbb
pop
movsl
gs
pop
scas
mov
dec
pop
out
out
popf
mov
add
mov
jno
ja
or
xchg
jne
and
add
and
ljmp
mull
int
pop
mov
in
or
js
shr
push
je
movsb
int
cmpsl
dec
xchg
pop
mov
lea
ljmp
rorb
or
xchg
xchg
push
add
fcoms
xlat
into
pop
adc
std
lods
mov
repz
xchg
lods
and
xor
and
adc
fnstcw
stc
rcrl
icebp
jae
je
add
cmp
add
or
cmpsl
in
add
jns
je
out
jp
lods
fwait
mov
add
clc
ret
cld
add
push
into
pop
add
aam
ds
subb
leave
add
push
and
jne
pushf
add
shr
add
sbb
sub
lret
push
xor
neg
imul
pop
lret
je
xor
incb
inc
add
jecxz
jg
jl
sub
sbb
test
add
es
mov
leave
push
adc
scas
call
es
add
mov
mov
repnz
add
cmc
mov
and
arpl
outsl
add
pusha
addl
test
inc
fcoml
and
mov
jl
inc
push
lods
add
push
add
mov
mov
fsub
div
dec
addb
or
push
inc
daa
in
in
fstpl
mov
pushf
jae
bnd
sub
jmp
pop
pop
pop
add
mov
outsb
xlat
stos
aas
add
fiaddl
pop
leave
jl
in
mov
add
ret
add
lea
sub
clc
imul
lods
repz
ja
pop
cs
xor
arpl
mov
hlt
inc
ffree
mov
or
add
mov
push
iret
dec
or
xchg
pop
add
mov
add
sbb
jbe
iret
mov
scas
add
mov
or
or
faddl
sarw
dec
pop
and
xchg
add
mov
xor
outsl
mov
add
push
cmp
add
daa
stos
xchg
out
fwait
lahf
xorl
xchg
fucomp
pop
add
mov
add
hlt
std
inc
lret
hlt
out
stos
add
adc
cmp
adc
sbb
add
add
jecxz
pop
push
xchg
cltd
jnp
add
std
add
lds
add
fwait
push
add
shll
int3
and
or
add
mov
jl
sbb
and
imul
pop
or
add
add
leave
neg
inc
or
add
or
sbb
mov
jecxz
loope
filds
add
test
inc
stos
ljmp
dec
cs
cmp
and
sub
and
fiaddl
ss
jno
shll
aas
and
inc
add
loope
xchg
add
dec
insb
add
int
xchg
cmpsb
pop
lock
idivb
xchg
cmp
sub
cmp
jecxz
pop
mov
mov
aaa
repz
lahf
adc
mov
adc
imul
mov
divl
loopne
insb
mov
movsl
xchg
repz
icebp
leave
pop
push
add
pop
inc
xlat
stos
fstl
cltd
clc
sbb
mov
lods
mov
cmpsb
inc
popa
push
jae
jnp
or
push
fsub
ret
popf
add
jnp
std
add
hlt
repz
pop
pop
repz
jg
pop
add
mov
lods
add
pusha
mov
movsb
adc
add
les
xlat
add
je
push
lret
stos
push
mov
loope
popa
insl
out
cmc
lahf
jge
int3
ja
add
repz
cld
jo
mov
nop
add
arpl
push
dec
xchg
test
cmpsb
out
push
add
lret
nop
push
scas
jp
arpl
sti
pop
mov
andps
lcall
add
jge
in
adc
rcr
jp
scas
cmpsl
inc
add
xchg
xchg
inc
xchg
fwait
ret
and
xor
mov
push
lea
aaa
mov
sbb
cltd
and
push
and
pop
nop
jnp
ss
pop
sbb
sub
inc
add
ret
xor
xchg
sbb
jae
fs
loopne
loope
push
dec
addb
inc
xchg
sub
int3
add
mov
and
sbb
ja
dec
cmp
inc
adc
mov
std
scas
divl
insl
dec
xor
xchg
xchg
sbb
add
fcomps
pop
lods
inc
adc
out
dec
testl
sbb
stos
arpl
xchg
push
mov
mov
add
add
add
aas
mov
mov
push
fnstsw
lea
sub
mov
lret
jle
add
and
add
mov
shlb
lret
jnp
out
mov
jae
add
dec
xor
loop
adc
push
bound
aaa
and
ret
aam
loop
add
cld
fdivp
push
js
add
lea
add
push
add
lea
add
test
mov
xchg
js
add
outsb
scas
add
sbb
cmp
xlat
add
add
aas
xchg
test
in
dec
lock
jbe
pop
xchg
psrld
sub
jbe
les
cmp
addl
push
in
push
test
add
sti
fdivrs
sbb
cmovne
sub
jge
pushf
in
push
lock
lea
lea
push
xor
mov
sub
cmp
inc
adc
pushf
jmp
test
add
inc
sub
push
xchg
ljmp
xchg
lds
or
les
dec
inc
ljmp
mov
stos
add
mov
inc
fldenv
sbb
mov
xchg
mov
xchg
pusha
arpl
xchg
or
add
pop
sbb
xchg
outsb
iret
das
mov
mov
push
add
cmp
jecxz
and
sbb
mov
add
cmp
js
int3
or
out
mov
inc
add
xor
leave
add
outsb
addl
add
sub
je
push
or
test
pushf
add
cmp
dec
cld
clc
jp
std
mov
push
fldcw
lods
adc
push
sbb
pusha
mov
or
and
cmp
jbe
add
or
notb
xchg
movsl
out
dec
sub
daa
add
addr16
mov
addl
xchg
stos
xchg
in
jo
and
test
or
jecxz
je
aam
fucom
leave
sub
out
rclb
inc
roll
lret
pop
add
fildll
mov
add
add
hlt
dec
xor
int3
mov
adc
loop
jge
movsl
call
add
mov
sbb
dec
push
rorl
add
repnz
mov
rolb
cld
or
enter
data16
sbb
and
das
int3
push
roll
push
mov
add
loope
fbld
xor
fildl
test
mov
sub
xchg
loop
movsl
mov
adc
sub
and
xchg
xor
cmp
push
cs
aam
lds
fbstp
test
sbb
imul
add
aam
push
inc
leave
cmp
push
cmp
xorl
push
stos
jne
loope
ljmp
mov
fildl
and
inc
test
cmp
jne
and
mov
pop
push
add
adc
lods
add
xlat
or
add
xor
jo
cmpsl
lret
adc
push
or
push
std
mov
loopne
add
addr16
and
push
jne
pop
add
sub
jo
sub
fisttps
movsb
add
insl
stc
add
repz
xchg
outsl
mov
outsb
add
call
stos
insb
xor
mov
out
mov
inc
xor
jae
test
push
or
rcrb
add
add
inc
iret
test
bound
and
mov
aas
jle
dec
ja
inc
stc
dec
xchg
inc
ret
mov
pop
setl
mov
push
js
testb
pop
add
pop
jnp
jmp
fsubrl
js
add
std
pusha
stos
icebp
mov
jmp
loopne
fndisi(8087
faddl
shll
mov
and
add
mov
mov
add
stos
mulb
add
outsb
mov
jae
push
insb
jl
popf
and
daa
adc
aaa
fistpl
mov
in
mov
std
mov
mov
popa
inc
scas
mov
add
mov
shrl
add
aad
das
lock
mov
or
fnstsw
push
jae
fldlg2
popf
jecxz
sti
cmp
mov
xchg
sbb
nop
ds
scas
in
scas
or
add
out
es
pop
sti
inc
add
inc
xor
out
add
cmp
scas
jnp
push
data16
mov
sbb
dec
cltd
cmp
add
andb
xor
inc
aas
xor
xor
mov
add
fsubrs
add
add
rolb
jge
notl
arpl
leave
pop
push
mov
push
mov
lods
dec
bound
xor
fldl
enter
lods
lds
out
sbb
push
add
pop
lcall
add
loope
int3
out
inc
add
add
aad
shll
pop
xor
pop
sbb
loop
fcmovbe
add
mov
inc
add
adc
xor
xor
sti
add
mov
jnp
inc
movsl
lds
or
jmp
ret
mull
add
sub
xchg
add
mov
sbb
inc
popa
repz
mov
add
out
enter
pop
stos
add
xchg
add
add
movsb
mov
add
aaa
adc
scas
xor
push
sar
jbe
jg
lahf
add
in
add
loopne
test
push
imul
aad
push
insb
add
add
inc
mov
std
fists
inc
fisubrs
mov
mov
loope
add
test
test
add
add
add
nop
cli
add
inc
data16
incb
lret
sbb
and
aam
mov
call
lds
mov
add
movsl
cmpsb
xor
sbb
test
add
push
or
add
cmp
sti
jb
dec
adcb
mov
lock
mov
dec
push
ret
xchg
dec
add
add
in
mov
lcall
popa
cmp
push
mov
inc
aam
mov
jge
testl
movsl
test
test
movsl
cwtl
cmpsl
xchg
aad
add
cmp
dec
jne
lock
adc
add
add
sbb
push
in
adc
jno
or
push
sub
outsb
jno
into
push
test
add
movsb
movswl
pop
aam
jp
xor
or
pop
aad
lret
out
in
add
sub
dec
mov
mov
add
pop
ret
shll
addl
int
iret
cmp
sub
jb
test
add
lret
rorb
add
test
mov
push
addr16
add
add
lret
pop
leave
fdivl
mov
xchg
inc
aad
test
mov
dec
mov
mov
gs
cs
jge
dec
mov
jl
xor
fsubrs
repz
ror
sti
ja
mov
jne
xchg
daa
add
or
aam
cwtl
lret
out
out
iret
aad
test
inc
add
add
xchg
mov
mov
rcl
test
xor
pop
pop
inc
sti
add
cmpsl
loopne
lret
jo
cltd
sub
popa
gs
sbb
or
cwtl
movb
push
xor
ds
negb
xchg
push
bound
faddl
cmp
inc
jecxz
mov
adc
cmp
cli
jmp
push
push
call
arpl
test
loop
push
push
push
sbb
test
mov
sbb
dec
and
lea
xor
jno
inc
mov
testl
xchg
mov
push
das
jne
outsb
insl
cmpsb
push
jnp
lods
insl
jmp
movsb
hlt
xor
xchg
jmp
cmp
inc
js
mov
jno
pop
add
fiaddl
xor
add
inc
cmp
xchg
add
out
dec
jns
inc
aam
hlt
mov
push
or
ss
aam
xchg
jl,pt
das
pop
adcb
add
sub
andl
inc
movsb
mov
lahf
mov
adc
ljmp
cmp
cmc
fwait
add
add
fxch
jno
inc
lods
loopne
mov
mov
notl
push
jo
adc
negb
mov
shll
mov
pop
sbb
int
mov
addr16
adc
sbb
xor
add
mov
add
jns
fs
clc
nop
add
add
push
dec
add
mov
or
mov
ret
xchg
mov
sar
dec
int3
imul
cmpb
mov
pop
push
xor
daa
cld
add
cmpb
mov
cmp
ficompl
sahf
jl
mov
clc
mov
push
dec
cmp
mov
int3
mov
jg
push
ja
arpl
test
out
daa
jmp
add
or
xlat
icebp
mov
add
add
loope
cmp
or
mov
push
cli
shll
mov
popa
jecxz
add
mov
cld
pop
pop
pop
add
mov
cmp
outsl
add
movsl
xlat
xchg
or
movsb
call
andb
add
mov
jae
and
and
hlt
cltd
pusha
xor
adc
add
mov
int3
push
mov
out
jl
or
add
jne
mov
orl
add
inc
inc
and
add
mov
mov
inc
jno
pop
and
add
add
push
add
dec
add
pop
gs
mov
add
faddl
jmp
ds
add
or
mov
fisubl
loope
and
test
xor
cmpsl
add
aam
hlt
sbb
mov
cli
jne
gs
mov
icebp
add
dec
cmp
sbb
mov
xchg
xchg
mov
hlt
negb
or
add
dec
dec
adc
cs
daa
pop
lret
inc
add
adc
cwtl
add
mov
inc
add
ja
add
push
je
jae
inc
fcomip
mov
sbbb
std
xchg
and
add
xor
jno
jb
or
out
fs
jge
das
sub
add
shll
add
xor
pop
cmpsb
mov
int3
mov
mov
movsb
adc
jne
and
sbb
out
fs
int3
push
mov
jmp
mov
loopne
add
orb
test
sar
leave
test
xchg
ret
push
jmp
add
lahf
add
or
push
popf
push
or
mov
add
ljmp
faddl
popf
sbb
mov
fistpll
and
cmp
pushf
inc
cmpsb
jne
addr16
cmp
testb
mov
shll
add
add
or
cmp
add
xchg
fldenv
sbb
mov
xor
mov
lods
insb
add
lret
push
aad
fsts
mov
ljmp
imul
add
add
lret
cld
ret
in
add
orl
push
jmp
xor
jmp
mov
iret
xchg
add
mov
repnz
pop
or
sarl
sbb
jmp
ss
push
rcrl
mov
add
or
aad
dec
add
push
xor
ret
int
sbb
movsb
outsl
lea
repz
outsb
pusha
xor
jb
mov
mov
add
daa
call
xchg
jp
fadd
fs
and
push
sarb
add
add
add
adc
and
xchg
pop
add
daa
jge
add
add
ret
cli
mov
inc
pop
loop
outsl
jne
iret
push
add
cmp
sub
inc
cmpsb
mov
gs
inc
push
mov
sahf
les
fwait
mov
loop
sarl
lret
sub
pop
outsl
addr16
mov
push
and
or
lock
neg
jle
and
sub
pop
les
dec
add
fwait
xchg
insb
stos
cld
mov
les
mov
add
xlat
and
aas
jecxz
fldl
mov
or
pop
add
out
lahf
movsl
fsubs
add
mov
cwtl
fisttpl
jl
clc
inc
hlt
repnz
inc
or
sbb
popf
adc
repnz
jecxz
clc
mov
inc
push
pop
mov
dec
fwait
pop
push
int
scas
daa
mov
mov
jns
add
dec
xor
stc
push
xor
add
sbb
aaa
clc
mov
add
fisubs
push
sarl
add
addr16
enter
sbb
add
sbb
jmp
xchg
add
cmp
enter
imul
push
inc
add
pop
adc
lahf
cltd
push
add
cmp
mov
hlt
and
ss
add
in
stos
fbstp
shll
ltr
negl
add
arpl
testb
rolb
aad
dec
es
gs
into
add
xchg
rcll
inc
repz
aas
lret
add
add
inc
fsubrp
lahf
pop
lea
push
outsl
cmpsl
pop
jno
stos
ljmp
sbb
pushl
xchg
lods
push
xor
roll
inc
stc
push
addb
mov
xchg
fbld
testb
sbb
xchg
loope
cmpsl
jge
int3
pop
add
or
arpl
inc
std
iret
and
leave
outsb
in
and
add
imul
add
push
push
jl
out
mov
mov
jmp
add
jl
add
inc
cmpsb
jne
dec
enter
mov
sbb
testb
inc
mov
js
sub
bound
ss
aas
mov
mov
out
sub
into
and
add
add
or
lds
fisttpl
adc
or
jmp
add
pop
cmp
jp
add
pop
add
xchg
add
std
lock
cmp
pop
or
into
xchg
loopne
push
cltd
and
lods
imul
jmp
add
scas
roll
popl
mov
fmull
xchg
adc
mov
pop
lods
or
pop
scas
add
test
push
pop
je
addr16
push
addb
add
out
sbb
ss
inc
repnz
push
mov
shlb
push
fisttpl
add
repnz
xorl
les
das
add
dec
inc
es
xor
adc
xor
dec
cmpsb
mov
pop
add
xor
dec
jg
cltd
inc
sbb
cmpsl
scas
insl
aam
std
repnz
jecxz
and
jne
pop
scas
adc
xchg
add
lahf
add
add
sbb
sbb
dec
and
insl
sub
je
jbe
jg
add
push
push
add
popa
mov
xchg
gs
mov
sbb
loop
fwait
lret
scas
jne
call
bound
mov
incl
je
push
cwtl
sarl
mov
shr
imul
pop
mov
inc
cmpsl
add
sbb
iret
jns
add
add
loopne
stos
jae
stc
inc
pop
xchg
test
lcall
incb
xor
add
jb
movsl
or
xchg
dec
leave
jb
add
dec
imul
arpl
pop
mov
inc
cmp
xchg
sub
cmp
xor
mov
clc
add
xor
mov
popf
add
xlat
lods
push
mov
mov
and
mov
xor
pop
sbb
sbb
mov
xor
lret
xor
inc
add
dec
add
add
sub
add
add
popa
out
stos
outsl
iret
or
mov
jmp
cmp
stc
add
inc
mov
push
add
add
les
inc
lods
repz
add
in
and
jecxz
jge
sub
insl
add
mov
jbe
xchg
mov
xchg
mov
inc
push
push
stos
addl
sub
inc
adc
or
stc
add
jg
std
add
jbe
sahf
dec
pop
lods
lods
mov
dec
add
sahf
rclb
dec
jns
clc
lods
dec
pop
push
iret
imul
in
stc
mov
ljmp
mov
pop
lea
add
in
loop
inc
cmpsl
ret
out
sbb
xchg
rcrb
pop
pop
mov
add
sub
jg
cmpsl
add
fdivp
lods
mov
add
add
aad
add
add
add
mov
cmpsl
dec
mov
outsb
enter
add
adc
imul
push
sarb
repnz
les
xor
lock
jecxz
xor
aaa
ja
cmp
fiadds
mov
stos
loop
xchg
inc
daa
or
xorb
add
add
mov
pop
add
mov
imul
lods
les
mov
and
negl
push
inc
jp
push
xor
out
lret
lds
ja
add
push
repz
sbb
add
push
test
popl
mov
cld
jns
dec
adc
aaa
mov
testl
sub
out
enter
sti
ljmp
bound
mov
add
add
out
scas
add
xchg
pop
int
icebp
add
mov
mov
sbb
cld
mov
shl
jmp
sbb
sbb
stos
leave
lock
add
mov
pop
add
push
fbstp
testl
into
hlt
add
int
in
enter
movsl
popf
outsl
cmc
mov
inc
inc
roll
fbld
sbb
push
pop
dec
jmp
and
stos
jmp
aaa
mov
xlat
add
sub
in
insl
scas
dec
push
add
aas
sub
out
fadds
out
add
mov
pop
pop
xor
mov
in
add
push
aam
and
repnz
dec
cmc
fidivrl
mov
stos
shlb
repz
fists
mul
add
repz
aas
xchg
and
imul
mov
cmp
faddl
add
add
sbb
mov
or
aas
faddl
incb
stc
arpl
add
or
stos
add
mov
in
mov
cs
cwtl
aad
adc
cmp
push
sbb
cmp
cmovno
inc
daa
pop
into
add
in
adc
push
pop
pop
test
push
jne
sub
icebp
cmp
stos
cmp
pop
push
cmp
lret
mov
add
ja
jno
std
jecxz
mov
je
add
leave
sti
jns
in
iret
jb
xor
and
add
xor
test
add
dec
xchg
je
pop
in
xor
dec
sahf
jno
push
hlt
sar
cld
cmc
enter
mov
nop
bound
decl
outsb
add
aam
fs
nop
add
pop
lock
add
cmovle
hlt
out
add
jno
stos
test
cli
outsl
pushf
pop
lcall
pop
fsts
int3
mov
push
in
movsl
adc
call
int
lds
add
mov
sbbb
or
add
scas
jmp
push
clc
add
sbb
into
ret
clc
cmpsb
sti
add
popa
insb
push
jno
mov
test
add
mov
cmp
cld
mov
dec
fwait
jl
sbb
dec
and
mov
lods
ret
add
out
jae
dec
mov
push
add
sti
repz
mov
mov
ljmp
out
popl
mov
pop
add
add
push
xor
add
add
in
str
imul
in
dec
dec
addr16
decb
dec
push
ds
leave
stos
nop
hlt
add
sub
pushf
pushf
sbb
es
lea
add
jne
add
dec
cmc
sbb
movsb
sbb
push
imul
add
jp
aaa
adc
adc
xchg
jge
mov
movl
push
add
inc
inc
fcmovbe
popa
sbbb
jp
sbb
add
add
or
aad
push
hlt
add
jl
add
fwait
out
cs
mov
xchg
add
mov
jb
fstpl
sbb
add
mov
popf
mov
inc
and
ficoml
in
push
mov
repnz
rolb
out
adc
movsl
add
xchg
jge
mov
add
cmp
loope
jb
loop
push
mov
xchg
pop
iret
dec
mov
imul
aaa
fisttpll
repnz
dec
in
pop
add
xchg
add
mov
add
and
fnstsw
cmp
push
jnp
jmp
add
add
addb
xor
es
dec
test
aas
popf
icebp
lea
jmp
mov
outsb
pushl
push
jle
jnp
xlat
stos
mov
xor
cmpsb
mov
aad
push
pop
push
add
add
dec
jne
cmc
mov
pop
iret
sub
mov
add
add
psubusw
add
cltd
outsl
pop
clc
leave
sbb
testb
js
cmpsl
movl
imul
xchg
testl
add
add
cmp
in
clts
imul
icebp
pop
movsb
loope
or
push
push
push
scas
add
add
bound
cmp
outsb
pop
inc
add
fists
cltd
inc
iret
shll
faddl
xchg
roll
gs
pop
je
add
pop
xor
jmp
negb
fcmovne
inc
jo
fistl
adc
fimuls
pop
xchg
jns
add
mov
inc
outsb
jge
xchg
ds
movsl
aam
mov
xor
sbb
daa
cltd
out
test
cmc
mov
mov
addl
add
pop
pushl
and
sub
sub
daa
sbb
cli
test
add
xor
int3
negl
test
cmp
mov
outsb
and
pop
js,pt
add
test
add
orl
mov
jne
stos
inc
add
add
cwtl
add
iret
cli
xlat
arpl
lods
add
mov
add
hlt
jb
pop
imul
lahf
das
add
xchg
cltd
mov
pop
es
adc
add
mov
decb
jl
je
cmp
jle
adc
jne
push
add
aam
push
int3
leave
stos
and
xor
mul
les
add
data16
jp
cmp
add
add
jo
repz
xor
add
cmp
outsl
pop
movl
fs
jmp
adc
into
xchg
mov
pop
mov
repnz
aas
data16
pop
cli
cwtl
sub
inc
fucom
add
out
add
cmp
roll
outsb
out
xor
push
xchg
bound
ds
add
add
push
add
and
xchg
xor
popa
scas
and
add
sub
aam
shlb
test
mov
int
add
repz
or
leave
pop
fisttps
and
or
add
mov
pop
xchg
jbe
outsl
push
jns
add
popa
cwtl
pop
aaa
mov
andl
add
pop
sub
mov
sbb
les
push
add
jno
enter
xchg
outsb
mov
or
and
insl
or
dec
aaa
aas
in
push
lock
cmp
or
outsl
or
mov
add
mov
movsl
xchg
outsl
rorb
movsl
add
add
cmpsb
je
adc
xchg
call
xchg
sbb
add
adc
pop
sbb
add
add
es
leave
fisubl
leave
repnz
xor
mov
push
jb
or
addb
movsl
mov
ljmp
popf
dec
mov
add
add
pop
add
sarb
jecxz
xchg
xchg
add
cmp
int3
fsubrs
mov
add
ret
aad
add
jne
popa
push
pop
dec
xchg
mov
fsubs
add
int3
int3
add
sti
or
inc
ret
add
out
mov
lret
lea
add
addr16
and
mov
dec
add
add
stos
add
xor
inc
inc
out
test
mov
or
push
fstl
mov
sub
loope
sbb
dec
scas
xlat
jne
dec
in
jle
add
inc
je
dec
jb
sbb
loope
inc
add
jmp
cltd
push
push
adc
mov
out
stos
ret
outsl
jns
adcb
sti
sub
xor
jb
int3
aam
mov
and
adc
add
and
dec
push
in
ja
push
clc
adc
dec
add
dec
adc
gs
add
push
jns
xor
mov
js
aad
mov
add
cli
add
sub
add
out
jmp
push
mov
out
mov
out
add
mov
bound
jmp
notb
fsub
scas
add
arpl
xor
lods
fimuls
add
adc
out
cwtl
stos
inc
inc
xchg
fiaddl
call
fisubl
jp
lcall
sbb
out
nop
mov
mov
push
lods
add
push
bound
lcall
add
les
mov
outsl
ss
inc
lahf
scas
out
mov
cmp
cmp
add
out
jnp
jbe
dec
pop
cltd
shlb
lahf
mov
icebp
adc
xchg
leave
mov
push
mov
mov
lds
add
fbstp
adc
add
dec
imul
cmp
call
dec
and
and
aas
dec
mov
adc
xchg
icebp
dec
push
add
leave
stc
imul
imulb
pusha
or
pusha
push
pop
and
mov
lret
lahf
cmc
stos
int3
es
into
sarb
hlt
push
or
sarb
lds
pop
add
add
mov
inc
fcomi
aad
arpl
fimuls
xchg
and
mov
cli
mov
adc
fldenv
add
sub
adc
and
xchg
add
add
add
mov
test
jo
pop
pop
or
test
ss
cmp
xor
repz
add
xchg
mov
mov
jno
bound
icebp
mov
mov
mov
xchg
repz
sti
sbbb
add
pop
xchg
push
inc
add
sbb
add
sbb
sub
jnp
cmp
test
pop
aaa
add
jne
cmp
lock
daa
sub
and
dec
push
int3
pop
add
sbb
lods
add
push
scas
enter
push
or
xchg
nop
mov
inc
jmp
push
dec
add
scas
jge
int
cltd
jp
aaa
jb
add
dec
popf
mov
jne
inc
add
aaa
push
aaa
inc
bound
mov
add
mov
mov
jmp
lcall
or
push
mov
cmc
pop
les
jno
or
add
or
test
jmp
add
mov
inc
or
inc
push
test
fiadds
pop
aam
add
adc
loop
add
lret
int
out
lret
arpl
add
inc
je
lock
add
add
push
inc
es
inc
xchg
das
cmp
loope
sbb
xchg
cli
imul
jnp
add
push
mov
ss
xchg
add
lcall
dec
add
setae
add
sub
sbb
pop
mov
and
dec
ss
out
add
add
or
jnp
add
outsb
xor
loope
add
adc
loope
cmp
int
int3
aam
ds
scas
jb
nop
stos
xor
lods
js
popa
dec
mov
xor
xchg
add
in
cmp
push
add
test
jl
lcall
add
mov
pop
lock
stos
sbb
mov
add
fsts
mov
pop
jge
lcall
aad
faddl
lret
add
dec
aam
xor
adc
add
cmp
aam
test
cltd
ret
push
flds
in
add
mov
sbb
ds
in
rorb
or
fnstsw
je
stc
dec
cltd
popa
xchg
add
add
fistpll
sbb
add
test
lret
mov
cmpsl
dec
lds
scas
and
mov
out
mov
iret
add
mov
cmp
mov
xlat
pop
lock
jae
sub
add
jno
stos
jmp
cmp
cmpsl
aad
mov
jmp
add
inc
add
cli
aad
or
xor
sti
stos
push
mov
mov
mov
imul
mov
sbb
fidivs
dec
jbe
arpl
lock
call
sahf
inc
add
mov
addl
mov
shlb
dec
inc
or
push
cmp
aas
inc
lods
enter
mov
push
add
xlat
rcrb
pop
enter
test
inc
push
mov
mov
mov
loope
mov
xor
in
add
adc
add
pop
add
call
das
iret
xor
les
data16
xor
add
inc
and
sub
mov
add
add
pushf
lret
cs
outsb
mov
mov
jge
daa
add
sets
and
sbb
fcompl
adc
cmp
push
mov
xchg
add
push
lods
insb
nop
sub
add
cmp
stos
cmp
fnstenv
bound
lock
lret
movsb
sar
add
cmp
pusha
fwait
add
or
icebp
pop
pop
cmp
mov
add
add
sub
mov
xchg
scas
in
dec
lret
shlb
add
mov
xchg
cltd
cltd
scas
cmp
xchg
mov
fidivs
inc
add
inc
fnstenv
movl
xor
xor
mov
pop
cli
lcall
ror
add
sbb
mov
sub
addr16
fldl2e
jg
arpl
sub
dec
add
add
cld
sub
mov
mov
sbb
popf
jl
test
add
adc
hlt
outsl
cli
cmpsb
enter
mov
out
dec
jl
inc
cmp
or
jge
inc
loop
add
imul
enter
add
mov
es
cmpsl
add
add
loop
add
mov
pop
out
push
lods
aaa
aas
dec
mov
xor
orb
add
add
stc
mov
mov
stos
rolb
pop
aad
fadds
jnp
cmpsb
dec
stos
and
sub
or
jecxz
xchg
dec
das
les
jo
xor
add
and
xor
xor
pop
iret
in
push
imul
inc
or
mov
add
mov
xorb
mov
clc
jmp
lods
dec
ret
and
add
add
je
pop
jp
push
xchg
push
aad
cmc
daa
addr16
addr16
cmp
fnstcw
add
insb
jg
add
push
lods
add
or
mov
aad
rcrb
adc
pop
sub
out
rolb
inc
or
popa
sarb
or
sub
rcl
std
jb
stc
in
rorb
push
sbb
xor
out
out
mov
dec
filds
rcrb
push
daa
or
add
add
scas
cmp
je
test
jo
insl
cmc
lret
add
add
loope
les
push
mov
xchg
and
sbbb
add
add
adc
push
rorl
and
add
push
adc
addr16
mov
std
je
bound
mov
and
stos
outsl
stc
mov
add
sbb
add
cltd
jnp
sub
xor
pop
imul
das
or
inc
and
fldt
in
pusha
and
inc
out
cwtl
sbb
add
and
sbb
xchg
or
xchg
add
sbb
sbb
mov
mov
fidivrs
inc
add
push
mov
incb
das
cmp
mov
add
pop
aad
movaps
add
sbbb
pop
sbb
add
leave
pop
divb
fisttps
data16
mov
and
xchg
mov
xchg
xor
in
lds
mov
push
add
out
cmp
adc
rcrl
ss
pop
inc
and
mov
push
int
lock
data16
push
xor
add
test
loop
push
loop
dec
and
dec
mov
or
lret
daa
add
sub
and
fsubrp
into
icebp
adc
mov
iret
shl
fisttps
sar
add
inc
lahf
jae
add
or
daa
xor
add
add
rclb
add
mov
push
sub
fsubrl
orb
xchg
add
mov
lods
jmp
push
push
dec
push
jp
xchg
pusha
adc
push
aam
lret
xor
adc
leave
nop
jge
in
shrl
add
mov
lret
ljmp
add
lock
imul
inc
cmc
sbbb
clc
add
inc
cmp
dec
xor
daa
stc
inc
repz
cld
lret
setp
scas
push
adc
or
jmp
popa
pop
pop
mov
inc
inc
loopne
fcoml
enter
sub
pop
or
fsts
sub
mov
int3
gs
xchg
cwtl
xchg
cmp
cmpsb
and
loopne
mov
flds
movb
push
add
mov
std
ficompl
jge
and
loop
fbstp
psubw
add
or
cmpb
data16
xchg
out
cmpsb
add
mov
push
add
das
mov
inc
inc
imul
adc
adc
add
or
add
inc
out
cs
fdivrl
add
pop
lock
add
adc
pusha
rcl
jg
add
add
push
imul
add
andl
dec
mov
dec
inc
mov
in
sub
add
or
fst
jl
xchg
fs
es
add
rorl
add
insb
jae
add
inc
jge
aas
mov
add
xchg
add
mov
add
xchg
ffree
fsubr
pop
mov
xor
xchg
or
pop
aad
cwtl
cmp
xchg
lahf
ljmp
in
lea
xor
fs
adc
mov
fmul
xchg
push
addr16
jle
dec
add
fs
divb
rclb
and
movsb
push
sti
mov
push
sbb
int
aas
add
jo
push
lds
adc
subb
mov
sarb
fwait
dec
dec
dec
and
insb
lahf
sbb
mov
add
jle
push
jp
xor
add
aas
stos
hlt
adc
pop
loop
mov
ret
in
jbe,pt
sbb
cmp
or
add
jge
cld
dec
mov
cmp
add
dec
xchg
addb
or
add
fiaddl
iret
dec
mov
sub
push
sub
xchg
inc
mov
push
sub
lds
loop
add
cli
sub
jns
insl
bound
dec
adc
dec
mov
cli
enter
cltd
data16
sub
fists
or
repz
or
clc
popf
adc
push
dec
out
imul
mov
add
add
jge
add
pop
adc
sbb
cmp
pop
pop
shll
test
int3
popa
out
xlat
gs
mov
dec
push
adc
lock
xor
pop
ss
inc
add
inc
push
js
sub
push
jbe
addb
aam
out
sbb
cmp
push
push
add
pop
cwtl
pop
push
stos
test
cli
or
ds
lods
ja
and
mov
add
ds
aam
add
add
sbb
in
mov
ret
mov
mov
dec
add
fadds
cld
in
xor
adc
push
add
cmc
push
mov
add
xor
sahf
std
mov
cmp
xor
fsubrs
add
dec
testl
and
xchg
negb
xor
shll
push
mov
aad
mov
insb
jo
jbe
xlat
add
xchg
mov
cli
cmp
inc
bound
loop
lret
hlt
or
jmp
jo
jnp
sbb
cmp
movsb
subb
add
pop
sub
xor
inc
clc
mov
adc
add
xor
jmp
add
lea
jmp
loope
push
pop
xlat
sahf
or
mov
scas
mov
sbb
and
add
xor
jns
jg
test
xor
aas
insl
add
fistl
nop
adc
push
cwtl
cmp
aam
cmp
adc
imul
in
pop
pop
es
jae
dec
mov
add
mov
les
mov
insl
dec
mov
push
repz
mov
xchg
inc
imul
xlat
inc
lock
fisubs
std
aad
xchg
fidivrs
and
imul
inc
fdivl
mov
inc
dec
inc
mov
cmp
and
repnz
jmp
cmc
xchg
add
ds
inc
add
or
xor
jbe
test
lea
pop
xchg
fnsave
mov
sub
sar
push
out
ss
es
pop
hlt
cmpsb
cmp
lods
int3
cmc
add
push
mov
sbb
cmp
inc
add
add
clc
adc
mov
jo
push
fidivrl
mov
pop
test
add
mov
mov
xchg
xchg
and
mov
or
sub
gs
mov
ds
sub
call
or
mov
aam
addb
cmp
adc
imul
add
inc
jo
in
addr16
inc
addb
xchg
dec
pop
cltd
sub
push
push
add
fs
jbe
add
popf
aad
dec
inc
idivb
jecxz
xor
sahf
leave
outsb
inc
mov
dec
bound
xchg
nop
push
pop
sbb
push
mov
arpl
bound
push
cwtl
insl
dec
add
sarl
insb
repnz
or
push
lahf
or
testb
dec
sbb
pop
out
repnz
scas
in
inc
fldcw
push
jb
add
add
and
jp
outsl
xor
mov
out
add
add
mov
jmp
sub
sub
enter
add
jl
popl
stc
and
xor
mov
loopne
je
loope
inc
mov
jl
jo
add
clc
pop
outsl
pop
cli
sub
push
cmp
dec
inc
bound
add
jmp
xor
rclb
das
daa
pop
add
out
daa
sub
adc
in
xchg
mov
and
jmp
mov
movb
dec
stos
jg
lods
jns
push
je
inc
jo
sbb
repz
jp
jge
add
roll
pop
cmpsb
and
add
cmp
add
ljmp
pop
je
add
rorl
mov
lods
xchg
push
fstpt
test
cmp
fs
cwtl
mov
imul
cmp
push
sbb
dec
lock
mov
mov
call
int
shrl
adc
add
add
jmp
xchg
sub
add
cli
outsl
and
cwtl
mov
mov
adc
jg
call
cltd
test
stc
dec
sbb
dec
mov
xor
mov
pop
orb
sbb
sbb
sbb
pop
pcmpgtb
ljmp
sbb
cmp
test
pop
cltd
out
xchg
addl
add
sti
and
sbb
rcrb
jne
inc
sbb
lock
sbb
or
mul
daa
jle
in
insb
and
mov
adc
jge
pushf
jno
cmpsl
repnz
sub
add
out
xor
cmpsl
popf
push
push
les
rorl
adc
sub
push
fldl
push
sub
mov
add
adc
adc
or
add
pushf
add
jo
test
dec
sbb
in
jo
add
cmp
push
lods
adc
xor
pop
pop
in
jp
les
inc
fdivl
int
jecxz
cltd
int
and
cwtl
imul
sbb
ret
shll
cmp
repz
xchg
imul
push
adc
mov
sbb
imul
int
pop
lcall
sahf
mov
dec
aaa
out
popf
xchg
jnp
clc
lcall
add
clc
push
and
int3
fsub
push
sub
inc
or
loopne
push
sbb
jnp
lods
or
mov
insb
insb
loop
adc
insl
call
sub
ret
and
inc
idivb
loope
and
ret
adc
arpl
mov
push
jle
push
jnp
in
push
mov
add
lret
cmp
insl
adcb
add
ljmp
daa
add
aad
add
jns
or
add
add
into
jp
outsl
aam
fnsave
out
into
icebp
daa
jge
jns
xor
push
cmc
mov
jp
sub
pop
in
into
lcall
fs
mull
and
xchg
add
in
add
jmp
mov
sub
jg
inc
dec
lods
test
loope
add
mov
add
imul
bound
jae
pop
xor
es
lods
jp
lock
pop
add
js
rcr
fiadds
cs
mov
jmp
aaa
incb
jnp
add
pop
or
add
ja
cltd
push
sub
test
inc
pop
lret
pushf
fcoml
or
sub
sti
lea
xchg
add
insl
inc
or
mov
fmull
add
jg
and
push
add
in
push
sahf
mov
ficoms
lcall
insb
cld
dec
xor
test
ds
lcall
sbb
jle
dec
mov
mov
push
cmp
addr16
add
pusha
lret
add
fstpl
hlt
add
rcl
shll
daa
push
fcomi
add
lret
add
xchg
xor
jmp
sub
cwtl
inc
cmp
ljmp
pushf
pop
add
scas
in
cmpsb
fcmovnu
pop
lea
mov
inc
clc
pop
xchg
and
mov
outsl
sbb
cmp
add
inc
lods
addl
shl
add
add
cwtl
aam
add
inc
adc
cmp
testl
mov
add
adc
jmp
scas
mov
jne
xchg
push
add
jb
or
mov
add
out
add
push
add
iret
jne
pop
add
pushf
xchg
sahf
sub
mov
mov
std
into
add
add
and
mov
mov
call
add
add
xor
testb
loope
ljmp
xchg
pop
add
mov
ret
mov
or
jmp
pop
dec
insb
sub
popl
stos
adc
mov
add
inc
pop
xchg
out
out
aaa
mov
add
dec
popa
fwait
add
add
inc
add
xchg
inc
fiaddl
add
in
mov
add
jle
scas
push
loop
add
mov
and
hlt
add
rcll
sbb
hlt
add
push
mov
mov
xor
xor
xor
add
dec
mov
imul
lods
sahf
or
xorb
add
dec
add
xor
sarl
cmp
add
cmp
dec
stc
fdivs
add
insb
push
addr16
imul
and
xor
cltd
data16
jnp
pop
mov
pop
cmp
out
insb
inc
inc
xor
xor
jle
js
stc
iret
add
mov
dec
test
add
xchg
dec
movsb
lds
sub
push
loop
add
mov
sub
imul
jge
push
jmp
xchg
repz
int3
mov
mov
cmp
jbe
inc
xchg
ret
add
lods
xlat
movb
add
sti
mov
pop
inc
mov
repnz
mov
jp
xor
cmc
mov
dec
sbb
andl
add
dec
and
int
mov
fadds
mov
lret
aam
add
cmp
movb
mov
pop
leave
mov
insl
repnz
jns
push
sbb
shrb
add
add
test
rcrl
add
outsb
inc
inc
push
inc
stos
mov
mulb
mov
add
add
in
fwait
clc
xchg
mov
mov
and
insb
mov
add
xor
movsb
xchg
add
mov
xlat
add
imul
add
adc
jne
mov
test
add
add
add
clc
leave
js
movb
das
jmp
add
enter
cmp
mov
popa
inc
fisubrs
cmc
dec
push
xchg
addl
movsb
gs
sbb
incl
mov
xchg
mov
dec
enter
pop
mov
xchg
pop
sti
sbb
cmc
add
icebp
sub
add
ds
lods
xchg
imul
cmpsb
mov
std
les
xchg
mov
sti
pop
mov
mov
push
ljmp
hlt
push
dec
cs
push
jl
mov
bound
and
dec
or
dec
mov
outsl
lret
outsl
add
inc
cli
xchg
cmpsl
cmpsl
and
xchg
nop
push
je
mov
xchg
mov
loop
test
fistpl
xor
rcl
pop
adc
pop
lods
pop
sub
pop
add
xchg
test
cmp
xor
adc
stc
mov
sub
stc
stos
imul
into
push
xor
mov
jg
mov
in
mov
or
sahf
adc
dec
out
in
pop
xor
mov
jno
add
div
jmp
inc
es
pushf
mov
add
clc
pop
bound
mov
js
add
adc
mov
dec
lods
fs
roll
pop
cld
orb
rolb
mov
xor
sbb
add
pop
outsl
mov
mov
add
movsb
push
sbb
xlat
shrl
movsl
jns
push
add
or
inc
into
cld
add
pop
jbe
xchg
rorb
movsl
sub
pusha
or
fwait
inc
jl
add
jmp
mov
sbb
leave
insb
stos
xor
jo
sbbb
lahf
add
imul
adc
mov
add
inc
cltd
add
push
cltd
mov
mov
sbb
add
adc
dec
add
sbb
mov
sahf
mov
push
mov
push
pop
mov
jmp
xor
add
dec
pop
or
jns
ja
sbb
mov
pop
mov
add
lods
mov
inc
add
mov
jmp
mov
jno
jbe
xor
out
sbb
stos
cmp
jg
ds
loope
push
add
and
imul
mov
mov
fsubrl
lods
test
pop
pop
add
sbb
popa
jbe
add
lea
pop
pop
add
push
push
fldl
ja
and
mov
push
fiadds
jmp
add
mov
daa
sub
add
popf
int3
popa
int3
fs
push
imul
enter
adc
sub
jbe
xchg
add
mov
ltr
add
mov
shll
movsl
or
mov
test
xchg
dec
add
cmpb
lds
mov
xchg
jno
add
add
and
cli
repz
mov
ret
add
outsl
add
add
repnz
repz
sub
inc
aaa
adc
outsb
jo
int
mov
aaa
jle
adc
inc
clc
ss
loope
jne
jp
and
push
movl
mov
call
in
add
add
imul
cs
add
leave
pop
add
fldl
sbb
popf
mov
fcmovbe
enter
loop
push
sub
xchg
adc
loope
rclb
add
sub
in
pop
mov
mov
fcoml
push
xor
mov
and
xchg
inc
pop
or
dec
add
je
test
cmp
ds
insl
dec
adc
push
push
in
pop
add
jge
in
aaa
mov
aam
add
jle
add
lods
stc
dec
inc
dec
lcall
ds
les
dec
adc
sbb
jns
pop
pop
and
push
loop
mov
fs
dec
fsubr
ret
xchg
or
xchg
push
dec
gs
cmc
decl
cmpsl
addr16
mov
pushf
pop
mov
jge
mov
jl
add
jnp
cmp
stc
push
lods
inc
ret
mov
setnp
loop
stc
pop
mov
mov
ss
lret
lcall
sbb
in
call
xor
out
sbb
mov
pusha
ficompl
pop
xchg
hlt
lcall
enter
push
lea
les
ficoml
and
and
in
mov
or
add
adc
ljmp
sub
xor
jle
mov
popf
push
movsl
adc
test
js
jecxz
invd
roll
add
add
mov
cmp
sub
add
int3
and
mov
bound
cmc
int3
out
aam
add
xor
adc
adc
sub
sbb
xor
xor
call
jae
je
cwtl
jae
mov
ja
inc
mov
mov
xchg
popa
jns
je
pop
mov
sbb
scas
jne
loop
cli
mov
mov
mov
in
mov
rcr
aaa
add
lea
call
xlat
push
arpl
fldenv
xchg
mov
loop
push
add
sbb
je
xor
imul
test
pusha
test
sub
rclb
les
push
add
mov
fdivrl
cmpl
xchg
sub
mov
add
jno
les
inc
mov
mov
add
call
add
xor
or
fisttps
addr16
mov
add
fimuls
sbb
outsl
add
lret
inc
es
stos
iret
insb
add
mov
daa
xchg
jl
xor
xchg
ret
movsl
scas
sbb
add
and
test
imul
stc
out
pop
push
jge
fldenv
imul
jo
add
lahf
add
pop
mov
push
rcrl
push
jge
mov
mov
jnp
nop
js
iret
cmpsb
adcb
out
clc
or
mov
add
lock
fs
mov
in
gs
sar
data16
ret
in
arpl
ja
or
faddl
sub
repz
mov
and
js
sub
mov
inc
cmp
leave
prefetch
popa
add
pop
negb
lods
lcall
iret
call
data16
lods
add
add
sti
jb
mov
jb
pop
andb
stos
inc
je
push
das
call
add
dec
inc
out
xchg
xchg
insl
out
xchg
call
fnsave
add
or
cmpsl
jge
cmp
sub
pop
jp
pop
popf
xchg
jg
adcl
ja
push
dec
pop
add
inc
add
bound
les
cmpsb
outsb
and
insb
cli
mov
loopne
lcall
adc
rolb
mov
and
scas
add
mov
pop
mov
sub
or
sub
dec
add
push
lods
cltd
add
imul
addb
add
add
out
mov
push
in
andl
jle
stc
jle
add
add
sub
mov
add
cli
add
jne
clc
std
dec
dec
add
sub
test
xchg
or
add
push
add
popf
add
mov
add
sbb
and
cmpsl
add
xchg
add
mov
or
imul
das
loopne
call
sti
add
fwait
pop
arpl
add
nop
lods
sub
jecxz
lahf
xchg
repnz
sbb
add
sti
push
jae
out
pop
arpl
dec
in
ficompl
adc
push
dec
xchg
insl
dec
xchg
push
sbb
or
std
sub
push
adcb
loopne
sbb
aas
sub
aam
mov
inc
add
pushf
test
mov
aam
add
add
and
dec
into
fs
dec
int
jne
loop
test
add
xchg
jg
xchg
adc
and
dec
sub
imul
daa
add
ljmp
add
outsb
jo
or
jnp
sbb
add
imul
xchg
ficoms
mov
pop
sub
adc
outsl
mov
sahf
jns
scas
and
sahf
inc
jb
das
stos
add
fadd
cmp
fisubrl
call
insl
sub
push
js
dec
loopne
cmp
mov
dec
dec
push
dec
mov
int
adc
mov
pop
add
int
enter
jp
sti
push
add
subl
outsl
mov
out
imul
bound
int3
das
xchg
and
sub
jg
add
out
clc
add
xchg
pusha
pop
in
cltd
cmp
add
add
rcl
add
cmpsb
rolb
or
in
imul
add
mov
push
scas
repnz
pop
mov
push
fcmovnb
scas
ja
or
jp
test
shll
dec
les
popf
mov
jle
xor
or
js
pop
sub
jmp
cmp
inc
add
mov
add
add
mov
ljmp
or
push
add
xchg
jnp
add
xchg
mov
cmp
cmpsb
in
jae
add
fdiv
daa
cmp
into
push
fnsave
dec
or
jp
add
fdivrl
je
sar
divb
add
adc
inc
lds
rcrb
fistpll
aas
jb
xchg
sub
je
mov
xor
mov
mov
xor
cli
clc
add
iret
jmp
out
test
popf
add
dec
sub
les
jbe
add
js
adcb
ret
rolb
adc
xchg
xchg
sub
xchg
test
stos
popa
sub
cwtl
data16
push
dec
ljmp
mov
aad
push
add
mov
popa
pushf
shlb
lea
cld
icebp
inc
inc
stos
add
cmpsl
hlt
ss
add
in
mov
add
add
push
in
pusha
aam
add
adc
inc
jno
xorb
mov
add
fwait
mov
cli
sub
inc
cmp
leave
push
les
clc
sbb
push
lret
adc
iret
sbbb
xor
sub
scas
out
loope
add
mov
outsl
leave
push
xor
dec
add
xor
add
add
xchg
adc
cmp
dec
lock
sbb
lea
ret
pop
xchg
loop
jl
pop
lock
ljmp
or
loope
cmp
add
adc
add
mov
pop
or
inc
cli
out
outsb
sub
cltd
or
pop
add
add
adc
das
or
or
xchg
pop
or
pop
js
in
imul
xor
aad
movsb
test
adc
pop
adc
ficomps
mov
push
add
addr16
push
or
sbb
sar
aaa
js
add
scas
jecxz
and
sbb
dec
hlt
mov
adc
mov
inc
roll
enter
xor
jl
fdivrp
xor
xor
lds
and
add
mov
add
sbb
jp
sbb
add
add
adc
xchg
jns
push
out
dec
test
shll
add
divb
or
and
fdivrp
lcall
mov
mov
sbb
sub
push
fisubl
xor
xchg
cmc
push
mov
push
push
jl
sub
adc
inc
add
jg,pt
mov
scas
dec
sbbl
out
push
das
loopne
cmp
pop
and
arpl
add
adc
pop
add
sub
and
mov
out
iret
pop
shlb
push
add
mov
mov
aam
mov
mov
mov
inc
pcmpgtb
dec
lods
add
dec
sbb
xlat
jmp
adc
push
lock
add
jp
xor
xor
cli
inc
sarb
mov
inc
in
in
xchg
pop
add
lcall
cmpsb
mov
jmp
mov
and
jns
xor
add
add
mov
mov
sbb
add
push
dec
mov
fmull
xchg
mov
mov
pop
add
push
mov
dec
mov
les
daa
add
gs
into
iret
pop
mov
mov
push
push
jae
cwtl
add
add
sbb
mov
push
xchg
insb
jl
mov
xor
mov
sub
mov
aad
add
cmpsb
add
aad
push
pop
cli
into
das
mov
push
add
mov
in
mov
and
add
mov
push
mov
mov
pop
jmp
add
movsl
jb
adc
add
add
inc
sub
pushf
lods
pop
pushl
std
add
xchg
xchg
fwait
pop
les
sub
gs
add
in
fcmovu
mov
inc
xchg
nop
push
mov
add
cli
lret
into
shl
lods
divb
jp
pop
add
and
cmp
jno
int3
adc
aam
in
xchg
test
inc
xchg
dec
fnsave
arpl
mov
test
add
insl
fwait
or
add
sbb
test
or
xchg
das
movsb
add
add
and
ljmp
nop
mov
fcomi
testl
cmp
sub
lret
push
mov
adc
std
pop
dec
pop
sti
xor
add
add
and
adc
stos
insl
cmp
adc
cmc
add
sub
out
jl
lahf
pop
pop
adc
ret
push
cmp
mov
dec
testl
inc
jbe
hlt
lods
fwait
add
std
dec
xor
std
cmpsb
aam
ss
jmp
data16
add
kmovb
arpl
lods
add
test
fildl
sub
in
sbb
fwait
lock
mov
jbe
add
in
push
xor
fstpt
jp
ror
lds
push
cmp
xor
xor
add
xchg
jb
adc
mov
xor
cmp
popf
cs
inc
add
movsb
add
mov
add
test
mov
roll
mov
add
jae
rcrb
adc
cs
fidivrl
or
xor
add
sarb
xor
jmp
or
cltd
adc
mov
sbb
add
add
idivb
pop
add
jp
cmp
add
add
mov
cmp
inc
dec
add
arpl
mov
pop
xlat
out
imul
push
or
push
popf
add
add
push
sbbl
add
adc
ret
frstor
jl
xor
xchg
dec
mov
mov
iret
inc
scas
push
add
out
and
lock
scas
mov
pop
test
mov
mov
addb
loopne
cmc
bound
loopne
mov
push
xor
push
cmp
pop
mov
int3
ficompl
add
add
push
loopne
add
add
and
add
sub
jbe
ss
add
xchg
push
fs
fdivl
dec
sub
xchg
add
jle
int
inc
aas
add
mov
mov
aam
hlt
add
in
adc
jns
lret
add
cmp
cmc
daa
mov
call
dec
xchg
rolb
or
data16
jp
call
xlat
inc
add
xor
pop
xchg
pop
ret
cwtl
lea
add
mov
cmp
add
dec
add
or
push
rcl
cmp
dec
shll
xchg
jo
add
xchg
int
or
adc
lods
cmpsb
push
mov
cmpsl
pop
mov
push
and
xchg
add
push
call
jg
push
sbb
ss
pushf
negl
push
shlb
push
int
mov
icebp
add
adc
add
stc
push
data16
adc
add
push
sbb
cli
inc
movsl
or
add
pop
jbe
ss
cli
pop
mov
push
repz
clc
inc
jne
ret
adc
adc
outsb
call
and
jp
fsubr
or
data16
ds
dec
xchg
or
pusha
lret
movsb
aas
add
bound
sub
iret
push
movsl
add
movsb
ss
jo
and
cmp
fs
iret
dec
and
mov
mov
out
out
in
add
xorl
add
add
cmp
xor
es
add
sbb
push
or
inc
out
cmp
pop
lea
mov
xor
repnz
sti
dec
add
sti
pop
push
cmpsb
outsl
or
fcomp
add
jno
mov
adc
pop
loope
cmp
sbb
sbb
mov
push
or
xor
inc
mov
stos
push
scas
adc
sti
mov
sub
inc
es
add
out
call
movnti
test
lret
call
add
leave
je
jnp
add
call
pop
arpl
fs
nop
cmp
pushf
out
add
leave
or
out
pop
ficoms
add
add
jb
das
or
mov
sbb
sti
add
notl
popf
mov
adc
iret
out
in
mov
dec
push
add
jp
add
cmpsl
fistl
int
cmp
loope
add
mov
dec
je
dec
insl
or
xchg
rcll
in
pop
and
add
inc
lds
mov
iret
add
xchg
jbe
pop
add
and
jo
add
jnp
addl
mov
mov
aad
jns
insl
add
mov
ret
mov
xchg
mov
mov
pop
add
add
arpl
sahf
add
loop
add
cmpsl
sti
inc
lcall
clc
sbb
add
push
and
xchg
adc
repnz
fadds
pop
dec
cmc
leave
add
mov
add
ja
mov
je
add
outsb
add
das
in
leave
jns
aaa
out
push
test
pop
pop
xor
stos
mov
int3
out
mov
lahf
insl
jp
je
adc
popf
mov
mov
mov
stos
add
out
push
movsl
dec
out
xchg
adc
inc
xchg
push
adc
fistl
inc
mov
push
call
mov
aas
and
imul
add
lahf
fdivrp
and
bound
cmp
push
add
adc
in
dec
sub
aas
adcb
nop
cs
insb
add
inc
imul
push
pop
push
dec
fists
je
bound
add
or
lahf
sar
add
sbb
push
lods
xchg
int
insb
out
sub
sbb
push
lahf
inc
sarl
in
add
pop
stc
mov
pusha
add
lock
pop
icebp
hlt
ja
cmpsl
fimuls
leave
std
add
jbe
in
jns
lahf
jae
add
lahf
imul
std
je
mov
clc
jb
add
rcl
adc
mov
jb
js
sbb
mov
jecxz
ficomps
add
xchg
add
dec
sub
movsb
or
xchg
jnp
ds
xchg
dec
inc
movsl
data16
dec
cmp
ds
mov
push
mov
xor
lret
add
xor
lcall
ja
sub
add
mov
popa
cmp
jnp
loop
repz
mov
sahf
popf
dec
adc
in
mov
xchg
loop
sub
add
test
sub
sahf
xor
mov
ficoml
mov
pop
stc
enter
pop
ret
jbe
inc
xor
rolb
pop
adc
inc
es
lea
rol
add
idiv
rclb
add
cmp
enter
into
sub
push
push
ret
pop
add
jecxz
pop
cmp
inc
cli
daa
add
dec
mov
and
inc
dec
rcll
push
fs
data16
inc
add
outsl
dec
push
jle
adc
push
jns
mov
add
xor
mov
filds
das
out
jns
add
sbb
inc
ss
and
fcompl
sbb
push
add
pop
cmp
add
add
xchg
movsb
imul
cwtl
lcall
lea
lods
lar
cmc
ret
lcall
and
sub
cltd
add
mov
sub
shrl
jno
pop
sahf
pop
adc
aas
je
je
mov
xchg
cwtl
popf
push
push
fmuls
mov
jb
frstor
mov
in
lods
mov
add
mov
add
dec
dec
add
outsl
and
mov
sub
aas
repnz
mov
dec
insl
pop
mov
mov
add
pop
xor
fldl
add
aaa
adc
enter
sbb
sub
xchg
jg
xor
ficoml
std
jge
push
and
mov
fidivs
aam
add
xchg
pop
shll
cmp
repnz
mov
add
mov
in
call
lret
cmp
xor
mov
push
cmpsb
xchg
sub
xchg
add
js
arpl
cmp
dec
mov
loop
andb
mov
cmpb
mov
add
sub
lcall
add
jg
insb
cmp
pop
ljmp
add
in
out
xchg
addl
sbb
push
or
shll
add
add
ret
or
test
mov
add
nop
aad
fmuls
and
sub
or
adc
add
ret
shll
push
mov
jge
add
adc
add
bound
sub
or
out
ss
lods
add
and
imul
testb
mov
pop
fs
rcll
add
adc
cli
xchg
xor
add
jb
dec
mov
or
or
and
pop
out
inc
mov
add
mov
pusha
jno
xor
dec
mov
push
xor
js
push
bound
adc
add
push
ror
flds
popa
mov
mov
test
fwait
and
xor
add
stc
add
dec
sbb
mov
xchg
sub
scas
add
mov
sub
dec
rcll
sbb
insl
test
lret
sbb
sbb
lock
loope
jg
add
js
gs
add
lock
js
icebp
repnz
shl
dec
cmp
add
mov
jns
or
add
mov
pop
div
sbb
inc
cmp
xchg
loopne
inc
pop
insb
std
mov
orb
sbb
add
push
add
dec
adc
in
dec
shlb
nop
pop
add
cmp
cmp
icebp
sbb
mov
lods
adc
inc
mov
add
push
mov
add
add
lahf
push
aad
sub
add
test
push
dec
pop
mov
mov
inc
sti
add
je
xchg
xor
pushf
out
sub
movsb
int
inc
repz
jae
dec
and
adc
cmpsl
out
jle
push
cmp
hlt
mov
imul
xchg
cli
cmp
into
dec
add
pushf
fdivrl
or
mov
jl
cmp
mov
mov
push
testb
adc
addr16
je
scas
inc
sbb
cltd
dec
jbe
dec
aaa
dec
xor
inc
idivl
imulb
add
out
dec
enter
dec
shrl
sbb
dec
jp
sbb
xchg
gs
xor
repnz
arpl
jge
add
or
rolb
lea
inc
sub
mov
xor
fwait
push
cld
sbbl
into
stc
cli
fiaddl
lcall
xchg
adc
jae
mov
inc
mov
add
std
mov
sti
xchg
pop
outsb
aad
mov
add
loop
jl
mov
int3
push
aam
mov
or
test
flds
jbe
add
pusha
out
rorb
or
inc
shrb
rolb
pop
push
sub
jb
mov
mov
cld
add
cmp
lds
inc
add
add
add
push
arpl
mov
and
add
dec
add
clc
jns
mov
frstor
into
loope
jbe
cmp
outsb
and
add
mov
add
je
push
stos
fwait
pop
stos
sub
xchg
sbb
adc
andl
add
out
pop
xchg
ss
roll
push
outsb
add
add
dec
adc
loop
add
push
add
fimull
jg
mov
push
add
add
stos
add
add
add
addr16
add
add
pop
pop
xor
inc
add
adc
inc
inc
inc
shrb
ja
push
jbe
xor
mov
push
mov
dec
pop
call
push
or
mov
xchg
add
lret
pop
outsl
add
test
imul
repz
mov
mov
dec
movsl
addr16
jp
shl
dec
lds
stos
add
sbb
dec
std
push
cmp
xchg
fdivr
sbb
sub
jo
pop
lahf
lea
add
xchg
sbb
xchg
fldl
add
test
inc
add
cmp
xor
xor
sub
cmpb
xor
cmpsb
test
cs
add
lret
dec
sbb
add
pop
xor
add
test
enter
sub
xor
inc
mov
stos
or
cmp
or
mov
adc
std
call
aad
xlat
add
mov
xchg
movsb
mov
ficompl
les
sbb
mov
jb
mov
pop
fisubs
pop
addr16
cmp
add
jae
mov
push
add
sub
add
mov
push
push
add
cmpl
inc
fstps
lock
cmpsb
aad
popa
add
les
and
fdivs
mov
and
iret
ret
repnz
es
nop
popa
sahf
push
cmp
add
imul
push
dec
rclb
add
hlt
sub
rcrb
popa
cmpsl
mov
jmp
leave
addl
push
in
xor
in
pop
insl
fimull
xlat
in
sbb
adc
xorb
xchg
test
outsl
add
test
adc
js
sub
push
pop
sbb
add
out
xlat
ficompl
pop
push
cmp
out
dec
orl
rolb
xchg
add
aas
xchg
and
push
jmp
adc
scas
insl
gs
push
add
mov
in
pop
out
and
ficoml
mov
cmp
or
mov
xchg
mov
inc
shll
or
push
xor
push
je
test
aas
cmp
jno
nop
mov
inc
add
mov
add
shrb
mov
dec
push
loope
icebp
je
int3
sti
inc
and
test
cmc
and
aam
loope
inc
mov
push
outsl
mov
fisubrl
cwtl
add
call
pusha
xlat
add
adc
jl
dec
add
jle
or
inc
pop
add
xchg
add
cmp
dec
adc
mov
add
lcall
add
add
dec
orl
add
push
std
add
test
mov
xor
movsl
adc
sbb
pop
pop
loopne
sbbl
adcb
fmul
sbb
bound
jb
fidivrl
mov
and
add
ret
les
test
add
push
pop
addr16
push
pop
mov
rolb
sub
pop
add
out
push
or
mov
aam
lods
jbe
adc
popl
add
push
add
or
faddp
test
stc
popf
mov
int
push
aam
ja
pushf
hlt
push
leave
xor
cmp
cs
insl
outsl
mov
addr16
add
jno
mov
jae
add
add
adc
lret
add
mov
jle
clc
adc
rcll
ss
mov
mov
ficoml
loope
jge
xchg
dec
arpl
xor
movsl
mov
js
add
gs
mov
mov
sub
sahf
push
repz
jb
mov
add
dec
add
sub
push
jecxz
pop
shl
xor
pushf
lret
inc
jns
sbb
lock
xor
jb
sarb
lea
add
sbb
sub
idivb
push
xchg
nop
iret
sub
aam
dec
hlt
fsubr
test
add
insl
lea
lcall
fwait
outsl
lcall
and
jecxz
add
psraw
xor
inc
repnz
leave
hlt
add
add
rcrl
dec
push
pop
es
push
shld
or
cmpsb
add
dec
cltd
add
add
dec
add
ds
cmp
xor
dec
or
add
jno
lods
mov
popa
jo
out
jmp
xchg
pop
add
xor
lret
notl
add
xchg
mov
lods
xor
mov
dec
sbb
push
or
mov
xchg
pop
add
dec
push
shlb
arpl
sub
inc
int3
add
mov
push
sbbl
add
and
sub
sbb
push
mov
sbb
jmp
add
sub
and
fldl
add
pop
or
push
imul
add
cmp
jbe
adc
add
in
mov
jmp
ja
dec
push
lods
int3
aaa
scas
xchg
std
xor
mov
mov
sbb
out
cmp
into
cmp
outsb
add
loope
push
xor
insb
add
mov
int
inc
loop
add
or
sub
push
ja
outsb
jne
lea
mov
loop
add
xchg
nop
mov
pop
cwtl
testb
pop
cmpsb
cli
inc
mov
pop
add
xor
pop
inc
push
adc
iret
cmp
sub
cwtl
push
sbb
cmp
shr
fldt
add
lret
push
add
inc
sub
and
xchg
popa
jmp
pop
add
gs
pop
mov
mov
cmp
sti
cmp
jae
loopne
mov
cmpsb
xchg
xchg
daa
jne
add
lcall
xchg
loop
add
loope
pop
mov
outsl
mov
and
add
push
jmp
push
xchg
push
aam
add
add
add
xchg
ja
add
jo
adc
mov
popa
ret
add
jp
imul
subb
cli
fildl
jb
add
jno
mov
push
data16
add
push
cmp
add
add
cmp
cmp
sbb
mov
std
add
pop
cs
adc
add
daa
jns
sti
push
loope
mov
negb
insb
mov
pop
mov
adc
cmpsb
add
add
lret
inc
push
je
fimull
mov
dec
jg
pop
mov
cwtl
mov
cld
add
pop
cltd
jbe
mov
add
push
iret
jecxz
inc
nop
mov
pop
and
pop
xchg
rolb
in
add
je
loopne
cmc
add
jns
in
xchg
add
pop
pusha
jl
cmp
and
sbb
cmp
lods
xchg
mov
and
mov
or
test
add
mov
cld
xchg
dec
add
add
xor
stos
push
xor
subb
add
stc
es
inc
push
in
cmc
rolb
insb
mov
xor
inc
jl
add
inc
inc
fdivl
dec
sub
arpl
into
add
add
cmpsl
jp
adc
xabort
popa
inc
nop
fstps
daa
sub
dec
js
lcall
cmp
repnz
push
add
das
iret
jecxz
mov
add
add
push
adc
add
fildl
sbb
ja
dec
les
repnz
fmull
imulb
pusha
xlat
les
imul
shr
es
js
mov
lods
aas
xor
xchg
push
es
shl
aas
mov
dec
push
add
lds
add
or
jmp
pop
add
je
add
loope
pmulhuw
mov
inc
mov
int3
xchg
mov
sahf
inc
pop
icebp
in
movsl
mov
inc
inc
add
int
je
xchg
shll
sbb
cltd
pop
pop
out
mov
pop
add
xchg
ret
inc
out
xchg
push
mov
mov
add
pushf
dec
ret
pop
lcall
add
jle
mov
add
pop
pop
test
add
xor
addr16
cs
add
pop
add
es
imul
add
scas
insb
add
jne
je
mov
shrb
jecxz
sub
or
mov
add
sahf
cmp
add
jne
add
add
lods
cld
jge
jmp
outsl
cmpsb
jmp
jne
add
andl
imul
jns
pop
add
xor
daa
fcomps
ret
adcl
push
add
fidivs
pusha
lods
aam
aam
cmp
mov
movd
push
or
or
xchg
pop
mov
mov
add
nop
add
pop
inc
mov
push
sub
fwait
cmp
mov
jns
push
jnp
xor
add
xchg
stc
lds
push
sbb
enter
in
add
pop
cmp
add
jle
add
add
pop
mov
leave
add
mov
jmp
movsl
push
cmp
aas
dec
xchg
jb
stos
add
mov
ds
add
add
adc
add
add
cs
ljmp
addl
and
add
fldt
in
dec
arpl
or
or
mov
xor
outsb
aaa
xor
add
lret
add
and
ja
lahf
and
and
nop
inc
adc
leave
out
add
mov
dec
cmpsb
xor
pop
add
popf
nop
mov
repnz
mov
mov
cmp
arpl
out
add
pop
inc
jmp
lods
mov
and
inc
fldt
and
sbb
jecxz
xchg
scas
lds
or
insl
sub
ja
dec
lret
xor
lret
out
lds
insl
push
sbb
loopne
lret
inc
test
inc
and
add
inc
jl
jnp
daa
xchg
sub
flds
push
jns
out
stos
mov
jb
mov
ljmp
fildl
dec
push
or
dec
js
je
push
dec
add
push
push
add
lcall
add
add
in
insb
push
loope
add
mov
pusha
imul
jo
and
je
pop
sub
add
cltd
adc
dec
xchg
clc
pop
dec
mov
add
aas
enter
add
cld
mov
cmp
mov
loopne
shrb
fdivrp
cmova
pop
outsb
mov
mov
aad
stos
jbe
shll
and
add
mov
aad
push
inc
xchg
pop
mov
je
pop
add
or
pop
cmp
xor
add
add
xchg
pop
mov
jno
or
adc
int3
mov
ja
add
mov
lcall
adc
sar
daa
add
imul
int
test
add
inc
and
mov
pop
add
adc
stc
js
add
xor
add
in
in
popf
cs
add
add
dec
lods
insb
jge,pt
mov
and
xlat
add
and
rcll
jmp
notb
fldl
sbb
dec
mov
ds
test
cmpsl
add
adc
aad
adc
pushf
cmp
xor
fsubrs
push
sub
seta
push
out
cmp
cwtl
lahf
add
pop
testb
mov
or
push
es
add
adc
xchg
add
cmpsl
xchg
or
mov
popf
or
fcompl
dec
repz
scas
mov
jbe
mov
mov
push
cmpsl
cmp
pop
sub
add
addr16
add
pop
pop
enter
xchg
shll
xchg
testb
sbb
mov
add
push
outsb
jne
jo
push
movsl
jmp
add
mov
sub
aad
dec
inc
xchg
pop
sbb
xchg
sbb
add
cmp
jnp
add
push
fwait
inc
mov
inc
test
sub
add
adc
jae
inc
xchg
dec
push
jo
fimuls
jg
jbe
sub
push
xor
add
jbe
add
jne
add
arpl
xchg
pop
add
add
push
xor
es
out
mov
adc
pop
jno
in
ret
add
and
mov
xor
fimuls
dec
insb
call
mov
testl
pop
sti
jmp
int3
aas
lret
jo
into
shl
dec
xchg
stc
lcall
cmp
mov
icebp
ljmp
add
hlt
mov
xchg
mov
pop
mov
testl
sub
or
cmc
push
inc
cmc
dec
addl
add
add
sub
or
test
mov
sub
addl
mov
stc
ret
add
xlat
pop
push
xchg
xor
mov
jmp
cmp
icebp
add
dec
sahf
xor
and
std
jmp
stos
mov
lods
pop
js
add
sbb
pop
add
leave
pusha
leave
pop
out
add
and
add
xchg
lcall
and
sub
loope
push
lcall
into
add
adc
add
sbb
mov
xor
movsl
or
clc
cmp
add
add
or
inc
jp
int
in
ficoms
mov
out
int3
and
or
xor
jge
cmp
add
pop
and
add
das
jle
testb
mov
test
inc
mov
in
hlt
pop
mov
repnz
gs
or
call
or
dec
int3
add
sbb
mov
add
pushf
cmp
cwtl
fcomi
jne
leave
je
popa
push
outsl
imul
mov
pop
adc
int
mov
and
ljmp
jae
add
add
cs
or
add
das
jp
pop
mov
fidivl
jmp
and
add
test
cwtl
das
sbbb
hlt
dec
lret
xchg
popf
shll
jne
and
jmp
sahf
sti
sub
das
flds
sbb
push
lret
xchg
dec
add
mov
insl
jno
push
xor
mov
add
add
jle
dec
push
lea
mov
clc
mov
cltd
inc
jecxz
mov
add
or
or
aam
scas
and
lret
nop
and
xor
call
add
add
push
push
dec
pusha
int
xchg
cli
sub
or
mov
and
push
popa
ds
in
xor
adc
sbb
sbb
jb
and
mov
add
outsb
in
xchg
xchg
fldln2
cmp
xor
sbb
dec
in
mov
fsincos
push
je
pop
xor
test
mov
lret
sbb
fidivl
add
mov
add
add
add
mov
mov
mov
push
in
jge
dec
pop
add
sbb
jmp
dec
out
mov
aaa
das
aas
ds
pop
imul
pop
cmp
jecxz
add
add
int3
ja
add
loopne
in
cmovns
pop
add
add
flds
lods
out
call
inc
fiadds
mov
mull
adc
jmp
add
xchg
shlb
mov
add
subl
test
add
ljmp
insb
loop
jmp
leave
stos
mov
cmp
xchg
pop
addr16
or
ret
jne
mov
gs
fistps
pop
popf
mov
mov
std
jno
lods
fists
push
outsb
inc
adc
dec
add
cmp
xchg
jecxz
outsb
xor
xor
add
push
call
ljmp
add
and
adc
sub
ret
fs
and
dec
add
sub
das
add
es
adc
movsl
mov
es
or
jae
mov
loop
scas
add
imul
pop
fisttpl
jecxz
mov
cs
add
add
ja
mov
movl
add
sub
mov
incl
adc
icebp
cmpsb
fsts
int
data16
sub
sbb
push
push
cmp
pop
insl
add
and
mov
pop
pushf
addb
xor
add
push
mov
int
push
cld
sub
mov
sti
dec
pop
mov
scas
mov
das
mov
add
scas
stc
daa
pop
pop
aaa
push
aaa
add
sbb
fsubrs
cmpsb
add
imul
insl
mov
or
xchg
and
mov
push
push
std
sub
mov
ret
into
sbb
dec
fdiv
aad
hlt
add
popa
add
pop
add
pop
adc
add
or
dec
sub
insb
mov
jne
add
cmpsl
in
sbb
push
cs
push
nop
xlat
jno
divl
mov
stc
adc
add
mov
cld
sti
dec
aas
lcall
fisttpl
add
inc
loopne
dec
sbb
xchg
jne
or
mov
mov
dec
ja
and
jmp
mov
out
fsubrs
pop
mov
lock
xor
add
mov
cltd
cmp
sbb
xor
mov
jge
fcompl
xchg
outsb
cwtl
mov
pop
out
mov
mov
out
inc
dec
jmp
outsb
xor
sub
pop
jne
mov
stc
dec
add
cmpb
jnp
sahf
cmpsl
add
mov
movl
xchg
or
xchg
sbb
repz
in
dec
lahf
or
dec
jmp
lahf
loop
dec
aad
mov
xor
add
or
js
adc
cmpsl
mov
lret
mov
aas
mov
jns
xchg
xlat
lahf
mov
push
add
call
push
shlb
dec
cmpsb
pop
and
fadds
lret
test
arpl
jae
mov
repnz
cmp
push
xchg
xchg
je
test
sbb
psllq
add
aam
dec
jecxz
test
fimuls
arpl
movb
mov
push
push
xor
gs
xor
add
in
sub
or
mov
mov
fisubl
cmp
hlt
dec
adc
add
cmovbe
sbb
clc
aad
in
sbb
adc
ja
std
cmc
cwtl
das
mov
in
add
test
sti
mov
mov
add
cmp
dec
aaa
lods
shlb
jmp
adc
cli
push
in
sub
in
jle
outsb
xchg
xchg
xor
in
dec
in
cmpsl
in
sub
inc
push
aad
push
or
fmuls
dec
fwait
push
jl
push
lret
sbb
cmpl
stos
sub
xchg
xchg
pop
stc
pop
stos
std
pop
sbb
fcoms
sarl
pop
std
add
or
xor
pop
cld
mov
ss
xchg
add
test
pop
sub
aas
xlat
mov
icebp
rorl
dec
daa
jl
ss
jne
sti
add
add
cmpsb
lret
pop
pushf
lea
pusha
movsl
mov
sbb
mov
push
add
cltd
dec
aaa
insb
adcb
enter
lea
daa
and
and
mov
repnz
rcll
xchg
fldcw
inc
add
pop
inc
fs
inc
out
lds
mov
popa
cld
mov
mov
rolb
pop
fwait
xchg
imul
add
stos
loopne
rcrl
jecxz
sub
pop
cld
push
stos
call
xor
outsl
xchg
movsl
jns
jns
aaa
mov
es
repnz
je
cmp
xchg
add
jbe
daa
mov
pop
cmpsl
mov
jno
fdivs
push
fsubs
dec
jno
push
stos
jo,pn
jo
adc
cltd
xchg
pushf
int
add
ret
mov
xor
sarl
xchg
lret
test
mov
add
movsl
fbstp
roll
add
and
jns
dec
sbb
roll
mov
or
pop
xor
cmp
call
cmc
add
cmp
adc
enter
add
push
int3
dec
js
adc
cmpb
mov
sbb
sbb
cmpsl
and
rcrb
addr16
cmpsl
mov
in
add
sub
shl
shrl
push
cmpsb
hlt
mov
or
jmp
icebp
cli
pop
push
pop
mov
lahf
mov
xchg
scas
add
repz
cmpsl
push
add
mov
cltd
or
dec
jp
jbe
sub
data16
pop
test
add
jb
lcall
and
testl
dec
add
push
add
in
jo
sub
push
and
jnp
or
add
add
add
int
enter
mov
std
idiv
or
lret
pop
cmp
rolb
mov
add
push
mov
jb
negb
add
lahf
mov
jl
jl
jae
cwtl
scas
push
or
repnz
sub
ja
mov
in
push
mov
aam
xor
jno
ja
adc
cmp
add
test
add
mov
mov
call
mov
sbb
pushf
nop
jl
add
dec
fdivrs
jmp
fistl
or
add
mov
cmp
mov
add
dec
xor
push
test
mov
xchg
test
dec
mov
or
push
push
pop
pop
adc
sub
add
test
add
gs
clc
jmp
fs
jle
stos
xchg
repz
mov
cli
add
pushf
cmp
add
jne
add
add
add
lods
fstpl
fimull
mov
inc
lcall
or
mov
pushf
pop
push
xor
mov
add
clc
push
bnd
hlt
or
xchg
lea
call
or
dec
add
adc
add
ja
addl
aam
std
add
mov
aas
xor
sub
std
or
fstpl
ljmp
lcall
add
add
cmpsb
xor
fimull
inc
test
lods
add
lahf
cwtl
mov
push
dec
shrb
sub
adc
mov
add
cmp
inc
into
jge
mov
sub
or
mov
inc
int
xor
in
mov
arpl
pop
dec
xchg
lods
push
sarl
or
xchg
sahf
push
sbb
or
enter
dec
pop
dec
fistps
and
add
mov
xor
xchg
sbb
xor
repz
jnp
fmuls
mov
lds
cwtl
add
xchg
fsubrl
add
mov
add
mov
and
mov
int3
inc
lahf
add
pop
test
jo
dec
subb
sub
lret
jle
in
sbb
enter
leave
add
add
loopne
incb
add
add
in
aad
add
ljmp
loopne
lods
movsl
add
xchg
mov
cltd
add
cltd
hlt
jno
mov
mull
movsb
sbb
push
xchg
mov
mov
xor
nopl
andb
jmp
xchg
mov
jns
dec
push
xor
loope
test
pop
fcoml
cmp
ja
test
push
mov
dec
cmpsl
add
pushf
aad
cmpsb
xchg
scas
ret
add
mov
push
pmaddwd
loop
sbb
aaa
cmovbe
and
js
and
and
jmp
add
sub
jne
into
jecxz
pop
cmp
fwait
add
das
jb
xor
inc
in
data16
jo
add
dec
aas
das
adc
or
dec
repnz
mov
jp
mov
xor
and
mov
out
lock
arpl
or
jb
fisubrl
fildl
add
add
sahf
sub
add
inc
cld
jo
sub
dec
dec
sub
push
add
mov
jae
sbb
pop
jecxz
aas
xor
xor
les
or
rcrb
fwait
push
fdivs
sbb
dec
outsb
add
repnz
setnp
add
or
negb
jg
out
or
xchg
mov
xchg
and
push
jno
les
ret
add
leave
cmpsb
or
add
sub
push
jbe
add
addl
xor
loope
popa
std
add
popl
mov
sbb
sahf
cmpsl
add
mov
filds
sub
push
and
ret
jne
je
cltd
sub
cmpsb
test
cmc
cs
add
outsb
bound
jp
aam
cltd
push
mov
addr16
add
add
sub
add
insb
sub
add
mov
cmpsb
bnd
sarl
xchg
dec
clc
psrad
push
out
in
sbbl
pop
xor
xlat
jmp
subl
add
ljmp
mov
stos
or
mov
jbe
aam
cmpsl
jle
mov
cmp
daa
jp
xchg
leave
dec
call
add
add
and
leave
inc
inc
cmp
pop
filds
pop
push
sti
dec
imul
cltd
sahf
cmc
int
add
and
lahf
popf
mov
divb
in
test
subl
fcomps
xchg
std
mov
add
pop
hlt
inc
out
xchg
jnp
add
int3
loop
addr16
subl
sbb
test
lock
and
push
stos
incl
jbe
sarb
jg
pop
and
hlt
adc
dec
or
adc
xchg
cmpsb
xor
jge
or
lock
inc
cld
repnz
jecxz
aas
add
ss
pop
jns
sub
add
mov
stc
and
dec
out
in
subl
pop
pop
lods
test
into
adc
ficomps
roll
xor
shll
add
rolb
call
and
cmp
xchg
mov
outsb
sbb
lret
lcall
inc
jmp
pusha
loope
mov
test
sbb
cld
add
out
aad
inc
add
dec
dec
testb
mov
fistpll
outsl
ja
add
mov
mov
add
mov
add
data16
add
add
mov
into
and
sub
ljmp
testb
sahf
xlat
add
ljmp
or
imul
xchg
pop
push
sub
std
add
sti
outsb
negl
ds
add
add
and
inc
inc
icebp
movsl
and
pop
aaa
cmp
ret
adc
push
insb
ss
add
xchg
push
xchg
vmovhps
push
xlat
mov
inc
mov
add
fildll
pusha
pushf
ja
jno
pop
add
pop
int
call
cmp
mov
out
add
aaa
add
stos
enter
xchg
mov
pop
data16
mov
adc
xchg
xchg
xchg
lock
jge
add
call
lock
mov
fsts
add
ss
lret
mov
outsl
cmp
sub
ficoms
add
jnp
xchg
or
push
les
add
xchg
or
aaa
jle
inc
cmp
add
insb
inc
sub
add
or
jmp
popf
xchg
xchg
cli
fstpt
add
in
notl
call
xchg
into
in
mov
sbb
push
add
sbb
fwait
inc
outsl
ret
out
add
mov
fs
adc
adc
add
xchg
add
mov
xor
cmpsb
add
mov
cld
in
and
push
or
daa
add
add
insb
sub
pop
inc
into
loop
hlt
aam
add
mov
mov
add
addr16
pop
imul
loope
jle
int
cmpsl
cltd
or
aaa
or
or
faddl
sarb
xchg
jbe
dec
imul
aas
ljmp
and
addl
hlt
inc
imul
sbb
and
add
cli
in
mov
add
add
aam
pop
outsb
lret
out
xchg
out
add
repnz
push
jbe
cmc
add
popa
pop
cwtl
lcall
sub
dec
ss
and
sbb
mov
jbe
movsb
dec
jnp
add
lret
sarl
inc
pop
pop
and
add
add
clc
shl
jns
in
pop
jno
and
or
test
ret
in
fidivrl
loop
push
shrl
dec
push
fsts
or
mov
pop
cmpsb
dec
mov
out
shll
add
push
cli
inc
cmp
daa
or
pop
dec
int3
dec
aas
fnstenv
add
jnp
lds
add
faddl
es
repz
lahf
push
xchg
fdivrl
jbe
std
add
enter
inc
add
cltd
add
pop
stc
mov
and
mov
sbb
mov
sahf
add
mov
add
in
add
push
add
pop
out
mov
fstpl
mov
ss
mov
cmp
arpl
dec
stos
mov
leave
dec
data16
and
pop
jnp
test
insl
push
push
mov
push
in
insl
dec
add
stos
mov
sbb
js
sbb
or
push
jbe
add
add
imul
scas
sbb
mov
mov
push
inc
mov
or
rcll
inc
sub
pushf
nop
enter
add
sub
outsb
add
mov
pop
ficomps
int
not
pop
sbb
mov
xchg
aad
inc
jecxz
add
repnz
mov
les
mov
lahf
inc
push
mov
add
push
mov
les
repz
mov
rolb
xchg
cltd
and
scas
test
andb
add
negb
mov
jl
xor
mov
cmp
out
and
icebp
or
hlt
sbb
out
imul
hlt
xor
enter
int
sbb
dec
jbe
pop
pop
mov
popf
mov
jb
outsb
add
mov
add
mov
pop
pop
jb
add
add
ret
fdivrl
add
add
out
loopne
add
add
cmpsl
jge
out
mov
add
cmp
and
rcrb
pop
ret
shrb
out
int3
jmp
pop
add
scas
jg
scas
das
dec
mov
dec
test
cmpsl
adc
mov
bound
mov
das
add
js
es
sbb
sub
xchg
aas
sbb
jmp
inc
les
add
negb
out
add
lods
pop
push
mov
and
in
dec
push
sar
xlat
iret
cs
push
into
test
call
jecxz
aad
pop
mov
dec
mulb
adc
push
adc
in
xchg
fisubl
sub
test
les
dec
add
add
add
xchg
sub
fistpl
test
ljmp
jle
test
aam
outsb
adc
dec
jle
add
cs
test
rcr
insb
inc
mov
mov
outsl
push
add
mov
mov
add
jecxz
mov
leave
xchg
int
rclb
loopne
adcl
xchg
les
and
scas
mov
imul
adc
mov
add
shr
mov
mov
mov
imul
sub
lods
jnp
push
xor
mov
pop
add
add
std
adc
icebp
xchg
std
inc
push
jns
adc
add
lods
lock
adc
sbb
mov
mov
xor
out
inc
bound
add
adc
ret
addr16
and
cli
fiaddl
stc
ss
into
sti
jno
mov
lods
lret
andl
jnp
and
fadds
jge
mov
lahf
testb
inc
add
adc
lahf
add
push
add
push
lods
pop
jp
dec
or
fnstenv
add
mov
push
add
mov
xchg
mov
movsl
leave
lahf
pop
clc
mov
add
dec
add
lock
testb
dec
and
out
add
xchg
sub
inc
add
gs
xchg
or
adc
loop
nop
sti
add
mov
mov
shrl
cmpl
mov
and
ret
add
adc
fisttpl
xor
xor
test
inc
add
call
sti
xlat
movsl
xor
addb
xchg
add
sub
push
hlt
push
arpl
sub
jnp
add
cwtl
lret
xchg
mov
call
mov
sub
add
cmp
sbb
aam
lret
add
and
adc
add
add
mov
roll
add
add
dec
or
into
jnp
sbb
loope
sbb
hlt
inc
in
fwait
add
pop
cli
jno
or
dec
sbb
mov
jae
stos
lret
daa
test
cmp
pop
and
adc
js
xchg
lahf
popa
sub
mov
or
outsb
add
aam
inc
sbb
dec
lret
inc
xor
inc
jne
inc
dec
add
add
repz
clc
add
lods
lods
sbb
nop
daa
shrl
lret
call
add
mov
loop
push
push
adc
or
pop
js
ror
mov
and
sub
icebp
cmp
xchg
jmp
ret
push
scas
test
scas
jecxz
inc
in
cmp
cmc
adc
movsl
inc
rcrb
add
add
add
or
sub
add
shll
je
pop
mov
aas
inc
adc
std
xlat
push
or
std
pushf
lods
rorl
pop
mov
pop
sub
dec
or
cmc
adc
and
testl
jnp
repz
xchg
lahf
or
cmc
add
mov
pop
push
clc
dec
arpl
sub
add
leave
sub
sub
add
lock
lds
push
lods
add
cli
pop
push
add
or
aas
add
add
int3
popf
punpckhbw
add
sarl
lock
addb
mov
push
pop
push
mov
stos
mov
sub
idivb
data16
sahf
movsb
add
xorl
pop
popf
lret
cmp
and
lret
jb
out
popa
mov
notb
mov
push
push
mov
leave
lret
in
gs
jb
add
mov
sbb
mov
adc
add
int3
push
add
cmp
add
repnz
jno
push
dec
mov
js
fisubl
leave
cli
gs
add
mov
sub
in
push
push
add
mov
add
mov
sbb
filds
mov
add
add
int
test
and
fwait
xchg
add
nop
xchg
aad
sbb
jp
add
add
cltd
and
pop
add
jmp
adc
jbe
jmp
rolb
inc
lods
idivb
add
in
cmp
mov
jb
cmp
mov
xor
bnd
fwait
cmc
and
and
inc
xlat
jmp
pop
repz
lret
sbbb
in
clc
faddl
mov
pop
in
sbb
jnp
test
jns
das
mov
add
std
add
jne
add
push
cmp
cmp
arpl
or
mov
imul
mov
pushf
mov
gs
lods
mov
ja
cs
cmp
add
add
fiadds
and
pusha
xor
out
push
add
add
xchg
sbbl
nop
rolb
lea
mov
mov
add
cwtl
and
fstps
into
add
push
pop
pop
addr16
add
pop
ret
in
cmp
pop
inc
push
mov
sub
inc
jecxz
call
loop
pop
sub
dec
cmc
add
jmp
pop
push
mov
add
push
add
push
adc
cli
int
pop
pop
icebp
add
and
xlat
rolb
clc
push
movsl
ficomps
gs
and
aaa
cwtl
rep
mov
inc
sti
mov
add
cmp
imul
je
mov
sub
sub
add
or
jmp
add
mov
lcall
jne
into
jae
inc
xor
add
scas
jmp
std
or
inc
add
pop
iret
add
arpl
xchg
adc
lret
ret
dec
sub
cli
pop
or
or
push
adc
scas
add
mov
xor
add
out
pop
mov
push
rcl
add
lods
add
add
or
xchg
add
xor
or
lods
stc
je
jbe
dec
add
lret
aas
loope
in
add
jmp
movl
cs
dec
outsb
outsb
xlat
ret
xchg
push
dec
push
dec
ja
sub
push
stos
jno
pop
out
out
inc
lock
push
add
ja
arpl
outsl
add
or
stos
mov
inc
lret
and
inc
shlb
pop
mov
pop
and
push
jl
outsl
test
and
sub
push
jg
add
push
mov
lahf
add
jne
push
loop
in
icebp
shll
add
inc
int
jg
add
cmp
xor
cwtl
adc
stc
pop
mov
push
call
push
push
push
fisubrl
add
pushf
or
or
lds
dec
popa
or
negl
add
add
testl
jmp
out
outsb
movsb
sub
sbb
call
inc
add
int3
mov
in
add
cwtl
mov
fcoml
popf
jge,pn
adc
pop
or
jb
imul
push
xchg
inc
addb
inc
add
and
jle
mov
loop
jno
loop
repnz
fcompl
adc
sub
push
cmp
add
push
cmp
add
xor
and
add
hlt
jbe
jb
incl
aas
add
ret
push
sbb
mov
mov
int
add
lret
add
cmpsl
jl
push
sbb
lcall
xchg
incl
inc
mull
sub
jmp
pop
iret
xchg
ss
pop
cmp
ret
ret
sub
into
fwait
sbb
inc
add
pop
lock
or
xor
sub
add
push
insb
xor
mov
rolb
ds
mov
and
mov
mov
push
rolb
fwait
push
into
pop
cmp
sub
xchg
push
ds
loope
add
jp
test
jmp
movsl
xchg
sbb
xor
icebp
in
cmp
jns
pushl
and
cmc
inc
leave
int3
arpl
xchg
dec
add
leave
int
push
push
add
or
xchg
mov
push
out
nop
add
jge
add
pop
mov
or
add
lcall
je
mov
test
add
inc
mov
cltd
add
jl
and
pusha
add
sahf
xorb
pop
sub
arpl
inc
sahf
fistpl
rorb
ljmp
add
in
notb
add
in
iret
cltd
add
xor
into
js
roll
in
movsb
add
add
lods
push
ret
bound
jl
daa
dec
mov
mov
add
fcmove
pop
add
xchg
popa
imul
dec
add
or
lahf
ss
jge
dec
add
bound
add
mov
cmpsb
leave
nop
in
or
xor
jl
mov
fcmovnbe
pusha
mov
iret
add
add
fidivrs
insb
in
mov
inc
inc
idivl
add
jp
int3
pop
xchg
rolb
adc
fidivs
xor
dec
mov
cmp
add
cmpsl
aaa
jne
xor
jg
push
addb
mov
add
into
call
dec
and
xor
jae
ret
repnz
es
push
dec
clc
push
push
and
aam
sbb
mov
lahf
push
ja
pop
cmp
cmp
xor
mov
xorb
filds
mov
mov
push
add
pop
add
pushf
movsb
mov
adc
xor
int3
push
jae
je
das
xor
xor
sub
or
test
jnp
stc
add
xchg
push
pop
out
loopne,pn
shlb
js
xor
and
ds
push
cmpb
sbbb
js
jle
popf
imul
cmc
and
mov
sbb
mov
add
xchg
and
push
or
shr
fs
lods
add
add
inc
enter
popf
lret
mov
je
mov
cs
sti
cmp
add
add
mov
fildl
repnz
scas
jmp
aas
repz
xorb
inc
cmp
sub
mov
sbb
addr16
aad
sub
sbb
ljmp
aad
pop
mov
addl
jecxz
test
imul
mov
inc
push
dec
divl
wrpkru
fwait
mov
and
pop
add
sub
add
inc
xor
push
addr16
rorb
das
mov
jno
mov
push
fs
aam
xchg
mov
push
mov
arpl
js
sub
movsl
adc
add
add
outsl
add
dec
add
inc
mov
mov
nop
in
vmovss
cmp
push
sub
fildl
inc
stos
pop
inc
mov
stc
xchg
add
int
sarb
int3
mov
mov
add
jmp
pop
pop
lret
add
and
repz
jb
or
add
cmp
aas
xor
add
scas
sub
negb
fiaddl
pop
outsl
add
les
out
xor
fldcw
add
add
push
push
std
fdivs
aam
mov
sahf
pop
cltd
add
leave
mov
jnp
sub
call
jo
inc
add
xchg
jae
clc
add
fiadds
enter
ss
add
mov
je
mov
jge
mov
add
xchg
xchg
fwait
xchg
lods
test
adc
mov
add
pusha
xchg
mov
mov
insb
push
add
pop
xchg
jae
imull
fldcw
add
and
pop
lahf
add
and
dec
scas
shll
mov
cwtl
imul
add
inc
aas
xor
mov
add
fbstp
mov
ljmp
in
mov
insl
mov
push
jmp
add
andb
enter
cmp
sbb
adc
xchg
add
add
or
stos
sbb
cwtl
adcl
fdivr
push
or
add
int3
xchg
add
push
and
les
cmp
push
lock
add
cmpsb
repz
or
fnstenv
mov
data16
pop
fcomi
mov
imul
out
fbld
cwtl
iret
es
jbe
mov
movsl
shl
add
inc
jecxz
add
movsl
jo
nop
or
cmpsl
add
mov
jo
ret
jge
divb
clc
mov
pop
add
or
aad
fiaddl
mov
push
add
leave
cwtl
hlt
pop
inc
dec
xchg
xor
mov
jbe
mov
add
ljmp
push
cmpsl
cs
add
add
or
pop
xchg
and
lods
or
add
outsb
mov
ljmp
mov
jle
add
add
dec
cmp
push
mov
jno
mov
test
adc
mov
xchg
mov
and
dec
add
aad
sbb
jg
jmp
popf
imul
push
cwtl
mov
add
jge
scas
shll
test
lds
add
mov
and
and
mov
sbb
and
int3
lret
arpl
dec
jo
inc
pusha
sbb
push
inc
pop
lock
dec
sbb
jae
cld
inc
cmpsl
add
jne
sahf
ja
add
and
add
mov
xor
fisubrs
movb
out
pop
or
orl
jnp
shll
push
push
inc
insl
into
sbb
mov
stos
cmp
test
inc
add
cs
scas
cmpsb
fucomp
mov
jg
test
stos
mov
and
cltd
leave
xchg
add
cmp
mov
sbb
dec
inc
mov
shrl
dec
shll
cltd
aad
inc
mov
dec
pop
adc
movl
pop
add
jmp
int3
add
packuswb
loop
add
xchg
cmp
add
add
fiaddl
lcall
jb
int
and
rcrl
and
in
jbe
add
jo
add
add
cli
add
mov
xlat
decl
dec
add
movsl
sub
mov
hlt
or
push
in
add
mov
mov
loope
push
imul
clc
jb
dec
xchg
into
add
scas
mov
add
push
mov
sub
sahf
add
rclb
mov
subb
nop
sub
cmc
inc
sbb
dec
fildll
add
aaa
sbb
nopl
mov
xor
popa
add
dec
stos
iret
in
mov
adc
in
and
cmp
and
dec
mov
out
add
jo
ja
dec
xchg
inc
mov
ljmp
push
add
sbb
dec
outsb
out
lret
addr16
sbb
sbb
push
ret
out
add
repnz
movsb
pop
sahf
subb
movsb
fildl
cmp
xor
repz
adc
add
pushf
adc
cmp
insb
inc
mov
pop
mov
adc
inc
flds
ljmp
aaa
push
push
adc
movl
jno
sbb
jnp
cmp
mov
mov
add
cltd
xor
push
fwait
hlt
data16
inc
cmp
in
and
sahf
sub
push
xor
jne
lods
ja
sbb
pop
aad
fnstcw
pop
sub
add
sbb
jmp
cmpsl
add
lret
adc
adc
cs
cmpsb
pop
add
cmpsl
xor
pop
add
out
iret
xchg
cli
push
movsl
mov
addr16
add
push
aam
test
add
gs
add
cmp
cmp
fsubrs
add
add
cmp
ffree
pop
sub
pop
movl
fbstp
add
jnp
into
add
push
in
add
mov
mov
xor
bnd
loopne
lahf
inc
cli
lret
popa
push
add
mov
sbb
dec
dec
mov
scas
dec
mov
mov
andb
or
arpl
cwtl
loopne
jbe
ss
cmpsb
js
and
push
test
js
add
or
sub
inc
in
adc
andb
mov
mov
fadds
mov
inc
mov
gs
mov
mov
adc
lret
lret
adcb
sahf
inc
mov
xchg
xchg
fdivrl
sub
pop
adc
add
lret
xor
sbbl
xchg
scas
sub
cmp
arpl
fimull
inc
jno
adc
rol
adc
dec
mov
shll
add
movsb
dec
jle
add
popa
test
out
add
push
pop
pop
and
mov
inc
mov
shl
xor
bound
add
jmp
mov
add
popf
lock
mov
call
add
imul
cli
add
incb
call
lds
adc
test
je
fisttps
pop
pop
adcb
mov
out
xlat
pop
cmc
add
mov
incb
lea
enter
lcall
jl
cmp
mov
into
mov
mov
push
add
enter
sub
add
lea
or
push
loop
movsb
in
popf
push
cmpsl
dec
fs
aaa
testl
mov
jmp
add
jns
fucom
mov
jne
cmp
cmp
popf
adcl
dec
push
sti
shrb
hlt
iret
addr16
hlt
pop
push
cmc
add
lahf
lahf
fsubl
inc
xchg
dec
mov
xor
mov
add
pop
dec
mov
add
xchg
shl
cmp
add
xchg
pop
in
inc
mov
cwtl
cmp
rcll
xor
rcrl
or
ret
mov
call
add
notl
inc
pop
jb
inc
cli
mov
int3
add
aas
loope
inc
xchg
sub
or
mov
lea
xchg
repnz
and
ss
pop
lock
mov
bound
sti
cmpsl
fcoml
mov
pusha
add
dec
scas
bound
pusha
jns
or
std
fsub
out
loope
es
stc
sbb
add
js
subl
cltd
cmp
scas
les
call
cmp
add
scas
fisubrl
add
add
add
pop
stos
shll
push
jo
cmp
aas
pusha
mov
mov
rolb
mov
cli
and
jb
jb
xor
subb
repnz
inc
push
xor
add
xchg
add
cmpsb
and
cmp
into
add
cwtl
adc
mov
cld
fld
push
arpl
pop
add
add
add
lods
test
xor
jns
mov
ret
inc
and
shr
mov
add
movsb
inc
add
sahf
push
fidivl
lret
adc
add
scas
fldenv
xchg
in
mov
cmpb
lret
out
lea
cmp
add
call
daa
push
daa
loop
test
pop
data16
xchg
std
add
ja
lret
add
pusha
push
ret
push
xor
mull
and
lock
out
int
jo
filds
mov
jmp
out
and
fisttps
fildl
aam
add
add
jb
fsts
cs
xlat
movb
iret
push
cld
mov
fistps
aad
fwait
int
jb
test
ss
out
ja
add
mov
xchg
add
out
adc
out
popa
add
and
xor
push
inc
addr16
push
add
xchg
out
outsl
mov
add
add
insl
test
add
add
in
fwait
int
pop
mov
clc
lret
add
leave
imul
roll
sarl
inc
iret
mov
xor
mov
pop
jbe
aad
add
pop
das
sarb
in
add
jecxz
jmp
in
pop
hlt
sub
jp
imul
fsubl
add
mov
daa
jle
or
xor
jns
mov
sub
bound
add
sahf
add
sub
js
pusha
ljmp
je
add
push
clc
xor
sarl
idivb
add
add
and
ds
incl
add
add
pop
das
ret
mov
adc
mov
mov
add
push
push
ljmp
cmp
addl
and
sbb
mov
jnp
pop
fstl
pop
addl
mov
testb
cmp
inc
cmp
pop
push
sbb
roll
pop
js
imul
dec
or
pop
mov
add
sub
add
ljmp
lahf
cltd
cmp
incl
inc
add
mov
jnp
mov
into
cmp
sub
jne
mov
pop
xchg
adc
xorb
addr16
add
mov
push
and
jp
cli
xor
inc
testl
mov
cwtl
xor
mov
sub
js
xchg
movl
or
jno
lret
or
shl
jmp
rorb
jmp
out
add
pop
add
add
and
mov
push
fimull
sbb
hlt
outsb
bnd
out
push
add
outsl
outsb
mov
cli
pop
jl
add
sub
mov
adc
subl
cwtl
add
jge
mov
or
mov
add
das
outsb
ror
scas
cmpl
ret
incl
stos
xor
fmulp
add
stos
lahf
inc
dec
and
cwtl
stos
add
add
pop
aam
lcall
mov
xchg
push
add
lea
inc
call
out
mov
mov
test
add
clc
loopne
pusha
mov
push
sbb
cli
dec
xor
add
icebp
in
shrb
aaa
shlb
fnstenv
add
add
push
lahf
xchg
cmp
out
out
xchg
adc
add
ficoms
fisubrs
inc
pop
test
iret
cmp
shll
sbb
mov
outsb
pop
or
cli
adc
mov
dec
inc
nop
addl
pop
nop
pusha
mov
or
add
pop
fmull
mov
scas
pop
push
aaa
ret
out
and
add
in
pop
sahf
out
pushf
inc
push
sbb
sbb
test
inc
rcrb
lcall
sub
mov
xchg
clc
add
jg
into
jg
outsl
xchg
jge
push
add
adc
test
add
out
mov
cwtl
inc
aas
xchg
and
inc
mov
add
in
jnp
adc
adcb
add
add
mov
add
add
and
das
testl
xchg
adc
loope
or
sub
mov
adc
or
sbb
data16
out
add
add
js
es
jge
mov
jecxz
lret
out
add
mov
inc
add
add
xor
push
xchg
xlat
and
mov
mov
movl
aam
jge
std
dec
cmp
leave
add
pop
add
in
inc
ret
inc
lds
sbb
cmp
out
out
cld
lret
jmp
add
leave
mov
add
pop
add
mov
shlb
int
add
int3
add
sub
add
loop
rcl
jo
mov
mov
testl
sbb
adc
loope
and
in
jno
jecxz
add
xchg
add
add
xor
int3
fmull
push
add
mov
add
stos
stos
adc
jmp
adc
out
mov
and
dec
ret
add
lock
scas
push
add
push
sti
aaa
lock
dec
and
lods
xlat
add
mov
pop
inc
add
xor
pop
in
add
cmp
add
sbb
test
or
push
push
add
cli
xor
push
outsl
mov
add
sti
sbb
add
flds
nop
inc
add
push
sbb
inc
inc
xor
add
aam
pop
std
not
lahf
xchg
add
push
test
lret
test
push
or
lds
add
aad
pop
inc
sti
sub
add
ss
mov
xor
inc
clc
insl
xchg
sub
mov
add
xor
in
outsb
dec
loopne
push
shlb
jb
scas
mov
hlt
mov
mov
in
dec
add
idiv
add
mov
add
add
int
popf
fs
pop
or
test
dec
xchg
add
shll
add
shlb
add
inc
mov
scas
test
xor
stos
pop
add
fs
add
sbb
aas
add
xchg
jns
js
jp
pop
fcom
mov
fwait
xchg
fwait
adc
add
test
test
mov
mov
neg
dec
xor
dec
add
pushf
lods
fistps
add
jnp
xchg
add
inc
pop
adc
sub
push
push
add
adc
test
gs
movsb
icebp
and
sub
mov
jno
loope
add
cmc
and
push
in
maskmovq
testl
incb
sbb
mov
pop
aaa
lea
lds
roll
repz
and
add
jmp
repnz
sbb
out
mov
add
sahf
inc
subb
mov
int
push
push
daa
int3
push
out
mov
add
movsb
jno
sbb
add
repz
push
xor
mov
add
or
mov
data16
sub
cmp
leave
and
jmp
push
add
test
outsl
pop
hlt
and
outsb
lods
sbb
cmp
add
mov
scas
lret
fstpt
ret
cmpsl
mov
arpl
pop
loop
out
add
daa
mov
sbb
xchg
nop
push
popa
pop
add
mov
inc
add
es
push
add
xchg
pop
lahf
cltd
ret
ja
add
mov
or
xchg
mov
inc
add
add
fisubs
into
out
cwtl
icebp
ret
sbb
int
mov
ljmp
pop
pop
jne
pop
test
sbb
bound
fildl
pop
adc
out
loope
mov
stc
fsts
push
sbb
aad
sbb
push
in
adc
push
mov
cltd
jg
bnd
stos
add
mov
xchg
mov
inc
rclb
xor
cmpsb
add
clc
rclb
sbb
movsb
dec
scas
loope
cmp
lcall
adc
lcall
or
xchg
das
cltd
mov
add
sbb
insb
cmpsl
add
movsb
xor
jbe
cmp
add
loop
add
inc
scas
clc
shrb
repz
pop
push
outsl
lods
lcall
lahf
push
xor
addl
push
jno
inc
push
je
lret
imul
mov
cmpsb
cmc
cli
mov
push
in
movsb
insb
xchg
xchg
aaa
add
loop
jns
xchg
lret
mov
loopne
add
lea
add
adc
fisubl
add
aaa
jbe
orb
mov
shll
cmc
popf
cmpsb
in
addl
jp
lcall
subl
out
adc
popa
shl
movsl
or
enter
xor
push
push
ficoml
lret
jle
and
sbbl
dec
mov
mov
xor
inc
mov
iret
inc
push
call
add
pop
xor
push
add
add
ds
inc
push
lea
jecxz
pop
aas
psubusw
enter
iret
inc
lret
test
add
rcl
cmp
pop
add
pushf
in
sbbl
rcl
mov
xor
movsb
adc
add
insl
lock
fmull
sarl
test
inc
add
xchg
leave
mov
outsl
aam
add
test
add
add
stos
ss
dec
pop
dec
mov
push
mov
daa
cmc
ljmp
add
or
bound
inc
cltd
aaa
add
mov
add
dec
daa
and
scas
aas
bound
inc
sbbl
add
xchg
add
add
jae
adc
mov
xor
xchg
enter
cmp
xchg
mov
fs
xchg
inc
insb
mov
ds
sbb
mov
adc
add
data16
lods
cwtl
adc
call
inc
push
rorl
push
iret
cmp
inc
jnp
or
dec
adc
into
testl
in
add
pop
ds
lea
lds
cmpsb
and
xor
andb
mov
sub
int3
lret
xorb
aas
mov
pushf
add
daa
das
lds
add
fisubrl
or
sbb
scas
out
xchg
add
push
or
js,pn
sbb
daa
xchg
xchg
mov
lea
mov
stos
lret
pop
push
xchg
mov
aaa
fcmovnb
push
in
stc
sarb
xorl
or
aaa
xchg
add
out
popf
xor
ret
clc
test
jns
adc
gs
add
or
cmp
dec
add
aam
add
cmc
pop
repnz
inc
cmp
jle
add
clc
cmp
ljmp
outsl
add
dec
lret
and
and
scas
dec
fwait
add
cli
lea
adc
add
sub
xor
mov
mov
add
rolb
dec
pushf
adc
mov
xor
mov
sbb
jnp
add
or
sbb
sub
xor
inc
ja
mov
shl
mov
fwait
imul
imul
cwtl
xor
test
mov
sub
cwtl
movsl
xor
mov
jl
add
mov
sub
push
lahf
mov
scas
add
jno
ltr
add
orb
data16
sarb
sub
or
xchg
call
pop
adc
add
xchg
jmp
cmp
sbb
add
insb
or
lds
mov
out
lods
mov
std
nop
fdiv
add
jb
add
add
pop
fiadds
sub
cmp
mov
mov
lock
fcoml
pop
cmp
inc
scas
outsb
addb
adc
mov
jg
add
xor
incb
sbb
dec
fs
adc
xor
dec
push
in
dec
orl
push
mov
jl
inc
andl
and
mov
mov
add
inc
add
repnz
movsb
bound
in
movsl
sbb
jne
and
cmp
add
aam
imul
and
inc
add
clc
jp
fisubrl
add
push
add
cmc
push
insb
fdivrp
iret
add
fstpt
test
lea
and
vmovsd
mov
sub
add
jns
mov
push
add
mov
cmp
subl
inc
add
xchg
or
js
mov
jle
jmp
pop
in
sub
pop
test
add
daa
inc
xchg
xchg
test
sbb
lods
ja
cld
lea
lock
stos
movl
popf
decb
je
push
add
scas
mov
or
sub
int3
add
scas
inc
mov
inc
jno
mov
add
nop
sbb
mov
scas
or
arpl
add
add
rolb
add
mov
mov
fadd
gs
mov
xchg
add
lret
fcoms
and
cld
sub
loope
adc
mov
jne
sub
divb
mov
int3
or
mov
lds
or
add
shl
jge
sti
movsb
mov
and
flds
imul
es
ss
int
les
dec
movsb
cltd
jp
add
daa
add
lods
lret
and
or
inc
std
xchg
add
push
arpl
aad
push
insb
pusha
jnp
pop
in
dec
push
sahf
cli
jbe
mov
out
xchg
dec
mov
push
xor
add
inc
adc
loop
pop
jno
icebp
or
jne
lds
fwait
jns
push
dec
mov
cwtl
insl
xor
adc
cmp
xor
pop
add
add
fs
mov
sbb
addr16
adc
sahf
push
wbinvd
in
push
mov
fidivrs
push
test
and
add
roll
cmpsb
aaa
push
ds
aaa
mov
mov
repz
sub
jecxz
or
jg
add
pop
jb
rcrb
sbb
mov
cwtl
mov
int
mov
lods
dec
jnp
orb
mov
adc
xchg
jp
dec
add
nop
icebp
add
sub
add
mov
int
mov
push
pushf
xor
in
repz
sub
jnp
out
testb
ds
dec
test
addr16
mov
in
or
mov
push
xor
or
cmpl
addr16
movsl
pushf
fnstcw
rol
icebp
lret
push
repnz
cmpsl
cwtl
std
add
push
xchg
and
stc
inc
jae
aad
or
xchg
or
sub
pusha
pop
fcoml
bnd
popf
sbb
call
push
popa
add
mov
xor
das
sbb
cmp
hlt
xchg
mov
push
pop
dec
sbb
add
push
inc
cmp
stos
push
hlt
je
add
test
or
pop
leave
add
inc
int
pop
pop
push
lods
xlat
sbb
add
jg
add
sbb
cltd
call
loope
jmp
das
mov
adc
xor
movlps
test
fcompl
push
outsl
xor
cmc
and
mov
xor
cs
ljmp
das
sbb
push
mov
xchg
mov
cwtl
mov
sahf
cltd
loop
pop
into
inc
imul
xchg
xchg
add
mov
addb
pop
insl
or
sub
ss
sub
mov
aam
add
xchg
add
xchg
pushf
add
cli
xchg
insl
out
imul
aam
into
mov
push
mov
in
lcall
adcl
cmpsl
test
fstl
sbb
xor
outsl
shrb
popa
rcrl
andl
outsl
xor
sbb
inc
mov
lock
xor
outsb
or
push
inc
stos
scas
add
shll
scas
icebp
mov
ljmp
add
lret
mov
pusha
or
loope
jmp
loopne
test
ja
outsb
add
fadd
and
jo
dec
add
jp
add
imul
aam
add
pop
mov
add
cmp
sbb
cld
imulb
scas
xchg
mov
cmpsb
mov
enter
sbb
mov
rclb
cmpsl
in
xlat
jns
and
test
sub
scas
or
int
pop
sub
sbb
xchg
add
fbld
mov
imul
push
out
lds
add
pop
push
pop
add
lahf
sub
add
push
ret
outsb
xchg
push
adc
and
outsb
xchg
mov
pushf
cmp
jg
aaa
add
pusha
add
xor
inc
sbbl
dec
xchg
sbb
cs
adc
jecxz
popf
addr16
shl
sub
rolb
clc
and
lods
outsb
push
inc
add
ret
cmp
add
mov
or
arpl
dec
add
and
faddl
xchg
pop
in
jmp
add
daa
add
aam
and
xchg
les
das
mov
loopne
jl
movsl
sub
inc
andps
dec
inc
daa
roll
pop
icebp
inc
add
inc
cld
repz
or
icebp
add
sbb
jecxz
scas
daa
inc
movsl
add
pop
dec
pop
lock
jns
add
aad
dec
add
pop
cmp
imul
xchg
sti
mov
mov
mov
outsb
insl
test
cmpsl
add
xchg
addr16
sub
push
repnz
jge
add
fdivrp
pushl
ret
lret
add
andb
inc
ss
xlat
sahf
jmp
add
or
mov
cli
nop
sub
rolb
in
fsubl
add
aaa
mov
adc
movsl
aad
daa
pop
add
mov
jns
push
xchg
std
jge
and
fnstenv
in
fsubrs
and
add
adc
cmp
add
add
mov
fwait
push
push
lret
add
mov
ret
mov
mov
mov
ret
add
pop
mov
lcall
sbbb
add
shl
loop
jg
mov
int
cs
aam
rolb
ja
idivl
filds
and
iret
test
mov
xor
cmpsb
test
push
pop
cmp
pusha
adc
jns
faddp
sub
pop
push
xchg
stos
nop
add
repnz
cmp
scas
ret
pop
mov
popa
repz
sarl
inc
pop
mov
insl
lds
ja
shll
clc
adc
lret
add
addl
insl
aas
mov
aam
lea
adc
testl
sbb
sahf
add
out
add
rcr
bound
dec
xor
add
dec
dec
rcl
jbe
jg
cli
pop
sbb
stos
decb
add
ret
rolb
sbb
fmuls
scas
or
dec
push
jo
mov
dec
les
mov
mov
out
lahf
mov
test
push
add
imul
cltd
cmp
aad
push
cli
test
movsb
xor
or
inc
jmp
pop
add
add
push
mov
push
push
push
iret
or
add
pushf
xchg
and
push
subb
lcall
notl
lock
inc
idiv
mov
cmpsb
add
addr16
scas
adc
push
daa
les
push
adc
shlb
data16
add
fwait
jg
inc
fs
push
ljmp
sbb
pop
addb
out
or
add
pop
xor
sahf
or
sbb
decl
dec
xor
xchg
clc
and
lock
cmp
jle
jb
add
repz
mov
add
push
mov
popf
orb
mov
mov
push
jnp
xor
daa
add
add
cwtl
mov
data16
xor
flds
or
or
loop
add
mov
xor
dec
lods
cli
sub
into
into
jne
jecxz
fdivs
xor
cmp
cmpl
push
popf
leave
out
in
fildl
adc
notl
push
push
inc
mov
dec
cmpsl
cmpsl
fisubs
or
subl
jmp
sbb
or
push
gs
pop
mov
inc
mov
add
dec
xor
jmp
movsb
sbb
lods
xor
sbb
inc
clc
loopne
and
pop
dec
add
ss
jmp
lea
xlat
add
stos
pop
pop
add
dec
adc
cltd
loopne
fwait
aaa
pop
add
mov
cmp
test
mov
jp
mov
ja
enter
lcall
fistpl
pop
test
add
mov
outsl
jl
xchg
mov
lret
mov
dec
inc
cmp
add
inc
add
sbb
add
das
jns
lds
cmp
fs
in
ss
lret
mov
sub
shrl
lret
xchg
mov
sahf
jns
mov
mov
scas
mov
or
xlat
pop
pop
iret
mov
xor
pusha
std
ss
hlt
repnz
loopne
fisubrs
sub
push
pusha
xchg
inc
adc
add
cmp
and
inc
adc
cmpsb
add
mov
ret
sahf
cltd
fadds
stos
pop
jle
out
add
sbb
mov
test
add
mov
jecxz
sbb
add
jmp
arpl
add
push
inc
int3
jl
int
push
in
add
mov
adc
mov
cmc
or
rol
xchg
add
mov
out
push
and
cmpsl
pop
lock
aad
cmp
jne
mov
fwait
inc
mov
cld
std
add
or
xor
pusha
cs
imul
leave
das
inc
add
insb
mov
sbb
and
jnp
aad
daa
ret
and
shlb
add
add
sbb
sbb
cltd
xchg
popa
xchg
aam
xor
out
jge
fistps
mov
sbb
push
lret
outsb
or
push
es
cmpsl
neg
scas
inc
ffree
loop
push
add
xor
add
or
push
add
xchg
jb
cmp
shrl
lret
add
mov
inc
lea
or
in
mov
ret
sub
add
xor
ret
add
add
je
mov
dec
ds
pusha
lret
aaa
mov
add
insb
clc
jno
sub
inc
add
mov
scas
pop
sti
popa
pop
jns
cmpsl
ljmp
clc
sahf
lret
pushf
gs
push
mov
loop
daa
mov
jmp
add
cmpsb
add
gs
icebp
clc
sub
add
xchg
sub
cld
imul
xor
leave
add
out
mov
pop
jnp
add
add
cmp
push
call
jb
bnd
movl
or
sar
ja
add
push
daa
push
cmp
add
jbe
mov
int3
xchg
add
add
add
iret
or
push
out
inc
mov
inc
add
cmpsl
push
jae
xlat
add
shl
add
push
sbb
or
mov
into
inc
push
hlt
add
and
push
add
xchg
add
popf
sub
aaa
add
add
pushf
xor
push
lret
test
add
add
add
ds
repz
cmp
movsb
push
adc
add
jne
jns
int3
scas
cld
mov
mov
sub
dec
repnz
lea
sbb
inc
fdivrs
push
adc
add
lods
sbb
cmpsl
dec
cmc
pop
in
and
jno
sbb
inc
mov
adc
xlat
fiadds
js
inc
push
inc
xchg
test
xchg
mov
mov
xchg
add
jge
pop
aad
inc
add
cmp
flds
dec
inc
into
mov
and
push
cli
inc
ficomps
sbb
shlb
nop
mov
sub
add
push
push
gs
cwtl
insb
data16
push
add
add
add
add
addl
adc
rcrb
icebp
sbbl
testl
add
adc
or
popl
icebp
mov
sbb
or
add
add
add
lcall
adc
xor
int3
nop
jecxz
test
mov
inc
pushf
aad
push
mov
add
jp
xchg
cmp
push
add
popa
pop
jmp
add
push
mov
cltd
sub
or
cmp
inc
dec
pop
ljmp
fs
and
inc
sbb
add
movsb
loope
push
pop
add
jne
mov
add
push
sbb
shrb
sbb
add
js
ffreep
dec
pusha
inc
and
adc
add
adc
movsl
jg
repnz
div
mov
mov
mov
add
xchg
nop
inc
sub
cmp
fsub
sbb
pop
sbb
xchg
das
add
mov
or
ljmp
push
rclb
dec
add
sbb
add
mov
pop
pop
divl
sub
in
mov
adc
mov
add
ss
cmc
add
ljmp
mov
loope
fnstcw
add
mov
xchg
cmpsb
cmp
add
int
jae
fwait
divl
lahf
fiadds
adc
add
push
cmc
jle
jp
xchg
repz
add
add
add
in
add
das
xchg
add
ja
push
xlat
cmp
and
nop
mov
mov
fldenv
cwtl
add
stos
fstps
jle
or
iret
cmpsl
pop
mov
movsb
lods
mov
jbe
push
push
cmp
or
add
add
lret
lcall
hlt
movsb
xchg
add
adc
adc
xchg
ror
xlat
add
sub
aaa
adc
pop
popf
pop
stos
icebp
fidivs
mov
std
jmp
fistpl
mov
add
add
add
mov
ja
xchg
add
cmp
cmp
add
loop
sub
add
test
lahf
std
lcall
fsub
jl
add
inc
and
add
in
inc
sub
mov
sub
mov
fwait
jp
add
xor
or
testl
hlt
pop
add
mov
cmp
enter
add
roll
sarl
aad
dec
add
xor
mov
xor
insl
cmp
pop
popf
pop
and
pop
ds
or
pop
jnp
add
pminub
lds
sub
mov
sahf
inc
jl
out
xor
cmp
aad
cmp
mov
mov
in
cltd
push
insb
test
jp
rcl
add
or
mov
add
xchg
sub
pop
push
add
stc
das
dec
data16
sarl
add
add
adc
ja
aam
std
pop
push
test
mov
rclb
inc
repz
mov
xor
push
push
jnp
divl
dec
roll
or
mov
jno
pop
xchg
add
adc
pop
xor
rcrb
outsl
push
sub
sbb
rclb
mov
jle
mov
out
fiaddl
add
add
arpl
lock
scas
das
push
add
mov
les
mov
or
mov
out
add
sti
pop
push
icebp
pop
js
popf
sbb
jbe
sbb
cmp
cli
popf
cmp
mov
jno
mov
add
jnp
push
add
lcall
add
imul
xor
cmc
lods
jp
mov
stos
jmp
dec
adc
jle
outsb
or
test
cmp
stos
add
inc
test
push
add
add
xchg
pop
add
sbb
cmp
mov
lret
add
clc
inc
orb
adcb
fnstenv
jo
lods
sub
jmp
call
xchg
mov
sub
add
mov
mov
mov
rcr
arpl
cmp
lods
subb
inc
and
mov
pop
mov
ljmp
add
dec
xchg
jbe
add
ljmp
ja
pop
cmp
addl
push
lret
fadd
js
es
add
or
jnp
insb
daa
inc
mov
loopne
mov
lods
fldenv
inc
js
xchg
shlb
inc
add
inc
in
nop
push
icebp
xchg
int3
add
xchg
dec
add
add
jbe
syscall
dec
add
test
ja
pop
cmp
in
out
cmpsb
sub
cmpsb
mov
arpl
xor
aam
pop
mov
pop
xlat
and
mov
push
add
loope
push
mov
push
jle
fstpt
repnz
or
add
add
das
jo
dec
add
shr
push
add
push
cmp
or
dec
mov
mov
pop
jno
fnstcw
mov
psllw
mov
movsl
inc
loopne
and
or
in
stos
imul
jno
jnp
lods
mov
or
ja
pop
int
loop
lods
push
add
sbb
add
xor
inc
and
adc
dec
cli
mov
adc
sbb
mov
cmpsb
arpl
sarb
mov
dec
sbb
stos
inc
cmpsl
movsl
mov
push
jb
dec
icebp
cmc
fwait
add
arpl
cmpsl
and
add
rolb
jmp
rorb
adc
rcrl
cmp
cmp
push
roll
add
add
jns
push
imul
loopne
xorl
add
aad
push
add
mov
and
jle
sbb
add
add
jg
inc
dec
cmp
adc
nop
daa
fcomp
add
enter
adc
cmpsb
inc
inc
add
notl
push
add
je
push
inc
mov
add
xorl
inc
mov
lret
aam
outsl
push
out
push
or
clc
adc
aad
test
jge
xor
aad
insb
in
pushw
push
push
in
add
imull
in
fimuls
mov
out
enter
daa
dec
repnz
jmp
push
mov
jp
cwtl
nop
adc
jge
add
jbe
daa
xor
into
out
mov
mov
outsb
cmc
fstps
movsl
pop
and
push
movsl
cs
push
cld
aaa
push
cmc
sub
add
mov
add
test
inc
pop
repz
outsb
fnstsw
aad
cmp
jo
add
adc
mov
inc
add
enter
inc
pop
add
jo
pusha
add
cmp
and
push
push
add
add
pop
sub
add
lea
add
push
add
sub
add
mov
fimuls
imul
mov
sbb
mov
outsl
insl
shr
mov
pop
in
mov
cmp
and
cli
add
or
cwtl
mov
mov
jne
fstp
lods
add
sbb
xchg
mov
pushf
shr
cmp
adc
pop
mov
or
push
adcl
ret
pop
enter
inc
jnp
add
outsb
dec
add
xor
add
mov
jp
mov
cmpl
cld
add
add
add
and
addl
add
add
add
sbb
xor
scas
lock
jno
rcl
mov
scas
add
sub
outsb
inc
jg
jp
outsb
iret
add
pop
lcall
mov
lret
mov
test
out
sar
int3
std
pop
xorb
inc
arpl
mov
aam
dec
in
add
xlat
xchg
add
fnstsw
xchg
sub
inc
push
mov
and
mov
pop
mov
stos
or
dec
sbb
mov
xor
add
add
add
loope
adc
lds
add
push
lods
lods
fsubrl
add
adc
mov
pop
push
lret
jmp
pop
jbe
xchg
or
and
les
das
das
jmp
pop
push
add
clc
imul
mov
popl
imul
lret
and
es
pushf
daa
xchg
sbb
repnz
inc
in
dec
mov
add
and
lahf
mov
dec
scas
scas
mov
ja
roll
add
mov
xchg
lods
dec
orl
aaa
negl
xor
xor
shlb
shlb
add
adc
movsl
fimull
add
cmp
mov
sbb
push
fstps
cltd
inc
wrmsr
leave
dec
adc
xchg
jg
mov
or
loop
out
out
push
xchg
add
jl
add
add
xchg
adc
hlt
add
push
lret
sub
jg
jne
idivb
add
add
cmp
in
test
mov
cmp
inc
mov
add
sub
insl
mov
add
sbb
add
js
lock
cmp
test
pop
mov
xchg
xchg
sub
mov
stos
lahf
cmc
call
int3
push
add
insb
add
sbb
loopne
mov
add
in
js
into
cmp
push
sti
add
sti
add
jle
iret
andb
lock
pushf
out
add
push
jmp
ja
popf
loope
push
cmp
cmpsl
daa
push
add
sti
pusha
subl
push
repz
nop
out
std
xor
callw
pusha
jmp
mov
push
cwtl
add
add
stos
add
pop
mov
ja
inc
mov
faddl
subb
shrb
test
push
xchg
mov
cmp
insb
inc
into
repz
inc
push
pusha
cmpsl
pop
jae
insl
iret
xchg
mov
insb
add
adc
hlt
jb
add
or
sub
push
sbb
push
sti
aas
gs
imul
mov
add
xchg
stc
outsl
cmc
je
lock
add
sbb
sub
cmp
and
sti
add
sbbb
inc
jge
hlt
orl
mov
ja
adc
xor
inc
or
add
das
ss
add
xor
xchg
mov
add
ja
clc
pushf
sub
out
fiaddl
pusha
inc
xchg
mov
lods
call
inc
cs
cmp
inc
fistpll
cmp
popf
add
imul
xor
movsl
rclb
fucom
push
loope
movsb
sbb
add
jnp
xlat
int
dec
je
mov
int3
add
or
and
add
or
mov
add
mov
mov
push
add
out
push
adc
testb
mov
add
add
inc
lock
inc
inc
shll
test
jmp
ljmp
push
add
lea
shlb
dec
add
xchg
ficomps
inc
fsubr
and
adc
in
arpl
popl
enter
pop
movsl
add
and
add
cld
cmpsl
lcall
negl
mov
add
add
mov
add
popf
or
cmp
fldenv
cmpsb
cs
movsl
mov
lahf
xchg
es
idivl
push
adc
outsl
loope
clc
xor
clc
out
cmpsb
add
bound
pop
pop
or
push
rorb
add
mov
sbb
imul
shr
adc
mov
mov
add
jne
cmp
in
cmp
dec
shlb
out
push
nop
sbb
sbb
xor
je
jae
add
lret
and
sbb
mov
add
add
mov
mov
adc
mov
int
add
out
pushf
pusha
jmp
paddsb
fsubs
and
popa
or
insl
xor
int
idivb
rolb
cld
data16
pop
xlat
sub
xchg
cs
pop
das
xchg
add
lea
dec
mov
lds
add
add
addl
loope
cmc
jg
inc
inc
push
mov
dec
add
testb
cwtl
stc
add
sti
fwait
lds
jo
mov
jno
test
mov
add
xor
jno
pop
pop
pushf
out
mov
or
in
or
pushf
add
pop
dec
sbb
xchg
add
add
ror
out
xor
sub
add
enter
aaa
cmpb
pop
mov
mov
scas
add
je
out
push
adc
fiaddl
loop
sahf
test
mov
push
jbe
push
repz
add
dec
xor
imul
icebp
xor
inc
xor
add
enter
xchg
rolb
movntq
je
adc
adc
jmp
mov
jno
setb
cmpsl
js
sti
add
xchg
add
movsl
dec
fs
dec
std
jne
mov
rolb
insb
out
ret
add
add
jle
leave
movl
add
xchg
sbb
test
mov
jmp
cmp
add
inc
pop
shlb
rcl
pop
cmp
movsl
or
aas
test
fcmovnb
in
movsl
add
add
mov
or
cmpsl
mov
add
jo
push
andb
out
aad
repz
push
das
sarb
add
push
inc
push
mov
mov
in
push
bound
inc
xor
pop
adc
jp
push
jne
scas
xchg
jno
add
iret
std
push
ss
daa
aam
arpl
icebp
adc
mov
jge
and
mov
push
data16
into
add
clc
fiaddl
sbb
add
pop
mov
dec
add
sbb
mov
add
test
jnp
popa
loop
lahf
bound
dec
outsl
adc
dec
outsb
fsts
js
outsl
cmp
jp
pushf
dec
or
and
ljmp
scas
pop
mov
loopne
sbb
lock
call
sbb
in
ss
test
xor
ror
sbb
inc
adc
add
pushf
push
insl
das
lods
mov
shr
cwtl
pop
push
add
sub
daa
sti
fists
in
add
add
push
xchg
out
or
mov
mov
dec
sbb
pop
loop
add
mov
in
xchg
std
add
shrl
bound
add
add
outsl
add
fildl
pop
insb
ret
mov
imul
add
aaa
jle
loop
mov
xor
add
sbb
jo
add
xor
ljmp
mov
push
icebp
add
or
ljmp
std
cld
pop
cmc
and
outsb
mov
das
je
and
inc
xor
out
add
push
jnp
adc
add
cmp
pop
rol
add
cmpb
das
or
add
inc
adc
dec
mov
adc
sahf
ret
sub
daa
mov
push
add
fwait
lahf
inc
out
lret
mov
jg
add
gs
cmp
fldl
cmc
jne
fcoms
jns
test
subl
dec
roll
add
fsubs
dec
jle
mov
sub
add
inc
dec
lret
add
add
inc
push
dec
mov
sti
aam
push
sbb
repz
leave
push
mov
xlat
jp
shll
xor
cmp
mov
bound
arpl
mov
mov
add
add
dec
test
mov
movsl
add
inc
sar
bound
add
out
shlb
add
fistps
sbb
icebp
and
sub
jge
push
xlat
fldcw
orb
mov
mov
adc
es
jne
mov
test
mov
dec
ja
mov
adc
add
add
cmpsb
jge
hlt
fcomip
add
lds
mov
xchg
add
aas
aaa
ljmp
mov
imul
push
mov
enter
cmp
xchg
mov
adc
ljmp
mov
popa
dec
and
and
sahf
xor
loopne
adc
mov
and
mov
pop
push
in
roll
repz
inc
ds
sbb
push
push
add
popf
iret
cwtl
dec
mov
arpl
xchg
add
xor
in
jge
fiadds
mov
jecxz
dec
mov
sbb
cmp
or
adc
xchg
sbb
adc
xlat
push
mov
jle
fcoms
call
mov
mov
loop
movl
lods
add
dec
popf
pop
cmpxchg
std
add
orl
add
and
je
dec
je
out
adc
lcall
lods
add
int3
push
lock
jp
clc
add
dec
xorb
cmp
add
aaa
push
mov
insl
jae
adc
cmpsl
jl
int
dec
faddl
outsl
jo
leave
lea
jo
es
sub
push
pop
add
test
sbb
pop
push
mov
dec
and
sbb
hlt
or
imul
mov
cmp
aam
das
mov
add
hlt
adc
mov
fcmovbe
ret
add
add
add
or
les
add
push
add
lcall
inc
sub
push
pop
add
jecxz
mov
stos
ficomps
lods
pop
push
and
mov
pop
fcomp
in
nop
iret
xchg
mov
xor
repz
scas
call
push
dec
mov
in
ds
sbb
jmp
jnp
pushf
add
cmp
fldcw
jnp
jecxz
fwait
int
add
jge
mov
js
add
outsb
mov
add
repnz
fistpll
add
inc
je
and
mov
enter
pushf
test
je
sbb
in
xor
popf
mov
lods
jge
add
iret
add
mov
adc
mov
adc
ljmp
fstpt
jb
aad
jmp
cmpsl
add
or
sbb
add
xchg
cmp
mov
add
or
jns
sbb
out
int3
or
xor
mov
stc
mov
pop
inc
mov
nop
add
mov
add
fdivrs
rcrl
out
sub
mov
fildl
lods
lahf
repz
pop
mov
popa
add
add
xchg
movb
xchg
dec
add
push
jne
pminub
or
inc
push
imul
and
xchg
xchg
and
add
add
add
insl
int
es
xor
aaa
push
fcoml
mov
cmc
ds
jne
sub
lods
push
add
jmp
and
cmpsb
popa
add
cmp
adc
cmp
lret
push
es
add
jns
or
lds
orb
clc
lds
adc
sub
movl
push
add
daa
pop
popl
int
mov
push
or
cmp
sbb
add
add
fisubl
fstl
das
bnd
push
add
aad
and
dec
mov
aad
add
cmpsb
mov
push
roll
mov
je
stos
add
add
lods
fldenv
pop
rolb
inc
inc
out
mov
divb
popa
add
je
jo
add
addr16
inc
push
ret
mov
mov
dec
cwtl
xchg
sbb
inc
sub
pop
or
pop
sub
movsb
add
or
lret
and
lds
mov
adc
jnp
loop
add
push
add
ss
dec
loop
mov
cmpsl
cwtl
add
xor
xor
lahf
jnp
cmp
push
jp
mov
cmc
add
out
lret
push
or
push
add
mov
push
add
jle
adc
icebp
push
and
jge
add
sbb
int
or
and
sbb
pop
rcr
add
testl
xor
imul
add
and
mov
jle
lock
add
xchg
and
and
cmp
inc
shr
mov
mov
sbb
outsl
jmp
flds
push
mov
cmp
frstor
or
mov
add
cltd
add
add
pop
out
or
push
add
test
and
cli
push
aas
mov
jbe
and
or
add
jne
dec
inc
add
add
lods
pop
in
add
inc
mov
pop
fmuls
rolb
cltd
repnz
add
mov
lret
pop
and
out
lret
nop
insb
jnp
and
add
add
lods
xlat
and
ljmp
lds
out
je
adc
pop
rcrb
pushf
fsubl
sub
movsb
jne
out
scas
in
out
mov
add
jg
jecxz
xchg
rcll
push
insl
int3
add
push
xor
imul
ljmp
push
mov
add
add
add
adc
add
std
and
ss
or
add
add
jb
jecxz
sti
outsl
xor
inc
testb
mov
imul
xor
popf
fadds
jmp
pushf
jnp
push
add
add
clc
dec
dec
add
test
bound
out
xchg
jl
mov
add
mov
add
cmp
js
in
xlat
and
dec
pop
inc
adc
andb
mov
add
mov
sub
inc
fisubl
movsl
dec
add
jecxz
fisubrl
mov
int
add
in
stc
dec
adc
sbb
rolb
mov
add
mov
aaa
add
icebp
inc
leave
mov
mov
push
dec
aaa
add
je
scas
inc
push
push
adc
dec
inc
jo
fistpl
add
xchg
push
mov
sbb
fcoms
sub
add
inc
js
fwait
out
cmp
movsl
lods
pop
rcl
mov
xor
dec
mov
add
or
xchg
mov
mov
and
mov
outsl
pop
call
mov
sar
cmp
xchg
add
test
xor
push
lret
ljmp
popa
inc
pop
lahf
mov
or
add
xchg
inc
outsb
jne
add
lods
pusha
subb
inc
add
jo
das
xor
inc
and
add
pop
and
jns
and
ret
gs
sub
cmpsl
lods
sub
testb
outsl
ficomps
add
or
add
ret
mov
test
das
iret
add
repz
stos
add
add
imul
mov
cmp
sub
rcr
push
jmp
dec
addb
add
sub
bound
lret
add
cmp
cld
imul
add
add
addb
test
xchg
dec
ljmp
add
add
add
and
data16
fsubrl
add
imul
stos
rorb
lock
add
mov
cmpl
add
pop
push
add
lods
ret
mov
into
sbb
jnp
das
dec
out
mov
xchg
iret
mov
add
jbe
jmp
popf
fdivl
cli
popl
loopne
add
jl
repz
cmp
addr16
bound
jae
in
mov
or
pop
aam
mov
add
dec
or
and
jo
lock
rcl
cwtl
das
ljmp
enter
data16
int
and
enter
xchg
add
and
add
add
mov
int3
mov
and
mov
mov
repz
cmp
mov
add
ljmp
sahf
add
aas
movsb
inc
xchg
mov
add
mov
jns
jg
out
add
scas
imul
push
test
in
sbb
lock
loopne
xchg
xchg
roll
inc
je
and
mov
lods
xlat
movsb
out
popl
loope
push
cmp
imul
nop
mov
add
shrb
xchg
xlat
lods
xchg
cltd
inc
add
pop
arpl
aam
imulb
add
sub
jecxz
inc
dec
add
xchg
dec
jg
js
cmpsl
adcl
add
cmp
push
push
pop
push
imul
add
pusha
scas
inc
fs
push
or
and
add
sub
inc
xchg
imul
inc
or
out
add
test
and
xchg
insb
ja
xor
cld
scas
scas
lods
fcoml
stos
add
lods
xlat
add
and
sbb
mov
shlb
ret
mov
movsl
cmp
push
jns
in
cmp
mov
outsb
or
jg
xor
adc
cltd
ds
cmp
cmc
cs
dec
adc
scas
or
add
imul
fwait
dec
add
add
sbb
out
lcall
mov
sub
mov
mov
in
lret
sbbl
test
xor
cmp
sub
mov
push
or
imul
lret
inc
ljmp
sbb
lret
nop
mov
call
jb
and
xlat
mov
add
rolb
mov
getsec
bnd
and
or
out
adc
pusha
inc
lds
pop
stos
repz
mov
adc
movb
or
sbb
jle
pop
pop
mov
adc
hlt
cmpsb
les
js
jle
push
dec
sbb
inc
fsub
dec
dec
ud0
jne
dec
adc
sbb
or
add
adc
add
add
and
iret
mov
ja
daa
loope
sar
adc
enter
mov
sub
dec
jecxz
out
mov
pop
add
mov
mov
daa
sub
incb
cwtl
lcall
imul
cs
mov
mov
add
adc
scas
popf
jmp
and
add
lock
subl
push
leave
outsb
xchg
adc
pop
lods
rolb
in
stos
movsb
int
or
add
dec
xor
xchg
add
hlt
or
adc
push
loope
ret
cmp
push
fwait
mov
inc
xchg
sbb
adc
xor
gs
negb
repz
adc
mov
stos
mov
pop
outsb
faddl
pop
jge
lods
out
jle
loopne
add
jo
dec
mov
daa
ss
subl
inc
push
iret
pop
adc
out
pop
lret
sbb
aam
and
mov
jns
mov
cmp
lret
push
adc
fs
repz
add
mov
ss
in
adc
add
jp
mov
add
pusha
sub
add
ljmp
push
daa
add
inc
lock
xor
loopne
adc
jp
pop
das
movl
jae
popf
adc
push
lret
cltd
add
jnp
or
repz
or
jne
in
test
mov
lds
add
mov
or
push
mov
add
push
jge
add
pop
jae
incl
add
add
clc
js
push
jae
fwait
add
bound
sub
pop
mov
add
xchg
sub
push
add
or
test
ds
add
jp
lock
shr
ret
lods
fildl
inc
lret
mov
add
mov
shlb
stos
hlt
add
add
xorb
jbe
xlat
sbb
mov
sahf
inc
fwait
into
push
out
loopne
cwtl
xlat
cwtl
add
add
sub
lock
stos
je
dec
jno
mov
into
push
inc
out
rorb
test
out
aam
xchg
lret
movsb
addb
adcb
clc
sahf
pop
push
add
insl
push
add
adc
sbb
jb
fs
ss
hlt
jmp
add
out
and
imul
std
and
pop
add
adc
pop
test
mov
sbb
sbb
repz
aam
inc
inc
dec
mov
daa
pusha
outsb
dec
sub
fdivp
repz
or
mov
icebp
and
add
adc
sub
xchg
mov
cmp
sbb
jecxz
sbb
scas
lock
add
adc
mov
out
mov
fdiv
add
dec
dec
sbb
iret
push
jns
inc
sub
jbe
mov
mov
out
mov
adc
stc
add
sub
xchg
movsl
or
add
arpl
mov
add
scas
mov
cmpsb
shlb
lds
adc
pop
xchg
flds
cmpsl
test
testl
add
sarl
mov
lahf
lods
sub
add
pop
xchg
sahf
shlb
sub
fs
clc
add
sbb
add
xor
jb
cltd
popf
call
repnz
jl
call
or
sub
push
in
aaa
add
mov
mov
lahf
add
or
aas
cld
orl
dec
mov
add
fsubp
xor
sub
lcall
xor
push
dec
icebp
sub
dec
xchg
test
movsl
add
pslld
push
cmpsl
jns
xchg
nop
out
je
or
lret
dec
aas
icebp
add
mov
add
pop
add
dec
push
inc
pop
pop
mov
mov
in
ljmp
jne
in
xor
add
add
add
sub
scas
pop
mov
aad
dec
jg
mov
movsb
cmp
pop
pop
mov
lea
add
js
or
cmp
sub
cmp
hlt
mov
pop
jno
mov
data16
dec
mov
jecxz
icebp
movb
push
lock
push
add
mov
add
push
add
mov
pop
add
imul
fwait
xchg
pop
and
add
adc
add
mov
popa
jmp
add
dec
xchg
jno
loope
outsl
repz
sbb
inc
jb
jle
dec
fistl
test
ret
icebp
pop
mov
add
or
add
pop
mov
or
inc
add
mov
xchg
add
push
add
shl
lcall
mov
mov
es
dec
rolb
rorb
out
sub
adc
adc
pop
stos
add
add
dec
shll
jo
add
jb
test
clc
std
pop
nop
add
ljmp
add
faddl
adc
stos
add
add
or
mov
sbbb
jae
push
sub
dec
add
xor
mov
dec
inc
push
pop
outsb
imul
loop
add
sub
mov
pop
jbe
add
sar
int3
push
imul
add
push
in
mov
add
mov
xor
xlat
cltd
mov
inc
test
xchg
addr16
jo
push
push
add
and
xchg
or
loope
loope
out
daa
xor
sbb
nop
cmpsl
adc
mov
fcompl
popf
add
xchg
cmc
xchg
lock
mov
fwait
inc
inc
mov
sbb
add
add
add
mov
mov
in
sbb
mov
mov
mov
mov
std
mov
lds
mov
and
add
outsl
ret
mov
fbstp
and
jnp
in
out
xchg
gs
xlat
add
cmp
xor
lock
ss
add
addr16
bswap
jb
jge
sbb
push
scas
shrl
test
cmp
fildl
je
fwait
add
int
add
add
mov
cmp
cltd
push
mov
xor
sub
sbb
jbe
cmp
cmp
mov
ja
das
repz
cltd
add
in
int
in
roll
test
jns
ret
jae
sbb
mov
adc
lock
pop
rorl
shl
jbe
jl
addb
jle
sbb
jbe
sbb
movsb
js
outsl
sbb
popa
sub
pop
add
cwtl
mov
xchg
or
addr16
out
mov
xor
or
add
mov
in
js
add
mov
adc
fnstenv
add
pop
add
popa
aam
or
pop
sub
pop
fnstcw
cmc
add
pop
outsl
loopne
xorl
lods
les
xchg
mov
clc
adc
mul
jnp,pn
or
in
aad
mov
jp
or
or
add
lea
add
aaa
adc
mov
stos
pop
icebp
pushf
push
adc
push
icebp
popa
add
add
addb
adc
lds
push
iret
loopnew
add
add
repnz
add
pop
leave
or
jno
cmp
xor
cwtl
movsl
xorb
inc
cwtl
mov
add
sbb
jecxz
xorb
push
or
push
outsb
mov
lret
jno
inc
subb
adcb
mov
xchg
mov
add
rolb
invd
add
sub
mov
jo
enter
lcall
jb
add
std
enter
in
fwait
das
sbb
arpl
mov
push
add
jl
inc
adc
add
and
sahf
out
push
mov
add
cmp
mov
int3
xor
ffree
out
add
push
inc
data16
clc
sub
jmp
dec
jo
pop
into
lea
jp
mov
ljmp
ds
cmp
test
out
xchg
cmp
das
sarl
popl
cmp
add
xor
cwtl
sbb
popf
ss
ds
jg
jno
add
mov
add
dec
xchg
fucomip
xchg
jno
jmp
jns
xor
inc
fmuls
addb
loopne
add
ror
daa
mov
roll
cld
data16
xor
pop
sbb
out
add
mov
push
sub
aas
dec
mov
add
subl
aad
inc
add
cmp
ss
scas
fs
sub
adc
pop
in
call
add
test
mov
test
mov
cmp
sti
mov
mov
lret
test
dec
movb
lahf
fiaddl
jp
fld
xor
addr16
stos
stc
idivb
sbb
push
sbbl
sbb
mov
xor
add
add
push
lea
aam
out
add
sub
movsl
push
out
dec
push
add
and
adc
sub
and
adc
add
out
adc
in
add
or
iret
fsubs
push
xchg
mov
xor
cmp
repnz
popa
cmp
pushf
les
in
sbb
xchg
inc
mov
cmp
jns
add
xchg
movsb
add
jne
shlb
test
jp
fmul
outsl
roll
push
pop
add
inc
dec
adc
jno
outsb
add
add
rorl
and
insb
das
push
stc
and
mov
int
sub
addb
out
popf
inc
mov
mov
aad
in
loope
fldt
daa
inc
jg
lds
xor
repnz
leave
xchg
cltd
cmc
adc
add
push
int3
sub
lea
mov
test
dec
xchg
les
sub
add
or
add
push
aad
into
xor
clc
sub
repz
jmp
loopne
cmpsb
dec
les
fidivl
add
hlt
std
testl
pop
xor
aad
sbb
adc
fs
loope
adc
xlat
call
push
mov
push
mov
test
sub
ficompl
push
lret
cmp
push
jne
inc
xor
in
das
movsb
mov
mov
mov
movsl
sbb
ss
pop
inc
add
lret
mov
pop
or
sub
cltd
mov
lods
jmp
mov
inc
mov
xor
mov
adc
stos
fldl
jl
ja
shll
negb
sub
push
mov
sub
flds
xchg
insb
jnp
mov
imul
aad
mov
and
mov
xchg
sbb
movlps
add
add
adc
xchg
cmp
lea
sub
mov
xchg
sbb
insb
ss
xchg
rcrb
sahf
mov
int
aaa
or
mov
loopne
adc
ljmp
int
xchg
push
cltd
add
add
loopne
loopne
dec
or
cmp
push
add
add
cmpb
jo
in
test
dec
cmp
and
cltd
adc
jp
stos
xchg
or
popl
xchg
xor
jno
adc
xor
hlt
add
fwait
and
out
jmp
mov
pop
and
pop
mov
mov
scas
insl
inc
push
push
lcall
add
mov
cmp
add
mov
int3
add
nop
sub
mov
inc
loopne
add
das
stc
in
push
add
and
cmpsb
in
mov
cmpsl
pop
iret
popa
movsb
add
lea
ficomps
xchg
sti
fbld
mov
stc
dec
test
xor
movsl
testl
xor
int
mov
mov
pop
push
jg
add
in
xlat
xor
sub
sbb
adc
jmp
push
sub
mov
mov
add
out
mov
fimull
out
push
jnp
xchg
test
add
add
aad
mov
lret
iret
leave
adc
sbb
mov
push
xor
cmp
jge
add
jmp
add
hlt
jno,pt
add
mov
mov
sti
shll
jmp
cmp
ss
scas
add
bound
or
mov
fstl
add
add
aam
add
push
fidivrl
imul
sti
lret
lret
push
test
daa
and
and
fists
inc
fwait
insb
cmp
push
pxor
imul
dec
mov
add
test
mov
or
stos
pop
add
call
or
adc
xor
pop
mov
scas
and
xlat
lahf
jg
stos
xchg
sahf
ljmp
daa
xchg
add
out
lahf
add
add
int3
mov
lea
cmp
fistpll
incl
pop
imul
mov
lods
adc
frstor
loopne
inc
add
add
adc
jns
enter
daa
add
popa
add
shl
add
mov
add
and
mov
clc
pop
stos
and
dec
scas
cmc
mov
addr16
test
or
pop
stos
mov
mov
add
enter
sbb
sub
add
xor
popl
jb
add
xor
add
scas
cli
mov
xor
or
push
jmp
push
dec
orl
icebp
add
insb
xchg
pop
sbb
jle
adc
add
sbb
add
xor
icebp
push
mov
test
add
and
jne
iret
in
add
inc
jns
adc
les
popf
pop
mov
push
pop
add
and
jbe
add
das
aas
adc
add
stos
data16
xlat
divb
test
adc
repnz
add
inc
fiadds
add
jb
cmp
cmp
repz
and
jmp
push
push
es
pop
push
xchg
add
cs
hlt
cltd
jmp
cmpb
jmp
xlat
jo
add
add
jle
in
mov
push
repz
add
xchg
add
push
xlat
flds
adc
sbb
dec
jb
es
in
sub
add
mov
add
xchg
push
mov
out
sub
roll
mov
add
pop
cmp
data16
gs
and
or
sub
out
mov
xchg
add
mov
and
mov
cltd
mov
lea
mov
xchg
cltd
add
imul
inc
add
push
fsub
cld
dec
jb
cmp
mov
les
xlat
add
in
add
sub
outsb
jnp
stos
cwtl
xchg
and
js
sahf
pop
icebp
and
call
push
sarl
clc
negl
mov
xchg
sbb
jae
int
out
cmp
cli
inc
push
sbb
insb
and
aam
fildl
xor
or
add
cmp
addr16
pushf
lods
add
rcrl
mov
jae
shll
cmp
and
jecxz
jecxz
inc
lods
xchg
xchg
push
outsl
adc
fldl
adc
push
cmp
test
push
sub
mov
add
fildll
adc
and
lret
in
pop
movl
or
scas
pop
out
add
dec
and
add
outsl
add
add
or
aad
push
outsb
adc
inc
arpl
sti
fwait
cld
adc
xchg
mov
dec
aam
lahf
cwtl
add
add
and
cmpsl
ljmp
ret
mov
stos
mov
dec
add
jg
stos
sbb
add
sub
testl
push
cmpsb
adc
add
sbb
fwait
mov
cwtl
add
sbb
mov
fildl
pop
mov
sub
and
pushf
adc
lcall
test
pop
adc
add
pop
xchg
filds
push
fnstcw
popf
lahf
ljmp
dec
test
faddp
icebp
dec
fmul
jnp
in
cltd
dec
mov
cmp
adc
pop
bound
fidivs
cld
dec
mov
sbb
xchg
xchg
iret
imul
lcall
test
lods
or
mov
xchg
dec
push
jecxz
sbb
out
push
pop
shll
shll
in
and
lods
push
add
inc
sbb
lea
enter
ljmp
add
out
xlat
cmp
or
and
cmp
cmp
aaa
mov
lcall
mov
jle
ret
ret
mov
or
fildll
jge
cmp
gs
das
and
in
jns
leave
ret
and
ret
add
push
pop
jns
repnz
ljmp
cwtl
ficompl
cmpsb
les
add
jmp
jecxz
jecxz
fwait
lea
imul
adc
sub
and
pop
cli
push
add
sub
mov
dec
push
sub
std
push
pop
repnz
in
push
fucomi
fldt
mov
push
inc
mov
insb
dec
fwait
mov
jmp
and
cli
add
movntq
jg
add
and
les
scas
insb
hlt
add
sahf
push
subl
and
dec
cmp
jge
cmp
add
mov
fs
lods
movsb
jle
test
loope
add
arpl
add
add
popl
add
add
arpl
orb
lods
cld
popl
std
or
mov
or
dec
mov
mov
sub
int
xor
je
lcall
mov
cmpsb
sub
dec
xchg
shl
pop
testl
in
pop
jmp
add
ficoms
mov
aad
add
add
movb
mov
sbb
add
or
or
jge
adc
jge
icebp
test
mov
push
add
pop
pop
cmp
mov
arpl
stos
add
lock
jl
ret
push
loopne
movsw
add
test
push
sbb
mov
xor
fisubrs
mov
dec
scas
cmp
popa
rclb
mov
imul
insb
lods
add
ret
push
add
movsb
aad
add
push
sub
pop
fs
or
xor
fsub
xchg
or
adc
rolb
enter
inc
add
or
addb
popa
jmp
mov
int3
xchg
movsl
jno
pop
jae
xchg
lods
add
mov
mov
pop
add
insb
mov
mov
pop
add
sahf
repnz
mov
cmpsl
add
ficomps
pop
mov
xor
add
pop
outsl
pop
jae
xorl
jg
cmp
mov
add
jnp
std
faddl
push
cmpsl
mov
or
int3
movsb
jb
aad
movzbl
loope
mov
push
fidivl
dec
pushf
inc
dec
mov
hlt
xor
push
jmp
add
jmp
cwtl
in
lcall
add
lcall
insl
add
imulb
push
inc
cmp
pop
sbb
dec
add
ss
out
nop
imul
xlat
leave
add
data16
stc
stos
add
add
add
xchg
mov
fs
cmp
mov
pop
cmp
rcl
adcl
dec
mov
flds
jle
fwait
pushf
movsl
iret
cmp
lret
test
xor
into
add
add
xchg
add
jb
sub
add
inc
mov
add
inc
stos
adc
pop
ljmp
negl
mov
pop
and
mov
mov
xchg
scas
fldenv
mov
fdivs
stos
leave
arpl
repnz
out
pop
mov
add
inc
mov
cltd
mov
add
cmp
or
sub
in
add
fdivr
dec
xchg
imul
out
fists
xor
cmp
xchg
icebp
addr16
inc
fstps
inc
idiv
add
adc
lds
push
pop
imul
sbb
add
inc
cmp
inc
xor
pop
imul
inc
mov
imul
xchg
lahf
push
in
dec
add
inc
lock
pop
xor
xchg
dec
dec
xchg
cmp
dec
mov
add
cmp
xor
jbe
xchg
popa
test
sub
add
add
add
ss
inc
stos
add
jmp
out
xor
dec
add
mov
add
mov
or
jne
add
xchg
rorb
mov
dec
insl
repz
or
imull
add
out
sahf
out
add
pop
sub
imul
adc
pop
outsb
sub
push
cmp
add
pop
add
mov
dec
add
cmpsl
and
pop
inc
test
add
les
add
fmull
push
xor
adc
add
jmp
stos
mov
pop
add
cwtl
test
rcll
mov
out
testb
das
cli
mov
lock
out
mov
dec
and
xor
or
out
add
sbb
in
pop
lcall
mov
jnp
xor
cmc
xor
aaa
outsl
sub
int3
mov
mov
pop
popf
pop
call
gs
out
int3
adc
test
aad
inc
push
jecxz
or
sbb
xchg
testl
sub
insl
push
hlt
cmp
clc
jg
std
xchg
rorl
subl
icebp
bound
adc
ljmp
dec
push
and
add
add
out
mov
clc
xchg
test
cmpsb
aad
pop
repnz
sbbl
movsl
sbb
xchg
add
push
dec
add
loopne
add
aad
mov
scas
add
lds
sub
and
out
clc
ja
cli
jmp
xchg
add
mov
mov
push
stos
jns
lea
sub
xor
lods
add
add
insl
add
pop
cmpl
pushf
push
push
rcll
jge
mov
push
xchg
lea
js
inc
lods
mov
negb
or
pop
jb
fadds
or
stc
add
pusha
pop
cmpsl
mov
outsw
dec
std
mov
pop
int3
sar
stc
xchg
ficomps
inc
xchg
dec
out
inc
add
add
inc
add
push
cmp
inc
push
ret
imul
add
xor
cmp
push
add
add
movsl
cld
and
and
arpl
ja
pop
mov
add
std
inc
shlb
add
call
add
mov
out
mov
rolb
add
gs
clc
pop
fsubs
movsl
cmpb
out
shlb
add
vmovq
test
push
and
jg
enter
in
push
mov
add
test
jne
dec
scas
jne
cltd
repnz
lcall
dec
mov
or
lods
mov
cs
cmp
add
sbb
les
xchg
pusha
sti
add
add
add
hlt
dec
add
push
aas
sbb
lret
ljmp
inc
adc
daa
int
stos
arpl
push
sbb
cmc
nop
das
xchg
sub
add
orb
lcall
mov
imul
ret
data16
mov
in
mov
inc
cmpsl
mov
mulb
mov
icebp
adc
sub
inc
mov
inc
sub
mov
push
arpl
pusha
xchg
jle
rdpmc
xor
inc
out
pop
repnz
cmc
dec
sub
adc
pop
lret
xchg
test
mov
fsubs
loop
cmp
xor
fs
mov
jnp
mov
add
loope
push
add
add
mov
movsb
ljmp
add
mov
mov
mov
mov
fldenv
add
cmp
adc
mov
xchg
leave
and
psubq
les
mov
cmp
fdivrl
xchg
mov
sub
or
add
sub
sub
push
stc
notl
mov
lahf
std
addb
add
and
int
mov
aaa
fistpll
dec
pop
je
scas
repz
out
push
pop
fstpl
shll
ret
jnp
pop
gs
dec
cmpsb
ret
add
fisubrl
daa
xchg
ret
pop
mov
loopne
or
roll
add
add
js
loop
clc
push
jne
faddl
in
les
aam
stc
fstpl
hlt
aad
mulb
or
lods
shr
pop
out
lcall
aam
push
ficoms
addl
int
and
stos
add
or
in
mov
shrl
fdivrs
add
clc
cmp
pusha
add
xchg
sub
jecxz
insl
push
pop
sbb
aam
mov
jp
add
cmp
adc
add
lahf
add
dec
imul
add
add
test
add
mov
sbb
add
lock
popw
jae
and
jb
test
mov
mov
inc
in
jmp
and
sub
jmp
orb
sbb
xchg
repnz
xor
hlt
add
mov
push
and
pusha
add
pop
stos
leave
fldenv
pop
pusha
jle
rol
stc
push
outsl
dec
add
cmpsl
adc
mov
cmpsl
add
cmp
xor
push
mov
stos
rorl
mov
sub
xchg
mov
movsb
mov
add
pop
add
test
lods
xor
dec
jecxz
scas
xchg
add
pop
into
icebp
popf
xlat
xchg
rolb
enter
jns
loopne
scas
jg
mov
add
add
in
pushf
or
pop
add
es
jp
adc
icebp
mov
add
pop
add
mov
add
push
call
push
xor
inc
addr16
loop
adcl
mov
out
dec
in
in
fs
cmpsl
push
cmc
test
adc
cltd
das
bound
iret
cmp
cmp
inc
sti
aam
aad
imul
mov
or
push
sbb
mov
insb
ret
xchg
add
scas
mov
sti
lock
lods
icebp
adc
xchg
es
and
clc
incb
or
mov
jno
mov
stc
jno
cmp
push
jbe
pushf
xor
jae
add
js
add
mov
stos
loopne
je
jge
xchg
sub
mulb
inc
loope
dec
cltd
jl
scas
testl
and
sub
adc
add
fidivs
outsl
adc
movsb
out
sub
cwtl
mov
xchg
cmp
jbe
jle
stos
add
aam
xchg
sub
inc
mov
lret
mov
mov
add
out
aaa
inc
add
leave
xor
add
fcomps
push
mov
rcrl
cli
scas
mul
movb
notb
aas
sahf
sahf
add
sbb
jmp
gs
dec
mov
mov
jne
sub
mov
ja
push
xor
fstpl
clc
out
pop
stos
or
out
jns
pop
fwait
lret
lock
jno
outsb
add
orl
adc
inc
add
mov
fwait
add
mov
hlt
add
add
hlt
lds
jo
int3
testb
or
fwait
sbb
lret
add
add
push
inc
or
adc
cmp
nop
orb
sbb
outsl
xor
cpuid
imul
dec
sbb
add
addr16
lcall
mov
repz
pop
push
data16
aad
xor
mov
cli
cld
ja
mov
xchg
and
add
add
or
mov
xchg
jmp
out
add
and
cmc
notb
and
add
jge
add
mov
repz
jno
add
inc
lret
cli
insl
mov
or
stos
int
sarb
add
add
xor
int3
icebp
add
cwtl
pop
mov
sbb
int3
sub
or
pop
lahf
mov
add
and
xchg
add
add
lods
xchg
out
mov
jae
loope
add
cmc
idivl
mov
xchg
add
int
psubsw
fcmove
sub
ss
jmp
into
testb
pop
repz
inc
fldenv
mov
sbb
stos
dec
push
add
in
dec
add
and
adc
add
lock
movsl
add
jp
add
xor
mov
mov
mov
cwtl
adc
push
in
or
sub
cmp
sbb
push
test
mov
mov
inc
std
push
add
daa
stc
fcmovu
inc
push
into
add
mov
inc
xor
testl
and
add
das
sarl
sbb
scas
arpl
sbb
and
dec
call
mov
loop
xchg
pushf
inc
sub
inc
xor
push
lahf
daa
dec
jmp
jno
jp
sarb
mov
or
add
bound
bswap
dec
test
add
shrb
dec
add
push
xor
and
adc
test
xchg
call
or
xor
mov
dec
addr16
shll
sarb
mov
jno
fimull
rclb
ret
sub
cmp
mov
sahf
rolb
adc
add
out
pushf
jo
push
fwait
lret
push
push
repz
lods
mov
pop
push
jnp
add
fsubr
pop
dec
into
push
scas
out
js
dec
add
inc
mov
cwtl
push
xchg
nop
movsb
sti
into
jl
mov
or
cmpsb
add
sub
inc
stos
inc
movsl
inc
dec
loope
jecxz
or
push
dec
sbb
xor
jmp
jg
add
movb
adc
jmp
testb
imul
leave
addb
dec
pushf
add
mov
and
pop
divb
mov
dec
adc
fs
into
pop
ret
push
dec
movsb
add
add
push
mov
mov
rclb
in
stos
jge
mov
push
int3
mov
pop
arpl
out
add
je
jo
or
push
cli
push
mulb
cmpsb
mov
clc
sub
es
xlat
mov
fwait
push
stos
sbbb
push
push
cwtl
mov
adc
pusha
or
sbb
inc
and
das
xor
xlat
not
add
insl
mov
int
push
and
js
out
adc
gs
lcall
neg
fs
mov
movl
xchg
adc
loopne
jns
emms
sbb
loop
repnz
push
test
mov
xchg
add
in
xorl
in
test
xor
xchg
movsb
dec
arpl
movsb
jmp
enter
jae
inc
cld
jmp
adc
add
add
sbb
add
sbb
insb
add
mov
add
push
dec
stos
leave
ljmp
sbbl
mov
add
lods
pop
add
clc
inc
add
pop
fwait
xchg
jmp
adc
mov
pop
xchg
cld
arpl
out
cmpb
faddp
arpl
shll
mov
stos
ret
insb
ret
inc
xor
add
xchg
pushf
movsl
ret
and
xchg
mov
test
inc
popa
mov
sti
mov
shrb
xor
sbb
xchg
add
xchg
fcompl
push
jl
xor
lods
jge
push
jns
add
push
fcomps
add
cwtl
daa
cmp
add
lods
mulb
jl
stos
pop
fstps
jns
out
cmp
insb
jge
in
jns
inc
aam
inc
mov
push
adcb
add
add
mov
lds
cmpsb
sbb
sub
cmp
hlt
in
roll
int
xlat
dec
xchg
add
or
fidivrs
sbb
orl
ret
subb
xchg
mov
pop
dec
daa
cmc
or
repnz
mov
or
loop
dec
mov
add
xor
out
popf
add
repz
pop
out
addl
xchg
add
pop
cli
jns
adc
pop
mov
xor
mov
data16
addl
pop
call
pop
xchg
sub
cmp
jge
in
jnp
add
shr
sbb
xchg
pop
lret
or
push
adc
sbb
das
mov
push
add
enter
aaa
jb
lcall
hlt
xorb
filds
push
add
cmp
daa
add
movsl
lahf
xchg
jns
jne
out
inc
rolb
rcl
jge
jmp
sub
sub
stc
cmp
pop
lock
add
rcrl
sahf
inc
jb
push
sti
popf
fmulp
and
lock
or
loope
fstpl
xchg
xchg
imul
add
add
fcomps
or
arpl
and
mov
jle
jo
cmp
add
call
add
mov
add
and
mov
sbb
pusha
lds
dec
pop
mov
add
or
push
arpl
rolb
xor
bnd
fildl
xchg
push
test
fidivrl
addl
xor
xor
imul
dec
mov
imull
mov
xchg
inc
pop
add
shlb
sub
fs
add
in
mov
test
icebp
sub
add
xchg
dec
add
push
dec
lock
or
addb
push
std
push
add
repnz
add
test
mov
push
pop
sub
add
outsl
pop
add
imul
lret
andb
xlat
mov
jnp
cmp
getsec
stos
xchg
adc
pop
add
inc
add
dec
add
pop
jae
adc
out
int3
fiaddl
mov
into
out
mov
outsl
mov
mov
outsl
rcrl
push
and
mov
add
jae
and
movsb
jb
mov
scas
jp
jge
xchg
sar
xchg
data16
lahf
shrl
inc
pop
push
js
add
pop
xchg
sub
repz
cmp
push
xchg
mov
stc
mov
jbe
add
cmc
cs
orl
dec
sbb
enter
rcrb
clc
xchg
stos
xor
cmp
movb
out
into
cltd
mov
inc
mov
lds
cmpsl
or
xchg
or
add
mov
adc
sbb
adc
add
mov
inc
dec
aam
icebp
std
pusha
add
jne
stos
xor
jmp
aaa
push
cld
jae
add
sahf
ljmp
incl
mov
hlt
lods
ret
stos
push
iret
add
xchg
lods
add
add
data16
mov
xor
adc
popa
mov
jae
mov
sub
mov
dec
cmc
add
or
xchg
fdivrs
mov
ficoml
addr16
cmp
cmp
add
pop
in
add
mov
inc
add
pop
push
in
push
int
enter
add
adc
add
test
cmp
mov
lahf
pop
movsb
js
enter
and
add
popf
push
incb
jne
xchg
lock
inc
addl
mov
add
jecxz
in
jb
push
cmpsl
das
subb
lcall
adc
push
add
mov
imul
aaa
mov
sub
mov
add
jl
fsts
fwait
pop
sub
sub
sbb
push
dec
into
jae
mov
roll
idivb
aam
fldt
lea
pop
or
mov
xor
xlat
mov
or
mov
out
orl
push
sbb
add
fldl
outsb
popf
scas
xchg
out
jl
dec
adc
repnz
ds
in
gs
iret
xchg
push
cmpsl
push
add
addb
mov
cmp
div
aad
cmp
sbb
shlb
inc
mov
pusha
pusha
pop
ror
das
adc
icebp
js
scas
cmp
loop
fisubl
push
add
cmp
add
add
mov
shlb
fisttps
loope
stos
movsb
adc
xor
testb
insl
xor
outsl
shrb
or
mov
cmpsl
scas
movsl
jno
out
paddsw
gs
inc
sahf
clc
pop
add
add
add
mov
icebp
fimull
add
das
mov
leave
sbb
and
rcr
jne
add
mov
add
cmp
sti
sub
cmpsl
add
add
incb
test
mov
stos
pop
imul
jmp
jnp
xchg
outsl
mov
stos
lea
add
jecxz
int
fmuls
jg
add
pop
xor
mov
leave
jo
sbb
jecxz
test
sub
cld
sti
enter
enter
xor
mov
fimull
js
and
aad
jge
add
rolb
fnstsw
dec
movsl
add
ret
adc
ret
push
scas
dec
hlt
xchg
es
pop
dec
jae
outsb
scas
lea
fldcw
pop
or
pop
sub
nop
addr16
sub
xchg
repnz
add
aaa
jmp
jmp
and
pop
add
pop
lods
stc
add
cwtl
xor
push
add
ja
cwtl
mov
out
push
jmp
mov
popf
cmp
push
add
mov
inc
lret
cs
insb
jo
fimuls
mov
les
addl
inc
shll
jl
push
add
fcmovnb
jp
test
stos
and
in
add
mov
lds
add
xor
jae
loope
add
loopne
sbb
fistps
lret
adc
push
dec
jno
push
or
gs
mov
sbb
cli
fldcw
movsl
fucomip
dec
push
mov
shlb
pop
add
fiaddl
and
inc
mov
jg
and
ljmp
mov
lret
sub
xlat
push
add
mov
push
mov
std
int3
mov
mov
or
mov
add
push
jno
xlat
push
stos
roll
gs
stc
pop
dec
jb
sbb
fstpt
jnp
loope
add
fwait
nop
aaa
testb
and
add
loop
pushf
push
pop
mov
pop
fsubl
cmp
mov
and
int3
and
add
add
decl
addl
sub
stos
xchg
enter
mov
lods
lret
mov
add
add
nop
hlt
mov
pop
sbb
andb
pop
fidivrl
xchg
ja
pop
add
add
cmpsl
xor
std
and
or
xchg
pop
push
mov
sbb
movsb
add
popa
movsb
adc
push
add
mov
inc
sbb
add
push
mov
ret
xchg
ss
sbb
in
mov
xchg
add
fucomip
add
std
hlt
outsb
jp
push
push
movl
iret
adc
mov
xchg
inc
dec
insl
xor
mov
fiaddl
mov
jmp
stos
cmpsl
add
push
nop
or
push
stos
test
ficoms
hlt
cmpb
sbb
bound
mov
cmp
fwait
jno
sub
add
sub
pop
add
enter
add
inc
inc
iret
and
add
mov
inc
add
or
je
mov
lret
cmp
xchg
cmp
cmp
dec
cmpsl
cmp
add
mov
outsb
xor
dec
xor
jl
xor
push
or
inc
js
xchg
jmp
xor
xchg
out
cltd
enter
ret
and
jne
mov
lret
scas
push
xor
fs
inc
das
push
jo
add
or
xor
push
mov
rolb
adc
pop
xor
lods
push
add
jle
pushl
sbb
pushf
lcall
in
jns
insl
ret
jne
les
xchg
sbb
push
inc
lods
and
mov
pop
add
xchg
push
jmp
sub
sbb
icebp
pop
dec
jo
pop
and
jnp
insl
lds
and
insb
popf
sahf
add
mov
add
jle
pop
inc
mov
sete
cmpsl
xor
repz
xchg
add
sbb
or
gs
jmp
movsl
outsb
lods
lods
add
push
popa
add
xor
sbb
sub
cmp
mov
fdivrp
roll
leave
dec
sub
xor
xchg
shlb
aam
mov
push
add
scas
aam
xor
dec
lods
xchg
and
test
wrmsr
jg
sbb
lahf
ltr
ja
mov
test
xor
sub
pop
lahf
lcall
add
jg
data16
shll
loopne
scas
jmp
dec
add
and
add
hlt
mov
or
mov
test
outsl
jnp
sti
jmp
dec
arpl
cwtl
incb
xor
add
addl
bound
mov
stos
stc
xor
add
jmp
xlat
add
das
mul
dec
add
jno
add
pop
xchg
testb
mov
dec
and
xchg
call
add
shl
add
jne
push
xchg
cmp
xor
jno
int
add
movsl
pusha
pushf
dec
roll
stc
dec
add
add
std
add
sbb
dec
jmp
mov
inc
out
jl
sub
cs
sbb
mov
lock
lret
fisttps
or
or
add
test
rol
sahf
scas
bound
divl
mov
inc
jbe
iret
add
xorl
mov
imul
push
inc
xchg
mov
shll
add
jno
push
incb
bound
inc
les
daa
mov
outsb
fnsave
aas
imul
mov
pop
int
dec
push
jo
leave
jecxz
jno
movb
add
out
jmp
and
push
cmp
in
out
add
mov
iret
mov
stc
fildl
push
xchg
jbe
in
sti
pop
mov
aaa
mov
int3
inc
sub
jns
rol
lock
cmp
mov
mulb
jnp
loopne
adc
mov
add
push
pop
mov
stos
mov
add
add
jb
je
push
stc
stc
add
sbb
movsl
rcl
jp
sbb
or
cmp
test
out
mov
pop
xor
push
mov
ret
pusha
iret
in
add
mov
jno
stc
push
fidivs
jl
mov
push
jmp
mov
xchg
pop
jbe
inc
sbb
jmp
jo
ret
add
xchg
movsb
aaa
mov
mov
outsl
add
pop
adc
xchg
xchg
jg
xchg
dec
test
or
addr16
xchg
hlt
add
and
add
cmp
push
leave
aam
adcl
add
rcll
and
add
subps
lods
add
add
dec
add
push
lods
fwait
push
xchg
imulb
lock
fstps
insl
adc
xor
pop
push
pop
stos
add
ret
mov
cmc
add
add
pushl
and
clc
pop
sti
ds
add
push
into
mov
mov
cs
xorw
xchg
arpl
or
add
jb
in
icebp
push
push
dec
push
adc
lcall
mov
inc
or
mov
push
sub
and
add
add
jnp
add
and
fistpl
sahf
es
and
or
pop
dec
add
pop
mov
popl
int
scas
imul
cmp
cmp
lds
dec
cmp
add
add
mov
pop
imul
xor
mov
push
out
enter
stos
fldl
popa
xor
add
mov
add
arpl
dec
dec
xchg
add
mov
lods
jle
test
add
add
insl
add
mov
aad
sti
jmp
fwait
jle
jo
xchg
sysenter
cmp
and
and
adc
dec
scas
add
arpl
outsb
sub
mov
pop
jnp
mov
inc
in
mov
sbb
imul
stos
add
add
add
push
add
adc
push
test
pop
repnz
push
add
les
enter
add
pop
roll
ss
add
pusha
mov
call
dec
fldenv
push
mov
inc
mov
ret
jg
hlt
add
add
inc
push
fmull
mov
mov
addr16
test
out
fldln2
lret
fistl
add
insl
push
xor
sub
add
pop
jnp
jnp
mov
mov
mov
xorb
jp
push
sbb
mov
xor
popf
test
cmc
xor
add
out
rol
xchg
add
sub
jp
aaa
dec
push
xor
pop
outsl
xor
jge
test
insl
cltd
add
dec
verr
dec
mov
xchg
mov
int3
shrb
addl
xor
icebp
jl
add
lock
cmp
push
pop
jp
add
add
aam
xchg
rcrl
scas
pop
ljmp
mov
lock
mov
arpl
repnz
add
xor
and
mov
mov
popf
sbb
xchg
pop
cmp
stc
add
lods
out
add
mov
outsl
inc
or
add
scas
std
adc
lahf
hlt
out
adc
add
mov
fcompl
mov
mov
and
adc
scas
icebp
mov
push
add
movsb
or
movsl
jmp
out
mov
sub
mov
jns
mov
add
cmp
add
sbb
and
cmp
lods
ljmp
sbb
or
xchg
dec
cmp
jg
mov
jge
inc
xchg
lret
mov
mov
fwait
mov
adcb
sub
popa
push
jbe
pop
lds
dec
test
add
adc
pop
aam
and
pop
mov
dec
mov
mov
jae
ret
cmp
add
pop
sbb
movsb
sbb
mov
adc
in
or
and
xor
dec
and
shll
pop
xchg
ja
dec
xchg
push
sbb
repnz
pop
aam
call
add
push
adc
and
push
pop
jg
ret
je
imul
mov
add
sbbb
cmpsl
mov
jns
pop
inc
xor
and
bound
sub
adc
rolb
filds
add
stos
jge
cmp
push
mov
lods
push
enter
lods
test
add
sub
mov
enter
mov
popa
inc
adc
dec
icebp
jl
and
stos
xor
movsl
add
mov
cmp
and
jbe
or
add
cmpsl
test
and
je
add
lods
dec
cmp
xchg
xchg
add
sti
add
fisubs
jecxz
scas
icebp
ds
ret
out
movsw
sbb
out
test
and
inc
push
hlt
rcll
add
in
repz
or
jb
rolb
hlt
imul
add
xor
mov
cmp
jbe
push
fnstcw
popf
adc
or
or
add
add
add
add
add
and
adc
sarb
addr16
cmc
stc
mov
inc
jmp
in
sarb
int
mov
mov
add
outsl
loopne
stos
mov
fsubl
mov
add
push
dec
dec
mov
int3
pop
in
push
pop
push
add
test
daa
outsb
inc
add
mov
sbb
add
mov
push
fnstenv
fsubl
add
movsb
sbb
pop
add
ror
scas
mov
insb
stos
add
add
aad
out
jae
cs
adc
nop
roll
jge
rorl
mov
ret
bound
pop
and
inc
dec
adcl
xor
fcompl
xchg
cld
fcmovnu
fidivrs
add
lea
cltd
xchg
fsubr
lret
add
mov
sbb
add
and
add
sbb
adc
adc
xchg
and
sub
inc
rorl
mov
add
popf
mov
mov
and
mov
push
dec
xor
ja
mov
insb
add
std
and
jo
mov
dec
add
adc
iret
add
jnp
outsl
xchg
lcall
movsb
int
mov
enter
pop
lahf
cltd
jmp
mov
sbb
add
xor
adc
outsl
mov
enter
or
push
imul
dec
add
sub
test
movsl
add
add
inc
xchg
movl
push
ja
lcall
cmpsb
int
in
xor
sti
mov
stos
ds
inc
movsl
sub
pop
mov
loopne
add
dec
add
pop
add
inc
fsubr
lahf
cwtl
addb
inc
mulb
xchg
mov
aas
je
push
jbe
lods
pushf
jmp
repz
lcall
push
lahf
pop
pop
mov
adc
stos
cwtl
add
jmp
cmp
pop
aaa
inc
addr16
adc
js
mov
sub
add
fdivr
jge
sub
in
push
push
mov
dec
in
add
jbe
add
cmp
andl
add
fs
add
lea
pop
mov
mov
xor
sbb
dec
dec
add
adc
mov
aas
sldt
cmp
pop
add
enter
lret
les
flds
and
inc
push
add
hlt
jo
sbb
xchg
jae
out
divl
add
fidivl
jle
xchg
inc
loopne
pop
inc
or
mov
add
loopne
add
mov
add
ficompl
push
xchg
lods
dec
push
add
jmp
dec
stos
test
add
mov
mov
add
test
sbb
aaa
xchg
aam
or
add
mov
xchg
jnp
mov
outsl
out
into
mov
push
dec
dec
or
xchg
roll
and
clc
jo
lar
add
xchg
push
pop
cmp
add
mov
xchg
cmp
loopne
or
jg
xchg
dec
pop
mov
push
add
stos
les
or
lock
aas
inc
mov
and
add
fcoms
test
hlt
add
jmp
loopne
idivl
add
sbb
add
add
data16
cwtl
xchg
mov
mov
test
cmpb
add
inc
insl
mov
add
loope
loop
push
stos
roll
movsb
add
lret
mov
mov
cltd
push
add
iret
add
nop
cmp
hlt
repz
daa
dec
push
cld
sbb
mov
stos
add
addl
mov
lods
out
cmp
mov
sbb
into
repnz
pop
xchg
enter
sub
ret
mov
nop
pop
lcall
pusha
jbe
lods
sbb
mov
inc
scas
repz
scas
dec
addr16
push
add
inc
add
add
arpl
mov
insb
stos
mov
into
mov
cli
inc
jnp
xor
rcrb
push
fiaddl
xchg
mov
push
loopne
or
das
out
lret
jle
or
in
mov
mov
mov
add
add
sub
rolb
insl
loope
inc
lods
test
mov
incb
inc
ja
sub
pusha
fistpl
data16
arpl
iret
nop
dec
or
adc
xor
sahf
add
xchg
sub
cmpsb
mov
xchg
or
push
add
jmp
not
dec
add
pop
jo
imul
shlb
addl
lahf
ljmp
xor
xchg
movb
jecxz
rorb
cmpsb
pop
pop
jns
add
mov
pop
faddp
mov
dec
mov
mov
mov
rolb
push
add
sub
push
lds
jb
call
jge
add
jmp
inc
lock
inc
pop
jmp
adc
add
add
xor
aaa
addr16
push
cltd
xor
push
pop
lahf
rcll
add
enter
pop
pop
sbb
pop
dec
mov
xchg
fcmovu
jb
ds
ss
in
add
test
and
mov
sub
lods
das
xchg
cmp
add
and
js
jb
xchg
inc
fstp
xor
fs
les
adc
lret
add
fsubs
jae
shrl
movsl
mov
scas
and
out
pop
pusha
mov
jbe
mov
fwait
sbb
jge
int3
das
fsubrs
and
jne
add
push
add
mov
jae
in
in
lds
fcompl
dec
mov
jno
xor
outsb
mov
mov
and
jne
loope
test
sub
loopne
xchg
ja
es
fwait
add
sub
pop
add
sub
mov
addr16
pop
rcrl
add
iret
xchg
movsb
xchg
add
in
pop
add
mov
dec
daa
in
mov
je
xlat
out
sbb
xor
add
mov
scas
cmpsl
mov
push
scas
sbb
fwait
addr16
pop
clc
pusha
mov
rcrl
add
or
loop
lcall
scas
lret
addr16
mov
bound
add
or
outsl
push
and
addr16
cmc
es
lahf
hlt
loopne
xor
les
cli
adc
test
shll
lahf
sbb
add
jle
jecxz
xchg
fldcw
mov
cli
push
mov
mov
push
subb
pusha
add
pop
pop
in
mov
sahf
or
cmp
out
xor
xlat
inc
mov
enter
sbb
and
pop
mov
mov
cmp
daa
loop
in
xor
dec
dec
or
cmp
add
popf
out
ret
xchg
addr16
jne
add
sahf
lods
mov
mov
and
push
add
stos
imul
add
xor
cmpb
das
pusha
sbb
inc
outsb
addb
insb
and
mov
fcompl
pop
negl
add
mov
add
inc
lret
and
mov
add
outsb
rclb
scas
sub
cwtl
add
push
rorl
subl
mov
ffree
in
jbe
xchg
sbb
jbe
pop
dec
or
add
test
add
inc
ret
mov
add
push
pop
lock
push
jo
mov
add
out
push
incb
adc
push
xchg
jmp
or
sahf
jl
xorb
scas
outsl
fldl
add
xchg
data16
shl
gs
push
pop
leave
les
push
xor
popl
idivl
ror
or
sbb
mov
rcl
sbb
mov
cmp
int
dec
add
add
pop
pop
psubsb
ljmp
aad
cwtl
stos
add
mov
push
dec
sbb
inc
jae
fldl
fdivrl
add
and
stc
add
aas
dec
dec
sub
std
iret
pop
jae
scas
cmpsl
repz
add
mov
add
std
lahf
lds
mov
cld
add
add
jbe
xlat
add
scas
add
add
movsl
nop
jp
in
cmp
aam
fwait
push
fldl
bound
add
out
add
outsl
add
sbb
cmc
es
or
add
push
es
ss
dec
mov
pop
jl
add
inc
rclw
mov
std
add
or
lahf
push
add
cmpsb
sub
mov
roll
repz
mov
and
aaa
clc
cwtl
jmp
lahf
inc
add
pop
xor
adc
jge
add
fiadds
popf
fiaddl
loope
mov
flds
push
imul
pop
cmp
div
and
add
lret
pop
jecxz
icebp
sbb
cmpsb
push
xchg
sarl
clc
test
xor
mov
lret
adc
scas
add
cli
in
repz
add
inc
xor
add
add
insl
rcr
ret
sub
jbe
add
decb
cmp
adc
xor
insb
testl
sub
leave
or
and
cmp
fisubrs
xchg
imul
lret
pushf
mov
pop
mov
cmpsl
dec
sbb
jno
fmull
adc
add
int
push
sarl
push
add
push
cmc
rolb
mov
in
mov
ret
lret
dec
movsb
push
adc
and
push
hlt
sbbb
sbb
ret
sbb
jns
mov
dec
lcall
or
xchg
add
out
js
jmp
test
rcrl
repnz
ja
pop
ffreep
jne
sbb
sbb
lock
push
add
pop
push
in
add
push
mov
rorb
test
pop
mov
mov
push
add
dec
adc
arpl
add
imul
inc
outsl
sbb
pop
fildl
jp
dec
xchg
and
pushf
mov
add
and
cmp
cmp
popa
pop
inc
int
int3
sti
sub
into
jp
xchg
test
and
sbb
pop
xchg
add
out
add
xchg
in
jle
add
paddb
mov
in
add
outsb
or
dec
mov
jnp
or
inc
les
jne
jns
and
jge
push
in
ror
cmc
fwait
leave
jne
xor
mov
lds
push
gs
push
mov
xchg
jb
and
mov
push
add
push
add
or
aas
aas
lret
scas
in
xchg
cwtl
push
fwait
push
cmp
add
mov
fcomi
pop
pushf
and
cmp
dec
pop
jbe
or
call
add
add
ljmp
cld
fistpll
scas
loop
add
cli
ss
repz
add
mov
adc
jge
loop
jb
addr16
add
les
add
add
arpl
pop
aas
lret
and
xchg
add
cli
xchg
rclb
cmp
sub
cmp
inc
mov
rcrl
test
adc
in
jecxz
addl
leave
jge
idivb
sub
add
insl
add
stos
cs
and
sbb
mov
int3
xor
dec
loopne
fwait
aas
add
add
fildll
add
roll
mov
les
sbb
scas
push
inc
xor
cli
push
mov
test
or
lods
mov
in
add
lods
es
test
orb
aad
hlt
mov
push
ja
add
add
xchg
fimuls
and
lret
pop
add
loop
mov
xchg
pop
les
jae
adc
pop
stos
enter
add
addl
dec
lea
and
push
stos
fidivrs
push
lods
or
or
dec
fisubl
xchg
pop
xchg
jl
inc
cmp
fists
ds
pop
pop
cmp
mov
inc
add
out
lds
xchg
add
movsb
fildl
xchg
add
clc
push
add
mull
xchg
call
sbb
push
sbb
rcr
js
jp
inc
xchg
adc
fnstenv
mov
jno
jmp
ljmp
mov
add
movsb
add
mov
sbb
inc
lea
mov
sub
dec
movsl
jge
sub
jbe
jge
jo
sub
cmpsl
popf
movsl
loope
mov
icebp
inc
scas
mov
jecxz
lahf
leave
dec
inc
mov
repnz
adc
add
adc
sub
scas
and
push
add
cmp
xor
je
add
push
sti
sub
push
push
and
xor
sub
loop
ss
jnp
cmpsl
test
fldt
hlt
fimuls
push
test
and
mov
shll
imul
xchg
or
lcall
enter
fcomps
jmp
cs
dec
jno
mov
sbb
fadds
add
add
pop
or
add
or
sbb
aam
xchg
or
out
insl
add
leave
ret
add
cmp
movsl
mov
data16
pop
add
adc
add
mov
inc
mov
sbb
pop
sbb
inc
add
add
inc
mov
add
dec
mov
je
add
add
lea
or
xchg
into
pop
jmp
lds
add
add
mov
lods
cmpsl
adc
add
mov
push
pop
mov
or
loopne
jle
cmp
aaa
mov
rclb
xlat
push
add
add
jae
fadds
incb
and
add
sub
pop
cmpsl
add
add
adc
jnp
test
in
add
and
stos
das
add
aam
cmp
fstpt
add
fmuls
adc
add
add
sub
add
ret
loopne
add
es
incb
mov
out
movsb
add
cmp
or
arpl
add
mov
add
adc
ja
rolb
ret
lock
in
mov
xchg
js
jl
lcall
fisubrs
sbb
add
pop
js
push
add
icebp
add
inc
incb
adc
push
loope
xchg
sbb
mov
cmp
xchg
gs
out
mov
sbb
sbb
or
jae
daa
cwtl
inc
push
add
leave
xchg
das
adcb
lea
cmpsb
mov
mov
pop
testb
lea
mov
add
add
inc
aas
jne
movl
mov
lcall
pop
imul
cld
mov
cltd
xchg
shlb
outsl
imul
cli
add
fs
add
sbb
stos
jae
fdivl
xchg
out
sub
es
pop
push
fwait
loope
dec
movb
pop
int3
add
add
lods
add
stc
or
into
or
mov
and
jecxz
or
call
int3
sbb
loope
add
jmp
adc
fisubrs
fildll
mov
sub
lret
out
or
pop
mov
out
mov
mov
jmp
xlat
xor
clc
faddl
xchg
out
push
out
lahf
jo
call
int
add
lahf
mov
jl
data16
pminub
jo
and
inc
filds
push
sub
add
int3
push
movsb
out
sub
mov
mov
int3
or
add
add
shl
add
xor
add
addb
xchg
sub
and
aad
fstpl
add
sbb
lret
pop
adc
mov
int
in
add
iret
add
mov
loop
xchg
rorb
mov
addr16
cmp
xchg
mov
dec
repnz
pop
pop
addl
xor
insl
icebp
rcll
inc
mov
add
add
daa
ret
gs
jge
or
mov
jge
lods
mov
insl
lahf
clc
in
fadds
inc
push
add
lea
cmc
mov
jmp
add
int
pop
std
outsb
rol
adc
pop
inc
add
push
jnp
fsubp
add
xlat
inc
popa
popl
imulb
repnz
jnp
sub
or
and
es
adc
fcomp
jnp
loope
add
adc
and
sar
add
mov
cwtl
xor
xchg
stos
sti
in
std
mov
push
mov
dec
orl
mov
push
jg
sub
mov
dec
jbe
jg
data16
fistpll
jb
clc
sub
jmp
cld
add
loope
aam
add
xor
mov
add
test
cmp
icebp
mov
pop
stos
mov
stos
fiaddl
sub
dec
sti
xor
fsubl
fcompl
add
push
add
les
inc
add
adc
push
mov
adc
ss
nop
xor
jnp
insl
mov
ret
inc
dec
jnp
out
add
rol
clc
jne
pop
lret
js
movb
xor
scas
and
es
stos
cld
mov
push
lcall
mov
mov
add
mov
xchg
mov
add
rcrb
inc
jae
inc
pop
int3
mov
cli
popf
pop
cmp
add
inc
ljmp
mov
xchg
loop
insb
xor
jle
push
sti
adc
xchg
add
leave
cmc
enter
sub
cmc
shll
sbb
lods
pop
fsubl
mov
ret
mov
repz
orl
pop
add
and
push
cltd
ficomps
pop
dec
rcr
cmc
and
add
cmp
pop
add
add
xor
in
adc
nop
arpl
jge
sti
mov
sub
add
lret
add
adc
sbb
mov
add
xor
lcall
sub
mov
aad
ret
sahf
imul
nop
push
sbb
xchg
mov
ja
test
pop
sub
push
mov
out
pop
rolb
mov
gs
ret
add
push
lret
pop
int
test
call
iret
push
clc
jb
aam
dec
fsubrs
icebp
rolb
xchg
add
jb
jmp
add
cwtl
push
add
idivb
shlb
add
int3
add
or
fistpll
test
mov
push
add
add
add
push
add
out
pushf
mov
mov
pop
mov
lahf
jno
dec
int3
str
push
cmp
les
dec
jo
aas
insb
scas
mov
add
addr16
jne
add
arpl
outsb
push
out
daa
mov
pop
filds
pushf
xchg
cmpsl
jmp
jecxz
bound
add
add
pop
inc
cli
add
push
push
add
lods
dec
rcl
jb
outsb
sbb
mov
cmp
cmp
mov
push
daa
jno
or
and
add
loopne
add
mov
push
add
cs
ja
sbbl
aas
test
xchg
js
add
push
mov
stc
add
inc
sbb
pop
xorb
add
js
jb
dec
dec
pop
mov
xor
sub
add
out
and
lock
adcl
movsl
xor
dec
adc
fcoms
sbb
mov
mov
repz
mov
and
addb
das
adc
adc
lret
mov
mov
icebp
jmp
xchg
filds
pop
mov
stos
lcall
in
fstl
test
jg
mov
add
dec
cltd
or
mov
add
add
cli
fildll
out
or
jbe
jnp
leave
ss
jno
cmp
mul
test
clc
cmp
dec
fs
mov
or
add
hlt
push
aam
pop
pop
packsswb
in
fidivrl
jne
push
push
ja
gs
mov
daa
inc
sub
add
push
add
add
inc
andl
imul
xlat
xor
jl
aad
xchg
jp
in
test
rcr
adc
cmpsb
fists
cmp
xchg
ret
add
pushf
lock
add
push
xor
adc
cmpxchg
mov
in
sahf
ds
xor
sub
ss
mov
add
add
xor
xchg
ret
stos
test
xchg
aam
sub
cmc
jne
pop
cmp
and
add
popa
xchg
mov
push
push
push
inc
add
fidivrl
add
add
cmp
lahf
inc
push
loope
xchg
sub
xchg
repnz
jp
sub
mov
std
add
push
xchg
roll
add
add
sbb
jbe
imul
dec
out
bound
in
add
xor
cwtl
adc
pop
dec
daa
add
add
push
and
xchg
andl
stos
cmc
mov
sarb
ja
add
rolb
int3
add
in
cmpl
jmp
or
cltd
mov
shr
xor
je
inc
add
and
ret
pop
jbe
stos
xchg
ss
fcmovnbe
lods
dec
insl
mov
add
arpl
add
out
jo
jno
inc
mulb
and
mov
pop
pop
add
jmp
call
dec
cmc
xor
out
add
imul
insb
ljmp
xchg
pushf
xchg
cmpb
inc
xchg
adc
xorb
sub
pop
mov
repnz
imul
repz
in
add
verr
cmp
and
xor
pop
push
jg
sbb
adc
mov
mov
test
dec
add
into
std
sbb
cwtl
and
lret
popa
insl
mov
in
xor
mov
sbbb
ret
sbb
movsb
jne
add
aas
cmp
pop
fcmovb
dec
aaa
cmovg
std
cmp
jle
xor
push
jle
bound
push
stos
jns
mov
mov
pop
scas
mov
add
add
loop
std
mov
add
mov
fmulp
sbb
jb
ja
adc
dec
icebp
loopne
pop
pusha
sahf
scas
out
ret
in
imul
and
test
cld
insl
push
add
cmp
fs
mov
ds
test
mov
xor
sbb
les
les
mov
popf
xlat
pop
cmpsl
mov
stos
dec
dec
out
jae
push
repnz
cmp
add
add
mov
mov
cmc
mov
push
add
rcl
test
xchg
cmp
mov
mov
xor
xchg
mov
xor
pop
add
lahf
jb
push
dec
add
ljmp
mov
xchg
ljmp
mov
mov
mov
out
pop
add
faddl
dec
fwait
movsl
or
sub
dec
ret
in
dec
jae
or
fiaddl
incb
das
add
jg
mov
and
dec
shll
dec
and
dec
or
filds
ds
daa
or
add
xchg
xchg
lret
jb
popa
das
mov
xlat
mov
xchg
test
add
hlt
es
into
cmp
xorl
push
add
inc
or
xor
jns
pop
jo
fwait
mov
or
push
xlat
cmpb
mov
sub
dec
dec
xchg
or
or
fs
xor
lret
inc
sahf
adc
push
test
cmc
jo
push
adc
mov
lods
mov
mov
add
mov
pop
dec
or
pop
add
ss
or
push
mov
ja
adc
fsubrp
cmp
sub
push
add
add
xor
add
aaa
rolb
and
push
xlat
das
xlat
push
imul
pop
add
rolb
in
pop
mov
and
iret
add
jge
add
outsb
xchg
xor
sbb
inc
adc
xor
mov
jmp
push
add
sbb
push
jp
push
imul
lcall
aad
nop
into
aaa
pop
push
add
cltd
ja
outsl
lods
inc
movb
ror
call
fwait
cmc
add
add
aas
repnz
loop
jnp
mov
add
in
sub
xchg
repz
push
or
mov
orl
or
jl
shlb
dec
mov
inc
pop
jne
in
or
out
push
lods
push
jmp
testl
inc
push
push
push
das
xchg
xchg
sti
push
fimull
stc
pop
sbb
cmp
and
inc
fldcw
add
push
cmp
imul
inc
add
add
mov
mov
idivl
pop
or
add
dec
xchg
mov
mov
jl
pop
and
fs
mov
stos
sub
add
push
enter
push
add
loop
mov
shll
add
aad
cmp
add
in
lahf
cmp
outsl
or
mov
lods
jg
xor
mov
push
sub
shlb
dec
jmp
dec
adc
xchg
mov
mov
and
leave
push
add
xor
add
cs
in
add
std
and
aas
fdivr
bound
adc
xchg
push
mov
shrl
inc
js
filds
enter
mov
inc
xchg
add
xchg
pop
pop
push
negl
std
push
adc
in
adc
adc
mov
and
sbb
push
pushl
pushf
int3
test
dec
add
les
xor
jg
lock
jle
pusha
out
push
adc
push
add
das
enter
add
in
xor
scas
out
adc
dec
mov
dec
cmpb
xlat
shl
scas
dec
pop
fbstp
sbbl
and
shrl
add
sub
lea
push
in
mov
stos
push
test
adc
xlat
inc
sub
add
xchg
lock
ja
ja
and
lea
add
adc
addr16
mov
add
cmp
rolb
adc
fst
pop
xor
push
mov
fidivs
popf
lods
xlat
add
xchg
roll
jmp
jle
add
add
mov
sub
arpl
rol
loopne
add
sbb
movsb
pop
lahf
mov
mov
fcoms
adc
add
add
add
add
ljmp
dec
fwait
mov
mov
jl
mov
jnp
ss
imul
sbb
daa
add
jle
add
dec
add
fdiv
mov
adc
push
add
ret
addb
add
pusha
mov
subb
mov
add
mov
fldl
sub
iret
xchg
add
cmp
mov
push
loope
mov
mov
xor
cltd
sbb
jo
mov
jne
ljmp
jecxz
addl
es
jns
cmp
in
xchg
js
repnz
xchg
or
lock
lods
mov
sub
les
pop
cld
mov
pop
pusha
xchg
and
add
add
sbb
roll
sub
xlat
xchg
roll
mov
rolb
add
mov
jecxz
ret
in
in
dec
xchg
mov
push
add
repnz
int3
sbb
xor
push
clc
hlt
xor
add
dec
or
sbb
ljmp
add
sub
repz
cmp
clc
dec
pop
or
push
or
test
mov
test
mov
out
add
xor
out
addr16
out
scas
pop
inc
insl
movsb
add
pusha
lahf
adc
lods
or
mov
pop
rolb
roll
mov
sbb
fisubl
push
xchg
inc
mov
test
mov
iret
add
addb
in
jge
scas
push
sub
mov
notb
or
or
shrb
filds
xchg
lods
inc
push
jge
adc
loop
push
ret
mov
xchg
in
arpl
cltd
push
lods
mov
test
jo
jmp
loopne
ds
jae
subl
jb
jo
mov
xchg
mov
dec
mov
sarb
lcall
mov
sarb
push
ds
mov
stc
loopne
sarb
and
stc
popf
ja
or
out
jo
je
push
add
inc
add
insb
push
mov
add
aad
add
imul
lea
add
inc
jb
add
adc
push
loop
lock
mov
repz
mov
push
rorb
add
testl
dec
xlat
icebp
inc
add
aam
add
inc
add
movsb
int3
rclb
or
jge
or
mov
lods
pandn
std
clc
lock
stos
lret
movsl
fstl
add
out
mov
jbe
cltd
xor
add
or
add
xlat
nop
or
les
insl
iret
mov
fists
loopne
add
mov
add
das
cmp
lahf
test
add
mov
pop
jns
dec
jne
shrb
lret
pop
aam
mov
mov
dec
xor
lods
lock
cmp
push
cmp
int3
and
push
popf
and
fwait
lret
push
clc
add
mov
shll
jge
pop
or
cmc
pop
bound
adc
mov
int
add
aad
mov
out
stc
addr16
jecxz
sub
out
scas
divb
add
pop
xchg
repz
add
outsl
add
ja
add
xlat
xchg
push
js
dec
stos
jbe
jne
sub
push
add
mov
sub
mov
dec
mov
pop
pop
dec
add
sub
aaa
imul
add
mov
adc
push
lea
add
sahf
add
cmp
mov
fmuls
inc
add
sarb
inc
sti
push
sub
aad
insl
and
or
add
roll
sbb
add
jg
add
out
stc
dec
sarl
incb
mov
inc
add
rclb
sub
stos
fdivl
xor
andb
jl
pusha
shl
jg
pop
ret
sbb
add
loope
out
leave
xor
push
jp
lret
mov
nop
sahf
cwtl
dec
les
adcb
stos
roll
mov
and
jb
inc
mov
add
sbb
xor
call
and
and
les
stc
or
jbe
push
jmp
lods
cmp
add
cld
in
sbb
and
mov
test
dec
pop
ret
stos
add
sahf
add
add
ss
data16
add
mov
jge
addb
mov
insb
sbbb
xchg
es
sti
cli
add
pop
shrl
push
mov
outsl
add
and
and
ss
sub
sub
rolb
pop
xlat
mov
push
sub
sub
stos
sbb
adc
push
add
sub
fs
hlt
xor
inc
push
outsl
sub
sbb
rorl
push
imul
add
add
jne
lds
gs
push
or
xor
aam
iret
or
ret
fildl
rorb
jno
xchg
fcmovnb
inc
out
lcall
lods
push
add
insb
cmpsb
aad
fs
out
xor
add
aas
sub
imul
aam
push
xchg
add
mov
jge
sub
lret
sub
dec
jo
andb
add
add
mov
lods
sbb
xchg
aad
sahf
icebp
lds
in
das
push
add
popa
ja
dec
add
flds
test
jg
mov
pop
add
daa
jnp
xor
add
push
mov
xchg
pop
cli
scas
test
or
dec
lods
cmpsb
int3
dec
mov
imul
and
int3
push
pop
inc
add
mov
gs
add
cwtl
jo
fsts
aaa
lahf
push
xchg
add
add
pop
insb
add
dec
or
movsb
mov
push
mov
and
mov
outsb
shl
fnstenv
insb
add
add
mov
add
sbbb
sub
loop
xchg
add
jg
inc
out
sahf
and
pop
jne
add
loope
sbb
ret
int
push
fiadds
sti
cmp
jnp
cmp
or
testl
pop
xchg
adc
and
xor
inc
ds
pop
aad
cmp
mov
fmull
test
add
mov
push
add
stos
cmp
popa
shll
mov
ljmp
add
inc
sbbl
cwtl
pop
les
mov
ss
add
pop
in
lock
shr
pushf
mov
inc
in
add
or
hlt
add
test
xchg
adc
add
out
aaa
pop
std
loope
xor
pop
nop
jp
daa
fwait
add
fidivrl
ljmp
scas
movsb
fstl
xchg
add
add
mov
nop
add
mov
mov
fucom
mov
inc
inc
pop
add
out
imul
sub
sub
or
sbb
add
xchg
add
arpl
cmp
icebp
xchg
scas
loope
insl
mov
imul
mov
je
jmp
test
test
add
lcall
jne
push
cmp
bound
sub
sub
movsb
jmp
mov
mov
adc
add
cmp
mov
pop
pop
mov
movsb
xchg
mov
stos
and
shll
mov
add
sbbl
sbb
lds
inc
jns
leave
xor
xchg
popf
push
jne
insl
shll
add
daa
adc
out
fisubrl
xchg
adc
add
sbb
aas
gs
outsb
jp
fadds
lahf
sbb
lods
xor
add
jo
nop
add
fcmovnbe
sbb
mov
adc
aad
orb
popf
test
add
adc
pop
jo
std
cmc
cmp
lock
or
lock
xor
in
push
aas
sub
imul
mov
aam
xchg
add
add
inc
insl
inc
cwtl
mov
mov
xchg
mov
jb
sbb
outsl
pop
js
add
mov
fldl
mov
ret
dec
add
mov
cs
xchg
das
xor
dec
xchg
push
mov
add
cmp
inc
stos
add
push
popa
pop
lods
xor
imul
adc
ja
add
add
dec
push
mov
add
dec
jmp
add
mov
in
cmpsb
xor
aas
fwait
add
jl
subb
fdiv
test
sbb
adc
mov
shr
dec
adc
cmp
cmp
add
and
mov
jge
shr
jmp
add
dec
dec
jge
cmp
lods
daa
fmuls
push
pop
push
shll
mov
jp
add
popf
xlat
mov
fadd
cmp
jle
iret
js
sub
arpl
jp
inc
addr16
mov
sbb
icebp
dec
leave
call
pop
data16
int3
aad
xchg
mov
rcrl
add
shl
pop
add
xor
scas
mov
ret
push
inc
xchg
addl
or
lret
popf
movsl
loope
aas
popf
lods
xchg
mov
or
adc
std
pop
add
xor
lret
popl
jbe
ret
push
sarb
das
in
mov
cmp
sbbb
sub
outsb
hlt
das
push
aam
into
add
fldl
push
ret
dec
add
mov
shld
mov
incl
add
mov
repnz
mov
jnp
add
jnp
and
and
sbb
adc
sub
out
add
fidivl
mov
pop
shrd
lcall
pop
dec
add
mov
pop
out
sti
ja
pop
lea
jle
sbb
sbb
roll
cmpsb
add
xor
fsubs
pop
add
fs
jecxz
subl
int3
cmp
shll
test
xchg
ljmp
sbb
stos
add
cld
adc
cwtl
xchg
add
stc
mov
inc
push
stc
pushl
add
imul
and
xor
inc
call
movsl
int3
sar
int
and
add
int
cld
adc
add
fcmovne
inc
in
jns
lret
pop
aas
hlt
mov
sbb
jmp
add
add
add
add
adc
lret
lret
ja
jecxz
roll
add
aad
add
aas
fwait
push
add
xchg
add
add
ret
in
into
loop
or
sti
add
and
add
mov
iret
out
push
jns
sahf
insb
xchg
fs
mov
jae
dec
leave
iret
cwtl
inc
mov
addb
add
addl
add
xor
or
jmp
inc
add
and
add
adc
dec
les
pop
add
aaa
mov
push
ja
add
push
mov
sbb
rcl
shlb
or
mov
mov
ljmp
mov
xchg
pop
mov
push
ljmp
into
add
add
mov
adc
leave
jb
inc
out
push
sahf
push
sti
and
jecxz
add
adc
loopne
fsubrl
jns
dec
fdivrs
jp
call
adc
fsubs
push
dec
lahf
add
imul
add
cmc
sbb
xchg
ja
insl
pop
xchg
adcl
outsl
inc
mov
sbb
fstpt
push
and
movsb
mov
add
lret
sub
mov
add
add
add
add
mov
lahf
mov
loopne,pn
ds
mov
mov
sub
jbe
dec
fisttpl
pop
in
jb
sbb
test
or
mov
stos
icebp
sub
aad
cmp
add
jge
dec
xor
jns
shl
notb
push
xor
xorl
imul
lret
pop
mov
insl
xchg
cli
adc
add
add
rcrb
xor
test
fimull
loopne
adc
push
xchg
or
sbb
mov
push
jge
add
stos
test
mov
xor
add
leave
xchg
lret
dec
add
stc
pop
sub
ljmp
push
sub
sub
cmp
sbb
xchg
dec
mov
enter
add
xor
mov
cmp
lods
xor
inc
mov
mov
cmp
cmc
add
lea
dec
xchg
push
and
lret
lcall
push
sbb
pop
mov
add
xchg
dec
into
cmp
outsb
pushf
xchg
fimull
aas
popa
inc
fstpl
push
or
jge
dec
popf
xor
add
adc
ja
loop
std
sub
adc
jnp
push
add
adcb
add
rorb
add
ret
add
add
leave
cwtl
mov
cmp
add
sbb
dec
mov
iret
mov
pop
jecxz
test
mov
jno
lea
pop
bound
call
adc
adc
inc
addl
sbb
mov
and
test
add
add
xor
mov
ud0
aam
addr16
scas
add
jg
mov
clc
add
pop
pop
icebp
stos
push
sbb
xor
or
add
pop
add
ret
xor
inc
test
add
add
mov
add
add
mov
cvtdq2ps
sbbl
movsb
fucom
call
movsb
sbb
lahf
daa
mov
cmp
xor
enter
add
add
add
imul
xchg
enter
inc
dec
xor
add
jp
add
pop
rcrl
mov
inc
and
ja
ret
push
call
in
add
test
mov
add
shll
xchg
push
cld
push
pop
daa
add
rep
inc
imul
sbb
out
or
loop
and
aam
add
cmp
enter
dec
sub
dec
cmpsb
loopnew
jb
ret
mov
pop
popf
or
sub
gs
insl
jnp
or
dec
loope
imul
jb
das
inc
add
aam
sub
pop
mov
imul
mov
add
lcall
xor
ret
add
jl
cmpsl
sub
and
xor
add
imul
orl
call
cmp
daa
mov
push
and
pop
add
xchg
and
pop
popf
mov
fldenv
add
xlat
ja
subl
dec
fdivl
negb
fstps
mov
cmpl
lcall
add
or
add
inc
lods
ljmp
jbe
lret
mov
cmpsl
add
aam
fsubl
insl
add
movsl
or
orl
adcb
sbb
fldt
cs
data16
and
stc
and
mov
ljmp
shlb
add
inc
push
lock
sbb
mov
out
inc
lea
xor
leave
les
xor
mov
mov
pop
lock
add
sbb
mov
mov
adc
add
or
mov
pop
hlt
and
jp
sub
push
dec
divb
jne
lods
sub
lock
pop
test
add
gs
ljmp
sbb
add
fs
add
lock
add
xor
mov
repnz
push
in
dec
mov
add
add
loop
dec
or
add
jp
dec
stos
or
add
cli
stos
sub
int
lods
push
out
std
pop
aaa
das
add
ss
arpl
sbb
inc
sti
adc
sub
sti
in
mov
xchg
popa
jg
sbbl
cmp
sahf
stos
stos
sub
add
pop
fistl
xlat
cltd
dec
add
add
and
mov
fs
pop
mov
fdivp
add
xchg
add
testb
sub
enter
xor
pop
mov
or
add
test
subl
std
jae
sub
add
cmp
cli
and
ds
fs
pusha
je
sub
sbb
es
pop
out
pop
mov
jns
add
cli
aas
pop
mov
fs
sbb
pop
ret
jnp
xor
add
fs
aad
pushf
in
dec
lods
push
add
xchg
add
daa
imul
lahf
mov
or
lret
jno
loop
dec
push
sub
pop
add
and
mov
sbb
add
cmpsb
fwait
je
adc
js
shll
mov
dec
in
sbb
fdivrs
push
mov
idivb
ret
add
scas
pushf
enter
fildl
dec
push
fildll
cmc
xchg
jbe
adc
add
mov
and
jb
add
rol
test
sbb
push
fbld
push
adc
add
xchg
dec
add
pop
push
and
ret
fistl
scas
mov
cmpsb
loope
push
movl
faddl
jle
sub
cmpsl
sbb
add
pop
cli
inc
add
cmp
pavgb
sub
cmpb
dec
mov
push
outsb
verr
popf
inc
es
pop
pop
dec
add
xchg
and
addr16
and
pop
roll
xorl
or
icebp
sub
jmp
cwtl
ret
cmc
adc
mov
or
int3
out
inc
faddl
cmp
add
push
and
xor
fs
push
dec
push
jns
cmp
jns
xor
xchg
jle
mov
mov
dec
aam
mov
or
cmp
in
dec
repz
mov
ficoml
mov
jp
add
mov
xor
das
sarb
sar
sub
dec
pop
das
xchg
pop
inc
adc
lea
jbe
sub
add
leave
shrl
jp
or
add
sub
js
add
fidivl
or
out
push
iret
fcoml
dec
movsb
or
sbb
testl
jp
xchg
inc
mov
xchg
std
adc
js
jge
add
in
cs
bound
inc
movl
ljmp
or
sub
je
xor
pop
scas
jp
in
add
hlt
popf
cmp
push
add
push
cmp
xor
add
add
lea
pop
mov
inc
lret
inc
push
jbe
jmp
add
ds
ret
leave
mov
popa
fwait
jl
mov
push
iret
or
xchg
cmp
add
pop
adc
add
mov
push
sub
lods
in
xchg
add
add
out
add
xor
push
or
pop
add
mov
add
sub
arpl
add
push
add
add
mov
cmc
ss
fildll
pop
fidivrl
mov
and
push
sbb
movsb
ds
mov
dec
movsl
jne
mov
fdivs
vprotq
xchg
mov
jns
inc
mov
mov
jle
lret
mov
xchg
imul
ret
sbb
mov
scas
loop
addb
push
loope
test
cmpb
lret
stos
xchg
inc
mov
fsubrs
mov
dec
mov
pop
add
es
dec
aaa
add
imul
push
add
mov
add
add
add
add
out
or
rorl
ret
test
loope
lock
or
ret
popa
add
push
sub
in
or
mov
or
stos
int
add
mov
mov
pop
dec
jae
cmc
rclb
test
mov
add
add
in
sahf
or
rolb
pop
aad
pop
cmp
daa
or
jo
lret
add
push
or
outsb
loop
xchg
xchg
add
imul
addb
fbstp
icebp
adc
cmp
push
ret
xlat
adc
call
inc
add
popf
add
test
jmp
test
or
sbb
cmc
xchg
adc
frstor
sbb
jno
lea
push
nop
mov
add
les
and
lods
pop
cmp
stos
dec
imul
jae
add
mov
push
and
push
sbbb
iret
pop
lcall
jbe
movsl
sbb
leave
mov
and
addl
mov
sub
loopne
adcb
mov
sub
dec
mov
shrb
add
aaa
adc
xchg
add
add
mov
lds
pop
aam
lret
cmp
add
outsb
roll
jnp
cwtl
fs
xchg
cmp
xchg
cmc
popa
cwtl
xchg
add
lahf
xchg
sbb
push
add
into
add
sub
lock
mov
sbb
ret
in
das
arpl
and
jae
adc
add
nop
ror
divl
ret
add
test
mov
mov
test
insb
imul
push
xchg
and
add
xchg
or
sarl
out
ljmp
adcl
and
pushf
add
mov
sub
ret
push
push
scas
movsb
mov
mov
outsl
cmpb
ljmp
stos
lds
mov
mov
sub
js
cmp
outsb
add
in
sbb
sub
lods
push
add
sbbl
insb
and
lret
add
sub
add
dec
cmc
jge
test
push
loop
pop
mov
add
mov
rorl
lret
cli
test
lahf
add
movsb
mov
sbb
add
xchg
xchg
rcrl
mov
shl
jnp
jno
pop
jmp
sub
mov
and
aaa
add
mov
xor
aad
loope
loope
loope
inc
add
lds
daa
sbb
cmp
lea
xchg
add
sbb
sub
lret
ds
pushf
notl
or
cmp
xor
add
mov
inc
xchg
add
xor
cmc
mov
test
mov
xchg
orl
sbb
in
add
hlt
mov
mov
aaa
subl
jnp
add
adc
testl
std
addr16
add
fcoml
mov
cs
pop
sub
dec
add
add
xor
popa
cmp
testb
sub
dec
sbb
and
les
shlb
dec
and
add
add
test
imul
popa
add
subl
clc
lret
add
add
add
mov
mov
add
jno
push
sbb
add
inc
mov
imul
mov
and
pop
aas
jg
sbb
pop
cmpsl
or
xor
inc
test
in
adcl
jp
sub
pop
cltd
stos
pushf
stc
sbb
pop
loope
out
add
add
ret
and
add
std
pop
je
mov
imul
add
repnz
cmp
in
add
loopne
lahf
add
decl
push
inc
dec
les
sbb
or
pop
or
imul
stos
push
fucomp
adc
fldenv
push
cmpsl
nop
mov
insl
imul
inc
test
push
fsubs
and
fmull
xor
test
push
xor
jg
adc
mov
dec
add
push
jge
push
sub
cmp
sub
sbb
imul
rclb
and
add
in
test
into
int
mov
inc
cltd
fnstsw
jae
mov
rcr
aad
sub
adc
mov
xchg
sbb
push
push
add
nop
jl
add
add
mov
jmp
mov
pcmpeqd
inc
enter
fsubrl
push
adc
jns
xlat
pop
mov
pop
stc
lods
adc
bound
xchg
push
mov
enter
mov
mov
pop
mov
dec
mov
push
add
jb
lahf
xorl
mov
jae,pn
leave
pop
adc
ljmp
add
push
outsb
sub
xor
mov
nop
sbb
cli
push
add
ljmp
cmc
add
pusha
mov
insl
pop
or
cmc
movsb
add
hlt
outsb
push
sub
or
lds
sbb
push
pop
sub
bound
jb
iret
outsb
loop
or
xchg
ds
rclb
sub
orb
mov
pop
and
xchg
xchg
mov
add
add
lahf
ljmp
scas
add
xchg
add
test
and
sub
xor
movsl
rolb
ss
sahf
pop
addr16
lds
pop
enter
jbe
push
test
xor
jp
push
lods
add
iret
xchg
xchg
mov
add
jecxz
cmp
test
add
mov
cmc
lea
xor
aam
rcrb
jle
bswap
add
jo
dec
add
mov
sbb
fnstcw
sahf
fwait
shlb
fcomp
cmp
or
mov
cmc
jmp
mov
add
mov
push
and
ja
das
pop
xchg
stos
mov
ljmp
jns
push
pushf
push
xor
or
sarb
xchg
mov
xchg
test
add
xchg
int3
push
movsb
sbb
add
lcall
sahf
cmp
pop
mov
adc
test
dec
mov
pop
out
repnz
loop
enter
jmp
add
inc
push
stos
inc
add
xor
out
int
lret
pop
dec
cmpsb
jmp
cmpsb
dec
repnz
mov
add
cmp
pop
lret
out
dec
xchg
pop
or
sub
mov
cmp
cmp
repz
iret
dec
push
push
add
ret
cmp
in
insb
xchg
lret
filds
test
push
outsb
add
push
mov
inc
mov
add
out
cmpsl
lods
rolb
or
add
divl
repnz
mov
lret
roll
jo
adc
inc
repnz
adc
sub
add
cmp
xor
xchg
jnp
push
dec
add
add
xor
test
inc
xor
inc
ja
cmp
mov
jne
dec
clc
jo
mov
push
pop
test
xchg
fsub
psrld
mov
jecxz
xor
fs
add
std
dec
xorb
jl
jae
xchg
aas
in
add
push
pop
xor
jae
adc
shrl
add
jae
mov
push
jg
add
push
add
dec
and
je
sbb
add
outsl
or
jmp
aaa
mov
fisubl
js
add
dec
push
add
mov
imul
mov
cmp
push
jb
add
ljmp
fcomip
sbb
js
xchg
sbb
jbe
inc
mov
xchg
add
mov
and
fsubrl
cmpsl
cmp
cld
clc
cmp
and
sbb
adc
or
or
pop
add
mov
test
aam
lcall
negl
mov
mov
add
fistl
xchg
lahf
add
repz
sub
cmp
dec
adc
insb
lock
push
mov
andb
div
push
mov
es
add
inc
in
push
add
inc
push
imul
adcl
mov
sbb
sub
add
cmp
xor
push
in
ljmp
pmaddwd
add
add
add
ficoms
cmc
outsl
add
scas
inc
mov
pop
sbb
cmpsl
xchg
dec
clc
xchg
es
rcll
inc
lods
xchg
int
add
add
and
scas
add
mov
add
inc
ret
stc
xor
xchg
scas
jo
push
xchg
in
stos
sub
mov
add
sub
test
xchg
add
int3
in
xchg
add
xchg
lret
push
stos
icebp
push
sbb
scas
inc
outsb
aam
add
sub
mov
test
adc
lcall
scas
ficoml
add
add
jmp
push
lock
inc
jne
cmp
clc
verr
sbb
les
icebp
pusha
pop
add
in
pop
xchg
add
cmp
insb
add
mov
jbe
pop
pop
maskmovq
testl
dec
pop
pop
dec
gs
mov
adcb
jns
add
icebp
add
mov
std
and
mov
pop
xchg
testb
mov
dec
out
jnp
add
sub
push
add
dec
cli
out
mov
mov
gs
adc
ret
or
mov
mov
pop
lock
lret
insl
call
hlt
ret
aaa
ret
shlb
andb
add
add
cmpsl
dec
test
mov
mov
pop
mov
les
push
cmpsl
inc
xchg
add
dec
sbb
add
push
test
mov
fistpl
bound
aas
pop
ja
push
mov
add
ret
sub
add
mov
mov
sti
or
xor
sub
nop
mov
scas
inc
pop
jge
test
sti
xchg
fidivs
je
in
stc
add
mov
rolb
movsb
sub
mov
add
add
push
test
movsl
add
cmc
lods
xor
xor
dec
es
sahf
mov
mov
cmpsb
scas
in
dec
push
sub
xor
or
repz
mov
out
pushf
mov
pop
push
xor
cmpsl
ss
rcll
das
push
aam
es
inc
cmp
and
stos
add
sub
icebp
add
fs
cmp
xor
incl
jno
push
push
pusha
add
icebp
rorl
mov
nop
in
mov
add
xor
sbb
scas
dec
xchg
sub
fisubs
aad
es
jno
cmp
jne
insb
jns
es
and
or
adc
test
adc
pop
outsb
rolb
cmpsl
loopne
add
add
leave
ljmp
arpl
clc
add
insb
lcall
fldl
daa
xor
dec
out
jecxz
call
add
in
pop
and
fstl
add
dec
xchg
ret
stos
fstpt
cli
jo
arpl
add
lcall
mov
stos
sti
xchg
push
idiv
and
pop
outsb
mov
std
add
mov
imulb
push
insb
inc
repz
push
pop
cmpsb
push
pop
mov
mov
ret
mov
inc
xor
xchg
jbe
loop
mov
add
ret
fbstp
dec
js
push
xor
push
inc
loope
add
fdivrp
data16
mov
add
jle
out
mov
in
add
imul
jl
mov
dec
adc
es
popa
push
xor
add
orl
rclb
jno
fstpt
and
sahf
mov
into
mov
repz
xchg
mov
out
imul
pop
mov
mov
shll
cld
outsb
daa
cmp
cmp
push
add
stc
shll
subb
mov
adc
outsb
clc
cmpsb
dec
rorb
inc
jmp
dec
push
add
outsb
add
pop
and
divb
fstl
pop
addb
jns
jb
mov
add
imul
mov
mov
sbb
fs
add
mov
pop
inc
aad
insb
sub
lds
aas
sbb
repz
pop
dec
aam
or
push
add
mov
loope
inc
jge
add
adc
inc
or
into
test
adc
subl
incb
inc
jnp
jp
fsubrl
and
push
mov
add
jno
repz
dec
xchg
jmp
movsb
lock
mov
cmc
out
in
stc
xorb
movsb
scas
mov
data16
mov
out
sti
data16
jg
add
lcall
lods
in
jne
mov
xchg
jmp
cmp
xchg
xor
adc
pushf
add
nop
or
stc
mov
repnz
dec
mov
scas
stos
push
insb
or
sbb
out
scas
enter
mov
adc
jmp
subl
add
and
lea
fs
pop
stos
add
inc
mov
pusha
int3
push
add
mov
add
addl
sub
imul
cld
adc
pop
mov
pushf
pop
icebp
add
daa
ss
out
inc
add
icebp
jb
add
inc
cld
jne
push
dec
ret
dec
add
xchg
ss
pop
push
add
jle
movsb
add
or
jo
xor
sar
mov
jo
ds
add
sbb
lcall
xchg
xor
lods
dec
cs
add
add
in
sbb
shrl
xchg
jle
adc
cmp
sub
popf
call
add
insb
lret
iret
jbe
dec
push
jb
pop
pop
xchg
jge
rcl
xchg
or
push
scas
roll
add
jmp
popl
mov
add
xchg
inc
addl
addb
xlat
adc
pop
sar
xor
pop
push
add
sbb
mov
out
fbstp
xchg
mov
bound
pushf
xchg
in
pusha
sti
inc
jg
inc
pusha
cmpsl
popw
push
pop
jecxz
call
xchg
pop
insl
jo
inc
push
adc
sub
mov
cmp
pop
fsubs
push
addl
and
and
add
inc
flds
nopl
xchg
dec
lret
cmpb
push
loop
add
xlat
xchg
lds
mov
push
cmp
addr16
subl
adc
sub
mov
out
mov
cmp
pusha
jnp
cmp
add
push
mov
shll
xchg
cmp
add
jae
addb
jnp
sarb
sahf
out
add
int3
xchg
xchg
ljmp
dec
iret
add
add
mov
scas
push
adc
in
daa
add
loope
roll
das
add
aas
sbb
adc
mov
inc
mov
int3
in
fdivrl
jmp
push
mov
pusha
add
and
pop
das
cmc
add
cmp
mov
cwtl
mov
js
lods
loop
ficoml
add
add
lods
mov
or
daa
or
xchg
mov
add
add
adc
add
xchg
push
add
jae
mov
fistl
in
dec
shrl
fmul
jmp
xchg
cmp
cmp
mov
repz
add
push
mov
xor
mov
xor
addr16
shll
fdivs
bound
cwtl
test
bound
push
pop
pushf
add
sbb
sbb
movb
or
daa
imul
or
leave
pop
and
negb
and
or
bound
push
jnp
add
add
cmp
pop
xchg
test
xor
fnstsw
jae
xchg
xchg
cmpsb
xchg
add
dec
repnz
xor
add
jb
fs
stc
into
xchg
xchg
sbb
fistpl
mov
mov
inc
test
add
xor
loop,pt
adc
cmp
ja
fucomp
js
dec
and
js
ljmp
add
test
add
iret
adc
test
outsl
mov
fbstp
push
or
outsb
and
add
fcomps
out
pop
add
test
sub
mov
stos
fmull
inc
add
add
subb
insl
test
dec
rorl
leave
mov
add
mov
movsb
xchg
mov
movl
or
add
pop
std
mov
add
popf
mov
add
iret
and
pop
sbb
push
hlt
cmp
pop
pop
push
fisttps
pop
mov
out
add
cmp
sbb
sub
aas
dec
add
xchg
lods
addl
cmp
lods
cwtl
aad
lods
mov
sub
es
gs
push
test
mov
jmp
xor
sub
dec
mov
lock
addr16
cmp
ja
popf
out
loope
push
jmp
xchg
lret
aaa
xchg
xchg
pop
ss
jl
mov
mov
ja
test
mov
lcall
stc
imul
cmp
faddl
ret
les
mov
cmp
sub
stos
ja
sub
mov
lds
xlat
inc
fbstp
xor
mov
or
daa
mov
pop
ret
loop
or
push
xchg
pop
jl
jb
loopne
movsl
sub
enter
cmp
xchg
call
aaa
nop
add
shll
cmp
push
push
pop
or
cmp
jae
pop
xchg
and
hlt
enter
add
dec
push
xor
jmp
mulb
fistps
mov
xor
push
xchg
adc
mov
xchg
fiadds
cmpsb
cli
dec
dec
mov
dec
iret
sbb
lcall
je
jmp
and
aaa
pop
add
dec
adc
divl
stos
xlat
push
divl
stc
inc
loope
or
xlat
pop
push
lods
mov
fildl
stc
lahf
add
add
btr
cld
pop
sbb
out
out
fcompl
add
mov
jae
push
sbb
shrl
cmp
icebp
jnp
test
popa
jbe
mov
rcll
add
jno
stos
in
push
rclb
mov
add
mov
adc
mov
jne
je
sahf
xor
dec
xchg
and
scas
int3
out
pop
adc
and
dec
enter
jo
inc
mov
cmpsl
aam
add
or
shll
mov
das
add
add
popl
addb
jmp
cli
lea
add
and
adc
adc
add
add
push
or
jo
fwait
insl
lock
add
push
add
add
lea
adc
test
movsl
daa
ljmp
popa
add
scas
add
jge
mov
popa
add
inc
add
mov
jns
pop
in
jp
jl
jb
fsubs
filds
ret
jmp
sub
fiaddl
or
dec
shr
xchg
jl
out
add
push
push
mov
shlb
mov
or
add
pop
enter
loopne
sub
add
add
sbbl
jmp
test
das
add
mov
mov
sub
inc
bound
sbb
xor
mov
add
fstps
mov
pop
scas
add
ds
scas
imul
dec
shrb
jp
xchg
jns
or
pushf
add
xchg
dec
sub
sahf
xlat
push
test
mov
xor
popa
test
add
int
inc
iret
int3
or
jmp
cmp
or
add
gs
xchg
add
lret
push
lods
movsb
scas
addb
add
cs
push
sbb
sbb
add
insb
sub
mov
pop
lret
push
jae
dec
sbb
insb
out
cli
dec
and
dec
ret
fldl
mov
sbb
or
enter
add
stos
test
stc
insl
lds
add
dec
nop
jl
ja
and
int
push
add
fwait
lods
jp
inc
mul
lcall
lar
insb
sub
add
lea
data16
inc
push
mov
and
add
add
pusha
ljmp
adc
mov
js
jl
stos
jo
add
cwtl
dec
out
fwait
test
ret
and
int3
stc
ja
addr16
or
push
pop
pushf
add
adc
loopne
add
fidivrl
cmp
test
out
cmp
mov
xor
add
push
lods
push
push
or
add
cmc
sbb
cwtl
add
loopne
movsb
add
push
push
inc
push
mov
mov
idivl
stc
test
call
add
paddb
dec
dec
push
lcall
mov
mov
xchg
cmp
lret
and
stc
test
rcrl
mov
push
mov
inc
and
repnz
cmp
sub
mov
test
or
add
in
cmpsl
sahf
cmp
adc
cmp
add
add
gs
add
fcmovnbe
mov
roll
fistl
test
add
fcom
mov
rolb
mov
add
cmp
add
mov
cli
clc
push
addb
cmp
orb
popf
xchg
inc
add
sub
repnz
out
add
mov
lds
pop
add
sahf
jo
ret
jo
dec
inc
sahf
add
jmp
xchg
push
imul
mov
inc
mov
fildl
imul
and
sbb
jbe
mov
insl
insl
mov
pop
dec
pop
add
mov
lahf
arpl
jb
add
jne
popf
cmpl
mov
movsl
sbb
push
jb
dec
cmpsb
into
jg
xorl
xlat
or
lods
mov
push
add
stc
js
test
dec
inc
fnsetpm(287
cmp
es
adc
jle
cmpsb
add
mov
ss
dec
sti
mov
mov
adc
je
mov
sahf
popf
add
fcmovb
int
add
idivl
push
add
and
jl
loopne
inc
test
sbb
lahf
dec
mov
mov
aas
loope
test
movsb
jle
add
inc
add
loope
fidivs
xor
mov
cmpsl
rolb
push
lret
fldcw
rcrl
xchg
cs
pop
cld
ret
xchg
in
and
stos
cmp
xchg
adc
lods
cmp
in
pop
adc
add
test
pop
les
add
push
test
dec
dec
inc
roll
add
loopne
mov
aaa
jmp
sub
add
sti
cmp
pushf
pop
or
flds
mov
sub
and
pop
push
jg
sbb
fbld
je
testl
sbb
mov
inc
nopl
das
sbb
lock
lock
or
xor
cld
mov
inc
xchg
add
xchg
push
mov
bound
cs
lret
adc
sbb
popf
inc
xor
jmp
call
sub
imul
mov
cmp
lret
push
ret
push
or
outsl
dec
notb
mov
add
es
sub
loop
mov
add
int
sub
loope
stos
xchg
jnp
mov
xchg
cld
adc
cmp
adc
lods
xchg
add
filds
add
lret
cmp
xchg
push
lret
lods
xchg
mov
fcomp
fstl
imul
ss
pushf
jb
icebp
xor
pusha
cmp
aas
dec
fimull
inc
cli
or
add
shlb
mov
mov
mov
in
inc
lret
jl
jne,pt
jg
lods
iret
shlb
inc
mov
int
out
add
into
fs
loope
rcrb
pop
pop
xchg
or
sti
in
shlb
add
xor
inc
je
repz
jo
add
mov
sub
add
out
add
popa
xchg
add
xor
jp
mov
movsl
cmpsl
es
or
xorb
push
mov
stos
xlat
nop
jnp
add
movsl
xor
and
cmp
das
testl
jp
xlat
sbb
adc
lahf
add
out
mov
roll
pop
mov
inc
and
inc
add
push
in
aam
or
mov
sub
mov
test
into
and
mov
add
pop
add
lods
push
xchg
scas
insb
mov
test
sahf
pop
cmpsb
repz
mov
data16
aam
inc
cmp
mov
data16
xlat
add
mov
adc
iret
lods
call
add
rorb
lods
pusha
lea
into
pop
sbb
mov
sbb
sbb
sbb
int3
je
popa
nop
negl
sub
mov
add
add
stos
xchg
xchg
adc
fildll
aam
xlat
js
js
mov
add
sub
loope
sbb
add
aaa
out
inc
mov
fcom
add
sub
sbb
jne
xchg
scas
adc
out
scas
add
inc
xor
push
daa
xor
push
add
add
repnz
sub
insl
insl
mov
add
aad
push
and
add
inc
adc
jae
mov
push
or
pop
std
test
je
sbb
je
or
jge
mov
xchg
fiadds
std
mov
add
test
sbb
add
dec
cmp
jle
or
push
mov
pop
or
shr
xor
imul
ja
xchg
shll
clc
dec
push
add
jmp
push
add
nop
or
cwtl
adc
fisubrs
stc
adc
or
lahf
outsl
ret
add
jnp
xor
mov
inc
add
add
add
sar
loope
faddl
mov
dec
jnp
iret
iret
and
fadds
and
add
mov
mov
shll
testb
dec
movsl
add
lahf
xor
add
jbe
add
inc
pop
dec
loope
dec
aaa
test
push
pop
cmpsb
repz
add
lcall
fcompl
xchg
addr16
add
icebp
int
js
add
cmpsl
addr16
pop
and
fiaddl
adc
test
je
xlat
imul
mov
or
dec
dec
add
scas
leave
add
mov
jae
mov
int3
lods
xchg
mov
pop
cld
sub
fucom
mov
lea
push
push
xchg
pop
mov
add
sti
addr16
mov
or
dec
push
push
imul
adcb
add
daa
ret
lret
shll
filds
orb
xor
sub
jp
add
int3
stc
ss
jl
add
inc
pop
push
pop
lret
sub
add
mov
scas
js
mov
mov
ljmp
jge
mov
adc
add
sub
pop
jmp
loope
repz
mov
and
add
popa
inc
adc
vmovdqa
sbb
pop
aad
push
and
cwtl
lds
sbb
outsb
or
add
out
mov
int3
add
movb
jmp
and
pop
jb
pop
sbb
add
inc
dec
stos
fcmovbe
test
cmc
add
das
shrd
push
mov
adc
pop
or
xchg
loope
in
outsl
add
lds
xchg
pop
loop
sbb
movsb
repnz
int
sbb
mov
aam
jle
and
sbb
xchg
or
addr16
push
add
xchg
insb
call
fs
pop
add
arpl
dec
insl
or
movsb
and
clc
sub
add
add
hlt
neg
add
mov
nop
push
xlat
mov
bound
jne
lret
ss
and
test
idivb
mov
dec
inc
incb
test
imul
dec
cmc
sub
xchg
movsl
adcl
orb
popa
imul
add
aam
movl
jl
xchg
push
jo
outsb
xchg
sbb
add
or
nop
pop
ret
add
sub
mov
ret
lahf
mov
int
cli
outsb
ljmp
pop
lock
add
mov
arpl
xchg
mov
and
mov
add
ss
hlt
sub
mov
xchg
sti
xchg
stos
add
xchg
inc
or
std
hlt
sti
push
xchg
push
outsl
fistpll
add
mov
cmp
repnz
pop
or
and
jnp
orl
test
movsb
aaa
pop
mov
jg
add
xchg
dec
jno
add
bound
add
shlb
lret
sub
or
sahf
rcrb
ret
fsubrl
scas
ds
mov
bound
mov
sar
add
fdivrp
or
popf
std
lahf
jmp
rcr
inc
cmpsl
std
hlt
cmp
popa
lods
outsb
stos
mov
dec
mov
cmp
push
cmp
cmp
jmp
xchg
stc
loope
add
into
lock
out
push
cmp
das
and
call
ret
push
add
xor
mov
add
push
mov
stc
mov
add
outsb
jl
add
adc
loopne
repnz
pop
jne
aas
jg
icebp
int3
ja
inc
add
scas
mov
nop
cmp
or
fwait
add
or
mov
mov
je
pop
sbb
pop
xor
jo
cmpb
push
xor
sahf
jo
push
xchg
add
cmpsb
pop
sahf
sub
imul
add
add
les
test
push
push
icebp
scas
jb
add
adcb
add
mov
out
add
fsubs
xor
shrl
in
js
out
pop
lret
rolb
xor
out
js
push
cmc
adc
add
xchg
dec
enter
and
pop
add
mov
mov
jp
push
into
sahf
lret
or
fistpll
add
dec
cmpsb
pop
pop
lods
movsb
repnz
add
popl
pop
lret
push
rol
pop
and
mov
mov
mov
jl
sub
inc
out
add
aam
in
movl
add
out
in
or
inc
enter
mov
int
add
add
cmp
test
rcrl
adc
psubsb
add
lret
scas
add
inc
call
dec
lods
fldl
sub
ss
ficomps
int3
push
repz
cmp
test
jns
inc
iret
fsubrp
xchg
add
add
sub
adc
push
mov
daa
xchg
stos
pop
add
cld
aas
dec
iret
ret
outsb
loope
insb
lret
push
push
push
into
mov
ret
add
push
cli
pop
scas
jecxz
sbb
add
add
mov
mov
in
mov
adc
ficomps
hlt
fwait
mov
xlat
clc
sbb
sbb
pusha
mov
add
aam
into
mov
xlat
add
sbb
cwtl
int
xchg
es
pop
repz
test
xor
loop
filds
mov
cmp
aas
ret
repz
xchg
adc
test
pop
jb
mov
sub
or
cmpsl
add
jp
mov
mov
add
mov
mov
sbb
add
das
xchg
pop
add
mov
cli
sti
jle
loop
sbb
mov
jo
push
xchg
add
cmp
sti
leave
push
push
cltd
ret
pop
daa
aaa
push
lods
clc
in
aad
das
fcompl
or
popa
mov
sbb
push
add
lahf
mov
push
add
or
adc
inc
sbb
jnp
jl
insb
out
and
and
jnp
jae
pop
iret
add
shrl
adc
add
mov
and
mov
xchg
pop
hlt
sbb
test
pop
sub
add
inc
xchg
sub
rclb
cmpsl
inc
sahf
cmpsl
inc
scas
xorl
inc
add
test
imul
xchg
popa
dec
cmp
rcrl
imul
cs
out
andl
mov
sbb
in
pop
dec
testb
sahf
add
outsb
mov
sbb
or
sub
push
in
pop
out
mov
lcall
push
push
jmp
ja
out
lret
repnz
push
cmc
repz
lea
ja
push
lea
sbb
pushf
sbb
in
in
dec
pop
data16
enter
or
icebp
std
add
xor
pop
add
sti
or
movl
or
ret
cmpsb
in
shl
lds
jle
movsb
add
fimull
sub
aas
dec
push
xor
jae
leave
imul
add
ljmp
mov
add
inc
xchg
mov
rorl
and
imul
int3
add
add
add
xchg
ljmp
stos
add
dec
push
add
dec
inc
icebp
add
push
adc
adc
scas
jge
cmp
mov
push
push
jmp
jbe
fadd
add
int
xchg
shr
jge
ret
or
sub
pusha
cmp
add
pop
mov
inc
add
adc
setg
loop
cmp
or
add
gs
les
add
mov
loope
or
push
mov
mov
jo
sub
insb
rclb
fcomi
pop
add
add
add
pop
add
xor
into
mov
adc
and
mov
cld
scas
jo
mov
adc
mov
sub
cmp
xchg
dec
sahf
inc
push
sbb
add
rcrl
jne
cmpl
loopne
jp
adc
add
pop
fldenv
lret
fimull
cmp
push
cmp
es
movsb
out
ret
jnp
jbe
jge
ficoms
or
cmpsl
add
bound
aam
sub
dec
outsb
pop
cmp
fistps
or
cmc
pop
and
push
sbb
add
or
in
fwait
add
inc
sar
shl
mov
add
add
loop
into
sbb
mov
add
xchg
push
or
jne
xor
pop
and
sti
add
xor
shll
push
outsl
add
pop
in
inc
dec
aas
lods
add
add
add
jo
jo
sub
ret
push
add
lea
cmp
jne
add
sub
lret
pusha
test
xchg
add
xor
xchg
dec
mov
jl
movsb
jmp
int3
push
test
movsl
clc
add
int3
out
xchg
dec
sbb
stos
adc
test
mov
sbb
mov
pop
mov
and
mov
add
jge
stc
popa
cmp
xchg
pop
fcoml
pop
add
xchg
stc
adc
add
dec
xor
dec
add
xor
mov
xor
mul
test
bound
push
jg
shlb
xchg
add
cli
popf
into
push
mov
xchg
lahf
in
sub
aas
sbb
iret
xchg
pop
loope
arpl
add
add
jbe
stc
pop
push
xchg
sbbb
adc
or
xor
insl
jnp
popf
jbe
jg
cli
cmp
jmp
add
into
push
movsb
in
add
sub
or
fwait
jae
mov
dec
aad
call
add
imul
dec
in
addr16
inc
dec
dec
lret
add
push
js
dec
bound
adc
ds
mov
int
pusha
sahf
arpl
add
mov
andb
fisttps
pop
inc
jns
add
pop
out
loop
dec
add
add
inc
pop
nop
ficoms
jae
fadds
lret
add
add
or
ret
add
aas
out
add
mov
and
mov
addr16
add
fcompl
js
rcr
cs
repz
xchg
ror
push
mov
dec
jmp
add
aas
mov
xchg
add
aaa
mov
add
pop
incl
mov
xchg
add
add
aad
dec
mov
push
add
push
ss
insl
add
adc
jle
orb
adc
mov
inc
xor
sbb
xchg
loope
sub
out
sub
push
enter
ffreep
adc
es
int
bound
jl
push
add
in
outsl
xchg
add
icebp
add
ficompl
cltd
adc
and
incl
sbb
push
add
lcall
and
jno
cmp
cli
cmpsl
pop
stos
pop
push
mov
insb
mov
or
stos
lods
dec
or
mov
loope
in
pop
mov
aaa
ss
cmp
in
shr
add
mov
sbb
jb
add
mov
add
dec
add
dec
iret
add
or
or
cmp
jne
pop
sbb
add
sbb
out
cmpsb
outsl
push
mov
mov
pop
rcrl
mov
dec
push
fdivrl
sarl
movd
and
sub
add
es
mov
arpl
outsb
add
mov
pop
in
add
or
cmpsl
mov
aam
adc
shlb
inc
mov
data16
cli
jge
pop
adc
add
push
add
out
add
popf
in
test
sub
add
or
pop
push
sub
mov
orl
not
pop
bound
ds
scas
add
fwait
and
mov
leave
dec
icebp
sub
add
mov
or
aaa
sbb
jbe
hlt
add
fiaddl
popa
pop
fwait
add
cmp
lods
xchg
inc
inc
push
and
sbb
xchg
dec
cmc
add
inc
jp
mov
ret
add
pop
add
rorl
pop
sbb
mov
icebp
fdivp
add
sbbl
rcl
cmp
lds
add
inc
jg
cmp
add
addr16
lea
aad
dec
jae
or
aaa
xchg
xchg
adc
je
dec
ret
dec
inc
aad
sub
cmp
pop
add
and
ret
add
in
mov
mov
imul
lret
sbb
mov
mov
sbb
jecxz
cs
xchg
xor
sbb
pop
push
add
ljmp
sub
int
pop
inc
jmp
in
xchg
mov
adc
lret
cmpsb
movsl
lds
mov
lret
xor
add
or
add
aaa
cmp
clc
lea
imull
loope
lcall
ret
aaa
jmp
lret
add
add
add
mov
xor
pop
call
scas
pop
or
add
pop
lret
das
fiaddl
loopne
sub
adc
ret
hlt
pusha
jae
sub
jbe
mov
push
insl
dec
cmp
add
add
xchg
mov
cmpsl
and
iret
jo
mov
xchg
cli
add
inc
lea
push
add
in
pop
push
dec
cmpsb
test
cmc
imul
adcb
add
xchg
add
lret
push
xchg
nop
fwait
enter
cld
add
aam
add
adc
inc
dec
insl
sbb
out
or
xlat
push
sub
push
aad
xchg
add
mov
push
xchg
jae
mov
loopne
test
mov
pop
sub
xchg
rcrl
jp
mov
loopne
xor
add
in
sub
jle
mov
push
jp
sbb
es
and
add
mov
push
sub
pop
add
mov
push
out
int3
sub
jo
movsb
cmp
and
decl
data16
add
pop
add
cmp
jo
addb
push
sub
subb
add
dec
popf
lock
jmp
fisttpl
or
icebp
ljmp
mov
or
mov
rcl
icebp
xchg
jbe
out
es
cli
roll
dec
incl
mov
gs
sti
add
inc
xchg
lds
add
xchg
aaa
add
scas
inc
icebp
dec
push
arpl
cli
add
sbb
hlt
loope
jl
js
jl
mov
cld
adc
testl
addr16
mov
jns
cmp
adc
mov
adc
mov
cmp
push
outsb
cmpsl
arpl
cmovns
imul
insl
xlat
xlat
sarb
add
test
outsl
daa
mov
adc
cmpsl
add
stos
dec
add
and
jo
repz
fsubr
ds
in
jg
cmp
lds
add
or
leave
cs
or
popf
add
and
sbb
jg
into
sub
add
fisubs
mov
imul
add
or
cmp
add
add
subb
fiaddl
jo
sbb
inc
jns
add
stos
push
xor
rsm
loop
add
xor
push
mov
mov
ljmp
sub
add
push
or
stc
sub
jne
fcoms
mov
ds
loope
dec
mov
nop
sbb
mov
rcl
add
pop
inc
subl
mov
add
aam
out
sahf
fadds
sbb
movsb
subb
add
xchg
mov
xchg
jmp
cmp
ficoms
dec
push
and
mov
add
pop
shrl
bound
dec
add
add
fbstp
stos
movsl
ljmp
jo
push
push
pop
add
icebp
out
fistps
daa
inc
push
rcr
add
sbb
add
push
jne
repz
insb
fbstp
mov
sub
xchg
mov
sub
or
sbb
mov
mov
dec
push
inc
out
aas
push
scas
fimull
aam
mov
pushf
jge
pop
push
cmp
cmc
add
imul
cmpsb
dec
xor
jo
mov
je
pop
sub
mov
icebp
push
mov
sti
add
xchg
test
call
adc
push
dec
loope
cmpsb
pop
out
add
shrb
sbb
sahf
jb
loopne
add
inc
mov
out
adc
xor
fmull
addl
xchg
xor
jne
mov
add
lret
jne
repnz
mov
inc
int
sti
xor
leave
add
insb
ljmp
add
add
decl
inc
call
and
or
mov
insl
int3
adc
xchg
sar
fdivrl
push
repnz
pop
popl
push
hlt
call
mov
pop
push
addb
jnp
jl
mulb
xor
test
mov
pop
mov
out
pop
hlt
jbe
xor
jecxz
dec
inc
cld
cmp
idivl
mov
sub
dec
daa
xor
and
add
mov
cmp
add
incb
push
jae
push
inc
xor
stos
add
imul
dec
lock
sub
cmp
jnp
xchg
adc
mov
iret
add
outsb
pushl
sub
xlat
aam
add
mov
add
push
mov
inc
aam
xchg
rolb
lcall
mov
or
jb
add
dec
add
xchg
xchg
add
lret
xor
inc
or
add
bound
xor
loop
repnz
test
mov
fs
ljmp
mov
inc
dec
roll
xor
or
shlb
aaa
adc
mov
add
xchg
push
xor
imul
sub
inc
fnstsw
fmuls
rolb
fsts
xchg
jmp
enter
into
lods
jp
add
mov
inc
sub
mov
lock
or
add
add
add
xchg
add
int3
jnp
lret
and
push
cmp
loopne
ret
and
les
stos
pop
mov
cmp
xchg
cltd
into
dec
in
or
rolb
jle
lahf
outsl
add
stos
enter
add
push
xchg
pop
jb
test
mov
cld
add
jmp
mov
cld
adc
add
add
imul
xchg
xchg
push
push
in
push
push
outsb
in
jns
add
xor
repnz
aas
add
dec
imul
xchg
cmp
mov
pop
xor
jmp
sub
test
or
mov
addr16
add
sbb
add
out
popf
push
add
loop
fucomi
add
mov
pop
dec
mov
fucom
push
mov
pop
sub
lea
shl
test
mov
movsl
add
pop
jae
pop
add
iret
mov
fldt
and
add
fdivrs
inc
push
xchg
les
nop
out
mov
inc
aas
int3
cmp
jne
and
cmpsb
mov
xchg
xchg
popa
add
push
jle
push
mov
outsl
add
push
adc
sub
dec
addr16
add
enter
cmpsl
jge
inc
std
pop
or
pop
pminsw
pop
fwait
test
lcall
cmp
inc
push
xchg
add
add
mov
jge
jp
push
lret
gs
add
dec
add
add
fs
inc
add
sahf
adc
mov
sub
fld1
push
or
jl
ljmp
in
jmp
sbb
sub
in
orl
add
lea
add
pop
int3
hlt
stc
xchg
loope
or
inc
int
jmp
in
push
sti
push
mov
fadds
es
jmp
nop
sahf
cli
imul
pop
mov
pop
mov
test
jge
inc
mov
les
enter
xor
cmovnp
add
ja
push
add
scas
push
pushf
lret
xchg
xor
pop
mov
pusha
test
xchg
push
cmp
pop
aaa
add
jp
addr16
gs
cmpsb
dec
movsl
cmp
push
popa
popf
mov
push
push
call
in
add
negl
push
roll
lock
push
xchg
scas
cmp
jbe
lods
cmp
loop
xchg
mov
dec
fdivs
insl
or
adc
adc
inc
les
push
push
stos
inc
jmp
jb
mov
fnstenv
mov
add
in
movsb
push
or
adc
dec
sbb
not
ret
pop
push
and
adc
pop
add
ret
pop
das
loop
imul
pop
lds
rolb
les
ret
test
out
cwtl
outsb
sbb
mov
mov
fwait
add
mov
cli
stc
aad
xor
movb
mov
jo
mov
jae
push
lret
sub
mov
rolb
jae
add
rolb
add
insb
add
add
xor
pop
movsb
test
test
lahf
dec
add
mov
xor
xchg
shlb
dec
jb
pop
jmp
and
jo
add
cld
push
cmc
push
in
xchg
int3
aas
add
stos
ret
inc
mov
add
mov
rcr
pop
add
mov
xor
es
and
pop
ffreep
jg
jecxz
add
out
add
test
cmp
push
je
push
jmp
cmp
sub
je
jno
fbstp
dec
mov
mov
lcall
bound
in
stc
aaa
in
into
pop
pop
inc
sub
or
push
aas
test
jg
test
or
and
gs
repnz
add
xchg
and
cmp
in
data16
cmp
add
add
icebp
testl
std
fistl
xor
add
jns
out
jge
push
cli
add
sbb
mov
push
mov
mov
stos
rcrb
push
add
addl
andl
xchg
xlat
adc
and
in
lods
movsl
inc
add
add
push
add
fdivr
or
stc
mov
add
adc
pushf
outsb
sbb
and
and
dec
testb
sbb
add
cli
dec
xorb
adc
adc
jg
push
popf
imulb
js
cmc
jp
cmp
jle
add
es
add
mov
or
mov
addb
pop
nop
add
sub
and
ss
ret
pop
inc
pop
fwait
jecxz
fwait
pop
out
push
xor
nop
daa
in
test
mov
decb
mov
add
sub
aas
mov
mov
sbb
jmp
cltd
add
and
jae
inc
mov
jl
loop
movsl
mov
fisubs
arpl
sbb
gs
push
getsec
stos
in
ret
add
pop
sub
dec
mov
inc
push
or
out
sbbl
fstpl
scas
pop
std
pop
push
dec
mov
jmp
add
iret
add
fbstp
mov
ljmp
cli
xchg
adc
out
add
sbbb
cmc
cmpsl
bound
or
inc
sbb
pop
in
xor
cmp
pop
aas
stc
int
sub
das
jge
roll
pop
imul
cmp
xor
sar
push
push
inc
mov
icebp
negl
movsb
or
add
jecxz
mov
mov
fisttps
outsl
add
lret
sub
cmp
jns
mov
adc
mov
mov
std
lcall
loopne
mov
add
add
mov
sti
sub
imul
cmp
testb
add
ret
cmp
add
popf
adc
mov
mov
movl
mov
pop
out
fcompl
sub
sub
lock
add
mov
paddb
pop
adc
add
repnz
mov
popw
inc
and
aaa
pop
scas
push
cmpsl
scas
sarl
adc
pop
scas
rcll
dec
cmp
arpl
scas
mov
stos
dec
sbb
aad
out
imul
add
addr16
mov
add
jl
and
inc
xlat
jbe
ljmp
add
add
incb
sti
incl
xchg
or
test
dec
cs
add
add
xor
and
xor
jns
mull
fildl
or
jg
pop
mov
fldcw
sti
add
aad
es
jo
sub
or
jp
inc
and
or
pop
xchg
adc
cmc
push
fadd
cmp
out
sbb
jb
mov
and
push
add
add
dec
lock
jo
pop
add
xor
jb
add
loopne
ss
mov
inc
add
in
aad
and
dec
jp
movsb
aaa
lahf
mov
xor
add
stos
inc
add
or
imul
pop
popl
sbb
dec
sbb
orl
int
push
dec
adc
loope
mov
dec
and
jmp
jmp
mov
add
movsl
adc
imul
cltd
mov
mov
sar
add
shlb
pop
xchg
xor
mov
push
pop
add
push
xchg
jbe
sub
int
aas
mov
cmp
movsb
mov
adc
cmp
add
jbe
xor
mov
mov
mov
mov
ret
in
fildl
jnp
fidivrs
add
in
mov
dec
add
add
push
call
shl
mov
add
add
cwtl
or
dec
lret
mov
push
xorl
dec
out
popf
cmpsb
mov
ret
insb
add
and
fcomps
bound
add
mov
push
xchg
sbbb
add
push
cld
dec
icebp
lret
xchg
test
inc
nop
je
and
scas
push
fxch
lahf
mov
mov
pushf
lock
sarb
add
aam
mov
sbb
or
and
pop
test
in
fiadds
pop
pop
mov
xorl
cmpsl
test
cmc
cltd
shlb
mov
repnz
xchg
mov
cmpsb
xchg
or
push
out
ret
lea
lea
add
add
cmp
xor
mov
xlat
cmp
jno
lret
loopne
movsl
add
insl
out
sbb
iret
add
nop
mov
test
sub
xchg
stos
pop
sbb
push
sbb
mov
cs
sub
cmp
push
mov
push
pop
lahf
fsubrs
lahf
andb
add
add
mov
inc
test
mov
add
int
loop
ret
arpl
inc
add
out
aad
push
add
call
in
and
jmp
es
jo
pop
mov
arpl
ja
xchg
push
loop
mov
add
div
mov
imul
xchg
pop
outsl
fscale
add
aam
mov
adc
test
dec
enter
inc
rcrl
adc
and
sbb
idiv
add
dec
jmp
cltd
mov
and
mov
notl
aam
mov
inc
stc
sbb
xor
int
in
pop
push
push
pop
pop
and
int
mov
mov
add
aam
cwtl
push
test
mov
in
mov
mov
js
xor
cwtl
push
lcallw
xchg
or
add
xlat
mov
pop
cmp
mov
aam
xchg
sbb
stc
or
call
inc
lods
in
pop
pop
test
rolb
xor
ret
ret
shrl
add
or
decb
aaa
add
test
mov
sbb
cltd
mov
nop
cltd
out
xchg
test
cmpsl
lret
out
add
mov
imul
sbb
leave
imul
shrl
jae
and
inc
push
mov
add
mov
add
les
daa
push
add
jns
ds
xchg
push
and
fistl
xor
xor
inc
adc
sub
dec
insb
mov
add
mov
arpl
fldl
out
sub
xor
shll
or
add
xor
xchg
aaa
jge
adc
add
loop
hlt
dec
movsl
pop
fidivrs
bound
arpl
mov
pop
push
push
add
add
arpl
ret
les
push
push
mov
add
je
lods
mov
iret
pop
add
xchg
xchg
cltd
pop
pop
jns
jle
arpl
fstl
dec
add
test
stos
sub
add
push
sbb
add
pop
mov
add
push
push
mov
mov
sti
add
dec
inc
jae
outsl
test
and
sub
mov
test
shl
fdivrs
push
jae
mov
inc
aas
jge
enter
or
jmp
add
xchg
cmp
pop
mov
fs
mov
sub
mov
push
subb
mov
dec
je
lcall
aam
pop
popa
jo
lret
push
fistps
in
xchg
xchg
mov
outsb
mov
jo
mov
je
push
pusha
add
out
pusha
inc
add
add
push
adc
sub
in
dec
sub
popa
jbe
pop
mov
xlat
jmp
mov
dec
add
mov
push
add
lahf
stos
adc
add
push
movsl
repnz
push
dec
sahf
add
insl
cli
add
clc
add
xor
dec
cmp
pop
gs
or
mov
mov
jnp
push
adcl
cmp
js
cmp
push
ss
not
add
add
add
imul
sbb
add
add
inc
pop
cmp
lods
mov
add
add
xchg
and
or
sbb
and
cld
icebp
fisttps
fdivr
std
into
or
adc
mov
fwait
cmp
test
inc
push
sti
inc
add
xchg
popf
cs
sub
push
loop
and
sub
cwtl
dec
test
outsb
ljmp
cli
iret
sub
push
add
imul
push
push
or
jno
inc
jb
stc
cmp
and
cwtl
lcall
add
push
sbb
push
out
in
push
add
add
cmpsb
add
ss
adc
fmull
adc
push
adc
fiaddl
insl
pop
js
sub
sbb
aaa
out
les
xor
cmp
pop
inc
mov
adc
leave
add
movsl
add
xchg
xor
mov
inc
mov
out
push
imul
lods
ret
or
cmpsb
mov
mov
jecxz
dec
lea
lret
test
pop
insl
insb
inc
mov
or
pop
lods
cmp
cmp
add
stc
mov
push
dec
add
jb
add
mov
push
sub
aas
adc
mov
adc
pop
outsb
jns
add
add
adc
verr
jle
jns
jnp
jle
data16
or
xchg
add
into
cmc
add
or
test
popf
sub
add
pop
add
sbb
jmp
or
fcoms
ss
add
jl
or
test
std
cmp
gs
mov
jg
or
imul
mov
test
xchg
jg
lods
filds
mov
sbb
popf
cmpsl
adc
inc
sbb
mov
or
scas
add
mov
pusha
scas
dec
aas
xchg
add
mov
jg
jb
pushf
shlb
js
repnz
xchg
mov
xchg
outsl
pop
xor
lods
or
mov
push
add
mov
subb
jecxz
mov
stc
sbb
sti
rol
rcr
aad
movb
push
inc
jb
icebp
sub
ficomps
ljmp
inc
sbb
mov
xor
add
js
jl
mov
pop
cmpsl
jcxz
cli
add
repnz
and
pop
in
cmp
mov
call
test
test
add
mov
fs
mov
jbe
fdivrl
scas
gs
out
cld
add
xor
ljmp
add
mov
push
in
sbb
push
f2xm1
and
adc
add
out
xchg
add
test
into
outsb
das
cmp
movsl
fidivrs
cli
sbb
in
int
into
or
add
add
sub
and
cmp
in
pop
jnp
cmp
mov
shl
psrlw
in
jo
add
pop
lret
jne
push
scas
leave
loope
add
xor
movsb
pushf
sbb
aad
sbb
scas
sbb
mov
jno
jno
xchg
cwtl
lcall
lea
ret
add
test
lahf
sbb
cmpsb
dec
stos
mov
inc
push
repnz
xchg
loope
outsb
pcmpgtw
mov
stos
jns
mov
repnz
les
jb
in
jbe
push
sub
inc
mov
lret
cmp
add
sbb
pop
out
pop
inc
daa
jmp
sub
add
inc
insb
mov
add
push
add
lahf
pop
inc
jmp
das
add
inc
add
nop
push
pop
pop
push
sbb
add
ljmp
out
popa
mov
cmp
pop
push
push
ss
adc
sub
dec
add
test
nop
icebp
add
lock
and
mov
add
ds
pop
fnstenv
ret
scas
add
out
mov
adc
inc
adc
fsubrs
shl
mov
imul
push
inc
popf
xchg
and
push
aam
dec
mov
sub
xchg
insl
aas
or
cmpsl
add
xchg
movsl
jne
cltd
mov
jmp
insl
add
adc
jl
in
andl
iret
inc
aaa
fildll
add
mov
clc
xor
mov
push
jg
mov
filds
test
je
inc
mov
add
stos
add
mov
addr16
icebp
mov
outsb
jbe
add
pop
add
lret
inc
frstor
movsb
sub
add
push
ljmp
pusha
aas
lds
test
adc
mov
mov
add
pop
aas
daa
pop
push
mov
xchg
lock
pusha
and
add
adc
mov
fadd
or
mov
repnz
sub
jg
push
addb
adc
repnz
mov
popf
add
xchg
mov
add
insl
imul
inc
mov
adc
inc
add
jae
repnz
adc
scas
add
pop
add
sbb
xchg
mov
dec
add
cmp
pop
add
dec
xor
inc
loope
xor
xchg
loopne
pop
add
incb
mov
pop
rorl
das
stos
push
and
push
loope
outsb
dec
pop
add
fidivs
ret
in
add
dec
cmp
add
dec
das
fimull
add
sar
mov
aas
mov
add
jge
inc
dec
pusha
movsb
push
add
outsl
add
add
sbb
add
mov
js
mov
and
in
xchg
pop
icebp
jecxz
sub
jo,pn
out
sahf
xor
test
inc
aam
int3
sbb
stc
push
xchg
push
or
jo
movsb
in
loopne
int3
and
insl
aam
outsb
leave
es
jne
adc
xchg
sub
mov
cmpsl
add
movsl
pop
lret
sub
movsb
xchg
imul
and
add
mov
mov
inc
outsl
cmp
adc
inc
pop
sub
add
or
sti
mov
jmp
ljmp
jae
add
andb
popf
xchg
icebp
movsl
lds
sbb
aas
add
sarb
jmp
adc
sbb
mov
test
call
mov
xchg
inc
pop
mov
or
aad
and
pop
xchg
cs
xchg
xchg
lahf
dec
int3
out
loopne
mov
jmp
pusha
repnz
outsb
xor
mov
mov
mov
insl
add
clc
ljmp
cltd
repz
sahf
pop
xlat
out
repz
fdivrl
cltd
mov
cmpsl
mov
add
add
cli
sub
outsl
outsb
scas
imul
add
or
inc
adc
dec
nop
inc
loope
sar
or
dec
shll
pop
add
add
add
jbe
sub
incb
push
cltd
add
test
push
stos
aas
inc
cwtl
add
out
xchg
es
jbe
sub
cmpsb
movsl
xchg
aaa
mov
push
add
lods
jl
push
push
aas
xor
add
adc
dec
xchg
pusha
mov
adc
aam
fldcw
ja
bound
mov
add
sbb
les
icebp
xor
push
jns
xchg
cmp
add
inc
aaa
cmpsl
push
cli
add
stc
push
mov
mov
push
int
xor
add
je
dec
cs
add
add
xchg
add
roll
push
sbb
loopne
pop
lea
int
or
add
int
test
lods
pop
loop
lods
lock
imul
push
stc
add
hlt
scas
shrb
cmpsl
mov
cmp
xchg
cmpl
adc
cmpsl
pop
scas
insb
add
repz
add
cmp
jge
into
pusha
arpl
mov
pop
xchg
outsl
inc
inc
dec
cmp
in
dec
add
add
outsb
add
stos
outsb
mov
add
cld
or
jle
add
xlat
add
add
inc
mov
and
hlt
test
dec
mov
add
lret
out
push
add
imul
sbb
or
ljmp
xor
mov
push
pop
out
lods
dec
lcall
out
dec
clc
cld
push
add
pop
pop
sti
loop
push
jecxz
push
sti
sbb
xor
gs
mov
ss
jae
in
add
insb
aad
add
loop
imul
mov
or
out
loop
faddp
mov
pushf
add
jns
cmpsb
ja
mov
cmp
ret
xchg
enter
adc
dec
push
adc
xor
ss
cmp
dec
lahf
hlt
cmp
mov
push
mov
add
add
test
dec
sbb
jbe
fisubrl
sub
in
xchg
ss
cmp
popf
push
add
jl
rolb
adc
sub
je
jns
push
sbb
mov
sbb
pop
notb
stos
xchg
ss
push
mov
je
xchg
mov
inc
push
aas
push
add
mov
pop
sahf
stos
es
add
jno
cmpsl
test
cmpsb
xchg
shl
roll
fadds
dec
jle
es
or
push
loop
sti
add
xchg
push
in
xchg
lcall
jmp
aas
mov
or
pop
adc
add
fmuls
out
adc
add
cmp
lcall
mov
addl
shrb
pop
sbb
rorl
add
lret
xacquire
sbb
xchg
ss
jne
popa
lahf
sbb
addb
sub
dec
pop
jle
cmp
and
and
pop
add
push
in
insl
rcl
lods
rol
add
add
inc
jo
sahf
and
aam
mov
pusha
shlb
adc
sahf
decb
add
pop
xor
adc
lods
lahf
xchg
lret
add
jge
pop
or
mov
in
repnz
ljmp
in
push
xor
jmp
imul
mov
lods
in
mov
add
roll
add
or
jne
sub
sbb
xchg
jnp
adc
aaa
mov
mov
mov
inc
sub
in
xchg
hlt
xor
adc
or
stos
stos
divb
movsl
push
push
ror
add
les
add
ljmp
rcr
jnp
sub
add
mov
xchg
jne
popa
pop
ljmp
aaa
and
shlb
or
inc
stos
jb
xor
cmc
xchg
sbb
xor
mov
cmp
xchg
lret
push
out
push
add
les
or
loopne
push
add
roll
cmp
pop
push
add
add
inc
push
cmp
add
add
ret
scas
mov
pop
je
sub
outsb
cmp
sti
jo
cs
cmpb
sub
aam
cmp
pop
add
jmp
dec
add
cmp
fwait
outsl
out
mov
cmp
cli
inc
int
dec
cmp
enter
push
jmp
push
sub
sbb
and
js
cmc
sub
sub
mov
adc
jb
mov
je
mov
rolb
insl
out
xor
hlt
adc
imul
mov
jo
in
test
pop
test
shrb
shr
mov
add
xor
es
pop
xchg
pop
in
xor
add
sub
pop
pop
mov
sti
add
mov
xchg
imul
shlb
sub
into
push
add
mov
adc
rcrb
lock
cwtl
mov
jo
adc
mov
arpl
jg
or
add
mov
pop
aas
dec
cmpsl
nop
xchg
xor
add
sub
xchg
les
or
imul
jp
push
bound
lahf
loopne
sub
pop
lods
pop
in
repz
xchg
mov
int3
movsl
jb
roll
jg
test
sbb
scas
mov
iret
pop
xchg
mov
test
push
push
aad
cmp
xor
insb
outsb
and
aad
adc
lret
hlt
jmp
dec
inc
insb
lahf
loope
int3
in
pop
repnz
movsb
sub
mov
dec
addb
enter
fsubrl
cwtl
mov
outsl
call
repz
jmp
ret
push
out
push
ret
mov
outsl
and
mov
aaa
lahf
add
out
xchg
and
std
cmp
jmp
lret
cmp
scas
push
push
inc
push
xor
fnsave
and
call
xchg
roll
inc
sbb
imul
jp
fiaddl
push
sti
roll
xor
add
lds
fiadds
dec
add
arpl
sahf
ror
in
add
cmp
push
scas
jae
int3
jge
jo
mov
add
xor
popa
cmp
add
jbe
hlt
daa
lods
add
adc
lcall
dec
shrl
add
gs
add
adc
add
insb
inc
mov
addb
mov
xor
inc
add
stc
xchg
push
andb
nop
mov
in
jl
sbb
mov
mov
mov
xor
push
movsl
add
jle
pop
daa
add
mov
push
sahf
hlt
add
fcompl
pop
mov
pop
out
out
cld
add
sub
sbb
pushf
mov
add
ret
add
jecxz
xchg
cli
add
pop
movsl
sub
xor
sbb
in
call
test
ja
sbb
aad
add
addw
adc
mov
stos
mov
bound
and
mov
mov
dec
pusha
jbe
add
out
jns
int
mov
shlb
js
or
outsl
sbbl
testb
add
pop
cmp
xchg
jns
pop
add
inc
add
cmpsl
clc
aas
add
mov
xor
sub
leave
cmpsl
sti
mov
clc
add
add
xchg
imul
jno
rclb
ret
mov
das
adc
or
dec
fiaddl
enter
lods
mov
inc
cmp
sub
outsl
adc
sub
cwtl
inc
inc
push
mov
movl
sub
adc
out
push
cmc
out
fldl
sub
adc
and
xor
mov
ds
fiadds
mov
add
leave
xor
sbb
mov
push
roll
incl
xor
pop
stc
int3
dec
mov
call
jmp
stos
xchg
add
popa
and
cmp
push
les
sub
jbe
adc
adc
inc
clc
add
movsl
loope
xchg
xor
add
je
and
xor
pop
pusha
add
test
arpl
addr16
add
lds
add
iret
ja
pop
jle
mov
add
jb
fimull
mov
push
pop
inc
add
add
add
cmpsl
xchg
or
into
scas
ret
iret
lods
sub
lahf
xchg
sbb
mov
sub
add
int3
add
outsb
sbb
mov
mov
add
push
adc
add
mov
dec
mov
inc
xorb
cltd
xor
clc
add
add
rcll
addb
mov
xor
mov
addr16
lds
or
insb
clc
add
mov
lods
mov
add
or
cmpsl
cmp
sub
pop
sbb
xor
mov
mov
xor
sub
add
repnz
jae
flds
cli
add
cmp
faddl
dec
mov
add
sub
add
cmovnp
cmc
mov
or
cmp
lock
stos
fsubrs
aas
add
mov
insb
leave
lds
icebp
mov
cmp
hlt
cltd
add
jge
lods
push
and
add
push
mov
ljmp
mov
add
iret
fdivrs
and
jle
mov
sti
mov
lea
add
add
sbb
sbb
clc
out
mov
dec
sub
add
sbb
aas
pusha
int
imul
loop
arpl
outsb
pop
push
jnp
jo
inc
adc
add
or
mov
ss
dec
fisttpll
adc
rcll
faddl
filds
xchg
add
mov
pop
notb
fildll
mov
add
inc
or
push
addl
push
jl
jns
pop
pop
stc
or
jne
packsswb
aam
push
or
add
lret
les
inc
and
cwtl
subb
ljmp
xchg
aas
lcall
mov
mov
jmp
jo
adc
or
cmpsl
sub
mov
shll
int3
cmp
scas
out
ret
pop
cwtl
cmpb
je
pop
ja
dec
add
push
jno
push
add
lret
lods
mov
jg
gs
add
inc
cmc
push
sahf
mov
mov
xchg
mov
dec
loope
sub
es
push
push
pop
add
divl
dec
dec
jb
call
rcrl
stos
push
adc
in
jbe
int3
mov
ja
xorl
add
mov
enter
gs
dec
nop
inc
add
lahf
inc
clc
add
aas
pop
and
lret
ret
inc
daa
inc
add
xchg
test
add
das
inc
push
outsb
outsb
loope
nop
scas
inc
lret
xchg
loope
xchg
inc
add
add
mov
xchg
arpl
mov
ss
cmc
addl
push
mov
adc
into
xor
push
pop
sub
inc
and
cwtl
add
mov
adc
orb
fistps
gs
sbb
loope
sbb
in
out
lahf
enter
inc
test
cmpsb
scas
cmp
adc
mov
jns
cld
adcl
sub
xchg
sub
add
xor
xor
cvtpi2ps
popa
jg
lret
addl
popf
popa
cmp
pop
jle
pop
std
fsts
mov
or
jecxz
sbb
mov
lret
mov
add
add
addl
movl
int
dec
lods
add
push
leave
add
add
iret
lahf
pop
inc
cmp
dec
add
lret
mov
jns
cmp
sahf
mov
mov
add
push
insl
stc
jo
cmc
add
testl
add
push
pop
add
not
lahf
add
cmp
xchg
enter
incb
sbb
iret
cmp
xorb
mov
insb
pusha
shrb
out
out
add
iret
dec
aaa
ds
mov
inc
pop
xchg
out
fiadds
sub
dec
fimuls
fmull
addr16
push
add
mov
add
xchg
roll
xchg
repz
sub
add
inc
pop
mov
movsb
loop
addl
and
cld
movl
add
adc
aad
sub
out
pop
add
mov
add
cli
dec
lahf
jno
adc
in
adc
xor
mov
cwtl
push
fmull
loope
outsl
pop
cltd
sahf
clc
add
dec
in
xor
mov
out
mov
fldl2e
out
in
aas
int
and
sbb
out
shrl
call
outsl
add
xor
call
mov
cld
jno
aam
mov
test
fistl
jp
ljmp
add
mov
or
orb
mov
push
jle
inc
push
and
out
popa
fstps
pop
xchg
sarb
bound
leave
add
movsl
dec
mov
jmp
adc
insl
fistps
ljmp
inc
xor
out
fwait
pop
cwtl
add
fadd
clc
cmp
aaa
daa
mov
into
inc
nop
mov
mov
add
jnp
mov
ss
shlb
push
mov
in
subl
sarl
jle
mov
dec
lods
test
mov
movsb
add
loope
adc
push
add
loope
mov
dec
fs
mov
xor
in
cltd
cmp
imul
sbb
fs
loope
or
scas
mov
jno
mov
je
jbe
mov
mov
jbe
add
movsl
sub
ret
movsb
mov
adc
scas
fiadds
cmp
and
add
inc
outsb
rorl
mov
ja
lret
out
into
add
jnp
add
mov
lcall
in
fsts
bound
inc
xor
mov
or
and
cwtl
mov
push
out
xor
out
data16
adc
mov
mov
mov
jo
add
popf
lock
divb
sbb
mov
rcrb
shl
push
lock
je
sbb
fimull
movsl
xchg
lods
sbb
add
in
push
in
xchg
pushf
popa
outsl
mov
mov
inc
xchg
and
aad
add
add
daa
add
sbb
push
adc
rcrl
repz
fildl
clc
add
cmpsl
ss
add
mov
add
inc
inc
je
sbb
mov
add
cmp
jmp
mov
fidivrl
stc
cld
sar
lea
dec
cmpb
enter
fcomip
sub
je
add
test
cmp
pop
jns
push
add
loope
jae
pop
add
js
push
daa
add
dec
int3
imul
data16
add
ds
mov
add
xchg
jg
test
mov
sbb
les
shll
xchg
and
add
movsb
xchg
xchg
add
test
ds
sbb
in
addl
mov
jbe
in
mov
add
xchg
rcll
cmc
mov
sbb
pop
outsl
aad
or
and
pop
sub
jnp
inc
mov
add
add
add
std
aaa
adc
xchg
mov
test
movsb
lret
clc
popf
mov
faddl
mov
mov
dec
jns
sarl
js
insl
adc
mov
cltd
jb
add
adc
out
fists
jle
daa
out
add
add
mov
insb
push
push
es
decb
cli
inc
ds
int3
je
adc
or
add
jp
xor
fisubs
sbb
sub
pop
add
add
mov
add
insl
call
inc
pop
or
xchg
add
pushf
ret
xor
push
add
scas
sahf
ds
daa
pop
hlt
add
mov
sbb
xor
mov
xchg
mov
or
sub
push
xlat
xor
or
adc
add
inc
out
loop
seto
sub
das
jb
prefetch
or
pop
pop
sbb
dec
dec
movsb
mov
add
push
inc
adc
mov
pop
fistpll
xchg
rol
inc
cmp
and
insb
sbb
sbb
loopne
roll
enter
cmpsb
test
dec
lret
push
inc
cmp
add
push
add
negb
mov
leave
mov
sbb
js
jmp
cmp
xlat
add
movsb
dec
cmp
jge
rsm
out
add
xchg
rolb
movsl
jo
les
popa
or
loop
add
lret
lods
ss
rcl
callw
mov
add
shlb
inc
and
arpl
fistpll
dec
jle
push
hlt
push
int3
and
fs
sbb
lcall
jbe
cmp
imulb
filds
loop
mul
add
fiadds
psubq
les
pop
scas
add
pop
mov
mov
add
aaa
push
adc
xchg
dec
add
add
cmp
add
iret
out
cli
or
rorb
lock
outsl
cmc
sbb
rorb
or
dec
int3
mov
mov
cmpsb
mov
push
cmp
into
inc
cmp
and
pop
xchg
ret
add
in
adc
pop
xor
jl
sub
xchg
adc
pop
aas
and
arpl
scas
cli
aam
cmc
hlt
mov
push
mov
int3
dec
inc
cltd
xchg
or
dec
into
inc
pop
mov
pop
arpl
inc
out
add
mov
pop
pop
push
dec
add
movsl
dec
faddp
xchg
shr
ret
rorl
outsl
sub
jb
push
jbe
stc
inc
push
pop
add
add
xchg
push
or
dec
outsl
pop
push
loopne
js
je
or
jnp
dec
sbb
int3
sub
xlat
add
arpl
mov
js
push
add
jge
mov
xchg
add
mov
add
cmp
call
add
insb
or
mov
inc
xchg
jg
or
add
adc
mov
fisubs
sub
add
repz
or
xchg
add
xlat
sbb
adc
add
rol
test
inc
fcoml
lahf
addl
out
rolb
mov
and
add
into
nop
add
lods
mov
add
push
mov
xchg
inc
push
rcrb
lret
sti
mov
push
mov
dec
fists
jne
ret
inc
jae
repz
js
in
add
xlat
jg
repz
adc
add
mov
jbe
sbb
xor
sar
repz
add
out
cltd
lods
lahf
push
add
pop
adc
cs
mov
add
or
xor
add
lcall
ror
mov
inc
mov
gs
mov
icebp
add
push
iret
lods
pop
sbb
sub
insb
mov
inc
mov
aas
sbb
add
jle
popa
clc
fistpl
popf
test
sbb
aad
sbb
int
xlat
fst
push
push
out
adc
scas
add
mov
xor
dec
push
mov
push
dec
scas
sub
incb
test
pop
scas
or
in
jge
push
call
mov
mov
loope
jle
dec
jecxz,pt
nop
push
sbb
or
sti
mov
sub
add
sub
xchg
cld
imul
push
cmovne
xchg
scas
movl
sub
cwtl
andb
les
xchg
lret
call
cmp
out
add
int
dec
xchg
shrl
add
sbb
stc
outsl
xor
jne
cmpsb
inc
das
mov
ret
insl
mov
outsb
sub
add
mov
jnp
pop
mov
cmovae
fcomi
xor
jns
decb
leave
cld
jp
test
jp
or
xor
das
xchg
iret
add
clc
and
add
sbb
in
aam
and
add
push
pop
jecxz
movb
xchg
jge
push
xchg
add
push
xchg
sub
fdivp
adc
lock
clc
xchg
outsl
push
and
mov
lods
adc
mov
fwait
movsb
mov
or
add
push
movsb
xchg
adc
xchg
mov
mov
dec
je
push
mov
or
fsts
pop
add
add
xor
pop
into
roll
lods
sti
add
xchg
js
mov
clc
jno
rcrb
add
ret
add
stos
jb
xchg
add
fildl
xchg
inc
sbb
add
push
or
mov
fcoms
nop
pop
sbb
pop
dec
add
mov
or
mov
pop
sbb
inc
xor
stc
hlt
insb
jno
add
outsl
daa
jge
jnp
inc
incl
pop
mov
mov
and
fs
mov
shlb
das
sbb
in
scas
and
pop
in
popf
cmp
push
mov
jno
add
iret
cmp
cwtl
movsb
dec
pop
aam
test
imul
scas
xrelease
stc
add
fnsave
gs
test
cltd
bound
inc
push
inc
in
and
pop
push
lret
add
lahf
adc
sub
jae
and
sub
loope
das
mov
jmp
outsb
add
dec
ret
test
pop
mov
dec
into
int
loop
movsb
or
pusha
int3
outsl
adc
and
into
mov
and
add
or
cmp
mov
or
popl
inc
inc
jnp
sbb
lcall
add
add
and
cmp
push
xchg
sahf
add
loopne
ret
jmp
cmp
leave
ss
roll
push
imul
xchg
xor
jmp
jg
push
add
imul
je
xor
lret
mov
cmc
rolb
pop
sub
mov
dec
adc
sarb
push
mov
add
jg
pop
mov
add
xchg
cld
add
sub
cmpsb
pop
jnp
push
ljmp
fbstp
xchg
xchg
jnp
jno
xor
add
int
sbb
add
out
xchg
lret
inc
and
rolb
pinsrw
mov
pop
add
sbb
xor
xor
mov
insl
aad
jns
push
aas
jmp
int
add
dec
aad
mov
ljmp
adc
shrl
jae
xchg
push
scas
adc
mov
xchg
or
mov
jmp
sti
push
xchg
sbb
fldcw
add
js
imul
fldt
mov
mov
push
add
add
sbb
mov
adc
add
xchg
jae
jg
pop
loop
add
incb
mov
clts
add
add
gs
xchg
add
mov
add
mov
add
jl
addb
jo
imul
xchg
pop
bound
aam
sti
add
cmpsl
cmp
out
and
cmp
rorl
cwtl
jecxz
push
xchg
lret
je
jae
xor
mov
dec
lahf
sbb
jge
inc
xchg
mov
loopne
or
sub
inc
add
test
addb
pop
push
add
add
lods
inc
add
adc
lcall
addl
cltd
adc
test
repz
popf
mov
js
fisttps
xor
fsubl
out
repz
rcrl
das
push
sbb
es
or
lods
push
push
sub
sbb
repz
aad
add
add
dec
add
loop
mov
insb
test
enter
dec
neg
jl
mov
int3
add
stc
call
add
shlb
add
sub
mov
push
jb
lcall
sti
inc
dec
inc
jmp
mov
jnp
cmp
add
jo
add
cwtl
add
xor
dec
mov
scas
int3
rcrl
cmpl
sarb
je
add
ss
sti
add
xchg
sbb
out
stc
loopne
mov
shrl
mov
or
pushf
arpl
sahf
repz
add
xchg
repz
mov
inc
mov
add
scas
sub
hlt
sbb
and
xlat
in
imul
es
add
adc
scas
xor
sti
int3
fcomps
push
add
or
lret
mov
aad
sti
mov
xor
cmp
jbe
jg
jp
addl
mov
cmp
cltd
jno
ret
xchg
dec
bound
mov
adc
nop
daa
push
adc
leave
sbb
jno
mov
inc
repz
mov
dec
sbb
xlat
jl
rcl
mov
push
mov
push
in
lcallw
in
cwtl
mov
gs
jo
dec
and
addr16
outsb
sbb
adc
sub
out
pop
shlb
loope
add
scas
mov
rclb
mov
xor
jmp
out
icebp
cmp
movl
inc
mov
inc
sbb
jb
sbb
jne
jp
test
adc
mov
push
cmp
jb
sbb
decl
adc
jb
lds
add
mov
push
and
out
insl
fstl
pushf
lcall
add
lds
push
mov
je
cmpsl
sub
pop
fstp
add
pop
jns
sub
sub
pxor
xchg
jp
mov
adc
cmp
inc
scas
das
idivl
fwait
add
es
xchg
xchg
xor
sbb
mov
sub
in
push
mov
or
cli
mov
pop
insl
xchg
or
mov
add
ds
push
inc
ret
xor
movsb
inc
cltd
mov
sbb
add
in
mov
push
xchg
add
add
add
sub
mov
rolb
add
roll
mov
add
adc
fisubrs
call
inc
cwtl
bound
mov
outsb
add
xchg
jg
xchg
add
sbb
data16
push
jl
pop
xor
in
pop
add
cmpsb
fadd
add
adc
adc
add
or
xor
xor
int3
sbb
stos
jge
int3
sahf
add
test
scas
mov
movl
jg
aas
or
push
pop
test
jmp
stc
sub
nop
daa
add
gs
mov
add
mov
arpl
sbb
ficoms
inc
ljmp
into
add
cmc
xchg
inc
or
mov
add
sbb
jmp
xchg
lods
add
int3
aas
inc
mov
mov
pushl
xchg
lahf
arpl
pop
push
and
inc
mov
push
std
mov
mov
call
add
out
movsb
subb
roll
mov
lcall
test
jno
sub
imul
xchg
testb
lods
shr
adc
aad
push
sub
add
cmpsb
inc
jo
or
mov
rep
fiaddl
dec
add
mov
js
or
mov
stc
add
cmp
pop
sub
adc
test
add
jp
cs
add
leave
xchg
das
xor
sbb
jnp
adc
dec
ds
add
mov
push
gs
cmp
int3
sar
cmpsb
lahf
add
inc
lock
cmp
fnstenv
xchg
pop
add
mov
mov
add
test
jnp
cmp
fwait
arpl
pop
push
mov
mov
fdivr
and
cwtl
mov
test
add
pop
and
aaa
stos
mov
mov
add
rorb
cmp
mov
push
add
add
pusha
ret
std
shrb
mov
add
add
xchg
sti
xor
mov
mov
fs
das
daa
into
inc
cmp
loopne
mov
cld
cli
dec
rorl
jecxz
xor
cmp
jle
test
nop
push
in
pop
mov
add
cmpsl
rcrl
ret
das
ret
inc
xor
dec
dec
sub
popl
fcmovnu
and
xchg
lds
daa
sbb
pop
add
dec
movb
adc
fwait
cltd
sbb
fimuls
sub
cltd
jo
mov
add
mov
aaa
mov
add
jne
ror
jle
inc
mov
loope
adc
xchg
mov
inc
cs
xor
sbb
xchg
movsl
cmp
cltd
mov
add
scas
outsl
adc
scas
mov
pop
mov
mov
sbb
inc
ret
adc
shll
mov
push
add
lahf
jb
mov
cwtl
xor
add
xchg
das
mov
cld
sbb
add
cltd
cmc
lods
inc
or
add
add
sbb
pop
fimuls
insl
mov
xor
sbb
loope
aad
lods
daa
dec
add
add
add
cld
popf
mov
rcll
pop
popa
mov
and
int
addr16
or
mov
and
arpl
pop
lds
fwait
daa
adc
add
add
jmp
popf
lahf
stos
add
xchg
jp
cmp
adcb
adc
mov
enter
insb
mov
add
pusha
mov
test
mov
add
add
scas
jg
sbb
in
push
add
pushf
sbb
mov
and
insb
subb
pushf
xor
test
mov
adc
pop
xchg
ret
call
mov
add
add
incb
pusha
aaa
xor
lods
jae
cmc
add
mov
outsb
and
cmp
fnstenv
iret
lock
les
mov
out
dec
stc
adc
adcb
mov
add
cltd
fdivrs
add
add
mov
jg
scas
adc
movsb
add
loopne
push
pop
cmc
rcl
jns
aam
test
adc
loopne
xor
roll
aaa
add
or
subb
pop
es
add
mov
or
pop
ss
in
add
mov
mov
mov
add
lds
jne
aaa
jmp
push
jmp
out
mov
add
imul
or
xlat
xor
push
mov
jp
add
lods
mov
stc
xchg
adc
xchg
stos
in
mov
mov
lcall
add
inc
jb
add
sbb
pop
cld
movsb
inc
pop
jmp
xchg
pop
mov
add
adc
pop
add
add
je
add
pop
stc
jb
testl
mov
cmp
cmp
roll
aam
ss
int
mov
insb
fildl
mov
sti
out
mov
dec
cltd
dec
push
jae
adc
or
adc
pop
test
or
xchg
add
call
add
cmp
lea
add
ret
mov
xchg
fimuls
inc
jge
xorl
aas
or
pop
popa
add
ret
jae
add
neg
gs
cmp
add
nop
les
xchg
push
scas
stc
add
inc
mov
and
add
add
call
mov
add
mov
imul
add
pop
jmp
inc
add
lahf
ljmp
dec
rorl
or
or
js
sbb
cwtl
pop
jg
rolb
sbb
dec
jne
or
pop
imul
add
jl
test
mov
in
add
les
or
jle
nop
xchg
add
add
add
loope
cmc
sbb
xor
jno
jbe
or
and
add
lods
add
fildl
and
test
ljmp
int
icebp
testl
add
std
daa
add
ja
pusha
fcoms
sbb
jb
rcrb
xchg
xor
pusha
ret
rorb
ret
push
aaa
aad
push
sbb
ret
add
add
mov
add
mov
push
lods
testb
add
daa
ds
sti
hlt
add
or
push
mov
add
sub
push
jp
fmul
pushf
loope
mov
add
add
mov
add
mov
std
mov
add
adc
xchg
sub
cmp
add
xor
add
add
sbb
leave
push
fs
xor
movsl
mov
enter
add
push
add
outsl
fiaddl
rolb
jb
inc
movsl
fimuls
mov
add
add
and
and
add
jl
and
xchg
adc
sti
add
add
jecxz
cli
add
push
cmpl
sbb
add
cmp
es
cmpsb
out
jge
and
mov
sbb
push
add
dec
add
rol
fwait
cmpsl
push
pop
scas
mov
ret
xchg
insl
ret
scas
add
or
imul
pop
mov
sub
and
pop
add
add
add
xor
add
into
cld
pop
add
add
icebp
insl
add
test
add
mov
aas
pop
mov
jno
cmc
sbb
fisttpl
test
jne
cli
mov
pop
sbb
fldl
repnz
add
add
or
jno
xchg
test
movsl
xchg
add
xchg
leave
adc
inc
cli
mov
or
shl
gs
leave
push
cmc
add
jge
mov
mov
push
push
and
testb
adc
adc
fst
mov
aas
mov
add
stc
rolb
add
sti
outsb
cmpsl
and
jbe
sub
add
addb
loop
add
in
mov
lret
rcll
addl
add
das
adc
rclb
push
jno
dec
aad
xchg
dec
add
imul
int
sbb
sbb
clc
add
xlat
adcb
clc
subl
ja
or
adc
inc
cli
movsb
sub
loopnew
add
aam
cmpsl
adc
dec
fdivrl
add
push
mov
lea
sbb
or
jmp
cmp
add
add
mov
add
and
mov
pop
add
outsb
inc
iret
and
pop
dec
mov
fidivrl
mov
adc
daa
lahf
adc
inc
xor
sub
sub
or
fwait
sub
push
mov
pop
stc
insb
mov
push
mov
cmp
and
lock
dec
inc
fstpl
push
es
xchg
xor
cmp
xchg
mov
movl
movsb
cltd
push
mov
cmp
rorl
sbb
imul
mov
push
add
pop
loopne
pusha
add
push
xor
push
add
dec
add
sbb
sub
movsl
out
cmpl
inc
sub
and
fisubs
aad
pop
and
das
dec
push
into
enter
stos
movsl
cltd
add
fmulp
sub
loop
pop
outsl
push
xchg
aam
ret
and
or
ljmp
idivb
shlb
adc
or
adc
sub
outsl
sub
push
mov
fiadds
inc
add
sbb
pop
add
push
mov
mov
push
add
lcall
insl
xor
add
pop
inc
jecxz
push
push
add
add
xchg
lahf
add
or
imul
scas
sahf
mov
or
fdivrl
ret
pop
clc
imul
add
or
cmp
movsb
scas
push
sbb
dec
sar
dec
decl
mov
mov
mov
popf
in
jle
inc
push
out
icebp
jle
mov
mov
and
mov
jp
add
cmpsl
pop
pop
inc
mov
xchg
ds
dec
lcall
mov
sub
or
mov
sbb
test
add
or
adc
sub
add
nop
mov
dec
xchg
cmpsl
xlat
jnp
ret
push
data16
dec
xchg
inc
bound
fisubrl
lea
in
add
sahf
sub
add
mov
inc
adc
push
cli
and
jns
ror
push
add
xchg
cmpsl
faddp
or
pushf
shll
and
pop
imul
adc
push
add
mov
add
loope
xor
cmpl
fidivrl
add
cwtl
cltd
pop
les
push
xchg
cwtl
add
test
mov
daa
imul
scas
enter
pop
add
mov
add
adc
mov
sub
cmp
add
push
jecxz,pt
add
decb
in
pop
xchg
movsl
dec
xor
stc
or
rclb
testb
jb,pt
fcomip
ds
mov
push
and
add
pop
adc
ret
push
jl
call
pop
addr16
add
xchg
mov
lea
aad
ljmp
add
fistl
push
add
add
out
ret
fdivl
in
cmp
test
je
xlat
push
add
mov
sahf
add
int3
push
dec
bnd
insb
push
jbe
cmp
add
mov
aad
imul
push
inc
mov
push
xchg
sbb
jae
ss
sub
cmp
cmp
loopne
or
push
imul
dec
jne
stos
add
jae
cmc
add
add
or
addr16
imul
add
ds
std
push
add
mov
imul
add
adc
cmpsb
mov
jg
inc
and
es
add
adcb
clc
xor
ret
add
fists
stc
test
pop
adcb
sub
xchg
testb
mov
rorb
data16
pop
repnz
pusha
movsb
insl
pop
dec
ret
into
and
add
and
aaa
dec
push
shlb
sbbb
sbb
dec
adc
xor
mov
fsubrl
adc
pop
add
or
add
flds
mov
sbb
add
xchg
ja
mov
add
test
loopne
jle
inc
pop
cmp
xor
mov
stc
sub
insb
fwait
push
lods
les
push
dec
es
sbb
sub
inc
addl
sub
pushf
add
mov
jbe
pop
push
jb
iret
inc
stos
mov
xor
or
cmc
scas
xor
gs
add
scas
mov
xchg
and
pop
repz
dec
xor
jno
rcrl
mov
sbb
cli
in
data16
xor
jl
sbb
loopne
ds
add
sub
enter
addr16
insb
movsb
add
push
neg
mov
pop
xchg
mov
xchg
mov
add
push
xchg
outsl
add
add
in
mov
pop
add
in
stc
in
nop
add
add
subb
cltd
outsb
aaa
aad
add
outsl
andb
in
pushf
ljmp
in
add
stc
repz
adc
ja
push
out
add
add
jg
js
notb
js
add
add
jnp
xor
mov
shrb
or
xchg
add
ja
pop
test
lds
jmp
add
add
add
sarb
and
jmp
xor
add
sub
cltd
xchg
pop
dec
das
pushf
add
pop
arpl
shll
sbb
dec
mulb
dec
dec
xchg
add
or
add
scas
add
push
fnstcw
leave
icebp
xchg
cmp
inc
fistpl
das
xchg
cwtl
jg
push
cltd
cmp
add
jno
aas
fimull
push
sbb
insb
outsb
daa
roll
xor
mov
out
jns
iret
push
aaa
sub
nop
loop
push
cltd
dec
shlb
and
jp
imul
xor
xchg
int3
mov
es
inc
bound
push
xor
xor
stos
add
mov
add
add
push
add
insb
test
sub
add
sbb
pop
pop
nop
add
inc
aad
dec
enter
pushf
out
jo
inc
mov
rolb
pop
mov
rcrb
cli
stos
lcall
add
iret
add
jp
mov
add
out
cmpb
cmp
ds
push
add
mov
dec
adc
out
mov
inc
cmp
cmp
sbb
ss
inc
push
mov
mov
stos
lea
in
std
or
mov
add
ss
xchg
xchg
sbb
int3
push
add
add
ror
add
or
das
jne
jge
fldl
xchg
jge
cmc
stos
add
jno
into
notb
and
insl
add
add
fldcw
sub
xchg
pop
and
mov
add
jl
inc
add
test
fcmovnu
add
inc
subb
roll
daa
mov
daa
bound
xchg
rcrb
stos
sub
jmp
push
ret
xchg
imul
lds
sbb
cli
lods
in
cmp
cmp
flds
jns
add
add
push
add
pusha
xlat
add
es
loopne
enter
jne
shll
xchg
lock
push
popa
add
jb
lret
aad
test
add
add
add
xor
or
push
add
sub
inc
dec
fisubl
xchg
add
outsl
add
repnz
push
lock
ja
xor
mov
imul
jecxz
adc
mov
out
lret
popa
das
daa
xchg
jbe
sbb
cwtl
jp
mov
mov
jecxz
test
dec
roll
xor
fimuls
fdivs
push
add
lcall
vsubss
into
mov
dec
add
or
fs
pushf
loop
jge
jnp
dec
out
je
inc
jae
inc
pop
fwait
sbb
rolb
js
test
adc
add
into
mov
add
fsts
push
mov
clc
mov
sbbb
bound
xchg
push
or
std
pop
bound
movsw
mov
cmp
loopne,pn
lods
cmc
pop
or
xor
add
xchg
stos
scas
loopne
sub
ja
jne
push
add
dec
sub
wrmsr
mov
pop
push
ljmp
out
loopne
clc
ret
mov
and
cli
or
addr16
popf
testl
add
testb
ljmp
js
stc
popf
sbb
ljmp
add
add
outsl
rorb
fisttps
roll
bound
outsb
sub
icebp
adc
test
mov
inc
xchg
or
aas
lret
sbbl
push
add
cmp
jo
cld
je
icebp
lods
push
adc
add
ss
jg
imul
or
add
and
cmpsb
inc
mov
push
das
jne
xor
jne
mov
outsb
add
add
rol
callw
movsb
out
pop
sub
xchg
and
mov
js
sub
add
jmp
sbb
push
aas
pop
fucomip
add
jne
popf
pop
pop
add
insl
push
testb
repnz
add
dec
sub
add
cli
add
add
pop
mov
push
sub
testb
movsb
ljmp
mov
add
sub
fiaddl
imul
lea
adc
into
xchg
add
add
rorb
insb
push
loope
int
clc
mov
mov
mov
push
int3
pop
addr16
rcr
cmp
popa
imul
add
stc
add
push
inc
and
bound
push
pop
shll
jno
sub
add
add
add
scas
mov
xchg
hlt
add
pop
jae
mov
fdiv
sti
mov
mov
call
dec
cmp
repnz
xchg
cmpsb
xchg
adc
add
loop
faddl
nop
stos
or
je
mov
sub
add
xchg
popa
lret
pop
mov
mov
mov
addl
lahf
mov
jge
jle
mov
cmp
xor
rcrl
or
dec
sarl
ljmp
mov
lcall
dec
faddl
push
popf
xor
pop
cmpsl
insb
mov
popf
push
xchg
loopne
jo
out
in
and
std
add
arpl
lret
fisubs
bound
cmp
sbb
fildll
sbb
ret
enter
add
rcll
add
jp
out
mov
add
adc
popf
push
sbb
ret
sub
cli
sbb
mov
leave
scas
faddl
int3
add
incl
cmp
loopne
mov
dec
sbb
push
out
push
mov
jo
stos
dec
fwait
push
push
scas
aas
add
xchg
inc
mov
fisttps
cmp
shll
outsb
jns
or
mov
clc
movsl
xchg
inc
lods
xor
dec
add
add
flds
push
cmp
xchg
add
popf
dec
ds
add
add
imul
jg
jle
ljmp
and
jb
outsl
leave
shrl
inc
push
cmc
sbb
cmp
sub
enter
aad
arpl
lds
test
xchg
jno
icebp
mov
rcl
add
mull
cli
mov
rcll
fsub
fs
dec
push
cmp
hlt
mov
sbb
clc
dec
ret
and
add
or
add
add
add
mov
in
dec
add
aaa
add
aad
jmp
ss
mov
loopne
jbe
addr16
add
shlb
icebp
adc
test
inc
push
inc
call
sti
cwtl
cmp
andb
add
add
jae
mov
jb
popa
out
push
lcall
lret
add
std
add
out
movl
frstor
jg
pop
lret
mov
inc
add
test
or
movsb
test
cmp
lds
jg
sbb
fildl
stos
notl
movsbl
mov
mov
ljmp
push
mov
les
out
movsl
and
in
lret
and
jmp
pop
shrb
cmp
loop
mov
sbb
int
lahf
mov
xor
jno
and
pop
sbb
dec
ret
or
add
mov
xor
push
arpl
add
push
cltd
mov
adc
into
dec
insb
add
movsl
movsb
rcrb
dec
push
sbb
aaa
mov
leave
aad
add
jo
mov
add
and
shrb
push
arpl
and
cmpsb
add
test
scas
cmp
aad
mov
add
adc
jp
flds
pop
fiadds
int3
mov
add
cmc
les
mov
ss
dec
incb
or
shrl
dec
add
lahf
in
sbb
adcl
jne
cli
add
cmc
cltd
hlt
mov
dec
addl
jns
jbe
fwait
mov
jp
cmp
rorl
adc
dec
aas
fildl
adc
jnp
dec
jg
xchg
sbb
pop
or
fisubs
inc
or
sar
inc
push
outsl
add
xlat
jae
mov
add
adc
add
sbb
xlat
rcrb
loop
call
leave
outsb
mov
jecxz
popf
sahf
or
int3
iret
mov
cmc
fidivl
fisttps
jmp
cmpb
pop
mov
stc
add
stc
adc
mov
pop
lods
sub
push
cmp
push
popf
inc
dec
push
add
inc
mov
rclb
dec
sbb
xchg
xor
jns
add
xor
mov
push
sub
jb
cld
cmp
add
add
xor
add
mov
push
test
adc
sarb
xchg
add
mov
add
popa
cmp
arpl
add
inc
push
mov
push
push
data16
adc
mov
add
lea
jb
add
pop
mov
jp
adc
imul
mov
ret
in
push
xchg
dec
add
sbb
push
ret
aas
cmp
das
sub
mov
pop
mov
jp
in
add
sbb
push
fbstp
pop
push
add
sub
testb
sbb
rolb
add
cmpsl
mov
outsl
inc
xorl
jmp
xor
add
mov
and
in
xchg
add
jne
gs
mov
lods
pop
add
adc
mov
pushf
adc
mov
add
pop
push
xor
sbb
sbb
adc
ds
pop
dec
push
data16
fcom
cmpsb
cmpsl
aas
adc
jns
out
repz
add
aad
mov
les
ljmp
pop
idivb
mov
sub
std
cmpsl
add
ljmp
sahf
mov
dec
fildll
or
mov
add
or
xor
es
mov
je
sbb
into
pop
int
shll
sbb
dec
jbe
pop
push
xchg
cmp
push
xchg
lret
insl
in
add
add
mov
das
loope
xor
aas
ret
lods
stos
add
xor
mov
xchg
sub
cli
push
insb
cwtl
stc
cmp
sbb
repz
les
adcb
loopne
or
bound
inc
pop
cmp
adc
jb
adc
fildl
push
dec
js
repz
add
push
mov
mov
aam
sub
add
dec
mov
inc
pushf
out
add
sub
lgs
xor
pop
mov
in
xchg
and
cld
add
les
mov
mov
push
mov
fsubrs
inc
add
xchg
add
sbb
cmp
xchg
or
mov
in
leave
rol
add
push
add
mov
xor
repnz
xor
pop
or
andl
cmpl
outsl
stc
jnp
imul
add
cmp
rcll
add
lahf
in
hlt
cmp
cltd
mov
add
sar
loope
add
add
or
jb
xchg
cwtl
add
dec
addl
mov
sbb
mov
nop
test
xchg
adc
add
stc
sti
push
add
pop
xchg
insb
cmpsl
or
xchg
addb
mov
subb
out
adc
add
das
jp
cwtl
arpl
pusha
gs
add
mov
push
into
add
inc
gs
and
lret
std
nop
mov
and
imul
lcall
and
lds
push
xchg
add
or
mov
mov
mov
cmp
push
jnp
xchg
insb
test
xchg
dec
sub
dec
idivl
and
or
cmp
scas
add
lds
mov
mov
stc
add
mov
sbb
lods
pop
adc
push
xor
arpl
rolb
inc
or
pop
xchg
adc
jl
mov
push
sbb
jo
xchg
push
lods
and
pop
neg
push
test
add
xchg
ljmp
push
mov
cmp
fwait
push
aas
inc
stc
mov
adc
mov
or
jecxz
sbb
aam
add
mov
mov
arpl
mov
push
imul
xchg
stos
das
lahf
imul
add
mov
cld
jb
std
jo
les
sbb
enter
xchg
pop
add
and
add
int3
dec
pop
nop
lcall
lea
mov
daa
in
xchg
sahf
rol
add
fadds
jmp
push
jmp
test
inc
add
cli
ficompl
inc
sub
aas
lods
add
push
adc
add
mov
mov
pop
mov
lock
push
jge
push
add
xchg
dec
xchg
in
mov
xchg
jns
popa
sub
dec
pushw
fstl
add
sub
ljmp
add
sub
pop
mov
out
pop
jle
sub
rcrl
add
inc
clc
or
mov
lret
add
test
loope
loope
dec
add
mov
stos
mov
add
pop
jbe
std
rcll
cmp
fwait
mov
pop
adc
and
nop
dec
sbb
mov
pop
jnp
mov
jo
pushf
and
add
mov
popf
push
cmpsl
ffree
sub
add
push
mov
push
mov
push
mov
mov
mov
add
fcomps
adc
jnp
lods
push
cmpsb
add
jns,pn
adc
psrlw
idivl
test
adc
shlb
add
sbb
daa
add
lods
sbb
cmp
mov
sbb
push
mov
mov
dec
xchg
mov
xor
enter
daa
mov
insb
jge
push
out
add
in
outsb
or
xchg
xchg
add
sbb
xchg
jo
negl
sbb
outsl
out
add
daa
ficompl
pop
sbb
xor
or
push
test
and
js
jp
in
pop
push
add
mov
sbb
mov
xlat
popf
xor
adc
push
lret
fcom
cmp
jae
aad
gs
jno
cmp
add
xlat
inc
adc
stos
loopne
fildl
arpl
jbe
hlt
fwait
jno
mov
pushl
pop
sub
test
add
lea
mov
pop
inc
pop
mov
cmp
stos
jmp
add
mov
movsl
mov
dec
fcmove
ret
repnz
daa
fs
xchg
add
mov
push
loope
pop
cmp
xor
lods
movl
push
aas
rcll
jle
xchg
mov
jae
inc
add
push
sub
add
inc
repz
add
loope
rolb
cmp
leave
add
add
outsb
mov
pop
add
insl
inc
jmp
mov
jbe
lea
lds
add
sahf
nop
into
lods
add
inc
movsl
ss
aam
pop
xor
mulb
or
shrl
xchg
add
les
jno
je
jnp
add
data16
push
add
addl
loopne
xlat
add
add
mov
push
shlb
cmp
add
sbb
xchg
loopne
add
pop
in
and
xchg
es
aas
inc
rolb
jg
enter
jg
add
add
xchg
mov
pop
sbb
aad
and
add
fwait
xchg
add
cmp
in
roll
inc
push
push
enter
adc
lock
and
lods
out
sbb
add
packuswb
xor
lret
pop
sahf
dec
fiadds
icebp
lret
in
aaa
ja
sahf
sahf
inc
sbb
inc
mov
xchg
in
sbb
push
scas
testl
inc
aad
add
xor
add
pop
adc
xchg
mov
sbb
scas
add
sbb
loopne
push
mov
dec
out
in
push
or
movsl
and
js
pop
out
call
aam
loope
out
cmc
adc
pop
mov
xor
fidivs
push
test
add
sub
dec
cmp
mov
add
add
fwait
add
add
add
jb
dec
cmp
push
stc
pop
adc
aas
fs
mov
rcrb
push
mov
push
jmp
dec
mov
cmc
add
pop
rol
dec
and
add
loopne
in
or
or
daa
lock
insl
enter
push
push
test
push
loope
jl
xchg
xchg
nop
push
add
cmpsl
sub
in
dec
add
jno
popf
cmp
rolb
out
jmp
add
add
add
xchg
inc
add
add
loopne
add
add
or
push
scas
fisttps
add
xchg
or
ds
mov
or
popf
mov
xchg
cli
cli
pop
out
add
sub
xor
jb
cmpsl
sbb
add
test
jle
xor
mov
test
repz
push
ror
or
jns
cs
pop
lock
hlt
js
mov
cmpl
lods
mov
and
mov
add
in
add
cwtl
punpckhdq
xor
mov
or
test
sub
stos
imul
mov
sbb
cmpsb
out
mov
xor
fsubrs
cmp
or
mov
cmp
shl
movsl
repnz
stos
insb
push
dec
inc
daa
add
les
jae
nop
cmc
sbb
add
push
fbstp
lret
icebp
add
add
icebp
jno
dec
es
lahf
mov
adc
pop
repz
dec
jb
jmp
ror
pop
add
xor
inc
push
add
adc
outsl
xor
xlat
fwait
clc
cmp
add
std
in
add
adcb
scas
das
sahf
push
dec
and
pop
out
dec
jecxz
aam
mov
add
cmc
mov
push
adc
mov
or
mov
add
mov
push
push
nop
roll
pop
movsb
out
push
insb
roll
and
inc
xchg
mov
ljmp
mov
mov
jo
cmp
pop
addr16
mov
inc
clc
or
testl
add
sbb
dec
popl
sbbb
mov
testb
push
fwait
mov
out
cmp
hlt
enter
clc
scas
push
fisubl
repz
into
test
test
cmp
stc
in
gs
mov
fisubrs
test
add
sar
mov
sbb
movsb
pop
addr16
pop
or
mov
or
mov
outsb
fnstsw
cmp
dec
add
test
scas
add
mov
add
dec
push
sti
frstor
scas
xor
push
xchg
add
jno
xlat
mov
adc
in
jno
pusha
jne
addl
push
stos
add
lock
sarl
loope
add
adcb
sub
jne
xchg
cmp
mov
add
pop
in
cld
jnp
pop
mov
and
adc
imul
mov
inc
or
xchg
mov
sbb
push
bound
loopne
inc
push
and
add
add
add
sti
pop
jns
push
cld
ret
fwait
jns
clc
adc
push
scas
rolb
leave
test
jp
jnp
scas
sbb
and
loope
add
add
fcom
insl
daa
or
cli
cld
mov
lea
cmp
add
push
and
xlat
or
lahf
sub
test
or
pushf
mov
js
add
sbb
add
or
shrb
pop
mov
add
adc
or
enter
jbe
and
and
xchg
push
jl
mov
cwtl
push
fwait
mov
or
sub
inc
xor
lods
add
mov
shrb
in
xchg
in
add
jo
cli
dec
jns
imul
in
daa
leave
add
and
outsb
xchg
jp
int3
cmpsl
test
sbb
popa
add
mov
divl
shrl
sar
and
lcall
xchg
and
sahf
mov
add
int3
out
nop
pop
add
dec
push
add
sub
add
adc
in
js
lret
ljmp
icebp
add
dec
or
xchg
pushf
jle
xchg
jecxz
add
adc
mov
pop
mov
fcmovnb
and
pop
pop
in
data16
loop
out
rol
notb
es
sbb
dec
lcall
dec
imul
pop
pushf
add
dec
push
loope
fistpll
mov
mov
pop
call
add
cmc
js
mov
add
in
add
jae
addl
pusha
or
out
add
lret
loope
add
inc
mov
mov
cmp
fs
push
rcll
sahf
push
xchg
adc
add
add
repnz
and
daa
xchg
adc
fstl
jae
loope
aad
insl
jo
add
mov
stos
stos
and
movsb
addl
nop
data16
test
hlt
sub
mov
xchg
sbb
call
fidivl
cmpsl
pop
xchg
xor
adc
jmp
mov
push
aam
mov
or
sbb
jle
ret
and
int3
mov
add
cmp
sbb
popf
mov
test
loop
add
shrb
outsl
inc
bound
shlb
lds
add
push
nop
pop
pcmpgtb
cmpsb
dec
outsb
je
and
sub
inc
inc
loop
cmpsb
test
push
add
jno
dec
ret
add
mov
mov
iret
jmp
out
loope
loope
lods
add
lea
fnstenv
das
popf
jno
lods
cmc
daa
sub
mov
test
ret
cmp
pop
jnp
or
jb
add
push
scas
xchg
mov
cwtl
icebp
or
fiaddl
lods
pop
adc
movswl
outsl
bound
mov
ljmp
shll
out
jb
cmp
mov
xor
fisttpll
loopne
jno
out
int3
xchg
out
repz
adc
insb
sbb
clc
or
xor
loopne
or
ss
in
add
cs
add
mov
aaa
andl
cwtl
inc
or
or
or
jae
sti
ficomps
add
pusha
ficomps
mov
mov
dec
mov
aam
fcoml
sbb
mov
jmp
loope
add
jl
into
push
add
add
fadd
imul
hlt
ja
mov
xchg
jnp
and
mov
adc
push
add
mov
push
pop
add
xchg
inc
add
fwait
mov
out
add
sub
mov
bnd
cmpsl
pushf
je
imul
dec
add
mov
aad
or
movsw
outsb
push
jno
enter
fwait
mov
add
push
mov
mov
mov
dec
xor
cmp
push
sti
lret
imulb
movl
gs
dec
leave
mov
add
xchg
inc
jae
sti
jmp
je
mov
xor
xlat
add
xor
add
stc
mov
fidivrl
addr16
movb
int3
aas
add
pop
mov
ret
jmp
aaa
js
add
pushf
xchg
inc
addl
lea
add
xchg
or
imul
cmpsl
je
adc
xor
bound
das
int3
lea
pop
and
lahf
add
push
int3
decb
int3
stos
mov
mov
nop
sti
jb
insl
bound
stos
lret
adc
xor
in
lods
push
nop
iret
es
shlb
movsb
out
jae
sbb
mov
inc
mov
out
mov
stc
pop
cld
mov
hlt
add
or
sahf
out
rolb
mov
cltd
add
cmp
lret
mov
add
inc
mov
jo
jno
lock
testl
adc
inc
or
and
push
call
mov
dec
add
faddl
js
or
push
imul
test
loope
mov
add
add
insb
scas
in
nop
add
aaa
or
ret
jmp
roll
cmp
movsb
xchg
sub
out
fcoml
xor
shrd
popf
lds
subb
ljmp
add
add
add
addl
lret
lds
ljmp
cmp
fs
pop
cltd
out
xchg
stos
cmpsb
addr16
sti
ljmp
jecxz
push
add
mov
xor
add
bound
push
in
arpl
mov
mov
or
movsb
movsl
enter
stos
add
add
xor
andb
mov
insl
test
or
or
cmpsb
lret
add
jg
shrb
test
mov
add
lds
jne
addb
lahf
mov
jp
add
dec
add
lret
movsl
ljmp
out
or
and
adc
mov
add
cld
cmc
add
mov
jns
inc
push
mov
sub
mov
hlt
or
mov
les
mov
cwtl
cmp
pop
ficoml
jmp
xchg
iret
lods
cmp
mov
pop
xchg
add
sub
inc
dec
push
mov
xor
mov
dec
inc
mov
sub
movsb
sub
aad
add
push
jnp
leave
in
mov
mov
jno
adc
rcrb
dec
aas
add
add
lahf
xorb
sbb
decl
add
fcomps
sbb
push
add
daa
cwtl
cli
scas
test
mov
and
mov
jnp,pt
add
enter
pop
popf
lods
in
pop
fistpll
or
or
enter
pop
push
clc
push
sbb
inc
cmp
dec
add
or
xchg
jne
dec
cmc
popa
mov
add
pop
test
push
xchg
sub
daa
cmp
and
inc
add
xchg
es
xchg
adc
mov
in
outsb
xchg
outsb
sarb
add
fnstenv
add
push
add
mov
add
les
jl
sarl
sub
andb
jg
repz
dec
stos
cs
out
add
arpl
mov
cmc
xchg
rcr
mov
xor
fwait
or
movsl
cwtl
push
fs
push
inc
jecxz
mov
ds
mov
push
xor
leave
sti
push
mov
add
imul
cmc
sbb
mov
lock
arpl
jg
cmp
or
add
leave
mov
scas
fisubs
fcmovnu
and
xchg
pop
addr16
xchg
add
in
inc
movsl
idivl
dec
jne
adc
add
lock
sub
insb
add
jecxz
add
int3
sub
sbb
xchg
inc
mov
outsb
or
lock
xor
mov
jns
mov
add
fs
popa
xchg
das
pop
pop
jae
pop
mov
ss
add
ljmp
fwait
rolb
fisubl
add
insb
xlat
imul
push
xlat
es
cmp
dec
fnstcw
mov
jmp
add
pop
sbb
jbe
out
movb
out
rolb
adc
ret
jg
xorl
ss
mov
adc
test
xchg
add
inc
imul
das
xor
push
fnstenv
mov
pop
in
es
bound
leave
push
and
mov
dec
sbb
fcompl
push
decb
shll
pop
aas
pop
xor
rcll
enter
sbb
cmc
add
fildl
or
add
lahf
jno
add
mov
and
jl
hlt
fsubr
mov
add
ljmp
cmp
aam
dec
inc
add
inc
les
leave
testb
mov
int
jecxz
sbb
dec
aad
rol
dec
xor
mov
stos
inc
sub
sub
xchg
fwait
push
jbe
clc
ret
and
push
shrb
loop
call
in
xor
cmp
pop
outsb
addr16
icebp
stos
cmp
leave
repz
adc
adc
je
lods
mov
and
add
fidivs
sub
push
push
fcmovbe
add
sub
cmp
cmp
fwait
or
aaa
negl
lods
sub
push
mov
mov
mov
incl
in
jno
cwtl
scas
xchg
add
add
scas
fwait
lds
cmp
mov
andb
ljmpw
pop
adc
inc
lret
mov
or
or
jns
outsb
jns
mov
add
xlat
mov
idivb
adc
test
push
mov
mov
in
addr16
dec
sub
pop
jns
pop
lret
mov
jb
outsl
add
leave
lret
lret
xor
dec
add
add
js
fs
add
push
push
outsb
add
pop
xchg
test
arpl
cmc
jp
mov
pop
js
loopew
roll
call
push
popa
jb
pop
sahf
add
mov
sub
jbe
mov
xor
inc
pop
sub
push
lods
jmp
jb
loopne
xchg
mov
fs
fdivl
add
add
or
and
pop
add
imul
shll
movsl
outsl
roll
call
lds
in
push
add
fcmove
add
les
mov
xchg
adc
pop
mov
add
add
push
and
cld
add
push
push
jno
pop
lds
cs
loopne
shlb
lea
mov
push
cmc
xchg
test
xchg
sub
mov
xchg
mov
add
sti
add
leave
pop
and
movsl
add
testb
or
push
dec
rcrb
add
call
add
lcall
addr16
add
dec
aaa
lahf
cmovb
add
add
add
jecxz
lahf
mov
scas
mov
cmc
or
adc
or
fldl
xchg
add
or
add
dec
dec
dec
sbb
sbb
dec
lea
add
mov
xchg
lcall
popa
fnstcw
test
inc
inc
and
mov
xor
inc
and
movsl
xchg
push
stos
add
test
popl
adc
and
sbb
leave
mov
push
push
xchg
xor
pop
xchg
cmp
sbb
lds
add
sar
loopne
cmpsl
leave
in
pushf
lret
lahf
lods
lea
add
pop
mov
jno
push
jl
jmp
jno
ficomps
fildll
add
add
add
add
pop
cwtl
or
in
add
movsb
jne
add
daa
push
imul
es
pushf
lods
imul
sbb
mov
push
rclb
mov
out
aaa
inc
jecxz
and
cmp
cmpsl
sbb
and
jge
in
cmpb
add
outsl
or
test
add
mov
and
loopne
mov
ss
jbe
fisubrs
enter
imul
movsl
outsb
test
add
or
repnz
or
add
mov
scas
add
arpl
inc
bnd
movsb
and
mov
jbe
sub
mov
push
add
loop
nop
mov
lahf
cmp
in
loopne
add
imul
add
cs
pop
xchg
loope
push
add
cmp
mov
ss
je
in
add
xchg
pop
cmc
jnp
pop
out
add
bound
adc
jns
pop
roll
fwait
mov
cmc
es
add
and
icebp
or
and
fadds
xor
test
bound
add
das
jne
sub
lea
js
ljmp
adcb
sub
add
cmp
jmp
add
mov
mov
int
cld
mov
mov
incl
pop
fdiv
add
inc
lcall
and
xchg
or
loop
adc
setae
dec
pusha
cmpsb
pop
ljmp
cmp
jno
or
inc
mov
jae
into
jecxz
jo
sbb
jno
add
sub
rolb
and
fildll
mov
and
faddl
and
add
or
push
lock
mov
add
lea
adc
add
dec
mov
add
pop
and
fstpl
sbb
add
sbb
jecxz
cmp
cltd
adc
or
add
aad
out
and
mov
cli
or
daa
mov
inc
add
aaa
aaa
movb
xchg
gs
mov
movsl
xchg
cs
popa
enter
int3
mull
or
and
lods
test
incl
sub
ss
ja
add
pusha
inc
push
push
orl
cmpsb
lcall
xchg
xor
sti
xchg
out
sub
jns
inc
xchg
aad
loop
and
imul
dec
cltd
push
ljmp
add
mov
add
inc
insb
pop
aam
ficoms
and
jns
add
cmp
push
cltd
in
push
push
addl
mov
sbb
adc
add
jne
and
insb
add
and
jge
lret
faddl
jno
and
and
ljmp
lods
xchg
clc
jae
or
dec
out
add
push
pop
cwtl
and
outsb
out
add
add
sub
bound
in
jecxz
pop
popf
dec
xchg
sub
xorb
pop
xchg
mov
inc
test
push
insb
adc
sub
xlat
add
xchg
daa
pop
add
add
in
push
inc
hlt
inc
mulb
jbe
sub
xchg
popa
pop
pop
add
orl
cltd
shl
pop
xchg
repz
sbb
xchg
ds
stos
cmp
ret
loope
andl
lcall
test
add
add
or
jb
add
dec
pop
pop
push
pop
repz
push
and
mov
and
shl
and
mov
add
in
movsb
push
xchg
shr
sbb
enter
popa
jmp
mov
add
mov
into
pop
cmpsb
mov
sahf
add
ret
lods
add
shlb
inc
lahf
inc
add
add
push
lods
push
dec
add
jb
into
mov
fisubs
lcall
into
pusha
jmp
add
adc
mov
push
inc
jmp
add
add
sub
jbe
dec
xchg
cmp
push
mov
push
cmc
cli
into
xchg
iret
pop
mov
and
push
nop
mov
shl
pop
mov
mov
leave
call
cmpsl
jo,pt
test
xchg
insl
pop
push
mov
xchg
push
js
or
es
sub
ljmp
xchg
subl
adc
out
pop
push
int3
add
test
rcll
jmp
inc
out
in
test
not
ror
movsl
xchg
dec
jne
mov
pop
jno
dec
stc
add
cld
push
cmp
sbb
mov
jnp
cmpsl
or
mov
xchg
add
adcl
jecxz
add
push
mov
add
dec
popf
das
cmpsb
sar
mov
add
add
jmp
dec
fdivrs
lcall
aad
fwait
add
test
push
mov
les
int
inc
pop
adc
add
imul
sahf
stos
mov
scas
in
rcr
add
mov
mov
push
adc
mov
scas
dec
arpl
add
shl
jecxz
es
scas
mov
add
xchg
inc
xor
dec
rcpps
bound
add
loope
roll
adc
ja
mov
xor
mov
or
add
in
push
add
clc
add
cmp
add
sub
jnp
push
sub
cltd
dec
movsl
push
lock
sbb
add
xchg
faddl
pop
cmp
mov
loope
cld
adc
daa
fbstp
outsl
adc
jo
clc
add
mov
sbb
ret
xchg
xchg
bound
add
data16
popa
dec
pushf
mov
mov
and
and
test
rolb
out
das
cwtl
inc
mov
add
sub
or
lret
lea
call
add
add
mov
cmp
adc
lret
dec
jg
pop
lds
add
jecxz
in
mov
shll
enter
stos
fs
pop
js
adc
pushf
mov
ja
inc
add
iret
sti
sbb
subb
mov
fldl
or
mov
fs
pop
xor
out
pop
fimuls
cltd
xor
sbb
cmp
mov
sub
mov
test
aas
std
mov
cwtl
dec
xchg
jo
pop
scas
add
cmpsl
inc
add
stc
cmp
cmpsl
out
mov
mov
data16
arpl
stos
mov
scas
jne
dec
cmp
mov
mov
add
lret
jns
mov
jle
ret
fimull
xor
cltd
add
xchg
xor
xor
outsl
add
add
jne
lahf
idivl
mov
sub
cwtl
roll
adc
hlt
sub
ret
push
and
cmp
fnstcw
ljmp
or
add
push
xchg
imul
adc
jl
cmp
sbb
push
adc
add
jae
mov
add
mov
pusha
inc
add
in
sbb
pop
xlat
incb
mov
mov
clc
lock
cmp
hlt
push
fisubrs
hlt
add
mov
sub
lcall
insl
sbb
adc
mov
in
or
inc
dec
adc
xlat
fldcw
lods
mov
movsl
aad
cmc
cmp
add
add
popf
movsl
jp
lods
es
test
pushf
xor
or
icebp
inc
sbb
mov
sub
cwtl
add
sub
fwait
insb
adc
sub
loope
cli
lcall
scas
in
test
push
add
push
dec
add
repnz
shrl
arpl
add
loopne
add
push
shrb
xchg
loopne
add
cld
jge
add
push
add
int3
testl
mov
inc
dec
fisubl
push
js
mov
or
fildll
jno
and
cmp
and
pop
movb
ss
popa
xor
inc
iret
pushf
cmp
outsl
xchg
popf
out
std
fimull
test
lods
inc
mov
movsb
xchg
lret
add
scas
out
dec
popa
inc
cmpsb
add
in
rcll
inc
jmp
inc
frstor
push
dec
cmc
mov
test
fsts
loop
loopne
dec
cmpb
adc
stos
imul
cmc
out
loop
int
mov
cmp
js
add
mov
mov
mov
rclb
jmp
sbb
xor
dec
add
sbb
mov
enter
mov
repnz
mov
mov
add
cwtl
sbb
leave
push
adc
cmp
add
mov
or
sbb
add
insb
inc
pop
das
add
cmp
cmp
add
xlat
scas
fwait
cld
and
add
jo
int
jp
jecxz
clc
mov
fcompl
push
add
aas
pushf
lods
add
movsl
pusha
fwait
lods
or
mov
add
dec
adc
xchg
pop
xchg
xchg
push
dec
xor
sbb
dec
filds
or
cmpb
add
daa
ljmp
add
add
or
jmp
out
and
cmc
add
out
stc
sub
xchg
sub
add
shl
mov
push
insb
lcall
and
inc
sub
out
add
lock
dec
push
or
in
xchg
lcall
ret
push
dec
mov
jbe
cltd
and
cmp
inc
add
mov
push
cmpsb
and
add
ja
or
jne
test
mov
in
add
xchg
push
add
cmc
xchg
and
add
outsl
mov
dec
nop
lock
testb
aad
xor
cwtl
xor
outsb
add
mov
add
negl
sub
cs
sbb
mov
and
pop
push
add
add
outsb
cmp
lcall
test
lods
lahf
aad
insb
icebp
jl
aam
mov
aam
add
jl
add
dec
test
daa
inc
fisttps
cwtl
add
add
in
orl
iret
add
jle
lock
push
jne
in
add
fs
mov
lea
mov
jecxz
and
cmpsb
scas
iret
fsubl
push
lret
add
movsb
mov
dec
testl
shlb
mov
clc
add
push
in
adc
push
mov
call
push
mov
jb
fs
lods
jbe
pushf
ficoml
ds
push
add
mov
jge
sbb
pop
pushf
mov
loope
mov
test
dec
cmp
ljmp
mov
sahf
cld
cmc
xchg
sbb
push
mov
stos
lods
faddl
adc
pop
fcom
into
je
clc
sbb
add
push
push
pop
and
lods
jp
lock
cli
outsb
jnp
test
xor
add
mov
loope
or
cmpb
sub
nop
mov
add
xchg
push
jae
int3
insl
mov
ja
int3
int3
sahf
lds
cmp
xchg
add
add
imul
mov
add
gs
push
adc
pushf
push
add
adc
out
push
dec
add
xchg
sub
add
mov
movb
cwtl
add
and
int
stos
add
in
mov
pusha
dec
dec
add
push
or
pop
pop
add
shll
jb
insl
and
or
inc
push
iret
out
xchg
jg
mov
mov
add
mov
push
adc
fldcw
loop
stos
fldenv
add
mov
test
pop
and
inc
hlt
pushf
dec
ror
mov
repz
sti
xchg
int
and
mov
lahf
sub
roll
sbb
fdivp
iret
mov
bswap
add
jo
add
mov
cmp
ret
push
sbb
add
es
xchg
cmp
cmc
mov
add
push
add
test
xchg
out
add
xor
push
aad
or
int
xchg
stos
xchg
xor
add
idivb
aam
out
mov
imul
neg
xchg
mov
add
pop
gs
sbb
xchg
das
in
xchg
fldl
adc
sbb
pop
int
out
add
loopne
fbstp
movsb
lods
mull
jns
popf
add
xor
imulb
push
das
xlat
sbb
stos
mov
movsb
and
jle
and
sti
std
nop
pop
mov
push
imul
sbb
push
repnz
js
add
xor
sub
jns
loop
jmp
test
lods
roll
test
add
xchg
cltd
xor
mov
test
add
add
jp
mov
ret
in
ret
data16
lret
mov
pushf
adc
push
rorl
mov
ror
inc
xchg
rorl
pop
push
jo
adc
xchg
dec
fldcw
adc
imul
mov
add
add
sub
sti
push
mov
pop
add
stc
cmpsl
or
xchg
jne
clc
dec
jnp
sti
sarb
push
dec
mov
add
push
fdivp
inc
adc
jmp
sub
lahf
add
and
xchg
arpl
mov
andl
je
mov
ficompl
pop
jl
lret
or
cmpsb
sbb
add
mov
aad
cltd
outsb
jnp
jl
in
add
insb
jmp
mov
inc
call
mov
cwtl
or
add
sbb
jne
or
ss
sub
push
pusha
sbb
mov
add
outsl
cmp
adc
xchg
cmp
add
add
fldt
jb
cli
xor
xchg
push
sub
add
push
add
insl
pop
sbb
sbb
add
add
add
dec
and
xlat
mov
loopne
push
movsb
in
lods
lret
mov
mov
in
hlt
popa
add
mov
cmp
sub
cmpsl
mov
test
xlat
push
add
js
adc
cltd
dec
es
adc
clc
add
shl
jne
stos
cld
xor
addb
aas
lods
and
dec
and
fs
jbe
mov
pop
jae
jge
pop
add
or
add
in
and
into
push
inc
addr16
pop
pop
add
xchg
xchg
mov
pop
in
push
inc
pop
pop
add
add
test
loop
mov
add
inc
mov
push
rolb
cmp
aam
xlat
dec
outsl
or
iret
push
add
xchg
test
fistpll
inc
push
add
mov
adc
add
inc
xor
cmp
shlb
out
lret
outsl
add
das
jecxz
int3
adc
jecxz
mov
push
jnp
xor
mov
ja
stos
jecxz
jge
insl
fldcw
test
lahf
test
cli
hlt
add
imul
xchg
cli
dec
jl
add
xchg
and
add
fwait
enter
call
mov
sbb
stc
sub
loop
ljmp
scas
inc
xchg
mov
jo
jmp
mov
outsl
push
jle
in
mov
sbb
add
sbb
add
or
pop
pop
and
cwtl
sub
out
adc
inc
push
sub
adc
loopne
add
out
out
jmp
lcall
lret
and
mov
test
add
add
cmp
sub
push
scas
cli
stc
cmc
dec
movsb
sbb
mov
add
aad
ret
das
jb
inc
adc
jp
into
clc
cli
ret
ja
out
cmp
out
pop
popf
and
xor
xor
push
imul
scas
jnp
push
add
sbb
and
inc
xor
lahf
add
inc
loope
in
jg
addl
add
adc
sbb
lret
mov
push
dec
mov
dec
enter
pop
jbe
mov
dec
push
push
cmpsl
es
dec
fs
xor
in
inc
jne
xor
loope
inc
add
push
ja
mov
or
cmpsb
mov
outsl
lds
mov
add
mov
es
inc
push
add
push
sarl
outsl
or
inc
sub
pop
push
cwtl
inc
pop
iret
call
push
or
push
inc
push
stc
and
adc
pop
inc
add
fldenv
in
xor
mov
hlt
addl
cltd
roll
xchg
push
jae
adcl
jne
push
and
mov
push
pop
pusha
cld
mov
pop
xchg
jg
xor
mov
lds
cs
lcall
push
stc
sahf
sub
push
adc
xor
jns
insl
imul
pop
and
ficompl
pop
add
add
xor
sahf
ljmp
adc
dec
fs
popf
jbe
cmp
add
shl
hlt
fsubrl
or
dec
jno
fildll
xor
sti
rorb
bnd
mov
cmc
add
or
cmp
add
scas
pop
clc
add
hlt
dec
xlat
mov
push
add
mov
aas
inc
add
mov
int
outsb
jae
idiv
xchg
xchg
xor
sbb
aaa
and
adc
testb
sti
pop
mov
cmp
sbb
jp
add
not
mov
push
ret
addb
scas
add
les
inc
add
add
jge
mov
pop
cli
cmp
pop
pop
pusha
das
nop
scas
mov
sub
stos
mov
sub
fscale
xor
push
dec
mov
shrl
call
xor
fsubl
shrl
fsts
in
add
add
add
sbb
dec
adc
push
mov
lret
mov
cmp
add
or
fisubl
imul
sbb
mov
ds
dec
adc
pop
test
loop
adc
cmp
xchg
roll
add
das
lahf
les
and
int3
in
xor
add
mov
jge
push
add
sbb
jmp
pop
add
bound
daa
cmp
push
rcrb
mov
jae
dec
mov
in
sahf
sub
add
dec
adc
sti
je
jnp
enter
add
xchg
fiaddl
xchg
es
inc
inc
aas
xchg
xchg
add
rolb
int
cmp
ss
bswap
imul
loop
xchg
test
push
xchg
gs
or
pop
int3
add
jg
push
mov
cmpsb
add
add
popf
iret
filds
mov
add
shlb
or
fstp
dec
xchg
pushf
pop
and
pop
addr16
adc
insl
mov
add
and
out
or
xchg
xor
mov
aam
imul
data16
pop
adc
insb
sub
add
or
sbb
mov
jge
jo
je
push
cmp
lret
sbb
xchg
cwtl
adc
cmp
out
out
sub
scas
scas
add
push
xchg
inc
ret
push
jnp
and
in
das
mov
lcall
out
cmpl
icebp
fmul
scas
add
lea
imul
add
fiaddl
sub
mov
dec
ds
jmp
aaa
xchg
dec
das
fs
or
xor
lret
jmp
jge
gs
push
add
or
jne
push
stos
imul
rep
sub
adc
xorps
bound
add
rclb
add
inc
out
inc
sub
je
cmpsb
and
dec
mov
les
gs
lds
mov
mov
ret
dec
push
stc
pusha
pop
xchg
adc
add
enter
jns
or
push
ret
cli
adc
add
adc
into
lahf
js
out
cli
orb
and
shrb
add
and
adc
add
and
push
out
les
sub
xor
add
push
dec
das
pushf
testl
iret
sbbb
push
cmc
inc
rcrl
sub
icebp
inc
mov
add
xor
pop
jb
dec
inc
add
xchg
movsl
sub
cmpsb
iret
inc
mov
in
roll
es
ljmp
pop
add
test
cltd
movsb
test
ja
push
mov
push
lcall
fidivl
and
cwtl
add
add
push
dec
add
xor
aam
imul
add
scas
add
adc
data16
add
push
jnp
sbb
pop
in
add
and
add
dec
cli
push
add
movsb
aad
add
sub
jns
push
add
add
dec
mov
nop
cmpsl
add
mov
pop
add
fdivr
jge
lock
add
stc
insb
scas
mov
dec
jge
dec
push
frstor
adc
push
xor
lret
inc
add
add
push
repz
cli
adc
push
add
mov
push
push
out
out
add
rcrl
test
addl
dec
sbb
xlat
add
add
call
mov
xchg
add
popl
shll
hlt
jmp
xchg
add
shrb
jmp
in
int
xchg
lea
lea
enter
sarb
testl
lret
sub
push
jne
push
add
cs
dec
imul
pushf
cmc
add
mov
add
adc
lea
pop
adc
pop
push
stos
cli
enter
push
fisttpl
cmp
les
fisubrs
dec
add
push
mov
outsl
mov
sub
adc
sub
mov
rcrl
jp
add
pop
mov
add
out
add
add
clc
push
stc
or
shl
jmp
mov
add
pop
popl
popa
add
cmp
dec
test
clc
mov
pop
popa
inc
pusha
adc
push
pop
inc
enter
lods
jnp
add
repz
sub
rorb
mov
es
cmpb
pop
shlb
pop
inc
sub
loop
inc
daa
dec
iret
movsb
stc
cwtl
iret
xor
add
mov
daa
and
leave
mov
add
or
mov
add
movsl
add
add
cmp
fs
add
add
and
test
mov
add
jp
cmp
add
js
mov
cmp
loope
adc
or
xchg
push
cwtl
shrl
lret
test
sub
cmpsl
mov
mov
add
testl
xor
push
adc
cmpsb
sub
test
data16
inc
out
shrl
xor
fldenv
insb
add
or
and
movsb
add
inc
jmp
ret
cld
lahf
and
or
adc
inc
cmpsl
mov
push
pop
data16
dec
hlt
add
out
add
cmpsb
clc
adc
fs
mov
call
jne
push
ss
fdivl
pop
sbb
jl
mov
das
mov
add
ret
jmp
cmp
sti
imul
cmp
add
insb
mov
aaa
add
pop
add
pop
gs
lods
sub
inc
mov
cmpl
fbstp
lds
test
mov
leave
fiadds
jecxz
push
int
sub
data16
or
lea
call
add
ljmp
mov
scas
int3
pop
fwait
jae
out
repnz
cs
push
lret
add
lahf
add
cli
out
sahf
adc
add
mov
mov
adc
lea
lret
fldl
sahf
mov
pop
inc
jno
movsb
imul
jmp
sbbl
shlb
cmp
popa
mov
xchg
add
jle
out
sbb
cmpsl
add
test
loop
cmp
add
sti
sarb
loope
cmp
or
in
data16
add
loop
adc
jg
popa
add
addb
xchg
test
mov
xlat
lds
inc
loopne
xchg
add
xorl
jecxz
add
jmp
pop
mov
adc
cmp
aas
aad
sbb
or
loop
loopne
cmp
lods
ret
add
xor
fisttps
add
add
shlb
mov
sub
sti
leave
add
add
dec
cld
jnp
mov
adc
xchg
cmpsl
enter
mov
outsl
pop
mov
out
lcall
push
mov
pusha
ret
add
add
sub
mov
add
lahf
int3
jb
add
mov
cltd
lock
lods
fcmove
aaa
mov
loope
dec
and
push
pushf
mov
add
or
fiaddl
cmpsb
nop
push
clc
loop
add
jg
and
mov
cmpb
or
add
fwait
add
out
icebp
iret
loopne
add
hlt
movsb
add
add
cmp
fstp
push
add
cli
dec
sub
cmc
stos
add
jecxz
sbb
adc
push
xor
les
xchg
push
sbb
mov
jl
pop
in
jnp
add
pop
imul
add
rorl
jnp
ret
shlb
add
outsl
popf
add
ja
add
dec
dec
dec
lcall
ds
cltd
or
adc
movsl
loop
push
sbb
gs
pop
icebp
insl
scas
loope
xorl
repnz
clc
and
int3
jae
daa
mov
out
out
add
stos
xchg
and
test
ficompl
or
adc
cli
jnp
sub
xchg
inc
add
lret
add
jl
hlt
call
sub
adc
add
aas
mov
jo
mov
lock
fimull
mov
jg
xor
jmp
add
pop
xor
cltd
adc
adc
les
adc
or
lods
shlb
addl
cli
lret
aam
out
xchg
fnstcw
xor
xchg
fbstp
push
xchg
clc
out
mov
pop
adc
xchg
and
movsb
icebp
clc
iret
add
les
cmp
cmc
add
bound
add
enter
scas
aas
cmp
cmp
imul
push
addl
out
imul
popf
aas
inc
jnp
rolb
vcomiss
pop
iret
add
pusha
add
movsl
adc
fs
push
cwtl
add
pop
mov
das
add
or
inc
into
clc
test
aaa
cld
js
mov
test
es
in
push
dec
sbb
sub
push
aaa
shll
xor
shll
inc
add
jne
xchg
out
dec
cld
jnp
cmp
out
adc
mov
imul
arpl
ja
daa
inc
add
add
cwtl
loopne
and
stc
and
add
adc
xchg
add
add
mov
cld
fsubl
jp
jbe
mov
add
push
cmpsb
dec
add
repnz
mov
inc
call
cmp
and
ret
mov
ret
add
sbb
dec
stos
add
out
iret
lods
fxch
add
pusha
add
add
push
or
dec
and
ret
add
add
sbb
mov
xchg
and
sbb
push
sti
add
imul
add
gs
mov
mov
ljmp
or
mov
push
push
movsb
scas
rorl
fisubl
stos
fisttpll
mov
adc
lahf
scas
add
fcomi
or
dec
in
push
add
add
iret
fistps
int
orb
xor
cmp
add
mov
add
sbb
add
jbe
bound
ror
imul
pop
fimuls
lcall
aam
aad
mov
fisubrs
inc
add
inc
add
lds
jnp
xchg
loopne
jle
add
jmp
add
shl
adc
into
ss
cmp
call
sub
or
add
mov
cltd
addl
ss
jg
lea
xor
imul
xchg
nop
add
add
inc
add
jecxz
add
xor
mov
in
hlt
sbb
addl
and
pusha
push
sub
sub
and
add
mov
adcl
iret
xor
pop
dec
add
fsts
cld
cltd
add
mov
add
and
insl
rcrb
popa
jns
int3
xchg
add
push
stos
inc
repnz
mov
push
add
add
fmull
adc
add
sub
ljmp
pusha
add
mov
call
jl
add
lock
inc
out
js
movsb
cmp
cmpsb
mov
stc
cmc
aas
popa
insl
imul
fstps
ds
inc
pusha
hlt
sbb
pop
in
mov
add
add
or
or
shl
aad
dec
imul
xchg
jo
push
mov
filds
outsl
push
js
into
js
sbb
add
ficoms
xor
sub
pop
sar
sub
pop
add
push
xchg
inc
call
xlat
inc
vmovupd
movsb
into
sub
mov
xchg
jle
add
and
cmp
addb
test
out
push
clc
cmc
call
pop
jno
adc
pop
dec
hlt
pop
add
adc
pop
add
fcmovnu
mov
out
int
add
loop
cli
push
loop
imul
sbb
add
jbe
add
push
pop
test
dec
lods
push
ss
add
push
or
lods
xchg
loopne
out
clc
push
and
movsl
mov
mov
lock
nop
dec
fcoml
or
clc
add
push
adc
sbbl
xor
mov
mov
adc
mov
fcomps
add
testb
add
jno
push
loopne
xchg
stos
sub
mov
jae
sub
adc
lahf
pushl
cmp
push
dec
cld
pop
cwtl
das
add
jb
ret
xchg
and
pop
stos
xchg
inc
push
jbe
mov
lcall
aas
scas
dec
add
rolb
pop
roll
dec
fmul
inc
gs
aam
cmpsb
addl
movsl
push
clc
addb
pop
enter
xchg
enter
jge
xchg
fadds
mov
out
add
lds
cmp
mov
add
xchg
ja
jmp
sahf
dec
sbb
ds
mov
sbb
inc
mov
mull
sbb
xchg
add
mov
add
xchg
call
add
sub
lret
push
sbbl
repz
jp
pushf
lds
add
pop
data16
inc
jae
add
mov
aam
pop
push
stos
add
test
cld
and
mov
jge
mov
add
jb
ss
dec
add
test
inc
add
rcrb
movsb
cmp
or
hlt
mov
sahf
sbb
dec
mov
movl
out
pop
add
shl
and
popf
xor
and
add
mov
jb
xlat
repnz
lret
mov
add
cmpsb
sbb
cli
das
icebp
jp
rolb
pop
add
stc
fwait
out
sti
push
pop
int
add
stos
add
pop
xor
out
ret
outsl
ret
shl
jne
out
lods
int3
adc
cmp
cmp
inc
mov
js
add
jbe
fnstenv
dec
add
or
add
or
loop
sti
leave
cs
ror
je
ljmp
jae
mov
push
jb
inc
cli
sbb
out
mov
mov
xor
cmc
inc
mov
mov
or
aaa
push
add
mov
xchg
jb
test
rclb
gs
cmp
call
and
insl
fwait
stc
pop
mov
add
incl
add
dec
add
pop
mov
push
mov
xchg
mov
out
mov
pop
shrl
fsubr
push
aaa
test
addl
sbb
jne
add
add
add
outsl
jbe
dec
stc
mov
jae
add
inc
rcrb
dec
sub
add
add
scas
xchg
mov
addb
scas
add
mov
and
mov
jp
inc
xor
cltd
loope
cli
adc
dec
popf
dec
test
fildll
dec
pusha
pop
push
stc
and
fsub
and
hlt
notb
add
test
out
and
leave
mov
sub
test
pop
sub
rcrl
mov
or
out
sub
mov
and
sbb
insb
ss
scas
jp
data16
jmp
add
add
xchg
push
push
add
fs
cltd
mov
and
out
adc
int3
shl
add
jno
add
loope
cs
rclb
mov
int
iret
into
fmuls
lea
jnp
xor
inc
and
jno
cmpsl
out
and
movsl
outsl
push
jo
mov
fcmovbe
popf
add
fwait
pop
add
xchg
or
mov
std
aas
pop
cmp
jne
xor
or
scas
gs
stc
push
sbb
pop
arpl
fiadds
mov
and
push
aad
mov
in
pop
test
ja
icebp
bound
outsb
xchg
imul
gs
pusha
dec
or
outsb
stos
pop
add
and
jmp
sub
in
and
gs
mov
or
in
sbb
out
clc
movsl
jecxz
fldl
add
out
in
int3
xchg
xor
cmp
out
inc
gs
and
xchg
stos
and
call
iret
nop
xchg
jnp
cmp
add
jmp
inc
mov
inc
add
call
xchg
cmovae
add
push
add
add
add
cld
out
in
mov
or
xor
in
adc
data16
add
ret
popa
jg
mov
shlb
pushl
pop
loop
icebp
cmpsl
negl
xor
cmpsl
cmp
jae
scas
and
in
add
int
pop
sub
fimull
and
jns
pop
rcll
stos
movsb
fldt
fdivrs
mov
mov
enter
mov
push
out
jo
lret
lock
dec
add
push
ret
int3
aam
and
addr16
push
adc
push
jns
adc
cmpsl
je
mov
cli
ret
dec
push
or
xor
into
pop
add
mov
pushf
cmpsb
add
push
push
test
ret
sbb
xchg
iret
dec
cmp
stos
xor
adc
push
jns
add
cld
sbb
jbe
rcr
imul
sti
xor
cmp
bound
lock
mov
xchg
xor
rclb
xchg
add
pop
mov
or
data16
mov
and
sbb
sbb
add
jecxz
add
cmpsl
repz
add
mov
fildl
fildl
pop
insb
mov
lds
add
add
fildll
cmp
cs
into
adc
dec
sub
verr
shll
inc
ss
add
in
fstl
cmp
sub
xor
or
sbb
loope
jl
mov
hlt
inc
aad
sbb
adc
test
lods
and
add
xchg
xchg
and
lcall
dec
loopne
or
sub
jg
insb
cmc
mov
add
dec
out
popa
sbb
adc
push
faddp
xchg
out
dec
in
mov
pop
mov
das
push
shrl
xor
repz
cmc
sbb
add
jne
pop
sbb
imul
fcoms
cmp
add
in
aaa
sub
mov
push
sbb
and
outsl
add
add
sub
adc
rol
adc
mov
out
adc
sub
scas
mov
test
mov
les
mul
push
cli
dec
push
and
jo
stos
loopne
repnz
sub
cwtl
jp
xchg
pop
ljmp
mov
xlat
js
loop
add
pop
push
pushf
cmp
add
dec
push
push
sahf
mov
and
fldcw
in
inc
and
outsl
lods
add
rcl
add
mov
and
dec
mov
es
int3
jne
and
add
int3
mov
les
pop
push
repz
xor
mov
add
mov
sbb
inc
add
cmc
add
aas
add
jle
add
mov
mov
fadds
addb
and
dec
fiadds
int3
in
add
andb
dec
xchg
test
jp
shrb
mov
mov
xchg
in
ret
mov
jmp
push
or
pop
jns
or
sub
add
push
mov
xchg
in
add
xor
sbb
mov
lods
add
into
inc
loope
cmp
xchg
adcb
testl
add
inc
add
add
ja
sti
cmp
cs
and
sub
xor
push
test
push
inc
mov
lea
les
or
sar
sahf
push
inc
sbb
shll
cli
pop
pop
push
push
dec
mov
push
lds
or
lock
add
mov
in
inc
xchg
and
add
add
adcb
add
adc
pop
mov
icebp
lods
imul
inc
sub
dec
pop
icebp
push
daa
mov
mov
xchg
loope
xchg
add
and
mov
sbb
sbb
add
addr16
js
pop
ljmp
sub
les
jp
add
fwait
hlt
lahf
cltd
add
push
test
test
cmp
dec
add
incb
dec
cld
lds
cmpsl
rcrl
popa
lahf
jp
fisttpll
shl
iret
dec
add
push
push
xor
es
adc
arpl
insl
dec
add
cltd
iret
addb
add
leave
bound
push
push
mov
xchg
and
add
hlt
push
add
inc
test
call
sbb
inc
add
out
add
iret
cs
mov
es
add
loopne
pop
cmpsl
nop
cmp
push
add
add
sub
outsl
jmp
add
sbb
in
jae
jns
loopne
sti
daa
sarb
stc
sub
mov
push
popf
mov
daa
in
add
fwait
mov
cmp
loope
xor
xchg
or
adc
mov
pop
sbb
ret
add
aad
mov
int
mov
push
pop
outsl
and
out
or
or
ret
mov
xchg
xor
outsl
add
or
xorl
cwtl
pusha
fcomip
imul
out
cmp
fimull
cli
pop
jno
push
lret
fcoml
xchg
scas
add
add
sub
bound
arpl
lret
jnp
xor
outsl
or
add
add
push
enter
or
fsubrl
jge
shr
xchg
dec
xor
in
test
mov
add
xchg
out
pop
aas
cmp
imulb
cmpsl
dec
scas
lret
loop
add
pop
xchg
push
mov
add
add
add
xchg
sbb
add
ljmp
imul
lods
test
mov
dec
orl
add
cmp
ljmp
mulb
shl
cmp
ret
call
lds
sub
dec
sub
test
add
mov
add
fldcw
and
addl
adc
cmc
sub
dec
xor
dec
out
jg
stc
rorb
out
mov
out
das
jmp
cmp
pusha
cwtl
push
popf
pop
stos
dec
mov
and
dec
add
movsl
dec
add
add
arpl
xor
out
loope
mov
cmc
add
loope
daa
in
out
stc
pop
sbb
xor
scas
mov
pop
insl
es
add
movl
pop
mov
adc
add
lea
stos
int3
dec
movsb
push
sbb
jb
sbb
mov
mov
xchg
fadds
mov
sbb
mov
loopne
loope
and
dec
mov
add
dec
add
cmp
lods
adc
mov
pop
scas
test
add
jnp
ja
cmp
push
lcall
dec
add
pop
inc
fsubr
imul
dec
lcall
add
push
insb
add
js
adc
jmp
xor
loop
mov
mov
mov
jae
xchg
adc
jle
data16
jge
dec
je
mov
pop
jne
xchg
data16
cmc
mov
gs
rolw
jne
mov
sub
lret
add
pusha
rclb
rolb
insl
adc
fwait
pop
ret
cmp
add
lahf
jbe
dec
enter
add
and
mov
testb
lret
add
add
add
cmp
out
xchg
push
ljmp
loop
sbb
enter
jbe
sbb
xor
xor
jmp
pushf
add
jecxz
sbb
add
imul
inc
mov
xchg
add
and
int3
out
pop
xchg
xorl
js
in
addl
jb
jmp
lahf
aaa
lcall
cwtl
test
adc
aas
lea
lods
add
jne
out
test
fst
push
movsl
insl
push
jge
aas
stos
adc
pop
enter
cmpsl
sbb
and
inc
cmpsl
loop
xchg
add
inc
jb
adc
scas
icebp
out
divl
jns
ret
sub
popf
loopne
ljmp
or
nop
fnsave
ret
push
rcll
outsl
out
xor
xlat
mov
jg
sti
add
sub
add
jle
jp
add
add
jae
add
cld
mov
cs
cli
mov
xchg
add
jmp
stc
pop
add
sbb
repz
out
jge
negb
mov
add
pop
daa
sbb
add
mov
push
mov
add
lcall
fsubrl
ret
je
subl
cmpsb
sub
test
and
pop
inc
jle
push
pop
push
stos
sub
add
pop
call
add
add
add
sbb
push
aas
push
push
icebp
movsb
mov
cmpsb
push
sub
loopne
pushf
ds
repnz
push
jl
mov
scas
inc
lahf
push
mov
loopne
stos
sub
mov
ds
loop
dec
test
add
mov
sbb
jns
pop
stc
icebp
mov
hlt
les
mov
daa
add
add
mov
pop
push
add
jl
cmp
add
arpl
inc
mov
xor
add
iret
icebp
push
xlat
pop
add
mov
add
shll
lds
adc
add
adc
add
repz
or
add
sbb
js
bound
jo
cmp
pop
adc
sub
sbb
fstpt
clc
faddp
data16
push
push
cmp
jp
jo
jne
add
ud2
jns
mov
xchg
dec
sub
mov
add
jb
cli
ret
xor
movsb
pop
xchg
cmpsl
pusha
add
aam
ljmp
mov
push
sbb
add
add
add
inc
test
pop
sbb
leave
clc
mov
jge
int3
add
cltd
lock
sbb
jns
shl
adc
aaa
repz
shr
loopne
rol
addr16
add
sub
sbb
aaa
add
aas
inc
or
mov
xchg
fs
and
push
mov
mov
add
and
dec
lods
cmp
inc
sbb
mov
inc
iret
adcb
popf
stc
pop
fcomps
scas
out
insl
and
iret
jb
or
flds
xor
cmp
add
mov
add
xor
sub
push
xchg
mov
or
adc
cmp
push
add
daa
and
sub
insb
dec
pop
mov
out
mov
testb
movsl
dec
outsb
jp
sub
fisubl
cmp
mov
inc
inc
xchg
cmp
cmp
outsl
pop
or
fadds
cwtl
cli
inc
add
int
cmp
paddsw
gs
sub
daa
and
pop
test
call
xor
sti
loop
gs
daa
xchg
add
popa
sub
scas
push
pop
jle
lea
mov
xor
in
scas
out
mov
push
cmp
and
fldl
int
gs
xchg
cs
hlt
add
sbb
add
sarb
adc
in
cltd
out
adc
testl
test
daa
sbb
pop
cmp
movsb
jecxz
inc
mov
cmpsb
cmova
lds
aas
lret
in
xchg
lahf
sbb
jecxz
dec
add
dec
xchg
icebp
lret
movsl
bound
mov
add
pushf
jl
jle
cltd
push
andl
mov
and
jmp
push
ret
pop
and
jp
jp
mov
pop
dec
mov
and
push
fistpl
add
add
dec
shl
push
inc
pop
add
adcl
call
and
test
jp
stos
cmp
add
popf
mov
fiadds
or
ja
add
or
cmp
fildl
jecxz
cwtl
sbb
mov
outsl
in
js
xor
and
fisttps
jp
add
xchg
mov
dec
aad
xabort
dec
add
imul
sub
pop
jbe
or
aas
shrb
jbe
pop
cld
inc
add
jp
add
mov
ret
or
data16
mul
cmp
rorb
sub
add
pop
push
mov
shll
in
dec
aad
fisubs
sti
add
or
push
cwtl
add
cli
pop
cmp
sbb
or
add
add
and
xchg
scas
add
add
rolb
addb
fs
in
adc
pop
push
shll
mov
and
jno
add
pop
std
mov
push
pop
das
add
lret
lods
mov
arpl
inc
mov
test
lock
xchg
bound
movsb
clc
push
mov
pop
lret
sbb
ret
daa
add
sub
add
adc
cmp
add
inc
mov
push
adc
lods
add
ds
lahf
adc
sbb
aas
vmovntps
mov
dec
dec
popf
mov
and
fdivp
dec
push
cmp
push
push
xchg
roll
icebp
cld
push
add
lds
pop
add
push
stos
add
jb
xor
add
xchg
or
pop
movsb
out
mov
xlat
add
cmpsl
test
cwtl
ljmp
add
sti
pop
into
cltd
cmpsl
sbb
push
add
in
mov
adc
ret
pop
cwtl
es
dec
add
bound
and
xor
rorb
in
ret
add
add
add
xor
xor
add
xor
add
add
and
lret
test
mov
add
in
jecxz
xor
scas
or
lahf
lods
arpl
add
je
pushf
mov
mov
mov
or
jl
icebp
mov
add
hlt
mov
pop
pushf
xchg
add
cmp
pop
add
xor
popa
in
or
stc
sub
shl
sbb
inc
aas
and
xchg
or
pop
add
cmp
data16
hlt
xchg
push
movsl
lahf
mov
mov
jmp
fmul
rcrl
cmpb
jmp
stos
cmpsb
add
mov
add
sub
pop
adc
and
cli
movsb
leave
dec
push
inc
mov
jne
or
or
enter
mov
in
vphaddbq
inc
or
ret
sub
mov
jb
add
loop
enter
adc
ror
add
rolb
add
dec
movsl
add
mov
xor
jle
clc
gs
jno
jge
add
leave
mov
bound
add
mov
jmp
mov
and
iret
dec
das
cs
mov
add
cmp
shlb
dec
fbstp
je
repz
test
mov
add
fbld
add
addb
fcompl
add
xchg
leave
cli
add
xor
push
add
mov
mov
push
gs
sbb
popa
fldl
add
movsb
mov
and
add
xor
rcll
fildl
jae
adc
jl
sbb
cltd
adc
xor
arpl
inc
fsubl
lea
add
imul
outsl
dec
mov
js
stos
adc
add
cmc
mov
inc
and
loope
sbb
dec
out
mov
dec
repz
addr16
add
and
mov
jo
cmpl
mov
fs
add
imul
sub
jge
jo
aaa
dec
les
enter
add
sbb
mov
add
sbb
scas
pop
and
jbe
jne
and
inc
cli
jp
xchg
int3
cmc
add
push
add
fidivrl
adc
mov
push
hlt
pushf
xchg
cmp
inc
aad
pop
mov
mov
add
pop
icebp
mov
out
sarl
sbb
jno
inc
inc
add
xor
mov
adc
add
gs
dec
push
and
jb
dec
fbld
ljmp
leave
push
cmp
leave
adc
adc
jg
add
lea
add
push
flds
add
jmp
add
leave
or
xor
sub
or
xchg
sbb
lods
and
add
mov
test
sbb
mov
jno
insb
ss
iret
clc
loop
sub
add
ja
mov
mov
add
push
jne
sti
pushf
mov
xor
add
jecxz
ror
mov
hlt
fsubl
add
and
xor
vmread
xchg
ret
mov
insl
data16
add
mov
xchg
out
pop
or
into
lret
pop
or
mov
mov
imul
scas
add
mov
jbe
and
shlb
sahf
xchg
mov
push
sbb
insb
jmp
or
add
add
push
inc
push
add
loope
add
dec
add
cmp
pop
in
and
cmpsb
insl
sub
test
push
cmp
push
jmp
out
js
sbb
xchg
cmp
insl
nop
add
adc
push
cld
add
outsb
add
pop
incl
xchg
sub
sub
sub
fstl
mov
in
add
sub
push
lock
in
ret
jg
inc
add
add
add
add
add
icebp
fldcw
xor
cmp
add
xchg
jns
mov
shl
push
jnp
inc
popf
pop
aaa
dec
pop
test
sbb
add
push
test
mov
ja
xorb
mov
adc
add
sbb
sub
jae
pop
pop
aas
add
out
lods
pushf
add
add
add
popa
jae
push
fmul
jo
xchg
adc
js
mov
pusha
add
xchg
lock
jno
jl
in
push
mov
insl
repz
push
add
clc
popa
mov
ss
lret
mov
in
or
rolb
push
lcall
add
mov
in
and
add
outsl
dec
dec
pop
std
add
fwait
mov
jg
data16
loop
bound
push
pop
mov
add
mov
sbb
mov
je
dec
adc
mov
jb
divl
loopne
sub
sbb
push
push
mov
sbb
xor
pop
add
add
push
adc
pop
add
push
into
add
mov
add
lcall
clc
ss
cmp
pop
add
popa
push
sub
into
xor
test
les
leave
mov
lldt
in
leave
outsb
add
lahf
std
aas
add
add
clc
add
test
add
dec
pushf
arpl
add
shll
add
sbb
das
mov
push
add
cmp
sbb
cmp
add
lock
in
and
cmp
dec
lret
xor
lcall
push
daa
lcall
xorb
jno
cmp
jae
xor
mov
xchg
dec
push
jne
sbb
jbe
scas
pop
inc
testl
test
add
mov
fistpll
lea
sbbb
sbb
xchg
add
sbbl
push
test
sbb
add
add
sub
xchg
add
add
mov
int
add
loope
add
call
sar
andl
adc
mov
sub
push
lret
xchg
ds
adc
in
push
cmp
inc
data16
aam
sahf
std
mov
dec
cmc
or
loopne
push
mov
push
lahf
movsb
jbe
popf
mov
xchg
popl
enter
loop
jo
cwtl
arpl
aam
dec
add
push
mov
stc
add
xchg
add
xor
icebp
ljmp
jnp
rolb
faddl
popa
jnp
roll
mov
aam
mov
je
sbb
inc
sub
mov
aam
mov
nop
add
inc
inc
mov
xchg
enter
and
add
cmpsl
or
add
sub
sub
imul
jl
les
push
fimuls
mov
lods
sub
push
jo
ret
clc
testb
cmp
xchg
cmp
inc
mov
fs
pop
in
cmp
push
out
add
pop
hlt
cli
add
add
pop
xor
outsl
mov
add
xchg
lock
xor
inc
jo
add
arpl
cmpsl
add
jecxz
addr16
push
cmp
mov
cmp
jae
xchg
rcll
addb
in
xchg
pop
inc
sub
jb
fwait
popa
cmp
adc
or
mov
jmp
push
pop
xchg
jg
pop
lock
test
ljmp
loop
add
add
ds
mov
in
jge
jp
jnp
insl
sub
cmpsl
lods
sub
add
add
xor
outsl
cmpl
je
xchg
incl
popa
add
fwait
aam
shl
mov
cmp
aam
jmp
push
cld
xor
adc
add
cmp
add
add
addr16
and
pop
push
xchg
jecxz
push
xchg
dec
jl
scas
int3
movsb
roll
xchg
flds
xchg
out
in
push
es
push
add
pop
rcll
and
movsb
int
xchg
cs
daa
sub
add
sub
rcrl
and
jno
pmaxsw
add
add
leave
sub
daa
or
add
add
jns
in
movsl
push
adc
sub
lea
add
add
fsubrs
aaa
push
mov
das
push
test
imul
std
xlat
leave
add
lahf
add
pop
xor
mov
incb
mov
rcrl
push
cmp
clc
cs
sahf
or
ds
mov
mov
add
fildl
adc
push
push
xor
lds
add
les
push
add
or
jg
test
jge
mov
xchg
push
mov
add
sub
ja
push
and
add
mov
pop
aad
push
xor
std
cs
push
lcall
cmc
ret
shlb
cld
add
xchg
lret
cmp
fisubrl
add
add
add
ds
xchg
test
inc
ljmp
add
adc
mov
rorl
jmp
aam
mov
roll
inc
and
add
jecxz
sbb
shl
add
xchg
add
scas
dec
pushf
xchg
lock
adcl
in
out
mov
mov
mov
mov
xlat
mov
sub
flds
push
insb
mov
mov
aam
pop
cmpsb
in
add
push
call
rorb
cmp
dec
add
and
and
test
iret
popa
push
ret
jae
out
add
dec
aad
pop
pop
cs
dec
fcoml
mov
add
aad
fstp
sahf
andb
insl
and
xchg
xchg
dec
popa
mov
mov
and
jo
outsl
out
push
add
pop
mov
sti
xor
xlat
sbb
xchg
sti
pop
add
cld
enter
mov
in
mov
add
pop
mov
mov
outsb
pop
lock
dec
out
testl
mov
scas
push
mov
xor
out
push
mov
add
push
add
xchg
mov
loopne
mov
sub
add
add
sub
aas
add
in
add
sahf
add
loopne
add
adc
lock
push
test
mov
jmp
ds
out
add
cld
imul
add
dec
cmpl
shlb
add
mov
mov
fidivrl
pop
or
pop
sbb
sub
add
push
push
sub
fcomip
xrelease
xor
mov
add
cmp
stos
arpl
cmc
and
lds
cmpsb
pop
add
jo
ljmp
iret
or
and
push
daa
in
add
mov
mov
jns
ror
cld
mov
or
jp
mov
jne
push
enter
dec
insb
cli
add
fucom
sbbl
pop
and
pop
push
pop
add
out
loopne
mov
sbb
addl
adcb
xor
repnz
mov
jmp
pop
std
dec
inc
imul
add
fsubrl
roll
fiadds
enter
jne
ror
add
push
adc
mov
push
xchg
dec
and
push
push
pop
pop
push
xor
outsb
mov
fiaddl
xchg
rol
in
and
sub
sub
nop
fstpl
add
aaa
aam
fwait
pop
cwtl
adc
push
out
and
sub
js
xchg
dec
sub
add
shrb
lea
sub
leave
imul
xor
push
mov
outsb
ljmp
popa
xor
jmp
cmpsl
sti
add
xor
inc
icebp
mov
add
aam
lret
out
add
pop
pushf
push
add
cmc
push
stos
dec
sub
je
add
add
imul
add
adc
cmp
push
clc
sub
loope
dec
add
add
pop
fdivrs
xchg
inc
add
lret
add
subb
cltd
or
js
cs
sti
jne
add
popa
mov
movl
outsb
dec
dec
add
add
add
jmp
into
gs
add
push
xchg
or
pop
es
mov
pop
add
add
std
jnp
roll
mov
test
test
fmul
add
mov
add
add
shrl
push
pop
ret
xchg
mov
sbb
mov
xor
leave
insb
sbb
adc
cli
mov
test
sub
cs
mov
shll
imul
inc
ss
mov
xor
cmpsb
pusha
add
push
popa
in
add
push
add
cmp
lcall
add
adc
pop
mov
mov
add
sub
ret
adc
sarl
in
cmpsl
add
mov
test
jl
add
jecxz
cmp
sahf
push
adc
mov
add
sub
adc
adcb
sti
lods
repnz
xchg
test
add
lds
mov
lcall
add
repnz
mov
in
jo
mov
aam
outsl
cmp
push
cwtl
push
and
xlat
in
repz
out
add
inc
push
jb
add
ss
inc
add
lods
xchg
add
push
sbb
into
addb
pop
pop
jl
lock
or
fists
lret
mov
lea
adc
int
cmp
add
sub
addb
scas
jo
jecxz
enter
push
test
nop
adcb
test
jle
out
mov
add
jge
jge
imul
pop
mov
imul
or
pushl
add
mov
imul
fsubs
movsb
cmp
testl
mov
adc
cwtl
add
and
fmuls
shlb
incb
add
pop
dec
push
mov
dec
pop
add
aad
jg
sub
jmp
add
push
test
in
add
mov
pushf
push
fimull
movb
push
jecxz
add
xor
sub
data16
mov
aas
add
dec
mov
xchg
adc
dec
mov
mov
mov
xchg
fcmovne
lods
push
jge
lahf
stos
inc
sti
add
out
leave
lods
add
push
xchg
movsl
int
xchg
sub
andl
lods
and
lret
repnz
in
aas
pusha
pop
push
xchg
out
mov
push
rcll
mov
lcall
cmpsb
loopne
pop
and
mov
push
inc
imul
adc
dec
xchg
add
add
push
rcrb
jge
mov
push
mov
jno
push
sub
add
enter
add
pop
cmpsl
icebp
in
sub
adc
cmp
cmp
jg
xor
pushl
add
ds
pop
and
xor
lods
cmp
mov
inc
sbb
inc
dec
mov
sbb
pop
test
inc
cltd
add
push
rorl
cwtl
aam
add
outsl
out
or
xchg
sbb
pop
or
push
or
test
adcl
mov
mov
je
gs
add
or
add
push
xor
test
add
xor
xchg
xor
pop
pop
lea
inc
lahf
mov
sar
test
sub
pop
loopne
stos
push
lds
test
shll
stc
mov
and
xchg
out
inc
leave
pop
jmp
xchg
dec
sar
sbb
imulb
out
dec
jmp
inc
lcall
loop
jae
and
push
sub
fstpt
call
add
negb
and
lahf
test
add
pop
addr16
imul
add
hlt
jnp
idiv
jg
flds
inc
fldcw
stos
sbb
rcl
or
add
jbe
add
fidivl
and
add
push
arpl
jp
in
mov
sahf
adc
aaa
push
adc
inc
pop
xchg
pop
gs
jecxz
mov
add
icebp
ss
scas
pop
nop
mov
testl
xor
dec
add
loope
loopne
jp
push
sbb
adc
add
mov
outsb
in
sub
jecxz
test
std
aas
jp
imul
dec
add
add
pop
sbb
sbb
pop
lods
popa
mov
mov
rcrl
inc
push
push
inc
dec
cmpl
add
in
sub
bound
test
add
jo
decl
sub
xor
cmp
cmp
lds
in
push
cmp
subl
jge
jp
mov
mov
inc
dec
lock
pop
mov
or
mov
xchg
add
xlat
into
andl
inc
sahf
mov
mov
push
adc
add
pop
dec
sub
add
mov
ret
insl
mov
pop
jo
or
dec
xchg
nop
out
inc
adc
mov
repz
add
scas
sub
cld
dec
add
cmc
pop
negb
fucomip
push
jl
push
in
rolb
add
add
mov
dec
add
xchg
push
adc
gs
scas
out
push
jns
and
ret
xchg
das
pusha
pop
sub
jl
ljmp
scas
mov
push
jns
and
lret
testl
lcall
push
mov
jne
xor
add
shl
add
push
xor
mov
int3
adc
sarb
add
addl
flds
pop
add
jg
inc
das
fistpl
lret
icebp
sbb
insb
out
push
icebp
in
jae
xor
sbb
mov
js
mulb
xor
inc
pop
ret
out
test
mov
jge
xor
mov
cmp
out
int3
mov
mov
lods
add
shr
add
popa
add
ds
addr16
pop
out
add
or
xor
cmc
jecxz
or
adcl
adc
cltd
movsl
int3
popa
add
sub
cld
pushf
mov
add
add
sbb
fldl
lods
add
pop
sti
add
ret
jbe
lods
sahf
outsb
push
cmp
add
lods
dec
or
in
sbbl
push
push
hlt
adc
or
push
pop
int3
sub
mov
neg
mov
mov
push
add
aam
pop
dec
and
adc
call
mov
stos
push
insb
add
xor
pop
iret
pop
xlat
popf
jno
in
mov
outsb
add
mov
js
inc
push
sub
adc
lahf
addb
adc
add
add
notb
inc
jb
xor
incl
xor
inc
xor
mov
int
sub
jb
jno
mov
xlat
cmpsb
ja
add
nop
add
insb
mov
bound
xchg
mov
mov
and
inc
xchg
shll
bound
add
ret
imul
inc
js
inc
cmp
leave
or
jbe
xor
imul
push
lret
aam
pusha
lahf
add
sbb
mov
shll
filds
adc
gs
fxch
iret
add
cwtl
mov
jg
adc
push
inc
adc
sub
and
push
or
xchg
fidivrs
je
lods
outsb
sub
mov
sbb
pop
sub
add
stc
or
sbb
lcall
mov
add
add
fidivl
add
sarl
add
push
mov
or
add
inc
and
push
mov
into
add
xchg
inc
mulb
hlt
sar
mov
sahf
jg
test
out
jnp
dec
push
sti
mov
add
lcall
fpatan
incl
ljmp
iret
or
stc
and
fcos
mov
icebp
cmpsb
pop
aam
jl
push
add
std
sub
or
int
add
mov
add
clc
pop
jle
bound
fwait
roll
xor
mov
jmp
add
jecxz
xor
mov
mov
sub
jb
rcr
lcall
cmpsb
ret
cmp
mov
pop
jae
xchg
std
imul
pop
cmpsl
add
sahf
add
and
ret
sbb
mov
cmp
cmp
ja
add
test
iret
cmp
mov
out
imul
test
ret
add
pusha
push
lds
inc
add
add
add
cli
cmpsb
jmp
cmp
sub
mov
mov
add
sbb
cmp
push
inc
jecxz
inc
adc
sub
cmp
outsb
stos
pop
fnstenv
jnp
arpl
imul
sbb
popf
decb
mov
add
bound
into
mov
adc
mov
xchg
mov
inc
sti
xchg
pop
int
sti
jle
push
add
add
test
test
push
das
mov
add
add
leave
sbb
add
pop
jge
pop
aad
into
mov
aad
push
cmpsl
cwtl
sub
jo
pop
je
repz
add
lret
arpl
pop
scas
ss
add
add
imul
in
or
dec
or
and
ja
xorl
mov
sbb
and
adc
flds
dec
cmp
adc
add
rorl
out
add
pop
jne
subl
xlat
or
xor
arpl
pusha
addl
or
in
xor
bound
sub
mov
imul
std
jbe
sbb
add
fadds
push
push
mov
fiaddl
and
mov
repz
fildll
fcmovne
pop
push
push
outsl
inc
add
cld
add
add
pop
jle
add
bound
mov
int
lcall
pop
or
lods
xorps
add
mov
mov
push
btc
fdivs
orl
fadd
xchg
out
jne
test
pop
add
in
jl
lea
adc
push
add
dec
inc
add
or
in
add
ds
jnp
cmp
add
test
add
adc
jne
mov
outsl
movb
jl
mov
jmp
add
push
in
ss
or
inc
sbb
adc
push
jle
inc
mov
out
mov
inc
pop
add
hlt
clc
addr16
fadds
sti
cmp
loope
push
gs
pop
mov
iret
mov
icebp
adc
push
add
pop
add
xchg
bound
mov
lock
add
jno
jl
or
add
inc
adc
pop
lods
push
and
add
jne
sarl
cmp
jg
jl
add
repnz
mov
add
add
add
out
add
into
xchg
mov
jns
mov
add
push
lods
int
fldcw
pop
pop
push
dec
lahf
lcall
push
inc
rcrl
mov
ret
xor
pop
pushf
add
idivl
je
inc
add
out
and
cmpsb
adc
mov
sub
add
cs
call
pop
and
adcb
add
or
mov
xor
add
add
mov
xchg
lahf
add
shlb
xor
ljmp
test
es
les
jae
add
add
pop
iret
pop
je
pop
push
cli
test
xchg
sar
enter
iret
inc
and
repnz
or
add
xchg
and
cmp
add
jl
xorb
jecxz
mov
rol
sub
add
sub
jg
in
adc
adc
add
push
xorl
add
push
mov
dec
mov
mov
xor
in
mov
loop
mov
inc
nop
imul
addb
add
jmp
lret
xchg
add
loop
cmpsb
inc
mov
xor
rorl
insl
movsb
lahf
xor
mov
stos
jnp
push
arpl
iret
jbe
pushf
cmp
enter
lods
fisubl
adc
lahf
and
adc
scas
sub
fiaddl
test
add
jns
clc
mov
mov
mov
or
add
pop
imulb
mov
mov
push
mov
test
add
push
pop
dec
mov
jo
pop
add
inc
pushf
inc
inc
mov
add
or
fsubrs
das
push
mov
rolb
int3
jb
mov
in
in
in
cmp
subl
add
inc
test
xor
test
insb
mov
nop
dec
mov
dec
and
adc
imul
jge
adc
sbb
sbb
add
lahf
mov
int
imul
push
icebp
fisttps
cs
jae
in
jno
pusha
push
add
push
add
lods
call
es
pop
mov
push
test
add
out
xchg
es
xlat
xor
js
aad
add
add
push
cmp
shrb
stos
or
push
les
repnz
loope
inc
and
xchg
xor
add
jl
push
cmp
cwtl
pop
and
loopne
add
add
cmp
inc
jbe
xchg
add
pop
and
sbb
das
insl
add
out
mov
add
data16
cmp
add
mov
push
lods
sbb
mov
add
xchg
mov
add
or
sub
add
pop
cmc
sti
fistl
mov
rcrl
outsb
mov
adc
push
mov
imul
in
pop
call
aaa
xchg
and
aaa
add
stos
cmp
jb
push
fnsave
sbb
addl
or
lods
pop
ss
add
inc
test
mov
xchg
jbe
aad
jl
mov
in
jmp
add
gs
add
neg
cmp
mov
loopne
add
adc
rcrb
adc
inc
std
mov
rolb
divl
rdmsr
adc
cli
add
push
insb
push
leave
mov
mov
inc
lahf
icebp
mov
xchg
sti
mov
push
pop
jb
sarl
into
test
mov
mov
mov
add
stc
jnp
in
daa
add
sti
and
lods
add
stc
xchg
stos
cmpsb
add
std
inc
add
inc
pop
sbb
stos
je
sti
mov
xchg
add
stc
sbb
jns
add
push
and
sbb
add
ret
mov
pop
xor
xor
call
xchg
in
js
and
scas
inc
sarb
push
cmp
add
or
mov
add
pop
add
out
and
inc
or
jnp
cmp
outsb
int
inc
sbb
and
or
enter
add
xchg
popa
je
push
cmpsl
ja
push
sub
int
inc
lods
mov
adc
clc
xchg
outsl
sbbl
pop
xlat
dec
inc
and
xchg
add
push
jnp
push
aas
ret
cmp
fidivrl
les
add
call
add
lea
loope
out
sbb
or
shll
into
pop
jle
rsqrtps
das
push
in
add
mov
or
add
lea
mov
mov
insl
adc
imull
add
clc
adc
jns
test
sub
pop
add
dec
jmp
mov
pop
js
xor
sar
lret
das
add
mov
add
lods
add
cmpsb
fldl2e
push
sarl
jle
es
cltd
test
jnp
arpl
pop
add
inc
cmp
aas
jne
int
out
ljmp
and
add
cmp
mov
or
cs
in
and
repz
in
or
sub
jns
les
sbb
std
add
mov
sbb
dec
pushf
push
xchg
sub
scas
out
fstl
add
jl
add
das
add
add
add
sbb
jae
mov
sti
adc
cmp
ljmp
cmpsb
adc
and
es
jg
int3
mov
push
stc
sbb
push
imul
xchg
lcall
sub
sub
add
int
fistps
sub
inc
mov
and
sbb
fs
ds
movsb
jecxz
inc
cmc
push
jmp
test
mov
cmp
or
fdivl
mov
add
pop
pop
or
sbb
and
jnp
cs
popf
push
shll
inc
loop
add
notb
pop
cmp
xchg
xchg
mov
dec
addr16
jl
subl
insb
add
add
sbb
add
add
add
add
fisubrs
dec
rolb
jp
hlt
sub
jae
adc
mov
cmp
mov
push
dec
test
lret
jmp
cltd
cmp
inc
jge
stos
ret
aas
lds
stos
mov
flds
inc
in
in
shlb
fiadds
jge
cmp
mov
js
push
in
xchg
sub
iret
outsl
das
icebp
mov
add
or
lock
adc
add
fcom
cmp
adc
insl
imul
loop
push
cmp
fistl
cmp
and
fisttpl
jl
in
mov
call
pop
mov
add
testl
xor
add
sub
xchg
jnp
or
stos
mov
cs
jne
add
ja
sub
adc
dec
dec
inc
pop
inc
xchg
dec
mov
xchg
add
cmp
out
mov
filds
xchg
xchg
lcall
add
popa
sub
add
xchg
push
leave
jo
adc
inc
add
and
lock
add
inc
jmp
sub
add
or
add
cmpsb
test
mov
outsb
sbb
sub
gs
stc
dec
outsb
popf
add
xor
add
stc
jmp
in
pop
sub
in
punpckhwd
cmpsl
imul
call
push
xor
add
push
jmp
scas
and
add
xchg
mov
lret
xor
bound
push
jns
add
jmp
int3
and
shr
imul
inc
rolb
pop
add
jbe
popa
xlat
add
add
data16
bound
ss
outsb
idivl
xor
sbb
hlt
cmp
ljmp
add
testw
ret
testl
mov
add
add
popf
dec
repz
dec
add
sbb
push
pop
pop
inc
lcall
jno
mov
mov
pop
int3
xchg
jl
ret
xor
xor
dec
inc
pop
push
imul
add
mov
int3
add
dec
mov
cmp
inc
fsubrs
and
sub
data16
mov
cmp
cmp
add
movsl
ds
mov
gs
jne
fisttps
mov
cs
push
jmp
push
lcall
in
add
sbb
dec
add
ds
testl
add
push
addr16
add
ficompl
sarb
add
add
xchg
rcll
push
mov
lret
stc
add
push
adc
lds
bound
pop
sub
scas
cmp
dec
rol
sub
jae
fcomp
lods
jl
int3
add
lds
jl
stc
add
cmp
xchg
push
adc
add
inc
adc
test
mov
add
push
inc
ljmp
jo
xor
clc
in
fistpl
add
mov
xchg
xchg
add
test
fiadds
cmp
and
aam
and
push
cmp
xchg
mov
pop
inc
aaa
shlb
push
lret
mov
cmpsb
add
cmp
dec
sub
or
cmc
xchg
add
outsl
cmp
inc
movsl
lods
call
mov
aam
daa
mov
add
pop
pop
mov
in
add
add
out
sub
mov
lock
inc
xor
pusha
scas
or
xlat
popl
test
subb
mov
sbb
test
adc
add
sbb
cld
and
mov
pop
inc
ss
pushf
inc
add
xchg
cmp
mov
xchg
insl
jae
push
dec
in
add
ss
jnp
xchg
mov
jnp
add
add
add
fisubl
hlt
loope
dec
adc
lret
sub
mov
sbb
and
std
dec
in
inc
add
add
out
lret
loope
add
sbb
ficompl
and
inc
and
clc
fldl
int
std
add
lock
add
jmp
fstl
test
inc
add
cmp
mov
push
fstpl
xchg
mov
or
jp
pop
add
fwait
cmc
add
cli
push
add
int3
fisubl
leave
stos
popa
inc
adc
inc
and
scas
cmp
add
pop
cmpsl
and
addr16
push
out
fildll
test
sbb
jno
out
imulb
mov
jns
add
add
cmp
aas
stos
imul
outsl
push
cmp
fdivl
sub
add
bound
addb
loop
cs
insl
jl
add
loop
lret
mov
mov
xchg
cmp
frstor
xor
cwtl
adc
hlt
imul
jp
and
inc
pop
jg
or
daa
cmp
adc
dec
xchg
cltd
daa
stos
add
ds
jmp
scas
pop
jmp
in
dec
mov
xor
or
sub
mov
jnp
out
incb
pop
add
dec
and
mov
dec
rcll
aam
rcrl
add
stos
pop
mov
ret
pop
cmovs
and
lods
in
jp
mov
mov
adc
stos
add
roll
add
lcall
dec
pushf
icebp
mov
add
out
add
sbb
sub
dec
add
jns
in
xchg
inc
jo
add
or
in
dec
sub
mov
mov
mov
xor
into
test
add
add
ds
sbb
cmc
add
and
sub
fiadds
loop
mov
pop
add
in
fwait
pop
inc
cmp
insb
insl
or
icebp
out
mov
add
xchg
xor
ret
add
cwtl
add
or
xchg
imul
outsb
nop
pop
cs
mov
aaa
mov
push
subb
std
add
xor
pop
stos
add
mov
adc
xchg
sub
arpl
sub
jmp
ja
add
je
add
add
or
add
xor
sbb
add
add
add
filds
push
lret
add
stc
outsb
dec
mov
and
cli
dec
ss
sub
or
or
push
add
shlb
cltd
shll
add
add
jmp
repz
cmp
xchg
cmp
xlat
add
in
mov
loope
loop
jge
dec
cwtl
test
xor
adcl
sub
xchg
add
cmp
add
cmp
notl
in
sbb
xor
xchg
pushf
dec
movsb
cmp
sub
mov
add
adc
je
cmp
imul
add
xchg
push
cmp
repz
lret
add
into
test
jb
bound
cwtl
je
push
lcall
add
mov
xchg
mov
test
mov
in
test
cmp
add
add
rorb
cmp
push
sbb
lods
add
add
xor
push
adc
add
loope
jmp
in
fbld
dec
cwtl
mov
add
arpl
into
push
fldl
xchg
dec
mov
fs
sbb
push
add
mov
xor
xor
imul
pop
insb
inc
add
fists
in
or
movsl
bound
dec
mov
cmp
dec
pop
fisttps
into
outsb
cmc
add
inc
das
cmpsl
mov
popl
push
cli
cmp
pop
mov
jnp
jle
adc
add
movsl
dec
push
pushw
in
push
pop
and
jne
aaa
cli
cli
scas
sti
mull
add
mov
dec
inc
push
cltd
ljmp
add
sbb
ror
aad
lret
cli
mov
mov
divb
push
imul
aad
inc
int
jle
add
add
mov
add
xchg
lea
outsl
push
dec
mov
pop
inc
add
shll
add
sub
push
dec
outsl
stos
pop
mov
add
loopne
test
sbb
push
jg
and
push
fistl
jge
inc
mov
fisttpll
add
lods
test
pop
rolb
das
add
leave
add
fsubrl
add
sbb
fs
lds
xchg
adc
xchg
es
adc
rcr
sub
pop
mov
sbb
mov
adc
fnstsw
xchg
rcrl
mov
push
add
fistps
sar
in
icebp
in
cmp
add
jge
stc
sub
stos
add
mov
ljmp
dec
shrb
ret
adc
js
mov
and
add
and
inc
add
or
push
fdivp
inc
repz
add
jnp
add
mov
push
dec
loop
or
cmp
insb
mov
xor
pop
add
insb
mov
xchg
mov
lcall
add
aad
mov
inc
imul
sbb
jb
adc
add
xchg
sbb
mov
es
fisubs
jmp
dec
dec
fidivrl
or
jae
cmpsl
or
or
xor
cmp
fsubrs
repnz
scas
icebp
sbb
nop
arpl
es
or
sbbb
xchg
add
jnp
cltd
jno
or
adc
lea
xor
decl
sti
arpl
dec
jp
aad
aam
adcb
movl
add
cmc
loopne
push
cmp
inc
xlat
add
xchg
push
mov
dec
inc
andl
jmp
std
add
int3
xchg
push
xor
and
and
mov
mov
sub
inc
pop
es
cmp
add
add
mull
xlat
test
fwait
add
lahf
push
ret
lcall
pop
enter
arpl
jae
jae
sbb
lret
mov
xchg
cmp
stos
mov
insl
add
xchg
fsubs
and
fwait
out
and
sbb
mov
jno
movsb
mov
add
jo
jp
add
cld
jbe
iret
aaa
dec
sbb
mov
push
add
stc
push
jg
lds
sbb
add
lods
add
mov
sub
int3
add
add
sbb
adc
out
sarb
mov
xor
mov
sbb
mov
jb
push
add
push
and
push
lods
js
inc
add
mov
add
mov
icebp
loop
cwtl
pushf
shll
leave
add
add
cmpsb
cmp
jnp
fisubl
iret
cmc
cmp
sbb
add
mov
fidivrs
add
aam
add
test
jg
int3
lahf
push
pop
imul
jae
add
push
mov
nop
aas
add
cmp
sahf
jmp
adc
sub
dec
jge
fildl
scas
add
dec
sahf
inc
mov
add
mov
sahf
pop
xchg
nop
mov
cmp
add
add
aas
fs
xchg
scas
sub
jb
add
add
int
add
bound
lea
mov
xchg
fmull
dec
fistps
unpckhps
add
mov
xchg
push
mov
pop
jnp
add
mov
cmpsb
lods
mov
pushf
xor
dec
xor
mov
mov
push
push
jl
insb
add
add
mov
mov
insb
movsl
mov
add
jns
loope
push
xchg
mov
hlt
icebp
mov
xchg
sbb
mov
pop
repnz
inc
arpl
les
ljmp
and
sub
jne
jae,pn
pop
xchg
add
int3
imul
lds
lds
lds
mov
setb
pop
add
jne
addr16
mov
mov
stc
cmp
push
std
sub
or
inc
addl
xor
test
add
fbstp
ficomps
stos
add
popf
push
cmpsb
and
je
push
mov
mov
mov
ret
nop
sbb
add
push
push
cmc
add
fwait
roll
data16
loop
add
jp
add
mov
sbb
adc
iret
movsb
fistpl
mov
outsl
das
dec
inc
add
or
addr16
inc
sbb
hlt
fmull
dec
xor
push
mov
stos
test
mov
cltd
jns
mov
pusha
pop
adc
sarb
je
jl
mov
testl
jmp
int
add
test
lods
cmp
lahf
std
xchg
shrb
daa
mov
jg
or
push
push
ljmp
aam
push
or
add
sbb
or
cmpsl
mov
push
int
div
cwtl
jae
arpl
add
and
icebp
push
mov
mov
stc
mov
mov
cmpl
mov
jmp
and
andl
pop
add
cmp
insb
in
ftst
jnp
cmp
xchg
lods
push
ret
or
cwtl
adc
add
stc
mov
add
push
sub
popf
add
add
cmpsb
testl
dec
cmp
xor
pop
push
add
jne
jp
addb
xchg
add
or
shrb
repnz
mov
ljmp
push
jmp
adc
and
sbb
in
and
pop
lods
lods
jmp
add
das
in
mov
arpl
stos
mull
orl
fldl
rcr
mov
adc
mov
mov
stc
gs
mov
pop
cli
mov
add
xor
out
lea
jne
in
push
add
sahf
dec
push
add
popf
add
stos
sub
pop
js
cmp
pop
push
add
stos
testl
add
int
ret
repnz
pop
jno
fwait
inc
sbb
push
mov
add
adc
mov
mov
shll
cli
mov
das
add
add
shlb
sbb
and
mov
add
popf
fiadds
add
add
std
cld
adc
pop
or
dec
xchg
popl
pop
add
test
lret
fstl
pop
cmp
sbb
psllq
jb
sub
int
mov
add
movsb
psubw
add
mov
mov
add
mov
cmp
or
fdivs
aam
ja
data16
or
xor
xchg
dec
jle
add
lret
hlt
push
ret
xchg
stos
xor
pop
add
push
cmp
ja
imul
pusha
jge
andl
and
adc
add
pop
fwait
iret
ret
jp
or
add
cltd
outsl
and
daa
add
xor
add
fs
mov
ja
cmp
movsb
movsb
push
lcall
push
clc
sbb
xchg
repnz
cli
add
or
and
mov
into
cmpl
add
rolb
shlb
lds
fldl
mov
test
notl
repz
out
mov
pop
sbb
arpl
mov
push
sub
cs
cmpsl
sub
imul
dec
mov
push
jnp
pop
sbb
dec
adc
lcall
ficoml
jecxz
mov
ljmp
popa
add
or
icebp
add
cmp
push
cmpsb
xor
fisttpll
test
inc
ret
adc
outsb
stc
movsl
roll
lods
or
push
les
lcall
decb
pop
out
inc
push
cmp
and
lret
pop
add
gs
mov
rcrb
test
mov
test
pop
ljmp
popf
add
add
stc
das
pop
faddp
rolb
add
xchg
aad
jo
sbb
out
mov
xor
adc
fiadds
push
daa
inc
inc
in
repz
mov
pop
fildl
cmp
rol
mov
fldl
out
add
jne
test
mov
adc
fs
cmp
add
out
add
pop
add
icebp
cld
jmp
add
sbb
inc
add
sub
divb
sbb
sbb
add
je
aad
jl
jle
pop
adc
lock
inc
leave
hlt
sbb
lcall
test
scas
insl
mov
adc
mov
iret
loopne
and
iret
adc
in
add
add
inc
add
add
add
mov
dec
add
xchg
add
add
xchg
rolb
test
xchg
cmc
lds
daa
jle
pop
and
add
outsb
add
jnp
fabs
sahf
add
rorb
stos
aaa
aas
mov
test
push
pop
sahf
je
xor
mov
ret
add
pop
add
movl
mov
xor
dec
lock
mov
jb
jp
cwtl
jp
jl
jbe
jle
clc
add
add
push
xor
xchg
xor
es
inc
imul
stos
out
adc
test
dec
rorb
rolb
jb
mov
or
mov
mov
pop
add
aam
add
fbld
addl
push
cmc
not
mov
xor
je
add
jb
dec
add
int
inc
jmp
add
add
pop
mov
mov
ljmp
in
mov
pushf
sub
pop
inc
je
clc
pop
inc
xchg
add
and
fnstenv
xchg
mov
mov
add
jle
inc
call
mov
and
mov
paddsb
int3
inc
add
fiaddl
popa
sub
sbb
and
das
pop
das
push
inc
pop
and
mov
pop
add
xor
adcb
pop
mov
mov
inc
repnz
mov
mulb
push
push
mov
dec
or
add
ds
mov
or
jne
mov
pop
rolb
adc
out
popa
inc
cmpsl
push
push
lea
or
in
rclb
sahf
leave
add
mov
ss
push
add
and
add
and
mov
pushf
mov
adc
test
add
add
loope
iret
push
outsb
movl
inc
sub
cmp
add
add
call
gs
pop
lods
stos
out
push
mov
add
cmp
jle
mov
arpl
lods
add
mov
and
jnp
fdivrl
cmpsl
xor
inc
mov
mov
pop
cli
jno
mov
stos
fsubrs
sbb
adc
jmp
cwtl
and
add
loop
sbb
cmp
add
sub
add
or
cmp
and
sbb
out
add
in
ret
jno
enter
data16
ljmp
sub
daa
insl
lret
cmp
lahf
in
cmpsb
add
cmp
adc
and
push
movsl
mov
mov
in
enter
and
pop
pop
push
mov
outsl
xor
rcrl
xlat
inc
leave
add
jo
repz
add
sbb
popf
es
mov
mov
jno
repnz
cmpsl
add
cmpsl
ficoml
ret
int
add
gs
aas
ret
imul
jge
and
xchg
add
popa
lods
mov
mov
jbe
dec
mov
sub
jbe
add
sub
add
push
xor
push
sar
or
sbb
mov
adc
cmp
sub
cmp
push
inc
stos
ljmp
mov
repnz
adc
cmpsb
fs
jmp
stos
loopne
xor
xor
and
or
dec
fmull
stos
or
push
jmp
or
add
add
pop
dec
lret
pop
cmpsl
lret
jb
ficomps
insb
lret
add
adc
xchg
clc
nop
inc
add
mov
add
lcall
xchg
ret
out
sub
mov
inc
push
add
dec
push
add
add
push
jmp
int
inc
loope
mov
loope
stc
pop
imul
pop
inc
gs
leave
push
into
xlat
out
aas
les
add
xchg
pop
add
pusha
lds
stos
notl
add
add
filds
jno
idivl
gs
mov
jg
add
popa
and
data16
mov
push
mov
xor
mov
sbb
mov
jns
dec
add
loop
fisttpll
ljmp
xchg
inc
jb
sub
add
jmp
add
and
or
insb
cwtl
push
sub
xchg
cli
xchg
sbb
mov
adc
inc
shrl
mov
jnp
mov
mov
add
inc
mov
sbb
clc
xchg
test
cwtl
outsb
sbb
mull
and
mov
and
in
add
inc
dec
shlb
and
xchg
mov
popa
fdivl
add
pushf
add
orl
add
addl
push
inc
push
popf
hlt
sbb
pop
cmpsb
scas
aad
xchg
jo
add
popa
inc
inc
mov
jp
sbb
xchg
mov
stos
shll
inc
mov
dec
subb
xlat
add
pop
arpl
mov
lret
sub
hlt
adc
jns
insb
sub
xor
add
ret
call
and
insl
aam
inc
or
dec
cmpsl
and
sbb
into
xchg
inc
test
mov
hlt
dec
mov
clc
test
mov
jo
aam
add
cmp
cmpsl
sbb
add
dec
push
aaa
lret
fsubrs
lahf
dec
add
roll
pop
jb
sub
dec
mov
add
mov
pop
das
push
out
mov
add
cmpsb
push
shll
out
add
aas
push
mov
sub
ret
inc
xchg
sbb
int3
add
add
add
push
add
bound
insb
dec
jne
add
add
shl
jae
lods
adc
cmp
gs
jmp
fmull
stos
lods
jo
xor
les
insl
jmp
inc
rcl
add
sbb
mov
daa
mov
fnsave
xor
and
popl
dec
out
jmp
push
int3
add
add
mov
loop
loopne
sbb
das
inc
mov
sub
cmp
add
xor
je
sahf
lods
add
push
in
add
dec
shl
cmc
push
fsubrl
mov
aam
push
cmp
out
cli
pop
in
cs
jle
outsb
mov
xchg
dec
sbb
sbb
add
jg
mov
mov
xor
xor
fnstsw
inc
or
cmp
or
pop
xchg
mov
adc
dec
mov
jns
jno
xchg
sbb
xchg
pop
dec
leave
shl
jp
mov
inc
sbb
imul
push
xchg
adc
push
aad
fiadds
inc
jb
dec
mov
popa
add
shll
in
jl
mov
add
pop
imul
pop
mov
cmp
mov
test
fidivs
inc
mov
test
jecxz
inc
sbb
movb
fs
add
push
and
popl
cmp
xchg
or
add
and
lcall
roll
sbb
add
push
movsb
aam
stos
mov
add
mov
push
mov
add
sahf
ds
sbb
sti
add
aad
fmull
push
cmp
rorl
and
mov
cmp
fsts
stos
push
add
xchg
je
jle
ja
cld
das
xchg
mov
add
ficoms
add
jbe
out
int
add
test
repnz
dec
adc
pop
add
xor
pop
hlt
add
dec
xor
lods
stc
jns
mov
mov
mov
test
jns
push
add
and
add
lods
add
pop
push
mov
mov
sub
cmp
push
sarl
jno
in
push
sub
pop
fdivrl
jo
add
arpl
stos
sahf
mov
cltd
xchg
into
jnp
push
in
lods
xchg
jo
les
inc
push
jp
es
push
in
mov
push
pop
mov
shl
rcrl
ja
pop
loope
add
jge
or
inc
std
adc
xchg
xchg
popf
cmpb
push
std
jle
jb
popa
es
xor
add
lret
xchg
or
xchg
js
sbb
bound
jbe
pop
mov
arpl
push
int3
shl
pop
aaa
inc
xor
std
mov
mov
ss
test
roll
add
mov
je
loope
lods
out
scas
mov
leave
filds
out
inc
xor
loopne
adc
ret
mov
add
lret
fwait
mov
divl
fdivp
pop
imul
jns
mov
pop
adc
mov
cmpsl
lods
dec
int
je
cmp
lahf
xor
and
push
flds
sti
push
lock
xor
cmp
fsub
add
adc
pop
pmulhuw
add
cmp
leave
jno
jnp
add
in
add
add
std
pop
test
mov
popa
sbb
add
loopne
jb
icebp
add
stos
out
mov
out
popa
mov
mov
add
shlb
rcrl
sbb
pop
pusha
add
add
out
dec
and
fs
sub
inc
inc
add
jae
jge
sbb
xchg
ficompl
add
mov
inc
loop
arpl
add
inc
add
pop
dec
loop
push
cmp
rcr
ljmp
rcll
or
insb
fmuls
sub
cmp
inc
push
mov
fidivs
std
int
in
fiaddl
fadds
aad
ja
lahf
add
js
insl
jno
stos
leave
xor
pop
shrb
lcall
add
outsl
pop
mov
push
add
fildll
orb
sub
js
xor
lds
jg
icebp
cmpsb
pop
in
out
stc
push
addr16
sbb
lds
jecxz
pmaxsw
bound
push
mov
fisttpl
mov
pop
insl
ljmp
enter
mov
insl
inc
out
sub
xor
aam
std
popf
sub
push
push
clc
xchg
fiaddl
jne
mov
mov
xchg
mov
add
jae
lret
fmull
and
sti
add
sub
call
iret
cwtl
repnz
push
cltd
incb
push
pop
int3
lcall
add
xchg
cmp
push
sbb
jne
les
push
lret
add
push
jg
cld
scas
movsl
and
aas
dec
add
jo
sarl
pop
mov
add
rcll
lret
ret
sbb
out
sbb
xlat
jp
bound
mov
adc
mov
dec
add
aaa
adc
add
gs
jge
sahf
filds
jno
adc
jp
bound
ret
fdivr
adc
bound
loopne
nop
ret
lds
push
int
rolb
lods
fs
cmc
mov
enter
cltd
mov
jbe
leave
push
mov
ljmp
inc
cmp
jae
outsb
ret
out
sbb
xchg
dec
sar
inc
add
jge
int3
add
xlat
add
push
mov
add
jecxz
insl
inc
mov
jne
push
add
sub
sti
jp
insl
fdivrs
xchg
aas
imul
mov
add
mov
add
clc
in
imul
stc
fwait
xor
add
ljmp
jbe
nop
xchg
cmpsb
add
loopne
add
lcall
push
adc
in
add
or
jl
mov
add
sub
add
pop
insb
mov
sbb
sti
add
xchg
test
enter
clc
mov
cmpsl
daa
mov
inc
scas
mov
dec
add
add
and
jge
xchg
fcoml
pop
push
stos
or
pop
cltd
mov
out
jecxz
mov
int
sub
imul
xor
stc
scas
push
mov
out
sub
scas
bound
pop
adc
add
stos
add
nop
ss
inc
add
add
add
shl
push
lcall
shlb
fucomp
mov
lret
aam
ja
mov
add
arpl
mov
cmp
int3
cmp
or
push
movsl
int
or
ret
pop
mov
cmp
cmpsl
add
mov
icebp
mov
pop
leave
mov
jl
ret
add
mov
push
idivl
jbe
mov
mov
add
mov
out
mov
flds
icebp
inc
adc
push
pop
scas
cmc
out
sahf
mov
jo
roll
aad
xor
and
xchg
mov
sbb
int3
mov
lds
dec
lret
pop
cwtl
pop
gs
mov
mov
test
mov
popf
ss
outsb
or
sub
add
pop
cld
cmc
into
rolb
movsb
scas
je
inc
mov
add
dec
dec
cld
dec
add
pop
xchg
add
enter
sbb
lods
cmp
sbb
push
int
test
jno
fdivr
xor
cmp
adc
mov
pushf
je
mov
mov
or
add
out
cwtl
lods
je
add
mov
inc
mov
test
push
ljmp
icebp
hlt
xchg
aas
cmp
loop
rcrl
outsl
scas
add
iret
repz
mov
mulb
sahf
decb
mov
lahf
and
dec
jne
sub
push
sub
call
std
in
pushf
add
ja
lds
sub
jne
addl
add
lret
stc
dec
jae
jb
hlt
push
push
icebp
pop
das
add
dec
daa
sbb
push
enter
sbb
push
fwait
cmp
jb
jg
xchg
in
xchg
es
sbb
push
xchg
shlb
push
jge
add
loop
sub
add
aad
adc
xchg
xchg
pop
adc
jg
adc
int
inc
mov
add
repz
push
es
icebp
sub
xor
fbld
add
jns
sbb
in
mov
mov
add
rolw
scas
cmp
popf
push
add
push
dec
pop
add
out
or
adc
ja
jmp
cmp
test
ret
aaa
into
jae
add
mov
jo
jge
mov
xchg
sbb
add
mov
shlb
js
dec
xchg
mov
insb
jl
or
mov
xor
push
jmp
inc
mov
arpl
lock
mov
rol
cld
add
hlt
outsl
int3
cmp
push
add
cmpsb
dec
add
jo
cmc
jmp
roll
sub
ja
add
pusha
addb
add
stos
cmp
xor
notl
xor
subb
or
int3
loopne
add
cmp
sbb
test
add
mov
icebp
fwait
jo
mov
addr16
ja
add
fs
ja
dec
cmp
enter
stos
loopne
or
xchg
jge
add
out
push
add
scas
jecxz
jp
mov
mov
sbb
sub
sbb
cmp
jno
mov
mov
into
add
add
add
xchg
xchg
es
dec
adc
lret
mov
add
insb
add
popf
dec
cld
and
xor
xor
test
jg
cmpsb
adc
fwait
cmp
add
es
sbb
popf
pop
add
mov
xchg
sbb
xor
out
xchg
aas
push
adc
pop
xchg
mov
lret
add
outsl
aad
mov
gs
jge
xor
mov
movsb
movsb
sub
sti
cmpsb
adc
add
repnz
sub
cwtl
mov
test
lds
and
pop
lahf
add
and
scas
pop
pop
scas
inc
add
enter
add
cs
test
sbb
int
sub
cmp
pop
add
mov
out
mov
jg
adc
mov
mov
in
adc
fstl
adc
adc
mov
fsubrl
lcall
aam
or
add
push
es
push
into
out
jno
in
push
loop
icebp
call
pop
jecxz
stos
cmp
jno
add
les
dec
pop
fst
aam
inc
dec
inc
push
jle
cmp
lock
xchg
add
aaa
fs
xor
add
movsl
jbe
cmpsb
xchg
imul
mov
cmp
loope
pop
out
rcrb
add
cmpsb
stos
add
mov
push
lods
fisubl
fwait
or
add
cltd
enter
out
and
bound
add
ljmp
jl
inc
pop
mov
xchg
scas
inc
pop
push
or
inc
lcall
loop
sub
add
popa
and
mov
adcb
lods
fildl
cmpsb
pusha
daa
fidivl
xor
iret
jbe
add
mov
jg
push
adc
out
adc
out
add
add
push
in
cmpsb
add
add
dec
xchg
xchg
in
popa
insl
lahf
or
cmpsb
mov
or
aam
xchg
push
xchg
cmpsb
or
lahf
cltd
movq
pop
adcb
es
and
or
xchg
xor
test
orb
add
shll
cmp
mov
adc
call
push
rolb
mov
test
pop
mov
inc
or
jmp
out
push
stc
add
jae
call
xor
mov
jo
call
mov
add
jp
lea
jge
aas
std
push
sarl
sbb
sub
loop
lods
je
insb
fadds
xor
sbbb
cld
rcrl
icebp
add
mov
mov
in
and
or
cmpsb
add
add
test
out
push
xchg
not
out
or
add
fbld
nop
mov
or
in
xor
es
filds
jp
in
or
sub
push
sbb
add
mull
adc
add
scas
push
add
cmp
add
jbe
mov
xlat
aad
clc
inc
lds
imul
jle
sub
add
gs
push
mov
xchg
fidivrl
mov
ret
sarl
lea
add
mov
add
pop
add
dec
clc
movups
or
out
push
dec
or
push
stos
aam
les
adc
stos
inc
cld
cmp
xor
pop
rcrb
dec
xchg
aam
sub
lret
shll
cmpsb
lods
mov
cmp
xchg
dec
jecxz
mov
or
filds
iret
fs
lea
fwait
shlb
or
add
or
pop
add
addr16
fadds
push
mov
xchg
inc
pop
cs
fisttpl
lret
loopne
or
add
add
cmp
andb
lods
add
js
or
fidivrl
in
jo
loope
lds
movsb
xchg
enter
sub
mov
adc
jnp
dec
mov
xor
dec
pop
cmp
fdivs
mov
add
push
ret
insb
movsb
pop
cmp
push
mov
subl
add
lods
fadds
call
add
ret
mov
insb
lock
outsl
jb
mov
add
mov
pop
push
lcall
jmp
popa
test
flds
cmpsb
iret
or
je
loop
add
sub
enter
cmc
nop
mov
add
cmp
adc
pop
leave
xchg
push
mov
ljmp
xchg
lldt
mov
xor
out
imul
cmp
cmp
ljmp
fistpl
roll
das
jbe
lea
sbbb
popf
dec
cmpsl
cmc
mov
iret
add
or
shll
mov
add
mov
outsl
out
insb
mov
lock
call
ds
mov
movsl
jnp
sbb
out
repnz
fidivl
xchg
lock
add
int3
jmp
lcall
ret
jno
call
rorl
push
jb
sub
scas
outsb
cmc
dec
jge
add
mov
scas
mov
data16
mov
pushf
mov
push
cmpxchg
xor
outsl
xor
iret
rclb
clc
test
xor
push
cmp
call
jle
clc
xchg
jmp
imul
mov
jge
sti
cmp
cmp
js
out
cmp
push
push
stos
add
add
ret
add
mov
addl
mov
push
cmp
jns
mov
sbb
mov
adc
and
xchg
add
push
movsb
push
insb
push
dec
lea
xor
scas
bound
popf
add
adc
sub
mov
add
lods
mov
lds
popa
std
or
cli
mov
add
cmp
mov
enter
int3
mov
add
xchg
jl
and
and
cmc
clc
out
jg
mov
stos
sahf
xor
add
add
add
xor
and
movsl
cli
popf
dec
mov
push
add
inc
ja
fnstsw
cltd
push
mov
jnp
movsl
mov
filds
jno
mov
push
and
test
add
dec
add
jns
inc
fwait
enter
mov
cltd
push
cmpsl
frstor
arpl
pusha
outsl
inc
xchg
leave
xor
js
jge
cmp
add
xlat
mov
jp
add
sbb
ficoml
mov
mov
add
cld
add
xchg
add
mov
or
shll
add
mov
add
xor
jno
sub
les
cmp
hlt
dec
and
in
sub
clc
add
cmpsl
icebp
cli
out
add
inc
add
xchg
fnsave
and
add
into
add
push
pushf
add
xor
cwtl
pop
inc
push
shr
xchg
add
push
in
ds
adc
push
cmpl
sar
pop
inc
scas
add
add
pop
ds
insl
sub
mov
jb
rcl
sub
pushf
and
mov
mov
jns
add
pop
stos
or
cmp
jae
mov
and
mov
add
and
lahf
rcll
add
or
xchg
add
ret
hlt
sbb
les
dec
loope
sbb
sbb
inc
push
fadd
cmc
jp
out
mov
out
dec
add
dec
jmp
subl
add
cwtl
gs
lods
lds
add
fadd
sbb
fiadds
xchg
adc
mov
xor
push
sub
lods
sti
mov
jae
add
mov
adc
fisubs
lcall
es
fsubrl
mov
ret
lahf
leave
sbb
pop
ja
imul
std
mov
fldcw
jnp
add
es
popf
xacquire
jno
add
lret
aaa
inc
push
push
fcoms
sbb
pop
aam
add
js
xchg
sarb
leave
mov
push
subl
inc
shrl
fidivrl
jl
add
jae
sbb
in
mov
mov
popa
push
sarl
pop
add
in
mov
add
or
je
add
adc
ljmp
inc
pushf
and
add
insb
add
add
mov
lock
insl
stos
ss
aaa
sbb
jo
nop
loopne
lea
leave
subb
mov
scas
sub
inc
xor
enter
add
lahf
jl
jecxz
stos
test
pop
cli
data16
cmpsb
repz
xchg
inc
add
sbb
push
or
cmp
mov
in
add
sbb
push
and
add
add
test
push
dec
in
xchg
in
inc
loope
pop
loop
add
add
mov
add
ja
sbb
pusha
add
pusha
pop
dec
add
ret
or
add
push
adc
and
mov
lret
or
cwtl
mov
add
or
dec
rclb
push
pop
lea
push
filds
mov
inc
dec
fisubrs
add
and
incl
xor
out
out
fs
inc
loopne
inc
sbb
add
add
cltd
sbb
mov
jg
or
add
pop
aam
filds
lds
lock
sub
add
add
mov
lods
imul
add
or
fs
scas
stos
mov
jbe
adc
inc
movsb
add
scas
shlb
aaa
xchg
jnp
xlat
sahf
sahf
mov
jns
jbe
test
insl
jp
call
xor
ljmp
and
fwait
add
pop
pop
mov
push
sahf
push
das
aaa
not
xor
ja
cld
in
inc
pop
push
add
and
pop
test
pop
push
add
stos
push
repnz
adc
iret
cli
ret
arpl
je
add
ja
or
cli
adc
adc
xor
push
pop
fdivs
insl
lcall
loop
dec
inc
icebp
stos
adc
cltd
mov
mov
imul
cmp
insl
enter
fmul
jne
and
aas
in
inc
dec
ja
lret
mov
cmpsl
add
lock
fstl
add
clc
outsb
aaa
jge,pt
cmp
add
inc
dec
jne
test
add
push
out
cmp
ds
das
and
shrb
sbb
sub
mov
loope
add
movsb
and
jb
inc
cmpsl
add
or
adcl
add
push
add
add
add
sbb
cli
arpl
in
xchg
push
mov
cmpl
cmp
cmp
cltd
add
push
sbbb
sbb
int
fdivs
aaa
stc
lods
loopne
adc
add
sub
inc
add
xor
data16
pop
lds
fwait
add
int
add
iret
stc
add
fists
sub
or
repz
jnp
out
cmp
rcl
xchg
add
add
test
bound
jle
xchg
inc
add
add
cli
cwtl
out
cli
sahf
mov
into
push
push
pop
pop
lret
jae
inc
cmc
mov
add
or
push
cmc
adc
lret
fdiv
push
mov
in
pop
test
xchg
dec
mov
out
mov
sbb
inc
push
test
fcmovbe
sub
push
movsb
sub
inc
add
call
xchg
enter
out
js
mov
inc
fisubl
mov
or
xlat
cltd
stos
or
add
add
mov
cld
pop
push
shl
add
pop
xor
repz
xor
mov
xchg
enter
push
push
inc
dec
xchg
sbbl
mov
sub
or
outsl
push
je
pop
ficompl
pop
imul
dec
mov
je
js
out
sbb
sub
pop
mov
sub
pushf
push
jge
out
js
add
and
ds
sbb
jp
pop
cmp
jne
clc
cmp
lods
out
int
and
out
nop
add
dec
jae
lret
add
outsb
fcoms
mov
add
verr
mov
ret
cmp
xchg
mov
ret
pop
test
repnz
jno
stc
or
add
mov
sbb
popf
jo
bound
pop
sub
or
cltd
adc
add
add
jnp
and
ljmp
jns
jp
aad
pop
mov
xor
sbb
imul
outsb
testl
push
mov
mov
scas
ret
scas
add
xchg
pop
mov
mov
fwait
push
dec
jge
sub
sub
jae
push
mov
xchg
cmpsb
fbstp
mov
add
ficompl
adcl
addb
fisubs
ja
std
pop
xchg
bound
xchg
add
or
jmp
push
in
xor
cmpsb
hlt
xlat
test
fisttpll
xchg
mov
mov
add
dec
loope
les
sbb
in
dec
and
insl
add
inc
adc
fs
aas
xchg
test
aas
inc
in
add
jnp
sub
aad
aas
fildll
and
xor
enter
mov
test
add
cmp
sti
mov
xchg
add
jg
jno
add
hlt
loop
inc
xor
xor
je
add
dec
add
fidivl
pop
in
sbb
add
cmp
xchg
insb
add
jge
xor
leave
add
ljmp
push
and
gs
jl
sarl
pushf
popf
jg
pushaw
fcmovnb
mov
add
ss
adc
mov
pop
mov
add
popa
pop
push
inc
popf
enter
in
xchg
mov
cs
adc
lods
pushf
add
add
add
or
movsb
iret
add
pushf
incb
cmpsl
and
add
mov
sub
into
lret
adc
stos
and
cmp
xor
out
add
inc
and
into
test
add
sbb
jae
nop
pop
add
pop
dec
test
add
rcrl
int3
jmp
mov
lock
sub
pop
gs
xor
add
adc
icebp
pop
add
sbb
jnp
cli
shlb
es
xchg
xchg
fldcw
add
paddsw
icebp
fistpll
add
push
hlt
in
adc
mov
add
sub
mov
push
cmp
add
ja
add
div
adc
sbb
loope
xchg
mov
dec
mov
xchg
arpl
rcrb
mov
pushf
jnp
lret
sahf
mov
add
push
push
inc
arpl
jno
cmpl
add
or
and
call
cld
lcall
or
mov
mov
sti
stos
aad
add
ror
dec
iret
add
sbb
add
inc
mov
dec
mov
mov
add
add
xchg
mov
xchg
scas
arpl
ljmp
jp
mov
mov
cmp
rclb
daa
add
jmp
sar
sahf
aas
pusha
aam
sub
pushf
add
mov
dec
out
push
pop
pop
push
pop
mov
sub
add
cmpb
add
sub
cmove
jnp
enter
and
xor
dec
add
cmp
out
dec
in
mov
outsl
push
mov
lret
dec
das
in
add
mov
in
pop
adc
or
jno
popf
or
stos
mov
insl
xchg
push
sbb
iret
add
sub
ret
aam
mov
push
mov
test
add
add
adc
mov
cmpsb
lods
add
mov
or
adc
out
insb
rcrl
stc
lea
fsubrs
sbb
add
aam
add
fsubrl
mov
repz
mov
inc
arpl
push
cmp
jecxz
add
hlt
imul
sahf
insl
mov
jb
stos
into
adc
mov
divl
ror
add
jo
pop
fs
xchg
aad
push
subb
dec
mov
mov
sub
dec
hlt
cmpsb
mov
adcb
xor
in
pushf
leave
push
adcb
and
mov
jne
arpl
inc
mov
cli
sbb
movsl
ret
dec
cmp
jne
push
and
add
add
movsl
into
add
bound
jae
mov
or
mov
mov
insl
add
add
push
add
lea
xchg
cmp
je
jp
cmp
add
adc
pop
cmpsl
push
adc
outsb
rolb
pop
ss
sbb
orb
ljmp
add
pop
int3
add
add
xor
loopne
notl
outsb
mov
or
add
loopne
jo
inc
cmp
roll
and
add
xrelease
sbbl
out
cmp
data16
loopne
orb
mov
lods
cltd
fiadds
sarb
mov
je
dec
hlt
je
add
mov
mov
and
mov
add
dec
mov
std
adc
add
xchg
fdivrl
sahf
push
repnz
pop
inc
add
lea
cmp
ljmp
xchg
xchg
or
jle
popa
push
mov
sbb
mov
test
pushf
add
add
jp
add
stc
add
outsl
and
pop
out
xor
or
pop
shl
insl
sbb
add
mov
or
daa
sbb
add
int3
ret
lret
popf
xor
cmpb
add
in
shr
sti
ret
and
iret
xchg
stos
sbb
mov
data16
push
repz
xchg
mov
pop
xchg
pop
imull
in
mov
add
sub
and
das
in
cltd
pop
cmp
jp
hlt
jnp
add
in
jmp
fists
mov
inc
cmpsl
add
outsb
aaa
add
das
hlt
aaa
push
mov
js
inc
data16
testl
jecxz
cmp
adc
add
inc
nop
loop
push
adc
clc
sbb
cmp
bound
int
sahf
adc
loope
add
imul
rsm
dec
inc
mov
aaa
outsb
fnclex
cmpsb
std
and
pop
imull
pusha
or
sub
mov
mov
sub
inc
sbb
ljmp
jle
cs
leave
jp
movsb
cli
cwtl
hlt
adc
shrb
pop
add
aaa
xchg
xor
insb
stos
addr16
push
sub
aaa
add
flds
xchg
mov
add
mov
or
hlt
fimuls
mov
push
adc
hlt
clc
inc
imul
mov
popa
lds
sbb
xor
in
fildl
sahf
mov
mov
jne
xchg
mov
jmp
jmp
stos
testb
fucomp
iret
add
add
pushl
fldl
push
push
fcoml
push
addl
cmpl
frstor
inc
inc
mov
add
add
push
jae
movsb
sbb
pop
adc
xchg
mov
add
dec
insb
mov
sub
mov
jne
and
push
js
sub
push
inc
jle
sub
bound
sbb
roll
mov
int
dec
add
lret
pop
cmc
imul
sub
jne
and
add
aaa
aad
mov
stos
fistpll
pop
dec
add
lcall
inc
jno
inc
mov
jge
repnz
dec
mov
or
add
fidivl
call
pop
lret
add
jne
in
dec
dec
xor
bound
rcl
pop
add
std
mov
in
cmp
cwtl
add
cwtl
mov
je
jb
sarb
cmpsl
inc
add
or
inc
xchg
cmp
jns
sbb
ds
shll
pop
cmpsb
pop
mov
jg
dec
add
cmp
sbbl
mov
add
pop
notl
pusha
enter
or
rolb
fnstsw
xchg
xchg
fadds
dec
maxps
mov
or
arpl
das
push
jae
xor
lds
inc
add
gs
add
sbb
orl
pop
jle
lock
add
and
outsb
test
daa
nop
insl
fdecstp
push
out
xor
jb
movsl
leave
popf
mov
lahf
jbe
adc
and
jecxz
pop
and
out
push
sarb
pop
cld
adc
sbb
test
add
mov
jno
outsb
lret
add
inc
xor
adc
adc
sahf
idivb
add
push
in
das
stc
or
add
lret
xchg
repnz
or
shll
push
nop
xlat
mov
test
ja
mov
push
xchg
icebp
adc
in
add
popa
adc
xor
add
add
inc
dec
sub
insl
add
add
ds
adc
mov
cmp
insl
add
fs
and
add
addl
lods
xchg
add
imul
push
sub
sbb
je
and
popf
enter
sub
in
cmp
repz
push
cmpl
xor
mov
lahf
fwait
add
fists
mov
add
enter
sbb
loope
test
sbb
arpl
bound
inc
add
and
add
sbb
or
jbe
jmp
sbb
jp
movsl
adc
pop
sub
add
fs
push
cmpsb
jns
inc
jcxz
lock
hlt
stos
stc
jmp
xchg
or
jecxz
pop
push
push
pop
cmp
rol
scas
sub
mov
jge
push
and
add
fidivs
and
jl
mov
lret
and
add
lret
rorl
xor
adc
pop
xor
add
rclb
xor
or
dec
lcall
mov
scas
insl
sbb
inc
outsb
jno
and
inc
popf
test
jo
xchg
add
out
xor
xchg
and
shlb
cmp
pop
leave
xor
rorb
add
xchg
xchg
das
std
daa
sahf
ret
mov
add
sti
add
int
inc
sub
dec
lret
and
lahf
mov
adc
std
mov
out
add
inc
mov
add
push
sti
out
movsl
xor
inc
and
xor
test
fstpt
popa
add
lods
dec
or
loopne
jle
cmp
adc
cmp
outsb
cmp
dec
add
pushf
jmp
inc
xchg
add
pop
iret
or
dec
cmp
add
lret
add
and
into
dec
ret
icebp
cld
add
lret
roll
in
add
sti
add
adc
lock
xchg
sub
sbb
lcall
add
test
and
stos
add
xchg
add
fadds
sbb
jp
cmp
jmp
outsb
iret
sub
shll
stos
test
cmpsl
mov
add
cmp
pusha
stos
std
lret
pop
gs
mov
stos
dec
add
stc
loope
ja
and
lock
into
stos
add
aaa
fnsave
cltd
mov
add
dec
cmp
pusha
in
xor
outsl
sti
adc
add
jo
insb
out
frstor
inc
push
aaa
jle
int3
test
mov
push
add
push
xchg
cmp
cmpsb
inc
add
pop
movb
jmp
fldenv
int3
add
test
mov
bnd
add
adc
lods
adcb
js
outsl
add
and
mov
add
inc
cs
pop
rorb
push
es
lret
push
lods
add
sub
add
jns
lret
mov
lods
adc
add
clc
xor
aaa
std
sub
cwtl
fidivl
jge
cmp
dec
xchg
add
inc
pop
or
push
out
adc
fldcw
push
push
dec
xchg
lret
into
test
testl
sti
out
add
add
enter
mov
xor
xlat
and
lods
xchg
xor
std
inc
cmp
out
mov
call
cwtl
hlt
outsl
dec
xchg
test
push
inc
pop
cwtl
cltd
add
cmp
ret
cmp
std
call
mov
jns
push
add
pushf
add
sbb
jo
cmp
repnz
push
jge
mov
iret
outsl
insl
mov
xor
sub
add
arpl
fwait
mov
out
aas
xchg
fcom
cmp
pop
jmp
cmp
into
rclb
push
xor
xchg
js
push
cmp
add
sahf
es
rorb
add
xchg
rclb
nop
add
add
push
cltd
leave
sub
or
pusha
add
or
out
add
mov
out
and
fcmovu
fcoml
loop
pop
xor
cmp
out
movsb
fnstenv
sub
jecxz
xchg
add
ja
inc
add
mov
inc
jae
add
mov
mov
dec
xlat
mov
push
jge
and
pop
mov
aad
add
sar
dec
mov
add
add
lahf
call
or
insb
mov
leave
xchg
adcb
dec
testb
daa
mov
adc
and
sbb
add
outsl
and
cwtl
mov
add
sbbl
inc
pusha
in
sti
jmp
add
pop
icebp
inc
xchg
fstpl
add
ljmp
sbb
loop
push
in
xchg
cltd
dec
jg
mov
and
loopne
add
inc
imul
push
cmp
repz
add
pushf
xor
mov
aad
push
fstps
movl
add
hlt
mov
push
movsb
popa
lods
es
dec
sub
push
pop
add
mov
jno
sbb
add
xchg
stos
in
add
lahf
lcall
push
mov
add
nop
add
mov
xor
hlt
add
loope
add
push
add
xor
mov
add
jns
jo
fs
in
xor
xor
ds
loope
cli
sub
popa
mov
lods
cmpsb
dec
sub
jo
test
dec
stos
sbb
ret
mov
inc
add
adc
roll
gs
in
adc
sbb
pop
push
cmp
jne
aas
daa
add
cld
add
out
scas
xchg
push
out
push
pop
jl
daa
add
and
add
jge
dec
shll
cmp
stos
lods
mov
mov
xchg
add
jge
adc
int
pop
jmp
cmp
add
pop
xchg
sub
or
stos
add
inc
xchg
mov
jno
sub
lods
lahf
jecxz
push
push
pop
addl
inc
mov
add
add
mov
mov
mov
xor
std
sbb
add
rcrl
jge
je
or
outsl
mov
and
or
imul
pop
add
dec
popa
push
adc
mov
adc
push
add
pop
add
inc
jle
adc
sarb
cltd
add
mov
dec
push
clc
jecxz
push
dec
mov
fs
je
inc
lret
popa
dec
add
dec
mov
cli
enter
insb
fwait
mov
inc
negb
fldl
imul
ds
int3
add
mov
xchg
call
jmp
add
dec
push
mov
push
jb
sbb
or
push
fidivs
pop
stos
enter
mov
or
jno
xchg
std
xchg
sub
xor
add
pushw
jecxz,pn
pop
cmp
add
jmp
ss
jle
and
add
repnz
add
jp
add
add
subb
jg
dec
iret
cmp
cs
ret
and
add
outsl
rol
sub
add
and
push
push
add
add
xchg
data16
scas
test
fiaddl
inc
sbb
xor
jmp
add
mov
dec
sub
cmp
or
and
mov
and
push
in
fcomi
mov
push
faddl
xchg
cmc
add
test
cmpsl
add
bound
mov
cmp
fwait
enter
mov
out
sub
fimuls
cld
or
lock
notl
add
jbe
jo
add
cmp
and
push
xchg
sbb
enter
xchg
imul
daa
mov
cli
push
or
icebp
jnp
js
pop
je
es
shll
nop
and
add
in
gs
xor
sahf
ljmp
leave
call
decb
roll
out
mov
add
jl
outsl
mov
sbb
mov
jo
insl
push
mov
xchg
in
push
add
fadds
cli
inc
xchg
adc
and
cltd
and
jg
add
add
addb
adc
adc
popf
mov
aam
test
ss
jl
cmp
fistpll
and
and
xor
cmp
pop
outsb
ja
pop
xchg
add
js
sub
lcall
jno
xchg
inc
sbb
push
pop
mov
lods
add
add
call
pop
xchg
out
add
jb
or
mov
imul
xchg
test
add
subl
cmp
mov
cltd
pop
pop
aad
into
add
mov
cld
cwtl
lea
cli
fbstp
add
test
sbb
fs
add
jge
push
add
cmp
push
je
add
jb
mov
fstpt
scas
lods
cmp
sar
pusha
mov
shlb
das
in
add
iret
stc
leave
inc
sub
mov
fs
pop
inc
fs
in
add
push
std
mov
adc
shlb
nop
outsb
push
push
dec
push
mov
movsb
add
adc
aam
push
pop
pop
testl
rolb
shl
xchg
sub
push
inc
sarb
frstor
cmp
test
or
xchg
jo
ja
jle
sub
cmp
std
push
sub
ds
fdiv
pop
sub
mov
lock
stos
xorl
das
sbbb
add
cmp
mov
mov
es
push
xchg
or
cld
movsl
addr16
sub
add
dec
xor
sub
fldt
dec
mov
xchg
add
add
cs
dec
fs
pop
jb
and
ljmp
add
fdivrp
sbb
repnz
add
push
and
mov
push
or
in
mov
xchg
sbb
add
dec
add
test
test
aas
or
arpl
jno
pop
cmpsb
jns
push
jle
inc
test
add
ror
mov
xchg
arpl
add
mov
adc
mov
push
stos
jnp
mov
scas
xor
push
jp
or
pop
add
in
cmp
or
lret
movsb
ds
add
or
repz
lahf
out
rep
mov
add
push
add
xlat
add
std
fs
test
jno
cmp
adc
pop
lret
fimuls
sbb
add
pop
jg
dec
add
insl
cwtl
dec
push
fwait
icebp
add
jnp
jo
mov
fcomp
repnz
xor
outsl
xchg
add
jae
and
scas
stc
xchg
jl
sti
push
push
mov
movsb
ja
add
push
push
repnz
inc
pop
add
sahf
pop
mov
into
jmp
mov
dec
jns
add
lahf
out
scas
mov
jg
and
push
inc
loope
ret
int3
addl
add
sbb
mov
mov
repnz
sub
push
mov
mov
ret
xchg
je
vmovdqu
mov
jecxz
loope
mov
ret
add
cmp
popa
in
push
pop
fsubrl
add
mov
add
jge
int
lods
into
add
push
mov
add
xchg
sbb
jne
add
movsl
outsb
add
add
movsl
mov
add
dec
cmpsb
cmc
push
mov
or
stos
dec
pop
mov
xchg
mov
filds
mov
add
pop
pop
jno
dec
insl
daa
test
dec
aaa
jno
bound
xchg
adc
mov
or
add
outsb
nop
add
ljmp
add
pushf
pop
xchg
cmp
sbb
ds
jae
sahf
xchg
lea
push
stos
out
out
iret
fbld
pop
hlt
out
add
cwtl
enter
in
mov
orl
sbb
rorb
inc
cmpsl
mov
add
jmp
xor
inc
cmp
sbb
cmp
pop
roll
addb
cmp
imul
xor
pop
testl
int3
mov
adc
aas
mov
mov
cmp
roll
loopne
rolb
add
inc
aas
pop
pop
popl
sahf
mov
jnp
add
rolb
inc
add
nop
mov
push
faddl
imul
push
fmuls
cmc
mov
test
add
int3
add
addr16
or
insb
pusha
inc
add
inc
jecxz
or
ss
inc
dec
inc
add
dec
sub
cltd
dec
xchg
sub
add
imul
mov
dec
scas
std
int
inc
int3
dec
add
mov
add
aas
jo
push
test
cmp
add
add
sbb
sbb
loopne
push
jo
mov
add
push
fsubrl
mov
mov
add
mov
mov
xchg
sub
jge
test
shl
mov
jnp
add
stos
xor
inc
mov
in
fcomp
cmp
inc
jg
es
insl
out
mov
lcall
or
add
mov
bound
cld
adc
movb
mov
mov
push
dec
mov
mov
add
push
or
add
in
or
popa
xor
add
adc
lock
mov
cmpsb
movsl
dec
dec
les
cmp
inc
and
sbb
test
std
mov
cwtl
mov
add
jmp
dec
add
sub
in
adc
pop
es
loop
pop
insl
adc
cld
stc
push
in
and
cltd
int
imul
jg
nop
add
add
mov
pop
ret
mov
adc
cld
sti
or
xor
insl
ror
in
add
test
aas
xchg
xchg
add
inc
stos
lret
pop
xchg
cmp
call
mov
inc
cmp
loopne
sbb
cld
std
ljmp
imulb
add
push
addr16
xlat
ret
add
pop
ljmp
jae
nop
xor
iret
push
in
add
mov
add
jl
pop
jp
les
mov
add
or
add
push
mov
pcmpgtw
mov
xor
int3
addr16
add
daa
cmpsb
sahf
insl
push
mov
xchg
add
popf
pop
push
cmpl
dec
xchg
lds
pushf
xlat
rolb
lret
add
icebp
jo
sub
lahf
add
dec
xor
inc
push
fnsave
aaa
out
mov
pavgw
inc
idivl
mov
nop
lock
add
testl
fcomp
xchg
in
adc
cmpsb
imul
repz
push
add
aad
add
out
roll
mov
jg
in
fstpt
mov
add
rclb
std
pop
gs
add
mov
bound
xor
xchg
mov
shlb
xchg
stos
jns
or
xchg
dec
add
mov
ror
cmp
and
outsb
sti
mov
add
add
subb
inc
int
ficomps
js
ljmp
push
jb
mov
jp
adc
add
filds
xor
mov
lahf
mov
push
testl
add
das
add
sbb
xor
jno
jbe
mov
aad
xor
adc
push
aas
cld
pop
jnp
in
pop
jmp
jp
add
ret
jle
testl
mov
inc
std
out
xor
xchg
lods
hlt
je
dec
mov
stc
mov
xchg
adc
fidivrs
add
pop
loope
sbb
lods
mov
das
pop
imul
mov
cmpsl
or
mov
cmp
add
ljmp
add
push
inc
add
push
xchg
idivl
and
add
cmp
sbb
push
roll
dec
sahf
add
jno
jp
and
out
xor
incl
xchg
das
add
mov
or
jmp
pop
adc
add
push
adc
inc
insl
push
insb
lea
add
add
push
cmp
add
or
mov
mov
xchg
add
xor
cmpsb
stos
ljmp
pusha
lahf
ds
add
mov
daa
xlat
nop
add
enter
das
lret
dec
push
lret
mov
fnstsw
nop
nop
jae
insb
add
or
push
dec
sbb
xchg
leave
mov
daa
add
fwait
mov
int
fcoml
add
mov
inc
mov
inc
add
mov
out
sub
xchg
add
add
add
pop
daa
add
push
sub
xchg
lea
adc
add
orl
repnz
pop
mov
xchg
add
out
and
lea
xor
xchg
or
mov
adc
js
xor
cmp
pusha
pop
jnp
fbstp
lahf
lods
mov
adc
lods
cmp
frstor
loopne
mov
fmuls
gs
repnz
push
dec
std
cmpsl
lds
insb
jo
mov
inc
loope
inc
xchg
out
hlt
add
mov
add
xor
mov
or
add
ja
jnp
out
cmpsl
xor
push
mov
add
pop
add
cmp
push
mov
sub
ret
push
or
jg
ds
or
xchg
or
pop
int
jmp
mov
mov
add
sub
cmp
stc
or
mov
aam
add
lods
out
pop
pop
cli
push
fs
add
push
out
mov
das
fiaddl
and
sub
add
lods
and
fsubs
stos
mov
sti
ror
pop
adc
xchg
call
es
xor
js
repnz
jb
enter
sbb
push
dec
add
push
xchg
inc
enter
add
ss
addb
push
add
in
in
and
inc
cmp
dec
mov
fs
mov
gs
add
mov
cmpsb
xchg
and
mov
add
sbb
popf
push
fcmovnu
sub
das
mov
addr16
add
pop
out
leave
jae
test
pop
repz
add
push
repz
mov
ficoms
fldt
fwait
push
andl
add
je
and
add
pop
adc
xchg
ret
mov
ljmp
into
add
fists
je
add
cmp
jo
adc
mov
xchg
push
out
daa
pop
fsub
mov
dec
je
jae
cmp
sub
into
test
add
dec
cltd
mov
and
and
cmp
ja
ds
or
ftst
sub
ds
rcl
or
lret
mov
fmuls
adc
add
push
add
sbb
xor
aas
fildl
loopne
adc
daa
ds
add
stos
cmp
sti
call
mov
test
ds
push
sti
popf
popf
mov
fs
mov
push
gs
xor
sbb
repz
xor
add
sbb
and
aas
and
inc
or
pop
xchg
push
fxch
pop
leave
add
arpl
mov
rorb
lds
and
out
cltd
stc
sub
fbld
jmp
cli
lcall
outsb
mov
dec
pop
inc
outsl
int3
cmc
xchg
add
lret
and
add
add
imul
dec
test
cs
add
xchg
ret
enter
in
js
mov
xlat
lret
mov
stos
add
push
cmpsb
add
jnp
pop
int3
pop
mov
das
sarb
ja
add
pxor
dec
add
loopne
sub
lods
cmp
nop
movsbl
sub
add
xchg
repz
add
sbb
fisttps
add
jbe
jg
and
test
imul
andb
xchg
shll
mov
xor
jle
out
insl
adc
jp
fwait
push
out
add
add
xor
add
gs
ds
add
mov
adc
pop
das
mov
xchg
dec
insb
cmp
sbbb
jae
mov
mov
ret
mov
test
jg
and
int3
test
aam
mov
lods
loopne
cltd
lcall
xor
test
or
into
sub
rcl
ja
cld
rcl
push
lds
imul
popa
push
cmp
pop
rcrb
jno
push
dec
pop
dec
mov
cmpl
gs
pop
out
push
roll
mov
adc
add
or
push
add
sbb
roll
in
aas
std
jl
decl
cltd
pop
xchg
mov
jmp
outsl
stos
bound
and
cmp
out
das
jo
cmp
add
repnz
lods
out
out
xor
inc
add
or
test
add
mov
inc
add
sub
in
push
add
dec
and
loopne
ret
dec
or
dec
cwtl
test
xor
inc
add
sahf
add
pslld
and
mulb
mov
jno
add
jmp
sub
pusha
add
ljmp
and
enter
add
mov
aam
imul
lret
or
clc
cmp
sub
push
int
popf
pop
popa
in
pop
stos
add
lock
call
jnp
pop
rolb
andb
add
test
dec
jmp
jb
pushl
clc
cwtl
adc
xchg
orb
mov
cmpsl
lcall
pop
fidivs
mov
jae
mov
pusha
loope
add
cmc
insb
mov
repz
add
int
cmp
and
jg
mov
push
mov
and
lea
mov
mov
roll
cmpsl
mov
fyl2xp1
sub
mov
sub
iret
mov
out
mov
push
enter
sbb
stos
orl
jmp
pop
cmp
jge
fstp
pop
fcomi
and
cmc
cli
mov
add
cli
call
data16
mov
pop
add
inc
push
xchg
mov
sub
sahf
repnz
addr16
sbb
mov
stos
cltd
movsl
pop
insb
mull
je
repz
add
add
out
fimuls
jecxz
cmc
dec
or
xor
fsubl
gs
test
jge
pusha
aas
mov
xchg
and
cwtl
adc
loopne
push
mov
cmpsl
inc
fldl
add
add
enter
cmp
jl
pop
jb
loopne
add
inc
ss
sahf
xor
sub
pop
pop
shrb
sub
jmp
frstor
inc
lret
testl
mov
xor
mov
mov
dec
sbb
icebp
jbe
inc
fstp
add
bnd
jbe
dec
sub
dec
rolb
repz
mov
add
aam
imul
cltd
push
out
mov
aaa
mov
or
or
push
insl
sarl
rcrl
add
movsl
and
xchg
mov
mov
mov
add
test
mov
popa
mov
and
loopne
add
cli
int3
add
es
or
xchg
mov
out
lods
mov
add
sub
pop
mov
jmp
mov
push
mov
rorb
lods
xchg
test
outsb
add
mov
ljmp
xchg
fiadds
lock
xchg
add
lea
add
or
cld
xlat
roll
jae
addr16
sub
mov
jo
ds
lds
mov
and
jle
and
into
out
cmpsb
in
mov
pusha
xchg
pop
mov
add
ljmp
or
clc
data16
add
roll
or
pop
mov
lds
mov
xor
mov
loopne
ljmp
int
jp
aas
bound
pop
mov
add
mov
add
add
stos
fisubrl
les
and
jle
inc
inc
add
adc
pop
sbb
jno
movsl
push
jb
sub
and
fisubrs
add
idivb
add
xor
inc
and
jecxz
imul
outsl
add
das
stos
testb
add
insl
fcomps
outsl
es
cmp
bound
ror
jmp
add
cli
ret
dec
dec
mov
aad
pushf
xchg
or
jne
add
cmp
outsl
icebp
lods
sahf
jmp
in
pop
xchg
dec
add
popf
add
push
clc
test
les
mul
pop
ljmp
push
mov
js
push
cmc
fisubs
push
add
mov
stos
xchg
cmc
fsubrl
xor
add
inc
std
test
add
add
faddl
mov
enter
push
shrl
add
and
jecxz
and
push
pop
nop
add
jbe
sahf
lahf
cmpsl
add
cwtl
mov
add
mov
popf
mov
or
fstp
inc
add
fisubrs
jge
sti
mov
lcall
add
std
daa
movsl
mov
and
movsl
add
fiaddl
push
mov
mov
lcall
sub
iret
stos
lret
or
mov
lea
sub
insb
mov
int3
sbb
std
or
enter
sub
out
call
or
xor
add
aam
ficoms
gs
adc
nop
jae
in
mov
pop
rcrl
mov
mov
mov
ret
adc
xchg
add
mov
lahf
push
add
add
scas
fadds
pop
orb
push
push
add
add
add
dec
pop
bound
or
mov
add
mov
pop
add
std
sbb
ret
movb
fistl
dec
jmp
jle
into
mov
adc
add
xchg
lcall
stc
popl
adc
dec
and
sub
mov
call
and
push
xchg
mov
popa
shll
sti
inc
fldt
push
or
jmp
add
repnz
push
pop
pop
inc
add
cmp
sub
push
ficoml
inc
push
pushf
loope
fadd
lea
fimuls
aas
pop
int
data16
mov
xor
mov
xchg
inc
jo
add
jmp
lea
mov
mov
push
cmc
mov
stos
sub
int
push
jecxz
fildll
xlat
jb
add
add
sbb
lret
mov
lea
lret
mov
mov
xchg
adc
sub
or
addl
out
and
add
dec
gs
int3
and
in
enter
stos
mov
arpl
int
daa
push
mov
dec
loopne
out
imul
out
js
hlt
dec
mov
mov
mov
jge
outsb
lahf
sbb
xor
cmp
xchg
cmp
icebp
mov
add
arpl
sarb
sbb
mov
jns
sbb
sub
and
stos
les
dec
lock
lcall
sub
push
mov
js
push
ret
test
xlat
add
push
mov
lahf
mov
sub
mov
ret
pop
pop
mov
aam
inc
pop
inc
enter
mov
add
lea
leave
rcll
or
inc
paddw
mov
add
repnz
add
aas
xor
xchg
add
dec
push
sbb
popf
std
and
ret
enter
fnstsw
add
push
negl
pushf
adc
mov
repnz
cli
or
jecxz
dec
jecxz
xchg
cmpsb
pusha
in
jecxz
xchg
add
dec
and
aaa
iret
xchg
insl
mov
mov
add
add
movsb
cli
inc
add
int3
mov
add
mov
push
pop
mov
lret
add
jno
orl
cli
daa
into
in
sbb
cltd
jmp
mov
icebp
push
sbb
fsubl
sub
lahf
dec
and
bswap
fwait
jo
mov
jg
and
stos
sub
imul
xchg
rol
add
jne
lret
add
ljmp
jl
hlt
mov
xchg
push
stos
pop
adc
les
fiadds
std
mov
add
add
lods
mov
sbb
stc
dec
test
ret
movsb
inc
js
mov
sbb
jb
mov
jae
xchg
mov
cmp
sbb
test
incl
pop
aaa
outsl
add
ret
popf
pop
cmp
imul
out
out
sbb
jbe
inc
nop
les
or
scas
add
jmp
pop
jns
cmp
scas
int
insb
mov
and
lds
cltd
mov
cs
inc
push
mov
cmp
cld
div
dec
int3
mov
test
adc
dec
inc
xchg
ret
mov
push
mov
dec
add
xlat
add
add
out
xor
addr16
add
outsb
in
pop
loop
dec
jae
imul
add
sub
cld
xlat
add
sbb
cmpsl
aam
pop
lcall
add
out
xchg
and
rcll
add
mov
xchg
addr16
add
xor
add
mov
add
addb
xor
cmc
addr16
add
in
inc
popf
cmp
inc
push
fsubrs
pusha
jge
sbb
add
in
jl
aas
xor
push
stos
les
sub
cmp
data16
fsubr
add
pusha
add
add
idivl
pop
cmp
pop
scas
adc
pop
mov
push
and
cmp
lock
lods
enter
int
decb
mov
and
cmp
add
xor
inc
adc
jb
pmaxsw
js
pop
jb,pn
pop
repnz
mov
xlat
scas
outsl
test
dec
shl
pushf
cmpl
fcoml
daa
xchg
add
push
push
sbb
movsl
into
sbb
sub
add
adc
add
daa
aaa
xor
mov
add
shl
jmp
sqrtps
push
add
lods
addl
jl
xor
and
sarl
rcrl
mov
push
arpl
add
xchg
cmp
movb
add
mov
test
lcall
mov
cmp
adc
divb
push
lock
sub
addr16
pop
xchg
bound
flds
sbb
and
and
inc
add
pop
inc
das
or
pop
out
add
int
xor
je
add
aad
cmp
dec
add
fbld
add
push
aad
add
movsl
pop
add
sbb
sub
xchg
mov
jecxz
cld
adc
jg
push
cmp
sbb
mov
ret
clc
add
fs
jo
inc
xchg
add
leave
lock
movsl
adc
ret
mov
push
pop
sbb
into
addr16
lret
into
sarb
push
sbb
rorl
lds
loopne
or
addb
add
sbb
stos
mov
sbb
add
ficompl
mov
add
imul
add
add
jp
and
fcoml
mov
fcoml
into
or
jge
sub
hlt
xchg
pop
xor
adc
fnsave
adc
dec
push
outsl
loope
jo
add
cmpsl
lcall
in
pop
jo
cltd
dec
test
sbb
cmc
xchg
xchg
sub
mov
aas
cmc
push
rclb
pop
mov
insb
lret
add
cwtl
adc
mov
xchg
push
andl
add
mov
xchg
lea
add
scas
decb
lret
xchg
add
daa
lcall
xchg
shlb
dec
xchg
add
cmpl
and
out
ret
dec
mov
cmp
fbstp
or
add
add
xchg
and
pop
test
nop
or
in
push
je
lret
dec
cmp
les
aaa
push
push
pop
aad
add
sbb
popf
jno
daa
adc
cmp
jae
or
push
scas
jne
xchg
add
not
cmpsb
dec
imul
or
mov
push
outsb
inc
push
data16
mov
jns
adc
pop
addl
cmp
jl
lock
xor
pop
rolb
sti
mov
pop
adc
lcall
add
ficoml
call
inc
cli
xchg
ret
cmp
ret
sub
pop
or
and
and
adc
add
push
mov
add
xor
decl
add
sub
xchg
and
int3
rclb
push
fnstsw
add
push
mov
orb
xor
cmp
xor
mov
in
int
pop
adc
xor
clc
int3
frstor
sbb
lock
xor
dec
jns
jbe
cmp
add
ret
jno
mov
pop
popf
test
in
add
push
loope
loopne
test
inc
ret
add
fstpl
push
and
addr16
add
sbbl
mov
mov
sbb
cmp
ficoms
push
lea
cmc
xchg
mov
cmp
loop
add
lods
repnz
jo
xchg
add
jge
sub
add
add
cld
bound
cmp
cltd
push
mov
shrl
pop
sbbl
mov
sahf
popa
mov
cwtl
mov
cmp
dec
mov
dec
adc
cmpsb
lock
pop
inc
test
ljmp
push
jnp
and
push
xchg
or
push
cld
es
inc
xor
push
shlb
or
add
in
add
pop
clc
fadds
fsubrs
mov
pop
jge
testl
in
xor
push
clc
pop
add
sbb
outsb
sub
add
lret
loop
add
loope
imul
xchg
adcb
fwait
add
int
dec
ljmp
test
or
jmp
enter
mov
xchg
icebp
enter
add
fwait
and
outsb
jge
inc
test
add
ljmp
repz
hlt
leave
add
jp
push
add
adc
push
dec
cmp
push
inc
in
xchg
rolb
lret
in
push
pop
ret
ljmp
insb
add
xchg
add
flds
stos
mov
loope
lods
add
add
add
lods
insl
ljmp
lret
push
loop
or
add
add
cmpsb
scas
add
sarl
sub
mov
xor
stc
sub
xchg
sbb
cwtl
andb
cmp
call
push
add
enter
mov
psllq
loope
rcrl
cmp
or
push
inc
pop
push
add
testb
ljmp
pop
push
dec
int
sub
mov
mov
shrl
movsb
ja
orb
daa
cmp
push
je
ljmp
xor
js
mov
add
iret
enter
sub
out
mov
add
ds
shlb
xchg
push
les
aaa
out
or
mov
cmp
lcall
add
add
inc
fisttpl
pop
add
jns
mov
out
clc
adc
movl
mov
aas
mov
jmp
sarb
add
test
add
add
and
movsb
inc
cwtl
mov
scas
inc
popf
push
jle
cmp
sub
scas
addr16
jp
fisttps
subb
mov
adc
cld
pop
lcall
addl
iret
mov
add
fsubr
add
add
mov
add
or
add
jae
add
jns
add
jnp
int
sbb
fs
lret
mov
adc
xor
test
dec
hlt
push
movsl
bound
mov
in
cwtl
push
add
mov
decl
movsb
in
adc
pusha
js
out
mov
bound
cmp
adc
scas
test
iret
jo
inc
and
jo
push
push
fiadds
xor
jmp
add
movsb
lods
xor
add
add
add
sbb
xor
adc
mov
mov
add
and
call
mov
add
add
ret
in
rcll
add
dec
pusha
add
fmull
jns
sub
sbb
add
insl
sub
jae
testb
push
test
xchg
inc
mov
jae
add
add
xabort
jle
mov
push
push
and
es
test
add
add
aam
add
pushf
add
dec
inc
add
add
les
testb
insl
add
fadd
push
mov
mov
and
cmp
inc
jp
push
and
shll
or
in
leave
add
outsb
add
add
push
pop
lock
aaa
dec
imul
xchg
aas
testl
sub
inc
mov
mov
push
roll
lcall
xchg
and
popf
inc
jb
jl
pop
pop
mov
add
or
bound
cmp
xchg
insb
push
add
not
add
sub
fs
cld
js
rcll
mov
sbb
pop
jg
es
cmp
stos
xchg
ja
pop
or
push
leave
jno
nop
sbb
mov
aad
aad
mov
loopne
std
movb
popa
je
rclb
sub
fdivl
clc
ss
inc
xor
mov
pop
xchg
imul
cmp
dec
cli
jnp
mov
add
xor
add
pop
sti
sbb
sub
cs
dec
sub
xchg
pop
jg
mov
sbb
add
cmp
mov
dec
fsubl
dec
pop
mov
sub
jbe
push
loope
or
sbb
mov
fdivrl
cwtl
idivl
lods
or
pop
pop
js
cmp
aad
std
cmp
cltd
js
in
divb
das
clc
roll
mov
add
inc
jp
push
lods
mov
add
movsl
mov
adc
push
add
push
mov
nop
and
cmp
xor
inc
add
add
xor
add
shll
fstl
and
pop
ret
lahf
cs
add
test
lock
mov
repz
clc
add
add
jmp
xor
add
iret
cwtl
loopne
aas
cmpsl
fwait
xor
mov
jg
idivl
repnz
dec
add
lock
sub
aas
add
lret
repnz
sub
add
test
fisttpl
adc
mov
add
gs
sbb
in
cltd
cmp
aaa
add
add
cmp
shlb
jge
popa
test
rorl
and
rorl
fcom
mov
addr16
mov
imul
clc
popf
out
add
popa
push
inc
jo
lods
lahf
mov
push
ds
into
xchg
ret
cmpsb
hlt
jg
add
cvttps2pi
pop
cmpsb
push
add
daa
add
add
mov
jmp
cs
xchg
inc
jl
ret
outsl
adc
pop
fcoms
adc
mov
add
mov
mov
pop
and
cs
mov
je
scas
std
adc
pop
js
inc
cld
add
add
xchg
mov
jbe
mov
aaa
aad
movsb
jg
pop
mov
sub
sti
push
repz
sbbl
mov
dec
pop
push
push
add
push
dec
add
std
mov
test
cs
dec
lods
add
lock
fdiv
fiadds
cmp
fwait
dec
cmp
popa
jecxz
inc
rorl
stos
mov
icebp
incb
mov
ret
cmp
insl
add
pushf
push
mov
clc
out
add
int
call
in
push
es
push
xchg
xchg
icebp
xor
jo
sub
add
iret
inc
pop
into
xchg
inc
daa
arpl
in
ret
sbb
cmp
add
sub
pop
ror
gs
movsl
add
jg
aaa
xchg
ljmp
fistps
lret
in
jo
mov
repz
arpl
add
jb
mov
jae
jb
add
cmpsl
push
mov
jl
cmp
pushf
pop
mov
xor
sbb
xchg
push
xchg
dec
jg
stos
sub
add
add
imul
add
int
add
aas
stos
js
repnz
mov
add
and
roll
adc
ret
push
xor
stc
dec
mov
push
hlt
pop
add
lds
je
in
add
inc
loope
mov
mov
cmp
stos
lahf
pop
dec
pop
mov
sti
fs
cmc
fsubl
stc
add
add
add
sub
arpl
outsl
pop
in
jg
add
dec
clc
or
mov
add
jns
mov
lcall
push
sbb
shll
insb
pop
add
cld
and
in
dec
in
jg
repz
fbld
jmp
lcall
inc
xchg
mov
add
add
xlat
test
mov
mov
dec
add
and
ret
xor
inc
add
add
enter
fs
xchg
add
add
add
pop
sub
jecxz
nop
jmp
jb
and
cmpsb
popl
jle
mov
cmp
jb
xlat
rorl
les
pop
or
sbb
xchg
cmp
lock
pop
mov
cmpsl
ja
adc
adc
pop
call
add
sbb
std
daa
cmp
or
or
xchg
add
fmul
outsl
stc
or
outsb
bound
add
mov
ret
data16
loop
out
pop
jg
out
add
mov
outsl
add
cmp
dec
xor
add
adc
mov
jecxz
and
stos
add
add
or
push
jmp
cmp
mov
add
ret
add
out
push
out
inc
fs
les
rclb
mov
jmp
pop
cmpsl
inc
cmp
fsubl
aas
mov
add
sub
pop
mov
add
push
imul
pop
pop
lock
std
jecxz
add
lods
xor
add
add
cmc
rcrl
add
pop
push
mov
mov
lods
pop
pusha
or
push
popa
out
movsl
std
out
leave
dec
add
xchg
mov
pop
add
int
out
push
das
stc
add
push
icebp
push
add
pop
jae
xchg
mov
das
jo
les
add
mov
add
pop
sub
icebp
inc
test
and
icebp
or
xchg
cli
mov
add
adc
ds
loopne
aaa
dec
pop
pushf
or
enter
iret
shl
ds
adc
add
pushf
aam
add
mov
add
mov
loopne
mov
mov
add
sbb
jo
add
aaa
fadds
mov
lcall
mov
add
add
ficomps
add
add
pushf
add
jae
or
add
jns
ljmp
xor
mov
in
add
popa
add
sahf
xor
iret
xor
jo
outsl
int3
test
push
mov
inc
ror
xorl
dec
add
sbb
fadds
jg
stos
pusha
hlt
add
and
mov
movsl
mov
out
add
rolb
cmpsb
out
push
add
and
call
mov
sub
out
stc
je
or
insl
lds
lock
testl
jl
push
scas
shlb
cmp
mov
push
mov
pop
cmp
ror
dec
add
jecxz
addb
movsl
std
jl
leave
mov
pop
popa
add
add
cmpsl
push
popa
jecxz
enter
cs
imul
xchg
or
and
dec
add
sahf
jmp
jmp
jno
fxch
jne
mov
inc
pop
sbb
push
cmp
mov
popa
out
add
add
sub
push
jae
sub
popa
mov
sbb
lds
ljmp
fbstp
lahf
data16
shl
mov
dec
or
jle
gs
ret
lret
xor
sbb
mov
sbb
cmc
ljmp
fcoms
pop
lods
inc
dec
cwtl
aas
pop
rcrl
add
in
xchg
add
in
dec
pop
sub
mov
add
inc
dec
popa
jno
pop
and
cmpsl
push
mov
xchg
add
jle
inc
mov
and
add
add
jno
xchg
nop
into
add
shr
push
in
xor
ja
add
mov
add
pop
add
flds
cmpsb
mov
push
popa
sub
fisubrs
xchg
pushf
xchg
xchg
xchg
insl
outsb
imul
lret
jns
and
loope
add
in
cmp
mov
inc
mov
push
je
push
rcrb
pushf
jp
jle
not
aad
add
cmp
cmp
dec
jmp
and
imul
mov
pop
add
or
pop
in
add
jecxz
add
iret
mov
mov
movb
ljmp
loop
ss
dec
rorb
push
jnp
pop
int
data16
and
xchg
imul
dec
xor
add
mov
mov
pop
xor
dec
cmp
and
out
jnp
mov
repnz
mov
dec
mov
jb
inc
inc
mov
add
cltd
dec
out
or
mov
add
add
add
mov
fldt
xor
adc
mul
sbb
xchg
jmp
sub
adc
outsb
sbb
jne
add
pop
in
fs
cmp
push
or
pop
cmovs
jo
lock
add
dec
ret
add
mov
sbb
jns
inc
xchg
ds
or
mov
push
adc
push
dec
push
stos
fistpl
into
mov
and
cltd
inc
pop
aam
cwtl
add
ret
add
mov
out
jnp
nop
das
pop
pop
pop
int
sbb
sbb
cmp
lret
push
loop
imul
out
jmp
add
cli
sub
loope
lods
jp
inc
sub
out
lods
mov
popf
ret
and
es
or
or
mov
pop
gs
sbb
in
cmp
je
les
and
mov
rorb
cli
notl
mov
jns
mov
add
sarl
jo
inc
pop
roll
pop
ljmp
add
add
add
xor
jns
stos
cmpsl
fcmovnbe
mov
aaa
stos
add
lock
repz
popl
push
add
aas
sbb
sbb
scas
jge
sub
dec
push
pop
movsl
stos
pop
int
mov
test
js
insl
js
adc
pop
add
cmp
cmp
dec
loopne
popa
cmpsb
push
add
fdivrs
lock
je
cmp
mov
sub
jno
movsl
add
movb
outsb
cmp
jge
popa
sarb
outsl
shll
pushf
add
jno
add
repz
xchg
sub
add
stos
add
movb
outsb
clc
mov
sub
not
test
jecxz
cmpsl
cmp
popa
jecxz
mov
pop
and
add
add
adc
mov
lock
xorb
repnz
mov
or
rcrb
add
adc
xchg
dec
sbb
fidivrs
addr16
push
add
rorb
inc
ss
xchg
or
sub
imul
outsl
loopne
dec
xchg
or
and
lds
icebp
adc
scas
repnz
xchg
add
jg
push
stc
rcll
inc
jmp
cmp
in
rolb
test
mov
add
lret
jg
add
add
lods
dec
lea
sti
jmp
mov
pop
flds
or
cltd
xor
pop
clc
xchg
adc
out
test
add
jb
dec
xor
icebp
rorb
mov
and
push
ret
jae
arpl
mov
adc
xchg
pop
xlat
add
aad
dec
test
outsl
add
cltd
int3
insl
xor
pop
xor
add
jbe
dec
mov
scas
fwait
mov
hlt
add
call
xor
sbb
dec
lcall
push
or
mov
stc
scas
add
dec
aam
jno
sbb
lods
jo
push
sub
jae
lahf
addr16
popf
ja
scas
jb
add
xchg
or
dec
ret
add
cmp
add
notb
movsb
cmp
jae
enter
aaa
and
sub
mov
cwtl
push
into
dec
loope
ss
insl
push
adc
sub
rcrb
insb
js
mov
fwait
cmp
arpl
dec
cltd
xor
mov
add
daa
mov
or
je
cmp
ret
add
cmp
dec
push
in
call
addr16
lcall
push
xor
pop
adc
popa
add
adc
add
sti
push
push
int3
add
xchg
or
xor
mov
cli
adc
add
repnz
addr16
cli
fcomps
lods
std
xchg
add
add
add
dec
add
in
pop
jp
rcrb
push
jae
int
pop
add
xor
sbb
add
add
add
pushf
mov
add
bound
dec
mov
enter
mov
je
cmp
mov
pop
jmp
clc
xor
and
in
add
mov
xchg
mov
or
add
das
cmp
ficomps
cli
add
adc
add
sub
cmp
stos
cmp
inc
clc
jno
xchg
cwtl
in
and
jp
xchg
or
mov
or
add
lret
inc
push
mov
les
add
inc
pop
jae
cmpsb
mov
rcll
xor
int
jno
int3
pushf
mov
or
mov
out
push
cmp
jge
xchg
andb
add
shll
jae
pushf
adc
insl
aam
aad
add
mov
clc
cs
fildl
leavew
mov
cmp
add
add
test
dec
cmpsb
push
sahf
mov
cs
or
push
add
jne
jo
or
mov
mov
add
imul
ficoms
ljmp
int
add
jmp
pop
add
inc
cmp
xchg
ds
cmc
cmc
sbb
sub
sti
add
lea
and
fildl
sbb
repz
sbb
dec
add
js
add
gs
mov
in
xor
scas
add
lret
jp
cmp
and
mov
mov
dec
or
jns
sarb
mov
and
add
push
addr16
rcrb
mov
add
in
ret
imul
xchg
cli
stos
jae
add
push
sub
ds
enter
mov
pop
dec
sub
imul
nop
clc
sti
cmp
mov
xor
cmp
add
mov
and
ljmp
xchg
sub
fiadds
jb
lods
out
popf
add
jge
mov
cmp
mov
gs
cmp
sub
mov
aad
mov
inc
mov
pop
add
xor
std
sub
and
out
rcrb
sbb
push
nop
xchg
mov
sti
cmpsl
add
lds
push
mov
out
daa
aam
out
adc
mov
enter
loope
xchg
push
adc
loopne
gs
and
or
lods
outsb
rcl
imul
fbld
jnp
sub
pop
mov
or
jle
adc
xchg
in
pop
dec
sub
jle
lahf
add
jne
outsb
jno
mov
add
pop
ret
cmc
add
or
sub
push
push
add
pop
lods
jg
shr
inc
xchg
xor
or
sub
mov
shrb
inc
movb
imul
gs
or
inc
stos
add
andl
xor
cmp
mov
je
stos
dec
add
popa
fnstcw
cmp
jno
and
sub
add
lods
int3
add
aas
dec
ds
inc
sbb
xor
out
jp
fidivs
aad
jg
aam
dec
clc
mov
add
sarl
fcoms
mov
push
mov
pop
sbb
pop
loop
sub
mov
or
ret
pop
in
xchg
xor
adc
mov
adc
mov
add
sbb
cwtl
dec
popa
pop
inc
xor
pop
pusha
inc
mov
enter
sub
enter
sbb
repz
shll
fldenv
xchg
test
loop
dec
inc
imul
add
mov
xchg
arpl
fists
sub
lods
add
and
cmp
pop
inc
iret
add
js
add
int
jo
inc
or
pop
and
cltd
mov
add
movsb
into
jae
and
push
loop
and
dec
nop
add
add
fst
cmp
pop
js
and
repz
ds
call
jns
and
add
jo
out
inc
xchg
add
lret
inc
xchg
mov
fsubrl
pop
movsl
add
imul
sbb
imul
add
pop
cmp
add
test
inc
jne
fiadds
add
pop
xor
in
movsb
mov
pop
pop
adc
push
add
or
or
add
insl
add
lcall
push
and
lds
add
std
cli
out
fstp
das
add
push
js
add
cmc
adc
cmc
xchg
cmpsb
lock
out
add
add
popf
rcll
test
xor
sub
mov
push
dec
int3
aad
and
add
mov
xor
les
lahf
inc
add
add
mov
add
test
mov
add
xchg
sub
inc
not
push
fcomps
loope
sbb
jge
lods
adc
hlt
add
dec
inc
mov
adc
inc
icebp
cmp
or
inc
xor
and
cmp
sbb
stos
outsl
inc
in
iret
dec
cmp
cwtl
mov
test
es
mov
xchg
add
test
shll
xchg
inc
stos
in
add
xlat
scas
add
add
and
pop
out
int3
loopne
jne
cli
mov
imul
out
daa
lcall
pushf
push
xor
cld
add
sub
mov
pop
mov
testl
mov
xchg
shl
es
les
cmc
pop
or
adc
es
pop
addb
add
mov
sbb
add
imul
sbb
mov
out
in
jmp
rorb
out
pop
cli
popa
out
roll
stc
movsl
add
fsubs
scas
mov
sahf
aam
insb
add
or
adc
sub
jmp
stos
pop
dec
mov
imul
xchg
stos
rep
add
loopne
cmc
shl
daa
or
mov
outsb
sti
jnp
add
test
add
stos
add
or
cmp
mov
add
mov
aas
xlat
dec
xchg
fcoms
jmp
outsl
std
push
and
test
fsubp
cmp
fiaddl
inc
xor
hlt
in
cmp
js
outsl
lds
andb
and
out
ret
mov
add
add
add
sbb
shr
int
mov
ljmp
add
sbb
and
push
xchg
lret
add
pushf
add
jecxz
sub
repz
ss
addb
inc
scas
ffree
or
jno
add
incl
add
add
lods
jp
mov
shl
add
popf
in
mov
push
movsb
jae
adc
sbb
mov
ja
sub
ja
inc
add
les
movsl
out
outsl
add
aad
sbb
mov
jg
jbe
out
xlat
mov
cld
lcall
incl
push
xor
scas
adc
add
adc
cmp
add
hlt
ror
aaa
pop
mov
jge
rorb
out
outsl
add
add
adc
insl
xor
cwtl
inc
or
push
enter
add
mov
inc
xchg
jns
mov
and
push
enter
sbbl
and
faddl
ljmp
popa
ret
xchg
cmpsb
mov
cmpsb
add
sbb
dec
adc
das
add
mov
test
cli
and
jbe
nop
rorl
mov
out
lock
test
add
jmp
in
cmp
add
adc
mov
inc
lldt
aad
jnp
in
add
pop
pop
cmpsl
faddl
ljmp
or
subb
push
imul
out
sti
add
cs
adc
mov
cmp
mov
cld
pop
jno
mov
sub
xchg
dec
mov
xor
sahf
jno
aas
add
mov
movsb
sub
in
mov
dec
xor
push
add
mov
xor
cmpsb
mov
add
test
clc
xor
xchg
inc
call
push
dec
ja
cltd
loope
xchg
cmp
dec
push
das
xor
or
jge
push
mov
arpl
repnz
mov
push
dec
fistl
jno
xor
push
scas
ljmp
xor
pop
dec
mov
pop
xchg
nop
gs
and
adc
arpl
sbb
aaa
stc
loope
add
das
pop
add
mov
add
add
test
and
lea
dec
sub
sahf
lret
push
scas
dec
std
mov
fildl
mov
test
insl
jb
xor
add
repz
aad
add
scas
ds
cli
mov
ficoms
sbb
sbb
pop
andl
mov
stos
aas
hlt
add
inc
jo
dec
jle
mov
shlb
sbb
enter
mov
add
in
push
dec
add
add
dec
cltd
lcall
and
sahf
jg
add
fcoms
pushf
das
scas
pop
push
sub
xor
inc
pop
stc
jne
clc
xor
add
ss
cmp
dec
or
jg
add
mov
mov
add
jns
repnz
ljmp
or
out
shll
mov
jl
lods
add
fwait
aad
cmp
ljmp
dec
jns
bound
sahf
adc
sahf
cmp
cmpsb
in
xchg
scas
insb
or
pop
shlb
add
adc
imul
dec
js
test
add
pop
jnp
roll
sahf
testb
movsl
add
neg
out
scas
leave
lods
sbb
movsb
sbb
cmp
pop
sub
xchg
test
and
mov
cmp
cmp
movsl
movsl
cmpsb
push
aam
movsl
mov
imul
test
inc
jle
adc
add
cmp
push
push
aaa
adc
in
jg
push
and
test
xor
and
jb
hlt
shrb
mov
stos
mov
pop
adc
or
testl
add
xchg
adc
push
add
adc
pop
and
cmp
mov
jle
add
add
les
fwait
adc
out
jl
mov
add
test
adc
insb
ds
aaa
fists
xchg
pop
xchg
stos
imul
inc
cwtl
push
inc
add
sbb
mov
pop
lock
inc
push
add
mov
mov
sarl
add
cmp
call
dec
cmp
mov
pop
out
jp
jge
lret
or
mov
in
pop
popf
push
xchg
add
arpl
cmp
mov
push
sub
add
jno
inc
mov
stc
enter
sarl
xchg
jg
scas
sbb
add
jns
mov
mov
pop
mov
pop
stos
lock
xchg
lret
add
in
sbb
loopne
loop
sbb
mov
or
mov
pop
and
sub
inc
fsubr
loopne
es
add
pop
repz
add
lock
sub
cmpsl
fistps
enter
movsl
sub
lcall
pop
add
inc
add
mov
ds
js
cld
out
fsub
add
add
fdiv
cwtl
lods
add
pop
lods
xor
jno
push
add
and
mov
add
lods
mov
xor
cltd
mov
cmp
mov
mov
ret
mov
es
mov
lahf
scas
add
xchg
or
and
mov
int3
and
xchg
sbb
pushf
mov
add
add
fcmove
add
mov
int3
outsl
scas
cld
add
add
add
pop
int3
cwtl
in
jo
out
lods
hlt
inc
inc
aam
lea
xor
movsl
ds
les
cmovb
push
fldl
pusha
lret
pop
aas
leave
cmpb
fldcw
movsb
adc
cmp
or
add
imul
mov
mov
pop
cmp
fisttpll
loopne
test
and
test
add
and
sbb
adc
inc
addb
and
cmpsl
popa
fcoml
and
cmc
loop
push
add
nop
lods
rorl
add
pop
sbb
lds
xor
add
and
and
arpl
scas
xor
xchg
cmpsb
dec
cmp
add
mov
out
lcall
jl
ret
xor
ret
mov
add
pop
mov
add
jo
and
push
mulb
sbbl
sub
push
out
lods
in
bound
stos
mov
inc
adc
and
sbb
add
inc
add
xor
mov
testb
jo
addr16
pop
cmp
lret
cmpsb
and
imul
fdivl
cltd
call
pop
jne
jb
xchg
cmp
add
test
and
pop
movsl
jg
or
cmp
iret
push
insl
cli
imul
jmp
int
jnp
add
pop
and
jp
sbb
and
imul
push
js
xor
cld
fsin
cmp
mov
sti
jns
xchg
es
ljmp
mov
dec
sub
mov
out
add
pusha
xchg
in
sahf
add
leave
jmp
and
ret
jbe,pt
cmp
xchg
int3
mov
cmpsb
jnp
cmpsl
jb
insb
mov
loope
arpl
push
stos
add
xchg
arpl
xchg
jp
add
pop
sub
mov
add
insl
cmc
mov
aas
outsl
or
lea
fmuls
inc
dec
fadds
sub
cmpsl
insb
mov
add
je
jge
jmp
test
inc
cmp
lahf
add
add
movsl
imul
add
or
jecxz
mov
cmc
ss
sbb
sub
add
xchg
sahf
mov
add
push
push
xchg
sbb
into
push
sbb
mov
or
arpl
adc
xor
add
outsb
sbb
dec
xor
mov
lahf
add
pop
add
pop
sti
jae
sahf
sbb
push
loope
mov
fwait
inc
or
push
sahf
popl
incb
loope
add
rcll
inc
notb
push
xor
jg
adc
xor
xchg
es
cmp
sbb
xchg
mov
test
stos
data16
stos
push
jne
xor
sbb
js
std
add
mov
ret
mov
arpl
enter
stos
xchg
push
sub
mov
aam
pop
inc
lahf
insl
cli
push
mov
imul
popa
and
pop
je
inc
add
sete
fldl
imul
pop
loopne
dec
syscall
ss
add
adc
xor
adc
cwtl
cmp
or
or
fxch
xchg
test
mov
add
adc
out
lods
dec
cmp
push
std
outsb
and
out
mov
pop
add
fnop
mov
into
xchg
jae
add
add
xor
imul
or
in
mov
lret
mov
adc
data16
mov
xchg
je
fsubrl
out
stos
add
add
add
js
and
adc
lock
jae
mov
pop
lahf
mov
cmc
xchg
add
sahf
add
pusha
mov
cmp
lock
rcrl
push
iret
in
cmpsl
add
pop
add
push
lods
add
mov
push
jnp
loope
jo
dec
clc
add
cmp
add
add
pop
xchg
inc
xor
mov
push
or
sub
fldt
into
dec
daa
add
add
in
je
xchg
add
adc
mov
sbb
sub
inc
mov
aad
adc
scas
lret
ret
icebp
cmpsb
rolb
shrl
fadds
add
cmp
mov
lods
pop
lea
fs
xchg
xor
rolb
add
je
aaa
add
dec
or
mov
xchg
xchg
xchg
dec
mov
cmpsb
mov
pop
in
popf
jle
imul
incb
push
data16
pop
add
arpl
mov
test
pusha
js
iret
xor
or
mov
add
faddl
xchg
mov
test
add
dec
add
adc
fildl
rorb
sbb
mov
add
shll
outsb
sbb
repnz
add
sbb
push
mov
pop
xor
push
mov
loop
xorl
add
xor
mov
cmc
movsl
aas
mov
in
add
jg
xor
xor
jmp
inc
rcl
fs
fsubrs
std
lock
add
or
sbb
in
jns
add
sbb
add
xor
and
adc
push
nop
pop
add
add
xor
push
pusha
add
icebp
loop
mov
push
lcall
jnp
mov
aas
pop
xchg
fnstenv
mov
sar
add
aam
jecxz
or
rolb
jl
xor
mov
scas
xor
add
add
mov
push
ret
outsl
pusha
sbb
dec
mov
pop
jecxz
loopne
xchg
adc
add
add
nop
sbb
dec
ja
pop
rorb
add
out
push
add
test
sbb
xchg
insl
cmp
xchg
lret
popa
pop
popa
or
sahf
jnp
xorl
cmp
sahf
imul
xchg
movsb
scas
loopne
dec
stos
push
add
mov
shlb
mov
add
and
cld
movsb
ltr
cmpsl
clc
add
ja
xchg
sbb
mov
pushf
add
add
push
fnstsw
or
dec
imul
and
cli
aaa
data16
pushf
sub
into
daa
in
add
cmc
sbb
imul
add
jge
jp
xchg
sbb
add
add
stc
in
popa
stos
mov
and
jnp
jnp
ljmp
add
jp
mov
lods
imul
mov
dec
adc
inc
jge
in
cld
test
insl
xor
add
scas
mov
cltd
enter
sti
shrb
test
fiadds
add
rcll
cs
das
mov
add
or
dec
outsl
lods
add
add
cli
loope
inc
push
jg
jae
jg
ret
add
lock
xor
add
stc
ja
fsubr
lcall
cmp
pop
dec
push
add
ret
test
jne
push
hlt
fidivrs
in
cwtl
xchg
test
in
lret
lods
in
sub
pop
fldcw
aad
out
cmpsb
sub
pop
ljmp
add
add
sbb
mov
add
add
add
jae
inc
push
sub
push
inc
or
int3
outsb
add
inc
dec
test
add
int3
faddl
outsl
stos
dec
imul
int
pop
push
cmp
stos
or
lea
cmp
imul
pop
fidivl
stos
jbe
dec
scas
add
data16
test
and
mov
fs
mulb
pushl
adc
or
add
lock
xchg
add
xor
out
aam
or
ror
add
jbe
in
dec
nop
cmp
dec
sti
adc
jne
push
push
in
push
fldt
cmpsb
add
lret
push
pushf
es
leave
cmp
adc
add
addr16
xlat
xchg
test
add
add
or
fadd
mov
push
mov
rcrl
jns
lahf
jmp
cmpsl
ret
push
add
xchg
pop
jb
orl
sub
movsb
add
xor
mov
and
jmp
add
or
cli
adc
and
out
outsb
xor
mov
inc
sahf
jns
sbb
jmp
rorl
mov
dec
pusha
push
xchg
jns
dec
add
nop
inc
test
add
jno
icebp
int3
fstpl
daa
add
mov
add
add
pop
ljmp
jl
or
push
adc
lds
xchg
inc
jae,pn
neg
pop
add
add
int
sbb
das
xchg
xor
or
fstps
mov
xor
lds
mov
pop
rorb
leave
inc
add
sub
mov
sbb
or
push
sbb
push
inc
jg
add
pop
jbe
sarb
sub
dec
xor
add
out
scas
and
pop
repnz
jb
adcb
daa
sub
xchg
es
jge
arpl
divl
cmp
pop
mov
fisttps
xor
in
add
and
push
cmp
adc
xchg
dec
jle
sub
and
out
xor
xchg
or
fists
shlb
adc
add
cmp
add
lods
fildll
sub
sub
pop
insl
sbb
fwait
mov
lret
pop
fidivl
icebp
test
shl
shll
shrl
add
and
inc
add
cmp
sbb
cltd
inc
bound
adc
inc
jae
mov
faddl
add
add
push
into
push
leave
and
mov
pop
dec
xchg
and
push
push
add
test
add
int3
pushf
or
mov
xchg
clc
xchg
sbbb
xor
lods
xor
or
add
je
cmp
notb
cmp
mov
add
out
pop
add
loop
test
add
sbb
xor
push
arpl
enter
xlat
pushf
in
pop
sub
js
je
add
and
in
or
cmp
stos
mov
je
jae
jmp
insb
add
add
add
movb
xor
int
xor
push
std
lret
sarl
inc
push
shll
sub
inc
add
arpl
sbb
in
cli
inc
add
add
add
adc
add
jno
into
add
cs
ret
jmp
jno
clc
into
cli
xchg
lret
cltd
in
or
add
jg
xlat
add
or
std
dec
jae
shr
sub
stos
push
add
add
std
orb
jmp
shl
stc
popa
adc
push
adc
cmp
rolb
or
add
pop
pextrw
add
mov
inc
add
ds
sub
mov
insl
fimuls
lock
xchg
or
inc
or
cmc
mov
out
dec
mov
jno
jo
subl
add
loop
lcall
mov
and
add
mov
aaa
cs
sub
leave
insb
add
arpl
cs
out
mov
push
lds
add
sub
mov
add
clc
xchg
out
add
and
imul
sub
movb
je
adc
cmpsl
outsl
jmp
inc
ljmp
cwtl
add
or
push
cwtl
mov
mov
add
mov
jg
add
push
dec
mov
add
inc
push
sbb
mov
xchg
jmp
xchg
add
push
add
push
aad
xor
and
aas
push
ret
aaa
push
inc
repnz
rolb
pop
aad
add
mov
add
fbstp
inc
cmpsl
addr16
movsl
add
cli
cmpsb
add
sub
inc
rcrb
add
dec
mov
mov
lods
scas
mov
sbb
mov
adc
xor
sub
add
or
and
aaa
mov
cmpsb
mov
ds
pop
xor
cmpl
mov
movsl
cmp
dec
testb
insl
push
cld
mov
mov
xchg
push
push
int3
and
dec
ret
push
or
or
bound
add
mov
test
add
jge
adc
sub
into
ret
cmp
mov
aas
enter
aas
cli
fdivrs
lret
jmp
gs
iret
mov
out
and
data16
repnz
push
popa
cmp
push
fnstsw
dec
jo
push
fcomps
dec
dec
xlat
xor
push
ja
cltd
or
mov
inc
out
rcr
lcall
outsb
sbb
cmp
cs
add
or
inc
add
lock
add
add
add
inc
add
shl
add
adcb
add
mov
xchg
lods
add
mov
pop
decb
insb
shl
cmpb
sbb
imul
shl
add
ljmp
jecxz
and
push
and
out
pop
lret
sbb
hlt
pop
pop
mov
out
hlt
inc
aam
mov
mov
rcrb
inc
and
inc
mov
add
daa
scas
jp
ljmp
mov
sarb
xor
push
xchg
movsb
add
push
jns
jno
call
frstor
mov
pop
gs
add
or
adc
cmp
mov
pop
jno
or
les
xchg
out
sbb
push
loop
xchg
pop
dec
popa
rolb
mov
repz
stos
or
popa
add
pop
add
add
fdiv
jl
mov
fdivr
aam
jns
or
je
pop
jl
push
sub
pop
imul
add
fistps
push
imul
cmp
scas
pop
rcrb
stos
aas
push
js
or
jp
add
add
or
mov
flds
loop
add
add
stos
test
or
cwtl
jmp
jno
pop
cld
inc
imul
jecxz
in
inc
push
pop
mov
add
mov
pop
add
xorl
sub
add
push
imul
pusha
loop
add
cli
stc
mov
stc
outsl
addr16
dec
arpl
leave
mov
jmp
mov
pop
out
popa
xchg
test
lods
add
add
rolb
subb
sub
cmp
push
das
xor
movsl
mov
bound
dec
mov
inc
add
stc
mov
mov
add
mov
add
dec
mov
mov
fistpl
lcall
mov
xchg
adc
lret
mov
ljmp
adc
jnp
sub
dec
add
lea
lea
cmpsb
ret
mov
repz
out
ljmp
push
std
mov
pop
pusha
mov
xchg
fildl
icebp
push
mov
aaa
xchg
rcll
cmpl
ret
aas
sbbb
add
cltd
adc
mov
add
and
pop
xchg
cmc
mov
loope
aad
movsb
sub
sub
or
nop
fbstp
jl
sbb
pop
add
test
add
add
xor
mov
push
rclb
fldenv
mov
add
add
shll
xchg
dec
fsubl
push
inc
scas
scas
pop
hlt
mov
add
dec
lret
add
jnp
sbb
popf
dec
mov
int3
add
ja
push
sti
pop
in
mov
pusha
push
sti
and
clc
add
cmc
pusha
fimull
sysret
jns
pop
shrb
roll
cmpsl
push
mov
jecxz
dec
dec
out
repz
pop
lods
aad
push
add
gs
ja
imul
add
mov
sti
mov
cmp
ljmp
xor
xor
shld
cmpl
int
mov
mov
mov
cli
fiaddl
icebp
data16
mov
cmp
outsb
add
pop
add
adc
ss
out
pop
mov
cmpb
jbe
or
jmp
mov
lret
movsb
jb
adcb
fmull
add
dec
cld
push
gs
cmc
ret
sbb
mov
mov
out
sbb
cmpsb
sti
mov
push
jle
mov
repz
bound
cld
xor
test
lahf
pop
cli
add
lcall
mov
sar
mov
movl
dec
call
inc
add
roll
xor
xchg
fdivl
pushf
sbb
in
mov
mov
push
loopne
add
cmp
xor
and
cmp
add
lahf
dec
aaa
addl
cmp
inc
cmpsb
xlat
inc
cmc
gs
fistl
stos
mov
mov
jno
repnz
and
roll
cmp
testb
imul
enter
push
popf
icebp
push
adc
dec
push
into
aaa
add
mov
xchg
aas
aaa
sub
add
pop
or
aad
add
outsl
add
aad
popa
fs
pusha
or
mov
in
outsl
adc
inc
push
push
sub
inc
mov
nop
lret
xor
sub
lods
or
add
mulb
push
lret
add
lret
dec
movsb
aaa
repz
loop
aam
mov
mov
test
xor
divb
xchg
fs
bound
mov
xchg
and
das
mov
scas
stos
add
lock
flds
movsl
sbb
push
cmp
sbb
xchg
into
cmpsb
mov
add
test
lock
popa
adc
add
sbb
call
and
in
imul
lods
fmull
repnz
std
cwtl
aad
gs
add
das
int3
mov
add
cld
loopne
hlt
xchg
push
adc
add
xchg
andb
mov
fiadds
adc
sub
ret
jecxz
rorl
add
sbb
add
fimull
fadds
ljmp
push
mov
in
xchg
dec
xchg
adc
mov
lret
dec
add
mov
data16
cmp
in
push
addr16
roll
test
add
aas
xor
enter
xchg
add
mov
dec
into
jb
sbb
or
dec
ret
mov
pushf
outsb
outsb
es
add
pop
xor
sbb
adcb
cmp
add
aaa
stos
cltd
in
icebp
out
mov
add
push
add
lock
dec
jp
int
inc
jbe
xchg
mov
aad
hlt
hlt
movb
jb
lcall
int3
lds
add
add
add
jnp
popf
jle
pop
jle
mov
negb
test
mov
fsubp
cmpsb
ret
imul
andl
push
add
add
sbb
add
xchg
push
cli
add
lahf
push
pop
pop
jne
mov
inc
xlat
cmp
repz
add
mov
arpl
mov
xchg
lret
ja
sub
pop
cltd
or
push
ss
es
cmc
add
add
aaa
mov
add
imul
fxam
fwait
out
xor
dec
sub
add
cmp
rorb
adc
pop
push
add
stc
insl
mull
add
ds
fldt
add
add
pop
mov
mov
pop
xchg
clc
stc
mov
rol
add
ja
xchg
xchg
popf
mov
mov
rolb
sbb
cmp
jo
inc
jg
pop
or
mov
push
std
mov
inc
pusha
jno
add
add
test
jp
aaa
fld1
addb
add
fadds
psubd
xchg
add
pop
mov
int
mov
sbb
repnz
mov
orb
add
lods
addr16
add
cmp
push
xlat
mov
aas
xlat
mov
fdivr
jbe
xchg
pushf
jne
mov
pop
loop
std
ucomiss
pop
push
adc
popf
mov
pop
loopne
mov
cmpl
add
adc
pop
leave
or
sbb
add
add
jl
lds
outsb
cmp
aas
repz
dec
add
repnz
les
cmp
sub
scas
fmuls
and
sub
out
push
xlat
rolb
ja
push
decb
test
sbb
xchg
inc
or
jo
lods
mov
mov
jg
xchg
push
popf
add
jmp
lods
addl
icebp
aas
into
leave
cmp
ss
add
mov
pop
mov
push
add
jae
rcr
add
jns
add
mov
out
mov
sbb
lret
mov
mov
add
sar
add
rorl
add
mov
pop
pop
mov
fidivl
or
mov
fimuls
inc
fs
mov
cmp
loop
roll
imul
inc
insl
xchg
fcmovnb
rorb
add
adc
movsl
cmp
push
test
les
std
imul
mov
push
ja
decb
add
movb
fs
int3
lret
icebp
dec
push
pop
add
ret
shll
mov
fwait
test
pop
pop
dec
stos
sub
add
jle
mov
xchg
sub
mov
cmp
lea
push
mov
loope
lret
add
mov
lret
jnp
mov
or
dec
loop
add
data16
add
fstps
mov
gs
add
out
inc
testl
les
ret
dec
lds
std
int
es
add
xor
test
pop
mov
cli
jns
push
aaa
jge
xchg
pop
cmc
rcll
cmp
icebp
cmp
or
ret
sub
push
pop
push
into
out
sbb
sub
and
aas
bound
clc
ljmp
sbb
jl
add
lods
cmpsl
ret
xor
inc
push
leave
adc
adcb
sub
bound
data16
xchg
and
sbb
xor
mov
cmpsb
jg
pop
popa
sub
call
jno
loope
pop
mov
pop
sub
insb
movsb
cmp
push
push
lods
jecxz
fnstcw
inc
xor
mov
jecxz
add
aaa
mov
cmp
add
test
inc
cmp
xor
inc
inc
mov
dec
loope
adc
clc
insl
faddl
cmpsb
inc
cmc
aas
scas
out
mov
lods
add
push
pushf
xor
adc
or
dec
into
loope
addb
xchg
mov
pop
bound
rcll
clc
add
enter
pop
sbb
cwtl
mov
jb
into
jo
lea
mov
push
shl
fsubl
jbe
fbld
or
dec
jl
movsb
push
pop
lcall
inc
inc
add
dec
mov
xor
jbe
mov
pop
mov
xchg
call
add
cs
add
push
or
lahf
and
pop
add
add
xor
push
add
xchg
add
add
add
dec
mov
rcll
push
sbb
mov
adc
sub
jp
inc
fsubrl
cmp
test
push
in
stos
loope
insl
add
mov
stos
add
cmp
or
xchg
int3
ret
inc
sti
adc
push
fstps
inc
fisubs
and
add
sar
mov
fisttpl
lea
call
shrb
push
iret
lods
push
xchg
scas
psubq
inc
in
xchg
xor
cmp
loopne
add
push
add
lea
mov
gs
std
mov
rcr
inc
add
sbb
das
pop
mov
outsl
add
add
add
cmpsl
fwait
add
add
mov
add
add
fidivl
iret
jmp
pop
loop
in
pop
mov
fdivrl
add
aaa
inc
roll
adcb
xor
cmp
lcall
loopne
jp
add
enter
push
mov
xchg
sbb
lahf
add
mov
sbbl
cmp
fadds
dec
fadds
aad
adc
add
push
iret
jge
or
lret
sub
es
fidivl
dec
addr16
out
mov
mov
dec
icebp
add
leave
movsb
scas
in
jbe
adc
push
push
mov
sbb
xchg
mov
push
jmp
lahf
cmp
test
aas
lods
mov
iret
sub
inc
mov
pop
adc
xor
sbb
test
rcll
xchg
cmp
dec
add
add
mov
aam
mov
push
std
jl
andb
xlat
insb
filds
out
subb
mov
gs
mov
xor
out
sub
jl
sub
push
cmpsl
inc
sub
mov
inc
add
out
jmp
xchg
jno
data16
mov
movsb
mov
inc
xor
sbb
pop
scas
add
lods
mov
hlt
sbb
jbe
pop
mov
mov
movsb
push
or
inc
add
jno
add
sahf
mov
add
jns
jnp
mov
daa
xchg
xor
es
add
rorl
add
inc
push
xor
adc
inc
jbe
or
movsl
popf
fiaddl
pushf
or
xor
add
hlt
ss
push
lcall
cmp
sbb
insb
add
fldl
daa
xchg
out
pusha
mov
push
xor
ss
imul
add
int3
pop
xchg
and
mov
lods
popa
lods
jge
lahf
scas
xchg
fldt
jp
cld
xlat
cmp
dec
bound
cmpsb
lods
nop
gs
js
andb
rorb
roll
popa
fwait
mov
scas
mov
aaa
cli
add
add
inc
inc
in
ffreep
mov
cmpsl
sub
cmp
sub
cmp
and
dec
mov
add
xchg
and
popa
loop
sbb
jno
andb
mov
sbb
and
adc
push
or
test
add
add
sbb
dec
pop
mov
xor
cmpsb
add
add
push
mov
or
sub
cmc
imul
push
rcll
and
lea
es
test
aam
dec
add
cmp
fwait
jb
pop
jae
add
adc
jno
jns
clc
ss
shrb
scas
mov
outsl
mov
and
data16
cmp
test
test
mov
and
into
jge
lods
add
inc
pop
mov
xchg
loope
sbb
fs
into
hlt
fsub
mov
mov
and
jae
sti
add
leave
sbb
adc
sbb
adc
iret
adc
jb
dec
jmp
sbb
jmp
repz
inc
dec
cltd
scas
cmp
inc
xchg
add
mov
add
xor
movl
xor
and
add
int
pop
pop
pop
sub
loope
adc
add
add
jno
add
add
repz
cmp
or
mov
sub
dec
add
mov
lret
dec
adcb
push
mov
fsubs
or
dec
add
mov
xchg
sbb
add
fiadds
jl
cmp
mov
jne
aad
mov
or
lods
dec
imul
stos
std
lcall
mov
movsb
mov
mov
stos
lret
fidivrs
in
lods
pop
xchg
lret
or
mov
push
sub
sbb
stos
mov
push
mov
inc
cld
fwait
into
sbb
push
arpl
fmuls
and
xchg
out
pusha
adc
popf
xchg
and
add
add
inc
inc
jecxz
rclb
loope
xchg
dec
sahf
inc
or
stc
pop
ljmp
je
mov
pop
insb
addl
add
mov
lds
jg
and
js
xchg
dec
sub
ror
repnz
mov
shrl
fs
addr16
mov
adc
sub
or
cmp
shll
and
cmpsl
fcomps
call
int3
push
or
add
stos
in
push
cmc
aad
mov
xlat
fiadds
pop
andl
fsubs
popl
jle
ja
hlt
dec
lds
imul
hlt
push
add
sub
arpl
rcrl
mov
push
call
js
add
stc
xchg
add
xchg
aam
add
add
and
jo
sarb
and
xor
das
rol
enter
push
mov
loope
mov
add
cmpsb
dec
fldt
cmp
out
add
add
xchg
mov
fs
fimull
incl
loop
sahf
add
jmp
lock
pop
sbb
ljmp
dec
sbb
add
mov
aas
sub
add
std
sar
add
fisttps
add
xor
roll
add
jle
push
push
add
mov
std
sub
dec
add
jecxz
frndint
add
scas
lock
fwait
add
xchg
cmp
das
cmpsb
aas
mov
jle
jbe
loop
icebp
mov
sub
mov
pop
add
xchg
stc
scas
cmpsb
mov
movsb
lods
fcom
xchg
jae
in
mov
add
sub
xchg
fiaddl
add
sti
insl
cmp
mov
add
ja
inc
stos
mov
enter
outsb
aam
sahf
push
cmpsb
hlt
and
movsb
sbb
cwtl
jmp
xor
mov
cmp
sbb
or
fistpll
insb
ss
add
xchg
ja
push
xchg
xor
cmp
arpl
mov
stc
mov
mov
add
dec
adc
cmc
mov
xor
iret
add
jo
outsl
outsl
adc
add
pop
adc
incb
lret
shll
hlt
aad
mov
push
push
nop
ficoml
pop
in
xor
xor
jne
jle
cmp
inc
add
mov
fdivr
rolb
call
xor
add
mov
mov
cli
stc
add
push
cltd
cmp
fs
int3
jge
jmp
into
xchg
add
pop
faddl
popl
imul
jmp
movsl
out
mov
mov
xor
mov
sub
cmp
push
roll
push
fisubl
cmp
mov
and
and
cmp
sub
add
add
fcomip
xor
std
sbb
inc
cmp
push
pop
add
pop
cli
adc
sub
test
lds
pop
stc
mov
jnp
add
cmc
add
xchg
inc
sti
push
xor
pop
pcmpeqb
sbb
cmp
xor
and
fdivs
cli
mov
mov
add
dec
pushf
cmpsb
adcl
fwait
xor
jmp
mov
lds
jl
lahf
imul
inc
cmp
add
mov
cmc
adc
pop
add
mov
add
mov
or
and
or
ja
jle
imul
js
das
stos
cli
adc
sbb
inc
ret
lea
sub
push
pop
pop
xor
hlt
cmp
cli
dec
das
push
call
add
add
int
fisttpll
in
out
mov
add
add
scas
add
mov
add
aam
push
add
add
cmp
push
fbstp
adc
pop
jmp
add
imul
enter
cli
outsl
pushf
add
into
add
fisttpl
cmpsb
add
mov
pop
jl
add
aas
mov
jo
addr16
sub
jns
add
imul
add
add
mov
test
inc
add
adc
jecxz
hlt
pop
and
fs
jb
outsl
adc
add
add
popf
inc
and
cmp
fwait
xor
iret
jae
add
pop
xchg
fmuls
imul
mov
sbb
mov
mov
add
dec
enter
push
adc
mov
mov
pop
sti
jp
dec
mov
xor
add
cltd
lock
sub
enter
xor
movb
jno
lock
pop
imul
pop
lret
mov
das
and
pop
stc
cmpsl
cs
popf
sub
fnsave
cmp
sbb
popf
add
or
sbb
bound
incb
faddl
popa
jle
lret
push
fildl
in
sbb
adc
icebp
add
mov
lock
mov
sbb
test
dec
push
mov
je
adc
xor
mov
jb
imul
stos
mov
dec
lret
faddp
cmpsl
mov
mov
mov
rcrl
mov
dec
test
divb
pop
stc
add
leave
lret
pop
pop
add
in
add
add
xor
outsl
add
dec
lods
lcall
inc
sub
fldl
xchg
hlt
shlb
rcrb
fnsave
mov
dec
push
repz
movl
frstor
mov
add
mov
mov
or
add
jecxz
add
iret
xor
loopne
jge
pop
add
jg
and
fwait
or
sbb
ret
outsb
aad
jbe
mov
adc
add
rol
clc
cmp
lahf
lock
sarl
sub
lods
js
and
or
and
mov
inc
sbb
and
sarb
add
and
shll
xchg
xlat
sub
cmp
in
sahf
pop
pop
adc
dec
iret
addr16
sub
in
mov
xchg
lmsw
fbstp
add
out
cltd
imull
int
push
sarl
adcl
lret
inc
pop
iret
xor
int3
clc
lret
cmpsl
add
iret
add
outsb
mov
ljmp
push
push
adc
sbb
push
add
scas
cmpsl
mov
dec
sbb
filds
push
into
mov
clc
mov
dec
jne
repz
imul
and
rclb
push
mov
test
jg,pt
add
add
ljmp
add
pop
repnz
out
add
jp
add
faddl
sbb
sub
fs
mulb
cmp
aad
movsl
sub
add
test
mov
sub
adc
push
and
push
add
push
pop
jl
repz
mov
mov
repz
and
add
mov
mov
cltd
add
add
lcall
jge
in
push
xor
mov
push
lea
dec
pop
mov
add
into
cltd
mov
lock
add
jbe
punpckhbw
fdivrp
inc
lcall
aaa
imul
in
outsl
xchg
add
or
nop
jmp
xor
fdiv
add
pop
xor
inc
cmpsl
mov
ja
push
leave
dec
adc
test
sub
mov
ret
add
stc
popa
leave
fldcw
roll
mov
loopne
adc
xor
add
dec
sbb
sbb
gs
push
mov
ljmp
mov
add
cmp
aam
add
pusha
shll
jp
xchg
adc
aad
add
nop
jb
scas
adc
jecxz
jmp
fdivrp
or
push
dec
imul
je
xchg
push
fwait
add
sti
imul
push
sbb
roll
enter
and
xor
jmp
es
and
imul
loope
mov
lods
inc
push
aaa
jmp
or
and
nop
inc
add
in
dec
scas
mov
jno
jge
cltd
mov
pop
inc
adc
lret
mov
mov
nop
ja
jo
sbb
cmpsb
mov
mov
cmp
xorb
std
add
push
or
jbe
jno
sbb
xchg
jb
int3
pop
mov
jbe
push
jge
lcall
pop
or
cld
and
mov
mov
inc
inc
jo
test
dec
push
dec
mov
nop
std
mov
aad
and
push
pop
add
jae
mov
sbb
jmp
fiadds
push
add
mov
push
sbb
fadds
icebp
xchg
iret
jmp
cli
jmp
inc
xchg
inc
add
icebp
push
add
pop
stc
push
out
or
out
test
add
leave
pop
fisubrl
jnp
fcoms
es
cmp
ret
jmp
mov
add
add
add
stc
lret
testl
push
mov
jle
mov
enter
in
mov
sarl
mov
and
add
add
add
add
adc
shlb
sub
add
sahf
sub
xchg
jnp
lods
sbb
aad
or
add
loop
and
les
mov
and
fsubl
mov
cld
dec
add
mov
je
adc
jg
mov
sub
cmp
sbb
adc
popl
push
aam
dec
loop
xlat
aam
inc
jae
sti
xchg
jae
movsb
in
sahf
pop
xchg
add
or
add
mov
sub
sub
shll
pop
jge
add
popa
jne
mov
adc
cmpsb
sub
or
cmp
mov
test
push
jmp
mov
ds
enter
js
insb
or
daa
jnp
stos
pop
push
jg
jp
dec
sbb
addl
xchg
rcrb
cmp
mov
jns
lret
push
fdivp
xchg
clc
rolb
js
clc
jae
jge
test
add
addl
sub
int
push
xor
inc
inc
out
pop
call
xchg
mov
dec
nop
add
dec
sub
mov
adc
loop
jo
ret
insb
mov
in
and
adc
add
xchg
push
pop
clc
cltd
lret
out
sbb
insl
filds
fldenv
xor
hlt
add
fwait
daa
xor
jnp
roll
sbb
pop
mov
cmp
fdivr
lods
xlat
insb
mov
inc
insb
movsb
imul
add
mov
push
push
mov
mov
adc
movsb
or
xor
mov
je
jno
jecxz
pop
inc
adc
mov
and
add
xor
push
mov
add
add
sub
push
scas
out
imul
mov
repz
lds
add
pop
xlat
cmc
cmp
push
adc
add
adc
rolb
or
jl
mov
iret
sub
mov
test
mov
ds
jl
mov
add
popa
add
shr
dec
jne
mov
sub
ret
orl
in
iret
fldl
cmpsl
xchg
int3
fnstcw
sub
push
loopne
push
inc
insb
dec
xor
test
std
dec
subl
push
cmp
repnz
lods
adc
call
add
js
lahf
dec
or
ret
add
mov
push
ret
fsubs
add
sti
out
mov
mov
cmp
loopne
mov
lret
xor
cmp
pop
lods
cmpl
push
rorb
push
out
dec
add
test
lcall
jmp
fisubl
push
jae
bswap
loope
inc
adc
addr16
mov
imul
test
and
mov
loope
add
adc
adc
shll
jl
outsl
add
out
jle,pn
mov
mov
jle
sbb
psllq
addr16
jl
nop
xor
fs
sub
sti
pop
pop
sahf
xchg
cmp
mov
adc
mov
adc
in
call
mov
and
push
inc
push
cmp
movsl
add
jo
ret
add
sahf
inc
jo
sub
cmc
data16
xor
scas
add
xor
aaa
add
aam
lock
in
test
add
add
inc
and
jmp
jl
cli
xor
pop
add
int
inc
dec
cmp
and
jmp
mov
add
xchg
jae
test
sbb
lock
test
sub
sbb
mov
daa
outsl
xchg
pop
sub
clc
mov
add
mov
ret
or
ljmp
punpcklbw
add
out
scas
adc
sbb
dec
adc
and
negl
add
pop
jbe
loop
add
xor
mov
sub
adc
xor
out
sub
jae
cltd
push
mov
sub
movsb
lods
adc
out
add
out
add
or
aas
or
js
pop
pop
dec
mov
inc
test
es
js
scas
shlb
push
fst
or
add
aad
das
mov
sbb
add
inc
hlt
aaa
push
add
jle
adc
or
repz
ljmp
jae
push
divl
or
add
dec
ss
je
cwtl
mov
mov
lcall
xor
and
mov
push
add
xchg
jae
gs
adc
adc
leave
add
mov
out
add
pop
add
xchg
jmp
inc
add
dec
pushf
mov
add
sbb
std
dec
mov
mov
pop
jae
jp
inc
sub
mov
bound
lea
es
jo
notb
xor
iret
lret
sbb
pusha
xor
xchg
and
add
test
sub
outsb
sar
lods
adc
addl
add
ljmp
stos
dec
and
push
add
lods
bound
or
add
insl
add
outsl
mov
sbb
lcall
jne
and
xor
int3
add
cltd
and
stos
xchg
add
fistps
mov
adc
mov
mov
stc
add
adc
pop
or
add
test
mov
fisubl
mov
pop
jecxz
icebp
lds
test
pop
push
lods
arpl
sbb
rorl
pop
fsubp
iret
or
dec
mov
sub
lahf
sbbl
out
push
and
aad
pop
aas
adc
popa
out
pop
out
loop
add
pop
push
add
fdivr
lods
pop
cmp
or
jnp
push
call
add
dec
jge
mov
in
pop
adc
sub
sbb
mov
add
testl
mov
cmp
add
cmp
add
fistl
fadds
xor
outsb
popf
out
js,pt
movb
push
ljmp
add
mov
add
mov
movsb
add
mov
and
mov
mov
adc
jo
ret
mov
sub
and
cmp
jge
cmp
or
xchg
add
pop
pop
add
mov
mov
in
cld
cs
push
xchg
xor
out
pop
dec
jle
dec
test
add
lods
mov
dec
xor
lods
add
out
xchg
and
add
outsb
add
inc
cmp
xlat
xchg
pop
sub
loop
add
or
jmp
cmpsl
xor
cmp
dec
idivb
sbb
jb
lock
fxch
scas
pop
mulb
mov
inc
mov
sbb
jns
nop
inc
out
clc
aam
and
psrlw
into
and
cmp
je
and
and
outsb
les
xchg
xlat
dec
inc
lock
inc
mov
in
aad
roll
call
add
adc
add
cmp
andb
mov
mov
movsl
stc
add
sarb
loope
xor
loope
add
sahf
rcl
push
cmp
pusha
jle
aad
in
mov
pushf
sti
adc
fistps
mov
and
stos
gs
add
xchg
addb
sub
je
notl
sub
fwait
lcall
pop
lds
lea
and
cmpsb
mov
cmp
das
cmc
cmp
aam
sbb
push
jb
repz
add
mov
cmp
pusha
ss
lds
mov
mov
loop
test
add
jno
arpl
iret
jge
dec
pop
and
add
shr
xor
stos
add
add
cmpsb
addr16
and
fcomps
jno
cwtl
pop
add
sahf
arpl
jns
jae
xchg
mov
dec
add
cmpsl
sub
test
popf
add
push
test
and
rcrl
idivb
ss
xchg
xchg
adc
je
subl
cmc
add
repz
adc
data16
add
sub
xchg
pop
lods
loopne
add
es
in
cmp
cmp
fcoml
rcrb
mov
inc
mov
call
sub
jae
ret
lret
add
gs
negb
adc
int3
testl
fcomip
cld
dec
add
fimull
xor
xchg
jnp
shll
adc
mov
addl
xchg
jp
add
das
enter
add
sti
cmp
andb
sub
xor
mov
sbbl
adc
ds
sbb
cmpsb
cmp
adc
xor
add
mov
mov
cltd
xchg
xor
fadds
ja
inc
push
jnp
test
fs
add
scas
dec
std
sub
fimull
add
mov
push
mov
or
iret
add
and
pop
adc
dec
xchg
pusha
sar
add
daa
and
or
xchg
mov
xor
les
lea
ret
push
repnz
inc
xchg
add
sahf
sbb
mov
out
mov
xor
add
fisttpll
add
adc
mov
sbb
sub
adc
mov
add
mov
jnp
jl
es
test
and
adc
data16
mov
mov
add
and
loopne
and
ret
add
repz
cld
clc
movb
outsb
mov
sub
xor
cmp
out
lock
xchg
mov
mov
test
lcall
add
faddl
jl
mov
mov
mov
popf
loopne
jae
mov
jp
pop
movsb
dec
pop
in
mov
dec
push
jo
mov
rol
stos
xor
dec
mov
add
test
shlb
fadd
pop
mulb
inc
notl
cmpsb
dec
mov
sub
add
loope
lods
pop
jge
dec
cmp
add
mov
outsl
popf
mov
add
stos
xchg
push
aas
add
push
inc
mull
fwait
hlt
pop
es
inc
fsubrl
sahf
and
xor
cvtpi2ps
mov
jl
mov
push
aas
je
ret
jae
or
xor
sub
push
add
rclb
add
mov
stc
mov
outsl
mov
adc
lret
mov
pop
push
enter
mov
and
add
and
inc
dec
xchg
mov
mov
add
or
popf
pop
mov
ret
iret
or
cmp
mov
jo
xor
push
cmp
inc
out
lcall
scas
add
out
xchg
clc
cmp
std
and
lock
aad
cmc
push
push
fisttpll
fcomps
jbe
mov
faddl
add
inc
rcll
mov
push
in
clc
sbb
fildl
sbb
pop
and
in
cmpsb
pop
sti
nop
lock
and
push
pop
sbb
fcompl
stc
xchg
ljmp
movsb
add
subl
je
imul
aaa
leave
jle
loopne
fwait
add
mov
jb
push
rcr
repz
fcmovnu
pop
leave
test
cmp
add
imul
ficoms
addl
push
gs
jns
hlt
inc
push
add
or
xor
fsubr
xchg
adc
add
mov
add
xchg
inc
cli
js
aam
fisubl
cld
pop
or
mov
dec
cmp
jb
mov
add
adc
push
sbb
push
frstor
das
in
and
sub
fiadds
add
xor
mov
test
push
pushf
ss
cmp
int3
imul
sub
add
jge
loopne
imul
mov
test
leave
cmp
movsb
arpl
jnp
add
sub
jp
add
cmp
arpl
aad
jmp
push
out
jg
mov
pop
cmpsb
inc
and
lds
push
cmpl
cmp
or
add
add
sbb
enter
cmp
data16
sub
add
nop
add
mov
mov
icebp
xor
shl
dec
xchg
fdecstp
movsb
in
lea
loopne
dec
dec
pop
xor
ret
and
call
cmp
cli
aad
pushf
pop
add
mov
insb
jno
cmp
repz
stc
xor
add
xchg
icebp
push
sarb
stos
das
sub
jne
add
leave
jmp
xor
add
repz
mov
cmp
jp
add
xlat
or
mov
out
movsl
and
xor
jne
pop
add
pushf
lds
dec
xchg
or
bswap
jbe
and
dec
or
adc
cmc
insb
jge
lea
int3
movsl
enter
ja
popa
cld
push
sahf
add
mov
out
leave
mov
jg
movsl
cmp
add
outsb
lds
add
add
cmpl
leave
mov
fbld
ret
test
mov
repnz
lret
mov
sbb
pop
jae
sahf
clc
je
or
and
pushf
adc
out
rorb
out
add
cli
fwait
mov
add
adc
jmp
xor
fs
add
cli
repnz
jp
in
inc
inc
pop
lret
mov
add
xchg
add
or
sbb
fsubrp
test
jmp
push
mov
lods
mov
add
mov
stos
jae
fwait
mov
mov
aas
jg
inc
addr16
repz
push
add
pop
pop
adc
inc
inc
daa
nop
sahf
inc
in
sbb
mov
ret
add
cmpsl
add
add
aaa
addl
add
add
sbb
pop
push
xchg
addr16
fwait
inc
and
fdivrp
cmc
jecxz
ficoml
cld
add
push
jecxz
not
jge
cmp
cmp
pop
leave
sbb
cmp
call
dec
addr16
inc
cs
xor
add
push
cmc
mov
inc
loope
mulps
lea
push
jbe
into
jo
pop
aaa
xor
repz
inc
fcomi
cmp
pop
movb
push
add
add
sbb
notl
sbb
add
ss
cmp
jnp
xorb
ret
lret
in
add
add
xchg
pop
jbe
cli
xchg
sbb
add
insb
sbb
mov
cmp
faddl
push
insb
mov
cmovb
out
push
add
inc
mov
cmc
push
ffreep
mov
std
or
cmp
enter
out
pop
add
hlt
jecxz
jp
mov
cmp
std
test
test
add
add
sub
mov
sub
filds
add
add
push
add
pop
mov
jo
add
add
testb
daa
pop
fadd
add
push
sub
add
test
out
das
repz
enter
adc
push
jg
add
add
mov
mov
idivb
sarb
clc
cmp
sbb
out
jns
add
bound
and
add
add
add
or
push
les
stc
and
loope
movl
jg
add
aad
fistl
push
xor
arpl
jp
push
sbb
iret
int3
out
test
mov
jno
imul
mov
jg
sub
aad
mov
add
enter
imul
add
inc
mov
lock
ret
cmpsl
xor
jmp
out
js
add
add
add
add
iret
push
mov
xlat
jl
mov
imul
dec
aaa
push
stos
or
rcll
push
add
mov
mov
flds
pusha
insb
call
cmc
inc
sub
jbe
rclb
sbbl
gs
push
xor
add
in
xchg
jne
add
loop
je
jns
adc
addr16
push
enter
mov
jne
cli
fidivrs
pop
lods
ljmp
or
scas
pusha
xchg
and
pushf
repnz
test
jnp
jbe
aad
adc
mov
gs
fs
in
bound
andb
add
out
add
subl
dec
add
add
shlb
dec
sbb
mov
jp
dec
add
cmc
xchg
jne
or
add
mov
or
xor
outsb
add
jo
and
mov
fsts
mov
mov
cmp
pop
lock
insb
je
js
das
and
sub
scas
mov
push
scas
mov
cmp
cli
jp
add
inc
jo
add
mov
and
add
test
push
inc
cmp
mov
xchg
cmpsl
or
dec
and
dec
cmp
adc
add
push
imul
xorps
imul
add
add
sub
bound
xor
stos
xor
mov
push
mov
in
mov
push
add
cmp
and
cmp
push
sbb
mov
dec
push
pop
ds
int
iret
mov
mov
push
dec
add
cmp
test
pusha
fdivs
lods
xchg
jmp
imul
push
mov
enter
mov
in
aaa
push
aad
clc
push
jbe
int
add
mov
add
imul
test
mov
pop
sbb
pop
push
dec
loop
sti
sub
add
xchg
in
add
mov
mov
jae
lea
mov
adc
out
in
add
shrb
fcompl
lock
mov
mov
or
inc
or
in
add
push
ds
add
add
lods
pop
fs
inc
mov
mov
xor
fld1
cmp
insb
push
arpl
mov
add
stos
imul
add
imul
iret
test
jo
insl
mov
push
add
les
test
bound
push
lret
mov
xchg
dec
adc
or
bound
insb
cmpsb
jns
jecxz
dec
cmp
test
add
dec
pop
test
and
add
cmp
pop
push
or
cs
jle
or
add
add
fiaddl
ret
testb
addb
xor
insb
add
cmp
push
xor
and
push
jecxz
inc
repnz
movb
add
sahf
ret
jae
pop
das
sub
push
adcl
mov
call
pop
mov
add
cwtl
adc
push
lods
shlb
cmp
das
add
mov
ret
fs
mov
fiaddl
xchg
rol
cli
cmp
push
xchg
push
add
xchg
jbe
push
rorb
test
add
loopne,pt
mov
dec
add
xchg
ja
add
push
sbb
sbb
cli
imul
add
pop
jbe
or
pop
push
lret
jae
cmc
jns,pt
xchg
add
and
add
cmp
cmp
hlt
out
mulb
and
jmp
push
and
jle
aad
sbb
cmc
hlt
cld
outsb
add
mov
mov
sub
ds
jbe
sub
and
push
out
das
push
xchg
bound
in
arpl
adc
std
mov
inc
bound
cmp
mov
incb
in
add
in
div
cmp
add
jbe
mov
bound
push
jno
adc
sbb
xchg
das
jnp
adc
pushf
sub
add
dec
adc
aad
sub
bound
in
add
add
mov
push
clc
sbb
xlat
adc
or
mov
mov
mov
cmp
test
mov
test
xchg
lret
xor
xor
out
mov
push
std
mov
xchg
xchg
cmp
insb
movsl
xchg
adc
call
add
mov
adc
clc
sub
push
mov
sahf
je
add
sbb
add
neg
into
add
add
dec
out
push
mov
mov
add
mov
dec
in
fsubp
xor
xor
cmpsl
push
add
popa
add
negl
xor
pop
add
pop
into
fisttpll
insb
imul
and
and
fcomps
cmpsb
sbb
mov
pop
cwtl
sbbl
mov
stc
mov
xor
sti
sub
jne
fstl
dec
cmp
add
idivb
insb
add
jne
add
sub
cmpl
mov
das
dec
leave
mov
fistl
cmp
mov
mov
ds
add
mov
push
dec
ret
js
int
add
mov
add
movsl
dec
stc
movsl
adc
jge
jbe
or
mov
adc
scas
popa
popf
xchg
inc
mov
dec
aas
adc
mov
xchg
cld
ja
dec
in
dec
mov
xor
cmp
jns
ds
lret
add
xchg
jbe
pop
out
icebp
add
aad
push
cmpb
clc
ret
pop
pop
cmp
mov
repnz
and
push
cltd
idivb
fldl
push
mov
dec
jb
pop
mov
mov
adc
out
xchg
jo
sub
dec
fdivs
cmp
add
add
mov
mov
cmp
add
dec
and
add
aad
xchg
cwtl
fldl
pusha
fmuls
repz
mov
bnd
add
xor
leave
sti
mov
mov
aam
cmp
mov
mov
mov
mov
and
sbb
ja
int3
add
add
or
int3
dec
mov
inc
aad
mov
movsl
pop
mov
scas
repnz
lock
sbb
push
xchg
scas
loopne
mov
test
add
xchg
fimull
lods
in
pop
lret
in
add
in
add
add
and
aaa
test
jno
int3
popf
int3
xchg
ret
add
xor
sbb
adc
cmpsb
shl
add
test
push
add
xchg
jne
add
and
adc
std
jmp
test
clc
cmp
ljmp
push
mov
cmp
mov
add
add
out
dec
es
stos
dec
cli
in
mov
cmp
pop
repz
cmpsb
add
mov
add
subb
push
scas
cpuid
add
jl
mov
pop
mov
mov
fistpl
lods
push
and
movsb
xor
add
cmp
cmpsl
test
roll
or
icebp
adc
das
test
mov
cmp
test
in
dec
xchg
or
cmpsb
adc
add
jns
cli
mov
add
cmc
incl
lds
cmp
enter
push
push
loop
in
sarb
stos
lods
sbb
add
test
mov
test
cli
add
incb
pop
lds
pop
cmp
or
or
and
add
lods
hlt
or
in
dec
add
pushf
mov
fdivrp
in
jmp
lret
add
push
lea
fwait
sbb
add
inc
xor
incb
inc
in
mov
xlat
mov
mov
mov
or
adc
push
lahf
mov
int
jb
lret
add
mov
mov
add
jno
inc
shl
addl
and
add
mov
push
fistpl
mov
ja
mov
mov
pop
icebp
inc
cs
fmulp
or
xor
insl
sub
pusha
xor
sub
ja
sbb
imul
jmp
or
stos
pop
dec
rcr
test
pop
push
cltd
jg
sub
stos
repz
add
add
lods
fistpll
xor
mov
mov
jle
xchg
push
push
add
mov
inc
loopne
cmpsb
mov
ret
outsb
iret
ljmp
bound
cmp
add
jnp
movsl
mul
out
test
dec
add
add
mov
jp
sub
push
cltd
xchg
cmp
xlat
cltd
int3
fcoms
popf
add
pop
std
xor
int3
adc
add
jo
sahf
cmpsl
inc
xchg
jp
out
int3
pop
icebp
rolb
test
mov
jbe
mov
stc
mov
mov
xchg
xchg
sub
nop
cs
fidivl
add
gs
sub
mov
mov
jg
rep
aas
pop
clc
test
cs
lret
jno
xor
xchg
mov
inc
add
add
xchg
mov
sbb
add
push
or
inc
add
sub
push
in
roll
clc
pushf
mov
adc
pop
and
add
movsl
pop
inc
jae
sub
out
jmp
testb
inc
lea
std
shr
repz
add
lea
mov
inc
xor
xchg
adc
movsb
add
sub
call
lret
loop
negb
out
mov
ljmp
add
lahf
iret
mov
and
xchg
lods
xor
push
mov
popf
xchg
ret
clc
int3
jp
or
add
add
cmc
or
add
or
and
pop
in
lea
jl
gs
movb
ja
xchg
jae
push
fistps
out
push
mov
push
add
dec
sbb
mov
sbb
bound
aam
std
mov
jo
cltd
sbb
xchg
cmp
add
mov
leave
aad
add
push
jno
out
add
add
xchg
or
inc
lahf
mov
outsl
add
out
inc
add
mov
mov
aaa
add
jno
add
imul
into
lods
mov
in
fnstsw
clc
out
sbb
loop
gs
pushf
stos
add
mov
jae
dec
rclb
outsb
ret
lret
xchg
sbb
fidivl
stc
xlat
mov
add
lea
add
add
cmp
xor
pop
in
cmp
out
dec
out
jo
xchg
and
adc
add
stos
mov
sti
inc
add
into
out
pop
adc
xchg
mov
push
add
add
sbb
test
jg
pop
xchg
loop
mov
inc
das
jo
popf
mov
cli
loopne
add
into
and
or
mull
outsl
shr
arpl
sti
add
into
add
std
stc
push
jo
nop
in
clc
inc
xlat
add
mov
add
cmc
loop
movsb
dec
aad
nop
daa
pop
fwait
push
fucomp
into
call
insl
hlt
adc
pop
out
pop
inc
int3
xor
or
pop
jecxz
mov
sub
fld1
rcl
repz
push
mov
imul
fwait
xor
mov
dec
cwtl
jno
insb
xor
sub
add
into
push
stc
popf
lods
push
movsl
cmp
mov
add
mov
sahf
lds
mov
inc
mov
push
or
cmc
enter
test
inc
fisubs
mov
popa
pushf
ret
test
cmp
cmp
inc
xchg
jnp
popa
dec
and
dec
test
mov
call
and
in
sbb
loope
and
push
xchg
or
add
xchg
xorl
inc
insl
shll
je
jg
arpl
cmc
or
pop
or
sub
mov
jmp
dec
loope
inc
inc
xor
enter
nop
add
hlt
mov
sub
add
movsl
sub
mov
cmpb
sub
cmpsb
xchg
add
outsl
fdivs
add
pop
adc
add
das
mov
lss
add
mov
mov
pop
andb
add
fsts
mov
add
lds
stc
mov
sub
jp
adc
test
ret
add
push
xorl
jne
arpl
inc
ja
aas
and
les
pushf
test
sub
add
repz
xor
in
pop
pop
push
fnstcw
xchg
mov
lea
sbb
inc
mov
jle
paddsb
test
loopne
jmp
sbb
xchg
or
cmp
add
push
mov
add
push
jnp
cmpsb
out
push
pop
mov
push
loope
daa
movsl
gs
stos
add
std
sbb
sar
xchg
scas
lcall
mov
clc
mov
das
dec
adc
imul
add
sbbl
add
or
pop
push
xor
pop
lcall
pmuludq
daa
push
pop
jns
repnz
call
jp
or
rorb
add
into
pop
push
rcr
xchg
movsl
cmp
mov
push
cltd
enter
in
aaa
cs
inc
mov
and
subb
xor
xlat
je
adcb
add
incl
jg
jb
and
sub
shrl
add
add
and
sbb
add
sbb
lahf
inc
push
xor
push
movsb
push
push
out
xchg
aas
mov
add
ds
test
sub
jbe
sahf
inc
or
add
faddl
dec
or
add
add
xor
cmp
ret
cmp
std
jmp
add
push
sub
fnstsw
in
scas
arpl
add
out
es
movsl
out
mov
test
xor
dec
call
push
and
add
je
out
stos
shll
adc
inc
add
push
in
cmp
mov
pushf
jg
mov
out
roll
mov
out
xchg
mov
imul
decb
jge
loop
mov
shrb
xchg
lret
mov
stos
in
jae
out
push
jp
movsb
mov
xchg
jnp
push
arpl
movsl
and
xchg
cmp
adc
mov
pushf
add
fs
dec
or
and
sub
loope
insl
dec
cwtl
mov
decb
sbb
incl
test
and
push
sub
int3
inc
aam
addl
aad
pop
andb
das
and
jg
add
push
fucom
mov
push
xchg
jge
stc
add
mov
mov
add
dec
sarl
mov
push
pop
mov
stc
pusha
sbb
insb
iret
les
push
push
daa
out
xchg
add
mov
add
outsl
stos
loope,pt
mov
pop
shlb
imul
shl
add
mov
adc
add
test
push
pop
ret
dec
and
xchg
inc
gs
xor
inc
sbb
add
add
mov
add
add
mov
mull
cld
cld
adc
aaa
and
lods
fwait
adc
sbbl
das
in
mov
inc
testl
sbb
cli
aas
add
mov
pusha
mov
add
imul
add
add
add
fnsave
add
nop
jb
add
out
dec
inc
sub
sbb
js
loopne
mov
push
aaa
mov
xchg
sub
add
cltd
sti
jo
adc
fldl
add
add
cli
sbb
cli
ret
gs
adc
stos
pop
cmp
sbb
fnstcw
add
xchg
cmpsb
into
cmp
jae
adc
sub
inc
jge
add
in
inc
ljmp
es
add
add
pop
test
cmp
inc
sbbl
cmpsb
xor
outsl
xor
in
add
cmp
gs
inc
fildl
mov
add
ja
add
outsb
jnp
mov
fsub
daa
mov
mov
stos
aas
orb
add
jae
lds
push
fcoms
or
pop
test
sub
lcall
movl
int
add
or
sub
add
push
push
add
inc
pop
fnsave
and
xor
push
push
add
add
xchg
add
sbb
das
hlt
scas
int3
jo
mov
loope
inc
scas
pop
pop
add
movl
mov
cmp
sbb
xchg
or
outsl
out
mov
push
testb
popf
mov
nopl
cs
dec
add
js
test
out
cs
pop
mov
mov
or
xor
xor
and
pop
mulb
cmovp
test
aas
inc
mov
add
inc
filds
jae
clc
jle
xchg
and
inc
les
rcrb
inc
or
add
push
mov
in
adc
push
xchg
sbb
ss
lcall
arpl
insl
mov
dec
mov
mov
shll
dec
add
int3
int3
stc
add
xchg
add
mov
pop
add
das
sub
test
pop
bnd
add
or
test
fcoms
jno
add
in
push
mov
jns
iret
push
add
mov
pushl
mov
xchg
cmp
and
xchg
xchg
dec
push
repz
jl
push
shrb
out
cmpsb
clc
fs
leave
xchg
add
and
movsb
ret
shlb
clc
icebp
inc
adc
jns
or
jecxz
or
mov
xchg
daa
add
mov
xchg
mov
adc
or
mov
add
lds
or
add
and
gs
jae
fldenv
mov
cmp
and
js
adc
or
sbb
dec
xchg
add
int
mov
push
pop
jns
push
out
cmp
loop
call
sub
lcall
add
xor
inc
or
lcall
in
pop
test
jl
es
sub
cmp
add
and
stc
adcl
in
mov
mov
pop
fidivs
push
add
xchg
pop
pop
into
shlb
iret
cmc
add
pusha
xchg
mov
sbb
decl
cmp
bound
enter
scas
xchg
sub
sub
shll
shl
sub
push
add
ja
aad
jmp
xchg
iret
dec
pop
lods
add
or
dec
pop
and
rcrb
lret
jg
and
fsubl
cmpsl
inc
jle
push
sub
mov
movsl
xchg
movsb
cmc
int3
push
mov
add
pop
add
or
pop
inc
xor
mov
iret
fcoms
movsb
pop
dec
add
inc
int3
lahf
mov
add
add
sub
push
sub
sub
mov
mov
jle
push
aad
pop
or
add
ja
add
mov
fsubrl
push
bound
dec
test
hlt
add
cs
clc
aam
pop
stc
cmc
nop
outsb
xor
dec
shrb
add
dec
jns
jmp
enter
nop
inc
add
push
add
jp
or
push
orb
mov
lcall
ljmp
pop
shlb
add
test
int3
add
dec
sub
orl
add
stos
mov
add
xor
aad
push
ret
addr16
cmc
sarl
xor
mov
scas
pop
mov
loopne
loop
or
sbb
pop
add
inc
cwtl
or
mov
jle
sbb
inc
add
sbb
mov
pushf
push
add
lret
test
mov
add
jae
pop
pop
add
xchg
jbe
test
jbe
jle
lds
mov
inc
and
add
jmp
cwtl
add
lret
jge
test
scas
scas
xchg
adc
add
or
in
lcall
push
push
repnz
mov
loop
mov
dec
pop
bound
adc
add
dec
cmp
push
push
outsb
insb
jg
and
lcall
add
out
fiaddl
adc
add
mov
sub
repnz
fwait
cs
data16
fmul
pop
test
xor
or
cmp
lds
ja
es
lret
std
js
mov
add
fisubl
pusha
stos
ds
adc
add
ret
or
icebp
repnz
popl
fcompl
fadd
hlt
add
insl
add
and
dec
push
xor
stos
mov
add
xor
and
sub
xchg
sbb
mov
adc
es
adc
mov
sbb
faddl
push
std
add
imul
je
or
xor
add
jns
add
or
pop
out
mov
mov
dec
js
cmp
push
test
cmpsl
add
mov
dec
jne
sub
push
lahf
add
in
jb
adc
and
mov
nop
pop
pop
push
dec
inc
out
cmp
mov
movsb
adc
pop
addr16
subb
mov
adc
jp
add
adc
data16
add
push
lds
sbbb
dec
cmp
jne,pn
add
add
add
mov
sahf
pop
xchg
rolb
fs
pop
mov
lock
add
faddl
add
add
mull
fdivrp
cli
movsl
lret
xor
add
inc
add
adc
add
sar
idivl
jecxz
je
and
xchg
and
lcall
xor
add
inc
dec
stos
add
add
inc
add
xor
dec
lods
sub
pusha
mov
ret
add
sbb
pop
sub
dec
movsb
cld
adc
hlt
clc
repnz
cltd
cmp
out
sahf
add
push
xchg
jne
mov
mov
and
in
pop
fldl
scas
pop
push
pop
mov
fs
sub
push
add
add
add
pop
pop
fadds
or
ljmp
rcrl
test
sub
add
push
hlt
xchg
lods
mull
cmp
repz
xchg
mov
loope
movsl
add
mov
add
and
rol
mov
out
sahf
xchg
test
pop
mov
stc
in
shlb
jmp
in
cmp
std
push
xorb
mov
pop
add
mov
add
dec
adc
add
mov
sub
dec
inc
and
cmp
testl
cmp
push
movsl
mov
sbb
or
test
add
mov
xor
das
push
mov
pop
ljmp
inc
push
sub
aas
leave
adc
test
adc
stos
add
adc
pop
sub
inc
and
faddl
pop
and
add
dec
call
add
bound
adc
adc
mov
mov
xchg
cmp
gs
dec
dec
je
xchg
outsb
jnp
dec
pop
orl
sbb
add
addr16
dec
andl
pop
add
cmp
mov
jl
and
imul
add
fadds
test
adc
jb
jmp
add
adc
add
xor
add
fisttps
movsl
loop
imul
popf
testb
cmp
ja
add
sahf
mov
out
lret
in
out
push
cmp
mov
mov
xchg
push
and
in
out
loope
mov
fdivs
aaa
aam
dec
xor
cmp
and
inc
mov
nop
add
aaa
add
add
fisttpl
add
add
imul
popf
or
add
add
sub
test
jnp
push
pop
cmc
imul
inc
dec
mov
pop
jl
fwait
rcrl
inc
mov
add
or
add
sbb
and
inc
and
test
inc
add
lods
std
cmp
out
pop
cmpsb
add
add
mov
inc
sub
inc
test
add
repnz
jmp
pop
inc
sarl
mov
mov
sub
jns
rep
mov
jo
sbb
add
insl
jo
mov
ret
mov
pop
ljmp
xchg
push
xchg
insl
add
in
mov
inc
cmp
inc
lret
paddsb
jmp
or
add
mov
test
or
xor
jge
mov
jae
add
pop
add
jno
pop
sub
mov
stos
aas
ja
inc
roll
cmp
or
outsl
or
sbb
inc
ljmp
pop
xor
mov
call
add
fimull
xchg
mov
repz
add
dec
es
and
pop
lds
add
jmp
xchg
imul
hlt
dec
insb
dec
icebp
lea
fldcw
add
push
add
leave
hlt
push
push
add
add
add
in
pop
dec
jle
xchg
mov
jp
mov
imul
xchg
jp
xor
mov
sub
roll
lea
jnp
fpatan
shrb
paddsb
ret
movsb
adc
aad
xorl
add
test
sub
add
inc
and
outsb
lods
mov
pop
outsb
aas
cmp
pop
xchg
imul
inc
fs
jmp
fwait
ljmp
adc
dec
popf
dec
mov
in
xor
lret
fiaddl
or
leave
jg
test
and
shlb
and
xorb
add
clc
ja
jmp
movsl
and
mov
fistl
jb
inc
mov
imul
roll
js
enter
cmp
dec
jecxz
out
jge
ret
cmp
fchs
sub
movb
push
adc
jmp
cmp
add
push
add
lcall
pop
ljmp
comiss
stos
mov
xchg
cltd
pushf
popa
cmp
dec
jp
push
fsubl
repz
add
mov
fistpl
in
mov
add
add
and
nop
cmp
mov
lahf
enter
push
clc
test
adc
jl
lock
inc
xchg
xor
mov
int3
push
lahf
stos
ret
xchg
out
sbb
loop
sbb
add
movsl
add
xor
sub
call
stc
push
push
mov
sbb
loop
out
inc
xor
scas
mov
mov
rorl
test
pop
sbb
xlat
add
inc
addr16
faddl
or
movsb
sub
ljmp
mov
imul
mov
pop
push
enter
add
loopne
sub
mov
sti
inc
lret
xchg
mov
inc
pop
and
and
daa
ds
fcmovnu
mul
xchg
addr16
xor
in
add
out
add
popf
imul
push
add
add
repnz
and
inc
jns
loopne
mov
xchg
and
int3
add
mov
add
out
rcr
clc
fdivrl
sahf
fcmovbe
pop
sbb
mov
mov
cld
pop
mov
mov
roll
add
aaa
fs
int3
das
xor
jmp
mov
xor
xchg
add
in
jo
or
stc
movsl
in
stos
scas
or
mov
add
xor
dec
cmp
inc
jmp
sbbb
ss
das
ret
in
xchg
pop
daa
sub
stc
dec
fildl
mov
pop
cli
cmc
mov
cmc
add
jge
and
lret
pop
movsbl
mov
gs
dec
add
pusha
add
rolb
mov
fst
mov
add
stos
xlat
lock
add
inc
jbe
pushf
dec
pop
pop
es
adc
xchg
jbe
push
sub
sbb
sti
xorl
sub
jbe
cmpsl
push
cli
movsb
fnstcw
call
dec
inc
call
fs
repz
les
add
cwtl
mov
cmpsl
sbb
stos
subl
cmpsb
pop
fisttps
ret
test
push
xor
in
pop
add
imul
add
push
add
push
lcall
push
test
into
stc
adc
push
xchg
xor
xchg
lret
xchg
popa
pusha
jnp
jp
dec
in
addb
mov
sbb
data16
iret
pop
addl
ljmp
xor
loope
add
add
aas
into
insl
mov
add
stos
mov
mov
add
and
ret
add
xor
jb
push
rolb
jae
and
sbb
das
mov
mov
lods
add
add
inc
add
shl
fists
daa
sub
div
add
xor
lret
mov
add
iret
push
pop
inc
out
cmpsb
push
dec
xchg
mov
dec
xchg
stos
add
test
bnd
xchg
mov
add
rol
cmp
fcmovb
icebp
or
add
mov
mov
and
ljmp
adc
adc
outsl
movsb
out
xor
pop
cmp
xchg
leave
xchg
cmpsl
adc
jno
std
dec
mov
addr16
ret
out
jecxz
add
cwtl
and
add
add
add
add
mov
sub
gs
xchg
gs
push
insl
add
out
mov
insb
inc
aam
sbbb
add
lret
add
xchg
push
cwtl
mov
xchg
scas
mov
mov
out
pop
call
cmp
cmp
mov
push
mov
fs
sahf
cmp
or
insl
add
dec
outsb
pop
sbb
repnz
sbb
ret
cmp
cltd
add
mov
mov
enter
jl
cmpsl
insl
add
add
push
scas
ret
mov
add
and
daa
or
add
inc
sub
jp
bound
test
push
cmpsl
xor
adc
jb
mov
pop
icebp
hlt
add
push
mov
rcl
vpcmpeqw
or
mov
mov
add
push
in
add
dec
mov
mov
pop
lahf
lahf
sbb
push
add
imul
pop
dec
stos
mov
in
scas
xor
adc
add
aas
roll
and
mov
add
cmpsb
mov
loope
jle
xor
add
nop
dec
push
adc
inc
lds
mov
ja
inc
int3
add
add
mov
loope
out
outsb
xchg
stos
cmp
shlb
je
xchg
fisubl
mov
cli
out
xor
aad
or
and
dec
dec
rol
roll
std
iret
in
mov
test
roll
lods
out
add
xchg
shrb
push
dec
or
enter
fwait
inc
jecxz
int3
test
mov
add
mov
ret
add
push
dec
adc
fisttpl
add
ljmp
test
cmp
lret
add
xchg
add
idivb
out
nop
dec
cs
add
add
jmp
add
movsb
add
bound
dec
inc
cmpsb
sub
mov
adc
add
aaa
fildl
inc
add
add
push
add
nop
mov
dec
shll
test
and
add
push
add
add
les
pop
add
cmc
aaa
add
jae
sub
xor
add
idivb
fldl
or
add
xor
cmp
das
jge
rcr
lret
clc
add
ljmp
mov
movsl
lret
push
inc
negl
out
push
ja
push
rcl
add
add
inc
adc
jge
cmp
maxps
sub
scas
add
cmp
push
stc
sub
scas
push
pop
xchg
outsl
mov
mov
jge
add
leave
cmc
aas
mov
mov
rcll
dec
add
add
sub
add
fildl
push
add
add
mov
adc
xchg
scas
xor
cmpsb
pop
jecxz
rcll
jno
add
and
add
xchg
pop
out
ret
addb
cli
mov
call
push
pop
pop
fsubs
add
fadds
jnp
jno
mov
adc
pop
adc
out
mov
shrb
lret
inc
imul
adc
add
fistpll
add
fidivl
fidivrl
inc
add
pop
movsl
add
mov
sbb
xor
cld
sbb
data16
outsb
add
mov
add
cli
xchg
mov
ret
loopne
scas
ret
pushf
pop
mov
xor
add
add
pop
loopne
ds
test
adc
bound
das
dec
ficompl
push
mov
stos
mov
xlat
add
sbb
add
mov
movsl
add
sub
fcmovbe
xor
clc
stos
hlt
cs
loopne
out
mov
jle
outsl
jg
cmpsb
mov
dec
add
mov
and
xchg
in
dec
repnz
add
mov
pop
mov
push
adc
pop
jnp
push
cmp
and
insb
cli
fnsave
pop
outsb
shlb
push
mov
nop
lds
int3
mov
dec
cs
aad
mov
int3
arpl
jg
add
sti
mov
add
push
rcll
aad
cli
cmp
fwait
xor
add
sub
sbb
mov
push
dec
add
int
test
cli
aam
enter
add
pop
mov
jge
push
pop
pop
jb
dec
and
fmull
mov
xor
and
jne
in
ret
jl
outsb
sub
add
push
lcall
add
shl
xchg
sti
dec
movsb
dec
in
sbb
sahf
cmc
add
mov
fbld
sbb
mov
rclb
roll
cld
insl
nop
mov
add
int
inc
xchg
push
push
add
test
add
fs
jae
add
xor
pop
cld
in
aam
ljmp
sbb
mov
std
outsl
sbb
insl
cmp
add
add
push
push
int
push
add
mov
movsb
stc
repz
daa
push
add
mov
push
repz
push
lret
nop
nop
or
push
push
das
add
and
fnstenv
jae
add
aad
or
jno
add
lcall
push
jne
xchg
out
popf
fldl
xchg
aaa
mov
pop
mov
cmc
xchg
sub
dec
add
or
inc
dec
stc
dec
sti
mov
dec
jnp
mov
xchg
pop
cwtl
push
push
or
leave
arpl
leave
sub
fsubs
jmp
sub
fldl
mov
mov
add
cmp
mov
inc
xor
mov
imul
push
roll
cmp
ja
outsl
roll
push
sahf
jle
pop
add
mov
or
fisubrl
mov
xor
mov
add
sub
mov
les
sarl
lcall
push
sti
xor
xor
add
pop
out
mov
push
jae
sbb
jns
incb
pop
mov
frstor
mov
add
xor
rcr
and
fwait
dec
inc
cmp
sub
fs
subl
jp
add
idivl
mov
outsl
leave
cltd
add
fistpl
repnz
xor
add
insb
inc
arpl
dec
testl
adc
cmp
push
cld
and
adc
repnz
pop
xchg
add
dec
mov
dec
add
in
mov
and
jl
mov
add
or
cmp
fisttpl
test
insb
add
lea
ficoml
test
cs
cmp
pop
lods
add
adc
test
cmc
stos
les
mov
xchg
jae
add
add
adc
insl
dec
add
inc
and
add
mov
ljmp
add
jo
lds
mov
imul
aam
int3
enter
lods
xor
and
das
push
cmp
sbb
je
add
scas
cmpsb
push
inc
gs
ret
loop
add
add
dec
add
mov
or
xchg
sbb
shlb
jecxz
or
rorb
add
xor
jae
push
mov
sub
xchg
add
out
ljmp
sub
or
mov
and
scas
inc
add
xchg
jp
fxtract
rorl
cltd
cli
leave
xor
sub
popf
push
add
hlt
add
fstp
jae
push
mov
add
lods
mov
add
jb
push
lea
push
jmp
outsb
mov
pop
xchg
nop
incl
pusha
out
lret
sarl
add
push
daa
pushf
sbb
lods
mov
or
jbe
call
cli
mov
xchg
mov
scas
sub
scas
dec
movsl
dec
pop
add
jle
add
sbb
stc
das
clc
mov
addl
lcall
add
mov
jl
jnp
mov
aam
add
cmp
imul
shlb
jnp
subl
add
in
mov
dec
push
ljmp
fstp
daa
into
dec
outsl
rcl
add
add
add
push
or
scas
test
xor
cmp
addr16
jb
lock
add
add
add
lea
ss
cmp
ds
add
dec
dec
sbb
mov
mov
sbb
pop
mov
xchg
jo
mov
icebp
push
out
loope
xor
add
lret
lret
scas
popf
add
mov
sbb
fs
loope
ja
test
inc
loope
dec
adc
or
fcmovnbe
sbb
mov
add
fistpl
sbb
fistpl
pusha
pop
aad
dec
pop
mov
add
dec
xchg
pop
fisttps
jg
add
cmp
jl
aas
mov
jb
aad
sub
test
fstps
scas
cmp
iret
add
daa
add
movsb
xchg
add
mov
jl
jle
dec
ljmp
add
sbb
add
out
bound
clc
and
rorl
push
bound
push
cs
mov
push
add
out
push
add
cmp
pop
cltd
sahf
fbld
adc
add
add
cmp
stos
push
or
adc
dec
add
into
cli
mov
jmp
mov
xor
mov
add
pop
lods
fcmovbe
loopne
add
rolb
pop
or
dec
mov
cs
add
orb
add
dec
jbe
add
enter
add
std
out
jmp
xchg
mov
jg
fbstp
or
cmpsb
push
mov
jno
pop
or
xchg
movb
mov
bound
jg
add
add
xor
cmp
stos
fildll
add
add
inc
push
add
fwait
add
les
adc
add
and
rcr
add
add
jge
mov
push
add
push
lea
xchg
addb
sbb
mov
insb
cli
inc
fadds
push
cmp
lods
aad
cmc
into
stos
sbb
xor
jge
dec
cmp
stos
push
sub
shrl
cmp
add
pop
ljmp
enter
outsb
mov
push
cmp
jno
sub
add
add
or
push
imul
cmp
les
arpl
push
jge
lahf
rcl
cmpsl
pop
push
mov
cli
ret
mov
xor
int3
jo
mov
stos
out
insl
push
dec
push
shrb
repz
fldl
insb
ret
popf
faddl
push
data16
add
inc
movsb
popf
shrl
mov
or
movsb
mov
mov
xor
ja
repz
aaa
lret
mov
aad
shrb
rcll
cld
add
lods
aas
xchg
les
lcall
das
and
push
mov
add
lods
call
jno
rcrb
jp
sahf
mov
add
sub
divl
lea
cld
ja
mov
mov
test
add
fstl
xor
and
loopne
and
mov
push
int
add
sub
mov
cld
push
icebp
test
movb
popa
xor
and
sub
push
repnz
mov
ja
push
stos
fsubl
or
jge
in
push
mov
movsl
add
mov
icebp
sbb
cmp
xor
xor
pop
jno,pt
fwait
sbb
xor
dec
push
shll
cmpsl
out
jmp
xchg
rclb
sbb
in
ret
add
loop
xor
add
out
jmp
lret
xchg
pop
icebp
sbb
add
add
mov
dec
pop
insb
add
xor
jecxz,pn
and
cmp
push
rol
test
push
or
fldt
scas
pop
pop
adc
mov
insl
add
les
add
add
mov
add
add
sbb
ja
out
and
jae
push
pop
hlt
in
xchg
or
or
jl
mov
ss
rorl
xorb
mov
std
add
aas
mov
push
mov
ret
xchg
inc
cld
mov
add
movsb
scas
and
in
imul
das
jmp
mov
xchg
push
in
inc
push
fildl
dec
scas
repz
mov
add
mov
pop
icebp
jne
sbb
subb
add
aaa
and
add
pushf
cmp
cmp
sti
jo
add
inc
cmp
call
dec
or
jle
sar
dec
les
js
ja
out
add
jmp
or
sub
out
popa
lods
pop
xor
fisubrs
jecxz
lds
sbb
ret
add
decl
out
dec
xchg
or
add
fs
sldt
out
in
mov
cmp
std
das
inc
jg
mov
pop
push
jb
es
sbb
mov
hlt
mov
dec
add
add
mov
mov
xchg
add
add
jno
cli
add
dec
adc
add
aam
mov
sbb
add
cmovl
or
add
push
cltd
idivb
add
cld
push
sub
fs
lret
sub
jp
xchg
push
add
bound
add
aaa
int
orl
cmp
scas
movsl
insl
add
icebp
jmp
mov
out
xor
inc
sbb
dec
add
movsb
sub
fsubrs
add
jae
jnp
repnz
adcb
jb
aad
xchg
pop
push
dec
clc
dec
cmp
iret
add
add
mov
xor
and
mov
jne
fiaddl
in
lret
pop
imul
mov
mov
pop
add
add
lods
push
add
xchg
xchg
lahf
xor
add
add
push
sbb
stc
add
mov
or
xchg
in
scas
push
arpl
into
scas
insb
cltd
add
cmp
loop
push
popf
dec
pop
mov
add
imul
add
cmc
cmc
push
mov
roll
sbbb
adc
mov
adc
movsl
stc
push
xor
pop
incl
int
jp
push
jmp
mov
loopne
cwtl
loopne
fcoms
inc
in
adc
mov
test
cmp
rolb
cmp
into
cmp
push
mov
aas
push
out
cs
sarb
add
push
sbb
push
push
mov
lret
in
fldt
add
xor
push
add
repnz
jl
jbe
out
adc
ss
int3
sub
mov
xchg
sub
jge
imul
rcr
inc
lea
gs
sbb
fdivrs
out
jge
daa
testb
add
mov
imul
add
mov
dec
mov
imul
lret
xor
inc
push
cmp
add
xchg
cld
leave
aas
mov
iret
lahf
jge
push
cmp
push
mov
jle
jge
rclb
jae,pn
cmp
or
add
mov
aas
repnz
dec
repnz
icebp
mov
add
pop
movsb
mov
mov
std
imulb
lods
in
push
add
into
out
pop
lods
add
inc
cmp
bnd
insl
add
xchg
inc
test
loopne
lcall
out
adc
mov
das
sub
push
mov
clc
dec
add
aas
sbb
cmp
push
add
add
aaa
jl
push
add
les
cmpsl
popa
mov
jle
adc
mov
out
in
adc
cmc
sub
insl
dec
mov
xchg
jg
scas
jns
push
insl
cmp
inc
stc
and
gs
add
lcall
cltd
popf
aam
mov
add
mov
jae
push
cmpsl
add
call
jp
call
add
insl
push
dec
ss
addr16
mov
pop
data16
aaa
pop
jae
lods
idivb
xchg
addr16
dec
movsb
xor
pop
inc
repz
ljmp
xchg
and
faddl
inc
mov
push
add
push
mov
lret
out
insb
jl
pop
xchg
jge
cld
add
loopne
or
or
add
ljmp
inc
js
cmp
dec
mov
scas
and
mov
add
and
sarl
fwait
push
sbb
adc
outsb
mov
stos
lock
push
adc
adcl
mov
outsl
mov
rcl
xchg
sbb
mov
push
dec
cmpsl
imul
ds
mov
iret
push
and
sbb
lds
subl
lds
fisubl
jg
pop
call
xchg
add
add
push
adc
pop
adc
mov
fistps
cwtl
dec
sub
outsl
cmp
pop
mov
daa
rclb
lret
sbb
stos
pusha
jmp
repz
xlat
mov
pusha
add
aas
add
test
pop
aaa
addr16
push
cmp
xchg
subl
jb
stc
cmp
loopne
dec
xchg
nop
insl
jne
in
nop
mov
push
sub
mov
xor
mov
xchg
add
cli
popa
insb
xchg
push
imul
mov
mov
dec
push
cmpsl
cmp
das
xor
pminsw
cmpsl
dec
jbe
in
pop
andl
cs
jmp
dec
lret
and
pop
pop
sbb
dec
insb
mov
data16
fs
fldenv
mov
and
out
mov
fldl
jb
pop
popf
mov
jle
add
lea
cmc
inc
add
add
rclb
adc
jge
jns
pushf
pop
dec
push
mulb
clc
scas
aas
sub
ds
int3
mov
sti
add
pushf
cmpsb
pop
cmp
ljmp
add
sbb
fldcw
push
fistl
hlt
inc
aam
adc
jno
jb
aam
and
xchg
add
xor
pop
and
out
cs
mov
repz
add
cmp
and
aad
dec
lds
mov
les
jne
jl
jns
add
popf
scas
sbb
aad
xor
cmc
out
mov
mov
jae
add
mov
cmpsb
sub
xchg
mov
add
std
pop
pop
outsl
and
sarl
add
xor
add
call
mov
xor
lds
or
xor
pop
xchg
stos
adc
jo
int
cmp
ja
sub
out
mov
xor
mov
mov
pop
push
repnz
or
add
jge
aam
add
lds
add
mov
dec
roll
add
leave
adc
mov
mov
addl
lcall
js
idivl
add
push
sbb
loope
cmp
push
sub
clc
mov
rorl
test
aas
xchg
xchg
pop
out
pop
stos
imul
inc
lcall
shll
popf
xchg
add
add
call
mov
mov
xor
into
pop
adc
xor
or
cmp
sbb
inc
dec
ljmp
arpl
push
fimuls
jmp
add
aam
mov
add
add
cwtl
push
add
mov
in
icebp
push
mov
call
mov
popf
adc
add
inc
cmpsl
sub
mov
jmp
rorl
dec
mov
mov
sub
stos
jp
mov
loopne
jae
mov
add
pop
loopne
sbb
cmc
clc
mov
jno
xchg
aam
out
mov
andl
shl
rcrl
movsb
add
lods
pop
xor
sbb
repnz
add
pop
xchg
sahf
dec
add
add
addr16
std
arpl
add
out
jl
jo
cmp
sub
mov
cmp
fxch
sbb
pusha
xchg
pop
jecxz
aaa
and
and
insl
jnp
jle
mov
add
inc
mov
xor
fldl
pushf
push
sub
sbb
pop
sarl
add
sbb
pop
sti
add
add
dec
into
add
mov
scas
cmp
mov
aam
inc
add
add
xor
ret
gs
fistl
data16
cmp
fisttpll
fistl
loope
add
das
add
sbb
add
jmp
clc
jle
sti
add
push
add
pop
cmc
cmpsl
jp
call
and
mov
add
ret
xchg
imul
mov
mov
mov
mov
jo
filds
sbb
sti
sub
cmp
int
mov
sub
pop
fstl
je
decl
xor
pop
jne
xor
out
test
xchg
mov
cmpsb
iret
lahf
popl
les
dec
ret
jbe
add
dec
push
add
lret
pop
add
icebp
pop
mov
cmc
pop
shll
pushf
add
add
jl
push
mov
inc
cli
add
mov
jle
add
add
jae
aam
or
mov
xor
jns
das
or
add
nop
add
movsb
mov
push
add
and
icebp
inc
lock
es
sar
call
and
push
loopne
adc
push
stos
dec
xor
sub
inc
inc
repnz
add
cmc
push
push
enter
mov
pop
add
mov
add
add
jge
and
iret
add
fwait
std
aas
jo
mov
or
andl
push
add
mov
or
mov
jbe
cmp
push
add
cmp
fdivr
xor
xor
in
loopne
outsl
sbb
sarb
xchg
and
mov
add
insb
aam
movsl
iret
dec
fwait
or
push
out
icebp
jp
and
cli
lret
das
cmp
add
pop
push
add
mov
icebp
add
loope
and
lahf
adc
adc
pop
pop
mov
in
mov
sub
loopne
lods
add
xlat
sbb
dec
cmp
adc
lods
leave
rcr
sbb
xor
sub
push
and
mov
push
or
mov
insl
fildll
stos
add
lea
mov
shl
mov
xchg
sub
sub
add
push
lret
call
xor
jp
add
pop
sbb
adc
mov
mov
hlt
es
and
jnp
icebp
jae
add
and
add
lret
add
sbb
cs
or
movsb
pop
enter
es
jns
mov
add
add
add
inc
call
hlt
add
scas
movsl
aam
mov
mov
loopne
cmp
mov
cmp
decl
push
adc
or
and
and
cmp
sar
add
add
leave
jb
loop
mov
xchg
sbb
push
incb
add
in
mov
ja
mov
add
out
loope
pop
loope
movsl
test
lea
test
inc
lods
add
push
mov
shr
add
outsl
inc
sbb
jge
fsubs
les
or
stos
mov
fiaddl
mov
es
mov
outsb
cmp
add
das
popa
jmp
inc
in
pcmpeqb
ds
popa
lahf
push
bound
mov
lods
test
and
mov
add
add
add
add
jp
jae
mov
add
add
mov
ljmp
sub
iret
and
stc
add
cmpsb
dec
in
popf
xbegin
dec
lods
add
jl
les
test
cmpsb
fwait
sbb
pop
add
shr
sub
add
sbb
in
insl
dec
icebp
sub
push
sbb
ja
add
add
add
ja
inc
rorb
cmpsb
add
mov
or
cwtl
and
shlb
ja
sbb
push
push
add
mov
add
mov
jmp
and
out
adc
mov
pop
and
cld
inc
fldl
je
ret
enter
or
mov
loopne
lret
lret
das
or
test
mov
nop
cmp
mov
fldl
addl
cmc
sub
pop
imul
push
lods
cmp
outsb
push
jg
ficoms
stos
add
dec
mov
add
mov
push
push
testb
pop
hlt
rclb
dec
add
and
push
xchg
loop
jp
dec
les
imul
add
sbb
fsts
cmpsb
sbb
add
adc
dec
add
add
inc
fnstcw
fdivs
jge
xlat
add
str
bound
push
cmp
mov
bound
cmp
flds
cmpb
xor
inc
xchg
mov
idivb
push
add
xchg
adcb
fadds
jl
mov
sub
cltd
enter
pop
add
cltd
nop
and
mov
pop
xlat
xchg
pop
sub
or
out
rorl
icebp
into
pop
cld
cmp
jmp
icebp
insb
inc
pop
cwtl
cltd
aaa
xchg
pop
enter
push
xchg
in
sbb
test
ret
leave
push
sti
add
shrl
not
test
lret
addl
cltd
loopne
mov
xor
inc
mov
movsb
jp
dec
div
jne
add
xchg
inc
mov
adc
inc
test
mov
add
pop
ficompl
mov
push
test
fstpl
cmp
sbb
test
xlat
nop
add
in
ja
and
add
ret
jb
lahf
ficompl
insl
fldt
ss
sub
push
in
fs
and
in
push
add
add
lahf
jle
add
mov
push
subl
pop
add
in
int
push
lret
je
sub
push
mov
lds
push
shld
jbe
cld
push
add
inc
add
add
sub
pushf
cmp
inc
movsl
imul
mov
test
add
dec
pop
add
loop
add
or
std
aaa
mov
or
call
add
out
pusha
jns
add
rcrb
add
add
pop
adc
mov
and
pop
sbb
add
sub
add
sbb
add
pop
add
rcll
insb
add
jae
xorps
rolb
jnp
push
mul
ss
add
dec
cmp
jno
bound
sti
bound
fadds
cs
add
push
loop
add
test
lahf
add
adc
add
add
pop
adc
test
out
mov
cli
mov
jns
sub
pop
add
or
clc
push
inc
or
fsts
fcompl
jg
dec
add
fidivs
flds
mov
imul
xchg
add
in
xor
jecxz
mov
add
sub
lds
inc
icebp
and
inc
les
test
mov
jmp
add
mov
add
add
adc
fs
xchg
xor
in
shll
out
sbb
add
xor
scas
andb
in
add
imul
sub
pop
xor
xor
mov
or
mov
sbb
in
mov
fwait
add
cs
xchg
sub
xor
adc
push
rolb
inc
add
push
mov
add
pop
ljmp
sbb
arpl
cmpb
and
lret
sub
jb
rorl
shrl
jecxz
push
and
add
push
lahf
or
or
xlat
andb
cli
push
ret
js
xorb
test
inc
sahf
dec
fistl
add
cld
loopne
and
add
roll
in
add
shll
cmp
and
mov
jbe
repz
xor
leave
inc
adc
imul
rolb
xchg
sbb
pop
adc
mov
jno
inc
lds
add
pop
cmp
imul
outsb
inc
out
movsb
shl
das
jge
mov
xchg
stos
xlat
fistpll
add
dec
les
add
fldenv
add
aas
dec
add
mov
dec
pop
push
mov
ss
daa
ret
jl
add
sbb
cmp
imul
outsl
cmpsl
add
and
addl
mov
mov
mov
mov
mov
inc
popa
and
dec
testb
jnp
mov
cli
inc
fildll
mov
pop
inc
mov
nop
inc
out
dec
ja
push
ret
cltd
into
add
lret
add
addr16
fadds
adc
mov
mov
mov
add
or
scas
or
scas
movntps
jnp
imul
in
xor
xchg
jbe
mov
add
aas
push
cs
je
cmc
sbb
or
mov
push
dec
add
filds
cmp
inc
xor
les
jl
mov
add
push
loopne
adc
add
xchg
sbb
scas
xor
fdivp
sbb
imul
jmp
pushf
roll
jp
cwtl
je
cmc
ret
adc
xchg
pop
mov
mov
pop
pusha
sbb
add
imul
and
fdivrl
push
outsl
gs
push
add
and
ret
xor
imul
pop
lret
cmp
jne
sarb
loope
add
rorb
inc
movsl
push
or
sbb
mov
fwait
das
jne
ljmpw
pusha
lret
pusha
scas
mov
jo
loopne
pusha
cld
jbe
sub
xchg
shlb
add
stos
push
mov
add
jnp
das
inc
xor
lods
mov
pop
leave
data16
add
cs
pusha
sub
pusha
stc
push
or
pop
add
in
cmp
and
inc
push
jne
add
push
and
fwait
ret
call
stos
jmp
pusha
aad
xchg
mov
stos
jmp
dec
inc
insl
xor
mov
popa
pop
insb
adc
or
add
jae
adc
insl
cmpsl
jae
test
sub
test
mov
inc
jnp
mov
fs
add
shll
mov
cmp
fisttps
add
jno
xchg
adc
and
mov
incl
push
sbb
fnstsw
add
dec
or
jbe
mov
push
add
repnz
add
mov
jb
in
dec
scas
data16
dec
and
lea
and
add
and
xorl
add
test
mov
bound
jb
add
add
add
jge
fstpt
fmul
xchg
out
shrb
stos
sbb
movsb
adc
divl
out
out
sbb
push
clc
add
xchg
lods
outsl
fnstcw
loope
inc
ret
pop
cli
add
adc
test
test
jb
jmp
and
popf
sbb
lcall
inc
iret
int3
scas
stos
faddl
xor
out
mov
add
xor
fistps
mov
scas
icebp
andb
xchg
add
frstor
xchg
in
es
mov
cmpsl
aam
add
mov
ret
jmp
xorl
and
xor
bound
test
jle
jp
cwtl
and
in
mov
popa
aaa
xor
lret
xchg
xor
add
movsb
pop
cmp
pop
aaa
out
sahf
lcall
xchg
ror
or
jp
add
idivb
icebp
jae
mov
in
sti
inc
add
and
mov
add
lock
fnstenv
or
cmc
jae
xchg
xchg
xor
push
add
or
mov
in
pop
or
stc
add
pop
es
mov
clc
adc
add
add
cli
mov
loop
in
lock
inc
pop
test
add
sub
enter
add
jns
out
dec
verw
faddl
jmp
movsl
pushf
adc
add
mov
xchg
add
lret
mov
dec
andl
push
xchg
cli
mov
aam
adc
pushf
add
xor
repz
add
add
add
add
loope
jmp
dec
add
mov
cmpl
sub
and
popf
inc
mov
pop
cmp
inc
dec
iret
add
ltr
add
add
dec
xchg
add
ss
out
mov
mov
and
or
add
and
test
daa
add
ds
fsubrp
sbb
mov
and
add
outsb
push
xchg
add
add
pop
leave
mov
stos
dec
push
cmpsb
popa
shrb
clc
loope
pop
push
es
gs
rcrb
sahf
jmp
les
cmpsb
xchg
add
cmp
add
or
cltd
or
adc
cmp
sub
pop
faddl
stc
repnz
push
adc
lret
push
add
add
fs
mov
lcall
aaa
dec
ss
sbb
jb
ljmp
int3
sbb
sbb
fdivrl
inc
add
inc
mov
add
and
fwait
push
es
cs
mov
xlat
out
push
sbb
test
add
aad
or
pop
mov
lahf
cmp
inc
sub
mov
rsqrtps
mov
int3
fadds
adc
mov
add
dec
imul
add
iret
loopne
pop
stos
mov
sbb
add
mov
add
sbb
iret
or
xchg
jecxz
in
push
negl
jno
add
filds
leave
dec
or
xchg
popa
push
in
insl
dec
add
dec
das
mov
xor
push
add
cmp
jns
pop
add
push
add
rcll
sarb
bound
pop
or
aas
jecxz
mov
into
adc
ror
nop
mov
inc
add
repz
lret
popf
add
add
frstor
adc
roll
sbb
xchg
in
xchg
movsb
addl
cmp
cmpsb
ret
arpl
loopnew
sahf
push
jle
std
mov
adc
pop
aam
cmc
cld
cwtl
test
sbb
iret
adc
hlt
add
ljmp
clc
sub
inc
cmpsl
cwtl
int3
push
pop
call
cmp
daa
fiaddl
sbb
test
daa
mov
push
and
lods
stos
jo
mov
orl
xor
cltd
cli
or
dec
mov
sbb
into
fdivl
mov
outsb
mov
or
popa
mov
cmp
loop
sbb
or
lret
sub
xchg
cmp
mov
outsl
sbb
add
adc
aam
outsl
aam
rcr
fwait
add
sub
add
adc
aam
sti
xchg
push
in
stc
cmc
out
adc
inc
insb
ret
mov
mov
andb
pop
outsl
xchg
jbe
xchg
xchg
xor
jb
add
jecxz
add
mov
rolb
and
inc
gs
ljmp
pop
push
push
or
mov
pop
pusha
pop
loop
stos
sbb
out
add
mov
and
shlb
add
mov
add
xor
pop
cwtl
dec
add
jge
and
daa
push
add
inc
add
mov
pop
sub
ret
xor
fs
je
in
mov
aas
imul
iret
jbe
adc
cmc
mov
lods
push
insl
jnp
test
dec
leave
sbb
pop
sti
or
call
addl
jge
add
mov
shll
popf
push
inc
test
into
jo
gs
mov
test
push
loop
mov
int3
int
ljmp
add
jns
xchg
mov
xchg
and
sahf
out
bound
add
imul
lock
inc
inc
insl
mov
sub
shll
dec
pushf
stc
lods
sub
inc
iret
jb
aas
jns
add
mov
cmp
jge
add
push
sub
out
stos
addl
xchg
popf
xor
add
mov
cmpsb
ret
filds
jg
or
xlat
lret
push
and
jnp
mov
fdivs
mov
sbb
clc
sub
fsubp
push
add
ds
jge
mov
int3
mov
or
add
add
cmp
adcl
sub
inc
es
add
add
sub
outsb
mov
dec
fsubs
loop
fnstenv
cli
into
hlt
out
aad
fsubrl
fmul
aam
mov
faddl
mov
outsb
xor
fs
popa
push
mov
rclb
adc
movsl
sub
jmp
cmp
or
addl
xchg
pop
mov
cwtl
mov
cmpsl
jb
stos
add
add
daa
mov
mov
pop
and
gs
loop
inc
out
rcrb
ljmp
push
jo
jle
jne
hlt
cmpsl
out
aas
mov
sbb
into
adc
aam
inc
and
mov
push
add
or
pop
mov
movsl
aam
adc
arpl
test
pop
xchg
movsb
lock
or
adc
add
rcrb
adc
cmpsb
add
lahf
sub
xchg
cld
pop
ret
or
ret
pushf
add
mov
je
stos
cmp
sub
mov
in
inc
clc
inc
out
inc
call
sub
clc
fldl
repnz
lahf
lcall
mov
mov
mov
sbb
in
sbb
add
mov
ret
daa
loopne
dec
xchg
pop
incl
dec
into
ret
mov
dec
dec
in
push
mov
cmp
add
mov
loope
and
sub
sub
add
jno
ljmp
add
lds
xchg
mov
loop
pushf
push
addr16
iret
roll
pop
sti
push
les
pop
cmpsl
test
xorb
push
stos
sbb
pop
pop
push
lds
and
and
adc
add
int3
sub
adc
mov
add
add
in
jb
adc
adc
jge
xchg
or
notb
sub
sbb
pop
push
mov
clc
addr16
mov
add
mov
iret
fsts
out
vdivps
jb
add
andl
mov
pop
add
fsubr
sbb
jb
imul
add
inc
hlt
aad
or
mov
pop
jns
loop
sub
leave
scas
fiaddl
xchg
sbb
mov
roll
mov
loope
push
shl
add
jo
push
add
dec
push
pusha
xchg
xchg
ficoml
scas
mov
mov
pop
dec
jnp
fiadds
cmc
jne
xor
fwait
adc
or
pop
arpl
dec
xor
rcpps
mov
sbb
lods
add
test
mov
ret
add
adc
xor
mov
xchg
inc
into
movsb
fldl
xor
add
push
cwtl
pop
adc
fildll
pop
call
fsubr
mov
dec
mov
es
dec
sarb
cwtl
adc
notb
hlt
jns
ljmp
inc
pop
push
fildl
dec
or
cmp
insb
vunpcklps
bound
cmp
stos
lahf
xchg
aaa
psubusb
ja
xorb
push
outsb
add
mov
popa
add
jns
and
arpl
roll
add
clc
mov
mov
cmp
or
add
push
cmp
fstpt
push
cltd
addl
lret
daa
mov
stc
add
scas
add
mov
and
pop
roll
incb
jmp
add
or
push
jae
pushf
add
add
loop
call
imul
mov
inc
adc
and
out
add
add
loopne
adc
fwait
xor
jnp
ljmp
enter
add
and
pushf
dec
in
add
dec
pop
mov
push
jb
rcl
sbb
ds
pushf
adc
and
and
pop
or
out
out
push
dec
sti
push
jge
or
neg
lods
loop
dec
push
leave
add
add
add
add
add
aam
popa
mov
sti
rclb
mov
add
arpl
icebp
add
add
addr16
pop
cmpsl
aad
sbb
movsb
add
fnstcw
cmpsl
cli
repnz
ror
iret
jg
out
xchg
rcr
das
pop
popl
pop
scas
add
ret
mov
cmpsl
mov
cmp
dec
cmpb
lods
pop
lret
and
cmp
ret
mov
addl
pop
cmpsb
add
sub
arpl
les
inc
int
fidivrl
clc
sub
cmpsl
sub
test
in
mov
adc
pusha
mov
and
push
pop
pusha
shlb
stos
adc
xor
out
mov
mov
adc
sub
add
rclb
or
jle
jp
std
pop
xorl
dec
sub
cmp
jo
dec
add
scas
inc
dec
add
add
add
and
dec
cmpsl
xchg
imul
sub
dec
arpl
mov
xor
add
movsl
xchg
lock
ret
call
or
sub
cmpsb
add
sub
call
add
fisubs
and
jmp
movsl
mov
rcl
arpl
into
outsb
xor
or
lcall
xchg
sub
jecxz
lods
aas
add
fcompl
or
pop
sub
notl
es
pusha
jb
push
sub
into
rcr
xor
jo
adc
cltd
push
test
mov
and
mov
mov
add
push
or
jb
pop
mov
inc
pop
jae
cli
fistpl
add
mov
adc
jae
jbe
adc
mov
add
inc
jmp
js
popa
les
arpl
sbb
and
aam
lret
addr16
add
add
inc
jno
xchg
mov
mov
dec
add
cmp
movsb
add
dec
addr16
hlt
jb
pop
int3
int3
add
verr
add
mov
sti
out
mov
gs
test
add
sbb
rorb
inc
xor
leave
add
mov
add
shl
stos
std
movsb
test
add
xor
push
pop
lahf
add
iret
or
push
outsb
addb
sbb
fidivrl
jbe
addl
cmp
mov
pop
mov
cmp
loopne
jb
jnp
push
add
cmp
lahf
lahf
fs
xor
call
hlt
or
jge
xlat
inc
lock
sti
jbe
mov
add
and
add
inc
add
out
adc
out
mov
and
cli
mov
cltd
xchg
inc
push
mov
jmp
movb
les
in
clc
push
add
pop
push
out
add
pushf
xchg
sub
dec
mov
in
jp
in
or
sahf
jns
and
inc
mov
and
adcb
cmp
and
cmc
push
ffreep
add
jae
repz
sub
out
sub
pop
fidivrl
add
pop
add
xor
add
add
xor
fistpl
cld
lea
test
pusha
loope
mov
add
jp
mov
add
add
lea
fwait
xor
xor
ret
jmp
mov
cld
ret
nop
cs
mov
lea
pop
push
fistpll
fs
int3
cwtl
pop
arpl
push
mov
sar
std
dec
inc
nopl
xor
xchg
mov
xchg
arpl
cld
fdivp
mov
ja
inc
jns
scas
dec
fidivrs
loope
jnp
addl
sbb
std
fld
push
bound
adc
sti
sbb
cmp
push
fldcw
sarl
repnz
mov
mov
cmp
fldenv
ret
out
cmp
iret
daa
xorl
push
sahf
push
or
add
mov
out
mov
dec
add
xor
lea
mov
lods
cmpsl
add
leave
sub
pop
pop
dec
xchg
je
les
pop
repz
add
lahf
mov
mov
adc
dec
pop
fnstsw
imul
or
fidivs
in
adc
add
mov
add
cld
es
and
std
pop
jle
sbbl
aaa
cmp
fdivr
stos
mov
clc
or
insb
shll
add
add
dec
pop
pop
cs
mov
movb
ret
jae
or
or
mov
pop
mov
aad
jmp
add
push
out
mov
stos
lods
inc
add
mov
add
push
ret
sbb
dec
push
mov
add
push
pop
jnp
inc
jge
les
orl
add
fbstp
hlt
es
je
push
dec
push
mov
jmp
repz
lea
nop
shrb
fsubp
es
pop
fs
mov
out
add
lock
mov
jp
testl
nop
jge
loop
or
mov
add
out
faddl
dec
stos
icebp
cs
femms
lret
xchg
add
and
js
arpl
dec
mov
cmpsl
daa
sbb
push
pop
add
int
mov
data16
pop
push
add
movsb
pushf
push
xchg
add
mov
addr16
pop
add
into
xchg
addl
push
mov
pushf
int
pop
adc
pusha
add
movsl
pop
int
adc
jl
mov
adc
push
add
adc
pop
inc
add
mov
push
or
xchg
add
inc
call
mov
sub
cltd
loopne
test
gs
adc
daa
mov
loope
xor
hlt
into
mov
das
or
sub
add
cmp
add
push
popf
sbb
js
ljmp
sub
dec
pop
fcomip
addl
jbe
adc
test
mov
mov
jo
das
xchg
add
adc
mov
aam
mov
and
nop
sub
adc
xor
bound
mov
add
mov
test
mov
cmp
add
add
sbb
aaa
pop
add
mov
jb
push
mov
push
iret
pop
add
jle
test
jle
inc
imul
inc
jb
sbb
lea
stos
cmp
pop
adcl
dec
fucomi
cld
mov
ret
mov
mov
out
add
repz
add
adc
add
call
daa
add
imul
cs
xchg
aas
into
rorb
leave
cwtl
sub
in
ds
iret
add
cmp
jl
jno
mov
jae
add
icebp
mov
add
mov
es
rcl
cmpsl
lock
and
mov
out
add
add
popa
das
add
sub
nop
shr
ljmp
pop
xorb
sahf
and
lea
ljmp
fildll
mov
mov
push
int3
pop
pop
or
shl
add
test
jo
add
in
add
out
xor
enter
push
rclb
cmc
add
add
iret
add
mov
pop
inc
add
out
xor
or
insl
mov
jge
gs
mov
roll
xchg
dec
jg
xchg
lock
sbb
pushf
or
add
sti
test
push
imul
and
pop
mov
cmp
xor
jmp
dec
in
add
add
xorb
jno
push
add
inc
mov
xor
sbb
out
adc
rolb
es
xchg
and
je
add
jo
shll
mov
xor
andl
scas
ljmp
push
push
add
add
cltd
jne
fsub
or
sub
mov
dec
loope
sub
add
shlb
add
sub
add
add
hlt
shll
leave
pop
cmp
daa
xor
xor
inc
movsl
je
dec
jnp
rcr
stos
stos
jl
sahf
mov
xchg
dec
cmp
shrb
xor
xor
cmp
sub
jns
or
popa
ja
aam
or
jo
push
imul
or
jns
gs
add
push
adcb
add
test
xchg
loop
sbb
add
mov
lret
lods
adc
lods
adc
add
aam
push
out
add
in
dec
fucomp
imul
add
mov
movsb
mov
std
add
arpl
adc
add
push
add
movsl
sbb
push
pop
add
adc
insb
inc
pop
xor
xchg
or
mov
imul
aad
or
cmpsb
push
add
jbe
sbb
dec
or
cmpsb
imul
insb
int3
xchg
aam
hlt
rcll
fimuls
mov
stos
add
clc
mov
xchg
nop
pop
xor
addr16
mov
cmc
push
pusha
dec
jo
inc
popf
and
ja
xchg
push
add
mov
add
lahf
xor
add
mov
icebp
dec
clc
or
icebp
jl
add
aam
ljmp
enter
dec
outsb
sbb
add
ljmp
add
imul
lock
sub
stc
loop
inc
push
push
xchg
mov
out
es
stc
lock
pushf
dec
add
add
dec
jp
lcall
add
add
add
xor
dec
pop
add
mov
loope
pop
movsb
jb
sub
inc
xlat
pop
jle
out
xchg
add
popf
add
xchg
cmpsb
stc
push
add
cwtl
cmpsb
and
out
bound
and
or
mov
inc
rcl
je
jg
push
add
and
repz
mov
mov
stc
out
jmp
push
jne
fnstenv
add
fidivs
call
orb
nop
mov
outsb
add
movsb
sub
pushf
test
push
movsl
fldenv
mov
call
jno
mov
mov
fisubrl
dec
lock
add
and
pop
inc
ror
orb
dec
mov
icebp
and
pop
imul
sbb
enter
in
add
aas
and
sub
push
mov
cmpsb
pushf
sbb
int3
add
pop
add
fnstenv
insb
jno
addr16
pop
test
adc
aam
call
movb
adc
insb
add
sbb
mov
out
mov
and
iret
inc
in
outsl
xchg
nop
add
add
mov
pushf
sub
adc
jg
xor
pushf
test
xchg
out
sbb
jp
cs
mov
gs
xchg
cs
shll
in
stc
stc
in
push
ret
push
jb
andb
jmp
pop
out
addr16
test
mov
aas
add
sub
mov
in
mov
popf
sahf
testl
jns
push
push
sub
add
outsl
add
push
add
inc
cwtl
scas
aam
mov
dec
or
push
inc
push
jl
shll
push
sbb
or
fisttpl
mov
dec
push
xchg
lds
add
adc
imul
sub
xchg
fistl
mov
xchg
or
jno
mov
inc
movsb
cmpsb
cltd
xor
sub
addr16
cmp
sbb
rcrb
mov
divl
je
stos
push
mov
ja
cmpsl
out
sub
mov
mov
cld
cld
xorb
add
jp
push
jae
add
dec
mov
insb
dec
imul
fstl
pop
js
outsb
xchg
imul
sbb
sbb
lea
add
add
add
and
mov
es
sub
xor
dec
rorb
rdtsc
into
push
cli
push
jg
mov
inc
aam
dec
add
adc
arpl
add
sbb
mov
and
add
stc
cmp
push
arpl
fmul
push
outsb
addr16
push
mov
cmp
push
dec
xchg
add
mov
jmp
or
fidivs
xor
arpl
add
pop
add
or
and
aas
or
scas
add
push
data16
add
add
mov
xlat
aad
fildll
and
ficompl
test
rolb
jbe
mov
jnp
ror
xchg
sub
lret
adc
add
pop
sub
in
loopne
addb
add
add
lahf
rcrb
popa
shr
push
popf
in
push
enter
xchg
xchg
dec
adc
fwait
iretw
add
fs
jle
add
and
lea
add
sub
loope
cmpsl
mov
std
fdiv
stc
movsb
mov
mov
sub
rcl
pop
fucomip
jnp
sbb
gs
inc
repnz
add
xor
push
xchg
or
cmovae
adc
loopne
sub
outsb
add
add
scas
push
add
mov
xlat
aad
testb
mov
movsb
add
das
inc
jl
add
movsl
sub
mov
std
fwait
aas
push
divl
scas
test
lea
fstpt
jno
clc
lcall
push
clc
in
ror
dec
add
add
jp
add
mov
mov
loopne
xchg
test
jmp
mov
adc
or
lods
lahf
mov
add
arpl
mov
adc
push
imul
scas
rcrl
jl
decb
xchg
inc
loop
stos
jge
ret
imul
ljmp
mov
and
in
mov
test
bound
ret
xchg
push
add
and
xchg
mov
jg
popl
mov
add
xchg
popa
add
sahf
add
jbe
cmp
or
or
outsl
jno
into
inc
and
js
add
testb
lds
loope,pn
jnp
out
adc
inc
mov
clc
mov
add
or
dec
std
push
inc
inc
pop
add
mov
xchg
jp
popf
mov
bound
sbb
je
add
mov
test
mov
cmp
pop
int3
push
lcall
fs
fdivr
jae
cmp
ss
jmp
sbbb
inc
inc
cmp
mov
fisubl
mov
sti
test
pop
add
lock
movsl
xor
inc
mov
faddl
and
out
xor
mov
xorb
add
rolb
pop
dec
cmc
and
mov
mov
fnstenv
inc
cmp
add
out
fcompl
repnz
mov
das
fmul
outsl
lods
cmpsl
add
dec
xchg
inc
pop
adc
xchg
add
and
cmp
and
int3
sti
add
in
dec
sub
xchg
js
adc
dec
divb
notb
add
lods
mov
movsb
out
frstor
add
lcall
in
lahf
fistps
or
mov
and
add
bound
fisubrl
push
test
pop
pop
in
pop
inc
das
lock
sub
cmp
in
dec
jmp
out
rol
ja
add
jecxz
fistl
out
add
idiv
shlb
stos
xchg
add
cmp
lea
cmpsb
add
fildl
outsb
xor
adc
insb
jecxz,pt
add
daa
or
mov
mov
sbb
add
cli
ja
imul
daa
xor
add
hlt
inc
push
in
add
mov
leave
mov
jo
stc
pop
pop
loop
scas
mov
sub
push
cmc
pop
dec
loopne
dec
sarb
bound
or
add
repnz
jge
add
xchg
dec
fwait
dec
sbbl
adc
mov
or
add
mov
add
mov
mov
in
jno
pushf
pop
ja
and
dec
xchg
adc
mov
adc
add
lods
fwait
inc
mov
add
negl
xchg
push
aaa
xor
xor
negl
cmp
test
jne
pop
jge
mov
scas
fsubs
add
pusha
testb
push
and
inc
jp
cmp
negb
dec
fcoml
jno
test
xor
push
movb
add
add
jg
sbb
shr
inc
stos
leave
add
or
jmp
add
mov
add
mov
fldcw
push
mov
push
sub
shlb
enter
sub
stos
nop
sbb
out
bound
xor
inc
popa
xor
in
dec
mov
jns
xlat
outsb
pop
push
data16
adc
scas
cmp
rolb
push
jmp
stos
into
inc
std
ja
ret
fcoms
and
ss
mov
add
fldl
push
add
inc
push
lahf
ljmp
jg
cmp
negb
ss
icebp
pop
mov
pushf
or
xchg
std
add
inc
dec
add
iret
movsl
fwait
stos
ret
push
mov
sbb
fdivrs
add
add
jae
sub
les
hlt
arpl
mov
test
sbb
jbe
jecxz
mov
add
lods
mov
icebp
xchg
add
stc
inc
in
cmc
mov
in
add
add
dec
sbb
push
cli
mov
enter
mov
pop
cmp
jns
cmp
ret
mov
popa
inc
lret
sub
stos
pushf
mov
loope
xchg
out
popf
stc
sub
and
mov
add
gs
pushf
popa
iret
rolb
jno
mov
xchg
mov
xchg
enter
aad
inc
dec
adc
addr16
lea
pop
mov
jae
scas
or
add
inc
mov
push
push
sub
mov
dec
mov
insb
std
sarb
cld
jae
add
xchg
in
lea
lods
or
in
and
outsl
push
sub
add
sub
jno
and
aad
out
movsb
push
or
add
loope
push
inc
and
aam
dec
add
cmp
push
pop
adc
test
dec
fs
dec
test
mov
add
adc
dec
add
jae
push
out
xchg
or
in
add
outsl
repnz
add
inc
pop
add
scas
xchg
add
jp
cmc
jge
lret
add
shrl
shlb
repnz
dec
pop
ficoms
cmp
aam
out
xchg
popl
fists
inc
add
aam
fsubrp
dec
xchg
add
repz
adc
jbe
out
fsubrs
xorb
aas
mov
fistps
cli
add
add
jne
test
arpl
decl
push
test
add
add
out
push
ja
fcmovnbe
lcall
push
push
push
add
push
out
fistps
pop
xlat
adc
ret
clc
pop
add
rcrl
aaa
add
xchg
push
mov
cmp
inc
sarb
sub
xchg
push
add
les
mov
outsl
add
adc
cmpsl
cmc
add
push
or
popf
jnp
add
repz
insb
lods
xchg
mov
les
add
movb
add
xlat
test
add
ljmp
inc
push
stos
and
fistl
mov
sub
roll
dec
mov
add
mov
add
xchg
jg
loope
push
movsl
push
bound
xchg
xorb
fcomp
out
xlat
neg
jg
add
push
jne
es
enter
xchg
push
data16
xchg
add
mov
fiaddl
repnz
insb
add
mov
push
sbb
aaa
fs
lds
xchg
sbb
fbstp
in
jp
addb
sbb
pop
test
stos
popf
push
inc
out
add
lds
les
subl
sub
jns
or
fsubrl
dec
push
cwtl
add
repz
negb
lret
movsl
push
data16
shll
ss
je
jmp
sub
out
loopne
dec
and
xlat
pop
dec
cmp
add
sbb
pop
add
push
imul
dec
aad
mov
loopne
imul
mov
fwait
ret
sbb
mov
add
call
lret
sbb
stos
and
add
xor
repnz
add
cwtl
mov
add
add
add
sbb
movsb
std
xchg
mov
add
aad
movsb
insb
add
iret
shrb
shll
add
repz
jmp
cmp
enter
cmc
lds
in
mov
inc
sbb
jno
add
adc
insb
stos
jp
and
add
mov
add
add
jp
scas
mov
imul
push
cwtl
xchg
and
xchg
or
mov
add
add
sub
ds
out
scas
add
int
xchg
add
add
xchg
into
mov
mov
lea
pop
mov
jo
popa
add
inc
push
jmp
xor
out
or
jl
add
jbe
dec
popa
pop
cltd
mulb
add
and
mov
lret
arpl
sub
push
add
dec
lds
add
lea
mov
or
pop
add
jge
stos
xchg
dec
dec
out
jne
push
mov
cmp
movsb
dec
call
add
add
mov
popa
sub
stos
fidivrl
inc
rcrl
ret
call
mov
sub
push
not
push
sub
ret
pusha
stos
sbb
mov
lret
pop
mov
mov
pop
dec
xchg
add
add
in
stc
gs
in
loop
sbbb
pop
xchg
push
stos
xchg
adc
adc
pop
mov
pop
jae
mov
xor
popf
hlt
aas
lahf
fnstcw
fisubl
out
add
inc
add
in
int
fcoms
add
add
ja
and
add
mov
aad
pop
std
add
ljmp
shlb
and
push
stos
aas
sbb
or
lret
ss
add
mov
lods
mov
leave
dec
lcall
mov
mov
insb
dec
add
add
mov
insb
lods
dec
orl
xchg
add
inc
out
jmp
xchg
das
lods
mov
dec
lods
mov
xor
movsb
pop
sbb
mov
mov
sbb
in
lds
mov
or
mov
out
test
add
add
cmpsl
push
or
push
ret
iret
jmp
loope
inc
dec
aam
xor
inc
lret
test
mov
pop
push
loope
add
jnp
or
mov
aad
stc
cmc
xchg
inc
addr16
loop
cmp
sub
dec
ret
dec
add
fists
daa
aas
ds
addb
movsl
mov
add
xorb
add
iret
js
mov
aad
adc
push
cmp
inc
lahf
adc
xchg
mov
and
xor
jp
stos
lret
in
add
add
jbe
int
imul
in
add
sbb
inc
add
add
xor
mov
add
lea
in
adc
xor
cmp
popa
adc
imul
adc
jo
adc
and
mov
int
mov
popa
inc
jbe
ss
shrb
add
ja
push
add
add
notl
das
popf
xchg
ljmp
shrb
jae
dec
js
in
lahf
add
mov
add
jle
sbb
les
pop
addr16
jmp
cmp
and
mov
jle
lcall
enter
imul
ror
mov
mov
add
inc
andb
inc
aaa
cwtl
jo
nop
fs
repz
pop
add
es
jp
pop
not
fildl
pusha
mov
shr
fucomip
addr16
cmpl
mov
sub
add
push
sbb
sub
jle
inc
insl
push
or
add
arpl
mov
roll
adc
cmp
add
mov
and
decl
sub
xchg
dec
mov
lods
add
cmp
add
adc
adc
lret
fiaddl
xchg
lret
add
mov
xchg
insb
in
js
lret
cwtl
sub
andb
pop
mov
lods
mov
jb
add
add
hlt
pop
insb
add
and
pop
nop
insl
ljmp
iret
dec
jb
jo
add
flds
test
test
dec
sbb
or
mov
adc
cmp
xor
adc
pushf
push
mov
add
mov
mov
inc
fisubs
inc
mov
pop
es
jmp
adc
xor
inc
scas
add
fwait
jae
dec
mov
xchg
sub
add
outsb
mov
stos
shl
jb
push
in
push
cmp
stc
add
or
popf
dec
xor
or
sub
aas
xorl
add
dec
cmp
cwtl
or
fs
mov
sbb
inc
add
mov
adc
or
es
ds
pop
aam
xor
icebp
or
sbb
insb
add
lret
int
adc
out
cltd
inc
je
call
enter
ds
push
into
insb
loope
and
push
xchg
add
fldl
sbb
fwait
pusha
add
or
mov
movsl
cmp
out
ja
pushf
leave
mov
add
mov
fidivl
xchg
mov
add
cmc
push
call
dec
pop
and
sub
inc
dec
add
ljmp
icebp
leave
gs
rcr
and
dec
repz
cmp
pop
add
sbb
sbb
xlat
test
mov
sub
pop
fstps
jle
fnsave
mov
divl
test
fistpl
push
ja
jmp
adc
add
nop
add
int3
test
add
lods
mov
decb
les
setns
ret
mov
push
pushf
fisubl
mov
or
jb
sub
jae
mov
mov
outsl
push
xchg
sbb
out
ljmp
cmp
in
fsubrp
call
add
sbb
cli
pop
out
mov
xor
pop
out
mov
adc
add
pushf
sbb
aad
lcall
and
add
addb
nop
sub
inc
pop
stos
lret
popf
mov
lods
cmp
call
in
les
add
lcall
sbb
movb
add
mov
add
push
mov
xor
mov
add
jns
and
mov
jg
lods
or
inc
xchg
cmp
js
mov
inc
xor
sub
push
xchg
mov
add
shr
inc
inc
int3
test
add
mov
iret
popa
or
ljmp
fwait
add
ret
and
push
int3
fistps
lahf
mov
mov
push
add
sbb
frstor
sarb
xchg
sub
push
call
add
inc
dec
outsl
jae
frstor
pop
sub
fstl
mov
jns
adc
sbb
push
in
adc
push
push
mov
call
loopne
xor
inc
mov
sti
push
sub
inc
jae
sti
adc
push
dec
stos
mov
push
mov
jns
aas
or
jecxz
out
jns
cs
and
dec
push
pop
add
add
dec
inc
add
pop
and
cmpsl
shll
and
add
push
loop
xor
arpl
jmp
inc
fsubrl
cmpsl
jg
clc
cmp
dec
add
scas
fmuls
das
inc
mov
fdiv
pop
movsl
add
je
je
pushf
pusha
lds
adc
pusha
push
int3
cmp
in
aad
or
mov
xchg
jbe
cmpsb
mov
fistps
mov
in
imul
in
cli
int
jle
fsubrs
add
sbb
push
std
inc
outsl
push
test
fisttpl
mull
add
dec
ds
dec
fistpll
data16
nop
lret
stos
data16
add
or
add
stc
dec
xchg
add
rcrb
cmpsl
lahf
bound
repz
cli
or
jmp
push
addl
push
rorb
or
ret
xchg
sbb
int3
xchg
movsl
mov
and
mov
lods
push
sub
movsl
mov
or
xchg
sub
faddl
lret
add
inc
pushf
adc
or
jae
dec
add
and
shl
bound
sahf
xor
lods
lahf
aam
pop
inc
mov
scas
jne
loopne
mov
fcmove
movsl
cmp
dec
insl
call
mov
jbe
ret
outsl
test
mov
add
fcoml
dec
mov
out
cwtl
xchg
rcrb
xchg
mov
push
dec
add
jnp
add
lret
cwtl
lock
add
imul
rclb
or
jg
add
lret
push
add
jmp
sbb
icebp
mov
push
pop
test
mov
adc
or
repz
xchg
sbbb
sbb
push
ret
or
dec
cmpsb
fwait
int3
lret
jge
mov
stc
and
call
sbb
pop
dec
and
dec
lock
imul
add
cltd
shll
enter
rorl
add
jl
add
es
mov
inc
pusha
add
lods
sub
jno
je
hlt
outsb
mov
mov
nop
add
or
add
mov
add
fbld
sbb
aam
fcmovnb
mov
add
dec
sub
call
lahf
fcoml
adc
add
das
inc
lret
test
jecxz
and
aad
fldl
add
add
lret
adc
push
jp
out
mov
ds
sbb
mov
add
xchg
and
leave
sub
adc
mov
cli
dec
loope
jp
add
les
jae
addr16
and
add
or
dec
stos
lods
xchg
inc
inc
fwait
push
filds
adc
mov
adc
popl
sbb
iret
cmp
out
popf
add
shrb
mov
incl
arpl
ret
stos
dec
sbb
cwtl
mov
add
loop
push
lret
sbbl
jno
callw
pop
add
jnp
add
add
xchg
jbe
add
add
dec
mov
je
and
jmp
cmp
jl
jl
adc
out
repnz
and
les
icebp
jbe
out
xor
subb
sbb
clc
add
movsb
add
daa
leave
or
add
fwait
nop
rcl
insl
clc
cmp
lds
or
add
mov
push
mov
pushf
pusha
mov
cmp
pop
mov
mov
xor
out
add
pop
xchg
xor
pop
add
lods
push
or
rclb
gs
enter
add
jmp
add
insb
dec
jno
mov
rorl
sbb
cmp
jl
popf
push
je
pusha
add
int
pop
xchg
bound
xchg
imul
ret
cmp
jmp
je
in
fstpl
sub
lret
add
jmp
popa
xchg
rcr
add
aaa
cmpb
xor
add
mov
cli
pusha
sub
xor
test
add
cli
xor
repz
dec
jmp
add
stos
jns
dec
in
push
mov
loop
inc
scas
push
jnp
mov
les
xchg
pop
hlt
mov
add
loope
shll
add
cmc
pop
shrb
je
jb
sbb
shl
mov
ds
sbb
lods
xor
test
add
scas
mov
cltd
jmp
sub
push
test
cmp
add
jbe
xor
push
repz
insb
push
cmp
repz
push
xor
fsub
in
cmp
data16
clc
inc
sbb
ret
add
cltd
adc
inc
push
test
insb
loop
repz
add
cmp
movhps
add
fbstp
xchg
pushw
mov
pop
outsl
mov
push
mov
adc
faddl
xor
add
cmpsb
add
push
add
and
out
pop
jge
jl
push
cmpsb
add
push
ljmp
lods
cld
xchg
cmp
adc
jo
push
fcompl
fistps
lock
sbb
inc
mov
pop
jp
and
xchg
ret
push
cmp
int3
mov
add
mov
pop
and
add
shl
es
inc
cmpsb
push
scas
jb
dec
test
xchg
xor
pop
mov
mov
mov
add
ficompl
cmpsl
dec
push
add
icebp
std
cld
in
cmpsb
test
inc
jno
adc
cmp
arpl
pusha
insb
sbb
mov
adc
stos
xor
jo
addl
in
push
out
pop
scas
mov
sti
dec
or
lret
jge
push
mov
cmp
inc
loop
incb
sub
push
sub
cli
xchg
dec
test
fstp
or
cmp
jle
mov
not
adc
fidivs
loop
sbb
xchg
clc
push
jl
rclb
mov
and
aas
ljmp
or
or
add
add
xor
inc
enter
ljmp
insl
rcr
push
jbe
add
mov
jnp
sub
sbb
enter
movsb
xchg
add
mov
pop
add
or
test
dec
fiaddl
sti
mov
lret
inc
ds
or
icebp
leave
add
pop
add
mov
fdivrl
add
xor
aaa
jno
pop
clc
or
out
add
in
pop
and
xchg
add
jecxz
aad
and
lock
cmpsl
insb
sub
sahf
dec
push
incl
pop
stos
outsl
or
mov
xchg
push
mov
out
cmpsb
jne
insb
inc
repz
dec
add
adc
sub
jl
mov
ja
mov
xor
test
ret
cmpb
pop
call
lahf
add
lock
mov
push
imul
or
data16
mov
add
or
xchg
adc
incb
aaa
push
sub
add
add
push
iret
cltd
xor
inc
inc
add
or
addl
and
icebp
sbbl
cmp
or
add
add
xchg
pop
push
mov
add
movsl
pop
std
jno
lcall
jge
mov
add
fwait
mov
and
arpl
xor
cli
andl
push
add
xor
sti
xor
insb
inc
mov
mov
sti
rolb
mov
movsb
roll
add
or
mov
pusha
pop
data16
bound
xor
insl
imul
add
testl
adc
mov
add
fldcw
popf
adc
sbb
repnz
movsl
stos
dec
cmp
mov
jae
add
test
popf
pop
mov
mov
jae
je
pop
inc
in
cmpsb
adc
xor
jl
fsubrl
inc
xchg
add
push
outsl
push
and
xor
test
cmp
pop
add
add
insb
add
addr16
push
jno
jne
jl
inc
in
out
jno
push
in
rolb
push
mov
jle
sahf
ret
xor
fwait
nop
leave
mov
mov
sbb
arpl
out
pop
xchg
inc
xlat
cmp
sbb
les
pop
or
scas
int
add
pop
pop
pushf
mov
push
xchg
dec
imul
insb
or
lea
testb
out
adc
add
xor
mov
push
enter
pop
jnp
or
aaa
sub
mov
jbe
sbbl
imull
leave
jne
sub
test
mov
cmp
roll
std
aas
addl
xchg
push
lods
jns
cmpsl
lds
out
movsl
cltd
inc
add
inc
out
in
mov
sar
cli
fidivs
add
add
aaa
add
cmp
sarb
mov
mov
adc
cmc
sar
jg
xor
fwait
fs
out
cmp
push
jmp
push
add
cmp
repnz
int3
jb
call
xor
jmp
fldl
orb
add
daa
loop
dec
inc
je
fildll
enter
negb
mov
jne
incl
jge
sub
jg
test
mov
mov
inc
pop
fwait
push
mov
add
mov
andl
inc
inc
cmpsb
add
mov
pop
rolb
ret
jnp
inc
jl
or
or
jge
push
add
insb
add
jo
nop
in
mov
fbld
xchg
test
in
push
enter
roll
xor
addr16
push
cmp
adc
push
test
cs
not
filds
ret
xor
lea
jo
push
xchg
ja
add
push
jecxz
insb
test
push
hlt
sbb
clc
add
std
out
dec
js
jnp
sbb
lods
fcoms
loop
lods
popl
shrl
jp
ljmp
pop
inc
mov
mov
cltd
mov
dec
cwtl
rclb
push
mov
jecxz
out
add
pop
adc
adc
cmp
arpl
cli
jne
jae
ret
aam
xor
xor
int
test
loope
ret
jb
cmp
subb
lods
sbb
dec
stos
add
jmp
adc
jmp
push
imul
aaa
fisubrl
ljmp
cwtl
or
int3
add
push
testb
add
mov
add
sahf
add
sub
and
add
pop
push
xor
add
lret
add
pop
or
add
insb
dec
je
in
ffree
ja
push
inc
je
stos
inc
mov
pop
mov
push
pusha
xor
add
loope
mov
mov
sarb
xor
dec
ret
aaa
je
mov
mov
cli
sbb
fs
inc
clc
cwtl
inc
mov
fistpll
cmc
adc
jno
lret
out
fwait
bound
movsl
jno
in
or
push
repnz
push
dec
add
xchg
call
lret
fwait
and
dec
push
xchg
aas
outsb
cld
cmpb
andb
add
add
cmpsl
sbb
xor
stos
int
add
add
pop
fiaddl
popf
jle
add
lcall
add
xor
rcrb
cmp
add
add
out
sub
adc
imul
mov
repz
out
rcrb
adc
das
jns
in
shr
mov
mov
add
shll
xchg
test
fidivl
xchg
pop
std
push
add
std
out
xor
call
shl
and
sahf
cmp
xchg
mov
test
adc
dec
adc
insb
pop
push
pop
js
outsl
pop
sub
jbe
xchg
jle
push
rorl
mov
dec
into
push
rorl
icebp
nop
test
push
rclb
into
inc
xor
fcmovnb
mov
or
lods
cmp
mov
leave
cmc
mov
cmp
cmp
imul
inc
xor
jno
inc
jno
cmove
push
ret
add
cmc
insb
lods
push
or
iret
cmp
xchg
add
inc
sub
fdivrl
push
dec
xor
push
add
pop
mov
pinsrw
rorl
aad
adc
cmp
test
bound
mov
adc
push
or
jno
dec
insb
sbb
inc
mov
fwait
scas
pxor
add
mov
shl
mov
loop
test
push
inc
negb
fsubrl
xchg
push
or
jnp
mov
push
loop
xchg
scas
mov
add
into
rcrl
add
mov
cmp
add
in
cltd
add
mov
add
adc
fwait
int3
jb
shrb
sub
mov
dec
push
cmp
mov
stc
pop
lods
mov
push
ss
add
fs
add
aas
adc
sbb
add
sub
add
loop
xchg
jl
out
mov
mov
push
jp
xchg
pop
orb
dec
mov
inc
js
push
mov
or
pushf
stos
push
mov
outsl
imulb
cmpsl
add
and
add
xchg
hlt
rolb
roll
lea
inc
repnz
sbb
sub
xor
ja
jbe
call
mov
jo
inc
pushf
add
cmp
repnz
or
ficoml
stc
and
orl
add
add
lods
sbb
jg
mov
jno
daa
aam
iret
pop
and
insl
repnz
sbb
in
dec
sarl
fs
into
sub
jle
mov
add
jl
add
mov
scas
mov
aad
mov
neg
scas
push
add
add
lods
pop
cmp
and
cmp
mov
mov
inc
and
in
push
push
adc
mov
add
xchg
fcompl
add
imul
sbb
and
in
and
cmp
add
ss
daa
xchg
fidivl
mov
add
sti
dec
add
pop
test
cmp
fiadds
fs
add
and
test
sub
mov
mov
or
sub
int3
add
pop
xor
outsl
add
decl
add
lea
pop
testl
cmp
cmc
sti
add
xchg
ja
pusha
inc
testb
aam
test
or
daa
push
andl
xlat
and
filds
fiadds
or
out
add
sub
lods
and
test
adc
scas
adc
js
xchg
mov
add
adc
fbld
mov
add
xlat
into
les
shl
lock
scas
push
popf
mov
into
stc
int3
cmp
sbb
push
stc
cld
subl
mov
fildll
insl
cmc
add
sub
aam
pop
push
andl
add
or
adc
cmpsl
ljmp
dec
or
or
lahf
cmpsb
sti
iret
pop
cli
mov
push
cmp
cld
add
je
add
sub
movb
jnp
sub
mov
mov
mov
add
roll
popf
sbb
dec
rclb
jo
mov
add
and
cmp
add
add
mov
add
xchg
pop
sub
jmp
add
pop
ret
push
or
ret
xchg
cmp
out
sahf
push
iret
xchg
jl
add
sbb
sub
cmpsl
aam
test
push
sbb
inc
jns
lods
jne
sub
adc
dec
sub
xorb
and
sahf
js
mov
xchg
push
mov
jns
add
or
mov
add
sub
sbb
dec
or
push
sub
inc
rolb
mov
add
cmp
movsl
add
add
fisttpl
and
outsl
add
js
inc
dec
fwait
sbb
cmp
cmp
add
mov
add
addb
loop
cmp
pop
or
push
add
add
scas
pop
cmc
or
icebp
int
mov
xor
ror
mov
stc
xchg
test
inc
inc
pusha
stc
test
jns
ljmp
pop
add
jns
xor
inc
popf
jecxz
add
daa
mov
mov
or
xor
mov
cmp
enter
cmpsb
loope
fdivr
adcl
pop
popa
inc
addb
decl
cmpsb
sahf
ss
mov
cld
mov
cmpsl
dec
add
dec
pop
jmp
popf
dec
stc
call
mov
push
sahf
adc
sub
push
ret
and
pop
outsl
dec
call
fwait
dec
add
inc
add
xlat
jmp
sbb
add
sbb
add
icebp
cmp
aam
jg
iret
cmp
fidivrs
or
mov
fs
jle
and
in
aas
mov
sbb
jae
add
dec
sahf
push
dec
iret
or
movsl
sbb
in
loopne
mov
movsb
add
xchg
pop
sbb
fists
imul
es
hlt
movsb
xchg
push
loop
lret
cmp
add
cs
in
ret
int
lock
add
and
mov
add
dec
in
in
jno
test
mov
out
data16
lret
push
test
pop
add
mov
mov
mov
fcoms
jno
xor
and
pop
sbb
sbb
pop
shrb
outsb
add
sti
cli
jg
push
sub
mov
add
out
aas
add
roll
rcrb
add
add
dec
add
imull
push
fwait
push
fistl
add
jo
adc
outsl
cld
enter
inc
pop
movl
push
jnp
rcrb
adc
jle
push
shl
mov
add
es
add
xchg
inc
rolb
dec
lods
push
jno
cmp
hlt
add
xor
pushf
xchg
pop
ficompl
dec
adc
aam
fwait
stc
fsubrs
js
js
fcoms
mov
xor
cmp
push
jl
rep
test
pop
add
lahf
add
jae
jo
add
jle
pop
data16
add
add
jl
jbe
xchg
in
sbb
lock
addr16
and
sahf
es
add
lret
push
cmp
cmp
aam
std
push
pop
aam
mov
dec
ds
dec
add
push
loop
adc
gs
inc
stos
fdivs
lcall
nop
lock
jnp
iret
sbb
add
pusha
jae
repz
mov
enter
adc
pop
loopne
jne
les
loop
lods
call
inc
mov
sbb
xlat
aam
or
inc
lds
faddl
xor
addr16
in
add
inc
inc
jle
int
mov
dec
dec
mov
and
adc
mov
les
mov
jp
lods
xchg
mov
or
jns
add
stos
fildl
pop
insl
push
repnz
add
and
daa
std
data16
or
add
add
add
cmp
popf
push
sbb
push
scas
xchg
xchg
outsb
mov
xchg
int3
pop
nop
xchg
push
add
xor
mov
xchg
xor
push
mov
outsl
inc
add
das
mov
and
fnstsw
push
add
pop
sbb
les
adc
cmpsb
jns
mov
insb
and
add
add
int3
mull
sub
in
add
cmpsl
dec
inc
pusha
mov
or
aam
jae
pusha
addl
jg
lds
imull
pop
es
dec
mov
jns
scas
out
dec
popa
leave
mov
popf
add
cltd
adc
mov
mov
mov
mov
sub
mov
in
sbb
sbb
rol
pushf
jae
mov
out
shld
ret
pop
lahf
jg
add
cmp
and
pop
add
pop
add
mov
mov
push
jp
push
movsb
adc
ret
sub
iret
inc
test
jno
incb
jns
in
dec
popf
or
out
in
jnp
xchg
push
xchg
js
xchg
jnp
stos
rolb
xchg
mov
gs
insb
and
sbb
push
cmp
mov
mov
add
adc
cmp
push
pop
movsl
xor
aam
scas
adcl
iret
rclb
xchg
xor
add
je
hlt
mov
pop
sbb
add
loope
stos
cli
add
push
xchg
jg
lock
cmpsl
push
mov
pop
add
jbe
fadd
lods
or
dec
add
jge
cmp
cmp
mov
add
and
push
in
push
push
and
in
cmp
movsb
add
add
mov
sub
test
jge
outsl
pushf
add
add
push
jnp
mov
xchg
add
cmpsl
pop
xchg
inc
or
add
ja
add
out
es
pop
xchg
jmp
mov
add
add
insl
mov
add
pop
fstps
sub
pop
add
xlat
pop
or
inc
das
pop
xor
fwait
add
lcall
jo
add
mov
lods
insl
lods
sub
fiaddl
fwait
loopne
xchg
push
sbb
add
xchg
in
inc
add
stc
sub
subl
add
push
adc
aaa
js
loope
loop
movsl
mov
icebp
xor
push
add
push
mov
mov
js
mov
popf
mov
fldl
jnp
mov
fistpl
add
xchg
push
adc
jle
jno
sub
add
sbb
add
cltd
mov
cltd
pop
test
add
push
push
lret
xor
aaa
sub
add
daa
add
rcrl
pop
lahf
xchg
mov
sbb
push
pop
imul
mov
data16
out
in
pop
add
jo
scas
fnstsw
or
cli
fdivrs
je
lea
inc
in
mov
mov
jle
sub
les
cmc
ljmp
mov
cmpsl
repz
sub
add
add
add
in
gs
push
shlb
fisubl
pop
les
arpl
andb
add
jle
add
ljmp
mov
enter
stc
push
ja
pop
inc
jmp
out
nop
out
nop
inc
xchg
mov
xchg
push
sahf
cli
push
cmp
push
and
add
adc
add
ds
jae
lods
sub
rcrl
push
adc
push
inc
jl
mov
mov
pop
roll
lods
in
data16
pop
add
xchg
add
add
mov
imul
fbstp
mov
sub
sbb
add
add
ja
add
mov
test
jno
add
dec
pop
add
add
scas
push
xchg
sub
and
add
loope
roll
cmp
loop
stc
sub
sbb
inc
popf
filds
mov
pop
push
lods
mov
ds
or
add
pop
je
aas
add
repnz
mov
addl
cmp
cli
iret
loop
lret
or
push
and
add
jle
loope
add
imul
and
fwait
cli
add
push
js
dec
fisubs
sub
scas
cli
ltr
out
aaa
mov
inc
leave
sub
nop
sbb
mov
subb
mov
add
xchg
pop
stc
sub
add
stos
dec
add
inc
add
adc
sti
xchg
add
fcomp
into
or
call
cmp
or
push
hlt
int
fistl
mov
dec
les
sub
sub
dec
lds
mov
loope
sbb
xor
dec
leave
sub
add
add
push
lret
hlt
push
out
mov
fisubrs
mov
sarb
adc
inc
mov
fists
or
mov
push
jg
push
mov
or
lret
lods
loop
ss
cmpsl
verr
imul
sbb
mov
add
enter
push
inc
bound
inc
mov
push
test
sahf
adc
or
outsl
cmp
scas
pop
xor
add
jg
xchg
mov
add
test
or
mov
call
lods
jmp
mov
add
sti
lock
add
nop
xchg
push
and
mov
push
les
frstor
mov
repz
decb
lock
sbb
mov
mov
lcall
imul
in
pop
popf
jl
daa
mov
outsl
sub
add
stc
inc
repnz
insl
inc
pop
dec
not
mov
pop
xor
add
mov
pop
add
fbld
idivb
popa
fstl
push
add
cmpsb
ret
cmpsl
add
mov
jecxz
js
aaa
sbb
sbb
jnp
jg
add
clc
add
ret
fistps
sub
jecxz
out
inc
aam
jge
add
fstpl
popf
popa
cmp
mov
inc
dec
jp
jmp
mov
mov
test
jge
add
mov
test
sarl
jle
inc
cmpsb
int
add
test
int
mov
sbb
inc
jmp
xchg
test
cmp
sti
cmp
add
rol
out
add
jno
lcall
add
inc
enter
xchg
add
sahf
mov
call
fcomps
test
movsb
mov
popl
sahf
mov
lcall
and
clc
add
xor
xchg
iret
int
shrl
xor
and
add
mov
jecxz
in
add
or
pusha
push
mov
cli
imul
fadds
fidivs
jne
pop
popa
fld
push
leave
adc
adc
add
pop
je
sti
mov
mov
popa
xchg
out
adc
push
xchg
add
jge
add
gs
ja
add
mov
sbb
pop
inc
add
icebp
int3
adc
sub
rcl
cmp
rcl
mov
sbb
cli
mov
imul
add
call
sahf
inc
lods
lcall
mov
test
add
test
sub
jnp
mov
dec
sbb
shr
aam
es
lahf
jne
push
jmp
lahf
mov
pusha
xchg
add
add
jnp
pop
subb
loopne
idivl
mov
ficoms
inc
std
jg
daa
dec
stc
int3
std
add
arpl
add
and
sbb
push
mov
add
js
push
filds
mov
or
sbb
push
push
imul
and
sub
jmp
out
pusha
add
ss
adc
push
pop
ficoms
add
add
inc
mov
mov
ja
cltd
pop
stos
inc
add
lahf
lcall
xchg
cmp
jl
pop
pop
add
enter
mov
xor
push
aaa
mov
jno
inc
repz
or
dec
sahf
dec
mov
outsl
lock
loope
lods
roll
add
mov
fnstsw
cmp
mov
and
lods
jg
cmpsb
rclb
shll
loope
add
lds
xchg
out
loope
jae
push
inc
push
les
mov
sarb
insl
lret
jo
je
add
add
lods
shr
sub
ret
cmp
xlat
ljmp
dec
arpl
dec
lds
stc
btr
mov
aad
push
loopne
lea
or
adc
jb
dec
pop
pop
outsb
pop
xchg
movsb
or
cmp
enter
jne
pop
je
cmpsl
lea
sub
and
adc
stos
test
clc
pushf
fadd
arpl
pop
sbb
fdivp
mov
add
and
es
mov
fimull
andl
popa
add
fidivl
add
sub
insl
or
aas
and
jb
cmp
inc
int
dec
into
icebp
or
mov
or
jae
add
jl
sti
add
out
in
stc
mov
pop
add
sbb
data16
mov
mov
mov
icebp
daa
add
add
jns
lea
cmpsb
jnp
ja
xor
or
add
jns
push
jne
xchg
sbb
xor
or
lods
mov
sub
cmp
fwait
xchg
out
or
js
jns
imul
add
or
in
out
data16
in
xchg
pop
add
out
popa
testb
je
pop
and
addb
add
add
es
xor
test
repnz
loop
or
rorl
imul
add
adc
cmp
test
jbe
scas
add
sti
add
es
mov
sbb
add
leave
scas
pop
imul
jne
dec
and
fisttpll
mov
jnp
push
repnz
repz
rcr
sbbb
add
inc
test
mov
mov
out
inc
add
lret
mov
add
shrl
and
dec
add
fldenv
cmp
inc
dec
xchg
pop
shlb
jnp
add
int3
daa
dec
push
and
aad
add
cld
add
and
or
ja
sbb
add
les
roll
or
jnp
dec
xchg
inc
repnz
xchg
cmpsb
gs
add
jo
sbb
mov
cwtl
add
je
add
sub
pop
insl
mov
jbe
cltd
enter
push
add
xchg
dec
lods
in
inc
jae
jl
cmpsb
mov
rcl
xchg
xchg
in
add
call
ror
in
jbe
dec
insb
sbb
incb
add
and
pop
xor
xchg
fldl
inc
mov
sbb
sub
out
mov
cmpsl
inc
mov
xchg
sti
mov
add
push
add
lock
adc
add
popa
stc
pop
mov
or
popf
push
loope
sbb
jbe
shrl
out
mov
cmp
cmp
repnz
lods
in
xor
fs
mov
sub
adc
iret
add
push
xchg
jns
push
dec
in
loopne
add
sbb
incl
and
cmp
cmpl
and
push
mov
js
movsb
outsb
adc
add
xor
mov
pusha
sbb
sub
fs
sub
and
jae
push
ffreep
das
inc
add
mov
clc
ss
add
outsb
add
add
add
cli
sub
dec
dec
fisttpll
dec
sub
mov
add
mov
fildl
inc
bound
cmp
pop
test
add
imul
cli
xchg
pop
add
mov
daa
add
add
jbe
add
shr
sub
cmpsb
add
shrb
testl
push
xchg
cmp
arpl
sbb
jno
inc
loop
mov
jle
add
jno
pop
cmpsb
add
int
mov
push
add
xchg
sbb
stc
jno
jp
add
push
dec
add
add
pop
icebp
push
leave
dec
sub
xchg
stc
jbe
in
cli
ljmp
xchg
bound
mov
sti
in
je
aaa
add
jl
sub
ss
xchg
jo
inc
xchg
push
mov
add
and
dec
cltd
cltd
add
add
dec
push
xchg
int3
add
push
movsl
je
pop
dec
ljmp
mov
add
add
add
sti
and
jne
cmpsl
mov
adc
mov
lahf
xor
add
or
std
push
add
push
outsl
jb
add
jecxz
adc
outsb
push
mov
gs
in
in
arpl
add
daa
dec
aam
das
mov
push
add
and
test
jno
mov
adc
cmp
int
rclb
adc
and
je
inc
cmpsl
jmp
add
es
stc
dec
cmp
out
aam
inc
mov
flds
test
push
jnp
daa
hlt
xor
push
sub
xor
adc
push
push
sarb
aas
jb
pusha
repnz
cmpsb
adc
cmp
neg
insb
adc
lea
mov
inc
adc
dec
sahf
test
lds
fbstp
leave
pop
in
or
cmp
scas
jae
ja
mov
test
clc
pop
sbb
adc
stos
ret
xchg
mov
mov
mov
xchg
cmpb
cmpsb
imul
test
adc
pop
in
mov
and
aas
rcrb
jmp
mov
out
nop
xchg
clc
add
pop
std
add
cmp
jl
cmp
dec
and
push
lods
daa
jg
mov
xor
mov
add
pop
loop
add
rclb
sub
sub
add
je
mov
xor
add
push
xor
or
fidivs
fbld
jno
shl
jmp
jno
cmpsl
gs
in
pop
add
push
add
push
add
shrb
call
mov
sahf
xchg
mov
repz
dec
mov
push
nop
mov
loopne
dec
stos
notl
add
pop
pusha
add
bound
xor
psubq
or
fdivr
jl
add
in
add
sub
push
add
or
movl
enter
cmc
inc
add
add
push
fmul
mov
mov
fmull
dec
cmp
test
mov
std
mov
addl
arpl
inc
dec
sbb
pop
mov
mov
rolb
add
psadbw
pop
lcall
sub
or
xlat
cltd
add
xchg
push
xchg
adc
mov
adc
imul
sbb
sbb
jecxz
add
add
xor
jp
gs
dec
iret
out
cmp
push
cmpsl
mov
add
fcoml
ds
mov
sbb
enter
ret
mov
popa
inc
mov
es
xchg
sub
xchg
mov
add
int
lods
xchg
daa
into
fs
add
cmp
jmp
xlat
cwtl
mov
inc
mov
add
dec
gs
jp
add
add
add
add
dec
mov
jl
push
imul
push
pop
lret
imul
fmul
cmp
add
xchg
cmpsb
xchg
mov
es
sbb
out
mov
or
xor
rcl
jno
jnp
ljmp
jns
pop
in
mov
int3
cmp
xchg
add
inc
add
jns
gs
xchg
fimuls
mov
pop
jne
insl
jnp
jl
and
in
cli
mov
push
jo
or
test
or
pop
xor
cmp
in
lea
idivb
xor
filds
cmp
xchg
sbb
xchg
jmp
add
imulb
add
mov
shll
pop
cmp
add
jmp
inc
subb
into
sub
aad
jb
roll
mov
mov
mov
pop
sub
xor
and
rolb
loop
cld
fldl
cltd
add
arpl
push
pop
rclb
je
int
cmp
add
out
xor
cmpsl
inc
add
add
imul
mov
mov
lock
mov
add
push
aad
mov
bound
dec
or
ds
or
jle
dec
sub
movsl
leave
add
inc
pop
pop
je
sub
fldl
subl
jg
imul
xchg
jb
ja
movsl
outsl
hlt
push
adc
aad
mov
cltd
add
out
add
mov
mov
jae
ds
into
es
or
popa
inc
cmc
cwtl
xchg
out
xchg
jbe
mov
add
mov
cwtl
jge
test
rorl
mov
ret
add
clc
cmp
add
mov
fwait
add
pop
jb
mov
sbb
fimuls
cltd
popf
dec
and
or
loop
xor
mov
add
dec
pop
or
xchg
add
sub
inc
lds
jle
ja
nop
xchg
jbe
and
aam
jge
das
test
push
and
ljmp
add
add
test
adc
sbb
jnp
jb
shrl
lahf
hlt
jp
mov
mov
cmp
lret
cmp
or
stc
int
out
fistl
cmp
jno
test
adc
stos
loope
ljmp
push
sbb
out
cmp
sub
add
shrl
and
fdiv
push
mov
add
push
ljmp
xchg
jnp
mov
push
aad
sbb
mov
sub
cltd
cmpsl
insb
les
xor
lea
into
xchg
xchg
xchg
ds
push
ja
mov
pop
add
gs
pop
add
mov
loope
add
sahf
ret
and
into
loope
orl
fadds
cmp
into
ds
andl
cmp
stc
cmp
adc
roll
xor
xor
or
add
scas
add
pop
loope
into
cwtl
test
cld
out
popfw
push
add
mov
lahf
adc
push
jne
cmp
add
stc
and
mov
outsb
add
lods
push
pop
jp
jmp
aad
in
mov
cmc
bound
xchg
jmp
push
mov
sbbb
cld
outsl
sete
adc
lods
add
andnps
sbb
fstps
js
enter
or
add
ljmp
sbb
sbb
or
sbb
mov
in
pop
cmp
pusha
ret
push
aad
mov
into
negb
jge
xchg
xchg
pop
dec
bound
repnz
xchg
fldt
add
iret
mov
cmp
dec
cli
movsb
ljmp
sahf
stos
add
popl
add
adc
dec
movsl
add
mov
add
aas
pop
lock
cmp
movsl
cwtl
add
lds
xchg
fstpl
pop
push
lret
inc
and
fildl
xor
dec
lahf
cwtl
popf
test
outsb
add
add
cmovge
xor
dec
add
add
out
add
dec
add
xchg
push
dec
clc
add
sbb
mov
lret
mov
xchg
lcall
and
imul
xchg
in
repz
or
push
ss
sbb
add
arpl
stc
and
int
dec
add
push
pop
les
sub
stos
sub
add
add
jmp
gs
dec
inc
sub
out
jmp
xor
leave
insb
mov
sub
insl
in
sbb
repz
push
inc
pop
lret
add
xchg
mov
mov
push
add
adc
mov
add
aas
inc
sub
int
imul
add
add
cmp
add
sbb
loop
add
and
pop
or
push
xor
dec
add
add
subl
and
mov
aaa
jle
outsb
inc
test
push
add
add
sub
mov
push
add
xchg
add
and
cmp
lret
lods
jecxz
sbb
mov
cmp
ret
sub
xor
add
mov
je
adc
iret
lods
imul
das
sub
inc
add
jmp
imul
orl
and
fists
dec
in
dec
add
movsl
xorl
push
dec
ds
add
jo
push
push
xor
mov
mov
lea
add
pop
jle
jp
jae
and
xchg
test
mov
out
shlb
scas
or
add
add
jg
mov
pop
popa
add
fiadds
xchg
ret
fcomp
add
mov
out
add
pop
clc
mov
int3
sub
out
and
roll
jmp
stc
in
leave
inc
jg
mov
filds
mov
jmp
pop
and
mov
add
xchg
cli
cmpl
push
adc
arpl
cmp
adc
pop
sub
mov
sub
enter
into
add
aas
add
ret
mov
mov
fbld
adc
push
sub
mov
mov
pop
sbb
add
lods
add
fdivrl
mov
in
pop
cwtl
or
cmp
push
xchg
xchg
not
cmp
movsb
xor
dec
push
pop
cmp
flds
mov
push
cwtl
cmp
jg
inc
mov
xor
pop
xchg
mov
xchg
mov
jne
jp
mov
add
push
test
push
gs
iret
lds
outsl
add
add
add
xchg
sub
xchg
push
ljmp
add
scas
pop
add
lods
fldl
lcall
cltd
repz
xchg
cmp
outsl
mov
xchg
or
add
sub
push
pop
icebp
dec
outsl
add
mov
add
push
aad
addb
add
call
movsl
mov
mov
mov
jecxz
add
cs
add
aad
outsb
dec
add
lds
mov
xor
lods
sub
orl
push
xchg
add
popf
cmpsl
jo
dec
xor
xorl
inc
inc
jge
cmp
data16
mov
movsb
pop
stos
xchg
popa
push
popa
pop
mov
add
andb
test
in
in
in
jae
loopne
dec
push
xchg
lret
push
xor
dec
cmp
add
cli
mov
inc
les
stos
cmp
movsl
outsl
rorb
push
test
addb
pop
call
and
out
loope
mov
cmp
ret
cmp
xor
lods
pop
xchg
and
stos
jo
lahf
sbb
lret
clc
movsl
xchg
rcll
jae
push
mov
dec
sbb
pop
mov
sbb
cmp
mov
xchg
xor
sbb
sub
add
add
add
add
popf
insl
stos
mov
sbbl
push
mov
in
mov
pop
cmp
push
movsb
push
test
fimull
dec
mov
and
jnp
mov
dec
adc
mov
mov
adc
mov
cmp
loopne
add
xor
jae
sahf
xor
test
xor
sbb
push
add
cld
cmp
push
xor
lods
add
aas
mov
adc
lds
mov
add
mov
cld
adc
mov
bound
aam
in
dec
jae
xor
out
add
test
ficoms
test
lcall
sbb
mov
gs
mov
add
iret
sub
and
ss
and
lret
push
ja
cmp
outsl
rcrb
add
push
add
add
dec
xor
mov
cmp
sbb
cmp
fcompl
and
loop
xor
push
pop
cmp
sbb
inc
pop
sub
mov
popf
dec
ret
add
xchg
jbe
data16
dec
jl
xchg
adc
outsl
push
clc
push
sub
xlat
add
cli
and
jne
rcll
push
adc
out
pop
icebp
add
mov
jno
add
add
enter
mov
and
and
add
rorb
add
or
mov
test
lahf
jns
lret
adc
xchg
push
bound
aas
js
int
cmp
pop
decb
xchg
pop
mov
insb
les
lahf
dec
add
xchg
str
adc
xor
ss
add
push
es
sbb
add
mov
rol
sub
addr16
inc
daa
dec
cld
arpl
loopne
andb
xchg
lds
stos
jg
loope
and
sub
adc
dec
add
outsb
add
inc
add
jmp
add
pop
lock
fldcw
mov
ljmp
inc
or
jp
push
jp
dec
push
adc
push
dec
add
out
mov
clc
jne
pop
adc
jns
mov
std
jmp
cmpsb
popa
xchg
pop
cs
mov
jmp
ret
cmp
in
add
fidivrs
sbb
in
push
bound
lds
mov
es
test
cmpsb
outsl
clc
xor
faddp
push
clc
es
mov
cmp
jbe
adc
sbb
add
out
stos
lds
insl
sbb
roll
testb
and
into
adc
xchg
clc
dec
loop
icebp
jno
lcall
jnp
jl
lret
leave
mov
into
add
dec
push
xor
int
add
adc
fs
xchg
add
pop
bound
add
cwtl
fadd
pop
gs
mov
add
mov
mov
push
add
add
and
pop
mov
fimull
cltd
ret
add
ljmp
add
and
mov
dec
pop
mov
xor
inc
xchg
adc
gs
je
add
lret
jns
loope
ret
das
push
jl
sub
add
jb
js
mov
add
add
in
fs
mov
adc
add
test
mov
lock
add
sar
dec
pop
xlat
stos
sub
cli
ror
ss
mov
add
cwtl
faddl
xchg
enter
add
dec
mov
inc
jo
push
pop
push
andb
aas
or
ljmp
stc
mov
mov
add
bound
and
add
je
pop
subl
xor
adc
rolb
shrl
aam
cmpsl
outsb
sbb
les
or
pop
pop
pop
aaa
jnp
add
add
movsb
dec
push
or
cmp
push
add
shlb
and
into
add
push
test
sub
imul
push
cltd
jnp
mov
dec
clc
movsl
loopne
cmpb
sbb
dec
cmpsb
jg
js
das
cmp
jmp
jns
cmpsb
add
jmp
movsb
lods
cmc
out
mov
jp
add
mov
out
jnp
dec
outsb
test
aas
out
lcall
inc
xlat
insl
cmp
xchg
pop
pop
mov
sub
mov
mov
sub
inc
sbb
mov
push
mov
add
pop
in
lods
lret
loopne
fadds
shll
and
mov
pop
shlb
add
pop
mov
push
xor
mov
or
push
scas
and
xchg
cltd
add
cmpb
mov
cmp
add
insb
add
int3
je
fs
addr16
test
aam
mov
jp
sub
add
mov
pop
jp
xor
pop
repz
lahf
sub
add
add
adc
icebp
jae
add
or
int3
nop
test
cmc
push
mov
mov
inc
add
rcl
sbb
scas
out
add
and
mov
loope
es
add
adc
mov
adc
clc
testb
mov
addl
xchg
lcall
in
lret
mov
add
fldenv
scas
scas
inc
rcll
inc
push
sahf
jmp
repnz
popf
cmp
xor
xchg
pop
mov
jp
jno
stos
jbe
cmpsl
dec
mov
sbb
add
call
sub
jle
orl
add
ret
add
aas
iret
int3
flds
pop
je
add
xchg
add
jmp
add
mov
inc
adc
aaa
into
clc
and
rorl
add
mov
shrb
mov
or
cmp
xor
cwtl
jbe
ret
or
mov
mov
ficompl
mov
enter
nop
testb
inc
addl
jbe
mov
sbb
adc
ljmp
inc
dec
repz
push
ret
pop
add
loope
insl
imul
mov
add
xor
fistps
add
mov
rcrl
loopne
repnz
add
outsl
stos
hlt
sub
xchg
inc
jae
add
lods
xchg
sbb
js
add
lret
lcall
shlb
jno
push
or
push
mov
rcll
add
push
pusha
je
fwait
pop
cmpsb
je
or
or
call
movsb
lods
std
imul
jmp
push
mov
jg
les
pop
icebp
ljmp
loopne
enter
stos
mov
cmpsb
push
add
xor
icebp
std
mov
add
aam
xchg
mov
and
rolb
add
pop
add
sub
jb
cwtl
or
xchg
js
adc
dec
das
add
add
add
add
test
push
push
in
out
ret
stc
js
ss
int
mov
and
and
or
or
lret
scas
jnp
adc
loopne
nop
and
loopne
mov
sbb
cmc
frstor
ret
inc
or
scas
fdivrl
cmpl
cwtl
sub
aas
cwtl
pop
in
and
xchg
dec
xor
stc
out
fiaddl
ret
jmp
adc
mov
out
jns
fldcw
cli
mov
cmp
in
test
push
jl
out
fwait
nop
mov
mov
add
out
stos
test
enter
push
fisttpll
adc
hlt
dec
add
js
popf
add
movsl
push
adc
out
loop
or
or
pop
lock
add
add
mov
inc
sub
sub
nop
dec
inc
inc
mov
add
in
lods
sti
stos
mov
adc
lret
pusha
xchg
xchg
xor
loopne
add
clc
mov
inc
mov
aaa
inc
mov
loop
roll
leave
xor
or
out
dec
mov
lea
jb
mov
fmull
popa
aaa
in
add
pusha
add
loopne
add
jle
cmp
and
shr
mov
inc
xchg
dec
out
and
mov
jne
xor
insb
mov
adc
sub
sub
jno
pop
insl
add
inc
mov
and
pop
addl
lea
rolb
movsl
add
inc
scas
flds
ret
pop
js
add
hlt
in
add
cwtl
pop
fs
clc
dec
loope
cs
imul
jecxz
mov
out
add
rclb
into
dec
add
add
mov
jg
lods
and
movsl
in
sub
and
aas
js
daa
cld
faddl
xchg
pop
repnz
push
lods
gs
dec
clc
movsb
jecxz
stos
cmp
pop
jge
xor
add
mov
into
mov
int
arpl
in
cmp
sub
add
neg
dec
xor
test
sub
sub
in
or
movsl
push
pop
ss
pop
pop
aad
add
faddp
pop
out
sbb
jmp
lcall
fldl
push
push
adc
loop
mov
pop
in
add
mov
xchg
sbb
repz
add
imul
lods
daa
imul
jp
add
sub
hlt
iret
cs
mov
mov
popa
cmpsl
insb
pop
fdivrs
jb
add
sbb
cmpsl
jmp
fisubl
xchg
sub
mov
rcrl
sbb
into
in
jo
popa
inc
add
push
and
pop
mov
xor
push
mov
jp
push
add
xchg
and
lcall
sub
pop
js
or
or
es
jp
fdivs
add
std
mov
add
cmp
fs
xlat
sahf
roll
cmc
push
sub
cmp
test
enter
push
mov
inc
sub
dec
clc
push
cld
add
aas
imul
xchg
mov
mov
push
mov
sbb
or
add
push
add
scas
mov
sahf
sbb
add
addb
xchg
adc
out
xor
insl
add
into
push
es
add
outsb
popa
out
and
or
mov
cmp
mov
hlt
in
dec
pusha
dec
pop
stos
movsl
add
dec
je
iret
adc
pop
aas
or
aad
pop
rcrb
pop
int3
push
jg
rorl
add
mov
aas
sbb
xor
jl
pop
pop
jns
sbb
cs
sti
add
andb
cltd
xchg
inc
lods
je
ret
xor
divb
hlt
cmc
scas
xor
insb
sub
movsb
int
dec
push
int
push
and
test
xor
iret
stc
mov
call
ret
xor
and
fwait
add
jg
leave
aas
jp
mov
inc
add
sub
arpl
dec
add
inc
call
mov
mov
inc
cmpsb
cs
add
movsl
rcl
shr
cmpl
pop
insb
pop
mov
adc
loope
add
add
fidivrs
cli
std
jbe
insb
adc
mov
add
das
or
pop
repz
adc
clc
cli
adc
mov
push
xor
popa
sub
sbb
inc
sbb
push
adc
mov
or
aam
add
insb
or
ret
or
arpl
lret
stc
or
push
jecxz
shll
inc
add
dec
xor
pusha
add
inc
cmp
cwtl
cmp
movsb
cmpsl
mov
in
jns
push
add
fisttpll
jae
je
clc
stc
mov
ss
add
mov
shll
and
push
verr
ret
sub
push
add
add
into
aad
icebp
cld
filds
and
test
xor
add
shlb
jno
xor
mov
lds
jns
pop
pushf
add
lret
add
add
mov
add
cld
inc
test
cmp
loop
mov
les
adc
outsb
jle,pn
add
fisubrs
sub
adc
in
sub
jmp
add
xchg
mov
jbe
orb
push
in
cltd
jmp
push
cmp
pop
fs
xchg
mov
mov
add
sbb
aam
add
sbb
fidivrs
sbb
and
jnp
xor
push
rcll
jbe
call
repz
dec
shrl
xchg
outsl
movsl
in
rorl
test
pop
add
outsl
xchg
push
stos
add
in
add
adc
jl
daa
add
dec
imull
bound
cwtl
push
dec
sbb
jge
subb
sti
ficoml
out
jns
sub
add
cmp
mov
add
push
mov
into
sar
jl
std
pop
lahf
inc
imulb
xor
xlat
stos
cmp
sbb
xchg
xchg
xchg
sbb
out
ret
push
adc
add
mov
xchg
jl
rolb
aad
bnd
roll
dec
cmp
mov
pop
int
lahf
bound
addb
mov
xchg
sbb
mov
inc
mov
fisubl
mov
das
test
xor
jmp
popa
xorb
mov
shll
cli
iret
mov
add
jp
add
and
mov
sub
jmp
pushf
mov
jb
out
mov
ret
push
add
push
sbb
in
stos
add
add
dec
inc
je
add
add
jle
add
add
outsb
sbb
lahf
or
enter
sub
je
std
mov
xlat
add
jmp
es
decb
scas
push
rolb
pop
dec
mov
imul
mov
iret
push
sbb
cli
bound
push
mov
test
fsubl
test
movsl
inc
push
xacquire
or
fwait
add
lods
pushf
inc
sbb
imul
dec
jb
sahf
ret
add
xchg
sub
scas
add
and
jb
push
and
dec
xor
xchg
adc
flds
out
jo
jl
mov
jae
add
push
push
jge
mov
xchg
add
dec
pop
add
stos
adc
jge
and
cmpsb
mov
add
loope
popl
into
and
add
fs
lret
add
dec
int3
mov
daa
fwait
or
xor
mov
add
dec
pop
sub
inc
movsl
outsb
mov
shll
mov
mov
lret
testl
mov
pop
popa
mov
push
insl
cmpsb
std
in
cs
dec
adc
add
test
jns
lds
std
add
cmp
add
iret
push
add
out
jmpw
xor
shr
sub
sbb
outsl
into
lods
add
cmp
int3
push
add
orl
aas
mov
clc
mov
cmp
or
mov
popa
jnp
xchg
dec
fisubs
push
lcall
add
push
jo
add
movsb
sar
push
dec
aas
jge
mov
popa
shlb
mov
cs
out
sar
sbb
jle
popf
xchg
insl
mov
lea
int3
int3
outsl
pop
and
movsb
jae
mov
das
aas
ljmp
pop
mov
xor
xor
fiaddl
mov
and
pusha
add
jne
flds
cmp
push
roll
push
in
cltd
jo
mov
and
loop
cmpsl
ljmp
es
add
mov
pop
scas
add
add
sub
into
sub
xlat
mov
mov
sbb
mov
ret
mov
add
ret
sahf
add
dec
in
adc
push
or
inc
add
or
push
shr
lock
mov
popa
repz
sbbb
pop
adc
cmp
rcll
fs
testl
ljmp
jne
adc
inc
cmp
mov
cmp
mov
pop
out
cmp
sbb
pop
xor
pop
stc
mov
and
icebp
mov
mov
loop
add
cltd
add
push
sub
xchg
dec
mov
add
dec
add
push
add
aam
jb
xorb
cmpsb
cmp
adcb
add
clc
sti
push
mov
loopne
ficoms
ret
cmp
shl
add
cmp
int
mov
ret
xor
loopne
add
push
je
mov
daa
add
push
add
roll
xor
dec
ds
stc
aad
pop
adc
inc
aam
pop
dec
xorb
imul
dec
jns
or
cmp
adc
imull
adc
pop
movsb
mov
cmp
push
movl
mov
xchg
cli
les
pop
add
push
sub
loop
cs
addr16
roll
out
mov
cltd
push
add
mov
jl
jns
add
fcoml
xorb
clc
add
jle
enter
and
rcl
ja
addl
xor
mov
mov
add
mov
add
mov
aas
xchg
push
and
mov
add
jg
movlps
and
add
mov
gs
out
int
loop,pn
sub
mov
jge
adc
popa
push
and
gs
push
add
xlat
ret
xchg
add
cmp
dec
jns
mov
dec
dec
jle
cmp
push
addb
pop
adc
dec
sbb
pushf
or
adc
pop
dec
sbb
pop
std
xor
xchg
add
iret
push
add
add
or
lcall
fcmove
add
mov
outsb
mov
pop
stos
mov
add
lret
inc
mov
loop
and
andb
loope
icebp
xor
pop
cmp
insl
dec
in
mov
dec
mov
les
xchg
repz
push
xchg
dec
xor
jnp
mov
xchg
jnp
mov
aam
rol
add
push
iret
push
les
out
push
mov
pusha
popf
xchg
add
mov
and
sub
lds
pop
mov
mov
int
test
in
xchg
cwtl
pop
add
sbb
adc
jle
pop
add
imul
add
je
xchg
aas
xchg
mov
std
adc
sbb
mov
xor
xchg
outsb
mov
daa
inc
xchg
cltd
add
xchg
dec
add
xor
add
test
sahf
icebp
jle
pop
add
mull
cld
pop
push
sarb
js
inc
xchg
sub
add
enter
les
cmp
jbe
sub
add
lahf
fwait
mov
shrb
cmp
cmpsl
rorb
xchg
mov
into
xchg
bound
cwtl
out
es
in
cltd
push
or
jbe
xor
arpl
mov
and
mov
mov
xor
lock
fmuls
jbe
roll
push
repz
mov
lret
popf
roll
add
jge
cmpl
add
cld
sarb
in
xchg
jmp
jb,pt
sahf
mov
push
iret
fnstenv
pop
repz
test
add
ja
lret
out
jno
test
fstps
or
std
lock
inc
loopne
pop
scas
fisubl
or
cmc
addr16
cltd
sub
adc
fmul
inc
xchg
dec
xchg
mov
flds
mov
in
and
mov
les
outsb
xor
xchg
fisttpll
jb
add
popa
das
add
cmp
scas
orl
push
fimull
sub
jnp
les
add
add
add
insb
aad
cmp
fs
int
hlt
add
xchg
mov
push
add
push
jo
add
pop
sbb
cmp
dec
adc
filds
push
subl
imul
ja
mov
cmp
roll
or
push
add
in
aad
push
adc
jle
and
add
lds
out
jae
push
xchg
mov
sti
cwtl
into
sbb
push
cmp
fsub
sub
sub
mov
icebp
pop
cltd
add
call
adc
ret
shld
fisttps
cli
pop
or
mov
pop
mov
orl
pop
sbb
jne
jl
popl
mov
enter
or
loopne
push
jle
shrl
cmpsl
mov
jae
in
loop,pn
inc
icebp
pop
lods
xchg
orb
jge
push
or
iret
jge
mov
xor
sub
fsubl
pop
add
out
or
in
xor
andb
sbb
mov
jno
mov
lret
pop
fsubrs
add
mov
or
in
cwtl
stos
push
aad
sbbl
add
and
filds
jnp
add
int3
inc
lea
add
and
add
sub
sbb
int3
add
add
jmp
add
add
xor
inc
dec
push
or
cmp
jp
push
addr16
cmc
js
mov
jns
aas
cli
xor
lods
in
add
mov
add
loopne
mov
mov
pop
jno
stos
inc
aad
add
les
pop
mov
shl
mov
mov
xor
scas
add
add
fnstcw
pop
test
sbb
add
bound
out
jns
adc
pop
add
add
ss
fidivl
inc
add
and
add
mov
into
negb
es
fildl
jnp
hlt
dec
ja
sbb
stos
js
add
out
inc
push
ds
add
add
lods
js
pop
push
cmc
fucom
mov
jp
popa
dec
aaa
sbbb
mov
mov
push
das
fsts
daa
mov
syscall
and
das
andb
notb
mov
add
scas
cwtl
rcrb
mov
test
mov
bound
jmp
int3
out
imul
add
add
sbb
pop
jb
adc
add
pop
in
sti
add
jge
sbb
push
pop
xchg
lahf
push
push
xchg
ret
roll
xor
outsl
mov
xor
mov
add
push
jno
ret
add
insl
cmp
add
fucom
cmp
aad
xchg
movsl
xor
lea
inc
stos
add
movsb
or
daa
loope
bound
jnp
xchg
sbbl
xor
mov
dec
or
inc
jae
repnz
xor
push
adc
cmp
sti
mov
pusha
int3
add
add
fdivrs
jmp
in
pop
andb
lods
test
insl
mov
pop
add
push
xlat
hlt
push
add
ret
fwait
mov
incl
cld
add
mov
or
dec
xchg
inc
pop
fisttpll
xchg
pop
add
das
xchg
add
xor
cmp
sub
lods
add
xchg
or
xor
mov
cld
jne
in
add
pop
sub
and
add
out
aaa
aaa
out
jnp
in
pop
push
and
inc
add
inc
and
popa
add
scas
push
inc
in
sub
add
pop
subb
js
mov
outsb
or
inc
pop
add
adc
aas
pop
and
in
outsb
popl
shr
bound
dec
jp
jno
inc
pop
repnz
pop
mov
cs
scas
mov
jp
out
push
add
shrl
jle
jl
jo
push
test
ja
movl
jge
dec
add
loopne
push
add
add
mov
mov
cld
push
xlat
dec
hlt
add
add
adc
jl
fnstenv
shll
lds
enter
add
add
and
push
push
lcall
xlat
scas
add
lcall
jae
mov
push
hlt
add
mov
mov
cli
pop
xor
sbb
pop
test
add
mov
xchg
xor
ret
mov
mov
imul
shrl
lret
add
dec
add
loope
add
nop
imul
add
adc
scas
bound
outsb
enter
xchg
rcr
push
lcall
mov
loopne
outsb
enter
daa
inc
scas
loop
add
add
cmp
faddl
fadds
fs
loop
mov
cmp
sub
incl
adc
imul
pop
push
in
seto
dec
out
mov
dec
inc
jno
lret
outsl
push
adc
jns
sub
mov
mov
out
jge
lret
fistpll
add
or
mov
add
add
jmp
std
shrl
cmp
jb
add
das
cltd
jb
dec
ret
outsb
imul
sub
stc
sbb
cmp
mov
add
sti
loope
dec
sarl
ficomps
xor
dec
enter
mov
jl
rcl
add
fstpl
fstps
in
movsb
jg
popf
fdivrp
cmp
add
jno
repnz
xchg
jmp
sub
and
call
push
lds
mov
add
enter
loop
add
call
sub
lods
data16
nop
jne
xchg
inc
adc
mov
roll
cmc
sarl
gs
cmp
add
in
jg
dec
pop
dec
push
xchg
add
sbb
cmp
mov
jnp
scas
in
lods
fmul
and
add
or
add
sti
out
outsb
xor
pop
movsl
fldt
jp
call
scas
scas
add
jnp
pop
or
add
in
icebp
mov
repnz
mov
jmp
xchg
xor
shll
aad
aas
jnp
ret
ret
int
nop
sub
sbb
adc
push
into
add
inc
xchg
int3
pop
aaa
add
sub
pushf
cmp
and
add
test
add
stos
add
leave
jno
dec
stos
ds
add
add
pusha
or
mov
mov
pop
lea
push
insb
inc
mov
in
add
inc
or
or
std
stc
push
stc
xorb
and
rcl
adc
scas
sub
test
cmp
hlt
add
addl
add
add
add
ret
add
mov
movsb
xor
add
out
xor
sbb
dec
xchg
add
xchg
add
push
fcomi
mov
shrl
stos
je
add
push
rcll
add
pop
out
ret
add
lds
insl
in
fdivrl
adc
add
add
xchg
pop
or
outsb
ja
or
mov
andl
dec
fwait
jmp
jbe
je
dec
push
mov
dec
lret
sbb
mov
push
stc
lret
cmp
mov
cli
cmpsl
ljmp
ret
add
gs
lds
sbb
add
insl
sahf
add
insl
imul
int
add
push
and
dec
popf
push
xchg
inc
addr16
cltd
xchg
lea
mov
sub
add
adc
dec
inc
push
pop
lahf
scas
gs
mov
add
push
sub
outsl
nop
jae
dec
xchg
add
dec
jmp
and
sbb
ja
bound
je
es
jle
mov
adc
mov
jp
fisubs
add
add
iret
stc
jbe
push
jo
mov
lea
sbb
jp
fstps
ss
sub
jp
add
jmp
inc
mov
add
enter
jmp
mov
outsl
addr16
out
mov
jb
dec
add
sub
add
sbb
or
or
insl
sbb
pop
add
adc
fcomi
add
sbb
mov
sbb
es
pop
sub
popf
insb
push
adc
call
aam
aaa
repz
sbb
das
adc
jns
xchg
outsl
cmp
pop
and
jno
ret
xchg
outsb
cltd
rorl
xchg
in
imul
ss
push
add
sub
xor
push
add
xchg
push
cmp
popf
insb
insb
rclb
add
xchg
and
xor
and
cmp
out
xchg
jae
fstpl
out
add
add
sbb
dec
test
and
int3
and
cmp
imul
pushf
jge
xor
in
in
mov
adc
arpl
inc
stc
enter
add
add
es
out
aas
add
cmp
adc
add
cld
cmc
add
cmc
add
imul
pop
ret
pop
lcall
rcl
add
pop
or
dec
push
cwtl
enter
mov
mov
push
and
cwtl
cmc
es
pop
add
inc
pushf
sbb
mov
add
jmp
mov
loop
xchg
bound
mov
pop
mov
or
xchg
sub
test
andl
add
xor
es
pop
push
test
arpl
add
add
mov
cmp
adc
add
pop
jmp
mov
xchg
outsl
adc
scas
mov
add
fidivl
adc
jg
lods
movsl
add
add
add
jmp
xchg
sarl
add
aaa
push
lea
jg
cmp
test
ja
rcr
movsl
mov
add
add
mov
loop
mov
xlat
mov
push
insl
inc
push
scas
test
gs
or
iret
enter
jb
iret
add
jecxz
adc
xor
jl
jae
adc
out
sahf
add
xor
pop
frstor
movsb
and
cmpsl
mov
adc
add
push
add
jns
aas
mov
imul
mov
and
das
jle
inc
add
and
inc
cmp
push
mov
sbb
xor
fadds
mov
lahf
jae
mov
and
insl
mov
pop
push
in
adc
inc
pushf
daa
cwtl
lds
cli
ret
loop
add
pushf
pop
into
leave
lods
in
fdivrp
je
add
call
add
mov
push
sbb
mov
add
fs
scas
dec
adc
aam
push
cmp
and
sub
sub
add
add
inc
pop
cmp
ljmp
xlat
mov
dec
cltd
push
or
xchg
add
xor
imul
xchg
add
hlt
xchg
xor
in
imul
outsl
in
in
fdivrs
mov
lods
shrb
xchg
loop
adc
sub
cmp
cwtl
push
aas
cmp
fs
cmpl
or
cmp
test
add
add
and
jnp
add
cmp
add
incl
jo
cmc
add
add
xor
sub
fs
add
outsl
push
mov
out
push
dec
or
mov
in
xor
add
inc
movsb
push
push
push
cmp
jae
sahf
xchg
push
arpl
add
mov
arpl
scas
mov
xor
sti
sub
add
sbb
pop
or
out
xor
mov
add
into
pop
repz
push
add
add
sbb
cmp
fnstcw
mov
pop
ss
mov
sbb
nop
dec
inc
clc
push
adc
out
add
dec
fwait
or
stc
mov
stos
arpl
dec
dec
jo
xchg
outsl
xchg
cld
add
scas
mov
add
jge
mov
push
mov
add
mov
sub
adc
push
stos
push
ret
adc
arpl
into
jg
loop
lret
nop
push
stc
fnsave
add
fwait
xchg
aaa
pop
add
clc
add
lahf
push
add
pop
mov
jp
dec
mov
dec
xlat
jbe
add
stos
cmc
pop
outsl
sbb
add
rorl
add
and
or
enter
rorl
mov
jb
fadds
adc
push
hlt
test
add
mov
cmp
jg
cltd
daa
cs
or
adc
dec
add
push
add
xor
xchg
stos
add
inc
test
mov
jae
into
movsl
ljmp
cmp
add
add
cmp
orb
xor
cmc
add
ss
or
add
add
sub
add
or
add
test
loopne
add
fists
push
add
add
dec
push
add
cmp
push
jge
mov
mov
cltd
mov
cmpsl
or
mov
adc
fwait
pop
pop
aad
test
test
aam
pusha
test
jo
stc
pop
ret
cmp
xor
popa
call
pop
pop
xchg
cmp
jle
pop
fs
fnstenv
gs
add
stos
jg
lods
cmp
sbb
add
fucomip
push
enter
pop
std
cmp
out
add
adc
add
lahf
lods
push
loop
pop
inc
pop
loop
add
out
out
pop
imul
add
iret
sbb
jae
iret
movsbl
mov
cmp
sub
jmp
and
pop
cwtl
int
nop
lret
lods
out
dec
mov
iret
scas
addr16
jg
dec
push
lret
sbb
imul
add
subl
adc
clc
xchg
sbb
pop
loope
lock
aaa
andl
push
add
xchg
shl
sbb
cmpsb
dec
shll
stos
jp
sbb
mov
repz
sbb
jge
mov
lods
mov
pop
repz
add
fsubl
adc
mov
je
aam
pop
scas
iret
das
dec
mov
sbbb
push
movl
mov
jbe
mov
add
push
cld
mov
pop
mov
xchg
out
enter
jge
in
and
call
sub
push
jmp
add
dec
sti
cld
pop
adc
fildl
out
mov
pop
pop
push
add
pop
cltd
xor
lods
add
add
int3
add
jl
loopne
in
movsb
pusha
sub
movsl
addr16
add
leave
ja
jo
add
and
and
push
dec
pop
push
das
outsl
cwtl
push
add
lahf
dec
fs
int
add
mov
aaa
xchg
imul
out
add
dec
cmp
aas
mov
adc
movb
push
shr
adc
stos
and
push
push
add
mov
bound
lds
inc
push
pushf
pop
or
mov
push
xchg
sbb
loop
fidivrl
repnz
cmp
addr16
mov
push
bound
or
sahf
dec
lods
bound
in
inc
adcb
add
negl
pop
add
add
and
inc
xor
lcall
aas
xor
ret
repnz
adc
push
push
les
mov
jae
jmp
add
add
mov
inc
push
inc
add
dec
inc
mov
inc
add
or
pop
jnp
jne
push
mov
inc
leave
shl
lcall
xchg
sbb
and
add
add
inc
pop
sbb
xor
sahf
cli
in
pop
and
pop
mov
scas
push
jnp
lea
pop
mov
cli
adc
add
mov
pushf
mov
rcr
add
dec
rcr
cmc
push
movups
scas
add
push
add
xor
ds
push
xor
push
cmp
mov
xor
insl
sub
in
push
push
cmp
out
int3
shll
out
addl
and
mov
mov
pop
in
cwtl
xchg
jecxz
dec
dec
stos
or
sbb
cmpsl
add
daa
and
es
adc
clc
fdivs
call
inc
cmp
xchg
les
pop
lds
fsub
adc
insl
icebp
push
stc
xchg
push
pushl
lods
imul
and
pop
xchg
imul
or
fdiv
cmpsl
stos
push
add
fistl
dec
sbb
scas
loopne
adc
in
and
add
in
icebp
pop
add
mov
mov
push
dec
fwait
js
add
mov
loopne
or
and
sub
xchg
lret
daa
lock
lahf
out
cmpsl
int3
or
jo
dec
rolb
popf
pop
lods
xor
xor
leave
xor
pusha
cmpsb
ljmp
inc
cmp
xor
test
test
push
or
xor
rolb
push
pop
sarl
add
out
rcrl
dec
pop
fldcw
mov
xchg
add
add
pop
add
jno
cmp
cmp
aam
jne
pop
xchg
out
addr16
mov
ljmp
sub
inc
add
add
inc
outsl
xor
pop
mov
dec
bound
test
adcl
add
jg
push
sub
push
sbb
lret
pop
cs
mov
or
in
insl
adc
scas
popa
cli
dec
testb
add
add
les
adc
push
sbbb
add
test
add
mov
pop
jge
add
inc
pop
outsl
lock
xchg
dec
jno
mov
pop
outsl
inc
push
dec
mov
mov
push
adc
push
jg
in
pop
add
xor
push
ljmp
call
out
lods
sub
in
insl
pop
loopne
and
mov
cmp
sahf
cmpsb
in
dec
aaa
add
shr
cmp
mov
or
push
jne
push
sub
add
pusha
adc
or
or
hlt
rcrl
push
stos
lret
es
test
inc
mov
cs
fimull
adcb
jge
adc
out
mov
ror
fstl
imull
add
cs
add
pushf
sub
and
xlat
lcall
repnz
aam
pop
add
insb
sub
add
out
movsb
cmpsl
jno
jmp
rolb
pop
sahf
xchg
dec
cmp
jne
loop
outsl
js
xor
das
sbb
movsb
nop
subl
cmc
stc
add
sbb
gs
dec
push
pop
pop
inc
push
add
xor
lods
pop
lcall
hlt
xor
movsb
rcr
add
add
stos
icebp
xor
mulb
adc
mov
mov
les
sub
cmp
rolb
fs
add
push
add
inc
adc
add
leave
or
gs
cwtl
hlt
dec
mov
scas
push
and
pop
adc
lods
mov
xor
add
or
xlat
sub
iret
popf
or
sbb
mov
push
sbb
push
dec
sbb
dec
aaa
add
mov
cmp
xor
mov
aaa
adc
jl
add
jg
add
mov
scas
nop
xchg
imul
scas
jne
mov
das
pop
sbb
xchg
cmp
jmp
in
mov
push
push
sub
push
add
dec
cmp
xor
dec
inc
push
pushf
add
dec
push
sub
sub
mov
test
cltd
add
out
andl
scas
push
add
pop
data16
call
out
shlb
add
cmp
roll
xchg
stc
cmp
or
jbe
lds
fiaddl
cli
mov
add
pop
xchg
or
add
pusha
add
adc
int3
cmpsl
xchg
inc
dec
lahf
push
fwait
mov
or
int3
pop
xchg
add
pop
lods
jg
or
jne
insb
addr16
add
add
ds
out
filds
pop
push
es
add
dec
pop
cmpsb
fs
xchg
flds
in
sbb
mov
int3
jle
push
dec
jbe
das
xor
add
movsl
add
ds
aaa
push
add
aaa
add
dec
push
dec
out
stc
xlat
push
mov
lahf
push
add
add
pop
cmp
jnp
mov
add
rolb
mov
or
sub
add
mov
mov
pop
sub
cmp
adc
jb
inc
add
lret
mov
or
cmpsb
iret
test
daa
test
push
mov
fmuls
nop
add
jno
xchg
call
movsl
and
mov
inc
xor
into
pushf
inc
cmp
and
jns
dec
push
loopne
imulb
mov
mov
jl
ret
mul
cmp
jns
xchg
aas
sbb
fbstp
add
aad
loopne
add
pop
inc
movsl
fisubs
mov
add
push
pop
inc
cwtl
loopne
hlt
jle
mov
aad
test
filds
stos
mov
leave
mov
mov
jge
das
pop
fidivl
jp
test
lods
lock
and
scas
and
and
sti
test
sub
pop
pusha
decl
mov
pop
scas
adc
mov
mov
movsl
xchg
add
hlt
mov
aas
push
inc
push
lcall
add
mov
lea
mov
test
cwtl
add
cmp
imul
ja
lret
adc
jne
sbb
mov
mov
xchg
add
add
xchg
and
pop
and
add
add
xor
data16
xchg
mov
je
stos
mov
add
push
sub
add
add
add
sar
and
dec
push
fcomps
jno
icebp
stc
push
pop
ficomps
movsb
sub
cmp
add
add
data16
sahf
stos
push
cmpsl
movl
mov
or
cltd
push
mov
mul
outsl
std
in
add
aaa
mov
xchg
jp
jge
push
es
add
sub
add
rol
push
lods
sahf
mov
les
imull
mov
add
add
add
add
leave
fisttps
roll
jns
repz
cmp
push
in
jb
in
mov
mov
dec
add
mov
adc
popa
push
dec
js
add
vmwrite
sbb
incl
test
rorb
les
loope
lcall
mov
add
fldl
cld
mov
xor
mov
out
out
aad
ret
ja
mov
sub
cwtl
and
or
and
jmp
and
sub
pop
in
fdivrs
add
add
or
xlat
fbld
cmp
adc
repz
addr16
stos
mov
cs
sub
enter
ds
mov
loope
sbb
sbb
lret
cli
sub
cmp
push
push
or
ficoms
pusha
cmp
icebp
xchg
or
pop
lret
add
add
mov
cli
and
xchg
add
xlat
cmpsb
hlt
scas
inc
xor
cmp
bound
jecxz
ret
es
mov
lods
test
faddp
pop
pop
sarb
mov
sub
push
iret
inc
cmp
cmp
pop
add
push
scas
outsl
mov
leave
push
adc
aad
mov
jbe
mov
ljmp
or
sub
add
lods
mov
inc
insb
add
sbb
dec
jg
push
cmp
lods
int
dec
push
out
loop
pop
jo
push
das
add
add
das
jecxz
add
mov
add
add
popf
mov
nop
arpl
xchg
add
add
cld
add
call
inc
arpl
mull
imul
sub
fisttps
call
mov
xchg
ja
sbb
and
add
js
arpl
sub
fidivs
pop
xor
and
dec
cmpsb
sub
mul
adc
addr16
out
inc
add
in
mov
xlat
mov
insb
xchg
xlat
sbb
adc
movsb
adc
add
and
stc
aas
jns
mov
dec
rcll
add
jle
xlat
outsb
add
pop
sbb
sub
cmpsl
mov
popa
les
stc
cmp
nop
adc
sbb
jnp
mov
imul
adc
rorb
xor
mov
in
mov
adc
add
xchg
cmp
rcl
xor
push
adc
bound
scas
mov
les
mov
scas
cmp
pusha
fnstcw
mov
int3
push
cmpsl
sub
loope
arpl
add
shlb
shll
jno
icebp
cmp
push
out
ret
mov
sbb
cmp
cmpsl
add
loopne
lea
mov
cli
and
add
enter
xor
sbb
mov
pop
shl
je
mov
nop
add
jne
mov
push
fildl
push
inc
lods
xchg
or
dec
int3
addl
and
pop
daa
mov
mov
xchg
add
out
gs
ret
adc
push
jo
scas
pop
into
sub
mov
andb
orl
jne
mov
loopne
into
nop
mov
clc
push
fmull
xchg
mov
push
outsl
cmp
jecxz
das
in
add
pop
cld
xor
mov
sub
or
fmuls
xor
mov
cld
add
mov
loopne
fdivs
xchg
adc
aas
add
cmp
xor
fiaddl
mov
arpl
das
inc
in
add
out
loop
inc
jnp
mov
ljmp
pop
mov
pop
xchg
jnp
ret
jl
add
movb
pusha
divl
loopne
or
mov
sbbl
adc
inc
insb
xorb
scas
dec
nop
ret
mov
add
dec
jle
ljmp
test
jns
aas
daa
mov
int3
sub
push
out
add
lret
pushf
ds
jecxz
inc
xor
lods
ljmp
jmp
adc
sbb
add
inc
mov
push
jmp
arpl
jnp
or
cmp
sub
add
gs
sbb
nop
repz
lock
lret
jnp
iret
das
or
loop
loopne
gs
stc
daa
jp
mov
fildll
cmpsb
into
fbstp
pop
insb
xchg
ret
cli
rolb
outsl
movsb
mov
mov
das
notb
in
movb
xor
mov
cmp
cmp
add
add
movsb
lods
mov
mov
mov
aad
loop
xchg
and
inc
adc
sbb
inc
dec
fsubs
mov
add
add
sub
es
lock
mov
int3
dec
jo
or
sub
add
mov
das
aam
add
les
inc
xchg
jle
push
cwtl
lcall
add
add
bound
mov
arpl
jg
stc
add
inc
push
movsb
adc
lea
add
popa
popf
push
arpl
add
mov
pop
fmuls
jb
addr16
dec
fucomp
add
data16
insb
sti
test
xchg
fstps
sub
xor
push
rorl
test
ret
xor
adcl
bound
pop
adc
push
imul
mov
pop
add
stos
push
add
push
lea
ljmp
add
insb
cmp
push
xor
add
call
push
aad
clc
mov
jne
in
mov
imul
sti
add
cmp
incl
outsl
xlat
cmp
aas
push
aam
cli
lret
sub
mov
fiaddl
or
jmp
lret
sub
mov
int
sub
flds
mov
repz
shrl
scas
pop
jmp
sub
rcr
xor
lret
dec
sub
inc
lods
adc
inc
add
jmp
enter
pusha
mov
xlat
mov
push
dec
out
pop
sahf
add
pop
pop
xchg
xchg
je
cld
rcll
sahf
cmp
add
js
mov
jno
push
push
insl
rcrb
jae
add
sbb
fidivrl
add
ret
pushf
mov
roll
insb
and
cmpsb
int
add
sarb
adc
pop
cmpsb
imul
add
cltd
mov
add
stos
clc
test
cli
xor
rolb
dec
sbb
push
push
sub
mov
jle
cmpsl
or
sbb
mov
add
call
sti
and
bound
pop
cmpsl
add
add
sbb
push
add
sub
notl
cmp
adc
push
add
pop
adc
or
xlat
mov
pop
push
sbb
push
out
fistpl
jb
sub
clc
rcll
pop
cmp
mov
push
enter
inc
sub
fs
sub
push
outsl
jbe
data16
mov
pop
mov
xor
movsl
inc
adc
add
in
add
xor
add
sub
add
in
mov
cld
addl
sub
mov
pop
add
dec
out
adc
sub
lahf
arpl
js
pop
add
inc
and
ret
add
mov
testb
xchg
aam
add
les
ljmp
jns
hlt
inc
mov
mov
dec
sub
mov
int
inc
sub
mov
cmp
and
push
testb
clc
call
add
add
mov
and
inc
icebp
cmpsb
nop
sti
lret
dec
lret
iret
in
call
js
pop
mov
add
add
push
arpl
pop
nop
arpl
cwtl
out
mov
mov
dec
push
mov
add
adc
add
push
decl
add
inc
test
ljmp
jmp
sbb
add
adc
addl
jne
roll
sti
mov
dec
add
mov
xchg
fdivr
out
jl
add
cmp
test
mov
jle
and
fdivrl
sti
xor
cmc
rcll
jno
push
mov
lret
test
add
jle
push
pop
add
lds
cmpl
adc
repnz
inc
and
sarl
popf
aas
pop
andl
movsb
add
aad
mov
add
pop
mov
hlt
ret
xlat
xor
xchg
add
and
mov
cmp
aam
ja
inc
cmp
jns
pop
xchg
sub
orl
adc
add
pop
aaa
add
pop
in
jmp
loope
xchg
jge
add
ror
lods
mov
xlat
xchg
add
movsb
add
or
popa
mov
lock
adc
cmp
pop
movl
sar
popf
add
pop
scas
add
push
and
push
pop
shll
or
cmc
iret
cli
adc
mov
fiaddl
or
dec
fisubs
loope
jg
adc
idiv
add
das
fwait
loopne
aaa
in
add
or
jbe
cmpsl
dec
pop
ljmp
mov
add
pop
fnstcw
fcomps
xor
mov
js
add
addr16
sbb
ret
add
jg
adc
filds
iret
fadds
pushf
sbb
mull
mov
stc
pop
cmpsl
add
dec
cmpsb
add
popf
add
fsubrs
addb
je
mov
mov
pop
outsb
verw
inc
sahf
mov
add
mov
push
add
mov
add
ret
jno
push
mov
stos
jae
mov
xor
mov
in
inc
jmp
add
sub
inc
add
or
push
push
adc
fimuls
out
push
cld
add
mov
mov
shll
cli
les
add
loope
mov
sub
mov
in
sahf
add
lock
add
mov
adc
xor
and
xchg
pop
repnz
xor
daa
xor
pop
lock
add
xchg
add
sarl
lods
mov
ss
add
cmp
out
mov
mov
sahf
xchg
dec
mov
xor
andb
or
add
xchg
aad
or
dec
xchg
xchg
adc
test
test
adc
cmp
cmp
aaa
inc
fnstsw
sbb
arpl
add
add
xchg
xchg
lahf
in
or
hlt
add
sub
pop
sub
dec
stos
jb
aas
add
add
or
lret
inc
or
jmp
fwait
and
sbb
jp
mov
fisttps
test
repz
sub
add
mov
cmp
js
add
sbb
out
push
mov
xchg
les
rcll
cmp
testb
cld
add
rclb
in
cmp
pop
in
inc
jmp
push
mov
add
rclb
adc
mov
addb
push
mov
rorl
or
lcall
enter
add
dec
mov
pushf
test
push
repnz
mov
and
stc
add
inc
aam
rolb
and
in
int3
insb
adc
call
push
add
cmp
jecxz
or
repnz
cmp
das
jge
cmpsl
xchg
pop
add
xchg
mov
lcall
mov
mov
xchg
repnz
daa
sbb
add
aas
adc
js
rcll
mov
stos
fnsave
cltd
add
mov
js
xchg
lds
out
mov
loope
xor
push
test
sbb
je
test
add
ja
dec
or
int3
xchg
and
add
mov
and
adc
sub
gs
stc
in
add
inc
stos
push
popa
mov
mov
movsl
sub
icebp
push
adc
lods
dec
add
add
add
insl
dec
cli
ret
jmp
popf
fldt
mov
sbb
add
sbb
aas
int3
dec
push
fcoms
int
push
enter
dec
mov
leave
stos
dec
out
repnz
xchg
sbb
add
adc
andb
inc
cmp
loopne
shll
mov
add
aam
imul
aas
mov
das
add
lea
add
fbstp
sub
ja
mov
mov
inc
push
daa
inc
jle
loope
push
add
sbb
insl
add
and
popa
rolb
and
mov
mov
lret
orl
pushf
hlt
jp
sub
aam
add
xor
std
cs
cmp
xchg
aad
lds
dec
sti
xor
mov
add
hlt
addr16
in
and
push
pop
jge
ret
mov
dec
jl
sub
jmp
add
jge
std
mov
and
add
cmp
std
cmp
pop
mov
add
jmp
call
fistpll
push
add
hlt
test
jle
mov
enter
jmp
sbb
jg
mov
sti
in
add
mov
das
xchg
add
mov
or
shlb
dec
push
and
cwtl
push
repz
les
pop
add
dec
pop
pmulhw
jecxz
mov
pop
out
mov
sbb
adc
lret
jecxz
xchg
in
jmp
arpl
add
movb
aaa
cmpsb
mov
jp
cmpsb
add
loope
outsl
push
fs
add
out
mov
aad
aad
sahf
mov
add
lds
mov
enter
jnp
mov
mov
xchg
adc
test
das
sbb
or
incl
inc
mov
inc
out
add
lds
data16
mov
mov
push
dec
mov
xlat
dec
add
add
repnz
dec
add
sub
add
or
xchg
pop
cmpsb
mov
insb
adc
xor
daa
test
add
and
adc
jnp
insl
dec
add
sub
subl
add
jbe
add
and
add
aam
jmp
popf
icebp
es
lods
push
xchg
sub
ljmp
jge
sbb
xchg
cmp
add
or
rclb
mov
add
xchg
cld
mov
add
cmp
pushf
xchg
adc
jle
jge
sahf
mov
dec
pop
in
sti
popf
pop
lock
adc
inc
jg
lds
cmpsb
mov
dec
dec
fadd
add
std
mov
add
pop
loopne
insb
ficomps
hlt
fstl
push
and
inc
mov
pop
add
add
sub
add
add
ret
xchg
bound
add
ret
popa
sbb
mov
mov
mov
imul
adc
xchg
nop
loope
mov
out
sti
add
cltd
movsb
add
stos
loopne
popa
jbe
ret
mov
lahf
lods
cwtl
mov
inc
mov
and
sbb
mov
int
in
cmpsb
pop
scas
stc
cmp
add
into
jg
push
and
ret
mov
mov
jae
int
clc
cs
add
mov
mov
stc
or
int3
movsb
xor
xchg
add
sahf
add
xchg
imul
icebp
adc
add
cmp
sub
push
in
add
push
cmp
loopne
in
inc
sbb
cmp
adc
dec
add
divb
pop
movsl
add
add
repnz
adc
add
inc
in
cld
lret
pop
or
jecxz
push
pushf
jmp
cmpb
mov
stc
adc
je
iret
dec
mov
push
push
add
mov
inc
adc
add
gs
sbb
add
and
adcl
adc
add
cmp
std
inc
pop
add
adc
pop
pop
sbb
mov
test
dec
add
or
inc
rclb
mov
pop
mov
cmp
add
xor
call
xor
jo
aas
mov
or
lds
and
in
and
sub
stos
ss
cmp
add
scas
pusha
cmp
xchg
xorl
mov
lock
add
push
iret
jno
add
inc
mov
lret
push
add
das
mov
add
ret
data16
insl
inc
xchg
jge
add
or
pop
cwtl
in
lret
sub
inc
mov
clc
cmpsb
add
lahf
or
push
sub
pop
dec
insl
sub
add
adc
xchg
push
add
adc
cmp
aad
add
add
jo
out
out
pop
pop
scas
xlat
push
add
add
xor
icebp
or
lcall
and
icebp
cmc
ds
sbb
push
xchg
cmpsb
sahf
dec
push
test
add
les
fs
push
insl
rolb
push
sbb
cmp
push
xor
add
mov
mov
jne
aam
nop
mov
push
jbe
cltd
mov
pop
adc
mov
negl
into
bound
jno
push
inc
les
mov
push
shll
pushf
mov
and
cvtps2pi
mov
fcompl
or
adc
add
xchg
loop
lret
pusha
pop
add
sbb
fldenv
add
add
push
jecxz
je
or
in
sbb
imulb
mov
add
push
shrb
sub
sbb
lods
lahf
in
les
cmpsb
inc
add
imul
add
push
add
outsl
adc
stos
cld
add
daa
cltd
add
clc
inc
xchg
xchg
jle
inc
and
add
or
repz
mov
mov
xor
cltd
rorl
mov
jmp
scas
jne
or
add
add
cmpsb
xchg
cmp
mov
hlt
dec
add
dec
adc
add
fdivrs
xchg
sbb
or
out
lods
shll
rcrl
aad
push
les
lods
cmpsl
je
jnp
mov
mov
subl
inc
push
mov
add
stos
sbb
add
ja
fld
es
mov
mov
into
xchg
ljmp
fs
arpl
or
dec
cld
add
mov
dec
xchg
and
push
add
push
mov
adc
dec
pop
pop
in
adc
mov
fnsave
lret
js
mov
iret
or
mov
cmp
and
add
popf
push
xlat
data16
js
lcall
popa
jo
bound
and
pop
add
outsl
add
jge
movsl
roll
nop
neg
push
adc
jp
pop
lea
and
mov
cmpsl
and
mov
ficoms
sbb
hlt
cmp
jae
test
mov
popa
cmpsb
ja
mov
not
pushf
add
test
in
add
jl
int
mov
xchg
scas
adc
mov
add
lea
fcmovbe
hlt
in
out
jnp
pop
add
insl
stos
popa
dec
cmc
ja
insb
lahf
xchg
mov
pop
add
pop
add
loop
ret
cmpsb
or
clc
pop
mov
imul
test
repnz
or
mov
nop
add
fwait
push
adc
out
fiaddl
not
jp
cmpsl
sbb
pushf
mov
imul
sbb
pop
dec
leave
out
lods
add
adc
cmp
test
out
repz
clc
add
popf
sbb
add
out
stos
mov
jnp
add
xlat
xchg
xchg
jge
cmpsl
xor
cwtl
push
add
jge
adc
push
mov
add
cwtl
sbb
mov
popa
gs
movsb
cmp
pop
add
push
rcrb
nop
scas
add
and
test
popf
out
push
enter
leave
dec
and
idiv
test
addr16
out
or
mov
in
add
ret
jbe
add
jle
push
sbb
rclb
pop
add
nop
and
iret
daa
mov
adc
pop
lret
xlat
ljmp
call
add
jns
and
js
and
lods
sbb
add
gs
inc
push
ret
setle
add
sahf
add
fiadds
add
add
cmpsb
add
push
cwtl
cmp
rcr
add
mov
push
xor
mov
xchg
pop
stos
out
add
pop
addl
mov
and
fdivr
std
sbb
add
add
mov
call
ds
add
adc
out
mov
loope
inc
jnp
js
add
stc
xchg
in
pop
push
mov
movsl
add
loope
add
dec
mov
add
mov
mov
repnz
dec
pop
cmp
push
add
ss
std
add
xchg
mov
mov
xchg
fwait
test
adc
inc
push
mov
adc
add
pop
pop
jne
das
lds
xchg
insb
cltd
iret
inc
and
mov
js
andb
decl
aas
test
push
out
rolb
jns
das
flds
in
stos
mov
sbb
add
mov
add
jbe
sbb
push
sarl
stc
mov
outsl
sbb
jle
add
add
icebp
inc
add
xchg
je
pop
push
les
dec
cmp
sub
add
nop
xchg
repz
sbb
pop
mov
imul
mov
fistl
movsb
fsubp
es
jnp
mov
loope
jb
mov
and
jnp,pn
dec
mov
jo
mov
fstpl
push
rcr
add
aaa
rcl
xchg
ffreep
ja
mov
rcrl
insl
cwtl
sub
add
pop
inc
pusha
mov
rorb
push
sub
out
inc
insb
jmp
repz
rorb
sub
repnz
pushf
dec
popf
daa
xchg
jle
jb
dec
push
fldenv
ror
cmc
nop
or
mov
roll
dec
arpl
jl
xor
xlat
dec
gs
lret
jl
push
pop
mov
push
clc
mov
jp
add
mov
rolb
mov
xor
push
in
jge
dec
or
pop
and
lock
push
arpl
dec
cmp
stos
pop
push
inc
add
stos
add
loope
jmp
xlat
or
mov
mov
jecxz
push
add
in
bound
pusha
push
mov
lods
jmp
mov
ret
add
add
iret
mov
dec
addb
add
sbb
les
rorb
add
cli
sub
push
out
sub
je
push
repz
jg
xor
mov
int3
mov
mov
fwait
data16
add
out
mov
clc
rol
xor
inc
jl
js
jmp
and
xchg
pushf
sub
cmp
subb
int3
add
push
adc
in
push
bound
in
add
jne
lret
push
xchg
add
cs
mov
repnz
fisubrl
idivb
mov
mov
add
test
cmp
add
in
dec
add
js
inc
pusha
fisubrs
and
int
dec
add
lods
lds
xchg
jae
mov
xchg
sbb
sbb
stos
add
roll
fs
inc
dec
mov
add
add
dec
subl
flds
xor
add
push
enter
add
and
cmovp
pop
inc
xor
mov
mov
mov
pop
sbb
pusha
pusha
dec
rcll
add
add
testb
imul
mov
add
loope
jnp
lcall
add
xchg
sbb
addb
sbb
jge
xchg
add
icebp
imul
add
andb
movsl
xor
inc
or
add
inc
xor
mov
int3
or
jne
pop
gs
sub
and
add
popf
mov
mov
sub
pop
pop
xchg
lds
push
je
add
add
cmp
sub
rol
das
xchg
cmp
js
xchg
and
mov
or
rolb
aaa
lret
jle
enter
out
push
enter
jae
xor
lods
add
jl
dec
psubb
add
sub
pop
add
test
mov
and
mov
and
bound
push
call
clc
int3
jecxz
sub
sldt
add
push
mov
rcrl
add
add
out
fmuls
leave
ljmp
push
add
xchg
add
ljmp
and
loopne
pop
outsb
add
or
xchg
add
add
add
add
add
ret
loopne
insb
add
sub
push
add
leave
jle
loop,pt
arpl
push
mov
stos
pop
jb
add
push
cmpsb
add
cs
sbb
and
add
mov
out
add
add
mov
cmpsb
sub
insb
lods
fwait
pop
aaa
nopl
pop
sbb
push
adc
jecxz
cmp
jg
xchg
outsb
ja
add
sub
icebp
aam
scas
pop
push
push
pop
fidivrl
cmp
imul
loopne
iret
bound
out
mov
pop
test
lods
loop
and
mov
mov
aad
xchg
push
dec
ljmp
jo
add
fmull
xchg
xchg
mov
adc
xchg
ljmp
adc
push
dec
mov
add
ja
or
push
mov
add
dec
jge
add
nop
pop
rcrb
call
pop
out
or
jecxz
lea
add
xlat
add
mov
pop
add
xchg
sahf
cmp
jge
push
mov
aam
test
rep
mov
mov
add
lahf
push
sbb
add
adc
and
pop
jae
outsb
and
add
pop
inc
jl
xchg
loopne
lds
cmp
and
add
imul
int3
jbe
movsl
xchg
add
js
les
cmpsl
fstpt
cmp
sbb
push
xor
add
or
xchg
dec
fstpt
inc
jge
clc
into
add
mov
iret
push
imul
stc
cmp
mov
add
sbb
jnp
sbb
gs
add
pushf
fisubl
ss
test
bound
mov
insl
add
test
add
cld
mov
xchg
test
adc
divl
mov
xchg
adc
mov
popf
add
cmp
add
push
xchg
cmp
add
sbb
push
fisubrl
dec
fwait
sbb
int
les
inc
mov
inc
nop
dec
add
mov
push
cmpsb
mov
pop
add
shll
movsl
cmp
jg
add
mov
jns
loop
sub
inc
add
es
call
xchg
add
add
mov
sti
nop
jmp
scas
sub
xor
iret
add
push
xlat
shl
aad
xchg
pop
pushf
add
push
sub
lea
dec
sbb
test
icebp
add
enter
inc
in
dec
and
push
cmpsb
ret
jmp
fistl
repnz
int3
add
loope
inc
ret
pop
orb
iret
scas
adc
sub
pop
hlt
inc
mov
xchg
dec
xor
xchg
mov
mov
mov
or
out
adc
xor
movsl
xchg
or
filds
dec
cld
les
mov
sbb
sub
aam
dec
mov
jne
add
add
inc
add
pop
out
call
inc
pop
pop
xlat
add
sbb
add
daa
mov
pop
or
repnz
repz
sbbl
push
mov
out
add
les
and
dec
add
mov
scas
int
or
sbb
add
test
xlat
ror
fistpll
add
arpl
push
or
lret
add
bound
cli
add
pop
mov
sbb
push
sbb
jno
jns
aad
xchg
push
mov
jle
push
loop
shll
inc
jp
xchg
push
jmp
add
outsb
jae
jle
adc
test
aaa
out
aad
or
mov
cld
xor
add
out
mov
cmc
scas
sub
ljmp
adc
pop
ja
add
push
xor
out
add
lret
scas
hlt
add
aas
aam
and
add
dec
add
push
mov
std
fdiv
fisttpll
or
add
aaa
xor
lea
sarl
testl
add
js
sub
add
jg
inc
stos
cmp
sbb
jecxz
mov
pop
mov
or
test
lock
sbb
mov
mov
xor
daa
push
xchg
adc
les
mov
xor
dec
out
in
lea
sbb
stos
cmp
bound
or
mov
mov
push
loope
in
enter
pop
gs
sbb
dec
inc
jne
inc
xchg
arpl
mov
test
sub
fists
stos
xor
add
cld
adc
push
jo
arpl
lcall
shl
push
xor
dec
cli
inc
inc
jg
sub
test
push
add
ds
push
fldl
frstor
and
popa
clc
mov
in
xor
sub
fst
jae
ja
mov
hlt
mov
add
add
cmp
ljmp
loopne
ficoml
adc
add
add
inc
mov
sbb
pop
int
add
and
shrl
add
add
add
xor
pop
adc
mov
shrb
pop
leave
cs
push
and
and
dec
add
aam
inc
mov
xchg
or
push
add
add
pop
xlat
add
add
int3
add
xor
fs
jae
pop
mov
out
pop
in
xchg
pop
adc
and
cwtl
ljmp
repz
cltd
jge
ror
pop
xor
sbb
mov
aaa
jg
cmp
aaa
push
outsb
mov
sub
inc
xchg
test
cmp
add
xchg
mov
or
cli
jns
ret
lea
stc
call
out
add
stos
stos
ss
pop
add
push
std
xchg
cmp
popa
fdivrs
sub
adc
xor
xor
int
xor
add
loopne
xor
fiadds
hlt
mov
aam
dec
ret
inc
dec
jg
add
cmpsb
add
mov
xor
aad
dec
int
add
or
les
sbb
dec
xchg
inc
push
cli
in
or
lods
mov
pop
aad
sub
add
sub
es
cs
loope
add
loopne
jge
xchg
sbb
lods
xor
push
aam
les
addl
int3
add
ret
ficomps
mov
pop
add
add
dec
insl
hlt
movsb
dec
add
mov
popa
mov
dec
test
add
dec
mov
jae
add
jbe
add
sub
pop
lock
mov
test
lret
push
add
jne
xor
iret
add
popf
mov
testl
aam
add
dec
add
lret
inc
sub
daa
mov
cltd
and
add
xor
xchg
mov
sub
inc
xchg
add
stc
add
mov
iret
fldt
add
inc
cs
add
and
adc
adcb
popa
add
ret
dec
lock
roll
mov
cmpsb
cs
cli
or
jns
adcl
mov
push
movl
in
bound
jmp
jge
sahf
repz
lret
push
cmpsl
inc
push
dec
add
call
dec
cmp
push
adc
jmp
pop
cmpl
dec
imul
scas
sub
sahf
out
dec
jbe
clc
push
add
movsb
clc
rcrb
xchg
add
hlt
mov
sub
stos
repz
cmp
sub
loop
iret
cmp
repnz
pop
cmp
or
mov
enter
xchg
or
push
push
push
or
popa
xlat
push
repnz
fwait
aam
add
add
cmpsb
pop
cmp
rcl
scas
mov
outsl
lahf
add
add
lret
add
add
int3
mov
cmp
mov
daa
sbb
add
or
bound
in
add
push
push
adc
sub
in
sub
or
mov
out
pop
imul
stc
cmpsb
std
stc
xchg
xor
adc
and
lret
pop
pop
jle
dec
mov
pop
mov
lahf
add
inc
add
and
test
add
ljmp
xchg
mov
scas
call
xchg
lea
test
ljmp
jb
out
add
insl
sbb
inc
cmc
dec
adc
jmp
push
jl
add
add
add
mov
scas
pop
cs
or
xor
insl
sub
hlt
test
push
icebp
es
and
add
hlt
arpl
int3
imulb
dec
add
add
loopnew
movsb
cmpsl
push
xor
js
inc
cmpsb
cmp
pop
inc
inc
movsl
adc
ret
mov
mov
cltd
mov
int3
int
mov
and
inc
push
add
xor
add
test
add
dec
or
inc
add
daa
jo
jecxz
imul
cmp
jg
insl
leave
mov
sbb
gs
add
jl
sub
mov
aas
mulb
out
imul
test
sbb
ss
push
add
add
add
in
add
jecxz
fwait
cmpsb
add
inc
movsl
dec
add
gs
movsb
mov
cld
push
fimuls
pop
dec
push
push
jbe
sub
add
or
jp
adc
fildll
mov
jmp
fwait
adc
sub
push
inc
mov
adc
jg
sub
sbb
pusha
add
outsl
scas
mov
add
or
jp
fistps
add
push
cli
loopne
movsb
add
add
inc
push
add
mov
shlb
dec
mov
push
jno
cld
add
mov
in
sbb
ds
test
int
lret
outsb
sub
adc
leave
jecxz
les
cs
push
test
add
mov
add
add
dec
ja
sub
loop
and
add
add
sub
mov
icebp
pop
add
sbb
addl
movsb
cmp
test
add
adc
arpl
sub
xchg
pop
pop
add
movsb
fs
xor
and
ret
and
add
add
xchg
scas
cmp
mov
test
imulb
or
and
es
xchg
clc
cmp
cld
scas
and
outsb
add
outsl
loop
sub
aas
xor
add
or
add
ja
arpl
add
add
add
sbb
add
loopne
and
add
inc
add
ret
outsb
orl
inc
push
test
int3
lret
push
xchg
imull
scas
pushf
js
add
add
push
mov
and
add
push
mov
cmpsl
xlat
pop
cs
and
add
xchg
xchg
je
push
cmp
ret
push
clc
pop
sub
bound
add
xchg
add
ret
add
mov
int3
add
fdivl
sar
jae
jne
daa
popf
add
lret
pop
test
nop
loopne
add
add
movsb
fwait
mov
lea
pusha
mov
hlt
sarb
mov
push
or
mov
jp
inc
into
arpl
sbb
ss
pop
test
imul
pop
stc
and
mov
dec
cld
push
xchg
jecxz
dec
jle
add
xchg
movsl
dec
sbb
mov
mov
adc
jl
int
adc
sub
jno
sub
aaa
stos
nop
add
or
add
jae
adc
push
pop
scas
sub
out
adcb
add
xchg
mov
pop
jmp
sub
add
into
add
jl
mov
cli
or
add
xor
outsb
mov
sub
div
add
inc
pop
ret
fcomps
sti
mov
adc
cmp
add
shlb
inc
les
and
pop
xor
aas
pop
sub
icebp
add
cmp
aaa
repnz
sub
jb
push
jne
add
or
add
cltd
push
or
sub
sub
cmp
push
mov
mov
loop
clc
repz
ret
or
les
imul
xlat
push
nop
cmc
dec
in
imul
jge
outsl
nop
mov
jnp
mov
sbb
cmp
push
add
adc
dec
pop
loopne
push
mov
aaa
mov
movsl
mov
imul
shlb
jg
inc
in
fs
mov
jmp
addr16
sub
aaa
dec
cld
or
sbb
inc
lret
lds
xchg
push
jmp
pop
push
jecxz
mov
out
sub
add
sbb
loop
stos
push
test
pop
or
add
outsl
xchg
xor
lods
or
jb
pushf
aas
add
jecxz
add
test
add
lret
pop
test
lahf
add
add
add
jbe
sahf
cmp
cmp
adc
adc
stc
add
out
test
fwait
jl
out
xchg
jno
cmc
add
mov
and
rol
cli
stos
cmpsl
fisubrl
dec
out
jns
fs
inc
lds
scas
inc
jl
push
mov
dec
mov
cld
or
xor
inc
cmp
inc
fstpl
or
shlb
xchg
cmc
adc
fwait
pop
xchg
pop
mov
add
cmp
pop
push
add
add
add
push
adc
cld
mov
shrb
lock
add
xor
mov
nop
dec
xchg
xchg
imul
imull
out
lock
stos
sbb
push
int3
out
jmp
idivb
xchg
cmp
inc
add
cmp
mov
push
mov
fwait
mov
sbb
pop
cld
xchg
int3
lret
mov
add
dec
movsb
fucomp
sub
add
cmp
xchg
or
mov
into
pop
mov
add
sbb
sub
sbb
mov
add
mov
add
add
adc
mov
mov
inc
orb
into
ret
add
mov
mov
add
inc
push
jle,pt
dec
jb
and
in
mov
in
mov
push
sbbb
imul
pop
lret
scas
jno
dec
add
add
mov
shlb
fucomip
pop
add
data16
xchg
insl
inc
pop
jp
gs
sbb
mov
xchg
shlb
add
cwtl
xlat
aas
movsb
jb
mov
aas
lret
mov
xorb
inc
cmpsl
nop
shll
scas
mov
scas
pop
daa
pushf
int
addl
imul
inc
dec
add
imulb
stos
or
test
jo
roll
loopne
bound
and
pop
lcall
adc
dec
adc
add
add
fiadds
or
push
jne
xchg
or
ret
dec
xor
jbe
cmp
ljmp
push
nop
stc
or
pop
jne
adc
pop
fadds
push
add
add
in
sbbb
movsl
movb
divb
add
call
xor
pusha
sbb
enter
call
lcall
jae
jecxz
loope
movl
ljmp
mov
jp
outsl
adc
dec
xchg
add
push
testb
rcll
inc
hlt
and
loope
ficomps
sbb
adc
les
pop
punpckhwd
add
add
bound
jp
sbb
in
or
pop
add
pop
add
cmp
mov
adc
and
je,pt
add
jmp
stc
insl
dec
mov
jno
add
sbb
lods
xor
out
sbb
inc
inc
into
jno
adc
add
das
arpl
mov
xchg
add
sbb
adc
test
mov
mov
jmp
mov
addr16
pop
or
idiv
inc
add
sahf
and
xor
popf
lret
add
add
inc
mov
or
lea
adc
mov
xchg
pop
add
sub
push
pop
int
stos
jne
and
pop
pop
subl
lea
mov
lock
je
enter
push
and
add
and
add
iret
dec
add
xor
dec
sub
add
jecxz
mov
popf
push
fimull
xor
mov
xchg
jp
push
xor
pop
jmp
aas
bound
fdivl
cmp
mov
xchg
test
dec
sub
dec
inc
add
xor
int3
test
aam
cltd
push
jp
add
xchg
faddl
lea
fisubrs
jge
mov
pop
fiaddl
and
stos
incl
call
xor
iret
sbb
stc
jecxz
lahf
add
adc
call
aas
lret
daa
ljmp
xor
jge
pop
dec
lahf
cmp
mov
call
stos
mov
sub
xlat
cmp
sbb
add
rorl
rep
mov
rclb
and
inc
cmp
sti
and
arpl
add
mov
popa
add
movl
aad
add
dec
fidivs
outsb
in
dec
jns
std
loopne
in
loope
adc
cmp
cmp
add
push
dec
adc
jmp
mov
or
mov
mov
mov
add
aam
jbe
adc
les
add
add
jmp
lods
add
cmc
xchg
push
aaa
sub
add
or
push
jg
data16
loope
mov
ds
ja
rorb
ret
cli
cli
jns
movsl
enter
and
daa
cwtl
mov
pop
adc
jnp
pop
sub
push
loop
fbstp
add
pop
adc
lods
mov
adc
int3
mov
fisttps
dec
ret
icebp
or
hlt
movsl
inc
mov
mov
iret
add
clc
loopne
mov
pushf
adc
pop
mov
into
push
sub
add
push
mov
mov
rolb
fcmovu
fsubrs
cmp
pop
mov
push
lock
dec
jo
aad
add
and
add
sbb
jno
lea
ljmp
xor
stos
add
cmp
pop
pop
or
lret
mov
inc
jns
mov
sar
add
movsl
mov
data16
dec
jno
jle
lcall
ret
nop
stc
mov
adc
push
mov
ds
add
sbb
mov
add
into
or
out
push
aad
dec
or
jle
sub
push
add
inc
jle
sub
add
pop
jae
fsubrl
adc
add
std
or
cmp
pop
das
dec
mov
mov
inc
orb
mov
add
sarl
decb
dec
dec
add
sub
add
dec
and
add
xor
cmp
lcall
jo
lock
pop
mov
fs
dec
fistpl
cmp
roll
sbbl
out
bound
push
stc
add
mov
jl
add
push
sti
in
dec
clc
cwtl
outsb
add
add
lcall
push
roll
mov
repnz
sbb
ss
add
xlat
ror
hlt
imul
sbb
add
lret
xor
loopne
mov
jl
sub
aad
push
out
mov
iret
xchg
mov
adc
shrd
aad
mov
ret
sbb
adc
mov
push
rolb
shll
mov
mov
pop
push
fucomp
bound
pop
out
or
mov
mov
push
sub
sbb
imul
add
cld
loopne
das
cmp
repnz
jl
je
push
add
outsl
movsb
adc
sbb
subl
je
popf
cmp
add
xchg
loope
or
enter
add
test
nop
add
push
or
xchg
add
cs
in
inc
and
pop
inc
std
loopne
add
sar
add
add
mov
push
dec
out
daa
pop
pop
cmp
jmp
sahf
pushf
push
mov
sbb
test
add
xchg
lret
add
add
and
cld
add
out
add
xor
sub
fidivs
push
sbb
rolb
in
add
fistpl
cmp
fisubs
ljmp
adc
cmp
in
cmpb
mov
mov
add
add
fiadds
roll
inc
add
pop
shr
testl
cmp
movsl
adc
lea
xlat
lcall
add
xchg
stc
add
xchg
push
jne
xchg
or
add
add
add
sbbl
cmp
cmp
in
test
ficoml
cmc
adcl
and
fmuls
and
pop
push
scas
in
mov
movsl
adc
imul
jmp
xchg
xor
add
add
xlat
sbb
sub
pop
pop
jne
push
adc
jne
jo
jge
push
stc
push
add
icebp
add
add
aam
pop
into
adc
jmp
cmp
mov
mov
adc
in
add
ljmp
fisttps
rcll
outsb
push
adc
cld
sub
into
xchg
insl
and
addr16
jmp
outsb
movsl
add
arpl
add
out
add
xchg
dec
pop
call
add
mov
aad
dec
dec
lods
mov
mov
sbb
cmp
add
pop
aam
add
cmpsb
dec
push
or
add
add
add
jl,pt
xchg
out
pop
add
add
es
pop
xchg
call
pop
loop
mov
mov
and
sbb
add
lods
add
cmp
jmp
insb
lds
mov
icebp
arpl
add
pushf
bound
scas
add
xor
mov
inc
add
sub
mov
add
inc
pushf
jg
imul
and
pop
adc
and
mul
testl
jecxz
sbb
pop
mov
aaa
sub
in
lahf
and
adc
cmp
add
test
in
add
add
in
push
lret
int
leave
and
mov
add
daa
dec
ret
aad
mov
add
jle
sbb
pop
adc
jmp
or
test
inc
das
pop
pop
sbb
sbb
add
cmc
cld
aas
sub
add
insb
test
adc
add
sbb
add
xchg
sbb
lods
flds
inc
dec
xchg
and
inc
stos
inc
pushf
lret
cmp
mov
mov
xor
int
add
adc
rclb
push
aas
pop
xor
add
mov
xchg
add
cwtl
std
in
fs
cmpsl
imul
add
inc
in
pop
ds
push
lret
mov
arpl
in
pusha
xchg
sub
out
lods
stos
jge
jmp
in
js
mov
sub
rol
pop
ret
loopne
add
xchg
mov
arpl
adc
std
pop
movsl
nop
movsl
addb
add
add
add
mov
mov
pop
dec
mov
jmp
jg
xorl
fsubl
aaa
add
fadds
xchg
scas
pop
int
fs
add
add
xchg
shrd
or
sub
insb
mov
js
mov
in
lret
into
sub
inc
loopne
add
fbstp
hlt
xchg
pushf
mov
insl
mov
out
mov
push
daa
push
cltd
jbe
or
imul
xchg
add
push
sub
add
push
lods
or
add
adc
incb
arpl
in
scas
or
add
jl
pushf
add
xor
xor
lret
insb
add
xor
pop
and
scas
or
mov
add
add
add
popa
movsb
flds
ljmp
add
test
loope
xchg
sub
in
add
repz
jg
mov
adc
jbe
clc
add
add
add
int3
inc
add
and
or
bswap
clc
add
adc
xor
jnp
push
jmp
lds
adc
add
lods
push
push
outsl
mov
mov
add
xchg
add
add
xchg
call
push
in
jecxz
in
and
jp
dec
or
mov
dec
jp
jl
pop
popf
dec
stc
in
add
fstpt
jb
test
sub
jne
hlt
shl
outsb
loop
jmp
push
dec
cmpps
jbe
aaa
add
push
push
sub
sub
mov
add
mov
data16
jae
xchg
push
mov
lea
add
xchg
sbb
pop
adcl
in
sbb
inc
push
repnz
lret
add
out
incb
xchg
mov
jno
pop
add
psrlq
jbe
lret
call
jbe
mov
xchg
hlt
mov
mov
sub
pop
add
xor
fwait
xchg
add
add
int3
mov
pusha
inc
aam
les
sub
xchg
pop
std
out
lcall
pop
mov
stos
pop
add
mov
cmpsl
test
fadds
inc
js
push
mov
push
outsl
insl
mov
mov
cld
and
add
add
jnp
subl
add
mov
shrb
xchg
mov
cmp
nop
add
cmp
arpl
add
and
add
out
jle
cmp
xor
cs
bound
jle
push
add
cs
fs
call
cmpsb
add
xchg
stc
and
lds
cmp
jl
xor
and
sbb
push
and
push
add
cmp
inc
xchg
push
vpextrb
add
pusha
scas
mov
std
push
out
add
push
insb
xor
lods
and
lock
mov
sub
jo
pop
add
sub
add
push
daa
add
pop
push
sub
push
movsl
jo
ds
jbe
mov
sbb
into
ret
in
add
add
add
or
mov
movsb
mov
scas
or
push
mov
and
aas
xor
shrl
sub
int3
sub
xlat
fsubr
aas
ret
psllw
bound
in
mov
xor
pushf
add
pusha
add
lret
push
add
pop
aas
push
jae
and
loope
int
mov
dec
cli
ja
pop
sub
in
push
nop
mov
jae
sbb
aas
pop
daa
or
out
shrb
fcmovnu
pop
push
repz
lock
add
pop
pop
movsb
mov
pop
shlb
repz
or
or
adc
lods
getsec
adc
arpl
js
mov
mov
mov
call
push
dec
mov
sti
mov
mov
mov
mov
mov
add
imul
add
sub
pop
add
movl
or
add
jno
shlb
push
inc
or
cmp
mov
lret
push
mov
mov
sub
adc
or
ljmp
icebp
push
test
xor
mov
flds
sub
add
cmp
in
repnz
sub
add
shr
sub
inc
mov
scas
sbb
pop
outsb
add
mov
add
stc
cmp
aam
jnp
jge
cmpsl
outsl
mov
test
add
xor
movb
or
add
outsb
jae
push
les
cmp
aad
icebp
es
xchg
add
dec
and
mov
push
les
popl
or
add
add
push
ja
jo
fdivrs
adc
sarl
insl
jns
in
dec
xchg
movsb
insl
nop
jb
outsb
push
push
and
fnstenv
das
add
sub
add
sub
daa
test
scas
and
pushf
clc
add
arpl
and
cmc
add
adc
pop
pop
pusha
adc
mov
xchg
push
addl
pop
dec
sub
testl
mov
das
and
jb
push
pop
add
pop
bswap
aas
ja
in
add
push
or
aaa
cld
loope
add
add
or
mov
call
ljmp
add
pop
pop
sbb
mov
pop
jmp
xor
stc
mov
mov
cmpsb
mov
add
stos
sub
add
pop
jb
add
add
add
push
add
mov
add
stc
leave
cmp
into
add
pop
mov
movsl
mov
cmpsb
push
inc
mov
push
addl
daa
dec
mov
loopne
stos
add
xchg
gs
testb
das
add
loope
andb
jnp
add
pushf
pop
pop
and
and
cmc
shll
add
sbbb
in
add
jnp
sarl
repz
and
mov
shrl
mov
push
stc
sahf
cmpsb
mov
addr16
enter
sbb
ret
mov
dec
xor
std
mov
cli
cwtl
add
add
cli
mov
add
cltd
or
mov
xor
jg
jae,pt
push
inc
shl
cmp
adc
cmc
xor
pop
jnp
es
sub
mov
addb
adc
adcb
mov
repz
xchg
out
les
ja
mov
fsub
pop
mov
dec
sbb
mov
add
xor
in
add
push
xor
jb
xchg
clc
push
or
pop
call
sbb
in
push
aad
mov
push
adc
push
add
dec
dec
lds
fwait
and
add
arpl
mov
sahf
loopne
add
lea
dec
add
add
push
aam
xchg
repz
mov
add
fmul
cmp
ret
sbb
xor
mov
xchg
cwtl
scas
loopne
add
jnp
add
push
adc
add
xchg
ret
shll
mov
in
nop
arpl
sbb
mov
lds
xchg
xchg
test
repz
pusha
add
stc
popf
dec
push
add
xchg
ds
mov
outsl
jno
sub
xor
icebp
or
cmp
inc
add
add
ss
js
addr16
testb
sub
push
xor
adc
or
mov
arpl
outsl
cld
inc
scas
sub
cmp
jbe
stos
jnp,pt
cltd
outsl
ja
pop
popf
sbb
add
add
or
pop
sbb
sub
add
not
sarl
fsts
xchg
add
add
int3
fimuls
cmp
imul
mov
sahf
add
dec
add
mov
dec
dec
cld
jae
jae
ds
aas
add
pop
ss
mov
addl
cmp
add
sub
jno
bound
notl
ret
daa
gs
lret
xchg
clc
and
imul
std
int3
scas
sub
xchg
subb
cmp
xor
in
xor
aas
and
push
nop
int3
les
ds
xchg
ficomps
addr16
mov
adc
sbb
xchg
push
mov
add
les
imul
dec
test
sub
rcl
add
xchg
rol
or
gs
bound
and
ret
dec
in
shlb
popa
jae
daa
add
push
mov
mov
mov
repnz
xor
pop
test
cmp
push
and
out
xchg
xrelease
add
or
pusha
ficompl
pop
nop
lea
cmp
gs
scas
inc
pop
add
xlat
and
mov
sbb
arpl
adc
cmp
xchg
arpl
add
test
cmp
add
adc
add
sub
jb
in
push
in
les
push
imull
mov
lcall
mov
jmp
pop
dec
xchg
mov
xchg
jp
mov
repnz
cmpsb
mov
pop
add
int
fbstp
gs
int
inc
add
movsb
sub
adc
add
test
or
mov
sahf
call
push
pusha
test
cli
xor
imul
test
pushw
sub
mov
pop
jb
je
dec
insl
ljmp
dec
jmp
dec
add
stos
add
data16
fs
cltd
scas
dec
xchg
pop
mov
aad
cmpsb
add
add
xor
and
hlt
add
fadds
jl
push
nop
push
add
mov
lea
dec
mov
pop
xor
or
or
mov
adc
push
cmp
js
les
mov
cmpsb
mov
mov
add
inc
lods
jmp
pop
dec
sbb
jp
clc
push
pop
ljmp
pop
jo
adc
cmp
mov
dec
pusha
popf
or
jp
scas
in
xchg
inc
cs
xchg
stos
cmp
add
and
sbb
sub
lcall
and
mov
mov
out
xor
je
inc
add
aad
int
je
insl
int
fldcw
ja
push
aad
jae
in
or
pop
push
inc
xor
dec
jg
clc
add
enter
test
int3
nop
sub
add
xor
rcll
inc
pop
push
add
sti
sbb
jmp
sbb
xchg
mov
mov
add
into
mov
insl
push
in
in
adc
cmp
insb
adc
xchg
into
jne
aas
mov
jge,pt
inc
fwait
and
sahf
inc
dec
outsl
add
cs
es
add
mov
inc
inc
popl
nop
inc
add
push
adcl
jnp
clc
roll
shrl
add
pushf
sbb
mov
xor
shll
add
rcrl
xchg
jmp
ljmp
cmp
xor
test
push
sti
sbb
push
inc
push
inc
mov
pusha
or
lret
bound
pushf
outsl
shrl
stos
dec
lds
test
push
popf
add
add
and
imul
add
data16
hlt
mov
xchg
pop
add
incb
add
push
and
adc
les
mov
sub
add
push
adc
mov
addr16
sbb
add
lret
mov
insl
add
enter
pop
imul
push
dec
pop
add
cmp
adc
adc
xchg
lcall
add
or
xchg
add
dec
ljmp
add
mov
lret
cmp
and
xor
xor
cltd
pop
cmp
jmp
loopne
jl
fs
testl
add
mov
and
xchg
mov
int3
cs
add
dec
roll
iret
fs
pop
mov
add
mov
repz
add
add
ret
fwait
mov
or
into
sarb
xchg
adc
push
cs
add
daa
pop
lret
loope
dec
mov
add
sbb
add
rcll
and
lret
mov
stos
aad
pop
loopne
push
stos
leave
inc
fildl
roll
and
xor
in
xor
in
lods
jnp
mov
push
pop
xor
add
scas
mov
flds
test
push
xlat
mov
mov
rclb
out
add
aas
je
cwtl
cmpsb
pop
push
jp
adc
push
xchg
mov
jg
add
add
add
movsl
jmp
adc
ss
sbb
dec
push
sub
mov
andl
mov
ja,pn
and
lahf
add
add
dec
nop
jbe
aad
jo
movsb
mov
lret
xchg
mov
inc
test
pop
outsb
lods
icebp
cmp
push
dec
int
fdivrs
jge
fmul
imul
dec
xchg
mov
mov
sub
add
sbb
js
xchg
mov
scas
sub
add
cmp
mov
jnp
andl
sbb
call
add
cmp
es
roll
movsl
jecxz
lahf
insl
in
cli
add
je
js
add
popa
cmpl
cwtl
popf
add
add
in
imul
in
scas
insl
add
jg
shrb
mov
inc
dec
ss
call
test
cwtl
roll
loop
roll
xor
mov
cmp
add
fwait
push
add
sbb
ds
in
nop
stc
mov
add
push
shlb
test
repnz
add
add
push
dec
or
ljmp
clc
fcmovb
cld
pop
stc
xchg
divb
add
fbld
jne
popf
sub
xor
xchg
cltd
add
fwait
add
shll
or
and
fsubrl
mov
in
jb
ja
dec
add
lret
subl
or
hlt
add
sbb
push
mov
xor
leave
add
ds
outsl
int3
shll
sbb
mov
mov
out
pop
jnp
add
repz
fildl
in
test
les
push
mov
daa
lret
fidivrl
ljmp
fildll
sbb
push
jb
hlt
gs
add
xchg
add
lret
inc
xor
cmp
popl
pop
adc
mov
idivl
mov
push
mov
sbb
add
mov
add
jl
and
int
and
xchg
aas
mov
adc
jecxz
sahf
daa
jg
or
jp
pusha
adc
sub
inc
popf
out
add
jbe
add
jmp
add
push
jge
hlt
xchg
cmp
mov
add
and
stc
aam
adc
add
jecxz
adc
imul
addb
inc
mov
outsb
int
add
rol
add
in
addr16
add
inc
push
add
loope
add
aam
popa
pop
ds
or
sbb
sub
dec
push
add
int3
push
and
call
dec
daa
add
inc
mov
inc
add
add
enter
out
jne
mov
jmp
jns
fadds
stc
sub
mov
xchg
enter
fbstp
movsl
jae
add
les
pop
add
cld
test
mov
insb
add
iret
adc
pusha
mov
cmp
dec
and
lock
or
xor
inc
fisubl
out
aas
push
push
orl
xor
in
cmp
decb
movsl
sti
add
scas
dec
pop
inc
mov
jp
in
jge
dec
xor
fdiv
pushf
mov
js
add
sahf
leave
mov
mov
mov
test
push
scas
jbe
jb
jnp
or
movsb
add
aaa
lahf
das
jnp
adc
ret
add
pop
push
mov
nop
adc
inc
add
add
orl
inc
add
rcll
es
dec
mov
xchg
and
and
sbb
and
jmp
stc
jge
mov
push
inc
cmp
sub
aas
mov
imul
out
pushf
add
inc
in
insb
xchg
pusha
add
jo
test
push
add
mov
mov
sub
push
pop
leave
and
adc
add
push
and
inc
inc
xlat
add
pop
mov
add
repnz
je
jae
sbb
cmp
dec
lret
addr16
and
test
mov
leave
rorl
test
rolb
testb
jmp
test
cmp
push
mov
add
mov
jg
popa
add
and
adc
and
ret
stos
es
dec
add
add
addr16
imull
mov
mov
stc
iret
movsb
add
insl
scas
add
ret
add
push
add
mov
sub
mov
jae
adc
push
pop
xchg
lods
leave
add
test
cs
movsb
lods
pop
popa
out
cmp
add
daa
repnz
imulb
or
sbb
push
add
movsl
aad
mov
push
not
add
lahf
jne
and
mov
jne
push
mov
into
jl
lds
rcrl
or
mov
insl
pop
adc
test
and
cld
mov
ret
add
sbb
jns
xchg
dec
cmpl
inc
add
setbe
xor
gs
lea
pop
jns
adc
jb
pop
fisttps
cmp
xchg
push
sbbb
imul
les
sub
pop
sbb
vdivss
pop
push
add
les
enter
adc
add
inc
add
bnd
jecxz,pn
gs
pop
mov
lea
jp
lock
jbe
movsb
xchg
fidivrs
mov
jl
call
outsl
data16
inc
pop
mov
scas
mov
inc
addr16
xchg
sub
mov
push
pop
ret
ds
cltd
pop
push
or
add
cmp
pop
test
scas
xchg
xor
jle
jb
add
push
subl
push
mov
lcall
jae
add
jmp
mov
xor
and
mov
mov
aas
psrld
jbe
jle
jno
idivl
cwtl
leave
jnp
insb
pop
mov
iret
jge
add
push
call
mov
push
add
pop
or
notb
adc
dec
push
mov
sub
push
jmp
add
jae
xchg
or
add
aam
dec
mov
ja
cmp
push
add
add
scas
mov
xchg
add
add
add
push
pushf
xor
mov
mov
sbb
add
mov
fs
addl
cmp
mov
sbb
ficoms
add
stc
call
insb
cmc
std
add
dec
out
dec
mov
dec
add
xchg
test
test
add
push
jmp
cmp
mov
push
xchg
sub
in
ds
repz
popa
out
aas
dec
test
dec
add
mov
ja,pt
add
jmp
add
loop
cli
ror
in
in
xchg
inc
xchg
xor
xor
mov
push
pop
pop
sti
adc
jns
js
in
je
cmp
jb
cwtl
std
insl
stc
add
inc
push
add
mov
sbb
pop
rolb
call
imul
mov
mov
mov
fsub
je
arpl
js
stos
cmpl
and
or
adc
cmpsb
mov
movsl
fistl
xor
push
jp
loop
jnp
sub
test
pop
adc
adc
jp
cmc
leave
dec
shl
data16
cmpsb
jne
push
lods
fxch
not
int
in
sub
xchg
jns
les
jne
add
in
cmpsb
std
stc
add
sub
not
xchg
inc
xor
loop
loop
xchg
xchg
xor
jne
cmp
repz
stc
mov
fwait
mov
rol
mov
adc
in
jp
jo
jnp
mov
pop
movb
fstps
movsb
popf
add
out
enter
jp
outsl
mov
fisubs
mov
sub
popa
cltd
mov
sbb
loopne
pop
mov
dec
and
sti
nop
cwtl
sti
les
dec
cmp
iret
fiaddl
push
push
cmp
imul
jge
add
test
leave
in
jg
jg
push
mov
pusha
and
jmp
pushf
add
cmpsl
addr16
inc
ja
dec
dec
sti
fimull
filds
std
test
inc
nop
mov
rcr
inc
xchg
add
add
test
lods
or
adc
rclb
add
add
dec
adc
je
adc
jo
fwait
test
mov
or
inc
dec
sub
repnz
add
pop
xchg
dec
stc
ja
add
xchg
pop
add
jno
stc
mov
sbb
adc
push
add
adc
sub
sbb
add
xchg
mov
and
dec
lock
cmp
rcrb
adc
add
add
inc
fisttpll
sbb
ljmp
cmc
das
pop
jnp
inc
movsl
adc
jecxz
adc
push
inc
pusha
scas
xchg
push
loop
push
jno
add
push
cmc
dec
clc
negl
imul
mov
pushf
adcb
add
mov
jp
ja
jns
test
add
push
mov
add
jb
adc
sarb
pop
fisubl
add
mov
inc
cmpsb
pusha
adc
add
dec
stos
roll
scas
cmp
add
add
xchg
pop
sub
sbb
pop
sub
mov
add
xor
bound
mov
push
add
jle
add
rcl
push
gs
dec
cmp
xchg
sub
cmpsb
std
dec
leave
add
mov
jle
jmp
xor
insl
add
fistl
xor
add
ret
in
cmc
dec
add
adc
add
iret
or
mov
fwait
mov
gs
add
clc
sbb
incl
scas
std
push
notl
scas
insb
lret
push
or
out
ret
ss
add
loopne
fisttps
mov
insl
xor
sti
sub
add
mov
notb
mov
jae
rorb
rcrl
shlb
xchg
jnp
jmp
rolb
repnz
int3
jmp
fwait
dec
jne
jp
movsb
cmp
dec
in
add
ficompl
aad
sub
xor
add
xlat
loopne
pop
add
mov
repnz
aam
pop
mov
xchg
fsub
gs
push
push
or
cmc
inc
add
fiaddl
aas
shrl
dec
mov
loope
add
add
adc
ret
std
push
inc
jle
cli
test
call
lret
int3
push
and
mov
jg
or
cmp
lahf
or
iret
mov
ljmp
mov
out
inc
adc
add
rclb
fidivs
ds
mov
call
and
sbb
add
inc
jae
mov
adc
lret
aad
addr16
xchg
sbb
xchg
add
lods
cld
add
add
xor
loopne
dec
into
sahf
add
add
testb
andl
adc
data16
add
or
sub
pop
sub
into
sbbl
push
test
lods
add
mov
repz
ret
mov
stos
int
nop
jg
mov
clc
add
bound
push
add
mov
sub
sub
jbe
je
pop
push
mov
sub
popf
inc
mov
dec
cs
in
add
mov
sqrtps
scas
je
xchg
test
sti
add
mov
fisubrl
repnz
ja
jbe
fisttps
in
leave
adc
and
mov
in
add
or
mov
sub
or
add
adc
mov
push
add
pop
mov
mov
or
add
adc
pop
mov
pop
stc
imul
insb
or
add
add
lret
mov
xlat
mov
add
and
jne
jl
pop
into
xor
dec
pushf
cmp
mov
cmp
xor
add
and
inc
shll
cmp
shlb
sbb
mov
xlat
lret
add
bound
and
ljmp
pop
mov
ret
cltd
jp
mov
rolb
sub
or
mov
inc
pop
test
sbb
add
imul
popf
fwait
jp
lods
movsb
or
mov
arpl
lods
jo
mov
ljmp
ljmp
fisubs
clc
mov
add
add
pop
nop
enter
cmp
outsl
mov
add
js
mov
test
hlt
push
pop
xchg
adc
add
add
notl
add
inc
sub
insl
arpl
stos
ljmp
aam
jnp
xchg
jne
add
push
add
lods
dec
loopne
sbb
inc
pop
pop
movsl
sarl
push
xchg
outsb
push
in
cmp
mov
mov
or
xlat
getsec
inc
call
movsl
add
dec
daa
add
sbb
mov
jb
shr
int
nop
movsb
pop
push
and
lods
adc
psadbw
mov
stos
add
sbb
outsb
outsb
or
je
jae
add
mov
add
pusha
inc
fadds
mov
xchg
mov
mov
sub
jmp
fldl
pop
stos
jl
and
jb
and
jae
das
jb
sbb
out
mov
jl
stos
dec
add
xchg
jae
cmp
add
mov
jge
mov
add
add
pop
jns
cwtl
clc
movsb
sub
push
add
jle
decb
xchg
sub
pop
test
out
add
enter
mov
call
pop
mov
cmp
push
push
pop
dec
add
adc
iret
add
mov
add
lret
push
xor
fucomip
mov
inc
dec
jbe
fidivrl
and
test
outsb
out
lods
lods
push
add
jmp
shrl
push
psubsw
dec
add
pop
push
add
js
sub
dec
xchg
mov
add
add
stos
cltd
lods
add
jb
add
jl
or
and
jl
sbb
int
subb
add
out
fiaddl
mov
cmpsb
and
dec
jecxz
insl
popf
push
add
jecxz
cmp
ljmp
pop
and
lret
and
add
lock
dec
sbb
add
jg
add
pop
out
xchg
rcll
lds
pop
cltd
shrb
add
ret
mov
push
adc
out
jmp
add
or
ret
mov
push
mov
jb
scas
ret
movl
sbb
sahf
stc
xor
fadds
mov
mov
je
sbbb
insl
add
add
icebp
rcl
sarb
ss
or
dec
xor
pop
imul
ret
cmp
jb
enter
call
add
leave
inc
cmc
push
rcrl
mov
add
mov
push
imul
in
fdivs
add
in
xor
fbld
in
addr16
sub
enter
orb
sub
cmp
sbb
add
xchg
xchg
in
sub
ljmp
push
mov
add
xchg
fstl
jb
push
and
cmp
pop
pop
or
sub
add
or
fimuls
fsubs
test
ret
pop
in
ljmp
pop
pop
lret
je
jae
sub
mov
fwait
cld
lock
jl
add
dec
and
pusha
sbb
mov
pop
movsb
mov
pop
fld
add
add
push
into
add
addr16
and
add
das
sub
cmp
fidivs
mov
std
add
push
add
pop
sbb
push
test
cmp
sub
pop
push
add
and
xor
clc
pop
and
jmp
push
add
pop
add
add
add
out
aas
push
add
add
int3
int
dec
jmp
or
mov
add
jbe
inc
lahf
bound
test
cmp
push
inc
push
out
add
pusha
push
or
dec
or
pop
cmp
add
add
lock
add
jmp
iret
imul
fdivrl
or
imul
pop
das
nop
xchg
mov
jmp
adc
stos
in
xor
add
adc
cwtl
xor
movsb
loopne
ja
mov
fcompl
ret
xchg
jns
rolb
shrl
sti
jecxz
adc
jnp
clc
and
sub
adc
xchg
pop
stos
ret
add
xchg
sti
inc
jp
js
push
add
jp
jge
jp
nop
mov
cmp
cmp
jnp
fs
push
sbb
popa
stos
loop
add
test
pop
aas
or
jbe
loopne
or
push
repnz
lret
shrb
nop
mov
in
adc
add
pop
popf
icebp
add
fistpll
and
mov
imul
cmp
in
mov
sub
push
mov
iret
mov
int3
loop
adc
mov
ja
add
vmovupd
jmp
in
mov
adcb
lret
bswap
push
add
dec
dec
mov
add
int3
jg
fadds
and
mov
loope
sbb
add
dec
mov
adc
sbb
mov
add
add
lea
pop
stos
stos
dec
adc
adc
divl
push
sub
fisubs
mov
into
lcall
cmp
mov
fwait
es
sbb
pop
dec
add
pop
add
inc
mov
push
mov
inc
add
adc
add
pop
sub
and
and
mov
add
ret
hlt
pop
push
dec
add
loopne
mov
loop
cmpsl
addr16
das
add
loope
addl
scas
sbb
dec
int3
mov
test
aaa
ret
lock
data16
jmp
jle
add
add
outsb
out
repz
mov
pop
cltd
add
adc
lcall
data16
inc
xor
shll
nop
xchg
icebp
push
sub
movsb
mov
push
vpminsw
cwtl
ret
jae
test
subb
bound
cs
roll
xchg
call
dec
sub
add
add
scas
push
xor
popf
mov
adc
std
iret
testb
add
in
add
fdivrs
add
test
push
into
cmp
xchg
dec
scas
scas
rorl
outsb
dec
es
xchg
xor
subb
mov
pop
lcall
fdiv
push
stos
cmp
dec
push
push
pop
add
adc
add
add
iret
inc
mov
aam
iret
xor
lds
movl
add
jecxz
cmp
jp
dec
arpl
mov
mov
cmpsl
mov
insb
imul
sub
adc
loope
fwait
sub
faddl
leave
scas
or
push
loopne
mov
popl
dec
mov
add
add
xchg
add
push
mov
movl
cmp
or
add
mov
addl
mov
mov
lds
call
in
dec
mov
subl
mov
movsl
mov
jge
add
inc
fisubrs
outsb
test
shrb
and
sub
bound
add
add
add
jnp
add
add
dec
pop
das
lcall
pop
comiss
mov
jb
imul
test
es
or
pop
pop
shlb
out
pop
cli
add
and
mov
shl
addr16
repnz
mov
cli
inc
inc
add
pop
outsb
cmpsl
out
scas
shll
add
sbb
in
push
push
add
outsb
dec
add
clc
inc
movsb
imul
add
add
test
xor
pop
idivl
lock
add
lods
pop
xchg
scas
es
add
filds
cltd
fildll
test
flds
push
jnp
dec
imul
outsb
leave
mov
xchg
cmp
sbb
ret
fldl
mov
push
cli
add
add
mov
rorl
add
dec
dec
lret
insl
pop
fdivrl
fdivl
add
add
jb
add
jp
iret
call
and
cmp
in
add
in
adc
mov
out
mov
push
mov
pop
pop
mov
icebp
add
xchg
and
pop
add
mov
sbb
adc
xchg
or
sbb
out
pop
mov
arpl
sub
arpl
jb
push
outsb
add
pop
or
dec
outsl
mov
pushf
add
insb
lcall
icebp
fstpt
stos
leave
jp
jae
xchg
add
add
pop
js
inc
movsb
js
and
ret
mov
and
mov
shrl
mov
movl
lods
es
inc
push
dec
add
add
jo
stos
add
pop
mov
adc
iret
dec
lahf
lcall
lock
xchg
jae
jne
cmpsl
movsl
inc
mov
push
lahf
sbb
and
add
add
and
push
mov
adc
push
out
notb
int
lods
jmp
lds
pop
and
cmp
dec
add
rorb
roll
xor
jne
cmp
mov
cld
ret
loopne
mov
jecxz
aad
dec
lahf
sub
add
mov
lea
add
test
outsb
fisttps
add
lcall
daa
adc
inc
dec
pop
jo
mov
push
mov
jb
mov
add
pop
je
aaa
push
inc
xchg
in
sub
cmp
push
xchg
mov
test
ja
mov
ret
push
xor
inc
mov
or
xchg
add
mov
je
sub
out
scas
xor
neg
add
mov
pop
sahf
mov
into
xchg
fildll
pop
pushf
add
mov
mov
in
les
xchg
loop
pop
insb
movl
in
xor
inc
jmp
add
push
fcoms
add
imul
nop
add
das
roll
repz
nop
lret
sbb
sub
mov
xchg
jp
dec
stos
gs
add
add
fadd
and
es
add
cmp
xchg
dec
xchg
cmp
outsl
add
add
leave
mov
int3
mov
cmp
add
aad
leave
cld
jae
xchg
aad
add
inc
rorb
stc
push
push
mov
xchg
gs
daa
fidivs
xlat
inc
pop
pop
pop
adc
dec
jmp
das
pop
inc
notb
mov
dec
add
cmp
mov
test
pop
stos
pop
jle
addr16
aaa
push
xchg
inc
sbb
add
imul
dec
cmpl
lahf
push
adc
push
fwait
xchg
fcmove
lea
ret
and
das
int
in
adc
insl
push
negb
pop
add
mov
add
add
leave
ljmp
scas
mov
jmp
jns
rolb
lea
cmp
add
inc
aaa
cltd
loope
push
aam
add
out
add
jl
jbe
xchg
sbb
dec
fwait
lods
add
data16
xor
testb
jns
int
add
mov
ljmp
lret
ret
mov
add
scas
xor
cmpsb
scas
cmp
rolb
mov
dec
loope
fs
testl
fidivrs
das
xchg
mov
das
sub
out
add
xchg
add
leave
add
mov
sbb
push
cltd
test
lds
push
loop
xor
mov
xor
jae
out
test
adc
cmp
add
jns
or
lds
aas
les
add
add
add
fwait
or
or
loop
add
xchg
mov
add
sbb
movsl
cwtl
xchg
pop
addb
or
fmull
push
sarl
adc
inc
add
data16
cmp
sub
mov
add
das
jge
jb
stc
and
pushf
add
and
mov
and
mov
pop
sub
lock
sbb
std
add
jp
add
mov
out
push
repz
insb
out
outsb
add
jb
sub
loop
push
push
clc
xor
je
inc
call
xchg
xchg
in
into
mov
movl
stos
fs
ret
xchg
add
mov
cmp
push
xor
je
push
xchg
mov
pusha
nop
sahf
lcall
call
lock
in
sub
mov
shll
cmpsb
or
push
nop
pop
xchg
cmp
imul
inc
sub
imul
fisubl
mov
add
add
dec
cmp
mov
add
hlt
or
lds
outsl
mov
mov
ljmp
scas
sbb
add
xchg
pop
aas
pop
decl
push
add
sbb
or
subl
lret
cmp
add
sbb
push
rol
or
add
aas
pushf
in
push
add
or
mov
daa
fisubl
or
xor
into
fidivl
cmpsl
aad
add
mov
or
inc
add
jo
push
mov
mov
pop
mov
and
push
add
jecxz
cmpsb
shrb
loop
adc
mov
dec
arpl
push
pop
les
cmp
or
inc
pop
addr16
xor
fxtract
inc
dec
mov
lret
add
js
jge
daa
inc
mov
imul
in
mov
mov
imul
adc
andb
clc
add
or
and
addl
ljmp
adc
pop
sub
add
add
add
adc
xchg
ret
add
and
mov
inc
ds
xchg
push
add
sub
cmp
sub
add
or
je
push
lahf
pop
inc
in
outsb
add
mov
out
int
add
cmp
dec
dec
rolb
xor
lock
movsl
bt
daa
add
add
fbld
mull
mov
lods
ds
in
scas
std
rcr
outsl
in
xchg
int
xchg
sbb
cs
rol
repz
cmpsl
pop
push
imul
jl
lret
mov
cmp
jp
rolb
add
lret
test
xor
push
mov
andb
out
iret
mov
lds
dec
lods
scas
cmpsb
push
add
cli
xchg
je
jns
inc
sti
cmp
xchg
adc
add
add
add
scas
out
mov
pop
adc
es
xchg
pop
addb
cmp
les
stos
addr16
inc
cwtl
cli
mov
outsl
out
pop
mov
in
movsl
pop
add
das
cltd
pop
push
add
inc
pop
dec
ja
data16
fisubrl
adc
jmp
sub
cmp
push
mov
cld
add
cmp
push
inc
out
mov
pop
lret
push
dec
stos
cmc
out
popa
adc
adc
movsl
xlat
or
xor
add
add
dec
push
jbe
push
iret
movq
ret
pop
cmp
fstl
shll
test
movsl
adc
les
xchg
loope
es
sub
cmp
pop
mov
adc
sub
aas
add
mov
loope
push
add
add
push
pop
lock
mov
lds
pop
scas
inc
mov
data16
xor
xor
xor
inc
stc
add
test
cmpsb
and
rcrl
pop
add
std
sub
mov
jo
add
mov
mov
pop
mov
dec
test
pop
mov
fistpl
mov
push
adc
push
add
imul
cmp
sahf
jmp
and
pop
sub
mov
aaa
push
loopne
lock
popa
adc
jb
dec
rorl
fcoms
sub
or
push
testb
add
add
push
add
repnz
sub
push
xlat
mov
vpunpcklqdq
scas
xchg
pop
jno
orb
stos
jno
add
in
add
cmp
sub
loop
lret
jmp
adc
movsb
add
dec
add
cmp
mov
insb
add
aam
mov
aas
add
mov
je
in
add
subb
call
mov
pop
stos
lahf
cmp
repnz
rorb
add
dec
jo
popl
hlt
add
dec
add
adc
xor
jmp
mov
movl
mov
es
add
mov
rorl
pop
sub
sub
mov
mov
mov
sub
dec
pop
bound
popf
aas
inc
inc
push
les
scas
sub
add
push
add
mov
adc
mov
add
scas
int
mov
ds
and
fwait
xlat
aaa
inc
lret
push
sbb
sbb
loopne
push
cmp
push
inc
fs
adc
fiadds
popa
jmp
pop
jns
push
push
inc
fiaddl
es
mov
push
and
push
mov
ret
lahf
fwait
add
pop
lahf
in
stos
add
or
jbe
cld
dec
fiadds
mov
ret
jmp
test
std
roll
test
shrl
sub
push
ljmp
lret
aad
add
add
sub
xchg
add
and
jge
add
jns
test
pop
xor
icebp
andl
pop
sbb
lods
add
mov
add
sbb
daa
dec
adc
sarb
xchg
repz
pop
sbb
and
cmp
sbb
xchg
add
push
sarb
int3
add
out
sub
insl
ss
or
imul
mov
xchg
fwait
add
xchg
sub
and
mov
mov
xor
mov
rolb
clc
push
ljmp
pop
data16
and
in
imul
mov
fwait
shrb
icebp
sub
out
pop
add
out
pushf
enter
fldt
dec
lods
jmp
push
add
and
sub
incl
pusha
mov
cmpsb
xchg
push
push
dec
push
pop
bound
add
xchg
shll
dec
push
dec
icebp
les
push
jl
fisubrs
cli
mov
add
lods
inc
mov
les
es
push
jns
cmpsb
mov
fisubrs
mov
jle
add
hlt
mov
jg
pop
int
iret
cmp
clc
scas
mov
ret
filds
push
add
js
cmpsb
add
jl
inc
jno
jl
pop
rorb
cltd
dec
sub
ret
push
cmp
add
std
pop
fcoml
mov
xchg
add
movsb
mov
push
jl
fdivl
fstl
inc
push
sbb
add
les
add
jo
add
insb
mov
mov
dec
add
out
aas
dec
aas
in
add
sbb
out
out
xchg
push
cmp
xchg
outsl
push
sub
cmp
sbb
pushf
pop
cwtl
mov
xorb
mov
scas
and
fildl
roll
or
fnstsw
pop
jo
jmp
cmp
add
cmpsb
inc
xchg
roll
inc
add
mov
jae
pop
test
les
xchg
push
out
fistps
add
pop
stos
mov
ds
mov
and
mov
aad
add
scas
sbb
or
add
xor
aad
pushf
add
and
imul
mov
outsb
inc
xchg
arpl
mov
mov
out
aad
mov
xor
subb
subb
mov
adc
loopne
jp
jo
outsl
mov
and
repz
add
rolb
inc
sbb
mov
scas
icebp
insb
rorb
mov
and
jecxz
frndint
ljmp
cmp
mov
in
cmp
pop
inc
lret
push
cmpsl
dec
mov
adc
movsl
lahf
push
xor
jmp
sub
or
add
and
dec
or
cmp
inc
stos
push
popa
lret
cwtl
lock
adc
test
lret
out
add
cmp
add
jae
pop
jnp
sub
cld
add
or
or
sub
inc
das
mov
add
in
iret
shrl
out
xchg
push
push
ja
pusha
cmpsb
inc
mov
xchg
rcll
inc
add
sbb
outsb
push
movsb
fcoml
adcb
dec
jp
outsb
xlat
mov
mov
cmpl
inc
stc
pusha
fucomp
ss
push
mov
sub
jnp
pop
ret
popf
xchg
push
js
jp
lahf
std
add
sbb
pop
test
das
jae
stos
stos
cmpsl
mov
xlat
pop
pop
sahf
sub
sub
or
push
dec
out
dec
sti
push
add
add
gs
sub
and
cs
and
push
in
sub
add
pop
out
sub
push
addb
xchg
stos
cltd
dec
aas
mov
push
jbe
stos
xchg
add
push
mov
cmc
mov
fstl
jge
cmp
add
ret
jae
jno
adc
out
std
andb
mov
add
jae
arpl
insb
mov
js
enter
cmp
fwait
mov
inc
lods
inc
add
pusha
pusha
jb
std
into
sbb
xor
icebp
mov
dec
add
arpl
out
and
dec
test
nop
add
lods
cmp
rcrb
cmp
adc
addl
jg
nop
add
lds
lock
loop
ljmp
enter
push
lret
movsb
mov
jle
shll
mov
xchg
pop
jecxz
ss
and
mov
jo
dec
fmuls
adc
mov
push
xor
xor
fdivrl
add
inc
lods
sub
roll
ret
es
add
or
add
add
xchg
fbstp
icebp
pop
fnstcw
adc
push
popf
and
lcall
scas
popa
int
cmp
xchg
inc
mov
mov
and
sti
mov
sbb
mov
xor
scas
add
adc
fnstenv
add
aad
push
out
push
adc
add
stos
getsec
andl
jmp
mov
mov
push
aad
call
xchg
popa
int
add
lahf
add
iret
add
xchg
jmp
in
mov
add
push
add
add
adc
inc
pop
aas
push
int
push
fs
les
outsb
daa
insb
mov
mov
pushl
fsts
aad
inc
jmp
aad
xor
add
mov
add
mov
lcall
out
pop
incl
lock
cwtl
dec
inc
mov
aam
add
fisttps
pop
add
push
ds
mov
add
test
into
xchg
mov
lret
scas
mov
jmp
or
inc
add
adc
ja
sub
push
jg
subl
xchg
mov
ret
shlb
adc
pop
or
test
pop
into
cs
test
andl
cmp
inc
add
jo
repnz
jmp
mov
jle
mov
mov
sbb
aas
adc
add
add
loop
mov
mov
add
cmpsb
or
xor
out
sub
add
shlb
mov
dec
pop
cmp
add
mov
jmp
cld
jns,pt
dec
insb
sbb
and
incl
inc
mov
std
or
or
pop
add
lea
data16
jge
pop
or
popa
add
popa
add
shlb
dec
xchg
mov
mov
sub
mov
jo
push
push
mov
and
push
jp
decl
pop
lret
fs
ja
and
ret
fisttpl
fimull
cmp
mov
xor
rcrl
ret
add
mov
or
sahf
std
mov
imul
add
add
mov
add
add
add
aas
pop
add
jo
in
scas
mov
adc
push
pop
out
iret
shlb
addr16
inc
imul
add
adc
mov
jbe
stc
fiadds
movsb
and
dec
cwtl
add
add
insb
mov
loope
shr
cmp
lea
and
dec
lods
adc
iret
sub
leave
enter
fcmovb
xchg
xor
mov
sub
inc
fwait
add
pop
adc
add
mov
nop
ds
jb
cmp
add
sub
mov
dec
pusha
cmp
lcall
mov
add
scas
adc
add
ret
push
cmpsl
ljmp
bound
sub
push
jge
icebp
push
sbb
cmpl
outsb
mov
mov
xor
imul
loope
sbb
addb
dec
sub
push
pop
add
cmp
ret
mov
cmp
add
cmc
add
add
add
add
data16
pop
in
add
or
aad
push
int
xchg
mov
repz
shrd
leave
out
or
jbe
add
add
out
jo
add
and
pushf
jle
sbb
add
cmp
mov
add
add
push
add
ljmp
ficomps
mov
sbb
xor
js
sub
repnz
in
sbb
cmp
pop
lret
push
or
scas
sbb
add
jle
mov
adc
rorb
iret
push
clc
rcll
rcll
cmpsl
nop
cld
addb
xchg
imul
fcompl
cli
cwtl
daa
subb
scas
add
add
pop
pop
add
pop
fucom
or
sbb
xor
dec
add
fs
adc
das
mov
rclb
rclb
mov
xor
jb
or
mov
enter
dec
inc
dec
sbb
jbe
mov
jp
es
test
lds
iret
mov
add
add
sbb
and
cmpl
sbb
pushf
xchg
xchg
sub
mov
aaa
inc
test
jecxz
fwait
sub
cld
cmp
sbb
pop
inc
adc
sbb
and
into
or
sahf
jg
int3
push
push
push
popf
push
cmp
xor
inc
mov
jmp
daa
into
or
adc
cmp
sbb
test
mov
arpl
jmp
fstpt
lret
push
or
add
add
sbb
inc
repnz
je
or
jns
sar
and
xchg
lea
jns
add
cld
cltd
sarl
lcall
mov
or
fwait
add
cmpsl
out
fldenv
lods
shlb
ja
xor
movsb
das
ljmp
push
mov
int3
cmp
les
xchg
stc
fildl
in
pushf
add
xor
add
inc
pop
sbb
icebp
lods
mov
or
push
rcrl
je
pushf
xlat
sub
cmp
add
lcall
and
aam
adc
rcrl
lahf
insb
add
xor
push
mov
push
xor
add
xlat
xchg
lahf
add
xor
scas
jns
cmp
mov
andb
dec
jp
fnstenv
add
arpl
mov
xchg
adc
lods
shll
xchg
jl
loopne
mov
mov
pop
cmp
movsb
andb
mov
stc
add
jb
in
push
ds
or
cmp
xor
and
mov
mov
pop
add
xlat
add
sub
add
jp
in
jmp
add
add
xchg
out
mov
add
pop
inc
nop
std
pop
dec
xchg
xor
hlt
lock
lret
add
insb
iret
add
ljmp
cld
out
leave
add
adc
sarb
jg
iret
sti
cmpl
out
dec
lea
outsb
rcrl
aad
pop
dec
jecxz
xor
add
idivb
push
ss
mov
mov
fiaddl
rorb
call
dec
mov
cmp
mov
ljmp
mov
mov
mov
sub
cmp
int
jbe
daa
stos
shl
mov
repz
add
add
add
jnp
int3
dec
int3
out
dec
push
stos
xchg
adc
mov
sahf
jg
jp
push
outsb
outsb
jmp
add
outsl
mov
hlt
aad
mov
in
pushf
lods
jb
loopne
jb
cmp
add
mov
cmp
cmp
xchg
xor
lret
and
outsl
sub
and
mov
add
push
xor
sbb
pop
fistpll
cld
out
mov
and
js
repnz
pop
lods
xor
loop
pop
int3
sbb
int
dec
add
ss
fisubrl
mov
add
sbb
movl
clc
imul
out
mov
push
ss
sbb
pop
push
add
cmpsb
pusha
adc
aaa
lret
jb
loop
aas
imul
ret
jns
iret
mov
mov
cmp
sub
and
fwait
sub
fisttpll
fiadds
push
or
imul
addl
std
movsb
inc
add
mul
mov
stc
and
cmp
xrelease
xor
sbb
sub
subl
ret
add
loop
cmp
pop
fwait
lods
repnz
and
ds
mov
sub
add
les
pop
fwait
push
and
mov
mov
and
bound
mov
inc
mov
mov
inc
movsb
and
sarb
cld
xchg
dec
add
dec
notb
gs
inc
push
add
xchg
cli
popa
add
iret
in
cmp
pop
ja
mov
aaa
dec
insb
inc
jmp
xchg
outsb
out
outsl
or
inc
push
test
sub
jmp
divl
mov
insl
pcmpeqb
pop
and
daa
add
adc
add
lret
mov
test
fwait
push
push
sbb
sbb
push
pop
push
sti
rolb
sbbb
inc
inc
andl
mov
xor
les
sbb
add
mov
add
mov
pop
arpl
loop
nop
or
aas
enter
js
push
pop
cmpsl
cltd
pushf
mov
imul
pavgw
ret
xchg
mov
add
cmp
das
clc
decl
aad
leave
jb
sub
jo
popa
cmpsl
test
ja
andl
xor
jle,pn
das
push
mov
jne
sub
data16
pop
fcomi
repz
mov
andl
dec
rcl
lds
sub
icebp
out
ljmp
cmp
fwait
pop
cmp
pop
add
test
ds
or
aad
sub
mov
movsb
add
inc
aas
add
fwait
repz
divl
xlat
hlt
or
mov
cmp
xchg
fld
out
cld
iret
test
xlat
ljmp
cmp
cs
xlat
xlat
add
idivb
pop
add
push
jns
jnp
movd
mov
adc
jle
xchg
int
shlb
push
popf
jl
lea
adc
inc
push
repz
add
mov
leave
pop
add
add
aam
xchg
rcl
hlt
aad
push
sub
mov
push
add
push
sbb
inc
in
nop
lock
mov
fstpt
out
xor
xchg
push
push
mov
test
adc
add
enter
mov
pushf
add
fmull
mov
mov
adcb
in
mov
call
add
add
sti
int
mov
dec
xchg
jge
outsb
mov
decb
xlat
mov
mov
out
sub
pop
cmp
fidivrl
mov
inc
cmp
in
aaa
out
mov
cmc
mov
and
add
testl
lods
out
dec
out
jne
in
add
or
loope
push
into
dec
mov
dec
push
dec
aas
dec
pop
add
out
mov
adc
lcall
mov
xchg
push
sub
pop
jecxz
ss
mov
xor
mov
pop
or
add
js
dec
nop
add
and
and
in
sub
add
sbbl
mov
push
imul
adcb
ljmp
sub
add
pop
add
pop
mov
pop
lods
add
movsb
hlt
xchg
leave
jmp
jg
mov
subl
ds
movsb
mov
ret
stos
mov
mov
add
aad
ret
push
mov
test
ret
in
cmpsb
add
bound
sbb
loop
adc
add
daa
xor
xor
mov
aas
mov
ljmp
lret
ret
lock
mov
xchg
subb
aas
rorl
test
sbb
add
inc
ds
add
test
adc
sbb
cld
add
jo
int
dec
push
jo
sub
or
mov
adc
push
aaa
xor
je
adc
out
inc
iret
leave
jnp
call
add
shlb
arpl
xchg
lods
add
dec
je
xchg
in
jecxz
test
add
sbb
pop
mov
dec
adc
icebp
int
pop
push
outsl
xchg
enter
add
fcmovu
xor
pop
aad
fldt
or
push
out
xor
sub
inc
inc
arpl
sub
cmpsb
pop
pop
add
xlat
jnp
sbb
jns
addb
add
sub
add
imul
ss
sub
push
push
ljmp
inc
in
dec
cwtl
addb
add
and
xor
ficomps
pushf
mov
sti
cmp
sub
cmp
add
and
or
out
fcoml
or
cmp
jg
adc
addr16
inc
cwtl
add
incl
rclb
add
add
daa
pop
call
sahf
scas
loope
xorl
dec
mov
xor
mov
bound
add
push
fwait
scas
jo
add
stc
xchg
or
xor
sbb
pop
in
push
sbb
xchg
lea
adc
fstpl
add
push
lods
loope
lret
sub
adc
mov
add
pop
add
clc
out
cld
sub
sahf
loope
mov
adc
add
lahf
out
add
xchg
xchg
mov
out
les
jno
cld
pop
movsl
mov
dec
add
js
loop
cmpb
movsb
add
in
dec
sahf
rolb
arpl
jmp
mov
jb
add
xchg
aas
addr16
daa
mov
cmp
in
mov
and
sub
push
xchg
pop
cmp
add
jecxz
cmp
aad
dec
sbb
jp
xor
cs
add
or
out
sbb
or
jno
gs
sbb
add
out
dec
cs
mov
sub
lcall
mov
lret
lock
jnp
out
jmp
add
mov
add
add
push
mov
sarl
add
mov
push
les
popa
test
fs
addl
add
push
mov
inc
inc
mov
mov
mov
mov
add
add
xchg
xchg
movsl
in
enter
push
add
dec
rcrb
or
xor
add
insl
pusha
mov
and
add
outsb
imul
add
test
sahf
faddl
add
in
and
inc
outsb
fiadds
xchg
cli
loopne
pop
fwait
add
add
dec
add
and
lods
inc
add
loope
mov
add
mov
dec
add
mov
mov
popf
or
out
xchg
jnp
movsl
add
sbb
fmul
xchg
dec
lock
subb
add
pusha
test
add
add
mov
add
jns
push
and
xchg
or
movsb
xchg
jmp
imul
pop
mov
add
sar
mov
jns
add
and
insl
adc
add
xor
mov
add
jo
out
jp
add
inc
xlat
push
push
and
aas
add
fst
and
add
or
xchg
mov
cmp
aam
sbb
das
das
sahf
push
mov
mov
or
pop
pop
add
xchg
lahf
rolb
and
push
insl
ret
push
cmp
cs
mov
add
push
out
and
push
pushf
xchg
pop
xor
mov
mov
inc
add
mov
jnp
enter
ret
subl
sbb
xor
sahf
cmp
pop
cmp
ret
mov
xor
and
lods
pop
shlb
cli
inc
mov
inc
mov
add
jl
add
adc
gs
iret
aam
ljmp
add
repz
out
xor
add
mov
sbb
cli
adc
push
or
adc
add
ss
test
popa
cmp
add
mov
sbb
dec
push
mov
mov
xchg
inc
movsb
addl
pop
jg
ret
add
xor
xchg
or
rorb
mov
insb
cmc
add
push
cmpsb
push
nop
outsl
leave
xchg
hlt
push
pop
outsl
mov
jb
or
add
jl
add
int
pop
outsb
leave
sbb
out
pop
cmpsb
inc
in
loopne
mov
dec
cs
add
test
xor
popa
test
stc
popa
test
sbb
push
add
add
test
ja
add
nop
push
mov
mov
add
negb
and
xchg
incl
out
test
pop
mov
cmp
inc
int3
add
push
shlb
jl
add
movsb
lds
mov
sbb
and
test
shlb
inc
sarl
out
cwtl
rolb
sti
add
sub
test
xor
js
frstor
jae
sub
insb
cmp
loop
add
out
or
iret
lret
xlat
stos
cmp
enter
incb
push
dec
loopne
out
inc
mov
cmpb
int3
bound
adcb
add
stc
daa
cld
sbb
add
mov
fwait
xchg
adc
jns
aam
jb
fldl
out
js
outsb
xchg
movl
repnz
add
movsl
aaa
scas
mov
das
add
aad
sub
push
ds
and
mov
lods
pop
gs
xor
imul
leave
aas
sub
arpl
dec
sar
stos
sub
add
jecxz
add
sub
mov
dec
loope
dec
addr16
mov
pop
mov
addl
loop
test
sahf
cmp
add
sahf
sti
js
inc
xchg
inc
sbb
cmp
sbb
movsb
repz
pop
cmc
mov
dec
mov
pop
add
push
ljmp
or
pop
cmpsl
or
enter
add
lret
cmpsb
mov
add
fdivrs
nop
sub
jle
iret
repnz
sbb
add
rcrb
subb
add
xchg
and
add
adc
out
xchg
in
adc
adc
sub
add
xchg
add
add
add
insl
xor
jmp
cmp
cs
push
add
add
push
ja
and
iret
test
add
sbb
add
dec
xor
mov
imulb
sarb
add
cmp
push
lcall
ret
add
mov
push
pop
sbb
or
add
mov
sbb
sub
inc
test
jg
sbb
mov
jnp
pop
add
add
xor
push
add
loope
out
rolb
paddusw
out
or
mov
cmp
mov
fadds
sub
fildll
lea
mov
add
cli
jp
out
add
push
insl
mov
adc
movsl
push
std
mov
mov
dec
fs
push
scas
push
and
push
inc
dec
and
mov
popf
test
fsubrl
mov
sbb
add
iret
repz
out
or
jnp
or
xor
add
rolb
mov
add
lea
mov
sbb
sarl
add
and
filds
mov
stos
inc
add
xchg
xor
fwait
je
add
or
add
push
sub
jmp
adc
out
sbb
and
sub
hlt
cwtl
scas
dec
jl
cltd
sti
xor
add
mov
mov
icebp
add
add
or
push
cmp
add
fcmovb
in
aaa
imul
cmpsl
add
fisttps
add
test
sbb
xchg
inc
mov
fnsave
and
add
adc
sub
ljmp
mov
shr
dec
jmp
pop
add
mov
adc
cltd
sbb
addb
aaa
xor
adc
add
cmp
ret
std
add
movsl
movaps
adc
mov
loop
or
xor
jo
xchg
mov
or
or
jno
push
xor
dec
jnp
rclb
xchg
in
inc
and
sahf
imul
xchg
aad
loope
xchg
add
sbb
data16
lods
mov
test
add
pop
or
mov
add
mov
jg
scas
jle
push
and
xchg
xchg
je
ret
mov
add
cmp
sbb
mov
mov
add
add
inc
sbb
mov
push
daa
mov
insb
loopne
sbb
fnstenv
leave
ja
out
add
cmp
nop
adc
addr16
xlat
and
add
sub
cli
mov
jns
and
pop
xchg
add
mov
xor
loop
adc
imul
gs
test
add
jbe
mov
int
lret
fdivp
fildl
mov
jg
test
adc
push
aas
jbe
sub
flds
icebp
insb
loop
pop
add
add
notb
ss
scas
mov
sub
xchg
arpl
cmp
sub
cmp
mov
jmp
test
add
test
jb
loopne
aad
xor
or
data16
adc
sub
add
dec
aas
push
lret
jb
test
in
pop
dec
int3
and
stos
sub
add
repz
sub
std
test
add
mov
jne
mov
add
push
add
lods
mov
mov
pop
ftst
xor
push
cmp
pop
add
inc
xor
mov
into
out
xchg
add
aad
and
ljmp
xchg
add
sti
addl
orl
dec
insl
dec
sti
std
or
ret
repz
mov
addr16
mov
lea
adc
jae
std
add
mov
movsl
pop
adc
jbe
mov
cmpl
pusha
jmp
sub
xor
je
add
sbb
xchg
ret
shrd
push
adc
add
gs
fisubl
mov
xor
add
sub
mov
test
push
out
xchg
stos
add
xchg
mov
sub
add
mov
mov
push
ret
cld
mov
data16
or
or
sbb
es
add
out
gs
jb
push
loopne
hlt
push
in
pop
mov
mov
stc
sahf
cwtl
and
js
aas
ljmp
sub
xchg
cmp
adc
and
pop
add
mov
rcll
sub
inc
int3
pop
push
add
and
sbb
out
mov
or
cmp
inc
into
popa
push
or
or
into
add
add
ficompl
fldl
dec
push
lcall
add
add
cmp
push
pop
iret
push
or
fisubrl
das
int
imul
add
lds
rclb
test
add
cmpsb
xchg
sbb
push
add
dec
push
jl
outsl
dec
ja
sub
xchg
add
adc
cltd
add
popf
add
push
xchg
inc
jb
aas
or
aad
data16
inc
adc
push
add
addl
mov
insb
lcall
sub
and
cwtl
cmp
add
inc
test
ret
leave
adc
mov
imul
mov
mov
add
adcb
add
push
mov
mov
cs
add
aas
xchg
and
mov
xchg
divl
add
mov
jge
popa
in
cltd
pop
lods
mov
jge
adc
in
mov
fiadds
xchg
vmptrld
ds
jl
xlat
mov
cmpsb
adc
xchg
dec
lods
addl
add
jnp
mov
adc
push
mov
mov
dec
aaa
jl
mov
inc
cmc
mov
shll
aas
out
adc
mov
dec
push
or
add
and
outsl
xchg
lret
in
inc
mov
lds
lcall
or
add
test
je
loopne
push
add
inc
enter
push
sbb
lods
test
lods
xchg
add
aam
push
out
flds
call
aad
int3
scas
xchg
dec
add
into
aas
test
stos
jecxz
mov
pop
aas
pop
sub
pop
sub
add
std
scas
adc
sti
dec
sbb
pop
scas
cli
xor
sub
dec
mov
repz
xor
push
add
add
mov
push
inc
filds
inc
and
in
mov
sbb
out
popf
mov
cmp
loopne
add
adc
push
cmp
add
fisubrs
add
add
loop
mov
inc
cmp
jmp
cmp
out
fs
loop
insb
testb
ljmp
cmp
xchg
cmp
ss
pop
xchg
pop
popf
test
add
insb
lea
add
mov
mov
push
test
cmp
cmp
arpl
sbb
or
inc
aas
fdivs
xchg
repz
add
repz
stos
sub
cmp
aam
shlb
lock
or
mov
and
mov
fs
dec
add
inc
sbb
xchg
push
pop
pop
push
scas
cmp
pop
xor
insb
jne
mov
xor
sub
sub
fst
cmpsb
and
sbb
jl
adc
mov
pop
push
aas
cwtl
std
sahf
add
pop
pop
insb
cmc
mov
push
xor
or
int
out
or
add
sbb
mov
in
adcb
add
add
inc
add
in
cld
sub
add
outsb
add
subb
scas
jecxz
mov
dec
in
cmpsb
aaa
jecxz
and
or
lea
push
xchg
xor
mov
andl
pop
push
xchg
fildl
fildl
pop
xlat
push
adc
movl
dec
inc
scas
jle
pop
push
mov
in
daa
popl
xchg
add
mov
cvtpi2ps
jo
jl
negb
std
rolb
ja
add
xchg
xchg
and
pop
sub
loope
xchg
test
pop
dec
test
hlt
push
add
dec
ret
push
mov
or
loop
std
int3
inc
mov
cmp
add
mov
xchg
add
add
pop
fwait
mov
add
add
ds
pop
movsl
mov
adc
add
sbb
add
mov
fistps
add
adc
xor
mov
add
sub
dec
push
add
insb
movsb
push
mov
cmc
cmp
mov
inc
popf
mov
inc
inc
xchg
add
dec
dec
repnz
jg
iret
adc
add
add
xchg
add
popf
nop
xlat
push
sti
outsb
pop
push
mov
xchg
push
cmp
notb
dec
fbld
movsb
xor
mov
dec
push
scas
sti
mov
add
lcall
cld
sub
push
add
xor
ret
jg
xchg
outsl
or
repz
rcll
cmp
incb
pop
sar
jnp
addl
shl
add
add
fwait
add
inc
movsl
inc
cmp
dec
add
add
sbb
pop
inc
jbe,pn
xor
cs
jnp
fwait
test
fbld
sbb
cmp
insb
jb
sub
int3
aad
sbb
enter
hlt
stos
add
sub
mov
add
lcall
add
fwait
add
sbb
nop
add
pusha
xor
repz
aas
push
pop
add
addr16
push
add
clc
insl
enter
pushf
lcall
jne
mov
or
add
jmp
pop
sbb
std
das
testl
mov
dec
cmp
add
cmp
add
leave
lea
notb
xchg
testl
sbb
fs
push
mov
sahf
add
mov
cmp
in
pop
dec
jg
aaa
xchg
mov
movsl
ss
mov
or
std
imul
adcb
sub
mov
dec
lret
mov
je
call
fcompl
popa
add
push
add
rol
sbb
pop
dec
or
loop
iret
iret
mov
sub
sbb
jmp
and
shlb
xor
pushf
xchg
or
add
out
sub
cmp
mov
xchg
sbb
xor
mov
add
add
sbb
mov
pop
add
jge
aaa
rol
xchg
cmp
ja
jle
add
and
xor
in
addb
add
pop
jnp
out
add
xchg
filds
pop
add
dec
orl
cld
lods
and
pop
addps
ja
fldt
stos
insl
pop
jmp
pop
add
mov
push
pop
mov
pop
test
add
add
dec
adc
add
pop
popf
mov
lods
pushf
pop
lret
pop
mov
sbb
fidivs
fwait
stos
push
mov
ret
jp
jne
mov
sub
add
inc
pop
popa
or
mov
aaa
pop
std
je
or
in
fstpt
ds
add
popf
mov
add
jge
fcoml
pushf
shll
sub
cs
loop
mov
in
stos
into
fldl
add
dec
shrl
add
lods
movsb
sub
or
addr16
mov
xor
add
add
inc
add
xor
add
push
lcall
adc
add
jnp
loope
jb
add
cltd
popa
inc
mov
xor
test
enter
cmc
sub
mov
loopne
adc
in
sub
jae
push
inc
movsb
mov
xchg
adc
lods
cmp
pop
push
and
push
leave
pop
add
fiaddl
mov
testb
xor
les
iret
roll
inc
pop
add
insl
xchg
jno
add
stos
mov
rcr
push
loop
test
lret
dec
inc
add
xor
add
add
call
scas
add
pop
pop
mov
inc
add
add
mov
adc
popf
add
xchg
add
add
xor
int
inc
inc
daa
mov
add
xor
push
incb
mov
add
or
cwtl
jp
fcoms
add
cmp
xlat
rcr
mov
addl
dec
ret
xchg
add
test
xlat
adc
xor
fcoms
fbld
add
add
ret
push
sti
das
cmp
leave
test
dec
sbb
cmp
call
je
mov
pop
mov
xor
add
cmp
xchg
adc
lock
push
mov
pop
pop
add
popl
in
js
arpl
push
xor
loope
mov
add
push
and
cltd
add
xchg
cli
and
lret
fsubrl
or
add
insl
mov
gs
sbb
add
cs
dec
iret
add
add
fisttpll
cmp
inc
sub
fcom
cmpl
stos
add
pushl
les
add
mov
add
mov
cmp
inc
add
clc
push
add
rolb
or
mov
mov
lahf
cmp
lods
sti
push
pop
movsl
add
sbb
call
jnp
imul
outsb
fs
jecxz
dec
ja
divb
and
cmp
arpl
out
mov
push
add
push
and
or
out
push
cmp
mov
xorl
add
and
mov
cmp
clc
xchg
push
add
cli
test
add
outsl
sbb
add
adc
gs
sub
cld
jno
add
add
push
jg
cmpsb
test
sub
pop
jmp
xchg
mov
repz
cld
add
cld
sub
and
xor
add
xchg
inc
sti
add
dec
loopne
add
jne
cmp
jmp
iret
mov
lcall
sub
addr16
jbe
daa
mov
mov
mov
push
jo
jle
insb
dec
push
ret
arpl
aam
loopne
sbb
mov
cmp
repz
add
cmp
mov
pop
dec
add
add
jp
in
sbb
push
push
test
gs
aaa
jge
jmp
cmpsl
cmp
add
sbb
out
ss
dec
sub
add
mov
loopne
inc
mov
ss
fisubl
arpl
js
xchg
jo
sbb
psllq
push
sbb
jbe
mov
push
pop
jmp
scas
push
adc
xchg
clc
lcall
push
add
add
les
lods
rcrb
sub
or
mov
mov
cs
icebp
rcr
aad
lods
xchg
add
mov
adc
iret
jb
lret
pop
mov
inc
push
add
stc
adc
sti
pop
test
loopne
pop
stos
jl
arpl
pusha
pop
bound
add
add
add
add
xchg
sbb
add
es
push
nop
mov
adc
pop
push
add
add
loopne
dec
nop
mov
data16
sub
cld
sbb
add
repz
negb
shld
inc
xchg
ss
pop
jmp
cmpb
fsubl
pop
insb
cmp
rcrb
outsl
aad
add
mov
out
stos
test
mov
xor
test
in
pop
cmp
jns
rcrl
lret
dec
inc
and
leave
out
imul
repnz
mov
mov
cmp
and
add
mov
pusha
adc
cltd
out
inc
sub
in
sti
imul
lds
scas
int
lea
pushf
add
adc
ffreep
std
push
aas
push
inc
cmp
arpl
popa
loopne
cmpxchg
jl
sbb
neg
add
das
add
or
icebp
mov
mov
mov
or
mov
xchg
ljmp
xor
xor
add
xchg
mov
fidivs
iret
outsl
stc
mov
add
cmp
inc
and
fwait
in
add
fs
dec
mov
push
lds
cmpsl
out
and
cmp
add
mov
or
shlb
ret
movsl
stos
push
std
test
mov
aam
add
mov
fldl
inc
inc
pop
push
cmpl
pop
add
add
testl
push
icebp
flds
and
cmp
dec
xor
sub
lea
sub
inc
cmp
cmp
and
rolb
cwtl
push
add
add
scas
ljmp
add
mov
add
jmp
adc
test
push
adc
add
mov
xchg
jo
int3
aad
pop
mov
sti
xor
loop
cmpsb
add
lds
insl
or
testb
add
test
fwait
scas
and
jecxz
gs
aam
dec
enter
into
xchg
pop
add
jb
add
test
add
loope
add
cmp
and
cmc
cmp
add
add
ljmp
stos
fstpl
fildl
loop
and
push
shrb
ret
add
and
out
out
add
addr16
add
movsb
adc
sbb
dec
testl
pop
mov
jecxz
add
cmp
cmp
add
adc
test
push
jmp
pop
jge
add
add
outsb
jmp
mov
call
mov
jno
ss
xor
add
xor
add
neg
mov
xchg
mov
jp
add
mov
mov
out
jnp
int
xchg
mov
add
mov
mov
arpl
sbb
xchg
and
cmp
sahf
cmpsb
mov
ds
sub
inc
mov
xor
add
sarb
inc
cmp
scas
add
xor
mov
pop
je
xchg
dec
gs
xor
mov
xchg
lods
xchg
add
in
mov
add
les
jge
add
cmp
testb
imul
in
add
or
rcll
jmp
sti
xchg
aaa
add
mov
clc
sub
push
int3
add
pushf
sbb
dec
mov
mov
pop
lahf
cld
shl
mov
mov
rorl
clc
test
push
sti
add
dec
adc
daa
add
fwait
sub
popf
push
xchg
cwtl
push
mov
cmp
movsb
cmc
xorl
aad
fnsave
xchg
mov
add
jb
ljmp
dec
or
sub
iret
sub
add
popa
push
lahf
faddl
mov
cmp
add
adc
pop
andb
sub
fsubrl
addl
cld
pop
mov
call
dec
and
mov
add
addl
sbb
add
push
lret
out
jl
aam
out
and
popa
jmp
add
jmp
movsl
lret
int3
add
fcompl
mov
fiadds
je
dec
xor
add
dec
xchg
sar
lret
cwtl
mov
les
cmp
jae
add
lock
pop
js
add
stos
adcl
stos
cld
jno
add
add
inc
jns
repz
and
push
add
dec
add
inc
mov
add
int
notb
cmpsb
or
pop
gs
cld
repnz
mov
fiadds
shl
roll
mov
add
jae
add
stc
leave
mov
cmp
add
push
mov
and
mov
add
dec
aad
sub
inc
fs
dec
outsl
neg
sbb
cmp
jne
test
mov
inc
push
or
push
icebp
mov
add
and
inc
cli
popl
and
dec
out
add
mov
xchg
push
xor
sub
jge
adc
mov
mov
pushf
cmpsb
pusha
roll
sbb
hlt
lret
mov
lods
xlat
dec
push
add
cmp
dec
cmp
sbb
aam
aas
add
inc
add
jbe
adc
mov
jecxz
arpl
add
add
push
xchg
mov
sub
arpl
je
add
adc
xchg
or
out
std
add
int
ljmp
push
add
jecxz
push
or
loopne
mov
enter
mov
sbb
fmull
inc
add
add
fsubp
repz
jmp
pop
add
push
sti
movsl
add
dec
fldenv
bnd
add
pop
cmpsl
jge
imul
mov
rolb
out
das
stos
dec
add
vpsubq
daa
push
mov
fidivs
loop
add
fwait
add
cmc
mov
dec
mov
stos
ficoml
scas
mov
cmp
push
ljmp
por
ljmp
sub
adc
scas
cmp
cmp
aaa
or
add
push
inc
sub
add
sub
lea
add
sub
aas
outsl
adc
aam
loop
add
mov
add
dec
xchg
fwait
cld
shlb
shlb
nop
bound
mov
ret
cmpsb
add
add
push
mov
add
jecxz
das
in
pop
jb
add
mov
dec
mov
add
mov
ds
cmp
test
lret
push
mov
inc
add
adc
xor
in
iret
dec
add
lods
adc
pop
loope
bound
adc
sbb
and
cmpsl
incb
roll
js
pop
add
cltd
in
push
cmpsl
dec
add
xor
add
add
jbe
sbb
ljmp
repz
cmp
aam
mov
lock
add
insb
roll
xchg
adc
fcomi
inc
popf
inc
pop
and
movsb
call
add
inc
add
or
outsl
dec
add
cltd
movsb
filds
repz
or
pop
adc
iret
add
jmp
add
jnp
loopne
pop
add
adc
sbb
jb
add
add
inc
sbb
xor
xor
dec
push
out
ror
adc
loop
loope
or
cli
adc
lahf
imul
lahf
add
std
fs
cmpsb
xor
movsb
pop
sub
add
mov
adc
jge
loopne
dec
leave
mov
scas
inc
cmc
out
nop
mov
iret
aaa
xor
or
xchg
aaa
dec
ret
jp
in
or
jae
cltd
mov
lock
mov
add
pop
dec
cmp
xchg
cmp
add
and
add
jmp
cmp
mov
roll
add
jne
cmpsb
xor
pop
scas
xor
push
jge
mov
mov
jle
dec
mov
add
rorb
push
js
jmp
add
jge
fcomps
or
add
jmp
add
pop
scas
js
inc
mov
fnsave
cs
stc
iret
ret
inc
leave
ret
je
mov
in
add
add
add
cli
ret
add
adc
jno
add
add
add
adc
sub
insl
lods
add
sub
cmp
mov
mov
push
add
sub
sbb
xchg
mov
mov
pop
sub
shlb
inc
sub
out
dec
ficomps
mov
loop
insl
dec
orl
js
add
ss
das
cmp
sub
call
cmpsl
add
xorb
add
outsb
out
mov
add
add
loope
push
test
add
les
mov
mov
push
add
insl
and
js
lcall
pop
repz
add
pop
int
nop
mov
push
in
mov
pop
add
add
testb
loop
or
imul
add
cmpsl
add
fildl
leave
mov
jle
inc
loopne
xor
add
cmp
push
adc
int
dec
mov
cmp
add
scas
jo
insb
push
cmc
push
add
pop
sbb
add
xor
cmp
int
sub
repz
lret
add
int3
inc
add
dec
test
test
push
out
add
and
in
ret
jecxz
rorl
pushl
imul
cwtl
data16
adc
out
stos
add
add
in
aad
fidivs
jb
cld
into
faddl
inc
inc
push
push
sbb
lahf
add
pop
add
fnstcw
addb
add
inc
add
inc
imul
cli
adc
movsl
add
sub
and
add
mov
lods
xorps
or
lock
adc
dec
mov
ds
and
push
xor
cmpsl
add
pusha
lock
or
lock
mov
clc
daa
lldt
divb
mov
mov
inc
outsl
sub
jae
adc
add
jbe
push
popa
mov
xor
cli
sbb
dec
mov
jnp
jmp
sub
aas
stos
xchg
loope
dec
lods
jns
add
xor
icebp
pop
add
xchg
shlb
mov
mov
sti
add
or
mov
icebp
out
cmc
push
rep
add
bound
push
add
pop
cmpsl
add
jnp
inc
test
movsb
inc
push
ljmp
sbb
cli
inc
mov
std
cmp
addr16
fbstp
out
jb
pop
push
repz
dec
mov
and
xor
mov
push
lret
jne
flds
cmp
aad
pop
mov
pop
int3
lea
jge
mov
jae
fistpll
add
add
jb
insl
cmc
jno
loop
addb
mov
lock
fistpll
aas
mov
mov
pop
adc
add
and
sti
xor
cld
pop
add
scas
and
addr16
dec
add
dec
mov
adc
cmpsl
mov
add
aad
incb
push
mov
imul
add
aam
xchg
in
sub
add
rcll
lods
movb
mov
lea
jmp
sbbl
inc
repz
cmp
and
add
xchg
sahf
in
es
cmp
add
add
or
or
es
adc
fs
sbb
add
mov
fwait
cmp
out
push
cld
fldt
rcrb
push
lahf
xor
mov
bound
adc
arpl
sar
cmpsl
add
in
test
inc
xor
add
gs
fisttps
outsb
add
call
roll
add
stc
imul
sti
mov
push
scas
and
loope
mov
movd
out
push
roll
push
add
adc
inc
mov
sahf
add
ds
fsubs
adc
rorb
pop
sbb
outsb
add
add
pop
dec
add
or
sub
insb
jns
lahf
mov
add
add
dec
and
or
lcall
inc
xchg
stc
lea
push
int
sub
pop
xor
inc
and
or
xor
jge
xlat
fwait
rcr
mov
add
enter
fs
les
movl
pop
and
cli
jo
mov
add
sub
fdivrl
add
mov
insl
ret
popa
shl
cmp
shrb
fdivr
mov
add
in
push
aad
or
add
rorl
ret
fistl
les
sti
add
add
lret
test
add
mov
jl
movsl
pop
xchg
loop
xor
inc
pop
inc
call
inc
jo
cli
int3
sub
sbb
or
mov
or
xor
and
dec
xor
flds
hlt
std
scas
inc
insb
lret
fcoms
inc
add
outsb
add
bound
cmp
add
decl
lahf
xor
les
push
loope
mov
enter
mov
icebp
add
cs
std
and
dec
data16
fs
xchg
flds
pop
jl
movsb
cmp
icebp
leave
sub
inc
stc
cmpsl
adc
xor
sub
and
inc
mov
cmp
add
mov
ss
add
shlb
lock
sub
jae
dec
mov
add
mov
or
cmp
push
or
adc
mov
dec
jmp
adc
or
sbb
mov
adc
cmpsb
mov
rolb
mov
fdivrl
push
in
sbb
les
mov
jns
mov
jmp
and
lea
sub
dec
imul
adc
xchg
sbb
xor
fldt
lods
fidivrs
or
jo
js
xchg
pop
fs
fildll
jmp
cmp
add
dec
sub
push
add
dec
stc
add
fimuls
jb
mov
inc
jl
dec
sub
add
sub
cli
lods
gs
shll
ret
fwait
into
mov
sbbl
add
les
ret
hlt
fimuls
mov
sbb
addl
test
mov
add
pushf
fdiv
add
push
push
or
mov
or
mov
sub
icebp
call
cmp
jmp
addl
rclb
mov
mov
mov
mov
das
adc
jmp
add
lock
imul
fldl
add
shll
test
push
push
iret
aaa
arpl
mov
adc
nop
push
adc
movsb
push
or
sub
jbe
and
int3
movb
pop
int
dec
mov
inc
cmpsl
mov
cmp
movsl
repnz
add
add
pushf
add
push
xchg
mov
mov
mov
icebp
add
mov
mov
add
push
adc
xor
testl
add
push
add
add
xchg
mov
pop
data16
add
mov
xchg
addb
inc
das
and
add
add
rcrl
jle
mov
jns
push
pop
jp
cmp
pushf
add
pop
test
int
daa
dec
cmp
push
cmpb
mov
push
lea
imul
cli
xor
mov
test
pushf
add
lret
std
mov
sbb
add
push
add
lea
fdivs
add
add
cmp
icebp
or
cmpsb
scas
mov
ja
sbb
in
add
fisubl
dec
add
push
push
jecxz
adc
iret
push
ljmp
jge
mov
add
jbe
int3
mov
dec
push
jge
sub
adc
dec
xchg
pop
mov
mov
sbb
and
add
movsb
lcall
cmp
pop
sahf
mov
dec
push
outsl
fwait
adc
xor
push
add
dec
stc
add
push
fsubrl
out
cs
xchg
jae
jg
mov
add
lods
aas
jl
or
push
imul
ljmp
outsb
cli
inc
push
dec
stos
add
stc
decb
incb
loope
add
insl
add
jp
dec
stc
test
daa
pushf
push
scas
push
cwtl
add
xor
sbb
mov
cmp
xor
mov
push
pop
iret
and
push
push
jg
test
test
je
fadd
js
mov
stc
or
and
inc
add
imul
popf
out
mov
mov
sbb
inc
or
jnp
sbb
je,pn
push
pusha
daa
addb
mov
lret
nop
xlat
jl
aas
jo
add
cld
jp
pop
add
dec
mov
xchg
cmpsb
sti
pop
mov
jg
nop
push
sub
leave
jb
and
in
or
push
add
cmpsb
dec
andb
cmpsl
loop
loopne
mov
push
cmp
dec
jbe
insl
add
xchg
inc
dec
xchg
add
add
fdivrl
push
mov
call
add
sub
lret
jmp
ja
js
movl
jns
dec
lds
and
add
adc
repz
mov
out
push
add
inc
add
cmc
popa
das
lret
pop
xor
inc
scas
mov
and
stc
je
mov
sbb
xor
xchg
std
dec
inc
rolb
and
pop
mov
xor
jb
pop
add
inc
out
and
dec
addl
dec
aaa
inc
add
xorb
fists
fsubrs
aam
add
rclb
and
cmpl
add
mov
pop
outsl
jg
or
jle
add
add
add
lds
daa
rolb
xchg
add
ja
bound
push
xor
add
mov
test
jnp
dec
xchg
and
cltd
inc
je
cmp
mull
add
jp
loopne
sub
es
push
xchg
xchg
rcl
cmp
pop
fists
cmp
add
aaa
cmpsl
sbb
orl
jp
hlt
in
mov
mov
cld
imul
add
jecxz
js
mov
mov
in
cmpsl
stc
cmp
add
add
add
sub
pop
jge
sarb
fwait
mov
mov
aas
cmp
xchg
pop
push
js
pop
dec
sbb
mov
dec
add
lcall
and
les
sbb
je
and
in
pop
adc
outsb
add
sub
outsb
fst
popa
in
and
movsl
lcall
and
sub
mov
mov
xor
aaa
and
cmp
dec
pop
and
mov
jbe
add
sub
imul
or
sbb
or
add
jl
add
mov
add
insl
mov
or
jp
add
js
jl
add
push
sub
add
xlat
mov
mov
mov
movsl
negb
ret
xchg
add
sub
or
xchg
shrl
iret
jmp
add
adc
arpl
add
cmp
mov
mov
imull
sbb
sti
cwtl
mov
cmp
leave
fsubs
aad
jbe
repz
sub
aad
dec
jp
cltd
jp
sarl
push
imul
fldt
add
sbb
inc
mov
movsl
stos
test
sub
fcmovb
jge
add
inc
and
mov
popl
subb
mov
cs
add
pop
add
cmp
pop
pop
add
test
inc
rcrb
push
add
inc
xchg
pop
out
and
repz
cmp
int3
test
movsl
sbb
fwait
add
mov
in
xor
and
xor
sbb
faddl
sbb
mov
nop
or
mov
orl
adc
pop
into
ret
jne
jg
pusha
mov
iret
ret
or
test
flds
push
test
jecxz
pop
inc
mul
imul
jmp
into
sub
inc
adc
and
cmp
xor
add
sbb
add
pop
ds
add
std
add
sbb
add
in
adc
js
push
xor
dec
adc
cli
mov
das
mov
divb
lea
add
xor
sbb
cmp
inc
cmp
sti
pusha
dec
jg
jb
push
xorb
push
sbb
sahf
mov
add
int
dec
rolb
xchg
and
mov
ds
jnp
movsl
cmp
add
pop
pusha
lret
mov
dec
lods
or
nop
aaa
sbbl
add
xlat
into
and
addr16
repz
ss
add
xchg
xchg
sahf
mov
dec
aad
cmpsb
cmp
mov
mov
lods
lods
fists
add
fcomip
jb
cmpb
enter
mov
xchg
add
add
icebp
in
mov
arpl
and
mov
cmp
mov
pushf
jp
add
jne
jg
popf
aam
xchg
jns
sbb
add
adc
push
lods
in
jge
clc
outsb
xchg
cmp
test
or
data16
add
xor
std
loope
lods
xchg
add
mov
mov
add
add
pusha
jl
aam
dec
test
add
and
fwait
inc
ljmp
leave
push
push
inc
mov
push
add
cmpsb
daa
cmpb
lds
push
leave
cmp
std
xor
or
dec
cwtl
leave
mov
add
mov
cmc
imul
add
xchg
pop
sbb
xchg
add
sbb
mov
enter
lahf
mov
outsl
push
shr
lock
add
inc
std
sub
add
add
and
cmp
xchg
stos
ficoms
cmpsl
add
add
std
add
test
popf
outsl
push
dec
xchg
mov
ja
out
lds
push
dec
push
pop
mov
cmpsb
loope
xor
push
dec
push
add
dec
sti
mov
dec
bound
leave
test
gs
ss
adc
jns
dec
into
add
add
add
rcrb
push
sbb
or
mov
cmp
int3
push
pop
loop
add
dec
pop
repnz
xchg
push
add
add
and
cmpl
in
int
xor
test
jmp
mov
sub
push
jne
loopne
cmp
mov
mov
es
lods
dec
shlb
fnstcw
mov
push
xchg
adc
add
mov
nop
push
add
lea
clc
add
pop
shlb
jno
add
cld
add
lcall
mov
test
mov
push
loope
scas
cwtl
ret
jae
jp
and
xchg
call
add
mov
ds
cmp
adc
cmp
adc
mov
add
jns
daa
add
cmp
adc
add
pop
and
pop
mov
dec
fs
out
fcom
aas
repnz
cs
leave
movsl
jmp
sbb
add
xor
dec
inc
pcmpgtw
int
push
imul
sbbl
cld
cmp
cmp
add
sub
pushl
xor
data16
pop
inc
ficompl
sbb
stos
inc
verr
gs
fs
icebp
cwtl
cs
inc
sahf
fdivrs
cld
enter
push
out
mov
push
add
pop
cwtl
adcb
out
in
aam
mov
mov
add
aad
loope
sub
push
jmp
add
jge
xlat
pop
int3
fnstcw
add
adc
movsl
test
xor
dec
push
mov
add
xchg
or
fs
add
mov
add
pcmpgtw
mov
jle
dec
in
es
mov
ja
xchg
cmp
add
mov
cmp
add
jns
add
imul
aam
xchg
add
push
pop
mov
dec
jmp
inc
loop
cmc
and
sbb
pop
jmp
mov
or
push
add
inc
xchg
repnz
popa
je
lock
dec
fs
cmpsb
or
or
fcoms
mov
jg
adcl
nop
clc
dec
out
add
ja
iret
data16
add
std
jo
sbb
mov
adc
add
int
add
jp
add
add
add
cld
mov
sbb
add
les
add
xor
es
call
jmp
icebp
repnz
push
das
jge
add
stos
add
sub
mov
xchg
iret
sarb
fmull
into
push
push
insb
and
outsl
push
xor
loop
clc
loop
flds
jp
lock
out
and
fildl
sbb
pop
add
xchg
add
decl
scas
inc
aam
rcr
sti
push
add
jl
or
sti
push
add
xor
stos
call
mov
sahf
push
fnstcw
das
cmp
sti
or
aaa
xlat
std
std
mov
aam
dec
ffreep
adc
in
adc
cmp
test
mov
lcall
jp
aas
stos
lock
jb
outsb
jle
scas
mov
aaa
adc
mov
ror
adc
aas
testl
lcall
aas
xchg
sbb
add
mov
add
data16
add
out
xor
scas
enter
add
add
insl
int3
das
xor
jp
add
repz
mov
pop
and
ja
mov
add
mov
sti
imul
xor
xlat
out
sbb
shrl
sub
mov
repz
cwtl
in
push
add
and
sub
arpl
push
adc
adc
test
add
add
pop
add
outsb
add
add
mov
fsubr
add
insb
push
or
addr16
rolb
pushf
jecxz
add
sbb
repz
fistpl
cmp
ds
add
inc
dec
loop
xor
test
adc
jne
dec
jecxz
pop
sbb
push
cmpsb
outsl
je
inc
xor
mov
pop
nop
add
mov
add
addl
cmp
xchg
push
add
sub
and
ljmp
cmpsb
mov
ror
add
lahf
mov
cmpsl
add
pushf
jge
rolb
jle
adc
add
dec
add
stos
xchg
lds
aas
cltd
fcompl
add
inc
cld
or
cs
sbb
aad
fistpl
push
inc
xchg
cs
imull
pusha
pop
testb
xchg
mov
and
cmp
inc
jge
jl
adc
lret
sbbl
add
pop
dec
adc
sbb
push
scas
inc
aam
nop
js
inc
arpl
inc
mov
add
rolb
mov
mov
add
and
out
xlat
pop
sub
dec
movsl
add
pop
cmp
mov
data16
mov
imul
mov
xchg
add
push
sub
lret
insl
fldl
sub
xor
pop
iret
xor
jne
jmp
mov
jae
sub
repnz
test
and
mov
xchg
outsb
adc
outsb
jo
or
push
mov
shrb
mov
jecxz
aaa
add
add
dec
xlat
add
sbb
add
cmpl
xchg
and
jb
mov
in
add
jmp
scas
fwait
mov
dec
orl
xchg
push
ret
sysexit
add
jp
add
push
pop
push
aad
cmp
cmp
xchg
fisubrl
xchg
faddl
fmull
ret
in
xor
popa
push
xor
sarl
add
mov
xchg
inc
jbe
push
cmp
roll
sub
mul
push
bound
outsb
lods
mov
xor
popa
fwait
mov
xor
andb
lods
sub
pop
push
sub
fildll
out
sub
mov
iret
fwait
rclb
jge
sub
adc
imul
and
pop
xchg
lock
sub
cmpsl
pop
movsl
fnsave
mov
fidivrs
cmpsl
push
add
push
push
addl
add
push
repnz
push
std
cmc
xchg
roll
cld
xor
sub
add
or
icebp
mov
into
add
add
mov
jne
addb
or
add
mov
fldt
mov
int3
or
jbe
mulb
mov
mov
cmpsb
add
push
in
push
popa
out
mov
xor
push
mov
add
test
lods
xchg
cltd
repz
popw
ljmp
sarl
lds
aam
ret
xchg
jmp
add
shlb
mov
popa
ss
inc
push
add
pop
negb
or
add
add
pop
mov
jmp
jnp
sub
int
add
add
adc
add
and
xorb
add
sbb
dec
cmpsb
jnp
insb
lds
rcll
mov
adc
test
jae
cs
lcall
jns
xor
mov
lret
mov
pop
jmp
or
sbb
adc
pop
js
xchg
mov
ret
add
add
je
fildl
jne
in
popf
popa
insl
rcrl
inc
mov
cld
movsl
mov
fmuls
add
rclb
lds
popf
cmp
stc
add
jp
pop
jp
add
jg
sub
xchg
push
add
imul
mov
mov
or
aas
and
mov
mov
add
stos
cmp
add
jno
mov
fwait
bound
jae
iret
add
mov
test
test
movsl
in
xchg
shr
add
push
fbstp
add
add
sbb
cmp
outsb
push
shlb
pop
add
lea
mov
add
int3
in
adc
test
push
add
dec
es
mov
sbb
lret
scas
pmulhw
out
jnp
add
xchg
or
stos
sbb
or
mov
lods
inc
sub
fadds
lcall
rclb
push
cmp
jmp
push
lahf
data16
add
add
ss
fwait
inc
dec
dec
pushf
dec
jmp
sub
loop
mov
addb
lods
andb
movb
add
push
out
add
push
push
mov
add
das
out
mov
sbb
loop
les
mov
cld
pop
push
push
xor
mov
push
gs
in
add
lahf
cmp
cmp
jb
adc
out
fstps
xchg
or
xor
fxch
add
mov
ret
push
in
mov
aas
mov
push
mov
clc
bound
jl
mov
jns
add
xchg
cmp
jl
aad
movsb
loopne
or
cli
adc
in
loope
push
xor
arpl
add
adc
push
mov
add
lods
jecxz
enter
cmp
push
push
push
shr
sbb
push
add
add
push
aaa
lcall
sub
dec
mov
rcl
clc
mov
daa
inc
movsb
movsb
mov
lock
adc
lea
filds
roll
sti
lret
js
insl
mov
inc
push
pop
add
les
addr16
call
pop
jbe
aas
test
add
sti
and
sti
sbb
add
sahf
loop
push
enter
jmp
add
out
xchg
cld
sub
sbb
fdivr
xchg
das
xor
mov
int3
add
hlt
pushf
jmp
loope
iret
notl
add
dec
push
add
ja
cmp
cmpb
sbb
adc
add
pusha
add
pop
push
iret
jmp
xchg
cli
dec
bound
add
sub
pusha
pop
adc
jns
adc
cli
inc
add
adc
clc
jne
mov
int3
repz
inc
jnp
add
jns
stc
pop
add
add
xchg
add
jmp
add
add
fidivrs
sbb
push
repnz
sbb
scas
push
dec
test
pop
or
add
cmp
jno
sub
cmpb
cmp
add
aad
inc
sub
aaa
lea
adc
inc
in
test
jno
xlat
inc
push
xchg
add
jns
mov
add
fmul
gs
push
nop
jmp
imul
lret
fadds
mov
and
jae
int3
add
adc
xlat
mov
add
fdivp
mov
in
jmp
pop
mov
dec
ret
mov
stc
cli
aam
xchg
out
test
shlb
sub
push
movsl
pop
xchg
icebp
or
fistl
mov
movsb
or
mov
cmp
add
jmp
or
jmp
in
in
push
cmp
cmc
fstps
jle
jg
movsb
mov
push
xchg
repz
sbb
call
jne
cmpsb
pop
and
aaa
test
push
mov
out
lea
push
shlb
cld
mov
subl
xor
push
loope
sbb
cwtl
in
cmp
mov
add
push
out
mov
inc
jbe
pop
rol
push
pushf
sbb
push
add
add
cmp
push
stc
and
mov
or
scas
cmp
jnp
stc
sub
jp
mov
gs
dec
xlat
clc
xchg
add
movb
add
pop
add
push
mov
add
ljmp
pop
lock
mov
jp
cltd
inc
cmp
gs
addr16
daa
loopne
daa
movsb
add
into
cwtl
fs
pop
lds
inc
out
pop
xchg
mov
adc
rolb
popf
inc
add
add
add
add
add
add
hlt
fstpt
pop
aam
push
jae
and
insl
pop
ljmp
out
jo
or
shlb
ret
add
jmp
lods
push
dec
mov
call
add
les
add
lcall
popa
jns
pop
cmp
cs
movl
mov
push
je
push
mov
add
add
test
cmp
jno
sbb
popa
fcoml
add
testb
sbb
adc
mov
pop
lods
jb
add
add
jg
jmp
int3
cmp
into
imul
ret
add
dec
dec
outsl
std
jnp
scas
xor
scas
jmp
outsl
sub
add
mov
cmp
lcall
sbb
pop
xchg
jp
movb
scas
add
repnz
mov
cmp
adc
add
wrmsr
fcomps
add
xchg
add
push
loop
lds
add
mov
mov
sub
dec
pop
sbb
rolb
and
xlat
lock
jle
xor
sbb
xor
add
inc
push
add
add
add
xchg
add
fstps
sub
add
mov
shlb
add
jb
out
fucomp
into
add
lcall
add
or
mov
push
jbe
mov
shll
push
xchg
cmp
daa
ljmp
mov
hlt
add
push
out
add
xchg
inc
clc
add
dec
enter
ffreep
flds
push
sub
lea
dec
jne
jb
divb
inc
stos
adc
arpl
mov
test
add
add
cs
jb
xchg
stos
add
add
add
mov
icebp
mov
or
aaa
add
xchg
jmp
les
arpl
rorl
in
cwtl
jne
jnp
insl
xchg
pop
push
push
inc
add
pop
jl
in
mov
xchg
jns
cwtl
into
adc
add
add
hlt
out
jp
enter
movsl
out
hlt
insb
mov
dec
or
fstl
or
sbb
out
lea
push
dec
test
cmp
adc
xlat
push
add
add
dec
mov
push
mov
arpl
mov
test
xchg
int
add
sub
dec
movsb
push
cmpb
das
out
es
add
rcll
cmc
subb
mov
lods
ss
addr16
ja
insb
and
inc
cmp
xchg
sbb
repnz
in
rcrb
inc
imul
push
jmp
aam
scas
add
mov
add
mov
insb
add
mov
push
jecxz
mov
add
add
inc
fadds
or
add
and
ljmp
add
add
loope
adc
pop
pop
je
jp
push
push
bound
pop
inc
xor
js
or
out
and
jmp
and
xlat
dec
dec
xlat
inc
lods
add
scas
aas
call
loope
cmc
pop
add
repz
jmp
push
jbe
sub
aaa
fdivs
shlb
mov
roll
in
loope
insl
inc
pop
sbb
sbb
push
pop
cld
shrl
stos
dec
xchg
int3
loope
test
inc
dec
aas
icebp
sub
and
js
sub
add
into
movsl
rolb
sub
jno
add
scas
decl
xchg
cmpsb
push
movsb
push
jbe
cmp
jne
shll
cmpsb
push
cmp
push
cmp
mov
push
pusha
notb
mov
mov
xchg
mov
cmp
jl
js
xchg
push
and
leave
add
in
movsb
stos
jo
push
loope
mov
mov
jne
sbb
mov
mov
inc
pop
jmp
insb
popf
pop
inc
xchg
cmp
push
sbb
cmpsb
xchg
add
sbb
js
mov
mov
jp
out
incb
push
sbb
or
aam
lods
je
pop
pushf
les
sub
or
in
jnp
pop
mov
cmp
mov
add
out
mov
lock
and
push
adc
add
sub
add
fs
pop
xchg
cs
stos
dec
add
fcompl
fisubrl
add
mov
sbb
lahf
push
pop
movsl
xor
decb
je
pop
inc
lds
cld
push
ss
clc
inc
add
or
ror
dec
xor
xlat
nop
lret
jge
push
push
pop
bound
daa
adcl
dec
mov
lahf
xchg
insb
add
adc
pop
daa
loop
fwait
add
popa
push
mov
gs
orl
add
scas
add
add
leave
cli
adc
in
out
xchg
cmp
add
inc
pop
mov
cmpsb
hlt
mov
inc
out
or
lock
add
jbe
xor
std
mov
loop
fistpll
cmp
fcmovne
add
xchg
dec
add
dec
mov
lahf
xchg
xchg
pop
loop
xor
inc
add
imul
add
mov
push
lea
or
fdivs
je
incl
sahf
add
aad
xchg
cli
jg
push
fisubrs
push
jge
adcb
add
das
pop
data16
or
cmp
xchg
movb
ljmp
dec
lods
sti
add
push
out
and
add
cs
scas
call
adc
icebp
sub
lock
in
xchg
test
mov
ret
push
test
add
loop
dec
mov
test
adc
lods
outsb
push
pop
jns
movb
jmp
add
jae
xchg
repnz
mov
cld
add
pop
ljmp
and
movsl
out
std
hlt
sbb
nop
add
jp
cmp
scas
in
xor
add
push
sub
push
in
sub
incb
jo
movsb
and
pushf
add
cld
push
fwait
and
clc
sar
mov
add
mov
js
stos
xor
in
ja
sub
inc
in
push
cmpsb
mov
aaa
xlat
xchg
cli
add
push
or
lock
add
loopne
xchg
mov
add
mov
mov
es
add
mov
sub
aad
popf
add
lret
pop
cmp
add
cmp
ja
sti
add
jle
fwait
pop
add
roll
sub
aam
lret
ds
out
push
add
arpl
gs
shr
add
push
add
jmp
jo
mov
xor
iret
shll
std
cmp
and
pusha
push
push
jne
xchg
pop
push
dec
lock
leave
mov
das
in
jle
mov
push
mov
jno
add
aam
add
pop
aad
lods
outsb
mov
out
jbe
xor
and
xor
mov
push
pop
add
insb
push
pop
call
add
lcall
xchg
mov
xor
dec
ja
inc
cmp
xor
gs
push
lcall
mov
and
cmp
jp
repz
test
repnz
mov
xchg
mov
int3
repz
rorb
push
xor
add
std
pusha
xchg
ret
repnz
mov
sahf
in
scas
cltd
add
es
add
mov
mov
ja
jb
jns
xor
in
scas
mov
mov
fmuls
frstor
shl
pop
xchg
loope
int3
data16
lahf
sahf
sti
loopne
out
pop
or
ficoms
add
out
xchg
lock
jo
add
flds
movsb
adc
aaa
add
cmc
sbb
lret
add
cmc
fnstenv
xchg
data16
xchg
push
fwait
sub
mov
rcll
enter
loopne
or
aas
push
mov
jo
add
es
jle
lahf
sub
rorb
dec
loope
dec
lret
sbb
push
add
stos
in
loope
adc
stos
add
add
in
pop
pop
scas
roll
sub
and
loope
jecxz
inc
pop
add
pop
push
mov
add
inc
add
inc
stos
jp
sbb
sub
add
push
push
add
imul
add
sub
sub
out
jmp
add
mov
add
add
add
outsb
mov
sbb
in
movsl
dec
arpl
stc
test
mov
pop
lret
mov
insl
mov
xchg
push
add
fadd
cmp
sbb
mov
push
cli
add
add
bound
pop
push
pop
cli
push
les
cmp
jp
adc
xor
mov
lods
mov
push
mov
lds
cmp
add
sbb
fdivs
incl
xor
sub
mov
sub
xor
adc
add
sbb
pop
dec
dec
pop
mov
pop
decl
sub
sbb
push
pop
out
insb
mov
xor
jmp
add
lcall
cmp
and
push
cmp
scas
jp
inc
outsb
sbb
ljmp
add
lahf
outsb
cmp
testl
pop
mov
fldl
cmp
add
jb
add
shr
test
add
mov
dec
addr16
pop
out
cltd
in
jmp
jne
mov
mov
push
push
jb
fistpll
sub
enter
pop
add
and
repz
rolb
xchg
dec
adc
add
nop
in
fwait
lret
sbb
ja
add
jp
mov
mov
aas
cmpps
jmp
scas
ficoms
pop
mov
and
fildll
icebp
icebp
mov
jmp
push
std
cmc
or
loopne
fiadds
int
aad
adc
ret
add
inc
cmp
push
push
sbb
pop
pop
mov
xor
hlt
add
lods
movsl
xor
roll
xchg
aas
incl
adc
add
ss
add
add
loope
popa
rcl
push
xchg
mov
aaa
add
clc
xor
lret
addb
or
loope
enter
pop
sub
popa
push
icebp
push
sub
add
movsb
pop
into
and
addb
mov
nop
lds
in
fcmovne
dec
mov
push
add
cld
sbb
add
int
scas
ret
aam
fcmovnu
add
in
sub
data16
in
test
mov
add
mov
imul
adc
xchg
add
push
lcall
xor
inc
and
daa
out
cmovge
ficoml
mov
push
out
pushf
pop
cmpsb
push
xlat
and
arpl
lock
push
stos
add
adc
add
jno
mov
fdiv
add
push
fnsave
push
sbbl
add
in
fwait
and
cmp
push
out
add
jns
aam
jp
and
pop
and
pop
mov
cltd
ja
js
push
aaa
ljmp
pushf
push
sub
jmp
rolb
ds
xchg
push
jae
lock
jge
add
jo
cmp
pop
mov
jp
mov
movl
shrb
mov
test
aad
lret
outsl
popf
clc
adc
xor
pop
sbb
add
stos
mov
jo
add
inc
sbb
sub
aad
clc
pop
mov
dec
and
pop
scas
add
xchg
cwtl
jecxz
add
movsl
cmp
fadds
sbb
aas
pop
add
jns
mov
sbbb
jo
movsl
or
fnstcw
dec
jo
inc
mov
shrl
imul
mov
adc
add
add
aaa
dec
and
enter
nop
sbb
push
jno
pop
add
cmp
int3
into
leave
popa
dec
call
mov
fisttpll
popf
ja
sbb
out
xor
cmp
add
add
aas
xchg
mov
das
cmp
jl
pop
sbb
das
pop
mov
iret
mov
push
lea
inc
add
mov
mov
push
mov
pop
add
pop
cmp
jne
inc
add
jb
les
pop
pop
test
cmp
adc
sbb
adc
mov
dec
add
xchg
ret
loop
pop
orl
ror
push
popf
mov
fbstp
adc
push
jle
pop
fnstenv
stc
push
mov
loope
shrb
adc
hlt
jecxz
fsubl
mov
push
jle
into
mov
add
mov
sub
gs
inc
add
pop
std
xchg
outsl
lcall
add
jle
andb
rorl
xor
mov
fwait
xlat
das
add
add
dec
adc
adc
int
pop
mov
add
add
lret
sbb
lret
add
rcrb
lds
mov
sub
xchg
add
mov
mov
orb
add
add
jg
xor
adc
add
sub
inc
sarl
flds
icebp
mov
shl
popa
xchg
dec
inc
add
jbe
push
mov
inc
sub
add
fstpl
cmpsb
mov
lds
mov
enter
jo
sub
ret
ja
dec
add
add
addr16
cmpsl
xor
rclb
aaa
cwtl
scas
ficompl
rcll
xchg
push
xchg
or
ret
jl
insl
add
repz
data16
dec
inc
roll
ret
mov
mov
cmp
adc
cmp
call
add
push
pop
add
adc
push
call
ss
mov
mov
or
mov
add
inc
rcrb
dec
add
or
jg
add
rclb
out
aas
pop
stc
fpatan
xchg
push
repz
bound
mov
add
repnz
inc
xor
add
shlb
cli
test
lcallw
and
push
inc
mov
mov
inc
mov
cld
addb
and
add
xorb
mov
popa
inc
add
jno
fst
cmp
and
add
aam
cwtl
xor
mov
add
add
jne
pusha
pusha
inc
cmp
jnp
mov
add
add
data16
dec
pop
cmp
lret
mov
xchg
add
sbb
adc
out
mov
sub
lahf
sub
xlat
repz
mov
loop
lock
add
fstps
add
repz
ret
fnstenv
sbb
lds
loop
icebp
and
enter
pop
or
insb
and
xchg
test
add
sbb
add
dec
cltd
add
pop
add
jge
aad
mov
dec
pop
xchg
mov
add
ret
pushf
add
movsl
movsl
stos
test
inc
in
add
xchg
jne
mov
iret
hlt
add
jmp
sarb
into
mov
add
cli
inc
mov
dec
cmpb
push
push
add
dec
push
in
add
mov
mov
or
dec
les
dec
sbb
jge
add
add
es
pop
sub
add
orb
jne
ss
sbb
sahf
rcrl
add
inc
ret
call
add
mov
das
ret
mov
and
jnp
dec
and
mov
push
aas
add
in
cmp
xchg
test
dec
jp
push
mov
lret
add
iret
mov
push
xchg
out
outsb
xchg
add
fidivrl
add
add
pop
dec
rclb
mov
pop
pop
sbbl
pop
rorl
or
jnp
sahf
add
out
add
movsl
adc
stos
adc
mov
add
loope
jmp
das
aad
sub
adc
mov
into
add
jecxz
xor
dec
mov
sbb
aad
xor
mov
imul
mov
rcll
cmp
lds
add
adc
pop
das
push
punpckhdq
cmpsb
adc
xor
ret
dec
add
out
push
inc
xor
add
add
inc
jb
add
add
fwait
sub
xor
add
shlb
add
ret
jl
es
pop
mov
jb
pop
cmp
jg
add
test
add
add
mov
rcl
adc
mov
jg
pop
mov
in
cmp
xchg
mov
pop
dec
jmp
addr16
xor
popf
pop
in
cmpsb
sti
movsl
pop
xor
mov
push
stos
stos
shl
fisttps
pop
cmpsb
or
add
add
jb
add
pop
mov
xchg
mov
jns
insb
aad
sub
mov
add
jmp
es
stos
hlt
data16
ret
sbb
dec
or
push
jmp
dec
in
shl
add
sarl
add
and
les
jl
ret
test
jne
stc
roll
mov
icebp
inc
repz
mov
sub
dec
jecxz
add
and
repz
lock
mov
in
add
mov
jae
cmp
mov
mov
push
insb
xchg
jno
inc
pop
lock
adc
add
push
add
outsl
adc
xchg
mov
add
xlat
int3
add
scas
int3
push
jno
movb
or
fmull
cmp
imul
out
addr16
dec
sbb
adc
movhps
in
leave
cld
add
aaa
testb
pop
aam
sbb
add
mov
lret
rcrb
adc
mov
lds
pop
out
outsb
add
cmp
filds
sbb
mov
sbb
add
adc
lds
pushf
in
cli
adc
dec
sti
in
das
loopne
sub
adc
int
pop
add
push
dec
sarb
mov
lock
xchg
adc
or
lcall
jp
inc
add
jg
xchg
adc
push
movsb
push
sub
pusha
push
mov
add
movsb
add
add
mov
dec
popl
fadds
jge
jbe
fisttps
rclb
mov
loope
cld
inc
add
mov
sarl
notb
arpl
add
pop
imul
mov
and
push
dec
inc
adc
shl
outsl
pop
mov
fiaddl
fwait
test
pop
cmp
jle
nop
or
nop
jno
daa
repnz
add
push
cmp
jno
ret
aas
pushf
repnz
inc
subl
sahf
sbb
pusha
hlt
xor
sub
pop
or
pop
repz
pop
mov
add
stos
push
push
xchg
pop
jecxz
xchg
sub
ss
aam
inc
jge
inc
movsb
mov
sbb
shrl
inc
call
test
dec
push
insl
xchg
or
pushf
repnz
lds
or
inc
popf
movsb
add
adc
in
dec
jp
imul
movsl
cld
loop
aad
rorl
fldl
pop
movl
mov
add
imul
add
pop
add
add
lahf
das
pop
aam
pop
js
push
cmp
pop
adc
or
mov
lret
sti
pop
sub
pop
push
add
loopne
add
dec
add
xor
add
outsl
add
add
add
mov
jecxz
icebp
aas
lret
cmp
cmp
shrw
xor
add
inc
incb
adc
nop
movsb
es
adc
mov
out
arpl
fs
mov
push
inc
add
push
xchg
jmp
and
filds
xchg
mov
cli
in
js
sbb
mov
lds
in
iret
xor
jnp
mov
add
xchg
adc
xchg
add
filds
add
insl
mov
mov
add
sti
mov
add
pop
sahf
add
jmp
ret
inc
stos
aaa
divb
xchg
jle
imul
clc
cmpsl
or
xchg
jp
sbb
add
lock
add
inc
jo
ret
push
fs
loope
sub
add
out
rep
add
xchg
jecxz
pop
add
sbb
inc
in
dec
das
shrb
stos
jp
clc
js
js
mov
and
mov
cmp
or
jb
popa
mov
jp
sbb
mov
int
rol
inc
enter
pop
xor
lret
xchg
add
data16
cld
dec
fs
and
mov
icebp
inc
icebp
lods
fildll
pop
bound
sbb
inc
push
sub
add
adc
lret
fcomps
ret
in
fisubrl
stos
add
mov
or
gs
lahf
add
pop
pop
lods
add
cmp
jo
scas
add
into
cmp
jge
xchg
incb
dec
xchg
pop
add
popf
out
nop
add
inc
xchg
out
and
xor
adc
sbb
and
dec
or
pusha
fstpl
push
xchg
lock
stos
cmc
mov
hlt
mov
jmp
push
in
xchg
or
and
stos
lret
adc
sub
rcrb
leave
rcrb
xchg
arpl
add
pop
add
je
pop
inc
add
inc
std
fwait
out
clc
inc
jmp
lahf
push
shll
add
mov
dec
pop
adc
pusha
aaa
daa
push
inc
add
cmp
cmp
jmp
mov
add
insb
mov
push
add
addl
sub
xor
mov
add
mov
xor
jnp
add
or
dec
and
lods
andb
and
xor
sub
ss
adc
ret
jae
mov
and
out
mov
mov
stos
in
adc
rclb
movb
add
jne
in
aaa
test
scas
mov
xlat
add
das
and
sub
xlat
js
add
xor
cmpl
push
int
dec
cmpsb
jmp
sbb
add
or
add
xchg
testl
add
in
adc
enter
pushf
pop
jns
fwait
test
cwtl
adc
add
pusha
mov
fistl
xor
push
pop
push
or
sbb
add
add
idiv
jno
push
sub
fsubr
push
or
push
enter
xor
enter
inc
jae
inc
jge
add
cmp
mov
add
and
cmp
add
pop
xor
adc
inc
pop
cs
add
add
sub
pusha
fisubrl
add
xchg
xchg
out
or
inc
lods
mov
mov
dec
pop
rcrb
test
adc
gs
add
stos
dec
cltd
xlat
leave
aad
divb
add
hlt
add
mov
add
dec
push
add
mov
popa
add
cmpsb
add
insb
mov
into
stos
sub
shrb
mov
or
stc
fsubr
push
leave
adc
jae
add
int3
xchg
call
movsb
jecxz
outsl
data16
int
xchg
dec
fidivrl
push
adc
and
cmp
adc
repz
add
std
mov
rorb
and
cmp
or
stc
pop
movsb
add
test
mov
and
add
lea
lahf
sbb
cmpsb
push
mov
xchg
and
sbb
ret
lods
mov
mov
jae
inc
add
inc
bnd
xchg
popa
xor
and
xor
add
outsb
xor
xlat
lods
mov
and
add
aam
inc
mov
push
xchg
push
xor
out
in
add
sti
adc
ret
cmpsl
xchg
jge
xchg
dec
sbb
addb
jb
mov
das
imul
push
fwait
aad
stos
pop
mov
lcall
sbb
test
mov
add
inc
cmc
out
xor
xchg
in
imul
mov
mov
aaa
in
xchg
lds
sbb
cwtl
sbb
dec
clc
ds
icebp
int3
fstpt
into
push
inc
add
or
mov
loop
push
cli
loop
aam
data16
adc
add
popa
lahf
mov
test
jmp
add
or
cmp
add
xchg
sbb
gs
lods
push
jnp
xor
mov
mov
add
les
enter
push
mov
pop
in
loopne
cwtl
stc
push
xchg
popa
sarl
cmp
out
adc
arpl
mov
stos
jo
pop
inc
mov
add
sar
cli
je
dec
popa
shr
mov
or
loop
pop
pop
ret
pop
popf
sbb
push
pop
ret
inc
cmp
add
test
sub
add
add
add
cmp
jnp
add
std
lcall
inc
pop
gs
in
add
push
and
cmp
inc
add
or
add
jnp
jg
inc
dec
or
jl
lret
leave
scas
push
add
xor
loopne
inc
fldpi
sbb
in
cmp
sub
add
push
mov
jb
xchg
and
scas
into
sbb
aaa
xchg
add
testb
and
mov
mov
aaa
fmuls
add
push
sbb
sub
jb
or
push
sar
popf
int
push
sti
lock
push
sub
cmp
add
pop
add
cmp
scas
dec
lods
mov
sub
in
test
add
push
mov
sbb
add
sbb
cmpsl
add
movsb
out
dec
mov
push
xor
inc
add
ret
xchg
enter
out
mov
inc
push
or
test
sub
and
xor
sarl
fimull
xchg
movsb
xor
adc
les
add
divl
rcrb
mov
out
cmp
pop
or
test
scas
mov
push
rcr
inc
add
inc
add
inc
mov
data16
and
push
test
adcl
adc
dec
add
add
out
ds
inc
mov
int3
aaa
jle
pop
ret
dec
incb
mov
pop
inc
hlt
ucomiss
addb
test
jge
sbb
fstpt
decl
push
data16
mov
div
dec
inc
add
adc
mov
mov
add
lds
push
je
shr
add
mov
jbe
gs
jle
outsb
fsub
cld
dec
loop
xor
lods
insl
loopne
sbb
lds
push
out
sbb
xor
mov
hlt
lea
mov
xor
loope
cld
outsl
cmp
sub
pop
xchg
lock
cmpsb
jbe
lret
dec
lcall
gs
cmpsl
add
fistpl
outsb
repz
mov
mov
mov
push
xor
push
lahf
popf
adc
add
sub
sbb
cwtl
xlat
jmp
jae
add
pop
mov
rcr
or
sub
aaa
lods
fmuls
fmuls
cld
outsl
cmp
mov
mov
xchg
push
add
push
add
add
fucom
cmpl
ds
idivb
push
pushf
pop
lds
add
sti
imul
mov
loopne
sbb
jne
mov
int3
dec
aam
nop
ret
push
lods
xor
pop
nopl
pop
cli
rolb
ds
out
push
jno
xor
pushf
jge
or
add
pop
add
pop
push
iret
pop
mov
je
xor
add
add
add
add
repz
pop
enter
or
xor
jnp
dec
add
mov
cmp
add
sbb
inc
xor
sub
fs
lahf
mov
scas
pop
js
lret
rcl
lods
add
repz
scas
xlat
add
mov
arpl
or
pop
arpl
xor
mov
cmp
loope
jno
push
add
add
add
fiadds
mov
sub
icebp
push
jmp
sbb
mov
loop
xchg
add
aam
outsb
add
xlat
pop
xor
push
fdivrs
jl
jne
xchg
gs
xlat
mov
js
cltd
or
stos
xchg
je
cmpb
add
add
add
iret
gs
add
push
inc
jnp
shll
into
mov
adc
pop
add
icebp
mov
add
add
add
push
jge
std
lcall
test
add
cmpsl
xchg
andb
jge
loopne
lret
mov
mov
mov
xchg
add
add
push
dec
pop
mov
push
add
notl
add
stc
xor
out
ret
clc
mov
mov
adc
add
out
rclb
ficoms
decl
fs
data16
mov
fldcw
call
insb
add
fsts
push
sub
fucom
arpl
adc
les
lret
add
out
pop
add
stc
sub
dec
add
rcl
jle
inc
fidivs
push
das
jg
dec
outsl
cmp
add
cmp
sub
loopne
stos
out
cmc
adc
dec
lods
inc
xlat
add
ret
push
ljmp
inc
jns
add
out
jl
xor
jne
sar
roll
add
pushf
dec
adcb
data16
mov
dec
call
test
add
ret
leave
xor
jbe
cmp
jge
in
add
pop
add
nop
push
jb
xor
xlat
sub
je
xchg
pop
repz
scas
fisubl
xchg
gs
xor
jg
add
pop
mov
mov
add
xchg
dec
cmpsb
sub
pusha
add
lds
jne
pop
pop
and
movntps
ds
sub
push
adc
sbb
xchg
fidivrl
ljmp
mov
pop
add
iret
jmp
in
int
in
xchg
add
mov
and
loope
iret
and
insl
xchg
dec
push
inc
bound
add
jae
addl
orl
rcrb
mov
sub
xor
push
in
jp
fnsave
scas
jle
add
sbb
xor
aam
sahf
je
in
lret
dec
xchg
push
fildl
jmp
test
or
ljmp
mov
dec
pop
mov
ss
inc
mov
mov
lds
adc
push
cmc
xor
and
adc
push
adc
int3
cmp
cmpsb
sbb
mov
shlb
repz
add
setnp
sarb
movsb
cmp
mov
fnstcw
cmpsb
in
sub
push
mov
dec
pushl
jge
mov
daa
sbb
inc
mov
xchg
mov
push
xor
iret
cltd
add
or
pop
nop
pop
fs
xor
shr
rcrw
add
add
inc
mov
cmpsb
test
mov
movsl
xor
xchg
mov
scas
adc
push
add
and
cs
add
sub
fdiv
pop
insb
out
daa
or
inc
insb
inc
stos
ret
enter
add
mov
cmp
jl
mov
decw
mov
xchg
push
add
and
jne
lods
add
add
xchg
sbb
adc
add
pop
mov
push
inc
add
in
ret
xchg
aas
movsb
xorl
push
and
and
ljmp
outsl
add
add
jg
xchg
pop
pop
xchg
jbe
mov
mov
jnp
shll
andl
mov
inc
mov
adc
pop
push
add
mov
inc
fmull
pop
ljmp
sub
std
xchg
jb
mov
add
cmpsl
ret
aad
sbb
add
testb
int3
pop
cmp
add
or
fwait
jle
dec
add
mov
add
sti
push
out
dec
add
push
add
jl
pop
in
ret
mov
sarl
cmp
gs
jne
cmp
scas
cmp
add
mov
dec
cs
loop,pt
push
push
xchg
fimuls
xlat
push
add
dec
sahf
cmp
in
mov
add
dec
xchg
rcl
aad
jb
add
xchg
test
pop
push
mov
test
mov
mov
xchg
insl
cmp
jnp
sbb
push
add
dec
sahf
arpl
mov
jbe
add
fwait
cmp
lahf
dec
jno
pop
add
add
and
xor
rolb
cmc
push
ds
add
imul
add
cli
int3
cli
cmc
hlt
add
fisubrl
lahf
in
ss
out
add
add
lods
mov
mov
sub
subb
out
pop
lcall
movsl
int
add
ret
add
int3
jge
add
mov
add
lret
es
push
jmp
mov
dec
mov
mov
jmp
mov
pop
add
sbb
ret
xlat
xchg
adc
dec
push
add
inc
jmp
pop
mov
adc
pop
add
fadd
pop
fcmovnb
stos
insl
xchg
add
shll
stos
mov
add
inc
add
or
cmp
cld
dec
push
add
dec
add
ret
arpl
xchg
sub
cli
push
lea
jae
add
pop
out
dec
push
or
stc
add
add
jle
outsb
adc
and
leave
aam
pop
add
addr16
dec
mov
sub
dec
mov
add
int3
pusha
call
and
mov
mov
arpl
out
push
int
aas
in
aas
push
lock
jmp
lcall
xor
add
sub
test
cwtl
jo
cmpsb
cmp
cmp
cmpsb
jne
cli
mov
or
iret
daa
add
add
or
fisubrl
jl
jno
out
cmp
rolb
pop
cmpsl
int3
jle
shlb
add
sub
add
jnp
cltd
add
frstor
cmp
inc
inc
add
add
mov
gs
pop
es
push
fcom
mov
and
adc
add
inc
add
adc
test
ret
dec
add
mov
add
pop
xor
add
inc
push
sub
rcrb
popa
out
add
pushl
xchg
add
adc
add
inc
mov
lds
dec
sbb
add
inc
mov
and
shll
imul
scas
add
xor
sub
loope
stos
ds
cmc
add
cmp
je
push
in
pop
sbb
scas
sbb
add
xor
test
insb
hlt
repnz
in
xchg
imul
fbld
es
or
mov
jnp
fwait
jns
add
adc
adc
sbbl
push
sub
or
add
dec
cld
xchg
add
dec
icebp
add
call
add
adc
pop
xor
pop
and
mov
push
out
adcl
push
add
stos
jno
add
mov
add
or
rorb
jae
adc
out
fs
in
mov
dec
cmp
cmp
adc
inc
mov
push
mov
ds
jg
add
jecxz
add
add
clc
icebp
mov
mov
pop
xchg
add
add
fdivr
add
push
pop
mov
outsl
sahf
mov
fwait
push
sbb
add
adc
mov
movsl
adc
mov
fsubp
cmp
mov
sub
jmp
cld
repz
add
push
add
and
ficoms
lds
int3
cwtl
or
leave
adc
and
rolb
ds
jle
stos
mov
add
pushf
add
pop
mov
add
lea
add
ror
xchg
mov
xchg
mov
jg
mov
orl
cmpsb
shlb
into
mov
add
cmp
jae
push
and
xor
jne
iret
mov
lds
xchg
in
xlat
add
pop
add
adc
mov
sbb
sub
mov
jmp
jo
aas
lds
add
jne
lret
inc
jnp
inc
out
stos
ret
mov
jge
loope
inc
xchg
xchg
repz
push
mul
test
cmp
cs
adc
mov
cmove
jae
inc
add
aas
xor
in
add
push
into
iret
add
cltd
add
inc
mov
push
lea
fidivrs
out
sbb
sub
add
add
mov
rorb
aaa
sub
insb
int3
and
fcmovnu
in
shll
or
cltd
push
xchg
int
sub
mov
push
ficompl
cmp
push
xor
ljmp
inc
jle
push
jnp
sbbb
add
add
in
ja
daa
jge
icebp
add
xchg
xchg
imul
fwait
jbe
cmp
sti
jl
mov
adc
xchg
fs
dec
popf
pop
stos
stos
js
add
addl
aas
xor
sbb
lea
jl
mov
std
cld
pop
popa
scas
ret
add
and
ljmp
and
adc
clc
dec
insl
add
aaa
sub
loopne
lea
out
shl
inc
movsl
xor
add
add
push
mov
lahf
leave
scas
inc
out
incl
inc
out
sub
jbe
loop
inc
xor
add
mov
les
mov
xchg
popf
roll
dec
frstor
mul
roll
scas
psrld
leave
add
lods
out
or
inc
mov
movsb
jb
or
push
pop
mov
mov
xchg
test
pusha
dec
add
or
imul
les
add
pop
push
add
int
mov
xchg
sub
jmp
push
cmp
add
push
cmpsb
popa
pop
imul
into
add
stos
add
stos
pop
cltd
movsl
orb
rclb
scas
or
in
cmpsb
or
sti
cmp
out
fsubs
fmuls
int
xlat
leave
hlt
jl
jmp
mov
imul
pop
rcrb
add
dec
adcb
add
add
int3
pop
popf
add
scas
jne
ret
pop
xchg
add
addr16
dec
popa
insl
pushf
addb
sbb
add
jno
aad
sub
add
daa
add
es
arpl
add
and
mov
add
ror
loope
mov
cld
mov
add
imul
add
jle
add
mov
dec
movsb
add
dec
add
lcall
pushf
dec
sub
mov
clc
add
xchg
adc
add
add
and
enterw
xor
jl
mov
mov
lea
arpl
rcrb
xlat
cmp
lods
shlb
nop
js
pop
add
faddl
mull
out
arpl
fstpt
xchg
dec
inc
add
mov
rcrl
cmp
cmpsl
arpl
out
xchg
test
push
add
imul
popf
mov
or
xchg
int
add
add
add
sbb
aaa
jb
xor
add
xor
pop
lea
sub
lds
dec
cs
inc
sub
in
mov
and
cmpsb
inc
stos
and
cmc
cmp
sbb
cwtl
jns
ds
add
pop
mov
jmp
add
jno
ja
addr16
jnp
int3
decb
popa
aas
add
dec
cmp
dec
xchg
mov
clc
xchg
add
push
les
jne
in
add
mov
out
add
add
test
aas
fs
not
sub
stos
add
daa
add
or
fs
add
xor
mov
pop
and
push
inc
add
nop
fisubs
punpcklbw
add
adc
cs
and
imul
aad
jge
pop
scas
dec
xchg
popa
clc
jb
movsb
aas
xor
inc
inc
mov
add
mov
jno
add
push
and
shlb
pop
mov
mov
mov
js
dec
filds
and
add
enter
adc
sub
fisubrs
insb
sbb
leave
gs
dec
inc
cltd
jge,pt
add
fbstp
loope
mov
and
mov
add
xchg
pop
cmpsl
add
rolb
stc
add
mov
add
lret
cmp
lcall
pop
enter
addr16
add
test
insb
add
xlat
mov
sar
iret
push
push
mov
add
int
mov
dec
sbb
filds
xor
jecxz
roll
sub
ret
imul
dec
push
pop
dec
pop
or
xchg
cmp
and
jae
push
rolb
xor
imul
add
pop
adc
jne
les
push
pop
add
adc
enter
push
adc
scas
movsl
fildl
addr16
movsb
movsb
jle
imul
fimuls
cmp
mov
jns
pop
fisubs
test
scas
pop
add
add
inc
mov
or
push
jb
jne
pop
sbb
jge
mov
out
add
addr16
jmp
out
adc
sub
cmpsb
mov
xor
inc
sub
stos
lea
mov
stc
xor
sbb
adc
add
inc
pop
mov
mov
loop,pn
insl
mov
fstl
add
cmp
sbb
imul
push
fs
cmpsb
lods
jne
xchg
adc
std
push
mov
xor
add
cmpsl
aas
or
test
add
aad
scas
add
lret
mov
rcrl
xcrypt-ofb
cmpsl
imul
jb
inc
pop
lret
aad
xlat
mov
cmpsb
jp
push
incb
xchg
movq
outsl
cmpsl
pop
sbb
das
inc
add
jmp
jae,pn
add
mov
sbb
mov
sbb
popa
mov
xchg
adc
add
push
push
mov
or
stos
adc
out
scas
out
mov
and
mov
pop
stos
push
adc
scas
fsubr
adc
testl
mov
repz
add
add
es
xchg
mov
add
add
add
fisubl
outsl
arpl
sbb
stos
jb
imul
or
ja
jb
push
push
sbb
push
mov
sbb
js
add
pop
mov
sub
add
repnz
das
adc
filds
jmp
mov
mov
add
je
dec
ret
push
rcr
std
int
orb
test
lods
add
mov
aad
jmp
or
imul
inc
aaa
sub
xchg
dec
and
push
push
pop
sbb
or
out
cmp
es
fisttps
mov
xchg
hlt
add
push
push
xlat
dec
add
and
and
addb
push
cmpl
push
lods
aad
into
movsb
jbe
mov
std
lods
jo
ret
mov
mov
mov
pop
mov
add
addb
in
add
rcr
add
arpl
fs
xchg
and
add
rcll
push
push
adc
sarl
iret
arpl
fiaddl
divb
pop
add
aaa
add
cltd
dec
pop
cmpsl
or
or
lds
jl
and
add
add
pop
or
pop
inc
outsb
jl
inc
add
sbb
fistps
pop
sbb
or
jb
lea
inc
cmpsb
negb
gs
inc
ja
xor
xchg
push
jno
adc
dec
test
dec
in
aas
dec
or
adc
movsl
jp
cmp
nop
ljmp
add
add
jo
test
cmp
sarb
test
push
int
insl
add
inc
into
mov
dec
cmc
scas
ret
pusha
add
scas
jmp
and
and
loop
pop
js
repz
out
lcall
sub
std
loop
fnstsw
loope
dec
lret
out
push
cmp
popf
mov
fists
inc
mov
adc
lock
sub
mov
xchg
jge
push
cmc
mov
aam
add
lret
loop
xchg
add
cmpsb
xor
popf
fldl
test
cwtl
movb
rcrb
daa
fcoml
push
add
xchg
inc
lahf
sbb
xor
adc
jno
add
mov
mov
adc
push
outsl
ss
lds
add
dec
std
cltd
outsl
aas
out
js
shl
bound
add
pop
aad
jl
aam
loope
jecxz
add
dec
loopne
inc
loop
add
sub
lea
or
add
cmp
addr16
inc
jne
adc
scas
jbe
cmp
lock
inc
mov
lea
sub
pop
xor
out
adc
jmp
cmpsb
pop
inc
inc
mov
add
fs
mov
add
loop
pop
aaa
ja
bound
mov
adc
inc
add
push
aas
ds
inc
pop
add
std
xchg
pop
in
mov
sti
stos
and
adc
add
xchg
add
lds
enter
lock
mov
inc
fs
lret
fucomp
add
add
jp
push
mov
ljmp
add
loope
fistl
out
imul
add
ret
test
rolb
arpl
std
xor
mov
mov
add
add
lods
push
dec
pop
add
hlt
sub
mov
imul
dec
loop
movl
add
test
sbb
and
mul
add
add
out
sbb
add
inc
mov
hlt
mov
cltd
inc
arpl
xchg
pop
jns
xor
jne
mov
and
jb
cmp
in
add
xchg
add
push
mov
scas
lret
sub
push
add
repz
cs
add
inc
mov
pop
push
pop
jb
xor
inc
pop
push
add
int
sbb
insb
jne
bound
jbe
cmp
popa
or
jp
aam
add
cmpsb
add
shr
sub
xor
in
cmp
or
mov
push
mov
dec
call
push
mov
pop
bound
push
mov
cmp
js
les
push
add
addl
dec
dec
sub
and
fistps
in
add
imul
negb
ja
out
jns
xor
in
jo
lea
or
aaa
add
xchg
dec
mov
fistpll
add
or
adc
repnz
ss
adc
shlb
int
sub
add
div
pop
cmp
add
lock
add
dec
shr
aaa
cmpsb
mov
fwait
mov
add
daa
into
fcmovnu
pusha
xchg
mov
jnp
cmc
xchg
add
ljmp
shrl
xor
loope
sar
mov
sbb
xchg
inc
push
ss
add
lea
xor
or
mov
or
ds
and
outsb
cmp
xchg
shll
push
cs
shl
mov
mov
inc
sub
xchg
rcll
add
add
jbe
mov
mov
add
add
mov
testl
test
xchg
aad
sbb
les
roll
adc
shlb
bound
cmp
sbb
fistl
fmuls
test
dec
mov
jae
mov
mov
mov
stos
inc
int
sub
xor
idiv
out
rcll
add
sahf
xchg
add
jae
and
and
xchg
mov
imul
mov
mov
mov
jae
nop
jmp
imul
add
incl
dec
repz
xor
mov
test
mov
and
mov
mov
push
fnstsw
sbb
xchg
add
add
jno
add
test
mov
cs
fcmovb
cmpsl
cmp
cmp
jge
arpl
jb
sahf
mov
add
sub
bound
dec
cmp
mov
push
sbb
mov
rol
fisttpll
and
bound
movsb
or
mov
add
enter
sub
add
insl
addb
mov
repz
dec
cs
addb
add
adcb
ret
outsb
jns
repz
aaa
data16
cmp
sub
pusha
popaw
les
add
dec
mov
pushf
fmull
stos
mov
out
xor
pop
push
adcl
xor
clc
addr16
adc
pop
add
dec
sbb
inc
dec
std
or
out
jnp
xlat
sub
in
or
enter
xlat
sub
loope
or
int
xor
xor
dec
cld
shrl
mov
mov
mov
bound
repz
pop
add
sbb
jae
add
xchg
mov
cmpsl
add
iret
mov
pop
out
add
cmc
cmp
mov
lods
add
pop
pop
inc
inc
test
and
cmp
xor
xchg
pop
test
cmp
fdivl
fcomip
pop
scas
cmpsb
rcll
lret
add
dec
push
xchg
add
jle
out
call
or
adcl
loop
add
fiaddl
dec
jbe
sub
aad
push
sarl
stos
sbb
inc
stos
jecxz
add
mov
push
xchg
lahf
inc
out
mov
jg
mov
je
xchg
and
je
gs
int3
pop
and
fcoms
cli
jbe
inc
addb
add
add
out
dec
add
pop
clc
or
inc
adc
pop
jmp
push
add
add
mov
int3
fs
xor
xchg
dec
or
xor
jle
aaa
and
sbb
xor
ret
mov
aaa
jo
cmpsb
add
add
jns
iret
sub
sbb
or
iret
add
lea
mov
add
mov
stos
cmp
inc
push
iret
fldenv
in
mov
in
or
fwait
add
jb
lahf
mov
mov
xor
pop
add
pop
popa
imul
mov
adc
and
push
test
and
xchg
inc
add
cwtl
nop
nop
shlb
je
xchg
mov
fcmovbe
dec
mov
dec
pop
add
add
orb
add
out
mov
test
insb
xor
mov
pop
out
outsl
scas
subl
mov
fsts
add
imul
insb
pop
fcmovbe
pop
sbb
stos
push
jae
adc
add
dec
add
pop
cs
out
xchg
dec
mov
ljmp
or
xchg
out
inc
pop
lods
cli
mov
adcb
sti
jno
cmp
mov
push
add
dec
rorb
add
loope
pop
and
add
ds
loope
gs
add
push
add
pop
std
testl
add
add
push
sbb
insb
hlt
insl
inc
fildl
inc
orl
test
adc
add
jle
repnz
add
sbb
in
mov
add
dec
sub
sub
dec
nop
jg
jmp
jl
sub
fidivs
lahf
ljmp
lods
popa
imul
pop
loopne
test
push
push
xor
cmp
daa
sub
jbe
mov
jmp
lods
and
in
pop
mov
int3
jnp
pop
je
int
mov
jmp
mov
adc
imul
mov
sbb
in
mov
jae
jge
stos
cs
fld
pop
push
rcrl
pop
nop
dec
outsb
add
cmp
xlat
add
xor
add
mov
nop
xchg
test
nop
ficoml
add
mov
jecxz
inc
xor
xchg
out
repz
jmp
jle
call
push
add
xor
inc
sub
add
cwtl
jmp
push
mov
xor
out
mov
fisubl
xor
test
mov
adc
jg
loopne
mov
add
push
insl
fwait
das
loop
or
insb
sub
xchg
add
inc
lods
addl
jg
mov
mov
adc
sahf
mov
addb
jb
mov
es
mov
sub
cmp
shll
mov
sti
cwtl
in
jg
fistpl
adc
add
mov
sbb
mov
loop
add
nop
jp
jno
fs
inc
outsb
sbb
call
lret
int3
sti
xchg
push
scas
xchg
mov
and
jno
rorb
sbb
cltd
pop
or
dec
cmpl
fsub
dec
add
add
fdiv
shlb
lcall
mov
mov
add
mov
addr16
or
aad
push
add
mov
rorl
shlb
stc
pop
mov
push
or
add
leave
into
and
sub
cmp
add
mov
dec
inc
add
cmp
je
imul
dec
aad
dec
ret
add
push
add
pop
jno
jae
daa
mov
mov
outsb
adc
add
shr
mov
and
test
and
pop
add
cltd
int
mov
aas
lods
inc
cwtl
addr16
sbbl
jl
int
add
mov
add
int3
add
sub
outsb
xchg
jg
xchg
and
add
cmp
stos
jne
subb
dec
dec
inc
pop
jle
sbb
es
add
add
add
mov
and
lahf
add
xchg
pop
push
fbstp
jne
jnp
mov
xor
jns
sbb
sub
xchg
or
add
pop
aas
and
frstor
xchg
push
in
cmp
add
add
sbb
mov
imul
jae
imul
jb
movsl
add
adc
add
sub
cmpsl
movsl
in
pop
sbb
stc
pop
imul
push
movsl
movsb
adc
xchg
jae
test
mov
adc
insb
in
pop
dec
aaa
test
dec
sub
add
mov
mov
dec
cld
add
clc
cmp
ja
jnp
pop
pop
dec
outsb
std
out
push
pushf
jp
push
shrl
in
inc
mov
fildl
test
jecxz
or
in
mov
add
dec
shlb
xorl
cmp
ja
daa
sbb
pop
cmc
sbb
xchg
ficompl
adc
and
mov
lea
mov
and
nop
dec
jecxz
cmp
pop
add
outsl
xchg
jns
or
pop
pusha
xlat
cltd
es
pusha
fnsave
jo
ret
insl
add
xchg
jg
add
adc
js
add
jecxz
jge
aad
jmp
mov
mov
and
adc
lahf
scas
mov
jle
shlb
js
mov
js
mov
sub
insb
sbb
adc
test
add
xchg
jge
imul
cmp
movsl
dec
add
add
push
aas
adc
nopl
inc
add
jl
pop
jl
adc
inc
jb
loop
cld
mov
mov
sbb
xchg
mov
or
push
push
mov
add
filds
cmpsl
sub
outsb
add
movsb
addl
inc
jl
aad
lcall
and
test
pop
mov
mov
pop
out
test
or
sub
mov
adc
add
jnp
in
into
inc
adcb
add
jbe
add
sbb
enter
jns
and
push
outsb
fcoml
cmp
and
and
jmp
cmpsb
jae
mov
add
xor
add
add
fnstcw
jnp
inc
outsl
xchg
jmp
mov
xlat
jb
sti
lods
shrb
imul
push
aas
and
dec
arpl
outsb
mov
mov
add
fnsave
leave
rcr
inc
add
adc
add
fistl
sub
push
lods
lock
inc
push
data16
add
icebp
xchg
jle
loop
sbb
push
dec
add
stos
ret
fstp
add
mov
cmp
in
sti
add
iret
aaa
adc
jge
sbb
mov
mov
pop
sbb
xchg
call
sub
int3
jne
mov
mov
faddl
push
lret
push
adc
enter
sti
repz
xchg
mov
mov
add
mov
and
and
pop
jnp
xor
push
inc
lahf
ljmp
sbb
rcl
lods
out
xchg
add
or
in
xor
call
scas
movb
xchg
ja
pop
inc
ret
out
aad
lods
xorl
add
cld
mov
aaa
add
int
cmp
jge
mov
mov
xchg
mov
xor
hlt
out
xor
cmp
dec
add
add
mov
mov
idiv
sub
lods
int
popf
out
mov
add
and
fadd
xchg
aam
add
jg
ja
lcall
add
icebp
add
add
mov
cwtl
add
ror
mov
mov
add
popf
xchg
andl
aaa
xchg
and
mov
add
add
sti
mov
scas
dec
push
adc
add
std
in
xchg
xchg
add
mov
add
cltd
call
mov
add
fimuls
ljmp
testl
add
fldt
mov
xor
sbb
and
ss
mov
add
inc
pop
add
mov
and
adc
pop
add
cmp
inc
dec
loope
add
xor
mov
mov
cmp
inc
movsb
call
test
mov
jp
es
mov
mov
mov
int
lods
sbb
xorb
in
or
xor
dec
add
lods
pop
repz
xor
mov
pop
add
add
add
mov
jg
add
add
push
mov
test
xor
ret
shrl
stos
cmp
inc
sub
or
aas
movsl
add
xchg
fadd
outsb
pop
jp
scas
jbe
cmc
dec
loope
push
out
in
jge
pop
cli
jmp
add
lcall
mov
std
loop
lcall
add
hlt
imul
jne
or
je
or
inc
leave
push
insl
push
lcall
push
jbe
push
xchg
data16
lret
cmp
sub
add
sbb
dec
cmp
mov
stos
jle
mov
cli
cmpsl
dec
dec
shll
mov
xchg
mov
dec
add
sub
mov
cmpb
inc
dec
popf
push
pushf
adc
add
int
cmpsl
rcll
add
jecxz
add
movsb
pushf
inc
jle
add
adc
mov
sbb
xchg
add
ss
push
cmp
xchg
add
cli
das
call
lods
stos
mov
sub
or
aaa
ret
icebp
and
repz
aas
das
xor
jg
jne
pop
dec
add
lods
jge
add
add
add
push
ds
jno
cltd
cmp
pop
jg
aam
push
jp
outsb
inc
fisttpl
mov
dec
es
rcl
dec
lcall
cmp
sub
add
pop
add
scas
mov
test
pop
movsl
lahf
adc
pop
in
js
or
lods
sti
mov
dec
fdivrl
jl
jnp
adc
adc
inc
push
pop
ret
add
cmpsl
add
incb
imul
add
dec
xchg
loop
dec
pop
cmpsb
and
push
add
mov
inc
mov
mov
jecxz
loopne
movl
add
sbb
pop
arpl
jg
mov
ljmp
mov
jl
fiadds
jecxz
push
inc
xor
jbe
pop
pop
scas
inc
arpl
add
add
add
ss
std
sub
insb
pop
fstpt
cmpsl
cmc
lret
fdivs
sub
call
push
roll
push
push
sub
cltd
pop
int3
jmp
add
jne
sbb
repz
popa
js
jge
mov
ljmp
ret
push
loopne
inc
loop
jge
sub
fcomps
mov
fnsave
stos
divb
push
hlt
or
dec
mov
push
add
test
setb
cld
push
push
loopne
add
sti
xchg
outsb
in
leave
sbbb
push
adc
cltd
or
js
pop
sahf
es
rcrb
shll
sbb
ret
jge
nop
xchg
lock
ss
aam
dec
pop
add
inc
and
or
jl
icebp
bound
xchg
fstpl
dec
add
add
dec
cmp
je
push
push
jae
add
imul
jnp
sbb
jmp
cld
add
sarl
aas
sbb
ljmp
mov
dec
js
jmp
sub
ret
out
into
push
and
jp
push
xchg
cmp
lds
push
int3
testl
scas
imul
add
cmp
rcl
mov
in
cwtl
pop
dec
add
add
std
jne
dec
je
aad
scas
loopne
push
push
sbb
int
movsb
pop
in
jle
pop
subb
xchg
ret
daa
ja
inc
xchg
adcb
add
xchg
push
add
ja
out
sbb
pop
push
es
add
sbb
sbb
xor
lcall
jbe
fmull
sti
outsl
add
in
nop
aam
add
in
inc
es
and
dec
psraw
dec
test
outsl
add
lldt
movsl
ja
sbb
testb
push
add
stos
mov
sub
gs
dec
push
pop
out
mov
dec
adc
add
add
cmc
or
jl
xchg
mov
add
out
daa
dec
lahf
cltd
inc
gs
sub
out
inc
sti
in
lret
dec
rol
cltd
bound
mov
add
lcall
out
and
int
jl
stc
pop
sub
add
jno
inc
arpl
add
shlb
cmc
rcrb
ljmp
push
sub
xor
mov
mov
mov
add
push
bound
and
push
pushf
test
push
popf
add
dec
loop
add
bound
inc
out
sbb
cmpsl
in
add
cltd
jl
and
out
ret
add
fsubl
addr16
in
adc
dec
add
popf
mov
sbb
fstpl
add
cltd
stos
fnsave
incl
xchg
cs
add
mov
into
fld
or
scas
xorb
fsubr
xor
in
in
or
lock
add
jle
jp
adc
add
or
add
ja
pop
inc
cmpsb
in
jmp
lock
fcomp
loopne
lahf
push
cmp
push
push
std
out
push
int
cmp
movsl
and
int3
xor
cld
add
loope
jo
push
add
mov
jns
or
push
push
sbb
mov
add
or
dec
repz
adc
xchg
ja
mov
cmpl
pop
pop
pop
adc
xor
mov
enter
movsl
jle
hlt
cmp
ss
pop
xorl
add
popf
add
push
dec
adc
fadds
icebp
out
out
in
je
xor
mov
add
insb
or
pop
aas
add
rclb
and
add
lret
movsl
jae
and
lret
gs
add
insb
leave
mov
mov
jae
add
into
lock
cmc
xor
enter
pop
and
or
sub
leave
push
mov
push
loope
xor
ret
cltd
sbb
adc
outsl
hlt
je
jae
out
add
and
movsl
add
add
add
gs
stos
sub
jb
pop
scas
cmpsb
clc
jmp
mov
add
mov
shl
jns
lods
loope
jecxz
jp
jo
sub
jns
mov
ret
test
lcall
mov
hlt
push
add
xchg
movsb
not
les
adcl
xchg
addl
fmull
mov
mov
ljmp
movb
pop
push
cmpsl
push
call
add
sub
mov
xchg
jg
add
movsl
fwait
ret
mov
xchg
mov
in
add
push
and
out
jns
ret
clc
add
sbb
inc
dec
add
cmp
int
outsl
and
sbb
cmp
add
sarl
or
add
or
cwtl
in
add
jge
lds
pusha
push
xor
stos
pop
dec
add
dec
jle
cltd
or
daa
mov
inc
sbb
scas
push
pop
jbe
ljmp
test
add
add
mov
icebp
arpl
dec
cld
clc
add
pop
movsb
dec
ss
xlat
mov
stos
mov
and
out
dec
gs
pop
outsb
lahf
aaa
inc
incl
mov
and
add
lock
cld
dec
mov
in
into
aad
movb
scas
arpl
sbb
addr16
addr16
add
xchg
inc
rcr
addb
pop
cmc
sti
mov
or
cs
pop
inc
push
cmp
cli
aaa
enter
mov
push
stos
cmp
jbe
leave
fiadds
jmp
xor
mov
adc
push
nop
xchg
pop
in
mov
xchg
push
std
lsl
or
jbe
int3
add
into
push
inc
add
mov
out
test
cld
pop
aam
cmpsb
add
and
sbb
ret
call
mov
out
std
ljmp
loopne
fcompl
inc
loopne
das
lcall
mov
dec
mov
jae
insl
add
add
pusha
ret
imul
and
mov
loop
js
test
adc
add
mov
test
sbb
inc
js
cwtl
inc
jb
mov
xor
pop
in
call
ja
sar
dec
adc
rcr
shl
sub
and
or
pop
mov
pop
add
add
add
out
inc
mov
push
cmp
cmp
loop
add
cmpsb
sti
in
sub
jl
xlat
inc
cld
add
mov
sub
add
stc
mov
mov
mov
stos
sbb
sti
sbb
es
ficoml
pop
enter
ds
add
dec
and
fldenv
pusha
add
stos
outsl
enter
mov
cltd
add
jns
loopne
inc
stos
adc
pop
add
ss
mov
in
add
xchg
add
bound
and
cmpsl
pop
popa
push
add
sub
cmc
mov
aam
dec
xchg
cs
fists
and
cld
imul
stos
adc
or
test
fs
cmp
shll
push
bswap
xchg
insb
pop
aad
ret
or
jno
fwait
sbb
add
enter
rolb
ret
adc
xor
std
sub
mov
xchg
add
shlb
add
dec
adc
add
jmp
xchg
sar
pop
add
lods
int
lret
add
push
add
cld
popa
data16
dec
movsl
xchg
add
inc
mov
and
js
inc
sub
add
out
jmp
pop
popa
push
push
add
cmp
cmp
outsl
loopne
fdivs
je
cmp
mov
sbb
sbb
test
int3
mov
xor
xchg
push
cmp
add
jg
repz
ret
add
add
movsl
inc
adc
mov
in
test
pop
in
and
int3
add
lcall
fiadds
test
dec
rol
data16
cmc
or
pop
or
cs
sti
or
mov
addl
add
add
hlt
and
call
mov
xchg
addr16
movsb
scas
test
aam
pop
faddl
stos
and
add
add
rcrl
mov
push
cmp
pop
mov
add
mov
pop
pop
sbb
sub
pop
lret
cmp
sbb
mov
fdivr
add
mov
ret
pop
mov
or
mov
popa
cmp
dec
add
pop
add
fdivrl
pop
js
dec
and
xchg
out
jge
aam
jmp
movsl
lock
mov
out
dec
jno
add
add
cmp
push
add
adc
sti
sub
sub
add
add
test
dec
push
xor
dec
mov
mov
imul
sub
cli
jns
aam
mov
cld
jp
add
mov
jmp
add
daa
mov
outsb
jb
add
inc
popa
addb
xor
add
push
add
rorl
add
loopne
mov
mov
cwtl
lcall
imul
jg
pop
iret
cmp
pop
pop
vsubpd
clc
add
ret
and
nop
es
je
add
inc
add
cmp
mov
lret
push
xlat
push
cmp
push
cld
or
hlt
jle
fidivrl
je
add
cs
mov
loope
add
add
mov
sbb
negb
add
scas
outsl
dec
push
cmp
inc
mov
rorb
xchg
cmpb
in
lret
adc
jge
addb
pop
dec
xor
cmc
mov
mov
push
leave
aas
mov
stos
loop
fdivl
add
sahf
sub
out
hlt
push
or
add
loopne
add
add
cmp
cmp
andb
mov
jbe
adc
call
jp
rcl
pop
cmpsb
cld
dec
xchg
xchg
rcl
bound
xchg
add
cltd
rcll
lret
push
les
xchg
out
mov
test
push
pop
xor
inc
fwait
repz
jle
cmpsl
lea
gs
fcmove
mov
leave
xchg
in
add
mov
xor
mov
iret
add
push
inc
icebp
mov
ficomps
mov
loopne
mov
cmpsb
mov
add
in
push
cli
add
xchg
or
and
adc
sti
mov
loopne
dec
xor
xlat
add
das
add
add
xor
mov
dec
xor
add
in
mov
add
ss
or
cld
sub
cld
xor
aad
leave
xchg
out
inc
dec
add
or
mov
or
cmp
mov
cmpb
mov
jno
add
rolb
add
add
fs
xchg
das
fiadds
fisubrs
iret
and
in
sub
jmp
arpl
fwait
add
xor
imul
add
add
stos
xor
test
lahf
xor
in
jge
ljmp
in
add
out
pop
adc
out
jge
lea
pop
into
push
cltd
add
bt
sbb
inc
jp
sub
lret
mov
sbb
lret
jmp
adc
pop
pop
push
add
data16
pop
aaa
jnp
cmpsb
cmp
testb
sti
push
add
and
sbb
mov
in
push
loope
sbb
cmpsb
inc
in
sbb
gs
popa
lds
clc
cmc
push
sbb
outsb
sub
sub
mov
addl
mov
mov
pushf
fmuls
aam
or
cmp
jo
pop
dec
inc
out
inc
mov
lods
mov
jp
int3
mov
test
ja
outsb
push
xor
aam
leave
mov
lret
jnp
cmp
mov
imul
push
ret
add
sbb
add
sbb
push
xchg
and
add
and
or
out
fsubrs
es
test
insb
shlb
out
sub
xchg
jns
add
out
popf
incl
flds
popa
add
add
jp
loopne
testl
add
outsb
pop
mov
push
mov
scas
push
enter
rorb
gs
add
mov
lret
adc
add
adc
std
dec
add
cmp
test
mov
push
fs
out
das
outsl
pop
out
add
loopne
sbb
jp
and
add
loopne
xor
add
xchg
in
add
movsb
add
ss
repnz
test
and
and
xchg
sarl
add
popa
push
lock
movsb
sbb
not
mov
jns
pop
sbb
pop
je
push
adc
or
add
add
sbb
dec
popl
imul
mov
pop
mov
test
popa
add
dec
push
pop
inc
xchg
lods
test
and
imul
lods
xchg
adc
pop
scas
jp
das
add
and
xchg
adc
jb
test
pop
mov
and
dec
cwtl
call
sbb
adc
add
inc
add
stos
add
jg
inc
xor
push
push
es
add
push
xchg
cwtl
icebp
das
sub
lods
lret
jbe
pop
dec
fstl
sti
sub
mov
and
mov
sub
pusha
inc
xlat
mov
adc
push
lret
adc
cli
sub
ja
clc
add
adc
out
loopne
lcall
in
cmc
fwait
and
xchg
out
loop
fs
pop
or
clc
mov
sub
in
int
sbb
into
adc
pop
jg
pop
add
and
xor
ljmp
imul
pop
cmp
mov
jg
inc
jbe
test
std
jb
add
pop
int
rclb
pop
stos
xchg
fcomip
jb
xlat
inc
jge
pushf
mov
lahf
hlt
mov
mov
fldl
jecxz
loop
jle
stos
add
add
sarb
movsl
add
push
scas
fisubrl
pop
push
mov
mov
sbb
push
xchg
mov
push
inc
xchg
push
popf
repz
add
dec
call
add
arpl
sub
bnd
cmp
lret
jle
add
xchg
sub
add
mov
faddl
clc
jbe
loop
shrb
out
cli
add
cmp
pop
mov
mov
cld
int
es
out
push
add
jb
push
add
lock
data16
mov
jp
xchg
aad
mov
sub
mov
add
adc
stos
add
push
add
xchg
or
add
in
dec
mov
mov
stos
repnz
add
call
jnp
leave
data16
or
push
cmpsl
out
or
into
mov
add
movsb
dec
outsl
std
sub
aaa
insl
add
or
hlt
popf
add
in
gs
and
mov
inc
lret
fbld
add
add
inc
mov
nop
or
or
addl
cmp
cmp
iret
xchg
add
test
push
sbb
add
bound
add
stc
lock
cwtl
cmp
inc
dec
push
push
movsb
scas
iret
mov
addb
jns
enter
jnp
adc
lret
push
jmp
add
lahf
jle
cmp
jns
or
adc
jb
in
or
scas
cmp
cwtl
add
sub
jp
or
cmp
adc
sub
mov
add
add
add
xor
xor
test
mov
add
mov
add
fstl
add
mov
pop
outsb
in
aad
xor
jbe
cmp
clc
jo
sbb
in
hlt
repz
sub
jge
cmpsl
enter
and
popa
orb
ljmp
enter
fcomps
cmp
jmp
mov
push
ja
pop
mov
jnp
bound
or
adc
inc
dec
push
pushl
inc
in
imul
add
mov
pop
sahf
sbb
add
add
test
sbb
test
inc
and
cmpsl
cltd
push
test
bound
sub
popf
and
mov
incl
loope
mov
push
jb
out
jae
mov
lea
jae
iret
mov
inc
dec
mov
insb
add
add
sub
loopne
mov
popa
push
add
jo
push
sbb
arpl
enter
es
dec
push
int3
and
jnp
add
and
in
out
cmpsl
sub
sub
add
adc
push
rcrl
jmp
add
add
mov
imul
add
add
mov
je
mov
push
pop
gs
cmp
sbb
ja
jg
cmp
add
aad
movsb
pop
add
push
add
mov
ljmp
jp
lahf
cld
xchg
enter
dec
pop
or
add
nop
jae
ja
pusha
add
push
jae
aas
push
mov
les
cli
or
cltd
jg
add
mov
jno
lea
call
jnp
push
test
mov
cs
sti
cmp
in
add
mov
ds
sbb
mov
adc
add
mov
mov
mov
pusha
and
or
add
scas
sub
jne
mov
add
addb
lret
pop
rcl
mov
xchg
jg
movsl
add
insb
and
inc
add
add
adc
mov
cld
stos
mov
mov
or
pop
cmp
add
imul
bound
out
das
xchg
cs
in
data16
roll
inc
mov
pop
pop
adc
xchg
ret
aam
sbb
inc
stos
inc
dec
fs
xchg
add
mov
out
inc
hlt
stc
scas
inc
ret
pop
pop
in
aas
and
dec
pop
mov
add
xchg
add
push
mov
and
jge
add
out
bnd
dec
jae
xchg
addb
testb
xor
push
adc
jmp
lds
pop
cltd
lret
gs
xor
roll
stc
mov
xchg
mov
icebp
xor
push
testl
pop
dec
mov
aaa
sub
cli
add
movsl
sub
enter
xor
push
stc
movsl
repz
clc
in
sbb
in
dec
testl
mov
add
or
mov
mov
scas
sbb
arpl
outsb
clc
dec
add
add
jne
or
aas
cmpsl
inc
cli
push
inc
xchg
insb
xchg
add
dec
mov
push
jmp
sub
pop
and
outsb
rcrl
add
cmp
add
scas
add
and
addr16
loop
and
nop
mov
inc
stos
int
ds
les
mov
lock
xor
ud2
das
jp
add
add
inc
stos
push
pop
jl
in
in
movsl
xor
xchg
inc
add
fyl2x
rcrb
sub
fildl
or
add
dec
call
cmc
repnz
popa
cltd
add
push
mov
scas
pop
mov
push
add
add
inc
sub
mov
add
clc
das
test
jb
jp
rol
in
stos
jle
add
stos
xor
es
mov
mov
int3
add
sbb
aad
jbe
fsubr
sub
push
xchg
enter
xchg
call
ljmp
xchg
jo
dec
int3
add
xchg
imul
ja
add
jl
arpl
jbe
shlb
icebp
xor
add
add
ljmp
movsb
cmc
jns
sahf
sarb
add
push
insb
shlb
mov
cmpsb
icebp
pop
cmpl
mov
mov
into
add
inc
mov
mov
xor
ja
push
fldl
lret
aaa
xor
add
sbb
insb
dec
add
jbe
and
jge
inc
aas
decb
movl
cld
sub
jge
std
gs
daa
xlat
add
pop
leave
mov
sti
jno
mov
lods
pop
icebp
lods
test
add
sbb
mov
push
loop
mov
dec
add
add
test
mov
imul
adc
push
cwtl
and
test
or
stos
add
pop
pop
add
dec
mov
add
imul
outsl
repnz
mov
xor
cmp
push
icebp
adc
add
dec
jg
aam
add
jb
pop
jno
ss
pop
add
rolb
mov
mov
test
push
mov
xchg
pop
ss
jns
inc
lret
mov
push
cmc
add
and
add
insb
movsl
js
mov
pop
jecxz
cmp
pop
dec
bnd
test
test
inc
leave
insb
repnz
push
jp
mov
arpl
jmp
fs
les
lock
xor
sbb
inc
aam
mov
mov
jmp
jnp
rorb
imul
loopne
rorl
sbb
shr
call
inc
movsb
mov
enter
xchg
mov
add
push
add
icebp
and
and
dec
int
mov
rcrl
mov
or
fxch
add
aam
fld1
xor
xlat
xchg
dec
ret
add
notl
inc
sub
push
clc
add
lock
mov
mov
pop
lods
add
or
push
popa
mov
clc
ret
lahf
mov
ds
pop
adc
add
or
inc
or
jo
test
pop
inc
andb
outsb
andl
add
and
mov
sub
jge
shll
ret
sub
mov
out
stc
bound
hlt
jecxz
cwtl
fisubl
xor
int3
push
fildll
aad
popa
das
jno
and
popa
loop
es
sbb
add
cltd
add
stos
iret
jp
add
inc
push
xchg
pop
jp
add
jae
ret
clc
jo
push
xchg
fimuls
movsb
int
jns
fwait
sub
enter
movsl
mov
pop
cmp
ljmp
add
add
cmp
pop
add
roll
xchg
repnz
or
in
and
jno
scas
inc
andb
mov
sub
pop
cld
pmuludq
out
iret
iret
mov
xchg
pop
insb
add
test
or
add
imul
add
push
sub
fsubr
pop
jb
jb
int3
cmp
push
fwait
aad
xor
adc
in
lods
iret
or
inc
cld
jb
add
mov
sub
sahf
mov
mov
or
cwtl
add
sbb
xchg
mov
jp
mov
daa
xchg
enter
add
dec
iret
pop
rorb
lcall
push
movsb
sbb
dec
movsb
xchg
mov
add
jl
mov
lret
fwait
repnz
xor
push
int
cmp
pop
dec
add
rclb
add
insb
mov
adc
or
sbb
add
test
movb
mov
or
jg
xchg
cld
sub
in
xchg
popf
test
push
ljmp
movsb
push
sbb
jecxz
mov
imul
pushl
pop
pop
sbb
jno
lods
sub
ret
sub
loopne
mov
pop
test
repnz
cmpsb
adc
out
inc
lock
repnz
adc
sub
popf
push
lret
and
dec
jp
pop
add
movsl
add
mov
mov
mov
cmc
fwait
sub
jae
mull
mulb
fists
cmpsl
inc
dec
jp
fcompl
das
mov
xor
dec
add
ficoml
jle
push
xchg
xchg
add
pop
cmp
xchg
xchg
cltd
jg
xchg
xchg
in
sbb
stos
scas
and
add
xchg
cmpsl
rolb
mov
test
sbb
add
mov
shrl
jnp
test
flds
dec
cli
pop
scas
xchg
cltd
test
daa
aaa
cwtl
mov
cmp
movsl
xchg
add
add
enter
fnstenv
cmp
in
xlat
and
mov
mov
and
sbb
cmc
addb
sub
add
frstpm(287
jno
jns
out
in
addb
fistps
sbb
push
or
jecxz
pop
push
std
pop
pop
lods
sub
sbb
aad
push
pop
add
ja
add
sbb
lock
incl
push
cmp
ret
xlat
or
xchg
scas
js
pop
das
xchg
je
pop
pop
cmp
sub
add
es
sbb
movsb
ljmp
insl
add
cmp
scas
imul
mov
sub
aad
xor
outsl
mov
out
lahf
push
add
add
arpl
fadds
adc
xchg
add
lahf
or
aaa
jge
xchg
jl
and
inc
repz
jmp
adc
rcrb
out
pop
pop
push
xchg
add
pop
dec
push
lcall
mov
cmpsl
int
pusha
js
dec
mov
js
pop
dec
add
inc
mov
into
inc
xor
test
and
es
jle
in
dec
add
stos
mov
add
dec
nop
sub
rolb
adc
and
fucompp
xor
sbb
loope
sti
sbb
fadds
aas
movsl
fnstenv
or
xor
inc
add
aas
ret
push
filds
in
push
mov
test
popf
add
sbb
sub
mov
add
push
cld
cmp
aam
xchg
mov
xor
cmp
repz
movsb
ss
and
and
insb
push
xor
inc
mov
add
imul
inc
push
jno
add
ret
lret
adc
mov
mov
add
xchg
fwait
ljmp
push
and
in
cmpsb
add
push
jp
push
lcall
add
data16
arpl
mov
sub
fnsave
repz
mov
mov
jle
popf
push
mov
hlt
jg
fsubrl
add
stos
add
push
ja
mov
sbb
xchg
stos
jns
inc
add
jp
int
xor
test
add
mov
add
add
inc
add
clc
pop
movsl
add
jno
andb
pop
sub
fstps
jg
cmp
test
jp
fbstp
jg
and
ret
mov
scas
mov
sbb
repz
mov
xor
das
sbb
cld
add
add
xchg
fmuls
rcl
xchg
lret
in
jmp
sub
add
add
mov
or
in
pop
aam
pop
pop
fs
out
aaa
nop
add
push
out
rcrb
add
daa
pusha
jb
cwtl
jno
xchg
mov
push
sbb
add
cmp
cltd
mov
and
add
mov
or
push
insb
mov
loope
inc
xor
add
add
pop
cmp
repnz
fdivl
pop
repz
loopne
push
mov
xlat
jno
adcl
or
aas
xchg
popa
iret
jg
push
cmpsl
daa
inc
jp
add
movsl
dec
pop
push
xchg
scas
call
aam
sbb
mov
test
xchg
add
mov
mov
cmp
push
sar
jecxz
xor
pop
adc
xor
roll
movsb
mov
icebp
popa
cmpsb
adc
pop
outsb
popa
adc
icebp
add
push
fwait
into
jns
je
cs
mov
lds
push
add
mov
add
dec
fisttps
add
sbb
lea
stos
xor
popa
cmp
xchg
pusha
add
add
mov
inc
add
hlt
mov
ds
sub
add
add
mov
or
jns
xor
xchg
add
jecxz
out
lods
mov
negb
cmpsb
jb
lret
fcompl
pop
jmp
test
dec
pop
mov
in
test
inc
fs
add
add
hlt
push
push
in
mov
shr
sub
adc
mov
pop
cmc
sub
push
and
pop
stc
int3
sahf
jg
lea
mov
in
add
add
sbb
jge
jl
mov
in
shr
pushl
test
push
push
inc
add
shrl
fstpl
repnz
fnstenv
call
add
loop
xchg
sub
testb
push
fs
cli
cmp
add
cli
sub
push
or
and
sub
pop
adc
and
lock
lahf
add
mov
mov
es
push
push
loope
mov
add
loop
add
push
testb
lcall
pop
sub
in
fcoms
imul
mov
dec
add
loopne
outsb
movsl
pop
inc
push
add
insw
jl
cmc
add
xchg
add
and
test
pop
pop
dec
testl
mov
inc
mov
adc
enter
or
sti
test
xor
mov
push
jl
cmpsb
test
add
jbe
cmc
xor
sbb
fs
jne
hlt
dec
xor
aad
xchg
xchg
or
fcoml
pop
sahf
inc
lds
pushf
popl
ds
test
xor
sbb
xchg
add
add
pop
imul
ret
fisttps
add
xorb
xchg
add
mov
pop
xor
mov
insb
xchg
and
push
mov
insl
pushf
sub
jnp
popa
fldl
cmp
mov
cmp
ja
sub
call
aad
dec
lahf
pop
flds
push
add
xchg
push
push
add
mov
mov
and
fisubrl
mov
sbb
jns,pn
push
inc
jle
iret
leave
mov
xor
sti
and
add
das
push
add
or
jnp
das
pushf
mov
int3
mov
push
iret
sub
dec
roll
sbb
and
int3
shlb
and
pop
arpl
push
outsb
cmc
add
aas
jo
ret
push
test
push
inc
and
sub
jo
add
add
add
mov
add
dec
movl
repnz
xchg
repz
lahf
add
dec
fmul
mov
or
mov
jne
push
sbb
push
dec
push
dec
push
js
add
rcr
add
jne
cltd
dec
push
icebp
add
mov
cmp
cmc
add
push
enter
sar
push
sub
or
adc
sbb
mov
jo
jge
int3
cmc
and
add
stos
lock
xchg
pmaxsw
nop
lret
jne
test
and
add
pop
out
addr16
cmpb
dec
jp
sub
sbb
jmp
push
and
fldenv
pop
test
jbe
xchg
aaa
jmp
stos
out
dec
dec
cmc
add
dec
and
or
shll
out
dec
ja
or
xchg
ss
sub
push
pop
fistps
test
adc
rcll
cmpsl
or
add
sub
mov
adc
add
sahf
adc
or
sbb
pop
testb
mov
push
xchg
sahf
xchg
jae
ja
mov
add
not
add
jo
push
sti
xor
loop
push
mov
enter
xor
sbb
adc
mov
add
pop
fisttps
jae
out
sub
cmp
lock
push
cmp
shrb
fucomip
sbb
ljmp
test
insb
dec
push
in
insb
imul
jg
aaa
insb
movsb
add
push
rcl
loop
fxtract
sarl
jmp
sbb
xchg
add
scas
mov
int3
add
shlb
fldl
repz
sbb
insl
and
push
shll
mov
add
pusha
pop
or
jmp
add
out
adc
outsl
sar
lret
out
ja
or
clc
cmc
add
cmpsb
add
fidivl
jle
aam
js
add
mov
lahf
push
pop
and
mov
jno
rcl
mov
push
or
ja
lcall
test
add
ficompl
icebp
outsl
aam
or
arpl
sub
sub
icebp
nop
imul
loop
test
stos
sub
or
or
xchg
iret
or
add
leave
push
adc
ret
std
xor
aad
ret
add
fadds
xlat
inc
add
mov
and
sbbb
insl
add
cmpl
add
ss
or
imul
add
inc
add
jno
js
insb
push
cmp
mov
mov
adc
imul
loop
push
sbb
sbb
popf
sbb
mov
hlt
add
or
rcrb
adc
push
pop
add
xor
and
rcll
sbb
xor
inc
jns
cmpsl
dec
repz
jno
scas
shlb
or
mov
mov
mov
xchg
add
add
dec
add
xchg
sti
incb
out
add
repnz
ljmp
movsl
clc
inc
mov
mov
fdivs
scas
stos
lds
rcr
xor
add
call
test
daa
insl
testb
lods
mov
dec
mov
dec
or
and
cmc
mov
push
xchg
mov
add
jg
ja
dec
testl
ret
cmp
pop
mov
adc
and
dec
rcrb
and
xchg
and
adc
aad
add
int
out
fimull
add
add
jmp
jle
lret
add
mov
sub
add
xchg
movsl
das
in
mov
cmpsb
aas
outsl
pop
pop
cmp
add
inc
movsb
mov
mov
jmp
mov
das
cmp
push
mov
lods
sub
dec
cmp
pop
or
lods
jp
hlt
negb
inc
mov
shrl
jmp
mov
xor
add
inc
xchg
mov
dec
sbb
subb
sahf
sbb
and
xchg
jb
mov
push
add
add
push
adc
enter
aaa
add
add
mov
aam
int3
inc
sub
push
int3
lock
xchg
sbb
or
pop
xlat
pop
add
jb
pop
mov
lahf
xor
lods
in
lahf
out
insl
and
add
pop
adc
jge
int
add
jmp
add
adc
add
add
push
arpl
add
jns
mov
add
add
rcll
int3
pop
loope
cmp
sub
xchg
sti
iret
movsl
sarb
cs
push
mov
scas
and
nop
imul
cmp
push
add
sub
pop
cwtl
cld
cmpsl
inc
lds
xor
jl
pushf
pop
leave
rcr
jge
add
fldl
in
and
rcrb
jle
rcrl
mov
add
loopne
cmp
jmp
add
add
test
push
cmpsl
xchg
sub
or
int3
jl
pop
aaa
push
or
sarb
dec
add
add
adc
add
outsl
push
push
add
in
add
sbb
or
fldl
xchg
lcall
jl
sub
testl
nop
das
add
imul
or
enter
sarl
lock
dec
dec
xlat
mov
cwtl
jg
add
inc
pushf
add
xchg
mov
mov
es
out
pop
repnz
inc
lret
xlat
add
sbb
mov
add
loope
push
ljmp
sub
mov
cmp
adc
xor
sbbb
fsubrl
xlat
popa
pop
ds
mov
les
sub
dec
add
in
sahf
add
sub
lcall
in
cmpb
jmp
add
xchg
mov
mov
push
js
ja
test
pop
mov
jmp
add
inc
sub
add
pop
lds
or
add
sti
ljmp
loopne
and
add
xchg
jge
add
icebp
into
push
or
add
add
jns
cli
push
imul
push
dec
mov
push
idivb
int
xlat
jle
movsb
ljmp
out
adc
jge
testb
shll
add
mov
adc
xor
xchg
aas
push
in
jb
btc
mov
mov
scas
mov
sbb
cmp
fldl
add
cmp
or
jbe
out
sub
xchg
test
cmp
lret
fiaddl
xchg
stos
fs
cli
push
adc
movb
add
test
xlat
add
mov
testb
enter
cmp
fs
stos
mov
push
stos
add
scas
and
loopne
and
pop
add
jp
leave
jae
je
and
mov
call
loopne
xchg
cwtl
insb
add
imul
in
pushf
inc
aam
push
jl
add
test
add
mov
insb
mov
ret
inc
rcrb
int
das
sub
sbb
cli
add
scas
dec
pop
adc
sub
push
addr16
add
xchg
add
pop
cmp
add
add
mov
pop
add
push
sti
pop
aaa
je
push
add
test
jmp
cmp
xor
cmp
cmpsl
mov
inc
xchg
inc
dec
dec
ret
add
decb
hlt
or
pop
loope
xchg
add
in
es
xchg
cmpsb
popa
xchg
mov
arpl
addl
cld
inc
iret
xor
lcall
jg
inc
add
xchg
add
mov
adc
mov
xor
adc
mov
fwait
lcall
sbb
xor
sub
cmp
dec
and
jno
out
sub
add
cmp
lahf
sub
push
xor
dec
inc
jmp
sbbl
stc
and
mov
push
sub
add
cli
xchg
add
add
arpl
add
dec
ljmp
sbb
pop
aas
push
pop
imull
add
mov
es
push
stc
mov
lock
dec
das
stc
adcb
push
mov
pop
enter
test
add
popa
in
repnz
mov
push
xor
faddl
adcl
pop
add
jns
sbb
push
xchg
jl
hlt
adc
add
imul
mov
adc
js
inc
cmp
add
mov
pusha
loop
cmp
inc
in
pop
outsb
push
push
mov
ja
mov
add
add
xlat
out
add
push
popl
inc
push
xchg
add
sub
jae
fidivrl
mov
jmp
aaa
lcall
and
add
movb
mov
ss
aaa
jae
sbb
fiadds
xchg
dec
add
das
clc
jae
lods
in
clc
movsl
inc
sub
add
dec
xchg
movsl
je
jb
in
sub
xor
sti
add
push
push
add
dec
jnp
or
pop
add
inc
mov
jecxz
movsb
scas
lods
adc
pop
pop
ja
movsl
cmp
fcomi
add
mov
dec
push
add
jns
iret
movsb
sahf
jle
repnz
sahf
and
incl
pop
xchg
mov
test
dec
mov
and
mov
push
pushf
je
xchg
xor
mov
jle
push
mov
rol
jnp
mov
jns
sub
stos
jae
xor
dec
fdivl
je
mov
divb
add
mov
dec
daa
fdivrl
xchg
jnp
cwtl
cwtl
or
adc
push
cmp
and
add
mov
movsl
in
shlb
lret
repz
lock
add
pop
xchg
push
mul
cld
fwait
jnp
js
cli
add
jne
jne
pop
xlat
push
lds
add
sahf
fisubl
std
fldt
mov
ret
mov
fwait
xchg
and
jge
clc
add
mov
sbb
nop
clc
pop
mov
loop
sbb
in
fdivrp
adc
pop
xchg
mov
shr
loop
out
pop
mov
add
cmp
add
leave
add
cmp
in
xlat
cmpsb
mov
cmpl
scas
popf
js
pop
divb
mov
cli
imul
in
inc
xchg
mov
pop
jmp
roll
lcall
js
fisttps
cmp
jle
jns
jg
cmpsl
leave
and
clc
push
mov
popa
add
sub
in
movl
xchg
roll
mov
daa
mov
cld
jae
push
xor
aad
cli
mov
dec
dec
mov
add
jbe
xchg
add
shll
popa
push
sub
add
in
rolb
lods
mov
sti
jbe
cwtl
mov
xchg
int
adc
fcomps
jne
xor
pushl
std
adc
lea
fbstp
inc
or
mov
out
div
adc
sti
jge
std
xchg
test
add
jl
ds
pop
mov
movsl
mov
add
add
add
mov
pop
lock
push
push
mov
dec
add
in
lock
bound
outsl
mov
add
xor
aad
dec
mov
and
and
xor
pusha
mov
add
xor
stos
cmovo
add
ret
rcrb
and
cmpsb
or
mov
xchg
xchg
xchg
addr16
add
sbb
addb
aas
push
push
add
xor
sub
jle
sbb
mov
pop
add
mov
int3
push
rclb
mov
jecxz
out
fstps
leave
add
xlat
xchg
push
ds
sarb
add
mov
daa
and
mov
add
fistpl
je
add
push
or
mov
inc
pusha
lcall
mov
jbe
push
gs
loop
out
xchg
hlt
jne
add
add
add
lret
rcll
loopne
ret
stc
jnp
outsb
cs
fwait
dec
inc
ds
aaa
add
xchg
mov
xchg
sub
test
iret
loop
cld
jo
cmp
mov
add
inc
aad
sbb
inc
jno
ljmp
fwait
sbb
sub
dec
xor
mov
mov
roll
fwait
mov
push
dec
add
sub
divb
push
out
lret
xchg
dec
aad
xor
mov
and
mov
inc
mov
jl
add
xlat
or
scas
xor
mov
add
bound
sub
jns
ljmp
mov
out
test
inc
lcall
repz
push
mov
fists
add
dec
xor
xchg
rorb
test
jmp
fcmovb
pop
add
inc
add
cmp
and
pusha
add
add
inc
movsb
or
data16
pop
int3
cmp
adc
mov
aas
cmpb
xchg
sarl
xchg
xor
out
in
xchg
pop
or
xor
jp
cltd
popf
clc
mov
push
out
pop
pop
outsb
push
add
dec
jg
mov
dec
outsb
pop
movsl
and
cli
add
adc
lret
add
or
dec
les
mov
pop
mov
outsb
cmpsl
pop
add
cltd
stos
cmpsl
lret
mov
adc
or
xor
pop
psubb
add
jge
cmp
mov
xor
push
cmpsb
mov
inc
jbe
add
mov
dec
sbb
pop
mov
cltd
jae
add
adc
jns
mov
push
notl
sub
sbb
pop
cmp
add
ljmp
pop
add
jne
push
add
jbe
aam
jne
outsl
add
jae
daa
or
and
addl
dec
or
imulb
push
out
aas
pusha
aas
cltd
sbb
add
xlat
sbb
pop
int3
xor
addb
add
pop
call
xchg
movsb
insb
mov
and
inc
test
lods
add
sahf
bound
rorl
stos
out
stos
fiadds
push
int
pop
test
add
push
xchg
dec
cwtl
ss
mov
frstor
pusha
xchg
mov
pop
cmp
cmp
in
dec
cmp
mov
add
lock
cmp
or
adc
push
add
add
inc
hlt
jl
sti
push
les
fisubs
push
add
pushf
pop
int
sbb
add
sub
clc
sub
mov
jle
mov
or
xchg
or
inc
bound
and
adcb
mov
inc
pop
pop
cld
push
cmp
xchg
mov
out
xor
inc
xchg
cli
or
aad
push
xchg
or
mov
sub
aad
aas
je
sub
or
jecxz
das
imul
hlt
out
mov
outsb
push
push
or
shrl
add
push
es
push
add
incb
dec
lds
idivl
push
dec
mov
push
imul
add
add
cwtl
in
shll
nop
add
add
aas
sahf
dec
jg
add
add
add
inc
test
sub
mov
jae
adc
in
add
lea
add
add
push
lds
and
enter
fidivrl
jb
add
inc
and
and
add
cmc
inc
jg
dec
add
pop
inc
jg
add
pushf
adc
ljmp
movl
add
push
push
and
in
inc
sbb
ja
test
test
cmp
rcrb
jp
add
mov
cmp
sbb
add
xor
pop
push
aas
pushl
add
rcll
rcll
cmpsb
cmp
jle
and
out
push
pop
sbb
add
popl
sub
adc
mov
mov
xchg
add
xor
cmpsb
dec
jle
movsb
or
bt
lods
sub
outsb
adc
popf
mov
add
imul
out
push
cmp
testl
cmc
add
scas
jae
inc
cwtl
lods
cmp
xor
mov
mov
add
scas
fiaddl
daa
jae
out
add
hlt
xor
cmp
add
jg
test
fcmovnb
pop
fnstenv
outsl
out
inc
push
jl
sti
addr16
inc
mov
and
ret
fs
inc
jno
loopne
mov
jb
and
xchg
fidivs
lock
xchg
insb
add
ret
sub
sub
xor
fisubl
add
cltd
pop
or
mov
adc
faddl
xchg
sbb
dec
mov
hlt
lcall
hlt
add
add
mov
add
int
cld
xor
cmc
ja
inc
jnp
jbe
imul
xchg
lea
xlat
sub
fiadds
fwait
aas
add
jb
add
add
cli
push
mov
std
add
pop
shl
sub
xchg
sbb
mov
aad
add
jo
add
ret
jns
or
add
cld
jo
aaa
mov
bound
push
hlt
scas
add
popf
fsubrs
cmpsl
pusha
sbb
push
xchg
test
inc
outsl
add
push
mov
jmp
mov
pushl
push
sbb
pop
mov
xchg
lahf
les
pop
push
add
cwtl
add
add
iret
push
add
gs
mov
add
out
add
sti
movsl
dec
sbb
fwait
xlat
add
ljmp
dec
add
in
xchg
sar
mov
xorb
sub
jmp
popa
add
push
inc
adc
testb
out
dec
pusha
adc
int3
movsb
sti
or
sub
xchg
dec
nop
sub
adc
push
mov
test
lret
add
out
add
je
adc
inc
and
mov
fdivs
clc
shr
in
pop
cld
sub
cmp
push
pop
mov
cwtl
or
popf
mov
add
jl
inc
mov
pop
add
mov
movsl
add
sub
stos
xor
cmpsb
push
xor
stc
mov
fidivl
push
cltd
inc
xorl
lock
repnz
add
cltd
adc
dec
sub
mov
and
iret
or
and
add
mov
sub
xor
pop
cmp
add
sbb
in
sbb
pop
lods
xchg
roll
dec
sub
gs
pop
add
mov
add
lock
aad
or
fisubl
outsl
jg
jnp
xor
out
xchg
incl
cmp
add
cltd
sub
add
add
sbb
add
std
nop
insl
mov
ja
sti
mov
add
lds
inc
push
hlt
shlb
sbb
sbb
xchg
bound
in
dec
inc
xchg
inc
xlat
inc
gs
bound
scas
ret
pop
add
add
cwtl
xor
mov
add
test
fidivs
rorb
fsubrs
add
mov
int3
sub
and
in
sub
xchg
add
cmp
fildl
lcall
add
incb
cs
loopne
xor
add
add
jg
or
pushf
cwtl
inc
lret
push
cs
int3
pop
in
xchg
ret
dec
push
popf
scas
add
add
sbb
xchg
lds
clc
mov
pop
add
repnz
add
cwtl
das
jmp
jp
or
sarl
cli
cmp
or
add
cmp
push
add
test
fistl
cmp
push
mov
pop
test
cmp
gs
add
aam
int
and
push
insb
fstpt
roll
add
mov
xchg
repz
cmp
test
xchg
daa
jo
add
sub
add
into
add
xor
movsb
xchg
add
jg
add
cmp
and
cmpsb
mov
mov
or
daa
and
loopne
lret
adc
add
add
xchg
add
jns
jle
inc
and
add
mov
push
sbb
icebp
test
out
add
add
int3
in
mov
dec
sbb
or
das
sub
jge
mov
sub
clc
pop
inc
pop
xchg
iret
push
test
push
add
das
imul
dec
mov
push
sub
xor
out
dec
add
das
pop
or
xchg
xchg
add
cli
leave
aas
stc
cmp
jl
jp
ss
sub
cmc
aaa
sbb
adc
dec
mov
sub
jns
add
jmp
sbb
clc
clc
addb
ficoml
daa
clc
xor
dec
cld
pop
adc
gs
inc
std
add
mov
add
push
push
add
add
movsb
arpl
mov
cmp
add
jecxz
aaa
jg
out
movsl
mov
mov
jl
mov
add
xchg
mov
jge
jbe
jno
add
xchg
shrl
add
add
adc
es
popl
inc
imul
scas
sti
add
cmp
pop
daa
add
dec
cmpsb
aam
pop
ds
push
rcll
outsb
jno
dec
and
mov
daa
inc
js
int
sub
enter
pop
mov
push
jecxz
or
das
add
shll
int
push
push
repz
lods
aas
daa
and
out
pop
mov
dec
jnp
adc
or
add
xor
adc
jg
cld
pusha
add
js
testb
cmp
in
xchg
std
stc
insb
ret
test
mov
sub
popa
add
mov
lahf
mov
cmp
add
outsb
mov
add
adc
pop
mov
xchg
ret
mov
out
add
es
jno
fs
push
sahf
or
inc
sar
or
sbb
mov
add
xchg
add
scas
rcr
add
sub
pop
cli
and
or
mov
ficoms
jo
jnp
adc
cmpsl
int
jle
repnz
iret
mov
outsb
fldcw
xchg
lret
inc
add
addr16
das
lock
push
mov
mov
jecxz
pop
sti
fildl
add
aam
iret
cmp
and
loope
jnp
jl
pop
loope
add
push
aad
push
dec
add
lods
push
insl
cmp
xchg
jne
mov
xor
mov
xchg
xchg
add
add
or
pop
inc
add
add
stos
push
ljmp
xlat
mov
mov
add
lahf
add
dec
and
mov
mov
addb
add
sbb
icebp
popa
popa
add
popa
sub
cmp
aaa
mov
and
add
push
fbld
pop
cmp
stos
add
out
les
and
inc
inc
mov
shll
out
lret
xchg
clc
pop
movsb
inc
jb
ds
add
hlt
rclb
iret
dec
std
add
inc
arpl
repnz
push
movb
or
cld
imul
loop
outsl
mov
into
dec
add
out
mov
mov
cmc
or
xor
and
addb
add
loopne
lret
or
add
pop
push
scas
addr16
pop
inc
insl
xchg
in
push
pop
dec
sbb
movsl
lahf
rclb
inc
inc
push
xchg
shll
popf
lock
fdivrs
push
add
sub
mov
add
add
sbb
js
arpl
es
xchg
or
fsubrs
cmp
insb
push
push
mov
and
push
dec
add
inc
mov
adc
push
add
lods
and
aad
add
gs
add
pop
das
das
adc
repnz
stc
sbb
aam
push
notl
shlw
xor
mov
fwait
loopne
mov
cmpsb
or
sarl
add
fidivrl
or
add
mov
add
adc
dec
xchg
addr16
mov
loope
stos
std
lock
mov
adc
inc
lcall
shrb
je
nop
xor
and
out
loop
pop
sbbl
mov
repnz
jmp
add
jge
push
je
addr16
pop
add
push
push
popf
sbb
or
xor
xchg
les
lret
sbb
flds
and
popa
add
ror
ss
repnz
dec
aad
cmp
push
movsb
lcall
sarl
popa
mov
out
push
ret
jl
lods
and
sahf
mov
pop
xlat
loopne
outsl
inc
jno
jae
push
or
push
fsubr
out
aam
pusha
xor
add
stos
push
dec
mov
xor
in
adc
dec
ljmp
pop
scas
in
add
sti
stc
mov
add
inc
outsb
nop
test
fimuls
add
loopne
cld
shrb
add
stos
stos
add
movsb
xchg
pusha
dec
push
sbb
push
clc
mov
mov
pusha
je
push
jmp
lcall
out
add
pop
fidivrs
cmpb
add
mov
sbb
sbb
xlat
lods
nop
ds
bound
pop
lret
dec
xor
gs
add
sub
xchg
loope
sub
and
cmp
or
or
mov
imul
xor
stos
lock
jns
aad
push
adc
cmp
or
lods
and
mov
xor
add
ret
in
je
pop
add
jle
xchg
mov
bound
lods
mov
aaa
popa
add
jo
in
dec
push
call
test
data16
xchg
pop
ret
shlb
mov
mov
or
cmp
xchg
cmpsl
loop
in
sahf
hlt
mov
sub
sbbb
movsl
roll
enter
aad
add
lahf
dec
cld
jae
fldcw
or
jnp
enter
add
ds
jmp
jg
sub
jl
jno
mov
sub
out
iret
mov
push
cmp
cmpsl
in
mov
hlt
jp
or
adc
push
pushf
or
icebp
dec
mov
adc
aad
sub
ljmp
mov
lods
fisttps
add
push
add
add
jae
sub
in
add
pop
out
push
pusha
loop
jl
ret
sbb
ret
pop
enter
push
or
sbb
aam
cmp
or
ja
dec
outsl
add
add
add
rolb
sub
add
add
or
dec
gs
add
mov
push
add
jb
mov
andb
out
mov
xchg
mov
dec
push
filds
dec
inc
cli
filds
outsl
add
data16
pop
aas
cmp
jbe
mov
pop
into
add
xor
or
add
cli
push
jo
jae
add
jle
sbb
test
jnp
cmp
int3
adc
cmpsb
inc
pop
mov
add
fdivr
adc
dec
cmp
xor
out
nop
pop
inc
xor
fmuls
mov
xchg
jne
cmp
sbb
jne
rclb
rcrl
pop
in
lcall
stos
cmp
int
mov
add
loope
ds
inc
jbe
inc
dec
add
pusha
stos
inc
xor
fdivrl
push
mov
add
cmpsl
sub
fwait
pushf
add
lods
int
xor
or
add
push
pop
sbb
js
mov
and
push
mov
jmp
add
cld
mov
fisttpll
mov
fisttpl
add
inc
divb
lret
jb
sub
add
pop
flds
mov
loopne,pt
add
icebp
push
sub
mov
push
ret
push
adc
sbb
add
fsubs
pop
aaa
mov
dec
out
dec
sbb
rolb
pop
cwtl
pushf
add
loop
xor
std
je
cmpsl
adc
sub
das
mov
add
inc
jecxz
bound
ja
divl
jmp
jb
cmp
ror
xchg
movl
add
add
add
es
and
pop
scas
repnz
scas
notl
or
ljmp
jb
fwait
movb
les
sahf
imul
aam
out
js
jge
fiaddl
call
ja
mov
or
lea
push
in
pop
mov
dec
jbe
stos
jb,pn
mov
mov
andb
add
mov
lahf
sahf
imul
aaa
sbb
divb
jge
rolb
add
add
gs
popf
fistpll
out
dec
in
mov
fwait
jo
sub
shlb
fwait
add
add
rcrl
addb
in
push
int3
dec
xchg
cltd
or
adc
fs
xor
aas
sbb
out
cmp
imul
xor
mov
mov
jnp
add
std
clc
add
jo
out
jo
mov
add
lret
xchg
pop
pop
scas
add
add
cmp
popf
mov
mov
ljmp
xlat
lret
xor
xor
xchg
ss
lock
mov
aam
add
adc
jno
fimuls
icebp
add
inc
xchg
adc
adc
sub
scas
and
pshufw
inc
xor
add
je
add
sbb
movhps
icebp
add
add
aad
cmp
test
add
sbb
je
stos
incb
cmpsl
and
data16
dec
movsb
sub
sbb
jb
pop
add
pushf
jl
push
add
mov
mov
cld
lods
add
mov
push
add
add
add
mov
mov
xlat
sub
cmp
sbb
add
jg
sbb
iret
mov
add
add
push
jb
and
lcall
xor
push
stos
add
mov
cld
xor
cwtl
outsl
add
loope
and
popf
mov
adc
pop
add
add
mov
or
push
cmp
fcoms
cmp
lret
cmp
push
add
shll
insl
xchg
or
jecxz
add
jge
sbb
les
lods
sbb
in
sbb
add
mov
push
out
dec
pop
push
xchg
push
pop
testb
ret
lods
jp
sub
and
pop
add
cmp
sarb
pop
std
dec
jbe
clc
shrb
imul
das
std
xchg
data16
or
xor
clc
mov
sbb
jp
push
inc
out
pop
int
repz
out
dec
aas
pop
add
add
bound
test
add
jl
addr16
xor
xchg
add
idivb
add
pop
add
je
addl
inc
add
roll
stc
ljmp
jns
stos
xor
pop
push
add
fistps
test
cmpsb
push
mov
dec
fiaddl
mov
sub
imul
movsb
out
inc
nop
xor
cmp
xor
add
push
adc
loopne
adc
sbb
lods
mov
lea
push
daa
add
jae
mov
aas
push
dec
cmpsl
jo
or
mov
or
xlat
arpl
push
add
add
mov
push
add
xchg
dec
mov
mov
adc
imul
sbb
mov
mov
mov
test
sbb
scas
adc
scas
jg
push
cmp
jmp
mov
cltd
int3
dec
add
cmp
mov
repz
lret
dec
rcl
filds
or
int
daa
xor
stos
add
jno
ficomps
mov
mov
xchg
in
cmp
add
das
jns
xchg
inc
inc
mov
jl
inc
jecxz
ja
sbb
add
shll
sub
stc
pushf
add
sahf
add
sub
cmpsw
jl
add
mov
add
pop
dec
xchg
shrl
insb
xchg
push
mov
add
push
les
mov
add
rolb
adc
rorl
mov
imul
loop
pusha
gs
dec
sarl
push
add
flds
add
mov
mov
or
les
cmc
mov
inc
sub
pop
orb
sub
fldl
add
fsubrs
xlat
or
imul
dec
jns
cmpsb
mov
movsb
stos
fs
rcll
insb
mov
xchg
popf
shrb
add
adc
das
popa
aaa
dec
int
mov
aaa
add
and
push
stos
psrld
sub
pusha
mov
ret
xor
add
or
les
mov
pop
loopne
add
inc
inc
add
push
push
push
es
div
stos
cmp
xchg
add
mov
sbb
mov
inc
add
loopne
inc
push
movsl
dec
mov
lock
adc
jno
jmp
dec
push
and
lea
xor
add
adc
add
jp
mov
mov
xlat
add
add
outsl
clc
fildl
add
or
shll
add
mov
add
inc
lcall
add
sub
add
add
lods
inc
add
add
arpl
mov
cmp
roll
ss
mov
and
outsl
mov
ss
inc
ret
or
and
mov
jmp
in
lret
ret
mov
outsb
add
mov
ss
and
adc
inc
xchg
add
sbb
cltd
sub
add
inc
sub
add
lret
add
jl
jmp
jle
sbb
xchg
popf
mov
and
pop
ljmp
add
aas
or
mov
insb
je
icebp
xchg
xor
cli
std
mov
enter
std
test
mov
repz
mov
lods
sub
and
incb
xor
xchg
mov
mov
stc
jnp
jle
dec
insl
mov
or
sbb
cli
cmp
jge
imul
xchg
jns
test
mov
and
repnz
and
add
cmp
push
pop
mov
sahf
int3
push
add
lea
add
mov
out
add
add
or
in
and
aam
pop
add
outsb
add
fisttpl
jge
out
add
movsb
jge
adc
inc
add
xchg
arpl
aad
outsb
out
frstor
sub
add
ret
lahf
hlt
aas
stos
lea
add
pop
in
cmp
inc
movsb
sti
push
add
nop
dec
out
cmp
mov
add
bound
add
add
enter
shrb
roll
adc
push
repnz
into
adc
stc
add
jnp
add
repnz
stos
bound
out
push
cmp
add
or
mov
cmp
int3
fldt
hlt
mov
mov
fistpl
cli
add
es
xor
push
add
xor
xchg
add
cmp
push
add
ja
js
sub
rcl
aaa
mov
lds
out
add
out
sahf
jne
push
xor
fcmovb
mov
sub
inc
setns
inc
inc
add
add
lods
sbb
stos
push
cmc
subl
dec
add
fldl
or
test
dec
inc
cmp
add
xor
dec
xor
mov
jns
notb
mov
mov
pop
push
ret
jbe
fbstp
and
out
cmpsb
mov
adc
push
in
mov
pop
sbb
cmpsl
push
pop
insl
out
add
pop
mov
mov
sub
jo
cmpsb
sahf
cld
gs
sub
adc
mov
xor
fdiv
jg
icebp
inc
nop
xor
push
add
mov
ja
dec
xchg
ss
loopne
or
add
stos
add
fidivl
sub
dec
cmp
xchg
inc
add
out
negb
cli
lahf
xchg
mov
jb
push
add
pushl
mov
sub
mov
test
add
js
add
push
arpl
push
or
add
add
sub
add
shl
push
pusha
sahf
add
call
jg
lds
cmpsb
pop
add
ss
dec
mov
int
test
lods
test
add
mov
imull
ds
add
cmpsl
or
cwtl
jno
loopne
adc
add
aaa
out
loopne
lods
and
cmp
adc
out
dec
rorl
add
loopne
jbe
add
out
push
fcomp
mov
js
insb
and
punpcklbw
cmp
or
cltd
mov
mov
es
in
int3
stos
test
push
aam
add
shlb
mov
xchg
pop
add
sub
fadds
sbb
sbb
gs
addl
dec
add
test
mov
aas
jae
sbb
and
mov
outsl
jmp
lret
mov
lahf
inc
xchg
xchg
cmp
jns
out
bound
fsubrs
jne
in
outsl
cmp
cwtl
push
xor
pop
pusha
sub
cwtl
notl
sub
subl
or
jno
pop
das
ljmp
es
shll
mov
inc
xchg
je
ror
sub
push
add
mov
or
add
adc
ljmp
and
adc
pop
shrb
push
cmp
push
push
sbb
jno
shlb
repz
push
xchg
xchg
push
pop
leave
imul
dec
hlt
jne
add
sub
cmp
sub
adc
xor
mov
dec
push
push
xor
add
add
add
rcr
or
push
add
aas
cmc
sbb
xchg
add
neg
mov
lock
int3
pop
xlat
repz
test
lret
mov
mov
out
out
push
ljmp
inc
jl
aam
ljmp
mov
xchg
adc
int3
and
movb
test
lds
jmp
push
jmp
push
es
add
adc
scas
add
jle
xchg
add
dec
and
icebp
mov
and
popa
pop
pusha
stos
insb
add
mov
repz
xchg
cmp
test
pop
mov
stos
jbe
push
stos
push
cmpsb
and
add
int
mov
mov
inc
sub
xchg
add
xor
add
je
fstpl
pop
sub
mov
adc
jno
xchg
iret
arpl
cmc
xor
jle
je
mov
push
int3
add
xor
sbb
or
ret
push
mov
stos
adc
add
popa
mov
xchg
fwait
jl
cmp
push
fiaddl
inc
daa
std
add
sub
push
pop
dec
add
mov
cmp
mov
les
xor
lret
mov
mov
out
add
jb
cmp
add
loopne
fcoml
and
xor
cwtl
mov
jle
leave
add
push
cs
lret
fiaddl
mov
clc
mov
mov
lret
add
cmp
fisubs
test
push
add
push
sub
or
mov
lock
xchg
xchg
sub
or
add
in
je
sub
out
addb
test
test
mov
jp
cmp
and
lret
mov
aaa
and
add
jb
fistl
popf
jbe
adc
and
pop
mov
push
add
mov
xchg
add
les
incb
add
mov
inc
pop
add
into
mov
incl
jbe
popf
ljmp
sbb
push
xor
mov
stc
add
jp
add
frndint
bound
nop
xchg
je
inc
xchg
ret
and
outsl
xchg
mov
push
test
add
aad
and
arpl
imul
xchg
push
pop
add
mov
jb
xchg
xor
add
in
popa
rol
add
nop
add
add
in
popf
call
sbb
cmp
add
add
lods
mov
fistl
and
mov
add
push
outsb
jle
das
add
mov
xor
cmc
fildl
ljmp
pop
mov
mov
add
sbb
dec
lret
push
sub
das
sub
inc
cmp
enter
adc
cmp
pushf
sar
add
aam
test
iret
jo
mov
add
add
jne
rcl
lds
adc
insl
rcrl
sub
fs
push
xchg
mov
mov
push
push
stos
add
and
cmpsl
mov
pop
add
icebp
mov
lret
mov
nop
xchg
or
sub
fnstsw
dec
jge
add
add
jle
add
in
add
test
pop
add
xchg
mov
sub
hlt
mov
roll
cltd
ltr
adc
adc
xor
test
pop
add
jp
sbb
pop
shll
pop
cmp
je
jb
imul
push
push
mov
ficomps
scas
sub
dec
jge
call
adc
jne
xchg
into
jp
pop
push
inc
lret
imul
sbb
push
enter
mov
pop
out
insl
inc
mov
dec
and
ds
fwait
jb
pop
xchg
imul
into
push
test
int
cs
das
jg
push
mov
popa
adc
cmp
adc
cmp
std
add
cld
dec
lea
xor
cmp
xchg
popf
sbb
xor
lds
iret
add
fldcw
clc
fldl
les
rorl
pop
sahf
mov
dec
add
mov
xlat
leave
lods
jae
js
add
das
add
add
mov
mov
mov
jne
adc
xchg
fisubs
cwtl
add
stos
pop
bound
jo
or
and
xor
xor
insl
icebp
adc
insl
cltd
add
add
add
out
push
add
pushf
aad
sbb
dec
push
adc
xchg
in
xchg
test
push
inc
pop
out
ret
fnop
shlb
add
add
aaa
into
or
decl
shll
lods
mov
adc
outsb
xchg
insb
add
lret
inc
sub
adc
shlb
mov
int
mov
in
jns
add
add
add
add
mov
je
clc
in
daa
xchg
js
es
inc
hlt
or
push
mov
imul
or
mov
out
mov
hlt
fsubl
add
cmc
pop
addl
pop
test
ret
or
test
pushf
pop
inc
cltd
jbe
dec
jle
add
mov
fldcw
inc
in
stos
sub
std
xchg
fdivrl
mov
or
sub
pusha
outsl
clc
add
add
push
xchg
add
mov
negb
mov
fistpll
cli
sub
pop
adc
out
add
fisttps
movswl
hlt
sub
mov
test
jecxz
add
adc
out
leave
std
cltd
add
xchg
dec
add
xor
sbb
add
pop
outsb
fisubs
cmp
cwtl
xchg
in
mov
add
cmp
aaa
or
aaa
mov
jns
sbb
add
pop
mov
add
iret
add
pop
rcr
mov
mov
adc
call
xlat
pop
sub
icebp
jl
push
sarl
dec
insb
inc
sbb
scas
xor
idivb
repz
les
aas
addb
add
mov
cltd
pusha
jmp
jmp
incb
popl
mov
sbb
sbb
mov
xchg
popa
add
xor
ficoml
jle
es
addb
insl
pop
xor
inc
sbb
mov
in
sbb
mov
inc
out
and
xchg
das
pop
mov
lock
lods
gs
fnstsw
adc
test
lods
fisubrs
add
insl
cmp
rclb
scas
call
sub
xorb
dec
add
xor
lods
add
cld
mov
in
out
add
pop
adc
and
lret
sub
jo
stc
add
rcll
cltd
imul
mov
and
enter
xor
cmp
add
push
sbb
enter
inc
jnp
pop
es
call
hlt
push
pop
sub
mov
lret
add
out
sub
adcl
scas
and
test
and
add
hlt
inc
add
mov
and
fisubs
cmpsb
fildl
js
cmc
add
js
sbb
test
sub
icebp
insl
sub
cli
add
inc
gs
notb
jmp
xor
rcr
mov
xor
pop
and
pop
in
cltd
and
mov
mov
cmp
mov
repnz
jmp
xchg
mov
add
adc
xchg
roll
sub
mov
adc
les
push
or
lds
sub
faddl
cli
add
add
add
mov
jle
add
add
add
divb
mov
ljmp
adcb
add
leave
add
sbb
pop
pop
push
fdiv
add
mov
js
movsl
loopne
xor
add
xor
jp
xor
movsl
jns
mov
pop
out
sahf
add
lret
aaa
jbe
rorb
dec
mov
xor
jecxz
adc
repnz
ds
add
push
add
push
add
pause
stos
or
mov
mov
add
inc
stos
xlat
fs
jnp
fwait
inc
cwtl
ja
mov
mulb
aad
add
mov
push
shld
add
test
sbb
mov
or
ljmp
cmpsb
add
or
add
jecxz
lret
mov
sub
stc
sbb
jmp
xchg
pop
pop
xor
movsb
outsb
sahf
rcr
pop
pop
add
lahf
pop
push
popa
inc
subb
add
add
add
imul
add
xor
stos
add
mov
pop
xchg
gs
sub
jb
outsl
push
add
data16
mov
jns
xor
or
pop
in
cmp
mov
dec
sub
add
add
mov
add
add
inc
sti
sbb
mov
add
push
adc
adc
jl
or
std
fiaddl
sbb
push
rcrl
push
mov
psadbw
xor
pop
or
cli
dec
mov
mov
xchg
sbb
ljmp
or
dec
xor
loop
sub
jmp
push
cltd
pop
out
mov
fsubrl
xlat
inc
nop
divl
fwait
out
pop
xor
mov
ret
xchg
leave
xchg
add
xlat
add
add
fs
stos
cmp
xor
adc
sub
aas
loope
xchg
outsl
lcall
cmp
push
lret
jno
lret
sub
mov
adc
clc
cwtl
add
add
xor
popa
iret
pop
inc
imul
xor
imul
rorl
mov
out
push
add
add
pop
xchg
iret
jge
add
add
add
cmc
fucomi
add
add
cwtl
mov
push
add
cs
or
adc
add
lret
push
add
jge
add
inc
add
shl
aad
mulb
add
add
add
int3
and
arpl
or
and
add
sbb
lahf
add
add
push
or
test
aaa
lahf
dec
jp
les
insl
add
cmp
pop
cltd
add
pop
mov
adc
ss
iret
loopne
push
lcall
cmpsl
xchg
loop
add
imul
and
sarl
outsl
test
std
add
jmp
adc
out
xchg
test
popf
cmpsl
xor
popa
sbb
mov
ja
cmp
cld
loope
hlt
dec
push
xchg
movsl
push
cmpsb
dec
sub
aad
rorb
adc
mov
cltd
cs
dec
pop
insb
push
push
inc
ret
leave
push
dec
sub
or
xchg
cwtl
add
cmpsl
clc
cmp
mov
dec
arpl
inc
add
pop
sahf
scas
mov
inc
cmp
stc
add
scas
or
clc
sub
fs
icebp
aas
mov
sub
out
testb
push
cmp
fs
pop
out
sbb
add
fdivs
add
shl
add
and
mov
add
or
add
cmp
addr16
cmp
cmp
dec
ljmp
scas
loop
aad
mov
scas
xorl
add
push
rolb
fstpl
cmp
insl
repnz
shrb
movsb
pop
subb
or
stos
cmp
or
cmc
cld
add
loop
outsl
add
mov
push
mov
lcall
icebp
outsb
mov
xchg
cs
add
sub
fnstenv
adc
scas
scas
scas
movsb
imul
shll
popa
add
fndisi(8087
int
xchg
dec
outsl
bound
mov
rorb
mov
out
fsincos
add
hlt
enter
aam
loop
and
add
insb
cmp
notl
jmp
pop
repnz
cmpsl
popf
jb
inc
setp
push
and
in
movsl
and
add
add
or
push
cmc
add
dec
addr16
add
xchg
jnp
inc
inc
add
scas
test
cmp
and
push
fs
hlt
add
jp
add
sbb
add
pop
ss
int3
add
pushl
or
movsb
adc
mov
add
add
push
cli
xchg
sbb
xchg
clc
je
jl
lahf
cmp
or
cs
lods
jbe
or
dec
mov
movsb
inc
and
test
mov
jg
out
sbb
xchg
cmpsl
add
mov
or
add
dec
mov
mov
bound
sbb
negl
and
or
scas
fisubrs
jge
sahf
dec
lahf
add
aas
pop
fiaddl
call
add
add
mov
loop
es
fwait
inc
rolb
sub
mov
mov
aaa
fisubl
push
ds
jne
js
mov
fimull
adc
fwait
in
pop
mov
fsubrl
clc
add
int3
jae
or
shl
js
jmp
or
std
loope
pop
add
lods
std
add
das
fwait
pop
mov
and
test
xor
xchg
mov
imul
lods
in
insb
movsb
add
mov
je
or
add
into
adc
pop
inc
mov
cmpsl
xchg
sbb
mov
mov
es
iret
int3
test
adc
push
mov
lret
add
push
xchg
dec
push
dec
mov
or
cld
xchg
loopne
dec
xor
fadds
jae
or
mov
movsl
mov
push
cld
adc
aaa
adc
mov
std
cmp
inc
inc
leave
cmpsb
hlt
jbe
cmp
mov
nop
mov
xor
scas
mov
jge
jo
cmp
add
dec
hlt
add
adc
or
adcb
add
and
add
outsb
pop
movsb
fisttps
add
loop
add
roll
sbb
and
add
das
filds
push
cmp
add
daa
pop
or
or
cmpsl
in
iret
aam
add
aas
lcall
fnsave
xchg
pop
pop
into
or
and
or
popa
xor
push
lods
imulb
fisubl
in
dec
adc
inc
popa
fldl
lret
arpl
mov
mov
push
cmp
or
insl
stc
add
add
inc
sarl
mov
cmp
inc
mov
gs
cwtl
std
inc
xor
dec
lret
sti
jmp
lret
jno
jmp
in
fcomip
dec
testb
shlb
pop
push
insb
mov
add
cmp
clc
add
mov
mov
les
and
int3
mov
test
scas
dec
rorl
imul
sbb
jle
insb
mov
pop
sub
push
jnp
sub
xor
add
mov
cmp
inc
movsb
sti
mov
testw
pusha
add
inc
push
push
and
mov
push
add
add
adc
lcall
push
mov
mov
mov
ret
cmp
gs
jge
in
jg
add
imul
xchg
lahf
out
imul
push
mov
cmp
add
add
scas
add
jns
mov
rolb
das
testb
jge
cltd
cli
les
pop
or
add
adc
add
bound
cmp
shlb
add
aaa
lods
dec
test
dec
popa
cltd
mov
iret
jae
push
xor
ja
xchg
fs
ret
adc
mov
lods
test
dec
add
xlat
dec
add
dec
rcll
add
std
jne
lock
mov
rcrb
rolb
mov
sbb
shll
pusha
xchg
xor
mov
add
xlat
add
mov
dec
jb
sub
ss
repz
stos
or
or
adc
mov
add
inc
js
pop
sbb
lret
arpl
push
push
add
sub
add
or
dec
aam
out
add
jb
cmp
rclb
pop
add
xor
in
push
cmp
leave
movl
and
cmp
push
lea
mov
mov
cmovns
cmpsl
loop
jbe
pop
or
movsl
out
insl
mul
imull
push
stos
pushf
cmp
data16
push
jl
fldenv
pushl
lea
ficomps
add
icebp
cmp
pop
cmpsb
push
lock
xchg
mov
sub
aas
das
out
inc
add
aam
sti
subb
shrl
and
into
push
xchg
xchg
stos
adc
pop
mov
movsl
dec
dec
and
push
mov
push
shl
xor
lahf
fisubl
lahf
lods
stos
outsb
dec
push
pop
sbb
movsl
sub
arpl
cmp
jge
inc
loop
outsl
imul
jb
testb
add
xor
lds
loop
enter
movsl
add
sub
xor
adc
testb
incl
add
lret
cmp
add
ss
cld
ljmp
aad
mov
mov
pop
mov
pop
addr16
cmp
mov
cmp
inc
lods
lahf
xchg
imul
mov
add
in
add
sub
adcb
pop
xor
imul
aad
dec
add
xor
add
add
pop
fs
jne
testb
and
into
stos
add
inc
or
shll
push
mov
mov
enter
cmp
cmp
and
cmpsl
or
ljmp
pop
push
jno
addb
add
xchg
add
add
das
pop
hlt
lods
mov
enter
enter
xchg
cwtl
in
mov
adc
xchg
mov
xchg
int3
enter
outsb
inc
jle
mov
roll
outsb
mull
rcll
sub
insl
je
imul
mov
sahf
jle
mov
sub
ljmp
mov
adc
push
mov
inc
mov
sub
adc
or
or
rorl
add
pop
movsb
pushf
data16
add
sbb
fmul
add
into
cmp
push
lods
dec
imul
incw
xchg
dec
jge
lret
scas
mov
and
adc
imul
lds
incb
add
popf
movsl
xchg
pop
mov
jae
rclb
add
lret
xchg
mov
pop
pop
scas
sbb
sahf
sbb
pop
pusha
nop
mov
imul
push
dec
call
shlb
sub
loopne
stos
std
sti
push
dec
and
clc
mov
adc
inc
mov
xchg
or
jmp
adc
xchg
ds
xchg
fstpt
inc
sub
fsubrs
add
mov
in
jno
lock
dec
pop
push
nop
leave
cmp
push
pop
fsts
clc
add
std
movsb
repz
fwait
add
add
in
icebp
add
add
add
add
inc
adc
loop
add
out
sbb
sub
data16
inc
xchg
pop
add
cmc
repz
xor
xchg
xchg
add
add
movl
add
fldt
add
jnp
mov
stc
cmpsb
fsubl
jb
imul
arpl
sub
jl
int
jle
push
xchg
add
das
add
add
lods
mov
adc
push
push
jge
inc
pop
add
dec
fidivs
mov
adc
cmp
call
pop
into
iret
mov
jo
dec
jmp
sub
cmp
sub
jmp
dec
icebp
shrl
addr16
gs
jl
lock
sbb
add
out
cld
add
xchg
jecxz
mov
addr16
mov
xchg
mov
or
out
or
out
ret
mov
js
add
mov
add
mov
adc
add
jge
push
jg
dec
xor
jb
cmp
xor
add
push
and
add
movsb
addb
sub
daa
pop
lock
mov
movsl
lcall
das
cmp
jne
rcrl
imul
or
xlat
jp
movsl
ret
pop
or
add
dec
xor
push
mov
repz
adcb
add
test
add
sub
xchg
pop
std
repnz
dec
fistpll
faddl
jmp
cmp
ja
add
add
add
movsb
xchg
into
repz
les
loop
cmpsb
adc
jo
xor
pop
add
add
cli
add
add
sub
and
sti
add
adc
add
dec
movsb
add
rcrb
je
and
imul
rclb
leave
mov
test
sub
mov
add
pop
stc
lahf
filds
add
into
outsl
out
cmp
popf
xor
inc
push
in
inc
xchg
imul
pop
imul
jmp
mov
push
add
pop
push
push
add
xor
ret
or
dec
dec
es
cmp
cltd
imul
jle
push
pop
adc
bound
push
je
jbe
jne
xchg
add
jecxz
sbb
xor
mov
and
xchg
test
ret
dec
add
lret
es
pop
push
add
jmp
jne
les
add
test
mov
lahf
data16
aaa
hlt
int3
fsub
add
aas
int3
mov
jg
lock
add
jge
and
pop
sbb
mov
pop
and
dec
ljmp
fwait
adcl
pop
pop
loop
or
leave
or
std
je
pop
loop
lahf
add
add
push
cli
and
sub
inc
unpcklps
dec
rcrl
scas
add
movsl
xor
pop
lret
jae
fldenv
xor
pop
jle
aaa
add
sbb
add
add
cmpsb
inc
pop
inc
dec
testl
lahf
or
mov
mov
pop
enter
xchg
add
mov
out
inc
je
mov
xor
daa
mov
push
push
cmp
gs
dec
xchg
sarl
lret
idivb
cli
test
daa
das
and
add
push
sti
xlat
and
bound
add
add
add
add
add
clc
add
mov
movsb
pop
cmovp
push
xor
dec
loopne
mov
jl
cmp
add
mov
mov
add
pop
imul
out
push
sbb
dec
push
and
stos
out
push
jle
add
jecxz
add
pop
push
and
add
fsub
push
pushf
lret
out
mov
decl
add
das
pop
add
add
stos
ret
sbb
mov
or
mov
lds
shll
rcr
jp
sti
cmp
or
xchg
sub
cmpsb
in
jnp
lret
scas
fs
jmp
mov
mov
push
xchg
sbb
mov
add
and
movl
mov
add
int
mov
in
stos
mov
lret
mov
xchg
add
sti
mov
fbstp
arpl
insb
inc
add
sar
sub
push
out
jnp
xlat
pop
int
fwait
xor
sarl
push
fs
cltd
add
jbe
pop
jne
ja
adc
inc
popf
push
add
push
negl
roll
sbb
filds
inc
rcl
in
call
cmp
nop
xchg
dec
add
aad
push
cmpsl
shlb
inc
les
dec
mov
jge
add
outsb
add
sbb
inc
ljmp
adc
jb
dec
xor
lahf
sbb
mov
lret
xor
add
in
pop
push
mov
repz
inc
sbb
lock
roll
cmp
inc
roll
jmp
imul
aad
dec
repz
mov
fs
dec
xchg
xchg
cmpsb
bound
xchg
cmc
insb
push
jp
mov
xchg
mov
out
mov
inc
rcr
cmpsl
adc
pop
stos
add
loop
lahf
xor
mov
idivb
xorl
pop
mov
enter
push
dec
add
xchg
dec
cmp
loope
add
add
add
aas
and
xor
mov
add
jb
clc
mov
pop
inc
sub
inc
nop
push
pop
outsb
insb
out
add
inc
roll
cli
add
loope
rclb
cli
add
loopne
dec
add
push
push
lea
dec
add
add
out
fcomip
cs
sbb
push
add
lahf
xchg
xor
push
mov
pop
fdiv
or
dec
mov
add
sahf
out
inc
nop
gs
adcl
in
add
cltd
lcall
lods
in
je
jg
scas
sub
inc
xchg
test
popa
fidivl
sahf
inc
mov
mov
add
scas
jp
sti
add
call
jmp
and
in
call
add
add
adc
icebp
in
gs
mov
add
push
adc
sub
cld
add
notb
test
add
add
ljmp
shrl
movsb
adc
add
dec
jne
and
in
les
push
insb
sub
cmpsl
ret
or
test
lcall
add
inc
xor
cmp
pop
sbb
jge
dec
mov
adc
push
lds
jae
shll
sahf
mov
sub
loope
jno
imul
lods
loope
sub
dec
dec
or
movsb
xlat
adc
pop
call
add
push
in
adc
add
mov
enter
and
stos
dec
outsb
push
je
jp
shrl
lods
add
scas
add
mov
cmc
add
lds
sbb
or
out
xorl
jno
pop
push
aam
adc
sbb
mov
pop
mov
dec
mov
loope
mov
int
enter
add
rorb
sbbb
mov
add
pusha
push
mov
popf
inc
icebp
xchg
fstl
lahf
lret
mov
addr16
add
and
cmp
pop
jg
push
cmpsb
add
daa
fbstp
aaa
fisttpl
aad
out
test
sub
cmp
inc
imul
movsb
xchg
inc
mov
mov
jl
jle
mov
add
arpl
ljmp
sbb
lods
insb
jae
jb
std
sub
sub
add
stc
je
and
and
jmp
add
out
dec
jl
sub
rolb
clc
aam
lahf
je
iret
mov
mov
dec
enter
push
test
dec
sub
and
add
cmp
jne
int
movsb
xchg
inc
add
dec
popa
pop
pop
xor
sub
adc
push
popl
mov
xor
mov
jp
sbbl
push
inc
leave
cmp
call
repz
add
xor
pop
je
data16
add
shr
stos
pop
lret
arpl
mov
add
mov
sahf
in
push
add
stos
test
repnz
add
cli
inc
xchg
add
push
mov
jecxz
fiaddl
and
sbbb
sahf
lcall
fnstcw
xchg
and
fsub
mov
xchg
and
add
inc
push
lcall
rolb
push
pop
movsb
gs
add
add
mov
dec
clc
dec
push
pop
push
ds
pop
jns
push
jle
pop
jo
add
das
fisubrl
cltd
push
add
sbb
mov
ds
mov
pop
add
jo
cmpsb
add
fmul
movsl
mov
mov
lcall
jg
push
push
push
aam
mov
jns
mov
pop
xchg
pop
fdivrs
mov
xor
push
call
add
add
add
mov
test
add
incl
add
pop
lcall
push
cmp
data16
repz
mov
lods
add
aad
inc
orb
mov
push
inc
and
sbb
sbb
inc
jmp
test
aas
push
stc
pop
aas
dec
inc
outsb
and
std
pop
dec
adc
add
pop
data16
push
repnz
push
xchg
out
int3
gs
outsb
xchg
loop
adc
ljmp
pop
dec
lea
shll
enter
push
mov
mov
pusha
jb
in
into
mov
mov
and
mov
xchg
dec
popa
in
call
xchg
jb
jg
cmpsb
fwait
movb
ja
pushf
mov
mov
shrl
xchg
fildll
pop
cld
movsb
cmp
or
or
fsubr
arpl
pop
sbb
sub
jge
push
xchg
aam
inc
add
adc
rorl
mov
add
bound
int
in
push
ja
stc
add
ss
or
push
pop
dec
mov
adc
xor
repz
add
call
mov
out
jo
ror
xchg
in
rorb
imul
aad
dec
enter
push
inc
scas
adc
sbb
pop
sbb
lea
arpl
add
jecxz
xlat
aas
inc
add
xchg
filds
out
jno
ficompl
add
std
mov
scas
jno
addr16
cmc
push
add
or
in
jne
or
inc
mov
lcall
cld
clc
or
xchg
and
lods
in
add
sahf
test
sbb
movsl
test
mov
leave
data16
mov
popf
xchg
shrb
outsb
test
xchg
add
jno
mov
pop
cli
inc
or
jp
repz
clc
pop
xor
inc
pushf
add
ret
psrad
xchg
mov
and
popl
std
adc
push
pop
add
sub
nop
push
or
add
sbb
or
push
aad
adc
mov
lds
xchg
cmp
test
loope
fiadds
lds
ja
popa
add
out
pop
mov
dec
int
cmp
adc
cli
xor
fnstenv
idivb
loop
push
dec
xor
xchg
dec
mov
inc
add
add
add
xor
aaa
and
cwtl
sbb
push
dec
and
dec
inc
sub
xchg
and
mov
push
add
xor
sub
addl
mov
dec
push
dec
daa
jg
test
jo
fs
inc
shll
mov
inc
add
rolw
mov
repnz
and
pusha
cmp
test
dec
clc
xchg
cli
push
into
xor
dec
add
iret
rolb
pop
add
adc
adc
int
jb
hlt
imul
stc
adc
mov
in
push
or
add
mov
add
movsb
add
add
jbe
dec
stos
jno
leave
mov
sbb
push
jae
add
add
dec
push
jb
push
xlat
out
cmp
rolb
jge
stos
aas
lret
insl
shl
pop
add
addb
andb
lret
verr
add
dec
sti
xchg
sub
pop
push
adc
xor
mov
add
inc
add
jne
or
push
add
push
and
adc
fs
stc
sub
mov
add
adc
dec
jecxz
imul
xchg
testl
add
inc
sub
mov
lcall
add
mov
push
inc
pusha
cwtl
sub
pop
bound
aas
xor
add
pop
leave
aaa
fcompl
xchg
xlat
fadds
add
mov
inc
add
out
add
xor
dec
and
sub
add
mov
add
fistpll
out
shrl
sbb
shrb
test
popa
cmpsb
push
push
lea
push
adc
movsb
movsl
push
inc
sub
pop
out
fimuls
je
dec
sbb
in
ja
push
xor
push
mov
ja
mov
sarl
pop
sbb
and
and
fdivs
aas
push
int3
adc
test
movsb
and
mov
ss
adc
jo
lods
add
test
aas
mov
jg
pop
and
imul
aas
inc
xchg
add
incl
outsb
movsl
push
incb
rorb
sbb
test
les
fs
or
mov
lea
add
outsb
cmc
mov
loope
add
bound
add
in
inc
es
repnz
mov
mov
call
add
je
shll
push
mov
adc
push
jae
push
push
je
popa
data16
push
shrb
sub
stos
out
jecxz
lods
int3
add
cwtl
add
and
dec
add
dec
add
loope
add
rolb
xchg
adc
add
push
mov
dec
add
jmp
inc
fiadds
sub
push
add
aad
pop
rol
or
scas
out
dec
jmp
xor
push
in
cmp
dec
lea
push
sub
sub
xor
imul
push
test
push
mov
xor
jmp
push
int
add
add
mov
ljmp
cmpsl
repnz
loope
hlt
pusha
xor
push
xor
fwait
call
fiadds
icebp
xor
stos
mov
bound
dec
adc
mov
sahf
jnp
push
adc
cmp
test
dec
xor
dec
dec
call
aam
xor
sbb
test
mov
add
add
call
loop
inc
inc
add
testb
mov
sbb
fidivl
bound
sub
inc
jle
sub
pop
lret
pop
pop
and
cmp
cmp
mov
cli
imul
cmpsb
xchg
aaa
add
mov
mov
ret
imul
les
sbb
pop
pushf
xor
lods
xor
leave
insb
int
pop
mov
enter
stos
pop
test
pop
repz
nop
and
iret
add
xchg
imul
lcall
addr16
xchg
xchg
inc
add
adc
xrelease
aaa
adc
mov
mov
rorl
xorb
pop
cmp
push
cmp
xchg
jge
sbb
fildll
ljmp
add
mov
pushf
stos
add
xor
or
in
xchg
dec
and
loope
enter
push
cmp
add
xlat
cmp
popf
cmp
in
push
mov
push
sbb
arpl
xor
add
shl
add
mov
jae
testb
mov
lcall
add
add
add
aaa
mov
lret
or
fidivrs
es
mov
dec
lods
jnp
insb
or
lods
ret
lock
movsl
push
jo
sbb
push
add
scas
lock
pop
add
dec
pop
add
add
imul
cmp
arpl
aam
leave
xchg
mov
add
inc
mov
popf
add
jmp
xchg
popf
sbb
push
inc
lahf
out
dec
dec
add
mov
adc
add
add
fs
dec
in
mov
jo
add
adc
je
lea
adc
adc
mov
mov
pop
push
scas
xchg
stos
imul
mov
mov
add
inc
inc
mov
loope
adc
add
mov
add
lods
nop
pop
pop
add
or
mov
mov
outsl
outsb
dec
out
add
dec
push
pop
adc
inc
scas
enter
pop
into
push
and
test
push
cltd
jo
movsb
adc
dec
mov
sub
mov
fbstp
lahf
add
pop
adc
pop
lret
jmp
inc
mov
sbb
andl
iret
sub
mov
int
aam
xor
mov
arpl
jmp
xchg
pop
push
jnp
push
mov
in
mov
out
shlb
xchg
or
pop
add
in
add
sarb
pop
ret
sub
repnz
sbb
add
jne
jnp
cmc
jae
mov
sub
xchg
into
xchg
imul
mov
dec
push
addb
std
pop
sbb
add
xchg
decl
sbb
dec
jbe
cmp
xchg
add
das
out
inc
xchg
je
lahf
dec
xchg
dec
add
sbb
stos
mov
push
adc
jle
push
pop
mov
add
stos
loop
ja
insl
pusha
paddw
and
and
adc
dec
scas
push
fstps
inc
add
mov
mov
cltd
sbb
bound
push
mov
push
pop
ss
sbb
mov
gs
cmp
jle
out
cmp
mov
xchg
mov
add
mov
sbb
cmp
xor
add
movsl
mov
cmpb
add
clc
cmp
in
cli
jo
mov
add
xlat
pop
std
mov
add
or
iret
add
repz
iret
dec
xchg
cmp
jb
xor
cmp
dec
sbb
movsb
lret
cs
mov
xor
sbb
push
add
add
addb
dec
jno
dec
add
lret
add
mov
fsubrl
jecxz
bound
loope,pt
inc
xchg
roll
int
stos
or
or
xchg
dec
mov
outsl
cmp
fs
cmp
and
lea
mov
insb
daa
mov
xchg
ljmp
mov
cld
push
mov
out
das
sub
in
add
sub
out
pop
push
adc
gs
repz
jle
out
and
mov
sbb
push
adc
outsl
push
lock
fwait
ljmp
xor
dec
and
sti
mov
mov
ljmp
push
push
add
add
repz
clc
arpl
aaa
add
repnz
cwtl
dec
sub
inc
and
mov
in
and
cmpsb
push
lahf
js
add
pmaddwd
xchg
andl
push
mov
fistl
sbb
pop
fisttps
xor
jg
jecxz
add
clc
mov
out
cltd
dec
add
xchg
jae
mov
sub
push
and
mov
add
or
sbb
or
push
jle
sbb
cmp
add
add
sahf
pop
add
add
add
orb
mov
adc
inc
mov
leave
adc
lret
cmp
or
add
add
inc
outsl
and
add
subl
push
cmp
inc
add
pop
cmp
int3
add
sub
lcall
xor
cmpsb
jns
jp
ret
stc
mov
enter
fs
jl
rclb
inc
cmp
or
sti
ss
xchg
inc
push
dec
aaa
inc
stos
rol
sbb
add
repnz
fdivr
shl
mov
add
xchg
mov
add
out
sbb
jbe
and
xchg
hlt
push
and
pushf
add
repz
iret
nop
xchg
push
fwait
add
dec
add
test
jp
aad
jns
inc
mov
or
sub
xlat
jmp
mov
mov
inc
loope
stc
pushf
add
inc
pop
faddl
mov
es
les
fisubrl
in
inc
push
mov
sub
inc
insb
pop
mov
shll
popa
js
mov
das
add
xorl
mov
fwait
inc
add
xchg
push
mov
add
add
shrl
outsb
push
push
xchg
or
cmp
repz
pop
mov
push
dec
sti
incb
ss
loop
jl
add
mov
and
mov
jl
shl
cld
loop
mov
inc
add
sub
hlt
mov
enter
mov
jg
pushf
jo
in
or
mov
sbb
movsl
subb
mov
add
cmp
stos
add
bound
mov
or
cmpsl
mov
ss
add
xor
outsl
add
mov
rorl
ja
leave
inc
mov
loope
add
out
es
in
mov
mov
sub
jne
add
das
adc
xor
enter
add
mov
push
mov
jecxz
repz
inc
or
test
mov
xor
jg
inc
in
call
pop
push
popa
or
pop
addl
cmp
ret
push
mov
mov
fisttpl
push
and
add
xchg
jecxz
cmpsl
dec
add
sub
sub
test
add
adc
inc
in
inc
rcl
mov
enter
add
sbb
mov
faddl
aam
add
cmp
jnp
sahf
sti
mov
and
sub
cmp
xchg
add
xchg
pop
lret
add
add
daa
je
pop
add
mov
or
xchg
add
mov
mov
jmp
aad
jne
add
je
pusha
jb
mov
inc
stc
xchg
repz
cmp
loop
inc
or
lods
jmp
adc
push
jp
push
psraw
pusha
push
add
and
cmp
xchg
ja
test
add
icebp
or
lds
test
repnz
cwtl
clc
imul
fisubl
enter
cwtl
sbb
scas
js
xchg
sub
mov
iret
add
test
xor
bound
loope
inc
cld
sahf
inc
pushf
stos
sub
xchg
aaa
int
add
xor
das
test
jnp
rcrl
movb
add
mov
mov
ljmp
mov
lret
or
or
jno
adc
add
fldt
cmp
das
je
sbb
push
xor
test
leave
repnz
jnp
pop
lahf
mov
test
fstps
dec
adc
inc
cmp
mov
enter
jmp
lcall
inc
cmpsb
into
cmp
push
dec
sbbb
rol
cli
in
mov
push
fcmovnbe
add
sub
iret
jbe
add
data16
or
sbb
dec
cmp
rorl
das
xchg
jp
push
push
pop
pop
jl
aam
inc
inc
xchg
push
xchg
andb
xor
jnp
jns
call
cltd
mov
arpl
cmpsb
loope
stos
pop
dec
ja
shlb
add
pusha
loop
add
and
fstpl
hlt
push
adc
pop
inc
stos
sbb
sub
jmp
or
mov
je
or
sub
mov
jl
cmp
out
push
adc
mov
adc
jg
sbb
push
and
out
out
push
sbb
cwtl
cltd
jbe
in
push
add
subb
push
xorb
int3
pop
adc
subb
loopne
dec
or
add
cmp
adc
sub
sbb
jecxz
scas
xor
mov
add
add
out
jge
jne
mov
xchg
and
jmp
add
xor
lret
adc
fmulp
sbb
push
xor
cmp
and
iret
les
divl
cwtl
push
out
add
rcrl
popa
sbb
popa
or
dec
dec
cmpsb
jge
out
es
mov
or
adc
fdivrs
xorb
or
add
das
ret
es
sahf
mov
xchg
in
add
pushf
and
fbld
cmp
test
incb
stos
addb
sbb
mov
adc
sub
mov
into
pop
es
add
jge
add
mov
cmpsb
mov
dec
adc
xchg
mov
lock
push
sbb
add
fwait
sarb
jae
rcr
or
rcll
int3
cmp
ja
scas
mov
mov
incb
xchg
mov
add
lcall
push
nop
sub
mov
add
and
addr16
mov
add
testl
int3
pusha
dec
jns
mov
icebp
jne
adc
fwait
lret
jp
inc
xchg
int3
dec
inc
xchg
add
lods
js
dec
addr16
adc
inc
add
adc
iret
push
cmp
sbb
mov
xor
repnz
add
mov
sbb
add
cmp
dec
enter
and
popa
sarb
mov
xchg
mov
lods
push
pop
dec
xor
les
add
nop
sbb
test
jmp
data16
mov
add
jecxz
mov
rolb
fisttpl
cmpsl
fwait
adc
sub
icebp
jno
cmp
xchg
fcmovne
and
add
icebp
add
add
je
scas
hlt
xor
test
inc
add
xor
and
mull
pop
add
lret
rcll
and
sbb
std
push
add
jecxz
xchg
aas
mov
fldcw
insb
sarb
add
mov
mov
mov
sub
lock
sub
out
pop
shl
jecxz
mov
and
popf
add
fiaddl
mov
add
add
inc
clc
and
add
lahf
outsl
rcrl
push
testb
inc
inc
xchg
push
inc
insl
imul
dec
dec
add
cmp
pop
xorb
add
movsb
nop
push
add
jnp
addb
ds
ret
dec
adc
adc
add
idiv
add
rcll
clc
outsb
cmp
or
add
call
add
add
cli
jp
icebp
pop
push
push
ja
test
mov
mov
adc
add
shrl
or
adc
dec
and
pop
or
adc
lcall
jp
movsb
pop
pop
jnp
ss
js
pusha
hlt
aam
aad
and
pop
shrb
lret
and
dec
mov
stos
add
add
cli
mov
add
bound
add
or
movsb
stos
aad
lcall
add
cli
add
lret
imul
mov
arpl
push
xchg
dec
xor
push
repz
int
dec
mov
mov
xchg
sub
pusha
cmp
fdivl
dec
insb
jl
or
shlb
add
mov
jbe,pt
add
add
add
call
lock
adc
fldl
add
nop
jp
pop
add
add
es
xor
movsl
scas
ljmp
rol
xor
xor
inc
daa
mov
imul
insl
mov
add
incl
in
add
in
test
ret
out
rcl
push
rcll
add
bound
addr16
add
adc
stos
add
add
push
dec
xor
add
jge
ss
lock
xor
testl
xchg
jecxz
sub
stos
add
add
push
imul
aaa
add
pop
mov
add
insb
adc
xchg
jmp
add
psrlw
add
cmp
jae
push
add
shl
xchg
test
das
call
add
lret
xlat
ja
fsubs
ja
popa
add
in
in
add
add
adc
add
jne
xchg
add
test
add
add
cwtl
daa
jmp
mov
mov
mov
cmc
xor
add
fcompl
xchg
jne
pushl
push
nop
mov
xchg
add
lds
rorb
andb
pop
das
mov
addl
repz
flds
cmp
jle
sub
push
stos
daa
ds
and
inc
out
enter
aad
filds
movb
xor
add
lcall
loope
fldcw
ljmp
jne
inc
add
js
mov
inc
dec
xchg
testl
ret
mov
pop
inc
in
mov
mov
add
xor
fldt
add
outsb
pop
aad
fiaddl
jb
subl
mov
ja
sub
fidivl
hlt
and
add
sub
aad
in
data16
jae
mov
inc
xlat
dec
push
outsb
adc
sub
insl
xchg
scas
ret
adc
lock
lea
jge
xchg
or
add
add
pop
js
mov
lea
cmp
clc
ss
mov
dec
movsb
add
les
icebp
push
add
mov
idiv
sub
push
mov
loopne
pop
jmp
and
sub
mov
push
add
adc
add
push
or
pop
push
repz
jge
pop
scas
mov
iret
lahf
push
add
js
xor
sub
pop
test
rorl
loop
insb
dec
xorl
add
xchg
mov
daa
add
dec
ror
add
push
add
dec
mov
adc
add
lea
jb
and
xor
popa
add
jno
add
shll
popa
mov
xorl
cmp
pop
add
mov
mov
xchg
jg
push
pop
xchg
fwait
clc
mov
stc
sbb
add
enter
sub
sub
jmp
dec
fistpl
fldl
add
cmp
popa
add
lret
mov
pop
jne
mov
push
mov
mov
popf
cmp
inc
jmp
jmp
outsb
leave
cmp
mov
adc
push
cmp
or
out
sti
push
shufps
shll
ret
cld
add
leave
ds
pop
pop
ja
mov
and
jl
xchg
add
pop
in
mov
and
clc
inc
pop
and
pusha
mov
stc
scas
or
filds
mov
into
xor
add
jl
dec
repnz
pop
inc
adc
jns
fimull
icebp
xor
pop
cmp
sbb
ds
pop
sbb
fsubs
mov
in
lods
sbb
enter
cmpsl
sti
push
mov
out
sub
lea
cli
std
add
add
cltd
add
add
movsb
test
adc
fisttps
add
mov
faddl
pop
inc
stos
fsubrs
push
insb
insb
fs
sbb
push
popa
bound
out
mov
loop
and
dec
jmp
mov
push
jp
pop
xorl
scas
or
sbb
add
popf
add
mov
mov
add
fisubs
xlat
popl
lock
dec
dec
or
rcr
sub
add
scas
pop
movsb
pop
inc
sbb
sbb
jl
or
aas
sbb
addr16
xor
out
test
and
add
pop
stos
data16
xchg
mov
mov
lcall
cmp
mov
add
sbb
add
sahf
scas
jge
sbb
rorb
mov
add
sub
aam
out
int
mov
cmp
imul
sbb
cmp
cmp
fidivrs
push
ja
in
cmc
scas
pop
jae
xor
sti
sub
mov
add
loope
adc
in
in
insb
add
into
mov
nop
xor
xchg
rolb
adc
or
jecxz
dec
clc
int3
test
cmp
mov
mov
sbb
in
das
jp
push
pop
xchg
add
popa
sub
rcrb
xor
dec
lock
xlat
rolb
push
insb
xor
cld
negb
int
into
insb
add
aaa
sbb
loope
repnz
jns
add
fisubl
push
add
jl
std
out
cmp
out
push
pop
xchg
roll
mov
icebp
fwait
aam
sub
es
imul
inc
mov
dec
call
push
jbe
jnp
add
or
adc
loope
xchg
ja
or
mov
lock
or
xlat
dec
pushf
ja
dec
mov
xor
mov
sub
stos
imul
call
mov
cmp
xor
nop
xchg
loop
test
js
enter
movsl
mov
decl
add
xor
fstpt
xor
pop
push
cmp
sub
out
stos
lret
hlt
lds
into
insl
add
pop
arpl
xchg
xlat
cwtl
lret
mulb
dec
cmp
prefetch
in
add
xchg
and
ljmp
xor
test
outsl
adc
sub
cltd
or
push
jl
xor
add
aas
fcompl
jmp
loope
std
add
push
push
add
movsb
scas
mov
cli
or
out
dec
dec
lret
adc
xchg
andb
xchg
and
pushf
or
shlb
fcoms
in
add
in
jle
cmpsb
add
pop
and
cmp
insb
dec
mov
add
aas
xchg
adc
sub
or
push
or
push
das
je
in
adc
push
mov
sub
in
adc
xor
movb
addr16
sti
jb
cwtl
int3
lret
and
jmp
xor
fistl
add
add
pushf
add
inc
dec
lret
add
scas
push
out
sahf
xchg
cs
insl
mov
aas
or
shr
sbb
and
out
cmp
adc
or
add
div
push
mov
add
push
imul
xchg
push
cltd
mov
add
cs
push
jmp
add
rcrb
pop
add
std
scas
mov
rcr
cmpsl
mov
mov
sbb
xchg
mov
sub
add
pusha
stos
mov
fwait
add
nop
xor
add
notb
pop
ds
push
lahf
out
sarl
jb
sub
sbb
insb
addl
add
or
xor
xor
divb
and
sbb
sub
xchg
std
ds
sbb
rcr
fimull
lret
add
inc
or
xchg
push
je
mov
sub
mov
mov
fiaddl
call
add
and
add
js
lcall
add
add
mov
push
sub
cs
and
mov
fs
adcl
dec
divb
add
add
inc
pop
leave
ret
es
xor
fs
aad
pop
roll
xchg
add
pusha
mov
cmp
test
gs
fldl
add
inc
jne
inc
jne
lahf
sbb
pushf
add
aad
shll
adc
xor
movb
add
ljmp
and
add
les
xor
pop
stos
fdivrl
add
movsl
in
add
fildl
or
cmpsl
daa
ljmp
and
xchg
pop
scas
adc
or
cmpsl
add
mov
fiadds
addr16
xor
mov
inc
lods
push
sbb
loop
dec
add
aam
pop
dec
xor
xor
sbb
jmp
jbe
sbb
pop
addb
loopne
ds
add
and
add
sahf
dec
ret
pop
push
and
std
mov
add
fs
add
sahf
or
fsubrs
outsb
cmp
jb
lret
adc
dec
enter
fcmovb
lods
aas
das
in
mov
add
pop
test
xlat
add
cs
aas
pop
add
add
insl
xor
add
ja
sbb
cli
ss
hlt
clc
fs
sub
fistl
mov
int3
cmp
push
cmc
repnz
loopne
sbb
int3
add
push
cli
inc
add
out
dec
push
add
xor
mov
pop
js
fimull
roll
rolb
mov
data16
jp
inc
add
bound
push
lcall
mov
pop
fsubrl
cwtd
dec
pop
adc
and
fldt
add
in
xchg
stc
push
mov
movb
shrl
or
add
ret
sub
out
inc
dec
negb
enter
add
pushf
filds
movsb
and
jecxz
insb
mov
add
inc
sarb
popf
add
dec
in
out
jbe
cmp
out
or
or
lock
lds
movsb
mov
jge
or
push
push
or
mov
jge
jno
add
js
mov
add
sub
push
add
gs
pop
jb
gs
add
push
stc
rorl
inc
stc
in
pop
add
mov
mov
add
imul
rorl
lcall
add
cli
lret
ja
mov
xchg
xchg
dec
push
rorb
fldl
add
into
sahf
add
mov
inc
lds
imul
add
dec
cmpsb
mov
push
push
pop
adc
xchg
movsb
add
std
hlt
xor
pop
xor
push
ret
add
jmp
lods
sbb
imul
add
ljmp
pop
add
or
shl
stos
shll
filds
cmp
push
mov
sub
push
dec
push
lock
mov
push
cmpsl
es
ret
add
push
call
cmp
call
jg
xchg
dec
jge
aad
fiadds
imul
lcall
dec
into
cmp
mov
mov
fchs
add
arpl
fwait
xlat
add
fstpl
lcall
push
dec
mov
cmpsl
lods
add
cmp
mov
add
pop
or
iret
xchg
outsl
jns
fisubl
test
mov
add
add
push
xor
enter
adc
and
mov
cmp
adc
in
mull
mov
scas
add
add
sbb
add
inc
cs
inc
mov
ljmp
mov
xchg
push
dec
add
push
sbb
push
stc
mov
fisubs
jmp
push
inc
cmp
in
pop
nop
incb
arpl
add
add
cmc
fiadds
mov
mov
pusha
xchg
push
cli
test
mov
jp
add
or
test
sub
mov
adc
jae
pop
and
add
fisttpl
sub
xchg
sti
ret
repnz
or
xor
pop
push
mov
lahf
add
lods
pop
add
imul
mov
jg
pop
push
mov
mov
sub
or
int
les
add
inc
lcall
mov
mov
std
stc
push
int3
iret
add
jae
cwtl
lret
mov
sti
mov
sub
and
les
dec
imul
addb
cmp
stc
add
dec
movsl
add
add
je
lds
push
add
adc
add
stos
stc
movsb
in
sub
movsl
adc
aas
or
std
add
movsb
sub
js
mov
imul
popf
add
cmpxchg
divb
push
stc
out
add
stos
jmp
mov
roll
in
shlb
sbb
and
cmpsl
add
outsb
notl
push
and
mov
and
add
mov
xchg
cmc
xlat
inc
gs
push
dec
add
add
loopne
add
aaa
testl
adc
adc
adc
xchg
data16
test
lea
call
pop
pop
out
add
aas
jnp
mov
rclb
add
incb
mov
cmp
ficomps
call
lahf
dec
sbb
add
les
xor
jecxz
decl
pushf
mov
pusha
mov
jo
cmp
mov
inc
dec
repz
mov
add
clc
cli
inc
int3
xchg
ds
cltd
jns
dec
add
xor
and
add
sbb
out
mov
mov
into
iret
icebp
add
lret
scas
daa
ljmp
add
cmp
cmc
pop
mov
icebp
loopne
sbb
das
int3
add
cmpl
ret
loopne
cs
in
scas
sahf
pop
in
push
nop
add
dec
push
in
or
add
pop
lock
imul
pop
pop
add
xchg
addr16
shl
xor
cmp
jg
adc
add
push
pop
mov
inc
filds
gs
add
sub
popf
and
dec
lds
mov
sbb
sbb
jecxz
fwait
adcl
adc
sbb
inc
fstl
add
into
or
repz
iret
xlat
das
leave
mov
je
jno
mov
cli
mov
mov
pop
or
divb
add
and
sub
or
xchg
adc
sti
mov
push
mov
add
jle
adc
push
add
jecxz
add
ljmp
imul
add
lock
dec
popf
add
add
lds
add
outsl
bound
std
hlt
pushf
add
stos
jp
push
out
cmpsl
fidivrl
out
ss
int3
mov
in
sbb
mov
sbb
add
mov
ret
lret
or
adc
push
les
jge
ret
cmpl
mov
mov
cmp
into
add
and
loop
arpl
mov
fcmovnb
xchg
pop
add
out
jne
fcompl
dec
imul
mov
jno
cmp
add
add
add
mov
stc
addr16
scas
or
add
repnz
lds
into
adc
ds
outsb
and
add
call
in
push
or
in
pop
call
add
add
or
divb
ljmp
out
and
add
add
adc
add
mov
pushf
mov
fwait
add
add
add
mov
filds
or
out
ret
jl
mov
insl
popf
repnz
or
xor
sbb
mov
mov
ret
nop
add
sub
inc
test
sub
das
das
test
xor
jnp
icebp
in
xor
cmpsl
add
in
add
shl
roll
sarb
fiaddl
sbb
jmp
push
popf
adc
push
andl
adc
add
cltd
sub
and
lods
sub
mov
fisubl
mov
push
mov
cmp
mov
jecxz
call
sub
les
inc
gs
lea
xchg
xchg
xchg
sub
add
push
cwtl
lahf
xor
adc
add
add
mov
add
add
adc
mov
push
pop
cmc
mov
jecxz
dec
xchg
hlt
bound
mov
sahf
mov
fstps
into
mov
push
or
mov
jmp
mov
scas
in
insb
add
or
push
sbb
xchg
lahf
add
mov
stos
cmp
add
jnp
cmpsl
inc
jmp
lock
xchg
mov
xor
outsb
push
cmpsl
jp
ljmp
lods
pop
loope
xor
mov
fcoms
pop
sbb
mov
jo
jno
adc
push
rcr
dec
add
jb
mov
mov
push
fisubrs
mov
xchg
pop
test
sbb
add
cmp
xor
in
xchg
xor
call
scas
adc
add
add
dec
xchg
popa
add
add
push
sub
jge
sub
jg
push
xchg
into
add
pop
movl
pushl
lods
add
cltd
dec
mov
push
ret
jns
sub
fnstcw
aam
outsb
orl
enter
or
clc
std
daa
fnstenv
xor
pop
dec
mov
icebp
sbb
add
fnstcw
add
test
add
dec
ds
sbb
imul
lock
dec
insl
and
out
jmp
adc
repnz
add
add
cltd
jp
in
mov
dec
dec
add
fs
add
sbb
mov
les
data16
pusha
fs
outsl
dec
icebp
add
sub
inc
add
sbb
lret
add
pop
add
jbe
push
add
inc
cld
mov
sub
out
dec
pop
add
jl
or
sbb
dec
je
das
pop
cmpsb
pop
xchg
dec
pop
adc
inc
add
cmp
adc
rolb
jg
xor
cld
sbb
cmp
roll
add
jmp
rcrl
xchg
loope
add
pop
cmp
in
inc
jecxz
and
add
repnz
lea
xorb
int3
lcall
pop
or
enter
iret
jge
and
into
fwait
andl
cld
cmp
push
sahf
stos
xchg
insl
push
sub
add
xor
and
mov
xchg
mov
add
jb
mov
rclb
mov
push
and
movsb
pop
xor
imul
mov
sahf
add
add
lcall
add
add
loope
std
mov
push
repz
testl
mov
add
hlt
std
loop
nop
dec
or
or
movsl
test
mov
ret
xchg
add
add
fildl
fistpl
testl
push
mov
dec
popf
cmp
into
aas
mov
lcall
mov
stos
add
xor
and
xor
ja
mov
data16
cmpb
lods
movsb
cmp
mov
ret
xor
pop
mov
add
xchg
stos
mov
inc
negb
xchg
jmp
xchg
cmp
aad
cmpsl
add
leave
add
mov
cmp
nop
push
mov
add
sbbl
and
ficomps
mov
pop
sbb
lret
add
add
push
jnp
adc
out
mov
movsl
insb
flds
fs
jg
inc
add
xor
xlat
iret
repz
arpl
aas
roll
inc
fcoml
push
add
jns
dec
inc
subl
int3
mov
sbb
mov
paddusb
mov
inc
cs
cmp
sti
mov
pop
push
cs
lret
xchg
cmp
lods
inc
add
add
xchg
mov
mov
add
out
scas
je
cmp
pop
mov
lods
shrb
pop
lea
add
adc
test
enter
stc
jne
dec
jbe
lds
pop
add
scas
cli
dec
in
iret
mov
lods
out
jge
into
rclb
sub
xorl
or
shlb
xlat
mov
adcl
xor
into
xor
jo
loope
in
aaa
or
lret
roll
mov
notl
lea
add
add
ret
test
and
jb
xchg
inc
and
mov
mov
inc
pop
mov
mov
aam
repz
inc
jb
lods
mov
imul
mov
das
fidivl
loopne
or
push
addl
add
inc
inc
cmpsl
jecxz
pop
jo
pop
xchg
fwait
outsl
push
sub
or
push
les
subb
pusha
sub
cmp
leave
loop
cmpsl
cmp
or
lods
lock
add
add
cwtl
add
sbb
scas
xchg
cmp
mov
xchg
mov
ja
test
imul
das
rcl
fldt
and
iret
icebp
add
pop
add
adc
add
stos
dec
push
cmp
popf
add
imul
pop
std
int3
push
fildl
ror
push
fs
rolb
dec
sbb
dec
fwait
xchg
fstpl
cmpsl
shrb
ds
aam
nop
ja
xchg
das
dec
sarb
lock
add
les
add
mov
xchg
mov
add
cmc
aas
js
adcl
jae
sbb
sub
cltd
fdivs
sub
mov
add
jge
adc
mov
iret
imul
fistl
inc
mov
inc
in
mov
movsl
mov
dec
addr16
faddl
lock
inc
add
loopne
sub
leave
add
cli
data16
shrb
stos
fwait
add
add
add
pop
add
pop
jae
jb
push
add
dec
add
lds
dec
cld
test
xor
repz
add
add
mov
push
mov
add
mov
mov
lods
ret
pop
inc
lahf
dec
fmulp
and
push
mov
in
add
and
xor
inc
sub
dec
jb
jno
push
ret
add
pop
cmp
shrl
loopne
pop
imul
repz
adc
insb
sarl
fcmovnb
movsl
mov
int
lods
add
hlt
lods
add
fidivrs
pop
mov
fsubl
lret
and
iretw
mov
arpl
icebp
pop
jl
adc
add
test
pusha
in
imul
mov
xchg
cmc
es
dec
adc
add
jmp
xor
scas
mov
sub
je
add
adc
mov
sbb
mulb
add
cmp
xor
mov
call
xor
xchg
shrb
mov
dec
add
int
sub
jecxz
jecxz
or
movsb
dec
leave
dec
adc
mov
jmp
pusha
lds
jge
negl
popa
popa
insb
mov
push
add
enter
cmp
pushf
sub
sbb
rorb
pop
sahf
ja
jmp
hlt
into
out
negl
add
aam
iret
les
xor
inc
add
jae
clc
inc
outsl
icebp
adc
movl
sub
and
mov
add
jno
add
repz
cmp
xchg
add
adc
add
rorl
test
jo
push
mov
inc
add
or
add
mov
out
jl
mov
mov
add
lods
jns
inc
xchg
movsl
not
sbb
hlt
add
push
or
jo
add
sub
gs
mov
imulb
sub
in
stc
pop
xor
outsl
ret
clc
imul
add
or
add
add
jo
push
test
pop
ret
and
sti
sbbb
inc
mov
jl
push
test
jecxz
mov
adcl
in
cmpsb
mov
dec
add
xor
stos
outsl
jne
push
inc
adc
or
movsb
add
test
mov
cwtl
gs
add
cld
into
dec
loope
cmc
enter
in
dec
mov
adc
adc
mov
repz
aad
fs
les
xchg
pop
inc
dec
add
les
mov
in
add
push
dec
pusha
jbe
fistl
cmp
xchg
add
flds
push
ja
mov
add
push
push
sbb
jae
lock
inc
dec
mov
mov
jmp
rcrl
and
mov
add
push
addr16
sbb
add
add
jns
add
or
orb
stos
xchg
das
mov
add
or
and
out
fldl
scas
pop
ds
add
orl
sub
mov
call
fistpll
cltd
das
dec
nop
add
add
movsb
arpl
xchg
jo
add
lret
add
add
jno
cmp
add
mov
mov
add
push
cli
sti
adc
add
mov
addl
push
xchg
mov
lret
push
dec
dec
ret
push
jmp
add
dec
aad
out
fsubr
adcb
bound
sub
adc
sbb
cld
lods
add
xor
mov
andl
pushf
scas
pop
loop
push
add
jbe
repz
jno
xchg
ret
add
iret
xchg
test
arpl
xchg
andl
push
push
dec
add
sbbb
sub
in
std
xor
xchg
add
mov
xor
stos
add
movb
add
inc
int
add
aad
dec
pushf
sub
inc
pop
add
popf
and
add
inc
daa
push
add
stc
add
mov
jae
hlt
in
loopne
jmp
addr16
imul
push
pop
in
daa
inc
jp
pop
add
and
add
cmp
adc
lock
adc
pusha
subl
cli
adc
nop
xchg
sub
pop
out
cmpsl
pcmpeqb
xor
add
sub
add
ljmp
push
sahf
sbbl
mulb
inc
jl
add
add
ss
and
jne
push
pop
data16
notl
add
adc
out
add
mov
ljmp
pop
cld
pop
pop
and
add
jo
icebp
mov
inc
add
jle
enter
inc
insl
xchg
mov
push
add
out
orl
add
mov
sub
mov
fdivrl
pop
mov
add
pushf
das
icebp
movsl
sti
or
inc
clc
pushf
jge
call
dec
ret
out
das
rorb
mov
sahf
and
js
add
xchg
add
leave
lret
mov
jmp
or
xchg
dec
inc
add
rcl
pop
cmc
jae
outsb
or
add
add
sub
cltd
data16
outsl
jnp
add
repnz
arpl
rcr
insl
sbb
mov
pop
pop
push
pop
bound
ret
add
scas
mov
pop
inc
jbe
add
mov
insb
sub
dec
adc
jae
push
dec
gs
fwait
pop
mov
js
in
je
xor
fidivs
sti
add
add
dec
les
xor
rcrb
fisubs
push
fwait
or
add
lods
hlt
add
add
popa
jl
sbb
stos
dec
scas
xor
add
push
cmp
jns
mov
dec
pop
divl
fwait
dec
mov
jno
ljmp
cmpsl
jb
mov
ss
xor
dec
adc
adc
ljmp
jl
inc
out
add
add
add
push
fbld
xorb
loopne
jne
xor
gs
add
add
or
adc
adc
mov
add
cld
inc
das
cmpsl
push
adc
xor
dec
add
ljmp
orb
rorb
xchg
add
pop
lds
cmpsl
mov
or
shrb
jns
jbe
imul
add
sbb
cwtl
adc
insb
and
xor
add
movhps
sbb
xchg
iret
sub
in
fadds
std
fisubrl
push
cld
jo
add
mov
add
test
pop
push
add
cltd
add
test
xorl
add
ja
add
mov
cmc
dec
popa
add
aam
add
sbb
add
dec
fldenv
add
sub
sbb
pusha
adc
push
cs
xchg
orb
cmp
clc
stc
xor
cmp
and
mov
lcall
daa
stos
add
add
inc
or
and
sub
add
pop
fwait
loopne
cli
add
adc
add
fs
cwtl
mov
cmpsb
add
mov
imul
add
mov
das
or
add
sar
pop
nop
lods
ret
jns
leave
add
xor
outsb
in
cmpl
mov
aas
dec
or
popa
in
add
mov
loope
sub
js
aad
add
or
add
add
mulb
stos
sti
add
in
add
or
add
ret
and
jp
mov
scas
adc
add
xor
testb
xchg
add
jnp
repz
cmp
mov
scas
mov
sar
adc
add
fidivrl
adc
inc
add
xchg
hlt
push
add
enter
adc
xchg
ljmp
add
add
mov
pusha
call
cs
xchg
out
mull
add
push
loopne
loop
sub
shufps
aam
ds
pusha
jl
cltd
mov
out
jge
jb
jne
jmp
orb
shll
mov
inc
aam
add
push
fldcw
sub
outsb
jno
xor
cld
jmp
add
setae
sbb
add
out
sbb
sahf
sti
add
aas
sub
ficoml
cwtl
test
in
pop
add
sbb
mov
add
and
in
mov
push
icebp
ret
shlb
lds
and
fmull
pushf
jle
insl
dec
cli
rclb
jno
lds
nop
jecxz
pop
xchg
into
sbbl
cmp
sub
push
repnz
insl
jno
and
addr16
scas
stos
incb
clc
sbb
hlt
outsb
add
scas
je
incb
xor
pop
cmpsl
rcrl
add
push
add
adc
mov
add
xor
sti
adc
xchg
add
push
je
add
mov
popf
pop
inc
sub
std
fcoms
and
iret
xor
in
lret
add
or
add
cld
push
lcall
mov
xchg
mov
mov
push
test
test
repnz
je
jbe
test
and
ss
add
repz
cmp
add
xor
testl
jge
pop
sbb
stos
int3
out
pop
fdivs
fwait
add
mov
pop
mov
cmpsl
xor
aas
mov
rolb
mov
sti
clc
cmp
out
push
or
rclb
repnz
negl
mov
add
and
or
cmp
push
dec
push
and
adc
dec
add
movsb
push
roll
adcl
mov
mov
mov
adcl
shrb
mov
loop
dec
xchg
xor
lcall
ja
jnp
aaa
inc
push
or
sub
pop
sbb
and
add
dec
in
shll
mov
jl
mov
fadds
pusha
push
das
cwtl
add
dec
addb
loope
push
pusha
lods
add
push
fidivs
xchg
pop
and
clc
add
mov
out
lret
loope
int3
leave
adc
add
xor
add
loop
xchg
xor
cmp
lds
enter
cmc
push
adc
sbb
cmp
add
lods
adc
lds
fisttpll
and
fisubrl
jecxz
cmpsb
ds
xchg
rolb
inc
add
add
outsb
outsl
or
pushf
push
add
in
mov
fsubr
push
sub
sbb
push
add
mov
das
andb
popa
push
dec
push
xchg
lea
mov
xchg
test
mov
jbe
mull
mov
sub
cltd
iret
cmp
mov
dec
xlat
pusha
imul
mov
in
or
jae
gs
repz
lock
cltd
imul
xchg
cmp
stc
pop
add
mov
aas
testl
enter
sub
daa
mov
add
shl
inc
push
add
or
jbe
mov
or
pop
xor
push
lcall
add
add
cmp
ficompl
add
dec
loop
xchg
adc
push
add
rolb
daa
ds
rdrand
outsb
sbb
int
pop
rcll
repz
les
es
xor
adc
push
add
xchg
add
into
add
bound
jo
dec
add
popa
inc
jo
inc
je
push
hlt
mov
dec
bound
xchg
add
dec
mov
sub
mov
cltd
pop
add
fcmove
mov
add
mov
add
les
out
movsb
mov
add
sbb
add
jp
flds
loop
jbe
add
sahf
xlat
lahf
fadds
mov
enter
mov
sub
fs
les
add
lock
and
stc
mov
repz
sbb
aas
int3
mov
cwtl
add
jmp
iret
sbb
outsl
add
daa
aad
data16
adc
pop
xlat
lcall
mov
add
jns
mov
mov
or
push
out
fs
pop
add
add
push
add
dec
cmp
xor
adc
arpl
ljmp
push
push
xchg
add
cmp
jp
xor
faddl
mov
push
and
jne
pop
xlat
lock
adc
imul
xchg
repnz
das
xor
mov
inc
gs
push
xor
or
add
xor
int3
push
repz
and
mov
sbb
dec
push
inc
xlat
pop
rolb
jno
ljmp
add
lret
xchg
adc
test
mov
in
mov
lahf
sbb
pop
adc
dec
cs
movsb
mov
out
out
rcll
mov
fwait
xor
popf
fwait
cltd
jae
mov
mov
adc
mov
andb
mov
fildl
cmpsb
sbb
add
adc
dec
mov
mov
fwait
add
mov
add
dec
xchg
dec
add
pop
jmp
sahf
stc
mov
ret
lret
mov
adc
ds
and
out
loopne
ret
js
push
aad
std
enter
jge
add
gs
sub
imul
loop
add
cmpsb
inc
in
repnz
jnp
xor
sbb
and
out
add
cmp
jb
lcall
cmc
bound
insb
jge
xchg
pop
repz
cmpsb
add
and
pop
xor
xor
fidivrs
cltd
pop
sub
add
lret
add
ss
jmp
leave
mov
clc
cmp
jae
popa
inc
les
mov
add
lock
in
std
scas
mov
add
xor
bound
or
mov
aad
push
and
lds
jge
je
movb
loop
fs
aad
imul
add
lods
mov
lret
stos
loopne
dec
xchg
add
xchg
inc
icebp
cmc
or
jae
sub
cmpl
jle
mov
inc
jb
adc
lahf
outsl
insb
mov
movsl
add
jno
clc
jle
mov
cmp
lods
fcomps
jbe
dec
pop
mov
xlat
popf
test
adc
push
jp
push
add
fsub
xchg
sbbl
pop
mov
inc
fimull
mov
mov
jge
adc
fidivrl
jo
jnp
push
mov
aas
sbb
jmp
add
dec
rolb
add
pop
mov
ss
int
xor
test
into
xchg
iret
add
dec
cltd
ss
nop
testb
push
inc
cmpb
cmp
add
xor
add
mov
sbb
adc
mov
and
cwtl
sbb
mov
pop
in
cli
outsb
add
outsl
repz
add
mov
mov
add
add
add
shlb
and
das
and
pop
test
add
rolb
fs
les
xor
shrl
adc
add
cmp
enter
push
push
xchg
ja
push
push
adc
cs
jo
mov
or
fwait
jmp
add
rorb
push
adc
cmp
or
add
jecxz
cmp
sub
mov
ss
add
mov
pop
pop
mov
movsl
aaa
sbb
sbb
lock
sbb
dec
movsl
xor
adc
add
roll
icebp
sub
movsl
mov
outsb
fnstenv
jne
add
fstpl
sti
dec
add
aad
imul
mov
add
push
xchg
dec
call
adcb
cmp
mov
stos
lods
verr
iret
insb
cmpsb
jg
mov
rolb
js
xchg
jno
and
arpl
sahf
cmp
push
in
scas
add
sti
push
mov
movb
into
hlt
aas
push
push
add
jnp
js
or
ljmp
aas
add
data16
mov
xchg
add
cld
dec
add
jmp
cmp
lcall
or
lret
lea
xchg
rorb
ret
jno
cltd
hlt
adc
les
sub
add
icebp
fiadds
sbb
xorb
jnp
dec
ds
dec
mov
stos
mov
inc
add
dec
lds
push
xor
push
test
xchg
jb
clc
cmc
adc
dec
xchg
or
push
fcmovu
mov
out
jns
cmp
inc
mov
add
fiaddl
inc
xor
sbb
pop
jb
rcrb
pop
pop
incb
xor
test
sub
and
add
or
aam
in
mov
jle
pop
sub
loop
loope
jnp
xor
push
jae
xor
shlb
sub
or
iret
mov
sbb
aas
fidivs
or
lds
cltd
lret
test
add
xchg
add
push
fcom
jns
xorl
lock
jo
ja
out
inc
stos
add
lock
adc
shll
adc
adc
mov
insl
add
ret
pop
aad
adc
ret
adc
cmp
jns
add
leave
sub
lea
ret
into
mov
dec
sub
add
add
xor
and
push
sbb
mov
or
dec
xchg
add
lcall
je
lock
repz
mov
test
add
mov
gs
leave
add
cmp
popf
cmp
sbb
lock
call
add
dec
mov
mov
push
popa
add
xor
sub
pop
or
enter
inc
popf
fsub
outsb
pop
add
xchg
aaa
ja
incb
adc
cmp
into
push
pushf
int
das
fsubs
adc
xchg
repz
insb
cmpsb
jbe
xchg
fstpt
in
jl
imul
jp
neg
test
out
insl
cmp
cltd
es
adc
je
sbb
into
enter
sub
mov
das
xor
mov
add
ret
ss
xchg
dec
jo
sti
xchg
push
pop
data16
sbb
mov
add
ja
js
mov
sbb
shrl
shll
push
rorl
loop
sbb
jecxz
and
sti
add
lea
cmp
out
and
arpl
lret
add
jnp
push
loope
mov
pop
jae
outsb
or
ljmp
and
sub
or
movsb
inc
jb
push
into
lret
int3
bound
and
addr16
jbe
js
xchg
sbb
add
movsb
into
jecxz
xor
pop
mov
out
mov
add
fildl
add
xorb
mov
or
pop
mov
sub
cmp
sbb
fsub
aaa
les
push
fdivrs
or
data16
cmp
cmpsb
imul
cmpsb
testl
rol
imul
push
push
sti
xchg
into
les
xchg
scas
enter
add
or
or
pop
test
inc
std
lods
cmp
mov
dec
repz
and
adc
and
mov
dec
mov
in
cld
adcl
cmp
shr
mov
mov
roll
push
mov
adc
andl
ret
add
imul
sbbl
jp
movsb
clc
xchg
mov
add
xor
clc
movsb
adc
cmp
add
sbb
cmp
add
add
xchg
mov
cmpsb
inc
cmc
dec
push
mov
stos
mov
adc
ss
and
jmp
mov
mov
insb
lods
mov
push
cmpsl
dec
add
cli
add
in
push
fxch
add
jo
add
in
aam
enter
add
cmpsb
adcl
test
adc
out
sub
mov
mov
add
ficompl
stc
mov
add
add
mov
fnsave
cmp
lcall
shrb
stc
sub
pop
flds
add
or
cmp
add
add
jnp
jp
leave
add
enter
sub
adc
lods
push
movsb
popf
jno
iret
xchg
sbb
insl
add
out
xor
mov
cmp
xor
iret
cmp
and
add
pop
int3
sub
mov
pop
cmp
in
mov
mov
ret
mov
lds
and
pop
pop
movsl
add
repnz
and
xchg
repnz
pop
cli
add
cmp
loope
aad
inc
insb
das
add
stos
jl
add
xchg
cmp
sub
jne
xor
std
mov
xchg
and
pop
sub
fdivs
outsl
cmp
add
outsb
push
adc
or
dec
sbb
mov
add
aad
lret
pop
insb
push
mov
push
dec
mov
inc
add
mov
std
sub
int3
xlat
push
aas
or
pop
xchg
stos
scas
sbb
popa
pop
pop
pop
mov
jb
movsb
add
stc
push
or
jbe
push
fldl
andb
and
in
fisttps
roll
jp
popa
pop
les
mov
fbstp
pop
pop
jo
add
gs
mov
push
out
das
push
imul
das
or
sub
dec
mov
sti
in
dec
incb
add
cmpsl
cmp
scas
fsubs
adc
sub
mov
dec
pop
cmpsl
adc
ds
inc
sub
add
xor
cmp
add
add
shrb
inc
sub
loopne
dec
pop
push
add
sub
in
in
add
xor
lds
inc
add
pop
add
add
out
and
sbb
insb
cld
scas
in
test
push
xchg
aaa
add
push
cmp
push
add
mov
xor
xor
or
gs
push
sarb
inc
sbb
and
in
adc
mov
in
xchg
mov
movsb
pushf
in
or
shlb
mov
out
in
lret
arpl
loop
and
stos
stos
add
lods
lret
js
ret
frstor
cmp
in
inc
xor
dec
leave
leave
mov
push
loope
leave
es
inc
lea
out
push
popf
in
cs
mov
add
divb
add
push
jb
add
fsubs
and
lods
sbb
push
icebp
sahf
andl
ficoml
xchg
inc
mov
add
add
test
inc
fdivrp
fcmovnb
add
or
cmp
mov
scas
or
sbb
mov
fsubs
xor
and
adc
iret
push
and
xor
lods
mov
xchg
mov
popa
mov
sti
xlat
popa
sbb
rclb
jl
and
add
xor
pop
je
je
and
mov
adc
iret
cmpsb
add
test
push
pop
and
nop
adc
out
add
pop
mov
dec
push
out
and
dec
enter
jns
gs
mov
push
lock
or
fimuls
add
rclb
jnp
cmpl
dec
cmp
sbb
fwait
and
lods
aad
mov
mov
sbb
sbb
pop
push
xchg
in
jg
adc
inc
ljmp
adc
xchg
add
gs
adc
shl
mov
sub
sub
addb
lcall
fiaddl
mov
cmp
mov
cs
jbe
add
add
aas
push
loopne
scas
mov
fadds
adc
insl
sbb
sub
aam
and
mov
dec
lret
fdivr
repnz
test
clc
gs
and
inc
xor
add
sub
cmp
sbb
fst
xor
jmp
jne
lods
add
aam
scas
cmpsb
scas
int
call
lahf
cmp
adc
hlt
add
frstor
add
mov
or
movsb
dec
cmc
adc
aaa
outsl
hlt
outsl
add
inc
xchg
test
cmp
cmp
mov
aaa
add
mov
push
fsubrs
sbbb
inc
popf
jecxz
out
out
or
push
insb
xchg
pop
roll
or
sub
mov
push
add
jecxz
notb
imul
inc
movsl
mov
lret
pop
aad
mov
test
inc
mov
faddp
add
sub
rorl
fiaddl
sbb
add
repnz
dec
addr16
rorl
mov
xchg
cwtl
cmp
adc
shlb
loop
xchg
jnp
bound
jmp
dec
fsubp
dec
add
fldl
mov
stos
add
mov
fs
mov
adc
fcoms
das
or
pushf
add
mov
add
jl
adc
pop
fisubrl
mov
inc
sbb
add
or
rolb
lods
add
pusha
push
outsl
fcmovne
add
lahf
outsb
sbb
cmpsb
cpuid
outsb
inc
push
add
pushf
add
cld
xor
fisttps
testl
add
in
push
or
mov
les
mov
add
cltd
add
add
add
add
add
add
xor
and
loopne
lea
jae
pusha
add
or
cmc
sub
js
nop
pop
jge
mov
jecxz
insl
sub
xchg
out
mov
add
push
jae
cmp
shrb
add
pushf
cli
push
push
out
and
pusha
pop
add
lahf
mov
push
mov
shll
push
shll
fwait
out
inc
rol
add
sbb
xchg
pop
add
test
add
insb
sub
in
aad
call
add
js
cmp
cmpsb
fists
cmpsl
push
mulb
imull
add
push
add
repnz
pop
dec
jbe
mov
xchg
enter
push
push
sbb
stos
push
repz
add
shl
cmpsb
les
and
mov
ffreep
test
cmp
add
add
add
test
xor
inc
daa
sub
es
loopne
movsb
mov
cmp
push
xchg
mov
sahf
push
cmp
dec
cld
jne
push
add
mov
mov
lods
mov
add
add
push
mov
mov
adcb
dec
shrb
mov
add
sahf
or
shl
add
jle
fstl
pop
les
cmp
lcall
add
int3
test
popa
mov
stc
mov
jmp
mov
xor
insb
popf
test
push
inc
push
inc
jl
add
or
add
xchg
in
cmp
pop
pop
push
frstor
div
xchg
cmp
or
cmc
imul
fildl
add
flds
add
xchg
out
inc
out
mov
cmpsb
inc
ds
push
and
mov
jbe
shl
test
mov
xor
xchg
mov
arpl
in
inc
mov
aaa
roll
hlt
loope
outsl
cwtl
or
adc
imul
sub
ljmp
push
add
roll
in
daa
mov
add
adc
aas
xor
movsb
in
add
or
xor
in
les
aaa
outsl
cmp
imul
aam
in
or
addb
add
jne
es
mov
sub
sbb
add
arpl
pop
test
sub
adc
aas
mov
jne
les
or
and
cmp
add
jns
sub
mov
mov
xor
xor
bnd
mov
push
adc
xchg
mov
inc
dec
mov
jp
push
add
in
call
cmpsl
xchg
add
gs
imul
mov
jecxz
add
mov
push
notb
add
xchg
aad
push
add
enter
add
das
jg
cltd
cmp
adc
orl
gs
push
dec
aam
int3
adc
push
sub
dec
ret
mov
stos
add
xchg
das
jae
sbb
stos
scas
mov
inc
xlat
inc
out
add
xchg
sbb
in
cld
or
imul
movsb
cmp
outsl
mov
les
add
bound
fs
pushf
fcoml
call
inc
outsb
imul
pmulhw
add
lea
or
ljmp
pop
fs
das
mov
shll
jbe
scas
mov
add
xchg
push
nop
insb
mov
shrl
les
add
jns
sub
imul
stos
mov
sbb
mov
jl
push
sub
outsl
add
adc
lods
add
sub
mov
inc
mov
dec
test
movsb
fidivrl
push
std
les
mov
scas
push
insb
les
jge
rorb
pusha
mov
ret
pop
pop
jl
mov
add
mov
push
mov
dec
adc
aad
test
ljmp
add
test
add
cs
or
lock
cmpl
outsl
popf
popf
popf
mov
movb
mov
mov
xchg
les
dec
mov
xchg
subb
and
bound
mov
sbb
add
pusha
cli
cmp
add
scas
add
add
jg
bound
mov
in
add
popa
push
add
cmc
out
je
add
inc
add
push
mov
imulb
iret
jp
rolb
ljmp
add
xchg
push
jns
test
push
sub
testb
fildl
test
xlat
adc
lock
mov
mov
add
lods
jmp
testl
lods
mov
pop
call
or
arpl
add
and
mov
xor
xor
cwtl
ds
jne
add
jno
fs
aam
inc
add
ret
mov
out
add
dec
leave
add
insb
cli
ss
repnz
pop
stos
shlb
xchg
push
cmp
outsl
mov
sub
and
stos
push
rcrb
inc
mov
jle
jae
test
mov
addb
add
dec
addr16
imul
pop
pushf
insb
xchg
jbe
xchg
popf
andl
add
push
xor
xchg
push
es
sub
add
add
sbb
adc
sbb
mov
mov
add
dec
mov
mov
dec
jl
inc
notb
outsl
pop
inc
and
sahf
mov
popa
mov
push
adc
lret
sahf
push
aam
aam
jb
imul
add
idivb
movsb
xor
faddl
or
sub
xchg
and
jb
xor
in
push
ja
xchg
add
fsubr
data16
negb
hlt
or
add
les
mov
push
adc
pop
dec
popf
sbb
pop
mov
lret
mov
das
add
pusha
icebp
inc
js
leave
mov
loop
add
shll
mov
xchg
xchg
cmp
cmp
mov
and
insl
mov
fidivl
dec
negl
aad
mov
pop
stos
jmp
and
mov
add
sbbb
add
incb
enter
in
add
popl
jno
jae
xchg
push
xlat
sti
jnp
sub
or
jmp
shrl
in
add
pop
add
add
sub
dec
mov
xchg
adc
into
or
or
insl
lea
xchg
ja
std
pop
add
sti
iret
int3
test
and
or
movsl
mov
adc
mov
outsl
add
aam
add
add
and
daa
movlps
xchg
lock
lds
loopne
dec
cmp
outsb
inc
loop
lea
cmp
inc
bound
out
cmpsl
add
add
push
out
stos
outsl
jl
loope
das
xor
push
pop
aaa
sub
add
dec
mov
pop
xor
xchg
pop
sbb
loope
pop
add
int3
xor
dec
mov
mov
sti
les
sbbl
pop
test
pop
add
js
punpckhwd
add
in
repnz
int3
jo
push
xor
push
jnp
push
jnp
xchg
push
aam
cmp
ret
lahf
add
xchg
xor
add
pop
add
adc
cmp
ds
adc
dec
cmp
add
and
and
out
fadds
pusha
add
cmpsb
push
push
sbb
xlat
cmp
and
sbb
mov
adcl
ljmp
dec
xchg
xchg
les
stos
lret
jmp
out
adc
sub
add
jbe
jmp
pop
push
jmp
lds
mov
dec
add
add
enter
add
xchg
add
xor
add
in
mov
pop
test
lahf
sub
imul
dec
add
or
sub
push
cli
add
pop
jbe
add
movsl
out
int3
sbb
js
movsb
jl
mov
sub
jb
jmp
sbb
mov
fildl
adc
mov
add
lea
add
jmp
sarl
mov
pop
push
mov
addr16
aam
jns
test
cmp
in
scas
jl
arpl
xchg
rclb
mov
cwtl
and
push
push
fdivr
add
push
cli
outsl
sub
cmpsl
out
cwtl
jnp
xor
out
adc
add
repz
loop
sahf
shl
cwtl
pop
rol
repz
pop
sbb
int3
add
call
rcrl
rcrb
mov
or
sub
iret
mov
pushf
jle
add
add
jns
push
lcall
mov
lret
xchg
adc
pop
add
scas
lea
or
shlb
fnsave
inc
je
cmc
push
mov
or
add
lcall
add
add
xchg
add
and
mov
cld
xchg
lods
mov
sub
add
daa
and
or
xchg
and
jbe
jb
fst
mov
fwait
lods
add
adc
xchg
pop
adc
mov
jne
sbb
xchg
mov
push
test
add
cmp
imul
out
add
cli
pop
movb
in
sub
add
mov
icebp
or
popa
pop
movsl
negl
add
loope
cmp
and
stc
fdivs
add
iret
lcall
pop
mov
test
aad
loop
cmp
orb
lret
sub
jl
cwtl
mov
push
inc
xor
jp
out
jmp
adc
ljmp
in
out
sahf
test
add
cs
mov
mov
repz
cli
sbb
mov
jmp
and
sbb
sub
add
enter
push
mov
or
mov
add
xchg
sahf
adcb
jno
in
add
sub
xor
xlat
lret
mov
jns
fisubl
push
pop
fildll
adcb
into
sar
add
ds
add
jp
xchg
add
addl
jnp
cmp
mov
or
adc
testb
lret
push
shlb
xor
add
sbb
push
inc
jge
scas
inc
jecxz
iret
xor
sub
es
cmp
iret
test
add
add
xchg
mov
add
fs
or
mov
fucomp
fsubs
nop
push
popf
pushf
and
clc
stos
mov
loope
aaa
hlt
rclb
push
adc
loop
add
decl
adc
xor
rol
jecxz
dec
mov
sub
clc
mov
sarl
add
hlt
mov
movsb
aaa
out
ljmp
mov
jg
cmp
idivl
inc
add
jnp
movsb
add
mov
mov
inc
scas
clc
mov
incl
inc
and
pop
jo
lods
mov
add
xchg
adc
adc
jg
outsb
and
dec
add
or
push
movb
lods
mov
push
push
sti
add
sbb
cmpsl
gs
push
loope
inc
pop
movsl
add
pop
test
inc
dec
xor
add
cmpb
lds
arpl
xor
add
clc
decb
lock
adc
popl
jl
add
aaa
mov
mov
add
ret
and
std
cwtl
enter
add
lock
adc
mov
add
or
sbb
inc
fiadds
arpl
xchg
add
add
dec
test
cmpsl
repz
or
add
or
scas
push
or
pop
cwtl
cltd
push
add
mov
imul
jge
shr
add
out
mov
add
loop
dec
jnp
sub
mov
dec
sahf
stos
add
mulb
sub
rorb
mov
and
icebp
push
imul
fisubrs
xchg
add
outsb
outsl
loop
stos
push
insl
test
push
mov
scas
add
add
add
push
mov
jge
or
cmp
jae
jae
adc
lcall
mov
pinsrw
pushf
lea
fimull
aad
int3
ror
pop
cmp
les
pop
jmp
and
adc
jno
outsb
cmp
aaa
fnsave
add
and
mov
arpl
out
repnz
add
sbb
aad
push
in
cmp
push
leave
fcoms
jae
leave
add
mov
add
mov
add
add
xor
jo
xor
lcall
popl
cmovp
add
mov
sub
gs
popa
add
jg
shlb
incb
mov
popa
cmp
cmp
ja
fnstenv
mov
add
add
push
add
xlat
add
js
xor
adc
inc
add
add
repnz
pop
jne
shl
adc
add
ret
jae
int
movsl
cmp
aaa
test
std
mov
ljmp
hlt
scas
add
add
jb
test
mov
dec
add
dec
xor
mov
add
inc
cmp
xor
cmpsb
ffree
out
fnsave
add
js
cmp
push
dec
sbb
add
out
mov
sbb
popf
jno
inc
sub
pop
aad
leave
dec
enter
insl
cmpsl
adc
ret
int
cld
mov
add
stc
and
mov
xor
mov
insb
xchg
jae
and
repz
mov
pusha
aad
mov
add
mov
cwtl
nop
mov
scas
and
xlat
add
stos
and
inc
movsl
icebp
mov
in
mov
add
xchg
add
dec
ds
lods
inc
aam
dec
inc
call
sbb
arpl
dec
or
stos
and
sbb
add
push
add
into
fs
push
and
into
lods
aas
dec
add
push
xchg
cmp
cmp
imul
ds
push
out
xchg
testb
adc
fistpll
arpl
in
js
and
adc
mov
push
cmp
add
inc
push
push
add
or
xchg
adc
notb
mov
add
lds
cmpb
sbb
sbb
cli
pushf
lcall
add
dec
loope
cmc
test
cs
mov
addb
add
add
ss
add
push
jle
daa
pop
sub
jnp
pop
and
dec
dec
jle
or
clc
mov
lea
js
int3
pop
pop
add
sbb
pop
imul
lods
mov
jno
jns
pushf
xchg
mov
push
icebp
into
pop
push
stos
repz
cmpsb
mov
xchg
add
nop
aas
loopne
mov
loope
xor
mov
clc
rolb
rcrl
dec
icebp
pop
rcll
mov
stos
std
push
pop
and
xor
dec
nop
dec
mov
dec
pop
jecxz
cmp
mov
add
xchg
cmpl
gs
aam
push
div
xor
pop
dec
mov
xchg
mov
jmp
mov
add
roll
out
stc
push
jmp
sub
inc
pop
repnz
out
aas
mov
test
sti
repnz
add
add
dec
dec
popf
add
adc
neg
insb
iret
add
pop
fcoms
lods
fsubl
add
push
inc
daa
mov
jle
ljmp
cmp
clc
xchg
cmp
rorb
add
scas
sbb
add
mov
js
jns
add
pop
xchg
sub
cld
mov
sbb
add
in
push
push
in
faddl
lret
fisttps
insb
mov
mov
pop
inc
lods
insl
mov
add
sbb
stc
xchg
mov
fstl
pop
int3
out
into
xchg
cwtl
pusha
xor
add
sbb
neg
test
jl
and
test
cmp
dec
sub
jae
add
xor
add
dec
add
jecxz
mov
loope
add
mov
xchg
loopne
sarl
mov
in
pop
sub
pop
rep
push
adc
mov
jnp
nop
sbb
lret
shll
es
inc
add
adc
xchg
popa
fs
xchg
lods
mov
clc
sub
jge
and
push
repnz
or
add
fdivl
cmpsl
ficomps
fdivrl
out
xor
clc
sub
xor
jne
xchg
pop
lcall
mov
cmp
bound
cs
cltd
in
add
cwtl
and
cmp
xchg
test
aaa
add
adc
inc
dec
cmc
jmp
cmc
daa
jp
scas
and
rcrl
dec
mov
cli
decl
mov
jbe
sbb
insl
stos
lock
das
shrl
jp
add
add
ficoms
les
push
sbb
fildl
out
cltd
fisttpll
mov
dec
lds
imul
adc
or
mov
jbe
add
mov
add
add
push
push
scas
or
insb
cmp
jo
fisttpll
and
hlt
push
out
push
dec
add
sahf
fcompl
pop
out
xchg
es
add
and
cs
cwtl
add
ds
ret
mov
clc
ficompl
sahf
xchg
test
jb
inc
inc
add
fbstp
aad
cltd
cmp
add
mov
dec
cli
rclb
push
out
jnp
in
sub
andb
aam
cmpb
out
pushf
rorl
add
push
xlat
mov
cmp
add
add
add
mov
xor
nop
dec
testl
fnstcw
xchg
add
add
sahf
fisubl
jno
jae
fcmovne
aam
xchg
add
push
sub
lret
add
and
add
add
add
jg
data16
in
add
add
xchg
sub
xor
adc
mov
stc
xor
add
push
cwtl
add
push
pop
dec
pop
sub
xor
add
shrl
dec
inc
pop
mov
and
fadds
jae
sub
dec
or
lahf
mov
addr16
sbb
leave
scas
clc
ret
xor
arpl
or
mov
push
sbb
xchg
cmpsb
mov
xchg
jne
aas
addr16
cmp
inc
push
mov
mov
jns
add
add
frstor
lds
lods
jg
popa
add
stos
add
xchg
pusha
out
and
mov
push
roll
int3
test
inc
add
add
cmpb
fidivrl
push
and
add
xchg
mov
inc
shr
push
add
and
sub
mov
int3
out
jl
add
out
jbe
push
in
pop
movb
pop
sbb
xor
or
ret
add
add
mov
add
addr16
sbbw
cwtl
cmp
jecxz
and
and
sbb
ret
mov
push
fnsave
loopne
mov
add
icebp
inc
stos
in
or
push
inc
lret
mov
or
add
es
aam
rolb
xlat
ljmp
addr16
add
add
fnop
sub
aas
insl
cmc
sub
cs
dec
fcomps
jbe
add
clc
cmc
scas
cli
test
mov
lods
mov
loop
xorb
xchg
jecxz
jae
movsb
jne
ja
sub
inc
xor
adcl
push
in
push
add
sbb
popf
les
loopne
add
cltd
lret
jbe
push
jmp
add
mov
lret
dec
and
out
push
test
rolb
xchg
popa
mull
mov
rolb
and
idivb
pop
push
addr16
pop
and
sbbl
in
or
xor
shlb
adcb
cmp
cmp
enter
call
mov
xor
xchg
fistpll
and
xchg
sbb
loop
add
arpl
mov
jmp
inc
stos
dec
add
mov
xchg
das
add
add
push
dec
add
xchg
subl
xchg
jno
xchg
adc
mov
push
cli
jge
push
popa
call
add
lock
add
xor
mov
dec
in
js
movsb
rorl
mov
add
sahf
or
popf
fwait
mov
movsl
add
cwtl
push
enter
shrb
adc
dec
push
and
sti
add
addb
jmp
leave
add
stc
jns
xor
mov
enter
sar
jmp
jl
jno
je
outsb
pop
mov
cmpsl
xor
xor
hlt
add
mov
cmp
add
ret
sbb
xor
add
ret
mov
aaa
das
jge
mov
lret
lods
js
mov
out
sub
stos
stos
orl
adc
test
or
push
xor
rcrl
xor
jp
fcomip
add
inc
add
pop
js
add
popf
or
push
outsb
lock
add
lcall
cltd
dec
js
clc
mov
push
mov
in
jne
lret
in
adc
loop
orl
lock
adc
inc
in
adc
mov
pop
or
int3
push
add
xchg
loope
jmp
jae
outsl
add
add
add
stc
sbb
mov
lret
leave
enter
push
scas
or
push
add
or
sbb
add
sbb
mov
cmc
cmpsl
jbe
cld
stos
jb
push
add
fisubrl
lock
cld
testl
addb
pop
inc
xor
jne
repz
mov
fimull
inc
add
sub
mov
mov
popa
call
add
add
pushf
jbe
movsb
add
dec
add
stos
add
add
test
arpl
xchg
jbe
xor
movl
testl
or
in
add
rolb
mov
add
aam
sub
xchg
xor
and
int3
dec
push
jle
leave
pusha
sbb
jl
repz
jg
push
rolb
jbe
mov
cli
cmp
test
jge
push
lods
add
add
push
push
movb
xor
or
dec
lcall
lds
mov
incb
or
inc
add
repz
mov
es
push
dec
cmp
arpl
ja
add
add
add
fmull
cs
inc
test
sub
scas
rolb
sbb
jnp
xorl
stos
jo
xor
mov
aad
or
scas
sbb
enter
xchg
add
xchg
pop
cmpsb
stos
push
and
test
mov
in
jnp
scas
popf
outsl
cmp
cmp
inc
mov
loope
out
stos
mov
pop
fildll
add
and
je
inc
add
mov
mov
aad
sub
add
cmp
pop
pusha
xchg
dec
inc
push
xchg
sbbb
fs
or
pop
outsl
fcoml
push
add
mov
fidivs
add
rclb
cli
jbe
cmp
jae
lds
jae
adc
jae
inc
inc
loop
add
int
mov
ljmp
mov
add
pop
push
add
adc
push
cmp
pop
aam
add
or
push
aaa
stos
aad
mov
or
jbe
stos
and
dec
add
flds
jg
add
add
sub
xchg
fisubl
pop
insl
add
rorb
mov
xor
mov
adc
mov
add
pop
in
add
xchg
sarl
lea
cwtl
lods
fcompl
inc
out
inc
xchg
cmp
and
push
add
addb
add
jmp
xor
psllw
add
cs
cmp
or
jno
cs
jno
mov
add
inc
fisubrl
sbb
or
xor
rcl
sbb
shrb
mov
test
fs
outsl
in
movl
jge
cmp
shl
xor
das
loope
add
add
lcall
cmp
cmp
or
sbb
stos
cld
popa
add
je
pop
mov
ljmp
dec
jb
push
jmp
xchg
stos
mull
push
pushf
scas
pop
stc
adc
sahf
sbb
cmp
cmp
sbb
mov
popf
cltd
add
sub
sar
add
outsl
push
cs
add
bound
jbe
int3
arpl
lods
je
add
or
clc
hlt
cli
or
jp
lock
std
jae
pop
imul
dec
add
cltd
or
movsb
mov
in
loopne
lcall
rcrb
mov
hlt
hlt
mov
js
add
mov
add
data16
dec
fisttpl
mov
out
xor
sub
add
add
bound
or
dec
xor
call
in
faddl
mov
pop
cmp
pop
mov
int3
sbb
or
cmp
sbb
and
push
dec
jns
movsb
jecxz
stos
ljmp
mov
add
mov
adc
mov
bound
roll
pop
mov
lahf
mov
add
js
movb
lds
cmp
cmpsb
or
sub
adc
push
jbe
cs
loop
hlt
aad
and
xor
push
add
aam
std
cmp
repz
nop
ja
add
imulb
add
xor
lahf
sbb
mov
in
ret
xchg
addr16
add
ss
push
lcall
mov
add
arpl
sarl
add
inc
imul
or
icebp
aaa
add
lds
lcall
push
push
mov
cmp
pop
dec
rcr
mov
out
add
add
insl
sbb
inc
cmp
addb
add
pop
js
add
lock
out
mov
mov
add
and
cmpsb
jae
test
add
xor
int
shll
repnz
sub
fsubl
in
out
jbe
adc
add
inc
filds
aaa
ret
jmp
loop
add
mov
or
xorb
loop
shlb
test
jae
sti
out
mov
inc
popf
movsb
jbe
faddl
xor
movsl
add
jb
sti
add
add
pop
adcl
mov
lcall
int
shrb
into
add
sbb
addl
fisttpll
dec
iret
jg
ljmp
shl
in
add
in
pushl
or
out
xor
sbb
adc
int3
test
jnp
fists
sub
mov
push
fs
jae
inc
aaa
push
add
jge
loope
sub
xor
es
mov
add
arpl
pop
add
add
mov
cld
es
xchg
jb
lret
add
mov
jl,pn
add
and
and
pop
stos
add
sti
mov
lock
test
add
jge
push
xor
mov
mov
loope
fstl
in
cmc
mov
cmp
xor
mulb
out
shrl
movsb
iret
insb
or
arpl
add
test
add
add
fmul
inc
add
mov
mov
jne
adc
add
add
jnp
mov
jo
cwtl
sub
fwait
testb
addr16
push
xor
cmp
aam
push
shrd
hlt
and
push
add
mov
dec
sbb
add
jle
add
nop
es
aaa
mov
sbb
xchg
repz
mov
mov
test
mov
add
and
les
jecxz
mov
dec
cmc
fcompl
andb
ss
test
int
mov
mov
pop
mov
pop
and
test
add
les
ja
and
sbb
add
add
es
adc
add
pop
mov
test
add
rcll
imul
inc
add
das
call
scas
inc
movsl
push
add
push
pop
insb
in
dec
xlat
push
jecxz
mov
sbb
mov
add
cmp
sti
add
jge
cmp
dec
push
cmp
pop
fstpt
add
jno
adc
jo
and
aam
and
sbb
push
stos
andl
xchg
cmpsb
add
mov
arpl
jge
sti
cmp
xchg
repz
es
imul
mov
sub
xlat
sub
inc
jnp
loop
mov
mov
inc
pop
or
pusha
ja
add
es
add
out
add
cld
mov
call
ja
mov
mov
adc
stos
insl
add
nop
jle
pusha
inc
lods
lock
mov
into
cs
xchg
xor
jo
push
jp
fwait
or
movsb
add
nop
out
jns
roll
outsb
push
xchg
lret
xorl
das
std
shlb
or
test
jecxz
cltd
adc
jns
clc
push
fisttpll
call
add
cmpsb
movsb
add
sbb
add
in
mov
push
xor
add
add
add
add
xor
popa
mov
repnz
sbb
cmpsl
hlt
shll
mov
cmpsb
std
add
sbb
add
movsl
jb
push
dec
or
mov
je
mov
scas
inc
lods
adc
pop
pop
add
divl
add
pop
inc
add
mov
dec
add
push
ss
in
push
xchg
in
sbb
jge
xor
in
jo
rcll
test
mov
out
adc
scas
add
cmpsl
sbb
xor
fcomps
cmp
jle
add
sahf
add
out
or
in
xor
test
add
dec
flds
xchg
push
fidivs
sbb
cmp
jnp
inc
enter
cmpsb
cli
push
das
and
xor
insb
int
mov
fwait
add
adc
pop
add
scas
movsl
into
pop
dec
jb
cltd
ss
stc
test
sbb
add
inc
jne
ret
mov
nop
mov
data16
mov
andl
in
add
lahf
xor
test
add
ret
jl
add
fwait
add
cmpsl
lock
sub
in
xchg
xlat
inc
xor
and
mov
add
mov
xchg
add
sahf
push
cmp
popf
lret
add
test
sti
jns
out
add
push
stos
in
cmp
dec
add
cmp
mov
push
cmp
je
pusha
sbb
aas
fcmovnu
hlt
pop
add
in
and
inc
sbb
fwait
shrb
in
pop
movsb
add
mov
inc
pop
sbb
push
pop
jb
mov
fistps
xor
pusha
xchg
push
test
dec
and
pop
mov
push
hlt
js
xchg
inc
mov
jg
sub
sub
cmpsl
inc
jne
pushf
add
insl
mov
push
xchg
jb
inc
int
pop
mov
fucomp
add
xor
outsb
rolb
aaa
jnp
add
sub
call
add
pop
rolb
mov
add
rol
push
add
enter
addr16
push
or
xchg
add
add
add
push
mov
adc
sahf
xlat
mov
mov
push
cmp
cmc
jae
push
nop
scas
nop
mov
ret
mov
popa
sti
in
mov
pop
push
xchg
adc
fadds
je
test
dec
sub
inc
ret
add
iret
stos
loopne
mov
lods
sti
mov
faddl
sbb
push
xchg
mov
lahf
add
jg
add
faddl
push
dec
push
lcall
sbb
add
push
jno
push
loop
std
int3
add
mov
sbb
fisttpl
adc
add
int3
daa
lret
mov
inc
inc
rolb
in
rolb
inc
xor
leave
xchg
mov
push
sbb
pop
rol
les
ficoml
stos
push
add
push
sub
pop
jp
and
add
inc
adc
cld
xor
loope
jp
add
mov
pop
add
add
and
cmp
pop
call
mov
and
pop
cmp
aas
jnp
jp
flds
push
pop
add
lds
add
frstor
call
add
or
add
pop
rcll
push
inc
xor
add
mov
push
iret
adc
or
cld
test
mov
stc
insl
xchg
dec
cmp
mov
jg
lcall
add
xlat
lds
data16
stos
cmp
xchg
add
insb
aaa
fiadds
in
repz
adc
sbb
inc
subb
pop
add
jbe
mov
jl
insl
rcl
mov
cmp
rolb
add
cmpsl
aaa
xor
mov
add
lcall
ljmp
adc
sbb
xchg
jecxz
add
add
mov
inc
lret
loop
out
add
adc
fsubl
cmp
inc
jg
jl
jno
lret
xor
add
aas
dec
pop
add
leave
xchg
mov
arpl
enter
sbb
inc
inc
lret
sub
iret
stos
adc
mov
aad
hlt
dec
pop
test
sub
testb
sub
push
add
add
aaa
push
sahf
jg
arpl
add
xor
mov
sbb
add
add
out
xchg
mov
call
push
inc
push
sahf
adc
ror
out
xchg
mov
add
push
mov
aad
dec
add
jecxz
testb
lret
add
add
test
dec
cmpsb
xchg
cmpb
add
add
and
dec
dec
mov
cmp
jo
add
mov
jnp
repz
mov
leave
in
adc
cmp
str
call
popa
dec
jno
cmp
out
push
jae
push
add
add
add
mov
mov
add
jo
xor
sub
xlat
ret
mov
aaa
test
bnd
xchg
inc
and
pushl
mov
cmp
je
movsb
test
mov
and
add
and
in
add
inc
pop
xor
fwait
pop
sub
jecxz
pusha
bndldx
sub
int
shll
mov
cmp
leave
scas
add
rolb
lret
imul
lds
inc
add
pop
pop
or
gs
cmpsl
mov
sub
lea
mov
aam
cmpsl
sub
cmpsb
jnp
test
shrb
add
xor
cmpsb
jno
stos
std
add
pop
adc
mov
cmpsl
shr
push
cmp
jnp
insb
push
xor
mov
inc
loope
fsubp
inc
sbb
inc
cmp
imul
jle
and
or
gs
cwtl
repnz
add
sbb
es
inc
add
cmp
dec
pop
inc
push
mov
decl
into
outsb
stc
xchg
add
call
jmp
loope
sti
mov
jnp
pop
iret
push
xchg
xchg
ljmp
loopne
sbb
add
xor
outsl
inc
or
js
out
add
add
sbb
and
lods
arpl
dec
add
ficoml
ja
out
mov
dec
push
sbb
shl
adc
int
sbb
jmp
cmpsl
jmp
mov
faddl
sbb
mov
rolb
stc
sub
inc
xchg
icebp
add
out
jle
xor
jbe
add
add
ljmp
mov
lret
cmp
add
mov
aad
in
lret
stos
lahf
loope
imul
dec
cltd
add
push
fdivrs
mov
insl
push
push
push
inc
test
add
hlt
pop
add
leave
xlat
push
out
ljmp
add
add
sbb
xchg
rcrb
jne
mov
addb
and
mov
sbb
ja
jmp
test
cmp
lcall
push
fcomps
jo
insb
sub
jecxz
xchg
dec
movsl
cmpsb
notl
push
fisttps
addr16
push
push
pop
imul
mov
cmp
out
cmp
push
test
rorb
adc
jle
cmp
in
roll
jae
mov
mov
sub
sub
leave
mov
fists
mov
pop
sbb
daa
add
iret
xor
pop
xlat
and
adc
push
outsl
mov
jo
add
or
dec
mov
xchg
push
pop
iret
or
imul
pop
adc
mov
and
add
ss
push
xchg
test
out
add
aam
pop
pop
mov
outsl
adc
push
and
test
cwtl
push
xchg
add
push
add
mov
dec
mov
faddl
fists
repz
add
lcall
aas
ja
xlat
rclb
pop
jecxz
xchg
pop
dec
and
push
xchg
aad
add
movsl
dec
cmc
or
jne
jns
pop
dec
xchg
rcr
push
mov
fmuls
popf
add
loopne
stos
fcoms
dec
imul
test
dec
fstl
js
cmp
mov
stos
add
in
and
adc
add
adc
jb
and
add
jle
inc
loope
fnstenv
roll
movl
lret
sarb
add
adc
xor
iret
push
scas
add
insl
sub
outsl
dec
sarb
cltd
mov
push
push
call
push
add
int
in
das
in
dec
aas
pop
add
sbb
adc
push
cmp
add
or
in
mov
pop
add
adc
adcl
push
add
add
mov
lods
mov
incl
aad
out
dec
add
ret
xchg
in
popa
xchg
add
inc
lret
add
jecxz
rcr
mov
ss
nop
lret
lds
push
add
and
fldl
inc
imull
xchg
loop
idivb
aam
addb
test
in
fwait
out
inc
cmc
add
cwtl
mov
sub
imul
mov
test
cmp
nop
insb
mov
adc
and
pop
mov
sbbb
xchg
daa
dec
mov
cmp
sub
fsts
and
ss
xchg
js
or
cli
sbb
add
or
sub
cmc
ljmp
jae
cmp
xchg
add
je
jl
int3
cmc
add
xchg
outsl
mov
cmc
es
aam
popf
arpl
add
popl
add
cs
dec
leave
dec
jmp
std
add
add
lds
rclb
xor
adc
lret
xchg
daa
in
sbb
or
xor
fiadds
inc
mov
inc
std
sti
inc
cmp
rcr
add
mov
push
jl
push
sbb
popa
sbb
add
mov
push
jae
cltd
inc
cmp
or
or
aam
adc
mov
inc
ret
loop
add
xchg
cld
mov
jb
lods
jmp
add
ljmp
dec
pop
add
dec
lret
clc
int
aas
add
outsb
adc
add
rorl
jge
add
mov
add
cmpsb
loop
xchg
cmp
add
cld
fsubp
mov
stc
cmp
and
ja
sub
inc
mov
insb
sub
and
js
jns
lock
add
pop
adc
mov
cmp
sub
rclb
pop
inc
add
add
aad
cmp
faddl
fildl
imul
pop
xor
clc
push
and
xchg
cmp
aad
lods
pop
lds
push
adc
dec
jmp
push
adc
add
rorb
inc
fdiv
sub
add
sbb
add
mov
push
incb
mov
jg
add
inc
scas
fwait
sti
cmpl
pop
adc
and
xchg
add
xchg
movb
sub
inc
frstor
mov
mov
lea
bound
loopne
and
pusha
ds
add
jae
xor
sarb
pusha
jmp
mov
rcr
add
insl
cmpsb
and
sub
or
scas
dec
sub
push
mov
add
lds
push
stos
mulb
sbb
sbb
xor
int3
inc
test
jmp
test
jns
mov
scas
stos
int
pop
out
lods
add
mov
mov
inc
pshufw
sbb
repnz
repz
jl
jns
add
and
fildll
rcll
add
pushf
imul
int
cmp
cli
js
or
daa
xor
mov
mov
test
xor
shlb
add
jp
dec
pop
jae
mov
inc
stos
dec
jl
out
fsubs
scas
int
movsl
push
cmpsb
add
stos
mov
jae
xor
xor
mov
mov
push
sub
sahf
xchg
bnd
and
xchg
insl
loopne
cltd
in
sub
add
add
or
lock
sbb
mov
mov
stos
sbb
jne
add
aaa
mov
jecxz
mov
inc
add
push
movsb
mov
pop
jmp
popf
push
or
cmp
or
xlat
xchg
add
aaa
in
dec
dec
iret
jl
mov
aad
je
inc
adc
cltd
mov
out
nop
push
aaa
add
addl
xor
add
insb
leave
sub
add
and
jle
insb
es
arpl
pop
aam
sub
cmp
pop
lods
sub
xchg
mov
add
jp
xchg
and
sub
faddl
push
cwtl
sbb
jg
lea
roll
and
add
ret
cld
cmp
push
add
sbb
mov
xchg
je
inc
add
mov
mov
fdivrs
test
rcr
mov
mov
jbe
mov
or
push
dec
add
jne
std
inc
inc
loope
in
lret
mov
xchg
in
cmpsb
add
fst
sti
jae
add
in
fadds
add
mov
ljmp
jo
imul
or
add
push
or
in
into
orb
bound
add
cmp
add
pop
cmp
push
push
or
lock
popa
ljmp
jnp
mov
aaa
jb
cltd
shrb
push
mov
or
inc
lods
movsl
add
jge
outsb
push
outsl
mov
sub
nop
jae
into
je
push
jb
add
inc
pop
hlt
repnz
mov
add
pushf
push
dec
in
xchg
or
pushf
pop
dec
add
aaa
insb
push
faddp
sub
or
ret
jle
call
adc
push
loope
sub
jle
lods
test
js
mov
cmp
pop
imul
inc
push
sub
rcrl
pusha
in
in
jb
mov
add
adc
pop
inc
xchg
add
orb
in
fcmovnu
sbb
int3
cmp
cmpsb
adc
add
xchg
add
mov
fs
add
inc
sbb
scas
add
dec
mov
mov
jnp
cmp
loop
or
add
jmp
enter
add
pop
push
push
sbb
hlt
fwait
loop
rolb
add
loope
iret
sbb
push
imul
inc
lret
movsl
add
hlt
pop
mov
inc
lods
cli
das
xchg
insb
out
jg
mov
and
mov
in
das
add
pop
add
xchg
arpl
lock
sub
fsubl
addr16
add
popf
dec
add
fs
imul
pop
rol
rorl
cmc
pop
xchg
cmpsb
mov
pusha
inc
add
dec
sub
xor
cmp
ficompl
addl
jge
and
add
add
cmpsb
ss
xor
push
in
rclb
jge
loopne
xchg
daa
cmp
add
push
inc
fwait
add
or
popf
pop
xchg
ret
fcmovne
inc
int
sarl
push
jne
sbb
imulb
add
aas
pop
popa
fs
insl
daa
inc
in
mov
or
fdivrs
sub
and
fucomip
rolb
cmc
les
mov
ror
mov
inc
add
mov
add
aas
jecxz
cld
push
or
bound
lds
jp
mov
in
js
fistl
negb
adc
push
or
mov
mov
repz
dec
stos
and
outsb
int3
add
add
sub
mov
mov
in
add
add
add
mov
xor
test
add
cmp
add
rolb
push
push
jae
test
add
jo
sub
repz
and
dec
leave
cmp
adc
insl
out
es
cs
int
fadds
pop
fwait
movsb
and
xlat
lds
jmp
mov
scas
lret
or
es
or
test
or
inc
lds
sbbl
xchg
xchg
aam
sbb
in
sub
xchg
imul
pop
mov
icebp
cmovp
mov
or
leave
mov
mov
fldcw
xor
mov
lahf
and
lods
add
out
add
flds
sbbl
and
mov
pop
or
or
xor
in
add
adc
fdivrs
add
sahf
add
add
and
xchg
adc
in
xchg
pop
mov
mov
sbb
arpl
xchg
gs
fsubrl
fisubl
addl
mov
add
lret
aaa
lahf
add
or
loope
dec
xchg
stc
push
cli
mov
out
jb
adc
sub
or
sub
sbb
hlt
push
loope
add
add
cmp
loopne
orb
fbld
add
repz
push
mov
add
daa
lcall
add
dec
or
mov
adc
sbb
mov
pop
mov
adc
aas
mov
push
add
shll
es
dec
test
inc
cmp
imul
cmp
arpl
push
mov
incb
arpl
inc
add
cmc
add
ficoms
in
adc
fucomp
fs
jae
in
dec
ss
xchg
loop
jne
sbb
outsl
pop
std
pop
mov
add
sbb
outsl
aam
push
lret
add
lret
add
jge
add
mov
mov
sti
cmp
add
rcl
mov
inc
jb
xor
pop
mov
push
ljmp
leave
xor
shlb
ret
or
test
and
cmp
jmp
loop
cld
xor
lret
sub
cltd
rorl
cs
popf
mov
add
xchg
dec
and
aam
xor
popa
xor
mov
outsl
dec
add
mov
mov
xchg
sahf
add
andl
sub
out
lods
or
jp
ss
sub
adc
in
add
and
adc
mov
aas
jecxz
dec
mov
hlt
add
sbb
jge
stos
add
cli
sub
out
jne
std
test
mov
sub
inc
mov
fst
cs
gs
lods
add
cld
and
test
mov
add
inc
add
enter
jae
xchg
or
mov
xor
stos
mov
subb
mov
push
in
adc
inc
or
add
mov
je
pushf
mov
int
movsb
cmp
scas
sub
inc
and
into
out
mov
outsb
add
ljmp
lret
aam
cli
and
adc
dec
loope
je
add
je
cltd
and
sub
cltd
movsb
lcall
jno
adc
sar
shll
int3
mov
scas
repnz
pop
pop
nop
mov
cmpsl
dec
sub
add
sbbl
pop
mov
rcrb
cld
xor
test
xorb
add
ljmp
xlat
in
imul
fimull
mov
insb
lea
sbb
xlat
das
adc
lret
adc
adc
dec
jmp
mov
rcrl
push
popf
inc
test
adc
push
out
add
ret
adc
daa
push
xor
loopne
pop
mov
pushf
popf
ss
fists
bound
inc
jecxz
cmpsl
cmc
push
dec
js
xlat
fstps
xor
mov
call
push
push
push
clc
lods
addl
aaa
cmpsl
test
sbb
and
pop
cli
xlat
adc
cmp
pop
mov
push
inc
jbe
loopne
iret
mov
pop
aas
and
movl
and
jnp
pop
jne
adcl
nop
test
mov
ret
icebp
dec
jns
or
mov
add
add
adc
adc
pop
push
mov
scas
gs
push
or
ret
imul
rolb
mov
rorb
add
xchg
jl
iret
dec
sbb
fwait
stos
cmp
fs
inc
aad
pusha
push
mov
dec
mov
pop
add
jns
add
jno
adc
in
inc
or
ljmp
mov
call
jmp
xlat
inc
cltd
lds
addr16
out
iret
dec
inc
push
add
add
cmp
or
mov
enter
stos
or
scas
into
push
push
adc
dec
pushf
fdivr
daa
ds
pop
sbb
mov
insb
jbe
lods
movsl
xor
pusha
imul
add
sbb
lcall
rcl
push
jne
enter
lcall
xchg
ljmp
mov
ljmp
add
popa
inc
sub
xchg
push
mov
jmp
and
mov
insl
xor
filds
aam
push
inc
clc
in
xor
add
dec
xor
add
add
int3
lods
xor
add
mov
cld
cmp
inc
adc
mov
mov
and
sti
sahf
dec
lcall
and
add
lret
mov
cltd
enter
loop
mov
mov
in
xor
mov
ltr
add
nop
sbb
mov
addr16
xor
mov
cwtl
rcll
xchg
rcll
inc
bnd
cmp
sti
push
cmp
or
test
stos
pop
es
pop
cli
scas
insl
mov
dec
sbb
gs
jae
in
repz
jnp
jns
inc
scas
jg
shrb
vpshufhw
push
add
shlb
add
mov
add
dec
mov
cmp
push
jne
outsl
add
daa
add
cltd
ds
pop
inc
fs
insb
jo
xchg
dec
jmp
add
xor
fildl
insl
out
cmp
or
roll
fdivs
add
add
imul
cs
inc
push
dec
add
cltd
sub
xor
notb
das
dec
adc
xor
sbb
jb
clc
jp
xchg
push
call
pop
rolb
jns
movsl
inc
pop
pop
jg
shl
ret
sbb
addl
and
jo
pop
aad
dec
pop
cmp
push
push
xor
je
cmp
test
sbb
add
stos
in
or
cmp
pusha
mov
xor
mov
push
add
popa
add
sbb
push
insb
lcall
lock
mov
push
mull
and
in
lea
mov
mov
pop
cmp
int
xchg
outsb
sub
mov
cmp
cmp
add
xchg
add
subb
jb
mov
cmp
clc
pop
cmc
int3
xchg
popf
rcr
mov
add
adc
add
add
fadds
and
jge
dec
add
mov
testb
leave
faddl
paddsb
sbb
lcall
movsb
popa
mov
das
mov
aaa
jae
rcr
xor
mov
leave
or
outsb
pushf
pop
add
pop
out
in
test
ss
mov
rclb
sub
addb
jae
add
sub
mov
add
int3
push
pop
cmpsb
lret
sbb
sub
mov
cmp
imul
mov
loope
xchg
movsb
imul
cmc
add
inc
jno
jmp
jecxz
sub
shl
mov
cld
mov
aas
fsubrl
cmp
add
add
inc
add
cmpsb
adc
push
inc
cld
in
mov
add
fstl
scas
cs
mov
or
aad
test
xchg
in
or
test
mov
bnd
rclb
lahf
add
insb
add
or
int
push
push
sbb
pop
rorb
or
lds
cmp
and
repz
clc
dec
dec
add
mov
lds
imul
enter
mov
add
push
aaa
popf
sbb
and
add
mov
sti
in
mov
aas
int3
or
mov
add
mov
imul
mov
add
pop
add
and
mov
outsl
flds
inc
insb
jmp
jmp
add
es
cli
push
xchg
fisttpl
vmread
insl
xor
jle
cmp
xor
outsb
add
or
in
cmp
jecxz
xchg
stc
js
divb
adc
stos
adc
add
jb
insl
sbb
add
xor
cld
sbb
add
add
jle
stos
mov
add
inc
add
daa
out
pushf
movl
test
mov
or
adc
add
int3
add
stc
pop
inc
mov
js
sub
mov
xchg
jg
fildll
fucom
xchg
bound
arpl
push
push
sub
mov
ljmp
adcb
fsubrs
inc
rcll
popa
sbb
add
daa
push
add
add
sbbb
outsb
and
add
add
das
loop
repnz
call
fldl
xlat
data16
ss
bound
arpl
jmp
push
lahf
aam
add
cmp
add
leave
inc
mov
int
imull
outsl
ja
add
aam
dec
and
arpl
iret
pop
int
lret
jo
pop
out
jo
push
aad
jmp
sbb
fistpl
out
popf
insb
xchg
test
stos
setno
lcall
cmp
inc
mov
add
xchg
test
outsl
lock
mov
mov
out
fwait
sub
std
movsl
jnp
adc
pop
movsl
jl
add
push
mov
lds
jbe
leave
push
cmp
and
add
pushf
out
sarb
xor
into
pop
xchg
push
push
jne,pt
add
add
add
shll
icebp
mov
lea
repnz
add
cmpsb
mov
adc
mov
js
add
add
add
aam
and
or
push
bound
cmc
sub
pop
loope
inc
add
pop
aad
out
push
jb
ljmp
in
ffree
push
dec
js
mov
test
rol
sub
sbb
scas
cmp
mov
mov
xor
cs
sub
add
icebp
jmp
jecxz
add
sub
add
adc
xchg
scas
out
inc
sbb
faddl
push
or
add
icebp
xor
shl
dec
lods
add
pop
add
lds
inc
push
mov
outsb
and
xchg
add
pop
repnz
test
cmp
jge
xchg
shlb
leave
in
inc
out
mov
mov
aad
lcall
out
jo
mov
push
lds
add
lods
xchg
js
add
mov
pcmpgtw
shl
sbb
fs
jnp
xor
push
dec
ret
mov
xchg
ljmp
push
add
loope
add
pop
mov
popa
add
pop
add
xlat
add
repz
xlat
adc
lods
popa
rol
data16
bound
std
test
mov
lcall
lret
sub
push
les
mov
insl
and
push
inc
outsb
push
xchg
mov
dec
movb
pop
adcb
cmp
cli
inc
in
add
cwtl
sbb
int3
rorl
loopne
andl
push
add
push
lea
aas
or
push
pop
verw
dec
add
add
insb
sbb
movb
das
xchg
add
rolb
mov
loope
lahf
push
inc
pop
jns
add
pop
sbb
ljmp
push
dec
cld
inc
aas
add
inc
aam
dec
nop
fsubs
add
and
xchg
jo
in
add
or
lahf
cmc
and
add
dec
add
fldt
mov
mov
icebp
stc
leave
pop
bound
adc
bound
inc
mov
repz
pop
add
loop,pn
stos
dec
and
jns
add
cmp
cmpsb
add
add
mov
stos
mov
sbb
cmpsl
or
mov
sahf
in
js
add
scas
push
insl
iret
xlat
inc
pop
add
mov
mov
add
inc
cmp
mov
lret
ficompl
pop
rclb
loope
pop
xor
pusha
pop
mov
gs
push
push
adc
push
test
mov
fwait
repz
jle
adc
cltd
dec
dec
cmpsb
pop
arpl
mov
adc
sbb
mov
popf
push
pop
pushl
fwait
sbb
xor
mov
jb
pushf
movl
ljmp
jecxz
add
sarb
add
mov
jle
jp
pop
pop
pop
fsincos
add
into
and
push
es
add
pop
dec
fcos
mov
sub
lds
mov
inc
and
test
add
adc
jae
add
sahf
out
pop
dec
outsl
pop
aaa
pop
add
loope
or
add
push
inc
xlat
icebp
fsubrl
inc
cli
sub
scas
les
add
lods
pushf
lcall
stos
and
aaa
jo
lds
pop
xchg
stos
pusha
fwait
dec
pop
inc
mov
out
jmp
add
pop
mov
xchg
xchg
in
dec
loopne
jae
test
test
push
push
jge
mov
pop
add
xchg
pop
fiadds
cltd
ljmp
mov
lods
in
fildl
mov
add
mov
add
gs
and
mov
add
push
insb
sbb
push
cmc
add
nop
pop
fwait
xchg
lret
pop
int3
mov
in
cmp
andl
or
sub
mov
xchg
cmp
add
lods
push
movsb
mov
pop
add
jb
mov
mov
in
jg
arpl
sub
repz
xchg
aam
and
jb
int3
jmp
sbb
hlt
hlt
sub
cltd
xlat
cs
add
add
jns
pop
ljmp
fdivs
rorl
mov
aad
jl
into
mov
incl
cmpsb
push
adc
sti
inc
add
pushf
add
aad
cmp
add
xchg
and
jmp
add
or
pmulhuw
add
xorb
sbb
sub
test
mov
stos
dec
adc
sbb
je
inc
add
dec
in
xchg
mov
or
incb
or
xchg
xor
mov
add
mov
add
ror
push
mov
add
push
cld
aam
stos
cmp
sub
icebp
in
jb
scas
rcrl
test
pusha
push
lea
add
add
cmp
or
pop
add
push
pop
add
pop
clc
imul
add
fcmovbe
cwtl
add
divl
dec
outsb
out
clc
fldcw
jecxz
add
out
icebp
cwtl
dec
imul
cmpsl
out
add
loope
jae
lahf
shl
jns
into
push
add
add
addl
gs
pop
and
add
js
add
int3
cmp
lret
add
xchg
push
add
sbb
fs
pusha
sti
push
data16
push
push
dec
adc
ficoml
add
into
xor
jae
lcall
outsb
jne
mov
arpl
dec
or
jne,pn
insl
addb
daa
sbb
pop
lods
adc
jmp
adc
push
mov
ja
test
ljmp
xchg
add
enter
adc
add
push
jne
icebp
adc
ret
jbe
add
ffree
add
es
stos
add
mov
mov
lods
mov
les
add
nop
mov
int
aad
cwtl
xchg
push
add
cmp
rorl
lcall
je
test
movsl
xchg
xchg
int
add
add
inc
cmp
inc
ja
cli
xor
push
pop
add
add
dec
popf
fs
push
or
mov
add
cmp
or
add
add
adc
lods
fs
leave
cltd
adc
pop
and
xchg
js
frstor
inc
or
clc
call
pusha
addr16
jae
and
inc
mov
int
or
in
xchg
mov
inc
mov
xlat
ret
dec
push
mov
xchg
test
push
or
pop
add
add
dec
add
sub
xlat
mov
inc
mov
movsl
mov
cmp
and
jb
add
jmp
negl
pushf
daa
mov
cmc
aad
call
add
jnp
add
jl
mov
stc
ret
mov
cmp
test
insb
roll
jmp
mov
rol
xchg
inc
mov
mov
cmp
stos
mov
mov
leave
pop
add
add
cmp
add
fwait
push
mov
mov
mov
or
add
xchg
andb
push
dec
add
repnz
inc
mov
insl
in
insl
sahf
pusha
mov
push
dec
push
dec
push
add
dec
xor
add
scas
mov
sbb
xchg
call
pop
fsubrs
and
mov
xchg
add
pushf
pop
sbb
cmp
add
cmpsl
push
or
aad
mov
cmpsb
mov
and
sub
mov
add
rcll
adc
push
test
addr16
fisttps
lea
cwtl
push
add
js
mov
shlb
das
in
pop
mov
stos
push
or
es
adc
mov
add
pop
jbe
push
mov
cli
sar
insb
aam
inc
sub
push
xor
sub
xchg
dec
push
xchg
pop
mov
xlat
xor
lahf
add
xchg
aad
inc
sub
dec
xor
pop
pop
loop
add
add
scas
lret
cmp
lret
in
lea
rolb
cmc
clc
xor
shl
mov
add
sub
pop
rcrl
adc
rol
mov
mov
mov
sub
sub
and
add
mov
roll
mul
stc
add
outsb
ja
mov
scas
outsb
mov
outsb
xchg
aam
outsl
loop
lldt
subl
or
int3
repnz
les
sbb
push
xchg
or
mov
adcl
sbb
leave
sbb
inc
das
xchg
push
sub
imulb
iret
rolb
int
mov
ret
pop
push
ds
ja
sub
inc
or
imul
in
clc
les
pop
and
add
mov
ret
ret
push
cmp
test
mov
jns
dec
cmpsb
sub
add
mov
jbe
xor
mov
add
xor
test
add
hlt
call
add
cld
in
mov
inc
mov
lcall
addl
push
xchg
mov
lea
mov
push
pusha
mov
add
push
add
pop
push
jb
mov
mov
pop
test
les
test
or
add
add
add
jno
add
xchg
aas
jbe
lods
addl
sub
fidivrl
ss
jp
mov
loope
adc
out
repz
jl
sub
test
dec
jl
rolb
xchg
jle
rolb
lea
inc
jp
xor
sub
rcrl
mov
dec
int3
daa
add
lret
icebp
xchg
call
mov
cmp
xchg
and
add
andb
add
xchg
mov
scas
js
mov
clc
or
push
in
mov
fs
cmp
scas
add
clc
pop
mov
or
push
repnz
add
sahf
movsb
sbb
mov
or
lea
jp
jno
lds
add
xchg
testb
bound
xor
add
cmpsl
ret
movsl
icebp
scas
and
addr16
add
add
movsl
dec
jmp
add
mov
ret
movsbl
cli
mov
push
add
add
fnstenv
sub
add
sbb
lcall
insl
push
sub
add
fucomip
xor
cld
mov
lods
add
aaa
lods
je
push
add
cmpsl
jns
inc
pop
bound
mov
push
mov
movsl
pop
in
add
cmp
cltd
les
xchg
inc
pop
fcmovbe
add
int
ret
cmp
cmpsb
repz
movl
push
sar
sbb
stc
pop
pop
lds
jg
lods
sub
imul
bound
xchg
xor
and
sti
xchg
mov
cmpsb
xor
addl
lods
ss
es
jle
or
les
pop
test
int3
loope,pn
lods
adc
adc
cltd
incl
mov
cmp
ret
icebp
add
cs
xor
lods
idivl
into
in
popf
mov
pop
jmp
inc
pop
loopne
cmp
cli
pop
jo
add
lods
inc
iret
add
jb
push
movsl
movsl
add
cmp
xchg
sahf
add
xchg
pop
scas
cmp
and
mov
and
sti
sub
pop
clc
inc
add
call
add
addr16
out
outsb
test
xor
dec
fstpl
inc
xchg
adc
cmp
or
push
xor
out
add
enter
dec
xchg
lea
sub
gs
gs
add
mov
mov
fdivr
in
nop
add
xchg
add
add
xchg
scas
push
or
cmpl
filds
push
add
cmp
add
cs
insb
add
aad
jo
arpl
cld
fs
addl
add
test
adc
xor
loop
mov
xchg
add
and
test
test
fnstenv
lahf
mov
mov
dec
add
add
stos
add
ret
ljmp
push
lcall
or
sub
dec
jno
add
xchg
push
nop
adc
aas
jecxz
loop
or
push
loope
sahf
out
mov
mov
jns
inc
add
iret
jne
add
mov
out
in
sbb
dec
add
mov
pop
pop
imul
repz
sub
sbb
data16
lods
add
mov
xlat
add
xchg
stos
lds
and
mov
jl
cli
jo
push
pop
ds
rol
pop
jmp
out
imul
in
int
rolb
pop
sbb
add
lahf
out
jbe
pop
fwait
pop
jp
inc
pop
add
xchg
imul
mov
push
add
pop
mov
add
push
jae
mov
mov
cmp
into
xor
es
add
push
dec
add
mov
out
idivl
int3
adc
pop
sub
mov
movd
mov
xchg
addr16
add
jbe
pop
add
adc
push
add
clc
sub
icebp
scas
in
addl
xchg
jnp
jp
cs
mov
scas
push
adc
bswap
mov
dec
add
mov
xchg
add
mov
mov
add
or
push
add
test
jnp
mov
add
add
xchg
add
jmp
add
mov
fdivrp
add
fiadds
xchg
das
add
cmp
mov
mov
or
and
lods
mov
outsb
pop
mov
fcmove
aam
mov
lahf
mov
lret
add
sub
or
aam
xor
adc
mov
or
sub
add
leave
movsl
movsb
add
lods
or
mov
aad
add
stos
and
and
mov
jns
mov
mov
sti
dec
add
sbb
dec
mov
nop
add
push
movsb
out
scas
push
cli
stos
and
push
push
decb
out
out
add
push
out
and
daa
scas
aaa
ss
cmc
adc
add
jne
inc
add
ds
add
cwtl
clc
and
scas
jge
lods
mov
xchg
or
pop
cmp
sbb
push
and
clc
and
hlt
jno
add
shlb
add
jno
in
jns
add
leave
add
fidivrl
push
out
xchg
add
in
jge
xchg
add
and
icebp
or
add
rcll
les
push
js
dec
in
fmuls
xchg
mov
mov
mov
push
mov
es
sbb
out
mov
jg
mov
aad
xchg
roll
mov
or
cmpsb
jmp
imul
and
cmp
adc
and
js
add
add
out
je
stos
movb
faddl
mov
testb
mov
push
adc
pop
aaa
push
sub
xchg
roll
or
test
xchg
and
loop
ret
xchg
scas
imul
xchg
add
mov
insb
xlat
lock
or
mov
cmpsb
rolb
jae
inc
ljmp
incb
jb
mov
mov
in
jmp
loope
adc
cmp
push
mov
mov
into
mov
es
xlat
sub
jns
bound
add
test
cmpsl
jecxz
test
lcall
pusha
mov
xchg
cmp
je
mov
loopne
and
fstp
xor
sub
insb
lods
add
mov
pop
sti
add
js
fadds
jae
xlat
or
add
add
mov
ja
cli
or
mov
pop
add
cmpsl
add
and
push
mov
mov
shr
add
mov
popa
rcrb
popa
mov
test
or
add
ljmp
fcoml
xor
mov
cmp
int3
mov
test
pop
and
jg
and
es
inc
cmp
cltd
mov
add
fnstcw
jae
xor
insb
jne
faddl
fidivs
add
jae
enter
movsb
jns
mov
call
sarl
inc
bound
mov
fiaddl
js
lldt
cmp
es
add
mov
pop
xor
mov
mov
adc
jmp
add
insl
inc
dec
rcrl
fistpl
push
roll
or
mov
faddl
aam
cli
xor
inc
xchg
add
je
repnz
cmp
xchg
adc
pop
aad
add
fstpl
add
mov
push
lcall
add
xchg
stos
jnp
mov
mov
sbbl
hlt
gs
std
pusha
cmpsl
xchg
orl
mov
mov
in
add
std
je
lahf
hlt
and
push
cmp
dec
jne
cmp
popf
sub
bts
inc
cmovbe
add
add
jg
jmp
xor
js
add
fwait
add
push
subl
add
leave
add
add
add
xchg
out
arpl
cmc
and
adc
dec
push
hlt
add
mov
xlat
cmp
cmp
add
add
adc
in
xchg
mov
xchg
cmp
test
mov
inc
add
divb
popf
dec
jmp
rol
add
pushf
fcomi
adc
fidivrs
add
int
clc
mov
xchg
jae
dec
aam
mov
inc
sbb
pop
lcall
pop
insl
jmp
add
push
in
arpl
fsub
sub
nop
sbb
ret
xor
mov
loope
xchg
cmp
lods
outsb
add
mov
mov
mov
mov
loope
xor
xchg
sarl
add
gs
adc
jge
jmp
and
jp
mov
out
out
add
mov
mov
dec
push
mov
add
inc
sarl
cmp
fwait
jecxz
lcall
push
rorl
push
xor
fwait
movsb
xor
rcrb
jl
cmp
lock
insb
scas
mov
sub
and
mov
xlat
pop
addb
or
hlt
push
jb
xor
mov
add
mov
mov
daa
icebp
inc
jno
in
outsb
mov
pop
or
insb
dec
loope
sbb
add
add
add
inc
je
mov
pop
dec
add
jnp
jns
adcl
add
imul
sub
pop
in
jg
xor
jl
sub
ljmp
out
data16
push
movsb
and
push
stc
cmc
insl
add
daa
je
clc
loop
mov
adc
outsl
out
sbb
add
sbb
xor
adc
and
xchg
add
icebp
mov
ds
add
dec
xor
enter
push
scas
and
int3
sbb
out
sub
add
or
out
add
cs
cmp
aad
bound
add
and
xchg
adc
pop
sbb
add
pusha
dec
push
sbb
and
pop
push
pop
add
mov
testl
cli
movsb
mov
push
and
pop
cmp
add
call
sti
sub
mov
cmp
jmp
lds
adc
test
hlt
jmp
add
jo
pop
and
in
add
cltd
sub
dec
and
int3
aaa
inc
inc
insl
frstor
add
add
pop
lods
pop
or
xor
arpl
push
mov
loopne
int
mov
pop
cwtl
jle
jbe
stos
add
sub
mov
out
inc
je
mov
push
loopne
or
lcall
inc
adc
jge
roll
je
fcomps
add
movl
cmp
xor
add
mov
dec
jae
mov
ss
test
iret
or
inc
pop
cmp
filds
push
push
sti
mov
clc
push
outsl
add
sbbl
add
shl
jge
sub
ds
scas
jp
add
add
add
fbld
addl
in
mov
flds
cmp
insb
jle
push
addr16
mov
psllq
mov
test
pop
add
cmpsl
and
cmp
fnstenv
add
bound
leave
ljmp
cmp
lcall
pop
add
xor
inc
mov
dec
in
test
mov
mov
mov
fcmovnbe
mov
mov
add
mov
gs
sahf
in
cmp
shl
add
rclb
add
jne
or
out
mov
xchg
enter
test
imul
sbb
in
xor
out
mov
cmp
dec
push
icebp
inc
mov
push
xchg
add
jg
ja
and
lods
mov
cmp
or
dec
arpl
je
mov
sbb
hlt
mov
pop
xor
mov
test
test
std
fcmovu
in
stc
lcall
pop
cmp
je
mov
adc
jle
and
cltd
notl
mov
add
jmp
push
jb
cli
push
sub
shll
xor
push
cmpsl
fstpt
das
adc
loope
inc
add
sbb
adc
pop
add
daa
add
mov
add
mov
rcll
add
xor
inc
mov
cmpsb
mov
mov
and
rcll
pop
das
mov
in
add
mov
cmc
add
mov
test
mov
add
jge
xchg
cli
sub
imulb
add
cld
arpl
sub
inc
cmp
add
jecxz
in
fmuls
shll
add
sti
add
data16
and
aad
addr16
lahf
mov
fbstp
int3
add
sti
fnsave
cmp
pop
mov
or
lods
mov
pop
fwait
pop
add
arpl
mov
mov
push
inc
nop
push
add
jmp
mov
xchg
add
add
ret
arpl
int
add
pop
add
call
in
pop
push
faddl
fidivrl
outsl
js
imul
sub
push
push
jo
mov
scas
sbb
add
pop
es
jne
sub
cmp
fs
xchg
ret
push
in
sbb
aas
enter
and
stos
add
xchg
ja
repz
int3
sbb
testb
mov
add
push
and
and
jl
in
add
cli
addb
mov
hlt
mov
add
cmp
xchg
test
pushf
push
das
jae
idivb
hlt
fimuls
add
add
out
nop
subl
mov
adc
add
adc
add
cmp
js
out
into
in
jmp
orb
add
sbb
adc
add
and
stos
divl
push
xchg
jno
lea
dec
movsl
cmp
test
mov
jle
scas
clc
xlat
inc
inc
sbbb
jae
test
dec
sub
or
mov
fsubrs
addr16
and
jle
add
pushl
add
cmp
pop
cmp
or
push
sub
xor
add
ljmp
pmaxub
rorb
dec
jbe
sbb
adc
and
ffree
cmp
cmp
std
ss
js
pop
adc
mov
xchg
push
cmp
test
push
popa
stos
pop
mov
adc
jae
mov
fdivp
lock
sub
dec
cltd
or
and
add
add
mov
add
call
test
mov
into
xor
jle
dec
call
or
xchg
add
dec
ret
sbb
in
nop
adc
test
imul
push
pop
fildl
mov
fldenv
add
xor
in
inc
cmp
xchg
jecxz
cmpsl
inc
dec
jecxz
jmp
stos
lods
ja
adcl
in
addr16
mov
shlb
or
subb
xorb
out
push
add
les
fwait
repnz
int3
cmpsb
xchg
enter
push
xor
pop
add
push
add
mov
incl
dec
pop
xchg
fwait
pop
inc
xchg
add
or
mov
add
fisubs
cld
inc
sbb
push
add
pop
fs
inc
sbb
cs
dec
pop
adc
cmpsb
imul
bound
mov
pop
add
jnp
es
add
add
pop
dec
rorb
das
js
cltd
aad
push
mov
int
adc
addr16
fsubrs
cmp
popa
call
ret
jmp
fadds
or
or
push
loopne
add
dec
mov
add
dec
test
mov
sbb
mov
cmp
and
mov
sub
ror
mov
adc
scas
aaa
add
add
out
test
arpl
add
adc
xchg
loopne
pop
aad
xor
add
inc
add
xor
cmc
fmull
pop
add
add
push
mov
cmp
sub
rolb
dec
sub
dec
pop
pop
adc
test
dec
and
push
jae
stos
jg
adc
or
pop
pop
mov
xlat
aam
push
inc
jmp
mov
aaa
and
jae
add
add
scas
das
mov
sbb
dec
mov
fstl
jne
dec
add
xchg
das
ljmp
loop
iret
add
jg
sahf
in
in
sbb
rcrb
or
movb
lret
add
lods
cmpsl
flds
add
add
aas
mov
decl
rcrl
pop
inc
add
add
mov
out
cmc
dec
add
mov
shrl
fistl
add
ud2
mov
rorb
je
jae
cmpsl
xor
add
lret
js
outsb
add
add
cld
xchg
pop
mov
push
cmp
add
cmp
lret
inc
and
xchg
add
cli
add
xchg
and
movsb
add
adc
push
imul
xchg
adc
sub
sub
mov
add
cmp
sub
dec
pusha
mov
iret
mov
xor
cs
mov
js
andl
jbe
xor
fs
cmp
jl
add
fcompl
decl
cltd
adc
add
mov
adc
movsl
shlb
popa
add
jmp
add
sub
dec
push
jle
jae
and
add
dec
add
out
test
lods
add
out
fs
insb
cmp
jae
cmp
cmp
fstpl
icebp
out
mov
dec
int3
icebp
add
jp
adc
add
mov
popa
ret
add
xchg
add
and
add
sub
add
inc
inc
jns
adcb
test
cltd
andl
in
mov
roll
xlat
dec
dec
jbe
dec
adc
das
lock
inc
mov
add
jb
in
lods
shl
and
scas
pop
repnz
sbb
ljmp
sbb
push
fwait
pop
add
sti
shlb
push
sbb
push
add
sbb
xchg
pop
testb
mov
inc
inc
or
and
pop
dec
add
add
lret
push
cmp
xchg
xor
add
repz
mov
inc
pop
adc
imul
mov
aaa
push
add
cs
add
mov
sub
jmp
mov
aam
jp
jne
cli
add
sbb
mov
add
int
and
jbe
add
mov
pusha
les
shr
adc
adc
add
lock
xchg
outsb
or
in
adc
sahf
arpl
insb
repnz
cmp
imul
andnps
or
add
push
xchg
jp
jge
mov
adc
stc
add
add
mov
lea
add
aam
aam
sub
mov
addr16
sub
lret
sbb
test
idivb
movsl
int3
call
push
push
mov
insb
add
mov
roll
aas
outsb
add
xor
popa
sarl
sub
push
add
dec
outsb
xlat
jg
add
shlb
sbb
xchg
shr
jmp
pop
mov
xchg
sarb
bnd
jp
sbb
adc
sub
push
xor
dec
pop
ja
fstpt
dec
aas
xor
nop
pop
inc
cmpsl
mov
inc
or
and
dec
mov
add
mov
jbe
iret
daa
sarb
xchg
xchg
mov
clc
jb
add
or
aaa
sbb
mov
outsb
mov
test
add
jl
iret
les
inc
add
out
and
lret
pop
fnsave
addr16
sub
in
out
cmp
stos
add
cmp
cmpsl
jp
cld
call
xchg
int
imul
push
xor
dec
aas
add
in
ret
push
out
scas
repnz
stos
cmp
jp
aaa
je
jle
dec
dec
cmpsl
movsl
jb
imul
sbb
idivb
lods
push
dec
add
fistps
mov
ss
jmp
int3
add
push
in
cld
in
mov
mov
ljmp
pop
push
dec
add
xchg
fcoml
or
mov
mov
push
movsl
addr16
jns
rolb
jp
pop
xor
in
jle,pt
jl
sbb
push
xchg
pop
mov
xor
push
xchg
cmpsl
fisubl
sbb
out
jmp
lods
and
or
pop
lds
int
mov
daa
lret
mull
xor
dec
lcall
bound
les
sub
add
add
icebp
test
call
ss
dec
or
add
cwtl
adc
stos
arpl
clc
mov
data16
mov
pop
xchg
or
cmp
add
lcall
loope
cltd
push
mov
jae
xchg
add
out
mov
mov
nop
mov
mov
sbb
jecxz
int
lcall
xor
sar
push
cmpsl
shrl
sub
lea
mov
add
add
dec
add
xor
add
jbe
inc
mov
les
imul
and
cmp
mov
or
add
cli
add
push
dec
pop
xorb
add
scas
std
sub
dec
xor
pushl
es
dec
lahf
mov
adc
in
mov
add
and
subl
adc
mov
mov
ret
xchg
add
jb
inc
lahf
ret
xor
jne
fsubrl
jp
ret
test
bound
sub
lods
cli
add
add
add
sbb
inc
fbld
test
mov
add
scas
leave
movsl
mov
add
and
cs
dec
push
xchg
cltd
add
add
daa
add
xor
sbb
sbb
out
aad
lcall
cmpsb
add
loope
cmpsl
mov
sub
jecxz
hlt
add
jo
add
xor
bound
xor
clc
pusha
repnz
dec
xchg
mov
pusha
push
mov
dec
fs
jo
sbb
push
sbb
out
aam
jmp
sbb
roll
mov
jle
sub
add
pushf
add
mov
addr16
add
js
insb
add
add
mov
xor
push
shll
stos
jle
jns
cld
js
add
push
cmp
jbe
push
add
jle
pushf
jecxz
aas
sub
add
pop
push
roll
fs
faddl
loop
add
es
fidivs
add
add
cwtl
mov
xor
imul
call
icebp
mov
push
add
xchg
xchg
adc
push
pop
scas
fcomip
fs
mov
mov
and
jns
xor
iret
inc
into
add
or
mov
fwait
add
add
jle
lret
cli
ljmp
add
sub
int3
out
out
add
les
outsb
mov
out
add
scas
add
jns
loope
adc
mov
stos
filds
pop
jbe
pop
out
dec
mov
push
pop
push
add
fsubl
mov
out
dec
jle
cmp
mov
add
sbb
imul
mov
aas
movsl
sub
into
js
sub
add
adc
add
push
fistpl
insb
pop
pop
jmp
out
and
adc
pop
scas
imul
add
xlat
sub
push
lock
mov
or
negb
add
fnstcw
jg
jge
insb
loop
or
out
xor
mov
add
out
lcall
lcall
add
mov
insb
mov
movsb
jp
or
into
add
jae
jge
in
ret
add
or
frstor
pop
add
std
scas
jge
sub
add
cmp
or
dec
add
out
and
cmp
pop
sbb
mov
dec
adc
nop
in
addr16
mov
mov
mov
add
add
inc
or
sub
shrl
pandn
xchg
jne
xor
mov
add
stc
pop
jle
sbb
loop
lcall
add
pop
int3
lods
push
test
push
and
fidivrl
pop
in
scas
add
push
pminsw
sub
mov
clc
add
sbb
dec
mov
cltd
push
jl
leave
adc
xchg
pop
push
jae
xor
cmp
add
inc
cmc
push
enter
lea
mov
push
add
into
js
xchg
xchg
mov
add
and
add
rcl
jno
push
push
in
int3
scas
ffreep
jbe
jg
lods
lods
movsl
dec
add
adc
add
mov
test
lret
xor
adc
pop
add
pop
ret
pop
fst
insb
popf
push
into
cmpsb
das
sahf
dec
idiv
outsl
push
push
and
xor
andl
ja
inc
shrb
lret
stos
adc
ret
cmp
add
push
pop
es
add
outsl
sub
das
cmpsb
add
inc
icebp
sahf
fcoms
add
test
mov
ja
xor
mov
sbb
cmc
push
dec
inc
xchg
addb
dec
xor
add
push
push
outsb
cmp
scas
icebp
add
jae
xchg
cmpb
pop
mov
dec
movsl
out
xor
mov
fnsave
jle,pn
jge
adc
mov
test
adc
add
movb
out
add
scas
std
dec
rolb
and
cld
add
inc
jno
outsb
lock
mov
dec
mov
jecxz
add
push
add
cwtl
out
pop
mov
jo
sbb
popaw
mov
clc
cmpsl
insb
dec
jno
mov
out
addr16
add
cmp
jg
add
xchg
lds
sbb
inc
pop
push
jo
icebp
push
test
ds
lahf
xchg
outsl
lods
add
and
xlat
ss
jle
pop
ret
aam
sahf
and
insb
add
add
mov
faddl
insb
inc
hlt
jp
and
add
int
in
out
lcall
mov
das
pop
and
adc
stos
add
fsubrl
add
add
adc
sbb
aam
lahf
punpckldq
cwtl
gs
shrl
addb
outsb
adc
sbb
mov
test
push
test
addr16
xchg
pop
pop
call
sbb
addr16
add
jae
add
in
nop
push
add
pusha
in
add
mov
cmp
sbbl
gs
or
pop
fidivl
or
addl
aaa
aam
and
repz
in
aad
add
mov
sti
je
lret
repnz
mov
cmp
sbb
add
add
jl
mov
std
repz
dec
add
add
orl
or
jae
add
mov
push
add
cmp
mov
add
dec
xor
ficompl
adc
inc
mov
out
fisubrs
sub
ljmp
add
push
mov
push
xor
mov
gs
divl
adc
push
repnz
out
mov
fldl
or
lahf
push
adc
add
cmp
daa
pop
add
stos
jae
add
cmp
mov
es
lahf
clc
arpl
sub
cld
call
add
fsts
push
mov
lods
add
add
jl
lods
insl
sub
sub
gs
xor
xchg
fmul
or
fisttpll
les
pop
std
movl
lds
push
ret
sbb
mov
add
gs
inc
imul
dec
cmpsl
popf
add
mov
mov
cmc
sub
insl
add
lcall
filds
or
sahf
jp
add
add
out
add
cmc
and
jg
dec
pop
cmp
xor
into
dec
enter
test
add
pop
add
repnz
outsl
int3
in
add
ja
aad
push
add
mov
sub
sub
scas
cmpsb
adc
jae
push
push
add
add
push
add
add
add
out
repnz
les
dec
push
or
mov
mov
pop
in
xor
int3
cmp
imul
dec
out
mov
dec
mov
add
add
add
movsl
sub
daa
mov
push
pop
cmp
rclb
outsb
je
push
imul
inc
or
cmpsl
lret
pop
in
mov
add
pop
out
push
adc
push
jo
incl
into
cltd
roll
test
add
pop
or
xchg
add
std
shll
mov
lcall
jnp
add
inc
adc
repz
add
in
roll
clc
ret
sbb
pop
or
add
add
sub
jp
inc
mov
incl
dec
pop
sar
cmp
add
outsl
jbe
jecxz
repnz
aaa
push
xchg
mov
mov
int
jecxz
lret
stos
addr16
sub
pop
dec
mov
call
psllw
mov
add
pusha
test
in
mov
aam
repz
add
call
int
xchg
filds
cwtl
jge
add
add
bswap
mov
mov
add
jecxz
sub
jae
imul
pop
shr
mov
jb
fiadds
pop
sbb
popa
mov
mov
push
xchg
scas
in
les
adcl
dec
leave
adc
xor
add
add
lods
push
sbb
cs
adc
jno
jg
pushf
sbb
mov
add
stos
pop
xchg
ja
sti
outsb
pop
add
jae
dec
inc
out
cwtl
test
add
pusha
push
mov
and
push
xchg
mov
lods
xor
xor
push
mov
or
outsb
sub
add
sbb
sbb
out
xchg
add
xor
sub
jge
andb
cmp
fimuls
xchg
into
leave
pop
cmp
sbb
pushf
add
lret
fnstsw
add
add
cmpsl
hlt
jb
pop
adc
adc
dec
sbb
xchg
mov
je
pop
lret
pop
sub
vpavgw
xor
dec
test
fsubrl
add
inc
add
add
movzbl
adc
pusha
dec
sub
adc
in
outsl
das
xchg
cmp
sbb
mov
cmp
mov
mov
add
dec
or
out
add
jo
out
dec
or
jmp
sbb
and
jb
xchg
mov
add
inc
mov
roll
push
nop
ret
lcall
lcall
add
lahf
mov
cli
add
add
pop
fsubrl
inc
mov
ljmp
add
pop
mov
sub
or
push
add
fdivl
pop
scas
test
mov
jecxz
or
add
xor
cmpsb
subb
add
push
mov
lea
add
iret
add
xchg
add
cmpsb
fistpll
test
inc
pmulhuw
iret
push
sbb
inc
lret
cld
add
mov
sbb
dec
pusha
test
jl
inc
push
cmp
or
rclb
add
push
ljmp
aaa
rorb
ds
iret
add
aad
add
std
add
out
dec
push
add
inc
add
jne,pn
add
add
dec
jne
hlt
add
dec
outsb
int
cmpsb
add
add
cltd
loopne
xor
ret
dec
push
ficompl
orb
or
jmp
add
pop
xchg
lahf
lcall
add
add
sbb
xchg
loopne
xor
inc
std
repz
lcall
jecxz
add
outsb
int
push
mov
cltd
mov
mov
mov
mov
xchg
enter
lds
cli
movsl
or
mov
add
outsl
shrw
cmc
test
add
loope
mov
push
or
sub
sub
xlat
daa
aaa
add
je
push
add
add
pop
fwait
mov
add
popf
dec
add
add
and
push
sbb
jl
add
jg
add
mov
and
xchg
inc
lcall
or
add
jnp
add
xlat
cmpsl
dec
cwtl
clc
dec
adc
inc
rcrb
pusha
fdiv
fdiv
and
xor
out
cli
push
nop
xchg
mov
add
cld
cltd
xor
adc
or
inc
sub
or
jnp
pushl
mov
lcall
popl
hlt
jg
xchg
sbb
ret
push
add
xacquire
fwait
cmc
mov
lea
mov
add
out
subl
addr16
jae
outsl
xor
cmpsb
adc
mov
jns
jbe
add
add
test
add
fidivl
xorb
jae
mov
mov
xor
and
add
dec
test
filds
into
or
inc
repnz
fildll
xchg
loope
addr16
mov
pop
or
add
outsb
add
pop
cmc
mov
les
dec
cli
adc
mov
mov
sti
loope
adc
rcrb
mov
adc
je
add
sti
scas
xchg
jecxz
jo
push
cmp
mov
sahf
push
mov
arpl
mov
sbb
jmp
xor
rcrb
ds
jle
movsl
pop
fiadds
cld
repz
and
mov
mov
daa
inc
and
movsb
jb
rolw
mov
sub
mov
out
add
sahf
push
ja
leave
adc
add
xor
or
add
jle
dec
shrb
xor
jno
fadds
cld
in
mov
dec
cmp
push
add
scas
subb
mov
mov
dec
mov
xchg
add
jecxz
test
cmc
push
rcll
xor
loope
loop
test
test
add
aas
iret
mov
add
fisubrs
addb
mov
insl
xor
icebp
adc
pop
adc
clc
add
sbb
lea
cmp
or
cmp
add
xlat
sub
hlt
push
jno
int
cwtl
inc
add
popa
int3
sbbl
xchg
cmp
loopne
or
jge
inc
scas
add
popa
add
jb
incb
adc
xchg
cmp
loope
and
jbe
ret
jmp
js
dec
mov
mov
jb
ja
mov
or
js
iret
dec
hlt
add
loopne
in
sub
cmp
add
xchg
nop
add
ja
sldt
js
add
addr16
lahf
lret
xor
dec
xlat
and
xor
aaa
repz
jbe
cli
adc
ret
pop
rolb
lds
or
pop
jmp
out
repnz
inc
jle
in
xchg
sbbb
outsl
mov
stos
mov
push
sbb
sbb
les
test
fisubrl
outsb
fs
mov
jp
add
cltd
and
pop
cld
shrb
xorl
das
inc
les
or
xchg
lods
add
nop
inc
adc
insl
mov
sbb
jne
imul
adc
testb
inc
dec
imul
xor
sti
add
push
adc
add
mov
in
je
sbb
filds
rolb
add
inc
sbb
add
pop
jmp
add
in
jno
jb
nop
outsb
add
push
fcoms
fdiv
fidivs
shrb
and
scas
mov
mov
rorb
pop
xlat
cwtl
mov
and
add
mov
loopne
pop
pop
mov
adc
stc
jnp
loopne
pop
sahf
push
in
mov
imul
dec
in
mov
xor
jmp
es
out
sub
mov
loop
out
cmp
xchg
repnz
mov
mov
add
rcl
stc
mov
icebp
add
in
add
xchg
imul
or
lret
add
mov
cmp
jns
dec
pop
stos
and
sbb
adc
cli
add
dec
lds
adc
mov
leave
popa
aam
aaa
std
pop
aas
mov
add
xchg
sbb
lret
mov
scas
mov
sbb
fs
push
imul
add
sbb
add
roll
add
fistpll
dec
or
xchg
out
sub
xchg
inc
pop
pusha
mov
sbb
ret
add
sahf
enter
rorl
lods
xchg
scas
sbb
jge
lock
sbb
jns
add
push
xchg
gs
mov
push
aas
add
add
std
lods
mov
inc
mov
ja
pop
jge
adc
adc
icebp
mov
add
pop
add
pop
inc
ficoml
mov
add
mov
out
shll
add
mul
nop
push
ds
lods
sub
mov
addr16
pop
adc
clc
add
insb
pop
mov
jb
ljmp
adc
cld
lcall
aad
add
popf
test
push
test
jnp
in
int
push
into
incl
add
popa
add
mov
out
hlt
jle
mov
jmp
xlat
xchg
inc
adc
or
test
movsl
mov
adc
jp
sub
adc
lret
out
push
mov
mov
adc
jb
fldt
mov
xchg
jbe
into
cwtl
insl
mov
inc
in
mov
add
outsb
xchg
mov
lret
addr16
sub
call
sahf
add
mov
out
jnp
lahf
testl
sbb
aam
loopne
scas
addr16
inc
add
rclb
jbe
push
stc
push
pop
jbe
add
js
inc
dec
adc
jb
icebp
push
mov
insb
xor
out
cmp
push
cmc
add
cmp
sbb
add
hlt
inc
aas
dec
dec
cltd
jmp
push
add
add
out
jb
add
insb
adc
ret
push
xor
sub
cmc
push
push
scas
sbb
pop
mov
mov
cmp
clc
ret
mov
je
leave
ds
and
sbb
jecxz
add
movsl
arpl
xchg
sub
sub
jle
mov
mull
add
sub
cmp
mov
in
mov
inc
jno
stos
push
test
xor
sbbb
xor
testb
ret
daa
dec
cmp
movsb
add
add
icebp
sbb
mov
clc
insl
imul
jle
sub
cltd
xor
add
mov
add
sbb
add
es
lods
loopne
sub
mov
and
cmp
add
cmp
mov
lret
cmpsl
shrb
ret
pop
mov
pop
xor
add
pop
pop
add
js
or
sbb
push
xor
repnz
outsl
pop
in
inc
aas
mov
pop
push
cwtl
outsb
outsl
xlat
sbbl
cmp
jne
cli
pop
addl
add
jno
loope
jmp
shll
add
mov
arpl
xchg
test
jb
cmp
or
adc
xor
test
cmp
cmpsb
mov
aas
cmp
jge
loop
divb
clc
aaa
push
loopne
decb
inc
jecxz
sbb
fs
pop
dec
aas
xor
loopne
pop
inc
sub
push
lea
dec
pop
add
or
push
movsl
ja
add
xor
mov
fistps
mov
push
sbb
lds
add
and
cld
mov
aas
inc
or
das
mov
adc
sub
or
sarb
ja
push
in
sbb
jnp
add
push
scas
mov
cmp
shll
addl
gs
addr16
mov
cmpsb
jecxz
test
hlt
jmp
cwtl
add
lret
filds
sarb
or
jb
add
mov
cmp
adc
daa
add
mov
cmp
xchg
add
jb
in
aas
fbld
out
fiaddl
add
add
jb
xor
cmp
mov
push
loopne
sarb
fisubs
dec
xchg
jbe
addb
cmp
fistpl
popa
imulb
xor
mov
js
data16
xor
add
bound
bound
shlb
ljmp
mov
hlt
lds
out
shlb
and
push
sub
cltd
stos
aaa
pop
pop
cli
sub
inc
repz
pop
mov
adc
test
push
push
pushf
jne
addb
les
add
add
mov
mov
in
ljmp
add
mov
sub
jp
add
cli
ret
add
daa
ja
cmp
cmpsb
mov
sti
mov
fldenv
mov
jns
inc
add
jbe
pop
add
cmp
jmp
xor
jle
adc
and
idivb
jae
adc
cmp
inc
movsl
or
sub
cwtl
mov
add
cmpsl
ret
cmp
push
fildl
add
and
jo
shlb
add
pop
pushf
cmp
or
xlat
repnz
bound
sub
pop
mov
aas
pop
push
repz
push
pusha
loop
gs
inc
add
inc
add
scas
xor
int3
mov
mov
and
sbb
rol
dec
std
mov
lret
xchg
dec
adc
out
mov
cmp
lea
jbe
fsts
daa
pop
arpl
pop
imul
add
add
fmull
lret
add
jp
leave
daa
jmp
mov
fs
xchg
mov
xor
sbb
cmp
mov
push
mul
xor
pop
sbb
rolb
add
fwait
add
test
jb
add
sub
add
add
mov
pop
dec
add
sbb
pop
jl
jg
xor
outsb
adc
add
mov
pop
mov
fadd
test
push
loope
sub
add
out
outsl
add
push
push
adc
sub
sti
push
divb
loopne
cs
add
repnz
loope
aad
out
xor
jno
jbe
inc
jae
insb
jl
add
aam
or
push
push
mov
int3
ds
lds
xor
enter
mov
jle
sbb
pop
add
cmp
fcom
addr16
push
jecxz
mov
nop
sbb
jb
out
dec
add
pushf
in
and
or
mov
insl
jecxz
in
cmpsb
sbb
add
cmp
call
add
add
test
jmp
fisttps
and
jl
fs
add
mov
adc
push
push
mov
out
mov
repz
ljmp
mov
lock
push
addr16
aas
add
movb
dec
mov
shrb
xchg
imul
movsb
icebp
add
mov
in
mov
inc
loope
outsb
cli
cmpsl
add
add
lods
mov
add
imul
stc
jecxz
jecxz
test
push
enter
add
cmp
mov
add
fcoml
push
add
bswap
jg
imul
mov
sub
data16
test
shrl
std
jnp
mov
pop
cmp
out
mov
es
pusha
cmpsl
mov
call
mov
pop
das
sub
and
subl
xchg
mov
dec
xchg
sub
cmp
movb
arpl
or
mov
aad
xchg
jne
in
jge
add
fnstsw
imul
cli
add
push
cmpl
push
sbb
es
add
mov
hlt
jecxz
jo
add
xor
cld
lds
sbb
inc
fs
dec
dec
aas
rol
enter
mov
add
mov
xchg
jb
testb
out
cmp
sti
add
xor
push
xchg
jns
dec
mov
repz
aas
jne
add
mov
mov
pop
arpl
add
add
push
and
inc
add
sbb
dec
pop
add
scas
add
popl
or
fcmovnu
mov
inc
outsl
add
or
add
xlat
xchg
mov
out
sahf
xchg
add
jmp
loope
jp
push
mov
ret
push
pop
pop
add
mov
add
add
imul
sbb
outsl
out
mov
jmp
and
inc
dec
ja
mov
leave
les
data16
test
adc
rcrb
dec
test
fcmovnu
push
pop
pop
or
pop
pop
hlt
rol
dec
sahf
mov
xor
push
pop
jmp
push
or
movsb
push
lret
add
js
mov
cmp
scas
mov
jl
in
pop
jne
loope
sub
pop
fists
add
in
imul
cltd
adc
xlat
in
add
cmc
cmp
fcompl
add
rol
xor
into
mov
add
add
in
xchg
stc
pop
add
mov
add
push
shlb
dec
fsubs
lcall
cmc
mov
mov
mov
add
lret
mov
add
in
adc
sub
mov
push
adc
aam
das
outsb
pop
imul
add
adc
pop
insb
pop
sub
jo
add
cmp
add
inc
icebp
cmc
shrb
subl
cmp
aad
sar
add
sbb
scas
cmc
add
push
sub
fwait
cltd
pop
out
push
inc
xor
daa
pop
loope
int3
rcll
pusha
aam
sub
or
dec
adc
lret
pop
inc
rcll
or
add
ror
or
sbb
pop
repnz
jae
leave
inc
add
add
sbb
test
pop
nop
icebp
fisttpl
push
icebp
inc
xchg
push
add
enter
cltd
xchg
push
or
push
lret
insl
add
jl
cmp
adc
pop
das
pop
dec
add
ds
sbb
xchg
fidivrl
or
add
aas
dec
pop
add
lret
test
and
fsubs
add
add
lods
andl
fbld
inc
pusha
xlat
push
push
mov
xor
jle
das
orl
sub
roll
jae
sbb
xchg
add
add
enter
add
aas
mov
mov
or
pop
pop
xor
add
push
or
mov
test
mov
pop
insl
add
lods
mov
xor
mov
pop
add
out
daa
daa
push
cmpsl
add
imulb
mov
push
add
inc
pop
inc
add
bound
mov
add
add
add
lret
pop
push
test
stos
fisttps
cmpb
mov
iret
xchg
outsl
xchg
sbb
mov
addl
mov
les
sub
ss
add
pop
and
push
xor
test
inc
add
movb
xchg
cmc
inc
add
xor
lds
cltd
add
jo
add
shlb
adc
push
idivl
jl
out
loopne
sbb
addl
jnp
mov
daa
and
fldt
stc
xor
repz
mov
and
add
xchg
adc
or
mov
ds
insl
add
lcall
ja
add
xchg
dec
jmp
push
cltd
fnstcw
and
idiv
add
pop
test
out
cs
add
add
sbbl
add
mov
add
sti
pop
mov
add
not
cwtl
sub
xor
add
lods
dec
add
push
cld
data16
pop
lods
sarb
adc
mov
mov
add
dec
mov
xor
xor
cmc
cmp
push
scas
adc
or
cmp
insl
in
adc
jno
aad
scas
test
add
inc
lock
push
add
movsb
flds
cmovo
mov
adc
sar
add
leave
jecxz
filds
add
push
incb
sub
sbb
push
popa
aas
fwait
rcrb
xchg
fwait
push
dec
in
fldl
push
in
mov
test
jecxz
add
push
lds
nop
sub
push
aad
add
sbb
inc
cmp
mov
fwait
mov
adc
pop
add
pop
fistl
jo
mov
mov
sub
ds
pop
pop
add
and
pop
add
add
or
jl
mov
push
mov
pop
outsb
dec
mov
clc
dec
test
popa
nop
pop
mov
aad
xor
or
pusha
or
cmp
shrl
xlat
ja
or
adc
push
outsb
add
sbb
incb
mov
por
sub
je
in
stc
iret
add
insl
pushf
mov
stos
mov
jno
pop
pusha
add
rorl
mov
iret
xchg
outsb
jecxz
notb
roll
jmp
sub
hlt
add
mov
cmp
mov
add
or
sahf
mov
add
pop
js
aam
movhpd
add
cmc
adc
push
fwait
mov
fwait
insl
shrb
dec
in
jbe
pop
pop
push
pop
in
idivl
or
cwtl
aad
cltd
cmp
xchg
leave
es
incl
cs
xchg
mov
push
roll
push
lret
dec
fs
add
inc
and
fdiv
aaa
push
xchg
mov
fcmovnu
jne
add
add
mov
dec
add
les
add
addr16
xorl
inc
mov
xchg
add
add
fmull
jge
cs
insb
cmp
les
movsb
xor
fwait
push
add
cmp
add
dec
mov
add
fstpt
add
nop
push
in
add
addr16
fldl
stos
add
dec
and
add
mov
cmp
in
xor
aas
inc
testl
sbb
push
leave
add
jo
and
push
outsl
shrl
out
es
or
std
dec
cmp
cmp
and
mov
xchg
sub
jmp
mov
dec
jg
add
dec
out
fmul
jns
lods
jl
insl
and
nop
add
adc
adc
mov
add
loopne
inc
sub
and
jmp
xchg
test
xor
mov
xchg
cmp
es
add
jmp
push
jae
divb
test
sbb
lret
test
dec
push
cmpsl
cmp
mov
roll
hlt
nop
orb
xor
sahf
ret
add
fldt
mov
pusha
in
adc
imul
mov
stc
in
mov
pop
or
loopne
jge
push
lock
add
sbb
inc
fwait
push
lret
jae
orb
loope
add
leave
mov
lcall
add
call
dec
lret
and
mov
inc
popl
nop
and
bound
mov
xchg
push
faddl
flds
push
bound
je
ror
pop
repnz
punpcklbw
out
add
xor
jns
loop
cmp
pop
mov
addr16
push
add
push
add
into
ret
fsubs
and
lds
add
mov
jl
insb
pop
xor
adc
shrl
cmp
lods
or
xchg
loop
xchg
mov
add
inc
xor
mov
pop
inc
cmp
adc
fs
and
pusha
hlt
and
sbb
das
nop
lahf
push
pop
sahf
and
loope
add
aad
jge
sti
inc
mov
popf
push
les
pop
enter
stos
lret
int
mov
and
bound
movl
int3
add
xchg
mov
ret
idivb
fucom
bound
int
fwait
cmp
sahf
ret
adc
jbe
push
lret
add
pop
ljmp
add
out
or
imul
add
dec
jno
mov
add
cltd
cmp
rol
fsubs
lahf
sub
mov
clc
push
sub
mov
add
push
popf
stos
xchg
inc
ret
movsb
and
xchg
add
movsb
pop
pop
sub
fiadds
mov
xor
push
clc
int
jmp
push
xchg
xchg
add
imul
jl
movsl
movsl
mov
loopne
into
pop
and
push
cltd
add
je
mov
mov
inc
push
jecxz
pop
lods
imul
jle
add
add
jno
sbb
jl
ret
jp
sub
fildl
flds
mov
xchg
ftst
jnp
pop
shll
add
add
cltd
sub
pop
add
add
cmp
xor
jmp
leave
testb
pop
push
aaa
dec
mov
data16
add
imul
mov
jl
jno
add
sbb
mov
test
outsb
repnz
xor
stos
add
inc
leave
pop
lods
jmp
adc
loope
sahf
or
cmp
sub
push
faddl
or
sbb
imull
fisubs
push
test
inc
in
test
mov
or
in
dec
jge
add
sti
dec
mov
outsb
orb
jl
add
add
js
inc
inc
add
loop
test
and
push
loopne
jecxz
setge
sbb
cwtl
xchg
mov
int3
mov
ret
jl
dec
outsl
and
insb
push
loope
push
and
mov
inc
cmp
rorl
stos
mov
add
xchg
mov
mov
mov
add
jle
adc
cs
dec
ljmp
movb
call
mov
sbb
sbb
inc
add
mov
cltd
add
mov
xor
mov
add
and
fisttpl
test
lock
pop
xor
daa
inc
xor
add
sti
lea
jns
pop
add
xchg
push
xchg
iret
aam
dec
add
es
ficomps
je
sub
add
mov
pop
cs
dec
int3
cmp
popf
xor
rolb
scas
adc
outsl
test
ja
in
adc
mov
xor
cs
mov
pop
lods
add
jnp
imul
pop
lods
fldl
jg
not
flds
pop
dec
pop
outsl
pop
outsl
stc
push
add
pop
scas
mov
mov
mov
mov
cmovbe
mov
dec
jmp
or
xchg
push
add
mov
out
inc
add
cmc
test
je
test
pushf
and
fcoms
loop
add
sub
mov
and
cmpsb
adc
push
ltr
add
aam
xchg
cmp
filds
stos
add
or
xchg
and
add
loope
lahf
push
add
pop
popa
lea
pop
pop
lock
add
fdivr
cmp
out
xchg
jp
xor
xchg
in
mov
add
add
jl
or
adc
inc
cld
rclb
jbe
xchg
push
repnz
pop
sub
add
cmp
add
scas
mov
or
jp
jecxz
icebp
xchg
cmp
sbb
lea
mov
ss
xor
add
icebp
xor
pop
add
add
addb
mov
jne
pop
out
xchg
add
push
mov
scas
add
or
or
pop
out
fdivs
lret
add
mov
adc
shll
xchg
clc
iret
js
incl
xchg
subl
ret
inc
add
push
add
imul
enter
jg
cmpsb
jecxz
movsb
shrb
jo
int3
xor
add
mov
iret
sbb
add
add
push
mov
int3
popf
xchg
xor
mov
and
adc
add
add
push
daa
add
inc
xlat
data16
dec
addr16
data16
pop
pop
xchg
jbe
add
cmp
das
adc
adc
add
and
mov
sub
lahf
add
sbb
add
add
xchg
jp
add
or
test
mov
popf
inc
shlb
xchg
outsl
mov
syscall
add
and
cli
sub
inc
call
mov
mov
sti
or
push
mov
popa
cmp
mov
pop
pop
lahf
cmp
or
pusha
fs
push
fiadds
int
xchg
in
sbb
lcall
mov
xchg
pop
loope
fdivrp
add
fdiv
addr16
jg
mov
and
test
scas
jno
testb
rclb
add
cmp
jecxz
repz
lahf
ss
popw
pop
setle
mov
mov
fwait
dec
and
cwtl
add
loope
imul
add
push
pop
test
movb
orl
dec
pop
mov
cs
leave
adc
add
loop
pop
repz
les
outsb
add
mov
or
sub
je
xor
mov
cmpsb
or
gs
add
pop
sub
jnp
mov
notb
pop
in
sbb
notb
jge
add
test
xchg
mov
push
jb
mov
aaa
cmp
into
out
arpl
lods
and
int
push
adc
js
pop
pop
inc
jl
sbb
loope
xchg
mov
clc
sub
test
pop
add
ljmp
inc
in
add
push
push
inc
je
jmp
clc
cmp
add
jecxz
pop
test
or
add
roll
jl
cltd
pop
ss
add
scas
jp
mov
add
rcrb
popl
xchg
sub
cwtl
ret
arpl
repz
mov
arpl
js
push
add
pop
sbb
and
test
jl
adc
aam
mov
mov
cli
mov
mov
or
mov
add
jmp
cmc
jl
pop
outsl
shlb
ds
scas
cmpsl
cld
or
cmp
pop
test
aaa
jmp
mov
testb
cmp
ljmp
decb
push
xchg
call
xor
add
inc
jo
les
cltd
add
xlat
sub
push
add
mov
movsb
clc
in
cmpsb
xor
fs
cmc
add
insb
jge
call
std
std
sbb
mov
add
dec
add
xchg
inc
mov
xchg
aas
test
xchg
in
or
add
enter
testl
jmp
add
movsb
add
je
cmpb
mov
cmp
push
fsubr
dec
hlt
ljmp
out
fistpl
jno
add
pop
iret
xor
fdivl
adc
fldl
fs
daa
sub
iret
pop
out
push
cmc
popf
lods
add
push
add
xor
xor
out
xchg
test
nop
add
clc
in
lret
pop
xchg
push
xor
mov
fidivrl
cwtl
test
in
addb
mov
icebp
sub
cmp
add
dec
mov
add
mov
add
mov
or
lds
nop
sub
push
add
add
add
and
enter
add
rolb
sbb
orl
jno
jecxz
add
add
and
stc
test
pushf
add
mov
inc
jmp
enter
rcrl
test
push
adc
add
adc
popa
cmp
test
popa
mov
xchg
dec
add
cmp
pop
sbb
push
cmc
sub
add
jae
add
and
adc
and
mov
push
mov
popf
xchg
fdivrl
inc
add
mov
cltd
sub
mov
bound
push
push
testl
dec
mov
xchg
sub
pop
jp
adc
cmc
pop
cltd
jbe
xchg
lods
out
mov
add
aas
cltd
mov
mov
imul
fs
mov
mov
and
testb
movsl
scas
add
lret
add
jae
add
aad
aam
inc
add
push
mov
add
popa
add
fs
sub
pop
sarb
lods
fisttpll
sbb
int
add
outsb
sarl
repz
or
add
ror
adc
jecxz
push
push
mov
cmpsl
jns
test
data16
xlat
js
les
sbb
nop
sub
sti
hlt
add
mov
rol
add
sub
add
adc
ja
pop
or
pop
pop
lea
fistpll
cmp
or
aas
fldcw
das
add
inc
pop
mov
pop
inc
jl
test
xchg
repnz
pop
add
cmpsl
add
inc
inc
cmp
stc
aam
xor
lcall
mov
mov
int3
add
xchg
add
in
push
loop
rcrl
stos
xlat
loop
add
add
add
shrb
cli
ss
mov
and
sbb
js
fisubl
andl
jns
pushf
add
add
and
and
add
and
into
inc
mov
in
cmpsl
add
std
fwait
xor
add
xor
lds
mov
xor
ja
nop
add
mov
inc
xlat
jns
xor
add
out
outsb
and
hlt
sub
jg
gs
pop
sbb
sbb
sarl
push
in
outsb
lods
movsb
sbb
cmp
aaa
push
cltd
xchg
push
rcrl
imul
push
ss
add
and
fcomps
int
inc
sahf
add
rolb
test
mov
add
arpl
aam
add
xchg
mov
aas
call
add
or
shrb
mul
mov
maskmovq
add
add
pop
scas
or
sbb
out
adc
add
cs
data16
adc
xchg
xor
sbb
dec
repnz
push
lahf
jp
jb
rorl
pop
cwtl
imul
add
incb
fidivl
push
dec
or
insb
jmp
js
data16
fsubs
add
inc
mov
cli
add
mov
int3
jb
inc
push
shll
add
adc
add
movl
push
sub
int3
add
inc
add
xchg
and
mov
fstpl
cmpsb
add
add
add
fsubrs
add
loop
testb
add
add
outsl
cmpb
mov
jmp
sub
sbb
inc
cld
jle
std
mov
cwtl
js
shr
sbbb
push
add
add
scas
ret
sahf
add
into
xor
movsl
out
fs
nop
add
push
orl
outsb
loop
ret
fldcw
xor
dec
mov
fcmovnb
add
imul
push
pop
int3
lea
mov
addr16
add
in
mov
hlt
shlb
ret
pop
lods
out
mov
call
fs
mov
daa
imul
std
pushw
loope
leave
add
aaa
sti
sub
daa
lcall
bound
cmp
roll
add
shl
cmp
insl
or
imul
add
str
add
mov
add
add
cli
js
jmp
inc
in
add
lcall
test
sub
cmp
mov
ret
insb
sub
sbb
pop
xchg
adc
std
xchg
push
adc
jp
add
sub
shufps
leave
add
adc
add
lock
jl
inc
rolb
xchg
cmp
add
inc
jge
data16
mov
mov
mov
jb
es
mov
rcrl
hlt
sbb
push
dec
jno
faddl
aam
fisttpll
pop
sub
addr16
rcll
add
push
sub
in
loope
fistpll
rclb
cs
add
pop
add
push
add
mov
pop
xor
add
shrl
imul
lahf
mov
xchg
insb
push
sub
out
add
mov
iret
lods
jne
aam
mov
xor
mov
add
fildl
mov
gs
cwtl
push
out
mov
repnz
imul
repz
cmovno
or
psubb
add
push
test
mov
ss
mov
jo
cmp
add
cltd
loop
jbe
adc
pop
aad
mov
cltd
pop
or
sub
mov
mov
cs
rcl
xor
mov
push
dec
add
cltd
add
or
push
sbb
jo
cmp
mov
gs
adc
jmp
sbb
arpl
adc
std
test
xchg
out
add
jle
loop
inc
sbb
add
add
test
fstl
test
sub
aad
add
daa
add
movb
stc
inc
imul
insb
add
add
add
adc
jmp
shlb
inc
fwait
push
hlt
mov
cmp
xchg
add
repnz
add
dec
ss
adc
add
test
mov
push
add
std
add
es
and
jb
jle
jno
daa
add
aaa
arpl
clc
pusha
shll
cmpsb
push
loope
call
sbb
jge
leave
inc
add
adc
or
addb
inc
add
bound
inc
and
pop
jnp
fiaddl
movsl
out
imul
movsb
xchg
add
mov
mov
arpl
sbb
leave
leave
push
leave
jno
inc
in
adcb
inc
sub
bound
sbb
data16
jecxz
idiv
iret
addl
add
lcall
mov
cmp
dec
mov
in
data16
es
push
add
add
dec
js
add
cwtl
sbb
or
popa
dec
add
cmpsb
bound
jle
mov
fldl
les
inc
sbb
sahf
mul
push
lds
add
dec
jl
inc
sti
add
std
shl
call
lahf
aas
enter
push
dec
shr
leave
inc
xchg
out
rcrb
call
lcall
bound
cwtl
cmpsb
xchg
push
add
outsb
add
add
clc
or
loopne
cltd
mov
in
and
mov
cs
je
lahf
loope
ds
pop
or
push
cli
pop
hlt
and
nop
xor
mov
xchg
add
lods
icebp
in
incb
dec
xchg
popa
mov
arpl
add
xor
movsb
lods
push
js
std
fsts
sbb
xor
add
dec
or
ljmp
mov
add
leave
test
mov
xchg
cmp
fisttps
add
mov
inc
and
jae
mov
sahf
stc
sarb
in
jae
sti
test
lret
xor
imul
mov
lcall
add
jnp
sub
or
jmp
cmp
ja
mov
and
mov
add
push
add
ja
and
out
das
adc
jle
mov
pop
out
int3
ja
cwtl
jno
lea
jb
inc
mov
jle
xor
xchg
std
add
es
roll
push
out
jae
pop
sub
addb
icebp
sbb
add
or
pop
ss
and
les
add
dec
ljmp
inc
add
pop
out
inc
out
in
and
das
movsl
popl
jmp
inc
clc
add
shll
out
sarl
xor
fiadds
pusha
add
lds
adc
lahf
sbb
shll
push
lds
neg
add
and
pushf
fwait
das
add
adc
fucomi
push
shll
sub
adc
add
add
mov
mov
add
mov
mov
add
pop
add
fidivl
cltd
jecxz
mov
test
jns
pushf
out
aas
add
or
push
loope
loop
adc
mov
lock
mov
add
cmp
adc
mull
sahf
dec
add
jnp
mov
cltd
in
ja
jne
mov
push
nop
mov
decl
add
xchg
mov
push
loope
mov
xchg
dec
frstor
pop
or
jne
stos
push
push
sahf
sub
mov
cltd
jbe
inc
jno
xlat
add
add
insb
cmp
insb
xlat
xor
dec
mov
push
dec
bnd
dec
jae
lods
push
dec
jp
out
cmp
mov
in
hlt
lret
pop
sbb
add
or
outsl
add
add
repz
cmovl
int3
mov
add
jle
addl
jb
adc
arpl
xchg
pop
mov
push
cld
xchg
iret
mov
jbe
push
cmc
stc
scas
mov
ss
cld
imul
mov
andb
push
scas
int3
stc
jmp
iret
xor
dec
dec
add
movsl
push
dec
mov
icebp
jo
sbb
dec
xlat
mov
and
add
jo
pop
cmp
roll
dec
popa
add
add
xchg
xor
aas
clc
cmp
sbb
push
cmpsb
popf
add
cmpsb
sbb
add
pop
add
cmp
push
jp
add
add
inc
stc
in
ja
fcoms
sti
push
repz
mov
jl
shlb
inc
pop
imul
sub
int
cmc
xchg
pop
xlat
mov
or
add
sbb
cmpb
inc
adc
add
add
add
arpl
xchg
stos
inc
dec
add
mov
aaa
fildll
jo
int3
add
sbb
sbb
movsl
pop
push
cmpsl
add
ret
mov
fs
lcall
js
and
mov
arpl
in
pop
shl
sti
gs
xchg
xor
outsb
add
jge
cmpsb
jbe
add
ret
push
mov
add
xchg
rcll
add
and
jl
popa
inc
push
lret
std
inc
add
xchg
adc
add
mov
or
roll
dec
out
leave
mov
push
test
fwait
adc
add
and
iret
in
mov
out
adc
inc
rolb
jno
dec
or
addr16
ret
add
nop
ret
test
fldcw
inc
sbb
pop
jecxz
add
and
outsb
mov
add
xchg
rep
dec
mov
add
in
test
ret
mov
sub
iret
add
pop
add
push
add
xor
mov
mov
ds
mov
add
add
movl
add
test
cmc
add
push
out
repnz
adc
pop
outsl
jle
add
pop
jp
shl
frstor
stos
testb
xor
sbb
add
inc
add
add
iret
addl
pop
popa
cmpsl
mov
dec
add
rcr
popa
add
popa
movsb
std
clc
sbb
jne
sub
ja
addl
adc
fisttpl
loop
add
xchg
hlt
movb
loopne
jae
pop
decb
pop
scas
add
imul
pop
push
dec
pop
add
add
push
rcl
add
rol
add
addl
mov
es
nop
adc
add
rcrl
dec
iret
sub
in
cmp
jl
out
jb
or
or
pop
add
push
in
lret
cmpsl
out
jg
clc
shr
add
xorb
sbb
repz
push
scas
add
add
fwait
clc
enter
cmp
xchg
in
iret
ja
add
cmpsb
push
sub
mov
rolb
mov
bound
add
cmpsb
test
sub
mov
int3
mov
xchg
sbb
cmp
jae
add
add
mov
jo
mov
pusha
mov
fdivrs
rcr
js
or
loopne
sub
add
jnp
cwtl
shlb
xor
inc
add
jl
insl
pop
out
add
cmp
xchg
pop
mov
sbb
out
sub
push
add
push
jecxz
ljmp
dec
add
pusha
xor
ss
jb
sbb
sbb
js
icebp
xchg
cmp
test
push
xchg
mov
je
mov
mov
and
adc
adc
out
pop
cmc
mov
and
jmp
leave
lods
add
mov
loop
adc
test
in
jmp
test
data16
cmp
dec
push
jnp
std
push
push
test
int3
push
add
lds
jb
loop
lret
mov
sbb
pop
into
cmpsl
mov
add
add
shll
xchg
push
adc
dec
add
inc
cli
cltd
insb
sbb
popf
push
sub
pop
lock
ds
sbb
fucomp
jne
adc
mov
push
ficoms
pushf
imul
bound
cmp
in
repz
jbe
sarl
jg
lret
add
test
fisttpl
mov
jne
push
hlt
je
add
dec
push
cmp
mov
fs
and
push
inc
test
jnp
fdivr
mov
stc
je
ss
jb
lsl
hlt
dec
adc
add
dec
dec
add
pop
push
add
cmp
movb
mov
and
int3
and
push
lcall
push
mov
lret
icebp
js
es
test
push
imul
lcall
sahf
jl
sub
xlat
push
xchg
add
jae
rclb
xchg
cmp
add
cmc
mov
add
jp
sti
sar
dec
jns
xor
cmpsb
sbb
add
lds
xor
shr
adc
out
adc
insl
or
jle
and
sub
add
fstpt
lahf
test
shrd
in
cmp
and
pop
jecxz
dec
pop
mov
sub
add
insl
sub
lahf
mov
push
add
insb
jge
dec
scas
outsb
data16
gs
mov
add
jne
cld
loope
mov
push
dec
xlat
xchg
cld
cmc
xchg
add
add
scas
add
arpl
jmp
inc
addr16
mov
add
fbstp
fcmove
int
and
inc
sub
mov
and
daa
lea
out
adc
pop
mov
clc
inc
or
push
aam
lcall
inc
aad
or
sbb
imul
out
push
xor
mov
mov
or
mov
int3
push
add
mov
mov
adc
mov
jb
lret
xchg
es
gs
xor
add
in
push
sahf
je
out
inc
add
jl
mov
rdtsc
and
push
int3
pop
jno
add
dec
mov
lcall
test
xchg
repnz
xor
jp
out
pop
add
ret
js
ljmp
mov
add
pop
add
push
data16
mov
mov
pop
popf
inc
adc
test
out
xor
dec
sbb
add
add
cmp
add
pop
jnp
das
push
sbb
mov
cmp
iret
push
cs
add
stos
mov
cmp
inc
add
popa
inc
cmp
mov
adc
ljmpw
in
int3
subl
push
push
daa
into
inc
pop
cmp
add
out
repz
pop
jb,pn
arpl
cwtl
out
add
add
push
add
inc
jle
int
xlat
add
adc
in
add
add
xorb
repz
jge
push
fnstsw
cmc
or
xchg
ljmp
test
insl
das
pop
mov
push
sub
pop
leave
add
pop
cmp
outsb
sti
push
inc
fincstp
xchg
je
cli
add
add
add
icebp
mov
aaa
nop
mov
push
int
add
flds
jns
add
add
neg
mov
and
pop
mov
and
data16
dec
sub
movsb
add
aas
inc
pushw
mov
mov
fidivrs
or
add
inc
insb
dec
mov
mov
sub
ret
sub
mov
out
inc
cs
ja
dec
adc
add
out
xor
call
js
movl
xor
ss
lods
add
mov
sub
push
pop
stos
add
arpl
jbe
jle
imul
mov
add
xchg
mov
jnp
mov
mov
loope
mov
mov
cli
dec
sarl
lds
add
or
int
dec
loopne
push
cmpsl
xor
inc
test
push
add
xor
sbb
inc
inc
fistpll
add
mov
ljmp
lret
dec
arpl
xor
mov
cli
int
iret
jecxz
or
test
aad
dec
xor
imul
loopne
mov
stc
mov
or
xor
add
add
add
enter
sbb
repnz
inc
sti
cmp
inc
inc
and
xor
fwait
addb
inc
or
lea
addb
jmp
mov
mov
push
repz
das
add
sti
adc
cmp
in
cli
xchg
sbb
pop
sbb
fnstsw
fsubs
rcl
adc
push
sub
xor
xlat
push
cwtl
add
dec
add
mov
icebp
in
movsl
add
fwait
pop
mov
in
mov
fdivl
push
fcmovnbe
or
leave
add
add
sti
xchg
gs
lcall
subb
jae
icebp
enter
cld
push
xor
roll
hlt
ret
xlat
cmc
jb
adc
jmp
add
pop
adc
pop
dec
iret
ret
addr16
aaa
das
outsb
jo
cs
cmpsb
xchg
push
movsb
es
pcmpgtd
pop
sub
lods
sub
dec
add
mov
pusha
mov
enter
in
jno
divl
cmp
loop
inc
addl
add
jb
fnstsw
fstl
shlb
incb
xor
push
jbe
bound
adc
inc
add
in
push
or
adc
add
les
lods
push
mov
push
fs
ret
ficomps
ljmp
ret
push
loop
dec
stos
incl
movsb
rorl
daa
lahf
fs
imul
adc
xor
pop
add
pop
add
imul
add
stos
jb
add
mov
add
loope
add
push
rcr
add
sub
sub
add
pusha
xchg
clc
adc
add
add
mov
mov
test
pushf
cmp
sbb
cs
and
scas
xchg
je
jnp
repz
movsl
cmp
arpl
movsb
cmp
js
dec
dec
add
dec
mov
mov
mov
test
fiaddl
add
stc
add
in
mov
pop
leave
fiaddl
fnsave
mov
mov
lret
mov
or
lret
xor
and
sub
xchg
pop
jb
cwtl
lret
lret
xlat
int3
jmp
insl
xchg
xchg
or
hlt
roll
dec
aad
gs
ret
mov
mov
add
data16
movsl
push
mov
mov
mov
and
pushf
jae
add
pop
andb
adc
mov
pushf
xchg
push
scas
gs
mov
sub
add
std
xor
jmp
shrb
scas
fidivl
push
add
sbb
cwtl
pop
les
mov
mov
push
mov
add
cli
dec
add
stos
les
cmp
mov
mov
fs
fistps
sub
lret
fcomi
xchg
cmp
add
into
inc
ss
icebp
dec
push
mov
out
dec
call
mov
mov
jno
stc
dec
adc
data16
jo
mov
mov
cmpsb
lret
mov
mov
sar
loopne
rcrl
insb
sarb
sub
in
leave
mov
bound
stos
out
or
enter
add
xchg
rcl
add
jbe
mov
xchg
adc
dec
loope
xor
mov
push
add
adc
je
push
dec
push
add
test
mov
ficoms
arpl
xchg
fwait
mov
iret
add
inc
sbb
stos
and
dec
mov
stos
add
or
int3
popa
ljmp
add
not
add
mov
inc
sub
scas
repz
mov
dec
xchg
testl
adc
add
add
sub
call
sbb
sbb
xor
addl
jmp
mov
cmp
loopne
lock
xor
add
xor
popf
push
sub
mov
out
iret
movsb
add
cmc
jle
lods
enter
cmp
and
leave
xor
int3
scas
test
push
lret
jmp
ss
lcall
jno
mov
mov
sti
das
ljmp
pusha
sub
scas
jecxz
icebp
lea
cmpsl
imul
add
arpl
jno
popf
cmpsl
lea
xchg
add
fnsave
pop
push
jns
add
push
push
mov
imul
push
addr16
push
fwait
mov
cltd
add
lret
stos
xor
movsl
jb
jecxz
adc
filds
inc
fadd
push
fstpl
push
mov
add
in
dec
pop
push
pop
outsb
cmp
imul
push
jno
push
adc
xor
and
gs
dec
push
repz
xchg
add
pop
sarl
les
or
xchg
mov
add
cli
add
push
cmp
jae
push
aas
mov
add
in
or
add
add
add
xchg
addl
mov
pushf
movb
aaa
mov
insl
mov
push
std
cmp
fistpll
xchg
add
mov
add
sar
shlb
add
pop
les
mov
shr
jbe
andl
cld
or
mov
sub
lock
add
add
rcll
rcll
add
inc
int3
add
jle
xchg
jecxz
lods
flds
add
scas
pop
rcl
jmp
add
jae
add
add
outsl
mov
cmp
je
xor
add
clc
pop
movsl
sub
mov
into
add
jno
inc
inc
shll
clc
inc
jecxz
add
arpl
adc
lods
sub
out
sti
sub
inc
add
les
add
or
popa
cwtl
cmpsb
and
adc
out
out
and
fidivrl
addr16
cmp
mov
clc
clc
jns
inc
dec
jns
cmc
mov
add
mov
mov
popf
pushf
xlat
xchg
stc
mov
adc
xchg
mov
xchg
xor
inc
add
push
dec
addr16
push
mov
idivb
jmp
loop
jno
or
mov
jg
cmp
dec
adc
sahf
cld
push
adc
scas
push
add
xchg
xor
ja
dec
fistl
in
cmpsl
sarb
mov
mov
jle
add
sub
sub
sub
ds
add
add
fdivrs
int3
std
adc
shll
mov
ret
lcall
add
add
and
testl
adc
popf
mov
mov
int3
adc
add
and
mov
lcall
xchg
adc
sbb
mov
in
repnz
in
negl
add
xchg
imull
mov
push
std
pop
inc
mov
ret
mov
test
add
xchg
adc
mov
pushf
imul
add
mov
cmp
fsts
clc
scas
shrb
mov
xchg
mov
shl
inc
fstl
mulb
sub
dec
data16
add
add
cs
mov
adc
test
xor
gs
dec
or
cmp
cmpsb
xchg
xor
jbe
shlb
push
or
lods
testl
adc
dec
push
jmp
add
add
add
mov
sahf
add
cmp
push
mov
and
or
jo
xchg
dec
je
ja
add
jne
sub
inc
cs
out
inc
jg
adc
test
add
jno
sbb
enter
fsubrl
pop
add
add
dec
rol
mov
sarb
dec
push
push
sbb
cld
ljmp
out
cltd
cmp
arpl
push
xorl
mov
popf
rol
push
out
xor
nop
out
mov
imul
add
adc
xchg
push
bound
cltd
cmc
movsl
and
enter
jbe
add
mov
jcxz
mov
rcrl
add
add
add
rcrl
inc
pusha
testl
jae
jge
or
xchg
pop
mov
pop
adc
es
mov
inc
mov
or
sahf
rclb
ds
movsb
xchg
push
jge
add
cmpl
push
fildl
add
fsubl
into
aas
add
data16
mov
insb
loope
jle
into
add
dec
dec
add
push
xor
xchg
add
add
nop
sbb
mov
inc
pop
jecxz
sldt
pop
arpl
xchg
add
enter
add
xchg
xchg
icebp
cld
sub
inc
add
ljmp
fists
and
fbld
xor
and
and
pop
push
dec
sbb
cltd
mov
jo
ljmp
xor
out
xchg
stos
or
pop
mov
cmp
cmp
subb
pop
sahf
pop
outsb
cmp
dec
or
dec
push
adcl
cmc
jle
adc
ljmp
mov
push
pop
push
aad
add
pop
cmp
dec
mov
add
faddl
push
roll
jmp
rcrb
add
mov
xchg
pop
add
ljmp
scas
sub
cmp
mov
fisubrl
jg
push
xchg
popf
popf
add
sti
cli
mov
mov
repz
pusha
add
aam
adcb
icebp
clc
inc
fs
add
push
cmpsb
mov
inc
mov
sub
int
xchg
scas
mov
and
test
add
test
xor
data16
inc
adcl
or
stc
sub
sbb
movsl
mov
add
and
dec
sub
dec
arpl
int
lods
outsl
mov
add
fwait
adc
dec
pop
xchg
and
add
add
inc
add
insb
add
outsl
inc
loopne
pop
cmp
mov
fidivrs
out
push
sub
mov
add
fstl
sbb
pop
les
sub
sbbl
mov
mov
adc
push
mov
cmpb
add
pop
mov
cmpsb
push
xchg
pop
adcl
into
push
test
or
pop
notb
pop
or
aas
jmp
sarl
adc
addr16
add
repz
lods
add
add
outsl
test
cltd
add
lds
call
rcl
add
sub
add
nop
or
cld
add
test
and
adc
repnz
inc
cmc
jb
xor
adc
outsb
push
imul
dec
cmp
sbb
imul
scas
add
sub
cmp
or
sub
in
push
mov
add
add
and
es
sub
push
loope
push
xor
push
movb
or
jns
push
adc
jp
jle
xchg
jp
mov
sbb
adc
xor
les
push
subl
cld
add
jecxz
jae
into
add
dec
ret
inc
push
cmp
mov
xchg
xlat
jmp
lea
xchg
dec
aad
xchg
xchg
fwait
push
xchg
mov
add
test
stos
mov
add
insb
lods
sbb
dec
test
cmpsb
add
mov
mov
or
jo
sub
negl
daa
int3
add
mov
push
mov
mov
adc
or
loopne
fdivrs
add
mov
dec
test
mov
add
pop
cmp
mov
cmp
and
add
sbb
clc
inc
outsl
inc
sbb
xchg
pop
push
push
adc
nop
push
sbb
cmp
in
add
data16
xchg
sub
mov
inc
adc
inc
call
push
or
into
mov
dec
sti
aaa
adc
imul
test
mov
mov
mov
xchg
xchg
adc
cmc
dec
lds
add
clc
and
inc
add
movsl
mov
add
add
sarl
dec
xchg
pop
add
or
repnz
gs
test
adc
ds
fsts
or
sub
pop
mov
stos
add
push
mov
adc
loope
movlps
roll
outsb
push
add
add
imul
inc
or
pop
push
mov
xor
or
lea
jecxz
movb
js
add
cmpsl
push
xchg
inc
rorl
lods
add
adc
rorb
cmc
jno
test
add
outsb
sub
lds
movl
aad
sbb
add
add
mov
mov
xor
test
and
mov
fwait
add
push
xor
push
push
mov
jae
adc
or
outsb
sub
pop
nop
scas
test
in
hlt
jbe
ljmp
or
add
add
push
fistpll
je
and
mov
movsl
add
adc
mov
addb
adc
xchg
add
aad
xchg
imul
addl
ljmp
add
ret
ss
push
das
mov
stos
sub
in
mov
xchg
and
in
or
js
out
out
fdivrp
out
push
imul
add
test
test
aam
das
popf
sub
add
push
add
lea
dec
add
clc
add
movsl
popf
jg
repnz
cli
inc
cmp
add
pop
jge
rcll
mov
cmc
cld
or
pop
sarb
js
inc
mov
test
mov
jo
dec
push
add
pop
rcll
jl
mov
jno
in
sbb
add
jmp
addl
icebp
sub
push
je
sbb
fisttpl
and
mov
fdivr
sbbl
push
test
out
push
mov
cmp
xchg
add
ret
add
scas
adc
insl
mov
jmp
sub
cmp
push
add
std
add
and
push
cmp
notb
inc
xor
mov
lahf
in
test
or
sbb
out
fs
inc
xor
loopne
cmp
mov
mov
add
loopne
add
jne
out
enter
add
and
aas
bound
dec
sarl
ds
jne
push
mov
mulb
daa
popa
repz
add
xlat
int
add
sub
fimull
cmpsb
ficoms
add
add
add
inc
insb
fsincos
add
filds
add
or
aad
mov
pop
add
ret
fidivl
jp
repz
add
jbe
add
add
xchg
inc
inc
fcomp
jae
xor
ss
xorb
mov
cmpsl
cltd
jecxz
jne
add
cmp
xor
add
add
sub
pop
ds
jo
add
popa
sarb
add
insl
addl
add
mov
std
outsb
fmuls
inc
mov
xchg
fs
push
jmp
lret
cli
push
or
in
test
fisttpll
add
aaa
push
je
xchg
mov
jnp
mov
stos
pop
push
loopne
jmp
outsl
sub
xor
out
mov
add
adc
add
add
lods
xor
xchg
push
push
jp
adc
and
mov
add
push
add
cmp
add
jb
ljmp
enter
sbb
aad
sub
mov
and
cmp
cmp
add
add
mov
ret
mov
pop
mov
add
xor
dec
bound
jnp
add
adc
adc
movsl
popa
xor
pop
add
add
faddl
iret
cmp
lret
sub
in
mov
or
or
jl
add
popa
xchg
shr
fs
test
fwait
dec
sbb
adcl
aad
fsubr
dec
mov
add
stos
inc
push
sahf
test
aas
cmp
inc
push
sahf
dec
filds
fwait
out
mov
pushf
add
dec
cmp
pop
in
ljmp
sub
out
inc
scas
aaa
ret
mov
mov
cmpsl
int
push
sub
pushf
mov
push
push
add
daa
dec
add
mov
sub
add
das
push
int3
add
lds
in
aaa
or
aas
add
xor
xchg
xor
xchg
cmp
push
aas
or
or
adc
test
cmpsb
ret
push
call
push
das
imul
add
jp
adc
inc
addl
sti
cmpsl
xchg
aad
inc
sbb
roll
inc
es
data16
add
out
roll
data16
jg
insl
test
or
test
pop
cmpsb
cmp
push
int3
add
add
cmp
xor
lret
xchg
add
add
ja
addl
xchg
mov
or
mov
mov
push
in
add
in
xchg
and
adc
add
out
scas
jnp
test
dec
fcoms
jbe
movsb
aam
pop
cs
out
cld
shll
push
mov
mov
imul
repnz
sbb
fstps
jne
add
cmp
icebp
sub
adc
mov
push
in
add
mov
negb
push
lock
sub
rolb
movsb
jnp
popa
adc
pop
mov
jl
push
xor
xchg
mov
xchg
pop
jl
add
add
or
jo
mov
xchg
cmpsb
das
roll
leave
mov
add
mov
fiaddl
shll
add
and
dec
rolb
xchg
roll
daa
add
jg
fs
jmp
xor
sbbb
dec
add
sbb
mov
dec
aas
lret
jbe
in
mov
dec
shrl
xlat
cmp
imul
in
sbb
inc
iret
movsl
jmp
std
add
add
cmp
clc
mov
inc
clc
out
jge
jmp
sub
stos
inc
lret
pop
add
cmp
add
in
orl
add
lret
popa
jns
mov
add
add
add
add
cmp
jmp
or
add
xor
repnz
add
sub
pop
add
dec
xchg
sbb
add
push
push
mov
add
enter
stos
mov
or
and
add
shll
dec
add
cmp
fcomp
jmp
xchg
jbe
aas
add
in
fidivrl
jge
dec
dec
xchg
aam
mov
push
inc
mov
adc
aas
cmc
add
xchg
add
repz
das
call
xchg
add
mov
pop
add
stos
push
dec
jecxz
out
add
jnp
insl
arpl
ds
popf
je
xchg
sti
ffree
jp
push
xchg
mov
es
mov
or
sbb
incb
lea
mov
xchg
lcall
int3
hlt
fiadds
push
call
arpl
insl
je
add
movb
enter
add
roll
jns
jge
or
popf
ds
push
les
dec
outsb
jg
loope
sub
lret
mov
scas
sbb
dec
insb
popf
or
sub
cld
push
adc
clc
mov
and
push
mov
fbld
mov
mov
add
les
icebp
xor
divl
out
dec
les
mov
pop
into
xor
repz
sub
mov
rorl
lret
imul
xchg
sbb
push
add
add
inc
fs
xlat
xor
lods
int3
cmp
mov
xlat
xor
aaa
dec
ljmp
sbb
add
add
sub
mov
incl
mov
repz
jle
dec
add
jle
outsb
cmp
cmp
add
pop
or
rcrb
mov
pop
mov
inc
ss
add
jb
jmp
sub
xchg
xchg
cmpsb
sub
cld
scas
xchg
xchg
stos
lret
insl
leave
lds
xchg
add
or
xor
and
test
js
pop
push
shlb
xor
scas
push
xor
push
pop
ret
dec
jbe
fcmovnb
repnz
mov
push
lcall
orb
add
dec
flds
push
adc
adc
inc
dec
scas
repnz
jecxz
cli
mov
add
add
add
mov
adc
add
das
push
cmpsl
ret
das
in
aas
jl
mov
pop
dec
ret
out
bound
cmp
xchg
xchg
popf
xchg
popa
iret
xor
mov
aaa
jo
or
add
lods
das
fsubl
add
scas
test
loopne
jg
push
cltd
push
add
dec
outsb
data16
push
mov
sahf
push
xor
cmc
adc
xchg
and
mov
iret
dec
scas
cmpsl
add
orl
rclb
hlt
mov
aaa
stc
and
bound
adc
push
cltd
in
dec
mov
aad
adc
hlt
rorb
lret
inc
mov
leave
add
add
mov
dec
cmp
mov
xor
pop
and
jg
add
cltd
aas
xor
push
gs
add
xchg
leave
jg
das
mov
xchg
mov
xchg
jnp
add
cmp
stos
sub
pop
add
into
pop
out
adc
xchg
into
mov
aaa
stos
ja
mov
push
lcall
xor
dec
push
mov
punpckhbw
xlat
add
push
shrl
push
xchg
push
add
add
cmc
int3
mov
add
sub
das
jne
sub
loop
gs
mov
push
push
add
fisttpll
movsb
mov
jbe
sbb
hlt
sbb
adc
cmp
sub
push
dec
jne
shlb
add
ja
ljmp
lret
movsl
push
xchg
les
add
into
add
add
adc
jmp
rep
add
inc
cmp
lcall
fdivrs
push
ds
mov
das
push
add
push
xchg
lcall
dec
gs
add
sub
push
adcb
and
lret
aad
mov
xchg
nop
or
out
mov
xor
push
xlat
loopne
push
and
fldcw
popa
aam
jmp
out
int3
daa
in
out
ja
ret
int3
loopne
insb
stos
insl
ljmp
pmaxub
push
mov
sbb
sbb
test
shll
cld
add
add
aaa
cmp
jnp
outsb
dec
pop
addl
add
xchg
or
stc
xor
fs
in
rolb
in
rorl
add
sahf
es
jp
inc
dec
daa
lods
icebp
cmp
push
xor
xchg
mov
gs
add
fdivr
rorb
out
adc
pop
andl
mov
sub
adc
call
xor
fwait
nop
inc
dec
jmp
add
popf
push
cmp
cmpsl
xchg
push
ds
add
adc
sbb
dec
and
mov
jb
add
mov
add
les
mov
stc
xchg
add
cmp
ficompl
mov
inc
jns
inc
popf
jbe
cli
mov
into
movsl
pop
pop
adc
fcoms
add
mov
ss
aad
cmp
add
stos
loopne
popf
add
and
sti
sub
gs
movsl
cs
leave
mov
and
add
mov
cli
ja
pop
add
and
jne
add
or
insl
push
mov
icebp
jecxz
outsl
xchg
and
popa
push
push
add
sub
fldenv
sbb
jb
or
bound
jl
mov
add
cmpsl
leave
xchg
mov
cltd
filds
sub
adc
adc
je
add
add
add
add
cli
add
sub
das
add
test
into
and
add
jmp
mov
push
mov
in
pusha
pop
call
add
and
mov
xor
fnsave
dec
jns
xchg
add
pop
xor
sahf
sbb
jb
std
aad
sbb
mov
pop
push
sbb
xlat
dec
and
dec
ret
add
loope
jb
push
movsb
int
add
push
pop
dec
sub
stos
xchg
outsb
inc
sub
mov
addb
add
cmc
add
sub
sbb
inc
xchg
cmp
bound
push
lods
clc
and
enter
in
mov
mov
scas
xlat
pusha
hlt
dec
xchg
add
into
in
fstl
loopne
xorl
add
sbb
fucomi
mov
cld
pop
fidivrs
dec
cmpsb
jo
sbb
pop
cmp
jae
jbe
outsb
ss
jmp
in
sub
push
sbb
inc
adc
add
int
popf
jmp
dec
ljmp
mov
and
outsb
add
mov
lock
mov
push
add
jmp
les
fsubs
iret
mov
mov
push
jg
add
cmpsb
aam
lock
addl
jb
arpl
add
aas
scas
std
fldt
sub
aam
or
add
pop
lahf
mov
jp
add
movsb
cmpsl
and
adc
dec
xchg
mov
roll
mov
inc
outsl
aam
push
or
subl
add
xor
loope
sub
mov
shll
xchg
addl
inc
fiadds
dec
lea
push
shlb
cmp
call
movl
out
lcall
and
dec
mov
or
xor
jae
rol
inc
cmc
jmp
add
fistl
std
cwtl
mov
xchg
stc
cli
xor
add
add
fbld
push
add
add
sub
add
pop
cmp
mov
xor
add
push
sub
mov
lahf
inc
cld
dec
pop
jae
cmp
jp
cld
je
xor
mov
fadds
aaa
out
add
add
movb
cs
xchg
jl
fadds
popa
jno
in
pop
roll
cmp
stos
and
ret
add
xchg
or
lods
mov
mov
gs
jae
pop
dec
mov
jno
mov
outsl
and
enter
inc
xor
fadds
jg
mov
cmp
add
xchg
test
fdivl
daa
in
aam
repnz
and
mov
test
push
imul
aaa
cli
add
mov
xor
into
test
loop
and
jmp
push
lods
cmpsb
lods
repnz
jp
lahf
mov
pop
jnp
sti
movsl
inc
jnp
add
dec
add
sub
les
imul
enter
dec
and
ja
movsl
add
insl
rorl
push
or
int
cltd
mov
cmp
jg
add
push
je
inc
inc
mov
and
arpl
out
sbb
das
or
lds
add
add
cbtw
adc
sub
call
repnz
leave
adc
add
fimull
out
add
pop
add
frstor
dec
scas
insb
aad
cmp
add
shlb
addr16
jb
or
test
arpl
bound
adc
add
adc
add
xchg
add
testb
cmp
loope
scas
push
dec
lea
outsb
jns
sub
sub
pop
xchg
jne
notb
fsubrp
push
outsl
pop
sbb
mov
or
add
add
push
add
subl
inc
call
mov
int3
mov
cmp
add
ds
cmpsl
sub
add
mov
push
jl
divb
mov
mov
or
mov
add
xchg
mov
xorb
mov
in
xchg
fisubrs
add
adc
fistl
mov
cmp
rol
cmpsb
imul
add
pop
pushf
imul
pusha
adc
mov
jg
repnz
push
lret
das
hlt
sti
es
popf
repz
ret
mov
add
pop
lcall
dec
or
mov
ret
add
xlat
ds
enter
sarl
xchg
aas
loop
mov
stos
ljmp
dec
jns
pop
push
das
loope
mov
test
xchg
dec
cmpsb
xchg
call
lea
sbb
push
mov
push
loop
insl
popa
add
or
test
dec
stos
out
aaa
sbb
bound
and
add
ret
and
fwait
add
loope
pop
pop
out
jle
jnp
test
xchg
sbb
dec
or
add
gs
insb
sbb
cmp
sbb
call
mov
sar
inc
inc
fs
xchg
popf
add
negb
scas
pop
adc
and
out
mov
mov
add
jnp
in
mov
add
pop
add
cmp
mov
xchg
int
sahf
iret
ret
add
adc
cmpsb
mov
xchg
test
inc
jbe
imul
cli
or
xchg
and
mov
ds
mov
or
add
shll
mov
push
xor
dec
adc
cmpsl
pop
or
filds
push
outsl
movsl
iret
push
mov
add
or
dec
jns
lret
fstp
cmpsl
aaa
jo
add
add
cli
addl
cmp
xlat
cmovs
test
pop
movsl
inc
add
out
add
ficomps
add
jne
int3
in
mov
mov
popa
test
push
mov
sub
inc
dec
inc
add
out
sbb
mov
sbb
add
inc
enter
ficomps
jge
lret
aaa
push
add
out
outsl
shrl
add
sbb
adc
sbb
xor
sbb
scas
xorb
push
add
roll
jmp
out
pop
mov
cwtl
sub
test
stos
push
sbb
add
push
inc
fstpt
mov
and
mov
out
loopne
rcll
sbb
cmpsb
or
lea
mov
xor
ljmp
cmp
outsb
xchg
repnz
mov
in
lret
mov
je
sub
add
pop
add
sbb
fs
pop
imul
xchg
pop
popa
shrb
daa
das
jae
inc
test
xchg
add
bound
or
sbb
shrl
push
sub
loopne
ret
add
fsubp
xchg
call
add
xor
cmp
dec
add
jbe
add
aaa
add
adc
add
testb
xchg
add
inc
pop
push
cli
xchg
in
repnz
imul
jg
dec
movsl
jle
pop
bswap
xor
loopne
xor
adc
pop
add
incb
push
add
or
adc
je
ds
jg
rclb
fcmovbe
imul
push
add
jb
push
push
mov
rolb
jecxz
jno
pop
add
add
push
dec
dec
push
int
inc
inc
add
mov
out
aaa
fwait
or
loopnew
sarb
ss
sbb
daa
add
insl
or
cmc
add
mov
sub
pusha
and
mov
adc
int
push
aas
fadds
jmp
adcb
push
sbb
loopne
xor
das
inc
pop
in
jp
fcompl
or
out
add
shrb
cld
and
add
jge
xchg
mov
mov
fs
bound
movsl
addr16
testl
adc
jno
add
add
es
sub
test
cmp
xchg
or
dec
and
lahf
and
xchg
xor
push
jge
in
scas
sbb
cli
ds
dec
add
lods
jg
xchg
pop
clc
leave
xor
imul
pop
in
test
add
mov
fnstenv
and
push
sbb
push
inc
xlat
add
sub
fs
adc
sbb
add
mov
sbb
fadds
xchg
insl
add
add
faddl
out
sub
bound
and
xchg
mov
shlb
mov
scas
add
cmp
xorl
jne
aas
inc
test
repnz
cwtl
xor
mov
inc
jno
aad
inc
pop
jno
jo
ret
mov
dec
lcall
cmpsl
popf
fists
sub
mov
add
xchg
sbbl
dec
push
sbb
mov
les
sub
mov
jl
xlat
adc
mov
or
leave
in
cmpsl
add
dec
in
jns
xlat
aas
pushf
xchg
or
pop
in
rolb
imul
xor
mov
les
mov
inc
jle
leave
ret
add
cld
xchg
sub
rclb
and
push
add
add
or
lea
std
popa
xor
jmp
popa
add
adc
lds
and
out
cwtl
dec
xchg
push
mov
jge
popa
pop
ja
adc
orl
dec
add
xchg
test
add
push
push
outsl
dec
lock
xchg
dec
mov
mov
add
mov
add
ret
push
ss
lret
or
add
mov
mov
xor
pop
inc
es
add
cwtl
inc
mov
push
addr16
daa
in
es
or
cs
cs
ja
add
fs
add
and
stc
mov
mov
cwtl
data16
xchg
sbb
movsb
popf
enter
sub
cmp
or
mov
push
ds
into
stc
sbb
in
jbe
imul
stc
dec
or
jl
test
add
adc
xor
popa
and
mov
and
pop
pop
jnp
scas
sbb
or
xchg
mov
inc
xchg
ss
add
add
sbb
and
mov
rorl
data16
daa
pop
lcall
dec
push
or
or
das
mov
in
xchg
adc
add
cli
mov
mov
add
iret
add
fnstsw
xor
push
movsl
push
dec
insb
into
sub
test
insl
imul
mov
pop
rclb
push
mov
mov
test
add
xchg
shlb
movsl
pusha
add
fisttpl
adc
rcll
sub
cmp
shll
insl
pop
add
mov
lods
out
cmp
push
add
loopne
add
add
cmc
std
in
add
add
flds
mov
iret
push
movsl
sahf
mov
faddl
es
mov
xor
mov
stos
rcl
stos
std
add
or
filds
mov
imul
int
adc
aaa
nop
cmp
cld
insb
xor
test
test
enter
sarl
sbb
dec
add
mov
mov
sbb
ss
js
add
add
add
sub
add
mov
test
popf
and
add
testl
pop
stos
xlat
add
mov
add
sahf
xor
sub
mov
notl
test
pusha
jae
add
bound
hlt
sbb
adc
mov
aam
add
add
test
add
inc
push
add
ja
adc
add
int3
mov
int
adc
jne
test
or
adc
imul
fadd
mov
xchg
lret
xchg
mov
add
cmpsl
mov
fadds
add
rolb
ret
jecxz
loopne
out
mov
push
je
mov
rorl
xchg
imull
jle
push
push
add
add
cltd
rcll
fadd
addr16
arpl
add
cltd
rorl
enter
or
mov
aad
cltd
sub
sub
xor
mov
enter
push
mov
mov
xor
xchg
test
xchg
nop
add
test
mov
jge
inc
mov
lods
adc
push
inc
mulb
into
mov
pusha
mov
xor
jo
jge
jne
mov
jbe
sub
into
imul
or
inc
mov
push
inc
sub
pop
fimuls
cmp
stc
fstpl
cmpsl
mov
push
outsl
movsl
cltd
aas
je
call
add
stc
out
xor
adc
js
in
mov
and
add
add
cmc
mov
sbb
inc
int3
add
add
mov
sub
movb
xchg
icebp
add
cltd
mov
add
add
in
add
xchg
mov
add
adc
mov
adc
dec
mov
mov
icebp
push
inc
push
loope
inc
fcomps
xchg
stc
repz
hlt
cmp
add
push
cmp
nop
cmp
push
lret
test
mov
and
addl
in
cmc
push
faddl
sub
xor
jbe
loop
insl
rolb
iret
pmuludq
sbb
push
ja
js
xchg
add
ret
cmp
shlb
cmp
xor
mov
lcall
jg
mov
adc
push
mov
popa
adc
jno
mov
push
outsb
dec
xchg
stc
cmp
pop
cli
jecxz
pop
mov
xor
hlt
inc
add
inc
leave
test
sti
andb
arpl
notb
ds
inc
pop
mov
rclb
sbb
pop
leave
int
jge
add
imul
addb
loope
push
jge
ss
jnp
push
sbb
add
and
sub
xorb
jmp
mov
sub
divl
popa
push
fcmovu
sub
scas
call
pushf
outsb
jns
dec
sub
test
movsl
sbbb
cwtl
add
mov
xor
push
push
out
stos
add
popa
inc
ss
mov
xchg
adc
in
mov
sub
cmp
aad
dec
inc
hlt
imul
xor
cmp
adc
out
dec
nop
movsb
inc
in
in
dec
jnp
mov
outsb
gs
cmp
push
add
imul
mov
pop
cmp
dec
lret
adc
cltd
jl
shr
and
ds
fadds
dec
pop
inc
jo
jnp
jbe
mov
sbb
sbb
cmp
loop
push
mov
add
repz
sbb
inc
pop
add
add
inc
add
or
loopne
add
pop
jns
add
xchg
mov
dec
jge
sbb
popa
aas
add
cli
ja
out
adc
xchg
test
cs
es
add
in
test
add
mov
xor
and
sub
add
jb
out
cmp
lods
push
in
es
sbb
add
jl
shrl
out
add
or
xchg
push
repnz
adc
add
or
add
fisubl
add
xor
add
add
jne
lea
add
lret
ret
mov
xorb
mov
enter
add
xor
cmp
add
add
lret
jge
out
mov
and
iret
aad
call
fs
je
ljmp
jb
fdivs
jp
jo
rorb
js
icebp
cmc
jb
fwait
jnp
fmul
outsl
mov
out
sahf
add
lahf
mov
cmp
sub
es
sarl
dec
sahf
insl
add
xchg
mov
push
pushf
shll
mov
cmp
stos
mov
test
push
push
push
add
pop
inc
add
add
rdtsc
push
sub
rcl
cmpsl
add
loopne
add
enter
fldt
adc
add
dec
ljmp
mov
test
cli
out
mov
sbb
orb
add
adc
add
outsb
add
cs
adc
add
dec
mov
pop
outsl
add
xor
sub
jge
inc
sbb
movl
pop
pop
adc
push
push
addr16
sahf
test
mov
cmp
add
add
scas
call
xchg
mov
or
aas
mov
ret
cs
fbstp
xor
xor
addl
out
jg
xor
push
and
add
mov
add
pop
mov
cli
cld
ret
sub
roll
xor
pop
sub
cmp
in
test
pop
movsb
push
sbb
cli
popf
add
adc
iret
adc
add
sahf
sbb
test
mov
push
pop
push
rorb
push
cmpsl
cwtl
in
add
xor
add
lods
cmp
add
push
ljmp
call
mov
fwait
insb
inc
pop
lahf
dec
push
add
data16
movb
ret
ud1
xor
pop
js
test
push
pmaddwd
mov
xlat
int3
mov
push
movb
add
stc
cmpsl
test
inc
lock
adc
testb
test
outsb
mov
push
push
cltd
insb
pop
out
push
add
inc
iret
or
imul
or
daa
sti
mov
mov
pop
jno
xor
add
add
push
pop
mov
js
cmc
adc
mov
insl
and
mov
xor
leave
or
add
jnp
stc
and
add
add
mov
cmp
xchg
in
je
adc
jecxz
inc
fnstcw
shl
pop
mov
add
push
add
xchg
cld
mov
pop
add
push
adc
add
gs
mov
sbb
sbbb
cld
cmpb
xchg
fstpt
out
bound
push
inc
adc
jnp
js
jecxz
lret
and
inc
sbb
lret
jne
shrb
ljmp
add
lcall
jns
stos
xor
pushf
sub
jg
add
loope
in
rolb
push
ds
add
add
mov
fisttpll
test
add
loopne
loope
pop
aas
mov
and
add
and
xchg
sbb
ja
inc
add
dec
dec
add
mov
shr
cwtl
dec
sub
jo
or
pop
push
cmp
cwtl
xchg
loope
testb
pusha
add
adc
jg
add
adc
clc
adc
add
add
push
movsb
int
xor
xor
sub
push
cld
or
xchg
inc
add
add
adc
imul
push
roll
sti
fnstenv
pop
mov
xchg
dec
cwtl
pop
pushf
out
jmp
or
mov
xchg
or
adc
stos
lea
mov
xor
cmpsb
notl
in
das
addb
xchg
mov
scas
add
dec
imul
adc
jmp
movsb
sub
push
insb
fnstenv
icebp
cmc
and
add
std
add
scas
adc
hlt
pop
movsb
add
test
cmp
add
cltd
adc
pop
imul
loopne
xchg
xchg
or
popf
stos
sbb
add
hlt
pop
add
lea
mov
loopne
out
mov
or
cs
add
popa
imul
dec
or
add
mov
lea
dec
dec
xor
dec
xchg
push
and
jo
inc
js
xchg
test
add
popl
clc
add
dec
popf
aam
mov
add
cs
iret
sub
imul
and
add
add
das
xor
rorb
rcr
cmp
add
aad
add
daa
jmp
adc
inc
data16
mov
add
adc
jo
add
and
or
cmp
cmc
movsl
rclb
rorb
cmp
xchg
add
inc
mov
add
mov
jae
popa
or
lea
add
idivb
cli
pop
cli
imul
punpckldq
and
repnz
add
jecxz
bound
xchg
xor
mov
add
jmp
ds
push
mov
pop
xchg
aas
gs
movsl
jp
gs
hlt
add
add
mov
or
add
or
into
add
pop
adc
jb
and
sbb
js
jp
add
inc
dec
loop
sbb
testb
pop
iret
jno
imul
movb
xlat
cmp
mov
sti
fcmovbe
daa
jb
aas
inc
sbb
add
pop
rcl
xor
inc
fildl
or
add
adc
add
sbb
and
xchg
sub
sub
add
imul
xchg
filds
imul
test
pop
orb
sti
jl
xlat
add
and
add
cmpsb
imulb
jb
dec
loop
push
imulb
mov
mov
rcr
cwtl
pop
psllw
jecxz
loop
ljmp
sbb
or
mov
cmp
daa
mov
add
add
xchg
adc
add
gs
iret
sub
jb
sbb
add
mov
out
push
std
add
loopne
pop
fcmovu
roll
push
popf
add
pop
in
jecxz
xchg
xlat
add
aas
jnp
inc
and
sbb
pop
sti
and
fcmovb
or
ja
xchg
scas
cmp
and
push
les
add
roll
in
push
add
inc
mov
xor
loop
stos
mov
xchg
push
push
dec
jo
add
es
cmpl
and
fnsetpm(287
gs
push
dec
out
jne
mov
outsl
test
movsl
out
cmp
xor
cli
dec
ss
movsb
add
add
add
adc
pop
shl
inc
lock
sub
push
call
cld
or
add
out
lcall
mov
sbb
iret
fsts
or
dec
add
lret
dec
int
adc
jecxz
sahf
add
out
and
jb
popa
insl
lods
jl
in
and
sub
adc
fldl
fs
add
mov
repz
scas
stos
mov
call
sbb
inc
jle
add
roll
aas
push
idivb
int
hlt
xor
sbb
dec
xchg
lock
leave
cmpsl
pop
addl
fst
sbb
pop
push
mov
add
cmc
clc
inc
or
xchg
in
das
add
mov
dec
sbb
add
dec
cwtl
xchg
push
mov
jb
stos
xchg
mov
add
mov
mov
ds
cld
add
stc
cmpsb
ret
push
in
loope
mov
dec
mov
sub
rcr
add
sar
dec
add
pop
xor
inc
xor
in
movsl
jb
sub
out
push
add
gs
mov
mov
sbb
or
add
popf
mov
nop
xchg
dec
and
sbb
aaa
add
inc
ljmp
pop
insl
mov
icebp
inc
push
cwtl
dec
fsubs
stos
sub
adc
stc
xchg
out
xchg
jge
int
add
xor
mov
dec
and
sub
fnstenv
add
arpl
insb
add
jne
cltd
testl
xchg
jo
push
adc
add
out
pop
dec
adc
inc
push
iret
jp
dec
cli
addb
push
cmp
subb
jmp
std
dec
inc
push
int3
mov
scas
fs
pop
mov
mov
fistl
add
movl
imul
add
mov
cs
in
mov
lret
add
cmp
xchg
mov
or
add
jl
daa
pop
cmp
sti
imul
xchg
lods
add
cltd
cltd
and
add
sub
xchg
push
sbb
mov
stc
inc
hlt
dec
insl
insl
add
mov
test
out
les
adc
outsl
jmp
xchg
mov
insb
popa
inc
das
int
stos
leave
jae
jo
lods
mov
cmp
jg
ljmp
pop
xchg
cmp
add
jp
sub
add
add
mov
insb
pop
aad
mov
xor
xchg
jg
add
xchg
out
lahf
xchg
add
inc
sub
jecxz
sbb
add
xor
push
popf
push
es
call
in
add
add
mulb
lret
xor
mov
pop
add
add
sahf
add
xchg
cmp
movsb
push
loop
icebp
and
mov
sbb
mov
add
dec
nopl
test
add
movb
mov
xchg
add
jnp
add
add
scas
repz
pop
pop
scas
outsb
inc
add
add
mov
and
or
xchg
mov
fwait
pop
add
add
jns
push
xchg
mov
add
inc
popa
cmp
out
mov
iret
test
push
push
stc
xchg
mov
dec
dec
mov
stos
bound
add
pop
ja
scas
mov
rcll
out
mov
iret
add
mov
roll
pop
popl
pushf
scas
sub
mov
aaa
cmc
sbb
outsb
xor
xlat
outsb
jb
add
sub
fidivl
popa
dec
sub
inc
dec
cli
test
push
mov
out
mov
daa
push
test
xor
or
test
add
xor
add
and
pop
js
insl
fidivs
aas
mov
cmp
or
scas
add
out
add
sbb
lret
cmpsb
scas
add
outsb
outsb
mov
scas
push
xor
and
jno,pt
adc
rcll
add
add
add
mov
icebp
push
push
add
mov
xor
ljmp
or
leave
mov
push
sub
add
xor
into
mov
clc
sbb
aas
add
outsb
dec
add
sub
add
add
add
add
lret
les
xor
into
xchg
dec
add
insl
movsb
pop
mov
jmp
or
or
call
xorb
mov
cmp
push
inc
add
cmpsb
push
clc
into
test
pop
dec
lahf
nop
icebp
ds
inc
cmpsb
int3
frstor
mov
sbb
add
cmp
sub
jmp
test
add
into
and
addl
iret
add
inc
int
sbb
jne
testb
cs
mov
roll
xor
sbb
add
mov
std
or
add
aas
dec
sub
or
add
push
xchg
pusha
rclb
push
add
xor
enter
inc
lea
pop
add
mov
add
mov
leave
push
cmp
jmp
mov
pop
mov
nop
pop
inc
mov
jnp
cmpsb
add
and
adc
shll
mov
aas
fadd
gs
fs
mov
adc
test
dec
cmp
sbb
fucomip
sbb
inc
sti
int3
cmc
xchg
add
add
andl
fnstenv
mov
mov
jnp
cmp
and
xor
test
adc
pop
and
xor
add
jp
ds
add
and
es
add
inc
add
in
add
pusha
inc
xor
jne
jmp
jmp
push
in
xor
pop
dec
mov
inc
add
inc
sti
test
add
repnz
mov
int
adc
sub
add
cwtl
jecxz
add
mov
fiaddl
aas
adc
incl
sbb
push
sub
dec
add
popa
inc
push
and
rcl
dec
xchg
add
cmpsb
push
mov
jno
stc
cli
add
pop
sahf
add
jmp
pop
bound
das
add
add
mov
add
orb
add
lcall
cmp
int3
add
lahf
mov
inc
mulb
xchg
add
out
mov
fs
add
jo
jnp
push
or
test
mov
add
movsb
sbb
lret
add
lods
jb
mov
int3
retw
xor
add
adc
outsl
lret
and
mov
enter
sub
out
addb
insl
add
data16
cmove
adc
jae
fbld
clc
add
adc
and
mov
xlat
insb
sarl
inc
inc
in
push
jbe
add
jne
inc
fiadds
xor
popa
in
dec
pop
int3
fildl
daa
rolb
clc
jecxz
mov
iret
std
add
subb
dec
iret
lahf
add
and
loopne
add
test
hlt
repz
mov
add
xchg
cmpl
add
lea
adc
add
add
sbb
xchg
xchg
jp
les
mov
add
adc
add
mov
cmc
add
push
jae
fwait
daa
roll
xor
nop
jb
inc
pop
add
mov
sub
sbb
je
ja
bound
sbb
out
or
repz
or
lcall
mov
lods
mov
daa
inc
aad
xchg
add
cmpl
sbb
push
jnp
scas
xlat
loop
sub
adc
add
das
cwtl
sarl
push
fsubs
insb
add
and
sub
add
pop
cmp
les
test
mov
push
pop
add
data16
xchg
data16
mov
dec
ss
out
mov
dec
and
lds
cmp
xorb
cwtl
or
xor
vpunpcklqdq
data16
xor
mov
nop
adc
sbb
mov
jmp
inc
cli
sub
iret
lret
add
add
enter
jecxz
adc
add
jmp
mov
add
movsb
insl
rolb
add
jmp
mov
xor
jns
mov
mov
sti
pop
fcmovb
jp
xor
add
mov
aaa
add
lahf
push
pop
or
lret
cmpsb
repnz
add
adc
xchg
add
push
dec
add
add
mov
and
cmc
add
fidivrl
add
mov
shl
xor
add
cmpsl
add
xor
lahf
add
fildl
arpl
dec
pop
add
call
dec
add
adc
add
mov
fwait
mov
add
xchg
add
pushf
xor
push
in
mov
ja
add
es
mov
rolb
xor
mov
imul
add
push
mov
int3
clc
sbb
je
fmull
add
xor
faddl
sbb
add
icebp
pop
inc
nop
imul
xor
fcmove
xchg
std
push
add
clc
push
cmp
movsl
inc
sbb
inc
sbb
test
stc
mov
iret
mov
into
add
adc
sarb
push
jge
daa
lds
push
cmpb
sbb
adc
add
lods
pop
nop
cmp
bound
or
cs
std
mov
adc
add
or
mov
and
fldcw
xchg
inc
pop
add
jg
jmp
loop
mov
pop
lea
in
jo
add
imul
sbb
movb
gs
imul
aad
push
addb
clc
sbb
dec
rolb
add
add
xor
cmp
add
les
loope
dec
les
jg
je
lods
jne
jae
clc
dec
fcoml
ljmp
in
icebp
test
lcall
add
mov
or
std
add
sub
gs
ljmp
jp
scas
scas
dec
jmp
jb
xor
jl
add
xchg
add
test
inc
add
mov
std
mov
push
rorb
ss
mov
mov
add
mov
inc
add
mov
add
ljmp
add
xchg
push
push
lea
iret
xchg
push
scas
aas
xor
inc
push
jnp
sub
fcompl
sub
pop
xor
aaa
inc
out
or
add
push
add
inc
add
or
sub
dec
or
mov
nop
iret
or
mov
xor
mov
fdivl
stos
push
xlat
push
xchg
lret
jl
dec
mov
mov
pop
mov
pop
inc
gs
add
cmp
addb
pop
cli
cltd
sbb
xor
pop
popf
jle
jb
push
add
arpl
xchg
sbb
mov
cmp
sbb
add
sub
fcomp
in
pusha
lods
push
cmp
repz
adc
sbb
rorl
push
jge
shl
add
fwait
push
xor
stos
bound
mov
out
add
dec
dec
xchg
outsl
cmc
add
mov
add
lods
jns
out
add
push
or
add
push
add
add
inc
add
cmp
mov
xchg
into
sbb
cld
add
fmuls
clc
xor
leave
dec
pop
and
inc
jmp
ret
mov
cmp
stos
imul
xor
test
push
push
push
and
jmp
add
add
dec
cmpsb
in
add
ret
dec
add
mov
ds
repz
das
mov
sets
je
dec
subl
jnp
and
mov
int3
jns
jecxz
in
mov
add
sahf
xlat
call
or
xor
js
addb
xor
and
mov
les
sbb
cmp
mov
dec
xlat
aas
insl
jle
adc
adc
lods
sub
sbb
add
and
jle
jo
mov
jb
dec
cs
add
ljmp
mov
xchg
sbb
xchg
cmp
dec
cmpsl
xchg
cmp
add
in
fcomps
fsubl
xor
shrb
rolb
sbb
lock
cmp
add
dec
inc
pop
cmp
add
lods
cmp
and
pop
xchg
nop
dec
divl
adcb
or
mov
mov
pusha
cs
xchg
out
xor
fs
stc
add
push
out
insl
fistpll
inc
sub
pop
xorl
gs
aam
or
add
leave
in
ret
outsl
fimull
jne
repnz
add
test
clc
sub
movsl
dec
mov
cld
xorl
in
arpl
xchg
mov
push
sub
test
ljmp
add
jae
pusha
xchg
add
test
add
add
cmpsb
xchg
add
stos
lods
and
mov
push
adc
nop
test
jmp
mov
push
jmp
add
ret
testb
xchg
push
je
push
cmp
add
add
jnp
lcall
add
les
cmpsl
and
loope
lahf
mov
mov
je
add
xor
inc
fwait
mov
in
test
adc
push
test
push
add
xchg
add
ja
xor
pop
xchg
adc
outsl
and
adc
push
or
mov
dec
xchg
jmp
sub
stc
ljmp
stos
add
pop
clc
mov
mov
sbb
lods
ljmp
out
sbb
movsb
cmp
and
popw
adc
add
decl
jl
push
pop
mov
mov
mov
mov
add
and
add
mov
fs
imul
popa
cmp
pop
shrb
or
lods
or
add
fadds
add
add
lahf
mov
les
xchg
sti
lahf
add
in
pop
cli
dec
pop
add
jno
shl
enter
out
insl
sub
ljmp
testl
push
jg
data16
mov
ret
fcmovnbe
test
rolb
lret
add
add
fcoms
out
pop
rclb
lods
fwait
mov
xchg
cmp
popf
cld
push
dec
scas
jbe
inc
inc
addr16
je
rolb
mov
sub
push
push
add
pop
push
or
aad
jo
rorl
dec
pop
data16
jb
mov
iret
xor
add
loope
fimuls
loope
jle
jmp
jmp
mov
pop
inc
shll
hlt
insl
roll
std
aas
jmp
outsb
popl
fwait
xchg
jmp
add
sbb
insl
mov
popf
sub
add
jno
add
std
mov
sbb
in
lret
loopne
std
cld
add
sbb
cmp
pop
push
imul
iret
add
inc
inc
jge
mov
pop
cmp
jns
inc
pop
int
hlt
mov
xchg
xchg
pusha
push
or
add
scas
mov
in
loopne
lock
cs
sub
inc
icebp
arpl
repz
jl
in
mov
fisubrl
bound
inc
popl
and
jg
in
push
or
jl
add
sbb
xor
mov
mov
add
push
add
or
ret
xchg
ret
mov
add
add
je
add
sbb
popf
mov
add
add
popf
ja
in
jno
jge
dec
pop
jns
es
dec
loope
pusha
mov
jge
add
sub
movsl
imul
das
bound
inc
add
pop
clc
ficoms
push
mov
push
xor
adc
ror
movsl
xchg
je
cmp
add
movsb
lret
add
add
dec
dec
imul
add
add
mov
das
stos
aad
in
inc
add
fldt
movsl
pop
xor
ljmp
mov
lds
outsl
jne
dec
addr16
mov
inc
sahf
test
inc
shll
int3
add
sub
aam
add
or
rcrl
add
jnp
scas
mov
add
jnp
sbb
in
add
aam
fsubl
sub
add
loop
push
add
mov
push
cld
addl
adc
mov
mov
mov
dec
add
mov
add
adc
fs
pop
add
adc
imul
imul
inc
add
addl
notb
out
add
xor
add
int
clc
add
dec
sub
adc
data16
add
and
inc
xchg
or
add
sti
andb
push
sahf
mov
shl
cld
in
dec
test
inc
and
enter
add
xor
insb
jb
lock
notl
or
jae
add
cs
push
leave
add
inc
aam
lret
add
mov
push
add
mov
adc
adc
lds
xchg
xor
xchg
cmp
jo
add
shrb
dec
ja
add
add
out
insl
nop
ja
fnstcw
jnp
push
dec
ljmp
add
outsl
loop
loopne
inc
shlb
js
pushf
roll
mov
fwait
popw
mov
mov
daa
fiaddl
mov
adc
dec
icebp
push
mov
subb
ficoml
mov
or
or
test
hlt
frstor
popa
das
cmp
gs
pop
lock
jb
fld1
cmp
mov
or
icebp
inc
inc
and
insl
inc
lods
aad
mov
jns
adc
sbb
sbb
loopne
add
inc
movb
inc
scas
outsl
out
shrb
push
mov
popf
leave
mov
dec
mov
or
mov
mov
xor
or
push
xor
xor
cmc
pop
add
test
sub
testl
lahf
es
xchg
popf
clc
push
clc
fadd
xchg
add
lods
add
cmpsl
push
xor
gs
sub
cmc
bound
cmp
mov
lahf
add
push
cmpsb
arpl
sub
jge
or
push
rorb
cli
or
jge
adc
jl
lods
bound
add
push
ljmp
out
mov
je
imul
cmpsl
out
movsb
and
adc
pop
fiadds
es
add
xchg
pop
xchg
call
push
jg
pop
lea
mov
int3
and
push
scas
popf
add
sbb
movsl
xchg
mov
insl
je
arpl
push
stos
movsl
push
inc
inc
stc
mov
enter
dec
cwtl
test
pop
sbb
ficoms
add
rolb
push
stos
push
add
mov
lods
push
cmp
add
ljmp
add
mov
add
jns
dec
sarl
add
mov
add
sub
jmp
mov
lret
fisubrs
and
xchg
add
adc
ljmp
cmp
pop
inc
jge
mov
mov
mov
add
add
std
test
add
sub
scas
popf
mov
aam
lea
rorl
cmp
pop
cmpsl
fldenv
pop
lds
jo
leave
int
xchg
lahf
push
icebp
mov
jg
pushf
pop
push
push
dec
mov
mov
inc
mov
pop
imul
mov
pop
jecxz
sub
jne
push
test
pushf
xor
dec
pusha
into
sub
add
and
mov
sti
add
cld
adc
inc
adc
cltd
pop
adc
les
imul
fcomps
scas
inc
ficomps
push
mov
rclb
out
pop
sub
imul
push
dec
push
pop
aam
ljmp
aad
xchg
ljmp
mov
xor
inc
in
test
cwtl
sub
pop
mov
jp
insb
pop
pop
ret
lods
mov
xchg
sbb
xchg
add
add
sarb
inc
xchg
into
adc
movsb
cmp
test
inc
and
mov
jae
imul
and
mov
sub
int
or
push
push
inc
fcompl
in
inc
jae
pushf
int3
call
add
faddl
and
call
add
xor
add
loopne
bound
and
pop
ret
inc
jne
les
add
add
sbb
push
or
mov
add
ljmp
add
pop
int3
stc
addl
daa
aam
ja
jbe
pop
cmpsl
pop
jl
push
sub
add
repz
pcmpgtw
ljmp
out
add
pop
loop
loop
pop
add
cmc
push
loop
icebp
mov
or
aam
aam
loope
pop
xchg
sub
cmpsb
out
cmpsl
sti
or
push
jecxz
orb
add
mov
add
add
enter
out
fiadds
cmpsl
add
mov
movsb
cmp
jnp
cwtl
sbb
ret
jno
push
in
mov
push
jne
enter
fmulp
lahf
mov
push
sub
sahf
cmp
add
fsubrp
dec
sbb
xchg
sbb
inc
inc
adc
dec
faddl
sbb
pusha
mov
sbb
daa
add
mov
pop
mov
fiaddl
xchg
add
stos
popf
addr16
sub
outsl
in
int
lea
arpl
cmp
inc
daa
add
or
cli
mov
pop
adc
xor
addr16
enter
jge
xchg
sbb
notb
mov
and
xchg
fildl
ret
and
je
inc
jo
mov
mov
sti
add
add
add
rcrl
mov
push
jnp
aas
sbbb
lds
fs
bound
out
sub
and
in
adc
push
fadds
imul
inc
mov
and
jmp
mov
aas
inc
sbb
dec
loopne
cmp
lods
ss
cmp
cmc
pop
cli
in
nop
add
je
mov
sarb
std
in
jp
mov
test
popa
add
add
mov
add
add
inc
mov
iret
sub
cmp
xlat
clc
push
cmp
fmuls
pop
popl
test
add
xor
mov
rol
rclb
scas
and
sbb
jl
push
mov
and
cmpsl
add
dec
jae
mov
scas
cmp
ds
add
inc
mov
sub
dec
push
shl
loop
std
inc
add
jp
add
jp
sub
cwtl
addb
mov
and
cs
pop
outsl
imul
inc
cmp
add
roll
ret
add
inc
pop
push
stos
mov
lahf
add
push
aam
arpl
adc
mov
adc
push
mov
call
sbb
scas
loopne
push
xor
mov
stc
xor
nop
sub
jle
mov
jmp
inc
inc
daa
jae
add
add
aas
pushf
mov
scas
add
sbb
add
add
fld1
push
insl
dec
call
clc
out
sub
rolb
mov
mov
shlb
mov
sub
lods
mov
push
pop
mov
cmp
lods
jmp
dec
xor
bound
add
sbb
pop
aas
ja
add
out
add
in
hlt
pop
aad
in
add
add
lods
inc
jl
adc
push
sbb
dec
pop
pop
add
ja
mov
lcall
add
test
xchg
add
mov
in
lods
or
pop
cmp
enter
fimuls
vpavgw
xchg
add
shl
frstor
dec
pop
cltd
add
cmp
call
scas
cmp
pop
add
mov
cmp
xor
addr16
mov
sti
inc
in
push
jae
mov
jno
mov
add
pop
hlt
inc
in
pop
jge
mov
outsb
jo
jne
add
add
pop
sahf
inc
jne
out
jecxz
add
ret
add
stc
js
add
jle
add
outsb
add
xor
ljmp
add
bound
sarl
subl
mov
aas
sar
aam
cwtl
or
sub
mov
jbe
push
in
push
sub
cmpsb
xor
jnp
add
push
repnz
shl
push
cld
add
cli
mov
sahf
pop
jbe
cmpsb
add
cmc
movsb
pop
nop
aam
cli
fldl
icebp
fistpll
pusha
xchg
and
insl
outsl
and
les
adc
add
jo
scas
testb
cmp
or
int3
sub
je
add
cltd
push
xlat
out
loope
repz
push
fadds
sbb
mov
jns
xchg
roll
or
sub
push
jl
pop
dec
std
cmp
rcrb
mov
popa
pusha
stos
pop
inc
xor
lea
gs
imul
inc
pop
mov
out
loopne
lret
add
xchg
cmp
jmp
jg
jmp
cmpsb
scas
jl
ss
mov
aas
mov
add
xchg
daa
push
popa
push
cwtl
push
xor
sub
add
aam
xchg
js
lods
das
inc
cwtl
add
mov
mov
add
mov
ret
and
psubq
mov
sub
pop
mov
in
push
cmp
imul
imul
sub
in
cmp
xchg
in
addr16
jmp
add
dec
loope
fld
mov
dec
int
pop
mov
add
inc
add
clc
cld
lea
pop
mov
subb
hlt
add
subb
mov
dec
xor
or
mov
test
popl
daa
lret
or
fimuls
call
xor
xchg
scas
sahf
add
mov
andl
add
pop
call
mov
lods
clc
enter
inc
mov
mov
push
sub
push
mov
mov
mov
xchg
dec
nop
ficoms
es
insb
inc
sbb
cmc
mov
xor
cmp
cmp
push
pop
xchg
add
or
mov
push
pop
shll
test
jg
xchg
lret
mov
insb
loop
inc
add
lret
lcall
enter
add
daa
add
mov
mov
pop
aaa
mov
idiv
mov
sub
xor
jae
mov
loope
jge
aad
jp
pop
push
mov
lock
mov
xlat
xor
add
dec
fnstsw
inc
roll
jp
fisttpl
mov
add
sahf
or
jne,pn
sbb
fisubrl
movsl
mov
fstp
je
mov
int
aas
add
lcall
xchg
pop
add
flds
mov
lcall
pop
mov
cmp
mov
add
push
bound
fwait
pop
lods
push
ljmp
inc
imul
fisttpl
xor
push
icebp
and
xchg
pusha
loope
ja
icebp
fcmovu
jle
add
popa
imul
in
inc
call
sub
out
and
add
fidivrl
dec
cmp
sbb
sbb
pop
fiaddl
incl
fldlg2
pop
push
xchg
add
push
call
jp
pop
inc
add
lock
in
mov
jae
pop
add
dec
insb
pusha
mov
ljmp
jge
jo
mov
fadds
jae
popf
in
push
adc
inc
in
fs
fisttpll
jge
inc
add
sti
outsl
loop
mov
cmpsl
xchg
pop
add
lahf
loope
push
dec
jp
jnp
pusha
add
mov
add
mov
inc
sahf
pop
pop
rcr
sub
fiadds
and
push
je
mov
aad
add
pop
mov
pop
mov
push
add
pop
sbb
dec
int3
inc
add
movsb
into
sti
out
daa
inc
es
mov
imul
add
sub
scas
sub
sbbl
dec
popf
add
add
add
mov
xor
adc
adc
int
jp
divb
leave
inc
scas
add
sub
fiaddl
mov
inc
scas
sbb
sbb
inc
inc
movsb
push
fcomp
scas
rclb
mov
shr
push
adc
inc
imul
iret
mov
mov
fidivrs
cmp
add
jge
aaa
lock
sub
nop
aas
dec
jae
mov
add
push
sbb
xor
je
push
and
xchg
jbe
inc
mov
mov
xchg
cmpb
xchg
jmp
xchg
add
add
dec
lret
jmp
sbb
xor
ret
mov
ljmp
ret
mov
cmp
adc
add
xorl
add
jg
stos
add
sbb
xchg
movsb
add
punpcklbw
cmp
pushf
add
cs
add
add
rorl
pop
add
xor
xchg
add
sbb
stos
lods
push
jno
inc
add
adc
mov
xor
mov
pop
sub
xlat
in
xchg
es
push
cmp
sub
and
dec
mov
mov
lods
pushf
gs
scas
clc
stc
cltd
lret
pop
scas
pop
fldenv
push
rolb
les
testb
push
sbb
add
fidivrs
clc
imul
dec
inc
mov
and
rcll
sbb
add
sbb
and
push
add
pop
add
mov
and
imul
pushaw
mov
adc
mov
add
fimuls
sub
sub
push
adc
cmp
or
sub
add
popa
out
sbb
lea
push
mov
inc
add
inc
imul
mov
mov
lods
aas
test
call
outsb
push
pushf
adc
aaa
shl
movsb
xchg
gs
and
add
add
sbb
add
sub
or
cwtl
xchg
push
add
push
test
add
adc
pop
inc
scas
pusha
test
add
sub
pmullw
mov
jns
lret
jae
dec
add
pop
loope
mov
add
and
or
and
adc
movsl
sbb
inc
jmp
jl
push
and
test
lea
fisubs
shll
mov
sub
js
arpl
push
pop
test
mov
outsb
cs
xor
or
rol
add
sbb
mov
lods
add
sbb
cmpsb
fsts
mov
stos
add
in
ror
sti
add
mov
dec
repz
out
je
xchg
popf
or
in
dec
add
add
aaa
jmp
sti
jp
icebp
stos
add
and
lahf
repz
cmp
test
sub
test
mov
push
xlat
daa
ja
adc
jge
lock
dec
xchg
add
pop
add
out
cmpl
mov
add
out
adc
imul
cld
jge
sahf
mov
cmp
mov
les
popf
outsb
lock
dec
pop
cld
add
dec
xor
xchg
scas
ljmp
and
push
ljmp
psrlq
fsubrs
pop
ljmp
jb
popa
dec
jbe
push
int
add
dec
fmul
mov
shll
iret
adc
xor
lret
push
push
ja
inc
add
sbb
mov
adc
cmpsb
add
add
gs
aad
out
aad
add
sarb
ret
xchg
xor
push
cmp
cmp
fildl
cmpsl
mov
mov
loopne
cwtl
add
ret
aas
jb
popf
clc
call
add
push
or
pop
push
fwait
push
inc
pop
add
sub
cmp
lret
inc
xchg
mov
jmp
mov
add
push
orb
fnstcw
dec
add
xchg
je
add
xor
sbb
insl
add
push
repz
std
das
ja
sub
sub
pop
or
jge
aam
add
sub
lods
shll
incb
cli
leave
js
jge
pop
xor
fldl
jmp
enter
sbb
loope
mov
xor
xchg
fbstp
jg
push
cmc
pop
xor
stc
xchg
call
jmp
lret
add
add
test
mov
mull
test
jp
movd
rorl
into
lret
arpl
mov
pop
xchg
mov
rorb
xor
clc
fwait
and
xchg
push
fsts
in
adc
fdivs
xchg
frstor
sar
jle
add
mov
mov
cmpsb
scas
inc
adc
dec
push
movsl
std
dec
jp
add
les
cmp
cltd
fsubl
js
daa
add
push
mov
jbe
add
pop
add
pop
into
and
or
rorl
dec
inc
or
add
pop
call
fiadds
mov
pop
jns
pop
xchg
jl
subb
inc
push
or
shlb
mov
lcall
cmp
add
dec
arpl
and
out
mov
fdivl
out
mov
mov
jge
loope
das
inc
jmp
scas
lock
push
jmp
jae
mov
inc
pop
fsts
iret
mov
in
das
mov
jne
cli
mov
movsl
sub
adc
cmp
call
lea
and
inc
pop
and
int
xor
add
out
pop
inc
pop
adc
xchg
add
sub
add
add
std
test
inc
cld
and
addl
mov
add
addl
add
add
pop
push
add
iret
fimuls
cmp
movl
ret
adc
mov
sbb
mov
sub
in
leave
sti
jge
xchg
rcll
mov
add
fistl
std
add
repnz
ljmp
add
lretw
inc
add
jl
add
andnps
pop
addr16
sbb
sti
pushf
mov
mov
scas
push
pushf
add
lahf
and
je
add
test
jne
jl
pop
lret
mov
out
outsb
and
sub
pushl
add
outsl
xchg
push
inc
jg
pop
mov
insl
pop
scas
xchg
jnp
xchg
add
sub
or
xchg
xor
icebp
push
or
add
inc
add
or
pusha
xor
lret
xchg
jnp
gs
fdivrl
jge
adc
and
jns
lods
add
loope
ret
popa
in
data16
pop
testl
mov
sbb
pop
aaa
add
xchg
inc
cmp
subb
mov
lret
xchg
inc
adc
stos
add
loop
dec
add
push
add
in
das
out
rcrl
lods
outsl
cmpsl
enter
pop
xlat
hlt
and
adc
pop
inc
or
lcall
mov
outsb
add
pop
xchg
sbb
push
out
add
iret
jmp
sub
inc
xchg
jae
inc
insb
push
loopne
movsl
inc
rorl
mov
xchg
lods
mov
push
add
stos
leave
push
push
add
mov
add
movsb
sub
add
sbb
pop
add
rcrl
push
push
out
add
es
cmp
lds
lret
mov
lret
add
sbb
lock
aam
cmpsl
cmp
push
mov
pop
cmp
decb
mov
xchg
mov
add
movsl
mov
nop
dec
filds
clc
data16
addb
sub
jo
nop
lods
jmp
mov
call
pop
sub
dec
lock
add
xor
mov
mov
arpl
or
icebp
add
aad
cwtl
add
pop
add
outsl
stc
out
adc
and
lods
xor
mov
insl
add
sldt
mov
inc
add
add
repz
add
ljmp
out
inc
ret
inc
add
hlt
popf
aaa
jp
add
add
sahf
jle
mov
xchg
lea
add
cmp
pop
rcrl
into
cs
loop
test
add
sbb
rcl
add
add
jle
add
add
add
fs
xchg
movsb
sbb
dec
cmp
sbb
test
push
xchg
and
xchg
cmp
movb
inc
test
lods
or
ds
inc
sub
test
pop
lret
add
sbb
dec
lret
sbb
inc
add
mov
add
add
cmp
or
mov
inc
div
ss
in
mov
cmc
mov
cmpsl
js
call
icebp
add
pusha
pop
cmp
cmpsl
adc
xor
in
mov
push
movsb
fwait
add
inc
add
or
xchg
scas
mov
mov
mov
mov
xor
xchg
loop
mov
mov
cltd
jbe
sbb
sbb
mov
mov
sub
cwtl
add
fucom
mov
xor
icebp
mov
leave
stos
adcb
sahf
lcall
and
xchg
aas
sub
pop
pusha
cmc
sarb
sbb
mov
mov
test
fs
incb
inc
sub
popa
xchg
xor
dec
mov
stc
jae
xor
cmp
mov
sbb
and
aad
add
push
outsb
in
sysret
xchg
test
enter
inc
call
testb
outsl
dec
lods
push
jmp
sahf
adc
push
add
dec
xchg
add
add
or
sub
fs
jnp
fnstenv
dec
ss
adc
xchg
add
xchg
add
bound
into
cs
mov
enter
sub
lret
mov
pop
stc
insl
mov
cmp
cwtl
outsb
jp
jg
sub
jl
adc
insb
jle
dec
inc
rcl
into
mov
push
mov
add
or
add
mov
insl
jo
inc
mov
jnp
out
add
cmp
add
mov
jp
cmp
insl
int
pop
add
xchg
xchg
adc
cwtl
ret
and
jns
dec
js
cmp
ss
ja
lcall
xlat
jae
add
mov
add
sub
cmp
outsl
nop
sub
testl
insl
add
xchg
lcall
fisttpl
fidivrs
test
repnz
lock
roll
rcl
add
aad
scas
les
cmp
mov
int
mov
enter
and
xchg
xlat
pop
xor
mov
movb
push
test
sub
loopne
gs
xor
mov
inc
add
insl
inc
scas
stos
filds
pop
loopne
add
scas
xchg
outsl
add
aaa
or
insl
daa
cmp
enter
jbe
add
dec
scas
cmp
gs
pop
stos
insb
jmp
movsb
pop
sbb
add
movsb
orl
popa
fcomps
call
add
sldt
popa
mov
cmpsl
fdivrs
add
add
sub
mov
jbe
cmp
or
in
mov
inc
add
cli
stc
add
movsb
bound
jp
add
add
xchg
add
outsb
add
and
into
and
and
mov
pop
ds
jae
fdivs
jle
filds
fdivp
sarb
or
add
aam
dec
jg
inc
sub
popl
lcall
adc
and
pop
mov
sarl
fdivrs
loop
dec
sti
sub
add
addl
stos
mov
add
scas
rcrl
or
addr16
mov
hlt
add
and
cs
pop
sub
add
add
add
negl
rcrb
push
mov
repnz
loope
stc
pop
test
xor
into
in
inc
outsb
lods
faddp
mov
jge
push
jne
add
movsl
movsl
lods
or
or
cmp
add
sub
add
xlat
pop
add
add
cltd
xchg
sbb
add
push
movsl
test
add
js
jns
mov
or
and
add
mov
add
hlt
loop
push
mov
iret
movsb
pop
je
xchg
mov
imul
lret
lods
lods
add
incb
add
inc
les
lds
jle
xlat
push
or
adc
sahf
cmp
cmp
shll
pop
bound
iret
sbb
shr
lret
stos
out
fldl
sarb
sbb
shrl
ret
add
ja
mov
sti
jno
pop
xor
sub
cmp
or
fldenv
jle
sub
mov
push
adc
inc
or
addr16
xor
in
add
pop
in
sbb
xchg
xor
loope
jbe
stc
or
es
mov
add
push
outsb
lret
insl
xorl
add
imul
jne
mov
add
mov
and
mov
or
pop
jnp
cwtl
add
shr
dec
insl
fisttps
out
mov
andb
and
imul
mov
into
sub
repz
mov
jg
and
jno
cwtl
dec
xor
ret
add
cmpb
jnp
add
jge
cmpsb
xchg
ror
jae
push
add
mov
scas
dec
adc
pop
add
pop
mov
add
fdivrs
and
scas
mov
dec
mov
mov
mov
test
lock
xor
pusha
inc
es
dec
add
cwtl
add
out
mov
sub
popa
faddl
add
add
clc
jno
es
fnsave
add
nop
dec
pop
push
sarb
mov
popf
daa
mov
push
pop
mov
addr16
xlat
jae
and
add
ljmp
lds
scas
xchg
push
mov
add
jmp
ljmp
sub
mov
add
jbe
mov
dec
cs
test
out
addr16
insl
xchg
into
leave
into
cltd
sbb
into
xor
or
sbb
loop
sub
add
sub
jb
popf
adcl
add
icebp
aad
add
adc
xor
or
popa
add
out
das
repnz
scas
je
push
in
pop
and
cld
jmp
add
push
add
outsb
cltd
icebp
add
outsb
faddl
sub
push
iret
add
sub
pop
add
cmpsl
cmp
mov
adc
repz
xor
test
adc
add
std
mov
inc
pushf
fsubl
add
aaa
jno
icebp
sub
pushf
data16
jbe
rorb
add
roll
mov
pop
jnp
xchg
test
mov
lahf
add
jle
loope
ja
in
and
test
and
xchg
hlt
js
xchg
or
dec
jge
lret
sbb
push
add
add
sub
in
or
arpl
pop
loope
insb
jecxz
push
pop
add
into
push
movl
jmp
cwtl
lret
nopl
adc
dec
cs
test
cmpsl
fildl
icebp
bound
in
in
add
add
adc
push
arpl
addr16
sahf
xor
push
xor
pop
fcompl
add
test
out
dec
rcr
jecxz
test
adcl
lods
dec
shlb
cli
push
in
call
dec
push
add
cwtl
pop
rep
pop
mov
cmp
pop
lods
pop
imul
into
fnstsw
xchg
add
or
inc
xchg
sbb
jae
lock
sbb
add
maskmovq
mull
xor
sub
lods
sbb
loop
add
push
add
fnstenv
add
mov
add
cli
add
or
lods
mov
cmp
push
add
jge
jno
mov
jnp
inc
push
mov
loop
add
xchg
add
jle
test
dec
dec
test
dec
add
mov
and
dec
rclb
add
push
test
daa
jl
mov
adcl
scas
dec
repz
pop
jns
sub
add
mov
sub
adc
inc
das
mov
jp
pop
ret
sub
add
aam
inc
ret
or
cmp
loopne
js
stos
std
cmp
push
xchg
add
mov
xchg
push
sbb
test
xchg
mul
add
lock
lcall
aaa
js
add
mov
rcrb
insl
scas
add
sub
add
add
sbb
popa
xchg
add
add
shr
adc
cmpsl
inc
add
push
js
push
out
xor
push
shr
out
xor
or
lock
daa
mov
inc
add
sbb
lea
dec
mov
call
movsb
cwtl
cmp
sub
je
jno
jb
js
dec
ljmp
clc
or
pop
icebp
jg
add
jne
lahf
sub
imul
xchg
lock
js
add
scas
lcall
test
sub
test
add
inc
add
outsl
add
add
es
or
xlat
popa
scas
add
inc
ljmp
mov
pushf
std
sbb
add
pop
das
xchg
int3
hlt
xor
or
xchg
add
add
jne
fisubl
sbb
rcr
xor
inc
add
insl
outsl
add
add
arpl
or
sbb
out
cs
sbb
and
shlb
cmp
les
in
push
repnz
imul
cmp
scas
ljmp
add
insl
mov
cmpsl
adc
jb
add
les
test
sahf
cltd
add
push
add
inc
or
add
add
add
and
add
add
add
xchg
gs
xchg
lods
int3
scas
pop
addb
or
xchg
or
xor
dec
shlb
xor
pop
and
pop
add
out
cmp
pop
add
inc
cmp
xchg
add
fisttpl
out
mov
add
mov
and
inc
int
jmp
mov
add
push
add
js
lock
mov
shr
adc
add
jno
std
in
sub
cvtpi2ps
in
mov
sub
xchg
xchg
sub
loopne
add
pushf
test
mov
push
out
ja
mov
movsb
add
inc
leave
inc
inc
movsb
add
cmpsl
jge
add
sub
clc
stc
push
stos
rclb
add
mov
int
add
popa
enter
add
cmp
xchg
or
stos
stc
stos
sbb
push
sub
jle
inc
add
xchg
inc
dec
imul
test
sbb
and
cmpsl
jg
cmp
movsl
pop
mov
pop
ds
sub
adc
roll
shrl
out
scas
mov
stos
sub
add
add
test
test
fdivrs
test
ds
hlt
out
jge
sbb
mov
je
stc
adc
shr
lret
or
or
sbb
add
inc
iret
inc
mov
pop
inc
repz
out
testb
aad
repz
add
rcl
movsb
pop
add
push
mov
loope
mov
or
cmp
daa
add
mov
das
nop
mov
push
add
cmc
xor
sbb
xor
jo,pn
or
sub
pop
add
add
add
str
and
add
nop
jl
in
mov
pop
aad
repnz
test
rorb
mov
shll
lock
add
test
xchg
add
dec
out
xchg
cmc
xchg
adc
js
jecxz
cmp
fdivrs
fisttpll
and
inc
push
inc
int3
xor
sub
jle
pop
cs
add
pop
je
and
mov
add
dec
cmp
js
pop
add
out
sub
xchg
or
cmp
xchg
decl
fldl
add
enter
in
push
mov
inc
fsts
cmpsl
mov
setns
inc
add
add
jecxz
mov
jmp
test
stos
pusha
add
mov
xchg
mov
les
das
add
cmp
add
sahf
stos
push
mov
dec
movl
stos
push
xchg
es
lcall
cli
pop
and
pop
add
lea
cmp
sbb
ret
add
adc
add
dec
pop
or
mov
lcall
push
ret
fimuls
cmp
lcall
cmc
inc
aas
add
or
add
sbb
test
add
mov
push
dec
lock
mov
add
add
jle
pop
sub
xor
hlt
int
jg
out
mov
sub
insb
pushf
add
push
mov
jecxz
sub
in
test
inc
or
repz
mov
insl
mov
add
aas
dec
pop
pusha
pop
insl
les
insl
push
add
les
out
movsb
mov
ds
pop
add
jl
out
or
add
add
inc
std
pop
xor
add
popa
push
lods
pop
pop
mov
mov
ds
cmp
sti
and
icebp
add
add
pop
adc
test
out
scas
sub
mov
iret
iret
mov
imul
sti
xchg
cwtl
xor
filds
adc
jnp
out
leave
add
iret
pusha
dec
movsl
jge
decb
ret
dec
xchg
xor
pop
mov
push
or
push
in
test
je
sub
cmc
push
pusha
mov
add
jg
add
cli
ret
jbe
test
xor
pop
sbb
dec
mov
sub
xor
inc
mov
cli
imul
add
mov
pop
pop
js
pop
inc
pop
push
out
adc
std
push
inc
and
dec
rorl
mov
mov
repz
add
push
mov
adc
ret
add
mov
hlt
sub
inc
out
cs
leave
adc
cmp
jl
aam
or
daa
movb
mov
stos
arpl
add
daa
pop
pop
mov
movsb
mov
jnp,pn
pop
add
add
cmp
jb
add
gs
mov
inc
out
xor
jmp
ljmp
add
insl
adc
es
lahf
jns
jo
movsb
xchg
pop
and
add
sbbl
mov
lea
jns
jle
hlt
add
out
popl
out
cmp
add
inc
scas
fldcw
dec
sbb
cltd
add
jmp
pop
insb
mov
or
lahf
les
aam
add
out
in
insl
and
iret
cmp
pop
call
insb
call
cltd
shlb
add
or
bound
cli
nop
sbb
xchg
add
insl
jo
xlat
push
popa
add
int
push
inc
call
aas
dec
lock
xchg
add
int
dec
clc
jl
idiv
cmpsl
jbe
xor
cmp
inc
inc
leave
mov
out
adc
sbb
pop
in
cmpsb
sub
add
cmpl
push
xlat
xchg
jle
add
push
cmp
stos
sti
xchg
fwait
lea
nop
dec
cmc
leave
sahf
dec
popl
xchg
outsb
add
sub
push
mov
jecxz
loopne
in
stos
mov
mov
fiaddl
push
push
insb
pushf
outsl
xor
jg
cmp
pusha
cli
add
bound
dec
add
shr
cmovg
cltd
add
clc
out
and
jl
pop
jle
cmc
pop
and
jl
sub
dec
cwtl
sub
daa
push
mov
adc
add
test
mov
add
xchg
xchg
sub
push
add
mov
jmp
cmp
adc
xor
inc
mov
insl
xchg
adc
pushf
pop
pop
xchg
xchg
fwait
pushf
add
add
add
loopne
lahf
ds
cs
loopne
out
fcoms
scas
mov
ljmp
fsubl
add
lret
add
add
xchg
add
add
adc
jb
cmpsl
fsubrl
sti
clc
push
mov
subb
pop
or
inc
and
xor
loop
aam
xrelease
xchg
repnz
stos
stc
nop
aad
sub
add
test
fidivs
iret
mov
sbb
or
mov
cwtl
aad
popa
fs
sub
xchg
push
jno
xor
cli
leave
iret
sarl
aad
cmp
loope
mov
adc
jmp
cmp
data16
enter
popf
int3
push
add
add
add
add
imul
out
jge
icebp
dec
icebp
mov
shl
ret
iret
shlb
fs
test
ret
jne
adc
jmp
mov
call
xchg
andl
sub
repnz
adc
add
add
loope
add
cmp
adc
jle
mov
add
or
xor
test
add
add
mov
or
add
out
pop
mov
adc
jecxz
aam
dec
or
popf
mov
ljmp
add
dec
mov
cmpsb
std
add
and
adc
xor
jge
cld
mov
add
mov
rolb
xor
dec
and
inc
or
ret
data16
sub
aam
fadds
add
xor
xchg
sub
shlb
push
add
scas
scas
sbb
mov
loope
push
imul
cmp
mov
in
test
xor
or
pop
add
inc
testb
enter
outsl
adc
mov
mov
xor
in
je
sbbl
xor
adc
add
sub
push
mov
loopne
mov
lds
daa
fcmovnb
fwait
push
cmp
mov
jnp
pushf
outsb
add
mov
rorl
sbb
out
add
fldt
add
add
adc
xor
lret
push
and
lods
add
pop
cmpsl
clc
pop
mov
dec
push
cli
lahf
sarb
or
shlb
gs
add
mov
sbb
call
dec
add
ds
adc
faddp
adc
xor
lods
add
cmp
pushf
and
jmp
mov
arpl
and
mov
out
and
je
cwtl
pop
adc
fld
adc
cmc
inc
and
sbb
pop
xchg
mov
xlat
mov
cmp
cwtl
jno
popf
bound
jbe
sbb
dec
add
jle
sub
xchg
int
enter
out
das
cmc
mov
cmpsl
push
inc
fisttps
push
ja
fcoml
xchg
jno
out
sbb
mov
ret
int3
mov
mov
lret
inc
push
std
jns
popl
cmp
subl
add
sub
ficompl
add
xchg
cmpsb
add
fs
pushw
add
mov
sub
jmp
and
inc
push
movsb
ret
jg
jb
cmpsl
test
negb
add
sub
cwtl
mov
dec
mov
insl
inc
dec
mov
int3
fisubrl
sub
pusha
xor
mov
js
jecxz
jns
mov
in
lcall
and
cld
xchg
or
add
or
mov
add
add
test
insb
aad
xchg
frstor
or
es
shlb
ljmp
pop
lds
xchg
and
xchg
std
add
push
fstps
les
les
enter
adc
in
cmpsb
lds
pop
cmpsb
shlb
aaa
add
sbb
xor
imul
stos
add
jecxz
sub
mov
xchg
sti
sbb
push
add
fildl
sbb
sbb
pushf
mov
pop
add
jmp
xchg
adc
int
add
dec
sahf
movsl
sbb
and
das
cs
popa
addr16
jo
mov
jo
cmp
out
in
push
mov
add
pop
adc
mov
pushf
call
flds
pop
pop
jg
xor
imul
mov
push
jp,pt
inc
in
pop
fstps
dec
fwait
cmp
jnp
pop
fisttpll
mov
cmp
jg
rorb
mov
popf
cmp
jmp
es
inc
sahf
aaa
and
add
xor
pop
orb
fdivl
stc
add
shrb
mov
mov
bound
int3
daa
cli
testb
dec
mov
hlt
js
xor
nop
add
xchg
lock
pop
cli
int3
pop
leave
add
add
mov
stos
sbb
add
loop
insb
cli
sbb
nop
mov
fisttpll
es
adc
imul
sar
ret
ljmp
aaa
faddl
fcmovnu
xlat
mov
jg
bound
repnz
lret
lahf
int3
in
pop
mov
push
push
mov
push
inc
into
add
add
push
cmp
xchg
adc
cmpsb
sub
data16
push
cmp
cmpsb
push
outsb
divl
rorl
popa
mov
das
in
rcll
ljmp
xchg
xchg
lock
push
xor
xchg
xor
call
mov
add
add
scas
cwtl
jmp
pop
push
flds
and
addr16
add
sub
pop
adc
cmp
test
xor
xchg
out
int3
and
enter
repz
sub
and
and
mov
mov
add
pop
inc
in
add
jo
in
arpl
push
adc
iret
add
loope
shrl
jecxz
into
dec
hlt
aam
lcall
roll
push
xchg
adc
dec
rol
sbb
lea
jb
push
and
inc
arpl
mov
orl
or
pop
int
das
mov
out
sbb
mov
sub
sbb
pop
das
arpl
cmp
cld
mov
add
mov
data16
stc
xor
add
lahf
inc
or
aam
movsl
add
fldcw
lods
mov
sub
test
push
pop
add
push
dec
add
add
cwtl
and
inc
mov
jbe
fistl
cmpsb
cmp
daa
add
sbb
popa
xchg
add
lods
add
jb
add
mov
dec
add
add
cmp
scas
std
adc
sub
pop
sub
scas
shlb
stc
lea
mov
add
xchg
iret
mov
aam
daa
jns
ja
pusha
inc
in
pusha
mov
in
mov
cwtl
add
push
rolb
test
cltd
push
jne
jmp
ljmp
je
movsb
add
pop
add
xor
add
aam
sub
cmp
movsb
add
mov
push
aad
aam
pop
pop
daa
jno
cmp
lcall
rolb
jo
push
add
imul
jnp
add
add
int3
jmp
mov
add
add
daa
test
mov
jg
xchg
xor
shrd
cltd
add
add
mov
mov
fdivr
pushf
movsl
ror
sub
jl
add
insb
pop
mov
es
es
add
add
cmp
push
mov
jp
xor
xchg
test
icebp
jo
add
aas
ss
mov
int3
popa
cld
mov
jne
rolb
or
lret
pusha
add
pop
xchg
pop
add
add
enter
sbbl
icebp
ss
test
imul
ljmp
inc
add
ljmp
mov
sbb
mov
loop
or
ja
in
or
sub
pop
dec
inc
and
cmp
jne
inc
pushf
mov
call
hlt
das
mov
sti
in
push
shl
xchg
jecxz
jbe
fdivs
mov
push
dec
adc
outsb
in
pop
xchg
pop
add
xchg
adc
jmp
or
cmp
and
add
push
push
mov
add
cmc
ss
add
inc
lods
out
testl
jbe
in
outsl
lahf
shlb
mov
imul
les
sub
add
ja
mov
call
call
mov
sarb
cmpb
jb
pop
adc
adc
mov
jae
fldt
lret
lret
add
cmp
sbb
call
xor
cmp
push
xchg
lcall
shl
bound
cmp
rcll
filds
dec
dec
pop
add
add
sub
cmp
in
push
in
jg
push
add
dec
fwait
aas
addl
and
xchg
pop
dec
flds
fildl
xor
pop
stos
aas
sub
pop
add
mov
roll
mov
sub
leave
insb
cmp
and
pop
daa
dec
add
dec
add
das
cmp
and
sub
add
jge
add
enter
lret
xchg
insb
iret
ret
mov
add
cmpsl
stos
jo
insb
lret
add
lret
test
add
pop
add
test
test
lret
and
into
add
arpl
flds
lods
mov
or
xor
dec
out
gs
jno
push
add
shlb
lds
mov
push
mov
push
test
cmp
popa
mov
inc
pop
jae
daa
into
loopne
stc
stc
leave
cmp
or
cmpsl
pushf
mov
add
cmpsb
cmc
mov
sub
xchg
push
fwait
add
roll
pop
add
cmp
sub
cmpsb
sbb
scas
inc
popf
cs
dec
enter
les
xchg
add
roll
cli
cmp
cld
scas
test
jbe
mov
pop
hlt
mov
push
or
bound
insb
pushf
aad
xor
jnp
add
lahf
inc
insl
cmp
jo
add
mov
mov
scas
add
cmp
add
imul
jl
mov
int3
jnp
jmp
ret
std
lret
sub
aas
cmpsb
push
and
das
dec
sub
mov
push
ret
sti
mov
stos
or
add
adcl
or
icebp
sbb
test
mov
push
push
add
xor
mov
or
add
add
or
lcall
push
xchg
adc
shl
pop
in
mov
jp
or
insb
shll
sti
mov
popa
in
lods
aad
hlt
jb
imul
mov
push
add
cmp
enter
inc
out
in
xchg
add
decl
xchg
or
mov
add
add
sub
add
std
loop
hlt
push
lret
daa
add
push
dec
inc
dec
rcll
mov
inc
add
pop
jecxz
bnd
dec
lea
fdiv
sub
dec
je
in
jmp
pop
jns
pop
adc
adc
cld
insb
sahf
je
jge
sub
push
divl
aam
jb
cwtl
add
inc
sub
inc
les
mov
inc
xlat
add
jecxz
pop
cltd
push
mov
inc
adc
dec
femms
adc
mov
pop
add
dec
lock
hlt
stos
popa
add
int
into
cmp
int
fnstenv
dec
les
or
add
xor
add
add
mov
push
out
shll
and
jb
addb
xchg
pop
out
fld
or
into
or
hlt
add
adc
add
add
inc
fsub
daa
pop
test
mov
leave
add
repnz
mov
and
sti
sub
cmc
add
sti
shlb
sahf
cmp
aam
sbb
fwait
mov
cmpsb
ljmp
fincstp
mov
movzbl
xchg
outsb
add
add
gs
push
out
add
or
xlat
pop
out
test
jo
dec
jo
insb
jmp
and
mov
jmp
lfs
add
out
lea
jge
adc
xchg
hlt
shll
jp
jp
mov
dec
shl
mull
jp
lahf
lret
adc
repz
xchg
ljmp
roll
imul
testl
cwtl
sbb
sub
push
es
cmp
int
scas
add
cld
scas
pop
lcall
push
fiaddl
in
mov
add
mov
ret
xor
fwait
mov
test
nop
outsl
imul
dec
ss
jo
push
mov
dec
icebp
mov
cli
xor
xchg
ds
mov
das
icebp
mov
adc
mov
add
or
int
cwtl
push
mov
adc
in
test
mov
ret
push
jle
mov
and
and
in
add
xor
cmpb
and
add
xchg
sub
call
insl
jg
add
testb
sbb
bound
add
and
out
je
sbb
lea
scas
push
lock
sub
push
imul
aaa
cmpsb
insl
xchg
inc
xor
sbb
cmp
push
jle
sbb
inc
xor
jg
pusha
addr16
jecxz
data16
or
into
add
stos
ljmp
add
movsl
addb
pusha
clc
adc
add
jge
inc
sub
push
in
inc
ljmp
sbb
sbb
shll
mov
mov
cmp
add
jle
fmuls
push
inc
in
addl
data16
mov
sub
sar
in
sub
lahf
push
push
push
mov
pusha
sbb
decb
xor
pushf
filds
add
outsb
add
push
jl
stos
stos
lcall
test
jno
lods
stc
and
scas
push
testb
pop
cli
pop
mov
add
add
xchg
add
std
xor
cs
dec
icebp
fimull
mov
cli
ja
push
rorl
lcall
fwait
adc
push
add
jg
clc
mov
sti
jmp
add
or
add
aaa
add
add
mov
and
inc
inc
stos
cs
push
mov
add
add
adc
add
xchg
adc
add
repnz
loope
sub
mov
cmc
enter
scas
ss
add
dec
or
pop
in
pushf
pusha
add
enter
lret
sbbl
jmp
sbb
add
cmp
lret
and
add
push
in
and
sbb
cwtl
fildl
mov
xchg
lret
cli
add
cld
sub
and
jo
adc
push
jae
pushl
add
das
add
scas
popa
add
sahf
add
or
jno
and
lret
add
add
out
mov
sub
icebp
lcall
cmc
int
sti
popa
mov
pop
lret
push
cwtl
ret
leave
add
add
push
and
cwtl
jecxz
and
add
fistpll
inc
into
es
add
andl
mov
sub
pop
test
mov
inc
mov
inc
jecxz
and
dec
into
pop
push
jle
jbe
cld
scas
hlt
iret
pop
sub
iret
sar
jle
test
out
pop
sahf
inc
fdivrp
xchg
shrl
dec
add
fiadds
test
ss
sbb
push
loop
loope
inc
js
sbb
pop
jp
mov
add
mov
and
inc
rorl
ja
adc
sub
jbe
mov
push
adc
jmp
dec
outsb
jmp
or
jp
mov
gs
push
lcall
test
gs
add
repz
or
mov
ja
shrl
divl
and
fsubrs
mov
dec
fimuls
cmpsl
xchg
xchg
cmp
add
xchg
or
shrl
add
inc
inc
pop
push
test
xor
roll
je
jge
push
push
iret
add
add
jecxz
add
popw
jno
mov
test
sub
test
data16
stos
insl
xchg
add
filds
inc
fdivp
push
mov
sub
xor
loopne
cld
push
lcall
jle
sbb
movsb
int
mov
lds
adc
add
jmp
bound
pop
insl
cmp
in
out
subb
xlat
in
pop
add
sysret
mov
jno
pop
cltd
adc
insl
add
cltd
add
mov
cltd
jp
add
and
inc
cld
adc
fcmovnu
and
movsb
xchg
ret
add
dec
mov
mov
or
rorl
bound
enter
or
test
lcall
xchg
add
add
add
add
pop
ljmp
out
mov
xchg
mov
imul
add
add
test
ljmp
outsb
add
dec
sbb
std
mov
pop
ret
mov
jle
in
in
test
lret
push
add
jmp
nop
add
jne
and
pop
in
lret
mov
fs
mov
jbe
insl
jle
pushf
testl
clc
add
add
push
popf
in
pop
movsb
or
jle,pt
test
enter
sbb
lock
xor
pushf
xchg
mov
fistpll
mov
mov
xchg
rcrl
inc
sbb
jno
aas
inc
repz
push
push
xchg
test
inc
xchg
cld
add
add
add
adc
add
add
testb
adc
jmp
loopne
int
sub
sbbb
add
enter
and
mov
push
and
xchg
addr16
cmp
sub
sbb
ffreep
inc
adc
fisubs
fs
add
aam
or
fnsave
nop
scas
lret
aaa
aas
add
inc
insl
cmp
icebp
test
mov
pop
fimull
mov
inc
add
add
add
push
test
add
shll
mov
mov
cmp
cld
iret
into
sbb
stc
push
daa
add
sub
cld
push
or
add
inc
add
mov
popl
out
orl
push
inc
and
nop
push
and
repnz
add
arpl
xor
mov
add
bound
int3
dec
lret
roll
ret
aas
jge
mov
fsubrl
xchg
xor
cmp
and
push
jmp
jecxz
mov
jnp
xchg
adc
pop
dec
add
sarb
mov
cmp
xchg
std
mov
add
pop
add
xor
add
mov
push
adc
pop
pop
movsb
push
or
add
add
dec
pop
sub
add
adc
mov
aam
mov
sbb
repnz
sarl
sahf
test
lret
mov
push
lock
stos
and
movsl
fwait
arpl
ds
pop
mov
aas
cmpsl
or
jns
mov
add
jp
rclb
xlat
xorl
mov
int3
jl
mov
sub
nop
pop
jl
in
adc
out
adc
imul
gs
lret
mov
jbe
push
push
ss
roll
xchg
add
enter
push
dec
pop
cmpsb
inc
inc
and
cmpsb
xchg
jg
sub
jg
xor
dec
sub
sbb
fiadds
and
sahf
ss
mov
and
scas
lds
dec
xor
not
push
faddl
push
pop
push
add
cli
xchg
add
xchg
fldcw
incl
push
pusha
incl
add
and
repnz
imul
sbb
add
stos
hlt
xchg
call
loop
mov
mov
imul
movsl
movsl
xor
cld
xchg
fs
push
imul
imul
stos
pop
sbb
add
pop
xchg
add
ja
js
cmpl
adc
lock
lock
lea
scas
inc
add
out
push
push
mov
movsl
fisubrs
xor
fst
add
lcall
leave
mov
xchg
inc
add
pop
inc
aam
inc
into
xchg
push
add
mov
lea
or
nop
push
fcomps
xchg
lahf
lock
push
jmp
adc
jle
out
dec
mov
jnp
adc
add
ret
pop
aad
push
frstor
cmp
mov
aad
imul
mov
push
add
add
xchg
xchg
push
add
aaa
push
loopne
add
jae
fdivs
rolb
dec
add
jb
fisubs
clc
mov
mov
sbbb
rol
add
and
push
je
fwait
xor
stos
loopne
in
mov
repz
xchg
lock
xchg
insl
cli
std
add
add
xor
and
movsl
iret
sub
mov
cmc
add
xchg
add
adc
sub
sti
insb
in
fcompl
inc
pop
add
dec
mov
add
imul
hlt
sbb
hlt
sbb
daa
outsl
and
xchg
aaa
mov
enter
fistpll
mov
mov
add
cmp
mov
xor
sub
fcmovu
sbb
add
inc
push
outsl
and
jne
cltd
ret
add
test
pop
cmp
add
icebp
dec
add
lahf
dec
inc
int3
add
jl
movsl
jge
add
inc
out
mov
adc
daa
jp
cmp
pop
rcrl
jmp
repnz
sub
mov
cs
ficomps
add
pop
ret
dec
push
sbb
inc
add
xor
ret
repz
pusha
es
and
cmp
lcall
jmp
pop
lods
bound
mov
jmp
mov
add
in
add
fwait
testb
push
cmp
xchg
fimuls
bound
shlb
daa
add
pop
jg
pop
test
pop
popl
dec
add
push
xor
add
icebp
maxps
inc
test
int3
jnp
mov
and
add
or
idivl
mov
adc
add
add
xor
inc
jp
sbb
stos
jnp
mov
jmp
cmpsl
movsl
cmpsl
add
push
shrb
jmp
in
imul
pop
inc
std
and
cmp
call
inc
pusha
les
inc
addr16
imul
xchg
sbb
rolb
cli
loopne
mov
pop
dec
sub
add
add
popa
lret
mov
sbb
outsw
add
insb
add
subl
fs
add
mov
addb
jg
push
add
xlat
sbb
xchg
adc
in
push
fsubs
mov
push
int
xor
xor
negl
es
cmpsl
mov
xchg
pop
push
add
outsb
cmp
loop
adc
imul
sbb
gs
xrelease
hlt
mov
cmc
jo
push
xor
shlb
mov
imul
lret
mov
or
adc
xorl
repz
cs
adc
add
pushf
and
inc
jo
jmp
pushf
dec
xor
jo
movb
add
mov
rol
shl
pop
jecxz
pushf
popf
sub
test
ret
jb
aas
add
js
sbb
lock
fisttpl
sbb
push
push
xchg
xor
add
add
mov
add
pop
inc
roll
lea
add
inc
lock
cmp
pop
dec
mov
movl
loope
mov
add
jecxz
add
inc
push
and
ret
add
xchg
dec
sub
pop
or
lcall
xchg
nop
jecxz
mov
sbb
xor
pop
popf
leave
lea
scas
sbb
and
mov
sbb
divl
test
add
push
add
ljmp
add
mov
push
arpl
inc
test
cmp
lea
mov
cwtl
lcall
mov
or
out
push
leave
jmp
nop
icebp
fcom
ljmp
lods
cwtl
mov
cmp
mov
roll
ja
add
test
add
stc
repnz
mov
ss
lds
icebp
xchg
into
out
add
insl
out
ret
mov
pop
mov
fisubl
jp
test
xchg
add
cltd
jp
into
les
fwait
ret
or
and
sbb
xor
les
jmp
fiadds
dec
add
jp
add
js
xor
clc
xor
add
xchg
mov
inc
in
outsb
test
loope
push
in
jno
das
pop
cltd
roll
ljmp
ja
cvtpi2ps
pop
pop
jne
rolb
fwait
add
inc
mov
sti
sbb
mov
je
xor
jl
mov
push
movsl
push
fdivrs
add
add
jl
add
lea
roll
pusha
inc
fdivrs
add
cwtl
push
pop
and
fisttps
shrl
cmp
add
and
jnp
sub
xchg
add
nop
xchg
hlt
sbb
lds
icebp
setp
and
and
shrb
add
and
add
sbb
add
incb
ds
sarl
xchg
xor
out
add
and
add
stos
add
ja
cmp
lret
add
rol
dec
xchg
jle
xchg
out
inc
add
cmp
cmp
lods
out
inc
js
and
or
fdivl
add
pop
dec
mov
out
sbb
out
jl
pop
lret
fcoms
mov
aam
xlat
dec
fld
cld
mov
and
pop
stos
add
icebp
je
pop
sarl
cmp
in
push
cmpsb
iret
jge
sub
jge
xchg
je
test
pop
sbb
xor
test
ss
repz
cmpsb
leave
dec
add
add
lret
add
add
jns
int3
xchg
add
ds
sub
xor
sub
in
daa
mov
lds
arpl
lret
push
stos
mov
inc
insl
lock
popa
adc
test
clc
shrl
aad
fcomps
stc
adc
adc
ret
sub
sub
mov
add
push
add
sti
aaa
adc
lea
xor
sbb
fnstsw
dec
add
pop
out
add
outsb
ret
pop
add
repnz
es
cwtl
mov
cmp
mov
sahf
jnp
repnz
movsb
dec
sbb
shr
push
rcl
mov
mov
mov
adc
inc
add
add
mov
es
lret
sbb
sbb
add
cmp
mov
scas
mov
fnstsw
or
cmp
fmul
mov
pop
ljmp
movsb
fimull
pop
adc
lods
loopne
push
and
xor
xchg
outsl
jecxz
movl
roll
xchg
add
jae
pop
ss
add
stc
xchg
cmp
fisubrl
dec
int
inc
mov
or
xchg
add
or
dec
add
jbe
shrb
sbb
add
rcll
lods
jno
mov
add
mov
outsl
mov
adc
pop
into
add
mov
add
mov
loop
dec
add
push
jno
adc
jl
ret
sub
movsb
sbb
sbb
jae
sahf
jns
mov
cltd
test
add
add
push
cmpsb
out
fstpt
jmp
jno
add
mov
jecxz
add
sub
or
daa
sbb
in
mov
sub
push
rcrl
push
sahf
and
add
jbe
mov
add
cltd
cmp
mov
pop
push
jmp
ss
clc
add
lret
add
add
fiaddl
fcomi
add
lret
xchg
lcall
insb
add
pop
arpl
gs
mov
rorl
add
push
aas
dec
fs
jmp
add
sbb
push
add
add
jecxz
xchg
or
lods
xor
inc
xor
add
add
push
into
jno
data16
ficompl
inc
into
outsl
mov
add
ja
push
add
sbb
add
or
es
inc
pop
shl
lret
sbb
add
ret
mov
push
add
lods
xchg
int
jnp
xchg
sub
roll
adc
jmp
je
xor
sub
push
rcrl
add
xor
maxps
xor
add
shl
mov
les
rolb
add
enter
add
icebp
fcomi
sti
cmpsb
sahf
or
add
movsb
inc
inc
push
push
add
fs
add
lods
das
jl
cmp
repnz
sub
int3
flds
into
xchg
pop
or
and
push
xor
add
ljmp
mov
cmpb
mov
fnstsw
sub
jle
fs
cmp
sub
and
and
aas
add
ret
stc
add
fisubrl
movsl
jae
xchg
inc
addr16
aaa
push
scas
mov
xor
mov
or
cld
and
add
inc
mov
popf
mov
stos
sbb
sbb
jno
lods
fistl
bound
add
push
adc
sbb
mov
and
fwait
out
mov
pop
lock
int
and
inc
inc
sbb
mov
bound
rolb
js
cmp
lahf
loop
sub
in
hlt
les
add
cmpsb
aad
xchg
mov
cmp
imul
xchg
pop
add
cwtl
add
into
inc
shl
add
mov
clc
rorb
xchg
add
gs
lods
ret
pop
scas
add
jns
mov
and
lods
icebp
inc
ret
js
jo
ret
dec
es
in
stos
add
add
xchg
push
sti
imul
test
xchg
sbb
dec
imul
push
adc
add
nop
cltd
subb
cld
mov
shlb
test
jb
push
add
scas
mov
and
add
add
xchg
subb
cmp
aas
popa
sub
add
jge
outsb
mov
ss
dec
mov
add
mov
add
into
pop
mov
jbe
mov
mov
push
push
ret
add
in
sbbl
test
imul
js
movsl
mov
mov
lods
sbb
add
icebp
sahf
sbb
movb
xor
add
in
mov
add
and
dec
movsb
sub
lock
cmp
roll
out
pop
add
cmp
xor
or
xor
add
xor
sub
std
stos
test
sahf
add
add
mov
in
add
bound
adc
cmpb
pop
push
adc
lahf
pop
jge
add
or
lret
mov
pop
mov
fs
mov
sub
lods
inc
pop
or
testl
pop
mov
adc
inc
mov
mov
into
xchg
sbb
mov
pop
xor
and
call
and
dec
inc
mov
add
pop
jecxz
xor
jmp
pop
int
roll
sar
add
pop
mov
dec
mov
ljmp
into
sub
daa
or
xchg
int3
cmp
aas
mov
ja
inc
sarl
mov
push
add
fdivl
adc
add
pop
scas
xor
scas
imul
loopne
lcall
lods
inc
mull
mov
pop
xorl
test
sub
or
jo
mov
out
packssdw
sbb
mov
nop
mov
in
mov
mov
adc
sbb
fildl
add
cli
call
xchg
mov
sbb
cwtl
mov
push
ret
lret
mov
stos
rolb
mov
roll
fwait
add
test
ret
scas
pusha
clc
pushf
dec
inc
or
jno
sbb
adc
lods
sbb
ljmp
mov
sbb
cmp
jne
test
adc
mov
stc
push
cld
sbb
loopne
add
or
xor
push
mov
jns
mov
push
sbb
sub
and
sti
jne
mov
loope
in
rorl
add
mov
mov
je
cwtl
sbb
sub
jle
or
add
out
or
sub
jecxz
lahf
pusha
enter
add
lcall
cmp
cmp
add
int3
push
or
pop
ds
xchg
xor
lock
ret
sbb
sbb
xor
xchg
test
push
add
sub
add
xchg
lds
aas
jecxz
add
popa
add
push
jl
daa
jge
fwait
bswap
xor
test
pop
pmaxsw
mov
testb
cmp
and
lahf
loope
lds
add
bswap
dec
add
pop
add
xchg
mov
mov
jmp
int
shlb
add
mov
test
sti
push
push
add
push
xor
mov
ret
xrelease
cmpb
pop
inc
cmpsl
in
stos
lahf
or
into
lret
nop
xchg
jnp
mov
xchg
sub
pop
mov
cmpsl
mov
das
or
arpl
or
fdivs
and
jns
cmp
cmp
call
add
mov
add
push
and
iret
std
xor
cltd
repz
nop
ret
add
jo
jno
pop
sub
xor
icebp
shrl
loop
int
rcll
xor
cmp
or
pop
dec
push
mov
add
and
or
jno
ret
pusha
add
mov
add
lret
mov
jmp
xchg
xchg
push
scas
ret
adc
mov
mov
add
js
cmc
push
mov
mov
push
test
jns
push
sbb
push
outsl
xchg
mov
mov
std
mov
add
add
push
add
jp
mov
inc
rcr
pop
sbb
out
fcoms
lret
xchg
add
add
aam
adc
hlt
xchg
loope
add
mov
mov
lcall
or
add
bound
mov
inc
push
add
bound
cs
popf
int
aaa
inc
pop
mov
mov
dec
add
mov
xlat
sahf
jae
mov
mov
sbb
add
add
out
in
out
jo
movl
ret
mov
push
mov
add
add
jmp
insb
jb
mov
cmpsl
sti
mov
insb
mov
cltd
aad
sub
rcr
jl
add
jp
cmc
testl
sbb
lea
sbb
aad
into
push
mov
call
loopne
mov
xor
repnz
shrl
pop
add
loope
add
bound
xchg
repz
repnz
rorl
daa
adc
mov
add
ret
daa
mov
mov
repnz
pop
sub
jmp
pusha
mov
sbbl
inc
dec
adc
aaa
imul
cmp
or
inc
mov
pop
cli
mov
add
pop
or
or
jl
jb
cltd
mov
filds
shr
or
adc
mov
cmp
or
sub
inc
mov
and
aas
insl
or
aas
imul
xor
bound
add
push
xor
scas
out
add
add
loope
mov
rcr
test
insl
sti
jno
add
sub
fmuls
mov
shrl
mov
hlt
shl
popa
jp
add
xor
scas
ret
scas
mov
sub
das
test
mov
xor
sbb
adc
out
fldl
cmp
call
sub
push
cmp
sar
dec
sub
scas
dec
test
daa
sbb
dec
ret
add
hlt
xchg
addl
adc
in
int3
test
sti
pop
testl
dec
dec
add
add
dec
add
xchg
lret
cmpsl
frstor
mov
int3
js
icebp
js
gs
add
fnstenv
in
popa
cltd
addb
push
lret
add
add
mov
xor
adc
mov
std
xor
fildl
lds
ds
inc
xchg
pop
sub
jb
push
idivl
or
mov
adc
or
sbb
mov
and
xor
and
adcb
jle
cltd
add
push
add
add
in
adc
popa
xchg
xchg
shrl
add
push
mov
bound
cmpsb
push
add
jno
jp
add
test
jge
push
cmp
cmp
sti
ds
testb
fs
xor
jae
and
ljmp
stc
sub
push
shl
lret
outsl
outsl
or
adc
and
fldt
cli
loop
mov
outsb
inc
out
sahf
add
jp
shrl
adc
mov
enter
sahf
cltd
xchg
nop
xchg
mov
test
mov
dec
or
dec
jnp
jl
sub
mov
out
fidivrl
pop
add
jae
mov
inc
jle
add
mov
das
stc
lahf
add
add
mov
out
push
mov
pushf
mov
mov
push
dec
es
icebp
jb
fsubl
add
test
pop
not
mov
or
outsb
sti
sub
adc
scas
add
mov
push
cmp
push
add
incb
fxam
add
jbe
pop
xchg
mov
adc
inc
out
jno
mov
cmp
arpl
mov
sbb
dec
jg
inc
inc
xor
popf
iret
pop
add
cltd
inc
jns
fisubrl
xorb
cmp
loope
rorl
out
loopne
add
xchg
inc
mov
and
pop
scas
xor
sbb
ficomps
and
mov
sub
ljmp
inc
cmpsb
data16
add
jmp
add
add
lock
add
into
xchg
in
pop
add
fadds
hlt
in
cmc
add
insb
add
mov
xor
mov
jns
add
in
int
pop
xlat
int3
iret
lods
jge
mov
jo
mov
mov
jne
dec
inc
jne
rorl
add
aam
into
add
add
arpl
jae
inc
ja
in
fidivs
fisubs
xchg
add
pop
pop
ds
jae
add
sahf
mov
imul
popf
ss
dec
cmp
sbb
sbb
push
mov
push
lret
pop
inc
inc
push
jnp
and
in
mov
jg
in
mov
repz
aas
nop
add
inc
pusha
dec
js
int3
insb
flds
sub
push
add
or
xchg
clc
enter
into
mov
jnp
and
or
inc
in
jae
xor
add
and
cmp
in
push
and
cld
add
mov
jecxz
insb
jl
ds
jae
ljmp
ljmp
ja
xchg
aas
add
cli
sahf
out
dec
xor
add
cmp
daa
divb
icebp
in
pop
add
sub
jle
ds
pusha
out
or
dec
add
pusha
jge
xchg
add
mov
add
mov
fisttpl
mov
stos
jmp
ljmp
fsub
ret
push
jmp
lret
add
int
sbb
sub
insl
sahf
add
add
sti
jae
inc
add
lods
scas
mov
ljmp
lock
add
in
inc
add
fs
sub
dec
xchg
rcll
rcr
add
pop
jb
push
lea
xchg
shll
popl
in
ret
test
add
add
jne
sbb
add
movsb
cmpsb
insl
or
push
push
sbb
frstor
xchg
add
aad
push
add
out
arpl
and
lds
jmp
ret
inc
sarb
lds
sbbl
xor
and
rcrb
and
inc
add
sub
cwtl
pop
out
inc
mov
add
xor
mov
int
or
sub
pop
jp
push
pop
dec
xchg
jge
leave
mov
ror
xchg
push
add
push
lea
ret
aas
push
pop
xchg
sub
scas
incl
ja
jl
push
insb
bound
fldl
cmp
lods
or
inc
cmp
jno
add
inc
rcl
mov
or
ss
mov
sbb
adc
sbb
out
es
mov
cwtl
mov
adc
jecxz
mov
fcmove
add
icebp
push
out
cmp
pop
cmp
add
movsl
add
sahf
jnp
and
lahf
jns
lea
sbb
iret
add
push
sahf
and
aam
pusha
fldl
jne
mov
push
mov
cmp
mov
sarl
dec
and
add
repnz
mov
frstor
adc
mov
adc
add
jns
xchg
sbb
push
mov
mov
add
lcall
and
and
icebp
dec
push
add
pop
xor
add
sub
push
cld
insl
popf
add
push
add
inc
add
pop
mov
dec
add
icebp
fldcw
insb
add
dec
push
icebp
bnd
ret
adc
cli
mov
push
push
arpl
jbe
mov
cli
add
sbb
add
lcall
nop
in
mov
push
lahf
fwait
adc
dec
mov
mov
lock
aas
jns
imul
ss
inc
add
xor
sbb
cs
mov
mov
add
pop
movsb
jg
inc
iret
xor
jge
or
in
xchg
psrlw
mov
and
xor
aas
adc
push
lods
movsl
inc
pcmpgtd
gs
add
sti
ljmp
add
repz
mov
cmc
add
and
pop
jle
pop
xorb
int3
push
cmp
ljmp
int3
movsb
cmp
and
dec
mov
jmp
inc
shlb
inc
outsb
sbb
faddl
sahf
stc
pop
mov
adc
add
icebp
fnstsw
add
lcall
jl
dec
fcoml
push
mov
mov
pop
jp
inc
add
jne
jne
xor
in
mov
xor
adc
leave
adc
test
jb
fs
add
iret
lock
fadds
dec
xorb
ret
pop
xchg
add
lcall
push
repz
roll
or
add
push
jmp
sbb
loope
lcall
mov
cli
pop
lret
xor
jns
mov
sbb
scas
jle
movsl
sub
daa
mov
adc
adc
ret
adc
cmp
std
add
js
sbb
mov
in
fildl
jnp
sbb
mov
sbb
lea
bound
js
inc
add
loopne
and
jnp
sahf
sbb
cmp
sbb
pushf
jnp
addr16
cmp
shlb
pop
fidivs
les
push
push
pop
out
lds
push
sahf
add
mov
imul
cmp
jbe
fsubs
idivl
sarb
adc
cli
mov
adc
test
inc
mov
jae
dec
xchg
cs
daa
add
add
push
lcall
or
sub
filds
pusha
enter
mov
add
movsl
imull
imul
mov
add
add
xchg
int3
cmpsb
cmp
popa
xchg
lods
mov
addr16
pop
mov
add
add
or
dec
arpl
sub
dec
add
nop
incb
lret
loope
add
in
fldl
filds
inc
xor
xchg
repnz
ss
rolb
jl
arpl
xor
fsubrp
fsubl
add
ret
lds
add
add
icebp
arpl
xchg
fstpt
jg
jno
sub
pcmpeqd
dec
mov
push
xor
in
push
pop
and
aas
cwtl
and
add
add
mov
hlt
add
dec
adc
stos
xor
mov
loopne
adc
jmp
add
sbb
xchg
add
inc
cli
add
in
dec
push
dec
add
icebp
sahf
add
add
adc
cmpsb
ja
cld
roll
mov
mov
add
or
xorb
mov
adc
jecxz
mov
inc
cmp
fadds
jb
xor
vpsllq
scas
pop
pop
mov
pop
bound
xchg
cmp
and
inc
inc
mov
icebp
imul
cmp
sbb
or
sarb
add
add
lea
inc
mov
cmpsb
loopne
cli
shll
iret
fnstsw
dec
lret
jns
outsb
inc
jbe
push
stos
popl
jg
pop
dec
push
dec
cmp
int
sub
jno
es
sti
lret
lods
dec
push
or
or
jge
mov
sbb
fadds
ljmp
ret
mulb
in
and
mov
popf
mov
dec
mov
adc
pushf
out
loop
cltd
cmp
rcll
lea
push
je
jae
fcompl
xchg
add
mov
push
data16
add
mov
jecxz
repz
popf
add
sgdtl
gs
push
test
add
in
add
mov
add
loop
mov
js
negb
test
push
push
or
add
jecxz
mov
xchg
sub
ss
dec
or
icebp
hlt
add
inc
pop
adc
mov
loop
and
mov
sub
push
into
fcmovnb
rcrb
test
sarl
insl
add
inc
mov
arpl
arpl
pop
lds
jl
movb
dec
aas
scas
and
xchg
mov
add
les
out
fadds
push
jge
add
movsl
movb
movsb
lahf
scas
lldt
aad
add
or
in
add
push
add
mov
test
cs
mov
nop
mov
dec
or
scas
lock
rolb
mov
out
inc
adc
sub
imul
sub
jp
lods
fiadds
rorb
sbb
in
pop
mov
pop
dec
push
mov
cmpsl
push
ja
add
inc
cmp
add
or
aas
stc
imul
xor
cmp
aas
sub
mov
inc
add
pop
mov
and
sbb
inc
mov
sbb
mov
add
add
ljmp
and
shl
adc
mov
pop
cmp
in
pop
mov
in
es
rolb
pop
outsb
bound
jp
jbe
movntps
insl
out
add
mov
mov
imul
mov
int
lds
fs
jnp
fsubrs
add
lret
lods
push
sbb
pop
cwtl
pop
sahf
decl
jns
nop
popf
jge
adc
mov
sub
fcoms
cs
loope
cld
xchg
fimuls
xchg
push
add
mov
clc
stos
pushl
cmp
inc
dec
and
push
jno
add
sub
in
movsb
add
das
sub
xor
cmp
sub
or
div
in
mov
dec
mov
fdivr
adc
mov
add
cmp
mov
into
or
add
inc
mov
or
fs
sahf
add
add
xchg
shrb
insl
enter
gs
add
in
and
cltd
mov
mov
loope
scas
fcmovnu
pop
inc
cmp
testb
ret
fdivl
movb
jmp
adc
sub
movsl
outsb
add
les
ror
jp
xchg
or
sub
lock
movsb
mov
add
data16
mov
test
sahf
fsubrl
add
std
mov
push
cmp
mov
mov
add
test
lahf
out
fisubs
in
cmp
add
outsb
add
imul
mov
in
add
pop
dec
and
mov
andb
pushf
and
repnz
add
lret
insb
pop
stc
enter
ficoml
lret
or
add
addr16
lret
xchg
inc
lret
jns
les
pop
lea
lds
outsl
fcomp
bound
add
inc
sbb
int3
test
cwtl
mov
and
pushf
xor
push
add
sbb
fsubs
in
mov
mov
in
sbb
push
dec
out
pop
fistpl
add
movsl
movsb
popa
mov
jp
test
xchg
dec
nop
add
sbb
hlt
cli
ja
add
stos
je
sbb
popf
out
test
test
loop
sbb
adc
push
icebp
mov
sbb
or
mov
arpl
movsb
icebp
add
add
pop
mov
cmpsl
dec
cmp
sbb
shlb
mov
ds
repnz
rcr
sub
mov
dec
fists
stc
mov
addl
push
sub
ja
xchg
sbb
adc
sub
gs
sarl
push
in
add
jns
xchg
adc
dec
xor
mov
mov
add
fxch
jmp
lret
add
add
add
lea
daa
inc
jns
js
xchg
add
lods
cmp
sbb
inc
dec
imul
sub
je
push
outsl
inc
add
jmp
fcomip
jmp
add
lock
movsb
jo
add
and
cmp
push
mov
fdivrl
movsl
mov
fcompl
mov
lret
insb
or
pusha
adc
jno
cmpsb
push
ret
push
or
jp
int
cs
aas
mov
sarl
push
mov
add
mov
add
xchg
test
cltd
add
pop
fwait
add
sub
push
add
adc
add
cmp
xchg
dec
jmp
pop
scas
lds
outsb
inc
jecxz
xchg
sub
xor
je
data16
add
clc
push
pop
add
insb
rolb
jne
imul
sbb
sub
lahf
jl
pushf
stc
xor
sub
sbb
loop
out
and
add
movsl
clc
dec
add
dec
sbb
mov
cmp
sbb
cli
add
inc
ret
insl
in
cmp
enter
add
aaa
xchg
jg
push
aad
jecxz
adc
test
or
imul
leave
test
cmpsb
add
inc
add
imul
loopne
imul
mov
lret
add
into
xchg
leave
adc
leave
testl
pusha
cmp
push
add
das
inc
add
ss
dec
adc
add
fldl
inc
push
aaa
sub
xor
cmp
aaa
fadds
aad
fisttpll
es
std
std
fucomi
sbb
and
add
add
push
inc
add
ljmp
mov
adc
ljmp
cmc
add
loope
mov
jne
frstor
cmpsb
iret
jecxz
sub
add
mov
push
or
aaa
sti
add
xchg
and
xchg
adc
aaa
jno
dec
add
jg
cmp
call
xchg
adc
xchg
push
imul
movb
fs
add
test
rcll
daa
arpl
scas
movsl
fldenv
mov
add
jne
outsl
add
ds
aam
mov
in
push
js
rcrl
pusha
jne
pop
adc
cmp
cltd
adc
jne
fsubrs
jmp
stos
or
mov
add
or
or
pop
jg
cmp
mov
cmpsl
and
push
andb
repnz
jg
clc
scas
icebp
xor
xor
add
sub
xchg
loop
mov
jmp
aaa
push
dec
mov
pop
mov
stos
sbb
fldt
lods
dec
es
jo
add
add
rclb
add
bound
jo
mov
mov
adc
sub
stc
enter
jbe
sti
inc
pop
fcoms
jns
adc
add
mov
add
das
cmp
add
add
cmp
cs
inc
add
or
push
add
jb
pop
cmp
adc
dec
add
shlb
inc
clc
inc
add
mov
int
jae
jmp
add
jae
mov
jo
or
ss
jo
jp
gs
fs
repnz
scas
mov
dec
pop
imulb
loope
xchg
out
aas
dec
mov
stos
fstpt
xor
icebp
scas
adc
add
fistpl
ret
add
xor
and
push
daa
add
cmp
popf
bound
xchg
ret
mov
daa
js
popf
mov
jp
and
mov
in
sbb
psrlw
mov
stc
aaa
add
xchg
out
push
ljmp
add
pushf
aad
add
inc
sbb
cmp
scas
add
pushf
xchg
dec
lret
xchg
pushf
add
dec
int3
lcall
test
xchg
jl
shr
add
cwtl
xchg
es
stc
hlt
out
or
mov
les
scas
add
icebp
mov
data16
xchg
cmp
aad
push
ret
mov
lock
out
test
jae
push
popl
out
push
inc
pushf
packsswb
add
loopne
clc
fimull
xchg
mov
push
sarb
mov
iret
jp
setae
movsl
stos
mov
int3
add
std
clc
adc
ror
lods
rclb
icebp
add
add
dec
inc
test
add
sub
add
add
mov
sub
jge
xchg
xchg
outsb
daa
sub
mov
add
or
scas
push
test
in
out
jno
inc
movsl
adc
mov
test
sub
jns
loop
inc
push
cmp
hlt
fnstenv
repz
lds
adc
xor
ds
mov
sbb
dec
push
lods
and
or
leave
sahf
mov
movsl
add
push
cli
add
add
testb
xor
cmp
and
enter
or
mov
out
sbb
lahf
pushf
pop
mov
aam
mov
mov
dec
int3
and
mov
ljmp
jecxz
ret
andl
in
int
mov
push
loop
cmp
pop
in
add
repnz
mov
inc
push
dec
xlat
add
jge
ret
inc
mov
add
dec
xor
dec
sbb
inc
add
testl
mov
inc
mov
sub
xchg
add
adc
or
jno
cmc
cmp
notb
add
mov
dec
fs
adc
nop
into
sub
add
int
cmp
out
and
mov
adc
inc
add
push
pop
inc
add
and
mov
add
jnp
aaa
icebp
lea
and
add
push
add
adc
jo
es
push
add
sub
outsl
orb
ret
push
out
push
sbbl
jge
add
xchg
add
cld
add
mov
imul
jbe
scas
xor
insl
add
jbe
nop
add
stc
xor
add
cmp
or
add
jb
mov
out
divb
xor
ljmp
dec
add
loopne
jns
inc
lahf
movsb
scas
mov
jg
ret
xchg
test
pop
aaa
push
aad
enter
mov
mov
cmpsb
jb
add
loop
pop
cmp
cmpsb
add
inc
inc
jmp
mov
dec
add
fisttpll
mov
cltd
in
mov
add
mov
dec
ret
jne
dec
pop
enter
lods
loope
enter
sti
add
xor
mov
dec
push
mov
jnp
pop
add
pop
push
add
insl
sbb
das
fmul
nop
scas
mov
sbb
inc
push
adc
cmp
pop
in
movsb
or
add
ficomps
fwait
rcrl
cmp
adc
mov
add
add
std
xchg
les
sub
adc
or
xchg
adc
loopne
sbb
and
and
sub
enter
or
push
inc
push
or
out
or
or
dec
add
mov
dec
das
xchg
aam
faddl
out
pop
lods
pop
fsubrl
cmp
push
clc
dec
icebp
pushf
out
int
mov
mov
lret
mov
pop
sub
loopne
sbb
jmp
add
mov
add
in
out
pop
test
out
int
add
jne
mov
movb
ret
adc
jg
inc
outsb
inc
sub
cmp
mov
xchg
cmp
imul
and
popa
jnp
lret
jae
push
test
push
push
es
scas
mov
push
mov
cmp
push
fcompl
add
shlb
cmp
xchg
xorb
outsl
test
and
or
dec
mov
add
mov
jecxz
movb
in
sbb
std
cltd
testb
mov
sbb
in
add
and
adc
movsb
aam
fwait
add
bound
iret
sarb
ret
sbb
or
dec
std
adc
pop
push
neg
fnstsw
and
add
repz
and
sub
add
or
movsb
test
out
or
cwtl
sub
adc
xchg
sti
out
add
fistpl
jns
sub
in
testb
jmp
push
std
add
pop
adc
int
dec
sub
aam
mov
inc
lds
lods
xchg
fisubs
jnp
mov
cmp
adc
inc
add
movsb
adc
scas
popf
add
repz
and
adc
add
add
and
add
test
hlt
mov
stos
roll
mov
add
imul
xor
xchg
add
das
lahf
pop
add
push
ja
cli
inc
pop
jne
arpl
sub
or
out
enter
outsl
add
popf
jmp
mov
scas
clc
ror
lret
es
fs
jne
cmpsl
add
cmp
xor
and
imul
ret
sub
xor
out
repz
cld
adc
test
pusha
lea
rcl
jnp
das
xor
out
scas
dec
sbb
add
add
sub
jbe
popf
dec
add
push
add
inc
jle
push
insb
sbb
sub
add
test
hlt
cmpsl
add
add
mov
shlb
fnstsw
pop
je
test
cs
movb
imul
mov
inc
das
xor
xchg
add
imul
rclb
cld
or
jp
je
addr16
jmp
fidivs
out
dec
jo
pop
pop
dec
push
inc
add
adc
fisttpll
and
add
jnp
pop
xchg
aas
mov
jne
pop
mov
imul
xor
pop
xchg
lret
out
sbb
dec
cs
dec
repz
mov
fisttpl
arpl
mov
xchg
add
add
mov
xchg
in
add
std
fstps
xor
add
ret
dec
js
adc
xchg
pop
add
jae
add
dec
dec
sti
cmp
or
xor
fcomp
cmc
cmp
or
hlt
enter
sbb
jl
scas
add
add
aas
jle
mov
mov
sbb
add
movsl
jg
add
inc
sbb
add
dec
aam
push
and
scas
filds
sbb
mov
sti
inc
add
pop
jo
mov
sub
test
mov
xchg
leave
add
or
jae
int
or
in
lret
aam
add
sub
fwait
add
add
jae
push
ud0
add
dec
adc
mov
aad
sbb
or
les
jo
mov
sub
jnp
fsub
dec
inc
pop
decb
jbe
aad
dec
mov
in
pop
sbb
sbb
clc
scas
add
cmp
sub
pop
in
add
cmp
cld
mov
fnclex
add
outsl
pop
add
dec
pushf
add
dec
lret
sub
rolb
popl
jle
adc
lahf
push
movsl
mov
arpl
dec
cmc
pop
ljmp
mov
fdivrs
sub
add
into
adc
insb
jl
jno
aad
insb
inc
add
or
adc
inc
das
lahf
sbb
jmp
jb
push
jle
mov
test
addl
fisubs
jecxz
cmp
add
inc
pop
add
jo
inc
and
add
pop
mov
test
add
loopne
pop
in
add
or
push
sbbb
inc
xor
inc
repnz
mov
lret
es
ret
mov
test
dec
pop
adc
negl
xor
ja
add
out
outsl
mov
inc
aad
sbb
cmpsl
add
loope
sbb
jecxz
lcall
pop
fs
dec
ja
cmp
loop
mov
or
pop
sub
inc
adc
fistps
add
add
sub
adc
bound
ljmp
lds
jmp
jg
sar
fmul
adc
add
insb
inc
data16
add
sub
lock
arpl
push
fdivl
sbb
dec
or
ss
dec
insl
add
jmp
shr
pop
push
lods
xor
test
es
fnstcw
mov
xor
adc
add
lods
jne
ficoml
push
xchg
sbb
pop
inc
int
out
pop
aas
add
outsb
and
add
andl
cs
or
inc
add
std
xorb
movsb
or
cmpsl
pop
mov
roll
repz
loopne
shlb
insb
cwtl
or
add
jmp
inc
hlt
cmp
hlt
dec
ret
pop
and
or
xor
add
movsl
testl
push
push
push
push
add
or
imul
xchg
inc
shrl
test
sbb
ja
or
das
xchg
ror
gs
int3
xor
in
lcall
imul
xlat
mov
jl
ret
fistps
clc
pop
cld
lahf
xor
cmp
and
add
pusha
rol
jmp
ljmp
int3
xchg
cmp
add
xor
add
dec
loopne
ljmp
in
jnp
cmpsb
mov
jge
inc
stos
and
fdivl
mov
push
popf
pop
and
pop
in
push
mov
cmpsb
mov
sub
adc
add
add
fldcw
aaa
notl
cmp
cmc
pop
test
js
in
or
mov
ljmp
adcb
or
push
pop
ja
es
test
and
add
add
add
add
mov
add
enter
add
jns
inc
cmp
xchg
leave
fs
popf
jmp
repz
add
add
add
cld
sti
add
add
pop
cmp
cmp
add
cmp
adc
or
add
jp
rolb
pop
leave
imul
ljmp
push
cli
fisubrs
sub
aas
mov
jle
cmp
in
mov
das
push
and
lahf
pop
cmp
inc
add
fcompl
cli
cmp
je
mov
std
xchg
rclb
add
jnp
stos
test
or
and
mov
roll
xlat
imul
flds
rorl
pop
xchg
adc
sbbb
arpl
xchg
lcall
mov
add
cwtl
insl
mov
ds
jbe
pop
out
jns
xor
js
cmpsb
and
shrb
mov
jge
outsb
loope
imul
push
push
mov
or
loope
xchg
xor
mov
add
les
mov
mov
add
mov
add
out
stos
sub
inc
mov
in
mov
and
pop
aam
mov
sarb
xchg
popa
jns
aam
outsb
mov
xor
xor
loope
mov
lods
mov
or
mov
and
loop
add
sbb
pop
xchg
addl
pushf
add
fwait
mov
sbb
in
loope
add
mov
pop
subl
push
add
test
jne
es
test
pop
add
shrb
or
fldt
and
add
dec
cltd
fadds
cmpsl
add
shrb
add
rep
jns
add
fcoms
or
sbb
sub
mov
addl
jl
inc
adc
mov
out
push
jne
pop
xchg
fisubs
lcall
hlt
dec
jmp
mov
insb
cmp
pop
push
lahf
jg
jge
adc
jecxz
add
mov
lea
inc
sti
dec
cs
pop
repz
jecxz
lahf
add
add
rol
add
aaa
push
lock
andl
dec
xor
jecxz
jno
imul
insl
cmp
sbb
push
lret
mov
xor
lret
cmp
icebp
js
add
and
xchg
xor
pop
inc
loop
or
aas
add
inc
xor
add
fs
xchg
hlt
xor
push
add
hlt
xor
rolb
cld
sub
xchg
fwait
hlt
push
fildl
mov
je
roll
add
xor
add
movsl
stos
pop
test
xor
mov
loope
push
add
push
insb
mov
in
test
mov
cmpsl
push
loop
sub
loope
fistpll
add
jno,pn
mov
cmpsb
iret
test
xor
movsl
sbb
add
popl
add
pushf
pop
cli
fildl
inc
mov
xchg
rolb
xor
js
inc
dec
test
sti
jmp
add
lods
ss
imul
mov
jne
loope
xchg
sbb
add
dec
lock
jne
int3
mov
cmp
xchg
mov
sbb
cmp
jnp
test
jne
loope
push
ds
xor
jp
or
and
sbb
jae
cli
pop
cmp
ret
add
add
aaa
mov
inc
subb
sub
mov
jbe
lods
bound
je
jnp
xor
add
popa
dec
push
jne
sub
dec
mov
xor
xchg
sbb
jg
insb
add
sahf
lock
pop
lds
and
dec
fnstsw
push
adc
mov
pop
filds
fisubrl
cli
aam
inc
repnz
add
mov
mov
cmp
xor
sub
and
xor
xchg
cli
mov
ret
inc
xor
sub
movsb
jae
inc
pop
sub
mov
cli
sti
aad
push
dec
dec
call
je
int3
or
das
add
and
in
sbb
adc
rcrw
add
mov
sub
add
fisttpl
pusha
idivb
add
int3
add
add
add
or
dec
ss
jno
adc
dec
mov
dec
inc
cmp
jns
fdivrs
mov
push
inc
push
pop
pop
mov
lcall
add
sbb
xchg
add
cmp
add
cmp
and
pop
add
out
lahf
les
xchg
dec
lret
aad
pushf
xchg
int
and
leave
sbb
out
data16
stos
jb
bound
cmc
dec
ret
add
lahf
and
mov
dec
fiadds
es
in
add
fs
sbb
mov
loopne,pn
add
sbb
cmp
mov
xchg
insb
sbb
add
icebp
add
mov
xchg
scas
mov
in
adc
jne
scas
lock
mov
loopne
les
and
addl
add
pop
mov
js
subl
cmp
xchg
sbb
dec
pop
pop
inc
cltd
gs
jmp
add
fs
loop,pt
and
aaa
xchg
xchg
loop
filds
hlt
shlb
mov
mov
add
jbe
sub
aaa
add
mov
add
test
jge
adc
pop
arpl
clc
add
or
adc
stos
das
and
ljmp
mov
add
fdivrl
add
fbstp
add
or
dec
push
inc
in
push
add
fidivrs
add
and
add
push
jge
dec
add
cltd
add
popf
add
add
push
xor
adc
add
fwait
jecxz
pop
or
push
mov
stos
mov
sbb
and
add
sbb
push
dec
imul
loope
iret
add
inc
mov
ja
jbe
fnstsw
or
add
stc
inc
add
rol
add
xor
mov
scas
dec
adc
add
fstpl
inc
xchg
add
mov
jg
jno
xchg
jmp
insb
jne
cmpsb
add
adcb
jecxz
and
or
mov
sbb
ret
pushf
add
dec
jge
push
hlt
mov
add
mov
gs
mov
add
repnz
mov
and
sub
add
ret
outsl
push
mov
xor
loopne
stc
lcall
mov
push
mov
add
out
inc
rolb
add
add
push
add
pop
xchg
jns
ret
pop
icebp
and
mov
add
dec
add
dec
xor
push
inc
add
cli
add
lock
in
into
ljmp
mov
xorl
leave
push
xor
pushf
cmpsl
sahf
add
cld
bswap
test
jmp
sub
movb
push
lahf
addr16
cmp
add
int3
xlat
sub
add
push
add
mov
pusha
sub
roll
jbe
mov
std
inc
add
repnz
add
jmp
add
das
iret
cltd
jne
aas
les
shll
jb
arpl
mov
cmp
addb
je
jne
stc
add
popf
mov
test
adc
hlt
dec
test
mov
enter
aaa
sbb
addr16
dec
cmp
mov
push
mov
adc
mov
xchg
sbb
xor
aad
mov
ficomps
daa
outsb
jl
cmp
and
and
roll
inc
xchg
add
pop
scas
cld
icebp
jne
and
stos
dec
add
lret
ss
arpl
loope
inc
mov
in
sub
push
adc
addr16
add
mov
adc
inc
cmp
jge
pop
jg
add
std
call
cld
add
mov
mov
in
sbb
leave
add
mov
mov
lea
addr16
add
mov
mov
lahf
pushf
add
add
gs
rolb
dec
inc
cltd
add
dec
sub
stos
xchg
and
push
adc
incl
inc
ljmp
call
fmuls
imul
add
lods
jp
mov
cltd
pop
das
add
jecxz
in
insb
mov
push
out
mov
sti
push
sbb
jle
nop
fldcw
cmp
mov
data16
pop
mov
add
ljmp
aas
mov
push
xchg
push
cwtl
pop
repnz
stos
mov
xchg
shlb
push
std
sub
dec
out
jecxz
andl
push
xor
test
fadds
test
scas
lcall
leave
xchg
mov
sub
in
mov
cltd
clc
adc
cmpsb
jo
pop
add
pop
testb
enter
cmp
loop
fdivl
add
add
js
mov
jbe
test
fidivl
add
add
outsb
push
jmp
fwait
or
or
insb
test
inc
gs
mov
add
ja
movd
add
push
sti
mov
cli
int3
flds
fsts
out
andb
sbb
loope
cltd
fnstcw
jg
mov
orb
insb
out
cmp
jbe
enter
xor
inc
lds
out
xor
cmp
enter
mov
xchg
adc
and
movaps
mov
mov
xlat
mov
enter
dec
in
fisubrs
sub
and
add
sbbl
adc
mov
add
or
push
arpl
lods
scas
add
add
jmp
add
xchg
mov
mov
mov
imul
and
scas
jle
mov
mov
push
dec
and
pop
adc
xchg
shll
xor
call
rol
mov
rolb
mov
ret
add
sub
fldl
test
aad
rcrl
fsubr
scas
push
arpl
adc
ljmp
roll
loopne
adc
lock
test
lods
mov
mov
mov
sub
and
clc
movsb
negl
in
in
repz
mov
mov
push
push
movl
add
lods
out
mov
xor
mov
jle
sbb
inc
test
add
stc
cmp
xchg
fldt
enter
lcall
xchg
addr16
popf
xchg
xor
insl
mov
adc
mov
mov
test
fbstp
mov
jmp
adc
jae
fcmovbe
mov
fnstcw
add
jae
inc
outsl
in
mov
lock
xchg
mov
mov
mov
lahf
icebp
lds
fdivrl
out
cmp
sti
loop
pop
add
aas
add
push
das
int3
arpl
dec
add
sub
and
push
inc
sti
ret
call
mov
cmp
or
pop
imul
add
lock
xchg
decb
gs
sbb
imul
add
ja
mov
call
mov
mov
shlb
sarl
jne
inc
add
xor
mov
add
add
add
shl
movsb
lods
adc
out
push
int
cli
sahf
out
in
mov
jae
sti
incb
test
mov
testb
and
fildll
in
push
pop
out
cmp
cmp
inc
out
sub
dec
push
pop
into
aad
push
push
sbb
les
add
mov
and
sbb
add
popa
cltd
adc
inc
leave
ds
mov
xchg
or
scas
int
aas
sbb
add
mov
lcall
push
shll
mov
push
add
js
rcrl
add
int
cmp
add
inc
add
fstps
dec
stos
cmp
int3
repnz
mov
sahf
test
cmc
xor
or
in
add
mov
mov
hlt
inc
add
add
jb
hlt
sub
mov
scas
stc
lods
xor
movsl
jo
mov
in
xorb
inc
fdivrs
mov
repnz
jmp
mov
and
adc
sbb
xor
inc
push
push
add
pop
adc
movsl
mov
xor
sub
popa
repnz
aam
mov
mov
sub
add
rcrl
xchg
popa
add
mov
jnp
sbb
cmpsb
sti
lret
or
add
jnp
loop
imul
movsb
inc
xchg
pushf
out
mov
fldt
mov
mov
sub
hlt
xchg
jno
add
add
mov
cmp
lods
in
insl
add
icebp
imul
jecxz
cmp
inc
pop
mov
lahf
push
add
and
push
add
faddl
xchg
jno
add
pop
lret
incl
ret
add
xchg
add
mov
das
lods
scas
inc
mov
insl
adc
out
scas
pop
jle
rolb
dec
xchg
movsb
cmc
sbb
shll
daa
mov
inc
mov
loop
mov
xor
xor
stc
cmp
add
add
push
imul
cmc
and
test
push
test
xchg
rorl
jl
ss
push
push
movntps
sbb
insl
test
call
jnp
xlat
add
mov
add
pushf
dec
and
cli
sbb
sbb
add
sub
cmp
inc
icebp
cmp
cld
scas
mov
push
sbbb
mov
jp
or
out
je
orl
xchg
xor
xchg
cli
add
add
lret
fdivrl
xchg
pop
imul
popf
xor
push
xchg
ss
push
pusha
add
mov
and
inc
add
or
enter
es
mov
inc
ret
mov
jl
add
push
std
add
nop
add
sub
adc
into
fsubr
adc
test
or
mov
fists
pop
add
mul
nop
mov
out
mov
add
fiadds
xor
pop
cwtl
or
leave
dec
icebp
and
leave
add
hlt
ror
ret
adc
ret
ret
sub
fwait
mov
jb
pop
adc
lds
shll
push
jge
andb
shr
add
dec
push
insl
mov
add
jmp
pop
sub
push
daa
fiadds
push
lods
push
xchg
sbb
les
mov
popa
jbe
xchg
ljmp
movsl
ficomps
fmuls
jmp
pop
mov
adcl
aam
shl
jnp
adcb
ds
stos
xchg
fs
add
mov
jmp
movsb
inc
add
add
and
xor
ret
in
add
inc
pop
scas
dec
cmp
adc
pushl
add
xor
repnz
cmpsb
cmp
lahf
sbb
jle
push
inc
mov
out
and
add
add
pusha
jnp
aas
and
lahf
mov
mov
mov
bound
clc
cwtl
cwtl
add
or
and
xor
mov
rclb
and
pop
call
cltd
xor
orl
lcall
outsb
fs
add
imul
loop
leave
int
es
jmp
mov
addr16
mov
add
aam
add
aas
test
mov
imul
push
ja
sub
cmpsb
mov
jbe
scas
dec
pinsrw
or
fs
xor
mov
frstor
and
and
push
cmp
pop
pop
and
or
xor
push
testb
add
jns
fprem1
stos
or
rcrb
sbb
or
add
mov
pop
add
push
pop
pop
xor
les
movsl
push
add
mov
fldenv
add
dec
sub
add
inc
fwait
add
mov
repnz
icebp
mov
push
push
add
add
add
cli
ss
xor
push
inc
insb
iret
add
lods
sub
add
mov
xor
xchg
add
dec
rolb
dec
pushf
movsl
add
lock
mov
add
call
cli
sub
add
leave
outsb
cs
adc
test
add
add
adc
push
dec
add
shrl
in
xchg
inc
adc
mov
xchg
int
cs
cmp
aad
mov
mov
lock
in
cmp
test
stos
inc
insl
loope
cwtl
cmc
and
test
add
in
push
mov
add
push
jle
stc
cmpsb
fists
mov
sub
cmovo
xchg
inc
cwtl
add
and
xor
or
aad
ss
pop
int3
xor
push
add
popf
mov
jno
popa
add
and
pop
loopne
xchg
add
xchg
out
add
in
pushf
es
aas
js
add
push
int
pop
or
xlat
gs
lahf
cmp
addl
xor
outsb
xchg
jo
bound
pop
cmp
bnd
pushf
jmp
push
mov
xchg
stc
add
and
int
decb
clc
mov
in
movsl
xchg
adc
mov
adc
pop
xchg
ret
cltd
mov
xor
xor
add
sbb
mov
gs
pushl
movl
adc
pop
fwait
cmp
mov
stos
pop
outsb
cmpsl
pop
pusha
gs
stc
or
cmpsl
out
ret
mov
sbb
xchg
pop
adc
push
sub
outsb
andl
mov
mov
sub
add
aas
addb
and
stc
add
popl
jmp
jmp
inc
movsl
jb
daa
jb
pop
outsl
sahf
cmp
add
outsb
bound
push
enter
add
cmc
lldt
add
mov
xor
add
dec
cwtl
loop
add
fldl
jo
or
jecxz
cwtl
fldenv
sub
jns
daa
xchg
sub
inc
add
add
decb
dec
movsl
mov
xor
mov
add
xchg
rcrb
push
xor
add
incl
mov
add
and
dec
lret
add
add
push
insl
fs
cli
add
add
lret
loopne
loopne
xor
fsubrl
lods
ds
lea
or
mov
cld
add
cmp
add
add
adc
add
add
cmpsb
sahf
ffree
add
mov
add
mov
aas
aad
pop
mov
jl
xorb
sub
call
fcmovne
jb
pop
xchg
xchg
js
test
push
movaps
cmp
lds
inc
dec
pushf
roll
sbb
add
jb
pop
push
mov
add
add
dec
push
push
pop
add
fiaddl
xchg
sbb
addr16
push
int
mov
stos
mov
pop
aad
aam
push
push
jnp
mov
xorb
jge
add
mov
add
cmp
sahf
and
out
imul
arpl
out
add
notl
adc
dec
sbb
xor
sbb
add
rcrl
scas
in
aad
push
add
adc
add
xor
jnp
add
xor
sub
movsb
xchg
stos
dec
popa
or
mov
xchg
xchg
push
add
lret
jb
and
xchg
inc
add
mov
add
out
inc
cld
mov
addl
jg
dec
add
sti
loopne
adc
add
add
adc
add
xor
add
xchg
inc
xchg
adc
int3
andb
add
inc
gs
jge
sbb
leave
rclb
mov
dec
repnz
dec
add
xchg
push
and
inc
add
adc
scas
push
jecxz
aaa
add
mov
out
inc
mov
aas
repz
pushf
movsl
xchg
fs
loope
pop
cmp
add
pop
cmp
in
imull
aad
inc
mov
and
gs
add
xchg
ret
cmp
jbe
add
xchg
xchg
sbb
or
sahf
xchg
stos
inc
add
push
add
cmpsl
ljmp
add
add
es
sub
adc
jbe
pushf
mov
push
xchg
fbld
pop
dec
xchg
sbb
fbld
jecxz
cltd
and
pop
xchg
add
and
inc
dec
inc
sub
mov
cmp
sub
mov
cmp
rorl
jg
cwtl
mov
mov
enter
xor
jno
and
ds
add
mov
push
pop
scas
add
cmp
push
mov
aas
inc
jg
inc
mov
mov
sub
icebp
addr16
add
mov
mov
cmp
pop
fwait
mov
push
add
aad
push
push
push
or
lret
push
in
imul
lcall
xchg
mov
cltd
cmp
les
sti
pusha
jmp
xchg
mov
stos
add
jmp
add
movsl
add
std
sbbb
jle
mov
sbb
scas
rolb
pop
test
add
aas
data16
mov
popf
cmp
mov
mov
add
jge
push
int3
mov
inc
add
mov
add
add
jmp
jl
insb
xchg
push
test
push
inc
mov
push
pop
dec
mov
and
sub
jae
xchg
mov
outsl
call
js
cmp
inc
pop
adc
stos
jge
add
mov
jno
cs
add
sbb
mov
inc
pop
and
popf
add
lret
scas
jb
dec
sub
in
fwait
nop
push
dec
fwait
cltd
pop
add
shll
insb
add
aad
jnp
adc
add
xor
fldenv
or
lret
insb
lahf
out
mov
lcall
add
lock
jmp
add
jp
inc
test
fldl
lahf
out
cmp
cmp
add
push
decl
xchg
add
add
xchg
stc
jae
test
pop
in
mov
stos
xchg
cli
cld
mov
add
mov
mov
aaa
pop
xchg
aaa
add
leave
loop
mov
testb
cli
mov
mov
push
ficompl
in
add
add
cmp
sbb
sub
dec
sbb
inc
out
mov
clc
seto
xor
pop
clc
std
ss
push
add
mov
sub
arpl
add
xchg
and
xchg
add
xchg
iret
jg
adc
inc
jno
adc
mov
cmp
cmp
cmp
mov
add
orl
addr16
and
pop
push
pushf
stos
or
or
push
dec
fdivrs
sub
pop
or
add
xchg
dec
sbb
bound
daa
xor
sbbb
decl
shll
adc
push
shlb
mov
dec
xor
call
jge
movsb
add
inc
xchg
sbbl
pop
xchg
add
mov
xchg
clc
add
add
test
jg
add
or
jmp
pop
dec
loopne
adc
cltd
jge
fneni(8087
jbe
or
cmp
pop
sbb
lret
jne
popa
add
gs
je
test
dec
add
das
mov
popa
or
mov
xchg
rorl
lcall
fs
mov
jne
sbb
or
mov
cltd
aas
stc
push
cmp
scas
cmp
mov
cmpsb
loopne
sub
aam
add
mov
add
popf
bound
add
cltd
cmp
push
cmp
daa
mov
add
add
dec
add
and
mov
xor
js
cwtl
adc
push
stos
dec
add
mov
hlt
mov
hlt
into
adc
add
cmpsb
imul
addb
xchg
mov
add
and
fistps
rcrl
jge
lret
jns
clc
fisubs
mov
cmpsl
andl
add
add
loopne
add
add
nop
dec
push
add
popa
sub
aas
add
mov
add
or
cli
add
subl
mov
sbb
ret
pop
pop
scas
add
scas
cs
add
adc
push
xor
add
jmp
mov
pop
sub
sbb
clc
bound
pop
scas
push
inc
test
test
clc
repnz
ljmp
cwtl
movsb
dec
add
stos
jno
add
roll
flds
mov
push
add
inc
dec
cmpsb
addb
call
add
mov
aas
push
sti
test
hlt
loopne
jo
jbe
add
push
add
add
sub
mov
mov
cmp
rcll
mov
scas
movsl
push
xchg
pop
add
mov
add
jnp
fisubrs
out
jne
inc
movsb
add
add
add
arpl
call
dec
repz
test
sbb
xchg
shlb
stos
push
add
sahf
adc
pop
ja
inc
mov
lods
adc
popf
xor
add
push
adc
sbb
xlat
daa
add
das
sub
cmc
and
insb
adc
cli
lods
xor
push
out
stc
jmp
lods
leave
rcrl
mov
mov
insb
mov
test
pusha
or
sub
push
mov
fistpl
ficoml
add
or
cld
xor
adc
or
mov
or
ds
sub
or
jp
mov
xlat
sub
incl
sub
mov
out
jae
or
rcrb
add
or
sbb
movsl
mov
fsubrs
stos
cmp
pop
out
xlat
ja
or
in
ss
int
pop
push
xchg
adc
dec
mul
in
add
xor
cmovp
adc
add
push
ss
in
add
adc
xchg
rclb
fsubr
mov
push
cmp
add
les
inc
leave
xchg
repnz
mov
sbb
inc
iret
add
cmp
jmp
mov
mov
aam
scas
push
decl
mov
pop
add
mov
lret
sbb
leave
imul
mov
lcall
int
hlt
mov
mov
insl
rcrl
push
out
cwtl
cmp
mov
add
add
mov
jl
insb
dec
ficoml
inc
add
cs
loope
cmc
test
ds
fisubl
mov
sub
pop
cmp
ret
movsb
das
mov
movsb
adc
daa
movsl
push
add
fstps
mov
inc
dec
lahf
mov
mov
cmp
lock
lock
mov
pop
add
sbb
in
mov
add
mov
loopne
or
je
lods
xor
clc
xchg
pop
mov
inc
mov
sbb
cmpsl
daa
xor
sub
sbbb
rorb
ret
add
xchg
fidivrl
push
lods
maxps
mov
cmc
add
into
add
xchg
hlt
jb
push
jo
fistpl
add
test
pop
jle
mov
out
fstl
add
sbb
mov
fs
push
outsl
imul
shll
add
jb
add
add
sub
ss
fcomp
add
and
mov
xchg
or
movsb
pop
cmc
sub
xor
adc
inc
sbb
and
stos
jne
movl
andb
xor
add
lahf
jo
jb
scas
shlb
jmp
scas
jl
sbb
es
pop
and
fisubrl
add
cwtl
push
int
into
aaa
add
jl
movsl
inc
add
fcompl
pop
scas
push
ds
in
lods
push
xchg
add
or
dec
mov
add
ja
mov
sti
inc
mov
and
lods
faddl
cs
gs
dec
adc
jle
xor
cmp
jnp
dec
xchg
add
add
dec
cwtl
mov
xchg
decl
add
pop
push
test
mov
test
jg
add
push
clc
or
xlat
mov
inc
pop
in
add
lret
jne
lcall
add
outsb
pop
pop
inc
iret
push
cmpsl
push
sub
stc
add
dec
lret
add
test
mov
push
and
dec
add
popf
jae
addl
and
sub
mov
enter
push
jo
mov
jbe
adc
inc
xchg
jg
sub
sbbb
inc
cmpsb
jge
add
popf
fidivl
mov
dec
or
mov
xor
add
inc
in
or
add
xor
ja
ja
imulb
mov
bound
cmp
lea
sbb
jp
addr16
inc
fsubs
push
add
outsl
aam
adc
dec
sub
add
xor
shll
add
out
outsb
mov
add
pop
pop
add
in
cmp
add
mov
loope
in
pop
inc
mov
decl
pusha
xchg
add
pop
inc
add
mov
pop
fwait
jbe
inc
outsb
ret
xchg
xlat
add
add
cld
shrb
inc
cld
mov
jp
dec
mov
lods
push
mov
add
shll
icebp
rclb
add
std
cmc
cs
push
in
das
ret
lea
mov
ret
add
add
pop
xchg
push
insl
xchg
mov
push
cli
je
fwait
jae
jecxz
jnp
cli
dec
iret
rclb
rolb
add
sar
add
movsb
loope
rcr
repnz
xchg
xchg
incb
jecxz
add
xchg
ja
test
mov
movsl
hlt
pushf
add
push
cld
mov
add
jl
push
add
test
shll
popf
pop
add
clc
data16
popa
lods
pop
add
jno
test
gs
push
add
into
cmp
sbb
xor
fstpt
call
scas
pop
pusha
push
push
pusha
dec
lea
jl
xchg
cltd
inc
xor
or
stc
add
mov
ja
mov
fisubrl
dec
sti
dec
mov
sbbb
xchg
lahf
jecxz
jg
outsl
pop
push
inc
cli
add
jne
add
cld
and
mov
cmp
arpl
pop
hlt
mov
js
ret
add
or
inc
in
clc
fs
xchg
loope
mov
stos
ds
xchg
in
sti
add
adc
adc
js
hlt
js
sub
pop
lret
popa
loope
ja
add
stos
iret
sub
mov
divl
cld
push
or
mov
add
adc
int3
adc
nop
dec
ljmp
add
scas
mov
dec
sub
push
ja
add
add
add
adc
add
mov
add
out
iret
rorb
mov
mov
xchg
and
ret
mul
lock
add
mov
ret
jo
pushf
adc
fiaddl
popf
xor
std
push
loopne
sub
add
add
int3
shll
pop
push
xor
cli
adc
add
jae
lock
pop
add
js
adc
mov
cmp
fwait
std
popf
rorl
or
xlat
rolb
sub
mov
mov
add
pop
add
aaa
mov
or
adc
outsb
rcr
push
testb
test
and
add
test
dec
leave
sbb
aad
cmp
add
dec
shlb
add
mov
dec
adc
test
sbb
cmp
xchg
mov
dec
mov
pop
add
xchg
orl
xchg
sbbb
scas
pop
sub
add
aaa
dec
out
mov
stos
int3
add
ret
add
add
sti
incb
ds
movsb
je
les
stos
daa
ljmp
fcompl
dec
add
in
mov
movsb
inc
xchg
adc
push
ds
movsb
adc
loop
fcmovb
add
dec
pop
add
ja
or
xchg
mov
add
popa
pop
pop
cltd
dec
mov
fcomip
inc
add
add
in
cwtl
outsl
pusha
addr16
inc
dec
cmpsb
xchg
mov
xor
add
xor
xchg
add
mov
lods
add
loopne
pushf
xorl
or
loop
fsubrp
cs
adc
fwait
out
push
or
outsl
fildl
add
jno
out
sarb
int3
enter
icebp
stos
push
xchg
mov
popa
jecxz
scas
stc
mov
add
scas
sbbb
bound
mov
add
faddl
outsl
gs
pop
sub
mov
add
rcrb
pop
add
cmp
mov
ss
xchg
lea
jne
pop
iret
test
and
fmul
cmp
pop
incb
aad
add
shlb
add
add
cmpsb
sub
popw
xchg
mov
inc
add
cmpsb
or
jle
add
pushf
sti
add
push
adc
lcall
out
mov
add
sbb
add
and
fs
xor
xor
out
int3
mov
add
add
pop
xchg
and
int
cmp
int3
jne
pusha
push
add
cmp
pop
dec
cmp
mov
data16
mov
rorl
cmp
fistl
and
in
fdivrl
push
jne
add
sti
mov
jl
outsl
push
cwtl
sub
ljmp
ljmp
add
push
sub
lock
mov
xlat
add
add
and
pusha
sub
pop
mov
mov
out
push
jmp
pop
add
lods
popa
add
add
adc
rclb
jg
nop
add
sub
jns
cmp
mov
mov
jb
jecxz
lret
pop
pushf
fldl
sbb
or
fisubl
xorb
out
mov
das
cmp
xor
cmpsb
pop
inc
jecxz
mov
jl
enter
fstpt
stc
add
rorb
jmp
into
movsb
add
les
ret
pop
pop
pushf
mov
add
in
cmpsb
adc
loopne
scas
jge
mov
adc
cmpb
movsl
xchg
mov
sahf
lods
mov
add
xorb
imul
loop
test
dec
repnz
cmp
fcompl
addl
test
mov
loop
xor
push
push
nop
lret
loopne
inc
mov
xor
xchg
ds
loop
ss
xchg
xchg
mov
mov
and
movsb
push
mov
push
lock
sub
arpl
test
and
jp
add
pushl
incb
dec
add
lods
addl
xchg
mov
adc
push
push
add
sbb
clc
stc
repz
loopne
std
mov
orb
xlat
add
cmc
jp
pop
mov
pushf
mov
add
test
add
add
nop
outsl
es
fs
push
jno
mov
sbb
xor
inc
jmp
mov
adc
aad
sbb
ret
int3
add
sub
mov
add
pop
jmp
and
or
pop
xchg
pop
popa
clc
lods
adcl
outsl
add
iret
leave
mov
movsb
cli
loopne
stc
dec
adc
lds
decb
gs
rorl
adc
lret
stc
add
mull
mov
adc
mov
lods
add
xor
mov
nop
icebp
add
cmp
jle
mov
jp
add
daa
bound
or
jnp
ss
lcall
fildll
jmp
stc
add
jo
cwtl
push
inc
leave
dec
push
mov
insb
xchg
add
cmp
add
add
gs
jo
add
push
mov
outsb
movb
push
push
andl
pop
insl
sahf
mov
cli
pushf
add
jmp
mov
mov
push
cmpsl
pop
add
inc
jmp
dec
cmp
xor
mov
mov
or
das
dec
dec
push
nop
add
add
add
cmpsb
pop
xchg
mov
aam
fwait
lds
xchg
dec
push
or
inc
rcrb
xlat
jne
test
rcrb
or
bnd
add
cld
jge
jl
dec
les
mov
pop
pusha
mov
push
inc
add
add
xor
mov
mov
push
filds
xchg
xchg
mov
jecxz
dec
scas
sbb
outsb
add
sbb
mov
add
test
jae
xchg
pushf
mov
push
sbb
dec
les
cmp
add
sbb
sub
mov
mov
cmp
jbe
add
inc
push
add
sbb
or
setne
push
cld
mov
jecxz
in
adc
jb
in
pushf
je
push
ret
mov
flds
stc
pop
rcrl
cmp
xchg
inc
sbb
nop
pop
rolb
dec
mov
out
cmp
out
incl
add
daa
add
jb
push
push
xchg
das
loopne
cmp
inc
sbb
test
out
adc
ja
fnstcw
cs
sarb
lock
add
add
not
xor
mov
jge
mov
dec
daa
popa
mov
pop
pop
bound
test
pop
pop
add
mov
mov
enter
cld
icebp
add
movsl
jecxz
add
add
jo
dec
add
inc
xchg
mov
popa
jo
dec
lds
add
imul
inc
add
mov
sub
push
sub
data16
rcrl
xchg
xlat
add
push
add
jge
xor
test
in
test
push
loope
lods
mov
lods
movsb
pushw
loop
lahf
jnp
mov
unpckhps
aaa
je
xchg
loope
mov
mov
mov
filds
leave
adc
push
mov
mov
ds
push
pop
aad
test
adc
loope
dec
push
outsl
movsb
lock
jnp
push
push
imul
roll
adc
add
cmp
cmp
cltd
das
or
std
imul
fcmovu
lods
sbb
ja
aas
or
inc
rorl
popa
das
add
jl
add
sbb
rol
aad
inc
sti
xchg
cwtl
add
cmpsb
cli
ficoms
sahf
cmpsb
sbb
or
cwtl
dec
mov
xchg
add
or
and
stos
lock
mov
mov
pop
fisubrs
addr16
cmp
movsb
hlt
mov
mov
loop
and
lahf
fidivrs
cmp
mov
add
add
add
popa
sub
and
icebp
outsb
inc
js
or
cli
xchg
add
test
out
sub
mov
mov
sbbl
movl
add
jno
add
jmp
xor
sarl
test
lret
mov
testb
mov
sbb
mov
and
pop
shll
add
cmp
and
sbb
push
cmpsl
test
jl
xor
lods
sbb
mov
shr
mov
pop
cli
push
mov
adc
pop
inc
xor
add
clc
dec
add
push
and
lahf
xchg
xchg
push
adc
mov
push
pop
add
stc
clc
adcl
movsb
popf
add
dec
mov
das
xchg
addr16
fldt
mov
or
xchg
inc
or
push
adc
and
ret
pop
popf
sub
mov
cwtl
loop
jle
stc
loop
adc
xor
sbbl
cmp
sub
mov
push
cmpsl
jl
inc
lea
add
jne
add
iret
js
fcoms
shll
mov
dec
mov
xchg
add
orl
cltd
popa
mov
mov
imul
pop
out
hlt
inc
push
sbb
push
mov
lahf
loop
sbb
add
pop
fadds
jb
fists
or
sbb
add
sar
inc
psllq
mov
add
mov
mov
lcall
add
movsl
add
cmp
cmp
cltd
mov
add
and
jp
cwtl
add
xor
or
adc
iret
or
mov
mov
sub
add
xor
push
or
add
inc
ja
fwait
cld
pop
and
in
cmc
add
mov
jp
out
push
call
mov
mov
les
cli
lods
push
mov
pusha
adc
mov
jns
add
out
pop
mov
push
mov
mov
xchg
pop
push
mov
pop
adc
andb
ja,pt
push
pop
bound
xor
sti
insb
dec
xlat
mov
cmp
push
jns
shrl
test
loope
add
push
ja
push
add
add
cltd
lds
add
jnp
mov
xchg
and
paddusw
xor
sbb
sub
insb
or
out
adc
mov
mov
pop
out
pop
lock
lret
mov
jnp
push
add
xor
xor
aam
add
repz
sbb
add
add
cs
lcall
sbb
mov
mov
jge
xor
rcr
test
lods
sbb
das
pop
addb
or
movsb
jns
add
add
add
sti
fimuls
icebp
test
scas
push
add
dec
out
pop
stos
add
repz
mov
add
shlb
sub
scas
pop
adc
movsb
xor
mov
inc
add
stos
push
jo
shl
je
xchg
loope
push
push
push
jmp
adc
mov
lea
push
ds
jecxz
repz
xlat
out
adc
cmp
xor
push
mov
mov
dec
add
loop
add
mov
loopne
xchg
int
sbb
jg
push
jg
aaa
and
loop
loopne
pop
fildll
adc
pop
add
sbb
push
mov
cwtl
inc
loope
sub
cmp
into
jae
xchg
mov
fisubrs
ficomps
in
in
xor
mov
test
lods
or
dec
call
insb
dec
pop
ljmp
and
mov
jns
jae
out
ss
push
add
scas
sub
mov
stc
mov
clc
sub
adc
in
adc
cltd
movsl
lret
sarb
add
daa
add
xor
cmp
loopne
mov
jo
add
dec
cmp
std
add
lcall
dec
or
or
pop
mov
adc
sti
add
jecxz
outsl
mov
aaa
add
add
cmpb
pop
fisubl
cmpsb
xchg
fldt
sub
outsb
mov
gs
ret
int3
out
jmp
add
test
mov
jb
or
jno
fwait
add
and
mov
popf
cmp
mov
ret
jl
lock
add
inc
xor
and
cmp
dec
push
mov
cmp
addr16
cmpsl
fiaddl
add
sar
sub
dec
clc
int
mov
cld
sub
lret
enter
mov
add
sub
dec
sub
sahf
push
lods
dec
or
cmp
hlt
addl
jbe
lcall
jns
iret
mov
sbb
or
ja
cmp
add
sbb
fidivrs
mov
gs
outsl
add
jno
add
stos
fisubrs
loopne
rcll
cmp
mov
add
add
xchg
xchg
push
sub
xchg
mov
inc
xor
push
cmp
hlt
stc
add
stos
pusha
adc
sub
ret
scas
imul
add
aam
icebp
int
add
out
mov
inc
imul
faddl
lock
mov
pop
fisubrl
push
ficomps
xor
xchg
mov
mov
cli
and
test
movsb
stc
push
jnp
dec
add
stos
push
add
mov
xor
stos
dec
int3
pop
aad
sub
xchg
sub
int3
sub
out
or
lret
movsl
outsl
xor
push
out
add
add
pop
sub
fwait
mov
cmc
add
push
pop
add
sbb
jmp
cmc
enter
sldt
repnz
test
les
lahf
stc
push
test
arpl
push
xchg
in
jmp
inc
movl
insb
push
add
loope
add
and
jae
fldcw
and
jmp
jbe
jl
xor
mov
cs
add
or
or
addr16
push
inc
jg
ret
insb
mov
mov
test
add
push
xchg
insl
rcll
sbb
xchg
in
mov
push
jge
mov
in
pop
pop
nop
jno
pop
add
cmpsl
mov
inc
jns
aas
cltd
movsb
ljmp
and
add
dec
addb
lcall
pusha
adc
sub
mov
ja
add
mov
fstpt
incl
daa
mov
sub
and
add
or
mov
pop
sbb
lret
stos
jne
das
push
ja
pop
negb
pop
add
pop
and
divl
jl
add
mov
add
pop
inc
aam
lods
sub
xor
insb
fdiv
pop
and
xchg
pop
and
cmp
enter
out
and
mov
add
pop
sbb
mov
addr16
sbb
inc
add
jno
sbbl
outsl
repnz
mov
jecxz
sub
cwtl
repnz
ss
stos
and
pop
add
xchg
stc
mov
imul
dec
les
adc
out
add
loop
mov
mov
add
popa
xchg
mov
lods
sbb
in
sbb
mov
cmp
jg
xchg
imul
mov
cmpsl
add
xchg
dec
push
pop
push
adc
add
in
push
mov
and
aam
mov
pop
aad
fmuls
or
shl
mov
inc
adc
push
add
divb
scas
add
pop
int3
hlt
add
aad
mov
mov
lahf
in
clc
jl
inc
add
bound
pop
fsts
mov
pop
mov
xchg
add
sbb
push
outsb
stos
enter
pop
js
jnp
push
cmc
fwait
dec
imul
lret
lret
mov
clc
add
add
test
fwait
enter
xor
sub
add
sbb
add
adcb
fsubs
xchg
dec
or
dec
push
jo
loop
cmp
xchg
jp
sbb
push
and
inc
jmp
test
imul
mov
mov
fbstp
xor
xchg
clc
addl
out
mov
popf
push
adc
mov
lret
sbb
add
mov
jg
cmpb
add
mov
addr16
add
lea
lret
mov
cltd
sbb
mov
jmp
mov
add
jl
adc
out
xchg
add
or
lods
in
add
stc
and
add
test
jge
xor
test
mov
ltr
push
cmpb
cmpsl
push
clc
add
inc
mov
cmc
jns
sbb
dec
jp
push
frstor
adc
push
add
dec
pop
sbb
jae
cmp
add
add
sub
arpl
jge
cli
out
cmp
pop
or
repnz
fstl
std
inc
negb
insl
or
sbb
dec
adc
jb
sbb
mov
out
test
aas
xor
xor
push
dec
je
sub
dec
jl
xchg
imul
inc
mov
imul
sti
pop
test
pop
cli
add
int3
add
es
mov
add
jp
filds
push
imul
or
imul
cwtl
adc
add
ret
shl
inc
add
mov
enter
add
ja
jb
jbe
pop
dec
fcoms
add
rcr
mov
lods
dec
movsl
sbb
pop
add
cli
push
inc
dec
nop
dec
sub
hlt
data16
call
ja
mov
jle
or
add
dec
inc
mov
insl
jp
sub
dec
add
push
lods
lcall
mov
stos
mov
out
out
aad
jnp
add
in
lods
cli
push
in
push
xchg
mov
aam
nop
sub
inc
mov
dec
add
push
or
push
movsb
push
add
mov
test
sahf
push
xchg
inc
xor
mov
add
mov
out
ret
pop
mov
xor
mov
insl
push
jb
push
dec
daa
cmp
adcb
fisttps
movsl
add
push
dec
lcall
and
mov
push
xorl
sbb
xchg
push
cld
sub
outsl
lret
sub
mov
and
cmp
or
sbbb
xchg
inc
add
addr16
cmp
pop
test
stos
movsl
inc
xchg
leave
call
test
gs
fimull
sti
mov
imul
daa
add
adc
add
jnp
push
cs
sub
mov
cs
add
data16
inc
pop
rol
sahf
xchg
pop
xchg
test
arpl
add
repz
mov
loope
inc
out
add
and
stc
jecxz
jo
stos
bnd
les
in
adc
pop
add
add
lcall
add
cli
pop
add
cmp
inc
push
pop
push
adc
pop
test
mov
lret
nop
inc
fisubrs
xchg
call
ljmp
pop
insl
push
test
sbb
mov
bound
xchg
inc
sub
sub
add
flds
xchg
add
stos
leave
dec
sub
mov
int3
aad
add
daa
add
dec
xchg
ljmp
add
sbbl
lods
adc
jns
add
bound
lret
aad
add
lods
pushf
cs
es
fs
xor
jge
cmp
xchg
add
jmp
adc
bnd
add
jbe
inc
add
ja
jo
mov
aas
jae
pop
add
loopne
fisttpl
push
icebp
pop
mov
push
add
xchg
cmpsb
xchg
lahf
add
sbb
out
jbe
and
fcmovu
dec
fdiv
mov
adc
push
cld
push
sti
jl
and
xchg
dec
mov
pushf
add
adc
sub
inc
cmp
mov
rcr
je
push
stos
inc
xchg
mov
and
insl
add
add
push
aad
pop
sahf
stc
notb
and
add
push
jp
lea
add
pop
aam
add
jl
and
add
xor
movsl
and
addb
dec
ds
movl
and
call
add
jp
mov
repnz
add
cmp
add
cmp
add
inc
test
sub
pop
sub
test
aas
adc
out
sub
in
in
add
or
test
arpl
cmpxchg
xchg
dec
stos
or
jmp
jmp
mov
jge
es
fcomp
lods
or
lcall
in
rsqrtps
adc
lahf
dec
imull
xor
lods
add
add
inc
mov
insb
data16
dec
mov
stc
add
xchg
mov
xor
ja
shll
icebp
dec
add
mov
add
sahf
ds
push
fsubl
dec
loop
sbb
pusha
ret
or
sahf
mov
jg
adc
adc
data16
popf
add
rol
sahf
subb
sub
xor
cmp
push
mov
jns
adc
jbe
add
add
add
or
lret
test
add
lcall
or
ljmp
sbb
pushf
sbb
int
cld
stc
in
stos
add
mov
and
push
or
mov
lret
mov
mov
pop
inc
add
popf
pop
mov
inc
cmp
inc
fadds
es
pop
cmp
sbb
xchg
aas
faddl
push
or
lcall
lods
mov
cmp
add
add
shll
mov
mov
hlt
sbb
das
mov
xchg
add
int3
movsb
fiadds
sub
mov
add
add
sub
mov
xor
xchg
or
cld
add
xor
test
jo
sub
repnz
inc
rcr
out
inc
les
xchg
lea
adc
test
loope
xchg
loopne
inc
test
jo
jp
ljmp
aad
add
mov
pushf
jno
loop
and
sub
mov
cmp
mov
mov
or
fsubs
loopne
fmuls
jne
insb
mov
sbb
cmpl
dec
outsl
mov
push
add
je
mov
icebp
imul
scas
push
dec
pop
and
lds
in
aas
add
sub
xchg
popa
jle
xor
cmp
add
mov
xor
push
xchg
xchg
test
or
dec
add
cs
mov
xor
pop
fs
mov
xor
add
add
xchg
out
add
push
lcall
xchg
lcall
adc
imul
xlat
add
inc
pop
popf
or
fidivrs
jle
add
add
daa
adc
test
adc
xor
imul
psllq
push
jns
scas
and
hlt
add
jge
mov
or
pop
cld
les
dec
add
stos
pop
mov
out
rorb
xchg
cmp
inc
mov
xchg
ficoml
pop
or
push
or
add
mov
lret
fs
mov
out
lret
push
jle
push
and
jns
test
add
cltd
pop
lods
mov
push
cld
add
xchg
jne
roll
cld
test
push
xchg
dec
addb
and
imul
push
and
and
xchg
icebp
cmp
fisubrs
lret
std
stos
jecxz
push
cmp
jg
leave
cs
mov
xchg
mov
fiadds
inc
add
sub
insl
mov
iret
sbb
incb
das
xor
out
ret
sbb
lret
int3
mov
loope
add
das
push
push
jno
adc
call
inc
incb
jb
lcall
cmpsl
xchg
movsl
lldt
sub
loope
movsb
ret
fisubl
add
jno
scas
add
clc
jo
test
mov
jne
pop
add
out
mov
and
pop
mov
xor
js
popl
or
push
call
ja
cmp
fiadds
leave
rcrb
xchg
xor
add
shlb
jp
mov
popf
test
adc
jmp
fpatan
inc
leave
pushf
mov
mov
jp
lar
int3
stc
scas
std
sbb
nop
cli
iret
and
xchg
jne
stos
adc
xchg
xor
popf
gs
jmp
cmc
mov
in
inc
stos
mov
cmp
sub
jne
or
mov
mov
add
std
inc
clc
mov
xchg
ret
sub
sbb
add
fld
mov
add
and
mov
mov
stos
push
outsb
add
mov
shlb
pop
sbb
push
add
pop
adc
fs
rcll
sub
inc
dec
lahf
cmp
inc
push
mov
adc
fcmovu
dec
aaa
cwtl
in
add
enter
addr16
lock
add
sarb
stos
mov
cmpsb
outsb
jp
jg
out
dec
cltd
mov
in
fcoml
subl
loopne
pop
nop
shrl
outsl
fidivrs
inc
add
adc
mov
shlb
add
xor
fwait
shlb
add
fisubrs
xor
roll
ret
addr16
hlt
pop
push
pop
inc
mov
mov
movsl
add
mov
mul
aaa
xor
out
addl
add
lcall
jge
add
add
push
add
out
ds
stc
add
sahf
scas
add
jecxz
clc
daa
movsl
sub
inc
jno
mov
insb
ror
add
add
dec
fisttpll
dec
mov
sub
mov
lret
add
pop
and
pop
in
test
adc
add
incl
add
mov
mov
cmpb
add
rcll
adc
jno
mov
fdivrl
jb
shr
out
push
add
and
fstps
scas
jl
sbb
out
out
ret
imul
fdivs
add
adc
add
into
aaa
jg
jns
test
adc
inc
test
cmp
in
add
mov
add
movsb
mov
inc
push
xor
aad
cmp
push
ret
daa
popa
push
add
addr16
add
addr16
icebp
cmp
addb
insl
dec
or
add
test
sbb
cwtl
dec
clc
mov
out
cmp
fdivrs
xchg
mov
lcall
xor
mov
mov
outsl
fwait
sbb
out
sub
adc
pop
mov
inc
ret
ja
sti
add
mov
ret
and
fcoml
xchg
mov
xchg
add
popa
add
mov
repz
cmp
pop
push
scas
mov
or
push
add
add
sahf
sbb
lret
xchg
rcrl
clc
test
push
mov
push
xor
cmp
and
in
pushf
add
lahf
mov
dec
aas
push
cmp
push
mov
mov
roll
into
mov
insb
enter
jb
in
xor
int
cwtl
inc
and
test
and
adc
push
pop
sahf
sub
fidivrs
add
add
cmp
pop
outsl
push
pop
or
ds
aam
push
inc
add
fisubrl
es
pop
les
out
mov
cmp
cwtl
leave
mov
dec
in
push
jnp
sub
dec
lret
call
mov
popf
mov
inc
pop
cmp
push
pop
add
add
repnz
or
adc
mov
sbb
addr16
add
and
insl
lret
lret
jne
mov
xchg
lret
in
mov
mov
xchg
xchg
inc
outsl
call
push
add
mov
cmp
cmp
gs
je
cmp
push
mov
fs
jnp
dec
jbe
push
cmp
mov
mov
inc
add
push
mov
stos
pop
cmp
mov
rorl
call
lcall
push
add
mov
mov
xchg
add
lods
cmpsl
pusha
xchg
ja
ds
add
ja
xchg
cmp
ret
cmp
cwtl
orl
jmp
xlat
movsl
out
add
add
adc
mov
push
mov
sub
add
imul
ret
pop
movsb
je
cmc
and
add
add
leave
mov
lods
pop
loope
and
add
push
mov
je
xchg
mov
pop
add
cmc
add
push
loop
add
pop
movsl
shl
test
int
add
inc
cmp
out
add
hlt
lahf
es
in
shlb
fistpl
hlt
jmp
ret
mov
cwtl
out
and
rcrb
mov
add
jbe
inc
and
adc
in
push
pop
mov
int
popa
in
jbe
gs
subb
add
bound
inc
add
sbb
adc
add
xor
mov
js
sbb
out
stos
add
rcrb
loopne
cmp
add
add
adc
or
flds
pop
decl
adc
inc
xchg
pop
xlat
fsubs
cmp
mov
inc
repz
repnz
scas
add
adc
sar
lret
add
push
inc
pop
adc
sti
test
out
mov
or
add
sub
out
imul
xchg
pop
mov
in
add
add
add
fmul
loop
test
nop
lock
ljmp
popf
or
jle
not
arpl
xchg
add
add
push
push
scas
mov
push
das
sti
les
pop
shr
sbbb
sub
repz
rcrb
lret
sub
add
mov
mov
xchg
pop
leave
or
lea
add
add
add
sarb
cmc
lods
push
mov
out
cmp
or
icebp
pop
lret
clc
xlat
lods
cmp
je
add
in
loope
mov
popf
shll
cwtl
je
add
adc
mov
ds
push
inc
mov
add
add
sub
aad
mov
xchg
add
add
jae
insl
les
jb
addb
stc
cmp
fidivrl
pop
nop
mov
fstl
stos
mov
cli
movsl
cmp
aam
int
fstpl
jae
xchg
pop
xor
fiadds
lock
jb
adc
fstpt
in
repz
xlat
repnz
or
mov
stos
add
pop
stc
aas
lret
movsb
cmp
insb
inc
add
mov
std
or
jne
stos
jno
adc
pop
xor
mov
add
pop
mov
jbe
push
add
mov
add
nop
loop
iret
bound
inc
fcmovnu
das
add
push
push
xor
push
aad
xor
bound
or
clc
cmp
mov
clc
cmp
push
and
stc
sub
dec
add
cli
es
add
int3
pop
mov
mov
push
dec
sub
in
dec
popa
repnz
pushf
in
add
or
fs
leave
mov
cmp
pop
loopne
sahf
sub
les
add
ret
int3
gs
jmp
loop
jl
clc
lock
fidivs
push
cmp
lock
push
jno
cwtl
stos
add
cld
mov
out
and
in
add
adc
mov
jl
and
fistl
xchg
dec
fildl
repz
or
cltd
push
pop
loopne
adc
ret
out
cmp
insl
loope
add
mov
mov
mov
mov
imul
jle
ret
lds
fldenv
sbb
data16
ja
das
int
add
mov
mulb
roll
jg
ficoml
inc
cltd
add
pop
xor
or
lea
push
rorl
mov
jg
cmpsl
add
sub
add
add
adc
or
jg
stos
add
pop
pop
aas
xchg
roll
sbb
outsb
outsb
sti
jle
outsb
js
jp
adc
jnp
xchg
dec
fsubrs
cwtl
sub
ret
add
xchg
cs
in
lret
add
xchg
add
in
in
xchg
xchg
test
lea
add
mov
add
jns
iret
mov
add
call
inc
outsl
push
fsubs
aas
pop
mov
add
cmp
hlt
data16
lds
inc
out
sub
sbb
int3
mov
mov
cmpsb
fistl
out
add
pop
or
aaa
mov
sbb
mov
lret
popf
in
pop
lds
out
push
mov
flds
sub
jle
xor
pop
xor
jmp
dec
enter
stos
add
add
sub
out
icebp
jl
scas
call
and
and
data16
pop
dec
and
add
int
movsb
leave
add
lds
sbb
rolb
add
das
sub
adc
sbb
jne
jb
mov
sti
xchg
out
in
jae
cli
push
xor
push
mov
cmpsb
jbe
out
push
add
in
xor
in
dec
add
cld
push
push
ja
pop
jg
fmuls
inc
jge
or
cmc
loope
mov
add
out
lods
cmp
lods
movsb
gs
inc
cmp
pop
push
in
add
mov
adc
movsb
add
ret
loope
js
sub
lods
add
pop
sbb
unpcklps
ret
sub
shrl
add
aam
add
filds
imul
cmc
pop
jnp
inc
stos
out
and
rcl
xchg
fwait
decb
dec
cmpsb
inc
dec
adc
mov
bound
lcall
daa
jns
cld
fistpl
sti
pop
ror
xor
adc
in
inc
cld
and
ljmp
shll
notb
outsb
dec
fistpl
jg
dec
xchg
mov
cmp
ret
enter
jo
loope
add
add
hlt
add
cmpsl
movsb
add
jbe
mov
pushf
testb
insb
add
add
cmp
xor
jnp
out
dec
push
in
push
inc
call
add
sar
xchg
sub
cmpsl
in
into
add
sti
sbb
sbb
ds
fwait
ret
inc
pop
xchg
mov
bound
or
mov
mov
in
js
xchg
sub
fsubrs
dec
fimull
aas
add
mul
pop
mov
negb
fwait
mov
jns
sahf
push
sahf
add
sar
push
negl
and
and
xchg
idivb
scas
bound
add
aas
and
data16
jns
jb
aaa
fwait
test
fldenv
subl
jle
mov
add
add
xorb
cmc
in
xchg
sub
popf
cwtl
dec
orl
xchg
divb
loopne,pn
adc
add
sbb
push
add
mov
mov
aam
push
mov
jns
xchg
cli
xlat
pushf
or
scas
add
mov
lds
out
add
push
lahf
stos
neg
jg
xchg
add
push
adc
test
inc
add
enter
cs
jae
inc
hlt
data16
adc
pop
mov
add
add
loopne
mov
pop
adc
dec
dec
test
ljmp
jne
push
movl
pop
cwtl
cltd
push
sar
rcrb
lea
ljmp
inc
repnz
inc
lahf
int3
subl
cmpsb
mov
insb
loopne
mov
cmp
cmpsl
jmp
mov
pop
add
ljmp
lock
or
fildl
dec
into
mov
icebp
scas
jge
add
bswap
lret
xchg
repnz
xchg
sar
and
mov
rolb
mov
mov
stos
add
mov
dec
add
in
je
and
adcb
add
mov
inc
insl
jl
pop
scas
sub
pop
xchg
add
add
lcall
sub
in
cmp
xor
cmp
jle
inc
inc
jp
add
pop
sub
fadds
mov
in
cwtl
dec
add
and
xchg
clc
stos
add
add
xchg
stc
jp
mov
jo
inc
add
int3
gs
loope
pop
pop
ds
mov
insb
clc
lahf
add
add
push
add
sub
aaa
add
add
mov
xchg
repz
fs
fstpl
sbb
mov
xchg
ret
cmp
out
test
push
fldenv
int3
add
jnp
repnz
add
lods
add
cltd
xchg
ja
add
mov
mov
addl
ja
mov
xchg
jb
mov
mov
push
sub
lret
and
subl
add
push
add
ret
add
leavew
shl
mov
inc
jb
in
and
lea
inc
or
jmp
mov
ret
add
mov
mov
pop
mov
out
sub
in
add
loopne
add
inc
loopne
repnz
aam
lea
adc
lods
pop
pop
inc
iret
cmp
jl
push
das
ss
push
sbb
test
pop
push
lods
push
int3
cmp
sub
and
popf
ret
sahf
adc
sbb
addl
aam
shrl
xchg
inc
add
dec
filds
push
cld
test
sub
lods
xor
xlat
push
stos
mov
rcrl
insl
xor
lret
mov
cwtl
aad
pop
cltd
out
add
sbb
cmp
mov
notl
es
sub
movsl
iret
pop
mov
dec
dec
cmp
add
in
scas
lods
sub
jle
fadd
in
popf
xchg
stos
and
lahf
inc
xchg
add
push
push
jnp
sti
xchg
mov
cmp
xor
jae
call
pop
cmp
sarb
in
push
fadds
out
push
sub
idivl
imul
add
inc
or
data16
sub
mov
dec
js
mov
scas
mov
inc
sarb
push
add
and
int
xchg
xchg
jno
inc
dec
out
mov
mov
add
jmp
inc
add
mov
popa
out
cmp
xor
or
cmpsb
mov
rcrb
add
add
movsb
mov
in
repnz
cli
mov
push
out
mov
add
scas
je
xchg
je
jecxz
arpl
or
add
imul
xor
ficoml
fs
fdiv
loope
xor
addr16
xchg
and
add
or
jg
jns
add
pop
subl
add
mov
xchg
fsubl
test
cmpsl
xchg
insb
push
cltd
push
add
adc
loope
push
ja
outsb
add
add
mov
sahf
sbb
divl
incb
mov
push
push
movsb
jmp
out
sub
push
cmp
divb
dec
ret
adc
jns
sub
xchg
xor
lods
add
jg
cld
test
fs
or
aaa
or
daa
jb
sti
fisubrl
testl
mov
adc
hlt
or
mov
test
push
mov
in
packuswb
pop
inc
imul
mov
add
add
fsubrs
jg
add
fistpl
pop
add
pop
test
sub
leave
pop
add
pop
jecxz
mov
sbb
push
cmp
popa
fistl
xor
sub
dec
inc
add
sub
roll
adc
xchg
cwtl
es
cld
add
ss
andl
sbb
dec
push
sub
adc
adc
cmc
or
ds
std
or
add
lds
dec
add
cmpsl
ljmp
out
mov
lret
xchg
mov
or
mov
jg
add
add
xchg
sbbl
add
mov
add
inc
push
push
add
lret
ds
adc
repnz
xchg
push
popa
push
add
xchg
call
or
or
and
mov
mov
push
sub
loop
add
out
mov
pop
and
cwtl
scas
cwtl
sub
cld
jge
pushf
push
pusha
inc
stos
cmpsl
pop
loop
clc
add
xor
sbb
add
faddp
lods
cmp
subw
add
add
xchg
and
ret
add
fsubs
add
xor
lahf
inc
movsl
push
xchg
dec
push
jmp
mov
or
pop
hlt
add
dec
jle
add
mov
add
xchg
shrb
xchg
stos
cwtl
add
loope
aas
add
pop
push
aaa
dec
inc
aaa
xor
xor
fisubs
cmp
pop
push
jne
data16
cli
pop
cmp
add
jl
pop
add
add
jne
adc
push
jae
fdivs
and
push
cmpsl
mov
test
stos
fisubl
repnz
mov
sub
push
mov
loop
add
xor
adc
cmp
add
clc
dec
or
je
ds
rcl
push
stos
fildl
int3
push
or
adc
sub
add
xor
mov
sbbl
add
pop
stos
fdivs
in
inc
xchg
nop
xchg
sbb
inc
inc
mov
sbb
in
xchg
fisttps
cli
jne
and
in
fisubl
add
xchg
mov
mov
js
cwtl
nop
jno
stc
int3
loopne
sub
lods
pop
rolb
scas
testl
aaa
test
sbb
shrl
xor
ds
inc
imul
mov
fstl
mov
jb
inc
adc
mov
push
sahf
lret
fs
hlt
and
aaa
sbb
int
cmp
add
sub
in
push
cld
ret
dec
inc
push
sti
inc
cmp
pop
and
mov
fstps
sahf
ljmp
mov
fcomp
add
pushf
and
add
cmp
inc
out
addr16
clc
incb
xchg
push
pop
dec
cmp
rclb
push
repnz
xchg
cmc
or
ljmp
fwait
push
roll
add
push
dec
jecxz
xlat
cld
jp
xchg
and
test
add
add
jbe
repnz
adc
pop
out
imul
pop
int3
jg
stc
mov
mov
dec
push
xor
push
inc
scas
cli
mov
cld
jp
fldt
dec
push
jge
dec
test
add
cwtl
test
mov
es
add
dec
inc
inc
inc
aad
lret
xor
add
sub
mov
jae
dec
or
fdivp
shrl
lods
add
add
cmp
out
sbb
mov
lods
dec
jno
add
pop
mov
push
xchg
inc
add
stos
pop
adc
add
add
ss
pop
pop
out
pop
cmp
sbb
jmp
add
std
add
scas
push
xor
rclb
mov
add
out
pop
dec
ljmp
enter
mov
jae
sbb
ja
stos
hlt
movsl
cmpsl
and
xchg
lods
inc
push
jge
call
mov
pushf
bound
test
ds
leave
ret
adc
mov
add
pop
shll
add
add
and
push
sub
sub
lea
jo
movsb
dec
lcall
stc
xor
jnp
jb
push
mov
addl
add
cmpsl
pop
mov
xchg
out
xor
jg
sbb
into
arpl
inc
test
add
pop
mov
int
cmp
das
cmpsb
lcall
adc
add
fwait
testl
dec
sub
push
add
jp
dec
dec
push
xor
fs
orb
mov
cli
enter
and
jp
rcrb
add
ficoml
xchg
jae
rolb
xlat
xor
in
add
add
divl
and
lahf
in
sub
inc
mov
sbb
cs
fsubrs
sub
mov
mov
mov
aam
enter
mov
add
push
adc
add
sub
adc
fcomps
test
push
ds
add
mov
pusha
lahf
cmp
sub
and
movsl
rol
jo
es
adc
loope
ja
push
add
add
sahf
add
cltd
add
and
add
mul
addr16
adc
in
add
dec
add
adc
add
cmp
fsubrs
js
int
add
mov
imul
insb
mov
add
xor
jecxz
and
cmp
es
cmpl
add
mov
mov
dec
add
cmp
xchg
push
pop
mov
sbb
movsb
fsubs
cmp
cmp
cs
sub
shrl
add
jg
push
outsb
push
mov
test
add
mov
ret
pop
add
in
lret
jg
test
jecxz
sub
adcl
pop
rolb
test
jno
add
sub
cwtl
push
pop
pop
sub
addr16
xor
out
xlat
sbb
in
mov
push
mov
les
and
pop
sbb
or
dec
fstpt
sub
cmp
insl
push
dec
pop
clc
cmp
cmpsl
nop
lods
jp
jno
iret
add
mov
add
fildll
jecxz
add
sti
push
add
pop
xor
into
mov
popa
stos
add
cltd
out
dec
imul
iret
add
mov
int
or
mov
rolb
fadds
sahf
lahf
shl
add
sub
sbbl
into
jnp
mov
pop
lds
gs
lods
orl
dec
mov
movsb
cli
and
addr16
jno
cmpsb
cmp
jecxz
add
lcall
jcxz
stos
add
dec
add
and
lret
in
add
cmp
add
jbe
sub
mov
add
loopne
add
adc
and
stos
mov
fdivrl
cli
or
arpl
int3
std
test
lea
add
xchg
movsb
add
sbb
mov
mov
int3
imul
add
pop
cmp
xor
adc
xor
movsl
dec
and
pop
inc
add
iret
les
add
add
push
xchg
or
push
std
iret
push
or
cmpsl
add
sub
pop
loopne
add
sbb
in
xchg
xor
mov
shlb
rcrb
aas
push
mov
loope
adc
mov
cmp
arpl
lret
mov
outsb
add
add
sbb
adc
arpl
mov
leave
testl
xchg
sub
push
aaa
lahf
add
add
jns
or
outsb
push
dec
pop
or
sub
leave
pop
popa
dec
cli
xchg
fldenv
in
int3
lret
in
add
add
add
addl
pop
xchg
lds
fsubrs
xchg
push
mov
xchg
fimuls
loopne
mov
movsl
add
and
push
jg,pn
add
sub
adc
das
mov
and
lods
jle
mov
arpl
xor
mov
sbb
aam
sub
sbb
out
inc
popf
stos
lret
out
dec
mov
das
and
cmpsb
out
dec
adcb
adc
mov
mov
add
mov
aam
dec
push
jmp
mov
add
or
add
fisttpl
add
mov
pop
add
enter
icebp
shl
sub
lcall
fwait
adc
cwtl
jbe
stc
xchg
mov
push
sbb
add
fwait
stc
bound
xchg
jbe
push
js
clc
mov
std
sbb
adc
dec
inc
scas
push
mov
sahf
jge
arpl
inc
je
cmpsb
roll
jo
and
fldl
jge
rol
cltd
cltd
push
sub
sub
cmp
and
inc
nop
xor
push
mov
xchg
mov
stos
or
aaa
mov
adc
hlt
iret
dec
leave
out
sub
icebp
in
cwtl
in
movsb
int
pop
mov
int
fwait
mov
add
std
add
pop
mov
mov
mov
lret
cmpsl
movsb
mov
je
pop
add
push
lods
mov
sahf
xchg
push
call
cmp
insb
push
fisubs
sub
lret
js
scas
xor
mov
idivl
scas
lret
cmc
in
adc
mov
add
cmpsb
push
sahf
pop
add
cmp
mov
dec
inc
or
mov
rcr
sub
xchg
mov
add
in
popf
add
scas
add
dec
mov
cmc
inc
push
mov
xchg
fs
popa
ret
jl
faddl
orl
outsl
jle
pop
push
fsubrp
stc
aad
add
arpl
mov
lahf
xchg
add
out
push
dec
xchg
xor
roll
call
shr
rorl
push
aad
imul
sti
pop
inc
dec
xlat
les
out
lods
shr
jno
dec
stos
aad
fiaddl
inc
sbb
lret
xchg
xchg
lods
gs
fisttps
icebp
mov
ljmp
movsl
fidivs
mov
jne
mov
mov
rol
mov
sbb
add
xor
mov
jge
mov
push
test
es
mov
add
cmovge
aas
pop
fcmove
loopne
loope
push
pop
add
push
add
fsqrt
sub
hlt
orb
cmp
repz
rcll
mov
push
inc
imul
lret
cwtl
and
xchg
imul
in
test
dec
movsb
pop
iret
mov
add
popa
mov
xchg
add
lods
in
test
data16
das
and
mull
push
scas
add
xchg
xchg
and
xchg
xor
rolb
sti
into
enter
aad
lret
pop
dec
jne
xchg
jg
sti
add
jbe
test
jmp
cmp
and
les
cli
dec
mov
in
lds
leave
js
jp
adc
mov
data16
push
lahf
mov
lods
add
ljmp
iret
inc
movsl
mov
out
pop
push
xor
adc
add
fnclex
stc
xchg
inc
mov
sub
dec
inc
cmpsl
sub
add
out
lret
sarb
or
add
adc
bound
and
pop
icebp
push
jae
inc
arpl
adc
xchg
aas
arpl
fmuls
fdivrl
js
ss
mov
mov
stos
imul
sub
fisubl
add
out
or
mov
xchg
add
int
fiaddl
lret
add
adc
push
sub
push
popl
inc
je
add
or
sub
add
add
add
and
jmp
inc
dec
add
incb
cld
iret
add
add
adc
cmp
scas
xchg
outsb
orl
xchg
mov
cmp
ss
jbe
aam
sub
cmp
push
sarb
push
cltd
rcll
jno
arpl
cmp
pusha
mov
and
clc
roll
add
add
int
push
add
sbb
mov
cmp
add
fidivrl
add
insl
pop
sub
add
jb
inc
ret
jns
mov
xor
aam
scas
and
std
xchg
pop
push
fs
stc
out
out
sub
or
inc
jae
add
add
cmp
in
jns
andl
imul
cs
add
jmp
subb
insb
adc
and
pusha
add
or
push
repnz
mov
testb
pop
roll
repz
inc
shl
cltd
cli
cli
sbb
add
das
popf
jbe
add
mov
mov
aam
add
fnstsw
lret
insb
mov
pop
add
or
fldcw
dec
cmp
push
addr16
dec
and
cmc
jle
lods
lock
sarl
sub
dec
mov
add
jae
aas
cmpsb
jae
add
add
ret
push
pop
loop
addl
in
xlat
add
push
pop
push
add
insb
dec
out
jg
sti
xchg
or
popf
push
arpl
test
mov
pop
cwtl
test
bound
lret
sbb
and
cwtl
inc
mov
ja
in
or
sahf
add
enter
mov
roll
pop
out
mov
inc
cmp
xchg
fdivl
mov
outsb
add
ret
sarl
cli
add
mov
jecxz
add
clc
sbb
cltd
push
jmp
jge
inc
sub
add
lods
add
xor
mov
mov
dec
add
adc
shl
push
out
ret
sbb
test
ret
mov
jecxz
mov
or
add
xchg
sub
lcall
or
loope
add
push
or
sbb
enter
xchg
mov
jbe
cmp
in
xchg
push
rcrb
js
cmp
add
ds
lret
cli
nop
add
aad
cmp
cmpsb
rol
das
mov
jge
mov
add
imull
add
push
add
cmpsb
out
add
xchg
sub
mov
int
test
inc
and
add
jo
les
dec
aad
leave
roll
addr16
sahf
mov
push
mov
add
cmp
add
flds
aam
add
sbb
fistpll
loop
sub
sbb
and
pop
add
iret
lds
add
pusha
imul
add
mov
add
sub
xor
jo
fcmovnb
pop
arpl
stos
and
cmpl
or
in
out
fadds
adc
push
inc
mov
jmp
mov
sahf
adc
outsb
aaa
divb
jns
add
les
fsubs
add
mov
and
cmp
testl
sub
push
cltd
cmp
mov
push
cli
pop
xorb
cmpsl
gs
sbb
xchg
jnp
dec
sub
or
add
cmp
xchg
add
pop
add
jecxz
fidivrs
jno
pop
jbe
and
aaa
subl
inc
aam
aam
fidivrl
icebp
add
xor
lahf
sbb
cwtl
add
xor
xor
mov
ja
repz
xchg
mov
inc
out
stos
rcrl
mov
ss
jl,pn
add
pop
mov
test
fstps
insb
imul
sar
in
leave
add
rolb
idivb
xlat
loope
or
xchg
mov
mov
and
cmp
imul
and
adc
adc
xchg
push
mov
xorb
pop
jge
fisttpl
clc
xchg
add
out
xchg
std
inc
push
cld
add
fwait
je
into
push
add
fwait
sub
mov
repz
push
lret
hlt
sbb
sub
add
adc
jbe
add
adc
adc
sbb
cmp
cmp
add
xchg
das
add
cmpsl
jmp
sbb
adcl
sbb
out
add
fimull
mov
or
mov
dec
incb
cld
xor
cli
and
iret
and
out
movsl
movb
prefetch
nop
add
mov
push
jmp
outsl
inc
xor
pop
aam
cmp
ficompl
jnp
sti
or
cwtl
stc
xchg
add
in
inc
loope
vpandn
aas
add
jge
les
adcl
lret
nop
inc
jl
aas
add
enter
shr
pop
in
aas
cmp
int
xor
movsb
or
mov
dec
sbb
adc
jbe
mov
add
jecxz
dec
sbbb
adc
pop
inc
push
pop
or
mov
add
in
xor
add
and
ss
movsl
pop
cbtw
sub
sarb
test
and
xorl
mov
mov
pxor
int3
add
xchg
add
mov
cmp
jnp
mov
sbb
cmp
dec
sbb
out
lods
and
icebp
notl
or
imul
dec
sub
push
add
jl
sub
add
cmp
cmpsb
imulb
xor
sahf
mov
lods
add
push
xchg
lock
dec
sarl
ljmp
mov
add
pop
push
in
pop
add
adc
and
fwait
cmpsb
sub
add
sub
inc
out
inc
pop
mov
adc
sbb
push
push
add
negl
mov
insl
scas
fidivrs
add
cmc
pop
mov
inc
add
sarb
jmp
sar
pop
and
jns
nop
lret
sahf
push
and
or
lods
jp
xchg
xor
ret
xchg
in
xor
add
jb
js
mov
faddl
nop
jg
pusha
jae
adc
jmp
add
in
ljmp
push
jae
imull
sbb
in
mov
add
mov
cmp
or
repz
popa
popa
stos
repnz
inc
dec
mov
fadds
push
lcall
mov
fstl
imul
add
sub
js
cmc
mov
jb
mov
xlat
pop
xchg
cmp
push
aas
scas
adc
add
inc
dec
add
popf
icebp
test
movsl
add
stos
add
mov
add
test
dec
add
mov
add
dec
ret
sbb
dec
fmuls
xchg
ds
mov
jo
mov
jb
arpl
or
add
lret
add
ds
pop
add
cmpb
add
push
jbe
js
push
es
adc
imul
insl
hlt
xchg
hlt
and
and
mov
ss
dec
enter
add
pop
cmc
pop
imul
lret
add
out
inc
jno
push
add
js
add
dec
mov
add
add
popf
rcll
jge
in
xchg
mov
add
jno
or
cmp
fxch
inc
pop
jne
imul
clc
adc
push
add
shll
fwait
stc
add
add
push
bound
jne
sbb
add
mov
add
cmpsl
add
faddl
xor
std
push
in
sarb
or
lock
push
lods
dec
lock
cmp
xor
pop
dec
into
fsts
mov
pop
imul
mov
inc
lret
inc
mov
repnz
push
xor
int
mov
movsl
ror
fbld
mov
dec
sub
aam
pop
xchg
jno
in
outsb
add
fsubrl
outsb
dec
xchg
sbb
insl
mov
add
adc
sub
mov
pusha
lahf
mov
arpl
xchg
jnp
jp
movsb
add
push
fucomi
subl
or
jno
mov
cmp
int3
add
mov
roll
xor
inc
popf
push
pop
sub
movsl
loop
add
xor
push
cmc
shll
jb
bnd
cmp
stos
fs
cltd
daa
add
xchg
mov
out
mov
pop
icebp
lahf
add
xchg
jbe
ret
add
test
iret
mov
sbb
jb
mov
dec
xchg
stos
jns
sub
and
imul
cmp
push
add
sarb
scas
xor
rcll
mov
mov
xchg
clc
mov
fs
push
jno
add
and
sub
xor
test
adc
das
jle
ljmp
pop
xor
push
rcl
add
inc
jne
and
cs
mov
cld
int
mov
aad
add
xlat
adc
add
fcmovnbe
add
push
or
scas
pop
inc
outsb
adc
push
sub
pop
add
cwtl
pusha
pop
in
fidivl
add
ljmp
rorl
and
das
add
push
add
mov
movsb
add
imul
jle
push
cmpsl
iret
and
lret
pop
cmp
mov
and
lahf
jbe
call
movl
ret
adc
push
movsb
pop
add
add
je
mov
jne
jmp
add
mov
mov
mov
cmp
and
inc
out
adc
in
push
pushf
jnp
test
jp
inc
jp
push
in
sbb
or
scas
je
clc
loop
or
out
add
jmp
arpl
jecxz
push
add
add
bound
add
dec
mov
icebp
cwtl
add
pop
rorb
pop
cmpsl
movsl
jmp
sub
int3
or
xorb
xchg
data16
out
or
cmp
rolb
pop
mov
add
call
sbb
out
add
push
subl
outsl
pusha
pusha
xchg
lret
filds
sub
decl
jne
aam
jg
mov
addb
push
sti
dec
add
add
or
popf
add
adc
add
and
jecxz
add
imul
lock
adc
add
push
mov
mov
xor
fidivrl
add
push
mov
push
sub
stos
lahf
push
dec
sub
add
xor
imul
lock
push
jecxz
add
push
push
lods
cmp
int
xchg
add
insl
pop
jbe
notl
mov
xchg
fdivrs
add
add
leave
or
imul
add
add
xor
add
popf
mov
lret
sbb
add
pop
fdivrp
cli
call
cmpsb
imul
inc
pop
icebp
xchg
xchg
testb
lahf
shll
fsubl
test
cmpsl
rorb
add
aas
cltd
xchg
add
lods
mov
cld
test
pusha
jne
dec
add
lcall
mov
pop
add
pop
cmp
outsl
add
fmuls
xchg
add
inc
mov
and
out
cli
cmpsl
add
sbb
outsb
lock
lods
add
repnz
sbb
imul
rcrl
add
loop
jl
adc
mov
mov
xor
add
add
push
leave
shrl
pop
add
dec
jmp
enter
shll
and
cmp
mov
or
incl
inc
add
and
pushf
lods
xchg
adc
xor
add
in
into
xchg
movsb
std
in
cwtl
rorl
jae
aad
sub
movl
mov
inc
push
mov
or
jg
gs
pop
add
and
jmp
jmp
and
lea
mov
sub
add
jae
xor
sbb
lahf
inc
jnp
movb
mov
xchg
popl
nop
loop
popf
xor
cmp
adc
or
pop
xchg
ret
test
mov
dec
addr16
add
add
or
cmpsl
inc
out
mov
add
xchg
add
jecxz
out
fucomp
xor
das
cmp
addr16
push
pop
xlat
clc
cs
ds
fcmovbe
add
and
jnp
add
jno
mov
in
push
jge
xor
add
xchg
int
popa
sar
mov
stos
xor
sbb
cmp
xchg
mov
test
jae
mov
pop
cmp
pushf
add
add
sahf
add
push
mov
ficoms
cltd
fsubp
add
sub
mov
and
fdivs
add
dec
and
add
inc
rcrb
out
int
pop
or
add
imul
cmp
setp
mov
jbe
cld
pop
out
dec
je
jns
push
sub
js
mov
jp
pop
fimull
fisttpll
subl
mov
cli
xorl
add
sub
cltd
xchg
dec
ljmp
fildl
sbb
fincstp
xlat
inc
insb
loop
and
and
aaa
xchg
in
add
repnz
nop
add
push
mov
aaa
cmp
pushf
xor
or
xchg
arpl
cmp
dec
test
loop
mov
xor
les
jae
xchg
jl
add
adc
push
add
jo
xchg
rorb
mov
outsb
shlb
int
popa
mov
xor
add
add
imul
mov
pusha
stos
xchg
and
shrl
add
movsl
pop
pop
sti
ljmp
sub
inc
dec
adc
adc
mov
xor
push
addb
add
add
dec
pop
dec
lods
test
sbb
add
sub
je
add
and
dec
mov
int3
push
adc
jbe,pt
xchg
or
jbe
daa
cmpsb
shll
fbstp
cmc
add
aas
fsubrs
add
add
inc
pop
add
mov
mov
insb
jp
cltd
add
xor
add
add
pop
icebp
and
das
jns
xor
mov
enter
and
lods
sub
aad
mov
test
and
pop
sub
push
xchg
or
and
inc
add
imul
jo
enter
rclb
enter
dec
lret
insl
clc
mov
cmp
aas
push
call
fcmovne
clc
dec
mov
pop
loope
push
xchg
leave
pop
mov
add
mov
imul
jnp
xchg
push
push
loopne
cmp
or
sbb
adc
and
push
add
repz
xchg
jae
test
dec
mov
sbb
dec
loopne
movsb
fcmovu
or
stc
subl
xor
push
add
inc
addl
cmp
mov
iret
arpl
dec
mov
je
add
mov
lret
add
in
pop
xchg
push
test
js
mov
faddl
add
jbe
fwait
mov
movsb
jb
or
or
mov
add
bound
jmp
pusha
push
loop
sbb
into
push
and
inc
test
stc
cld
add
roll
xor
fwait
mov
ss
xchg
stos
mov
out
jp
vucomiss
push
mov
add
cmc
xor
adc
or
es
repz
dec
mov
out
mov
leave
jmp
scas
enter
pop
pop
and
leave
sahf
sub
push
mov
and
jbe
into
add
test
adc
cmpsl
loop
inc
and
dec
add
aas
xchg
pop
jne
lods
add
pop
pop
add
add
or
or
mov
lods
push
in
add
sub
or
jno
out
ss
cmp
jg
or
adc
out
add
xor
inc
inc
push
add
test
push
add
movsl
aas
mov
dec
rcl
cmp
jne
add
mov
orl
data16
cmpsl
xchg
mov
leave
pop
cmp
add
clc
add
sub
lret
adc
sub
gs
repz
cmp
repz
movsb
pop
jne
les
add
push
mov
sbb
out
addb
add
std
jb,pt
and
push
lret
add
pop
in
sbb
xor
aam
or
sub
insb
in
je
xor
add
push
imul
das
mov
add
adcb
call
push
fisttps
cmp
aam
push
or
fucomi
push
lret
add
dec
lcall
subl
push
aas
pop
in
daa
mov
addr16
mov
outsb
mov
in
fdivrp
imul
push
push
dec
or
sti
sbb
dec
mov
mov
stos
push
cmpsl
sub
sub
outsl
enter
mov
push
pushf
pop
xor
cmp
xor
les
lods
mov
jae
add
outsl
sub
into
sbb
push
and
leave
into
in
add
push
lret
add
add
add
xchg
adc
arpl
scas
xor
mov
and
sub
loopne
and
out
mov
add
cmp
xchg
cmp
jae
mov
ljmp
mov
jle
orb
xor
lock
or
and
push
xor
nop
add
syscall
addb
bound
int3
xchg
out
pushf
sub
lock
cmp
mov
mov
push
push
pusha
sub
pop
push
dec
push
scas
xor
data16
add
xchg
cmp
add
je
sub
nop
add
mov
test
push
jecxz
add
or
or
inc
jg
outsb
and
inc
ds
mov
cmpsb
pop
das
test
decb
movsl
jg
cmp
sub
fists
add
xacquire
add
cmp
mov
pop
test
mov
cld
stos
mov
pop
andl
pop
movsb
mov
negl
xor
add
push
addr16
add
scas
fistl
xor
or
sub
dec
push
lds
loope
pop
lock
imul
mov
sti
mov
sbb
xor
jmp
sub
js
sub
xchg
movl
add
jae
xchg
aaa
data16
jbe
fiadds
push
ja
hlt
push
xor
add
push
popa
out
lcall
je
bound
add
mov
outsl
testb
loop
adc
pop
popf
mov
addr16
add
jae
cmpsb
add
ret
stc
faddp
jno
subb
aad
add
inc
popl
in
sub
inc
add
inc
outsl
jp
imul
icebp
mov
pop
xlat
pusha
inc
in
mov
push
stc
add
mov
push
adc
sarb
add
or
ret
arpl
or
dec
fistpl
dec
add
cli
push
add
test
add
or
dec
xchg
insb
loope
xchg
rcrb
dec
call
add
jg
and
add
add
in
add
mov
out
add
fcomps
repnz
insl
sar
cmc
dec
ret
jnp
add
in
mov
add
xor
in
add
dec
mov
xlat
sti
add
enter
jo
push
call
popa
loop
int
aam
cmpsb
mov
adc
add
sub
xchg
repnz
int3
add
cltd
jns
xchg
imul
imul
test
dec
xor
xor
mov
pop
neg
loope
in
dec
dec
fisttps
lcall
gs
jmp
rorb
dec
xor
push
add
rorb
cs
outsl
push
daa
in
mov
cmp
scas
adc
into
mov
sub
aad
enter
cli
lock
mov
lret
jmp
add
pushf
inc
aad
adc
cmpb
push
pop
movsl
loope
add
push
aas
nop
leave
dec
mov
dec
cmp
fldl
jns
test
test
fmuls
and
daa
sbb
leave
addr16
adc
add
das
mov
push
push
adc
add
inc
add
mov
or
fs
pop
add
inc
jae
mov
lret
jl
xchg
inc
cmp
scas
push
insl
add
jb
xchg
xchg
and
ret
inc
arpl
cmp
mov
stos
and
jno
add
lcall
or
hlt
add
rclb
dec
movsb
iret
bound
and
mov
fninit
cmc
push
jne
inc
mov
in
ljmp
add
add
pop
ficomps
cli
pop
add
in
push
clc
idiv
lods
mulb
push
cwtl
adc
adc
mov
add
pusha
ds
cltd
notb
jg
sbb
xor
jecxz
add
inc
jecxz
sbb
jg
mov
sbb
dec
movntps
sbb
add
inc
jl
andb
fsubrs
ret
lds
push
insl
movb
pop
inc
or
or
test
add
dec
sub
xchg
or
mov
test
leave
orl
dec
repz
stos
ss
add
pop
cltd
mov
add
stc
add
data16
sub
jp
in
mull
xchg
xchg
ret
add
sti
imul
and
inc
push
loope
add
adc
sub
ja
pop
sbb
fdivrl
das
aad
or
jo
test
add
mov
loop
inc
bound
test
push
add
std
cmp
cwtl
jnp
dec
add
jbe
bound
add
int3
imul
pop
push
fdivl
add
repz
cli
or
mov
mov
cltd
cmp
mov
jmp
cmp
xor
bound
push
push
add
fmull
aam
sbb
cmp
iret
fwait
add
cmp
add
clc
movsl
fnstsw
cmp
out
out
mov
icebp
jle
imul
add
mov
add
es
ds
add
aaa
sub
xchg
mov
sti
aas
jnp
add
xchg
fsubl
scas
inc
out
scas
testb
add
in
or
idivb
push
xor
mov
fnsave
add
mov
mov
add
add
inc
xchg
jno
cwtl
clc
mov
pop
push
sub
add
sub
into
clc
push
sbb
pop
mov
sbb
mov
xor
adc
add
mov
push
push
pop
sub
dec
push
cmp
add
adc
test
test
stos
pop
cmp
inc
adc
or
mov
sti
aad
out
push
mov
clc
les
and
test
addb
out
cmp
out
push
add
pop
jecxz
jp
xchg
push
lock
iret
add
out
xor
inc
cmpb
mov
push
sub
pop
add
sbb
inc
inc
ret
call
pop
dec
xchg
dec
cmp
add
push
and
xlat
aas
mov
inc
movsb
iret
add
add
sub
push
sub
in
or
jmp
das
pop
and
lret
lret
ficomps
xchg
dec
mov
bound
sub
cmp
xchg
stc
xor
test
add
pop
rolb
stos
add
pop
lods
push
jp
xor
fnstsw
jg
popf
lret
incl
pop
clc
cmpsl
push
xchg
test
pop
pop
adc
ret
add
sub
call
mov
cmp
add
scas
je
pop
add
cmc
lcall
xchg
lahf
add
sbb
movsb
mov
jns
pusha
push
jbe
mov
test
push
cmpsb
lret
inc
frstor
fisubl
arpl
push
int
sbb
pusha
or
lods
add
inc
add
sbb
int
cmp
add
cs
add
xchg
inc
nop
insl
mov
loop
sbb
icebp
scas
sub
dec
add
and
test
aas
sub
sbb
adc
xchg
xchg
jmp
loope
mov
insb
mov
or
push
sbb
pop
xchg
imul
add
xchg
add
jp
adc
stc
and
pop
ja
xchg
mov
cmpsb
fidivl
adc
shrb
fldenv
shll
add
arpl
pop
bound
sub
aad
scas
stos
and
hlt
xchg
cltd
shll
jp
mov
lods
or
add
int
push
daa
pop
add
clc
imul
das
cmp
add
daa
das
or
dec
ja
or
bound
jmp
pop
lds
xchg
cmp
sahf
fucomp
cmpsb
or
xor
add
mov
movsl
sbb
xor
loope
add
nop
insb
imul
inc
repnz
flds
shrl
jb
lret
stc
cmpb
dec
jmp
and
and
sbb
or
cmp
out
add
pushf
mov
sub
add
out
xchg
pop
and
add
jecxz
rcll
jmp
insb
es
add
or
es
dec
int3
rorl
fmuls
popf
inc
das
or
stc
orb
insb
mov
pop
sub
push
adc
sub
xor
or
in
jp
sarl
hlt
sbbb
fbstp
cmp
cli
stos
push
jp
movb
cmp
add
and
mov
inc
or
jnp
add
js
mov
add
xchg
lods
push
lods
and
scas
pop
scas
movl
add
or
jns
add
jns
add
inc
loopne
mov
adc
mov
ret
xchg
and
stc
les
stc
hlt
outsb
in
test
rcll
xchg
icebp
mov
add
add
mulb
sub
xchg
cmp
stc
iret
add
mov
inc
rclb
sbb
lret
adc
not
cli
iret
cmp
mov
pop
imul
mov
out
test
fcmovnb
mov
and
les
mov
adc
and
into
mov
add
js
js
into
push
insb
fdivs
push
add
add
add
rorl
lret
jno
add
filds
mov
scas
aaa
dec
sbb
fisubs
stos
fisttps
int
push
add
add
or
add
mov
and
movd
pop
cmpsb
clc
cwtl
pop
add
cli
add
es
dec
mov
sub
fucomp
mov
mov
add
adc
add
cmpsb
cmp
and
and
mov
pop
dec
or
loop
ljmp
mov
add
lcall
les
fsts
cld
aas
or
sahf
cmp
filds
xchg
into
inc
push
fs
cmp
inc
lahf
dec
pop
xchg
cld
call
adc
cld
in
mov
add
insl
pushf
ret
xor
jne
in
add
add
jno
fistl
jmp
xor
shlb
mov
add
bound
mov
xchg
lea
add
dec
ja
jo
sti
add
lahf
les
inc
add
xor
iret
xor
lods
push
sub
add
sbb
mov
add
add
and
add
mov
incl
pop
cmp
dec
dec
popa
sbb
nop
add
lods
test
fcmovne
or
jp
adc
stos
add
and
jno
mov
pushf
add
loope
pushf
mov
adc
xor
cmpsb
jnp
mov
sbb
ret
in
mov
fwait
cld
jmp
loope
in
inc
jbe
and
dec
fcmovu
dec
daa
lock
pop
rolb
out
lods
mov
rcrb
lea
add
lcall
jge
adcb
jae
mov
jo
mov
push
sbb
es
push
jb
xchg
fld
dec
add
add
popf
adc
call
cwtl
test
jg
test
add
sti
call
mov
jle
ljmp
dec
mov
xor
add
je
xor
add
mov
hlt
out
mov
push
in
jb
pop
adc
add
add
aaa
push
test
jmp
sti
add
mov
adc
xor
jp
add
push
out
sbb
ret
push
insl
test
and
test
sarl
rcr
outsl
lret
js
add
add
mov
xchg
push
push
fucomp
pop
push
popf
fs
mov
std
sub
xchg
lcall
push
ljmp
in
rorb
leave
sub
push
cmp
das
gs
adc
mov
sbb
push
jns
or
add
aad
and
imul
jmp
in
cmc
mov
sti
lds
lret
or
mov
mov
or
subb
mov
and
xchg
lods
les
add
mov
push
dec
repz
mov
scas
xchg
sbb
add
jecxz
mov
scas
xchg
adc
sub
inc
fisubl
push
jge
clc
cmp
add
mov
lock
fsubrl
dec
aad
mov
push
out
mov
test
sbb
xchg
fistpll
cld
push
mov
cmp
add
ss
push
add
jmp
cmp
dec
rolb
enter
rcrl
inc
in
inc
xor
rolb
xor
ja
adc
add
data16
jg
sbb
mov
xchg
bound
popf
fs
mov
add
filds
rclb
dec
sti
loope
clc
jo
xor
jl
xchg
arpl
sub
roll
aaa
insb
outsl
xchg
xchg
int3
cmp
inc
or
pop
mov
add
stos
push
jecxz
add
add
jecxz
jae
scas
or
add
cmpsl
lahf
daa
mov
adc
adc
xor
repnz
add
in
ljmp
xchg
gs
dec
inc
xor
arpl
push
ss
lods
rclb
fwait
mov
iret
mov
cmpsl
jne
fnstcw
shl
and
mov
orl
pop
inc
cmp
roll
inc
sbb
mov
cmpsl
sahf
outsl
loop
dec
cmp
mov
mov
daa
movsl
jns
add
dec
cmp
add
mov
in
xchg
mov
dec
inc
inc
fdivr
aaa
adc
shll
popa
nop
mov
lods
lahf
in
mov
xchg
lret
pop
dec
cltd
stos
add
lods
pop
bswap
adc
ret
movsb
fldl
fcmovb
add
jbe
testb
push
mov
test
mov
loopne
insl
adc
lds
add
mov
rolb
push
xor
mov
pusha
add
sub
outsb
add
sub
lret
lcall
add
add
aas
add
add
mov
add
lret
loope
rcll
movsb
cmp
xchg
xchg
or
pop
add
outsl
into
or
repz
jl
adc
inc
movsl
mov
cmp
xchg
jle
imul
jb
repz
add
xor
js
test
roll
jb
pop
testb
cmp
mov
push
jl
dec
in
cli
add
sbb
or
mov
add
add
adcl
nop
add
pop
pop
call
bound
cmpsb
add
popf
es
movsl
add
xchg
repz
pop
dec
mov
xchg
dec
xor
adc
jle
add
inc
fs
negb
xchg
xchg
out
push
add
enter
jl
ss
cmp
pop
mov
fs
mov
loope
add
xchg
adc
or
xchg
stc
aaa
mov
das
xor
cmp
inc
mov
add
add
add
cmp
mov
call
sar
add
mov
jnp
je
add
rcl
inc
jl
loope
clc
test
lcall
pop
xor
imul
mov
and
out
push
or
sbb
dec
and
data16
add
jo
andl
lcall
test
bound
add
add
add
pop
pop
add
xchg
andb
test
push
cmp
pop
hlt
add
popl
popf
movsb
mull
add
add
movsb
push
roll
add
add
add
aaa
aam
mov
mov
imul
adc
test
mov
cmpsb
pop
adc
pop
movsb
div
out
mov
lea
idivl
cmp
jno
pop
mov
push
cmp
sub
mov
add
insb
xor
jns
mov
add
insl
mov
jne
pop
mov
daa
fcompp
stc
es
pop
jae
mov
and
mov
jno
cmp
in
in
pop
aas
and
adcb
lea
scas
xor
push
add
ss
js
sti
mov
enter
int
mov
add
stos
movsb
std
xor
push
add
xchg
inc
mov
jbe
add
aaa
loopw
add
jnp
sbb
push
add
xlat
notb
roll
pusha
dec
add
popa
add
mov
push
or
add
jo
add
adc
and
jle
movsl
sbb
mov
mov
fwait
loop
add
pushf
push
adc
dec
inc
sbb
in
add
movsl
stos
push
mov
cmp
cmc
cmp
pop
ja
add
mov
sbb
pop
adc
cmp
lret
cmp
push
jg
test
test
incl
mov
cmp
shr
out
inc
and
push
stc
sub
les
clc
cmp
push
hlt
inc
pusha
faddl
mov
in
aad
add
out
and
inc
add
jns
adc
cltd
jl
mov
xchg
add
jnp
inc
jmp
push
scas
pop
in
imul
dec
into
adc
push
stos
mov
xor
jbe
pop
lock
enter
xlat
aam
lods
adc
sahf
into
and
add
or
jmp
inc
lds
xchg
xlat
mov
push
loopne
xchg
jl
cmp
stos
data16
push
xor
xchg
scas
pop
aaa
filds
inc
arpl
add
add
push
mov
test
mov
data16
out
mov
jnp
cmpsl
les
ss
sbb
in
cmp
xchg
sahf
push
xor
repz
dec
sub
scas
add
jnp,pt
data16
adc
add
jp
push
pusha
icebp
mov
adc
push
insb
dec
jae
or
sbb
clc
sub
arpl
cmp
lret
mov
ret
and
adc
xchg
xor
add
stos
or
xlat
gs
clc
add
jne
fwait
sbb
add
scas
arpl
add
add
pop
clc
xchg
cmp
sti
mov
ds
add
dec
jb
inc
add
data16
push
add
push
fs
fcompl
in
lret
mov
iret
out
pop
add
xlat
xor
pushf
xor
sbb
mov
pop
repz
sbb
jae
mov
lods
inc
add
cwtl
push
insl
imul
push
mov
pop
aad
inc
test
fildll
push
jge
jae
add
or
add
mov
xchg
xor
sar
add
xlat
pop
cs
push
add
sub
ret
sti
jle
add
cmp
imul
mov
or
ljmp
scas
pop
int3
pop
mov
les
pop
cmp
add
mov
add
add
jmp
add
or
add
rorl
add
insl
jmp
mov
pop
push
les
stos
add
fdivrl
push
loope
lret
jl
pushf
xor
jb
add
pop
int3
rclb
add
inc
stos
inc
add
fwait
add
movsl
fwait
rorb
push
mov
rcrb
aam
jle
sub
sbb
or
xor
jno
inc
ja
popa
clc
adc
sbb
cmpsl
xchg
je
push
leave
jns
popf
inc
lret
fcoms
ret
cltd
je
mov
push
out
pop
mov
push
and
or
pop
cmpsb
aad
inc
lea
je
sub
inc
rolb
stos
xchg
cmpsl
jb
sub
jecxz
idivl
and
cmp
dec
add
pop
push
in
lods
jns
push
ret
fadds
xchg
std
mov
dec
in
xchg
jg
mov
lcall
mov
cmpsb
fwait
adc
cmp
movl
push
leave
aaa
js
repnz
push
lock
push
jge
repz
popa
mov
add
and
imul
js
jp
inc
inc
add
cmp
push
push
fdivrl
add
pop
add
adc
sahf
je
ss
dec
pop
cs
aas
add
imul
mov
les
enter
mov
and
add
xor
mov
shlb
rclb
mov
and
add
push
lock
cmpsb
push
ja
pop
int
xor
stc
xchg
or
push
movsb
sbb
adc
mov
fs
pop
aad
ret
ljmp
or
cmp
add
pop
pop
adc
add
and
add
and
sub
sti
add
stc
push
rol
lock
lahf
mov
lock
and
jp
notb
pop
sbb
pop
add
xor
cld
dec
add
pop
adc
cwtl
mov
add
push
dec
pop
es
mov
or
ss
add
popf
and
mov
mov
jb
add
sahf
sbb
jns
iret
stos
cwtl
and
movsb
sbb
testl
xchg
inc
fbld
add
add
bound
add
repz
add
or
xor
add
mov
push
jae
mov
cs
lret
cli
mov
mov
pusha
push
fwait
scas
add
add
lea
fsubr
or
push
sbb
and
fsts
daa
mov
or
add
mov
popa
mov
in
inc
fidivs
add
test
and
inc
cmpsl
push
mov
icebp
sti
mov
jo
aas
add
dec
adc
fisttps
jb
add
insb
inc
cs
js
call
dec
adc
cmp
sar
cmp
and
ret
or
imul
inc
inc
mov
jp
jp
add
jmp
cmp
or
jecxz
xchg
add
xchg
faddl
dec
push
movsb
or
movsb
push
push
xchg
mov
sti
cwtl
inc
cmp
out
push
xchg
mov
xlat
and
add
cmpsl
cmc
mov
addb
add
fiadds
jb
add
ja
xor
sub
int
pop
push
es
mov
pop
pop
add
inc
add
psadbw
imul
cmp
add
fs
add
push
or
xchg
dec
fdivrs
pop
mov
insb
sub
cli
xchg
sub
add
add
add
jne
js
addl
and
push
mov
enter
out
add
fiadds
out
xor
add
mov
andl
popa
ljmp
mov
mov
lds
add
add
lods
xchg
hlt
in
sar
add
mov
ljmp
jns
jo
fimuls
sub
add
dec
or
add
push
cmp
add
xchg
movsl
ret
and
leave
in
mov
jo
add
sahf
or
or
jns
pop
add
div
pop
add
xchg
in
and
mov
adc
xchg
ret
insl
sub
xchg
xchg
sub
push
jl
mov
js
pop
add
jle
add
and
pop
ljmp
ficoml
mov
push
in
xor
xchg
xchg
and
es
jno
and
and
add
add
lds
add
add
icebp
scas
dec
sub
inc
add
cs
pushf
sub
lods
inc
test
leave
setbe
add
pop
mov
test
or
in
cmp
sbb
lds
pushf
fsts
ss
add
enter
mov
xor
adc
push
xor
pop
andb
add
mov
aad
icebp
add
xor
ret
sbb
adc
iret
ljmp
xor
mov
aam
add
dec
push
dec
ljmp
add
mov
imul
rol
iret
popl
or
mov
mov
add
nop
loop
mov
fcmovnu
push
add
fstps
outsl
scas
jle
inc
add
xchg
and
sbb
or
loop
lret
add
push
xlat
sbb
add
xchg
les
jmp
fadds
cltd
push
inc
les
pop
pop
aaa
add
push
inc
hlt
add
rcrb
popa
add
das
add
add
mov
mov
cmp
add
outsl
add
pusha
add
fmuls
fistpl
dec
out
insb
dec
mov
and
add
mov
mov
sbb
imul
popl
fcoml
xlat
scas
in
imul
jecxz
out
xchg
sti
add
loopne
outsl
jecxz
cld
cmp
lods
jg
js
stos
inc
push
mov
mov
arpl
pop
cmp
cmp
add
out
movsb
add
rclb
pop
in
mov
aad
mov
or
fyl2xp1
add
push
mov
xor
push
dec
jne
test
test
mov
mov
mov
in
int
out
add
add
or
add
jmp
add
incb
push
das
roll
push
and
inc
push
push
add
into
adc
ficoms
sbb
shrl
add
icebp
jbe
sarb
mov
es
sub
sbb
inc
subl
mov
test
repz
add
xor
out
xchg
adc
std
sahf
inc
jbe
es
fs
out
out
mov
mov
add
add
pop
add
xchg
add
adc
xor
sbb
push
sub
call
sub
stc
stos
push
jns
xchg
mov
jo
add
nop
jb
daa
les
sbb
pop
mov
nop
stos
lahf
imul
mov
sub
fldenv
jno
mov
and
push
push
push
or
cltd
sbb
inc
dec
pop
push
jmp
xchg
mov
xchg
jo
pop
out
lahf
ja
cmp
andl
xlat
loope
add
xchg
mov
xchg
push
aam
add
add
adc
add
je
add
ljmp
jns
pop
or
cmc
mov
jg
stc
add
test
lods
test
in
push
sub
lea
mov
cmpsb
or
fnstsw
lods
lret
cmp
jae
popf
jg
int
pop
inc
test
xor
mov
testl
or
out
out
xchg
clc
lods
xchg
add
xlat
jecxz
cmp
enter
ljmp
cmp
cmpsb
add
mov
inc
push
aad
cmp
stos
add
les
mov
jnp
push
cmp
je
nop
jmp
add
add
add
inc
shlb
pop
sbb
adc
add
addb
ret
mov
test
lds
add
push
pop
xchg
push
add
xchg
inc
pop
aas
imul
add
or
add
je
inc
in
sub
test
cmp
loopne
sbb
sbb
xchg
or
aam
and
mov
jmp
mov
ja
out
repz
xchg
popa
mov
jns
add
or
ljmp
cmp
add
pusha
add
or
call
push
dec
aam
xor
das
leave
push
add
or
adc
imul
and
es
push
and
mov
lret
mov
imul
test
rcrb
test
inc
jg
and
cs
lods
bound
inc
ljmp
mov
lea
cmc
and
mov
out
jo
sub
cwtl
sub
das
push
add
xor
shll
fimull
cld
push
push
enter
xor
movsl
push
jmp
push
sbb
mov
xchg
repnz
rcl
add
out
mov
mov
dec
ficomps
xchg
call
aaa
into
inc
add
test
or
cwtl
ljmp
add
push
hlt
mov
and
jg
add
insb
push
sub
push
imul
cmp
pop
lahf
pop
shl
jle
dec
xchg
xor
insb
negl
bt
mov
jg
je
add
clc
stos
pop
add
cltd
add
add
mov
push
lret
add
imul
sbb
sub
add
adc
and
roll
push
add
jbe
sbb
adc
popf
dec
aam
rcrb
stos
insb
or
add
cmp
jnp
add
loop
add
jns
mov
mov
out
add
mov
es
lret
lret
xchg
je
sahf
push
fcoml
cmp
in
in
pop
hlt
mov
inc
stos
lcall
add
pushf
cld
inc
daa
jne
je
jae
in
lcall
and
mov
and
dec
data16
in
jb
xchg
mov
add
xchg
test
inc
and
data16
inc
push
add
inc
jno
jl
cmp
bound
incl
add
stos
loopne
scas
push
add
add
jno
add
inc
in
rep
stos
push
ret
mov
popf
movsl
pop
popa
lret
xchg
cwtl
out
sbb
mov
mov
inc
xchg
pop
mov
gs
test
call
inc
mov
lcall
inc
stos
mov
pop
imul
ljmp
xchg
sub
lcall
push
fld
test
add
addl
or
inc
jmp
sbb
lds
and
add
mov
add
in
add
jo
test
push
cmpsb
inc
adc
dec
psubw
cltd
das
add
mov
fisubs
iret
push
cmp
fstpl
insb
fdivr
cwtl
daa
add
add
sarb
add
add
jns
inc
add
outsb
cmpl
mov
std
js
nop
orl
mov
roll
push
xchg
in
ljmp
push
add
cmpsl
xlat
xchg
mov
push
fcom
rcrb
add
insl
dec
pop
add
add
cmpsb
add
out
add
mov
lods
sbb
mov
jg
clc
push
fisttps
cmp
add
pop
popa
add
inc
cmc
push
xor
les
mov
mov
add
aam
shl
jne
inc
dec
pop
sub
and
ds
cmp
stc
add
pop
orb
pop
rcrl
nop
cli
lock
sub
arpl
repnz
xor
add
add
add
push
mov
dec
add
cltd
mov
jge
mov
add
shll
xor
out
add
sbb
mov
mov
mov
insl
ljmp
lahf
outsl
out
lret
mov
test
xchg
sbb
rclb
xchg
imul
or
push
and
push
inc
add
movsl
rclb
mov
mov
dec
popa
or
mov
ja
imul
inc
add
lea
inc
add
mov
fwait
add
xchg
pop
roll
ss
adc
mov
mov
add
xchg
popa
add
push
add
or
jecxz
add
cmp
ljmp
test
add
xor
stos
gs
mov
js
gs
add
adc
sbb
xchg
adc
sub
mov
push
aam
pop
jmp
xchg
inc
data16
sub
daa
sub
mulb
xlat
add
data16
loop
sub
daa
adc
push
lahf
add
mov
mov
xchg
cltd
ret
mov
mov
ret
add
jae
mov
push
out
and
jb
inc
add
negl
loopne
add
xor
lock
add
popa
xor
rorb
add
xchg
inc
add
add
inc
movsl
dec
add
ficoml
lret
add
mov
shll
add
push
and
mov
mov
lret
fs
mov
jp
mov
add
add
mov
cmp
dec
fwait
lea
xchg
out
mov
addr16
dec
add
add
add
addr16
add
out
jp
fcmovnu
icebp
adc
mov
cwtl
xchg
pop
into
inc
add
mov
jne
add
mov
add
add
sbbb
xchg
fnstsw
js
push
xchg
mov
push
roll
imul
cwtl
imull
jb
push
mov
jecxz
sarl
daa
sarb
dec
mov
add
fwait
int3
push
in
dec
add
mov
xchg
mov
xchg
out
add
daa
jo
test
sarb
add
fs
mov
dec
add
add
mov
pop
push
or
mov
lcall
roll
aam
jp
xor
xor
xor
ret
inc
mov
dec
nop
sub
shr
xchg
add
movl
dec
sbb
add
add
int3
enter
dec
and
sahf
dec
cwtl
push
jbe
add
adc
add
aaa
add
jmp
int3
sub
xchg
pop
adc
add
inc
loop
mov
ret
cltd
sahf
lret
sub
push
xchg
int3
sahf
xchg
pop
mov
push
adc
popa
in
in
mov
add
add
jecxz
loope
adc
clc
js
aam
enter
jbe
outsl
push
sub
in
add
pusha
xchg
sub
sbb
into
push
nop
cwtl
outsb
fwait
stos
xor
pop
mov
add
insb
cmp
mov
mov
add
xor
add
popl
stc
sahf
add
pop
enter
mov
call
jg
mov
imul
lods
pop
into
add
or
fcoml
jbe
mov
dec
sub
mov
push
add
ljmp
into
insl
or
mov
xchg
out
add
add
jmp
mov
hlt
sahf
push
mov
in
outsl
loop
call
add
xchg
lret
adc
int
push
add
sahf
divb
pop
or
test
jl
in
push
adc
pop
xchg
addb
add
addr16
mov
pop
mov
ds
sub
add
fiaddl
pop
add
jecxz
fld
es
jl
fidivrs
mov
popa
cmpl
ss
add
xchg
fadds
out
mov
in
mov
add
je
add
and
jg
cltd
rclb
subl
adc
jb
add
pop
out
imul
push
es
lret
nop
add
call
cld
js
add
cmpsb
daa
jg
insb
sbb
es
pop
ja
jl
sub
xor
shrl
and
call
popf
pop
stos
and
ret
shrb
mov
or
cmp
dec
loop
ret
add
loopne
pop
mov
mov
add
jl
dec
mov
ja
out
and
xor
ret
mov
enter
fdivrl
xor
outsl
push
in
add
outsb
sbb
xchg
addl
or
pcmpeqb
add
jg
jo
out
jns
in
adc
cmp
das
sub
cmp
or
xchg
cmpsb
add
add
add
mov
cmp
push
pop
add
pop
add
insl
pop
push
mov
sbbl
ret
and
add
jg
sub
pop
add
rcrb
add
mov
xor
jbe
nop
out
adc
mov
aaa
xor
adc
lahf
aaa
add
cs
or
movsl
add
imul
pop
scas
stc
movsl
add
repnz
mov
cmpsb
mov
lret
xchg
inc
or
sbbl
add
loope
lahf
push
add
ret
mov
orl
rolb
jl
pop
ret
push
add
aaa
sub
cmc
rorb
cmp
push
cmp
pusha
add
xor
gs
aam
mov
je
cmpsb
dec
and
add
mov
ret
xorb
filds
xchg
lret
inc
add
and
xchg
out
dec
inc
jge
fwait
xor
pop
mov
add
add
add
test
add
inc
mov
scas
bound
fsubl
dec
add
add
arpl
cld
clc
sub
add
dec
cmp
daa
mov
xorl
clc
add
lds
sbb
mov
cmp
loop
cld
xchg
sub
cmp
jecxz
push
add
mov
aaa
add
add
add
add
call
adc
push
dec
add
cmp
add
addr16
int3
ret
sub
hlt
cwtl
cli
sti
aam
cmp
adc
in
xchg
push
decl
push
adc
xchg
or
mov
filds
or
sbb
dec
insl
in
ficompl
mov
pop
es
mov
pop
daa
push
lret
mov
xchg
cld
das
add
adc
add
jbe
insb
add
je
movsb
mov
mov
add
jo
add
mov
add
das
xchg
push
ss
mov
jmp
fs
mov
add
in
jmp
add
lahf
mov
cltd
je
xchg
dec
loope
push
mov
std
xor
loop
stc
mov
push
dec
in
inc
clc
jp
cli
jae
jnp
mov
xchg
cmp
mov
sub
clc
and
inc
mov
fcomi
fidivrs
fldl
jo
cmp
xor
loope
sbb
dec
imul
in
sahf
imul
pop
fldenv
mov
es
jae
push
push
rolb
movsl
add
sti
pop
popa
pop
add
push
in
mov
jne
add
mov
cmpsl
clc
frstor
lods
xchg
insl
xor
cmp
xchg
loopne
or
add
jecxz
xor
or
shll
adc
xchg
mov
mov
leave
inc
pop
ja
lret
push
jl
push
sub
add
push
add
lods
das
add
sbb
add
xchg
das
fimuls
in
adc
add
inc
stc
dec
cmpsb
dec
add
jecxz
mov
sbb
aaa
ret
jb
jns
push
push
mov
out
cmp
xor
adc
inc
push
add
mov
adc
dec
pop
in
mov
repnz
cmp
je
and
add
add
jp
dec
test
add
popa
sub
test
jl
movsl
aad
insl
jb
dec
push
add
imul
adc
jne
arpl
movl
add
push
mov
inc
movsl
xor
pop
fstpl
lret
mov
add
mov
sbb
lret
add
cmp
mov
loope
lcall
sbb
add
cli
stos
out
sbb
enter
push
cmp
pop
and
and
cmp
add
pushf
jecxz
pop
call
fidivrs
pop
jae
add
pop
jg
imul
mov
mov
pop
jmp
jo
ljmp
cld
push
pop
loopne
add
arpl
or
jne
call
out
mov
fisubl
mov
mov
xrelease
sbb
xlat
pushf
loope
leave
push
sub
push
lods
lea
lret
or
push
xlat
push
ja
lods
int3
add
add
lock
in
sub
and
add
cmp
adc
add
imul
or
loop
stc
arpl
xchg
add
jle
in
dec
add
add
out
iret
mov
pop
jmp
aam
shrl
jno
xchg
ss
push
pop
inc
sub
sub
xchg
mov
ljmp
test
pusha
dec
mov
and
dec
in
mov
push
add
lret
adc
popf
xlat
add
out
incb
ret
aam
mov
xor
and
mov
jnp
add
insl
cwtl
push
cmp
in
add
sub
leave
stos
push
js
rolb
add
xor
fimuls
test
jbe
cmp
and
pop
push
xor
or
xor
cmp
int3
inc
mov
ljmp
and
mov
and
jo
sbb
lret
add
dec
mov
gs
add
and
add
jnp
push
push
fsubs
mov
hlt
sbb
mov
cmpsb
fwait
mov
xchg
lock
xor
mov
cmpsl
ja
add
mov
adc
jp
ds
cmp
add
mov
xorl
sub
add
orb
add
insb
add
aad
mov
in
sub
scas
mov
arpl
les
test
loopne
and
push
add
imul
pop
add
sub
ret
mov
add
mov
dec
out
sub
test
mov
cmp
mov
test
mov
fildl
pop
cmpsb
icebp
dec
cs
out
mov
cmpl
stc
loope
mov
inc
ds
in
mov
push
leave
xchg
arpl
pop
adc
addl
lret
je
ja
sbb
jnp
test
insl
aas
add
ret
inc
add
scas
cwtl
sub
sbb
jp
xlat
sub
subl
add
cli
jp
out
sub
aas
sar
add
stc
or
mov
imul
fstl
add
add
popf
outsb
or
bound
inc
loopne
add
jno
pop
mov
hlt
sti
mov
cmc
ret
sbb
popf
inc
lahf
cmp
adc
fistpl
popa
cmp
test
mov
hlt
add
add
add
add
and
fmul
mov
xchg
xor
fdivs
out
out
add
or
and
jno
faddl
ss
out
inc
add
xor
mov
and
add
add
sahf
mov
pop
movsb
sub
gs
sub
mov
xchg
sbb
add
mov
xor
add
pop
ja
movsb
gs
fcoms
sbb
int3
mov
mov
fldcw
fwait
jnp
push
aaa
sti
pop
add
outsl
dec
fs
mov
dec
movsl
lcall
add
mov
xchg
cmp
int3
adc
roll
cld
sbb
xchg
mov
push
loop
push
jp
push
aaa
add
stos
mov
aas
dec
dec
stos
jae
or
and
add
inc
adc
imul
mov
ljmp
clc
inc
mov
add
cmp
jp
and
test
push
aam
jecxz
add
sbb
adc
add
lret
mov
add
popa
mov
in
hlt
lock
add
mov
add
in
add
dec
out
mov
add
mov
pop
jne
cmpsb
xchg
mov
in
pop
rcrl
mov
pop
add
cmpsb
loopne
hlt
nop
dec
pop
stos
adc
mov
hlt
sbb
jp
testl
mov
sarb
add
add
aad
and
cmc
dec
xor
inc
pop
sbb
cmp
add
add
mov
inc
mov
add
inc
cli
add
push
aaa
ret
pushf
enter
mov
out
movb
pushf
dec
daa
xor
cmpsb
xor
jbe
std
cli
leave
add
roll
sar
ljmp
dec
call
daa
add
insb
add
jno
outsl
emms
ficoms
jge
jb
into
push
es
xchg
add
add
pop
xor
out
js
inc
and
add
push
in
test
push
mov
jp
cli
movsl
add
push
rcrl
stos
add
sub
outsl
add
dec
jb
outsl
subb
addb
add
pop
fsubs
xor
loopne
int3
movsl
jne
arpl
out
hlt
ljmp
ja
add
jns
adc
add
jno
test
add
ret
mov
stc
dec
stos
dec
pop
jae
mov
mov
es
addr16
insl
pop
and
rolb
jno
rclb
push
add
add
fsub
fcoms
add
out
jl
add
pop
call
cwtl
cmpsl
in
push
jns
stos
mov
fstpt
cli
mov
into
pop
mov
cltd
popf
sbb
pusha
pop
or
add
add
mov
fs
loope
dec
sbb
jnp
xchg
int3
nop
dec
lods
jno
add
rol
lahf
add
add
fdivrs
sysexit
jge
jbe
and
mov
out
mov
push
and
nop
fnstsw
cltd
ret
sub
bound
dec
fidivl
mov
fidivrs
mov
add
pushf
jl
push
mov
add
ljmp
push
mov
loop
call
jnp
add
in
xor
xchg
outsl
jne
xor
pop
cli
fldt
add
add
in
addr16
pop
cli
movsl
pop
xor
lock
add
dec
add
push
ltr
add
enter
and
fs
movsb
cmpxchg
adc
push
outsl
adc
inc
mov
stc
xor
testb
test
outsb
cmp
and
nop
inc
aam
xchg
sbb
pop
ljmp
mov
inc
dec
int3
add
and
and
or
dec
add
jae
filds
mov
shlb
add
or
jl
cmpsl
sbb
mov
and
pop
addl
cs
push
imul
pop
add
aas
dec
add
addr16
xchg
cwtl
xchg
jge
test
or
nop
sub
add
sub
add
cmpsb
jo
push
je
inc
pushf
loopne
outsb
leave
push
mov
push
fists
add
aaa
add
lock
add
fwait
add
jmp
enter
fisttps
pop
aaa
add
or
movb
insb
negl
mov
add
add
pop
inc
lahf
add
daa
ficomps
dec
call
loopne
sti
add
add
pop
setne
sbb
add
xchg
sti
mov
arpl
sarb
jl
add
adc
pop
fxam
out
dec
add
adc
jo
add
dec
inc
add
jl
add
aam
int
call
jno
dec
enter
aad
adc
ret
mov
fistl
jge
imul
in
sbb
movsl
push
push
sub
in
roll
pop
add
sti
add
idivl
add
mov
push
jne
push
test
insb
pop
loopne
add
and
and
out
gs
hlt
mov
sahf
add
leave
out
add
dec
aad
push
add
adc
clc
add
sub
outsb
and
icebp
add
inc
add
add
add
popa
insl
and
cltd
fdivr
into
arpl
inc
xchg
bound
push
movsb
sbb
and
add
repnz
fildl
je
data16
lcall
and
mov
les
lods
add
xlat
inc
pop
push
push
lcall
add
cwtl
fcoms
arpl
in
data16
sbb
sub
testl
loopne
fwait
mov
lcall
add
addr16
add
enter
sub
inc
adc
mov
rcll
out
fisttps
dec
iret
out
cmp
in
cwtl
jg
adc
nop
fwait
cmp
pop
add
scas
sub
push
popa
fwait
mov
popa
pop
xor
sub
lahf
add
loope
sbb
mov
mov
mov
xlat
imulb
les
add
jnp
sub
add
test
dec
or
push
jmp
roll
test
xor
jg
icebp
adc
scas
pop
mov
dec
add
pop
pop
sub
mov
mov
or
adc
add
cmovo
es
sti
add
fcompl
dec
scas
in
pop
add
mov
mov
ljmp
fs
xor
sub
push
push
xchg
cmpl
push
add
mov
and
push
push
mov
pusha
adc
add
in
cmpl
ret
xchg
add
outsl
dec
sub
mov
lods
add
lock
fidivrl
cmp
fidivl
jbe
loopne
pop
add
jbe
scas
jle
aas
jmp
daa
pop
insb
dec
add
dec
xlat
jmp
xchg
lock
xchg
bound
cmc
shufps
hlt
and
or
mov
lods
lods
xchg
inc
add
rolb
iret
and
push
sbb
iret
add
loope
pop
sti
adc
add
push
rol
jmp
xchg
add
jns
add
gs
xchg
cmp
andb
add
mov
adc
stos
add
outsb
mov
jne
stos
push
jns
xor
add
pop
cmpsl
add
call
cmp
lcall
cs
in
imull
add
jmp
xchg
mov
mov
iret
fucomi
or
add
adc
sub
add
xchg
jmp
add
into
xor
and
jne
add
movl
adc
push
xlat
or
xor
add
pop
decb
add
fxch
cli
test
dec
mov
stos
fcmove
xchg
repnz
aas
add
adc
xor
dec
add
sub
add
inc
pop
push
test
or
shl
hlt
mov
pop
mov
or
inc
movsl
xor
jecxz
shlb
add
mov
stos
mov
int3
sbb
enter
push
cmp
push
jmp
add
jp
add
add
sbb
clc
mov
addb
lods
dec
cli
pop
das
testb
jge
pop
add
repnz
gs
add
call
ret
hlt
fidivs
inc
test
push
add
pop
xchg
xor
pop
sbb
js
icebp
or
pushl
xchg
pop
cmc
mov
gs
push
dec
add
sub
pusha
pop
ret
inc
movsl
jno
add
ja
stos
xor
fbld
roll
xor
lock
fwait
mov
insb
jo
jo
inc
push
mov
mov
dec
add
dec
cmp
in
lahf
add
outsl
clc
jmp
cwtl
cmp
orb
dec
add
int
stos
add
xchg
ja
adc
les
popa
fadds
add
jns
test
std
lahf
push
roll
push
add
adc
out
pushf
shll
mov
pop
adc
xchg
fs
in
shrl
push
ret
pop
inc
jl
icebp
imulb
in
dec
sahf
add
jnp
push
xchg
xchg
enter
sbb
add
cmpsl
mov
cli
shll
add
add
incb
add
call
mov
or
insl
sub
add
push
aad
fiaddl
outsb
add
pop
sub
xlat
jp
testb
xchg
pop
clc
pop
mov
push
or
ds
add
pop
les
mov
inc
mov
loop
add
pop
xchg
sub
addb
add
fstpl
add
fisubrs
ret
sbb
jl
in
icebp
push
add
outsl
xlat
adc
xor
cmp
nopl
sbbb
cmp
filds
push
enter
sbb
inc
dec
out
jbe
mov
lret
or
mov
add
fsubp
sub
test
cmp
add
xchg
add
out
iret
stc
adc
inc
fwait
cmp
push
mov
xchg
or
jno
sti
dec
jl
bound
cmpsl
xchg
out
cmp
fcoml
mov
add
push
inc
cwtl
mov
iret
test
push
pop
dec
addl
add
xor
ret
imul
mov
jp
cli
add
dec
shll
add
lcall
push
dec
adc
fnsave
add
pop
ficoms
dec
fdivl
inc
leave
inc
sbb
loopne
and
out
movsb
aas
outsl
enter
xchg
out
or
pop
push
sub
add
mov
pop
add
mul
aaa
inc
add
add
xchg
jo
add
xchg
in
xlat
mov
dec
loopne
and
add
push
mov
and
das
inc
and
nop
cli
xchg
add
arpl
xchg
push
popa
bound
add
outsl
and
sbb
xchg
inc
jp
rcr
jnp
pusha
add
add
push
hlt
pop
and
and
adc
roll
dec
test
loopne
add
or
add
lcall
lcall
add
loop
fs
mov
std
jae
xchg
add
mov
cmp
mov
add
popf
cmp
adc
add
add
or
in
adc
or
add
bound
je
push
mov
pop
add
cmp
repnz
cmc
xor
dec
xchg
repnz
add
add
das
pop
out
rolb
mov
and
mov
pusha
add
mov
les
add
mov
pushw
jbe
lcall
inc
les
lock
add
push
mov
sbb
mov
mov
int3
sahf
faddp
dec
mov
push
test
add
or
and
sbb
inc
sbb
test
es
out
popf
xchg
ja,pn
xor
in
jle
mov
xlat
scas
add
xchg
mov
movsb
jb
jecxz
nop
xlat
jecxz
sbb
add
xlat
sti
adc
adc
mov
sub
lods
cmovp
out
cmpsb
add
inc
cmpsb
xchg
push
es
repz
mov
test
sbb
stos
and
push
insb
dec
icebp
mov
push
mov
or
jecxz
mov
data16
jmp
mov
int3
cmpsl
fstl
mov
dec
ficompl
add
enter
movsl
filds
cs
push
jno
rclb
mov
xchg
add
das
cmp
add
sub
add
ds
andl
clc
sub
sbb
add
xchg
dec
test
jge
loopne
add
movsl
imul
cmpsb
shr
lea
shll
into
stos
xchg
xor
outsl
xor
lea
add
push
mov
std
pop
xor
push
jno
out
xor
dec
add
add
jo
movsb
mov
scas
lock
mov
imul
testl
in
push
shrb
movsl
out
data16
sub
push
inc
adc
sbb
lea
sbb
push
cmp
outsl
popf
add
xchg
call
mov
push
insl
pop
add
loope
imul
pop
out
add
sti
bnd
or
push
adc
jb
out
and
ljmp
inc
lcall
add
loope
test
repz
push
push
xchg
mov
cli
into
insl
push
inc
pop
pcmpeqd
pop
push
pop
sbb
sbb
cmp
push
push
inc
add
xchg
jge
mov
movb
movsl
xlat
xchg
mov
adc
pusha
xchg
jae
xor
cwtl
jae
daa
aad
outsb
dec
addr16
mov
mov
pop
add
push
stos
in
addr16
push
add
fstps
add
popf
adc
gs
ljmp
mov
mov
pop
mov
clc
cmp
cmp
jbe
dec
push
sbb
pop
push
mov
jnp
add
mov
cmp
out
pop
pop
jo
in
pop
in
add
cmp
stos
mov
movsb
test
fisubrl
jmp
mov
flds
lea
mov
dec
shlb
mov
xchg
inc
or
stc
cwtl
cmp
cmp
pop
mov
addr16
sbb
cmp
std
add
and
data16
das
pop
xor
out
arpl
fldl
dec
mov
sarb
mov
pop
dec
mov
imul
jae
cmc
in
roll
out
add
lock
leave
cmp
flds
add
push
xchg
in
int3
lds
lret
mov
add
and
aas
push
lds
cmp
mul
ljmp
and
sbbl
mov
adc
ljmp
hlt
imul
in
aad
jne
xchg
push
add
lock
clc
mov
incl
add
cli
aam
rolb
out
add
and
add
daa
scas
add
lock
jp
jns
adc
movsb
add
xor
mov
sahf
pop
or
and
mov
mov
push
pushf
ja
cmpsl
outsl
add
xchg
jno
add
xor
pop
dec
mov
pushf
pop
pushf
mov
lret
arpl
in
cmpsl
pop
jnp
add
or
jb
add
fld
mov
test
add
pop
sub
rcrl
mov
xchg
mov
add
daa
inc
incb
xchg
mov
xchg
mov
add
xchg
test
adc
dec
out
lock
push
mov
sub
and
push
push
mov
pop
sub
sahf
ret
and
in
mov
lods
or
mov
pop
mov
dec
jge
mov
mov
in
cmc
add
add
lcall
sbb
xlat
jmp
dec
lcall
pop
jp
jne
subb
ja
mov
into
push
test
pop
sbb
incb
xchg
adcl
add
fldenv
sub
pop
rolb
jo
or
sti
mov
enter
lret
ret
les
stos
mov
add
push
lea
loopne
in
pop
add
hlt
in
lds
push
mov
dec
mov
add
fidivl
add
out
lods
imulb
add
jmp
or
mov
or
push
mov
sbb
xchg
dec
xchg
das
or
add
sub
push
dec
jecxz
or
in
sub
lret
and
gs
sbb
in
flds
movsb
jmp
stc
loope
jns
xchg
scas
mov
cld
add
call
xchg
push
stc
lea
aas
das
imul
mov
add
push
push
sub
and
xchg
pushf
add
jb
fsubrl
fldt
into
test
add
leave
out
mov
cmp
add
and
inc
pop
sub
mov
shrb
pop
add
mov
sub
fsub
and
sub
pop
push
call
inc
ss
jo
mov
inc
add
cmc
xor
pop
and
jb
add
add
lret
push
add
icebp
js
incb
push
outsl
shll
add
scas
inc
scas
mov
fmull
shrb
repnz
mov
cmp
xlat
xchg
out
add
add
clc
add
mov
ret
add
hlt
push
add
push
mov
fldl
aad
sbb
ret
cmp
icebp
cbtw
lods
xor
lods
pop
outsl
pop
sub
add
mov
sub
cs
daa
test
lods
or
ret
movsb
les
loope
iret
and
test
jo
icebp
je
sub
mov
js
pop
mov
pop
scas
mov
sub
repz
push
push
out
dec
fbld
pop
incb
add
mov
pop
into
add
mov
mov
sub
mov
inc
addl
hlt
sub
mov
mov
mov
cwtl
mov
aaa
pop
mov
cs
dec
sub
and
add
mov
pop
sbb
add
fiadds
into
ret
mov
arpl
or
mov
rclb
push
lods
add
and
lods
mov
ret
fsubrs
add
mov
dec
xor
fiadds
shrb
pushf
mov
or
mov
dec
mov
cli
adc
cmp
leave
cs
or
lock
outsl
pop
cltd
inc
lods
cld
aam
sti
add
add
loopne
bound
imul
sub
imul
sbb
add
dec
pop
and
test
add
repnz
push
mov
jb
push
aaa
cmp
sub
add
xchg
js
add
xchg
adc
dec
inc
adc
pop
and
push
aas
aad
mov
lahf
insb
test
add
push
call
pop
mov
pop
add
jp
out
lar
xlat
mov
loop
add
jbe
sub
lea
scas
jge
push
xchg
data16
lods
xchg
mov
add
out
lds
add
cmp
or
add
sbb
imul
add
mov
push
out
and
jbe
xor
dec
add
xchg
neg
movsl
sbb
lods
ret
jo
clc
jnp
orb
push
test
inc
sbb
xor
and
pop
cmp
cmpsb
adc
mov
cmp
mov
xor
lret
icebp
add
dec
sbb
xchg
dec
pop
add
push
sbb
loope
add
xchg
dec
add
mov
mov
pop
mov
xchg
add
fwait
clc
arpl
adc
mov
pop
xchg
xor
dec
ds
xor
insb
mov
add
fxch
mov
sub
movsl
jl
mov
or
pop
inc
push
xor
adc
mov
jnp
add
scas
cltd
enter
dec
mov
pop
stos
and
xlat
sarb
add
shrb
jp
xor
jo
lret
aaa
add
jb
push
dec
pop
add
adc
fs
mov
test
add
aas
add
add
mov
out
jp
add
data16
pop
cmp
into
push
insl
icebp
add
out
cltd
sbb
fstl
pop
gs
add
pop
ret
ds
lea
cmp
push
jns
std
push
add
adc
add
inc
cmp
cmpsl
and
add
pusha
fwait
push
lret
sbb
mov
jecxz
inc
imull
and
jnp
adc
fnstcw
lret
jno
or
add
add
fs
je
ds
dec
outsl
xorl
add
mov
jecxz
add
xchg
bnd
dec
addl
in
jae
push
mov
add
sbb
inc
add
addr16
add
cmpsb
add
jb
push
aas
out
pop
push
cs
push
adc
and
shll
add
pushaw
add
into
add
les
sub
xchg
jnp
shrb
sbbb
mov
or
and
push
and
test
cwtl
mov
add
add
jg
out
inc
add
cld
into
ret
and
mov
ja
push
cld
out
push
imul
clc
add
pop
call
jl
adc
and
jnp
in
fadds
push
xchg
mov
add
add
cli
fstpl
mov
adc
and
or
inc
and
push
push
cs
shll
and
xlat
scas
test
mov
lods
jns
or
es
shll
push
push
mov
dec
clc
pop
movsl
add
pop
xorl
add
mov
call
xchg
scas
loopne
jl
movsl
add
nop
cmc
ljmp
xor
pop
mov
mov
sti
xor
ljmp
cmp
stc
fwait
pop
jnp
xchg
loopne
pop
mov
gs
pop
rclb
cmp
add
xor
xor
shll
add
pusha
cmp
int3
push
add
add
mov
add
add
xor
add
and
cwtl
push
sub
mov
inc
test
cli
test
adc
adc
add
mov
add
testb
outsb
mov
movsb
loopne
mov
pop
jg
xchg
data16
xor
pusha
shrb
mov
rcr
adc
sub
mov
sbb
movl
aas
je
xchg
inc
add
mov
jo
mov
mov
cli
jl
add
sbb
xor
inc
mov
pushf
add
fidivl
push
ret
add
xchg
mov
notl
add
add
add
pop
cmpb
nop
aaa
add
cs
or
xlat
sbb
loopne
mov
adc
cmpsb
xchg
jmp
or
loop
mov
mov
mov
add
movsb
add
and
pusha
jge
xchg
dec
mov
out
out
fcoms
sbb
cmp
loope
mov
add
mov
movb
pop
add
xor
mov
add
inc
and
jp
or
jp
or
jns
pop
xchg
jg
ss
jno
or
cmp
outsb
lcall
int3
dec
inc
push
sahf
cld
pop
add
and
mov
adc
pop
hlt
add
ss
jns
cli
add
xchg
lcall
fs
andb
fcos
pushw
lock
lcall
shl
outsb
pop
xor
add
std
packuswb
jge
int
jge
loopne
xor
jnp
adc
loopne
fistpl
ret
cmpsl
add
jo
xlat
stc
cmp
pop
aaa
shll
inc
sbb
daa
jp
inc
xchg
or
lret
add
in
xchg
jae
int3
es
xor
pushf
sbb
xor
inc
pop
push
call
stc
mov
sbb
pop
mov
jno
in
out
add
pop
xor
and
inc
xchg
cltd
addl
add
ret
add
jecxz
comiss
into
test
or
pop
xor
add
sbb
in
lahf
fists
add
addl
jmp
add
test
xor
inc
sbb
adc
lcall
sbb
xchg
add
add
mov
add
add
or
subl
or
lods
push
add
into
xchg
add
data16
nop
xor
ja
dec
jno
jns
add
inc
ljmp
cli
xchg
ror
ss
sbb
and
xchg
add
fdivrl
pop
mull
scas
call
subb
fistpll
jbe
or
push
fnstcw
cmp
outsb
ljmp
in
xchg
ds
test
icebp
data16
mov
pop
cli
add
rcr
xor
cli
negb
add
clc
add
add
shr
cmp
adc
ljmp
sub
add
add
xchg
add
insl
jle
call
xchg
cli
pop
and
add
out
out
cmp
cmp
adc
xchg
outsl
mov
jp
xor
inc
add
mov
jne
inc
enter
push
aad
add
add
sub
cmpsb
ds
mov
jecxz
dec
repnz
stos
adc
fwait
ss
jp
xchg
and
or
adc
data16
in
xor
adc
or
pop
pusha
mov
sbbb
push
popf
jmp
adcl
cltd
xchg
xchg
dec
loope
adc
shrb
mov
cld
add
in
dec
or
add
int
data16
push
or
aaa
cmp
in
fsubl
test
dec
mov
mov
fisttps
adc
xchg
ja
mov
dec
dec
cltd
popa
test
add
popf
jge
jmp
lock
add
cli
jge
xchg
inc
dec
push
push
mov
add
ja
cmp
xor
mov
bound
xor
fwait
in
outsl
add
xor
add
push
cmp
dec
jne
outsl
jecxz
popa
ror
inc
mov
xchg
mov
repz
add
loopne
pop
add
adc
add
stos
mov
add
mov
testl
cld
mov
pop
imul
mov
mov
in
xchg
std
sbb
out
adc
movsb
stos
add
les
aas
inc
mov
shll
xor
pop
push
lahf
jnp
add
fadds
sub
jbe
push
jbe
out
mov
clc
push
add
mov
xchg
popa
add
dec
jl
pusha
add
ret
cmpsl
lret
or
jae
push
lcall
add
mov
xor
push
adc
add
adc
add
push
push
xor
aaa
lret
cmp
jno
popa
mov
push
pop
shll
test
jecxz
add
add
cmp
push
mov
mov
es
in
fwait
add
xlat
mov
lret
jecxz
mov
push
shrb
pop
push
mov
xchg
inc
lea
add
add
jb
add
fsubrs
push
rclb
add
sbb
sbb
jecxz
lret
mov
or
in
arpl
inc
pushf
cmpsl
jo
jne
jbe
xor
add
cmpsb
push
mov
into
mov
in
jae
add
xor
lret
ficoml
xchg
imul
arpl
fists
mov
jmp
and
add
stos
in
lods
inc
add
xchg
jnp
push
add
add
or
cwtl
fimuls
roll
jno
loope
cs
adc
jmp
jae
cmp
add
push
add
add
fistpll
or
lods
add
add
out
cmp
dec
divl
xchg
or
xchg
xlat
mov
add
xchg
add
fildl
push
dec
mov
lea
sbb
sub
aas
iret
test
and
push
std
add
add
add
or
xchg
jg
repz
add
repnz
fadds
les
jl
mov
inc
adc
adc
fstp
xor
add
loopne
and
cmc
add
add
inc
lahf
popf
gs
add
ljmp
hlt
icebp
add
or
jmp
mov
push
cmpsb
sbb
clc
add
push
add
add
int3
cmp
xchg
sbbl
es
jle
jecxz
daa
dec
inc
mov
add
xlat
add
and
add
cli
loope
mov
xor
mov
lods
popa
dec
add
inc
pop
das
and
jp
xchg
cld
add
add
add
mov
hlt
xorl
subb
mov
xchg
xchg
cli
dec
je
xlat
add
inc
xchg
lock
pop
push
pop
icebp
andl
dec
mov
or
push
sbb
out
lcall
add
pop
mov
clc
jp
pop
add
loop
adc
pop
add
test
jns
imul
in
jge
jl
jno
add
lea
fcmovnu
xchg
popf
mov
lock
adc
movsl
xchg
movsb
lahf
sbb
xchg
dec
add
add
cmp
push
icebp
mov
push
jmp
adc
into
sbb
and
xchg
mov
fwait
add
inc
call
lret
lcall
cli
add
push
mov
add
adc
fadds
mov
add
or
rolb
pop
add
movsl
adc
xchg
add
jb
dec
xchg
lds
mov
mov
jl
data16
cmp
adc
push
cmpsl
add
cltd
ds
mov
adc
mov
add
cld
aad
lahf
xchg
cs
lods
add
aad
cmp
mov
cmpsl
mov
add
lock
into
enter
js,pt
jnp
repnz
push
mov
xor
rcrl
push
add
cmpsl
popa
xor
add
add
movsb
add
stos
mov
rcrb
jecxz
lahf
ljmp
decb
xchg
sarb
cmp
fcoms
outsl
or
inc
add
adc
test
sub
add
add
mov
inc
in
dec
mov
add
jmp
add
cmpsb
fldl
cmp
stos
inc
sub
loopne
in
mov
mov
add
mov
gs
sub
lods
xchg
mov
out
cmc
add
xchg
push
push
dec
sbb
add
jns
sub
xchg
pusha
enter
fnstcw
pusha
rcr
test
stos
rolb
out
test
cmp
jl
jb
in
inc
xor
xchg
roll
jmp
add
test
add
adc
mov
mov
mov
test
add
xlat
pop
das
stos
inc
imull
subb
push
dec
popf
jnp
loope
fs
lea
xor
dec
packsswb
rcrl
adc
hlt
into
pop
jbe
pop
sbb
pop
lcall
addr16
mov
or
dec
add
fildll
shrb
addb
mov
pop
mov
outsb
jge
cltd
and
sbb
gs
mov
add
and
es
xchg
out
les
xchg
clc
add
add
or
cmp
jg
add
mov
iret
dec
jecxz
sub
add
cmp
pop
mov
xchg
add
and
xchg
aaa
jp
or
xchg
lret
cmp
addb
add
adc
sahf
jo
add
int3
adc
call
add
dec
add
add
mov
add
subb
imul
add
dec
add
mov
stos
popf
adc
push
fimuls
and
les
test
in
jp
dec
imul
cmp
inc
add
xchg
xor
lock
insb
jmp
rcrl
ljmp
push
dec
mov
outsl
add
fldl
es
mov
add
movsl
pop
mov
add
add
xchg
fisubrl
adc
push
cld
cmp
cmp
subl
mov
add
stos
pusha
add
add
lods
ret
jbe
mov
inc
es
push
fs
mov
sub
or
sbb
loop
cmc
cmpsb
fimuls
push
pop
repz
scas
push
dec
pop
and
push
fstpl
sub
pop
pop
inc
adc
xchg
add
add
xchg
mov
add
pop
sub
push
mov
add
add
and
mov
mov
mov
jns
mov
or
add
add
jl
fadds
rclb
add
add
test
and
loop
or
jp
cmpsb
ret
pop
cmpl
fistps
bnd
mov
shrl
in
int3
inc
pop
or
push
add
dec
jo
sarb
mov
mov
bound
xchg
cmp
push
test
sar
rclb
mov
inc
jb
roll
mov
aad
jg
jecxz
push
into
dec
jge
and
repz
pop
outsl
add
lahf
adc
pop
jp
fs
pop
cmp
mov
jne
add
mov
add
mov
mov
add
data16
mov
dec
add
lret
fisttpl
adc
push
xchg
and
mov
inc
ficoms
xor
mov
pop
add
pop
jno
add
fsubrs
adc
xchg
dec
add
icebp
rol
sub
jnp
and
repnz
mov
add
daa
or
add
sub
mov
imul
pop
iret
insl
popl
flds
in
notb
stos
xchg
pop
test
sub
imul
sbb
inc
pop
in
mov
jb
jg
and
mov
arpl
popw
push
fwait
std
pop
fdivs
dec
ja
cmp
ficompl
or
cltd
mov
shll
mov
adc
cmc
mov
push
dec
stos
dec
pop
mov
pop
jg
add
and
jnp
cmp
mov
jns
jae
jge
or
arpl
xchg
sbb
add
and
sbb
inc
insb
mov
into
and
mov
add
xchg
push
add
mov
in
add
mov
cld
dec
jl
push
lock
jbe
leave
aaa
push
dec
pop
add
mov
cmp
cmp
jmp
add
test
cli
ret
jp
xchg
and
sti
add
jbe
xchg
out
jne
add
push
sub
mov
test
in
cs
nop
in
mov
or
sahf
out
sbb
cmp
dec
mov
imulb
call
xlat
and
ja
sbb
lds
push
add
ljmp
cmp
mov
mov
push
mov
or
sbb
mov
xacquire
fistl
cmpsl
loop
sbb
jecxz
dec
adc
xchg
cmp
sysexit
inc
xor
popa
bound
rorl
push
aad
mov
mov
das
add
aad
inc
into
sbb
bound
ror
xor
stos
jno
testb
jns
jp
add
add
add
rclb
cmp
push
movb
add
add
loop
add
add
add
add
insb
sbb
sbb
pop
mov
mov
cmp
add
aas
adc
ret
and
pop
push
add
or
add
add
data16
aad
dec
les
lods
mov
mov
jecxz
ret
dec
addl
rolb
imul
pusha
jbe
movsb
sbb
pusha
push
cmp
jns
insl
mov
ret
call
cld
inc
movsb
mov
shlb
mov
add
mov
sti
rclb
int
cwtl
sbb
sahf
mov
push
popf
sub
or
insb
jnp
lea
in
jle
clc
outsl
add
add
add
dec
push
outsl
adc
push
push
jne
sbb
mov
sub
add
dec
pushf
push
add
jl
add
push
jae
mov
psubusw
out
lods
nop
push
add
fildl
jmp
fs
cltd
sarl
lods
xor
add
add
cltd
sbb
adc
fcoms
jmp
cld
test
mov
aam
sub
dec
inc
mov
dec
pop
dec
in
add
lods
pushf
stc
push
add
shl
das
add
sbb
gs
insb
adc
loop
insb
xchg
xchg
es
sub
lret
inc
inc
push
sub
cmp
pop
xchg
sub
and
lret
xor
aam
push
push
inc
cmp
and
add
add
sbb
movsl
jb
out
js
in
add
push
aam
gs
jle
inc
xchg
push
cmpsl
dec
push
mov
jb
mov
repnz
fdivr
dec
incl
ds
adcl
add
cld
neg
pop
push
add
cs
inc
cmp
add
inc
add
cmp
rsm
pushf
fbld
scas
add
mov
sub
pop
add
add
sbb
loope
sub
add
movsb
pop
clc
add
js
cmp
mov
lret
adcl
call
add
imul
cwtl
adc
imul
lcall
cmpsb
add
bound
xchg
xor
dec
push
add
add
add
pop
test
jmp
movsb
inc
fmul
jo
pop
lods
dec
cmpsl
add
xchg
into
mov
cwtl
leave
fadds
add
xchg
and
arpl
mov
mov
stos
sbb
push
jo
pop
repz
hlt
sub
cmp
or
adc
cmp
jle
push
sti
mov
sub
popa
test
imul
pop
inc
and
mov
fisubrl
mov
push
dec
jns
jmp
aas
addr16
out
add
outsl
xchg
pop
mov
or
ja
or
cltd
xchg
mov
add
jl
aad
push
jg
pop
mov
push
cmp
adc
jecxz
sub
scas
mov
loop
push
xchg
xor
arpl
jmp
out
or
mov
xor
fdivrl
mov
pop
mov
pop
mov
mov
fs
sub
jmp
pop
add
add
add
mov
popl
sub
ja
daa
xorl
outsl
clc
push
push
rolb
clc
inc
addr16
in
sbb
dec
mov
adc
add
cmp
es
mov
movsb
add
add
xor
stos
insl
mov
sub
repnz
je
xor
cmp
sbb
out
adc
imul
adc
out
xchg
movsl
pop
xor
movsl
add
roll
add
das
add
dec
jne
mov
and
mov
push
icebp
popa
cmpsl
adc
in
lock
out
gs
out
add
nop
out
roll
push
jl
loope
test
inc
scas
js
stos
mov
jo
fiadds
inc
test
ljmp
mov
jmp
test
scas
cmp
xchg
mov
fdivrs
insl
sbb
adc
mov
les
mov
mov
xchg
add
push
jnp
scas
adc
clc
add
dec
sub
dec
push
lret
xor
cmc
dec
dec
insb
pop
push
loope
roll
decl
jnp
stos
ficompl
xor
popa
add
mov
dec
sbb
cwtl
inc
push
popa
fcmovnb
sbb
sub
pop
add
mov
add
lahf
xchg
lea
cmp
push
jecxz
dec
adc
xorl
sub
mov
push
add
sqrtps
jg
mov
cmpsb
scas
jno
mov
sbb
or
sub
adc
mov
add
repz
sbbb
jbe
int
shrl
jne
outsb
ja
ret
test
cmp
mov
dec
sbb
in
cld
adc
cmp
into
jg
out
outsl
sbb
mov
and
cmp
rcll
mov
push
sbb
lds
mov
adc
insl
sub
cmp
in
adc
jo
and
dec
fcomps
add
dec
js
pushf
lret
outsb
or
pop
testb
mov
jle
shlb
push
adc
shlb
mov
sbb
mov
int3
add
lea
add
fxch
outsl
popa
ret
jns
xor
hlt
adc
add
add
mov
cwtl
dec
icebp
mov
dec
jno
dec
cmp
test
or
xchg
xchg
mov
mov
int
sbb
in
push
mov
xchg
int
xchg
in
xchg
data16
add
inc
or
out
sub
adc
std
enter
jnp
repz
mov
into
sub
or
add
sub
add
stos
lods
mov
psubusb
lahf
std
xchg
jo
dec
cmpsb
lcall
dec
sbb
rcrb
add
shr
adc
sahf
in
add
sub
add
addr16
add
push
push
fcmovne
inc
imul
jmp
out
mov
pop
cmp
test
mov
xchg
clc
pop
cmp
dec
add
mov
sub
mov
sbb
bound
add
mov
sub
mov
mov
add
lods
and
std
dec
xor
movsl
pop
add
lock
and
call
mov
mov
out
mov
out
pop
add
add
jb
xor
lds
ret
lcall
add
popf
fistps
mov
xchg
jne
add
mov
sbb
dec
ds
dec
jo
popa
add
clc
mov
and
lahf
loope
lahf
cmpsb
mov
or
pcmpeqb
imul
loopne,pn
gs
add
mov
cld
in
imul
mov
push
sbb
scas
inc
jl
add
mov
pop
jecxz,pn
pop
push
push
mov
and
leave
packuswb
fwait
sbb
adc
xor
pop
xor
icebp
sahf
or
les
sti
xchg
push
xor
mov
out
pop
add
mov
addr16
adc
mov
push
fisubrs
add
add
sub
mov
pop
or
push
mov
test
fldl
sbb
ret
xor
add
js
je
pop
push
mov
movsb
cli
mov
jle
aad
add
outsb
jb
insl
pushf
pop
stc
dec
iret
inc
shlb
ss
in
add
stos
dec
adc
pop
xchg
inc
insb
icebp
arpl
add
inc
or
xchg
add
jns
mov
pop
lock
stc
outsl
mov
or
xorb
pop
pop
mov
lret
add
mov
jno
loope
add
fistpl
lds
add
scas
mov
addr16
dec
in
mov
jb
pop
inc
and
jbe
mov
shl
and
movsl
roll
adc
sub
cltd
pop
ljmp
add
out
repnz
and
mov
sub
add
cwtl
cmp
or
frstor
pop
cmp
mov
xor
and
cmp
add
dec
into
mov
lahf
jno
mov
ljmp
rcrb
add
leave
ja
out
ret
cmp
out
sbb
inc
add
icebp
pop
dec
aas
sahf
mov
popf
inc
sbbb
daa
xchg
inc
xor
jp
add
add
insb
and
xlat
adc
mov
addr16
dec
pop
add
addl
shlb
push
sarl
adc
lahf
out
xlat
add
data16
insb
fs
cmc
sub
mov
push
cltd
dec
add
and
shlb
cmpsb
add
xchg
inc
add
gs
add
add
lcall
addb
jns
add
jb
outsl
ret
mov
add
sub
add
popf
pop
add
adc
insb
mov
add
xchg
arpl
jge
add
sub
pop
out
js
fadds
cmpsb
movsl
mov
add
jmp
push
imulb
push
rorl
jbe
sbb
adc
add
mov
outsl
mov
or
or
pop
loope
sub
lret
and
adc
cmpsl
xchg
aaa
stos
push
cltd
mov
movsb
sti
add
add
int3
add
nop
add
mov
push
jne
xlat
mov
add
xlat
out
add
aas
lds
push
js
mov
test
push
and
cmp
ljmp
mov
and
push
ret
cli
lret
scas
pushw
or
adc
xchg
cmpsl
leave
xlat
mov
push
je
in
push
mov
std
roll
fildll
xchg
adc
loop
scas
ja
ljmp
jne
add
test
add
push
aam
into
xchg
add
popl
add
fnsave
pop
aas
or
in
inc
sahf
outsl
test
clc
xchg
movsl
jno
out
add
add
cwtl
mov
std
cmp
dec
test
add
pop
pop
aad
test
add
cmp
cmp
out
cmp
mov
xchg
int3
add
mov
loope
pop
add
mov
popa
xor
sub
out
popa
add
add
add
gs
jbe
lret
pop
jp
pop
and
dec
add
shrl
mov
add
push
add
les
xor
cmc
jmp
loope
ret
xchg
push
xchg
adc
add
jge
gs
dec
sub
push
ret
jae
std
lods
xchg
add
cli
inc
fcmovnbe
aaa
aas
mov
add
pop
orl
push
add
push
sub
sbb
jge
not
adc
add
mov
adc
xchg
fbstp
inc
pop
es
outsl
lods
pop
test
sbb
mov
or
xchg
out
icebp
lock
adc
push
out
add
add
mov
adc
fwait
jbe
add
outsb
inc
notb
sbb
comiss
nop
std
sbb
lret
dec
in
push
and
xor
filds
mov
mov
sub
pop
sub
lret
pop
mov
mov
insb
add
and
out
or
jmp
xchg
xchg
mov
lahf
decb
adc
outsl
subl
add
mov
push
cli
xor
cmp
test
adc
jl
imul
pop
test
add
sub
in
mov
verr
inc
dec
pushf
ja
cmp
xor
aad
sbb
adc
adc
lods
mov
rol
pop
cli
loop
hlt
mov
adc
es
pop
jo
mov
cmp
test
int3
sub
push
aaa
push
xor
rcrl
mov
push
mov
ja
mov
push
add
mov
adc
sbb
sub
into
pop
and
pop
inc
dec
out
into
push
andl
push
prefetchnta
push
mov
scas
xchg
maskmovq
testl
lods
imul
data16
scas
rcrb
mov
mov
dec
and
or
or
aam
xchg
ss
mov
add
ficoml
push
nop
mov
add
jns
loope
sub
add
mov
cmp
std
add
push
add
dec
aad
mov
cmp
xchg
movsb
mov
xchg
cld
lret
add
neg
sub
lret
fcompl
in
pushl
mov
test
ja
ret
add
push
filds
mov
decl
add
jns
add
jbe
imul
add
jmp
pop
int
push
add
dec
fisttps
push
mov
loop
fs
stc
sbb
loope
pusha
aaa
add
add
push
incb
inc
sti
add
push
fmul
mov
dec
xchg
stc
xchg
sti
scas
scas
mov
xchg
cwtl
pop
push
lahf
mov
add
std
xor
cmp
js
inc
pop
push
xchg
int3
pop
push
push
add
in
inc
mov
ljmp
lret
roll
cld
leave
and
add
repz
cltd
in
filds
int3
rolb
pop
andl
add
sub
inc
dec
movsb
pop
mov
cld
outsl
add
mov
int
enter
inc
inc
xchg
mov
testl
in
or
arpl
add
dec
xchg
das
addr16
aaa
mov
add
push
pop
xchg
add
pop
fisttps
mov
es
mov
inc
fdivp
dec
movsl
loopne
lret
es
mov
inc
jp
and
cwtl
lret
add
iret
popl
lahf
popa
push
pop
roll
aam
xchg
test
add
cwtl
inc
leave
sarl
add
xchg
or
cmp
mov
or
pop
add
add
data16
test
sbb
add
sbb
add
mov
add
hlt
add
insb
cmp
stos
mov
add
or
loop
cmp
pusha
add
pop
mov
es
mov
ffreep
jnp
xchg
imul
push
incl
or
push
fstpt
xchg
or
sub
cmp
xor
pushf
and
cmp
mov
ljmp
push
addr16
clc
aaa
cmp
add
aam
xlat
add
pop
add
ret
add
add
adc
loop
add
sarl
cmpsl
pop
add
sbb
or
testl
jmp
push
nop
popa
add
add
outsb
daa
scas
jb
jo
daa
imul
bound
daa
xchg
sub
insl
add
pop
js
add
cltd
and
shll
dec
mov
loopne
sub
pushf
sahf
mov
loop
add
stc
cmpsb
mov
bound
popa
cmp
push
mov
lods
dec
jle
push
xor
es
cmp
call
mov
sbb
xchg
or
leave
int3
xlat
sub
or
add
fiadds
das
testb
jo
add
xor
push
addl
lahf
outsl
cmpsl
icebp
and
js
jecxz
or
mov
mov
fcomip
jns
add
add
add
add
fs
or
mov
clc
adc
scas
bnd
xchg
mov
dec
cli
sahf
stos
inc
sbb
inc
pop
mov
inc
out
je
add
push
aaa
jl
imul
add
mov
push
add
pop
mov
dec
xor
push
stos
xchg
mov
dec
inc
sbb
jbe
wrmsr
xchg
push
sbb
mov
pop
jns
inc
xchg
imul
add
mov
adc
jp
out
mov
add
cli
mov
in
out
sbb
adc
and
sub
dec
xchg
add
add
add
or
daa
scas
aam
in
add
xchg
pop
inc
push
and
cli
stos
xor
inc
xor
std
cmp
mov
sahf
mov
mov
and
in
rcll
movsb
cltd
add
and
adc
adc
fwait
mov
icebp
mov
jo
or
dec
mov
inc
lods
nop
dec
sbb
loopne
in
add
stos
jl
adc
out
and
sahf
stos
sti
add
push
addr16
insl
and
xchg
jns
and
add
es
xchg
xchg
popa
pop
push
rorb
xor
inc
add
add
xor
cmp
pop
cmp
jg
std
add
push
fwait
mov
sbb
add
and
mov
add
xchg
xchg
adc
cmpsb
clc
lret
add
mov
sahf
jo
push
daa
sub
add
jl
mov
add
dec
push
enter
add
outsb
mov
dec
lret
push
mov
mov
jne
clc
clc
mov
int3
xlat
in
pop
scas
cmpsl
add
push
sbb
jno
insb
call
adc
push
push
mov
cmp
sub
shll
lahf
je
jno
fwait
sbb
pop
pop
ja
mov
add
movsb
jp
clc
add
daa
add
add
mov
lret
pop
cmp
fisttpll
into
pop
push
mov
sub
jns
incb
popa
mov
out
cwtl
dec
stos
add
repnz
xor
stos
cmp
les
lret
dec
add
add
and
push
out
pop
lds
and
add
sahf
add
cwtl
add
push
cmpb
add
pushaw
popa
scas
out
pop
outsb
pop
push
add
jp
add
jl
lds
roll
add
shrb
stos
insb
fwait
mov
leave
cs
stos
lods
pop
mov
add
add
jmp
out
out
add
loop
add
add
mov
add
mov
xor
cld
pop
arpl
dec
jb
and
jg
rcll
test
pusha
add
and
cmpsb
mov
arpl
mov
sbb
aam
push
faddl
adc
pop
fwait
orb
bound
add
add
cmp
es
movsl
pushf
aas
add
stos
cmc
cmpsb
jo
pusha
add
add
mov
mov
add
icebp
lret
imulb
jb
stos
rolb
dec
dec
lret
fadds
iret
insl
out
mov
stc
xchg
jp
popa
cwtl
pushf
movsl
mov
mov
int3
or
sbb
pop
inc
jae
out
ficoml
test
or
aam
push
dec
push
lea
xorl
shrb
push
imul
add
orl
pop
pusha
sbb
or
gs
js
adc
jg
adc
pop
add
sub
jae
sbb
push
adc
arpl
cmpsl
in
lcall
add
sti
add
ljmp
stc
add
addb
cmp
or
test
insb
cwtl
add
mov
fnstsw
int
jne
lea
add
jmp
add
add
add
add
xchg
pop
aad
addr16
verr
pop
dec
movb
popf
adc
xchg
cwtl
push
add
push
lcall
das
lret
jae
mov
fs
add
jle
lcall
push
inc
or
add
stos
sub
add
pop
pusha
nop
sub
mov
out
sbb
mov
cmpsb
adc
stos
pop
mov
xor
nop
lock
adc
add
and
aaa
test
sahf
sbb
mov
sbb
std
cmp
fmull
cld
pop
jl
jmp
fwait
add
mov
jns
xchg
add
xchg
cmp
xor
std
shr
jb
lret
out
inc
sub
flds
pop
push
jmp
add
ret
in
jp
testl
pop
and
xchg
fiaddl
push
push
mov
loop
insl
das
outsb
stos
imul
dec
bound
clc
gs
lret
les
mov
mov
add
push
sti
ja
orb
xor
mov
add
enter
push
jnp
shrb
add
outsl
xchg
mov
ss
das
mov
sub
mov
test
loop
add
add
cmpb
cmp
add
mov
mov
adc
mov
outsl
iret
jno
xchg
pop
and
roll
pushf
adc
sbb
in
xor
jae
or
add
add
pop
out
cmpsl
roll
movsb
jns
sub
jp
xor
cmp
sub
das
adc
out
popf
add
add
xchg
mov
add
negl
js
nop
lea
push
and
push
in
adc
shr
fists
shrl
sbb
inc
push
adc
mov
cmpsb
leave
adc
popa
add
insb
es
mov
popa
add
dec
mov
add
into
lea
xchg
sarb
xchg
sbb
sbb
insb
insl
sbb
adc
pop
dec
push
test
int
mov
int
add
sub
xchg
pop
and
insl
in
dec
adc
add
cld
arpl
mov
xor
bound
mov
rcl
push
repz
sti
cwtl
adcl
out
shrb
xchg
xor
cmc
xor
ficompl
inc
inc
out
sub
push
jmp
repnz
cmp
enter
movl
loop
sti
xor
cmpsb
mov
fwait
aad
inc
or
imul
cmp
inc
mov
movl
clc
xor
insl
out
lds
ljmp
cwtl
add
add
shl
fnstenv
add
add
and
fwait
jle
dec
push
pop
add
add
sbb
mov
sbb
or
mov
repnz
mov
inc
cmp
sahf
or
push
xchg
je
push
pop
in
jns
rol
push
cmc
into
dec
imul
cltd
leave
bound
or
pop
push
gs
and
pop
pop
or
xchg
inc
add
movsl
fcoms
push
mov
add
adc
cmc
mov
stc
jle
lods
bound
xchg
add
cld
adc
mov
xchg
xchg
xchg
decl
sub
push
stos
sbbl
inc
push
xchg
jns
add
mov
cmp
cmpsb
jb
dec
ss
testl
in
ret
pop
rcl
lahf
cli
and
adc
sub
mov
cli
cltd
sub
xchg
or
add
add
andb
push
loopne
out
add
imul
dec
mov
dec
mov
add
push
stos
push
ss
jns
test
in
clc
add
add
adc
jmp
sub
sbb
mov
pop
dec
dec
lahf
cmpl
add
or
rcrl
loop
xchg
insb
jne
add
add
jno
mov
mov
mov
jno
movsb
loopne
test
dec
pop
aam
roll
pop
and
shl
xor
jmp
jle
jmp
jle
xor
sbb
add
push
xor
cld
pop
call
cmp
add
into
adc
sub
xor
iret
out
out
insb
add
pusha
mov
mov
sub
push
loope
das
cmpsl
js
popf
bound
fmull
mov
cwtl
jns
cmp
cld
add
lahf
pop
add
push
addb
add
push
cmpsb
in
xchg
cmp
clc
loop
test
mov
arpl
xchg
push
data16
cli
hlt
pop
pushf
jae
cmp
jl
mov
xlat
add
push
or
cmp
or
dec
subb
je
sbb
shr
add
and
sbbl
les
loop
into
add
cmp
mov
fcom
loope
add
jb
cli
and
lock
aad
add
mov
sub
mov
add
inc
in
add
in
movsb
aam
push
add
dec
pop
push
add
shl
add
mov
xchg
cmp
mov
hlt
cmp
sub
stos
dec
aam
sub
sub
sbb
jns
add
into
add
adc
mov
ret
inc
sub
xor
nop
add
xchg
jmp
mov
mov
xchg
push
loop
sbb
les
fmul
stos
mov
ss
adc
pop
adc
aad
aam
aam
add
add
xchg
cs
add
sub
adc
ret
add
add
mov
add
jmp
loope
loope
lcall
cmp
std
add
test
fadd
and
inc
les
loopne
addl
and
nop
xchg
xlat
push
xchg
add
jmp
out
xor
add
int3
popa
into
xchg
pop
add
push
push
filds
and
test
in
xchg
in
enter
add
subl
fstpl
add
fisttps
ss
lret
repz
scas
cmp
mov
add
xchg
sbb
jae
inc
std
les
push
out
jle
xchg
and
out
xor
sti
outsb
loope
adc
push
xor
push
lds
pop
add
pop
mov
fwait
inc
xchg
rorl
jno
push
loop
ljmp
ret
lahf
sbb
fstps
repz
pop
add
fwait
jne
fwait
outsl
scas
add
cmpsl
inc
test
xor
into
lods
xor
in
sub
fs
movsl
lods
inc
inc
addb
adc
jne
nop
and
lret
mov
dec
iret
lock
fisttpll
cli
fcmovne
mov
inc
in
pop
lcall
pop
add
add
jp
js
add
pop
push
mov
ret
pop
enter
and
je
dec
or
fstp
push
push
sbb
fcompl
sub
mov
add
out
bound
stc
inc
xchg
pushf
add
movsb
and
cmp
xchg
cmp
scas
int3
idivl
push
dec
dec
jecxz
lahf
inc
add
add
add
mov
push
cmp
fwait
push
add
inc
jge
jle
and
cld
lahf
sbb
divb
push
nop
add
xchg
insb
rcrb
cld
int3
sbb
jne
out
mov
and
call
or
fsts
and
dec
or
mov
add
jmp
jne
and
xchg
mull
cmc
pop
in
cltd
lcall
pop
ret
xor
mov
shll
stos
or
inc
and
adc
mov
add
dec
adc
lods
add
add
les
jne
je
add
adc
inc
out
sbb
stos
mov
loopne
scas
mov
jnp
out
fbld
jbe
sahf
xor
sbb
xor
mov
jmp
jae
sub
lret
popf
pop
test
pop
imul
and
shl
jl
dec
lret
add
xchg
popf
out
jb
jg,pt
hlt
push
orb
sbb
add
je
js
in
xchg
ja
add
pushf
adc
lret
add
mov
loope
inc
scas
push
mov
add
jb
movl
addr16
je
pop
jns
je
or
or
scas
mov
mov
cmp
popa
add
adc
enter
xor
loop
js
mov
xchg
push
rolb
in
testl
scas
mov
dec
dec
repnz
add
aad
add
push
push
add
jecxz
iret
js
and
add
popl
adc
rorb
add
mulb
je
mov
dec
jp
fwait
and
inc
sahf
add
push
sub
mov
jp
test
add
iret
mov
testb
mov
outsl
daa
adc
test
push
or
cmp
push
ret
inc
pop
pop
add
pop
add
or
jg
push
xchg
test
scas
adc
add
call
js
jmp
sub
es
add
sahf
cmp
lock
loope
stos
mov
cmpsb
cmp
cmp
jl
add
scas
flds
aas
add
mov
jae
into
push
jmp
jge
cmp
popf
inc
shlb
dec
lds
sub
push
add
shr
jg
movsb
enter
inc
aas
outsb
add
sbbl
dec
decb
movaps
mov
data16
add
ret
fmuls
inc
add
in
int
bound
push
jns
push
ds
icebp
rorl
jns
add
das
mov
dec
es
add
pop
add
imul
xchg
aas
and
inc
roll
incl
or
lret
mov
cmp
mov
push
xor
aam
loop
aas
repz
add
leave
popa
and
jmp
rclb
scas
cltd
call
or
add
add
repnz
loope
das
mov
ret
add
mov
imull
and
or
pop
cmp
add
loopne
pop
add
negl
loop,pt
xchg
rcr
loop
push
imul
scas
daa
lods
xorb
and
xchg
xchg
add
imul
testb
inc
mov
js
ret
xchg
stos
inc
testb
insb
pop
nop
jl
adc
stos
dec
jg
mov
add
loope
pop
add
repz
mov
xor
push
push
sub
jp
andl
ficomps
sbbl
add
jecxz
cmc
xchg
xchg
fldz
pop
cmp
pop
pop
cltd
pushf
in
in
sbb
jnp
std
adc
mov
fisttpl
adc
ret
shrb
aad
gs
dec
xor
jmp
cmp
inc
dec
clc
cmp
pop
mov
or
and
add
pop
push
add
cmp
inc
pop
pop
js
cmp
out
sub
test
push
pop
popa
adc
sti
add
ficoml
test
ret
daa
adc
mov
add
les
movl
pop
add
mov
dec
mov
stos
imul
dec
inc
inc
add
add
add
cmp
dec
loopne
imul
stos
ss
rorl
or
imul
nop
add
outsb
cmp
ret
sub
or
fucomp
push
add
std
pop
add
test
xor
jg
add
dec
sub
add
stos
aas
ljmp
jnp
ss
out
add
cmpsl
and
sbb
add
push
ds
jb
fsts
add
adcb
out
or
xchg
pop
aas
add
loopne
add
add
push
sahf
flds
add
ret
scas
in
jmp
jno
adc
inc
out
push
jno
add
call
xchg
lahf
jg
popf
mov
mov
sub
push
bound
jecxz
cmpsl
mov
aaa
jle
addl
sbb
imul
or
lahf
cwtl
in
pop
faddl
lret
add
test
mov
mov
arpl
popa
push
loopne
loopne
aad
out
fisubrl
and
inc
mov
add
add
ret
mov
add
inc
add
jge
ret
xchg
popa
sbb
inc
or
lods
add
and
sbb
jo
push
fdiv
jge
std
stc
push
pop
popf
add
add
mov
push
jne
negb
stos
ja
jnp
into
outsl
pop
aad
push
sub
js
ja
jb
aas
loop
inc
js
int
lcall
xchg
add
out
sarb
add
cmc
add
in
xchg
jbe
ja
add
test
sbb
mov
mov
add
sbb
mov
lea
clc
inc
fwait
mov
jle
out
and
shl
std
mov
repz
imul
and
add
add
repz
add
mov
xchg
dec
sub
out
lahf
mov
add
out
xchg
scas
int
add
inc
pusha
scas
add
mov
ljmp
pop
add
mov
cmp
js
pop
ret
addl
lahf
inc
scas
add
jp
lock
daa
mov
add
jo
adc
sub
stos
add
jmp
iret
cmpsb
out
lock
mov
loope
lds
je
insl
or
cmc
data16
dec
fs
push
adc
fldl
or
jl
xchg
xlat
add
or
imul
and
add
add
out
push
xor
mov
inc
lods
out
jp
add
adc
les
jne
or
add
mov
mov
xchg
cwtl
dec
add
jp
loope
das
adc
daa
into
or
jae
dec
or
mov
jmp
adc
popa
sbb
pop
scas
xor
in
lret
sub
shll
xchg
les
xchg
push
pop
sbb
xchg
pop
mov
push
fadds
push
pop
push
dec
mov
xchg
lock
add
xlat
add
cmp
add
repz
shrb
cmp
hlt
test
sub
jge
inc
leave
adc
add
or
addl
add
sbb
loope
sbb
xchg
push
inc
xchg
je
lds
outsb
push
jle
mov
aam
scas
cmp
pop
cmp
shll
outsl
xlat
andps
std
xor
je
mov
movb
in
pop
imul
pop
clc
push
mov
inc
jnp
push
or
sub
mov
shl
lahf
add
enter
rorb
add
out
pop
xchg
add
jg
xchg
mov
out
xor
and
lods
sbb
sahf
cld
cmpsb
div
add
sub
out
inc
dec
dec
ret
daa
in
out
js
inc
das
add
xchg
dec
sub
aad
mov
aad
xchg
adc
addb
nop
add
jg
push
lret
fstpl
add
add
cmp
jg
inc
outsb
aas
jae,pt
or
xor
add
add
xchg
jbe
sbb
xchg
enter
insl
mov
and
mov
add
popf
outsl
jle
ret
cmpsl
jmp
lcall
add
sbb
sbb
lock
xchg
movsl
mov
fs
pushf
fildl
mov
js
adc
divl
movsl
jo
jg
jmp
fbld
pop
test
add
inc
add
dec
movsb
popf
and
sub
lret
xor
xchg
popa
test
cmc
es
pop
jle
sub
lea
ret
push
xor
pop
push
dec
mov
add
test
imul
mov
mov
dec
mov
add
nop
andb
dec
lods
inc
add
mov
mov
add
add
outsl
pop
mov
mov
and
mov
out
fcomps
cmp
xlat
sti
sbb
dec
pop
call
sub
scas
pop
push
outsl
pop
add
or
jle
cld
popf
push
jmp
inc
mov
cmp
jg
faddl
aaa
cmc
add
pop
lcall
movsl
inc
es
mov
cltd
sub
sahf
push
mov
xchg
add
sbb
or
enter
test
push
add
out
adc
addr16
js
lods
lds
jb
loopne
test
icebp
inc
ret
add
xor
add
add
sbbl
in
xchg
adc
lds
ficoms
and
out
in
add
xor
sbb
insl
outsl
sahf
roll
add
es
stos
scas
mov
mov
lods
or
fsub
jbe
insl
faddl
xchg
mov
imul
add
in
add
jo
add
ret
push
cmp
or
add
or
popf
cmpsl
das
mov
stos
shrb
icebp
jbe
les
push
jle,pt
adc
fcom
mov
inc
inc
xor
dec
aaa
test
add
jg
aad
stc
data16
lret
add
out
mov
mov
shll
in
fwait
pop
jg
push
dec
jl
fdivl
inc
add
dec
jg
fwait
cvttps2pi
lahf
xor
pop
mov
add
mov
mov
inc
mov
add
dec
xor
fimull
mov
sub
add
inc
cld
mov
imul
dec
mov
and
cld
jmp
push
push
leave
pop
jnp
or
bound
or
out
xchg
repz
dec
xchg
pop
xor
aaa
push
fnsave
push
aas
pop
loop
add
mov
js
push
cmpsl
push
ja
cli
add
push
mov
hlt
xchg
add
mov
out
popf
push
inc
bound
push
sub
add
and
mov
cltd
jbe
mov
inc
pop
loopne
test
sub
sub
jecxz
jae
mov
scas
lahf
xchg
cli
jge
add
cltd
idivb
fadds
xchg
jl
jp
and
and
int
mov
and
arpl
cs
pop
pop
and
sahf
sbb
stos
stc
jl
mov
jbe
cmpsb
insb
or
outsb
mov
sbb
clc
testb
icebp
mov
mov
push
orl
pop
add
inc
mov
dec
sub
arpl
stc
popa
lret
sbb
mov
stc
add
pop
cmp
movsl
out
add
lret
xchg
and
xchg
in
sbb
dec
lds
sbb
add
shll
pop
jp
xor
repz
js
shr
rol
insl
add
movsb
push
lcall
mov
push
hlt
push
filds
jnp
mov
cs
inc
stos
cmp
jl
sub
stos
mov
ret
repnz
rcll
popa
int3
cmp
jnp
scas
sub
cli
add
adc
divl
or
roll
and
xchg
xchg
lcall
filds
and
mov
mov
mov
jmp
mov
xor
cmpsl
aaa
jle
add
push
push
imul
faddl
or
pop
or
add
lds
lcall
rcll
dec
shrl
in
daa
inc
aam
add
data16
jmp
stos
mov
inc
das
or
jg
stc
add
jecxz
fmulp
inc
pop
dec
or
xchg
fmul
sub
les
mov
cmp
in
adc
movsb
gs
mov
out
jmp
pop
mov
mov
dec
stos
cmp
jle
sbb
pop
into
sub
mov
sub
in
mov
pop
testl
mov
jne
xchg
adc
stos
xor
add
dec
jb
aad
push
add
arpl
in
mov
test
jge
push
jnp
and
and
xchg
in
pop
sub
sub
inc
or
inc
xchg
add
sti
lds
push
leave
cwtl
or
add
in
xchg
add
inc
lock
testb
add
xchg
loop
or
scas
adc
scas
sub
or
mov
dec
and
inc
or
outsb
add
add
push
push
add
mov
mov
mov
push
data16
rcrl
inc
idiv
clc
add
push
shr
mov
movb
lds
push
push
add
mov
xor
std
add
mov
mov
fadds
dec
hlt
add
gs
notb
add
jb
xchg
popa
insl
pop
add
js
mov
add
xor
mov
lods
cmp
add
xor
sbb
adc
push
push
xor
mov
inc
shl
add
or
cmpsb
jo
mov
pop
push
jg
or
out
xor
jecxz
add
ss
in
push
loopne
mov
inc
dec
jp
je
mov
dec
add
daa
outsb
popa
iret
cmp
mov
ljmp
or
push
in
insb
or
mov
jg
fwait
test
bound
add
aad
add
jle
ja
insl
add
push
cmp
lea
add
and
cmc
mov
aas
add
add
cmp
shl
or
add
fisubl
xor
add
mov
xor
and
mov
dec
sbb
sub
xor
or
dec
add
cmp
xchg
popa
push
pop
adc
inc
bound
mov
mov
ljmp
hlt
mov
and
int3
add
mul
popa
call
pop
dec
adc
mov
add
add
movsb
pop
add
mov
mov
rorl
cmp
test
dec
bound
flds
mov
adc
jge
sti
mov
mov
xor
add
in
sbb
in
dec
mov
adc
repz
add
outsl
cmp
add
fadds
jns
mov
add
jns
add
sahf
mov
dec
ficompl
pop
or
xchg
jmp
mov
roll
ja
sub
mov
dec
mov
lcall
lcall
add
add
cwtl
mov
add
insb
xchg
int
fnstcw
mov
test
add
test
sbb
lods
test
or
inc
sub
lahf
imul
jnp
xor
mov
add
aam
sbb
movsb
data16
repz
pop
sub
pop
adc
xchg
mov
xchg
bound
xor
jnp
adcb
jne
mov
arpl
test
fcomi
scas
les
cmp
inc
filds
mov
add
jp
cmp
lahf
mov
cmp
mov
testl
mov
cmp
push
add
add
in
xorl
mov
mov
fcmovne
or
pop
add
cmp
push
gs
mov
les
and
mov
in
mov
mov
pop
add
leave
or
mov
mov
movsl
aad
mov
jo
jbe
into
mov
add
xchg
xchg
out
imul
sahf
xchg
mov
push
aas
mov
neg
push
flds
jmp
imul
jbe
daa
vpmullw
pop
jmp
sub
cmp
xchg
dec
mov
add
imul
cli
fcmovne
pop
push
outsb
mov
adc
add
add
movsl
out
adc
mov
push
add
gs
lahf
jp
mov
dec
and
mov
sub
gs
out
adc
insl
push
cmp
movsl
iret
add
or
outsb
hlt
mov
xchg
lea
sti
movsl
inc
lret
pop
and
mov
add
add
xchg
leave
cmp
das
scas
sub
pop
cmp
fiadds
add
iret
add
pop
movsl
sub
nop
add
ljmp
xlat
xchg
das
nop
pop
sub
and
push
jnp
cmc
mov
cmpsl
mov
je
push
int3
xchg
mov
into
cmp
ss
dec
fs
sbb
fdivrl
scas
jl
xlat
imul
cmp
xchg
add
add
xchg
or
sarb
add
add
test
lods
mov
lcall
push
fnstenvs
fcmovbe
pop
lds
std
mov
mov
arpl
test
scas
sbb
in
jbe
test
add
add
jge
ret
test
outsl
insb
stc
lahf
repz
pop
and
sub
cmpsl
adc
add
rolb
add
sub
add
push
hlt
out
in
cmpsl
sub
sbb
sbb
dec
jmp
jp
or
movsl
and
leave
and
fdivrl
add
mov
test
jb
js
sub
stos
movsl
push
dec
sbbl
pop
xchg
dec
in
or
pusha
movsl
push
xchg
add
sbbl
rcll
test
call
xor
dec
mov
add
xor
sbb
scas
stc
ret
mov
xchg
and
lcall
push
push
push
int3
add
popa
mov
push
cmp
push
add
cmc
cli
ret
cmp
test
pop
ret
lret
xor
xor
sbb
gs
aas
and
jp
xchg
icebp
sbb
xor
mov
xlat
enter
sbb
adc
sarb
add
push
mov
mov
fdivl
rorb
mov
movsb
mov
sbb
add
arpl
sbb
fwait
mov
add
inc
add
mov
mov
dec
inc
dec
mov
xor
mov
push
xchg
add
movsl
cmpsl
out
mov
andb
pushf
inc
mov
mov
add
int3
jnp
xor
dec
ds
cltd
in
and
push
add
and
xor
cmpsb
mov
add
pushf
mov
fisttpll
fimuls
add
cli
xchg
ja,pn
push
xchg
add
xchg
imull
leave
xor
fwait
push
out
rolb
mov
jnp
lods
xchg
jp
or
bnd
testl
xor
cld
pop
scas
cmpsb
fcmovu
roll
xchg
adc
xchg
cmp
add
cmc
xchg
push
pop
jg
test
shrb
fmuls
add
xor
ret
cmp
push
xchg
add
sub
sub
add
ljmp
push
jge
mov
mov
or
push
fwait
push
pop
sarl
sub
sbb
lods
mov
cmp
mov
out
ret
add
cmp
dec
inc
add
fucomip
loop
cmp
cmpsb
mov
pop
in
ja
sbb
test
sbb
add
nop
xlat
inc
adc
jno
pop
sub
cmp
jno
add
cmp
add
adc
dec
shll
insb
adc
add
mov
sub
jle
cmp
and
add
push
jae
jb
add
mov
arpl
faddl
shll
int3
pop
int
jo
adc
adc
es
cmp
jbe
mov
imul
add
cli
in
cs
aam
sbb
pop
jecxz
stos
lods
xchg
pop
pop
dec
popa
pop
fdivs
adc
xor
add
add
and
cmp
clc
movsl
sahf
pushl
enter
loopne
adc
je
imul
dec
and
xchg
xchg
mov
sarl
add
loopne
repnz
mov
pop
adc
xlat
add
sbb
ljmp
rcll
xor
xchg
add
xor
popl
mov
push
xadd
mov
cmp
mov
fwait
lods
add
scas
push
outsl
popf
iret
xchg
movb
add
insb
dec
aam
data16
stos
xor
pop
jl
add
mov
sbb
dec
fs
or
or
push
roll
cmpsl
flds
gs
cltd
shrl
inc
add
pop
dec
fadds
int3
and
add
xor
add
inc
in
insb
jo
and
sar
es
push
inc
push
mov
mov
stos
sub
xor
or
aas
fcomps
add
lret
scas
cld
stc
dec
mov
inc
das
arpl
add
test
adc
repnz
mov
jae
add
mov
push
jns
cmp
pusha
cld
enter
adc
sbb
and
add
xor
add
pushf
pop
aaa
pop
into
test
shll
cmp
pop
int3
jbe
lods
mov
sbb
xchg
add
add
add
imul
aad
add
xchg
cmp
daa
loop
shlb
lock
push
movsl
add
add
fdivrl
pop
jnp
pushf
push
lea
pop
pop
mov
add
or
test
scas
cld
sbb
lea
inc
ljmp
fildl
ds
add
cmc
pop
rcr
aam
mov
mov
add
sub
cmp
add
inc
mov
dec
fstps
sub
cmp
in
pop
cmpsb
add
sbbl
pusha
fisubl
push
push
ret
xor
ret
je
and
cmp
das
inc
sub
sbb
sub
dec
sub
add
data16
out
clc
lret
push
lock
sbb
inc
adc
dec
mov
rclb
adc
jnp
mov
push
pop
pop
xchg
add
jno
or
ja
push
mov
mov
sub
add
add
mov
pushf
pop
call
sahf
dec
or
push
mov
and
cmp
jmp
sti
push
and
shll
and
sbb
push
mov
push
jne
mov
insb
int3
stos
xor
mov
xchg
sbb
in
sbb
sbbl
add
mov
das
cmp
sbb
pop
cmp
ljmp
add
lods
add
add
mov
push
sbb
sbb
xchg
mov
mov
popa
mov
jne
lds
inc
cmp
add
jl
testb
mov
add
sub
cmp
mov
das
cmp
cmpsl
pop
xor
out
add
mov
or
sbb
mov
mov
inc
add
pop
nop
push
dec
jge
mov
cmp
fld
add
pop
ja
iret
imul
add
pushw
or
jae
cmp
cld
cmp
pop
pop
pop
inc
adc
push
loope
mov
or
add
bound
inc
add
cmp
jle
mov
inc
das
sbbb
pop
push
pop
sbb
pop
pop
dec
adc
ljmp
push
fstl
or
xchg
imul
mov
add
add
sbb
xor
add
enter
sbb
add
fucomi
arpl
xor
sub
lcall
mov
jo
fdivp
mov
test
add
dec
xor
or
xor
out
mov
add
leave
faddp
mov
and
fwait
je
out
xor
cmp
mov
hlt
push
dec
bound
add
cmp
or
inc
push
mov
add
ret
add
adc
lock
inc
orb
ljmp
ds
lcall
dec
enter
pop
scas
in
add
les
add
imul
mov
jb
lret
add
call
outsb
mov
fcmovb
ret
xchg
xor
cmp
in
mov
into
lds
daa
dec
add
rorl
xchg
add
add
add
fs
mov
roll
xor
gs
popl
arpl
test
jno
jno
push
add
mov
mov
in
and
pop
mov
xchg
in
fcoms
lcall
add
loope
mov
test
cwtl
dec
push
inc
sub
add
push
repnz
add
and
add
adc
daa
push
loopne
add
add
dec
mov
movsl
add
stos
add
cmp
ja
int
adc
push
lds
mov
int
xor
xor
mov
bound
cwtl
mov
mov
add
mov
xlat
add
andl
xor
scas
fwait
add
push
mov
sbb
xor
imul
repnz
and
jnp
faddl
aas
fwait
add
add
add
sub
add
xor
add
mov
addl
push
ljmp
add
push
pop
cmp
mov
subb
push
push
insb
dec
data16
pop
movsl
movsw
push
mov
mov
push
dec
xchg
push
gs
adc
leave
and
inc
jno
insb
aam
mov
xrelease
mov
add
add
pop
adc
out
add
cmpsl
movsb
add
hlt
add
lret
clc
cmpsb
add
add
ja
dec
sub
fs
mov
add
loopne
loop
scas
add
cmp
add
or
add
rol
mov
sub
ss
push
addr16
sahf
pusha
ret
bound
add
test
call
into
ja
loopne
bound
out
fsts
lds
popf
add
pop
clc
xchg
ss
out
scas
mov
sbb
pop
xchg
add
ljmp
xor
add
shll
or
scas
repnz
test
sub
clc
and
sbb
jns
add
push
push
scas
add
mov
sahf
ss
mov
cmp
adc
jge
push
outsb
mov
push
test
jmp
test
xchg
mov
cmp
add
cld
pop
aam
mov
inc
mov
repnz
sub
sub
iret
add
sub
cmp
xor
pop
mov
mov
cmp
adc
and
add
faddp
add
adc
lods
lea
inc
cmp
fs
cli
mov
jbe
pusha
add
add
dec
popf
add
add
mov
inc
dec
popa
test
xchg
push
lea
sahf
std
ljmp
sarl
iret
cmc
xchg
rorb
stos
sbb
mov
sub
mov
mov
push
pop
data16
push
push
adc
jb
jle
and
add
xor
enter
add
das
push
pop
jge
out
out
jecxz
add
adc
loope
sub
test
test
sub
jo
add
loop
in
add
lret
ja
pop
inc
cmp
icebp
ret
jbe
jo
adc
push
jmp
loope
fldcw
add
dec
data16
add
pusha
rolb
mov
add
jns
mov
int3
mov
mov
pop
lds
xor
add
into
add
mov
jae
out
and
mov
jno
out
adc
jno
popa
add
and
aaa
pop
add
lret
test
jno
cmpsb
jns
sbb
jnp
or
loop
jnp
xchg
and
jne
sbb
dec
mov
incl
sub
pusha
jge
xchg
pop
rorl
mov
adc
out
add
bound
push
or
xchg
cltd
ja
xchg
pop
shll
outsl
ret
and
scas
push
jae
icebp
das
xor
shl
ss
push
adc
xlat
mov
repz
ret
mov
mov
jns
mov
mov
je
push
dec
jo
iret
pop
imul
fldt
xor
pop
mov
fdivs
aam
inc
test
enter
mov
incb
nop
pop
mov
in
xchg
mov
mov
add
fstps
in
pop
mov
shl
or
fs
fdivs
outsl
lret
js
inc
shll
pop
dec
mov
dec
sbb
cmpsb
mov
cmp
rolb
add
mov
cs
jl
syscall
add
add
add
push
xchg
sbb
fildl
pop
or
arpl
or
sbbb
into
pop
or
add
push
fimuls
shlb
push
mov
out
inc
push
mov
sub
jle
dec
jge
scas
rcr
add
mov
daa
cltd
add
cmpsl
sahf
or
mov
imul
inc
out
rcll
out
loop
pop
fsubl
jmp
jb,pn
in
push
add
or
faddl
adc
jle
jmp
push
enter
mov
and
loop
xor
lock
dec
es
sub
inc
add
pop
jecxz
scas
aas
cmp
and
lods
add
test
idivl
mov
mov
pop
dec
add
pushf
add
loop
sbb
pop
dec
pop
dec
dec
xor
add
xchg
push
test
add
and
dec
mov
add
outsb
add
es
stc
mov
jae
mov
notl
jns
and
xchg
pop
in
pop
lds
int3
push
adc
add
rcll
adc
clc
rorl
dec
imul
mov
pop
sbb
pop
insb
add
ljmp
mov
int3
add
push
cmp
in
lds
sub
add
test
adc
xchg
inc
aas
loope
adc
cmpsb
sub
movsl
sub
add
dec
out
in
lods
add
imul
jae
add
xchg
lahf
pop
add
gs
pop
add
inc
mov
lock
mov
pop
idivb
pushf
movsb
add
add
iret
shlb
push
mov
dec
scas
jmp
aas
clc
subb
pop
ret
add
xchg
jno
rcr
push
sbb
imul
add
add
repnz
rorb
push
pop
mov
std
fs
in
outsb
jbe
mov
into
sbb
out
lcall
mov
jo
bound
loopne
inc
dec
fisubl
sub
out
add
dec
or
addl
int
addl
jl
xchg
popa
inc
xor
jmp
add
outsb
stc
roll
shl
sbb
ljmp
mov
cmpsl
adc
jb
mov
jnp
mov
jo
and
or
int
adc
adc
ljmp
jo
sub
add
test
cmp
test
mov
add
imul
add
in
push
shl
add
xchg
or
add
sub
dec
rclb
ja
shlb
mov
inc
add
out
jno
pop
xor
mov
sahf
aas
jnp
roll
lock
pusha
jnp
mov
das
outsb
mov
mov
dec
push
add
stos
lahf
lods
jb
mov
add
sbb
sbb
shll
add
test
jg
push
int3
push
and
push
sub
movsb
out
ror
pop
repz
scas
mov
out
add
pop
or
add
mov
and
testb
xchg
adc
and
stc
xlat
xor
in
movsb
dec
mov
movsl
mov
out
fcoml
andb
xor
stc
ret
sub
push
mov
and
push
add
add
adc
inc
std
add
xor
add
mov
mov
xchg
dec
add
dec
jmp
push
add
mov
add
out
add
mov
cmp
and
mov
xor
outsl
lret
add
js
sbb
out
add
sub
pushf
add
out
lods
bound
jb
mov
add
popa
jge
clc
pop
sub
inc
add
push
add
lret
cmpsb
inc
mov
popf
out
lock
fwait
jae
pop
test
push
push
xor
add
movsl
mov
jmp
roll
cmc
jg
dec
xchg
not
xchg
sbb
mov
or
int
jae
out
add
mov
xchg
adc
cli
popa
aam
cmp
xchg
pop
add
lea
aam
add
cmc
out
jle
xchg
add
push
jnp
push
lods
in
or
and
adc
jg
inc
sub
lods
xor
xchg
pop
lds
arpl
xchg
and
jl
adc
add
or
sti
jns
push
subb
in
mov
mov
out
pop
dec
das
add
arpl
call
imul
outsl
ljmp
stc
outsl
roll
cwtl
in
sbb
add
icebp
pushf
out
add
insb
hlt
aas
daa
jecxz
test
sbb
sbb
jne
pop
loopne
sub
stos
mov
adc
jne
outsb
cmpsb
xchg
rolb
push
push
test
scas
and
mov
or
les
add
loop
add
cltd
xor
or
movsl
cltd
jmp
pop
adc
cld
adc
jle
or
push
out
int
adc
data16
inc
cwtl
out
pop
mov
cmp
xchg
pop
xchg
add
inc
xchg
sub
xchg
lods
shll
jbe
mov
sbb
add
push
pusha
jmp
add
inc
addb
jbe
add
fldt
inc
pop
testb
test
and
cmp
xchg
mov
push
out
add
add
push
orl
xchg
jge
repnz
xlat
notl
lret
inc
gs
pushf
jecxz
mov
leave
adc
movsl
jl
pop
sub
mov
add
shr
icebp
addb
adc
incb
je
lret
ficoms
pushf
inc
mov
cmp
shrb
daa
pmulhw
std
add
mov
xchg
ja
and
ss
aad
dec
adc
sub
and
add
daa
mov
test
jne
add
in
xchg
inc
adc
enter
outsl
loopne
inc
test
xchg
add
lods
rcl
leave
jp
mov
push
out
push
notb
or
in
fildl
data16
adc
out
add
pop
and
xor
aaa
in
add
mov
and
cmp
dec
mov
pop
repz
in
ljmp
daa
mov
push
mov
add
inc
sti
sbb
clc
test
or
xchg
inc
mov
jge
lods
add
int3
xor
add
outsl
jecxz
stos
and
xor
sti
adc
push
scas
jg
pop
int
add
add
xchg
add
dec
rolb
ret
sbb
add
mov
sub
mov
mov
dec
add
lcall
push
xor
or
imul
into
add
mov
rorl
in
add
stos
mov
sub
add
clc
mov
xchg
sub
ret
outsb
out
add
out
dec
dec
xchg
or
cltd
or
fnsave
pop
push
or
nop
xor
xchg
pop
mov
ljmp
lret
ss
ds
pop
and
add
adc
outsl
add
pop
cltd
data16
pop
xchg
jmp
popa
mov
mov
push
add
xorb
ljmp
fcmovb
dec
xchg
push
mov
inc
popa
repz
add
inc
popa
roll
pop
sahf
dec
cmpsb
movl
push
or
add
cmc
imul
push
imul
outsl
push
or
add
lahf
ja
jp
or
sahf
rorb
sbb
test
enter
sbb
das
mov
dec
shll
jmp
add
add
js
xchg
pop
dec
xchg
lahf
add
dec
push
sti
add
cmp
sbb
aam
xchg
pop
add
mov
push
adc
aam
cmp
adc
jp
jo
pushf
cld
sbbb
les
push
loopne
xchg
xor
inc
jno
xchg
or
add
pop
daa
lock
xchg
and
mov
imul
add
mov
sbb
or
hlt
fwait
and
inc
gs
ljmp
lret
and
jmp
xchg
aaa
sti
aam
xlat
rcrb
filds
imul
cmp
inc
xchg
loope
add
and
dec
cmp
test
or
cmpsl
ret
add
jb
nop
or
movsb
lret
popf
add
in
bound
faddl
dec
movl
add
push
sub
cmp
flds
jne
loopne
fstps
or
adc
inc
cwtl
mov
cmp
push
mov
or
in
inc
fsub
adc
add
in
cmpsl
in
out
ss
mov
test
icebp
mov
fcompl
int3
mov
xchg
sub
dec
daa
mov
fiadds
sub
test
jg
push
sbbl
push
dec
add
xchg
or
jg
repnz
insl
jb
or
stos
push
mov
in
fdivs
fistpl
mov
jbe
xchg
dec
cs
roll
orb
cli
adc
subb
faddl
scas
mov
dec
dec
cs
pop
stos
rclb
cld
fcoms
push
imul
dec
add
pop
sti
bnd
xor
cmpl
mov
rorl
mov
fwait
cmpsb
add
arpl
jecxz
xchg
jecxz
mov
xchg
pop
xor
jno
cmp
dec
dec
sbb
add
add
cltd
sbb
jbe
add
push
loope
ret
int3
cmpsb
adc
xor
fisubl
pop
repnz
out
pop
pop
or
add
xchg
mov
cmp
mov
out
in
rolb
je
pop
add
sbb
mov
shll
in
xor
pop
cmp
jnp
xchg
rolb
std
sub
sbb
js
jb
test
push
int
cmp
mov
jecxz
fldt
jns
pusha
cli
or
mov
add
les
pop
add
out
add
cmp
add
adc
adcl
test
popl
mov
mov
xchg
in
pusha
in
and
add
mov
dec
aad
cmc
loope,pn
jl
add
inc
xchg
movsb
add
add
sub
add
daa
jp
filds
mov
aam
xchg
imul
jo
les
jns
ds
add
jo
push
xchg
add
sub
fsubrl
xlat
cmp
imul
cmpsb
or
test
lret
add
jb
pushf
or
sbb
sub
icebp
mov
imul
jbe
or
add
sbb
mov
out
push
add
inc
add
or
adc
mov
add
and
into
add
popf
test
sbb
add
ja
push
add
push
xchg
push
add
push
add
cli
add
jl
cmp
sbb
jns
add
out
push
add
insb
add
lock
lea
push
add
leave
xchg
xchg
add
adc
ljmp
push
scas
mov
js
lods
test
adc
jge
sbb
ror
and
imul
sbb
dec
add
add
jecxz
in
push
dec
test
ss
xor
xor
add
cmc
shl
sti
popf
jecxz
sbb
jle
add
das
push
xchg
mov
mov
inc
adc
mov
add
cmp
push
add
pop
mov
movsl
xchg
jp
cwtl
add
rclb
mov
jecxz
pop
out
mov
daa
add
add
stc
sub
sbb
add
add
push
fldl
jle
sbb
cmp
inc
add
cmp
sbb
movsb
mov
rol
movsl
sub
jo
lcall
add
and
push
xchg
not
pop
das
pop
xchg
add
fimuls
push
leavew
xchg
mov
std
insl
daa
cmpsl
fsubrs
loopne
aam
lock
test
and
add
lret
add
cmpsb
es
sbb
add
add
push
pusha
jp
fnstsw
std
filds
int
sbb
rolb
in
imul
mov
add
imul
int3
jmp
mov
add
ret
push
or
jno
inc
inc
add
push
jns
inc
or
cmpsl
movsb
fistpl
arpl
mov
ja
cmp
inc
lret
cmp
mov
inc
and
ret
into
fs
push
sub
add
aaa
add
dec
sub
mov
mov
stc
in
jno
fsub
or
cmp
jmp
add
enter
add
cmc
sub
ja
lds
xor
notb
fstl
xchg
push
and
push
add
add
xchg
xchg
pop
push
push
add
cwtl
push
add
push
nop
xchg
add
push
add
dec
ret
rolb
adc
cmp
mov
sbb
or
fiadds
push
idivl
add
mov
pusha
in
lock
jno
add
or
push
subl
fcom
add
repz
adc
xchg
les
xor
add
or
add
pop
add
mov
mov
sub
push
daa
in
in
sti
aas
mov
lahf
push
pop
scas
pop
loop
cmp
rorb
ret
add
add
push
shl
push
jo
xchg
adc
shl
or
xor
mov
aam
mov
dec
mov
sub
fiaddl
add
mov
test
jne
add
clc
stc
push
sbb
nop
addr16
popa
movsb
mov
popf
push
mov
mov
mov
sub
or
ret
push
xlat
dec
add
add
xchg
jmp
sbb
xor
push
mov
cmp
lret
shr
stos
add
in
pop
cli
ret
and
mov
lret
std
add
add
ficompl
lret
jae
movsb
sarl
add
aaa
repnz
in
adc
push
les
movsl
shll
or
dec
lods
divb
and
adc
add
icebp
xchg
mov
pusha
arpl
pop
sarl
push
lds
mov
inc
ret
or
add
call
lret
popf
addr16
ja
ret
cmp
mov
xchg
nop
aam
add
cmc
pop
mov
dec
add
testb
mov
je
add
cmc
dec
xchg
and
enter
out
cmpsb
rcrb
add
push
cmp
jecxz
mov
add
leave
xlat
add
sbb
scas
mov
test
filds
fisubl
jnp
xchg
add
pop
and
add
add
or
mov
add
inc
sbb
loop
dec
add
cmpsl
stc
add
pop
xchg
adc
add
loopne
fldl
pop
add
in
les
sbb
or
lahf
std
fisubl
sbb
movsl
add
je
add
je
inc
fadd
ljmp
cli
push
loope
add
pop
mov
es
test
add
pop
fnstcw
mov
pop
repnz
incb
mov
add
push
out
cmpsb
pop
movsl
jge
xor
mov
addr16
add
add
sahf
lret
xchg
into
psubd
aam
mov
hlt
fiadds
cmpsl
mov
cmp
sub
inc
add
pop
cmp
ret
jbe
rcrb
jecxz
lods
out
bound
aad
ja
jmp
cmp
cmp
je
nop
pop
mov
xchg
fidivs
pop
rorl
cld
xchg
cmp
push
popa
iret
into
fs
xchg
movsl
inc
mov
cwtl
push
and
outsb
pop
jg
faddl
push
push
add
add
sub
sbb
sbb
dec
stc
lods
xor
movsl
pop
and
ljmp
add
lock
hlt
mov
adc
jnp
fdiv
adc
add
out
pop
add
out
adc
add
push
add
cwtl
sub
in
sub
jl
cmpsl
or
pusha
cld
push
imul
clc
or
mov
pop
inc
adc
push
shl
cmpsl
mov
add
adc
add
popf
insl
jns
mov
leave
xchg
mov
xchg
pop
hlt
add
mov
add
test
xchg
inc
dec
mov
sbb
pop
add
rclb
lds
xchg
enter
sbb
fwait
xor
lahf
inc
aaa
cs
rol
shlb
dec
lcall
add
ficomps
or
push
jecxz
inc
add
and
pop
adc
inc
xchg
sbb
out
sub
pop
inc
mov
cmpsl
ss
add
pop
dec
mov
movsl
add
stos
in
add
sbb
add
gs
jle
push
sahf
adc
dec
add
xchg
shlb
sti
add
lods
add
cmc
aas
cmc
fs
icebp
es
add
xchg
inc
mov
dec
stos
xor
mov
sti
mov
repnz
mov
xchg
lds
outsl
adc
adc
cld
dec
adc
adc
lret
cmp
sbb
pop
adc
sahf
lds
inc
lahf
loop
and
mov
clc
inc
jmp
push
mov
add
jns
insb
scas
les
xchg
jb
cmp
pop
hlt
sub
add
subl
push
cwtl
call
aaa
incl
ljmp
add
mov
insb
int3
movsb
jb
jmp
mov
xchg
call
mov
dec
add
add
cmp
push
add
add
lock
les
inc
add
shll
jb
aam
filds
dec
pop
sahf
mov
pop
add
inc
test
dec
pop
cmp
mov
sbbb
mov
movsb
loope
add
add
cld
push
pop
jae
mov
xchg
inc
dec
xchg
and
stc
int3
cmp
rcrb
shr
cmp
push
in
aam
add
mov
sbb
mov
jmp
add
scas
add
mov
cmp
pushf
mov
and
lret
repnz
neg
sbb
add
add
cltd
scas
sti
cmp
and
jnp
in
pop
add
jno
rep
pop
add
movsl
push
xchg
pop
lahf
add
in
cli
mov
sub
push
or
fdiv
iret
add
mov
das
add
push
or
or
ret
mov
aaa
mov
stc
mov
add
mov
mov
sub
mov
add
pop
aas
add
scas
cmp
mov
sahf
gs
mov
test
jbe
push
movsl
test
orl
sub
or
or
mov
add
rorl
adc
scas
xchg
xchg
dec
pop
adc
add
mov
push
dec
cltd
mov
jno
call
insl
daa
sbb
jne
loope
sbb
adc
xor
sub
xor
push
outsb
add
mov
push
fs
and
inc
inc
outsb
ficomps
lods
call
repz
pop
fdivrl
jno
add
add
and
inc
insb
inc
cmp
mov
xchg
add
adc
cmp
cld
jns
les
jle
push
add
sub
push
roll
fsubl
mov
xorb
add
inc
xchg
jge
mov
shlb
xchg
mov
in
mov
int3
mov
lds
orl
or
sub
rcll
addb
aam
aad
ja
push
adc
adc
xchg
sub
ret
pop
mov
incb
push
mov
add
pop
popf
and
fnstcw
loope
jmp
inc
mov
lret
push
cmpl
rolb
enter
dec
sti
xor
add
int3
push
jge
orl
pop
push
test
jns
jns
push
dec
loopne
push
mov
jnp,pt
leave
enter
add
jno
add
jg
sbb
movsb
in
loope
ljmp
and
es
xchg
add
fmuls
stc
push
add
rorb
add
adc
jmp
xchg
test
add
add
test
cwtl
xchg
hlt
xchg
push
loopne
add
add
add
sbb
call
adc
push
jns
cwtl
adc
daa
adc
xchg
stos
shll
add
ret
add
fidivrs
pop
mov
in
or
lock
mov
pop
decb
repz
jbe
add
repnz
outsl
fistl
aaa
fiaddl
bound
dec
orps
adc
add
sub
add
add
sbb
add
jns
add
mov
movl
cmp
int
rcrb
out
mov
or
outsl
mov
fadd
add
add
pop
call
add
dec
sbb
add
ret
push
cs
fistps
xor
push
jmp
mov
push
js
adc
sub
xor
cmp
add
add
xor
pushf
out
pop
xorl
pop
jo
roll
fistps
out
cld
je
orb
popf
outsl
ja
add
scas
mov
adc
adc
lcall
ds
scas
aas
pop
lea
subl
push
mov
pop
pop
xchg
movsl
pop
add
pop
push
cmp
cmp
jo
jns
add
rorb
loop
xor
fsubl
or
das
dec
xchg
imulb
xchg
jnp
jb
negb
or
mov
lahf
ja
mov
add
mov
jbe
add
sar
xor
add
xlat
shl
inc
pop
in
fsubr
mov
add
dec
les
or
imul
inc
mov
mov
stos
mov
mov
std
lods
int
add
add
into
mov
popf
sbb
and
xchg
fcoml
add
jae
add
cmp
add
and
pop
mov
adc
add
lds
sarl
enter
incl
test
movsl
xchg
xlat
mov
or
std
add
xchg
xchg
cmp
out
aad
std
jnp
stos
mov
int
ds
je
mov
ret
out
pushf
ljmp
push
xchg
cli
push
add
fiadds
inc
add
and
out
sbb
add
jecxz
rorb
das
je
jns
push
mov
rolb
add
lcall
add
or
data16
jmp
xor
sbb
add
xor
loopne
fisubrs
pop
jno
shl
test
stos
lea
scas
add
add
add
aad
sub
sub
out
add
out
fcoml
ss
xchg
sbb
mov
fcomps
imul
ljmp
sbb
aas
lods
jg
xor
imul
rol
push
jbe
repnz
push
sbb
test
movsb
test
push
mov
inc
stos
roll
int
daa
std
sbb
mov
idivb
sub
add
dec
in
add
hlt
les
add
xchg
ffree
jl
inc
push
stc
add
xchg
fcompl
cs
add
pop
pop
into
iret
cmp
add
jecxz
xchg
add
add
call
mov
jne
mov
jns
add
in
and
push
gs
mov
lds
fwait
inc
andl
xlat
add
mov
xchg
inc
ljmp
ficoml
xor
add
aad
sbb
sub
jg
add
jae
cmc
lea
cmp
or
jns
pop
and
in
inc
nop
das
add
shlb
push
movsl
ror
in
pop
add
shrb
and
push
add
dec
add
adc
mov
aam
mov
add
add
push
add
cmpsb
or
add
jmp
gs
icebp
dec
add
insl
pop
jmp
add
mov
and
mov
jno
mov
mov
sbb
add
xor
sub
repz
add
nop
add
clc
lcall
bound
sbb
mov
iret
jmp
fyl2xp1
sbb
jge
pop
cmp
arpl
scas
sbb
test
rol
xchg
jmp
lret
es
sbb
add
xor
jmp
push
push
insb
nop
inc
arpl
add
jne
sub
or
xor
push
ret
test
mov
xor
cli
inc
mov
xor
fimull
mov
add
add
roll
add
push
cmp
test
cmc
test
or
and
push
arpl
test
add
cltd
cli
fadd
add
stc
xchg
lods
movhps
and
movsl
js
orl
cmp
and
test
shlb
jg
cmpsl
hlt
ja
ret
nop
sbb
and
mov
adc
int3
and
das
mov
lret
add
pop
pop
sti
insl
xchg
add
loope
jns
add
inc
imul
pop
sub
pop
jbe
pop
test
add
and
adc
mov
das
add
iret
xchg
add
shr
add
jg
add
or
push
or
push
lahf
mov
gs
ficomps
repnz
mov
or
fldl
cmp
clc
movsb
pop
daa
add
fmul
andl
sahf
or
les
fsubrl
add
inc
outsl
ret
push
sarl
inc
or
jl
push
add
mov
add
sarl
subl
aaa
clc
testl
inc
ret
les
test
xchg
lcall
jg
dec
add
inc
add
or
call
testb
xchg
mov
xchg
mov
in
xor
les
and
xorb
pop
int3
mov
add
lret
dec
sahf
xchg
mov
xchg
cmp
pop
xchg
xor
or
jnp
lock
in
inc
xor
arpl
leave
add
cmp
mov
sti
xor
aas
stos
je
js
or
cli
test
popf
sbb
cltd
mov
adc
decl
or
mov
xlat
add
add
int3
popa
inc
xor
lcall
adc
rorb
into
cmpsl
scas
sahf
cli
aaa
pop
add
cmp
sub
addr16
cwtl
insb
add
stos
add
test
add
pop
adc
les
adc
add
mov
inc
pop
or
std
add
push
jmp
xchg
in
cmp
test
mov
jae
and
shll
into
sub
mov
movsl
or
in
mov
dec
mov
out
add
iret
inc
out
loop
scas
add
scas
fcmovnbe
ljmp
sub
fdivl
pop
hlt
mov
das
mov
sti
sub
add
fcmovb
js
in
add
pop
jmp
add
inc
add
push
xchg
fdivl
lcall
mov
add
inc
fdivl
xor
cmc
add
add
mov
loop
add
or
dec
inc
add
xchg
ljmp
add
shl
arpl
popf
loope
ficompl
sbb
pop
push
push
and
setae
or
or
fiadds
in
mov
sbb
adc
mov
or
arpl
add
movsb
hlt
cmpsl
jnp
dec
pop
add
mov
das
cmpsl
add
pop
sub
push
adc
ja
add
lldt
and
shrb
add
fwait
test
pop
jnp
jg
fimuls
add
daa
out
push
mov
imul
sub
ds
insl
add
in
push
xchg
hlt
sub
jb
push
jo
mov
popl
mov
enter
aad
add
push
fwait
add
mov
push
pop
jl
pushf
inc
mov
nopl
add
out
incb
push
in
test
add
xchg
add
add
sub
jns
lods
incb
fstps
sahf
mov
sub
or
aad
aas
push
cmp
cmpsl
stos
add
add
call
cmp
or
mov
je
inc
cmp
es
add
ficomps
aaa
mov
pop
inc
xchg
dec
lcall
dec
dec
xor
scas
rolb
rol
and
filds
add
adc
or
sahf
mov
push
add
lahf
mov
jnp
sarb
sti
xor
data16
dec
xorb
imulb
jp
bound
arpl
test
inc
push
test
cmpsb
or
leave
xor
les
pop
call
fcoml
cs
fildl
or
cld
pop
sarb
add
sbbb
test
lock
sub
jg
sbb
add
pop
int
lds
cmp
in
add
repz
ja
sub
hlt
fsubl
sbb
xchg
add
cld
lea
pop
add
cmp
lcall
fisttps
mov
xchg
mov
xor
push
xchg
sbb
mov
push
and
jp
add
push
sub
and
xchg
das
mov
add
mov
fldl
dec
int3
aaa
or
add
lahf
andb
xchg
adc
lds
in
data16
movsl
and
imul
adc
mov
mov
push
repnz
sbb
xchg
pop
mov
dec
sub
push
inc
sbb
addr16
add
cs
dec
shrb
or
cmp
movsb
lldt
loop
xchg
xor
testb
fcomp
jo
mov
add
leave
test
insl
sbb
mov
mov
je
jge
cli
mov
add
rolb
add
mov
add
aaa
cmp
mov
pop
call
lods
mov
das
shll
or
add
testb
outsb
pop
add
jo
int3
dec
xor
add
out
add
xor
pop
mov
cmp
int3
add
cmc
dec
add
mov
add
dec
or
loope
sub
stos
adc
or
out
jno
fidivrl
mov
test
and
shrl
jmp
loope
out
fdivrs
or
cs
or
ds
hlt
mov
cwtl
js
and
pop
sub
imul
push
xchg
lock
lea
lcall
cmpsb
mov
loope
ret
xchg
fsubr
mov
sbb
loope
add
filds
mov
add
add
jb
cmp
sub
cmpsb
push
dec
cli
imul
pop
mov
out
lock
rep
test
pushf
mov
pop
shl
dec
dec
add
lahf
jmp
push
cmp
mov
roll
imul
jp
add
xchg
pop
test
push
stc
fs
std
add
add
lcall
insb
pop
xchg
add
add
fcoml
cs
pop
rolb
outsl
std
mov
dec
repnz
and
inc
dec
sub
das
add
push
mov
adc
xchg
mov
sti
pop
cmp
xchg
cmp
pop
arpl
addl
sub
out
sbb
add
push
lahf
cli
aas
and
int
clc
loope
test
nop
jo
in
jmp
mov
jnp
jo
std
inc
rcrb
dec
mov
enter
xor
mov
add
and
mov
fdivr
clc
add
push
xchg
dec
push
test
dec
add
imul
sbb
add
sbb
jge
add
and
add
add
add
jmp
and
mov
icebp
mov
push
xor
imul
test
jecxz
pop
xchg
mov
pop
mov
lret
inc
add
scas
iret
stos
sbb
jp
push
mov
and
in
add
or
pop
pushf
call
clc
out
movsb
cwtl
xchg
mov
xchg
loope
std
add
sub
bound
add
std
inc
imul
out
add
pop
mov
jle
subb
push
push
add
sbb
pusha
jl
sub
inc
mov
lret
cld
movb
sbb
rolb
enter
xchg
sbb
cmp
fcomi
aaa
or
out
lret
add
inc
mov
and
adc
mov
and
mov
daa
mov
jo
lcall
add
jmp
add
pop
push
add
daa
xlat
add
fmuls
add
ljmp
jno
xchg
in
add
aas
jnp
fists
cmpsl
xor
ret
jne
jo
call
lock
push
out
div
and
into
lods
inc
mov
movsb
add
or
dec
jecxz
add
add
mov
mov
loopne
add
popa
xlat
dec
push
jle
xchg
testl
and
add
inc
add
xchg
in
aaa
dec
adcl
fwait
lock
mov
cmc
mov
add
mov
inc
imul
or
mov
mov
in
add
mov
loope
stos
leave
dec
in
into
lret
popl
mov
pop
sbb
inc
jmp
jmp
stc
push
subl
inc
add
sub
test
test
in
push
and
or
jl
ja
or
dec
repnz
testl
mov
add
sub
jno
jg
mov
push
dec
fwait
jnp
gs
and
add
lcall
rolb
mov
pop
aaa
ds
clc
mov
icebp
sbb
mov
bound
push
clc
sub
add
add
push
into
or
mov
jl
clc
or
lret
arpl
fadds
movsb
movsl
daa
js
add
adc
addr16
add
pop
mov
add
js
pop
xchg
add
mov
or
and
add
ret
rcrl
mov
gs
xchg
pop
pop
icebp
repz
sub
push
lods
mov
mov
xchg
insb
sub
adc
add
inc
ds
lret
mov
inc
jae
add
xlat
cltd
ret
cmp
sbb
add
movsb
add
hlt
pop
cmp
add
flds
das
mov
push
sbb
cmp
cli
in
pop
fidivs
arpl
dec
lea
lret
or
push
insl
add
movntq
push
xchg
inc
mov
cmpsb
inc
jl
inc
xchg
jg
bound
sahf
sub
pop
bound
mov
xor
add
dec
add
xchg
xchg
or
outsb
xor
add
dec
fdivrs
dec
pop
xor
inc
in
xor
shrl
jno
faddl
cmp
pop
jmp
pop
loope
sbb
pop
rol
nop
add
mov
mov
sbb
test
inc
jnp
int3
leave
incl
inc
leave
icebp
push
add
add
fidivrl
pop
cli
mov
add
sub
sub
jl
add
andl
pop
orl
pop
add
jb
mov
bnd
add
pushf
imul
add
mov
and
jo
inc
clc
inc
cmpsl
or
mov
outsl
add
lret
mov
add
and
cmp
into
xchg
adc
add
call
and
dec
inc
inc
and
cmp
add
mov
xor
add
mov
into
jg
ss
das
push
inc
movsb
push
cmp
sub
fldcw
sbb
test
cld
add
push
movsl
add
xchg
popa
lret
xchg
add
push
add
push
enter
bound
ja
lods
sti
fildl
ret
push
mov
stos
add
leave
add
sub
ret
cmpsb
fnstcw
pop
add
mov
jl
rcrb
sub
cmp
mov
and
arpl
mov
and
inc
and
gs
arpl
inc
mov
sbb
stos
sti
or
jl
add
inc
push
insb
add
cmpsl
xor
sub
adc
xchg
and
movb
repz
outsb
fdivrs
mov
mov
add
fs
repz
lahf
loop
leave
shlb
mov
push
add
inc
adc
pop
mov
and
add
add
inc
xor
les
jno
or
loope
lods
add
jae
ret
in
pop
cmp
pop
push
subl
out
sti
hlt
xor
adc
arpl
sub
mov
xchg
add
push
xchg
std
les
xor
inc
out
mov
adc
clc
add
push
push
add
imul
stc
mov
add
jbe
add
cmp
add
js,pn
inc
xlat
stos
mov
int3
int
add
inc
call
lahf
ret
add
xchg
in
dec
push
loope
xchg
loop
out
addr16
inc
add
aas
ret
data16
fldenv
out
mov
idiv
xchg
push
sub
xchg
or
add
pop
stc
mov
xchg
and
dec
mov
dec
cmp
push
lret
popa
cli
gs
enter
adc
movsb
pop
das
imul
call
popl
sbb
pop
mov
add
xlat
push
fiadds
clc
icebp
add
rol
addl
xchg
mov
add
pop
jge
jmp
es
push
sub
mov
mov
push
jp
xchg
mov
sub
cmp
outsl
mov
cmc
xchg
xorl
jae
popf
outsb
mov
daa
jmp
jl
jge
jo
jecxz
stos
or
mov
and
js
or
movsl
mov
loop
or
sub
es
pop
push
adc
jecxz
adc
pop
add
arpl
cwtl
pop
test
int
add
imul
or
loopne
add
mov
add
aas
nop
add
inc
lods
add
int3
xchg
cli
cwtl
mov
mov
xor
cmp
mov
mov
in
in
mov
xchg
add
or
push
lods
add
call
jno
addb
clc
scas
fldl
sbb
add
sbb
mov
inc
add
or
mov
cmp
xchg
add
xchg
aaa
loopnew
jno,pt
notl
adc
out
xchg
aaa
lock
add
leave
movsb
ss
add
xor
das
iret
push
adc
scas
sub
in
sahf
xchg
pop
xchg
cli
dec
cmpsl
jne
ficompl
test
sahf
mov
cltd
push
mov
add
jae
xchg
pushw
xor
add
aas
cmp
fs
lods
ljmp
xor
sub
inc
pop
add
mov
sbb
xchg
adc
scas
dec
dec
sti
lods
icebp
std
xor
imul
rcll
jb
sub
add
push
jnp
jo
adc
in
outsb
test
add
mov
mov
gs
or
insb
es
inc
add
hlt
mov
add
sahf
jno
les
jecxz
rcrb
add
pusha
push
shrb
and
mov
daa
leave
add
mov
fstpl
clc
pop
add
push
inc
add
int
add
jge
xchg
cmp
add
add
mov
jg
in
rolb
mov
flds
jge
mov
push
jns
adc
mov
stc
into
pop
mov
test
sti
mov
adc
xlat
sub
lds
mov
incb
jae
repz
lods
inc
pop
adc
mov
cwtl
jmp
jne
add
pop
dec
jmp
dec
imul
jo
sub
and
adc
rolb
adc
out
and
jle
or
out
pusha
lock
insb
lea
out
fcmovu
add
add
mov
add
push
xor
or
cmp
arpl
xchg
pop
mov
aam
xchg
add
add
mov
inc
ljmp
imul
js
jnp
sbb
ret
lret
add
sbbl
add
adc
mov
loop
dec
add
ja
xlat
insl
orb
sub
push
icebp
sub
xchg
mov
fistpll
push
mov
lock
fdiv
xor
dec
and
nop
mov
mov
jns
mov
icebp
dec
mov
jmp
sbb
mov
aam
mov
rolb
cmp
mov
lcall
and
insb
fcomps
or
cli
pusha
rorl
add
add
xor
and
inc
add
mov
in
add
add
lret
in
add
dec
add
ja
jmp
jmp
sub
inc
je
push
add
mov
data16
cld
std
mov
sbb
es
add
xchg
jle
fsubrs
mov
xchg
or
add
push
and
in
xchg
add
push
int
outsl
inc
outsl
cmc
add
aaa
dec
add
inc
push
into
xor
jmp
lods
ss
aad
inc
pop
add
and
add
or
sbbl
nop
jae
sub
add
or
lods
fstpl
mov
add
adc
add
andb
mov
sbb
push
shlb
mov
fstpt
pusha
adc
inc
subb
repz
int
xor
lods
push
mov
jg
add
inc
xor
xchg
jl
daa
mov
cmc
push
jne
scas
das
add
into
in
data16
imul
cli
inc
outsb
and
mov
fisttps
rolb
loopne
add
cmc
mov
xchg
mov
lds
or
aaa
testl
cmpsb
aaa
jo
gs
pushf
or
add
add
je
xor
mov
add
lea
popf
loope
and
xchg
lret
test
test
je
and
inc
into
cmc
add
mov
add
add
test
add
push
outsb
add
mov
fidivrl
out
xor
in
out
cmp
repz
sbb
lds
mov
xor
inc
mov
or
push
add
add
add
ret
adc
orb
cli
inc
push
lock
repnz
pusha
data16
in
fadds
dec
testl
xor
out
lahf
cltd
mov
pop
dec
rol
mov
cltd
rolb
and
fadds
push
test
push
pop
shl
cli
movsb
add
negb
leave
add
vmread
sub
fcomi
out
pop
pop
insb
pop
cmp
jp
xchg
lock
lret
and
pop
xlat
mov
pop
add
xchg
cs
gs
add
add
xchg
cmp
cmp
fildll
xor
mov
add
jno
or
inc
int3
jmp
mov
jo
ret
flds
xchg
fadds
jno
loop
mov
add
inc
mov
addr16
enter
ljmp
push
cmp
cmovp
fcmove
fiaddl
es
loope
test
in
and
cld
inc
xchg
pop
cmpsb
scas
cmpsb
xchg
add
inc
xchg
mov
mov
adc
xchg
leave
bound
rorb
cmp
shll
or
or
bnd
push
mov
sub
add
xchg
add
xchg
sub
pop
lock
fwait
or
inc
jnp
addl
mov
and
add
aas
shr
add
add
out
ret
pop
xchg
pushf
mov
rolb
out
test
enter
inc
mov
cmp
pop
add
iret
add
push
mov
cmp
lret
add
outsb
push
push
push
xchg
add
xchg
cmc
fidivs
mov
jmp
mov
inc
add
or
mov
mov
out
jno
shrl
jmp
add
mov
ljmp
cmp
orb
or
lock
cmp
and
mov
dec
add
stc
lahf
jg
mov
add
xor
das
add
and
shr
xor
leave
mov
mov
out
mov
lods
rolb
cmpl
add
mov
pop
and
jb
jecxz
jmp
and
pop
and
or
cld
mov
lods
aam
testb
arpl
cmpsl
inc
add
lcall
push
sbb
jp
aas
mov
xchg
add
sar
add
aad
inc
mov
xor
cmpsl
ficoms
xorb
inc
xchg
add
int
inc
scas
or
not
and
xor
xchg
popa
add
pop
jl
cmp
call
and
xchg
push
test
or
adc
pop
in
out
out
ficoms
std
ss
push
pop
add
mov
xchg
ficomps
sub
outsl
or
aaa
test
mov
add
lods
sub
mov
in
shlb
sti
imul
mov
sbb
cmp
add
cmpsl
xor
push
movsl
int
popl
cwtl
and
and
push
dec
movb
cli
outsb
sub
shll
stos
cmp
push
or
and
xchg
and
cmp
cmp
or
add
add
call
or
pop
arpl
add
inc
les
fisubrl
cmp
cmp
inc
cmp
mov
adc
add
mov
adc
mov
ficomps
loopne
add
add
dec
add
imul
pop
insb
mov
in
mov
mov
sub
mov
add
dec
aam
push
int3
repz
and
add
pop
in
mov
sahf
test
push
inc
add
ss
insl
mov
or
shlb
xchg
hlt
movsl
sub
add
aam
xchg
ret
ss
rcrb
dec
fcompl
dec
add
jp
sub
addl
movsl
popa
jns
xchg
jp
lret
cs
add
out
leave
aaa
adc
and
push
xchg
add
stos
cwtl
push
inc
add
jnp
add
adcl
fmull
int3
fld
and
mov
pop
adc
xor
mov
sbbl
in
add
mov
aaa
xchg
sub
ret
fldl
add
cwtl
loope
testl
aam
stos
nop
cwtl
andb
or
mov
xor
lret
add
data16
test
stos
xor
xor
popf
pop
or
push
and
int
repz
pop
sarl
xor
xor
in
stos
outsl
push
aad
push
shll
mov
test
cmp
lret
test
arpl
cmp
aas
stos
add
inc
cld
inc
pushl
cmp
test
inc
push
dec
push
xor
lods
dec
mov
push
sub
and
xchg
add
insb
push
mov
test
icebp
add
add
mov
jo
add
hlt
jg
add
cmp
fists
xchg
ja
lods
test
mov
loop
loopne
xchg
sarb
enter
gs
pop
in
mov
fstpt
push
clc
mov
aam
push
nop
cmpsl
pop
lods
fists
lods
xor
lret
sbb
iret
jo
xchg
add
jnp
push
shl
fdivrs
add
push
dec
fsub
cmp
inc
jle
add
xor
loop
push
cmp
in
addr16
or
xor
dec
clc
adc
push
adc
pop
je
jp
dec
jmp
into
psraw
dec
std
scas
jl
or
add
lds
cmpsl
cld
outsl
pop
lret
xor
ret
stc
inc
stos
dec
pop
xor
dec
add
jg
lcall
arpl
cltd
in
sub
rorb
lea
sub
data16
stos
cltd
add
sub
add
cli
mov
mov
mov
shll
int
sub
scas
pusha
sub
adc
test
add
add
rcrb
aad
add
adc
add
pop
push
pop
sub
mov
addl
outsb
dec
or
xchg
in
imul
sub
jmp
add
or
jbe
add
sbb
lods
sarb
fidivrl
add
lahf
pushf
nop
sub
pop
mov
jb
popa
test
pop
mov
mov
iret
cmp
adcb
push
jmp
xchg
loopne
adc
inc
pop
add
nop
xchg
adc
imul
sbb
add
lock
mov
pop
add
in
add
add
push
mov
cmpsl
fnstsw
mov
or
cmpl
cmpsb
and
push
pop
mov
push
clc
mov
ds
push
mov
sub
push
aaa
add
jmp
dec
cwtl
pop
inc
pop
fldcw
mov
inc
jnp
std
movsb
lret
out
lock
stc
sbb
xor
pop
adc
adc
je
int3
data16
cmpb
add
add
mov
pop
jns
jne
sbb
push
shll
xor
pop
mov
lock
dec
mov
lods
in
sbb
stc
xor
xor
idivl
add
pop
xor
xor
les
dec
outsl
or
fnstcw
or
cmp
imul
sbb
test
aaa
xor
pop
insb
and
es
jle
inc
imul
sbb
lahf
cmp
xchg
cmp
cwtl
xchg
xlat
push
int
dec
cmc
jno
sar
lahf
dec
push
das
and
xchg
repnz
dec
inc
xchg
aas
pop
inc
mov
xchg
adc
arpl
out
in
add
gs
movsl
add
and
xchg
or
add
sbb
fistpl
cmpb
cld
or
popa
int3
add
add
pop
inc
add
and
xchg
jge
rcl
lret
mov
push
ja
test
inc
fildl
add
dec
imul
add
jl
popa
xorb
push
arpl
push
add
jb
in
hlt
xchg
mov
mov
imul
iret
add
outsl
or
arpl
inc
inc
add
xor
adc
rorl
dec
add
dec
testb
shrb
or
repnz
ss
pop
and
xor
push
add
enter
mov
push
shrl
mov
sub
dec
popa
jne
add
xor
pusha
sub
xchg
cmp
loope
and
fistpl
add
dec
xor
pop
pushf
cmp
dec
add
add
jp
stc
roll
leave
or
push
lret
cltd
and
inc
je
jno
mov
add
push
add
xlat
out
rcrl
std
int3
jecxz
push
lods
and
aad
repz
movswl
and
sub
adc
mov
add
nop
add
mov
ficomps
add
mov
add
mov
or
xor
pop
sub
outsl
fcoms
and
dec
adc
data16
stos
add
mov
arpl
in
stc
add
cli
jecxz
pop
add
jge
pop
test
add
out
dec
add
sub
mov
ds
cmp
cmpsl
pop
test
mov
dec
imul
popf
push
aaa
xchg
add
jns
mov
xchg
pop
test
add
int
out
popa
mov
jno
mov
xchg
add
xchg
addb
int3
add
addb
push
dec
or
pop
mov
pop
shll
outsb
sub
ret
cmp
cmp
mov
xor
add
jnp
stos
push
aaa
int
add
ss
push
dec
sub
mov
scas
out
std
lea
xchg
mov
ljmp
lahf
dec
int3
and
or
enter
dec
jmp
lock
or
enter
icebp
xchg
push
rclb
cs
sti
and
out
and
in
jnp
mov
les
lods
xlat
sti
fnstenv
push
xchg
pop
scas
insb
and
pop
push
sti
inc
xchg
popa
imul
cmp
cs
inc
or
add
pop
sub
mov
sbb
jo
popl
and
sub
mov
adc
popa
out
lcall
mov
add
call
add
mov
xchg
stos
sarb
cs
daa
pop
xor
add
ret
mov
or
xor
daa
mov
mov
pop
ficompl
int
call
pop
mov
lea
cmp
fwait
cli
jno
enter
je
out
rclb
cmp
mov
jno
movsb
rcrb
not
adc
fadd
xor
icebp
mov
pop
fisttps
movsb
xchg
imul
incb
scas
test
in
add
xlat
mov
sbb
mov
es
jmp
dec
arpl
ret
add
call
test
add
mov
ret
lcall
cwtl
fs
adc
cmp
testl
sbb
cmp
mov
cmp
add
sub
push
mov
sbb
dec
jbe
sub
imul
cld
sub
mov
add
cmpsb
or
and
insl
ja
dec
popa
push
fucomp
roll
mov
adc
cmpl
mov
add
add
adc
add
movsl
pop
pop
ret
add
xor
ds
dec
iret
add
add
icebp
mov
popa
shlb
sub
popfw
and
push
add
dec
in
xchg
cld
adc
xchg
lret
add
in
adc
push
or
sub
mov
push
add
icebp
bound
add
xor
fs
adc
stos
jb
addb
sub
cld
cli
adc
jo
shl
mov
out
imul
aaa
mov
add
mov
mov
jp
cmp
into
cwtl
out
lds
loope
insb
inc
pushf
inc
fistps
out
pop
aad
cmpsl
and
je
rcr
js
adc
add
xchg
add
jp
xor
add
popf
in
cmp
dec
ds
mov
jns
daa
add
pusha
add
add
test
dec
or
fmuls
or
mov
mov
add
adc
andb
xor
add
inc
mov
fadd
jle
mov
cmp
xchg
outsb
or
pop
jle
out
add
mov
add
pop
xor
sub
sub
xchg
in
add
add
mov
mov
aad
test
mov
daa
and
dec
xchg
mov
xchg
jns
mov
sub
add
out
andl
roll
and
jne
xchg
pop
mov
dec
int3
add
mov
popa
mov
dec
xchg
jecxz
add
rorb
lldt
es
push
push
cmp
mov
insb
xor
jnp
cmp
jo
mov
mov
push
aaa
push
divl
ficompl
stos
mov
jno
adc
add
add
es
mov
jbe
pop
cmp
lods
dec
scas
scas
es
dec
add
mov
add
movsb
xor
cld
xlat
in
cmpsl
lds
cld
cmp
xor
hlt
ror
xor
add
jl
sub
dec
ja
jo
fstl
outsl
inc
xchg
xorb
addr16
add
inc
lods
sbb
jno
je
mov
add
mov
push
mov
loope
add
loope
jae
jb
mov
add
repz
mov
divl
loopne
add
add
sub
lcall
or
fld1
pop
push
dec
push
push
cmpsb
loope
add
adc
loop
shr
iret
mov
and
adc
push
jo
push
aad
add
mov
lcall
add
fiaddl
dec
cmp
add
frstor
add
add
push
add
out
pusha
adc
add
push
fst
adc
inc
mov
add
add
lret
or
fwait
cwtl
inc
loope
jno
fcomip
ss
in
lret
or
je
std
and
test
push
das
cmp
xchg
inc
cmpsl
fcomps
mov
jmp
rolb
add
dec
inc
lret
pop
add
stc
add
test
jae
cltd
mov
add
sbb
inc
cmpsl
arpl
jae
sub
dec
add
lea
or
les
lds
leave
fsubl
mov
sbb
or
adc
jg
cmp
cld
scas
je
jns
and
sub
add
mov
leave
daa
mov
addr16
add
mov
in
mov
dec
ss
cmpsl
add
fiaddl
int3
push
fsubrp
iret
add
lock
mov
push
mov
mov
push
push
add
pop
mov
add
fcomp
cltd
sbb
sub
movsl
addr16
bound
add
in
ret
scas
sbb
push
sub
stos
jo
inc
sub
jns
pop
or
popl
test
sbb
sbbb
int
or
aas
inc
pop
fimuls
call
fs
inc
mov
aad
inc
jbe
nop
jb
jge
das
punpckhwd
adc
sahf
sub
sbb
or
dec
cmc
push
loop
pusha
push
dec
sarb
orb
mov
fcoms
shl
nop
pop
add
cmp
add
lods
add
das
and
mov
sub
jb
mov
fsub
add
sbbl
sub
scas
cmpxchg
mov
push
xchg
add
add
into
jo
fnstsw
sub
xchg
into
add
in
data16
push
or
sti
add
sahf
push
adc
add
outsb
dec
sbb
fbld
shlb
outsb
psubd
aas
xchg
xlat
je
lcall
fistl
mov
push
sbb
pop
mov
or
push
lret
add
pop
hlt
mov
fistpll
mov
aas
pop
dec
xchg
add
scas
movsb
aaa
idivl
insb
pop
cmp
sbb
pop
xchg
pop
add
add
mov
pop
out
adc
add
mov
lock
aaa
scas
mov
addb
hlt
dec
add
test
push
sahf
add
pop
shrl
inc
sbb
aas
adc
push
popf
sub
outsl
ret
add
inc
xorl
xchg
add
add
add
push
aas
pop
int3
testl
or
add
icebp
outsl
xor
add
mov
sahf
pop
fscale
fimull
adc
js
jl
aam
in
out
push
movb
cmp
jmp
add
jge
jne
inc
adc
xor
mov
test
and
test
push
pop
add
add
push
cltd
sbb
adc
adc
add
add
subb
daa
inc
mov
xchg
filds
adc
inc
in
sbb
jge
add
faddl
mov
add
xor
inc
out
aas
lahf
jne
add
push
into
lods
mov
mov
add
test
mov
scas
push
jns
sub
out
push
add
sbb
inc
mov
hlt
cmpsl
sbb
dec
push
add
aad
cmp
scas
stos
push
mov
stc
and
icebp
xchg
add
imul
cltd
gs
add
add
call
and
dec
xchg
xor
cmp
push
or
add
roll
pop
movsl
jg
add
adc
les
leave
sbb
ja
cmp
shl
cmp
or
ret
mov
pop
lret
inc
mov
add
cmp
shll
loope
add
add
pop
rorb
jp
icebp
cmp
xor
add
popf
dec
fisubrl
call
push
adc
add
mov
repz
mov
sub
add
cmp
add
fisttpll
cmp
sbb
cmp
movsb
add
jmp
sbb
mov
sbb
xor
add
fsub
pop
xrelease
fists
jno
adc
scas
rol
mov
jg
jnp
add
xchg
ljmp
pop
lds
sbbb
add
lcall
push
adc
inc
mov
add
out
icebp
cmpsb
add
and
mov
js
push
mov
loope
add
xchg
lret
add
iret
rcl
sub
mov
repnz
add
dec
mov
adc
cmp
mov
inc
movsl
dec
fstps
fst
mov
lock
bound
sub
mov
jnp
xor
in
sbb
leave
add
push
inc
iret
push
pop
add
sbb
add
jbe
jp
adc
xchg
scas
mov
cltd
mov
imul
mov
mov
cmp
clc
icebp
pop
ficoms
pop
add
rorb
das
mov
popa
test
add
jne
add
pop
insb
inc
hlt
inc
jmp
xor
mov
std
mov
lods
pop
dec
add
push
mov
add
add
lods
sub
mov
pop
push
bound
mov
push
fdivrp
adc
fildl
jno
adc
inc
pop
nop
sbb
pop
sbb
mov
sub
fmuls
aad
pop
hlt
sbb
aad
cmpsb
mov
roll
pop
out
add
jge
cltd
je
sbb
test
fprem1
ljmp
lret
lods
or
lahf
hlt
outsl
popf
sub
add
loopne
test
fiadds
mov
mov
and
push
testb
stos
data16
and
mov
aam
cmc
add
cmp
and
push
pop
inc
xchg
add
inc
mov
sbb
aaa
sub
dec
dec
xchg
mov
push
lcall
sti
xchg
jmp
jmp
mov
add
mov
add
daa
les
movb
mov
stos
mov
push
sbb
add
xchg
add
add
int3
pop
movsl
or
xor
add
idivb
pop
jmp
mov
inc
out
pop
pop
icebp
adc
fldcw
cmp
add
clc
add
add
sbb
mov
shll
dec
push
jge
ret
incl
stos
add
sub
test
mov
sub
popf
add
mov
fdiv
popa
push
dec
cmp
std
cmp
les
push
add
inc
xchg
push
ret
ljmp
sbb
add
add
pop
sub
insl
fdivrp
dec
adc
mov
or
cmp
cltd
mov
aad
scas
shrl
dec
jno
mov
add
cmp
xor
push
or
xchg
cmp
push
add
jecxz
pop
push
aad
add
das
fadds
or
test
mov
fidivrl
call
cmp
fcomps
mov
cmc
nop
and
sub
stos
dec
jnp
add
add
aaa
push
lahf
repnz
movsb
pop
lret
dec
mov
push
add
add
adc
mov
pop
add
or
jo
out
popa
xor
xor
movsl
rcll
push
out
jl
add
or
das
jecxz
or
add
imul
adc
add
fcoml
sahf
add
dec
add
or
add
sub
insb
mov
imul
in
add
sbb
inc
and
add
push
dec
inc
add
cwtl
nop
mov
into
xor
mov
cmp
and
mov
add
jg
add
and
or
adc
xchg
cld
das
loope
dec
pushf
mov
add
mov
mov
add
xlat
insb
jb
mov
js
jecxz
rorl
sarb
rolb
dec
cltd
cld
fiadds
not
xchg
add
push
mov
bound
pop
and
add
cmpsb
add
or
bound
mov
add
mov
subb
add
mov
add
add
xlat
fcomps
push
and
pop
les
add
pop
pop
std
sub
scas
push
xor
cld
add
add
mov
cwtl
and
adc
pop
jle
fcoms
push
repnz
add
inc
or
repz
lock
sbb
xor
imul
aas
rcll
xchg
xor
imul
push
popf
xchg
jle
adc
push
add
add
les
xor
fwait
addr16
inc
push
das
mov
mov
add
jne
mov
push
mov
push
ret
add
cld
add
mov
xchg
ficoms
sbb
cmp
or
test
int
pop
xlat
add
imul
add
repnz
dec
imul
jg
pop
mov
pushf
aaa
or
jge
fidivrl
add
jbe
add
ficoml
mov
cld
and
sbb
add
xorb
sahf
into
pop
add
enter
dec
mov
popa
mov
test
jae
xchg
cmp
add
ja
and
mov
adc
inc
inc
xchg
dec
inc
cmp
jnp
xchg
mov
mov
dec
fidivrl
mov
and
mov
inc
add
mov
add
aad
mov
add
test
add
lock
add
insb
addr16
out
or
out
xor
es
stos
add
push
into
dec
push
xchg
mov
lcall
aas
roll
pop
or
cmp
stos
jne
inc
add
ret
lods
mov
std
sbb
dec
xor
fcomp
push
pop
pop
in
xchg
incb
sub
add
stos
std
cli
sub
sub
push
add
lods
fnstenv
mov
push
push
rcrl
or
add
sub
push
add
in
xchg
out
adc
lcall
mov
mov
add
xchg
xchg
aas
jge
dec
in
jae
ror
in
inc
add
shl
insl
out
xor
ja
xor
push
imul
insb
in
mov
loop
xor
in
cli
add
ds
pop
jle
sbb
call
mov
das
xor
adc
adc
push
lcall
imul
mov
xchg
add
pop
mov
sbb
sub
jb
pop
dec
jno
decl
fisubrs
sti
sbb
sbb
dec
ret
mov
dec
lahf
sub
push
aas
or
push
jb
add
jge
adc
or
pop
add
inc
push
pop
outsl
lret
es
jge
add
aaa
push
xchg
fdivl
sti
mov
add
add
mov
jbe
or
js
sbb
and
shll
add
imul
add
in
sub
push
xchg
add
pmuludq
js
movsb
nop
mov
mov
mov
jp
or
bound
sub
iret
xchg
insb
add
jp
jmp
sub
mov
add
jmp
flds
push
ss
clc
or
add
lea
add
add
out
add
pop
jg
aad
lahf
int3
in
lods
rclb
add
adc
subl
add
push
push
xchg
scas
sub
es
movb
ja
lods
and
xchg
add
pop
fnstsw
mov
fwait
lret
rclb
inc
pop
pcmpeqw
sub
pop
add
inc
add
dec
sub
and
in
roll
test
push
filds
mov
xchg
mov
loopne
push
dec
push
jb
cmp
cmp
lret
outsb
jnp
fildll
inc
add
nop
xor
mov
mov
mov
roll
ss
xchg
add
xchg
xor
fwait
imul
scas
mov
jae
push
xor
aam
sbb
rorb
lds
fdivrl
pushf
test
xchg
movsb
es
fldenv
add
add
sbb
pop
add
xor
or
bound
xchg
mov
add
add
les
sbb
add
loopne
sbb
and
add
add
ljmp
cmp
mov
cmp
add
scas
nop
add
push
frstor
into
add
aad
jmp
sbb
int
adc
push
pusha
add
bound
dec
mov
mov
leave
jl
jae
push
nop
push
imul
or
scas
int
jb
out
rcll
movb
mov
sbb
push
add
adc
jecxz
fnsave
xchg
pop
enter
int3
jp
push
mov
cli
xchg
or
adcb
sub
decb
jge
pusha
add
push
rolb
jle
add
sti
jb
jnp
test
addl
cmpsb
jge
inc
add
add
add
sti
popa
aaa
cmp
add
cmpsb
mov
mov
xor
lahf
mov
xor
inc
shll
daa
popf
add
test
mov
xchg
mov
outsl
stos
inc
and
andb
push
push
popf
add
addr16
mov
insb
add
in
jmp
or
jp
pop
dec
push
loop
or
sub
cmp
iret
xchg
fnstcw
ret
dec
push
sub
pop
xchg
icebp
push
test
add
orl
pusha
jne
cmp
lock
jne
cltd
mov
aam
sarl
jbe
and
std
xor
xor
add
sbb
add
out
lcall
mov
sbb
add
outsl
push
popf
add
mov
push
push
dec
ret
mov
add
test
add
dec
cmpsl
add
push
add
cmpsl
test
lods
cmp
negl
sub
inc
sub
add
inc
add
int
insl
dec
cmp
dec
fstpl
mov
cmc
frstor
es
mov
fbstp
add
les
add
mov
int3
add
push
outsl
mov
xor
jae
add
testl
push
add
fcmovu
andb
jne
outsb
scas
popa
xor
push
and
pop
aas
in
sub
add
leave
outsb
add
jp
shr
add
sub
jne
push
int3
mov
mov
or
jne
jg
out
les
push
xlat
mov
dec
sub
in
pusha
jmp
dec
mov
sub
add
add
add
lcall
adc
fists
push
add
mov
jg
das
mov
jb
add
lock
das
scas
sahf
adcl
addb
sbb
sbb
lea
mov
ffreep
dec
pop
sti
xchg
stos
add
imul
add
mov
cmp
test
in
movb
xlat
loop
or
add
xchg
sbb
icebp
pushf
mov
aad
incb
fisubs
test
or
add
push
jno
mov
push
jb
add
add
aad
mov
int3
addr16
pop
popf
push
xchg
add
insb
sbb
in
add
dec
icebp
jae
lret
xchg
iret
test
mov
add
cmp
add
push
add
cmp
add
sbb
mov
or
aas
add
adc
push
add
loop
push
dec
leave
add
add
add
sub
hlt
add
mov
insb
cmp
mov
xchg
jmp
mov
faddl
push
data16
push
test
and
mov
mov
bound
rolb
and
fwait
data16
add
dec
pop
loopne
adc
add
decb
sbb
in
push
movsb
sahf
loopne
dec
mov
mov
sbb
xchg
fs
mov
add
shll
add
stos
bnd
pop
jae
shr
mov
cmpsb
pushf
add
mov
sbbl
add
cmp
pushf
fnsave
add
sbb
add
jae
xchg
add
insb
sub
sbb
jmp
shr
iret
and
push
fldt
arpl
addl
push
aaa
mov
dec
loope
ret
add
add
add
sub
jo
cmp
loope
clc
mov
adc
add
sub
mov
movsl
neg
add
add
cmp
xor
fisubs
gs
xor
pop
ja
aad
push
fsubs
icebp
pop
les
cli
sub
add
mov
push
dec
sbb
in
push
jge
ret
popl
and
js
fsubp
test
movsb
sub
pop
jecxz
and
sbb
and
ficompl
insb
gs
test
add
adc
int3
dec
pop
sbb
shrb
add
test
popa
and
je
sti
shlb
sub
add
es
mov
roll
inc
add
rclb
push
aad
mov
mov
pop
loopne
hlt
add
jnp
adc
inc
xchg
pop
add
scas
cwtl
xchg
popa
add
add
test
cmp
mov
cmpsl
int3
sahf
arpl
pusha
cmp
mov
imul
xor
xor
or
adc
pop
push
das
sbb
inc
fisttpll
push
pop
js
mov
add
pushl
sbb
add
adc
outsb
fldl
test
adc
sbb
into
mov
rolb
in
rolb
cmpsl
add
add
add
stos
add
dec
cmpsl
scas
pushl
pop
xchg
scas
jns
scas
add
inc
aas
jmp
and
adc
negl
mov
leave
mov
in
add
adc
cmp
push
data16
dec
out
addr16
sti
inc
dec
inc
push
sbb
out
stc
dec
or
inc
mov
xchg
mov
or
fcmovne
loope
add
add
adc
add
shrb
repz
sbb
fistl
push
inc
ficomps
loop
or
sub
imul
xor
lds
add
popf
xchg
fnstsw
pop
sahf
xchg
std
add
mov
lret
xchg
inc
mov
fiadds
add
add
push
fldenv
sub
sbb
push
sbb
dec
adc
insb
xchg
jbe
pop
add
sbb
in
inc
addb
xor
fdivrs
adc
push
cwtl
pop
mov
sub
pop
mov
cli
push
jecxz
xchg
sbb
aad
hlt
in
lds
mov
int
sbb
sbbl
insb
add
sbb
movsb
mov
xor
cmp
pop
dec
mov
pop
adc
stc
loop
add
push
add
or
nop
mov
mov
loopne
adc
add
mov
mov
std
cmp
mov
pop
icebp
ret
push
dec
ret
incl
mov
sub
pop
adc
jg,pn
les
cs
int
mov
mov
arpl
in
xor
iret
add
mov
add
lea
in
inc
push
add
or
mov
push
mov
pop
dec
daa
gs
mov
dec
dec
sbb
and
mov
faddl
inc
pop
mov
lods
dec
push
mov
notl
stos
xchg
or
dec
cmp
and
push
or
jae
loopne
dec
add
stos
dec
testl
enter
add
jmp
mov
je
jge
xor
jle
add
out
jnp
cltd
lods
push
int
test
lret
add
pop
add
daa
add
outsl
push
mov
xor
jbe
jo
cli
mov
add
bound
sahf
xor
add
jg
cmp
cwtl
sti
clc
push
mov
lea
xor
add
cmp
mov
sahf
push
add
enter
add
add
push
mov
add
dec
ljmp
add
imul
test
jle
scas
aad
adc
in
scas
mov
jns
repnz
add
ficoms
cmpsl
add
lock
out
add
fsubrl
stos
mov
mov
std
roll
rclb
add
sbb
mov
and
jnp
mov
test
inc
shlb
rclb
dec
and
add
sub
cmc
adc
jl
adc
sub
lahf
sub
mov
pop
leave
jb
inc
sti
pop
jbe
call
pop
mov
xor
dec
add
adc
testl
or
jo
push
lret
add
pop
enter
mov
lahf
mov
pop
pop
push
add
sbb
add
dec
jecxz
cmp
add
pushf
dec
mov
mov
loopne
in
dec
xchg
lds
and
adc
ret
test
xor
push
and
ret
cltd
mov
cmp
pop
xchg
inc
xor
fs
add
xchg
inc
cmp
pop
xor
push
xchg
push
verw
pop
popa
adc
cmp
aam
or
in
add
jecxz
data16
into
xchg
add
cmpsl
cwtl
jns
popf
je
les
or
ffree
filds
js
in
mov
add
jne
inc
mov
cmc
mov
pop
push
sbb
or
mov
in
mov
cmp
cld
pop
add
lret
pop
repz
inc
pushf
add
push
push
pop
dec
jo
mov
leavew
add
sub
or
xchg
scas
faddl
jecxz
insl
flds
mov
aam
sbb
data16
dec
sub
bound
clc
loopne
pusha
je
pop
and
jno
int3
xchg
fmull
cmp
pop
insl
pop
add
pop
jns
das
rclb
mov
inc
add
xor
lods
add
in
add
popf
jl
cwtl
or
dec
movsl
ret
sti
movsl
push
and
mov
ljmp
dec
lcall
sub
aaa
or
add
fwait
add
push
in
inc
movsl
mov
inc
fisubrl
out
add
test
fs
pop
rolb
mov
jge
add
push
sbb
cmp
adc
test
lret
adc
xor
jns
jbe
pop
add
sub
ret
cli
jl
and
pop
and
and
cmp
push
clc
lret
test
add
mov
pop
daa
add
fisttpl
mov
lcall
add
in
dec
nop
call
daa
adc
sub
add
add
sub
jecxz
cmp
out
push
ds
add
ss
add
pop
xor
ret
pop
and
xor
int3
push
sub
adc
popf
icebp
or
sub
xor
add
jae
jge
movb
mov
adc
add
add
in
int3
dec
mov
mov
adc
adc
dec
jns
add
push
stc
jno
popl
fisubrl
cmp
aam
inc
mov
outsb
je
test
inc
inc
add
jne
dec
aam
xor
in
push
adc
push
jb
jg
mov
add
xchg
and
add
std
fisubrs
inc
pop
add
sbb
or
lods
or
and
jg
repz
repz
sub
jno
mov
mov
lcall
xchg
lret
fsubrs
sub
mov
test
jg
mov
jbe
test
cli
jbe
ss
popa
bnd
repz
loop
mov
mov
add
cs
xor
pop
mov
aam
add
ss
mov
jl
xor
data16
add
jns
or
push
sub
sub
cmp
int3
xor
daa
add
adc
cmp
clc
aas
add
add
and
pop
jg
mov
test
out
mov
and
cli
pushf
add
push
adc
insb
filds
add
imul
sbb
xor
into
out
add
xor
mov
xor
jno
mov
incl
xlat
pop
aaa
add
daa
add
xor
mov
or
rorl
cmpsb
jb
add
add
scas
pop
mov
push
insl
add
add
jg
adc
dec
sbb
pop
and
testl
xor
jg
mov
cmpsl
cmp
xor
lea
into
jmp
fcompl
adc
sub
mov
fsubrs
mov
shll
in
ljmp
std
outsl
inc
add
xchg
add
fadds
out
dec
call
cltd
fdivp
add
add
into
movsl
std
sub
mov
test
cmpsl
inc
cli
inc
mov
jp
shrl
test
push
shlb
mov
mov
imul
mov
xor
insb
mov
push
dec
sbb
fisubrl
in
pop
cmp
cs
in
xchg
xchg
in
dec
iret
es
shr
test
inc
inc
aad
add
lret
add
insb
into
stos
jns
fs
cld
dec
pop
test
repnz
mov
mov
adc
int
les
sbb
sub
sub
adc
dec
jns
adcl
aas
mulb
add
jnp
enter
mov
and
jno
jmp
sbb
les
mov
and
and
aaa
scas
cmpb
add
add
cs
sbb
popa
cmp
add
mov
pop
shl
data16
jmp
push
sub
lret
xor
cmp
push
push
sti
rcrb
enter
and
mov
cli
dec
or
clc
addb
pop
test
jne
and
lea
cmp
xor
das
and
aas
shr
push
inc
fldenv
add
rolb
dec
rclb
inc
adc
xchg
test
xor
std
add
jg
jle
add
dec
in
adc
call
mov
jnp
mov
dec
rcll
outsl
add
push
in
pop
sbb
roll
sbb
rclb
add
sahf
jecxz
pop
loope
cmc
movsb
xchg
ss
fcoml
dec
add
lcall
cmp
sub
repz
shrl
or
mov
add
mov
sarl
pop
lret
jg
push
shr
and
pusha
fldt
mov
loop
add
jne
add
jmp
sub
or
sub
aas
inc
inc
shlb
add
fistpl
imul
sti
fisubl
or
mov
sbb
cmp
add
fildl
sub
add
mov
add
add
adc
dec
xchg
test
popf
inc
imulb
jp
add
roll
cltd
cmp
sub
pusha
test
pop
push
lret
jbe
ljmp
ljmp
int3
add
cwtl
jge
pusha
add
inc
movsl
cs
lea
bswap
arpl
xlat
loopne
xchg
push
mov
lcall
or
xor
imul
mov
push
add
add
mov
rclb
jmp
xlat
or
unpcklps
jge
xor
cmp
je
add
insl
xchg
dec
jne
sbb
cmp
pop
sbb
fiaddl
jl
pop
xchg
mov
sbb
aad
dec
ja
push
int3
sub
jle
add
or
test
outsb
push
les
popa
fisubl
jbe
mov
add
jmp
jae
inc
cltd
pop
sbb
pop
or
bound
test
jl
push
lea
xor
add
adc
add
xlat
xorl
outsb
mov
xchg
ret
adc
xor
rolb
dec
aaa
cmp
ret
cld
and
sbb
test
mov
icebp
sub
sub
stos
and
cs
or
int
sbb
cmp
push
enter
int3
lahf
mov
or
or
push
push
popa
pop
insl
shlb
cmp
cmpsb
add
lock
loop
adc
mov
adcb
mov
pop
add
loope
insl
sbb
aad
cltd
test
movb
sub
push
jbe
adc
dec
jge
imul
daa
cld
jge
jo
push
push
sti
add
add
aam
fldl
mov
mov
pop
push
add
add
mov
int3
add
lea
add
add
mov
or
push
or
ds
xor
mov
add
cmp
pop
aaa
shlb
aas
and
add
push
movsb
pushf
push
mov
add
int
imul
cltd
lcall
cmpb
neg
mov
mov
insl
adc
xchg
cli
add
xchg
add
test
jno
xchg
mov
cld
or
ss
add
push
or
leave
jle
lock
cmc
push
add
sahf
ds
and
add
adc
in
or
jae
xorl
add
adc
push
int
lds
jmp
jg
add
add
jecxz
sub
lcall
push
push
es
sub
imul
adcl
xchg
mov
aaa
inc
sbb
sbb
and
add
and
cmp
scas
movl
add
jmp
movsl
movsb
xchg
or
in
sub
popa
mov
lea
jmp
mov
xlat
xor
rolb
dec
hlt
cli
es
cmp
add
add
ret
push
xchg
add
mov
pop
add
cmp
fwait
sahf
dec
adc
stos
dec
fmulp
sbb
add
dec
add
repz
sub
pop
pop
mov
scas
sbb
faddl
pop
cwtl
add
fstps
jb
insb
rclb
add
ficomps
out
dec
add
push
das
add
and
and
pop
cmc
lahf
cmp
pop
in
icebp
add
cld
mov
imul
stos
add
jo
or
stc
adc
or
imul
jmp
clc
fs
call
repz
add
jnp
xchg
jns
rcll
cmp
add
pop
mov
dec
xor
aam
fwait
cmp
add
es
add
push
adc
iret
int3
mov
cmp
jg
str
scas
pop
add
test
xor
sub
add
jnp
mov
lds
mov
and
repz
loopne
pop
repnz
int
add
add
push
ret
aaa
mov
add
jle
mov
aaa
aaa
stos
cli
xor
xchg
push
pop
aad
popf
stc
adc
pop
xor
adc
dec
pop
dec
inc
xor
cli
jg
les
and
add
add
les
add
pop
cmp
add
mov
jl,pt
dec
adc
add
add
dec
add
pop
add
sbb
movsb
push
add
inc
aam
add
sti
mov
inc
inc
out
stos
add
cmpsl
je
cmc
iret
stc
sub
jns
jl
rcll
test
jne
mov
mov
or
rorb
inc
jne
mov
push
cmpsb
add
iret
mov
hlt
or
dec
add
dec
or
add
jmp
mov
das
cmp
daa
push
clc
sbb
in
imul
add
inc
in
xor
jo
and
nop
repz
imul
add
rolb
pop
add
dec
dec
adc
pop
imul
and
mov
das
and
cmp
xchg
jmp
jg
ja
or
fisttpl
add
mov
add
je
mov
pop
jp
inc
add
inc
add
and
insb
je
push
pop
cltd
std
xor
add
add
shrb
add
and
mov
add
add
out
dec
int
and
insb
pop
in
jg
inc
adc
mov
scas
mov
cld
add
jge
lahf
inc
pop
sbb
mov
push
sbb
mov
jle
sub
ljmp
dec
or
int3
pushf
push
test
fucomip
mov
fucomip
fcmovnu
and
add
and
mov
add
jae
mov
sbb
loop
add
dec
jge
lock
out
push
push
lret
jmp
ds
jno
cmpsb
movsb
cltd
rorb
in
push
ljmp
cmp
test
mov
inc
rolb
jbe
add
aam
cmc
ljmp
pop
add
mov
in
jge
incb
in
fisttps
rolb
outsl
sub
mov
and
add
fbstp
stos
push
mov
xchg
lret
mov
pop
dec
call
add
popf
scas
das
fwait
add
aas
daa
pop
aaa
out
cs
aad
aam
xchg
je
int3
stc
dec
clc
or
add
mov
or
sub
mov
ficoml
leave
stos
dec
out
dec
ljmp
subb
cmp
aam
lds
cmp
inc
nop
adc
mov
or
xor
loop
sub
movl
add
sbb
movsb
add
add
mov
add
cmp
pop
addr16
xor
pop
jg
cmc
xchg
adc
push
rorl
and
test
xorl
add
jnp
add
pop
fldenv
sbb
mov
or
cmpb
xchg
push
loop
mov
mov
add
cmp
add
or
pop
fdivs
popf
pop
rclb
stc
cltd
popa
jnp
adc
inc
push
movsl
push
xorb
mov
inc
add
add
inc
ss
bound
enter
rorl
add
adc
inc
cmp
mov
mov
lock
iret
mov
add
sbb
mov
xor
call
mov
mov
add
jae
sub
aaa
add
xchg
fs
rcrb
add
sahf
ja
cmpsb
test
test
mov
aaa
adc
data16
mov
mov
pop
pop
push
mull
mov
arpl
lods
imul
addr16
lret
into
or
fwait
jmp
scas
add
addr16
add
aam
inc
mov
cli
push
aam
xlat
in
sarl
add
add
in
aam
push
mov
mov
sub
add
xor
scas
les
fcmove
out
pop
shr
add
es
jecxz
movl
sbb
push
add
dec
adc
mov
sahf
mov
add
js
jmp
sub
add
aas
jbe
repz
aam
push
push
mov
inc
cmp
push
std
rcrb
pop
inc
mov
mov
outsl
cltd
and
je
gs
add
filds
sbb
int
jp
mov
sbb
xchg
dec
jno
mov
cwtl
jns
add
mov
mov
add
pop
mov
xchg
lea
sbb
loope
cmp
add
push
xor
add
lcall
fldl
adc
add
ss
or
adc
int
add
rclb
pop
stc
leave
add
lahf
ss
movsl
jns
lahf
inc
add
incb
fdivrs
adc
add
xor
mov
dec
or
jnp
iret
lret
jno
cs
mov
inc
xor
dec
outsb
jno
push
scas
sbb
pop
mov
add
jp
push
xchg
add
mov
xor
add
mov
add
inc
test
adc
lret
add
cmp
or
mov
jbe
jae
mov
add
cmp
jo
pop
cmp
sbb
repnz
sbb
test
dec
sub
push
inc
inc
add
dec
sub
and
lret
pusha
cmp
test
and
aad
je
ds
cmp
rorl
in
push
in
jae
leave
repnz
aaa
movsl
mov
es
xchg
add
push
dec
sub
and
push
lcall
add
mov
ja
add
fistpl
mov
xchg
imul
aas
stos
lret
stos
add
and
push
lahf
push
cmpsb
add
faddl
test
test
pop
xchg
jb
mov
leave
jnp
add
popl
gs
ss
mov
add
je
or
cmp
incb
xlat
mov
leave
lods
inc
lahf
stos
push
lcall
shlb
loopne
push
or
test
jbe
mov
push
sbb
fists
clc
push
sbbl
add
push
mov
in
add
jp
test
xor
fadds
in
sub
mov
inc
sbb
imul
jno
or
sub
scas
and
xorb
loope
sbb
dec
pop
testl
dec
fcoml
mov
add
out
into
mov
popa
scas
push
dec
add
add
and
jo
popa
ficompl
sub
xor
stos
push
add
add
add
lock
fldl
test
sbb
add
xchg
sbb
cmp
jns
sbb
sbbl
add
test
shll
cmp
bound
and
imul
fwait
cmp
add
cwtl
ds
or
aam
pop
aam
and
ret
mov
lret
test
push
add
cld
xor
xchg
and
add
push
fstpt
mov
lock
and
rorb
loope
insb
push
pop
push
je
pop
xchg
into
popf
add
sub
pop
sub
or
or
popa
push
mov
cmp
or
mov
or
jecxz
jg
add
mov
lret
popf
inc
mov
sub
shl
xor
pop
leave
mov
mov
out
add
test
add
into
mov
pop
inc
add
xchg
int3
data16
nop
pop
pusha
scas
add
jns
add
ljmp
rcrl
imul
or
sarl
ja
scas
mov
add
jg
hlt
mov
cmc
faddp
addb
scas
ljmp
jmp
jge
sub
add
mov
test
leave
mov
leave
hlt
add
add
add
add
mov
mov
and
add
out
add
popf
xchg
adc
repz
cmp
sub
pop
add
int3
jne
jle
inc
jns
mov
fwait
imul
jmp
imul
cwtl
fcmovnbe
push
xchg
adc
inc
xor
add
add
or
mov
inc
loope
out
add
loop
xchg
cmp
add
adc
add
stos
dec
adc
in
or
jbe
sahf
push
pop
fmull
icebp
and
add
inc
scas
xchg
lods
sub
mov
add
arpl
mov
dec
lods
neg
out
push
push
add
push
push
movsl
insl
add
cwtl
out
jb
mov
sub
add
out
insb
mov
fs
dec
out
xchg
cmpsb
adc
add
arpl
inc
sar
fwait
cmp
pop
or
xor
repz
add
cmp
sbb
divb
arpl
xchg
add
sbb
add
inc
cmp
stos
add
js
or
std
sub
xacquire
iret
inc
sub
out
testl
cmp
faddl
xchg
addl
add
in
jns
dec
lock
add
aad
push
mov
ret
mov
fs
push
scas
test
add
sub
mov
sbb
lds
cmp
movsb
add
add
insl
add
cmp
fadds
jnp
add
mov
shlb
xchg
cs
aad
aad
loopne
aaa
inc
sbb
sub
mov
in
or
and
jecxz
xor
cmp
xlat
push
add
cmp
add
mov
mov
int3
cld
and
mov
fdivs
enter
xor
add
xor
movsl
lods
mov
push
mov
cmp
pop
adc
sub
add
leave
mov
outsb
or
add
cwtl
sub
xor
fisubrl
insb
mov
mov
add
loop
cmp
add
mov
pop
adc
dec
and
dec
js
daa
add
and
stc
les
popf
ficoms
repnz
add
inc
pop
pop
add
push
sbb
cli
rolb
sbb
mov
jl
dec
jno
add
cmp
cmp
xchg
mov
add
ja
add
add
fists
divb
xor
add
xchg
imul
cmc
les
outsl
sbb
int3
iret
cmp
xchg
lcall
addb
jae
addr16
ss
cltd
jae
imul
imul
pop
add
test
es
scas
into
add
ret
add
ljmp
movsl
icebp
outsl
mov
scas
inc
das
dec
mov
push
insb
enter
xchg
in
out
loop
cmp
xor
add
repz
movsl
bound
cmpsl
stc
dec
xchg
outsl
ret
mov
sbb
clc
pop
ret
ficoms
push
pop
into
xlat
add
in
jb
int
pop
ds
incl
mov
insb
js
aaa
movsl
xchg
adc
shll
mov
subl
inc
lcall
in
add
add
xchg
add
inc
cmpsb
std
pop
jge
lods
push
push
ljmp
out
add
mov
dec
pop
je
push
std
sub
jmp
mov
dec
pop
roll
inc
out
xlat
xchg
out
cltd
mov
fsubrl
mov
add
cltd
dec
pusha
inc
xchg
iret
testl
mov
daa
pop
lahf
add
data16
sub
ja
ret
add
xor
xor
rcrl
dec
dec
xchg
dec
popa
subb
add
aas
jo
fldl
or
loope
xor
mov
pop
cmpsb
xor
das
jp
push
aaa
cmp
inc
push
mov
int
nop
push
and
test
shrb
xchg
es
sti
adc
lcall
pop
dec
cmp
adcl
cmpsb
pop
jbe
pop
lea
dec
xchg
outsb
mov
scas
inc
add
add
mov
add
xchg
and
jge
in
adc
add
adcl
cmpsb
pop
cld
sbb
sub
add
jmp
ja
inc
add
in
or
insb
pushf
call
jne
add
add
jmp
stc
in
sub
mov
add
sub
xlat
bound
inc
push
outsb
dec
push
push
mov
push
add
or
stos
daa
addb
dec
and
and
xchg
jbe
dec
add
clc
nop
jne
sbb
add
add
add
insb
repz
adc
call
popf
add
bound
lahf
rolb
push
mov
add
aad
call
push
cmp
jmp
es
icebp
jge
add
jo
mov
cwtl
cmp
test
bound
or
sub
jne
ficoms
adc
xlat
push
sbb
xchg
ja
js
add
adc
jecxz
lods
cld
add
fwait
add
add
and
cmpsl
add
push
add
add
mov
dec
lods
inc
add
add
jno
xchg
add
fs
or
arpl
push
pop
aas
add
add
adc
cltd
and
out
add
dec
popf
xchg
adc
leave
add
in
cld
mov
push
push
cld
mov
addr16
pop
mov
jae
push
notl
imul
shl
test
inc
in
lods
es
mov
fistl
mov
mov
pop
and
pop
lods
hlt
ret
andb
std
jmp
jp
sub
xor
push
mov
cmp
cli
mov
and
add
xchg
bound
mov
or
sbb
mov
dec
mull
add
outsl
xlat
sbb
push
push
xor
and
and
andb
aaa
gs
mov
arpl
decl
outsb
addr16
add
dec
jo
sahf
leave
mov
outsl
ja
adc
mov
jb
jae
pop
andl
call
bsr
cmc
cwtl
fnstsw
add
popa
adc
mov
aas
mov
out
add
add
pushl
ljmp
nop
arpl
and
push
xor
addr16
sbb
cs
or
sbb
add
pop
add
aas
add
add
add
imul
mov
push
push
repnz
jmp
rolb
rcr
adc
adc
dec
xchg
cli
cmpsb
jg
sahf
out
sub
add
clc
xchg
bswap
mov
inc
add
in
imul
or
push
xchg
cmpsl
mov
mov
and
add
rolb
cmp
sahf
push
cmp
dec
ja
mov
add
leave
out
lods
sbb
mov
add
sbb
mov
repz
xor
inc
test
xor
mov
sti
pop
cwtl
add
jae
bound
cli
or
roll
fistps
bound
mov
add
inc
xchg
or
loopne
or
lret
in
stos
add
or
adc
fidivrl
lds
mov
lgs
lds
add
lea
sbb
outsl
and
add
arpl
flds
out
int
int3
test
addl
mov
add
push
add
push
and
pop
or
adc
mov
jae
mov
scas
xchg
outsb
cmp
jp
aaa
mov
xchg
les
and
sahf
mov
mov
sarl
repz
data16
push
inc
pop
inc
fsts
dec
mov
add
movsl
jge
pushf
je
xor
stc
sbb
flds
mov
mov
data16
add
add
add
fidivrl
mov
out
mov
addr16
pop
stc
cmc
add
add
ljmp
ljmp
shlb
loope
lock
outsl
push
add
movsb
mov
ret
add
popf
xor
testl
adc
movsb
jge
sti
es
mov
movb
sarl
ss
add
insl
mov
xchg
add
jl
shll
icebp
jp
or
add
sahf
xor
dec
push
add
fiaddl
mov
adc
enter
mov
pop
sub
insb
pushf
ret
js
lret
movsl
popf
leave
or
int3
repnz
stc
push
enter
mov
mov
mov
fimuls
add
dec
mov
mov
jmp
jecxz
xor
add
cmpsb
xchg
mov
stos
addr16
or
ja
ljmp
add
movsb
add
sti
rorl
add
mov
flds
jbe
add
push
fmull
mov
movsl
push
pop
data16
gs
add
stos
push
sbb
sbb
add
leave
add
add
popf
xor
jnp
lea
jno
mov
jecxz
popl
or
push
jmp
add
fists
push
into
add
lahf
int3
add
pop
cs
pop
or
cmp
addr16
sbb
adc
add
jmp
add
fsubrp
xor
testb
sbb
aad
sbb
mov
mov
cld
popf
ja
sub
sub
jb
jne
dec
mov
sbb
fidivrl
and
sbb
pop
add
stc
out
xor
sub
pop
incb
jbe
or
insb
and
add
cmp
lods
imul
ds
add
or
adc
mov
xor
sti
fwait
jns
sbb
add
fmuls
rorl
pop
xchg
inc
pop
lods
out
dec
and
push
testl
mov
jns
add
push
add
add
in
rolb
arpl
add
dec
das
pop
xor
xor
gs
add
popa
add
mov
sub
add
push
mov
jp
in
lock
icebp
inc
add
subb
cmpsl
xor
sbb
sbb
repnz
mov
or
enter
sbb
cmp
xor
in
rdpmc
add
pushf
popa
es
cmp
repz
fisubl
xchg
lods
stos
xchg
les
faddl
rorl
pop
xchg
test
addr16
mov
xor
add
js
cmp
fstps
into
test
aas
int
aaa
lock
in
fldcw
mov
lds
push
jno,pt
mov
add
out
out
mov
lahf
insb
add
repz
sbb
mov
outsl
sbb
aas
xor
rcrl
movsl
inc
cltd
cmp
add
mov
mov
push
or
add
out
in
inc
popl
pop
xor
mov
add
outsl
cmp
add
cmpsl
push
les
or
cltd
int
shll
jp
xchg
mov
pop
and
in
cld
into
les
add
add
pusha
iret
add
outsb
add
out
call
xchg
cmp
and
inc
je
add
repz
jnp
or
add
dec
inc
add
and
scas
fnstsw
lahf
gs
or
jns
insb
add
push
push
dec
sub
add
sarl
daa
or
dec
mov
cmp
dec
pop
inc
add
xor
sbb
inc
test
in
cwtl
cmp
add
mov
aad
adc
std
adc
jae
mov
mov
adc
out
or
cmp
shl
xchg
pushf
cltd
xchg
sbb
hlt
add
mov
shrb
in
jl
sbb
add
rol
jnp
test
push
push
add
cmpsb
jne
mov
addr16
add
sbb
outsl
xor
add
add
in
out
das
push
sahf
imul
or
leave
push
stos
add
in
add
icebp
cmp
testb
or
sbb
pop
add
inc
imul
lret
inc
pushfw
add
pop
filds
add
add
cmp
icebp
and
stos
insl
xlat
xor
push
add
cmp
dec
rolb
inc
into
or
and
dec
data16
imul
jl
pushf
ror
add
fsubr
iret
inc
push
fildl
xorb
addl
outsb
add
pop
dec
pop
dec
cltd
into
data16
xchg
add
jmp
es
xchg
jle
leave
out
mov
sub
or
nop
add
mov
jnp
popa
xchg
pop
and
mov
push
nop
add
test
out
ret
pop
fucomp
xchg
sbb
add
inc
adc
mov
movsb
in
stc
les
and
push
add
int
fs
mov
test
mov
cmp
mov
jae
scas
mov
cmp
xor
lods
adc
sub
mov
add
fiaddl
sub
sbb
add
xor
pop
dec
add
push
add
lret
test
cmpsl
mov
and
cwtl
scas
fistpll
xor
mov
xor
push
jge
push
jnp
cld
jp
adc
xchg
dec
add
adc
mov
pop
push
mov
add
andl
jnp
or
push
imul
jb
jnp
add
lea
sbb
sub
es
xor
jbe
push
rclb
pop
dec
add
cmp
scas
push
inc
pop
add
dec
cmp
add
lret
add
jnp
daa
sbb
mov
mov
loopne
pop
outsl
add
out
or
add
push
xchg
or
jb
ret
add
mov
aam
dec
lahf
and
or
incb
sti
es
xchg
stc
add
ficomps
add
add
cltd
movsb
popf
inc
sbb
test
add
xchg
pop
movsb
add
dec
repz
enter
es
add
add
ret
push
leave
add
sbb
push
cli
mov
sub
outsl
jno
add
lods
stos
sbb
call
sub
sahf
sbb
mov
pop
es
add
mov
add
jo
fcoml
ja
andl
insl
add
sub
mov
pop
cmpsb
add
mov
incl
pop
and
outsl
mov
pop
sbbb
add
test
rorb
pusha
sub
sbb
jmp
in
popf
notl
repz
lods
push
mov
push
lcall
add
add
add
and
xor
inc
mov
out
movsb
add
sbb
aas
and
add
add
push
les
fildl
mov
sbb
add
xchg
aam
add
sbb
lds
or
add
mov
inc
in
mov
add
shrb
mov
dec
lea
mov
jo
cmp
leave
xchg
jl
scas
or
xlat
lcall
jae
xchg
in
add
adc
mov
sarb
mov
aad
int
adc
out
out
push
les
leave
cmp
inc
in
add
mov
mov
mov
mov
add
cwtl
add
ds
xor
dec
loop
add
sub
add
add
add
flds
insb
test
jle
or
es
movsb
lret
add
std
ret
dec
add
mov
in
dec
push
inc
pop
cli
inc
mov
sbb
rorl
xor
jg
aaa
fbld
add
cli
add
jge
inc
js
sbb
jae
and
fcomi
aam
sbb
cmpl
aaa
cmp
or
xchg
add
xchg
mov
and
pop
add
add
xchg
lahf
add
xchg
daa
lcall
xchg
ret
test
out
in
jnp
stos
loope
add
cmpsl
insb
pop
add
mov
sbb
pop
pop
out
add
dec
xacquire
xor
mul
jl
push
mov
mov
nop
inc
dec
jnp
stos
xchg
lahf
adc
inc
mov
or
icebp
pushf
loopne
and
mov
leave
add
pop
pop
mov
fcmovb
cmc
sub
mov
sbb
cmp
int3
pop
mov
sbb
aaa
mov
scas
inc
or
add
mov
int3
xchg
ljmp
mov
add
jno
jmp
push
add
mov
mov
rclb
loop
add
adc
adc
push
ret
movsl
les
cltd
imul
lret
movsl
add
mov
adc
sbb
leave
sub
xchg
add
adc
dec
add
insl
leave
pop
mov
aam
add
or
mov
cltd
sti
mov
sbb
mov
test
and
sub
imul
mov
add
stos
sbb
adc
das
in
or
cmp
lret
jmp
js
pop
mov
fisttpl
ljmp
jo
cmpsb
je
out
scas
adc
pop
dec
inc
add
fnstcw
addb
xor
lahf
mov
mov
jnp
rorl
adc
cmp
xchg
dec
ds
roll
add
xor
repz
add
imul
ret
aam
push
rorb
xchg
jno
cmp
shrb
adc
out
loop
xor
add
push
mov
fdivs
testb
call
dec
xor
mov
popl
int3
add
jmp
out
mov
or
jno
add
les
fidivl
add
pop
sub
xor
imul
add
icebp
or
sbb
int
sub
inc
add
add
xchg
mov
add
add
sub
xchg
repz
aaa
sti
frndint
and
decl
xchg
sbb
les
pop
pop
mov
push
incb
dec
add
mov
add
imul
popf
or
shl
into
in
mov
add
call
mov
fs
orb
rcll
sbb
mov
cltd
popa
sbb
mov
es
je
xor
pop
inc
cmp
pop
sbb
lret
jmp
dec
scas
movsb
icebp
dec
inc
call
gs
add
cmp
xchg
imul
inc
mov
cmc
add
int
and
mov
mov
lods
sub
enter
cmp
dec
jecxz
add
por
daa
dec
mov
inc
or
js
or
mov
adc
jns
jbe
daa
mov
inc
mov
push
xchg
subb
jg,pt
push
add
or
fs
repz
or
ja
dec
xchg
inc
js
sbb
add
jns
pop
dec
or
add
cmp
aas
xor
lret
sbb
xorl
push
loope
dec
fildl
subb
push
sub
jmp
add
mov
les
pop
fisttpl
mov
sbbb
jne
call
cwtl
sbb
jb
add
rcrl
fmuls
int3
add
add
add
mov
pop
ljmp
pop
cltd
add
iret
adc
aaa
pop
mov
in
aaa
jno
aaa
mov
in
adc
or
js
clc
movsl
push
add
add
roll
add
mov
lcall
fcoms
push
mov
incl
cli
pop
add
and
in
repnz
add
jb
mov
gs
pop
lcall
fmuls
movsb
add
icebp
xor
sbb
xor
std
xchg
cmp
ljmp
ja
inc
dec
arpl
stos
cmp
mov
mov
out
mov
ret
mov
cmp
outsl
jg
jno
iret
add
mov
cmp
fildl
daa
xchg
add
xor
mov
add
insb
mov
jnp
stos
and
lds
mov
leave
clc
call
leave
fidivs
dec
add
pop
repnz
xor
add
out
add
bound
inc
stos
inc
pop
push
testb
cmp
sub
add
pusha
std
add
adc
aas
cmpsl
cmp
xchg
and
mov
testb
repz
ljmp
gs
xchg
aad
inc
sbb
and
imulb
xor
push
push
add
out
mov
jno
cmp
out
ja
mov
lahf
pushf
sub
dec
sub
and
popa
mov
cwtl
xor
dec
push
cld
add
loop
and
icebp
push
fucomp
cmpb
mov
popf
add
int
cmpsl
sarb
pop
add
jae
add
orl
add
sub
scas
add
sub
fsubrl
icebp
mov
clc
add
xor
lahf
mov
ret
sti
imul
inc
sub
stc
insl
push
rcrb
mov
push
dec
add
insl
lret
push
push
test
or
lahf
pusha
cli
sub
sarl
cmp
dec
jbe
and
push
into
cmp
add
icebp
mov
dec
add
dec
andb
iret
out
fidivl
adc
add
aaa
int
pop
mov
inc
fcmovne
popa
sbb
xchg
mull
out
int3
cld
pushf
stos
sti
or
adc
pop
sbb
pop
lea
rol
out
rclb
add
mov
repz
iret
inc
xor
arpl
and
mull
out
add
cmpsl
mov
imul
cltd
mov
roll
jge
mov
imul
in
js
lods
pop
xor
mov
add
sbb
int3
lods
jne
mov
loop
cmpsl
cmp
add
sub
outsb
ja
add
or
lods
sti
add
sbb
into
mov
adc
popl
cmp
arpl
out
imul
int
and
movsl
add
clc
sub
xchg
imul
jle
push
pop
push
cmp
dec
mov
pop
enter
lret
call
pop
push
mov
pop
or
das
sub
and
jne
daa
jge
addr16
mov
notl
std
inc
mov
sub
or
pop
cmpsl
jns
xchg
gs
cwtl
add
jmp
mov
out
add
xor
int3
cs
ljmp
push
pushf
movsl
push
add
mov
out
jge
add
mov
xor
mov
mov
insl
jbe
pop
add
outsb
mov
xor
mov
mov
cmp
scas
fbld
pushf
push
cli
cmp
rcrb
hlt
jae
cmp
hlt
xchg
jns
mov
aas
imul
inc
push
jg
ja
add
adc
add
adc
scas
mov
pop
inc
cmpsl
lods
and
icebp
dec
xchg
out
cmp
popa
xchg
mov
adc
cmp
outsb
jl
jno
xor
fiadds
rcr
or
pop
jb
cmp
adc
aad
pop
add
pop
dec
and
loope
mov
add
test
js
mov
pminsw
inc
pop
add
lahf
stc
jecxz
icebp
or
sub
jb
dec
sbb
add
jecxz
les
cmpsl
lods
outsl
xor
cmpsl
shl
mov
push
push
add
roll
icebp
lock
aam
cli
aad
push
mov
push
loopne
push
leave
ljmp
jle
jne
and
inc
pop
test
insl
add
std
out
lcall
add
push
lea
imull
add
pop
add
in
push
adc
sbb
mov
shll
int
sahf
adc
fimull
stc
jge
fstpt
pop
ss
mov
mov
test
les
xchg
std
add
xor
mov
pop
push
lcall
xchg
movsb
xchg
lds
lcall
push
inc
jb
xchg
mov
mov
xchg
jg
cmc
inc
test
lea
xchg
or
pop
add
lcall
call
test
faddl
mov
ja
add
add
stos
leave
arpl
adc
mov
lods
pop
mov
add
stc
lret
add
add
mov
mov
xor
sbb
inc
adc
xchg
pop
imul
mov
and
iret
mov
adc
les
push
pop
pop
sbb
outsl
push
adc
inc
in
add
push
bound
clc
dec
jae
fwait
sub
adc
mov
cltd
sbb
aas
gs
outsl
mov
shrb
add
xchg
add
jmp
clc
xchg
xchg
jae
std
insl
test
add
add
loop
sti
add
inc
cs
add
leave
add
xchg
cmpsb
repnz
xor
loop
ficoms
mov
addb
lds
out
stc
inc
jae
and
add
outsl
aad
fiaddl
int
xor
and
adc
in
dec
mov
lds
sub
sbbb
adc
mov
adc
aaa
sahf
addl
lahf
cld
jle
lock
xor
leave
test
pop
add
add
push
fnstsw
pop
add
xchg
dec
adc
loopne
insb
sub
adc
mov
jo
les
push
stos
add
pop
push
shl
fcomip
adc
xchg
jbe
les
scas
dec
pushf
sbb
in
es
xchg
je
std
test
scas
add
add
xchg
sbb
loope
inc
rorl
cli
movsb
rolb
fcompl
add
cwtl
add
mov
pop
cmp
add
or
mov
xor
outsb
mov
inc
ret
adc
push
add
xchg
sti
loopne
ret
add
rcll
dec
in
fldl
iret
inc
fs
mov
es
cmp
jmp
aam
add
scas
cmpsb
pusha
lahf
jle
je
xchg
sahf
dec
inc
dec
cmc
lods
mov
add
lods
push
xchg
aas
pop
ljmp
mov
fiadds
add
and
jp
jge
push
lret
add
xchg
das
add
cld
scas
test
mov
push
adc
sti
mov
sbb
ret
adc
call
or
add
mov
or
pop
test
pusha
dec
mov
in
and
imulb
cmp
les
push
cli
add
mov
add
sub
addl
add
pop
sub
cli
incb
test
fsubrp
insl
lods
cmp
push
mov
mov
cmpsb
inc
pushf
add
cmpsb
leave
add
scas
popa
pop
xchg
iret
add
testb
mov
call
push
out
in
dec
sbb
xor
add
push
test
xchg
sub
push
add
ret
lock
jbe
clc
mov
test
push
add
pop
cmp
sbb
sub
mov
xor
adc
test
mov
lods
mov
sub
adc
push
dec
fs
addr16
lods
hlt
aad
gs
popl
scas
inc
cmpsb
loopne
bound
cmpsl
test
leave
adc
xchg
cmpb
add
daa
sarl
xor
out
sub
fidivs
dec
pop
shrb
sbb
repz
push
jge
fucom
mov
pop
cmc
jle
sbb
push
mov
add
ds
xchg
fcmovbe
push
push
add
add
xlat
inc
jbe
popa
sbb
and
sub
inc
pop
les
add
mov
data16
add
and
push
push
adc
cs
ret
insl
jbe
cmp
ret
test
sbb
jne
cli
lahf
jge
add
adc
push
mov
inc
add
push
mov
inc
add
add
push
pop
mov
repnz
daa
lods
sub
imul
mov
inc
sub
loop
add
mov
ljmp
dec
in
fimull
mov
dec
mov
jg
xor
addl
add
cmp
xor
add
or
std
sbb
enter
test
daa
push
faddl
push
sub
add
fcomps
xchg
sbb
xchg
dec
cli
cwtl
push
mov
jne
push
add
add
sub
aam
mov
add
hlt
xor
jg
imul
push
movsb
fldt
inc
scas
jp
int3
fidivrl
repz
pop
cmpsl
push
iret
mov
idivl
orl
out
test
sbb
mov
aaa
inc
aam
in
pop
xchg
movb
add
or
xor
cmpsl
xor
sbb
inc
movsb
iret
add
fidivrs
cs
cmp
add
ret
scas
fdivrs
and
add
imul
popa
mov
add
sub
sti
jg
insl
hlt
movsl
push
test
mov
mov
push
push
dec
jo
mov
outsb
imul
mov
in
fs
add
cmp
popf
lret
leave
sub
cmp
add
mov
incl
flds
fstps
add
aad
xor
mov
lcall
loop
js
push
popa
push
push
sbb
xchg
sub
mov
jmp
fisttpl
imul
jg
add
add
jl
xor
fldl
sahf
add
lods
cmp
popa
cmc
mov
xorb
shrb
xchg
push
dec
mov
push
cld
shlb
inc
push
add
movsl
sahf
and
and
pop
addl
mov
add
push
aas
mov
sbb
mov
pop
sbb
addb
or
shl
xchg
pop
add
out
js
cmpsb
and
pop
xchg
stc
rcll
lahf
fs
lods
cld
fnstenv
faddl
mov
sbb
sbb
pop
jg
push
add
push
sbb
inc
pusha
test
bound
imul
add
mov
js
xor
add
mov
stc
xorb
cmpsb
pop
pop
out
test
add
sub
aam
rolb
sbb
cmp
add
inc
fnclex
mov
ret
je
dec
aaa
repnz
cmpsb
outsl
jbe
mov
sub
mull
cmpsl
xchg
pusha
inc
mov
dec
test
xchg
je
jb
loope
mov
inc
sbb
sub
sti
xchg
add
aam
add
lahf
stc
stc
or
nopl
xor
add
mov
mov
ja
dec
xor
test
dec
xchg
mov
test
xchg
add
pop
test
fnstsw
add
mov
addr16
addl
in
pop
cmpsl
or
dec
xchg
jmp
sti
jo
add
aad
nop
mov
dec
adc
adc
add
mov
mov
push
add
mov
add
out
sub
stos
dec
cmp
jns
pop
test
push
jno
pop
das
or
mov
es
fwait
or
jp
mov
js
add
pop
leave
mov
sub
ja
cli
dec
add
and
mov
fistpl
fidivrs
in
add
cs
rclb
scas
in
pop
adc
in
outsb
jp
mov
sbb
adc
pusha
inc
add
add
xchg
push
or
clc
cmpsl
jno
mov
inc
sbb
sub
lret
shl
inc
push
sbb
out
and
subl
adc
dec
xor
shlb
sbb
xor
jo
imul
mov
add
inc
add
xorl
subl
outsb
sbb
nop
out
xor
xchg
mov
arpl
ss
out
aam
push
mov
movsl
push
arpl
inc
push
dec
push
add
pushf
mov
insb
loope,pt
push
push
in
cmp
push
cs
xor
mov
add
lret
mov
lds
mov
fistpll
in
mov
inc
or
sub
lods
add
add
cmp
push
ja
push
fs
push
lret
sub
cmp
fisttpll
xor
std
fs
pop
popa
lds
add
push
add
add
int3
add
imul
push
lcall
add
cmc
adc
add
movsl
outsb
ror
aam
adc
add
mov
aas
imull
pop
mov
filds
mov
mov
and
ja
movsb
out
clc
add
add
or
in
xchg
cli
shlb
enter
dec
add
addb
mov
add
add
lcall
cwtl
fucomp
pop
or
mov
mov
add
jbe
hlt
out
add
or
xor
pop
ret
mov
stc
xor
add
popa
ret
sbb
pop
ss
outsb
enter
stc
hlt
cmp
add
leave
push
mov
scas
push
xor
add
sahf
push
sub
repz
mov
jno
pusha
outsl
dec
pop
xchg
push
add
add
or
das
loopne
and
call
ds
repz
xchg
data16
dec
pop
into
cmpsl
xchg
call
pop
clc
xchg
fs
iret
jmp
mov
jl
bound
sub
push
fwait
push
clc
jp
push
cwtl
test
xchg
add
iret
mov
inc
mov
mov
or
ds
jge
push
push
push
xor
or
dec
add
mov
and
out
pop
cmpsb
add
add
mov
dec
int3
lods
add
lods
jns
add
movsl
pop
pushf
es
xor
adc
sbb
xchg
outsl
mov
add
and
aam
add
add
adc
mov
add
subl
rcr
add
in
dec
and
mov
jo
loopne
int
jle
dec
pop
pop
xor
jno
pop
push
addr16
xor
mov
sti
mov
xlat
or
mov
jge
neg
lahf
add
xchg
mov
mov
add
add
or
push
add
mov
dec
pop
add
mov
rcrl
notb
into
aas
and
add
sti
sbb
into
cs
and
pusha
test
add
add
xor
aam
jne
jle
ds
push
cwtl
add
jne
out
daa
lret
aam
out
jbe
fimull
adc
sub
enter
or
add
enter
push
add
add
add
mov
out
add
pop
jns
test
mov
js
aaa
cmp
rcr
jecxz
sbb
inc
add
add
cmp
ja
dec
daa
aas
call
add
cmp
stos
lahf
jp
pop
jne
es
adc
add
add
loop
sub
scas
add
add
add
das
inc
inc
jne
xchg
call
cli
add
sti
jae
daa
mov
add
and
les
test
add
lds
movsb
cwtl
mov
push
pop
mov
outsb
insl
add
inc
push
aam
or
mov
imul
add
mov
fildl
clc
hlt
add
mulb
adc
cmp
lock
gs
inc
sbb
and
cli
adc
pop
add
add
loop
xor
sbb
aaa
and
cwtl
adc
rclb
sub
add
inc
roll
dec
mov
test
insb
dec
jae
jno
push
aaa
imul
les
add
pusha
push
or
add
mov
push
mov
shlb
in
and
sbb
jns
adc
test
aas
in
dec
pop
add
les
mov
fbld
stc
popw
push
cmp
and
xchg
fnstcw
push
xor
movsb
mov
inc
xor
xchg
sub
repz
les
xchg
pop
inc
inc
fildll
fdivs
inc
outsl
int
push
add
mov
in
jp
insl
and
stos
sbb
std
mov
adc
mov
stc
pop
and
dec
and
mov
push
adc
add
or
test
popf
xor
mov
test
shll
sahf
stc
add
mov
add
push
pop
xchg
mov
dec
int3
add
mov
fistpll
cld
adc
push
push
mov
adc
stos
xor
inc
mov
cmp
add
je
in
cmp
xor
xorb
in
xchg
cmp
adc
sub
in
push
mov
mov
cmp
push
daa
add
inc
mov
addl
shrl
cs
xchg
jg
add
or
jg
jmp
fucomip
push
cmpl
in
divl
and
push
or
lods
jno
add
fistpll
or
add
outsl
jo
jge
add
add
xor
add
xor
mov
jmp
test
xlat
push
out
and
sub
call
add
add
jbe
loop
add
out
loope
push
adc
mov
jnp
inc
and
fsubrs
mov
insb
fldenv
rolb
int3
xchg
sub
jg
xlat
loopne
js
insb
xor
pushf
or
ret
adc
out
mov
and
add
scas
cmp
stos
add
pop
cmpl
pop
mov
iret
ljmp
pop
das
jns
fcomip
xor
cmpsb
and
add
mov
sub
lea
loope
in
add
cld
repnz
xchg
test
add
leave
add
cmp
dec
cs
rcrb
jns
add
mov
rcr
dec
add
xor
add
stc
cmp
out
push
gs
inc
jp
adc
jno
dec
sbb
cmp
sub
push
add
cmp
add
adc
sbb
mov
dec
hlt
cmp
fdivl
add
add
and
inc
push
iret
testb
test
add
jne
jp
add
push
mov
inc
mov
lret
add
add
pop
add
push
mov
subb
orl
sub
std
cwtl
rclb
dec
sbb
xor
mov
lods
mov
adc
hlt
push
sbb
pushf
pop
jo
jae
mov
jl
cmpl
insb
cld
add
dec
icebp
add
in
push
add
lret
fildll
mov
in
xacquire
dec
mov
in
add
out
sub
add
movsl
dec
ljmp
popa
dec
or
add
incb
into
add
dec
sti
sbb
fists
aam
mov
das
inc
or
mov
pop
les
fistpl
push
mov
push
add
in
inc
push
push
loope
add
mov
pop
mov
movb
fwait
int
out
movsb
sbb
xor
or
jo
icebp
scas
insl
mov
add
inc
sbb
jge
jno
add
clc
push
xchg
inc
sti
add
or
push
in
fistl
xor
cmc
xor
push
addl
fistl
cwtl
xchg
enter
lahf
sub
in
add
mov
sbb
or
repz
cmp
mov
add
cmc
loopne
pop
cld
inc
xchg
xor
and
add
add
pop
add
mov
jmp
xor
xchg
mov
add
add
push
add
lds
add
movsl
add
mov
bound
rolb
dec
stos
in
lahf
ds
add
inc
push
add
and
stc
sbbb
sbb
mov
mov
test
dec
shr
mov
sbb
push
cld
mov
jecxz
push
jl
movsb
lds
or
leave
incb
or
repnz
mov
add
jmp
mov
inc
mov
sub
mov
pop
jge
pop
out
and
insl
scas
push
xor
add
adc
add
add
xchg
add
fadds
fcomps
add
idivl
add
add
adc
es
add
ja
inc
sbb
or
sbb
aaa
lahf
sub
and
sub
add
or
pop
loopne
add
inc
fisubrl
add
movsl
dec
adc
adc
scas
pop
fwait
into
pop
adc
dec
lret
xor
mov
pop
rol
ja
pop
add
cmpl
mov
jg
cmp
scas
aad
add
mov
les
lret
pop
mov
add
inc
ja
sbb
dec
cmp
push
cmp
in
aam
cmp
adc
rorl
scas
jns
out
jg
fistpll
inc
outsl
mov
xchg
xor
add
jae
dec
xchg
mov
sti
lahf
mov
add
pop
js
loope
add
sbb
sbb
in
outsl
jne
sub
xchg
shrl
pop
cmp
xor
mov
js
xchg
lea
mov
push
aas
cs
cli
repz
xchg
or
arpl
cmpsb
aaa
cwtl
pushf
mov
rclb
ds
cs
test
daa
jae
push
sub
add
aad
jg
add
in
les
jns
test
mov
in
loopne,pn
popf
mov
add
fidivs
push
out
add
mov
jno
test
cmp
dec
sbb
fs
and
push
test
mov
sub
popa
ret
icebp
add
cwtl
stos
popa
ljmp
sub
sbb
inc
cmp
dec
aam
cmpsb
loope
repz
add
mov
push
rcll
inc
movsl
pop
sbb
jl
add
adc
dec
sub
mov
hlt
pop
in
dec
jo
inc
add
mov
jnp
rcl
push
mov
sub
sbb
add
leave
clc
mov
cmc
inc
loopne
dec
outsb
or
cmpsl
std
sbb
fwait
add
inc
fbld
sub
inc
or
add
loopne
out
stos
aas
in
outsl
cwtl
add
add
xchg
add
add
js
xchg
add
xor
mov
mov
mov
nop
inc
popa
fildl
inc
cmp
aaa
sub
fwait
add
imul
add
je
into
hlt
mov
or
xor
fldcw
xchg
fidivrl
pop
xor
repz
movl
add
iret
mov
add
sbb
sub
xor
cmpsl
or
pop
cmp
jg
inc
cld
ret
icebp
mov
fmul
push
add
in
mov
ret
mov
add
add
mov
les
fwait
push
fucomp
add
out
repz
jno
push
dec
lcall
pusha
jnp
imul
push
lods
xlat
test
add
cmp
mov
lahf
mov
xor
xor
mov
adc
jge
add
cmp
adc
add
jo
lock
sub
add
push
aam
shll
scas
push
test
sub
add
scas
sbb
or
add
repz
add
mov
in
cmp
div
push
pop
call
inc
or
push
fdivrl
ficomps
ret
add
push
call
sti
sub
dec
adc
add
inc
loopne
sbb
pop
iret
jne
xor
enter
and
movsl
cmp
lret
add
add
push
add
xchg
test
add
arpl
mov
ret
add
bound
inc
add
in
cmp
inc
push
nop
cs
or
ss
nop
push
incb
outsl
add
add
jp
andb
cmp
jecxz
xchg
es
mov
xor
jge
xor
std
add
clc
inc
pop
xor
adc
xchg
xchg
add
cmp
xchg
push
loopne
loop
dec
subb
icebp
in
scas
rolb
add
jnp
test
lock
add
es
cmp
andb
jbe
sbb
or
stos
xchg
mov
add
sbb
mov
maskmovq
testl
push
mov
in
icebp
xchg
mov
gs
les
mov
jg
jp
and
out
ffree
mov
mov
mov
mov
pop
add
or
xchg
in
pop
mov
ret
sub
cmpsb
jns
add
fmull
add
add
dec
outsl
xchg
loope
fadds
cmp
and
lcall
jnp
lods
fildll
aad
cmp
or
cmp
mov
sub
out
outsl
call
mov
jno
sbb
shrb
mov
pusha
icebp
stc
jle
jno
mov
fs
push
bound
sbb
hlt
lea
out
pop
add
popa
sbb
adc
mov
leave
add
adc
enter
adc
adc
ret
pop
mov
rcrb
outsl
dec
loope
and
pop
outsl
rolb
add
pusha
sub
add
push
out
shl
add
xor
aad
data16
test
pop
out
add
out
cmp
add
xchg
mov
imul
leave
cmp
out
add
inc
and
stc
lret
stos
and
loope
inc
mov
enter
add
add
cwtl
and
xchg
xchg
jle
mov
mov
test
fstl
ltr
sbb
push
or
mov
lock
add
xor
add
popa
mov
and
pop
lret
ss
test
popl
jo
xor
push
mov
leave
or
fs
adc
lret
jp
xor
jle
add
das
jb
nop
daa
adc
cmp
lcall
add
inc
movsb
cltd
add
push
sbb
sub
jmp
sar
movsb
mov
ret
push
ss
dec
int3
out
pop
out
dec
cli
insb
add
adc
in
shlb
scas
and
in
xor
arpl
out
jmp
dec
test
add
or
add
sbb
lret
fcoml
lahf
and
adc
mov
lea
and
add
mov
in
mov
imul
and
xor
adc
iretw
pop
cmpsb
cmp
out
in
incl
mov
pop
sti
mov
push
pusha
loopne
imul
sbb
inc
enter
jne
pop
fidivs
add
jecxz
add
jne
xchg
mov
das
scas
xchg
repnz
pushf
jg
loopne
xchg
and
sbb
cmp
jle
mov
cmp
mov
add
mov
fwait
pop
stos
imull
sbb
in
popa
movsl
xchg
sub
aam
adc
sbb
inc
adc
add
fsubrl
popf
add
lods
ss
mov
icebp
add
push
loop
cli
out
fistpl
jmp
add
pop
xchg
add
jp
test
xchg
add
pusha
movl
jo
clc
mov
dec
int3
push
or
and
cmpsb
jp
insl
add
sbb
mov
daa
mov
aad
push
dec
ja
ja
jp
mov
jbe
add
insl
stos
fcom
scas
mov
sarb
jmp
test
or
pop
jmp
xorl
add
outsb
sbb
inc
pop
sbb
clc
add
add
stos
out
adc
add
sbb
jo
add
mov
mov
add
add
sbb
xchg
pop
and
sbb
or
add
insl
rorl
xchg
push
push
aam
add
cwtl
test
inc
mov
popa
jge
lret
jmp
or
cmpsl
add
add
jecxz
pop
dec
add
daa
cli
pmaxsw
and
outsb
add
sub
lea
add
add
in
and
add
sbb
lock
cli
mov
and
mov
iret
push
jb
cs
std
shl
lahf
jge
adcl
fs
fsubrl
jb
push
xchg
pop
add
add
les
push
pop
int3
inc
cmpsl
add
test
add
or
mov
std
add
lret
ljmp
push
pop
jg
aam
scas
stc
mov
scas
fdivs
jl
pop
aas
out
and
add
je
mov
cli
sub
das
mov
adc
adc
dec
mov
pop
add
adc
sahf
lds
add
sbb
dec
xor
cmpsb
lret
daa
lea
xor
add
ficoms
sub
gs
ds
lea
cld
in
push
add
cmp
shrb
fnstsw
push
insl
xor
xor
add
xchg
std
jnp
pop
icebp
addb
str
imul
dec
stos
xor
add
jnp
inc
or
mov
rcrb
add
mov
dec
or
push
nop
insb
lret
push
push
lret
ja
add
imul
sbb
sub
mov
ds
cmc
add
stos
add
jno,pt
in
imul
fs
ret
jb
loopne
fwait
mov
add
fstpt
cli
sbb
push
dec
mov
cmp
and
add
repnz
sahf
ss
mov
or
ja
daa
ret
les
aad
pop
and
pop
pop
pop
hlt
fldenv
cmpsb
arpl
xlat
mov
hlt
jo
lods
cmp
xor
out
fadds
cmpsb
add
mov
xor
add
sbb
fucom
out
js
lods
test
repnz
and
fistps
pop
ljmp
add
mov
movsb
push
and
pop
cmpsb
sbb
xchg
xchg
loope
aas
cmpsb
fidivs
dec
pop
in
add
out
call
adc
outsl
and
outsb
jmp
add
mov
pop
icebp
lock
rcll
push
add
inc
dec
add
test
mov
pop
xor
xorb
mov
jo
dec
insb
inc
mov
sbb
scas
sbb
mov
shll
sbbl
or
sahf
scas
mov
pushf
cmp
cld
xchg
mov
lea
pop
add
mov
cmc
push
filds
push
out
push
ffreep
inc
fiaddl
pop
add
out
jle
jbe
aaa
loop
nop
pop
mov
jno
dec
lock
mov
scas
or
into
dec
add
xchg
add
sbbb
xchg
dec
cld
add
jl
rorb
push
mov
pushf
and
inc
shl
jle
rcll
shrl
pop
enter
and
ljmp
add
xchg
pop
push
sub
pop
xchg
movsb
or
xchg
mov
ror
inc
negb
fisttpl
test
cmp
in
in
adc
mov
push
sbbl
lock
pop
push
add
mov
pop
jb
fstps
lea
loop
push
ss
stc
cmp
mov
inc
cli
adc
mov
pop
push
push
xchg
xchg
inc
out
inc
mov
fs
add
pop
add
pop
add
push
ret
stc
sbb
mov
pop
jp
repz
dec
pushf
jnp
and
dec
add
in
sahf
ret
stc
add
ds
add
jns
and
adc
cmp
ret
int3
and
ret
imul
out
and
mov
lods
mov
movsb
cli
rcll
xor
mov
jl
push
daa
xchg
cltd
andb
hlt
iret
incl
add
jno
inc
outsl
push
mov
icebp
push
inc
inc
test
mov
cmp
out
sub
dec
xlat
das
jmp
lcall
fadds
pop
inc
stc
das
sahf
divb
add
sbb
push
imul
add
inc
push
mov
add
out
add
xlat
loop
insl
pop
dec
or
ret
popa
popf
rolb
sbb
addr16
adc
testb
xchg
cld
jnp
mov
and
lods
mov
je
push
in
rcl
imul
push
leave
lea
jle
mov
test
pop
fstps
out
mov
enter
cli
test
add
popf
and
decb
sahf
adc
push
scas
mov
jnp
out
jne
lret
insl
cmp
es
int3
add
add
cs
js
pop
je
pop
scas
pushf
mov
mov
add
pop
jbe
lock
push
mov
loopne
out
shl
rclb
int
xor
notl
bound
inc
cli
add
testl
pop
push
imul
mov
jp
pop
add
add
add
adc
mov
inc
xchg
sbb
movsb
sbb
repnz
xchg
mov
hlt
gs
movsl
pop
mov
push
je
insl
outsb
std
icebp
cli
cmc
add
dec
jg
bswap
add
dec
or
ficomps
add
ds
jp
out
in
testb
shlb
add
mov
xchg
cmp
and
shl
fcoml
mov
add
cli
mov
shl
fcmovb
add
lds
mov
pop
jno
push
sar
inc
ret
push
mov
add
cmp
jno
or
sbb
in
mov
sbb
movsb
loope
mov
add
add
add
inc
dec
mov
insl
aad
stos
add
adc
aad
add
jle
fwait
jns
xchg
pop
sbb
cmpsb
hlt
or
and
addl
cmp
xor
xor
popa
and
outsl
xchg
or
in
imull
add
stc
test
push
add
inc
loope
add
xor
test
add
lcall
push
in
or
sub
pop
pop
js
orb
dec
add
enter
dec
int
int3
sub
arpl
divb
sub
add
add
push
lcall
movsb
mov
sub
push
add
adc
aaa
xlat
fnsave
clc
jbe
and
add
negl
adcl
and
fnstsw
add
push
arpl
pop
add
mov
cmpsl
hlt
push
imul
adc
call
or
lock
fildll
out
add
mov
jp
daa
pop
lds
cmp
aas
mov
test
xchg
add
in
fdivrl
fisubrs
add
dec
add
jge
leave
cmp
pop
fsubr
lret
sbb
das
or
fs
add
add
cli
lods
das
sub
and
ljmp
dec
rcrl
popf
jecxz
mov
flds
cltd
sbb
je
addr16
je
mov
outsb
leave
add
mov
and
push
push
mov
in
repnz
add
in
fstps
inc
and
jnp
fadds
ror
lods
mov
addr16
add
cmp
or
fimull
xor
dec
or
loop
mov
xchg
and
jl
rorl
insl
cmp
add
movsb
dec
jae
jg
mov
test
add
mov
xor
nop
adc
sahf
shlb
shlb
pop
rolb
popa
fistpl
add
xor
mov
jmp
rolb
mov
push
cs
adc
ljmp
adc
mov
push
sub
jp
xchg
mov
clc
pop
fnsave
data16
adc
jne
out
cmpsl
sbb
leave
pop
fdivrl
movsb
mov
add
push
xor
dec
pop
add
lock
pop
arpl
int3
in
popl
mov
bound
jl
into
sbb
pop
imul
push
lods
add
dec
xchg
sub
scas
add
clc
xchg
jl
push
jae
pop
sahf
add
xchg
sub
filds
cmp
in
les
xor
in
pop
ret
lahf
cmp
cmp
add
and
fisubrs
hlt
add
shll
add
test
add
addr16
insl
addl
movsb
add
sub
outsl
xchg
enter
insb
rclb
pop
aad
push
or
test
popf
jns
or
xchg
xlat
add
roll
popf
add
sub
mov
add
lods
dec
add
add
push
pop
notb
add
xchg
stos
add
jg
add
and
add
dec
scas
jp
stos
cmp
les
sbb
ficoml
fadds
shrl
shlb
add
mov
inc
mov
jmp
cmpsl
pop
dec
fsubp
xchg
lds
enter
mov
add
sub
cltd
insl
loopne
dec
mov
add
and
sbb
daa
mov
mov
into
mov
sub
xchg
sub
mov
popf
arpl
dec
iret
dec
dec
or
out
test
ljmp
fmull
add
cmp
ljmp
insl
xor
xor
sbb
cld
dec
adc
pop
pop
mov
cmc
pop
xchg
dec
mov
inc
roll
xchg
adc
aam
dec
shrl
aad
rcr
sub
nop
ljmp
in
scas
outsl
test
add
int
adc
inc
push
mov
shlb
mov
lret
adc
arpl
mov
mov
pusha
repnz
pop
pop
adc
lock
out
add
loopne
cld
mov
inc
xchg
add
fbld
cmp
imul
cmpsl
shrd
punpckhdq
pop
add
push
es
xchg
mov
mov
jp
mov
pop
cli
push
sti
or
ret
jae
inc
xchg
pop
xchg
enter
pop
xchg
imull
sbbl
jmp
js
in
sti
test
cmpsb
push
or
cwtl
repz
add
mov
inc
sub
add
ret
repnz
push
daa
pop
imul
push
clc
jae
and
add
mov
fcoms
add
add
fdiv
cmc
mull
add
push
inc
jge
dec
xchg
mov
pop
push
stos
jge
pop
xchg
add
orl
xor
add
and
loopne
pop
push
mov
mov
fildll
jg
cmp
aaa
es
js
ret
cli
mov
hlt
rcll
idiv
mov
ja
fsubr
xor
xor
incl
pop
cli
add
mov
popf
rcll
dec
aad
pop
rclb
movb
add
je
cwtl
add
aas
push
inc
iret
mov
loope
push
or
jecxz
in
cli
fistl
mov
cwtl
js
push
add
add
dec
clc
std
adc
jae
ja
mov
add
mov
add
cmpb
xchg
add
and
shlb
es
std
decl
int3
inc
repnz
lds
lock
das
int3
shlb
sbb
scas
mov
aad
ds
fadds
xor
xor
mov
fimuls
sub
fisttpll
lret
ret
mov
xchg
iret
in
mov
lahf
add
and
es
push
push
or
adc
add
pop
mov
push
fcmovb
push
test
cmp
test
inc
test
or
popa
add
pop
pushf
add
mov
sbb
ljmp
sbb
clc
stos
add
and
inc
or
jg
sub
icebp
sub
test
ja
dec
bound
sbb
call
sti
add
movsl
inc
lret
popf
xor
sbb
int3
aas
pop
and
dec
sub
divl
std
adcb
lock
in
rcll
fsubl
add
fnsave
sahf
adc
fdiv
aad
and
adc
stos
mov
sbb
enter
aas
incb
xor
lret
mov
mov
daa
jl
outsl
in
and
cwtl
pop
pop
imul
add
add
dec
loope
sub
lods
loope
out
add
dec
ljmp
add
jo
xlat
add
xor
pop
js
add
jecxz
addl
add
in
xor
add
jecxz
xor
fldl
pop
jnp
pop
adc
rorl
inc
imul
pusha
sub
mov
push
outsl
add
in
push
dec
pop
rcrb
xlat
add
fwait
fwait
lods
add
cmp
push
mov
add
addb
stos
or
mov
in
roll
stos
add
cmp
cmp
add
pop
lods
xor
pop
imul
cmpsb
add
cmpsl
andb
aas
cmc
sub
add
xlat
push
add
xor
sbb
jb
dec
add
push
dec
jno
add
ljmp
pusha
lret
insb
push
add
aas
jb
pop
xor
out
das
add
rcll
dec
xorb
add
aaa
test
add
lcall
mov
add
sbb
and
imull
add
xor
add
ret
pop
fdivs
add
and
or
in
insl
add
add
and
add
add
jb
xor
mov
fs
jae
dec
jg
sub
scas
jecxz
mov
add
dec
jb
pop
das
jmp
add
movsb
add
push
sub
sub
or
ds
mov
mov
push
cli
dec
pop
add
add
outsb
test
add
fnsave
std
or
jle
scas
pop
sbb
or
xor
push
stc
pop
mov
pop
push
mov
jb
insl
lds
mov
fsubs
add
popa
and
cs
je
inc
paddb
divl
lds
adc
sub
out
and
fiaddl
das
testl
add
or
aas
movsl
add
add
add
ret
fstl
pop
sub
bound
mov
inc
out
or
stc
jmp
mov
cmp
xchg
adc
mov
jg
rol
pop
addb
add
mov
imul
adcb
xor
jmp
pop
sub
cmp
outsb
xchg
insl
sbb
pop
call
pop
xor
inc
cs
sub
out
lock
xchg
push
popa
arpl
stos
add
rolb
xor
iret
clc
std
subb
mov
jbe
int3
pop
add
cld
add
push
dec
add
mov
stos
adc
sldt
inc
movsb
pop
imul
outsb
movsb
add
xacquire
cmp
mov
add
aam
divb
add
stc
dec
iret
shrb
sub
stos
arpl
and
mov
ljmp
loopne
add
add
lds
add
mov
stc
pop
add
pop
mov
int3
dec
addr16
into
and
push
inc
push
and
int
mov
push
inc
adc
push
add
xchg
xchg
mov
scas
pop
mov
sbb
xchg
sub
and
ds
fcmovbe
aas
loopne
aaa
fs
jo
ja
mov
mov
adc
jb
adcl
add
mov
testb
push
add
movb
xchg
pop
add
arpl
inc
mov
xchg
movq
add
xor
fs
sub
add
add
add
jae
and
lret
mov
in
enter
pushf
add
outsb
popa
stos
add
add
add
cmp
bound
addb
in
xchg
mov
xor
mov
loopne
jmp
add
aad
mov
push
push
add
xchg
imull
pcmpgtd
shl
pop
cmp
inc
clc
add
push
enter
sahf
test
inc
mov
xor
fstpl
jp
jge
cmp
add
add
sbb
mov
fwait
pop
fwait
sub
add
adc
lds
imul
inc
pop
lcall
lods
call
lea
cli
xlat
add
addl
pop
push
inc
xchg
dec
cmp
sarl
cltd
fs
imul
aam
sub
mov
out
xchg
sub
dec
add
ljmp
lea
add
adc
pop
gs
push
cmp
xchg
enter
or
cmp
dec
inc
rol
lods
sub
adc
xor
roll
jp
pop
push
mov
sahf
push
fs
aam
ficoms
xor
pop
sbb
lods
xor
sub
repz
das
les
test
cli
addr16
subb
cmpsb
lock
adc
add
push
pop
and
adc
arpl
mov
push
add
sub
jp
movsb
sbb
add
and
and
icebp
pop
inc
or
mov
cs
jbe
movsb
push
add
mov
loopne
cltd
push
add
xor
fwait
pop
add
daa
insb
cmc
mov
xor
add
xchg
int3
xchg
push
test
xor
xchg
sub
dec
popf
daa
inc
enter
push
mov
frstor
inc
ret
icebp
les
push
push
leave
aaa
inc
das
xor
mov
popa
mov
je
add
pop
lods
hlt
push
clc
add
and
rep
adc
dec
jne
dec
or
dec
lock
les
inc
sti
scas
adc
add
pop
pop
filds
jo
rcl
xchg
add
out
add
loop
pop
add
add
in
add
xchg
cmp
lds
xchg
sub
jg
sbb
movb
add
outsb
hlt
add
xor
out
push
lds
lret
scas
fisubl
pop
add
test
orb
ficompl
cld
xchg
sbb
add
jbe
ret
fldcw
in
into
or
cmpsl
dec
movsl
push
daa
push
icebp
mov
sub
shrl
and
add
in
outsl
xlat
mov
cmc
nop
inc
js
aam
loopne
inc
daa
fisttpll
int
lods
ja
mov
adc
andb
shlb
xor
aam
sarl
je
insb
jl
jne
push
push
add
ja
add
int3
mov
insb
cltd
lea
in
cmp
add
add
add
or
pop
push
mov
push
cmp
jnp
inc
jge
cli
ds
add
inc
les
mov
and
loop
pop
inc
pop
cmc
mov
or
out
out
dec
add
imul
hlt
cmc
or
int3
movb
arpl
sub
add
outsl
add
jmp
sub
addl
sbb
push
inc
ja
and
popa
movb
test
jns
or
sbb
xor
cmc
xchg
cmp
loopne
cltd
add
dec
inc
adc
mov
dec
add
daa
add
add
outsb
jecxz
jmp
add
int3
mov
jmp
popa
adc
cwtl
mov
xor
sub
add
cli
adc
enter
add
add
pushf
sbb
jecxz
sub
popf
scas
ljmp
jl
std
call
decb
scas
push
mov
sbbl
out
lea
mov
shl
add
inc
jns
pop
push
xchg
mov
mov
xor
xor
add
ljmp
mov
je
cmp
jno
push
mov
add
pop
movsl
js
inc
cwtl
push
aad
add
adcl
add
dec
mov
pop
or
outsl
pop
mov
xchg
dec
cltd
push
pop
pop
cld
xchg
or
ret
push
aas
xor
add
xlat
gs
jge
loopne
fistps
mov
icebp
ds
scas
clc
cmc
push
jb
aad
mov
sbb
sti
add
loopne
dec
scas
cltd
adc
jg
nop
popa
jb
push
adcl
rcrb
jge
out
xchg
js
cmp
cmc
cmc
xchg
pushf
ljmp
sub
dec
mov
push
push
push
xchg
or
sub
or
lods
sub
rorl
int3
cltd
sti
out
push
push
ljmp
add
incl
pmuludq
lods
add
jg
in
jnp
roll
add
insl
sub
enter
sub
shll
mov
mov
add
or
popf
sub
clc
inc
mov
popf
ja
lds
fsubrl
sub
cli
mov
fcomp
inc
clc
cld
add
cs
aas
mov
dec
cs
add
movsb
dec
outsb
push
ret
add
pop
lahf
cld
outsl
adc
mov
mov
sarb
xchg
addl
ret
je
mov
cltd
push
mov
sub
sub
mov
adc
dec
jne
das
xor
shlb
rorl
sub
lahf
mov
fsubr
loop
in
repnz
xchg
cli
std
add
sti
xchg
push
jg
push
shrb
pop
sbb
and
mov
jle
and
pop
stos
add
stos
sub
add
xor
inc
shlb
daa
jge
ret
enter
mov
rolb
cli
ss
mov
shrb
add
roll
pop
push
cwtl
push
adc
ja
sbb
xchg
mov
xchg
mov
movsb
mov
push
addl
add
mov
popf
jne
jno
add
add
sbbb
lds
pop
lea
add
bound
incl
lahf
lcall
subl
int3
add
mov
add
xchg
ficoms
xor
cli
sbb
int
jge
andb
enter
xchg
inc
aam
cmc
shr
jl
mov
imul
sub
jno
add
xchg
out
add
enter
pop
stos
ljmp
out
add
aam
popl
mov
pushf
cmp
mov
or
mov
repnz
add
adc
adc
sub
inc
add
add
aam
cli
movsb
jge
dec
je
pop
sub
in
xor
enter
push
and
mov
aad
dec
lock
shlb
lds
add
aaa
ficompl
add
frstor
or
es
lea
in
rcrb
stos
mov
movl
add
cmp
test
pop
aas
popf
add
out
fsubrl
add
andl
inc
xor
jl
mov
test
fs
ret
jle
add
and
lods
cmp
stos
repz
add
ret
jno
add
push
mov
js
sub
add
xor
faddp
add
icebp
es
fnstcw
push
cmp
fildl
sarl
cli
gs
movsb
enter
aaa
add
lahf
cmp
ret
vphaddubd
cmp
out
inc
lods
push
mov
pop
add
outsl
sti
into
test
repz
add
clc
dec
lcall
jmp
xor
xlat
call
add
add
rorb
xchg
adc
push
mov
cli
cli
add
mov
fs
pop
push
jne
and
add
js
add
cltd
add
cmc
ja
shll
int3
add
mov
pop
insb
dec
movsb
adc
mov
stc
lods
in
add
xor
add
dec
ljmp
movl
and
stos
cmp
add
or
loopne
icebp
in
inc
stos
aas
add
push
jge
and
hlt
in
scas
loopne
xor
sahf
rorl
add
scas
push
push
jnp
add
push
aaa
mov
outsl
mov
stos
dec
mov
add
push
mov
ret
sbbl
insb
and
sub
js
imul
cwtl
enter
adc
nop
add
ret
icebp
dec
aaa
movsb
pop
add
sbb
roll
ja
push
nop
call
mov
or
scas
inc
mov
adcl
add
sub
les
lods
aas
repnz
rcl
cli
sbbl
cltd
xchg
lock
jp
incb
adc
mov
xorb
add
insl
adc
dec
adc
add
jg
fnstcw
xchg
aas
cmp
sub
add
xchg
cmp
fwait
pop
adc
add
outsl
jg
pop
add
add
xchg
sub
roll
popf
mov
jae
pop
in
out
outsl
out
add
pop
inc
xchg
ffreep
cmc
mov
pop
mov
push
add
rolb
gs
fiaddl
fwait
mov
mov
hlt
lahf
arpl
sbb
nop
addl
arpl
inc
add
dec
sub
xlat
add
jle
add
incl
lock
or
in
repz
inc
lret
xchg
aaa
mov
add
sub
sub
aad
push
dec
mov
add
inc
pop
xchg
push
popa
push
cmp
adcb
add
adc
fadd
mov
inc
jnp
cmpsl
lahf
mov
inc
cmpsb
mov
add
movsl
or
and
add
out
inc
inc
jp
clc
movsl
loop
arpl
pop
add
and
jae
add
icebp
add
ret
bound
add
push
fidivl
ss
add
clc
push
por
movsb
out
int
add
add
add
push
mov
mov
arpl
dec
loop
sbb
add
cmc
shlb
test
incl
popf
adc
pop
adc
or
add
outsl
jno
pop
add
outsb
add
mov
add
rolb
stos
mov
add
add
xor
bound
add
adc
es
add
sbbb
push
sub
cmp
out
mov
mov
std
cwtl
mov
add
inc
repnz
or
lea
cld
jp
cmc
push
das
and
sub
cmpsb
fwait
add
gs
insl
fmuls
adc
add
mov
xor
out
sti
into
pop
pop
data16
fstpt
push
int
add
into
ret
pop
push
into
mov
push
cmp
or
sbb
loop
adc
fbstp
pop
lret
inc
fcmove
add
jge
or
sub
aaa
call
outsb
pop
lahf
and
into
out
inc
sarb
xchg
out
sub
cmpsb
test
sbb
out
imul
add
jge
test
xor
sbb
lcall
jg
mov
push
add
int
add
pop
pop
in
jne
outsl
xchg
add
arpl
in
cmp
loop
lcall
test
add
subb
cwtl
add
adc
and
xchg
dec
push
mov
mov
jge
add
push
clc
lods
mov
fmuls
sahf
mov
and
add
scas
test
push
xor
leave
add
adcb
add
inc
mov
popf
adc
mov
mov
ss
add
jne
add
mov
js
in
or
lods
inc
loopne
sub
popa
cmp
aam
xchg
imul
and
roll
clc
nop
out
xor
push
or
ds
and
adc
or
in
loope
ss
add
shlb
pop
jno
cmp
fdivs
call
lods
aad
add
test
adcb
add
sub
sub
cld
insl
add
out
and
add
popa
add
loop
add
add
fwait
cmc
scas
mov
jp
sub
add
sti
push
mov
add
add
xchg
imul
les
add
add
or
insb
xor
insb
in
adc
push
int
mov
stos
fcomp
cmpsl
nop
jl
pop
repz
push
jecxz
add
mov
jmp
add
pop
add
add
sbb
out
push
dec
imul
bound
and
xlat
mov
xchg
stc
lret
popf
ljmp
add
push
pop
sbb
js
add
jmp
or
xor
cwtl
lahf
or
fimull
imul
call
lret
add
movsl
sub
testl
add
mov
mov
or
roll
jb
xchg
pushf
sahf
mov
cli
push
in
addr16
fs
adc
mov
test
lods
adc
sub
mov
xor
movl
fcoms
mov
xor
into
and
cmp
jo
fsubs
loope
mov
in
add
enter
cltd
lods
fildl
jge
mov
imul
cmp
dec
lods
and
lcall
jo
inc
cmp
dec
add
dec
add
mov
push
add
push
sarb
shl
push
lcall
jns
add
data16
mov
cmp
hlt
lret
push
lea
inc
add
add
mov
add
push
adc
push
ds
popa
fnop
gs
add
add
loopne
add
add
incb
jae
jmp
dec
or
mov
mov
push
out
icebp
xor
std
cli
mov
xor
jb
loope
lahf
adc
push
add
fdiv
fiaddl
je
xor
iret
pop
add
pop
add
sbb
scas
sbb
jecxz
cli
sub
push
pop
repz
insb
add
mov
clc
push
push
sbb
fistl
inc
mov
push
and
xchg
add
jl
adc
lret
inc
inc
add
add
call
lret
mov
jno
pop
mov
mov
and
int3
add
mov
ss
mov
scas
or
in
mov
sti
sbb
mov
push
jns
dec
add
cmp
jbe
xor
jge
cmp
pop
or
add
sbb
mov
cli
or
sahf
inc
cltd
jns
jg
mov
nop
movsb
jae
out
mov
dec
addl
int
and
dec
mov
cmpsl
ds
in
lcall
or
daa
mov
rorb
fmull
mov
jmp
lcall
add
mov
xchg
inc
pop
and
and
jb
pop
sbb
leave
add
add
or
push
push
aad
repnz
hlt
add
add
add
std
adc
mov
and
pop
ds
daa
dec
inc
cmp
sub
mov
add
jmp
outsl
loopne
add
fiaddl
mov
add
jae
pop
xchg
icebp
fcomps
add
inc
test
push
imul
mov
push
ret
lcall
xorl
xchg
add
mov
fimull
mov
icebp
orl
or
hlt
js
push
cmp
fcmove
xchg
add
lret
xchg
add
dec
xor
cli
push
mov
in
shll
pop
ret
sbb
and
imulb
dec
pop
data16
jns
xor
adc
std
int
pop
add
sub
das
push
mov
stos
cmp
xchg
adc
stos
add
jne
lret
daa
addb
dec
daa
add
int3
mov
or
add
aas
cwtl
mov
les
bound
pop
mov
int3
outsb
shrl
jns
push
test
dec
jge
jne
inc
stc
jp
loop
lret
cmp
stc
add
adc
pop
dec
roll
xor
add
jno
xchg
jne
in
rcrb
ret
and
iret
inc
add
mov
xchg
cmpsb
jae
imul
aad
movsl
stos
and
sbb
cmp
sub
inc
mov
add
imul
add
stos
movsb
add
clts
mov
mov
lret
stos
add
inc
dec
inc
add
decb
lcall
sub
jge
add
add
test
aaa
sub
mov
int3
sbb
jle
dec
shlb
inc
mov
push
loop
mov
aad
addb
sub
adc
xor
mov
scas
cmp
push
xchg
aas
cmpsb
pop
and
add
or
mov
push
mov
add
add
neg
frstor
or
sbb
fistpll
xchg
push
add
jecxz
fnstcw
fs
add
mov
das
add
sbb
dec
int
adc
loope
fnstenv
cmpsb
cmp
add
stos
cltd
dec
add
in
adc
mov
sub
pop
imul
pusha
daa
cwtl
fistpll
popl
out
pusha
mov
jnp
sub
inc
aaa
sub
pop
fsubp
add
add
mov
push
add
jle
add
pop
cmpsl
imul
fadds
js
adc
notl
pop
add
orb
stos
or
add
push
add
push
jno
mov
ret
ljmp
test
add
shll
add
push
ja
push
cld
in
xchg
adc
imul
push
xor
xchg
filds
push
mov
xor
and
mov
mov
add
push
jnp
fidivrs
in
mov
dec
icebp
or
ffree
rol
xorl
movsb
jle
add
push
int3
adc
mov
fdivrs
call
jl
imulb
add
imul
inc
stos
or
add
in
add
add
mov
rolb
pop
add
jmp
cmpsb
pop
mov
xchg
mov
add
bound
push
dec
dec
movsb
add
rcll
add
fnclex
mov
add
add
add
movsb
das
xor
push
sub
lret
data16
cmp
add
outsl
cld
nop
jno
adc
jbe
push
outsb
mov
subl
dec
lds
jb
popa
jo
and
idivl
add
lret
test
testl
add
pop
ja
scas
mov
jae
mov
fistpl
push
shl
jae
and
xchg
add
xchg
mov
jnp
mov
sub
or
in
sahf
loopne
xchg
or
pop
or
jmp
inc
xlat
adc
push
add
pop
fiaddl
jecxz
or
cli
mov
stos
add
pop
jns
pop
ret
je
loope
push
cs
ss
mov
or
mov
cmpsl
in
push
mov
mov
inc
movsl
mov
js
add
fcmovnbe
mov
rorb
cmp
cmpsb
lock
and
cltd
mov
xor
mov
int3
scas
pop
in
loopne
adc
movsl
das
nop
nop
repz
dec
cli
inc
cli
movl
rclb
int
leave
sub
inc
add
push
push
add
js
push
jnp
cld
add
les
icebp
pusha
mov
mov
push
daa
pop
cld
dec
adc
out
push
stc
lret
cmp
sahf
lret
pop
pop
shll
shr
cs
mov
adc
push
or
rorl
mov
pusha
cld
xchg
push
pop
inc
aas
jecxz
or
rolb
divb
xor
andl
jb
sub
pop
mov
pop
mov
sub
cltd
sub
stc
xchg
popl
jnp
mov
das
add
add
add
andb
enter
dec
imul
pop
jg
jbe
add
jne
ret
push
loopne
mov
xor
fmull
add
pop
movlps
jne
add
pop
xlat
je
sub
cmp
insb
push
mov
enter
pop
test
mov
into
dec
inc
push
hlt
movsl
repz
and
je
stc
add
push
pop
xlat
xchg
and
mov
shll
mov
and
add
pop
push
or
enter
stc
ds
ret
cmp
xor
adc
add
dec
lret
add
mov
mov
and
fisubrl
pop
xchg
adc
call
adc
aaa
inc
xchg
jno
and
and
jnp
std
push
add
add
aad
jg
push
out
addr16
push
fisubl
sub
mov
xchg
pop
fadds
ltr
jmp
fldl
int3
mov
add
nop
pop
xchg
popl
sbb
sbb
and
scas
jne
cmp
sbb
add
sbb
add
popf
add
and
push
sub
xchg
pop
pop
inc
xchg
pop
add
sbb
xchg
imull
and
outsb
jno
jo
xchg
or
aas
pop
add
sbb
add
out
jbe
mov
cmc
addl
mov
and
mov
rcll
loopne
lret
sarb
roll
fs
sub
sbb
in
test
push
loop
lods
mov
test
stos
adc
sbb
pop
mov
adc
mov
mov
xchg
bound
addr16
popa
inc
stos
or
xor
hlt
push
aaa
jge
add
push
pop
dec
jp
aam
jns
movsb
add
add
lods
int
test
mov
xor
mov
mov
cltd
adc
inc
pop
fldl
jb
loopne
les
adc
cwtl
inc
jmp
daa
out
incb
xchg
xchg
mov
xchg
icebp
sbb
add
mov
lcall
aaa
leave
scas
mov
sub
and
xchg
push
movsl
fs
lret
dec
add
dec
mov
insb
fnsave
sbb
inc
add
test
fs
aam
dec
not
xchg
shr
add
pusha
nop
jecxz
testb
xchg
add
gs
mov
adc
scas
jns
add
sbb
aaa
mov
add
stos
mov
add
add
push
and
mov
xor
add
inc
add
ret
arpl
cmpsl
test
cmp
cmp
daa
enter
lret
ret
dec
inc
mov
shrb
adc
sub
xchg
idivl
and
cli
add
aas
add
add
jge
mov
inc
jae
sbb
lea
pop
sar
fsubl
add
xor
jg
ret
jmp
push
roll
addr16
cmp
and
jle
aad
add
iret
nop
add
imul
cmp
bound
cmp
and
or
add
into
cmp
arpl
mov
and
lret
jmp
int3
or
cmp
add
sti
in
sbb
inc
sub
add
jbe
or
and
iret
movsl
ret
sbb
mov
xor
add
sbb
mov
pop
add
in
mov
mov
dec
popl
ljmp
in
mov
into
cmp
bound
pop
xchg
pop
pop
adc
jbe
leave
arpl
rclb
fs
clc
ficoml
xlat
dec
shl
in
lcall
lods
sub
push
add
add
ud0
mov
pusha
add
fnstcw
add
pop
lea
test
lods
add
popa
sti
jmp
add
in
data16
cmp
mov
jge
mov
imul
dec
andb
fistpl
icebp
stos
mov
add
jnp
mov
mov
inc
mov
push
adc
popl
jns
add
dec
mov
add
mov
xchg
add
add
aam
ljmp
cmp
popf
adc
jno
rcll
xlat
add
push
add
or
add
add
dec
mov
xor
add
add
mov
add
hlt
repnz
rcrb
rorl
xor
pushf
jno,pn
jae
ljmp
sbb
add
loope
xor
dec
lcall
imulb
lret
pop
push
test
xchg
mov
mov
out
ja
jmp
sbb
iret
sbb
add
add
js
and
push
add
cmc
cmp
jecxz
jo
push
sbb
dec
add
pusha
js
loopne
cmp
push
outsb
push
cmp
pop
rcrb
mov
daa
add
test
add
movsb
xor
repnz
inc
leave
sub
mov
ja
sarb
add
sub
sahf
dec
loopne
sahf
dec
in
incl
inc
jge
outsb
imul
add
cltd
jp
movsb
push
or
add
sbb
add
add
jmp
testl
mov
add
ret
inc
push
movsl
outsb
xchg
std
xchg
pop
and
fbstp
adc
add
imul
repz
and
aam
and
out
xchg
mov
add
dec
mov
lods
adc
mov
add
jg
add
repz
jb
hlt
lock
add
push
mov
mov
sbb
stc
jne
ficompl
add
out
adc
sbb
push
add
prefetch
pop
shll
ret
dec
cmp
clc
add
rolb
out
push
adc
sub
test
mov
mov
fisubrl
addr16
bound
fsubrl
or
sbb
sbb
pop
add
add
push
xor
orb
es
push
push
movsb
mov
add
cltd
sbb
and
mov
mov
out
jae
push
mov
enter
notl
movsl
in
dec
mov
jns,pt
andl
mov
xchg
loopne
mov
dec
test
push
sub
ss
add
sbb
insl
lock
push
sti
xchg
inc
lcall
pushf
sbb
icebp
push
fstpl
js
test
pop
push
adc
int
xor
mov
fsubs
adc
inc
xchg
add
push
or
cmp
lahf
pop
scas
add
fidivl
in
nop
or
dec
add
movsl
nop
gs
call
mov
rol
pop
or
add
add
add
mov
imul
popf
popf
cmpsl
cli
adc
imul
repnz
sahf
add
insl
jb
shlb
popf
dec
cmp
stos
in
les
invd
add
jecxz
call
ds
and
aam
ret
aaa
sub
jnp
add
mov
add
incb
cmp
es
lea
fildll
into
and
xor
jns
movsl
xor
push
cmpsl
add
div
xorb
adc
rorb
add
sub
mov
xor
jmp
pop
dec
jno
dec
ret
mov
ret
stos
test
xorl
add
mov
in
mov
iret
xor
xor
jl
addr16
add
fwait
push
add
add
es
insb
repz
add
or
addb
jno
ljmp
stos
add
in
mov
xchg
sti
adc
cmp
jecxz
push
add
or
add
cs
add
mov
mov
test
negl
mov
lea
lahf
mov
sbb
cmp
daa
lock
lods
in
vphsubdq
lahf
cs
dec
mov
push
insl
cmp
pushf
add
data16
pusha
add
and
dec
xchg
add
push
pop
push
push
cs
mov
mov
lods
add
mov
mov
mov
mov
fsub
test
add
outsb
add
ss
test
push
fdivs
xor
rcll
mov
jae
cli
mov
in
movsb
ljmp
mov
hlt
mov
cmp
fwait
jmp
mov
and
push
ljmp
adc
stos
stos
xchg
loopne
cmpsl
sub
rclb
hlt
loope
cmp
push
sti
add
add
pop
aad
add
les
lret
add
add
popl
sbb
pop
lock
inc
fadds
dec
or
add
or
adc
mov
add
jns
mov
popl
cmp
jp
xchg
lret
faddl
ret
pop
mov
aam
fisubrl
dec
and
and
add
jo
jns
std
mull
pop
movsb
cmpsl
add
leave
jb
jb
sbb
jp
and
test
add
xchg
aad
add
add
cmp
fisubrs
aad
in
and
jns
test
mov
dec
callw
pop
lock
and
bound
pop
sbb
mov
or
dec
popl
ss
add
out
add
cmp
pop
iret
mov
pop
adc
add
push
cmp
mov
add
mov
inc
sbb
das
cmp
pop
sub
xchg
dec
add
push
add
fldt
or
fcomps
mov
fcomps
cld
js
xor
sbb
jge
jle
push
add
adc
test
add
cmp
mov
add
repnz
stc
add
enter
pop
fs
es
ja
hlt
mov
loopne
movsl
cmp
add
rcrl
filds
mov
adc
jge
bound
mov
shlb
pop
int3
mov
movsb
cmp
xchg
push
add
ja
jp
movsl
jge
cmp
add
mov
dec
add
imul
jae
mov
mov
add
mov
cwtl
loope
add
sub
outsl
add
mov
adc
fs
out
outsl
in
add
dec
xor
cmp
xchg
cwtl
mov
stos
inc
add
pop
aam
add
adc
xlat
push
push
push
adc
cmp
jp
rcll
xchg
xchg
cmp
xchg
add
push
sub
fwait
add
mov
test
imull
and
mov
push
xchg
ljmp
sub
xor
mov
cmpsb
andb
iret
loop
insl
add
sub
stc
test
mov
mov
push
mov
mov
mov
in
ret
dec
add
sub
add
lds
and
test
add
aas
scas
in
adc
inc
add
add
cmp
or
pop
push
push
add
leave
das
xchg
mov
ljmp
sbb
adcl
outsb
cmp
mov
push
fsubl
jnp
pop
inc
add
arpl
sbb
sbb
xchg
insl
mov
adc
or
jb
nop
fwait
mov
or
jnp
lods
cmp
ljmp
loope
mov
das
lret
add
repnz
movl
leave
shlb
add
add
mov
mov
xchg
push
addl
lahf
mov
std
cmpl
addl
je
jge
cltd
out
jg
add
popf
cwtl
or
add
and
lret
pop
add
add
out
add
or
les
rorl
xchg
sbb
dec
mov
or
add
ret
out
adc
fmull
cmp
jmp
xor
sub
cmpsb
stc
stos
cmpsl
dec
pop
mov
addl
ljmp
scas
fsts
cmp
mov
lods
push
and
add
stos
add
or
add
xchg
pusha
bound
jbe
scas
out
jg
pushw
and
add
aam
pusha
sub
addb
pop
jmp
inc
inc
sarl
rclb
ds
sbb
jne
ficomps
cmp
or
lret
cmp
pusha
and
mov
dec
add
mov
add
add
xorl
aad
daa
ss
xchg
xor
sub
repz
je
hlt
bound
push
hlt
jg
add
cmpsl
inc
pop
test
xchg
iret
mov
cmpsl
push
mov
add
cmpsl
loopne
adc
add
xchg
or
scas
push
sbb
mov
adc
add
inc
xor
scas
push
jbe
mov
cmp
sahf
aas
adc
push
pop
leave
sbb
ficoms
and
fsubs
add
in
add
stos
add
jp
dec
fwait
add
add
nop
mov
sbb
subl
push
xlat
leave
add
add
adc
or
add
xchg
inc
mov
push
rcrb
roll
leave
call
push
and
pop
clc
mov
and
dec
xchg
push
int
xor
out
mov
or
inc
add
les
and
xor
mov
push
faddl
add
bound
push
add
stos
je
das
push
stc
add
adc
pop
pop
idivb
add
movsl
cmp
pusha
and
pop
rcr
jmp
stc
jl
pop
add
mull
sub
andl
add
dec
pop
ret
and
inc
mov
push
jo
and
or
scas
aad
cmpsl
add
xor
xor
aas
out
cmpsl
sbb
cmp
imul
pop
mov
xchg
fmulp
adc
rclb
xor
sbb
cld
fwait
pop
ss
mov
sbbl
outsl
adc
insl
pop
imul
shrl
lock
ror
jne
call
loopne
push
aaa
repz
ja
lret
pop
dec
jle
xlat
add
mov
je
leave
pop
js
add
or
stos
push
in
insb
xchg
mov
jb
cmp
mov
dec
pushl
out
and
rcll
add
cmp
adcb
loop
aas
xchg
mov
shlb
xor
sahf
aam
push
add
push
int3
jle
ljmp
add
lods
mov
pushf
add
and
mov
and
add
sbb
aas
add
jp
adc
enter
and
pop
mov
pusha
fldenv
cmc
dec
add
add
and
test
addr16
lret
push
add
add
add
pop
dec
fldl
add
out
lcall
mov
xor
fstps
and
out
ljmp
jl
fwait
dec
fwait
sti
jp
test
loop
push
shll
pop
add
pusha
mov
mov
pop
sub
cmp
sar
insl
repnz
frstor
pop
int
sub
clc
add
cmpsb
movl
xchg
pop
stc
pop
icebp
ja
push
dec
fidivl
std
cs
adc
out
mov
ret
cwtl
imul
mov
mov
jmp
adc
dec
ret
faddl
and
inc
mov
sbb
stos
mov
jns
dec
lret
add
mov
lret
pop
das
xchg
cltd
mov
push
leave
ja
mov
imul
idivb
push
andl
add
xchg
add
cmp
pop
push
push
mov
xchg
cld
mov
sbb
jmp
stc
jmp
fisubs
add
ljmp
je
call
fsubrs
mov
add
mov
or
add
cltd
ds
add
lcall
outsl
notb
in
xor
mov
xor
aas
mov
out
mov
push
mov
movl
xchg
jo
mov
mov
insl
add
mov
sbb
bound
mov
test
pop
rolw
pusha
push
cmc
fildll
leave
cmp
stos
or
aas
lret
cmpsb
dec
fstpl
xchg
loopne
push
popa
cwtl
jmp
mov
test
mov
sbbl
cwtl
gs
jecxz
aas
stos
iret
push
mov
dec
bound
int
sbb
clc
pop
cld
in
mov
add
mov
outsl
push
fwait
popa
in
xchg
addl
movsl
fiaddl
ja
push
fs
mov
mov
jg
jae
mov
pusha
mov
dec
sbb
icebp
stos
shl
int3
jae
data16
jae
push
cmp
adc
and
std
inc
fnstsw
out
cmpsb
shlb
xchg
cmp
cwtl
daa
mov
bound
push
pop
rcrl
out
add
negl
ret
mov
push
add
cltd
xchg
add
and
fisttpll
lret
mov
daa
aad
outsb
les
xor
out
mov
jns
pop
jp
sahf
add
add
idivb
enter
inc
cmp
pop
imul
ror
sub
or
jns
mov
rcl
pop
xchg
imul
pop
adcb
push
rolb
jb
lods
pop
pop
add
ret
adc
add
and
dec
stc
leave
fldcw
push
inc
xchg
clc
in
ljmp
add
push
nop
lret
and
std
dec
push
add
clc
sahf
into
cmp
sub
and
xchg
jb
mov
lahf
pop
add
add
mov
pop
cs
push
inc
fwait
inc
cmp
addb
cmpsb
popf
test
add
mov
cmc
mov
pop
mov
inc
ret
testl
sbb
push
push
mov
nop
dec
add
jp
sbb
hlt
add
or
js
and
in
add
cmpsb
fnsave
xor
sub
sbb
test
jbe
es
lcall
into
cmp
jae
popf
add
or
fs
mov
rorl
add
cmp
xor
andl
mov
sbb
testb
dec
add
adc
fimuls
outsb
in
pop
add
mov
add
cmp
add
lret
cld
add
mov
add
xchg
cwtl
mov
sbb
mov
ret
mov
data16
enter
add
add
dec
add
std
scas
inc
mov
add
xor
movsl
or
subl
dec
in
add
add
ret
push
sub
add
dec
fmull
rcr
fstp
mov
add
pop
clc
add
imul
cmp
mov
add
dec
jg
push
add
add
fildll
clc
mov
int3
cltd
aaa
add
add
inc
ret
push
sar
inc
xchg
arpl
jnp
loop
out
test
inc
add
call
cmp
and
push
jbe
movsb
xor
jns
test
jg
stc
loop
dec
ss
mov
stc
add
inc
mov
mov
nop
cltd
sub
ret
pop
mov
je,pn
sbb
xchg
imul
loop
add
jnp
icebp
dec
cmp
add
sub
test
sbb
xchg
sub
scas
add
aas
jp
mov
add
add
movsb
cmpsb
ja
add
xchg
add
enter
dec
add
fwait
xchg
ficompl
rorl
add
add
pop
xabort
mov
scas
jo
pop
jnp
dec
add
cs
add
xchg
pop
adc
add
mov
inc
bound
sbbl
dec
xchg
loope
add
loope
jbe
std
xor
pop
lds
lret
testl
daa
leave
cmp
mov
shl
push
add
sbb
sti
add
cmp
mov
arpl
adc
movl
inc
addl
imul
cmp
add
jns
out
aaa
gs
xchg
push
push
add
int
and
adc
and
xor
loope
test
cli
orb
or
mov
aaa
xchg
mov
fmul
les
add
mov
or
mov
out
lods
stos
clc
and
fadds
fldcw
dec
or
cmpsl
push
outsl
fstpl
push
xor
outsb
dec
roll
ja
out
add
lods
or
pusha
push
sti
add
sbb
dec
ret
cwtl
add
xchg
stc
sbb
sub
or
aaa
push
pop
add
or
out
into
mov
add
add
notb
rolb
add
cli
stc
push
add
ss
add
lahf
rcll
xor
lcall
add
mov
mov
xlat
pop
int
les
sub
addb
mov
pop
cld
ss
psrlw
add
push
in
add
adc
add
aad
add
or
std
inc
add
lods
mov
imul
sbb
add
rclb
and
mov
ljmp
xchg
jmp
xchg
add
popa
pushf
scas
repz
sub
push
lea
test
cmp
in
cmpsl
mov
push
push
jnp
add
xchg
fwait
xchg
inc
mov
test
jo
xchg
insl
jae
test
pop
dec
add
xor
and
xor
jae
call
fcompl
jno
add
add
mov
inc
add
std
mov
mov
adc
sbb
jne
test
cmp
add
add
mov
xchg
ja
in
xchg
loopne
mov
mov
push
lods
stos
inc
sub
inc
adc
imul
jbe
jns
cmp
and
mov
cmp
cmp
ljmp
sub
mov
std
inc
repnz
andl
lock
bound
int
jmp
je
fimull
fwait
jg
insb
xchg
mov
pop
add
add
inc
xchg
lds
mov
loopne
xor
ja
scas
push
addr16
or
jge
sarl
sahf
pop
imul
lea
sbb
sub
or
movb
idivl
add
fs
aad
xchg
cli
popa
sbb
mov
sub
clc
mov
jae
adc
jp
daa
add
mov
mov
sbb
insl
ljmp
in
pop
add
mov
xor
and
xchg
adc
and
xchg
shlb
fsts
add
mov
lcall
pop
int
in
add
add
push
add
add
adc
sarb
hlt
jg
jp
bound
inc
pusha
mov
insl
mov
mov
sub
dec
fmul
push
cmpsb
hlt
fs
add
inc
sbb
add
sti
cmc
and
add
sub
add
add
adcl
mov
fcom
sti
cmp
out
add
stc
out
cmp
add
ficompl
or
incb
or
push
jno
mov
lock
mov
adc
enter
or
or
push
addb
add
in
in
adc
sbb
ljmp
jae
add
push
in
inc
inc
cmp
fs
or
or
popa
cmpsb
add
popf
push
mov
je
lahf
add
mov
ficomps
sub
add
stos
or
mov
call
adc
mov
xor
imul
inc
xor
cmp
mov
xor
iret
add
stos
rcll
push
adc
add
ds
add
pop
pop
xor
sbb
loopne
jo
mov
pusha
fistps
nop
push
jg
jo
and
stos
xchg
mov
mov
movsl
fnsave
add
xchg
xchg
add
mov
add
fwait
gs
dec
mov
add
adc
in
add
jg
stos
xor
pop
add
fsubrl
sbb
ja
add
inc
xor
add
inc
push
aas
lods
add
pusha
push
cmp
ret
lea
sub
adcb
jnp
xor
add
mov
push
jno
cmc
add
pop
scas
test
sub
negb
gs
jge
faddl
std
hlt
adc
sbb
add
loop
jb
pop
daa
ds
sarl
dec
outsb
push
int
sbb
mov
xchg
ljmp
dec
jae
sbb
push
jnp
pushf
cmp
sbb
jb
imul
out
add
mov
dec
add
mov
sahf
push
and
push
mov
and
loopne
sub
add
cmp
test
imul
add
loope
dec
scas
jb
pop
mov
push
rorl
mov
cmp
jg
adc
jp
mov
pop
scas
popf
inc
lret
lea
cmp
ja
xchg
add
xchg
xor
adc
enter
aaa
int
sbb
mov
enter
popf
add
add
mov
add
ss
add
xor
roll
jne
lea
cmp
add
add
xor
test
sub
add
mov
add
negl
movsl
test
movsl
push
or
lods
shrl
pop
aad
add
mov
rorl
mov
add
jnp
add
cmpsl
es
mov
lock
into
fisttpll
subb
cmpsl
cmp
arpl
add
fistl
and
add
jne
jno
in
int
outsb
out
jmp
nop
pop
and
shll
outsb
sarb
add
xchg
cmp
pop
lods
add
pop
scas
pop
dec
push
es
insb
xlat
push
or
int3
add
pushf
add
lods
subb
imul
in
xchg
enter
xchg
add
jle
mov
and
pop
inc
outsb
add
cltd
mov
mull
push
and
sub
push
mov
in
stos
cmp
fildl
or
shll
jle
or
add
fimuls
jge
adc
mov
add
add
int3
inc
and
add
fwait
fs
jns
scas
ret
mov
sahf
icebp
cmp
cmpsb
orb
mov
out
add
icebp
int3
xchg
fldcw
jg
adc
mov
cmp
push
rcll
mov
lcall
add
mov
lcall
mov
flds
push
hlt
mov
repnz
nop
int
lock
add
lock
aas
add
fldl
pop
push
sub
jle
add
add
xchg
and
mov
daa
test
imul
xchg
adc
mov
mov
scas
rep
cmpsl
adc
add
clc
mov
shrb
repz
and
pop
loopne
mov
add
add
jg
cmpsb
push
add
lds
pop
jno
mov
repz
add
add
add
fsubrl
addb
cmp
out
daa
cmpsb
pop
stc
add
mov
push
add
xor
jle
pop
add
inc
add
nop
add
mov
cmp
or
cmpsb
add
pop
fisubs
cmp
fabs
xor
mov
add
push
clc
shll
pop
addl
dec
or
jle
fisttpll
push
add
add
add
add
or
test
in
out
leave
mov
insl
daa
movsb
xchg
add
xchg
sbb
pop
jle
mov
sub
das
mov
fists
add
ja
in
into
das
sbb
shll
add
and
add
call
mov
or
mov
mov
lahf
jo
ljmp
bswap
add
inc
and
sti
dec
add
ficomps
jno
add
mov
lret
outsb
xor
xchg
jno
mov
ret
out
arpl
dec
mov
push
add
xchg
jbe
loopne
sbb
xor
shl
movsb
pushl
repz
outsl
lock
or
cvttps2pi
sbb
mov
jge
imul
sub
sbb
push
push
loopne
add
add
mov
and
stc
xlat
cld
adc
dec
add
jle
filds
and
add
add
xor
add
out
mov
arpl
imul
test
data16
mov
add
insb
ret
fcomp
ret
add
sbb
jne
scas
push
daa
and
test
sysexit
adc
cmp
and
xchg
cmp
mov
mov
xor
xor
pop
sahf
bound
inc
in
add
push
push
imul
xor
fcoml
xchg
loope
adc
dec
adc
rorb
cmpsb
popl
fistpll
pushf
movb
arpl
lods
jg
add
add
cmp
insb
clc
aad
jl
jmp
jp
roll
arpl
sbb
jae
addl
jo
rcll
imull
mov
mov
add
xchg
and
insl
lret
push
ja
cltd
jnp
or
add
inc
adc
cmp
mov
imul
add
es
pop
add
dec
fists
cltd
mov
or
stc
jg
out
test
dec
bound
push
stos
add
arpl
mov
stos
daa
add
cmpsb
jmp
pop
sbb
jno
leave
rcr
or
jp
repz
pop
push
mov
shlb
add
inc
inc
add
cmc
sbb
pop
dec
imul
ljmp
sub
out
call
sbb
fs
cmp
inc
test
push
nop
nop
xor
jb
ds
shlb
adc
inc
mov
push
subl
push
push
fs
cmp
mov
inc
pusha
xchg
loop
jg
add
jns
sub
push
sub
mov
sbb
jo
lock
push
lea
das
and
mov
rcrl
jle
sub
aaa
std
cltd
mov
xchg
lods
sbb
mov
mov
aas
lea
roll
add
int3
call
test
mov
aas
add
adc
aam
inc
or
and
adc
int
push
jnp
bound
or
inc
fsubl
popa
push
mov
loopne
sub
imul
add
cli
in
insl
ss
inc
dec
test
add
repnz
mov
je
xchg
jp
pop
ficoml
push
and
int
sub
ljmp
repz
add
dec
dec
pop
sub
sbb
jp
pop
add
add
mov
lret
cli
mov
leave
sub
movsb
add
cmp
adc
je
sub
sbb
pop
movsl
add
sbb
add
imul
loope
or
or
es
mov
shrb
add
es
shlw
add
add
insb
fnstsw
loopne
add
mov
js
mov
adc
rcrl
mov
les
int3
data16
add
sahf
adc
sbbl
and
mov
pop
add
mov
outsb
push
ret
pop
js
sub
push
xchg
repz
ss
sbb
xchg
or
sbb
dec
mov
inc
add
scas
dec
xor
in
cld
into
add
cmp
cmp
stos
mov
ret
rcr
pop
lods
lods
mov
fistpl
add
xchg
pop
mov
jl
dec
push
scas
xchg
loop
inc
dec
jmp
sti
mov
and
and
mov
stc
repnz
sub
fdiv
jg
add
dec
add
adc
pop
movsl
dec
push
inc
sbb
lock
sbb
stc
push
fwait
and
or
call
add
rclb
add
shl
sahf
test
add
testl
cmp
and
mov
jbe
and
xor
cmpsl
xor
cltd
add
add
outsl
movsl
mov
sti
lock
out
add
movsl
in
gs
es
and
sub
repnz
les
int
add
aaa
inc
lahf
mov
bound
xor
pop
je
jl
jns
incb
lds
add
push
xchg
mov
jb
test
imul
xchg
adc
lods
add
fwait
out
in
sti
scas
xor
test
rcl
cmp
mov
add
inc
adc
sti
fcompl
bound
add
sbb
cmp
addr16
dec
out
add
fldl
push
scas
div
test
femms
cli
xor
mov
test
mov
fdivs
or
stos
lock
incl
mov
mov
mov
cmp
ljmp
aaa
mov
iret
lret
mov
imul
push
mov
xchg
jge
sub
mov
jge
aaa
push
mov
inc
pop
sti
cmp
mov
add
add
add
scas
sbb
push
fsubs
sub
inc
add
cmp
sub
fidivs
repnz
dec
xchg
or
mov
mov
or
stos
cwtl
mov
and
iret
add
xor
and
bound
lret
xchg
push
movsb
mov
mov
inc
mov
add
jo
jb
sub
mov
xor
mov
adc
xor
addb
std
icebp
or
pop
movsl
dec
push
repz
and
mov
add
add
and
int
iret
and
lds
shll
push
fwait
jnp
xchg
lahf
sub
stc
push
repnz
fisubrs
mov
repz
movsb
add
add
jo
xor
push
add
jge
inc
mov
push
pop
add
push
rclb
or
movsb
outsb
push
add
inc
js
inc
in
out
imul
int
test
in
add
xchg
push
sbb
iret
scas
add
cltd
cmc
inc
mov
stos
xor
movsb
fsts
mov
add
adc
add
xchg
cmp
sbb
scas
pop
mov
add
mov
stos
sub
xorb
enter
inc
add
jp
push
xchg
jb
xchg
mov
mov
jnp
mov
std
cli
and
adc
cmp
xchg
pop
push
stc
out
pop
jecxz
fcoms
aas
cmp
ja
popa
push
jecxz
mov
movsb
ret
inc
or
adc
inc
sub
ds
mov
imul
jo
call
add
add
adc
fwait
out
daa
fmuls
iret
adc
sti
mov
in
add
mov
pmulhuw
lock
push
fimull
add
cltd
inc
pop
and
jecxz
inc
lods
and
jb
mov
xchg
les
adc
ret
dec
pop
sub
mov
test
push
pop
mov
cltd
jbe
cmp
cs
hlt
pop
inc
shlb
pop
ljmp
push
movsl
fistpll
mov
inc
fwait
adc
push
imul
and
add
lods
daa
lea
xor
push
adc
inc
shrl
gs
add
in
ficoms
sub
xlat
inc
pop
mov
xchg
in
leave
jnp
sbb
mov
pop
xor
mov
sbb
add
jmp
add
inc
inc
xchg
cmp
and
mov
cmp
imul
cmp
cltd
add
cld
push
jg
jbe
push
ret
fmuls
sbb
mov
or
push
popf
inc
fcmovb
sbb
pop
inc
push
cmpsb
in
jb
cmp
add
sub
or
add
xchg
add
add
mov
xor
addl
add
xor
pop
pusha
fisubrl
cmc
mov
add
adc
test
add
add
inc
add
stos
xchg
xchg
add
mul
or
rorl
add
dec
or
pusha
rorb
push
or
xor
mov
test
jmp
jmp
cld
add
lock
add
aam
mov
pop
push
idivb
ss
or
add
dec
test
fildll
flds
cmp
cmc
sbb
sub
lahf
rcrb
or
sub
mov
add
rcr
add
aas
iret
mov
jecxz
pop
lods
inc
call
add
lods
aas
lcall
push
add
test
add
mov
int
int3
add
jno
mov
dec
repz
dec
dec
leave
mov
xor
pushf
cld
jnp
dec
jns
and
mov
lret
lds
sub
test
sbb
out
sub
stc
sub
mov
add
insb
dec
icebp
das
into
dec
ljmp
repz
cltd
push
xor
dec
stc
cmp
ja
inc
out
xchg
ror
push
cmp
inc
pop
cltd
xchg
aam
stos
jge
mov
subb
test
xchg
add
cmpsb
aas
mov
sub
lahf
add
not
mov
fdiv
or
cs
fcmovu
xorl
dec
add
adc
add
or
inc
stos
shlb
xchg
fwait
xchg
sub
push
add
pop
pop
lock
clc
repnz
xlat
movsl
ret
xchg
adc
sub
pop
sbb
pop
sub
pop
cmp
lods
push
dec
fsts
inc
leave
push
adc
jno
out
dec
jae
fs
insb
add
rol
add
jge
add
je
add
iret
pusha
cmpsb
add
insl
mov
daa
je
push
xchg
lds
mov
flds
filds
jns
xlat
cmp
js
repz
add
or
xchg
xor
out
movsl
imul
outsb
sahf
mov
ror
insb
je
test
enter
jo
jp
add
insb
cmp
mov
test
cmp
aad
jne
adc
push
mov
xor
cli
sbb
sbb
inc
mov
enter
outsb
ret
or
aas
popa
ja
adc
call
xlat
pop
jb
pop
and
adc
insb
add
cltd
hlt
mov
mov
mov
jg
das
inc
xor
sahf
pop
repz
adc
push
les
add
cmp
push
mov
mov
pop
test
call
cld
dec
mov
packssdw
add
push
hlt
jno
jbe
mov
hlt
sub
pushf
idivb
fiaddl
inc
ret
or
lret
xor
and
dec
lret
outsb
and
movsb
sti
das
cmp
add
in
lcall
cmp
leave
mov
shrb
add
add
mov
add
movsb
les
cltd
scas
rcr
sbb
aas
add
shll
dec
jmp
mov
int3
mov
stos
sub
test
push
pop
add
xlat
in
mov
dec
sbb
fwait
sub
mov
nop
les
push
mov
ja
in
cmc
cmpsb
cmp
mov
movsb
add
in
pop
pop
popf
out
mov
push
lcall
or
cmc
jmp
pop
roll
adc
add
cld
in
cmp
imul
jmp
jle
xchg
adc
out
call
sbb
dec
add
mov
xchg
jo
dec
in
add
cltd
test
fmull
das
loope
scas
xor
aad
add
jle
aam
adc
mov
mov
fstpt
add
loopne
push
test
adc
mov
addb
fisubrs
shll
fucomi
add
mov
mov
add
push
add
add
sbb
leave
pop
js
cmp
sbb
add
gs
inc
ret
lret
ret
jae
xchg
mov
adc
jae
xchg
hlt
add
mov
popa
repz
clc
push
pushf
jg
cmpl
sub
add
mov
lods
push
verr
add
add
rclb
cltd
add
popl
ficompl
mov
or
cld
add
xor
push
imul
inc
aaa
les
pop
int3
lahf
loopne
popf
es
mov
adc
push
rolb
push
data16
jno
cli
js
ret
test
mov
jo
add
daa
pop
mov
push
inc
outsl
push
fnsave
iret
and
out
arpl
xor
xor
add
dec
cmp
mov
shrl
je
adc
lcall
mov
dec
setle
add
aad
and
dec
dec
and
cmp
shlb
les
xor
xor
jg
call
ret
arpl
mov
aam
or
sub
orb
fbstp
stos
fsubs
pop
mov
mov
lds
fists
add
loope
add
adc
out
mov
mov
and
add
fisttpl
or
xor
sti
pop
jae
fdivl
icebp
mov
orl
xchg
add
mov
lds
cmp
inc
xor
mov
inc
or
add
cmpsl
enter
jo
out
test
xchg
leave
hlt
pushf
sbb
adc
gs
and
ret
cld
jp
imul
pop
notb
cmpsb
adc
add
fcom
add
mov
scas
in
jo
mov
add
add
add
add
cmp
cmp
std
lret
add
sar
test
add
adc
daa
in
repnz
imul
inc
fisttpl
imul
add
pop
ljmp
adc
fimull
pop
aaa
ret
add
and
jecxz
add
push
jg
jo
pushf
fisubrs
fadds
push
mov
mov
lea
repz
fstpt
xor
push
xchg
add
arpl
mov
pop
stos
xor
stc
jge,pt
les
subl
clc
adc
add
incb
mov
pop
imul
sub
ficoms
loope
add
or
mov
jnp
movsb
xchg
inc
fnstcw
test
add
outsb
jnp
fsubs
outsb
jo
popa
cli
les
das
add
add
xchg
add
ret
fcomps
xor
add
aad
pop
inc
out
fcmove
stos
pop
lldt
dec
jmp
push
imul
movsb
lods
loope
mov
icebp
sbb
popf
scas
test
mov
add
lea
mov
test
cmc
roll
cmp
sbb
inc
movsl
sbb
or
inc
sub
loope
cmp
sarl
insl
sahf
fsubrs
pop
push
add
jnp
hlt
add
repnz
add
pop
and
jge
fwait
in
callw
fadds
pop
nop
and
pushf
or
add
insb
in
lahf
adc
ljmp
add
dec
add
out
aaa
mov
and
popf
loope
pop
add
adc
out
nop
lret
mov
push
xor
adc
jae
xor
and
push
testb
inc
sbb
cmp
pop
pushf
les
inc
repz
inc
xor
mov
sub
add
jns
stc
popl
push
mov
add
mov
ret
cwtl
cmpsb
ror
jmp
shlb
add
lods
add
fs
xor
mov
sti
imul
jbe
popf
add
add
popa
add
adc
rolb
lds
add
push
out
pop
add
add
aam
hlt
enter
stos
mov
or
lods
in
add
cmp
push
mov
sbb
lea
sarl
add
orb
outsb
enter
jnp
ror
cmpsl
ljmp
movl
fcoml
add
add
push
and
xor
dec
js
imul
pop
addr16
int
jle
shr
sbb
repz
insl
cmp
test
sub
sbb
icebp
xor
stos
bnd
repz
cmp
add
shl
mov
rcrl
adcl
cmpsb
and
add
mov
and
imul
lock
nop
add
xchg
imul
insb
add
repz
jno
add
xchg
push
sub
cmpsl
in
xchg
add
mov
scas
mov
add
add
das
lret
xor
movsb
jb
enter
shrl
adc
push
inc
bound
sub
aam
jne
jne
rclb
leave
pop
add
mov
cmpsb
test
adc
dec
iret
stc
insl
popa
lcall
add
into
incl
inc
and
movsb
push
out
mov
sarl
jecxz
and
mov
jnp
sbb
add
push
cmc
add
xchg
mov
mov
out
dec
mov
fildll
add
add
mov
in
mov
add
xchg
arpl
imul
pop
lds
int3
pop
int
or
iret
mov
cmp
jbe
add
adc
adc
xor
dec
add
loopne
inc
xor
shll
and
ljmp
and
push
or
xchg
add
xchg
in
sub
add
fwait
aas
xchg
jnp
lock
bound
cmc
add
or
jns
ret
push
movsb
add
push
adc
faddl
push
push
add
add
insl
leave
jge
add
push
daa
mov
xlat
int
out
lock
push
nop
fdivrs
les
dec
mov
add
add
add
jb
repnz
inc
cmpsl
outsb
push
add
add
rolb
daa
pop
mov
mov
xor
ficoms
push
lret
call
mov
ret
in
push
ror
sub
movsb
sub
out
test
icebp
add
je
pop
imul
outsl
cmp
sbb
inc
adc
add
pop
add
jns
daa
xchg
addl
xor
ffreep
insb
jecxz
outsb
ret
adc
or
cmp
inc
jne
in
pusha
cld
out
pop
movsl
test
mov
hlt
stc
push
inc
pop
adc
pop
and
nop
add
fdivrs
adc
lea
jo
mov
push
add
clc
push
add
out
imul
or
jnp
push
call
cmp
rclb
push
add
add
and
outsb
cmp
jle
arpl
fnstsw
push
dec
scas
sbbb
pushl
rolb
mov
add
or
push
add
ret
cwtl
es
mov
das
js
xor
movsb
movsl
inc
je
and
shrb
jbe
sbb
xchg
vpunpckhqdq
mov
add
or
xchg
and
mov
inc
mov
fnsave
bound
xor
lcall
or
bound
add
push
inc
ss
int
jnp
clc
sti
xchg
in
xor
in
jnp
dec
push
sti
lock
jl
mov
mov
add
cmpsb
popa
insb
mov
xor
push
xchg
sub
push
sbb
out
cli
dec
cmp
add
pop
mov
test
and
lcall
daa
iret
sbb
dec
mov
add
in
insb
inc
jb
add
xor
cwtl
add
pusha
subl
add
in
stos
pop
cmpsl
mov
and
add
rclb
xor
imul
scas
add
loope
sti
and
lcall
sbb
add
xor
or
xor
mov
cmp
inc
arpl
in
mov
in
test
sbb
sub
jecxz
loop
dec
mov
xor
mov
push
ljmp
testl
mov
rorb
push
repz
jg
daa
add
outsb
addl
fsts
mov
mov
outsb
add
mov
into
mov
add
xchg
jle
jp
pop
repz
pop
mov
sbb
jge
add
xlat
xor
pop
jns
mov
add
shrb
and
cmp
pusha
cmp
add
xor
or
in
cmpsb
rolb
add
ret
roll
loopne
cmp
and
xor
stc
mov
jp
stos
and
push
add
mul
test
sbb
bound
std
push
or
adc
xchg
cmp
pusha
je
pop
cwtl
repnz
push
mov
loop
adc
into
xchg
arpl
xchg
sbb
in
movsl
lods
jbe
ficomps
add
push
or
lds
fidivrs
std
cltd
jbe
add
dec
lret
xchg
str
out
or
jmp
hlt
add
or
data16
and
fldenv
jbe
pop
pop
ds
lea
and
xchg
jle
mov
mov
inc
xchg
cli
ret
es
add
add
mov
cmp
mov
mov
cmp
xor
pop
fwait
push
out
mov
push
rorb
out
push
clc
adc
dec
stos
adc
mov
push
es
xor
jb
jge
add
mov
mov
cmp
mov
or
repz
ror
ror
mov
popf
arpl
dec
lcall
lret
cmp
push
cmp
push
rolb
fiaddl
das
mov
jbe
stc
lret
ficomps
pop
filds
loopne
mov
or
orb
sub
dec
lods
faddl
movsb
movsl
jne
adc
enter
dec
cmp
mov
add
and
movsb
mov
add
add
cs
mov
ficoml
xchg
sbb
mov
ljmp
jbe
repz
dec
hlt
sbb
or
mov
mov
clc
stos
fcoms
dec
fadd
jg
adc
leave
loopne
add
test
mov
mov
add
test
push
faddl
jns
pop
add
repz
inc
into
xchg
ret
sbb
xlat
xor
add
pop
or
enter
mov
xchg
jns
in
add
std
dec
and
lahf
cmpsb
daa
push
stos
fistpl
insb
adc
mov
lret
mov
ljmp
xlat
add
mov
lahf
add
pop
add
add
loope
fmuls
adc
faddl
mov
jle
addr16
or
movsl
sbb
add
sub
dec
xor
xor
jge
sub
add
orb
sbb
fisubrs
aad
push
inc
es
cltd
cmp
mov
lcall
out
das
add
test
add
stc
push
and
sti
cmpsl
mov
xchg
and
enter
fstps
adc
ret
mov
push
jge
add
xor
inc
shll
inc
jmp
in
push
push
cmp
cmp
repnz
jmp
cmc
lahf
pop
sbb
jp
out
mov
pop
cmpsb
call
add
push
sti
jb
add
or
loopne
pop
push
cmpsb
adc
mov
ret
xchg
mov
stos
fildl
repnz
in
insb
and
mov
ja
dec
add
jp
mov
bound
pop
and
add
mov
push
mov
cmp
mov
shl
push
scas
mov
or
sahf
insb
stos
cmp
fnstcw
lcall
aas
push
add
mov
add
dec
popa
xchg
test
je
add
mov
pop
jecxz
test
inc
icebp
lock
sahf
add
rorb
add
dec
push
fwait
mov
cmpsl
add
dec
shlb
ljmp
clc
loop
mov
outsb
dec
mov
movsl
repnz
mov
mov
jmp
pushf
add
jecxz
mov
pop
and
mov
push
xchg
mov
mov
js
rolb
sbbl
xlat
and
push
fidivs
in
adc
pop
aam
jne
rolb
test
mov
sub
mov
and
ljmp
xchg
or
lods
inc
mov
xor
cmp
test
fnstsw
adc
add
cmp
out
fstl
xor
xor
pop
cmp
inc
add
add
add
fdivs
mov
lods
fiaddl
sub
jno
addl
add
in
xchg
cwtl
add
ret
lcall
sub
jbe
shrb
sbb
pop
xor
push
add
add
jne
lods
xor
cmp
pop
add
ficomps
add
or
fiaddl
pop
test
mov
jl
add
pop
sub
add
pop
jno
in
nop
add
jne
aas
notl
cli
insl
test
inc
add
inc
fsubl
fimuls
mov
pop
movl
outsb
or
cmp
loop
pop
ret
inc
arpl
dec
fdivrp
mov
je
mov
mov
insb
adc
add
movsl
mov
pop
dec
and
cmp
push
add
fwait
push
mov
out
out
mov
mov
xlat
cltd
sbb
int
data16
and
sub
fidivl
fstps
inc
fistpll
addl
dec
pop
nop
add
outsb
cltd
pop
cltd
filds
push
add
add
adc
sbb
fstpl
or
je
fwait
pushf
idivb
or
mov
sbb
mov
pop
mov
negl
or
push
shl
dec
jp
mov
add
pop
leave
in
mov
add
std
fisubrl
jl
pusha
jne
fidivs
add
fimull
out
mov
mov
inc
push
out
sahf
or
jbe
lldt
cld
xor
bound
or
xchg
xchg
xchg
mov
in
add
mov
aad
ret
add
mov
mov
jle
xchg
mov
les
int
bound
xchg
out
imul
test
aad
nop
in
and
test
out
push
push
sbb
add
cmpsl
pop
add
inc
pusha
xor
or
idivl
dec
insb
stos
movl
in
lahf
es
mov
sti
pop
and
add
add
xchg
in
mov
adc
pushw
stc
imul
pop
loop
shr
jecxz
je
adc
js
inc
aam
ror
add
adc
mov
ds
add
in
out
add
inc
inc
dec
loope
cmc
icebp
jecxz
mov
jae
add
incl
adc
idivl
cmc
jp
std
push
xlat
cwtl
loope
add
fstps
add
inc
das
adc
add
fcompl
add
inc
push
testl
cli
scas
pop
ss
sub
ret
jne
ret
lahf
add
dec
sbb
call
test
clc
add
pop
mov
icebp
xlat
aad
testl
int3
pop
add
repz
ljmp
fbld
jbe
fisubl
sbb
pop
xchg
push
sub
mov
lret
and
in
mov
adc
add
movnti
fadds
sbb
mov
dec
lods
push
push
mov
shll
es
xor
and
push
in
es
int3
add
sub
daa
pop
or
pop
sbb
push
lods
fildll
outsl
or
mov
into
icebp
add
mov
mov
pop
orb
std
fucom
negb
dec
jnp
add
pusha
inc
add
add
add
shr
push
add
fstl
scas
xchg
sarb
out
jne
pop
mov
lahf
mov
hlt
je
in
adcl
popa
and
sub
std
inc
add
xchg
xchg
add
das
mov
push
aam
jbe
jp
pop
push
add
dec
cmp
dec
sub
add
dec
pop
cwtl
stos
adc
add
les
mov
add
xchg
jp
add
jae
mov
sub
cmpsb
movl
add
jl
and
popa
aaa
sbb
rcrl
cmp
add
inc
hlt
outsl
xlat
mov
dec
add
pusha
fistpl
push
add
dec
sub
pusha
jmp
std
mov
repnz
add
pop
pop
add
xor
mov
gs
lock
cld
mov
xchg
mov
jns
pop
push
fsubs
mov
and
pop
arpl
dec
add
popa
clc
xchg
jl
lea
ds
mov
jo
push
pop
add
cld
pop
inc
mov
je
adc
addb
ja
xor
mov
cmpsb
sub
or
add
iret
divl
std
mov
int3
movsl
jnp
sub
mov
aam
jne
mov
loope
mov
lcall
sar
sbb
xlat
add
pop
in
xchg
adc
fcomip
and
aad
jmp
push
add
movsb
int3
lods
fwait
into
jmp
in
cli
sub
add
inc
inc
fwait
sub
mov
lds
and
mov
jecxz
mov
add
jo
add
add
adc
add
sti
pop
jle
pop
or
jl
sub
fwait
jns
adc
push
add
cwtl
jl
and
out
cmp
std
dec
out
stc
pushf
mov
insb
and
imul
int3
adc
popa
lahf
daa
aad
add
adc
push
gs
cli
call
or
imul
mov
or
cmp
loope
outsl
push
in
cltd
lea
loope
add
jne
push
cmp
lods
xor
enter
int3
xor
add
ret
inc
dec
fidivrs
rcrb
inc
xchg
jl
lds
aam
adc
xchg
inc
int
hlt
adc
inc
adc
pop
nop
das
mov
fwait
push
mov
inc
mov
add
jo
inc
and
out
xchg
xor
insl
cmp
add
mov
cmpsl
stos
mov
add
sbb
jne
add
cmc
add
cli
ja
loopne
call
jg
jne
out
adc
dec
push
inc
dec
lahf
and
inc
sub
sti
les
adc
fwait
push
push
push
lcall
or
sbb
dec
add
icebp
ja
jle
xchg
ret
xchg
mov
cmp
add
pop
pop
js
sbb
push
add
sub
in
jmp
orb
outsl
inc
aad
add
mov
sbb
rol
mov
fisubl
dec
jecxz
mov
mov
outsl
jecxz
sub
stos
push
cmc
nopl
cmp
jbe
xor
cltd
jp
adc
adc
add
push
push
stc
fadd
adc
sti
add
and
hlt
cmp
and
adc
iret
sub
cmc
fisubrl
in
inc
jp
ja
inc
pop
shll
imul
pop
ret
fiadds
pop
pop
sub
sub
cld
mov
fiadds
xchg
xor
push
pop
jecxz
jo
xorb
ss
sbbb
xchg
aaa
push
icebp
xrelease
sub
sti
mov
fsubrs
out
mov
mov
mov
cltd
mov
scas
add
sarb
mov
pop
push
push
jnp
inc
ja
bound
mov
popa
in
cmp
nopl
xor
imul
inc
xchg
outsl
movsb
outsb
fsub
fcmovnb
gs
lods
sub
and
push
sbb
into
or
jo
cmpsb
dec
in
insl
sub
in
dec
xchg
add
adc
adcb
sub
push
dec
mov
mov
movsb
cmp
imul
add
outsl
jae
dec
mov
mov
sub
in
mov
pop
mov
pushf
rolb
pop
adc
mov
call
xchg
add
pop
scas
mov
incl
mov
sbb
cmp
add
adc
mov
aas
lock
jb
or
add
repz
mov
xor
xchg
mov
jbe
fwait
pop
push
stc
mov
outsl
mov
xor
and
testl
mov
sbb
xchg
je
fwait
add
push
adc
add
mov
addr16
faddl
jnp
jno
mov
test
or
jno
add
xor
dec
sub
and
or
fdivr
jnp
add
popa
subl
xchg
add
add
stos
shrl
or
push
loop
xchg
jne
imul
jl
int3
and
pop
add
mov
pop
into
push
pop
push
rcrl
in
jl
test
cmp
in
lret
add
pop
stc
lea
add
inc
jne
sahf
xor
cwtl
cmp
add
cmpsb
add
ljmp
in
divl
aaa
mov
data16
movsl
in
sub
mov
cmp
add
cmpsb
jo
dec
mov
adc
add
or
test
xor
mov
popa
xchg
jae
outsb
ret
jle
dec
es
orb
aas
mov
add
out
add
add
jl
add
sub
inc
outsb
mov
add
mov
add
out
push
mov
ret
movsb
xchg
std
xor
push
adc
std
mov
in
mov
cmpsb
mov
mov
sbb
pop
add
mov
jmp
sub
in
push
add
mov
movsb
sub
push
out
xor
in
add
adc
mov
and
loopne
hlt
adc
inc
mov
loopne
and
xor
repz
push
push
loopne
data16
sbb
stc
call
in
fisubl
jmp
lods
add
test
pop
and
dec
jno
xchg
dec
std
mov
xchg
add
cmp
and
jle
nop
and
jno
push
mov
testb
add
dec
xlat
or
xor
int3
jge
push
push
es
adc
mov
aas
inc
and
notl
fs
int
sub
xchg
leave
aas
rorl
sbb
stc
jbe
sub
mov
fsub
repz
loopne
xchg
lret
aad
add
out
push
fcmovbe
test
out
lahf
pop
jns
push
add
mov
mov
inc
and
jae
lods
pop
mov
add
mov
inc
aad
jecxz
cmp
xor
icebp
repz
or
in
jns
outsb
mov
sub
aad
lcall
pop
imul
push
sti
add
pusha
xor
pop
add
dec
jl
xchg
add
sub
dec
add
out
addb
add
cmp
icebp
inc
xorl
sbb
das
xchg
ja
mov
add
xadd
arpl
sar
loopne
xor
je
jecxz
push
mov
pop
cmp
inc
stos
pop
xor
lods
add
jb
ret
xor
jbe
andb
sti
scas
shl
addr16
push
add
add
dec
mov
add
add
xchg
testb
int
add
shrl
mov
outsl
pop
cmpl
sub
mov
pop
orl
mov
mov
xor
loop
add
inc
sbb
add
pop
sbb
sbb
aam
add
xor
test
mov
jns
pop
sar
repz
ret
sbb
roll
push
xor
lock
add
dec
sbb
leave
arpl
add
push
adc
mov
push
inc
add
std
loope
hlt
fisubrl
lock
loop
jne
xchg
add
dec
inc
inc
stc
idiv
insl
push
or
sbb
jns
subl
add
repnz
jns
or
xor
add
lahf
aam
iret
push
repz
or
fildll
dec
or
les
add
movsb
xor
jno
add
addb
sbb
push
outsl
xchg
test
or
and
std
pop
mov
shll
sub
mov
add
adc
stos
dec
stc
ljmp
jb
sahf
js
sub
data16
dec
push
mov
xor
outsb
imul
inc
leave
fadds
gs
in
incb
add
cs
iret
add
mov
or
xlat
add
pop
cmp
daa
lea
jge
and
cli
inc
repnz
je
add
dec
mov
and
xchg
daa
int
sbb
fstpl
das
inc
and
cmp
insb
add
mov
add
sub
sub
pushf
jl
pop
add
pop
cmp
jmp
movsb
add
outsl
or
mov
scas
gs
adc
mov
icebp
cwtl
push
push
add
cmp
std
rcrl
and
jge
or
jae
xor
idivb
xchg
cmpsl
pop
ficomps
mov
jns
jmp
push
xchg
xchg
outsl
add
aad
dec
cld
inc
push
loope
sti
aas
imul
jb
testb
jl
insl
roll
roll
xor
mov
push
add
jl
fcmovne
enter
dec
add
enter
divl
aam
mov
mov
sub
imul
scas
add
mov
cmpsl
adc
aas
sar
xchg
add
repz
out
xlat
insl
mov
sub
sub
rclb
and
cmp
mov
lret
cmpsl
inc
mov
imul
lds
loop
add
in
cmp
or
sbb
sti
dec
mov
xchg
rcrb
fidivs
outsb
ret
outsl
cmp
mov
jmp
pop
or
adc
mov
add
stos
inc
pop
xchg
adc
cmp
xchg
jno
xor
cld
mov
aam
cmpsl
dec
ss
es
clc
add
adc
nop
mov
lret
add
jmp
push
fisubl
sbb
imul
add
push
test
aas
out
out
mov
add
pop
mov
mov
add
xor
pushf
clc
pop
add
inc
bound
je
mov
and
add
pop
jmp
add
adc
loope
add
push
sbb
inc
jp
sbb
sti
loop
leave
in
sbb
add
pop
clc
adc
test
pop
add
js
cmpsl
push
add
xor
and
lret
outsl
jmp
lods
out
lret
je
add
push
lods
outsb
adcb
add
inc
jmp
xor
pushl
pop
push
fs
or
lahf
jle
jo
jp
lret
add
sbb
lock
pop
fs
test
jecxz
cli
test
jns
fsts
push
sbb
lret
add
add
aas
cmp
mov
dec
xor
les
fiadds
repnz
inc
sub
mov
mov
addb
insl
xchg
in
jne
or
xchg
daa
push
inc
stos
sub
add
add
add
add
in
rcrb
push
sub
adc
xor
sbb
mov
add
cmpl
ret
cmp
addb
mov
shrb
les
mov
mov
sbb
stc
jg
add
aaa
push
inc
xor
rcrl
fdivrs
mov
lcallw
jle
inc
fstpl
mov
sub
add
add
mov
dec
xchg
cmp
inc
add
mov
out
or
je
mov
dec
imul
dec
and
mov
inc
and
push
xchg
mov
out
adcl
pusha
add
and
add
pop
aaa
cmpsb
jg
loope
add
jp
in
jle
hlt
repz
cs
and
add
std
push
push
pusha
jp
out
int
push
cwtl
nop
je
loope
push
jle
pushf
mov
jno
out
sarl
cmp
fst
pop
mov
movb
lds
sbb
jp
add
xchg
sbb
mov
pop
sub
sub
push
or
sti
xlat
lea
xor
fcom
sahf
add
xchg
xor
mov
arpl
xchg
mov
add
into
gs
lock
fstpt
mov
popa
dec
imulb
inc
inc
add
repnz
inc
add
sahf
add
pop
pop
sbb
mov
jg
mov
in
adc
mov
out
add
jg
mov
add
cmp
insb
cmp
dec
outsb
stos
popf
popf
lods
lret
adc
movsb
sub
in
lea
push
jle
add
cmp
fdivrl
jge
sbb
cmp
dec
xchg
mov
int
add
ljmp
cmp
mov
filds
add
push
xchg
aam
lods
pop
push
inc
out
lods
sbb
sub
add
movsl
in
mov
or
mov
cld
pop
rcl
mov
imulb
inc
cmc
push
out
inc
sbb
mov
add
jbe
fisttpll
add
gs
jno
add
pop
jp
mov
repnz
mov
movsb
repnz
xchg
fistl
add
sub
or
xchg
add
or
jg
xchg
cli
lea
or
jns
cmp
aas
sub
mov
pop
mov
cmpsl
add
add
sbb
adc
insb
add
jecxz
add
add
rolb
fs
stos
ss
pushf
pop
mov
sub
andb
mov
xchg
test
incb
and
shrl
or
add
mov
mov
add
sub
int3
mov
pop
pop
int3
and
rcr
mov
into
inc
cli
add
out
jno
ljmp
add
int
daa
js
add
xchg
clc
jecxz
out
mov
add
or
sbb
jns
inc
lcall
pop
sti
push
rolb
mov
xor
int3
add
sarb
add
add
and
cmp
or
add
int
ficomps
xchg
pop
xchg
in
cmpsb
cmp
add
cmpsb
hlt
sub
mov
dec
fistps
add
xchg
in
enter
add
add
push
mov
xchg
xor
test
xor
add
adcb
lahf
test
adcl
clc
enter
out
jle
ret
stos
add
dec
add
sbb
add
push
and
sbb
xchg
sti
dec
cmp
mov
inc
nop
fstp
inc
add
shlb
mov
xchg
outsb
xchg
inc
mov
xlat
stos
sbb
aaa
cltd
add
add
add
arpl
ja
jge
add
add
arpl
stc
cmp
or
rep
dec
sub
adc
add
cmpsl
pop
add
lcall
and
jno
in
std
add
add
xchg
mov
mov
ds
add
add
sub
cmp
psrlq
cmp
sbb
xor
inc
je
xor
shrl
pop
test
sbb
js
mov
outsb
pop
cmp
xchg
lcall
addr16
lret
dec
sub
mov
dec
arpl
js
add
mov
mov
shrl
fcmovbe
ljmp
jns
add
or
mov
pop
push
mov
sub
dec
pop
addr16
or
sub
leave
cli
jecxz
andb
cld
into
outsl
and
xchg
push
xchg
mov
jae
add
mov
jns
inc
add
lea
mov
add
sub
cwtl
inc
add
pop
popf
pop
mov
jge
dec
jno
add
dec
and
mov
adc
pop
imul
push
out
jbe
mov
inc
movb
xlat
repz
in
mov
loope
sarb
dec
in
adc
add
mov
mov
test
out
outsl
pop
mov
or
add
mov
fcomi
add
ds
insb
mov
add
mov
aad
and
rorl
loop
fcomp
in
mov
loope
ja
faddl
jo
jp
hlt
pop
cwtl
mov
fsts
lret
add
ret
add
dec
mov
dec
mov
add
pop
scas
arpl
add
jo
mov
push
pop
mov
mov
adc
cmc
add
add
xchg
add
add
decl
filds
add
loop
pop
stos
pop
lret
add
mov
push
cmp
in
int
xchg
pop
add
mov
es
adc
jns
imul
rorl
mov
cmp
dec
add
test
rclb
inc
cs
out
into
filds
push
xchg
mov
inc
lret
mov
add
cmp
sub
iret
pushf
push
fadds
push
loop
addr16
dec
inc
add
add
and
ret
icebp
lret
pop
dec
push
cmpsb
cmpsb
add
test
cwtl
fwait
out
maskmovq
imull
insl
mov
add
out
js
pusha
inc
jmp
aaa
sbb
stos
xchg
cli
xchg
gs
lret
add
mov
into
push
pop
bound
mov
aam
dec
adc
mov
popl
pop
out
je
lods
add
push
sub
push
insl
add
xchg
pushf
add
in
cmp
and
jns
jecxz
mov
cld
je
sub
fdivs
insl
adc
cmp
lret
or
mov
cld
mov
jg
lcall
sub
sbb
jo
test
mov
pop
xor
mov
pushf
cmc
cwtl
cwtl
mov
jns
xor
addl
movsl
jo
pop
pusha
iret
or
nop
xchg
push
out
lock
and
loop
into
jae
jne
and
rolb
fistpl
cmp
cli
push
dec
dec
shlb
push
out
test
xor
aam
in
roll
and
gs
jo
dec
xchg
addl
sahf
pop
jae
inc
cli
cmpsb
inc
jp
lock
iret
xchg
test
pusha
je
rorl
add
and
lock
lretw
sbb
outsl
fwait
push
je
mov
or
fmulp
faddl
pop
push
pop
add
add
inc
pop
adc
dec
add
dec
cmpsl
inc
inc
mov
jmp
mov
cmpsl
jle
cmc
stos
fcmovb
add
dec
mov
and
dec
add
mov
add
and
push
add
gs
xchg
popa
adc
xchg
in
xor
negb
push
add
or
mov
inc
mov
stc
lods
push
xchg
add
mov
lret
or
fimuls
or
push
js
dec
or
sbb
test
loope
dec
jae
daa
gs
add
dec
leave
outsl
sbb
cmp
rcr
xor
xchg
pop
push
mov
aaa
outsl
cmp
iret
insb
xchg
sub
and
sahf
fs
nop
es
mov
test
mov
dec
fnstsw
and
xchg
add
pop
stos
dec
inc
add
xor
or
jbe
xchg
mov
jne
add
mov
ds
pop
fildll
sbb
outsb
sbb
add
mov
mov
aad
xchg
repnz
testl
fldl
fsubrl
add
pop
jg
sub
fs
xor
mov
test
pop
adc
aaa
out
xor
pushl
add
push
jl
insb
add
cmpb
cld
sarb
add
stos
or
cmp
jl
adc
add
mov
shlb
cwtl
sub
mov
sarb
mov
and
cwtl
xor
mov
repz
adc
and
rolb
xlat
inc
mov
fs
shrl
add
cmp
push
ret
gs
mov
mov
jle
push
and
pop
out
in
and
xor
bound
das
mov
lcall
dec
mov
out
push
push
jle
add
jle
or
add
jb
fisttpl
outsl
mov
fcoms
inc
roll
mov
lret
pcmpgtw
dec
sbb
sbb
addr16
inc
lcall
mov
pop
add
sbb
mov
add
addl
adc
sbb
cmp
xlat
dec
sbb
mov
jb
out
fiadds
xor
jae
jl
push
add
mov
insb
aas
mov
mov
add
push
add
xchg
add
stos
call
cmp
shr
ss
add
adc
add
mov
pop
xor
in
add
add
ljmp
ret
add
xchg
in
mov
hlt
data16
int3
mov
lods
in
insl
pushf
sbb
gs
or
or
push
mov
add
sbb
in
add
sbb
sbb
add
out
idiv
add
or
mov
mov
push
shr
add
add
in
dec
mov
negb
push
push
or
add
jge
in
stos
incl
roll
add
ljmp
add
lcall
out
ds
lods
xor
scas
orl
mov
add
icebp
adc
mov
lahf
add
rcll
icebp
scas
add
mov
mov
dec
sar
lock
jb
add
xorb
xor
mov
outsl
out
aad
add
pop
sub
loope
aaa
cmp
add
stc
call
add
xor
bound
lea
add
jne
jge
add
ss
popa
add
pushf
push
add
push
add
sti
fnsetpm(287
sbb
inc
mov
pushf
pop
call
stos
mov
or
add
pusha
add
out
in
sub
xchg
dec
mov
add
pop
iret
sub
ret
out
mov
pop
gs
dec
inc
inc
xlat
sbbl
xor
mov
loopne
mov
mov
loope
and
sub
dec
nop
jnp
jle
and
add
lcall
pop
int3
mov
add
pushf
xchg
pop
or
loop
sbb
pop
iret
dec
sbb
rolb
loope
add
imul
xor
jnp
cmp
std
out
shl
pop
dec
addr16
push
mov
rolb
lds
or
cmp
fwait
roll
xor
add
add
xlat
fnstenv
icebp
xchg
jb
pop
add
cmpsb
fadds
pop
scas
add
or
adc
xchg
mov
xchg
js
sub
pushf
or
dec
repz
mov
mov
xchg
pop
repnz
xchg
add
add
stos
push
add
je
add
fbld
mov
repnz
add
dec
add
data16
sub
or
jecxz
dec
jns
imul
fisttps
xchg
arpl
xchg
jl
ret
or
mov
inc
test
fdivp
shl
imul
add
out
aas
xor
roll
repnz
lret
push
in
mov
add
add
mov
cld
mov
jge
lcall
mov
jbe
xor
out
rorl
mov
jb
pop
arpl
or
inc
pop
sub
lods
adc
popa
dec
movsb
adc
shlb
inc
lret
adc
in
dec
cmpsb
cmpsb
dec
push
or
fwait
cltd
mov
out
inc
popa
push
jns
sbb
xchg
in
push
sti
mov
jle
cli
int3
jb
cmp
pop
or
std
add
ror
fistl
cltd
xchg
imul
jns
test
xor
inc
imul
mov
arpl
cmp
movl
dec
dec
xor
mov
loop
add
imul
add
icebp
mov
popa
fistpll
in
mov
repz
push
mov
dec
jmp
rorl
jge
adc
pop
enter
insl
ss
mov
add
dec
add
xchg
add
adc
push
add
pushf
ss
add
stos
mov
cmp
int
mov
out
inc
add
ljmp
jno
push
data16
pop
jbe
mov
adc
adc
call
jmp
aaa
insb
outsb
insl
jle
scas
add
into
mov
in
mov
imul
add
add
inc
icebp
ja
add
sbb
dec
jae
add
cmc
pop
das
mov
adc
jp
jl
stos
xor
mov
and
dec
push
add
add
pop
pop
subb
aaa
stos
insb
add
sub
es
add
add
mov
sbb
les
aas
push
loop
xchg
insb
add
mov
and
pusha
xchg
add
add
mov
and
xchg
rol
inc
es
ljmp
push
int3
add
rcr
pop
repz
jmp
int
add
mov
in
sbb
out
inc
cmp
add
add
insb
dec
push
insl
push
xchg
jg
push
scas
popa
add
jecxz
int3
popa
lods
add
inc
add
cmpsl
gs
fs
lret
mov
jmp
mov
sbb
xchg
cltd
add
pop
xchg
rclb
and
mov
push
sahf
scas
je
push
add
push
mov
fcomp
clc
inc
add
lret
xor
rolb
stos
add
add
mov
add
clc
add
sbb
cmp
xchg
add
add
cmpb
ja
jl
xlat
add
inc
in
dec
jno
or
adc
inc
ljmp
movsb
lcall
mov
pop
clc
xor
mov
jne
in
xor
popf
icebp
and
or
out
ss
add
dec
ret
xchg
scas
xor
pop
add
lea
adc
insl
jno
sbb
add
cwtl
mov
cmp
inc
test
or
xchg
mov
dec
outsl
movsl
imul
fnstcw
adc
dec
sub
mov
in
mov
shlb
test
sub
jo
sub
cmpl
stos
ljmp
lret
imul
sbb
out
add
repz
mov
pushf
add
cmp
out
bound
mov
add
add
mov
lock
add
es
cli
adc
jmp
adc
or
adcl
mov
add
jecxz
fmull
out
movsl
add
imul
add
adc
les
add
test
fistpll
icebp
je
and
clc
lods
add
sbb
incl
cmp
bound
mov
add
xchg
add
add
loop
jmp
jno
add
div
sbb
jo
enter
add
add
push
and
popa
pop
sub
fadd
aad
mov
push
lret
add
sar
sarb
mov
pop
sub
cld
dec
cmp
add
jl
dec
popa
je
mov
add
add
jp
mov
xor
sahf
add
and
test
xchg
fisubl
in
push
mov
popf
test
aas
cwtl
sbb
sub
inc
fwait
pop
addl
xor
fnsave
mov
inc
nop
add
sub
xor
fldcw
push
add
and
out
dec
addl
cltd
lret
fildl
cs
fadds
and
pop
popa
sahf
rcr
add
pop
shrb
sub
test
icebp
xchg
and
add
sbb
cltd
roll
or
sbb
mov
sub
inc
dec
cli
aam
in
loopne
jae
aam
insb
std
jo
cmpsl
fisttps
ret
mov
push
xchg
and
mov
pop
add
bound
inc
jbe
sub
ret
call
push
mov
add
jp
popf
enter
test
mov
xchg
cmp
inc
add
push
es
add
lods
add
add
lods
sbb
inc
idivl
add
hlt
std
ds
add
add
and
cmp
fildll
lcall
arpl
xchg
sahf
fprem1
jp
mov
gs
xchg
enter
add
sbb
fwait
dec
xor
ljmp
lcall
add
add
pusha
es
subb
mov
scas
mov
mov
inc
shl
icebp
sbb
pop
jge
add
jl
dec
sbb
pop
cmp
mov
lods
mov
add
mov
fmulp
addr16
fistl
mov
mov
jno
fsubrs
xchg
es
dec
xchg
cmp
sub
ljmp
xchg
add
add
mov
and
xchg
popa
jno
dec
or
addl
push
pop
push
pop
sub
in
sub
mov
adc
jno
in
push
sti
outsl
cmp
std
hlt
xor
repnz
push
xchg
filds
push
jo
cmp
loope
pop
push
dec
jle
cs
rcrl
jecxz
adc
inc
ljmp
mov
out
and
mov
ret
xor
inc
xor
pop
ja
sbb
sti
jecxz
cmpsl
add
jo
loop
inc
cwtl
addr16
jb
cld
push
and
and
inc
decl
pop
out
add
mov
mov
subb
inc
jp
lcall
divb
imul
jns
mov
push
aaa
xor
adc
lea
mov
out
aaa
aam
pop
add
clc
add
out
inc
adc
xchg
xchg
or
nop
jmp
loope
sbbl
gs
sbb
fsubl
das
xchg
sub
cmp
dec
into
sbb
out
or
ja
push
outsb
xchg
setno
add
pop
stos
inc
fbld
not
filds
sub
inc
xor
lcall
dec
shrd
clc
int
inc
add
add
xor
es
jle
loop
fucomi
incl
pop
fcomps
rcrl
jne
bound
sbb
out
jmp
pusha
aas
int
mov
cmpsb
mov
xchg
mov
adc
xor
mov
sbb
mov
or
inc
fistl
pop
jge
cmpsb
or
out
lods
in
push
or
jge
jl
in
adc
push
or
add
add
insl
pop
add
jl
dec
push
les
mov
dec
mov
clc
add
aad
sbb
add
push
jp
cmp
cmp
lfs
pop
cltd
mov
outsl
std
pop
xchg
out
dec
add
fidivrl
inc
loop
mov
add
add
add
jl
pop
mov
xchg
sbb
sub
add
add
push
add
add
mov
mov
movsl
jns
xchg
ljmp
add
jl
push
imul
sbb
add
add
jno
sub
fnsave
mov
cmpl
cmp
add
cmp
outsb
jne
push
enter
pop
sarl
lret
cmp
mov
xor
stc
lret
out
les
ljmp
push
pop
xchg
int
add
xchg
out
dec
adc
cmpsb
loope
jns
pop
mov
fidivl
out
add
xor
out
pop
stos
int
test
inc
int
lds
jns
into
fisttpll
mov
loopne
mov
daa
mov
xchg
cmp
add
leave
movsl
xchg
add
add
push
xchg
mov
cmpsl
inc
push
mov
in
dec
outsb
inc
add
inc
mov
mov
mov
inc
add
mov
sub
out
push
aaa
sub
inc
or
cwtl
xor
cmpsb
mov
jne
stc
outsb
sbb
insl
mov
adc
test
sub
sbb
jmp
add
add
cmpsb
xchg
add
xchg
fs
mov
inc
popa
scas
fwait
dec
gs
movsl
add
xlat
inc
add
adc
loop
movsb
lcall
mov
into
mov
ds
push
test
aad
adc
add
add
out
or
dec
dec
lret
daa
jnp
pop
pop
add
jmp
add
dec
stos
or
sbb
add
out
pushf
popa
pop
mov
add
or
push
push
cmp
cmp
add
sarb
lret
lret
cmp
add
mov
aas
call
lret
add
imul
jae
mov
adc
lret
push
jge
add
sbb
sbb
and
jno
inc
mov
cmpsl
sti
repz
inc
push
sbb
ret
push
xor
rolb
pop
mov
push
inc
push
xchg
into
mov
add
pop
insb
dec
add
xlat
push
pop
notb
pop
cmp
lcall
mov
lcall
pop
stos
push
mov
push
mov
fldt
cwtl
pushf
mov
aaa
cltd
jno
inc
stos
sub
ljmp
shll
std
imul
add
xor
adc
lock
sbb
cwtl
xchg
add
add
jae
push
out
mov
in
fnstenv
fs
add
add
idiv
jle
testl
add
or
sbb
lea
enter
pushf
push
loopne
jge
jl
cld
mov
sub
shll
mov
pop
clc
stc
aad
jl
daa
orb
pop
test
test
inc
in
sub
adc
fwait
add
xorb
xchg
aaa
add
jmp
lods
add
adc
clc
call
xchg
jbe
test
mov
dec
repnz
insl
test
dec
add
aas
iret
stos
sbb
pop
add
add
int
sbb
sbb
sbb
cld
add
movsl
add
mov
pop
xchg
pop
mov
pop
add
aam
pop
fisubrl
inc
in
push
sarl
mov
pop
and
fidivrs
add
addr16
fidivrl
jecxz
mov
xor
xchg
cmp
jecxz
test
leave
insb
adc
add
mov
mov
repnz
mov
data16
xor
add
mov
outsl
add
inc
jb
jge
fldcw
xchg
cli
imul
das
fs
jmp
test
and
add
add
cmp
fidivl
add
adc
jnp
add
cld
sub
push
sbb
inc
pop
mov
sbb
aad
int
push
dec
mov
nop
mov
mov
sahf
mov
push
sub
jle
es
je
dec
pusha
aaa
inc
jb
mov
cmc
push
add
or
pop
pop
push
push
sbb
xchg
out
cltd
sahf
scas
fwait
mov
cmp
add
add
pop
rcll
decl
insb
pop
ffreep
pop
add
and
or
int
call
push
dec
push
or
movsb
push
sbb
int
int
add
add
addl
push
pop
out
add
cmpsb
add
mov
aaa
enter
push
je
lahf
test
in
sub
sub
ja
inc
inc
cwtl
enter
inc
sbb
pop
cmc
pop
xor
sub
add
inc
and
ret
add
into
fnstsw
jbe
add
push
pop
lds
mov
mov
push
add
pushf
sub
dec
sub
push
sahf
mov
outsb
add
lea
or
mov
jbe
xorl
mov
add
sbb
xor
jo
movsb
lsl
cmp
add
sub
add
movsl
dec
cli
outsl
imul
dec
add
sbb
xchg
gs
fcmovnb
xchg
inc
mov
jno
xlat
xor
test
cld
xor
push
shll
add
sbb
pop
jmp
adc
add
inc
jp
fisubrs
mov
mov
and
jo
test
push
or
adcl
inc
idiv
jne
add
arpl
jge
lahf
xor
lock
sbb
fiadds
cmp
add
cs
or
aaa
loop
mov
loop
in
cs
enter
push
add
in
mov
mov
xchg
movsl
inc
dec
jne
add
frstor
jg
fbstp
mov
cmp
add
cmp
add
add
jge
sub
ja
inc
cmc
push
cmp
xor
add
jle
mov
add
enter
lock
pop
ja
out
push
add
jo
jb
jae
iret
sarb
fsubr
outsl
inc
dec
add
add
cwtl
add
dec
and
add
cwtl
or
xor
add
loope
add
add
popa
sub
rolb
lcall
call
stos
sbb
pop
sbb
call
pop
shlb
pusha
addl
test
add
sbb
add
cmp
out
data16
loopne
push
dec
es
dec
sbb
jns
add
push
add
mov
xchg
xchg
add
jbe
jle
jb
adc
sub
insb
stos
out
icebp
add
add
pop
jns
insb
cs
imul
pop
add
cmp
mov
adc
leave
pop
ret
pushf
out
insl
add
bound
movsl
loop
mov
inc
addl
xchg
push
scas
cmc
test
add
push
lret
gs
add
add
cld
pop
add
roll
jle
push
xlat
or
cs
pop
ljmp
xchg
adc
add
sub
ret
jb
cmp
aaa
add
inc
pop
cmp
cli
xor
fld
add
ljmp
inc
add
jnp
sub
mov
add
add
pop
mov
cmp
xor
mov
add
pop
add
filds
cwtl
outsb
adc
xchg
testl
push
add
dec
and
dec
addb
mov
push
add
mov
inc
or
inc
dec
add
pop
imul
mov
loop
mov
push
sbb
mov
cmp
aad
scas
or
pop
xchg
test
add
loopne
cmp
pop
cltd
cmp
mov
xchg
shlb
rol
add
pop
xor
bound
rorl
inc
xor
add
scas
jbe
add
inc
aas
mov
loope
add
loop
add
ss
mov
add
mov
test
add
cmpsb
add
das
xor
add
lock
flds
fcoml
mov
add
mov
in
mov
cmp
mov
cmp
adc
pushf
cmp
popl
xchg
push
inc
movsb
pop
sub
test
mov
sub
clc
addl
add
daa
mov
mov
add
fisttpll
aam
inc
or
add
inc
fdivs
jle
jae
sbb
xchg
add
mov
mov
add
mov
mov
or
fstps
sub
push
add
daa
push
cmc
or
jae
add
add
push
cwtl
jecxz
imul
inc
cmp
popf
cmp
pop
popf
add
jmp
push
adc
push
sbb
add
ficompl
lea
stos
loop
enter
xor
popf
xor
arpl
les
push
cmp
add
pop
xchg
cld
cwtl
add
adc
clc
xor
fisttpl
sbb
aaa
cltd
rcr
dec
fcoml
enter
stos
mov
add
push
cmovl
add
subl
adc
sub
lods
add
cmp
add
in
insl
mov
in
add
sub
or
add
mov
mov
add
imul
jg
jge
add
xchg
lods
loope
add
std
xchg
cmp
inc
loop
adc
cmpsl
ss
add
pop
sbb
int3
add
mov
pusha
push
out
cmc
inc
push
cwtl
out
xlat
add
add
add
sub
adc
popl
add
xchg
push
out
pop
out
jmp
and
xor
rcrb
lret
lahf
add
sbb
xchg
nop
xchg
idivl
daa
insl
push
add
test
mov
inc
mov
aaa
mov
sub
add
psrlw
pusha
or
sub
add
add
hlt
in
test
sbb
inc
mov
pop
xchg
lahf
adc
jns
int
movsb
int3
cwtl
dec
movsb
add
jl
push
or
inc
stc
add
and
sub
mov
mov
inc
test
push
inc
mov
cmp
push
add
pop
fprem
jae
add
jae
bound
mov
sarb
imul
inc
subb
dec
add
clc
pop
mov
aaa
push
movsl
data16
mov
sbb
sbb
dec
pop
add
inc
movsl
push
jae
mov
and
add
icebp
mov
dec
adc
dec
mov
testl
movsl
add
xor
lcall
call
lret
imul
mov
in
imul
jmp
subl
imul
or
int3
jle
repnz
rclb
out
lret
push
add
add
xchg
mov
lods
and
push
loop
es
jne
add
rcl
scas
dec
and
in
es
add
lret
pop
xor
inc
out
sub
jo
mov
cli
or
or
jp
es
je
scas
add
add
mov
push
js
mov
ja
lret
ss
cmp
or
mov
insl
and
cmp
pop
or
out
sar
add
sbb
mov
mov
sbb
ss
add
dec
add
in
insb
jmp
dec
insb
add
adc
adc
cmp
xchg
push
stc
xchg
popf
mov
rep
ds
xor
call
popa
cmp
aaa
xlat
movl
dec
out
cmpl
inc
inc
mov
jp
jle
and
add
in
scas
das
fucomi
push
dec
xchg
push
jmp
jbe
inc
xchg
dec
add
clc
inc
add
shll
addl
mov
lahf
lahf
adc
xor
iret
push
xor
and
in
stos
loopne
or
shl
insl
mov
stc
pop
bsf
push
push
xor
cmp
and
pop
dec
jmp
mov
dec
sbb
mov
sbb
push
or
push
stc
fstps
pop
das
stos
add
mov
mov
mov
mov
add
or
shrl
xchg
jne
xchg
xchg
fsubs
lahf
leave
in
add
dec
jbe
jge
or
jnp
or
add
pop
dec
add
mov
xor
xchg
jb
and
sti
stos
jecxz
repnz
add
dec
xor
add
fcoms
lods
test
mov
mov
xor
jnp
xchg
pop
and
mov
xor
and
sarb
pusha
roll
fildl
fiaddl
add
xchg
jge
mov
aam
aas
test
pop
loopne
add
push
add
mov
sub
rcrb
clc
enter
loope
mov
adc
fldt
add
fwait
add
sub
mov
sti
int3
xor
and
in
mov
loop
inc
sub
push
add
sbb
clc
stos
rcl
pop
sbb
xchg
add
cmp
add
jbe
mov
push
add
inc
cld
add
shlb
lcall
lods
push
jae
adc
add
push
adc
pop
dec
sbb
stc
out
aad
loopne
ret
add
fimuls
std
jge
movl
das
cmp
cwtl
pop
and
jmp
add
je
add
lods
xor
mov
jl
aam
sbb
add
cmp
and
in
push
inc
or
nop
shlb
pop
jmp
inc
fs
movl
sbb
xchg
fs
shl
xor
shl
js
cmc
mov
add
mov
jp
mov
in
and
push
add
nop
pushf
jl
fisubs
scas
das
pop
inc
fchs
aaa
jg
sub
iret
loopw
jmp
lret
ret
and
stos
mov
and
mov
leave
es
dec
and
inc
add
or
add
lret
pop
cmpsl
mov
and
or
jbe
addl
jge
add
leave
add
imul
add
add
je
pop
scas
sahf
mov
add
push
add
jecxz
imul
and
cmpl
push
push
jnp
rorl
loop
or
mov
cli
add
outsb
adc
mov
cmc
out
mov
xor
or
dec
int3
xor
xchg
push
in
jns
ss
xchg
sbb
pop
adc
cmp
lahf
push
xchg
ret
push
inc
cmp
or
push
or
pop
int3
mov
sarl
out
jno
add
lds
int
mov
cmp
les
xchg
push
and
and
cmp
lahf
sub
pop
fwait
jge
bound
out
ds
bound
pop
sbb
mov
bound
add
xchg
mov
mov
xchg
pop
add
sbb
cmp
push
clc
pop
cmp
pop
fcomps
in
dec
add
into
test
out
pop
add
sarl
int
mov
adc
jge
cmp
add
mov
lea
mov
imul
dec
add
dec
loopne
loope
add
test
les
lea
add
jmp
fistps
in
stos
jecxz
mov
add
cli
xchg
lods
push
xchg
add
js
js
frndint
mov
jle
xchg
fiadds
mov
jnp
add
jge
jno
lods
scas
add
xchg
popf
sbb
aad
sbb
sbb
cld
lods
xchg
adc
insb
push
movsl
cmp
xchg
dec
rolb
imul
pop
push
cwtl
lods
add
add
lock
in
imul
je
fadds
es
lock
sub
xchg
idiv
add
dec
stos
mov
addr16
jbe
mov
scas
and
clc
mull
mov
cltd
push
inc
jmp
xchg
jl
cmp
arpl
jno
lods
mov
sbb
insb
mov
add
jno
xor
xchg
mov
clc
add
add
fdivr
add
add
push
aad
nopl
test
sbb
sbb
roll
popf
add
add
fldenv
add
out
bound
loopne
mov
or
add
or
add
ljmp
lcall
lds
idivb
push
xor
sub
fidivs
cwtl
cmpsl
movsl
mov
dec
xchg
add
lods
mov
inc
or
mov
or
addl
fcomi
dec
lea
cmp
shlb
add
cmp
sbb
mov
push
movsb
add
jnp
add
sbb
and
cmp
push
sti
add
pop
xchg
cmp
jl
aaa
mov
je
mov
sbb
cmp
int
in
gs
sbb
imul
mov
mov
ss
and
adc
add
inc
xchg
pop
inc
mov
add
push
and
jbe
dec
lret
mov
in
ss
sub
sbb
mov
sti
jecxz
dec
scas
add
push
out
fcmovnb
mov
int
add
pop
xor
jmp
ljmp
mov
xor
andl
inc
loope
ss
ret
mov
js
xor
in
add
pop
and
xchg
jnp
jns
fldenv
std
lods
jae
add
sbb
cmp
dec
add
add
and
fcoms
mov
sbb
cmc
das
pop
loope
add
add
add
mov
das
fldt
jl
pop
pop
add
push
xor
push
inc
cld
add
mov
xor
xchg
lods
sbb
add
add
jmp
push
addb
xor
std
subl
mov
push
insb
push
or
mov
add
add
adc
icebp
add
inc
add
fld
mov
faddl
cmp
test
dec
mov
jg
mov
lock
lods
test
inc
add
fstpl
add
sub
mov
fs
add
sub
mov
or
jb
sbb
test
fbld
fwait
out
mov
push
int
adc
xchg
pop
mov
push
jo
pop
xchg
push
jae
mov
cs
mov
add
jno
xlat
ret
and
add
add
push
adc
cld
sub
adc
cmp
add
pop
jg
mov
add
out
popf
ret
or
pop
rorb
movsb
movsl
iret
inc
mov
lahf
outsl
xor
bound
fsubs
xor
push
add
xchg
add
mov
pop
scas
add
add
pop
xchg
add
or
outsb
in
fs
iret
or
cmp
int3
xchg
mov
xor
jle
xor
ja
scas
aaa
add
add
pop
xor
add
jae
in
add
add
in
mov
push
adc
push
adc
mov
lds
aam
in
repz
gs
popa
shrb
adc
pop
add
push
add
mov
add
push
add
mov
mov
inc
cwtl
sarl
adc
xor
imul
and
inc
sahf
pop
int3
into
jns
insb
adc
and
in
add
lahf
dec
add
cmp
mov
test
adc
addl
flds
sub
dec
ltr
lret
andl
add
add
add
add
and
and
add
xchg
push
loope
outsl
xchg
shlb
sub
add
mov
fiaddl
jge
loope
add
fwait
push
add
in
mov
xchg
mov
xchg
or
fistpll
mov
lret
sahf
and
add
xor
inc
lea
add
push
add
pop
adc
add
jns
dec
add
cmp
jmp
cmp
sbb
dec
sbb
dec
mov
test
rolb
cmovb
xchg
mov
add
repnz
mov
loope
in
add
add
cmc
sbb
or
bound
rolb
pop
add
add
faddl
pop
dec
xchg
cmp
andb
add
jge
lds
or
bound
add
add
lret
jmp
sub
enter
jbe
sbb
inc
mov
xor
xor
pop
loop
add
lea
or
stos
lds
jge
sub
aad
add
je
call
inc
out
add
cmp
aad
add
mov
and
loope
xlat
add
mov
in
xor
cmp
xor
inc
nop
in
in
out
sti
sbb
xor
add
repz
push
fdivl
add
adc
jl
inc
das
or
adc
jmp
sub
and
jne
sarb
bound
pop
insb
mov
fwait
into
addr16
lea
add
icebp
stos
push
add
push
dec
cmpsb
repz
pop
xchg
aad
into
dec
hlt
lods
adc
mov
add
cs
test
xor
mov
adc
add
add
push
mov
call
or
jle
jg
jo
sbb
int
fwait
scas
sub
and
add
test
loopne
or
addl
js
adc
lock
mov
aad
daa
out
inc
cltd
inc
pop
fs
pop
add
dec
mov
dec
add
push
addl
das
mov
add
add
sub
push
iret
xor
fwait
mov
addr16
ss
xor
rolb
sbb
add
add
fmulp
xor
add
ljmp
add
push
add
xchg
bound
pop
mov
add
fldl
sub
mov
inc
sbb
adc
push
mov
decb
cmp
pop
and
aam
push
cmpsb
out
jl
sub
cmp
repz
push
rclb
sahf
rcll
mov
dec
js
cmp
insl
mov
arpl
aam
push
daa
daa
pop
pop
push
adc
add
xlat
das
add
mov
test
in
add
out
rcl
data16
mov
jbe
pop
push
add
add
xor
mov
hlt
add
outsl
pop
cli
int
add
add
int
add
add
gs
cli
sbb
sbb
das
sub
add
cmpsb
pop
out
inc
sahf
push
add
jp
jge
jno
pop
xor
add
lea
xor
bound
push
movsl
add
or
mov
jmp
insb
in
add
aad
rorb
in
and
js
add
jge
fistpll
mov
test
addl
aaa
add
and
adcl
jne
pusha
cld
testl
or
sbb
add
add
and
inc
add
loop
fists
je
ja
dec
fs
in
movsb
bound
mov
cld
unpcklps
cmc
repz
icebp
mov
lods
pusha
fimuls
xchg
or
cmp
loopne
push
xor
test
int
or
push
add
push
negb
sbb
leave
int
add
stc
lock
cmpsl
dec
inc
fcomps
jae
push
daa
sbb
add
add
pushf
xchg
mov
add
jnp
xlat
rclb
xor
add
push
lods
nop
cmp
rcrb
cmp
push
sti
push
pop
imul
add
mov
sub
fsubrs
fmull
fbld
add
cwtl
pop
adc
mov
subb
add
and
aam
sub
pop
nop
aaa
add
gs
add
inc
add
jns
das
xor
xchg
je
arpl
cmp
adc
test
call
out
sbb
out
cmp
es
shl
inc
xor
adc
add
ficompl
in
xor
cltd
out
loope
rcrb
push
bound
and
sub
cmp
xlat
xchg
sub
adc
xchg
jecxz
sub
test
test
inc
add
add
daa
int
cmp
mov
adc
inc
out
in
mov
mov
inc
popa
out
xchg
add
jae
lret
mov
adcb
aam
testb
add
ljmp
enter
sub
in
push
sahf
sub
and
test
repz
test
lods
mov
sbb
notl
sub
fidivl
xchg
mov
imul
shlb
cmp
sti
mov
lret
dec
lret
iret
add
mov
dec
jno
add
iret
stos
add
aaa
clc
add
xor
shll
insl
jle
add
addr16
mov
jmp
std
test
fimull
dec
movsb
dec
pop
imul
js
popa
jnp
cmp
add
lret
push
daa
sub
or
add
add
int
mov
je
test
sub
das
mov
jmp
mov
add
stc
jae
sbb
add
and
inc
add
arpl
lds
andl
negb
push
cli
dec
add
cli
in
add
out
add
sahf
add
test
xchg
inc
dec
add
xchg
lcall
add
fsts
sbb
sti
pop
xchg
cli
test
dec
int3
jns
cmp
arpl
lock
repnz
add
sbb
adc
out
adc
and
mov
pushf
fnsave
fsubr
das
adc
mov
imul
inc
mov
sahf
inc
add
add
mull
add
ljmp
das
sbb
and
cltd
inc
imul
repz
stos
icebp
push
out
dec
out
sbb
or
add
adc
jp
mov
shll
xor
or
test
add
pop
pop
or
fmul
and
das
xorl
iret
stos
jle
xor
js
gs
push
out
pushf
pop
pop
jne
mov
add
dec
cs
out
fdivs
xchg
add
fildl
fisubl
add
jae
movb
stos
cli
and
inc
mov
pusha
fnstsw
iret
rorb
leave
jns
jmp
sub
aad
negb
test
pop
incb
inc
call
cli
mov
outsb
xor
insl
call
mov
mov
mov
lods
or
insb
outsl
xor
xchg
mov
out
cmpsl
xlat
dec
xchg
test
popa
dec
fbld
cmp
xchg
adc
dec
aad
mov
cli
mov
xor
push
push
psrlq
in
ret
add
adc
repnz
popf
cmp
addb
shll
or
pop
pop
arpl
mov
scas
mov
push
add
pop
jns
add
add
mov
sub
in
cli
push
add
test
outsb
out
rorb
sbb
add
rcrb
lcall
cltd
fld
pop
push
or
push
lret
add
sub
add
jmp
mov
popa
les
jge
xchg
mov
pop
add
test
add
add
imul
push
add
test
jb
add
push
sbb
in
cmp
popa
movb
fcomps
add
in
fdivrs
fdivrs
dec
loope
outsl
scas
mov
arpl
ret
xchg
decl
cmp
loope
push
add
inc
add
lds
sub
cli
adc
adc
pop
pop
out
or
ja
icebp
inc
jae
ltr
sti
mov
add
aam
sub
lret
imul
fadd
repz
test
pushf
pop
orb
gs
mov
cmp
or
xor
mov
add
dec
test
pop
sbb
jb
cmpsl
clc
or
xchg
sbb
add
and
icebp
inc
nop
inc
pop
mov
sub
rorb
leave
mov
mov
jnp
pop
push
add
fstl
add
das
jp
rep
cltd
add
and
in
xchg
or
add
push
test
sti
add
cmp
mov
jecxz
jns
add
sub
loopne
cmp
test
mov
sahf
adc
push
cmp
pusha
add
repnz
jmp
xor
cmp
clc
inc
mov
hlt
xchg
push
xchg
add
rolb
xor
xchg
mov
mov
sub
inc
ror
fdivs
xchg
divl
add
add
data16
and
push
ss
daa
xchg
loop
cmp
fnstsw
cmp
or
adc
insb
out
add
sub
jmp
add
push
movsb
cmpsb
mov
mov
add
sbb
or
pop
jp
cld
fs
scas
adcb
sbb
cmp
gs
lret
dec
pop
leave
mov
add
notb
sbb
cmp
roll
andb
je
jl
ds
add
sbb
daa
in
mov
je
pushf
push
or
cmpsb
sub
ficomps
mov
cmpsl
mov
sbb
mov
xchg
mov
and
sbb
hlt
scas
lea
dec
xchg
add
in
lods
fildl
and
pushf
add
dec
push
icebp
lea
and
cwtl
sbb
dec
dec
dec
dec
xchg
adc
add
lea
adc
cli
lock
testl
pop
or
mov
loope
cli
xor
and
add
push
lahf
mov
loopne
add
js
call
ds
lock
mov
mov
clc
ljmp
mov
cmp
shl
iret
or
dec
mov
xchg
push
push
xchg
divl
incl
cmc
ljmp
mov
leave
lret
add
add
add
dec
je
incl
sub
rolb
fiadds
pop
stc
push
dec
sub
ds
add
movsl
ljmp
fisubrs
cmpb
mov
add
lods
cwtl
fisubrs
and
push
mov
cmp
add
sub
cmpsb
push
mov
shll
push
sbb
inc
add
jecxz
or
cmc
mov
scas
enter
verr
sti
push
xchg
fsubrs
imul
setno
inc
jge
imul
and
pushf
popf
adcl
insl
inc
in
pop
loop
push
push
push
scas
mov
pop
inc
xchg
jae
popa
push
movsl
sbb
loop
bound
loope
lock
xchg
lds
call
push
cmp
dec
push
push
scas
dec
lea
cmp
sub
sub
jns
fs
fists
add
mov
sahf
ficoml
add
add
pop
insb
or
sbb
pop
cwtl
in
in
cwtl
lret
subl
add
fists
adc
xor
xor
lret
or
push
aas
xchg
gs
push
in
push
add
arpl
or
imulb
rcr
dec
int3
insl
jg
mov
or
lock
xchg
and
add
stc
push
jnp
jnp
filds
and
add
pop
push
pop
xor
jbe
cmp
stos
add
shll
mov
incb
js
lea
add
add
imul
aas
scas
mov
sub
xchg
mov
test
test
add
ds
loope
sub
sub
mov
inc
arpl
add
add
add
sahf
aad
shrb
in
inc
stc
std
adc
xchg
sub
jmp
push
mov
add
aaa
into
mov
ja
jmp
add
stos
rcrb
xor
sub
sbb
push
sbbb
add
push
lcall
incl
out
sbb
std
add
and
add
fisttpll
push
or
icebp
or
mov
cmp
out
fistpl
add
pushf
hlt
lret
cmp
popa
movsl
mov
xor
fwait
mov
cmc
jae
testl
jmp
ret
loope
pop
jle
add
adc
pop
sarb
testl
sbb
lret
sub
add
aam
lcall
cmpsb
push
mov
das
mov
dec
lock
mov
xchg
add
mov
sarl
xchg
add
cwtl
ds
pop
and
mov
inc
pop
mov
add
adc
sub
jb
inc
add
clc
insl
add
jle
inc
cmpsb
add
out
adc
cltd
mov
and
sub
inc
add
cmpsl
adc
dec
pop
mov
and
imul
bound
pop
and
add
cmp
add
data16
out
out
xchg
add
add
sub
inc
add
adc
lret
cld
add
mov
test
adc
pusha
jnp
add
test
add
and
repnz
aad
lea
cmp
or
pop
mov
sub
mov
fdivrl
xchg
add
inc
push
js
or
sub
xchg
add
jg
xchg
sub
into
xor
scas
or
xchg
cmp
push
add
and
jbe
jae
push
pop
add
push
fildll
dec
jb
faddl
mov
ss
mov
les
lret
out
loope
ficompl
add
cs
sbb
inc
lds
filds
out
addr16
and
imul
mov
xor
sub
jg
sbb
aas
jne
shl
test
sbbb
aam
js
and
int
fmuls
lods
push
add
movsl
arpl
cmp
sub
sub
xchg
das
lods
jle
jnp
cltd
add
leave
stos
fdivrs
add
stos
imul
test
sahf
je
jnp
ret
xchg
imul
stc
loope
xchg
add
ja
sti
push
and
pop
push
pop
add
jo
adc
setno
jecxz
aas
repz
and
cmp
ss
xor
std
adc
add
add
stos
jb
or
add
dec
push
dec
repnz
sub
add
xchg
push
xchg
data16
xlat
movsb
mov
cli
add
pop
shr
add
fwait
add
push
roll
test
cmp
sub
pushf
pop
gs
std
add
add
jbe
repnz
jmp
pop
dec
mov
lret
push
ret
ret
add
daa
in
xchg
rorl
or
loopne
jecxz
out
test
out
add
out
ret
andl
stos
jnp
movsl
testl
aaa
add
sub
sbb
mov
test
add
inc
gs
loopne
mov
jnp
std
sbb
adc
sbb
pop
xchg
in
mov
add
pop
pop
fistpl
incl
xor
in
outsb
push
popf
loopne
out
cld
fdivrs
pop
fisubrs
add
add
in
sbb
mov
subb
cltd
sbb
loop
pop
mov
adc
cli
call
add
pop
shll
xor
arpl
mov
xor
dec
iret
fbstp
ret
inc
mov
movsb
aaa
in
xorb
add
inc
stos
cmpsb
jae
mov
jmp
adc
xchg
enter
add
xchg
dec
cmp
scas
push
rorl
sbb
pusha
xor
aam
stos
jb
or
and
popf
pop
popl
pop
shlb
adc
jecxz
add
jb
repz
or
cwtl
jno
dec
jne
jo
add
dec
fsubrp
cmp
iret
xlat
insl
jmp
add
daa
outsb
xchg
xor
sti
push
sbb
test
test
pop
add
or
mov
add
inc
add
insl
adc
ljmp
add
xchg
sub
add
jb
jbe
sbb
movsl
dec
std
push
mov
pushf
test
pop
jmp
pop
aad
fdivrs
cli
push
dec
stc
jae
iret
mov
xor
add
iret
dec
add
aas
mov
and
inc
in
push
push
add
push
pop
sbb
sub
mov
and
mov
xchg
and
mov
sub
add
std
cmp
push
or
sub
insb
push
add
mov
dec
jp
test
negb
jno
pop
mov
lods
imulb
mov
jge
addb
cltd
xchg
sub
mov
insb
cmpsl
xchg
daa
pop
iret
out
aad
inc
ja
sahf
xchg
cmpsl
or
pop
sub
mov
adcb
cmpsb
ljmp
add
or
adc
add
mov
mov
mov
sub
out
cmp
mov
jno
aas
cmp
add
inc
add
pusha
adc
mov
lock
add
jb
adcb
add
push
add
lahf
addr16
xchg
cmp
mov
mov
sti
in
jno
les
mov
add
jecxz
cmp
enter
add
cwtl
mov
mov
call
inc
jl
push
loop
and
sbb
out
xchg
cmpsb
ss
add
roll
sbb
add
call
push
popa
lods
push
add
jne
cmpsl
inc
adc
lods
dec
add
roll
iret
repnz
lret
add
cmp
sub
cld
xchg
test
popa
lret
mov
enter
out
imul
mov
push
add
ljmp
in
inc
or
mov
arpl
inc
shrl
scas
sbb
mov
adc
iret
push
ficoml
add
cld
sbb
jp
xor
inc
loope
scas
int3
add
rorl
scas
test
xchg
or
xchg
mov
jo
add
arpl
xchg
xlat
fldcw
jmp
les
jnp
push
lret
lret
movsb
add
sub
mov
add
sbb
cs
or
cmp
cwtl
sub
movsl
push
subl
dec
push
addl
jmp
cmpsb
lds
mov
out
movb
arpl
add
push
lds
arpl
jo
add
inc
add
jae
sar
xchg
or
movsl
jo
mov
sbb
out
cltd
xchg
fiaddl
add
push
mov
mov
movsl
insl
dec
lret
fadd
inc
or
sub
adc
add
or
push
cmp
add
nop
decl
sbb
xlat
aam
insl
adc
aad
stos
cmp
rorb
inc
decl
pop
imul
adc
sahf
xchg
xchg
push
in
push
int3
push
addb
cmp
or
add
mov
divb
pop
jl
cmpb
dec
cli
inc
bound
int
data16
lret
clc
mov
push
jno
hlt
add
push
pop
sbb
add
dec
cmpsb
loope
push
jge
cmp
test
test
sub
test
popa
sbb
push
cmp
dec
les
movsl
mov
movsb
mov
imul
adc
mov
jle
mov
mov
push
lahf
imul
xchg
add
stos
add
or
mov
adc
add
outsl
sbb
and
mov
mov
inc
jno
sarb
add
aad
pop
add
adc
jmp
ds
in
mov
mov
sub
pop
mov
in
gs
test
dec
add
outsb
stc
incb
add
inc
add
adc
outsb
xchg
lahf
in
adc
aam
cwtl
adc
cmp
sar
add
aad
dec
mov
pop
ja
aam
or
add
mov
out
jb
jbe
or
fsubrs
add
xor
add
sarb
sti
idivl
mov
je
inc
sbb
hlt
push
movsb
mov
test
es
loop
imul
filds
push
nop
mov
repz
enter
loopne
push
mov
mov
push
push
fcompl
mov
sub
mov
int
sbb
mov
andb
cmpsl
add
shll
rol
xlat
inc
or
mov
in
mov
neg
mov
mov
std
jno
or
push
mov
adcb
jno
jmp
or
adc
inc
jl
loop
cmp
add
and
shll
inc
fisubrs
and
loope
decl
add
rorb
sub
rol
jbe
add
jmp
movb
std
and
adcb
sahf
xor
mov
add
mov
sarb
lea
add
stos
mov
add
add
and
adc
add
add
es
add
aas
mulps
pop
add
outsl
jae
cmp
arpl
out
push
mov
bound
pop
pop
test
jae
ljmp
mov
out
jg
inc
cmp
add
pop
add
pop
pop
add
dec
dec
add
mov
or
sbb
in
lods
add
xor
pop
add
leave
cmpsb
fadds
push
repnz
out
add
mov
or
int3
addr16
les
xor
xor
icebp
push
test
jecxz
mov
add
mov
lods
rolb
jecxz
inc
lods
adc
stc
push
add
leave
mov
jnp
add
pop
pop
xor
cmp
sub
dec
gs
xor
xchg
das
xor
insl
add
jne
xor
mov
sbb
add
arpl
cmp
ds
mov
add
roll
lds
punpckhbw
mov
pushl
dec
mov
fsubrl
cltd
out
aam
mov
jb
mov
das
popf
mov
adc
int
and
push
mov
fs
jo
add
out
jecxz
mov
adc
bsf
xor
jb
clc
xor
mov
popf
dec
or
sbbl
or
adc
mov
pop
cmp
adc
add
imul
js
cmp
ss
cmp
sbb
push
cmp
xchg
sahf
cli
lret
dec
das
add
outsb
popf
scas
mov
clc
and
or
xor
pop
loopne
cmp
outsb
lret
dec
xchg
add
or
add
dec
dec
xor
cmp
adc
add
scas
fs
add
jne
addl
add
cli
mov
jle
ljmp
add
adc
fisttps
lcall
mov
xchg
aam
cmc
pushl
adc
ret
xor
call
fstl
add
ds
outsb
add
pusha
mov
sahf
add
xor
add
test
add
mov
cmc
push
jae
ret
lcall
js
in
xchg
mov
mov
das
addl
inc
dec
add
add
add
add
add
std
xlat
fisttpl
dec
jecxz
xor
jns
cmp
in
push
dec
int
out
inc
add
stc
add
dec
xchg
push
mov
mov
adc
push
mov
call
mov
cld
inc
incb
pop
jecxz
lea
lret
ss
loop
mov
int
lret
dec
incb
mov
adc
jmp
mov
sbb
jp
int
cmp
in
roll
cmpsl
add
cs
add
aam
add
xchg
lods
jns
add
dec
sub
cmp
les
mov
xor
sub
push
cmp
lcall
loope
aas
sbb
sub
lods
pop
or
cmp
lock
loopne
pop
insl
sub
flds
mov
fs
cmc
insb
jo
mov
add
lcall
and
xor
push
add
movl
jp
sbb
add
stos
mov
arpl
int
add
test
pusha
jns
add
dec
leave
push
add
ljmp
lret
xor
lea
sub
and
fmull
js
add
aas
cmp
inc
aas
jno
sti
mov
mov
add
add
cmp
add
add
sub
mov
pop
repz
mov
enter
jp
cmp
fsubs
jp
xchg
inc
push
loopne
mov
and
cltd
sbb
je
in
cmpsb
adc
aad
adc
fsts
movb
mov
mov
jbe
push
push
dec
sub
insb
out
cmp
xchg
push
mov
rorl
push
insb
lcall
adc
xor
mov
movsb
adc
add
aas
icebp
pop
mov
arpl
lock
inc
mov
adc
mov
fiaddl
sbb
add
cli
int
bnd
sub
add
jns
mov
ret
cmp
add
pushf
add
adc
cmp
xchg
jno,pt
mov
sub
jl
int
pop
ss
jbe
jns
dec
shll
fmuls
add
ret
add
outsl
mov
jp
jp
inc
fxch
lcall
in
dec
addl
pop
inc
aas
push
push
mov
add
add
inc
lea
test
mov
movsb
test
sub
add
out
or
jno
mov
mov
dec
mov
add
lahf
nop
push
or
or
mov
cld
dec
sbb
ss
faddl
mov
sbb
test
xor
movsb
addr16
cmpsl
push
add
bound
sbb
xchg
jmp
ja
ret
fidivs
pop
hlt
loopne
push
jnp
pop
sbb
cmp
add
test
lcall
push
lret
popf
add
push
lret
sbbl
in
and
dec
shlb
mov
sub
data16
and
insl
cmpb
and
add
sub
ficoms
xor
push
xchg
xchg
rcl
add
add
cli
lock
adc
sbb
mov
mov
push
jg
into
jno
cltd
call
pusha
mov
sahf
xchg
std
popf
pop
push
mov
pop
sbb
ret
sahf
or
add
adc
cwtl
cli
and
dec
insl
dec
add
ss
add
mov
add
loop
pop
in
sub
ljmp
add
and
fisttps
xlat
fwait
add
xor
mov
aad
sbb
dec
lret
nop
lahf
cmp
pop
xor
inc
cmp
cmp
or
mov
test
dec
add
jl
fwait
nop
add
adc
call
lods
xchg
adc
sbb
adc
jp
sub
mov
lret
lcall
loop
pop
in
add
outsb
fstps
add
mov
cli
add
sub
call
dec
add
sub
flds
pop
fbstp
jbe
add
notl
or
repnz
cmp
mov
fists
cmpsl
call
and
fisubs
jne
into
or
cld
ds
loopne
add
in
rorl
add
push
jno
pop
add
xchg
addr16
sub
popa
mov
test
das
lret
pop
mov
push
add
mov
add
addr16
clc
jns
sbb
jns
cmpsb
add
add
cmp
addb
fbld
sub
xchg
rolb
sahf
inc
push
mov
rcr
add
mov
cmp
jb
insb
add
enter
repnz
pusha
or
ret
sub
loop
and
imul
add
xchg
fisubs
sbb
out
je
adc
or
int
std
repnz
insb
in
fildll
jecxz
inc
add
mov
lret
inc
mov
inc
out
lret
fldl
out
add
sbb
mull
lock
ljmp
push
sbb
mov
pop
xchg
jle
mov
icebp
or
cmp
inc
popa
in
sbb
cmp
sbb
ja
popa
xchg
sub
ret
dec
mov
sahf
cmpsl
jg
jae
iret
addr16
addr16
add
xchg
lahf
inc
and
fsubrs
gs
movsb
mov
mov
adc
sub
in
mov
or
sub
or
mov
add
xor
add
add
jnp
adc
sub
leave
pop
pop
jno
mov
in
loop
out
xchg
fistl
int3
dec
ss
clc
add
and
xor
inc
roll
xor
xor
std
mov
les
adc
lahf
fs
jne
push
es
mov
mov
cld
add
inc
add
jecxz
add
add
dec
fstps
push
xor
push
push
mov
scas
mov
add
div
fadd
in
add
mov
loope
xor
gs
cs
pop
and
add
test
inc
xchg
in
or
mov
mov
loope
cld
sbb
outsb
cs
adc
lods
enter
add
std
mov
sbb
imul
pop
popf
outsl
aad
out
mov
scas
mov
fnstcw
divl
enter
je
pop
pop
add
push
pushf
cmp
push
movsb
or
push
pop
pusha
adc
lods
int3
popa
mov
add
cmp
add
cltd
scas
jle
add
lret
repz
adc
dec
cli
int3
sub
jo
add
sbb
rolb
test
jl
add
inc
mov
dec
mov
pop
xchg
sbb
into
add
arpl
mov
sbb
sbb
sbb
lahf
std
push
dec
inc
hlt
mov
xchg
mov
aas
fbstp
inc
push
mov
aad
add
sbb
lock
into
add
aam
subl
mov
cmp
add
xchg
or
roll
es
incb
mov
icebp
pop
adc
dec
pop
xor
mov
mov
fcoml
mov
adc
jbe
add
xchg
xchg
jl
scas
and
leave
cmpsl
mov
mov
in
imul
mov
js
mov
add
jge
add
push
push
pusha
insb
add
cmpsb
cwtl
mov
scas
sub
xchg
jne
jo
cmp
push
mov
cmp
add
imul
or
sub
jp
cmp
jno
cmp
lea
test
fadds
or
pop
jl
and
data16
cmp
scas
jb
insb
pop
and
push
das
add
adc
mov
add
add
push
dec
dec
mov
cmpsl
shll
dec
xchg
pop
add
pop
xor
push
testb
add
dec
add
cmp
xor
negb
das
ss
cmp
add
mov
imul
push
pop
ret
pop
mov
xchg
loope
aaa
test
test
gs
out
mov
jge
jge
sbb
sub
adc
jp
repnz
outsb
add
data16
fs
pop
cmp
push
mov
xlat
fnsave
stc
ret
stos
repnz
inc
add
inc
jp
cltd
sbb
stc
aad
add
enter
fmul
and
in
add
or
lahf
pop
push
mov
jl
mov
cld
icebp
lds
fs
push
dec
loop
loop
mov
dec
add
adc
mov
icebp
pop
sbbb
push
scas
jp
add
rcl
xchg
mov
daa
fwait
mov
rcll
jg
test
divps
jl
lcall
popf
and
add
fcomps
sub
or
lcall
std
mov
xor
xchg
add
jb
pop
pop
addr16
testb
jo
scas
rcrb
out
fs
adc
add
pop
stc
stos
cmc
sbb
mov
mov
mov
sarb
stc
xchg
jg
fmuls
add
fsubrl
add
jns
and
xor
flds
or
jge
add
lds
lcall
jo
sub
inc
lea
mov
movsb
cmp
add
adc
aam
add
iret
add
mov
in
das
ret
or
loop
push
add
insl
pusha
lds
add
test
mov
add
adc
jne
mov
xor
outsb
shrb
add
fs
loopne
xor
out
inc
push
xor
mov
ficompl
loopne
push
mov
push
insb
popf
jbe
lods
add
pop
jo
add
cmp
and
mov
mov
and
cmp
inc
add
add
add
dec
inc
cltd
sub
mov
sub
add
push
mov
out
mov
adc
push
adc
test
aad
testl
test
inc
add
cs
sub
cmp
mov
push
add
add
icebp
cmp
cld
add
add
pushf
sbb
daa
xchg
std
sub
or
shrl
adc
pop
add
adc
add
and
xchg
fcompl
data16
popf
cli
pop
pop
ds
pop
jbe
push
jae
push
add
fnstenv
loopne
sbb
mov
mov
add
movsb
ljmp
movsl
movsl
push
xchg
mov
fmuls
push
repnz
push
lock
add
mov
pop
add
mov
inc
cmp
iret
stc
or
dec
cmpsb
cmp
dec
rolb
add
inc
add
mov
and
jmp
mov
mov
sub
das
xor
mov
aad
jg
aas
hlt
addb
mov
repnz
and
cmp
aad
sbb
stc
xor
pop
adc
aam
aad
mov
mov
scas
sub
xor
lahf
test
add
mov
mov
xor
adc
add
xchg
jge
push
in
jnp
pushf
cmp
das
jbe
inc
out
mov
xchg
add
addr16
fistps
out
leave
mov
cmc
lret
mov
jnp
ss
pop
lret
lret
pusha
adc
push
add
in
sub
add
sarl
jnp
mov
in
bound
dec
fwait
cmpsl
push
cmpsb
push
pusha
and
cmp
inc
add
fisubrl
pop
add
mov
add
sub
push
push
lods
push
xor
xor
mov
add
idiv
sub
cmc
push
pop
mov
leave
push
pop
pop
fwait
mov
sbb
add
xchg
mov
inc
sbb
popa
push
dec
mov
jns
jge
jle
stc
test
mov
add
cmp
mov
add
push
lods
jmp
jo
or
mov
dec
leave
push
add
das
add
addb
pusha
mov
mov
push
es
inc
cwtl
mov
lods
nop
mov
cmpl
jl
aaa
adc
mov
out
inc
data16
sbb
add
push
notb
lock
adc
test
or
xchg
popa
mov
cmc
adc
ret
out
mov
popa
lcall
add
add
add
aad
jae
mov
add
add
add
mov
pop
sbb
add
sti
xor
out
pusha
lret
add
push
insl
adc
loop
mov
add
push
shrb
sahf
xchg
xchg
add
inc
add
stc
decl
sub
push
les
mov
pop
add
xchg
sub
out
movsl
pop
add
sbb
cmpsl
pop
add
and
push
scas
pop
loope
add
ds
adc
inc
or
jge
scas
vpsubsb
pop
xor
sub
ret
loope
test
aad
sub
cmpsb
mov
mov
in
add
lcall
push
out
push
ljmp
outsl
test
mov
xchg
jecxz
shrb
leave
dec
push
xchg
clc
ljmp
sub
and
add
add
jmp
pop
dec
ret
gs
sarb
mov
jge
add
ljmp
js
add
add
shrl
mov
ficomps
and
call
sbb
adc
mov
icebp
mov
fstpt
jns
mov
ja
xchg
xchg
lock
ja
fnstenv
pop
mov
adc
rclb
mov
xor
xor
into
dec
push
cwtl
ja
mov
scas
into
or
or
add
add
in
lahf
xchg
shrb
add
ja
in
dec
mov
movsl
aam
faddl
fildl
or
mov
xorb
sbb
add
jo
and
loopne
add
mov
loopne
add
or
or
cmp
xor
add
push
insl
adc
jecxz
dec
repz
cmp
xor
out
sub
add
rol
mov
hlt
push
testl
mov
jle
xchg
sbb
add
call
filds
jle
mov
aad
jmp
out
push
push
hlt
jp
pushf
add
div
addr16
lock
dec
mov
jp
add
or
jae
add
pusha
sub
loopne
aam
test
jp
std
cmpsl
pop
test
xchg
mov
popl
jno
add
imul
int
cmp
sti
jecxz
es
dec
xor
mov
out
jne
dec
adc
or
mov
jae
lahf
ret
jae
scas
push
ja
or
jmp
loopne
fmulp
add
push
lret
cmpsl
rolb
inc
bound
and
insl
leave
mov
fbld
inc
sub
add
push
sub
cmpsb
pop
test
adc
test
add
push
push
pop
add
lods
les
xor
aaa
xchg
aam
sahf
int
loope
test
xchg
outsl
xchg
jp
cmp
imul
test
mov
shll
cmpsb
add
mov
lock
aas
fs
sub
mov
stc
ljmp
daa
xchg
stos
sti
scas
fs
rcrb
shrb
xchg
shlb
add
or
mov
add
mov
jae
add
add
adc
add
dec
outsl
xchg
and
lods
es
push
pop
lret
in
ret
xchg
pop
jno
sub
mov
repnz
push
mov
jg
cmp
sbb
and
cltd
add
mov
out
mov
aas
testl
stc
cmc
pop
xor
sub
shl
mov
push
fstl
sarl
add
dec
inc
cmp
add
jno
fdivl
je
ja
push
add
sti
outsl
mov
pop
lret
roll
xorb
fldt
sbb
or
adc
rcl
filds
out
faddp
inc
scas
shll
push
add
jg
inc
enter
fs
stos
xchg
push
test
es
dec
lahf
clc
inc
stc
stos
push
loope
pushl
inc
nop
adc
mov
push
dec
fiadds
push
movsb
lods
inc
aad
outsl
push
cmp
push
pushf
sub
pop
test
fisubl
cmp
sbbl
add
movsb
in
add
sbb
push
mov
mov
inc
mov
mov
push
cmp
iret
fwait
pop
and
jg
mov
mov
lock
or
iret
in
js
dec
mov
stc
lret
scas
ja
stc
cmp
inc
push
in
decb
dec
addl
add
pop
outsb
or
int
fbstp
xchg
add
test
xor
push
cld
add
cmp
mov
dec
add
xchg
popa
push
inc
inc
cmp
test
and
mov
xchg
cli
inc
ja
ds
addb
mov
or
xchg
xor
mov
mov
outsb
adc
scas
mov
add
add
add
pop
pusha
fsts
imul
les
adc
sbb
dec
daa
je
iret
jp
sahf
imul
fcmovu
add
xor
add
jb
pop
add
or
push
dec
or
daa
mov
adc
inc
add
daa
inc
dec
push
movsb
add
adc
xlat
cs
add
add
push
xor
jecxz
mov
xchg
fsubl
adc
int
adc
push
mov
add
dec
or
das
add
add
xchg
dec
pushf
sub
sbb
inc
cmp
sahf
and
adc
inc
lods
pop
push
or
fidivrs
ss
fwait
jmp
xor
cli
shrb
jo
pop
sti
cwtl
sbb
jb
push
add
and
mov
xchg
addl
push
iret
js
cmpsb
push
mov
ljmp
iret
loop
cmp
cltd
gs
faddl
add
add
push
pop
dec
add
jb
adc
flds
fmull
jae
add
xchg
les
addb
sbb
popf
out
out
lahf
add
xchg
xchg
xchg
stc
add
sbb
sub
ror
dec
jmp
sub
add
or
jb
ljmp
rol
hlt
icebp
jnp
mov
popf
or
aaa
cltd
sarb
mov
mov
cltd
imul
addl
popl
popa
cmp
xchg
pop
xor
loop
mov
sub
adc
stos
dec
data16
decb
icebp
pop
add
jp
and
cwtl
and
leave
mov
xchg
add
lock
lods
xchg
je
mov
out
dec
pop
mov
jnp
push
cmp
lcall
pop
repnz
sbbb
shll
and
jl
fs
je
add
dec
je
int3
sbb
ja
stc
add
add
lods
stc
repz
aas
insb
xchg
inc
sbb
add
repnz
scas
repz
sub
pop
cltd
add
mov
mov
xor
cmp
roll
adc
sub
sahf
push
in
adc
xchg
add
mov
sub
incl
out
add
rcll
push
fstpl
adc
and
lock
loop
cmp
push
jg
lea
mov
mov
imul
push
add
rclb
leave
cmpsl
js
push
mov
movsb
mov
in
ficoms
push
aas
dec
shll
add
mov
xchg
push
in
add
rolb
xlat
sub
fildl
enter
xor
jle
push
push
mov
xor
add
enter
mov
adc
mov
push
inc
out
add
and
cld
mov
jb
pushf
sbb
add
std
loopne
mov
imul
ret
mov
mov
dec
fldenv
js
push
jl
mov
popa
mov
sbb
mov
divb
dec
push
push
xor
add
add
add
insb
add
xchg
ds
rorb
push
cwtl
sti
push
movsl
inc
pop
dec
je
adc
xorl
jmp
aam
pcmpgtd
xor
loopne
cmp
outsl
arpl
addr16
jp
roll
xchg
jmp
cs
push
and
int
je
sbb
or
shl
mov
or
inc
lret
and
fstps
push
and
sbbl
in
lret
and
xor
pusha
xor
jbe
iret
mov
fcmovnb
add
repz
movsb
xchg
mov
adc
sbb
xchg
fists
adc
push
xor
mov
or
lret
aas
add
rolb
addb
xchg
add
adc
add
xor
lds
add
lcall
lahf
jmp
ljmp
ds
mov
xchg
xchg
test
addb
movsl
into
add
sbb
push
jbe
sub
jne
bound
xchg
dec
lods
int3
or
pop
outsb
and
adcl
pop
aam
jecxz
mov
jne
fsubs
cld
xchg
add
push
push
cmpsl
cltd
add
iret
cmp
pop
mov
xchg
pop
fildl
xor
mov
jecxz
cmp
arpl
cmp
rcl
jge
inc
dec
lret
push
or
repz
push
rolb
int3
cs
lcall
flds
jae
add
clc
jmp
sarb
cmpsl
mov
leave
repnz
stos
pop
inc
add
push
fs
push
inc
add
inc
xor
popl
jl
xor
mov
add
cld
xchg
mov
stc
lea
add
movsb
jge
ja
leave
pop
adc
push
mov
adc
mov
nop
xor
sbb
jp
add
sbb
lea
pop
add
add
enter
pushf
add
pop
jae
add
push
repnz
test
pop
out
popf
in
lret
jae
sub
add
lds
mov
and
mov
jmp
mov
notb
inc
add
insb
mov
mov
or
int3
popa
jmp
inc
inc
mov
bound
add
cmp
fdivs
imul
les
into
aaa
ret
sub
or
add
insb
fs
jle
xchg
pushf
popf
xor
sub
outsl
add
add
sub
dec
pop
xchg
pop
add
pop
out
push
inc
add
mov
sbbl
pop
mov
fidivs
mov
add
and
pop
faddl
jnp
lock
add
mov
add
leave
iret
or
sub
mov
mov
jmp
pop
add
shll
xchg
sub
addr16
sti
xchg
mov
add
push
imul
mov
lods
sub
mov
cltd
pop
xor
aad
pop
jns
aas
cmp
and
ljmp
dec
jmp
cmp
jnp
mov
repnz
sbb
push
add
pop
rol
inc
call
outsl
add
in
dec
cmc
push
enter
mov
add
inc
inc
cmpsb
and
cltd
adc
int
push
mov
out
push
push
push
call
ja
jae
mov
fwait
mov
ljmp
sbbl
mov
enter
xor
add
inc
xor
jne
fld1
jne
jo
andl
dec
in
sti
dec
repnz
add
mov
dec
pop
fmull
jge
cmpsb
adc
add
sub
lods
add
mov
sbb
test
es
neg
in
stc
stos
or
sete
adc
pop
xchg
pop
fistpll
push
add
and
in
pop
fwait
and
imul
xor
lock
xor
sbbl
adc
int3
mov
add
popf
lahf
mov
stc
xchg
dec
fcomps
jae
inc
mov
pop
in
mov
mov
cmp
sbb
push
cld
icebp
pop
and
jne
arpl
pop
iret
es
add
lret
gs
mov
subl
jle
ss
mov
sbb
out
subl
mov
jmp
js
sti
push
int
inc
andl
scas
pop
pop
mov
or
iret
add
testl
mov
lock
pop
fsubrl
add
add
setg
pop
add
adc
add
inc
les
jbe
insb
push
rorl
pusha
daa
shrb
std
pusha
add
cmp
scas
or
xor
stc
add
lds
inc
cmpsl
xchg
jo
push
add
mov
push
add
je
mov
adc
xor
and
rcrb
movb
stos
inc
orb
add
cmc
movb
add
dec
sbb
push
iret
movsb
aad
adc
push
sti
es
clc
fxtract
add
xchg
movsl
sbb
std
and
mov
rorl
pop
nop
scas
out
sbbl
lcall
add
les
cmp
and
int
sbb
add
loopne
mov
mov
inc
add
mov
adc
sub
add
aad
je
adc
cmp
adc
jle
stos
and
roll
or
sbb
ret
add
outsl
push
mov
sbb
pop
push
insb
or
mov
push
mov
push
sbb
cltd
or
inc
push
faddl
fldcw
add
mov
add
call
cmp
push
inc
xchg
dec
addl
in
cli
mov
mov
insb
in
pop
dec
out
cmp
mov
das
or
popa
jp
movl
std
add
mov
add
cmc
add
mov
sub
jp
popa
aad
pop
jae
add
cmp
enter
mov
in
pop
rcr
dec
cmp
and
fildl
iret
xor
add
xor
push
pop
addr16
out
add
scas
add
jnp
outsl
psubsw
push
add
roll
aas
shrl
sub
fbstp
xor
testb
test
pop
movsl
add
cmpsb
sub
add
add
push
sub
imul
mov
in
sub
loop
sbbb
out
dec
mov
lock
into
rcrl
mov
add
mov
lret
fwait
out
shrl
mov
sar
call
test
aam
inc
shl
cmpsb
sbb
adc
push
xchg
add
jae
lock
lods
repnz
jecxz
dec
xor
push
pop
dec
add
mov
cmp
icebp
add
jecxz
test
add
add
daa
xor
aas
inc
push
sub
add
jnp
ficompl
xchg
cltd
fbstp
adc
mov
roll
out
add
push
mov
inc
inc
xchg
add
ret
pusha
add
and
ltr
pop
push
mov
inc
out
mov
fnstenv
add
xchg
xor
clc
ds
aad
jnp
add
dec
sbb
add
add
test
mov
icebp
inc
adc
add
xchg
les
gs
pop
add
fnstsw
push
add
xor
dec
xlat
add
addb
adc
cmp
je
push
fsts
subl
mov
insb
and
jle
sub
andb
cs
jge
dec
push
pop
push
mov
aas
xchg
pop
jp
add
scas
flds
pop
or
pusha
lea
mov
add
cmpsb
add
das
push
jns
push
and
cmp
add
xchg
add
pusha
in
pop
mov
add
push
pushf
push
lods
adc
stos
in
cmp
mov
or
dec
int
mov
sbb
aas
add
xor
insb
mov
mov
dec
mov
out
mov
loop
ret
aaa
push
add
add
arpl
push
leave
lret
in
mov
cmp
repz
cltd
push
addr16
outsl
stos
lock
mov
add
mov
xlat
xor
fsubrp
aas
cmpb
insb
add
xchg
and
or
mov
add
add
push
add
xor
pop
add
xchg
add
sub
sbb
fnstenv
data16
cli
xor
push
int3
inc
jne
movsl
add
imul
jge
pop
add
add
sti
inc
test
test
shl
add
and
lahf
pop
pop
les
pop
xchg
ret
aas
jmp
mov
inc
cmpsb
push
xchg
dec
addr16
imul
ljmp
lret
add
inc
rol
sarb
mov
aaa
cs
enter
sbb
popl
push
loop
test
xor
div
aam
fwait
pop
sbb
jnp
or
mov
shl
lock
in
fdivrs
mov
xchg
adc
add
mov
std
pop
lcall
xchg
cmp
pop
cs
sub
les
mov
fcmovnu
arpl
into
inc
lret
clc
add
dec
flds
xchg
sbbb
mov
sub
sub
repnz
jnp
in
cld
adc
xchg
sbb
vmovd
add
rolb
ret
add
std
leave
scas
cltd
shlb
jne
frstor
cli
or
enter
lcall
ret
jno
cmp
inc
ret
fistpl
jecxz
pop
add
nop
sti
jb
xchg
add
mov
lea
xchg
jmp
test
ret
mov
or
lods
dec
stc
mov
in
sti
push
add
inc
jae
cmp
jecxz
jb
loopne
loop
in
aad
jnp
into
inc
insb
xchg
sbb
add
lret
lret
popl
filds
data16
stc
lcall
sub
or
sbb
lahf
cmpl
lods
add
cmpl
pop
add
inc
faddl
pop
lea
xchg
cltd
add
cmpl
sahf
dec
sbb
adc
pop
stos
in
and
pop
mov
loopne
pop
jle
mov
jns
outsl
xor
pop
cmp
inc
lcall
mov
push
sbb
pop
ja
add
rorb
movsb
mov
out
adc
fcmovnbe
push
xor
add
push
negb
scas
jmp
jmp
int
cs
cmp
cld
mov
icebp
sbb
jmp
outsb
rol
add
xor
sti
sbb
add
pop
bound
push
adc
pop
cli
rolb
lods
cmp
aam
add
dec
pop
lcall
push
movb
test
add
add
roll
dec
jl
inc
adc
idiv
add
test
imul
xchg
push
mov
add
cs
popa
xacquire
pop
sub
mov
out
or
je
mov
add
daa
gs
push
cmp
mov
sbb
addb
stc
pop
push
or
pop
mov
add
ds
in
xchg
lock
add
fld
add
outsb
sahf
dec
push
add
sbb
sbb
jae
mov
call
sbb
fadd
cmp
add
dec
dec
adc
sub
in
loopne
add
jecxz
or
movsb
stos
push
xchg
addb
test
xchg
pushf
faddl
add
add
adc
pop
dec
add
mov
add
add
jmp
xor
movsb
mov
mov
jae
mov
dec
add
leave
and
or
inc
and
cwtl
std
push
sbb
push
mov
mov
js
movsb
lret
add
xchg
xchg
xor
jmp
push
and
jno
jle
lods
lcall
xchg
test
shrb
insb
jle
pop
dec
pushf
cmp
add
mov
inc
aad
fwait
jle
shlb
sbb
pop
into
cmp
jp
int3
push
mov
aaa
out
jecxz
sub
mov
add
mov
mov
pop
xchg
xchg
ds
repz
insl
and
es
and
mov
pop
mov
add
add
pop
int
jmp
push
pop
in
add
inc
mov
lret
xor
mov
repnz
ds
mov
stos
adc
not
lock
out
test
std
add
add
arpl
xchg
add
aad
inc
inc
mov
cmc
cs
sub
add
mov
dec
mov
pop
and
test
pushf
sub
mov
pop
sub
scas
ficomps
in
xchg
jne
or
pusha
add
movsl
xchg
xchg
jnp
xchg
mov
xor
filds
add
les
sub
add
test
mov
movsb
mov
cmc
add
jecxz
push
add
int3
mov
mulb
mov
cmp
add
jge
bound
shrb
mov
fcoml
adc
in
into
out
gs
add
pop
push
add
add
mov
pop
add
add
cmp
dec
enter
loopne
mov
outsl
jmp
add
add
adc
pop
add
xchg
imul
adc
sub
jmp
out
jo
push
pushl
and
mulb
pop
pop
add
les
jns
cmp
outsl
add
stc
imul
dec
mov
sbb
test
add
ljmp
scas
add
lea
int3
in
popa
das
add
push
aas
add
in
nop
add
cmp
or
js
lea
fdivr
pop
sbb
mov
shrb
xchg
out
stos
incl
xlat
stc
sbb
pop
sub
inc
dec
add
gs
mov
sbb
and
add
sarl
fbld
mov
nop
cmp
mov
in
std
inc
test
add
dec
inc
test
add
popf
sub
xchg
scas
xchg
push
or
inc
xor
out
je
add
sub
fsub
es
add
jp
fcmovnbe
xchg
into
jmp
movsb
cmpsb
add
in
add
mov
xchg
imul
or
cmp
cli
add
subl
fists
inc
call
retw
add
add
push
inc
add
add
add
lcall
loope
cmp
add
in
leave
sub
daa
aam
repnz
and
pop
sbb
xor
sarl
or
cmp
cmp
sahf
movsb
iret
mov
iret
add
and
shll
add
movsb
stos
jns
push
and
mov
xchg
push
scas
ja
or
push
jnp
add
mov
jp
dec
dec
sti
adcb
mov
add
rolb
xor
xchg
mov
roll
sub
sbb
ja
adc
mov
sbb
mov
xor
dec
jno
push
aas
iret
rcl
in
mov
cmpl
xchg
jbe
push
push
les
and
xchg
pop
cwtl
fucomi
push
cmp
add
aaa
out
or
das
das
pop
repz
xchg
xchg
dec
mov
rorb
mov
clc
loop
mov
mov
and
xchg
gs
or
loopne
add
inc
sub
fcoml
mov
sub
ret
mov
cmpsb
sbb
stos
sub
sub
jb
int
and
cld
lea
shll
sbb
cmp
push
add
out
mov
push
inc
pusha
sub
cs
mov
sub
jo
mov
stos
jle
add
sahf
xor
aam
add
pop
add
hlt
xchg
cmp
aam
iret
les
cmp
cmc
lods
inc
cmovns
pushf
jp
add
inc
add
icebp
pop
pop
add
mov
inc
jnp
dec
adc
lahf
mov
mov
cltd
test
cmp
in
aad
add
jg
add
jb
add
andb
mov
jg
repz
and
add
add
outsl
lret
flds
out
pushf
addr16
adc
or
cltd
loop
loopne
movsb
and
mov
push
mov
dec
cmp
xchg
jnp
aaa
dec
cli
inc
movsb
jle
ljmp
xchg
shlb
push
dec
add
mov
push
pop
neg
mov
sub
add
into
jb
sahf
aam
lods
in
stc
lret
cli
mov
dec
jno
adc
cmc
ljmp
jl
and
lcall
in
add
popf
add
enter
loop
aad
push
lods
add
stos
and
sub
mov
adc
xchg
mov
in
mov
sub
sbb
movl
addb
cs
mov
cmpsl
das
inc
xchg
sbb
mov
add
xchg
fstps
jle
add
mov
xor
mov
fs
mov
fs
push
jo
and
xor
add
add
push
add
mov
int3
cmp
pushfw
xor
cmpsl
push
mov
add
mov
dec
push
add
stc
add
pop
stos
rcrb
ret
nop
fadds
iret
cli
dec
or
xor
adc
sbb
movl
inc
hlt
add
jmp
sbb
bound
or
sbb
add
ret
jnp
push
add
jle
in
add
stc
pop
xorb
mov
mov
pop
push
mov
fldl
dec
sbb
jle
push
or
adc
out
add
and
mov
mov
repz
adc
cltd
add
gs
dec
add
lret
std
lock
inc
push
and
xor
and
push
ffreep
add
jne
inc
negb
sbb
ds
stc
rcll
cmp
add
mov
sahf
lea
add
data16
movdq2q
shrb
jge
dec
adc
pop
mov
pop
or
mov
inc
bound
inc
and
js
inc
mov
or
lds
stos
outsb
or
cmp
xchg
je
add
enter
add
ret
mov
dec
fadds
xchg
xorb
das
xlat
push
jno
ret
lods
pop
rcrb
dec
xor
pop
xchg
adc
hlt
movsb
add
loopne
movsb
push
test
cmp
mov
imul
inc
inc
sub
or
imul
jae
lret
jecxz
add
out
mov
add
cmpsl
jbe
fildl
and
cld
addl
loope
add
lahf
data16
nop
addr16
add
add
movsb
sbb
sbb
ret
jb
xor
cwtl
les
cld
sub
fldcw
inc
add
rol
jns
sahf
outsb
sub
cmp
add
jne
mov
nop
mov
mov
sahf
mov
cmp
mov
dec
and
push
test
ljmp
pop
cmpb
and
arpl
cmpsl
and
sub
cmp
xchg
lcall
add
add
sti
adc
out
pushf
mov
imul
adc
arpl
adc
shrb
je
sbb
fldt
sarl
jge
paddw
movsl
add
int
mov
add
and
mov
jno
xor
add
pushf
roll
xchg
xor
test
sbb
repz
push
lods
dec
xchg
shll
and
jnp
jne
add
add
or
add
test
lods
out
jmp
fsubs
inc
hlt
cltd
sub
loop
stos
add
mov
jecxz
mov
popf
add
mov
dec
push
xlat
movsl
fwait
sub
mov
call
cmp
rolb
lret
movsl
jg
clc
dec
rolb
aaa
fmulp
ja
imul
ret
mov
fisubl
cmp
mov
hlt
mov
das
xchg
les
xrelease
xor
push
jg
rcll
lea
and
cmc
leave
cmpsl
cltd
dec
add
lret
test
test
xchg
pop
hlt
ret
in
bound
add
mov
xchg
inc
out
add
and
or
fistpll
jge
push
in
sti
pop
shll
enter
add
dec
ret
jbe
adc
sbb
fstpl
add
orl
xchg
and
stc
pop
mov
jg
stc
add
xchg
add
pusha
jne
mov
cmp
lcall
mov
test
pusha
or
or
xchg
pop
pop
outsb
mov
addr16
or
dec
dec
ficoml
add
das
insl
pop
mov
xchg
add
add
push
add
mov
add
in
lock
fldcw
dec
push
inc
pop
insb
sub
push
add
stos
mov
rcll
add
repnz
aaa
cmp
xor
add
add
jbe
test
lret
xor
lods
xor
fisttpll
cli
in
ljmp
dec
sarb
sub
testb
sbb
cmp
cmpl
add
push
mov
inc
fists
pop
add
lret
imul
mov
pop
jle
push
sub
add
sub
or
test
rcll
xchg
add
lcall
sub
push
sub
js
in
sub
ret
mov
ret
mov
aam
cmp
add
add
xchg
add
or
jno
popf
filds
push
cmc
aam
or
mov
add
cmc
xchg
in
xchg
sub
mov
inc
fldl
ds
push
sub
xchg
cld
add
dec
add
std
push
cmp
mov
ret
loop
jle
out
push
adc
sti
adc
push
add
mov
dec
dec
jnp
xchg
sbb
je
cmpsl
dec
roll
add
sub
push
adc
pushl
xor
incb
nop
pushf
in
sub
mov
push
fxch
pop
inc
fdivrl
pop
movsb
aaa
es
fwait
stc
push
jnp
or
xchg
dec
outsl
cmpsb
xchg
add
int3
add
fs
mov
imul
ljmp
or
movsl
push
loopne
add
mov
cmpl
mov
bound
out
hlt
jb
jecxz
push
adc
dec
iret
lret
dec
in
test
add
sbb
adc
mov
add
lods
mov
push
push
fs
add
lret
add
pop
ret
and
add
push
mov
jno
pop
add
adc
add
add
mov
jb
cs
add
ljmp
cmpsb
xor
jmp
movsb
iret
out
mov
out
add
push
sbb
sub
arpl
sbbl
in
mov
mov
sbb
cltd
adc
add
nop
in
mov
and
add
fst
add
add
jb
add
xchg
cmp
jae
adc
cld
nop
imul
xor
out
jp
xor
mov
inc
push
mov
cld
out
xchg
push
repnz
pop
push
and
fadds
xchg
icebp
lods
mov
nop
add
inc
test
sbb
out
mov
push
ret
lret
test
mov
ds
aas
pop
cwtl
jnp
shlb
add
scas
out
mov
add
lea
pop
in
inc
jno
out
fmul
jmp
imul
sbb
pusha
movl
cs
aas
rcl
data16
rcrl
pop
insb
addb
xorb
int3
mov
push
test
and
mov
push
push
jle
int
and
lock
out
fcomip
add
add
ja
mov
mov
bound
divb
sub
mov
jae
push
mov
sub
icebp
add
adc
test
fwait
lds
add
push
jle
jbe
loope
adc
jne
add
dec
jae
gs
dec
sub
ds
sub
add
insl
cmp
add
adc
roll
cmc
adc
loopne
subl
call
add
add
dec
add
fcomps
mov
jno
in
push
push
lahf
cmp
ljmp
pop
push
adc
add
mov
ret
pop
adc
cmp
sbb
sub
cmp
aas
call
sub
in
sbb
aas
stos
add
cltd
and
imul
dec
ss
out
mov
jecxz
cmp
inc
loope
cmc
add
push
out
rcrl
pop
int
add
loop
bound
and
arpl
jg
mov
stos
push
in
add
pop
mov
adc
std
add
jl
rcrl
in
test
test
add
add
cmp
add
add
fwait
or
imul
cltd
aam
aam
mov
mov
sub
cmp
out
cmp
add
out
adc
cmp
pop
add
add
xor
call
dec
js
add
add
roll
jecxz
inc
pop
add
imul
sbb
sti
rorl
dec
cmp
ljmp
add
mov
daa
nop
jnp
imull
int3
add
add
sbb
fildl
cmp
cmp
pop
aad
add
adc
push
add
or
mov
inc
sub
add
sti
mov
sbb
stc
les
loope
xor
jne
mov
mov
mov
add
lock
push
add
arpl
or
fsts
fstl
outsl
sarb
xor
mov
pushf
mov
push
mov
or
je
insl
mov
enter
sub
in
mov
popa
push
cld
jno
jns
outsl
or
loope
cwtl
mov
dec
pop
mov
push
aaa
lcall
add
push
test
xchg
push
adc
inc
adc
add
flds
insl
ret
aam
icebp
push
mov
push
add
sbb
imul
addb
jae
jne
push
adc
cmp
mov
inc
pop
push
sub
sti
aad
cmp
mov
jnp
decl
mov
adc
dec
mov
add
mov
out
scas
fidivrs
dec
push
aaa
add
cmp
aad
xchg
sahf
push
mov
std
movsl
xchg
add
dec
pop
xor
xor
cmp
lea
or
mov
hlt
stos
loope
mov
addr16
add
jae
xor
lea
lret
aam
sbb
add
roll
testb
add
adc
movsl
mov
mov
sub
jno
or
inc
sub
repz
jae
push
add
movsb
das
add
stc
push
mov
outsb
or
mov
fisubs
inc
inc
jb
mul
mov
clc
xor
test
out
out
mov
sub
repz
shr
push
std
rol
lea
push
adc
lock
outsb
jb
and
fsubrs
pop
mov
dec
add
add
mov
mov
roll
test
mov
loopne
leave
es
flds
jb
xchg
push
rcrb
push
jo
mov
adc
shll
jmp
cmp
inc
pop
mov
fdiv
dec
inc
jo
jne
sbbl
fdivrs
cltd
add
push
mov
add
test
and
loopne
pop
in
add
out
mov
adc
loop
add
push
push
dec
fisttpll
or
test
mov
bound
roll
jmp
repnz
testl
jge
add
cmc
out
iret
test
xchg
cmp
int3
loop
xchg
or
rcll
add
loopne
enter
bound
jo
or
gs
hlt
or
rcll
pop
mov
loopne
lret
cltd
dec
xchg
pop
add
add
xor
add
movaps
leave
fmuls
jmp
mov
add
or
jo
fsubrs
mov
or
push
les
pop
cmp
sbb
loop
test
std
mov
adc
adc
cltd
xor
inc
dec
add
icebp
mov
test
mov
add
jl
dec
enter
mov
inc
fs
add
jg
mov
or
stc
xlat
nop
add
add
lret
pop
lret
add
add
pop
sahf
mov
add
insb
dec
push
lds
stos
call
add
sbb
in
popl
mov
jl
mov
add
push
add
loopne
add
sub
cmpsb
popf
mov
or
push
push
or
in
add
add
push
test
adc
nop
jne
add
jge
add
in
je
jecxz
sub
add
sub
ljmp
push
jle
xchg
and
int3
or
dec
dec
pop
adc
sahf
aam
jno
leave
jl
int
adc
xor
xchg
paddsw
inc
xchg
out
jmp
add
add
xchg
dec
ds
mov
sti
jg
mov
jae
jp
cmpsb
sbb
pop
pop
outsl
nop
loop
dec
insl
out
add
daa
cmpsb
adc
mov
scas
inc
icebp
ret
xchg
push
arpl
sub
ret
mov
lret
adc
ljmp
scas
testb
cmp
mov
mov
push
pop
add
das
dec
test
in
gs
xchg
dec
add
sbb
add
jno
fisubs
pop
mov
xor
xor
jl
or
cltd
in
fmuls
jne
fs
pop
nop
aas
push
pusha
mov
cmp
mov
dec
pop
mov
mov
mov
add
rcrl
out
cmp
push
adc
cmp
inc
fs
bswap
sbb
mov
inc
mov
dec
aas
rolb
add
inc
insb
mov
add
cwtl
xorl
add
out
mov
sub
add
in
hlt
mov
sub
xor
iret
add
aam
mov
bound
filds
sub
int3
add
or
and
ret
mov
mov
dec
push
pop
std
in
add
lds
mov
jl
lea
add
pop
adc
sbb
xor
add
add
cwtl
push
add
push
movb
aaa
stos
cmp
sbb
sbb
movsb
ds
mov
push
mov
add
jne
cmp
add
arpl
push
or
xor
daa
mov
sbb
add
jae
into
fwait
aad
pushf
adc
out
add
xchg
test
add
xor
leave
add
dec
adc
mov
add
cmp
pop
push
mov
add
cmp
xor
add
addr16
lahf
gs
mov
filds
sub
je
sub
in
add
cmp
dec
cmc
sbb
fsubrs
sub
lret
es
in
test
xchg
adc
inc
insl
dec
mov
push
or
add
dec
sbb
xchg
repz
cmp
mov
add
pop
add
hlt
mov
data16
mov
cmp
inc
out
sub
add
out
frstor
xchg
dec
push
dec
outsl
arpl
sbb
xchg
pop
mov
inc
cmpsl
mov
movsl
xlat
push
pop
test
and
mov
lcall
add
xchg
add
sbb
outsb
in
add
sbb
pop
pop
or
fdivrs
in
cld
std
in
push
xor
aas
add
call
add
jmp
popf
add
xchg
xlat
inc
es
int3
aad
cmpsb
ret
jne
or
inc
jns
loop
mov
incb
test
lds
sahf
and
dec
dec
add
pop
sbb
pop
and
loopne
shrb
negb
mov
jns
lds
push
xchg
popa
dec
add
xor
cmp
mov
out
mov
add
add
pop
mov
dec
cmpsl
iret
add
in
call
jg
add
xor
add
scas
mov
fcmovne
stc
add
fildll
and
rcrb
xor
mov
shlb
repz
sbbl
test
inc
add
sbb
sti
les
test
arpl
add
sub
inc
movsl
imul
nop
mov
fdivp
mov
cmpsl
mov
lods
cmp
sti
lods
ret
scas
es
add
push
std
add
mov
add
enter
add
add
popa
add
add
push
xchg
sbb
out
sub
jmp
cmp
inc
push
pop
jl
sub
mov
push
rcrl
cmpsb
aas
cli
or
sub
lret
loopne
sub
leave
ja
ret
hlt
loopne
in
outsl
mov
dec
and
pop
stos
in
repz
or
mov
je
mov
pop
ret
out
mov
add
cmpsl
adc
fbld
in
movb
sti
xor
push
and
lahf
jp
xor
out
add
lret
add
mov
rclb
jp
add
or
outsl
add
lods
test
fstpl
pushf
dec
sub
or
mov
mov
lret
pop
mov
cmpb
pop
movsl
faddp
andl
push
push
xor
data16
nop
add
or
loop
bound
push
mov
lret
inc
add
cli
xchg
and
mov
mov
aam
cmp
xor
lahf
pop
in
xchg
xlat
pop
inc
jg
add
mov
sti
sub
rorb
xor
add
das
add
mov
in
jns
inc
fmull
mov
arpl
popa
xchg
sub
cmp
popa
inc
lods
pop
lds
adc
add
enter
stc
sti
pop
std
in
or
xchg
mov
icebp
insl
mov
aad
sbb
das
outsl
iret
jne
ror
jne
in
mov
pop
mov
nop
repz
or
cltd
sub
add
inc
insb
sub
inc
and
leave
inc
add
pop
add
fwait
jg
inc
stc
add
or
pop
mov
or
fwait
or
out
fisubrs
pop
push
add
fsubr
sub
cwtl
add
stc
pushf
sti
inc
mov
inc
movsb
mov
sub
xchg
sub
out
or
cmp
and
mov
add
lea
testb
sub
mov
clc
xor
cmp
ljmp
gs
cmp
add
mov
mov
cwtl
push
ja
add
mov
inc
adc
insb
cs
in
jo
aaa
pop
or
mov
mov
adc
repnz
jo
push
in
or
stos
sbb
movb
cld
scas
stos
in
xor
rcrl
pop
test
push
inc
xor
add
inc
add
adc
testb
imul
mov
xchg
mov
mov
decl
and
jg
mov
and
mov
enter
test
add
ds
or
stc
mov
sbb
add
push
adc
movsl
push
jle
pop
xor
pop
jo
inc
popa
pushf
push
sbb
push
test
cmp
lret
stos
sub
cld
add
sbb
dec
and
cmp
imul
mov
cmp
pusha
cli
cs
sbb
inc
dec
pop
int3
pop
mov
adcb
enter
add
push
and
add
mov
jge
jns
add
or
daa
pop
add
add
add
dec
sub
jb
in
aam
js
pusha
ljmp
fwait
add
cld
pop
inc
and
jb
call
sbb
cmp
dec
push
in
out
jl
ds
add
repnz
dec
stc
fiaddl
mov
xlat
or
dec
fsubrs
out
inc
jecxz
pushw
adc
insb
add
cwtd
test
mov
push
sbb
add
cmp
outsb
arpl
add
loop
add
int3
inc
xchg
adc
clc
pushf
rclb
lods
and
jne
pop
mov
xchg
push
xor
fdivrs
jb
in
jae
outsl
gs
jo
sbb
jb
hlt
scas
sub
sub
shll
inc
inc
leave
test
stc
sub
sahf
ret
pop
ret
pop
aam
add
inc
xchg
cmp
js
je
stos
hlt
lods
cmpsl
pop
je
sbb
mov
clc
rcl
cmpsl
iret
leave
nop
pop
mov
or
xor
adc
lahf
fistps
in
jp
jecxz
mov
into
xchg
in
pop
adc
icebp
add
gs
fiaddl
jmp
and
jb
clc
adc
pop
add
mov
data16
sbb
sub
push
mov
xor
jg
pusha
sbb
js
int3
std
jge
lea
pop
mov
repz
cmpsb
jae
add
lcall
stos
imul
adc
cmp
popa
sbb
fisubrl
add
je
sub
push
pop
add
push
xor
adc
sbb
sahf
ja
outsl
jo
add
lahf
pop
lea
mov
sbb
ret
inc
mov
sbb
push
push
and
add
mov
paddsb
pop
in
icebp
sbb
scas
outsl
jno
data16
adc
mov
popa
pop
adc
mov
add
imul
popl
cli
aad
push
add
out
xor
dec
and
repnz
mov
sbb
into
mov
lea
loope
testb
mov
movb
lods
das
cli
push
inc
add
cmp
add
cmp
dec
dec
pusha
imul
push
iret
notl
loop
xchg
cmp
fisubrl
cmpsl
mov
add
mov
push
add
jno
push
fisubrs
push
adc
pusha
inc
mov
mov
es
sub
xchg
fwait
mov
or
stc
fidivrs
movsb
dec
mov
xorb
sahf
push
stos
nop
cs
xor
scas
scas
sub
stos
int
fisttps
add
js
lahf
jo
testl
mov
cld
xor
mov
scas
or
dec
push
daa
cli
ret
fs
mov
add
dec
adc
stc
mov
ret
pusha
push
adc
iret
cmc
clc
je
roll
into
jmp
cmp
add
gs
insb
ret
fsubs
aas
pop
fidivrs
int
in
jp
in
and
cmpsb
mov
jae
sbbb
mov
sub
or
imul
push
stos
movsb
add
jge
jmp
mov
cmpsb
xchg
mov
jae
fs
sub
int3
add
repz
jg
or
fdivs
insb
dec
dec
push
aam
sub
jo
and
shr
push
xchg
pop
aad
add
jp
adc
ficoms
or
and
add
inc
outsl
push
add
jle
jno
inc
insb
jae
add
aaa
cmp
mov
rorl
fsubrl
mov
xchg
xchg
test
ja
out
out
loop
or
shlb
mov
jge
mov
xchg
xor
jb
mov
add
and
lcall
sub
adc
lods
mov
aad
addr16
add
push
or
cld
sub
add
jbe
das
pushw
mov
lods
adc
imul
add
add
iret
jg
add
scas
add
test
adc
aas
adc
bound
add
mov
lcall
adc
mov
repnz
jl
jae
out
popf
pop
out
into
xor
frndint
cmpb
bound
in
cli
leave
xchg
jno
aas
inc
push
xor
ror
xchg
dec
cli
push
add
add
in
cmp
subl
add
rolb
jmp
jge
mov
xchg
imul
out
and
add
je
and
push
fcomp
int3
repz
rcll
mov
xchg
or
test
aad
ret
add
mov
arpl
bound
push
sbb
arpl
mov
lock
sbb
sub
inc
mov
inc
lcall
int3
jmp
dec
lret
cmp
add
add
add
das
sbb
jg
add
add
add
adc
cmp
add
fisubl
jp
mov
mov
add
test
aad
mov
jl
call
and
lahf
cs
dec
push
add
sub
inc
add
pop
imul
xchg
fnstenv
xchg
jbe
jno
sbb
adc
jno
mov
addr16
enter
iret
and
sub
gs
fsubrl
sahf
and
cs
dec
add
fisubrl
push
sub
add
add
cmp
daa
fidivl
imul
pusha
aad
nop
rclb
add
xorb
insl
bound
xchg
inc
jp
add
loopne
dec
xor
lds
pop
add
nop
stos
cmpsb
pop
fcoms
jae
ret
roll
rcrl
mov
add
sbb
test
inc
sbb
mov
add
push
push
sbb
roll
jmp
fsts
stos
out
add
xor
push
add
int3
and
dec
lcall
jecxz
add
fstl
inc
mov
test
xchg
daa
xchg
nop
jp
xchg
jns
sub
xchg
mov
sbb
add
jge
inc
sub
scas
add
ljmp
lea
or
lock
jbe
pushf
pop
pop
mov
inc
push
dec
rcl
add
adc
add
add
fadd
arpl
cmpsb
adc
out
adc
pop
lods
sub
iretw
cmpsl
cmpsl
movsl
sti
pop
add
add
add
jmp
out
xlat
adc
icebp
testb
imul
dec
mov
push
lcall
fiaddl
add
mov
jl
xchg
cmp
movsl
add
pop
sti
inc
insl
js
mov
dec
add
sahf
push
push
lret
mov
stc
std
and
and
jo
int
xchg
repnz
sub
xor
aas
mov
cmp
loop
and
mov
movsl
add
sbb
xor
ljmp
ja
fstps
mov
pop
mov
and
dec
insl
add
lea
jb
or
cmc
dec
cmp
add
add
scas
or
cmp
mov
cld
push
sub
iret
dec
test
sub
jne
adc
movsb
sub
jp
mov
xor
lea
xchg
mov
add
popa
add
fs
in
mov
cltd
add
sarb
test
arpl
dec
pop
inc
shll
lods
sub
add
add
dec
std
push
sub
add
xor
out
sub
enter
sahf
adc
add
in
shl
dec
int
jo
xor
out
insl
mov
push
out
mov
jmp
movsl
or
dec
jle
lea
inc
ss
insl
mov
mov
les
out
jne
popf
mov
enter
or
cmc
jp
add
mov
inc
sub
push
xor
icebp
imul
in
sahf
add
and
dec
ja
fstps
ficomps
rorl
pop
fiadds
xlat
xlat
add
cmpb
dec
add
xor
cmp
clc
pop
xor
data16
aam
aas
xor
cmpsb
sub
push
pop
xchg
add
push
mov
mov
push
cmp
sbb
sub
add
ror
add
addr16
cli
mov
push
addr16
adc
xchg
cmp
repnz
cmc
movsl
jnp
jle
aaa
mov
xor
mov
es
imul
mov
ds
sbb
mov
stos
or
movsb
jmp
pop
push
jle
stos
sbb
scas
lretw
add
ror
or
xchg
ret
adc
push
call
lcall
mov
mov
lcall
xchg
adc
and
jbe
or
xchg
add
loop
push
lahf
inc
andl
xor
js
mov
scas
dec
mov
xchg
mov
mov
add
push
mov
xor
push
mov
add
testb
and
mov
push
lea
mov
in
xchg
out
imul
test
pop
sbb
push
into
mov
ja
add
cmp
adc
test
add
cld
stos
jno
addr16
lahf
or
push
sbb
dec
add
sbb
lret
mov
cld
aas
ret
adc
xchg
popf
or
pand
mov
outsb
xor
adc
jo
jge
sbb
push
popa
and
mov
push
mov
push
mov
add
out
pop
cmpsl
push
add
cmp
repnz
test
push
mov
add
push
pop
cmp
nop
mov
aas
add
jae
les
mov
add
in
cmpsl
mov
lahf
fisttpll
lret
fwait
lock
sbb
mov
cmpsl
sahf
movsb
mov
outsb
gs
push
cmp
out
pop
jb
fs
pop
cmc
in
orl
dec
fwait
sub
out
inc
pop
iret
jmp
cwtl
sbb
add
mov
aas
add
fs
in
aaa
add
cmp
stos
imul
fsubrs
inc
sbb
add
add
jecxz
sbb
pop
and
sbb
xor
add
add
push
jbe
push
int
jae
add
inc
data16
bound
fcoms
xchg
inc
or
fsubrs
jmp
insl
out
and
icebp
add
add
ret
mov
or
lcall
rorl
fs
sarl
jns
int3
loope
es
adc
add
outsl
daa
xor
ret
and
adc
add
into
incl
ror
push
add
aad
push
insb
fwait
mov
dec
or
add
ja
cli
mov
add
sti
addl
add
aaa
add
sbb
and
sbb
testb
mov
arpl
xor
add
into
jnp
mov
mov
stos
push
inc
sbb
cltd
add
pop
mov
add
add
sti
or
mov
mov
repz
and
out
cwtl
lret
dec
pop
inc
add
fldcw
add
add
data16
push
push
loopne
fsubrp
mov
fwait
shlb
jmp
add
inc
push
lock
lea
add
cmp
or
int3
jne
inc
sub
js
in
and
lcall
outsl
pop
cmc
fsubs
repnz
cli
mov
mov
fs
cmp
or
mov
scas
sahf
sbb
loope
add
add
cwtl
lcall
push
pop
or
adc
add
pop
mov
xor
jl
sub
xchg
add
aaa
filds
xchg
mov
int
movsl
jg
in
dec
test
jb
in
leave
inc
inc
fnstsw
fiaddl
clc
loopne
sub
jge
iret
shll
mov
rclb
add
jg
loop
in
sar
dec
push
cmp
jno
push
cmp
jno
xor
cmp
jle
add
mov
or
pop
add
rolb
add
ss
add
jp
adc
std
cmpsb
stos
dec
add
js
popf
repnz
sbb
lcall
cld
push
popl
imul
ficomps
and
std
add
movsl
mov
add
add
mov
push
add
sub
cmp
sub
inc
popa
pop
push
push
lock
inc
cmp
addr16
les
cltd
and
xchg
pop
pop
test
adc
out
ds
out
mov
fidivrl
add
sub
add
adc
aad
add
test
shll
testl
ds
popa
sbb
adc
cs
mov
push
ds
jb
xchg
xlat
jnp
aaa
jns
pop
add
outsb
cs
js
jge
mov
push
mov
jo
jecxz
add
stos
cmp
add
loope
adc
push
or
sub
push
and
xchg
roll
push
dec
js
mov
cli
jno
mov
lea
pop
cmp
push
cltd
mov
jge
push
andb
cmpsb
jb
mov
cwtl
cwtl
fadd
xor
push
adc
or
add
lret
aas
mov
mov
jo
ds
add
outsb
iret
nop
add
mov
mov
shll
ret
loopne
jmp
jbe
pop
push
addl
xchg
or
cmp
add
cmc
stos
cld
cltd
pop
ret
xor
jo
pop
add
add
add
stos
pop
or
fstps
dec
fidivrs
lcall
jne
lahf
add
or
int3
insb
imul
orl
outsb
add
lds
ficompl
xor
mov
les
xchg
shr
pop
in
icebp
fildl
add
xchg
fisubrl
xchg
add
mov
add
jp
mov
fmull
xlat
mov
into
mov
dec
pop
cltd
inc
cmp
movsl
mov
sub
dec
sbb
stc
mov
inc
mov
inc
push
xchg
fnstsw
sub
sub
adc
push
mov
test
jge
add
shll
ljmp
pop
adc
xor
push
xchg
add
or
or
outsl
filds
jno
stos
imul
and
daa
dec
add
inc
pop
mov
sbb
pop
out
std
mov
add
je
sbb
inc
push
add
add
pop
mov
outsb
not
push
outsl
test
aaa
add
inc
mov
jmp
dec
stos
cmpsb
mov
in
sahf
mov
pop
push
nop
adc
and
pop
aam
add
in
cmp
int
cmp
jp
and
inc
xlat
cmp
mov
fstp
xor
push
and
inc
adc
jg
shr
or
mov
xchg
divl
call
mov
add
inc
loop
fisubs
add
mov
test
hlt
mov
xchg
jns
mov
push
inc
out
popf
cmp
mov
sub
sub
add
int3
add
gs
push
add
call
das
loope
iret
and
fldenv
mov
inc
stos
ret
adc
stos
add
add
cmp
jns
sub
clc
movsb
mov
fiaddl
push
or
xor
mov
jae
sub
fwait
add
mov
mov
sti
cmp
push
sbb
clc
mov
and
add
push
daa
add
sub
add
xor
or
in
mov
xor
dec
sbb
loope
cltd
loop
pop
outsb
xchg
fsubrp
sbb
cmpsb
cmc
sub
pop
push
gs
mov
mov
push
dec
push
orb
repz
mov
cmp
shrb
push
or
lahf
repz
orb
add
ljmp
and
xor
add
add
lds
jo
xor
adc
xor
or
or
push
jle
xor
adc
pop
mull
jo,pt
push
test
cwtl
mov
add
inc
mov
cld
pop
aam
add
jnp
push
add
popa
inc
or
maskmovq
daa
mov
imul
sbb
test
adc
cwtl
test
add
lods
dec
pop
add
insl
dec
xchg
orb
add
mov
add
push
adc
insb
push
sbb
icebp
jbe
rcrb
add
outsl
js
hlt
xor
fsub
and
jb
pop
adcl
ret
aaa
dec
mov
pop
sbb
add
push
enter
sbb
mov
outsl
mov
push
loop
mov
shl
sub
cmp
jle
sub
mov
lcall
cmp
xchg
adc
out
dec
mov
dec
enter
dec
jb
aad
add
jg
adc
add
es
out
popf
fildl
stos
add
push
hlt
or
cmp
pop
add
int
stos
jb
popf
mov
add
add
pushf
jnp
add
int
add
and
sbb
lret
aad
inc
movsb
add
rorb
jmp
addl
shrl
add
xchg
inc
jecxz
lock
xchg
in
dec
adc
mov
jo
add
repz
add
aas
lret
or
add
add
xor
or
pop
roll
data16
push
xor
fcomi
hlt
sub
roll
sub
or
jns
jnp
xor
ljmp
mov
sbb
xchg
pop
jns
int3
imul
loopne
pop
cmp
mov
add
add
pop
lock
pop
bound
insb
and
ss
push
mov
push
sub
insl
into
pusha
fdivrl
add
add
push
add
add
add
fwait
mov
add
lret
mov
lret
or
adc
add
js,pn
xchg
inc
shll
pop
pop
add
sub
and
fsubl
and
mov
pusha
push
adcl
or
in
je
enter
sbb
jbe
xchg
dec
sub
cs
jne
add
cmc
pop
daa
inc
jecxz
push
aas
pop
inc
xchg
dec
cmp
and
and
adc
ja
cli
stos
aas
mov
popa
xor
jnp
push
ja
jecxz
add
cli
inc
fildll
sub
jb
arpl
sti
add
gs
insb
jg
add
mov
test
data16
pop
jns
movsl
push
imul
and
or
lods
mov
cmp
sbb
xor
ds
aad
or
int
sub
sub
orl
mov
jle
push
mov
sbb
xor
mov
jbe
out
or
lcall
std
push
imul
pop
add
dec
shlb
mov
stc
mov
imul
push
sub
sub
xchg
test
inc
mov
xchg
add
push
sti
add
decl
daa
mov
repz
inc
scas
fs
sbb
scas
xchg
mov
add
mov
sbb
add
call
addb
mov
push
mov
outsb
add
mov
or
push
add
fstps
aad
xchg
or
int
jmp
jmp
in
add
add
add
mov
loope
adc
fidivrs
in
aam
sbb
cld
sub
ss
xchg
fmull
add
jl
push
addb
cmpsl
and
iret
add
add
or
flds
adc
pop
xor
je
repz
push
jmp
hlt
test
mov
push
jnp
xchg
in
mov
stos
inc
xor
xor
mov
lods
add
push
inc
inc
jnp
or
sbb
and
inc
sahf
push
roll
xor
sbb
cmp
daa
aaa
jno
mov
inc
mov
popa
lahf
mov
repnz
loop
add
add
or
stc
scas
fcoml
push
cmp
push
cld
inc
dec
dec
dec
out
cmp
xchg
inc
add
mov
add
xchg
fisubl
in
je
adc
in
pop
cmc
jle
add
cmp
fsubrl
fs
mov
aam
mov
test
hlt
jl
or
cmpsl
add
sbb
dec
fdivrl
sub
xor
xchg
arpl
cmp
add
insl
or
mov
cmp
pop
jge
mov
into
cmp
xchg
mov
hlt
add
xlat
add
fldt
add
rolb
or
dec
das
std
test
ss
jmp
out
stos
push
xchg
inc
mov
push
cmp
scas
test
inc
add
add
cmp
es
enter
jb
pop
cs
jbe
add
cmp
outsb
add
ret
dec
aas
lea
and
js
cmp
add
jmp
js
jno,pt
in
pop
sub
lock
hlt
push
std
and
push
xchg
jg
add
add
fcmove
sub
insl
outsb
in
stos
lods
outsb
int3
xchg
cmpsb
stc
mov
lret
lret
pop
popa
imul
frstor
add
imul
stos
jp
incl
jbe
mov
insb
add
inc
dec
or
jle
adc
mov
aaa
outsl
add
lea
push
lret
cmp
xchg
ror
int
scas
adc
add
jne
call
fsub
lea
test
neg
add
sbb
mov
add
dec
gs
scas
in
fidivl
mov
ja
imul
shll
pop
jge
in
mov
push
subb
das
or
std
jo
data16
insl
andl
sbb
add
add
imul
mov
mov
cmp
mov
frstor
loop
add
jns
inc
cmp
out
inc
sti
imul
xchg
adc
sub
pop
xchg
mov
orb
cmp
fadds
sahf
adc
sub
add
push
dec
dec
and
lods
dec
cmp
pop
xchg
mov
add
test
sahf
xlat
mov
adc
mov
pop
adc
push
xchg
add
enter
hlt
add
dec
fcoms
add
lea
mov
mov
adc
ds
jnp
xor
aaa
adc
add
int3
add
std
out
adc
aaa
scas
les
outsb
xlat
pusha
add
push
ss
rcll
fsts
and
orb
dec
out
into
das
and
cmp
ds
add
add
cmp
inc
push
arpl
add
stos
add
fildl
imul
xchg
jecxz
cmp
aas
add
je
xor
add
cmp
out
rcr
lahf
add
loope
into
lcall
or
lods
fld
sbb
adc
add
jae
add
aaa
mov
jbe
les
add
aam
xchg
insb
push
dec
adc
orb
adc
pusha
jns
cmp
add
shlb
movsl
leave
in
add
je
addb
fadds
call
inc
add
int3
rclb
fmuls
jnp
and
pop
cmp
jne
jnp
sbb
ret
mov
lods
fbld
jbe
add
shll
fs
lcall
xlat
sbb
cltd
lods
loopne
shrl
aaa
aas
jne
add
leave
add
add
nop
jge
add
pushf
cli
outsl
testl
xchg
mov
cmp
cld
mov
scas
xchg
std
in
out
mov
add
jge
cmp
add
mov
jb
xlat
fildl
pop
out
push
sahf
and
std
push
add
je
pop
cltd
and
sub
mov
pop
and
xchg
push
arpl
push
scas
stos
into
add
cmp
cwtl
mov
scas
pop
lret
in
add
and
inc
out
jmp
ljmp
push
add
fnstsw
fstpl
push
or
call
pop
mov
and
cmpsb
add
out
jno
in
cs
cli
les
fdivr
add
add
or
aam
mov
in
sbb
cltd
stc
lods
aad
test
hlt
cmp
push
add
mov
lods
sub
adc
in
loop
sub
add
adc
sbb
sbb
ficoml
testl
add
xchg
inc
add
jae
out
add
sbbl
add
jmp
add
or
imul
popa
dec
add
lea
dec
gs
jbe
add
lods
sub
add
dec
int3
add
rol
scas
jmp
fstpl
sub
loop
hlt
aad
sub
mov
iret
call
mov
ds
leave
jge
clc
xchg
add
adc
insl
sbb
sahf
call
imul
mov
mov
lods
nop
hlt
add
roll
mov
mov
paddw
fcmovnb
stc
jo
or
movsb
jbe
cmp
adc
mov
add
mov
testb
add
stc
out
dec
ss
add
xor
movsl
add
into
jns
sar
mov
add
ret
adc
sbb
lea
dec
enter
add
mov
push
es
stos
add
xor
test
adc
es
or
xor
dec
add
jp
test
add
jno
cli
in
imul
add
test
jge
lcall
stos
es
xor
test
xchg
sub
int
mov
pop
in
iret
and
add
adc
pop
or
dec
mov
adc
test
mov
dec
or
and
mov
add
mov
rcrb
adcl
mov
jae
repz
repz
pop
nop
mov
repnz
mov
push
mov
add
or
in
fadds
add
mov
xchg
lods
jp
mov
inc
adc
in
add
test
mov
cmp
mov
lds
add
cltd
sahf
daa
imul
mov
aaa
ret
dec
add
out
fs
xchg
outsb
add
hlt
sbb
hlt
cltd
mov
and
add
xor
dec
push
lcall
push
adc
sahf
sahf
xor
ds
adc
xchg
add
jmp
lea
lock
xor
sete
dec
sbb
xor
add
jmp
add
add
mov
das
repnz
dec
add
imul
push
insb
sar
popa
dec
mov
mov
sub
mov
add
mov
std
loop
push
jle
or
and
cmp
or
pushf
add
mov
mov
je
into
jno
movsb
out
das
inc
push
test
cmp
movsb
ret
std
aad
add
mov
push
cmpsl
xor
fadds
xor
pop
das
sbb
or
mov
jbe
or
inc
pushf
es
and
sub
out
or
inc
or
aaa
imul
mov
mov
sete
jecxz
cli
imul
sar
movb
stos
add
sbb
icebp
jae
scas
sbb
pop
xor
nop
mov
sbb
xchg
fisttpl
loopne
data16
loopne
in
add
adc
xchg
jle
cmp
cmp
mov
les
in
int3
xchg
ss
mov
add
add
movsb
repnz
dec
loope
or
mov
sar
les
mov
and
andb
ljmp
add
int3
popf
aad
pop
jecxz
fmul
mov
push
add
out
sbb
std
or
mov
jnp
test
add
lahf
add
add
dec
mov
add
sub
movsb
jmp
sbb
jae
out
add
aam
es
cmp
aaa
mov
cld
out
push
sbb
add
and
scas
xchg
push
fadds
out
iret
jmp
ficoms
jbe
sbb
mov
push
xchg
clc
stos
subb
loop
mov
add
ss
jnp
jo
add
hlt
out
push
mov
add
push
lods
or
in
or
cmp
mov
jg
repnz
push
in
or
mov
cmpsb
add
or
jg
mov
jo
int
in
scas
roll
cmp
test
in
jle
add
inc
aas
jg
jmp
push
std
add
aam
xchg
mov
pop
mov
sbb
add
add
out
and
add
pop
and
add
sub
add
push
mov
dec
add
add
mov
add
jmp
dec
out
leave
stc
add
out
mov
add
xchg
rcrl
in
ret
inc
fadds
mov
add
jae
add
cmc
bnd
les
push
mov
daa
dec
xor
das
in
roll
mov
loope
add
into
stos
jg
mov
sbb
add
iret
rolb
push
jp
jge
push
xor
out
mov
xorl
rcrl
test
xchg
or
adc
jge
add
add
cmp
xchg
or
popa
dec
push
add
jmp
sub
inc
je
xor
cmp
push
add
fisttps
gs
rorb
or
add
mov
pop
jae
ret
fimull
add
mov
mov
lret
popf
mov
add
push
xor
fcoms
adc
add
test
das
lret
mov
pop
add
mov
adc
fmul
add
cmp
sbb
ret
xor
pop
push
popf
mov
push
iret
xchg
add
rclb
jo
add
mov
sub
test
addr16
insb
mov
mulb
daa
or
jnp
lret
and
sub
xlat
pop
gs
push
div
jg
xor
arpl
test
sti
dec
in
or
push
fists
and
stc
bound
add
std
in
adc
jb
mov
cmpsb
pop
fsubrp
aas
or
and
divb
add
dec
jecxz
push
push
add
push
add
in
add
ret
pusha
icebp
mov
add
add
pop
jbe
popa
jo
iret
test
outsb
lds
adc
loope
sarl
cmp
rol
inc
sahf
outsl
jo
mov
ret
cmpsl
flds
gs
jno
call
jg
jg
lahf
and
loope
mov
sbb
xchg
add
sahf
fcoms
jns
jo
xadd
mov
fists
insl
loope
add
ss
fistpl
cmpsl
cmp
cmc
xchg
ret
xchg
cmp
repz
pop
iret
iret
inc
add
in
clc
jg
push
mov
add
push
rclb
add
push
mov
addr16
les
xchg
mov
sub
fstpl
add
cmp
mov
and
pop
sub
cmpsb
mov
and
ja
or
add
mov
or
popf
lea
jl
stos
pop
rolb
inc
push
mov
std
cltd
add
clc
nop
enter
jle
and
mov
inc
iret
in
adc
mov
cmc
add
inc
push
cltd
sbb
out
lahf
sub
adc
mov
xchg
add
push
xor
dec
fldt
test
add
gs
test
xchg
pop
mov
sarl
ds
add
bound
shll
push
imul
icebp
adc
add
adc
xchg
add
or
add
ret
push
test
lret
sbb
ljmp
pop
and
adc
loop
std
dec
push
mov
fs
inc
xchg
xorl
sub
arpl
or
cmp
or
push
scas
lahf
add
cmpsb
pop
sbb
push
in
add
test
cmpb
pop
aad
sbbl
mov
inc
ret
dec
xchg
fwait
stos
imul
inc
dec
jno
sub
mov
mov
pop
insl
push
cmp
add
ja
dec
addr16
sbb
std
icebp
dec
fistpl
call
fcomip
pop
lea
es
ja
pusha
xor
mov
outsl
sahf
add
mov
ljmp
mov
sub
mov
mov
add
aam
sub
cli
mov
call
je
clc
sahf
sub
mov
inc
pop
add
mov
mov
xchg
lds
enter
push
test
addr16
loope
mov
push
add
out
lcall
add
mov
mov
iret
into
scas
add
pushf
lcall
jno
mov
add
jae
jno
xor
inc
pop
mov
cmpsl
mov
xor
popa
inc
sahf
clc
ltr
add
push
daa
sbb
add
sub
fisttpll
add
or
inc
xchg
arpl
jg
loopne
jne
add
in
leave
adc
mov
das
adc
je
int
insl
mov
jns
ds
daa
gs
sar
mov
cld
xor
loopne
test
mov
mov
and
push
pop
xchg
imul
sbb
add
jle
aam
or
add
mov
std
dec
loop
call
or
or
cmp
add
cld
mov
ljmp
adc
aam
lcall
sub
add
add
iret
add
roll
pop
add
mov
add
testl
add
and
add
push
mov
cld
lea
or
cltd
mov
push
mov
xor
shrb
xchg
sbb
and
fs
dec
mov
add
xchg
jle
imul
dec
inc
shrl
add
js
and
popf
sub
loope
or
mov
fs
fninit
call
or
push
jecxz
xor
inc
in
add
mov
fldl
test
or
gs
int
sbb
test
pusha
inc
cltd
jno
sub
iret
jbe
insb
jne
xor
mov
or
fs
adc
or
mull
cwtl
lret
dec
in
cltd
mov
test
mov
push
dec
mov
mov
dec
mov
icebp
or
xor
mov
pop
jae
jnp
shll
sub
or
lret
pusha
pop
fdivl
add
cli
add
jb
mov
jge
pop
aam
mov
in
add
sub
inc
add
lock
imul
lods
lahf
inc
imul
rcl
mov
add
sti
ret
push
jnp
scas
cmp
cmc
out
int
jb
outsl
imul
ret
push
mov
xor
aaa
aad
sti
and
xchg
jbe
jmp
pushf
pusha
add
push
inc
and
repz
adc
outsb
mov
mov
inc
add
pop
loopne
out
mov
es
roll
cmp
insl
add
add
add
insl
sbb
sbb
add
xlat
sub
push
dec
lcall
jmp
add
dec
scas
fcmovb
mov
fs
int
sbb
dec
sbb
sbb
push
lods
adcl
repnz
mov
fs
into
mov
pop
add
out
sbb
ret
cmp
mov
dec
cmpsb
cmc
shll
jbe
pop
arpl
add
test
lahf
insb
mov
inc
arpl
dec
xchg
adc
cmpsl
mov
sub
mov
xlat
add
imul
push
add
xchg
pop
sbb
ret
cmp
add
push
xchg
jae
pop
test
bound
pop
jle
pop
add
sarl
add
pushf
incl
divl
inc
xchg
icebp
add
mov
ljmp
cmpsl
cld
out
mov
ss
aad
pusha
loopne
fisubrl
lret
add
insl
add
cmp
push
pop
jge
testl
add
fstpl
cmp
int3
mov
ud2
xor
or
fwait
dec
add
sub
pop
in
insb
jg
sub
push
shl
negb
sub
inc
sbb
cmc
adc
add
popf
rcrl
add
add
test
call
andl
loopw
push
test
movsb
sahf
adc
jg
leave
add
add
push
out
cwtl
cmp
ja
jp
in
jecxz
shrb
mov
ljmp
add
mov
iret
xchg
adc
imull
mov
imul
add
scas
xor
add
mov
sbbl
push
rolb
jb
scas
rorb
into
lds
sub
sub
sub
inc
ljmp
fwait
sub
adcb
negl
out
xchg
mov
jb
movsb
shrl
pop
jge
in
push
dec
lahf
mov
add
imul
mov
lret
mov
push
lods
or
fstp
jg
mov
in
add
lahf
mov
add
add
or
and
and
add
or
sbb
movsb
add
jnp,pt
mov
xchg
mov
call
rcrl
cld
std
mov
mov
push
std
mov
ljmp
xchg
int
sarb
cmp
cmc
cmp
fcoml
out
add
shl
lret
add
ss
dec
lea
xor
mov
sub
shll
sbb
or
fmull
pushf
lock
clc
add
lods
xchg
pop
mov
sbb
aaa
dec
and
add
sahf
push
subl
add
rcpps
imul
add
adc
lcall
ret
jb
popl
or
lret
in
dec
push
add
loope
lcall
js
faddl
rol
or
or
jo
fs
xor
add
add
push
add
fstpl
out
and
lds
add
inc
add
mov
faddl
inc
add
push
add
cs
adc
xchg
sub
sarb
dec
fisubl
adc
add
out
ljmp
cmpsb
mov
int3
dec
lods
das
add
sbb
int
add
cmp
add
cmpsl
repz
popa
cmpsl
push
in
sbb
inc
stc
into
icebp
add
inc
and
mov
inc
out
push
lea
mov
mov
jae
jbe
icebp
push
movsl
cmp
xchg
fidivs
add
popa
add
add
lods
test
add
or
dec
mov
mov
les
add
je
lea
xchg
inc
mov
mov
into
inc
fildll
ret
repnz
jecxz
add
mov
push
std
cmp
jne
arpl
subb
sub
sahf
daa
mov
pop
push
mov
shrl
sub
pop
aas
add
mov
add
sub
pop
sbb
in
iret
outsl
push
xor
aas
add
fildl
fs
aam
je
into
xchg
iret
pop
dec
adc
jnp
dec
add
dec
sti
cmpsb
mov
notb
sbb
xor
add
add
mov
psllq
daa
lods
xor
pop
aam
xchg
or
out
mov
clc
push
and
and
mov
add
call
add
cmp
in
enter
add
pop
cmpsb
add
mov
or
add
adc
push
lods
fcmovne
js
mov
mov
outsb
xchg
mov
dec
dec
leave
mov
fidivrs
cmp
and
call
mov
in
stos
aad
scas
mov
pop
add
push
ds
sbb
add
push
sahf
sbb
lds
xor
cmp
test
mov
mov
dec
imul
push
inc
xor
sub
push
xchg
lret
int
in
dec
mov
mov
data16
imul
aas
push
inc
pusha
mov
mov
xchg
xlat
add
outsl
add
pop
mov
add
lret
cmp
les
ss
mov
scas
add
adc
test
dec
or
lcall
xchg
jl
addr16
ss
mov
add
push
add
jg
test
sub
cmp
mov
jmp
out
out
push
jl
cs
add
xchg
fdivs
rcr
cmc
mov
add
dec
jne
add
sbb
sbb
or
dec
lock
xchg
mov
mov
jns
jo
push
dec
test
jbe
xchg
gs
add
add
and
cld
call
add
jl
das
adc
scas
fwait
sbb
loop
ret
jle
imul
dec
pop
mov
stc
add
lods
hlt
cmpsl
adc
adc
in
push
add
int
sbb
fnstcw
mov
out
mov
cmp
add
out
mov
xchg
dec
mov
adc
sbb
sbb
push
rcrb
push
mov
in
cmp
cmpsl
mov
fcoms
mov
dec
add
mov
add
jnp
stos
xor
adc
pop
dec
sub
in
add
xor
call
fdivl
cmp
push
fisttpl
mov
repnz
cmp
mov
xchg
test
mov
inc
insl
adc
loop
mov
add
push
xchg
into
or
push
cmp
fmul
int3
lret
rolb
call
lock
cwtl
add
inc
out
and
cli
xor
add
mov
stc
jne
lret
adc
xchg
push
cmp
enter
in
aas
push
dec
add
xor
add
int3
scas
mov
xchg
iret
cli
add
lret
xchg
inc
xchg
or
fwait
lea
add
aam
cmp
fadd
pop
pop
add
sbb
inc
inc
cs
mov
lret
jl
loop
adc
ljmp
fildl
xor
loope,pn
mov
loop
sub
test
sbb
mov
jbe
arpl
cmp
into
pop
jp
loope
push
adc
sbb
adc
fs
bound
les
sbb
mov
insb
mul
loop
fnsetpm(287
mov
and
add
and
fdiv
sti
sbb
and
xchg
pop
jnp
js
jne
mov
add
pop
mov
sub
lret
push
mov
mov
data16
xchg
sub
jnp
mov
fmull
neg
add
and
xor
xor
xor
stos
cwtl
add
int
test
mov
dec
add
ss
popf
add
mov
mov
jge
sti
add
add
inc
pushf
add
es
jbe
movsb
or
push
mov
into
xchg
aas
add
cmp
mov
daa
push
enter
pushf
inc
gs
add
xor
xchg
cmpsl
sbb
add
mov
test
daa
and
mov
xchg
daa
add
daa
cmp
clc
fiaddl
aaa
sbb
add
outsb
jge
mov
loope
push
inc
add
jae
xchg
icebp
das
lret
pop
add
jg
mov
sub
push
add
out
stos
mov
stos
test
add
aaa
cmc
jge
push
mov
addl
xchg
add
add
mov
add
repz
dec
ficoml
ss
xchg
mov
shll
add
xlat
add
or
inc
pusha
xchg
push
pop
push
xchg
aam
or
add
adc
and
jae
daa
cmpsb
push
cmp
jecxz
mov
out
popa
push
loopne
add
ja
sbbl
mov
popf
insb
insl
mov
mov
jge
hlt
sub
sbb
sbb
jae
fidivrs
push
add
mov
jle
sub
pop
cmovl
adc
pop
aad
add
sarl
add
imul
mov
cmp
dec
cmp
inc
hlt
filds
int3
fsts
shlb
add
iret
sbb
cmp
iret
xor
mov
jb
and
push
cwtl
xor
cmp
aas
sub
push
int3
out
pop
sub
add
mov
mov
add
hlt
fs
add
add
ljmp
mov
xchg
push
xor
add
xchg
add
sti
xor
aam
ss
adc
add
add
nop
add
pop
xor
add
push
dec
mov
jmp
mov
mov
mov
add
xchg
cmpsb
and
scas
or
add
repz
sub
jbe
in
add
inc
sub
lea
inc
add
and
aam
insl
cld
lods
daa
add
mov
add
jne
push
add
imul
cmpsl
add
gs
sbb
pop
and
movsl
jp
xchg
jmp
sbb
mov
rol
lods
sub
aam
jp
loopne
adc
iret
es
adc
mov
ljmp
push
and
jns
js
out
inc
pop
sbb
jbe
sub
call
or
pop
push
pop
fs
and
add
mov
rolb
iret
lods
jp
fisubs
xchg
dec
push
inc
push
mov
jno
jae
aaa
jl
fimull
inc
add
add
mov
sub
cwtl
add
jbe
inc
inc
call
loopne
or
les
mov
pop
xchg
aam
pop
pop
cmp
lret
sub
add
insl
fildl
pop
mov
lret
test
addr16
jo
jno
pop
and
or
add
mov
insl
cmp
add
aas
dec
scas
out
cmpsl
rolb
sbb
bound
xchg
mov
sub
and
pop
sub
jb
add
add
push
or
add
shrb
or
mov
es
add
jge
cs
movsl
push
and
mov
cmp
push
add
fcmovnbe
ret
mov
jecxz
mov
jae
jb
lahf
adc
sbb
cld
push
es
cmc
add
icebp
movsl
add
call
push
cmp
add
pop
outsl
sbb
mov
mov
cmp
push
and
xchg
cmp
xor
add
push
add
xchg
int
add
fidivs
xor
mov
adc
jp
dec
push
add
cmp
js
in
faddl
add
sbb
lock
jb
mov
ss
gs
fisttps
std
lret
loop
sarl
mov
push
jge
inc
add
fmul
add
inc
add
adc
ret
xlat
fsubp
add
add
add
pop
fisttps
dec
cmp
jp
add
mov
sub
test
add
sub
loopne
push
scas
push
xor
push
add
fsubrl
arpl
into
sub
enter
jmp
cs
pop
aaa
add
mov
push
add
insl
push
fbld
mov
int3
in
add
add
dec
sti
mov
jo
pop
mov
add
add
dec
add
mov
out
mov
inc
sar
add
clc
test
sarb
int
add
mov
dec
sahf
pop
adc
ss
add
cmp
add
add
ret
imul
or
leave
jb
mov
mov
lea
pop
insb
loop
ret
jns
and
sub
add
add
aad
imul
lret
sar
popf
add
stos
add
jo
add
insb
inc
and
test
mov
mov
mov
popf
xchg
add
push
lret
xorl
roll
ss
mov
adc
and
jns
xchg
add
lahf
pusha
and
adc
pusha
sub
sub
push
leave
add
mov
pop
add
ret
push
mov
outsl
sub
or
cmp
sub
jmp
jp
sbb
dec
dec
jle
or
push
push
pop
push
mov
and
dec
fcomps
push
add
mov
sbb
jecxz
add
adc
aad
xchg
faddl
stos
mov
out
aas
push
scas
pop
fwait
add
mov
cmpb
adc
inc
xchg
jp
aaa
jle
jnp
add
sub
adc
pop
filds
dec
push
ds
add
add
int
stos
aad
add
loope
add
inc
push
and
mov
data16
sub
pop
mov
das
jae
stos
xor
add
inc
cmpsl
aaa
cmc
jnp
mov
rolb
popa
cmp
sbb
pop
adc
xlat
add
mov
dec
rcr
imul
imul
jl
in
add
leave
and
mov
mov
in
mov
xchg
jns
lret
imul
mov
cmp
pop
frstor
in
fisttps
xchg
xchg
sbb
and
fdecstp
add
push
icebp
fnstsw
ja
out
ja
cmp
fiaddl
maxps
inc
movsl
push
imul
loope
cltd
add
mov
sbb
orl
add
push
xor
pop
add
jo
pop
out
ror
jne
gs
outsl
add
adc
aad
pop
js
in
jae
add
or
insb
add
ss
xorb
pop
lret
lcall
add
imul
add
sahf
mov
jnp
and
aas
add
fistl
xchg
inc
pop
cmp
fninit
push
cmpsl
enter
mov
lret
mov
sahf
mov
xlat
add
cwtl
add
mov
jnp
jge
jmp
pop
mov
imul
mov
add
add
rorl
add
dec
dec
daa
add
xchg
pop
cmpsb
xchg
negb
cmp
ljmp
add
mov
pusha
jp
iret
or
outsl
mov
inc
sub
lods
pop
mov
adc
fistl
xlat
pusha
xor
and
incb
clc
mov
xor
sub
data16
mov
pop
add
sbb
and
sub
adc
cmp
mov
push
xchg
add
jle
push
into
add
insl
mov
dec
aaa
sub
fidivrs
mov
ljmp
lods
add
cli
add
add
jl
scas
idivl
push
mov
xor
mov
fisttps
xlat
arpl
ret
std
xorb
arpl
mov
pop
mov
aam
jae
in
add
dec
and
mov
repnz
jo
sbb
xchg
repz
mov
mov
add
aam
test
inc
xor
dec
scas
inc
add
xchg
cmpsb
push
add
loopne
add
inc
add
in
out
sub
dec
in
push
and
pushf
clc
daa
xor
inc
pop
xchg
lods
out
negb
jne
jbe
stc
add
sbb
push
addr16
imul
add
das
loope
out
fsubr
std
cmp
dec
imul
popfw
xor
bound
inc
test
lds
jbe
test
repnz
push
adc
xor
imul
xchg
add
mov
xlat
mov
adc
sbb
aaa
xchg
insl
lahf
inc
mov
loopne
fistpl
cs
jecxz
add
adc
fldenv
lret
dec
ret
pushf
and
iret
sub
popf
inc
xor
outsb
mov
or
rcll
test
xchg
adc
dec
add
jge
mov
mov
ljmp
out
add
lods
ds
add
add
add
mov
sub
das
movsb
push
je
sub
and
les
push
fiaddl
cmpsb
mov
xchg
mov
les
into
in
add
incb
xorb
pop
in
cmp
sub
fisttpl
add
imul
mov
xchg
sbb
fcoml
test
cmc
data16
mov
gs
hlt
gs
in
std
cmp
aas
add
xchg
mov
adc
adc
pop
sti
sahf
clc
sarb
leave
add
fwait
add
push
cmp
int
mov
dec
push
mov
add
add
mov
mov
idivb
mov
add
sbb
pop
xchg
jbe
push
dec
push
addr16
ljmp
movsl
push
pop
pop
add
inc
sarl
loop
jb
sub
je
insl
lods
popa
mov
icebp
enter
popf
std
push
inc
mov
shll
and
faddl
mov
jp
or
mov
jo
repz
popf
test
adcl
sub
call
in
ret
lock
scas
lock
push
adc
subb
add
dec
or
lods
mov
mov
dec
clc
add
push
fsubl
push
mov
cld
jg
add
sub
shrl
xchg
cmpsb
push
loope
or
push
jl
pop
xlat
xor
sahf
add
xor
add
mov
pop
rol
pop
xchg
scas
subb
test
mov
or
add
mov
or
jle
xchg
push
mov
jns
pop
add
outsl
mov
pop
fs
and
jae
inc
bound
cltd
push
and
inc
adc
ja
imul
pop
int3
jle
sbb
movb
jb
add
inc
repz
or
movsl
and
sbb
jmp
mov
cmp
xor
add
lret
mov
jg
sbb
bound
in
jbe
cmp
gs
adc
ljmp
icebp
sahf
mov
add
bound
cs
push
dec
enter
dec
add
cwtl
data16
add
xor
mov
into
add
add
aad
inc
out
jge
outsl
xchg
ljmp
and
cmp
mov
pop
fisttps
in
add
aad
mov
dec
mov
cmp
add
adc
mov
imul
or
mov
add
sbb
push
pop
bound
je
and
push
jno
out
mov
stc
fiaddl
sbb
push
adcb
pop
imul
adc
mov
xchg
scas
pop
leave
adc
cmp
xchg
dec
rcrl
movsl
loopne
add
or
mov
jmp
lds
or
or
add
or
add
adc
pop
cmpsb
dec
push
adc
add
daa
jb
add
loope
sub
cmpsb
jb
idiv
aam
icebp
add
pop
sbbb
cmp
inc
sarl
inc
movsb
shll
cld
add
adc
sbb
ljmp
into
mov
popa
hlt
cmp
fwait
loop
daa
add
sub
or
add
lret
xor
add
and
out
imul
adc
add
call
movsl
add
inc
cmc
shll
mov
ret
sub
repnz
add
or
sbb
je
add
ljmp
cmp
jne
sbb
add
loop
loopne
xorl
in
cmp
daa
xchg
jg
mov
mov
pop
adc
mov
jecxz
jb
mov
cmpsl
inc
shlb
xchg
xchg
sbb
sbb
jl
out
cmp
lret
jg
or
inc
dec
push
das
nop
adc
es
mov
ret
add
or
loopne
mov
add
insl
aas
cmp
fstps
cmp
add
add
sub
mov
mov
movl
add
push
xor
lret
add
xlat
add
in
jmp
imul
cmp
xchg
aaa
call
ret
aaa
jge
cmp
jp
repz
cmpsb
lret
push
mov
and
stc
shll
sbb
cmc
pop
mov
and
lods
pop
add
test
rorb
aam
int3
imul
aas
or
xchg
fidivl
add
cmp
mov
jo
xchg
mov
gs
fidivl
cli
test
sub
fisttps
or
aad
add
add
movsb
add
fistl
add
fiadds
adc
movsb
add
ljmp
cmp
add
push
lea
lea
mov
adc
push
imul
imul
insl
pusha
lahf
add
mov
sar
add
add
jae
lret
enter
loop
mov
fsubs
je
jmp
hlt
jge
aam
jo
test
cs
test
pop
push
jo
mov
daa
or
mov
push
adc
sbb
insb
mov
rol
add
adc
add
add
cmpsl
add
cli
and
cmp
jno
les
sar
into
xchg
sub
add
add
xlat
jg
stc
pop
popa
mov
repz
or
push
shlb
test
inc
jp
add
sub
mov
xor
or
sub
adc
mov
out
dec
add
add
or
in
xchg
push
and
outsb
sub
add
jg
add
xlat
cmp
adc
mov
mov
push
add
add
aaa
mov
aaa
in
jp
pop
push
dec
add
add
xor
add
inc
inc
add
mov
add
fdiv
icebp
add
push
jae
or
cmp
out
add
mov
fldl
or
xchg
add
sbb
mov
fcoms
cwtl
and
imul
cmc
inc
xchg
add
fiaddl
fiadds
fists
popl
cwtl
andb
sti
jmp
ja
popa
dec
inc
mov
add
imul
popf
xchg
sub
jmp
jp
ret
and
sahf
fwait
xor
ret
out
xchg
push
xchg
add
xchg
ds
xrelease
mov
cmpsb
add
inc
mov
adcl
add
sahf
adc
mov
add
jo
add
pop
push
add
jle
xor
mov
add
lds
gs
sbb
inc
leave
cmp
fildl
cli
dec
or
add
cwtl
mov
loope
add
xor
mov
add
popa
add
repnz
add
add
mov
gs
stos
outsb
iret
xchg
into
adc
inc
cmp
mov
stos
pop
ret
das
popf
shll
sbb
aaa
lods
cmc
mov
push
or
add
pmaxsw
aas
movb
mov
nop
incl
cmc
xor
add
test
inc
push
repnz
mov
push
adc
test
inc
cmp
push
incb
mov
in
jne
loope
retw
loop
shl
pop
mov
inc
in
movb
add
int3
add
push
fwait
xor
jno
and
pop
cli
pop
mov
push
verw
inc
adc
dec
pusha
inc
cltd
add
inc
iret
jo
pushf
add
sbb
jbe
cmpsl
ds
aam
mov
call
fmuls
jmp
lods
mov
sti
cmp
xchg
push
add
idivb
mov
push
cld
mov
add
test
adc
sti
pop
add
in
add
mov
and
popa
cmp
push
xor
add
jmp
and
pop
add
and
mov
pop
jne
daa
xchg
adc
jno
scas
inc
add
in
gs
inc
rolb
testl
cld
test
clc
add
pop
inc
mov
arpl
aaa
dec
jp
add
ljmp
aad
pop
cld
jg
dec
adc
mov
xchg
mov
cmp
in
inc
sub
pop
stc
cli
push
xchg
add
leave
pmullw
mov
movsl
js
add
xor
addr16
push
flds
addb
pop
je
add
fldl
je
adc
enter
inc
push
add
add
mov
cmc
pop
add
xor
mov
mov
jb
cltd
push
mov
and
sbb
jl
cmp
addr16
xchg
sbb
jmp
add
ja
fcomps
loope
mov
mov
add
stos
add
xor
add
ror
jb
pop
stos
xchg
push
sarl
ret
bound
je
mov
add
les
aaa
mov
push
add
adc
cwtl
and
and
fnsave
push
out
lahf
fisttpll
add
and
sahf
aas
sub
sub
and
fiaddl
flds
push
dec
sbb
adc
ret
and
sub
adc
sbb
aam
into
adc
mov
add
add
mov
add
add
movsl
cmp
push
dec
push
dec
push
dec
int
jne
cmc
mov
mov
lods
bound
stc
cld
aad
movb
rolb
pop
push
xor
add
sbb
push
ret
popf
movsb
scas
shrl
xor
jns
dec
ds
out
dec
push
pop
cmp
stos
add
sarl
add
jmp
std
mov
mov
add
outsb
or
fstpl
shr
mov
outsb
cld
fiaddl
aas
cmp
jp
lret
aas
std
dec
mov
movsb
mov
add
jg
hlt
rol
test
jge
mov
in
fldenv
add
add
mov
pushf
pusha
xchg
inc
add
gs
jge
lahf
aas
add
lcall
cmp
sarl
xchg
xchg
push
hlt
fldl
inc
movsb
cld
shll
xor
fs
add
jo
fdivs
fldlg2
add
pop
add
sbb
dec
pop
add
push
arpl
aad
dec
adc
push
mov
data16
and
cmp
add
cmp
cwtl
das
mov
mov
int
leave
rclb
mov
jge
ds
dec
addr16
adc
add
fnsave
jno
add
lds
fsubl
or
push
imul
fsubrs
lea
sbb
jae
js
add
jo
and
adc
push
popa
fiaddl
jnp
xor
out
xchg
sbb
xchg
insl
aaa
mov
add
std
add
cmp
gs
add
add
and
mov
lcall
shlb
push
jno
mov
mov
add
roll
push
sub
xchg
das
lret
mov
push
ljmp
js
add
xchg
mov
lahf
aaa
adc
fdivrs
mov
dec
dec
add
out
mov
and
icebp
adc
pop
repz
push
or
test
rolb
in
pop
or
lahf
add
ret
sbb
push
ret
add
bound
sub
pop
roll
push
cmp
dec
mov
fimull
repnz
pop
add
mov
jns
xlat
add
sbb
out
test
ljmp
das
bound
mov
popa
jle
ljmp
dec
mov
inc
in
cwtl
jmp
sarl
pop
mov
mov
add
ljmp
push
lds
dec
xchg
inc
pop
repnz
xchg
mov
push
jl
cli
cmp
andb
sbb
sti
pop
xchg
pop
sbb
push
fcoml
add
mov
out
dec
inc
cmp
pop
jmp
fwait
cs
dec
add
enter
sbb
mov
mov
push
cmp
repz
pop
sbb
faddl
inc
ss
and
dec
push
mov
test
push
jnp
cltd
nop
fcmove
xchg
mov
mov
push
or
add
mov
lret
stc
mov
int3
pushf
dec
test
pop
mov
xchg
into
je
add
or
mov
fadds
or
lea
cmpsb
fistpll
ret
in
mov
inc
cs
add
test
sbb
add
lret
mov
es
inc
add
mov
xchg
pop
add
add
adc
lods
pop
sti
aas
dec
loop
sub
inc
add
mov
add
mov
sub
or
sub
test
fs
xor
lret
or
adc
lret
mov
arpl
mov
testb
push
jbe
push
in
sahf
push
add
inc
or
test
cld
mov
loop
in
fiaddl
xchg
test
push
xor
and
clc
and
shll
add
fisubs
xchg
add
sbb
cld
push
movsb
subb
je
inc
adc
hlt
push
add
add
jmp
pushf
xor
sub
add
rolb
nop
pop
out
jmp
scas
adc
mov
inc
jb
add
aad
lods
clc
mov
rcrb
in
lret
add
jae
mov
dec
add
mov
ja
xor
mov
add
pop
dec
fimull
xchg
idiv
inc
dec
out
xchg
xor
sub
cmp
fiadds
dec
arpl
cmp
xor
loop
xchg
cmpsl
jl
push
inc
movsb
and
cmpsb
mov
movl
add
sub
fdivs
pop
test
enter
test
gs
xorb
rcll
xchg
push
xchg
mov
rorl
ds
jbe
mov
mov
xor
add
sub
call
stos
fidivl
aad
inc
pop
push
jno
ficoms
sbb
loope
int3
add
lcall
mov
sub
cmp
stos
mov
mov
add
pop
push
mov
mov
gs
add
inc
jno
mov
sbb
subb
lahf
insb
fwait
jnp
int
test
imull
dec
add
out
and
popa
fldenv
xchg
rcrb
stc
xchg
subl
add
cli
int
filds
jno
mov
and
inc
jae
into
inc
add
add
add
xor
repz
xchg
cmp
inc
sub
mov
loopne
add
rorl
cld
adc
push
int3
test
or
ficoml
xor
fwait
mov
add
cmp
add
mov
pop
jecxz
insl
mov
fstp
push
cltd
xchg
xor
mov
fnstcw
and
nop
add
adc
int3
imul
mov
nop
pop
andl
add
add
mov
ds
sti
mov
ss
loopne
jl
lods
xor
xor
inc
sbb
adc
arpl
inc
push
mov
mov
ficomps
xor
and
and
sbb
stos
pop
push
jno
and
pop
sub
lods
addl
dec
xchg
push
pop
aad
mov
hlt
fnstsw
pop
or
or
int
mov
in
pop
pop
insl
cmp
in
pop
xlat
and
add
xchg
sub
outsb
ja
sbb
pop
fisttpl
push
rcrb
dec
push
stc
negl
clc
shll
inc
out
fsubrs
out
iret
push
and
test
adc
pop
daa
loopne
xor
aaa
inc
push
jp
fadds
loop
test
mov
inc
sbb
pop
add
inc
into
jnp
in
lods
add
mov
jo
into
mov
ds
add
aaa
add
jg
mov
js
add
inc
aaa
fiaddl
or
and
das
add
add
fiaddl
add
pop
outsb
add
shlb
leave
scas
push
lret
mov
xor
mov
and
movsb
push
lods
xchg
fisubs
sti
imul
dec
inc
add
add
add
cmc
pusha
adc
arpl
test
mov
loopne
mov
add
inc
inc
test
xchg
fldenv
call
add
pop
cmp
xchg
gs
xchg
lret
push
mov
shlb
add
lods
sub
jge
mov
roll
nop
fs
cmp
add
sub
and
fcmovnu
add
and
out
or
mov
push
add
ja
adc
dec
add
fadds
pop
rorb
enter
add
bound
pop
mov
push
lds
popl
pop
add
test
add
outsl
es
roll
jo
sbb
sbb
stos
ja
or
or
add
mov
sti
cmp
cltd
fiadds
dec
in
imul
jo
xchg
cmp
fcomp
icebp
aad
sbb
call
in
add
jnp
push
pop
push
test
xchg
lret
jns
add
and
es
add
das
repz
mov
imulb
push
in
cmp
add
mov
filds
push
jnp
lret
mov
jl
pop
mov
pop
in
add
lcall
lahf
out
sub
mov
sub
add
sub
out
xchg
int3
add
dec
jl
jge
add
mov
fs
sti
jns
shlb
inc
dec
in
lret
mov
add
xor
test
sti
add
popf
and
push
xor
add
addr16
jnp
ja
mov
cmp
test
lods
mov
adc
stc
cmpsl
das
scas
scas
jae
cmp
xchg
shlb
add
and
xor
sub
in
mov
inc
jno
add
mov
add
rol
loope
out
fstpt
add
divl
add
ds
pause
sub
sti
cmpsl
jno
hlt
enter
into
in
fwait
jge
mov
cs
add
data16
es
add
roll
nop
push
or
ror
fimuls
loop
mov
arpl
hlt
test
inc
adc
add
xlat
sbb
movsl
mov
and
test
sbb
mov
sub
roll
call
jo
jg
xor
inc
cli
mov
add
dec
push
stc
shr
lret
sarl
add
add
add
lock
jae
xchg
mov
mov
add
pop
xor
rcll
push
push
push
mov
rclb
cmc
lock
mov
sbb
push
fnsave
test
ret
mov
and
inc
mov
andl
mov
test
jle
push
add
lret
jmp
lea
lcall
cmpsl
into
add
sub
scas
add
add
cwtl
enter
in
sbb
fsts
cmpsl
mov
pop
dec
xchg
in
add
mov
pop
fidivs
mov
add
and
sub
xchg
jecxz
mov
int
fidivs
movsb
cmp
pop
jl
dec
adc
mov
sbb
cmp
daa
js
hlt
pusha
fimull
jp
cmpsb
inc
pop
mov
sub
std
mov
fiaddl
mov
rclb
push
mov
test
into
movsb
cmp
aad
sub
adc
rolb
add
add
cmpsb
out
test
outsl
add
pop
xchg
push
repz
dec
add
add
inc
add
ljmp
add
adc
shr
dec
call
jmp
add
out
add
dec
mov
and
push
lods
pop
pop
add
xchg
xchg
add
dec
in
scas
dec
dec
mov
or
pop
not
mov
adc
fistl
sbb
je
sbb
add
mov
aad
push
cmpb
xchg
shrb
push
test
adc
dec
add
jle
ljmp
nop
jmp
pop
push
jne
add
mov
pop
mov
add
add
mov
xor
mov
rorb
div
cmp
inc
jno
push
pop
pop
test
fcoms
out
sbb
outsb
gs
loope
lret
iret
inc
insl
lds
test
pop
lcall
push
jnp
scas
jb
jp
mov
and
add
pop
add
mov
add
push
cld
clc
sub
add
fs
in
mov
scas
pop
cmp
out
add
popa
mov
mov
pop
popa
out
ds
sbb
or
pop
sub
jmp
or
mov
pushf
fistpll
repz
jmp
repz
cmp
xchg
jno
sahf
lret
shr
jb
cmp
push
and
push
pop
sub
add
or
xchg
loopne
int3
pop
movsb
mov
pop
dec
cmpsl
mov
jp
sbb
dec
lahf
les
adc
imul
push
mov
adc
xor
pop
jle
rolb
roll
mov
cmp
ret
pop
add
xchg
pop
adc
cmpsb
std
add
mov
dec
clc
add
push
add
dec
adc
add
or
jmp
add
push
inc
add
shrb
xchg
lret
pop
add
ret
dec
inc
mov
xor
fdivrs
shll
push
roll
jg
cmp
enter
xchg
add
in
push
jle
out
sbb
add
jne
dec
cmp
int3
inc
or
lret
push
and
loopne
jmp
lahf
iret
sub
mov
add
xor
aad
add
mov
mov
push
bsr
iret
neg
jmp
stos
dec
pop
jle
pop
add
add
add
pusha
sub
cmp
es
rolb
jp
add
call
imul
sbb
xchg
stos
mov
jb
cmp
mov
mov
xor
add
xchg
mov
mov
add
add
jo
lea
shrl
ret
mov
lcall
movsl
imul
cs
lock
add
sti
add
in
xchg
sbb
add
addl
add
lds
xchg
pop
mov
lds
outsl
push
lds
xchg
mov
add
add
push
add
clc
or
add
scas
into
or
push
aaa
add
mov
lret
and
sub
rolb
add
cmpsb
jecxz
mov
bound
stos
leave
add
jo
mov
test
call
xchg
pop
call
add
outsl
add
ret
insb
add
pop
ja
add
push
roll
loope
leave
incb
mov
outsb
mov
out
ja
clc
loop
add
inc
pushf
dec
jno
mov
mulb
xchg
sub
test
jmp
xor
outsl
lahf
sub
enter
fcmovb
mov
mov
stos
xchg
add
inc
sub
mov
std
clc
sub
insl
fiadds
mov
mov
mov
rclb
loope
lea
sbb
shrb
mov
add
add
in
adc
sbb
in
xor
je
xor
movsl
xor
push
pop
ja
data16
jo
imul
dec
cmp
mov
stos
jmp
std
adc
mov
dec
jbe
fcoml
fildl
aad
sbb
add
aad
mov
xchg
mov
gs
dec
pushf
add
dec
cmp
fisubrs
test
cli
dec
jb
ja
xchg
mov
adc
sub
imul
mov
mov
jle
fmuls
add
adcl
not
or
add
xchg
add
sbbb
bound
add
test
aas
push
mov
xchg
xlat
xor
sub
jg
addr16
cmp
add
or
cmp
push
lds
rcrl
mov
xlat
dec
leave
fisttpll
into
pop
pop
das
dec
stc
inc
movsl
test
lea
addl
cmp
adc
test
mov
inc
insb
ljmp
cmp
ret
sbb
imul
xchg
sbb
pop
mull
push
dec
fchs
lods
add
mov
sub
sub
add
push
add
divps
jb
adc
sbb
pop
out
mov
add
push
add
push
imul
loope
mov
imul
roll
orb
fidivrl
inc
add
ja
lret
push
xor
mov
pop
add
add
dec
add
xchg
mov
rcrb
sbb
add
sub
out
in
ja
sbbl
add
push
mov
adc
test
add
lret
mov
xchg
dec
jle
add
fstpt
add
pop
clc
adc
xor
cmp
gs
xchg
mov
adcl
insl
adc
pop
popf
mov
add
inc
bound
cmp
sub
xchg
sti
jae
mov
pop
add
in
xchg
mov
push
sbb
jno
fwait
add
mov
sbb
dec
add
add
add
cmpsb
arpl
out
outsl
mov
fsubs
lods
scas
adc
fisubl
out
jbe
xchg
les
sub
or
mov
adc
add
push
outsb
inc
push
add
dec
xor
lods
add
add
add
outsb
popf
or
add
sub
js
popa
xchg
les
cs
scas
mov
or
push
loope
lea
jle
inc
sarl
lret
inc
push
pop
str
test
es
cld
out
xor
or
daa
outsb
clc
mov
and
and
out
stos
add
ljmp
lock
fiadds
mov
add
add
icebp
mov
insl
push
add
push
add
inc
dec
fstpt
repnz
stos
imul
mov
jle
add
add
lret
rorb
pop
add
add
cltd
ror
xchg
jmp
pusha
std
mov
rcrb
add
push
hlt
pushl
sbb
jae
mov
jns
mov
mov
in
test
repnz
mov
sbb
add
out
cmpsl
inc
fmulp
fidivrl
cli
mov
sbbb
xor
into
imul
bts
fwait
lds
roll
cmc
mov
leave
pop
sub
pop
mov
adc
xchg
dec
jmp
adc
cwtl
jb
inc
add
sub
add
xchg
mov
mov
add
scas
sti
daa
ret
jp
sti
xchg
mov
sarl
mov
js
jg
mov
mov
push
into
mov
sub
lock
jmp
jg
dec
dec
int
pop
jl
mov
cmp
int3
and
adc
aas
in
pop
add
test
fdiv
add
sub
xchg
dec
inc
adc
cmp
push
sub
xlat
sub
fs
push
dec
test
add
ret
adc
add
inc
push
subl
pop
adc
sub
push
jl
add
mov
cld
add
pop
or
ficoml
sbb
add
stos
add
and
add
add
pop
add
xchg
int
pop
xor
jp
data16
xlat
ljmp
jo
imul
pop
xor
out
jo
push
test
adc
jns
rcrl
bound
sub
fiaddl
xchg
mov
or
outsl
cmpsb
push
dec
xchg
dec
aas
mov
mov
mov
les
das
lret
fsubs
stos
icebp
add
xor
and
test
push
sbb
int
arpl
les
xchg
xor
loope
or
std
and
push
adc
or
push
in
add
outsb
shlb
mov
adc
adc
aad
jp
sub
xor
add
and
cli
or
xor
add
add
sub
add
dec
inc
flds
lret
sbb
add
sub
cmpsb
scas
or
push
popa
dec
xor
cmp
scas
mov
fcmovnu
mov
in
outsb
sbb
xchg
xchg
inc
adc
xchg
add
mov
cld
out
cmp
adc
add
pop
inc
out
xor
ss
pushf
pop
add
cmp
rcrl
inc
jg
lock
add
cwtl
push
xchg
pop
rcrb
add
add
ja
add
inc
and
add
aam
sbb
jecxz,pt
andb
or
mov
mov
cli
test
adc
sbb
call
popa
jae
cmp
sbb
pushl
jbe
push
xchg
out
jle
loope
cwtl
push
adc
add
mov
add
add
jg
sbb
or
dec
jmp
cld
iret
stos
inc
pop
leave
push
inc
shrb
movsl
in
stc
fisubs
sub
mov
test
setle
repz
movsb
push
mov
mov
inc
out
add
sub
sub
stos
or
or
add
and
out
adc
xchg
mov
inc
pop
sub
into
jo
xchg
cmp
jge
jp
jnp
repnz
movsb
adc
lahf
cltd
and
mov
outsl
mulb
scas
movsb
xchg
popf
dec
ja
add
mov
aad
lret
rcl
out
test
fnstsw
inc
fs
xchg
mov
inc
insb
cmp
lea
arpl
or
clc
sbb
adc
mov
add
sbb
insb
adc
pop
outsl
lcall
insb
fisubl
sbb
xor
dec
add
push
xchg
push
les
pop
or
adc
or
or
rolb
insl
add
add
add
sub
mov
adc
inc
sbb
pop
into
pusha
jmp
shll
jno
test
adc
mov
lret
gs
sbb
jecxz
mov
inc
pop
adc
shrb
add
jne
sarl
push
test
pushf
fmulp
xchg
xchg
push
cmp
in
cmc
inc
int
addr16
lret
mov
sub
adc
popa
loop
int3
mov
sub
scas
push
fsubs
jg
dec
sar
ljmp
movsl
add
arpl
int3
in
mov
jb
sahf
jo
pop
add
insb
insb
mov
add
add
popf
add
adc
jb
add
roll
push
mov
incl
adc
inc
inc
and
cmp
cmp
add
cmc
andl
xchg
lahf
xchg
pusha
hlt
jg
mov
mov
fildll
scas
or
add
aad
and
sub
add
ret
xor
in
push
aas
jl
mov
mov
adc
add
xchg
mov
test
addl
jnp
fs
mov
fsubl
xor
dec
movsb
add
aam
testl
push
aad
cmp
inc
jmp
add
xchg
aam
mov
dec
add
xchg
add
adc
mov
enter
fcomps
lret
ja
pop
pop
in
adc
loope
xor
jae
mov
jge
jl
push
movsl
int
ss
lods
and
inc
outsl
lcall
ror
add
add
fisubl
pop
pushf
sub
push
inc
subb
add
add
std
ret
out
sub
add
or
sarl
add
popl
arpl
in
sbb
stos
xor
out
mov
fidivrl
leave
ljmp
push
pop
sub
inc
popa
or
in
std
cmpsl
jg
mov
inc
xor
sbb
in
xor
jbe
das
test
rolb
add
xor
jecxz
in
inc
add
pop
mov
lock
push
add
sbb
add
rcr
add
jg
jae
call
pop
mov
sbb
add
jecxz
stos
lock
std
ljmp
add
loopne
notb
test
and
fldl
add
and
mov
jmp
jnp
mov
add
push
inc
decl
mov
mov
in
test
add
ss
in
xchg
stos
add
andb
xchg
jl
stc
dec
push
rorl
add
jb
in
push
push
pusha
and
add
or
cli
push
adc
lock
mov
cs
icebp
mov
arpl
push
bound
add
mov
xchg
fcom
ret
add
ret
jmp
jecxz
movsb
xchg
mov
cli
fsubrl
add
mov
enter
xor
mov
xchg
arpl
fisttpl
je
stc
add
push
test
pop
jg
push
add
aas
je
movsl
xor
shl
dec
repz
mov
loope
shr
adc
pop
jmp
pop
cld
mov
xchg
movb
xchg
mov
cmp
add
sahf
add
or
adc
jecxz
dec
cmp
sahf
add
add
aam
add
enter
loop
cmp
xchg
jmp
lods
sub
ret
inc
insl
xor
add
mov
add
cmc
push
add
dec
pop
add
add
aaa
xchg
pop
dec
add
or
add
mov
mov
pop
add
mov
jne
shrb
pop
insl
cmp
int3
pop
add
jg
push
add
jo
jns
loope
push
mov
fdivr
das
inc
mov
out
and
and
add
enter
mov
int
add
cmp
adc
inc
fmull
jle
mov
cmpsb
inc
push
inc
daa
lahf
push
add
jo
rcrl
inc
push
mov
xor
test
adc
jle
and
mov
pop
lods
adc
mov
out
sbb
or
add
mov
dec
cltd
cmp
icebp
xor
movsl
xchg
add
lcall
pop
pop
icebp
jb
mov
mov
push
lods
adc
add
dec
cmp
add
in
push
add
adc
lea
add
cmp
xor
or
subb
cld
cmp
popa
sbb
jle
jl
dec
popa
mov
add
jae
roll
sbbb
fistpl
lods
cmp
xchg
bound
xchg
sub
push
fbld
xchg
jns
int
push
stos
sbb
paddw
jns
shlb
sbb
pop
call
xor
nop
cmp
add
mov
add
bound
mov
ret
sub
cwtl
mov
push
aaa
add
add
push
or
outsl
jge
jnp
pop
inc
outsl
sbb
jle
aas
add
repz
test
mov
pop
inc
cltd
adc
popl
fidivl
ficompl
vpor
dec
mov
xor
mov
sbb
xchg
mov
pop
mov
lahf
scas
lds
pop
mov
cli
in
add
stc
in
sbb
mov
lock
adc
inc
or
pop
and
popa
mov
adc
mov
add
sti
lods
mov
cmp
dec
loope
lea
cmp
xor
or
xor
pop
test
add
pop
lea
inc
cmp
ja
add
andl
sub
and
addl
fildll
add
add
pushf
add
in
aam
mov
jmp
sar
in
add
add
and
into
jbe
mov
rcr
push
mov
js
and
scas
ficoms
add
jl
push
lea
fs
adc
cmpsl
add
sub
cli
push
sbb
aas
add
cmpsl
cwtl
loop
add
push
push
add
add
stos
out
xor
cli
sbbb
add
shrb
ds
pop
pop
jecxz
dec
iret
add
rol
xor
fs
cmp
int
push
pushf
add
movsl
rorb
in
xchg
add
add
testb
into
add
adc
fisubl
or
add
add
scas
daa
add
out
fisttps
cmp
out
add
arpl
sub
add
mov
shlb
sbb
xor
rcrb
dec
cmc
iret
mov
add
shll
pop
sub
add
imul
in
nop
mov
mul
shll
loopne
add
sub
xchg
push
add
mull
popa
sbb
add
and
mov
pop
add
out
jp
testl
add
add
fldcw
js
mov
aas
add
test
cs
lods
push
or
insl
add
fdivl
rcll
adc
add
xor
sarl
mov
add
in
sub
cmp
lret
mov
stos
push
add
imul
inc
flds
popa
mov
cmpsb
add
mov
imul
cltd
int
jg
push
jnp
and
mov
roll
add
test
inc
jbe
fcmovnu
mov
lods
mov
sub
cmp
je
cmp
add
xor
inc
clc
mov
mov
mov
inc
xor
add
insl
ja
jp
jmp
add
pop
pusha
add
add
ljmp
add
add
das
sbb
out
and
xor
int
fildll
sbb
popa
inc
cmc
pusha
and
int3
cmc
mov
testl
lock
sub
fnclex
add
add
mov
js
add
repz
sub
add
mov
mov
add
inc
cmpsb
add
or
adc
push
add
jo
cmc
pop
movsb
add
adc
dec
add
dec
add
and
and
incb
insl
add
pop
fmull
icebp
add
xchg
xor
jl
add
cld
stos
pop
or
inc
mov
jne
pushf
cwtl
mov
aad
add
and
jae
adc
mov
mov
xchg
loopne
dec
and
mov
or
adc
in
inc
cmp
add
inc
out
pusha
fdivl
rcl
repnz
mov
dec
fucom
repnz
add
in
cmp
cmp
bound
jle
cltd
out
repz
sub
add
inc
out
insb
popf
add
push
adc
mov
mov
add
test
lock
add
add
add
dec
outsb
add
pop
mov
add
mov
outsb
ja
rorl
sarl
rolb
cmp
nop
decl
push
imul
out
jge
xcrypt-ecb
cmpsl
or
call
cmp
push
mov
out
in
xor
imulb
add
sub
sub
xlat
mov
jp
add
xchg
add
aam
dec
xorb
je
add
lcall
outsl
push
popf
xor
sub
dec
jg
or
insb
inc
lahf
or
faddl
or
adc
push
add
mov
mov
frstor
sbb
aam
sahf
inc
add
mov
aaa
cs
add
add
gs
ja
mov
sub
not
mov
sbb
rolb
jge
cld
jg
add
imul
add
mov
ret
shlb
ljmp
std
and
dec
dec
and
adc
neg
inc
jmp
loopne
jg
out
cmpsb
jge
loopne
stos
sbb
jle
adc
in
clc
cmpsb
aam
or
or
ds
dec
add
lods
jmp
scas
hlt
and
insb
add
repnz
and
xor
cmpsb
pop
sub
pop
xchg
xchg
sbb
sbb
fisubrs
or
lret
or
add
pop
add
push
test
outsb
add
mov
mov
pop
ror
and
jle
add
iret
out
jg
outsb
outsb
xor
shlb
ds
cmp
int3
pop
std
mov
xchg
sbb
stos
cmpsl
add
add
mov
mov
dec
out
or
cwtl
outsb
rorb
test
add
int3
push
daa
lods
popf
mov
fidivl
in
add
shl
loope
stos
jl
pop
rclb
lods
imul
mov
push
jns
add
fiadds
fdivrs
cmp
out
dec
addb
cli
jecxz
sub
jbe
add
lods
adc
aaa
add
mov
repz
fimull
dec
test
mov
jo
push
pop
push
add
enter
inc
cmp
addr16
inc
lcall
test
lds
adc
xchg
add
pop
and
add
push
cmp
sahf
add
sbb
pop
pop
data16
in
cmp
xchg
and
cmp
clc
cmpsl
insb
or
jno
dec
and
aam
sbb
push
mov
out
aam
push
xchg
xor
mov
adcb
repnz
add
lcall
and
mov
mov
repnz
js
jbe
jl
rorb
dec
add
stc
ret
push
add
fisttpl
adc
js
ds
or
jl
sub
je
fwait
roll
repz
sub
lods
mov
push
mov
dec
and
test
add
inc
adcl
mov
xchg
pop
ret
or
xor
jg
dec
dec
lds
mov
out
addb
shr
sub
cmp
inc
or
add
add
aam
movsb
packsswb
ja
scas
xchg
jno
sbb
in
test
pop
clc
pushl
jne
push
cmpsb
sbb
pop
dec
add
pop
gs
int3
push
fcoms
or
xor
aad
inc
mov
cwtl
sbb
movsl
jmp
icebp
lds
xchg
mov
jecxz
iret
add
cmp
cmp
xchg
jp
insb
mov
add
add
mov
sbb
leave
mov
ja
add
xor
add
push
push
add
add
in
lock
push
inc
jge
push
add
aas
add
stc
mov
bound
ret
rolb
jne
in
cmp
ret
test
icebp
or
pop
cmp
lret
add
rorb
add
add
scas
cli
pop
es
sbb
pop
stos
push
dec
scas
es
xor
es
lret
shlb
mov
mov
ret
push
fildl
xchg
push
imul
xor
in
ret
sti
bswap
mov
sbb
lods
add
jo
data16
cld
pusha
or
mov
lods
mov
jb
std
out
push
mov
shll
stos
cli
lret
xor
negl
cmpsb
push
pushf
add
popf
xchg
ret
xchg
add
sbb
sbb
sub
in
fninit
add
aaa
mov
adc
rcll
push
mov
mov
mov
jl
leave
cvtps2pd
xor
add
adc
mov
mov
add
hlt
fdivr
add
mov
or
lret
cmp
mov
sti
clc
jns
add
iret
popf
nop
adc
push
loop
ds
pop
add
lret
icebp
mov
cli
test
add
pop
add
or
mov
push
ds
leave
push
pop
cmp
cwtl
mov
xchg
add
add
mov
imul
data16
add
aaa
cli
push
fwait
add
pop
mov
pop
push
pop
mov
mov
adcl
mov
popa
mov
fists
roll
mov
sbb
enter
add
dec
inc
xchg
jae
in
es
add
inc
int3
into
sub
cmp
addl
xor
adc
adc
push
add
push
lcall
shlb
cmp
add
mov
insb
xor
mov
sub
in
dec
cld
ret
test
cmp
sub
js
or
pop
xor
push
inc
lcall
sahf
pop
sub
mov
icebp
add
scas
cmc
stc
fdivp
adc
ror
jp
repz
loop
cmp
ja
mov
and
out
mov
or
cli
push
cmp
mov
add
sahf
movsb
aad
mov
lret
fmulp
out
dec
push
pop
mov
fidivrl
mov
loopne
sahf
push
sub
and
jns
xchg
mov
into
stos
iret
cmp
adc
inc
mov
loopne
pop
enter
lret
jns
xchg
out
in
insl
mov
lahf
push
mov
negl
pop
sbb
add
or
int3
loope
addr16
push
outsl
loope
filds
enter
cmp
add
xchg
or
mov
and
movb
clc
cwtl
icebp
lahf
test
add
es
lahf
add
imul
loopne
out
verw
mov
add
add
inc
adc
adc
sub
inc
add
mov
pop
inc
dec
stc
movsb
add
loope
scas
bound
xchg
cwtl
fsubrl
mov
movsb
jb
mov
pusha
aas
pop
mov
fxch
loopne
pop
inc
mov
in
dec
add
adc
fsubrl
in
loopne
das
cmc
std
sarb
xchg
cld
jge
xor
test
rclb
add
movsb
stos
dec
arpl
pop
mov
xor
jmp
cmpsl
mov
xlat
mov
and
gs
mov
imul
add
rcrl
popl
sbb
inc
test
xor
pop
cli
mov
xchg
in
push
add
sub
sub
sbb
movsb
stos
les
rcl
mov
jecxz
xchg
mov
fldl
mov
xchg
ret
pop
jae
add
lret
mov
aaa
lds
inc
sti
jnp
add
xor
in
int
or
test
jbe
sub
or
aas
mov
jnp
stos
loop
loope
std
xor
mov
lock
dec
dec
popa
les
jbe
iret
add
or
sub
outsl
dec
nop
fldl
jne
xchg
cmp
adc
test
daa
add
pop
add
lods
jb
stos
icebp
js
pop
pusha
add
cld
mov
leave
test
and
dec
xchg
xchg
pop
pop
aam
add
jg
add
lea
adc
inc
cmp
stos
jge
imul
jp
push
push
stos
lds
mov
jg
in
jo
hlt
inc
add
fdivs
int3
fistps
lret
adc
orl
je
inc
stc
sbb
add
add
add
fidivl
or
test
push
sub
add
aam
adc
enter
mov
or
add
push
ret
push
ficoml
popf
es
sahf
je
add
cs
insl
jmp
sti
add
add
mov
or
test
mov
outsl
mov
jg
xchg
add
jne
subb
mov
jge
in
lret
dec
add
imul
cmp
push
das
add
pop
mov
add
and
jecxz
lret
add
lock
insl
and
xchg
mov
loope
sahf
ljmp
lahf
pusha
push
add
add
fisubs
ror
pop
add
movsb
push
outsb
pop
push
je
mov
lretw
add
xchg
adc
sarl
cmc
xchg
fwait
xchg
std
pop
jle
gs
jae
pushf
jg
cwtl
mov
push
outsb
add
mov
cmp
not
cmp
mov
roll
out
aas
sub
or
xchg
sbb
sbb
cmp
mov
xor
jmp
xchg
sub
fsubs
fdivrs
ljmp
add
sbb
fistps
add
xchg
adc
mov
add
sbb
ret
lret
add
xor
add
mov
push
push
and
popa
mov
add
popf
push
loopne
xchg
divb
jae
pop
hlt
icebp
add
add
mov
xchg
inc
arpl
cmc
jg
mov
repz
aas
add
lahf
mov
add
fsubl
mov
dec
mov
sbb
out
lahf
add
pushf
ljmp
add
rcl
sub
jg
mov
out
sub
add
add
xor
or
add
cmpsb
repnz
ficoml
cwtl
mov
rcl
cld
add
dec
cmp
aad
cmp
add
sbb
loop
filds
loop
inc
in
push
or
repz
popa
mov
stc
in
jb
jecxz
inc
add
mov
int3
or
lahf
add
push
jge
xor
test
leave
pop
out
fldl
fsubrl
mov
or
dec
dec
sub
add
mov
test
dec
xlat
leave
add
loopne
notb
jp
add
xor
int
iret
add
rclb
inc
push
rcll
scas
inc
push
fiadds
add
xor
and
xchg
cld
pop
dec
add
add
cmc
call
mov
into
jno
mov
into
dec
inc
enter
cmp
das
add
add
inc
sub
xor
add
sub
jmp
mov
lret
jae
xchg
stos
nop
add
imul
repz
and
pop
add
dec
popf
fcoms
xor
push
pop
add
or
gs
lock
addb
xchg
add
or
mov
mov
addr16
mov
mov
ljmp
cmpsl
je
add
mov
or
cmc
sbb
cli
enter
mov
pop
xlat
add
pop
cmpsl
insb
test
xor
sub
std
icebp
sub
scas
add
add
loopne
xchg
add
mov
int3
add
lods
mov
add
add
call
ja
push
jmp
inc
gs
dec
jnp
xchg
lds
push
jae
inc
sub
lock
cmp
int
add
sbb
add
push
dec
flds
and
xor
lods
roll
push
push
shlb
cmc
xchg
inc
out
mov
add
sbb
cmp
lret
cs
sub
mov
sub
add
std
add
jo
jecxz
dec
add
pop
add
mov
add
cltd
pop
mov
lods
mov
movsb
sbb
push
pop
push
sahf
ret
inc
push
sub
push
mov
adc
add
dec
cwtl
mov
mov
movb
pop
in
mov
cltd
cltd
jno
sub
add
aam
fwait
add
aam
jp
xor
arpl
add
test
sahf
push
popa
add
fimuls
jp
add
out
mov
jecxz
sbb
ds
adc
sub
clc
sbb
sbb
or
inc
xchg
xor
lret
movsb
xchg
mov
int3
mov
mov
add
test
jge
fwait
dec
outsl
sbb
sub
fs
sar
xchg
jae
sub
dec
add
add
push
jae
xchg
add
push
mov
add
xchg
mov
aaa
xchg
iret
into
add
add
call
test
add
pop
xchg
js
adc
pop
jp
fldt
xchg
sbb
mov
jae
cltd
in
ret
add
add
outsl
loopne
and
cli
fistpll
sbb
jne
fcoms
jp
adc
gs
and
sub
fildl
imul
mov
xor
cs
lahf
pop
xchg
pop
jo
add
int
adc
sub
mov
sarl
jnp
add
jmp
add
add
mov
insl
sub
mov
xchg
lock
inc
jns
insl
add
push
adc
xor
cmc
in
push
fbld
add
sarb
sub
movsb
test
lods
sub
jbe
fmul
add
fsub
ljmp
add
add
fisttpl
xor
adc
movsb
pop
mov
jp
jo
mov
cmp
gs
push
std
xor
mov
cli
fcompl
mov
data16
push
add
sti
mov
pop
inc
je
scas
je
add
fcomps
faddl
jmp
mov
adc
lds
daa
aam
out
inc
fists
mov
jle
mov
js
repz
out
shll
pop
add
pop
add
into
addb
int3
in
add
sbb
or
inc
push
adc
jbe
add
stc
aaa
data16
mov
add
or
jge
popa
pop
fs
mov
dec
arpl
int
xlat
add
fdivrs
sahf
xchg
xor
xor
add
pop
rclb
add
dec
add
sub
cld
jno
fcomp
rol
pop
add
stos
data16
addb
cwtl
and
sbb
add
ret
add
daa
jnp
pop
push
pop
out
sti
cmp
out
fnstenv
cs
add
enter
cmp
mov
shll
fcomp
add
mov
add
sti
lds
mov
xchg
test
pop
adc
std
std
pop
aas
xchg
pop
les
mov
add
pusha
add
cmpsb
enter
jmp
imul
sbb
lock
rcrb
add
mov
sbb
popa
arpl
sub
repz
xor
add
icebp
add
leave
add
mov
cmp
and
ret
jl
fidivl
jne
pop
xchg
int3
in
stos
dec
lods
add
add
or
mov
hlt
xor
loop
repnz
popf
fcmovne
add
mov
inc
aam
sbb
add
adc
sti
stos
fistps
mov
lahf
test
leave
mov
add
dec
sbb
sbb
jns
jo
sub
jle
lea
or
xchg
fdiv
cwtl
enter
mov
int3
and
inc
ficoms
inc
pusha
add
fwait
mov
or
mov
cld
popl
and
cmpsl
es
cmp
mov
jae
pop
dec
add
iret
jp
push
lret
sub
sbb
jmp
xchg
push
out
adc
gs
scas
loopne
mov
add
mov
add
int3
movsb
xchg
add
xor
adc
sub
mov
imul
adc
clc
pop
add
fbld
add
add
out
push
sbb
xchg
stos
fists
add
int
pop
addr16
repz
pop
data16
add
test
xchg
lock
push
pop
pushf
xchg
push
into
int3
out
jne
xor
mov
inc
inc
mov
pushw
lods
ret
adc
leave
popa
add
outsb
adc
jg
repnz
negl
push
add
add
jnp
jmp
insl
add
lret
pusha
imul
js
cmp
out
add
pop
sub
movsb
sti
scas
inc
lcall
xchg
push
insl
push
aaa
pop
jg
cmpsl
cmc
in
int
test
push
ljmp
out
push
sbb
add
nop
mov
add
loopne
out
rcll
pop
stos
xorl
add
cmp
inc
stos
out
add
dec
rorl
mov
add
xchg
xchg
dec
movsb
mov
decb
push
or
repz
xchg
mov
jle
fwait
mov
mov
xchg
out
add
add
add
dec
mov
pop
add
cmp
adc
sbb
jno
iret
or
jne
imul
jp
lods
inc
mov
mov
jns
cmc
sbb
xor
jl
mov
sub
cli
push
rorl
add
mov
add
add
iret
push
dec
aaa
xchg
sahf
arpl
mov
std
movsb
aaa
add
mov
int
nop
add
in
in
mov
ret
pop
in
add
insb
mov
xlat
adc
data16
push
lret
into
or
addl
dec
push
cld
or
je
movsl
hlt
push
ret
push
fwait
add
add
push
orl
out
cmp
cmpsb
add
jns
add
jns
push
xchg
or
add
fucomp
push
mov
cwtl
mov
loope
mov
dec
fistpl
cmp
fsubl
sub
push
pop
add
out
add
push
and
mov
pop
push
shr
add
repz
icebp
cmc
xchg
js
mov
fcmovb
add
stc
imul
rol
test
out
hlt
add
bound
fistpl
push
popf
popf
mov
adc
xchg
xchg
in
sub
push
ss
pusha
add
fmulp
ret
push
int3
add
jb
fcomip
aam
jge
mov
stos
push
xor
fstl
cs
out
adc
scas
push
mull
popa
add
or
push
xorb
or
sbb
cmc
push
add
cmp
mov
imul
sbb
dec
pop
lods
and
add
push
jl
pop
mov
stc
add
push
inc
inc
pusha
dec
mov
rolb
inc
xchg
pop
add
adc
subl
imulb
mov
iret
add
pop
lods
xlat
jecxz
mov
mov
cmp
add
popf
mov
push
mov
std
sub
pushl
add
and
inc
imul
xchg
arpl
push
mov
xchg
jmp
popa
sub
jmp
mov
dec
cltd
mov
sbb
dec
jge
push
cmpsl
mov
cmc
lods
add
add
push
jo
pop
imul
pop
fcoms
add
dec
dec
jae
sti
int
adc
int
push
push
xchg
jmp
add
ja
scas
mulb
lret
mov
jb
xchg
add
sub
ss
jbe
sbb
push
cmp
pop
add
out
aaa
jnp
fs
loopne
sub
or
pop
add
andb
out
sahf
mov
and
add
inc
add
stmxcsr
xor
inc
aad
xchg
jmp
ret
sub
scas
mov
mov
xchg
xchg
add
jo
jg
and
sbb
movsl
add
popa
add
xor
adc
dec
movsb
pop
outsl
mov
jg
add
add
aaa
xor
cmp
push
loope
aas
ds
sbb
add
or
xor
mov
repnz
add
sub
cld
and
sarb
sub
fwait
addr16
add
out
add
mov
xchg
pop
add
add
pop
jnp
jne
push
add
enter
xchg
adc
xchg
cmp
add
and
ficoms
inc
mov
adc
in
nop
into
mov
ficoml
xlat
std
push
jl
lods
ja
push
stos
imul
sub
cmp
sbb
mov
mov
leave
arpl
push
fisubrs
adc
and
xchg
test
inc
add
mov
pop
shrl
stc
rcll
sub
and
loopne
sahf
clc
sbb
movsb
mov
test
cs
and
icebp
inc
dec
xor
jmp
cld
aaa
rol
mov
add
sub
push
lea
xchg
iret
adc
xor
loop
pop
push
add
data16
cltd
dec
js
add
add
and
enter
adc
inc
push
mov
cmp
addr16
push
sub
mov
xor
sti
add
add
jge
fs
adc
pop
add
ficoml
pop
jo
insl
jno
fs
mov
mov
adc
mov
imul
repnz
add
testb
test
mov
cmp
push
stc
fidivrl
je
add
icebp
arpl
aad
sahf
int3
xchg
sarl
and
push
into
imul
jge
das
outsb
add
jno
mov
bound
icebp
imul
sub
or
insb
test
dec
cltd
and
loope
arpl
push
sbb
cmp
and
push
push
addb
fwait
add
mov
pushf
daa
dec
push
pushf
addr16
scas
add
aam
dec
add
flds
add
aad
mov
ret
repz
lahf
das
call
cmc
int3
sahf
movsb
stos
xchg
add
aas
lret
sbb
cmp
jle
ljmp
fadds
add
pop
mov
add
sbb
add
inc
in
negb
lods
xor
imull
popf
sub
iret
or
lret
add
sub
cld
loope
imul
cmp
and
filds
fimull
mov
cs
lods
xchg
sub
push
adc
mov
xchg
push
addb
push
cmc
xor
idivb
jns
jmp
stos
add
addl
in
movsb
mov
add
popa
int3
rolb
leave
mov
adc
add
mov
sub
cmc
push
call
pop
sarb
ds
mov
fiadds
loop
insb
xchg
add
push
add
jbe
add
add
std
pop
mov
dec
gs
lcall
call
add
xchg
mov
mov
xchg
xlat
nop
xor
sub
insb
adc
sbbb
sbb
jns
testl
sbb
insb
aad
iret
dec
xor
in
inc
stos
imul
scas
cmp
pop
add
aas
xchg
add
shll
out
cmpl
cmpsl
add
rcr
shrl
and
push
cmp
xchg
test
dec
pop
pop
sbb
add
cmp
adc
push
push
mov
add
jmp
push
mov
or
repz
sub
in
int3
adc
add
add
dec
jnp
int
dec
xchg
fcmovb
outsl
mov
mov
push
sbb
or
aaa
jb
test
xor
pop
mov
push
repz
add
rolb
cmp
xchg
add
mov
add
fstps
xchg
mov
jb
test
add
aaa
mov
push
xchg
jmp
jae
in
and
add
or
jmp
bound
pop
jg
scas
out
mov
add
in
xchg
cmp
movsb
fwait
loopne
sbb
add
dec
xor
sahf
jno
or
fs
add
add
add
repnz
jecxz
jmp
int3
stos
out
mov
jno
dec
in
int
cmp
sbb
arpl
in
stos
ret
aas
lahf
inc
stos
add
cmpsl
pop
pusha
add
cwtl
push
pop
ror
bound
jns
dec
pop
popf
int3
add
test
fs
in
add
pop
inc
pop
xor
jge
pop
pop
or
push
mov
mov
pop
xchg
add
or
dec
dec
das
or
add
dec
sbb
or
xor
test
inc
add
movsl
das
mov
clc
shll
filds
inc
jge
std
ljmp
mov
or
fs
andb
sub
add
pop
dec
in
add
ret
imul
fs
pop
xor
add
xchg
nop
inc
fdivr
pushf
insb
add
out
add
ret
fadds
repz
pop
add
or
repnz
lods
dec
inc
push
mov
jnp
stc
and
ljmp
sub
add
or
sbb
pushf
data16
rcll
sti
or
push
sti
pop
ficomps
popf
je
sahf
add
bound
jo
inc
pop
sbb
out
pop
adc
fsubr
std
jb
jb
fcmovne
and
push
xor
aam
es
add
or
add
das
sub
add
bound
out
cmp
mov
or
inc
jae
repnz
add
stos
xor
mov
cltd
dec
add
add
adc
add
inc
imul
fisubrs
add
call
shll
dec
jb
add
add
std
sti
jns
imul
enter
aaa
cmp
mov
pusha
jnp
add
test
mov
leave
add
iret
dec
cld
add
dec
add
clc
mov
int
add
add
stos
mov
fbstp
inc
inc
adc
add
add
adc
mov
into
fnstcw
lock
cmpsb
cmp
or
inc
outsb
lahf
lock
int
lahf
mov
add
test
add
subb
add
adc
push
in
out
jns
ret
sub
fs
lock
add
stos
dec
jb
repnz
in
mov
add
inc
inc
fs
cltd
cmp
pop
repnz
sub
pop
cmp
test
dec
je
mov
test
jmp
push
jmp
jge
push
dec
sbb
mov
roll
add
mov
jle
xor
and
mov
jp
dec
mov
aaa
inc
out
dec
mov
jle
add
xchg
push
je
push
arpl
int
out
mov
inc
add
mov
scas
xchg
ret
loope
data16
cld
add
push
fdivrl
les
xchg
push
mov
stc
add
stc
fcmovu
push
fcmovnu
xchg
add
jo
ja
pop
sub
add
test
jb
add
adc
ret
lods
jg
push
fs
jmp
jle
fiaddl
lds
daa
adc
lea
or
stos
pop
pop
add
loopne
inc
add
jle
cmpsl
out
mov
test
adc
insl
inc
cmp
jae
mov
cs
ljmp
pop
pop
push
push
xchg
mov
xlat
pop
add
mov
movb
popf
push
arpl
lds
or
xchg
std
fnstenv
add
pushf
or
mov
adc
call
or
bound
add
add
mov
cmp
fwait
mov
push
enter
add
dec
xchg
mov
es
rolb
mov
outsl
stc
jp
add
ret
add
xchg
test
sub
int3
or
add
xor
je
xor
mov
pop
mov
testl
mov
jg
push
test
add
ja
and
add
jb
out
sub
movsb
and
add
mov
add
add
pushf
movb
lea
or
out
cmc
sbb
shlb
jnp
mov
int3
add
pop
xchg
aaa
xor
push
add
xor
ja
add
stos
out
xchg
sbb
cmp
movsl
inc
add
add
in
ret
dec
ljmp
jmp
incb
out
add
jecxz
call
xor
add
rolb
sbb
pop
imul
clc
and
pop
xlat
fildll
jmp
in
test
jl
jno
in
nop
nop
jns
in
loope
push
push
mov
fstps
insl
xchg
pop
cmp
movsl
cltd
cmp
dec
cmpsl
cmp
dec
add
add
add
bound
push
add
adc
add
adc
pop
cli
negl
loop
pop
frstor
add
fsubrs
dec
add
lods
add
dec
mov
push
push
push
xor
add
es
mov
pop
add
add
add
outsl
add
add
ja
cmc
xor
xchg
and
call
sbb
add
xlat
add
xchg
mov
dec
mov
and
in
mov
call
adc
sbbb
add
and
add
not
add
test
loope
mov
add
mov
add
fmul
flds
pop
or
push
pop
ret
das
add
shl
filds
xchg
repnz
and
add
je
hlt
add
and
pop
cmp
fidivrs
add
ret
cmp
mov
sbb
hlt
and
stos
add
pop
adc
and
sbb
mov
leave
adcb
cmp
fmul
js
popf
adc
cmp
cs
jge
sbb
jecxz
add
push
fstl
xchg
pushf
enter
cld
scas
test
pop
dec
mov
pusha
pushf
pop
aas
call
sub
mov
loop
dec
ret
lret
add
cmpsl
mov
xor
push
xchg
lahf
mov
xor
jno
and
add
stos
les
leave
xchg
filds
push
arpl
out
push
lock
icebp
xchg
push
out
mov
fs
pop
lea
lret
mov
inc
pop
sub
lret
cmp
or
repz
cmp
adc
cli
inc
or
faddl
add
fiaddl
arpl
add
or
mov
aam
ret
push
mov
pop
cltd
jnp
adc
rcll
sub
dec
addr16
add
add
arpl
jae
jo
stos
jmp
jae
pushf
sahf
add
fstpt
movsl
sub
out
mov
mov
lds
mov
cmpb
xchg
add
je
mov
fwait
add
mov
xchg
inc
mov
or
mov
out
int3
add
in
in
fcmovnu
es
pop
adc
add
inc
and
addb
add
add
jmp
cmp
add
fmuls
stc
jp
repz
fcmovne
adc
inc
lods
jo
into
inc
dec
mov
xor
stos
scas
fdivrl
mov
call
loope
outsl
push
and
mov
dec
xchg
je
pop
and
add
mov
jae
test
repz
lret
bound
sbb
jns
gs
gs
pop
out
testb
add
clc
or
mov
shrb
adc
in
sti
push
add
pop
mov
cmpsl
mov
test
mov
insl
fmull
add
test
test
push
push
mov
and
add
add
insb
jae
push
hlt
jnp
xchg
pop
add
add
lods
add
pop
in
aam
lret
pop
mov
add
pop
lcall
cwtl
pusha
mov
lds
adc
xlat
dec
add
pushf
or
cmpsb
add
sbb
or
jg
adc
outsl
pop
xor
dec
jne
mov
stos
sub
insb
cli
xor
xchg
add
aas
nop
dec
jp
or
and
movsl
add
cmpsl
andb
mov
mov
fimull
xor
mov
add
test
add
sub
insl
pop
sbb
sbb
loop
mov
and
jl
mov
lods
mov
outsb
sub
ss
add
add
dec
jg
and
and
mov
subb
cld
add
ss
add
pop
lds
add
push
call
sub
cld
addl
adc
dec
add
jbe
sub
and
xor
adc
or
hlt
sub
out
gs
sub
xchg
lret
sbb
data16
sbb
jle
xor
in
enter
sbb
sub
lods
add
jge
cmp
jno
rolb
pop
add
int3
inc
add
add
add
scas
daa
cmp
cmp
pop
cmpsb
push
out
int
xchg
mov
mov
enter
int3
stc
push
xchg
cmc
mov
mov
add
add
pop
pop
push
imul
add
arpl
out
nop
pusha
inc
add
test
sub
xor
mov
inc
cld
aam
sub
pop
and
int
subl
push
xor
add
add
cmp
ss
mov
xor
pusha
ljmp
add
sub
sahf
add
push
mov
gs
add
into
lcall
in
pop
sbb
push
pop
sbb
fbstp
out
cmp
mov
fldt
popa
fidivrl
add
and
add
push
stos
add
inc
pop
out
add
in
and
add
adc
mov
push
insb
cld
mov
mov
lods
dec
sub
testl
es
arpl
outsb
add
mov
and
dec
sub
dec
and
push
addl
jmp
inc
add
lods
lods
xorl
jp
add
fldl
jl
movsb
cld
xchg
cli
mov
inc
mov
jg
jmp
sub
xor
jno
aas
movsl
adc
stos
fwait
int
add
pop
inc
iret
shlb
cmp
fisttpl
inc
xor
add
addl
mov
test
xlat
sti
nop
cli
cld
adc
add
mov
sub
scas
xchg
cmp
shll
inc
mov
nop
pop
push
mov
inc
popa
push
dec
inc
cmp
fsubr
mov
lret
aas
stos
sbb
leave
pop
in
addl
call
pop
mov
ljmp
add
dec
sahf
icebp
sub
add
xor
stc
mov
rcr
aas
push
outsl
add
mov
aaa
popa
fiaddl
rsqrtps
ljmp
xchg
add
aad
cld
adc
sbb
pop
mov
inc
xchg
movsl
dec
add
pop
mov
cld
mov
into
sahf
pushf
add
push
xor
mov
adc
je
cld
push
add
stos
shlb
hlt
add
jg
push
outsl
and
mov
add
std
add
add
add
sbb
mov
mov
dec
div
and
pop
or
sbb
adcb
es
mov
mov
mov
shll
push
mov
cmp
add
xor
aas
popa
adcl
fiadds
lods
decl
sub
add
mov
add
xorl
dec
scas
ret
lcall
add
add
push
sbb
push
stc
cmpsb
adc
cltd
pop
std
cmp
pushf
inc
sbbl
sub
cmp
add
cmpsl
xor
je
xlat
lods
add
mov
in
jns
inc
filds
dec
add
add
xor
sub
and
nop
push
iret
out
int3
sub
movsb
dec
mov
mov
add
fdiv
fucomi
add
sub
xchg
and
pop
cmp
shlb
pop
xchg
test
roll
scas
insb
and
test
mov
mov
lret
aas
sbb
add
inc
push
movntps
add
addr16
fs
sbb
jmp
rolb
andl
and
push
dec
mov
mov
mov
insl
out
jnp
and
lret
cmp
imul
add
mov
into
and
jmp
aam
jae
mov
mov
push
dec
mov
adc
jne
call
add
dec
inc
rorl
mov
in
fdivrs
xchg
xor
dec
mov
mov
jno
inc
iret
push
dec
jne
call
fmul
testb
test
hlt
sti
inc
aam
mov
xor
xchg
inc
lcall
add
lret
sbb
mov
pop
or
xchg
outsl
push
or
or
aaa
sbb
setg
flds
mov
cmp
stc
sub
dec
fimuls
pop
cli
scas
testl
jp
adc
xor
pop
aas
mov
sbb
les
fwait
lds
lds
sub
fcmove
call
cltd
add
add
movsl
mov
js
and
test
jg
add
adc
add
push
cwtl
inc
pop
fdivp
mov
jge
mov
dec
mov
jle
mov
rcll
push
popa
sarl
in
cld
sahf
push
daa
xchg
push
add
lods
add
fs
movsb
jp
mov
or
cmp
add
insl
inc
call
in
dec
cmc
cmp
test
add
mov
push
add
add
dec
aaa
adc
shl
sbb
sub
dec
test
xchg
or
insl
imul
ja
in
cmp
mov
mov
inc
jb
in
push
out
hlt
fistpll
add
pop
add
cmpsl
add
dec
mov
add
xchg
xchg
xchg
leave
test
in
pop
inc
cmp
mov
mov
movsb
jb
inc
add
sbb
icebp
dec
push
arpl
out
cmpsl
sbb
add
sbb
icebp
sahf
jge
mov
outsb
add
sbb
add
jno
add
outsb
aas
cmp
and
add
xor
bound
xchg
push
stc
sub
test
cmpsb
xchg
mov
xor
adc
testl
add
add
sbbb
and
test
push
icebp
mov
mov
idivb
stos
jle
ss
add
xchg
push
inc
repnz
fidivrs
movsb
adc
inc
insl
sbb
add
lret
sbb
int3
and
ljmp
jg
push
fstpt
add
cmp
push
add
add
sub
mov
inc
stc
add
cld
mov
sbb
idiv
mov
add
stos
aad
insl
out
adc
or
jp
adc
push
mov
sbb
lods
add
daa
push
sub
jle
imul
stos
or
add
and
in
add
ss
add
mov
dec
mov
imul
scas
clc
subl
rcrb
pop
in
sbb
cmpsl
and
mov
iret
xchg
shrl
and
add
inc
add
xchg
arpl
xchg
lods
sbb
rolb
imul
push
jmp
add
gs
add
mov
ret
add
mov
cli
add
hlt
lds
jge
fiaddl
add
inc
mov
add
inc
adc
outsl
inc
rclb
fstpt
sti
mov
aam
mov
lahf
rorl
pushf
add
or
add
mov
cmp
xorl
aad
pushf
enter
out
movsl
call
ss
xor
push
mov
pop
aam
fs
insl
shrl
fiaddl
add
stc
popa
and
adc
and
pop
sub
mov
lock
xor
or
mov
and
add
fwait
movsl
and
pop
add
mov
in
imul
push
mov
add
ret
ds
sarl
aaa
and
sbb
jns
lock
cmpsb
data16
in
inc
push
dec
jne
lret
cmpsb
or
pusha
idivb
sahf
dec
icebp
lds
add
sub
cwtl
pop
addr16
add
push
movb
sub
loopne
sti
fxch
testl
or
jp
icebp
iret
imul
jmp
dec
data16
ficoml
int
dec
add
add
jmp
into
into
lcall
test
xchg
jae
lods
popf
adc
pop
sub
sbb
out
jb
sub
add
pop
inc
fdivp
imul
loopne
in
pop
mov
jo
ss
adc
mov
pop
sub
mov
dec
js
lret
add
imul
xchg
xor
loop
xor
movsl
push
addr16
icebp
mov
fisttpll
xor
inc
inc
daa
add
jle
int
adc
pop
jns
cmpsl
jne
scas
sbb
lds
les
add
mov
push
cmp
popa
add
cmp
jp
add
decl
mov
add
mov
mov
pop
test
sahf
xlat
push
int3
adc
add
add
mov
negl
addl
lea
adc
lods
add
rcrb
push
cltd
clc
or
cmc
test
cmpsb
mov
fcmovbe
jp
jge
gs
mov
cli
add
add
insb
add
str
leave
int3
push
sub
lret
sbb
push
mov
movsl
mov
inc
fadds
cmp
cltd
shr
mov
lret
test
stc
loop
mov
jns
xchg
subb
imul
insb
call
arpl
and
call
jge
fbld
adc
add
add
sbb
jmp
dec
insl
mov
pop
iret
push
outsb
and
aaa
add
lret
jge
adc
xchg
pop
xchg
aas
jb
jb
call
cmpb
push
mov
adc
add
push
ja
add
cwtl
xor
sarl
adc
in
jo
rolb
add
nop
arpl
and
push
inc
or
dec
mov
add
add
sub
add
or
daa
das
or
rclb
xor
add
adc
inc
fildll
or
add
dec
mov
cmp
arpl
push
sarb
adc
add
lcall
mov
pop
adc
inc
and
push
sub
adc
rdtsc
add
cmc
add
lds
pop
leave
add
mov
lahf
cltd
addb
jmp
test
sbb
fwait
or
mov
mov
add
or
clc
lock
pop
adc
into
fldt
xor
add
mov
fstp
cmp
mov
test
mov
orl
cli
add
jmp
icebp
cmp
inc
xchg
push
push
cmpsb
dec
loope
or
fwait
mov
int3
xchg
sub
sbb
add
mov
add
pop
or
add
shlb
jo
enterw
stos
add
sarb
jmp
push
inc
push
nop
adc
push
dec
test
mov
scas
mov
xor
and
add
negl
nop
sbb
pop
push
insb
insb
and
push
adc
or
loop
and
aam
push
fistl
add
cli
incl
jo
jl
icebp
aad
popl
iret
cmc
sbb
inc
outsb
gs
add
adc
inc
or
jle
adc
notb
pop
aas
out
test
add
mov
add
in
add
sbbl
add
jno
add
fld
outsb
repz
fs
add
xchg
jle
and
mov
mov
stos
add
add
add
popf
cwtl
adc
fdiv
jl
call
push
repnz
jp
je
push
lret
dec
add
pop
inc
arpl
and
add
lcall
scas
cmp
pusha
insl
aaa
add
pop
movsl
xchg
aad
sarb
rclb
add
push
mov
mov
xchg
daa
lods
decb
dec
stos
jecxz
or
jl
fcompl
loopne
pop
xchg
in
movsl
in
or
mov
xlat
jge
popa
fildl
movsl
xchg
incb
jno
orb
add
pop
adc
inc
jbe
icebp
add
js
jns
add
movsb
ja
add
mov
test
sub
mov
add
sahf
add
cmpl
mov
jno
enter
lock
or
xchg
cmc
push
inc
dec
mov
jo
fcmovb
add
mov
ss
filds
xor
cmp
scas
jp
adc
mov
popl
mov
inc
roll
cmp
pop
push
add
testb
sub
sahf
mov
inc
pop
push
aam
pop
add
int
push
add
xlat
inc
sbb
fdivl
nopl
xor
add
jae
cmp
push
fcomps
jg
aaa
sti
push
xorb
add
mov
lods
add
sub
cmp
inc
call
add
je
sub
xchg
push
arpl
out
cmpsb
arpl
pop
fwait
cmp
sub
mov
cld
lock
lds
push
cwtl
dec
sbb
xor
push
add
nop
xchg
dec
lret
mov
mov
inc
outsb
mov
or
jne
sub
in
mov
iret
add
add
push
sbb
mov
stc
jnp
movb
gs
iret
mov
xchg
in
push
into
or
dec
into
xor
stos
xchg
negl
mov
push
xor
sub
add
and
and
mov
jnp
pop
or
lock
flds
movsl
xchg
add
pop
add
repnz
les
sub
mov
inc
xor
stos
aas
stos
add
jae
add
leave
dec
adc
or
cmp
adc
std
aaa
jp
xchg
inc
jae
shll
leave
mov
cld
add
les
stos
add
add
sub
inc
pop
dec
cmc
dec
pop
mov
mov
stos
pop
pop
sub
push
or
push
sub
pop
or
movsl
cmp
mov
es
add
dec
data16
cld
loop
and
mov
mov
pop
push
iret
jmp
sbb
add
push
in
fldl
mov
nop
mov
cmp
jno
cld
mov
fildl
xor
mov
add
mov
or
add
shl
decl
lahf
ja
add
xor
dec
rcrb
mov
xchg
arpl
punpckhdq
ljmp
and
enter
out
add
push
jle
pusha
scas
cmc
movsl
push
xchg
das
int
xchg
testl
dec
add
aam
aad
in
sarb
mov
and
push
jb
add
add
mov
mov
mov
loopne
dec
jno
add
pop
mov
push
cs
ret
jae
movsl
and
popa
mov
mov
pop
xor
shll
ds
out
fldenv
stc
jmp
aaa
add
pop
add
das
in
mov
scas
push
push
test
lock
std
test
mov
pop
pop
push
outsb
cs
add
mov
add
adc
fs
mov
ljmp
andb
mov
xor
hlt
add
jbe
inc
iret
movb
das
aaa
jg
ret
aad
ficomps
jle
dec
push
loop
add
mov
fisttps
dec
je
cmpsb
aam
stos
add
mov
xchg
imul
cmc
inc
jae
and
dec
mov
add
dec
dec
shrl
aas
xchg
mov
in
mov
sub
jecxz
xchg
loopne
add
lods
fildl
scas
shlb
adc
hlt
or
ss
outsl
shlb
in
dec
fisttpll
xchg
or
lret
je
dec
xchg
mov
mov
cmp
mov
jge
jge
aaa
xor
jno
or
dec
pop
in
in
mov
roll
add
in
aas
inc
ja
enter
pop
scas
mov
enter
aad
cmpsl
mov
jno
nop
cmp
jmp
cltd
cmp
adc
daa
dec
add
icebp
jle
into
push
into
movsl
ret
les
imul
pop
xor
shll
repz
sbb
loopne
and
adc
sahf
scas
add
adc
mov
or
rorl
repz
add
shlb
adc
andb
xor
add
sub
stos
loope
add
push
cmp
cs
outsb
dec
ss
sbb
es
xor
ljmp
add
lret
push
jne
test
cltd
pop
repnz
add
ja
les
in
xchg
loope
cs
add
fxch
outsb
cld
add
push
dec
into
inc
mov
ficompl
test
es
mov
add
popf
sub
scas
push
in
add
mov
ret
cmp
imul
popf
xor
repnz
dec
movsl
add
loope
sub
daa
add
xchg
jmp
push
dec
dec
and
fs
fdivs
or
fildl
xlat
ja
pop
mov
mov
adcl
xor
and
cmp
add
xchg
mov
xor
daa
adc
jbe
push
sbb
add
sti
push
mov
xor
add
push
pop
cmp
out
xlat
xor
mov
arpl
adc
pop
sti
xchg
xor
mov
xchg
xchg
xchg
fdivr
cmpsb
cmpsl
sub
fimull
leave
mov
js
mov
lret
aam
and
lahf
add
dec
repz
rcr
fisttps
jo
cmp
int
inc
pusha
loopne
clc
decl
add
xchg
push
and
or
add
sbb
sub
insb
push
add
or
mov
xchg
mov
pop
flds
sub
mov
pop
scas
stos
add
sarl
insl
pop
out
push
dec
adc
adc
inc
add
add
sbb
sub
stos
mov
mov
mov
add
adc
mov
dec
mov
adc
mov
in
stc
not
iret
test
add
cmpsb
out
add
and
ss
add
add
fsts
pop
ret
add
jb
popa
add
clc
add
dec
int3
add
dec
adc
mov
sbb
add
pop
and
orb
sub
cld
fstl
mov
in
mov
add
popa
or
xor
aad
mov
fwait
mov
cmpsl
mov
scas
popf
adc
aad
sarb
add
or
sbb
shll
inc
jecxz
mov
jno
loop
cwtl
mov
add
and
add
sub
and
add
dec
add
xchg
xchg
add
push
in
mov
fldenv
incl
push
add
les
mov
lahf
filds
xchg
mov
sub
push
adc
fwait
sub
sbb
pop
add
xor
add
add
xor
hlt
mov
loope
jg
arpl
push
add
jecxz
push
popf
cmp
lahf
add
push
rolb
inc
bound
jo
sbb
sbb
lret
mov
add
lret
mov
inc
add
mull
addr16
mov
inc
cmp
insl
add
push
rcll
les
scas
add
mov
xchg
xchg
jl
cld
push
mov
lret
imul
dec
and
cmp
mov
add
push
push
hlt
cs
js
push
sub
and
mov
stc
dec
add
pop
cmp
adc
add
cld
cmp
fs
jl
add
push
stos
adc
xchg
inc
add
sbb
jnp
lcall
lods
and
pop
mov
sbb
sbb
dec
add
pop
lods
dec
mov
add
scas
sub
rcrl
mov
add
insb
shll
nop
stos
sbb
in
cmp
or
rorl
lret
or
call
sbb
push
roll
push
sbb
push
sti
mov
cmpl
xchg
dec
mov
xchg
leave
cmc
sbb
cmp
inc
xchg
cmpsl
lock
ja
jnp
cmp
mov
add
jbe
cmpsl
mov
or
lock
mov
iret
add
mov
mov
je
or
push
movsb
je
push
mov
and
cld
add
lods
shr
ret
movsl
loopne
mov
add
add
mov
mov
mov
dec
sub
add
add
dec
dec
inc
adc
in
add
add
add
xor
in
and
pop
lret
sarl
ja
cs
incl
stos
loopne
jp
bound
mov
mov
out
dec
push
fisttpll
xor
mov
outsb
push
jg
dec
push
push
add
pop
add
clc
icebp
inc
cmpsb
aam
xchg
mov
mov
cmc
sahf
sbb
add
add
push
xchg
aaa
les
add
push
outsl
jmp
push
adc
add
jg
cmp
iret
mov
aad
push
add
in
cmpsb
add
addr16
pop
mov
cmp
addl
mov
ret
xlat
fdivrl
icebp
mov
stc
xor
jmp
push
add
lods
inc
add
fsubl
add
pop
jp
mov
add
jp
add
dec
push
jne
bound
xchg
fbld
mov
jne
add
ss
push
in
pop
add
add
mov
pop
jg
add
add
or
mov
pushf
lods
in
xchg
or
stos
jnp
mov
add
add
pop
xor
jae
cmp
and
jno
add
jns
xorb
add
pop
add
jns
repz
pop
or
mov
dec
xchg
faddp
and
lea
aas
add
nop
fnsave
mov
ret
cld
mov
cld
call
divb
mov
mov
cli
int
add
sub
add
dec
movsb
cmpsl
cwtl
pop
clc
mov
lods
and
fiaddl
push
add
lcall
or
in
pop
inc
lods
pop
roll
xor
mov
lods
add
fstpl
leave
sar
or
or
pop
add
dec
jb
push
sub
dec
mov
or
dec
cmp
pop
nop
fidivrs
scas
sbb
adc
add
aas
add
cmp
sti
jl
popf
and
xor
cmp
push
in
ljmp
and
mov
lret
dec
js
push
xchg
add
adc
jns
sbb
jbe
test
std
imul
pop
stc
es
sbb
mov
add
mov
sbbl
stos
add
add
mov
jno
cld
cmp
test
sub
aaa
add
or
sbb
pop
inc
sbb
loopne
dec
aad
cmp
jle
sbb
adc
jge
mov
mov
movsb
dec
fadds
and
pop
dec
add
repnz
add
jo
shl
lock
scas
cmp
inc
out
add
out
lret
cmp
enter
sub
jl
dec
mov
orl
outsl
add
sub
sbb
pop
mov
loope
and
hlt
xchg
js
add
cmp
dec
sbb
add
cmp
aam
pop
mov
mov
mov
jge
negb
les
test
cmp
add
pop
stc
lahf
push
inc
push
xor
push
sbb
je
push
bnd
pusha
xchg
xchg
add
ljmp
nop
loope
pop
into
adc
aas
cwtl
cmp
aad
pop
jo
push
stos
mov
shll
adc
sbb
sub
adc
pop
add
mov
cmpsl
pop
and
fwait
cmp
insl
add
push
outsb
subl
pop
lahf
addb
leave
pop
cmpsb
cmpsb
xchg
dec
fs
sub
imul
aam
cmpb
cmc
dec
in
mov
inc
inc
testl
lods
cmc
mov
addl
lock
jmp
mov
cmp
cmp
add
mov
xor
mov
add
add
or
mov
xchg
idivb
out
movsb
testb
sub
mov
adc
scas
stc
mov
cmpsl
pop
add
sbb
test
sahf
shr
daa
xchg
rcrb
lock
xchg
icebp
lea
mov
jno
push
mov
ja
push
sbb
ljmp
adc
es
xor
adc
mulb
push
lcall
arpl
pusha
div
aaa
mov
flds
mov
inc
mov
pop
xchg
add
cmp
mov
add
shll
xchg
scas
xchg
xchg
nop
outsb
movsb
inc
sub
dec
add
add
or
push
add
pop
lret
adc
dec
mov
xchg
add
mov
cld
adcb
or
shrb
cmpl
in
sbb
add
xchg
jmp
cmp
xchg
rolb
mov
pop
xor
xchg
cmp
add
dec
lret
add
movsb
and
std
aas
push
mov
xchg
gs
add
lret
pop
ja
jns
mov
stc
and
in
rorl
push
adc
mov
lock
out
jnp,pt
add
aam
lcall
mov
or
mov
xchg
sub
add
dec
cli
dec
mov
neg
inc
loope
rorb
adc
outsb
xor
sbb
mov
push
add
mov
xchg
test
xchg
jo
ds
mov
mov
lds
adc
je
jmp
ljmp
dec
add
ljmp
xlat
cmp
mov
and
jp
aad
stos
add
sub
jne
dec
mov
sub
or
test
cmpsb
lea
xchg
or
jmp
inc
std
std
adc
mov
push
mov
inc
cmpsl
or
in
aaa
mov
scas
and
andl
int
ret
insl
out
xor
adc
mov
js
ret
pushl
lahf
jg
mov
pusha
push
jp
adcb
fwait
cli
add
fnstcw
or
cmc
sbb
out
jmp
rorl
inc
daa
cmp
and
sub
mov
add
push
mov
jle
popl
test
push
shlb
rclb
add
push
clc
arpl
sbb
shrb
shrl
loop
cmp
jae
imul
inc
out
arpl
and
out
pop
stos
add
lcall
mov
movsl
add
addr16
mov
scas
outsl
js
and
sbb
in
in
ljmp
dec
int3
pop
push
lock
xor
add
xchg
shrl
lea
ret
lcall
adc
stos
lea
out
lret
mov
xchg
and
je
adc
push
test
mov
out
dec
jl
jae
xor
lods
sub
mov
dec
and
icebp
pop
test
sti
adc
and
add
adc
add
jle
hlt
hlt
addb
mov
xchg
add
adc
sub
sub
add
xchg
test
jmp
add
lcall
push
cmp
loopne
sahf
and
movsl
add
mov
test
mov
sub
sub
scas
repnz
aam
add
inc
rcr
outsb
add
sub
in
or
cmp
xchg
lock
mov
jge
jl
popf
sbb
lcall
shlb
imul
lea
jge
mov
mov
nop
push
add
aad
mov
add
adc
jp
and
icebp
mov
insl
js
cmp
lcall
je
mov
xchg
mov
pop
aas
push
das
mov
pop
das
push
xor
ret
ret
add
mov
dec
pop
push
sub
push
jmp
cmp
cmp
mov
add
jo
out
ret
sub
push
ret
add
repz
lods
jbe
add
pushf
ret
fdivl
add
sbb
sbb
rolb
jecxz
cmc
jge
shrl
dec
ljmp
add
add
test
inc
adc
clc
dec
popa
out
jo
cwtl
add
adc
lea
inc
fnstcw
push
into
cwtl
fdivr
mov
outsl
int3
gs
xor
shrb
arpl
rorl
jl
add
push
add
clc
inc
mov
test
add
cmp
push
adc
aaa
add
pop
cmp
push
cmp
add
sti
xchg
xor
and
in
push
aaa
dec
std
stos
pop
push
mov
in
insb
cmc
jecxz
repnz
add
mov
add
in
into
add
subb
pop
mov
add
sahf
addl
mov
dec
xchg
shlb
push
in
adc
add
dec
rolb
adc
pop
insb
fs
nop
inc
push
dec
js,pt
jle
cmpps
add
popa
add
pop
lret
inc
addb
lea
jnp
or
xor
sub
inc
add
fildll
add
add
fldl
mov
cmp
push
mov
add
add
fadds
or
mov
xchg
inc
add
jo
mov
shrl
mov
ljmp
mov
aaa
mov
dec
add
fsub
addr16
mov
scas
push
add
shrb
test
cmc
mov
inc
stos
ret
add
in
push
jmp
andb
push
push
mov
jle
push
adc
sub
jmp
xchg
lahf
sub
mov
fsubs
bound
test
lods
lcall
fdivs
mov
addb
push
in
dec
jnp
add
fwait
loope
push
or
stc
in
push
pop
rep
dec
aaa
mov
das
mov
or
mov
imul
cmp
push
clc
mov
data16
sbb
mov
xlat
in
jecxz
jne
movb
rorl
nop
pushf
add
in
shlb
add
xchg
cmpsl
cmp
neg
add
arpl
fiaddl
lret
into
loopne
add
jle,pt
movsl
jp
fimuls
push
add
or
out
jnp
popa
push
add
lock
sub
ja
sub
add
lea
push
add
scas
jge
outsl
in
outsl
or
out
pop
es
add
imulb
push
fnstenv
icebp
mov
aas
in
sub
loopne
mov
aas
xchg
sbb
dec
lret
mov
ja
int3
adc
out
add
cld
mov
shrb
jmp
negl
loope
xchg
std
sbbl
imul
or
cld
leave
cli
add
xor
daa
shrb
cli
sbb
and
hlt
inc
loop
jne
add
mov
add
add
jno
imul
stos
cmc
pop
orb
push
mov
cmpsb
jmp
lods
pop
cli
add
aad
pop
xchg
shll
add
adc
xchg
add
mov
add
leave
xchg
jecxz
pop
daa
add
push
je
leave
pop
xor
add
inc
test
jb
add
mov
jmp
add
clc
dec
dec
or
add
lret
lcall
jp
pushf
cld
add
sub
lcall
xor
shlb
cwtl
outsb
fld
clc
add
mov
inc
movsl
dec
enter
movsb
stos
and
icebp
pop
sti
data16
repnz
cmc
cltd
add
jge
jbe
nop
xchg
push
mov
lods
pop
add
pop
mov
insb
sbb
mov
aad
sub
xor
pop
cmp
or
loop
mov
out
pop
loop
ds
cmp
or
add
mov
pop
add
fcomi
mull
inc
ret
pop
jmp
xchg
jae
mov
mov
mov
out
lea
xchg
xorl
jecxz
sub
dec
dec
jg
rolb
cmpsl
cmp
jmp
movsb
xor
aas
add
add
push
sub
repnz
in
or
add
cmp
imul
dec
pusha
fcmovnbe
shl
cmp
loope
push
xchg
add
push
fcoml
xchg
outsb
jne
push
ja
dec
add
and
inc
add
add
xchg
xor
pop
lret
bound
cmp
outsb
popa
adc
inc
imul
ret
and
add
mov
sbb
inc
sbb
add
frstor
mov
jb
bound
xchg
sbb
inc
lods
inc
pop
add
mov
insl
fwait
out
push
xor
mov
cmpsl
shr
ja
mov
lea
add
xchg
outsb
divl
aaa
add
into
imul
jg
mov
add
push
cmpsl
or
fisubrs
push
push
mov
out
testl
jg
jae
add
andl
jnp
sbb
scas
xorb
jmp
mov
sahf
out
int3
jle
inc
add
or
xchg
loopne
lods
testl
adc
mov
stos
jo
add
lahf
inc
ret
mov
push
xchg
mov
cmpsl
sbb
ss
mov
int3
in
add
sbb
mov
sbb
stc
cwtl
jne
sbb
loope
outsl
aad
js
cltd
add
fbstp
nop
adc
pop
insl
sub
add
add
add
cmc
pop
clc
test
cmp
push
add
xor
mov
cmp
mov
cli
mov
jo
jge
std
mov
adc
add
mov
mov
pop
and
cld
sub
gs
sbb
mov
add
jge
jg
and
xor
adc
daa
add
mov
add
pop
inc
lds
mov
add
jo
shlb
add
or
sti
leave
add
loopne
lret
sub
inc
andb
add
nop
push
or
in
int3
lods
mov
xor
inc
inc
aam
add
pop
mulb
sahf
add
sub
out
das
cmpsl
mov
in
xor
add
jmp
mov
rdtsc
xchg
stos
add
xchg
mov
jbe
sbb
cmp
mov
mov
inc
push
jg
sbb
mov
cmp
cltd
dec
add
dec
xor
add
add
adc
std
jg
pop
mov
aas
mov
jno
int3
loope
adcl
adc
xor
and
push
mov
mov
push
sbb
scas
sbb
add
xchg
sub
aaa
add
push
add
or
inc
scas
add
lcall
ret
in
mov
clc
jae
xor
inc
push
dec
scas
out
cs
or
outsb
add
add
jno
sbb
fldenv
cmp
push
iret
pop
pop
dec
outsb
add
cli
sub
dec
jnp
stos
add
out
sahf
dec
outsl
test
mov
cmp
nop
sub
outsb
out
add
into
add
dec
xchg
jg
pop
xlat
imull
push
out
pop
mov
sbb
int
js
popf
add
aas
add
add
or
sti
test
fisubrs
add
pushf
xor
add
jae
popf
rorl
cwtl
cs
push
fisttpll
add
jbe
cld
cmp
stos
sub
fidivs
in
or
rolb
or
ret
xlat
outsb
mov
dec
push
sbb
add
cmp
pop
jb
and
outsb
push
scas
add
mov
xchg
jne
addr16
adc
jbe
sbb
inc
mov
in
lret
mov
push
add
cltd
fs
xor
sub
out
fsubr
jp
lock
hlt
pop
adc
and
add
mov
jno
aaa
fsts
add
inc
mov
lea
fcompl
push
movsb
in
in
sub
fidivs
test
inc
arpl
xchg
xchg
aas
lods
dec
add
fsubs
bnd
pusha
imul
in
add
mov
jnp
push
notl
or
sub
cmp
adc
add
ret
pop
pop
ret
inc
repnz
xchg
push
pop
add
loopne
push
lahf
add
pop
sti
add
data16
test
lret
add
cmp
sbbl
pushf
xchg
lea
pop
push
lret
add
add
cmp
adc
push
jne
insb
push
sbb
add
aad
addl
xchg
idiv
outsl
add
test
out
test
xchg
add
push
outsb
add
dec
add
cmp
gs
adc
pop
sub
popf
jbe
jp
and
add
in
dec
popf
fldpi
push
mov
dec
cmpsb
add
sbb
aas
cmp
xor
cltd
adc
xor
cmp
out
cmc
add
movl
sti
inc
push
add
xchg
test
cmpl
add
push
stos
hlt
lock
xchg
or
movsl
push
fildl
or
push
mov
scas
inc
out
clc
xchg
add
add
jb
adc
andl
push
fcmovu
dec
push
jl
movsb
add
pusha
inc
stos
stc
push
enter
inc
lea
dec
and
icebp
pop
add
cli
add
push
xchg
movl
insl
add
add
adc
mov
add
lods
mov
pop
cmp
loope
cmpsb
sbb
arpl
outsb
loop
add
push
popf
daa
xor
mov
out
ljmp
movsb
add
push
xchg
mov
lds
add
fidivl
add
test
cmpsb
add
cli
lods
mov
data16
dec
ror
cmp
push
out
mov
aaa
fiadds
xor
xchg
or
lcall
sbb
fsub
push
and
sub
lods
xchg
fiadds
add
addb
shlb
sbb
jmp
sub
imul
notl
add
js
add
into
sub
add
add
sti
test
or
push
jns
cltd
ja
data16
frstor
stc
add
lods
inc
stos
mov
daa
pusha
or
sti
out
cmp
mov
loopne
push
ljmp
ljmp
pop
lea
dec
xchg
push
insb
lret
mov
sub
pop
cmp
sub
faddl
and
scas
mov
xor
pop
mov
xlat
mov
jecxz
andb
cmp
add
mov
lods
fisubl
movsl
loopne
and
mov
add
or
insb
adc
std
or
xchg
add
enter
sarb
sti
inc
dec
mov
dec
cmp
mov
jnp
add
mov
ret
cli
or
in
in
scas
xchg
xor
aas
scas
push
xchg
push
repnz
popa
mov
push
outsb
xor
subb
insb
cltd
jg
jmp
sahf
add
inc
data16
sahf
mov
xor
mov
cmpl
adc
xchg
add
dec
out
inc
adc
xor
in
adc
jmp
push
cld
add
test
add
cld
rcrb
sub
and
inc
int3
add
push
xchg
adc
sub
push
sahf
push
sahf
mov
add
add
nop
pop
add
in
dec
adc
loop
xchg
daa
bound
mov
pop
aad
outsl
movsl
sahf
mov
pop
dec
test
and
daa
or
xor
sarb
adc
nop
jle
fisubrs
add
mov
push
in
fs
out
stc
cld
gs
and
orl
jno
add
cmpsb
cwtl
mov
mov
jl
cmpsb
xchg
adc
push
cli
xchg
add
dec
push
adc
push
jne
scas
clc
das
cmp
jmp
sbb
xchg
in
sbb
sbbl
jnp
mov
inc
addl
pushf
push
add
in
push
dec
in
xchg
add
sbb
lds
out
sbb
loop
fdivr
sub
movl
push
push
shlb
xchg
test
add
shlb
test
in
dec
sbb
mov
std
pusha
adc
fmul
lret
pop
mov
aas
pushf
push
aas
sti
add
decb
cmp
mov
testb
and
rcll
push
sbb
jle
cwtl
adc
or
pop
jb
pop
dec
jne
add
xchg
mov
xchg
jno
testl
lods
mov
mov
fiaddl
adc
pop
push
pop
mov
add
ja
inc
sub
and
test
cli
pusha
add
dec
arpl
out
sub
into
xor
mov
adc
xor
xor
popf
shlb
adc
or
lods
xchg
lods
xchg
dec
and
bound
jge
js
or
sub
adc
dec
or
and
ror
es
add
add
pop
andb
and
fwait
push
sti
test
or
mov
adc
bound
sub
or
mov
fldln2
stc
add
add
in
insl
jno
jae
scas
into
add
xchg
jb
movsl
pop
ltr
inc
jae
sub
dec
add
in
movsl
add
and
lods
pusha
dec
cmp
jae
decl
push
mov
sti
ljmp
mov
popf
sub
pop
mov
sbb
xchg
dec
add
inc
push
xchg
add
fldt
mov
fcomp
lock
jb
sbbb
repnz
cmp
movsl
add
ss
add
or
push
pusha
loopne
negb
add
or
dec
cmc
add
jne
popf
add
mov
nop
std
in
fldcw
push
adcl
add
xlat
jne
repnz
sub
call
clc
lahf
outsl
negl
push
push
in
add
sbbb
sbb
data16
add
jae
pushl
fsubrl
sub
punpckhbw
jg
adc
fcmovu
int3
mov
pop
pop
mov
inc
cmpsl
sbb
pop
and
pop
pop
pop
movsb
cmc
cmp
add
int
loopne
adc
add
roll
jge
add
repnz
add
push
add
sub
push
add
add
add
jge
pusha
add
and
push
push
popa
fbld
aam
adc
pop
pop
add
push
stc
add
add
loopne
daa
sub
mov
pop
mov
pop
jne
add
xchg
in
pushf
mov
dec
sub
in
filds
insb
mov
addl
or
std
xchg
aam
sub
lds
add
add
fiadds
lods
addb
clc
or
sub
pop
pop
mov
mov
add
xchg
lret
sbb
add
sbb
mov
incb
or
cmc
and
lods
add
mov
insb
mov
scas
pushf
sbb
scas
es
adc
xchg
inc
lods
and
mov
incb
dec
lret
mov
mov
add
pop
andl
repz
nop
fs
add
sub
push
lds
mov
xchg
dec
enter
inc
add
jmp
mov
add
jge
add
dec
or
loop
dec
add
hlt
add
push
add
mov
je
loope
repnz
movsl
or
adc
and
add
add
add
stos
scas
xor
loop
add
jg
push
mov
inc
insb
sbb
pop
inc
es
and
ds
add
pop
add
push
mov
enter
clc
push
lahf
push
inc
fwait
adc
ljmp
xor
jns
inc
dec
or
and
pop
mov
sbb
add
popa
dec
add
pop
testl
mov
popf
inc
inc
test
test
xchg
pop
pop
test
mov
lret
insl
leave
add
sbb
mov
push
movsb
sub
testl
xchg
mov
test
adc
repnz
addr16
mov
sub
movl
jb
cli
jbe
sbb
or
pop
xlat
cmp
inc
sbb
testb
mov
mov
mov
stc
mov
mov
dec
ja
pop
das
cmc
ljmp
add
popa
xchg
inc
add
mov
inc
rcr
in
or
clc
xchg
daa
es
jle
imul
test
cltd
sarl
jg
int
lcall
aaa
add
push
lahf
sahf
and
dec
add
shrl
pop
and
xor
add
or
jne
pop
add
pop
dec
xor
mov
cmpsl
popf
adc
filds
mov
jl
fcompl
mov
add
pop
pop
pop
adc
push
mov
add
adc
add
add
sub
add
push
dec
shlb
jo
rcl
test
push
sbb
repz
jg
daa
jno
test
cmp
jo
pushf
pop
ja
jnp
add
pusha
jmp
repz
push
scas
cmpsb
scas
add
xchg
adc
sbb
shrl
sbb
sub
and
mov
mov
sub
mov
ffreep
outsb
sbbl
out
call
sbb
xor
cmc
and
cmc
das
enter
dec
ret
pop
jl
xchg
add
loop
sbb
in
pushf
or
dec
xor
adc
mov
data16
cmpsl
aad
daa
data16
mov
lds
nop
lret
fucomip
add
push
mov
jmp
stos
push
popf
jno
mov
cld
movsl
xchg
ffree
es
dec
xor
xor
sub
add
push
clc
test
push
xlat
xchg
mov
cmp
pop
js
adc
das
mov
mov
into
add
or
or
add
pop
cmp
sbb
add
mov
fisubrs
sbb
pop
xchg
xor
inc
out
ss
jp
mov
and
sbb
add
jmp
cmp
push
jle
push
ret
inc
aad
outsb
xchg
add
add
push
add
xchg
sbb
push
add
mov
or
pop
xor
fisubl
add
ret
jl
xor
scas
fistpll
jmp
cmp
mov
mov
inc
xchg
jle
cli
sldt
js
pop
sub
and
xchg
lcall
lods
std
push
jno
cmp
add
mov
sbb
add
iret
mov
and
mov
dec
rcl
int
sbb
add
jmp
add
jmp
add
add
pop
push
mov
lret
cmp
mov
jns
or
fs
xor
sub
stc
xor
loope
mov
movsl
add
and
mov
inc
cmp
push
push
out
stc
pop
popa
aaa
sub
add
push
test
into
xlat
testl
inc
les
divl
repz
adc
lds
or
ficomps
or
fildll
dec
add
dec
jb
in
adc
sti
je
out
cld
add
cli
mov
add
pusha
push
aad
add
mov
add
out
shrl
test
cwtl
and
mov
push
sub
add
mov
inc
in
adc
pusha
cmp
popf
scas
mov
cmpl
fcoml
out
cmpb
cmp
xchg
add
add
add
push
les
add
add
lret
adc
dec
dec
idiv
cltd
mov
mov
push
add
int3
pop
scas
loopne
into
lods
out
xchg
ljmp
pop
in
loopne
mov
out
adc
xlat
aam
push
or
xor
adc
cmp
push
push
sub
pop
pusha
add
arpl
mov
add
dec
ljmp
cmpsb
or
out
movmskps
add
loop
push
cmp
mov
xchg
insb
mov
into
insl
pop
mov
jae
sub
clts
cmpsb
mov
ljmp
add
sub
add
fldt
and
insb
cmpsl
jno
loopne
mov
add
pop
add
adc
or
push
jge
xchg
xchg
jo
dec
sub
mov
sub
imul
sbb
sub
or
xor
cmp
push
cmp
pop
out
push
mov
inc
add
test
mov
mov
sbb
xchg
sub
popa
pop
xchg
imul
add
mov
stos
add
push
adc
shll
mov
add
add
sbb
sub
add
add
ljmp
imul
mov
and
add
test
inc
test
cmp
addl
shll
into
mov
sbb
or
xchg
test
sbb
cmp
push
mov
hlt
lods
add
jb
dec
add
cmp
fwait
addb
push
add
and
lds
or
lock
add
push
sbb
mov
lds
in
lret
cmc
xor
add
sbb
add
add
push
in
icebp
mov
jp
mov
mov
xor
in
or
and
sub
add
xlat
jp
out
add
xor
fdivrl
bound
in
xchg
or
cld
scas
dec
push
add
lret
xor
addl
pop
add
add
cmp
outsl
fildl
sub
popf
push
mov
push
fisttps
loope
sbb
mov
fidivl
pusha
nopl
cmpl
pushf
add
mov
fiadds
es
pushf
adc
movsl
cmp
sub
mov
add
jecxz
sbb
mov
add
fiaddl
fcoms
imul
xor
outsl
add
add
adc
jp
stc
mov
push
sbb
roll
jnp
leave
cmp
ss
cwtl
add
cmc
sbb
push
sbb
cmp
add
pop
mov
gs
sti
int3
stos
add
fdivl
imul
and
jo
add
in
add
lahf
lods
inc
add
lret
ret
mov
pushf
mov
imul
xchg
das
rclb
adc
adc
or
fwait
push
cmp
push
addr16
push
sti
sub
add
lahf
repnz
cwtl
hlt
jbe
mov
add
jmp
inc
pop
xor
push
lahf
ret
enter
scas
add
or
into
push
pop
lret
add
add
add
lock
add
add
lret
pop
pop
add
push
mov
or
incl
dec
in
mov
out
push
add
in
lret
out
cmp
mov
ror
ds
push
cs
sub
int
icebp
add
fstpt
movsb
ljmp
les
mov
push
cltd
vmovhps
rolb
outsl
inc
xor
sbb
icebp
out
ljmp
jbe
das
add
xchg
inc
add
das
iret
add
jle
add
rclb
adc
hlt
push
movsb
stos
enter
push
add
shr
add
add
push
jl
inc
daa
jns
fstpt
pop
add
aas
icebp
sbb
andl
movsb
cvtdq2ps
jp
push
adc
sub
bound
xchg
adc
pop
pop
shlb
daa
xchg
sub
mov
movsb
mov
xchg
xor
add
jmp
hlt
and
dec
add
shl
add
add
xor
push
lds
lcall
pop
mov
mov
sub
pop
pushf
out
test
shll
lock
and
adc
pop
add
inc
inc
add
lods
mov
jmp
lahf
popf
jmp
pop
add
xor
ljmp
add
mov
push
dec
out
imul
loop
jmp
mov
sub
insb
jno
mov
add
dec
dec
mov
xlat
fildl
mov
xor
test
jl
add
jbe
stc
aaa
fsts
into
mov
mov
xchg
sub
mov
add
sub
sub
add
and
inc
shll
add
insl
adc
lods
jne
push
je
xchg
xchg
outsl
enter
sbb
movsl
sahf
add
stos
ret
stos
aad
out
cmpsl
scas
test
cmpsb
int3
add
outsl
enter
int3
inc
frstor
aas
ds
outsl
push
popf
xor
sbb
or
or
out
sub
mov
sub
mov
sbb
inc
xor
add
rcrb
add
aas
inc
repnz
adc
add
movsl
xlat
inc
adcb
sbb
or
mov
add
mov
leave
ret
iret
mov
pop
mov
adc
add
xchg
out
sub
mov
add
add
movsb
cmp
push
leave
fisubrl
ret
fwait
sbb
dec
lods
jmp
enter
cmp
es
mov
mov
aas
sahf
mov
test
add
sbb
push
add
mov
add
decb
adc
insl
jb
pop
cmp
cmp
jge
out
insl
jg
jnp
mov
xlat
mov
loop
pop
push
push
pop
insb
jmp
repnz
jmp
cmp
mov
add
add
fnstcw
fisttpll
arpl
icebp
fdivrs
mov
stos
incb
jb
in
add
leave
mov
cmpsl
add
xchg
push
les
add
mov
cmc
call
pop
sbb
and
and
dec
add
cmpsl
movsl
neg
cmpsb
cmp
add
add
cmp
adc
sbb
add
cwtl
mov
inc
es
mov
push
test
les
and
roll
mov
aad
jnp
jno
lahf
aas
add
and
sub
movsb
fs
mov
addr16
add
int
cli
add
test
sbb
add
pop
add
stos
call
cs
test
pop
add
push
add
movsb
or
mov
add
pop
add
adcl
mov
xchg
lods
mov
lock
inc
pop
pextrw
insb
ret
mov
outsb
or
sahf
roll
add
fwait
lea
dec
add
fldl
mov
scas
sbb
sub
add
add
add
add
out
lods
inc
out
test
cmc
jo
roll
and
lahf
add
cli
test
stos
les
inc
stc
add
mov
iret
aaa
popa
pop
into
jle
mov
out
outsb
test
xchg
in
adc
sub
mov
dec
xor
in
cli
or
add
bound
loopne
shl
lods
pop
test
pop
push
lahf
inc
add
mov
imul
rorl
scas
mov
data16
mov
lret
cmp
mov
jmp
nop
mov
mov
mov
pop
cld
scas
inc
cmc
add
fistpl
test
pop
push
cmp
mov
cmpsl
cmp
mov
sub
sbb
add
jns
movsb
mov
add
mov
push
inc
push
mov
cs
add
out
fisubs
clc
cwtl
aas
and
jbe
arpl
sbb
sub
out
sub
mov
mov
adcb
lds
fnsave
add
inc
xor
adc
mov
xor
mov
or
add
jbe
pop
in
and
xorb
repnz
cmp
scas
sub
add
push
add
test
das
sbb
das
mov
in
lea
mov
out
mov
add
dec
add
pop
outsb
arpl
lcall
push
jg
punpckldq
add
outsl
aad
orb
es
fildl
cmpsb
mov
arpl
add
imul
ljmp
mov
je
or
addr16
cmc
add
out
jb
cmpb
clc
add
xor
cwtl
insl
lret
mov
inc
jl
add
leave
and
and
mov
mov
add
xchg
push
xchg
adc
dec
es
push
fwait
lock
xchg
sub
cmp
outsl
xor
inc
lock
dec
xor
cmp
xor
rcrl
pop
sub
xchg
mov
iret
jge
cmpsb
mov
mov
inc
xchg
test
lds
mov
push
adc
in
cmp
out
xchg
int3
fmuls
cli
mov
add
dec
add
inc
adc
push
adc
adc
jg
sub
stos
sbb
inc
stos
pop
mov
and
add
jae
xchg
fimull
xchg
add
fstpl
jo
lea
add
dec
orb
pop
lds
rcl
jecxz
add
xchg
lods
jp
loopne
push
dec
add
jg
pop
cld
push
add
add
adc
adc
sub
add
hlt
add
mov
add
lds
add
aas
cmpb
add
and
and
mov
fucom
jg
jmp
lret
imul
imul
add
mov
testb
adc
loope
xchg
push
sub
js
add
add
jmp
cmp
and
pop
ljmp
add
bound
clc
and
xchg
push
add
lock
or
cmp
ljmp
xor
add
add
cwtl
adc
mov
inc
jne
cs
add
jo
mov
aas
or
lcall
add
or
push
sub
add
jl
jb
xor
lods
inc
mov
movsl
xor
add
sbb
pusha
cmpsl
jb
fldt
push
pop
jecxz
mov
hlt
dec
cli
mov
jle
sub
sub
sub
pop
add
push
jo
ss
jp
addr16
and
cmpsb
mov
xor
add
pop
add
sub
push
push
and
fimull
push
inc
add
iret
xchg
inc
dec
xchg
add
arpl
add
bound
add
mov
aad
mov
icebp
aas
inc
add
mov
cli
out
int3
pop
scas
and
mov
std
xchg
jns
add
add
or
mov
cltd
outsl
das
mov
cmp
jbe
mov
fiadds
imul
sub
and
add
mov
pop
adc
push
gs
faddl
repnz
add
sub
sub
data16
add
lea
bound
test
sub
out
jne
adc
push
add
nop
mov
mov
xlat
lock
fsubs
push
and
pop
mov
dec
jmp
fsubrs
add
push
ljmp
leave
pusha
cmpb
movb
or
int3
int
mov
fwait
int
cmp
sub
jnp
sbb
negb
ljmp
outsb
lret
cmp
push
mov
mov
mov
fwait
rol
add
sub
jecxz
test
and
faddl
xchg
or
xchg
sbb
rorb
cmp
in
lds
data16
jo
jne
adc
pop
outsb
adcb
pop
jb
jbe
add
mov
push
jecxz
inc
cli
add
decb
sub
int3
add
int
call
lea
mov
mov
push
pop
gs
mov
es
in
mov
cwtl
add
aam
lea
add
mov
push
pop
add
clc
pop
data16
cmp
shlb
add
cld
adc
and
push
ljmp
adc
imul
dec
add
shlb
test
push
cwtl
sbb
jne
andb
les
mov
add
or
sar
mov
lret
add
ret
mov
xchg
lahf
xor
pop
fbstp
mov
loope
js
mov
movb
and
pop
lcall
cmpsb
jns
lret
cmp
or
cmp
mov
add
adc
pop
jle
repz
neg
mov
pop
pop
adc
cmp
jle
clc
xor
xchg
add
pop
adc
incl
and
add
add
push
mov
xchg
daa
cmp
cmp
mov
add
sub
hlt
add
imul
add
and
jle
sti
xor
and
imul
pusha
pop
jno
add
iret
movsb
stos
add
out
pushf
pop
aam
cmpsb
subl
pop
push
lahf
movsb
sbb
add
int3
jecxz
enter
icebp
lods
add
adc
add
mov
loope
pusha
dec
jecxz
xchg
mov
push
mov
test
ret
add
mov
lods
mov
add
sub
push
push
mov
das
sub
add
dec
pop
fs
mov
mov
push
stc
enter
xor
add
mov
fstpl
adc
jnp
xchg
xchg
int3
std
jecxz
mov
adc
jp
xchg
loope
sub
loopw
add
out
adc
movb
jle
imul
add
dec
out
add
movl
push
add
mov
or
mov
mov
testl
xchg
sarl
add
lds
and
lock
inc
mov
add
add
pusha
aaa
pop
add
mov
add
fldenv
in
dec
inc
outsl
lock
cwtl
test
ret
insb
pop
push
int
stc
and
mov
or
jne
or
clc
jno
mov
pusha
aam
mov
loopne
mov
out
cmpsl
stos
or
jecxz
outsb
enter
bound
adc
jne
out
iret
mov
in
out
ret
lods
add
test
rorb
out
pop
add
int
bound
sub
add
rcr
cmp
inc
aam
add
insb
inc
les
and
rclb
jge
push
jo
xlat
add
cld
dec
ret
add
in
push
mov
imul
cmp
add
lods
pop
adc
and
xlat
mov
nop
add
xor
bound
add
push
jns
pop
xor
add
cmc
test
int
push
mov
inc
test
push
sti
sub
add
or
sbb
jp
add
add
mov
scas
add
lods
cs
inc
aaa
stos
cmpsl
pop
sarl
das
lret
repnz
add
push
fisttpll
cmp
push
sub
cmp
lahf
jp
adc
fidivrs
add
lods
aas
add
aam
inc
movb
sub
popa
notb
jne
dec
dec
roll
ret
add
mov
mov
roll
in
addr16
xor
xor
sbb
shl
pop
add
add
and
call
mov
popf
mov
movsb
add
scas
enter
pop
adc
aad
popf
data16
jmp
add
and
es
adc
repz
out
fs
lret
mov
inc
cmp
push
jns
data16
div
adc
add
shl
pop
ret
mov
popa
add
outsl
in
add
inc
mov
lods
mov
add
add
add
inc
cld
add
addb
cmp
add
lods
add
cmp
call
inc
jb
std
popa
jno
setge
imulb
add
fnstcw
inc
fwait
fs
ja
pop
enter
jae
loope
js
pop
paddsb
add
add
enter
sbb
mov
and
mov
andb
rcrb
rorb
lds
inc
jb
xchg
push
pop
popf
cmp
ja
and
insl
clc
arpl
cmp
mov
movsl
out
pop
adc
push
mov
inc
push
sbb
jmp
sub
rolb
sub
fimuls
add
push
and
lds
pop
mov
cld
pop
addr16
add
add
pop
xor
push
add
mov
cmc
call
adc
popa
sbb
aad
imul
fidivrl
cld
cmp
cld
inc
adc
jns
sldt
xchg
nop
stc
xlat
cmpsb
mov
mov
push
sbb
dec
push
sub
call
push
and
add
add
sub
add
dec
sbb
lcall
add
add
stc
mov
push
out
dec
add
sub
popl
icebp
andb
add
push
scas
add
adc
sbb
inc
push
or
dec
mov
adc
jg
adc
xchg
movsb
data16
mov
push
imul
add
adc
std
sub
add
adc
dec
add
pop
mov
adc
dec
js
xchg
sub
add
add
test
hlt
mov
lret
js
cld
popf
or
idivl
add
mov
sub
movsb
jbe
sub
inc
xchg
add
add
sub
xor
ja
data16
insl
mov
mov
sbb
cmc
xchg
xor
mov
push
add
dec
lock
popf
in
popa
cmp
xchg
sbb
jecxz
js
and
iret
inc
fmull
leave
imul
sbbl
mov
jle
mov
jle
adc
ljmp
add
sbb
ds
or
mov
inc
dec
sub
xor
xchg
jle
out
pop
xor
add
sub
fsubl
add
cmp
call
std
sbb
inc
mov
and
pop
cmpsl
and
push
sub
add
dec
outsb
adc
ret
add
fnsave
xor
xor
subb
push
xchg
addr16
mov
dec
dec
call
sarl
add
xchg
pop
movl
push
idivb
mov
push
and
or
inc
aam
or
cs
das
xchg
mov
arpl
out
divb
push
loopne
ljmp
out
sub
popa
jbe
or
fdivrp
mov
add
loopne
iret
daa
add
es
les
cwtl
add
cmpb
aad
jl
sbb
mov
lock
insb
pop
jecxz
jo
or
repnz
xchg
push
add
nop
dec
fiaddl
dec
jnp
cmp
jecxz
cmp
repnz
jmp
pushf
out
add
xchg
xor
xchg
mov
repnz
lcall
jns
mov
lahf
xchg
xor
sbb
js
stc
sub
loopne
push
icebp
push
sub
fsubr
push
add
incb
adc
sub
clc
jnp
sub
loop
inc
fldl
push
clc
add
aam
out
sbb
xor
data16
leave
sub
adc
pop
mov
dec
and
add
mov
in
test
push
bound
pop
mov
rorb
lods
in
roll
stos
and
xchg
sub
cmp
adc
aad
outsl
xor
out
or
and
or
dec
add
scas
frstor
shlb
add
push
cmp
sub
js
stc
cld
jp
mov
lret
pushf
test
lock
ret
cs
ss
mov
fdivrs
dec
xchg
jno
add
add
in
movsb
pop
sbb
dec
add
and
adc
into
clc
add
cmp
add
push
or
lret
idivl
data16
sub
xchg
mov
jns
jns
pop
arpl
popf
cli
pop
cmp
inc
dec
adc
cli
cmp
add
int
adc
mov
xchg
gs
add
mov
and
xor
sahf
in
aam
add
pop
sbb
add
lea
jle
mov
aaa
sbb
xor
shlb
aad
imul
std
push
add
fadd
sbb
jnp
cli
push
popf
pushf
adc
cmp
mov
cmpsb
add
aaa
add
cwtl
and
mov
xor
and
adc
dec
test
push
lahf
adc
jmp
push
sbb
ljmp
int3
stos
ss
ds
shlb
loope
jl
add
add
pop
inc
push
movsl
inc
jo
xchg
fucomip
aas
sub
push
mov
sar
jle
or
lret
cmpsb
js
arpl
iret
test
adc
mov
and
out
js
push
xchg
dec
ret
sub
shlb
mov
add
push
shll
cmp
out
ljmp
push
sahf
repz
movq
cmp
add
cmp
sub
mov
and
dec
add
push
and
out
add
pop
or
cs
popa
div
mov
xor
imul
add
je
out
adc
mov
mov
cmp
xchg
std
jge
cmc
ss
push
add
arpl
xlat
inc
outsl
adc
outsl
adc
out
cmpb
lret
imulb
popf
or
cmpsl
xor
add
pop
xchg
ss
add
push
add
jnp
inc
flds
add
mov
in
xlat
out
or
aam
xchg
jae
push
mov
in
aaa
push
sti
cmpsb
xchg
adc
add
mov
cmp
sti
xor
add
pop
add
jg
lock
pushf
cmp
fcoml
cli
jp
push
cmp
mov
mov
mov
clc
jno
jnp
mov
and
bound
add
xor
sbb
mulb
mov
lahf
test
mov
and
add
sub
dec
fnstenv
add
les
out
dec
push
push
in
std
add
lcall
lret
out
mov
bound
adc
mov
sti
pop
and
add
pushf
inc
imul
and
mov
andl
cmp
add
imul
add
rolb
xchg
pop
xorb
mov
pop
insb
inc
xchg
push
add
or
xchg
xchg
cmp
lcall
mov
cmp
insb
in
addr16
fimuls
test
aaa
pop
inc
or
or
repnz
movl
dec
xchg
mov
or
movl
out
inc
mov
xchg
xchg
push
xchg
cmp
je
push
mov
and
add
add
std
loop
jb
dec
jns
mov
pop
lea
xorl
or
call
jecxz
ss
inc
push
fisubrl
sub
xor
fsubl
pushf
ss
cmp
bnd
shlb
popl
cmpsb
divb
arpl
xlat
mov
jecxz
pushf
xlat
or
in
inc
add
loopne
lds
ljmp
mov
jmp
cltd
push
sbb
orl
in
or
or
les
xchg
mov
push
out
pusha
or
addr16
add
pop
movsb
or
dec
cmp
mov
xchg
imull
add
add
add
ret
stos
mov
pop
sahf
repz
adc
es
xchg
inc
pop
sub
add
xchg
dec
ja
mov
pop
jae
and
sbb
mov
jns
mov
jo
dec
je
xor
xor
lea
bound
sbb
sbb
mov
add
scas
adc
ret
add
mov
add
addr16
popf
inc
outsl
test
shrb
outsl
jbe
xor
xor
stc
cli
fwait
negl
push
addb
rcll
std
push
and
add
cwtl
or
cld
popf
jns
jno
clc
addr16
test
idiv
mov
lahf
cmp
ja
add
lahf
pop
mov
daa
add
dec
sub
pop
daa
fcmovne
add
dec
sbb
xor
rcrb
cwtl
pop
lds
dec
sub
push
xor
push
dec
add
xor
or
jmp
out
cmpsl
xlat
add
mov
nop
jne
add
jns
inc
in
dec
gs
imul
test
inc
sbb
gs
std
clc
xlat
stc
add
loopne
int
sub
ja
jnp
movsb
add
imul
ficompl
sahf
icebp
mov
and
mov
xor
push
dec
mov
cmp
cmpb
cmp
push
sbb
js,pn
pop
lcall
fs
add
dec
pop
scas
xchg
push
push
xor
fs
cmp
add
outsb
test
rorb
shlb
or
and
xor
sbb
outsb
roll
enter
loop
push
add
xchg
add
rcl
call
aad
sub
dec
nop
mov
add
cwtl
out
fsubrs
pop
mov
push
fnstsw
aas
cmp
push
add
dec
std
hlt
add
out
mov
data16
dec
adc
sbb
jbe
add
inc
jg
popf
inc
lret
sti
stos
mov
ja
pushf
shlb
shlb
fcomip
jo
add
repz
mov
popa
movl
bound
xchg
mov
stos
out
and
pop
out
fiadds
push
jae
fcmovnu
add
inc
adc
dec
out
sbbl
shll
cmpsl
cwtl
adc
dec
int
jns
jp
test
leave
mov
lods
and
pop
fxch
xchg
repnz
sbb
scas
dec
dec
mov
dec
xor
mov
test
push
add
inc
add
aam
add
xlat
add
pushf
push
popf
outsl
test
es
dec
pop
lea
iret
adc
adc
xor
jno
subb
sbb
inc
or
xor
je
or
add
jno
and
add
add
cmp
or
stos
add
in
mov
fwait
dec
ret
add
bound
xchg
ss
and
push
add
add
popa
mov
jae
arpl
cmp
mov
cmp
pop
mov
add
pop
xchg
daa
pop
add
or
in
test
lock
ret
sub
pop
in
faddl
enter
add
stos
je
sbb
out
xchg
icebp
insl
adc
push
push
out
mov
call
sbb
cmp
xor
mov
xchg
jo
add
ja
jnp
xor
jmp
push
push
sbb
inc
add
push
test
sbb
push
add
sub
add
rol
fwait
out
in
jo
pushf
clc
jp
sahf
add
out
insl
pusha
dec
shrl
aad
mov
sub
sub
xor
mov
out
add
pop
roll
mov
mov
and
call
enter
or
pop
add
sahf
mov
rclb
bound
mov
xchg
int3
add
mov
loope
push
dec
lcall
jp
aam
add
mov
sbb
sbb
mov
mov
pushf
lock
popf
ds
fmuls
mov
and
xorl
add
jns
daa
stc
mov
add
xchg
shll
sbb
stos
or
rcll
add
push
pop
mov
add
xor
adc
and
push
mov
stos
clc
mov
xchg
aas
movsb
cmpsb
sti
push
sub
cltd
xor
add
add
inc
add
and
sbb
add
dec
mov
push
sub
pop
adc
mov
out
inc
repnz
lret
jns
xchg
jne
int
jl
js
and
icebp
xchg
adc
and
mov
shl
sub
xchg
pop
repnz
jg
movsl
xlat
ljmp
bswap
nop
in
popf
push
adc
ljmp
sub
iret
sub
test
dec
outsb
lds
or
shr
cltd
jae
push
fildll
pop
lcall
ss
ja
add
push
push
xor
xchg
jecxz
inc
push
enter
adcl
sbb
mov
imul
roll
repz
lret
std
jae
add
stos
xlat
mov
xchg
repnz
outsb
sub
add
sti
sub
ffree
mov
neg
jo
imul
add
loopne
adc
mov
inc
dec
lret
or
mov
or
roll
add
dec
aam
pop
out
loop
ljmp
stos
push
out
xor
popa
incb
xlat
ja
outsl
cmp
inc
mov
lahf
push
sbb
pop
jmp
add
add
imul
and
adc
mov
stos
or
test
push
dec
add
add
les
dec
adc
add
bound
divb
stc
inc
add
mov
out
sahf
cmp
icebp
add
and
add
ja
add
arpl
mov
insb
mov
xor
test
popa
outsl
mov
adc
dec
mov
repz
mov
in
mov
stos
icebp
mov
push
add
imul
push
cwtl
lock
movl
sbb
das
fs
jmp
in
popa
or
popa
dec
adc
scas
sbb
add
sub
sub
add
pop
lret
out
adc
add
lcall
xor
jb
and
movl
ss
xchg
test
add
mov
push
and
mov
inc
aad
in
hlt
fidivs
and
jl
rorl
repnz
add
or
movsl
mov
aas
pop
dec
push
mov
and
aas
fs
add
cmpsl
movsl
ss
mov
xlat
push
pop
sbb
sbb
add
and
mov
mov
adc
or
int3
inc
add
mov
jb
sbb
into
lea
sub
and
jnp
xchg
lock
xchg
nop
stos
test
call
push
pop
idiv
stos
mov
rol
sahf
xor
fidivs
out
in
and
cld
mov
test
or
push
pop
mov
repnz
xchg
xor
add
cmpsl
js
or
xchg
add
or
jle
push
shlb
cwtl
push
stc
lds
popa
add
sbb
adc
inc
add
mov
outsb
inc
xor
inc
paddw
push
je
cmp
and
adc
push
mov
mov
ljmp
sub
stos
fdivs
cmp
gs
cmc
mov
repnz
mov
out
std
bound
add
sub
add
ficompl
add
add
ja
and
mov
incb
jmp
loope
xchg
mov
outsl
in
fldt
pop
cs
sub
cwtl
fwait
lret
and
add
add
popa
pop
add
add
xor
in
jp
and
mov
pop
add
cmp
cmp
adc
push
out
xchg
add
jle
push
push
addr16
add
nop
insl
les
push
icebp
add
or
scas
add
cltd
add
frstor
sub
add
sti
sbb
cltd
mov
mov
sbb
push
lods
ret
push
push
mov
mov
add
xchg
dec
sbb
adc
sub
add
jbe
fld
cmp
clc
cmp
jae
jge
add
in
ficoms
add
pop
push
fidivrs
mov
repz
pop
or
add
mov
push
mov
dec
adc
pop
add
loope
add
and
add
sti
shrl
or
stos
add
add
hlt
stos
mov
mov
xchg
push
sahf
xchg
or
sbb
and
gs
add
sub
into
jg
lea
mov
and
out
or
adc
mov
push
add
loop
aas
fdivs
xchg
dec
xor
dec
or
adc
xchg
dec
push
nop
add
jge
test
xchg
push
sbb
or
std
stos
dec
mov
add
in
xchg
popf
test
enter
add
nop
add
jne
pop
jne
add
add
add
ret
leave
push
outsl
jae
loopne
inc
pop
cwtl
sub
aas
mov
inc
add
imul
xchg
add
mov
adc
add
jne
testl
pop
pop
add
sbb
cmp
and
test
pop
pop
cmp
push
enter
jb
and
xchg
movsb
fwait
sub
decl
push
insl
add
js
pusha
push
add
add
add
add
pop
mul
in
pushf
test
jb
add
repz
mov
stos
or
jnp
xor
mov
push
add
and
lret
mov
sub
in
imull
inc
inc
fidivl
dec
test
ret
push
adc
adc
fdivr
sub
loopne
dec
mov
push
popf
cmp
add
or
lea
xchg
lock
les
sahf
pushf
subl
adc
push
dec
data16
xchg
dec
repz
sbb
push
test
mov
sarb
mov
add
cli
adcl
inc
mov
push
pcmpgtw
mov
xchg
jno
add
mov
rcrb
sbb
aas
sbb
add
inc
fiaddl
data16
push
lret
jl
push
pop
adc
jns
out
add
sti
aas
mov
setge
and
pop
insb
xlat
mov
jp
cmp
jp
aas
enter
inc
rclb
mov
cli
fistps
xchg
pop
push
loopne
inc
sti
mov
jb
add
and
lret
add
in
rol
jns
add
inc
jge
aas
add
les
addl
push
dec
sub
sbb
add
push
sub
fimull
ljmp
xor
jp
jbe
jae
xlat
add
sbb
mov
mov
in
xchg
outsb
aam
inc
add
add
add
sub
repnz
pusha
xor
repz
add
mov
cmpl
xor
and
add
nop
sub
mov
out
push
and
inc
add
imul
sub
add
add
in
inc
adc
test
movsl
push
popl
push
add
add
lret
leave
call
mov
pop
shll
add
add
xchg
cmp
pop
jb
cmpsl
std
cmpsl
mov
sahf
add
test
fs
insl
stos
add
leave
scas
add
mov
movb
and
pusha
test
in
dec
lahf
pop
scas
xor
mov
add
fwait
test
add
mov
hlt
data16
jl
mov
sub
jle
lds
sbb
sbb
pop
or
add
lcall
pop
in
mov
out
scas
push
jge
add
sahf
lret
js
jp
not
aam
push
add
sbbb
incl
xchg
xor
mov
lahf
jle
aad
mov
cmp
cmp
mov
or
push
outsb
add
popf
data16
mov
or
xlat
outsl
mov
jl
add
dec
pushf
xor
push
add
in
xchg
popa
popa
jnp
jp
adc
xor
xchg
add
mov
pusha
cmpb
dec
dec
add
and
xchg
scas
and
fwait
mov
pop
jecxz
pop
sbb
adc
push
xchg
fidivl
mov
pop
les
and
inc
and
cs
dec
leave
or
mov
sbbl
lahf
pop
mov
out
sub
stc
mov
iret
ja
push
mov
pop
jl
cmpsb
fstps
jae
icebp
add
and
out
push
lea
outsl
mov
add
xchg
and
add
cltd
mov
faddl
add
adc
add
inc
or
xchg
adc
ret
mov
cmp
mov
je
dec
ror
add
inc
jecxz
add
xor
or
xlat
push
gs
in
loopne
mov
gs
pop
ret
out
pop
ds
stos
ja
jae
gs
pop
add
pop
add
add
add
cmpsl
push
add
popf
roll
adc
enter
sti
fsubr
jno
cltd
repz
jne
das
fdivs
fs
add
loopne
fidivrl
add
sbb
mov
adc
into
roll
sub
dec
movb
sub
daa
bound
cmpsl
dec
sahf
inc
cli
es
sbb
and
jnp
jmp
and
ljmp
movsl
cld
mov
pop
mov
cmp
cmp
inc
cmpsb
xchg
push
inc
insb
mov
call
adc
push
inc
jo
push
adc
push
add
mov
add
addb
add
add
nop
add
cmp
cli
divb
cli
and
mov
and
inc
mov
push
inc
dec
stos
add
sub
hlt
aam
lds
movsl
push
aas
imulb
ret
xchg
scas
aad
popa
or
dec
dec
daa
add
mov
pushf
mov
lret
pusha
inc
mov
in
push
sbb
pop
add
inc
pop
inc
mov
jp
add
outsl
iret
or
dec
xor
iret
es
xchg
add
xchg
sarb
mov
or
movsb
sbb
flds
cwtl
push
sub
jge
inc
jge
push
add
cmp
dec
repz
cltd
add
fucomip
add
add
enter
mov
roll
into
cs
lods
in
add
lods
fsubs
add
das
roll
add
push
pusha
popl
pop
fldl
popa
add
notb
sub
cmovle
add
sub
cmp
xchg
addl
pop
jmp
mov
pop
idivl
mov
add
imul
es
dec
shlb
pushf
fwait
mov
mov
aaa
pop
leave
add
jo
jp
lods
push
gs
pop
mov
add
popa
add
iret
inc
in
call
jno
lods
sbb
add
xchg
push
add
insb
rcl
cld
mov
call
in
xchg
or
hlt
add
mov
int3
add
add
pop
push
push
lock
ficomps
in
mov
and
mov
push
xor
adc
jbe
xor
iret
push
ja
sub
mov
aaa
inc
xor
push
mov
test
xor
add
adc
stos
lahf
cvttps2pi
xor
push
inc
and
xchg
cmp
push
rcll
add
jmp
add
add
ret
aam
mov
push
pushf
dec
dec
test
cmp
icebp
cmp
jmp
mov
mov
loope
mov
inc
ja
outsl
xchg
xchg
inc
mov
scas
sbb
inc
test
ds
es
fwait
mov
lods
jb
xchg
stc
add
into
add
clc
hlt
into
int3
hlt
call
aas
mov
popl
in
push
mov
out
jge
cmp
das
clc
cmp
mov
xchg
add
cs
push
nop
cli
add
ljmp
xor
push
ss
jb
jnp
orl
add
cmc
lret
add
das
cmp
mov
add
xlat
inc
gs
add
jle
inc
cmp
fists
push
pop
mov
and
shrb
hlt
pop
enter
lods
cmp
pop
fisubs
out
sbb
clc
xor
or
adc
movsl
ficoml
jo
fwait
and
mov
fistpl
cmp
sbbl
fstps
sarl
rolb
mov
pop
clc
xchg
incb
pusha
add
pop
repz
sub
push
cli
add
push
inc
fldenv
out
adc
and
push
add
gs
jge
or
loopne
cmp
add
add
lret
inc
dec
or
xchg
add
aas
mov
mov
adc
lret
cltd
add
imul
and
mov
lret
cmp
push
or
sub
cmc
inc
sarl
pop
xchg
cmp
sahf
loope
sahf
inc
jo
ds
leave
mov
movb
sub
mov
vmovlps
mov
rorl
xchg
xlat
aam
and
jb
out
rolb
outsb
dec
in
add
xchg
enter
mov
icebp
push
ret
cmp
clc
push
pop
fwait
xchg
fcoml
or
fisttpl
pop
in
fwait
sub
stos
cmpsb
std
mov
sbb
mov
sarl
int
mov
bound
js
inc
sahf
pshufw
out
jbe
push
out
stos
or
mov
push
or
sub
sbb
pushf
add
fsubrl
rcrb
xchg
dec
icebp
arpl
push
sbb
and
pushf
mov
add
lahf
add
test
xor
ds
sub
in
sbb
add
rcrl
icebp
adc
add
lds
sti
add
or
jno
movsl
sub
sbb
adc
scas
jno
rcll
stc
sub
cwtl
sbb
mov
mov
testl
add
add
scas
add
add
mov
repnz
lea
xor
jecxz
bound
rolb
xor
clc
adc
cwtl
xchg
mov
xor
outsb
dec
or
push
add
add
cmc
mov
fiaddl
ljmp
adc
sqrtps
mov
add
pop
push
mov
push
into
jbe
add
ret
add
in
jo
das
test
pushf
stos
pop
loope
add
add
popf
mov
or
inc
je
std
push
sbb
mov
lret
mov
leave
lret
cmp
sbb
pop
add
dec
push
cld
add
adc
lea
idivl
out
sarb
add
sti
sub
push
jecxz
pop
in
add
add
popf
cltd
xchg
xor
mov
testb
movsl
mov
pop
js
movsl
add
and
pop
or
xchg
push
or
repnz
mov
icebp
lods
int3
pop
roll
sub
add
aaa
add
loop
sub
lea
orl
mov
dec
lods
pop
repz
inc
sub
mov
fstps
movsl
xor
pop
ds
cmp
inc
jp
xor
idiv
add
pop
cmp
xor
cld
cwtl
inc
push
push
xchg
sahf
inc
push
push
and
adc
mov
lock
mov
cmp
add
jl
mov
mov
cmc
sbb
scas
fstl
mov
add
xchg
paddb
mov
test
pop
mov
test
xchg
pushf
pop
imul
popl
dec
sbb
mov
into
loopne
add
push
jg
adc
insb
add
add
scas
mov
add
loopne
nop
in
gs
repnz
aam
jne
add
cmp
or
add
pushf
push
jg
cs
and
and
and
sbb
cmp
xlat
jmp
popa
and
xor
lods
cmp
add
sub
xor
bnd
inc
popa
lock
xchg
loopne
jge
dec
add
scas
cmp
mov
ret
mov
mov
jl
lock
add
xor
filds
add
cwtl
and
aaa
test
push
sbb
ljmp
add
pop
xlat
shll
and
and
jno
rol
add
imul
cmp
lahf
aas
insb
clc
adc
cmpsb
cmp
jle
rolb
add
les
movsb
out
inc
insl
fisubl
dec
lret
push
fstl
pop
jl
xor
jb
add
add
cmp
jmp
rolb
sbb
and
add
sub
sub
scas
repz
mov
lods
repz
fistpll
mov
xchg
sbb
js
div
jg
or
add
cmpsb
inc
add
icebp
mov
loope
outsb
popa
ljmp
arpl
mov
sbb
sub
test
sbb
imul
nop
and
mov
mov
aaa
cwtl
stos
sbbl
sti
mov
pop
inc
clc
mov
push
add
inc
es
call
mov
icebp
sub
inc
cmp
mov
xchg
icebp
movsl
xor
jb
push
pusha
push
sub
inc
std
add
adc
pushf
nop
nop
inc
and
mov
movsl
test
sub
iretw
jno
pop
add
add
or
into
popf
int
cmp
mov
xchg
daa
std
inc
outsl
dec
adc
orl
fsubrp
jle
add
add
sbb
mov
ds
lret
push
dec
add
outsl
sub
jns
and
xor
shll
cmp
push
cmp
add
roll
push
sub
hlt
aam
sbbb
push
cmpsb
xor
jmp
xlat
sub
lahf
pop
add
sti
imul
xchg
test
push
mov
pop
mov
push
pop
add
or
add
movsb
out
pop
lods
mov
mov
pushf
add
sbb
jmp
jle
add
out
inc
pushf
cld
cmp
xor
repnz
add
add
add
add
sbb
out
add
ja
out
add
mov
xchg
mov
dec
jbe
mov
movsl
dec
jns
xor
mov
movsb
add
jae
add
jbe
add
mov
lds
mov
sbb
push
stos
out
add
leave
jg
add
push
hlt
adc
aad
mov
and
push
push
add
push
jmp
add
lahf
aam
mov
adcl
xchg
ficoml
jno
mov
shll
adc
adc
jle
inc
addl
out
add
sbb
add
stos
outsl
sahf
lea
add
and
das
add
xor
and
ljmp
mov
in
inc
xor
xor
add
push
jb
inc
lods
out
inc
cmp
in
add
mov
aaa
ja
and
add
outsl
test
lret
arpl
add
dec
mov
roll
xchg
cmp
xor
and
add
xchg
pop
fdivl
dec
cmp
lods
push
add
add
add
cld
add
xchg
adc
push
cmpsl
mov
or
loope,pt
notb
add
pop
add
adc
add
xor
scas
dec
dec
inc
cwtl
or
mov
or
cmp
add
stos
xchg
sub
mov
sub
aad
test
sbb
rcll
jmp
movsl
sub
popf
aad
pop
push
add
dec
rol
mov
fwait
leave
add
adc
add
mov
add
add
ficomps
xchg
ss
mov
cmp
xchg
xchg
ret
push
and
nop
xor
call
xor
iret
fidivs
mov
sbb
mov
add
decb
jbe
jecxz
test
mov
stos
push
add
andb
movsb
shlb
pop
jno
inc
out
push
popa
sbb
jb
push
adc
scas
mov
mov
ss
outsl
lods
popf
std
ljmp
aad
dec
add
cmp
adc
ljmp
and
add
iret
mov
sub
outsl
enter
inc
fbstp
xchg
xor
add
xchg
add
add
ss
fsubrl
add
sub
add
jecxz
jno
xchg
cld
sbbl
lock
add
inc
imul
lcall
add
fdivrs
insb
insb
add
pop
jae
gs
stc
fdivs
bound
jge
push
xchg
pusha
loope
pushf
add
sub
fmull
jns
pop
jno
stc
hlt
jecxz
add
movl
les
ds
hlt
jmp
xchg
adc
push
push
hlt
sub
js
jecxz
sub
sub
add
jecxz
popa
or
mov
mov
push
mov
cld
mov
loopne
xchg
test
scas
add
add
jno
fdivrl
lea
push
cmp
push
push
bsf
jae
fcoml
xchg
adc
loope
add
add
dec
stc
xchg
add
dec
frstor
scas
mov
test
stos
adc
mov
and
pop
movsb
adc
push
andb
das
pop
cmp
roll
xor
in
adc
imul
sbb
and
sub
cmpl
add
lret
mov
scas
icebp
cmp
lods
jnp
int
scas
movl
fld
imul
andl
push
push
add
fadds
addr16
add
mov
sub
fs
add
imul
mov
mov
orb
fistl
lods
imul
jns
sbb
adc
add
pop
or
mov
dec
aam
psubsw
mov
add
je
mov
inc
mov
test
mov
movsl
mov
loopne
lret
insb
repz
aad
popa
add
enter
sub
add
add
add
fwait
jne
push
add
xor
cmc
jae
fidivl
mov
add
jecxz
ljmp
lods
pop
fwait
jns
add
iret
xchg
fwait
push
cli
mov
mov
js
icebp
add
add
lahf
jle
mov
stos
add
mov
cld
or
cmp
or
pop
add
rcrb
mov
aas
dec
jp
ror
push
loope
add
add
lcall
enter
inc
cmp
or
repz
xlat
xor
dec
enter
add
mov
dec
push
cmpsb
aad
popf
push
adc
outsl
sub
scas
mov
outsb
pushf
add
dec
lret
hlt
and
in
ret
and
inc
mov
and
pop
fadd
pop
mov
sub
add
dec
pop
movsl
push
sarl
inc
xchg
add
loopne
in
cwtl
jbe
int
add
mov
add
add
add
and
fdivl
out
pop
add
add
data16
xlat
xlat
pop
pop
mov
add
jmp
push
movsb
add
dec
add
insb
add
je
cmp
and
data16
add
xor
dec
jge
pop
ret
push
mov
dec
fiaddl
and
pop
or
gs
repnz
add
insl
add
xlat
mov
movsb
jno
jp
cmc
movsb
adc
pop
sub
and
sub
xchg
inc
push
andl
xor
push
ss
and
pop
push
lods
add
cmp
lret
or
subb
add
fbstp
cmpsb
fldenv
jo
ret
xchg
repz
mov
cmp
cltd
xchg
dec
lcall
popf
mov
mov
sub
add
jl
pusha
add
add
cmp
faddl
jp
xchg
incb
cltd
add
mov
add
and
add
mov
inc
or
jecxz
jne
sbb
cwtl
shr
adc
add
loopne
loope
into
mov
pusha
xor
scas
add
sub
mov
cmp
incb
jle
xlat
pop
cmpsb
movsl
rcll
add
xchg
pop
add
das
aad
hlt
push
addr16
sub
pop
popf
insb
pushf
cs
mov
cmp
mov
adc
lahf
add
adc
dec
test
decb
mov
add
lret
jp
jo
mov
push
push
pop
sbb
mov
add
adc
xor
js
fcomps
jae
push
adc
sub
fnsave
testl
add
in
cmp
cmp
lds
or
fmuls
push
mov
push
loope
mov
call
cmp
add
stos
scas
jae
pop
cmp
add
pop
push
test
adc
xor
sbb
rcll
add
inc
mov
cmp
in
ret
arpl
xor
inc
in
test
add
popf
sub
pop
mov
sbb
pop
xor
popl
shlb
imul
add
enter
add
xchg
or
aam
je
pop
add
and
mov
pop
jno
mov
rolb
mov
fldenv
add
mov
or
mov
pusha
add
add
add
or
mov
jp
cltd
pop
loopne
loop
adc
fiaddl
xlat
xor
sbb
jb
pushf
cli
fs
push
in
or
ss
mov
out
outsb
test
mov
add
sbb
inc
arpl
add
add
cli
add
xchg
lret
pop
ds
adc
lds
push
je
addr16
push
mov
mov
add
push
adc
int3
into
jg
repz
cmp
imul
roll
icebp
jle
inc
cmp
lods
and
dec
or
and
xor
stos
cmp
insb
fwait
loop
inc
add
add
stos
jmp
add
push
add
scas
inc
rclb
orl
imul
jecxz
xor
fistpl
push
adc
dec
sub
repz
jle
iret
bound
mov
xchg
sub
sub
adc
scas
in
pop
inc
cmp
mov
je
add
ss
mov
dec
mov
popa
ds
pop
test
dec
mov
xchg
pusha
sbb
add
ljmp
and
pushf
fs
inc
arpl
daa
xchg
scas
mov
jge
mov
mov
addr16
scas
mov
pop
xchg
xchg
in
pop
dec
add
lock
mov
adc
xchg
bound
scas
add
or
or
adc
add
add
shll
push
xor
xor
mov
out
mov
xlat
jecxz
dec
adc
adc
scas
add
add
fs
jl
int
jnp
jns
leave
jns
mov
aaa
sub
shrl
adc
jecxz
xchg
clc
ljmp
aaa
jno
popa
or
and
add
cmpsb
pop
add
sub
mov
enter
xchg
add
or
mov
fcoms
add
int3
test
mov
add
sub
mov
push
xchg
and
data16
inc
mov
push
mov
pop
xchg
add
mov
jnp
inc
daa
pop
add
cltd
jbe
cmp
mov
mov
pop
int
sub
jo
or
push
movsl
mov
add
add
xchg
xchg
sub
pop
mov
lcall
add
shll
xchg
insl
popa
mov
fdiv
ret
fwait
add
lcall
cltd
loope,pt
mov
add
add
inc
call
nop
insl
hlt
into
sub
sub
xchg
or
pop
mov
std
cltd
incl
into
les
mov
cmpsl
sub
add
pop
subb
mov
add
insb
mov
sub
xchg
stos
aam
jle
repz
ja
jne
cmc
int3
add
push
ss
cmp
add
out
enter
mov
or
add
pop
xor
cli
popf
push
dec
test
stc
add
add
fildl
cmpsl
jae
inc
add
and
insb
xchg
sub
xchg
dec
mov
stos
ss
and
xor
push
push
lock
dec
mov
test
xchg
or
push
add
loopne
pusha
das
mov
cwtl
inc
mov
jb
xlat
nop
mov
add
cmovg
addb
movsb
dec
sldt
cmpsl
add
push
jbe
add
push
loop
push
or
popf
adc
pop
ljmp
into
repnz
js
mov
add
data16
sub
fldenv
sub
pop
mov
xchg
mov
les
out
outsl
xor
lea
mov
sub
xor
mov
mov
sbb
lcall
sbb
lcall
mov
adc
lock
les
test
in
roll
dec
pop
cmpl
and
mov
pop
add
xor
sbb
out
xor
mov
gs
push
into
xchg
int
push
testl
insb
orb
fldl2t
mov
roll
lret
fcmovbe
jmp
cld
add
xor
inc
scas
mov
fnsave
xchg
xor
mov
xlat
add
add
cli
xchg
dec
add
jmp
add
outsl
test
add
cmpb
mov
add
xchg
push
cmp
fwait
jbe
add
fnstenv
sbb
jl
mov
add
add
inc
add
aaa
fidivrl
sub
mov
jge
xchg
clc
test
dec
into
lahf
movl
jg
mov
fldl
lock
add
add
jns
mov
cwtl
or
jne
xchg
push
push
add
in
fs
dec
std
fdivrs
daa
add
dec
cmp
pop
xchg
add
roll
push
out
int3
push
aad
add
dec
aaa
pop
rol
andl
mov
jbe
cmp
arpl
push
mov
sbb
or
aaa
int
add
rorb
arpl
mov
stos
scas
loop
test
xor
xchg
push
xor
add
add
sub
add
rdtsc
out
xor
mov
jae
insb
add
and
icebp
push
out
pop
mov
jle
sbb
xor
or
add
xor
xor
outsl
add
cmp
cmp
dec
stos
cmpsl
dec
sahf
fadds
ds
jle
xor
ret
push
scas
add
or
sbb
shl
inc
cmp
jmp
pop
push
sbb
addl
iret
cwtl
daa
ret
aam
sbb
inc
jno
add
xor
mov
add
imul
lcall
add
shlb
movb
add
js
or
xor
fildl
outsb
in
mov
add
mov
cmp
mov
add
add
addb
mov
filds
andb
add
daa
jge
add
outsl
hlt
and
cmp
aaa
or
xchg
and
add
jecxz
inc
xchg
xor
into
or
sbb
mov
inc
push
stc
js
and
dec
cmp
xchg
jae
mov
rolb
fs
mov
les
inc
dec
mov
cmp
dec
sbb
and
sub
shlb
sti
ljmp
dec
mov
ret
loope
iret
xchg
sbb
dec
inc
push
sbb
cmp
mov
popf
pop
xlat
test
adc
cld
jo
test
mov
popa
nop
daa
mov
add
scas
push
insl
inc
add
inc
xlat
or
jo
mov
add
lcall
and
add
fcoms
jnp
fisubs
std
push
filds
fcomi
add
ja
enter
fwait
in
ret
and
add
subb
push
pop
jmp
repz
loope
mov
cmp
adc
mov
sbb
cmp
xor
add
add
out
or
sbb
int3
insb
pop
sbb
out
cwtl
lcall
pop
sbb
rcrb
sbb
xor
mov
jle
push
loopne
inc
into
xchg
mov
mov
sub
jp
pusha
add
sbb
test
pop
jmp
xor
jnp
leave
sub
arpl
dec
sub
icebp
add
loope
cmp
fisubrs
call
pop
add
mov
lods
push
push
fs
inc
mov
test
jle
pop
dec
add
sti
mov
cltd
sub
push
mov
ret
out
repz
push
jb
cmc
clc
out
dec
mov
lds
repz
rolb
add
repnz
add
push
rcrl
lea
test
movsl
xchg
jae
push
leave
dec
scas
fnsave
ds
fdivrp
fisubs
adc
mov
fwait
movsl
or
push
xlat
mov
nop
pushf
add
popf
mov
les
mov
mov
xchg
add
add
testl
mov
mov
outsl
pop
sbb
add
mov
add
icebp
xchg
or
mov
add
cmpsl
addb
pusha
les
mov
sbb
sbbl
pop
dec
xchg
sbb
add
mov
out
or
call
xor
and
cmpsl
lret
push
cmpsl
jnp
push
or
add
insb
addl
jecxz
pop
lds
xchg
testb
testb
out
dec
pop
rorl
hlt
push
lods
test
add
in
jnp
pop
add
add
lret
add
add
add
loopne
pop
xchg
inc
push
cmp
add
sbbb
add
push
repnz
in
push
les
push
adc
outsl
add
xor
add
out
sub
inc
ja
inc
pop
jl
pushf
cld
add
add
push
scas
add
fucomp
out
xchg
xlat
xchg
iret
mov
inc
sub
cmp
cwtl
pop
adc
iret
out
add
adc
insl
les
push
cmp
add
inc
push
je
add
pop
stos
test
adc
push
shl
movsb
or
xchg
dec
xor
and
test
aas
cmp
add
loop
sub
shlb
xor
and
inc
js
decl
sub
add
and
icebp
dec
add
add
cs
xor
inc
aad
xor
popa
jne
std
xor
scas
inc
bound
leave
mov
add
xorl
insl
popf
int
fsin
or
test
sub
add
pop
icebp
push
add
xchg
add
aam
jl
mov
shl
add
das
out
add
pop
xor
pusha
enter
aam
jl
fsubs
add
cmpsl
add
dec
sub
mov
cmpsl
mov
into
imul
lods
out
mov
in
add
adc
xor
add
inc
sub
cli
es
add
pop
repz
jle
mov
push
pop
fcoms
jmp
and
pop
or
loop
cmp
pop
pusha
lret
add
add
cs
incb
fldl
dec
xchg
jmp
sysenter
or
mov
daa
add
test
ret
pop
addl
lcall
or
add
jge
lods
jae
pushf
mov
cmpb
xor
push
pop
inc
jb
into
das
push
jae
mov
jg
xlat
or
addb
adc
popa
xchg
bound
popa
cmp
orb
stos
mov
xchg
push
or
xchg
lds
and
call
cmp
xor
fwait
pop
mov
pop
stos
or
notb
in
mov
scas
sahf
mov
add
fwait
cltd
add
repnz
or
cmpsl
sub
jl
cmp
mov
fldenv
jo
fsubrs
push
cmp
add
adc
xor
in
add
xchg
inc
mov
mov
sarb
jns
or
and
test
jmp
add
pop
frstor
and
pop
out
stc
lcall
fwait
pop
add
mov
in
add
mov
shrb
add
add
add
das
cld
pop
mov
fisttpl
idivl
adc
add
mov
stc
in
add
sbb
std
inc
icebp
dec
lcall
fiadds
mov
fadds
inc
ret
nop
add
pop
pop
iret
das
mov
cli
mov
and
add
popa
pop
addr16
pushf
sub
in
adc
testb
add
inc
add
pop
push
lods
and
add
cmp
mov
sti
cmpsl
push
lds
mov
xlat
pop
xchg
push
or
xchg
dec
mov
flds
xor
scas
add
xor
and
xchg
cli
ss
cmp
in
cmp
mov
cmp
data16
lods
adc
push
aas
icebp
lock
mov
dec
in
lahf
out
mov
cmp
pop
add
ja
outsl
add
jbe
popa
lahf
pop
bound
add
fwait
sub
sldt
add
gs
xchg
sbb
mov
fistpll
insl
adc
fwait
jmp
add
lret
xchg
xlat
jl
int
xadd
add
inc
out
push
cld
bnd
dec
subl
add
shll
add
add
lds
imul
pop
aad
cmp
add
rcr
add
push
add
add
push
fidivrl
jle
rorb
sbb
roll
adc
scas
xchg
js
inc
xchg
pusha
jp
hlt
jl
aaa
fistpll
les
and
add
cmp
add
adc
sub
lods
fldt
es
out
out
add
add
adc
jecxz
sub
jns
pop
mov
jge
fiaddl
mov
ljmp
mov
xchg
add
lods
jne
pop
bound
icebp
pop
add
shlb
daa
clc
push
pop
dec
pop
adc
jne
xor
mov
flds
arpl
in
add
jge
insl
sub
out
sub
mov
add
pop
iret
cmp
xchg
add
jb
xor
insl
and
cmpsb
movsl
xorl
add
les
fldenv
clc
pop
push
mov
sbb
loope
xchg
in
add
movsl
jns
arpl
movl
jnp
push
mov
xchg
mov
dec
add
into
clc
cmp
cmp
andl
ljmp
push
add
pushf
sarb
or
xchg
movsb
incl
adc
fwait
add
test
add
movl
add
insl
cmp
sub
lds
add
pop
test
std
add
jmp
aas
add
jmp
add
and
add
and
and
in
repnz
push
imul
pop
pusha
aas
das
outsl
in
sarl
cmp
enter
pop
fbld
adc
add
add
into
lret
add
push
addr16
add
add
jo
add
xchg
fiadds
inc
jmp
ds
jecxz
cmpsl
fldl
inc
add
xchg
xchg
sbb
pop
mov
xchg
add
sti
clc
xchg
sub
adc
xchg
sub
jns
push
fs
jb
mov
in
add
pop
hlt
and
lea
mov
add
sbb
inc
add
repz
roll
xor
in
xor
insb
insb
and
dec
cmp
xrelease
lret
add
fucompp
xor
add
jo
push
mov
pop
xor
jae
add
xchg
lock
push
xchg
add
pop
loope
incb
fdiv
jmp
lea
add
aad
sti
add
mov
data16
testl
test
jle
and
jge
add
add
sub
mov
dec
sahf
mov
sti
inc
test
divl
stc
and
cwtl
cli
adc
aas
pop
inc
push
or
add
rolb
ds
outsl
add
inc
mov
mov
das
nop
mov
xchg
divl
add
adc
pop
or
sbb
addb
mov
jno
mov
jp
xchg
loope
out
xchg
add
insl
ds
sti
movsb
and
les
jo
shl
add
pop
add
or
lcall
mov
push
jo
add
xchg
jge
hlt
leave
xchg
fistpl
add
add
add
jb
push
mov
fists
mov
lahf
add
add
test
lahf
and
add
js
dec
lock
dec
add
push
mov
sub
mov
mov
insb
or
ja
ljmp
and
mov
cld
pop
sbb
out
inc
pop
clc
add
cmp
ffree
push
adc
jnp
repz
in
sub
mov
add
icebp
scas
add
inc
xor
jb
mov
jo
jns
pushl
add
mov
sub
jae
mov
fmull
xchg
lods
and
int
cmpsl
add
sbb
adc
hlt
add
in
or
cmp
je
scas
add
xchg
push
lds
out
dec
or
and
push
mov
jmp
and
pop
les
test
and
cmp
pop
jecxz
repz
jb
nop
cmp
mov
jb
pmulhuw
dec
les
cmp
in
and
mov
cmc
adc
nop
adc
jne
cwtl
push
or
ss
push
mov
mov
push
push
add
les
xor
inc
pop
out
mov
scas
fldl
subb
sbb
jo
loop
dec
jnp
xchg
pop
xchg
in
pop
push
loope
jo
stos
cmp
xchg
push
mov
sub
sub
pop
cli
mov
add
pop
cmpsl
mov
xor
incb
hlt
mov
test
fbstp
dec
outsb
into
fdivl
ds
add
push
xor
jo
mov
sub
stos
mov
and
sub
xchg
xchg
sbb
and
bound
sub
xchg
enter
sub
mov
sbb
jg
cltd
icebp
js
outsb
pop
mov
pop
inc
dec
and
jnp
add
in
adc
add
mov
inc
push
sub
nop
fidivs
out
test
mov
add
repz
stos
mov
scas
roll
iret
ljmp
ret
push
add
and
insl
mov
sub
shlb
sbb
mov
aaa
mov
lea
out
pop
addl
fnstsw
dec
sbb
inc
add
and
enter
js
or
push
xor
subl
mov
add
xlat
movsl
aas
iret
xchg
adc
loope
jne
sub
roll
jne
add
cwtl
dec
fdivrl
add
inc
push
mov
adc
add
or
push
fdivrl
pop
pop
xrelease
mov
ljmp
fisttps
lahf
xchg
add
stos
jns
dec
ja
or
inc
or
dec
add
lahf
push
ret
dec
hlt
rolb
jo
add
or
outsl
jbe
add
loope,pn
jo
cmp
adc
add
push
in
sbb
pop
mov
roll
add
xor
mov
mov
in
fstpl
add
movsb
add
add
aam
out
lcall
add
add
lds
mov
in
clc
push
leave
xor
xor
cld
fildl
test
pop
movsl
add
dec
loope
lea
add
xor
add
cmp
scas
add
add
add
repz
pop
dec
sub
int3
add
add
mov
pop
aam
jl
lock
xchg
rcrl
dec
out
push
orb
aas
in
dec
add
lods
adc
dec
cs
mov
decl
pop
std
dec
rcl
dec
loopne
push
das
inc
jae
mov
add
inc
fnstenv
sti
insb
in
jecxz
adc
add
xchg
xor
dec
test
outsb
mov
ror
mov
rclb
lret
mov
sbb
xorl
pop
add
pop
pop
inc
mov
cld
stos
add
and
ja
mov
ret
mov
push
das
lds
in
aas
push
push
scas
ja,pt
arpl
add
add
push
xorl
jnp
add
fwait
dec
cmp
adc
adc
inc
in
add
enter
add
loop
xchg
xor
cmp
pushf
leave
cmpsb
or
sbb
add
aad
pop
inc
popf
test
int3
sub
adc
je
hlt
push
test
jb
outsl
mov
jmp
aam
sti
mov
cld
add
gs
int
pop
xchg
add
adc
rolb
xor
jno
repnz
in
mov
push
mov
bound
push
pop
stc
xor
adc
mov
pop
sbb
or
addr16
imul
ss
mov
sub
in
push
lods
mov
xchg
adc
jnp
sub
mov
add
mov
add
cwtl
add
xor
loope
repnz
pop
jns
cmp
sarl
test
fisubrl
add
pushf
dec
test
loop
adc
aaa
jge
xchg
data16
and
cmp
xlat
and
dec
inc
shlb
jb
cmp
loope
mov
add
cmp
add
das
and
lcall
test
addl
inc
xorl
test
or
and
ret
pusha
dec
xchg
cmpb
push
pop
and
loop
jl
mov
hlt
mov
inc
jle
movsb
scas
loop
out
sub
shrl
ror
xor
and
aas
sub
nop
data16
je
inc
test
add
stos
push
cs
lcall
dec
adc
out
std
mov
mov
ret
fucom
add
cmp
add
add
test
xor
dec
rorb
shll
mov
loop
pop
xchg
scas
push
cmp
sbb
stc
adc
add
add
addr16
int3
add
lods
add
or
stos
add
mov
lods
add
aas
ret
inc
add
push
add
add
repz
cmp
jp
mov
mov
aas
xor
loop
aaa
adc
push
xchg
call
add
mov
add
movsb
push
xor
xchg
add
data16
inc
xchg
dec
jae
jmp
jbe
add
scas
add
subl
mov
add
ja
pop
jb
test
fistl
pop
push
push
sub
mov
cmp
aaa
in
mov
add
sub
pop
cmp
int
jne
mov
sub
notl
dec
mov
mov
add
mov
mov
add
jl
inc
movl
cmp
js
sbb
cs
cmp
inc
fwait
add
adc
xchg
sub
push
push
outsb
cmp
imul
jne
xchg
sub
inc
out
add
mov
in
sbb
add
fs
mov
mov
stos
rol
stos
into
adc
dec
add
inc
push
inc
les
or
jmp
addl
cli
sar
in
pop
lret
push
cltd
jne
popf
imul
xorl
mov
mov
xchg
xchg
xor
jnp
iret
dec
or
incl
jnp
addl
imul
add
add
jp
push
cli
add
mov
dec
xchg
or
fsubrs
and
jmp
xchg
and
push
daa
cmp
cmpsl
and
cs
inc
addb
cmp
scas
scas
mov
mov
ljmp
mov
xor
mov
dec
push
int
xor
mov
cmp
jle
dec
add
cmp
sub
adcl
add
add
xor
add
dec
jp
push
scas
dec
cmp
mov
or
mov
dec
test
and
add
sub
icebp
int3
adc
cmp
adc
lret
push
sbb
add
lcall
std
add
push
fadds
cmp
inc
mov
aad
push
stc
add
push
les
inc
clc
mov
add
adc
das
pop
daa
lret
push
repnz
xchg
mov
test
rcr
es
jecxz
pop
popa
pop
dec
pop
cmpsb
fnsave
arpl
pop
fwait
cmpsb
shlb
sahf
jbe
out
loop
bound
add
mov
mov
jl
push
adc
fcmovnbe
mov
cmp
in
negl
imulb
push
dec
adc
sbb
sub
mov
pusha
or
test
add
pop
mov
lea
or
adc
mov
les
out
mov
dec
pop
test
aas
je
jg
js
xor
mov
in
in
fidivl
sub
and
scas
aaa
cmp
movsb
add
or
out
add
mov
rcrl
adc
lods
movsl
sub
iret
lcall
inc
add
ficoms
xchg
add
xor
add
cwtl
lock
add
stos
adc
add
icebp
jb
mov
or
aaa
gs
imul
add
add
adc
jo
dec
clc
add
add
or
fsubrs
push
arpl
stos
or
push
aad
dec
imul
aas
add
mov
popa
push
inc
ss
add
add
mov
lods
push
cmp
pop
imul
das
lret
ret
add
inc
mov
pop
push
ss
js
pop
fs
daa
jae
es
add
and
push
sub
sahf
mov
jae
ret
add
cmp
lods
hlt
dec
dec
xchg
add
adc
cmpsb
leave
add
cmp
andl
xor
mov
xchg
cmp
inc
fdivs
fbld
int
shll
iret
lea
add
lods
inc
add
adc
ljmp
push
mov
add
xlat
adc
dec
mov
mov
dec
add
cwtl
imul
add
xor
insl
jae
mov
mov
add
negl
push
dec
enter
add
add
and
or
enter
cmp
jmp
pop
add
loopne
mov
xor
push
pusha
jmp
aad
fwait
std
add
shll
or
jg
mov
cmpsb
ficompl
inc
cld
add
pop
fmull
add
xchg
sbb
clc
mov
sub
mov
mov
fistpl
add
xchg
and
fistpll
fidivs
mov
mov
add
jge
mov
rcr
push
jmp
rcr
xchg
mov
mov
in
verr
jns
inc
aaa
bswap
mov
add
in
push
or
and
into
iret
xchg
pop
add
jle
add
mov
cmp
pop
and
mov
test
mov
imul
xchg
adc
into
push
sbb
inc
into
push
stos
add
les
or
decb
mov
xor
add
pop
icebp
push
popf
jae
xchg
sbb
pop
sub
icebp
push
loope
and
add
adc
fsubl
sbb
mov
mov
stos
xor
stos
mov
test
or
push
inc
add
add
outsb
int3
fisubrs
clc
xor
lea
sub
or
xchg
scas
test
repz
daa
pop
add
arpl
icebp
enter
pop
imul
cltd
xor
into
cmp
mov
sahf
sub
lods
add
inc
ja
aaa
je
out
sbb
add
rolb
jle
add
mov
push
add
inc
add
movsl
add
mov
mulb
push
test
add
in
add
mov
cmp
jl
lret
scas
imul
mov
call
add
add
pop
pop
movsl
push
aad
add
in
andl
pusha
enter
movsb
es
xchg
outsl
pushl
add
pop
jecxz
xchg
jp
inc
shlb
aaa
movsb
xlat
mov
cmp
dec
xchg
inc
je
subl
push
popa
ljmp
add
dec
mov
xor
mov
xor
arpl
add
jp
push
cmp
push
pusha
adc
xor
or
ja
inc
mov
ja
in
faddl
add
jg
sti
inc
and
es
inc
push
adc
es
jns
fisubl
adc
add
lock
cmpsl
sbb
add
jae
mov
add
gs
and
punpckhbw
gs
push
add
outsb
and
ficomps
add
mov
jne
iret
lret
mov
and
add
add
adcl
cmp
mov
dec
push
push
push
and
in
push
cmp
inc
stos
add
mov
sti
popf
jmp
mov
mov
or
add
bound
lods
ja
cmp
shl
and
pop
add
mov
adc
imull
fs
mov
sub
mov
jmp
out
jp
arpl
add
sahf
popf
pop
jnp
push
mov
cmp
xchg
lds
faddl
int
ret
sub
add
dec
lret
xchg
push
cmp
add
dec
cmp
mov
xor
lret
sarb
add
add
add
mov
movsl
mov
add
add
shll
dec
idiv
je
lock
lahf
into
mov
negl
sub
int
cmp
and
xchg
out
lds
fs
xlat
sahf
inc
jns
popl
sbb
inc
add
filds
and
and
add
adc
and
and
mov
sbb
jae
movsb
ret
and
shrl
fsubrs
stc
mov
js
fnop
pop
add
push
mov
mov
js
add
stc
add
lds
jl
mov
or
push
add
dec
ljmp
xchg
xor
nop
add
sub
dec
pop
jmp
fistpl
add
test
repz
fwait
hlt
enter
add
and
mov
adc
fsubl
adc
roll
mov
cmp
xchg
add
cmc
sub
add
pop
dec
add
scas
add
add
test
xorb
ds
jne
mov
out
into
cmp
push
xchg
xlat
sub
leave
push
mov
cmp
xchg
mov
aam
sub
jecxz
sbb
sbb
nop
mov
ljmp
push
adc
movsl
push
call
mov
xchg
js
out
add
mov
fcmovnu
add
inc
mov
jo
popl
pop
pop
fnstenv
aad
ja
out
dec
mov
lahf
or
pop
gs
add
ret
xchg
popa
add
push
cmp
pop
mov
lock
mov
cmpsb
int
imul
or
add
cmpb
imul
fnstsw
add
adc
mov
sahf
rol
shrb
xor
out
and
cmp
cmp
mov
add
cmp
fldl
add
dec
je
in
add
addr16
cmc
adc
mov
cmp
insb
dec
dec
and
add
repnz
pop
in
xchg
and
sub
lret
fiaddl
sbb
pop
jecxz
add
dec
imul
setl
cmp
dec
or
inc
dec
fidivrl
add
pop
add
stos
add
mov
rolb
mov
add
loope
sbb
test
and
in
roll
push
cwtl
add
fcoml
cmp
inc
jl
jnp
pop
push
sbb
jecxz
inc
repz
xor
push
xor
add
jno
inc
cwtl
jae
mov
fs
inc
add
xchg
adc
incl
xor
and
sar
add
xor
xor
jp
jle
sub
add
mov
push
or
pop
aad
aaa
inc
add
inc
jns
jmp
jge
jl
cmpsl
cmp
push
and
cmpsl
test
fs
sub
jne
sub
std
add
stos
push
movsl
popa
aam
xor
stc
pop
imul
xchg
in
bnd
sub
mov
xor
xor
inc
pop
int
mov
movsb
xchg
mov
call
jns
push
lock
movsl
xor
add
nop
or
jb
lods
add
add
add
lea
xchg
push
push
jbe
push
fs
mov
mov
and
sub
mov
xchg
in
mov
xorl
jo
mov
or
aad
add
mov
adc
add
add
pop
dec
loop
test
inc
mov
add
iret
das
roll
notb
add
mov
add
cwtl
cmp
subl
js
and
ffree
sbb
dec
popf
into
xchg
test
les
xor
add
or
hlt
pop
add
push
sbb
push
lods
leave
fsubl
ret
pop
sub
inc
mov
clc
add
test
jp
in
sub
add
inc
mov
mov
scas
pop
jl
sub
mov
es
pop
mov
add
outsl
add
scas
add
xlat
scas
dec
imul
shll
mov
mov
jmp
ljmp
into
add
dec
int3
jle
xor
aaa
add
add
dec
add
xchg
dec
xchg
pminub
lcall
lahf
fdivr
xchg
outsb
pop
mov
cmc
je
mov
add
jmp
add
xchg
and
scas
shll
add
add
xor
add
xchg
aas
mov
or
out
add
scas
pop
add
lods
mov
sbb
cmp
add
imul
sbb
nop
popf
inc
pop
aas
lcall
or
out
cmp
sbb
cmpsl
add
mov
mov
fwait
add
add
add
or
fnstsw
add
xchg
jge
xor
movsb
ljmp
fs
stos
psrlq
mov
jbe
imul
mov
test
adc
leave
sub
inc
add
cld
addr16
sti
xor
add
int3
dec
pop
add
and
mov
add
loop
rolb
cs
mov
ret
popf
mov
xchg
imul
cwtl
jb
adc
lea
js
push
ja
shlb
cltd
stc
sbb
push
fisttpll
in
mov
ficompl
or
aam
jg
jmp
popf
nop
mov
test
push
mov
int
add
mov
fdivl
cmp
sbb
sbb
movb
add
dec
in
insb
test
dec
sub
inc
aas
mov
in
or
lods
dec
pop
repz
push
sbb
or
cmpsl
add
add
jmp
sub
xchg
adc
jecxz
imul
scas
jo
adc
mov
idivl
mov
dec
or
or
add
cmp
add
jg
iret
iret
das
dec
sub
sti
add
adc
mov
add
push
xchg
or
cmp
mov
jae
add
lds
sbb
xor
popa
add
dec
or
push
popa
inc
add
xchg
cmpsb
into
sbb
push
xor
mov
sub
cmc
cmpsb
loopne
mov
lcall
push
xlat
imul
in
add
js
outsl
xchg
das
clc
in
xor
ja
movsb
mov
jo
pusha
dec
ret
cmpsl
push
ret
cmpsl
mov
add
mov
mov
decl
test
hlt
dec
inc
push
xor
push
mov
xor
je
cmp
clc
das
add
push
sub
movsl
fbld
and
xor
callw
lret
mov
jmp
daa
add
out
dec
leave
lods
enter
fidivrl
jle
xchg
adc
sahf
and
nop
into
mov
cld
mov
inc
push
dec
add
mov
js
add
filds
sbb
movsl
cmp
sbb
xchg
ret
adc
test
xlat
cmp
push
das
pop
flds
inc
stc
rcll
mov
pop
jmp
mov
jne
jecxz
mov
sub
lret
leave
push
xchg
idivb
xchg
rcrl
mov
add
jg
push
add
add
add
lds
iret
or
push
bt
add
add
bound
movsl
push
out
daa
xchg
push
fs
cmp
adc
add
xchg
xor
add
push
push
sbb
xchg
inc
xor
add
stos
cltd
orb
lods
cwtl
pop
jge
push
imulb
icebp
add
gs
push
add
pusha
icebp
fisubl
mov
lods
xor
pop
rolb
add
mov
movb
add
mov
push
pop
push
add
lret
push
and
inc
dec
ss
mov
in
and
add
cmp
insb
xor
mov
adc
cmp
icebp
test
xor
and
in
add
add
mov
iret
rolb
xchg
sub
push
testb
hlt
jge
mov
jns
push
jb
shl
sbb
in
xor
cli
js
sbb
mov
add
xchg
out
add
sub
mov
std
jmp
bswap
out
les
inc
loop
dec
movsl
jle
jne
imul
test
push
int
add
imul
sub
js
fwait
rcrb
int
push
faddl
jl
fadds
jne
add
out
sti
adc
repz
mov
insl
outsl
pop
vpsubd
pop
dec
jbe
adc
add
push
adc
sbb
or
dec
test
pushl
sbb
mov
pop
pop
add
dec
push
cmc
add
add
add
notl
inc
dec
inc
add
mov
ja
in
add
das
push
mov
fs
pop
xor
movsl
mov
popa
sbb
pusha
dec
jg
add
xchg
fldl
movsl
push
add
insb
add
dec
jmp
cmp
arpl
inc
cmp
xchg
mov
mov
sti
fucomi
mov
je
push
call
lea
enter
aam
xchg
pop
adc
cld
jns
cmp
gs
mov
add
leave
mov
iret
add
jecxz
add
enter
mov
jecxz
roll
into
fidivl
pop
add
pop
movsb
mov
sub
je
add
sub
jp
add
mov
pop
repnz
push
push
je
sbb
xchg
in
or
or
jl
inc
cwtl
negb
out
push
jg
imul
mov
loopne
sub
movsl
and
lock
mov
popa
or
cmp
outsb
sub
rcr
xchg
adcl
pop
arpl
or
mov
xor
cmp
fwait
and
adc
out
add
xor
lods
add
sbb
jmp
cmpsb
cmp
add
popa
pushf
mov
mov
inc
fdivrl
cmp
subb
mov
ret
addl
fwait
pop
repnz
cmp
push
int
push
push
add
sbb
xor
js
pop
daa
and
ds
pop
mov
push
shr
lret
add
jbe
jne
mov
stc
push
jnp
and
add
add
stos
cli
fwait
sbb
call
add
add
mulb
jle
mov
mov
stos
push
inc
add
mov
lods
xor
pop
add
arpl
outsb
add
mov
aas
xchg
in
cmp
aam
leave
xchg
ja
inc
push
adc
aad
scas
pop
rcl
aad
bound
outsb
cmpb
adc
push
enter
test
add
adc
insb
cmpsb
scas
cld
add
xor
mov
sbb
imul
ret
nop
frstor
push
push
mov
xchg
subb
outsb
fwait
and
ret
cmpsb
cli
jge
movsb
pop
xchg
lcall
sub
mov
popf
add
in
mov
test
dec
jl
out
xor
add
out
popa
add
add
rolb
xchg
add
or
lcall
popl
pop
mov
inc
dec
push
fdivs
imul
jnp
mov
outsl
push
xor
popf
add
mov
js
mov
movsb
or
add
adc
or
or
ss
jle
push
add
add
clc
sub
gs
dec
out
insl
scas
loopne
adcl
jecxz
fwait
add
loop
or
aam
xor
ret
jbe
sbb
add
sub
mov
hlt
cmp
cmp
mov
jl
adc
clc
add
subb
popf
add
inc
push
popa
or
lea
dec
mov
pop
mov
mov
cmp
sub
xchg
mov
jb
adc
push
mov
add
icebp
arpl
test
lea
xchg
scas
outsl
or
mov
lret
add
sahf
je
xchg
inc
insl
and
std
enter
mov
adc
or
lods
int
testl
cmpsb
mov
mov
lock
dec
mov
icebp
test
xchg
mov
outsb
mov
sarl
xchg
arpl
mov
push
pop
stos
cmp
add
int
or
shrl
mov
lods
addl
or
dec
in
ficoml
push
push
sub
pop
add
xchg
and
inc
addr16
cli
add
xor
out
adc
mov
rcll
xchg
inc
add
icebp
arpl
mov
inc
mov
inc
sub
ret
xlat
cmp
xchg
out
lcall
mov
or
enter
lods
adc
add
dec
lret
ffreep
or
add
dec
xchg
inc
pop
and
dec
add
sbb
fdivrl
imul
or
icebp
ljmp
mov
xor
add
add
fnstenv
mov
push
aaa
add
js
insl
les
rclb
pop
fs
sub
mov
ljmp
pop
ret
add
call
sbb
mov
gs
mov
dec
pop
jno
mov
mov
mov
xchg
xchg
sub
cmpsb
jmp
fcoms
sbb
adc
add
push
add
scas
dec
mov
add
push
popl
inc
stc
jp
jnp
cmpsl
aas
add
xchg
aaa
or
cmpsl
lock
add
add
enter
or
mov
loope
outsb
add
add
add
pop
aad
xor
jge
or
jno
test
movsl
das
dec
ret
add
add
add
ljmp
mov
push
repnz
lds
add
jno
stc
cmp
dec
cli
aaa
inc
lret
cwtl
mov
add
jg
pop
sub
dec
test
adc
rdtsc
fwait
sub
add
ja
nop
pop
add
xlat
in
mov
adc
sbb
mov
into
mov
std
shrb
mov
dec
sti
mov
push
lcall
inc
add
stc
mov
add
xchg
subb
pop
cltd
mov
rcrb
sbb
out
push
ja
loope
movsl
pop
stos
into
cli
or
mov
mov
jne
add
jmp
mov
outsb
add
mov
jecxz
push
movsl
xchg
adc
sti
into
lcall
testb
add
popa
push
jns
data16
mov
push
mov
mov
pop
cmpl
xchg
dec
or
jns
adc
dec
stc
ltr
gs
cmp
dec
lret
jno
add
add
into
pop
or
ja
cli
xorl
mov
add
fs
jg
and
mov
cmp
mov
push
imull
mov
lret
scas
pop
pop
adc
add
and
dec
lods
stos
sbb
dec
mov
cs
jb
xchg
inc
or
cmp
push
jmp
daa
inc
in
mov
cmpsb
ret
cmpsl
sub
ftst
lret
sub
cmc
mov
aam
stc
sub
add
mov
enter
add
add
mov
leave
add
xor
jg
popf
sti
jns
dec
sub
or
push
add
dec
adc
test
inc
test
add
aam
mov
das
outsb
jno
adc
movsl
bound
cmpsb
mov
xchg
add
movsl
stos
adc
int3
or
push
cld
mov
test
or
push
xor
je
fs
stos
subl
and
scas
inc
inc
aaa
ds
fwait
xchg
xor
addr16
add
cltd
push
push
mov
ficoms
movsl
ret
add
loope
xchg
xchg
cld
adc
jmp
add
pop
fmul
leave
or
pop
mov
ljmp
mov
idiv
mov
adc
push
ret
scas
push
mov
adc
or
ja
pop
mov
fs
add
add
add
mov
loop
ja
fstp
test
xor
int
adc
mov
jp
adc
jp
push
jecxz
aaa
or
add
enter
pop
test
lcall
mov
xor
cltd
jno
je
fldt
pop
fidivrl
cmp
inc
pusha
sub
mov
add
push
xor
inc
push
cmp
fs
xchg
mov
mov
mov
iret
add
add
mov
shrl
xchg
xor
pusha
push
decb
mov
orl
fdiv
out
mov
push
jo
rcrl
test
mov
in
insb
jge
sub
pop
icebp
int
fwait
add
pop
dec
xchg
cmp
cmp
pop
inc
add
sbb
mov
incl
xchg
add
mov
jns
push
call
adc
lahf
ja
bound
mov
cmp
fldl
push
shll
test
push
and
lahf
pop
mov
scas
in
jp
sub
mov
mov
cmp
gs
dec
or
test
call
add
add
test
or
sub
pop
adc
inc
or
shlb
cmp
call
push
add
outsb
cmpsb
adc
insb
fwait
add
and
nop
addl
push
jae
push
inc
hlt
int3
lea
push
movsl
mov
pop
cmp
add
pop
add
repnz
mov
testb
jb
jl
push
aaa
frstor
add
xchg
popf
pusha
add
inc
addl
cmpsb
add
add
jl
shlb
mov
sahf
mov
ljmp
test
call
push
call
mov
call
fisttpll
int
test
iret
jo
sub
pop
add
pop
lds
repnz
adc
dec
add
push
aad
jne
push
stc
add
add
dec
out
mov
stc
xor
neg
test
jmp
fmul
jge
push
das
mov
cmp
adc
xchg
lret
add
add
repz
arpl
add
push
mov
mov
out
popf
flds
out
xchg
push
std
fldt
scas
xchg
cmp
pop
mov
es
clc
movsb
and
pop
and
sub
insb
add
pop
fadds
or
pushf
cbtw
stos
outsl
out
cltd
dec
int
das
dec
pop
aad
add
cmp
icebp
das
in
add
sub
add
add
cmpsb
jne
push
cli
add
sbb
sub
and
arpl
fmull
and
lret
ljmp
loope
clc
movsl
add
gs
inc
sahf
adc
mov
sbb
or
mov
hlt
add
and
rclb
pop
jbe
cmpsb
add
loope
inc
push
aas
xchg
andnps
fs
lock
xchg
stos
inc
gs
orl
push
cs
add
cmpsl
pop
cmc
xorb
push
cltd
pusha
addr16
in
sbb
or
adc
mov
add
sbb
mov
icebp
inc
push
add
pop
jb
mov
pop
roll
insb
data16
xchg
andb
inc
aam
std
push
jae
loopne
pop
dec
jp
mov
add
mov
shrb
lahf
out
out
push
stos
scas
ljmp
xchg
loop
enter
in
inc
loopne
cmp
clts
jle
inc
andl
jno
shr
mov
or
push
lock
add
stos
cld
push
cmp
inc
adc
repz
cmp
dec
push
enter
jae
add
add
clc
fsubrl
dec
mov
mov
add
js
adc
or
outsb
and
nop
sub
shr
cwtl
cmp
inc
je
lcall
sahf
ja
xor
lea
mov
test
stos
add
push
aam
mov
sahf
mov
ficoms
sahf
cmp
rcrl
adc
rolb
jns
repz
jle
loope
add
add
add
sbb
dec
and
js
cmc
xlat
movsb
shl
arpl
and
dec
pop
leave
jecxz
add
stos
mov
pop
cmp
add
add
sbb
jl
dec
push
add
mov
mov
dec
xchg
sbb
ja
inc
add
lods
cmp
xor
cmp
xor
mov
add
sub
xchg
mov
ror
xchg
ljmp
cli
add
shlb
aad
pop
cmp
mov
scas
sub
out
mov
cli
ficoml
je
fsubs
daa
mov
negl
iret
scas
in
add
fwait
cli
dec
add
sub
sub
rclb
inc
icebp
inc
mov
ficoml
push
shll
cwtl
in
add
dec
imul
add
mov
and
and
lea
jle
pop
add
xor
mov
xor
fwait
std
xchg
mov
push
xchg
xchg
insb
add
std
add
add
repnz
inc
aaa
popl
adc
or
jmp
roll
orb
sbb
sub
dec
and
nop
jmp
out
loope
add
adc
aam
push
push
push
xchg
lret
and
adc
cmp
repz
jo
push
mov
add
outsl
mov
push
lcall
aad
add
mov
out
add
add
add
das
xchg
jo
dec
ja
sbb
jo
loop
dec
xor
outsl
lret
jae
xor
lods
push
movsb
repnz
outsl
push
or
cmpsl
idivl
stos
test
jecxz
cld
dec
xchg
verw
pop
adc
mov
cmc
mov
add
mov
mov
fistpl
bnd
add
adc
in
stc
addr16
mov
add
stos
rolb
add
out
and
movsb
jae
add
push
push
data16
sarl
ftst
and
std
mov
inc
add
pop
out
add
enter
mov
fmull
and
mov
loopne
add
and
push
test
bound
mov
add
cltd
push
flds
ljmp
add
add
mov
testb
cmp
pop
sub
dec
xchg
add
or
fisubrl
icebp
pop
sub
push
loope
add
adc
push
stc
add
mov
sahf
add
out
inc
nop
jg
and
cwtl
adc
std
pop
and
and
adc
imul
cmp
mov
pop
push
add
shlb
xor
adc
mov
scas
xchg
out
mov
add
enter
insb
jns
cld
jl
add
add
pop
inc
std
push
cmpb
mov
inc
xchg
xchg
cmp
add
mov
add
add
imul
nop
and
xchg
add
mov
aas
xor
rorb
lea
shrb
push
push
faddl
test
xchg
lret
fs
cltd
fcmovnb
add
aad
sub
sti
jae
lea
adc
dec
push
movsb
fadd
add
cmpl
add
call
sbb
imul
bound
fiadds
sub
add
add
pop
add
jg
int
data16
push
sbb
mov
mov
or
mov
add
out
adc
push
ret
andl
xlat
jns
int
ss
aam
sbb
cmp
loop
call
jo
pop
nopl
sub
dec
add
jl
inc
lea
inc
lret
cmp
push
push
mov
pop
add
push
pop
add
popa
fnstcw
stos
negb
add
dec
sahf
mov
sarl
jbe
mov
loop
popa
lcall
jle
jns
in
dec
cwtl
add
inc
sahf
xchg
dec
addb
out
fists
sbb
jnp
jne
add
out
lea
dec
push
in
daa
sub
jg
add
inc
add
mov
inc
dec
mov
pushl
sbb
dec
ja
out
test
mov
inc
fwait
sarb
outsl
jne
movsl
aad
add
pushf
add
xchg
das
insl
add
and
mov
iret
add
pop
xchg
adc
aaa
mov
jo
cmp
adc
adc
sub
push
xchg
scas
add
fcomps
add
dec
xchg
les
sbb
lds
test
add
nop
cli
cltd
push
add
push
sub
push
cwtl
jg
jle
out
test
mov
jne
imul
push
inc
faddl
pop
pop
xor
rol
scas
ds
fwait
xor
mov
lock
ljmp
add
jo
push
sahf
mov
fdivrl
sbb
movsl
add
mov
pop
mov
cltd
mov
push
xor
or
mov
test
mov
xchg
sub
cmp
arpl
add
addb
fcomp
inc
negb
stos
movl
push
mov
movsb
pop
pop
add
lds
jecxz
mov
lret
ds
add
aaa
sbb
inc
add
and
add
add
mov
loop
out
je
xchg
mov
pop
out
daa
mov
daa
jo
out
jmp
add
decb
stos
dec
add
scas
sbb
add
inc
mov
mov
lahf
and
cmpsl
adc
add
add
adc
dec
rcrb
mov
xchg
cld
insl
mov
add
aaa
mov
into
movsb
dec
adc
into
and
lods
cmc
dec
loopne
sbb
fnsave
cld
and
or
lcall
or
in
fildll
mov
aas
lods
sbb
xor
cwtl
jae
arpl
pop
and
push
or
inc
das
cmp
mov
add
jb
add
dec
push
and
loop
or
mov
dec
mov
pushf
or
sub
daa
xchg
pop
dec
or
cld
add
add
bound
and
in
das
add
jp
and
out
dec
mov
add
cmp
add
stos
icebp
stc
dec
pop
mov
sub
jle
mov
push
add
add
xchg
cmp
pop
xchg
inc
arpl
inc
lock
adc
inc
pop
jae
add
add
add
decl
xchg
xor
in
int3
lahf
xor
loopne
add
mov
mov
add
xor
sbb
push
hlt
test
mov
dec
ret
and
add
cli
sbb
mov
insl
xor
adc
add
roll
xchg
push
jmp
jnp
inc
pop
pop
nop
xor
mov
cwtl
out
mov
cmc
sub
add
call
inc
das
js
or
mull
cmpsl
add
roll
push
cmp
aad
mov
push
aas
lock
mov
dec
or
mov
adc
jp
or
cmp
mov
mov
add
pop
lret
add
xor
mov
add
mov
or
mov
shll
jp
adc
clc
lods
add
and
sbb
jge
inc
add
stos
out
loop
mov
lcall
mov
push
xchg
lods
sub
notl
cmp
mov
xor
andb
inc
add
inc
inc
mov
mov
lcall
add
movsb
mov
sub
add
add
or
gs
test
pop
inc
sbb
inc
add
int
jmp
int
adc
push
xor
add
mov
adc
sbb
mov
mov
mov
add
add
cmp
dec
test
mov
scas
pop
pop
push
faddl
incl
scas
push
cmp
insb
sub
fbstp
mov
sbb
inc
enter
sub
movl
ljmp
cmp
leave
mov
sub
add
inc
divb
add
pop
mov
add
out
cmp
xor
push
pop
add
and
test
jno
dec
test
add
in
mov
and
je
mov
aas
sbb
jbe
add
cmp
jecxz
add
test
pop
fsts
int
pusha
mov
or
inc
jp,pn
pusha
mov
js
add
xchg
jg
outsl
xor
xchg
inc
int
cmpsl
lds
add
adc
mov
repz
and
fstpt
inc
add
add
es
jns
rorb
add
pop
ljmp
popa
pushf
fadds
mov
nop
faddl
jo
shrl
sahf
sbb
add
inc
lock
ds
xchg
pop
in
add
jmp
mov
or
hlt
add
add
mov
sub
cs
mov
filds
jnp
cmp
popf
addr16
out
jae
frstor
dec
das
add
into
xor
add
and
in
xor
cmp
cld
lahf
inc
aam
leave
shlb
pop
cmp
lahf
add
mov
jne
add
xchg
sub
enter
xchg
sub
jne
add
add
jecxz
pusha
sbb
xchg
les
jl
and
fwait
add
pop
add
xchg
push
mov
and
movsb
lret
push
popf
jmp
jp
xchg
jno
add
add
cmp
test
cmp
add
sbb
add
in
std
arpl
call
add
and
jecxz
add
lds
arpl
in
ja
leave
cmp
loop
mov
aas
xchg
or
inc
jbe
outsb
icebp
sub
push
pop
rcrb
mov
int
xchg
es
arpl
pop
cmpb
xor
stos
push
add
xor
int
cmpsl
fwait
aam
std
rcr
pop
jo
dec
mov
add
inc
xchg
add
imul
and
fildll
inc
add
out
es
mov
cld
movsl
shl
mov
in
icebp
stc
fidivl
lcall
fnstenv
add
rcl
xchg
arpl
sbb
dec
push
inc
add
xor
cmc
fadd
cmp
mov
jae
sbb
dec
sub
stc
hlt
fs
sub
pop
inc
and
add
add
inc
hlt
mov
cmp
fstl
mov
or
sub
push
sub
mov
dec
leave
out
dec
leave
pop
mov
push
xor
jae
adc
xchg
je
add
imul
inc
add
add
cmpsb
sub
fmull
sbb
and
cmp
add
xlat
fwait
jnp
call
pop
mov
movsb
fildl
pop
je
sahf
xchg
xor
mov
adc
mov
and
roll
cmp
lods
add
shlb
add
xchg
std
bound
mov
pop
inc
imul
mov
sti
push
mov
nop
inc
popa
cwtl
sarb
not
cmp
xchg
stc
adc
add
into
orl
dec
in
push
outsb
pop
ljmp
lods
or
cmpsb
pop
push
add
and
add
push
inc
mov
les
jnp
adc
dec
add
les
lds
imul
idivl
lret
mov
sbb
pop
add
xor
jge
or
dec
sub
stos
push
xor
add
ss
add
xor
add
jno
push
pop
out
jecxz
mov
ret
add
mov
aad
pop
add
or
es
xor
out
push
aad
push
dec
add
aam
sbb
out
add
repnz
cmp
jbe
iret
mov
mov
cmpsb
and
lock
add
adc
xor
add
in
les
add
inc
inc
sahf
in
pop
rcpps
adc
loop
add
pop
loop
aam
and
sbb
jnp
pushf
out
hlt
in
cli
adc
or
mov
adc
movsb
adc
cmp
pushf
and
pop
jns
cli
stc
fldcw
pop
pop
mov
loopne
es
add
dec
mov
add
out
inc
rcll
cmp
mov
mov
pusha
std
push
iret
mov
or
xchg
mov
add
pushf
aad
cld
cmp
stos
mov
cmp
imul
roll
faddl
xlat
add
std
enter
xor
add
add
outsl
push
mov
gs
xchg
bound
mov
mov
push
lock
sub
clc
fadds
or
xchg
xchg
dec
lea
pop
add
insb
dec
lcall
add
sbb
test
inc
pop
mov
push
testl
fwait
lret
add
lret
and
int
mov
xchg
inc
push
imul
add
mov
ret
in
lahf
cli
add
jg
push
outsl
bound
fsubs
xchg
sub
pushf
add
fs
adc
pop
cmp
mov
mov
xor
jo
xor
imul
xor
sahf
std
jbe
es
mov
jge
movsl
jae
adc
into
xchg
in
add
and
dec
clc
les
xor
add
inc
add
xchg
pop
add
incb
pusha
jnp
xchg
dec
add
out
dec
push
jbe
add
or
in
scas
aad
dec
adcl
bound
fildl
add
aas
push
insb
mov
or
lds
xchg
ds
in
adcl
xchg
pop
testb
sbbl
fxam
pop
cmp
xor
lahf
clc
dec
cltd
push
fldl
pop
std
cmpsb
xchg
into
in
js
adc
xchg
int3
testl
dec
sbb
insb
inc
mov
test
or
sbb
shll
movl
test
addb
aad
aam
pop
incl
imul
push
xor
add
and
add
add
dec
or
pop
das
mov
jne
mov
rorb
fcmovne
xchg
idivb
mov
jecxz
int3
xor
cld
add
lods
cmpsb
mov
dec
dec
dec
add
pop
fisttps
cmp
mov
popf
mov
inc
addr16
add
fldl
fists
test
dec
cwtl
bnd
cmpsb
sarl
inc
fildll
pop
jns
add
jo
rorb
cwtl
repz
cmp
gs
rcl
aam
pop
mov
jge
loope
in
in
mov
inc
shlb
shll
xlat
xor
imul
out
add
push
jnp
addr16
pusha
int3
pop
sbb
orl
lcall
lret
sahf
pop
add
jne
sarb
hlt
push
shll
xchg
es
les
jmp
adc
int3
push
add
test
stc
add
mov
clc
sub
leave
adc
dec
insb
mov
push
lds
xchg
cmpsl
icebp
add
lds
sti
lahf
push
ret
add
aas
fbstp
sbb
fs
inc
add
repnz
mov
jle
and
sbb
repz
mov
add
jp
add
cmc
nop
lahf
mov
insb
mov
sarl
add
mov
and
adc
or
dec
lock
shlb
movsb
add
xchg
clc
xchg
shr
out
and
les
push
out
test
movsl
add
sub
mov
gs
pop
xor
jno
cmpsb
std
mov
xor
dec
jl
into
setb
add
cld
fildl
push
inc
jb
xchg
cs
add
outsb
dec
in
mov
dec
add
repz
inc
es
fs
lds
add
popf
icebp
mov
xchg
lock
sbb
sub
outsl
add
add
es
sbb
orb
lods
and
movsl
lret
fists
add
loopne
pushf
sbb
jbe
lods
sbb
mov
and
testl
mov
mov
imul
cs
jge
addr16
pop
aaa
cmc
out
xchg
ds
dec
sub
mov
imul
mov
add
push
add
and
cmc
iret
nop
mov
imul
roll
nop
icebp
nop
jmp
sti
daa
pop
mov
jne
shlb
or
enter
sub
dec
test
xor
xchg
push
fldt
fcompl
rolb
mov
mov
fs
fs
movsl
inc
sub
xchg
fldenv
pop
or
scas
outsl
mov
mov
nop
cli
insl
aam
mov
jae
iret
add
xchg
push
adc
jecxz
cmpsb
add
jmp
add
xchg
add
dec
dec
dec
dec
xor
bound
repnz
test
and
int
shrl
lcall
pop
fistpl
into
bound
adc
clc
xor
pop
push
add
sbb
cmpsl
loopne
mov
push
push
and
pushf
add
inc
add
rolb
ret
and
mov
fnstcw
jl
idiv
xor
push
sub
shlb
push
out
add
add
shlb
lea
pop
cmp
add
add
jl
and
sub
sub
cmp
cld
adc
add
lods
add
push
mov
sti
cmp
mov
sahf
push
add
mov
aaa
add
cli
jne
dec
inc
insl
hlt
dec
je
or
test
pop
subb
cmpsl
xchg
add
pop
fs
inc
imul
xor
lods
jp
add
jno
hlt
add
bnd
cltd
push
add
dec
sahf
inc
or
mov
jl
xlat
dec
addb
add
inc
pop
inc
mov
pop
xor
xchg
insb
push
into
leave
add
sub
add
test
mov
pop
add
add
test
stos
addb
das
jo
frstor
addl
jge
mov
fildl
cmpsb
add
imul
lea
lds
add
mov
lcall
add
subb
fiaddl
mov
popa
inc
jb
xchg
mov
fcoml
loope
jg
lret
jl
out
pop
adc
aas
call
mov
gs
add
push
add
scas
mov
scas
gs
jns
dec
outsl
inc
and
jecxz
out
aaa
xchg
fs
imul
inc
shll
cmp
outsl
in
aas
idivb
aam
je
xchg
cmp
pushf
add
or
fsubs
rorb
cmp
test
ret
push
add
xchg
addb
cmpb
pop
add
push
mov
add
shl
jne
mov
or
mov
orb
repz
jp
cmp
bound
jge
mov
xor
jl
lret
das
push
lret
out
lcall
xchg
stc
xchg
mov
mov
push
cmp
add
mov
push
add
sub
into
inc
jl
sbb
clc
mov
adc
iret
or
dec
lods
jge
ficoms
dec
push
mov
dec
aad
sub
ficoml
mov
add
popa
dec
rcr
jne
add
inc
adc
pop
outsb
cmp
push
das
cwtl
stos
aaa
pop
dec
add
loope
rolb
lock
jne
or
jmp
pop
and
inc
add
fistl
lret
or
test
mov
ret
cmpsb
aam
sbb
mov
add
pusha
push
das
stos
scas
sub
inc
rolb
add
iret
xchg
test
roll
shll
mov
push
add
jae
out
fnsave
mov
ja
jg
int
outsb
mov
add
add
enter
incb
mov
fldz
cmpsb
adc
push
dec
clc
dec
sbb
shr
jle
add
adc
incl
dec
out
jecxz
add
sar
add
je
add
add
push
and
in
mov
add
test
loopne
add
push
adc
sti
or
push
lcall
mov
add
out
aaa
add
jmp
sbb
push
movsl
jns
ret
bound
add
add
xor
or
add
add
add
sahf
add
out
add
add
sub
mov
mov
add
add
lahf
xor
mov
inc
pop
dec
xchg
imul
fnsetpm(287
add
cs
gs
out
pop
xchg
sbb
xor
inc
add
adc
jg
pop
xor
int3
insl
add
mov
lock
cmp
jl
adc
movsl
mov
mov
pusha
adc
sbb
jl
mov
add
cmp
movsb
mov
or
scas
sbb
int3
mov
adc
dec
jae
std
add
push
in
scas
xchg
movsb
dec
nop
sbb
stos
data16
ret
sbb
push
fadds
int3
fiaddl
xchg
add
aas
or
xor
ljmp
mov
dec
shrb
test
inc
out
push
mov
sbb
xchg
add
scas
aad
jg
dec
ljmp
jmp
test
loopne
mov
xchg
dec
fcomps
xchg
test
wbinvd
add
cmp
jae
or
add
mov
add
test
sub
lods
xchg
repz
add
sarl
aam
jne
pop
stos
lods
sbb
mov
cmp
lret
daa
adc
adc
bound
add
aas
inc
sub
add
add
shrb
call
stos
dec
lret
add
jne
cmpsb
outsb
sbb
add
add
sub
addr16
mov
mov
ja
add
dec
aas
mov
mov
ret
mov
out
mov
sbb
test
es
sbb
cmp
mov
fwait
dec
add
clc
inc
xchg
add
mov
inc
jne
lds
sub
cld
or
inc
aam
mov
push
call
addl
test
lds
cld
push
mov
xchg
cmc
dec
leave
push
fisttps
add
fnstsw
xchg
add
pop
add
mov
leave
mov
jg
lds
inc
iret
lods
pop
mov
add
add
lret
daa
push
inc
add
xchg
popf
mov
js
add
add
sbb
push
jns
mov
lret
mov
pop
hlt
or
loop
rcr
dec
add
loopne
cwtl
es
fisttpl
dec
test
xchg
in
push
push
inc
fmuls
jns
jmp
mov
xor
jg
sbb
pop
mov
xchg
out
mov
ret
dec
int
in
add
sub
mov
sahf
ljmp
mov
mov
add
lods
lods
mov
add
movsl
mov
mov
dec
inc
sbb
rcrl
lock
fisttps
mov
bound
scas
add
nopl
out
add
pusha
push
pop
add
add
aaa
mov
add
fcoms
cltd
jmp
stc
lldt
shll
jb
add
push
fldcw
shlb
icebp
push
add
pop
daa
pop
repnz
mov
cmpsl
insl
adc
push
mov
add
add
inc
add
cmp
jmp
add
adc
add
cmpsb
mov
cmp
xor
inc
sbb
xchg
es
lret
adc
mov
xchg
or
shrb
in
add
add
mov
xchg
out
shlb
cltd
in
aas
cli
scas
sbb
sti
inc
fstps
fwait
add
lahf
xchg
add
xor
icebp
cmp
arpl
dec
add
imul
dec
addb
out
add
pop
and
stc
mov
mov
out
in
jecxz
ficoml
cmp
adc
and
and
push
sbb
push
call
lock
xchg
adc
cmp
stos
cmp
mov
or
pop
add
jmp
push
cmp
add
xchg
stos
jae
xor
and
movb
xorb
add
dec
pop
mov
call
inc
test
push
dec
aad
pop
inc
inc
add
add
pop
xor
jb
sbb
movsl
out
insl
mov
pop
add
mov
mov
add
cmc
mov
lcall
decl
fists
movsl
push
rcrl
xor
arpl
xor
filds
xchg
arpl
adc
stc
add
jnp
dec
rcll
mov
add
or
dec
pushf
fadds
iret
pop
add
mov
or
add
xorb
add
add
std
push
sbb
push
jl
roll
jns
std
shll
or
mov
fucom
pop
loopne
add
aam
push
add
js
and
xor
sub
int
cmp
dec
or
ret
out
mov
jo
sbb
xor
cmc
bnd
fcoms
insl
inc
add
std
push
cmp
ss
iret
push
test
cs
inc
repnz
add
ljmp
fld
add
clc
insl
push
add
int
mov
dec
cltd
inc
mov
negb
push
push
inc
mov
or
jnp
int
add
add
fs
add
adc
cmp
fwait
xchg
dec
cmpsl
cli
jae
sub
js
push
mov
cltd
movl
lods
out
add
cltd
mov
int3
add
call
pop
leave
stos
neg
add
add
add
and
xchg
adc
mov
std
in
add
add
push
shlb
aas
push
add
add
stc
insl
call
pop
mov
dec
int
cmp
add
sarb
pushf
ficoml
mov
jns
inc
daa
lods
or
sub
push
cmp
cmpsb
cli
outsl
fildl
mov
pop
push
cmp
adc
xor
adc
call
scas
or
inc
add
lret
mov
jle
scas
aaa
bnd
jge
sub
pop
shll
mov
jo
add
test
int
jb
cld
add
dec
pop
pusha
ss
in
push
and
add
add
add
roll
test
cmpsb
and
add
jo
stc
sub
mov
add
cld
clc
subb
mov
jo
xlat
cmpl
lea
rolb
into
add
inc
rolb
in
push
sub
out
incl
or
add
add
and
sbb
cs
jnp
jne
add
sbb
push
mov
mov
xchg
clc
sahf
call
leave
pop
mov
adc
into
notl
jmp
incl
mov
pop
fiaddl
cmp
std
sbb
sbb
adc
add
popf
loop
add
lods
push
loop
xor
popf
add
lret
mov
xchg
sbb
add
out
cli
sbb
and
mov
dec
mov
add
add
mov
xor
ljmp
add
or
cmp
repz
lods
icebp
stc
xor
add
loop
push
pop
sti
mov
mov
xchg
add
rorl
push
push
sub
movsb
pop
cmp
mov
mov
arpl
in
inc
cmp
stos
or
xchg
add
inc
pushf
push
negl
mov
test
inc
add
sbb
mov
fwait
mov
jle
data16
fsts
adc
loopne
jno
lret
xchg
add
jge
sbb
js
jmp
shrb
sub
and
pop
repz
in
sbb
int3
ficomps
add
pop
push
lock
mov
xchg
call
inc
jg
xor
arpl
xchg
lock
cltd
add
repnz
adc
in
rorb
add
int3
stos
scas
test
pusha
push
out
in
dec
es
mov
add
jo
add
pusha
pop
dec
enter
add
dec
add
add
xor
outsl
mov
repnz
add
xchg
add
add
push
adc
push
adc
in
rolb
test
add
lds
jg
insb
add
enter
pop
cmp
pop
rolb
jne
stos
je
add
sar
pop
push
andb
scas
jl
fnstsw
ficompl
xchg
stos
add
mov
xor
testb
add
fs
fldl
mov
push
out
add
nop
ljmp
mov
and
test
pop
push
or
mov
inc
add
add
and
es
add
jp
out
sbb
gs
add
push
xchg
pop
xor
fistpll
xor
and
mov
mov
mov
jmp
seta
adc
in
popf
xor
mov
xor
lahf
cmpsl
mov
push
daa
sbb
sub
adc
inc
adcl
mov
pop
add
mov
imul
mov
mov
out
mov
sub
dec
test
mov
popa
mov
test
jg
das
and
jge
xor
add
int
xchg
subl
add
aas
cmpsb
add
pop
add
xchg
cmc
cld
stos
andl
jae
je
rolb
popl
sahf
test
jae
call
sub
icebp
repnz
ret
loop
or
add
add
add
jl
pop
add
add
addr16
xchg
icebp
mov
jmp
std
jl
cmp
nop
jo
cmp
ljmp
adc
lods
add
inc
sbb
adc
lods
mov
rcrl
push
nop
stc
ficompl
fisubl
add
jb
pop
fsubrs
add
xor
sbb
outsl
mov
add
mov
xchg
xchg
or
mov
mov
cmp
sub
iret
adc
sub
orl
add
add
cs
sbb
jg
loop
mov
inc
inc
and
enter
incb
dec
int
xchg
xor
je
ja
xor
jo
testl
adc
cmp
jbe
test
or
testl
dec
mov
push
add
lods
dec
add
pusha
mov
cld
loope
push
cmp
add
pop
add
or
lahf
in
enter
lods
jle
sbb
imul
fildl
add
inc
repz
mov
icebp
jmp
inc
pop
adc
scas
mov
repnz
and
xlat
scas
sbb
roll
mov
xchg
jmp
push
mov
mov
ds
cmp
inc
bound
stos
lods
push
xor
add
xor
mov
push
mov
add
or
les
add
inc
push
data16
fiaddl
test
das
adc
add
jg
add
cli
rcrl
sub
pop
mov
mov
testl
add
dec
lea
xor
rolb
push
cmp
ljmp
add
test
sbb
nop
sahf
hlt
ret
inc
add
pop
add
test
pop
mov
mov
loop
add
add
ret
xorb
add
movb
add
std
jl
into
jb
adc
ret
xchg
dec
test
shlb
or
popf
fxch
inc
xor
xchg
aad
pop
mov
std
inc
mov
adc
adc
hlt
mov
jbe
mov
adc
test
pop
xor
cltd
lea
nop
xchg
sti
lret
dec
fwait
test
int3
lods
mov
gs
mov
fisttpl
imul
fs
add
mov
push
stos
add
lahf
loop
or
xchg
es
xlat
ss
in
nop
fdivs
sub
out
push
add
arpl
or
popf
dec
aam
add
and
out
popf
cmp
or
pop
repz
add
mov
std
and
add
xor
clc
pop
out
call
lods
cwtl
sbb
pop
outsb
xor
add
add
mov
inc
mov
sub
into
push
lods
mov
into
xor
fists
add
mov
jp
xchg
outsb
mov
rcll
frstor
add
lock
sahf
jge
add
add
mov
jge
jb
sub
loope
scas
add
cmc
push
add
mov
mov
jp
movb
and
sti
mov
add
or
daa
and
add
ficompl
mov
enter
mov
xor
dec
stos
je
mov
outsl
add
mov
ss
cmc
add
mov
sub
pop
test
sbb
pop
cmp
adc
adc
lret
iret
int
mov
stc
xor
ret
cltd
sbb
das
adc
mov
xchg
adc
adc
or
mov
pushf
mov
sbb
cwtl
push
mull
es
jmp
inc
sbb
push
cmp
push
jl
adc
xor
rcrl
xchg
mov
outsb
add
cld
loop
cld
jmp
stos
ds
dec
movsb
sbb
in
les
fldt
add
xor
in
and
leave
leave
ja
push
xor
inc
ljmp
dec
movsl
push
pusha
add
imul
loopne
cmp
popf
jno
test
in
add
push
add
aas
dec
lds
into
xchg
cli
les
jge
pop
repnz
sub
fisttps
shr
mov
add
adc
add
pop
pop
outsb
outsb
pop
gs
mov
movl
das
out
add
or
outsl
push
clc
enter
or
add
adc
sbb
int
xor
dec
xchg
pop
mov
stos
mov
test
lds
add
movsb
ret
mov
aam
mov
repz
add
icebp
jg
sbb
mov
jg
pop
sbbl
fldcw
inc
loope
jge
repnz
and
mov
sti
push
cmpsb
xlat
push
into
icebp
ret
cmp
dec
pop
movsl
pop
cmp
mov
push
inc
add
mov
add
cmc
lcall
cli
xor
jo
inc
xchg
outsl
mov
int
push
test
in
sub
sub
insl
aam
mov
bnd
add
out
push
mov
ja
es
loopne
dec
lahf
icebp
add
jmp
jl
push
and
iret
insl
aad
jl
adc
cmp
mov
mov
imul
push
add
out
sbb
xorl
push
out
lea
lcall
andl
dec
loop
out
movsb
cmp
lahf
add
in
xchg
out
push
mov
pusha
movsb
add
cmpsl
jecxz
repnz
jnp
test
aas
add
int3
sub
in
icebp
inc
adc
mov
and
and
add
cltd
add
cmpsl
cld
add
mov
scas
insl
adc
xlat
sbb
sbb
push
mov
add
cwtl
outsb
fs
jno
adc
lahf
mov
gs
daa
xchg
nop
imul
fwait
decl
add
mov
dec
inc
pop
test
leave
jb
add
add
add
jb
stos
and
repnz
punpckhbw
mov
inc
or
or
data16
push
lret
cli
test
mov
das
pop
fisttpll
outsb
cmpsb
adc
ret
pop
pop
hlt
jns
sti
cs
and
and
loope
out
mov
or
cmp
mov
mov
out
scas
jno
sarb
add
cld
and
cmp
scas
cmp
mov
daa
add
mov
ret
push
xchg
xor
inc
movsb
lds
add
jle
cmp
add
jle
sbb
mov
fisttpll
into
dec
je
out
add
sbb
fiadds
inc
int
cmp
push
arpl
pop
sub
mov
mov
jge
push
pop
negl
jle
or
std
jg
movsl
jne
test
push
sub
cmp
xor
add
cltd
cmp
insb
das
sub
fists
add
stc
add
xchg
lods
fbld
cmp
adc
fdivrl
jmp
idivb
mov
dec
movsb
add
xchg
in
add
jb
rcrb
movsb
outsb
inc
pop
in
xor
mov
mov
add
sahf
mov
sub
imul
add
stc
out
add
mov
xchg
shrl
ja
cltd
add
push
add
fisubs
loop
testb
fmul
paddd
loopne
add
mov
fstl
cmp
xchg
int
jp
addr16
lds
jbe
dec
add
jle
lahf
sbb
xchg
out
pop
dec
add
add
inc
xchg
int
add
add
add
cmp
adc
mov
in
xchg
fstpt
lds
dec
test
clc
add
push
cmp
test
cwtl
test
sbb
add
pop
aad
mov
cwtl
stos
sub
jno
leave
rolb
popf
pushf
add
push
inc
call
xor
add
pop
inc
mov
jns
mov
mov
sub
add
test
repz
or
adcb
jb
not
jb
mov
mov
push
fiaddl
aaa
mov
xlat
and
cmp
dec
jne
sub
js
movl
fistps
movsl
jge
cld
popf
outsl
jnp
int3
add
mov
shll
add
fiadds
adc
mov
adc
test
xchg
add
into
add
ss
dec
jns
add
sub
add
outsl
sbb
cli
jne
sahf
scas
roll
adc
cmp
xchg
inc
xor
dec
sub
push
pop
imul
jle
add
xor
add
add
imul
leave
scas
pop
sbbb
lods
xchg
bound
arpl
add
std
fimuls
cmpl
add
jbe
sbb
sub
nop
mov
add
movsb
ljmp
sub
popa
or
pop
unpckhps
adc
in
sbb
cli
xor
mov
je
faddl
jnp
sti
movsb
imul
xlat
out
xchg
adc
sub
add
push
pop
ljmp
jl
dec
cmp
fstpl
mov
pop
ja
sbb
leave
add
icebp
or
dec
or
jmp
add
xchg
pop
mov
jle
xchg
or
xchg
add
add
xchg
cs
cli
into
and
add
or
sub
dec
cs
push
out
mov
roll
add
lea
cwtl
cmp
mov
and
popf
je
lock
mov
xchg
les
adc
cs
inc
mov
inc
pushf
add
mov
xor
inc
test
out
mov
leave
xor
mov
and
mov
jge
sub
fs
outsl
dec
and
mov
addr16
cli
xor
add
xchg
xchg
call
das
sub
pop
mov
dec
xchg
xor
movsl
ret
je
mov
mov
movsl
add
orl
scas
lret
sbb
push
xor
aam
hlt
pop
verr
pusha
sti
ret
jmp
xchg
inc
cmp
pusha
adc
adcb
stos
cmp
sbb
adc
rcrl
imul
sbb
daa
mov
lahf
ret
mov
xchg
fnsave
enter
add
fwait
jl
adc
paddusw
push
xor
pop
add
ds
leave
add
hlt
jle
cmpsb
dec
add
push
dec
sti
lret
dec
aas
mov
js
sbb
imull
mov
add
mov
aad
inc
xor
mov
push
fmul
jae
xor
xor
mov
mov
das
jecxz
add
cmp
in
jb
add
mov
testl
and
mov
add
mov
add
cmp
ljmp
mov
dec
cmp
pop
mov
sarb
fistpl
lahf
push
jno
stc
ja
add
mov
out
add
sbb
push
cmp
arpl
sub
mov
and
pop
cmp
adc
cltd
add
mov
testb
repz
sti
add
or
and
icebp
pusha
add
imul
add
cmp
and
push
imul
and
add
inc
sub
xchg
es
sbb
jge
add
mov
pop
rclb
mov
xlat
fisubs
test
push
mov
add
je
jecxz
lock
add
xor
xchg
adc
add
push
sub
add
add
shlb
mov
jge
push
xor
mov
add
movsb
ret
pushf
add
mov
sbb
aas
adc
and
sbb
movsl
add
add
mov
das
fsubrs
mov
cmp
push
add
sbb
fwait
xchg
xor
mov
add
bound
mov
mov
js
add
mov
and
lcall
out
jmp
loop
fildll
inc
cli
jb
cli
add
int3
incl
enter
jecxz
jl
clc
nop
pop
xor
add
mov
and
popf
test
mov
add
cmp
sub
dec
xor
pop
jae
out
outsl
pop
push
cli
add
test
loop
cmp
sti
frstor
xlat
cld
cmpsl
or
push
lret
pop
mov
cld
sub
push
add
test
cmp
add
inc
pop
cmp
mov
jne
mov
sbb
push
push
test
mov
push
data16
cmp
mov
mov
add
xor
das
ja
ficoms
mov
les
push
mov
add
icebp
clc
xchg
daa
movsl
hlt
and
in
dec
and
mov
out
mov
int3
adc
cmp
sbb
shlb
pop
cwtl
rorb
sbb
adc
or
mov
jne
add
mov
mov
xor
loope
mov
clc
adc
js,pt
nop
and
pop
add
inc
mov
or
add
mov
loope
adc
mov
add
stos
mov
mov
add
xor
mov
mov
iret
push
mov
add
add
push
cmpsb
add
cmp
sub
xor
test
cld
xchg
loope
and
xchg
inc
xor
gs
sbb
mov
cmp
jbe
push
movups
adc
lock
cmp
es
pop
inc
adc
xchg
loop
in
pop
push
and
dec
jp
popa
movsl
scas
jl
jmp
inc
mov
pop
aaa
add
sub
insb
fsubrl
mov
int
push
add
add
xor
add
or
insb
sbb
jmp
fs
mov
mov
add
mov
in
dec
movsl
pandn
ficoms
mul
add
andl
pop
add
adcl
xchg
lods
and
cmpsb
movsl
arpl
dec
sub
push
jge
mov
popa
cwtl
mov
popl
stc
add
cmp
inc
dec
icebp
jae
in
jno
adc
mov
adc
pop
inc
fiaddl
fwait
mov
sti
fildl
or
push
mov
add
xor
and
in
and
es
push
or
or
add
xchg
shll
jne,pt
mov
arpl
movsb
add
xchg
cmp
call
cmpsb
mov
cli
or
add
jnp
jbe
in
hlt
iret
mov
addl
lods
add
mov
lcall
pop
call
inc
lret
inc
mov
add
ljmp
mov
stc
xchg
fadd
fsubs
push
out
xor
add
lahf
adc
mov
xlat
nop
add
jl
add
in
sti
add
xor
repnz
sub
rcrl
jmp
testb
jg
loop
decl
inc
data16
or
add
mov
jg
add
add
shlb
ljmp
cmp
inc
xchg
xlat
add
lods
add
cmpsb
mov
into
add
add
addr16
mov
mov
jbe
mov
add
dec
mov
imul
mov
add
xor
cs
imul
rorb
push
add
dec
cmp
pmulhuw
add
push
sub
cli
in
xchg
mov
xor
aaa
das
popa
std
dec
jno
add
add
lods
mov
in
mov
push
and
mov
push
mov
xchg
or
movsl
or
mov
push
and
inc
in
add
jno
sbb
mov
gs
add
aad
insl
mov
nop
rcll
fiaddl
iret
add
pop
inc
sub
sbb
xor
je
in
xor
add
jbe
in
add
je
xor
fsubs
add
popl
sub
xchg
mov
push
loop
pusha
pop
or
and
inc
test
mov
jo
pushf
add
loopne
and
xor
and
clc
sub
int3
push
adc
mov
and
stc
scas
imul
popa
mov
add
add
int3
jp
outsl
scas
in
fbstp
cld
sbbb
sub
repz
outsl
xor
mov
enter
test
mov
add
push
jle
or
cwtl
mov
in
adc
xchg
sti
inc
roll
push
xchg
jmp
cld
pop
jmp
punpckhbw
cmovg
xor
lret
pop
jp
mov
arpl
or
sbb
cmp
sub
xchg
out
push
mov
and
push
add
test
add
fcmovnu
clc
jmp
addb
mov
testb
icebp
movhps
notl
imul
pop
jmp
in
stos
icebp
push
mov
dec
aad
call
sti
mov
cmp
add
pop
xor
sbb
test
enter
pop
pop
sub
push
sbb
cmpb
testb
add
test
adc
xlat
movsb
add
mov
pop
add
dec
dec
sahf
pop
mov
fst
adc
test
jmp
aad
stc
loope
lret
add
std
xchg
add
push
mov
lock
mov
ficompl
add
enter
push
adc
mov
add
leave
add
jl
push
jns
xchg
add
push
add
int3
push
add
add
inc
ljmp
in
arpl
add
xchg
add
and
inc
add
adc
and
loopne
or
add
cmp
add
jmp
rolb
add
cs
ljmp
xchg
adc
push
add
sarb
test
add
push
add
les
xchg
push
jg
add
xlat
adc
popf
or
add
fwait
cwtl
mov
xchg
add
pop
cmp
icebp
add
popa
testb
pushf
lds
add
fidivl
xchg
jns
inc
jae
xchg
add
mov
adc
int3
popl
dec
ja
sbb
cld
int
jl
lea
out
call
push
or
jnp
dec
xchg
addr16
cld
mov
incl
add
sub
inc
inc
fdivrl
fimull
add
and
pop
add
fs
iret
add
stc
subb
add
mov
repnz
sarl
add
ja
adc
jne
sub
pop
popa
push
xchg
jle
pop
fldl
sti
out
inc
add
int3
ds
add
into
shl
push
dec
int3
pop
xchg
push
rolb
add
mov
ds
arpl
add
sub
rcrl
iret
push
mov
inc
add
add
lods
lret
add
lea
flds
jmp
sub
popa
je
sbb
add
sahf
scas
mov
leave
jb
add
push
push
add
pop
inc
fdivrs
test
mov
test
shlb
fstpt
pop
das
xchg
imul
jns
push
repz
loop
jnp
mov
les
or
pusha
mov
xlat
inc
cmp
xor
push
js
testb
adc
std
scas
in
in
inc
fdivrp
inc
dec
cmp
cmp
cmp
sbb
add
sub
add
dec
adc
mov
or
xchg
inc
or
xchg
icebp
std
aas
int3
mov
mov
add
xchg
jl
add
fisubl
xor
add
add
les
je
dec
pop
lock
in
add
insl
jg
adc
stos
loope
push
lahf
cmovae
add
mov
pop
push
or
and
inc
pop
mov
mov
push
jp
cmp
arpl
add
add
xchg
setge
cmpsb
add
hlt
je
lods
testl
mov
testb
loop
inc
shrl
cld
or
sub
push
add
mov
mov
cltd
test
rcll
xchg
add
sbb
xor
pop
sub
add
add
add
ret
push
test
sub
loope
aam
filds
pop
aam
mov
das
aas
fsub
add
mov
jg
inc
xchg
push
sub
call
movb
inc
mov
sbb
sbb
test
adc
xor
gs
data16
pop
xor
add
mov
cmp
popa
xchg
jne
bound
inc
add
aas
cmpsb
add
jae
sub
add
adc
mov
pop
fmull
inc
andb
xor
and
test
xor
jno
add
mov
pop
xchg
mov
sbb
mov
out
aas
test
xchg
stos
fcoms
je
xor
sub
jns,pn
mov
lods
push
add
lock
adc
cld
push
data16
jle
sub
test
and
add
or
add
iret
add
addb
jle
xor
mov
enter
pop
fldt
xchg
mov
xlat
and
add
mov
xchg
jmp
push
scas
xor
mov
xchg
mov
cli
jg
movsl
enter
stos
push
or
add
add
daa
mov
add
mov
add
or
sub
mov
mov
rolb
outsl
push
add
lret
cmpb
ljmp
imul
xor
sbb
iret
add
mov
xor
add
add
adc
in
dec
out
test
xor
les
das
in
test
cld
mov
push
add
icebp
xchg
xchg
push
aam
enter
add
inc
add
loope
pop
repz
popa
xchg
dec
loop
test
cmpsl
dec
pop
sbb
popl
fldt
or
gs
add
sbb
jns
lods
bound
repnz
scas
add
stos
hlt
icebp
xchg
jmp
xor
add
mov
nop
sub
cmp
inc
add
popa
mov
lods
rclb
xlat
repnz
scas
add
and
xchg
jno
pop
jns
add
in
sbb
mov
or
mov
mov
add
sbb
jns
insl
ljmp
push
bound
cs
je
neg
add
icebp
add
adc
add
arpl
outsl
hlt
jmp
call
mov
or
ja
subl
mov
lcall
mov
cmp
add
push
sbb
imul
pop
push
push
push
lret
inc
jmp
cmp
jg
mov
incl
ss
insb
sub
lret
add
mov
loope
outsl
cmpsb
leave
gs
xor
call
repnz
adc
enter
iret
fbld
add
pop
add
call
ljmp
cmp
inc
loope
dec
faddl
add
fwait
xor
or
push
fs
fdivl
mov
pop
jne
das
int3
add
cmp
pop
ljmp
subb
sbb
cmpsl
add
mov
xchg
mov
cmpl
xor
inc
fs
inc
dec
or
in
outsb
testl
add
es
mov
aas
outsb
push
cmp
enter
addb
push
popf
mov
leave
pop
and
roll
cvttps2pi
add
filds
jae
arpl
rcll
add
add
loope
pop
mov
sbb
dec
outsb
scas
cmc
add
aas
cs
push
add
add
dec
cli
or
push
add
cs
add
mov
dec
jge
cli
add
movsl
vmovd
sbb
and
jo
ret
add
add
cmp
movsl
je
pop
lret
mov
mov
xor
xor
push
add
mov
add
add
jp
rol
sti
cmp
cmp
push
dec
cmp
xchg
cmp
add
mov
pop
mov
insl
mov
add
mov
sarl
daa
push
icebp
pop
and
jb
push
aas
or
push
int3
jae
add
daa
mov
rcll
sahf
mov
and
arpl
adc
cltd
add
or
roll
clc
rolb
cmpsl
add
add
or
add
add
out
rcr
aas
test
push
sbb
mov
dec
mov
mov
mov
adc
mov
leave
faddl
sub
add
subl
leave
les
or
outsb
movsb
fldenv
jp
jbe
dec
lahf
movsl
xor
scas
mov
inc
mov
sub
mov
pop
shlb
add
sub
push
and
push
sub
les
pop
imul
add
mov
sbb
sub
fstpt
mul
lds
mov
out
icebp
lcall
mulb
cmpsb
bound
adc
add
inc
mov
jmp
test
out
sub
add
iret
in
arpl
xor
enter
push
dec
test
jge
imul
sub
clc
pop
lods
mov
xchg
mov
add
inc
lea
scas
cmp
filds
and
mov
ret
cmpsl
leave
mov
or
fs
fadds
xchg
add
repnz
pop
mov
adc
sub
stos
or
call
shr
idivl
adc
inc
dec
sub
jmp
repz
jb
jecxz
add
cmpsb
jle
jg
xlat
add
outsl
dec
sti
sti
out
add
gs
push
mov
mov
jmp
cld
jno
pop
or
cmp
sub
xlat
or
add
adc
jbe
jae
dec
xchg
sub
iret
fistl
add
lds
dec
mov
pop
dec
fwait
cmpsb
shlb
fisttpll
add
xor
and
into
movsb
nop
add
loope
add
add
xlat
scas
enter
sbb
sbb
add
repz
lea
das
push
mov
int
adc
mov
add
cwtl
loop
mov
pop
lods
lds
push
test
imulb
fists
mov
mov
fdivs
lock
lahf
or
add
add
imul
mov
sbb
add
push
fiadds
pushf
sbb
push
imul
cltd
leave
add
mov
call
sub
add
aad
add
arpl
ds
inc
insl
and
xlat
lcall
add
movl
add
xchg
add
sbb
add
jno
sub
and
xchg
add
add
or
dec
pop
push
jle
sbb
or
cmpb
js
ljmp
sbb
pushw
in
mov
out
sub
out
outsl
and
or
jns
fildll
pusha
push
mov
mul
repz
dec
push
js
loopne
or
sarb
int3
sub
or
gs
add
fwait
add
aas
push
cmp
mov
add
sub
mov
cld
cmpl
mov
jnp
fistpll
sub
pop
add
iret
js
sbb
icebp
or
sub
sub
sarb
mov
pop
xchg
push
and
mov
add
neg
adc
das
add
xchg
mov
cmp
add
das
xchg
xchg
sbb
cmp
sbb
insl
adc
sub
clc
xor
dec
jmp
add
mov
mov
mov
cmp
pop
test
add
es
lock
negl
jmp
nop
add
xor
and
add
test
stos
xor
add
add
aaa
xor
sub
add
add
cmp
aaa
adc
outsl
lods
mull
xchg
fdivrs
mov
ror
imul
fdivrs
js
or
lods
xchg
loop
stc
js
int3
dec
nop
ret
pop
inc
enter
hlt
inc
push
lret
sub
cmpsl
jmp
mov
dec
out
shll
lahf
scas
or
push
sub
add
rcrb
movsl
loop
add
int3
mov
inc
in
xchg
ljmp
int
push
push
loopne
loope
inc
and
icebp
mov
loope
push
mov
add
stc
jmp
adc
sub
add
dec
xchg
mov
mov
cmpsb
adc
cmp
mov
mov
hlt
jns
dec
fcoml
add
sub
hlt
inc
shrb
mov
aam
sub
cltd
add
dec
mov
add
scas
pop
add
add
outsb
arpl
xor
das
fcmovbe
inc
and
add
mov
pop
mov
sbbl
fs
cld
sbb
and
test
add
xor
or
fmul
int3
aaa
in
jnp
test
xchg
js
pushf
fnclex
sahf
fisubl
jmp
push
call
push
fwait
xchg
shlb
inc
dec
xor
add
cmp
or
jg
cli
sbb
add
add
shl
sbb
pusha
xor
sarl
cwtl
push
add
pop
enter
pop
fstpt
out
xchg
orl
push
jl
xchg
push
add
push
jbe
mov
sbb
in
psllw
add
loope
and
cwtl
dec
mov
add
sub
add
cs
add
inc
adc
mov
add
pop
mov
add
cmp
and
add
iret
mov
mov
ds
inc
jmp
add
adc
and
or
inc
add
sub
sub
out
xchg
add
adc
mov
sahf
cld
or
icebp
fdivs
add
xchg
cmp
fadd
inc
push
adc
pop
push
add
int3
test
fistl
cmpsb
stc
leave
add
imul
cmp
mov
aaa
call
push
add
shrb
jle
add
xchg
ja
push
mov
add
sub
pop
mov
cmp
dec
sar
push
pop
pop
cmp
xchg
cs
dec
cmp
cmc
sbb
jae
inc
jp
jmp
sbb
stos
fstl
add
jmp
or
jecxz
pop
fnstenv
add
out
push
xor
add
mov
clc
jle
add
enter
add
push
scas
mov
add
in
push
pop
and
mov
cmpsb
sbb
jb
fldcw
and
rorb
out
inc
inc
sbb
add
jp
pop
and
inc
xchg
js
xor
push
adc
fnstsw
jnp
mov
add
shrb
addr16
add
add
add
lods
lea
mov
lret
dec
add
daa
push
jg
add
imul
pop
add
xchg
and
xor
shrl
add
push
inc
add
add
mov
mov
sbb
addb
inc
std
stos
add
jecxz
mov
xor
add
js
lea
and
mov
push
mov
std
and
add
into
les
xchg
ljmp
xlat
jnp
jns
mov
mov
xor
add
add
or
sub
dec
add
test
add
shl
or
jge
xor
jg
add
in
loopne
add
stos
mov
xchg
lea
jmp
dec
es
add
mov
and
popl
sbb
add
lods
ljmp
sub
std
push
push
pop
xor
xchg
cmpsb
or
mov
fisttps
add
lahf
rolb
jmp
pcmpgtd
add
jmp
sub
xchg
add
sbb
add
add
loop
shlw
mov
sub
out
orb
xchg
push
add
rorb
add
and
ret
push
scas
add
rclb
push
testl
add
cmovge
test
jno
adc
add
push
jmp
pushf
in
add
inc
jo
pushf
lods
mov
lea
add
scas
pushf
je
pop
jbe
ja
cs
pop
inc
mov
add
imul
inc
repz
add
adc
ljmp
jae
add
cmp
pop
jae
ss
fsubs
insl
mov
in
add
lods
fwait
dec
sub
add
idiv
lcall
sbb
in
mov
sti
add
ror
xchg
jg
mov
divb
add
mov
pop
mov
mov
sub
inc
add
add
imul
ljmp
push
incb
sub
lea
mov
adcl
or
add
push
inc
iret
add
lea
push
add
pop
ds
lahf
roll
mov
fs
dec
mov
mov
inc
pop
push
jecxz
dec
add
mul
push
add
movsl
push
add
stos
aad
lcall
xlat
cmp
dec
jmp
test
xor
int
sti
clc
push
cltd
lret
fpatan
test
push
shlb
jecxz
andl
dec
dec
std
add
cmp
bound
push
aam
mov
cld
sub
mov
les
add
out
mov
pop
aam
fiaddl
cli
insb
aad
push
stc
nop
stc
pop
add
inc
aas
sub
sldt
out
xor
mov
pop
outsl
add
xchg
mov
ja
mov
loope
dec
push
es
int3
outsb
add
test
lret
sub
dec
add
aaa
cld
pop
cmp
add
and
and
or
les
add
adc
dec
sbb
dec
push
lods
fmul
scas
dec
jmp
addl
add
and
sub
jle
push
out
aam
push
ret
sldt
ret
jbe
sbb
mov
pop
test
push
cmp
cmpsb
cmp
add
mov
push
hlt
inc
mov
lahf
inc
or
std
xchg
pop
mov
pop
xor
cmp
sbb
push
add
fsubrp
push
movsb
sub
ljmp
inc
jmp
or
gs
mov
ret
mov
or
inc
inc
mov
add
push
and
cmp
add
sbb
add
les
push
cmpsb
adc
add
jne
lods
ficomps
add
mov
icebp
repz
push
cmp
pop
negb
pmulhuw
push
lods
cld
push
out
insl
popa
in
je
pop
pop
cmpsb
inc
mov
adc
add
jb
add
cld
mov
cld
add
mov
xchg
dec
push
bound
out
call
and
mov
lret
dec
inc
scas
and
stos
add
andl
sahf
add
mov
iret
mov
adc
sbb
enter
xor
int
pop
xchg
add
cs
add
add
pusha
out
enter
jns
push
dec
out
or
rolb
sub
xchg
mov
lahf
adc
call
add
push
test
loope
add
rcl
mov
mulb
flds
xor
mov
out
scas
add
xchg
xchg
inc
inc
add
popf
add
fidivs
add
add
shrb
and
and
out
cmp
jnp
cmp
mov
sub
cld
push
test
jl
fstps
movsl
dec
add
nop
ss
movsl
stos
loop
mov
mov
mov
add
aam
xor
ss
xchg
cmp
xlat
add
bound
repnz
ret
andb
add
in
leave
enter
cmpsb
cmc
repz
push
mov
rcrl
add
jecxz
xchg
sarb
cmp
cmp
mov
xchg
push
xchg
sbb
ss
stos
out
cs
in
aam
in
add
add
hlt
and
or
aad
xor
mov
les
iret
adc
mov
stos
or
gs
xchg
or
pop
jb
testb
cwtl
and
dec
insb
adc
push
pop
mov
add
add
mov
add
mov
dec
imul
mov
loop
aam
es
jb
add
mov
mov
cmp
addr16
dec
mov
xchg
pop
aam
dec
mov
outsb
mov
imul
dec
shlb
fiaddl
adc
or
xchg
popa
mov
arpl
lea
add
jae
add
hlt
inc
cld
add
adc
std
jns
fdivs
pusha
test
in
rcrb
fwait
cmpsb
cs
mov
jo
iret
fidivrl
mov
add
add
aam
inc
mov
ja
fstpl
pop
sbb
adcb
fcomip
mov
insb
sbb
repnz
je
divb
lcall
jns
add
add
sbb
dec
aas
stc
mov
cmp
inc
lock
mov
iret
call
add
mov
mov
dec
pop
bound
xchg
adc
add
jo
clc
adc
add
add
stc
add
int
lock
sub
enter
movsb
mov
ds
add
jo
fcoms
add
cmp
mov
sbb
adc
scas
pop
lret
pop
or
adc
testl
xchg
dec
addb
dec
sbb
mov
mov
sbb
add
and
lret
adcb
pop
adc
mov
mov
mov
rcrl
mov
pop
add
bound
loopne
jae
cmp
mov
aad
movsb
cli
hlt
push
inc
test
adc
xor
push
out
mov
jmp
les
add
push
sub
not
vsqrtpd
add
negl
and
fcoms
cmp
push
add
cmp
add
ja
lds
xchg
jecxz
pop
outsl
add
cmpsb
xchg
mov
idivb
iret
rcr
pop
hlt
repnz
mov
movsb
adc
mov
xchg
dec
cld
sub
movl
cli
lret
jne
push
pop
xchg
add
subl
je
mov
aad
in
in
fwait
sbb
mov
outsl
push
sbb
xchg
mov
jo
imul
cmp
les
adc
push
leave
jae
loop
in
add
mov
xchg
add
mov
dec
das
pop
bound
sarl
push
stos
dec
add
or
out
add
pop
mov
push
clc
sbb
scas
jo
add
imul
loop
xor
push
bound
pusha
xchg
ficomps
clc
lcall
int3
pop
movsb
scas
cmp
add
sub
pusha
add
or
andl
mov
cmp
rcrb
adc
pop
mov
ret
cmpsl
pop
gs
add
stos
mov
sti
lahf
cmp
addl
movsb
adc
dec
popa
xchg
push
jns
dec
push
loopne
push
fdivrl
push
loop
cmp
add
sbb
ja
inc
add
dec
add
arpl
pop
cmp
pop
add
pop
or
int
ja
insl
insb
pop
push
add
jmp
mov
jo
pop
mov
lods
jns
jp
je
jns
pop
out
and
inc
xchg
lcall
add
addl
ret
cmp
xor
outsb
pop
dec
cmp
mov
ja
xchg
js
pop
testb
loopne
popf
add
out
test
popa
movsb
mov
insb
stos
mov
or
mov
xlat
inc
popa
sarl
push
mov
add
xchg
add
popf
mov
out
cmp
je
add
movl
ud1
xor
add
mov
cmp
insb
add
rclb
outsl
sbb
rorl
loopne
mov
cltd
clc
push
push
mov
pop
add
mov
cltd
add
jg
mov
sbbl
pop
mov
push
push
lea
ficomps
shll
andb
push
push
add
add
fwait
nop
mov
fwait
out
cmp
add
ja
add
sbb
sub
adc
add
add
jne
test
adc
cmp
lods
lea
in
or
lea
stos
fucomip
mov
aaa
dec
stc
dec
xchg
pop
testl
inc
push
push
add
cli
adc
jl
cmp
in
or
and
mov
jecxz
add
dec
mov
add
add
add
dec
cmp
xchg
push
gs
or
mov
xor
out
les
int3
out
add
pusha
cli
push
sti
mov
jg
add
adc
xor
add
les
sahf
pushf
inc
or
mov
cmp
incb
imul
pop
cmp
inc
mov
jecxz
add
xlat
mov
les
fists
push
shlb
add
add
stos
mov
xor
adc
fiaddl
lahf
inc
jb
add
test
cmp
jns
cld
push
push
and
ljmp
xor
mov
add
outsb
xchg
add
pop
xor
mov
xor
add
repnz
das
add
sarl
stos
mov
add
add
adc
ret
cld
pop
adc
xchg
iret
popl
fs
xchg
test
inc
add
test
xor
jne
mov
fcomps
lahf
pop
xor
sbb
outsb
add
push
cs
lret
or
iret
ja
insl
in
aad
add
test
fidivrl
popa
push
jmp
je
xor
gs
addl
jo
cltd
stos
mov
mov
insl
push
adc
data16
addl
mul
add
add
mov
pop
jmp
and
pushf
cld
add
xchg
cmp
xchg
add
cmpb
push
xchg
cli
cmpsl
xchg
out
sub
ss
in
xchg
loop
add
and
add
add
xor
dec
push
jns
shll
mov
push
das
push
add
add
xchg
add
add
pop
add
lret
add
fisubl
jg
xor
sti
add
daa
or
inc
add
sub
pop
inc
nop
add
lret
je
inc
and
and
sbb
xchg
ds
ss
or
push
mov
roll
mov
lret
aad
das
cmp
pop
movsb
cmp
clc
lods
fwait
jge
xor
push
aad
add
ljmp
dec
fucomp
icebp
jge
add
cwtl
jge
int3
js
lods
mov
in
popl
xor
ss
out
fldenv
dec
pop
jmp
lret
adc
adc
cmp
repz
add
jg
test
stc
mov
jno
cmp
adcb
cmp
xchg
add
jns
adc
xor
iret
cmc
data16
mov
push
jge
fistps
xchg
fisubrl
adc
and
addb
in
jg
lret
sbb
pop
or
out
push
test
jmp
stos
shl
sar
aad
mov
xchg
fidivl
add
enter
add
cmc
push
jmp
push
xor
lcall
add
adcb
in
popf
adc
test
xor
add
call
xor
loope
inc
xchg
or
mov
jge
pushl
add
jns
pop
cwtl
add
xor
add
xor
adc
adc
hlt
dec
xor
lods
inc
pop
jno
push
scas
jmp
add
lret
push
icebp
test
mov
xchg
adc
push
add
jecxz
arpl
xchg
pop
into
jmp
inc
xchg
jae
mov
minps
xor
add
rcrb
insl
lods
mov
lret
jae
xor
clc
mov
nop
shlb
push
inc
loopne
add
add
sbb
fnsave
jecxz
mov
roll
ljmp
and
dec
enter
xor
sti
sub
addl
cs
icebp
xlat
es
xor
mov
mov
fstps
cld
fcomi
lock
add
sbb
sbb
in
add
and
mov
push
fs
lods
lods
sub
rcr
add
mov
xchg
jle
sbb
incb
insb
add
add
sub
lcall
mov
fldl
add
xor
ljmp
repz
push
bound
out
and
add
add
shl
jae
jo
jg
out
add
mov
sub
cmpsb
jle
shl
push
or
mov
add
mov
jmp
lods
sbb
insl
push
add
pop
mov
dec
lods
leave
mov
add
cmpsl
imul
push
push
or
in
mov
mov
dec
adc
dec
cmp
mov
xor
add
pop
outsb
adcl
add
cmc
jp
hlt
pop
add
pop
scas
les
ljmp
xlat
add
sahf
ljmp
ret
fs
jns
jne
mov
sub
push
mov
int3
mov
adc
aas
cmp
lret
add
fwait
push
leave
mov
mov
dec
or
xchg
push
enter
test
ret
mov
leave
cmp
add
push
add
sub
jno
xchg
imul
rclb
sub
add
in
in
mov
popf
lds
xchg
int3
jnp
adc
out
mov
subb
add
ret
push
fs
dec
cmpsb
mov
lea
xor
and
lea
cltd
jne
test
mov
lock
add
add
fiadds
call
add
xlat
push
adc
call
inc
ret
add
inc
cli
ret
add
das
mov
jo
push
js
cmp
scas
pop
jb
mov
mov
lock
push
jmp
movsl
add
ss
xor
and
xchg
fistl
rcl
scas
add
pop
adc
sub
fsubs
sbb
stos
inc
out
add
add
add
mov
loop
mov
pusha
cmp
or
jge
add
in
mov
inc
scas
nop
sub
pop
jbe
or
add
xor
add
sub
scas
mov
outsl
dec
cmp
lret
pop
cmpl
xchg
repnz
or
or
in
jo
add
in
push
test
xchg
in
dec
or
roll
push
xchg
lret
pusha
lcall
or
inc
add
mov
bound
xorl
int3
add
repnz
mulb
dec
and
xor
inc
stc
xor
sub
popa
push
outsb
add
xlat
in
add
mov
in
jnp
imul
mov
pop
add
adc
sub
adc
mov
loope
adc
and
iret
jno
es
add
movsb
or
xor
mov
hlt
sarb
scas
lods
cli
jns
les
andl
dec
loop
in
push
out
call
add
jp
aaa
or
dec
jb
add
xor
notl
pushf
loope
gs
div
fs
aad
cld
jp
stos
aam
loopne
sub
adc
lds
repnz
sub
lea
loope
loop
add
add
stc
rolb
ja
pop
cltd
outsl
jmp
pop
jns
xor
inc
lcall
cmp
mov
xor
pop
xor
mov
movsl
jmp
add
and
push
lret
jge
mov
add
decl
add
cmp
arpl
gs
pop
divl
testl
outsl
mov
adc
add
add
and
add
mov
enter
cmp
repz
push
out
adc
mov
ret
insl
loop
cmp
sbb
sub
sti
stc
cli
mov
xor
mov
ja
cmpl
cwtl
iret
lea
add
stc
adc
and
add
jno
mov
or
leave
xor
add
add
outsb
sub
xchg
push
incl
pop
add
cld
aad
add
in
add
pop
mov
dec
call
jno
in
lock
lcall
ja
dec
icebp
arpl
cmp
pop
scas
popa
and
mov
mov
iret
add
inc
jno
sub
add
sbb
mov
push
ror
mov
add
out
push
inc
mov
add
add
rclb
stc
mov
or
add
sub
sbb
jae
push
in
add
push
add
dec
inc
int3
pushf
add
adc
add
repnz
repz
aad
mov
add
push
ret
dec
push
add
shll
loop
es
or
loop
sub
lods
sti
xchg
aas
pushf
stos
mov
mov
mov
stc
cmp
mov
dec
push
rol
cmp
sti
ja
add
pop
hlt
sbb
cmp
add
hlt
cmp
add
cwtl
jl
loope
in
mov
add
insb
and
dec
sbb
aas
push
cmp
push
push
lds
cmp
pop
xchg
fs
xchg
rol
add
sar
cmp
sub
and
lea
dec
pop
adc
test
push
pop
mov
sub
pop
add
jne
push
imul
and
aad
out
and
adc
test
add
xor
cli
mov
mov
inc
jle
xchg
out
es
add
push
out
inc
cli
js
xchg
lds
push
bound
hlt
movsl
add
pop
cmc
lds
push
fdivs
mov
xor
mov
and
cld
pop
lret
push
and
stc
aas
fistl
test
movsb
inc
mov
xchg
loope
pop
add
jecxz
pop
addr16
cli
add
add
pop
or
or
int3
cltd
sbb
and
add
pushf
adc
mov
mov
incb
arpl
sub
push
fidivs
fs
les
outsl
add
ja
imul
pop
mov
mov
xor
in
out
sub
pushf
icebp
add
or
add
jno
xchg
push
into
test
xchg
mov
add
lds
jns
inc
push
sbb
add
cmp
inc
adc
mov
cmc
cltd
xchg
rolb
cld
gs
sbb
jne
int3
lret
push
sub
push
xorb
dec
call
jnp
mov
js
adc
pop
jo,pn
cmpb
ret
rcrl
mov
add
jg
push
dec
les
cmp
rcrl
repnz
jl
xchg
xor
xor
jne
bound
popf
add
aaa
or
and
roll
jnp
nop
jns
sub
test
scas
mov
data16
or
ds
add
cmp
dec
jnp
add
dec
push
add
rcr
dec
or
lret
scas
lock
adc
rorl
mov
shl
push
pop
out
mov
lds
out
lret
aam
dec
jnp
pusha
add
jg
movsb
add
push
jbe
push
xchg
and
sub
xchg
lods
mov
sub
scas
add
int3
add
mov
sub
mov
int
enter
xchg
aad
add
fwait
mov
mov
pusha
mov
add
cmp
sbb
lret
orb
push
pop
inc
outsb
pop
add
xchg
and
pusha
push
out
jl
adc
loopne
cmp
or
stos
mov
or
popa
mov
adc
or
jne
fsubr
add
jge
pop
jne
lock
add
add
lret
lret
push
daa
popa
jae
lret
icebp
addl
adc
xchg
and
add
mov
pop
mov
mov
pushf
lret
and
ret
dec
mov
add
adc
dec
lds
pop
mov
mov
jo
xchg
sub
mov
inc
iret
jno
xor
pop
inc
xchg
pop
scas
sahf
and
mov
fiaddl
rcrl
lock
add
or
stos
xlat
cmp
js
int
dec
call
insl
push
inc
pop
and
and
and
arpl
int3
pop
aam
jecxz
xchg
outsl
sub
or
js
add
fdivrl
jns
jae
test
add
xchg
das
ljmp
push
test
je
incb
pop
jnp
mov
sbb
mov
in
pop
clc
test
scas
enter
or
sbbb
lret
jg
mov
lods
imul
jp
jae
sub
bound
or
shrl
sub
pushf
in
loope
inc
xchg
dec
data16
mov
ds
dec
add
int3
add
pop
jge
add
adc
roll
or
add
cltd
or
add
movsb
pop
add
in
xchg
push
out
stos
add
lahf
push
sbb
dec
mov
and
or
nop
mov
jle
mov
add
push
add
xor
add
add
cmc
push
inc
cmp
add
add
aam
push
imul
jns
jno
daa
ljmp
xchg
jl
inc
cmpsl
jnp
mov
mov
lds
mov
add
xor
add
mov
or
xor
dec
mov
sbb
jno
mov
add
loopne
xor
ds
fwait
adc
and
add
incb
cmp
add
add
add
mov
shrl
pop
pusha
in
jg
icebp
test
je
fimuls
inc
outsb
push
mov
aaa
adc
add
imul
loop
and
jo
je
clc
dec
mov
push
testb
add
ljmp
push
insb
and
pushf
nop
xor
bound
aaa
add
xchg
cmp
cmp
xchg
fs
or
add
sub
sbb
aam
call
mov
mov
imul
add
clc
insl
push
dec
std
testb
add
addr16
into
add
add
lock
jle
add
cmp
mov
scas
adc
pop
cmc
push
add
xor
das
or
test
gs
xchg
pop
dec
into
pop
add
mov
add
add
add
pop
mov
test
aas
ljmp
adc
imul
pop
fcomi
mov
or
jle
pop
divb
add
cmp
add
pusha
aam
inc
add
flds
lret
movsl
insb
xor
inc
ret
xchg
jnp
push
ljmp
lret
add
stos
data16
fistps
aaa
pop
bndstx
and
xchg
adc
movsl
pop
pop
fs
ds
scas
sub
mov
sbb
add
push
test
mul
cltd
addb
add
xor
sub
loopne
jno
std
adc
add
and
add
add
pop
sub
dec
inc
sub
jle
sub
pop
xor
loopne
mov
pop
mov
rcl
addb
xchg
cmc
add
pop
int3
out
pop
cmp
mov
aas
std
inc
lock
inc
dec
int3
jno
or
je
add
mov
push
or
and
push
push
mov
and
add
cmc
popf
lcall
add
lcall
dec
das
aas
imul
push
xor
push
xor
jmp
and
mov
xor
pop
scas
hlt
imull
iret
repnz
and
push
insb
je
mov
xor
aaa
roll
adc
cmp
stos
jecxz
adc
push
fs
jl
mov
test
bound
add
add
out
push
sub
cmpsb
add
fists
rcll
inc
add
jle
xlat
add
jmp
test
jb
cmp
pusha
add
cmp
pop
add
out
jns
add
dec
cmp
jbe
cmc
add
arpl
add
push
mov
dec
add
lods
fstps
adc
std
out
sub
add
test
sub
mov
add
lcall
xor
mov
cmp
fs
push
xorb
add
add
add
mulb
lret
dec
jmp
add
popf
xchg
jns
movsb
cmp
adc
sub
lock
in
and
icebp
add
in
push
inc
aam
adc
sbb
aad
push
call
add
ss
jmp
std
inc
clc
int3
rcr
add
push
imul
std
outsb
jmp
loop
pop
add
add
stos
inc
mov
add
daa
or
mov
and
outsb
icebp
mov
push
pop
pop
pop
lods
mov
add
test
int3
add
xchg
aas
dec
mov
stos
lcall
aaa
mov
jp
mov
sti
fs
mov
add
data16
sbb
fwait
jg
or
jmp
mov
das
adc
jno
jo
sub
out
test
repnz
xchg
add
rorb
dec
xchg
loop
cmp
dec
add
stc
sahf
subb
dec
inc
xchg
imul
ljmp
add
pop
lds
xchg
test
aas
sub
add
add
or
testl
outsb
mov
add
add
pop
and
rol
test
push
jg
add
xchg
sbbb
xor
rcrb
xor
cmpsl
movsb
hlt
add
jmp
jae
aad
add
shlb
test
insb
cwtl
hlt
add
mov
add
pusha
stos
push
das
add
add
push
push
fwait
or
xchg
in
push
out
xor
fs
nop
add
es
jmp
jne
mov
add
xchg
push
push
js
or
pushf
or
add
adc
adc
add
in
cmc
sbb
scas
dec
xor
inc
mov
add
cmp
dec
push
cmpsl
mov
aas
mov
inc
lret
jb
push
mov
dec
add
jns
add
dec
mov
cld
sub
xchg
fwait
jae
stc
add
bswap
lcall
pusha
mov
cmp
roll
sub
ret
pop
in
or
jae
pop
call
xor
jo
push
pop
sbb
xlat
add
and
adc
dec
sbb
or
jp
jnp
cmp
ret
push
clc
push
cli
add
add
in
lods
ret
add
jne
adc
aad
xor
jecxz
roll
add
shll
jle
pop
dec
add
int3
add
cld
movsl
mov
cmp
mov
imul
pusha
inc
cmp
out
push
xlat
ja
gs
test
add
int
loope
gs
ret
fcmove
loop
xchg
adc
mov
add
jp
dec
cmp
rorl
pop
add
pop
je
ret
add
lahf
add
aam
mov
andb
mov
inc
pop
push
push
fnstenv
mov
add
mov
sbb
inc
jp
cmc
add
cld
add
push
insb
xchg
data16
enter
lcall
push
jp
pop
repnz
fistl
clc
out
add
fs
add
fstl
idivl
xchg
sbb
adc
add
dec
add
and
add
add
popa
addr16
push
xchg
adc
fldenv
xor
leave
pop
push
out
xchg
cmp
add
inc
mov
sub
and
and
and
xchg
xchg
stc
sbb
cltd
int3
sbb
add
ret
loopne
xor
pop
faddl
cmpsl
inc
add
add
or
add
sbb
out
add
and
inc
mov
cmp
push
test
jp
adc
jmp
mov
dec
aad
clc
mov
enter
dec
and
ficoml
cmp
mov
xorl
jmp
push
jmp
mov
add
loopne
add
or
pop
add
xchg
into
shrl
add
fildll
mov
adc
inc
jnp
mov
cmp
test
test
xlat
add
sub
adc
es
out
add
add
add
rclb
add
aas
mov
mov
sub
add
lret
add
add
add
dec
adc
movsb
or
and
mov
mov
dec
scas
xor
callw
out
mov
call
call
jmp
mov
and
into
cmc
loop
add
cmpsb
es
push
mov
shrl
jl
ljmp
adc
lcall
test
or
xor
add
cmp
inc
add
push
les
repz
cmp
pop
inc
add
pop
mov
int3
push
add
jmp
pop
add
mov
aas
sti
add
aas
add
pop
sbb
mov
int
add
inc
add
ss
pop
dec
clc
add
imul
cmp
push
das
pop
add
sbb
divl
pop
jg
sub
aas
pop
mov
aam
pop
mov
out
jns
dec
mov
sbb
arpl
adc
stos
lret
add
or
scas
in
sbb
add
mov
add
hlt
xchg
rolb
dec
iret
mov
add
repnz
adc
lods
inc
push
out
mov
popf
arpl
xchg
in
out
jbe
push
add
mov
jge
jl
insl
addr16
shrl
pop
lods
sbb
mov
sub
xor
aam
add
mov
loope
jl
push
ret
sbb
int3
mov
aam
nop
mov
andl
lcall
lret
mov
movsl
gs
sbb
into
fsincos
sub
push
pop
faddl
repz
mov
inc
push
mov
cmpsl
add
and
sub
icebp
stos
addb
cmp
scas
add
dec
shrl
add
shlb
jns
jns
cwtl
pop
sbb
inc
or
mov
mov
add
mov
fidivrs
cmpsb
fiaddl
jne
or
aam
jle
sti
mov
push
pop
and
xchg
mov
ss
sbb
add
lcall
outsl
xchg
or
inc
xchg
fs
adc
insb
lods
popa
into
sub
sbb
in
or
xor
and
adc
scas
jnp
xor
adc
add
cld
and
sub
out
mov
je
lahf
movsb
sarb
aad
adc
fists
jg
popl
popf
out
inc
xor
test
dec
cmp
sub
dec
xor
imul
xor
jne
jne
subl
dec
or
cmp
stc
cmpsb
andl
mov
sbb
add
std
mov
push
and
add
roll
fsubl
mov
add
negb
cltd
or
xorb
js
sbb
dec
adc
addb
mov
xor
add
pop
and
mov
push
sub
cmovnp
push
xor
in
stos
arpl
add
add
lods
pop
jl
test
cmp
adc
inc
adc
jecxz
ds
jecxz
das
pop
jle
pop
imul
popf
fst
jno
xlat
lahf
add
imul
add
and
pusha
sbb
inc
ret
pop
xor
aad
aas
add
mov
adc
inc
mov
jle
stos
insl
in
hlt
popf
adc
out
dec
pushf
add
aas
mov
ja
lock
add
enter
add
mov
lcall
add
lea
cmpsb
cltd
ljmp
das
add
jbe
pop
stc
imull
repnz
mov
rcrl
cmpb
sbbl
je
fcoml
dec
les
cmpsl
mov
xchg
xchg
pusha
xchg
jno
out
xor
je
call
jns
mov
lods
sbb
sbb
mov
jbe
test
rolb
sub
cmp
jecxz
scas
and
add
inc
add
ljmp
rorl
loop
mov
aaa
clc
mov
loope
test
jno
mov
loop
jg
fnstenv
test
cmp
sub
cmpsl
sbb
add
adc
add
dec
add
mov
lds
sub
mov
mov
add
sbbl
or
sub
arpl
iret
or
filds
push
inc
mov
adc
jo
sub
je
es
cmpsb
cmp
inc
push
imul
sub
rorl
clc
sbb
mov
js
and
data16
pushf
data16
test
and
out
adc
inc
pop
cwtl
mov
into
inc
jg
xor
sub
ror
sbbl
mov
in
nop
jg
repz
mov
and
test
add
lcall
fbstp
sub
xchg
adc
and
and
test
mov
add
xor
add
cwtl
int3
int
movsb
std
gs
or
pop
add
cwtl
sahf
das
inc
add
add
xchg
enter
or
jl
mov
popa
xlat
xchg
add
or
xchg
add
insl
sub
dec
mov
sar
add
mov
push
roll
jae
adc
mov
add
mov
ss
dec
stc
popa
mov
sahf
jl
outsl
add
pop
in
fsts
movsb
adc
mov
ret
jmp
sbb
sti
pop
and
add
movsl
subl
out
ljmp
arpl
dec
aam
xor
inc
xchg
out
and
sbb
fs
add
jmp
pop
ds
nop
daa
sbb
jo
stc
add
lcall
add
mov
add
imul
pop
enter
inc
test
adc
in
dec
cld
push
adc
pop
add
add
aad
mov
scas
inc
cs
add
pusha
add
or
mov
xor
cmp
cmp
cmc
jne
mov
add
jl
xchg
leave
push
add
in
and
rolb
and
add
push
dec
adc
push
pop
push
les
lds
or
add
outsb
cli
add
fldl
fistps
icebp
mov
adc
lods
or
add
pop
lds
mov
mov
push
leave
adc
gs
clc
movsb
sti
bound
js
jne
add
add
push
sar
pop
add
iret
add
gs
jle
cmp
or
and
insb
cmp
neg
cmp
sahf
aas
inc
jge
xor
fcmovne
add
add
cld
mov
sub
in
mov
aad
add
arpl
gs
xorb
inc
and
or
outsl
inc
push
ja
je
add
lret
add
add
xor
repnz
jae
mov
lods
adc
inc
add
cmp
mov
pop
cmc
dec
pop
lret
inc
leave
jo
cltd
hlt
cmp
jne
add
daa
jb
dec
mov
sub
add
mov
mov
ret
imul
test
cmp
jbe
mov
gs
stos
ret
dec
xchg
iret
ljmp
cmpsl
mov
inc
xchg
lea
add
or
ja
leave
jge
push
jp
sti
cmpb
cmp
lds
or
dec
add
data16
add
fs
jo
jno
dec
fcoml
je
pop
mov
inc
hlt
sti
pop
jl
insb
add
loop
incl
insb
or
out
test
mov
fsts
leave
jecxz
dec
ror
pop
iret
movl
xchg
cmp
mov
add
jg
call
les
repnz
repz
int3
lcall
imul
daa
lahf
add
bound
mov
mov
adc
adc
xor
add
stos
jae
xchg
cmpsl
add
lock
fists
cld
and
or
add
int
aas
repz
ja
int
shr
add
cmc
movsl
ja
xchg
cmp
in
add
lods
call
add
push
in
xchg
lock
mov
add
xchg
enter
subl
mov
mov
dec
test
add
cmp
mov
loopne
pushf
or
mov
add
add
or
icebp
cmp
sbb
cmp
add
lea
add
loop
clc
cmpsb
xor
jo,pn
nop
jecxz
in
or
add
sarl
jne
nop
add
jp
mov
into
faddl
lea
adc
adc
dec
xchg
add
nop
stos
cmp
ja
addr16
mov
mov
xor
sbb
mov
cmp
jne
push
or
inc
aaa
add
stc
jecxz
cmp
lea
add
in
in
lock
xor
leave
add
and
sarb
sub
xchg
rolb
shrl
aam
aaa
int
inc
sbb
jbe
into
mov
sbb
add
repz
orl
add
icebp
xchg
imul
pop
ds
fdiv
mov
sbb
es
push
lret
mov
insb
fptan
push
xchg
ja
jle
push
test
xchg
mov
sbb
pop
dec
sarl
mov
sub
mov
lcall
add
data16
outsl
xchg
add
add
inc
fcoml
lods
mov
dec
or
pop
es
xor
dec
out
js
inc
cmpsb
inc
clc
outsb
pop
or
cmp
lret
fmuls
push
bound
outsb
es
inc
imul
lahf
enter
test
mov
adc
dec
jl
pop
mov
dec
shlb
fisttpl
scas
dec
iret
push
jmp
testl
or
rcrb
xchg
icebp
pop
insb
insb
leave
ret
imul
dec
cwtl
shll
out
mov
add
fcmovnbe
into
cmpsb
jnp
jecxz
or
and
add
leave
flds
cs
push
add
ficompl
jae
jmp
adc
jmp
mov
in
jnp
out
adc
enter
lahf
jmp
pop
inc
pop
lods
ds
mov
mov
mov
mov
xor
mov
incb
mov
mov
pop
mov
xchg
add
mov
in
subps
std
jnp
or
push
ljmp
xorl
jnp
jo
outsb
inc
push
mov
sti
add
clc
leave
add
cmpsl
cmc
adc
xchg
sti
cmpsl
idivl
or
test
addr16
in
les
cmpsb
and
sub
es
mov
loope
daa
mov
xchg
aaa
ret
xchg
jo
mov
push
lahf
fstps
pop
gs
lds
mulb
lock
xchg
aam
cmp
jb
adc
lcall
pop
inc
dec
imul
xchg
fcompl
adc
mov
lods
cld
and
mov
outsl
out
add
rep
out
test
out
leave
add
sub
and
aad
and
mov
sbbb
push
xorb
nop
mov
add
mov
add
xor
mov
call
sub
add
cmp
testb
or
push
nop
cs
adc
icebp
movb
in
xor
add
push
mov
push
mov
adc
push
idiv
inc
xchg
pop
xor
aas
jge
add
or
dec
stos
pop
mov
ror
add
aaa
scas
gs
outsb
cwtl
mulb
add
cmp
icebp
pop
fmuls
add
add
jecxz
ds
jecxz
ljmp
sahf
outsb
shr
lock
add
xchg
xor
sub
test
ds
cmpsb
mov
in
in
mov
add
popf
ja
mov
pop
out
aaa
insb
movsl
push
adcb
xor
add
cld
add
fimull
xchg
mov
cmp
jp
inc
add
add
push
sub
mov
add
mov
inc
add
aam
fildl
andb
push
add
cmp
sub
out
ss
or
add
add
or
add
test
out
mov
inc
loop
fidivrl
imul
add
ljmp
push
jge
pop
ret
lea
dec
gs
push
adc
cmp
jecxz
out
add
nop
mov
jns
xchg
mov
pop
xchg
xchg
in
and
inc
mov
mov
jae
clc
add
dec
add
jo
xchg
lret
mov
roll
ja
pop
inc
cmp
movsb
cld
add
push
loopne
and
clc
cltd
in
rorb
jl
xchg
sub
das
rcll
adc
adc
xor
dec
add
cltd
xlat
adc
scas
fistpll
inc
sbb
add
test
mov
insb
aaa
cmp
ljmp
push
mov
pop
pushf
add
lds
dec
test
jmp
add
outsl
inc
pop
jb
in
stc
pop
lods
daa
cmpsl
rep
sub
cltd
popf
inc
mov
ljmp
repz
clc
and
mov
jo
add
stc
adc
adc
jp
dec
and
stos
inc
inc
les
push
in
sub
ret
jg
adc
cmp
pop
hlt
gs
adc
pop
js
jae
add
xchg
lcall
std
popa
adc
stc
add
test
dec
push
mov
lahf
das
loope
stos
mov
pop
jo
or
cmp
add
add
gs
loop
cmp
out
add
xchg
leave
add
xchg
mov
pop
hlt
stc
push
xchg
add
mov
and
add
lahf
inc
outsb
push
lret
mov
dec
xlat
into
adc
mov
add
lea
xor
xchg
push
add
popl
jns
insl
xor
xor
push
subb
lods
enter
mov
addl
cmp
xchg
pop
sbb
pop
fs
sub
adc
addr16
jmp
xlat
or
or
pop
or
aas
ljmp
pop
popf
add
sub
rcll
add
jb
sbb
or
add
arpl
sbb
test
aam
add
int3
pop
pushl
sbb
or
insl
ja
ds
push
jle
xlat
xchg
and
sbb
repz
dec
or
jmp
add
cmovl
fcomi
pop
add
cltd
sahf
in
jecxz
ja
mov
int3
mov
int3
dec
cmp
stos
mov
sbb
dec
inc
add
push
into
add
push
les
jp
test
add
ret
cmpsb
add
cmpsb
xor
jg
jle
test
jae
stos
inc
repnz
adc
data16
rol
lahf
dec
test
cmp
or
push
jo
jg
cmc
mov
mov
popf
lcall
jle
test
fnstsw
loope
call
add
add
and
bound
mov
xchg
mov
arpl
adc
cmpsl
ja
xor
cmp
xchg
and
xor
in
test
xchg
add
dec
mov
and
cmp
or
sub
in
aas
test
sbb
das
imul
fiadds
sbb
xchg
das
dec
fildll
xchg
push
add
xchg
add
sub
cwtl
add
roll
fs
add
push
add
call
sbb
inc
add
pop
dec
jb
fistpl
mov
pop
out
test
aaa
ret
add
aam
xor
insb
aad
mov
inc
das
adc
and
aad
call
add
dec
xchg
inc
aam
lcall
mov
dec
add
mov
mov
and
inc
add
xchg
test
and
pop
mov
pop
sub
push
inc
int
xorl
lds
or
mov
popa
ds
add
and
gs
add
mov
dec
xlat
xor
in
pusha
add
jg
fists
push
jnp
sbb
sbb
cmp
mov
in
filds
push
das
lods
js
lea
sub
popf
sbb
icebp
ficoml
xor
push
mov
insl
mov
xlat
loopne
nop
js
cmp
rcrb
sbb
sbb
fiadds
cltd
push
sub
dec
in
mov
jl
push
mov
add
out
mov
push
pop
push
hlt
sar
idiv
int
hlt
cmp
test
in
popl
dec
push
inc
push
add
iret
add
aaa
test
mov
ret
data16
pop
inc
pop
dec
add
xchg
imul
mov
add
jno
sbb
cli
inc
stos
movsb
imul
push
cmp
add
js
xlat
cltd
xchg
inc
pop
scas
jp
jecxz
popf
mov
out
aas
sub
sti
push
xor
aaa
scas
cmpsl
neg
lods
push
hlt
xchg
dec
push
xchg
cltd
inc
xor
sub
adc
icebp
push
cld
push
add
cmp
push
mov
xor
mov
jg
and
mov
stc
add
pop
xchg
cmp
in
mov
mov
stc
cmp
lods
mov
add
cmp
and
add
cmp
ret
ficomps
add
int3
or
test
cltd
mov
jnp
lock
outsb
add
sub
add
add
inc
push
test
fistps
jno
mov
fisubrl
or
mov
in
cmc
insb
pop
ja
jecxz
add
add
sub
fsubs
cmp
adc
nop
mov
or
outsl
mov
and
mov
add
test
and
sbb
in
out
add
adc
or
jne
bound
repz
cs
adc
cmpsb
idivb
fnstcw
bound
repnz
pushl
mov
adc
leave
mov
ss
fsubrl
fists
mov
cmpsl
xor
adc
test
stos
xor
cltd
lods
xchg
mov
push
add
jmp
add
sbb
or
mov
jb
hlt
push
mov
je
outsb
and
inc
and
jle
push
repnz
sub
add
addb
orb
fildll
cmp
pop
jns
test
and
pop
cmpsb
cmp
sbb
sarl
arpl
mov
add
add
sub
add
xchg
stc
imul
loop
sbb
cmpsl
push
cmp
mov
sbb
xchg
call
mov
add
push
xor
sbbl
and
insb
arpl
add
jno
mov
lret
add
push
dec
mov
sarl
sbb
and
sub
popf
mov
jnp
dec
add
mov
mov
pop
push
sub
icebp
xor
je
out
arpl
or
add
inc
xor
and
add
mov
jbe
pop
je
cmp
lods
cmp
ss
scas
rorb
xchg
cmp
pminsw
cltd
xor
loope
sbb
or
mov
add
test
out
add
sub
aas
daa
inc
lock
fidivrs
dec
mov
out
add
mov
pop
addl
inc
insb
inc
pop
and
push
fiadds
sbb
out
in
mov
mov
xchg
xchg
mov
push
or
push
icebp
push
add
stos
aad
idivb
jno
dec
add
jecxz
ret
cmp
push
jp
sbb
push
add
sbb
push
jno
add
cmp
sarl
push
icebp
sbb
mov
popl
xchg
pop
sub
jge
push
cwtl
enter
sub
in
das
mov
add
mov
add
mov
push
mov
clc
sti
push
add
xchg
add
or
dec
inc
adc
stos
stc
jl
mov
xchg
std
stos
sbb
jl
xchg
aas
mov
push
into
repz
pop
rcl
push
movsb
jne
push
test
mov
cs
popa
aad
iret
ja
into
mov
int3
add
rol
fdivrl
movsl
xchg
test
sbb
push
loop
in
out
ds
in
mov
lahf
push
enter
cs
sub
pop
lahf
jo
add
scas
jg
jae
fbstp
xchg
js
mov
stos
jle
push
mov
xlat
push
scas
adc
outsl
rcl
out
xchg
leave
scas
inc
mov
pusha
repz
add
jbe
pop
xor
rcll
scas
sbb
xor
mov
add
out
test
rolb
pop
pop
add
add
cmp
and
out
in
mov
es
pop
es
ds
mov
imul
xor
jno
js
jp
adc
adc
push
call
push
add
adc
icebp
flds
adc
lret
loop
xor
and
pop
cmp
or
repnz
push
cli
addb
add
repz
mov
xchg
inc
lds
jp
jae
sub
mov
jmp
movsl
push
out
mov
add
mov
inc
or
xor
push
add
roll
add
cli
faddp
pop
xchg
add
loope
hlt
jmp
add
fs
ja
sub
dec
add
adc
sbb
add
dec
jo
or
jmp
sub
pop
lret
and
outsb
push
ss
add
add
xchg
mov
cld
add
lahf
add
in
add
lds
sbb
in
dec
cmpsb
jnp
das
xchg
repz
add
shlb
adc
rcl
add
push
xor
cmp
sub
mov
mov
jbe
adc
push
mov
sti
push
ljmp
pop
add
ljmp
js
add
mov
dec
shll
fstpt
pop
sub
add
push
stos
arpl
lahf
adc
lods
add
adc
lahf
aad
lea
sub
jecxz
in
jge
incl
mov
or
or
mov
jl
sbb
data16
insl
lods
cmp
push
add
or
add
xchg
adc
call
test
ds
loop
mov
lret
add
in
sub
stos
fnstsw
jecxz
ljmp
into
clc
shll
add
pop
enter
sbb
mov
jmp
pop
fwait
pop
mov
insl
xchg
loope
iret
iret
test
mov
outsb
inc
add
out
sub
fldcw
xor
cwtl
lock
hlt
jne
add
push
add
aaa
jno
ret
std
repnz
push
repz
xor
pop
lods
data16
shlb
or
mov
mov
fldl2t
inc
imul
sarb
imul
andb
or
mov
jecxz
pop
push
jp
add
jnp
add
mov
inc
mov
xchg
pop
in
cmpl
add
inc
inc
adc
outsl
mov
add
cmovge
adc
fucomip
loopne
mov
push
fisubrs
adc
pop
fstpl
and
cli
pop
inc
and
hlt
jnp
jle
push
ds
dec
ret
lahf
out
add
pop
out
pushf
sti
cmp
leave
dec
lock
mov
aad
lcall
fs
xor
add
push
imul
mov
cmp
popa
cltd
push
scas
inc
cmp
insl
add
test
mov
jl
mov
adc
fistpll
add
sbb
dec
dec
pop
das
fcompl
and
pop
dec
ret
les
pop
add
movsl
jae
pop
aaa
stos
ret
and
popf
in
sbb
cwtl
or
imul
inc
cmp
sbb
sbb
gs
sub
pminub
ds
add
repnz
jno
fwait
stos
in
cmp
pusha
rcll
ret
inc
das
add
add
pop
decb
fs
xor
imul
fldenv
jge
insl
lahf
pop
xor
mov
les
outsl
xchg
in
faddl
xor
cmpsl
and
dec
scas
stos
jae
out
sub
dec
out
pop
push
sbb
xchg
cmp
push
cs
aaa
cwtl
cld
add
movsb
pusha
mov
imul
cmp
fdivrl
dec
jmp
data16
jg
cli
adc
data16
adc
iret
add
lcall
fmuls
pop
and
sbbb
jecxz
xor
arpl
shlb
mov
add
or
jb
int
jmp
add
mov
jl
dec
add
xor
pusha
aad
clc
and
ljmp
add
jg
dec
addr16
add
pop
add
inc
add
fnstenv
fstpl
into
and
mov
or
dec
bound
sbb
pop
movsl
add
lods
xchg
sbb
lods
jo
daa
xchg
inc
jg
call
out
inc
mov
movb
push
inc
aaa
jmp
ja
cld
fstpl
fadds
jo
add
insb
xchg
push
xlat
scas
mov
aam
and
add
dec
xchg
push
movsb
push
js
pop
test
outsl
leave
add
es
hlt
loope
adc
fcomi
sub
add
push
out
and
ds
sbb
add
mov
lea
ss
popl
inc
nop
fs
add
xchg
mov
into
fsubrp
or
cmp
cmpsb
xor
sub
mov
xlat
ficoml
sbbl
smsw
sbb
xor
push
je
lahf
outsl
push
sbb
mov
push
ret
rorl
mov
adc
imul
or
sbb
and
mov
cwtl
std
insl
fsubrp
je
aaa
xchg
inc
ss
adc
sub
and
fs
mov
sti
sbb
xchg
xchg
out
mov
adc
and
jmp
dec
leave
add
push
and
xchg
pusha
cmpsl
xchg
add
fnsave
jb
aas
ret
jp
xchg
incl
popa
aaa
jb
ss
ret
nop
and
ror
mov
sub
pop
imul
es
fiadds
add
adc
jp
dec
test
add
add
nop
addl
mov
jne
xchg
xchg
out
xchg
add
xchg
jne
test
adc
mov
idivb
pop
xor
imul
movsb
in
imul
push
imul
je
jmp
add
push
js
int3
or
xchg
cmp
out
sbb
jp
push
inc
out
mov
add
push
pop
jg
adc
movl
ds
xor
pushf
jbe
dec
cli
jo
addr16
fidivrl
jecxz
add
fisttpll
and
jge
arpl
mov
pop
add
stos
fiaddl
fs
cmp
nop
scas
jb
pop
cmpsb
test
xor
mov
add
xor
jmp
outsl
mov
adc
test
scas
mov
add
stc
je
leave
mov
and
jmp
lods
dec
cmp
es
inc
fsubr
mov
xchg
add
xor
mov
or
jge
add
jbe
call
add
add
add
nop
sbb
sbb
les
push
add
cbtw
sub
cmc
fildl
fneni(8087
pop
push
add
out
inc
add
cmpsl
mov
inc
repnz
pop
lods
ret
push
or
inc
sbb
ds
add
pop
add
ds
cmpsl
lret
and
in
cmpsl
bound
stos
out
lods
mov
jle
xor
dec
xor
cmp
inc
add
jbe
lret
mov
les
sub
inc
scas
lahf
inc
xor
stc
aam
mov
and
mull
div
pop
je
add
lahf
sub
testl
shrl
sub
sbb
and
pop
in
movhlps
mov
adc
bound
dec
mov
mov
add
xlat
sbb
mov
inc
scas
andl
out
cmp
sub
nop
add
lret
pop
inc
js
das
mov
sub
add
test
popl
mov
or
nop
cmp
popa
mov
dec
push
add
sti
insb
pop
aaa
mov
xchg
incl
add
jno
add
push
xchg
out
cwtl
aad
hlt
faddl
addl
add
in
testb
pop
cmpsl
mov
lock
add
arpl
push
lea
pushf
lret
dec
jns
mov
dec
jne
ret
test
iret
mov
xlat
pusha
inc
cmc
sub
add
scas
call
cmp
nop
sub
adc
and
add
sub
cld
push
fmulp
pop
stc
repnz
popa
das
dec
or
clc
fdivrl
jecxz
movnti
clc
rcl
fdivrl
sbb
adc
add
jecxz
mov
cmp
jp,pt
push
sbb
mov
orl
sarb
add
ret
add
dec
add
add
leave
in
mov
sbb
sti
add
push
cmp
in
add
pop
mov
enter
outsl
in
movsb
push
outsb
add
cwtl
shlb
mov
mov
pop
je
cltd
repz
add
inc
cmp
call
iret
jmp
cld
pop
rcr
push
dec
jmp
inc
mov
xor
lock
inc
rolb
dec
mov
add
lcall
mov
inc
pop
xor
test
add
filds
pusha
iret
xor
test
xlat
mov
popl
pop
mov
mov
imul
es
aaa
push
cmpsl
mov
adc
xlat
add
cmp
or
loope
pop
aas
mov
aam
cltd
jbe
adc
and
dec
add
mov
loopne
jno
jbe
cmpsb
jle
push
pusha
xchg
add
test
rcr
add
daa
and
lea
mov
mov
add
insb
jb
pop
imul
xchg
mov
xor
loopne
add
xlat
xchg
add
add
add
test
pop
shl
jb
jecxz
scas
jmp
rorl
inc
inc
pushf
lcall
lock
icebp
mov
or
inc
or
arpl
ljmp
mov
add
jecxz
out
jb
bound
adc
mov
add
pop
sbb
push
insl
push
push
in
mov
add
add
xchg
ss
jecxz
aad
add
add
push
xor
pop
and
loop
jg
inc
cli
add
fmul
aaa
mov
pop
aad
pop
xor
add
loope
xor
hlt
cli
fldt
adc
add
sahf
add
popa
or
pop
push
data16
pop
mov
adc
lret
pop
add
lods
xor
cs
jg
addl
iret
push
add
fxch
loope
loop
add
clc
add
imul
xor
add
je
xchg
xchg
xor
cwtl
pop
push
push
add
add
mov
add
jns
lods
sbb
push
jnp
jno
cmp
xchg
lea
fldcw
fcoms
les
scas
fs
faddp
sbb
pop
add
push
push
sub
imul
ja
add
lret
repz
iret
ljmp
xchg
aas
ret
jge
das
add
shlb
jo
add
fstpt
sbb
xor
fprem1
sti
add
mov
data16
aam
or
lock
sbb
or
stos
adc
push
cmove
ljmp
mov
adc
mov
lea
add
and
lods
xor
mov
jmp
testb
xlat
dec
add
imull
cli
pop
mov
mov
pop
xor
jb
dec
add
cmp
sub
cs
nop
and
sbb
mov
or
and
xor
and
lods
test
xchg
icebp
cmp
jp
push
dec
aad
les
inc
add
xchg
add
jns
jp
mov
popf
lods
bound
scas
sub
mov
and
popf
add
or
stos
add
xchg
dec
and
add
mov
mov
add
sbb
xchg
repnz
dec
xor
inc
add
push
notb
inc
stc
mov
add
mov
lods
add
bound
add
pop
add
add
sbb
in
mov
jne
aaa
add
scas
cli
jecxz
xor
add
add
jle
filds
incl
xchg
stos
or
or
popa
add
mov
lcall
push
xchg
jbe
gs
mov
lds
jecxz
cmp
ss
mov
pushf
outsl
inc
inc
mov
sbb
inc
dec
add
mov
cmp
cli
push
adc
test
adc
cmp
add
sahf
jmp
xchg
ja
or
dec
pop
lods
add
sbb
xchg
lcall
iret
cmp
fisubrs
inc
movsl
mov
inc
xchg
popf
pop
mov
add
xor
jecxz
bound
daa
cmpb
xchg
push
inc
and
aaa
in
or
inc
xor
xchg
ret
and
jge
sub
and
bound
sub
dec
ret
add
add
into
pop
xchg
adc
dec
popf
mov
jnp
addr16
mov
jmp
xchg
adc
dec
push
and
sbb
xor
fiadds
and
fldl
in
jae
clc
mov
insl
aas
push
in
xchg
cld
push
mov
lea
adc
pop
jb
pop
out
add
sub
xor
pop
add
push
add
jbe
jecxz
sbb
cld
decl
inc
add
jb
rcrl
adc
add
add
sub
adc
repnz
adc
popf
inc
test
pop
outsb
mov
aas
sub
jge
popf
out
ljmp
stos
sub
shlb
xchg
xor
repnz
push
and
mov
pop
cmpsb
lret
out
subb
pop
mov
xchg
das
add
sub
ss
shl
aaa
inc
add
cld
add
mov
das
inc
cmp
add
loop
mov
add
outsb
subl
inc
and
in
sarb
xor
lret
sbb
ljmp
jno,pn
mov
nop
outsb
das
mov
jmp
xchg
sub
pop
std
std
adc
scas
xor
sub
sbb
dec
nop
imull
add
mov
xchg
or
outsl
push
mov
popf
pusha
adc
cld
sbb
aaa
cmpsl
cltd
les
xchg
jae
mov
es
mov
pusha
mov
sbb
push
mov
sub
fimull
cmp
mov
aas
push
and
in
xor
jle
mov
jb
and
loope
push
icebp
push
cmp
mov
scas
add
xchg
and
push
jns
push
outsb
cmp
pop
xchg
push
push
mov
mov
or
or
add
aam
je
jl
hlt
adc
aam
pushf
nop
add
xchg
and
lret
xchg
push
add
pop
add
jbe
test
inc
jmp
adc
cmp
pop
add
divb
push
clc
popa
add
adc
out
sub
add
and
push
sbb
jge
lea
sub
jns
outsl
stc
add
notb
mov
jno
pop
or
jmp
mov
mov
mov
sub
gs
mov
repz
push
lahf
add
add
jle
daa
addl
xor
push
cmp
jnp
aad
add
lods
ljmp
icebp
add
pushf
sub
js
adcl
inc
or
ljmp
jb
nop
push
mov
andl
push
inc
pop
cltd
mov
push
mov
test
add
add
outsl
add
cmpsl
and
cmpsl
js
adc
xchg
inc
inc
insl
and
test
clc
push
sbb
call
cmpsb
jge
roll
sub
std
fucomi
lock
incb
dec
add
ljmp
aas
and
sbb
mov
and
fucomi
xor
lock
add
or
cmp
addb
push
test
cmp
rol
and
add
mov
and
popa
ficoml
add
int
mov
xor
test
loop
stc
mov
in
int3
out
jl
ret
sub
dec
add
and
xchg
xchg
mov
imul
cmp
pop
lea
loop
ljmp
ja
mov
int3
pusha
adc
jl
adc
int3
enter
or
push
dec
or
jge
mov
popa
mov
sarl
test
adc
cmc
xor
add
add
adc
movsb
inc
jbe
and
mov
add
and
xor
push
call
mov
jl
add
add
or
mov
jl
sub
aam
add
insl
shrl
add
loope
xchg
clc
cli
aad
sub
mov
add
adc
into
dec
scas
mov
in
fsubrs
add
mov
add
int3
lret
pusha
mov
in
lods
fsubs
dec
cwtl
lahf
movsl
pop
mov
ja
add
in
mov
add
pop
lcall
sub
mov
enter
add
pop
push
push
xchg
cmpsl
xor
and
add
jno
add
add
mov
jns
sbb
inc
add
loope
add
add
clc
add
pop
mov
aad
out
mov
pop
xchg
fsub
mov
mov
das
lcall
xor
dec
repnz
cmpl
xchg
push
bound
sar
pop
add
add
mov
jmp
pop
mov
adc
dec
inc
in
or
pop
add
add
fldl
fdivs
jne
adc
pop
and
pop
dec
add
push
add
pop
fs
xor
in
mov
inc
ljmp
stc
cmp
decb
and
imul
add
adc
add
sub
xor
inc
add
push
popa
lds
adc
cli
push
mov
cmp
into
and
push
inc
xor
orb
mov
sahf
jg
cmp
mov
push
dec
jne
mov
dec
adc
pop
ret
fldt
out
cmc
or
push
add
and
aam
loop
out
mov
cs
add
aam
xor
ret
test
mov
fwait
or
add
jne
pusha
and
loope
inc
add
cs
inc
inc
mov
loopne
mov
inc
iret
enter
cmp
arpl
ja
mov
inc
cltd
add
or
sahf
lods
test
pop
rclb
pop
dec
sub
cmp
rcll
jp
mov
in
jae
pop
add
adc
inc
inc
pop
test
cwtl
imul
jmp
lods
or
xor
addl
les
test
stc
add
adc
push
pop
mov
scas
adc
std
add
add
fadds
push
mov
sbb
insb
cmp
add
insl
push
js
imul
shl
cmc
pop
add
adc
scas
xchg
xchg
jns
xchg
str
push
testl
sub
ss
insl
and
xchg
add
add
cmp
incb
lcall
enter
mov
mov
ljmp
mov
xchg
ss
je
jp
in
push
imul
gs
ficoms
pop
rolb
cmp
inc
enter
stos
push
fwait
add
cmpsl
subb
out
adc
out
ja
shrb
xor
sbbl
add
jo
xchg
cli
add
lods
call
adcl
inc
xchg
sbb
fidivrl
imul
add
addr16
test
loop
addr16
xor
and
xor
imul
dec
add
add
jp
add
lret
pop
add
sbb
dec
popf
fs
add
enter
add
lea
scas
dec
repz
sbb
dec
sbb
pop
dec
popf
xchg
sub
add
add
out
jbe
fstpt
fdivr
mov
add
jo
add
dec
jbe
arpl
lea
inc
xor
xor
out
add
add
popf
add
pop
pop
ret
daa
add
mov
arpl
lahf
scas
mov
in
push
inc
push
jae
inc
jl
mov
push
add
pop
int
mov
mov
inc
pop
rolb
out
inc
popa
pop
add
xchg
add
divb
cmp
inc
loopne
mov
xchg
xor
mov
les
inc
lea
fldenv
out
aad
testl
push
orb
inc
pop
sbb
add
add
stos
das
inc
clc
mov
pop
mov
sbb
push
or
inc
movsl
call
add
inc
lods
pop
fimuls
xchg
mov
push
insb
sbb
xor
frstor
loop
and
push
or
sti
add
inc
int
add
mov
test
imul
add
xchg
add
add
add
xor
sbb
pusha
into
aam
into
insl
ljmp
jle
mov
inc
push
shl
add
sbb
or
push
mov
mov
ja
daa
cmp
sahf
out
lods
sbb
adc
aam
jne
pop
push
mov
jp
add
imul
mov
inc
aam
push
mov
ljmp
add
icebp
add
lds
inc
pusha
in
test
jge
jle
mov
and
mov
xchg
mov
enter
rorl
sarl
cmpsl
adc
push
jg
jp
jnp
inc
lret
push
jns
shll
add
mov
push
call
push
mov
inc
add
jno
add
add
rolb
fwait
cld
add
enter
dec
adc
and
pop
xchg
jecxz
repnz
lahf
xchg
add
popl
push
add
jb
mov
out
mov
xchg
push
adc
add
fisubrs
push
rclb
fstp
add
mov
scas
aam
adc
fxch
cltd
sub
push
mov
xchg
add
dec
lods
arpl
add
add
xchg
aad
fadds
add
movsb
in
xor
mov
stos
leave
push
dec
mov
add
adc
lret
mov
add
setge
aad
push
cli
push
dec
lcall
add
jo
or
iret
dec
popf
add
add
leave
sbb
add
and
popf
out
adc
cmp
or
and
insl
inc
les
add
push
xchg
rclb
in
std
lret
pop
mov
mov
in
fcompl
das
add
leave
xchg
fs
jb
ret
pop
inc
cmp
pop
sub
cwtl
cli
add
orps
in
add
cmp
cmpsb
mov
push
add
rorb
jge
pop
sbb
sbb
dec
sbb
cmpsb
pop
add
in
divb
inc
cmpsl
ds
aaa
or
cmp
rolb
movsb
arpl
aad
stos
xchg
nop
jb
dec
lret
mov
sahf
jo
arpl
popf
bound
imull
or
roll
imul
dec
sub
in
clc
loop
pop
clc
xchg
add
mov
dec
dec
movsl
add
fs
or
dec
mov
ja
mov
xor
roll
sub
shll
pop
mov
out
inc
imul
sub
jae
sbb
daa
inc
jae
or
jl
add
pop
cli
les
mov
insl
in
dec
adc
ffree
lods
lcall
cmpl
lods
mov
add
add
inc
add
jne
sbb
mov
push
std
adc
ljmp
xchg
sbb
cwtl
lods
imul
add
sub
add
mov
sbb
cmp
repz
mov
stos
xlat
sbb
dec
and
jle
xchg
cmp
push
shrb
add
add
sti
pop
aam
lret
add
stc
stos
mov
lahf
or
sbb
jmp
js
int3
movl
mov
lods
stos
push
jg
mov
or
inc
add
xor
cs
sub
add
imul
push
push
icebp
in
mov
cmc
aas
dec
sti
pop
jns
gs
add
xchg
lahf
cmpsb
repz
pop
cwtl
daa
inc
inc
jge
adc
lods
add
das
mov
insb
iret
jno
mov
add
add
xor
paddsb
xchg
mov
push
jecxz
and
mov
and
add
inc
jg
push
mov
test
adc
lahf
rclb
ret
inc
iret
jnp
add
popa
lea
add
add
aad
mov
lret
sub
push
pop
aad
mov
add
loop
dec
cmpsl
loop
mov
mov
xor
ljmp
lret
push
xchg
mov
fwait
mov
push
aaa
in
inc
int3
push
xor
add
loope
inc
cwtl
iret
sarb
popl
mov
or
je
cmp
cs
xchg
xor
adc
adc
sub
push
add
sub
mov
lret
mov
aas
dec
mov
fdivrl
xor
add
dec
jle
pop
add
fdivr
xor
lods
sub
add
or
pop
cmp
xchg
enter
andb
jns
mov
dec
jo
sub
cmc
out
jmp
xorl
insl
into
inc
add
dec
sbb
xor
cmpsb
outsl
add
fdivrs
clc
idivl
push
pop
lock
add
lods
push
icebp
outsb
jo
inc
pop
mov
test
cmp
add
test
pop
adc
addb
add
cmp
jp
add
shlb
add
sub
inc
push
ret
movsb
ss
lret
jnp
bound
sbb
dec
dec
addr16
add
xor
clc
jecxz
mov
push
mov
lret
sbb
popa
add
fnstsw
les
dec
add
cmp
mov
add
insl
add
add
aas
xchg
mov
xor
fadds
and
adc
add
inc
bound
out
add
mov
pushf
mov
xchg
pusha
or
jg
mov
fsqrt
imul
and
xor
adc
add
xor
add
sbb
repz
push
add
adc
or
daa
sub
int
lods
fnstenv
xor
sub
mov
pop
xchg
data16
les
test
jge
add
clc
sbb
jle
test
popf
imul
add
pop
sbb
sub
push
jbe
mov
addb
mov
adc
in
and
jnp
adc
fadd
outsb
push
xchg
push
aaa
lret
inc
sbb
mov
add
aam
or
mov
add
mov
lcall
fcoml
fsubrs
add
mov
sub
add
add
dec
inc
stos
or
adc
adc
sbb
pop
sbb
inc
add
mov
pusha
std
xor
jg
add
cmp
shl
outsl
loope
daa
jae
test
jmp
inc
call
jnp
jmp
mov
in
add
ret
pushf
sub
push
pop
add
add
mov
add
pop
jp
add
push
stc
adc
dec
loop
pop
adc
pop
fldcw
cmp
repnz
pushw
mov
add
in
movsl
movb
add
fisttpll
aaa
push
dec
mov
int3
cld
push
pop
int3
adc
dec
adc
dec
stc
add
out
lods
adc
testb
add
mov
push
dec
and
cmpb
stos
jle
imul
push
fidivs
cmp
loope
out
sub
add
add
jae
sub
add
mov
push
imull
js
dec
push
mov
xchg
in
xchg
mov
mov
push
gs
sub
lret
sti
fisttpl
jmp
inc
xor
inc
test
insl
add
shl
pop
add
xchg
jmp
cmp
push
sbb
mov
add
sub
push
add
shlb
movsb
outsl
scas
ja
out
jae
das
add
add
aas
add
mov
mov
sub
test
xchg
sbb
loope
dec
das
cmp
test
test
add
ret
xchg
mov
pusha
or
sahf
inc
mov
jg
lea
or
xchg
add
lahf
push
mov
rolb
cltd
loop
sbb
js
mov
mov
xor
mov
movsl
aam
add
scas
dec
lea
push
and
arpl
mov
or
repnz
xor
lcall
imul
add
je
mov
add
mov
rol
xchg
xchg
add
xchg
shrb
add
sub
xor
add
sti
add
xchg
das
flds
insb
outsb
andl
add
mov
pusha
xchg
inc
push
add
jmp
std
pusha
cmp
jp
push
mov
dec
inc
add
add
fidivrs
add
sbb
xchg
inc
mov
pop
add
push
add
add
add
jmp
scas
jbe
lea
shll
mov
inc
xchg
orl
jnp
mov
je
add
adc
in
cmpsb
mov
daa
cmp
push
adc
sbb
cmp
or
mov
mov
jo
outsl
hlt
jnp
or
sbb
cmp
add
jp
in
scas
push
mov
inc
add
or
add
mul
mov
lret
in
push
sar
into
inc
lret
aam
ret
adc
lds
cwtl
xor
add
lahf
push
les
sub
mov
add
dec
pop
or
mov
mov
sub
mov
dec
add
fadds
mov
fiaddl
xor
pop
cwtl
ret
ret
jae
xchg
sar
sbb
insb
adc
add
out
stc
mov
add
iret
pop
movb
jg
dec
jmp
or
and
inc
divb
pop
sbbb
aas
cmc
addb
outsl
xor
sub
sub
ljmp
mov
test
jne
or
mov
in
sbb
push
jb
jge
loop
mov
pop
mov
fbstp
flds
cmp
mov
mov
xor
mov
movsb
add
stos
push
dec
adc
mov
add
int
shlb
inc
repnz
add
sbb
xchg
mov
push
sub
inc
test
nopl
mov
xchg
jmp
les
int
add
stc
xchg
mov
ja
js
movl
jle
cld
sbb
fbstp
jmp
jne
loop
ficoms
movb
mov
ljmp
test
add
push
lods
push
and
or
adc
int3
sbb
lret
push
sbb
fsubs
mov
sub
test
xor
push
cli
or
and
sbb
pop
add
dec
stos
cmpsb
adc
fadds
fcmovnb
and
mov
enter
mov
testb
xlat
add
add
popf
xchg
rolb
pop
push
cmpl
fs
add
dec
or
and
lods
pop
add
add
mov
and
or
inc
imull
in
adc
daa
xchg
xchg
jb
push
mov
ds
jmp
sub
xor
mov
push
jmp
add
sub
mov
adc
inc
cmpsb
call
mov
mov
push
and
push
add
lcall
jle
jecxz
push
shrl
jl
pop
cmp
cmp
push
cmp
mov
cli
inc
inc
cmp
push
sbb
gs
dec
xor
adc
sahf
imul
add
jmp
add
inc
cli
add
or
add
push
mov
ret
adc
imul
cwtl
mov
cmpsb
gs
clc
rcr
adc
mov
add
and
push
xchg
in
cli
stc
sti
push
loopne
add
cmpsb
xor
mov
scas
mov
jg
inc
pop
notl
imul
shlb
call
cmc
add
add
add
mov
mov
pop
add
imul
or
fs
data16
or
mov
pop
mov
or
lock
mov
jecxz
in
addl
pusha
inc
jge
or
das
stos
mov
out
bound
dec
cltd
mov
cltd
add
out
xchg
call
add
mov
sbb
mov
sbb
call
mov
add
cmp
int3
xchg
mov
cmp
shlb
pop
add
mull
add
xor
mov
sub
bound
call
mov
out
inc
push
mov
xchg
xchg
scas
and
sbb
mov
or
sbb
insl
fwait
add
sub
pop
add
sarb
insl
test
or
and
and
filds
das
sbb
pop
xchg
data16
enter
clc
fstps
xchg
dec
push
stos
add
je
lds
leave
stc
xlat
add
arpl
add
call
pop
into
fistl
pop
jns
test
cmp
xchg
xlat
inc
add
mov
repnz
xorps
insl
jae
sub
pop
int3
xor
imul
lcall
inc
loope
daa
add
popf
mov
mov
adc
clc
and
addr16
xor
mov
and
lods
iret
mov
sbb
icebp
add
add
xor
push
add
test
mov
js
push
stos
add
add
adc
sahf
jp
mov
subb
xor
add
inc
jle
stos
and
ds
inc
sbb
mov
add
add
add
call
pop
arpl
sub
push
mov
scas
mov
cmp
adc
dec
subb
xchg
push
out
jo
int
sbb
cmpsb
pop
stos
shll
add
data16
xchg
shrb
aam
mov
in
je
add
dec
cmpsb
mov
test
add
add
mov
add
inc
add
push
xchg
add
jns,pt
add
dec
in
add
pushf
int3
xchg
add
outsl
mov
pop
add
add
jbe
stc
jno
lret
pop
test
mov
add
xor
pop
add
imul
pushf
or
mov
xlat
mov
hlt
add
adc
mov
mov
mov
insb
loop
cld
push
pop
adc
add
movsl
inc
add
cmpxchg
dec
mov
push
icebp
cmovnp
add
mov
stos
rcll
pop
pop
cmc
mov
push
add
outsl
mov
out
pusha
add
add
leave
push
mov
outsl
popf
data16
push
loop,pt
and
add
repnz
je
add
xor
out
add
or
and
mov
fdivs
jle
orl
inc
add
aam
fwait
pop
xchg
mov
and
test
pop
sahf
stos
lcall
cmpsl
sbb
mov
add
adc
add
xor
jbe
shll
les
sub
jmp
xchg
add
add
dec
popa
fidivs
adc
leave
push
cmp
cwtl
enter
in
jl
xchg
add
hlt
adcb
out
xlat
ja
add
aas
movsb
pop
mov
pop
jae
std
mov
xor
call
arpl
sbb
sub
push
shlb
lret
adc
int
pop
pop
test
mov
inc
mov
pop
add
sarl
mov
idivb
mov
cmpsb
pop
std
lods
addb
adc
sbb
movsb
cmp
inc
in
shrb
jnp
pop
ret
jp
mov
addl
adc
xchg
popf
imulb
add
mov
and
inc
cli
jg
xchg
mov
mov
xchg
jp
std
fs
cmp
mov
lret
imul
cmpsl
fbstp
call
inc
sub
adc
and
or
mov
sub
adc
cltd
test
lret
xor
cmpsb
jl
mov
mov
test
shrl
ret
xor
stc
add
push
aas
add
add
mov
movsb
fadd
mov
fldl
mov
popl
inc
cmpl
pop
imul
cltd
fiadds
add
mov
inc
jmp
pop
pop
enter
dec
jge
hlt
popa
mov
or
add
add
rcrb
std
or
fisubrs
cli
mov
add
add
loopne
add
lcall
cltd
ljmp
or
sbb
jo
push
xor
xor
xchg
mov
add
icebp
scas
ljmp
sub
mov
xor
dec
mov
push
lock
movsb
add
mov
std
pop
add
jb
inc
mov
cmpsl
add
mov
scas
mov
loopne
mov
add
mov
add
imul
jmp
fiaddl
xchg
jle
lret
xchg
sub
orb
add
cmpsb
add
add
cmp
mov
loop
jb
xchg
inc
stc
frstor
and
lock
dec
mov
jnp
sahf
lcall
xor
je
dec
mov
push
sbb
sub
repnz
sti
xchg
cmpl
add
xor
add
imul
int3
in
ret
jmp
add
scas
hlt
mov
icebp
add
jno
add
adc
pop
int
pop
das
mov
imul
and
cld
fnsave
or
jl
mov
icebp
add
mov
add
dec
sbb
mov
repnz
call
str
aam
push
iret
add
movsb
cmpsb
hlt
iret
leave
xchg
ljmp
xorb
jl
es
adc
rcrb
iret
fnstcw
fsubr
jb
add
fdivs
test
mov
or
loop
stos
sub
cli
jns
adc
cmpl
outsb
cmp
push
dec
in
aaa
inc
add
mov
and
lret
add
outsl
inc
sub
cmpsb
out
add
dec
jno
mov
cwtl
pop
cmpsb
scas
pop
frstor
in
movsb
sub
xchg
mov
adc
cmpsb
js
test
aaa
cli
xchg
sbb
xorl
mov
fdivl
add
push
incl
sub
push
sub
cwtl
xor
push
stos
cmpsl
cmp
das
fidivs
xchg
ljmp
mov
pop
insl
in
pop
or
xor
adc
add
cmp
arpl
repz
fldt
xor
pop
es
dec
insl
add
push
xchg
add
xor
add
xor
adc
bound
add
pop
add
or
movsl
dec
mov
adc
outsl
add
inc
stc
jbe
fsubrs
mov
jmp
int
xor
mov
sbb
mov
inc
add
jmp
in
es
sbb
mov
jp
and
add
stos
add
shll
jecxz
cmc
sarb
inc
pop
xchg
mov
sbb
mov
sbb
leave
mov
xor
rcr
imul
leave
push
and
subl
stos
cmc
jge
jns
mov
into
xchg
push
into
and
mov
mov
in
xor
inc
sub
das
pushf
movb
pop
pop
aad
pop
or
add
and
xchg
lret
into
mov
xchg
mov
mov
ret
mov
mov
adc
loope
jmp
sub
and
adc
imul
adc
outsl
scas
fisubl
cs
outsb
lret
js
xchg
fsubrs
ret
push
stc
mov
adc
sub
add
mov
ret
rolb
add
push
popa
out
add
jecxz
add
pop
add
lahf
xchg
fs
call
ja
sbb
hlt
mov
lcall
inc
pushf
mov
rcll
dec
popf
add
aam
fwait
adc
insb
add
or
pop
cld
mov
dec
jbe
mov
loop
pop
outsl
push
scas
push
idiv
sub
add
dec
xchg
dec
fwait
data16
add
push
push
stc
push
pop
dec
jno
imul
fistl
inc
inc
mulb
test
mov
jnp
xchg
js
mov
inc
push
clc
lods
xchg
sti
or
ss
sub
int3
mov
out
pop
xor
mov
fbstp
cmp
dec
xchg
dec
mov
mov
inc
arpl
push
sar
sub
cmc
test
cld
add
xchg
pop
test
inc
cmp
add
jge
or
clc
sub
push
hlt
adc
sub
aad
pop
shrl
mov
add
sbb
jl
cli
jmp
xchg
add
push
push
inc
add
jmp
dec
loopne
clc
loopne
loop
add
and
add
out
add
sub
xchg
lods
pop
outsl
or
jns
add
loope
mov
les
adc
enter
mov
dec
out
xor
xorl
imul
dec
scas
add
stos
xchg
jl
add
cmp
mov
sub
aam
push
jb
add
popa
cmp
jns
jnp
lods
fists
xor
mov
movsb
gs
icebp
icebp
leave
std
pop
out
jl
stc
dec
ja
mov
jnp
push
or
push
testb
xlat
dec
aam
xor
pop
add
cmp
mov
cmp
add
xor
loop
daa
aas
mov
add
cmp
sub
fidivs
add
mov
cmp
dec
push
pop
sti
mov
add
dec
mov
dec
mov
mov
add
test
sub
sub
cmp
pop
mov
mov
lock
sbb
push
pop
cmc
adc
add
sbb
add
cmpsb
or
ja
sbb
mov
xchg
sub
mov
bound
ret
repz
shlb
add
bound
mull
push
mov
xchg
dec
push
pop
mov
jg
xchg
push
add
xchg
iret
adc
jns
addl
leave
out
mov
mov
pusha
outsl
bound
push
add
scas
jae
mov
popa
fcomp
dec
add
imull
ja
pop
in
pop
mov
xor
pop
cmp
inc
pop
push
mov
add
pop
cld
mov
add
add
xor
add
arpl
and
mov
imul
mov
fs
gs
jg
aaa
add
jns
cs
mov
add
add
out
ret
enter
fucomi
and
lea
cli
jne
push
or
mov
sub
lods
dec
mov
add
xor
sbb
add
leave
lahf
mov
dec
icebp
add
testl
gs
xor
movl
mov
cmpsl
xor
mov
mov
out
fmul
add
cmp
cli
mov
add
sbb
outsl
leave
mov
add
pop
add
fs
fildl
cmp
cmp
shll
dec
jae
lcall
add
jnp
fldt
inc
in
mov
pop
aas
clc
inc
push
jae
sbb
out
push
push
or
jl
dec
add
je
hlt
add
gs
scas
fcompl
es
pop
addl
jge
dec
cld
xchg
pop
add
add
pop
shl
and
lock
adcl
lea
add
mov
cld
shlb
mov
stos
dec
sbb
fsubs
in
push
jge
adc
mov
int3
loop
add
sti
mov
inc
add
and
dec
xchg
jns
add
leave
add
popf
fwait
outsl
add
sub
sbb
dec
mov
and
push
cli
xchg
stos
stos
sub
dec
add
mov
out
iret
ljmp
push
or
xor
fwait
dec
add
mov
add
mov
call
add
cwtl
loope
inc
dec
add
inc
mov
sbb
cmc
mov
xor
stos
xchg
mov
gs
lods
sbb
std
ja
dec
add
mov
fwait
sub
add
add
pop
xor
and
pop
adc
jno
jmp
pop
xchg
mov
movsl
mov
push
mov
cli
ficomps
ja
inc
xchg
lods
shrb
sub
xchg
int3
incb
adc
sub
push
xchg
pushf
add
ljmp
cmpsl
mov
es
aas
scas
jp
mov
mov
out
int
add
add
mov
inc
jp
je
mov
push
dec
ror
push
add
mov
stc
add
dec
jns
cltd
jmp
cmp
repnz
dec
daa
mov
xchg
pop
push
add
add
scas
add
mov
pop
pusha
pop
add
outsb
inc
int3
std
ljmp
add
rorl
add
or
idivl
stos
addr16
iret
add
vcvttsd2si
in
jne
in
or
pop
in
nop
add
add
mov
lcall
lds
mov
insb
lret
mov
xchg
adc
and
ss
fisubl
mov
daa
adc
movsb
sarl
jno
add
sub
xchg
add
in
popa
push
sbb
nop
scas
push
mov
cwtl
movb
xor
mov
jnp
push
xor
dec
pop
dec
mov
mov
mov
mov
cmp
sbb
mov
repz
jg
cltd
jbe
rolb
fiaddl
sbb
mov
scas
aaa
cmp
ficomps
inc
popl
stc
out
adcb
dec
push
ret
adc
and
push
testl
mov
add
mov
shlb
cmc
int3
sbb
cmc
arpl
lds
and
add
adc
fists
repz
mov
dec
mov
pop
dec
add
add
pop
shll
lret
xchg
sbb
cmpsl
aaa
int3
dec
mov
sub
add
das
add
xchg
add
xchg
int
cmp
mov
xor
sti
lahf
pushf
loop
xor
sub
add
decb
pop
add
add
call
hlt
ret
pop
cmp
outsb
cld
xchg
sub
ret
or
sub
cmp
test
add
push
push
pop
test
adc
cmp
leave
addr16
shl
push
subl
fsubs
add
stc
pop
addl
jl
mov
shrl
icebp
sub
filds
fs
ficoml
sbb
adc
push
push
fs
push
das
add
and
std
outsl
cli
mov
cs
mov
cmp
icebp
mulb
and
cmp
add
push
repnz
stos
repz
sub
dec
xor
mov
movsl
and
stos
jp
sub
sub
add
iret
mov
lods
add
sub
add
mov
adc
repz
ficomps
cs
mov
jecxz
stos
mov
and
adc
into
data16
xor
fbld
lahf
lcall
cltd
pusha
lea
dec
das
sbbb
lret
mov
inc
test
lahf
fsubs
add
push
clc
cltd
pop
sarb
add
popa
add
or
arpl
inc
xchg
mov
sbb
add
movb
xchg
mov
decb
loop
inc
add
pop
ret
lea
xlat
es
add
data16
add
int3
add
add
inc
iret
lds
jl
xchg
pop
add
add
filds
mov
cmp
leave
shrl
test
jg
add
inc
mov
pop
out
fbld
dec
mov
mov
push
fldz
add
sub
jge
aaa
add
xchg
mov
sub
sbb
loop
mov
pushf
xor
sbb
mov
enter
add
stos
jmp
lea
or
test
out
ficoml
and
and
and
out
mov
ror
xchg
xchg
out
ror
inc
movsl
xchg
xchg
cmp
sub
mov
in
inc
sub
push
cmpsb
scas
sbb
lods
daa
or
jmp
mov
adc
cmp
push
dec
popf
jp
popf
mov
mov
push
insl
movsl
cmp
add
add
out
dec
jl
scas
add
inc
pusha
test
add
cltd
xchg
les
int
mov
cli
push
pop
pop
mov
addr16
ficomps
sti
xor
mov
add
inc
in
out
add
mov
cmp
ret
iret
xchg
mov
imul
add
out
pop
frstor
sub
and
mov
sbb
rolb
packsswb
add
inc
inc
popa
call
fisubrs
and
pop
pop
sub
scas
pop
mov
cmp
out
daa
or
sub
cltd
push
sub
mov
inc
add
inc
cmp
add
pop
dec
xor
pop
cld
sub
out
mov
fadd
aaa
add
fdivr
sbb
mov
jno
mov
add
jmp
dec
add
cmc
add
sub
hlt
in
jl
add
ljmp
cld
loop
jo
xor
in
mov
add
arpl
jg
scas
add
sub
mov
sbb
insl
mov
mov
insl
inc
in
add
popf
jb
adc
cmp
test
lods
adc
mov
cmp
in
mov
fistpll
lods
cmp
cmp
sub
les
fists
lahf
xchg
mov
dec
mov
fdivrp
add
ret
loopne
outsb
xchg
popa
add
cmp
add
xchg
inc
popf
push
add
mov
push
dec
jno
ljmp
cmp
jg
pop
ret
into
add
mov
ret
mov
addl
pushf
cmp
jmp
jge
clc
push
imul
jns
lret
aas
mov
fwait
dec
add
add
cltd
ss
inc
xorl
aas
ljmp
pop
add
stc
jno
add
lea
jmp
xlat
cmp
or
push
sub
mov
mov
rol
mov
xchg
xchg
adc
mov
movb
push
jnp
or
and
dec
pop
jl
mov
clc
add
mov
cmc
loop
push
fsubl
inc
push
es
mov
push
cmp
xor
adc
add
inc
lds
pop
lds
push
jb
mov
xchg
adc
in
mov
xchg
adc
mov
sbb
mov
push
push
push
add
sub
jns
add
fmuls
out
pop
or
aad
fcomp
jns
xor
pop
mov
push
pop
push
add
add
jnp
lret
mov
or
cli
add
fwait
enter
pop
pop
int
mov
pop
sub
pop
and
pop
imul
dec
fldenv
add
outsl
add
and
and
sub
sub
add
lods
xor
jle
mov
imul
enterw
add
sbb
mov
mov
aad
mov
mov
jecxz
mov
mov
test
xchg
rcrl
stos
pushf
pop
lcall
outsb
mov
outsl
pop
dec
add
add
add
insl
stc
mov
popf
and
or
add
loopne
and
sub
sub
roll
shrb
sub
sti
mov
mov
add
sub
cmp
mov
jp
sbb
xor
and
add
out
cmc
in
mov
dec
pop
adc
fisubs
or
xorb
sahf
adc
test
push
in
add
mov
fcmove
add
shrl
imulb
push
add
inc
pop
and
dec
push
add
notl
xchg
rorl
aas
fistps
nop
jb
or
sbb
push
int3
out
push
add
xchg
sbb
mov
adc
ja
add
pop
cmp
and
pusha
add
mov
push
push
mov
fcom
mov
add
movsl
call
jno
shl
jge
adc
fwait
nop
nop
movsb
insl
andl
xlat
mov
stos
maxps
push
mov
add
imul
loope
fsubl
mov
pop
push
ja
and
jmp
int3
jno
or
or
push
mov
pop
dec
scas
push
in
pusha
test
add
add
jnp
jnp
cld
pop
sar
orl
mov
dec
ds
pop
out
add
int
ljmp
jge
add
add
add
inc
mov
add
das
inc
std
movsb
xchg
fldt
add
ret
js
dec
gs
fnstenv
cwtl
sub
imul
inc
mov
sub
push
pop
shrl
add
lods
mov
pop
mov
xor
xor
add
mov
mov
out
inc
dec
pop
jl
out
add
or
movsl
push
jb
or
lahf
sbb
mov
daa
dec
cmp
cmpsl
mov
mov
lock
mov
and
add
push
jl
mov
jnp
icebp
xchg
rorb
out
fwait
cmpsl
into
iret
inc
pop
cld
add
add
sar
lds
mov
lods
add
pop
arpl
fs
scas
fadds
clc
mov
cmp
rclb
data16
add
add
add
lahf
mov
jbe
push
adc
add
jbe
add
sub
add
push
push
cmpsb
xchg
stos
push
fwait
dec
sahf
lret
or
and
push
xchg
mov
xchg
inc
push
ret
idivb
adc
jo
or
mov
cmp
pop
sbb
push
jns
repnz
jno
cmp
add
andb
outsb
in
add
daa
inc
push
xchg
mov
cmp
insl
jns
inc
mov
das
scas
add
loope
add
add
jo
add
add
cmc
bound
xchg
aad
lods
mov
or
fisubl
sub
jle
jae
mov
nop
ljmp
fucomi
out
nop
jbe
sbb
jb
sbb
sar
xchg
add
push
cmp
and
sbb
push
enter
stc
add
add
add
in
je
xchg
add
cmpsb
out
push
jae
rcrb
sti
loope
pop
in
cmp
fcompl
sub
stc
sbb
adc
xchg
add
add
add
xor
mov
jnp
push
jnp
xchg
sbb
mov
add
pop
movl
addb
pop
and
add
push
cli
fs
or
xchg
pusha
mov
add
add
adc
mov
adc
data16
add
mov
std
add
str
popa
or
push
popf
popl
sbb
add
clc
sti
rcr
add
nop
mov
mov
cmp
repnz
inc
in
xchg
repnz
out
push
push
mov
pop
push
fwait
add
and
jne
inc
mov
sbb
sub
or
mov
jo
sbb
xchg
inc
adcl
add
mov
dec
into
fdivrs
inc
jb
mov
out
bound
inc
in
ret
add
mov
sbb
add
std
repnz
xlat
ret
inc
loope
or
js,pn
push
pop
imul
push
sub
mov
xchg
add
add
ds
or
enter
add
jo
fstpl
add
inc
scas
arpl
mov
sti
jmp
pop
fildl
ret
iret
mov
pop
leave
lahf
adc
cmpsb
xor
add
repz
jb
inc
inc
mov
pop
imul
outsl
shl
add
out
push
jns
aas
fcompl
movsl
jbe
add
add
add
add
add
js
xchg
dec
jno
adc
hlt
jo
rcrl
mov
sub
sahf
dec
mov
les
or
sbb
jne
jg
dec
pop
in
pop
cmp
dec
add
sarb
xor
pop
fmulp
fidivrs
add
stc
andl
jb
push
inc
jne
sub
inc
clc
hlt
dec
cwtl
sbb
pop
or
xchg
sbb
xchg
faddl
aas
adc
fsubl
adc
mov
cmp
aas
lcall
ja
es
adc
mulb
cmp
inc
jbe
add
lea
jnp
js
lds
mov
scas
add
out
dec
dec
fmuls
fs
jb
shl
cmp
dec
jle
jle
jnp,pt
pop
jne
cmpsl
xor
mov
mov
outsb
sbb
jmp
cs
inc
sub
sarl
push
in
out
mov
or
and
les
add
mov
add
xchg
mov
outsl
mov
cli
sub
push
fistpl
push
jbe
sbb
and
lahf
lret
mov
push
insl
and
lods
mov
inc
or
sub
cmc
mov
dec
cwtl
cli
in
rcr
jge
mov
out
cmpsb
test
xchg
jbe
rcll
jb
jmp
icebp
in
xchg
in
dec
or
lds
push
xor
fsts
repnz
push
ljmp
mov
and
rolb
mov
mov
jecxz
and
or
push
outsl
and
add
add
lldt
out
imul
pop
push
insb
or
out
outsl
sbb
xor
lcall
icebp
sub
add
push
lea
sbb
dec
je
push
sarl
mov
add
add
dec
xor
popf
imul
jbe
add
or
das
sbbl
xor
xchg
imul
mov
mov
lret
imul
aad
lods
mov
imul
inc
scas
pop
add
pop
std
xchg
mov
adc
stos
add
dec
add
add
std
shll
cmpsb
jmp
add
jbe
out
add
out
push
sub
test
and
ja
add
inc
mov
sarb
mov
aas
fsubrl
dec
pop
add
neg
mov
pushf
ret
in
add
add
lret
sbb
dec
pop
and
add
inc
mov
in
mov
add
das
add
test
add
add
dec
jmp
fs
mov
dec
add
jge
cmp
sub
push
push
push
xchg
cmc
mov
pop
xor
add
jecxz
mov
add
lret
cs
push
fdivrl
xor
add
add
sbb
jmp
rcr
je
dec
add
sbb
pop
popf
add
idivl
dec
ja
lock
xchg
adc
add
js
nop
xchg
fldenv
cmp
incl
xchg
cmc
mov
mov
cmp
daa
loope
or
add
int3
rcll
sbb
sti
inc
sbb
jp
insb
add
pushf
cmp
push
dec
into
mov
mov
add
sbb
xorb
xchg
pusha
lret
fbld
insb
inc
sub
fs
add
sub
mov
punpcklbw
jle
in
push
push
mov
repnz
ss
dec
sbb
push
push
mov
mov
add
sbb
lret
in
add
lock
add
xlat
dec
inc
pop
sub
movl
sub
idivb
add
bound
sbb
cmp
fildl
mov
push
mov
test
push
dec
cs
add
out
pop
or
jne
add
pusha
add
out
dec
inc
adc
out
add
jg
ja
popf
inc
add
mov
mov
mov
xor
mov
loop
je
scas
pop
cmpsl
movsb
movsb
addr16
cmp
mov
aad
in
shll
mov
push
push
sarl
add
sub
push
cmp
jmp
push
add
in
jno
fstp
negl
xor
jmp
add
jns
sbb
shr
mov
fdivrl
ficoml
cmp
inc
xor
add
add
add
imul
cmp
add
sarl
sub
add
std
iret
popf
push
in
or
and
into
mov
add
testl
jge
add
add
add
push
ljmp
or
sbb
leave
stc
add
cld
inc
loop
push
cmp
add
xor
fmull
ljmp
or
xchg
arpl
ficoms
pop
loope
pushf
loopne
mov
jne
mov
daa
add
clc
add
add
push
outsb
xor
pop
mov
xchg
jle
xchg
or
lods
adc
std
xor
test
lret
mov
into
mov
sub
xor
out
add
add
adc
pusha
mov
jno
aam
mov
int3
push
jnp
ja
dec
add
add
and
dec
xchg
or
sub
pop
xor
mov
push
add
add
mov
dec
cld
push
jno
ficomps
xchg
pop
sbb
cmp
mov
sbb
incb
arpl
dec
xchg
test
fwait
sti
into
out
xlat
mov
pop
stc
aam
ret
inc
mov
add
jbe
and
xor
add
add
lock
call
dec
add
frstpm(287
mov
bswap
or
ljmp
add
pop
sbb
data16
mov
mov
push
jg
shrl
mov
adc
mov
add
and
add
jecxz
jne
xchg
cmc
xchg
and
jecxz
add
adc
sbb
sbb
in
mov
test
mov
jg
imulb
push
cmp
pop
xchg
push
mov
les
or
jo,pn
add
dec
add
jle
push
ret
sub
xor
scas
add
add
sahf
imul
roll
mov
jns
pop
lods
cld
loope
sbb
test
adcl
mov
repz
xor
adc
pusha
out
addl
arpl
mov
or
or
dec
mov
movsl
scas
pop
cmp
mov
and
sbb
add
insl
xchg
add
jno
insl
xchg
dec
add
add
jmp
cmp
sub
xchg
in
jp
dec
adc
add
jle
ljmp
loope
pop
add
jg
jmp
add
rol
repnz
mov
idivb
pushf
jae
xor
xchg
mov
adc
mov
add
mov
outsl
es
movsl
push
sbb
fimuls
pop
jnp
inc
adc
pop
gs
xor
loopne
rcrb
push
rolb
outsb
mov
mov
xchg
jl
shll
test
cld
mov
mov
push
push
rcrb
mov
pop
int
dec
stc
repz
push
add
enter
jb
and
jecxz
dec
lods
loope
add
xchg
cmp
dec
cmc
movsl
aam
test
sbb
jmp
lods
mov
jns
xor
test
add
add
inc
mov
pop
js
jmp
in
or
adc
enter
sub
or
and
mov
push
push
jle
and
repnz
cmp
pop
or
inc
mov
dec
add
lock
sub
add
add
les
loope
pusha
pop
dec
add
jge
icebp
out
popa
xor
pop
pop
add
xor
mov
arpl
loopne
jg
mov
stc
loopne
add
jae
xorl
add
loope
shlw
fists
dec
fiaddl
and
push
jp
mov
aad
mov
fwait
fs
sarl
add
popl
stc
sub
jmp
lahf
or
test
and
ltr
mov
outsb
testl
add
add
add
movsl
lret
xchg
cmp
cmp
fists
xlat
sub
add
dec
jg
test
add
mov
push
mov
pop
lods
mov
add
fdivrl
imul
add
sub
das
test
push
inc
jle
lahf
push
pop
imul
test
in
leave
add
jle
lret
inc
inc
lea
das
add
mov
fiaddl
xlat
fndisi(8087
xchg
push
mov
jo
psllw
lea
sub
or
mov
adc
sbb
jp
stos
adc
xchg
xor
addb
jle
push
shll
loopne
cmp
sub
loopne
shlb
cmpsl
std
mov
dec
add
ss
or
popf
and
pop
jg
mov
pop
bnd
add
out
sahf
mov
xorb
leave
and
add
inc
rcr
mov
out
add
add
inc
push
sub
jo
xchg
pop
adc
imul
add
insl
jge
jmp
pushl
lock
mov
push
orl
sub
adc
aad
scas
mov
mov
add
sub
movsb
and
daa
inc
mov
pop
movsl
add
push
xor
mov
add
pop
cmp
clc
es
sub
ror
xor
mov
and
jmp
sub
movsl
ja
je
and
and
add
dec
jno
jnp
gs
dec
add
pop
fcmovu
das
inc
xor
ficompl
push
xchg
shll
lcall
add
and
mov
add
sbb
mov
ljmp
ficoms
iret
fwait
shl
adc
pop
adc
add
jp
call
xchg
dec
dec
pop
shr
mov
shll
test
inc
push
rclb
xor
pop
jns
ss
add
mov
cmpsl
je
jecxz
das
rolb
lahf
sbb
dec
sbb
sub
and
add
cmc
xchg
jb
int
nop
dec
or
test
int3
or
cmpsl
xor
add
add
popa
fistpl
dec
jnp
mov
pusha
test
iret
add
sbb
push
sbb
add
xchg
gs
gs
into
mov
and
or
rcr
jle
add
mov
adc
rcll
sub
out
es
push
jns
mov
inc
add
add
mov
lods
jmp
pop
dec
add
or
sti
hlt
mov
outsb
scas
ret
dec
add
loopne
add
add
cmp
out
scas
stos
add
xor
mov
mov
sbb
pop
mov
xor
push
xchg
mov
pushf
jl
dec
add
ljmp
add
add
ret
inc
scas
add
adc
xor
ljmp
mov
pushf
xor
inc
ret
imul
iret
cmp
into
or
inc
push
lret
cs
add
dec
jmp
mov
add
add
nop
mov
mov
mov
lods
and
mov
ljmp
mov
add
test
push
xchg
dec
mov
loopne
in
add
jle
iret
jmp
or
xchg
sbb
add
push
add
bound
mulb
adc
gs
pop
pushf
adc
jmp
mov
and
sub
movsb
mov
add
dec
outsl
add
into
inc
push
jne
xorb
add
loopne
add
sarb
sub
sti
ljmp
add
adc
xorl
mov
negb
sahf
or
das
jp
cmp
aaa
pop
ret
in
xor
adc
dec
pop
clc
inc
cmc
adc
add
sub
icebp
dec
stos
push
das
cld
mov
mov
sbb
adc
aad
arpl
inc
lds
test
jo
popf
add
cmp
loop
pop
add
cmp
sbb
mov
add
andb
jecxz
mov
add
add
lock
mov
jo
cmpsl
es
mov
pop
ds
push
add
ljmp
cmp
rcl
in
or
sub
cmp
sbb
cld
cmp
fcomp
add
test
add
jge
xor
mov
add
aam
sub
cld
imul
je
inc
add
leave
push
aas
loop
adc
add
mov
add
test
lret
rcr
push
and
mov
jb
rorl
in
xchg
mov
repnz
sub
cmc
mov
mov
stos
jle
out
test
cld
popf
push
in
pushf
and
cs
insb
roll
mov
pop
rolb
dec
cmp
and
repnz
arpl
jmp
mov
nop
addr16
imul
add
fiaddl
clc
dec
mov
inc
add
add
adc
jns
or
add
stc
test
rolb
sbb
out
ja
inc
xlat
bound
add
out
fimull
mov
imul
and
xchg
jle
mov
aad
xor
add
iret
and
add
push
mov
dec
pop
loope
loopne
ljmp
ds
jbe
sub
incb
mov
clc
pop
in
add
sbb
test
xor
mov
or
cmp
fldl
xor
add
mov
loopne
fxch
les
clc
dec
mov
pusha
add
ds
aas
mov
cs
add
push
in
movsb
sub
out
adc
and
xchg
pop
xchg
std
xlat
push
test
fsubrs
std
out
jmp
add
sbb
loope
xchg
cmp
fsubrs
cli
stc
cmp
inc
mov
inc
mov
aam
rdtsc
fldenv
add
dec
add
popa
pop
rcl
iret
cmp
nop
notb
mov
sub
call
jl
xlat
mov
xor
add
add
or
sahf
dec
add
sti
add
mov
add
dec
sarb
rclb
jmp
dec
stos
xadd
std
add
jge
mov
lret
add
repz
jno
popa
aaa
test
xchg
in
pop
add
leave
add
jge
and
add
aas
add
ja
psubq
mov
js
mov
lahf
ljmp
push
jg
xlat
sbb
add
or
pop
add
lret
aam
push
and
add
insl
mov
inc
mov
out
outsb
xor
xlat
and
and
jae
pushf
enter
or
and
and
add
push
mov
shrb
inc
add
out
mov
fcom
mov
sbb
pop
scas
push
inc
add
imull
push
and
mov
pop
outsl
test
push
je
mov
sub
add
push
push
jno
andl
in
push
mov
cmpsb
add
add
mov
adc
add
push
push
std
inc
xchg
sbb
stos
sbbb
add
std
push
mov
cmpsl
lret
cmp
pop
add
sbb
or
aam
roll
jmp
jmp
dec
js
sub
dec
testl
and
add
std
add
inc
iret
stc
xor
pop
aaa
or
mov
jg
test
mov
in
lods
out
add
hlt
sbb
js
mov
add
pop
cs
ds
aad
outsb
loop
xor
lret
cmpb
xchg
jns
fwait
sahf
add
or
pop
aad
cli
or
cli
lret
or
add
aas
test
js
add
test
fildl
mov
mov
test
sahf
setne
xor
push
dec
cmpsl
add
jmp
xor
test
lret
xchg
daa
jg
push
xlat
imul
push
shlb
clc
imul
or
inc
cli
or
cltd
or
sub
sbb
mov
imul
xchg
fisubl
mov
sub
push
xchg
repnz
ficoml
mov
jg
add
stc
std
add
jae
pop
add
xor
mov
dec
pop
and
out
data16
scas
int
ss
rolb
sbb
add
cmpsb
push
jp
inc
xchg
and
stc
cmpl
mov
faddl
nop
lods
jmp
sub
les
dec
add
lea
mov
add
mov
inc
mov
mov
lods
mov
dec
push
test
and
mov
cmp
inc
sbb
lods
mov
jp
pop
imul
add
bound
cmc
and
int3
xor
lds
lods
mov
in
lea
gs
mov
or
and
movb
outsl
dec
in
jb
xchg
mov
pop
or
js
cltd
add
adcl
add
mov
popa
in
cli
jb
test
push
sub
outsb
add
in
fnsave
mov
mov
cmp
xchg
pop
mov
cmp
push
in
add
dec
pop
fistl
testl
or
add
mov
jecxz
les
push
push
jg
mov
cld
add
testl
jmp
cltd
xlat
or
lods
insl
lock
mov
xchg
outsb
lcall
decb
xchg
sub
add
test
add
lret
cli
mov
push
add
idivl
std
jmp
pusha
fisttps
outsb
add
jg
repz
js
lods
push
sbb
mov
out
ljmp
add
ret
cwtl
jbe
repnz
push
or
and
mov
add
add
xchg
mov
stos
cltd
fstpl
popf
jno
je
imul
lret
mov
add
and
sahf
jecxz
inc
mov
aas
add
add
mov
lcall
jge
push
add
imul
mov
aaa
jne
lds
lds
push
sub
fimuls
adc
mov
dec
dec
nop
add
xor
mov
mov
xor
gs
icebp
add
aad
sarb
ljmp
inc
loop
add
lahf
cmp
fisttps
dec
jecxz
bound
mov
repnz
out
add
mov
xor
lods
jge
add
dec
mov
mov
add
cld
loop
or
mov
xchg
loop
jle
les
mov
add
and
add
call
push
adc
ja
sub
lds
rolw
pop
lock
addr16
data16
add
and
cli
mov
or
jmp
scas
xorl
lahf
pushf
cli
dec
push
mul
jbe
aam
sti
mov
dec
pop
push
fmul
cli
es
pop
outsl
js
mov
sti
mov
sub
daa
add
clc
sahf
stc
mov
hlt
add
sub
push
movsb
add
jo
div
and
mov
mov
fiaddl
ds
jl
jne
jnp
xor
sub
add
mov
add
xor
mov
xor
jae
popa
cmp
ret
std
stc
adc
enter
and
fldl
fmull
jbe
push
xchg
jb
test
bound
sarl
add
sbb
add
fildl
mov
add
std
add
cmpsl
and
add
xchg
xchg
repnz
pop
gs
jg
in
cmp
xchg
arpl
lea
pusha
data16
mov
loopne
sbb
add
movl
mov
dec
dec
lret
jb
mov
int3
push
xor
add
imul
sarb
sub
mov
xchg
xchg
sbb
cld
in
in
add
lahf
insl
rclb
or
xor
out
cli
pop
clc
mov
inc
sub
xchg
xorl
adc
mov
add
mov
repz
push
mov
in
xor
popl
pop
add
add
sub
repnz
icebp
adc
daa
pop
int3
inc
xchg
sbb
pushf
xor
add
loopne
add
cmp
xchg
cli
inc
popa
mov
aas
add
in
and
add
add
push
xchg
add
andl
clc
add
addr16
mov
movsb
add
pop
add
dec
out
push
in
add
add
lods
call
out
pop
stos
ret
inc
cmp
lea
add
popf
jb
jae
add
add
fdivr
add
fstl
repz
ret
jb
adc
outsb
lret
add
push
stos
xchg
xchg
into
cwtl
dec
movsl
pop
out
dec
cltd
lds
scas
jge
xlat
xchg
jbe
add
cmp
mov
popa
test
jl
loopne
int
jbe
in
std
inc
outsb
adc
shlb
mov
add
pop
fidivs
in
mov
mov
dec
fs
cli
push
adc
add
lahf
pop
xor
add
pop
cmp
std
pushl
vmread
mov
jmp
xor
shlb
leave
add
xchg
jmp
add
push
inc
mov
add
shl
add
xchg
mov
stos
add
in
push
or
push
xchg
jo
ss
in
add
cmp
mov
add
push
mov
inc
add
jnp
sub
mov
out
loopne
pop
test
add
mov
cwtl
cmp
lret
inc
lock
leave
daa
sbb
pop
jo
add
lock
add
movsb
push
insb
mov
add
adc
inc
cli
add
add
add
fdiv
dec
ret
stos
ret
jae
addb
or
and
inc
add
sbb
fidivs
jno
mov
push
mov
mulb
mov
faddl
fistpl
iret
pop
pop
movsb
inc
sub
push
pop
test
inc
push
lods
test
and
leave
rolb
sbb
mov
jo
mov
aaa
sub
add
push
jb
sbb
dec
add
insl
mov
pop
sub
pop
imul
dec
pop
cmp
fwait
add
push
dec
iret
sub
mov
cmp
add
and
jae
ficoml
or
fwait
push
xchg
dec
sbb
sbb
lret
jecxz
mov
add
add
sti
pop
sub
pop
xchg
mov
jo
pop
xor
mov
cmp
jne
jnp
dec
int
popf
ret
push
sub
xor
popl
mov
mov
out
dec
xor
xor
rclb
sbb
mov
es
add
push
add
in
aad
jnp
loop
mov
adc
clc
add
hlt
mov
roll
mov
les
xor
imul
mov
int
ja
lret
add
fwait
aam
add
outsl
lods
or
jp
ret
pop
sub
push
sbb
push
adc
push
jns
lods
add
add
and
xlat
sub
les
add
mov
in
jle
xchg
add
cmpsl
add
add
add
mov
mov
add
jp
cmp
xor
cld
push
lock
daa
pop
pop
add
or
ds
ja
jb
jle
cmp
add
dec
adc
test
rcrb
stos
xchg
cmp
add
xchg
test
movsb
stos
add
int3
add
rolb
adc
jbe
xor
cld
add
int3
add
push
adc
jno
lods
dec
mov
or
xor
aas
popf
mov
jmp
add
mov
or
fs
add
stos
or
call
std
xor
call
sahf
jae
loope
sub
lahf
decb
fwait
add
pushf
mov
cmp
aad
add
mov
jge
add
fidivl
aaa
dec
inc
add
jmp
test
popa
sahf
cmc
sbb
adc
jo
add
imul
pop
jne
movsb
orl
inc
sbb
movsl
and
sub
stos
sub
and
jp
mov
xchg
stc
xchg
add
add
xor
add
lcall
test
out
fidivrl
mov
das
add
add
pop
sub
insl
dec
fsub
ljmp
inc
out
jp
sub
filds
pop
jmp
dec
mov
xor
add
push
shrd
in
adc
add
xchg
or
sbb
movsb
pop
xchg
add
out
outsb
out
mov
ds
and
adc
in
cli
add
rolb
add
fcoml
movsb
sahf
push
andb
cwtl
mov
pop
ret
lret
sub
xchg
cltd
cmp
jnp
daa
or
sbb
mov
mov
arpl
fistl
jmp
cmp
ljmp
pop
cli
fnstcw
cmp
cmp
addl
jo
mov
add
push
hlt
loopne
fldenv
aaa
lahf
popf
add
jp
cmp
cmpsb
add
push
add
mov
mov
test
js
dec
psubb
stc
hlt
add
pop
add
int
insl
lods
mov
push
mov
add
test
enter
pop
cmc
shrl
mulb
data16
ja
and
adc
add
ret
sbb
push
lods
into
fsubrs
mov
pop
rcrb
notb
addl
loope
add
jecxz
add
sbb
add
and
mov
inc
push
jp
out
pop
cmp
jl
push
aad
aaa
fs
mov
cmovb
add
inc
lods
adc
pop
shrb
cmp
or
jne
xchg
jge
and
cmp
sub
jne
add
rcr
add
enter
or
jg
sub
hlt
cli
dec
jmp
mov
jge
ret
and
pop
push
imul
mov
add
or
mov
mov
in
lret
mov
mov
loop
out
pop
jbe
push
jge
dec
out
push
push
sbb
rcrl
mov
aas
add
add
jbe
add
bound
popl
mov
push
xor
add
aas
das
shll
gs
xor
bound
pshufw
jge,pn
fucom
add
add
sbb
clc
add
and
cmp
outsb
sbb
mov
mov
leave
push
sti
dec
sbb
lods
jecxz
out
cmp
mov
push
add
inc
testb
sbb
movb
ds
icebp
pop
jl
or
mov
outsl
xchg
inc
sbb
sub
call
push
add
xor
iret
push
add
cmp
dec
cmp
scas
das
xchg
cwtl
add
pusha
lea
ret
mov
cli
add
dec
push
and
loope
ret
scas
push
fildl
xlat
adc
fcoms
pop
add
xor
xor
test
and
out
cpuid
outsb
mov
add
add
les
jg
xor
mov
fwait
sbb
xchg
xor
jnp
xchg
mov
iret
ljmp
cmp
les
ja
push
or
add
ss
dec
xor
scas
pushf
add
jbe
jp
in
out
cmp
in
scas
mov
inc
mov
andl
shlb
push
mov
mov
pop
xor
mov
into
add
add
add
push
enter
call
add
mov
add
in
or
dec
outsl
shll
lea
sbbl
push
int
int3
add
pop
jg
jbe
in
and
movsl
cmp
mov
push
pop
mov
mov
sub
add
dec
jo
add
jecxz
je
add
repz
cmp
pop
std
mov
es
pusha
lcall
stc
dec
mov
xchg
sub
pop
loope
jle
fdivl
lret
dec
or
add
call
int
loopne
lahf
mov
add
ljmp
adc
daa
xchg
dec
in
add
stos
and
sub
mov
sub
roll
adc
int
sbb
ds
loope
mov
cld
cltd
adc
push
or
mov
xor
add
xor
push
add
lds
sub
int3
out
dec
mov
adc
popf
icebp
addb
sarl
ljmp
or
data16
mov
lcall
inc
test
cld
iret
rclb
jb
inc
add
xor
push
inc
mov
dec
push
inc
addl
ret
xchg
push
movsl
sbb
dec
adc
sbb
mov
rolb
mov
sbb
cld
sbb
sbb
sti
mov
lock
ss
inc
sbb
or
add
iret
fisttpll
fldenv
lret
gs
jnp
shll
add
insl
add
add
add
sbb
fcompl
ret
mov
jne
test
mov
movb
pop
push
imul
add
fs
add
and
jmp
add
sub
or
lret
dec
iret
or
pop
jp
cmp
add
or
mov
cmpsb
das
addb
out
cmp
sbb
fidivrs
movsb
rcrb
aad
xor
add
xchg
inc
jae
dec
add
lds
sarb
pop
ret
int
pop
sahf
jbe
fwait
testl
xchg
dec
push
lock
loop
sub
into
push
xor
mov
fcmovu
insb
test
aas
orl
lods
push
pop
loopne
push
jno
and
cli
push
ficomps
fildl
mov
into
shlb
add
sti
dec
jnp
add
popf
dec
xchg
add
sbb
pop
cltd
and
ret
add
fwait
or
sti
and
mov
add
xchg
push
std
add
add
xchg
popf
lea
cmp
loope
push
je
jbe
add
xchg
pop
leave
add
jl
cld
mov
mov
iret
pop
cwtl
inc
in
pop
loop
cli
push
lds
sbb
mov
adc
cli
xor
jo
pop
jle
aaa
mov
dec
push
xchg
dec
dec
fidivs
cmp
test
inc
mov
pop
cld
xor
add
add
xchg
pop
sub
jbe
scas
add
mov
add
test
loope
sbb
insl
pop
lret
add
pop
mov
sub
mov
jbe
sti
stos
jp
mov
inc
add
int3
cltd
addr16
movsb
jg
jns
inc
or
add
pop
and
out
aaa
push
fadds
ljmp
mov
xor
faddl
adc
add
mov
cli
add
add
andl
xlat
jmp
out
mov
jns
sub
in
mov
rolb
xchg
mov
or
psubq
cli
sbb
sbb
inc
dec
add
cmpsb
les
lods
das
xchg
inc
movl
push
fdivl
pop
fwait
and
mov
xchg
cmp
or
orb
sarl
mov
pusha
int3
addl
lods
push
inc
xor
in
mov
push
jmp
dec
imul
pop
lea
into
pop
sahf
push
clc
pushf
cmp
add
xor
sub
xor
sbb
add
push
imul
add
inc
add
dec
fcmovb
jmp
clc
adc
outsl
mov
mov
add
add
add
rolb
pop
add
xchg
xor
cmp
lcall
xchg
add
add
jae
jl
xchg
push
jnp
cmove
mov
add
test
popf
lcall
jg
mov
push
lea
add
or
ss
scas
and
gs
in
orb
inc
inc
lods
scas
movsb
aaa
push
mov
xor
mov
inc
lcall
dec
sbb
jnp
ds
dec
sbb
fists
push
xchg
add
adc
add
js
add
xchg
inc
inc
in
inc
pusha
add
dec
mov
pop
cld
pop
push
mov
push
mov
lds
outsl
lds
fdivr
mov
mov
sldt
add
stos
test
inc
std
lcall
bound
dec
add
mov
xlat
xor
lea
dec
add
adc
pop
add
pshufw
add
xor
inc
or
jnp
add
cld
ja
mov
add
sub
ret
out
pop
ds
or
xlat
pusha
sbb
push
stc
jbe
mov
aad
and
dec
adc
movsb
add
or
lds
add
mov
incb
add
or
add
dec
lods
icebp
out
adc
inc
and
movsl
fcom
inc
sbb
add
shlb
xor
push
dec
incl
mov
push
fmuls
inc
push
dec
adc
sbbb
mov
xchg
and
add
das
and
ret
lret
fists
fiaddl
pop
mov
inc
push
xorps
push
push
gs
sub
push
sub
inc
out
pop
icebp
outsl
push
addr16
inc
mov
mov
add
addl
iret
fadd
xor
or
popf
pushf
pop
je
xchg
and
mov
xchg
stos
pop
add
and
mov
xchg
add
bound
mov
in
enter
leave
in
add
and
test
cmpl
icebp
inc
add
cmpl
dec
push
in
enter
add
xor
imul
push
jge
and
pop
in
cmp
out
nop
mov
negb
add
jle
testl
add
pop
rcrl
fmul
push
out
fcomi
rcll
add
sbb
pop
std
lds
dec
dec
and
cmp
ret
lret
or
add
adc
fadds
int
mov
sbb
roll
cmp
xlat
cmpsb
into
mov
fldl
andb
push
adc
mov
popa
add
lock
sbb
popa
lret
scas
fisubs
leave
adc
mov
jp
pop
cmp
mov
cmp
aad
shlb
push
cli
inc
lock
add
xchg
popf
fldt
adc
sub
add
pop
mov
das
mov
add
stos
and
imul
in
lret
mov
mov
xor
mov
cld
add
mov
sub
inc
or
sub
push
fstl
dec
mov
add
cmp
add
mov
inc
push
mov
loopne
cmpl
fistpl
mov
mull
movsl
add
lcall
add
out
mov
in
fiaddl
std
cmpsb
xor
adcb
sbb
xor
mov
fucomip
outsb
jne
daa
fimull
inc
push
test
ret
sub
mov
mov
enter
roll
xchg
push
fldl
add
dec
inc
cltd
sub
mov
retw
xchg
pop
add
outsb
xchg
and
mov
push
add
sub
adc
xchg
and
repnz
push
mov
cmp
hlt
dec
ret
cmpsl
xchg
cs
inc
mov
add
popf
jg
push
mov
sub
ficompl
mov
add
les
add
add
adc
pop
aas
sub
nop
outsl
or
mov
add
sub
bound
dec
add
cmp
orl
mov
add
mov
cwtl
mov
or
fs
popf
add
mov
enter
add
fmull
inc
xor
push
add
add
add
mov
shl
add
sbb
in
add
add
pop
shlb
jp
or
push
movl
outsb
in
mov
adc
add
xor
std
sbb
pop
add
xor
dec
add
pushf
or
xchg
xor
mov
fcomps
loope
and
mov
lock
out
bound
dec
add
push
stos
jp
pop
add
adc
mov
mov
dec
sub
inc
in
and
push
das
add
fisubrl
or
int3
loopne
push
cmp
negb
std
cmpsl
xor
cmp
out
add
sarl
jmp
add
mov
xor
test
pusha
mov
lcall
and
mov
add
xor
scas
push
roll
and
and
xor
inc
xor
cmp
popa
cmp
mov
dec
adc
adc
adc
aas
add
int
sbb
negl
mov
pop
jmp
add
fwait
pop
imul
mov
add
add
aam
inc
inc
flds
inc
push
push
cli
mov
cmp
sub
inc
mov
cwtl
in
push
dec
sub
mov
ret
add
sar
inc
cld
mov
add
xchg
sarl
pop
pop
hlt
add
adc
pushf
xchg
mov
es
pop
movsl
adc
pop
loope
mov
cmp
enter
ss
test
dec
and
nop
test
les
scas
pop
add
imull
xor
inc
add
mov
add
add
xchg
mov
sub
xor
and
add
mov
jg
clc
stos
push
stos
sub
mov
lcall
rcr
xor
aaa
add
push
mov
inc
mov
push
add
add
fsts
cs
xor
in
jbe
std
mov
and
pop
fs
add
cwtl
mov
data16
fdivs
add
lret
icebp
jns
aaa
xchg
idiv
idivl
xchg
movsl
lcall
rolb
mov
lcall
add
inc
cmp
les
add
sahf
test
xor
clc
sbb
inc
paddusb
repz
sbb
fisubl
clc
dec
push
sbbb
and
shl
jmp
inc
sbb
xor
xor
int3
mov
pop
add
push
add
ljmp
cld
mov
inc
adc
jmp
pop
jb
jnp
pop
lret
sub
xor
lods
dec
add
comiss
loop
adc
dec
mov
jle
pop
mov
mov
jnp
cmp
bound
sbb
ret
adc
add
mov
sbb
pop
add
or
das
jb
in
fmull
in
outsl
jne
fcoms
call
ficompl
stos
cmc
adc
push
add
mov
xchg
jbe
add
popf
add
dec
roll
outsb
fidivl
push
add
mov
xlat
hlt
fsubrl
lret
cmpl
push
xor
aad
xlat
divl
jae
add
cmp
sbb
shrb
add
add
push
lahf
movsb
cli
add
fcomps
aad
in
push
ds
mov
add
cmp
pop
mov
in
sub
pusha
and
jg
pop
mov
decl
fcmove
mov
jmp
add
push
sahf
push
fsubrl
mov
adc
or
mov
scas
add
movsb
add
ret
mov
or
add
add
sub
jp
sub
rorb
add
stos
call
jmp
add
mov
cltd
mov
fs
xor
roll
xchg
jae
ret
jno
testb
push
inc
repnz
add
push
pop
adc
or
dec
mov
add
add
xor
roll
sub
in
arpl
int3
cwtl
push
ljmp
add
mov
dec
hlt
inc
add
xor
movsl
inc
dec
in
pop
mov
js
jno
fmuls
add
leave
lea
add
rorl
push
xchg
add
loope
add
stos
or
mov
xchg
outsb
push
add
nop
jno
cmp
stc
mov
out
add
cmp
jecxz
lret
enter
out
xchg
and
sub
bound
add
sbb
and
add
addl
add
test
jge
adc
push
mov
mov
add
je
ja
andb
xchg
cmpsb
add
insb
js
pop
into
xchg
fwait
sbb
repz
fmuls
or
lahf
mov
ret
add
sbbl
je
mov
pusha
shrl
fs
xchg
icebp
mov
mov
mov
sbb
std
jnp
stc
dec
mov
cwtl
call
sahf
shl
sub
repz
inc
movsl
inc
add
ljmp
adc
pop
push
mov
stos
aam
add
cmp
test
mov
mov
test
testl
faddl
cmc
mov
shr
pop
lea
xchg
or
xor
lock
cmp
add
add
out
fucomp
and
addr16
sub
pusha
add
cld
lods
inc
add
pop
sub
test
jl
add
stos
sti
add
nop
leave
mov
sahf
sub
pusha
shlb
sbb
cmp
jp
fiaddl
mov
sahf
roll
in
sbb
out
cmp
jnp
lock
jp
test
push
dec
pop
jp
shlb
aaa
sbb
fucom
jb
mov
test
push
sub
mov
add
repnz
pop
xchg
jne
cmpsb
mov
fadds
lods
dec
pop
daa
push
dec
xchg
push
add
mov
test
jo
mov
mov
gs
int
mov
popl
mov
mov
and
add
inc
repnz
in
push
dec
push
ret
test
add
iret
subb
out
gs
clc
push
iret
gs
jae
popl
mov
mov
sbb
push
add
aas
add
clc
mov
add
add
mov
adc
sbb
mov
xor
mov
loopne
les
dec
mov
add
add
ss
xchg
test
lods
icebp
fdivrl
xchg
out
and
or
cmpl
movb
cmpsb
sub
fmuls
add
sub
jg
pop
sbbb
xor
add
xchg
jns
outsl
add
sbb
pop
std
xchg
add
xor
popa
cld
mov
sbb
cs
fadds
gs
and
mov
out
add
test
jge
jns
mov
mov
add
xor
dec
inc
xor
lds
sarb
pop
xor
add
imulb
iret
scas
enter
out
and
adc
mov
push
sbb
cmp
in
or
ds
stc
mov
daa
jb
mov
adc
xchg
in
nop
insb
aad
sbb
adc
mov
xor
push
add
xor
sbb
inc
cli
pop
add
add
add
dec
std
movsb
mov
add
imul
pop
jg
inc
andb
cmp
fcompl
push
add
lds
data16
sahf
add
dec
sbbl
ja
mov
xor
xor
std
dec
into
inc
mov
pusha
das
pop
fadds
lock
add
cmovo
add
ret
push
jge
ror
insl
and
mov
mov
push
add
mov
loopne
aad
or
pop
out
sub
adc
test
aas
fwait
adc
adc
push
mov
jmp
lahf
cmp
mov
std
out
or
add
add
mov
ja
mov
sub
and
mov
pop
scas
jle
popf
sbb
daa
movsl
jecxz
out
adc
add
sbb
ss
cmp
pop
stc
call
imul
xlat
es
nop
cmp
stos
push
jle
loope
pop
pop
xchg
sbbb
add
mov
sbb
adc
out
add
pop
add
mov
mov
xchg
add
mov
enter
push
add
mov
aaa
jp
out
sbb
mov
bound
add
mov
test
fcmovbe
into
lods
add
imul
insb
dec
pop
push
fwait
mov
filds
and
lea
pop
dec
mov
lret
or
arpl
call
orl
popa
sub
add
jp
sarl
xor
rcrb
adc
lahf
dec
jo
jge
mov
xor
jecxz
adc
mov
add
sbb
push
ds
fs
rcl
cmpsl
ljmp
int3
and
add
add
std
cmpsb
inc
mov
aad
jecxz
sarl
jo
out
sub
xor
lods
es
push
je
movsb
xor
icebp
jne
sbb
call
imul
out
js
adc
push
outsb
and
int
add
push
dec
jp
scas
and
add
and
jnp
xor
add
xor
push
add
mov
cmp
daa
movsb
push
sbb
xchg
cmc
jmp
add
add
pop
sub
add
jb
ret
add
jl
pop
pop
test
add
mov
sub
sub
incl
pop
sub
jge
pop
ret
je
andl
daa
test
adc
in
jle
and
mov
adc
inc
sbb
sub
data16
roll
js
fildl
out
push
loop
add
mov
fwait
xchg
xor
add
push
bound
mov
add
stos
push
lods
test
jbe
xchg
xchg
insl
loop
or
jb
push
add
lahf
les
in
je
pop
mov
mov
adc
sbb
cmp
jl
test
ret
loope
xrelease
cmpsb
ss
dec
hlt
clc
mov
repnz
jl
pusha
test
in
jmp
movl
add
and
adc
and
lods
dec
mov
aad
pushf
add
cmp
xor
xor
nop
out
loopne
jbe
mov
rcll
mov
xchg
cli
jbe
dec
jmp
test
je
xor
aam
arpl
outsl
dec
xlat
xchg
cmp
xchg
mov
pop
in
sbb
lret
adc
fsubs
pop
test
mov
out
addb
mov
lods
add
mov
push
add
mov
jne
fsubrl
and
shl
jl
pop
cmc
stos
lods
or
mov
jo
imul
add
je
arpl
pop
dec
clc
add
cmc
pop
mov
out
and
daa
mov
lea
jno
mov
cltd
nopl
lds
iret
xchg
sar
jmp
movsl
flds
xor
cmpsb
xor
add
sbb
movsb
push
add
es
clc
pop
lret
fistps
rorb
xchg
movsb
sub
cmp
std
sub
dec
inc
cmpb
mov
add
lods
faddp
aaa
scas
lcall
test
add
mull
pop
sub
lret
add
or
cmpsb
mov
fildl
in
in
lret
add
push
in
nop
mov
sub
add
mov
add
ss
adc
je
in
sbb
or
mov
cwtl
or
pop
add
jo
icebp
idivb
mov
mov
xchg
sub
popa
add
jl
mov
fildl
sbb
cwtl
adc
in
jne
je
dec
inc
push
rclb
add
add
lods
push
push
test
sbb
jecxz
rcll
add
add
inc
pop
imul
nop
jl
or
repz
mov
push
cmp
add
xchg
xchg
or
add
jbe
sti
cmpsb
mov
add
add
movsl
add
xlat
mov
add
ds
addl
call
cmp
shlb
add
aad
rcrb
scas
pop
fmuls
sub
adc
pushf
lret
xchg
xor
or
cmp
jnp
pusha
pushf
addl
mov
cmp
lcall
in
lock
jno
cwtl
xchg
push
mov
adc
insl
addb
or
xchg
arpl
aam
add
ret
in
xor
sbb
xchg
cmp
sbb
dec
test
enter
fidivrs
push
or
ds
fidivrs
arpl
test
pop
int
popa
or
inc
into
xor
int3
icebp
add
adc
add
cwtl
add
mov
aas
sbb
iret
cmc
shll
adc
add
stc
adc
icebp
or
repnz
xchg
jg
cmp
dec
sub
jmp
sbb
jg
cmpsb
add
imul
mov
movsb
loop
adc
repnz
insb
add
out
mov
push
fistpl
and
bnd
inc
add
lret
and
add
das
test
mov
xor
cmpsb
cmp
lcall
fldt
in
cmp
enter
mov
add
sub
add
pop
xor
ja
sub
fwait
jno
fdiv
rorl
pop
mov
loop
sbbl
add
xchg
loop
mov
and
ret
popa
dec
cmp
sub
xchg
enter
add
mov
jbe
mov
insb
insb
sti
mov
add
cmp
pushf
add
fs
sbb
add
in
add
mov
inc
test
push
and
cmp
ljmp
mov
jmp
nop
mov
mov
in
lret
inc
jmp
dec
data16
ss
notb
inc
cmp
ficompl
in
add
enter
and
jns
aam
push
cmp
or
add
add
push
imulb
bound
adc
add
inc
lcall
push
inc
jmp
fwait
add
das
pop
inc
loope
or
ja
add
imul
adc
fistpll
aam
mov
sahf
pop
add
pop
xchg
add
sub
inc
mov
xchg
add
add
cltd
add
cmp
mov
arpl
in
xchg
xchg
cmp
inc
daa
xlat
dec
inc
add
lahf
mov
insl
and
pushf
pop
movsb
dec
dec
xchg
xchg
xchg
mov
aas
xchg
rclb
outsl
lcall
es
or
jmp
mov
add
mov
xchg
int3
push
pop
int
mov
dec
jne
sub
pop
push
sbb
mov
pop
pop
scas
mov
add
mov
jle
cmp
out
pop
rcrb
cmc
in
jg
inc
cmp
or
mov
push
lock
sbb
push
jp
mov
xchg
or
les
xchg
dec
mov
mov
push
add
lret
pop
add
add
push
loopne
mov
jmp
and
pop
cmp
cmp
mov
jbe
outsb
push
and
and
jno
or
adc
or
or
mov
cltd
sub
add
adc
add
icebp
and
sbb
and
adc
push
outsb
gs
mov
clc
inc
dec
cld
test
add
sub
lods
xchg
sarb
fbstp
addb
sti
add
add
add
faddl
xor
push
push
add
pop
outsb
cmc
add
lock
imul
add
add
test
iret
jle
movsb
sub
cmp
add
out
adc
notl
sub
jmp
fldt
popf
and
roll
dec
add
pop
push
jno
ret
mov
test
sub
add
add
cs
mov
push
push
xchg
cmpsb
add
cmp
mov
or
xchg
add
xor
push
sbb
loop
and
mov
inc
adcl
inc
add
sti
insb
and
add
mov
mov
add
aam
clc
and
push
xchg
sub
popf
cmp
call
scas
add
in
pop
rcl
imul
aas
xchg
fmuls
mov
mov
add
jne
out
cmp
mov
add
enter
or
mov
add
fsubl
stc
pop
movups
or
add
add
scas
jo
add
pop
sbb
incb
xchg
lret
dec
mov
add
add
push
rolb
int
xchg
cld
pop
mov
and
enter
mov
aas
mov
add
into
stos
pushl
insb
popa
sbb
mov
dec
and
inc
clc
jg
or
push
add
out
add
pop
xorl
cmp
add
pop
and
test
outsb
jns
add
inc
aam
xchg
mov
add
cmp
lods
add
adc
xchg
jecxz,pt
arpl
or
clc
or
add
nop
arpl
ucomiss
sub
mov
in
fdivrp
testb
add
add
add
add
add
mov
mov
push
pop
mov
lods
jns
repz
mov
adc
add
xchg
mov
loopne
int
jb
adc
mov
pop
and
sub
sbb
add
add
je
icebp
out
inc
xor
pop
jo
sub
iret
or
add
push
loop
pop
mov
test
sarl
jns
dec
cmp
jp
jae
pop
add
mov
ds
push
cmp
add
inc
ficompl
add
loope
add
cmp
and
jns
loop
add
push
add
out
push
aad
and
add
arpl
aas
adc
mov
mov
fistpll
xchg
cmp
xchg
dec
add
or
dec
fs
ss
pop
int3
jno
dec
aad
xchg
adc
int
fs
push
arpl
popa
xor
jne
std
sar
and
orb
mov
mov
call
inc
sub
ret
inc
or
cmpsl
inc
cmp
filds
pop
xchg
in
push
mov
add
and
iret
xlat
cmp
lahf
pop
add
jno
fcompl
shlb
pop
pop
add
dec
repnz
push
sbb
in
lahf
popf
mov
or
sub
hlt
pop
in
inc
nop
jg
nop
or
lahf
flds
test
out
add
sub
mov
call
sbb
xor
cmpsl
mov
sahf
add
bound
and
lcall
xor
adc
adc
cmovge
push
mov
add
loopne
mov
add
xchg
adc
jge
js
jmp
jmp
adc
aaa
xor
iret
cmp
add
imul
add
roll
inc
gs
scas
pop
nop
xchg
movsl
and
mov
pop
cmp
loop
sub
push
test
imul
sbb
sub
testl
loopne
pop
xor
add
add
push
mov
sahf
dec
in
and
sbb
cltd
adc
stos
xchg
sbb
enter
xor
cs
fildl
loope
scas
enter
adcl
inc
push
lahf
lret
clc
ffreep
add
push
sbbb
ja
mov
jecxz
xchg
add
add
outsl
xor
icebp
int3
jbe
mov
push
push
add
sbb
dec
push
add
loopne
mov
jnp
push
inc
and
mov
sbb
xor
and
sbb
cld
cmp
addr16
add
scas
clc
mov
aam
add
push
mov
inc
nop
addr16
leave
je
add
mov
popa
nop
rclb
or
stc
aad
ret
cs
fistpl
add
add
enter
aaa
into
add
mov
add
pop
insl
dec
nop
je
dec
sub
daa
jbe
mov
faddl
sub
test
arpl
mov
sub
xor
push
mov
add
add
xorl
jae
jo
adc
cmpsl
add
and
or
mov
stos
arpl
lds
jp
repz
lcall
cli
mov
jge
sub
clc
cltd
cmp
fiadds
mov
enter
mov
ret
cltd
mov
mov
or
xor
filds
repnz
ljmp
mov
in
mov
inc
mov
ds
jns
out
sub
test
add
add
shll
dec
pand
rcrl
adc
add
aad
and
dec
dec
fs
or
mov
test
mov
add
in
ljmp
in
mov
aas
mov
mov
push
add
adc
jmp
mov
int3
mov
adc
add
add
loopne
pop
fxam
add
mov
shlb
movsb
jle
nopl
dec
mov
int3
adc
lcall
add
xchg
cltd
cmpsl
and
mov
out
sahf
push
ljmp
or
rclb
sub
hlt
dec
push
dec
addr16
scas
mov
xchg
mov
loope
cmp
in
jno
mov
fs
dec
and
xchg
push
jl
add
sbb
fstl
add
cs
lahf
adc
lock
int
mov
sub
sahf
fstpl
test
xchg
pushf
dec
pop
orl
xchg
xor
jnp
pop
add
sbb
std
and
js
rorl
and
test
repnz
loopne
add
arpl
roll
or
pop
imul
sub
fistps
add
xor
jo
add
std
inc
cmp
in
inc
sub
pop
pop
jl
sub
mov
sbb
clc
test
xchg
in
int3
mov
jb
add
add
sub
push
add
mov
xchg
icebp
les
push
xor
add
cmp
orb
add
push
ret
pop
rolb
mov
add
popf
add
andb
fbld
xchg
leave
out
cmpsl
mov
lock
insb
dec
sbb
bound
mov
jbe
cmpsl
insl
mov
les
and
add
or
xor
add
int
mov
gs
in
in
hlt
adc
add
xor
add
cli
jne
pop
sbb
shlb
sbb
scas
dec
jp
sub
cmp
loopne
add
sub
imul
add
add
loope
or
jp
clc
shl
aaa
adc
scas
daa
int
mov
push
lods
push
cmpsl
dec
mov
inc
popf
adc
aas
in
push
enter
jns
into
sbb
add
cmpsb
mov
out
push
push
mov
loopne
sub
sbb
push
test
rorb
insb
or
aam
dec
add
sub
das
mov
xchg
add
in
inc
dec
mov
or
add
jae
add
push
add
push
lcall
aas
mov
adc
bound
into
leave
les
shlb
push
scas
xor
pop
add
add
mov
stos
add
fldl
add
xor
adc
adc
add
and
push
sarl
push
nop
call
sbb
dec
push
sub
mov
add
sub
fcompl
inc
sbb
cli
or
shlb
insb
push
add
and
pop
xor
cmpl
fisubl
movsb
jp
inc
add
repz
push
in
unpckhps
mov
add
adc
sub
fmuls
and
add
lahf
rcrb
fs
push
or
add
and
add
add
add
add
aas
add
jb
dec
inc
sbb
cmpsb
or
fstl
mov
inc
add
adc
movsl
fadds
nop
pop
out
jno
sub
scas
popl
filds
pop
aad
add
sahf
or
iret
xor
pop
mov
rolb
hlt
add
pop
dec
cmp
lock
lahf
add
jnp
cwtl
or
nop
in
mov
dec
iret
sbb
mov
adc
movsb
clc
add
cs
xchg
push
mov
jno
sbb
adc
into
cld
mov
stos
dec
dec
inc
dec
adc
add
stos
aaa
mov
arpl
push
add
push
daa
mov
mov
jp
push
cmpl
aam
xchg
mov
mov
mov
popf
add
xor
jmp
sahf
in
adc
stos
inc
les
dec
lods
jo
xchg
push
adc
add
and
add
sbb
xchg
sbb
jge
add
out
sbb
neg
adc
push
add
add
add
mov
mov
popf
inc
pop
add
stc
pop
mov
out
add
cmp
push
rclb
movsl
mov
dec
aas
xchg
add
jmp
jne
jg
andl
je
test
out
loopne
sbb
bound
outsl
bound
hlt
push
sti
xor
jmp
adc
js
xchg
bound
sbb
ja
mov
push
adcb
mov
cmp
jae
xchg
inc
test
scas
dec
push
and
add
sbb
mov
mov
adc
add
jl
sub
jg
fmull
stos
lea
push
mov
test
cmc
rcr
mov
lret
mov
xchg
and
sub
sbb
fcompl
or
fwait
push
aam
addl
aad
stc
js
mov
cmp
jle
mov
lods
jns
sbb
or
enter
insl
xor
push
xorl
es
les
arpl
sbb
lods
add
push
leavew
push
adc
lock
or
int3
sub
ds
add
mov
dec
xor
inc
push
add
jl
call
lcall
ret
divb
pop
pusha
sbb
mov
sbb
shl
ja
pop
add
les
jge
xor
inc
lret
idivb
loopne
add
cmpsl
stc
clc
add
stos
test
sbb
jg
adc
or
aaa
cmp
pop
clc
xchg
sbb
add
and
aaa
fdivr
add
mov
add
scas
cmp
ret
lea
add
push
add
insb
xlat
pop
add
push
enter
sub
pop
jle
cmp
mov
xor
push
mov
negl
mov
add
and
cs
cwtl
xchg
cmp
arpl
and
xchg
inc
add
xchg
sub
je
ret
inc
imull
mov
stos
mov
add
sahf
sub
mov
dec
je
push
arpl
add
fstpl
iret
jl
testb
pop
xchg
add
and
js
mov
cmpsb
adc
mov
std
aas
aas
mov
add
pop
mov
mov
add
fstl
stc
mov
pop
sub
imul
mov
testl
and
push
push
push
add
arpl
add
xchg
push
outsb
jg
stos
imul
int3
or
add
in
lret
mov
mov
mov
pushl
xchg
divl
push
xor
cmp
and
cmp
xor
dec
mov
mov
add
repz
or
sbb
or
pop
in
mov
add
jle
cld
call
iret
jo
xchg
mov
cld
pop
dec
addr16
adc
add
call
xorb
mov
ljmp
popf
pop
shlb
sti
inc
mov
in
imul
add
mov
add
addl
add
mov
pop
mov
aaa
imul
cs
clc
stos
mov
or
adc
add
mov
popa
lret
jecxz
lret
dec
sti
pusha
add
add
adc
push
lret
mov
cmp
adc
push
xchg
add
sub
fadds
pop
jmp
cmp
cmpsl
cmp
mov
adc
pop
test
xor
mov
push
sub
jno
sub
cli
add
jecxz
and
mov
imul
inc
mov
pop
mov
add
add
iret
rorl
daa
inc
add
pop
xor
push
push
aad
stc
push
inc
dec
add
add
dec
mov
dec
or
ret
and
mov
data16
sbb
mov
push
fwait
and
jns
add
or
add
jmp
fdiv
divl
xchg
or
fnsave
or
and
cmp
shll
arpl
or
jnp
sbbb
jg
push
inc
inc
cmp
pop
push
notl
dec
imul
iret
dec
and
add
add
jns
push
lcall
adc
and
add
adc
cmpsb
popf
std
dec
jp
das
cli
cmp
fbstp
repnz
jne
jae
mov
sub
add
movsb
add
add
aas
push
testl
push
push
stos
mov
push
add
add
mov
add
add
cmp
pop
lea
fdivs
and
or
ret
push
mov
pushf
xor
in
mov
es
cli
add
das
push
es
mov
jae
add
cli
push
sub
or
push
add
jp
push
adc
add
push
inc
popa
add
fstp
clc
adc
mov
jbe
pusha
pop
scas
movsl
mov
leave
cli
add
ja
add
ret
cmpsb
xor
bound
aad
and
xor
and
sub
arpl
data16
imul
jg
xchg
rolb
lcall
ss
cmp
inc
in
add
addr16
add
pop
inc
jle
pushf
pop
cld
fadds
testb
add
push
or
out
dec
rolb
jne
mov
mul
dec
mov
imul
adc
fmull
sub
arpl
add
ret
add
add
mov
mov
sub
mov
in
xchg
mov
push
inc
pop
inc
mov
xchg
push
cmpsl
sub
aaa
mov
dec
push
or
iret
xchg
adc
jge
mov
jo
out
jnp
icebp
inc
jge
fiaddl
inc
sbb
sub
add
add
bound
flds
xchg
add
gs
in
imul
imul
pop
xor
sbb
insl
in
add
jnp
insb
add
push
filds
adc
or
or
addr16
lret
imul
inc
add
js
mov
cmp
ja
fs
test
neg
jne
js
pop
mov
lea
rcr
sub
mov
mov
mov
sbb
add
add
movsb
cmpsb
fwait
push
push
scas
push
add
aas
dec
adc
sbb
cmpsl
xchg
add
notl
in
add
mov
pop
data16
push
lahf
dec
jns
xchg
jnp
or
add
mov
or
aad
mov
loopne
xor
xor
leave
out
mov
and
daa
stos
jno
int3
dec
filds
filds
xor
dec
add
sti
xchg
lret
les
frstor
mov
fsubl
data16
mov
fsts
mov
cwtl
in
ret
cmp
adc
ds
ljmp
add
xchg
test
xchg
push
test
in
xor
add
mov
xor
push
addl
sbb
push
add
inc
mov
push
or
cmpsb
and
idiv
out
movl
fwait
add
popf
outsb
jae
icebp
add
popf
add
adc
fdivp
aad
add
add
add
add
add
inc
js
mov
in
xchg
push
push
adc
rorb
push
inc
aaa
xor
add
dec
xchg
popa
fimuls
lahf
jp
les
push
mov
add
jnp
add
lods
jl
xchg
shlb
rcl
decl
adc
push
sub
dec
gs
xor
cmp
mov
mov
pop
lahf
mov
inc
add
and
sub
mov
shrl
add
filds
leave
push
rolb
cmpsb
ud1
xlat
xor
je
cmpsb
mov
mov
adc
je
or
jo
mov
repz
add
sbbb
push
jp
ffreep
dec
stos
push
sbb
sbb
std
aam
lahf
rcrl
out
add
add
pop
movsb
popa
pop
add
and
xchg
pop
xchg
test
and
push
dec
add
push
loopne
arpl
in
pushf
aas
xor
xor
cmc
aam
sti
add
add
add
add
inc
lock
jecxz
push
mov
pusha
aam
push
test
push
rclb
lcall
add
lret
addl
xchg
xchg
cmpsb
push
adc
icebp
add
in
pop
int3
dec
xchg
dec
jecxz
push
cmp
out
out
enter
pop
sub
push
or
add
inc
push
add
add
outsl
iret
movsb
rolb
mov
adc
add
les
sbb
pop
aam
or
sub
xor
push
test
jb
dec
add
lahf
fwait
add
stos
je
adc
daa
xchg
in
in
xor
lods
inc
cmp
leave
add
cvtps2pi
mov
or
aad
popl
push
add
sbb
dec
or
add
push
mov
add
bound
mov
imul
std
subb
shr
movb
rcrb
sbb
nop
add
dec
fstpl
dec
aas
shll
add
mov
divb
mov
in
stc
pop
nop
push
add
mov
xor
addl
push
add
or
xchg
add
std
addr16
dec
inc
add
adcb
add
cwtl
ljmp
sbb
popa
stc
out
sub
xchg
jns
push
inc
leave
mov
rcrl
add
icebp
and
cwtl
fucomip
add
nop
mov
jmp
loope
loopne
pop
loop
add
cmc
jb
add
push
jns
out
fsubr
add
rclb
push
add
insl
in
mov
test
dec
iret
push
add
out
lret
repnz
xchg
in
xor
cwtl
cmpb
fmull
jecxz
add
xor
cmp
adc
adc
push
dec
inc
stos
mov
adc
popf
bound
xchg
mov
pop
sahf
inc
add
int
sub
pop
popa
mov
pushf
pusha
test
cwtl
clc
or
clc
mov
add
add
push
sbbl
popf
loop
or
add
mov
add
push
das
ljmp
sbb
adc
xchg
mov
ret
in
jne
out
xor
int3
push
sub
das
aas
add
aam
inc
pop
xor
fwait
cli
pop
cld
dec
mov
add
add
lea
push
loopne
popa
push
lods
inc
insb
aam
add
xchg
loop
int3
enter
jle
jo
jge
pop
add
gs
fisubrl
add
lods
rcrb
aas
pop
add
mov
mov
fwait
mov
mov
out
cmc
mov
xor
fwait
or
xlat
aaa
test
imul
sub
stos
mov
mov
push
add
push
mov
push
sbb
add
lods
dec
vfnmadd132ss
cwtl
ror
sub
scas
and
cmp
add
mov
add
pop
in
add
jle
call
mov
adc
adc
je
sub
in
repz
test
adc
add
pop
rcrb
roll
daa
add
mov
mov
cwtl
mov
add
sahf
and
jne
sub
sahf
add
cmp
fidivrs
popa
mov
xchg
add
testl
add
pop
or
adc
insb
data16
gs
arpl
mov
jmp
mov
add
test
aas
hlt
rolb
sub
std
add
sahf
dec
orb
pop
inc
fldcw
inc
or
jge
mov
mov
adc
jl
pop
or
into
xor
shrb
and
mov
add
inc
add
jne
mov
push
add
add
or
hlt
sbb
sub
jp
mov
inc
ficoms
cmp
push
jmp
add
add
push
mov
push
jecxz
add
mov
outsb
dec
add
or
les
mov
xchg
cli
add
mov
sarl
add
dec
vpmacswd
jae
fwait
or
add
in
in
xor
mov
jne
rcr
add
add
js
je
push
pop
pop
outsl
add
mov
or
aad
roll
add
mov
mov
xor
pop
sbb
js
xor
add
mov
push
add
loopne
xlat
adc
mov
pop
loopne
pushf
push
mov
mov
add
dec
lret
scas
push
cmp
popa
and
cli
out
jb
inc
inc
hlt
loop
add
mov
add
add
and
push
daa
push
or
xor
add
leave
sbb
repnz
mov
xor
mov
add
aad
push
xchg
dec
movsb
add
imul
pop
sub
popa
pop
orl
or
cmpsl
sub
jnp
mov
push
cli
mov
mov
mov
jmp
lock
mov
notl
pop
xchg
xchg
inc
dec
cld
mov
push
xor
dec
fdivr
or
xchg
add
add
add
int3
cli
aaa
aaa
cmc
inc
sbb
jne
jne
xor
xor
push
adc
add
pop
pcmpgtw
inc
adc
sbb
lret
roll
inc
xchg
rolb
pop
aas
add
cltd
xor
mov
add
cld
and
or
mov
in
ds
das
mov
xlat
daa
jecxz
repnz
sub
xchg
into
sub
ljmp
pop
ss
pop
jnp
xor
lods
add
add
sub
xor
popa
sbb
push
icebp
andb
jecxz
add
data16
mov
shlb
dec
into
add
cwtl
shl
lods
sub
add
add
push
out
movsb
dec
out
mov
sbb
pop
mov
add
push
mov
test
cwtl
dec
add
jns
jge
pop
shlb
aad
pusha
xor
inc
stos
or
or
mov
test
stos
add
pop
std
lret
add
lcall
mov
inc
cmp
pop
scas
mov
push
push
sub
cmp
and
pop
sarl
push
mov
nop
sbb
jns
cld
cmpsl
add
sub
enter
mov
in
pop
jae
dec
insl
and
ds
rcl
add
ljmp
outsl
aas
add
shll
and
loopne
sbb
add
fcoms
and
mov
push
dec
cmpl
xor
sub
add
push
lret
roll
push
add
int
mov
subl
enter
jae
outsb
sub
add
add
adc
and
loope
into
jge
dec
jbe
add
out
aaa
mov
movb
mov
sbb
push
add
push
add
int
mov
das
mov
cmpsb
push
add
inc
sbb
into
mov
mov
sbb
xor
ja
push
jle
mov
shr
pop
and
out
fldcw
gs
in
movsl
jmp
repz
inc
mov
imul
lods
sbb
nop
dec
pop
les
lea
xchg
cmp
mov
jle
xchg
cmc
mov
or
jmp
lock
jo
sub
sbb
sbb
cmp
clc
outsl
dec
pop
or
fadds
mov
mov
les
dec
cmc
add
add
add
add
add
imul
fabs
fs
repz
fs
cld
gs
pop
pop
sbb
xchg
ss
lahf
idivl
push
add
cmp
adc
mov
out
add
add
test
add
sub
pop
pop
add
add
and
mov
sbb
dec
adc
pop
mov
and
add
jle
mov
mov
pop
test
add
xchg
xchg
lret
and
cli
loopne
testb
in
mov
les
add
or
adc
nop
push
mov
mov
jge
sbb
cs
outsl
pop
xor
lret
mov
cmp
adc
add
addl
dec
jle
mov
pop
sahf
test
ja
inc
xor
aam
cmp
add
outsl
lock
xchg
popa
lret
arpl
loop
sti
and
es
push
sbb
jno
xchg
pop
lock
hlt
add
clc
and
adc
loop
in
in
lcall
aas
data16
in
dec
and
push
aaa
and
add
xchg
ret
lods
add
mov
test
pushf
ds
arpl
inc
mov
add
or
xor
sbb
add
dec
xor
adc
ficoms
jne
mov
cs
xchg
sbb
cmp
jp
add
insb
adc
aad
out
faddl
xor
lods
cs
add
xor
lods
jmp
add
push
add
shrl
fisubrs
ja
ret
imul
cmp
stc
int
add
add
das
push
add
cli
dec
loope
dec
inc
mov
mov
xor
xor
lods
adc
inc
pop
or
add
fsubl
ret
add
cs
mov
add
sub
stos
inc
sbb
fpatan
xchg
add
mov
outsl
add
add
sbb
push
add
cltd
clc
roll
divb
sub
arpl
lds
add
lock
dec
add
pop
mov
movsl
test
call
adc
hlt
cmp
ss
pop
subl
xlat
and
sbb
mov
mov
add
xchg
pop
inc
gs
pop
cmp
jb
jb
push
les
sub
mov
mov
add
jl
lahf
mov
loope
jmp
test
adc
jg
cli
fidivl
int
xor
add
std
lods
xchg
jb
decl
loopne
stos
stc
add
int3
xchg
xor
insl
lea
stos
mov
ret
sahf
addl
arpl
and
scas
sbb
add
inc
jle
add
inc
or
mov
insb
or
add
mov
sub
push
lahf
nop
mov
add
scas
add
adc
das
mov
add
rolb
mov
jl
out
fisubrs
lcall
xor
mov
mov
mov
insl
das
or
cmpsl
cmpb
out
mov
ret
loopne
dec
sti
pop
sbb
mov
loop
mov
movb
lret
or
lret
add
adc
push
shlb
mov
dec
add
sti
or
cmpsl
xchg
rcl
xchg
push
adc
mov
xor
or
jmp
mov
add
jg
push
lret
mov
add
sbb
ja
loopne
sbb
fiaddl
xor
cmp
add
add
fs
arpl
or
fsub
jg
pop
in
inc
xlat
mov
aam
mov
lret
enter
add
xchg
cs
add
aas
adc
dec
daa
dec
int3
add
mov
mov
std
add
mov
xor
add
add
in
ret
cs
lret
sbb
cmpsl
xor
adc
add
popf
rolb
or
out
mov
push
insl
xor
cwtl
xchg
fwait
pop
test
jge
dec
push
cmc
loop
fisubrs
out
xor
add
in
fwait
sbb
and
cmpb
fimuls
gs
mov
cmp
jne
pop
decl
in
jne
int3
mov
nop
add
stc
pop
jge
adc
fs
pop
rol
cmpsl
pop
jmp
loope
ljmp
out
mov
insl
add
sti
sub
in
add
add
sub
add
cmpsb
xchg
jecxz
inc
adc
jbe
add
mov
scas
jle
in
mov
cmp
jp
and
scas
les
icebp
jns
inc
testl
xlat
dec
ja
inc
fiadds
lea
insb
lds
daa
dec
dec
push
mov
lea
mov
mov
mov
and
xchg
add
mov
and
inc
push
mov
stos
and
cmp
loope
in
cmp
add
sub
jns
add
outsl
jns
fldl
lret
clc
daa
inc
in
push
dec
add
lret
mov
mov
lahf
push
decl
iret
shlb
cli
aaa
packsswb
jne
push
sarw
or
or
inc
adc
bound
mov
pop
mov
xchg
add
cmc
lret
add
jae
test
lret
sbb
outsl
mov
add
mov
leave
jge
out
push
xchg
mov
sub
push
jecxz
mov
test
sub
mov
adc
adc
cli
jne
adc
dec
mov
ror
inc
push
jmp
lret
pop
adcb
fstpt
add
sub
data16
cld
ret
loope
cmpsl
or
outsb
add
pop
arpl
in
inc
fwait
mov
add
pop
insl
or
mov
stc
xchg
scas
jno
add
xchg
pop
xlat
xor
imul
xchg
add
add
xorb
sub
add
xor
sub
push
inc
jecxz
add
mov
pop
or
daa
pop
mov
pop
sarb
pop
or
push
loopne
pop
popf
daa
sub
mov
int
out
cli
pop
cmc
int3
add
xrelease
repz
movsb
mov
test
mov
out
add
sbb
sub
inc
movsl
aam
pop
mov
addb
scas
inc
mov
mov
xchg
or
ret
dec
jb
in
lods
jl
push
cmp
mov
pushf
add
sub
loope
mov
addb
xchg
and
sub
push
in
popf
repnz
xchg
xor
mov
stos
ja
mov
lods
pop
jecxz
sbb
movsb
add
ljmp
push
jb
inc
mov
xorb
pop
dec
lahf
pop
add
cmp
push
inc
mov
add
mov
mov
test
dec
fnstsw
cli
je
fnstcw
inc
push
hlt
pop
arpl
mov
aas
lods
add
std
push
fstpt
sub
orl
xchg
adc
test
jl
jnp
sahf
add
mov
bound
xchg
pop
add
gs
add
xchg
xor
data16
pusha
data16
xchg
ss
push
push
add
mov
adc
addl
ljmp
out
and
les
shrl
dec
fsts
hlt
mov
outsb
xorl
nopl
jmp
test
pop
xchg
jmp
pop
or
dec
push
add
lret
les
push
ljmp
add
lret
and
sti
sbb
fwait
add
das
inc
shrb
movsb
xchg
aaa
pop
xchg
xchg
sbb
xchg
adc
cwtl
xor
test
add
xchg
pop
je
mov
movb
scas
jnp
cli
rorl
ja
push
and
out
into
mov
pop
add
pop
movsb
insb
test
add
pushf
pop
add
xlat
cmc
push
popf
lret
push
or
add
stos
clc
bound
add
cltd
mov
testb
sub
add
pop
or
in
cwtl
sbb
imull
pop
addr16
sbb
push
lret
cmp
cmp
mov
mov
adc
add
or
loope
or
push
fwait
fwait
es
aad
pop
aaa
mov
mov
es
out
add
adcl
insl
adc
add
or
jg
lcall
icebp
flds
xor
add
inc
xchg
sub
pop
call
and
lods
movsl
cmp
sarl
jmp
pop
scas
cmp
mov
xorl
cmpb
add
add
sbb
push
add
push
test
jmp
sarl
sub
in
add
mov
add
jle
cmc
xchg
and
insl
ljmp
roll
xchg
sub
iret
push
ljmp
arpl
test
dec
jg
inc
add
add
pushf
pop
imul
aaa
aas
add
lods
xchg
mov
adc
movsb
add
add
rorb
mov
test
push
mov
add
or
jno
mov
mov
mov
fistl
add
fwait
adc
testb
roll
and
ret
mov
lcall
es
ds
cmp
push
dec
nop
mov
mov
sbb
inc
aam
pusha
add
lds
std
cwtl
xchg
fwait
mov
xlat
enter
shrl
add
fidivl
cwtl
sbb
xorb
popf
add
push
fcomip
lahf
dec
jl
jge
push
push
xchg
add
les
xchg
aaa
jmp
dec
add
or
insb
cmp
xor
jg
stc
aas
xor
or
cmp
jp
cmp
ljmp
inc
mov
incl
pushf
das
popa
adc
js
ror
ror
sub
dec
lret
xchg
cmp
repz
fdivr
lds
xchg
frstor
loopne
out
imul
add
dec
adc
cli
fdiv
add
add
push
adc
add
ffree
popf
in
sar
std
jo
orl
ficomps
mov
pop
pop
gs
loope
shrb
or
or
inc
outsl
mov
mov
jecxz
test
mov
jae
sub
push
mov
xchg
add
insl
xchg
test
add
add
cmp
mov
test
add
fldln2
and
cmp
scas
addr16
dec
arpl
bound
aas
sbb
add
xor
and
hlt
pop
xchg
and
jns
inc
faddl
lds
stos
mov
add
js
cmp
aas
xchg
cwtl
mov
scas
fs
pusha
push
push
xchg
add
int
xchg
inc
inc
mov
push
dec
adc
test
mov
jge
lcall
cmc
push
mov
add
add
into
scas
sti
lods
add
andb
pop
outsb
mov
in
pop
push
sti
out
xlat
xor
movsb
pop
shr
and
out
pop
jbe
rorl
ret
popf
jns
or
mov
lret
or
test
add
add
pusha
or
mov
fiadds
cmp
sbb
add
jl
cmpsb
repnz
mov
push
add
out
gs
sbb
lock
add
cmp
xor
add
push
out
mov
decb
xchg
cwtl
hlt
mov
test
iret
fldt
ret
clc
add
mov
sub
add
mov
mov
ljmp
lret
adc
add
pusha
add
jnp
push
and
pop
fs
add
jge
mov
pop
lret
add
ret
outsb
push
aam
stos
mov
xor
int
aaa
aad
jo
inc
inc
pop
add
cwtl
bound
iret
aam
in
imul
mov
cmp
pop
fldenv
mov
adc
mov
lahf
movsb
pop
mov
add
xor
dec
lsl
sub
add
add
mov
fcompl
mov
or
sbb
aas
rorl
or
js
add
add
divb
jmp
and
imul
movsl
jb
push
and
popf
movsl
add
add
push
lcall
pop
adc
outsb
mov
int3
movsl
or
sub
jge
jmp
cmc
add
add
and
pop
or
out
sub
scas
lock
in
sbb
xchg
lods
pop
add
push
add
lock
and
mov
xchg
dec
outsb
jge
and
js
movsb
jo
push
loope
ret
movsb
push
and
dec
test
or
xchg
mov
pop
in
or
rcll
data16
add
push
fldl
sbb
or
dec
dec
mov
pop
add
hlt
mov
pop
add
aam
mov
inc
mov
jae
addr16
sbb
add
in
shll
add
push
mov
and
xor
cmpsb
sub
mov
hlt
in
xor
xchg
lret
comiss
test
add
fsub
or
add
cmp
sbb
xchg
clc
dec
dec
mov
mov
repnz
xchg
jl
add
ss
add
fdivrl
xor
fstpt
xchg
jecxz
push
mov
les
inc
add
add
jge
les
push
enter
dec
js
sub
loop
jae
lock
pop
or
and
dec
cs
arpl
mov
js
add
nop
jbe
adc
xchg
jb
add
or
add
add
mov
stos
mov
pusha
push
dec
or
sbbl
jno
out
jns
mov
fwait
aaa
jb
pop
mov
add
es
add
add
jnp
cmpl
jle
insb
lods
lahf
imul
add
xorb
icebp
add
cmp
xor
dec
es
mov
add
add
lret
cwtl
push
frstor
aam
das
movsb
mov
pop
mov
jo
adc
add
stos
push
pop
dec
inc
add
adc
sahf
mov
push
lods
add
add
inc
push
mov
adc
push
lds
dec
or
add
fiaddl
xchg
xchg
lods
add
loope
mull
mov
repz
pusha
add
push
in
lret
sbb
adc
pushf
cmp
decl
loopne
add
pop
popa
add
mov
loopne
cmp
dec
je
xor
mov
ret
iret
jg
ljmp
mov
aad
dec
es
ljmp
inc
xor
sbb
mov
cld
into
xchg
pop
add
pop
ss
mov
movl
add
xchg
mov
sbb
xor
cmp
add
adc
enter
add
adc
cmp
push
or
adc
sub
lds
cli
jnp
cmp
pop
divl
and
sub
loop
dec
mov
stos
imul
and
xchg
add
fsubl
xchg
xor
int
loopne
lods
and
popf
cmpsl
es
xor
or
jns
inc
lea
fmul
mov
mov
test
jo
adc
dec
mov
add
dec
dec
mov
lock
inc
movsb
pop
movsb
sub
rclb
xor
inc
xchg
and
in
cmpsb
loope
stos
add
cmp
mov
movsb
add
aam
xor
jae
fmull
popa
dec
push
movb
std
sbb
jns
cmp
mov
jns
mov
aad
dec
dec
addb
dec
push
push
and
add
aas
cwtl
sub
hlt
jl
add
xchg
add
int3
mov
orl
sbb
test
add
arpl
add
sub
xchg
test
imul
test
cmp
fmull
fwait
mov
jp
filds
add
dec
sub
lock
les
jb
push
cltd
inc
add
cltd
in
xor
and
add
out
cmp
arpl
add
adc
std
xchg
out
add
lea
fadds
mov
add
cltd
jg
push
addl
dec
sub
sbb
add
dec
popa
cwtl
loope
sub
pop
dec
pop
add
ret
add
ja
imul
mov
pop
leave
adc
add
ret
lea
out
lcall
sbb
jge
sarb
incb
popa
aas
push
jl
xchg
mov
nop
iret
xchg
sub
xchg
xlat
push
loope
fisttpll
insb
scas
aas
add
shll
sti
fisubrl
pop
sbb
or
or
xchg
pop
xorl
sahf
add
add
jae
popa
adc
outsb
in
add
mov
sbb
cmp
add
cli
mov
or
cmp
mov
mov
push
jno
ret
add
pop
stc
mov
sbb
add
mov
cli
mov
movsb
push
push
cmp
jnp
adc
ret
clc
mov
fldl
test
lcall
div
jo
fstps
inc
popl
cli
rorb
push
or
pop
add
lods
scas
lcall
stos
cs
add
mov
jnp
sub
sbb
dec
mov
mov
add
scas
lahf
xchg
mov
fwait
aaa
xor
and
cmp
fsts
push
add
repnz
add
mov
fimuls
add
in
ret
inc
xchg
fs
dec
cs
ret
xor
stc
and
jo
pcmpeqd
mov
sti
stos
inc
cli
movsb
cwtl
and
add
add
icebp
fidivl
mov
in
adc
aaa
cmp
jb
mov
ret
cmp
fucom
mov
add
sahf
add
and
add
fldcw
je
dec
jno
insl
add
iret
addr16
hlt
push
add
sub
add
mov
fwait
pop
loope
add
add
add
pop
incb
xchg
stos
add
push
ret
enter
mov
ljmp
lock
loopne
ret
gs
or
inc
lcall
add
jmp
ret
dec
jb
add
add
cmp
add
fwait
push
fmuls
xchg
das
mov
fsubrl
sub
mov
sub
mov
inc
jno
sbbb
test
fldl
mov
das
sbb
pop
mov
sub
pop
loope
sub
push
xchg
repz
into
cmp
add
jnp
push
xchg
cmp
fldl
sub
cmp
jge
cmpsb
add
repnz
mov
dec
xor
ret
test
sub
push
in
es
lods
clc
cmpsl
or
nop
iret
sbb
push
mov
add
scas
sbbb
xchg
cmp
sbb
xor
das
mov
jo
mov
xchg
out
fldt
mov
pushf
mov
lret
fists
xchg
cli
rorl
lods
outsb
adc
in
add
or
add
add
and
loop
arpl
rol
jle
push
div
add
adc
sbb
cmp
clc
mov
iret
ret
jl
push
imul
scas
xchg
or
hlt
outsb
sbb
pop
lods
mov
popa
pop
inc
xor
cmp
ja
mov
fwait
or
je
int
mov
add
add
add
add
push
add
xor
sub
xchg
add
scas
add
and
mov
jmp
pop
js
add
jmp
fwait
add
dec
fwait
mov
add
add
repnz
js
popa
mov
add
mov
mov
mov
adcb
subb
push
add
mov
dec
shl
test
rolb
mov
inc
add
add
std
cmp
test
add
cmpsl
jnp
repz
or
clc
add
lds
insb
xchg
xchg
int3
xor
movsl
imul
push
sub
rorl
out
jnp
mov
in
add
jo
gs
out
cltd
fildll
jl
or
or
mull
ja
and
loop
adc
mov
aad
shlb
nop
or
vrcpss
cmp
aaa
sti
inc
inc
add
push
scas
jmp
jg
add
pop
lds
cli
add
subb
movsb
pusha
add
push
lret
add
add
mov
call
inc
cmp
out
sbb
sbb
ficomps
mov
adc
jo
jnp
sbb
cwtl
push
call
icebp
dec
add
xor
sub
sbb
add
cmpsl
push
sbb
inc
pop
xor
sti
xchg
push
or
sbb
pop
mov
insl
xor
xchg
push
add
cmp
pop
mov
adc
sbb
jbe
cmp
repnz
int
out
xchg
movsl
bound
sub
jp
or
cwtl
jae
add
mov
sbb
and
sbb
ja
daa
mov
mov
test
sub
pop
das
xchg
pop
adc
popfw
in
pop
add
mov
ret
ja
push
lock
sub
cmp
bound
stc
xchg
add
sahf
jnp
dec
add
lretw
repz
inc
rcl
loope
ds
push
jle
jae
cli
clc
sub
fcomp
or
in
in
xchg
repz
outsl
addl
add
adc
sub
pop
add
and
insw
in
adc
and
popa
adc
add
test
cld
inc
add
mov
outsb
jg
push
pop
add
add
fisubl
sti
xor
cmpsb
cmpsb
das
hlt
and
dec
sbb
cmp
test
jle
test
fsubp
rep
leave
sbb
mov
jbe
or
add
test
repz
mov
mov
pop
test
ljmp
push
andl
incb
jp
pop
dec
add
add
inc
mov
stos
ljmp
xchg
stc
dec
pop
test
add
add
stos
lahf
imul
or
out
cmpsl
xlat
cmp
add
negl
or
in
xchg
lock
subb
cmpsl
lret
push
jmp
mov
loop
add
in
sti
and
add
add
nop
xlat
leave
push
pop
sahf
cltd
add
mov
push
sub
add
or
jbe
mov
inc
loop
shl
push
jl
sbb
mov
movb
or
inc
fidivs
mov
xor
adc
flds
sti
adc
out
add
add
pop
add
push
pop
inc
add
fsts
cmp
rcrb
pop
jge
fidivs
dec
or
flds
sbb
mov
pop
movsb
lods
sub
shll
loop
inc
subl
adc
inc
aas
add
aaa
mov
test
sahf
add
add
mov
bound
test
rolb
das
pop
loope
jge
add
in
xor
shlb
sub
jnp
jge
inc
pop
dec
push
jns
jo
pop
imul
jbe
loopne
dec
add
testb
jno
movq
sub
sahf
lret
mov
add
dec
mov
movsb
std
add
cmp
or
mov
mov
add
jp
inc
add
lea
fwait
dec
hlt
jno
cs
mov
add
push
xchg
movsb
add
mov
mov
fimull
es
jmp
popfw
insl
addl
cld
add
or
push
in
stos
xor
add
js
std
ret
jae
and
lea
addr16
aam
mov
xchg
pop
push
stos
mov
inc
xlat
dec
dec
mov
repnz
les
mov
dec
les
sarl
jecxz
xlat
mov
gs
xor
outsl
add
inc
or
sbb
rcrl
outsl
push
fstpl
xchg
in
add
fmull
adc
and
adcb
aam
or
sbb
jno
repz
mov
inc
test
insl
aam
cmp
mov
add
aad
test
xchg
dec
aam
adc
inc
shlb
cmp
fcom
sub
pop
add
add
xor
xor
ret
xchg
xor
mov
cmpb
data16
add
xchg
xor
enter
sub
lea
mov
and
je
sbb
scas
cmp
pushl
addb
lock
ret
ret
mov
ja
sub
add
lea
mov
push
and
adc
mov
jne
add
mov
lods
xor
ss
aad
decb
cmp
rclb
add
mov
gs
add
stos
dec
add
cli
bound
cmp
loop
repz
jp
int
or
mov
sub
fsub
or
stos
add
xor
fs
add
jns
jge
mov
rolb
xchg
push
lea
sub
testl
sub
shl
add
jae
add
mov
mov
jg
add
std
in
mov
nop
dec
sub
inc
out
outsb
cmp
cmp
add
cli
dec
cltd
sbb
sbb
jbe
sbb
xchg
pop
add
xchg
mov
shlb
insb
cmp
jmp
adc
cmp
cmp
out
sub
add
add
push
pop
aas
cmp
mov
je
mov
pop
aad
xor
incl
adc
clc
sub
fucomip
pop
ss
cmp
inc
inc
lret
cmp
add
aaa
lods
jno
or
adc
xchg
fistpll
sub
xor
add
cmp
aam
inc
sbb
add
fnstenv
pop
adc
inc
add
loop
ret
dec
fwait
dec
mov
jg
and
ja
out
fwait
mov
and
and
add
add
mov
xorb
daa
add
mov
push
mov
pop
movsb
xchg
adc
repz
sbb
mov
adc
out
into
aas
sbb
add
mov
jae
dec
mov
push
add
add
imulb
es
jmp
pop
aad
outsb
and
ljmp
fsubp
cmp
push
push
adc
add
imul
fcomi
inc
pop
mov
dec
mov
in
test
shlb
pusha
push
jo
mov
inc
mov
repnz
push
lea
mov
dec
mov
inc
cmc
scas
cs
cld
add
loope
add
jnp
add
pusha
xchg
xor
mov
cmpsb
jns
into
xchg
in
icebp
add
add
dec
mov
repz
lret
push
test
iret
je
pop
xchg
or
mov
cmpsb
sbb
jne
mov
rcl
scas
mov
mov
pop
push
push
bound
xchg
add
lret
add
insl
inc
gs
neg
mov
repz
jno
add
popl
sbb
js
add
sbb
dec
mov
add
testb
les
pop
enter
add
and
mov
sub
add
mov
arpl
into
fadd
push
ret
or
out
addb
addl
orl
push
pop
jl
cmp
or
fistps
add
inc
pop
or
add
dec
into
mov
add
aad
inc
add
ja
xchg
pop
repnz
das
sub
add
add
nop
mov
test
push
cmp
or
cli
cmc
push
mov
sub
dec
cli
jb
inc
sbb
sub
cld
movsb
sbb
hlt
mov
sub
adc
mov
fsubp
test
adc
stos
popf
xchg
fs
push
pop
mov
sbb
cld
mov
jg
call
or
adc
jmp
repnz
jle
jno
jge
pop
pop
add
or
add
dec
stos
add
fstp
imul
cmp
pop
sbb
sbb
dec
in
fstpl
dec
hlt
mov
outsl
pop
dec
mov
in
scas
push
sbb
neg
andb
bound
mov
and
movsb
mov
push
roll
sbb
add
push
adc
out
jae
add
ljmp
xor
or
sub
dec
add
mov
cmp
sbb
ja
add
repnz
pushf
xchg
xor
iret
push
inc
dec
lods
call
mov
notb
cwtl
push
jne
inc
xlat
mov
xor
add
add
pop
es
nop
mov
and
mov
xor
inc
in
sub
add
fldl
mov
sub
jbe
xor
fstl
loope
insl
mov
add
faddl
lahf
pop
ja
xor
lcall
daa
dec
or
sub
in
inc
inc
imul
cmpsl
mov
jbe
add
jne
in
push
into
loope
daa
add
faddl
cs
add
arpl
lret
ljmp
mov
dec
add
pop
imull
fcomp
ss
inc
xchg
into
mov
adc
xchg
pop
mov
popf
push
sub
pop
scas
popl
mov
loop
sbb
leave
fstl
mov
adc
xchg
add
adc
cmp
xchg
mov
and
cmp
iret
out
mov
dec
add
daa
add
dec
sub
add
gs
mov
add
cmp
jl
inc
mov
neg
and
push
sub
jne
ja
enter
sub
inc
addr16
ljmp
out
adc
push
fiadds
cwtl
inc
mov
fnsave
mov
xor
cltd
mov
fadds
xchg
xor
add
mov
add
xor
inc
loop
mov
loope
add
add
jle
add
jns
add
sbb
std
dec
icebp
ror
add
test
das
adc
sub
cwtl
adc
push
mov
or
mov
sub
xchg
test
or
jo
add
mov
pop
xchg
dec
lret
les
xor
testl
add
aam
xchg
cwtl
mov
lret
dec
push
add
jmp
sub
fwait
jge
in
add
test
jl
add
cli
dec
mov
fwait
and
out
cli
and
xor
sub
jl
fwait
and
and
dec
sub
add
adc
add
cmpsl
ret
xchg
mov
pop
sub
dec
add
clc
push
test
pop
dec
add
sub
push
push
xchg
shlb
add
sub
jae
add
and
cs
jp
hlt
out
loope
add
sbb
add
add
add
add
mov
jo
jo
popa
sarb
and
pop
or
sbb
scas
dec
add
dec
xor
add
inc
loope
ss
mov
add
stos
sbb
cmp
repz
int3
sbb
jbe
inc
shl
add
or
gs
and
test
cmp
and
iret
jp
mov
mov
or
mov
xor
mull
orl
add
adc
push
mov
mov
mov
pop
rcl
fwait
mov
fs
mull
js
dec
xchg
xchg
enter
test
lock
add
jmp
jae
pop
adc
pop
ret
push
sbb
ret
insb
outsl
icebp
lret
inc
scas
and
cmp
add
and
out
jecxz
das
adc
ret
mov
cmp
repnz
in
jns
cltd
mov
rcrb
xchg
push
add
in
test
nop
aam
mov
jns
aas
sbb
movsl
ja
sbb
roll
loope
xor
add
lods
dec
adc
pushl
stos
inc
jae
imulb
pushf
push
adc
sti
out
enter
test
mulb
mov
call
dec
xchg
enter
add
push
add
sbb
or
pop
andb
pop
out
and
jge
push
stos
xor
pop
push
push
lock
aas
jge
add
xchg
cmc
jmp
add
mov
add
add
cmp
dec
push
addl
add
pop
cltd
nop
xor
dec
call
cltd
in
data16
lret
inc
imul
in
js
xchg
jns
add
adcb
sbb
mov
popa
add
out
shlb
dec
cmpsb
mov
daa
xchg
inc
popa
imul
imul
pushf
cmp
cmp
mov
ja
cmp
add
push
add
jge
test
pop
sub
sbb
cmpsb
add
adc
mov
add
andb
addr16
lcall
sub
and
test
fucompp
mov
fldcw
add
inc
xor
jmp
clc
adc
add
mov
scas
dec
gs
add
sbb
aad
jno
mov
sub
je
push
xlat
jo
xor
lcall
sahf
mov
xchg
or
cmp
dec
sbb
test
cli
sbb
cwtl
sbb
add
sub
add
add
sub
pop
jmp
mov
cld
mov
xchg
movsb
add
ret
imul
pushf
mov
daa
adcb
push
nop
movsb
sarl
sub
faddl
cmc
scas
dec
mov
nop
mov
or
push
xor
stc
xor
aad
ror
pop
add
ficoml
aas
jns
std
mov
add
add
mov
in
movsl
inc
in
or
pop
into
mul
or
adc
inc
sbb
mov
inc
std
movl
mov
les
add
pop
f2xm1
repnz
push
mov
sub
jnp
push
and
pop
call
mov
ret
ljmp
add
loop
mov
imul
pop
add
and
pusha
js
subl
es
lea
pusha
cmpsb
and
mov
mov
pop
or
add
mov
ret
dec
and
push
xor
imul
out
sarb
out
mov
jecxz
daa
adc
test
test
fiaddl
mov
jecxz
add
push
cmpsl
push
lods
xchg
dec
call
push
lret
add
sbb
jecxz
push
in
outsb
xchg
mov
push
jnp
mov
std
cmc
add
xor
xor
sub
std
mov
stos
pop
out
add
icebp
adcl
sti
movsb
mov
push
mov
inc
xchg
inc
add
ret
enter
add
aas
jp
int
add
pop
sub
dec
mov
push
add
push
fwait
add
xor
sub
and
sub
js
jno
mov
clc
pop
adc
dec
xchg
add
add
inc
and
fdivrl
das
fidivl
cmp
jmp
push
cli
cmp
xor
pushf
addl
add
dec
ds
jno
sbb
add
pusha
mov
xchg
cmc
ljmp
mov
push
mov
add
scas
into
jae
leave
add
or
add
adc
dec
addl
or
add
cltd
lret
and
jo
dec
jmp
int3
add
jne
lret
jmp
test
pop
jp
ss
lods
and
xor
jle
add
mov
stc
adc
push
add
add
data16
stos
xchg
testl
ret
adc
movsb
and
push
out
add
insl
inc
out
add
add
pushf
in
sbb
sub
mov
push
dec
push
adc
sbb
sub
fmul
fbstp
int
add
jle
or
or
mov
adc
mov
pop
add
shll
xor
daa
imul
mov
add
test
cld
jnp
mov
cmpsw
ljmp
mov
mov
lret
sub
addl
mov
insb
dec
fnstcw
adc
int
nop
repnz
dec
mov
inc
inc
lret
ljmp
js
int3
movswl
or
mov
decl
mov
stos
sub
sbb
inc
xchg
add
sub
jno
add
ljmp
rolb
sbb
or
push
cmpsb
sbb
in
sub
add
add
add
or
fs
add
add
les
je
add
inc
fadd
out
aaa
xchg
mov
xor
add
popa
xchg
dec
fbstp
adc
popf
imul
fimull
adc
fcom
add
add
dec
dec
test
leave
xor
add
add
xor
add
dec
aad
pop
or
inc
push
dec
add
cwtl
cmp
lods
mov
movsb
insl
jmp
imul
push
push
int
xchg
mov
dec
mov
jp
and
testb
mov
adc
out
add
sbb
into
mov
cmc
test
add
xor
sahf
pusha
xchg
dec
push
or
add
adc
cmp
movsb
add
jnp
xchg
mov
jno
lods
or
add
xchg
jbe
add
and
xor
mov
adc
xchg
scas
add
add
scas
inc
aam
mov
cli
push
mov
mov
cmpsb
mov
dec
add
in
xchg
fildl
shll
push
adc
sub
sahf
sbb
sub
jp
out
mov
mov
bound
fstps
test
push
int3
cmc
add
mov
lods
jl
or
sbb
cmp
pop
ret
cmp
or
xor
or
add
add
cli
mov
xchg
cmp
add
push
fstpl
jo
xchg
and
jnp
fidivrl
mov
add
out
jnp
mov
push
mov
inc
movsl
pop
fs
in
mov
movsb
in
add
xchg
jne
stos
pop
test
xor
add
fcomps
cmp
mov
loope
and
add
mov
cs
inc
jge
add
mov
mov
imul
call
scas
js
add
fs
xor
repnz
ds
add
test
mov
das
push
jno
add
xor
pop
lahf
pop
fimull
test
out
add
and
xor
fisttpll
push
pop
and
add
or
add
add
add
sbb
mov
clc
pmulhuw
ret
mov
lods
mov
stc
in
cld
jno
pop
sub
add
xchg
mov
loop
lret
pop
jle
js
lcall
out
mov
insl
in
stc
jecxz
add
add
push
xchg
dec
icebp
inc
lcall
in
enter
fdiv
into
roll
mov
sub
mov
pop
test
mov
or
cmp
push
mov
pop
int3
fwait
cltd
dec
daa
rorb
lock
into
mov
mov
lcall
in
push
cs
repz
out
mov
add
decl
rcrb
add
xlat
push
push
gs
fldt
sbb
xchg
or
sub
or
int3
jns
in
add
loop
sub
mov
add
rol
push
mov
fdiv
add
popf
arpl
jbe
mov
and
jbe
pushf
repnz
mov
jb
mov
jnp
jl
andb
clc
adc
mov
xor
addr16
mov
adc
ret
xchg
in
jnp
add
xchg
flds
pop
add
mov
js
loope
sub
cs
push
fyl2xp1
inc
jp
dec
pop
xchg
bound
std
push
out
mov
pop
test
fstpt
js
cmp
jg
xor
add
stos
aas
push
add
repz
mov
xchg
imul
push
test
mov
cmpsb
in
aam
imul
mov
add
movsl
dec
or
jle
add
scas
cwtl
mov
mov
cmpsb
xchg
test
or
add
divl
push
add
popa
pop
pop
mov
scas
insl
ret
xchg
push
add
add
mov
es
add
add
add
sub
inc
pop
out
lcall
xor
add
sahf
cmpsl
push
dec
lods
cltd
sbb
mov
add
movsl
cmpsl
mov
lahf
add
add
mov
pop
jb
cmpsb
xchg
leave
add
and
in
sbb
andb
jo
jecxz
add
xor
les
inc
add
dec
sahf
mov
push
aaa
pop
outsl
add
sub
loop
movsl
pop
add
bound
repz
push
into
add
adc
clc
in
cmp
ljmp
ljmp
test
dec
add
sti
add
cld
fildl
xchg
pop
popf
rorb
je
and
pushf
pop
repz
xchg
and
jnp
or
ret
xor
add
cltd
fldl
out
pop
add
in
fimuls
cli
push
inc
push
jp
mov
orb
mov
and
cmpsl
in
leave
add
fs
cmpsl
pop
jo
hlt
scas
push
adc
cmp
xor
call
jmp
ljmp
push
dec
add
or
popa
add
mov
in
sbb
shl
mov
add
or
and
mov
fs
mov
mov
mov
shll
xor
jecxz
cmp
mov
and
mov
add
ret
push
cmp
mov
or
cmp
fsubrl
add
fildll
add
add
or
jp
mov
push
add
rcl
add
mov
stos
push
idivb
jnp
jnp
jne
add
or
cmp
ljmp
mov
jns
jge
add
mov
push
imul
ja
xchg
loop
sahf
dec
add
cmp
fcoms
mov
cltd
dec
add
cmp
shll
mov
loop
shll
inc
jae
jg
fstpl
cmp
rolb
adc
out
add
lds
sahf
fiadds
add
add
les
mov
dec
mov
iret
movsb
jl
popf
add
adc
or
push
jle
jo
cmp
out
or
mov
cmp
add
mov
and
jmp
decb
push
lret
and
add
mov
arpl
or
bound
inc
add
decl
pop
into
ds
or
out
es
adc
cltd
cmp
stos
dec
xor
fcom
cltd
ret
or
insl
fisubs
push
repnz
add
ficomps
jno
stc
add
adc
sbb
adc
jb
dec
xlat
popf
adcb
test
or
dec
pop
add
xor
dec
mov
push
insb
popf
scas
add
dec
gs
pop
add
fs
out
icebp
pop
std
sbb
mov
in
sbb
add
inc
and
mov
xchg
imul
daa
adc
pop
push
cmp
inc
out
pop
jmp
mov
daa
add
add
mov
mov
fisubrs
xor
mov
lahf
imul
or
cmp
cmp
hlt
cmp
sub
bound
insb
jbe
addl
add
stc
rcrl
add
push
add
addr16
cld
mov
add
outsl
push
xchg
jp
add
mov
push
fs
cmpsl
lods
push
mov
mov
ja
std
ret
or
aaa
mov
inc
clc
cmpsb
int
push
add
ja
add
mov
insl
mov
mov
test
test
sbb
add
pop
add
add
add
cltd
fs
or
add
sbb
jo
jp
or
add
cmp
outsl
sub
add
xor
in
mov
xchg
sti
push
nop
sub
sbb
push
in
loope
pop
mov
in
pop
mov
pop
inc
fmull
mov
pop
out
outsl
sub
int3
jne
mov
pop
xor
add
sub
dec
fwait
add
xchg
shrb
leave
add
int3
add
inc
cmp
add
lea
add
cwtl
xor
jmp
cmpsb
add
add
sbb
sub
shl
and
lret
stos
mov
push
mov
into
dec
add
xchg
mov
mov
mov
add
add
xchg
xchg
add
addr16
sbb
mov
push
lods
test
add
ljmp
fcomp
add
mov
pop
add
imul
in
mov
mov
sbb
pop
out
sti
add
mov
or
ja
test
loop
les
adc
sub
pop
cmp
gs
jae
movsl
sbb
sahf
sub
mov
icebp
fwait
or
dec
scas
cwtl
add
mov
rclb
in
mov
jp
pop
cmp
popf
dec
add
mov
add
popa
sbb
pop
out
imul
xchg
dec
cmpsl
add
or
loope
aad
cmp
in
mov
add
loopne
add
adc
xor
inc
pop
cmp
int3
sbb
jb
outsb
loop
sbb
cltd
push
negl
test
jae
or
test
add
iret
or
add
cmpsb
jae
sbb
cmp
mov
add
nop
adc
mov
add
fs
dec
add
mov
cmp
sub
cmp
xor
cmp
jne
and
cmp
std
jp
push
inc
cmp
fidivrl
xchg
xor
cs
xchg
jecxz
enter
mov
clc
mov
add
add
add
mov
pop
shlb
xchg
shrb
lods
out
xchg
pusha
jge
sbb
lods
rorl
xor
aam
sbb
lcall
xor
lcall
mov
in
inc
mov
fwait
cltd
xchg
add
call
add
xlat
stc
add
xor
pop
adc
add
mov
xchg
cs
jg
inc
inc
inc
test
cmp
aas
push
adc
cld
fs
in
add
stos
fs
lock
inc
movsb
push
jne
add
add
jp
popa
cmp
iret
or
jno
mov
pop
test
jo
shlb
or
out
push
mov
test
dec
in
loope
jle
mov
aas
mov
jae
jno
add
pusha
or
cmp
rorl
scas
push
pop
adc
out
fisttps
push
mov
add
jp
add
lcall
cld
inc
mov
adc
xor
add
jl
jmp
adcl
add
pop
addr16
negl
add
add
pushf
out
icebp
or
cmp
call
xlat
repnz
adc
sbb
fistps
mov
add
push
xchg
fwait
add
shrb
test
into
fldenv
data16
push
outsb
clc
fsubrs
adc
push
pop
cs
add
pop
mov
mov
cltd
scas
xchg
rcll
add
fisubrl
or
popf
adc
add
dec
xor
add
lods
mov
daa
pop
mov
cmp
stc
arpl
push
xchg
and
add
add
and
dec
add
xchg
adc
pushf
lret
adc
cs
ljmp
lcall
and
push
add
push
adc
imul
data16
cmp
jmp
mov
cmp
cmc
popa
lods
sbb
stos
add
ret
mov
adc
loop
xor
or
add
and
sub
sbb
sbb
adc
mov
lahf
push
xor
loop
sub
subb
mov
jecxz
and
rclb
sbb
rolb
aas
add
dec
in
pusha
fwait
push
mov
cwtl
mov
daa
stos
ja
inc
movsb
fwait
mov
insl
sub
dec
jb
xchg
add
mov
dec
int3
mov
xchg
fsubrl
add
pop
xchg
movsb
push
out
mov
add
sub
addl
jp
negl
test
pop
add
popf
pop
gs
add
add
and
and
dec
dec
repnz
or
add
sub
stos
jo
cmp
shll
sahf
add
and
sbb
in
add
mov
dec
mov
mov
and
loope
aad
adc
or
jmp
imul
push
or
sub
add
lods
movsb
icebp
lods
push
jb
fldenv
sbb
pop
cmp
adc
mov
xor
insb
add
fsubs
sbb
mov
jbe
jae
lea
enter
orb
das
lock
jo
add
clc
neg
mov
roll
stos
aas
and
fstpl
add
push
xchg
dec
rcll
adc
cs
add
sbb
add
pop
pop
lods
cli
sub
lock
sub
push
rcr
mov
mov
mov
mov
mov
add
sub
mov
sub
add
testl
xor
add
cmp
add
cmp
aam
add
mov
add
jl
mov
mov
gs
in
mov
int3
push
out
sub
or
hlt
add
mov
in
les
lock
inc
adc
popf
cs
pop
add
xchg
lret
cmp
mov
fisttps
add
cld
in
mov
lret
mov
add
hlt
stos
add
fdivl
and
add
out
add
jae
add
sub
jo
inc
inc
add
jo
add
mov
inc
jl
shl
sub
and
mov
sub
in
fadds
mov
push
fnstcw
dec
push
add
push
mov
jge
add
pop
mov
adc
xchg
ja
add
scas
add
fcomip
xorb
sahf
add
and
adc
popf
push
outsb
cmpl
inc
add
cmpsl
sbb
cld
decb
mov
testb
cmpsb
std
inc
lret
add
cmpsb
add
add
fistpll
sbb
sbb
add
add
add
inc
mov
bnd
test
mov
pop
repnz
xchg
or
push
mov
in
inc
jae
cwtl
add
enter
loope
movsb
movsb
pop
xchg
sub
add
add
mov
lret
daa
pop
scas
mov
mov
xor
push
lret
or
addr16
add
out
inc
aas
lret
push
jp
insl
roll
or
sbb
sbb
lret
das
jle
xchg
sbb
ds
push
and
dec
xor
add
std
push
jo
pop
jne
pusha
xchg
repnz
inc
dec
je
dec
insl
ljmp
pop
add
movsb
push
push
int3
adc
in
mov
pop
mov
jne
pop
adc
add
add
add
pop
push
xchg
ret
pop
mov
or
movsb
packssdw
add
stc
nop
sub
add
cmp
jmp
stos
push
mov
xor
cltd
popf
loop
fs
lahf
push
jae
fldenv
xor
inc
out
sub
mov
cmp
repnz
imul
fwait
sub
mov
xchg
push
pop
aam
mov
add
fldenv
add
into
add
popa
add
pcmpgtd
adc
jmp
mov
mov
push
loopne
dec
mov
jnp
out
stc
adc
inc
push
or
pop
add
mov
add
in
daa
add
icebp
push
jl
clc
pop
add
inc
aaa
pop
push
cmp
xor
xor
in
pop
fdivp
test
add
fildl
push
pusha
adc
xchg
xor
pusha
mov
mov
sti
add
dec
add
pusha
inc
test
add
xor
add
sub
shr
inc
jecxz
add
add
jmp
stos
add
add
out
sub
mov
cmp
jle
jo
cmp
mov
inc
in
pop
xchg
roll
adc
cs
xor
lret
into
xchg
and
repz
push
jbe
sub
repnz
jmp
mov
mov
hlt
xchg
mov
scas
xor
add
xor
aam
cli
mov
adc
xlat
scas
mov
std
adc
in
ljmp
mov
add
and
push
loop
roll
mov
mov
cli
mov
fdivs
mov
ja
push
pop
daa
cli
add
cs
xchg
out
sub
xchg
pop
fcmovbe
cld
mov
aaa
pop
jmp
sub
add
mov
sub
or
les
jb
adc
push
mov
mulb
hlt
xor
cmp
fstpt
add
cmp
sbb
xor
push
add
lret
jne
movsb
mov
mov
inc
jp
mov
mov
cmovbe
mov
out
lock
rorl
cld
mov
mov
push
jl
mov
cmpsl
in
adc
pop
stc
test
or
sub
repz
icebp
add
lea
jp
add
or
sub
sbb
pushf
add
cmp
loop
sbb
cmp
aad
mov
inc
pop
icebp
shrb
add
dec
add
sbb
mov
cmpsl
sbb
into
mov
iret
add
mov
adc
in
sub
outsl
or
in
add
cmp
mov
add
jecxz
sar
int3
lock
cmpsl
push
insl
or
inc
sub
ljmp
dec
add
dec
stos
add
fidivrl
lea
out
mov
outsl
add
les
push
test
rorl
xchg
dec
mov
jns
mov
insl
out
dec
jbe
xchg
mov
pop
cmp
test
add
movsl
hlt
add
add
ret
adc
push
dec
pop
leave
insb
sub
add
add
xor
jae
stos
jno
mov
push
std
add
mov
mov
stos
not
push
out
fs
and
ds
enter
add
push
fcompl
add
cs
mov
or
lret
add
xchg
add
or
pop
ss
push
push
into
faddp
mov
nop
and
inc
dec
int3
sub
add
push
add
in
jbe
ljmp
jo
pusha
or
xor
mov
in
add
cwtl
dec
add
mov
dec
sub
mov
clc
jle
jns
push
mov
fsts
xchg
aas
add
cmpsl
jecxz
aad
jge
add
add
popf
inc
pop
pop
lahf
jp
jb
dec
or
adc
add
push
popf
add
add
mov
iret
mov
pop
mov
shlb
add
fwait
add
daa
inc
call
les
xchg
mov
jp
push
ds
xlat
add
push
mov
add
add
lea
call
sbb
jmp
mov
nop
pop
inc
pop
or
push
and
push
add
jle
and
test
ljmp
xor
jb
loopne
sbb
pop
add
icebp
add
adc
mov
or
adc
out
mov
and
pop
mov
aad
adc
test
jb
pop
out
fmuls
lods
add
xchg
lds
mov
jg
pop
push
test
xor
loope
out
add
mov
lea
add
popf
xchg
fwait
in
mov
mov
add
jmp
mov
int3
addl
test
icebp
add
es
adc
mov
cmc
lahf
cmp
xor
out
ret
jmp
cmpl
mov
add
in
daa
mov
fmull
inc
cmc
clc
stos
mov
loop
jo
mov
mov
sub
adc
add
adc
add
repnz
cmp
inc
ja
fstpt
cli
stc
mov
adc
add
pop
shlb
and
fstp
das
add
fmull
push
pop
fisttps
add
stc
add
out
pushf
pop
sbb
test
iret
cld
push
cmp
xchg
js
mov
sbb
push
cs
sub
fldl
cmc
jbe
add
add
and
fbstp
pop
cwtd
enter
xor
add
or
push
add
sbb
add
sub
pop
inc
xor
loopne
add
push
add
inc
ss
and
fildl
aam
mov
jnp
insb
add
notl
addr16
les
insb
add
rclb
adc
jno
negb
push
cmpsl
repz
rcl
loop
bound
add
adc
and
pop
xor
xchg
outsb
packuswb
repnz
sbb
or
scas
jns
mov
xchg
lcall
adc
xor
fs
outsl
dec
inc
aas
sub
mov
mov
push
adc
ds
add
arpl
int3
pusha
lcall
mov
add
pop
sbb
stc
loopne
push
mov
mov
gs
xchg
imul
mov
pop
adc
mov
into
test
dec
and
sti
push
add
dec
sub
jecxz
cmp
adc
test
cld
aaa
lret
jnp
enter
or
fbstp
adc
sahf
cmp
pop
add
sub
popf
push
jecxz
outsb
jno
xchg
mov
subl
stos
push
jl
mov
mov
clc
cltd
and
fwait
nop
mov
ljmp
add
ret
mov
jno
out
mov
hlt
inc
addl
mov
jbe
push
shll
inc
add
inc
aam
mov
or
lret
add
add
add
imul
sbb
mov
cwtl
in
ret
lret
mov
add
xor
jg
xlat
add
mov
lahf
fistps
cli
lea
lcall
and
cld
inc
push
repz
add
dec
mov
add
add
add
xchg
in
jne
rcll
cli
jae
adc
dec
mov
movl
xor
pop
cmp
pop
xor
aas
add
sub
cld
mov
in
in
and
aaa
pop
cmp
pop
push
add
lds
pop
add
mov
fucom
pop
add
cmpsl
cmc
mov
hlt
inc
aas
fidivrl
mov
pusha
inc
fldcw
int
aam
in
in
dec
inc
and
push
pop
stos
popa
cmp
or
iret
mov
xchg
ret
mov
add
fstl
jmp
lock
jmp
add
inc
add
pmulhuw
int3
and
hlt
es
dec
xchg
pop
int
imul
pop
sahf
stos
mov
jbe
enter
sub
movsb
gs
jb
js
sub
add
mov
xchg
pop
andl
push
in
aad
andb
roll
or
add
pop
jecxz
mov
add
int3
and
cmp
pop
jne
mov
mov
inc
cmp
int3
inc
lds
add
adc
jnp
arpl
jmp
arpl
aam
int3
fwait
add
pop
add
sub
sti
xchg
add
and
mov
or
jge
out
test
mov
gs
loopne
jg
jne
cmp
dec
ret
mov
adc
xchg
mov
sahf
cld
adc
scas
arpl
push
ss
je
add
push
mov
rorb
es
pop
and
shrl
gs
pusha
ljmp
ljmp
je
jge
repnz
fsubr
movsb
mov
adc
cmp
add
ret
xchg
loop
ret
sti
aas
pop
loopne
jbe
or
aad
push
xchg
adc
xor
nop
push
gs
xor
add
add
sbb
cld
xchg
jnp
pop
xor
shl
lahf
pop
cmp
mov
mov
sahf
arpl
das
outsb
test
xchg
ds
add
cmc
movsb
sbbb
push
xor
call
jb
pushf
ret
out
repz
scas
add
andl
out
in
mov
mov
pusha
add
mov
xchg
adc
pop
mov
out
into
push
add
loop
and
add
mov
jge
mov
inc
pop
rorl
cmc
pop
addb
jmp
adc
imul
add
add
or
in
push
mov
add
xchg
xchg
inc
or
mov
pop
xchg
add
sbb
in
mov
pop
add
addb
cltd
add
dec
add
push
loop
add
mov
rolb
std
jnp
dec
inc
fs
mov
cmp
xor
xchg
movsl
push
mov
mov
mov
add
fisttps
mov
pop
pusha
mov
push
or
mov
sbb
popa
dec
out
and
xor
lcall
popf
rol
jge
sbb
inc
dec
add
in
or
or
out
xlat
add
add
add
inc
faddl
aad
pop
adc
sbb
cltd
sbb
sahf
and
imul
add
pop
dec
cmp
js
xchg
fadds
fldz
cmp
jmp
dec
nop
cmpsb
cmpsl
jbe
ret
pop
add
fdivrl
mov
pop
push
shlb
bound
arpl
dec
insb
mov
ja
xchg
loope
cmc
ss
insb
in
insl
insb
xchg
adc
mov
sub
add
jns
gs
cwtl
dec
orl
ss
scas
push
ret
push
sub
or
mov
lea
add
add
pop
outsl
test
add
leave
add
mov
pop
jne
shrl
rolb
inc
pop
mov
add
out
negl
frstor
adc
jl
xchg
xchg
test
add
mov
mov
pushl
inc
push
cmpsb
xor
bound
pop
shll
jmp
je
lock
cli
outsb
mov
pop
fistpl
pop
fcomps
jno
add
movsl
add
sbb
mov
daa
mov
aad
mov
mov
add
add
leave
add
repz
mov
sbb
add
add
xor
test
pusha
mov
sub
push
cmpsb
push
or
cmp
add
lret
sahf
pop
xlat
add
push
daa
push
cmpsb
adc
shrl
mov
fistpll
xchg
imul
cmpb
mov
dec
push
add
stos
jecxz
lret
mov
add
adc
dec
fdivs
inc
sbb
add
mov
leave
add
imul
sub
add
jne
popa
imul
push
rol
or
iret
xchg
jno
adc
mov
sbb
add
xor
or
xor
add
addr16
popa
dec
out
movsl
test
outsl
add
add
insb
dec
sbb
add
dec
or
int
lds
or
xchg
cs
lret
dec
repnz
nop
daa
jnp
dec
fldl
ret
mov
xchg
out
adc
call
test
mov
aas
movl
mov
dec
cld
mov
into
pop
ljmp
test
shlb
rep
sbb
pop
push
push
sbb
fucomp
fnstenv
rcll
out
mov
aam
flds
add
adc
inc
mov
push
bnd
push
pop
ret
into
add
or
ljmp
cmp
mov
add
movsb
mov
xor
inc
sub
fwait
pop
add
clc
mov
push
mov
dec
push
add
add
push
xchg
add
pop
mov
xchg
repnz
mov
mov
push
add
test
jae
add
push
aam
add
cmpsb
pop
pop
inc
in
mov
rcll
add
add
push
imul
cmp
mov
data16
cltd
add
mov
outsl
xlat
ror
mov
cmc
inc
xor
add
xlat
dec
or
sbb
mov
lods
add
xchg
insl
xchg
add
add
loope
xor
mov
add
call
icebp
cmp
sbb
and
jae
mov
add
addl
stos
fidivl
sbb
repz
xchg
pop
xchg
add
imul
call
xchg
inc
sbb
mov
jo
jno
popa
fsubrs
or
rolb
add
lret
loopne
sub
dec
inc
shll
mov
pop
popa
jne
jmp
int
movsl
ds
aaa
insl
rclb
shrb
in
test
ret
xchg
stos
cmp
movb
add
js
xchg
mov
lret
in
add
mulb
mov
and
add
imul
ljmp
pop
ljmp
mov
cmpsb
pop
add
lret
iretw
test
aad
inc
add
scas
inc
fiaddl
adc
add
xlat
jmp
mov
cli
inc
je
sahf
cs
pop
icebp
aad
js
push
push
dec
jmp
jle
or
add
std
jle
lods
and
add
movsb
mov
add
push
fs
add
loope
ficomps
sub
scas
sub
dec
push
clc
outsl
rolb
mov
adc
add
outsl
fwait
xchg
data16
cmp
or
and
cmpsl
dec
or
aad
add
outsb
daa
cmp
mov
ljmp
add
add
xchg
inc
push
sub
movsb
stc
mov
fnsave
test
movsb
movsb
xor
add
ret
xor
mov
mov
andb
add
mov
xor
xchg
outsl
adc
cmp
imul
dec
loope
jns
cs
movsl
daa
add
ret
xchg
call
pop
jge
add
push
andl
and
push
xchg
xchg
je
lahf
shll
out
loope
daa
mov
add
pop
adc
out
add
add
mov
adc
and
add
cmp
jne
adcl
add
adc
push
push
xchg
add
jmp
jno
in
add
mov
hlt
add
sub
cli
enter
lock
addr16
xlat
adc
mov
test
fildll
add
add
outsb
add
add
sbb
xchg
lcall
mov
push
or
clc
ret
popf
es
lahf
fldl
adc
cmp
add
mov
add
jp
and
sub
dec
repnz
or
cmp
inc
jl
or
in
outsl
pop
mov
add
mov
lds
adc
imul
jge
add
in
nop
inc
push
es
mov
rolb
lahf
cld
xchg
in
pop
idivb
pushf
or
aaa
add
cmc
ficomps
add
aam
add
clc
repnz
mov
sub
sbb
push
add
push
data16
add
jmp
iret
lret
mov
mov
mov
cmpsb
call
push
or
push
aad
cmpsb
popf
out
and
pop
pop
fcomps
jbe
mov
out
sub
rcrb
dec
dec
add
add
mov
mov
add
out
out
mov
add
push
cmp
add
add
cmp
in
aam
jae
or
sbb
fists
mov
push
int3
test
lahf
pusha
add
add
cmp
lods
xchg
ret
mov
push
and
xor
dec
mov
mov
dec
leave
repz
das
mov
add
cltd
out
les
iret
add
push
pop
add
pushf
test
push
add
push
pop
dec
les
inc
test
test
in
mov
inc
lea
xor
mov
inc
inc
addr16
or
push
icebp
add
fimuls
aad
sbb
xchg
ror
inc
dec
sub
es
cmpsl
or
out
push
pop
inc
jb
adc
cmpsl
mov
adc
popa
cmp
incb
pusha
ficoms
add
add
imul
push
sub
out
loop
add
and
cmp
jns
dec
dec
add
in
aam
push
sbb
aad
adc
scas
sub
pushf
ja
jge
jle
or
and
lods
mov
xor
add
out
cmpsl
add
mov
outsl
sar
out
or
les
jp
push
push
push
jb
push
out
insb
jo
nop
loope
dec
mov
pop
mov
add
je
clc
popf
add
loopne
pop
call
inc
dec
stc
pop
mov
xchg
mov
sbb
out
pusha
rorl
mov
enter
xchg
or
push
cli
es
in
add
mov
adc
add
push
dec
add
bound
pop
scas
dec
lea
leave
mov
add
add
das
mov
dec
nop
pop
loope
pop
pusha
mov
bnd
xchg
pop
pop
out
jmp
out
cli
or
lret
add
add
fdivrl
sub
pop
mov
xor
mov
fsts
push
inc
movsb
cli
mov
aad
pop
addb
aam
in
cmp
and
add
movsb
jo
or
mov
roll
inc
push
fwait
and
es
adc
xchg
xchg
xor
push
inc
pop
and
inc
add
mov
hlt
xchg
push
stc
mov
dec
ja
faddl
jp
xchg
add
hlt
ljmp
add
and
and
data16
add
fiaddl
push
or
jns
pop
int
ret
add
push
push
nop
sahf
flds
aaa
add
in
cmp
push
adc
jae
push
loope
cmp
dec
push
flds
add
repnz
ftst
leave
cwtl
cmp
scas
ds
add
dec
mov
and
dec
pop
jno
int3
jecxz
in
add
cs
jge
std
ja
fisttpl
repnz
int3
cmp
add
add
add
and
pop
add
mov
cli
movsl
xor
mov
hlt
and
add
add
incl
fwait
mov
loope
xchg
pop
sbb
data16
jmp
add
xchg
add
sub
jecxz
cwtl
sub
add
fdivs
cmc
mov
mov
dec
test
popa
stos
pop
push
popa
push
jno
cmpb
inc
pushf
add
fisubs
xchg
add
subl
sub
add
lock
xchg
add
daa
pop
jmp
or
mov
fbld
mov
iret
inc
and
or
popf
mov
mov
repnz
outsl
rorl
add
pop
sub
in
and
push
addr16
out
push
leave
gs
pop
push
add
jo
mov
xor
add
sub
and
rcrb
adc
insl
and
dec
jb
jns
push
add
add
jge
dec
mov
lahf
jle
ret
imul
loopne
add
inc
mov
mov
js
dec
lods
lock
fiadds
aam
stc
push
mov
adc
insb
mov
mov
cltd
sbb
pop
call
mov
inc
cwtl
add
les
lcall
add
xor
inc
push
mov
add
and
lret
outsb
cs
aaa
pop
es
or
inc
add
and
push
int
stc
xor
mov
repnz
aad
pop
push
imul
jecxz
xchg
nop
push
mov
and
dec
sbb
int
jae
arpl
sar
std
push
jo
push
sub
xchg
int3
add
gs
push
addb
inc
add
jne
mov
add
add
or
std
flds
arpl
insl
pop
imul
inc
dec
jae
add
xor
shlb
jg
negl
in
xor
aas
push
xor
loop
xor
push
xor
dec
leave
sub
test
inc
push
jl
push
mov
movsl
jecxz
add
pushf
gs
ret
add
jecxz
mov
orl
add
add
fmuls
pusha
inc
pop
inc
cmpb
shrl
add
out
xor
aas
add
jae
add
jle
adcl
test
add
xor
lcall
mov
xchg
add
test
xchg
clc
and
add
add
mov
addr16
mov
xchg
add
add
in
movsb
fdivrp
pmaxub
mov
loope
add
push
cld
adc
add
addr16
mov
add
inc
xlat
out
push
test
inc
idiv
je
lds
pop
lea
insb
add
into
jecxz
add
data16
movsl
sahf
mov
add
into
dec
lods
sarl
lahf
jbe
cli
push
loopne
mov
sbb
lds
pop
push
pop
ljmp
cli
cwtl
movsb
inc
subb
push
adc
clc
dec
and
push
jnp
push
popa
adc
xchg
fists
mov
fcmovnu
mov
add
add
inc
data16
ss
add
rcll
dec
inc
push
add
mov
mov
add
stos
pop
dec
sub
iret
inc
add
add
outsb
call
and
push
and
or
or
dec
fcoml
push
dec
lcall
loopne
and
add
pop
idivb
and
add
mov
add
mov
movb
cmpsl
mov
dec
mov
inc
add
adc
mov
cmp
pop
inc
sysret
jnp
xor
repz
sahf
loopne
cmp
adc
mov
lret
inc
loope
iret
fildl
ret
stos
fisubrl
jp
pop
das
xchg
xchg
mov
push
or
and
sbb
repnz
or
in
punpckhdq
ror
js
scas
jg
data16
dec
xchg
out
jp
or
outsl
dec
inc
mov
and
lahf
lcall
sub
pusha
pop
add
pop
aam
sbb
fistpll
cltd
cwtl
mov
inc
lds
fiadds
out
mov
cs
jno
into
sar
addr16
testl
add
testb
imull
iret
add
out
mov
mov
icebp
lods
jmp
add
xchg
xor
mov
add
or
xor
fsubrl
add
dec
jecxz
insb
mov
in
sbb
dec
bound
add
aas
add
gs
popf
xor
pop
jae
jnp
aad
lds
adc
push
loop
inc
push
add
sub
addb
and
roll
adc
cltd
add
dec
repz
mov
rorb
decb
shll
add
imul
cmp
stos
add
jnp
jnp
add
out
stos
add
cltd
mov
push
test
in
js
popf
add
testb
pop
add
jbe
mov
sub
lods
mov
jle
mov
cmp
push
lea
ja
push
pusha
mov
mov
rcrb
mov
add
cltd
mov
add
add
pushf
cmp
mov
xlat
jl
push
push
mov
inc
mov
pop
jno
and
jnp
pop
add
insb
add
sub
lods
and
out
jg
pop
pop
fstpt
push
or
push
push
push
push
xchg
out
add
push
lahf
pop
int
ja
fdivrl
fidivrl
loope
or
add
dec
incl
andl
jbe
roll
mov
sbb
add
mov
sbb
jo
ds
sub
mov
mov
or
add
subb
mov
push
mov
mov
cmp
add
add
adc
add
add
add
dec
sbb
jo
js
stos
addl
fstpt
adc
inc
mov
push
sti
add
mov
push
test
fsubl
mov
hlt
scas
rcrb
jg
jb
mov
ficoms
jae
jnp
mov
fdivrl
mov
or
cwtl
or
and
mov
mov
dec
loop
add
mov
sub
outsl
ret
mov
sti
pop
pop
xchg
xor
sbb
mov
fstpt
or
jge
lods
xor
sub
pop
cmp
jp
fwait
lods
add
add
lcall
xchg
mov
push
lock
rolb
xor
and
xchg
pop
jecxz
jns
jl
test
or
sub
out
add
add
add
repz
and
inc
push
add
jae
imul
push
mov
lahf
lahf
sbb
into
in
movsb
sbb
dec
mov
enter
push
test
push
inc
jo
cmpsl
outsl
shll
add
lret
into
add
or
test
cmp
and
fnstcw
sub
out
mov
xlat
jg
or
arpl
stc
sarl
fsubr
cmp
inc
sbb
shl
ljmp
jp
out
pop
mov
add
add
int3
aaa
sub
ljmp
adcl
scas
add
sahf
add
out
bound
roll
iret
mov
fisttpl
pop
add
loopne
push
mov
and
dec
dec
aad
add
lock
mov
je
out
inc
icebp
pushf
mov
cmp
into
psubd
add
adc
sahf
stc
in
add
add
lahf
adc
xor
jmp
stos
or
jmp
in
xchg
cmp
add
loopne
jns
popl
stos
xchg
cmpb
stos
mov
mov
push
jb,pt
mov
test
add
ret
mov
dec
aad
add
out
mov
cmp
fldt
paddw
lods
mov
jl
jle
test
subl
adc
inc
movsl
imul
ss
xor
scas
add
loopne
add
mov
jb
sarl
add
add
cmp
add
imul
lahf
lock
dec
xor
scas
rol
ljmp
sahf
mov
pop
jae
cmc
or
cmp
and
aam
sub
lods
sub
add
loopne
add
or
mov
out
aad
lods
idiv
pop
sbb
aaa
sub
xchg
add
jmp
add
mov
fldcw
mov
cltd
pop
or
or
push
int
adc
inc
aas
cmp
add
add
enter
nop
add
sbb
rorb
push
cmp
xor
add
clc
lods
xor
adc
inc
lahf
add
mov
movsb
lods
add
jne
enter
fidivrl
ljmp
mov
hlt
mov
aas
dec
inc
cli
jle
add
add
std
aad
sub
and
test
mov
sbb
push
ss
in
add
std
mov
cmp
mov
mov
dec
popa
xor
test
imul
add
out
cmc
js
sbb
andb
fsubrl
ds
sub
shrl
sub
cmc
aam
repnz
pop
add
cmpsb
mov
adc
rorb
sbb
pusha
cmc
add
imul
cmc
outsl
and
iret
mov
jmp
gs
movsb
mov
cmpsl
les
sti
add
loop
in
pop
test
insl
dec
push
push
popf
mov
pop
jae
rorl
lock
xor
stos
cmpsb
or
add
xchg
mov
stos
cli
cmp
push
push
insb
dec
mov
inc
roll
enter
cmp
test
push
adc
sbb
sbb
or
popa
sarl
les
sar
xchg
jne
adc
hlt
loope
add
inc
cld
push
add
fs
adc
push
cmpl
outsl
inc
sbb
pop
sbb
or
lock
mov
and
pop
stos
mov
lea
push
test
scas
push
lcall
add
jne
mov
movsl
ljmp
jmp
push
push
add
ljmp
xlat
cli
push
adc
add
jns
and
dec
add
sub
pop
clc
sub
lret
cwtl
lahf
sub
cmc
shlb
xor
jno
xchg
add
mov
inc
add
fldt
test
cmpsl
jbe
inc
out
ss
jbe
test
push
gs
hlt
mov
inc
push
pop
std
bound
sbb
iret
add
push
xchg
fwait
adc
fcoms
mov
add
adc
loopne
sbb
or
xchg
sbb
in
mov
rcrl
loop
jecxz
enter
es
ret
xor
hlt
jg
mov
xor
fmull
mov
xlat
xchg
dec
xor
lret
pop
adc
inc
jmp
add
popf
stos
jne
and
pop
xchg
xchg
loop
lds
jno
movsb
loop
movsl
call
gs
faddp
dec
imul
and
les
and
fwait
addl
lret
loope
xor
mov
jg
fucomi
mov
add
xchg
xor
add
xchg
adc
int
dec
lock
sti
ja
pop
pop
scas
push
pop
mov
adc
cld
push
xor
push
cli
add
jg
push
sbb
adc
or
mov
jecxz
das
mov
shr
and
dec
xor
cmp
clc
xlat
faddl
adc
pop
movl
and
fsts
sbbl
inc
fs
fs
sbb
xchg
lds
arpl
sbb
out
mov
add
or
pop
aaa
ret
mov
in
movl
add
lret
insl
movsl
aam
fiaddl
rcll
hlt
mov
xor
and
adc
int
push
jmp
mov
int3
jns
dec
lret
add
jae
mov
lret
aaa
cmp
js
add
sbb
aam
xor
add
jp
cmp
mov
or
in
adc
push
adc
adc
or
outsl
sub
test
loop
nop
outsb
mov
pop
add
inc
dec
jno
jno
mov
sub
xchg
popf
in
add
add
add
add
inc
test
jno
jl
pushf
mov
mov
pusha
cmp
roll
mov
addb
bnd
clc
mov
lea
in
or
xchg
cwtl
push
mov
push
add
mov
es
addb
test
mov
add
mov
dec
push
jecxz
sarl
loop
xor
daa
xchg
push
ret
je
push
mov
and
cmp
adc
sbb
jnp
stos
mov
mov
add
fucomip
std
push
lahf
daa
inc
in
mov
das
sub
dec
add
mov
jmp
sbb
das
out
in
mov
and
add
xchg
enter
call
adc
notl
leave
sbb
add
pushf
pop
and
jecxz
cs
shlb
push
testb
mov
mov
inc
in
shlb
or
pushl
lahf
sub
dec
mov
fildll
mov
in
clc
dec
stc
add
into
add
adc
test
es
lds
icebp
adc
push
push
add
iret
push
scas
add
push
jo
sbb
mov
and
add
xchg
mov
pop
mov
shl
outsl
sbb
jle
cmp
lods
icebp
xor
mov
add
mov
cmp
rcrb
pop
or
fimuls
or
add
push
pop
or
dec
mov
inc
cwtl
insl
mov
mov
add
pop
add
pop
cmpsb
mov
sbb
mov
test
mov
test
and
sub
cmc
flds
arpl
push
pop
hlt
test
test
push
sub
cmc
push
mov
pop
mov
test
outsl
cmp
cltd
pop
out
cltd
shlb
xchg
add
lret
add
inc
scas
popa
mov
push
jno
pop
add
fmuls
xchg
xchg
cmc
sbb
push
push
sub
push
adc
sub
mov
iret
or
int3
lock
pop
pop
sub
add
xchg
dec
pusha
mov
stos
bound
dec
pusha
pop
add
dec
cmp
or
ljmp
add
sbb
in
add
stc
popf
mov
lret
dec
jnp
push
stos
pop
pushf
push
mov
pop
cmpsb
pop
scas
sub
insb
adc
add
mov
or
in
popa
mov
ret
cmpsl
xchg
xchg
adc
inc
fstps
test
fwait
add
lods
xor
or
ret
add
iret
add
mov
add
and
push
mov
push
pop
jmp
add
popa
add
adc
pop
add
lods
mov
jno
mov
fildl
push
cmp
xbegin
dec
das
jl
push
sar
call
add
out
negl
adc
scas
sbb
push
add
cwtl
scas
cmp
add
mov
inc
push
hlt
sbbb
cli
mov
xchg
lock
adc
push
addr16
mov
adc
or
or
daa
dec
js
xchg
xchg
out
dec
or
pushf
nop
push
push
imul
in
data16
xor
jo
pop
sbb
lcall
test
cld
adc
push
xchg
ja
xchg
inc
cs
incb
cmp
or
add
cli
mov
out
addb
add
test
out
add
dec
pop
hlt
push
cli
sbb
xor
push
sub
and
movb
or
mov
add
push
add
and
repnz
lock
add
std
add
add
add
jmp
scas
in
push
add
add
xchg
add
int
jg
inc
or
sub
in
stc
push
std
and
sti
pop
add
or
mov
roll
sti
fnop
lds
inc
pop
xchg
in
xor
or
push
mov
jb
inc
loop
repnz
xor
lock
xchg
popf
imul
mov
push
inc
outsb
call
inc
pop
sbb
add
mov
xor
ror
dec
push
jns
daa
add
inc
sbb
sub
and
cmp
add
push
shrb
dec
add
sub
add
mov
add
lahf
subl
mov
lcall
jae
enter
loop
mov
movsb
cltd
pushf
jmp
roll
pop
cmpsl
add
sarl
jmp
sub
xchg
cmpsb
push
faddl
inc
sub
xchg
sub
sbb
and
mov
add
or
arpl
mov
shrb
mov
or
sub
int
incl
ljmp
xchg
enter
or
pop
dec
add
roll
xchg
stc
imul
les
jmp
add
xor
stos
aas
push
lods
pop
add
test
and
jp
loop
iret
and
test
mov
add
mov
push
add
clc
call
jo
xor
sbb
repnz
shrl
pop
push
and
add
dec
inc
mov
das
pusha
leave
sub
movsl
loop
fucom
xchg
imul
leave
stc
movsl
push
out
inc
add
dec
inc
add
add
insl
sti
pop
test
jae
pop
sbb
lahf
mov
add
pushf
or
std
add
jge
add
jo
push
stc
outsb
jle
adc
mov
testb
add
pusha
sbb
sub
jle
icebp
mov
into
mov
push
mov
sub
add
out
in
and
fwait
outsl
and
shll
cwtl
mov
xor
ss
dec
add
pop
and
add
add
in
cmpsb
push
bound
add
out
data16
dec
adc
lock
sbb
js
mov
lea
jo
adc
mov
sub
mov
xor
rcrl
cmpsl
mov
sub
add
add
jnp
mov
add
fldl
rclb
bound
inc
das
dec
add
cs
pop
push
add
mov
mov
aaa
add
dec
xor
mov
add
dec
test
fldl
add
inc
add
cmp
xor
je
add
fadds
test
add
pop
mov
add
xor
lret
xchg
add
adc
orps
test
leave
out
popl
imul
insl
jne
sbb
inc
add
arpl
pop
dec
pop
fisubrl
ljmp
mov
in
cltd
sahf
mov
sbb
les
fwait
dec
cmp
add
mov
mov
add
pop
pusha
push
mov
and
or
adc
or
cmc
fwait
mov
and
mov
mov
and
mov
lock
push
push
adc
rolb
cmp
add
cmpsb
outsb
xor
pop
das
fadd
testb
ds
daa
scas
add
rolb
cmp
dec
dec
lea
clc
ffree
dec
popa
outsl
cltd
jne
movsb
jmp
jmp
sub
pop
repz
add
add
push
ljmp
inc
out
add
add
xchg
and
inc
jmp
add
add
lret
aam
push
dec
loope
inc
xchg
mov
cmp
add
xchg
push
inc
add
mov
or
sbb
aaa
rcr
jns
lret
imul
mov
loopne
in
add
xor
les
add
stos
cmp
add
pop
out
add
add
mov
movsb
or
mov
add
pop
xor
sbb
leave
jle
sbb
push
and
add
fidivs
and
adcb
mov
sub
xor
jle
sbb
jbe
test
lods
addl
add
jle
add
movsl
sub
mov
mov
mov
mov
xor
add
pop
in
push
mov
out
add
loopne
add
add
mov
add
mov
xor
stc
pop
adc
sub
sub
add
pop
dec
mov
inc
add
mov
iret
dec
add
dec
out
sub
mov
mov
add
out
add
mov
stos
push
fcmovnu
stc
lock
jl
fstl
cmpsl
fsts
xchg
add
push
add
call
mov
rorb
js
jne
in
stos
cmp
std
popf
adc
sub
lock
add
add
jne
mov
cs
add
enter
xchg
pop
repz
jne
out
std
sub
test
add
in
mov
inc
cwtl
mov
cmc
jmp
add
mov
cmovnp
push
xor
mov
xchg
sbb
arpl
pshufw
add
add
xor
add
xchg
shr
orl
lods
in
pop
rclb
adc
add
sarl
cli
jne
or
inc
inc
ret
and
shlb
xor
inc
faddl
sub
inc
xor
cmp
mov
add
cmp
jns
mov
fidivrl
rorl
lods
and
js
add
stos
rcll
sub
std
inc
adc
pop
push
xlat
add
dec
sub
mov
add
add
jno
add
mov
inc
outsb
fmull
push
fcmovnb
fs
scas
cwtl
jbe
int3
cmp
add
icebp
cmp
xchg
mov
add
loopne
jge
add
push
push
mov
mov
dec
mov
ss
sbb
xor
mov
sub
jb
ret
sbb
xchg
add
xor
push
mov
lods
sub
and
int3
sahf
cmc
testb
pop
je
es
andb
icebp
add
movsl
scas
pop
add
inc
popf
mov
cmp
add
test
add
xchg
std
adc
in
sti
sarl
mov
mov
dec
add
stc
iret
or
mov
push
xchg
xchg
xor
fisubrl
mov
sahf
loop
xor
mov
mov
sub
dec
popf
or
push
les
push
int3
cmpsb
mov
test
push
mov
fs
icebp
push
decl
cmp
popl
push
cmc
insb
xchg
addl
add
ror
add
ds
addb
pop
popa
mov
push
and
ja
fisubrl
push
sub
push
cmp
inc
jb
cld
test
xor
in
cmp
addb
jns
fildl
ror
and
pop
add
fs
aad
and
repnz
std
es
mov
cmp
sub
mov
jo
sub
lahf
jne
adc
sti
dec
outsb
sbb
hlt
adc
lret
ret
mov
stc
mov
xchg
dec
jo
xchg
js
adc
out
add
es
arpl
add
imul
lods
dec
mov
hlt
sub
dec
imul
push
ljmp
sbb
mov
rolb
add
ds
lods
imulb
lods
hlt
xchg
push
rcrl
lahf
out
imul
add
jge
inc
fstpt
mov
mull
jmp
pop
inc
test
inc
add
nop
xor
add
add
push
nop
and
aam
mov
clts
dec
or
xchg
iret
xorb
add
jge
leave
outsl
push
push
add
xor
lahf
add
and
mov
scas
subb
add
dec
add
stos
cwtl
xchg
mov
add
add
mov
jmp
mov
ret
mov
push
sbb
jl
insb
repz
sub
jmp
mov
mov
sub
xor
testl
adc
into
test
clc
ja
xor
int3
sbb
mov
add
andl
in
rol
sbb
out
and
add
add
cwtl
cmpsl
into
cmp
add
xor
adc
ds
push
inc
pop
add
or
sbb
stos
dec
ret
test
add
ret
push
sbb
jns
mov
push
add
outsb
mov
xchg
jg
jg
scas
adc
mov
pop
add
add
add
push
repz
lock
aad
jg
add
adc
dec
das
js
sub
push
mov
scas
gs
data16
push
test
mov
push
pop
add
stc
roll
cld
or
sti
mov
pushf
cmc
addr16
mov
add
sbb
jl
xchg
xor
mov
add
mov
cmp
mov
mov
push
mov
and
sbb
mov
mov
mov
and
sbb
mov
int
popa
push
or
xor
push
jae
out
dec
mov
fisttps
dec
jge
add
inc
mov
jle
add
lret
or
iret
movsb
adc
gs
pop
xchg
dec
fldcw
pusha
lahf
push
sahf
and
adc
mov
clc
and
repnz
test
dec
stos
lret
add
call
sub
add
in
inc
adc
pop
add
push
add
dec
lret
in
and
test
pop
push
add
mov
add
jmp
sbb
push
stc
fdivl
mov
sub
nop
or
cmpsb
out
ret
jo
add
push
je
cmp
push
call
ljmp
xchg
jecxz
fmulp
fnstenv
rclb
xor
sbb
sub
add
xor
outsb
add
fcoml
popf
add
xor
lcall
stos
add
sub
mov
jmp
fcompp
add
and
sahf
push
dec
div
cltd
push
push
mov
aas
xor
inc
jno
testb
pop
dec
adc
add
push
scas
add
lds
xchg
pushf
add
push
ljmp
mov
aad
add
pop
ret
pop
out
pop
in
add
ret
push
lret
jb
and
and
shlb
add
repz
shlb
dec
xchg
or
mov
gs
add
lret
nop
dec
sub
jl
or
fidivl
mov
or
cmp
mov
add
xchg
lcall
cmp
xor
mov
dec
loop
add
push
in
xor
mov
add
sbb
imul
xchg
shr
stos
je
in
or
mov
push
mov
push
add
arpl
aaa
in
mov
add
icebp
and
sbb
scas
push
jb
aaa
jecxz
xchg
inc
subb
mov
add
shll
mov
add
nop
push
mov
mov
add
sub
mov
movsb
xchg
sbb
add
sub
sbb
mov
movsl
add
pop
or
and
add
mov
leave
out
cld
addl
popa
mov
in
pop
add
add
test
adc
sbb
shrb
xchg
jne
add
sub
jnp
jo
jmp
sbb
fildl
sbb
outsb
les
jnp
sti
add
pop
int3
movsl
mov
pop
fsub
cmp
push
fcmovb
bound
std
add
addb
movsb
fs
or
xor
fbstp
mov
enter
arpl
add
lods
and
dec
add
add
sbb
push
repnz
add
lahf
aas
sbb
jecxz
mov
nop
popl
mov
sbb
ret
lret
add
enter
add
xchg
and
xlat
icebp
add
cmpsb
add
xchg
pop
add
jl
add
xchg
jmp
lods
dec
aaa
xchg
aas
dec
cmpsb
inc
repnz
fdivp
aam
loop
jb
sbb
mov
and
sbb
scas
jmp
pop
inc
movsb
lret
cmp
sahf
das
mov
pop
rorb
add
cld
outsb
pusha
add
arpl
xchg
mov
imull
sbb
pop
loope
leave
add
inc
clc
jle
icebp
push
sub
xor
insb
daa
jns
daa
lahf
roll
cmpsb
xor
aam
popf
add
inc
arpl
fimuls
cwtl
adc
das
lret
leave
mov
cmpsl
scas
add
imul
iret
dec
xor
js
xchg
and
dec
add
add
push
or
adc
lds
testl
sub
add
loope
sbb
jno
add
lds
push
arpl
inc
je
and
pop
lods
sbb
and
repz
xchg
aaa
fcomi
add
popl
xchg
xchg
test
icebp
pop
mov
jno
stos
sub
sbb
cmp
mov
mov
or
dec
jb
mov
add
dec
or
pop
or
in
lahf
cmp
add
test
add
popf
mov
pop
sub
loope
or
cld
in
mov
dec
jp
inc
pop
and
sub
imul
fcmovbe
pop
fdivr
add
test
push
mov
test
xor
aam
lock
sbb
les
ja
add
into
adc
add
faddl
cmp
fcomps
cli
ja
mov
in
add
imul
dec
add
sbb
call
or
sbb
iret
bound
cmc
or
and
add
addl
hlt
add
jge
add
add
add
sbb
fldl
jae
xchg
shll
sbb
jb
lret
add
or
inc
fldenv
pop
out
outsb
jno
dec
mov
xchg
insb
add
mov
inc
sbb
pop
mov
push
add
test
add
loopne
lds
cmp
adc
or
mov
xor
adc
add
cmp
pop
jno
mov
sahf
stos
movd
in
add
dec
adc
rcrb
iret
mov
sub
push
lock
fimuls
add
push
add
repz
out
sub
ljmp
pop
imul
add
jbe
add
mov
sub
fldenv
data16
push
jge
cmp
add
sbb
mov
mov
push
add
loop
xor
sub
sti
adc
xchg
sub
dec
shr
or
and
lcall
add
and
add
xor
mov
xorb
call
pusha
fsubr
xor
add
cmc
sub
lret
xor
jle
jb
sbb
js
mov
int
sbb
mov
fsubrl
inc
sahf
mov
fwait
pop
and
imull
cmc
dec
pop
sbb
outsb
into
pusha
push
and
add
jo
add
mov
test
cmp
fadds
scas
add
add
cli
add
jp
mov
add
jbe
outsl
add
outsb
cmc
fmull
push
mov
pop
lods
cltd
add
jno
push
std
mov
es
inc
or
shlb
cmp
cmp
ljmp
adc
cwtl
push
lahf
mov
stos
sub
fldcw
jno
mov
or
adc
adc
mov
sub
mov
sbb
bound
mov
add
mov
leave
imul
in
sub
xor
and
adc
add
mov
cmpsl
jno
add
sti
and
fdivrl
push
add
in
fisubl
movsb
mov
mov
lock
add
add
dec
add
or
cmp
in
into
mov
mov
pop
mov
insb
sub
dec
fcompl
outsl
or
mov
jns
or
hlt
rcrb
add
mov
mov
data16
enter
negl
jno
cmp
dec
push
jae
add
push
rorb
or
and
xchg
and
xlat
das
add
in
lret
mov
xor
add
mov
out
shll
cmp
xchg
in
jp
xchg
mov
rcll
xor
shll
adc
mov
repnz
or
xchg
add
jg
lods
icebp
jae
xchg
cld
sbb
add
xchg
jbe
fiaddl
scas
mov
movsl
addl
or
push
js
xchg
add
jl
pusha
xchg
xor
enter
add
mov
int3
dec
test
int3
inc
inc
mov
fmul
add
shlb
bound
add
xchg
test
fildl
je
cwtl
xchg
jne
mov
pop
mov
push
pushf
fnstsw
inc
add
clc
nop
sbb
mov
add
mov
sbb
cmp
ss
fwait
pusha
lret
sahf
or
cmp
fs
shrb
mov
cmp
xchg
loop
icebp
add
out
lds
insb
mov
add
pop
lods
and
add
testb
lds
add
mov
xchg
add
test
add
iret
lods
mov
ret
daa
jl
dec
xchg
mov
add
cs
cmp
cmp
xor
lret
push
std
jne
adc
add
jb
pop
jp
add
add
mov
push
subb
pop
push
stc
xor
mov
ljmp
mov
out
stos
push
mov
add
clc
lock
mov
cmp
scas
idivl
sbb
adc
sahf
arpl
mov
jmp
adc
pop
adc
adc
sub
sbb
cli
add
sbb
pusha
mov
loope
movsb
jo
xchg
inc
adc
lret
fadd
mov
add
pop
pop
push
ds
adc
push
test
pop
sub
ficomps
xor
cmp
sbb
shll
cmp
into
push
add
mov
pop
int
xchg
or
das
pop
mov
mov
data16
mov
scas
or
sbb
outsb
dec
push
dec
dec
jl
hlt
add
or
add
int
jne
jmp
mov
pop
test
add
rolb
sbb
ja
lcall
mov
sbb
lock
sbbb
in
jae
data16
dec
xchg
mov
jae
push
out
sbb
pop
dec
mov
int
aam
jp
sti
mov
in
data16
push
je
loop
loope
add
in
sbb
adc
xchg
mov
add
push
scas
mov
add
inc
inc
in
mov
mov
aaa
xchg
add
or
dec
add
daa
hlt
test
imul
or
mov
pushl
add
adc
inc
xchg
push
icebp
add
push
xor
pop
lock
push
dec
fwait
add
push
pop
movb
cwtl
cwtl
and
add
xchg
les
push
sub
movsb
push
adc
jno
mov
and
cmc
jbe
sbb
cmc
out
jae
test
mov
jle
addl
add
cmpb
xchg
dec
add
pop
cltd
sbb
loop
movsb
push
mov
sbb
enter
stc
shll
rolb
pop
xor
stos
and
les
fs
and
je
in
add
pop
sti
cmp
incb
inc
xchg
xchg
aas
mov
push
in
inc
mov
xor
fs
out
sub
movsb
lcall
cmp
cs
jg
stc
repz
add
inc
mov
out
dec
add
add
aas
push
push
rcr
lret
pop
mov
pand
int
jl
bound
fbstp
sahf
imul
mov
sarl
pushf
mov
or
imul
jmp
sub
xchg
lods
pop
mov
xor
xlat
stc
add
out
ret
cmp
mov
inc
add
jns
rcrb
out
movl
push
jl
sub
add
add
xor
stos
add
ss
repz
sbb
movsl
add
xchg
xor
or
xchg
cmc
xor
outsl
push
or
pop
add
sbb
sbb
mov
loope
js
hlt
push
jnp
sub
add
mov
std
dec
jb
xlat
pop
sub
sub
push
and
mov
or
push
lods
xchg
int
outsl
shrl
add
jne
add
sbb
or
aas
jle
sub
aaa
rorb
dec
push
ljmp
cld
sbb
inc
test
cltd
mov
mov
sahf
mov
sub
int3
add
ss
cltd
add
add
inc
fisubrs
test
or
sahf
dec
lock
mov
add
std
xor
push
xchg
jne
jg
ret
cmp
add
mov
and
pop
daa
and
ja
and
sarl
cld
jns
add
inc
insb
dec
add
mov
jecxz
cmpsb
add
jg
outsl
sarb
xchg
mov
xor
add
jb
dec
add
and
jae
fldenv
add
cs
ljmp
test
imul
or
xor
xor
jmp
mov
jne
pushl
bound
add
imul
jns
mov
repnz
fs
jp
adc
fcmovu
add
addb
lret
add
stos
xchg
adc
add
and
jge
push
add
adc
sbb
xor
es
jp
cwtl
add
in
dec
add
lds
test
insb
fs
add
adcl
psrld
or
lret
in
add
popf
push
cmp
mov
out
add
sbb
xor
xchg
ljmp
cmp
or
cmp
hlt
ss
or
lret
scas
test
dec
iret
out
lahf
clc
add
add
add
addb
dec
das
add
inc
pop
je
sub
iret
adc
loope
stos
sub
or
in
dec
or
mov
dec
dec
arpl
adc
dec
bound
xchg
push
and
inc
clc
jl
mov
pop
and
sbb
roll
mov
lret
or
mov
fsubrs
fisubs
adc
jl
fadd
fidivs
add
adc
jae
outsl
call
xchg
xchg
or
cmp
mov
xchg
das
mov
or
mov
or
and
jle
hlt
cmp
outsb
mov
fistpll
aas
sbb
dec
outsb
mov
daa
movsl
stos
and
cmp
mov
inc
add
imul
popf
stos
add
movsb
jmp
out
add
mov
dec
sahf
sbb
mov
mov
push
lods
adc
out
inc
test
pop
xchg
xor
shl
or
popf
mov
dec
add
incl
in
cmp
mov
xor
pop
sahf
sub
cmpsb
cwtl
and
ds
add
cmpsl
push
in
sub
ss
push
xlat
leave
push
sbb
xor
pop
or
fdivs
push
mov
add
or
sbb
jno
mov
pop
dec
add
add
and
mov
cmp
dec
and
stos
fidivrl
add
and
cmp
mov
aas
cmp
jg
popa
push
je
mov
dec
sti
and
sbb
sub
adc
xor
lds
cmpb
fldl
push
push
pop
jecxz
cld
std
adc
add
inc
insl
pop
jp
rcrb
in
ret
cmp
sahf
push
xchg
adc
sub
add
test
add
add
add
add
add
es
insb
iret
jmp
sub
es
and
iret
inc
mov
inc
add
dec
add
cmp
repz
subw
ret
ljmp
mov
cmp
and
pop
push
loope
dec
push
push
pop
add
jge
add
iret
or
loop
notb
inc
mov
push
pop
adc
lds
add
mov
in
pop
inc
gs
push
sbb
lock
popl
jo
add
fmuls
lret
imul
and
jbe
jno
fisubs
ss
cs
xlat
mov
add
aaa
int3
add
sahf
popa
rolb
cmp
stos
push
test
insb
add
sbb
add
push
les
imul
pushl
add
add
ljmp
mov
cmpsb
fsubr
cli
add
mov
add
add
dec
add
xchg
out
fdivrs
movsb
xchg
jno
dec
stos
fwait
add
popa
or
and
jns
push
lds
cmp
outsb
add
in
lahf
out
push
mov
add
or
mov
and
cs
incb
dec
mov
lods
cltd
int
movsl
ss
sbb
pushf
out
adc
add
loop
adc
sbb
and
cs
int3
sbb
mov
sub
test
ds
sahf
add
movsl
sbb
xchg
add
sysenter
adc
lea
pop
andb
mov
mov
loopne
cmc
in
scas
xor
decb
bound
cmp
sub
jb
cli
bound
insl
mov
es
addl
sub
in
repz
outsb
insl
add
pop
add
mov
add
call
clc
add
movsb
mov
cmpsb
add
add
jb
mov
fsts
sub
add
fldt
out
mov
call
fiadds
in
iret
add
pop
xchg
in
xor
roll
xor
or
mov
jns
add
and
movsb
pusha
adc
add
js
jb
scas
or
in
testl
push
and
movsb
fldt
push
data16
aaa
mov
in
iret
js
add
fildl
push
jnp
xchg
les
push
adc
outsb
add
mov
pop
cmpsl
jae
push
data16
xchg
jle
lds
ja
add
outsb
adcb
out
mov
add
xorb
out
jno
cmpsb
out
cmp
inc
adc
mov
loop
jns
sbbb
out
dec
push
add
es
in
ss
or
pop
scas
jno
dec
jb
and
dec
push
add
scas
inc
xchg
add
sub
lds
mov
inc
add
adc
jb
mov
icebp
push
adc
out
push
dec
adc
fildl
mov
xchg
or
stos
cmp
rolb
jge,pn
cld
int
push
jne
push
add
rcrl
pop
aaa
push
pop
fiaddl
movsb
mov
push
xchg
dec
addl
xchg
sbb
fucomp
je
clc
xchg
sbb
lods
decb
jl
pushf
xchg
insb
scas
cmp
in
add
lds
inc
add
add
add
xchg
or
cld
scas
xor
push
dec
mov
jg
add
subl
out
add
je
and
mul
stos
add
add
mov
push
data16
sarl
inc
scas
sti
mov
das
ds
jg
inc
test
inc
mov
adc
testb
faddl
sahf
add
push
dec
adc
xchg
cmpsb
xor
jns
mov
add
decl
rcl
sbb
xchg
movsl
call
add
mov
or
add
push
mov
push
orl
add
mov
add
mov
and
lea
sub
ja
inc
jge
shrl
cmpsl
cmp
fs
inc
add
add
pop
xchg
lret
inc
mov
ret
loope
sub
xchg
cmc
cwtl
leave
xchg
push
lds
add
jne
je
push
add
add
lret
push
jb
jns
add
pop
add
in
add
or
push
sbb
xchg
imul
push
test
pop
ret
mov
fs
mov
push
gs
xchg
ret
pushf
push
fwait
and
icebp
dec
loopne
add
jge
mov
xchg
add
jg
aaa
jae
je
imul
mov
ja
cwtl
stos
fisubl
sub
cmp
ja
mov
inc
cli
dec
pop
or
mov
xchg
push
lock
xor
icebp
popa
cltd
jle
loop
pop
mov
pop
mov
adc
shll
pop
and
fsubs
jmp
clc
dec
mov
fdiv
push
clc
mov
daa
shl
add
dec
and
fsubl
jnp
push
mov
ficoml
add
jp
ja
jae
add
out
es
js
cmpsb
adc
add
or
addr16
rclb
insl
ret
loop
aaa
fwait
and
aaa
popf
jno
lods
sub
aam
add
call
out
in
add
push
xlat
mov
loop
pusha
bound
jae
and
push
pop
mov
or
iret
ret
fmulp
daa
rorl
insb
jmp
mov
add
lret
outsl
call
pusha
mov
les
push
addl
dec
ret
mov
loopne
in
aam
adc
stc
lods
adc
mov
rclb
xchg
stc
mov
mov
sarb
cmp
add
fs
aaa
loop
adc
jno
sti
cmp
push
clc
or
in
sub
jmp
dec
jno
mov
cmp
dec
dec
pop
add
mov
loop
add
pop
cmp
inc
xchg
mov
imul
xchg
push
xor
roll
inc
mov
lods
lcall
mov
jg
roll
lcall
mov
inc
mov
verw
cmp
jmp
jno
dec
sbb
lcall
movsl
or
add
rcl
adc
pop
dec
adc
loopne
add
je
mov
dec
scas
dec
lcall
outsl
pop
add
aaa
add
add
push
add
sbbl
add
loop
inc
movsl
sub
or
lret
sti
add
xchg
inc
pop
mov
shlb
sbb
sbb
je
dec
lods
movsb
aaa
fiadds
roll
pop
push
dec
int
cld
lds
cmp
adc
cli
jp
add
push
test
jg
jge
pop
cmpsb
aaa
and
decb
sahf
adc
add
xchg
scas
fwait
pop
ja
call
add
add
jns
out
add
xchg
mov
movsb
test
in
add
and
mov
test
les
ret
dec
xchg
stc
aaa
add
out
ret
shll
push
jge
js
cltd
add
sub
sub
rcr
ret
add
dec
outsl
in
add
adc
add
or
popf
jmp
lret
imul
fldl
fwait
mov
xor
adc
ja
pop
sbb
out
xchg
in
mov
adcl
add
xlat
rcrl
xor
lahf
mov
in
pop
pop
divl
sbb
xchg
jmp
add
imulb
push
sti
nop
test
cmp
imul
sbb
and
hlt
in
test
jbe
cmpsb
push
aad
push
dec
aad
add
sbb
repnz
decl
add
fidivrs
data16
or
mov
nop
xchg
in
mov
add
jb
add
add
sbb
or
add
adc
mov
mov
inc
sub
lahf
movsl
add
int
lcall
cmovae
pop
add
ret
inc
mov
pusha
sbb
fistps
add
sarb
jl
or
mov
pop
sbb
outsl
adc
repnz
xor
push
imul
ret
in
xor
push
add
and
sbb
sub
cmp
add
add
and
and
mov
cmp
dec
leave
mov
dec
add
add
roll
loope
popf
add
jnp
out
mov
pop
fistpll
frstor
add
pop
mov
mov
outsl
add
xor
mov
arpl
cs
add
cmp
adc
add
add
and
sub
in
idivl
xchg
in
insl
add
add
int
add
push
add
movsb
lahf
pop
inc
mov
aaa
or
add
fmull
das
imul
add
add
sub
add
mov
jl
add
aas
sub
std
int3
add
iret
jno
ret
fs
xchg
jae
add
dec
subl
cmp
lods
jne
lods
dec
pushf
adc
ja
sbb
mov
jl
and
or
nop
add
lret
mov
stc
scas
xchg
stos
or
add
xchg
jl
ja
mov
in
push
add
jp
push
mov
pop
je
es
pop
shl
enter
add
movsl
cmpsl
add
mov
add
imul
ljmp
jle
int
add
cmp
add
out
xchg
imul
mov
add
mov
pushf
addb
fwait
test
cmp
adc
xchg
xor
add
icebp
jo
add
stos
add
cli
jp
pop
outsb
hlt
jbe
fnstsw
ret
xor
jg
sbb
mov
mov
adc
or
add
test
fwait
ret
lock
cld
jns
rep
push
or
cwtl
inc
insl
or
jp
inc
pop
push
pop
ss
cmc
mov
sub
dec
sbb
lahf
add
add
in
sub
sbb
push
imul
mov
cld
test
stos
cwtl
inc
push
add
push
adc
dec
lds
call
cmp
sbb
movsb
repz
mov
push
ret
mov
ret
inc
repnz
cmp
dec
insb
imul
je
lret
ss
pop
mov
pop
push
cmpsb
lret
std
cwtl
push
add
cmp
lret
mov
mov
dec
fiaddl
mov
inc
outsl
cltd
fmulp
xchg
push
mov
adc
mov
jb
ja
or
ret
jg
mov
popa
xor
ret
popa
add
push
fwait
add
inc
mov
dec
sti
in
lret
call
xor
pop
push
dec
add
cmp
sahf
rorb
pushf
je
dec
add
add
loop
ljmp
add
inc
add
jo
add
popf
bound
pusha
push
fwait
int3
jge
add
shlb
test
cmp
into
pop
call
push
cmp
sbb
add
imul
push
fcom
xor
mov
xlat
pop
jmp
cld
sub
xchg
adc
inc
in
xor
repz
rcrl
outsb
jo
inc
mov
add
and
cld
jp
xchg
bound
sti
stos
add
enter
jns
jecxz
add
rclb
and
flds
enter
pop
lea
sub
mov
jnp
pushf
push
ja
mov
ljmp
sbb
aam
add
lcall
rcr
add
add
enter
xchg
repz
mov
add
add
cli
rcll
xchg
jge
xchg
rcll
xchg
movl
cmp
sbb
subl
add
push
andb
imul
lea
jo
rolb
imul
repz
jnp
xchg
add
out
test
xor
fldl
add
add
lret
jmp
push
jnp
add
sub
jbe
shll
cltd
loope
adc
sbb
mov
xchg
xchg
mov
push
je
int
sbb
jns
pop
out
push
pop
add
inc
lods
mov
add
sbb
movsb
add
cwtl
bound
xchg
pop
inc
cwtl
cmp
dec
jns
call
push
xor
add
inc
cmp
repz
adc
out
cmp
rolb
pop
dec
and
add
sti
mov
mov
loop
fwait
jle
repnz
mov
les
nop
adc
sub
outsl
popf
sub
add
xor
adc
inc
xor
sbb
adc
sub
cmpl
xchg
jl
mov
push
stos
add
outsl
cltd
add
test
sub
rcrl
dec
inc
inc
sbb
pusha
dec
lods
out
mov
dec
sbb
hlt
es
xor
je
repnz
jae
int
fstps
cmp
add
lods
add
dec
xchg
aas
clc
jge
dec
shlb
or
add
mov
sbb
test
cmp
sub
lret
sbb
mov
mull
js
repnz
aas
pusha
mov
stc
addr16
or
adc
lret
xchg
dec
fwait
leave
jbe
inc
add
sub
pop
sub
lahf
icebp
and
pop
add
sbb
fdivp
xchg
jge
mov
mov
gs
jp
out
pusha
mov
sbb
pop
popf
add
outsb
aam
xchg
data16
mov
enter
add
mov
cmp
pop
enter
dec
add
pop
fistpl
cltd
cmp
lret
cli
add
jmp
lea
lret
add
inc
cmp
not
data16
mov
push
pusha
push
cmp
movb
push
add
mov
adc
add
fadds
inc
enter
aad
add
add
sub
lods
add
pop
mov
push
add
filds
and
pop
rcrl
jg
or
add
fs
insl
cli
aad
sti
mov
in
cli
xor
test
add
test
fists
imul
cmp
stos
xor
inc
add
and
clc
cld
sti
sub
dec
inc
das
push
arpl
push
or
xor
es
addb
cld
pop
pop
sub
mov
push
adc
in
cmp
cli
inc
pop
mov
push
pop
inc
jle
imul
testb
rcll
and
inc
in
add
sub
and
pop
and
push
add
add
mov
sbb
mov
inc
ret
sbb
daa
mov
cmp
dec
pushf
push
jbe
test
xchg
stc
add
fs
ret
pop
movl
daa
out
sub
lar
sbbl
add
mov
lea
lcall
insl
in
daa
push
add
aaa
jg
add
adc
xchg
add
mov
inc
add
aaa
lcall
or
cltd
out
jae
cmpl
xor
xchg
xchg
out
shlb
cmc
push
add
idiv
insb
sub
sub
cmp
add
push
sub
fldcw
inc
xchg
xor
xchg
js
pop
sbb
jo
pop
jecxz
push
iret
pop
lret
decb
daa
or
in
fwait
pusha
aad
testb
cld
push
jl
xor
add
mov
add
dec
add
mov
xor
pop
sbb
movsb
pop
enter
xor
mov
jo
jb
enter
es
xor
sub
pop
mov
inc
and
xchg
mov
stc
or
push
jg
lock
adc
mov
mov
add
jle
xor
cwtl
xchg
xchg
push
roll
sbb
jecxz
or
push
jp
es
and
add
out
sbb
shrb
in
add
pop
mov
clc
fwait
sub
dec
int
mov
mov
jp
jl
pop
hlt
add
incb
adc
add
xor
test
cld
xchg
sarl
and
pop
jb
add
fnstsw
shrb
jl
and
movntps
pop
push
jp
cmpsb
push
cs
lret
adc
outsl
jp
int
xchg
sbb
pop
cli
test
cli
scas
test
inc
sub
sub
dec
sub
pop
cs
lahf
ret
cmp
in
xchg
mov
push
mov
fidivs
bound
imul
jge
repnz
add
push
int
mov
int
fisttps
ss
jno
pop
cmp
sti
sbb
add
mov
mov
leave
add
dec
add
mov
into
pushf
dec
pushf
lods
fldl
jno
push
or
mov
push
xchg
add
shlb
add
aad
push
loop
arpl
jae
mov
data16
sub
mov
mov
cmp
cld
lods
push
sbb
add
add
sahf
mov
jge
lock
add
in
xchg
repnz
push
adc
mov
xor
arpl
add
adc
aas
jo
pushf
lods
cmpsb
inc
sarb
jg
stos
xor
add
test
sbb
pusha
filds
sahf
adc
or
and
sub
mov
mov
gs
cmc
cmp
add
inc
add
xor
add
stc
dec
cmp
and
pop
rcll
xchg
add
push
or
xor
adc
cmp
movsl
sahf
or
jbe
fldenv
sub
xor
shll
pop
and
lret
pop
incb
add
add
jns
lock
and
mov
jae
pop
enter
xchg
add
das
sbb
lock
jmp
ljmp
push
mov
add
xchg
mov
sbb
sbb
push
jle
mov
adc
xchg
pop
repz
jp
out
add
pop
sti
and
ds
add
xlat
dec
cmp
add
push
inc
add
int
mov
pop
adc
add
dec
cmc
aam
dec
sub
xchg
add
out
and
scas
inc
inc
jle
imul
jae
cs
mov
pop
fwait
in
fistps
pop
repz
shll
mov
add
push
aas
nop
outsl
xchg
aas
add
jb
shl
in
pop
or
pop
inc
sbb
add
push
xchg
push
push
jbe
sbb
out
out
cmp
cmpsb
xchg
addb
jae
add
add
ljmp
mov
shll
ret
pop
stc
or
jmp
xchg
sub
add
push
arpl
nop
sbb
push
add
pop
mov
sbb
pop
add
das
add
sbb
add
imul
or
jg
fdiv
push
inc
mov
adc
add
sti
hlt
pushf
push
je
pop
pop
add
add
mov
dec
inc
fstl
xchg
xlat
jb
dec
add
faddl
xchg
add
xor
aad
adc
cli
lock
mov
cltd
dec
jno
cwtl
and
add
in
cmpsl
push
lret
dec
int3
xchg
adc
rorl
add
popf
sbb
inc
fistpll
add
mov
fcmovnu
out
dec
pop
jnp
cwtl
push
sub
or
in
ljmp
testb
aas
and
add
addl
add
pop
fs
and
lldt
lahf
cmc
inc
movsb
test
mov
out
cwtl
add
add
das
dec
fisubs
xorl
and
insb
lret
iret
push
add
or
test
add
mov
mov
mov
add
lcall
adc
adc
test
sbbl
lret
add
inc
sbb
jbe
loope
cmpsb
sub
daa
xlat
mov
leave
popa
das
add
inc
lock
jp
lods
cmp
idiv
dec
adc
iret
push
jge
add
jl
jbe
xcrypt-cbc
cmpsl
push
lcall
inc
hlt
cmp
movsb
pop
push
add
or
pop
js
jecxz
add
mov
lods
imul
ss
xor
fisttps
mov
xor
mov
lods
lret
xchg
xchg
xor
or
or
out
xor
aad
stos
je
dec
jno
roll
jle
aam
test
sbb
repz
into
popa
dec
das
es
adc
test
andl
stos
sub
mov
jbe
mov
add
ja
add
xchg
fidivs
pop
add
aad
adc
mov
loopne
sbb
mov
popa
add
or
mov
jbe
add
add
fadds
mov
sub
add
sub
xchg
lret
mov
cli
cmp
dec
bound
mov
orl
add
icebp
add
scas
aas
jb
cmp
popf
lret
fnstsw
shlb
iret
mov
add
out
add
lea
push
pusha
mov
mov
jns
pop
pop
movsb
stos
push
sbb
mov
sub
dec
jne
sti
in
out
rcrl
jle
add
lcall
lods
cmp
add
add
mov
imul
pop
mov
jg
lock
les
add
cmpsb
cmp
repz
out
sahf
sti
add
testb
add
faddp
cmp
bound
in
jo
add
sahf
fadd
xchg
push
mov
push
cmp
jno
lcall
xchg
fwait
mov
repnz
pop
add
dec
and
jbe
andl
std
aad
fwait
xchg
das
xchg
mov
add
fndisi(8087
jmp
popl
sub
or
add
push
cmp
mov
leave
sub
mov
in
insl
std
inc
out
add
sub
mov
sub
mov
fiadds
jmp
add
sti
lldt
mov
rolb
aam
jbe
jmp
cmpsl
jecxz
adc
adc
into
stos
jmp
jg
sub
rorb
or
xor
add
add
xor
aad
add
xchg
mov
pushf
mov
jg
sbb
push
add
negl
cltd
lods
add
sti
mov
cwtl
push
repnz
xchg
add
cmp
test
aas
pop
sarb
js
and
add
cmp
dec
dec
add
popf
repnz
adc
shll
or
mov
add
sub
pop
mov
push
imul
mov
mov
add
and
cwtl
or
xchg
pop
iret
sub
test
mov
lcall
xor
imul
iret
add
push
add
addr16
push
adc
sub
push
add
stos
push
lods
shlb
xchg
in
nop
movl
sub
dec
scas
sbb
imul
xchg
fwait
jge
xlat
cltd
pop
add
add
sub
stos
push
jg
add
loopne
ss
add
repnz
push
jle
sbb
adc
add
scas
add
fildl
push
shr
inc
adc
mov
push
and
mov
es
js
dec
or
dec
add
movb
add
xor
mov
push
loop
shr
jecxz
pop
add
mov
shlb
add
int
shrb
movsl
out
sub
in
rolb
fists
inc
or
iret
dec
add
pop
adc
cmpsb
jmp
inc
into
fsubrl
inc
adc
push
int
add
add
popf
push
mov
xor
loop
lcall
jle
or
outsb
mov
mov
jmp
or
pushf
xor
ret
jle
and
add
outsl
inc
and
pop
test
push
jl
add
mov
ror
pop
testb
push
add
xchg
xlat
xchg
sbb
clc
les
cmpsb
and
add
clc
add
js
xor
sbb
ljmp
das
add
inc
push
add
bound
cmp
or
sub
and
out
test
subl
movsl
lret
clc
pop
mov
rdtsc
add
iret
mov
cmc
and
mov
lahf
pop
lahf
test
test
in
mov
ja
ror
jg
inc
adc
cld
add
movsb
sub
add
add
bt
ja
andb
add
mov
cmpsb
or
add
dec
or
sub
or
jp
dec
loope
sub
sbb
cli
insl
inc
add
add
add
mov
jg
push
push
pop
jae
or
scas
pop
pop
jae
adc
enter
sti
push
dec
adc
xchg
jg
xchg
xchg
add
dec
jno
inc
xor
stc
add
push
xor
jne
outsl
lcall
gs
scas
adc
fistps
and
fwait
scas
lock
out
popa
and
mulb
ja
inc
scas
jne
cmp
movsl
jecxz
fs
sub
data16
stos
sahf
frndint
push
mov
mov
aaa
mov
testl
mov
mov
cmp
add
mov
add
imulb
or
ljmp
fildll
leave
mov
lcall
mov
cmpsl
rcrl
push
xchg
arpl
jns
mov
add
lret
ret
arpl
sbb
fisttpll
mov
lahf
add
inc
jmp
and
inc
inc
cmpsb
xchg
shlb
add
jbe
mov
add
add
sbb
add
sbb
mov
add
lods
add
mov
cmp
jno
add
adc
add
das
mov
negl
sub
ljmp
stos
mov
pop
add
or
int3
insb
fistpl
cmpsb
aam
mov
in
add
pop
or
popa
xchg
addr16
sbb
mov
lds
sbb
aam
std
sbb
dec
add
jl
mov
mov
mov
push
pop
xchg
add
aas
stos
pop
fcoml
add
shrb
xchg
mov
dec
dec
or
push
fs
add
inc
jge
lea
scas
add
les
mov
jl
lret
sub
mov
xlat
mov
incb
je
in
pusha
dec
cmp
add
dec
fidivl
add
loopne
dec
adc
mov
add
add
inc
out
insb
dec
dec
idivb
mov
sbb
add
test
add
push
pop
adc
push
xor
pop
push
mov
lahf
add
or
cmpsb
shl
jbe
sbb
aas
adc
mov
movsb
push
ficomps
leave
dec
movsl
aas
mov
adc
or
lcall
clc
lods
cmpsl
je
in
add
inc
fsubl
sbb
cs
add
dec
sub
mov
cmpsb
ds
test
jae
pop
xchg
outsl
cmpsl
dec
pop
es
aad
mov
pop
addr16
nop
decl
inc
fwait
fwait
pop
cli
movsb
mov
imul
test
pop
insl
inc
iret
fs
add
les
xor
cmp
je
pushf
call
cmpsl
out
fbstp
fldt
dec
jae
nop
push
xchg
add
jle
and
cmp
jnp
outsb
add
add
push
xor
or
jecxz
add
add
add
xlat
mov
test
punpcklwd
cmp
rolb
ret
add
pop
inc
cmpsl
arpl
sub
mov
mov
loope
imul
jno
adc
fidivl
push
data16
push
fdivl
or
dec
jae
int
imul
ret
add
cmpsb
push
cli
mov
arpl
roll
aas
dec
call
dec
push
leave
add
stos
mov
std
dec
ret
add
pop
ficompl
cmp
push
pop
gs
dec
pop
hlt
add
or
stc
pop
add
addr16
jmp
sub
iret
shrb
mov
jns
add
cmc
enter
xor
ret
mov
mov
add
or
sbb
fsubl
fnstenv
push
shl
aaa
insl
jno
push
inc
roll
popa
xchg
cmpsl
ljmp
and
sbb
add
sub
test
jb
sti
xorb
cmp
scas
sbb
push
cmp
ss
xchg
mov
rorb
rcrb
adc
add
and
cwtl
or
jae
stc
sti
lea
int3
mov
pop
add
fmul
lea
and
inc
sbb
lcall
testb
ljmp
add
pop
add
add
int3
loopne
sub
xlat
xor
add
or
xchg
out
cmp
pop
mov
lea
add
cmp
sub
add
sbb
cwtl
add
jp
dec
roll
roll
pop
je
adc
add
movsb
rclb
add
add
js
xor
xor
jns
insb
pop
and
cwtl
insl
jae
stos
stos
jbe
add
loope
cmp
mov
sbb
ret
mov
fneni(8087
jae
repnz
lea
or
out
push
repnz
gs
mov
aas
insb
repnz
mov
jno
mov
jo
add
enter
sub
fcmovu
mov
mov
jmp
jmp
sti
test
in
enter
ret
xor
add
aam
popa
xchg
inc
test
out
add
mov
push
xchg
stos
mov
xorb
or
cmp
gs
mov
mov
inc
mov
inc
cmpsb
rolb
pop
jbe
xor
add
fisttpll
in
and
inc
push
push
decb
popa
mov
pop
lcall
add
and
xchg
rolb
cs
jae
add
cmp
out
add
int
jbe
rcr
xchg
xchg
testb
mov
hlt
hlt
imul
ds
add
add
mov
xchg
dec
cli
sub
fs
cmpsl
add
in
push
ja
int3
addr16
push
add
mov
sub
push
pop
push
cmp
movsb
cmp
bound
mov
fsubrs
push
jno
ret
stos
add
in
mov
or
rol
lods
xlat
and
adc
add
xchg
mov
push
lahf
dec
lods
add
shrb
inc
call
stos
mov
fwait
mov
jg
fs
add
sub
add
jb
jb
mov
push
dec
lods
add
repz
add
or
add
jbe
scas
loop
mov
add
out
add
fiadds
fiaddl
push
mov
add
std
add
sbb
pop
add
rcrb
add
adc
mov
pop
dec
pop
or
and
jg
add
mov
push
fwait
loope
add
or
insl
push
and
mov
jmp
cwtl
pop
sbb
or
adc
test
call
ret
in
out
iret
outsb
inc
out
xor
insl
add
xchg
push
xchg
add
sub
xor
push
adc
shrb
mov
push
adc
lahf
add
add
aam
inc
aad
jne
add
add
add
enter
add
fistps
js
rcrl
sub
in
fnstenv
sub
jecxz
ret
cltd
mov
movsl
lret
mov
cmpsb
push
mov
add
add
cmp
stc
pusha
fcomps
loope
push
in
add
stc
imul
jns
ja
cmp
out
addl
fs
add
aaa
loopne
sbb
insl
lahf
mov
xor
jae
jl
pop
iret
dec
add
adc
mov
shr
in
push
imul
test
jb
jb
pop
scas
add
scas
pop
or
filds
xchg
adc
pop
test
int
push
and
adc
cmp
mov
data16
add
pop
add
adc
int
stos
mov
mov
xchg
inc
cwtl
pop
fistl
addl
add
sahf
add
jbe
mov
mov
pop
xor
push
push
cld
mov
add
mov
addr16
add
sbb
mov
push
push
or
ja
mov
icebp
add
or
out
inc
sahf
mov
ljmp
xor
test
into
psadbw
sub
mov
icebp
pop
cltd
and
sbb
mov
mov
in
add
bound
int
sti
repz
filds
cmp
into
addr16
jns
sahf
outsb
mov
cli
pop
pop
pop
dec
mov
ljmp
xchg
push
sub
xchg
add
addl
inc
ss
add
sbb
int
nop
cmp
insl
fwait
out
sub
dec
loopne
add
jge
mov
es
lret
jecxz
loopne
mov
fs
sub
icebp
xor
dec
push
sbb
jae
test
ljmp
pusha
sbb
fstpl
lock
cli
jle
pop
add
cld
mov
xor
jnp
add
adc
loop
jecxz
outsb
aad
adc
pop
addl
or
insb
push
mov
hlt
add
or
xchg
mov
cmp
ja
mov
add
sbb
pop
sbbl
mov
imul
test
sbb
push
lahf
rolb
lds
dec
js
add
add
jp
out
sbb
test
add
jl
repnz
testl
and
cld
pop
jecxz
pop
xlat
test
cmp
cwtl
stos
paddw
jno
fwait
sti
add
filds
sbb
fidivrl
pop
and
add
add
out
ja
add
pop
sub
or
js
xchg
es
push
mov
mov
addr16
fidivl
shl
and
push
cltd
push
mov
es
add
mov
add
add
mov
nop
shl
stos
jge
xor
or
adc
and
pop
ja
shlb
enter
js
xlat
sbb
add
lahf
test
dec
cmp
xchg
cmpsb
inc
xor
push
ret
mov
mov
dec
test
lods
in
cld
pop
add
inc
add
xchg
cs
out
cltd
add
cmpsl
dec
mov
int
xchg
sub
popf
rolb
iret
add
jae
sub
adc
dec
cltd
fldcw
xchg
int3
and
int
movsl
push
aas
stos
cmpsl
imul
in
fldl
lods
daa
je
rcll
jne
mull
add
mov
xchg
bound
loope
lock
add
push
jl
in
jle
aas
mov
dec
addr16
add
adc
std
enter
add
repnz
mov
in
push
flds
repnz
ja
dec
mull
pop
les
push
pop
test
dec
sub
push
clc
or
faddl
shll
push
add
stos
pop
fs
pop
lret
xor
jmp
sar
cmp
xchg
hlt
dec
fwait
hlt
or
lods
add
xchg
pop
cmp
cmc
cmp
push
add
pop
push
sbb
adc
pop
add
add
stos
ja
jmp
js
fwait
inc
adc
aam
mov
push
jl
int3
pop
pop
sahf
fs
andl
add
and
out
pushf
sbb
decb
in
pushf
or
lea
lahf
lds
clc
push
and
loopne
push
int3
sub
fsubr
add
daa
fildll
inc
test
xor
adc
mov
pop
inc
rorl
pop
or
add
and
fs
fwait
mov
enter
dec
test
add
cs
dec
pop
and
iret
jecxz
lock
cwtl
inc
add
pop
dec
stos
mov
ds
iret
cli
rcrl
adc
sbb
scas
jns
outsl
jno
scas
xchg
repz
add
xchg
dec
test
add
in
pop
rcll
add
cld
pop
or
mov
mov
cmpsb
insl
pop
add
sbb
ret
cmpsl
out
add
fcompl
and
inc
aas
pop
lods
stos
test
adc
or
testl
mov
mov
inc
xor
jno
jo
add
mov
clc
xchg
pop
mov
jecxz
add
mov
jne
or
pop
gs
adc
cltd
and
daa
dec
inc
cmc
mov
push
xchg
or
sbb
add
popa
add
cmp
cmp
pop
add
add
mov
add
adc
add
in
jmp
add
pop
cmp
sub
scas
int
mov
lds
out
mov
pop
sub
rorb
dec
push
sub
pushf
ljmp
stos
int3
and
jns
mov
pop
out
push
or
mov
mov
filds
fnstenv
flds
mov
inc
jno
sbb
cmp
dec
popa
push
mov
sub
outsb
jb
xor
xchg
sbb
popf
mov
sbb
xor
pop
leave
add
std
cld
mov
dec
add
andb
shll
jb
pop
jne
insb
aaa
pop
mov
cmc
sub
addl
adc
repz
jbe
jmp
in
ljmp
scas
push
arpl
cmp
jb
mov
rcrl
xchg
andb
es
xor
add
xchg
sbb
jbe
add
scas
jne
popa
push
add
jl
add
sbb
or
pop
inc
pop
popa
test
jno
fistps
add
mov
cmp
xor
jb
sbb
add
cmpl
mov
xorb
out
lods
negb
outsb
add
fiadds
add
xlat
out
add
cmp
subb
mov
jno
sahf
jle
adc
aaa
jecxz
cmp
add
adc
pop
cmp
cltd
add
mov
sbb
daa
xor
mov
or
aas
test
addb
js
in
jbe
mov
xor
push
dec
add
sub
nop
fistpl
das
xchg
add
aad
sarl
dec
addb
ss
adc
add
insl
inc
jne
pop
adc
pushf
aam
insb
add
adcb
or
loopne
js
push
add
pop
pop
rorl
add
pop
outsl
repz
sub
push
lea
les
add
ljmp
es
add
add
popf
and
imul
insb
jecxz
rcrl
repnz
lcall
dec
iret
arpl
inc
cli
enter
sub
bound
arpl
fadds
arpl
mov
sub
inc
mov
add
adc
xchg
add
sti
xor
sub
outsl
shrb
testl
sub
push
sbb
jmp
cli
add
out
lret
add
lahf
cmp
or
popa
roll
sub
movsl
sub
out
jecxz
frstor
dec
loop
push
adc
bound
pop
mov
scas
rorl
inc
pop
pop
sub
pop
adc
pop
add
push
hlt
sub
mov
shrl
mov
mov
pop
sbb
sub
scas
flds
pop
push
mov
add
dec
sub
inc
imul
movsb
cltd
frstor
and
dec
sub
adcl
je
fsubp
xchg
jns
cltd
sbb
add
jne
add
int
add
dec
xchg
push
jae
push
lea
mov
mov
dec
imul
xchg
bound
test
daa
dec
icebp
mov
verr
iret
shll
add
sub
jae
mov
scas
fwait
push
cmp
or
push
js
mov
inc
std
add
add
hlt
arpl
inc
out
pop
push
call
aad
mov
xchg
and
inc
stos
hlt
lock
test
aam
mov
inc
out
add
idiv
add
ds
add
add
cmp
xchg
stc
add
and
pop
in
push
cli
adc
and
add
test
and
mov
jo
push
inc
loop
inc
xchg
inc
fimull
adc
dec
add
jmp
pop
stc
leave
pop
push
pop
pop
ss
int
in
push
sbb
call
std
sti
addr16
insl
add
cmp
lds
add
popf
fmulp
imul
add
jmp
out
jp
add
mov
repz
js
xchg
inc
fldl
daa
stos
pop
add
adc
js
or
data16
pop
jecxz
repnz
mov
dec
add
enter
pop
movl
adc
jge
mov
cmp
and
jb
mov
add
fsubr
mov
and
lret
ret
mov
pop
adc
jge
add
movsb
adc
inc
add
add
push
fs
pop
cmp
add
es
pop
cmp
sbb
add
or
push
push
push
lods
sbb
pop
addl
cmp
pop
mov
lahf
sbb
mov
push
cmp
es
add
mov
dec
stos
push
inc
aam
add
dec
mov
les
lds
fiaddl
sbb
mov
cmp
ja
dec
cmp
or
ret
test
test
mov
pop
sub
test
xor
dec
add
fldcw
xor
fadds
xor
jns
test
sbb
ss
sub
test
in
sbb
add
stos
shll
adc
pop
aam
add
shlb
ljmp
movsb
clc
icebp
cmp
add
xor
mov
pop
dec
add
adc
xor
aad
add
shrb
push
test
add
popa
popa
ja
stc
add
mov
and
add
cmp
data16
push
or
in
mov
jae
dec
rcr
add
jge
xchg
into
ss
push
add
add
add
loopne
sar
aas
add
scas
push
add
das
ja
arpl
movsl
inc
aaa
mov
add
enter
repnz
rclb
add
pop
add
adc
xchg
dec
int3
ret
add
mov
repz
aaa
jecxz
jg
dec
negl
idiv
aad
cmpsb
test
sbb
inc
fidivs
jmp
les
jmp
nop
xchg
add
jno
add
add
cmp
out
aam
pop
loopne
mov
push
enter
jo
pop
mov
lea
test
mov
pushf
pop
repz
in
add
push
ds
jbe
out
adc
addr16
add
mov
add
mov
jl
pop
loop
add
roll
out
js
imul
sahf
push
addl
and
mov
push
add
push
stc
jns
call
dec
sbb
fs
add
in
adc
mov
inc
mov
cmpsl
das
mov
sub
inc
stos
repnz
out
outsb
adc
jo
cmpsb
sbb
lcall
shll
add
adc
and
ljmp
add
arpl
jge
fninit
push
pop
addl
xor
and
out
add
mov
addr16
arpl
add
jecxz
mov
add
add
aaa
lcall
lcall
fwait
jnp
jbe
push
std
jl
orl
sub
and
mov
pop
sbb
mov
mov
add
cli
inc
xlat
add
mov
xchg
lds
add
es
ss
mov
movsl
inc
mov
add
xor
adc
sub
je
mov
mov
mov
ljmp
mov
jb
fs
setnp
pop
xchg
add
jecxz
clc
inc
in
out
icebp
add
add
jne
test
sub
shll
add
mov
in
jno
mov
mov
add
adc
add
ret
and
sub
and
in
rolb
lock
add
add
push
mov
cmp
std
leave
inc
hlt
mov
stos
add
out
add
shrb
xor
out
mov
ret
ret
add
mov
jge
mov
fwait
aad
add
mull
bound
add
add
mov
notb
add
fldl
jne
xor
xchg
cmp
cmp
int3
insb
mov
push
adc
out
add
sub
lea
sbb
jns
dec
insl
out
xchg
das
dec
dec
lods
add
cmp
aaa
out
aas
sbb
sarb
addr16
mov
enter
lret
mov
dec
or
push
cmp
imul
sarl
cli
add
push
xchg
push
rol
mov
leave
xchg
lea
loopne
or
mull
sbb
idivl
mov
js
add
jp
js
mov
lea
push
dec
or
andl
and
aad
mov
dec
sarb
add
mov
jnp
mov
pop
test
add
ficoml
sbb
add
xor
in
jo
movsb
aam
push
inc
movsb
ljmp
jg
pop
jae
sbb
add
in
mov
testb
cmp
cltd
sbb
sarb
scas
filds
test
adc
push
sbb
add
xchg
inc
mov
mov
aas
dec
imul
int
call
fdiv
lcall
add
push
dec
stos
add
enter
das
loope
filds
xorb
lds
nop
test
fwait
lahf
bound
lahf
xchg
add
negb
pop
aam
mov
fcmovbe
bound
inc
rolb
pop
mov
popa
mov
jmp
jmp
add
mov
add
inc
js
or
lods
nop
jnp
pop
mov
mov
pop
in
ljmp
flds
daa
cmp
add
or
mov
repnz
jo
iret
pop
movsl
push
rcrl
leave
sahf
repz
shll
enter
cmc
adc
cs
in
sbb
cmp
add
pop
push
ret
shr
add
mov
sub
add
repnz
mov
out
sub
fidivs
mov
leave
adcb
mov
fcoml
add
mov
mov
mov
cmpsl
sbb
sub
shr
ret
test
jb
adc
mov
ret
jbe
adc
xchg
movsb
shrb
add
out
push
push
push
dec
xchg
fistpl
xor
or
cmp
mov
das
add
push
dec
jge
and
cli
cli
loop
mov
mov
push
or
xchg
push
dec
xchg
aad
sbb
jge
add
mov
pop
cmp
loopne
enter
ss
jbe
test
xor
sarl
lea
stos
add
js
add
jne
in
or
add
fisttps
pop
add
pop
out
jbe
xchg
add
mov
into
adc
loope
mov
push
add
add
mov
mov
ds
add
cmp
flds
jns
add
cltd
int3
inc
and
bound
mov
loopne
mov
test
inc
cmp
cmp
iret
lock
test
icebp
add
into
push
mov
loopne
add
add
test
xchg
mov
aam
xor
or
mov
mov
pop
mov
or
dec
mov
rcrl
push
ret
int3
test
ds
bound
inc
insl
frstor
in
xchg
add
imul
test
les
sbb
xchg
cmc
jle
imul
adc
outsl
aad
pusha
add
push
sub
rcl
pop
and
data16
push
clc
push
aas
gs
add
jnp
xchg
pop
mov
pop
fs
faddl
push
add
add
cmp
xlat
adc
pop
xor
mov
mov
insb
mov
out
fdivrs
lds
inc
adc
sti
add
lock
decb
mov
popl
push
imul
jae
mov
insl
iret
and
push
aas
lock
pop
testl
hlt
mov
call
add
sub
adcl
imul
loop
cwtl
cmpsl
jne
and
inc
cmp
xchg
cltd
int
aam
mov
and
imul
jmp
add
jg
insl
popa
mov
xchg
sahf
pop
sbb
sub
iret
std
ja
sahf
add
add
add
fstpt
add
shrl
rcll
outsb
add
scas
jno
add
push
cli
add
lahf
stc
cmpsl
mov
inc
loope
lcall
lods
mov
mov
dec
add
sub
adcl
lods
into
add
jb
push
aaa
cli
adc
add
adc
stc
out
add
cmp
pop
inc
popf
mov
add
jns
mov
scas
cli
cltd
add
jae
cmc
add
or
cwtl
imul
outsb
shl
stos
cmp
ds
in
sbb
les
loop
int
cmp
int3
lock
jae
aaa
mov
xchg
lcall
mov
fstl
sub
pop
mov
hlt
jnp
mull
mov
push
sbb
test
push
jmp
daa
adc
test
jl
push
addr16
push
add
hlt
xchg
addb
pop
ljmp
add
cmp
jb
inc
jne
call
jb
push
in
add
aad
mov
ja
add
xor
add
repz
or
stc
fstl
std
fstpt
push
inc
xorb
aad
rcrb
lock
inc
push
cs
xor
add
mov
add
pop
sahf
dec
add
xchg
xchg
ss
loope
mov
jg
add
jb
iret
mov
mov
cmp
bound
mov
icebp
lds
xor
inc
aad
dec
pop
pop
sbb
ret
mov
mov
xor
out
and
popf
add
cmpsl
add
rolb
pop
nop
lret
add
movsl
add
sub
addb
pop
add
lock
dec
enter
add
and
add
xchg
push
or
scas
sbbb
fnstcw
mov
mov
daa
push
orb
add
aam
out
iret
cli
jne
in
call
in
lods
add
xor
scas
mov
pop
fldt
and
xchg
rcr
in
in
test
cmp
shrl
or
aam
decb
adc
mov
dec
sbb
add
mov
lods
mov
push
xchg
ljmp
enter
add
jno
test
fisttps
les
cs
sbb
add
sub
fwait
addr16
sub
mov
je
aad
add
mov
push
lods
in
inc
rcrl
mov
mov
add
and
es
xor
jl
add
call
pop
xchg
popf
mov
add
sub
cs
and
mov
cmc
ljmp
and
fistpll
jbe
mov
inc
lods
push
out
ficompl
subb
xchg
imul
addr16
pop
cwtl
sahf
push
lods
cmp
pop
imul
lock
dec
fbstp
out
xchg
add
xor
aas
add
add
addb
adc
shlb
mov
xor
push
mov
inc
movsl
mov
test
or
add
or
xchg
in
aaa
add
dec
cmpsl
out
add
inc
ds
add
mov
hlt
fidivs
leave
outsb
and
mov
and
mov
negb
loope
jno
push
jnp
xchg
xor
dec
nop
insl
mov
and
fimull
add
add
aam
push
and
into
mul
push
dec
add
push
pusha
add
fwait
sti
lock
xchg
sarb
adc
lock
out
mov
add
loop
add
dec
out
jae
sbb
scas
fcmovnb
add
push
push
xchg
sub
andl
jmp
aad
dec
push
jge
fdivrs
ja
xor
add
shl
icebp
sbb
out
cmpsl
or
cmp
pop
cmp
aas
xchg
incb
inc
add
pusha
sbb
or
add
stos
stos
in
jp
jp
mov
push
icebp
insl
stos
xor
mov
and
pop
imul
mov
mov
and
aas
xor
jg
enter
incl
and
pop
inc
sub
mov
adc
xlat
mov
sub
mov
cmpsb
scas
push
cmp
xchg
xor
add
subb
add
jns
in
xor
shrb
enter
xor
cmp
mov
push
xor
std
dec
scas
fistpl
scas
outsl
lea
add
shrl
push
std
in
add
popf
inc
enter
sqrtps
in
test
aad
add
sahf
std
lock
xor
arpl
push
mov
push
fcmovb
mov
mov
fcmovnb
les
add
faddl
lcall
subl
sbb
mov
or
and
xor
jae
imul
jno
mov
sbb
pop
xchg
filds
add
stos
test
movsl
shll
xchg
mov
out
popf
data16
add
cmp
xor
fcmovnu
cmp
movsb
negl
jno
inc
or
mov
mov
ljmp
pop
add
cmp
cmp
add
andl
mov
xor
mov
and
mov
jecxz
push
dec
add
xchg
sbb
aad
jle
scas
add
adc
sub
add
and
jo
dec
or
or
scas
sub
add
pop
dec
lods
les
std
mov
xchg
mov
push
add
push
adc
sbb
xchg
out
cmpsb
dec
pop
jg
rcrl
mov
and
add
add
out
clc
and
xchg
inc
dec
cwtl
cld
insl
sub
sub
ret
mov
imul
pusha
jl
add
xchg
add
daa
inc
xchg
or
pop
adcb
add
repnz
add
adc
mov
out
bound
sub
and
ds
addb
repz
xchg
pop
or
add
adc
shl
mov
push
add
outsb
add
mov
fucomi
mov
mov
add
movsl
loope
pop
leave
mov
cltd
lea
jno
sbb
in
int
mov
add
pop
xor
cltd
pop
sahf
pop
push
inc
xor
roll
mov
es
add
add
push
add
repnz
pop
lock
sub
sub
or
pop
cmpsb
sbb
test
dec
mov
outsb
cmpsb
out
adc
icebp
addl
add
lcall
add
push
iret
add
add
push
and
movsl
xchg
js
loop
pop
add
jge
cmp
mov
add
scas
add
push
push
add
sub
in
mov
popf
xchg
sub
xchg
add
or
ret
int3
jns
fcmovbe
mov
les
add
notb
imul
fsub
loope
add
fwait
addl
push
push
rclb
fidivrs
lds
jmp
sub
rolb
cmp
xchg
int3
adc
outsl
mov
pop
fadds
out
out
jl
fisttpll
dec
sbb
cmc
add
andb
outsl
test
pop
jns
sbb
lret
add
add
mov
add
add
mov
or
sti
push
mov
inc
xor
push
push
jbe
add
jns
mov
mov
shl
inc
pop
mulb
iret
mov
cmp
inc
test
or
clc
jno
inc
clc
fistl
adc
loopne
mov
xchg
inc
jg
imul
fwait
add
into
pop
outsb
jmp
loopne
cmp
dec
mov
iret
cwtl
aaa
and
iret
rolb
out
push
repnz
and
add
sub
dec
sub
scas
push
xor
je
mov
pop
xchg
mov
aas
psubusb
xchg
add
sbb
das
jl
xchg
incl
add
sbb
arpl
cmp
pop
add
mov
add
pop
sbb
jae
jnp
sbb
dec
sbb
add
cmpsl
mov
repnz
lea
imul
ret
inc
scas
dec
inc
cmp
add
cwtl
stc
or
sub
rcr
xchg
ds
pop
outsl
outsl
push
icebp
push
fmull
push
xchg
add
dec
jmp
or
add
in
pushf
popa
xor
xchg
mov
cli
mov
sub
sbb
repz
dec
add
push
jne
jb
jp
aam
mov
inc
roll
dec
outsb
imul
fs
pop
jne
add
push
add
fbstp
push
jp
push
ds
popf
add
icebp
pop
ljmp
cmp
push
adc
loop
in
mov
mov
fwait
outsb
jo
cld
and
popf
fwait
int3
test
xchg
add
dec
dec
sub
sub
push
cmpsl
imul
in
inc
mov
out
add
rcrl
mov
fldt
mov
pop
xchg
or
enter
mov
sbbl
cmp
pop
aam
push
adc
movsl
shlb
cmpsb
adc
cmp
stos
xchg
jns
stc
pop
int3
xchg
inc
sbb
push
push
inc
xchg
add
push
lret
jns
lock
or
icebp
pop
cmp
ljmp
movaps
lahf
mov
repz
ret
outsl
aad
ja
fldenv
icebp
sub
add
cmpb
sti
jns
sti
push
push
cmp
mov
add
mov
data16
dec
pop
add
add
icebp
mov
or
jnp
mov
scas
push
add
add
add
sahf
add
cltd
mov
in
aas
or
fidivrl
xchg
jbe
jnp
fstl
xchg
sbb
cmp
icebp
xchg
mov
inc
push
fadds
or
jg
mov
inc
adc
add
mov
imul
inc
push
add
mov
mov
add
sub
and
adc
icebp
gs
pop
push
adc
pop
or
mov
fcoms
and
sub
add
or
sbb
dec
cmp
or
in
sbb
out
add
push
clc
sti
sbb
enter
sbb
lret
push
mov
jge
or
dec
ficompl
jb
mov
or
xchg
hlt
out
loope
test
mov
mov
mov
dec
add
dec
idiv
jne
cmpsl
add
adc
lea
cmp
add
sahf
cmp
add
add
cs
adc
add
add
arpl
and
jg
sbbb
jle
loope
mov
ljmp
enter
pop
push
cmpb
fs
add
dec
aad
arpl
add
add
pop
inc
xor
fcmovne
add
in
jg
add
sub
push
add
mov
scas
mov
xchg
push
mov
add
jle
add
xchg
add
sbb
rcl
call
xchg
mov
aam
xor
add
add
push
cltd
add
adc
adc
daa
sti
arpl
arpl
loopne
add
add
pop
test
pop
push
mov
add
mov
mov
push
xchg
sbb
dec
adcl
push
call
ret
mov
add
lea
add
add
pop
mov
xchg
int
stc
pop
or
cwtl
gs
lods
add
add
loope
add
add
pop
cmpsb
sbb
add
or
jecxz
add
pop
stc
cmp
icebp
push
add
or
test
mov
cmpsl
fwait
out
jecxz
pop
addl
sti
push
adc
pop
add
xor
jp
ja
jo
xor
pand
pop
sbb
add
stc
mov
out
or
add
xlat
insl
cs
add
add
pop
mov
or
sub
pop
xchg
mov
adc
xchg
int
jg
inc
pusha
add
gs
jbe
mov
sub
scas
adc
mov
into
popf
mov
fcmovb
cwtl
ja
jle
cmp
push
repz
int
add
pop
cwtl
movsl
mov
pop
inc
icebp
push
nop
je
call
ljmp
add
jnp
adcl
cli
push
add
push
mov
xchg
mov
imul
xchg
in
cmpsl
fistl
add
jbe
add
add
aam
add
add
cmp
sbb
push
xchg
lock
jge
add
movsb
je
les
or
mov
scas
hlt
sub
sub
dec
lahf
fdivrs
sub
pop
adc
stos
outsb
notl
test
xlat
jmp
pop
scas
lahf
xchg
add
cmp
ret
dec
jb
in
jno
lret
mov
sub
sbb
xchg
add
pop
out
inc
fldl
jp
add
adc
add
pop
xlat
push
and
push
add
dec
add
das
ss
stc
jl
dec
cmp
add
xor
add
insl
fisttpll
addr16
xor
add
push
movsb
mov
stc
push
add
cmpsl
mov
mov
hlt
icebp
cmp
mov
add
xor
pop
cmovae
jnp
pop
mov
outsb
insb
dec
push
in
adc
dec
sub
insl
and
push
loop
jge
mov
icebp
sbb
cld
pop
mov
push
dec
cmp
movsl
je
rclb
cmp
in
mov
push
adc
pop
add
add
and
cmpsb
add
rolb
pop
or
xchg
out
xchg
sub
add
add
ret
lcall
jb
sbb
aaa
adc
scas
fadds
ret
add
add
sbb
add
and
xchg
flds
je
sub
and
lock
arpl
fiadds
ljmp
in
inc
pop
jbe
std
or
push
xchg
add
scas
mov
cs
mov
adc
jne
mov
inc
movsb
adc
out
pop
push
fistpll
js
xor
push
cmpb
out
arpl
xchg
test
fimull
mov
pop
and
add
add
or
xchg
jo
cmp
and
add
fcomi
insl
push
aam
xchg
into
repz
dec
aaa
sbb
into
pop
mov
mov
add
add
sbb
mov
jae
mov
pop
add
adc
dec
push
aad
push
mov
aam
stos
mov
add
dec
sub
add
mov
mov
and
inc
imul
out
subl
imul
add
cmp
cli
scas
jo,pt
ret
inc
dec
mov
mov
sarb
scas
add
lock
cwtl
push
sbb
out
sti
adc
lods
push
int
clc
das
fbstp
es
add
push
stos
xor
jg
es
adc
fildl
jo
mov
gs
push
mov
add
popa
bound
mov
cmp
xor
in
push
lds
push
sti
jg
rcrb
pop
add
sti
lret
add
in
mov
mov
dec
add
cltd
stos
pop
dec
std
in
xor
cmpsb
nop
mov
add
clc
add
cli
add
add
add
push
xchg
cs
ret
mov
xchg
xchg
or
shrl
out
mov
add
pop
xchg
daa
stos
jb
mov
and
adc
adc
lcall
push
test
fdivs
lods
stos
enter
ficompl
push
pushf
add
shrb
dec
add
add
outsl
xchg
xor
add
cmp
add
sub
std
adc
lret
cmpsl
adc
xchg
fwait
aad
pop
jne
add
out
imul
fsubrs
int
bound
add
stos
push
sti
das
push
js
insl
add
mov
jmp
orl
sahf
mov
nop
adcl
popf
popf
sbb
les
mov
lock
clc
xchg
push
xchg
add
stc
orl
ss
ja
push
add
and
mov
ror
bound
mov
test
roll
jg
or
int
adc
sbb
add
mov
pop
mov
jne
xchg
dec
icebp
xchg
mov
mov
xor
push
and
in
jb
movsb
or
mov
test
dec
pushf
jecxz
mov
nop
pop
scas
xor
das
mov
cwtl
repz
mov
lock
adc
sbb
xchg
push
and
add
cmp
roll
jno
xchg
rcll
and
out
testl
add
add
test
or
sub
sbb
in
cmpsl
add
adc
mov
ja
loope
aam
stos
mov
add
inc
jae
add
enter
andb
push
xor
aam
bound
or
mov
cld
pop
stos
dec
jb
lret
int
add
add
add
cmpl
popf
xchg
adc
push
inc
add
lock
roll
and
push
push
add
cmp
pop
cmp
mov
jp
or
andl
lds
loop
dec
add
xor
add
addr16
roll
add
testl
std
je
push
aam
pop
push
or
mov
add
xchg
add
pop
pop
int3
insl
sub
shll
shr
adc
lock
lcall
adcl
and
inc
sub
rclb
add
lahf
cwtl
dec
sbb
jae
mov
jbe
sub
cli
fldl
aaa
pusha
add
bnd
cmp
mov
aam
fisubs
mov
mov
push
cltd
int
add
ret
cs
int3
cltd
sub
sbb
sub
insl
add
adc
push
xor
test
add
push
xor
sub
test
insb
cwtl
adc
xor
insl
arpl
mov
mov
xchg
xchg
jnp
in
dec
push
imul
das
cmc
psubd
rorb
add
int
jecxz
mov
add
leave
nop
add
push
outsl
jmp
cmpsb
leave
ja
mov
jo
jmp
dec
add
jmp
lret
mov
daa
leave
mov
cmpb
les
push
jo
add
jne
std
cmp
les
mov
push
mov
add
in
mov
leave
cmp
and
xchg
sbb
adc
pop
and
mov
or
jne
cmpsl
add
sub
or
dec
jg
lret
push
xchg
popa
adcb
jnp
jae
cli
out
sbb
sbb
cmpsb
test
inc
aad
lods
ret
cld
add
jmp
lds
pop
aam
add
lcall
pop
or
test
fldt
cmp
add
add
mov
push
or
decl
test
pop
mov
cmpsl
dec
in
les
sub
add
insb
sub
cmpsl
cmp
mov
ret
xchg
jno
pop
cli
test
xor
mov
gs
pop
lea
push
scas
add
movsl
jb
mov
stos
inc
mov
mov
mov
sbb
xchg
add
sbb
inc
mov
int
xchg
mov
test
add
ret
loopne
sbb
mov
daa
stos
add
jg
stc
mov
cmp
addr16
fdivp
icebp
or
mov
test
add
jle
adc
sbb
push
mov
mov
dec
pop
in
cmp
jae
test
clc
mov
shl
sub
jge
into
iret
movl
adc
xchg
add
icebp
dec
test
test
inc
outsb
pushf
xchg
xchg
add
stc
in
push
pop
pop
add
add
add
insb
mov
mov
add
mov
push
pop
fbstp
movsl
out
xor
ljmp
cmp
inc
mov
pop
leave
cmp
pop
pop
cli
pushf
pop
mov
xor
inc
sbb
pop
std
add
test
lahf
or
movsl
inc
fistps
addl
andb
cltd
dec
es
iret
or
sub
call
pop
sahf
or
push
cmp
or
push
xchg
dec
and
cs
mov
xchg
dec
ss
loop
jno
sbb
pushf
mov
inc
lret
dec
pop
xor
jmp
mov
jno
mov
xchg
dec
mov
std
addl
jns
mov
ljmp
xchg
out
cmp
mov
sti
scas
add
push
sub
inc
orb
xlat
push
sub
fsubl
add
add
jb
std
nop
mov
push
add
push
rclb
adc
mov
lds
fcoms
adc
sub
add
push
sub
loope
xchg
imul
add
sub
cmp
notl
sub
addl
sbb
dec
add
div
adc
imul
jnp
sub
ds
inc
lock
push
mov
and
cltd
pushf
xchg
inc
mov
add
mov
cmp
add
mov
add
cs
pop
push
subl
add
or
add
pop
add
cmp
dec
push
mov
push
lret
out
roll
in
add
push
jge
push
sbb
mov
je
in
scas
lcall
xor
fistpl
fcomps
popl
and
xchg
dec
les
adc
or
aas
lds
data16
out
mov
addr16
loope
sub
gs
or
or
or
add
mov
lahf
lahf
xchg
aaa
out
bound
testl
add
inc
add
lcall
mov
push
mov
aaa
into
add
pushf
jecxz
pop
std
mov
add
push
shrb
jmp
jns
pop
add
add
pop
mov
add
and
mov
scas
das
xchg
enter
les
fnstcw
sarb
dec
lea
into
mov
dec
add
or
pop
ret
loope
jno
ret
fidivs
sub
repnz
mov
adc
popa
ret
add
mov
xchg
xor
or
cmpsl
repnz
mov
adc
ret
sub
xchg
add
nop
faddp
add
test
scas
add
push
dec
lea
and
test
mov
sub
test
rolb
lahf
hlt
test
pop
imul
pop
and
or
popa
mov
hlt
mov
push
jg
dec
jl
aaa
add
and
aad
jmp
shlb
cmp
xchg
sbb
mov
lods
flds
jb
pop
pop
add
mov
adc
mov
xor
add
mov
cmpsl
push
roll
das
add
add
sbb
sti
add
sub
jno
movsb
sub
cwtl
ds
fcomps
stc
mov
cmp
jecxz
stos
sbb
inc
insl
stc
sbb
push
lods
xor
or
xchg
adc
clc
insl
cmpsb
xor
leave
dec
xlat
add
cmp
data16
add
and
push
mov
fsts
in
stos
dec
sti
ret
add
scas
out
test
sar
add
pop
add
mov
shl
int
xor
add
add
cmp
cmp
inc
inc
sahf
js
xchg
das
mov
or
std
cmp
mov
ret
in
add
or
xchg
dec
movsb
insl
xchg
sbb
je
sbb
loop
jle
pop
mov
call
sbb
cmpsl
cmp
les
add
add
mov
mov
jl
fldt
adc
add
lods
xor
add
dec
enter
xlat
mov
or
push
movb
stos
imul
mov
outsl
fnstsw
cli
push
cmp
into
lcall
push
inc
rcrl
adc
stos
aaa
add
add
fisubs
sbb
jns
add
pop
push
ret
add
add
and
add
int3
add
pop
add
lea
aas
call
adc
test
sbb
popa
dec
movsb
add
roll
dec
push
cmpsb
xchg
fwait
add
addl
xor
mov
or
pop
jge
gs
mov
sub
mov
mov
or
test
js
add
ja,pt
mov
mov
es
mov
add
movsb
add
pusha
fwait
mov
and
xor
add
add
mov
movsl
adc
dec
pushf
imul
jo
jae
lcall
fcomip
sbb
outsb
mov
lea
arpl
or
xchg
xlat
rorb
cmp
add
sti
mov
xchg
mov
fisubrs
add
push
test
mov
lret
fldpi
mov
repz
or
cs
je
sbbb
add
repz
mov
add
or
jp
push
call
or
push
mov
enter
aad
addr16
in
push
aad
arpl
xchg
repnz
adc
fisubrl
test
push
xor
fs
push
push
add
inc
ss
movsb
push
pusha
jne
dec
scas
mov
cmp
stos
incb
imul
dec
cmp
test
add
ret
int
sbb
imul
rolb
add
push
adc
push
add
cmp
idiv
xor
pop
mov
ss
add
out
inc
push
test
into
add
xchg
aaa
push
add
inc
popa
adc
mov
icebp
mov
pusha
mov
add
mov
pop
pop
xor
add
or
and
mulb
add
adc
rcll
push
sub
sarl
pop
subb
cmc
push
mov
xchg
std
insl
xchg
outsb
fcmovu
push
popf
xchg
adc
xchg
ficomps
sub
dec
add
les
inc
sbb
in
dec
fidivrs
push
stos
out
stc
in
jbe
inc
add
push
jge
lret
mov
add
aam
sti
add
add
clc
pop
add
nop
aad
add
enter
push
add
leave
roll
mov
and
add
push
jmp
roll
add
push
pop
add
daa
scas
inc
pop
add
add
add
add
fwait
lea
mov
idivl
fs
mov
push
ret
rolb
pop
jae
push
adc
add
and
jb
push
jae
xlat
movsb
lahf
push
add
int3
push
fcomip
sti
lret
mov
leave
mov
mov
imul
loopne
lods
clc
xor
int
sbb
add
mov
push
add
iret
std
add
mov
and
or
aad
push
iret
jp
jmp
filds
add
nop
enter
or
rclb
in
mov
inc
rep
adc
dec
into
xchg
int3
cmp
add
aas
or
fisubs
xchg
add
popf
lock
incb
xchg
add
lret
add
xor
add
sub
je
test
sbb
sub
adc
str
faddl
inc
xchg
dec
dec
sbb
push
leave
movsb
adc
mulb
call
bound
xchg
add
rclb
adc
add
fadds
xchg
call
sub
das
push
cli
mov
add
add
cmpsb
push
xchg
cmpsb
lret
sbb
in
mov
sub
cld
movsl
push
push
cmp
sub
imul
popf
cli
cld
push
sbb
add
dec
add
pop
add
lahf
out
rolb
add
bound
pop
subl
filds
jb
add
add
sahf
aaa
mov
mov
cmpsl
pshufw
sbb
insl
jge
add
add
add
and
sub
xchg
add
lcall
add
fiaddl
xchg
xlat
mov
inc
mov
mov
cmp
imul
outsb
add
ret
xchg
add
pop
stos
sbb
jae
flds
pop
mov
adc
xor
sub
jmp
test
xchg
lock
mov
int3
bound
adc
adc
cltd
repz
ljmp
sbb
add
lds
ja
jle
push
aam
lret
jp
aaa
test
sub
mov
mov
dec
jge
call
lods
sbb
mov
mov
subl
add
inc
push
push
add
xor
mov
sub
pop
aas
repz
icebp
cltd
pop
xchg
mov
xchg
dec
lahf
add
and
sub
loope
repnz
push
xchg
adc
pushf
push
sub
fcomi
mov
cmpsl
jmp
mov
aad
fldl
push
cmp
fs
or
leave
mov
mov
aad
push
frstor
jb
xor
mov
and
cmp
add
xchg
mov
int
gs
xchg
add
inc
xor
faddp
test
pop
repz
xor
xor
adc
lret
aam
push
pushf
pop
fldenv
in
call
sahf
pop
call
in
aas
adc
mov
jmp
inc
or
pop
push
in
jmp
dec
out
lods
mov
xor
jb
sub
scas
adc
mov
mov
enter
xchg
std
js
lods
ss
jmp
cmp
pop
cmpsb
insb
or
add
es
enter
add
fwait
add
pop
fistl
stos
mov
aam
and
jbe
add
mov
mov
lahf
adc
cmpsl
or
stc
in
lcall
aam
add
cwtl
sub
hlt
mov
fiadds
mov
xchg
mov
mov
jnp
inc
aaa
fisttpll
sub
push
aas
jo
dec
ljmp
call
mov
push
call
sub
mov
mov
jge
sbb
aad
cmp
push
add
adc
jmp
add
cmp
je
rorb
fstpl
pop
movsl
push
cmp
xor
scas
jge
pop
or
sbb
pop
repz
aad
fdivs
frstor
in
xchg
xor
xchg
sub
movsb
push
pop
lods
sti
repnz
mov
out
adc
cmpsb
cmpsl
sbb
cld
mov
dec
add
adc
scas
test
lods
jbe
sahf
jmp
ja
inc
adc
add
inc
pop
int
dec
jns
jbe
xchg
fs
mov
loop
adc
jecxz
pop
pop
mov
shrl
in
cmp
xchg
xchg
ljmp
out
pusha
mov
data16
cmp
test
rorl
cld
mov
pop
mov
stos
call
stos
and
js
loop
lahf
sbb
lret
add
mov
cld
mov
mov
cmp
inc
nop
sbb
push
xchg
test
leave
pop
stos
mov
xchg
xor
cmp
mov
jmp
mov
mov
rorb
jb
cltd
mov
outsl
xor
adc
add
aad
or
daa
arpl
push
dec
add
ss
dec
or
add
dec
mov
add
add
out
loop
jmp
add
mov
cli
adc
mov
aaa
and
push
scas
aas
cmp
push
mov
leave
fcoms
fldt
or
clc
pop
add
add
pop
cmp
add
loopne
lcall
add
lods
cmp
jno
ret
push
fistpll
jnp
pop
sarb
mulb
sub
das
outsl
add
push
jae
xchg
add
sahf
movsl
xchg
mov
dec
mov
negb
add
push
mov
add
cltd
fildl
mov
mov
push
fcomp
push
mov
jl
popf
and
add
inc
cmp
clc
mov
mov
push
lret
add
arpl
mov
jp
push
loope
dec
add
pusha
adc
xchg
mov
movsb
adc
pop
or
aad
push
inc
xor
mov
int3
add
pop
cltd
pop
jb
fldl
jb
fdivs
popa
sub
out
clc
adc
push
lcall
cs
dec
xchg
nop
lock
cmp
jnp
movsb
add
add
pop
popa
pop
mov
jae
xor
aad
mov
push
add
inc
add
lea
cltd
mov
push
push
adc
fisttpll
aaa
add
dec
test
add
lahf
adc
int
inc
aas
xlat
std
add
lock
pop
inc
pop
mov
dec
sub
cli
adc
enter
faddl
int
push
mov
add
jp
adc
fwait
lock
add
mov
int3
jl
ljmp
cmp
mov
mov
lods
add
jmp
mov
stos
inc
push
testb
scas
mov
cmp
adc
mov
sbb
lret
add
add
add
add
mov
add
sbb
imul
mov
in
rcll
add
leave
enter
add
add
popw
insb
add
fmulp
lods
inc
out
cs
int3
mov
mov
pusha
pop
sti
push
push
cmc
xchg
fs
rcl
or
dec
push
dec
add
mov
lods
pop
ljmp
sbb
dec
pushl
pop
cmpsb
sahf
sbb
add
je
testb
stos
inc
inc
xchg
imul
lea
push
add
add
jb
adc
add
gs
loop
fidivrs
push
jle
jnp
push
or
add
add
jae
mov
push
mov
in
xor
pop
xlat
test
adc
mov
pushf
leave
add
sub
in
mov
mov
dec
xor
dec
add
jecxz
ret
icebp
adc
scas
xchg
adc
push
inc
in
pop
xor
mov
fxam
add
mov
inc
popa
push
insb
pop
shll
mov
ret
ror
jge
insl
call
xchg
push
movsb
sub
cmp
inc
jb
sub
aad
orl
dec
pop
add
sbb
push
cmp
adc
push
mov
mov
jge
fldl
int
insl
jg
add
jge
add
add
push
fdivrl
mov
cli
lcall
mov
imul
mov
mov
rol
fildll
ljmp
in
inc
pop
push
xor
rcrl
dec
inc
jo
imulb
push
mov
pop
add
cmc
dec
sarl
push
mov
xor
mov
cmp
pop
loope
fmull
xor
add
add
loope
adc
sbb
loope
add
lahf
and
mov
sbb
add
mov
sbb
mov
js
dec
cmc
add
inc
sbb
pop
scas
mov
aad
in
xchg
or
shll
sub
inc
mov
out
add
push
sti
into
adc
imul
nop
jne
add
lods
add
in
test
outsl
lds
test
and
and
add
mov
sbb
fwait
out
xchg
xlat
mov
mov
into
mov
fwait
outsb
mov
aaa
adc
sbb
xor
cs
out
sarb
mov
mov
inc
add
push
add
fs
shr
popa
add
lea
fstl
cmc
pop
mov
int
test
bound
fs
sub
mov
xchg
push
cmovp
stos
mov
mov
push
cmp
mov
xchg
mov
sbb
aad
fists
cltd
dec
add
xchg
sbb
xor
lahf
or
stc
aas
xchg
or
add
daa
add
aam
dec
addl
jae
lahf
mov
jg
cltd
mov
mov
pop
pushf
pop
mov
leave
push
add
dec
loopne
sbbl
xchg
aad
aam
and
and
mov
lods
pop
sbb
loop
push
shll
outsb
or
xor
fsubrl
push
add
cld
ret
mov
leave
or
lea
pop
add
add
and
add
sub
jnp
add
repz
dec
pop
jno
push
inc
add
mov
jg
mov
add
frstor
faddl
jmp
and
inc
adc
shll
inc
sub
js
sti
cmp
xchg
adc
mov
add
or
mov
lock
jne
mov
xchg
inc
add
incl
into
ljmp
aam
insl
sahf
adc
aaa
mov
out
nop
push
add
and
mov
les
leave
mov
jns
ret
and
cltd
jns
inc
pop
pop
or
mov
mov
pop
insb
in
adc
jle
ror
pushf
mov
cwtl
add
mov
mov
arpl
mov
push
dec
push
fadds
das
sub
fiadds
jmp
xor
push
mov
pusha
scas
inc
and
mov
rorl
rclb
int3
jmp
mov
pop
dec
push
lock
fdivl
add
mov
mov
jae
cmp
mov
test
sbb
sahf
cmp
icebp
pop
ja
in
insb
pop
pop
popf
adc
cmc
out
add
pop
add
pop
loop
sub
mov
repz
jae
cwtl
add
movsl
xor
add
loope
add
push
jp
aad
stos
scas
jo
add
ja
pop
sbb
cmp
loope
push
sub
lods
je
leave
pop
lahf
sub
mov
mov
jp
pop
mov
jae
jns
hlt
xchg
popl
ret
stos
adc
jnp
add
mov
arpl
mov
xor
lds
test
pop
mov
pop
test
mov
cs
lahf
mov
add
aad
cmp
lds
push
jle
hlt
fwait
scas
cmpsb
mov
pop
call
lret
repnz
les
or
stos
push
and
lods
fimull
mov
add
xchg
jns
into
add
cmc
int
pop
mov
xorb
dec
sub
dec
lahf
lcall
sti
add
testl
mov
add
add
mov
iret
arpl
add
push
and
mov
jb
movsb
xlat
mov
ret
add
sub
add
loopne
sbb
in
add
inc
pop
dec
mov
mov
inc
aaa
aaa
push
and
add
xor
aad
inc
lea
push
jle
sub
push
jnp
das
iret
inc
fmulp
sbb
nop
lahf
add
mov
ret
test
std
add
push
add
add
mov
mov
pop
cmpsb
test
pushf
ret
dec
mov
clc
data16
stos
xchg
inc
xlat
ret
add
dec
dec
out
nop
inc
iret
jo
dec
dec
mov
add
insb
add
dec
add
sbb
into
dec
pop
enter
or
pop
das
mov
add
addr16
cltd
call
dec
dec
and
dec
xor
sbb
or
test
pop
sbb
int
test
or
add
dec
add
icebp
in
mov
lret
movsl
jmp
sub
clc
or
push
pop
xor
add
lea
outsb
rclb
xchg
add
xchg
xor
insl
add
mov
or
and
cli
cltd
pop
cli
push
or
ds
mov
neg
pop
adc
jae
cmc
nop
insb
pop
add
loop
jl
add
addr16
jmp
ret
xor
int3
sbb
mov
testl
mov
cs
sarl
jl
es
ficoms
adc
ret
out
sub
cmp
fmuls
xor
js
ret
mov
outsl
outsb
add
pop
mov
pushl
mov
addr16
add
lock
inc
rcrb
aam
push
pop
mov
mov
dec
mov
pop
and
test
dec
popf
sti
adc
insl
dec
jb
les
jno
add
mov
cld
cmp
or
pop
ja
jl
repnz
lret
cmp
stc
and
pop
jp
out
add
imul
cmp
lods
int3
stc
add
ja
and
neg
mov
push
sbb
jg
mov
jmp
sahf
jge
mov
sahf
add
jne
fimull
faddl
out
mov
icebp
add
pop
add
mov
ret
xchg
stc
add
enter
mov
ja
mov
int3
mov
jae
mov
mov
or
inc
jmp
xchg
xorl
pop
push
shrl
push
notb
enter
push
imul
cltd
cmp
add
sub
or
sbb
insb
ja
inc
add
mov
cmc
xchg
daa
mov
pop
adc
xchg
add
inc
jp
add
add
add
jg
dec
add
xchg
icebp
or
clc
int
jnp
loop
cs
sbb
add
pop
mov
push
inc
push
add
scas
jp
ret
push
lods
adc
orb
loopw
stos
pop
pop
push
add
std
push
pop
xchg
fs
test
add
add
daa
and
pop
aas
add
sbb
cmp
add
mov
popa
xchg
adc
shrl
or
fs
sub
adc
add
adc
mov
sub
loop
adc
and
ds
fnstenv
cmp
outsl
add
mov
cwtl
mov
cmc
cmp
xor
mov
pop
push
cmpsb
add
fcmove
jl
lret
test
add
arpl
xchg
adc
jl
dec
and
fcmovnu
test
adc
add
add
es
lods
stos
pop
mov
add
clc
pushl
xchg
aaa
push
into
and
dec
int3
lods
inc
add
lock
xchg
add
dec
ljmp
das
or
into
call
cmp
mov
es
aad
sub
push
incb
rcrl
cmp
ja
ret
add
imul
xchg
mov
ljmp
lods
rorb
loopne
xchg
out
dec
push
bound
in
add
in
add
fdivr
out
add
setb
loopne
xchg
mov
or
add
sub
or
xchg
in
adc
cli
outsb
push
adc
xchg
inc
mov
aas
mov
mov
mov
arpl
add
fistpll
icebp
push
out
cmp
call
cmp
jb
fidivs
and
shll
inc
lods
adc
and
adc
int3
add
jle
push
arpl
jne
dec
scas
divl
rol
ss
mov
add
stos
or
scas
mov
mov
push
inc
loopne
daa
loop
lret
xlat
jns
jae
aaa
sbb
add
cmp
mov
dec
sbb
jmp
jle
ja
and
aam
xchg
cmp
popf
cmp
mov
cmp
jo
call
out
sarl
out
add
jecxz
sti
add
ds
mov
sub
repz
jo
arpl
add
lods
xor
lret
dec
mov
xchg
add
jp
sarb
cli
das
sbb
add
jb
cmpsl
stos
lds
push
add
fnstsw
lahf
pushf
inc
jno
xor
add
jmp
add
sbb
add
dec
fwait
loope
cmp
in
push
cwtl
xor
or
add
adc
pop
and
mov
mov
jae
bound
call
mov
pop
cmpsl
js
xchg
movsb
movsb
or
mov
data16
shlb
dec
push
fidivl
sbb
add
xor
out
and
push
push
pop
add
mov
cmp
pop
add
dec
cmpsb
dec
jp
jne
sub
js
dec
in
int3
insb
push
iret
pop
adc
cmpsb
xor
mov
xchg
add
push
adc
imul
std
add
jae
jp
js
push
aam
lret
cmpsb
nop
or
and
jbe
or
mov
mov
fnsave
jecxz
or
aaa
hlt
sub
jg
aaa
and
in
ljmp
push
pop
rolb
mov
fiadds
movsb
mov
jle
faddl
mov
xchg
mov
xor
inc
add
iret
jp
aad
add
cmp
bound
pop
add
out
add
lods
arpl
loopne
dec
imul
add
cld
jecxz
lret
pop
pop
add
subb
xor
mov
and
add
xlat
push
pusha
aam
sbb
sbb
or
ret
aam
bound
add
filds
enter
popf
add
mov
lcall
pop
imul
fcomps
xor
ljmp
jmp
aas
inc
mov
add
mov
adc
imul
add
sbb
xchg
sub
and
insb
cmp
lahf
dec
sub
js
icebp
jne
cmp
enter
push
faddl
xchg
pop
jo
out
loope
and
das
aam
add
push
add
repnz
pop
jle
lret
test
add
test
dec
nop
add
add
pop
stos
inc
adc
int
jae
mov
sub
repz
jae
pop
jns
xchg
jae
and
add
sarb
push
inc
add
sbb
ljmp
lret
loope
add
mov
add
mov
inc
jl
idiv
data16
and
adc
sbb
sbbb
jge
adc
mov
sbb
add
mov
rcrb
xchg
inc
sahf
push
xchg
add
adc
daa
add
ljmp
dec
insb
add
xor
mov
aas
pop
mov
push
sbb
dec
jb
cmpsl
jnp
mov
movsb
daa
mov
add
into
pop
cmp
push
add
nop
add
lds
add
sbb
pop
loopne
jge
cld
xlat
add
add
push
adc
scas
fdivrs
mov
aaa
jmp
add
fmul
and
out
jb
int3
das
insl
sbb
sahf
aas
and
and
fadd
add
add
scas
into
or
cmpsb
popa
inc
jg
scas
fwait
pop
fwait
inc
cmp
dec
clc
adc
inc
pop
jno
test
pop
sbb
ret
push
sahf
cwtl
mov
in
and
outsb
sbbb
adc
push
inc
mov
jbe
add
ljmp
add
add
aaa
adc
add
lods
sub
xor
sub
imul
dec
fmul
stos
std
in
add
lahf
arpl
enter
out
ss
adc
and
test
loop
jnp
stos
sbb
jne
sbb
add
pusha
add
sahf
mov
add
pop
pop
xor
add
dec
aas
movsl
jmp
pop
fwait
incl
hlt
mov
std
add
cltd
sarb
xchg
push
cmpsb
inc
incb
add
repnz
and
pusha
sbb
lods
lods
lods
gs
add
imull
adc
arpl
mov
xchg
lds
les
pushf
fimull
je
add
fsubl
adc
push
orb
inc
fistpll
mov
add
lds
jne
inc
cmp
mov
cmpsb
push
inc
push
sahf
mov
jns
pop
in
add
jne
sub
imul
sahf
xchg
jo
icebp
imul
add
and
subl
lods
orb
add
mov
sbb
inc
out
lcall
add
lret
cwtl
xchg
adc
lahf
pop
data16
sub
fbstp
jb
xor
call
add
pop
adc
adc
stc
data16
mov
cmp
add
cmp
push
sbb
jmp
xor
add
inc
dec
leave
add
sub
add
repnz
hlt
scas
std
jae
inc
stc
mov
es
push
cmpsl
add
insl
sub
jno,pt
gs
repz
inc
add
mov
popa
daa
sahf
dec
pusha
add
mov
add
mov
sbb
xchg
or
movsl
fistl
xchg
pop
pushf
xor
mov
and
add
sub
gs
aam
loopne
fnstcw
stos
fwait
push
push
mov
or
sahf
inc
ja
stos
dec
aam
adc
stos
push
push
lods
add
mov
or
testl
mov
iret
loope
push
add
cmpsb
or
shl
lds
cmp
clc
roll
add
add
jl
mov
cmpsb
add
addl
stc
or
cmp
hlt
add
push
lret
repz
scas
mov
scas
das
sbb
jbe
insb
xor
add
xor
sub
or
jo
orl
mov
pusha
push
adc
add
cs
push
and
push
add
mov
dec
outsl
int3
sahf
adc
popa
pop
out
fwait
popa
add
add
outsb
scas
mov
or
mov
inc
push
call
sahf
add
and
faddl
stc
adc
fimuls
fs
or
in
mov
sar
add
adc
add
lret
cmp
les
dec
cmp
outsb
imul
arpl
mov
sbb
nop
or
push
jl
jne
sbb
repnz
decb
lahf
add
add
jns
add
adc
repnz
adc
dec
fsub
scas
arpl
xor
add
add
dec
cld
add
inc
gs
push
pop
lea
xor
mov
mov
data16
repz
push
cmpsl
mov
fs
adc
shlb
movb
mov
stos
sub
add
iret
out
mov
popa
filds
add
or
add
xor
mov
nop
test
sub
call
aad
pop
jae
sub
mov
mov
pop
fcomps
les
add
adc
dec
arpl
mov
xor
xchg
add
fdivrs
fldenv
das
cmp
scas
in
xor
dec
or
imul
cmp
jo
shl
mov
mov
jmp
pop
add
or
mov
std
dec
out
mov
repz
dec
jo
in
lds
xor
sbb
insb
mov
rclb
add
dec
jg
mov
inc
adc
cwtl
ds
pop
fwait
add
stos
shrb
fucomp
repz
movsb
lods
jbe
out
and
mov
add
lret
pop
add
add
sti
stos
dec
add
fsubl
xchg
and
cmp
aad
roll
lods
xor
ljmp
scas
ds
add
lea
lret
ficoms
add
sub
fs
popa
add
add
shlb
add
add
xor
out
mov
xor
addr16
push
ret
dec
aas
push
push
leave
orb
adc
std
inc
arpl
shll
add
repz
cs
decb
mov
pop
cmp
jno
loop
mov
in
cmpsb
call
or
addb
clc
adc
imul
sbb
loopne
mov
test
gs
arpl
ja
call
je
add
mov
jmp
jns
mov
mov
cmp
mov
dec
mov
sar
add
add
iret
leave
imul
rolb
mov
test
push
add
es
add
jecxz
mov
jge
loopne
push
add
cld
sub
add
push
mov
add
mov
and
xchg
push
cld
and
add
add
mov
mov
mov
inc
add
sub
sti
cltd
and
add
xchg
mov
repnz
adc
movsb
test
or
jo
scas
dec
jns
dec
xchg
pushf
add
mov
fmul
add
call
scas
jnp
outsb
mov
xchg
out
arpl
sarb
cwtl
push
repz
xor
mov
jle
fmul
inc
mov
add
push
lret
cmp
add
push
sahf
insl
in
add
movsb
add
sbb
xchg
xchg
sarl
add
cld
fmull
or
add
xchg
add
xor
aad
lock
das
xor
imul
sti
mov
loop
and
loop
div
enter
mov
sbb
xor
rol
sbb
mov
aaa
nop
sti
orb
lock
fdivrs
pop
add
jbe
movb
sbb
frstor
pusha
jbe
in
adc
inc
add
add
sti
jl
sbb
xchg
add
fstl
loop
mov
cmp
and
sbb
and
aam
testb
je
dec
add
or
mov
rcr
cld
add
aas
hlt
dec
jo
adc
add
insl
pop
cmp
clc
push
fbstp
lcall
in
add
insl
es
add
cmp
clc
add
arpl
xor
rolb
lock
cmp
add
add
frstor
cli
cwtl
lock
jmp
sahf
pop
sub
xchg
inc
loopne
add
rcr
pop
adc
cmc
mov
add
movsb
add
adc
jnp
xchg
hlt
loopne
pop
je
fadds
repnz
xchg
movsl
pop
cmpsb
sahf
mov
in
js
add
fmuls
jmp
repnz
add
add
stos
add
int3
scas
adc
repz
push
sub
mov
or
add
lods
aas
add
sub
mov
push
xchg
mov
push
lds
fldl
add
push
rcrl
in
add
fwait
lds
cmp
aaa
mov
aas
cmpsl
or
pop
pop
movsl
cmp
xlat
and
mov
sub
stos
lods
fimuls
jmp
add
sahf
mov
dec
lea
inc
in
add
int3
sub
addb
outsl
pop
add
mov
das
out
add
add
leave
fcompl
cmpsl
lahf
add
sub
clc
add
sbb
add
rclb
add
orb
sub
jno
inc
imul
add
add
lret
jle
dec
or
cmp
in
fdivs
add
pop
sub
mov
mov
push
jb
roll
mov
leave
pop
add
xchg
out
test
aam
mov
cwtl
mov
sbb
test
add
sarb
jp
addl
frstpm(287
adc
lahf
sti
add
pop
sub
push
adc
add
add
cld
push
andb
pop
push
fst
push
pop
pop
shr
cmpsb
rclb
add
dec
mov
loopne
imul
sbb
xchg
push
idivl
xchg
pop
add
mov
add
mov
ret
xor
pop
popa
pop
movsl
push
test
mov
mov
jns
ret
ja
pop
add
mov
shrl
int3
std
dec
mov
test
mov
xchg
push
aas
arpl
lods
add
add
mov
test
adc
or
jae
outsb
mov
addr16
inc
lods
add
and
or
loope
imul
inc
mov
add
aas
lret
push
imul
or
add
pop
subb
inc
pop
sub
out
pop
imull
mov
pop
push
ja
mov
fsub
jmp
sub
mov
xchg
test
jge
cmp
dec
js
adc
add
cmpsl
shrb
sbb
das
verr
test
push
in
in
sarb
stos
push
push
pusha
jnp
hlt
xor
cs
cmp
bound
ret
popf
iret
out
stc
cmp
sub
imul
js
jne
sub
pusha
xchg
fcmovne
data16
and
sahf
insb
rcll
pop
lret
jb
lcall
or
rcll
jb
sub
insb
hlt
fidivrs
movsb
cmp
mov
mov
mov
xchg
pop
aas
add
or
or
enter
sahf
arpl
cli
add
mov
jge
xlat
add
xchg
pop
rolb
pop
add
mov
add
add
add
mov
or
test
mov
stos
add
xchg
ret
add
testb
add
sti
scas
add
add
pop
mov
rorl
roll
cltd
push
add
ret
add
fsubrp
mov
rolb
enter
xchg
loop
test
sub
push
stos
pop
inc
add
pop
in
jmp
cmp
mov
stc
into
cmp
or
mov
add
loopne
dec
loope
push
mov
mov
mov
and
xor
popa
enter
fmull
aas
jo
jecxz
lods
push
sti
dec
stos
cmp
mov
aas
ja
add
fldl
lock
xor
jl
test
jo
imul
pop
push
bound
cmpsb
adc
add
data16
ficoms
shrl
mov
add
push
aaa
jecxz
mov
scas
stc
ss
sbb
or
add
cmpsb
stos
add
mov
insl
push
jae
add
sbbl
lret
fists
jb
fidivl
add
xchg
jno
xchg
add
cmp
add
xchg
in
fcmovnbe
stos
add
pop
shrb
pusha
test
sub
mov
popf
lods
pop
stc
inc
mov
cmp
inc
mov
ror
mov
xor
aaa
divl
out
test
add
xchg
repz
std
enter
inc
push
mov
mov
push
and
std
pop
test
scas
insb
lcall
repnz
add
lods
dec
sub
test
sbb
xor
pop
cmp
jnp
int
add
adc
jae
call
adc
add
jp
ljmp
hlt
lret
clc
mov
ljmp
ret
hlt
add
xchg
pushf
push
or
add
inc
cs
pop
add
push
adc
jo
les
aad
add
sbb
sbb
mov
adc
xchg
cmpsl
icebp
xor
add
and
iret
add
sub
push
pop
or
mov
add
gs
add
lock
lret
sbb
add
push
jmp
push
scas
notl
cmpsl
add
leave
add
outsb
fldl
daa
pop
cwtl
in
sub
jecxz
dec
pop
sbb
ret
out
rcll
sub
aas
jae
add
fadds
ds
mov
fdivl
test
and
arpl
lea
test
push
inc
add
fdivrl
fdivl
sbbb
cmpsb
or
es
call
xor
in
and
mov
jns
leave
adc
mov
pop
mov
dec
add
sbb
sbb
fsubrs
pop
dec
es
pop
outsl
fcmovu
mov
fwait
jmp
testb
cmp
ret
add
pop
cltd
push
movsb
std
jmp
xchg
mov
aad
or
es
xchg
add
repnz
add
lret
pop
sub
leave
mov
lods
insb
push
jns
add
gs
push
mov
jl
sub
and
nop
insb
movsl
add
popa
jp
data16
xchg
pop
mov
dec
xlat
jle
outsb
xlat
stos
es
mov
fmul
xchg
stos
ret
clc
push
jge
lret
mov
push
xchg
xchg
mov
sbb
fiadds
add
repz
dec
add
jge
ljmp
add
push
pop
es
sub
add
dec
ja
outsb
add
stos
sbb
mov
add
fsubl
rorl
lds
sub
dec
jae
pop
repnz
sub
es
pop
xchg
cmp
ja
sub
call
dec
add
adc
jg
into
mov
add
imul
sbb
add
sub
inc
jge
lods
pop
fstps
mov
icebp
push
mov
sub
lds
xchg
jns
mov
cmp
sbb
fidivrs
jg
das
cltd
add
pop
add
pusha
pushf
jecxz
add
push
jmp
jae
xchg
cs
adcl
lahf
cli
xor
mov
repnz
xchg
add
addr16
add
pop
xchg
scas
dec
stos
add
add
js
imul
cmc
inc
dec
jnp
inc
jo
mov
or
add
inc
je
aam
pop
loope
lcall
sub
adc
push
mov
sahf
add
mov
mul
popf
adc
mov
rcrl
sub
mov
mov
cmc
push
cs
rclb
imul
and
aaa
or
add
jbe
and
xchg
adc
push
xor
push
push
sbb
jo
adc
dec
add
add
test
test
sub
xor
jo
imul
shll
andl
loope
add
testb
movsb
in
add
cmp
and
cmc
cmpsl
les
pop
cmpsl
pop
std
fimull
pushf
out
and
int3
mov
cs
add
sub
scas
ja
mov
dec
push
mov
je
mov
inc
push
jecxz
mov
add
mov
stos
test
xor
add
outsl
add
out
add
mul
push
dec
mov
xchg
daa
loopne
adc
mov
or
cmp
pushf
cmp
outsb
arpl
add
push
pop
mov
pop
mov
or
hlt
push
ror
add
test
andl
test
lea
mov
cmpsl
pop
add
add
js
mov
lahf
mov
xchg
call
outsl
movb
mov
pop
dec
and
roll
in
lds
addr16
add
je
push
jae
and
pop
cmp
cmp
sbb
fsub
stc
jb
inc
pop
inc
test
add
ja
jno
insb
inc
in
addr16
mov
cwtl
add
scas
int
add
xor
pop
sub
cmpsb
js
add
mov
push
sbb
pop
add
dec
mov
add
inc
inc
mov
sbb
add
add
add
add
repz
pop
fistps
sbb
data16
jmp
adc
int3
ret
fdivrl
test
stc
jg
add
and
pop
out
movsb
addr16
cli
sti
jmp
decb
push
scas
orb
mov
mov
outsb
pop
add
dec
add
xor
aas
leave
rol
jbe
cmp
stos
mov
bound
idivb
sub
cmp
mov
add
mov
add
dec
or
daa
outsb
xor
repnz
jno
pushf
add
rcl
popa
or
add
shlb
sub
pop
call
test
imul
out
fiadds
ret
add
jge
addr16
jns
cmpl
es
test
insb
push
les
mov
cmc
dec
xchg
xor
or
add
rcrl
push
fnstcw
mov
sahf
hlt
fmuls
mov
jno
fs
pop
out
jp
aas
cltd
mov
jnp
sub
mov
das
mov
dec
int3
dec
mov
mov
add
mov
hlt
lret
mov
and
test
push
mov
movsb
rcl
in
ljmp
test
add
and
jne
test
icebp
push
incb
call
or
xor
int
sbb
push
dec
jge
push
fidivrs
movsl
cmc
int3
add
inc
sbb
dec
add
push
outsl
add
push
add
loop
out
pushf
idivb
rcrl
cmp
adc
xchg
bnd
adc
add
add
cmpsl
xor
push
lea
mov
xchg
mov
int3
out
and
add
and
leave
jg
inc
adc
imul
adcl
mov
mov
add
push
add
lahf
jmp
cmpsb
das
pusha
mov
add
enter
cmc
popa
jmp
out
lock
add
add
dec
dec
mov
movsb
add
push
pop
lret
iret
inc
out
rcrl
mov
roll
mov
loopne
movsl
lods
icebp
lcall
and
mov
in
int3
roll
sbb
pop
xor
repz
scas
xor
mov
fldenv
fcoml
add
gs
or
mov
lret
add
cld
push
jge
movsl
mov
adc
mov
xchg
mov
cmpsl
jb
leave
pop
add
add
ja
rclb
add
add
mov
in
sbb
xchg
shrl
dec
daa
xor
jl
mov
add
mov
or
loopne
lret
aaa
push
mov
filds
loope
out
add
movsb
xor
adc
cld
fbstp
and
int
adc
mov
stos
xchg
and
sbb
xor
xchg
add
out
push
in
sub
add
pusha
add
dec
outsb
dec
into
lret
add
test
mov
mulb
in
out
add
les
push
mov
mov
pop
call
fscale
add
push
add
cltd
cs
mov
and
add
mov
pop
fistpl
xchg
xor
add
and
aaa
sub
addr16
xor
popl
inc
jle
and
xor
sub
out
stos
add
data16
aas
mov
cmp
adc
xlat
add
add
cld
in
dec
xorl
ds
pop
xor
or
and
push
push
mov
cwtl
add
cmp
mov
sbb
out
cltd
add
mov
dec
xchg
dec
mov
add
dec
iret
pushl
ds
addb
test
pushf
add
add
dec
scas
fdivl
stos
in
jnp
testl
test
pusha
mov
cmc
pop
aam
iret
mov
lods
in
enter
jo
mov
mov
das
jns
mov
scas
lods
or
popa
cmp
stos
adcb
pop
and
push
pop
xchg
xorl
aaa
xor
jae
fistpll
and
notb
xchg
out
out
add
xchg
or
jae
add
fcmovu
and
add
add
pushf
es
add
sbb
inc
xlat
repz
bound
jo
insb
test
lahf
addr16
mov
adc
add
xchg
testl
fdivrp
fadds
stc
lock
fiaddl
mov
pop
xorb
out
add
jp
add
add
mov
sub
push
mov
ror
pop
sbb
ss
add
sti
push
xor
lods
mov
pop
in
adc
dec
out
cmpsl
pop
shll
cmc
sti
out
insl
lret
dec
scas
pop
dec
and
shl
and
inc
fimuls
push
pop
addr16
es
stos
inc
je
fucomip
data16
test
cmp
fucom
lret
and
push
lahf
shrb
mov
daa
xchg
and
nop
add
pop
test
out
mov
testl
rclb
add
sub
pop
in
mov
xor
jne
pop
mov
adc
add
xchg
pop
std
xor
stos
adc
fisubs
mov
mov
sub
pop
sahf
mov
pop
jl
add
orb
inc
fildl
sub
push
popa
std
fcomps
add
add
adc
int3
and
lret
scas
loop
add
sbb
mov
popf
jae
or
add
xor
jo
ret
cmp
add
jle
scas
lods
jno
add
pushf
mov
add
cld
ja
jno
cs
add
enter
scas
shr
mov
cmp
loop
add
out
add
add
decl
adc
pop
dec
adc
xor
fidivrl
test
stc
and
add
shlb
or
add
fabs
adc
je
int3
inc
or
pop
jae
cmpsb
add
push
repnz
ret
ljmp
add
jmp
push
sti
add
out
push
sbb
sarl
cli
xor
push
add
das
push
sub
lock
int
add
ljmp
lret
jb
adc
add
and
pop
popa
iret
stos
mov
popf
push
xor
mov
sub
loope
popl
inc
call
xchg
xor
mov
rcrl
add
jb
ret
add
jmp
mov
mov
lods
push
inc
loop
jne
add
cmp
repnz
sahf
stc
mov
push
add
stos
mov
dec
ret
fdivrs
add
jns
sub
dec
scas
int3
cmp
sbb
cwtl
es
cld
dec
shl
xchg
movl
out
test
jae
int
loopne
adc
movsb
add
add
pop
movsl
lret
pop
mov
stos
pop
negl
xlat
jg
add
jg
add
cmp
sub
add
or
push
lret
andl
fstl
mov
jo
stos
jge
xor
or
lahf
or
add
xor
int3
out
je
cmc
adc
cmp
mov
add
fwait
stos
xchg
imul
adc
inc
lahf
push
cmpsl
fidivl
add
dec
into
xchg
imul
sbb
or
mov
out
add
mov
mov
xchg
add
mov
mov
scas
mov
test
push
add
inc
sbb
mov
fwait
jl
add
push
test
es
add
aas
je
pop
push
jbe
jbe
fdivs
inc
mov
loop
push
sub
xchg
repz
add
cmp
mov
xchg
add
and
add
es
arpl
js
xchg
or
nop
sbb
aaa
adc
push
sahf
movsb
je
mov
cmp
sub
add
pop
add
aaa
in
mov
inc
xor
jb
sub
dec
in
cmpsb
setge
push
bound
outsl
aad
mov
xor
scas
out
mov
push
add
dec
add
xor
mov
sbb
outsb
xchg
pop
adc
add
lcall
adc
mov
push
add
nop
or
add
xor
add
add
jne
insb
leave
fnsave
enter
pop
je
pop
bound
bound
lods
dec
test
aaa
mov
xchg
aad
pop
sbb
leave
aad
loope
inc
jno
push
sahf
je
cmp
jne
lods
sub
jg
jle
mov
push
sbb
and
inc
pop
scas
mov
jbe
push
enter
movb
sti
add
dec
popa
pop
stos
test
sarb
ljmp
pop
add
dec
test
outsb
cmpsb
add
aad
add
jns
cmp
fsubl
into
daa
fs
adc
int3
movsb
mov
popf
push
push
dec
imul
xor
ret
add
sub
push
arpl
mov
cld
pop
rolb
mov
mov
add
into
cld
mov
mov
mov
mov
mov
test
sbb
testl
lods
add
xchg
add
repz
gs
mov
or
xchg
adc
mov
insb
cmp
push
sbb
jecxz
rcrb
jnp
add
push
jno
xor
add
or
add
and
mov
mov
sub
jecxz
xor
pop
aaa
jle
push
fldl
and
xor
test
mov
add
sub
xchg
adc
jae
add
outsl
mov
add
add
sub
negb
repz
inc
imul
ficomps
jne
push
adcb
std
xchg
aam
shlb
cmp
icebp
sti
add
dec
imul
inc
jbe
add
mov
outsl
nop
or
add
mov
cli
xchg
icebp
mov
mov
stos
xchg
fdiv
xor
jp
dec
sbbl
cli
add
std
std
dec
mov
cmpsb
add
inc
sbb
pop
push
xchg
addb
mov
scas
sbbb
daa
jnp
mov
mov
arpl
mov
iret
cli
fistps
sub
mov
cmp
cmpsb
push
add
clc
pop
add
cmp
push
cmp
add
loopne
add
lahf
pop
add
push
add
mov
xchg
loop
pop
sti
ja
cld
mov
inc
push
dec
add
in
push
scas
add
mov
aam
xchg
add
xchg
and
push
add
movsb
mov
cmpsb
add
add
jne
or
pusha
and
add
xor
dec
repnz
xor
add
push
jno
cmp
pop
mov
sbb
aas
ja
cmp
xchg
or
jg
mov
inc
sahf
int
cli
and
and
jae
add
call
test
add
and
inc
ss
stos
stos
add
sbb
or
fwait
add
sub
inc
jnp
hlt
sub
xchg
rorl
add
mov
add
aad
jb
or
add
inc
add
jo
xchg
add
in
jp
jmp
aam
andl
lret
iret
dec
add
mov
lret
ret
add
icebp
out
jo
cmp
aam
pop
mov
xlat
pushf
add
dec
repz
dec
jmp
cmp
sub
out
int
mov
inc
cmc
movsl
xchg
cmp
movsb
in
gs
repz
clc
fucomi
push
jmp
popf
in
add
out
xchg
sti
push
data16
loop
jb
add
jae
mov
jb
xlat
and
out
mov
add
sti
lea
mov
andl
cli
stc
mov
icebp
sub
mov
in
testl
push
adc
add
mov
xor
aaa
sbb
imulb
sti
test
cmpsb
rep
jnp
stc
aad
mov
fisttps
clc
movsl
xlat
in
pop
mov
leave
pop
cmp
add
jnp
pop
lret
sub
sbb
xchg
sub
cmp
push
out
cmc
push
testb
add
sub
lret
pop
rorl
adc
inc
outsb
add
cld
cmp
mov
cmp
daa
pop
repz
cwtl
jno
xchg
mov
inc
inc
pop
call
iret
add
inc
and
push
out
jae
lret
mov
mov
ljmp
push
xor
dec
lret
or
or
imul
mov
add
in
mov
mov
mov
push
loopne
dec
xchg
sbb
inc
add
add
ret
daa
sub
xchg
mov
rorl
test
inc
aas
cmp
add
pop
mov
push
push
pop
in
xchg
js
pop
data16
cmp
sbb
shll
movsb
das
in
add
push
mov
shlb
sub
in
les
jmp
iret
idivb
ret
cmp
jle
and
filds
push
mov
dec
sbbb
scas
sar
fwait
dec
fldl
stos
mov
inc
and
lods
in
push
fucomi
or
ja
hlt
scas
push
fisubl
jp
inc
fmull
sbbl
fiaddl
push
outsb
inc
in
pop
add
sub
mov
add
jae
mov
add
mov
mov
mov
icebp
out
dec
add
lods
mov
fnstsw
add
sbb
mov
mov
loop
xchg
inc
sub
dec
leave
gs
add
xor
cmpsl
ljmp
loope
pop
jmp
mov
jmp
inc
push
bound
sarl
addr16
jae
adc
in
add
add
sbb
mov
push
xor
jno
push
sbb
inc
xchg
fstpt
sbb
push
lret
jb
fistl
jo
push
jno
addb
cmpb
add
mov
movsb
xchg
adc
out
xor
add
jmp
test
add
sub
xchg
cld
imul
xchg
das
add
cld
arpl
insb
xor
ljmp
das
mov
jecxz
testb
sti
roll
cld
push
out
mov
and
aad
fldenv
lea
mov
pop
cmp
adc
pop
mov
scas
cmp
add
ret
pop
mov
add
add
mov
pusha
adc
add
pop
fwait
xchg
test
add
movsb
add
outsl
lods
push
push
sub
lcall
clc
in
push
add
gs
and
test
jnp
mov
loop
fisttpll
mov
add
add
mov
push
adc
add
add
pop
mov
jno
bound
movsl
ljmp
or
in
xchg
push
jb
add
pop
mov
test
add
andb
lods
jb
adc
mov
mov
adc
mov
mov
stc
add
mov
test
popa
xor
jmp
adc
xchg
inc
sbbl
lahf
pop
add
ficoml
call
xchg
push
in
add
js
cmc
movsb
fsubrs
jnp
push
push
jo
sbb
sti
jle,pt
add
cmpb
xor
add
movsl
push
jge
fcmovb
mov
lahf
cmp
add
sbb
stc
xor
add
add
mov
cmp
out
add
ret
push
hlt
jg
rclb
add
mov
fistpl
jecxz
mov
sub
push
fnsave
mov
xchg
clc
lock
ficomps
xorb
iret
pop
add
fwait
jp
or
add
shlb
aaa
adc
add
xchg
mov
push
and
add
sbb
lcall
sahf
add
into
lods
mov
mov
movsb
push
lods
or
pusha
hlt
or
roll
add
add
adc
add
push
sub
call
add
add
add
and
add
mov
mov
sub
movsb
jl
lds
rol
cmpsb
xor
ljmp
and
add
fnstenv
adc
loopne
add
mov
cmp
pushf
mov
outsb
jl
add
scas
add
cmp
leave
fcomp
add
sti
sub
add
xor
ret
mov
dec
xchg
enter
inc
pop
popf
fwait
test
add
pushf
int3
mov
mov
test
jne
inc
add
push
and
pushf
add
pop
jae
sbb
add
movlps
fcmove
aam
push
scas
scas
shlb
lds
fwait
sbb
stos
popa
mov
aad
test
dec
jg
adc
pop
ds
pop
cmpsb
insb
add
mov
sahf
push
jo
int
es
lret
call
mov
popl
sahf
push
outsb
andl
mov
jle
xchg
cmp
arpl
add
push
adc
insb
add
arpl
mov
scas
rol
add
add
jl
cmp
push
scas
movsb
inc
and
mov
aaa
or
dec
cmp
add
add
mov
cwtl
dec
sbbb
inc
lods
jb
js
shl
in
sti
negb
out
aas
call
xor
jp
fs
xchg
lea
rcll
loop
imul
jb
mov
dec
outsb
pop
push
lret
fcoms
jns
adc
ret
xchg
mov
cltd
data16
add
lahf
inc
xor
pop
jmp
inc
loopne
insb
out
aaa
aad
cmpsl
rorb
mov
and
inc
add
xlat
imul
loopne
cli
xor
outsb
cmpsb
or
pop
fmuls
xor
inc
xchg
fidivl
sub
and
ret
xor
add
dec
jg
jp
jnp
add
out
fs
dec
fwait
roll
test
push
add
xchg
lds
cwtl
aaa
mov
lcall
or
das
mov
lret
mov
out
jno
imul
cmp
pop
sub
mov
je
dec
and
mov
nop
inc
add
adc
inc
dec
data16
stc
gs
std
add
mov
jmp
push
icebp
outsb
mov
mov
lahf
repz
mov
outsb
fmulp
mov
dec
push
add
into
sbb
dec
push
sbb
pop
sub
fcoml
call
div
add
sbb
out
mov
mov
ret
ret
mov
push
xor
loop
push
add
filds
enter
mov
mov
sbb
jp
mov
or
pop
ja
mov
inc
add
popa
dec
inc
filds
pop
fyl2x
jge
mov
insb
sub
add
inc
mov
addr16
subb
mov
enter
add
push
daa
mov
add
mov
jmp
jle
pminsw
xor
cwtl
sbb
pop
add
push
lds
sahf
mov
jge
fnsave
xor
mov
sahf
fiadds
xchg
shrb
pop
addb
add
movsb
sub
repnz
pop
xchg
jge
mov
add
sub
call
mov
add
add
xor
or
push
xchg
mov
add
mov
add
sub
orl
scas
jne
clc
xor
jmp
mov
movsl
jb
aaa
outsl
ja
pushf
add
xor
lock
sti
add
mov
add
ret
dec
push
mov
jp
add
lds
ret
pop
lahf
mov
inc
std
fwait
xchg
pusha
aas
out
add
mov
add
xor
push
iret
jno
repz
fnstenv
fstpt
repnz
mov
mov
aam
call
mov
aad
gs
pop
jb
add
mov
or
xor
jge
xor
jp
in
ds
loop
add
mov
bound
or
fwait
or
test
push
addr16
pop
outsb
mov
out
add
push
add
ficomps
divb
aas
into
not
dec
adc
push
add
stos
mov
mov
add
movsl
inc
cmp
jp
fidivrs
and
repnz
mov
iret
cmpsb
loop
push
cld
xor
xor
pop
clc
mov
add
add
outsb
adc
mov
inc
mov
xchg
js
mov
pushf
testl
xchg
add
bound
shll
icebp
adc
stos
pop
iret
int3
icebp
mov
jmp
into
aam
mov
js
cwtl
pop
xor
fildl
xlat
push
mov
adc
add
or
sub
jp
pop
fcmovnbe
aam
adc
xchg
sbb
add
add
and
dec
add
lcall
clc
jp
outsb
push
add
gs
stc
sbb
add
pop
aaa
sub
mov
pop
mov
and
movsb
mov
push
mov
ret
push
clc
or
pop
jl
loope
add
xor
pop
sahf
jp
test
and
test
aad
inc
imul
sbb
push
in
mov
inc
out
and
les
adc
jae
add
mulb
inc
add
repz
mov
add
sahf
or
iret
xchg
or
mov
loopne
push
iret
fldt
pop
fadds
jno
je
jmp
add
out
or
or
in
ret
add
das
push
add
and
shll
fs
add
mov
rorb
adc
call
or
leave
inc
xchg
out
push
test
movsb
int
rolb
out
jp
adc
shlb
fwait
push
pushf
fidivl
fwait
ds
pusha
xadd
add
inc
mov
mov
add
repz
enter
add
mov
mov
das
mov
xor
sub
in
pop
sub
mov
pop
jge
addb
add
push
stc
mov
popf
sbb
add
mov
popa
lret
repz
adc
in
mov
sbb
ds
push
push
mov
into
and
aam
insl
add
push
das
out
ljmp
or
rclb
xor
pop
ret
call
xchg
and
dec
loope
xor
sti
add
dec
cltd
mov
incb
or
lea
add
mov
push
xor
and
or
pop
jne
add
dec
and
add
pop
dec
add
inc
loopne
add
jb
jg
mov
in
out
shrb
popa
sub
mov
call
aam
push
outsl
pop
add
outsl
stc
aas
jns
mov
pop
xchg
aad
shlb
sbb
add
ret
mov
insl
and
mov
clc
adc
hlt
outsl
cmp
cli
inc
cmp
jp
sbb
inc
pop
cmp
jb
in
add
or
scas
inc
pusha
lret
imul
ds
jnp
and
jle
and
ds
in
mov
add
xor
and
mov
xchg
aad
mov
jnp
fisttps
imul
in
fucomip
loope
mov
cwtl
pusha
in
add
aam
fadds
add
mov
bound
pop
mov
sbb
sub
add
scas
pop
push
pop
dec
jg
aam
xchg
jge
pop
cmpsl
xchg
pop
xchg
mov
mov
add
push
and
cmp
mov
addl
mov
xchg
hlt
pop
push
out
fistpll
push
in
test
insl
add
mov
mov
add
jb
repnz
push
cmp
leave
mov
adc
repnz
add
test
shrb
pop
cmpsb
push
les
cmp
fiaddl
push
loope
cmp
mov
mov
xchg
jbe
push
test
add
add
sbb
xor
data16
mov
jns
push
in
jo
aas
add
lds
mov
sbb
lahf
add
sahf
jae
sbb
lods
shlb
add
lock
xor
push
jecxz
add
and
pop
arpl
dec
adc
jle
cld
xchg
pop
adc
inc
fldl
rol
mov
outsb
add
xor
pop
xor
setl
adc
rorb
add
mov
adc
xchg
cwtl
push
xor
cmp
add
inc
int3
ja
add
test
fwait
xchg
mov
add
mov
xor
sahf
dec
add
js
add
add
ret
push
inc
mov
outsb
mov
enter
adcl
add
push
ss
jecxz
xor
pop
mov
dec
arpl
flds
iret
loop
add
fsts
stc
sub
xor
add
mov
dec
into
popa
arpl
lret
mov
mov
push
adc
pusha
fs
test
mov
mov
sbb
xlat
dec
xor
sbb
add
lret
or
fwait
cld
xchg
jl
fdivrs
lret
fsubrl
aad
mov
aam
sub
clc
ret
data16
cmpsb
fsubp
mov
sahf
in
lret
fadds
mov
test
xor
lea
jns
repz
fdivrs
movsb
or
cmc
xchg
jecxz
push
in
add
pop
int3
xchg
adc
push
out
dec
mov
add
add
push
mov
sub
cwtl
mov
sub
xlat
cld
dec
dec
fwait
add
insl
movsl
mov
aad
loop
push
sahf
sarb
add
jo
mov
loop
jb
xchg
out
addb
add
cmpsl
sub
xor
push
or
movsl
mov
movsl
out
enter
pop
add
test
ja
lock
mov
out
das
push
push
fsub
jecxz
mov
push
int3
xchg
rclb
fxch
xchg
jnp
push
cwtl
shrb
out
pop
test
aas
jne
insl
add
mov
xchg
lret
fidivrl
sbb
ljmp
mov
pop
jno
out
adc
test
inc
push
add
stos
add
fdivrs
add
inc
in
insl
dec
mov
and
adc
add
jmp
rcr
mov
push
push
jae
or
push
pop
add
xor
jmp
jmp
rcrb
jo
add
push
dec
add
add
add
in
stc
fwait
xlat
adc
jmp
cmpsl
mov
add
pop
test
fsincos
add
and
or
inc
out
into
add
adc
inc
add
add
cli
add
ja
add
push
js
mov
imul
pop
pop
jp
in
icebp
add
shl
lds
push
cmpl
jmp
fs
mov
mov
push
icebp
test
jb
ds
add
loopne
mov
insb
jg
add
push
lds
dec
mov
xchg
cmpsl
sahf
test
adc
add
push
sbb
daa
mov
push
add
lock
sbb
cwtl
fsubrs
sbb
dec
inc
imul
jp
add
sbb
jno
clc
in
inc
outsb
iret
out
add
arpl
mov
add
sarl
or
fisubl
pop
out
icebp
add
insb
sub
mov
popf
jns
xor
inc
rcl
adc
sbb
lods
in
fiadds
inc
mov
cld
lcall
xor
rol
popa
pop
lcall
sbbl
lret
jecxz
mov
jp
mov
add
fwait
std
rolb
inc
inc
leave
add
cld
adc
xchg
call
and
repnz
ljmp
test
mov
shrb
push
cmp
pop
sarb
xchg
arpl
cmp
fdivrs
xchg
xchg
pop
mov
mov
add
je
sbbb
add
sbb
imul
aad
add
mov
dec
daa
and
add
sbb
in
jp
pop
cmp
or
sbbl
push
fcompl
sub
inc
add
aas
add
and
les
adc
addr16
testb
testb
fwait
scas
pop
add
adc
pmaddwd
fdivrl
sub
enter
push
into
bound
add
gs
add
pushf
int3
mov
xlat
in
adc
ficomps
cmp
add
fucomip
push
icebp
sub
add
jo
popf
add
clts
or
sbb
outsl
add
adc
sub
clc
outsb
aaa
addr16
test
mov
and
stos
jne
aam
subl
fidivrl
adc
mov
add
je
push
movsl
adc
out
lcall
inc
loopne
mov
aam
adc
pop
push
or
add
add
push
cli
jle
xor
repz
repz
xlat
push
inc
add
jmp
inc
cwtl
add
add
jl
add
xchg
outsl
xchg
mov
dec
cli
lods
scas
enter
push
add
jno
sbb
sbb
cmp
sbb
repnz
push
push
sbb
add
lret
mov
addr16
xor
movsb
pop
xchg
mov
lods
adc
js
add
pop
or
or
and
ds
jg
fidivl
fcoml
or
add
or
mov
sub
stos
insl
gs
inc
or
cmp
mov
and
jae
lods
and
mov
add
xchg
cmp
or
add
dec
xor
packsswb
movsb
fldl
inc
shl
cmpsb
test
std
dec
add
dec
mov
lret
or
and
or
add
push
push
subl
xchg
or
pop
xchg
iret
add
jno
fbstp
add
inc
dec
or
jae
jbe
add
mov
mov
data16
lea
add
lea
loopne
test
pop
push
mov
fwait
insb
mov
xchg
mov
xorl
push
sbb
notb
xchg
jnp
mov
dec
test
add
sbb
xchg
adc
jmp
and
sbb
lcall
in
xchg
pusha
stos
dec
and
mov
and
or
mov
xor
and
add
das
xor
mov
aad
pop
add
pushf
testl
inc
dec
mov
ss
add
add
add
mov
xor
push
cs
cwtl
pop
mov
jo
push
jae
les
repz
pushf
mov
jae
sub
mov
into
lea
ret
sub
or
dec
jl
add
rorb
das
push
mov
jbe
add
loop
dec
jge
in
es
push
into
or
int3
adc
pop
pop
dec
lret
pop
jmp
jmp
arpl
cltd
sub
scas
imul
inc
pusha
fs
fildll
pushw
jb,pt
pop
sub
or
jecxz
das
jns
mov
test
popf
push
or
add
outsb
cmpsl
add
sub
jg
push
cmp
mov
arpl
mov
and
xor
xchg
sub
imull
push
add
addr16
jb
xor
shll
or
mov
jg
fnop
test
sahf
bswap
cltd
jne
add
or
mov
imulb
frstor
add
add
mov
mov
daa
fildl
push
xor
xor
jle
xchg
adc
loopne
or
mov
stos
sub
ljmp
mov
call
add
leave
sbb
dec
outsb
jge
pop
stos
pop
mov
sub
jne
jg
pop
incb
xchg
fwait
cmp
dec
add
adc
das
jne
cmp
cmp
icebp
add
aad
lcall
test
out
xchg
sti
test
scas
pushf
daa
push
add
xor
ficoms
add
aas
das
sbb
add
add
xor
adc
push
jl
insl
and
add
cmp
cmp
test
or
add
cltd
dec
push
add
arpl
mov
pop
inc
inc
jns
xor
jmp
push
in
mov
add
pop
add
std
xchg
scas
sbb
mov
mov
aam
push
movsb
sahf
lock
sbb
push
add
pop
loop
imul
je
mov
test
jae
mov
decl
lock
gs
jne
lret
les
dec
or
dec
dec
add
popf
pop
sahf
aas
xor
add
fsubrl
ljmp
jb
add
mov
mov
and
mov
lds
add
enter
adc
stc
sub
js
push
call
cld
in
jo
add
cmp
inc
outsl
add
jb
dec
xchg
nop
loope
mov
push
dec
add
pop
lcall
add
ficoml
dec
and
mov
rclb
sub
cwtl
les
outsl
rorl
mov
xchg
repz
ljmp
out
sbb
xchg
jbe
xchg
aas
pop
adc
add
mov
xchg
push
sub
add
stos
dec
loopne
scas
movsl
mov
add
jmp
imul
into
int
add
int3
jmp
cltd
xchg
add
jbe
adc
inc
test
adc
aam
pop
xchg
sub
push
add
mov
mov
addr16
je
movsb
in
dec
dec
rcrb
and
mov
movsb
or
push
lea
jae
add
out
and
sti
push
add
test
dec
cmc
fidivrs
add
fstps
ret
add
pop
push
das
cmc
pop
mov
add
pushf
or
lea
pushf
dec
jno
outsb
add
cs
cmp
mov
shll
add
pop
ror
outsb
push
xorb
repnz
sbb
xchg
dec
cmp
push
adc
mov
jg
ss
je
sti
push
hlt
mov
or
add
sahf
int3
push
std
call
sub
dec
jns
dec
in
push
add
jg
add
pop
lods
jne
mov
add
add
mov
divl
cmpsb
jmp
pop
lds
rcll
push
or
sbb
fcomps
mov
dec
lock
in
dec
xor
fstps
rcrl
mov
std
inc
enter
int3
or
dec
cs
mov
mov
fstps
daa
sbb
mov
inc
scas
pop
lock
std
cld
or
out
loope
into
movb
mov
bound
xchg
fistl
icebp
xchg
scas
push
push
fmuls
push
mov
movb
add
pop
lods
jge
shlb
shlb
andb
adc
add
and
cmp
add
xor
inc
cmp
add
sub
icebp
xchg
pop
iret
es
rcll
or
add
clc
cmp
clc
adc
adc
dec
bound
add
test
fcmovb
xlat
xchg
push
insb
dec
mov
mov
push
data16
jns
arpl
xor
enter
pop
lahf
scas
inc
pop
mov
rorb
add
add
add
add
pushf
xchg
pop
xor
stc
shr
data16
sub
ja
pop
fistl
rcl
in
add
add
inc
insb
loop
xor
lcall
jo
xorl
test
das
outsl
into
mov
or
add
cli
cmp
ror
cmp
inc
jp
aas
add
or
iret
inc
xchg
push
add
je
mov
lahf
dec
pop
shll
jge
cmp
push
dec
fldenv
or
aad
negb
add
aad
stos
mov
add
das
aas
adc
jecxz
shr
ja
lods
aad
inc
dec
push
test
xor
outsl
outsl
out
add
fst
add
dec
bound
sub
adc
cmc
add
add
test
out
enter
popa
les
leave
jae
nop
popf
out
xchg
dec
push
sub
or
data16
mov
add
sbb
outsb
add
cmpsb
xor
stos
push
fisttpl
dec
mov
aas
and
cld
in
les
mov
mov
push
sub
push
aaa
daa
mov
sub
sub
roll
out
xchg
adcl
daa
xorl
fsubrs
orl
or
popa
add
mov
push
aas
xor
xorb
test
rcrl
add
out
mov
push
icebp
pop
clc
clc
mov
call
insb
inc
jo
xor
mov
mov
mov
dec
add
inc
add
data16
das
insl
mov
sarb
jge
add
insb
aas
mov
jge
lret
imulw
sarb
popa
dec
add
pop
xchg
pop
mov
pusha
sub
int
cmp
mov
in
push
loop
les
div
sti
cmp
push
add
cmp
pop
ljmp
dec
push
cli
dec
cmc
xor
jecxz
fistl
add
mov
sbb
inc
add
dec
pop
add
gs
adc
push
cltd
nop
orb
mov
imul
dec
sahf
add
mov
in
lret
movsb
loopne
out
fstp
push
sbb
cwtl
hlt
sarl
ds
xor
in
fs
add
sub
add
aas
jnp
lock
movb
adcb
iret
or
mov
mov
xchg
repnz
iret
fsubrs
int
test
sbb
shll
mov
and
pop
repz
std
xorl
icebp
movb
jp
add
xor
jns
sbb
push
add
mov
idivl
aad
mov
cmp
jno
cmpsl
clc
cmp
out
cmpb
les
add
jp
add
xor
jbe
push
pop
add
or
add
add
loop
add
add
jne
shll
mov
addr16
and
in
add
jle
sub
mov
jns
dec
in
jno
lods
movsb
pushf
aam
repz
add
or
pop
add
mov
and
add
mulb
mov
lret
xor
add
add
push
inc
lock
fistl
movsb
adc
xor
cmp
mov
add
add
sub
cld
pushf
inc
push
cltd
lret
jl
inc
pop
loop
dec
mov
pusha
xchg
jge
mov
add
jmp
rcrb
inc
sbb
mov
add
add
dec
les
sub
xchg
push
inc
xor
sub
cwtl
test
sbb
das
sub
je
sti
imul
inc
mov
mov
push
dec
push
jnp
les
pop
dec
jle
loop
add
inc
add
cmpsl
add
jnp
add
cmp
out
aaa
pop
dec
sti
cmp
mov
out
insl
imul
add
lock
add
scas
sub
jp
rclb
add
mov
test
sub
add
ljmp
add
scas
ret
pop
adc
xor
insl
sbb
mov
or
sbb
cmp
add
add
ss
push
ds
imul
ljmp
cmp
inc
rolb
dec
sub
jo
pop
out
xor
int3
xchg
sub
xor
movsl
outsl
add
fmul
sub
test
aaa
rcl
inc
sbb
add
add
scas
pop
cld
aam
popa
mov
aam
mov
mov
and
mov
movsb
lret
add
shrb
out
fildll
cmp
aad
push
mov
insl
es
add
pop
xor
popf
and
add
adc
scas
cwtl
notb
jge
and
outsb
shlb
lods
cmpsl
add
mov
mov
sbb
sti
insl
add
iret
add
sub
int3
pop
cmp
ret
mov
movsl
add
loop
inc
js
cld
xchg
jge
mov
cmp
inc
sahf
sub
add
div
mov
call
dec
lret
adc
pop
jmp
mov
test
leave
mov
push
jo,pt
outsb
mov
cmp
arpl
push
stc
ds
sbb
xor
jg
and
filds
or
jb
add
xor
sahf
ret
xchg
xchg
test
cli
add
xor
add
shlb
xchg
cld
stos
jp
adc
add
add
mov
mov
adc
mov
stos
cltd
in
add
imul
sbb
mov
jne
cmp
int
mov
mov
cmpsb
testl
out
scas
std
mov
addr16
fsubrs
enter
movsl
rcll
add
fwait
xchg
dec
fiaddl
in
dec
xchg
pop
add
add
add
stc
out
iret
cmp
call
add
shlb
test
mov
cmpl
jno
in
add
add
cld
filds
mov
mov
add
enter
mov
add
add
cli
loopne
add
movsb
push
jb
sub
dec
mov
push
leave
and
je
icebp
dec
mov
push
repnz
jecxz
subl
add
test
adc
push
mov
out
jb
out
push
cmp
push
outsb
adc
xchg
or
test
jb
jge
jne
cmp
mov
rcrb
into
xor
jle
or
sti
jmp
xchg
push
inc
jae
xchg
ret
add
inc
scas
fistpll
mov
test
sub
mov
gs
movsl
sub
adc
add
dec
mov
loop
add
mov
lods
outsb
movups
dec
push
fsubp
jmp
sbb
push
fadds
pop
push
add
lods
or
fcoms
jae
cli
add
into
int3
stc
repnz
dec
test
mov
pop
stos
sahf
mov
add
cmpb
cmpsb
shlb
xlat
cmp
rolb
movsb
in
xchg
add
inc
add
loop
outsl
jmp
xchg
mov
out
cld
ja
xchg
jle
js
and
ja
or
mov
sbb
sbb
jnp
mov
std
jae
cmpsl
push
sti
pop
cmp
sub
jmp
push
insl
sbb
push
push
cli
scas
add
arpl
jae
lds
push
jmp
outsl
movsl
fsubrs
mov
sub
or
mov
test
mov
mov
inc
out
add
jl
mov
mov
sub
sub
call
pop
pmaddwd
mov
mov
adc
sub
mov
adc
arpl
fbstp
stc
insb
add
divl
mov
push
shl
add
scas
cmpsl
add
lret
into
sub
dec
out
dec
push
in
mov
lret
sbb
std
gs
and
pop
sub
inc
pop
adc
pop
mov
xchg
fwait
inc
lret
int3
mov
push
dec
rolb
add
sub
dec
mov
fdivp
add
mov
rorb
dec
dec
mov
dec
adc
add
lahf
xor
jo
or
pop
push
rolb
mov
test
out
ss
jae
inc
loope
mov
sbb
clc
incb
sbb
ret
ret
sub
into
loope
pusha
xor
sahf
xchg
pushf
add
jbe
jle
std
add
add
sub
movnti
test
addr16
dec
jmp
test
add
shrl
testl
push
test
dec
dec
add
mov
jne
hlt
addl
pop
rorb
or
xorb
cmp
add
jle
add
adc
mov
mov
aaa
and
and
adc
add
add
outsl
bound
mov
lret
adc
cmp
xchg
test
pop
movl
dec
add
cmp
mov
repnz
jmp
shll
cmp
push
mov
outsl
lret
jmp
cmp
insb
pop
stc
ljmp
daa
xchg
push
mov
add
inc
pop
aam
ds
ficomps
cmp
fdivs
je
adc
mov
leave
sub
mov
adc
fmull
leave
xchg
cmp
repnz
stc
gs
test
add
mov
daa
outsl
add
mov
ret
and
and
xchg
mov
hlt
adc
in
mov
add
sbb
jbe
imul
add
pop
dec
mov
or
into
jmp
push
sub
fldt
mov
out
adc
mov
ljmp
cmp
stos
dec
and
jae
add
jle
jp
add
and
outsl
data16
sbb
fwait
add
add
jl
nop
shll
mov
add
sbbb
lods
fisubrl
xchg
mov
jb
out
pusha
add
jnp
add
outsb
in
xor
sub
cmp
out
inc
sub
mov
mov
adc
add
add
mov
jge
jbe
ret
or
out
inc
ret
push
insb
lock
xchg
les
mov
testb
xor
test
mov
sub
mov
lods
mov
mov
add
leave
sbb
add
mov
mov
int
push
pop
cmp
sbb
bound
ss
mov
repz
adc
cwtl
pop
rorb
inc
mov
stos
mov
int3
mov
rcrb
jmp
and
pop
xor
sub
push
add
sub
add
mov
sub
mov
add
pop
fidivs
cmp
cmovns
rcll
add
shlb
xadd
andl
add
add
js
or
add
scas
fxch
add
jno
add
enter
jmp
aas
xchg
imul
es
mov
in
mul
aam
aaa
or
and
add
mov
push
ds
xor
inc
and
movsb
add
lret
mov
adc
add
fs
pop
jb
inc
add
adc
or
daa
gs
mov
adc
fsts
add
push
ja
adc
lods
test
scas
or
push
mov
mov
mov
pushf
push
or
xchg
push
xchg
clc
mov
cmp
push
sbbl
cmp
das
data16
out
mov
sub
outsl
sbb
sahf
xchg
subb
add
mov
test
dec
add
fisubs
ror
inc
push
lcall
jns
es
cmp
jp
lcall
fsubs
adc
sahf
add
add
adc
std
inc
or
dec
or
add
xor
daa
jae
out
lret
add
pop
movsl
add
cmpl
cmpsl
gs
xchg
popf
jae
add
aas
pop
xchg
cmp
add
mov
and
cmpsb
mov
mov
push
mul
sbb
add
mov
stos
scas
add
decb
mov
adc
push
pop
push
add
sbb
icebp
add
xchg
sub
cld
mov
imul
ljmp
sub
push
jge
repz
add
cmpsl
inc
cmp
add
call
cmp
mov
lock
sub
sub
test
add
insb
add
mov
add
scas
call
cmpsl
mov
scas
push
mov
ficoms
ljmp
or
and
add
fnstsw
cmp
cmp
mov
pop
fucom
leave
js
or
movl
and
stos
pop
add
cmp
test
xchg
sti
jo
fwait
cmp
adc
fcmovb
lret
xlat
push
dec
int3
add
cmp
scas
jno
aas
clc
sbb
jns
sahf
call
in
jo
or
icebp
adc
mov
cmp
dec
loopne
cmpsl
outsb
push
imul
addb
add
divb
xlat
sbb
ljmp
mov
cmp
int
cmp
ja
pushf
xchg
arpl
add
fisubl
in
add
sbb
pop
test
roll
inc
into
push
paddb
jne
sbb
adc
xchg
and
adc
inc
mov
cmp
insb
mov
mov
mov
movsb
mov
jo
push
and
sbb
push
mov
mov
add
add
rcll
cltd
gs
loop
dec
loopne
add
and
xchg
mov
mov
es
cmp
add
pop
push
mov
and
dec
in
push
test
test
sbb
cmpb
xchg
push
and
inc
jnp
add
push
aad
subl
lahf
movb
sahf
push
lds
cmc
mov
stos
rorl
les
fdiv
add
stos
jo
mov
testl
popl
xor
add
icebp
shll
push
fdivrs
adc
add
mov
add
inc
dec
fldl
mov
push
xchg
cmp
sbb
and
aaa
inc
loopne
add
fsub
sub
mov
flds
rcll
mov
lods
sub
add
mov
sbb
mov
mov
cmp
xor
and
sub
adc
add
xchg
aad
add
imul
cltd
push
jnp
xchg
xchg
lods
je
and
pushf
pushf
ret
mov
iret
or
or
add
pop
pop
incb
dec
push
incb
xchg
fwait
mov
pushf
pop
add
add
mov
int
pop
lods
xchg
push
mull
xor
mov
mov
sub
sbb
add
int3
imul
xor
aad
lcall
cwtl
cmc
mov
push
fisubrs
mov
sarl
inc
mov
aas
add
std
std
jl
lahf
or
jmp
mov
mov
incl
mov
scas
ljmp
cmc
pop
push
into
lea
sbb
adc
xor
or
add
add
mov
sbb
cmp
mov
adc
xchg
jno
fistpll
push
push
repz
jne
scas
out
cmp
jge
repz
sbb
sbb
jmp
or
jmp
mulb
add
sbbb
in
and
mov
dec
gs
cmp
insl
pop
bound
in
sub
add
lret
pop
subb
fs
mov
lahf
lret
ds
add
jp
fistpl
push
jge
mov
movsl
enter
adc
scas
ss
cmpb
add
add
lock
cmp
lret
pop
mov
outsl
add
sarl
movsb
add
movl
mov
fiaddl
int3
sub
xlat
cmpsb
and
stc
pushf
push
fwait
push
and
jb
aaa
das
mov
insb
insb
sbb
sahf
sarb
sub
push
lea
lods
push
idivl
and
lcall
out
add
adc
mov
std
sbb
cmp
scas
dec
jmp
mov
stos
mov
pop
mov
cmp
mov
daa
add
int
lea
addl
fsubr
stc
sarl
je
push
jbe
add
clc
out
iret
sub
out
xchg
sub
lods
mov
inc
lret
mov
daa
call
and
dec
cs
add
mov
into
mov
faddl
and
push
fistps
cmp
add
inc
or
cwtl
pop
jecxz
add
aam
sub
movb
sbb
add
inc
dec
xchg
cmp
test
jno
lock
aam
add
add
and
jae
jle
add
in
sbb
int
mov
jo
addb
and
loop
sub
mov
jo
add
ja
int3
aaa
inc
into
mov
add
add
sbb
sub
jge
cmc
dec
add
adc
movb
add
out
jg
jp
add
sub
xlat
stc
sahf
jnp
add
or
mov
shrb
imul
jo
add
sub
adcb
lcall
sub
add
sbb
xchg
xor
sub
adc
add
adc
pop
aaa
ja
ror
in
push
mov
je
loop
jbe
add
cltd
mov
movlps
fnstsw
outsb
adc
cmp
arpl
pusha
lods
xorl
mov
in
ret
in
xchg
push
in
inc
mov
xor
cmpsb
frstor
add
addl
mov
sahf
dec
pop
and
inc
fisttpl
add
jge
fbstp
int
add
out
push
xchg
lret
add
add
xchg
cmp
sub
mov
xchg
jp
out
pop
inc
ret
or
jge
add
xor
adc
xor
es
and
sbb
mov
pop
test
pop
sbb
stos
js
scas
mov
scas
mov
sbb
push
in
imul
lock
pushf
and
pop
jo
es
out
int3
push
arpl
cmp
xchg
mov
add
jns
add
ja
dec
xor
out
add
jno
and
scas
pop
in
and
or
pop
add
add
pop
rol
int
je
out
cwtl
jge
je
test
leave
fimull
sbb
sbb
jp
and
add
add
pop
push
jle
push
push
add
add
add
sub
add
xorl
push
test
aad
push
xor
jecxz
jbe
xchg
add
jp
test
movsb
aam
sti
fnstsw
loop
test
insb
jle
arpl
xchg
xchg
loopne
or
adc
add
ret
adc
add
in
addl
sub
pop
pop
xor
rorl
aam
rcrb
cmp
inc
jle
ljmp
and
jg
arpl
push
jmp
stos
xlat
in
mov
add
mov
cmp
add
loop
call
add
add
dec
xor
roll
testl
fdivrl
mov
bound
das
dec
scas
fcoms
fs
push
ret
dec
add
daa
add
js
test
stos
pushf
sub
into
hlt
jmp
push
jnp
mov
add
xor
or
jle
add
mov
xchg
adcl
add
xchg
ror
jp
dec
dec
cmpsb
int
add
in
js
loop
inc
add
or
ficoml
inc
add
test
add
jl
std
or
add
lahf
pusha
sub
push
repz
sti
cmp
enter
adc
add
push
stos
adc
xor
fidivrs
inc
outsl
push
cli
xor
enter
adc
popa
xchg
xchg
stos
scas
repnz
insl
aam
inc
sbb
stos
mov
cmpsl
roll
add
mov
lds
xor
divl
mov
add
xchg
or
fadds
pop
mov
addps
jmp
int3
hlt
and
aad
lock
jne
pop
add
cmp
rclb
aaa
push
ficompl
mov
dec
das
mov
sbb
add
fsts
movsb
mov
mov
add
jl
dec
jmp
xor
icebp
rcll
shr
jo
dec
scas
sub
xor
cs
hlt
arpl
lods
jmp
mov
divb
fwait
add
inc
jl
sub
orb
or
push
add
xchg
out
add
add
add
add
or
in
test
test
adc
add
ja
add
add
pop
scas
pop
jecxz
adc
pop
sbb
or
movsb
pushf
das
sub
mov
add
dec
inc
add
jb
movsb
jmp
add
jae
adc
add
mov
mov
stos
les
dec
jecxz
ds
shlb
mov
sub
inc
or
jae
lods
adc
ja
mov
inc
mov
cwtl
sahf
les
shrl
mov
push
adc
add
enter
fstps
dec
mov
test
ret
in
adc
dec
jno
jb
test
iret
daa
add
add
call
xor
roll
scas
push
movsl
imul
mov
add
testb
aaa
in
adc
lcall
pop
mov
jg
orb
sbb
cmp
xor
add
cwtl
bound
lret
stc
sbb
aas
je
mov
jp
and
push
add
scas
testl
add
push
dec
add
jo
scas
mov
adc
jg
mov
add
nop
mov
pop
popl
mov
mov
je
add
repnz
iret
inc
mov
ds
push
stos
pop
jle
dec
test
jl
pusha
add
adc
push
sub
and
cltd
add
fsubs
movb
aas
sub
pop
pop
ds
cwtl
movsl
mov
push
out
shl
sbb
cld
pop
rcr
add
add
test
push
dec
mov
imul
mov
ret
or
adcb
jne
lock
roll
pop
xor
lret
push
xor
inc
mov
pop
add
int3
xlat
rclb
fistl
das
add
jne
add
jge
sti
add
nop
cmp
and
add
jp
mov
lahf
xchg
push
dec
fisttpl
push
push
clc
rorb
scas
scas
add
cmp
xor
dec
pusha
xor
aaa
mov
xor
mov
lods
pop
jno
fidivl
loop
fadds
push
pop
loop
pusha
test
jmp
or
sti
mov
cmp
scas
rorb
inc
dec
jae
sbb
xor
orb
mov
imul
add
add
test
mov
inc
pop
add
vsubsd
mov
loop
mov
outsl
mov
cmc
add
adc
mov
ja
mov
jp
arpl
pop
addl
int3
dec
jne
xor
add
fisubrs
pop
pop
popf
add
sbb
mov
xor
aaa
enter
fists
add
int
and
rcr
mov
cmp
add
xchg
or
shrl
rcrb
xor
sub
repnz
imul
add
jg
aam
xchg
push
int3
and
push
mov
add
jb
and
mov
add
arpl
mov
add
xor
jb
pop
out
shll
jg,pt
and
push
sahf
add
push
mov
stos
adc
dec
add
lret
xchg
add
mov
add
stos
add
pusha
test
int3
mov
add
dec
ret
add
xchg
insl
ret
add
add
add
lahf
cmpsl
mov
andl
sbb
xchg
jp
add
dec
lret
mov
add
mov
add
mov
mov
sbb
or
insl
xor
cmp
fstl
je
loope
add
cmp
add
popf
dec
add
and
add
add
cld
xor
add
lock
add
sbb
cli
xchg
aaa
add
xlat
mov
xchg
sahf
pop
xlat
cltd
cmp
aad
or
pop
push
and
add
push
mov
test
gs
xchg
and
add
mov
mov
mov
add
push
lret
pop
add
pop
add
mov
inc
xchg
add
mov
pop
or
mov
add
sbb
bound
cmp
add
roll
addb
push
shlb
and
jb
mov
insb
outsb
mov
add
test
test
add
xchg
adc
jns
lcall
push
data16
mov
gs
adc
mov
aaa
enter
lahf
in
fldcw
out
dec
add
jecxz
scas
ljmp
push
out
loop
mov
test
cmp
lock
adc
repz
adc
sbb
xchg
jbe
bts
jl
pusha
adc
jg
fs
add
sub
imul
insb
ret
sbb
shr
inc
orb
icebp
inc
sbb
add
sub
out
imul
and
mov
mov
lock
sbb
repnz
sub
call
imul
xor
sbb
in
daa
sub
outsb
jne
orb
cmpl
push
add
push
or
xor
je
fwait
inc
sbb
repz
mov
enter
mov
jns
adc
xchg
sbb
jecxz
xchg
adc
push
in
jo
mov
add
add
aad
cmp
mov
or
rcll
test
adc
mov
add
sub
add
xchg
xchg
xor
scas
out
nop
repz
xchg
sub
push
rolb
pop
and
mov
mov
test
in
mov
mov
insl
add
xchg
mov
mov
dec
dec
add
push
loopne
roll
xchg
xchg
outsb
ds
nop
into
xor
jge
and
pop
add
stos
mov
mov
mov
cs
add
jecxz
popa
cs
sub
mov
movsb
rolb
lock
loop
loop
sub
add
add
fdiv
lahf
into
xchg
div
fidivl
enter
test
adc
insb
jne
sub
ret
pop
rcr
xchg
adc
sbbl
test
outsb
xor
clc
rclb
pop
dec
mov
stc
add
sahf
mov
inc
cmp
inc
mov
mov
ret
push
and
iret
add
xor
add
dec
mov
popf
movsb
pop
add
jb
mov
xor
add
xor
lods
cmp
add
lret
lret
addl
lret
test
outsb
add
push
jg
xchg
cmp
fisttpll
add
je
enter
movsl
movsb
jae
add
std
mov
call
xchg
inc
mov
fsubrl
cs
inc
scas
add
xchg
cmp
adc
pop
jge
std
xor
popl
sub
out
mov
inc
mov
movsl
fidivrl
add
sti
aam
lret
out
mov
iret
add
inc
xchg
aam
stos
add
lcall
push
es
jb
add
xchg
dec
sti
xor
fmul
sub
in
std
sbb
add
add
cwtl
add
fsubrl
add
dec
lahf
add
sub
sbb
mov
push
jmp
loop
push
add
or
jns
std
or
jl
push
cmp
mov
or
xchg
add
inc
daa
idivl
repnz
push
jg
jno
add
jae
out
rclb
lret
dec
mov
lock
sub
mov
daa
cmpb
aas
addr16
sbb
lahf
add
fcomp
mov
push
add
lret
fiadds
aam
mov
sub
icebp
aam
imul
bound
pusha
lods
inc
dec
push
push
dec
adc
scas
lea
add
pop
movsl
scas
bound
or
pop
push
add
inc
rcll
mov
add
push
shll
mov
sub
sbb
cld
dec
icebp
add
push
sti
and
dec
mov
and
in
inc
sbb
xchg
add
add
lcall
imul
in
xchg
lret
popf
jl
repz
and
push
bnd
push
imul
iret
dec
cmpsl
mov
jge
scas
push
mov
jno
fimuls
sub
pop
add
pop
sbb
cmp
fistl
call
or
xchg
test
xor
add
popa
ror
adc
xchg
push
push
mov
out
lcall
dec
jecxz
mov
in
pop
or
enter
sub
xor
das
cmp
sbb
push
push
add
add
or
mov
ds
push
test
jnp
add
bound
sub
ja
mov
jmp
andl
sbb
imul
jbe
iret
pop
sbb
mov
push
jge
roll
push
add
cmp
add
xorl
adc
add
out
lahf
or
sub
cmpsb
ret
int3
mov
add
inc
sbb
inc
lret
push
pop
add
out
xlat
fstl
sbb
les
int3
pop
cmp
jmp
test
or
cmpsb
add
jae
cmp
movsl
ret
cwtl
or
lret
mov
adc
das
bound
xchg
cwtl
push
pop
add
push
fnstcw
push
xor
mov
enter
sbb
std
roll
movb
adc
loopne
or
addr16
inc
idiv
add
add
lea
insl
cmp
xchg
fnclex
out
add
lock
add
cmp
je
cmp
cli
test
add
call
jno
inc
leave
testl
jb
xor
mov
repnz
ja
aam
xor
int3
dec
outsb
add
adc
jnp
mov
loope
lods
add
cmpsb
sbb
cmp
sti
flds
push
mov
in
mov
addb
add
lahf
mov
hlt
pop
rorb
mov
pop
add
add
cmp
push
adc
out
or
mov
scas
adc
in
mov
in
mov
sub
and
mov
jns
jle
fiaddl
inc
pop
aam
in
xchg
out
mov
cmp
das
lods
imul
jns
add
das
test
popa
add
push
add
xchg
jecxz
popa
mulb
lret
mov
push
test
lret
mov
lcall
out
mov
hlt
scas
xchg
pushf
pop
mov
int
jmp
xchg
sub
sub
les
xor
add
stc
stos
mov
mov
stos
mov
lret
mov
add
xchg
scas
jge
aaa
cmp
or
movsb
popf
pop
push
xor
push
push
cmpsb
popf
cmpsl
mov
add
dec
xchg
add
rorl
adc
fadds
cmpb
xchg
jns
cmp
shrb
mov
add
jg
inc
repnz
sti
je
push
xchg
mov
add
add
stos
push
mov
add
cwtl
and
ret
push
dec
push
cmp
pop
ret
and
add
ffreep
xor
pop
pop
sbb
outsb
pop
clc
cli
inc
scas
test
or
pop
inc
ret
inc
or
pop
in
inc
jl
inc
sbb
add
sbb
cs
adc
dec
add
xchg
dec
add
push
and
and
mov
les
mov
add
fldl
outsb
mov
add
sbb
xchg
adc
lahf
inc
lods
or
add
cmp
xor
fdivl
adc
stos
xchg
xor
xor
int3
and
and
xchg
pop
add
xchg
or
test
jno
stos
mov
cmp
cltd
jnp
leave
imul
sbb
ljmp
mov
es
movsl
idivb
push
mov
je
add
sbb
jnp
imul
in
sbb
add
sub
pushf
adc
daa
gs
andb
es
cs
inc
lcall
lea
sbb
nop
popa
cwtl
clc
sbb
sar
mov
add
xchg
arpl
idivl
add
add
xlat
imul
add
flds
ds
outsb
sub
mov
sub
jmp
loop
ja
jg
testb
push
out
sub
push
ja
add
add
dec
shll
fidivs
pop
and
out
in
lcall
jmp
imul
rolb
mov
shlb
lods
lahf
call
pop
lret
mov
sbb
add
inc
jbe
int
xor
inc
ljmp
sub
inc
adc
add
sbb
test
jnp
push
fstp
xchg
test
xchg
je
or
add
dec
out
fldenv
mov
inc
add
repz
aad
scas
sub
adc
inc
mov
add
scas
cmp
xor
cmp
inc
pushl
xor
add
add
popa
jne
aaa
push
icebp
add
mov
mov
lcall
lea
push
lods
mov
lea
push
sbb
cltd
jecxz
lea
or
xchg
inc
lcall
inc
mov
xchg
sbb
dec
adc
pusha
add
add
cli
iret
jg
test
sub
cmp
dec
add
jmp
call
push
mov
insb
add
fisubrs
add
fmul
push
shrl
mov
inc
ja
sub
inc
jae
push
add
sti
or
and
or
in
sahf
mov
add
cltd
clc
data16
pop
cmc
dec
rorl
gs
imul
ficompl
test
in
lods
imull
add
repnz
sub
testl
into
or
dec
je
add
inc
push
dec
or
adc
xchg
call
inc
mov
in
movq
mov
cld
sbb
subl
push
push
and
sahf
push
cltd
and
pop
fdivs
dec
jno
add
push
das
add
add
sub
jecxz
sti
scas
adc
push
push
popf
loopne
out
or
mov
add
add
ljmp
fwait
sbb
gs
lods
in
std
xor
mov
add
fnclex
shl
aas
jecxz
fwait
mov
xor
add
add
mov
inc
or
add
xchg
pusha
rcrl
add
mov
dec
xor
jmp
pop
or
xlat
lret
sub
les
out
dec
adc
push
xor
out
cwtl
std
adc
jecxz
add
push
add
push
loope
das
xchg
add
sub
call
xchg
jne
sbb
inc
push
pushf
mov
mov
mov
push
sub
push
push
add
roll
push
add
jb
aas
pusha
add
and
aas
mov
and
dec
out
add
stc
xlat
pushf
clc
mov
cmovge
jmp
rorl
pop
mov
lret
sbbl
jbe
and
pop
dec
rclb
add
iret
mov
test
cmc
repnz
mov
pop
jle
or
jnp
popf
lds
daa
add
stos
xor
jne
loop
add
add
add
addl
movsb
cmpb
mov
add
xchg
push
loopne
fadd
inc
ljmp
push
mov
hlt
mov
ja
in
hlt
add
mov
jne
or
add
push
shrl
lret
mov
add
sub
jp
nop
lcall
testl
arpl
mov
push
out
rorb
sahf
add
ljmp
mov
jecxz
pop
out
xor
cli
cwtl
sub
push
adc
repnz
add
sub
add
aaa
add
incl
cmpsl
lds
and
decl
jne
adc
loopne
les
jno
mov
pop
xor
dec
push
dec
add
add
mov
add
sarb
add
pop
idivl
cli
int3
push
cmc
push
stc
insl
cmpsb
xor
cltd
fld
dec
jbe
adc
aam
lock
push
xor
push
add
adc
adc
test
cmp
sbb
cs
test
scas
mov
jnp
aad
testb
jle
and
or
es
jo
iret
enter
fistpll
loope
or
out
mov
add
push
cwtl
sbb
push
xchg
adc
cmp
cmp
pop
mov
push
dec
icebp
das
inc
test
cmp
je
push
or
add
lahf
rcll
fiaddl
sti
add
push
arpl
inc
and
fldt
je
pop
cmpsl
mov
add
and
xlat
add
add
or
cmp
lods
mov
fnstcw
iret
sbb
cmc
js
inc
mov
cmp
jbe
or
loop
in
aas
push
stos
fidivrl
pop
cmp
sbb
push
xlat
push
cmp
pop
les
jb
fists
push
xor
ret
add
mov
out
adc
into
loop
mov
cmp
xlat
mov
add
add
or
mov
mov
das
jbe
pop
xor
adc
icebp
add
xor
add
push
adc
inc
xlat
pusha
gs
add
out
dec
call
xchg
lock
adc
aaa
and
lcall
pop
imul
loope
or
mov
mov
bound
and
mov
inc
mov
subl
mov
add
ror
outsl
sbb
jp
clc
pop
clc
push
xlat
outsl
es
pop
ljmp
daa
xor
add
mov
sbb
xor
push
test
add
mov
les
jmp
addb
pop
add
or
cmpsl
es
in
xor
repnz
fwait
adc
add
jecxz
mov
and
insl
stos
or
add
aad
or
scas
aad
push
push
add
hlt
xlat
into
notl
ror
outsl
jno
mov
ljmp
outsl
je
es
lods
fisubl
inc
inc
shll
and
add
shrl
push
popf
xor
shrb
jae
mov
gs
mov
jbe
pushf
cmp
add
das
je
es
leave
add
daa
xor
add
inc
addl
xchg
out
enter
pop
lret
mov
or
inc
dec
adc
mov
and
cld
add
add
fildl
lahf
mov
adc
sysexit
into
ret
add
push
xorb
test
add
hlt
call
xor
les
adc
dec
and
add
pop
loop
aad
xchg
add
in
mov
xchg
lcall
out
stc
test
add
cmp
add
or
out
sub
and
outsb
sub
pop
mov
lds
jmp
add
call
ds
add
inc
push
daa
imul
cmp
dec
call
movsl
add
adc
add
movl
push
add
and
jecxz
sbb
cmp
xchg
add
mov
stc
sbb
or
push
add
jp
dec
outsb
mov
mov
jmp
addb
or
test
iret
or
add
fimull
lahf
into
mov
pop
push
dec
cli
sahf
cmpsb
xchg
mov
iret
adc
shll
int
cmp
xchg
out
add
or
mov
jle
pop
mov
clc
ret
add
test
add
add
cmc
mov
adc
jl
lock
add
and
cmp
into
mov
les
movb
xor
cmp
cmp
add
add
pop
mov
add
mov
or
data16
daa
jne
outsl
insb
pop
mov
add
repz
sub
shrl
sbb
and
mov
add
mov
mov
xor
int
sub
sbb
stc
es
xor
out
xchg
out
inc
inc
subl
xor
mov
lods
xchg
add
sbb
sahf
in
add
loopne
or
mov
scas
xor
into
in
and
add
add
cs
rep
add
das
mov
aam
stos
lods
fists
mov
push
mov
push
pop
cld
cmc
push
inc
add
in
sub
add
add
add
jp
mov
or
add
inc
adc
cmp
jmp
ljmp
add
int3
add
insb
xchg
repnz
mov
mov
addr16
pop
data16
add
jno
dec
mov
idivb
sub
lods
cmpsb
add
xor
sub
mov
mov
bound
jne
int3
cmp
inc
push
loope
pop
and
rcr
in
dec
add
bound
enter
out
test
pop
js
lahf
cmp
movsl
sbb
lods
popa
cld
inc
mov
jb
add
dec
stc
stos
lods
adc
repz
add
hlt
mov
cmp
adc
xchg
inc
add
cmpl
cwtl
mov
sbb
repnz
movsl
add
leave
dec
scas
add
pop
stc
repz
mov
inc
out
sub
xchg
add
jg
loopne
xchg
add
clc
add
lods
subl
cmp
js
and
inc
add
xor
pop
mov
adc
aaa
sub
jp
aad
mov
ljmp
sbb
xchg
outsl
ljmp
outsb
mov
jp
inc
iret
sarb
rolb
es
cmpsl
inc
jmp
cmc
in
ss
sbb
push
mov
add
enter
repnz
fcmovne
movsb
dec
std
iret
add
dec
les
stc
fmuls
loope
mov
xlat
and
rolb
movsl
pop
out
mov
rolb
outsl
or
inc
xor
push
or
insl
adc
scas
out
jo
jb
addb
pop
test
sbb
icebp
sbb
sti
and
dec
mov
xchg
mov
cmpsl
inc
lock
loop
dec
adc
sub
lret
add
sub
jb
adc
ss
xor
dec
add
and
divl
test
adc
fnstenv
push
xchg
je
jnp
add
inc
add
mov
xor
push
sbb
mov
inc
push
lret
testb
xchg
xchg
add
sbb
rorb
adc
jne
mov
adc
mov
popa
and
xor
or
in
mov
cmpb
sbb
sbb
orb
out
add
inc
or
clc
out
pop
dec
xchg
push
add
sub
add
jns
pop
sarl
outsl
add
add
push
add
out
sbb
mov
fbstp
add
std
add
je
xor
es
xor
sub
add
add
add
repz
add
xchg
add
jns
push
jle,pt
enter
add
stos
mov
mov
push
add
shlb
add
xchg
in
push
mov
inc
ret
iret
mov
jae
mov
mov
inc
add
mov
loopne
pop
cmp
mov
int3
enter
subb
call
test
pop
jge
enter
test
push
test
arpl
mov
add
fcoms
cs
pop
movsl
add
mov
add
rorb
test
and
jmp
sub
jb
mov
jp
cmp
clc
add
xchg
pop
lds
call
out
adc
push
add
xlat
xlat
mov
lods
xor
outsb
pop
leave
push
ret
mov
cmpsb
inc
cs
mov
xchg
add
xchg
mov
add
add
nop
pop
icebp
pop
shll
or
fs
push
sbb
icebp
jo
or
lods
mov
sti
add
outsl
int
jns
out
lahf
arpl
add
pop
push
aad
sbb
add
lods
xchg
dec
add
in
xor
adc
fiadds
out
and
mov
icebp
fdivl
outsb
jne
xchg
xchg
les
test
mov
mov
or
add
fs
inc
vpcomuq
add
sbb
add
repz
mov
cmp
stc
cmp
je
call
add
sbb
add
add
cmp
lds
jns
pop
nop
add
add
and
push
mov
cli
bound
push
add
mov
push
jecxz
fistpl
lds
mov
mov
lock
outsb
adc
cmpsb
mov
add
stos
ficompl
add
scas
cmc
les
add
ljmp
dec
pop
cs
movsb
add
fstpl
in
mov
push
leave
push
add
dec
scas
add
or
mov
sbb
inc
pop
scas
and
xchg
push
mov
jno
add
adc
add
mov
lahf
sub
add
les
lcall
xor
inc
pop
mov
mov
mov
insl
sar
ficoms
push
sbb
aam
cli
pop
adc
add
adc
adc
add
push
cli
add
xchg
cmp
push
mov
xor
and
jp
mov
cmp
jmp
sub
mov
xchg
adc
mov
cmpsl
xchg
orb
pop
or
jae
sub
scas
cmpsb
movsb
jl
leave
and
loop
cmc
scas
dec
add
stos
jl
popa
dec
add
pushf
test
ljmp
pop
lret
and
sahf
jno
and
pusha
mov
add
add
add
mov
mov
add
fistpll
imul
repz
add
mov
outsb
mov
add
lea
jmp
mov
or
add
add
icebp
cmpsl
push
into
scas
jne
fldt
inc
roll
mov
imul
rorb
add
cmpsl
shrl
cmp
or
dec
ss
pusha
sbb
jnp
outsb
mov
stos
movsl
add
push
dec
data16
lret
mov
lea
push
pop
mov
sub
repz
mov
sbb
fmuls
movsb
aad
ja
mov
push
or
or
mov
mov
push
popa
add
jnp
push
pop
cld
add
in
inc
jp
cs
xor
in
cmp
add
stc
lcall
jl
jmp
or
pop
popa
mov
inc
pop
out
push
rolb
lods
push
in
pop
add
clc
out
or
add
sub
jae
jae
imul
test
outsl
cmp
into
cmp
inc
add
add
out
and
add
jne
cld
ds
mov
aam
xchg
loope
xchg
mov
les
add
add
enter
add
push
scas
nop
add
ss
loopne
dec
xor
fistl
add
int3
ds
cmp
cltd
adc
mov
add
cmp
popa
xchg
mov
push
hlt
add
std
xchg
sarb
hlt
jmp
push
add
lret
cmp
fnsave
push
aad
sub
cld
add
lahf
iret
cld
loope
or
movsl
mov
repnz
cld
movsb
adc
enter
scas
icebp
xchg
movsl
add
std
dec
dec
fldcw
dec
add
fistpl
std
jno,pt
push
gs
stos
adc
pop
pop
mov
sbb
inc
add
lcall
cmp
cltd
inc
out
imul
pop
add
pop
cmpb
loop
das
adc
lds
xchg
mov
repnz
loope
repnz
aam
jl
inc
arpl
add
ret
lret
add
and
sub
leave
dec
nop
imul
sbb
jns
sub
rorl
lods
mov
loope
arpl
jecxz
mov
add
ret
adc
fwait
add
mov
lret
inc
out
aaa
add
xor
sahf
outsl
add
mov
lods
cmp
std
rclb
fwait
dec
sbb
stc
lret
cmp
test
insb
cmpsb
aam
jae
or
outsb
enter
mov
and
add
xor
add
adc
cli
cmc
cmpsl
add
xchg
fldt
jae
add
ret
cmpsb
mov
test
bound
add
sub
mov
add
dec
xchg
mov
jns
daa
fidivrs
add
cltd
faddl
mov
push
mov
aad
cmp
sbb
jo
push
add
in
arpl
pusha
scas
or
mov
ss
add
pop
les
jnp
inc
fdivrl
add
sbb
xor
inc
xchg
push
cmc
and
pop
jbe
sar
add
mov
lcall
frstor
add
push
call
or
xchg
fsubl
jno
xchg
or
xchg
ja
movsb
sub
scas
adc
jae
xor
imul
mov
movsb
mov
mov
fsubrl
mov
jns
hlt
test
stc
xchg
and
add
fidivl
add
jp
and
and
cld
pop
add
dec
xor
inc
into
add
mov
mov
out
pop
add
adc
and
pop
movsb
and
int3
sarl
or
pop
add
mov
and
andb
dec
int
mov
movsl
cmp
mov
pusha
mov
outsb
xchg
shlb
das
fisubs
fsubrl
jmp
add
add
pop
gs
stos
sub
call
add
test
xchg
xchg
bound
mov
or
and
pop
hlt
sbb
fnstcw
out
mov
ret
int
inc
cmpsb
push
add
dec
sub
stos
stc
mov
call
sub
add
add
int
lret
inc
sbb
add
add
leave
movsl
loop
add
inc
add
aad
jecxz
rcll
sbb
jbe
movsb
adc
outsb
add
xchg
jmp
jb
inc
add
jge
jns
jns
add
sahf
lods
add
mov
mov
gs
cmpl
in
add
mov
rcl
add
add
test
xchg
fwait
add
push
add
pop
inc
mov
iret
mov
fcmovbe
pop
jg
lahf
xchg
add
mov
in
lods
pop
aaa
nop
add
jae
jmp
das
enter
adc
pop
jl
scas
mov
push
fs
aas
sbb
stos
add
imul
sub
lret
sub
pop
jg
sbb
push
inc
add
scas
jmp
or
orb
arpl
mov
ret
jns
fsubrp
pop
cld
sub
outsb
mov
sbb
dec
pop
cmp
adcb
mov
insw
sub
jp
adc
push
add
add
push
inc
add
ficoms
fwait
fwait
mov
sbb
sbbl
cltd
sub
stos
in
or
add
test
pop
decl
je
mov
jnp
mov
fiaddl
dec
dec
jae
pop
mov
ljmp
ljmp
xchg
lds
xchg
cwtl
inc
and
sbb
xchg
lods
xchg
dec
popa
add
dec
leave
pop
push
sbb
sub
add
sahf
push
add
into
sub
sbb
or
stc
and
cmpsl
add
jne
repnz
or
iret
fisttps
add
iret
ja
xorl
xchg
dec
dec
add
mov
mov
lret
cwtl
rclb
inc
sbb
adc
lods
push
les
xchg
jmp
adc
stos
adc
add
add
xchg
mov
add
mov
cwtl
or
mov
cmp
jge
jmp
pop
mov
mov
add
mov
push
add
and
jns
jmp
adc
mov
add
add
les
stc
out
test
repz
fcompl
mov
sbb
fistps
add
push
adcb
sub
ret
mov
mull
loopne
cmp
popl
jbe
dec
mov
sub
nop
mov
cmp
gs
hlt
jo
mov
into
fldl
mov
mov
mov
jnp
jns
jle
and
mov
or
mov
mov
insl
add
xchg
cli
cwtl
dec
fs
cs
sbb
cmp
scas
adc
inc
add
dec
cmpb
cmp
subb
mov
mov
sub
imul
std
push
out
scas
sbb
dec
inc
add
push
enter
xchg
fdivrl
imul
mov
dec
cltd
fwait
fs
mov
add
outsl
mov
inc
xor
inc
lahf
add
inc
out
inc
cmpsb
add
add
outsb
aaa
scas
pop
incb
fmull
rolb
rolb
sbb
dec
jns
bound
add
cld
xchg
cmp
xchg
aad
std
add
push
push
ss
push
add
push
mov
inc
jne
adc
dec
jmp
fsub
pop
push
push
dec
popf
mov
ja
add
xor
add
int
jle
jns
pop
mov
add
inc
fiaddl
pop
in
shll
xchg
out
in
add
shl
repz
push
adc
or
scas
adc
pop
add
aad
ljmp
testl
pop
or
xchg
mov
aad
daa
cld
or
jb
cld
add
popf
aam
shlb
mov
repz
push
stos
cmpl
and
aas
add
xchg
repnz
dec
shll
dec
push
push
aad
add
lds
jmp
and
add
fildl
daa
add
sub
xor
or
cld
pop
ljmp
stos
add
mov
pop
mov
sbb
mov
out
insb
add
cmc
add
push
aas
mov
js
cmp
outsl
add
pop
out
inc
fwait
add
adc
mov
add
add
cmp
das
imul
and
imul
add
test
xor
push
and
ds
out
pop
sbb
out
ds
mov
inc
cmpsb
mov
mov
shll
xchg
mov
inc
add
adc
mov
pusha
mov
mov
test
pop
sbb
rorb
loope
mov
cli
add
xchg
loope
add
add
xchg
div
push
sub
clc
in
jae
jge,pt
pop
daa
add
dec
add
mov
push
movsl
mov
add
jmp
stos
mov
divl
inc
scas
push
cltd
add
xchg
xor
push
mov
inc
inc
adc
mov
lea
into
and
xor
mov
add
push
insl
add
adc
movl
cmp
xchg
mov
or
loope
ss
cwtl
and
in
stos
add
out
sub
into
add
js
cmp
dec
ja
ds
mov
subb
data16
cmpsl
shll
dec
push
cs
rorb
add
ljmp
xor
jmp
out
jne
add
outsb
shl
flds
pop
mov
jmp
enter
add
pop
popl
xor
aad
fstp
mov
mov
adc
cmpsl
sbb
aam
aas
sbb
cmp
add
add
in
jecxz
push
add
lds
outsb
fcom
je
mov
pop
in
arpl
int
add
push
fldcw
mov
push
cli
push
scas
or
repnz
add
inc
pop
adc
inc
gs
pop
out
popa
mov
fcmovbe
mov
loop
ret
lret
pcmpeqw
imul
out
add
fbstp
xor
dec
mov
sub
or
into
movsb
adc
push
or
mov
pop
add
or
pop
aas
jl
push
mov
push
cltd
and
jecxz
push
inc
je
sti
dec
add
gs
push
fcompl
shll
in
mov
lods
sahf
stos
nop
popa
loopne
mov
int
xchg
pushf
fistps
inc
add
and
mov
inc
jmp
push
add
shl
push
add
fdivs
je
add
pushf
rcrl
sub
xchg
mov
test
add
mov
subb
iret
in
lods
pop
movb
int3
add
add
add
jp
dec
das
popl
out
stos
or
lar
iret
lock
mov
pop
push
ret
xlat
lea
add
sti
daa
in
mov
ja
add
mov
inc
push
push
pop
lret
mov
int
add
lret
sbb
scas
and
add
dec
add
add
xor
not
fimull
mov
sbb
mov
lods
jl
jge
xchg
daa
cs
xchg
les
call
jbe
dec
xchg
add
mov
imul
rorl
movsl
add
pop
pop
outsb
int3
inc
hlt
iret
fsubl
add
cmpsl
inc
mov
lahf
add
cmp
pextrw
cwtl
xlat
imul
out
adc
mov
mov
jnp
dec
je
fistpll
lods
daa
pop
fidivrs
jb
add
add
movl
xor
int
rorb
dec
je
add
mov
add
mov
add
ror
pop
sbb
sbb
push
in
data16
subl
add
les
mov
pop
aaa
sbb
add
stos
pop
xchg
movsb
sti
xchg
jbe
dec
in
jl
add
dec
popf
push
add
add
xchg
in
add
add
lahf
gs
cmp
lods
add
add
adc
pop
sbb
bound
dec
mov
adc
outsl
mov
xchg
xlat
or
leave
mov
movsb
into
mov
in
pop
outsl
inc
adcl
in
xor
jae
jo
add
xchg
add
and
sub
push
movsb
mov
sti
and
mov
push
lahf
xor
push
pusha
call
pop
pop
add
add
mov
add
ljmp
aam
xor
inc
add
adc
jmp
xchg
adc
add
adc
jg
xchg
insb
mov
push
adc
sbb
jge
lods
clc
add
cwtl
repnz
jbe
addb
dec
lret
push
pusha
pop
or
inc
imull
pop
stos
sbb
cmpl
rclb
or
rcrl
rcll
add
adc
pop
push
push
and
mov
mov
icebp
outsb
inc
mov
push
scas
push
mov
xchg
jnp
lahf
stc
xchg
insl
lods
lret
lret
js
or
add
adcb
cmpsl
std
rolb
xchg
pop
jae
movsl
xor
mov
add
sub
and
xlat
or
data16
hlt
inc
daa
out
sbb
lods
mov
mov
add
mov
mov
mov
sbb
add
mov
cmp
cmp
mov
pop
jae
out
add
xchg
xlat
movsl
mov
add
inc
das
mov
xor
int
xchg
pop
roll
mov
pop
push
sub
xor
stc
dec
and
pop
add
or
pop
jge
adc
adc
adc
xor
fmull
sub
push
push
pop
jb
es
mov
push
cmp
cmp
les
gs
iret
popa
xchg
lods
add
push
icebp
jge
ds
addr16
inc
sub
sbb
inc
jp
add
add
lock
test
add
inc
or
dec
ds
xor
ret
dec
pop
push
add
add
in
js
aam
or
clc
add
lock
jnp
jmp
nop
roll
add
push
sbb
and
mov
or
mov
decl
ja
push
in
xchg
mov
sbb
fsts
es
int3
mov
sbb
add
add
add
push
incb
outsb
push
nop
and
addb
stc
add
push
cwtl
cld
push
xor
mov
add
aam
mov
add
cmp
je
sub
mov
daa
addb
jp
add
xor
push
je
adc
lea
add
bound
add
in
leave
push
push
scas
in
scas
add
mov
mov
xchg
or
cmp
fisubl
pop
popa
push
repnz
dec
dec
lahf
popa
push
push
mov
add
cld
push
inc
subb
das
rclb
roll
jmp
fwait
daa
add
dec
and
ds
cmp
pusha
jmp
repnz
gs
in
push
push
pop
or
rcrb
pusha
lds
fiadds
pop
jge
cli
rcrb
add
insb
es
add
pop
mov
pushf
cli
add
gs
sub
add
add
xchg
sub
jo
data16
ljmp
push
push
std
and
add
stos
incl
stos
xor
jecxz
cwtl
pop
mov
adc
scas
or
rcl
sbb
push
jno
mov
pop
xchg
pop
das
add
jno
incl
popf
push
icebp
inc
mov
or
add
push
je
mov
pop
mov
adc
mov
outsl
not
pop
xchg
push
in
ss
daa
repnz
sub
int3
in
mov
out
in
subb
xchg
jns
fcomip
cmp
outsb
mov
add
es
add
push
xchg
jg
mov
or
shrl
xor
mov
je
adc
outsb
popf
insb
jns
xor
aad
cmp
ja
pop
add
xor
je
xchg
or
mov
and
repnz
out
push
mov
mov
pop
inc
or
cmp
std
add
popa
ret
out
and
add
mov
xchg
sbb
jnp
add
mov
add
mov
cmc
push
push
inc
push
push
add
aas
xchg
add
push
movsb
dec
mov
nop
xor
mov
dec
loop
sbb
inc
std
add
add
es
lea
mov
sbbb
xor
insl
push
test
xchg
add
and
add
add
sahf
mov
dec
inc
mov
adc
or
add
dec
clc
add
mov
dec
and
push
cli
or
insl
std
push
ljmp
sbb
leave
add
scas
sub
test
or
insl
sub
add
add
add
leave
notl
loope
jmp
addr16
dec
xor
mov
lret
add
cmp
xchg
add
sub
and
add
adc
repnz
test
out
pop
xchg
pop
cli
xchg
insb
outsb
aam
repz
loopne
jo
loope
popf
or
pop
movsl
dec
add
repnz
in
mov
add
fs
add
pop
jnp
mov
pusha
inc
mov
or
pop
loope
cmpsl
xlat
mov
inc
push
jns
add
enter
call
sub
mov
add
or
add
cltd
mov
add
mov
outsb
in
push
push
int3
bound
fdivs
stos
fisttps
or
adc
add
addl
add
add
ficoms
hlt
shlb
shll
push
pusha
inc
jmp
or
cmc
mov
pop
mov
imul
mov
pop
hlt
dec
jns
xchg
loope
inc
add
and
leave
add
push
lds
inc
mov
fldl
jmp
stos
nop
ret
popa
mov
pop
add
add
outsl
push
cwtl
mov
addr16
int3
dec
fcompl
int
sbb
aad
popf
les
add
mov
or
mov
adc
mov
pop
dec
add
repnz
push
xchg
jns
xchg
repnz
addl
clc
imul
outsb
imul
mov
in
pop
xor
sti
loop
adc
mov
leave
or
push
add
add
data16
lcall
rcll
push
sarb
push
push
insl
jmp
adc
mov
gs
test
imul
push
xchg
mov
push
xchg
shrb
aad
xor
enter
repnz
push
add
pop
cwtl
add
and
ret
jne
test
sbb
sub
stc
int
jl
add
aaa
dec
ret
add
lods
int3
and
push
leave
add
fdivrs
and
push
cwtl
dec
cmpsb
jge
mov
or
jnp
fisubrl
repz
pop
das
adc
pop
xor
and
add
add
add
int
fists
mov
pop
jmp
popa
jmp
out
fsubrs
add
imul
daa
add
ss
jae
adc
sahf
add
sbb
mov
pop
stos
fiadds
push
sbb
cmpsl
add
hlt
daa
adc
xchg
aam
mov
pop
and
stos
cmc
xchg
jg
add
mov
xchg
sub
fcmovu
add
popl
add
and
mov
repnz
sahf
adc
nop
add
call
sbb
movsb
add
xor
cmp
adc
jl
xchg
push
jl
cmc
orb
jl
cmp
mov
pushf
dec
dec
sbb
leave
es
sbb
xchg
punpckhbw
nop
fldt
fistpl
lret
jb
sub
sbb
cmp
push
loope
adc
ficoms
call
mov
xchg
mov
test
push
jnp
lds
ss
jbe
scas
add
enter
bound
iret
shlb
mov
mov
dec
add
add
popf
push
mov
sub
enter
push
hlt
test
pop
xor
fstp
in
adc
cmp
lret
add
mov
mov
jle
push
mov
fsub
mov
adc
call
dec
inc
insb
sub
repz
fs
fucom
aaa
xchg
jnp
repnz
add
mov
sahf
add
add
imul
movsb
mov
mov
das
jne
sbb
aaa
add
lock
movsb
gs
sub
mov
add
and
das
xchg
xchg
shl
mov
push
std
js
imul
sub
add
icebp
dec
addl
ss
cmpsb
int3
lock
or
and
divb
insl
shrl
shlb
add
mov
add
add
xchg
xor
jae
fs
pop
jle
mov
add
pop
add
add
mov
push
std
test
or
push
push
sysret
clc
out
mov
and
add
test
and
sub
ret
les
add
ljmp
add
xchg
xchg
dec
lock
loope
int3
lods
test
outsl
mov
lret
xor
add
rol
hlt
adc
add
xor
lcall
add
add
inc
mov
jo
sti
movsb
rcr
lret
outsb
add
pop
or
or
pop
push
test
adc
icebp
add
sbb
xor
bound
push
test
in
js
sub
push
insl
add
fcomps
xor
add
mov
out
jmp
xorb
xchg
inc
xchg
aad
gs
jne
fmull
pop
add
loop
jb
push
or
je
add
mov
mov
pop
ljmp
or
xchg
iret
mov
inc
insb
cwtl
or
adc
xchg
cmp
add
add
cli
add
mov
stos
lret
cmc
xchg
shll
lret
aam
mov
add
sbb
jmp
cltd
or
push
mov
pop
mov
dec
popa
insl
mov
leave
fldcw
in
lds
or
add
push
das
push
jb
add
ret
std
or
jb
imul
lock
and
xchg
xlat
clc
mov
repnz
mov
xchg
push
mov
add
sbb
pop
sbb
aam
adc
fildl
leave
pextrw
add
lcall
add
das
inc
adc
mov
mov
mov
dec
dec
and
shrb
mov
cmpsl
pop
add
fs
cmpb
xchg
popa
cld
mov
sbb
lret
jae
xor
inc
xor
or
out
fidivrs
ljmp
es
popf
rolb
mov
sarb
add
pop
mov
xacquire
mov
dec
call
add
add
push
push
movsb
add
int3
mov
mov
aad
int
inc
out
add
mov
and
or
adc
repnz
add
ret
call
mov
add
pop
cmc
adc
arpl
mov
add
pop
dec
pop
icebp
adc
jnp
inc
scas
add
fcmovne
test
fs
jne
or
clc
stc
and
popa
add
and
add
pop
pop
jmp
or
lock
outsl
jbe
mov
ljmp
rcrl
pop
add
jns
or
jo
inc
add
mov
pushf
add
mov
adc
or
mov
xor
xor
fwait
mov
fimuls
icebp
cmpsb
dec
cltd
jbe
repnz
push
mov
lcall
sbb
pop
mov
andb
xchg
movl
sti
mov
in
xchg
jmp
cmp
scas
insl
xor
sahf
shlb
lret
adc
shlb
xchg
pextrw
and
lods
or
push
test
mov
filds
out
push
or
cs
scas
call
icebp
mov
mov
mov
loop
lahf
xchg
push
and
xchg
add
scas
in
and
adc
lock
jle
das
call
pop
flds
mov
sahf
xchg
jecxz
je
cli
cmpsb
mov
dec
or
cli
xchg
add
mov
sub
das
cmc
mov
xor
push
jo
popf
out
or
enter
sti
fildl
mov
inc
or
aas
into
push
add
mov
mov
jge
add
addr16
sub
cmp
out
jae
add
mov
push
iret
ret
rcrl
cmpsb
and
inc
nop
scas
out
scas
mov
ss
push
jns
sahf
or
xchg
aam
lret
mov
sbb
sub
mov
imul
add
push
inc
fiaddl
push
push
js
jp
es
lea
add
int3
inc
xor
sti
loopne
js
cmp
sbb
sub
xor
or
sbb
add
popf
adc
mov
fsubp
outsl
mov
pop
add
xchg
scas
popa
add
mov
add
add
add
jecxz
add
add
int
cmpsb
pop
inc
sbb
push
mov
addr16
add
dec
xchg
dec
test
jmp
mov
push
ss
repnz
mov
movl
cmp
cmp
inc
add
scas
dec
add
add
fisubrl
push
dec
add
rcl
negl
mov
out
in
mov
mov
add
addb
adc
int
addr16
pop
movsb
sbb
and
cmp
out
adc
jo
sbb
icebp
in
push
fistpl
sti
jno
lret
popf
ljmp
mov
gs
mov
movsb
outsb
add
aam
repnz
lock
dec
out
pop
mov
nop
add
dec
and
add
repz
add
xchg
orb
dec
cmp
add
xor
cmp
xchg
add
inc
mov
sbb
int
es
xor
cmp
inc
mov
dec
ret
lds
add
inc
imul
add
mov
xchg
inc
xor
jno
xchg
dec
xor
add
sub
jno,pn
pop
or
cmpsl
mov
jb
imul
cli
fdivr
sbb
push
out
leave
push
decl
ret
clc
fmuls
fcoms
add
int
jb
mov
adcb
inc
lret
pop
cmp
int
aas
js
add
fildll
pushf
add
mov
icebp
adc
sub
in
add
or
push
lods
dec
add
mov
fiadds
insb
fimull
add
test
fmuls
call
add
lret
mov
loope
inc
stc
dec
mov
stc
cmpsb
push
mov
dec
jns
add
fs
jne
sub
or
in
lea
add
xor
in
std
add
in
mov
add
xor
xchg
mov
mov
iret
jo
stos
scas
out
mov
or
stos
jo
pop
or
imul
and
add
sub
fildll
sbb
sub
push
dec
sbb
pusha
sbb
je
xor
pop
push
fcmovnu
leave
add
sub
push
repz
mov
mov
bnd
stos
dec
mov
repz
jo
arpl
xchg
cmp
int
addl
inc
pop
mov
mov
ljmp
dec
sub
mov
jecxz
push
add
jns
shl
fisttps
sub
out
inc
lret
mov
cld
in
xor
enter
or
inc
add
add
or
xor
sarb
mov
bound
sub
pop
movl
sub
stos
and
mov
rorl
cmp
mov
fsts
lahf
sbb
and
and
add
add
gs
push
fiadds
push
mov
fbstp
add
xchg
add
push
mov
fsts
bound
rcl
adc
jno
incb
lods
add
stc
mov
aam
add
in
push
bound
mov
sub
push
cmp
dec
insl
xor
lahf
sti
xor
jne
cmp
jbe
popa
fsubr
cld
add
add
mov
cmpsb
add
jno
push
mov
nop
rcr
das
mov
add
add
and
add
gs
js
adc
mov
test
xor
add
fisubrl
add
int3
lods
cwtl
ud0
mov
dec
in
add
add
mov
jnp
add
mov
pop
push
repnz
xchg
dec
add
insb
out
push
push
pusha
mov
xor
dec
test
mov
cmpl
test
or
mov
mov
push
xor
fistpll
lds
mov
add
sbb
cmpsb
rol
cmp
push
mov
adc
add
test
in
xor
ljmp
call
faddl
bound
xchg
cmc
gs
loopne
cwtl
or
inc
xchg
fwait
add
adc
sarb
stos
and
cmpsl
jg
lods
ss
add
xchg
add
push
jle
mov
in
rcr
mov
or
hlt
cmp
sub
add
inc
cmc
push
add
aaa
add
pop
add
ds
out
add
sbb
dec
enter
fmull
sbb
or
or
add
add
sahf
lea
xchg
push
push
add
or
jle
inc
rolb
add
add
testl
xor
test
les
dec
jnp
mov
add
subl
lahf
rcl
test
test
xchg
add
add
mov
dec
loope
scas
jp
add
xlat
aaa
xor
mov
into
mov
or
jb
mov
ss
ja
add
fcompl
push
cwtl
daa
adc
mov
add
popf
aaa
add
das
inc
fsubs
ret
fwait
mov
aam
and
icebp
bound
out
jb
repnz
cmp
inc
rorl
sub
out
add
enter
mov
add
in
loope
dec
frstor
jp
inc
xor
iret
stc
rolb
add
in
movsb
fsubrs
in
sub
pop
add
add
es
repz
mov
add
je
jecxz
sbb
xchg
lret
dec
dec
add
mov
cwtl
gs
and
lret
mov
push
movsl
push
mov
xor
add
xchg
std
add
cmp
adc
nop
lods
adc
mov
sbbl
sbb
sub
and
call
add
push
es
add
iret
nop
add
add
dec
scas
xchg
mov
sub
sbb
stos
add
rcrb
incl
and
cmp
mov
int3
cs
lret
mov
mov
dec
inc
aam
fists
lret
push
mov
add
test
xor
add
jns
test
inc
lret
repnz
adc
push
std
mov
out
and
pop
popa
arpl
sbb
roll
movsb
or
cmpsb
andl
lea
sbb
pop
add
xor
mov
sahf
dec
js
jg
rorl
enter
sbb
mov
js
cmp
mov
add
mov
mov
daa
add
adc
add
in
out
lahf
lret
add
leave
add
ficoms
or
lock
fisubl
dec
rolb
int3
fadd
loope
std
andb
adc
push
std
or
push
add
ja
frstor
sbb
test
lods
mov
ljmp
and
pop
cwtl
ja
and
add
stos
jno
sub
lods
dec
dec
cmpsb
and
dec
add
adc
arpl
xchg
outsl
fnsave
xchg
dec
add
ret
pop
dec
sbb
int3
add
push
cmp
inc
insl
cltd
sub
add
push
mov
sub
js
pop
add
add
add
fadds
fiadds
add
adc
inc
mov
push
call
test
mov
sub
adc
sbb
hlt
push
cwtl
gs
out
cmp
jnp
cwtl
data16
dec
lock
enter
aam
test
lods
add
repnz
das
add
sbb
mov
aam
adc
cmpsb
add
add
add
add
mov
in
stc
xor
add
into
jge
bnd
subl
ss
cmpsb
xchg
pop
add
adc
cs
ljmp
cli
add
mov
add
add
jo
mov
push
enter
loope
or
adc
das
adc
mov
movsl
jnp
stc
cmp
popl
inc
xchg
xor
fldl
sahf
lods
xor
pop
dec
xlat
mov
jb
aaa
rcr
mov
sar
pop
and
pop
add
dec
mov
sub
or
orb
iret
xlat
adc
inc
sbb
sub
add
in
fidivrl
add
sti
filds
push
push
mov
cmp
out
add
push
icebp
mov
lea
add
or
fisubl
stos
add
inc
inc
push
push
pop
jle
pop
dec
int
sub
jne
sbb
push
aad
in
push
dec
cmp
push
jmp
sub
nop
out
sub
js
and
adc
add
insl
repz
test
mov
add
push
test
inc
scas
rolb
imul
popa
lods
fstpt
addr16
fisttpll
xchg
jo
pop
mov
sahf
xor
jo
pop
int3
rolb
lock
jne
mov
pop
push
std
ja
push
mov
xor
xorl
loope
jp
lock
bound
or
mov
dec
test
jae
cmp
jmp
mov
and
mov
cltd
fisubs
lods
imul
les
scas
mov
daa
mov
inc
mov
add
fucomp
adc
fiaddl
pop
loopne
add
mov
jp
xchg
add
enter
bnd
aad
and
rolb
rcr
movsb
push
loope
mov
pop
add
inc
stos
add
fs
fwait
mov
jbe
nop
xchg
add
or
scas
cs
jecxz
jge
arpl
inc
xor
add
fisubs
jno
xchg
mov
lods
fldl
aam
adc
in
xchg
sub
mov
sbb
mov
cmpsb
rcl
adc
sbb
in
jp
pop
mov
xchg
add
int
add
fdiv
bound
adc
in
adc
loop
in
ss
cmp
roll
loop
or
loop
xor
mov
lock
out
or
xor
dec
inc
mov
imul
sahf
xchg
ljmp
mov
hlt
pop
mov
push
dec
sub
je
adc
lock
add
dec
or
scas
fsubrs
jne
and
add
or
add
add
sarb
adc
sbb
add
lods
push
push
add
cmp
or
inc
push
fildl
jmp
outsb
xor
add
hlt
mov
cmpsb
repnz
add
adc
mov
aas
dec
lock
sti
arpl
pop
pop
inc
add
rcr
pop
or
es
loopne
lds
push
loope
std
movsb
xor
insl
add
test
into
mov
mov
jae
aas
add
pop
mov
push
add
lcall
sbb
out
imul
or
xor
mov
pop
mov
xor
sub
cs
iret
dec
icebp
inc
test
inc
pop
add
and
mov
add
add
add
pop
jle
cmp
jbe
and
cmp
arpl
lcall
into
adc
add
dec
adc
dec
int
add
lods
dec
jmp
repnz
in
je
aam
sbb
adc
dec
cmp
lret
leave
in
mov
add
add
push
add
and
subb
fistps
aam
xlat
mov
sub
out
lock
push
and
fstps
jl
add
push
and
cld
fidivs
sub
push
add
shll
jle
add
adc
sbb
lea
add
sbb
add
aaa
pop
data16
add
pop
add
add
push
call
add
mov
sbb
pop
add
mov
es
add
or
sti
rcll
loop
mov
add
in
adc
aaa
leave
add
rclb
push
mov
mov
fwait
loop
cmp
lcall
mov
out
int
sub
add
mov
scas
stos
daa
push
loopne
dec
lea
roll
jg
mov
gs
pushf
insl
mov
fistl
fsubr
or
enter
movsl
jns
dec
jno
xor
jbe
jmp
mov
add
and
add
subb
inc
cli
add
outsb
dec
jmp
js
xchg
xchg
test
add
add
hlt
cmc
les
pop
and
inc
and
adc
xchg
inc
pop
mov
sbb
or
xchg
inc
mov
push
sub
add
pop
lcall
sbb
rolb
add
sti
jmp
sub
nop
call
sub
scas
add
and
cltd
add
inc
or
mov
stos
add
add
add
add
pop
enter
xchg
push
xchg
arpl
add
xchg
insl
jbe
pop
iret
adcl
xchg
mov
ja
movsb
fs
and
dec
rolb
pop
push
enter
mov
dec
inc
add
mov
push
and
test
add
cmp
xor
add
out
jg
scas
lahf
mov
pop
or
and
cs
in
mov
add
sarb
jb
add
ja
jno
shlb
add
std
fidivrs
cmp
inc
add
sub
mov
xchg
roll
sbb
sbb
test
lds
cs
out
add
jns
jl
jbe
loope
inc
add
lock
add
xchg
push
in
addr16
iret
aam
out
outsl
dec
int3
or
add
xchg
data16
cli
pusha
or
aas
xchg
add
hlt
lea
add
or
pop
jge
sbb
cmp
push
push
add
sbbb
xacquire
pop
lods
arpl
gs
mov
les
pushf
cmp
outsl
stos
add
pop
mov
push
pushf
and
adc
scas
jo
jo
out
in
insb
test
add
add
testl
rclb
sub
jecxz
sub
dec
int3
jmp
mov
shlb
sub
test
fmuls
mov
jns
pop
jp
xor
adc
out
inc
jmp
into
iret
ret
jmp
ljmp
cld
sub
add
xchg
fwait
mov
lcall
pop
lock
lock
adc
mov
pop
mov
pop
aam
mov
jmp
sub
popa
in
leave
cwtl
orb
push
lds
in
pop
ret
or
pop
add
push
xchg
mov
aaa
push
add
jne
push
loope
cmpl
xor
add
push
jno
sub
fisttpll
add
aas
mov
stos
aam
into
dec
inc
cld
in
cmp
add
sbb
inc
clc
test
insl
lcall
movsl
mov
test
addr16
in
cmpb
ja
add
add
icebp
nop
popa
cmp
pop
sub
and
enter
push
add
imul
jge
adc
cmp
mov
xchg
add
mov
adc
ret
sti
loopne
addb
addb
add
jne
insb
pop
or
mov
xor
sub
sti
xor
or
ja
decb
repnz
ds
into
in
and
xor
mov
pop
push
popa
xor
add
notb
aas
xor
lods
popf
lahf
mov
rorl
add
inc
psubsw
enter
out
and
les
cmc
xchg
push
push
pop
lcall
inc
test
and
xor
cmpsl
dec
sub
inc
jbe
mov
stc
xchg
cmc
cs
xor
movsl
add
pop
in
cwtl
jns
call
jmp
insl
add
bound
or
add
into
push
jge
add
lret
lahf
sub
lahf
xchg
adc
adc
add
inc
and
js
push
lret
repnz
icebp
add
pop
movsb
in
loope
out
jmp
add
pop
jecxz
je
mov
dec
ljmp
push
push
stos
dec
pop
adc
sub
adc
cmpsb
add
add
add
xor
push
test
pop
add
scas
xor
outsb
cmc
push
add
push
repz
and
addb
add
pop
dec
jo
stos
or
mov
xchg
hlt
add
add
aaa
stos
and
test
xchg
jp
lcall
mov
dec
mov
inc
push
jge
jnp
test
jb
pop
pop
lret
mov
arpl
pushf
inc
jmp
add
add
push
add
mov
pusha
pop
mov
mov
dec
and
pop
fsubrl
cli
or
pushf
ucomiss
add
mov
ljmp
pop
ror
out
lea
js
xor
cmpsb
idivb
push
dec
pop
sbb
scas
into
mov
mov
mov
jb
imul
add
mov
mov
leave
add
fildl
notl
iret
shrl
mov
jns
loopne
add
sub
cmpsl
lret
dec
cmc
add
cmp
sbb
dec
add
jne
movb
imul
out
xlat
dec
jmp
data16
out
flds
add
into
sub
jp
out
pop
push
subb
mov
cwtl
shll
popf
dec
mov
cmp
push
add
testl
dec
ret
lret
add
sti
imul
or
jmp
popa
lret
mov
and
dec
pop
aaa
repz
push
fdivrs
fdivr
test
mov
stos
jne
dec
daa
jmp
loope
cltd
mov
dec
cltd
xor
dec
andl
sbb
pusha
push
das
jns
sub
jbe
mov
gs
sub
mov
adc
pop
outsl
mov
mov
jae
jbe
insb
imul
mov
add
mov
inc
dec
mov
mov
sub
jp
jne
mov
inc
mov
stc
lcall
and
xchg
jge
jno
sub
cltd
lret
mov
xchg
dec
lea
adc
add
push
adc
add
add
add
stc
or
push
xchg
inc
push
sub
sub
sub
ljmp
fdiv
mov
test
ret
addb
incl
push
outsl
mov
int3
dec
add
unpckhps
sbb
or
sbb
inc
xchg
sbb
mov
add
add
cltd
add
stos
aaa
add
cld
inc
adc
mov
rolb
and
mov
lahf
add
mov
out
sbb
add
je
mov
call
add
mov
lret
test
test
ss
and
rorl
adc
nop
mov
add
cld
movsb
mov
and
jl
and
mov
mov
dec
add
test
pop
xchg
pop
test
push
std
loop
add
and
jo
mov
add
dec
and
xchg
mul
aaa
aad
mov
lds
jns
adc
add
fwait
insl
fldcw
jmp
sub
push
aaa
fdivrs
add
adc
add
repz
into
dec
clc
or
dec
pop
xor
and
in
adc
pop
inc
pushf
pop
push
jo
adc
imul
xchg
add
jb
add
push
add
nop
jle
pop
add
mov
mov
dec
jle
inc
jp
subb
add
ds
stos
add
ret
push
pop
or
jnp
ds
adc
dec
and
sub
push
add
js
je
xchg
fdivrs
add
mov
dec
cltd
add
sub
rorb
xchg
inc
hlt
aam
push
mov
movsl
xor
lret
dec
fildl
or
scas
stc
add
jne
jp
push
inc
insl
mov
daa
push
jecxz
xchg
insl
and
mov
add
jge
out
push
mov
mov
popa
mov
gs
or
sub
addl
mov
call
in
cmp
arpl
incl
pop
adc
add
add
pop
push
mov
dec
cmpl
sbb
pop
pop
les
push
xor
clc
xchg
das
mov
xchg
add
xchg
add
int3
push
ljmp
jnp
add
js
jb
xlat
sbb
pop
inc
fstpl
loope
out
adc
adc
lea
dec
dec
pop
jp
add
xchg
push
push
in
cltd
add
jbe
test
add
sbb
jb
add
add
jp
pop
pop
mov
add
adc
jmp
popf
adc
fimull
ds
xchg
cmp
jmp
fmull
fldl
nop
inc
pop
fwait
add
pop
xchg
icebp
sub
push
sub
add
pushf
add
lods
shrb
loop
testl
inc
sub
sbb
mov
xor
gs
jmp
scas
and
add
xchg
mov
mov
sarb
push
and
cmpsb
scas
xorps
mov
add
add
cmp
fstl
push
ret
sahf
popf
clc
sub
inc
sbb
fdiv
and
cmp
mov
or
icebp
call
sbb
pop
in
dec
out
jbe
loopne
rorb
jle
bound
roll
ja
enter
test
orl
xor
inc
add
add
add
hlt
stc
stos
mov
mov
fldt
mov
cmp
lods
aaa
jl
dec
dec
jne
das
rorl
and
bound
push
add
aaa
push
sbb
js
ret
add
sub
into
fiaddl
xchg
jge
add
lods
lock
cltd
aas
in
or
and
ljmp
mov
and
popf
push
add
xchg
int3
add
ret
add
adcb
jbe
mov
fdivrp
add
mov
dec
and
jae
or
jl
int3
rclb
mov
adc
xorb
add
push
add
add
ljmp
lahf
aad
test
stos
add
inc
cmp
adc
lods
aad
or
add
addl
sub
mov
in
pop
pop
rolb
push
cltd
mov
jo
cli
add
rolb
iret
add
out
int3
andb
add
rcrb
add
push
push
add
ret
mov
and
add
int3
add
ds
cwtl
sbb
add
add
cmpsb
movsl
adc
idivb
movsl
cmpsl
add
and
aaa
mov
mov
sbb
add
push
test
or
inc
shl
mov
push
xlat
mov
popl
cmp
sarl
and
add
mov
mov
add
cmp
cwtl
sbb
add
jg
les
negl
test
repz
popa
mov
mov
push
add
add
bts
sub
mov
mov
iret
push
in
mov
cmp
out
incb
cmpsl
add
add
add
outsl
pop
add
ds
incl
stos
sahf
sub
push
std
add
add
mov
loopne
fbstp
add
mov
pop
daa
add
out
movzwl
and
fldl
fisttpll
data16
scas
xchg
leave
stos
adc
cmpsb
fcompl
pop
add
insl
fiadds
xchg
imul
add
pushf
std
sub
dec
movsb
dec
dec
sub
pop
cmp
or
pop
xchg
push
mov
add
push
push
in
das
add
cmp
mov
jle
psadbw
ret
xchg
mov
inc
add
add
sub
lds
xorl
push
add
fcoms
add
mov
pop
insb
cmp
sub
stc
push
jnp
lock
imul
or
mov
xor
dec
jno
pop
add
xchg
adc
sub
add
sbb
xor
call
xor
inc
dec
fs
dec
add
dec
inc
sbb
stos
sbb
fstps
sub
adc
mov
mov
call
add
pop
pop
sbb
sub
add
add
push
sbb
gs
aam
push
mov
flds
daa
add
mov
sub
mov
push
idivl
mulb
lock
adc
loop
roll
cmp
insl
adcl
mov
jbe
cmp
cmp
sub
adc
cs
jno
cmp
add
mov
scas
out
xor
and
out
add
rclb
jp
add
or
mov
popa
xchg
and
sub
sub
sbb
sub
xchg
add
lret
push
ljmp
lea
mov
ret
ja
lret
adc
push
and
add
cli
je
mov
add
imul
outsb
push
sub
mov
add
hlt
pop
push
daa
mov
lea
orl
sbb
push
cmpsb
mov
cmp
test
push
inc
sti
and
int
inc
add
sar
xchg
xchg
add
movsl
sbb
stos
xchg
mov
adc
pop
add
cmp
jae
sbb
xchg
jmp
mov
rolb
mov
pop
mov
fimuls
jp
shr
xlat
js,pt
xchg
dec
add
pop
pop
add
mov
mov
popa
lahf
xchg
into
add
dec
add
repnz
mov
sub
movsl
imul
sub
sarl
xor
in
orb
jg
test
dec
mov
adc
cmpsl
add
ret
andb
pushf
xchg
mov
add
mov
lds
add
iret
ljmp
imulb
cmpsl
or
jbe
faddl
iret
fcmove
lods
inc
les
movsb
sbbb
mov
ret
sub
push
dec
sub
push
fisubs
xor
or
imul
movsb
addb
dec
adc
in
add
aas
aaa
xchg
div
out
add
insb
xchg
in
jl
add
rcll
dec
add
xor
xchg
add
cwtl
mov
jo
push
vpmaxsw
cmp
lds
xor
push
add
xchg
aam
pop
xor
mov
jbe
push
rolb
inc
inc
mov
pop
jp
jp
stos
fmulp
add
mov
adc
test
inc
lret
dec
add
xchg
insl
add
enter
adc
push
push
scas
add
loope
jge
out
add
mov
jno
sub
scas
movsl
es
adc
movsb
push
inc
dec
add
andl
cld
cmpsb
std
jno
dec
pop
sti
add
idivl
jo
jl
xchg
mov
add
sahf
popf
cmpb
aas
icebp
out
dec
rcr
xor
add
scas
adc
fbld
or
scas
pop
and
jecxz
out
mov
push
add
xlat
pop
fs
rep
add
jns
addl
add
out
outsl
aas
pop
test
add
lods
add
cmp
cld
inc
test
push
or
fdivrs
pop
dec
push
cwtl
xchg
subb
mov
mov
pop
cmpsl
iret
cli
pop
push
pop
mov
ljmp
sbb
sub
ficoml
test
and
les
mov
add
add
mov
pop
aaa
cli
ja
xchg
mov
movsb
add
arpl
add
add
add
sub
or
mov
shlb
add
mov
filds
sub
add
or
push
jle
repz
ret
cmp
test
fnsave
popf
add
out
add
rorl
cld
add
cmpb
loopne
jne
incl
cmp
add
sbb
gs
gs
mov
fisttps
add
xchg
insl
jl
cli
sahf
fadds
jne
jg
out
push
imul
mov
mov
and
filds
mulps
in
pop
shrl
loope
add
jmp
cmp
add
test
add
imul
add
mov
sub
les
movsl
push
jmp
jmp
popa
mov
sub
std
stc
imul
popa
negb
jae
adc
add
cs
adc
fsts
lcall
in
fdiv
icebp
mov
outsb
jmp
sbb
sub
add
mov
cmc
mov
je
mov
fucom
roll
icebp
add
pushf
cmp
ss
push
and
sbb
xchg
pop
inc
mov
aaa
aaa
mov
cmpsl
sahf
pop
xchg
or
add
fwait
dec
add
push
data16
push
or
inc
aam
roll
dec
mov
mov
imul
adcb
jno
daa
sbb
push
repnz
xchg
mov
cmc
repz
lock
sub
mov
pmullw
add
out
icebp
and
xor
cli
cmc
jl
or
lock
mov
push
test
pop
bswap
xor
enter
mov
push
or
fs
add
pop
sahf
cwtl
push
int3
xor
fs
cmpsl
add
add
add
bound
add
movsb
fisubrl
pop
popf
nop
das
int
adc
inc
aad
imul
int
fnsave
add
pushf
popa
cmp
cmp
sub
add
shll
int3
sub
ss
movsb
or
arpl
inc
or
dec
push
int3
add
test
ljmp
sub
push
scas
fisubs
dec
fildl
inc
mov
jo
cwtl
push
addr16
ret
inc
rcrb
std
xlat
out
insb
scas
in
xchg
shll
das
clc
add
stos
sbb
pop
push
mov
movsl
xchg
sub
adc
jl
int
pop
and
add
outsb
mov
push
dec
cwtl
xchg
sub
gs
imul
iret
push
add
das
lahf
mov
mov
addr16
jecxz
cmp
ficoms
mov
les
sub
outsb
lea
dec
push
enter
fsts
pop
lret
fwait
jmp
popa
shlb
cmp
fisubrs
and
xchg
and
and
jg
popa
add
jl
scas
push
pop
dec
fimull
aas
mov
sbb
xor
pop
mov
push
or
loope
movsb
push
push
xchg
push
adc
xchg
cmpsb
add
cs
push
aad
jecxz
add
dec
add
xor
pop
add
and
inc
clc
out
adc
bound
and
add
test
inc
sbb
dec
andl
in
pop
sti
jle
out
cmpsb
dec
mov
add
xchg
stc
or
sahf
dec
mov
push
out
jae
mov
and
xchg
add
test
dec
cmp
push
mov
cmp
test
inc
btl
sub
jb
pusha
ljmp
xchg
add
adc
lds
stos
call
jl
sub
add
add
mov
mov
xchg
inc
add
pusha
push
fbld
push
jecxz
jmp
pop
add
mov
hlt
movsb
push
aad
adc
addb
arpl
add
mov
sbb
add
pop
jno
inc
les
add
jl
lret
pop
out
filds
and
fsubrp
add
fs
jle
mov
popa
cmc
adc
js
inc
and
imul
mov
ret
fcomps
arpl
mov
mov
cmp
sub
mov
add
cli
stos
adc
jp
dec
mov
fildl
push
fwait
push
xchg
sub
inc
adc
shlb
into
cmpsl
pop
jmp
jge
loop
and
in
fcompl
mov
dec
out
das
sbb
roll
sbb
int
cmc
repnz
imul
add
in
add
add
fistl
addl
test
fcomi
int
es
push
fsubrl
add
add
push
mov
loop
repnz
pusha
or
cmp
clc
sub
dec
sub
and
xor
fisttps
aas
ret
inc
repz
mov
lret
ss
or
xchg
movsb
add
inc
add
insb
jnp
push
add
sub
loope
in
jl
loopne
jo
ret
adc
sbb
addr16
or
movsb
mov
mov
dec
out
add
add
ror
add
stc
leave
dec
add
cmp
xchg
push
pushf
repnz
scas
ljmp
out
adc
add
rcll
mov
jbe
lods
sbb
leave
scas
mov
lahf
ficoml
xor
repz
mov
push
jne
add
mov
js
add
fwait
dec
cmp
push
xor
test
add
stos
add
mov
ja
adc
fiaddl
xlat
add
rorb
push
jbe
dec
sbb
ja
jne
xchg
push
gs
jnp
cmpl
icebp
dec
test
xor
cli
add
sub
in
xchg
aam
cld
xorb
adc
les
das
xor
pop
dec
xchg
rcll
jecxz
add
add
pushf
add
xchg
mov
dec
fmuls
dec
xchg
inc
mov
add
int
filds
mov
push
add
test
add
mov
aad
push
xor
div
push
repz
push
sbbb
ficompl
sub
jmp
add
scas
rorb
jae
rcrb
cs
out
out
add
cli
pop
sbb
mov
test
scas
leave
add
dec
cmp
repz
mov
pop
xor
add
adc
mulb
add
add
add
pop
rolb
push
fsubrp
pop
dec
add
es
fmul
mov
scas
mov
sub
xchg
or
ss
adc
out
add
mov
dec
out
mov
mov
aad
push
xchg
js
sbb
adc
push
push
and
cmp
or
ret
or
int
pop
cmp
mov
int3
push
iret
movb
lods
add
idivb
push
test
add
clc
stos
xchg
mov
add
add
inc
add
in
dec
mov
pusha
jb
xlat
add
add
add
cmp
dec
xchg
add
cmp
adc
iret
loope
sub
lock
scas
jmp
jae
add
pop
mov
mov
mov
and
shll
jecxz
arpl
add
cmp
loop
mov
inc
xor
and
cmp
andb
mov
fimull
outsb
out
add
ljmp
loopne
push
inc
jl
add
fistpl
test
mov
in
xchg
add
xchg
loop
add
add
ljmp
stos
lret
dec
mov
xchg
push
inc
mov
xor
inc
xor
popf
add
inc
jo
jno
daa
fimuls
dec
dec
sbb
popa
aas
adc
sub
andb
add
fistps
add
and
add
cmp
sbb
sbb
cmp
cmpsb
add
and
add
add
das
or
add
pop
fiadds
push
inc
test
loopne
repnz
sbb
int3
sbb
nop
insb
add
sar
cmpsl
test
push
ljmp
xchg
test
int3
ficomps
pop
jl
lods
mov
dec
test
push
dec
sub
iret
std
add
insl
fdivl
xor
push
fidivrl
inc
xlat
pop
add
cmp
dec
push
rorb
push
xchg
pop
cmp
jb
lock
xchg
add
mov
inc
xor
in
dec
xor
pusha
fwait
movsl
xor
sahf
sarl
mov
xor
lea
iret
cmp
add
or
adc
loop
leave
add
loope
or
inc
mov
push
adc
loope,pt
stos
mov
push
lret
sbb
roll
push
fs
fucomi
jg
mov
jecxz
add
sub
push
and
push
aad
jge
pop
je
inc
fiadds
xchg
das
mov
cltd
dec
add
mov
bound
js
sbb
aam
push
sub
adc
aas
lahf
add
xlat
add
out
insl
mov
fbstp
lods
loopnew
fiadds
add
jmp
push
xchg
mov
mov
icebp
dec
out
scas
out
test
mov
lret
rcr
push
mov
ds
std
pop
push
scas
das
add
idiv
insl
cmp
jmp
jne
mov
shll
sbb
jg
xor
mov
add
mov
xchg
fnsave
jg
into
lds
cltd
push
mov
add
mov
fld
jb
mov
mov
adc
jae
adc
add
add
jg
nop
sahf
mov
mov
int
cld
add
xor
ja
dec
loope
push
leave
add
lret
flds
mov
mul
add
out
pop
adc
mov
stos
xor
and
pop
lahf
add
xchg
or
dec
aad
or
mov
pop
lods
add
mov
add
in
inc
aaa
add
sbb
push
ficompl
mov
mov
fcoml
add
lahf
dec
lods
shll
fsubrl
adc
subl
jecxz
in
outsl
dec
lcall
push
dec
data16
adc
mov
pop
add
mov
faddl
lea
add
mov
pop
js
add
add
popa
lahf
jnp
ffree
jno
push
loope
add
movsb
icebp
mov
mov
pushf
add
cmp
add
push
jns
cmpsb
xorb
sub
add
mov
enter
pop
add
jmp
mov
in
cmp
xor
test
sbb
add
scas
mov
addb
jp
xchg
sub
add
lret
jle
inc
mov
pop
mov
dec
fcmovu
adc
fimuls
xchg
and
scas
or
and
mov
mul
jp
ret
je
push
imul
fcoml
dec
cltd
cmpsl
mov
in
data16
or
outsb
fildl
cmpsl
icebp
stos
add
add
jp
sub
mov
and
sub
add
xchg
lods
add
js
shld
test
cmp
push
mov
insl
sbb
add
jg
lret
mov
xor
gs
popf
mov
mov
cmpsb
fsubr
lret
add
push
mov
xor
cli
jl
loope
jne
xchg
push
outsl
incb
dec
pop
mov
mov
mov
inc
sub
add
jecxz
into
add
fmul
in
add
mov
in
inc
mov
ljmp
jbe
jl
fstps
jne
jle
add
insl
pop
cmc
xor
sub
loop
idiv
add
gs
rorb
stc
add
sbb
rorb
ljmp
mov
loope
or
sti
push
sbb
add
cwtl
bound
int
out
add
add
add
lds
add
movsb
je
jo
adc
xchg
jecxz
jne
test
push
cli
test
xor
adc
adc
adcl
scas
iret
sbb
add
xor
jl
je
cmpsl
in
out
dec
xor
add
jl
mov
add
shl
pop
popa
dec
add
jle
pop
lcall
icebp
addl
ja
mov
xorl
movsl
pop
mov
repnz
ficompl
xchg
fsubrl
mov
xchg
xchg
pop
loop
inc
xchg
lods
cmp
repnz
sbb
iret
sub
mov
aaa
jl
mov
out
daa
insb
imull
push
xor
push
and
testb
dec
push
sbb
testl
adc
xchg
mov
cmpsl
in
lds
xor
fistl
inc
sub
test
insb
dec
cmpsb
testb
or
not
pop
add
xchg
adc
push
add
imul
cmpsb
jbe
ss
add
std
jo
mov
push
loop
cltd
pop
lcall
xor
xchg
mov
addr16
sbb
mov
movsb
push
add
lds
loope
mov
outsb
add
cmp
jp
xor
or
cmp
add
rorl
add
stos
mov
insl
in
xchg
jno
jmp
stc
outsb
add
movsl
test
xchg
pop
mov
jecxz
mov
add
adc
add
ljmp
mov
or
add
dec
rcrl
push
lret
push
sub
gs
imul
jns
add
add
push
pop
xlat
ja
aam
adc
or
test
adc
xchg
pop
or
testl
stos
adc
lock
in
add
jno
mov
pop
pusha
std
lret
add
sbb
jl
xchg
cmp
push
std
cmp
mov
push
push
pop
push
sbb
out
jle
std
push
push
jp
pop
mov
jnp
sarl
add
add
int3
xchg
inc
pop
jae
pop
inc
add
rolb
std
popl
dec
and
aas
imul
add
adc
sbb
pop
xlat
adc
add
pop
jl
add
test
fs
cmp
or
xchg
sbb
repnz
sub
add
push
rcrb
dec
dec
xchg
clc
sbb
sbb
rcll
sub
add
adc
mov
or
std
jl
aad
pop
push
into
mov
sahf
jns
movsl
mov
test
int3
fisttpll
push
stos
cmp
addb
add
jl
xchg
add
sub
xchg
repnz
or
inc
and
pop
push
add
movsb
sub
out
add
jmp
lods
test
xor
sbb
add
aaa
ds
inc
sahf
pop
add
pop
pusha
in
or
fs
pusha
cli
add
jnp
add
pop
call
pop
sbb
xchg
aam
enter
mov
xchg
add
roll
push
std
and
and
outsl
dec
fsubrl
test
aam
add
popf
call
test
mov
cmp
adc
dec
lods
insb
mov
out
cmp
xchg
dec
js
inc
cli
xchg
mov
je
xchg
sub
cmp
add
xchg
pop
repnz
xchg
push
adc
bound
iret
lods
lret
ret
fdivrs
lock
mov
adc
jae
pop
push
addl
xor
xchg
scas
xlat
inc
fisubl
dec
dec
int
add
imul
lods
cltd
daa
das
das
nop
sub
idivl
pop
cli
mov
in
cmpb
jg
ds
popa
add
aaa
sub
mov
add
and
xchg
fists
add
pushf
lea
mov
dec
ficomps
add
dec
xchg
inc
es
add
add
jb
push
pop
daa
andb
mov
rolb
inc
icebp
test
xlat
inc
xchg
mov
mov
aas
dec
clc
xchg
and
add
add
cmp
mov
add
push
cmp
nop
stos
push
gs
pop
mov
xchg
mov
and
cli
xor
das
fdivp
scas
enter
scas
inc
insl
arpl
cld
push
cld
xchg
add
arpl
icebp
inc
popf
adc
sbb
std
mov
add
cwtl
sbb
popa
stos
pop
imul
data16
jg
lock
mov
sbb
push
mov
ret
pop
daa
xor
fistps
je
add
es
out
shrb
pop
add
xchg
dec
movsl
in
xchg
add
filds
jmp
jns
cli
fsubp
mov
push
jnp
add
add
int3
add
xor
cmp
adc
jl
mov
inc
cmpsb
push
adc
inc
pusha
leave
pop
xchg
pop
cmc
xchg
fs
enter
cmc
add
jl
clc
inc
add
call
add
cmp
insl
add
add
sbb
aas
inc
inc
push
andb
lahf
cmp
gs
outsl
jns
xchg
add
dec
popf
jp
adc
pop
add
hlt
cwtl
add
aaa
jb
cmp
jns
xchg
pop
xlat
add
data16
outsb
add
jecxz
mov
add
cld
pop
add
inc
out
daa
mov
dec
xor
rclb
add
add
xor
scas
xchg
adc
push
sub
adc
movsl
out
adc
in
icebp
test
cs
lea
sub
outsl
pop
dec
cwtl
outsl
mov
mov
setnp
sub
xorl
mov
rorb
ljmp
add
out
cli
aas
inc
push
std
mov
mov
pop
fldenv
lds
testb
push
and
rcrb
dec
add
aas
imull
stos
push
in
in
fstl
push
icebp
add
aaa
loopne
add
add
std
or
push
add
daa
mov
cmp
in
xchg
imul
add
push
jmp
mov
sbb
movsl
mov
mov
dec
push
cmp
adc
out
xchg
cld
cli
jecxz
push
bound
int3
pop
pcmpgtb
rolb
iret
ror
pop
add
add
xchg
scas
lds
xchg
add
out
xor
mov
popa
dec
sub
and
add
icebp
int
add
mov
cmp
ljmp
fistpl
cmp
jb
aad
jae
cli
mov
push
add
cmp
es
or
add
test
dec
jae
adc
or
sub
jbe
xlat
add
mov
mov
sub
sub
add
add
dec
das
mov
cmpsl
add
jno
or
rcrb
pop
jg
add
sbb
fucomp
sbb
add
mov
mov
bound
mov
arpl
add
cltd
cli
push
adc
push
std
fdivs
and
mov
lea
cmpsb
pop
popa
inc
adc
push
mov
push
insb
jae
test
ljmp
insl
cmp
pop
cwtl
pop
dec
aas
add
test
nop
adc
add
add
dec
mov
xlat
repnz
jecxz
pop
or
sbb
lret
add
mov
add
arpl
sbb
ret
jmp
pop
cwtl
aad
pop
mov
lret
inc
add
mov
inc
add
stos
cmpsb
fsubs
mov
and
adc
ret
test
dec
leave
stc
in
add
mov
shl
jne
adc
loope
ja
jge
push
js
jle
mov
and
test
flds
sub
fstp
cmp
lcall
mov
in
test
stc
stos
add
adc
iret
xlat
lods
or
js
xchg
push
in
les
add
in
sub
imul
pop
add
add
add
iret
dec
jmp
pop
add
sub
sub
lods
insb
ja
add
xchg
sub
add
jmp
and
nop
clc
outsb
sub
and
mov
ret
addr16
xchg
cwtl
std
cli
push
sahf
cmp
jl
cmpl
sub
add
imul
jnp
add
and
dec
ja
mov
sub
xchg
inc
ret
sbb
add
sbb
repz
popf
popf
iret
mov
sar
lds
in
es
repz
jle
and
add
cmp
movsb
pop
and
add
adc
inc
clc
dec
mov
mov
sti
mov
mov
inc
mov
mov
pop
pop
int3
in
in
bnd
pusha
cmp
int3
xor
iret
and
addl
xchg
adc
stos
adc
add
xor
sub
shrb
push
ja
add
outsl
jp
push
xor
xor
mov
add
das
rclb
add
push
inc
addl
add
adc
push
dec
mov
inc
cmp
push
cmp
mov
nop
jae
fucompp
nop
adc
add
or
jg
daa
jae
mov
loopne
pop
mov
adc
inc
sub
jae
push
xchg
add
insb
add
mov
xlat
movsb
pop
sub
cmp
test
insb
adc
out
pop
sbb
sub
leave
js
add
xor
in
mov
cltd
test
cmp
xchg
jge
push
lock
das
jb
xchg
sbb
mov
push
cmp
inc
pop
add
jecxz
scas
cmp
pop
aaa
sbb
pop
testl
ret
add
add
or
and
or
mov
jmp
ret
add
mov
mov
pop
mulb
jg
jae
mov
std
add
push
outsl
leave
ret
sbb
push
cmp
jmp
rolb
shrl
repnz
jbe
add
shll
xchg
lock
in
add
mov
sbb
mov
xchg
out
cmp
fucomip
jb
adc
cltd
jbe
add
iret
lods
jg
stos
inc
bound
ret
push
xchg
push
dec
fcoms
inc
mov
add
mov
adc
cmp
add
cmp
add
mov
ljmp
cld
lcall
jno
add
ljmp
sti
push
das
add
clc
insb
cmp
xchg
outsl
push
lret
cmp
out
mov
mov
fisubl
arpl
pop
cmp
mov
push
pusha
sbb
pop
add
mov
add
push
pop
je
mov
xchg
xchg
lods
stc
insb
add
std
cmp
daa
daa
pusha
xor
ss
call
add
mov
inc
mov
movsl
add
add
loope
pop
les
push
les
push
sbb
fs
mov
test
mov
push
adc
mov
sbb
add
mov
add
xchg
cmp
pop
div
aas
jle
inc
lods
test
pop
or
fdivrl
dec
testl
pop
mov
jbe
add
and
jno
icebp
bound
sub
popf
dec
push
sbb
testb
cmp
je
mov
out
repnz
outsl
lods
fisttpll
sbb
add
jmp
pop
ds
outsl
outsb
test
mov
fldenv
xor
mov
andl
movsb
out
mov
ljmp
movsl
and
mov
add
stos
add
imul
push
pop
outsb
mov
push
repz
insl
pop
push
lds
xchg
pop
add
mov
jg
add
add
adc
add
sub
mov
add
pop
add
in
push
shr
js
add
push
push
sbb
sbb
mov
dec
sbb
js
es
mov
push
loop
iret
hlt
cmp
mov
sub
ljmp
into
fiaddl
mov
ss
int
inc
adc
add
jb
push
add
sbb
jb
lahf
enter
jmp
pop
or
or
push
pop
dec
ret
imul
testb
into
adc
add
pop
adc
pop
dec
add
je
into
adc
sbb
cltd
push
push
adc
jns
sbb
jne
add
sub
mov
xchg
add
jmp
lods
inc
sub
dec
add
nop
sub
iret
add
add
jnp
add
movsl
xor
mov
das
lea
loop
test
jg
adc
test
adc
pop
pop
in
jae
jae
mov
enter
xchg
cmp
xor
addr16
add
adc
push
mov
fstps
dec
cmp
outsb
jb
lret
add
xchg
outsl
push
sub
fisttpl
in
add
iret
jns
int3
shrb
sahf
fnstcw
iret
push
adc
push
mov
sbbb
mov
leave
js
iret
cli
sbb
nop
fildl
or
mov
sbb
sbb
data16
aas
add
push
adc
xor
cmpsl
xchg
in
mov
add
xor
gs
loop
jne
mov
adc
movsl
xor
inc
adc
adc
inc
mov
jp
mov
pop
fdivr
outsl
add
adc
ror
inc
aam
shl
mov
pusha
lock
cmp
ljmp
add
in
mov
daa
add
mov
push
es
repz
cmpsb
scas
add
or
lahf
pop
jnp
js
sub
cmp
inc
xchg
jle
mov
jno
jle
mov
cmc
sbb
add
stc
in
adc
inc
add
loop
in
xlat
loopne
cmpsb
xor
xchg
inc
add
xchg
leave
pop
mov
push
add
mov
ljmp
inc
pop
sahf
push
enter
xchg
inc
sub
scas
cli
movsl
mov
sub
cmp
dec
pop
daa
cmp
add
inc
sbb
dec
mov
in
add
mov
or
testb
cmp
clc
scas
shll
sti
mov
imul
add
dec
jb
add
push
sub
mov
mov
out
push
std
ds
cmp
sbb
push
enter
add
add
and
fsubrl
gs
add
xchg
out
mov
popa
cld
pop
push
divl
test
stos
push
rorb
and
adc
lods
pop
out
popa
or
stos
flds
mov
scas
dec
inc
dec
add
data16
pop
push
mov
mov
sub
add
pop
in
stos
cwtl
sti
inc
xchg
stos
push
mov
lds
mov
cmp
mov
pop
add
jb
add
incb
add
movb
dec
lods
jne
jb
dec
rcrb
pop
mov
jecxz
or
push
add
les
aaa
int
adc
dec
lret
xor
xchg
mov
adc
add
push
fwait
sub
popa
jns
or
mov
mov
gs
mov
adc
push
xor
sar
es
push
add
repnz
cmp
add
lods
ja
and
xchg
push
ret
shlb
or
in
cli
mov
jb
out
pop
add
mov
inc
xchg
add
pop
add
je
add
repnz
cld
and
xor
test
test
rcrb
xchg
or
icebp
nop
clc
fwait
ss
subb
mov
jb
xchg
push
jae
lret
incb
stos
or
push
push
int3
add
mov
xlat
dec
lods
sti
inc
nop
cmp
cmpsb
add
pop
mov
add
popf
mov
inc
add
jbe
sub
cmc
cwtl
sub
push
fstpl
cmp
repnz
jp
add
cmc
pop
in
lahf
mov
in
and
dec
addr16
jl
in
scas
aam
mov
or
jno
cwtl
insb
ljmp
adc
add
iret
push
rcl
xor
add
in
sarb
addr16
outsb
repnz
add
repnz
adc
push
add
jl
and
add
in
shrl
mov
mov
xchg
clc
into
and
sbb
adc
shlb
test
mov
iret
in
fnsave
test
mov
adc
xor
bound
mov
mov
pop
daa
jl
add
xor
pop
loope
add
clc
add
cli
gs
push
cltd
mov
xorl
enter
ret
clc
inc
pop
sahf
sub
add
add
in
add
add
scas
jge
arpl
daa
aam
add
add
int3
mov
popf
push
fisttpll
inc
cli
lods
jmp
xor
aas
xchg
fldl
mov
mov
pop
ffreep
or
outsl
lods
pop
icebp
add
jbe
mov
pop
dec
adc
ret
cmp
or
loop
mov
sub
inc
xor
cmpsl
out
jmp
out
in
stos
and
iret
imul
dec
add
clc
pop
sbb
dec
data16
out
push
outsl
repz
imul
cmp
add
pop
inc
ret
ficoml
add
sub
ret
add
add
pop
aas
fwait
cltd
inc
popf
add
adc
cltd
adc
add
inc
sbb
push
jbe
add
add
add
cmp
add
dec
icebp
sbb
popf
add
mov
jl
sbb
or
sub
pop
xor
int3
add
xchg
xorb
push
and
pop
movsl
jge
dec
es
gs
add
mov
pushf
mov
mov
hlt
stos
movsl
ljmp
cwtl
mov
insb
cs
jno
lcall
add
sbb
mov
mov
mov
les
jae
add
lahf
jne
jne
add
mov
adc
inc
xor
cmp
dec
jb
push
mov
or
pop
fimull
add
pushf
in
push
jb
out
xor
adc
sbb
mov
mov
dec
mov
add
jnp
add
adc
sub
imul
dec
dec
adc
mov
das
test
test
js
js
add
mov
clc
decl
sbb
push
les
mov
mov
add
xor
ficompl
lods
or
movsl
xchg
pop
pop
aas
es
xchg
cmpsb
insb
sbb
imul
add
je
sti
add
pop
or
pop
in
push
jno
adc
fldl
fyl2xp1
push
add
xlat
pusha
xchg
add
add
mov
add
cltd
add
rcrb
lahf
out
hlt
sub
lret
lcall
rcll
jo
lcall
and
aad
lcall
xchg
scas
aas
dec
lcall
data16
add
fimull
push
sub
inc
push
add
dec
pop
mov
push
add
add
pop
xchg
cmp
ja
shll
sbb
sbb
xor
inc
call
out
jb
or
addl
mov
inc
push
push
pushf
add
add
inc
sahf
test
xor
sahf
fwait
xor
repz
pop
and
pusha
or
call
jp
pop
mov
xchg
add
mov
mov
jae
jecxz
jb
jl
movsb
inc
in
pop
ret
xchg
jne
fcomps
xor
movups
pop
jno
dec
int3
pop
repnz
mov
push
test
or
cmp
cmpsb
add
cltd
cmp
aam
mov
pop
sub
in
and
out
inc
push
mov
fwait
push
stos
and
pop
test
adc
sub
lock
pop
xor
roll
ja
stc
das
or
and
add
into
int
add
add
popa
jb
jg
cmp
dec
xchg
popf
add
add
add
mov
sub
push
xor
rclb
push
aaa
mov
jl
aam
add
jnp
mov
add
jmp
cmpsb
push
addb
adc
add
push
sbb
jnp
xchg
add
enter
fstpt
ffreep
jb
pop
or
js
pop
xchg
shl
mov
jne
or
jmp
push
adc
mov
or
lock
repz
jl
cwtl
adc
adc
push
xchg
ljmp
xor
sbb
cmc
add
int
xchg
add
add
push
subl
enter
incb
jbe
sbb
aaa
adc
sbb
add
int
jae
fadds
mov
mov
inc
frstor
add
adc
movsb
add
xchg
add
in
xor
cmp
adc
mov
adc
clc
fstps
test
xchg
aas
aaa
jno
fs
outsl
divl
xchg
js
dec
add
lret
jge
insb
mov
or
add
lods
cld
je
sbbb
sub
push
stos
xlat
pushf
jge
mov
push
pusha
add
mov
insb
call
inc
outsl
mov
loope
dec
xchg
or
test
xor
ljmp
jecxz
inc
inc
push
push
ljmp
jg
insl
mov
mov
outsb
inc
pop
nop
mov
int3
les
loope
jno
fmuls
push
out
dec
ds
or
sub
and
add
sbb
add
insl
addb
jns
cwtl
cmp
lcall
add
inc
mov
xchg
mov
adc
imul
pop
add
inc
lcall
subb
jp
into
add
jecxz
dec
js
movsl
mov
push
mov
test
dec
mov
pop
inc
mov
addr16
int3
jnp
das
shlb
push
cmp
xor
push
and
popa
xor
mov
cmp
xchg
or
mov
xchg
push
xor
outsb
lret
mov
cmp
jmp
xchg
add
lcall
push
mov
icebp
aaa
into
movsl
add
or
sbb
mov
push
movsl
xor
dec
pop
mov
jg
add
push
imul
pop
add
cmpsb
push
inc
dec
lods
sbb
pop
sarl
adc
in
add
add
mov
lret
xchg
mov
cmp
fadds
fsubs
mov
add
mov
es
outsb
imull
lds
movsl
shlb
in
mov
repnz
aam
out
cmc
add
sub
add
in
test
or
cmpb
aam
cmp
add
and
push
popa
cmp
pop
inc
push
popf
mov
fsincos
or
cmp
test
mov
pop
xchg
test
addb
sub
pop
int
add
add
mov
mov
add
lret
add
inc
dec
xchg
cmp
sub
lcall
sarl
movl
mov
inc
out
add
int
add
pop
lock
or
and
ret
dec
cld
push
dec
cmp
mov
inc
jle
daa
add
je
inc
test
std
ret
mov
mov
scas
add
out
dec
mov
stos
aam
dec
push
xor
push
add
fwait
aad
fs
pop
fcompl
cmp
dec
repnz
dec
cmp
xchg
mov
out
pusha
pop
cli
cmc
sbb
lret
mov
pusha
add
rolb
or
cmp
adc
and
std
jge
xchg
cltd
xchg
lds
mov
cmp
xchg
inc
add
pop
add
adc
ret
add
mov
lock
pop
and
neg
icebp
xlat
movsl
xchg
int3
add
add
ljmp
aad
outsl
mov
dec
pop
adc
ss
addl
int3
filds
lds
movsb
adc
hlt
std
add
jg
adc
cmp
clc
jecxz
jp
sahf
stc
cmp
push
outsl
js
scas
fdivrs
and
xor
arpl
rcr
stos
fwait
inc
lret
lret
add
mov
out
sbb
adc
or
test
xchg
adc
jmp
add
add
cmp
ret
fwait
inc
in
mov
pop
push
jge
outsl
pop
push
dec
mov
sbb
mov
jl
lret
lds
adc
shlb
add
cld
lret
cmp
mov
xchg
xchg
cmc
add
sub
scas
dec
ljmp
popf
push
bound
fwait
insl
sub
lock
xchg
adc
push
aas
sub
cmp
les
cmpb
jbe
jns
mov
call
mov
shrb
mov
add
lahf
cmp
and
xchg
add
imul
outsb
pop
and
repz
sub
andb
cmpb
add
inc
insl
leave
daa
xchg
cwtl
enter
adc
int3
mov
rorb
into
arpl
add
add
xchg
add
out
outsw
or
cmp
pop
mov
adc
and
or
mov
std
in
xorl
fiadds
add
cmpsb
pop
mov
and
sub
mov
pop
mov
or
xchg
adc
inc
imul
jae
pop
aad
fsubs
add
fsubl
fs
inc
add
add
xchg
add
subb
or
pusha
ret
lahf
sbb
dec
repz
sahf
mov
jne
in
cmpsb
stos
dec
xchg
add
push
jle
pop
add
jns
std
jo
fildl
cmp
pop
rcl
dec
lret
xchg
mov
jbe
adcl
pop
pop
nop
inc
xor
std
push
fcmovb
xlat
inc
xor
inc
rcl
sub
push
add
lock
imul
or
mov
or
sub
jb
add
and
xchg
es
inc
roll
inc
popf
and
inc
gs
add
adc
mov
cmp
ret
addl
out
cli
dec
cmp
iret
subl
pop
adc
idivl
stos
add
lods
shlb
into
push
or
sub
cmpsb
add
mov
mov
mov
mov
das
adc
xor
sub
adc
adc
inc
jge
add
pushf
inc
out
pop
add
sub
dec
mov
xchg
iret
add
mov
add
pop
std
jo
sbb
add
pop
cli
loop
pop
fldt
dec
and
push
push
adc
jp
mov
inc
nop
cmp
inc
and
es
out
add
fildll
into
sub
add
out
mov
je
add
out
push
jmp
xor
int3
add
nop
mov
faddl
adc
or
dec
sar
nop
add
cmp
cmpsb
sbb
xchg
mov
add
xlat
into
aaa
lcall
data16
repz
push
lds
push
dec
jnp
insl
into
mov
mov
in
mov
xchg
test
cmp
in
cmp
push
cwtl
jmp
xor
or
cmp
outsl
in
lock
mov
in
pop
in
les
loope
mov
pop
stos
jle
add
scas
inc
out
xchg
in
scas
mov
mov
mov
sti
and
push
add
lret
cmp
fwait
xchg
jae
es
repnz
add
sub
jge
jg
and
stos
adc
imul
fdivs
mov
add
lret
xchg
push
xor
add
or
dec
push
test
pop
pusha
test
push
int
data16
pop
push
ret
add
cmp
dec
inc
xchg
add
out
callw
cmp
dec
push
xor
mov
outsb
add
aam
sar
and
sbb
addl
add
into
fistps
push
push
and
popf
jmp
cld
arpl
adcb
out
add
jnp
add
mov
in
push
add
xchg
jp
lock
out
pop
push
add
mov
mov
cmp
add
mov
mov
dec
xchg
ret
sysexit
add
push
mov
lret
out
jno
stos
jns
push
ljmp
lock
push
mov
push
mov
add
push
fistps
dec
jne
add
jo
pop
inc
daa
movsb
jnp
pop
cmp
cmp
add
imul
inc
in
add
dec
movsb
mov
popa
add
in
popa
sub
sbb
push
test
cmc
into
push
or
repnz
int
cmp
push
jge
mulb
mov
pcmpgtb
sub
imul
test
and
popf
lret
add
pusha
add
xchg
mov
add
lret
jge
pop
fdiv
jl
cmp
and
lret
adc
fwait
iret
xchg
mov
jb
inc
cmp
aas
mov
push
add
jge
jg
add
add
in
lods
pop
fistpll
in
or
dec
add
xchg
sub
test
ficoms
movsl
loope
or
aas
jne
adc
sbb
imul
add
cli
sbb
jne
cmc
pop
pop
movsb
xchg
jp
enter
je
inc
mov
mov
lods
ja
dec
xchg
into
fsubl
cmp
xchg
lock
in
push
sahf
out
jmp
aam
add
dec
add
jnp
loop
hlt
movsb
and
cli
add
mov
iret
or
dec
dec
or
call
scas
dec
cwtl
cmp
cmp
mov
leave
xor
sub
ljmp
movsb
add
insl
adc
mov
add
push
push
repz
push
or
xor
pop
mov
outsl
add
add
mov
ss
adc
insb
inc
outsl
out
stos
lahf
fsubrp
faddp
add
add
mov
scas
inc
lahf
cmovb
mov
out
add
add
int
add
mov
mov
lcall
test
imul
mov
das
jl
and
add
push
mov
or
out
push
xor
je
stos
or
shll
mov
out
inc
js
fsubs
out
data16
push
mov
js
sbb
arpl
in
ret
jo
leave
clc
add
movl
inc
add
ret
mov
mov
inc
fidivs
dec
cmp
dec
jno,pt
stos
add
mov
add
mov
add
xchg
sub
adc
inc
test
ret
je
or
xor
ds
or
stos
sub
push
or
pop
add
ds
cli
add
sbb
shll
arpl
cwtl
add
push
adc
test
jae
add
repnz
mov
aaa
jo
in
loope
scas
cmc
jle
sbb
out
loope
push
adc
sub
add
inc
add
out
cmp
outsl
xor
clc
out
push
lods
inc
cmp
mov
xchg
cs
scas
cltd
pop
lock
pop
push
pop
outsl
mov
jns
popf
jle
aaa
add
mov
addl
and
jl
aam
into
popl
add
xchg
insb
pop
ljmp
inc
and
fbld
mov
add
jecxz
or
adc
dec
and
cmp
loop
xorb
js
add
mov
xor
repz
jne
xor
sahf
test
adc
rol
cmp
inc
inc
movsw
add
inc
add
mov
sub
xchg
xor
cmpsb
push
pop
xor
sbb
cltd
insl
adc
outsl
fcmovnb
sub
add
and
pop
mov
cltd
and
idivb
jnp
outsb
add
add
add
jmp
jp
mov
into
add
sub
xchg
add
jb
and
fisubl
xor
data16
outsl
dec
add
adc
fwait
mov
add
jge
jbe
cld
leave
mov
push
dec
mov
xchg
jl,pt
cmc
loope
cs
mov
xlat
lret
sub
std
push
stc
sub
add
test
or
cmp
xchg
cmpsl
stos
xchg
cli
mov
cwtl
jmp
jmp
mov
ja
add
fidivrl
iret
int
out
xchg
xchg
js
or
add
add
xorps
lret
dec
add
cmp
and
das
inc
mov
shrb
push
add
inc
imul
add
or
fcoms
mov
add
and
inc
in
pop
push
sub
mov
icebp
lea
jno
or
mov
leave
leave
push
inc
inc
inc
dec
clc
push
xorl
cs
or
je
sbb
jo
mov
jmp
mov
out
cwtl
cmpsl
add
faddl
stc
jecxz
sbb
popl
xor
jmp
enter
fs
pop
add
aaa
imul
jnp
mov
mov
add
xlat
or
jb
xlat
adc
fwait
dec
mov
lock
mov
ja
popa
popa
mov
cmp
fmulp
dec
lahf
lahf
lods
orb
mov
arpl
xchg
and
cmpsl
add
cs
and
insb
pop
mov
adc
mov
lea
bnd
xor
add
add
ret
cmpsl
mov
popa
push
clc
subl
stos
cltd
sarb
mov
ljmp
push
add
add
cs
push
mov
ljmp
or
insl
scas
adc
jmp
adc
cmp
mov
xor
daa
ljmp
add
add
cmovs
dec
add
sub
cmp
stc
mov
and
mov
push
dec
out
pop
mov
add
popf
mov
into
sub
and
or
outsl
add
test
fiaddl
es
dec
add
dec
mov
add
add
adc
and
bound
ror
test
addl
mov
stc
add
adc
iret
cmp
add
cmp
add
xor
add
pop
add
gs
sbb
stos
add
inc
mov
pop
mov
cmpsb
push
inc
mov
add
and
fwait
nop
fbld
xor
je
adc
decl
xor
and
sub
mov
negl
pop
nop
aaa
push
xor
push
xor
sub
dec
ret
xchg
sbb
dec
jl
aaa
cmp
push
sub
adc
hlt
mov
xor
lea
repz
out
mov
pop
inc
add
fwait
mov
movsb
out
mov
inc
in
rcr
push
add
xor
pop
lods
out
xchg
adc
insl
lret
lcall
inc
and
imul
enter
sbb
push
and
cmpsl
sub
pop
jg
psllq
imul
xor
sahf
add
rolb
sbb
lea
or
add
pushf
push
popa
push
mov
ret
add
lods
xor
jp
loopne
xchg
inc
push
cwtl
mov
dec
test
mov
lahf
fisttps
add
aam
xchg
pop
pop
into
test
out
pop
mov
rcrb
addb
js
add
int3
daa
dec
hlt
sbb
cld
hlt
mov
mov
addl
fsubp
cmp
and
pop
push
imul
adc
pop
jge
call
les
dec
aas
pop
add
aas
add
mov
mov
ret
xor
xor
add
les
push
mov
dec
and
add
frstor
adc
test
test
add
xlat
add
xor
sarl
or
cmp
icebp
addl
adc
iret
push
add
jne
lock
add
push
mov
sbbb
ss
lods
or
add
sahf
enter
in
mov
bound
in
ret
bound
daa
xchg
add
sbb
cld
aad
in
sub
sub
shlb
or
loopne
pop
cmp
jb
add
jmp
adc
clc
cmp
ret
jp
stc
fwait
mov
test
lea
aas
fiadds
jl
pop
jle
in
inc
sti
inc
add
and
fldl
xor
jg
xor
add
inc
loope
mov
cltd
xchg
je
cmp
aaa
fs
add
ret
mov
loop
jecxz
jecxz
sbb
mov
push
xor
stc
movsb
mov
xchg
roll
cmp
fsub
inc
incl
pop
pop
out
sbb
ss
sbb
xor
movb
popf
lods
dec
xchg
add
add
loope
cmc
shrb
jno
xor
and
ret
lods
add
in
in
in
fbstp
and
jae
test
dec
rorb
mov
add
dec
sbbl
mov
mov
mov
les
je
dec
adc
stos
aam
xor
scas
cld
xor
outsb
jg
add
loop
insb
push
jb
jbe
popf
pop
outsl
cmpsl
lret
ret
add
lret
cmp
or
stos
ss
add
or
cmpsb
call
inc
adc
lret
cmp
cmp
mov
push
cmp
loop
or
adcb
cmpl
cs
xchg
push
iret
out
pushf
sahf
seto
mov
sub
xchg
jne
test
repnz
pop
push
xchg
jbe
ja
stc
dec
add
add
or
clc
add
mov
adc
rorl
jge
out
lret
movsl
fs
inc
inc
add
jno
mov
in
adcl
outsb
lods
in
jns
xchg
push
rolb
scas
negb
add
inc
pop
pop
sarb
movsb
cltd
mov
jns
add
jae
mov
mov
or
mov
jb
pop
add
inc
add
push
loop
add
fabs
mov
push
add
adc
xor
jl
add
add
jbe
cmpsb
mov
mov
xchg
pop
inc
dec
addr16
add
add
add
int3
add
int3
xchg
pop
sub
add
fs
popa
rcrl
add
sub
nop
add
clc
add
arpl
in
ret
call
orb
mov
popa
add
mov
jns
clc
out
push
mov
mov
lock
add
jo
adcl
inc
ret
flds
ret
adc
js
in
push
mov
pushf
sldt
out
fsubrp
hlt
and
cmpl
js
pop
mov
push
cwtl
push
jae
sbb
ds
or
je
mov
or
jns
popf
stos
fsubr
fimuls
loopne
add
add
test
pop
or
enter
jnp
jecxz
fstl
sbb
xor
fdivl
add
loopne
mov
jae
into
aam
add
add
mov
add
push
jno
mov
sbb
shl
or
test
cmp
enter
and
mov
jns
js
imul
jg
push
add
mov
mov
pop
add
jno
mov
leave
adc
xchg
dec
out
dec
fdiv
pop
popf
loopne
jae
sbb
jns
ja
out
inc
movsl
data16
mov
jo
aam
sub
mov
enter
cmp
jl
pop
leave
add
add
add
lret
add
add
add
adc
xchg
xor
or
pop
add
add
sub
add
inc
or
les
inc
xor
add
in
push
movsl
ljmp
jnp
leave
loop
inc
loope
movsl
mov
and
addr16
test
add
fisttpll
data16
jb
sub
fildl
or
sbb
add
and
and
jmp
cmp
push
lea
lods
add
sbb
bound
mov
add
enter
scas
sbb
pop
push
adc
xlat
xchg
ja
lods
movsb
cmp
les
jmp
add
sbb
mov
sbb
dec
jle
dec
dec
aas
clc
ret
aaa
add
add
sahf
sbb
pop
inc
les
into
add
lret
popa
aas
cld
jnp
add
xchg
push
lret
push
add
and
jecxz
inc
add
outsb
mov
dec
hlt
pop
adc
ljmp
mov
in
test
mov
outsb
mov
fwait
test
lods
mov
popf
ss
das
pop
fwait
out
mov
and
filds
stc
cmp
testl
mov
cmp
cmpsl
fdivrl
dec
repnz
or
sbb
sub
fidivrl
pop
movsl
jnp
mov
pushf
add
push
test
aad
mov
addl
add
mov
jnp
test
add
jo
push
sar
sub
lcall
add
mov
into
stos
jbe
movsb
xor
jne
adc
into
cmp
pop
mov
jo
lock
verr
das
scas
ficoml
mov
xor
mov
adc
push
dec
insl
fisubl
int3
push
call
jecxz
movsl
ss
loope
rorb
data16
pop
loope
ljmp
jg
and
dec
mov
add
repnz
cs
insb
inc
add
lcall
mov
cli
enter
gs
fdivp
mov
out
xor
fldl
xor
stos
mov
out
sahf
incl
movsb
and
pop
mov
add
dec
mov
dec
dec
add
fildl
pop
loope
in
add
outsl
ret
dec
mov
mov
pop
or
and
or
xor
testb
loopne
js
popl
std
roll
daa
sub
mov
push
xor
into
in
add
adc
outsl
push
push
dec
push
hlt
les
jne
push
cli
or
jbe
clc
lock
add
mov
outsb
dec
rcll
scas
adc
xor
add
test
add
rorl
pop
jno
sub
jp
add
es
jmp
mov
add
sub
fwait
dec
outsl
mov
pop
inc
ret
add
fldcw
cli
cmp
xor
aad
iret
add
add
cmp
xor
arpl
or
loop
sbb
aad
lds
add
inc
mov
and
pop
or
scas
add
test
inc
and
int3
push
sbb
fwait
sarb
xchg
lret
in
add
inc
adc
mov
xlat
xchg
xchg
mov
imul
mov
mov
jp
cltd
xor
lret
ljmp
out
fadd
add
xchg
inc
sti
dec
jno
scas
mov
aad
clc
mov
xchg
mov
mov
ss
push
add
loop
test
or
mov
bound
add
cmp
cwtl
addr16
jl
sub
dec
add
jle
filds
push
andl
rcrl
cmc
xor
mov
andb
jb
lahf
std
mov
mov
lods
add
inc
xor
sub
out
icebp
jmp
xchg
cmc
push
mov
sbb
push
add
cmp
jae
jnp
mov
scas
pop
cli
js
add
aam
inc
leave
test
pusha
orl
ret
rolb
push
adc
add
repnz
stos
jnp
fucomip
incl
fcomi
movb
repnz
and
mov
jnp
sti
ss
test
shrl
shll
sub
lret
in
adc
and
jo
in
or
test
sub
pop
mov
mov
add
push
add
scas
movsb
adc
fdivrs
add
adc
sub
movsb
int3
mov
sbb
push
adc
add
icebp
das
cmp
cmpsb
add
and
xor
faddl
inc
dec
mov
push
nop
mov
testl
pop
mov
push
into
add
loopne
sarl
add
inc
and
aaa
sub
adc
clc
insb
add
cmp
add
fyl2xp1
pop
pop
movsl
fildl
mov
adc
fdivr
dec
add
push
pop
mov
int3
out
inc
push
cmp
loop
fld
dec
leave
and
add
inc
push
popa
mulb
in
and
rcrl
insb
loopne
push
out
std
add
fwait
nopl
add
pop
mov
push
adcb
aas
add
lret
add
sbb
in
nop
outsb
mov
mov
mov
adc
inc
popf
and
mov
or
dec
lea
cmovo
pop
dec
add
add
imul
jl
xor
lcall
sbb
sbb
xchg
add
adc
xchg
in
loopne
sbb
pop
add
add
mov
stos
loop
or
jg
xor
inc
add
movsb
cmp
data16
push
jge
add
pop
sahf
add
mov
out
sbb
add
jnp
mov
mov
add
xchg
fildl
leave
xor
aam
cli
dec
pop
pop
mov
jne
xchg
rolb
push
lahf
in
iret
out
daa
pop
ds
add
fs
add
jb
add
test
sbb
fcoms
pushf
loope
mov
jo
add
leave
mov
out
aaa
cwtl
aaa
cli
jbe
out
into
into
aad
icebp
xlat
xchg
push
jmp
jo
xchg
pop
add
push
push
in
imul
out
mov
lret
in
sahf
inc
jb
es
inc
out
push
rcrb
mov
mov
push
es
pop
add
addr16
nop
cmp
push
mov
in
sbb
mov
cmp
add
jp
insl
and
dec
pop
xor
rolb
mov
rcl
testl
lret
add
sub
add
add
jo
add
movsb
mov
xor
or
and
jbe
push
les
mov
and
adc
and
add
cli
sbb
clc
aam
xchg
pop
dec
push
cmp
and
sub
cwtl
pop
out
sbb
es
addb
pop
mov
add
decb
sub
xchg
call
xchg
add
add
out
scas
movsl
das
in
in
fwait
call
dec
xor
sub
aas
xor
add
cmc
jg
mov
pusha
xor
pop
add
ds
cmp
aam
push
icebp
inc
cmp
add
arpl
add
rorl
fdivp
jmp
cmp
push
out
xchg
lds
mov
dec
push
nop
imul
mov
push
into
adc
in
ret
sbb
aam
cmova
andl
add
bound
pop
jle
mov
adc
movsl
fadds
lods
and
aad
add
add
sbb
cltd
mov
mov
std
sar
inc
inc
add
jle
xchg
sbb
dec
inc
add
mov
add
mov
test
adc
hlt
jl
push
andl
xchg
cmp
mov
add
or
popf
fldl
pop
sbb
mov
aas
mov
aas
loop
mov
mov
dec
add
das
mov
adc
icebp
pop
add
jnp
fildll
cltd
xor
into
cs
push
fildl
popa
cmp
cmpsb
aaa
hlt
in
xchg
dec
push
add
fidivl
add
in
sbb
xchg
add
data16
add
xor
hlt
inc
daa
in
mov
mov
mov
cmp
testl
add
push
dec
add
scas
shrl
push
sbb
mov
aaa
daa
adc
lret
or
add
xchg
aas
add
fmulp
notl
push
outsl
add
cld
sti
adc
mov
outsl
movsl
test
jle
int
jnp
add
adc
add
mov
sub
jno
mov
add
push
leave
fstpt
fdivl
fnstsw
adc
dec
es
add
into
cmpsl
or
imul
es
clc
dec
lret
jae
mov
sub
out
inc
sbb
lds
pop
xor
scas
pop
cld
cmp
unpcklps
les
xchg
pop
aaa
add
jg
dec
mov
in
push
std
mov
or
jo
push
insl
roll
add
test
add
add
aas
sub
jl
nop
add
add
dec
mov
add
mov
mov
popa
imul
mov
mov
test
and
add
fsubrl
cmp
push
push
dec
xchg
add
add
test
repnz
mov
add
aaa
in
and
add
lds
pop
mov
loopne
cmp
adc
and
movsbl
or
jg
add
dec
inc
cltd
inc
lods
mov
das
pop
add
popaw
and
push
cmp
sahf
es
test
xchg
sar
add
push
test
enter
ficompl
mov
mov
outsb
daa
xchg
fsubrs
loop
in
sahf
arpl
pusha
movb
cltd
inc
pop
dec
lcall
gs
inc
daa
add
aad
jecxz
xlat
cli
cmp
lods
das
mov
push
add
add
adc
in
add
sub
jle
fists
sarb
add
mov
enter
sbb
mov
lock
dec
cwtl
mov
mov
mov
or
test
xor
add
adc
push
push
shrb
add
fnstenv
lock
mov
push
pop
pop
add
push
fmuls
push
loopne,pt
enter
pusha
fs
add
sti
mov
inc
dec
jmp
popf
sub
push
dec
add
adc
jl
dec
movsb
rolb
imul
in
rolb
or
leave
xchg
push
cld
adc
xchg
mov
jnp
mov
mov
out
xchg
aad
cmp
xchg
sub
add
cmp
je
jmp
subb
mov
mov
inc
mov
mov
cmc
xor
cli
dec
sbb
jbe
ds
je
xlat
sub
rcrb
fwait
scas
int
add
jmp
call
cmp
xor
ljmp
or
shl
mov
xchg
pop
cltd
add
cmp
adc
xchg
cmp
mov
mov
cli
add
lret
test
add
inc
mov
stos
xchg
add
jnp
add
add
lahf
xchg
ret
cmp
pop
sbb
push
in
adc
add
cli
dec
sti
xlat
gs
fnstsw
dec
int3
inc
outsb
xor
add
xor
inc
popf
adc
lcall
add
add
lods
int
or
sub
fidivrl
or
scas
add
fldenv
insl
adc
sbb
mull
or
or
or
mov
add
jg
add
lds
ret
inc
and
mov
jne
mov
add
xor
pop
pop
add
or
out
clc
add
xor
mov
in
dec
loopne
decl
jp
jl
pop
ja
push
out
inc
sub
jno
inc
bound
addr16
push
call
arpl
sub
mov
add
or
loope
pop
and
inc
xor
dec
bound
loopne
and
push
lods
pop
fmuls
sbb
mov
addb
or
dec
loope
nop
cmpsl
rcr
hlt
fstpt
test
daa
mov
pop
sar
mov
add
add
or
mov
stos
adc
aam
xchg
add
add
les
xchg
cli
loop
add
xchg
add
mov
nop
push
xor
das
dec
and
hlt
cld
enter
cmp
pop
mov
nop
ret
in
jae
adc
push
inc
push
and
scas
add
shll
mov
or
add
inc
mov
push
sbb
pusha
pop
les
rcll
push
sbb
loop
mov
or
hlt
sub
js
sbb
cmc
inc
js
sbb
ds
push
movsl
movl
scas
rcrb
add
push
int3
add
testb
sti
fdivl
add
mov
test
add
jmp
test
and
cmp
add
ja
push
push
inc
shr
dec
xor
add
shl
dec
xchg
adc
cwtl
mov
jle
and
adc
add
outsb
popa
add
pop
rcrl
dec
pop
ret
lds
cbtw
or
subb
xchg
aad
sub
dec
push
mov
add
pop
scas
stos
add
subl
nop
adc
aad
cmp
test
insl
aas
xchg
mov
push
push
pop
or
pop
ficomps
pop
iret
dec
pop
mov
mov
sbbb
sub
negb
dec
adc
in
and
add
adc
insl
movsb
mov
repz
jne
mov
dec
lcall
jmp
cmp
and
inc
mov
cmp
push
test
je
js
nopl
cli
lea
add
mov
hlt
add
jg
ud2
mov
sbb
add
movb
cmpsb
fildl
lcall
or
inc
add
rclb
outsb
and
jg
adc
pop
ret
xchg
xor
push
hlt
xchg
xchg
out
sbb
leave
jns
scas
loope
cs
pop
cs
jge
ljmp
mov
inc
lea
jae
orl
aad
jnp
adc
int3
inc
add
aas
mov
test
ds
pop
push
andl
test
outsb
sub
pop
cwtl
lods
dec
in
shll
sub
insl
xor
sti
mov
out
jge
inc
xor
mov
xlat
adc
add
sbb
lods
mov
sarl
add
sub
imul
outsb
mov
les
aas
xor
xchg
faddl
add
sti
mov
in
fwait
out
lret
ss
es
fistps
test
or
in
loopne
or
push
mov
mov
jl
sub
andl
rcrb
cltd
dec
stos
mov
insl
fscale
xor
lcall
out
xor
jns
aam
jb
jne
cwtl
pop
mov
add
pop
out
ds
outsl
jecxz
cwtl
add
popa
fsubrs
fsubrs
and
add
mov
gs
and
out
fidivrl
sti
and
xchg
add
aam
bound
or
or
pushf
in
xor
aad
sub
mov
loopne
cmp
fimuls
mov
or
inc
sub
dec
sti
sub
sub
add
xchg
jmp
jbe
scas
mov
in
add
or
fs
push
adc
mov
mov
lods
insb
or
mov
add
insb
enter
adc
lcall
cmp
fs
sbb
pop
cmpsl
xchg
mov
add
sub
push
push
add
cltd
loop
testb
cmp
imul
push
adc
cs
dec
cmp
aaa
cmpb
add
add
nop
cmpsb
cld
aas
add
clc
dec
xchg
inc
mov
add
mov
add
add
add
in
add
imul
insb
inc
flds
push
push
sbb
test
lret
repz
mov
xchg
xchg
xchg
out
fsubl
inc
push
add
into
jmp
add
dec
sbb
aam
or
js
shll
add
xchg
mov
xor
inc
inc
cmp
cmpsl
jp
push
fadds
mov
and
and
pop
es
data16
sub
movsl
xchg
mov
mov
or
mov
cmp
mov
add
add
inc
ljmp
outsl
mov
nop
push
ficomps
pop
add
nop
add
mov
ret
filds
loop
nop
insl
mov
add
addb
or
and
es
cmp
mov
push
xchg
ja
pushf
cld
cmpxchg
data16
movsb
mov
sub
mov
pusha
xor
jns
pop
sub
add
roll
aaa
aas
stos
ret
mov
and
imul
insl
insb
leave
scas
cmp
and
mov
and
mov
adc
imul
add
add
pop
leave
testb
dec
cltd
inc
add
add
xchg
out
pop
iret
add
sahf
into
sub
fldenv
push
dec
stos
push
ds
cmp
adc
insl
add
mov
dec
sarb
divb
and
sbb
aad
inc
sub
fidivs
add
rclb
add
incb
in
in
int3
mov
dec
xchg
pop
daa
addr16
push
add
repnz
jge
dec
add
sub
xchg
mov
add
addr16
add
addr16
add
add
stos
adc
es
test
inc
repnz
aad
push
sti
push
arpl
push
add
add
add
outsl
inc
sarl
loop
add
sbb
xchg
out
cmp
add
inc
cmp
lds
call
mov
repz
pop
int
add
cltd
data16
sbb
lret
add
rcrb
popa
sldt
aam
cli
inc
dec
sahf
shll
fsubrl
push
mov
nop
and
or
lds
cltd
mov
push
mov
sahf
xchg
cltd
add
clc
incb
pop
add
jle
leave
dec
ret
icebp
push
mov
pop
cmp
es
add
mov
mov
add
aas
addr16
test
or
into
jae
test
sbb
xchg
xlat
and
push
js
das
mov
push
out
lret
lock
fadds
jg
popa
add
cmp
push
add
stos
push
leave
add
push
or
addr16
lods
test
inc
and
add
sbb
imulb
xor
push
adcl
mov
roll
inc
inc
add
mov
call
add
sbb
xor
ja
or
popa
test
jbe
cmpsb
loope
sahf
add
and
sbb
std
add
nop
iret
pop
adc
pop
or
es
stos
sub
es
int
lret
or
jge
icebp
sub
dec
inc
movsl
adc
cmp
jbe
add
add
push
add
stos
mov
add
add
loope
lret
add
out
scas
fwait
or
je
adc
cli
stos
adc
adc
mov
mov
pushf
out
jae
add
mov
data16
mov
add
fnstsw
add
icebp
inc
add
loopne
adc
push
push
out
adc
repz
jle
rclb
jo
mov
pop
mov
jns
push
aaa
stc
sbb
sub
nop
add
jne
mov
adc
loope
test
add
add
add
cmc
cli
mov
in
inc
push
sub
outsl
add
pop
outsl
jnp
mov
mov
mov
push
call
cmpb
xor
adc
ss
add
stos
fsubl
movsb
fidivs
jns
dec
add
add
negl
adc
pop
stos
aam
outsb
pop
add
out
add
mov
xchg
push
aas
inc
add
sbb
out
mov
push
ljmp
xor
add
int
or
jle
pavgw
add
or
aas
fisubrs
imul
cmp
add
roll
jp
jns
pop
or
pop
push
sub
mov
jp
sbb
mov
cmp
lahf
fcoms
push
push
lahf
dec
inc
movsb
icebp
stos
add
adc
cli
jno
mov
jne
testb
adc
popa
sarl
mov
add
movb
push
mov
adc
cmp
fisttpl
pop
mov
and
pop
ja
mov
sub
popf
mov
data16
or
jl
mov
cmp
inc
fadds
scas
sub
jp
dec
in
xor
fidivl
lret
jecxz
movsl
leave
push
push
xchg
add
xor
mov
push
add
sub
jne
push
cmp
add
sub
sub
xlat
mov
sbb
outsb
mov
mov
and
jmp
orl
add
inc
idivl
ret
test
into
inc
les
add
mov
fsubp
scas
imul
adc
pxor
dec
fldz
incb
sub
iret
xor
mov
or
add
cmp
rcrb
cmp
dec
jmp
add
lds
iret
mov
imul
stc
jns
add
and
gs
push
fsqrt
iret
dec
adc
push
dec
add
push
js
add
imul
outsw
xor
je
addr16
add
sbb
je
cmp
add
lea
sub
fstp
xor
add
jg
jne
jns
inc
loop
dec
add
in
pop
xchg
add
ret
test
cmp
xrelease
rep
aad
fimuls
hlt
mov
adc
inc
sub
cmpsb
loope
fwait
jg
pop
gs
fsubrs
dec
add
pop
adc
push
mov
jecxz
pop
add
in
std
add
jbe
xchg
cmp
mov
xchg
mov
icebp
add
cmp
cltd
mov
push
fucomi
sti
add
and
repz
jb
push
pusha
add
loope
lock
xchg
mov
mov
imul
add
shll
cli
fisttps
push
add
sbb
rorl
pop
aaa
iret
add
mov
fucomp
lea
and
adc
add
mov
jp
in
add
add
jae
mov
jno
push
pop
push
out
add
subl
jae
mov
test
dec
xor
cmpsb
inc
das
mov
and
cmp
add
lea
cmp
add
iret
or
fs
hlt
xchg
adc
enter
adc
enter
sub
std
mov
fs
xchg
mov
and
hlt
call
mov
push
add
fldl
pop
push
add
outsb
add
mov
mov
add
add
aaa
mov
insl
sub
dec
mov
sbb
add
add
icebp
je
add
or
add
and
mov
jg
xchg
add
cld
mov
fs
inc
insb
adc
mov
loopne
mov
mov
fdivrs
clc
adc
aaa
aam
cmp
push
dec
push
leave
scas
cld
sub
inc
adc
cmp
nop
inc
add
dec
andl
pop
inc
mov
lods
mulb
push
fistps
pusha
and
pop
cmp
movsb
movsl
add
and
cmpsb
xor
lahf
dec
add
movsl
xchg
fists
lock
scas
sahf
mov
add
adc
dec
cmp
xchg
add
mov
add
or
in
dec
push
mov
mov
cmp
adc
dec
cltd
add
sahf
jae
add
pushf
mov
push
lods
psraw
test
repz
std
pop
xor
or
cmpsl
iret
faddl
adc
fidivl
mov
shrb
addr16
subb
add
mov
imul
imul
stc
mov
push
add
fs
add
mov
cmp
mov
mov
loopne
loop
add
pop
in
dec
add
adc
or
jns
jns
dec
dec
in
sbb
call
loop
xchg
mov
call
cld
scas
pop
mov
adc
xor
out
out
movl
fsubl
rcrb
and
test
add
lcall
add
inc
outsl
ret
test
fs
xchg
inc
testb
aas
icebp
test
lret
add
mov
add
loopne
outsb
movsb
or
stos
iret
sbb
inc
addr16
adc
sbb
adc
ljmp
jge
loopne
daa
je
push
cltd
mov
pop
add
and
scas
cwtl
add
int3
inc
scas
dec
sub
mov
add
stos
jl
cmp
cltd
insl
int3
dec
add
popf
jle
add
arpl
imul
jnp
sub
push
add
add
iret
cmp
hlt
fwait
mov
or
mov
lret
fs
or
cmp
lret
add
fs
bound
push
ret
enter
mov
imul
mov
lahf
bound
xor
mov
je
stos
push
movb
movsl
inc
lods
pop
shl
push
sbb
jg
add
xchg
dec
mov
dec
decl
lcall
mov
add
lret
cmc
add
mov
xor
add
fildl
mov
jmp
inc
pop
adc
pop
jne
add
in
jno
jno
cmp
mov
je
push
cmp
add
pop
xchg
in
jp
ficoms
nop
dec
xor
xchg
lds
outsl
ds
push
pop
je
cmp
add
lea
mov
push
fadds
mov
pusha
popf
add
push
adc
add
cmp
adc
dec
fs
sub
cmp
repz
out
mov
gs
rorb
xchg
cld
sub
mov
xor
add
mov
add
add
push
mov
add
push
stc
push
cmp
jno
mov
cmp
push
and
fsubrs
xchg
ds
imul
call
and
or
in
rorb
dec
lahf
and
push
add
adc
jne
nop
add
xor
pop
sub
call
and
dec
pop
inc
jo
daa
mov
nop
sbb
mov
mov
mov
ss
leave
jmp
jmp
push
xchg
inc
call
je
push
daa
stos
out
stos
lods
add
shr
bound
lea
sub
les
add
movsb
inc
sarb
mov
xchg
fsubr
mov
sbb
movsb
add
ret
mov
cmp
pop
push
test
and
add
inc
in
sub
pop
mov
mov
pop
xor
dec
mov
push
add
in
scas
add
add
xchg
pop
add
ljmp
add
push
cmp
xor
add
cmp
add
lcall
inc
push
lahf
imul
gs
and
bound
gs
aas
fdivrs
adc
aam
ret
cmp
jp
add
add
add
dec
mov
out
or
adc
jecxz
sbb
inc
mov
cmp
fstpt
mov
or
xchg
pop
add
mov
orb
jae
xor
js
testb
xor
sbb
int3
rol
xchg
test
les
lret
shll
ret
jns
dec
jmp
mov
xor
add
pop
jp
pusha
add
xor
xchg
and
sub
and
add
add
sub
loopne
adc
imul
dec
movsl
add
cmp
inc
add
push
roll
cwtl
lods
dec
fstps
mov
aaa
pop
mov
pop
out
sarl
push
inc
pusha
arpl
dec
stc
xchg
push
inc
mov
push
add
aam
movsl
and
mov
leave
and
dec
add
dec
repnz
mov
adc
add
hlt
add
hlt
sub
insb
add
mov
rorb
lret
cmp
popl
dec
push
add
insb
add
lock
inc
out
mov
add
adc
test
jno
and
data16
sub
add
rclb
mov
push
insb
mov
pop
dec
nop
jge
or
mov
repnz
dec
fsubrs
add
sub
dec
xor
movsl
xchg
xlat
shll
pop
fstps
ljmp
dec
pop
movsb
add
xor
adc
adc
aaa
repnz
xchg
mov
mov
aas
add
in
add
add
add
jge
add
and
add
cmc
inc
out
pop
das
add
or
fcom
push
add
testb
test
xchg
xchg
sub
shrl
or
mov
dec
mov
cld
rclb
pop
in
pop
stc
add
mov
cwtl
and
test
jno
ret
dec
pop
sub
pop
mov
xchg
push
push
add
add
jo
pop
mov
xchg
xchg
stos
inc
add
adc
pop
cmp
add
nop
add
fisubrl
add
inc
push
adcl
mov
repnz
call
mulb
popa
sub
popf
adc
and
js
add
pop
add
insl
cmp
jmp
pop
add
cmp
orb
adc
test
cmp
add
insl
std
mov
push
loope
sub
push
js
adc
pusha
pop
pop
movl
mov
mov
xchg
dec
pop
lret
mov
das
add
mov
jns
shlb
mov
xor
movsl
jp
call
mov
inc
movsl
lcall
icebp
cltd
fsubrs
test
pop
inc
cld
sarl
and
dec
sbb
add
insb
add
jle
mov
dec
add
push
push
and
sbb
mov
or
mov
add
sub
jbe
in
rorb
add
dec
add
cmpsb
aas
iret
imul
enter
clc
add
add
stc
aas
add
lahf
lahf
dec
test
paddsw
jmp
add
and
xor
pop
mull
add
add
mov
sub
sub
pusha
add
je
adc
xchg
pop
jle
mov
add
out
je
inc
sbb
push
in
mov
inc
sub
aaa
or
fstpt
or
in
adc
mov
ss
or
movsb
add
sbb
xorl
pusha
pop
arpl
outsl
mov
jb
addb
dec
cs
out
mov
xchg
pop
jge
fadds
add
sub
xor
pusha
inc
add
cmp
add
in
mov
add
add
pop
inc
mov
add
inc
or
arpl
hlt
enter
movsb
leave
fisubrl
jmp
push
add
and
das
add
adc
jg
or
sbb
xor
sbbb
loopne
jae
pop
jle
add
fistpll
xor
xchg
bound
mov
and
cmpsb
clc
loope
xchg
push
add
jno
movlps
dec
add
pushf
int3
lret
popa
xchg
mov
xchg
jle
daa
inc
ljmp
inc
cmp
cmpsl
dec
sub
push
sub
iret
and
out
adc
rcrl
add
xchg
clc
aas
shrl
xchg
adc
and
and
add
add
daa
sbb
or
push
inc
add
mov
add
loopne
rclb
mov
sbb
push
push
add
push
fdivl
dec
mov
inc
repnz
cmc
scas
add
mov
movsl
jle
scas
sbb
jne
mov
adc
cmp
cwtl
les
in
mov
and
sub
call
xor
pop
pushf
cli
add
lea
adc
inc
fs
and
add
mov
push
cwtl
add
rcrl
jecxz
dec
dec
and
out
flds
repz
out
and
roll
add
das
rcll
adc
add
cmp
movl
aam
sub
sub
icebp
scas
add
pop
or
rolb
push
repnz
add
add
repz
nop
cmp
xchg
mov
scas
add
sbb
mov
imul
cmp
jb
aad
add
fwait
xchg
push
xor
pusha
sbb
add
adc
hlt
jnp
push
in
adc
jo
roll
pop
hlt
test
add
sub
add
mov
inc
loope
sarb
jns
mov
inc
add
out
xorl
adc
adc
mov
ret
or
mov
add
loope
push
xchg
xchg
test
movsb
and
and
sbb
js
data16
ljmp
mov
add
push
dec
inc
add
cmpsb
out
mov
icebp
sarl
insl
mov
inc
add
icebp
jecxz
sub
int3
add
fimull
lahf
mov
ja
add
or
inc
lods
jns
adc
loope
mov
add
mov
dec
jge
popa
xchg
mov
push
mov
jmp
jb
mov
inc
shl
icebp
stos
xor
inc
stos
das
jnp
mov
and
fsubr
out
add
das
es
stos
push
aam
int3
mov
ljmp
roll
mov
ret
test
stc
mov
and
enter
fnstsw
test
cmp
xchg
sub
push
out
sbb
jno
cmp
lahf
mov
orl
sub
mov
add
inc
out
xchg
xor
jns,pn
adc
shll
pop
jecxz
pop
mov
arpl
add
stos
cmc
adcb
dec
adc
int
in
stos
adc
push
push
fadds
mov
incl
mov
xor
add
movsb
add
sarl
xor
and
or
lret
test
or
jl
add
add
add
rcl
cmc
icebp
pop
mov
jmp
loop
incb
xchg
adcl
daa
mov
loopne
mov
inc
lods
nop
add
xor
xchg
pop
add
mov
les
cmp
in
mov
enter
fwait
or
jb
add
fwait
jns
sbb
out
icebp
add
add
add
addr16
insb
es
pop
out
jle
xchg
mov
enter
idivb
jo
ds
inc
add
mov
cmp
mov
sub
in
and
into
sub
cmp
aas
fildl
fdiv
or
xor
mov
dec
aas
sbb
decb
adc
add
xor
out
fisttps
dec
int
orb
sub
mov
loop
dec
add
outsl
mov
sbb
pop
add
adc
outsb
int
int3
mov
fstpt
fldenv
or
imul
cmc
daa
xchg
test
scas
mov
loopne
inc
stos
in
push
lods
mov
add
dec
repz
leave
sbb
jg
test
jne
mov
push
jle
xor
test
adc
fisubrl
lret
add
or
ljmp
loopne
jle
push
xor
pop
push
add
push
and
dec
jecxz
data16
mov
fidivrs
rcrb
out
cmpsl
add
jo
add
aad
das
arpl
jae
push
sbb
cs
sti
pushf
add
sbb
push
add
or
rol
aad
imul
mov
fldcw
mov
add
outsb
add
inc
add
add
nop
add
je
in
add
fcomps
push
cmp
inc
ds
ret
insl
fsubr
pusha
add
filds
jp
cmc
inc
or
fdivrs
and
xor
rcrl
cmp
test
lret
pop
mov
inc
in
pop
add
aas
cmc
leave
push
sbb
or
js
fldt
mov
leave
pop
add
xchg
hlt
add
fwait
inc
stos
or
xchg
jnp
shrl
mov
sub
pusha
add
add
inc
movsb
fiadds
ror
mov
aad
sbb
xchg
push
push
mov
jnp
inc
add
xor
mov
sub
into
pop
inc
mov
leave
fldcw
lahf
mov
cli
xchg
outsl
add
jp
mov
test
xchg
add
adc
add
xchg
aad
pushf
pop
lahf
sahf
mov
cmp
cmpsl
jae
sub
add
sub
add
adc
push
shlb
and
insl
add
jmp
sbb
outsb
xchg
cmp
aam
lock
mov
add
std
aas
add
int
xlat
xor
add
cmc
lods
stos
add
sahf
and
fiaddl
push
shrb
push
xchg
es
add
push
add
cmp
lcall
or
add
test
ss
xor
mov
add
add
add
mov
sbb
jnp
sahf
adc
dec
sub
repnz
pop
loopne
pop
adc
xor
ss
pop
shlb
mov
addl
dec
jnp
fcomps
push
push
and
or
inc
mov
add
aas
into
jg
push
lods
dec
pop
lcall
jno
rorb
adc
add
cmp
push
and
add
xchg
add
add
xchg
and
hlt
out
icebp
fdivs
dec
cmp
push
clc
mov
jge
add
jne
cli
and
and
sbb
push
add
jle
sub
stos
add
and
mov
add
int3
push
dec
or
mov
bound
sub
push
arpl
fisubl
dec
lods
dec
mov
add
hlt
add
xchg
pop
add
sbb
sub
cmp
add
out
fs
add
popa
ffreep
add
aad
add
mov
rclw
jbe
lea
adc
enter
dec
mov
add
add
jle
cmp
cld
jbe
lods
sub
out
adcb
xchg
add
loope
je
mov
scas
mov
xchg
xchg
add
add
aad
push
add
inc
leave
jbe
adc
and
sbb
movsl
out
add
inc
gs
dec
add
out
jns
sbbl
jg
stos
jnp
fmuls
pop
mov
mov
cmp
mov
dec
sahf
and
add
dec
adc
in
add
fildl
out
leave
inc
add
mov
fwait
add
pop
test
sbb
add
cmc
push
add
sbb
mov
cmp
cmpsb
inc
xor
mov
push
sub
jle
add
jp
add
pop
or
dec
add
adcl
cmpsb
add
mov
pop
inc
ret
mov
push
stos
add
or
pop
cli
dec
dec
xchg
sahf
adc
jg
or
push
and
sub
mov
mov
adc
repz
dec
aam
add
mov
mov
rcll
jbe
lret
mov
flds
rcll
fildl
sbb
or
cmp
sbb
sbb
or
ror
push
add
add
sub
add
scas
out
mov
add
jbe
push
pop
add
push
add
mov
rclb
cmp
cltd
mov
jo
cmc
das
cmpsl
pop
rorl
scas
imul
adc
dec
add
pop
jmp
mov
add
jg
loopne
pop
sbb
or
ljmp
and
push
push
add
jg
or
adc
pop
jb
insb
lock
mov
in
jbe
movsb
jecxz
sbb
pop
fistpll
inc
dec
jo
add
mov
mov
push
push
add
test
jg
dec
insl
imulb
je
loop
popa
cwtl
data16
ss
jo
add
add
pop
test
mov
testb
sub
out
jecxz
or
push
adc
rol
les
inc
out
jb
push
pop
mov
hlt
pop
insl
push
and
xor
add
jle
test
add
xchg
dec
jle
cmpsl
fisttpl
and
pop
xchg
or
daa
addr16
jmp
mov
jne
imul
cwtl
cmc
test
pop
roll
stc
and
nop
jg
jmp
nop
sub
inc
data16
pop
ud1
jae
add
add
jg
jae
mov
stos
push
push
jmp
or
js
xchg
sbb
add
es
fnstsw
inc
and
imul
push
jns
add
addr16
add
add
and
mov
add
nop
je
int
int3
iret
aaa
push
sub
adc
popa
ljmp
mov
mov
fistpll
je
stos
sub
add
mov
lgdtl
cmpsl
mov
pop
das
cmp
rcrl
sub
sti
xor
lcall
popa
add
add
sub
and
add
add
outsb
add
add
xor
loopne,pn
xchg
pop
dec
cli
js
int3
xchg
fisubrs
daa
arpl
sti
add
loop
push
push
mov
mov
sbb
pop
jae
cmc
ljmp
arpl
or
out
cwtl
cmpsb
imul
psubb
jp
mov
es
data16
push
xchg
sbb
imul
xchg
nop
rcrb
or
sub
scas
cltd
add
lea
in
mov
add
imul
std
mov
adc
ljmp
jg
mov
aam
inc
js
imulb
ss
test
adc
and
out
mov
dec
add
es
js
sbbb
iret
pop
add
add
sbb
gs
add
add
jl
push
lock
cmp
mov
lahf
add
dec
add
add
mov
add
mov
enter
add
fmuls
sub
push
int3
add
out
inc
mov
cmpl
inc
rcrl
cmpsl
jnp
add
add
add
clc
dec
inc
fwait
icebp
in
cwtl
add
add
jno
js
sahf
jae
test
cmc
xchg
mov
xor
push
add
std
movsl
jg
mov
mov
ret
xlat
or
add
lret
mov
call
push
sub
add
ljmp
add
andb
add
outsl
jnp
addl
dec
in
scas
add
nop
test
add
mov
mov
and
xchg
push
jg
jecxz
insl
stos
mov
add
mov
push
jne
sbb
fs
add
mov
and
lret
sub
daa
add
pop
mov
cmp
mov
adc
jge
mov
scas
scas
push
add
push
and
or
insl
add
jmp
lcall
add
in
jge
dec
jg
add
pop
in
call
daa
je
aas
fistl
fadds
stc
sub
xchg
int
out
or
lock
cmp
jno
aad
hlt
sbb
mov
sub
dec
lds
pop
cmc
fcos
jmp
jmp
pop
push
jb
daa
testl
cmp
lret
add
lods
push
pop
mov
add
ret
jle
cli
jno
push
testl
add
test
incl
push
ss
push
negb
test
lahf
push
push
add
ret
loop
jl
sbb
daa
add
pop
xor
or
xor
push
push
adc
inc
and
push
add
dec
add
cmc
adc
nop
sub
das
adc
icebp
xor
fisttps
xchg
add
add
xchg
sub
dec
jae
dec
fimuls
sub
sbb
std
jl
dec
fldenv
fwait
aas
les
aam
mov
add
mov
out
cmp
dec
pop
stos
push
sti
loopne
jge
sti
sbb
sbb
js
iret
add
add
pop
repz
add
int3
add
add
dec
pop
adc
dec
dec
cmpsb
add
pop
add
cld
outsb
push
add
fldt
aad
push
xor
addb
xchg
test
fistpll
faddp
push
pop
add
pop
imul
jge
jns
cmp
imul
inc
add
dec
js
xor
mov
mov
mov
je
mov
cmp
ficoml
add
rcrb
rorl
and
ss
pop
mov
pop
add
sub
js
add
lcall
push
out
add
xchg
repnz
add
or
jmp
inc
cmp
mov
lcall
mov
push
imul
adc
test
pop
push
dec
lret
outsl
sub
aam
adc
subl
sbb
incb
xacquire
mov
adcb
add
je
fildll
xchg
jecxz
pop
aad
mov
dec
not
in
add
iret
aas
loop
add
pop
push
xchg
and
or
movsb
stc
jg
add
add
pushf
out
rolb
add
icebp
lds
xchg
sub
add
push
jp
std
add
orb
or
insb
aam
clc
add
or
enter
loope
inc
cli
scas
data16
add
sub
test
movsl
add
cld
lahf
out
or
add
movsl
add
cmpsb
add
xchg
jg
push
add
jmp
or
mov
call
mov
ja
cltd
push
rcl
subb
mov
adc
fs
cmp
pop
sbbb
pop
mov
jmp
mov
int
add
xchg
inc
aaa
mov
adc
fwait
pop
add
sub
mov
sub
mov
and
leave
lahf
cmp
add
mov
inc
mov
add
repnz
adc
or
cltd
xor
test
aam
push
or
jo
repz
mov
in
push
add
add
dec
xchg
mov
into
mov
lret
jno
xorb
test
in
pop
mov
and
cli
arpl
add
mov
dec
add
jbe
mov
and
cmpsb
pop
in
adc
mov
add
icebp
out
out
adc
notb
push
push
xchg
lock
rcrb
std
jge
cmpsb
add
movzbl
add
int3
add
add
test
nop
sarl
xor
mov
stos
mov
roll
arpl
das
add
inc
add
mov
inc
cs
push
mov
shll
scas
outsb
jo
dec
mov
add
dec
insl
add
push
in
or
mov
mov
add
add
cmp
add
fs
outsl
jae
or
ljmp
cmpsb
xlat
cli
fucomi
push
cmp
mov
mov
mov
xchg
or
add
loopne
adc
lahf
mov
jb
add
cmp
popf
and
push
push
cld
jg
add
aad
add
inc
xor
dec
jb
std
xchg
jbe
insb
stc
outsb
sub
aaa
push
add
stos
cli
push
mov
lret
add
dec
fbstp
inc
add
mov
add
aad
imul
icebp
add
adc
jle
arpl
add
adc
and
cld
test
cmp
mov
pop
pop
out
or
bound
outsl
xrelease
ret
mov
data16
pop
adc
icebp
xchg
xchg
push
xor
pop
add
mov
je
add
cmp
add
lcall
adc
sub
mov
dec
jg
sti
ror
jns
clc
add
xchg
pop
mov
out
mov
insl
add
add
add
lcall
lds
add
das
mov
scas
xor
popa
bound
xor
sub
push
mov
outsb
mov
jl
sub
push
aas
shl
or
lret
repz
add
sbb
mov
rolb
lret
add
mov
pop
jmp
pop
aad
jg
dec
push
xchg
xor
add
mov
or
std
cmc
mov
adc
daa
filds
pop
push
repz
cmp
push
sub
lea
add
add
jb
int3
jmp
pop
xchg
int
dec
shl
rorl
jmp
adc
sbb
xchg
jo
repnz
aaa
lock
fcompp
mov
lcall
dec
add
xor
mov
iret
inc
push
fadds
mov
sbb
mov
xchg
add
insl
and
mov
stc
pop
add
out
fimuls
add
adc
push
cld
stos
adc
mov
dec
cs
nop
jo
xchg
push
out
add
xor
fsub
mov
and
push
xchg
arpl
std
jge
add
pop
cmp
adc
add
mov
cmpb
xor
xchg
clc
sub
push
sub
adc
movsb
xor
pop
mov
xchg
push
add
and
je
add
pop
daa
or
mov
ljmp
fildl
pushf
hlt
lcall
fxam
cmp
xor
push
add
cmp
sarl
lock
inc
add
xor
add
sbb
push
mov
jne
pop
inc
les
test
neg
out
int3
add
aam
popa
inc
sbb
pop
mov
add
xchg
mov
pop
pop
sbb
ss
loope
flds
push
or
add
cmpsb
push
fistl
and
loop
outsb
add
mov
outsb
imul
dec
shl
mov
idivb
jnp
jecxz
out
cmpl
add
push
int3
ficoms
repz
insb
mov
mov
push
in
inc
pop
jg
mov
jne
add
outsl
in
add
xchg
movsl
sub
mov
lahf
inc
out
in
pop
cmpl
pop
and
je
rcl
test
jl
add
leave
pop
cmp
clc
add
add
sbb
add
in
mov
and
iret
add
adc
mov
sbb
dec
adc
cmpsb
jmp
shl
add
xor
add
imul
pop
xchg
loop
dec
cmp
and
xchg
mov
mov
dec
pop
pop
cmpsl
add
enter
flds
jno
inc
xor
in
pop
mov
mov
pusha
push
dec
test
cmp
mov
push
aad
or
aam
mov
lods
stc
movsl
add
pop
add
mov
sbb
xchg
push
xor
fcmovnbe
lea
ret
call
xchg
nop
mov
ret
sbb
shlb
mov
int
push
fdivs
out
add
loop
add
ficoml
push
add
or
add
mov
sbb
jmp
mov
add
js
inc
push
pusha
icebp
xchg
pop
inc
icebp
shrb
inc
add
stos
shrb
pop
add
movsl
sbb
sbb
test
jae,pt
xlat
xchg
add
or
ss
ret
ret
add
int
mov
popf
sbbb
and
outsl
push
fnsave
and
xchg
and
add
push
add
sbb
mov
cltd
add
repnz
lcall
sbb
js
negl
push
jp
scas
pop
dec
xchg
and
inc
inc
outsb
sbb
and
add
xchg
add
fisubrl
sbb
and
iret
push
orb
or
sub
add
aam
pop
jge
popf
or
outsl
push
addb
add
sbb
xor
hlt
fildl
mov
adc
or
das
cmp
jge
add
divl
add
int3
push
fmuls
clc
add
fdivrs
push
push
test
insl
mov
ljmp
mov
xchg
add
out
sbb
ja
and
lret
fadds
xor
ss
pop
add
inc
push
cmp
push
push
pop
push
jb
add
pusha
and
out
add
cmpsb
pop
xchg
add
dec
icebp
xchg
jp
inc
add
popa
sbb
repz
cmpsb
mov
mov
add
faddl
jge
stc
adcl
pop
inc
sbb
cmp
aas
stos
insl
mov
pop
push
mov
cmp
cli
add
pusha
add
xchg
ss
xchg
xor
or
pop
jle
dec
mov
xchg
add
inc
sub
add
sub
or
fsubrl
loope
sbb
inc
push
loope
xchg
adc
cmp
insl
sub
push
fildl
inc
bound
xor
xor
sub
movsl
add
add
outsb
out
rcrb
xor
dec
neg
insl
sub
add
jp
rorl
cmp
lahf
or
sub
fiadds
fiadds
dec
add
cltd
inc
sahf
add
fisubs
cs
or
xchg
pop
mov
fiaddl
movsb
sub
push
inc
jo
add
das
rcrl
cmpsl
enter
add
jo
inc
add
lods
add
imul
fisttpll
mov
aas
push
cli
and
int
fwait
pushf
adc
pop
add
dec
sub
in
xchg
mov
push
sub
es
xchg
jge
mov
or
lahf
jne
sti
in
dec
imul
ds
add
rcrb
pop
mov
push
incb
movsl
adc
pop
test
fdivrl
add
popl
aaa
nop
pusha
and
cld
pop
pop
adc
notb
push
out
add
mov
push
xchg
addr16
sbb
stos
or
test
outsl
fdivr
int
outsl
inc
cmp
dec
jge
bound
add
adc
rcrb
out
lock
mov
mov
es
scas
hlt
insl
add
in
fiadds
jle
test
dec
dec
mov
sbb
add
xchg
add
or
jno
add
adc
mov
add
mov
adc
hlt
push
mov
sahf
sub
xorb
jg
xor
sbb
rcl
icebp
movsb
scas
insb
shrb
jp
xlat
sub
cmpsb
add
dec
rorb
jg
stos
inc
fcmove
mov
arpl
fimuls
mov
pop
add
lock
sub
or
mov
pop
adc
push
enter
pop
adc
fistpl
jp
cld
test
add
push
mov
pop
fiadds
jno
cmpsl
aam
sub
add
lret
add
movsb
push
mov
sbb
sub
sbb
add
ljmp
lahf
add
and
leave
mov
jge
add
push
test
jo
sbb
dec
insl
push
dec
das
push
in
add
or
add
push
popa
mov
jb
test
cmp
pop
divb
jmp
mov
mov
add
add
add
xor
aad
add
add
fs
in
or
scas
push
push
mov
mul
jne
add
mov
outsb
add
cld
and
add
in
sarb
loopne
out
out
lods
mov
jo
data16
nop
xor
sti
pop
add
push
imul
sbb
sbb
je
sahf
jae
dec
mov
mov
xorb
push
andb
pop
aas
jbe
add
pop
into
cwtl
add
dec
add
mov
in
sbb
mov
xor
push
popa
add
mov
xchg
cmpsb
into
es
push
aad
ja
mov
sbb
add
dec
pop
pop
inc
leave
push
cmc
mov
add
add
xchg
add
stos
in
aad
js
sti
outsl
jl
add
iret
sbb
pop
jnp
rcll
cmp
adc
outsb
aaa
xchg
jae
and
inc
rolb
push
mov
mov
dec
in
pop
sbb
sbb
sub
add
insl
jo
int
addb
mov
add
clc
mov
leave
cltd
popf
callw
mov
sub
leave
movsb
mov
mov
xor
push
add
ret
xchg
xlat
dec
mov
inc
add
cmp
add
add
stos
add
push
fbld
fiadds
xor
test
sub
leave
cwtl
xor
aam
cld
and
mov
jl
out
or
insl
pop
add
jne
fildll
cwtl
jge
loopne
lods
push
jb
mov
mov
adc
push
insb
pop
repnz
add
dec
outsl
jmp
sahf
mov
mov
push
ds
imul
push
push
fwait
mov
insb
jge
popa
dec
iret
push
fstpt
cmp
stos
test
mov
scas
add
lea
add
sti
add
mov
xchg
jo
cmpsl
jae
sub
push
mov
xchg
fs
adc
call
sub
jle
or
add
add
negl
mov
mov
mov
sbb
fldl
jle
data16
arpl
imul
add
cld
rorl
add
in
jge
shlb
adc
je
jl
add
scas
mov
scas
jbe
pop
lcall
ret
jge
push
dec
add
add
mov
loop
pop
int3
addl
pop
adc
inc
jnp
adc
stc
add
mov
add
aas
insb
mov
cs
mov
in
imul
clc
xchg
xchg
cmp
cmp
add
and
and
adc
add
add
inc
cmpsb
incl
ret
pop
add
add
cs
ltr
xor
mov
movsb
push
rcrl
xchg
shlb
test
add
int3
scas
repnz
stos
mov
xchg
sub
cld
stos
xor
jb
add
xor
fstpl
and
adc
adc
add
jecxz
dec
ljmp
push
or
adcl
xor
dec
ljmp
mov
out
inc
sub
test
in
pop
ljmp
icebp
cmp
push
pop
and
adc
jle
in
popa
lcall
cltd
outsl
mov
cwtl
rcl
mov
insl
add
cmp
rolb
dec
adc
test
push
scas
shl
dec
or
nop
ljmp
or
bnd
enter
push
cwtl
add
add
add
add
and
sbb
loopne
adc
xor
leave
lret
jnp
shufps
or
aaa
add
out
inc
xchg
rep
or
sahf
dec
jle
out
cmp
sub
movsb
popl
sub
mov
add
xchg
pop
xor
cwtl
sub
mov
add
add
mov
or
mov
es
sub
lahf
cmp
pop
aas
es
jge
jno
cmp
add
hlt
pop
sbb
mov
dec
enter
xchg
cmpsl
outsb
add
test
nop
repnz
add
movsb
sub
sub
jl
inc
jp
mov
bound
aam
mov
rcll
aam
fs
add
or
and
adc
ja
push
dec
test
mov
add
add
jmp
popf
or
notl
int3
nop
add
push
fiadds
pop
iret
cltd
scas
jmp
adc
test
or
xchg
mov
pop
push
sbb
add
xor
xor
xor
pop
je
sub
test
inc
cs
loopne
ret
pop
sub
js
std
addb
add
adc
adcl
add
hlt
mov
add
aaa
ficompl
jg
pushf
push
and
cld
push
xor
ljmp
sub
daa
fistps
mov
rolb
enter
cli
movsb
add
and
add
lret
adc
add
cmc
insl
add
jno
cmc
out
add
mov
adc
lds
cmp
mov
jno
mov
mov
add
pop
sbb
popa
mov
cmpsb
loop
add
xchg
out
mov
mov
cmp
cmpsw
dec
enter
testl
add
jbe
mov
iret
ror
test
xchg
fwait
in
out
mov
add
fistl
cmpsl
sbb
and
and
cmp
add
or
add
jae
jno
imul
xchg
add
loope
dec
int3
mov
fcompl
push
adc
aam
cmp
inc
scas
lahf
jbe
jno
push
idiv
push
cltd
push
add
idivb
rorb
mov
add
jecxz
and
fldenv
mov
dec
sub
ret
mov
push
push
push
fistpll
divb
lcall
cmc
add
push
cwtl
gs
loopne
cli
lock
inc
les
jp
push
jo
mov
cmp
or
add
cmpsl
iret
pop
repnz
jmp
cmp
pusha
popf
lret
int3
cmp
scas
scas
dec
out
aam
mov
loop
enter
adc
sbb
push
add
data16
mov
push
jo
mov
mov
popf
mov
add
bound
mov
fildl
outsl
loop
inc
push
mov
and
fldcw
sbb
mov
lcall
call
es
mov
jbe
into
adc
mov
das
scas
dec
xor
push
arpl
add
insb
sub
mov
jg
sub
cmp
cmp
cmp
mov
aad
ret
out
lods
loopne
jg
cs
sbb
mov
mov
fidivrl
or
lldt
pop
mov
and
test
hlt
or
popf
add
cmp
int3
repz
fcomps
push
add
sub
add
mov
pop
movsb
pop
xchg
mov
je
and
add
add
insl
gs
jg
outsl
add
pop
lcall
sub
mov
dec
ljmp
add
cmp
cld
addb
pop
cmp
mov
xlat
cmc
sub
xor
jecxz
aam
add
sahf
adc
lea
add
imul
pop
enter
cmp
cmpsb
push
add
jb
nop
fwait
add
lret
ret
pop
add
lods
add
inc
stc
out
jno
xor
data16
movsl
leave
xor
push
adc
icebp
or
cs
lods
add
push
push
out
mov
jp
ficoms
pop
inc
jb
push
inc
sarl
fbstp
sbb
push
or
add
cwtl
jmp
sahf
add
xlat
add
add
icebp
aam
mov
mov
push
jle
loopne
sub
cld
fsub
and
vxorpd
popl
pushf
add
xchg
sarb
mov
pop
push
pop
shll
add
mov
inc
add
iret
sbb
enter
xor
add
dec
or
add
stos
rorl
jmp
lock
sub
add
leave
add
cmp
jns
mov
mov
jo
mov
push
repz
jno
sbb
sahf
test
add
rcll
add
xchg
dec
mov
aas
mov
cmc
int
push
into
mov
sub
pop
add
aad
addl
call
daa
ja
repz
or
xor
add
mov
xchg
add
or
pop
out
cwtl
sub
dec
add
lock
pop
add
mov
push
aas
stc
into
in
jmp
cmp
pop
dec
sub
scas
push
stos
add
add
mov
popf
adc
add
popf
add
addb
lods
add
scas
pop
add
movsl
cltd
mov
and
add
xchg
insl
es
clc
mov
js
jae
test
add
mov
jl
mov
add
inc
outsb
leave
cltd
inc
sub
mov
add
jecxz
mov
pop
ja
sub
mov
iret
lret
xchg
adc
bound
mov
sahf
es
in
aas
faddl
sub
gs
sbb
cwtl
call
arpl
test
in
aad
jp
fldcw
add
or
sti
adcb
jge
mul
add
pop
add
add
sub
adc
scas
pop
mov
add
add
cmpsl
dec
xor
xor
hlt
rclb
lods
shlb
cld
outsb
fs
ja
test
daa
adc
cmp
adc
sub
xchg
xchg
stc
dec
mov
bound
add
xchg
sub
mov
dec
and
mov
inc
in
or
inc
ljmp
xchg
xchg
push
mov
and
cmp
and
mov
das
jl
clc
lcall
sub
and
shr
add
mov
dec
fistps
mov
out
push
dec
dec
jge
popa
cmp
add
les
sbb
xor
dec
inc
xchg
mov
pop
xor
xchg
in
add
adc
add
cmp
test
xchg
add
sbb
movsl
aad
out
dec
add
repnz
inc
cmpsb
add
mov
dec
repz
frstor
pop
shll
push
lock
ljmp
push
sbb
int3
push
mov
add
dec
mov
dec
shll
jns
orb
dec
int3
pop
push
add
dec
pop
movsb
loop
mov
enter
mov
add
outsb
mov
or
add
add
popl
lods
add
mov
push
cld
inc
cld
sahf
push
jns
push
push
xlat
flds
mov
xchg
pop
cltd
or
sbb
imul
sti
sub
adc
adc
sahf
sti
xchg
mov
fdivl
movl
push
enter
xor
das
or
pop
pop
add
mov
insl
stos
cmp
mov
pop
add
xchg
jb
or
cmp
mov
mov
add
cmp
push
ss
add
pop
mov
pop
xchg
addr16
imul
lret
js
mov
add
sub
lcall
mov
mov
lods
add
sub
jns
adc
mov
mov
sti
mov
adc
sti
jmp
push
jecxz
add
out
dec
hlt
add
add
cmp
mov
push
mov
inc
add
rcll
repnz
loopne
and
push
mov
stc
psrad
fidivl
dec
or
lret
add
das
jp
das
xchg
xor
dec
mov
into
in
loop
ljmp
arpl
add
add
cmp
and
push
add
stos
add
inc
cmp
rcl
roll
les
and
add
inc
sahf
decl
mov
cmp
sti
add
sar
cmpsb
sbb
mov
sbbl
or
push
dec
add
sub
sarl
add
std
or
jae
sti
add
jmp
jg
cli
scas
push
lods
bound
outsb
loop
outsb
rol
jne
das
cmp
cs
add
pop
test
scas
shll
add
mov
xchg
xchg
add
add
sbb
add
push
scas
xor
cmpsb
push
xor
add
mov
subb
add
stos
mov
add
mov
cmp
call
decl
push
add
mov
push
xor
add
roll
xchg
popa
movsb
dec
cmpsl
fldl
rorb
add
lock
mov
mov
add
sbb
gs
jae
add
inc
add
push
pushf
add
scas
mov
pop
xchg
xchg
add
dec
xchg
sahf
faddl
movb
add
daa
sbb
push
pop
test
lds
into
jmp
stos
add
flds
mov
jmp
mov
mov
or
xchg
push
inc
pusha
or
add
iret
shll
lock
int3
push
aas
cmc
mov
xchg
add
sub
or
fmull
xchg
int3
push
add
ficoml
rol
fs
cmpb
fdivrl
lret
cmp
call
insb
and
mov
inc
fcomp
es
in
pop
imul
test
add
idivb
push
adc
mov
movsb
test
adc
jp
xchg
pop
lds
jmp
pusha
add
xchg
add
test
fsts
aaa
and
sbb
ret
push
test
daa
jnp
pop
mov
pusha
arpl
jmp
add
fwait
xor
pushf
cwtl
and
in
mov
addb
sub
xchg
jo
mov
popf
loopne
add
mov
and
lret
dec
add
cltd
add
lcall
add
adc
mov
mov
or
cmpb
jno
mov
push
inc
ret
in
mov
sub
mov
add
mov
nop
jno
and
aas
addr16
add
add
inc
fmuls
dec
cmpsb
fucomi
repz
daa
lret
clc
lods
mov
mov
jp
out
mov
mov
adc
int3
push
mov
jb
fcoms
sbb
or
add
js
add
pop
dec
cmp
jns
pop
and
sahf
add
adcl
cmpsb
jo
add
adc
imul
sub
cmp
dec
aad
movsb
repnz
add
mov
cmp
add
cld
push
mov
scas
test
call
jo
mov
orb
add
xchg
jmp
pop
sub
jge
stos
rorb
add
daa
popl
out
dec
stc
sub
idiv
fisubrs
test
dec
xor
push
mov
xchg
filds
shl
dec
fcmovnbe
fiadds
push
fwait
pop
sbb
push
lds
push
jl
insl
dec
ljmp
cmc
cmp
lcall
pop
arpl
push
fdivrp
push
pop
iret
leave
add
add
dec
leave
sub
jp
mov
inc
add
ret
or
adc
xor
imul
add
sbbl
jmp
es
add
sti
sub
push
mov
stos
add
sub
nop
lret
and
jae
pushf
sbb
jae
mov
add
in
add
cli
add
xor
or
pop
cmpsb
lods
push
lret
sub
adc
out
inc
dec
sarb
addb
add
sbb
lahf
inc
and
mov
and
fldt
sub
lea
sbb
stos
adc
and
icebp
add
add
add
add
mov
inc
out
std
pop
and
pop
xchg
in
fmulp
or
jmp
mov
add
lods
test
add
mov
in
out
mov
add
add
or
push
add
adc
push
jp
pop
lahf
pushf
dec
push
leave
in
xor
arpl
outsb
xor
int3
or
out
and
add
pop
iret
sti
cmc
pop
adc
push
fldl
lahf
cltd
push
add
iret
mov
js
add
outsl
or
test
mov
adc
aam
push
xchg
add
push
xor
pop
push
rolb
push
add
add
add
mov
mull
mov
sbb
mov
cmp
imul
add
in
jl
cld
cmp
daa
out
inc
enter
sbb
lds
jecxz
sbb
popa
add
xchg
std
jge
mov
repnz
adc
add
mov
in
xor
add
imul
pop
mov
cmp
leave
add
ds
add
fildl
mov
fcoms
add
jo
jb
cmp
inc
mov
sub
lods
xchg
rorb
fs
xchg
sub
add
push
mov
mov
mov
xchg
mov
sbb
pop
and
push
or
add
cmpsb
push
icebp
mov
pop
inc
mov
stos
xlat
and
dec
jb
jg
dec
leave
lret
aas
aam
and
or
pop
mov
in
iret
nop
jno
iret
sub
add
xor
jl
add
or
add
lret
ljmp
cmp
cmp
pop
add
sar
add
xor
jns
daa
dec
out
sub
push
add
add
jo
jae
sti
in
mov
adc
add
sub
sbb
add
add
sub
mov
jl
add
fldln2
test
push
mov
repnz
xlat
push
in
dec
inc
add
pop
add
add
pop
cmc
add
adc
daa
aam
sahf
insb
scas
gs
scas
pop
sahf
add
xchg
jb
jbe
popa
adc
pop
or
sahf
add
dec
lcall
sub
xchg
testl
xor
sbb
aas
jmp
ljmp
add
xchg
mov
divl
sbb
xor
pop
push
mov
add
add
xor
in
pushf
push
ret
mov
xor
dec
sub
and
jb
jns
lods
das
aam
pop
add
mov
xor
add
jne
or
cmp
jp
dec
lods
dec
mov
movsb
rolb
test
fistpll
pop
shl
aad
mov
ret
shl
push
pop
cmp
xchg
shrb
add
pop
outsl
std
add
scas
push
pop
lret
lret
js
movb
or
jnp
add
cli
insl
lods
add
xlat
push
push
lcall
in
test
cmpsb
frstor
xor
cmp
mov
jne
mov
push
popa
imul
js
rep
add
and
xchg
adc
hlt
inc
ljmp
add
add
in
pushf
push
xor
repz
inc
inc
imul
leave
cmp
push
push
movsl
dec
fistpll
loopne
and
icebp
cmp
add
sub
test
sub
mov
insb
add
dec
data16
xor
add
cli
call
fdivrs
out
jl
jae
test
cmpsb
mov
inc
cli
add
push
leave
add
and
add
sbb
or
push
xchg
pop
add
lahf
ljmp
lods
adc
pop
daa
cwtl
sub
incb
scas
mov
xor
pop
dec
mov
clc
add
add
cmpsb
add
jp
orl
push
jo
jne
add
incb
jo
mov
adcb
pop
pop
into
and
fstps
jg
cmp
adc
cmpsb
or
fs
add
lock
out
add
test
jge
sub
fcompl
cmp
add
mov
xchg
mov
cmp
in
sub
into
sbb
add
push
or
pusha
add
scas
push
fdiv
jmp
jnp
call
pop
add
mov
adc
das
inc
add
add
pushf
insl
addr16
loope
pop
cmp
leave
ljmp
jmp
fadd
inc
roll
jnp
mov
xchg
add
adc
rcll
outsl
mov
clc
stc
mov
cmp
adc
sahf
fists
push
js
insl
and
xor
add
add
cmpsl
jp
jae
js
stos
cli
lea
aas
adc
leave
sbb
sub
loope
cmpsb
daa
cwtl
cmpsb
push
int3
push
repnz
inc
ds
lods
cmp
xlat
sbb
add
pop
es
movsb
es
inc
pop
jno
cltd
pushf
mov
cmp
cmpsl
and
add
push
jp
mov
dec
movsl
addr16
mov
add
add
or
mov
cltd
cwtl
mov
push
add
stos
dec
add
add
in
aas
cld
pop
std
inc
fldenv
push
and
push
leave
icebp
cltd
mov
cs
mov
xor
and
mov
sarl
in
pop
out
pop
push
cmp
push
adc
ss
sub
jp
add
das
cmp
mov
xor
in
xchg
imul
add
or
pop
inc
jp
in
daa
xlat
shll
cmp
inc
add
mov
add
push
push
scas
pusha
inc
lahf
add
add
cmc
addr16
adc
add
mov
add
pop
inc
cmp
mov
inc
ds
mov
xchg
mov
cld
nop
aad
lock
xchg
add
lods
fildl
loopne
loop
add
mov
adc
int3
js
ror
xchg
pop
mov
and
nopl
ret
sub
add
out
outsb
inc
aam
data16
xor
pop
xchg
out
add
add
mov
sbb
fsubrl
testb
adc
movsb
push
pop
fsubp
out
mov
jl
sbbb
popf
mov
pop
pop
pop
cmpsl
cmp
xor
add
xor
scas
es
dec
cmp
add
notl
ret
sbb
sbb
add
dec
das
sbb
icebp
jmp
jg
imul
fs
cltd
mov
xor
pop
add
fsts
movl
xchg
add
mov
and
cmp
lods
add
lfs
xor
push
out
outsb
js
iret
xor
ret
movl
pushf
sar
aaa
imul
add
adc
or
dec
fadds
int3
or
sbb
inc
ret
dec
pop
sbb
and
add
jp
push
imul
fdivs
cmc
xchg
cmp
test
jmp
add
xchg
jmp
cmpsb
sbb
cmp
mov
mov
loopne
lods
and
repz
mov
dec
or
mov
fistpl
sbb
sbb
pop
sbb
scas
stos
push
out
add
adc
pushf
sbb
cmp
sbb
add
xlat
das
add
fsin
cmp
icebp
jg
into
pop
mov
cmp
inc
mov
mov
scas
mov
or
push
or
sub
into
adc
lods
lret
add
fdivs
xor
mov
xor
cmpsb
fiaddl
cld
ljmp
jo
mov
ja
add
pop
cmp
dec
rep
add
movsb
or
add
ds
imul
sar
add
push
jg
mov
pop
cli
lea
add
imul
and
sbb
adc
sbb
mov
movsb
push
pusha
fdivs
enter
add
jae
test
add
pop
sub
mov
cwtl
add
mov
sub
mov
xor
mov
mov
mov
imul
add
clc
orl
sub
push
fidivrl
mov
in
mov
negb
movsb
add
dec
add
inc
and
add
fiadds
cmpsl
lea
push
jb
fwait
nop
test
jne
add
add
sti
xchg
cmpsl
jae
dec
pop
loopne
lods
mov
movsb
jmp
add
lods
jge
or
lock
out
push
sbb
pop
mov
push
ljmp
in
add
add
xlat
mov
push
sub
or
sbb
nop
stos
add
mov
ljmp
fsubs
fs
pop
mov
add
sti
ret
std
test
add
pop
fisubl
sti
pop
xor
pop
push
and
sbb
jo
add
fmulp
pop
cmp
ljmp
push
call
adc
aas
adc
pop
jnp
ret
cmpsb
xchg
jo
pop
mov
sub
xlat
out
es
cmp
jecxz
dec
arpl
sbb
xchg
add
add
and
add
scas
jmp
add
mov
sub
ffree
sub
add
xchg
popl
adc
add
fiaddl
mov
xchg
fadds
jmp
mov
jg
lret
fbstp
add
xchg
adc
les
std
mov
mov
sub
out
jnp
mov
icebp
add
push
jle
cmp
pop
pop
ljmp
pop
sub
xor
mov
repnz
adc
xchg
mov
or
data16
xchg
scas
add
out
aaa
add
loope
push
mov
inc
pop
adc
jb
sub
mov
test
add
rolb
addb
push
outsl
aad
push
dec
push
mov
iret
push
mov
pop
adc
xor
repnz
jmp
lret
shlb
movsb
iret
arpl
insl
or
stos
add
ljmp
xor
bound
popa
xchg
fistpll
add
adc
mov
xchg
fdivrs
add
and
push
sub
aam
aad
jmp
xchg
mov
mov
loope
fiadds
test
xlat
rcll
add
add
sarl
mov
nop
push
popa
adc
lret
hlt
mov
add
scas
or
add
adc
xchg
or
mov
leave
push
incl
fldt
add
add
lds
jmp
lret
and
sbb
cmpsl
fldcw
mov
push
sbb
in
push
jecxz
pop
test
xor
loope
mov
clc
ja
loope
mov
jmp
or
add
add
addb
mov
mov
push
sub
xchg
icebp
int3
out
outsl
movsl
aas
jl
ljmp
je
sti
lcall
mov
movb
add
dec
or
iret
scas
add
pop
pop
jg
cmp
pop
sub
shl
sub
jne
test
add
mov
sub
out
daa
sub
cli
into
pop
add
pop
cmp
and
movsl
sub
jns
jne
xchg
hlt
xchg
add
lret
add
sbbl
add
sbb
js
cmp
ror
sbb
or
xor
add
mov
and
add
jge
adc
add
xor
add
xchg
push
aam
and
xor
nop
arpl
es
add
push
pop
lods
inc
cli
mov
jne
xchg
stos
mov
outsl
movsb
xlat
std
sbb
add
xchg
enter
add
mov
xor
inc
xchg
xchg
aaa
fs
inc
ds
cld
pop
stos
adc
pop
cli
mov
cli
out
add
lods
push
cmc
aad
sbb
cmpl
in
out
mov
add
and
pop
jp
cltd
or
arpl
xlat
hlt
add
out
inc
punpckhwd
lea
loop
loope
cs
dec
xchg
fs
xchg
or
adc
mov
roll
adc
xchg
add
inc
lcall
inc
cmpsl
add
repz
fstpl
xchg
add
push
jp
adc
sbb
jb
inc
movsb
push
stos
idivl
cmpsl
jge
push
movsb
sub
shll
push
and
add
mov
mov
sar
mov
fwait
cli
jg
dec
pop
sub
or
jae
aas
adc
out
lret
inc
lods
sub
lea
cmp
test
mov
icebp
bound
inc
push
jle
xor
leave
mov
add
pop
jo
mov
jo
movsb
xor
jge
insb
mov
dec
repnz
data16
inc
fs
outsb
xlat
add
or
lcall
cltd
jns
mov
cwtl
hlt
adc
add
or
xor
push
mov
test
test
mov
ss
aas
push
aas
xchg
loopne
lods
sub
add
add
cltd
xlat
push
ja
add
add
add
lcall
mov
cld
addr16
shl
push
jge
jle
adc
lret
test
mov
pop
cltd
dec
fisubrl
jns
and
sahf
ret
xor
push
scas
mov
add
xor
mulb
mov
jecxz
inc
daa
and
inc
adc
mov
mov
shrl
mov
add
xchg
add
inc
into
jecxz
pop
inc
xchg
mov
add
shr
and
xor
sub
roll
add
mov
mov
adc
cmp
daa
insl
fwait
push
push
mov
pop
clc
add
scas
jge
xor
aas
cmp
jnp
call
mov
test
mov
inc
adc
dec
add
enter
popa
gs
mov
int
add
sahf
sbb
loopne
inc
pop
in
sbb
cmovae
fidivl
pop
sub
add
scas
add
sub
icebp
push
push
fimull
add
shlb
add
push
inc
add
xchg
out
jno
xchg
leave
mov
push
inc
testl
or
insb
inc
add
pusha
mov
test
mov
jno
jne
mov
push
cld
jl
mov
lret
out
cmp
into
ljmp
xor
fsubl
jno
adc
inc
stos
pop
ljmp
add
sbb
pushf
add
pop
icebp
add
xchg
imul
cmp
push
sub
loope
cwtl
mov
add
xchg
mov
xchg
inc
cltd
je
in
out
stos
add
add
adc
aad
and
mov
add
dec
or
ljmp
cmp
cmpsb
and
xlat
outsl
dec
frstor
mov
test
add
decb
lahf
in
roll
xlat
jl
test
sbb
mov
lret
arpl
xchg
dec
sbb
or
outsb
cmp
lret
add
xlat
xlat
inc
out
dec
idivb
pop
ja
into
sub
fcomp
daa
cmp
add
leave
add
fildl
js
cltd
in
pusha
outsl
jecxz
push
test
pop
jne
ds
mov
mov
cs
pop
jbe
jne
jbe
pop
mov
stos
btr
test
add
lret
roll
aas
ds
popf
inc
mov
pop
xor
cmp
pop
je
jle
mov
lahf
add
add
ja
or
push
dec
xor
icebp
cmpsb
pop
fwait
out
in
dec
xor
add
testb
add
push
in
inc
out
lods
call
sub
popa
ss
mov
pop
pop
in
or
pop
mov
push
jmp
cmpsb
sbb
dec
add
in
call
jnp
rcll
xchg
out
dec
mov
insb
and
js
add
add
mov
lds
and
loope
outsl
movsb
inc
add
outsb
add
xchg
cmp
mov
xor
loopne
rorl
mov
pop
cmp
filds
insb
lods
add
mov
inc
dec
in
cmpl
jnp
fsubr
mov
aam
add
out
dec
pusha
add
ret
ret
mov
ss
sbb
sub
xchg
imulb
out
add
pop
push
scas
jmp
pop
pushf
cmp
adc
or
cwtl
add
out
mov
data16
pop
fcoml
js
rorb
xchg
dec
jp
add
in
and
jbe
hlt
ljmp
adc
setae
push
gs
bnd
mov
xor
mov
push
mov
add
cltd
pop
sub
add
js
add
adc
int
inc
out
loopne
lcall
jecxz
pop
outsl
mov
mov
add
inc
sub
lds
mov
filds
lods
sbb
ljmp
inc
xor
in
jb
or
pusha
ja
test
jns
sub
adc
add
adc
jmp
dec
lea
and
movsl
push
mov
inc
pop
mov
ja
insb
dec
add
es
add
mov
xchg
test
add
add
add
imul
nop
mov
adc
sub
add
mov
ja
push
jmp
inc
mov
stos
in
xchg
lahf
mov
loopne
fs
dec
lcall
add
je
add
add
and
stos
add
xchg
cld
push
add
inc
aas
cltd
aas
push
inc
sub
xchg
cli
add
aaa
js
outsl
rclb
aaa
mov
add
mov
pop
out
mov
xor
dec
adcb
mov
pop
pop
add
andl
aad
aam
dec
push
lods
test
cwtl
dec
lods
push
push
mov
or
add
or
dec
cltd
fcomp
adc
jne
mov
add
ficoms
add
lcall
push
ljmp
loope
sub
pop
jg
rcr
jge
lahf
ret
out
fbstp
das
jge
fs
pop
or
add
sbb
inc
xchg
aad
mov
xchg
xor
xchg
aad
fstpl
hlt
push
fisubs
cmpsl
and
jle
or
cmp
mov
xchg
or
adc
scas
out
push
pop
add
test
dec
add
and
adc
push
pop
xchg
xchg
ja
mov
cmp
out
add
ja
rclb
add
or
sbb
add
add
addr16
add
outsl
add
jmp
and
test
lea
fs
add
add
fisubs
add
in
xchg
int
ret
test
xchg
movsbl
das
jo
add
aam
push
add
add
or
pop
add
jmp
xchg
movsl
and
adc
movb
movsb
sbb
xchg
sub
fsubrs
add
sahf
incb
add
leave
lcall
dec
jmp
or
mov
adc
into
mov
or
xchg
jmp
and
out
dec
mov
add
mov
add
xchg
add
dec
add
xchg
adc
in
rclb
add
sub
fists
test
add
inc
jbe
out
add
mov
pop
enter
sub
movb
subl
push
xchg
sub
sbb
or
dec
xchg
mov
xor
cmp
lcall
mov
rolb
inc
push
fldl
bound
sub
and
add
xchg
mov
mov
pop
sbbl
push
cmpsl
aaa
add
xor
xor
aad
fmull
pop
xchg
out
out
dec
rolb
xor
pop
push
mov
add
mov
jne
add
adc
shr
movsb
mov
je
inc
std
add
add
inc
cwtl
mov
nop
xor
adc
pushf
xor
enter
sub
int
xchg
xchg
dec
or
xchg
inc
in
add
mov
sub
test
cld
cs
lds
mov
rorb
add
sub
add
inc
and
iret
fidivl
mov
shrb
xchg
jns
into
pop
or
add
repz
lock
dec
jmp
movsl
pop
lahf
add
xchg
jno
inc
sarl
sub
xlat
and
in
cmpsl
or
add
or
lds
jp
mov
jecxz
fsubs
cmp
mov
dec
faddl
sbbb
jmp
je
sbb
cmpsl
leave
dec
add
ss
add
sbb
mov
jb
push
or
jns
xchg
and
add
out
push
add
repnz
pop
std
add
sahf
add
pusha
incl
in
add
loop
dec
push
add
out
ljmp
pop
enter
ss
jl
lret
mov
sbbb
mov
xorl
ja
aas
sub
add
jmp
mov
js
pop
pshufw
ficoml
sub
clc
cli
add
dec
lret
std
mov
mov
fdiv
pop
aas
jg
add
lret
push
sub
push
push
flds
adc
jno
test
cmpsb
xchg
aaa
pop
movsl
fdivrl
jnp
ror
or
pop
pop
push
and
call
rcr
push
pop
imul
add
lods
mov
add
add
in
cmc
popa
pop
sub
flds
add
add
pop
pop
hlt
jae
add
push
in
add
push
add
push
add
cmp
inc
pushf
add
loopne
mov
inc
cmpsl
sahf
roll
outsb
sbb
dec
and
repnz
mov
inc
aas
arpl
add
lea
inc
pop
aas
insb
gs
add
push
fwait
dec
fdiv
aad
aad
inc
daa
sar
lahf
imul
add
aam
jb
add
cmc
pop
out
mov
pop
and
dec
add
lea
pop
adc
add
xchg
mov
imul
int3
repz
mov
gs
fsubl
adc
add
mov
in
and
outsl
es
sahf
int3
cld
enter
bound
push
fsubrs
add
rorl
and
mov
ja
lds
je
data16
mov
add
pop
jmp
movsb
push
out
xor
shll
into
lret
cmpsb
aaa
rorl
arpl
add
xor
mov
cmpsl
lcall
pop
add
pop
sub
pop
insb
cmc
push
sub
pop
leave
add
xlat
add
out
push
fxch
xchg
mov
add
sbb
xor
incb
mov
lock
push
into
inc
add
shlb
sub
loop
test
leave
outsl
imul
sbb
ficoml
cmpsl
scas
adc
xchg
push
cwtl
dec
inc
sbb
rolb
add
das
add
stc
add
xchg
inc
mov
mov
add
movsl
sbb
aaa
xchg
das
fdivr
push
lahf
xchg
add
and
test
pop
outsl
add
add
push
jbe
ja
jecxz
popa
cmp
ret
daa
xchg
or
inc
add
sbb
lods
add
cmp
sub
push
scas
cmc
dec
pop
jle
add
inc
in
stc
sbb
lds
pop
or
repnz
stos
pop
repz
jl
nop
push
stos
inc
sbb
inc
mov
repnz
es
lahf
add
pop
shll
flds
dec
mov
inc
add
or
aaa
int
imul
sub
mov
add
add
int
cmpsb
divl
fdiv
inc
gs
repz
xchg
jmp
sbb
add
mov
pop
and
popa
adc
test
push
add
mov
in
add
inc
add
adcb
push
and
pop
pop
add
add
imul
add
data16
add
scas
or
iret
js
leave
jb
lret
xor
mov
cmp
shll
add
out
pmovmskb
into
lods
ss
push
mov
mov
mov
das
pop
movl
out
ret
data16
dec
daa
add
push
adc
cmpsl
int
mov
shll
sbb
pop
out
add
xchg
push
add
or
sti
xor
fistps
add
std
and
xchg
xchg
nop
jnp
mov
inc
aad
lds
into
scas
arpl
cld
dec
in
ljmp
repnz
jae
cmp
push
ret
arpl
mov
in
lods
adc
cmp
add
adc
stos
dec
xchg
popa
ja
xor
and
sahf
je
cs
add
bnd
mov
add
js
pop
cmp
push
lds
jnp
xchg
cltd
stos
out
aas
mov
sub
iret
pop
test
sbb
dec
mov
mov
adc
add
sbb
push
add
xor
vpcmpgtd
mov
push
inc
xchg
test
or
cltd
add
add
mov
xchg
loopne
adc
jmp
jo
add
jp
mov
inc
push
ljmp
add
add
and
push
pop
sar
pop
add
and
cld
mov
es
fs
push
add
adc
cmp
stos
mov
sbb
add
xchg
push
add
fstpt
jae
add
outsl
add
enter
add
sbb
sti
movsl
addr16
cmp
int
push
push
jbe
fs
adc
xchg
das
and
out
and
add
inc
fistl
lahf
sbb
push
add
inc
dec
adc
xchg
mov
push
cmpsb
jne
mov
pop
leave
ds
jl
add
jne
data16
dec
sub
lret
cmpsl
std
std
call
fwait
or
dec
sbb
jo
mov
or
int
add
xor
lock
cmc
xor
lea
call
xchg
aaa
add
addl
pop
adc
fs
cmp
and
xor
xchg
add
add
lahf
jns
mov
pop
sub
add
mov
inc
add
daa
lahf
add
or
cli
ja
data16
dec
sbb
rol
mov
jp
iret
les
xchg
cmp
jge
add
mov
adc
and
test
cmp
add
inc
pop
cmpsl
sub
add
cld
sbb
int3
pop
sub
call
dec
add
or
rcrl
add
insb
xchg
sub
adc
or
lea
lods
add
push
aam
jp
sub
dec
dec
je
lret
or
lds
jge
jns
push
imul
add
loopne
mov
and
scas
cs
inc
shl
mov
xor
jge
in
test
xor
fs
jno
call
xor
cmp
mov
cld
dec
push
lods
add
lret
mov
xor
add
push
sti
and
lret
cmc
mov
adc
enter
or
push
stos
insb
add
or
and
cld
clc
mov
add
inc
lahf
es
icebp
push
add
jo
xchg
add
pop
ss
cltd
xchg
in
fildll
jg
mov
mov
adc
dec
jmp
mov
add
push
repz
pusha
scas
jnp
stos
inc
pcmpeqd
les
add
xor
rorb
mov
jb
or
mov
jno
test
fs
mov
pop
add
jmp
add
loopne
sbb
pop
andb
pop
leave
outsb
dec
inc
stos
mov
lahf
add
add
push
sarb
xor
add
push
xchg
pushf
dec
aam
test
imul
add
xchg
cmp
mov
in
pusha
dec
int3
stos
add
add
xchg
push
stos
xor
gs
push
ljmp
lcall
adc
inc
inc
sbb
push
xchg
jnp
stos
pop
add
and
mov
movsl
or
add
out
push
mov
add
int3
js
jmp
jno
sub
push
ds
leave
roll
test
mov
test
mov
push
or
add
cmp
test
sub
push
add
imul
xor
popw
andl
xchg
pop
dec
mov
cwtl
dec
push
fildll
rcr
bound
xchg
pop
jecxz
pusha
add
add
mulb
jb
adc
mov
fists
adc
mov
lock
ret
jns
or
inc
cmc
or
xor
add
enter
xchg
test
sub
sub
in
shlb
push
add
dec
lcall
test
pop
call
sbb
and
ret
cmp
add
add
loope
ja
add
out
jo
aam
ficoml
dec
jge
jne
xlat
add
mov
jb
aas
cs
int
fisubs
jno
sub
adc
mov
lds
add
pusha
push
fiaddl
mov
scas
xor
inc
les
mov
out
or
jne
mov
in
mov
inc
add
add
sub
push
adc
mov
fdivl
dec
rol
and
or
arpl
jecxz
xor
add
fisttps
cmpsb
dec
and
or
sbb
js
rcrl
lret
cmp
cmc
push
add
add
in
mov
cmpsb
add
add
hlt
bound
mov
pop
and
int
str
fwait
lods
divb
mov
push
sahf
sub
loop
add
repnz
push
in
hlt
sub
shl
add
adc
add
loop,pn
fidivs
push
popf
test
test
pop
clc
lods
xchg
push
cmp
xor
popw
shld
add
fiadds
xor
sub
mov
pusha
lods
std
repnz
notl
mov
xor
mov
cwtl
stc
push
push
sbb
and
sub
int
cmpsl
add
push
add
adc
adc
mov
mov
ss
icebp
es
and
xchg
cmpsb
adc
add
dec
dec
out
sub
cmp
inc
sub
fsubrs
cmp
dec
cmp
aaa
mov
xor
add
inc
fwait
pop
pop
pop
and
inc
xor
lret
cld
stos
add
scas
cmp
adc
add
push
mov
pop
test
aas
mov
and
jge
sub
insl
hlt
pop
popa
dec
pop
ret
jne
cmp
loop
sub
add
ljmp
adc
ljmp
pushf
jp
mov
es
xor
rcr
cltd
jae
add
frstor
repz
xor
clc
xchg
ljmp
xor
mov
inc
js
adcl
arpl
or
cwtl
cld
cwtl
mov
sbb
insb
cmp
scas
hlt
mov
cmp
pop
add
mov
or
or
lea
ret
dec
xor
xor
fldenv
xor
repz
xchg
jle
jl
mov
adc
mov
push
divb
loope
xlat
or
sub
or
pop
dec
adc
fimull
stos
dec
add
add
cli
xlat
lods
inc
ss
and
lret
es
cltd
pop
add
outsb
pushf
jge
cli
add
and
cmp
loop
pop
inc
gs
add
je
jge
dec
imul
lret
sbb
in
cmp
mov
mov
lret
add
popa
mov
and
cmp
aam
pop
add
mov
adc
adc
mov
add
add
out
add
ss
pop
lods
fiadds
and
dec
jnp
call
mov
sbb
bound
push
out
clc
pop
pop
out
outsb
jno
lcall
mov
mov
and
xchg
lods
xchg
and
add
jge
xchg
pop
sbb
xor
jb
lods
iret
jbe
dec
inc
pop
inc
adc
inc
push
lret
adc
icebp
movsb
fs
mov
mov
cmp
mov
xor
add
sub
fsubrs
inc
add
add
das
imul
xor
fnstsw
push
sub
es
js
xor
cmc
outsl
mov
push
in
add
cmp
mov
outsl
jae
or
jp
ja
cmpsb
xchg
mov
andb
mov
add
or
cwtl
jle
test
and
sbb
cs
mov
add
sub
aad
push
jle
fistpl
int
or
fneni(8087
push
ret
mov
or
jo
fiadds
mov
dec
sub
add
xor
addl
movsb
add
jo
add
add
lea
call
xchg
inc
jge
cmp
jl
das
das
lret
xchg
iret
add
roll
add
mov
test
in
mov
lods
add
rcl
cmp
rolb
xor
push
hlt
pop
jnp
aaa
add
fcoms
xchg
add
and
add
popa
add
cltd
add
jp
in
add
cmp
repnz
pusha
sub
mov
cmp
mov
jp
adc
adc
and
sbb
jg
jo
xlat
cld
add
mov
fwait
shrb
out
add
add
xchg
cltd
xchg
add
add
add
loopne
cmp
and
inc
or
loop
and
add
sahf
sub
adc
scas
inc
add
pop
add
sub
push
sub
stos
mov
sbb
add
repnz
test
cmp
adc
add
add
xor
roll
leave
jbe
xchg
and
fmuls
xor
add
insl
jae
push
sub
mov
fcomi
ss
jnp
xchg
add
ja
adc
sub
push
mov
or
incb
xor
mov
jg
das
push
fs
push
ja
ljmp
add
xchg
or
sub
add
jno
push
sub
jo
jo
mov
jne
add
push
stc
add
dec
add
fwait
cwtl
jbe
xchg
xor
adc
pop
jno
mov
add
rorb
mov
insl
in
add
jno
mov
add
add
scas
mov
ffreep
rcrb
add
cs
data16
aad
enter
jbe
add
or
loop
cmp
mov
repnz
cwtl
cwtl
jmp
xor
push
push
das
lds
roll
notl
add
dec
xchg
sahf
sub
arpl
ljmp
mov
in
dec
add
inc
dec
roll
xchg
adc
mov
imul
aam
lret
add
ja
bnd
push
int3
aas
jg
or
cmp
in
je
and
xchg
cltd
mov
cmc
sbb
sub
jbe
cltd
and
test
sti
xor
cmpb
dec
inc
icebp
pop
lahf
and
sbb
jmp
pop
pop
testb
pop
or
and
into
or
sub
add
in
mov
cmpb
jns
xor
test
add
and
aas
push
mov
cltd
add
mov
pop
mov
jmp
lods
loopne
xchg
jmp
mov
add
mov
mov
add
sbbb
push
fadds
xchg
sbb
mov
xorb
xor
sbb
jno
std
aam
fiadds
dec
pushf
add
pop
pop
int
or
call
movsb
push
push
mov
push
movl
addb
cmpsb
mov
mov
pop
mov
jae
add
push
fwait
xchg
jg
movsb
movsb
add
lret
outsb
fldenv
repz
sahf
in
cmp
imul
fisubl
xor
stc
bound
lcall
mov
adc
lcall
pop
cltd
dec
sub
adc
mov
lahf
dec
xchg
dec
pushf
and
cs
cmp
xchg
mov
fnstenv
rorl
lds
push
inc
enter
dec
cmpsl
jb
pop
nopl
sub
xchg
mov
jl
mov
xchg
js
jmp
into
outsl
cmp
add
std
loop
cld
dec
imulb
ljmp
and
shrl
jno
in
xchg
jne
addr16
add
shlb
mov
int3
xor
add
cld
cwtl
mov
bound
sbb
adc
clc
lret
fwait
add
xchg
jp
mov
add
ljmp
dec
lea
pop
loopne
sbb
movsl
mov
sub
cmp
mov
lret
pop
add
cwtl
add
add
jecxz
ret
je
mov
cmp
fwait
push
sub
cwtl
fstl
fisubs
and
add
push
xor
jb
in
mov
call
imul
mov
sub
test
add
adc
add
jno
jge
jbe
xor
ficomps
xor
clc
add
cs
push
add
icebp
ljmp
or
dec
xlat
push
add
lock
xchg
in
add
adc
and
push
in
cmp
subl
add
push
pop
adc
and
push
pushw
xchg
mov
pushf
pop
int3
add
pop
testb
xorb
add
insb
lret
iret
movsb
pop
xchg
fcmovnb
jnp
or
inc
sbb
sub
fisttpll
movsl
out
xchg
out
jne
dec
push
cmp
xor
int
shufps
xchg
mov
and
jl
add
pop
fistpl
addr16
std
lock
mov
scas
add
imul
jbe
test
xchg
inc
gs
add
leave
xchg
std
push
lock
popw
cld
or
pushf
add
add
rcll
push
stos
jg
jg
pop
pop
pop
sbb
hlt
cmpsl
xor
and
loope
or
push
ficoms
add
add
out
add
or
addr16
dec
add
add
repz
mov
sub
add
pop
push
xchg
scas
insb
add
imul
lea
push
jbe
gs
negl
jmp
jae
call
mul
cmpsb
jle
or
add
xchg
fldl
pop
js
pop
cmp
mov
adc
jle
add
pop
jg
add
imul
fs
add
scas
inc
das
add
add
xlat
inc
aad
dec
lds
mov
jno
out
gs
push
push
add
movsb
jns
rolb
add
pop
lahf
xchg
adc
aam
mov
add
mov
sbb
sbb
xor
sahf
add
adc
loop
jle
add
mov
in
xchg
sti
push
pop
aas
mov
int3
ds
sbb
add
lahf
lods
arpl
jb
in
fidivrs
stos
les
addb
mov
push
adcl
dec
cltd
shlb
xor
jno
cmp
loop,pt
cmpsl
addps
repz
add
mov
jge
pop
sbb
mov
add
loop
loope
lds
sub
xor
push
xchg
sbb
out
fldenv
shl
arpl
in
icebp
add
cwtl
in
icebp
inc
or
xchg
shlb
push
add
add
xchg
add
and
mov
cs
and
sbbb
roll
das
mov
movb
cmp
add
add
add
enter
cmpsl
addr16
ffree
sbbb
insb
xor
enter
push
sti
add
and
xchg
mov
add
sbb
xor
pop
ss
aas
jg
movsb
lock
dec
pop
xor
ljmp
daa
xchg
cmp
cli
pop
int
push
inc
xchg
pop
iret
pop
cltd
cwtl
lods
ds
fildll
aas
add
sbb
xchg
imul
inc
mov
add
cmp
cmp
dec
adc
cltd
jo
add
push
add
stos
mov
out
adc
pop
pushf
stos
add
mov
test
add
nop
fldcw
xchg
push
repnz
nop
pop
add
xchg
or
popa
rol
pushf
cltd
movsb
mov
iret
test
loopne
aam
lahf
scas
xchg
imul
sahf
add
test
or
mov
aaa
add
movsl
mov
dec
add
or
cmpsl
leave
movsb
xchg
in
shr
mov
loope
add
and
leave
clc
cmp
mov
jge
es
stc
int3
icebp
pop
iret
xchg
js
xchg
add
testl
inc
sub
mov
jne
mov
ret
cs
pop
movups
jl
cli
lds
sahf
jecxz
sti
sbb
jl
mov
pusha
add
fs
mov
inc
add
sub
in
jle
pop
xor
into
bnd
dec
fcmovne
scas
addl
xchg
xchg
in
jnp
or
test
stos
adc
push
sbb
xchg
sti
incl
add
stos
and
cmpsb
out
flds
jae
add
sub
lods
add
inc
subl
mov
iret
cmpsb
sub
insl
cmp
cs
fstp
mov
imul
cmpsl
mov
rcrb
scas
push
add
cmp
adc
add
mov
lock
mov
sub
jns
mov
pushf
pop
cmpsl
xor
je
js
js
add
push
mov
adc
ret
add
imul
jmp
add
xorb
inc
imul
xchg
sbb
jecxz
jns
xchg
mov
les
shll
mov
or
imul
lahf
or
jno
dec
mov
aaa
out
data16
flds
dec
mov
push
paddsb
mov
out
cmp
cli
ret
pop
scas
imul
push
fldl
lock
ror
std
popf
and
push
inc
out
push
add
add
call
pop
dec
aad
push
imull
xchg
add
rclb
add
push
mov
cmpsb
xchg
add
push
addb
lods
xor
add
fldcw
xorb
or
lea
sub
pop
rolb
dec
scas
addr16
dec
inc
mov
add
add
add
and
mov
push
inc
cwtl
cmp
popf
xchg
jns
xchg
push
jl
loop
nop
das
add
cmpsb
add
add
clc
inc
jb
sbb
fcoms
fsubs
shlb
cmpsl
lahf
add
ret
test
cld
loopne
pop
cmpl
es
mov
sub
push
push
popf
movl
sub
pop
clc
notb
stc
xchg
inc
cmp
in
pop
mov
add
lcall
jg
ret
sbb
mov
and
lcall
or
sbb
mov
cli
popa
dec
add
add
fldl
xchg
dec
push
rclb
scas
sbb
cmp
fstpt
out
xor
add
data16
inc
push
jae
add
xor
add
mov
ret
mov
add
add
xchg
lods
add
mov
or
movsl
or
movsl
out
fisttps
jnp
out
jl
push
subl
mov
ret
add
test
cmp
sbb
cmpsl
movsb
mov
shll
add
inc
jo
push
out
scas
mov
sahf
rclb
adc
repz
and
test
scas
pop
mov
add
test
sbb
cli
push
cmp
add
adc
dec
and
aam
mov
add
stc
add
stc
cmc
cmp
sub
test
mov
sbb
popl
in
imul
sbb
ror
sub
jmp
sub
jb
mov
aam
int3
je
and
and
and
cs
out
hlt
dec
test
rolb
inc
xchg
aaa
cli
scas
and
add
add
xor
push
ror
mov
mov
ss
mov
or
arpl
out
adcl
inc
or
mov
dec
cld
mov
frstor
mov
adc
enter
add
fldl
or
jb
fsubs
ss
mov
push
sbb
hlt
test
aad
in
lret
or
xchg
imulb
cli
filds
sbb
add
imul
mov
add
add
ret
pop
mov
push
and
push
and
testb
cmpsb
int
cmpsl
ficoms
vcmpps
in
test
outsb
xor
sub
mov
dec
push
enter
adc
fiaddl
dec
add
mov
mov
jns
xorl
int3
mov
jle
push
mov
push
or
dec
jb
add
mov
add
bound
mov
cmp
scas
adc
ret
adc
mov
adc
adc
ljmp
add
add
xchg
xchg
add
rclb
cmp
add
and
mov
fsub
jns
mov
das
cs
xor
mov
inc
or
adcb
inc
pop
add
cld
add
sbb
mov
faddl
mov
es
xchg
add
push
mov
paddb
add
dec
and
xchg
in
add
jo
and
ret
fs
xchg
call
xchg
push
in
negb
xor
pusha
jne
mov
jle
pop
or
sub
and
add
insl
inc
xor
rcl
add
add
add
incl
jne
push
sub
rorl
pop
add
scas
popa
frndint
rolb
jno
fadd
enter
cmp
insl
mov
adc
mov
mov
jg
shrb
cltd
lock
push
xor
jmp
lds
or
mov
and
pop
ds
pop
add
call
outsb
repz
fld
lret
in
add
popf
mov
add
les
adc
inc
cwtl
mov
rorl
jae
add
xor
enter
repz
inc
cld
lahf
inc
enter
add
ja
jmp
cmp
test
inc
pop
aaa
mov
mov
pop
mov
in
pop
xchg
inc
or
in
mov
cmp
mov
mov
aad
add
xor
fdivs
push
stc
adc
add
pop
aaa
es
adc
scas
add
xchg
fisttps
add
xchg
and
add
cltd
push
xchg
push
and
xchg
int3
and
mov
and
sarl
push
mov
dec
clc
fwait
inc
xchg
es
push
imul
negl
pop
stos
adc
ret
call
hlt
add
repz
sarl
or
sbb
sbb
add
add
loope
sub
add
scas
add
dec
add
out
mov
fists
fxtract
add
int
je
imul
movb
repz
nop
and
xchg
mov
jge
xchg
push
jle
add
cpuid
pop
cvtpi2ps
incl
lahf
lock
or
dec
mov
in
xchg
sbb
mov
stos
insl
cmpb
scas
add
push
add
push
cmp
arpl
pushf
pop
ss
fiadds
repz
inc
icebp
add
je
imul
push
outsl
int3
push
fildll
sub
inc
xor
les
inc
incb
pop
dec
iret
aas
popf
add
jo
mov
add
xor
inc
or
push
jecxz
jg
data16
add
xor
xchg
sbb
js
loope
sub
or
push
dec
lods
and
popf
and
cmp
jns
xor
mov
xchg
in
fsubr
repnz
aas
mov
pop
rol
leave
repz
mov
sbb
pop
lcall
icebp
lret
add
cmp
test
es
rclb
add
add
in
loope
add
add
pop
cmpsl
das
jmp
mov
add
test
or
or
pop
mov
and
jmp
lods
add
add
outsb
pop
mov
sub
xor
aad
das
stos
aad
inc
sbb
mov
push
ds
xor
xor
das
xchg
pop
stos
push
dec
sbb
jle
adc
std
stos
cmpsb
cmc
xchg
daa
dec
and
mov
mov
adc
test
sbb
and
movsl
inc
fsubrs
xchg
ljmp
add
int3
addl
jg
cmpsl
xchg
pop
mov
iret
push
cwtl
enter
push
add
rorl
jno
sbb
bnd
leave
je
xchg
mov
add
add
sub
add
add
mov
add
inc
mov
in
mov
dec
push
adc
sbb
shlb
mov
lret
pop
push
std
or
xchg
xchg
dec
shlb
daa
leave
pcmpgtb
xchg
dec
xchg
cwtl
add
daa
mov
dec
lods
xchg
and
shrb
int
add
es
mov
mov
aaa
gs
std
cmp
int
dec
dec
cmp
add
mov
lods
pushf
out
outsb
add
cmp
jae
xchg
push
add
add
addl
cmp
xlat
jo
sub
loop
jle
jmp
jbe
roll
inc
cmp
addb
or
dec
repz
add
scas
jecxz
pop
fstp
push
sub
add
or
pop
or
dec
inc
lahf
jle
mov
lret
inc
pop
repnz
push
and
inc
movsl
push
mov
scas
or
je
shl
add
jg
sub
cwtl
fildl
movsb
add
jae
or
loopne
xchg
add
data16
sbb
arpl
xor
push
add
add
mov
fnstsw
mov
mov
arpl
or
roll
pop
jns
idivl
push
roll
jnp
pushf
pop
add
jbe
jp
add
jb
out
add
inc
ljmp
insb
jecxz
cs
out
push
xchg
push
sbb
movsb
int
cmpsb
mov
jmp
and
adc
cmp
sbb
clc
loop
inc
add
push
imul
push
sub
and
xor
jge
rcr
cmp
dec
enter
jbe
jg
push
add
test
leave
inc
loopne
outsb
or
add
test
dec
rolb
adc
xlat
cmp
in
mov
pop
add
add
push
sub
je
sbb
or
adc
xor
addr16
mov
jae
imul
push
sbb
mov
push
lret
lds
add
imul
add
push
xchg
les
testl
jl
les
push
les
inc
iret
add
adc
or
jo
je
inc
adc
add
add
add
aaa
cmc
adc
jno
jp
fwait
pop
lret
sahf
ss
movsb
inc
add
push
push
popf
push
ret
add
loopne,pt
shrl
mov
add
cmc
cld
adc
jecxz
pop
and
movsl
jb
loopne
pop
arpl
and
cmpsb
add
insl
sbb
fstpl
imul
aas
pop
jne
add
sub
xchg
or
jne
add
add
inc
fdivl
stos
mov
push
add
loope
mov
filds
pusha
jmp
ret
push
scas
and
jmp
pop
push
jbe
bound
lret
mov
dec
fs
clc
in
jmp
mov
or
mov
cltd
dec
sbb
shlb
fcmovbe
fsubrl
and
in
add
cmp
jg
clc
add
add
mov
sbb
sti
push
test
out
popf
xor
rcrl
add
cmp
iret
add
dec
add
insl
cmp
shlb
fiaddl
and
add
insb
add
out
loop
pop
inc
add
add
mov
loopne
repnz
adcl
je
push
inc
add
insl
add
mov
jge
xchg
lret
inc
mov
or
stos
fnstsw
dec
cwtl
movsl
mov
add
sub
xchg
repnz
mov
aam
mov
out
mov
jl
mov
cltd
inc
adc
add
in
add
mov
mov
adc
and
and
stos
stos
clc
inc
cli
push
cmp
sbb
add
enter
adc
cmp
lods
add
out
adc
dec
jl
clc
sahf
xchg
lods
in
lds
incb
xchg
adc
inc
inc
xchg
mov
movsb
xor
adc
pop
call
or
xchg
add
inc
inc
stc
jbe
sbb
dec
sarb
add
call
aad
stos
push
lock
add
and
xchg
push
out
nop
jmp
in
mov
mov
pusha
push
mov
pop
arpl
popl
xchg
int3
mov
xchg
mov
adc
add
inc
fwait
push
add
pop
mov
test
in
dec
inc
test
cmp
cmp
add
sub
push
add
out
add
int3
js
stos
push
or
push
adc
mov
arpl
adc
push
sbb
or
pushf
inc
add
xchg
jmp
lret
add
lcall
add
pop
push
lret
and
xchg
nop
add
pusha
add
jbe
jp
fldt
and
add
jge
testb
cltd
cwtl
ds
repnz
lods
sahf
jp
add
les
cmp
xchg
out
cmpsb
test
mov
mov
popf
sub
rcr
add
push
or
add
push
push
pop
xchg
lods
and
ret
ror
mov
dec
in
inc
sbb
fildl
xlat
btc
mov
mov
imul
pop
sti
adc
fldt
pop
inc
cmp
bound
mov
or
xchg
fdivs
add
xchg
sahf
cli
mov
inc
sub
ffree
ret
push
stc
add
cwtl
sbb
or
pop
sub
add
outsl
or
add
jns
mov
fwait
movsl
je
sub
and
wbinvd
in
lods
insl
lds
add
inc
ret
add
rclb
pop
jbe
fwait
lods
dec
add
hlt
leave
adc
adc
shrb
sub
fldlg2
arpl
or
fptan
add
in
scas
or
or
add
and
pmulhw
jo
faddl
inc
pop
test
cmpl
sbb
mov
mov
jmp
add
add
nop
or
andb
add
lret
add
sbb
lods
mov
test
push
jbe
mov
test
mov
fwait
shl
add
mov
mov
cmp
in
mov
sbb
mov
inc
pop
popa
fwait
ds
xchg
xor
lcall
pop
or
lahf
in
cmp
shll
mov
xchg
cmc
cmp
add
mov
cmp
xlat
leave
dec
push
pop
adc
popf
sti
cmp
jl
pop
sbb
add
lods
lds
adc
leave
aad
push
add
inc
adc
enter
out
and
int
mov
pop
push
xor
sub
push
add
sbb
out
jae
mov
push
mov
mov
add
pop
add
adc
leave
push
cmp
fwait
sbb
fwait
xchg
add
testl
cltd
add
jecxz
aad
add
add
add
insb
aam
div
sahf
out
jmp
cmp
sahf
fdivl
add
sbb
xor
mov
mov
add
dec
or
icebp
icebp
add
pop
jno
cmpsb
mov
mov
bound
imul
pop
and
es
pop
das
loope
push
and
fisttpl
xchg
sti
mov
test
cmovp
add
lods
add
dec
cmc
mov
add
add
jbe
bound
add
mov
lods
dec
jbe
in
adc
xchg
fwait
jo
add
insl
nop
pop
jmp
lock
mov
sarl
sbb
and
out
and
ljmp
pop
mov
insl
xchg
or
not
or
lods
out
jmp
mov
sub
lods
cmp
xchg
sub
add
xor
fildll
mov
xor
call
xchg
or
outsb
bound
add
push
mov
jae
push
das
mov
add
insb
inc
add
mov
add
push
in
gs
rcrb
push
dec
add
fs
push
push
data16
and
repnz
call
cli
jno
lret
and
add
xchg
in
sbb
dec
adc
sbb
test
outsb
test
mov
aas
sub
push
out
mov
sbb
and
adc
cmp
inc
or
jnp
out
es
scas
mov
in
movsb
add
push
mov
lea
cmovbe
rorl
sahf
mov
loope
mov
sbb
add
add
sub
pop
mov
add
push
stos
adc
inc
cwtl
add
xchg
out
lret
add
outsb
pop
push
jge
dec
xor
in
es
in
pop
and
dec
nopl
pop
fmull
lcall
shlb
hlt
or
ja
add
jecxz
add
push
jne
push
dec
inc
lret
cmpb
dec
jb
pushf
enter
outsl
push
push
lods
jno
or
mov
fwait
add
test
adc
jp
lret
push
mov
mov
fwait
dec
push
and
push
loope
pop
insl
cmp
dec
adc
iret
lock
mov
and
scas
jmp
pop
add
into
leave
mov
sarb
pop
push
dec
stos
mulb
push
add
add
add
popa
loopne
enter
pop
in
jo
stos
add
cmpsb
test
add
cmp
jae
sbb
sbb
inc
add
imul
mov
cltd
add
push
imul
mov
notb
lods
or
jle
addl
add
xchg
mov
mov
lcall
lcall
fsubp
fildl
mov
mov
dec
fwait
add
movsl
cmp
aad
and
add
test
sbbb
lods
mov
pop
mov
cmpsb
popa
cmpl
aad
dec
lret
inc
call
push
mov
xchg
mov
mov
stc
push
add
push
sbb
inc
mov
aam
nop
and
adc
mov
call
cmpsb
outsb
repz
sub
mov
out
cmp
dec
mov
add
mov
imul
adc
int3
inc
jae
xor
not
cld
inc
sbb
sbb
jo
scas
add
dec
cmp
pop
insl
js
mull
adc
pop
je
ret
insb
sti
mov
inc
mov
add
sar
mov
xchg
sbbl
shrl
stos
jl
pushf
mov
mov
add
into
into
add
outsb
aaa
cld
dec
in
push
in
sub
roll
test
inc
dec
pushw
out
fwait
xchg
sarb
repnz
inc
pop
popf
xor
adc
push
ret
sbb
sub
cmp
push
call
push
out
shrb
inc
push
mov
lret
sbb
sub
add
lock
lea
in
or
inc
pop
lock
push
fsubr
inc
stos
sbb
rorb
decl
mov
std
cmc
sbb
sub
addb
ret
in
adc
and
out
adc
repz
xor
xchg
mov
or
adc
repz
push
cmc
out
mov
add
push
stc
roll
mov
pop
xchg
jb
push
add
aas
add
xor
and
add
ljmp
xchg
inc
pop
mov
arpl
ret
jmp
mov
inc
aaa
cmp
movsb
jae
out
add
xchg
xor
add
add
jmpw
pop
out
sbb
xor
stos
subl
push
adc
jae
push
enter
dec
movsl
pop
cmc
aaa
dec
outsb
push
lea
popf
sbbb
leave
in
pop
call
sub
dec
add
fs
or
scas
fucomi
lock
add
add
mov
mov
out
pop
ss
cmp
jne
jbe
filds
dec
push
mov
xchg
out
mov
in
roll
adc
xor
pop
pop
xchg
aad
int
add
icebp
add
arpl
or
fdivrl
jmp
sbb
bound
cmp
sbb
add
push
sub
movsb
daa
jg
add
andl
push
cmc
push
adc
jge
dec
and
js
add
push
or
sbb
xchg
sub
or
test
js
or
xor
fldl
lods
add
repnz
sub
test
cmp
adc
jecxz
dec
int3
lcall
rcr
xor
ltr
cli
stos
jmp
sbb
gs
xchg
cmpsl
jp
jbe
data16
mov
fidivl
addr16
sti
cmp
in
push
or
add
add
xor
insb
mov
mov
and
jnp
mov
adc
push
add
mov
addr16
ja
mull
add
sbb
jns
mov
cwtl
add
jb
aas
jp
add
push
jle
test
mov
pop
fs
std
add
popf
andl
out
sbb
and
add
pop
mov
fsubs
or
push
add
adc
fsts
mov
dec
cli
mov
fdiv
in
sub
adc
push
xchg
push
cmp
add
jmp
ret
idiv
or
loop
pop
imul
mov
sahf
ror
das
mov
inc
sub
push
dec
jle
cmpsl
add
insl
add
hlt
sub
dec
roll
pop
fbstp
pushf
push
push
aam
test
add
push
add
add
shl
scas
mov
add
roll
mov
iret
xchg
add
fdivr
daa
add
jge
add
call
xchg
sbb
xchg
inc
jnp
pop
cmp
pop
xlat
fistl
negb
add
sbb
mov
sub
push
repnz
add
xchg
addb
mov
add
sahf
stc
sti
sub
add
mov
test
inc
xchg
sub
sbb
popa
mov
dec
add
mov
pop
cmp
and
ret
and
repnz
add
add
mov
cld
or
popa
outsl
mov
sub
into
inc
and
sti
imul
jp
aaa
cmpsb
mov
add
jge
jne
jmp
lods
mov
pop
xchg
and
mov
add
and
add
add
add
dec
imul
ret
jae
movsb
push
and
or
test
fistpl
jmp
call
inc
lods
insb
push
push
xchg
or
mov
ds
insb
cmpsb
enter
stos
scas
arpl
inc
jge
int
std
mov
lret
push
xlat
loope
jae
lcall
out
gs
mov
push
mov
add
mov
rcrl
je
add
lods
lds
dec
push
add
push
xchg
test
pop
int
cmp
push
or
ficoml
frstor
data16
test
sub
push
mov
xchg
and
xchg
cmp
aam
test
pop
push
dec
sti
or
mov
mov
pusha
outsl
jbe
inc
add
add
imul
add
add
jecxz
pop
mov
adc
or
push
push
add
ljmp
cmp
pop
lahf
lods
stc
out
push
or
cmp
loope
mov
push
cltd
dec
jmp
pusha
jle
mov
add
add
stc
scas
mov
mov
inc
dec
mov
test
add
push
shll
divps
push
cli
jns
cs
add
shll
dec
mov
sbb
fcoms
jmp
stos
xchg
sbb
arpl
outsb
push
fisubrl
and
jle
sub
dec
dec
pop
jge
mov
lret
movsl
sbb
dec
fsubr
and
sbb
std
es
std
pop
aad
jl
nop
adc
or
jecxz
sbb
push
mov
and
add
jecxz
cmp
popa
jnp
iret
clc
pop
or
inc
iret
add
fwait
sahf
add
cs
dec
xor
add
xchg
scas
add
jnp
fistl
cli
scas
aas
and
cld
nop
lahf
mulb
xchg
loop
jo
int
cmpb
jle
inc
es
adc
imul
jmp
test
negl
sbb
into
add
scas
push
stc
xorl
jecxz
je
and
dec
add
add
or
hlt
lret
pop
sarl
sbb
inc
lcall
add
jns
add
jle
in
loop
dec
add
imul
leave
push
aam
add
add
leave
add
cmp
int
jge
push
jg
fisttps
add
inc
lods
test
jnp
xor
jae
inc
add
sub
sub
loop
lds
lea
and
jbe
movsl
out
fdivrp
xchg
mov
clc
mov
xchg
or
in
mov
add
ss
push
push
xor
int3
add
add
sub
inc
mov
repnz
mov
mov
add
or
push
movsb
lods
xlat
add
add
inc
push
and
aaa
xchg
cmp
and
jp
mov
scas
pop
jns
cwtl
pop
ret
cmp
loope
add
dec
sarl
xor
adc
xor
mov
or
add
adcb
add
inc
outsl
or
xor
pop
bnd
push
cmp
dec
add
xchg
mov
jbe
loop
mov
add
pop
cmc
pop
jns
add
add
push
push
xor
jg
loope
imul
mov
shlb
ret
ret
xor
out
sbb
push
outsl
and
lods
add
test
mov
loop
mov
add
inc
add
insb
hlt
adc
mov
outsb
in
jb
sbb
or
lea
out
xchg
loop
fists
push
add
js
dec
xchg
sbb
testb
outsl
push
cmp
jbe
fninit
and
sub
iret
jns
aas
and
gs
adc
cmp
subb
in
popa
pop
xor
iret
mov
mov
jae
dec
out
call
incb
jl
mov
movsb
out
lods
sahf
sub
add
xor
mov
test
add
popf
mov
scas
push
sub
and
lcall
mov
xor
jg
daa
loop
add
fistpll
mov
lods
sti
sahf
testb
and
adc
add
mov
jle
outsb
jbe
adc
xchg
push
add
add
xchg
inc
jg
inc
add
in
add
mov
dec
sub
stc
jo
je
dec
xchg
add
cld
std
subl
and
fwait
dec
add
sub
jge
add
or
aas
add
sbb
scas
sub
fnstenv
sub
cmp
cmpsl
mov
scas
bound
ret
ror
jle
add
mov
lahf
add
orl
add
push
rolb
dec
add
cmpsb
add
add
sbb
pop
movsb
mov
xchg
daa
inc
add
imul
stc
jnp
mov
inc
push
jg
pop
cmp
cmp
add
data16
pop
mov
add
mov
popa
or
pusha
add
add
lds
add
sub
test
aam
pushf
loop
add
sbb
xchg
jecxz
push
add
daa
enter
mov
gs
cmp
xchg
testb
add
repz
dec
jo
xchg
add
rolb
call
xor
add
lahf
xchg
sahf
push
lahf
pusha
loope
stc
cmp
fstl
popa
addb
popl
fadds
pop
cmp
pushf
add
pop
outsl
push
and
mov
add
mov
pop
xchg
add
add
and
pop
rorb
add
in
cmp
push
nop
mov
mov
sahf
add
stos
cmp
loopne
xchg
add
test
mov
sbb
mov
jns
arpl
xor
adc
add
pop
ss
add
sub
push
jnp
or
nop
add
addr16
xor
cld
xor
add
pusha
aam
inc
ja
dec
cmp
mov
push
and
jl
dec
add
sti
cwtl
das
add
mov
test
adc
adc
push
or
sbb
cmp
imul
sub
ret
arpl
add
fs
cmc
fldt
sbb
es
cmpsl
iret
adc
test
imul
subb
lock
mov
lods
repnz
mov
mov
mov
mov
xchg
mov
push
push
aad
dec
add
push
cmp
out
popf
adc
ja
rcrb
add
adc
arpl
add
es
adc
jo
int
stc
pop
push
popa
add
sub
xchg
fadds
add
cltd
icebp
sbb
out
call
std
add
shlb
insl
cmp
add
rorl
pop
pushw
in
insl
or
mov
add
add
xor
sbb
xor
cltd
push
test
popf
fiaddl
out
out
add
and
cmpsl
fcomps
inc
xchg
push
cld
sub
sbb
sbb
push
shll
fs
add
or
in
movsb
in
inc
test
imul
test
dec
add
xchg
xor
cmp
sub
repnz
fdivrl
or
adc
mov
xchg
cld
scas
ret
cmp
insl
icebp
testb
dec
ret
mov
rcll
jae
outsl
add
mov
clc
cwtl
add
jbe
pop
pop
jnp
push
ret
add
add
add
pop
adc
scas
pop
adc
mov
mov
add
adc
repz
dec
ja
or
pop
addr16
popf
mov
sub
in
scas
mov
arpl
inc
add
dec
cmpsb
cltd
iret
pop
mov
in
dec
pop
sbb
add
movsb
arpl
jp
sub
pusha
fcomps
mov
cld
out
push
mov
push
dec
inc
aad
add
and
push
inc
cmp
dec
push
mov
fwait
pop
out
and
sbbl
mov
fcmovnbe
inc
rcrl
jp
jge
adcb
add
sbb
in
and
cmp
add
pop
or
ljmp
add
lcall
or
mov
jo
sbb
and
inc
add
cli
aam
jnp
add
jnp
jb
fwait
inc
inc
push
enter
icebp
inc
outsl
add
cli
sbb
add
sub
adc
stos
test
arpl
js
jb
push
fisubrl
test
or
rolb
or
push
stos
mov
adc
and
sbb
xlat
xlat
daa
in
lds
mov
mov
add
sub
ljmp
ljmp
push
pop
pop
sub
inc
cmp
add
and
fwait
add
roll
cmpsb
cs
add
dec
xchg
push
add
mov
in
fcomip
add
pop
insb
test
cmp
imul
adc
pop
xchg
add
outsb
pop
pop
mov
push
mov
or
jge
mov
pushf
insb
clc
inc
ja
and
add
push
mov
bound
add
and
shrl
popa
push
jno
mov
nop
dec
jle
fmulp
mov
jg
addr16
and
inc
scas
mov
sub
dec
add
add
in
sub
cmp
dec
xchg
aaa
sbb
inc
nop
mov
insl
inc
movsl
and
outsb
push
int3
cltd
inc
ret
xchg
add
ficoml
fcom
dec
js
rcr
jecxz
enter
add
daa
xlat
aas
addr16
outsl
stos
sbb
push
pop
daa
fistpll
int3
loopne
lahf
shll
imull
or
mov
xchg
ret
sbb
aam
cmpsl
cwtl
aas
imul
add
add
jp
push
imul
jmp
pop
or
add
jbe
inc
inc
stc
inc
ljmp
ljmp
push
xchg
adc
fstpt
jg
inc
js
add
add
enter
es
test
popf
add
add
jmp
dec
cmpl
adc
push
pop
mov
pop
jmp
xchg
sub
xor
mov
push
fwait
int
push
mov
pushf
pushaw
push
jns
mov
jno
mov
cmp
add
mov
jnp
stos
add
ret
push
ljmp
mov
ds
add
rep
jge
stos
imul
add
add
in
imul
stc
or
stos
ljmp
jecxz
jb
and
fwait
cld
adc
add
mov
test
jmp
cli
xchg
adc
jle
add
stc
lret
test
dec
call
lcall
sarb
sbb
and
pushf
cmc
ja
xchg
push
cmp
cmp
xchg
loope
mov
pop
mov
add
lret
testb
lcall
test
fstps
push
adc
push
cmpsb
sub
mov
mov
repnz
lods
jmp
inc
add
adc
sub
ror
pusha
jge
sbb
jno
stos
add
js
add
push
insl
popl
and
add
fsub
push
add
mov
jns
test
js
movsl
int
stos
inc
mov
mov
cld
push
popf
dec
das
inc
mov
add
sub
jg
pop
outsb
addl
adc
add
add
jp
and
sub
add
insl
nop
xchg
in
leave
xor
add
in
andb
ds
fadd
sub
loope
push
lods
repz
add
inc
xor
test
jne
inc
adc
xlat
sbb
jg
add
xor
pop
adc
jae
movsb
cwtl
repz
popl
mov
add
mov
mov
lret
cmpsl
or
mov
sar
sbb
jp
add
hlt
push
xor
mov
add
adc
pop
int3
arpl
lea
addr16
add
mov
mov
verw
add
ljmp
and
jbe
push
mov
movb
xor
in
iret
mov
scas
daa
inc
out
sub
add
out
cli
xchg
inc
outsb
jno
test
adc
cmpsl
sub
dec
add
push
test
sbb
adc
jne
out
test
inc
jl
pop
push
sbb
pushf
pop
add
xchg
or
pop
pop
mov
add
inc
push
negl
out
ljmp
sahf
add
cli
xchg
lahf
add
push
rorl
loopne
add
add
push
loope
push
add
jne
inc
add
or
inc
nop
cmp
cmp
sub
ret
or
sbb
pop
pop
cmp
pop
and
cwtl
add
xor
mov
push
add
xchg
mov
cmp
mov
je
popa
pop
add
mov
add
dec
push
mov
add
jge
fsubp
out
insb
inc
push
mov
dec
adc
jae
into
movsb
pop
xchg
fsub
adc
sbb
idivl
loopne
add
sahf
notb
fidivrs
ficoms
str
pop
scas
fistpll
movsl
jnp
es
sbb
add
fwait
add
bound
negl
mov
pop
add
push
repnz
jae
stos
and
push
push
xchg
sbb
add
pushf
or
icebp
inc
add
mov
add
adc
int
xchg
int3
fcomps
nop
or
add
mov
ja
xchg
xchg
clc
cltd
shlb
add
xchg
scas
or
mov
xchg
stc
sbb
pushf
stos
add
add
pop
dec
xchg
ret
cmp
inc
mov
fildl
sbb
mov
cli
mov
pop
and
daa
fiadds
rcll
orb
test
inc
inc
mov
cmpsl
adc
and
add
pop
push
mov
adc
mov
cltd
add
loope
add
inc
push
icebp
mov
xchg
ljmp
jle
mov
sahf
adc
ret
cli
add
ljmp
nop
add
or
sub
ljmp
jl
cmp
jne
xchg
xchg
xorb
jne
adc
cld
xchg
add
test
mov
cmpsl
les
shlb
stos
ret
shr
mov
xor
fstpt
xchg
pop
adc
pop
mov
sbb
lcall
sub
mov
jne
insl
into
xchg
or
int
jno
mov
and
sahf
jg
imul
xlat
mov
inc
int
add
inc
nop
sti
adc
adc
test
jge
das
fadds
call
hlt
cmc
mov
addr16
mov
fiaddl
add
xchg
cmpsl
adc
mov
adc
pop
mov
inc
lahf
scas
add
aad
pop
add
xor
icebp
add
add
test
push
test
mov
inc
sub
pop
dec
add
jns
push
sub
test
mov
outsl
xor
std
jge
xor
scas
mov
push
clc
pusha
mov
ja
jnp
or
or
mov
push
fstpt
sbb
jp
insl
add
and
loopne
jbe
lea
or
sbb
fsubl
je
pop
inc
sbb
cmpsb
sub
test
mov
add
push
or
pop
mov
lods
jle
insb
lea
lret
inc
jno
jg
cmp
sub
lret
cmp
lods
jp,pt
aas
leave
ret
cmp
pop
hlt
fiaddl
jp
add
ficoms
dec
shlb
iret
xor
iret
jbe
scas
xor
mov
stc
and
sub
add
mov
mov
mov
and
pop
jno
push
arpl
xchg
mov
mov
es
adc
jo
leave
insl
add
mov
mov
cwtl
jne
push
cld
jnp
inc
cmovae
js
add
add
add
jp
fsubl
pusha
inc
dec
or
add
cmp
inc
mov
cwtl
shl
inc
jo
dec
mov
inc
aad
movsl
lods
fidivrs
add
fcompl
push
add
pop
out
cmpsl
test
pop
push
inc
sbb
add
xor
and
add
sahf
mov
movsb
xchg
push
cs
cmpsl
adc
or
sbb
cmp
jnp
arpl
movsb
mov
incl
add
mov
mov
cmpb
sbb
inc
mov
add
shrd
xor
inc
clc
push
xchg
ljmp
dec
mov
int3
popf
stos
add
jbe
mov
into
inc
cli
cmp
mov
mov
mov
jae
mov
orl
xchg
lds
inc
sahf
repnz
inc
sub
push
and
adc
xchg
jge
xchg
mov
add
and
sub
mov
mov
inc
push
sub
stos
add
cmpsb
in
mov
in
insl
xlat
sub
lods
add
sbb
test
push
rolb
lds
add
adc
aad
inc
inc
add
daa
lods
loopne
and
add
cmp
mov
adcl
add
push
xchg
insb
cs
sbb
push
and
add
mov
dec
add
sysret
jb
cwtl
add
je
ja
shrb
ficoml
sbb
dec
dec
cmp
cld
int
test
fsubs
gs
stos
add
call
mov
sub
add
sub
add
push
flds
movsb
jns
adc
in
jo
out
rolb
mov
inc
fnstsw
add
ds
mov
mov
mov
popa
mov
dec
xchg
xchg
fs
cld
cld
xlat
push
add
push
push
cmp
scas
lret
mov
jae
xlat
jmp
cltd
out
sub
lret
lds
add
cltd
add
shrl
push
out
leave
ret
pop
add
add
cltd
lret
xchg
addr16
or
out
add
loop
add
stos
mov
clc
sub
lret
leave
xor
add
push
cwtl
dec
hlt
sub
jno
add
fildll
push
test
movsl
push
xchg
pusha
pop
out
addb
mov
iret
cmpsb
stos
pop
add
add
iret
pop
lahf
dec
add
xchg
test
add
add
cmp
xchg
pop
add
negb
aaa
test
xchg
arpl
jle
outsb
inc
add
add
arpl
xchg
add
xor
inc
sub
dec
jmp
add
add
xchg
xor
inc
sub
in
cwtl
push
pop
xchg
test
rorl
ljmp
adc
mov
and
sbb
mov
cmp
xchg
aad
movsb
push
dec
dec
lea
add
mov
xchg
lahf
mov
in
iret
add
mov
arpl
leave
lret
add
mov
addb
add
jo
call
jp
imul
jns
loopne
add
dec
enter
movsl
add
pop
dec
insl
cmp
jnp
gs
aas
add
or
dec
mov
int3
add
out
cmp
jmp
cmc
jns
add
add
iret
scas
add
sarb
cltd
mov
mov
iret
leave
pushf
add
lods
push
cmpsb
mov
int
outsb
addb
negl
push
fbstp
popf
or
xor
push
out
ret
dec
pop
mov
sbb
movsb
call
sub
std
mov
sbb
je
sub
add
cmp
je
cmp
repz
popa
mov
xchg
sub
js
mov
mov
or
pushf
add
xor
jo
aad
dec
adc
add
fmul
add
pop
test
imul
add
add
incl
dec
add
sub
ljmp
psraw
pop
sahf
out
leave
ficoms
jge
sbb
in
jmp
and
push
dec
cmp
xchg
lret
imul
jecxz
push
and
scas
mov
add
ljmp
test
push
clc
add
add
add
int3
lcall
rolb
enter
mov
pop
push
jbe
es
adc
inc
xchg
cmp
sub
add
or
jbe
push
test
dec
inc
out
enter
add
daa
cmpsl
popa
outsl
add
xchg
pop
adc
add
add
mov
or
push
jb
inc
jge
add
ror
push
hlt
and
ret
add
ret
lcall
hlt
dec
add
push
ljmp
mov
pop
inc
add
adcb
cli
lret
and
add
fidivrl
nop
add
or
add
add
mov
iret
or
fistl
add
add
fadd
cmpsb
fwait
add
mov
sbb
jp
adc
or
scas
add
scas
aas
pop
rclb
dec
add
add
xchg
roll
or
pusha
cli
cmp
pop
fsts
imul
dec
mov
xchg
nop
cld
add
sub
cltd
cli
sbb
jne
lea
inc
mov
dec
or
popf
push
pop
scas
int3
imul
push
test
ret
xor
add
mov
test
lods
pop
cmpsb
fimull
sub
add
je
push
mov
repz
adc
xchg
inc
push
hlt
clc
ds
add
inc
mov
add
and
cmpsl
test
sub
push
add
sahf
xor
dec
add
xchg
xlat
and
lods
inc
iret
adc
dec
sti
insl
push
in
add
mov
push
add
dec
test
scas
mov
daa
test
and
push
xchg
mov
gs
dec
in
test
ret
fcompl
shr
imul
pusha
out
ss
inc
mov
and
imul
pop
dec
aad
in
cmp
and
rcrl
test
xor
repnz
fs
mov
mov
mov
push
sub
or
inc
add
mov
add
push
dec
fwait
sub
lcall
sbb
or
leave
inc
js
shlb
add
add
pop
xchg
shl
pop
jl
popa
and
add
sub
aas
ds
int3
cmp
dec
dec
out
jne
push
fstpl
jle
xchg
andb
test
test
xchg
nop
js
xchg
pop
jbe
test
rol
cmp
sbb
bound
xor
sub
add
add
nop
push
add
in
add
add
jbe
test
pusha
cmp
push
pop
cmc
add
cmp
or
dec
dec
outsb
nop
clc
aas
imulb
pop
add
ds
stos
and
shrl
add
sub
aaa
fdivr
add
jne
add
sub
add
adc
add
inc
idiv
dec
adc
mov
das
jle
dec
add
int
popa
adcl
add
add
inc
jae
data16
cld
loop
push
testl
mov
xchg
jno
dec
mov
cmc
jg
push
mov
mov
ja
lods
outsl
cmpsb
mov
or
negb
into
popf
leave
push
cmpsl
jnp
mov
push
mov
out
xchg
push
jne
fimuls
stc
mov
insb
faddl
mov
movsb
ss
mov
lods
push
xor
add
aad
cmp
cmp
add
ds
ss
jae
ret
pop
add
stc
cs
xchg
mov
loop
add
and
mov
xor
jle
movsl
out
add
xchg
pop
add
imul
xchg
add
jno
jmp
call
push
mov
pop
aad
insb
test
loope
and
lcall
push
add
jno
add
mov
subl
fiadds
inc
or
mov
pop
rcrb
jno
sbb
mov
mov
add
nop
jno
jnp
add
insb
sbb
shlb
mov
js
mov
push
pusha
jae
and
mov
mov
add
and
mov
xor
pop
jnp
xor
shll
outsb
add
xor
and
ficomps
inc
mov
sub
push
mov
xor
mov
popf
insb
xor
popf
pop
sub
iret
dec
add
add
mov
cmpsl
add
mov
add
and
add
insb
imul
inc
push
add
cmp
lret
inc
add
cwtl
loopne
in
pop
ds
in
push
in
push
imul
lcall
sub
loope
add
jp
inc
out
inc
add
mov
adc
sub
add
punpckldq
pop
outsl
mov
out
dec
je
and
jae
das
in
in
in
push
jnp
inc
sbb
mov
pusha
mov
xchg
mov
pop
xchg
lcall
and
rol
add
push
cmp
pop
add
sub
xchg
out
in
dec
aam
jmp
arpl
lret
add
mov
mov
mov
cwtl
lock
add
ja
sbb
in
data16
jo
loop
movl
lods
add
popl
movsl
pop
xor
and
mov
out
pop
daa
xchg
sbb
add
loop
icebp
cmp
inc
jle
mov
test
add
jne
mov
or
std
push
mov
xor
mov
jo
inc
subb
dec
push
and
add
xchg
add
cmp
push
sbbl
inc
cli
push
pop
test
aad
cli
mov
or
xchg
add
int3
add
ret
push
incb
imul
xor
ljmp
sbb
jb
xor
add
call
pop
call
mov
cmp
mov
push
or
add
push
sahf
pop
mov
dec
fmulp
add
out
inc
cmp
jae
pop
scas
add
add
es
push
push
test
dec
insb
popa
js
fstp
pop
cli
out
mov
fxch
cs
out
movsl
push
pop
mov
jae
push
add
jp
in
add
andb
std
add
test
hlt
shlb
push
loop
nop
scas
xor
enter
add
pusha
lods
xor
jmp
and
ja
out
pop
testl
add
out
push
lock
mov
mov
les
mov
add
inc
std
mov
stos
pop
inc
stc
add
cmp
movsl
jb
mov
mov
jns
insl
jns
and
lods
mov
loope
or
inc
int
loop
sbb
fnsave
add
fcompl
fldl
cmpsl
nop
or
and
sub
roll
jmp
cmp
xchg
sbb
std
push
cmpsl
fdivrs
shl
data16
add
adc
sub
sbb
js
nop
movsl
mov
dec
shr
inc
push
sub
mov
mov
testb
addr16
inc
daa
add
xchg
fadds
sub
inc
lahf
retw
add
add
add
add
popf
insl
sub
cmp
movsb
sbb
or
ficoml
das
add
dec
cmp
sbb
test
sub
sub
push
add
lcall
xchg
add
push
loopne
adc
jae
lret
jecxz
push
inc
rolb
iret
and
mov
aaa
std
add
test
sub
add
mov
sbb
and
clc
cmp
lret
push
sbb
xor
xorb
mov
push
push
enter
inc
push
popa
xchg
sub
add
mov
add
jbe
mov
fldl2e
out
ret
push
js
sub
inc
int
insb
shr
add
xchg
push
jmp
movsl
mov
add
scas
mov
mov
std
sahf
popa
pop
lret
and
pop
cmp
inc
outsl
lcall
aam
xchg
stos
mov
imul
lods
add
sahf
ljmp
pop
inc
push
lds
pop
cmpsl
icebp
lahf
mov
fdiv
pop
push
adc
das
cmp
arpl
mov
subl
jg
dec
push
add
add
inc
lods
pop
out
mov
or
mov
das
cmp
add
pop
fcomip
mov
adc
pop
fwait
add
iret
std
or
loopne
std
add
in
lds
enter
stos
add
pop
dec
add
cltd
adc
add
mov
nop/reserved
inc
xor
daa
sbb
into
mov
ret
out
stos
cld
fwait
and
adc
enter
sub
add
xor
adc
sahf
roll
je
mov
lahf
add
mov
or
repz
push
mov
es
push
loope
data16
xor
add
scas
jp
jmp
not
pop
sbb
dec
popf
movsb
inc
aas
sbb
pop
orl
cs
lahf
insb
icebp
mov
xor
pusha
lahf
xor
loop
daa
pop
cld
push
dec
add
pusha
jno
push
add
xlat
in
sub
ror
add
movsl
inc
jg
data16
in
push
mov
loope
lret
sub
mov
fwait
lock
add
add
aaa
and
add
xchg
add
aad
imul
push
and
and
add
mov
add
ljmp
jge
push
sub
xchg
inc
ljmp
jns
fwait
xchg
cltd
clc
ds
sub
negb
loopne
clc
add
sub
aam
movsl
xor
popa
xor
sub
add
nop
imulb
add
adc
xchg
dec
jo
and
add
mov
adc
dec
fbld
int
cmp
pusha
pop
add
jno
sub
add
push
or
push
bnd
xor
cmp
ret
mov
scas
add
sub
mov
test
add
add
mov
dec
testb
add
inc
mov
outsl
xchg
pop
addr16
xor
fs
push
add
mov
out
mov
push
adc
mov
pop
add
movsb
fnstenv
mov
inc
xchg
xchg
xchg
ljmp
ja
jo
lea
mov
inc
push
add
add
cld
ljmp
cmp
ja
cmp
add
add
sti
add
xor
pop
dec
mov
lahf
add
sub
in
mov
jmp
ret
pop
sbb
cld
test
cmp
and
add
adc
xchg
data16
mov
in
enter
add
add
add
and
rolb
subl
lahf
mov
adcb
mov
mov
ds
inc
push
sbb
and
loopne
xor
inc
push
inc
add
call
je
ret
sbb
pop
sub
sbb
dec
scas
mov
add
leave
scas
repz
loop
jmp
inc
xchg
jo
add
push
arpl
mov
sti
fnstsw
add
jnp
ja
add
push
pop
xor
lods
stos
xlat
dec
mov
inc
mov
sub
cli
ja
jmp
lcall
int3
add
mov
adc
loop
sbbb
xlat
add
je
out
push
das
add
push
add
or
cmp
mov
arpl
jecxz
subl
mov
add
add
fidivrl
add
and
cmp
jge
pop
add
dec
add
div
pop
arpl
sti
add
or
sbbl
mov
lret
test
adc
add
out
dec
xchg
cmp
ljmp
rcrb
movsl
add
add
pop
xchg
mov
dec
and
xchg
mov
in
sbb
mov
add
pop
add
sub
add
and
add
fstpl
push
add
and
lea
push
pop
mov
mov
insl
push
enter
mov
sbb
fisubs
add
mov
pop
je
shr
je
aas
mov
jb
add
lock
add
push
sahf
dec
push
add
outsl
dec
inc
add
jl
add
pusha
xor
scas
pop
adc
dec
mov
add
stc
inc
mov
add
cmp
xchg
jp
push
push
add
fidivs
push
xchg
leave
dec
add
pop
data16
mov
mov
lds
xor
add
dec
jp
addr16
add
pop
fdivs
insb
std
out
xor
jge
mov
dec
push
int3
add
insb
cmp
add
ss
lock
dec
jecxz
add
push
cmp
pop
mov
or
dec
add
ja
add
test
sbb
cmp
and
push
cmpsb
fcompl
or
ljmp
xchg
inc
in
jmp
repz
lods
cmp
jb
lret
lds
add
dec
sbb
adcb
jno
add
adc
sbb
pop
rcrl
push
daa
out
iret
fmul
lock
push
add
add
cltd
push
rcrl
dec
mov
ss
lahf
add
stos
mov
divl
xor
add
pop
jge
cmpsl
addb
sbb
insl
push
cs
addb
add
roll
lret
and
cltd
add
cmp
mov
or
mov
xor
subb
dec
fmuls
int
filds
sub
adcl
cmpsl
pop
or
push
add
mov
add
xchg
in
shrl
add
pusha
xor
sbb
push
ljmp
dec
add
add
fs
or
inc
mov
ds
lcall
xchg
xchg
dec
sar
aad
adc
push
test
push
mov
jmp
jmp
xchg
insl
ret
repz
mov
stos
je
add
push
in
fbld
push
add
push
add
repz
jnp
cmp
stos
jp
pushf
push
add
or
std
jg
imul
sbb
daa
inc
popw
mov
xchg
dec
push
faddp
in
xchg
cmp
sub
data16
add
sbb
mov
jp
sbb
mov
xor
or
xchg
jge
mov
fnstcw
inc
xchg
insb
xchg
jns
adc
aam
push
and
pop
cmpsl
adc
stc
sar
add
cmpsb
adc
add
dec
add
jo
sbb
mov
lahf
int3
inc
sbb
sti
dec
add
mov
cwtl
bound
lahf
ljmp
mov
aaa
jae
call
cmpl
lods
rep
add
xor
cmp
jle
loope
jecxz
add
push
cmp
mov
add
sub
mov
aaa
shl
pop
pop
adc
jns
ljmp
dec
add
out
pop
mov
aas
test
insb
mov
xchg
and
arpl
sbb
and
sub
push
cmc
jge
scas
pop
and
shrl
sbb
inc
mov
xor
cmpsl
inc
xchg
repz
arpl
neg
sbb
int3
add
cmp
aam
cld
loopne
add
cmpsl
int3
push
lret
ror
inc
adc
stos
add
push
sbb
mov
add
adc
xor
lret
out
cmp
jbe
sahf
aas
out
add
or
dec
cmp
add
fildl
xor
jb
jmp
push
inc
aas
or
push
mov
or
or
inc
movb
cmp
push
call
lds
sub
add
add
out
add
mov
pop
xchg
push
in
add
mov
in
pop
sbb
push
ret
mov
sahf
lods
out
cmp
cmp
dec
or
lea
outsb
icebp
push
mov
clc
mov
test
xor
mov
addb
jno
insb
adc
jp
pop
addr16
cmpsl
cmpsl
xor
add
icebp
int
incl
mov
push
add
cmp
xchg
shll
int3
jmp
pop
push
out
fbld
mov
inc
fnstenv
mov
addr16
push
incb
movsl
lret
mov
add
or
pop
adc
mov
push
lret
push
iret
cs
ljmp
cmpsl
cmp
cmp
je
add
xor
hlt
mov
out
xchg
sub
nop
sub
and
pop
sbb
inc
lock
std
or
sub
daa
psubusb
cmp
stos
jo
add
arpl
sub
and
std
adc
cmpsb
sti
pop
int
test
inc
xchg
outsb
adc
sub
mov
add
inc
lock
das
loopne
ljmp
hlt
add
pop
pop
imul
add
imul
std
lret
jnp
mov
das
sbb
add
inc
ficompl
xchg
pop
add
fldl
xchg
inc
and
push
pusha
sbb
divl
add
js
lds
stos
incb
decl
jae
jnp
daa
mov
pop
mov
sub
jb
add
dec
mov
pop
pop
je
mov
icebp
pop
jne
add
xchg
jg
add
xor
push
inc
mov
dec
cld
adc
ret
fisubs
sub
leave
mov
and
cmp
add
add
xor
addl
adc
jge
dec
cmp
andl
mov
add
popa
rcr
jmp
pushf
add
mov
add
add
divl
jae
scas
add
std
mov
mov
add
fstpl
addb
movsl
inc
sbb
bound
adc
push
cmp
push
in
popa
movsb
ds
push
inc
aaa
sub
fstl
jbe
jb
scas
inc
inc
data16
leave
cmp
dec
sub
pop
cmp
sbb
test
shl
stc
aaa
inc
and
aam
mul
cld
in
inc
bound
in
loopne
add
in
mov
mov
lock
mov
add
or
inc
or
das
inc
add
insl
xchg
in
int
sbb
pop
insb
stos
cmpsb
dec
icebp
lock
loop
inc
add
jmp
or
iret
add
pusha
movsl
out
outsl
add
out
jmp
ret
add
test
and
ret
sbb
and
mov
or
pop
mov
leave
xchg
jecxz
mov
push
out
test
jl
sub
mov
mov
jmp
call
faddl
mov
lds
call
add
cmp
ds
or
jb
inc
loop
add
clc
fwait
pop
ret
fsubl
inc
add
ds
in
dec
lret
ret
ljmp
xor
sub
test
jns
or
outsb
add
fadds
out
jle
jne
sub
mov
mov
jne
mov
inc
add
xlat
and
add
or
fdivrs
add
cltd
dec
xchg
add
mov
add
clc
test
jae
xor
add
mov
xchg
pop
add
stos
add
dec
jle
add
out
inc
push
test
add
pop
cltd
push
adc
aad
sbb
mov
cld
add
or
lods
add
lds
das
add
int
fmull
mov
add
int
add
fucomi
fs
add
mov
or
jnp
lcall
push
or
jecxz
jbe
pop
stos
lods
ja
xchg
push
mov
bound
dec
mov
fstpl
ljmp
sub
cmovnp
sbb
lcall
in
add
push
icebp
adc
aad
mov
cmp
lret
add
jg
mov
test
xchg
mov
jge
push
inc
inc
fsubrl
insb
or
adc
push
sbb
pop
cs
repnz
cmp
notl
add
mov
cmpsb
push
daa
add
adc
mov
xor
jne
je
in
push
sub
mov
pop
idiv
pushf
repnz
fwait
cmc
les
shlb
bound
sbb
push
mov
add
push
subl
loopne
and
in
fsubr
aam
add
scas
lret
lahf
inc
mov
lods
out
cmp
bound
loopne
add
add
push
out
ret
dec
addl
add
cmp
inc
add
pmulhw
pop
cmp
movsb
js
mov
stos
sub
jecxz
stos
das
lods
js
mov
mov
add
loope
mov
add
fadds
cld
mov
jno
add
mov
inc
add
lahf
pop
call
rcl
dec
xchg
push
add
dec
xor
add
mov
int
fsubp
inc
cltd
addr16
jnp
outsb
mov
mov
cmp
loop
stos
add
inc
jmp
mov
add
out
faddl
pop
cmc
loopne
test
int3
mov
ljmp
mov
lret
fimull
mov
std
into
sub
out
sbb
std
add
in
and
cmp
lret
addr16
frstor
fwait
push
jp
add
lret
jo
add
data16
addr16
out
or
add
sub
xchg
fsubl
mov
movb
and
add
add
mov
cmp
out
jb
lds
pop
xchg
rcll
out
data16
jl
mov
add
sarl
add
std
pop
ds
mov
add
popl
scas
sbb
out
jg
push
pop
add
pop
or
pop
adc
jb
add
xchg
adc
iret
mov
or
jg
push
jae
mov
add
push
xchg
in
add
sbb
ret
add
add
and
lods
add
mov
add
sahf
push
sub
inc
mov
in
or
addb
test
mov
add
pop
add
push
xchg
mov
pop
or
add
out
xchg
or
loope
add
dec
in
push
jns
add
ret
jnp
mov
pop
jb
jl
ljmp
roll
rcll
adc
or
std
leave
outsb
stc
fidivl
aad
push
and
loopne
sbb
sbb
lea
push
pop
out
bound
push
xorb
cmp
xor
mov
mov
lahf
xor
add
add
adc
leave
mov
test
push
add
iret
push
sub
inc
jno
insl
inc
cmpb
sbb
push
pushf
xchg
flds
hlt
rorb
popf
jns
addl
call
lret
cld
jbe
xchg
cmpsb
test
add
mov
add
inc
inc
add
xchg
dec
sbb
adc
mov
cmp
adc
dec
mov
je
mov
jbe
xchg
into
mov
mov
out
test
fimuls
imul
aam
cmp
mov
add
adc
mov
movsl
lahf
lea
fwait
mov
je
int
lock
add
add
mov
popa
push
add
test
stos
addl
jp
mov
add
mov
mov
pop
add
out
mov
gs
push
fstpt
imul
shll
xchg
adc
add
add
insb
pop
lahf
mov
mov
or
push
jge
test
out
mov
outsb
outsl
sub
dec
int3
jmp
and
sub
aas
adc
cltd
mov
filds
push
jmp
stos
inc
mov
add
test
inc
adc
clc
popf
test
mov
lret
jge
jle
jnp
push
add
fistpl
pop
add
call
scas
pushf
fistps
fiaddl
dec
or
test
cs
mov
add
add
add
adc
addl
mov
fldl
cmpsl
arpl
cltd
pop
inc
add
test
inc
xchg
sub
xor
cmpsb
cmp
pop
sub
inc
js
sti
mov
jecxz
lcall
sbb
xor
call
add
add
add
popf
inc
sub
sbb
mov
icebp
mov
mov
jnp
inc
stc
add
add
jp
add
adc
push
cltd
aas
ljmp
sub
mov
out
add
imul
xlat
xchg
out
cmp
push
add
xchg
xor
pushf
rorl
pop
jne
jb
and
int
data16
mov
jmp
out
scas
mov
inc
sbb
lods
xorl
dec
rclb
loope
flds
adc
xor
mov
pop
or
add
dec
cmp
mov
add
push
or
sbb
roll
int
cmp
test
lret
jo
xlat
cli
xchg
nop
sbb
jns
fwait
lds
inc
enter
pop
dec
out
popf
add
movsb
add
clc
fsts
in
roll
mov
cmp
iret
sbb
add
xchg
shrl
iret
add
xor
mov
pop
or
rorl
fstpl
cld
inc
xchg
out
sub
ja
xchg
in
mov
mov
add
add
mov
sbb
inc
add
mov
push
pop
jmp
mov
add
xchg
movsl
dec
call
cmp
aad
popf
ficompl
push
push
adcb
ljmp
push
scas
loope
add
mov
sbb
inc
cmp
adc
fcmovne
shrb
inc
sub
inc
sahf
daa
lcall
adc
sahf
pop
imul
mov
push
and
inc
and
and
push
xchg
inc
lods
repnz
dec
sub
ret
mov
add
add
clc
add
fldl
xor
mov
add
push
lahf
das
lret
push
aam
push
add
cmp
pop
sahf
in
add
stc
into
daa
add
aaa
jnp
xor
adc
jle
mov
lds
cmp
lret
mov
pushf
js
in
jne
jle
insl
jae
hlt
cmpsb
pop
ss
andb
in
les
add
push
or
or
add
insl
rcrl
and
out
mov
lret
jns
insb
std
add
add
filds
push
add
dec
sbb
mov
xchg
xlat
add
lea
mov
add
pop
jl
fidivl
mov
add
fisubl
add
cmp
iret
xor
mov
sbb
fistpll
add
sub
mov
add
shl
mov
mov
imul
push
push
js
mov
push
pop
testb
dec
rcrb
lds
sub
add
adc
popl
dec
shrl
lahf
pop
cld
dec
adc
test
insl
xor
mov
cwtl
cmp
arpl
add
loope
fs
lods
cwtl
inc
adc
cmp
inc
inc
or
rcr
dec
mov
cwtl
cmp
add
in
loope
loopne
dec
mov
shrl
cmpsb
cmpsl
mov
add
add
stos
adc
jno
test
mov
sbbl
sarl
sbb
jo
jmp
cmp
add
adc
ret
js
pop
mov
add
pop
adc
add
jecxz
add
pop
int
cmp
add
nop
sbb
jo
sbb
adc
into
pop
js
cmp
and
hlt
adc
std
mov
out
sarl
mov
xchg
and
add
test
or
inc
sbb
out
jns
jmp
lods
xlat
ret
push
jg
movsb
and
add
mov
pop
ja
es
add
pop
testb
add
xor
popa
xchg
xchg
pop
loop
pop
test
add
inc
shl
jno
cmp
sub
iret
add
jl
insl
sub
xor
in
popa
aam
aam
mov
push
fiadds
lret
push
mov
lea
movsl
mov
mov
cmovb
xchg
les
aam
or
add
aad
push
add
jp
dec
dec
data16
lods
dec
or
jae
add
ror
dec
rcrb
bound
cmpsb
dec
add
test
cli
sub
add
fs
ficompl
push
cmp
add
xchg
shrb
add
xor
test
add
add
xor
add
dec
xchg
pushl
mov
imul
jo
push
std
and
cmp
outsl
add
mov
dec
cmpsb
add
arpl
das
adc
mov
imul
data16
add
ret
ds
xchg
dec
mov
fstpl
dec
aam
cmp
add
cmp
enter
in
add
push
xchg
clc
dec
or
and
sahf
add
std
fnstcw
mov
fisubrl
add
add
int3
xor
add
pop
mov
and
int3
push
decb
add
cltd
loopne
jae
jecxz
clc
movsb
inc
cltd
add
pop
xchg
notrack
push
dec
lret
add
mov
add
jle
int
test
sub
push
xchg
jae
inc
daa
push
je
lea
jecxz
mov
or
pusha
aam
repz
pop
add
imul
inc
add
cmp
cmp
inc
jge
rcl
jmp
lret
fiaddl
and
mov
cmpsb
add
pop
jg
mov
mov
roll
fldenv
xor
xor
inc
jne
pop
sbb
add
xor
and
sti
movsb
inc
scas
add
mov
sbb
rcr
jnp
sbb
mov
cmp
shrl
pop
lret
jmp
aad
jb
xchg
lea
es
adc
aam
pushf
aad
aas
xchg
push
movsb
mov
pop
loopne
push
dec
in
jbe
in
mov
fidivrs
pushf
sub
pop
nop
scas
add
sbb
fs
ds
insb
xchg
es
mov
or
add
in
add
test
testl
or
aas
mov
idivb
or
jp
decl
inc
jno
xchg
fnsave
aas
cs
scas
or
pop
sti
sbbl
add
add
adc
sarb
add
mov
adc
jo
mov
mov
call
cmpsl
add
int3
insb
dec
std
dec
add
sti
sub
outsl
add
add
inc
cmp
das
scas
or
orb
loopne
cmpsb
jnp
mov
lock
dec
sbb
jne
mov
pushf
push
aaa
daa
mov
inc
mov
sub
jmp
sub
sub
adc
sti
mov
popa
lahf
mov
cltd
push
jg
push
addr16
push
add
mov
mov
add
stc
imul
xchg
sub
testb
cs
sbbb
add
daa
lret
lret
sbb
mov
push
adc
push
sub
pusha
roll
arpl
ficomps
lods
loope,pt
add
ret
and
imul
add
ficompl
cmp
mov
outsb
nop
add
dec
add
xchg
adc
hlt
add
addr16
add
add
xchg
cmpsl
lea
cmpsl
dec
sub
adc
in
push
adc
movb
ret
mov
push
add
lock
add
inc
mov
pop
aad
xor
xchg
jo
mov
cmpsl
xchg
add
push
out
movsl
les
add
decb
arpl
aas
aaa
stos
popf
fisttps
js
and
add
jb
xor
add
bound
mov
dec
adc
jle
notb
mov
imul
xor
in
mov
mov
xchg
lds
sarb
and
lock
add
lret
mov
jbe
dec
jmp
std
mov
or
enter
loopne
add
add
sbb
jne
jo
add
cmp
cmpl
xor
aaa
push
outsb
add
pop
in
jae
pop
xchg
ficomps
popf
add
xor
push
jecxz
inc
inc
mov
push
add
jno
push
dec
lret
mov
out
scas
sub
add
ljmp
cmp
and
jp
add
je
out
add
xchg
pop
enter
loopne
imul
sub
cmp
fwait
lahf
dec
sub
push
add
inc
jmp
xlat
sbb
add
and
les
xchg
xlat
sbb
lock
ltr
out
adc
add
xor
mov
add
xchg
ja
mov
add
xchg
mov
mov
sbb
push
dec
in
xor
xchg
lcall
add
cld
pcmpgtb
cmp
pop
add
add
add
rcrl
cmpb
aaa
dec
ret
aas
adc
jo
inc
sub
adc
aam
add
sub
xor
cmp
cwtl
inc
sahf
and
addr16
bound
adc
mov
mov
push
xchg
jp
lods
pop
jne
mull
pop
cmc
adc
cmpsl
into
faddl
cmp
cmp
or
jo
push
das
lods
xor
jb
mov
add
push
aas
test
in
js
in
das
jo
inc
cmp
or
ficomps
stc
mov
lret
push
andl
push
ss
add
mov
jecxz
add
dec
jl
repnz
enter
sarl
adc
cmc
sub
cwtl
xor
repnz
or
add
lret
sub
fsubrs
add
ret
jno
pop
add
lret
cmpsb
jo
add
pop
or
add
fcmovu
add
repz
cmp
in
xor
idivl
in
dec
xchg
add
sbb
sbb
dec
add
sub
add
icebp
hlt
sbb
rcrl
pop
inc
js
and
pop
addl
rcrl
ja
or
hlt
xchg
push
clc
pop
aad
xchg
pop
mov
mov
xchg
adc
das
std
adc
inc
adc
mov
mov
sbb
add
push
push
push
inc
sbb
push
dec
jae
inc
lock
dec
xorb
sbb
sbb
ret
add
arpl
mov
out
add
out
lock
add
push
push
ret
add
insb
adc
scas
addr16
jbe
bnd
repz
add
add
mov
add
cmp
aas
and
pop
cmpsb
cmp
cmovs
imul
hlt
out
or
ret
xor
inc
cmp
sarl
xor
dec
jo
sub
xchg
add
sbbb
daa
jnp
sbb
lds
sbb
rol
add
add
scas
pop
imul
pop
jne
jnp
add
incb
push
mov
jg
ret
adc
dec
or
ret
lods
push
push
cmp
add
test
add
aaa
lods
add
xor
cmp
shrb
jmp
sbb
add
lods
pop
dec
mov
mov
cmp
fsubl
inc
cld
add
push
dec
inc
xor
bound
add
popa
and
push
add
not
aad
adc
pop
outsb
and
repnz
imul
shll
cwtl
out
xchg
in
xchg
imul
es
mov
cmpl
int3
divb
je
jnp
outsb
sbb
popl
xchg
push
or
jp
cwtl
and
xlat
adc
idivl
push
mov
insl
test
push
dec
add
sbb
jp
daa
test
js
lods
add
call
sbb
cld
stc
pop
or
xlat
push
push
xchg
or
jo
pop
xor
ret
divb
add
jmp
ficomps
push
cmpsb
into
orl
sar
out
sti
dec
push
dec
jbe
adc
add
es
add
push
or
test
sbb
mov
push
push
xor
add
ret
mov
out
add
add
mov
xor
xor
add
add
push
add
mov
mov
mov
push
jns
mov
inc
jae
inc
or
and
mov
cmpsl
adc
sub
mov
add
dec
fwait
clc
sahf
add
add
cmpb
or
add
sbb
sbb
lock
mov
flds
mov
sti
fmull
arpl
sub
mov
shlb
pop
xchg
popw
mov
sti
xchg
cmp
in
or
lods
add
rcr
sbb
xacquire
mov
lahf
sub
stos
mov
sti
add
pusha
add
jge
adc
fnstsw
fs
dec
cmp
loope
in
jge
cmp
mov
leave
add
and
mov
addl
push
and
jl
int3
mov
add
cwtl
mov
rorb
enter
mov
add
mov
sbbl
aaa
xor
add
and
aam
sbb
xchg
inc
negb
cmp
add
inc
pushf
mov
adc
mov
inc
jg
in
adc
and
mov
lods
xchg
pushf
iret
jle
push
rorl
jns
icebp
lret
add
push
jecxz
cmp
push
pop
inc
add
pop
push
and
jo
sbb
les
push
scas
lahf
in
sub
or
fdivl
ja
inc
fisttps
dec
adc
adc
xchg
xor
aas
add
aas
or
cmp
adc
rcrl
push
and
add
je
jno
add
int3
xor
push
or
cmp
into
fwait
push
lret
sbb
jmp
rolb
out
xor
inc
jg
shll
mov
dec
gs
popa
fdivrl
push
out
cltd
fldcw
xlat
stos
add
fldenv
add
dec
mov
mov
idiv
add
js
sub
push
sbb
xchg
or
aaa
jge
inc
call
shlb
sti
out
push
xor
into
cltd
pusha
shll
push
jno
sbb
add
mov
push
push
jnp
divb
shr
mov
int
lods
xacquire
stos
pop
fwait
add
cmpl
dec
jge
out
mov
callw
data16
add
add
insl
fsubrl
data16
add
add
xchg
cmpsl
add
lock
test
lret
mov
clc
aam
sub
dec
pop
add
jae
out
push
mov
hlt
aaa
xchg
sub
add
jle
add
jb
and
aaa
fsubrl
in
or
xchg
inc
jg
fadds
mov
add
inc
add
xchg
enter
icebp
add
mull
mov
cwtl
jmp
aad
popa
add
add
lock
jge
arpl
push
fwait
add
cmp
fiadds
mov
sahf
in
add
int3
jo
aas
movl
movsb
test
push
jno
jg
pop
mov
push
jns
int3
and
iret
in
cwtl
bound
sbb
xor
add
data16
repz
add
test
add
aad
add
cltd
add
adc
data16
push
movsl
push
push
aad
add
hlt
add
test
adc
in
stc
add
add
add
adc
dec
or
add
and
jno
mov
xlat
adc
out
sub
push
icebp
stos
sbb
loope
inc
sub
gs
add
aaa
add
sub
cmp
sbb
sub
inc
or
push
int
cmp
and
xor
cmpsl
xor
jl
lods
add
pop
cmp
mov
or
jb
jle
pop
in
xchg
aam
sub
aas
mov
lret
push
shll
fmull
rcll
in
cmpsb
mov
and
jo
es
add
and
fsubl
fs
add
cmp
pop
push
fdivrp
or
jne
dec
fsubs
sub
dec
dec
repnz
sub
sub
int3
jg
aaa
and
aaa
repnz
xchg
add
jl
add
adc
xchg
repz
andl
add
in
inc
xchg
add
insl
jbe
push
mov
mov
lcall
pop
push
sub
add
push
xchg
add
mov
add
mov
jp
add
insb
mov
pop
insb
xor
push
sti
add
pop
sub
pslld
fsts
and
xchg
add
insl
or
add
cmp
mov
ss
pop
movsl
mov
int
es
arpl
aam
test
mov
jmp
roll
fdivl
daa
lret
mov
add
sar
cltd
xchg
add
mov
lcall
cmp
xchg
add
ffreep
mov
lcall
sbb
in
je
test
popa
lods
stc
out
daa
mov
cmc
adc
xchg
arpl
arpl
xorl
add
mov
fs
mov
inc
mov
sub
add
mov
push
cmp
loope,pt
jo
mov
add
xchg
das
and
nop
fcomps
int3
mov
cli
cmp
add
std
aam
push
cmp
clc
loope
push
xchg
push
dec
stos
mov
aas
repz
fimull
add
dec
add
inc
cmp
adc
jns
shrb
cmp
add
pop
jb
inc
adc
add
mov
shl
fldt
add
aad
xorb
into
adc
inc
push
add
cmpsb
mov
insb
or
mov
mov
aas
stc
out
inc
and
and
jb
out
jg
add
stos
pop
or
add
dec
cmp
mov
into
mul
xchg
insb
out
dec
add
xor
jp
push
fistpll
cli
int3
js
shl
add
mov
icebp
in
out
in
mov
outsl
xor
clc
push
out
add
push
negl
rorb
mov
loope
mov
inc
add
sbb
mov
add
mov
cmp
cmpb
push
dec
gs
mov
or
add
jbe
fst
roll
xor
fdivl
push
movsb
dec
repz
je
or
outsl
add
inc
lods
sub
push
cwtl
fists
xchg
fistpll
lret
add
adc
jns
jnp
inc
sub
xchg
jbe
inc
xor
ja
bound
out
je
and
imul
add
loop
add
sub
mov
dec
push
mov
cmpsb
push
incb
mov
aad
movsl
push
mov
adc
lods
sbb
sub
lcall
leave
add
dec
inc
adc
cwtl
aaa
lods
std
pop
insl
cvttpd2dq
sbb
jae
loop
add
out
jo
inc
add
mov
mov
cld
cmpsb
inc
inc
repnz
push
cli
popa
cld
mov
pushf
in
in
js
popf
aas
addb
inc
mov
sub
push
add
push
out
imul
dec
sti
push
fwait
and
faddl
jl
fxch
add
push
add
add
mov
adc
mov
add
push
add
stos
ds
add
add
push
add
bound
adc
add
or
adc
lahf
dec
jnp
mov
repnz
xchg
dec
add
add
mov
push
jle
jnp
add
jns
and
aas
imul
xorb
inc
add
adc
test
and
lds
dec
mov
popf
addl
adc
and
sbb
loopne
pop
ds
mov
insl
les
std
add
flds
mov
popf
cs
mov
cmp
add
inc
sbb
xchg
ja
lods
into
mov
mov
and
addr16
js
mov
cs
mov
adc
add
pop
dec
cld
push
outsl
xlat
jnp
push
jg
movsb
add
shll
movsl
add
add
xor
xlat
lock
sbb
inc
mov
add
popf
add
sbbb
add
dec
scas
mov
arpl
dec
add
add
add
jecxz
add
sub
aad
mov
out
push
mov
out
add
lods
xchg
dec
xor
xchg
inc
rcrl
add
mov
sbb
fwait
idivl
xlat
lret
mov
jnp
int
xchg
sbb
cmp
push
les
cwtl
movsl
fwait
pop
leave
out
and
lods
xchg
sub
clc
push
call
pop
aam
add
fdivl
mov
add
sbb
in
sti
cmp
push
jb
sbb
stos
les
mov
add
aam
fidivrl
cmp
cld
sub
add
mov
push
dec
xchg
into
leave
sbb
sub
and
dec
in
xor
outsb
cmc
mov
mov
adc
dec
pop
push
filds
mov
inc
imul
movsl
jno
mov
lds
lret
leave
xchg
inc
or
inc
repz
xchg
cmc
add
and
sub
loopne
cmp
lret
sub
ret
jmp
add
or
mov
push
pop
add
add
faddl
add
add
fsubs
inc
or
mov
std
add
adc
sbb
mov
lahf
inc
lds
fisubrs
push
mov
add
add
rol
mov
push
scas
xchg
add
mov
pushf
and
adc
xor
add
fdivrl
push
and
js
push
ljmp
cmp
mov
cmp
or
lock
add
inc
adc
xor
aas
fs
add
add
lods
sti
add
add
push
je
test
mov
and
adc
add
test
jmp
in
add
lret
mov
pusha
outsb
inc
adc
out
cmpsl
push
push
stos
xor
mov
push
lea
sbb
aad
add
lods
inc
movsb
inc
xchg
cmp
or
jno
leave
cmp
and
add
add
mov
mov
or
mov
fs
cltd
pop
add
jb
mov
add
add
fstpl
inc
loope
add
jl
popa
add
jmp
adc
pop
mov
sbb
jne
lock
push
push
sbb
xchg
pop
dec
ja
jecxz
mov
psrld
push
test
cwtl
xor
roll
aaa
add
sub
scas
xor
imul
sub
rol
mov
dec
out
cmpsb
push
or
bound
add
lcall
or
inc
mov
xchg
pop
cs
cmp
cmpsb
sbb
in
ljmp
mov
push
add
addl
clc
add
icebp
add
jo
pop
mov
mov
bound
mov
xchg
xchg
testb
repnz
add
dec
mov
pop
hlt
push
lret
jmp
cmc
adcl
adc
adc
jl
aas
cwtl
cmpb
push
inc
aam
mov
mov
add
add
fsts
add
scas
mov
aas
push
push
cltd
mov
inc
lods
xchg
cltd
jle
ja
test
sahf
pop
pop
mov
add
and
add
cmpl
roll
add
pop
call
push
mov
ret
mov
fcoms
jge
shll
aas
scas
loop
cbtw
or
sub
jne
sbb
mov
iret
sti
or
xchg
sbb
jno
mov
sub
mov
or
out
mov
aam
adc
cmc
in
cmp
aaa
add
js
sub
sub
jbe
add
xchg
aaa
add
fnstcw
and
scas
pop
adc
jb
sub
or
gs
popf
mov
ja
adcb
mov
flds
js
sub
nop
mov
enter
pusha
stos
add
stc
jl
ds
cmp
movl
test
jo
fmul
jp
adc
imul
jmp
jnp
stos
sub
jp
add
cmp
xlat
and
sbb
pop
fiaddl
pop
jle
test
neg
or
lds
add
int
fdivs
add
hlt
lds
sbb
lock
lods
jo
flds
pop
sti
push
jo
fimull
add
in
add
pusha
dec
enter
sub
add
and
add
inc
ss
movsl
cmp
xchg
add
xchg
jb
mov
push
add
pop
pop
add
adc
add
sbb
fsubrs
xchg
ds
jb
les
loop
lret
bound
inc
sub
jp
in
jns
add
xchg
adc
dec
mov
xlat
lds
add
sub
int3
add
aad
add
add
shlb
int3
sub
xchg
xor
incw
cmp
and
mov
cmp
add
movsb
push
add
andl
movsb
mov
and
jle
aas
int
sbb
arpl
sbb
sub
lock
mov
imul
mov
loope
sub
into
test
cmp
imul
xchg
add
adc
inc
xor
jecxz
push
in
divb
das
push
mov
dec
imul
inc
push
cmpsl
shl
cld
push
add
js
fwait
enter
add
fwait
add
ret
jle
stos
jne
jbe
mov
call
sub
jae
out
cmp
loopne
repz
mov
mov
dec
pop
std
push
sbb
pushf
push
lahf
xor
in
movsl
out
mov
andb
add
icebp
out
add
xor
or
in
mov
inc
push
movsb
int3
dec
add
mov
mov
sarb
mov
dec
dec
data16
push
lcall
cmp
jp
rorl
inc
pop
jp
loope
lret
add
cmpsb
jmp
sbb
push
sub
add
fldt
mov
outsb
insb
lods
add
sub
add
add
loope
pop
add
add
arpl
stc
lods
inc
add
xor
or
icebp
sti
jns
and
adc
add
pop
mov
push
dec
rolb
cmpsb
aas
or
xorl
clc
ret
sub
push
add
ss
adc
cmpsl
jl
add
jno
in
adc
jne
add
cmp
dec
cs
imul
add
push
sahf
movsb
jge
xchg
jns
inc
jne
pop
aad
and
mov
mov
scas
lret
mov
xchg
inc
jb
mov
add
pop
add
pushf
adc
and
push
cmpsl
imul
or
add
dec
addb
pop
fyl2xp1
add
xchg
mov
sahf
mov
xchg
icebp
adc
fstps
xchg
das
test
add
add
pop
test
jne
and
push
fwait
movsb
mov
xchg
jp
popa
lock
fiaddl
sbb
movsl
fcmovb
jns
out
add
mov
inc
fabs
out
add
jno
testl
out
ja
cmc
fwait
lret
pusha
push
ret
xchg
mov
dec
or
push
cmpsb
push
call
out
xchg
lds
and
sbbl
clc
sbb
sbb
loop
in
nop
push
incl
inc
push
or
test
add
cmp
pop
cmc
fadds
sti
inc
add
pop
mov
jo
push
jmp
lods
mov
pop
add
sti
mov
sbb
incl
xor
pusha
sbb
sub
inc
fs
cmp
add
inc
or
add
add
add
add
inc
add
xchg
in
in
je
xchg
cmp
aad
mov
dec
xchg
aam
in
push
pop
bound
mov
popl
add
leave
and
xor
mov
jae
dec
pop
jo
add
sbb
or
imull
jbe
pop
ja
cld
jp
mov
add
out
fiaddl
xchg
mov
or
fmul
adc
sbb
cmp
or
iret
add
pop
jp
outsl
imul
mov
ljmp
adc
add
iret
lock
aad
mov
jecxz
into
add
or
mov
mov
push
loop
jecxz
fucom
mov
mov
adc
adc
jne
popl
sahf
lahf
adc
pop
testl
mov
in
inc
adc
ljmp
add
cmp
mov
in
adc
aad
add
xor
jp
div
nop
fisttpll
mov
adc
pop
adc
add
jb
jle
out
shlb
adc
ljmp
roll
cs
pop
add
add
dec
std
pop
int3
sub
mov
mov
xchg
xchg
repnz
sub
dec
pop
lret
push
call
inc
mov
jbe
cltd
lcall
neg
xchg
mov
das
add
dec
xchg
enter
push
bound
cmp
and
subb
adc
add
repnz
repz
push
fnstcw
add
iret
cmpl
pop
fs
add
jnp
enter
push
inc
push
push
add
cmpsb
jle
push
sub
lods
fistl
daa
cmp
fiadds
pop
sbb
jo
mov
sub
mov
call
cmp
cld
mov
int3
je
fldl2e
xor
xor
xchg
inc
subl
push
adc
xlat
dec
cmp
sub
add
mov
add
imul
cmp
pop
and
jns
add
add
add
movl
rorb
mov
aam
mov
jnp
jmp
push
mov
inc
in
inc
sarb
clc
pushf
add
dec
jl
add
dec
pop
inc
mov
pop
xchg
and
sbb
popf
xorl
roll
das
add
and
add
add
jmp
add
int3
pop
pop
mov
add
shll
add
mov
lods
push
rolb
xor
push
push
and
aas
add
ss
push
stos
hlt
jo
cmp
jge
xchg
xlat
mov
jge
out
dec
aad
in
inc
cmp
aam
movl
dec
filds
and
pop
jno
add
mov
stc
push
sti
push
lcall
add
jecxz
add
cmp
or
or
mov
add
jno
ss
sti
lret
test
jno
mov
pop
int3
push
repz
and
aas
iret
je
pop
pop
add
push
addr16
lock
add
in
lahf
add
dec
mov
in
xchg
add
sahf
mov
lret
cmp
and
add
out
movsb
adcl
inc
add
cmpsb
adc
mov
add
setno
iret
add
str
sti
pop
push
jecxz
and
add
test
add
pop
push
xor
mov
pop
add
add
mov
add
add
add
xlat
push
add
test
add
mov
aad
enter
jno
jne
mov
testl
dec
sub
pusha
push
shrb
ret
add
idiv
dec
add
shrl
mov
jge
jb
lret
repz
add
sti
add
out
pop
fmuls
stc
cmpsl
nop
and
cmp
outsb
fiaddl
test
add
dec
sbb
jb
push
and
addl
enter
mov
mov
sub
add
sbb
push
mov
nop
push
or
cmc
add
aas
int
xorl
out
mov
xchg
aam
sbb
roll
mov
xchg
aam
xor
fiaddl
mov
es
lds
inc
add
push
pop
adc
adc
add
imul
or
sub
push
rolb
lcall
sbb
add
in
adc
pusha
pop
xor
movl
loopne
ret
outsl
lods
fwait
xor
test
adc
add
ja
mov
add
xchg
cwtl
mov
add
sbb
js
ljmp
and
inc
jge
popa
dec
push
or
cmp
and
gs
stc
fiaddl
dec
mov
loopne
mov
nop
add
add
and
jmp
int3
add
rorl
jns
lock
push
stc
out
clc
popa
cmpsb
adc
pop
movsl
inc
cmpsl
dec
cmpsb
dec
add
ret
fs
push
gs
inc
or
js
sub
test
adc
mov
movaps
mov
xchg
sbb
pop
push
aaa
jbe
adc
lahf
sub
add
lret
cmp
and
je
push
movsb
pop
aad
dec
popa
xor
nop
cmp
dec
sub
int
xchg
sbb
inc
cld
cli
dec
ret
psrld
testl
repnz
mov
push
scas
adc
leave
cmp
lods
mov
ljmp
add
inc
popa
add
or
add
add
mov
stos
inc
cmc
push
in
int3
jne
cltd
jno
mov
pop
push
cs
xchg
fstl
sub
enter
mov
lock
inc
cwtl
cmp
pop
sbb
popa
mov
add
inc
add
dec
add
push
shrl
add
sbb
ljmp
dec
outsl
mov
jnp
gs
jge
dec
cltd
push
fistpll
xchg
xlat
data16
movsl
sahf
test
dec
stc
mov
ss
xchg
leave
mov
out
sarb
fiadds
les
mov
and
add
push
xlat
sub
add
sbb
aaa
and
in
inc
mov
scas
mov
or
sub
push
lds
or
push
daa
imul
cwtl
leave
jo
push
pop
js
add
add
inc
les
imul
add
adc
mov
push
scas
xchg
mov
dec
inc
push
push
and
and
dec
loope
out
mov
adc
dec
jecxz
mov
jne
lds
sub
mov
das
pop
dec
mov
add
std
mov
xchg
add
sbb
jnp
loopne
mov
ror
adc
add
add
jle
add
les
pop
flds
das
add
inc
mov
jg
push
cmp
jae
jnp
add
ret
mov
inc
sub
mov
and
fidivrl
fcoms
rorb
inc
jno
dec
add
arpl
add
adc
bound
js
cmpl
xchg
arpl
and
incb
movsb
jg
xor
stos
aaa
add
xor
pop
mov
cmpsb
jg
push
mov
aaa
push
add
fcoml
pop
popl
pop
dec
sub
addl
cmc
std
imul
push
jmp
mov
popa
loopne
and
push
rolb
cmp
roll
mov
add
or
or
fstp
dec
mov
in
ljmp
imul
in
test
xchg
mov
cmpb
xor
pop
sbb
aas
mov
inc
mov
adc
dec
add
daa
int3
pop
pop
sbb
lods
push
jge
insb
stos
lahf
test
mov
test
lock
das
out
mov
addb
sar
cmpsb
in
outsb
out
ret
adc
jle
cmp
enter
add
lds
cmpl
clc
add
xlat
addb
add
add
jne
daa
push
sub
jl
cmp
inc
mov
pop
dec
push
mov
push
add
add
leave
sahf
push
jg
sbb
repz
sub
pushf
inc
bound
dec
inc
loope
inc
sbb
fiaddl
rcll
mov
add
add
pop
in
gs
pop
pop
pop
fadds
scas
les
lcall
add
xor
add
cmpsl
sahf
add
jmp
lock
sahf
inc
adc
push
dec
pop
out
cmp
rclb
sbbl
jmp
lahf
lret
leave
hlt
gs
mov
stos
negl
lret
sahf
add
jge
stos
inc
cmp
sbb
add
or
jne
push
mov
adc
dec
rclb
dec
add
nop
aas
repnz
or
xchg
add
pop
xor
mov
lods
add
cmc
adc
insl
sbb
lock
in
cmp
out
cmp
sub
jl
outsl
aas
add
push
or
sub
out
mov
jb
jae
cs
mov
int
pop
arpl
lahf
sub
add
add
jl
mov
pop
fucomi
ret
dec
movsb
idivl
stos
dec
lret
fnsave
int3
and
ds
lock
add
adc
cmpsb
cltd
mov
daa
ljmp
push
push
inc
in
jnp
adc
lret
or
mov
cmp
out
jge
add
in
xchg
adc
popf
leave
mov
pop
int3
cs
xorb
inc
repz
or
ss
push
stos
push
in
xlat
out
add
ljmp
and
lods
dec
sbb
push
jmp
add
add
inc
add
inc
inc
add
mov
popa
xchg
sub
cmp
dec
sbb
test
push
mov
dec
test
ret
sbb
cli
push
push
aad
mov
repz
xor
outsl
pop
cmpsb
add
adc
iret
cmp
jno
cmp
ret
add
pop
icebp
outsl
daa
dec
add
insb
jb
std
popa
lcall
sub
mov
pop
sub
rclb
add
mov
push
add
fsub
inc
jns
cli
sbb
sub
xchg
loope
sbb
cld
lret
pushf
or
pop
pop
push
sahf
and
mov
pop
add
enter
cmp
dec
xchg
arpl
pop
add
add
jp
int
out
add
movl
mov
add
data16
sub
dec
daa
add
mov
xor
cltd
xor
or
fstpl
xor
or
add
lret
xchg
sbb
or
subl
jne
add
jo
mov
push
mov
mov
jp
cmp
fisttps
pop
cs
xchg
add
andb
pop
xor
test
cmp
add
subl
and
imul
stos
sbb
cmp
pushf
xor
inc
inc
add
aaa
sub
cmpsl
jmp
call
fadds
addb
fs
pop
repnz
xor
fwait
imul
hlt
inc
shll
ret
dec
dec
sub
inc
test
ret
movsb
scas
adc
cmp
push
add
pushl
popf
clc
cmp
cmpsb
cmpsb
jne
xchg
pop
mov
xchg
mov
ret
push
and
sarl
jle
ret
into
add
inc
jae
pop
fadd
mov
test
add
mov
add
jecxz
ret
arpl
xlat
xchg
rcrl
mov
sub
adc
pop
sahf
mov
add
mov
cmp
aad
add
add
and
ja
pop
loop
movsb
mov
dec
mov
mov
sbb
cmp
cmpsl
stos
or
ja
add
sbb
dec
scas
pusha
pop
iret
push
add
repz
dec
pop
push
add
clc
insb
int3
cmc
xor
stos
cmp
repz
and
dec
add
jmp
adcb
sub
in
mov
sar
in
lods
rclb
loope
jno
scas
sbb
sub
sbb
add
add
dec
xchg
in
sub
add
les
xor
ljmp
xchg
push
js
cli
aam
xor
add
sbb
push
das
add
and
push
fs
mov
aad
xor
cltd
mov
sbb
jge
aam
jns
xsave
inc
add
inc
push
je
inc
mov
push
orl
mov
pop
das
fadds
and
call
mov
xor
sub
in
add
and
popa
gs
mov
data16
sbb
lret
aad
fsub
add
inc
ja
pop
je
pop
cli
mov
or
xchg
dec
fisttpl
subl
sbb
mov
jns
ret
pop
dec
add
xor
adc
lcall
add
add
int3
add
xor
filds
cmpsl
mov
add
pop
in
ds
in
add
mov
add
data16
les
sbb
outsb
sbb
loopne
fildll
popa
pop
lcall
je
mov
pop
pushf
test
cld
loope
scas
test
stc
jae
addb
sub
repnz
dec
shll
dec
add
sub
sti
mov
xchg
sub
jb
sbb
jmp
push
mov
sbb
rcl
fisttps
lock
lret
mov
shl
xor
sbb
cmp
xlat
or
cmpsb
dec
jecxz
hlt
aam
inc
ja
jmp
add
jae
or
imul
pop
mov
addb
add
adc
add
push
rdtsc
gs
lcall
int3
mov
addr16
or
xor
add
cmp
out
add
add
adc
ss
das
ss
mov
shll
sub
daa
or
mov
jl
cmp
lods
mov
add
xchg
rorl
add
lret
fdivr
popf
mov
movsl
mov
xchg
popa
out
mov
lahf
stc
es
mov
lret
movsl
aam
add
int3
push
incl
mov
or
shr
fcomps
scas
repz
push
cmp
fstps
or
mov
enter
pop
and
iret
sub
add
add
ljmp
pop
gs
adc
data16
lods
outsl
inc
cmp
cmp
aas
add
or
push
fmull
ret
push
pop
jle
jle
in
add
shl
adc
mov
pop
dec
or
jle
ds
jne
or
mov
adc
mov
mov
out
sub
lods
xor
rclb
out
cli
jno
ja
std
xchg
push
pop
ficomps
inc
xchg
lret
sub
mov
push
jmp
push
cmp
or
and
dec
cmpsl
mov
cmpsb
pushf
addl
add
cmp
lods
sub
stc
push
adc
mov
mov
fstl
add
enter
mov
or
mov
out
add
add
mov
mov
jmp
outsb
in
mov
sti
mov
lock
add
push
add
notb
pop
jge
movsl
mov
add
add
sub
jmp
dec
call
add
std
out
mov
iret
pop
mov
sub
or
bound
bound
add
adc
daa
dec
js
int3
es
xor
dec
xor
add
test
pusha
out
add
jg
push
and
or
and
cmp
cmp
jnp
movb
std
add
cmp
mov
push
jno
outsl
cmp
pushf
fwait
cwtl
addb
daa
jmp
pop
in
lret
outsb
xchg
push
dec
mov
add
adc
xchg
mov
std
sbb
lret
out
pop
iret
insb
lock
jmp
dec
jnp
movsl
inc
fucomp
jmp
add
add
sarb
es
jb
mov
cmp
data16
push
xchg
push
stc
xorb
call
insl
jp
cltd
mov
xchg
jle
mov
popa
mov
jno,pt
sub
mov
pop
insb
scas
cmpsb
add
sub
adc
add
mov
fcmovnbe
add
bound
cld
int
mov
ss
rorb
data16
mov
push
stc
icebp
xchg
std
leave
adc
or
pop
or
out
mov
xchg
movsb
add
and
insb
ljmp
rolb
pop
xor
and
jle
lcall
jo
push
sub
add
dec
pop
and
inc
add
rcl
mov
xlat
add
ret
std
gs
sub
or
xor
inc
mov
add
sub
cmpsl
fidivrl
sub
nop
dec
decb
scas
add
mov
mov
add
xchg
into
mov
add
in
add
cwtl
add
pop
add
sbb
push
xor
fisubs
ljmp
push
pop
mov
xchg
js
imul
stos
add
add
mov
pop
cmp
adc
mov
add
incl
sbb
mov
call
pop
jle
insb
push
sbb
add
jbe
incl
sbb
sub
std
sub
inc
lock
mov
int3
inc
xor
jo
std
xchg
in
cli
pop
dec
mov
push
lods
push
ret
add
cli
add
out
sub
or
and
push
push
fwait
xor
add
out
cwtl
adc
and
or
and
cmp
ja
add
filds
mov
ret
push
push
icebp
push
ds
lcall
cmpsb
movsb
add
dec
subb
mov
push
out
add
lock
lods
in
xor
xchg
pop
push
cmpsl
dec
icebp
aam
sub
adc
iret
mov
pop
idiv
or
jne
and
roll
std
adc
pop
int
cmp
xor
cmp
imul
iret
xor
adc
das
xchg
add
test
add
dec
or
xorb
add
cwtl
in
jle
jge
jae
fcmovu
jae
xchg
sbb
movsl
xchg
int3
mov
push
lock
insl
mov
fldt
arpl
sbb
push
cmpsl
leave
or
stc
fs
pusha
and
jg
push
fidivl
mov
cs
imulb
int
dec
ss
daa
addl
sbb
jmp
cli
cmp
sbb
add
sub
xchg
jmp
lea
xchg
mov
imul
mov
mov
add
mov
stc
cmp
enter
lcall
or
push
adc
push
sbb
imul
fwait
test
add
fs
pop
pop
add
add
aas
xor
popf
stos
leave
add
mov
enter
in
sub
add
add
repnz
mov
ret
sbb
cmc
out
in
push
cmp
sub
cmp
imul
lcall
ret
nop
leave
sarl
sbb
movsb
ret
flds
and
add
xchg
subb
lret
popl
add
jle
mov
fsts
xchg
adc
cwtl
dec
mov
xchg
dec
popf
out
dec
es
adc
jbe
add
mov
imul
mov
add
leave
test
aam
mov
sbb
cmpsb
ss
push
leave
mov
rcll
or
jb
pusha
fwait
ud1
mov
mov
xor
shr
mov
fisttpll
cmpsb
mov
pop
add
fucomp
sbbl
xchg
imul
add
cmpsb
hlt
cld
pop
sub
scas
and
sub
je
mov
push
sbb
push
stc
popf
pop
lods
push
insb
add
and
out
add
adc
outsb
jp
jb
xchg
mov
add
pop
push
sbb
outsl
pop
loopne
stos
insl
outsb
adc
std
scas
int3
insb
mov
lret
kunpckwd
push
inc
pop
adc
jnp
dec
shlb
push
or
mov
mov
lock
jno
t1mskc
inc
push
test
movsl
xchg
or
cmp
stos
adc
mov
fldl
sub
fldt
mov
sub
add
adc
cwtl
fists
fcoms
inc
mov
adcl
sbb
in
mov
mov
add
arpl
mov
pop
push
test
mov
or
pop
mov
add
mov
mov
pop
loope
fimuls
cmp
iret
push
inc
and
add
popf
adc
adc
pop
add
xchg
loope
js
xchg
mov
add
add
bound
add
xchg
jle
mov
xchg
add
sub
dec
sub
add
add
push
rorb
xchg
jno
pusha
mov
adc
into
pusha
pop
add
adc
rorl
and
add
ljmp
add
mov
cmp
add
add
das
icebp
out
pop
pop
aad
repz
add
testl
fisttpl
inc
add
cmp
mov
mov
insb
add
inc
andl
inc
add
mov
daa
pop
jns
fwait
sbb
pop
add
icebp
insb
movb
add
call
sub
gs
ds
adc
imul
sbb
roll
xor
leave
rol
repnz
or
sbb
mov
add
pop
xor
iret
js
mov
andl
xchg
or
push
lahf
mov
dec
clc
xchg
out
mov
mov
sub
out
fadds
js
data16
ljmp
push
test
sti
cmp
in
sbb
outsb
dec
iret
jecxz
stos
les
inc
sub
jle
add
push
adc
adc
xchg
ljmp
adc
jl
pop
add
xchg
mov
std
xchg
out
add
popf
lods
addr16
cwtl
sarb
add
adc
lea
fisttpll
lods
imul
lahf
sub
lret
cmp
sti
xchg
jecxz
mov
jl
fldl
xor
ja
sti
sub
pop
add
mov
arpl
push
pop
inc
orl
sbb
xchg
jne
xor
mov
mov
add
cmp
stos
pusha
jbe
adc
jnp
lret
fldl
rcll
imul
push
mov
rcr
cmpsl
fadds
xor
add
cld
lret
pop
inc
clc
incl
push
in
mov
mov
add
fcom
daa
mov
dec
rdpmc
outsl
arpl
cmp
push
mov
call
mov
sub
push
xor
fldcw
movsl
and
jg
jp
mov
jle
add
dec
push
stc
add
pop
push
pushl
or
add
ss
in
inc
in
xor
scas
add
mov
mov
add
outsb
pop
fcompl
in
fists
dec
and
ficomps
jp
push
fadds
aad
dec
xor
popf
mov
jnp
pop
mov
jmp
push
aaa
iret
repnz
cmp
lret
add
dec
int3
add
cmpsl
jb
cld
pushf
mov
add
and
or
je
into
add
test
or
lods
cmp
clc
movsb
rcrb
mov
test
aas
jp
rorl
int3
add
mov
addr16
dec
pop
fwait
add
pop
lret
mov
dec
sub
mov
ljmp
in
stc
fcomps
test
xchg
add
es
sar
xchg
lock
xor
jno
add
into
jo
push
paddw
ljmp
or
push
mov
lods
inc
add
inc
fwait
push
and
nop
add
push
push
repnz
or
cmp
or
or
xchg
lds
nop
es
pop
inc
add
mov
cmp
mov
outsl
add
aaa
cmp
add
or
add
xchg
adc
add
sub
pop
jle
add
aam
pop
nop
bound
xor
dec
cmp
or
pop
test
sbb
sbb
data16
movsl
inc
data16
push
pop
xchg
add
gs
dec
cmpsb
aaa
pop
add
mov
cmp
inc
cmp
mov
loopne
jo
xorb
ret
sub
xchg
and
jne
and
push
nop
rolb
or
jb
sub
pop
cmp
test
mov
pop
in
das
push
fs
push
and
xor
sbb
repz
push
into
sahf
adc
lret
movsl
and
les
and
lock
xorb
sbb
daa
add
mov
ljmp
sti
mov
loop
and
add
xchg
sbb
and
arpl
jge
xchg
add
push
dec
push
in
add
incb
subb
fists
outsl
pop
dec
sub
inc
lods
shlb
sub
or
cmp
mov
aas
adc
es
push
std
cld
or
das
adc
jmp
jo
mov
add
les
sahf
cmp
cli
add
or
add
xor
mov
pop
add
jl
mov
xor
popa
push
lea
mov
dec
mov
out
imul
mov
int
cmp
shlb
add
shll
dec
pop
lcall
scas
mov
jae
ltr
inc
nop
fnstenv
xchg
ljmp
xor
sbb
pop
mov
test
jo
loope
scas
scas
xchg
adc
int3
xor
jecxz
shrb
jmp
inc
push
or
add
jns
sbb
imul
pop
and
xchg
sub
daa
add
jo
inc
add
dec
arpl
pop
xor
add
call
jne
mov
mov
insl
push
aad
fstpl
dec
lock
xor
sbb
mov
add
data16
add
xor
mov
dec
movl
inc
push
push
cmpsb
add
std
cmp
and
mov
mov
adc
call
or
cmp
arpl
fstps
pop
jne
add
movsb
adc
xor
pushf
add
out
fmul
pop
add
mov
sarb
add
inc
lds
roll
lods
sbb
push
push
mov
and
sub
lret
das
ret
scas
and
and
add
pop
xchg
sub
add
sbb
xor
jns
push
ss
popf
mov
dec
fnsave
lahf
int3
mov
loop
shl
pop
dec
add
fwait
xchg
mov
mov
sub
or
push
imul
inc
enter
add
sub
loope
cmp
fwait
sub
and
ljmp
mov
movsb
pusha
addb
pop
stc
pop
arpl
pop
add
bound
add
jbe
add
ud0
mov
mov
sub
pusha
mov
xchg
jle
in
cmp
in
cmp
mull
jo
mulb
mov
lret
xchg
mov
dec
in
xor
cld
mov
lods
mov
outsb
add
outsl
mov
adc
les
mov
add
mov
pop
cmp
or
gs
movsb
and
lock
add
add
xchg
xchg
inc
inc
cmp
mov
scas
mov
push
int3
jnp
inc
cmpsl
add
inc
sbbl
pop
outsb
add
sbb
and
std
jae
push
add
jmp
lea
jae
lahf
sub
leave
mov
sub
push
cmp
imull
dec
add
push
add
inc
sbb
leave
ja
adc
dec
movsl
and
xor
ficoml
adc
dec
push
add
mov
cwtl
mov
insb
push
add
mov
mov
enter
mov
fsubr
add
mov
adc
iret
mov
or
mov
lret
lods
in
cmpsb
dec
mov
sbb
cmp
into
out
xchg
add
out
lods
sub
dec
sub
icebp
rol
pop
push
dec
ljmp
lcall
aaa
add
add
ret
push
jmp
insl
adc
gs
jbe
das
add
jo
rolb
push
push
pop
xchg
mov
jl
mov
or
jb
push
jecxz
cmc
sbb
push
movl
cmp
adc
out
add
stos
mov
movsb
scas
add
push
cmpsb
and
gs
jle
and
add
addr16
jp
push
sub
clc
xchg
push
mov
and
mov
add
jecxz
add
mov
jno
cs
push
ret
push
rcrl
imul
inc
movb
mov
mov
outsl
movsb
cmc
je
add
add
mov
mov
movsb
fisttps
and
jbe
add
sub
jno
lret
sub
iret
sub
add
inc
jecxz
push
push
cmp
add
add
mov
addb
jne
scas
loop
add
repnz
out
orb
push
xchg
mov
ja
inc
clc
pop
pushf
insb
mov
mov
add
add
clc
cmp
dec
lahf
lret
ds
arpl
lret
jbe
test
fisubrs
dec
pop
add
xchg
add
add
mov
add
jb
sub
add
imul
lgs
pop
nop
xor
outsl
push
jnp
hlt
int
jne
push
xor
shll
add
jno
cmp
pop
cmp
insl
mov
mov
fiadds
pusha
fxch
mov
hlt
add
dec
xchg
xchg
popa
add
add
dec
sbb
ret
mov
or
aad
lcall
mov
add
xchg
inc
dec
cltd
mov
fldl
push
add
scas
pop
add
dec
insb
add
jp
mov
add
rorl
bound
xor
out
pop
stos
cmp
sahf
pop
cli
clc
adc
cld
inc
cmp
mov
and
inc
or
out
add
jecxz
stos
jnp
scas
inc
sahf
lcall
mov
cltd
idivl
inc
dec
int3
iret
xchg
xchg
xchg
test
sub
add
add
inc
xchg
xchg
xchg
adc
jecxz
aad
jb
mov
sub
in
mov
cmp
mov
ljmp
xlat
xor
outsl
push
test
test
movsb
mov
in
mov
loop
dec
rcrl
add
xor
push
adc
xor
add
cmp
sbb
notb
xor
add
je
mov
pusha
test
cwtl
jns
dec
jns
add
cmp
iret
sub
sub
mov
popl
ljmp
inc
imul
adc
add
add
data16
push
push
add
int3
push
les
jne
add
dec
call
frstor
sbbl
cmp
adc
aad
or
push
pop
inc
push
or
fists
add
push
mov
add
add
adc
inc
mov
ja
pop
adc
addr16
or
push
pop
inc
faddl
push
mov
dec
lds
add
divb
or
xlat
inc
add
ficoms
mov
notb
add
iret
add
jecxz
cli
add
cmp
popa
dec
mov
jle
mov
mov
xor
xchg
testl
fwait
add
add
inc
jo
sub
loop
mov
dec
les
mov
add
mov
mov
cmp
jecxz
pop
xchg
or
dec
and
test
sahf
add
stos
dec
add
add
fucomi
dec
loope
inc
shlb
mov
shlb
ret
jb
and
lea
js
add
jg
inc
dec
cmpsb
clc
adc
and
xorb
push
cli
jo
or
out
jle
sub
fcoml
xchg
lea
jle
xchg
dec
out
bound
sbb
inc
mov
jge
fcomps
insb
mov
add
shr
add
inc
sbb
sub
aaa
add
orl
adc
mov
add
push
mov
enter
stos
and
or
repz
dec
jo
pop
or
std
les
add
pop
add
test
xchg
cltd
lea
mov
xchg
aam
add
add
xor
pop
insb
cmp
push
sub
cmp
mov
add
add
stc
fcmovnbe
call
cs
add
shr
cmpb
dec
add
sbb
cmp
inc
xchg
pop
data16
incl
add
hlt
inc
mov
jb
imul
xor
add
ja
add
mov
cmp
add
mov
inc
je
mov
jns
inc
sbb
in
and
leave
add
adc
jle
movsl
int
add
mov
stos
loop
add
das
insl
xchg
adcb
add
push
and
cltd
jne
lds
and
loopne
add
insl
adc
jecxz
loope
lds
test
jns
into
sub
jl
jp
roll
das
sub
ljmp
incb
xor
add
add
xor
ror
mov
ret
add
mov
subb
and
repnz
push
add
lret
jne
xor
add
enter
or
nop
in
mov
fwait
cmp
pop
stos
sti
mov
sar
jnp
xchg
movsb
dec
or
add
andb
addl
add
out
push
js
jno
call
lret
add
hlt
fstl
in
lods
fcomi
add
add
roll
ds
add
in
jp
das
sbb
xchg
adc
push
add
imul
cmpsl
mov
fsubr
ret
dec
cltd
in
sbb
ror
xchg
pushf
cmpsl
add
mov
push
lret
not
fisttps
sarl
jb
mov
add
icebp
push
std
mov
mov
xor
sbb
jg
adc
mov
cmp
cmc
add
xchg
cmc
movsl
sbb
add
jno
lcall
jecxz
add
adc
fcoml
push
cli
add
and
std
cmp
adc
cmp
mov
mov
mov
or
loopne
imul
imul
xor
lods
test
push
xorb
mov
add
inc
scas
aaa
arpl
cmpsb
addr16
mov
insl
rcll
jne
pop
jmp
add
int3
sub
or
shlb
ss
jp
sbb
je
jp
in
xor
mov
push
cmp
divl
cmpsl
ljmp
dec
xor
jbe
out
add
cld
hlt
inc
testb
fildl
dec
inc
cmp
lret
cmc
add
dec
std
push
pop
xchg
inc
sub
loope
sbbl
or
ret
repnz
jmp
test
jae
sub
sar
pop
and
cmpsb
sahf
inc
add
jp
inc
or
loopne
imull
push
movsb
int
clc
inc
fdivrs
ret
push
test
cmp
loope
enter
mov
pop
and
adc
push
add
stc
sub
pop
rorb
push
add
and
icebp
xor
push
xlat
test
jne
lods
mov
dec
hlt
jo
fucomip
in
repnz
sub
inc
cwtl
mov
jl
rcrl
add
inc
adc
jns
cli
fistpl
add
add
lods
add
jle
inc
scas
nop
icebp
loop
cmp
mov
rcr
jb
ja
sbb
ds
mov
outsb
in
sbb
leave
push
add
inc
mov
add
pop
jae
jns
jp
pop
ficoml
pop
adc
add
add
gs
mov
dec
inc
jbe
xchg
lret
repnz
xor
mov
out
add
add
cs
add
pop
in
add
jno
sbb
nopl
incb
sub
dec
add
pop
out
xchg
int3
add
jle
addl
add
inc
insl
mov
data16
dec
pop
add
scas
or
test
repnz
ljmp
add
outsb
testb
add
add
out
into
jl
mov
mov
aad
add
add
rolb
fldcw
adcl
push
stos
jge
push
dec
lds
out
fistpl
add
bound
inc
ss
dec
mov
popa
repnz
dec
cmp
sbbl
or
xor
push
add
movsb
cmp
jg
lea
jae
lods
add
xor
cmpl
dec
or
mov
sbb
jmp
add
test
push
add
add
in
jne
jns
or
add
dec
pop
mov
dec
mov
insb
arpl
and
movsl
daa
mov
inc
ljmp
pop
push
xchg
rolb
call
dec
or
mov
cmpsl
aas
xor
popa
sbb
add
ret
sbb
dec
add
mov
iret
push
mov
les
mov
je
sub
push
pop
push
dec
mov
fwait
sar
cmpl
mov
pop
mov
icebp
mov
add
jae
add
mov
mov
sbb
ja
push
icebp
push
inc
add
pushf
fwait
xchg
dec
scas
xor
xchg
and
and
inc
mov
insb
and
popa
fmuls
add
sbb
xor
add
roll
add
jecxz
inc
dec
push
cld
and
sbb
add
out
mov
add
jne
in
mov
pop
int3
xchg
add
ret
pminsw
shrb
sub
mov
sub
scas
add
lret
into
lcall
addl
cli
int3
add
insb
popf
or
mov
add
push
mov
mov
les
icebp
mov
das
mov
aam
add
mov
and
pop
jge
mov
push
inc
inc
mov
in
xor
cltd
mov
inc
xor
add
dec
mov
cld
dec
in
call
xor
adc
leave
add
jns
xlat
jmp
bound
inc
popf
in
hlt
sahf
fwait
sub
adc
js
sbb
push
mov
stos
lea
add
dec
cmpb
pop
add
xchg
xchg
enter
movlps
xor
ljmp
dec
adc
stos
and
mov
pop
sldt
pop
mov
add
xlat
pop
sbb
add
fildl
pop
push
xor
pop
outsl
push
add
arpl
sbb
push
movsb
adc
mov
mov
ficoms
add
xor
mov
mov
pop
fs
xchg
add
jmp
mov
mov
mov
je
dec
pop
mov
lea
push
jae
jo
mov
dec
inc
add
jbe
sbb
rcrb
or
inc
mov
xor
or
push
jae
jno
imul
out
les
or
mov
sbb
and
and
addl
pop
add
xor
insl
in
jae
arpl
xchg
imul
gs
jmp
mov
dec
jns
inc
rol
mov
jmp
mov
xchg
add
imul
das
jge
xor
jp
hlt
lods
jo
push
rol
add
iret
mov
xchg
cmpsb
add
add
inc
jp
dec
add
and
and
cmpsl
add
out
inc
pop
inc
adc
pop
push
jmp
pop
push
mov
fiaddl
loope
push
les
addr16
addb
mov
mov
fwait
sub
js
xchg
xchg
loope
add
and
mov
push
add
jp
xchg
pop
push
es
add
and
add
push
ljmp
or
jbe
push
xchg
mov
js
es
sbb
mov
sub
inc
rorb
add
pop
ja
adc
sbb
push
push
leave
test
cmp
pushf
dec
mov
out
mov
xor
ljmp
lret
jno
les
xchg
js
shl
movsl
adc
xchg
ss
call
xor
add
mov
sub
or
mov
lret
add
add
test
insl
add
ljmp
jae
scas
mov
push
test
sahf
aam
ljmp
and
les
xchg
pop
pop
add
mov
jl
stc
sarb
pop
adc
add
jle
push
insl
jle
sub
jbe
push
sarl
add
add
incb
aaa
inc
hlt
testl
mov
add
xchg
add
mov
lds
loopne
lods
mov
sub
scas
jp
xchg
adc
mov
push
dec
clc
add
add
jno
movsl
addr16
add
add
adc
aas
add
cwtl
add
jg
in
add
cmp
cld
aaa
lock
rcll
sub
add
mov
lret
push
add
lret
mov
gs
dec
xchg
add
cmpsl
mov
ss
add
sahf
not
inc
addl
jg
mov
push
addl
rcr
int3
sbb
and
fwait
sbb
add
sbb
pusha
clc
aad
loopne
scas
int3
jne
rorb
xlat
data16
das
jg
test
sbb
sub
cmpl
mov
stos
call
pusha
mov
andl
pop
xor
lds
in
adc
nop
jg
dec
add
cmp
in
mov
subl
mov
or
mov
jmp
into
jnp
fiadds
jecxz
lea
or
pop
and
sub
orl
push
push
jle
sub
daa
mov
sbb
out
push
ret
add
fnstsw
lret
nop
pop
add
add
sub
daa
push
test
and
inc
movsl
mov
pop
mov
in
jl
fbstp
aam
mov
or
pop
frstor
scas
dec
cwtl
inc
add
xorb
sbb
pop
push
push
mov
clc
aas
adc
rorl
xor
mov
add
mov
jo
xor
ss
sub
pop
cwtl
jmp
pushf
lret
dec
pop
sub
sahf
insl
daa
mov
aad
cmp
scas
add
mov
dec
xchg
in
testb
daa
pop
inc
dec
test
test
push
andl
adc
sbb
decb
adc
jo
fst
lcall
addr16
mov
int
repnz
out
add
dec
ljmp
pop
es
cmp
cmp
pusha
cs
stos
bound
jg
dec
and
das
mov
ret
cwtl
shl
and
xchg
xor
arpl
cltd
add
int3
jecxz
subl
in
inc
leave
or
fildl
dec
and
out
pop
dec
inc
sarl
jecxz
pop
dec
add
pop
jns
clc
repz
mov
push
dec
pushf
dec
jp
loopne
or
push
sub
xor
sub
jle
imul
imul
sbb
scas
mov
mov
int3
hlt
xchg
pop
lods
adc
jge
int3
inc
xchg
add
popf
out
push
lret
push
jmp
sub
push
pop
adcl
add
pop
jecxz
ja
and
imul
out
jecxz
dec
stc
xchg
dec
add
adc
jae
add
fildl
pop
stos
pop
ja
add
ret
cli
ja
xchg
shll
xchg
xchg
xor
xor
add
aad
jo
sbb
jno
pop
push
addl
pop
inc
xchg
aaa
xchg
popl
loopne
inc
fnsave
or
in
movsb
sbb
xchg
pop
roll
xor
cld
scas
sbb
pop
or
fs
dec
lcall
mov
out
mov
imul
repnz
fidivrs
lahf
dec
out
adc
xchg
add
out
pop
dec
clc
lret
hlt
jo
xchg
fwait
add
cwtl
sub
cmc
inc
adc
in
add
mov
insb
adc
xor
jle
movsb
popa
push
mov
or
add
ret
lcall
and
cmp
incb
movsl
cmp
push
add
and
cmp
pushf
xlat
adc
fucomp
arpl
adc
lahf
mov
jne
mov
push
push
dec
mov
sahf
sbb
add
pmulhw
int
stos
mov
mov
pop
pop
incl
adc
jae
xchg
imul
add
dec
xlat
out
xchg
imul
sub
mov
jecxz
mov
add
dec
xchg
mov
jecxz
add
gs
xchg
sbb
cmp
dec
sub
jae
add
mov
insl
or
push
adc
cli
lods
push
or
ljmp
add
push
dec
add
or
sub
leave
xchg
cmp
enter
dec
jne
stc
push
mov
add
jb
pop
fistl
xor
xor
inc
dec
out
pop
mov
add
jg
cmp
shrb
imul
mov
jnp
imul
sbb
adc
jmp
insb
sbb
enter
lret
push
call
imul
adcl
inc
movl
inc
div
data16
lods
dec
mov
lahf
add
mov
and
dec
sbbl
adc
in
enter
sbb
add
add
shrl
sbb
ret
cli
xor
popf
push
pop
faddl
hlt
stc
add
dec
in
xor
add
jp
pop
repz
incb
push
jecxz
push
push
cmc
push
jno
sub
add
test
std
mov
add
aam
xchg
adc
cmpsl
leave
outsb
es
roll
sub
dec
jne
test
cmpsb
mov
mov
scas
lds
add
add
dec
mov
adc
rclb
jb
stos
add
mov
and
inc
mov
faddl
mov
sbb
in
sahf
aas
dec
outsb
add
add
sbb
and
loopne
and
mov
add
iret
jp
roll
add
and
add
cwtl
dec
pop
mov
mulb
out
add
cmp
aad
pusha
jmp
mov
lret
in
jno
push
popa
shlb
xor
mov
adc
icebp
push
pop
dec
cltd
mov
jbe
add
or
addl
rcrl
xchg
pop
dec
dec
outsb
shlb
add
push
jg
mov
aad
add
sbb
fiadds
xchg
add
pop
xor
sub
in
test
dec
out
clc
repz
test
add
sti
jle
das
cmp
mov
jg
dec
adc
lret
lock
jns
adc
add
add
or
ja
shrb
stos
sbb
ljmp
add
mov
add
push
imul
mov
dec
mov
clc
mov
push
add
addr16
leave
cmpsl
lret
outsb
jns
gs
cmpsl
add
xlat
ret
lahf
dec
in
arpl
adc
pop
push
popa
push
xchg
lea
add
sbb
mov
jg
add
and
std
add
in
pop
jl
push
in
aam
js
dec
stos
addr16
mov
xlat
adc
insb
dec
ja
xor
pop
jno
adc
mov
clc
pop
pop
add
adc
add
fwait
fstps
out
push
mov
cmp
repz
ds
in
inc
mov
dec
jns
inc
add
sbb
add
shlb
out
mov
insl
std
enter
stc
xchg
aam
stos
xchg
mov
ja
pop
dec
sbb
add
inc
cmc
add
stos
les
sub
or
xor
xor
in
pop
add
int
pop
inc
stos
and
or
add
cld
outsl
xchg
pop
pop
or
jnp
or
jne
shrb
sbb
push
and
push
add
popf
lods
js
jae
push
nop
pop
mov
test
push
add
add
push
pushf
xchg
dec
fsubrl
je
xor
adc
mov
mov
lret
adc
mov
in
repnz
inc
add
add
jg
cmp
add
pop
push
sub
dec
add
cmpsl
add
or
push
aad
ss
push
cli
push
aaa
in
mov
add
add
xchg
loop
mov
add
js
pop
lock
cli
inc
lcall
movsb
cmp
mov
stos
push
add
xchg
push
insb
mov
add
or
fisubl
push
daa
xchg
fld
jo
iret
jge
addl
sbb
lret
lock
mov
sub
pushf
pop
ret
outsb
add
add
mov
out
push
sbb
int3
arpl
aad
pushf
xlat
mov
push
add
std
add
add
pop
in
add
add
jno
xor
and
enter
push
out
rolb
pop
cmc
xor
lds
or
imul
test
and
int
mov
push
or
out
cmpsb
loope
dec
add
scas
loope
nop
add
add
mov
mov
and
or
cltd
ljmp
dec
add
loopne
loope
dec
inc
add
xor
pop
adc
ja
bound
adc
mov
fiaddl
shlb
inc
movsb
jnp
dec
add
sub
sbb
sub
rolb
and
add
cmp
mov
sbb
dec
ret
sub
cmp
mov
add
push
and
scas
add
add
adc
add
lods
loope
inc
pop
add
fistpll
inc
mov
xchg
jge
jbe
inc
ss
jg
dec
call
outsb
add
jle
add
push
test
dec
xchg
scas
stos
add
push
xchg
fdivr
popf
mov
pop
add
adc
mov
jno
push
add
outsl
imul
pop
pushf
leave
adc
push
ds
leave
mov
mov
stc
jne
adc
pop
lret
pushf
in
loop
sbb
in
add
cmp
cmp
mov
jecxz
insb
sbb
leave
xor
push
add
cmp
cltd
dec
das
push
out
pusha
add
pop
fists
insb
add
sbb
into
cli
xor
aam
add
dec
sub
push
dec
dec
repz
jne
fs
adc
jns
xor
lret
icebp
push
add
add
add
pop
add
add
cmp
adcb
imul
or
add
cmp
pop
cmp
into
rcrl
adcl
add
pop
pop
out
mov
mov
bnd
sti
pop
and
jecxz
ret
pop
ret
sub
cmp
jno
add
lret
cmpsb
stos
pusha
addb
ret
aam
xor
mov
xor
mov
jge
inc
fisubl
add
in
popf
inc
pushf
push
out
sbb
xor
push
push
roll
sub
out
out
add
mulb
add
sbb
es
add
fistl
add
add
push
mov
flds
dec
test
cmpsb
add
add
je
pop
in
jno
add
sbb
pop
jbe
add
pop
xchg
jg
or
stos
ud0
mov
pop
lret
add
push
sub
xor
mov
mov
mov
bound
cwtl
or
addr16
mov
jle
jge
ljmp
std
add
and
push
pop
push
pop
or
cmpsl
add
lret
loopne
mov
inc
icebp
test
jnp
push
jne
cmpsl
mov
add
add
cmp
push
in
or
add
adc
out
xchg
jno
add
int
aaa
jle
rcrb
sbb
sbb
and
add
clc
add
fiaddl
sub
mov
dec
dec
lahf
incl
and
xor
add
sub
add
mov
nop
mul
mov
inc
push
clc
cwtl
int
mov
pop
lock
mov
adc
cli
dec
cs
sub
pop
pop
add
les
sbbl
mov
je
outsl
call
jne
fnstsw
sbb
add
jne
jg
loope
jns
nop
add
pop
sbb
pop
addb
add
rcr
andb
test
fcomi
jmp
xor
faddp
cmp
mov
dec
push
fildll
push
pop
mov
adc
out
jl
push
jb
push
xchg
jge
pop
and
out
mov
out
int
jmp
cmp
xchg
add
dec
rorl
out
xor
cld
pop
jecxz
and
sub
xchg
xchg
insl
clc
cs
lret
and
dec
jae
mov
mov
ret
jb
jno
cmp
pop
and
mov
test
into
adc
in
mov
cmp
xchg
mov
xor
push
inc
fbld
fstpl
sbb
mov
icebp
ds
stos
imul
add
or
test
cmp
inc
enter
add
or
mov
mov
cmp
loope
jp
inc
int3
aad
mov
sub
scas
stc
mov
fldpi
sub
or
or
movsl
lock
add
push
fiaddl
cmp
push
inc
gs
cmp
cmp
add
sbb
sbb
jo
mov
mov
and
mov
in
inc
xor
ljmp
add
cmp
in
inc
mov
mov
sahf
xchg
add
add
add
push
scas
pop
cmpsb
mov
mov
xor
mov
add
loopne
loop
cmp
in
test
mov
mov
fdivrp
insl
sub
jnp
mov
mov
pop
xchg
inc
aas
mov
add
test
push
push
and
dec
in
dec
fwait
cmp
popf
movsl
popf
insl
add
data16
cmp
testb
rorb
and
push
add
fbstp
sub
mov
mov
outsb
gs
jecxz
std
sahf
in
add
stc
jmp
mov
out
or
jecxz
clc
jp
dec
add
roll
sub
add
mov
xabort
cli
add
loop
leave
and
or
push
inc
mov
lcall
lods
add
pusha
lret
cmpsl
cwtl
xchg
je
lahf
movsl
add
xlat
add
cmpsl
add
pop
jmp
cmp
pop
arpl
mov
push
xchg
in
lock
sub
ret
xchg
pop
adc
cmp
sub
jle
add
into
dec
cwtl
lret
in
add
add
inc
adc
xor
mov
add
outsl
xchg
stos
xor
jb
hlt
pop
or
sbb
push
mov
test
iret
mov
jno
int
lock
movsl
das
add
mov
test
out
rcll
xlat
dec
add
lahf
add
stos
mov
fwait
lahf
scas
dec
jmp
xchg
adc
ja
jge
arpl
mov
pop
add
add
jns
dec
push
lsl
lock
jp
xchg
lcall
bound
dec
or
push
in
adc
add
nop
imul
push
add
jae
cmpsb
lods
xchg
hlt
push
add
sub
add
mov
mov
test
test
inc
lret
or
clc
sbb
test
sub
bound
pop
jmp
pop
adc
sub
mov
punpckhbw
jb
mov
dec
inc
pop
mov
leave
jmp
pop
shrl
jl
add
inc
iret
push
xchg
addl
add
xchg
cltd
pop
or
mov
pop
inc
mov
stos
fwait
pusha
lods
add
insl
lds
add
mov
bound
adc
push
filds
nop
push
mov
inc
cmc
clc
jg
sub
jnp
mov
add
add
pushf
ja
fucom
rclb
xchg
pop
add
inc
xlat
dec
mov
movsb
outsb
fwait
popa
aam
push
cli
lock
sahf
add
js
sbb
add
xor
mov
jbe
aad
in
add
inc
mov
ret
add
in
lret
add
dec
jmp
rcr
shrl
pop
nop
xchg
mov
inc
mov
test
stc
adc
add
add
sub
sbb
sub
cmp
ficompl
xchg
cmp
shrb
ljmp
out
adc
xorb
lods
leave
sub
sub
push
dec
push
or
lret
xorb
mov
cmp
test
stos
icebp
cld
adc
inc
insb
das
add
outsl
mov
mov
sub
xor
or
or
imul
add
jmp
add
stos
popa
rcl
dec
call
mov
pushf
arpl
test
fsubrs
jp
dec
pusha
xchg
mov
cmp
cs
pusha
push
add
insl
int3
nop
loop
scas
add
inc
imul
sar
push
movsb
mov
add
negb
adc
add
xchg
add
jbe
in
in
mov
add
movsb
fcmovnu
lret
inc
insl
mov
mov
add
sbbl
add
loope
adc
mov
dec
stos
add
stos
cwtl
add
sbb
aas
loope
cmp
xchg
add
int
mov
add
dec
push
enter
add
push
xor
push
push
xchg
or
push
sbb
sub
cld
cli
mov
sub
add
mov
imul
mov
sbb
enter
popa
into
or
pop
xor
shll
outsl
push
sbb
mov
and
stos
mov
jmp
xlat
test
lds
pop
mov
cmp
lods
lret
and
arpl
pop
lret
xor
sahf
cmp
nop
jp
dec
ds
pop
mov
jnp
sub
pop
and
dec
add
clc
add
and
mov
jge
jge
fisttpll
inc
dec
in
pop
add
bound
cmp
and
bound
ljmp
pop
imul
sti
add
jg
push
lods
jno
add
and
aas
adc
push
dec
xchg
mov
shrl
test
cld
fdivl
into
sbb
add
sahf
lods
cmp
sti
je
mov
push
shll
inc
lret
push
push
dec
add
loope
mov
cld
fcoms
add
fdivrl
testl
stc
add
xchg
sbbb
hlt
or
cmpsb
dec
jb
jl
mov
sub
sbb
lcall
dec
sub
add
cs
jbe
push
add
inc
lds
add
lahf
fisttps
xchg
out
mov
push
add
out
clc
or
add
cltd
daa
das
add
jns
mov
lret
adc
push
add
sbb
add
pop
add
sti
add
add
mov
icebp
es
mov
and
push
inc
loope
out
add
ss
mov
bound
bound
xor
sti
push
add
mov
jo
jno
or
daa
outsb
rclb
ret
int3
aad
cmc
xchg
jnp
data16
jecxz
jl
inc
adc
mov
repz
iret
ljmp
insb
idivl
push
sbb
mov
sti
jp
movl
int
dec
add
shll
call
verw
fstpt
fisubrl
fs
scas
add
fwait
js
popl
ret
add
adc
add
js
fdivl
add
jbe
jecxz
cltd
add
out
add
scas
sub
inc
adc
dec
cld
xchg
popa
addr16
cmpsl
cs
data16
xor
inc
loope
adc
pop
inc
and
mov
aad
pop
jns
inc
rolb
mov
inc
je
stos
mov
push
les
add
dec
mov
jae
add
inc
int3
rorl
cmp
fidivl
insb
fldcw
add
jbe
out
jnp
mov
inc
and
pushf
ds
push
std
sub
cld
inc
add
mov
daa
pop
mov
scas
mov
rorb
icebp
loope
adc
mov
fwait
subl
aam
pushf
popf
jnp
mov
push
mov
add
verw
jnp
arpl
fwait
sbbb
dec
or
pop
dec
call
inc
add
add
addb
loop
mov
push
push
nop
daa
xchg
mov
mov
dec
mov
sbb
jae
push
mov
jp
push
or
ds
fistps
add
push
test
xchg
xchg
dec
xchg
dec
stc
pop
rclb
jne
or
sarl
mov
enter
adc
add
les
sub
in
jle
hlt
cmp
add
push
add
lods
or
lret
lods
inc
jns
roll
sbb
dec
cmp
inc
sbb
orb
push
mov
lcall
adc
mov
flds
mov
push
outsb
add
add
add
xchg
jge
add
mov
or
adc
sbb
cmp
js
movsb
decb
movsb
cmp
ror
pop
add
js
in
dec
add
test
jns
test
out
cmp
add
xchg
add
cmp
aad
push
aas
mov
les
fsubs
jb
mov
jge
int
add
jecxz
xchg
loope
fisubrl
xchg
push
or
adc
fwait
sbb
mov
mov
int3
out
lock
fnstcw
in
stc
dec
mov
sub
jecxz
loope
jne
xor
sbb
and
dec
adc
and
aas
inc
test
fisubs
mov
std
pop
mov
add
or
xor
cmp
lret
or
add
xchg
adcl
jecxz
in
push
cmp
push
jno
add
xorb
cmp
cld
jp
dec
mov
add
cmp
xchg
xchg
inc
add
and
xor
add
adc
push
ljmp
add
loopne
repz
cld
sbb
jp
loopne
xchg
add
pop
mov
les
jle
cmp
push
mov
pop
les
or
adc
jg
mov
icebp
stos
pop
cmp
and
add
dec
inc
lahf
pop
sbb
sbb
sbb
jb
add
xor
mov
test
add
pop
dec
ja
fnstsw
sbb
sub
gs
sub
cmp
in
and
inc
inc
cmp
lea
test
aaa
jge
dec
dec
push
clc
mov
lods
add
cmc
add
add
ljmp
add
sbb
ss
outsl
push
jmp
push
pop
add
mov
imul
jp
mov
fiaddl
cli
loope
mov
inc
sub
cmpsl
lods
add
pop
push
push
xchg
aad
lcall
ret
cld
push
mov
inc
add
dec
xor
lahf
stos
jae
add
or
mov
push
cld
xor
sub
cli
add
pop
into
cmp
push
pop
push
ja
add
mov
loopne
xchg
faddl
jne
cmp
add
add
aad
pushf
push
adc
add
loop
add
sub
dec
roll
jecxz
adcl
pop
icebp
add
mov
inc
addb
adc
xchg
add
es
and
shlb
fcoml
loop
adc
int
cmp
cmpsl
add
dec
movsl
add
add
pop
sub
mov
addl
cmc
jmp
enter
dec
adc
out
add
and
mov
mov
inc
push
add
sbb
pusha
nop
scas
cmp
jae
pop
mov
popa
mov
test
push
xor
insb
cmpsb
movsl
pop
cmpb
ret
add
sbb
push
hlt
fldt
sti
add
sbb
jg
add
scas
push
int3
ljmp
leave
add
movsl
push
in
push
and
popa
lret
movsb
jmp
aad
jbe
aaa
lcall
add
mov
jmp
jg
push
imul
xchg
add
popf
scas
add
jo
filds
cmpsb
push
ljmp
fs
add
or
cmp
adc
lea
mov
xchg
xchg
cmp
xchg
lret
jp
aam
pop
sbb
ds
jno
in
push
out
sbb
add
add
out
dec
mov
cmp
jbe
and
inc
int3
cli
es
add
or
test
ret
fiaddl
mov
mov
in
push
and
dec
add
call
scas
jg
add
lea
fsubl
cltd
loope
cmp
add
punpcklwd
cmp
xchg
inc
adc
push
add
fistl
nop
cmp
icebp
stc
ss
lock
inc
ja
push
gs
xchg
lcall
add
fsubs
dec
add
popa
add
and
mov
jmp
sub
testl
cmp
jl
fstpl
xor
add
aam
stc
adc
adc
jecxz
mov
out
pop
inc
push
lret
ljmp
push
mov
daa
xor
test
dec
pop
loopne
and
shll
push
int
jmp
in
push
insb
jno
fmuls
loopne
cwtl
add
add
scas
notb
repnz
xchg
incb
or
and
call
lods
shl
fisttpl
cmp
icebp
add
add
ret
std
and
add
or
not
add
mov
inc
dec
add
enter
clc
mov
pop
or
or
dec
fwait
pop
xchg
ret
outsb
add
mov
xorl
fnstsw
push
test
test
mov
push
aas
mov
mov
adc
jmp
aaa
add
mov
push
aaa
icebp
pushf
and
add
icebp
mov
push
add
add
fcompl
jge
sub
mov
in
mov
push
fcmovnb
mov
cli
test
pop
mov
or
push
inc
outsl
add
cmpb
int
mov
sub
lahf
inc
mov
push
fisubs
addr16
xchg
jg
mov
sbb
add
add
stos
rcl
test
mov
dec
or
add
jo
add
add
lahf
insl
push
jbe
and
mov
xchg
inc
lock
loop
incb
out
xchg
js
movsl
push
notl
pop
add
incl
xor
mov
ljmp
push
add
arpl
or
not
mov
into
fnstenv
dec
sub
sti
sub
sub
xchg
rorl
sti
fistpll
repnz
ret
mov
scas
or
pop
int3
call
fldcw
sbb
add
mov
les
sbb
push
fldlg2
mov
or
jae
mov
jmp
std
fcompp
fdivs
or
adc
movsb
lahf
loopne
clc
adc
inc
inc
lret
add
sbb
jecxz
cmpsb
repnz
out
pushf
sub
xor
jmp
mov
roll
xor
xor
jbe
adc
mov
movsl
and
int
ja
in
in
add
ss
mov
pop
push
lods
pop
add
fs
jle
rcrl
jnp
arpl
add
dec
fdivl
out
and
rcrl
lahf
xchg
leave
es
test
mov
out
push
fbstp
fnsave
pop
mov
jae
lahf
push
mov
xchg
mov
xlat
add
scas
fadd
shlb
push
cmpsl
mov
add
add
ret
and
push
jl
xor
inc
add
pop
sarb
js
push
jo
arpl
out
push
rolb
add
pop
data16
pushf
add
cltd
inc
test
outsl
movsb
sbb
xchg
add
pop
imul
dec
xor
push
and
jo
lret
cltd
push
add
mov
add
mov
je
loope
cmp
xchg
test
add
dec
push
insb
daa
sti
das
add
push
jbe
push
mov
pop
test
bound
adc
imul
dec
and
fidivrs
scas
popl
ljmp
cmpsl
sbb
sub
add
add
add
stc
xchg
add
dec
ds
in
push
push
and
add
xchg
add
adc
pop
lret
and
jle
mov
fwait
cmc
add
lods
add
loopne
adc
leave
xchg
iret
add
add
xchg
add
push
test
lahf
push
add
push
ja
test
add
xchg
mov
aaa
addl
cmp
daa
add
dec
inc
cmpsl
add
push
xor
add
pusha
pop
out
inc
add
pop
divb
pop
inc
add
add
jno
sbbl
inc
sub
push
xlat
inc
call
mov
je
in
int3
inc
inc
into
push
add
xor
gs
movsb
jnp
loope
add
xchg
jo
andl
inc
add
xchg
rorl
and
sbb
sbb
add
jp
movsb
sahf
jle
and
add
sbb
jmp
dec
sbb
mov
mov
cld
ljmp
in
pop
cmp
add
fisttps
das
bswap
repnz
enter
mov
push
pop
jp
cmp
mov
ja
sbb
xlat
push
test
out
or
lahf
inc
sarl
negb
adc
subl
xor
adc
dec
in
and
enter
inc
ljmp
in
cmp
sbb
push
rcr
lret
add
dec
add
pop
jb
add
pop
popf
lea
mov
adc
repnz
adc
mull
inc
pusha
mov
inc
add
sahf
mov
sbb
lock
jb
insl
mov
ret
stc
mov
mov
mov
pop
insl
sbb
xchg
sub
push
dec
xor
cli
lock
cmp
dec
add
sbb
sbb
add
xor
inc
jge
out
pop
add
push
jns
pop
mov
push
mov
inc
add
dec
lds
push
pop
dec
fsub
add
roll
icebp
push
add
lret
nop
sbb
xor
mov
lret
iret
xlat
rolb
pop
test
fdiv
jns
sub
in
lea
push
aaa
pushf
inc
mov
push
mov
sub
lret
loope
cmc
cmpsl
cmp
addl
dec
rorl
mov
cmp
mov
push
icebp
dec
add
dec
push
lock
inc
popa
lea
scas
lds
cmpsl
or
imul
movsl
and
stc
dec
int
add
pop
inc
nop
adc
in
adc
orl
ret
cmp
push
sbb
es
adc
add
mov
push
inc
cmp
xor
or
stc
fdivrp
sarl
add
enter
push
testl
sbb
mulb
jmp
cmp
xchg
xchg
and
test
mov
fwait
enter
movl
lea
mov
adc
sbb
ret
and
orl
notb
pop
aam
sub
sahf
test
in
mov
push
add
adc
test
xor
sbb
cmp
sbb
in
mov
dec
add
hlt
fisttpll
lret
cmp
lret
xor
lahf
xor
xlat
pop
div
and
add
inc
xchg
adc
cs
int
pop
xchg
push
out
jge
out
dec
sbb
aad
or
jnp
adc
add
lahf
lahf
jl
sub
push
push
inc
jmp
in
ljmp
sbb
inc
bound
add
dec
insb
scas
add
out
xchg
jmp
repz
mov
add
add
add
add
sti
call
mov
lcall
add
in
cs
sub
lret
xor
add
mov
aaa
push
add
cmp
mov
cli
or
fnsave
mov
jb
mov
push
mov
pop
and
arpl
lea
add
arpl
cltd
out
imul
or
lret
mov
leave
into
rorl
sbb
ret
out
add
andl
add
stc
test
push
popf
insl
sub
icebp
fs
rorl
jle
mov
rolb
int
add
add
add
pop
je
sbb
inc
add
add
aam
add
push
fldenv
add
adc
iret
mov
add
add
aas
cmp
ja
adc
sbb
test
fidivs
sub
add
lods
gs
lock
push
push
sar
pop
or
add
imul
out
pop
test
xor
lock
roll
inc
lods
idiv
jns
jo
push
neg
lret
add
add
shl
lea
jmp
xorb
test
ja
or
mov
cmpsb
bound
cltd
int3
jmp
mov
repz
add
cmp
add
rolb
add
dec
int3
jge
fs
insb
mov
out
das
mov
out
fbstp
lods
add
xchg
hlt
or
mov
in
xchg
rorl
lods
shlb
loope
xor
and
add
daa
aad
xchg
add
jge
js
add
mov
push
decl
dec
test
imul
adc
in
out
mov
fldenv
lock
mov
or
add
mov
inc
popa
sti
lcall
xor
lock
pop
mov
sub
shl
xchg
mov
add
add
jnp
add
mov
stc
ficompl
popa
leave
push
lret
dec
fs
and
scas
stos
jb
inc
aam
add
mov
add
adc
jmp
faddl
jmp
sbbb
outsb
sub
insb
adc
add
push
sahf
lds
mov
inc
cmpl
add
and
add
loope
jae
cmp
xchg
outsl
sub
sti
dec
add
jae
inc
movsl
adc
mov
pop
add
cmp
sub
scas
mov
fwait
cmpsb
mov
push
mov
push
lock
add
loope
xor
cltd
in
jns
pop
test
testb
push
jl
loope
pop
add
xor
cmp
and
rorb
sub
das
inc
mov
add
ror
pushf
inc
mov
fdivrl
xchg
cmpsl
rcrl
imul
clc
icebp
push
lds
adc
outsl
mov
mov
test
out
sahf
data16
xchg
jne
aaa
jae
or
xlat
addr16
push
add
and
xchg
sbb
shll
faddl
push
iret
lods
test
adc
das
add
jecxz
push
aad
lcall
adc
and
lret
pop
rcl
lahf
jl
out
hlt
xchg
add
fdivl
scas
mov
adc
add
push
sbb
add
ljmp
sub
rclb
mov
out
es
lret
mov
mov
scas
adc
stc
das
jp
xor
inc
stc
sbb
aaa
xchg
sub
dec
mov
fmuls
xchg
and
flds
pop
jo,pt
adc
sbb
nop
popf
sbb
add
pop
cli
movsb
pushf
push
pop
mov
test
and
push
pop
xchg
das
stos
shlb
mov
xorb
push
lock
push
add
ret
jg
pop
adc
mov
ret
and
mov
cmp
ljmp
inc
cli
stos
roll
das
jmp
push
add
fbstp
xlat
cmpl
add
cmpsb
or
les
pop
xchg
xchg
out
adc
dec
mov
xor
jae
test
or
pop
add
and
data16
jno
lods
xlat
jo
add
bnd
pop
lahf
movsl
sar
sbb
insl
fdivs
in
mov
cltd
add
sub
in
add
out
filds
mov
xorl
add
repnz
test
popa
mov
dec
xchg
jo,pn
dec
loope
stos
push
lods
pop
int
pop
popf
push
das
repz
pop
inc
rorb
cmpsl
pop
gs
push
testl
std
xor
ret
nop
xchg
movsl
pop
shrl
enter
lods
push
mov
jae
xchg
mov
dec
pop
mov
cld
push
movsb
inc
lods
sbb
add
addr16
popl
pusha
fcompl
or
pushf
inc
jae
aam
nop
and
xchg
fmuls
jp
sti
lods
dec
je
xor
sub
call
loop
insl
adc
inc
pushf
mov
sahf
mov
jae
sti
decl
movsb
test
aam
hlt
mov
mov
xchg
add
cvttps2pi
mov
pop
dec
sbbb
inc
rorb
sub
mov
jge
ljmp
out
mov
je
jp
jmp
push
pop
jecxz
scas
mov
cmpsb
add
enter
xchg
scas
popa
add
out
xchg
pop
fldenv
xor
xor
jnp
scas
mov
cmpsl
out
imul
xchg
pop
sbb
in
jg
add
inc
xorb
sti
sub
dec
mov
dec
add
cld
std
mov
clc
xchg
and
jl
movsb
movl
cmp
test
mov
jb
dec
adc
adc
mov
addr16
test
fistpll
int3
mov
sahf
xchg
data16
cmc
add
push
add
in
or
mov
adc
dec
aam
push
leave
into
add
cmovbe
and
in
lea
jnp
imul
lahf
shll
cmp
ret
xor
sar
ljmp
pop
add
pusha
fildl
fstpt
xchg
rolb
verr
cld
dec
add
or
and
inc
add
shrl
xchg
lcall
add
mov
mov
add
adc
add
lods
and
mov
add
gs
sti
inc
add
popa
xchg
pop
fwait
mov
xchg
jg
push
loopne
xor
loope
adc
push
mov
lcall
in
filds
lret
ds
push
pop
xlat
add
add
inc
sub
push
pop
insb
idiv
lea
pushf
in
xchg
out
lods
repnz
ja
sub
js
cwtl
mov
std
scas
mov
ret
xor
xor
jle
cmp
inc
lret
test
sti
push
icebp
lret
add
adc
mov
bound
mov
addr16
ja
aam
mov
jle
out
aas
lahf
xor
mov
pop
aaa
jb
fimull
lahf
dec
dec
int3
loopne
push
shrb
shlb
movsl
sub
ret
jecxz
pop
add
sti
add
and
insl
jne
lea
sti
lret
dec
cmp
repz
sbb
jnp
mov
xor
inc
ret
sbb
add
jnp
dec
add
add
popa
add
and
sbb
shr
cmp
add
pop
fcmovnu
mov
js
je
pushl
cmpsb
or
mov
add
jl
xor
lret
bound
fcmovb
dec
movsb
or
jmp
aad
lods
and
mov
add
jae
int
jns
loop
jmp
and
stc
mov
je
cmc
sub
jnp
cmp
inc
adcl
jae
std
inc
add
or
push
ret
das
dec
data16
mov
cltd
add
ja
jo
dec
cmpsl
push
add
add
movsb
inc
arpl
dec
inc
bound
add
lock
shll
mov
popl
loopne
cmp
aas
fdivrp
aam
gs
mov
sbb
sbb
add
add
roll
daa
jns
add
jae
add
faddl
out
add
sub
push
cmp
add
adc
push
mov
jg
pop
add
push
ljmp
pop
add
push
add
or
lahf
add
in
cmp
mov
add
rolb
sbb
fldl
sti
mov
sbb
int3
in
jmp
add
and
or
fidivl
adc
add
mov
push
xchg
inc
jnp
leave
pop
mov
rolb
scas
cmp
into
mov
sub
xor
lods
jmp
push
mov
add
test
insb
repnz
push
mov
lods
int3
roll
pop
repz
add
add
jns
je
xchg
fistpl
outsb
sub
xlat
sub
cmp
shrb
sbb
cmpsb
or
ss
pushf
xor
aad
xor
pop
jbe
mov
jo
inc
push
xchg
sbb
xor
dec
push
lds
daa
lds
repz
pop
jl
pop
add
xorl
push
sti
mov
pop
dec
call
sbb
add
jnp
push
sbb
cwtl
pusha
sbb
mov
dec
outsl
aam
fidivl
fistpl
and
sbb
xor
loop
in
push
mov
add
add
jnp
incb
and
lods
mov
and
in
lds
mov
mov
cmpsb
and
cmp
add
jbe
xor
sbb
mov
out
add
mov
test
xlat
inc
push
test
mov
outsl
add
push
mov
adc
mov
lahf
idiv
inc
dec
push
add
nop
daa
xchg
jo
ds
add
push
or
and
or
out
jno
mov
and
loop
cld
add
dec
mov
or
add
sbb
dec
add
hlt
xchg
pop
stos
cmp
mov
sub
cltd
imul
loope
add
jecxz
mov
clc
popf
jns
jns
iret
or
add
aas
xchg
js
stos
lahf
push
lock
lods
adc
ja
shl
das
push
dec
test
jg
jmp
and
and
push
fstl
inc
add
pop
and
repz
xor
and
jmp
add
arpl
jmp
mov
lock
push
rcrl
cmpsb
lret
ds
jmp
jns
insb
stc
int3
mov
mov
fwait
or
add
sahf
or
mov
fiadds
daa
sbb
cltd
pop
inc
mov
push
int
aad
cmp
in
dec
aad
dec
loopne
inc
test
ficoml
add
aam
jl
add
and
and
lret
push
shll
pop
xchg
popl
scas
cltd
add
movsb
cmp
fldl
movsb
push
aaa
add
add
call
push
push
nop
mov
test
dec
mov
in
les
scas
movsl
add
mov
js
mov
aad
cs
es
pop
pushf
sub
and
pop
push
js
mov
xor
aas
data16
add
mov
addr16
add
into
ret
add
dec
roll
mov
rolb
mov
or
xchg
fmull
out
lds
jp
pop
or
xlat
add
or
std
or
cmp
mov
mov
add
movsb
xchg
dec
insl
mov
xchg
rcr
fsts
loopne
mov
or
adc
jns
out
nop
lods
out
add
movd
inc
incb
lcall
cmpsb
push
and
mov
adc
push
mov
add
dec
lret
mov
clc
add
add
pop
std
cwtl
add
imulb
adcl
mov
or
add
shlb
xor
in
scas
jnp
addr16
jl
cmpsb
cmpsl
and
ljmp
fnstcw
cltd
movsb
je
mov
push
add
push
inc
push
cld
rol
pushl
dec
add
sbb
add
add
inc
movsl
or
call
rorl
sub
add
out
xchg
mov
mov
add
lds
in
pushf
lcall
arpl
cmp
jbe
adc
add
add
nop
das
iret
sbb
mull
inc
bound
insb
daa
xor
js
pop
xor
xchg
mov
xchg
lret
movsl
mov
xor
subl
lods
testb
pop
xchg
jmp
add
lods
jmp
addr16
jp
lret
and
in
cmc
dec
fwait
sub
add
das
pushf
stos
push
add
lea
sub
cs
jl,pn
loopne
pop
mov
jl
test
dec
pop
inc
or
mov
xorl
mov
xor
in
mov
dec
inc
bound
loopne
sahf
sub
add
xchg
or
enter
add
sub
push
cmpsb
add
cmp
pusha
xor
stos
xor
sub
add
push
repz
int3
add
inc
inc
mov
or
add
cmpsb
mov
test
pop
ss
gs
push
ss
jl
add
sub
lahf
inc
sbb
add
cmc
int3
movsb
mov
cmpsb
out
jno
pop
negl
nop
sbb
mov
cltd
mov
scas
sbb
aaa
or
push
popa
xchg
push
and
std
cmc
flds
xchg
jne
repz
fsub
jbe
int
mov
mov
add
add
test
adc
push
add
dec
push
imul
sbb
iret
adc
push
movsb
iret
in
xor
add
xchg
cmc
into
add
das
push
sub
mov
adc
outsb
scas
jb
repz
dec
test
shlb
int3
jl
jno
popa
sub
test
add
adc
add
mov
add
or
int3
sbb
sbb
add
sub
jno
mov
fidivs
push
xor
cmpsl
add
add
lret
push
mov
sbb
loope
dec
into
add
add
add
cld
mov
and
dec
daa
loope
add
mov
mov
ds
imul
sbb
push
push
loopne
and
dec
xchg
fwait
movsb
packsswb
out
addr16
and
aad
cmp
std
popf
add
lret
mov
pop
rolb
hlt
pop
or
pop
stos
xor
pop
fldcw
out
push
pop
movsb
es
imul
cli
fcoms
insb
sbb
hlt
fidivs
and
inc
xchg
add
outsb
adc
mov
jns
mov
in
dec
mov
add
das
dec
insl
xchg
pop
add
cmp
cli
in
in
sbb
addr16
push
push
lahf
mov
add
pop
add
rolb
add
lahf
mov
cld
cli
add
js
xor
inc
xchg
test
lock
cli
cmp
push
xor
add
gs
add
push
aad
add
clc
jmp
cmc
outsl
sti
xor
cli
xchg
inc
or
add
add
xor
arpl
xchg
out
lock
hlt
adc
jl
sub
push
sti
into
mov
stos
add
arpl
add
jo
addps
cmpsl
add
add
stc
push
adc
add
addl
add
scas
loopne
lret
dec
or
out
cmc
add
or
xlat
test
pop
cmp
add
movsl
sbb
sub
sub
xlat
iret
add
cmp
popa
xor
add
or
add
xor
repnz
sub
dec
mov
xchg
jns
fsub
into
lahf
sub
or
add
sub
pushf
mov
add
pop
jno
sub
xchg
aam
cli
cmc
out
add
sub
in
jb
xlat
mov
cli
jnp
push
addr16
sbb
inc
mov
sbb
xor
in
add
testb
pusha
cltd
add
scas
mov
xor
leave
sub
adc
fiaddl
add
mov
orb
and
fldl2t
sbb
cmpsl
dec
inc
out
in
add
pusha
add
icebp
movsl
add
adc
aad
ret
add
stc
pop
sub
mov
pop
hlt
pop
je
je
mov
loop
xchg
push
inc
cmp
lret
add
push
pop
shrb
imul
xor
xchg
mov
xchg
xchg
js
or
cmp
aad
add
push
insb
xor
add
testb
inc
adc
adc
add
scas
movd
les
mov
ret
in
add
xor
stos
jmp
xor
and
addb
lods
icebp
add
pop
blsic
in
inc
add
mov
pop
xor
jle
outsb
popl
popa
add
mov
je
pop
addr16
add
push
cwtl
or
push
stos
scas
outsb
fcomps
and
out
add
lds
jle
push
int
mov
dec
sub
pop
pop
pop
sub
cmp
mov
add
jmp
cmc
mov
inc
daa
roll
test
stos
push
sbb
jg
mov
jp
dec
bound
add
aaa
nop
add
jno
outsb
rcrb
add
mov
mov
mov
lods
icebp
in
xor
sub
mov
pop
addl
sub
sub
mov
push
mov
ja
repnz
add
xchg
lods
jno
lret
mov
mov
add
dec
push
cmp
add
sti
add
ret
jge
cs
mov
popa
ret
cmp
test
cltd
sahf
mov
add
sub
test
leave
test
ljmp
pop
repnz
xchg
decl
das
add
mov
sarl
add
xchg
ficomps
add
aas
xor
shl
into
sbb
add
jp
or
mov
mov
mov
pop
cmp
data16
xchg
add
leave
push
mov
add
adc
mov
cmp
int3
outsb
push
mov
xchg
mov
int
aas
xor
add
popf
stos
orb
sub
imul
jp
inc
popf
out
fwait
mov
pusha
add
add
jmp
loop
roll
and
inc
sub
add
sub
outsl
add
das
aam
jo
iret
add
rolb
jns
mov
push
clc
jmp
mov
pop
ret
inc
add
add
add
add
sbb
popf
sub
lods
scas
outsb
sarl
pop
and
test
in
int
pop
imul
rolb
shll
clc
push
ret
jb
add
cmp
ljmp
add
cmpsl
cld
mov
repnz
mov
cmc
mov
push
clc
adc
add
lret
cmp
leave
out
int
cmp
sub
ljmp
dec
add
pop
jbe
jb
push
jae
add
pop
mov
add
xor
and
daa
jp
dec
je
mov
lock
fcompl
adc
inc
push
jb
imul
add
fisttpl
imul
add
push
test
clc
add
mov
out
push
outsb
roll
pop
add
cmp
cld
sbb
and
fsubr
in
jns
jo
nop
jbe
inc
pop
fcmovne
or
in
inc
add
hlt
dec
enter
idivb
pusha
dec
cmp
jl
mov
adc
stc
inc
pop
lcall
adc
shll
xlat
push
push
imul
dec
lods
dec
loope
and
int3
xchg
les
add
fldt
mov
push
pop
fisubl
add
push
xlat
add
add
or
add
stos
mov
test
pop
js
stc
adc
pop
inc
jnp
lock
enter
lds
outsb
je
jnp
retw
loope
popa
sbb
neg
fldt
push
jl
inc
test
or
adc
pop
adc
xchg
adc
cwtl
inc
cwtl
xor
add
jns
lcall
and
pop
das
cmc
mov
add
js
cmpsb
adc
fmuls
cmp
fsts
mov
fld1
mull
mov
add
and
mov
out
imul
mov
inc
lods
ret
loop
jnp
outsl
stc
rcr
pushf
jmp
or
sub
and
int
add
ret
int
adc
les
and
movsl
rorl
add
enter
add
movsb
mov
or
mov
and
idivl
ljmp
insb
or
inc
xchg
shrl
add
sbb
dec
add
dec
cwtl
xor
xchg
add
outsl
jb
andl
ret
mov
lcall
add
add
sbb
fistpll
or
dec
out
add
int3
inc
push
lods
ljmp
js
lret
cmpsb
or
add
xchg
es
cmp
outsl
call
jbe
outsl
add
dec
out
aam
fmuls
add
jge
jmp
mov
pop
pop
mov
rolb
push
mov
aas
add
cmp
add
call
sbb
fildll
out
inc
cmp
cli
out
add
outsb
scas
sub
scas
not
add
nop
fwait
and
xchg
add
mov
sub
mov
sub
rcr
imul
mov
dec
add
sti
fwait
roll
fcoms
mov
int3
push
mov
cwtl
mov
sahf
sub
aam
adc
xchg
mov
sbbl
push
add
loop
pop
mov
cmp
add
cmp
cmp
xorl
fwait
and
dec
sub
js
and
and
subb
add
xor
cmp
dec
cmpb
pop
rolb
add
out
and
js
sbb
and
lods
dec
lldt
ret
das
xor
hlt
bound
aaa
mov
movsb
or
jb
add
ret
in
push
xor
xchg
das
sarb
clc
sti
add
push
fldcw
or
sub
add
xchg
sti
idivb
test
add
inc
xchg
dec
and
dec
add
xchg
jmp
mov
mov
add
add
das
test
or
es
push
mov
mov
xchg
nop
xor
sub
ret
insl
mov
pop
loopne
aad
sbb
dec
out
aad
mov
pop
rol
in
flds
int3
dec
mov
mov
and
xchg
push
xor
xchg
add
add
adc
sti
xchg
sbb
cmp
push
add
jb
cmc
fistpl
shlb
aam
add
stc
ffreep
ds
sahf
je
fiadds
and
inc
test
xchg
add
shl
xor
sbb
add
mov
adc
in
mov
scas
out
lds
movsb
lods
add
rcl
jb
add
out
int
pusha
mov
sub
mov
shll
mov
mov
cwtl
mov
or
mov
dec
stc
pop
inc
cmpsb
out
mov
nop
cld
add
inc
xchg
cli
cmc
xchg
imul
add
hlt
cmp
ret
hlt
sub
das
add
add
xor
repnz
lds
sarl
les
add
fiaddl
jmp
adc
adc
xor
cld
into
and
push
fisubrl
test
rolb
cli
pop
sbb
add
cmp
push
dec
insl
adc
arpl
add
xlat
pop
bswap
repz
pop
inc
add
cmp
xor
and
cmp
or
sar
scas
push
popa
out
icebp
pop
add
jne
sub
aaa
jns
add
mov
dec
mov
push
sub
movb
cli
outsb
cmp
inc
lods
sahf
inc
adc
mov
stc
mov
sbb
je
sub
sti
incb
out
and
dec
mov
add
pop
pop
pop
into
xor
add
mov
cmp
int
add
add
add
add
fidivrs
add
adc
cwtl
mov
xchg
jg
jp
loopne
ret
add
cmp
pop
add
and
xchg
push
jmp
xor
icebp
dec
adc
scas
inc
add
xchg
inc
aas
scas
xor
add
fsubs
mov
lcall
decb
dec
push
das
call
out
lock
sbb
pop
add
inc
lods
addr16
add
push
xor
stos
jg
adc
xchg
jnp
mov
mov
cmp
js
ds
push
out
mov
xor
rclb
orl
cmp
leave
lcall
add
mov
fdivs
stos
fnstenv
xchg
add
mov
jns
popf
test
sarl
bound
sub
es
jmp
rorl
inc
and
fdivs
push
pop
loopne
add
sub
pushf
data16
out
jmp
jb
pop
xchg
std
cwtd
in
pop
cmp
mov
sbb
repnz
out
xor
loope
data16
movsl
rcr
sbb
lea
movl
pop
push
arpl
add
loopne
jecxz
push
add
in
xchg
xor
jb
test
in
out
leave
mov
scas
enter
xchg
and
sub
addr16
sub
push
out
push
jp
mov
pushf
adc
aas
pop
ds
mov
inc
insl
fldenv
ds
std
mov
jp
pop
lea
sub
add
in
rcrb
ret
inc
push
push
outsb
loop
add
imul
xchg
xchg
cmc
in
andb
add
fwait
daa
cmp
dec
mov
pusha
call
jmp
pusha
rcrb
loope
shlb
pushf
add
cltd
pusha
mov
mov
inc
push
add
adc
cltd
sbb
inc
roll
iret
das
dec
xorl
mov
pop
sub
mov
sarl
rclb
mov
add
das
movl
add
adcb
add
sbb
addr16
out
pushf
movsl
lcall
xchg
loope
jb
and
mov
ret
test
jno
or
add
jae
gs
insl
cmpsl
mov
add
sub
push
mov
add
std
add
or
fadds
push
into
inc
jbe
xchg
push
add
call
mov
into
fldl
pop
clc
lea
shl
xchg
add
int
aaa
add
push
mov
scas
cmp
mov
sbb
adc
test
popf
xchg
jae
in
push
cmp
lods
subb
xor
add
jge
cwtl
add
out
add
xchg
mov
or
bound
icebp
add
jl
fnstsw
add
push
mov
cltd
sub
add
and
jp
fwait
shl
mov
negb
add
jp
sbb
pop
bnd
mov
test
sub
popf
lds
stos
xchg
add
pop
mov
push
xor
mov
push
outsb
jbe
loop
or
lret
add
add
jp
mov
insl
jl
or
mov
xchg
fdivp
mov
mov
lahf
fdivs
insl
filds
xchg
inc
xchg
arpl
sbb
retw
jne
xchg
in
xchg
or
add
lods
lock
aad
mov
flds
movsl
arpl
sbb
dec
add
push
insb
ljmp
add
sub
jl
push
js
stos
fidivs
clc
clc
loope
xchg
or
xchg
pushf
cmpsb
ja
add
mov
inc
add
les
fnstenv
out
and
ret
outsl
dec
dec
cmp
push
jae
push
fstps
int3
je
jb
cli
sbb
add
add
mov
xchg
sti
ljmp
dec
icebp
movsl
push
sbb
mov
jbe
out
fisttpll
jmp
mov
sub
add
es
push
fildl
arpl
and
push
les
xchg
leave
add
push
div
outsb
aam
and
pop
jns
add
add
dec
xchg
dec
call
insb
sub
pop
leave
fildl
ficoms
inc
add
add
add
xchg
enter
push
add
mov
mov
or
enter
sbb
dec
push
push
inc
cmpsb
imul
add
outsb
mov
mov
inc
jns
ds
lock
add
add
popa
dec
jmp
sldt
mov
ds
add
sbb
jl
std
in
pop
clc
add
lods
jne
xchg
dec
ret
mov
into
xchg
sbb
or
test
sub
inc
mov
add
pop
pop
subb
xchg
aad
xchg
add
adcb
popa
push
fistps
cmpsb
mov
cmc
ficompl
add
xor
or
cli
mov
jecxz
mov
mov
mov
test
in
adc
iret
jp
xchg
push
cli
clc
add
dec
add
push
add
add
dec
jns
xchg
jmp
sub
out
add
call
subl
hlt
aam
mov
addb
add
dec
loopne
xchg
jle
push
in
mov
pusha
out
daa
cmp
loope
push
je
add
push
mov
add
pusha
push
int3
dec
testb
lods
xchg
scas
and
add
mov
cmpsl
in
cmp
addr16
add
jmp
sahf
je
inc
js
cmp
sub
adc
arpl
iret
add
pusha
add
cmc
iret
push
data16
xor
das
cmp
xchg
mov
mov
mov
or
inc
scas
loope
jne
popf
adc
xor
cmpsb
cmp
sbb
test
mov
add
add
in
fistl
pop
add
and
pop
add
xchg
aaa
cs
std
ss
stos
add
push
mov
in
mov
sbb
addr16
dec
pop
mov
add
sub
lret
mov
cmpsl
sbb
mov
add
jle
in
jge
imul
movsl
cmp
stc
sbb
add
push
ret
add
call
lea
out
in
lods
mov
decl
lods
fs
aad
dec
test
push
mov
adc
cmpsl
mov
sbbl
sub
xchg
clc
add
dec
add
add
sbb
lods
jg
out
adc
mov
int3
sbb
andl
adc
pop
fistpl
mov
mov
nop
fildl
jne
mov
repz
jo
xchg
xor
fadd
add
mov
pop
add
push
repz
push
sub
xor
cld
addl
icebp
test
rclb
jne
push
rorl
insb
xchg
add
and
lock
cmpsl
or
and
jb
fldcw
push
lods
popa
movsl
push
ret
pushf
mov
pop
dec
pop
jp
pop
lahf
sbb
ss
test
mov
add
pop
inc
out
xchg
mov
cltd
push
ret
aad
push
nop
mov
cmp
jle
jne
sbbb
xchg
in
add
add
cmp
sbb
xchg
mov
jns
push
add
add
sarl
cmpsb
cmpsl
add
sub
add
cltd
xchg
inc
hlt
add
ja
lds
add
mov
imul
add
roll
bound
inc
sti
jp
xor
hlt
xchg
cld
add
dec
sub
inc
lock
testb
mov
inc
add
mov
push
jmp
add
repz
mov
inc
lds
cld
jo
cmp
pop
cwtl
push
mov
sub
adc
fbld
repnz
cld
fdiv
std
cltd
hlt
aaa
jno
add
sbb
lods
pop
hlt
int3
out
fs
ljmp
cmp
cmp
cltd
je
hlt
pusha
add
lahf
out
mov
les
push
add
ret
jnp
jae
dec
idivl
loop
mov
call
add
jno
das
inc
data16
es
fldt
add
inc
pop
iret
add
movsl
push
add
popa
xchg
jmp
aas
cmp
mov
incb
xchg
movsl
cmp
repnz
dec
test
jg
cmp
jns
mov
loopne
rcrb
or
add
call
fdivs
add
aad
add
mov
ret
lret
add
loop
pop
add
pop
add
iret
daa
loop
dec
add
sahf
aaa
in
push
jne
icebp
add
mov
add
notb
mov
int3
pop
test
ljmp
xchg
add
mov
add
testb
adc
push
lods
clc
add
xor
dec
xor
repz
ja
testl
ss
sbb
js
cs
jmp
stos
add
enter
ss
mov
mov
adc
clc
les
stc
into
sub
sub
jns
cmp
lock
out
ljmp
arpl
out
push
test
pop
push
int3
rcr
pop
popf
pop
cmp
add
es
inc
jns
std
es
test
cmc
cs
les
mov
add
or
call
sub
jo
sbb
dec
cmpsl
sbb
lea
data16
cmp
cmp
repz
cmp
mov
jnp
loope
jmp
sarl
pop
cs
add
lock
add
daa
mov
push
mov
sarl
pop
add
push
leave
aad
add
add
push
movsl
mov
pop
int3
insb
add
dec
loop
mov
inc
out
outsb
adc
jb
outsl
add
pop
roll
rolb
xor
ds
push
rclb
jg
test
xor
jnp
add
pop
jb
cmp
xorl
or
cltd
jp
push
pop
add
or
jmp
idivb
push
in
add
mov
lds
sbbb
fs
pop
pop
cmp
movl
inc
add
add
pop
lods
repnz
add
flds
pusha
jmp
pop
mov
es
sbb
lahf
sbb
xor
jae
in
ds
test
adc
repz
imul
addr16
jp
add
push
push
add
xchg
xchg
out
lods
cmp
mov
sbb
cltd
add
xchg
and
fmuls
and
bound
loope
inc
cwtl
repz
sbb
sub
add
push
add
jae
icebp
int3
add
push
sbb
pop
js
dec
arpl
enter
in
aas
xchg
adc
into
sahf
out
xor
push
mov
sub
lods
xor
cmp
popf
adc
push
dec
fstps
push
add
fcom
push
dec
add
int3
pop
in
add
sbb
pop
cmpsb
mov
subl
jg
jno
loope
and
add
daa
sbb
inc
add
xchg
js
mov
add
mov
lret
mov
sbb
add
add
hlt
js
gs
stos
add
shl
add
add
inc
test
leave
ljmp
jno
dec
imul
mov
mov
add
jge
mov
add
loope
loope
out
loop
dec
add
or
leave
add
sub
add
add
add
mull
and
adc
add
nop
pushl
popa
xchg
pushf
movsb
or
pop
cwtl
je
inc
test
or
out
fsubr
int
stc
xor
jmp
pop
hlt
cmpsl
and
insl
gs
mov
adc
inc
jmp
add
xor
inc
out
xlat
add
outsl
in
cld
add
roll
jns
add
push
jb
mov
sub
negl
and
pop
jg
call
test
dec
and
add
inc
dec
add
xor
adc
mov
xchg
clc
cmp
push
xor
stos
add
add
pusha
jae
sub
es
mov
lock
push
jno
mov
cltd
and
bound
adc
mov
daa
shll
adc
insl
add
adc
jl
or
das
push
lcall
dec
jl
fs
xor
mov
loop
xlat
mov
push
icebp
filds
leave
out
data16
mov
lret
in
adc
ret
mov
add
movb
daa
sbb
add
lret
pusha
adc
test
push
jl
aad
scas
leave
cmpsb
aaa
fistpll
inc
gs
xor
or
idiv
cmpb
mov
add
jno
ficomps
mov
cmpsb
add
add
rolb
add
xchg
add
out
filds
add
and
cltd
fs
add
jns
inc
jno
sbb
add
call
mov
ds
push
nop
pop
fwait
neg
xchg
xor
mov
test
decb
iret
fistpl
add
add
add
push
sbb
adc
add
dec
add
insl
or
aad
add
imul
pop
push
fildl
pop
stc
dec
out
sub
mov
rolb
es
lret
push
int
pop
lds
add
add
xlat
add
enter
add
push
pop
xor
pop
xlat
movsl
sarb
xor
adc
negl
cli
iret
add
loope
push
push
jmp
sub
mov
fucomip
mov
fnstenv
add
leave
and
jae
stc
or
gs
push
jge
add
inc
add
xor
mov
addr16
orl
cli
or
inc
xorb
cmp
subl
mov
daa
xor
lea
icebp
add
in
cmp
sub
cs
xabort
pusha
add
pop
xchg
mov
xor
lea
dec
rcll
xchg
jno
push
dec
addb
js
mov
mov
lea
stc
add
fcomps
add
enter
aad
or
addr16
inc
mulb
dec
add
out
sbb
inc
pop
addb
loop
in
inc
pop
fsubr
arpl
sbb
push
outsb
lcall
add
rcrl
xchg
push
or
stos
add
mov
and
nop
add
push
addr16
insl
push
add
pop
add
add
mov
stos
int
stc
ljmp
jle
aam
pushf
fisttpll
jno
repz
xchg
xchg
test
arpl
cmpl
mov
repnz
sub
and
lret
stos
dec
popf
cmpsb
jge
cwtl
roll
fidivs
lods
out
rcrl
inc
jne
jmp
out
inc
ja
or
std
dec
addl
mov
mov
add
fwait
add
mov
push
inc
sub
cmp
sub
test
add
pop
add
icebp
sbb
xchg
out
roll
pop
mov
out
stc
inc
sub
in
aaa
push
add
int
push
clc
xchg
sub
sub
addl
jg
jnp
mov
add
data16
add
jae
pop
mov
test
or
mov
inc
gs
push
push
cmp
mov
ficoml
add
add
jl
in
inc
cmp
in
add
xchg
sub
add
add
xchg
inc
cmp
mov
dec
clc
mov
jmp
daa
add
mov
pop
adc
test
add
stos
scas
add
mov
in
xorl
mov
push
push
pushf
and
mov
push
inc
loop
test
repnz
add
add
decl
iret
lret
mov
and
mov
dec
adc
insb
mov
add
out
dec
hlt
scas
add
repz
inc
sub
mov
scas
rcll
add
nop
xchg
xlat
add
sti
test
push
addr16
mov
lods
test
notb
jns
pop
iret
dec
fsubrp
add
pop
or
jge
mov
sub
add
testl
cmp
add
pop
mov
pop
fcompl
lcall
test
fdivs
fcomip
clc
stos
or
lock
in
jno
add
lret
sbb
add
adc
cmp
push
jmp
sbb
inc
push
dec
shrb
add
xor
iret
sbb
lea
mov
and
sub
add
add
loopne
cmp
loope
pop
and
and
sbb
enter
test
stc
out
lcall
or
shrd
loope
shrb
test
lret
jmp
scas
ret
add
add
mov
add
sbb
leave
daa
add
decb
sub
push
xchg
add
lods
aam
ja
add
jmp
testl
xchg
stc
or
aad
pop
cmpsb
jae
mov
vpsrlq
lock
loope
lds
sbb
xchg
and
and
add
loop
add
add
add
mov
push
dec
mov
das
stos
mov
jecxz
ljmp
pop
adc
mov
test
popl
rcrb
or
mov
push
cmp
xor
add
sbb
dec
repnz
mov
add
dec
xchg
add
add
xchg
daa
nop
call
mov
out
sarl
cli
mov
data16
xchg
sub
cli
cli
pop
sbb
movsb
xor
out
shlb
ss
lds
adc
sub
xor
or
hlt
cmc
insb
or
xor
sbb
jno
testl
xchg
xchg
fisubl
mov
arpl
jbe
rcll
sub
sub
add
insl
cmp
add
cwtl
push
add
dec
pop
data16
push
xor
add
cmp
fwait
adc
sub
adc
xor
jae
and
in
fildl
call
pop
or
jmp
mov
jo
lcall
cmp
add
jmp
pop
add
mov
sub
scas
add
ljmp
pop
aam
lret
or
repz
mov
sub
mov
add
int3
movsl
adc
mov
xchg
cmpsb
or
lods
out
add
sbb
sbb
mov
fnstcw
cli
xor
xchg
lods
ss
pop
cmpsl
rol
lcall
les
pop
dec
add
add
inc
mov
ja
imul
pop
arpl
push
mov
or
lcall
push
cli
xor
js
pop
test
xchg
int3
shl
add
fidivrs
les
arpl
pop
inc
cmp
adc
dec
or
pop
lods
fsub
mov
scas
stc
pop
cmp
aaa
popa
push
jb
and
push
lock
xor
sub
jmp
sbb
testl
das
pop
jnp
push
sub
stc
add
jmp
add
pop
ss
sahf
add
mov
pop
add
xchg
add
jbe
sbb
mov
xlat
cld
add
bnd
je
inc
mov
dec
add
movsl
fildll
mov
push
movsl
aaa
sbb
in
cmp
push
cmp
into
mov
mov
inc
sub
cmp
hlt
add
mov
sub
imul
lea
jge
add
stos
jno
add
iret
sub
dec
pop
xchg
lret
out
sbb
mov
jecxz
fdivs
fistpll
jge
xchg
sbb
add
imul
jmp
pop
push
push
fs
push
les
push
mov
dec
fld
pop
add
clc
dec
push
ds
or
roll
int3
nop
testl
adc
push
add
mov
xchg
and
add
cmp
test
dec
jno
dec
add
adc
and
sbb
sbb
sub
xchg
mov
add
fcomip
out
movsb
cmpb
xorb
rorl
pop
lret
mov
out
jmp
mov
gs
sub
push
dec
arpl
push
dec
lret
imull
mov
push
or
dec
mov
sub
add
mov
inc
fisubrs
ret
and
outsb
mov
add
cwtl
mov
push
mov
add
mov
stos
call
inc
add
es
sbbl
test
or
jnp
add
cmc
and
enter
adcl
out
add
pop
add
outsl
push
pop
scas
or
rol
add
add
add
inc
lret
mov
insl
sub
push
ret
sbb
hlt
rolb
fwait
arpl
test
aam
in
filds
add
addr16
xor
add
insl
scas
inc
and
fabs
andl
enter
add
lock
fmull
mov
push
cmp
imul
add
fstpl
sub
pop
repz
cli
frstor
jo
pop
add
sub
cld
mov
and
adc
mov
mov
lahf
pop
scas
mov
add
das
aad
xchg
push
test
ss
movsb
push
pop
movsl
pop
fsubl
jno
icebp
cmp
es
cmpsl
xor
imul
push
cmp
arpl
jo
or
sbb
adc
pop
mov
test
sub
int
xchg
jg
outsb
push
repnz
pop
clc
arpl
ret
add
outsb
fcomps
ret
add
pop
cltd
out
lock
xchg
inc
xchg
sub
mov
xchg
sub
movsb
fwait
icebp
pop
xor
sar
fsubr
add
mov
inc
sub
aaa
push
mov
test
lods
and
imul
ret
test
out
lds
je
mov
add
xchg
add
lret
add
les
push
scas
ret
cmp
test
lret
xchg
bound
cmc
add
jg
dec
lds
add
out
add
fcoms
push
inc
aaa
fs
push
cli
inc
mov
in
inc
jmp
xchg
pop
ja
dec
inc
lcall
mov
cltd
cmp
add
add
bnd
add
mov
sbbl
mov
push
push
jecxz
add
dec
add
jno
xor
cmp
sbb
inc
sbb
push
add
push
add
push
xchg
incb
pop
sub
add
lea
testb
sbb
andb
lds
sbb
jo
lods
dec
sub
dec
mov
scas
add
pop
mov
test
dec
cmp
add
push
add
out
push
dec
popf
add
dec
lds
push
and
add
jle
mov
add
inc
push
xor
mov
lds
daa
add
add
or
push
arpl
in
sub
add
cmp
cmp
popf
call
add
aad
pop
or
pop
cmpsb
and
or
add
sbb
and
xor
xchg
imul
repnz
push
push
inc
jecxz
lock
adc
push
or
mov
inc
xchg
shrl
dec
ffree
test
sub
mov
inc
cmp
add
subb
and
jnp
mov
roll
or
insl
shrl
hlt
ret
adc
pop
add
cmp
and
mov
push
addl
mov
hlt
adc
inc
clc
fs
add
loopne
add
mov
jl
cmp
testl
stos
loopne
test
pop
sbb
std
push
xchg
add
xchg
add
mov
jae,pt
icebp
jle
xor
lahf
das
add
mov
lret
aam
in
cltd
adc
and
add
add
adc
into
repnz
and
test
push
xchg
push
inc
xor
add
add
add
cmp
pop
cmpsl
xchg
gs
cmpsb
lret
ret
xchg
xchg
adc
mov
push
sbb
test
cmpsb
add
test
xor
sbbl
mov
scas
or
sti
mov
jns
mov
je
pop
fistpl
jbe
mov
popf
outsb
notl
nop
add
inc
movsl
sbb
pop
fwait
adc
add
add
mov
scas
fmull
xchg
outsb
lods
adc
mov
cmp
sub
sbb
sbb
lods
xor
pop
ss
int3
loopne
inc
push
mov
pop
inc
jge
pushf
adc
arpl
push
mov
dec
xor
add
mov
mov
popa
add
sbb
add
push
fnsave
aam
add
mov
faddl
test
mov
sahf
push
push
ds
mov
push
jl
add
adc
mov
je
adcb
push
sub
jle
clc
and
fsub
push
mov
ljmp
xchg
hlt
lea
add
sub
push
adc
mov
ja
push
aaa
fsubl
sti
mov
pop
mov
jno
iret
cmp
outsb
xlat
add
mov
or
test
add
jp
mov
xor
jl
int
mov
sbb
scas
sarl
mov
adc
ret
xchg
sbb
inc
mov
pop
adc
jno
inc
add
mov
add
sub
ljmp
add
jbe
jecxz
cmp
cmp
adc
jg
cmp
mov
push
cmp
lds
dec
dec
inc
mov
xchg
std
scas
add
mov
add
cwtl
popf
add
cmp
les
enter
mov
add
jecxz
add
loop
cmp
adc
mov
aas
fcmovne
and
in
xor
adc
mov
jae
in
ja
or
add
add
into
inc
mov
icebp
aaa
clc
xchg
adc
or
add
ret
sahf
cli
xlat
push
cltd
aas
and
add
out
cmp
xchg
fiaddl
add
je
imul
out
jmp
push
fwait
cwtl
mov
xor
insl
xor
fsub
jb
cs
xchg
movl
jp
jl
sahf
add
pushf
mov
add
xor
out
and
aas
shrb
insb
mov
cli
sub
daa
or
cmp
add
xor
inc
and
decb
add
jns
fdiv
roll
loope
xor
mov
adc
sub
sbb
out
pop
add
xchg
xchg
fs
mov
add
sub
hlt
bound
fistpll
and
mov
stos
or
add
jne
sahf
mov
outsb
fs
push
and
mov
adc
add
push
pop
int
inc
hlt
lea
das
insb
sub
jns
mov
jb
add
xchg
jo
pop
es
in
adc
push
js
mov
add
cs
insb
add
aas
mov
lcall
shl
jb
lods
add
dec
add
mov
fwait
pop
cld
push
ret
repz
aad
mov
xchg
imul
push
pop
mov
pusha
cld
xor
cmc
fs
in
mov
stos
add
stos
fstpl
xchg
iret
jno
xor
ret
xchg
clc
fwait
rcrb
add
les
mov
jg
sub
test
insb
xchg
insl
add
pop
push
add
iret
cmpsl
gs
pop
in
sahf
and
cmc
in
push
sahf
dec
inc
dec
xchg
cli
sub
movsl
and
mov
out
jnp
push
adcl
aam
dec
mov
add
mov
loopne
inc
lock
pushl
cmp
fisubl
mov
add
dec
mov
lock
xchg
push
push
adc
ja
mov
sbb
add
je
bound
xchg
ljmp
add
ret
add
pusha
cmp
xor
sbb
jp
add
mov
fiaddl
pop
add
jns
mov
add
push
bound
adc
aad
hlt
loope
push
cmp
cmp
jmp
add
add
fdivs
sub
and
add
shlb
cmp
xchg
fisttpll
add
das
xor
insl
add
add
adc
push
les
add
in
rcrb
xchg
icebp
ret
ds
pop
pusha
add
sbb
pop
imul
and
cmp
lds
cmp
ret
rolb
lcall
inc
in
addb
add
int
or
leave
mov
ret
jp
xlat
mov
stos
inc
and
dec
mov
sbb
xor
subb
aas
sahf
setl
enter
in
fldt
mov
test
dec
data16
adc
pop
ljmp
pop
jbe
mov
sbb
incl
push
adc
hlt
stos
cmpsl
and
out
adc
and
jge
in
in
sbb
sub
shlb
loope
xor
add
add
fnsave
lock
imul
adc
into
data16
lret
add
bound
cmp
add
loop
push
insb
push
xor
fucomip
cwtl
popa
cmp
add
divl
shrb
icebp
mov
ret
add
add
popl
add
aas
fbld
ja
dec
sti
add
fstpl
mov
cld
outsb
cmp
xchg
inc
mov
xor
je
ja
in
dec
jl
xchg
push
push
add
adc
pushf
fwait
ret
adc
mov
sbb
mov
add
xchg
xchg
sbb
add
dec
add
pop
xchg
xor
stc
and
pop
inc
xchg
add
lahf
nop
test
movsb
inc
loope
scas
xchg
add
add
add
mov
jnp
and
call
cmpsb
add
jle
add
addr16
test
imul
cmpsb
mov
std
mov
inc
jnp
popa
mov
add
rcrb
scas
add
add
xchg
loope
je
lret
in
fwait
arpl
jp
mov
or
test
inc
jbe
pop
clc
iret
cmpsb
nop
mov
cmp
inc
cld
sbb
aaa
push
mov
add
add
insb
xchg
or
push
add
mov
cmpsb
push
pop
repz
add
es
pop
fwait
add
add
sub
add
mov
xchg
sub
jnp
negb
lcall
add
mov
jae
push
add
xor
cmp
xor
mov
cli
clc
add
mov
pushl
mov
or
loopne
ret
sti
mov
add
je
push
je
xorl
in
fnstenv
xor
pop
xchg
dec
movsl
fistpl
or
loop
aam
jb
xchg
fwait
mov
icebp
sub
inc
rclb
jp
add
jns
mov
add
lea
add
and
mov
adc
ror
imul
ljmp
mov
jae
add
lret
ljmp
sbb
add
cmp
adc
popa
xchg
add
pusha
dec
mov
jg
mov
jbe
push
add
insb
out
xchg
mov
dec
pop
add
es
add
xor
xchg
adc
mov
in
test
cmpsl
dec
loope
fidivl
add
dec
pop
inc
push
into
cs
jae
dec
push
mov
inc
or
cli
scas
push
add
sbb
jae
or
jle
cmpsb
arpl
push
aaa
pop
mov
adc
es
fadds
int
mov
adc
data16
mov
je
out
dec
add
insb
ljmp
xchg
mov
mov
add
call
add
lock
inc
jns
ffree
lcall
mov
pop
insl
jbe
xor
popl
add
sub
loopne
sub
add
xchg
xor
adc
add
addb
push
sbb
dec
push
xor
shl
in
push
inc
add
stos
lret
fidivs
inc
jae
add
fmul
out
in
mov
push
push
dec
add
loope
leave
pop
xchg
and
add
aad
or
jnp
pop
insl
call
sbb
inc
sub
cmpsb
mov
add
xlat
push
jo
and
andl
add
scas
es
jb
test
mov
imul
jne
movsb
push
rcrl
imul
ret
pop
and
or
push
jae
xchg
fs
xor
add
jle
add
fs
je
add
pop
add
out
pop
fwait
mov
fiaddl
jae
dec
pop
push
mov
jo,pn
add
add
add
sub
es
leave
mov
dec
adc
rorl
add
arpl
add
adc
xor
dec
mov
imul
cli
jge
ret
pop
int3
sbb
push
popf
lcall
loopne
cli
adc
aas
jecxz
nop
stc
mov
add
add
jge
push
pop
sub
add
out
testl
push
and
mov
dec
scas
loopne
push
jnp
ljmp
cmp
and
fiadds
frstor
hlt
cltd
push
add
sti
or
test
sbb
push
lock
gs
sub
pusha
les
mov
jp
or
xchg
jle
out
add
data16
sbb
dec
xor
adc
or
mov
das
out
or
shlb
into
sub
xor
daa
jge
push
gs
xchg
pop
mov
mov
xchg
js
add
sub
add
je
push
rolb
add
sub
lcall
mov
xchg
add
mov
rcrl
cwtl
call
cli
call
dec
xchg
add
add
sbb
sub
les
add
add
xor
pushf
add
push
cltd
mov
iret
and
inc
call
jecxz
push
aam
xchg
fbstp
cmp
push
xor
rorl
fs
or
xchg
daa
nop
or
movsl
jmp
add
mov
aad
negl
fcomps
add
incl
clc
sbb
jne
pop
add
iret
add
in
mov
ss
in
jle
add
fsubp
orl
arpl
or
pushf
add
mov
push
test
dec
fiadds
push
imul
inc
int3
loop
xor
lahf
addr16
es
cltd
mov
repz
add
movsl
add
ret
dec
cmc
add
push
ret
mov
inc
lret
add
pop
cmp
jbe
mov
imul
lods
rolb
mov
push
inc
outsl
negb
or
push
shll
adc
mov
loope
add
lds
jge
aam
adc
ds
sbb
sub
xchg
popf
shr
sub
and
jmp
cmpsb
rclb
jb
mov
inc
mov
add
add
dec
add
add
les
leave
add
sub
out
add
ss
stos
add
adc
enter
loope
jbe
lret
rcrb
mov
add
idiv
mov
inc
push
add
xlat
add
xchg
pushf
jno
enter
add
mov
in
add
sbb
es
movsl
xchg
push
negl
ljmp
aaa
mov
mov
in
xchg
enter
add
out
pop
sti
out
clc
and
in
test
cmp
mov
add
mov
pop
stos
leave
sub
stc
movl
add
or
push
clc
add
gs
inc
icebp
inc
sbb
in
push
add
not
bnd
jnp
pop
jge
testl
daa
dec
test
inc
pop
int3
xchg
xchg
popf
add
add
in
jae
xchg
clc
ss
mov
xor
cld
int3
sub
bound
in
pusha
add
lcall
adcb
lcall
add
push
add
ror
pushf
cmpsl
imul
aad
pushf
in
stos
add
xor
pushf
xor
fidivrs
incl
repz
in
add
cs
add
addr16
popf
jne
sbb
and
rcr
cmp
loop
sbb
sbb
add
jno
add
jle
lret
adc
and
mov
mov
rorl
jae
xor
add
mov
push
fsubrp
outsb
push
cltd
add
jae
fistpl
pop
cmp
mov
add
add
in
bound
or
insl
jle
imul
add
push
push
loopne
in
iret
sbb
mov
lret
test
jl
or
clc
shrl
addr16
lahf
movsb
scas
test
add
ja
das
cmpsl
dec
outsl
rolb
cmp
aas
lcall
dec
sub
ljmp
xor
das
ficompl
add
push
xchg
mov
xchg
pop
ret
jg
dec
jo
dec
sbb
adc
lds
addl
xor
cmp
adc
or
add
fdivl
push
sub
mov
add
into
popa
aad
nop
add
shrl
mov
push
es
cs
and
sarl
sarl
lods
pusha
fldl
outsl
hlt
sub
cmp
imul
inc
xchg
mov
sbb
inc
mov
popa
sbb
jae
add
push
cmpsb
bound
int
testl
add
add
add
sbb
jecxz
pop
js
ja
jge
mov
adc
xchg
mov
jg
add
subl
lea
cwtl
les
sub
stos
mov
pop
add
add
jo
fs
cmp
mov
popa
out
sti
add
pop
daa
repz
iret
xor
in
pop
push
mov
in
add
pop
add
add
popf
outsl
add
add
or
xchg
mov
fiadds
cld
lret
rcrl
insb
pop
incb
add
cmp
add
add
mov
popa
cmp
fwait
test
dec
add
cmp
ljmp
jle
mov
adc
jp
and
sub
cld
mov
sti
test
test
pop
inc
lcall
mov
push
add
xchg
outsl
or
lret
jle
mov
pop
pop
fmuls
int3
sar
jp
inc
push
mov
add
mov
sub
inc
mov
popf
add
jbe
inc
jge
scas
loope
add
xchg
cmp
and
xchg
sbb
hlt
sbb
lret
fsubs
mov
data16
add
mov
add
sub
leave
inc
push
addb
cmpl
scas
xlat
cmp
test
call
add
popf
xchg
test
add
lods
add
inc
flds
add
sbb
leave
push
subl
lods
add
cld
stos
rolb
add
ret
pop
add
stos
aam
fdivrl
push
lods
in
add
out
add
add
ret
aad
push
mov
sub
dec
out
pusha
xor
mov
add
icebp
dec
pop
push
push
out
popa
jl
test
movb
addb
xchg
shrb
push
fisubl
or
test
ljmp
add
mov
gs
inc
jecxz
sar
add
test
mov
sub
add
popl
push
add
add
add
cli
mov
mov
mov
nop
add
lcall
cmp
mov
movsl
pusha
scas
add
cmp
rcl
fstl
cmpsb
add
lods
test
mov
mov
and
subl
sarb
add
repnz
sti
rolb
cltd
bound
push
lock
mov
pop
jns
adc
aas
jo
push
or
aad
movsb
mov
movsl
call
popa
jns
js
cmc
pop
cmp
std
test
add
pop
push
add
cld
pop
pop
out
hlt
jp
or
das
in
adc
enter
das
int3
sub
mov
addr16
pop
sahf
js
sub
in
pmaddwd
add
std
dec
imul
adc
and
sub
clc
xor
pop
mov
jg
push
xor
cli
sub
add
imul
add
ja
mov
mov
fldenv
gs
out
pop
popa
mov
cli
and
and
inc
sub
mov
sub
and
push
inc
lock
sub
sbb
cld
daa
cmp
out
xchg
call
sub
cli
pop
push
js
add
add
stc
jb
mov
aam
cld
sub
cmp
inc
add
jne
pop
lsl
add
push
sti
das
jbe
cmp
mov
jb
pop
sahf
cli
aam
ret
sbb
inc
repz
xor
data16
xchg
cmpsb
mov
call
push
add
adc
xchg
add
add
dec
jp
out
jns
pop
inc
add
jns
cs
lahf
lods
jae
cli
mov
bnd
xchg
hlt
add
mov
sbb
add
stc
fwait
iret
add
xorl
add
sbb
in
lret
mov
nop
jne
dec
sbb
inc
and
push
pop
add
ss
dec
in
push
add
sub
fwait
int
rorl
and
adc
clc
clc
add
mov
mov
test
sarb
add
call
aaa
sahf
jb
jle
test
call
in
or
outsb
fistps
xor
out
imul
sbb
add
stc
add
sbb
and
add
pop
sub
lcall
subl
outsl
fwait
jecxz
jbe
lds
rcrb
fcoml
mov
xchg
jns
or
hlt
out
cs
xchg
inc
sbb
fxch
add
jg
notl
iret
add
ror
sbb
fs
ret
popa
dec
adc
xchg
jecxz
inc
das
add
stc
and
push
popa
pushl
add
outsl
ret
dec
pop
shl
int
sbb
jge
daa
mov
cmp
adc
addb
nop
push
cmpsb
cmpb
pop
add
push
mov
dec
and
shll
add
fidivl
addr16
push
sub
das
inc
mov
lahf
jno
lret
dec
jg
pop
inc
into
pop
xchg
and
mov
or
pop
add
add
scas
pusha
incl
mov
or
shll
mov
add
add
adc
mov
cmp
imul
xor
adc
add
ja
and
pop
mov
test
mov
xchg
sti
cmp
adc
mov
adc
xchg
add
into
daa
cld
inc
int
add
gs
sbb
or
sbb
add
push
cmp
push
add
jg
jg
clc
lods
outsl
je
xor
adc
add
addr16
adc
push
xor
add
ret
inc
dec
out
xor
arpl
and
ljmp
stos
movb
loopne
stos
aad
cmp
xchg
sub
outsb
scas
push
and
mov
xchg
add
sub
lret
mov
or
add
push
jae
dec
xchg
nop
xor
inc
lods
test
sub
loopne
inc
add
or
dec
jg
lods
xchg
cwtl
add
add
add
or
imul
dec
cli
add
cmp
pop
pushf
dec
add
push
lock
mov
imul
jno
mov
cmpsl
loop
pop
gs
imul
lcall
jno
jnp
add
add
stos
or
je
mov
mov
dec
jl
leave
stos
add
add
dec
add
lock
add
into
add
push
push
add
fwait
push
sbb
add
mov
clc
stos
out
add
test
inc
pushf
lahf
adc
add
loop
pop
movsl
pushf
loopne
cwtl
ret
push
mov
scas
shlb
adc
sbb
sbb
cmc
push
add
mov
stos
imull
sub
xlat
xorl
add
xchg
cld
mov
and
mov
adc
pop
add
jne
sub
pop
add
xor
add
outsl
aaa
adc
xchg
punpckhbw
dec
push
push
add
stos
add
jo
jg
sub
cmp
adc
mov
xchg
add
sbb
pop
fstpl
add
add
jg
xchg
push
or
xlat
popa
xchg
push
out
pusha
dec
xchg
int
jp
jno
and
loop
add
adc
mov
test
scas
sbb
scas
add
and
mov
int3
pop
cmpsb
pop
pop
aas
nop
add
add
int
xchg
cs
and
sbb
dec
repnz
mov
lock
add
jg
pop
dec
in
sub
fsubl
inc
jbe
add
push
int3
add
out
pusha
jg
repz
pop
call
pop
or
xor
mov
xchg
dec
dec
out
add
mov
add
cmp
je
movsb
sub
test
pusha
in
dec
xchg
mov
add
or
add
jb
add
xor
imul
jge
aas
loop
xor
sub
scas
mov
iret
push
adc
mov
jne
xor
inc
push
mov
inc
mov
insl
jnp
dec
outsb
mov
cmp
add
push
xor
push
add
icebp
data16
jb
insb
hlt
cmp
mov
mov
sbb
sbb
jge
xchg
int3
ret
lods
hlt
cmpsb
lcall
jp
add
das
add
jmp
xchg
add
push
test
dec
push
cli
mov
cmp
add
xchg
aad
je
sbb
pop
pop
js
mov
jge
orl
xchg
dec
push
fldz
iret
ds
add
add
into
pop
sbb
ja,pt
jo
inc
mov
aam
pop
in
or
mov
sub
mov
repnz
ret
out
shll
add
in
lods
add
arpl
pop
mov
jmp
push
hlt
jecxz
in
scas
jnp
out
dec
adc
jbe
in
clc
mov
mov
ss
xor
jns
rorb
push
dec
pop
jmp
ficomps
andb
roll
loop
scas
inc
sbb
add
push
xor
mov
jmp
pop
aaa
nop
lock
sarl
cmp
adc
cmp
mov
jo
add
mov
add
mov
add
fldl
lcall
jle
les
mov
dec
insl
push
mov
xchg
jns
and
scas
push
xor
sub
add
xchg
in
cmp
cmpsl
cmp
call
sbb
stos
xlat
pushf
xchg
out
add
jb
in
add
in
xor
dec
add
and
ja
add
leave
pop
mov
lahf
add
or
fsubl
adc
sti
rolb
test
jle
mov
or
and
insb
sub
hlt
sarb
sbb
jecxz
cmp
rcl
push
jl
enter
mov
leave
dec
gs
cmp
mov
mov
push
roll
ret
mov
outsb
mov
insl
add
xchg
pop
push
fs
aas
and
add
cmpb
add
arpl
add
dec
adc
push
and
sub
leave
dec
or
jb
pop
add
loopne
jecxz
sbb
and
inc
mov
jl
and
push
movsb
and
adc
add
call
push
cmpsl
addr16
and
sub
bound
inc
mov
mov
mov
add
add
das
dec
popa
lods
add
xchg
jns
jge
pushf
popf
out
xchg
movsb
aam
ljmp
sub
inc
jp
push
push
outsb
stos
add
loopne
addb
imul
repnz
mov
pop
jmp
adc
cmc
es
cmp
test
jbe
add
lahf
add
push
cli
pop
xchg
faddl
add
add
add
lahf
pop
sbb
pop
add
adc
mov
cltd
add
sub
fwait
pop
repnz
aad
add
lret
adc
mov
imul
dec
add
jne
enter
add
cs
mov
push
sub
adc
movsb
add
stc
jp
lods
xor
aaa
pushl
push
mov
jno
inc
add
dec
jp
lcall
imul
ret
rcrl
mov
ja
adc
in
pop
add
call
add
inc
sub
mov
shrl
inc
aaa
cmc
add
jmp
iret
inc
jp
add
push
addr16
inc
adc
out
out
aam
and
hlt
add
or
mov
ds
xchg
stos
repnz
sub
jl
dec
pop
add
adc
add
scas
test
mov
popa
cwtl
mov
inc
push
cmp
xchg
movsl
xor
scas
lret
ja
cmp
js
push
add
add
adc
xor
fwait
jl
ljmp
test
push
mov
loope
in
mov
or
xor
add
xor
add
call
cmp
add
cmpb
adc
adc
mov
mov
sbb
and
push
jmp
ret
mov
add
add
rorb
negb
dec
verr
push
add
add
mov
push
dec
clc
aas
mov
jmp
inc
add
adc
flds
and
leave
and
or
cmp
xor
fsubrp
mov
or
imulb
add
mov
clc
xchg
addr16
xchg
clc
lret
das
scas
dec
xor
sbb
push
add
out
dec
pop
out
pop
push
add
in
add
add
shrl
movb
mov
cmp
add
jae
test
jecxz
mov
imul
mov
sub
push
test
pop
mov
xor
jge
cwtl
inc
fsubrs
and
xchg
mov
add
dec
lods
mov
fldcw
pop
xchg
leave
arpl
adc
inc
cli
pop
faddl
xor
xor
movsl
insb
popa
xchg
insl
int
cli
xchg
lret
aam
mov
pop
dec
jae
mov
add
aas
sub
cld
xchg
testl
add
mov
fdivl
jae
cld
add
jge
mov
ja
lock
jnp
insb
mov
into
cmp
test
out
enter
decl
sub
lock
add
jno
sbb
test
cli
test
into
sbb
icebp
call
iret
int
pop
push
cltd
adc
rcrl
push
xlat
dec
loop
push
movsl
scas
cmp
fcom
into
xor
mov
test
inc
mov
push
mov
lahf
jle
cmp
add
xchg
xchg
scas
mov
pop
adc
out
jnp
sti
xchg
outsl
sbb
movsb
mov
fiaddl
add
aam
decl
adc
cli
faddl
popa
out
test
cmc
je
cld
xor
fldl
adc
inc
push
mov
push
pop
xor
fnsave
cmp
pop
cli
dec
leave
aam
push
addl
or
stos
ja
cs
add
jle
xor
aam
add
mov
bound
fs
ljmp
lahf
fwait
push
dec
sub
clc
xor
cltd
cltd
dec
in
ja
fisubs
std
push
imul
add
add
out
cld
add
aam
jo
icebp
mov
xchg
or
push
ds
add
std
imul
add
xor
add
jg
sub
pop
mov
push
or
add
jg
add
cmpsb
adc
push
sub
push
push
xor
add
jl
push
popa
mov
add
sub
test
add
fs
add
mov
add
inc
sbb
sbbl
movsl
xor
aaa
push
daa
adc
pop
adc
aad
add
dec
add
mov
inc
add
push
or
sbb
lods
or
add
or
ret
cmpsb
std
das
adc
and
aam
add
adc
mov
lret
mov
add
gs
mov
bound
push
test
out
rorl
mov
insl
jne
or
xor
jae
xor
add
lahf
push
push
add
fisubl
jo
fldcw
sbb
push
iret
push
add
neg
cwtl
imull
push
mov
movsl
push
imul
add
shll
mov
pop
inc
xchg
insb
mov
sti
sub
decb
jns
sbb
mov
add
xchg
mov
cs
test
js
dec
adc
outsl
add
mov
cmp
clc
xchg
inc
xchg
hlt
jb
lock
cmp
fbstp
mov
mov
repnz
xchg
test
cli
add
cmp
addb
sbb
sbb
fidivrl
jge
sahf
nop
insb
enter
xor
pop
rorl
lret
arpl
add
add
imul
imul
mov
mov
arpl
xchg
dec
mov
pusha
cmpsb
aaa
lods
adc
mov
adc
inc
test
dec
cmp
pop
mov
ret
xor
int
sub
popa
mov
jnp
fnstcw
outsb
fsubrs
movsb
pop
jge
fwait
fs
or
fiaddl
inc
jne
aam
arpl
rolb
or
arpl
repnz
idiv
jp
jge
inc
jnp
cmpsb
jmp
cmc
daa
in
subl
int
jge
jmp
push
jle
repz
and
mov
adc
push
mov
stos
roll
stc
add
mov
arpl
jbe
add
lret
sub
jnp
xchg
sub
outsl
and
inc
insb
pop
ja
dec
jle
sbb
inc
jae
sbb
ror
add
inc
push
orb
xchg
jb
call
decb
sbb
ficoms
pushf
or
icebp
dec
add
data16
cs
and
add
sti
xchg
or
data16
cmpsb
mov
and
test
add
shl
mov
lret
into
in
push
rcll
movsl
and
add
fistpll
add
jge
arpl
out
pop
fnsave
add
pop
inc
mov
push
lods
jns
sbb
sbb
repnz
and
sub
in
dec
into
out
jl
nop
daa
arpl
divl
push
cmpb
testl
mov
push
and
xchg
inc
popa
rolb
jnp
xor
lahf
test
adc
mov
movsl
push
testb
movsl
cmpsb
pop
ljmp
rcll
outsb
aam
les
rcll
lds
in
sbb
test
inc
cmp
pushf
nop
and
add
cmp
mov
xchg
push
adc
add
clc
add
add
add
add
lods
add
lret
frstor
icebp
cmc
add
or
arpl
push
mov
aaa
xor
popl
jnp
fmul
inc
and
jne
enter
mov
jnp
jle
notl
add
mov
jg
sub
data16
mov
cmpsb
mov
add
inc
outsl
aas
rcrl
pushf
push
cwtl
aad
add
repz
je
adc
and
sbb
pcmpgtw
lods
mov
sbb
sub
pop
lret
lods
js
mov
jbe
xor
jmp
push
mov
in
sub
psllw
rolb
sub
mov
jge
mov
adc
iret
daa
xor
push
or
das
fisttpll
repnz
or
cmp
dec
xchg
push
testl
inc
sbb
sbb
aaa
or
cld
mov
inc
add
add
xchg
inc
add
add
movsl
aas
popa
add
push
sub
add
jle
and
mov
cmp
add
stos
pop
mov
sbb
mov
jmp
loopne
push
dec
pop
cmc
dec
je
jmp
add
cmp
out
cmp
cmp
into
add
call
imul
sbb
sbb
jmp
jl
inc
jmp
jne
jo
add
dec
add
imul
iret
loop
repnz
or
ss
add
cmp
fldcw
cmp
movb
mov
es
inc
xchg
add
vmwrite
sarl
cli
xlat
jmp
inc
loopne
daa
fwait
jecxz
pop
jmp
ret
lret
mov
cwtl
cld
sbb
insb
adc
cmc
sbb
and
test
movd
or
popf
push
xor
add
aam
pop
mov
push
lea
pop
cmp
das
inc
add
int
adc
inc
dec
outsl
push
xchg
add
adc
in
adc
fimuls
les
push
cmp
xchg
fnstsw
cld
inc
and
mov
push
iret
mov
mov
pusha
mov
or
add
mov
jl
add
call
add
sub
imul
cmp
cmc
mov
lods
lcall
add
lcall
loop
jp
jmp
pop
fstpt
sbb
xchg
test
mov
push
adc
mov
xchg
sarl
dec
xchg
inc
js
int
rol
add
mov
xchg
lods
aaa
call
std
push
add
pusha
add
movl
add
jmp
mov
pop
push
mov
push
xchg
aad
sbb
jo
mov
das
cmp
jae
cld
ret
mov
jbe
mov
jb
loopne
lods
dec
ja
jg
mov
add
in
leave
iret
lea
mov
jo
sbb
sub
xchg
xor
pusha
imul
mov
jbe,pn
cwtl
lea
add
sub
jnp
rorl
addl
fwait
repnz
aas
jmp
jo
sarb
mov
lods
lea
jnp
movsb
mov
jne
pop
add
xor
insb
jno
shrl
mov
pop
jno
loop
add
fcmovu
arpl
cmp
shll
cmc
loop
fs
bnd
add
sti
mov
repz
iret
sbb
add
add
cs
add
cmc
sub
mov
nop
roll
fcomi
add
add
jne
aad
and
jle
add
mov
aaa
add
aad
pop
inc
ljmp
jbe
rolb
in
mov
jmp
hlt
pop
sub
mov
cmpsw
outsl
iret
sbb
pop
icebp
inc
les
dec
push
add
add
movsl
gs
pushf
arpl
add
mov
in
test
adc
cmp
jl
adc
push
xchg
add
xor
dec
adc
pop
mov
lods
xor
pusha
add
adc
xchg
add
mov
add
je
push
sbb
nop
add
xchg
add
or
jp
adc
adc
mov
pusha
fiadds
lret
outsl
add
mov
xchg
add
outsl
sub
push
bound
or
xchg
scas
lahf
dec
out
insb
add
loop
idivb
mov
or
inc
add
es
rorl
and
jle
mov
cmp
iret
sbb
movsb
mov
je
add
xchg
cmovno
and
mov
add
mov
or
add
das
in
in
repz
pop
push
daa
push
pop
pop
stos
push
call
xchg
push
or
add
loope
icebp
jge
push
sub
cmp
xor
cmp
push
daa
add
or
popf
jmp
push
jb
lldt
cmp
and
add
add
add
cld
rcl
add
insb
mov
out
jmp
pop
in
lcall
sti
dec
cmp
mov
pop
xor
fldt
add
int
verw
je
adc
push
dec
xchg
mov
sbb
mov
adc
sub
sub
jbe
inc
clc
sub
int3
jge
adc
dec
push
add
and
xchg
jae
xorl
add
add
jp
cmpl
sbb
and
cld
adc
test
jns
adc
aad
sub
inc
xor
data16
test
rorb
jnp
mov
enter
arpl
add
dec
add
cwtl
outsl
sahf
xchg
mov
add
nop
add
xchg
mov
cmp
jo
sbb
mov
cmp
in
dec
test
mov
es
fmull
test
cltd
call
push
and
push
fimull
repnz
das
out
ficompl
inc
jae
das
cmp
lock
add
pop
gs
lret
add
gs
test
cmpl
ja
sub
sbbb
adc
add
push
rclb
rcrl
inc
add
into
cmp
mov
pop
mov
shll
sbb
xchg
divl
mov
adc
mov
sbb
cmp
adc
pop
jg
push
add
dec
inc
inc
add
jno
jecxz
fcmovnb
call
addl
push
pusha
add
test
imul
fdivr
maskmovq
divl
inc
sbb
adcb
inc
stos
add
daa
xchg
lods
in
mov
mov
inc
sahf
add
js
adc
inc
mov
dec
pushf
sahf
adc
add
or
inc
xchg
push
pushf
test
imul
stos
pushf
add
ja
adc
add
cmc
mov
pop
flds
lock
mov
fisubl
sbb
add
add
add
pop
imul
or
adc
insb
sub
dec
mov
jne
mov
enter
mov
sbb
dec
fs
lds
in
dec
js
adc
inc
loope
fldl
mov
sahf
andb
fyl2xp1
mov
push
jbe
xor
cltd
mov
mov
icebp
jbe
add
jl
jle
push
add
fidivl
fildl
movsb
or
outsb
mov
add
add
mov
test
push
add
sbb
xor
add
lods
add
ret
add
mov
push
fisttpll
add
mov
in
xor
inc
shlb
sub
adc
out
pop
xchg
and
add
or
jle
dec
xor
aam
dec
sbb
fwait
or
and
add
pop
idiv
loop
lds
ss
xor
mov
and
es
xor
pop
gs
outsl
xor
call
inc
lret
sbb
sub
lret
add
fidivrs
add
jecxz
push
adc
add
inc
into
addl
iret
xchg
add
fs
mov
jl
out
jl
add
jbe
adc
adc
int
adc
xchg
mov
iret
cmpsl
sbb
pop
lret
add
aam
add
fadds
xchg
jle
or
mov
bnd
mov
adc
adc
inc
add
les
jp
cld
jp
loop
fs
cmp
fadds
sbb
sub
add
jmp
test
loope
outsb
adc
mov
cmp
sbb
add
in
les
cli
sahf
push
mov
hlt
out
push
and
pop
add
sbb
imul
pop
xor
sbbl
mov
or
outsl
adc
add
fdivp
mov
cmp
js
xchg
arpl
loop
shlb
mov
sub
sarb
lea
out
pop
pop
ret
aam
jb
mov
add
call
jo
lods
add
das
mov
add
jb
ja
les
icebp
jo
mov
js
add
add
js
push
add
shrl
pop
push
mov
iret
sub
add
sub
add
sub
xchg
adc
dec
test
add
xor
add
or
mov
dec
and
dec
out
outsl
ja
jno
out
fcmovu
sub
jmp
lret
mov
popa
add
add
subl
add
out
sbb
sbb
add
and
outsl
mov
popa
cmpb
lock
pop
mov
add
push
adc
pop
jge
sbb
cmp
and
pop
add
inc
jno
mov
mov
cmp
add
add
pop
xor
mov
push
sub
pop
adc
test
cmpsl
jge
aad
lock
cltd
push
push
add
or
fdivr
int3
push
xchg
dec
mov
outsl
or
xlat
in
cmpsl
xchg
cs
sub
pop
mov
add
push
jecxz
mov
add
add
movsl
and
cmp
and
enter
subb
mov
pop
mov
add
pop
add
add
dec
add
cmp
xchg
loop
jnp
aaa
push
jno
push
sbb
std
sbb
jo
in
mov
out
mov
add
ja
loopne
hlt
test
ljmp
in
divl
imul
loopne
int
lea
lahf
enter
dec
add
loopne
add
filds
es
inc
add
je
inc
sti
add
or
sbb
mov
out
add
fisttpl
add
movsb
pop
popf
cmp
adc
xchg
outsl
fists
pop
faddl
push
stos
push
jbe
add
cwtl
pop
test
or
fistpl
push
mov
pop
mov
pop
adc
clc
add
add
push
fmull
add
insb
in
mov
cli
out
out
cs
or
test
push
in
fsts
add
and
jae,pt
jp
add
movsl
push
sub
mov
daa
pop
add
mov
dec
scas
sub
xor
jbe
add
dec
mov
bound
or
adc
sbb
aam
fisttps
aaa
out
cmpsl
arpl
jp
or
push
cmp
add
jnp
repnz
add
cli
scas
imul
xchg
fistl
test
es
add
inc
add
push
psubsw
into
pop
xchg
add
sbb
inc
mov
inc
mov
pop
sub
in
cmc
mov
jo
movsb
lock
dec
add
add
cwtl
addb
jmp
aad
scas
jo
and
add
ret
push
mov
inc
jle
lcallw
sahf
mov
or
subb
sub
popf
insb
test
cld
mov
add
jbe
test
jno
add
das
addl
jno
jge
cmp
xor
xchg
js
lock
add
and
orb
mov
mov
fsqrt
repnz
add
cltd
sarl
pusha
cmc
loop
leave
pop
push
in
test
cs
add
scas
sub
iret
xchg
and
js
pop
test
add
imul
pop
ja
and
ret
push
jno
aas
cmc
add
add
pusha
aas
sbb
cmp
mov
inc
add
cmp
jp
push
lret
sbb
aas
push
jle
mov
xchg
add
ret
add
cwtl
add
jmp
inc
cli
aaa
inc
test
add
loop
add
addr16
aaa
jmp
push
jae
push
ret
fprem1
xchg
add
push
cmpl
cwtl
xchg
adc
fmuls
hlt
sub
push
ror
mov
mov
shrb
imul
add
aaa
add
add
ret
add
in
es
mov
push
mov
push
mov
and
adc
jl
fucomip
push
movsl
add
xchg
loopne
cmp
test
xchg
repnz
push
sarl
dec
cs
jnp
cmpsl
mov
sarb
sti
repnz
add
mov
popa
mov
dec
pop
lock
mov
add
push
in
sti
divl
inc
jp
add
dec
out
ficoms
xor
sbb
push
movsb
lods
lcall
dec
pushf
cld
xchg
push
add
stc
mov
push
call
xchg
add
pushf
pop
mov
jl
xchg
sub
pop
into
add
add
shll
add
add
push
adcb
mov
cltd
cltd
std
xchg
push
fmull
in
jmp
xor
pop
adc
sbb
pop
cmp
dec
add
in
pop
test
hlt
into
add
cld
and
jbe
and
sahf
lds
jecxz
inc
add
mov
int3
sub
pushf
nop
cmc
jmp
xchg
stos
jge
mov
out
cli
loope
jns
imul
mov
jg
lcall
jbe
int
clc
add
pop
popf
add
add
add
roll
add
gs
sbb
add
inc
jecxz
data16
push
ljmp
negl
cld
mov
push
inc
cli
xchg
cmp
jo
lods
add
ss
pop
xchg
jbe
inc
add
or
xor
inc
imul
hlt
add
and
mov
or
mov
stos
add
das
in
scas
add
add
and
lock
leave
or
movsl
push
adc
or
pop
fwait
out
scas
inc
add
fs
push
pop
stos
es
movsl
daa
popa
add
mov
cmpb
retw
dec
xchg
mov
daa
bound
ficoms
sub
popa
lcall
add
mov
cmpb
dec
xchg
and
add
nop
ss
mov
gs
scas
aas
adc
lcall
mov
sbbb
imul
rcrl
adc
xchg
int3
add
fiadds
or
add
cwtl
out
add
es
pop
loopne
lods
mov
lods
dec
pusha
fsubs
lret
fwait
add
fstpl
dec
jge
add
fs
add
jne
ret
cmpsb
out
leave
ljmp
bound
loopne
cwtl
push
cmp
jmp
outsb
hlt
push
fisttpll
mov
jmp
leave
add
addl
scas
jp
pop
xchg
aam
cltd
jmp
jp
mov
mov
add
jnp
cmpb
add
or
mov
jg
lods
outsb
fsubr
xor
add
push
shll
xor
pusha
insl
cld
push
push
mov
xchg
aas
inc
add
add
add
add
arpl
scas
insl
jnp
movsl
mov
aaa
mov
mov
xorb
add
sbb
enter
les
mov
insb
dec
sahf
sub
xor
add
mov
popf
popf
sahf
xlat
es
add
add
mov
mov
insb
sbb
in
lret
fs
sti
movsl
xor
cmp
out
mov
scas
shll
xchg
aad
mov
jecxz
call
fmull
lock
lcall
enter
fisttpll
push
pop
mov
pop
xor
test
or
add
ja
add
call
call
bswap
nop
cmp
aam
mov
cmp
fstpl
push
xchg
adc
xlat
add
test
movsb
aam
stc
insl
aaa
and
jb
cltd
pop
in
cmp
stos
push
aas
add
mov
pop
iret
clc
add
fcmovne
aaa
sub
and
push
sub
nopl
push
rclb
jo
paddusw
adc
add
or
add
dec
or
mov
pushf
cmp
pop
push
jae
sub
push
sbb
add
sub
and
xchg
add
pop
or
add
leave
les
in
das
adc
push
lds
adc
lahf
sbb
cmp
clc
loop
aaa
inc
push
add
imul
pop
sbb
and
mov
mov
and
rorl
sub
mov
xchg
and
pop
add
add
pop
scas
adc
lcall
add
fisttpll
push
cmp
data16
out
push
or
jnp
or
pop
dec
mov
cmc
out
ret
arpl
xor
xor
add
mov
jae
mov
add
add
mov
adc
out
jmp
sub
daa
add
aas
adc
inc
push
add
sbb
out
hlt
into
les
push
andl
loopne
call
cmp
mov
fs
je
jecxz
divb
inc
rorl
mov
test
xor
sub
and
mov
add
or
cmp
add
insl
xchg
mov
sub
stos
loope
ret
push
mov
leave
add
repz
push
xchg
in
ret
sub
int3
das
arpl
add
pop
loope
ret
mov
mov
loopne
pop
xchg
add
je
sub
shrl
push
loope
pop
cld
cli
in
add
hlt
adc
bound
or
xchg
add
add
fstl
pop
lock
js
adc
dec
adc
call
jb
bound
sbb
je
or
xchg
xchg
cmp
adc
adc
inc
add
in
push
add
xor
cli
inc
xlat
cltd
add
add
mov
dec
repnz
lea
iret
or
add
fcmovne
dec
in
popf
imul
repnz
aaa
add
or
fadds
push
add
pop
into
icebp
imul
call
inc
movsl
xor
test
sbbb
mov
cmp
les
xchg
icebp
add
lea
pop
fadd
fstps
subl
xor
push
fs
jae
sahf
cld
sub
cmp
add
and
nop
add
sbb
inc
add
lcall
imul
lds
lea
adc
or
fistpl
call
and
xor
add
out
fsubrs
cmp
cli
or
push
cmp
add
xlat
pushl
dec
popa
jmp
std
push
add
mov
xchg
dec
fldl
and
pop
inc
add
and
add
xchg
cwtl
movsl
or
cmovbe
jge
loopne
add
mov
clc
or
lock
xchg
add
add
push
ficomps
inc
rclb
xchg
or
or
sub
add
cmp
frstor
add
into
mov
inc
mov
sbb
mov
pop
xor
add
and
in
inc
enter
shr
dec
adc
cmp
push
xchg
test
add
inc
fcomps
aad
cmp
das
sbb
arpl
add
mov
scas
cmp
pop
outsb
jl
mov
mov
add
or
add
xchg
jle
repnz
inc
sahf
dec
push
ret
leave
dec
push
pop
lea
jecxz
jl
pop
out
popa
fucomip
stos
add
add
mov
add
push
add
lds
or
mov
push
imul
mov
inc
mov
mov
jp
push
push
testb
add
mov
xchg
add
push
aaa
jl
push
jnp
push
and
add
loop
nop
add
sbb
in
sbb
mov
adc
mov
adc
orl
mov
pushf
xor
jo
inc
dec
cmp
nop
imul
dec
rclb
add
xchg
test
shr
dec
or
outsb
push
add
iret
into
bswap
cmp
fsub
xor
add
push
add
or
add
and
or
and
cmp
lahf
les
in
pop
mov
pop
dec
loope
push
scas
imul
imul
adc
lds
cmc
out
out
inc
out
inc
mull
dec
ljmp
sub
in
pop
bound
in
rolb
outsb
add
fnsave
clc
add
mov
lret
mov
add
ret
add
cmpsl
dec
mov
test
mov
jns
inc
mov
adc
stos
inc
stos
xchg
dec
popa
cmpsl
es
sbb
jns
adc
sbb
xor
adc
adc
or
sahf
inc
push
add
je
ficomps
or
stc
jns
inc
jns
mov
xchg
or
shr
pop
aad
add
stos
fisttpll
add
out
mov
mov
test
lcall
or
push
lret
out
adc
inc
jnp
clc
add
push
add
lahf
jns
push
xor
mov
or
psrlq
push
into
cmc
pop
jne
sbb
inc
or
fisttpl
add
lcall
push
stos
dec
fidivrs
add
cmp
inc
pop
mov
add
adc
cmp
aaa
push
sahf
pop
clc
push
out
fldenv
jne
shll
hlt
dec
test
addl
add
adc
jne
xchg
add
ljmp
add
movsb
lds
pop
sti
inc
add
adc
inc
add
cmp
add
outsb
ret
mov
addr16
mov
in
popf
imul
inc
mov
pop
outsl
test
inc
push
loop
loope
outsb
dec
hlt
lret
xchg
lods
add
mov
rolb
fcmove
stos
ds
in
pop
mov
stc
inc
outsb
push
out
rolw
dec
add
call
push
lea
push
lds
jmp
add
out
add
add
pop
sbb
xchg
dec
add
pop
jnp
ljmp
jb
inc
cli
or
xlat
clc
add
inc
les
add
data16
ds
dec
ljmp
fsubs
add
pop
inc
mov
cs
cltd
and
ret
push
pushf
nop
mov
push
push
inc
sar
adc
xchg
roll
add
jo
punpcklbw
add
xchg
test
add
mov
jp
sub
shrl
adc
pop
push
fiadds
pushf
add
das
rcll
pushf
or
add
test
loopne
arpl
add
mov
in
push
add
clc
xchg
sahf
mov
lock
add
enter
push
jnp
popa
sarl
pop
sbb
fsubl
cmp
sbb
in
dec
je
xor
pop
add
xchg
add
rclb
adc
push
in
jg
sbb
push
sbb
loop
idivb
jb
sldt
fucomip
lret
and
jmp
mov
jns
fisttpl
add
movsl
push
add
cmp
mov
adc
das
imulb
xchg
xor
sbbb
insl
xor
mov
jns
ret
fisubrs
jno
lret
pop
loopne
add
inc
jbe
adc
in
js
imul
inc
out
pushf
insb
movsb
aam
ss
jb
idiv
add
add
into
mov
mov
in
jne
insb
testb
lea
mov
daa
or
xor
push
adc
out
xchg
js
imul
push
subb
adc
aaa
xchg
add
in
andnps
repz
cmp
js
add
out
fimuls
jne
fldcw
dec
and
sbb
jp
imul
cmc
pop
mov
sub
add
fcmovnbe
cmpsl
ret
jg
and
repnz
fptan
or
pop
and
out
mov
cmc
testl
sbb
test
jns
outsb
add
outsb
imul
lcall
lahf
in
cmp
add
mov
ret
add
and
dec
cmp
cmpsl
or
mov
or
test
xchg
cmp
mov
pop
ljmp
lcall
fwait
cmc
sti
jno
jnp
add
cwtl
add
negl
add
add
hlt
mov
add
cmp
std
fdivrs
into
rcll
add
mov
ljmp
xchg
push
dec
jae
dec
mov
imul
shl
test
out
sti
js
add
rol
add
aaa
push
xchg
jmp
popa
sbb
add
xchg
pop
incl
add
lods
add
mov
inc
insb
addb
std
mov
cmpsl
stos
scas
and
xchg
xor
sbb
jae
das
pop
xor
pop
xchg
lea
pop
or
punpckhwd
push
cmp
inc
push
dec
pusha
push
stos
xchg
imul
dec
sub
leave
add
sbb
xor
and
pushf
sbb
mov
xor
adc
add
cmp
aaa
mov
add
push
fst
popf
dec
pop
pop
arpl
mov
test
add
repz
add
popa
add
sbb
stos
push
push
out
or
mov
or
rolb
das
sbb
sub
add
jg
sbb
fs
sbb
add
xchg
roll
mov
mov
mov
testl
lds
mov
adc
hlt
lods
lret
repz
pop
ja
jge
mov
add
mov
sbb
mov
addr16
sbb
fadds
mov
icebp
push
dec
add
fsubrp
or
aas
xlat
cli
pop
add
dec
les
in
add
jmp
add
or
iret
aam
mov
add
cmp
xlat
pop
mov
add
mov
andb
sbb
inc
aam
mov
xchg
sbb
add
hlt
or
icebp
inc
rcrl
mov
rclb
mov
out
push
xchg
and
scas
pusha
test
pushf
mov
pop
add
mov
add
ja
xchg
push
lods
xorl
add
mov
add
push
push
repz
sbb
sbb
mov
sub
add
mov
enter
dec
add
and
push
add
push
xor
aaa
dec
mov
ror
add
push
andl
pop
test
inc
add
cmpsb
and
in
nop
out
inc
add
in
sbb
pushf
pop
add
add
sub
lahf
movsb
pop
clc
add
push
imul
mov
div
inc
fwait
arpl
mov
test
scas
mov
insl
fldl
jno
test
xchg
xchg
aaa
mov
jge
inc
jge
andb
jns
cmp
test
and
dec
mov
add
cmp
scas
std
popa
stos
sub
xor
sub
xchg
mov
add
push
xor
cld
jns
mov
int3
add
aam
insb
popf
xchg
cmp
dec
fisubrl
inc
adc
jge
repz
cli
dec
fcompp
push
ret
iret
add
mov
mov
add
ret
stos
and
dec
nop
dec
mov
fs
aas
xchg
push
sbb
and
leave
mov
ds
pop
add
ret
add
data16
push
jp
addr16
fidivl
pushf
push
push
out
int3
sti
popl
pop
mov
xchg
bound
xchg
rcrb
inc
mov
test
add
add
jae
add
add
test
add
loop
popf
add
outsl
in
sbb
cs
fldcw
cmp
or
popf
mov
daa
leave
inc
jle
scas
lock
xchg
push
and
stc
mov
adc
mov
dec
sub
sub
into
and
sbb
xchg
es
in
xlat
ret
cmp
mov
or
aaa
mov
je
dec
push
mov
sub
xchg
aam
data16
mov
push
push
pop
divb
ret
jle
push
xlat
add
loop
add
test
mov
and
sub
cmpsl
add
fisttpll
xor
into
outsb
inc
cs
sahf
bound
lret
pop
add
add
xchg
cmp
lods
add
jg
int3
movsb
in
repz
fdivrl
xchg
jle
or
ret
adc
add
scas
out
add
adc
add
shlb
daa
lahf
iret
add
std
push
mov
or
push
mov
add
or
push
das
sub
jl
add
rcrb
sub
pop
clc
mov
movb
add
mov
cvtdq2ps
fisubl
dec
push
fsubrs
xchg
mov
xor
mov
push
sbb
popf
cmp
cmpb
add
out
xchg
popf
pop
pop
icebp
add
xchg
jmp
push
cmp
xor
jl
pop
mov
and
in
inc
faddl
idivl
push
jns
mov
inc
xchg
inc
sub
adc
add
mov
lahf
xchg
addl
test
mov
inc
mov
out
push
dec
dec
ret
sbb
mov
sbb
nop
fsubrs
enter
mov
outsb
out
add
add
sbb
fistpl
adc
sbb
divl
and
mov
repnz
pushf
add
pop
movsb
add
mov
xor
add
test
and
adc
insl
test
or
int3
and
xor
add
dec
mov
jg
mov
lods
add
lahf
pop
add
lods
addl
fstp
inc
add
cmp
add
mov
xor
adc
xorb
test
push
sub
and
cmc
dec
add
sbb
insl
adcl
xor
xchg
add
les
push
outsl
pop
cld
or
inc
pop
add
xor
filds
roll
mov
push
fistpl
add
push
enter
test
shll
out
xor
add
movb
lods
inc
or
mov
out
add
in
pop
or
lcall
or
fiadds
aaa
add
mov
mov
cmp
xlat
jns
jmp
test
xchg
inc
sbb
mov
mov
in
sarb
pop
add
setns
inc
dec
xor
push
hlt
out
add
add
loopne
xchg
dec
add
gs
pushf
add
sbb
sub
jecxz
push
arpl
mov
shll
or
xor
add
daa
inc
ja
ds
cmp
mov
stc
cmp
pusha
ja
loop
das
mov
mov
fs
jae
adc
shlb
insb
insb
das
mov
add
aaa
stos
lcall
push
dec
roll
or
push
sbb
test
sbb
cmp
xor
stos
add
xchg
add
inc
push
add
stc
mov
jg
popw
add
xchg
filds
add
sti
cmp
push
inc
push
xor
lock
add
jnp
sub
adc
mov
push
add
jbe
jae
ja
std
or
add
jecxz
xor
mov
cmpsb
cmp
testb
jae
or
arpl
xor
mov
fucomi
out
test
in
enter
cltd
jg
out
add
in
cs
push
std
add
outsl
jmp
mov
insl
and
lods
add
add
enter
aaa
out
es
rolb
jg
sub
mov
inc
sbb
fs
add
sti
or
xchg
xchg
inc
sub
dec
lock
js
clc
or
std
add
add
add
movb
movsl
inc
mov
add
mov
insb
cltd
cltd
add
add
push
test
jne
data16
dec
pop
jecxz
std
stos
scas
mov
mov
and
jae
lret
pop
retw
cmpsl
aaa
fdivs
add
negb
mov
shlb
and
xor
out
add
out
in
mov
mov
add
push
xor
fbstp
adc
add
jl
repz
fs
mov
lret
push
xchg
mov
dec
addr16
pop
push
in
dec
sbb
lds
push
add
in
mov
mov
cmc
loope
sub
and
jns
mov
test
add
xor
push
movq
push
pop
filds
stc
mov
repz
dec
lods
push
dec
add
popf
mov
pop
cmp
pop
or
hlt
pop
mov
loop
xchg
add
fcoml
and
lret
adcl
jg
push
pop
mov
add
mov
or
xchg
not
add
and
lahf
add
adc
add
leave
cmp
enter
popf
loop
sbb
xor
pop
repz
js
fwait
movsl
adc
inc
push
sub
and
mov
or
stc
add
dec
add
or
aas
add
xchg
push
sub
add
out
jmp
and
cmp
cmpsb
xchg
jecxz
faddl
and
add
mov
xchg
mov
sarl
push
arpl
and
jbe
in
sub
add
push
add
test
xchg
notb
cmp
dec
loopne
pop
sbb
mov
cld
movsb
mov
dec
jne
stos
mov
push
inc
loopne
and
mov
add
sbb
push
mov
mov
sbb
pushf
ja
cwtl
ds
or
xor
fmul
lock
jmp
shrl
loope
sahf
and
adc
lret
pop
int3
lcall
mov
pop
mov
push
adc
xor
inc
jns
sbb
sub
xor
test
movsb
cltd
jge
in
push
sti
stos
sbb
cmp
add
out
test
and
adc
xorb
cmp
arpl
inc
sub
addr16
das
xchg
add
xchg
xchg
mov
jl
cltd
add
shrb
add
jp
xchg
test
lods
lods
pop
pop
mov
adc
adc
loop
xor
jo
movsl
mov
int
add
xor
repnz
adcl
call
jg
inc
mov
mov
mov
add
pop
jno
push
ret
bound
mov
shr
push
shl
or
sbb
jmp
jmp
jnp
ret
sub
jnp
pop
test
lret
lahf
decl
outsb
add
mov
in
inc
push
wbinvd
mov
sahf
xor
mov
mov
fcmovbe
cld
jnp
and
mov
jae
inc
add
xlat
ja
insl
add
cmp
std
ja
jecxz
add
call
ljmp
cwtl
adc
mov
rolb
mov
ret
push
dec
add
fndisi(8087
aas
fsubrs
sarb
cld
add
adc
popl
test
cmp
add
fcmove
and
stc
mov
int3
sbb
cmpsb
das
dec
sub
adc
or
clc
pop
shll
jmp
mov
mov
out
mov
ret
xchg
sbb
push
add
sub
shll
inc
lods
xor
add
cmc
jne
xchg
fisttpl
popl
add
out
bound
addl
mov
push
add
aam
mov
or
add
mov
fwait
clc
jmp
insw
add
mov
add
add
and
or
adc
inc
js
xor
sbb
and
jp
dec
lret
out
in
imul
aaa
xor
aaa
ret
cmp
lahf
orb
loope
pop
mov
sbb
dec
adc
nop
and
out
xchg
add
add
scas
add
iret
scas
sbb
jp
adc
xor
imul
push
decb
sbb
sbb
lcall
add
push
mov
iret
movsb
pop
mov
loop
in
sahf
cmpsb
push
xchg
enter
mov
mov
dec
bnd
mov
xchg
add
insb
xor
xor
dec
test
popa
push
add
or
test
push
sbb
subb
push
movl
add
inc
pop
loope
dec
enter
aaa
mov
mov
mov
inc
xchg
movsb
add
xchg
adc
xor
sub
adc
push
push
movsb
in
call
pop
xor
add
xchg
rolb
add
adc
adc
jno
mov
add
dec
fistps
add
push
add
add
push
inc
pop
sub
mov
mov
stc
mov
bound
push
mov
movsb
rcr
in
adc
out
cmpsl
dec
xchg
in
out
into
add
jb
in
add
mov
daa
int3
jp
lret
ss
xor
stos
xchg
pop
rcll
rcrb
jb
cltd
xchg
fwait
out
cmpsb
mov
cmp
push
leave
pop
xchg
jecxz
mov
jno
cld
push
push
in
inc
inc
mov
clc
add
cli
pushf
jbe
xchg
push
and
pop
mov
lret
push
sbb
lret
xor
cmpsl
mov
lret
mov
rolb
mov
pop
fildll
cmp
jmp
add
jo
dec
jo
and
adc
pop
add
add
add
sarb
jg
adc
scas
sbb
xor
add
push
fisttpll
or
add
jno
out
lods
add
xor
or
push
aad
or
stos
das
mov
jbe
adc
loope
int3
pop
cwtl
jno
lods
push
pop
stos
in
pop
add
push
shlb
or
loopne
inc
pop
cs
aad
dec
addr16
jl
sbb
divb
lds
adc
rcrl
in
and
inc
mov
pop
shrl
js
jo
or
mov
stc
add
pop
sarl
push
outsb
jae
add
lods
das
pop
mov
add
jo
aas
testb
adc
mov
data16
ret
addl
jb
mov
add
mov
aas
pop
fs
sub
sub
or
xor
cltd
mov
in
daa
mov
jns
cs
add
pop
cltd
pop
test
inc
push
lods
dec
pop
mov
ljmp
lret
and
fs
add
hlt
push
pop
and
pop
jns
add
sbbl
mov
cmpsb
xor
adc
add
int
jmp
xor
add
mov
inc
add
and
dec
dec
pop
inc
je
add
xchg
lret
out
test
popa
sbb
jmp
xor
addr16
sbb
ja
adc
mov
mov
add
add
loop
inc
jbe
sub
ret
clc
pusha
xchg
add
jno
fildl
ja
inc
dec
stos
ljmp
jae
jnp
enter
xor
inc
ljmp
mulb
add
sub
sbb
sub
stos
mov
sahf
push
inc
out
inc
fmull
das
xchg
idiv
pop
int
fcmovnu
add
das
and
add
or
xlat
fadds
std
mov
add
test
add
aas
in
add
jmp
ljmp
dec
add
and
sub
in
cmp
addr16
inc
out
imull
add
push
inc
push
test
mov
push
add
xor
sub
imul
lahf
add
arpl
mov
cmc
pop
mov
inc
xor
fsubp
or
sbb
mov
push
sub
cmp
xchg
jnp
sbb
lods
lcall
add
sbb
dec
lret
lea
mov
movsb
or
add
daa
add
subl
mov
dec
aam
lods
outsl
lahf
daa
popa
testb
jle
add
hlt
or
rolb
mov
jae
inc
add
add
sub
sub
sub
fcoml
scas
xchg
adc
inc
int3
hlt
sarb
aas
inc
imul
outsb
mov
addb
and
je
add
fstpl
cli
sbb
push
lret
add
cmp
mov
enter
adc
push
mov
mov
inc
xchg
test
in
orb
lahf
leave
xchg
cmp
adc
aaa
xor
jecxz
pop
cli
repz
mov
and
push
mov
push
inc
fiadds
jno
fxch
adc
sbb
jl
add
add
lahf
xor
leave
sbb
pop
cmp
mov
mov
std
ljmp
add
dec
in
push
mov
push
mov
call
sbb
pusha
cmp
cmp
add
push
dec
push
mov
adc
mov
mov
jecxz
push
mov
fsubs
repnz
imul
addr16
cmp
sub
int3
in
sbb
outsb
repnz
fmuls
test
hlt
test
aad
ret
or
sbb
mov
sub
pop
add
jbe
out
jge
mov
sahf
mov
mov
mov
daa
jmp
jmp
add
mov
add
mov
repz
nop
loope
xchg
mov
test
out
daa
out
mov
repnz
sbb
enter
fsubl
xor
cltd
add
ja
imul
movsb
test
dec
add
inc
fcoms
movsl
sbb
add
pop
mov
verr
xchg
das
lahf
out
pop
mov
cmp
das
jb
pop
insb
aam
rolb
xor
dec
inc
push
lods
mov
out
mov
andb
xor
out
add
roll
int
sbb
mov
xchg
add
add
push
pop
adc
and
outsl
ret
pop
push
fnstcw
push
jne
cli
stos
leave
and
inc
imul
cwtl
shlb
scas
mov
lcall
loop
daa
inc
out
pop
rdmsr
mov
pop
mov
add
ret
add
mov
xor
movsb
add
movsl
rorb
sbb
mov
outsl
cltd
enter
mov
push
or
sub
daa
jmp
shlb
xor
movsb
stc
add
xor
std
add
lds
movsb
or
xchg
cmp
add
add
jae
daa
adc
lret
xchg
loop
inc
sbb
add
add
xchg
cld
insb
dec
add
jbe
or
dec
inc
jo
add
add
ja
dec
lds
ret
test
or
loop
cmp
and
add
jp
mov
xchg
lret
adc
sub
cmp
data16
dec
lods
in
hlt
and
ret
lds
sub
je
pop
lret
fisubs
leave
dec
pop
add
aas
sub
and
shll
nop
ja
jecxz
fnstenv
stos
gs
adc
lahf
insb
aas
push
stc
add
xor
add
sarl
push
test
mov
sbb
xor
std
xlat
xor
and
dec
loop
and
pop
adc
add
mov
and
int3
subl
test
shrb
push
mov
or
add
lods
jmp
stc
xor
arpl
add
bound
jbe
mov
inc
ds
repnz
mov
jno
loope
and
push
and
xor
xchg
sbb
in
repnz
dec
cld
in
popf
scas
push
movsb
andb
ret
add
sbb
xor
dec
lret
adc
pop
mov
mov
gs
mov
jae
push
gs
outsl
fwait
xor
jmp
xchg
mov
leave
add
sbb
xor
out
add
push
and
cli
nop
aad
popa
icebp
jl
push
lock
call
push
lret
pop
push
sahf
push
test
adc
xchg
sub
add
add
lahf
rcrl
lock
iret
xor
fstl
xchg
test
sub
lahf
pop
dec
shlb
int
repnz
insb
add
cmp
or
jg
mov
in
mov
mov
push
mov
popl
dec
push
add
imul
mov
push
incl
xchg
jno
add
xchg
add
lret
fwait
adc
icebp
bound
or
dec
and
iret
sub
ret
cmp
add
and
pop
jo
add
fs
sbb
scas
inc
push
jbe
or
rolb
pop
orl
mov
sti
lds
roll
mov
and
jo
jae
adc
inc
and
pop
fists
xchg
jge
imul
fucomip
loopne
mov
outsl
data16
sub
imul
int3
femms
adc
adc
loop
mov
gs
cmpb
scas
fadds
mov
test
cmp
sbb
mov
push
popa
add
mov
add
jnp
testw
sbb
ret
pop
mov
mov
add
add
fwait
inc
xchg
sub
sbb
pop
jns
mov
shrl
mov
and
aaa
pop
cwtl
loopne
stc
cmc
cmpsb
add
push
and
jl
sbb
lea
xor
mov
lds
jbe
push
into
add
fistps
add
mov
pop
push
andl
mov
test
add
add
test
and
pop
sub
add
mov
add
xchg
mov
add
sarl
jle
pusha
bound
push
add
iret
xchg
ret
and
pop
add
sbb
in
mov
push
sbb
xor
loope
lret
add
push
test
jno
jp
aad
out
push
out
sbbb
cwtl
test
movsb
ja
sarl
insb
cmpsl
dec
xor
icebp
in
jmp
mov
add
loope
xchg
push
cmpl
dec
add
cmc
xchg
fwait
test
or
cli
sub
add
jo
pop
push
push
add
rcll
add
js
and
dec
add
data16
add
push
mov
cld
testb
popa
aad
sbbb
adc
or
inc
outsb
add
clc
or
lcall
cmpsl
mov
gs
stos
popf
addr16
mov
add
mov
inc
mov
mov
xlat
inc
inc
pop
add
repnz
sbb
and
repz
add
and
xchg
movl
push
imul
lods
add
iret
cmp
add
xchg
les
inc
ja
scas
mov
test
das
add
mov
and
sbb
movsb
dec
call
and
jae
lahf
pop
lds
hlt
cmp
stc
pop
dec
sbb
jbe
out
cmc
push
stc
stc
data16
lods
pop
add
sbb
lds
add
mov
in
dec
pusha
inc
enter
mov
add
add
fisubs
bnd
dec
add
lock
sub
sub
inc
xchg
inc
aas
outsb
js
insl
int3
mov
lcall
add
cmpb
sbb
data16
call
int3
jle
or
pop
push
push
repnz
xor
push
aas
popf
loope
test
inc
loope
sub
ds
gs
leave
loope
pusha
mov
nop
aam
aaa
lock
loope
jnp
add
jo
lret
add
aas
dec
adc
imul
pop
pop
add
data16
sbbl
andb
fcomps
lods
cmpb
dec
lea
sbb
fs
das
les
fildll
dec
add
or
cmc
jnp
addl
loop
add
mov
repnz
les
loopne
mov
jmp
test
inc
cmc
rolb
xlat
lcall
add
in
cmp
imul
inc
rcrb
and
inc
add
xchg
and
insl
roll
out
jg
in
nop
add
dec
jg
orl
stc
inc
call
add
add
repz
andl
scas
jae
inc
and
fiaddl
mov
jl
and
mov
popa
dec
pop
shlb
addb
in
xchg
ret
andb
test
jns
add
movsb
aas
pop
fcoml
rorb
les
sbbb
popf
cmp
daa
sbb
addl
ror
mov
jae
mov
lock
xor
pop
adc
pop
fmull
je
or
cmc
in
sub
lds
jmp
ss
cmpsb
mov
sub
ljmp
push
std
fnstcw
push
pop
adc
adc
dec
adc
out
loop
add
and
cmpsl
mov
xchg
push
roll
or
ja
mov
ret
adc
add
mov
xchg
jle
scas
jo
push
pop
imul
cs
ds
sub
cmc
and
or
push
cmpsb
mov
sub
inc
data16
stos
nop
repz
add
jl
mov
fidivrs
jnp
cld
add
and
add
ds
inc
xor
fbld
push
add
xchg
add
in
hlt
pop
or
aad
add
gs
aaa
ss
enter
out
orl
in
bound
sbbb
lea
shlb
into
stos
add
das
mov
rcrb
cs
cmp
push
in
mov
add
cli
inc
pop
jge
call
sub
jne
add
sarb
mov
das
in
xchg
and
movl
arpl
lahf
sub
test
add
jno
cmpsl
imul
cwtl
xchg
out
adc
cmp
mov
inc
mov
add
push
xchg
add
adc
movb
add
test
inc
mov
stos
or
nop
xor
fcompl
je
mov
mov
mov
mov
es
pop
xchg
pop
out
or
cmc
mov
loop
gs
cmp
mov
add
subb
cmc
bound
add
outsl
mov
icebp
lea
outsl
sbb
hlt
lea
pop
add
jg
sub
pop
xor
cli
sub
in
fisubl
mov
sbb
pop
lods
outsb
xchg
add
into
nop
mov
jmp
xor
test
fdivl
pusha
xor
fs
mov
ret
add
adc
sub
js
bound
push
jecxz
sub
inc
add
rolb
xlat
add
repz
std
shl
das
jae
adc
test
sub
lock
push
pop
insl
add
out
jno
ljmp
imull
inc
shlb
aas
add
repz
pushf
jae
fistpll
lds
imul
repnz
cmpsb
xchg
insl
ret
push
push
popf
out
and
lret
pop
stc
jns
or
push
cmp
sub
adc
stos
lock
pop
or
add
cmp
cmc
and
add
jg
dec
imul
dec
add
or
cs
loope
in
ds
int
and
jle
out
or
dec
sbb
sub
loope
clc
push
add
test
test
roll
ficompl
sub
test
ret
insl
xor
add
mov
andl
imul
jbe
xor
dec
push
test
pop
add
lret
push
push
pop
popa
cmp
push
insb
fldl
push
sbb
push
push
jmp
dec
sbb
adc
test
mov
test
mov
je
fsubrl
movb
add
jge
push
pop
xchg
es
inc
dec
add
cmp
loopne
jp
mov
sub
sbb
outsl
sbb
push
ljmp
cmp
mov
fcmovu
rol
push
push
ljmp
das
add
hlt
cwtl
pop
add
dec
frstor
xlat
test
sub
fwait
cmpsb
repz
add
adc
inc
push
inc
add
nop
cmpsl
add
out
add
and
and
scas
ret
btr
aaa
jmp
sub
sub
out
cmp
fidivrs
rep
fistpll
push
scas
xchg
popa
add
add
cmc
sub
add
add
xchg
sub
xchg
loopne
adcl
movsl
jl
sbb
lahf
loope
ss
mov
add
pop
loop
inc
inc
and
xchg
notb
push
xor
in
popf
imul
pushf
data16
inc
inc
pop
repz
mov
xchg
pushf
add
cli
or
inc
or
clc
aad
in
push
lcall
sbb
sbb
cmp
xchg
mov
in
cmpl
dec
push
pop
mov
push
push
cmp
fbld
loop
mov
add
stos
das
dec
cmp
nop
mov
mov
adc
insb
data16
das
or
add
imul
pop
add
ss
add
adcl
and
mov
mov
pop
out
cmp
xor
jg
cs
mov
out
ljmp
and
fsubrs
xchg
arpl
in
into
add
xchg
test
cmp
sbb
pop
adc
jg
test
pushf
push
sbb
cmp
adc
movl
fs
scas
xchg
xor
hlt
adc
lock
bound
cmpxchg
lock
fs
bound
mov
lahf
out
or
mov
sub
add
shrl
lods
mov
cmp
mov
push
sub
aaa
cwtl
and
mov
pop
add
enter
add
out
jg
adc
neg
and
jge
mov
mov
mov
xlat
in
pop
fdivl
sub
sbb
mov
stos
xchg
insb
enter
mov
std
and
mov
mov
xor
js
mov
inc
mov
in
mov
pop
add
jle
mov
add
sub
xor
add
dec
and
fidivrl
push
or
jl
enter
ret
jae
in
push
cmp
outsl
stos
rcll
jbe
add
or
jno
cmp
add
adc
stos
arpl
and
push
pop
mov
sub
aam
add
sahf
or
mov
mov
jo
mov
add
add
lret
pop
cmc
out
lock
lahf
loopne
es
or
ljmp
cmpsb
push
das
xor
or
xor
add
adc
add
jmp
push
ret
xor
out
dec
cmp
push
pop
pop
xchg
imul
or
xrelease
lds
add
sbb
mov
mov
add
add
addr16
sub
movsl
jo
mov
push
sarl
rorb
cmp
pop
jle
mov
lock
push
inc
adc
pop
xor
xor
add
mov
add
enter
push
fstpt
rolb
mov
sub
pop
xor
push
aaa
lret
or
sahf
sub
mov
adc
cmpsl
add
stc
ja
pushf
ret
add
cmpsb
int3
in
dec
add
fs
add
mov
mov
loopne
ds
sarb
inc
sub
outsb
scas
add
sahf
xchg
xor
or
dec
mov
mov
cmp
pop
daa
lods
sub
mov
and
mov
test
inc
jne
mov
es
popf
sbbl
mov
or
out
loop
add
jecxz
push
cmpsb
add
add
pop
mov
sbb
pop
loop
dec
jae
aad
push
mov
sub
ljmp
jge
add
rcll
aaa
faddl
pop
addb
mov
stos
dec
xor
fs
lods
imul
add
lock
mov
sbb
add
nop
cmp
add
popa
ret
add
mov
lock
lods
imul
insl
sub
fsubr
sarb
enter
sahf
sub
loope
add
pushf
push
push
cwtl
in
sub
cmp
popf
xchg
push
pop
sbb
add
xchg
or
xchg
sub
pop
push
add
je
sbb
mov
add
push
cmp
sub
lds
mov
jge
addl
jmp
sub
fs
dec
add
add
ja
lock
mov
add
movsb
add
lahf
das
or
mov
and
imul
sbb
hlt
jmp
loopne
add
lcall
jg
stos
pop
aad
lds
cmp
into
inc
mov
mov
or
add
dec
movsb
lahf
stc
add
mov
push
inc
adc
push
xchg
add
xlat
cmpsb
xchg
jo
jbe
push
dec
sbb
dec
outsl
add
push
and
cmpsb
add
mov
and
mov
or
in
pusha
icebp
sbb
stos
mov
test
mov
sbb
and
lock
jns
std
jecxz
stos
in
add
push
cmp
add
int
mov
sbb
add
add
push
add
add
cmp
out
mov
pop
dec
add
add
scas
xchg
test
scas
insl
add
cli
out
mov
pop
add
gs
and
inc
std
hlt
add
aam
inc
leave
negl
push
test
pop
je
int
mov
pop
mov
jg
test
pop
mov
mov
aam
outsl
xchg
and
push
sbb
fcmovb
mov
adc
aas
out
repnz
jmp
pop
out
dec
popf
sbb
repz
push
add
hlt
test
popa
jae
xchg
pop
das
test
ret
xor
inc
in
push
pop
cmpsl
das
in
orb
dec
add
xchg
scas
mov
aaa
repz
out
add
add
jmp
push
adc
xchg
push
fcoml
adc
add
jns
jmp
dec
popf
xchg
add
loop
adc
mov
pop
mov
sbb
fidivl
dec
repnz
sub
push
pop
inc
add
lock
inc
sub
dec
shll
jae
cltd
lret
outsl
pop
push
or
push
popl
dec
ret
pop
test
sub
dec
cmp
or
lahf
jecxz
js
ljmp
jns
iret
inc
sahf
xchg
xchg
dec
jge
pop
loope
push
out
mov
idivb
xchg
add
outsl
add
jo
mov
mov
call
lret
fs
outsl
lock
add
mov
add
xor
das
repnz
cld
add
jmp
add
mov
js
and
mov
and
mov
add
mov
xor
lods
sbb
push
and
faddp
in
and
inc
roll
ret
std
jno
dec
lcall
xor
jb
dec
std
dec
inc
sub
sbb
int
adc
movsl
aas
push
xchg
adcl
dec
pop
mov
push
mov
dec
cmpsl
jb
fildll
jo
dec
xor
int
mov
push
xchg
jmp
mov
add
jge
subl
xchg
mov
push
loopne
in
hlt
lods
add
leave
addr16
add
adc
sub
xor
cltd
xchg
sbb
push
xchg
or
mov
mov
leave
mov
add
dec
subl
and
jnp
test
dec
add
dec
lods
cmp
jmp
cli
jb
dec
mov
pop
add
dec
xor
cmp
xor
add
add
push
dec
xchg
dec
or
mov
rcll
sub
adc
call
inc
vmwrite
pop
stc
addl
add
jg
mov
add
xchg
mov
fadds
dec
xchg
mov
cwtl
mov
xor
mov
shlb
mov
add
xlat
add
das
and
pop
stos
aad
mov
cmc
in
add
adc
xor
mov
lcall
mov
mov
cmp
movsl
faddl
jns
sub
sarl
add
je
adc
imul
cmp
cld
sbb
add
mov
fucomip
mov
aaa
dec
pop
xor
push
fs
pop
movsl
add
leave
leave
and
out
dec
data16
add
add
xchg
xchg
stos
jbe
pop
xor
mov
aaa
aam
shll
enter
jmp
mov
jno
mov
ljmp
jmp
imul
pop
push
mov
add
stc
add
pop
pusha
stc
dec
roll
movsl
sbb
and
je
push
xor
add
push
ds
jl
add
aas
jb
daa
mov
push
pop
scas
push
mov
sub
mov
sahf
loopne
in
add
lret
repz
sub
push
fstpt
lods
xchg
add
and
rolb
push
xchg
add
in
andb
sahf
add
add
stos
nop
jl
and
sti
mov
lret
bound
xchg
dec
add
inc
or
cmp
incl
push
fnstsw
add
jmp
leave
sahf
scas
jo
inc
add
pushf
add
std
mov
inc
leave
push
jle
test
clc
sub
and
pop
ret
mov
and
sub
push
xchg
sbb
pop
icebp
jp
fiadds
cs
inc
mov
daa
add
add
add
mov
arpl
xchg
pop
xor
hlt
add
xchg
call
in
fwait
pusha
outsl
icebp
sbb
cld
add
out
add
mov
adc
sbb
xchg
jle
enterw
out
adc
divb
add
inc
add
xchg
fstpl
xor
add
sbb
pop
add
jmp
loop
push
cmp
dec
add
xor
mov
xchg
stos
sub
inc
and
inc
test
jnp
in
imul
xchg
movb
adc
scas
je
sbb
cmc
xchg
int3
loopne
dec
sbb
push
inc
xor
inc
daa
inc
mov
adc
lret
mov
add
out
add
mov
sbb
add
add
fistps
cwtl
add
cmp
add
add
pop
aad
fistpl
add
mov
or
pop
add
xchg
add
testl
out
in
xor
add
aam
roll
jnp
and
fwait
jo
push
push
cli
sbb
setl
dec
jbe
add
and
ja
dec
mov
mov
add
outsl
cmp
imul
popl
mov
mov
add
adc
stos
int
mov
fstpl
sbbb
add
fnstcw
stos
lcall
mov
push
stos
lret
pop
mov
dec
repnz
into
sbb
hlt
incl
add
mov
add
aaa
inc
mov
mov
push
xor
loopne
mov
adc
mov
hlt
add
add
cli
cmp
and
in
mov
and
or
xor
popa
ss
aam
mov
and
add
lahf
xchg
mov
pop
add
loope
iret
inc
negb
imul
bound
mov
mov
pop
push
inc
dec
sarb
sbb
jmp
add
add
ds
add
mov
and
ss
enter
prefetchwt1
es
adcb
sbb
daa
push
mov
test
scas
sub
stos
pop
mov
add
push
jne
add
ret
add
push
mov
xchg
add
mov
xchg
cwtl
add
xchg
ficomps
aaa
insb
scas
pop
adc
mov
ucomiss
inc
iret
repnz
enter
loopne
ds
inc
movsb
jg
or
add
daa
test
lea
or
add
cmp
jo
ja
mov
add
test
push
pop
add
fwait
add
xchg
ficompl
test
outsb
pop
andl
imulb
std
mov
scas
or
adc
adc
pop
dec
out
xor
xchg
mov
xchg
sbb
icebp
add
cld
stos
add
addb
mov
add
cmp
inc
call
add
mov
add
cs
loope
out
int
push
inc
jl
cld
sbb
xlat
push
mov
dec
stos
sahf
in
nop
sbb
imul
loop
add
loopne
divl
inc
mov
inc
aas
xor
test
mov
mov
cli
and
pop
clc
sub
add
cmp
lahf
adc
cwtl
mov
fs
pop
pop
stos
pushf
dec
add
mov
inc
push
mov
aaa
mov
add
add
push
xor
les
or
add
push
mov
fldl2t
pop
adc
push
imul
xchg
mov
push
add
in
add
jle
dec
add
jne
cmc
xor
cmpsb
aaa
add
add
sti
scas
add
fbld
cmpsl
clc
inc
add
in
push
enter
aad
xchg
mov
stos
mov
aam
dec
cmc
fucomp
mov
sbb
rorl
xor
add
add
jmp
add
mov
sti
inc
push
mov
pop
cmp
loop
fsts
cli
xchg
iret
filds
sahf
test
jge
sbb
add
mov
icebp
inc
out
mov
jmp
out
scas
add
cmpl
push
movsl
fsubl
and
out
adc
adc
lahf
inc
test
je
jge
sbb
add
fwait
rcrl
fadds
cmp
inc
ds
enter
aam
xor
std
sbb
cmpsb
adc
pop
mov
add
add
add
cs
mov
adc
xor
xor
dec
cli
xchg
test
add
movsb
popa
jb
out
cmp
sbb
jb
movsb
cltd
or
sub
mov
imul
xchg
and
push
and
mov
mov
repz
add
mov
add
mov
dec
and
add
cmp
das
xor
mov
mov
cmc
sub
lds
shll
dec
dec
pop
lcall
inc
add
stos
mov
sbb
mov
ffreep
mov
add
cltd
sbb
push
add
pop
add
lea
push
push
pop
icebp
insb
add
add
fsubp
cmpsb
push
jp
add
cmp
shrb
jnp
add
gs
sbb
movsl
adc
arpl
or
add
jmp
mov
dec
addr16
mov
repnz
aam
mov
pop
xor
es
push
fwait
test
add
dec
dec
dec
popa
nop
outsb
inc
data16
ljmp
add
aam
add
sbb
iret
mov
add
and
push
es
sbb
add
add
leave
and
mov
add
mov
and
push
jl
push
dec
xchg
and
jg
and
add
add
xchg
jmp
add
add
sub
push
add
inc
mov
repnz
push
pop
sahf
push
cmc
xlat
push
adcb
daa
xchg
xor
adcl
jmp
add
or
adc
mov
jne
cmp
inc
push
add
imul
cmp
mov
mov
repnz
aam
add
js
add
aad
xchg
xor
out
mov
orl
add
scas
add
testl
and
outsl
jl
adc
test
call
cmp
scas
addl
xchg
add
loope
jne
push
push
test
push
jb
mov
cmp
cmpsb
mov
xchg
test
jle
add
cmp
cmpsb
mov
inc
jbe
mov
sbb
xor
xor
or
jae
lcall
popf
pushf
mov
push
xchg
adc
loop
add
mov
jle
sub
es
mov
jae
test
push
ret
add
push
test
sub
jb
int
into
push
fsts
jbe
jl
leave
sub
inc
add
movzwl
jp
sti
pop
int3
movsb
das
fildl
dec
pushf
push
adc
testb
pop
movsb
jne
pop
pushf
movsb
test
sbb
xchg
daa
xor
orb
out
push
scas
pop
stos
insl
inc
repz
add
and
adc
mov
scas
test
xor
shrl
popf
sub
add
add
ret
jle
lret
cmpsb
popl
xorb
cmc
mov
lret
das
inc
mov
add
fsub
jle
jg
push
stc
and
mov
mov
cmc
repnz
shll
and
je
gs
inc
add
xor
enter
imul
sbb
mov
xor
pushf
push
inc
popa
notb
jecxz
jbe
cmp
fimull
adc
sbb
out
test
mov
xchg
lods
lock
xor
fwait
mov
adc
out
jbe
and
daa
dec
lcall
sbb
xlat
xchg
sub
outsb
push
adc
pop
cmpsb
lds
xlat
cmp
adc
dec
daa
loopne
xchg
add
hlt
lods
filds
adc
gs
scas
and
imul
fisubs
xor
test
mov
mov
lea
test
cltd
mov
icebp
jbe
add
add
ds
mov
aad
pop
sbb
mov
movsb
pop
pop
aam
sub
mov
sbb
pop
add
pusha
ds
hlt
das
or
xchg
cld
add
pop
movsb
cmpsl
in
xor
jno
mov
push
add
push
add
add
popl
mov
sub
mov
add
push
inc
jecxz
add
clc
loop
fs
cmpsl
xor
add
sub
sarl
inc
xor
add
add
jecxz
add
cltd
pop
shlb
push
stos
sub
rcrl
leave
inc
and
add
jecxz
add
jg
push
fiadds
and
and
xchg
cmpsb
lret
xchg
sub
test
ja
sub
push
add
mov
add
jno
xor
cli
fildl
sub
cmc
mov
or
hlt
push
int3
popf
in
add
push
add
pop
mov
add
add
loopne
sti
cli
add
add
jecxz
cld
dec
sahf
mov
addl
test
push
mov
add
cmovbe
into
mov
push
pushf
adc
lods
fiaddl
push
popa
cmp
and
push
xlat
add
xchg
xor
in
add
int
pop
pop
xchg
add
mov
movb
xchg
mov
sbb
mov
xor
sub
add
sahf
and
and
je
fcomi
mov
fnsave
dec
pushf
jmp
mov
add
inc
mov
add
mov
test
bound
jge
aaa
xchg
pop
mov
add
inc
push
add
in
rcll
xlat
rol
jae
lcall
scas
cmp
fsts
in
mov
int
filds
xchg
pop
pusha
ja
adc
or
add
lahf
xor
mov
push
ffreep
movl
and
sub
jmp
rolb
andb
popf
repz
cltd
adc
xchg
notb
iret
ret
cmpsb
shrb
icebp
fstp
insb
add
jmp
fmull
inc
add
addr16
gs
xor
xor
and
inc
pop
sbb
sub
jge
sbb
jmp
add
mov
pop
push
aam
das
cld
adc
pop
inc
or
mov
js
push
hlt
and
push
add
jl
push
lock
add
add
imul
pusha
inc
push
adc
pop
lock
sub
mov
dec
mov
subl
lahf
ret
add
mov
into
push
sub
sti
pop
in
sub
negl
mov
popl
adc
add
pop
or
adc
add
imul
rcrl
or
xchg
xor
sbb
dec
mov
jl
call
int3
stos
pop
add
cmc
clc
mov
jb
testl
movsl
xchg
call
lahf
add
inc
lods
pop
sub
outsl
adc
add
mov
roll
sbbl
pop
in
lods
jmp
and
es
loopne
sub
push
mov
hlt
loopne
out
dec
jb
push
lret
add
loop
int3
add
loopne
jne
inc
add
cmp
outsl
pop
push
and
loope
fndisi(8087
adc
stc
pop
sbbb
movsb
out
movsb
xchg
add
add
and
adc
sub
arpl
cmp
add
push
mov
int3
add
stc
sub
jle
arpl
filds
pop
dec
push
jmp
mov
and
sbb
sub
pop
adcl
dec
mov
into
xor
add
mov
lret
or
in
push
lea
adc
fcoms
dec
pop
nop
sub
push
adc
jg
adc
ret
std
setge
add
mov
dec
out
add
or
in
add
in
mov
xor
outsb
add
add
cmp
scas
addl
aad
scas
call
xchg
jne
dec
add
sbb
mov
lahf
mov
inc
push
add
sbb
mov
mov
lods
pop
ds
pop
je
std
add
xor
out
or
sahf
ret
push
cld
sub
cmpsb
jecxz
add
ret
loopne
or
lds
ljmp
mov
aaa
call
ret
add
xchg
pop
cmp
mov
mov
stos
jg
xchg
fucomi
aad
stos
add
in
jge
pop
and
pop
bound
lods
or
dec
fldt
add
fmul
add
sub
xchg
flds
fbld
dec
add
add
push
mov
jmp
push
inc
outsb
stc
push
add
xchg
sbb
mov
xchg
mov
adc
hlt
lds
scas
xchg
adc
ret
faddl
sub
push
scas
add
mov
xor
xchg
add
test
lret
pop
jle
bound
inc
gs
pop
int
xor
add
sbb
add
mov
add
jno
sub
or
imul
out
cmp
mov
inc
pusha
sbb
shll
sub
xorl
popa
add
push
jae
inc
push
popa
push
add
sbb
pop
inc
stos
push
stos
push
int3
adc
sbb
call
mov
cltd
js
jo
sub
add
fdivl
mov
mov
idivb
sub
inc
pop
mov
movsl
or
add
pop
mov
push
dec
sub
sub
inc
dec
shlb
jno
faddl
sbb
adc
cmp
add
sbb
add
push
jno
and
sub
sub
cmpsb
mov
dec
fwait
and
lret
insl
fisubrs
add
in
out
inc
add
es
pop
xchg
pop
push
out
sbb
mov
add
push
pop
add
mov
mov
insb
and
mov
repz
mov
add
aam
and
imul
lret
pop
add
and
sub
fisttpl
add
fadd
or
add
mov
dec
lds
mov
mov
and
loop
sbb
jbe
adc
subb
push
add
add
cmp
xor
add
in
scas
pop
and
hlt
arpl
and
pusha
cmp
sbb
repnz
add
dec
dec
push
icebp
pusha
xor
addl
aam
mov
imul
add
hlt
inc
jbe
daa
incb
fldcw
push
add
mov
inc
filds
iret
sbb
shrl
aas
dec
add
adc
inc
sbb
add
int
push
add
push
add
cmp
ret
stc
add
stc
dec
inc
or
jle
jne
dec
cmp
bound
push
add
ds
enter
bound
cmp
sub
scas
imul
aaa
jne
mov
es
add
loopne
and
fdivl
mov
ss
cmp
add
lods
cmc
roll
add
std
popl
sarl
mov
adc
mov
lods
xchg
or
push
jns
pop
mov
jg
push
jae
fwait
pusha
addb
sbb
mov
out
repz
and
lea
cmc
cwtl
ljmp
add
outsb
add
xor
lcall
adc
insl
fcoml
sahf
add
mov
cmp
mov
xchg
add
and
in
sub
and
add
add
stos
and
inc
mov
hlt
and
lcall
fadds
out
push
lods
cmp
mov
inc
rorl
fdivrs
ret
andb
lahf
cmpsb
cmp
cmp
jp
fisubrl
xchg
clc
cmp
imul
mov
and
xchg
fimuls
int
ss
inc
mov
jns
ret
mov
in
pop
ljmp
dec
inc
mov
std
dec
lods
xchg
add
jmp
xlat
xor
rcrb
push
and
bound
pop
imul
cmpsl
cmp
push
mov
add
loopne
mov
lret
add
imul
inc
cwtl
push
add
in
mov
out
add
stc
aad
mov
or
repz
push
jne
repz
add
imul
pusha
push
je
data16
ljmp
into
push
xchg
inc
std
push
std
mov
push
pop
insb
cmp
mov
and
mov
sbb
add
add
scas
and
insl
ja
orb
ds
lods
mov
cmp
xor
mov
shrb
add
jl
add
std
jne
aad
pop
push
out
enter
add
mov
lahf
mov
add
movsl
addl
clc
scas
cmpsl
add
pushf
add
add
jl
mov
mov
add
jno
nop
lods
je
dec
add
insl
out
into
jmp
test
ss
iret
arpl
adc
sarl
add
std
push
push
dec
fcom
jno
adc
movsl
fs
add
pop
cltd
loop
aas
xchg
iret
cmp
jno
lret
ret
or
adcb
data16
pop
jle
stc
xlat
xor
fldenv
sub
loop
lea
mov
aas
xchg
add
push
movsl
inc
lods
mov
adc
shll
cmp
loope
ja
xor
inc
pop
lods
inc
pop
insb
push
xchg
fldt
mov
jp
pop
mov
fldcw
nop
pop
inc
ret
mov
ljmp
popa
insl
cmp
add
movl
sub
jbe
sahf
lretw
or
inc
cmp
jp
in
sbb
packssdw
inc
lahf
cmp
cld
and
add
pop
es
xchg
add
mov
leave
xchg
dec
iret
pop
into
add
xor
cmpsb
sub
mov
cmp
adc
add
push
cmp
outsb
xor
push
add
adc
xchg
ja
sbb
imul
inc
ret
mov
cmp
leave
leave
popf
cmp
aaa
sub
sub
xchg
inc
xchg
add
push
cmpsl
mov
push
stc
mov
xor
ljmp
sub
stos
push
bound
out
cmp
mov
test
stos
mov
mov
jmp
lods
xchg
daa
inc
xchg
out
int
add
add
pop
add
aaa
into
clc
push
add
adc
add
jle
std
sub
xor
add
leave
aad
xchg
fs
dec
inc
das
iret
push
adc
loop
ret
pushf
add
sub
aad
jnp
add
jmp
arpl
cs
lcall
lock
pop
testl
inc
mov
popa
add
vmwrite
inc
and
and
add
push
add
add
or
xor
fisubs
adc
add
test
cltd
shr
mov
mov
daa
add
xchg
test
push
inc
pusha
or
insl
out
mov
movsl
adc
pop
push
ljmp
cmpb
mov
and
das
pop
ficomps
xchg
mov
mov
std
push
or
add
pop
add
mov
movsb
mov
xor
aas
shrb
in
scas
add
jne
add
inc
cmp
add
add
push
inc
add
cltd
bound
jns
xor
mov
push
cmp
and
add
daa
mov
dec
add
lret
add
add
bound
nop
xchg
out
stos
inc
cli
push
dec
sbb
sti
mov
out
push
add
aaa
js
sbb
push
loop
mov
sti
out
sahf
mov
add
xor
mov
ficomps
push
jae
pop
mov
ret
or
add
xchg
pushf
out
dec
adc
pop
mov
add
enter
fiaddl
rcrl
sub
pop
pop
outsb
arpl
aaa
int3
adc
and
movsb
push
jecxz
mov
add
ljmp
test
in
xlat
shrl
push
dec
int
mov
aaa
push
pop
jb
and
std
pop
adc
stc
add
das
mov
dec
pop
mov
mov
mov
xchg
fbstp
add
add
add
xchg
in
and
insl
jbe
ljmp
push
jecxz
stc
add
add
ret
hlt
xor
pop
pop
xchg
lock
inc
add
jge
into
jle
clc
jp
nop
loope
xchg
bound
inc
int
jle
sbb
rolb
lcall
mov
fwait
aas
xchg
insl
xlat
dec
aad
std
or
les
sbb
incl
fwait
leave
jns
jne
fcoms
mov
add
leave
mov
loop
inc
add
sub
inc
push
add
in
inc
mov
inc
add
out
and
pop
lds
leave
or
ret
stos
push
add
jnp
outsb
fisubrs
xor
out
ss
popa
jge
add
inc
add
add
jno
shrl
cwtl
push
jecxz
test
add
es
add
decb
pop
push
pop
push
inc
dec
addl
add
inc
xchg
cld
pop
popa
mov
add
add
repnz
arpl
adc
xchg
add
sbb
inc
xchg
or
and
mov
lods
add
xor
cmp
pcmpeqd
insl
imul
inc
push
inc
cmp
or
jmp
lret
push
add
das
data16
adc
sbb
ja
xor
ss
loop
push
and
mov
mov
pand
push
leave
fs
dec
stos
add
xor
cmp
ret
jns
pop
pop
fiaddl
and
jle
in
mulb
or
negb
mov
in
inc
es
mov
cltd
add
mov
inc
pop
aaa
scas
cmp
out
sbb
or
enter
add
imul
lock
sub
or
sarl
lahf
lock
pushw
outsl
sahf
add
jae
xchg
stos
addr16
push
andb
mov
out
jl
ljmp
roll
add
outsl
mov
inc
add
in
xor
aas
sahf
xchg
mov
push
jae
mov
les
mov
mov
xchg
popa
arpl
inc
int
add
add
sbb
popf
cmc
notb
add
xchg
stos
lret
shrl
sbb
std
mov
mov
add
add
mov
xlat
add
mov
mov
and
in
aad
dec
shll
loope
xchg
cmpb
outsl
add
mov
outsb
insl
lcall
test
pop
ret
in
add
into
imul
pop
sub
js
xchg
add
mov
psubb
push
xchg
mov
inc
jns
add
cmpsb
add
iret
add
call
add
add
aad
cmc
add
dec
inc
cmpsb
push
addb
jo
es
ffreep
test
idiv
adc
aas
fcom
js
adc
pop
mov
nop
pushf
add
test
rcrb
in
lret
inc
lret
pop
iret
add
adc
xor
jne
addr16
test
xchg
sub
add
pop
leave
mov
ret
or
jle
or
mov
lcall
pop
add
or
mov
shrb
dec
icebp
add
jecxz
repz
add
add
add
or
dec
je
enter
sbb
pop
std
lahf
in
fbld
adc
cmpsl
jb
or
fimull
cli
fmuls
mov
or
mov
sub
sbb
cmc
insb
xchg
pop
or
scas
add
les
push
add
cmpl
mov
add
add
cmp
or
add
fisubs
add
daa
je
or
xchg
inc
mov
sbb
lds
lock
and
sti
mov
add
adc
add
sub
cmp
add
ss
dec
insl
fs
cmpsb
mov
xchg
aas
adc
das
pop
mov
adc
mov
idiv
jmp
or
stc
ret
inc
add
dec
cld
je
jmp
adc
in
hlt
push
js
stos
mov
cli
je
ret
and
or
sub
pushf
add
push
mov
cwtl
loopne
je
push
xor
jnp
lret
arpl
iret
inc
mov
sbb
cmpsl
or
test
add
movsb
xlat
add
cmc
scas
movl
push
mov
push
lret
mov
adc
mov
and
sti
mov
inc
adc
pop
push
daa
add
mov
and
in
inc
cmpl
push
add
jmp
xchg
gs
sarl
data16
fs
pop
jmp
add
mov
in
aam
xor
xor
mov
pop
nopl
add
add
fidivl
in
add
fwait
dec
sbb
xchg
pop
daa
icebp
add
xor
clc
and
imul
cli
inc
pop
sahf
sbb
cwtl
fsubl
sar
test
dec
mov
lods
add
sbb
pop
enter
movsl
movsl
add
fwait
or
sub
loopne
dec
inc
insb
or
add
ds
loope
ja
arpl
int3
xchg
out
push
xor
lods
cmp
arpl
or
mov
push
adc
out
xor
jl
mov
dec
mov
lret
xchg
imul
mov
lea
pop
into
rorl
in
sbb
or
ljmp
sub
xchg
add
add
pop
xchg
dec
pop
dec
pop
jle
mov
mov
or
add
arpl
imul
fld
xor
addr16
fsubs
jns
outsl
jge
cwtl
clc
add
push
enter
sub
pop
mov
pop
imul
mov
xor
ja
out
adc
rep
jns
ja
sub
add
or
xor
sub
sub
nop
sbb
pop
ret
add
out
xchg
inc
sub
cmp
jmp
out
pop
add
jb
push
add
mov
inc
mov
sub
les
mov
cmp
add
inc
add
popa
cmp
add
daa
add
add
test
jl
pop
cmp
sub
mov
dec
cmpb
sub
and
add
pushf
fistpll
add
xchg
gs
fstl
movb
and
cmc
or
add
aad
bound
xchg
lea
sbb
sti
adc
cmp
push
mov
add
and
jle
lods
stos
mov
ret
sbb
push
and
inc
add
inc
mov
mov
rolb
inc
arpl
dec
aad
outsb
dec
xchg
lret
lret
mov
movl
jp
pop
mov
incb
push
add
mov
add
js
push
int3
push
xchg
jge
addl
jo
daa
xor
dec
aam
push
aaa
xchg
mov
insb
xor
add
sub
cmp
cmpsl
xchg
in
sub
out
int
sub
jnp
sbbl
inc
add
stos
scas
add
lcall
jg
adc
ss
stos
jg
add
pusha
inc
and
mov
xchg
inc
pop
add
mov
insl
mov
mov
out
sub
mov
and
pop
dec
sub
aas
or
push
outsl
pop
mov
push
add
inc
add
push
push
int3
push
jno
nop
jnp
xchg
cmp
flds
xchg
add
sbb
es
xor
addb
inc
popa
xor
sub
inc
mul
jnp
ret
pop
sub
lods
sbb
jbe
add
repz
add
add
mov
in
repz
aaa
pop
jl
mov
pop
rclb
scas
mov
inc
adc
fldt
pop
inc
cmpsb
mov
stos
xlat
fisttpll
mov
and
push
lods
push
mov
or
and
add
inc
push
xchg
mov
dec
rcrl
repz
stos
insl
add
mov
notl
pop
dec
vpmacssdd
dec
mov
push
adc
popl
jge
jae
dec
jno
add
fs
inc
xchg
dec
scas
add
mov
verw
scas
lods
add
lahf
test
pop
jge
mov
mov
xchg
push
or
xchg
pop
jnp
xchg
js
pop
ficompl
mov
sub
jecxz
add
mov
ljmp
sub
and
inc
mov
bound
mov
mov
add
aad
mov
cltd
mov
inc
fsubl
push
and
sbb
dec
add
mov
jns
lods
inc
out
das
insb
mov
push
sub
daa
test
or
add
jo
add
aam
lods
loop
jne
outsl
inc
mov
jns
pop
push
rcll
xchg
sahf
jecxz
rcl
sub
lods
cmpsb
inc
mov
xchg
adc
xchg
cmpsl
mov
bound
dec
fsubr
add
jmp
dec
sbb
adc
xchg
testl
das
push
pop
push
shll
push
inc
xor
cld
xchg
xlat
sub
stos
mov
outsl
fstp
add
mov
dec
out
cli
sbb
lret
sub
add
push
roll
or
jle
and
jbe
add
add
sarl
fwait
and
int
test
xlat
nop
xchg
hlt
adc
jge
push
jnp
scas
add
in
add
in
jno
jnp
pop
xchg
pop
ds
inc
in
in
add
and
lcall
push
pop
dec
mov
sbb
lret
add
fisubrl
and
mov
add
jge
pop
in
jp
and
loope
les
orb
cmp
dec
outsl
adc
lret
imul
xlat
dec
mov
inc
stc
je
mov
inc
add
rorl
je
jge
sbb
ljmp
cwtl
jo
negb
xor
inc
incl
sub
out
add
jne
arpl
mov
mov
push
adc
add
sbb
mov
add
fnstsw
jp,pn
mov
outsl
sbb
dec
adcl
movsl
hlt
inc
adc
sbb
push
pandn
inc
add
popf
add
jge
jno
dec
clc
add
jns
sub
loope
inc
push
enter
testb
or
dec
jle
aas
sbb
pop
mov
add
adc
cmp
loop
shlb
lret
mov
add
add
add
ret
mov
es
and
test
ss
mov
outsl
hlt
adc
sbb
add
and
jle
aad
rclw
cmpsb
les
scas
pushf
xor
dec
faddl
sbb
jmp
and
mov
rclb
add
or
out
jns
and
add
xor
add
adc
sarb
jns
movb
xchg
push
sub
inc
add
scas
and
pop
add
mov
add
inc
pop
push
cmp
mov
mov
add
add
add
and
mov
cmc
shll
add
cmp
lahf
test
pop
pop
xor
adc
xchg
xchg
xchg
fildl
shr
add
add
add
cmp
xor
push
loope
mov
dec
imul
mov
jne
add
add
mov
mov
es
xor
push
sub
sbb
and
push
xor
xor
push
lods
jp
mov
test
sub
add
loope
and
inc
add
pop
or
jne
call
lds
add
sahf
jno
fidivrl
int3
shrb
cmpsl
loopne
lahf
push
add
xor
stos
and
scas
add
sub
push
and
xor
push
mov
lcall
ljmp
rcrl
add
pop
enter
push
lfs
mov
repz
sbb
jp
dec
xor
sub
pop
fiadds
mov
outsb
cmp
dec
dec
push
mov
mov
add
pop
imul
or
lret
and
and
jne
pop
inc
int3
sbb
jle
ss
push
sbb
push
inc
cmpsl
jg
and
out
add
xchg
add
pop
nop
inc
fstpl
or
pushf
inc
xchg
cmp
mov
and
mov
cs
ret
fidivrs
ljmp
stos
inc
outsb
leave
cwtl
roll
mov
add
sar
jae
xchg
fcomp
add
out
or
ficomps
lock
jb
stos
repnz
sarb
dec
inc
mov
neg
in
lcall
js
pop
push
cmp
fwait
movsl
in
movups
pop
mov
cwtl
add
cmpsl
mov
cmp
and
or
xorb
push
add
popf
in
jl
jl
push
je
adc
loopne
cmc
jmp
xchg
add
insb
sbb
add
add
rclb
sub
outsl
xchg
cmp
pusha
adc
and
popl
xor
xchg
shll
das
mov
push
loopne
test
xlat
xorl
xchg
pop
inc
add
test
test
and
iret
ret
inc
xchg
push
mov
add
xor
pop
popa
xor
or
cmpl
adcb
dec
test
ja
je
add
add
push
mov
cmp
add
adc
push
arpl
add
sub
xchg
sbb
insl
inc
add
pop
std
arpl
mov
adc
push
jno
les
add
cmp
popa
cld
sbb
inc
aam
loope
fiaddl
dec
fdivrp
clc
test
adc
xchg
adc
pop
add
jge
gs
add
cmpsb
ljmp
add
push
cmp
ja
imul
add
movsb
cwtl
sbb
xchg
add
mov
in
sbb
dec
jne
pop
insb
les
mov
orb
sbb
add
fistpll
jnp
fwait
mov
or
arpl
pop
movsl
mov
xor
divb
and
mov
dec
xchg
shlb
out
mov
add
add
sub
in
lods
out
push
push
fnstenv
ret
jns
iret
adc
lret
movsb
pop
adc
popf
adc
mov
loopne
add
xchg
bound
out
xor
loopne
add
test
mov
mov
add
cmpsb
pop
pushf
add
push
jb
jp
int3
push
out
xchg
jnp
push
and
std
in
outsb
add
test
cmc
imul
lret
dec
and
add
pop
mov
xchg
sub
add
clc
push
add
add
mov
decb
test
push
or
cmc
push
add
fldt
in
lea
adc
add
das
sub
add
pop
pushl
add
xor
je
insb
inc
stos
std
je
dec
stos
arpl
xchg
shlb
fildl
adc
xchg
cmc
mov
faddl
call
xor
pop
dec
add
loop
cmpsl
add
ss
lock
sbb
out
and
ja
add
mov
loop
add
ret
popa
loopne
in
popf
add
pop
cmpsl
ret
dec
or
fwait
sub
add
imul
cld
and
out
pop
add
jbe
add
ja
cmp
cmp
sbb
in
push
sti
data16
dec
add
xor
jae
ret
cltd
fldt
xor
lods
aam
lds
stos
cmc
pop
jne
add
cmp
xchg
xchg
jp
fwait
lret
cmp
adc
push
flds
push
pusha
aam
and
sarl
scas
cmp
sub
aas
ja
mov
xchg
aaa
and
insl
mov
mov
cmp
stos
icebp
roll
iret
dec
mov
sbb
dec
jns
pop
cmp
push
in
xchg
jecxz
xchg
add
pusha
test
mov
sbb
dec
cmp
add
add
add
dec
orl
addr16
add
stos
and
out
xchg
mov
fs
cmp
push
es
mov
mov
add
mov
inc
dec
popf
pop
es
mov
out
add
push
imul
movsb
out
addb
xchg
lods
aas
push
jne
lods
or
cmp
jne
les
sbb
xor
mov
add
int3
jecxz
jae
test
pop
add
pop
test
add
push
in
in
cmpsb
inc
test
mov
pop
mov
mov
add
fwait
jno
add
gs
out
xchg
test
vpunpcklbw
mov
repz
jno
out
inc
rorb
xor
sub
add
mov
inc
aaa
xchg
add
and
cmc
out
push
adc
cmp
xor
xorb
iret
daa
jae
mov
sti
and
imul
jno
hlt
add
outsb
sahf
mov
sub
jmp
mov
aam
popa
add
std
inc
jo
mov
test
movsb
add
add
mov
cmp
dec
sbb
test
dec
push
add
sub
xor
sub
aaa
fdivrl
ljmp
ss
adc
in
in
enter
inc
push
hlt
mov
sub
int
mov
and
repz
mov
or
out
cmp
add
dec
jne
dec
scas
clc
dec
fldl
xchg
out
sbb
sbb
in
xchg
mov
orl
fnstenv
loop
sub
inc
bound
scas
add
adc
mov
dec
daa
and
mov
add
out
adc
bts
mov
add
in
lret
add
orl
mov
pusha
sub
outsb
outsb
cmp
mov
daa
lea
jg
jle
add
mov
sbb
jmp
add
inc
inc
add
lahf
cmp
jmp
dec
je
or
and
in
push
and
add
push
scas
sti
cmp
push
ret
jge
jnp
cwtl
rorb
mov
pop
cs
call
scas
xor
movsl
add
scas
sarb
mov
and
rol
bound
mov
mov
jno
add
pop
mov
mov
add
xchg
loope
in
add
nop
push
cmp
pushf
filds
pop
push
inc
movsb
push
ss
imul
add
loopne
add
add
push
lret
xchg
jo
ret
add
mov
pop
and
fildl
outsl
out
lods
lahf
icebp
iret
cwtl
cli
add
cltd
jnp
dec
add
ljmp
int
xor
push
dec
clc
sti
add
add
ret
mov
jmp
shlb
dec
arpl
and
clc
add
mov
xor
add
add
cmp
fimull
sahf
bound
lahf
pop
add
jp
js
sbb
sub
inc
add
inc
es
add
jne
popf
add
jg
dec
sbb
mov
pop
add
xor
inc
or
adc
outsl
adc
daa
mov
outsb
test
fiadds
negb
mov
add
enter
and
add
repz
xchg
mov
mov
add
sbb
mov
mov
int3
sti
lcall
or
ds
ret
or
jp
mov
and
loope
cmp
add
nop
fcompl
iret
add
sbb
add
pop
push
mov
lcall
lcall
mov
repz
cmp
xor
dec
das
add
test
in
ret
lock
repz
int3
loope
add
mov
adc
push
mov
and
imul
add
add
jecxz
bndldx
ret
inc
aaa
add
popf
pushf
mov
jg
stos
fadds
ja
cs
sbb
mov
repz
testb
dec
popf
out
stc
add
test
add
adc
jl
and
cmc
xlat
daa
lcall
and
pop
lahf
fisubrs
enter
add
pop
push
sub
pop
cmp
sar
inc
fwait
lahf
add
shl
dec
inc
out
add
add
cmp
leave
fdivr
jge
mov
test
mov
testb
cli
add
jbe
pop
jns
shrb
clc
es
cmc
bound
mov
mov
or
movsl
mov
push
mov
xor
jbe
jecxz
pop
pandn
mov
stc
popa
mov
icebp
and
mov
cs
pop
dec
pop
mov
add
pop
inc
flds
in
add
loop
insb
add
xor
jp
jns
lret
rorl
and
dec
into
enter
push
dec
add
cld
out
in
add
ds
lock
push
es
ljmp
add
or
daa
mov
or
push
mov
jle
jns
faddl
sub
dec
xor
out
mov
in
adc
add
orb
push
imul
add
cli
sbb
repz
inc
test
add
xor
and
add
sub
sbb
sbb
movl
add
fwait
mov
mov
std
jae
aam
sbb
in
inc
xor
scas
lods
add
cmp
mov
xchg
add
add
test
add
in
jecxz
out
imul
and
aad
aam
add
lods
add
sbb
sbb
xor
add
aad
mov
jb
jo
xor
jp
add
push
ret
adc
xor
xchg
sahf
lds
cmp
xchg
movsl
ror
add
and
jp
xor
dec
add
xor
push
or
imul
mov
add
mov
popf
shlb
dec
adc
mov
in
add
cs
xchg
hlt
mov
push
inc
sub
mov
scas
mov
into
add
inc
push
push
dec
xchg
mov
outsb
lods
lods
les
add
testl
out
push
pop
add
out
add
leave
mov
mov
inc
ja
dec
testb
adc
popf
test
sub
push
fstl
rclb
add
inc
add
add
or
xlat
cmc
fmuls
sti
sub
mov
lahf
movsl
das
out
cmpsl
xor
orb
xchg
xchg
inc
inc
hlt
add
add
out
shrb
mov
loope
addl
inc
adc
cmp
les
in
cmpb
paddsb
cmp
pop
push
mov
jg
add
pop
cmpsb
add
pop
add
test
add
push
pop
jb
sbb
je
icebp
aam
add
clc
mov
xchg
xor
and
fidivrl
push
hlt
sbb
add
inc
sub
divb
mov
xor
cs
lds
rcl
gs
in
ds
or
mov
adc
or
fbld
add
popa
pop
fadds
stos
xor
add
cmp
sub
lods
mov
add
rolb
push
mov
dec
aaa
mov
inc
add
jecxz
sbb
adc
jl
push
add
sbbl
orl
pop
sbb
loope
add
loopne
dec
ljmp
cltd
in
xor
leave
mov
idiv
add
clc
adc
mov
mov
add
adc
adc
loop
and
push
out
sub
ss
mov
ss
add
dec
add
push
add
add
sbb
popf
inc
dec
iret
push
incl
mov
dec
out
add
lret
xchg
lock
and
xor
add
sbb
js
js
push
add
roll
lds
orl
mov
add
add
out
and
or
cmpsl
dec
int3
pop
add
pop
pop
or
xor
pop
xchg
mov
daa
xorb
aam
jmp
xchg
loope,pn
push
mov
lds
sub
add
inc
data16
cmpsb
xor
fiaddl
adc
outsb
leave
xor
test
fidivrs
das
fadds
insb
mov
outsl
sar
mov
call
mov
adc
push
dec
mov
ret
mov
add
pushf
loope
jmp
add
push
or
and
jne
shl
mov
fldenv
add
pop
pop
stos
inc
ficoml
int
jbe
fistps
jbe
cld
jg,pt
jnp
sbb
sbb
test
pop
add
pop
in
sub
mov
dec
xchg
outsb
pop
adc
inc
lcall
or
adc
add
insl
mov
or
add
shlb
add
pop
and
xor
ret
or
dec
fisubrl
bound
mov
push
jl
hlt
add
jmp
test
xchg
jmp
aam
in
add
or
daa
adc
notl
testb
jl
mov
mov
jecxz
add
xchg
add
xchg
add
test
add
imul
nop
and
add
ljmp
outsl
jl
xchg
pop
xchg
xchg
mov
sub
pop
pop
daa
bound
push
je
sub
add
inc
mov
add
xchg
or
jecxz
aaa
sub
inc
cmpl
scas
cli
loope
outsb
mov
fnstsw
pop
jns
std
jo
faddl
dec
aas
push
sub
icebp
imul
dec
sbbl
add
xor
pop
loop
jb
adc
push
negl
int
inc
rolb
add
xchg
rolb
mov
dec
mov
jle
in
stos
add
dec
mov
push
lret
sti
and
dec
sub
mov
add
add
aaa
add
out
xor
dec
cmp
push
lahf
popa
fisubs
jmp
mov
les
and
sarl
add
pop
or
adc
add
add
add
scas
out
and
add
ss
inc
add
out
add
xchg
push
movl
add
pop
and
adc
and
add
in
push
add
and
cmpsb
pop
cwtl
gs
jp
xor
int3
in
rorb
push
push
xchg
add
cmp
and
xchg
mov
iret
addl
mov
xor
jecxz
in
add
daa
add
fwait
andl
pop
in
ljmp
not
dec
dec
imul
iret
out
mov
pop
mov
xor
icebp
add
jae
ss
sub
mov
cmp
push
sbb
aad
into
stos
cmpsl
adc
pmaxsw
and
cmp
sbb
pop
add
push
xor
mov
adc
popf
add
sub
inc
add
push
loope
std
scas
out
and
repz
cwtl
dec
lock
xchg
call
sbb
mov
lods
add
mov
mov
and
scas
sbb
lret
adc
mov
mov
adc
add
js,pn
aad
lock
cmp
mov
pop
add
outsl
jae
push
jge
cmp
cmpsb
adc
add
add
mov
mov
std
push
push
dec
scas
mov
in
movsl
mov
add
inc
add
add
cmpsl
inc
add
lock
lcall
mov
add
sbb
mov
orb
insb
dec
mov
cmp
add
xchg
pop
or
movsb
mov
inc
fiadds
xlat
add
add
mov
ljmp
lret
pop
mov
cmp
add
bound
sbb
js
pop
mov
jno
shlb
dec
repz
dec
jbe
push
sbb
inc
mov
jb
arpl
mov
outsl
cmc
daa
sti
lods
sub
push
pop
add
sbb
lods
bound
sub
xchg
arpl
pusha
xor
mov
pop
cld
add
xor
pushf
and
add
adcl
es
inc
pop
mov
add
mov
add
mov
nop
add
xor
jp
add
icebp
add
stc
mov
jg
xor
cmp
add
ficoms
sbb
push
add
add
sub
add
int
mov
sub
sahf
sbb
imul
add
pop
push
lods
ljmp
jno
into
pop
fcoml
inc
cs
sub
push
add
inc
shrl
push
jbe
add
popa
imul
or
jge
mov
sbb
add
nop
mov
xchg
mov
jecxz
pushf
add
add
loopne
xchg
loope
cld
verr
fiaddl
out
sbb
cmc
fwait
jbe
inc
xchg
testb
cmc
mov
subl
mov
dec
rcll
mov
adc
bound
push
std
imul
dec
mull
add
mov
add
lahf
pop
pop
fs
inc
ffreep
jnp
bound
addb
pop
xlat
sahf
in
xchg
call
adcb
mov
subb
jmp
mov
lea
inc
psrld
pop
add
pop
je
scas
push
sub
xlat
mov
and
mov
cltd
test
and
lods
push
add
ficoml
rolb
add
dec
mov
fs
loop
fiaddl
mov
shll
inc
add
pop
movsb
dec
push
jecxz
cmp
or
aaa
inc
xchg
les
out
add
ret
cmpsl
cmp
sbb
add
lcall
mov
adc
sbb
in
add
movsl
aam
icebp
ljmp
jmp
inc
fildl
cli
jb
dec
std
adc
repz
mov
call
shll
adcl
push
or
cmc
cmp
inc
pop
add
inc
lods
cmp
mov
push
pop
and
lcall
pop
loopne
pop
dec
push
ror
sbb
loop
test
loop
dec
in
jmp
int
cmp
pop
or
lahf
cmp
xchg
add
sbb
mov
add
stos
mov
inc
test
loop
push
lods
add
inc
jbe
jno
adc
and
xlat
push
lahf
jns
adc
imul
clc
int3
leave
add
xchg
test
add
push
inc
adc
sbb
pop
jl
and
mov
add
inc
pop
sbb
cmp
repnz
and
sub
lahf
call
out
nop
inc
pushf
loopne
add
shll
or
add
or
add
sarb
aaa
pop
mov
mov
sbb
out
addr16
addr16
stos
jno
into
pop
add
mov
pop
add
cmp
ficomps
add
cltd
pop
mov
in
fiadds
call
fisubl
ficoml
add
aad
add
inc
mov
add
dec
dec
test
add
iret
add
push
loopne
test
fsubs
movb
in
lcall
pop
and
add
add
xor
add
xor
les
rcrl
orb
cld
xchg
or
jmp
js
test
push
sbb
addb
dec
add
in
cmp
lods
and
sbb
addr16
add
and
jmp
xor
rclb
add
data16
outsb
movsb
loope
cmp
adc
enter
adc
xchg
mov
push
add
sbb
add
loop
stos
or
mov
pop
sbb
add
xchg
jl
xchg
js
dec
adc
pusha
xchg
repz
and
add
inc
add
mov
sbb
movsb
fs
sub
add
fidivrl
popf
adc
hlt
jo
jp
add
cmp
ret
ret
roll
outsl
inc
mov
das
dec
bound
mov
bound
ficoms
fsubl
and
add
pop
jle
lods
add
adc
jne
mov
jp
inc
lahf
roll
andb
adc
add
or
fs
xchg
add
cmpsl
test
popa
inc
les
inc
imul
push
test
ret
xor
sbb
repz
std
push
add
mov
push
inc
cs
arpl
mov
std
or
add
push
stc
in
lea
or
lock
push
mov
pusha
mov
dec
cltd
push
shll
push
ret
mov
add
and
cmc
or
test
out
dec
pop
push
sbb
movsb
dec
dec
add
sub
ds
lea
adc
out
mov
add
add
les
xchg
stos
dec
cmp
xchg
lgs
inc
scas
push
add
xorl
out
jge
cs
inc
add
jb
and
and
outsl
push
adc
and
sti
sbb
jle
dec
jl
inc
jae
jg
es
add
popa
and
pop
and
test
add
jle
inc
or
mov
test
dec
pop
ja
pop
inc
frstor
xor
ss
pusha
and
xor
les
hlt
testl
jle
int
lahf
bound
push
jb
fcmove
add
dec
pop
aaa
cli
mov
out
ja
dec
add
movsb
add
outsb
jns
dec
add
push
and
data16
add
lcall
mov
add
in
xchg
and
jo
scas
xchg
cmc
xchg
shl
add
mov
jno
dec
mov
js
cwtl
stos
add
jno
es
add
inc
adc
popa
into
push
push
adc
and
jno
jnp
mov
or
cld
or
push
fs
cmp
cmp
ss
add
iret
add
insb
mov
pop
stos
ss
mov
sbb
loop
je
push
push
add
jge
add
fcoms
inc
sahf
sub
inc
pushf
aad
decb
les
sbb
jae
jae
arpl
add
add
cmp
nop
pop
xchg
scas
jg
pop
mov
dec
popa
and
push
pushf
adc
add
sbb
fimull
adc
inc
dec
leave
sarb
push
stc
mov
movsl
das
and
jmp
jge
sbbl
pop
xchg
pop
mov
add
mov
pop
mov
jecxz
add
into
pop
insl
sub
mov
aad
push
pop
lret
jae
pop
mov
jmp
add
inc
in
jp
mov
stos
icebp
cmp
mov
mov
sbb
stos
pop
add
jmp
test
mov
add
int3
sbb
out
mov
js
push
mov
cmpsl
shlb
pop
sbb
add
repz
add
addb
push
movsl
or
and
sub
sbb
pop
sbb
dec
clc
push
jmp
rcll
popa
les
cltd
addr16
xor
add
push
pop
jnp
push
xchg
sub
negl
add
cmp
popl
movsl
adc
add
inc
sub
jo
push
data16
mov
adc
jae
add
jmp
ljmp
sbb
jbe
loope
ljmp
and
mov
dec
out
pop
sub
cli
pop
pop
lds
pop
outsb
xchg
push
mov
addl
or
add
jp
inc
lret
sub
call
xchg
scas
pop
add
cli
insb
fstl
add
call
xchg
xlat
sti
mov
jg
mov
mov
cwtl
fiaddl
push
add
and
mov
adc
jecxz
ss
mov
pop
bound
inc
outsb
pop
push
icebp
aad
mov
sub
fucomip
sub
loop
aaa
inc
sti
pop
das
lds
pop
mov
xchg
dec
cmp
testl
mov
add
mov
add
mov
ds
ret
movsb
or
cmp
sub
pop
add
add
ljmp
aad
test
add
popf
xchg
add
or
xchg
cli
lret
add
add
cmp
jecxz
stos
push
xchg
call
stos
sbb
addb
nop
jmp
xchg
bound
daa
add
out
es
add
inc
or
or
push
mov
xor
adc
stos
and
fwait
dec
jge
cltd
sub
cld
dec
add
pop
ja
push
xchg
dec
add
dec
clc
hlt
mov
jg
jnp
mov
cld
lret
and
push
ds
inc
stos
bound
cmc
cmpb
add
mov
and
cmp
add
or
and
adcl
mov
fcmovnu
sbb
movsl
shrl
add
sbb
aad
inc
add
not
push
in
mov
mov
cmp
les
lret
xchg
out
jbe
data16
add
xor
cmpsb
and
dec
jmp
bound
stos
push
push
adc
sub
mov
add
add
and
push
add
inc
call
mov
add
aad
cmp
repz
add
sbb
sti
lods
inc
stos
lock
jmp
dec
xchg
fnstenv
and
xchg
icebp
into
jmp
jmp
cmp
add
imul
add
arpl
cwtl
cltd
cmp
imul
push
jbe
add
xchg
sbb
aad
push
daa
jle
add
adc
cmp
jae
add
sbb
arpl
test
ss
mov
jge
push
es
add
jmp
sub
stos
orb
pop
jle
and
test
add
add
movsb
rcll
orb
sahf
add
dec
mov
mov
add
js
xchg
adc
inc
or
pop
push
ja
adc
fwait
aas
xchg
add
sbb
add
test
dec
add
loop
add
mov
add
lcall
in
sub
insb
daa
je
inc
add
xchg
fdivrl
push
sti
cltd
add
add
pop
add
jmp
inc
add
sbb
add
sti
sub
add
xor
or
loope
ja
sub
add
sbb
add
add
xchg
inc
add
bnd
xor
or
add
out
sub
popl
dec
cmp
mov
add
sbb
lcall
xchg
add
jnp
daa
push
pop
add
adc
fndisi(8087
fwait
mov
pop
add
jo
xor
lret
rol
jmp
mov
shll
cli
add
lods
add
out
dec
test
insb
mov
sub
test
xchg
and
rcrl
add
sub
outsb
mov
inc
and
cli
nop
or
loop
stos
mov
xor
sbb
add
pop
orb
out
jg
repz
loope
mov
insb
cwtl
je
test
add
inc
add
movsb
into
outsb
add
push
and
aad
ret
clc
xlat
jo
imul
adc
cltd
jl
or
rcl
xor
xor
pushf
mov
sbb
mov
jg
jge
ret
add
movb
cltd
xor
cmp
test
dec
add
sbb
add
filds
inc
pop
inc
dec
xor
out
ret
add
mov
add
aad
push
pop
or
push
aam
outsb
mov
pop
push
aad
and
adc
aaa
jne
lods
mov
mov
les
jb
mov
and
push
sub
or
or
stos
sbb
push
mov
cmc
add
lret
stos
lcall
into
inc
add
sub
stc
add
pop
jg
cvtdq2ps
lret
add
les
mov
aam
roll
out
ret
and
lea
xor
outsb
jl
imul
out
pop
lods
cmp
fwait
cs
and
xchg
es
inc
mov
insl
test
cli
push
pusha
add
mov
ljmp
fbstp
shlb
pop
push
subl
jbe
and
int
js
in
jmp
add
inc
jns
por
dec
ljmp
out
sbbl
inc
les
jle
jg
lret
add
add
jae
inc
ljmp
mov
in
add
shr
mov
mov
mov
add
adc
jp
sub
test
adc
mov
ds
stc
dec
cmp
in
addb
add
negb
cld
mov
repz
movsl
lods
inc
in
or
fdivrl
lret
cltd
data16
push
sub
test
lds
sub
add
loopne
insl
add
aad
mov
xor
pop
or
push
jmp
xchg
hlt
cs
mov
movsl
and
or
aaa
fildll
mov
cltd
inc
dec
add
and
out
or
add
add
test
jge
rol
dec
jmp
push
xor
cs
cmc
lret
hlt
jle
rolb
aam
cmc
xor
adc
jns
sub
aaa
icebp
push
add
outsb
push
inc
sub
sbbb
popa
ret
add
or
add
nop
cwtl
pop
negb
aaa
aas
xchg
lods
dec
daa
inc
xchg
mov
xor
enter
int3
mov
out
outsl
js
or
adcl
leave
sub
dec
outsl
bound
cmp
imul
out
and
in
jmp
jg
add
in
mov
add
lret
hlt
js
repnz
andb
lock
push
sub
and
sti
shl
xchg
xor
dec
add
repz
cmp
and
add
pop
mov
in
cmp
jb
or
fbld
jecxz
push
xchg
outsb
ret
stc
xchg
add
jbe
rorb
adc
addb
add
or
loopne
lods
push
adc
aam
in
mov
sub
loope
sbb
pop
insb
inc
fs
das
add
rorb
xor
push
add
push
adc
daa
add
repnz
and
cmc
jae
add
subl
mov
pop
out
and
xchg
mov
pop
lods
pop
sbb
movsb
adc
add
xchg
mov
inc
aas
test
rolb
xor
lea
dec
xchg
fnsetpm(287
push
inc
pop
xor
popl
cltd
pusha
rorl
cwtl
add
nop
xchg
outsl
add
and
pop
cmp
push
lock
jo
pop
xor
iret
and
bound
push
add
dec
dec
sbb
or
add
scas
and
aaa
add
jl
in
bound
add
leave
sbb
cmpsl
sbb
xchg
add
xchg
or
shll
shll
pop
dec
add
and
sub
sbb
testl
mov
ds
loopne
mov
xor
dec
je
add
sbb
inc
push
xor
cmp
sbb
lods
add
add
outsb
or
popa
mov
mov
movsl
dec
sub
add
mov
add
or
cmpsb
leave
inc
testb
cltd
int3
ljmp
mov
stos
sbb
jmp
xchg
outsb
flds
jns
mov
mov
pop
push
lock
repz
aad
add
rcrb
fs
push
dec
pop
add
add
mov
mov
add
inc
test
es
lods
add
shlb
in
inc
adc
xchg
hlt
test
xchg
ljmp
jne
jl
dec
pop
fildl
call
xor
cmp
or
subb
and
sbb
add
fnsave
or
jg
jne
scas
lds
pop
insl
add
rep
xchg
repnz
outsl
sbb
dec
add
jl
ds
sub
sbb
jge
add
push
jae
cmp
or
inc
hlt
in
lahf
or
add
outsb
add
or
and
stos
xchg
push
or
sbb
out
testl
dec
mov
add
test
mov
mov
sub
jns
insb
insl
xor
movb
orb
sub
test
rcrl
xor
jp
lds
cs
dec
aad
mov
xchg
cwtl
imul
cmp
mov
mov
jg
imul
shlb
pusha
sbb
xchg
push
push
dec
cmpsb
add
cltd
aaa
stc
or
pop
pop
jbe
sub
out
ficoml
jle
add
adc
add
loope
add
repnz
push
lahf
lods
mov
out
lahf
out
inc
push
mov
add
sub
call
push
sbb
fcoms
js
xchg
xor
push
add
push
push
mov
lcall
movsl
xor
xchg
arpl
xor
enter
loop
add
fists
xchg
imul
bswap
outsb
and
lret
arpl
sbb
dec
mov
bound
adc
xchg
add
add
dec
das
cli
icebp
pusha
mov
add
addl
adc
test
add
stos
clc
add
push
mov
add
cwtl
pop
xchg
or
add
push
out
mov
or
aaa
das
xchg
notl
lahf
jecxz
inc
or
jnp
lcall
push
add
push
add
sti
pop
jb
sbb
aas
into
cmp
mov
mov
add
icebp
inc
mov
or
xchg
mov
outsb
sbb
add
push
addb
incb
jecxz
ds
fistpll
daa
push
sub
push
sub
pop
xchg
and
shrb
sar
stc
add
orb
loop
clc
andl
call
jmp
pop
add
xchg
mov
xlat
push
or
pop
adc
mov
in
adc
dec
fwait
xchg
jl
movsb
push
pop
addb
stc
mov
cwtl
ret
xorb
mov
insb
add
pusha
imul
sbb
stc
add
add
lods
push
in
sbb
movsl
or
xor
in
add
repz
xor
jecxz
jle
add
cs
add
fwait
inc
xor
pop
pop
dec
add
ret
mov
add
icebp
dec
add
loopne
scas
push
lea
std
sbb
pop
dec
mov
add
add
cmp
jae
mov
dec
inc
cmp
out
xor
mov
xchg
add
lcall
fdivr
cli
push
fs
pop
les
outsb
pop
push
iret
test
dec
cmp
test
sub
rol
add
mov
fidivl
sbb
icebp
add
daa
lods
pop
ljmp
outsl
gs
add
xchg
sub
and
mov
or
inc
jbe
cmp
xor
jne
scas
dec
mov
cmc
adc
insb
clc
jge
stos
gs
add
sbb
scas
mov
gs
sub
xchg
pop
adc
add
out
add
inc
pop
mov
add
and
add
in
add
cmp
divb
add
add
out
sub
xor
inc
sub
adc
adc
add
call
cmp
mov
pop
daa
imul
xchg
jno
ljmp
pop
jg
hlt
aad
bound
je
mov
or
jno
xchg
mov
shrb
jl
xchg
or
lds
add
orb
add
add
int3
adc
cmp
xor
sbb
add
test
and
out
fidivs
jmp
add
scas
or
adc
add
inc
outsl
push
insl
xchg
fnsave
xorb
mov
cld
add
icebp
not
lret
push
mov
push
imul
add
add
enter
mov
test
cmp
repz
movsl
test
mov
cli
lods
cmc
add
and
add
add
push
jns
fisubrl
stos
lret
add
push
add
shrl
insl
cli
repnz
dec
loop
and
add
pop
add
fyl2xp1
xchg
add
mov
add
xor
push
inc
add
sub
and
dec
or
lret
or
and
nop
adc
pop
add
sub
and
xchg
sub
mov
jno
fldcw
pop
add
add
jbe
shlb
dec
add
imul
add
pop
pop
cmpsb
jbe
xor
jo
mov
push
insl
inc
add
mov
xchg
cmp
push
into
jnp
mov
mov
dec
inc
push
xchg
cltd
sti
jl
or
or
sti
gs
repnz
xchg
add
jle
icebp
dec
aaa
dec
jge
pop
sarb
rorb
pop
mov
and
or
inc
mov
leave
add
ret
add
xchg
add
push
sub
push
mov
scas
add
fmuls
add
aas
pusha
lods
push
add
pop
test
movsb
mov
dec
js,pt
ljmp
mov
mov
jmp
add
add
mov
daa
sbb
mov
movsb
mov
aas
dec
mov
es
inc
out
jo
fiadds
push
adc
and
add
and
inc
int3
shll
sbb
add
in
add
test
es
sbb
and
pop
add
lahf
xchg
adc
jge
jp
xor
ds
and
or
inc
adc
enter
xchg
insl
jb
nop
stos
xchg
xchg
cmp
out
sub
inc
xor
adc
add
loopne
cs
jle
sbb
fisttpll
data16
or
je
emms
pop
dec
leave
std
mov
inc
mov
xchg
and
dec
loop
mov
imul
fidivs
xor
cmp
cmp
in
lea
mulb
cmc
add
mov
adc
add
inc
cli
dec
add
lock
in
cli
or
dec
mov
add
stc
jl
movsl
fisttpl
sbb
jmp
xor
pop
sub
stos
sub
mov
movb
repz
into
pop
jb
add
mov
add
or
xchg
cmpsl
movsl
add
insl
imul
jg
add
fwait
pop
add
mov
sbb
add
ljmp
add
push
inc
iret
dec
mov
dec
mov
add
loope
adc
popa
je
out
inc
fimull
cmpsl
add
mov
mov
mov
test
or
sti
xchg
mov
jb
adc
inc
push
add
add
stos
pop
negl
fimull
jns
ds
add
jae
add
push
pusha
test
add
jmp
fwait
add
sti
les
fs
addb
inc
lods
ss
xchg
lcall
dec
std
cmp
lret
aaa
jnp
mov
cmp
sbb
not
pop
clc
xchg
add
mov
cwtl
lcall
add
lret
xchg
xchg
lods
popf
je
mov
xchg
outsl
inc
xchg
jge
lock
sbb
imul
shlb
insb
pop
hlt
cli
mov
inc
add
pop
push
adcl
pop
xchg
sbb
cmp
add
test
das
loopne
ja
cmp
add
cwtl
push
sub
mov
pop
insl
rolb
push
repnz
testl
in
or
cwtl
cmp
ss
or
aaa
aas
sbb
daa
push
add
loop
xchg
insl
xor
outsb
sbb
pop
mov
lods
lods
cmp
or
test
or
call
add
movsl
fs
insl
cmp
sahf
pop
mov
sub
lahf
adc
jmp
push
sbb
add
mov
sub
fisubl
jmp
inc
jo
add
dec
sbb
aad
daa
inc
out
mov
add
fiaddl
pop
pop
dec
sub
repz
push
pop
add
push
clc
mov
pop
nop
add
fmulp
aas
and
add
cmp
xor
xor
or
std
arpl
lds
scas
ret
mov
sub
xchg
xorl
cmc
xor
and
dec
enter
test
cmc
add
mov
dec
jecxz
pop
call
add
xchg
shr
add
jecxz
mov
adc
popa
adc
add
mov
sub
cmpsb
sbb
xorl
mov
pop
mov
xor
sbb
shr
out
andl
jne
add
imul
jae
data16
add
add
or
add
jmp
out
push
mov
push
push
xor
mov
add
xor
mov
xor
inc
add
add
xchg
xchg
push
fisubl
sub
roll
push
xchg
outsl
mov
mov
lcall
add
loopne
das
sub
add
add
add
out
mov
test
ljmp
add
and
imul
sti
push
mov
add
ret
cwtl
dec
add
xlat
cs
add
jnp
pop
dec
add
push
add
xor
cmp
rol
jp
orb
scas
ds
sti
push
shl
dec
mov
roll
ds
dec
jbe
mov
add
inc
add
gs
rcll
xor
jl
mov
jbe
add
ss
cmp
lock
add
and
ltr
test
pop
mov
mov
iret
addr16
adc
sahf
fisubrl
loope
xor
imul
xchg
addl
roll
aaa
stos
or
push
adc
jno
dec
cs
cmp
pop
and
cli
outsl
fiaddl
xchg
or
cli
xchg
mov
mov
add
int3
add
add
or
and
sub
nop
fsubp
out
int3
inc
and
std
inc
add
xor
or
mov
xor
mov
or
jae
dec
bound
sub
and
pop
addl
cmp
mov
xor
pop
enter
inc
xor
ret
jp
jg
in
add
repz
or
add
scas
mov
inc
bound
add
cmp
push
xor
lcall
mov
cmovge
push
add
clc
xor
jbe
add
lahf
jp
jo
lret
dec
mov
stos
jns
mov
add
out
inc
jbe
outsl
mov
and
fnsave
nop
mov
adc
nop
mov
xchg
iret
push
add
lahf
sub
add
fildl
xchg
hlt
inc
jb
push
jge
in
mov
scas
in
push
pop
add
adcl
mov
and
clc
jo
pop
add
out
out
pushf
sbb
into
into
stos
add
cld
outsb
aas
xorl
mov
push
add
daa
xor
mov
pop
mov
loop
jne
cmc
sub
je
adc
ja
add
pop
add
movsb
cmp
sub
add
pop
ja
add
sti
or
daa
scas
mov
push
test
add
lods
dec
dec
movsl
loop
lret
or
inc
push
js
xor
add
add
push
add
sub
inc
and
dec
enter
push
inc
xchg
bound
rorb
jb
ljmp
jo
fwait
cwtl
xchg
sub
fsubrl
fbstp
push
pop
fsubl
jne
mov
shl
insl
repz
inc
sti
pusha
add
cmp
clc
jne
sub
push
mov
sub
loope
inc
sbb
dec
jmp
popa
and
xor
mov
stc
repz
xor
insl
mov
lret
lret
inc
dec
sbb
outsb
int3
mov
jl
enter
sbb
push
xor
jp
adcb
popa
add
and
ss
push
dec
imulb
add
daa
add
scas
add
add
rcrb
and
add
sbb
outsl
add
mov
add
adc
mov
pop
fdiv
pop
repz
out
add
jbe
repz
mov
dec
sub
ret
insb
push
or
sbb
mov
sbb
or
les
push
or
mov
imul
or
add
fldl
and
std
mov
add
add
sti
sarl
je
jno
xchg
xchg
mov
pop
lret
add
mov
and
adc
leave
add
adc
add
xor
and
pop
mov
cmc
add
push
pop
jg
imul
add
inc
add
xor
or
or
mov
add
jmp
and
leave
dec
dec
ret
jl
push
in
cli
andb
xchg
add
jbe
mov
sub
sti
rorb
sahf
ds
icebp
fsubl
test
jbe
or
cmp
clc
cltd
addr16
lods
push
xchg
leave
add
fdivs
xor
incl
mov
push
add
jp
or
add
out
jnp
sar
sub
add
enter
and
mov
fmuls
add
ret
cmpsb
xor
mov
dec
test
loop
faddl
fcmovnbe
add
push
mov
add
nop
das
je
rcrb
in
push
dec
dec
loop
or
mov
js
inc
shr
add
and
std
aam
jl
add
add
push
push
add
mov
jecxz
shlb
add
mov
ret
add
imul
add
imull
imul
or
daa
outsb
leave
add
mov
push
cmp
add
lahf
rol
pushf
iret
test
jmp
xchg
aas
mov
jmp
js
pop
test
add
push
dec
xchg
hlt
push
clc
hlt
pusha
mov
mov
add
or
in
xchg
adc
mov
ljmp
adcl
adc
fcoml
dec
enter
out
xchg
pop
xchg
sahf
xchg
jbe
lods
push
push
add
add
jno
outsl
jmp
out
iret
pop
rolb
and
push
push
add
lock
add
add
push
push
je
xchg
jl
ficomps
pop
andl
or
pop
add
test
push
pushf
push
int
leave
out
or
add
test
inc
add
cmp
hlt
xlat
sti
add
pop
inc
adc
or
pop
pop
mov
outsb
or
fsubrs
pusha
mov
mov
pop
in
cmpsb
and
jp
dec
mov
xor
and
std
data16
lcall
add
add
add
or
xchg
iret
insb
fwait
xor
fcoms
push
add
or
add
sub
cmp
xor
out
sbb
xchg
and
in
lds
adc
jb
adc
inc
dec
dec
sahf
roll
mov
jnp
add
mov
xor
pop
mov
imul
mov
push
lea
loope
or
stos
xchg
mov
movsl
push
and
add
pop
add
adc
addb
inc
add
pop
jne
mov
add
jb
add
add
je
cmp
mov
fnsave
pop
or
ljmpw
add
ret
lcall
add
pop
mov
outsb
ds
push
loopne
ret
mov
xor
mov
push
add
movsl
faddp
loop
hlt
dec
movsb
mov
in
add
add
adc
stos
inc
icebp
add
or
loope
and
sbb
out
add
int
jbe
daa
scas
add
xchg
adc
cmp
insl
add
inc
add
repnz
jnp
adc
adc
adc
push
push
insb
repz
adc
imul
bound
lret
scas
sbb
and
adc
scas
in
orl
add
lcall
cwtl
cwtl
or
into
push
imulb
push
add
add
mov
loop
ds
fcmovne
cmc
stos
movsl
dec
shlb
xorb
movb
in
mov
inc
scas
dec
clc
mov
inc
popf
cmp
jle
repnz
pop
add
pop
adc
loopne
and
mov
int3
add
rclb
dec
jmp
jno
add
bound
ss
add
mov
ret
push
pop
jb
popl
sub
cmp
add
sbb
dec
lds
mov
push
xchg
cmp
add
sub
add
cld
clc
ret
pusha
lcall
data16
dec
add
jnp
cli
out
mov
adc
pop
push
push
int
mov
sub
xorb
rolb
push
add
dec
mov
or
sbb
adc
dec
cwtl
pop
out
das
outsl
xchg
addl
or
jmp
xor
pop
sub
mov
jmp
pop
xor
mov
in
sahf
out
leave
mov
flds
or
je
jbe
push
xor
rolb
les
js
sub
jmp
push
fs
leave
popf
nop
adc
mov
imul
loopne
mov
sub
add
verw
mov
mov
orl
push
add
or
test
in
add
stos
shl
dec
or
sub
inc
mov
sub
dec
ret
xor
xor
mov
outsl
mov
hlt
cmp
add
add
stos
dec
adc
repnz
sub
push
rorb
xchg
into
jge
cmpsl
ds
std
ljmp
jns
fs
mov
ret
add
push
push
andb
mov
sub
mov
push
and
add
cmp
fstl
enter
add
and
addr16
adc
adc
add
sub
mov
idiv
int3
add
rolb
imull
mov
push
loopne
cmp
add
and
leave
out
add
push
mov
in
jecxz
dec
and
push
es
rcrl
lock
and
sbb
fistpl
sbb
cli
fildl
xor
add
mov
cltd
fbstp
lret
add
loop
rorl
add
shll
push
out
jmp
add
adc
ljmp
add
pop
and
xchg
test
in
ret
mov
icebp
adc
js
aam
push
mov
in
mov
xor
ljmp
mov
leave
adc
add
cmp
and
adc
sbb
xchg
sub
in
fldenv
pop
fmulp
mov
fstl
xchg
lahf
add
lods
xor
aad
sbb
inc
call
test
iret
enter
or
adc
out
adc
imul
sarl
aam
mov
lds
mov
sub
cmpsl
icebp
cmp
add
push
xor
and
add
cmp
jae
aam
iret
je
add
fdiv
xacquire
xlat
add
push
push
incb
jle
add
cmp
fsubrs
jmp
lods
add
add
scas
in
adc
mov
iret
iret
addr16
mov
cmp
add
mov
xor
imul
hlt
or
cwtl
jl
mov
faddl
test
rcll
xor
add
push
in
insb
add
xor
fldcw
mov
dec
fimull
lea
mov
outsb
fucomi
fisubrs
sbb
cld
jl
nop
comiss
scas
popf
add
inc
pop
loope
and
add
add
fxch
add
ljmp
and
mov
arpl
addl
lret
cmpsb
add
cmp
sub
aad
movsl
sbb
mov
mov
test
pushf
add
push
cmp
movsl
xchg
add
push
or
pxor
stos
mov
dec
push
shll
adc
das
cmpsb
int3
popa
push
ljmp
push
add
inc
xor
xor
movsb
fstpt
int
outsb
xchg
mov
into
dec
sub
sub
xor
adc
lcall
mov
dec
cmp
repz
inc
inc
or
rclb
sahf
mov
jnp
and
inc
add
pushl
int
hlt
movsb
sti
cmc
popf
in
ret
add
out
add
arpl
clc
add
stos
clc
jle
push
jno
in
or
mov
add
bound
mov
push
mov
mov
mov
xchg
push
clc
dec
jno
xchg
test
fldt
add
jp
cld
std
dec
push
cmp
or
out
incl
lea
outsb
xchg
add
push
or
add
push
jb
not
push
xchg
mov
add
mov
mov
icebp
add
or
push
add
push
fadds
sub
outsl
cli
inc
add
and
sbb
in
lcall
add
or
pop
mov
mov
rolb
outsb
add
cmp
cmp
pop
lods
stos
jmp
popa
add
fstpl
add
pop
roll
add
lods
cmp
mov
add
add
les
adc
or
or
dec
out
insb
cmc
test
repnz
add
pop
add
adc
fs
add
pop
aam
outsl
cli
sbb
cltd
pusha
mov
nop
fdivrl
adc
push
xor
add
movsb
mov
inc
add
mov
add
mov
pop
cmpsb
and
add
movsb
sbb
rclb
add
into
cmp
add
add
cli
arpl
arpl
sbb
pop
mov
jmp
xor
rolb
push
cmpsl
pushf
cmp
cmp
inc
mov
adc
sbb
call
cli
pop
push
cmp
xor
test
mov
mov
mov
xor
add
push
inc
fidivrs
iret
xor
xor
fadds
add
data16
les
xorb
lods
pop
bound
insb
add
inc
test
nop
ret
mov
mov
xchg
ror
mov
lret
xor
fwait
in
cmp
xlat
xchg
testl
into
or
cmp
add
xchg
and
dec
std
mov
mov
pop
mov
sahf
dec
mov
or
add
into
aas
in
add
fcmovnu
pop
pop
add
jo
sbb
add
or
mov
out
push
sbb
mov
lock
and
pop
push
lds
push
aaa
xchg
mov
jo
add
adc
aad
in
add
and
dec
jo
inc
sub
dec
cmp
add
mov
adc
hlt
out
pushf
add
add
pop
jg
push
call
adc
fwait
lods
push
push
mov
mov
js
jmp
sti
fildl
lahf
mov
nop
lods
mov
sti
add
adc
in
dec
add
add
adc
lret
pop
cmp
inc
jb
add
mov
sbb
dec
jnp
fnstcw
rolb
lods
mov
lea
jnp
xlat
push
ss
int
add
addb
daa
jge
aas
leave
mov
aad
mov
out
fstpt
rcll
insb
xchg
add
xchg
xor
jg
in
roll
movsb
add
pop
push
push
add
clc
inc
jbe
pusha
xchg
cld
and
jl
and
jg
inc
push
push
push
jns
pusha
arpl
add
and
hlt
ret
lock
add
pop
aam
pop
aas
stos
cmp
mov
xchg
cli
stos
pop
jmp
fxch
add
push
pushf
mov
cwtl
mov
cmp
sbb
das
mov
cmpsb
stc
add
stc
mov
push
daa
repz
ja
movl
xchg
enter
add
adc
xor
sarl
das
rcll
insl
add
add
add
pop
add
ja
xchg
jne
add
push
add
shll
sub
outsl
add
mov
pop
decl
imul
aaa
add
enter
add
xchg
out
xor
hlt
and
add
add
lret
mov
pop
insl
in
jge
push
lahf
sub
mov
xchg
lahf
xlat
jno
xor
adc
dec
jl
imul
push
adc
xchg
flds
sahf
add
add
xor
loopne
lret
dec
pop
pop
mov
scas
mov
dec
or
test
leave
lods
clc
in
fistps
dec
xchg
das
pop
andl
inc
loop
xor
lahf
frstor
sbb
sbb
lock
pop
inc
xchg
mov
mov
xlat
out
in
insl
add
add
aam
fcmovnbe
sbb
add
push
pop
imul
dec
cld
cmp
sbb
cmp
out
test
test
sub
out
mov
decb
mov
cmp
mov
inc
or
test
cmpsb
inc
mov
into
ljmp
xor
in
mov
add
add
xor
clc
inc
arpl
mov
icebp
jle
sbb
add
cmp
rep
int
sbb
add
add
enter
in
mov
and
incl
movsl
fs
mov
add
add
xor
add
int3
fistpll
and
jg
add
and
xor
dec
mov
jae
add
add
dec
add
add
xchg
sarl
add
or
push
adc
jbe
sbb
lds
stos
jbe
sbb
add
push
add
mov
iret
cwtl
jo
pushf
leave
hlt
repnz
ja
ljmp
jmp
add
jecxz
cwtl
add
daa
add
int3
fsubl
mov
dec
in
add
add
add
pop
mov
adc
dec
or
add
add
fiadds
mov
add
xor
adc
imul
inc
adc
das
scas
cmpsb
jnp
pop
insl
sbb
pop
inc
add
pop
or
rclb
sub
mov
lcall
and
ficomps
roll
cli
jecxz
xchg
sub
loope
push
add
xchg
cwtl
mov
push
sub
scas
and
and
pop
push
push
adc
push
jae
popf
dec
mov
and
mov
leave
les
sbb
ja
dec
xchg
ret
sub
mov
pop
out
add
push
and
mov
outsb
inc
shrl
cmp
sbb
loopne
lods
add
add
fwait
mov
add
imul
add
sbb
cmpl
lret
cmc
add
cmp
mov
or
shl
sahf
mov
cmp
and
add
pushf
je
ficomps
and
mov
add
xor
add
test
hlt
fldenv
add
mov
cmp
mov
call
test
xchg
and
mov
add
and
jle
cmp
and
xor
adc
inc
xchg
cmpsl
mov
movsb
lds
aad
aam
lock
cmpl
add
insb
xchg
dec
cmpsb
sub
pushf
std
add
lds
ja
or
pop
test
testl
aad
push
add
add
jb
lods
xor
add
adc
jge
add
or
adcl
push
and
ficompl
pop
xchg
add
mov
into
popl
jnp
push
add
add
xchg
adc
push
mov
mov
or
daa
aaa
jnp
pusha
sub
int
cmp
dec
lret
add
insl
push
ret
mov
popa
mov
leave
mov
test
jl
rol
inc
inc
ficoml
or
mov
movsl
mov
sbb
pop
push
gs
mov
sub
sub
call
push
ret
add
sbb
cltd
mov
imul
and
xor
push
push
mov
fistl
pop
nop
add
xor
push
jp
mov
inc
fnstenv
outsb
mov
sub
jo
dec
inc
add
adc
xor
add
xchg
addl
scas
into
mov
sub
xor
push
push
push
mov
push
dec
push
add
mov
or
orb
cmp
adc
iret
sbb
loopne
mov
jo
fwait
outsb
cli
roll
sub
movsl
outsl
sbb
add
dec
jl
ss
jnp
pop
adcb
repz
pop
push
xchg
dec
roll
cltd
sti
test
outsl
mov
out
aam
add
pop
push
cmc
loopne
mov
add
in
and
fmul
pop
add
dec
mov
aam
mov
xchg
cmp
insl
outsl
add
sbb
add
jp
stc
mov
mov
jl
test
add
add
mov
mov
mov
pop
and
push
add
sbb
mov
sub
pushf
stc
out
pop
add
fwait
dec
flds
mov
dec
mov
inc
add
inc
add
dec
adc
gs
fwait
jp
jge
fwait
lea
push
roll
add
add
pop
sbb
sahf
xchg
ret
jmp
add
aas
push
mov
cmc
and
jl
push
ret
cli
in
imul
xor
aaa
add
ret
jo
mov
inc
pop
cmp
push
insl
or
dec
lds
imul
rcrl
ret
add
adc
mov
pop
out
rclb
test
in
int
bound
ljmp
insb
cli
mov
leave
jmp
dec
mov
pop
mov
add
sub
jae
add
cwtl
sbb
add
add
sbb
inc
insb
aaa
push
ret
pop
popa
xlat
loopne
mov
or
lds
mov
out
or
xchg
aaa
rcrb
cmpsl
sub
sti
scas
xor
loop
in
pusha
pop
das
and
andl
xchg
sahf
add
push
jo
out
mov
movb
test
loope
dec
mov
sub
xchg
add
inc
int
adc
pop
xchg
je
out
jnp,pn
popf
pop
insb
sbb
xchg
push
add
lahf
add
inc
add
jl
or
icebp
mov
xchg
mov
mov
inc
adc
in
movsb
push
cmpsl
mov
xor
call
xchg
sti
js
fisttpl
dec
sbb
aaa
add
sarl
add
add
add
dec
nop
test
add
inc
flds
rcll
sbb
aam
outsl
das
lahf
lock
dec
jmp
repnz
stos
add
xchg
and
es
aaa
shrb
pop
bound
jns
stos
pop
xor
mov
xor
jo
mov
scas
das
sub
add
fs
mov
mov
addl
mov
or
mov
add
and
inc
add
sbb
fnstcw
cs
pop
ds
dec
insb
adc
sbb
ret
shll
lahf
sub
mov
lods
insb
add
mov
packsswb
aam
into
mov
rcr
fsubr
addr16
out
sub
cmpsb
add
je
std
cmp
pop
jns
jge
insb
pop
int
mov
sub
sarl
adc
rorl
mov
xor
movb
fdivrl
add
ja
mov
and
xor
scas
lcall
xchg
pop
add
nop
cmp
mov
call
in
or
imul
outsb
sbb
cmp
inc
mov
mov
mov
pop
add
icebp
outsb
test
icebp
lret
mov
sbb
push
cmpsb
adc
inc
popa
add
test
jge
and
push
pop
add
pop
std
pop
mov
rcrb
pop
aad
xchg
icebp
test
cmpsl
xor
outsb
cmpsb
mov
and
xor
fdivs
popaw
xor
mov
sbb
and
repnz
addb
add
test
repnz
push
xor
dec
mov
or
inc
add
mov
add
xchg
sub
addl
cwtl
xor
stos
add
sbb
or
xor
repz
int3
loopne
outsl
rcll
and
xchg
xchg
push
xchg
inc
adc
add
xchg
mov
xor
pop
out
xchg
dec
stc
push
popf
test
rcrb
stos
push
sti
idiv
push
fcoml
movsl
fs
add
sbb
fs
aad
dec
ficompl
jg
in
cwtl
xchg
xchg
dec
out
in
jne
add
movsb
pop
sbb
jbe
pop
adc
xlat
push
popa
cmp
jecxz
fwait
add
fidivs
es
nop
frstor
add
push
add
and
gs
sbb
jl
mov
scas
insb
imul
les
shrb
mov
in
add
call
ds
popa
xchg
loop
das
loopne
or
mov
mov
hlt
mov
push
cmp
jmp
nop
scas
leave
sbb
xor
mov
dec
cwtl
fidivrl
popf
lods
dec
mov
daa
add
mov
sbb
cmp
in
pop
lcall
int
and
les
dec
add
jns
call
out
sahf
leave
adc
add
jne
adc
xor
testb
pop
shrb
std
or
add
sub
aas
dec
in
add
lds
adc
and
das
pop
jne
pop
add
push
in
nop
cmp
pop
jmp
jg
mov
adc
jle
imul
inc
bound
sbb
mov
loope
imul
mov
lret
xor
pop
js
imul
adc
mov
mov
jmp
repz
out
or
test
loope
sbb
mov
das
dec
hlt
push
fistl
arpl
fidivs
adc
lods
mov
mov
lods
add
add
pop
xchg
mov
xchg
add
inc
jecxz
or
leave
cmpsb
and
loopne
shll
lods
and
cmp
addl
int3
push
fsts
xor
cmp
hlt
adc
sbb
xor
iret
xchg
inc
xor
add
inc
add
jnp
push
add
xchg
add
dec
fnstsw
jmp
stc
and
add
stos
lds
push
fisttps
out
add
mov
in
stos
shr
add
inc
mov
stc
mov
sbb
push
mov
repnz
outsl
or
xor
pop
inc
mov
out
push
or
daa
int
sbb
pop
mov
sub
ds
dec
orb
add
xlat
push
ds
jbe
jecxz
add
xor
movsl
outsl
push
xor
jno
or
add
insb
enter
rclb
and
call
lret
inc
add
pop
push
imul
std
add
insl
addr16
movsl
and
shll
sbb
sbbl
lahf
mov
pop
jb
push
daa
aaa
add
cmp
lret
into
adc
mov
adc
dec
or
test
mov
in
adc
jmp
iret
ljmp
scas
mov
cld
jo
sub
mov
ficompl
fnstsw
or
mov
testl
xchg
pop
mov
subl
fs
add
dec
fnstcw
pop
cmp
add
jns
mov
movsb
pop
xchg
inc
cmp
in
int
hlt
pop
test
mov
and
lods
ljmp
mov
inc
add
sub
scas
xchg
jns
jmp
out
test
pop
testb
fsubrs
ret
cltd
call
push
push
cmp
sbb
jl
scas
or
mov
and
jp
mov
icebp
jo
sub
adcb
das
pop
push
sahf
add
push
mov
inc
ret
inc
sbb
add
xchg
push
test
xor
xchg
ljmp
jmp
in
leave
xchg
mov
cs
icebp
cwtl
push
add
add
nop
daa
pop
scas
inc
rolb
repnz
xchg
out
movsb
loope
cltd
scas
pushf
mov
shrl
and
ret
imul
imul
ja
mov
xlat
push
jle
repnz
sub
adc
xchg
jl
dec
mov
shr
jb
popa
sbb
sahf
fistpl
and
stos
ljmp
mov
sub
lock
pop
mov
aam
dec
add
xchg
nop
adc
cmc
pop
cmp
mov
mov
lcall
fisttps
stc
add
lods
mov
imul
xor
xchg
inc
popl
push
lahf
in
sub
inc
add
add
push
test
add
mov
push
movsb
and
push
mov
je
pop
dec
les
clc
add
dec
pop
rol
pushf
push
imul
movsb
stos
pop
jmp
jns
js
xor
ret
out
jmp
pop
in
cmp
out
scas
fnstsw
sub
xor
push
out
mov
sbb
arpl
xchg
jmp
jl
movsl
test
jge
jo
jmp
ljmp
test
in
add
adc
popa
jae
xchg
shl
and
add
iret
mov
or
add
add
aaa
push
inc
ss
aas
add
outsl
jge
sbb
and
stos
shll
and
cltd
popa
xchg
add
and
add
repnz
sbb
add
out
fstpl
outsb
push
jnp
jmp
add
push
adc
xor
cltd
stc
jo
dec
dec
sub
mov
or
add
sarl
inc
scas
inc
xchg
cltd
insl
lea
add
mov
outsl
push
je
ret
mov
inc
or
add
adc
mov
dec
call
fs
pop
mov
add
push
add
xor
ds
jge
mov
mov
int3
add
add
faddl
push
add
mov
and
jo
aad
dec
adc
cwtl
add
sub
lahf
mov
aas
push
insb
cmpsb
pop
push
push
adc
test
add
movsl
cmp
test
inc
testb
add
mov
xor
addr16
or
xchg
mov
mov
mov
cmp
xor
add
pop
cmp
adc
and
mov
add
push
add
jbe
jnp
xchg
add
xorl
push
inc
add
pop
mov
out
push
adc
in
mov
dec
in
jb
push
mov
or
popa
pop
xchg
pop
ljmp
add
add
lods
add
dec
pop
add
scas
scas
dec
loop
fstpl
repz
mov
ja
add
adc
mov
add
ret
adc
in
cmp
push
pop
arpl
out
pop
mov
xlat
pop
ds
mov
nop
stos
mov
xchg
iret
cmpsb
cmp
idivb
add
push
addr16
mov
push
add
add
add
rclb
movsb
fstp
les
mov
and
insb
dec
mov
out
mov
rclb
fisttpll
add
and
push
cwtl
loop
imul
mov
inc
mov
mov
aam
testb
cli
pushf
dec
inc
fisubrs
add
cmp
inc
int3
mov
push
dec
push
add
sarb
pop
mov
sbb
movsb
loopne
pop
lahf
push
dec
das
js
subl
mov
jae
pop
pusha
xchg
adc
ret
fsubl
out
and
adc
sbb
xchg
mov
std
jo
dec
movsb
es
fucomp
xlat
xchg
and
inc
push
scas
fcompl
roll
int
or
call
add
and
out
pop
xchg
dec
int
mov
rorl
sub
add
and
add
fldl2t
xchg
cmp
add
and
sbb
add
cmp
addr16
out
ret
mov
testl
push
outsl
test
cltd
add
mov
add
or
inc
dec
lock
jp
or
data16
call
adc
das
xor
add
outsb
jns
stos
sbb
mov
sbb
add
inc
js
pop
add
nop
cltd
scas
enter
scas
int
sub
add
mov
add
pop
shl
add
incb
add
mov
xchg
add
inc
or
ss
xchg
jge
popa
sarl
or
xor
jmp
add
push
ljmp
add
add
dec
mov
arpl
scas
aas
bound
and
add
imull
add
jl
inc
mov
stos
je
movl
push
nop
das
out
inc
frndint
dec
pop
xor
adc
jae
mov
and
insb
xor
sbb
aam
in
dec
add
add
push
arpl
ja
adc
xor
sub
cmp
inc
pushf
xor
negb
add
insb
sub
cld
stc
add
mov
add
jmp
cld
pusha
es
jmp
test
pop
adcb
push
sbb
movsb
or
ljmp
sahf
adc
mov
pop
shlb
and
fldl
xchg
lock
and
add
ljmp
add
sbb
add
pop
inc
loop
add
jbe
or
xchg
or
dec
in
imulb
negb
in
hlt
dec
push
mov
add
jmp
arpl
dec
add
push
sub
enter
mov
stos
mov
add
jl
pop
aam
int
and
cmp
add
push
sbb
je
xchg
aad
jne
scas
fistpll
mov
jne
sub
or
inc
xlat
fcmovbe
add
inc
outsb
add
add
shr
jnp
lods
daa
mov
incb
out
mov
adc
pop
mov
sub
xchg
rclb
adc
inc
repz
mov
sub
hlt
orl
pop
push
in
adc
shrl
add
pop
add
pop
iret
mov
add
add
xor
add
sub
and
dec
add
notl
fisubs
pop
jo
mov
push
pop
jnp
sti
or
add
ljmp
nop
inc
pop
add
shrb
add
add
add
push
int3
add
sbb
aam
fisttpl
xchg
jne
addr16
add
ljmp
pop
aam
cli
out
enter
sbb
ja
add
add
pop
cmpsb
sub
neg
rolb
add
fsub
xchg
aas
or
mov
aas
sub
add
sub
add
push
lcall
dec
push
ss
js
adc
pop
repz
addb
xchg
jns
enter
add
mov
cmp
arpl
add
enter
add
hlt
andb
pop
lea
adc
push
push
stos
add
aad
pop
adc
dec
outsb
mov
pusha
popa
jle
clc
add
lret
add
out
scas
cwtl
insl
pop
cmc
add
mov
inc
adcl
mov
sbb
cmp
add
sti
dec
dec
popa
and
adc
push
stos
ret
pop
add
or
add
cmovne
push
pusha
pop
arpl
cmp
cmp
cmp
rcrb
jnp
mov
and
mov
in
mov
outsl
pop
cmc
nop
sahf
pop
push
rolb
add
jg
addr16
add
and
ljmp
add
push
clc
pop
ret
adc
stos
add
add
jg
and
ss
adc
ds
cmc
scas
jnp
movsb
add
push
iret
add
enter
dec
ret
mov
in
push
or
lahf
jge
aad
jle
or
xor
jo
orl
fwait
pop
sbb
add
sub
incb
dec
aaa
inc
pop
call
incl
push
inc
inc
lahf
imulb
cwtl
stos
mov
xchg
jno
jns
adc
popl
stos
push
in
xor
lods
dec
adc
rclb
push
add
add
je
add
ret
xlat
dec
jmp
inc
out
pop
mov
stos
pusha
inc
aam
sub
subl
and
dec
pop
cmp
pop
inc
sbb
inc
int3
or
push
popa
push
xchg
inc
sub
lea
push
mov
cmp
add
aas
add
cs
stos
arpl
adc
add
stc
or
das
and
sbb
enter
test
aas
xchg
aaa
mov
and
shlb
dec
add
and
pop
dec
jbe
inc
adc
add
dec
or
mov
mov
mov
packssdw
movsb
ja
popa
jg
mov
mov
or
in
pop
add
cmpsb
mov
ficompl
inc
rolb
out
idivl
addb
int3
add
push
fsubrl
shl
and
je
add
in
inc
adc
xorps
inc
outsl
ss
ja
lock
add
ret
clc
ljmp
sub
sub
popf
cmp
sbb
lock
iret
add
in
lahf
rcrl
ret
mov
outsb
jae
mov
clc
add
jmp
popf
push
add
push
adc
add
add
inc
push
repz
xlat
add
push
addr16
rcr
adc
push
es
cmp
add
push
pop
je
scas
out
xor
sbb
mov
stc
or
out
aad
in
jbe
push
mov
adc
push
jmp
cmpsl
stc
mov
js
add
mov
test
daa
fistpl
dec
push
xchg
mov
imul
shrl
add
rorb
mov
out
roll
xlat
cmp
ffreep
sbb
sbb
pop
mov
push
add
add
add
imul
dec
gs
and
in
pop
icebp
jmp
popf
movsl
push
push
and
adc
aam
inc
imul
xlat
es
shlb
xchg
movl
inc
in
dec
call
lcall
sbb
iret
lahf
xchg
jno
std
scas
je
ret
into
scas
fisubs
push
addl
adc
mov
mov
test
sub
xor
mov
jno
jnp
mov
arpl
iret
pusha
fwait
imul
jns
mov
mov
stos
xchg
cltd
outsl
sub
es
insb
sub
add
cmp
cmp
popf
fwait
mov
or
or
fstl
pop
and
mov
jbe
pop
pop
add
cmp
jge
add
mov
adc
ret
shlb
outsb
cmp
jl
pop
or
push
add
imulb
xchg
or
jnp
xchg
push
in
scas
popf
fsub
push
ja
scas
lods
fldl
js
incb
mov
inc
stos
inc
incb
jo
fdivr
add
sbb
lret
add
fsts
mov
ja
enter
bound
mov
sbb
xchg
xchg
xlat
clc
add
mov
in
rolb
sub
mov
ret
and
push
add
xchg
mov
add
ficomps
sbb
mov
add
loop
out
xlat
stc
xchg
adc
dec
inc
add
addl
lret
idivl
add
mov
push
inc
mov
dec
jo
mov
mov
push
cmp
pop
push
lahf
pop
repz
pop
faddl
cmp
in
sahf
aaa
mov
outsb
sub
jmp
popa
push
or
and
hlt
bound
jg
rcrb
mov
sub
mov
mov
bound
add
fs
fcoml
or
add
inc
inc
add
nop
lret
jno
mov
add
loop
neg
daa
push
sbb
enter
out
ror
pop
push
pop
add
push
aas
fwait
pop
cmp
lods
pop
mov
add
xor
adc
icebp
repnz
fcoml
adc
jbe
movb
xchg
and
ja
pop
jbe
arpl
daa
icebp
add
cmp
ss
hlt
hlt
les
ss
aas
push
adc
jl
cwtl
pop
bound
xchg
push
mov
xor
test
inc
add
add
add
pop
pop
inc
add
addr16
xchg
add
stos
inc
fcmovnbe
lea
add
and
cmp
pop
add
fdivrp
add
fstpt
insb
test
dec
cld
stos
ja
inc
stos
jp
shrb
add
out
add
push
mov
mov
popa
in
popa
fisubs
jp
out
idiv
dec
je
xchg
loope
push
enter
add
add
pop
xlat
dec
gs
add
mov
cmp
ss
movsb
fisttps
lcall
adc
movb
and
stos
pop
and
jne
addr16
xchg
imul
mov
dec
or
dec
add
push
push
popf
cmpsl
sbb
xor
jecxz
fs
pop
repz
leave
outsb
sub
inc
sbb
loopne
mov
dec
sub
add
cmp
jns
outsl
ret
xor
adc
push
popf
add
inc
enter
adc
movsb
pop
push
ja
std
lret
hlt
outsl
xor
ds
or
jnp
add
movsl
les
mov
lock
nop
add
repz
movsl
stos
cltd
mov
out
xchg
sbb
inc
and
daa
pop
add
jp
ljmp
js
cmc
mov
push
popf
sbb
mov
ret
ja
lods
xchg
push
dec
negl
pusha
xchg
push
or
mov
pop
jg
aad
mov
sbb
adc
mov
out
bound
xchg
adc
ljmp
jb
jp
outsb
scas
test
incb
mov
rcl
imul
loop
add
push
jb
ljmp
adc
jae
pop
xchg
outsl
or
xchg
sbb
and
mov
test
push
ja
lret
sub
notl
add
xor
dec
add
jmp
add
jnp
loop
arpl
pop
ds
pop
mov
and
mov
leave
xor
adc
mov
or
xor
sahf
adc
add
lds
cmp
jecxz
pop
popa
xor
push
pusha
add
cld
mov
inc
lret
dec
xor
mov
inc
jg
mov
cmp
in
dec
add
clc
xchg
je
add
je
lret
pop
icebp
mov
and
xlat
popf
scas
dec
push
imul
inc
add
das
pop
and
cmp
cmc
outsl
push
sahf
xchg
loope
add
cmp
jno
mov
add
sbb
dec
xchg
pop
dec
hlt
pop
push
pusha
push
mov
pop
adc
lea
cmp
out
lods
add
push
jne
cmp
popa
xor
add
cmp
mov
jecxz
sub
mov
jnp
lock
add
insb
ret
pusha
push
subb
mov
or
add
stos
cmp
jne
fmuls
push
lcall
lods
aam
test
sbb
rcr
jle
mov
push
pusha
cli
pop
std
lea
mov
add
mov
xlat
pop
jp
inc
fwait
xor
add
pop
xchg
xor
cli
aaa
pushf
jbe
push
lea
decb
lea
or
mov
fistps
and
pop
and
adc
mov
inc
stc
pop
cli
lret
push
lcall
adc
fisttpll
testb
push
rcr
jno
imul
jg
jl
fcompl
sub
or
add
shl
and
imul
jb
mov
insl
add
lcall
add
add
jge
std
inc
adc
and
scas
adc
sbb
sub
cmpsl
jl
jbe
xlat
add
add
stos
leave
sub
decb
mov
inc
push
fsubs
insl
into
lahf
in
aam
add
es
imul
repz
decb
ret
icebp
out
insl
or
pop
adc
inc
pop
add
pop
pop
test
push
and
aaa
push
aaa
push
mov
imul
loop
nop
stc
in
jb
adc
inc
mov
ss
add
mov
sbb
add
add
mov
out
cmc
add
xchg
clc
add
stos
cwtl
out
jle
lods
in
stos
adcl
sti
data16
dec
add
or
jnp
in
or
inc
sbb
mov
xchg
pop
dec
xlat
add
jp
sbb
push
loop
lcall
inc
cmp
and
lods
loopne
shr
sti
cmc
ret
xchg
orl
stc
jecxz
cmp
xchg
leave
mov
mov
push
iret
and
or
add
jl
sbb
jno
cmc
fsubrp
push
sti
add
sub
js
pop
xor
lret
arpl
insb
icebp
xchg
mov
xor
mov
inc
add
outsb
push
sub
cld
movsl
add
imul
add
xchg
and
add
fs
insb
jno
movsb
cmpsb
popf
add
shr
jge
adc
movl
popf
rclb
fcomps
or
inc
add
out
mov
add
iret
push
dec
imul
pop
or
enter
scas
mov
push
clc
add
mov
rcll
xor
fiaddl
ja
inc
add
movsb
xchg
nop
adc
jg
jno
out
sti
cli
jbe
or
and
mov
hlt
mov
test
cld
sbb
sub
or
add
dec
xchg
add
xchg
add
xchg
or
or
add
sub
cmp
xchg
std
mov
add
add
add
imul
in
xchg
mov
jae
mov
cmp
add
pop
bound
ss
aam
rorl
and
std
inc
inc
mov
popa
call
stos
add
and
movb
push
xor
and
mov
mov
push
inc
inc
push
add
ds
xchg
shlb
jmp
dec
test
mov
push
aad
add
mov
jle
fdiv
add
add
xorb
push
aas
inc
rorl
dec
hlt
sarb
xor
daa
hlt
inc
add
dec
test
xor
ret
cmpsb
add
in
cld
outsb
add
add
pop
push
dec
add
stc
or
imul
inc
and
jp
inc
lret
inc
cs
add
mov
gs
cmp
test
push
loope
outsb
ss
cmp
movsl
add
bnd
aaa
ds
into
jbe
and
cwtl
sbbl
sub
jae
xchg
cmpsb
repnz
out
dec
add
jno
aad
enter
mov
in
inc
addl
fcomps
add
mov
adc
fwait
lret
lret
aas
test
insl
add
into
mov
dec
jmp
and
xchg
rolb
arpl
push
inc
add
sub
xchg
rcl
movsl
loopw
ja
cmpsb
jb
movsl
mov
cmp
sbb
dec
test
mov
test
adc
loop
jge
add
stc
add
mov
xchg
xchg
pop
add
mov
cmp
add
pop
std
test
jmp
daa
xor
ja
add
fs
dec
andb
pop
test
mov
sub
pop
xor
push
sbb
inc
push
add
sub
lock
scas
mov
call
sub
jge
mov
pop
add
sub
int
sbbl
ret
and
mov
stc
lock
aad
adc
xor
mov
push
sbbb
scas
outsb
imul
xor
pop
ja
in
mov
xor
add
iret
xchg
std
cmp
inc
stos
adc
cld
addb
loop
mov
mov
ret
add
mov
das
push
adc
push
and
push
push
mov
push
or
jge
and
add
mov
mov
cmp
push
mov
call
addb
cmp
mov
stc
fnstenv
testl
sub
mov
pop
add
xor
add
xchg
lcall
jb
sti
mov
mov
jge
push
loope
cli
pop
push
add
mov
pop
add
test
mov
imul
push
pcmpeqw
repz
iret
insl
mov
loope
aas
into
in
outsl
mov
pop
adc
flds
aad
fbld
jp
add
aad
sub
push
mov
xchg
xor
testb
loope
pop
adc
push
mov
ja
clc
mov
add
int3
and
mov
xchg
mov
fadds
sbb
add
pop
mov
loop
or
popa
lods
mov
sub
lds
aaa
add
sarb
or
add
pop
push
cmpb
dec
mov
add
sub
xchg
or
and
or
mov
pop
lret
es
add
push
inc
xor
roll
fisubrs
or
xchg
loop
add
flds
mov
jbe
push
sahf
pop
addl
iret
fs
mov
mov
push
add
fs
hlt
sub
sub
cmpsl
add
stos
ret
inc
push
jg
inc
jmp
pop
scas
imul
add
pop
pop
cmp
adc
pop
nop
and
sub
push
mov
adc
aas
and
mov
adc
popf
mov
mov
dec
rcrl
testb
pop
mov
popa
add
add
into
jge
out
and
fsubl
sub
inc
test
lret
add
jns
lcall
fs
hlt
pusha
sbb
insb
mov
sbb
ljmp
add
push
or
lock
into
add
lds
jnp
les
les
cld
mov
mov
movsb
adc
dec
push
arpl
add
ret
cld
add
mov
repz
add
inc
add
add
int
sub
mov
test
dec
dec
loope
fucomip
incb
ficoml
fidivrs
adc
clc
ja
mov
ret
test
aad
add
jno
inc
add
mov
push
test
sti
mov
xchg
add
shll
xchg
sub
mov
mov
out
pop
push
pushf
add
int3
iret
repnz
add
jbe
sub
add
add
fs
pop
es
test
xchg
add
mov
or
pop
mov
add
push
add
lods
mov
add
lret
mov
mov
mov
jns
testb
adc
add
xor
jo
aad
cld
push
jo
push
adc
xchg
repz
add
pop
xrelease
xchg
mov
add
adc
push
int3
add
push
add
mov
clc
push
mov
lea
daa
out
mov
xchg
xchg
lea
cmpsl
and
mov
dec
add
aaa
add
add
pushf
and
dec
stos
add
call
mov
test
ret
add
int
and
aad
hlt
fs
out
lds
movsb
jmp
movl
dec
pushl
jae
ret
cwtl
ds
filds
and
lods
ficoml
add
fucomp
xor
ds
repz
ljmp
clc
jle
xor
jo
js
lea
mov
clc
mov
fwait
push
inc
fisubs
stos
add
test
inc
in
sbb
add
sbbl
pop
add
push
fcoms
btc
add
outsb
in
adc
les
push
cmp
lahf
test
lret
sub
hlt
add
lods
dec
arpl
sub
cs
xchg
add
push
les
decb
mov
lahf
in
sti
add
mov
dec
xor
xchg
pop
xor
sbb
aas
add
jo
xchg
loope
lods
xor
in
xor
filds
int
fdiv
add
lahf
mov
pop
mov
push
adc
stos
lret
loopne
repz
dec
xchg
add
dec
mov
dec
add
mov
aaa
pop
push
sbbl
push
pop
mov
add
ficoml
mov
add
xor
mov
pop
addb
stos
mov
pop
sahf
vsqrtpd
push
mov
lret
testl
inc
cmp
sar
insl
mov
xchg
pop
cltd
lock
and
jg
mov
cli
add
or
hlt
dec
test
mov
daa
dec
loopne
add
arpl
push
push
add
sar
add
adc
leave
add
pop
addl
push
out
pop
xchg
jno
xchg
andnps
loope
mov
add
add
cmpsl
add
add
aaa
cwtl
mull
fnstsw
lods
pop
ficomps
and
inc
je
add
fildl
adc
les
adc
shrb
in
xlat
mov
mov
cmc
pusha
test
push
add
jno
or
aas
stos
and
clc
mov
add
rorl
ficomps
nop
shll
std
add
fwait
add
add
idivb
jecxz
insl
addl
in
fisttps
test
mov
in
add
movsb
and
add
add
add
hlt
sub
mov
subl
lea
inc
arpl
fsts
test
add
das
movsl
push
fmuls
pushl
xchg
stc
into
add
add
notb
lret
aad
add
dec
add
mov
and
adcl
add
inc
data16
pop
add
repz
test
cmp
jecxz
imul
les
fsubrs
add
push
cmp
mov
movsl
dec
stos
nop
inc
es
inc
add
add
and
daa
in
cmc
adc
sub
xor
xchg
add
fnstcw
push
or
jno
xchg
pop
cmp
cli
push
std
out
add
ret
add
add
add
in
ds
add
fwait
in
add
mov
xor
push
imul
rcl
mov
xor
sub
mov
test
into
cmp
ficompl
cmp
lret
add
push
add
inc
movsb
and
add
sub
data16
cwtl
or
fidivrl
add
pop
jl
dec
pushf
scas
daa
jl
aad
xlat
rol
xchg
movsb
fs
movsb
cltd
add
pusha
jmp
xchg
lock
outsl
xchg
pop
sub
sysenter
cmp
fmuls
push
add
out
enter
call
sbb
xchg
push
add
mov
adc
aad
je
pxor
add
das
mov
cmp
rolb
dec
push
test
call
add
add
add
shll
inc
mov
jle
sbb
jae
lret
lds
cli
mov
dec
sbbb
imul
and
cmpsl
mov
inc
ffree
out
in
cmp
and
ds
adc
mov
add
mov
ljmp
sub
add
in
nopl
adc
cmc
in
scas
adc
stc
rorl
aad
mov
xchg
mov
jbe
add
out
mov
add
mov
dec
add
ret
xchg
add
das
out
add
adc
loop
fisubrl
or
enter
or
je
incb
inc
push
mov
das
push
lods
testl
out
js
inc
in
ds
in
cli
add
sbb
sub
enter
sbb
movl
ljmp
xor
inc
cmpsb
mov
ret
push
loop
add
jecxz
adc
push
add
push
hlt
xchg
cld
cmp
cmp
dec
adc
rcll
mov
adc
push
push
add
add
push
push
add
or
aaa
mov
js
add
fldl
loope
sub
wrmsr
fdivs
movsb
mov
xchg
adc
pop
js
mov
out
or
add
fldl
arpl
push
repz
call
insl
add
rcr
add
iret
jb
add
lds
add
xchg
add
add
add
adc
adc
inc
xchg
cmpb
popf
mov
loop
subb
ss
mov
out
addr16
idivl
ljmp
add
and
xchg
add
sub
xor
mov
push
inc
fdiv
xor
jnp
and
iret
lea
xor
add
int3
mov
adc
xchg
xchg
dec
add
int
pop
add
gs
fldl
ret
pop
cli
outsl
sub
repz
add
or
pop
pop
sub
jb
dec
add
and
mov
push
mov
mov
scas
mov
clc
pop
not
xor
jae
pop
rcll
add
add
negl
pop
pop
add
and
add
movsb
mov
roll
push
add
lahf
push
inc
lea
mull
jae
mov
loop
jle
lods
aaa
xorl
xchg
add
lahf
mov
jmp
mov
add
std
mov
push
inc
xchg
push
cmp
xchg
add
movb
fdivrl
push
mov
cmp
xchg
xlat
int3
ret
add
pushf
insb
fldln2
add
sub
sub
inc
lret
cld
add
insb
lds
insl
xor
in
add
pop
lahf
push
addr16
fwait
test
nop
or
inc
adc
jns
cli
sbb
movsb
push
lods
jge
add
mov
mov
addr16
dec
add
add
ss
add
out
ja
mov
cmpsb
pop
pop
jae
out
fiaddl
in
jl
pop
stc
add
enter
fbstp
xchg
rolb
push
add
jp
out
xchg
jo
outsl
jmp
xchg
add
popa
xor
sbb
lret
in
add
add
mov
cli
add
adc
test
es
scas
loop
arpl
ds
shlb
push
push
test
je
rorl
fsubr
add
pushf
aam
into
iret
mov
mov
cmpsb
jmp
dec
test
cmp
addl
push
insl
pop
stc
dec
mov
xchg
add
xor
fs
xor
in
jno
in
aad
clc
rcll
std
adc
rolb
arpl
jb
divb
mov
add
jns
xlat
lock
fs
bound
out
sbb
test
or
aad
dec
pop
cwtl
movsl
gs
adc
xchg
sar
add
dec
orb
lcall
jae
or
pop
add
out
add
mov
mov
pop
pop
lret
adc
add
mov
ja
add
jns
add
mov
out
mov
mov
or
and
roll
aaa
cmpsl
adc
mov
ret
mov
add
imul
aam
movsb
out
in
cwtl
movsl
xor
lret
icebp
push
jge
mov
mov
mov
inc
inc
pop
aad
pop
jae
aad
xchg
jl
ljmp
xor
mov
push
testl
add
mov
pop
push
ljmp
push
icebp
lods
imul
adc
rol
cmp
nop
mov
cmc
sbb
xor
add
add
test
adc
dec
cs
js
stos
push
sub
add
jne
or
ret
push
add
jne
inc
sbb
xchg
add
add
pop
pop
push
fnstsw
mov
xchg
in
pop
aas
add
aad
push
outsl
out
xlat
or
and
jg
jge
scas
push
je
sbb
push
add
stos
adc
sub
cmpsl
add
sbb
negb
sub
dec
mov
add
int3
push
xor
jbe
sti
addl
std
cmp
lods
jecxz
push
cmp
mov
imul
jbe
je
add
in
aam
cs
inc
mov
sbb
or
hlt
lretw
test
add
mov
add
cld
jae
aas
lea
jne
push
mov
jmp
rcrl
or
fisubrs
pop
cmpsl
cld
pop
mov
stc
loop
add
xchg
scas
fcmovne
rcll
add
dec
shl
dec
jmp
or
xchg
lahf
mov
push
add
repnz
call
sbb
pushf
test
mov
dec
mov
cmp
adc
mov
cs
cmp
mov
mov
xchg
fs
mov
rolb
aam
jle
pop
push
mov
add
cmp
dec
mov
dec
test
jo
mov
fisttpl
out
cmp
into
cmc
add
cld
sahf
neg
sar
cmp
inc
mov
inc
cmp
mov
dec
cmp
add
jg
add
pop
adc
adc
cmpsl
fimull
testl
add
and
mov
nop
lret
and
decb
xchg
loope
mov
ror
pop
add
aaa
add
sub
cmp
addr16
add
sbb
adc
jns
out
add
inc
andl
je
push
dec
mov
into
dec
popa
lods
cmp
sbb
add
repnz
add
add
lcall
cld
add
push
adcl
jp
xor
push
fstps
add
ja
popa
add
pop
dec
xor
inc
stos
dec
jmp
aam
les
push
fimull
jle
ja
frstor
xchg
mov
xchg
jo
add
pop
cmp
pushf
xchg
push
push
das
mov
xchg
mov
inc
jmp
loope
ja
add
dec
fistl
xchg
lcall
jp
ja
pop
clc
or
xor
jecxz
fisubrl
ss
mov
or
into
add
jnp
cmpsl
mov
cmpsl
repnz
ss
neg
add
out
les
les
fwait
outsb
mov
or
div
outsb
sub
dec
out
pop
jmp
iret
pop
divb
pop
lret
cmp
shll
sbb
add
and
js
lahf
or
adc
shlb
push
lahf
xchg
pop
add
push
leave
cmp
adc
jb
dec
jnp
or
bound
push
xchg
aad
lret
mov
daa
sbb
xchg
mov
or
xor
lods
mov
add
sub
mov
xchg
add
call
jns
jp
lcall
imul
add
out
xchg
cmp
adc
sahf
mov
cwtl
and
adc
mov
push
mov
jmp
fs
insl
push
xlat
scas
sub
and
cmp
and
adc
cmpsl
movsb
push
mov
incl
nop
shrb
add
sub
rorb
test
add
jb
shr
mov
fstpl
orb
add
pusha
mov
in
push
cmp
push
imul
cmpsb
fisubs
jo
in
adc
mov
inc
test
pop
add
mov
sbb
hlt
jns
lret
mov
and
aaa
add
cmp
roll
sbb
in
and
xor
push
imul
adc
imul
lods
sub
dec
nop
insb
insb
dec
dec
add
fadds
pop
call
adc
out
sldt
pop
adc
cwtl
mov
mov
add
xor
popf
popa
test
iret
jg
mov
outsl
sub
test
out
inc
adc
add
scas
aaa
out
aam
stos
dec
andb
add
in
mov
add
popl
push
aaa
xchg
xor
sbb
jp
add
stos
fnsave
mov
addb
mov
xor
push
mov
add
out
xchg
movsb
inc
add
imul
mov
out
scas
cld
xor
scas
ret
pusha
movsb
xor
push
push
sub
jns
in
lds
pop
jo
movl
adc
aam
add
mov
sbb
pop
add
fnsave
les
mov
sti
mov
imul
add
popa
ret
dec
inc
fidivs
sar
sub
adc
pop
andl
xor
or
add
adc
icebp
jne
jne
push
jecxz
shrb
push
aas
idivb
out
add
test
out
cwtl
dec
mov
sub
mov
test
in
add
rcl
add
mov
xor
push
in
les
mov
add
adc
add
push
adc
insl
xor
data16
adc
divl
mov
sbb
push
push
add
push
push
movsl
add
dec
or
add
push
inc
add
jmp
pop
gs
add
mov
adc
inc
xchg
aad
pop
add
add
push
mov
inc
add
lret
xchg
sarl
test
paddw
jl
shll
fdivp
imul
insw
jmp
test
aam
mov
sbb
iret
mov
dec
adc
shl
bound
or
dec
pop
outsb
adc
and
xchg
ljmp
mov
pop
cmp
fistps
fsubrs
daa
rclb
sub
dec
test
push
fildl
mov
or
push
mov
adc
rclb
ret
add
lock
or
add
sub
jb
lods
add
and
or
leave
xchg
ss
mov
enter
cmpl
sub
jecxz
mov
out
adc
add
hlt
mov
icebp
pop
jno
rcrl
sub
jnp
outsb
movl
shl
add
mov
dec
shll
cwtl
nop
add
add
or
xor
pop
push
je
fs
pop
sbb
dec
sbb
mov
pop
and
add
mov
loope
cmp
jmp
add
mov
mov
sbb
ljmp
xchg
and
out
add
pop
xchg
and
mov
insl
add
loope
iret
inc
push
movsb
dec
sbb
lret
add
add
add
push
push
loope
add
push
and
cmpsb
push
pop
fwait
aad
dec
mov
rol
mov
lods
orl
mov
inc
xchg
adc
add
jb
add
mov
aam
pop
leave
push
jo
dec
jge
mov
xchg
icebp
faddl
aaa
lcall
add
add
nop
add
mov
cwtl
lock
aad
outsb
orl
push
mov
or
enter
addb
sub
in
or
jne
add
mov
push
cmovle
pop
xor
add
fidivrs
xchg
add
pop
mov
xchg
insb
hlt
cld
dec
call
lock
dec
jae
dec
xchg
add
inc
xchg
pop
fmull
mov
dec
sub
cmp
dec
jmp
add
dec
add
jb
int
ljmp
add
iret
dec
in
or
sub
pop
in
add
mov
cld
sub
cmp
test
jl
add
ret
push
sbb
push
xchg
mov
add
imul
sub
lea
dec
add
gs
add
iret
pop
mov
cli
lret
leave
in
outsl
sbb
lods
jl
fld
add
push
or
scas
jno
into
fnsave
push
fiaddl
int
pop
test
add
cmpsb
shlb
adc
out
repnz
add
fcmovnb
dec
je
xchg
or
into
push
popa
cmp
cmp
pusha
add
pop
jmp
inc
out
jmp
sub
cmp
mov
pop
add
in
std
jno
std
sub
fnstcw
ds
pop
push
jmp
sahf
and
pusha
push
add
add
mov
pop
in
loopne
push
je
jae
lods
adc
mov
cld
das
mov
rcrb
and
pop
xlat
cmp
jns
cmp
cwtl
dec
and
jae
in
mov
sub
movsl
or
fcom
or
and
mov
adc
add
addr16
dec
push
std
in
mov
add
inc
hlt
jb
add
xchg
sub
sbb
aas
into
fisubs
pusha
fdivrs
lret
add
sbb
add
lods
adc
add
cld
fs
stos
add
mov
stos
in
xchg
fwait
insl
in
je
inc
mov
adc
or
repnz
xchg
sbb
cli
push
jle
scas
loop
fwait
inc
inc
insb
push
inc
jnp
push
daa
sahf
mov
and
inc
inc
in
pop
out
dec
add
fcompl
and
cmp
rclb
lds
shlb
ljmp
jecxz
lret
add
dec
mov
cmpsl
in
int3
xchg
add
inc
fdivr
cmpsb
aaa
sbb
movsl
imul
gs
cld
mov
out
add
aad
bound
ljmp
push
clc
adc
mov
pop
lods
int
add
and
jmp
mov
into
sub
aad
push
gs
cli
ds
pop
scas
popa
cmp
add
dec
adc
dec
add
inc
sub
movsb
filds
adc
outsb
sbb
add
test
sbb
leave
add
fstpl
push
out
inc
sbb
data16
add
cmpsl
mov
xchg
inc
push
lret
roll
push
mov
nop
mov
jmp
sub
sbb
mov
jo
loop
jecxz
insb
in
add
mov
mov
pop
shlb
push
fisubs
jle
stos
adc
lods
pushf
adc
stc
pop
outsb
or
data16
mul
cld
xor
mov
in
sbb
mov
fldl
inc
cmp
pop
jno
mov
add
inc
es
ret
and
add
dec
push
lds
icebp
add
add
in
add
pop
add
inc
arpl
pop
push
add
mov
cli
add
and
ja
cmp
xor
rol
mov
and
add
or
iret
dec
les
insb
add
adc
sbb
lea
out
add
dec
das
inc
sarl
cwtl
ljmp
add
add
insb
and
add
xor
popa
pop
arpl
in
inc
popf
fidivrs
add
movsl
add
cmc
inc
iret
out
inc
push
push
scas
dec
pop
cltd
add
es
mov
xor
subb
jae
jle
xchg
sbb
lret
add
sbb
mov
mov
hlt
mulb
insb
mov
mov
push
push
cmp
pop
mov
repz
mov
xchg
leave
test
jne
bound
jmp
push
mov
add
fmuls
shll
mov
mov
sub
add
mov
inc
or
mov
dec
add
add
fdivrl
dec
paddusb
or
int3
pop
jns
and
inc
out
in
cli
rolb
add
add
aas
sbb
push
add
mov
lret
arpl
mov
mov
sbb
mov
addr16
insb
aaa
cld
dec
add
add
jmp
or
sbb
cmp
add
add
add
movsl
sub
adc
cmpsb
and
pop
fs
cmp
push
ja
cmp
mov
nop
add
mov
out
dec
neg
jbe
pop
add
mov
aaa
pop
add
subb
inc
out
lock
xchg
xchg
lds
pop
gs
xor
fildl
mov
fstp
pop
fists
iret
lods
test
add
mov
pop
mov
cmp
add
pop
sbb
sub
fistpl
lea
inc
pop
js
mov
aas
xchg
leave
cmp
and
sbb
sub
lods
test
add
incb
pop
add
js
push
xor
mov
jnp
inc
pop
mov
adc
push
adc
mov
test
pop
dec
cmpsl
movsl
outsl
add
xor
int
xor
add
popa
ret
jg
cmp
movsb
cmpsl
cmp
stc
out
fadds
fists
pop
xor
sub
pusha
or
sti
sbb
mov
and
add
lret
xchg
loopne
add
sbb
in
pop
xchg
stc
or
rcrl
jns
add
jmp
daa
insb
out
frstor
loope
fistps
pop
lret
lret
pop
push
pop
add
int
and
jmp
cld
mov
add
add
add
fldcw
xor
mov
adc
js
shrb
insl
mov
shll
daa
popa
add
fisubrs
inc
xchg
test
sbb
int
mov
add
add
ja
inc
add
push
clc
push
push
dec
add
sub
add
insl
sbb
cmp
xchg
int
cmc
xor
out
jg
add
aaa
into
add
mov
add
and
loop
pushf
mov
add
jl
adc
cmp
add
imul
enter
mov
gs
clc
add
cld
cmp
xchg
jb
imul
test
sbb
sub
inc
test
xchg
add
pop
repnz
add
roll
out
lds
mov
sub
dec
insl
aad
call
xchg
aam
fdiv
sub
out
or
ljmp
hlt
std
rcrb
add
es
dec
sub
add
push
shl
hlt
xor
lds
xchg
mov
or
mov
add
jp
outsb
xor
addr16
add
sub
inc
push
lret
test
loopne
mov
add
bnd
add
popf
es
pushf
test
add
pop
lds
add
sub
dec
daa
mov
andl
imul
sbb
repnz
mov
ja
pop
add
cmc
popa
add
add
cltd
adc
add
orl
cld
ds
add
mov
fisubrl
leave
xchg
shrb
dec
addr16
jb
or
add
mov
cmp
add
int
xor
push
adc
cld
add
faddl
jno
shrl
call
popa
adc
out
sbb
inc
jmp
cli
fiadds
mov
cmp
popf
call
add
orb
iret
cltd
jl
add
xor
pushf
jge
ret
pop
sahf
scas
or
xchg
imul
jo
fsts
push
add
es
jns
add
lods
sbb
add
jge
add
stc
lcall
test
jbe
sbb
in
sub
pop
mov
call
add
mov
add
push
outsb
fwait
push
popf
mov
int3
clc
mov
adc
push
inc
cltd
inc
add
xchg
and
push
fidivs
mov
push
popf
int3
into
cmp
or
cmp
aad
popl
inc
or
loop
xor
cmp
inc
cmc
dec
mov
movb
lret
and
sbb
add
imul
fistps
mov
test
leave
pushf
mov
jmp
ret
xchg
or
adc
in
xchg
shrb
popa
adc
es
fwait
or
in
jae
xchg
inc
mov
test
gs
cli
repz
outsl
insb
es
int3
sti
pop
ret
movaps
push
or
popf
add
inc
and
and
or
inc
add
mov
jmp
in
pop
pop
jg
and
incb
inc
add
adc
cmp
lock
mov
add
adc
add
mov
ret
or
add
stc
ss
inc
mov
pop
dec
sub
int
movsl
inc
push
or
int3
ret
mov
mov
mov
cmp
push
adc
add
cmp
mov
das
in
pusha
hlt
add
ss
push
cmp
or
add
dec
je
add
aaa
insl
add
ljmp
push
dec
dec
mov
adc
cmp
sub
sbb
int
mov
push
sbbb
or
pop
push
repnz
dec
pop
repnz
sbb
xchg
into
sbb
cltd
aas
jecxz
adc
add
retw
jnp
ds
add
add
pop
lds
add
fidivrs
and
out
aad
nop
sahf
test
push
popa
and
mov
lret
sub
mov
inc
push
add
add
adc
popl
imul
xor
cmp
mov
and
or
xor
or
jle
sbb
add
sbb
sub
ficompl
iret
pop
pop
jno
orl
push
add
inc
mov
mov
push
push
repnz
popf
or
loop
stos
loope
lahf
xorb
in
popf
xchg
movsb
add
push
lock
dec
nop
addr16
add
cmpb
sarb
inc
sub
sbb
or
scas
pop
mov
or
and
je
xor
sbb
dec
dec
int
add
cltd
int
repz
pop
add
movsl
add
push
hlt
outsl
mov
push
sub
stc
mov
insb
cmpl
jbe
add
in
insb
jno
int3
lods
jle
and
pop
js
lret
wrmsr
add
jo
or
js
jge
mov
mov
fdivr
adc
add
cwtl
mov
mov
add
jnp
sub
les
push
test
test
mov
and
add
das
sbb
loop
inc
push
lods
cltd
sbb
sub
and
ret
xchg
fwait
out
cwtl
adc
push
cwtl
mov
and
mov
sbb
fs
add
gs
cs
incl
xlat
sub
add
aaa
adc
jno
or
push
sub
sahf
or
cmpsl
js
insl
out
cmpsl
add
and
cltd
jg
jo
inc
pop
es
insb
testl
mov
sbb
add
call
add
jecxz
or
stc
push
and
out
jbe
cmp
es
mov
ljmp
fiaddl
jo
add
mov
mov
add
mov
xor
add
jo
jb
pop
mov
add
fimuls
add
add
push
cmc
pop
imul
sub
add
sub
fiadds
cli
adc
add
les
lods
orb
sub
dec
and
xlat
add
insb
je
inc
mov
loope
add
sahf
mov
inc
arpl
cmpsb
mov
add
cmp
pop
jbe
add
mov
mov
shlb
dec
jno
xchg
and
sbb
xchg
and
add
xor
movsl
and
clc
and
xchg
cmp
add
push
imul
add
push
fstps
xor
je
push
add
and
add
les
jl
xchg
bound
fbld
mov
push
add
xchg
and
in
cmp
bound
test
in
mov
add
push
inc
les
fistps
sbb
sti
sub
cmp
aad
add
mov
cmp
cmpsb
mov
push
sub
push
aad
movsl
cmp
cli
add
add
add
cltd
pop
add
mov
push
add
or
cmp
andl
add
push
ja
fwait
sbb
repz
sbbl
imul
adcb
and
movsl
add
mov
cs
mov
stc
add
sbb
test
bound
mov
mov
jmp
flds
js
xchg
fisubs
loop
add
adc
cmpsb
psrlw
decl
sti
movsl
or
mov
mov
xor
cld
inc
mov
add
pop
pop
adc
clc
cmp
movb
cmpsb
stc
xor
and
ljmp
pop
and
inc
add
stos
jno
jb
lods
lock
adc
adc
scas
pop
add
dec
fstl
popl
sbb
xor
iret
leave
jo
jnp
mov
add
lret
pop
push
add
or
pushf
and
test
adc
popl
and
vpsubd
mov
out
ror
enter
enter
leave
shll
jnp
adc
int
cmp
loope
add
popl
aas
push
jbe
mov
push
mov
add
jp
int
in
sbb
add
xchg
in
fsts
add
mov
cmc
push
test
repnz
mov
push
cld
fsubrs
icebp
add
test
stos
rcll
xlat
pop
xchg
push
xor
add
loope
add
shrb
jo
subl
ja
addr16
add
movl
xchg
pop
add
lds
rol
add
and
add
pushf
pusha
add
vmread
cmp
adc
ret
pushf
add
xchg
jmp
push
add
mov
rep
popf
aas
add
jmp
daa
in
pop
push
icebp
pushf
xchg
add
icebp
clc
mov
add
xor
push
add
and
add
std
subb
ret
xlat
dec
pop
add
mov
jmp
imul
sbb
xor
ss
imul
push
cs
pop
xor
cwtl
add
xchg
icebp
test
lahf
shr
dec
es
lods
or
dec
mov
inc
imul
jmp
add
add
aaa
fadds
dec
clc
jno
loop
cltd
jns
xor
mov
int
push
mov
cwtl
jb
sbb
fstl
dec
push
jns
dec
cmc
cmp
adc
movsl
jg
and
gs
xchg
pop
test
inc
orl
xor
mov
add
mov
push
mov
stc
mov
arpl
add
add
xchg
pop
push
add
pop
inc
js
jb
pop
push
jae
push
xchg
aas
repz
add
jl
hlt
cmpsl
dec
xor
jmp
add
xlat
add
add
cmp
or
mov
add
push
cmp
pop
test
aaa
popf
xchg
movsl
add
dec
sbb
pop
cmp
ljmp
addb
ret
and
adcb
dec
clc
cmc
mov
cmp
add
or
mov
adc
mov
stos
mov
iret
rcl
cld
rorl
sbb
or
sub
or
scas
pop
inc
iret
add
xchg
sbb
mov
adc
and
add
mov
push
add
cmp
xchg
inc
add
cmp
push
adc
ds
mov
add
lcall
mov
or
add
add
add
xchg
xor
dec
add
bound
dec
ret
inc
xor
sarb
ret
or
cmp
xor
pushf
sub
dec
add
xchg
pop
sub
pop
fs
clc
add
dec
jmp
sub
test
add
mov
mov
popa
mov
or
pop
push
leave
pusha
mov
add
push
imul
xchg
enter
ret
scas
xor
ljmp
cmc
addr16
push
icebp
xchg
insb
in
xor
movsb
mov
das
test
cmpsb
shll
loopne
subl
push
xchg
daa
push
ret
jb
xchg
jb
shrl
cli
aas
inc
sar
scas
je
xchg
push
add
lods
or
sbb
lods
push
cmp
jp
push
adc
js
pusha
and
pop
bound
not
je
xor
push
mov
bound
mov
mov
and
push
pop
add
add
sub
mov
jecxz
xor
les
pop
fisubl
shlb
jnp
imul
sub
mov
shl
sub
push
jns
bound
js
mov
inc
xchg
inc
das
add
mov
sti
xor
add
sbb
stos
and
add
and
sub
and
inc
sub
ljmp
dec
in
repnz
xchg
xchg
out
sub
cmp
push
sub
adc
ret
ret
cmp
add
insb
repnz
fistl
pop
ljmp
sub
subb
js
add
xor
into
test
or
lret
fwait
mov
cs
adc
dec
adc
add
push
outsb
gs
lods
fnstcw
jg
inc
arpl
jbe
adc
aas
pop
inc
add
push
xchg
stos
jnp
add
xchg
clc
mov
testb
xlat
ffreep
push
lock
push
arpl
add
add
add
scas
test
pop
mov
jb
inc
sbb
xchg
mov
cli
mov
xchg
loopne
addl
and
test
add
xor
in
push
pusha
movsl
cmp
xchg
loop
ljmp
fcmovnbe
add
sbb
xchg
xor
sbb
jns
jne
and
cld
addr16
cmp
or
test
call
add
mov
pushf
sbb
fildll
add
clc
add
xchg
add
mov
sub
shl
xlat
pop
add
add
aaa
jne
stos
add
sbbb
lahf
cmp
mov
test
dec
push
loopne
add
add
sbb
lock
push
jecxz
sahf
or
add
push
cmp
add
gs
sub
outsl
fmull
mov
inc
lret
jg
in
cmp
iret
stos
pop
mov
dec
inc
out
add
jp
mov
gs
addb
hlt
ss
out
imul
add
sar
add
jns
jl
aad
and
jl
out
stc
pop
inc
cmp
push
stc
add
cmpsl
adc
pop
hlt
rcll
test
cld
push
mov
pushw
add
out
xor
stos
mov
mov
or
subb
lods
dec
fldl
fisubl
xor
jg
pop
cld
inc
add
add
sbb
add
aaa
add
imul
add
pusha
inc
xchg
push
inc
stos
pop
mov
lods
mov
jns
shll
stos
test
add
dec
lret
push
testl
scas
cmpsl
xchg
test
fwait
push
cli
inc
les
pop
imul
xchg
dec
daa
int
imul
testb
or
repz
jno
add
xchg
in
jo
sbb
add
jbe
insl
add
sti
pop
xchg
subb
into
lahf
mov
push
jnp
sbb
sahf
cs
js
popa
add
mov
add
add
dec
insb
pop
insb
cmp
js
int3
in
les
jp
roll
xorb
ret
add
pop
jae
jl
add
mov
es
and
dec
add
and
sti
sbb
add
add
mov
repz
arpl
add
inc
std
xor
push
into
sub
cs
mov
dec
nop
ljmp
jbe
sbb
stc
cmc
xchg
mov
push
jae
xchg
movsb
test
ficomps
xchg
rcll
lahf
mov
fidivrs
jl
std
mov
pop
jnp
loopne
andps
and
add
jge
xor
mov
orl
add
rclb
add
sar
sarl
jge
je
adc
add
daa
xchg
arpl
outsb
push
jg
jecxz
xchg
std
in
jg
add
cmc
ja
inc
add
mov
loopne
fbld
add
test
mov
das
fwait
add
add
add
sbb
add
je
jo
nop
ficomps
arpl
dec
dec
rcrb
rorl
inc
pop
lcall
dec
das
add
cmp
jmp
add
xor
add
test
sbb
add
sub
push
mov
adc
add
sahf
insb
add
pusha
jmp
lahf
add
and
fcmovne
jl
sub
jp
sub
add
js
adc
push
inc
dec
xor
adc
imul
outsl
mov
jge
insb
add
adc
and
mov
push
add
popf
cmc
fidivrs
sub
mov
call
arpl
mov
outsb
test
and
lods
jbe
repnz
dec
inc
lea
mov
xchg
jl
add
int
pop
lods
push
xor
aam
test
ss
inc
in
neg
jle
xchg
mov
test
add
adc
xor
inc
and
repnz
lea
daa
add
sub
adc
add
int3
mov
fisubs
pop
cmp
sbb
inc
add
imul
in
ret
insl
mov
pop
add
add
add
push
aaa
xor
ds
add
xor
pop
sbb
inc
sahf
daa
inc
and
push
add
add
pop
ret
movsl
daa
shrb
hlt
cmp
nop
rolb
mov
out
push
lret
lahf
lret
fcoms
subl
popf
stc
cmpsb
sub
dec
pusha
scas
sbb
add
rorb
add
cmp
in
push
call
movsl
shlb
xor
pop
sbb
dec
pop
or
lret
cmp
push
or
xor
adc
pop
imul
mov
mov
shlb
and
add
pop
mov
jp
add
cmp
cmp
mov
mov
popa
mov
jne
dec
ljmp
lea
lods
repnz
sub
jno
pushf
xchg
ljmp
addl
xor
icebp
std
add
fildl
int3
push
mov
outsl
jp
lret
add
in
add
mov
cld
aaa
push
shll
mov
je
push
xor
call
add
sahf
nop
xchg
mov
scas
xor
scas
mov
outsl
cld
add
movsl
sbb
cmpsb
in
dec
ret
rorl
push
ss
xchg
xchg
shrl
and
js
adc
add
add
out
and
scas
fadds
mov
in
sbb
std
xchg
adc
mov
sti
popa
ja
daa
add
jmp
fstps
xlat
adc
flds
fsts
scas
out
mov
cs
mov
int3
jne
fbld
rcl
sub
jo
mov
jb
dec
mov
mov
mov
out
test
cmp
syscall
push
add
pop
push
xchg
add
aad
add
rorl
scas
ljmp
mov
cmp
aam
lods
imul
cmp
add
sbb
sbb
fs
add
xorl
or
inc
add
add
and
in
add
subl
add
jno
push
sbb
in
push
cwtl
sahf
loope
es
popa
scas
sub
push
add
mov
outsb
movsb
lret
xor
lds
faddl
jl
mov
movsl
lods
xor
adc
es
pop
jb
push
inc
pop
adc
xchg
cmpsl
cmpsb
xchg
xchg
pop
inc
adc
mov
xchg
push
add
fucomi
inc
dec
mov
add
int
sbb
add
aas
rcr
or
int
addr16
add
add
jmp
ret
aam
mov
int
das
add
mov
xchg
sbb
repnz
and
jg
loopne
pop
add
adc
clc
aas
or
xchg
rcll
push
insl
or
and
repnz
pop
popf
sbb
add
and
rcrl
repz
cwtl
mov
mov
adcb
mov
and
add
repnz
add
lods
add
xchg
mov
icebp
mov
mov
loop
scas
add
in
ret
mov
cmc
cmp
sbb
xor
add
imul
aas
adc
aaa
pop
seto
aam
out
cmpb
ret
adc
in
jecxz
add
scas
imul
mov
push
add
mov
les
add
in
clc
xor
add
icebp
cmp
stos
or
sub
mov
adc
enter
mov
pushl
push
outsb
xlat
int3
roll
jb
in
sub
jle
push
add
push
add
sbbb
add
xor
mov
cmp
inc
test
inc
out
ret
push
add
cwtl
mov
jbe
jl
xchg
lahf
xor
or
nop
jl
add
add
test
cmpsb
xlat
and
sahf
add
in
and
add
xor
mov
sub
add
jno
scas
add
pop
pop
and
push
lret
jo
outsl
and
ja
int
add
roll
fsubl
pop
sbb
mov
cmp
add
dec
and
leave
xchg
int3
add
aas
add
xchg
es
mov
add
dec
mov
jmp
imul
dec
sub
jne
cmc
and
push
mov
outsb
add
add
pop
cmc
jb
cmc
cmpsb
movsl
test
imulb
cld
xor
or
mov
mov
jecxz
into
es
popf
lock
sbb
aaa
cmpsb
adc
add
cmc
or
into
add
dec
xor
ret
mov
outsb
adc
add
add
inc
mov
add
xor
mov
push
stos
mull
aad
adc
stc
mov
push
sub
pop
mov
fidivs
add
push
gs
and
push
jecxz
adc
sti
or
jp
int3
add
dec
mov
push
pop
outsb
or
dec
rcrl
sub
shll
or
arpl
mov
jae
jmp
adc
mov
adc
shl
mov
ret
push
add
inc
jns
ficoms
push
and
cmp
clc
call
iret
mov
adc
arpl
add
lret
and
mov
adc
das
lahf
push
nop
movsl
jg
aad
dec
add
cld
pop
sbb
mov
hlt
lods
shlb
xor
sbb
sbbl
sahf
lea
leave
cs
shrl
inc
movsl
fwait
xlat
mov
stos
nop
lods
mov
mov
mov
les
sti
loop,pt
dec
xchg
sahf
sub
loope
out
scas
cltd
repnz
fs
fs
iret
pop
add
sbb
sbbb
cmpsb
add
push
int
cld
lods
shll
loop
and
mov
jle
pusha
add
inc
inc
add
into
mov
mov
add
cmp
jbe
in
xchg
inc
push
mov
inc
add
cld
add
dec
or
or
mov
xor
pushf
push
int
stc
add
aaa
push
and
popf
dec
repnz
mov
addb
jmp
jle
int3
icebp
push
out
cwtl
adc
sbb
add
scas
jge
jb
sbb
adc
xor
pop
push
and
imul
adc
mov
mov
cmp
out
rdpmc
lret
add
movsb
mov
mov
add
cwtl
nop
add
inc
fimuls
mov
cmpsb
mov
addb
mov
sahf
das
jae
add
xor
add
sbb
cld
test
cmp
jg
fsts
add
lahf
dec
add
or
pop
add
loopne
hlt
inc
add
push
stos
mov
mov
outsb
add
lods
mov
int3
add
sub
pop
add
mov
je
pop
fwait
sbb
or
jp
push
shll
pop
add
arpl
mov
or
sub
bound
xlat
cmp
mul
out
mov
in
mov
fiadds
aas
pop
and
sldt
lret
xor
test
decl
stos
xchg
rcr
stos
movsl
add
push
aad
jnp
dec
jnp
in
jne
cmc
jp
sub
or
add
mov
adc
out
call
push
popa
mov
addb
mov
imul
stc
fmul
jnp
in
lret
sbb
hlt
fidivrs
std
add
jmp
adc
dec
repz
cmpl
add
sub
sub
mov
imul
fldenv
mov
add
iret
jo
stos
rclb
stc
lock
push
lcall
repz
negb
out
jge
push
test
push
mov
loopne
sbb
xchg
pop
inc
stos
enter
nop
adc
pop
add
push
addl
adc
and
out
sub
jns
mov
js
rol
addb
sub
inc
icebp
lods
add
lods
add
add
add
sbb
in
loopne
arpl
dec
call
xchg
fcomp
push
jnp
pusha
mov
nop
std
mov
mov
mov
outsb
xor
jae
iret
sub
insb
je
outsb
dec
out
cs
cld
mov
inc
int
cmp
outsl
inc
popa
stc
mull
mov
mov
adc
add
or
xor
imul
sbb
add
scas
aam
push
into
adc
and
or
add
xor
dec
or
xor
jbe
stos
add
add
out
outsb
pop
and
add
scas
add
iret
leave
push
add
mov
add
xchg
pop
cmpsb
mov
mov
push
add
pop
pushf
fidivrl
sbb
add
mov
jle
sub
sbb
scas
fimuls
adcb
es
stos
add
jae
xchg
rcll
add
mov
add
jb
xor
lret
push
add
lahf
jge
neg
in
imul
andb
loope
jbe
nop
jno
ret
adc
insb
xor
outsb
and
or
inc
inc
sub
sbb
mov
sub
fsubr
movsl
push
movsb
and
add
sbb
daa
stc
add
mov
lds
push
mov
adc
adc
pop
cltd
cld
sub
jge
jae
lret
rcll
mov
ret
notb
pop
push
add
mov
add
sbb
je
mov
incb
aas
add
lret
mov
iret
lret
sub
add
add
cmp
or
jb
inc
ss
mov
mov
add
or
call
adc
jns
ds
jle
andl
mov
inc
push
cmp
jno
gs
add
aaa
mov
and
push
mov
andl
lret
daa
add
mov
xchg
jle
sub
sub
mov
fimuls
sti
and
cmp
push
add
xor
add
jge
mov
fwait
inc
stos
sub
ljmp
adc
sbb
pop
rcll
add
dec
push
mov
fstl
add
mov
add
dec
aad
mov
clc
mov
call
add
lret
jge
and
add
es
cmpsl
cmp
jecxz
cmp
mov
add
add
cli
iret
push
and
add
mov
sbb
sub
add
pop
mov
cld
aaa
pushf
in
in
cmc
imul
dec
std
orl
jecxz
xchg
cs
push
fstpt
iret
in
lahf
ret
int
pop
cmp
insb
push
adc
jl
add
add
enter
stos
out
pop
mov
add
add
mov
and
cld
inc
test
jo
inc
iret
mov
or
daa
add
in
shl
adc
add
loop
xchg
jle
out
mov
mov
push
sub
fidivrs
cmp
loope
sub
inc
add
add
ret
add
jmp
jecxz
popf
loopne
add
pop
pusha
mov
sub
push
adc
pushf
jne
aas
inc
add
add
decl
decb
dec
adc
add
inc
and
or
sahf
adc
push
std
daa
mov
xchg
sbb
pop
xlat
push
xor
pop
ss
rcrb
std
add
and
cmp
cmp
test
mov
mov
repnz
repz
bnd
xor
mov
mov
dec
fiaddl
add
jbe
xor
cmp
mov
nop
add
and
fucomp
sub
pop
and
xor
xchg
dec
je
int
adc
xchg
add
jg
dec
push
mov
lret
addr16
dec
or
mov
aaa
lods
out
imulb
and
data16
adc
cmp
lret
ljmp
add
xor
out
add
add
int3
out
andb
sbb
mov
add
nop
pop
pop
data16
repz
or
jg
push
push
pause
or
add
ljmp
dec
fistl
xchg
add
mov
pusha
mov
inc
enter
pushf
push
movsl
jnp
pop
add
out
xchg
add
cmp
pop
and
divb
xor
and
add
test
das
nop
pop
xor
or
out
and
movsb
sub
sub
cmp
shl
pop
xchg
lods
sub
rorb
xchg
sbb
mov
jbe
pop
push
add
dec
dec
and
add
add
pushl
iret
and
push
add
sub
faddl
cmp
insb
add
xchg
aaa
mov
imul
cltd
filds
mov
mov
cmp
push
push
stos
fildl
mov
add
add
add
incl
or
jge
add
and
sarb
add
jl
cs
lret
mov
xchg
add
mov
roll
add
pop
ljmp
aaa
jae
inc
add
js
add
je
and
ret
in
xor
jo
mov
popa
ja
js
mov
popf
popf
add
mov
dec
add
dec
outsl
testl
imul
mov
mov
fistpl
mov
pop
mov
fwait
mov
dec
daa
add
sub
xor
adc
lock
test
cmc
stc
cmc
mov
xchg
dec
mov
lds
inc
push
ret
pop
or
xor
testl
int
inc
sub
scas
mov
sti
or
clc
loopne
repnz
push
add
mov
jne
rclb
hlt
sahf
enter
mov
sbb
pop
or
jo
addr16
rcll
insl
repz
stc
dec
mov
inc
ja
nop
shrl
pop
mov
jecxz
add
aaa
cmp
add
and
aam
jecxz
xchg
add
gs
dec
push
adc
sbb
adc
jnp
add
add
cwtl
sub
and
rolb
dec
xorl
pop
jbe
scas
xchg
push
aam
inc
push
aas
cmp
mov
jns
mov
call
into
add
mov
popf
cli
pusha
test
add
lods
mov
lret
mov
sub
adc
pop
xor
add
mov
xchg
mov
dec
loop
sub
xor
addl
add
cli
add
cmp
repz
sub
popa
jno
mov
lods
add
jo
movsl
mov
and
aas
pop
daa
and
jno
push
incb
xor
repz
xor
pop
sub
sub
push
rolb
adc
dec
adc
add
jne
lds
add
sub
add
mov
inc
inc
scas
imul
jge
imul
add
dec
add
aaa
shrl
push
jbe
xchg
test
push
add
add
aam
mov
lret
test
inc
xchg
rclb
sbb
mov
add
mov
push
xor
orl
add
or
inc
arpl
mov
add
add
push
imul
test
js
xlat
out
xchg
lcall
jno
fcomp
shlb
pop
inc
arpl
lods
mov
ficomps
lea
movsb
sub
dec
fimull
loop
sbb
daa
inc
outsb
clc
lcall
mov
sbb
test
add
pop
add
mov
mov
cwtl
or
add
testl
push
mov
add
dec
mov
lods
dec
lcall
or
add
jle
gs
xchg
add
pushf
sbb
arpl
mov
jae
movsl
xor
aam
mov
fstpt
add
inc
cmp
mov
pop
inc
ljmp
and
dec
cwtl
add
sarl
iret
sbb
std
mov
mov
add
je
pop
into
iret
mov
int3
pusha
xchg
shll
pop
mov
mov
in
or
data16
cmp
lret
xor
add
and
cmp
iret
cmp
movsb
pop
nop
push
shlb
mov
xchg
jmp
cld
add
fdivrs
je
pop
mov
pop
stos
repz
inc
mov
sub
jp
repz
shll
jb
dec
xor
push
shlb
scas
pop
add
fcomip
add
insb
jb
dec
pop
xchg
dec
outsl
add
fdivrp
xchg
popf
add
mov
hlt
jmp
popf
add
cwtl
add
adc
imul
pop
cmp
sub
mov
js
xlat
mov
jb
sub
cmp
enter
fistps
fwait
add
aas
xchg
push
jl
popf
fcompl
add
inc
cmpsl
mov
xlat
fsts
and
iret
push
ds
mov
xchg
lldt
les
add
push
bound
push
jnp
fldt
add
out
rcll
sub
addb
mov
pop
fistps
fildll
repnz
and
adc
rolb
sub
pop
insl
xchg
out
pop
mov
call
sub
xor
cmpsl
shl
lea
sbb
ror
adc
pop
sub
xchg
mov
bnd
push
loop
cwtl
out
jp
out
add
xor
jo
add
add
add
add
mov
push
jp
xor
adc
pusha
add
gs
jns
add
xor
cltd
mov
pop
xchg
stos
mov
and
dec
jl
push
push
add
or
add
add
xchg
add
xchg
mov
sbb
fstpt
test
or
cmp
and
movsb
shl
jb
add
popa
clc
out
jp
repnz
add
dec
adc
push
in
mov
push
mov
mov
xchg
fbstp
add
push
ret
mov
pushf
fstp
cmp
incl
pop
add
pop
xor
add
aam
loopne
fidivs
add
gs
inc
xchg
mov
push
nop
addl
popf
add
dec
js
add
or
mov
add
mov
or
adc
in
loop
les
inc
aad
xchg
sbb
cwtl
insb
push
push
adc
rolb
adc
add
lock
mov
mov
add
add
pop
sbb
add
add
das
aam
mov
add
imul
add
add
loop
pop
and
push
mov
fidivl
jg
int
add
and
cmp
add
cmp
icebp
add
xor
ja
int
add
addr16
jo
xchg
push
push
cmp
ljmp
add
push
add
imul
add
jae
scas
add
mov
int3
mov
add
mov
popf
add
mov
lock
arpl
in
rcl
aad
dec
les
imul
out
and
dec
sub
cmpsb
add
negb
xor
aad
popa
lret
add
pop
add
push
in
xor
test
aas
mov
rcr
xchg
mov
addr16
push
add
lods
add
out
cpuid
push
inc
add
in
jnp
sar
cmp
jbe
add
data16
jno
jno
call
movl
and
inc
dec
add
out
das
sub
add
aam
scas
xchg
popf
inc
pop
mov
jp
gs
cmp
adc
call
leave
and
jp
stos
xchg
cmpl
stos
cli
dec
addl
add
or
aas
inc
add
ret
push
add
insb
test
adcb
repz
fldcw
insl
add
mov
fdivp
push
fwait
pop
xchg
inc
test
in
push
dec
jb
and
sub
gs
add
loopne
mov
movsl
add
push
jbe
out
rolb
add
or
popf
in
mov
jp
lds
jge
das
jno
enter
outsb
pop
jno
fisttpll
xchg
add
xchg
out
jns
inc
add
rorl
jno
out
subb
mov
into
lahf
jb
faddp
and
daa
test
ret
mov
jle
cmpsl
add
fiaddl
pop
mov
pop
add
ret
jns
adc
jne
push
mov
xor
mov
push
mov
cmp
out
add
imul
cmpsb
mov
into
cmp
add
add
icebp
jo
pop
xchg
push
gs
jb
ljmp
dec
pop
stos
push
fdivs
cmp
sbb
adc
fisubrs
mov
fstpl
sbb
add
fdivrp
les
lcall
add
xor
shlb
paddusb
dec
scas
adc
cmp
xchg
movsl
xchg
outsl
push
movb
jge
cmp
or
in
daa
add
icebp
pop
inc
push
pop
add
add
in
push
add
mov
roll
sbb
mov
and
sbb
movsl
jb
adcb
jne
cmpsl
push
scas
shlb
insl
mov
xlat
dec
cmp
movsb
inc
dec
cmpsb
add
mov
scas
inc
add
add
dec
out
push
sub
aaa
pop
pop
fbld
cmp
repz
fs
sbb
dec
inc
sub
xchg
push
add
inc
enter
mov
das
in
mov
add
lahf
lea
mov
push
fildll
std
movhps
sbb
mov
adc
mov
lds
lods
jno
push
fcompl
stos
incb
pop
add
rcrb
sub
jb
push
push
jbe
add
adc
inc
add
outsb
mov
repnz
es
fs
jp
cld
adc
sub
enter
js
push
movsl
xchg
xor
add
add
aaa
stos
ja
add
push
fiaddl
test
mov
aad
mov
xlat
test
mov
in
mov
mov
dec
add
mov
ja
mov
inc
popa
sbb
add
add
fisttpl
ss
into
popf
pop
stos
mov
xchg
pop
test
fiadds
mov
test
mov
mov
outsl
rolb
xchg
add
mov
mov
cmpsb
dec
ljmp
subb
or
pushf
add
lods
push
imul
ficomps
mov
out
or
mov
pushf
cmp
push
dec
cs
enter
inc
xor
push
cmp
movsb
popf
sbb
sbb
add
cmpsb
popf
xor
add
add
xlat
test
pop
lods
push
cmp
pop
add
repnz
and
mov
dec
xchg
in
pop
push
lock
adc
dec
xchg
inc
push
adc
sub
inc
jns
lret
add
mov
and
jg
jp
adc
mov
flds
ljmp
popf
rclb
add
adc
andl
fsubrl
fiadds
int
inc
xchg
mov
addr16
xchg
shlb
xchg
xchg
loope
adc
xor
dec
inc
add
bound
cld
daa
pop
stos
jae
mov
cmpsb
jnp
or
jge
add
sbb
and
add
outsl
mov
enter
icebp
mov
add
add
xchg
and
mov
cmp
add
inc
notl
fcomps
int3
sbb
filds
test
scas
inc
aam
cmp
inc
add
roll
pop
sub
dec
jne
pop
push
and
push
daa
mov
sub
popf
fstps
outsb
push
clc
popa
add
mov
add
arpl
fcomps
lock
add
add
imul
out
imulb
dec
mov
add
and
push
xor
mov
mov
push
jo
inc
jae
movsb
add
cvtps2pd
dec
cmpsl
mov
xchg
push
scas
or
mov
push
jge
xor
ret
inc
int3
add
xlat
add
out
ss
data16
js
add
into
add
sub
add
cs
sbb
xchg
dec
rclb
or
iret
jae
and
ret
add
and
loop
cmpsb
xor
pop
cmpsl
mov
mov
in
add
cmpsb
sbb
xor
ja
xchg
test
out
add
and
inc
add
add
arpl
mov
add
cs
pop
add
icebp
push
es
jle
mul
mov
lahf
pop
push
push
ret
mov
jno
mov
insl
in
addb
push
rcrl
cmpsb
in
and
add
jp
add
inc
imul
int
and
aam
push
cli
push
push
out
add
add
addb
int
inc
mov
ret
ja
add
pop
addl
popf
scas
stos
push
data16
bound
xchg
test
cmp
fadd
sbb
jp
or
fs
dec
or
mov
sbb
inc
adc
insb
pop
fadd
add
add
lret
pop
mov
sbbl
les
hlt
mov
xor
pusha
add
pop
xchg
add
add
adc
sbb
push
add
push
sti
mov
loope
fcomps
ds
test
test
cmpsl
add
in
fcompl
rol
pop
lret
cmp
mov
sti
cld
je
add
add
daa
pop
popl
lret
jecxz
add
mov
rcr
lret
lret
mov
icebp
add
lret
fwait
adc
bound
jp
loope
pop
movsb
jno
inc
inc
mov
orb
add
jae
push
sbb
add
and
mulb
add
popa
inc
sub
pop
pop
lods
dec
add
mov
add
sub
add
jo
gs
inc
inc
mov
sbb
cs
jp
pushf
mov
lcall
jo
imul
test
jno
mov
xor
loopne
xlat
mov
add
xchg
add
dec
movsl
fdivrl
lods
mov
jmp
and
out
mov
adc
test
dec
push
xor
fs
mov
inc
dec
in
in
add
sub
or
xor
outsl
mov
into
test
cmpsb
push
shl
das
jl
ljmp
push
ss
xchg
add
mov
inc
push
mov
popf
add
mov
ja
jp
test
popf
mov
push
in
jp
push
jb
mov
push
loope
cmpxchg
icebp
dec
mov
mov
incb
aad
pop
aaa
or
add
cmp
addb
mov
pusha
lods
add
movsb
and
jg
lahf
push
enter
ss
adc
add
fs
sbb
sub
mov
push
addr16
and
sbb
add
fcoms
into
sahf
enter
adc
jl
add
out
jns
jp
movsb
in
add
or
mov
imul
dec
add
popf
push
xchg
call
jo
and
pop
jp
or
rorl
bound
pop
sub
testb
lret
mov
xor
iret
inc
sarb
and
sub
out
add
xor
push
adc
loopne
ss
mov
lcall
add
cmp
add
lods
jbe
mov
pop
adc
xchg
cld
xor
aad
pop
sub
movsl
fnsetpm(287
iret
add
ret
negl
mov
add
pop
pop
add
aas
cs
aaa
push
sub
mov
mov
add
icebp
arpl
add
mov
xor
leave
add
cmp
add
jecxz
sbb
int
dec
add
popf
sbbl
lcall
mov
loopne
scas
add
data16
mov
lods
mov
sub
pop
cltd
enter
mov
xchg
sahf
frstor
jge
inc
dec
rorb
sub
xchg
fs
dec
and
aad
out
std
sub
in
mov
dec
in
xor
xchg
xchg
add
push
xchg
push
mov
cmc
add
sub
add
jle
xor
and
add
into
lea
rolb
add
mov
jmp
jg
mov
iret
push
add
divb
fstps
jbe
ljmp
dec
or
sbb
and
and
pop
pushf
stc
fdiv
call
dec
push
add
sub
add
pop
rcrb
add
aas
outsl
lret
ljmp
popl
sub
stc
lahf
mov
es
insl
and
cmpsl
push
xor
add
cmp
popf
sbb
cmp
clc
rcl
out
cld
xchg
xchg
pop
movsb
mov
add
loope
fildl
add
add
push
aas
or
out
jp
xor
and
call
and
jecxz
sbb
add
test
push
lock
mov
sub
add
cmpsl
div
movsb
xchg
nop
mov
rcl
xchg
add
dec
movsl
scas
cld
xchg
loope
lock
bnd
rclb
and
dec
cmpsl
in
mov
mov
mov
sub
push
push
add
pop
testl
loope
out
scas
add
mov
cmp
orl
add
in
jl,pn
cmp
push
dec
test
inc
sub
popl
lock
popl
mov
add
adc
out
add
mov
fcmovbe
add
cmp
mov
imul
test
call
cltd
inc
cmp
xor
push
rcrb
iret
jg
rolb
jb
hlt
lods
xchg
sbb
and
jmp
mov
push
adc
lret
fists
or
jb
mov
clc
add
ret
ljmp
pop
or
add
add
pop
sbb
add
adc
xor
ret
inc
lods
std
int3
mov
lret
add
jbe
push
dec
in
add
loop
cld
add
add
test
std
adc
rorb
xorl
add
cmp
lahf
jl
jmp
les
jns
and
ja
clc
or
ja
nopl
inc
mov
or
dec
jbe
adc
iret
mov
dec
rorl
test
int
dec
dec
aad
sbb
pop
inc
add
jb
mov
lret
adc
lcall
sub
in
and
mov
xchg
add
aam
sarl
sbb
pop
pop
jo
push
cmc
pop
arpl
sub
addb
adc
adc
pop
jne
loope
fs
mov
popf
sub
cmp
dec
push
add
std
lcall
aam
movsl
add
and
cmp
or
add
fdivrl
imul
add
add
xchg
add
bound
jbe
xchg
dec
es
jo
xchg
add
mov
fadds
jo
js
rcll
mov
push
add
cmp
xchg
cmc
adc
test
ucomiss
add
loop
add
pop
xchg
in
and
ds
scas
add
loop
ret
mov
imul
daa
out
pop
leave
adc
leave
cmp
insb
dec
pop
add
jne
cmc
mov
int3
in
inc
jle
loope
xchg
fists
add
mov
push
adc
mov
mov
adc
popl
and
insb
mov
mov
call
lea
filds
add
and
inc
int3
aaa
or
push
arpl
incb
cltd
push
add
sbb
and
add
imul
xor
test
dec
dec
test
mov
pushf
aaa
push
add
cwtl
inc
add
jge
pop
outsb
popf
jp
and
jl
pop
sub
mov
dec
shlb
fsubp
pop
jb
fldenv
sbb
stos
cltd
pop
jo
fstl
push
mov
arpl
mov
lcall
push
and
js
pop
test
cmp
adc
jno
xchg
loope
ss
cmp
jns
sub
cs
mov
cmp
and
cmp
xor
addl
pop
test
push
cmp
or
or
add
aas
stos
cld
loope
push
inc
dec
inc
mov
mov
and
add
jge
enter
shl
add
pop
stos
mov
xor
fs
jbe
cwtl
mov
add
movsl
add
shlb
add
jne
push
add
jo
sub
dec
daa
adc
fimuls
aaa
add
adc
xor
mov
out
fstps
jp
adc
pop
xchg
jo
add
incb
dec
mov
in
insb
cwtl
pop
add
cmpsl
jle
cmp
pushl
sbb
imul
imul
cld
nop
xor
stc
add
and
inc
push
inc
scas
and
fildll
push
mov
cld
dec
cmp
adc
xchg
xor
jae
pop
cmp
adc
gs
mov
call
add
fs
mov
loopne
add
addl
add
add
add
cli
add
add
xchg
add
add
add
add
fimull
test
push
mov
pop
dec
test
ja
aad
cmpsl
out
add
jmp
push
mov
push
testb
inc
out
add
inc
add
mov
js
mov
fmuls
lods
push
mov
dec
cld
jne
in
rorb
push
sub
dec
out
adc
dec
jl
ja
call
inc
xlat
mov
push
ficomps
pop
push
add
adc
iret
jecxz
cmp
and
push
nop
mov
aaa
and
push
lret
mov
xor
or
fsubs
je
jp
dec
or
pusha
fists
pop
add
les
xor
outsl
mov
xchg
xor
add
into
jno
add
pop
add
sbbb
pop
outsb
xchg
add
add
add
jg
jecxz
in
dec
add
xor
les
mov
cld
cmc
loopne
adc
cs
mov
pusha
jno
shr
jg
pushf
or
xchg
add
clc
add
ja
enter
cld
fcomps
rolb
js
insb
xor
and
mull
int3
stc
jp
popa
lods
sub
divl
call
int
into
in
add
popf
int
mov
and
xor
cmpsb
jp
ss
aad
xchg
cmp
xchg
sub
or
repnz
push
fidivrl
mov
pushf
inc
lods
fbstp
movsl
fistl
add
negb
inc
sub
sbb
xor
jp
sbb
jecxz
outsb
mov
movsl
and
sub
sbb
mov
adc
in
adc
add
outsl
push
add
jo
ret
clc
add
cmp
cwtl
dec
add
add
add
dec
cmp
cli
and
adc
mov
push
daa
insl
leave
add
in
sbbb
adc
sub
orb
pop
add
add
cmp
add
nop
rorb
je
add
loope
subb
mov
nop
ret
or
cli
or
repnz
ret
or
out
fsubl
pop
rorb
gs
or
rol
loopne
pop
push
add
lods
add
je
or
push
clc
orl
and
insl
adc
inc
adc
aas
mov
dec
ljmp
mov
add
pop
and
cmpsl
fcmovne
sub
or
lret
add
sbb
or
inc
inc
cmp
inc
add
lret
lret
mov
daa
pop
push
add
stc
cmc
aad
cmp
aam
stos
adc
dec
sub
mov
mov
repnz
std
xor
or
lcall
fiadds
loopne
sbb
mov
imul
dec
in
test
mov
adc
xor
adc
or
outsb
push
icebp
or
xor
dec
cli
jno
jns
out
movsl
in
cmp
je
xchg
mov
data16
ffree
mov
add
jp
cltd
sub
stc
push
dec
jnp
mov
fistpl
in
mov
inc
pushf
popl
adc
aad
andb
sbb
pop
xchg
push
cmc
push
dec
dec
cmp
add
pop
and
lea
sub
dec
mov
or
in
pop
jb
fs
sbb
jno
push
xchg
and
icebp
adc
gs
in
push
add
add
push
call
xchg
add
sti
sub
inc
sbb
pop
movsb
cmpsb
add
mov
jo
add
inc
stc
stc
mov
add
in
out
and
inc
adc
les
add
fs
add
sbb
arpl
push
ds
xchg
add
jmp
cmpsb
pop
add
add
inc
test
clc
iret
push
cld
cltd
jle
push
add
add
cmp
mov
test
and
mov
movl
mov
xor
jecxz
mov
bound
sbb
or
and
sub
adc
lods
mov
movsb
mov
sbb
lds
popf
repz
mov
or
xor
stc
push
test
jmp
mov
rcr
ljmp
mov
lea
xchg
push
test
jae
jle
lods
mov
movl
push
jbe
sbb
jg
mov
sbb
push
xor
push
std
ret
xbegin
je
jno
inc
add
xor
mov
rcrb
push
sti
pop
adc
add
add
fbld
or
dec
insl
in
aam
jae
mov
add
pop
or
dec
xchg
add
fadds
dec
xchg
pushf
cltd
and
sti
add
mov
mov
cltd
cmovno
imul
dec
insb
inc
add
lock
sub
cltd
ds
pop
sub
mov
mov
jae
add
jle
aam
dec
ret
cld
jmp
mov
add
add
popa
jne
das
mov
jno
or
call
push
adc
pop
xchg
fsubrl
pop
sbb
scas
mov
pop
rolb
fsubs
out
pusha
push
subl
fs
add
add
movsl
or
int
dec
add
arpl
arpl
cs
mov
pop
mov
add
mov
xor
add
or
adc
flds
push
aam
inc
sbb
cwtl
pop
push
add
fldl
loope
cmp
pushf
inc
shrb
pop
push
add
xchg
ss
xchg
xlat
subb
adc
push
out
add
repz
cmp
jbe
push
add
inc
iret
pop
dec
xor
sub
mov
mov
push
cld
mov
clc
scas
enter
mov
jns
lahf
cmpsl
adc
add
jmp
mov
push
cmp
test
mov
push
filds
push
add
or
push
pop
sahf
lahf
enter
shrl
xchg
sahf
add
push
repz
adc
or
mov
mov
jne
mov
or
jmp
xchg
add
add
lret
ss
pop
popl
out
xchg
inc
push
cmp
push
sbb
lahf
pop
add
push
add
gs
add
adc
push
add
and
inc
daa
sub
stos
mov
xor
jne
test
add
xor
cmc
push
push
mov
adc
rcrb
sbb
int
xor
jge
add
fsubrs
rcr
add
imul
or
rcrl
imull
inc
popa
loop
and
je
fbstp
jbe
cmp
xchg
sub
test
mov
das
or
std
xor
jb
push
stc
add
test
mov
cld
xchg
add
pop
insl
frstor
add
in
mov
mov
dec
cmpsl
lods
or
sub
or
dec
cmpsl
and
mov
add
cmp
xor
daa
es
mov
cld
addr16
cmp
inc
and
xchg
ja
or
inc
cmp
inc
sti
pop
push
movsl
sbb
add
pusha
loop
add
pop
leave
lahf
xor
loopne
xorl
adc
add
jne
movsl
jno
sbb
adc
sbb
jp
cmp
andl
fsubr
cli
notl
rorl
outsl
lret
out
sub
movsl
std
xchg
gs
dec
sbb
test
fsubs
jne
mov
mov
lods
rclw
rorb
inc
inc
call
cmc
cmpsl
adc
addl
scas
add
inc
cld
xor
xchg
sub
xchg
std
lock
aad
add
push
mov
flds
scas
pop
push
pop
les
mov
out
add
insb
jl
cmpsl
cmp
add
lods
inc
jo
insb
or
push
or
lds
hlt
pop
adc
push
cmp
add
popf
je
aas
pop
add
xor
iret
and
xor
orb
push
push
das
add
fisubs
loop
orb
add
arpl
xor
push
sub
sbb
sbb
popa
jo
test
cmp
sub
nop
or
jno
mov
fadds
adc
jns
sub
add
popa
std
add
add
or
cmpsb
mov
in
not
add
pop
xchg
into
inc
out
mov
sub
movq
jno
out
int3
mov
jnp
cltd
gs
popa
mov
and
lock
sbb
fdivrs
cli
mov
or
data16
stos
lahf
and
fs
xchg
enter
dec
push
adc
iret
adc
stc
out
mov
dec
fcoms
pop
cli
sub
xor
popa
add
and
jmp
jmp
inc
add
jbe
sub
mov
aaa
iret
mov
push
test
fstpl
iret
add
ror
dec
cwtl
popf
xor
out
mov
ftst
inc
in
in
shll
stos
testb
adc
cmp
idivb
inc
bound
sbb
out
adc
pushf
pop
lret
sarb
cmpsl
add
lahf
add
loopne
add
or
push
cmp
add
or
int
testb
add
xchg
add
inc
js
test
enter
mov
data16
into
cmc
out
jno
insl
push
lcall
add
add
lods
xchg
pop
mov
mov
pop
fwait
inc
outsb
loop
popa
ja
add
add
xchg
ljmp
add
xchg
add
and
mov
ret
jecxz
sbb
iret
mov
int3
push
adc
leave
and
inc
clc
add
mov
add
fnstsw
lret
ficompl
fists
push
aad
add
out
xor
shrb
add
ud2
addb
jo
in
lret
pop
cmc
add
add
pop
mov
addr16
imul
xchg
jle
aam
fadds
in
mov
mov
sub
daa
add
out
inc
scas
sub
xor
xorb
push
adc
add
mov
add
xor
pop
xchg
imul
mov
cltd
std
mov
mov
sub
lret
lods
loope
fstpt
inc
aas
mov
inc
test
mov
out
adc
add
add
pop
arpl
fisubl
fsubr
add
add
int
inc
mov
test
jno
jno
mov
add
mov
in
out
push
out
gs
cmpsb
sti
sub
das
inc
or
dec
pusha
add
sbb
push
add
dec
mov
fisubrl
or
fists
mov
push
fistpll
mov
jno
loopne
call
dec
nop
add
push
aas
mov
movsb
mov
push
add
std
adc
test
mov
and
add
add
cmpsl
cmp
data16
push
fwait
int3
add
scas
push
inc
mov
add
jne
ljmp
in
out
sbb
xchg
or
xchg
add
out
add
pop
dec
push
cmp
adc
jl
add
or
push
jecxz
xlat
push
rcrb
sarb
sub
add
repz
ret
fsubr
push
in
out
add
ljmp
les
xchg
int3
sbb
push
cmc
and
clc
popa
scas
in
xor
mov
adc
and
pop
jg
pop
add
mov
and
xor
movsb
insl
scas
fsubl
cmp
add
negb
jns
shll
stos
lds
pop
cmp
adc
xchg
mov
push
mov
movsl
or
out
add
idivl
add
test
dec
sub
mov
xchg
mov
pop
or
xor
jno
jb
loop
mov
add
cmovle
stc
aam
mov
mov
incb
add
add
push
xchg
xor
mov
sbbl
aad
gs
test
mov
dec
stc
xor
mov
lldt
inc
add
jl
test
fldl
inc
add
cmp
dec
and
sbb
pop
mov
add
add
sub
add
add
loopne
sub
add
pusha
mov
aas
add
dec
push
adc
or
pop
lret
mov
dec
and
add
xchg
adc
dec
adcl
je
lahf
or
out
data16
loop
pop
fcomip
add
push
inc
popf
ss
dec
aas
mov
cmp
add
add
add
scas
aaa
cmp
das
int
ja
xlat
pop
add
lock
add
sbb
jns
cmp
cmp
sub
pop
stc
jno,pt
and
jmp
inc
inc
inc
gs
lea
push
imull
imul
test
adc
roll
xchg
je
pop
insb
add
sub
mov
and
jmp
and
inc
cmp
das
add
in
inc
jne
sarb
stc
clc
add
xchg
mov
add
cld
xchg
inc
dec
add
loop
dec
jmp
cmp
lret
shrl
sti
cmp
sub
cmp
pop
mov
push
mov
mov
sbb
mov
out
and
sub
insb
cmpsl
stos
push
add
aaa
add
popf
mov
add
dec
xchg
xchg
add
vaddpd
in
add
cwtl
testb
push
negb
pushf
roll
lret
mov
add
xchg
inc
mov
hlt
sbb
icebp
fsubrs
lahf
fmuls
adc
ja
jp
dec
out
cli
or
cld
add
filds
xor
pop
sbb
rorb
push
lahf
dec
and
cmpsl
jns
jno
mov
add
test
cmp
popl
jmp
mov
mov
popl
daa
push
push
inc
jae
fldt
add
pop
fcmove
popa
pop
jb
add
in
mov
adc
out
or
insb
add
stos
inc
aas
inc
mov
mov
imul
push
xor
nop
cmp
imul
test
or
xor
add
push
mov
sldt
lods
sub
add
or
popa
cli
mov
add
dec
push
sbb
mov
push
pop
or
and
add
jle
cli
xor
mov
pop
stos
xchg
add
loopne
insb
orb
mov
or
adc
pop
sub
add
adcb
clc
add
jne
cmp
leave
lock
sub
aad
xchg
sarb
arpl
xorl
imul
or
movl
add
push
rclb
sub
add
sbb
pusha
and
xchg
add
mov
or
int
lods
cmp
add
push
pushf
push
mov
xor
add
jp
mov
es
and
pop
xorb
aad
add
mov
dec
inc
add
sub
pop
add
mulb
and
jbe
dec
repz
scas
mov
pop
add
add
je
outsl
iret
jmp
jnp
pop
addr16
js
add
shrl
daa
push
add
mov
adc
fcompl
push
flds
jae
outsb
ja
add
mov
shll
cltd
fistps
sbb
sbb
sub
ljmp
adc
mov
jp
jo
shl
jae
repnz
jne
aam
movb
add
add
sub
aad
adc
add
bnd
inc
adc
pop
das
repnz
dec
std
int3
jnp
add
dec
je
outsb
rorb
push
daa
adc
les
jns
pop
jmp
push
pop
outsb
sub
aas
lcall
jbe
dec
mov
and
cmpsl
shr
push
xor
sub
add
add
pop
mov
add
xchg
sbb
mov
push
xchg
add
add
inc
add
cmp
add
add
push
cli
cli
sbb
jmp
jecxz
mov
or
add
iret
stc
xor
dec
cmp
mov
ret
lea
inc
sarb
add
add
add
push
adcb
add
lods
add
popa
and
popa
add
mov
push
adc
dec
pop
dec
pop
add
xchg
sbb
add
mov
faddl
sub
xchg
and
hlt
mov
lahf
dec
jmp
jno
rorl
xor
dec
jo
lock
je
decb
adc
jp
jle
cmpb
bound
sbb
add
stos
imul
add
adc
stos
daa
cld
jecxz
mov
js
jecxz
lock
adc
dec
or
stos
in
or
adc
aaa
aad
add
push
mov
push
hlt
sbb
iret
and
cmp
jle
dec
lds
cmc
cmp
fldl
mov
cwtl
or
sbb
mov
or
pushf
stos
lods
sub
jle
fmuls
fnsave
dec
iret
enter
inc
test
decl
clc
lods
sbb
jne
es
add
sbb
xchg
rcr
fcmovb
pop
adc
inc
lods
sub
pop
push
dec
repnz
add
cmp
inc
push
testl
in
push
cmp
and
mov
rolb
push
psrld
ficoms
fsubl
mov
dec
stos
stos
add
rolb
cmp
and
add
and
adc
fidivl
fistpl
jmp
pop
mov
mov
bound
push
inc
incl
add
and
sub
adc
cmp
jno
add
cmpsb
add
add
sarl
sbbb
cmp
aad
mov
xchg
repnz
xlat
add
mov
aam
add
mov
add
dec
add
pusha
add
add
data16
loop
mov
add
adc
stos
push
iret
iret
adc
fadds
cli
sbb
outsb
lds
adc
enter
push
out
add
mov
shll
add
fs
mov
lret
mov
and
xchg
call
pop
bound
pop
movl
push
add
sub
incl
clc
out
enter
idivb
sti
mov
mov
fidivl
ja
add
jmp
fisubl
jb
movsl
adc
fs
adc
jg
or
or
imul
stos
add
jp
jg
out
add
add
xchg
je
sbb
add
gs
add
js
sub
jecxz
add
or
mov
add
cmp
add
out
jb
popf
mov
imul
inc
cmpsl
clc
add
call
add
mov
sahf
incb
mov
dec
rol
or
scas
ret
fs
push
fdivs
scas
stos
add
mov
mov
jns
jbe
mov
lret
clc
mov
sahf
test
pop
rcll
jne
add
into
leave
sub
lods
mov
lret
mov
dec
loope
rcrb
fimull
ret
and
xchg
xchg
dec
inc
pop
adc
out
mov
insl
cmpsb
data16
mov
push
fldl
fs
lahf
xchg
pop
xor
pop
fcom
out
stc
filds
sbb
xorl
xchg
pushf
cs
sbb
add
mov
dec
inc
lods
push
add
add
int3
push
test
sahf
push
add
jp
cltd
add
mov
xor
inc
repz
cwtl
pop
inc
xor
aas
add
test
es
add
mov
sub
clc
or
push
notb
stc
cmpsl
fiadds
sarl
add
lds
js
es
out
sub
adc
bound
shrb
jmp
add
cwtl
mov
je
cmp
adc
and
lret
mov
aas
add
popw
or
icebp
mov
stc
testl
xchg
dec
test
or
mov
mov
cmp
pop
inc
stc
and
aaa
jbe
adc
xchg
inc
or
xor
pop
and
sub
stos
dec
jp
mov
mov
mov
sub
fisttps
add
add
xchg
cmc
addr16
add
mov
jecxz
aaa
push
iret
add
and
inc
pop
popf
mov
fadds
push
lret
add
addl
xor
fwait
ret
adc
add
lcall
add
ja
stos
cmp
or
sbb
sub
je
lahf
add
ljmp
out
adc
nop
add
scas
adc
xchg
ret
lret
add
pop
xor
sbb
mov
xor
pusha
add
and
or
imul
xchg
add
mov
push
into
fistpll
xchg
daa
in
fsubrs
ss
jge
pop
add
add
sub
cmpsb
int
push
xor
movsb
cltd
cmpsb
fcoml
lcall
xor
sarl
out
iret
sbb
cmp
cmp
pop
fdiv
or
mov
out
popa
cmpsb
insb
fwait
lods
scas
lahf
mov
sbb
lock
dec
push
rorb
add
out
lret
dec
cwtl
nop
adc
add
outsl
xor
inc
add
bound
hlt
add
cmp
ljmp
lock
add
cmp
aaa
in
sti
cmp
sahf
jns
cmp
into
test
push
inc
xchg
mov
add
addb
mov
or
add
add
outsb
outsl
pusha
add
add
dec
push
aas
sbb
or
jl
jge
rol
push
xchg
mov
lods
mov
sbbl
outsb
adc
fistl
cmpsl
sbb
cmc
pushf
add
pop
add
sbb
je
out
dec
and
sub
ss
shll
scas
cpuid
add
add
add
jmp
ds
ret
out
pop
std
inc
stc
inc
fldl
add
mov
lods
cmp
and
fsubp
hlt
in
movsb
je
xchg
push
movaps
xor
jns
add
push
aaa
push
sbb
mov
and
add
push
mov
scas
jns
inc
addr16
or
int3
inc
push
add
push
mov
xchg
xchg
sbb
dec
gs
mov
sbb
adc
sbb
shl
sbb
pop
cmp
and
add
xlat
xchg
adc
test
idivl
adc
inc
ljmp
adc
add
push
dec
adc
or
rcll
adc
scas
push
sbb
add
add
lds
adc
and
cmp
jnp
mov
leave
popa
movsl
pop
dec
mov
mov
popf
or
adcl
nop
adc
and
add
add
dec
decb
jl
jno
lret
and
out
push
and
sbb
sub
xchg
ja
sbb
add
jnp
cmp
nop
js
inc
mov
pop
cmp
push
mov
add
cmpsb
add
stos
mov
into
mov
dec
iret
add
pop
cli
mov
fildl
inc
sbb
int3
xchg
cwtl
add
add
add
inc
add
dec
jo
jnp
jge
not
lret
pop
and
push
sub
sub
stos
ljmp
adc
sub
xor
pop
mov
mov
xchg
adc
mov
stos
out
add
cwtl
int
adc
add
cmp
jo
or
push
ljmp
out
jmp
add
pop
js
inc
add
test
aas
jp
xchg
xchg
insl
incl
sarb
sbbb
popf
lret
jmp
fwait
or
or
add
adc
stc
loop
add
lods
or
adc
or
add
insb
push
mov
cmpl
dec
add
adc
mov
or
pop
sub
or
mov
add
dec
repnz
or
pop
popa
int
xchg
cmp
loope
mov
iret
bound
js
add
jns
shll
and
or
daa
fwait
add
add
imul
cmc
mov
aad
movsb
jno
fisubrs
mov
rolb
xchg
inc
jecxz
icebp
xor
les
inc
mov
cltd
push
add
sub
sub
add
add
leave
inc
mov
add
add
cmp
push
sub
pop
inc
add
sahf
bound
je
mov
inc
insl
adc
mov
repnz
fcomip
and
test
bound
adc
adc
imul
pop
fldl
fstp
inc
dec
cmp
push
xchg
add
mov
cmp
testl
xchg
imul
das
jb
sub
test
fildll
push
and
imul
push
pushf
sbb
mov
push
dec
add
jle
sub
pushf
xchg
sub
lret
fs
dec
fcmovnb
jo
jno
lods
lds
fstl
popf
shr
adc
verw
outsl
enter
test
aaa
std
in
jns
xor
pop
adc
js
add
sbb
addl
lods
xor
mov
mov
mov
pop
or
add
divb
pop
test
inc
mov
add
fldt
shlb
inc
loope
xlat
xchg
js
shrb
testb
push
fbld
outsb
xlat
pop
lods
add
scas
push
sbb
mov
pop
das
add
xor
add
sub
mov
add
jbe
aas
pop
dec
lods
and
push
add
sbb
lcall
clc
cs
roll
insb
enter
cs
sub
inc
add
loope
pusha
insb
pop
pop
fidivs
out
loop
adc
add
adc
xor
sub
pop
add
xchg
into
lcall
sbb
sbb
xchg
stos
adc
clc
mov
pop
or
add
fsubrl
stc
sub
sub
es
outsb
in
leave
nop
clc
ds
pop
lods
push
lret
xchg
cmp
nop
push
cmp
dec
outsb
inc
sbb
js
and
add
xchg
aas
lods
les
sbb
mov
dec
push
mov
mov
mov
dec
ja
sub
clc
out
fs
mov
or
dec
icebp
imul
out
lret
loopne
scas
mov
lea
in
add
out
jns
push
push
pop
pop
test
lods
push
inc
and
mov
jo
sub
outsl
fistpll
sbb
add
daa
aad
mov
cmp
xchg
rorb
rcll
jp
xor
add
mov
in
sbb
or
adc
sub
addb
xchg
push
mov
imul
cmp
and
sub
movb
push
or
push
push
dec
in
popa
cmp
hlt
add
in
addb
in
outsb
mov
pop
sbb
fs
jne
jl
data16
and
popa
mov
add
xor
movsl
mov
and
push
cmc
sub
subb
add
sbb
adc
and
cmp
xchg
add
pop
xchg
xor
rcr
ja
sub
add
outsb
xor
fs
add
adc
std
ds
add
xchg
adc
test
add
push
or
mov
iret
add
jne
orb
sub
add
xchg
add
jo
aad
adc
fs
push
incl
outsb
add
add
push
xchg
cmp
dec
test
jl
push
ds
cmp
or
add
cmp
outsb
pop
fdivs
stc
notb
fsubs
xor
add
xchg
jmp
jmp
push
or
insl
add
mov
enter
and
ja
aaa
scas
xchg
aas
pop
xchg
in
nop
es
push
test
pop
fidivrl
cld
sbb
add
jle
push
push
push
add
or
xchg
jg
dec
ret
movsl
fsubrp
inc
sarl
xchg
loope
cmp
imul
add
fstp
sub
nop
mov
lret
arpl
testb
pop
stos
arpl
ret
mov
sub
lods
into
nop
cmpsl
add
mov
lea
inc
add
addl
aad
xchg
sub
popa
mov
push
fldl
push
cmpsb
push
or
adc
add
mov
sbb
sbb
xchg
mov
xchg
test
push
inc
or
js
sub
idivl
int3
adc
jb
and
lret
rcrl
sbb
add
pop
jbe
ret
mov
mov
pop
mov
xor
add
cs
clc
sbb
jmp
and
or
add
std
insb
lret
pop
ret
inc
mov
enter
mov
les
cwtl
xchg
xchg
ret
and
test
decl
std
jle
test
mov
add
pop
xor
xchg
mov
or
pop
mov
shlb
add
int
mov
or
das
nop
sub
repz
mov
inc
sbb
or
sub
add
pop
mov
jbe
cmpsl
insb
mov
cld
dec
mov
mov
dec
fadd
adc
add
outsl
sub
push
xor
sbb
dec
add
cmp
push
sahf
mov
loope
std
push
mov
add
and
add
imul
mov
pop
inc
pop
mov
decb
addb
or
cli
cmp
js
add
push
and
lret
and
ss
jge
clc
out
push
jl
add
lea
sbb
mov
dec
sbb
fwait
or
movsb
push
add
xor
vmaxps
inc
cmp
and
pop
jno
or
cmpsl
pop
jp
cmpsl
push
push
bound
pop
arpl
add
add
pop
push
roll
xor
lret
add
shr
jl
mov
lea
fnstsw
scas
fildl
shrl
push
add
mov
adc
add
popf
xchg
xor
jg
mov
push
pop
mov
inc
loop
dec
pop
pop
jp
adc
loop
ss
push
scas
cmp
mov
out
dec
testl
add
pusha
leave
push
add
push
or
cli
roll
cmc
mov
les
lahf
push
sbb
xchg
mov
orb
add
mov
add
stos
lods
and
add
js
and
push
mov
pop
test
insb
and
xchg
divb
xacquire
loope
add
lea
rorl
int3
iret
and
adc
enter
xchg
xchg
push
dec
add
movl
sbb
movl
add
add
jle
inc
xchg
cltd
pop
cmp
mov
movsb
push
add
add
maxps
add
sub
cltd
inc
das
jg
adc
push
imull
fwait
stos
mulb
cmp
xchg
add
dec
mov
add
mov
insb
inc
push
add
dec
add
lcall
jnp
out
pushf
pop
clc
add
add
loop
add
push
push
mov
inc
outsb
cld
sbb
mov
jnp
xchg
iret
pop
sbb
inc
out
int
pusha
mov
xor
mov
xor
sti
rcrb
sub
push
into
sub
ds
mov
jge
adc
add
xchg
daa
cmpsb
addl
xor
dec
aaa
push
pop
pushl
push
sub
leave
mov
and
and
cmp
mov
adc
ret
aam
popf
test
popa
xchg
xchg
movb
cmp
pop
insl
int3
sbb
cmp
outsl
lret
popf
jl
inc
add
add
clc
jmp
outsb
xor
add
add
pop
pop
add
mov
out
imulb
push
mov
dec
add
mov
jl
add
movsb
popa
bound
cmpsb
xor
add
fiaddl
in
jb
sbb
lret
push
sbb
push
addb
mov
xor
js
nop
cmpsb
adc
les
add
jno,pn
in
popf
lahf
sub
jae
xor
push
push
xchg
sub
adc
add
jmp
jp
nop
mov
pop
push
lds
orb
inc
xorl
mov
mov
add
ljmp
pop
mov
xchg
hlt
push
pop
mov
and
pop
dec
fnsave
xchg
inc
pusha
test
ja
call
and
mov
test
adcb
cmp
and
hlt
and
sbbl
add
add
scas
jno
jns
fs
cmp
dec
fiaddl
inc
add
xchg
pop
dec
mov
and
data16
int
add
addb
addb
lods
dec
jecxz
xor
cmp
xchg
mov
stos
out
rorb
add
sub
inc
and
in
incl
les
outsb
jb
in
jl
cmp
push
add
js
cld
nop
adc
cmp
jle
add
add
xor
cld
fdivrl
lods
xchg
mov
add
add
dec
add
jb
add
pushf
or
add
inc
cmp
je
dec
into
cmp
shr
jmp
add
add
mov
add
fimull
add
int3
leave
add
fstpl
mov
add
notl
les
or
mov
test
cwtl
push
in
add
call
aas
ret
add
cmp
lahf
adc
mov
adc
aaa
mov
mov
adc
add
decl
out
cmpsb
mov
add
and
test
add
add
adc
pop
inc
add
outsl
in
enter
and
cmp
mov
add
rol
sbb
fistl
stos
mov
loope
fstpl
add
cmpsb
mov
ss
push
mov
bound
add
icebp
mov
add
call
jbe
or
mov
stos
outsl
mov
jns
inc
pushf
and
mov
scas
push
mov
lods
nop
inc
mov
cmp
scas
push
and
xor
mov
sbb
lret
cmpb
mov
xor
out
pop
ret
push
add
add
adc
cmpsl
xchg
mov
sbb
xchg
add
add
add
lods
daa
les
add
push
dec
add
cwtl
and
enter
stc
sbb
xchg
add
mov
mov
xchg
jl
in
adc
in
add
shll
adc
test
fldenv
push
iret
jg
add
xchg
stos
subl
cmp
push
bound
call
jmp
mov
roll
test
je
inc
nop
lea
mov
ficompl
test
dec
push
add
lret
add
scas
js
add
mov
bound
mov
lcall
mov
dec
add
into
aam
movsl
inc
das
add
mov
les
adc
add
inc
loop
or
mov
adcl
add
sti
sub
sub
inc
add
add
dec
jb
sbb
int3
loope
scas
lahf
loop
adc
add
and
push
sub
and
dec
sub
sahf
mov
jne
and
sub
sub
insb
int3
mov
inc
sbb
and
fdivl
adc
mov
cmp
xchg
xor
fs
or
cmp
jp
cmp
push
jns
push
add
xchg
sub
popf
movntq
dec
or
lret
or
add
add
testb
lods
xlat
shrl
lret
sti
pushl
cmp
loopne
hlt
inc
inc
jecxz
xor
jp
ficomps
clc
inc
dec
push
ja
push
sbb
test
push
jnp
add
xchg
movsl
mov
push
cmpsb
pop
jbe
pop
sbb
shlb
xchg
testl
mov
add
xchg
pop
mov
repnz
sub
movsb
cmpsb
fsubrs
mov
inc
adcl
fwait
xor
fs
lea
hlt
out
cmp
arpl
ret
bound
lods
popf
movsb
xchg
aaa
idiv
xchg
add
mov
mov
clc
or
pop
push
xchg
sbb
movsb
xor
ret
inc
cmpsb
subb
out
add
mov
xor
jnp
adc
leave
fwait
xchg
jnp
xor
adc
pop
hlt
mov
scas
fdivrl
inc
idivb
lahf
add
filds
add
cs
shll
rorb
xchg
add
add
pop
or
clc
negl
fldl
testb
imull
xor
add
aam
mov
mov
push
aas
jl
sbb
jno
xchg
scas
scas
pop
ret
dec
cmp
add
fwait
mov
in
dec
lahf
pop
enter
rcll
and
mov
add
add
loopne
jne
into
lret
arpl
dec
mov
nop
pop
mov
mov
iret
add
movsb
or
lret
es
push
test
inc
mov
add
mov
add
jge
fnsave
ss
fisttpl
or
dec
add
rcl
add
sbb
and
push
mov
jg
mov
pop
mov
cmp
scas
out
lcall
bndstx
fiadds
inc
ret
ljmp
add
pop
xchg
pop
inc
and
sub
and
push
adc
insb
mov
add
fldl
adc
dec
sbb
cmp
out
pop
fsubrs
dec
fistpl
sahf
inc
jl
push
ljmp
pop
cmp
scas
ljmp
iret
out
nop
push
and
es
out
or
inc
adc
add
enterw
ficoml
add
add
ficoms
add
mov
fwait
jl
add
in
dec
aaa
inc
shr
add
cmp
mov
repnz
sahf
lock
add
jge
add
js
call
jnp
aam
jbe
add
add
pop
xchg
cmp
nop
repz
scas
cmp
cmc
shlb
and
les
and
jnp
mov
dec
in
push
aam
add
subb
xor
push
dec
nop
xor
dec
push
push
add
mov
clc
fistpll
mov
jp
pop
mov
jae
add
add
cmpb
dec
dec
mov
mov
inc
test
cs
add
in
inc
int
add
fcomps
cmp
outsb
mov
incl
or
aam
sub
push
dec
sbb
lahf
and
dec
adc
xchg
add
mov
iret
push
in
pushl
sub
mov
add
jge
shll
aaa
sub
pop
hlt
push
add
orb
pop
xchg
or
mov
add
push
mov
dec
inc
into
clc
daa
and
lea
popa
and
push
add
xlat
adc
add
mov
add
push
add
dec
add
pop
mov
sub
jl
add
fs
add
sub
sbb
pop
jbe
scas
imul
jbe
dec
pusha
adc
cwtl
adc
ret
pushf
push
pop
lcall
into
jl
mov
cmc
xor
adc
test
imul
or
pop
rcrl
push
mov
inc
pop
loopne
in
add
outsl
add
jle
fs
ds
cmp
aad
dec
add
or
add
mov
push
call
insl
cs
call
in
sub
or
adc
pop
and
inc
popf
adc
push
push
clc
rorb
and
add
mov
xchg
pop
imul
jle
subb
push
cs
add
xchg
add
jle
repz
add
stos
adc
or
mov
or
lcall
mov
xchg
mov
aam
aas
jnp
insl
enter
add
add
push
add
int
jnp
sbb
addr16
loop
cmp
xor
push
repz
jmp
add
stos
fildll
and
lods
xchg
stos
sub
shrb
push
pop
sahf
lahf
mov
jb
add
cmpsb
mov
loopne
xchg
or
mov
inc
mov
pusha
add
add
test
jp
scas
add
xchg
ret
scas
adc
adc
cld
addr16
and
in
stos
inc
jmp
loope
jns
mov
mov
add
dec
js
mov
ja
xchg
popa
jp
pop
xor
add
aas
push
and
out
aad
in
js
gs
jp
jle
cmpb
add
add
dec
iret
lahf
cmp
aam
mov
add
and
roll
jmp
iret
and
add
sub
sub
dec
push
xor
mov
popf
lods
jne
int3
sbb
out
push
add
jle
adcl
mov
add
test
cs
and
xchg
cmp
cmp
cmp
pop
xchg
test
into
add
dec
rcrl
push
inc
stos
aas
jne
jae
cmpsb
repnz
cmc
inc
xchg
movsb
jae
popf
mov
pusha
leave
stos
aaa
shrl
xchg
loope
fnstcw
add
bound
dec
test
cmp
outsb
andb
sub
dec
mov
add
cmp
fs
add
pop
sub
jmp
rclb
push
fadds
stc
adc
into
mov
add
mov
mov
push
movsb
inc
sbbb
cmp
cwtl
jo
jns
mov
arpl
addb
sbb
fwait
es
add
mov
push
cmp
aas
sbb
addb
dec
pop
stos
xchg
lock
cmp
pop
pop
stc
add
xor
in
xchg
add
inc
sub
jnp
mov
add
lods
daa
mov
xchg
aad
add
add
popf
inc
and
sbb
call
js
pop
iret
fadds
dec
aad
addr16
xchg
push
out
add
subb
jno
inc
mov
sbb
add
cwtl
lret
pushf
push
push
lea
add
in
and
mov
fcomip
add
cmp
loopne
std
ss
leave
pop
dec
add
pushf
mov
adc
add
add
jbe
shlb
cmp
add
dec
pop
pop
mov
or
sti
xchg
add
pusha
mov
fsin
lods
icebp
jl
sub
jg
mov
pop
adc
mov
popa
xchg
mov
add
lcall
sbb
mov
ds
ret
push
jmp
mov
lahf
add
dec
xchg
mov
jns
lods
cmp
xlat
out
pop
pusha
addb
sbb
mov
push
icebp
mov
incb
add
adc
das
push
stos
sbb
dec
adc
xor
adcl
add
add
imul
ljmp
aas
cli
ss
test
mov
sub
xor
xorl
jae
fs
enter
out
adc
out
adc
inc
push
dec
out
aam
inc
jb
or
icebp
scas
add
mov
mov
sbb
and
mov
add
mov
add
adc
add
mov
xlat
add
bound
lret
xor
mov
jle
push
sbb
pop
mov
xor
cmc
cwtl
add
xor
xor
pop
and
xchg
xchg
cltd
pop
add
sbb
add
sbb
push
addl
adc
call
add
out
mov
pop
cltd
in
mov
adc
push
add
cmp
add
ret
pop
aaa
adc
pop
jb
mov
and
or
sti
pusha
ret
and
pop
dec
leave
ss
enter
ljmp
or
sbb
inc
add
int3
cld
sbbb
mov
cs
mov
mov
loop
add
sub
fsub
xor
into
push
cld
fnstsw
cli
cmp
lcall
xor
add
sbb
and
dec
add
adc
add
hlt
mov
jg
pop
add
push
push
cmp
fucomp
mov
xor
incl
je
push
pusha
lahf
jmp
xchg
add
fimuls
jge
in
adc
inc
arpl
repnz
js
add
mov
mov
cmpsl
xor
aas
add
adc
mov
mov
jp
push
sti
js
scas
pop
dec
or
pop
sbb
xor
or
xchg
add
lds
xchg
bound
aas
orl
fwait
mov
bswap
sub
sbb
into
jb
cmp
movsb
pop
sub
jbe
testb
and
xor
notb
scas
or
cli
pop
call
pop
adc
shl
loop
cli
xchg
inc
push
repnz
shrl
iret
leave
out
test
pop
add
movsb
push
inc
stos
mov
testl
hlt
dec
test
jl
jnp
and
add
iret
fs
das
lds
sbb
and
add
arpl
add
stos
xchg
stos
popa
mov
hlt
cli
clc
stos
pop
call
sub
mov
mulb
add
insb
cmp
and
les
testl
sub
or
in
xor
bndldx
sarb
cmp
daa
ss
aaa
pop
stos
xor
lret
xlat
pop
lods
mov
iret
sahf
cmc
popf
jo
cltd
andl
add
add
pop
add
dec
pusha
mov
adc
test
jns
fimuls
pop
aam
mov
test
push
faddl
mov
hlt
add
add
sub
repz
push
sub
add
add
jbe
adc
xchg
fwait
adc
fisubl
ret
and
lea
fs
sbb
mov
ret
ss
xor
mov
lods
divb
cmc
add
mov
sbb
roll
mov
out
sbb
adc
sub
mov
xchg
std
push
sub
adc
pop
mov
cmp
xchg
add
cmp
mov
and
cwtl
or
scas
mov
loope
add
decl
jle
jmp
shr
or
add
add
mov
adc
in
subb
inc
mov
mov
bound
hlt
aaa
xor
pusha
xor
arpl
cli
insl
addr16
mov
loopne
ss
add
push
outsl
cli
add
cmpsb
sbb
iret
or
sti
scas
imul
shr
pop
rcrl
popf
mov
add
jl
fwait
dec
test
jnp
cltd
sub
jle
popf
test
inc
sub
xor
jb
push
xor
adc
cmp
mov
jo
add
outsl
das
jecxz
add
inc
push
inc
por
sub
and
push
add
mov
inc
xchg
js
out
mov
sti
add
sub
push
fisttpll
sbb
add
or
out
push
mov
dec
add
test
add
pop
dec
mov
lret
push
pushf
in
xor
jecxz
mov
sbb
xlat
add
or
arpl
add
cmp
shll
add
dec
mov
repnz
xor
sub
add
rorb
push
roll
xor
mov
jbe
fadds
and
nop
stos
fnstenv
loopne
das
xchg
xchg
cld
add
inc
shl
add
out
push
shll
popf
rcl
xchg
pop
add
lock
lahf
pop
sti
jns
add
lahf
gs
lds
xor
add
or
xor
jno
mov
xchg
add
pop
adc
fnstenv
add
fcmovnb
mov
xchg
xor
or
xchg
xor
fwait
ds
xor
fnstcw
aaa
push
add
jnp
addb
in
add
xor
sbb
shrl
add
sbb
adcb
cwtl
fisubl
faddl
pop
pop
outsb
sbb
push
push
jle
test
xchg
pop
out
pop
cmp
pop
insb
push
jae
stos
sbb
pushf
add
xorl
dec
xor
insb
cld
mov
or
adc
in
sub
push
push
fwait
vsubsd
cmp
add
xor
add
aas
add
in
ja
inc
and
movsb
push
add
mov
call
mov
push
hlt
xchg
into
int3
loopne
inc
es
int
mov
jns
adc
outsb
add
popw
mov
lock
cli
dec
xor
fimuls
nop
add
add
push
jl
adc
xlat
add
lcall
add
xchg
sub
js
lock
push
cmpsb
into
int
and
popf
iret
add
push
jmp
jl
imul
lcall
push
dec
sub
cmp
movsb
loope
add
add
imul
mov
jbe
or
addl
add
mov
add
add
push
and
jne
and
out
pop
jno
jno
add
insl
cld
jmp
inc
push
in
daa
inc
fisttps
or
mov
andl
movsl
lods
mov
jl
loop
sbbl
push
lods
sub
mov
fldcw
inc
fwait
xchg
push
mov
add
adc
add
push
stos
dec
sarb
pop
push
lret
insb
movsb
add
lret
call
xor
lock
sub
pop
mov
sub
push
dec
add
inc
mov
xchg
add
pop
add
andb
popa
sti
insl
push
pushl
mov
adc
add
add
adc
xor
aaa
adc
mov
mov
sub
mov
mov
lds
sub
gs
mov
or
insl
test
jns
add
subb
push
pop
mov
lahf
pop
fwait
mov
sbb
sub
xchg
cmp
add
mov
ss
scas
pop
add
dec
mov
mov
testl
clc
scas
push
pop
in
call
pop
pop
movsl
std
xor
add
push
dec
ja
std
pop
lds
xchg
add
push
add
stc
pop
sarl
movsb
dec
lret
and
pop
inc
fxch
dec
sub
pop
add
sbb
fiadds
ficompl
shll
fs
cmp
add
cmp
in
pop
in
negl
mov
add
mov
inc
roll
and
bound
add
sub
cmp
mov
mov
iret
sbb
add
test
pushf
inc
sub
and
popf
push
add
je
fadds
mov
mov
sbbl
js
lcall
add
movsb
out
hlt
pop
aad
or
xchg
jnp
add
ja
jns
adc
adcl
stc
push
ss
cmpsb
stos
and
mov
sarb
add
add
and
and
test
mov
xor
scas
mov
fs
cmp
cmpsl
dec
jo
add
aam
add
adc
call
cltd
sbb
inc
imul
add
movsl
push
sub
pop
sub
cli
shll
inc
and
clc
jo
fs
or
and
add
lret
or
or
add
pushl
cmp
cmp
adc
mov
and
stc
lds
in
pop
ja
pushf
push
sahf
syscall
xchg
xor
mov
mov
add
pop
call
jle
jbe
adc
div
add
add
pusha
stc
add
jmp
stc
movsl
inc
pop
popf
jne
ja,pn
rcl
cld
push
dec
pop
pop
add
add
lea
xchg
stos
icebp
mov
mov
add
into
jb
pusha
clc
inc
pop
mov
sbb
and
dec
add
cmp
scas
mov
hlt
cmp
mov
in
mov
ljmp
xchg
jmp
lret
lea
add
insl
and
jne
push
adc
and
xchg
test
mov
inc
add
dec
adc
sub
outsl
mov
pop
add
add
mov
inc
jmp
fs
mov
inc
sub
sbb
sbb
sub
dec
sbb
adc
add
aam
outsl
lock
sbb
jmp
pop
adcl
cmp
fucomi
ret
inc
cmpsl
testl
imul
xchg
sbb
mov
jns
cld
int3
pop
and
stos
mov
es
iret
test
les
gs
cmc
xor
mov
mov
jae
add
adc
rcr
call
cmp
xchg
lea
jb
in
jns
or
push
adc
cmp
loop
xor
ss
hlt
mov
add
mov
pop
push
sbb
add
sub
add
add
test
test
jbe
cmp
add
push
fdivl
mov
mov
in
ficoms
and
xchg
or
in
adc
sub
imul
movsb
in
movsl
and
mov
imul
xor
and
jae
mov
test
jle
xchg
arpl
rolb
sahf
out
jo
push
push
mov
add
mov
add
mov
inc
mov
ljmp
adc
hlt
mov
add
fldl
mov
cli
adc
mov
sti
incl
and
add
add
ja,pn
pop
loopne
shrb
or
xchg
pop
pop
data16
loope
fdivp
dec
add
push
and
sub
add
aad
add
push
mov
scas
adc
push
fnstenv
xor
push
pop
xlat
lahf
int3
sbb
sbb
sti
cmpsb
inc
xchg
popa
int3
lret
push
add
int
sti
add
add
add
push
test
sbb
jae
add
add
addl
or
fcompl
add
mov
mov
inc
sub
sarb
outsl
aam
mov
sbb
cmp
pop
mov
mov
jbe
dec
pop
add
addb
pushf
sub
sbb
push
lods
push
push
js
fisttps
adc
inc
cmp
cmpsb
xor
pop
jp
mov
fldenv
in
or
jmp
add
cmpsb
jnp
out
add
and
or
ret
test
inc
cmpsl
add
mov
cmpsb
ljmp
nop
mov
sbb
sbb
push
sbb
call
sub
add
aas
inc
jbe
mov
sbbl
pop
and
add
add
add
push
or
out
jbe
push
pop
cmp
dec
add
add
jb
cmp
lret
aam
mov
jmp
lods
mov
jp
stos
and
add
jl
add
pop
pop
mov
adc
pop
add
loop
adc
add
xor
add
sub
add
rcrb
push
add
cs
pop
fisubs
cmc
std
ss
dec
xchg
sub
into
inc
cmp
rolb
sub
mov
xor
into
pop
add
dec
mov
dec
jbe
movsb
flds
cmpsl
push
int3
xchg
push
fs
add
add
mov
in
aas
mov
dec
add
push
push
xor
or
mov
xchg
ja
pop
ret
ja
insb
jno
and
sbb
add
adc
in
shll
jb
add
fiadds
sti
xor
test
jle
mov
fmull
add
rorl
and
inc
xchg
mov
inc
dec
add
mov
mov
cli
mov
sbb
fwait
pop
add
jbe
push
repz
imul
sbb
jmp
test
lahf
dec
sbb
fs
cld
cmp
mov
jne
les
popa
add
jae
mov
add
pop
out
fsubrs
push
jbe
jne
sbb
add
outsl
loope
sub
xchg
push
xor
inc
in
imul
lcall
gs
dec
test
rolb
xorl
add
data16
add
push
inc
xor
out
es
fcompl
adc
lock
bound
xchg
mov
xchg
sbb
out
cmc
xor
add
mov
jp
sti
in
call
xor
test
mov
loopne
pop
xor
xor
dec
cmp
pop
mov
pop
jp
lock
lahf
add
mov
popl
lods
addr16
mov
add
leave
cmp
scas
sub
call
scas
xchg
add
cwtl
rclb
int
sbb
pop
mov
nop
or
ret
leave
mov
testb
shr
adc
push
add
enter
push
mov
je
xor
fcompl
jle
aas
shrb
add
ljmp
jecxz
xlat
add
loope
cmp
push
dec
and
add
hlt
push
ret
testl
push
std
add
leave
add
cli
push
add
pop
pusha
jno
pop
hlt
outsl
out
pop
inc
xorl
gs
add
add
add
outsl
stos
jge
sbb
daa
sbb
ljmp
sbb
add
adc
les
add
push
add
sub
mov
sub
xor
add
push
add
mov
leave
stc
dec
dec
adc
cmp
cmp
test
js
ret
pop
lock
push
xchg
add
add
imul
xor
mov
add
dec
xchg
fsubl
sbbl
add
enter
cmpsl
int3
push
add
and
and
mulb
lahf
in
pop
inc
arpl
inc
sti
andl
mov
les
pusha
xlat
push
add
sbb
sbb
mov
add
push
adc
in
imul
jmp
sbb
xlat
in
mov
pusha
xchg
jecxz
or
xchg
out
push
sub
in
jae
arpl
jge
mov
call
fiaddl
subl
fcoml
mov
sbb
mov
jns
movsb
push
rorl
pop
fcomp
or
fidivrs
decb
scas
jbe
mov
cld
add
aas
add
add
push
jmp
pop
mov
sbb
push
add
ljmp
cmp
adc
stc
fbld
jp
dec
sahf
adc
addl
icebp
inc
add
adc
pushf
stos
lea
inc
insb
xchg
cmp
xchg
rorb
or
mov
xor
push
imul
adc
int3
call
fiaddl
pop
aas
aaa
mov
movsl
or
inc
lea
in
add
inc
and
out
xor
add
jo
add
sbb
rcrl
cld
sahf
es
mov
add
lods
pop
cwtl
into
add
outsl
add
jbe
mov
mov
cmc
cmpsb
adc
xchg
adc
call
push
int
in
inc
pop
add
jp
add
lret
bnd
xor
pop
into
ja
cmpsb
xlat
add
cmpsl
mov
icebp
movsb
pop
or
and
xchg
xchg
daa
cmpb
ja
push
mov
jle
dec
dec
dec
iret
xor
adc
imul
or
add
xchg
lcall
push
add
and
lcall
push
dec
shll
xchg
xchg
and
or
movsl
add
stos
dec
shl
mov
lret
cmp
mov
adc
xchg
jno,pt
dec
pop
sbb
pusha
fnstsw
notb
setbe
mov
hlt
sbb
add
movsb
test
inc
jle
sbb
add
inc
pop
jae
orb
jecxz
jo
outsl
aas
das
shll
add
filds
aas
mov
and
icebp
fisttps
cmp
add
add
cmp
sub
jnp
js
or
push
inc
inc
incl
or
xor
adc
sub
pushf
jmp
xchg
popa
dec
faddl
js
jno
stos
stc
add
sub
add
add
sub
js
pop
pop
mov
ljmp
pop
add
adc
push
scas
or
xchg
in
sbb
xor
test
add
outsl
imul
inc
add
cmp
jge
push
add
les
lret
repz
in
insl
data16
push
add
shlb
fs
sbb
int
jns
xchg
sub
xchg
std
lds
sub
popf
xchg
jecxz
mov
int
mov
and
add
popl
inc
es
cmp
lahf
add
dec
sub
add
or
xchg
cmp
xor
insl
and
mov
push
push
add
add
dec
jns
shrl
push
xor
ljmp
das
add
push
jns
adc
mov
or
mov
lds
inc
add
mov
lahf
push
add
sub
xor
out
leave
subb
xchg
cmc
cmc
shrl
ds
add
jmp
jnp
daa
inc
inc
repnz
adc
add
inc
add
add
add
cmp
dec
xor
jmp
lret
idivb
filds
push
ja
mov
mov
sub
sbb
flds
cmpxchg
mov
add
sbb
add
mov
repnz
sub
mov
sahf
pop
jb
sub
add
jmp
sub
add
add
mov
push
scas
js
cld
or
mov
sahf
mov
push
imul
xor
sub
ljmp
adc
das
mov
mov
sti
enter
lahf
add
push
sbb
pushf
aad
pop
je
dec
lds
cmpsb
enter
mov
insl
cmpsl
cmp
cld
mov
jge
dec
rcl
mov
lret
mov
cmp
sub
insb
jns
jnp
scas
movsl
xchg
push
or
jb
xchg
fdivrs
je
or
pusha
mov
inc
mov
adc
add
fcoml
int
lcall
out
in
pop
clc
out
test
inc
xchg
pop
lea
out
mov
test
adc
cmp
or
popa
xchg
add
scas
add
add
cvtps2pi
add
jl
pop
mov
push
scas
adc
int3
cmp
xlat
jno
add
leave
xor
nop
and
pop
int
ret
adc
xor
jmp
cld
dec
add
lea
repz
pop
xchg
xor
push
ret
mov
cmp
ud2
push
mov
push
aas
sbb
jnp
movsb
les
mov
stc
jb
inc
or
movsb
and
cmpsb
aaa
test
xchg
push
add
add
cmpl
mov
adc
add
or
incl
stos
jb
jne
fsubl
mov
out
or
cli
pop
jne
js
dec
mov
or
outsl
add
in
dec
int
lods
js
ror
mov
mov
or
xchg
aad
jp
add
or
add
add
mov
out
lret
pusha
cmpsb
icebp
xor
add
test
scas
pop
arpl
stc
lahf
fwait
add
xchg
shl
insl
and
jmp
sahf
and
in
mov
rolb
xor
mov
fs
sarb
sub
mov
cmp
inc
popa
mov
cli
scas
dec
add
add
es
out
sub
and
iret
jne
nop
pop
xchg
add
outsl
jbe
add
int
jmp
adc
ud2
ja
sbb
mov
test
sub
lods
xchg
add
adc
push
xchg
rorb
stc
lock
sub
imul
xchg
cmp
mov
mov
jnp
shrb
test
and
sbb
push
fsubp
loopne
add
inc
jge
or
mov
pop
cmp
aad
add
mov
add
inc
jge
mov
add
lret
nopl
dec
cwtl
mov
add
hlt
stos
mov
sti
loop
out
add
xor
and
xchg
enter
add
test
jmp
pop
test
xchg
add
pop
mov
aam
popl
cmp
add
sub
sub
call
pushf
repz
ror
shl
mov
mov
ds
dec
mov
push
fdivp
sbb
in
add
push
dec
inc
add
gs
mov
pop
push
add
shll
xchg
add
lea
fisubs
push
inc
push
mov
bound
or
in
int3
dec
jmp
movsl
jp
mov
mov
pop
or
sub
add
xchg
arpl
mov
fildl
mov
add
pop
dec
mov
add
mov
test
or
in
dec
lock
xchg
inc
ror
dec
movups
lret
pop
add
jo
and
add
in
popa
lods
ljmp
dec
mov
ljmp
daa
daa
data16
jp
pop
mov
add
aam
sbb
add
js
mov
mov
add
mov
sub
and
inc
stc
and
and
sbb
jmp
dec
push
or
mov
enter
cmp
hlt
js
pop
popf
mov
or
lret
cmp
dec
mov
jle
rclb
cmpsb
add
js
adc
mov
outsb
sub
xchg
sub
or
in
out
sbb
add
cmpsb
lahf
pop
cli
add
push
daa
push
sbb
imul
add
mov
add
sub
xchg
inc
imul
add
adc
adc
add
imul
insl
fnstenv
add
jmp
stos
jg
xchg
pop
jo
lret
outsb
sub
mov
add
lcall
test
mov
inc
out
push
arpl
or
lock
cmc
loope
rorb
fldcw
mov
rcl
pop
sahf
xor
add
loop
stc
or
jg
mov
fnstcw
bound
pop
sub
add
mov
loope
std
add
pushl
push
pushf
push
andb
pop
fsts
adc
xchg
cmc
and
fsubs
mov
roll
sbb
mov
cmp
cli
test
pushf
jbe
add
ret
add
jecxz
addr16
fimuls
mov
dec
movsl
pushf
fstl
aad
subl
xor
int3
sbb
cmp
pop
sub
repnz
jnp
test
and
or
lea
clc
stc
sub
push
add
add
add
lcall
jns
and
xchg
mov
out
dec
push
fistpll
mov
or
loope
cmpl
jmp
mov
xlat
test
lcall
add
repnz
das
add
dec
popf
rclb
std
nop
pusha
clc
into
cmp
jns
add
popf
cmp
verr
lcall
adc
cmpsl
mov
jg
and
aam
adc
adc
add
sbb
xor
sub
fxch
pop
ret
push
add
adc
in
and
cmp
mov
fwait
cltd
add
iret
dec
sbb
sub
out
int
jg
sbb
or
lods
pop
or
mov
pop
and
ret
mov
push
mov
in
sub
sbb
xchg
daa
je
lods
test
call
pop
and
faddl
nop
xchg
mov
movsl
icebp
push
pop
or
add
fcomps
stos
mov
or
xor
int3
leave
sbb
push
shl
dec
adc
add
mov
jg
sub
cmc
roll
dec
je
sbb
add
add
jp
cmpsb
out
imul
push
xor
into
dec
or
add
imul
mov
ljmp
addb
sub
leave
outsl
push
lcall
sbbl
or
cmp
jo
ljmpw
add
icebp
ljmp
imul
dec
call
es
cwtl
dec
inc
pusha
jle
jmp
hlt
mov
mov
scas
test
and
fs
ds
fsubrl
inc
mov
lret
enter
dec
mov
pop
mov
divl
enter
add
mov
aas
mov
out
adc
lea
add
add
jnp
lldt
xchg
scas
xchg
add
and
sub
sti
test
outsl
ds
cmp
hlt
add
lcall
icebp
xor
lock
mov
pop
mov
cli
add
xchg
add
mov
jp
xor
xlat
repz
mov
add
adc
icebp
add
add
aam
add
je
sbb
mov
add
shlb
cli
mov
xlat
cmpb
gs
cltd
lods
scas
mov
adc
mov
in
add
add
push
push
add
and
add
fmulp
xor
sub
addl
fbstp
ret
mov
sbb
mov
outsl
ss
push
and
out
add
popa
inc
push
jmp
xor
cli
add
add
lods
inc
fnstenv
cmp
in
mov
mov
pop
pop
sub
adc
add
pusha
cli
icebp
lods
lods
add
dec
je
out
cld
gs
sbb
cmp
scas
scas
cmp
iret
mov
inc
adc
xor
adc
mov
sarb
js
xor
inc
sarb
add
add
aad
leave
insl
xchg
lods
in
push
push
bound
scas
dec
mov
hlt
xor
insl
push
adc
add
add
sbb
add
add
pushf
out
repz
add
push
pop
dec
add
sub
and
dec
ds
inc
push
add
dec
add
or
mov
xchg
bound
cs
movsl
loop
xor
leave
adc
fcmove
xor
and
cmp
ja
dec
dec
xchg
mov
imul
push
lret
mov
lahf
ljmp
out
add
mov
jle
mov
stos
xchg
inc
ret
or
add
pusha
add
add
mov
add
cmc
inc
movsl
add
fldl
lret
inc
add
mov
add
mov
lock
jne
mov
push
mov
hlt
xchg
out
mov
fs
adcl
xchg
out
mov
pop
std
ja
add
adc
jl
jnp
mov
cltd
jle
sbb
xchg
leave
les
sarb
push
repz
add
data16
mov
movb
inc
sub
insl
adc
push
or
sbb
jne
cmp
add
clc
push
xorl
dec
jo
mov
jb,pt
sbb
and
iret
shr
and
add
jo
mov
fcmovbe
inc
out
pop
lock
mov
or
dec
add
mov
outsl
shrb
movsb
lcall
and
xor
sbb
stc
xchg
sub
jmp
pop
dec
ret
lods
pusha
jle
dec
mov
xor
dec
fmull
int
fsubrp
add
loope
sub
cmp
cmpsl
jae
lahf
repz
movb
out
push
push
push
pop
add
sub
movl
xor
add
push
cwtl
xor
inc
inc
and
inc
std
outsl
add
rcll
add
stos
jne
mov
stos
pop
scas
inc
sub
jae
out
xlat
pop
popf
mov
test
scas
inc
cmp
popa
add
add
jo
pop
fwait
dec
push
add
dec
movsb
sbb
inc
stos
inc
dec
insb
arpl
cs
fs
add
fs
cmp
es
filds
out
test
ret
jb
adc
xor
jne
add
into
leave
fnstenv
cmpsl
out
addb
or
add
inc
and
sbb
mov
cmp
mov
adc
lret
and
cli
push
mov
or
insl
push
add
inc
xor
add
arpl
xchg
push
inc
push
adc
js
jge
sbb
mov
or
lret
cmpsb
jae
out
mov
ss
add
cmp
iret
push
xor
add
mov
in
pop
mov
add
ja
loop
int3
in
stos
js
add
movsl
mov
xchg
sti
ds
imul
xchg
ds
repnz
addr16
enter
add
push
data16
and
cli
push
jns
into
adc
icebp
fadds
imul
add
icebp
dec
add
rcrb
fdivrs
in
daa
add
and
xlat
adc
fldcw
xor
out
mov
jae
inc
fsubr
push
xchg
push
jle
int
imul
data16
jnp
sti
xchg
sbb
lock
mov
jg
push
idivl
add
in
cmp
mov
outsb
dec
jp
push
dec
add
and
shlb
jl
je
and
mov
or
insb
and
dec
jge
inc
jns
aaa
rolb
dec
push
or
aam
lds
orb
stos
cmp
pop
hlt
lret
mov
jmp
mov
mov
push
or
pop
adc
fstps
pop
cwtl
enter
and
outsl
std
push
mov
jno
mov
add
inc
and
push
inc
push
xchg
mov
call
mov
addr16
sbb
mov
inc
movsb
and
sub
add
xchg
pop
testb
imulb
jo
xchg
andb
stos
add
xor
fadds
lcall
pop
mov
inc
fsubl
add
leave
xor
adc
and
sub
pop
or
jp
aaa
ljmp
xchg
or
mov
xor
icebp
add
test
xor
ss
ror
loopne
pop
aam
enter
out
stos
add
mov
mov
or
or
add
mov
mov
push
push
and
jg
scas
jbe
rorl
loopne
xchg
lods
xorl
sbb
or
jne
loope
lods
add
xchg
add
cmc
inc
mov
mov
adc
pop
add
mov
movsb
lds
adc
pop
out
sub
jne
sti
or
add
sub
jle
stos
jl
pop
cmp
sub
dec
push
scas
or
xlat
cli
inc
aam
push
sub
out
sti
pushf
jecxz
xor
icebp
pusha
movsl
dec
sub
or
mov
xchg
add
pop
pop
int
test
sti
pop
bound
sahf
das
jnp
cmp
and
sbb
jbe
gs
in
push
mov
mov
add
fsubrl
cmc
shrl
add
pop
inc
adc
add
repz
add
jne
aas
clc
cmp
scas
add
jb
cld
adc
mov
cltd
cmpsb
mov
loop
add
jl
push
dec
jb
or
in
pop
fdivs
cmp
jnp
xlat
sbb
mov
lods
sbb
movsl
std
and
adc
jmp
pop
adc
ss
loop
push
cmp
jne
nop
rorb
and
jbe
mov
jl
sub
addb
dec
fnstcw
pop
pop
inc
jno
pop
or
loop
add
loopne
mov
and
push
mov
xor
adc
sub
xor
andb
pop
lahf
jne
bound
add
fnstenv
fnsave
xorb
loop
cmc
add
lods
mov
pushf
cmp
cmp
xor
xchg
mov
addr16
loop
dec
push
or
aam
inc
pmaddwd
popl
sbb
cmp
lods
mov
into
aad
and
cli
dec
arpl
xchg
lods
add
and
arpl
push
iret
push
push
inc
xor
xchg
clc
cmp
int3
int
mov
pop
js
js
cmp
into
sub
sub
mov
insl
imul
mov
add
jbe
add
pop
sub
and
add
mov
push
test
xchg
pop
in
dec
in
xorb
add
out
adc
and
jmp
xchg
xorl
sbb
cmp
add
movsl
sbb
add
pop
add
sub
movsb
add
popf
mov
movsb
in
add
dec
pop
fnsave
jb
sbbb
push
mov
js
aam
pop
imul
fldenv
stos
movl
fldenv
dec
xor
les
jo
pop
out
sbb
int
jecxz
mov
repz
jp
inc
bound
xor
mov
pop
stos
lods
mov
add
adc
inc
add
mov
push
mov
pop
fs
out
mov
nop
xchg
frstor
xchg
cli
push
cld
out
dec
xchg
imul
pop
add
insb
add
inc
dec
sub
sub
pop
push
add
mov
mov
ret
or
dec
lret
data16
push
loopne
jne
push
cwtl
push
add
mov
cmpl
mov
dec
jbe
add
dec
mov
add
lret
repz
mov
sbb
sub
out
add
mov
push
nop
imul
jmp
add
add
sub
mov
mov
mov
addl
mov
mov
sub
pop
jnp
shr
andl
jmp
sub
int3
aas
popf
insl
xor
add
inc
js
cltd
add
mov
add
or
cltd
push
mov
mov
xor
dec
xor
test
cmpsb
mov
add
jnp
std
sub
add
sub
add
cmpsl
imul
mov
scas
fisubrs
dec
ja
push
sbb
pop
mov
jp
mov
cmpsl
sbb
cmp
add
dec
cmp
dec
fld
sub
add
add
sbb
into
stos
in
adc
or
jne
cmp
orb
fsubl
leave
xchg
push
adc
loop
movsl
pop
roll
rorb
and
add
add
data16
pop
push
stos
cmp
out
nop
add
inc
add
inc
xchg
test
mov
mov
mov
int3
cmp
dec
insl
add
jecxz
add
arpl
sub
xchg
xchg
push
js
out
mov
jle
push
sub
inc
ljmp
in
add
dec
mov
jno
addb
add
xor
outsb
dec
mov
add
adc
adc
psrld
sbb
mov
xchg
mov
add
cli
mov
mov
cli
xchg
push
adc
iret
adc
notl
jb
xchg
lret
pusha
add
es
stos
ret
xor
cmp
sbb
adc
sub
cld
xor
or
push
push
adc
xchg
mov
dec
sub
sub
jge
inc
fisttpl
xor
jp
add
push
pop
inc
sbb
stos
flds
xchg
adc
insb
repz
push
cmpxchg
add
sub
cs
push
mov
mov
push
xchg
cmpsb
add
add
cmp
pop
cmp
jnp
gs
subb
lods
xor
imul
add
popf
fsts
cmp
aaa
push
sbb
cmc
xchg
adc
mov
sub
insb
mov
hlt
add
in
fwait
pop
xchg
aas
stc
ljmp
ret
add
mov
cmp
jae
repz
shr
mov
and
out
out
xor
popf
xor
lods
pushf
pop
inc
push
push
mov
inc
add
inc
out
inc
imul
push
sub
inc
xor
lahf
mov
rorb
add
lods
add
mov
xchg
push
insl
test
outsl
jle
add
negb
jge
mov
and
sbb
xor
xchg
pop
test
jg
jecxz
shr
lods
add
lods
mov
pop
add
cwtl
inc
aas
push
sbb
cwtl
xchg
ss
out
pushf
xchg
ficoms
fidivrs
or
incb
push
add
and
push
push
mov
jp
mov
adc
and
add
test
push
mov
and
je
pop
sub
sbb
add
cltd
in
xorl
jno
sti
and
sub
jg
adc
add
mov
push
and
push
aas
add
inc
mov
adc
inc
mov
popa
ret
add
jg
sbb
mov
mov
dec
cmp
ret
jl
dec
cmpsb
dec
add
aas
addl
push
cmp
push
sbb
aas
xor
cmp
pop
fadds
mov
out
add
and
stos
loop
mov
cs
pop
add
bswap
mov
hlt
js
push
xchg
push
add
jg
jle
mov
and
mov
pop
or
imul
ja
add
cmpsb
add
push
pop
jnp
lods
test
pushf
pop
add
pushf
add
aad
ss
popa
adc
xorb
xchg
addr16
push
movsb
lret
adc
or
out
test
xchg
cmpb
mov
mov
mov
add
test
cli
fwait
mov
xor
daa
sub
incb
push
or
jmp
into
sbb
jae
mov
push
cmpb
sahf
popf
out
add
xor
push
or
or
rolb
pusha
add
sub
or
mov
flds
shll
jns
sbb
addl
mov
fcompl
adc
sub
push
les
imul
cld
mov
add
add
ret
nop
ljmp
popa
in
out
cmp
xlat
gs
orb
sub
lods
fstpt
cmp
add
dec
add
stos
sbb
add
mov
sub
dec
mov
xchg
push
enter
xor
mov
xor
scas
test
insl
lret
xor
movsb
push
pop
cmp
sbb
push
add
je
in
cltd
shrb
fnstcw
xor
icebp
mov
jp
mov
mov
pop
out
fdivl
out
xor
add
js
ss
cli
fcoml
je
jp
mov
int
jecxz
fimuls
imul
jb
cmp
movsl
jle
pop
out
hlt
ret
pop
mov
sarl
imul
out
cli
mov
xor
mov
add
add
inc
lahf
dec
ja
pop
push
adc
xchg
cmp
add
stos
jge
and
out
loopne
shrb
mov
cld
xlat
add
test
xor
clc
fiadds
jp
inc
addr16
sbb
add
out
adc
push
jo
or
or
pop
pusha
add
lods
loope
jl
call
mov
xor
and
mov
adc
sub
bound
push
fcoml
testb
add
int
out
adc
jecxz
out
js
out
dec
cmpsl
lahf
mov
stos
add
jl
add
sub
jno
sbb
xor
shrl
pop
fwait
std
int
mov
xchg
fisubl
daa
add
add
add
andl
mov
inc
dec
and
xchg
push
push
xchg
outsl
dec
adc
imull
sub
push
add
or
push
push
sbb
dec
inc
mov
arpl
add
movsb
cmc
andb
scas
cmc
jle
outsl
mov
stos
mov
out
add
push
push
sbb
or
xchg
add
add
mov
and
add
cld
add
add
jns
jmp
aad
mov
ret
fwait
leave
xchg
and
jl
mov
dec
add
add
leave
mov
pop
sti
sbbl
xor
jo
sub
mov
xor
inc
dec
cmpsl
ds
jae
or
les
cltd
ljmp
inc
add
test
sbb
push
in
sahf
popa
xor
xor
jge
add
movl
sub
add
pop
xchg
push
loopew
cmp
jbe
divl
ja
jge
repz
rcll
and
or
xchg
mov
adc
xchg
add
mov
mov
sub
mov
insl
sbb
outsb
dec
sbb
mov
outsl
sub
mov
dec
inc
push
test
nop
fimuls
imul
ja
mov
addr16
lds
dec
jns
push
call
push
jmp
add
into
cmp
mulb
dec
pop
mov
pop
pop
mov
jno
xchg
roll
pop
sub
rcrb
inc
clc
rolb
add
in
sbb
sti
jg
fisubs
es
mov
mov
repz
loopne
jecxz
and
js
jl
add
xor
mov
cmp
ret
adc
cltd
das
cld
dec
jle
out
cltd
hlt
xchg
add
add
add
mov
and
bsf
mov
pop
jnp
lds
in
fisttpll
push
add
and
sub
sub
cmp
add
out
jmp
in
cmp
pop
push
mov
push
pusha
in
sbb
push
dec
cli
stos
int
mov
rorb
pop
dec
inc
push
pop
jo
add
push
inc
test
mov
movsb
mov
lcall
xor
xchg
repnz
cwtl
nop
add
jo
bound
and
sarl
adc
leave
sti
sub
add
sahf
jecxz
lods
lods
adc
ds
rcll
push
xchg
xor
add
or
fildll
in
hlt
push
pushf
jbe
stc
in
shlb
pop
mov
push
cwtl
mov
out
cmp
xor
push
adc
fsts
xor
int
inc
inc
pushf
or
popf
testl
outsb
add
pop
stc
add
sub
movsb
add
clc
in
xchg
add
stos
xchg
add
insl
je
mov
sbb
aam
sub
add
push
push
push
add
push
push
mov
flds
xor
push
sbb
add
dec
jge
jnp
mov
decb
fs
cmp
adc
bound
sub
or
mov
cmp
mov
bsf
cmpsl
jnp
mov
ja
dec
dec
dec
pop
add
pop
es
mov
pop
mov
xor
sbb
ret
stc
or
jl
add
add
inc
orb
mov
push
jno
int3
sub
lea
add
add
je
xchg
sahf
and
xor
sub
leave
stos
popf
add
mov
dec
sbb
push
pop
push
addr16
add
mov
fiaddl
test
push
push
add
mov
inc
cmpsl
sub
clc
and
lea
add
xor
popa
sub
xchg
in
hlt
sub
inc
rcrb
mov
add
int3
add
sti
addl
push
shld
loopne
std
add
add
sub
xchg
cmpsl
pop
ds
faddl
jo
pushf
pop
pop
or
addl
xchg
or
cld
addl
je
mov
xor
mov
je
mov
push
cmp
jb
cli
out
add
inc
lods
dec
pop
add
dec
imul
xor
imul
mov
push
xor
add
jle
inc
js
aaa
add
pushf
mov
cmp
sbb
push
mov
adc
inc
lret
jmp
mov
push
dec
sbb
mov
fdivrl
and
popf
fcompl
movsb
add
add
test
or
outsb
movb
dec
sub
xor
movsb
add
add
nop
add
stc
and
or
push
cmp
testb
and
cli
pop
mov
add
cmp
jecxz
xchg
cli
jne
pop
jg
xchg
pop
add
jle
xor
sub
or
dec
ss
push
adc
dec
lods
sbb
fsubr
dec
add
xor
lods
xchg
stc
add
sbb
fld
sbb
push
fs
and
xchg
pop
and
or
nop
imul
add
inc
into
or
fldt
sub
into
inc
add
cs
incl
js
jg
mov
mov
repnz
add
adcb
mov
addr16
call
ret
js
mov
pop
mov
enter
add
loope
scas
ret
sub
data16
fisttpll
add
mov
push
add
mov
sbb
xlat
lods
xchg
mov
or
mov
imul
negl
add
outsb
pop
loopne
mov
fdivl
stos
popf
es
scas
xor
add
out
lock
mov
dec
inc
idivb
sbb
psrad
add
add
and
lldt
add
adc
testl
add
cmc
pop
cmpsl
dec
push
mov
out
fwait
lret
cltd
inc
cs
shrl
call
add
xchg
and
and
aam
add
test
sub
outsl
out
sbb
pop
out
cltd
jnp
fiadds
addb
dec
stos
lcall
mov
xchg
pop
daa
or
add
add
inc
pop
jns
add
inc
add
out
iret
add
ja
mov
fdivl
adc
ret
jge
mov
loopne
enter
add
add
lret
loope
dec
jbe
mov
jl
add
add
sti
mov
cmp
xor
inc
cmp
scas
dec
add
int
call
pop
xor
adc
lods
sbb
add
int
sti
add
dec
lods
rolb
sti
aas
daa
cmp
pop
mov
test
add
jae
pop
pop
jp
dec
dec
fnstsw
stos
out
mov
and
stos
cli
add
mov
mov
inc
andl
jno
mov
fcompl
add
lds
subb
add
arpl
pop
lods
add
cmp
inc
cltd
mov
cmp
cmp
xor
enter
pop
add
cmc
in
mov
stos
rcrl
mov
inc
add
fs
xor
lock
lods
pop
mov
lcall
add
add
iret
inc
mov
lds
iret
movsl
je
and
jecxz
fsubrs
out
out
xor
cmp
add
aam
push
add
in
xor
xchg
add
lods
lcall
mov
dec
inc
xlat
nop
jge
sbb
lods
mov
mov
loop
add
jne
int3
inc
pop
jl
add
xchg
mov
je
inc
sbb
mov
jg
lret
adc
pop
out
test
les
push
ss
andl
lods
add
mov
imul
push
imul
ja
test
or
sbb
xlat
mov
arpl
sub
xor
pop
jmp
lods
adc
loopne
xchg
scas
add
adc
pop
add
shll
add
adc
out
add
and
cmp
pop
add
fisubl
test
clc
popw
or
addr16
data16
scas
mov
add
out
add
jp
mov
or
ret
inc
pop
sbb
rcrl
add
movsl
enter
dec
scas
dec
mov
clc
inc
add
sbb
xor
mov
lds
add
enter
mov
inc
dec
je
popf
popl
push
mov
cmp
aad
mov
sbb
shll
sub
aad
scas
ja
xchg
in
loope
cltd
add
dec
add
movsb
repz
movsl
or
inc
xlat
cmp
add
add
pop
or
ds
aas
ret
call
jg
add
cli
cmpsl
sub
add
jle
add
mov
or
jg
pop
jmp
test
sbb
add
xchg
adc
mov
loop
add
popa
sub
sub
sbb
loop,pn
inc
xor
mov
push
add
pop
adc
xlat
scas
mov
xor
add
or
rolb
sub
in
cmp
mov
and
int3
jne
jne
xchg
jl
jl
stos
dec
jge
scas
stos
dec
add
js
loopne
nop
add
popf
xor
adc
les
adc
lret
pop
xchg
ror
add
out
mov
jp
add
sub
mov
dec
int
fcoml
jbe
cmp
iret
xor
mov
mov
flds
push
outsl
xor
pop
int3
insb
dec
add
addb
push
and
push
fwait
mov
or
add
add
jb
pop
push
es
in
inc
push
mov
sbb
adc
call
and
mov
mov
mov
mov
dec
and
in
imul
pop
dec
stos
int
xchg
xchg
cwtl
loopne
sbbb
mov
stc
mov
std
mov
cmp
sbbl
xor
push
add
add
lods
cli
fcoml
pop
ret
sub
sahf
add
in
jp
xchg
or
add
scas
popf
iret
xchg
addr16
mov
add
add
sbb
imul
in
movb
push
push
xor
mov
and
scas
mov
add
ficoml
pslld
mov
imul
lcall
and
adc
je
jns
insw
pop
sub
mov
mov
pop
pop
sahf
sbb
add
push
in
aad
pusha
pop
sahf
mov
mov
lea
mov
aad
insl
push
mov
int
and
jns
das
adc
incl
push
pop
sub
or
xor
and
pop
hlt
push
pop
add
cmpsb
cmp
bound
fidivrs
pushf
mov
outsl
cmc
inc
sub
xor
push
xor
xor
out
mov
sub
push
cmp
out
ja
adc
cmp
push
adc
push
mov
cmp
xor
mov
mov
xchg
add
loope
clc
xchg
mov
add
push
pop
mov
les
cld
add
add
mov
adc
lods
push
push
add
mov
hlt
subb
aam
bound
ss
adc
add
inc
sub
xchg
adc
fs
fstpl
mov
notl
clc
rcr
add
movb
shll
out
xchg
or
loope
sbb
shl
lock
add
test
xor
add
push
and
sti
decb
jmp
pop
add
push
mov
sub
test
gs
sbb
jecxz
and
je
add
add
add
add
add
push
cmp
cmp
xlat
add
test
int
add
sub
into
mov
add
fadds
sbbb
add
mov
test
fdivp
sbbl
cmp
gs
sbb
gs
add
push
sbb
outsl
jo
xchg
or
pop
mov
xchg
push
push
mov
mov
jb
add
lea
sbb
jo
in
jne
mov
mov
test
jmp
adc
add
or
daa
jns
push
js
stos
xlat
add
int3
hlt
int
cmp
add
loopne
addr16
popa
mov
loope
mov
in
int3
int
fidivl
xlat
mov
push
add
adc
ret
add
clc
jle
call
icebp
or
inc
xchg
adc
out
or
pop
daa
jge
mov
add
xor
inc
or
les
in
outsl
mov
daa
xchg
mov
addr16
cmp
dec
cmp
insb
sub
pop
in
ret
lods
add
add
fs
jp
lock
jmp
lahf
outsl
nop
pop
retw
lcall
out
jle
mov
adc
in
mov
cmp
je
cmp
leave
xor
ljmp
add
adc
pop
sbb
xchg
push
xchg
orl
add
pop
cmp
add
pop
sbb
push
mov
lahf
add
aam
inc
and
jp
mov
add
push
dec
roll
jo
cmp
decb
mov
xchg
iret
mov
push
enter
rcrb
jp
xor
loop
jnp
push
mov
add
in
shll
sbb
sarb
sarl
add
into
mov
outsl
into
add
mov
cmc
push
les
add
jne
add
xor
lcall
jmp
mov
cli
add
clc
repnz
pop
dec
and
lea
xchg
add
fimuls
push
fisttpl
fistl
jg
fbstp
lock
inc
pop
aad
jp
push
add
inc
ljmp
and
sub
push
add
mov
jb
cltd
aas
mov
cmp
call
dec
sub
jo
outsl
mov
sbb
adc
jp
out
sub
shrb
mov
add
outsb
mov
cli
in
dec
lods
or
or
push
pop
mov
mov
fwait
push
dec
insl
sbb
in
adc
jbe
push
jno
add
test
lcall
cmp
pop
add
fmull
xor
jmp
mov
jb
push
sahf
ljmp
adc
hlt
icebp
add
adcl
adc
ljmp
call
add
repnz
and
xor
out
iret
cmp
into
xor
or
aaa
imul
add
loope
sub
mov
push
add
aam
int
add
stc
out
cmpsl
add
xchg
mov
dec
test
mov
add
sbb
xlat
push
aaa
fisttpl
xchg
add
aas
add
repnz
jl
leave
add
pop
aad
lea
fsubr
pop
add
cltd
pop
add
pop
adc
lds
test
std
aad
jb
outsb
scas
add
add
push
adc
push
xchg
sbb
bound
pop
outsb
cmp
mov
div
sbbl
mov
xor
scas
add
sub
lahf
mov
arpl
leave
lret
and
into
add
shll
stos
adc
jnp
pop
pusha
mov
gs
in
dec
pop
sahf
dec
hlt
add
in
cmpsl
and
fisttpll
mov
xchg
rorl
and
sub
test
insb
cs
imul
add
inc
loop
cmpsb
outsb
jl
into
clc
jl
push
add
cmp
rolb
int
add
scas
xchg
mov
or
xor
imulb
add
mov
popa
push
push
mov
jae
xor
or
mov
sub
xor
add
add
pusha
mov
test
outsb
jge
adc
rcrl
xchg
mov
cli
neg
adc
add
sbb
xor
xchg
filds
aad
add
inc
cmp
mov
std
scas
add
addps
xor
xchg
lods
out
adcb
pop
add
stc
lret
jns
inc
lock
clc
mov
cmpsb
leave
add
icebp
repnz
inc
roll
int3
cli
mov
adc
in
movsb
sbb
or
idivl
jge
ret
lea
adc
clc
dec
cmp
in
jbe
mov
sbb
ret
mov
iret
repnz
adc
pop
sbb
xchg
addr16
add
fwait
mov
push
or
popf
testb
adc
andb
mov
mov
lcall
add
inc
cmc
xchg
push
popl
repz
xlat
sbb
popa
pop
pop
dec
popf
inc
add
add
rcrb
aas
pop
lea
jo
and
inc
push
cld
call
sub
sub
pop
jl
lret
pop
cmp
and
lret
mov
inc
lcall
in
add
loopne
stc
add
js
out
xor
mov
gs
leave
lret
adc
pushf
leave
mov
mov
sbb
mov
xorl
pop
add
in
pop
add
lock
cmp
add
inc
xchg
cmp
or
icebp
inc
adc
cmp
pusha
cmp
test
sub
cmp
mov
cmp
and
nop
push
inc
add
mov
add
mov
add
add
push
lahf
jno
jno
mov
jae
mov
jne
add
leave
push
add
xor
mov
mov
cmp
lods
push
mov
or
cmp
inc
andl
add
lock
push
int3
lods
shrb
and
add
insl
mov
int3
in
cmp
inc
ret
push
aam
add
je
lcall
leave
and
bound
add
inc
cmpsb
and
rorl
or
flds
test
cltd
pop
mov
sub
xchg
bound
add
testl
mov
pop
add
test
sbb
dec
push
rclb
lods
in
and
filds
test
arpl
je
xor
dec
lods
data16
scas
dec
hlt
and
adc
mov
or
mov
push
sub
sbb
icebp
fnstcw
add
mov
std
add
outsl
add
fldl2e
cld
or
pop
adc
and
add
loop
sub
ss
out
in
xor
repnz
xchg
dec
add
jns
les
mov
pusha
mov
aas
pop
push
cwtl
jb
es
adc
into
sub
push
push
mov
filds
inc
add
sub
push
iret
add
mov
sub
add
and
jge
add
xchg
xor
push
mov
xchg
jp
pop
or
mov
push
enter
outsl
cmp
xchg
add
scas
pusha
ja
add
push
add
add
adc
cmp
pop
add
fisttpll
cmpsl
dec
xchg
xlat
addl
add
scas
jbe
mov
cld
xlat
je
scas
jmp
jp
ret
add
or
outsb
add
jbe
inc
add
mov
add
call
nop
pusha
push
xorb
pop
jp
pop
adc
xor
mov
add
dec
mov
pop
xor
fwait
or
addr16
push
cmp
repnz
jp
or
mov
fdivp
aaa
daa
cmc
cmp
test
add
int3
sub
xor
inc
ret
xor
mov
cmp
cmp
out
sub
mov
lock
mov
or
push
aaa
mov
and
out
pushf
das
cmp
pop
add
dec
adc
push
sbb
lcall
inc
add
add
loopne
jbe
jge
mov
imul
jnp
inc
inc
sbb
mov
cs
mov
mov
hlt
mov
imul
sub
and
add
add
sub
test
movsb
shll
das
repnz
mov
flds
pop
fsubrl
adc
ja
push
fs
inc
adc
out
aas
adc
pushf
mov
jecxz
add
adc
sbb
mov
pop
add
add
add
jb
stos
add
or
add
dec
fldt
gs
adc
sahf
pop
aas
in
stos
jecxz
popf
add
push
stos
and
jle
jne
or
add
sbbb
aaa
movsb
add
test
mov
mov
xchg
jl
ds
jns
sbb
leave
cmp
add
fiadds
jb
pop
dec
jno
and
movsb
add
pop
add
lcall
adc
add
mov
sbb
bound
lock
jns
lret
push
lret
rcrl
pop
push
btc
les
mov
add
outsl
add
dec
xchg
pop
pushf
adc
dec
pop
pop
jp,pt
mov
pop
or
jge
lods
dec
cmp
sbb
cs
inc
add
adc
and
jg
fists
xor
push
lret
xor
adc
fmuls
push
add
cmp
add
movlps
sbb
jae
add
sbb
mov
add
add
mov
pop
cltd
xchg
addr16
lret
out
leave
dec
pop
pop
loop
add
les
mov
adc
sub
jne
pusha
mov
cmp
add
mov
adc
add
dec
push
pop
fiadds
in
stos
sbb
ss
mov
mov
push
push
add
leave
add
les
hlt
filds
ret
lahf
xchg
mov
add
outsb
and
in
jp
sbb
int
pop
in
mov
mov
shrb
and
sbb
add
adc
add
jp
add
add
mov
jle
in
lret
mov
jbe
xor
xchg
lods
mov
cwtl
sbb
ficoml
add
mov
test
and
rol
mov
lds
shll
arpl
shlb
jb
mov
add
cwtl
andb
jo
and
push
aas
dec
pusha
add
icebp
add
push
ret
add
adc
add
cmp
xchg
aad
or
add
jb
cltd
stc
or
mov
popa
lds
pop
sbb
add
add
mov
je
ret
sbb
mov
sarl
sar
sub
in
xor
pop
dec
jbe
or
jno
add
outsb
add
mov
inc
pop
pop
add
xor
nop
inc
je
fxam
faddl
push
out
lods
movb
dec
icebp
add
call
push
jns
xchg
out
dec
mov
cmp
mov
stos
fcomip
adc
inc
jno
fwait
dec
mov
outsl
sbb
xchg
test
cmp
or
movsb
add
dec
sbb
push
loop
dec
cmp
add
or
outsb
jne
nop
push
pop
loope
sbb
aaa
add
sub
jno
mov
add
scas
xor
add
and
aaa
mov
inc
in
loopne
cltd
arpl
add
pop
adc
in
add
and
out
or
xor
jo
jle
add
add
sbb
mov
push
fldl
sbb
xor
pusha
or
movsb
hlt
xor
or
rcrl
pop
add
fwait
sub
adc
out
inc
or
xchg
jo
pusha
subl
push
inc
inc
fcmovbe
and
jmp
cli
cmpsl
adc
add
push
add
rcll
add
fsubr
addb
dec
add
lret
fcomps
std
add
jne
add
in
lea
cltd
cmp
inc
add
cld
and
xchg
sub
adc
add
and
fmull
sub
pop
bound
dec
jp
add
and
add
popf
lret
cli
dec
movb
cli
mov
fldt
and
jae
fildl
pop
jbe
les
add
das
cmpsb
jo
add
fldl
and
add
out
mov
mov
mov
bound
cwtl
inc
mov
dec
jecxz
insl
ffreep
or
or
sbb
sub
adc
flds
js
repz
out
push
inc
adc
rol
es
popf
push
js
sti
push
loope
lcall
orl
mov
mov
aaa
enter
add
jae
or
bound
xchg
cmp
sahf
mov
lods
inc
add
xchg
push
mov
dec
cmpsl
xchg
pop
xor
xchg
sbb
repnz
popf
jo
jae
fstps
jbe
inc
popa
push
push
add
or
mov
pop
mov
out
stos
shll
daa
push
rolb
sbb
pop
add
add
movsl
add
repz
xor
fsubp
int3
lods
pop
mov
mov
scas
sbb
xchg
dec
mov
xchg
shrl
je
pop
add
or
fcoms
xchg
cmp
outsl
iret
jge
mov
push
aaa
insl
stos
fmull
cmp
pop
imul
push
add
lcall
push
cmp
jno
add
sub
addr16
jp
and
dec
pop
mov
inc
outsl
mov
imul
in
mov
or
mov
pop
mov
adc
stc
and
lock
push
add
mov
mov
jno
aad
xchg
dec
push
inc
add
cmpsb
cmp
insb
inc
test
add
add
ret
lods
sbb
rcrb
sub
add
cmp
pop
add
jp
sbb
adc
mov
add
mov
lret
dec
add
sbb
mov
clc
cmp
inc
mov
lds
faddl
je
test
std
packssdw
scas
out
cmp
inc
xor
fists
insl
lods
xchg
add
cmp
inc
fldcw
out
add
notb
add
sub
add
add
sub
cwtl
mov
xor
fwait
popf
jne
add
adc
push
pop
or
imul
add
loop
fildl
mov
outsl
and
mov
or
repnz
cmpsb
insl
nop
xor
push
inc
popa
inc
sbb
adc
incl
pushf
sbb
cmp
outsb
add
jb
movsb
xor
stos
outsl
jmp
add
add
stos
std
add
dec
int3
imul
xor
int
dec
test
leave
sub
stos
mov
xchg
sbb
add
fmuls
dec
movsb
push
dec
push
insb
insb
add
sub
ds
sbb
sahf
outsl
push
xlat
add
in
dec
add
lahf
cmp
mov
lret
lcall
and
or
mov
dec
aad
jmp
test
out
xor
pop
mov
add
out
add
add
xchg
xor
test
rolb
pop
sub
add
fwait
stc
pop
push
bound
lock
xor
int
jl
incl
fildl
leave
inc
push
in
sbb
dec
xchg
or
push
icebp
xchg
add
pop
cmp
in
lods
xchg
or
sbb
arpl
dec
sub
hlt
pop
cmpsb
mov
add
stos
lret
insb
add
add
pop
cmp
pop
pop
int
adc
test
flds
xor
inc
jo
add
sbb
faddl
jge
and
dec
add
or
andb
outsl
xchg
jns
add
cmpsb
cltd
cltd
add
xor
sub
aad
jmp
inc
xchg
adc
ja
shrl
sub
pop
das
sub
hlt
add
push
lock
add
repz
add
je
inc
jmp
xchg
lods
add
add
mov
add
add
push
cmp
fisttpl
jne
pop
or
or
repnz
das
sub
pop
mov
xor
and
and
popf
pop
xchg
out
and
inc
jbe
lock
es
cmp
xor
push
add
adc
insl
jo
pop
pop
nop
imul
and
pop
rorl
pop
mov
jo
daa
out
pop
repz
fcomps
sti
add
xor
add
ljmp
roll
add
aaa
sub
sub
ja
inc
mov
scas
sbb
pusha
mov
add
rcl
cmc
xchg
or
pop
sub
fidivrs
gs
adc
cmp
mov
popaw
call
mov
das
push
loop
mov
pop
jle
jmp
add
cmp
pop
sub
sbb
scas
add
lret
cmpb
sub
lods
sti
sbb
inc
cmp
fwait
push
add
xor
dec
add
jge
or
rcll
cmp
xor
pop
and
add
inc
test
lds
aas
xor
ret
hlt
jle
add
cmp
cmpb
outsl
add
add
ret
sub
sahf
aas
push
cmp
ljmp
push
call
ret
out
add
in
xchg
mov
push
je
sahf
add
rep
mov
sub
fiadds
cmpsl
das
push
daa
popf
add
lea
cmpsb
cmova
mov
nop
into
push
and
sbbb
cltd
and
xchg
jb
pop
pop
cli
test
mov
jmp
pop
pop
sbbb
roll
sbb
push
das
sbb
fcoml
cmp
addb
add
xor
int3
pusha
cmpsb
and
in
sbb
call
sub
cwtl
test
inc
mov
test
push
jg
and
hlt
sbb
out
push
gs
dec
in
aam
adc
push
pop
xor
fiaddl
push
push
and
dec
hlt
popf
mov
add
add
add
shrb
and
lahf
jge
jnp
mov
pop
pop
sub
mov
inc
incb
or
lahf
out
xchg
mov
data16
ss
mov
mov
es
out
jg
lcall
scas
dec
or
inc
out
outsl
push
out
add
inc
inc
push
cmpsb
sbb
jmp
movsb
into
xor
or
es
notb
dec
in
jbe
xchg
mov
jne
add
push
lea
push
insl
jb
inc
adc
pushf
add
test
inc
push
dec
add
data16
xor
pop
in
or
mov
push
testl
push
xchg
push
jo
mov
mov
dec
inc
dec
and
xchg
imul
adc
pop
mov
sbb
jl
mov
add
mov
out
jl
adc
adc
data16
jge
addr16
cmp
jno
adc
sbb
sbb
pop
add
push
fiadds
add
pop
add
adc
jo
aas
icebp
push
dec
inc
imul
xchg
sahf
or
arpl
addl
sbb
in
frstor
icebp
jg
pop
add
mov
adc
imul
pop
into
in
cli
add
pop
andl
mov
pushf
lcall
or
mov
sbb
push
addb
mov
shrb
jecxz
add
jmp
sub
dec
aas
add
fildll
add
push
iret
push
scas
pusha
arpl
lahf
std
sbb
xor
cmp
jae
testb
pop
into
pop
pop
es
push
mov
inc
cmpsl
add
add
ds
cltd
bound
jl
dec
add
pop
je
sbb
add
or
cmp
scas
sahf
lds
in
repnz
leave
xchg
nop
outsb
into
adc
jle
shrl
mov
lods
cmp
inc
and
cmp
xor
inc
sub
or
stc
add
xchg
sbb
mulb
sbb
pop
jl
pop
push
mov
sbb
pop
mov
or
mov
push
lcall
sub
jmp
lods
adc
xchg
loope
cmp
or
and
add
xlat
lret
push
mov
add
sub
xchg
rclb
sub
popa
fcoms
xor
xor
push
mov
push
je
cmp
push
js
add
call
insb
pop
jp
into
jl
xor
pop
mov
movq
movsb
out
add
adc
cmpsb
xor
xchg
jmp
sub
popa
popa
cli
ljmp
xchg
xchg
mov
add
ret
lret
adc
addb
fsub
jno
in
add
push
test
jb
sub
push
and
lret
mov
add
xchg
in
int3
roll
mov
cld
insl
lods
xchg
lahf
cli
loope
fcoms
or
in
add
jp
xor
or
das
add
pop
xor
fidivl
pop
addps
ret
popf
mov
fisttpll
adc
jb
aaa
pop
cld
add
cmpsl
in
imul
add
sub
add
cmp
sarb
pusha
test
inc
inc
test
jle
mov
add
enter
xchg
stos
lcall
in
sbb
adc
hlt
sar
jns
and
stos
mov
in
aaa
mov
jo
mov
add
rclb
mov
xor
inc
movsb
rolb
dec
add
adcb
add
dec
or
jae
add
dec
or
stos
nop
out
mov
cmp
sti
adc
in
std
add
or
mov
dec
dec
add
add
mov
add
xchg
jge
jae
sahf
add
mov
and
adc
mov
pop
fimuls
adc
pcmpgtw
xchg
lods
std
xchg
mov
rcrb
add
mov
mov
add
jle
add
sub
inc
add
xor
and
jmp
push
jne
mov
into
mov
cmp
and
add
pop
lret
mov
add
add
add
push
mov
inc
cwtl
test
push
add
sbb
inc
into
scas
gs
xor
incb
lret
push
sub
xchg
addb
add
mov
pop
mov
outsl
or
push
test
daa
sub
mov
dec
inc
push
add
xchg
enter
push
and
add
outsb
adc
inc
jo
inc
and
in
test
adc
lahf
mov
dec
rcll
outsb
push
out
sar
int
and
addl
mov
jb
adc
repnz
loope
nop
enter
and
add
push
js
sbb
add
aas
movsb
dec
mov
sub
push
or
movsb
es
pop
lret
repz
jge
add
jne
ljmp
mov
and
add
out
jmp
push
lcall
jecxz
loope
add
add
jp
negl
scas
jbe
mov
pop
push
jge
add
mov
rep
cmpsb
mul
sub
movaps
sub
mov
cmp
push
call
adc
leave
imul
repnz
and
xchg
lea
push
and
add
wrmsr
push
stos
mov
sub
sbb
scas
or
cmpsl
fbstp
pop
lahf
ficoml
and
sub
cs
test
mov
pop
mov
inc
aaa
nop
mov
push
add
add
mov
mov
mov
lock
pusha
add
mov
dec
mov
loop
pop
out
dec
add
add
xlat
jno
or
add
lret
or
pop
xchg
add
add
dec
push
add
aaa
add
test
xor
fdivl
mov
inc
in
ja
xchg
mov
push
int3
int
fbstp
add
push
sbb
jae
push
xor
pop
mov
insl
jae
imul
lock
mov
cli
push
ja
mov
fisubrs
imul
or
add
mov
aad
push
inc
mov
mov
adc
inc
xor
push
cmp
cmp
jnp
sbb
lods
dec
add
xlat
scas
mov
xor
pop
movsb
mov
xor
mov
call
clc
leave
aam
xchg
test
adc
add
pop
pop
sti
pop
cmp
out
iret
nop
xchg
repz
pop
sub
and
add
ret
push
insb
in
sub
movsl
fcmovb
sbbl
out
xlat
add
aam
movsb
imul
sub
inc
pop
out
xchg
xchg
movl
push
sbb
popf
mov
mov
inc
adc
js
adc
data16
xchg
push
scas
and
add
xor
mov
orb
push
cmp
subl
xchg
cmpsl
push
xor
out
or
dec
and
scas
adc
roll
inc
repnz
fstps
xor
aas
add
cmp
sbb
lods
jns
dec
jmp
xchg
enter
lock
push
dec
add
cmp
adc
std
test
or
pop
and
adc
ss
dec
leave
mov
cmp
in
rolb
cmpb
xchg
insb
adc
js
push
cmpsl
insb
pop
imul
mov
cs
call
mov
mov
add
movl
jg
leave
mov
iret
lock
jecxz
push
addb
mov
mov
add
mov
icebp
add
push
les
jmp
mov
test
out
push
or
adc
jbe
subb
add
nop
cmp
sub
adc
cmc
mov
lahf
dec
in
lock
add
fcomps
inc
fistpll
adc
and
in
lret
sub
imul
fnstenv
ds
cmp
stos
inc
cmpsl
xlat
pop
inc
sbb
add
jno
add
addr16
add
fwait
mov
cmc
cli
iret
xchg
mov
leave
xor
jo
dec
add
aad
stos
pop
adc
push
adc
dec
and
aaa
data16
mov
xchg
out
xor
div
fstps
xlat
inc
incb
push
aad
addb
cmp
pop
add
dec
into
std
xor
add
add
jg
or
aam
aad
orb
repz
lret
pusha
sbb
xor
mov
lock
shr
lock
fbld
xor
out
and
cmpsb
add
mov
shrb
loopne
mov
mov
add
ret
shl
std
ja
jecxz
add
test
cli
add
and
rorl
add
add
add
add
flds
into
idivl
jb
xor
mov
gs
scas
sti
xor
ljmp
pop
jno
pop
stos
jnp
jge
and
add
lahf
add
sbb
inc
data16
xchg
rcrl
add
rorl
cmp
fcomps
lods
imul
shlb
dec
jbe
inc
push
or
pop
push
xorl
mov
pop
sub
mov
imul
or
add
push
pop
and
jle
imul
mov
sbb
popa
inc
add
add
or
pop
fists
and
cs
inc
pop
aaa
cmp
mov
xchg
mov
or
fsubrl
mov
jmp
bsf
out
jbe
pushf
and
insb
xchg
cli
pop
or
mov
and
test
add
out
xor
or
pop
lock
popa
repz
outsb
adc
inc
outsb
cwtl
sub
push
cmp
bound
pop
add
add
adc
add
in
iret
ljmp
insl
jle
push
adc
sub
xchg
push
call
inc
pop
push
push
repz
add
test
lret
add
xchg
lock
testb
pop
push
mov
cmp
shlb
inc
mov
inc
pop
add
cmp
rcrl
cmp
pop
xchg
push
add
dec
aam
and
imul
mov
lahf
js
jb
mov
clc
aas
cld
sbb
cmp
adc
xchg
inc
inc
dec
filds
mov
ss
imul
mov
stos
dec
jbe
nop
push
inc
dec
out
inc
addr16
js
cmp
mov
jno
adcb
add
rclb
in
lahf
aas
sbb
push
sbb
sbb
add
add
lods
add
out
clc
dec
or
gs
push
xchg
mov
and
in
inc
stos
cli
add
inc
loop
loope
lock
insl
loopne
cmp
mov
and
pushf
or
sbb
mov
test
cld
inc
pop
out
sbb
insb
and
inc
test
shlb
push
cmp
bound
cwtl
dec
xchg
scas
sbb
shlb
sub
pop
adc
je
movsl
in
push
iret
ds
push
loopne
rclb
sbb
repnz
mov
cld
sbb
call
mov
add
dec
or
mov
sbbl
add
adc
loop
mov
js
lods
jp
jb
add
cmp
test
int
ret
pop
xor
add
fs
loopne
jb
jo
test
add
idiv
add
or
xlat
adc
popf
fdivl
mov
xchg
rcrb
sbb
sbb
jne
repz
jbe
ljmp
mov
adc
sub
add
push
fwait
cld
adc
mov
dec
in
repnz
mov
add
imul
repz
mov
jg
mov
movsl
add
and
pusha
shrb
add
sbb
bound
xorl
add
rolb
mov
jecxz
add
push
add
in
add
out
inc
mov
xchg
dec
loope
test
out
adc
divl
test
add
nop
mov
lahf
ja
add
sbb
lcall
cmpl
push
push
xor
add
dec
cmp
push
cmpl
in
in
mov
dec
sbb
leave
pop
cmp
pop
or
and
and
rcrb
adc
pop
stos
mov
ret
gs
rcrl
sbb
mov
fwait
lods
in
stc
sbb
jns
lds
ljmp
std
mov
dec
pop
push
xchg
push
jmp
cmp
ljmp
or
mov
movsl
add
mov
fnstenv
sbb
mov
lods
add
sar
test
adc
pop
ss
push
xchg
mov
add
add
add
pushf
xor
les
xlat
or
mov
mov
icebp
sbb
sub
push
jbe
jo
mov
ret
add
arpl
add
cmp
jno
ret
lea
outsb
add
adc
jmp
xor
out
dec
mov
aaa
xchg
repnz
jge
push
fadds
mulb
pusha
add
rcrb
jle
dec
dec
test
clc
add
fidivs
not
inc
add
mov
inc
inc
stos
jae
lret
cmp
or
xor
lahf
add
mov
adc
repnz
add
testb
out
leave
nop
mov
push
sbb
xor
outsb
je
jae
jns
jmp
jg
pushf
sahf
sar
xor
mov
divb
pushf
pop
pop
sbb
lahf
mov
sub
mov
je
in
sbb
add
dec
inc
xchg
fnstenv
sahf
mov
test
jp
jp
mov
add
icebp
pop
jbe
mov
add
push
add
jmp
scas
jns
or
shll
pop
pop
in
jmp
and
test
adc
arpl
add
leave
cmp
cmp
cli
mov
pop
aas
mov
shll
sti
ret
sti
imul
movl
pop
loop
cmp
dec
rclb
adc
add
adc
add
add
or
sbbb
sbb
push
jb,pn
cmp
jns
jb
push
cli
stos
add
lahf
loope
sbb
mov
aaa
and
inc
jns
mov
xor
cwtl
xor
and
mov
pop
jae
into
das
in
cmpsb
lret
xchg
add
dec
ds
xor
mov
shl
dec
int3
mov
outsb
les
mov
insl
loope
aam
popa
push
pop
cli
push
pop
mov
jns
add
and
ffreep
lahf
mov
fisubrs
cmpl
or
or
dec
fadds
out
sbb
or
or
add
ret
out
rorl
cmpb
lea
push
shlb
adc
pushf
xor
movsb
xchg
hlt
sbbl
and
jecxz
sbb
add
add
mov
scas
push
call
aad
push
jno
sahf
add
adc
cmp
push
adc
push
jmp
mov
mov
sub
mov
add
or
cwtl
add
adc
sbb
inc
shrb
mov
sbb
aaa
add
in
hlt
push
pop
int
in
iret
movsb
cmp
in
add
push
xor
in
sub
sahf
daa
repnz
dec
add
pop
adc
mov
jno
push
lret
add
add
pop
push
aad
jp
in
imul
bound
and
add
add
lcall
pop
movsl
xchg
sub
mov
add
outsb
add
lahf
insb
dec
repnz
push
scas
add
repnz
popf
loopne
cmp
pop
sub
jle
push
aad
sbbb
imul
add
xchg
aad
push
sbb
and
jnp
add
add
sbb
push
cli
cmp
push
add
jne
imul
inc
loop
add
mov
add
pop
mov
pop
inc
jle
repz
fs
mov
lods
add
cwtl
subb
xchg
jge
rcll
mov
add
add
add
lahf
mov
jmp
push
add
add
cmp
fcmove
inc
add
sbb
mov
sahf
ljmp
lods
mov
xchg
test
mov
cmp
aaa
in
dec
jbe
sub
inc
add
or
add
jge
adc
addb
lds
add
rol
inc
shr
mov
adc
aam
andb
cmp
xlat
lds
or
dec
add
push
repnz
push
add
xchg
push
inc
scas
xor
pop
and
mov
push
shlb
push
sub
out
xlat
jecxz
pop
sbb
mov
js
xor
repz
or
push
stc
shll
mov
in
cmc
sbb
sub
sbb
add
adc
jp
sbb
lcall
aas
daa
add
in
and
pop
sub
sbb
enter
rcrb
aad
pop
int
scas
mov
mov
dec
dec
mov
das
inc
mov
or
adc
jne
loope
xchg
sub
dec
and
enter
lcall
dec
sbb
jns
add
mov
rcrb
pop
fs
add
out
aaa
sbb
lret
test
orb
fwait
aam
push
mov
add
cmpsl
fnclex
lret
push
dec
mov
pop
adc
add
dec
roll
or
cltd
mov
mov
jns
add
loope
mov
pop
jae
test
fistps
push
add
cwtl
or
fnstcw
fldt
cmovno
fistl
xor
pop
push
ret
xchg
xchg
cmc
add
jmp
cmp
int
pop
or
fistps
popa
test
popf
jae
add
add
xor
arpl
shll
sti
add
out
mov
sti
inc
rcl
jbe
repz
add
js
pop
push
es
add
pop
mov
popf
cmc
add
inc
dec
popf
and
negl
and
popa
dec
test
loop
cwtl
sti
lds
pop
add
lea
xchg
cmp
xor
sub
pop
bound
dec
xchg
in
inc
int
test
xchg
enter
inc
add
dec
sahf
add
mov
cmp
mov
xor
scas
ret
or
xchg
dec
stc
add
inc
add
mov
daa
insb
imul
push
add
pop
pop
inc
in
mov
pop
inc
sarl
pop
je
rorb
mov
call
add
incl
lods
push
sub
pop
cmp
insb
sub
js
pop
adc
inc
sarl
add
loope
pushf
mov
pop
pop
push
je
pop
xchg
loop
mov
mov
jnp
push
fistpl
test
pop
xchg
stc
mov
das
iret
pop
iret
daa
call
loopne
aas
pop
xlat
xor
xchg
or
mov
arpl
sub
mov
js
inc
push
pop
in
adc
pop
jl
add
sub
inc
xor
push
cmp
sbb
and
dec
daa
popf
lods
xchg
test
movsb
sub
jl
movsb
mov
lcall
jg
std
jge
push
xchg
addr16
push
push
fcmovbe
mov
adc
std
mov
or
leave
std
outsb
sbb
cmpsl
mov
fcmovnbe
sub
pop
and
adc
pop
add
aaa
mov
dec
loopne
shlb
add
sti
add
icebp
stc
add
add
cmp
add
and
stos
add
add
sbb
movsb
lods
popa
mov
and
jbe
xchg
adc
xor
mov
int3
data16
mov
stos
add
leave
push
imul
sub
lods
rolb
pop
pop
push
add
add
mov
sub
dec
inc
add
push
dec
xchg
add
arpl
test
clc
add
push
insb
adc
scas
add
adc
mov
dec
sub
push
testb
xchg
sbb
in
pushf
add
jb
cmp
add
xchg
lock
jle
pop
mov
mov
xchg
or
lahf
jge
xor
add
adc
xchg
dec
bt
jmp
sahf
add
imul
sbb
lods
fstpl
cmp
stc
add
cmc
shlb
add
xor
lret
xchg
arpl
ljmp
out
adc
jl
popf
and
dec
mov
rcrl
add
das
add
stos
subl
add
shrl
jo
add
push
push
movsb
add
int3
cmc
xchg
mov
xor
or
lret
loope
cwtl
ss
or
sub
and
addr16
jl
mov
add
mov
push
mov
mov
cmp
jge
and
test
sub
cmp
or
dec
fcmovu
ret
clc
jbe
test
dec
and
popa
jno
sbb
iret
add
adc
add
repz
pop
rorb
add
cmp
sub
iret
xchg
lods
sbb
mov
bound
inc
adc
outsl
push
pop
push
push
add
test
mov
es
pop
das
mov
outsb
jbe
mov
and
xor
mov
aam
xchg
jge
and
loopne
lds
sbb
sbb
mov
xor
mov
xchg
sub
pop
jns
hlt
insb
jg
or
add
or
add
in
outsl
add
aad
jl
imul
dec
aaa
popf
jne
xlat
or
push
cmp
popf
jns
mov
add
adc
insb
mov
or
adc
sub
dec
push
es
adc
mov
cltd
in
jb
add
jns
in
rclb
push
js
outsl
sbb
sub
cmp
cli
ljmp
lret
sub
shll
dec
pop
ljmp
add
inc
jae
add
add
mov
inc
das
xchg
fistpl
arpl
imul
add
stos
add
and
in
mov
call
dec
pushf
outsl
add
cltd
in
sbbb
add
xor
sarb
test
add
add
aas
shrl
xchg
lods
cmp
add
imul
add
add
mov
imul
and
fidivl
push
jo
add
out
and
push
push
mov
add
and
gs
pop
push
pop
add
push
add
idiv
xchg
mov
jo
add
mov
repnz
push
sub
movsl
add
push
xchg
cmp
outsl
xor
adc
or
push
pop
dec
mov
hlt
sub
pop
lods
push
stc
and
repz
enter
pusha
dec
sbb
adc
add
test
xor
cmp
das
add
mov
lods
push
or
xor
ds
fsubrs
jge
push
pop
mov
addb
insb
dec
xor
loopne
ffree
iret
movb
fwait
roll
jb
dec
pop
push
mov
xchg
and
add
mov
xor
lods
xchg
mov
pop
jnp
adc
cmp
pop
inc
out
enter
scas
leave
nop
mov
sub
pop
inc
shll
lcall
or
push
jo
lods
add
mov
jns
dec
push
mov
call
andl
scas
jmp
mov
sub
xchg
add
sub
fs
mov
sar
gs
xor
add
jmp
push
and
jns
ja
daa
add
aad
hlt
dec
or
jno
inc
mov
sub
sarl
sbb
inc
std
loope
jge
shlb
out
shll
inc
nop
pop
add
cmpsl
sbb
sbb
arpl
aaa
into
pop
adc
mov
nop
fwait
push
addr16
ficomps
jns
mov
add
and
cmp
jae
rorl
push
call
xchg
or
add
sarb
in
addl
mov
mov
sub
mov
cmc
fmull
sub
or
xchg
mov
push
mov
xchg
xchg
popa
mov
je
sbb
in
mov
mov
or
test
add
imul
call
mov
sub
add
cmp
dec
xchg
push
jne
add
inc
scas
int
push
mov
je
xchg
cmp
cmp
fcoms
pop
ficoml
add
dec
adc
mov
in
lock
dec
out
mov
and
or
les
call
inc
push
push
mov
xchg
add
add
sub
xlat
jp
adc
mov
cmc
xchg
cmp
cmpl
push
insb
inc
pop
lods
xlat
mov
and
mov
jp
cmpsb
popl
pop
or
or
inc
mov
lods
or
sub
das
add
shll
pop
lds
ss
lret
cmc
add
mov
addr16
daa
je
mov
pop
jl
lret
ds
movsl
lea
jb
add
add
pusha
add
add
dec
and
pop
push
nop
xchg
add
aas
push
loope
aas
std
add
mov
daa
mov
jl
shrb
xchg
fbstp
into
loop
gs
push
pop
cmpb
add
lods
subb
ret
xlat
xor
jno
clc
leave
arpl
leave
pop
mov
jp
not
cmp
call
add
mov
push
movsb
add
mov
pop
test
lods
scas
mov
adcb
pop
rcll
add
popf
cmpsl
in
mov
push
pop
out
add
jmp
push
cmp
jle
mov
icebp
or
mov
add
adc
mov
xchg
mov
xor
adc
xchg
fnstcw
call
dec
movl
out
sbb
inc
jge
add
push
repz
cmp
add
ss
or
sahf
xchg
pushl
mov
add
nopl
roll
movsl
mov
pop
jb
add
mov
mov
mov
sbb
and
in
adc
cmpsl
add
in
fstps
pop
sub
cmp
add
cmp
adc
add
cmp
sbb
cwtl
and
add
and
cmp
lock
int
imul
test
mov
mov
add
sub
insl
ja
add
aam
js
or
decl
jl
ret
pop
in
adc
addr16
mov
mov
outsl
add
sbb
cmpl
nop
pop
mov
add
xlat
add
leave
repz
stos
xchg
addr16
and
adc
roll
xchg
push
dec
lea
and
rclb
imulb
push
arpl
outsb
aas
mov
cmp
mov
push
push
mov
addr16
aam
jp
lahf
and
and
add
and
add
aaa
lods
sub
mov
or
or
test
add
add
adc
dec
pop
lahf
aaa
push
mov
add
mov
xchg
xchg
add
jle
add
add
loopne
mov
sti
outsl
add
inc
inc
jbe
push
inc
pop
push
push
jns
xchg
int
rdpmc
jl
cmc
cs
das
add
jae
nop
movsb
dec
push
or
dec
arpl
incb
or
or
xor
ja
mov
popa
imul
pop
sarl
pop
mov
mov
imul
jg
std
fs
dec
aas
add
pop
or
add
mov
cmp
stos
lods
movsl
xchg
test
jmp
cmp
pop
sti
add
add
test
xchg
ret
mov
push
mov
push
xor
cmp
add
out
cli
movb
iret
fmull
adc
imul
js
add
femms
movsb
loop
fmuls
add
xor
add
xor
cmpsl
or
dec
loopne
or
dec
add
into
add
pushf
adc
mov
add
imull
xor
or
call
inc
xchg
ds
xchg
cmp
add
stos
faddl
subb
lea
or
add
out
outsb
in
adc
add
out
adc
pop
push
stos
mov
fcoms
cwtl
mov
stc
fiadds
cmc
test
lcall
cmp
les
jp
scas
add
test
cmp
adc
push
movb
cmpsb
push
xchg
cmpl
cmp
adc
ljmp
inc
cmp
adc
add
icebp
xor
call
dec
fcmovnb
add
dec
push
xrelease
les
testl
outsb
add
push
out
icebp
xchg
add
das
popf
icebp
sbb
cmp
les
test
add
jge
adc
mov
cld
insb
jne
sbb
mov
addr16
dec
jbe
int3
push
loopne
cwtl
fwait
add
fsub
mov
pop
pushf
sbb
dec
jp
jo
mov
sub
int
add
add
or
sbb
cmp
arpl
jb
add
jl
add
mov
dec
scas
gs
sbb
ret
dec
cs
stc
pop
add
inc
and
sub
add
fidivrs
pop
or
sbb
xchg
cmp
les
xlat
inc
inc
js
add
add
add
add
fs
setbe
or
repnz
inc
dec
add
add
add
add
pop
dec
dec
sbb
insl
xor
add
mov
adc
add
dec
loop
stc
imul
leave
add
mov
add
call
cmp
adc
ds
and
out
add
test
push
xor
add
addr16
or
add
and
pop
jns
fs
adc
in
jb
sbb
mov
add
cmc
adc
add
mov
or
js
cwtl
outsl
orl
enter
js
scas
orb
test
add
cmpsb
test
jecxz
paddsw
subl
dec
add
cmp
add
pop
out
leave
add
mov
mov
jp
mov
dec
arpl
pop
pop
in
add
dec
paddsw
rcl
lcall
fadds
bound
or
mov
jb
add
adc
mov
mov
movsb
inc
and
addl
fimuls
add
addr16
jg
or
pushf
add
add
mov
push
xchg
mov
xchg
fisubs
and
dec
pop
cmpsb
or
and
mov
push
pushf
add
aas
push
or
out
add
pop
mov
pop
or
pushf
sahf
mov
push
pop
sub
lcall
repz
cmpsb
pop
dec
mov
add
loop
enter
dec
out
negl
push
mov
cmp
addr16
ret
mov
test
add
sbb
addr16
mov
pop
sub
and
cltd
out
inc
idiv
in
mov
mov
stc
add
dec
add
sub
daa
int3
outsl
push
add
enter
cld
outsl
pop
or
fstpt
andb
loopne
add
andb
xchg
das
stos
popa
inc
decb
jecxz
sbb
sbb
lcall
cmpsb
pushl
dec
fsts
aam
cmpsl
outsl
mov
andb
add
adc
add
int
sti
icebp
and
insb
cmp
lds
push
notl
and
cmpsl
inc
inc
dec
lret
test
shll
add
outsl
jne
test
xor
add
into
jbe
fwait
mov
mov
mov
jg
push
adc
push
sub
jb
sub
imul
add
inc
mov
or
jmp
add
cmpsl
imul
imul
add
cs
add
mov
imul
mov
and
sbb
or
addb
add
xchg
jl,pt
pop
cltd
adc
add
cltd
jp
lods
or
in
sub
cmpsl
pusha
jo
sahf
pop
sub
call
popf
sub
cmp
sbb
pop
push
inc
sbb
sub
pop
subb
add
add
add
test
daa
rcr
add
ret
aas
ds
push
stc
sahf
dec
add
or
xchg
pop
mov
call
push
fadds
jmp
js
add
inc
mov
insb
dec
hlt
xchg
mov
lret
lock
push
leave
adc
out
fdivrp
aaa
mov
add
inc
mov
inc
add
lods
jg
sbb
mov
fwait
add
out
mov
in
xchg
dec
cld
add
fcmove
add
imul
push
js
push
add
pop
xchg
lahf
mov
pop
inc
icebp
mov
add
adc
decb
rep
mov
jae
or
mov
cmp
cmp
in
xor
cmp
xor
pop
cmp
cmp
inc
dec
cmpsb
fwait
ja
aas
add
add
test
imul
shrl
add
xchg
mov
adc
xor
out
aam
add
xchg
pop
mov
mov
fstpl
test
jb
loope
inc
push
jle
imul
lods
test
aad
jecxz
lcall
stos
call
jae
pop
shlb
gs
xor
or
dec
push
ret
and
aad
cmp
add
jmp
add
stc
mov
out
cltd
mov
dec
sub
and
sub
movsl
arpl
int3
jge
scas
daa
adc
mov
test
fisttpl
sub
pusha
arpl
sbb
xor
jne
adc
push
popa
fwait
push
sub
dec
popa
xchg
js
imul
jo
cmp
xchg
add
mov
mov
add
jg
test
mov
add
dec
dec
adc
fwait
sub
out
cs
add
pop
mov
test
add
adc
ret
es
adc
add
fisubrs
cmpsb
in
xor
and
pop
pop
cld
leave
ljmp
add
aam
inc
popa
data16
out
divb
fsubrl
cmpsl
js
leave
add
inc
pop
add
add
jg
cmpsb
add
sahf
pop
push
inc
xchg
add
ja
jecxz
push
dec
cmp
mov
out
enter
les
jns
xor
add
repnz
addr16
sarb
lds
out
lea
dec
cmp
icebp
fcompl
int
iret
xor
add
sbb
lods
mov
aas
mov
ret
mov
test
sbb
cmp
out
imul
jmp
pop
jo
mov
aad
sub
mov
add
inc
popa
add
in
mov
fwait
sbb
mov
adc
insb
popl
mov
jae
sub
addb
cmc
mov
mov
and
mov
sbb
or
rcll
enter
dec
and
jg
cwtl
mov
push
orl
scas
and
fldln2
lods
adc
xchg
lock
aad
mov
adc
pop
test
and
leave
add
nop
mov
pop
imul
dec
aam
mov
add
rclb
popf
push
dec
xor
add
xor
cltd
in
icebp
fistpl
dec
pushf
jne
jbe
add
fsubrp
add
ljmp
push
and
mov
imul
shlb
divb
add
sub
jge
daa
push
add
lea
les
inc
loop
sub
lea
push
mov
sbb
xchg
out
das
add
clc
arpl
mov
mov
jnp
outsb
or
cmp
mov
das
adc
imull
sub
add
add
push
stos
jb
mov
cltd
cltd
roll
movhlps
mov
or
movsb
lods
sti
sti
add
ret
xchg
shlb
dec
adc
gs
inc
sbbb
loope
incb
add
aaa
xchg
inc
add
incl
fnstsw
test
jo
adc
in
jo
loopne
in
inc
in
jno
add
inc
mov
add
jb
fistps
sbb
push
addr16
insb
or
jns
popf
and
inc
add
sbb
inc
add
sbb
dec
add
pusha
orb
into
fstpl
scas
sbbb
int
or
add
push
and
xor
jbe
insb
cmpsl
cmp
pop
filds
adc
pop
mov
pop
outsl
pop
les
loopne
mov
jmp
imul
out
pop
inc
push
pop
add
xchg
pop
sbb
pop
stos
mov
lods
and
mov
rcr
outsb
fnstcw
pusha
ja
push
testb
mov
mov
mov
pop
add
cs
aaa
cltd
roll
out
push
push
fmulp
mov
inc
push
dec
dec
loope
mov
jns
hlt
add
and
in
addr16
adc
mov
out
test
jecxz
in
inc
hlt
pop
mov
and
fs
jb
pop
pop
mov
xchg
jmp
inc
shlb
mov
push
stos
mov
or
sbb
add
jp
fldt
mov
jae
movsb
dec
adc
mov
stos
les
ror
xchg
add
imul
data16
std
add
xchg
add
add
sahf
adc
test
in
stos
add
xor
jo
in
mov
sarl
sub
out
add
sarb
add
jne
ljmp
js
cmp
ss
sub
add
xor
add
in
adc
jo
jmp
add
sub
add
add
arpl
pushf
popa
out
iret
and
cmp
cmp
xchg
ret
orl
sub
outsl
out
inc
roll
cmp
stos
add
decb
outsb
dec
test
fsts
push
in
stc
int3
push
in
mov
add
dec
jno
incb
gs
add
and
add
mov
rcrl
push
jg
jg
andb
xchg
pushf
out
out
je
xchg
popl
adc
imul
and
jecxz
xchg
imul
pop
push
add
add
fstp
test
push
add
xor
mov
cmpsb
pop
add
pop
out
out
push
dec
xchg
xchg
jg
dec
stos
fcoms
das
push
std
ret
and
add
gs
fisubrs
mov
sbb
push
dec
mov
xchg
mov
lret
ficoml
add
mov
rclb
into
sbb
xchg
push
add
push
scas
add
xlat
add
lock
add
inc
repz
cmp
cmp
movsl
xchg
add
mov
mov
pop
fcomps
int
call
add
dec
pop
popa
adc
xchg
iret
mov
mov
and
inc
or
push
push
hlt
test
xorl
int
in
push
rcll
jne
mov
pop
out
repnz
repnz
xchg
add
ficoms
add
call
cltd
push
jnp
jo
add
jl
scas
or
aam
mov
flds
mov
dec
inc
cmc
and
and
sub
aad
mov
gs
add
lock
andl
aaa
cmp
outsb
add
mov
inc
insl
xor
adc
add
adc
ja
cmp
cmp
mov
xor
push
dec
add
mov
leave
sub
dec
add
sbb
and
in
inc
jnp
add
fdivrs
popf
dec
and
push
out
xchg
pushf
add
add
movb
add
sahf
mov
ret
std
scas
add
jno
jne
adc
inc
and
add
push
fiadds
sbb
inc
sti
inc
sbbb
add
negb
push
pop
out
lock
stos
sub
xchg
stos
add
lea
dec
mov
adc
add
test
mov
xor
jp
in
push
lret
gs
xor
dec
dec
js
mov
out
add
fiaddl
push
cld
scas
movsb
test
ds
add
int
aam
add
cmp
dec
stc
out
pushf
mov
and
lret
pop
ret
pop
int
subb
out
iret
loope
and
lret
cwtl
jecxz
sbb
das
das
ret
mov
mov
out
cmp
int
fnstsw
lods
mov
call
xchg
sti
call
inc
jb
enter
divl
in
add
cmpsb
xor
pop
mov
test
mov
bound
movsl
outsl
add
pop
sub
inc
and
popl
sub
sub
pop
jno
cmp
cmp
xchg
les
xor
push
add
es
cmovp
xor
bound
sub
pop
xor
dec
stos
ftst
push
sar
add
jo
pop
pop
cmpsb
push
gs
mov
jb
inc
das
repnz
add
xchg
aas
pop
xor
xor
hlt
and
add
fwait
mov
sub
add
mov
mov
pop
xchg
add
outsl
push
xor
mov
fldl
inc
jne
xor
jp
add
dec
stos
xchg
push
pop
cmp
mov
jno
push
cs
xchg
add
xchg
xor
fwait
add
xchg
add
int3
mov
sbb
loop
popa
push
xor
imul
cmp
mov
insl
add
jl
sbb
loopne
in
add
xor
mov
push
rcl
stos
les
mov
lea
mov
mov
add
out
xchg
add
mov
and
pop
or
adcb
lock
cmp
das
leave
lahf
mov
xchg
stc
mov
add
adc
lcall
ds
insl
or
pop
add
and
clc
add
out
stos
inc
xor
mov
push
rorl
aam
push
push
fisubs
ja,pt
xchg
or
outsl
add
loop
insl
and
mov
xor
movsb
enter
jo
std
mov
and
inc
mov
adc
dec
add
sub
rep
jle
mov
add
adc
cmp
xchg
xlat
stos
js
pop
jb
mov
mov
ret
add
notb
testl
cmp
add
cmp
xor
add
jl
lock
add
mov
add
lea
add
cmp
inc
cs
add
add
xchg
add
cmp
test
and
push
add
int
adc
add
push
hlt
hlt
iret
shll
add
pushl
cmp
add
sbb
addl
xchg
xchg
les
add
jge
mov
mov
inc
mov
add
scas
add
cmc
jmp
stc
xchg
enter
ret
lcall
add
sbb
xchg
pop
outsb
mov
cltd
ja
repz
xchg
jo
les
add
mov
add
jae
in
dec
aaa
sbb
or
js
sub
adc
in
stos
xor
jno
add
movsl
jo
ljmp
enter
pop
add
in
fnstcw
xchg
sbb
sub
push
movaps
inc
add
cmp
fistl
add
imulb
ret
or
repz
xchg
aaa
in
add
pop
xchg
outsb
push
lret
sti
fcomps
sarl
sahf
subb
mov
frstor
inc
or
adc
xchg
fs
pop
dec
jle
rcll
test
sbb
pop
mov
add
sahf
incb
js
mov
pop
lcall
mov
addl
lds
jmp
adc
add
and
adc
outsb
pop
pop
or
push
bound
bnd
clc
dec
rolb
mov
lret
add
pop
lea
std
jb
clc
lahf
mov
inc
inc
inc
pop
cwtl
call
je
inc
xor
cmp
pop
insb
fcmovnb
cltd
sub
pop
sub
pop
je
ret
lods
inc
inc
arpl
hlt
jp
cmpsb
loop
push
hlt
dec
lret
jmp
cltd
sub
adc
mov
jnp
inc
imul
fdivs
xchg
xchg
loop
stos
cmp
std
add
add
add
out
ffree
cs
mov
mov
pop
add
ltr
ljmp
cmc
sub
add
sub
xchg
add
inc
and
in
add
xor
add
mov
jbe
cmp
add
iret
add
pop
and
aas
mov
cmp
mov
adc
mov
icebp
xor
pop
push
mov
cwtl
mov
or
mov
pop
inc
add
lods
ds
add
add
xchg
icebp
stos
adc
cs
test
inc
mov
pop
xchg
mov
es
jbe
and
sbb
jl
add
mov
cmp
push
mov
cmpsb
fildll
test
ror
fstps
xlat
jmp
test
call
mov
sbb
mov
xchg
and
add
in
add
out
mov
jno
sub
mov
push
lods
cmpsb
push
mov
out
std
cmp
or
pop
ficoms
scas
and
sbb
inc
add
icebp
mov
sub
add
or
sbb
leave
add
dec
jb
and
add
mov
jno
lret
sub
pop
or
cmp
pop
add
rolb
test
or
push
sub
pop
jns
add
mov
cmp
ja
add
inc
push
xor
call
add
cwtl
xchg
ret
mov
push
xchg
mov
mov
out
pop
inc
daa
push
lret
add
adcb
stos
loopne
sbb
xor
and
clc
add
aad
inc
push
aaa
js
in
test
ljmp
jno
add
jecxz
mov
lcall
jp
xlat
add
rcrb
pop
test
add
mov
frstor
mov
mov
lahf
jl
outsb
and
sbb
push
pop
xchg
pop
fdiv
loop
fs
push
mov
adc
psubd
push
xor
add
xchg
inc
sub
test
or
add
or
lcall
sub
pop
insl
mov
dec
je
jle
outsb
sbb
popa
imul
xor
sbb
inc
ds
sub
pop
mov
cmp
push
add
cltd
mov
mov
add
sahf
leave
or
jge
ljmp
add
add
test
push
pop
mov
xor
ds
sub
xchg
das
dec
add
repz
push
aaa
mov
add
popa
sbb
nop
cmp
cmpsb
test
cld
mov
es
add
sub
repz
add
leave
add
cmpsb
jp
add
or
xchg
test
or
add
or
cltd
push
popfw
adc
arpl
cltd
mov
fcompl
push
mov
xlat
pop
push
add
add
add
scas
jg
popf
push
adc
fdivl
mov
in
cmp
mov
scas
sbb
out
pop
xor
shll
repz
adc
dec
or
dec
test
test
dec
xchg
lods
hlt
adc
push
daa
xchg
cmp
push
cmpsw
ret
add
test
popf
mov
cmp
inc
mov
mov
dec
inc
ja
mov
pop
inc
inc
and
jnp
add
fwait
insl
icebp
jno
add
jns
les
add
add
out
adc
inc
xor
clc
add
add
mov
and
imul
add
cmp
mov
xchg
mov
adc
add
add
add
push
add
mov
push
sbb
mov
loope
hlt
jge
add
shrb
sub
sub
push
rcll
add
pushf
movsb
verw
push
mov
mov
pushf
movl
add
cmp
jle
lahf
push
add
jle
sub
pop
movsb
adc
add
jp
sbb
fwait
andl
adc
xlat
xchg
imul
sub
cmp
add
stos
std
add
mov
cli
out
sbb
xor
js
push
cmp
xchg
xchg
sahf
incl
adcl
or
jp
push
add
cmp
lret
jmp
sub
push
cltd
sub
out
or
sub
sti
jl
fildl
push
test
sbb
mov
leave
push
mov
lea
jecxz
cmpsl
mov
dec
pop
inc
add
sbb
pop
lcall
loopne
mov
add
std
repnz
mov
daa
inc
mov
adc
ja
jmp
sub
xlat
fsub
inc
xchg
and
ficomps
popf
pop
xor
sub
sarb
arpl
shlb
outsl
add
ds
addr16
push
arpl
add
add
and
add
les
adc
mov
add
add
and
cmc
imul
xor
cmp
sbb
fiadds
or
pop
out
shlb
icebp
add
inc
aaa
jge
push
add
jecxz
data16
sub
test
push
xchg
js
xchg
repnz
mov
mov
aas
pushf
sbb
xchg
cmpsl
cmpl
push
mov
scas
pop
daa
xchg
bound
aad
pop
scas
sbb
add
aaa
inc
xchg
adc
addb
inc
dec
outsl
out
add
push
mov
or
adc
mov
add
testb
and
rorl
add
pop
push
adc
push
push
sub
xchg
add
lock
sbb
inc
and
add
lods
das
inc
lret
add
arpl
inc
pop
add
fdivs
lret
adc
cltd
cmpsb
cmp
cmp
mov
cltd
inc
add
cmp
jae
push
push
dec
imul
std
mov
outsl
notb
mov
inc
je
cmp
lods
push
add
leave
fidivrl
sbb
cmp
shrl
sbb
sbb
and
and
push
or
shrb
in
mov
xchg
pop
loopne
shr
rorb
inc
enter
mov
mov
add
sarb
test
jae
sahf
add
add
sub
add
jmp
sub
push
mov
int3
iret
add
lods
std
add
pop
cmp
fisubrl
jne
add
in
loopne
or
xlat
mov
xchg
cs
jo
mov
inc
jo
test
out
out
iret
lds
loope
mov
adc
cmpl
sarl
pop
cmpsl
xchg
add
loope
dec
daa
push
add
pusha
aam
inc
into
jmp
jbe
stos
test
add
and
add
fsubrs
add
pushf
xchg
leave
or
cmp
js
pop
add
sar
pop
sub
loop
xor
cmpsl
sub
scas
aaa
shll
addb
addb
fidivrs
nop
jbe
lods
add
out
push
add
inc
fildl
ret
ljmp
ja
cmp
popf
ds
mov
adc
cmpsl
add
mov
add
addl
test
enter
add
jecxz
jae
sub
cmp
jnp
lds
xor
icebp
mov
adc
and
push
stc
in
popa
add
add
enter
clc
add
add
fildl
push
push
jne
mov
mov
stc
test
into
mov
je
sub
sbb
mov
lcall
mov
mov
add
jp
cli
xor
andl
std
jmp
lock
pop
mov
add
fcoml
popl
xor
enter
sbb
mov
pop
shrl
lock
add
cwtl
add
add
inc
rcll
xchg
xchg
jae
sbb
cmc
add
pop
adc
mov
or
add
jle
jnp
lret
mov
xchg
notl
das
gs
mov
dec
dec
ds
or
xlat
int
jl
in
and
pop
les
sbb
leave
xchg
add
add
mov
xchg
cs
leave
scas
mov
cmpsb
dec
sbb
jne
xor
add
push
push
movsl
loope
outsb
test
dec
mov
cwtl
sbb
pushf
and
callw
push
aaa
pop
cmp
or
movsl
mov
mov
pop
cmp
sahf
push
insb
xor
testb
inc
inc
rcll
xchg
add
lods
add
in
add
push
out
fiaddl
pop
add
add
add
loope
add
push
fbld
inc
add
add
testb
jae
inc
jb
out
adcl
ret
xchg
dec
push
mov
adc
push
add
adc
subb
push
or
pop
jl
push
popa
mov
inc
data16
jmp
xchg
inc
lahf
cmpsb
inc
push
jo
imul
pop
cmpsl
arpl
repnz
jae
fistl
pop
loop
inc
lcall
cmp
inc
fidivl
add
les
mov
xchg
and
imul
add
jg
je
dec
push
aad
cmpsb
aam
mov
mov
cmp
jle
add
sbb
ss
ficoml
or
jnp
push
push
ss
add
test
es
aas
repnz
roll
add
and
xor
jl
aaa
lret
fwait
je
pop
add
pop
cmpsb
aam
and
das
and
mov
str
fimull
fbld
add
hlt
sahf
add
add
jmp
cmp
push
leave
push
subb
or
push
sbbb
cld
arpl
cmp
dec
imul
add
test
in
movsb
and
ret
add
push
jp
add
add
or
dec
and
adc
xchg
cmc
mov
push
sbb
jae
fwait
cmp
mov
dec
sbb
cmp
push
div
pushf
pusha
es
test
push
push
add
arpl
push
xchg
nop
icebp
sub
push
add
rolb
call
int3
sbb
adc
inc
mov
movsb
or
iret
hlt
shlb
pop
and
add
inc
insb
push
mov
test
push
test
dec
daa
fcoml
leave
mov
add
mov
bound
xor
test
xchg
mov
add
and
cmp
cmp
mov
das
mov
add
test
into
sarb
sbb
enter
and
jp
add
lods
add
push
out
cltd
mov
cmp
subb
nop
repnz
and
push
mov
add
dec
dec
mov
pop
fistps
js
mov
imul
xor
inc
jae
dec
cmp
xchg
add
cmp
insb
add
inc
sahf
pop
mov
jo
lods
push
xchg
mov
das
stc
pop
popf
int3
cld
lods
jne
xor
add
pop
add
scas
incb
mov
inc
xor
scas
fdivrl
or
or
sbb
cmp
add
roll
add
lods
shll
lock
dec
mov
and
dec
push
add
gs
lahf
adc
or
add
or
pop
add
pop
adc
push
xor
enter
data16
mov
in
add
mov
add
push
mov
push
jmp
push
pop
mov
jp
pop
adc
push
add
and
add
stos
add
push
int
bound
lods
hlt
cwtl
xlat
push
rorl
add
xor
inc
flds
jb
xchg
cwtl
jb
mov
cltd
mov
stos
push
dec
mov
repz
sbb
sahf
mov
mov
jnp
mov
lds
in
and
add
scas
shl
add
dec
test
xchg
or
in
adc
sub
mov
sti
sub
jns
inc
xchg
pop
jp
dec
cld
jae
into
movsb
test
lds
and
ficomps
push
or
lret
xor
loop
xor
xchg
inc
adcb
das
into
xor
jp
adc
mov
xor
in
add
dec
jge
pop
pop
std
push
addb
sarb
add
sbb
or
adc
loope
pop
sarl
lahf
test
add
sub
adc
dec
lds
dec
pop
add
dec
adc
mov
pop
imul
pusha
push
pop
mov
faddl
std
popa
dec
pop
out
shr
sbb
das
pop
fs
add
mov
pop
dec
dec
xor
addl
mov
and
xadd
lods
testb
pop
pop
add
adcb
test
push
add
add
aas
dec
xor
push
pop
xlat
push
imul
add
pop
sbb
jnp
xchg
jmp
lcall
add
push
mov
or
outsb
leave
fimuls
je
pop
push
pushf
addb
ss
xor
inc
inc
sub
into
mov
out
and
pop
add
stos
imul
lea
and
enter
add
jbe
dec
and
add
or
outsb
xchg
sub
add
das
dec
xlat
out
sub
adc
jecxz
rcl
scas
cmp
and
pop
fwait
add
add
xchg
in
mov
int
mov
ret
mov
or
fwait
cmp
out
inc
add
add
push
jne
rcrb
rorb
add
mov
rolb
add
jp
add
add
negl
xlat
sbb
movsb
push
adc
movsl
mov
movsl
jno
push
lret
fisttpl
mov
add
cmpsl
addl
adc
xchg
jb
jno
add
pop
inc
addr16
adc
sbb
mov
movhps
and
imul
and
imul
scas
add
pop
iret
js
test
test
fildl
xor
sub
daa
addr16
ret
inc
inc
push
and
push
or
sbb
add
rol
in
add
sbb
loopne
sbbb
add
add
xor
enter
or
and
aad
cmp
push
cmp
enter
dec
add
and
pop
adc
data16
add
push
add
imul
loopne
pop
pop
pop
scas
mov
dec
fwait
incl
add
mov
pusha
das
out
and
sti
cmpsb
or
sbb
aad
cmpl
mov
jmp
mov
bound
nop
repz
add
mov
lcall
xchg
test
repnz
dec
into
jg
cmp
stos
push
fwait
jne
adc
add
dec
fwait
je
dec
flds
sub
xchg
mov
pop
xlat
sub
pop
sbb
inc
fisttps
mov
cltd
adc
test
cmc
or
cli
xchg
inc
cwtl
dec
shrl
add
add
jmp
add
add
shrb
push
insb
push
test
mov
add
push
call
insl
dec
cld
dec
cmpsl
push
and
inc
xchg
add
loop
adc
test
arpl
add
test
es
mov
pop
sub
jne
call
pop
shrl
es
test
jbe
pop
add
cmpsb
push
ljmp
add
or
repnz
popf
cmp
mov
sbb
in
imul
repnz
mov
adc
adc
jnp
ret
sub
add
mov
fwait
add
clc
movsl
mov
mov
sahf
sub
push
in
gs
mov
xchg
sbb
add
xchg
adc
lahf
and
pop
sub
pop
outsl
rorl
std
adc
add
subl
inc
add
add
sbb
sbb
mov
pop
add
jne
and
and
mov
fistpl
or
mov
xor
jecxz
imul
cwtl
daa
sbb
add
pop
add
xchg
mov
and
cli
add
xchg
mov
or
inc
jns
and
xchg
cmp
cmpb
and
nop
push
add
repnz
mov
stos
jne
jmp
dec
or
push
add
xchg
sbb
hlt
mov
add
add
inc
jl
dec
and
add
cld
xor
roll
ficomps
jb
popf
sbb
lret
mov
add
pop
lods
add
add
stos
lods
adc
mov
add
push
push
push
inc
xlat
jmp
and
scas
mov
lock
pop
stos
fwait
stos
test
mov
jae
cltd
sbb
mov
xchg
xor
jno
xchg
pushf
add
add
arpl
repnz
pop
mov
lea
adc
out
mov
push
mov
xchg
lods
stos
xor
dec
aam
test
mov
jb
das
movb
fdivp
bound
push
add
clc
mov
add
pushf
and
and
push
dec
cs
add
cmpsl
sub
jecxz
cltd
add
jp
cmp
mov
scas
sbb
pop
loopne
pusha
xchg
push
insb
add
cmpsl
in
sbb
inc
add
push
xchg
mov
lret
sbb
add
inc
in
or
mov
xchg
push
lods
push
add
pusha
aam
or
mov
rcrb
jae
fcoml
sbb
jl
xor
js
cmp
push
jg
sbb
cmpsb
mov
push
sub
in
add
call
jnp
xchg
pop
lahf
rorb
jne
cmp
push
ret
mov
push
insb
dec
popf
lods
aam
xor
sahf
jae
add
dec
push
add
sbb
xchg
adc
add
cmp
mov
scas
pop
lret
xchg
inc
jecxz
jp
xchg
stos
xor
dec
sbb
insb
add
mov
jns
xchg
add
lcall
andl
iret
or
iret
adc
or
add
fistps
push
and
xchg
popf
leave
add
fcmovnbe
cwtl
mov
inc
mov
add
xchg
mov
sub
jmp
es
or
add
add
mov
add
ret
add
inc
pop
inc
add
nop
and
bound
push
add
ljmp
hlt
add
inc
pop
dec
push
stos
das
push
push
mov
or
xor
mov
add
add
loopne
xor
cmp
ja
sbbl
mov
sub
and
shlb
add
mov
mov
xorb
add
test
mov
and
add
add
insb
movsb
insl
xor
jnp
cwtl
out
popa
jecxz
pop
add
cld
adcb
jg
sub
mov
cmp
push
dec
rorb
in
push
leave
sbb
jae
mov
inc
add
push
add
push
push
out
leave
pop
inc
sbb
movsb
add
jno
rorl
fidivrl
loop
popa
jp
sub
push
inc
mov
adc
mov
or
popa
jmp
or
cmc
sbb
add
mov
in
xor
jecxz
adc
cmpsb
jle
xor
jo
mov
ret
adc
inc
out
lods
cmp
into
add
or
sub
cmp
add
stc
ret
xchg
enter
insb
fimuls
movaps
loopne
mov
cmp
sbb
and
push
pop
and
sbb
loop
adc
cli
pop
clc
repz
push
add
out
out
add
add
sbb
push
mov
add
push
mov
rcll
inc
dec
cwtl
lds
lods
add
cmc
pusha
ja
dec
mov
add
addl
cld
ficompl
lret
add
shrb
fdivl
xor
push
push
add
js
loope
xor
adc
pop
mov
lea
test
jb
or
lret
sub
pop
lock
out
stos
imul
inc
inc
sub
enter
rclb
sub
xchg
loop
mull
add
or
add
add
daa
sarb
mov
les
xchg
inc
xor
in
pop
pop
add
or
sti
imul
pop
jo
pop
std
cmp
iret
or
dec
pop
jnp
movsb
arpl
adc
add
sbb
add
test
dec
mulb
push
xchg
sbb
cs
xor
sub
xlat
add
dec
add
mov
outsl
out
fs
fcomps
stc
rorb
jb
add
or
pusha
add
daa
mov
cmp
push
pop
negb
das
mov
sub
xlat
adc
push
dec
pop
adc
pop
push
subl
add
jne
dec
loope
or
xchg
into
inc
jecxz
xor
fiaddl
ja
push
add
adc
add
cmp
cmp
lret
push
idivb
sarb
pop
push
or
js
adc
inc
ljmp
loope
add
add
loop
fstps
sub
mov
mov
rcrl
jae
enter
jne
iret
fwait
sarl
add
xchg
push
js
js
out
add
idivb
mov
push
fisttpl
mov
test
xchg
cmp
outsb
faddl
cmpsl
xchg
dec
xchg
add
sarb
add
addr16
add
enter
sbb
sbb
dec
add
cmp
and
je
mov
xor
jnp
mov
cmp
add
add
loopne
sbb
jp
dec
inc
cmp
add
test
add
xchg
adc
out
push
xchg
imul
pop
cli
addl
mov
test
movsl
enter
shl
add
push
xchg
pop
add
add
add
mov
js
add
xor
add
add
add
mov
xchg
mov
dec
arpl
or
aaa
jae
cwtl
shll
cmc
sbb
xor
push
jmp
cmp
mov
movl
cmp
call
sub
push
fnstenv
cmp
lea
and
xor
jg
add
out
cmpsb
mov
loope
pop
data16
add
lock
add
pop
add
xor
adc
xor
cmp
sbb
sarb
rcr
pop
add
pop
xchg
je
mov
pusha
adc
jge
loopne
cmc
push
shrl
iret
negb
and
mov
pop
adc
pop
lahf
ss
add
aas
pop
add
das
repz
add
add
push
add
sub
data16
jo
or
sbb
xchg
cmp
pop
push
nop
rcr
sub
sbb
mov
inc
sub
test
mov
in
lahf
jno
sti
iret
add
xor
mov
and
adc
sbb
in
aaa
outsb
adc
cs
mov
jp
addr16
add
add
mov
jmp
sbb
sub
adc
inc
xchg
stc
sbb
mov
inc
jg
test
add
cmp
sbb
jo
shll
call
add
inc
rol
pop
add
daa
pop
fsubl
push
lock
add
mov
out
pop
sub
mov
cmc
das
mov
push
aaa
movsl
scas
stos
das
xchg
mov
xorl
movsb
add
outsl
push
xchg
aaa
test
sbb
add
add
or
and
mov
or
pop
pop
pop
shll
add
dec
ficoms
pop
fwait
jno
fwait
sub
or
aaa
nop
imulb
lods
ret
hlt
add
sbb
mov
imul
push
stc
fisubs
icebp
cld
jmp
lahf
test
gs
xchg
xchg
pop
add
cmc
add
xor
add
cmc
mov
jne
out
mov
mov
bnd
das
test
popl
dec
pop
and
or
add
pop
xchg
xchg
add
sahf
sbb
out
sti
dec
mov
xchg
lods
add
arpl
sbb
imul
loopne
lods
sub
jmp
pop
sbb
add
aad
clc
cli
and
pusha
add
int
mov
add
xor
add
das
mov
daa
xchg
and
xchg
fwait
cltd
mov
mov
push
xchg
add
femms
repnz
xor
cmp
xchg
sbb
mov
in
ljmp
cmp
inc
add
add
push
inc
sub
mov
rorb
ficomps
mov
inc
cmp
das
in
scas
lahf
lahf
orb
scas
ds
dec
std
add
add
repz
inc
je
cmp
xor
daa
add
xor
mov
xchg
push
add
fs
add
pop
sub
xchg
sti
test
pop
fucomp
jge
out
cmp
outsb
dec
push
sub
add
insb
je
cmp
shlb
xlat
push
xchg
js
rorb
cmp
jecxz
in
cwtl
push
add
mov
clc
inc
in
pop
fisubrs
adc
addl
test
pop
and
loop
add
verw
sub
and
test
lock
xcrypt-ctr
cmpsl
pop
push
mov
dec
add
sub
or
push
add
push
mov
add
or
and
add
cmp
dec
jge
add
adc
add
or
in
mov
cmp
add
adc
xchg
jnp
jecxz
inc
adc
adc
mov
cmp
lock
and
aas
add
fistpl
mov
push
pop
mov
push
int3
jmp
lret
repnz
rol
nop
fists
iret
mov
data16
push
mov
pop
add
insb
xchg
inc
test
jmp
push
xorb
xor
sete
add
je
sub
mov
mov
sub
sbb
ljmp
arpl
mov
add
or
movsl
adc
lea
shlb
add
mov
aam
outsl
lcall
aaa
es
jecxz
and
mov
add
out
xchg
mov
mov
jge
xchg
or
pop
adc
ret
daa
jp
loop
push
scas
add
or
mov
icebp
jnp
or
cmpsb
int3
pop
cmp
fstp
xchg
pop
les
add
mov
dec
pop
jbe
pop
imul
and
jl
mov
ret
in
mov
dec
call
push
movsb
pop
test
les
add
jo
or
ss
xchg
xchg
sub
push
jnp
add
in
adc
fisubrl
cltd
shlb
ljmp
ds
popf
rcrb
shlb
enter
dec
push
add
push
clc
and
out
mov
add
xor
cmp
pop
imul
adc
das
lret
add
ud1
xlat
push
xchg
add
pop
ret
cmpsl
mov
and
mov
xchg
ss
add
pop
loopne
add
mov
outsb
xchg
push
sbb
shll
mov
pop
int3
cmp
adc
jle
imul
data16
inc
xchg
mov
addr16
push
mov
cmp
lock
inc
add
mov
xor
add
add
mov
mov
and
cmp
pop
incl
leave
push
xchg
or
scas
mov
add
add
mov
push
ds
add
mov
mov
les
adc
xchg
push
xlat
push
or
aaa
mov
sahf
mov
mov
push
sub
lea
xor
movsl
fstl
mov
pop
mov
add
sub
dec
add
lea
sub
jp
pop
ret
test
sub
add
cli
lds
or
dec
adc
daa
mov
add
sbb
xor
mov
sub
mov
clc
cld
sbb
add
cmpsb
mov
jecxz
mov
cmpsb
mov
xchg
ljmp
lret
add
inc
repz
lock
push
or
jg
push
bound
mov
and
add
aaa
xor
cmp
cmp
cs
or
mov
cltd
popa
pop
adc
imul
cltd
xlat
cs
sbb
add
xchg
add
and
inc
add
ds
les
xchg
scas
mov
insl
fnstenv
push
xchg
inc
and
add
outsb
test
fdivrp
push
adc
nop
out
test
pop
mov
loopne
xchg
or
scas
rcrb
adc
out
lret
loopne
lahf
fwait
adc
imul
popl
dec
repnz
lahf
add
mov
add
ds
xor
push
jnp
shl
xchg
test
xchg
insb
insb
enter
mov
add
rclb
fs
sub
ds
repz
and
or
inc
out
dec
xchg
out
pop
add
mov
lods
lds
or
jg
or
cli
fprem1
ret
out
ret
xlat
pusha
mov
cmp
cli
cmpsl
or
jbe
jns
leave
and
incl
aam
xchg
mov
and
mov
or
pop
jns
cmc
lret
add
sahf
scas
add
mov
bound
adc
xchg
lret
nop
mov
lods
test
repnz
loop
and
ja
pop
add
cmp
sub
add
or
mov
gs
fistps
mov
add
fisttpll
fisubl
leave
add
adc
adcb
add
mov
add
xchg
mov
cmp
cwtl
fcmovu
movsb
add
push
sub
inc
cmp
dec
insb
rclb
mov
mov
sub
addl
mov
adc
xchg
xchg
jg
stos
sbb
pusha
ljmp
sar
push
push
je
inc
adc
inc
cld
sbb
cmp
or
mov
push
outsl
add
add
dec
jae
roll
lock
data16
mov
movb
addr16
fsubrl
faddl
add
mov
in
popa
inc
cmp
xor
xchg
pusha
lock
iret
add
add
add
fsts
iret
xor
mov
add
mull
mov
cs
je
test
mov
fsub
std
jge
push
inc
inc
or
jb
xor
loope
xor
cmp
or
and
movb
add
adc
test
dec
pushf
lret
xor
xor
push
fdivrs
sub
push
push
fnstsw
adc
push
cs
decb
cmp
out
cmp
cwtl
add
add
jg
and
mov
jbe
inc
inc
add
lret
test
mov
mov
cmpsl
or
scas
dec
cmc
xor
and
xchg
scas
popa
xchg
xchg
adc
pop
add
sbb
add
add
or
js
clc
add
sahf
sbb
add
add
add
cwtl
cmp
mov
push
out
add
xchg
jge
ljmp
cmp
hlt
hlt
pop
sub
insl
add
orb
push
push
std
imul
js
in
xchg
and
jns
sahf
insl
or
cld
push
pop
andb
add
stos
add
das
xor
add
jbe
jo
scas
pop
add
and
fidivl
pop
ja
jne
scas
xchg
shlb
or
cmp
adc
icebp
inc
cmp
loopne
dec
cmc
mov
mov
outsb
rcrb
mov
pop
push
cmpsb
xor
pushf
in
inc
push
loopne
out
movsb
fildl
pop
pop
jp
jl
and
mov
hlt
je
or
jno
nop
out
sub
ja
hlt
xorb
pop
pop
in
mov
dec
mov
sbb
jne
add
xchg
in
iret
out
ljmp
adc
jo
loop
daa
xchg
xorb
faddp
or
mov
nop
pushf
jns
add
nop
lods
mov
test
xchg
sbb
mov
je
or
cmp
and
inc
sub
xor
repz
push
fmull
inc
jmp
das
add
push
popf
test
adc
xchg
add
xor
pop
pop
xchg
call
mov
dec
loopne
rclb
and
arpl
mov
dec
int3
test
mov
push
add
mov
fmuls
pop
push
push
add
add
inc
add
push
fcompl
jo
imul
dec
mov
jae
xchg
mov
xlat
adc
sahf
das
cld
mov
fiadds
mov
loope
mov
pop
and
and
jmp
push
add
mov
add
mov
in
mov
dec
hlt
inc
xchg
and
out
test
lods
add
int3
cmp
cmc
pop
mov
aas
dec
and
aaa
imul
or
add
hlt
testb
add
and
out
jg
inc
add
ljmp
inc
outsl
mov
movsl
fwait
add
repz
add
sub
es
xchg
mov
push
add
dec
clc
rolb
ss
or
mov
add
data16
jns
dec
sub
inc
test
add
pop
mov
mov
stc
dec
in
xor
add
or
out
mov
push
js
ljmp
sub
xchg
jnp
je
add
pop
hlt
add
pop
mov
scas
fnstsw
movsb
mov
arpl
lret
xor
add
mov
mov
inc
xchg
call
sbb
rcll
mov
leave
xor
push
inc
in
pop
out
pushf
jae
xlat
cmp
iret
aaa
adcl
mov
add
stc
fldl
hlt
pop
jb
movsb
int3
cli
repnz
int
stos
add
cmp
pop
ja
adc
add
lods
and
cmp
and
xchg
xor
sahf
movsl
jmp
repnz
push
mov
add
cmp
dec
test
pop
xor
add
cli
dec
scas
repnz
insl
lock
jmp
jge
push
mov
xchg
data16
popf
dec
mov
adc
cld
mov
mov
pop
add
roll
add
mov
and
ret
mov
mov
popf
test
cmp
xlat
add
push
xor
inc
add
enter
push
add
and
xor
or
ret
or
shlb
xchg
stc
clc
lea
adc
cmp
ret
pop
mov
cmpsb
clc
inc
jle
and
dec
les
shrb
add
adc
xchg
push
mov
aas
push
cli
jo
hlt
mov
pop
xor
mov
repz
xor
addb
add
out
jno
add
imul
jne
mov
dec
cld
mov
loope,pt
jb
out
mov
mov
mov
jmp
fdivrl
or
leave
rcrb
xor
pop
sahf
xor
ret
movsb
xor
add
shr
repz
xchg
inc
sub
inc
add
es
fwait
dec
pop
push
jmp
xchg
mov
mov
outsl
jnp
data16
add
sbb
mov
out
inc
ret
imul
add
xchg
cmp
inc
add
add
push
add
pop
cwtl
pop
clc
inc
inc
dec
call
adc
in
push
jb
pop
les
push
dec
adc
pop
add
mov
mov
sub
lret
mov
adc
out
popa
mov
arpl
dec
clc
mov
out
sub
cli
sbb
adc
movb
sahf
insb
push
mov
pop
sub
and
mov
mov
push
mov
insl
push
dec
loopne
mov
loopne
bswap
push
loop
jp
test
test
imul
ret
add
and
sub
leave
dec
push
mov
out
mov
add
push
add
in
add
xor
repz
sbb
add
std
pop
rcll
mov
loop
push
dec
jmp
inc
mov
mov
data16
xor
add
inc
add
movsl
sub
push
add
sti
scas
fwait
add
mov
cwtl
lods
sub
cmp
ds
mov
sub
mov
das
add
push
sti
cld
mov
push
adc
mov
mov
inc
and
fidivrl
xchg
ja
mov
mov
and
xor
xchg
test
pop
add
movsl
or
testb
movsl
ret
dec
iret
add
add
rsm
dec
popf
jl
pop
add
and
and
sub
or
out
add
add
mov
or
adcb
sbb
lahf
or
jns
pop
add
std
jecxz
jo
je
les
add
inc
xchg
sbb
pop
popa
add
ljmp
and
sub
push
xor
aas
sub
add
jne
add
xchg
add
daa
pop
aas
rcll
add
lea
adc
sub
mov
inc
addr16
test
mov
pop
orb
popa
add
jne
pop
jp
or
mov
outsb
push
inc
pop
rcrb
pusha
jne
and
pop
pop
nop
arpl
cmp
icebp
std
push
scas
dec
addr16
mov
add
push
fdivrl
mov
add
sub
mov
jmp
lcall
xchg
cmpsb
add
pop
jle
push
mov
fistl
cmpxchg
push
sbb
sbb
cmp
cmp
sub
shlb
out
inc
icebp
cli
adc
push
xor
mov
movsl
pop
pusha
outsl
mov
insb
add
inc
or
popa
add
fcoml
add
cmp
nop
ret
pop
lods
dec
ret
jns
pop
jmp
div
es
add
add
push
add
push
add
mov
add
mov
aad
add
in
push
push
pop
jecxz
enter
adc
aad
xlat
add
or
add
hlt
inc
xchg
adc
sbb
mov
scas
push
sub
lcall
pusha
add
in
add
push
aaa
lock
test
or
mov
enter
js
stc
dec
xor
jne
mov
mov
cmc
push
negl
ret
and
push
testl
cmc
out
inc
cmpsb
ficoml
push
add
mov
sub
pushf
outsb
stos
fisubrl
add
sbb
pop
adc
pop
add
ror
lods
inc
add
call
add
push
add
dec
and
js
dec
jl
dec
cs
jbe
aaa
out
jmp
aad
leave
add
sub
andb
mov
push
fisubl
cmc
pop
test
nop
cmpsl
mov
lods
or
test
clc
and
push
rclb
fildl
xchg
ss
add
push
js
lds
imul
out
mov
sbb
add
fiadds
mov
mov
mov
pop
ljmp
push
mov
int3
adc
mov
jmp
sahf
add
dec
xor
push
cmp
or
pop
ss
sub
jnp
sub
sar
add
add
push
jb
jge
out
pop
add
fsqrt
add
ljmp
pop
inc
push
sub
and
lods
xchg
out
fsub
inc
in
imul
add
adc
lahf
scas
jmp
or
xchg
ss
push
xlat
sbb
adc
adcb
hlt
sbb
xchg
fs
js
cld
add
inc
add
pusha
add
movsb
mov
and
mov
movsl
push
sub
rcll
in
add
lahf
mov
aad
adc
jns
add
divl
mov
xchg
add
lea
push
add
mov
movsb
dec
inc
adc
or
sahf
fs
mov
mov
ffreep
fwait
cmp
das
jo
loope
push
add
jo
stos
fsubr
imul
enter
mov
add
jo
ds
add
test
mov
mov
js
add
inc
fucomp
adc
add
pop
pop
push
dec
add
aam
jge
inc
xor
movsl
jns
xchg
pop
into
inc
movsl
mov
cmp
je
in
mov
pop
ficoms
add
xor
xchg
sti
add
pop
and
dec
idivl
adc
xor
shll
fcompl
cmp
add
add
loope
jmp
add
push
in
mov
sub
xor
push
and
xor
out
xor
jge
sub
pop
cmpsl
cmp
adc
or
pop
aad
add
imul
mov
adc
add
inc
inc
aaa
test
stos
es
adc
leave
mov
push
outsb
cmp
hlt
pop
or
push
add
cmp
and
shll
xor
les
and
mov
cmc
fmulp
roll
fisttpl
push
cmp
inc
add
mov
popa
gs
movb
mov
adc
subb
cmp
xchg
dec
pop
cmp
mov
cmpsb
xchg
fcmovne
repz
jnp
out
jbe
jnp
add
sub
sbb
clc
jae
sub
cli
scas
cmp
jecxz
fadd
sahf
loop
pop
xchg
dec
pop
test
je
jecxz
jp
les
insl
lea
push
add
aaa
loop
xorb
push
lock
add
add
mulb
inc
xchg
es
std
add
popf
inc
sbb
add
add
add
stc
jbe
clc
pushf
ret
mov
cltd
insl
mov
movsb
sub
lock
push
dec
jo
adc
out
or
jp
xchg
push
cltd
jbe
push
test
rclb
pop
aam
scas
add
jmp
add
dec
stc
xchg
jnp
stos
pusha
mov
cld
fnsave
dec
aam
push
mov
mov
add
xchg
leave
mov
and
and
add
add
loope
jg
gs
test
or
jne
jl
add
sub
add
cmpl
add
outsl
loopne
call
cmp
daa
out
add
or
mov
es
ljmp
aad
and
sub
test
xor
sar
rolb
lcall
push
fcompl
or
or
fs
xchg
stc
add
dec
or
mov
xor
xorl
mov
mov
mov
loopne
mov
add
cmp
pop
out
in
sub
sub
test
out
lret
cmp
ja
loope
or
mov
pop
movsb
movsb
cltd
or
and
lods
add
fwait
add
lock
jecxz
nop
push
out
sbb
pop
or
lds
add
inc
jmp
jge
push
ficomps
aam
jo
or
aaa
add
pop
pushf
mov
in
xchg
add
out
xchg
add
jmp
stos
and
jb
out
cmp
push
add
mov
fisttpl
xor
dec
adc
mov
mov
mov
insb
dec
outsb
add
das
push
xchg
mov
add
imul
stc
add
movsb
in
test
rcl
sbb
rclb
das
pop
jle
mov
pop
adc
add
add
add
jg
leave
mov
xchg
hlt
sbb
add
lret
add
add
push
inc
out
push
pop
xchg
add
sub
lahf
repnz
add
mov
cs
jl
and
subl
or
push
aam
add
mov
and
ss
mov
insl
daa
out
add
setnp
lcall
iret
lds
mov
js
add
and
inc
add
or
xor
cld
out
ret
dec
fidivrl
push
in
or
imul
push
adc
jo
fildl
lea
rolb
sub
and
adc
pop
jb
ja
xor
add
jge
outsl
mov
cmp
xorb
sbb
outsl
das
ficoml
ret
cmp
add
xor
test
sub
dec
pop
jp
push
sub
push
mov
mov
ret
hlt
pop
add
mov
add
add
xchg
insb
sub
push
lods
fildll
orl
add
sub
cmp
pop
in
add
jl
pop
add
insb
mov
fistpl
data16
aad
add
push
jne
xchg
lods
adc
pop
or
adc
push
stos
lock
fidivrl
dec
fcoms
std
lds
jae
shrl
cmp
iret
lahf
inc
push
std
xchg
xor
mov
add
mov
push
adc
sub
scas
mov
pop
subl
data16
jmp
cwtl
je
lcall
cld
push
add
lcall
cmp
stos
cmp
cmp
test
add
jo
imul
sti
or
dec
pop
fnsave
cmp
je
jb
push
fstps
ss
dec
jl
sub
add
sub
xor
lret
push
movaps
hlt
dec
or
add
lret
test
sbb
testb
push
mov
mov
add
pop
jne
add
cmc
push
jne
int3
add
add
out
dec
lods
cli
rorl
add
enter
pop
icebp
jge
cli
xor
int
stos
cli
mov
add
int3
lahf
testl
cmp
push
out
jp
lods
sub
insl
cwtl
add
add
aaa
lahf
mov
mov
fldl
push
ror
and
mov
inc
jg
and
pop
add
movsb
aaa
mov
shr
js
cli
pushf
add
jnp
add
add
add
xor
es
add
sbb
xchg
adc
add
sub
push
cld
and
xor
mov
lea
lods
loop
pop
mov
cwtl
cwtl
pop
and
mov
es
std
or
add
sbb
in
jno
cmp
dec
in
pop
jecxz
xchg
scas
add
add
dec
aam
in
sbb
add
ret
add
loop
sbb
mov
xlat
mov
add
add
in
ds
cmpsl
adc
aam
pusha
add
adc
xchg
xor
jbe
add
jbe
add
cmpsl
pop
cmp
stc
add
lahf
xor
js
outsl
clc
enter
sub
mov
iret
mov
insb
or
icebp
mov
and
or
int
sub
pushf
adc
add
mov
jle
xchg
adc
add
mov
cmp
out
sbb
std
xlat
cltd
add
inc
ds
add
jne
inc
mov
into
sub
loopne
pushf
pusha
xchg
incl
cmp
fstl
int3
push
pop
hlt
rcr
push
aad
mov
xor
or
sar
adc
test
xchg
mov
stos
jmp
ss
mov
adc
fdivp
xchg
arpl
cwtd
add
mov
add
xchg
mov
add
add
imul
xor
push
dec
mov
add
add
pop
add
pop
mov
add
shlb
jg
cltd
push
adc
daa
iret
movsl
add
dec
add
fcoml
mov
push
or
add
jecxz
subb
add
add
push
add
ds
jne
lea
mov
add
xchg
add
add
push
push
xlat
aaa
loop
xchg
movsb
shlb
hlt
daa
arpl
cwtl
pop
sbb
stc
add
xor
fcompl
fs
add
sahf
dec
add
pop
lds
adc
femms
xchg
cld
ficomps
lea
icebp
push
xor
add
add
addl
and
push
sub
mov
enter
sub
clc
sub
enter
cmpsb
add
repz
push
idivb
cmpsl
adc
stos
or
add
mov
add
dec
add
daa
dec
andb
lds
cld
mov
cmpl
pop
jbe
pop
xor
icebp
push
inc
icebp
cli
and
add
movsl
add
xor
lea
xlat
sbb
jmp
xor
fisubrl
sub
out
xchg
test
loopne
push
fadds
ds
sti
bound
ret
mov
ja
inc
je
add
add
testb
add
fdivrl
dec
sti
jo
or
xor
jbe
or
xchg
cmp
shl
movsb
pop
add
mov
push
sub
enter
out
push
add
inc
fisubrl
ss
lea
in
xchg
cmpsl
add
xor
ss
pop
adc
cli
cmp
add
test
add
sub
std
std
insl
pop
jge
lret
mov
add
sbb
inc
hlt
add
filds
mov
fdivl
ljmp
add
jp
mov
and
mov
jg
mov
daa
add
add
cmpsl
jnp
fbld
xor
insl
push
pop
or
ret
mov
add
cld
mov
mov
add
and
js
add
add
push
adc
and
test
cmp
popa
mov
push
dec
inc
movsb
xchg
lcall
lret
dec
cwtl
xchg
in
nop
inc
incl
cld
fsubs
out
xchg
add
rorb
pop
mov
cmc
jge
xchg
push
jecxz
movsl
je
imul
aad
sub
lock
add
nop
scas
das
cmc
add
aaa
and
mov
rcrl
cwtl
pop
lahf
mov
sbb
int
sbb
sbb
mov
dec
xor
mov
or
dec
pop
sub
les
push
or
repnz
test
lahf
add
rep
jb
lods
inc
rolb
popf
and
push
addb
add
imul
popa
push
mov
xchg
add
shrb
add
add
or
push
mov
pop
dec
pop
sub
fs
daa
sub
xorb
movsl
lods
js
jmp
leave
xor
cmp
into
xor
push
add
add
xor
dec
daa
push
cmp
adc
out
sbbb
push
iret
cmp
lods
add
sub
repz
stos
pop
adcb
pushf
xchg
add
adc
add
imul
adc
mov
jp
dec
fsubr
mov
and
add
add
xchg
sahf
out
pushf
gs
aam
loop
pop
cmpsb
lds
bound
das
xchg
sbb
add
jl
flds
sbb
pop
mov
mov
pop
sub
ret
sahf
xor
inc
rolb
pop
pop
repz
mov
insl
xor
push
js
mov
ja
mov
rcrb
mov
lea
xchg
and
xchg
jle
and
sub
in
les
add
in
subl
fwait
adc
mov
adc
scas
movsb
inc
mov
ficoml
ds
sub
sub
cltd
sbb
cwtl
or
je
fwait
sahf
jge
add
xchg
xchg
outsb
and
sti
xor
loope
jge
jl
pop
cmp
mov
mov
add
mov
icebp
stos
rolb
loopne
jecxz
sub
add
jg
mov
add
fiadds
lret
fnsave
sbb
mov
jecxz
movlps
scas
sub
push
mov
insl
test
stos
lret
xchg
add
cmp
xchg
ror
push
ja
bound
lods
fwait
lret
inc
add
pop
ficomps
mov
mov
lahf
andb
loop
addb
les
in
or
mov
cmpsl
add
push
sbb
jne
stos
push
sub
int3
add
sbb
push
stos
pop
cmc
xor
mov
xor
mov
outsl
push
scas
sub
inc
and
iret
adc
pop
or
add
adc
lcall
mov
jbe
mov
imul
add
pushf
xchg
mov
jae
cmp
int3
or
dec
jo
lcall
cmp
add
addl
add
mov
dec
sub
add
pop
lret
add
adc
lea
popa
mov
nop
sbb
push
add
shll
addr16
mov
add
xchg
sarl
mov
jge
or
mov
push
cld
mov
mov
xor
movsb
mov
add
pusha
jnp
addb
jecxz
cmp
fdivs
xor
cld
fistpl
shrb
add
jb
std
test
std
sub
pop
gs
lret
fwait
cmp
nop
mov
stc
push
push
jbe
fadd
stos
dec
mov
lods
clc
push
mov
stos
add
sbb
pusha
jle
or
adc
sbb
leave
fcmovnbe
in
mov
xlat
mov
outsl
cwtl
pop
cmpsb
clc
add
cmp
xchg
jno
push
add
add
sahf
add
and
add
pop
mov
sbb
in
fiadds
add
mov
pop
adc
pop
shrb
data16
mov
test
dec
add
push
fbld
js
repz
add
in
sbb
pop
mov
arpl
add
and
inc
pop
jns
adc
push
xor
mov
loopne
ja
cmp
or
pop
cmp
lods
incl
in
scas
test
dec
subb
add
sbb
xor
xor
leave
cs
in
test
roll
cmc
or
jae
jbe
push
cld
aam
sbb
js
push
and
add
cmp
sbb
addr16
push
add
jp
arpl
lcall
insl
cwtl
push
repz
fadd
jno
fcompl
add
add
sbb
dec
repnz
ja
mov
pop
enter
add
and
lret
mov
jmp
dec
add
jl,pt
pop
test
jb
sub
adc
ret
mov
into
or
stc
mov
test
jbe
inc
add
out
add
xchg
inc
mov
loope
add
repz
decl
jo
push
mov
or
addb
or
inc
mov
aad
cmp
sahf
in
add
adc
xchg
mov
add
xor
push
sub
add
testb
fimuls
mov
out
int3
add
stc
dec
mov
or
pop
cmp
xchg
add
mov
jb
and
jnp
pop
add
pop
insl
add
add
fstl
aaa
add
wbinvd
fcmove
mov
add
je
mov
cmp
xchg
into
repnz
add
add
jl
cmc
xor
jbe
add
mov
pop
rorl
data16
mov
and
pop
fisttpl
cmp
cmc
xor
inc
imul
xchg
mov
pop
mov
jecxz
jmp
jle
and
leave
ds
add
aam
cmp
in
sahf
push
add
add
jns
stos
mov
sub
popa
daa
xor
mov
test
lods
cld
push
add
ljmp
mov
and
mov
add
add
push
fdivrl
outsl
mov
xchg
xchg
cmpsb
add
push
repz
cltd
and
add
sub
xchg
sbb
push
iret
and
mov
fdivl
ret
adc
arpl
popa
add
pop
and
loopne
pop
lea
int3
fidivrs
subb
pop
mov
dec
xor
add
adc
jb
jo
das
sub
test
std
inc
add
lods
xor
pop
add
add
lods
into
mov
jle
push
pop
pop
lods
in
movsl
mov
or
pop
ficoml
ljmp
push
jne
stos
ljmp
aas
xor
addr16
add
jmp
sbb
and
dec
sbb
sarl
add
jns
ret
cmc
mov
mov
push
out
or
ficoms
and
add
sub
cltd
adc
inc
or
add
rol
mov
leave
js
add
int
ljmp
adc
shll
je
fadd
lret
push
adc
sub
push
test
sarb
dec
mov
pop
mov
sub
ficoms
push
aam
pop
fstp
fisubs
push
les
cmp
movsl
rolb
push
orb
pop
and
ss
clc
adc
push
push
jne
fdivs
arpl
lds
mov
in
add
out
xchg
or
imul
aaa
fwait
aam
aad
sub
add
mov
loopne
dec
add
add
add
lahf
push
dec
imul
or
push
pop
fldt
add
pop
mov
pop
jae
js
add
ja
push
add
push
add
mov
iret
sbb
imul
ja
add
jnp
dec
dec
test
dec
pop
add
outsb
or
andb
stos
fwait
add
push
xchg
mov
push
or
xchg
shrd
sbb
int
test
adc
jecxz
and
test
out
enter
scas
sub
push
add
mov
adc
sbb
arpl
mov
xchg
push
add
push
stos
xchg
add
insl
add
lods
xchg
sbb
jbe
cmp
xor
movsl
add
stos
fbld
fdivrl
pop
stos
aam
sub
jp
sub
pop
fnsave
push
add
fwait
imul
add
add
loopne
add
jl
or
int3
jl
and
xchg
pop
xchg
jo
lock
loop
cmp
dec
out
adc
sub
dec
je
cld
mov
pop
pop
add
pushf
add
cmp
xchg
repnz
push
testb
mov
cmpsl
gs
add
dec
cmpsb
cmpsb
jbe
mov
sub
xchg
cmp
std
add
sahf
out
add
or
popf
popf
jp
push
std
cmp
jae
idiv
mov
cltd
stc
testb
ret
xor
aad
mov
iret
adc
add
add
movsl
add
insb
fs
xchg
inc
cmovne
sub
mov
scas
pushf
pop
or
xor
bound
aaa
inc
add
add
add
lret
hlt
jge
pop
jge
or
sub
in
test
aas
pop
insb
fnstsw
jmp
and
filds
jbe
lret
test
xor
add
mov
jno
inc
add
push
sub
lahf
add
dec
add
xor
test
out
test
repz
jle
mov
test
out
enter
sbb
lods
imull
push
sbb
jae
outsl
xor
mov
or
add
pop
call
xchg
and
sbb
mov
jmp
fldt
add
add
sbb
lds
rolb
movl
add
add
xchg
add
xor
dec
iret
sub
mov
inc
add
sub
mov
xchg
ret
test
jo
add
add
test
push
fisubrs
fsts
pop
aaa
mov
aas
inc
setae
outsl
out
sbb
sub
mov
xor
das
add
ret
mov
inc
mov
add
xchg
outsl
gs
jb
jge
dec
imul
adc
sbb
in
ret
mov
inc
inc
xchg
fs
in
rclb
jmp
ljmp
jae
and
arpl
sbb
ja
cli
xor
sarl
cmp
mov
std
ret
add
jnp
les
xor
add
pop
add
dec
mov
mov
jge
pop
maxps
rclb
jnp
push
outsl
xchg
icebp
mov
outsl
ljmp
adc
jecxz
es
xchg
insl
fiaddl
push
xlat
push
sub
imul
mov
scas
push
add
loope
mov
fbstp
jecxz
and
into
jg
in
xchg
loop
push
or
pop
pop
jns
jnp
xchg
test
add
adc
jne
xor
xor
dec
or
push
pop
add
push
cmp
adc
sub
dec
adc
push
lods
xlat
mov
jecxz
inc
jno
add
jbe
loop
and
or
and
pop
movsl
fadds
ret
std
dec
aas
and
sbb
pop
pop
mov
mov
fisubrl
test
clc
push
xchg
pusha
lret
jecxz
sahf
testl
adc
in
lcall
mov
cmpsb
cld
jp
mov
movsl
imul
outsb
ret
add
mov
adc
mov
mov
mov
xchg
adcl
pop
in
arpl
gs
and
inc
push
repnz
add
mov
cmpb
das
out
dec
pusha
movsb
jae
adc
add
lret
mov
inc
add
xor
dec
rcrl
fcmovb
mov
setle
adc
xchg
xchg
add
adc
add
add
add
pop
addr16
xor
stc
xor
cmp
and
sub
mov
cmp
mov
data16
out
and
sbb
push
push
dec
adc
inc
jecxz
add
dec
push
ds
add
add
cwtl
add
xlat
xacquire
test
add
bound
mov
nop
adc
lret
into
sub
mov
ja
shrb
mov
sub
pushf
mov
lcall
jge
add
lods
cmpsl
lret
mov
ds
jle
shrb
pop
in
add
stos
or
std
xor
and
dec
je
and
or
lods
xor
add
xchg
stos
add
xchg
mov
add
xor
subl
loopne
pusha
push
add
testl
fdivrs
pop
mov
popa
pop
stos
or
mov
add
das
and
sbb
mov
fdivs
enter
or
sbb
cmp
add
aaa
das
cmp
or
push
pop
ljmp
xor
repnz
mov
fsubr
add
sti
stos
push
cmpsl
or
outsb
inc
roll
pop
data16
icebp
sub
mov
xchg
lea
sbb
or
add
popf
sub
ret
fiadds
add
pop
aaa
jle
jl
lret
dec
sub
cltd
mov
mov
test
add
scas
and
jg
pusha
add
mov
jbe
test
and
push
pop
jb
pop
add
movb
pop
inc
push
xchg
sub
je
add
stos
add
cmc
jmp
int
and
dec
repnz
xor
ljmp
stos
cmpsl
add
insl
push
dec
push
add
scas
sbb
xchg
xor
lds
dec
outsl
or
mov
pusha
jns
insb
add
add
add
and
nop
mov
inc
pushf
add
mov
insl
stc
dec
adc
push
pop
inc
aaa
sub
outsb
add
add
xor
cmp
push
xor
inc
add
jp
jnp
addl
sbb
xor
sbb
dec
movsl
jp
add
sbb
std
push
iret
setnp
enter
push
pop
mov
mov
or
aas
les
push
push
int3
xchg
cmp
add
andl
push
mov
ljmp
ja
add
gs
cmpsb
or
fsubr
pop
jno
ret
xchg
mov
inc
andb
mov
jecxz
out
add
add
push
dec
push
lret
add
test
mov
add
or
and
and
push
scas
xor
or
pop
jg
cmp
add
loop
in
mov
mov
clc
and
popf
add
cmp
fwait
pop
cmc
add
lcall
cmpsb
mov
add
pop
fsubrl
xor
add
add
rcll
cld
add
sub
push
shrl
stos
aad
int3
add
and
addr16
and
lods
add
xor
outsb
dec
inc
mov
or
add
push
scas
add
lret
rcrl
mov
add
test
mov
xor
lahf
xor
push
add
or
xchg
add
ja
insb
mov
inc
psubusw
nop
mov
xchg
das
push
sti
xchg
mov
xchg
into
cmpsb
jns
push
decl
add
loope
adc
out
adc
comiss
add
xor
pop
sarb
push
cmp
iret
loope
jmp
in
push
pop
add
mov
mov
insb
xchg
lds
add
or
test
shll
sub
sub
push
ja
popa
mov
popa
mov
and
add
inc
fnstcw
out
bound
adc
lods
test
mov
jl
cmpsl
add
mov
fs
ret
jp
loope
add
lcall
xor
pusha
je
add
out
aaa
dec
roll
add
inc
pop
add
sahf
test
xchg
fidivrs
sub
dec
stos
adc
add
out
fadd
pop
insl
mov
sub
and
xor
push
xlat
test
push
add
orl
xchg
sbbb
loope
sub
scas
pop
jo
jno
add
out
es
push
out
sub
loop
movsl
mov
push
mov
dec
mov
pop
xor
add
mov
mov
outsl
std
in
lock
jno
jne
push
scas
add
popl
sub
out
jl
cli
cwtl
jae
push
aad
jmp
dec
fimuls
and
xlat
shrl
add
cmc
sbb
pop
les
dec
vpshaw
push
int3
fstps
push
pop
xor
add
add
push
daa
jb
add
sbb
cmc
fwait
cs
and
jl
push
sbb
add
sbb
add
call
cmpsb
add
fs
pop
sub
mov
movsb
xor
push
dec
add
lods
bound
pop
test
dec
scas
push
or
push
push
add
out
add
mov
movsl
mov
add
add
or
dec
lea
mov
stc
and
mov
movsl
xchg
add
lods
pop
pop
xchg
mov
xchg
or
adc
enter
push
inc
mov
mov
jp
fistps
into
add
push
jbe
fistps
or
sub
jne
mov
mov
mov
xor
mov
into
pop
lret
mov
mov
cmpsb
mov
add
pop
nop
push
inc
lret
push
add
xor
mov
add
ret
add
jle
addl
cmpsb
test
mov
cmpsb
jb
inc
add
pop
nop
adc
add
sbb
xor
imul
mov
daa
push
gs
popa
jl
inc
or
cmp
add
jno
push
xchg
test
into
add
mov
call
add
das
dec
movsl
and
push
test
mov
cli
mov
sbb
add
movsl
pop
mov
incb
ds
mov
imul
pop
add
outsl
testb
mov
mov
jmp
out
shrl
add
cmp
insl
xchg
insb
xor
stos
in
ds
mov
aaa
lods
mov
mov
stos
adc
out
jo
mov
push
add
cs
sti
aad
out
pop
ret
leave
repz
add
xchg
xor
xor
ret
sub
cmpsl
jmp
lea
mov
add
jp
mov
push
dec
lods
xor
add
add
add
pop
or
dec
pop
rorl
cmp
std
movl
rcr
sbb
cmpsl
add
push
decb
inc
add
sldt
sarl
pop
pop
xchg
lret
and
xor
aaa
add
sbb
xchg
pop
inc
cmp
mov
push
mov
xchg
or
rorb
mov
add
add
out
xor
push
push
ljmp
sub
pop
hlt
add
scas
test
mov
out
insb
out
pop
xchg
fcoml
cs
test
add
addr16
lock
add
mov
pop
dec
pop
jecxz
out
push
xchg
clc
adc
test
daa
push
pop
in
mov
cmp
and
jb
incl
or
lods
into
add
aam
sbb
sahf
add
or
push
or
in
sarb
outsl
jo
cmp
fsub
sub
add
pop
das
lret
test
in
les
xchg
jns
add
xchg
xor
sti
jl
inc
jno
xchg
add
push
push
ja
inc
xchg
add
clc
jle
fimuls
add
cwtl
add
add
aaa
and
add
add
std
mov
addr16
popf
inc
add
enter
mov
mov
or
sarb
mov
mov
add
les
add
mov
addb
int3
add
dec
fstpt
lds
push
inc
cmpsb
add
mov
pop
mov
add
les
in
rdtsc
fwait
subb
or
inc
xor
dec
sbb
cmp
push
fistpl
test
mov
gs
add
fists
sbb
ret
sub
test
mov
rolb
xchg
in
add
mov
inc
dec
cwtl
mov
mov
sub
shll
push
divl
hlt
add
sub
addl
and
add
xchg
add
add
sub
xor
xchg
mov
lret
fwait
inc
cmp
mov
dec
pop
mov
push
addr16
inc
aam
push
adc
adcb
push
js
ljmp
cmpsb
ja
sub
jp
pop
les
mov
dec
js
xor
add
test
sbb
xchg
lahf
or
mov
or
lds
pushf
push
andl
sbb
lret
mov
jmp
add
inc
mov
scas
imul
add
outsl
xor
add
enter
sbb
xchg
mov
cmp
inc
add
add
add
mov
xchg
lahf
push
cmp
add
cmp
cs
sar
add
push
sub
sahf
pop
dec
lods
add
fidivrs
and
popa
test
push
cli
ss
add
sbb
push
sbb
lea
mov
ja
add
cmc
jne
pop
sub
pop
lock
sbb
sub
sub
stos
push
cmp
ret
fsubr
add
data16
sbb
or
adc
fmul
jnp
das
and
add
sub
scas
gs
add
jge
add
pop
and
lret
cmp
rcr
jb
insb
add
cwtl
rcrl
adc
dec
pop
mov
sbb
jo
testb
jno
inc
add
fnstenv
add
xor
lds
mov
sbb
sub
mov
add
icebp
mov
pop
fldenv
out
cwtl
and
cmpsb
lea
popf
inc
ljmp
cmc
movsl
add
add
add
arpl
sti
xorl
mov
mov
add
ss
incb
dec
fnsave
jno
jno
dec
jge
add
testw
stc
push
pop
mov
inc
push
fdivrp
cmp
in
sbb
or
adc
mov
imul
add
add
push
add
pop
mov
fdivl
pushf
enter
inc
jle
dec
mov
dec
add
push
ret
aas
mov
push
jecxz
mov
push
or
xchg
lds
out
mov
add
cmp
jne
movl
adc
js
push
pop
sti
dec
push
mov
add
push
insl
jecxz
jo
das
or
mov
loope
mov
add
addr16
jns
cmp
adc
push
aad
jp
and
sbb
stos
mov
add
ss
movsl
dec
xchg
xor
loopne
add
testl
pop
daa
pop
xor
fists
and
int
xchg
clc
inc
sbb
pop
fistpl
es
ret
out
mov
in
mov
add
fnstsw
ficomps
or
aaa
scas
sbb
cmpsl
dec
in
data16
push
add
aaa
inc
xlat
sbb
daa
repz
add
test
mov
adc
test
les
xchg
add
jbe
add
pop
mov
add
dec
es
add
mov
loope
stos
int3
mov
xorl
pushf
in
movb
sbb
es
add
nop
loop
xor
movsl
cmpsl
insl
das
mov
hlt
fisubs
pop
jl
aam
stos
gs
add
adcl
ss
add
mov
test
roll
test
int3
add
out
add
test
push
ret
imul
push
xchg
daa
xor
popa
add
aaa
add
cwtl
and
sub
or
lock
cmp
pop
sti
rorl
cmpsb
loop
or
add
and
es
fdivr
fcomip
out
in
or
mov
mov
leave
pop
adc
scas
add
icebp
push
inc
xor
sub
mov
cmp
xor
outsb
add
inc
leave
decb
dec
aaa
cmp
add
cmp
and
cmpsl
sbb
andl
lcall
pop
mov
push
or
shl
inc
in
jl
mov
out
add
mov
dec
mov
adc
outsl
add
std
cwtl
add
scas
push
mov
aam
cmpsl
sub
xor
scas
mov
int3
mov
mov
or
push
int3
xor
or
es
into
dec
cld
inc
jbe
or
mov
inc
sbb
sub
in
mov
mov
push
icebp
int
aad
es
imul
lods
push
xchg
xor
test
and
mov
adc
jmp
push
add
add
push
loop
xchg
or
dec
imul
add
dec
add
mov
jns
xchg
xchg
mov
jae
xchg
mov
jbe
movsb
test
push
xor
inc
out
mov
es
sahf
adcl
scas
ljmp
add
sti
leave
and
daa
mov
sahf
sbb
pop
or
add
xchg
jne
das
fistpll
jle
push
pushf
leave
push
adc
sub
push
sbb
push
push
in
outsl
cli
enter
aas
mov
xor
enter
xchg
enter
jle
cli
mov
stc
add
inc
imul
inc
outsl
sbb
insb
bound
add
push
bound
add
sbb
push
sbb
or
sti
addl
mov
mov
adc
sub
les
mov
mov
hlt
rolb
outsl
push
xorl
jns
aam
imul
daa
dec
inc
cmpsb
icebp
cmp
popa
das
popf
jnp
xor
or
loopne
rclb
and
xchg
and
mov
add
and
aas
cld
std
jnp
add
add
mov
ja
aad
sbb
movsb
push
mov
xchg
and
dec
add
int3
adc
xchg
mov
jle
push
cmp
cmpsb
jbe
xor
int
adc
adc
out
dec
inc
cmp
int3
andl
iret
adc
in
jo
add
add
cmp
jge
movsb
sbb
int3
insb
sub
iret
test
or
sahf
cmp
xor
lea
movsb
out
add
movlps
mov
in
cld
loope
sar
and
je
add
inc
rolb
sub
add
std
dec
loopne
adc
inc
inc
add
test
jns
in
add
add
sbb
mov
or
insb
add
pop
add
sub
cmp
add
addl
mov
mov
add
push
push
mov
inc
rcr
sub
add
add
mov
sub
cld
push
lods
mov
loop
pusha
xlat
aad
sbb
add
arpl
ficoms
out
iret
jae
bound
inc
ficompl
xor
mov
lcall
loopne
jle
jl
dec
aaa
xchg
faddl
loope
scas
and
enter
add
push
leave
jbe
add
imul
sbb
popa
data16
mov
cmp
add
sub
mov
jnp
add
popa
pushf
add
dec
hlt
dec
insb
add
add
mov
in
adc
xor
sbb
sub
sbb
push
sarl
jle
or
add
add
lock
mov
sbb
add
xchg
lcall
call
inc
adc
sbb
jbe
jg
lods
loope
sbb
mov
mov
and
ja
lods
cmp
add
cmp
fcoml
loop
push
fstpl
push
pop
insb
dec
arpl
sbb
mov
repz
push
jg
inc
or
lods
jne
inc
sub
add
enter
js
call
push
add
mov
and
pop
mov
mov
lret
dec
mov
jae
orb
shlb
sub
xor
fbld
jb
add
rcrl
sub
dec
mov
lods
and
lods
add
inc
add
or
add
jnp
in
add
stc
add
ljmp
mov
xor
std
dec
fldt
data16
push
pusha
add
push
xchg
add
faddl
inc
sub
sub
or
or
jmp
test
add
mov
mov
add
repnz
add
mov
rol
imulb
cmc
xchg
hlt
add
add
cwtl
lahf
sbb
add
out
xor
out
mov
lea
mov
pop
sbb
mov
add
push
sub
adc
pop
push
push
or
repnz
add
add
repnz
add
xor
mov
std
jl
andl
pop
rcrb
add
ljmp
push
jno
pop
mov
mov
jg
js
cltd
movsb
rorl
movsb
lds
loop
or
xchg
cmp
jecxz
sbb
inc
popf
frstor
arpl
das
lahf
and
jg
insl
mov
add
push
pop
hlt
loope,pt
add
inc
or
mov
xchg
cld
sarb
rorb
xor
scas
das
in
add
inc
xchg
sbb
fmull
call
lahf
in
adc
pop
mov
cmp
sbb
outsl
das
divb
adc
cs
mov
andl
inc
out
or
mov
mov
sbb
mulb
mov
fs
or
push
xchg
ljmp
xchg
subb
mov
sbb
add
or
xor
cwtl
sti
dec
insb
dec
or
incb
loope
sub
add
popf
sahf
or
jecxz
xor
sbb
mov
insb
rep
adc
cmp
addr16
add
int
fucomip
xor
sbb
out
rorl
mov
rcll
arpl
add
cld
mov
outsl
sahf
push
adc
xchg
outsl
jg
mov
jnp
je,pt
add
xchg
jns
xchg
imul
lret
jl
loope
mov
add
ret
movsl
xor
add
ret
add
out
insl
add
enter
adc
ja
cmp
or
lahf
lods
lret
push
add
push
jae
jp
add
ds
fadds
add
pushl
cltd
repnz
addr16
mull
sub
stc
add
adc
xor
push
jg
aad
add
push
stc
mov
mov
sub
movsl
cmp
int3
xchg
dec
sahf
repnz
jno
xor
pop
or
sbb
jmp
inc
cmpsl
prefetch
in
push
mov
mov
test
cmp
fnstsw
jmp
sti
loope
push
daa
lods
sub
lea
push
addl
aas
mov
jg
hlt
xor
add
cmp
fidivs
push
add
lahf
sub
in
int
cs
repz
popf
add
mov
push
sahf
push
cmp
fistpl
xchg
mov
loopne
inc
es
pusha
add
mov
sbb
cmpsb
add
fwait
or
mov
outsb
mov
xor
push
add
or
jo
mov
push
add
mov
add
mov
push
add
add
test
add
jnp
mov
push
jle
pushf
es
mov
fists
and
and
inc
push
jb
iret
xchg
and
testl
mov
rolb
pusha
int
jecxz
ds
add
lret
lock
imul
mov
cmp
add
idiv
xor
mov
pop
popa
mov
in
mov
mov
dec
sbb
sahf
sub
out
out
jns
add
cmpsl
mov
lahf
movsb
and
pop
stos
sub
movsl
shll
add
mov
push
jmp
enter
xor
enter
push
xor
stos
aam
xor
and
add
cwtl
mov
xchg
scas
xor
sub
subb
lods
and
lcall
iret
or
pushf
iret
sub
xchg
mov
push
add
sahf
push
xor
shll
xor
enter
inc
cmp
add
or
xor
inc
jne
add
add
fsubr
add
add
mov
add
add
imul
cmp
xor
add
sub
dec
iret
sbb
jbe
jmp
fistpll
int
add
rorb
jg
imul
or
cmp
adc
adc
mov
sub
add
dec
add
and
xchg
add
mov
cmp
sbb
pop
scas
or
cli
mov
mov
sahf
mov
mov
loope
pop
add
jg
pop
add
cmpsb
shl
mov
or
movb
mov
sub
add
adc
add
mov
in
data16
sub
xor
sbb
xchg
mov
jae
outsb
add
push
add
dec
rcrb
dec
inc
filds
dec
mov
fists
lea
add
xor
mov
xchg
mov
pop
and
repz
push
xor
add
popa
repnz
cmp
cmp
ljmp
mov
adc
adcb
or
sbb
test
xchg
jge
dec
inc
scas
ds
scas
or
add
add
mov
add
add
sbb
xchg
fidivs
out
and
popf
fmuls
dec
adc
lahf
cld
imul
fmull
push
insl
jbe
mulb
xchg
out
mov
push
cmpsl
daa
or
pop
pop
add
cli
push
mov
cmp
mov
inc
sub
add
test
sub
add
mov
pusha
add
sahf
icebp
add
sbb
add
push
add
pop
adc
shl
cmp
add
ja
xchg
cmpsb
dec
les
stc
pop
cltd
cmc
inc
or
out
mov
inc
pop
sub
xchg
scas
mov
mov
xor
stos
add
add
scas
andps
dec
push
ja
in
pop
stos
fisttpl
lods
xchg
add
jle
pushf
filds
sbb
mov
add
aaa
cmp
push
mov
sub
add
xchg
andl
push
hlt
fdivrs
cli
dec
xor
cmp
or
mov
push
xor
mov
dec
cwtl
fimuls
out
add
cmpsl
add
adc
xchg
cwtl
shl
mov
ja
push
pop
rcr
outsl
fdivl
cmpsl
scas
add
xor
jmp
inc
xor
push
push
add
add
ja
test
lret
pop
dec
xorb
rclb
xor
lahf
mov
cmp
fisttps
push
push
add
pop
add
pop
cmp
sub
jbe
add
and
cltd
xchg
xor
pop
mov
daa
mov
mov
mov
out
mov
xorl
mov
add
mov
test
test
inc
cmpsl
out
inc
and
lock
sub
xor
adc
add
sbb
jp
cmp
js
inc
pop
movsb
bound
fildl
divb
jge
mov
adc
aaa
mov
fnsave
icebp
in
cwtl
inc
nop
test
jmp
sbb
xor
pusha
dec
push
xchg
repnz
sbb
icebp
mov
into
mov
add
sbb
stc
xchg
inc
dec
mov
sti
mov
and
add
add
or
dec
outsb
mov
xchg
adc
cmp
sbb
repnz
maskmovq
cmp
imul
pop
inc
pusha
sbb
xor
rclb
mulb
lock
cwtl
jnp
jbe
insb
push
cmp
les
add
fldl
dec
div
sub
adc
pop
das
xchg
sbb
ror
js
xchg
addr16
add
xor
aas
sbb
imul
adc
push
icebp
xor
enter
add
or
add
sub
movsb
jge
int
and
out
inc
ss
jb
insb
jp
adc
inc
js
jno
inc
mov
adc
xor
in
mov
add
mov
mov
ret
shrb
out
jnp
pusha
mov
imul
inc
jno
cmp
mov
sub
outsb
shl
inc
add
dec
std
hlt
add
sbb
xchg
cli
jmp
add
rolb
xchg
repz
xor
pop
inc
mov
add
js
out
jbe
scas
mov
cmpb
test
add
add
add
mov
and
loop
push
scas
shrl
dec
imul
mov
mov
les
or
and
lahf
cmp
jl
lcall
hlt
adc
sub
sbb
in
mov
add
add
les
pop
pop
ficomps
in
pop
pop
les
outsb
sub
add
sbb
push
push
ficoms
jnp
add
push
lret
lock
cmp
add
push
push
fldenv
add
fucomp
mov
fdivs
pop
and
fiadds
xor
or
push
test
sahf
add
dec
in
insb
add
iret
add
cmp
xchg
in
bound
adc
testl
and
cmpsb
imul
sbb
mov
or
das
pop
or
pop
add
roll
stc
daa
push
add
ds
add
lea
pushf
sbb
test
fidivs
and
jae
pop
aas
js
data16
add
add
aad
or
add
add
or
pop
ljmp
dec
adcb
dec
cmp
xor
out
aas
sti
std
movsl
add
loop,pn
add
call
pop
xchg
popf
stc
out
aam
ss
ficompl
pop
sub
addb
lea
add
or
add
xlat
lods
mov
jno
inc
or
les
push
sbb
xchg
cmp
pop
das
inc
push
cmp
ss
popf
jno
testb
outsl
xlat
inc
add
adc
add
add
daa
adc
imull
sbb
leave
cmp
cmp
mov
jmp
mov
push
mov
add
cs
push
testb
add
sbb
cmp
adc
mov
add
pop
inc
adc
push
add
sub
cs
and
add
cmp
movsb
inc
popa
and
xchg
icebp
movb
sbb
xchg
mov
incl
data16
lret
fcoml
add
popa
daa
inc
into
sub
imul
xor
sbb
or
mov
cmpsl
ss
mov
cld
pop
dec
pop
clc
loop
add
push
xchg
imul
mov
jbe
repnz
ret
aas
cmp
pop
jg
jo
cmp
dec
add
mov
push
or
cs
sub
add
movsb
jae
cmp
out
mov
pop
les
mov
ds
ffreep
add
cmpsb
lea
add
into
xchg
cli
fwait
sbb
and
aas
inc
add
arpl
mov
lods
add
mov
ljmp
adc
xor
fistpll
sbb
test
add
mov
cwtl
push
movsb
jmp
add
add
lock
pop
fisubrs
inc
data16
jb
jbe
idivb
jge
lahf
mov
jns
js
sbb
fs
sbb
jp
push
daa
and
push
roll
pop
cli
icebp
je
add
jmp
mov
int3
inc
add
xchg
scas
add
nop
pop
inc
call
dec
in
out
add
add
jbe
xchg
adcl
test
pushl
add
addr16
adc
movsl
fldl
imul
rolb
mov
addl
popa
js
pop
add
fmuls
clts
jnp
mov
mov
add
add
enter
ja
add
ret
insl
add
out
xchg
add
hlt
add
or
ret
testl
jmp
shlb
dec
les
aas
jo
lods
xchg
cmp
adc
sbb
pop
scas
add
mov
fldl
testb
pop
push
sub
sbb
and
icebp
add
add
xorb
rcll
inc
or
xor
push
out
fdivrp
or
repz
inc
in
push
xor
dec
lret
loope
lea
cld
xor
and
sub
or
jle
mov
pop
cmpsl
mov
mov
fwait
daa
push
fiadds
xchg
inc
dec
add
ds
scas
cmpsb
or
and
dec
add
sbb
add
in
mov
add
push
inc
dec
adcl
stc
add
addb
inc
test
and
fdivrl
add
cltd
test
or
add
pop
jne
push
push
mov
xor
push
je
or
xor
mov
add
repnz
je
inc
add
stos
mov
push
jns
add
lods
pop
add
jecxz
cmc
ljmp
add
add
mov
fisubl
lods
sub
cmc
cmc
dec
adc
xchg
xchg
xchg
lods
add
psllq
xor
loopne
aad
dec
lods
add
test
push
xchg
mov
bound
mov
jo
hlt
cmp
and
repnz
xor
bound
cmpsb
jns
stos
pop
subb
lock
jno
cmpsl
add
mov
add
sbb
dec
adc
out
and
xor
and
lahf
pop
gs
lahf
cmp
stos
sbb
faddl
xchg
add
add
add
aaa
clc
out
mov
arpl
nop
sbb
insl
push
pop
xlat
xchg
js
ja
imul
das
lock
mov
jp
add
rol
sub
xor
jge
pop
inc
adc
add
stos
add
xchg
mov
add
inc
out
mov
mov
push
cmp
out
scas
cwtl
sahf
add
pusha
add
mov
dec
cmp
mov
fistpll
and
jno
js
add
mov
xlat
imul
xlat
js
test
jl
aam
shll
push
mov
lea
call
in
outsb
push
mov
add
add
in
outsb
mov
push
cmp
clc
sub
mov
add
mov
add
stos
mov
cmp
dec
pop
mov
mov
popf
add
pushf
cmc
mov
add
pop
mov
sahf
mov
sbb
add
cld
fildl
loope
cltd
repnz
sub
call
mov
lea
int
xor
add
sahf
lcall
xchg
test
push
test
pop
push
add
sub
add
in
jbe
fwait
fwait
dec
add
jle
cmp
repnz
and
add
mov
iret
mov
or
xor
out
fsts
sbb
daa
mov
or
add
dec
cmpb
add
dec
outsb
dec
test
add
mov
pop
dec
ret
xorb
add
dec
add
or
sub
and
and
dec
pop
ljmp
cmp
xor
dec
jb
inc
sti
insl
push
sahf
out
cmpxchg
mov
sbb
movsb
pop
push
add
mov
out
pop
or
push
mov
mov
test
daa
add
pop
hlt
test
xchg
inc
dec
ljmp
xor
outsl
add
add
fisubs
orl
push
stc
int
int3
add
add
cli
rep
in
imul
popf
outsl
das
gs
pusha
rorl
test
cmp
cmp
mov
pop
and
add
push
leave
sub
out
or
out
inc
or
and
mov
clc
mov
les
std
pop
data16
js
and
icebp
cmpsb
pop
xor
add
push
xlat
nop
lahf
movsb
or
and
fwait
push
je
insb
xor
add
push
dec
push
add
sbb
adc
stos
out
in
push
push
add
movsb
cmp
inc
test
inc
pushl
inc
cmpsb
int
add
sbb
and
add
inc
push
jecxz
jecxz
xchg
xchg
or
xor
pextrw
sub
stc
inc
ret
pop
ret
jge
mov
add
add
jg
scas
add
popa
and
and
add
or
xchg
stc
dec
add
cmp
inc
add
pop
mov
push
add
push
in
add
xlat
mov
mov
scas
int3
adc
mov
jle
sub
and
addr16
and
into
inc
push
sub
mov
xor
mov
jl
sbb
movsb
dec
outsl
in
mov
push
add
and
sbb
add
lods
xor
lock
jae
icebp
push
sbb
add
es
sti
sbb
push
add
xor
ficomps
mov
add
or
insb
dec
sub
mov
add
in
scas
add
add
loop
jne
mov
ss
push
in
dec
jae
jmp
cmp
mov
int3
add
pop
add
int
sbb
in
jne
push
cld
pop
arpl
ljmp
dec
jle
mov
adc
into
mov
das
xor
add
sbb
outsl
add
in
mov
mov
sti
scas
ljmp
ss
iret
push
pop
insb
xchg
gs
lea
cmp
push
mov
sbbl
testb
inc
rol
add
and
inc
mov
push
int3
inc
cmp
add
and
and
dec
dec
test
loope
lock
add
sub
mov
pushf
fsubrs
pop
or
mov
xorl
push
add
jo
pop
push
or
dec
testl
mov
inc
xorb
sti
push
mov
mov
mov
ja
dec
cmp
iret
or
adc
adc
dec
add
out
add
mov
mov
mov
jge
sahf
sarl
je
add
xor
push
cmp
or
jmp
mov
inc
jne
sub
mov
xchg
scas
mov
testb
mov
adc
mov
add
mov
cmp
jmp
push
testb
add
out
jbe
mov
pop
fwait
testl
mov
mov
pop
fnstenv
xor
push
std
xchg
jb
xchg
inc
adcb
mov
cli
cmp
add
sbb
stos
xor
push
jmp
push
and
cmp
cwtl
aam
push
add
or
lods
xchg
fidivrs
test
loope
xor
sbb
mov
rcrb
shrb
fucomi
pop
cmp
add
mov
xlat
mov
add
add
jecxz
pmaddwd
xchg
aas
mov
mov
repnz
test
les
mov
aaa
add
rolb
add
popa
xchg
clc
or
cmp
mov
mov
mov
xor
sub
rorb
adc
out
test
loope
jge
es
mov
add
pusha
mov
cmpsb
push
inc
std
ret
add
cmp
fidivrs
in
or
push
inc
out
fsts
adc
cmp
mov
mov
divb
test
mov
roll
pop
mov
add
test
loop
add
daa
add
imul
faddp
insb
fcmovnbe
inc
add
mov
add
sub
pop
lcall
jb
mov
popf
imul
mov
into
daa
cwtl
push
sbb
clc
cmp
cmpsl
pushf
add
adc
std
pop
cltd
ja
int
cwtl
inc
dec
dec
jo
mov
add
push
cltd
xor
loope
movaps
lock
dec
add
and
rcll
xor
cmp
arpl
ljmp
cmp
lds
pop
sbb
mov
sbb
cwtl
add
popf
push
in
nopl
mov
int
insl
daa
add
and
lods
std
les
pushf
adc
popl
push
imul
pop
jmp
arpl
dec
xor
dec
add
push
cld
jp
push
jns
jbe
in
add
dec
test
add
mov
in
std
arpl
add
xchg
incb
push
stc
leave
mov
aaa
lock
or
or
xor
add
jecxz
push
out
mov
mov
lea
insl
js
lods
push
stos
enter
ret
cmp
push
xor
dec
mov
add
xchg
or
fisttpl
or
imul
mov
inc
push
add
pop
add
or
xor
xor
cmp
inc
mov
adc
mov
xchg
repnz
pop
stos
xor
aad
fdivs
cmpl
add
adc
fstps
lock
jno
ss
lods
fiaddl
or
cwtl
lret
stos
sub
in
sub
mov
nop
mov
and
es
hlt
sbb
add
add
xor
sub
cltd
dec
sti
rol
add
push
sub
adc
cwtl
aad
rdmsr
add
or
pop
jbe
in
or
xor
rolb
xchg
jecxz
cmp
mov
lock
push
or
in
or
jbe
imul
les
add
fildl
jb
or
xor
or
test
pop
and
add
adc
inc
or
add
insb
sqrtps
shrb
jbe
test
and
add
ds
cmp
jb
or
pop
dec
or
scas
rorb
lcall
inc
lds
add
cmpl
loope
das
bound
push
leave
sbb
stos
push
add
adc
add
cmp
inc
or
xor
adc
xor
mov
cmp
sbb
aam
jo
fsubs
push
fnstcw
add
mov
add
mov
add
cli
inc
shl
loop
add
ja
rclb
movsl
lret
in
pop
iret
cli
pop
jnp
aaa
inc
insb
nop
subl
call
mov
jp
xlat
insb
jge
mov
cmp
adc
or
sub
push
adc
jge
lds
pop
pop
imul
cmpsl
and
and
lods
xchg
mov
add
aam
ret
popf
add
sbb
inc
add
jbe
cmp
test
ret
insl
add
shrl
out
add
ficoml
testl
pop
sbb
add
push
cltd
add
and
nop
rcrb
lcall
fsubrs
push
or
pop
or
in
dec
sub
test
mov
mov
or
push
mov
dec
pop
add
stc
push
lods
jmp
add
add
add
sbb
in
add
fisttpl
push
add
mov
jb
dec
cmp
add
movsl
aaa
jg
add
cld
add
shlb
loope
nop
pop
enter
inc
iret
movsb
add
cld
lds
arpl
mov
mov
out
mov
or
adc
cltd
cli
dec
push
mov
cmp
add
mov
push
insb
add
jl
add
add
and
or
add
int3
cs
data16
jno
lret
loopne
mov
jl
push
ret
iret
xor
add
fnstcw
mov
add
mov
push
aas
cli
dec
repz
jne
add
nop
add
adc
push
and
pop
add
sti
shl
add
or
add
stos
pop
hlt
jg
xchg
or
jns
adc
adc
ds
divl
add
xor
stos
out
or
or
add
cltd
shll
cmp
lock
add
mov
ret
xchg
scas
cmp
xchg
mov
xor
sbb
sbb
mov
push
fnsave
sbb
cmpsb
leave
mov
in
inc
add
mov
enter
clc
pop
mov
mov
lods
add
add
rclb
jns
add
or
repnz
dec
jae
inc
movsl
push
sbb
lods
xchg
lock
sahf
movsl
xchg
cmp
push
sahf
fs
and
fwait
add
and
push
scas
fwait
add
je
add
and
pop
loopne
push
sub
iret
cmpsl
test
xchg
mov
roll
popf
add
gs
xchg
scas
add
popa
test
add
imul
ljmp
repz
and
inc
adc
add
add
movsb
pop
lahf
cs
sbb
adc
and
addb
cmc
xor
pop
jb
push
imul
add
lret
sbb
out
ljmp
test
gs
fdivl
pop
cmp
xor
add
insb
popf
jne
adc
push
inc
add
test
out
ja
repnz
cmp
rclb
xchg
add
sbb
shr
add
push
mov
pop
sbb
and
add
insb
add
dec
or
flds
shlb
daa
jle
rol
cmc
movsl
sub
lods
xor
add
push
subb
cmp
add
jmp
push
jb
inc
jb
cmp
push
movsb
sahf
jno
stos
or
dec
fmull
into
add
sub
or
add
push
in
sub
out
sbb
or
or
push
xchg
pop
std
mov
push
xor
mov
jnp
mov
jmp
addl
jl
add
and
mov
mov
shlb
mov
arpl
cmp
cmp
sub
mov
movsb
outsb
add
lret
lods
sbb
adc
inc
adc
add
sub
cmp
push
xchg
sub
popa
fsts
adc
lcall
in
jmp
imul
jge
fwait
lcall
lret
out
idivl
mov
cmp
adc
out
push
jge
stos
pslld
add
movsl
sub
imul
jae
xor
out
imul
dec
add
leave
loopne
push
cmp
cwtl
syscall
into
aas
rolb
out
sub
cmp
fistpl
add
and
or
les
mov
cmpb
add
sti
insb
arpl
sub
mov
xor
sti
sbb
add
mov
dec
mov
nop
dec
arpl
and
stos
pop
shr
in
std
iret
das
add
test
jge
shll
adc
dec
jnp
inc
mov
data16
or
sub
add
jo
add
aam
mov
je
insl
push
add
ret
add
fsubs
pop
in
stos
xor
iret
add
ss
in
sub
inc
cmpsl
add
jp
sbb
sbb
mov
pop
std
jge
or
int3
mov
add
or
or
ror
add
roll
pop
iret
test
adc
in
xor
sbb
xchg
inc
add
cld
or
jmp
ss
in
imul
movb
dec
add
or
out
inc
rcll
pusha
add
pop
aam
rorb
scas
insb
sbb
xor
lods
mov
ja
addl
xor
adc
push
mov
jp
fwait
mov
or
nop
lods
add
xchg
fldl
jecxz
fldenv
add
mov
insb
add
dec
add
aas
cltd
in
adc
adc
dec
add
test
jnp
incb
or
divl
loop
les
pop
add
and
push
mov
add
mov
jno
adc
jb
add
add
add
mov
dec
orb
loopne
add
rcr
lret
in
xchg
insb
pop
pop
sub
inc
jg
js
add
insl
jne
add
out
add
cmp
ljmp
adc
pop
and
add
xor
in
sub
aad
adc
and
mov
popa
xor
xor
les
mov
add
adc
aaa
push
movsb
addr16
clc
jns
xor
add
inc
inc
jp
jb
or
push
add
cmovne
int3
add
notl
iret
add
je
es
rorl
shrb
xlat
popf
or
add
dec
xor
push
add
or
divb
stos
add
imul
sub
imul
fstps
mov
xchg
xor
sbb
ljmp
xchg
loopne
jae
mov
and
mov
add
in
sbb
test
push
mov
sbb
pop
test
in
andb
loop
sti
xchg
add
mov
add
sbbl
add
and
add
push
jnp
inc
ror
cld
ja
aas
int
popa
dec
sub
cmp
fdivrs
push
sub
mov
push
pop
inc
and
aam
sar
insl
in
xor
pop
fwait
add
push
inc
stc
xchg
add
add
jo
cmpsl
add
aas
in
cmp
push
cmp
or
in
add
xor
mov
xchg
and
adc
dec
sbb
fadds
fs
cmp
add
sub
rol
dec
cwtl
jmp
add
inc
or
insl
jno
push
std
aad
jecxz
pop
ret
add
mov
popf
jo
popa
outsl
repz
push
push
add
or
jmp
int
in
cmp
fs
dec
and
bound
fbld
cmp
xchg
add
aas
or
or
xchg
pop
aad
mov
sub
addb
or
adc
jne
daa
add
roll
mov
movb
stos
ret
add
jg
xchg
dec
fs
rolb
and
out
mov
enter
addl
out
movsb
mov
inc
mov
btr
in
dec
mov
mov
sahf
loope
enter
mov
mov
mov
sbb
pop
insl
xor
ljmp
xchg
jns
into
add
mov
and
mov
pop
xor
add
jns
inc
addr16
dec
mov
add
mov
test
sub
push
sub
mov
push
add
push
lods
out
jbe
add
mov
jmp
inc
or
fists
dec
je
sub
sahf
add
jno
sbb
imul
add
arpl
cmp
lods
movb
in
mov
adc
lods
xor
dec
insb
incl
into
outsb
xor
leave
jae
add
fnsave
out
testb
push
pop
sti
mov
loop
xor
push
scas
push
add
stos
dec
add
mov
mov
popa
add
lds
and
sub
repnz
push
test
mov
es
loop
jne
jg
xchg
ffreep
jecxz
sbb
dec
push
jns
inc
add
xchg
xor
add
jno
mov
mov
lea
push
cmp
cmp
inc
add
loope
add
fistl
mov
xchg
push
cli
mov
jl
xor
testl
add
cmp
in
jb
pop
mov
dec
jg
cmp
cmc
add
repz
mov
repz
add
add
out
or
call
xchg
pop
add
icebp
loope
add
nopl
loop
add
xchg
cltd
int3
shrb
jmp
loop
mov
xchg
mov
psraw
test
ficomps
call
add
cli
push
lods
add
cmp
std
push
and
pop
add
add
jo
popa
dec
inc
xchg
add
pusha
sub
pop
add
mov
mov
add
mov
add
add
lret
add
jbe
ror
or
mov
add
out
sbbb
adc
movsb
pop
dec
outsl
in
push
out
fcoms
outsb
stos
fidivs
cmp
sub
loope
pop
les
ss
or
add
adc
out
ljmp
out
xchg
xor
adc
nop
loop
push
shlb
dec
icebp
add
cs
mov
cmp
dec
xchg
add
adc
jmp
sub
add
sub
sbb
sbb
mov
incl
or
inc
sbb
scas
mov
xchg
xchg
mov
ljmp
clc
xchg
add
shr
sbb
sub
sub
mov
mov
add
dec
loop
repnz
xchg
movsb
mov
adc
mov
add
xor
es
mov
add
pop
movl
test
xchg
mov
push
jae
xor
cmp
add
sbb
pop
shrl
add
in
stos
popl
push
add
outsl
and
mov
jnp
cmpsb
cmp
xor
add
cmpsl
mov
push
mov
repnz
mov
into
mov
mov
std
mov
add
fwait
scas
dec
addr16
cmp
jnp
inc
das
add
testb
jg
icebp
addr16
dec
adc
in
add
movsl
int3
out
data16
dec
add
xor
xor
pop
mov
and
ja
cmp
sarl
pusha
ror
insb
add
inc
fcoms
sbb
mov
sbb
insl
mov
dec
int
addb
pushf
xchg
inc
add
dec
sbb
xlat
add
xchg
add
xchg
fsubrs
or
fs
push
cli
mov
xchg
popa
jl
push
sbb
jle
pop
add
push
cmp
mov
outsb
inc
insl
lea
mov
imul
pusha
jne
and
mov
pop
add
jo
add
mov
gs
sub
inc
ficompl
fiaddl
add
xchg
fistpll
pop
mov
aad
or
pop
jecxz
sti
call
jge
add
enter
iret
fmull
jns
push
cmpsb
std
sysenter
sarb
push
ljmp
loopne
jp
add
cmp
and
cmp
inc
sti
int
cmp
adc
mov
movsl
add
jmp
or
dec
mov
adc
cmc
push
push
adc
cmpsl
mov
sub
sbb
mov
test
push
mov
addl
add
test
je
insl
lock
xchg
fstl
mov
cmp
pop
mov
jne
out
mov
add
xchg
nop
loope
pop
jnp
cmpsl
scas
lods
outsb
mov
call
pushf
pop
and
mov
sti
sbb
sub
mov
add
jecxz
pop
daa
add
insl
cmp
sbb
xchg
mov
popa
sbb
mov
mov
gs
movsl
add
pop
jp
stos
adc
cmp
mov
jge
or
jg
or
xor
add
xlat
dec
cmp
add
adc
rcll
daa
nop
dec
dec
dec
dec
dec
aas
loope
add
into
jno
lds
mov
push
sarl
cmp
mov
jne
and
and
add
mov
movsl
popa
int3
mov
jo
push
mov
sub
nop
push
addr16
roll
jge
dec
adc
add
faddl
xor
and
imul
lret
jp
mov
add
push
leave
mov
mov
add
inc
mov
cmp
imul
testl
add
lods
add
pop
lds
imul
add
add
mov
std
ljmp
pcmpgtd
jno
verw
mov
add
fildll
andb
xor
jb
sahf
add
push
enter
mov
lcall
mov
dec
add
inc
or
inc
sbb
cmp
clc
es
pop
sbb
mov
xchg
add
xor
into
add
jne
sub
jae
cwtl
push
add
movsb
sbb
sub
sub
ffree
clc
mov
lea
or
popf
push
lcall
mov
push
addr16
jge
iret
add
and
fbstp
imul
out
inc
add
addr16
xorl
add
cwtl
and
jmp
sbb
mov
jecxz
negl
ret
out
pop
add
push
xchg
jno
stos
adc
mov
add
mov
mov
cmpsb
lcall
sub
sub
cmp
rolb
mov
dec
pop
xchg
ds
push
add
add
std
rcrl
addb
xor
jae
sub
xchg
testl
sti
sbb
mull
mov
lret
insb
mov
cmpsb
add
dec
aaa
xchg
pop
test
lahf
add
in
sarb
inc
push
sub
call
hlt
push
cmp
loope
cmp
clc
test
xor
cmp
iret
and
aaa
mov
sbb
mov
ror
pop
cmp
inc
sub
add
and
mov
xchg
push
cmpsb
sbb
insl
adcb
mov
dec
fs
add
enter
add
cmp
gs
xchg
add
sub
movsb
add
add
std
jl
mov
mov
dec
add
jns
pop
and
sbb
pop
add
xor
sub
sub
jl
push
test
add
add
push
pop
mov
test
xchg
mov
add
in
pop
adc
adc
stos
add
xchg
icebp
dec
jl,pn
add
mov
pushl
lods
and
inc
fsts
pop
jbe
xchg
jp
mov
push
jecxz
mov
test
or
sub
add
adc
jnp
mov
jnp
cmp
test
adc
xor
lcall
add
add
mov
xchg
add
leave
mov
rcll
pop
jle
stos
mov
add
adcl
pop
test
mov
rorb
loop
xchg
sahf
aad
mov
mov
push
push
sub
lcall
sbb
cld
add
repz
test
cmp
add
jp
int3
add
inc
cmpsb
mov
mov
in
or
xchg
shlb
or
and
dec
cmp
sarb
and
enter
mov
xchg
add
xchg
stc
in
sbb
xchg
pop
sub
cmpsl
add
cmp
jle
mov
inc
dec
fsubs
cltd
add
add
and
add
mov
and
sbb
test
and
add
daa
je
ja
imul
or
and
pop
and
lcall
mov
pop
cmp
push
fsubrs
sbb
cmpsl
cmove
incl
popf
cmpl
adc
lret
dec
jb
cs
mov
cmp
add
add
add
add
aas
data16
pop
sub
aam
xor
cli
add
test
pop
jae
fwait
jne
sti
rcrb
push
fcmovbe
pop
sahf
adc
mov
clc
add
xor
mov
aas
adc
cmp
add
lock
mov
add
shll
sub
xor
dec
sbb
add
imul
add
js
loop
add
bound
push
mov
pushf
lahf
lcall
add
pop
pusha
push
leave
mov
mov
inc
add
jae
in
or
and
call
add
and
fstpt
push
mov
xchg
imul
push
sub
arpl
test
sbb
inc
adc
mov
xchg
cmovl
add
sti
jno
jnp
push
pop
jns
movsb
scas
xor
pop
fs
xorb
ss
inc
rolb
pop
cli
out
pop
mov
xchg
pop
testb
call
lock
cmp
lea
fistpll
cld
add
fidivs
push
or
test
icebp
add
add
es
out
xchg
dec
imul
pusha
mov
xchg
push
xor
xchg
inc
fiadds
repz
cmpsl
push
mov
push
sub
loop
sbb
mov
les
pop
mov
sbb
repz
lock
fadd
jns
cmp
mov
ja
inc
pop
jbe
iret
mov
add
pop
sbb
xor
add
shl
jecxz
xchg
add
int
in
cltd
inc
add
sarb
lcall
push
iret
into
idivl
pop
cmp
fs
les
sbb
mov
in
sub
and
push
mov
cmc
addr16
stos
add
jne
imul
cmp
add
add
cmpl
jmp
mov
addl
rclb
ja
fadds
xchg
push
add
imul
les
insl
sub
push
out
sbb
xchg
add
jbe
inc
mov
or
jg
pop
sub
add
imul
mov
add
sahf
or
mov
lret
lea
cmp
aaa
dec
outsl
mov
add
testl
sub
jne
inc
popa
add
jns
adc
jbe
add
push
or
pop
push
pop
sub
repnz
fwait
push
pop
test
add
das
sbb
insl
add
mov
ja
scas
pushf
mov
jbe
mov
inc
push
xor
xlat
das
sub
sbb
out
js
mov
add
mov
jmp
adc
movsl
lods
lcall
aas
cmpsb
rcrl
sub
lods
add
xor
mov
lock
mov
jo
pop
sub
ja
add
add
push
pushf
pusha
subb
sti
aaa
movsb
daa
gs
add
mov
cld
dec
dec
test
fldln2
add
adc
add
rorb
pop
pop
jmp
imul
ja
lds
cmpsb
cmp
add
add
mov
add
pop
mov
out
pusha
add
add
push
mov
bound
xchg
pop
aaa
lock
add
xchg
cmpl
in
sbb
sub
test
push
das
dec
push
sbb
xlat
flds
mov
shll
dec
add
xchg
mov
jmp
inc
mov
push
sub
outsb
and
dec
aam
int
adc
lret
mov
cmp
movsb
sti
insb
mov
add
sahf
add
clc
fistps
leave
mov
jbe
pop
add
stos
add
add
test
es
inc
rorl
inc
shrl
xor
push
repz
fstp
aas
add
mov
push
inc
enter
movsb
testb
hlt
xchg
inc
fdiv
int
pop
and
jnp
dec
fwait
les
repnz
add
pop
sti
push
xor
dec
add
mov
inc
mov
jecxz
repnz
jne
sub
stc
test
daa
scas
aam
rolb
sbb
addb
das
push
cmp
mov
roll
rorl
jae
jg
clc
std
test
dec
fpatan
and
xor
in
cmc
mov
jecxz
fnstenv
in
jp
add
pop
ljmp
or
jns
sahf
add
push
xchg
inc
imul
sub
push
and
dec
mov
sub
cmpsl
mov
dec
pop
mov
or
icebp
out
mov
or
sahf
add
movl
jnp
add
sbb
inc
cmp
cwtl
out
dec
testb
mov
push
add
je
pcmpeqb
add
outsl
add
add
in
and
out
adc
mov
mov
repnz
sub
movl
cltd
add
ret
jne
rorb
inc
jns
fbstp
andl
sbb
push
add
out
mov
and
aas
stc
add
test
mov
cmpsl
pop
daa
sbb
adc
mov
add
sbb
mov
cltd
mov
cli
pop
repz
popf
dec
mov
cmp
ds
mov
xor
into
mov
adc
and
cwtl
loop
cwtl
mov
cmp
xchg
dec
aas
xor
xor
ja
iret
in
aam
jno
outsb
cmpsb
repz
push
pop
xor
cmp
insl
xor
jmp
mov
sbb
fimuls
adc
out
add
mov
dec
pop
and
mov
add
cmp
dec
dec
push
aad
sub
add
mov
gs
add
add
and
and
jl
sbb
inc
cmp
pop
pop
add
and
pop
negl
out
mov
es
or
mov
outsb
loope
jmp
add
jecxz
xchg
arpl
mov
aad
fs
add
mov
imul
inc
adc
and
sub
cmp
fwait
mov
lds
add
loopne
jo
jb
pop
dec
ret
cmp
or
inc
and
cmpsl
add
mov
int3
mov
and
iret
sub
add
adc
pop
mov
adc
jg
add
add
roll
hlt
mov
faddl
stos
sahf
outsb
inc
jnp
test
add
mov
mov
push
ret
sti
cmp
add
cmp
xchg
jp
sbb
movsl
dec
rolb
sub
pop
fistpl
std
mov
and
sub
shll
sub
add
or
insb
insl
ret
push
sub
push
add
cmpsb
add
pop
les
add
fistpll
outsb
add
add
cmp
push
shll
test
xchg
sti
lcall
mov
mov
sub
mov
lds
dec
lret
xchg
shrl
addr16
cwtl
push
jge
cwtl
push
ljmp
push
add
xchg
push
fiaddl
adc
add
adc
xchg
movsb
mov
mov
stos
push
in
cmp
dec
add
dec
push
iret
inc
and
fs
fsubrl
in
outsb
mov
sub
or
and
test
mov
push
add
sbb
inc
jbe
and
adc
dec
mov
rcll
push
add
pop
and
xchg
and
popa
mov
adc
dec
or
add
add
in
lret
and
outsb
insb
xchg
mov
inc
insl
shll
notl
shlb
mov
cmp
push
lcall
in
in
pop
add
cwtl
rcrb
pop
mulb
inc
adc
addl
mov
shl
in
mov
add
mov
or
in
or
sub
add
dec
nop
add
add
cmp
adc
add
xor
dec
jg
sbb
push
jl
pop
ficoms
or
pop
sbb
adc
test
cmpsl
xchg
add
pushf
add
add
jl
mov
and
xchg
pop
adc
mov
push
bound
push
or
add
leave
lret
or
add
outsl
dec
add
jnp
inc
fmulp
add
add
loopne
add
sub
insl
out
sub
sub
popl
jmp
pop
mov
cmp
dec
or
sahf
sub
cmp
jp
or
sbb
fistl
xchg
sub
xor
add
push
ret
mov
xor
or
pusha
adc
jae
mov
dec
add
lret
mov
movsl
cltd
and
fcoml
add
std
jns
jne
out
adc
lea
arpl
sbb
sbb
mov
jle
xor
jp
scas
push
sbb
ss
mov
addl
and
jg
test
add
lret
outsb
dec
imul
jl
mov
dec
mov
mov
or
xchg
add
out
out
add
dec
rcrl
mov
pop
xchg
data16
jns
inc
mulb
add
jb
sub
and
xchg
test
pop
inc
cmp
loopne
addl
pushw
pop
cli
filds
loopne
sub
dec
jae
ds
cmp
iret
cmp
pop
add
jb
inc
mov
mov
add
daa
lcall
sub
inc
add
jbe
mov
das
dec
push
pop
xor
imul
je
sbb
sub
add
inc
fwait
sub
mov
pop
leave
xchg
jge
stos
mov
sub
xor
add
mov
insb
mov
cmp
add
cmp
mov
adc
mov
scas
add
cmp
add
cmp
test
add
lahf
xor
add
je
pop
dec
aas
xchg
daa
pushf
or
dec
bound
lods
repz
add
es
or
mov
cli
mov
pop
sbb
push
mov
inc
fdivl
sarl
sti
jmp
gs
adc
pop
add
roll
aaa
mov
inc
enter
xor
xchg
adc
aad
lods
fwait
stc
push
cmpsl
cld
lahf
mov
dec
add
pop
mov
repnz
mov
sbb
add
adc
cmp
add
add
imull
inc
jns
jle
out
loopne
jg
xor
pop
dec
arpl
xchg
sub
push
enter
pop
scas
cwtl
loopne
add
add
lea
and
xor
and
enter
push
iret
ret
mov
add
mov
pop
fisttpll
add
dec
cmp
add
imul
int
inc
sbb
ror
dec
nop
xchg
add
add
in
stc
call
pop
fdivrs
inc
add
dec
and
or
jge
dec
add
push
or
xchg
iret
jge
ljmp
lods
bound
add
rep
dec
sbb
out
mulb
leave
adc
push
push
sub
push
sbb
sti
or
je
cwtl
dec
mov
xor
xchg
or
sub
ljmp
push
sub
inc
test
dec
xor
mov
dec
cmpsb
imul
inc
lcall
pop
add
add
movsb
jae
xor
enter
in
dec
scas
add
rclb
ds
ja
enter
js
add
fisubs
add
push
bound
test
ja
je
push
and
adc
push
rolb
rolb
mov
pop
lods
and
leave
xchg
divl
les
sbb
mov
mov
fcoms
adc
xchg
mov
push
and
mov
xor
dec
mov
out
xchg
cmp
pop
add
arpl
imull
mov
add
mov
jae
daa
insb
enter
rcrl
cmp
out
lods
adc
aas
xchg
push
xor
add
jae
add
cmpsl
mov
test
jmp
scas
subb
leave
add
dec
cmp
mov
jns
test
or
dec
or
xchg
lods
mov
popf
pop
add
or
mov
pop
cmc
push
jg
bound
xchg
pop
pop
or
pop
mov
jmp
mov
add
aaa
out
push
pop
outsb
add
add
mov
hlt
mov
add
mov
ja
and
xor
sub
mov
adc
cmp
std
insb
add
jno
movsb
pop
clc
mov
aas
ss
lods
mov
stos
jb
sbb
fidivs
pop
loopne
shll
sub
repnz
dec
mull
cs
jl
sbb
lahf
add
jmp
jne
adc
and
les
test
insl
dec
inc
decl
sub
xchg
xor
add
ljmp
adc
cmp
xchg
or
xchg
dec
adc
into
add
lcallw
push
mov
xlat
add
adc
add
loope
mov
xor
and
stos
add
mov
add
jmp
sbb
add
in
add
pop
jmp
add
pop
movsl
cmpsl
mov
mov
in
aaa
pop
add
lods
int
sbb
fidivrl
fcmovnbe
cmp
ret
in
xchg
stos
adc
adc
test
rcrl
or
out
add
mov
out
call
jp
add
push
mov
in
xchg
pop
mov
dec
adc
or
inc
xlat
xor
add
jp
lds
pushf
add
test
sbb
jbe
add
lret
dec
sahf
stc
roll
subl
lret
test
clc
sbb
xor
cmp
aad
data16
add
and
stos
add
mov
daa
push
ja
mov
add
adc
mov
sub
jnp
inc
add
sahf
cmc
in
add
xchg
jmp
std
xchg
mov
ljmp
jl
pop
pop
stos
jle
fdivrl
shl
call
jl
dec
jb
sbb
insl
pusha
aad
add
jmp
mov
mov
aas
out
mov
add
test
pop
add
xor
enter
pop
push
dec
fs
cmp
stc
movsb
adc
fildll
lret
mov
xchg
and
push
pop
enter
pop
cld
or
flds
and
add
cmpsl
bound
add
sbb
loop
int
jmp
pop
out
mov
push
sbb
inc
inc
cmp
ljmp
add
xchg
jg
xor
pop
lret
adc
inc
dec
pusha
testb
add
cmc
add
push
lret
sub
in
sub
iret
imul
mov
mov
dec
add
test
arpl
jae
push
push
add
push
jno
add
int
inc
jne
roll
fdivr
mov
add
and
lock
mov
cli
std
add
sarb
jge
adcl
add
sub
push
mov
inc
add
jne
ror
dec
sub
mov
jecxz
add
addr16
inc
push
or
sub
scas
sub
pop
fdiv
fldt
xchg
add
scas
add
add
rolb
cmp
stos
ja
add
push
and
aad
jge
and
or
enter
shrb
cmpb
push
frndint
add
add
xor
sbb
scas
adc
out
cmc
mov
movsb
insl
scas
xor
add
xor
push
jmp
add
arpl
sub
mov
sub
xchg
jle
sti
mov
add
jno
pop
xchg
jl
mov
push
idiv
int3
add
add
lods
shll
jle
cmp
xchg
dec
add
xor
std
sahf
sub
jnp
adc
sbb
dec
lea
jmp
push
or
adc
mov
sbb
aam
add
fsubs
dec
ror
xchg
add
xchg
xchg
mov
cmpsl
hlt
add
xchg
add
adc
pop
mov
jbe
add
push
mov
jecxz
and
add
cmpsl
gs
cmpsl
adc
je
mov
into
xchg
adc
add
add
mov
add
bound
in
icebp
add
add
dec
pop
xchg
in
in
pop
loopne
xor
aaa
adc
cmp
sarl
das
add
sub
add
jp
in
xor
mov
xchg
outsl
dec
adc
pop
mov
ds
out
mov
cltd
insb
ja
loope
insl
add
sub
lahf
or
ja
mov
leave
mov
mov
jns
nop
and
jno
mov
scas
out
cmp
mov
inc
incb
add
jno
xor
pop
sub
pop
loopne
add
cli
popf
cmpsb
xchg
lock
in
xlat
stc
jl
nop
xor
mov
add
add
loop
int3
add
mov
cmp
adc
clc
outsl
pop
mov
stos
jno
xchg
add
add
xchg
xor
ja
movsb
jmp
cmp
and
mov
pop
ja
xchg
aas
dec
jno
cmp
xchg
sbb
add
loop
push
hlt
mov
popf
jl
dec
xchg
cmpsl
std
add
leave
push
and
xchg
ss
dec
xchg
push
add
aad
add
bound
or
fs
rorb
jns
daa
imul
pop
lcallw
js
pusha
add
push
repz
add
les
sub
adc
jecxz
xchg
add
push
add
mul
sbb
sbb
xchg
add
dec
jp
lock
add
sub
pop
sbb
scas
outsb
inc
movsb
add
jp
cmp
push
mov
daa
xchg
inc
push
out
imull
and
repz
jns
jmp
or
xchg
mov
jl
add
jbe
sub
jecxz
fwait
add
cli
mov
push
or
pop
pop
adc
pop
test
pop
sarl
add
xchg
add
jle
leave
xchg
lds
sbb
add
ficoml
cmp
add
cmpsb
xchg
pop
add
les
imul
inc
jns
cs
pop
lods
aam
scas
mov
mov
jno
cmp
popf
jle
pop
push
stc
pop
int
out
rorb
sub
add
jge
shrb
xor
fxch
cld
push
lods
adc
dec
add
cmpsb
mov
xchg
pop
imul
fcompl
sbb
lret
int
sbb
or
cmpsb
outsl
add
test
fidivrs
jp
in
cmp
into
or
ficoml
mov
sahf
push
dec
push
cmpsb
and
lock
mov
add
lock
add
aas
push
pop
mov
sbb
test
hlt
aas
sub
pop
dec
ret
testb
insl
test
mov
inc
jg
sub
pop
loop
lock
push
cmp
lret
add
adc
add
xchg
adc
int3
jne
std
flds
add
dec
mov
xor
mov
leave
pop
test
inc
add
loope
les
incb
push
jecxz
sbb
jbe
cli
ret
push
add
je
xor
rcll
pop
cmp
adc
iret
xchg
cwtl
add
and
dec
adc
iret
fucomi
fwait
inc
add
jmp
add
andl
add
repz
aas
add
divb
add
ds
jo
xor
lods
add
add
lahf
jp
ficoms
sbb
mov
mov
cmp
and
or
and
add
adc
xchg
pop
in
xchg
and
into
add
js
add
mov
inc
cli
xchg
xchg
cs
mov
jge
popf
or
sti
and
movsb
daa
mov
xor
sbb
jbe
inc
xchg
and
mov
pop
cmp
add
popf
cs
mov
jl
pop
clc
pop
imul
add
cs
xchg
push
add
ret
scas
cwtl
clc
fcmovnb
add
insb
jno
shl
push
pusha
add
add
pop
std
cmpsb
add
ljmp
mov
sbb
rcr
pop
pusha
stos
push
sbb
mov
rclb
sub
loop
aas
in
cmpsb
push
sub
mov
int3
add
cmp
or
adc
ds
dec
pop
fimull
sar
je
or
push
cmp
xor
add
xchg
lret
add
scas
mov
push
je
push
xchg
xchg
dec
xor
dec
add
inc
stos
xchg
adc
cwtl
outsb
add
push
or
pop
aad
jno
jb
inc
imul
add
add
xor
push
adc
jns
xchg
dec
and
add
jmp
mov
push
dec
test
or
in
repz
cli
and
out
pushf
cld
adc
cmp
mov
sahf
outsb
jns
cmp
xchg
or
add
pop
andb
loopne
add
pop
out
adc
sahf
pushf
jbe
add
or
lahf
inc
mov
jbe
bound
mov
adc
add
test
nop
test
movsb
fmuls
jl
imul
add
xor
aad
jne
jle
pop
inc
sbb
repnz
pop
add
inc
fwait
cmp
popf
test
cmp
js
out
xlat
jl
sti
out
pop
and
cmp
test
xor
add
in
jo
arpl
add
jne
add
leave
xchg
std
push
add
xor
push
into
jbe,pt
loop
in
add
inc
sbb
gs
lret
jae
out
add
add
xor
fnstcw
sbb
out
mov
adc
pop
dec
inc
fsubp
nop
dec
add
outsb
popa
cwtl
pop
add
in
sbb
push
insb
xchg
icebp
out
jno
repz
mov
xor
mov
push
push
sub
push
add
adc
mov
sbb
cwtl
outsl
jp
cmp
mov
xor
mov
ficomps
jo
data16
dec
add
test
lds
cli
xor
aam
cmp
sahf
repnz
fiadds
fisttpl
repnz
addb
ds
es
mov
out
cmp
scas
mov
cmp
xchg
pop
adc
les
and
mov
adc
ret
iret
mov
add
add
dec
add
cmpsl
push
fwait
add
jmp
out
out
mov
icebp
sbb
xor
and
in
push
lcall
add
insb
add
mov
sahf
add
add
rorl
jmp
add
outsl
dec
add
xlat
hlt
mov
jge
mov
adc
in
inc
add
dec
sub
mov
jbe
lock
xchg
push
pop
stc
enter
push
js
mov
aas
imul
add
hlt
add
ss
out
sub
sub
mov
or
cmp
jle
aad
lods
shl
pop
cmpsl
mov
mov
loope
pushf
pop
loopne
sub
xchg
xor
jge
aad
sahf
daa
xor
cvttps2pi
add
sti
push
push
ret
sbb
mov
mov
add
push
scas
cmp
fs
test
in
shlb
stc
pop
sub
xor
pop
add
lock
andl
or
out
and
xor
pushl
adc
pop
and
and
and
fiaddl
insl
lea
add
add
iret
xchg
incb
cmpsl
add
test
std
xor
fisubl
add
enter
and
cltd
lret
pop
mov
jbe
aam
ljmp
movsl
and
cmc
cmp
js
ret
rorl
stos
inc
cmpsl
out
int3
pmulhw
int
aam
stos
sbb
outsl
repz
cmp
dec
pop
or
in
mov
sbb
mov
pop
and
sbb
loopne
mov
add
jge
add
loopne
test
push
fmulp
pop
push
std
add
mov
mov
pop
adc
jnp
add
fimull
fisubs
mov
mov
lods
mov
loop
int3
idivb
or
lods
pusha
mov
add
xchg
pop
jne,pt
dec
int
add
ss
add
cmp
jle
pushf
adc
add
stos
lret
cltd
push
cmp
divps
mov
sbb
cmp
push
popf
fists
dec
add
add
fwait
les
mov
clc
adc
mov
mov
pop
or
decb
lods
cltd
pop
xor
mov
or
lea
mov
sbb
ja
inc
add
mov
mov
add
bound
sbbl
sbb
cld
add
add
sti
push
dec
add
mov
pop
xor
add
add
pop
inc
jae
xchg
pop
mov
add
jae
dec
add
mov
jnp
sub
pop
push
add
or
mov
cmc
movsl
repz
add
add
popa
cmpsb
inc
sub
test
or
add
add
add
mov
int
rorb
add
mov
add
repnz
add
out
cmp
hlt
mov
push
mov
data16
cmp
add
adc
imul
and
loop
mov
mov
add
iret
mov
jbe
pop
pusha
adc
and
mov
inc
sub
fcoms
ficomps
cmc
mov
mov
push
xchg
pop
pop
mov
jno
iret
inc
lcall
push
xor
add
add
xor
pop
out
rcl
sub
xor
jnp
jo
sub
fdivs
sahf
arpl
xchg
ljmp
mov
xchg
rcl
jl
out
inc
and
andb
aaa
xor
nop
outsb
add
dec
mov
pop
xor
negl
enter
repnz
xchg
call
pop
push
add
mov
mov
mov
aad
stc
movsb
and
push
icebp
xor
or
dec
pop
adc
add
scas
imul
pop
jl
add
fwait
out
add
imul
jno
std
aam
fists
ss
mov
out
mov
mov
add
scas
add
mov
mov
repz
clc
fwait
xlat
dec
fadds
add
add
gs
or
shrb
mov
add
fisubrl
iret
inc
mov
call
xlat
jg
scas
fdivrp
in
push
lcall
nop
jge
mov
add
cmp
popa
and
mov
jl
cmp
ja
mov
or
mov
xchg
sar
adc
shrl
push
and
sbb
mov
in
sbb
jae
xchg
xchg
cli
aaa
add
out
xor
hlt
and
pop
lods
aaa
pop
add
maskmovq
testl
mov
pop
xlat
push
out
loop
fistl
sahf
xlat
add
cmp
jl
cli
jb
add
add
jmp
xor
mov
lret
addr16
mov
add
mov
jle
xchg
nop
and
lcall
add
fildl
adc
roll
hlt
outsb
xor
imul
or
repnz
inc
daa
mov
enter
add
add
das
sbb
ljmp
xlat
mov
xchg
xor
imul
mov
push
pop
add
in
daa
cld
mov
add
sbb
pop
enter
sarl
sbb
je
cltd
sbb
cwtl
add
in
cmp
testl
cmp
fwait
in
fs
mov
jae
mov
sub
mov
add
pop
je
in
fistpll
add
sub
int
jae
bound
pusha
dec
ret
add
ltr
ds
inc
add
xchg
pushf
pusha
insb
or
call
add
leave
mov
jbe
mov
aaa
dec
pop
jno
or
stos
test
jge
mov
out
xlat
add
filds
lret
or
cmp
lock
js
aaa
add
ljmp
movsb
arpl
mov
xchg
xor
sbb
sarl
das
loop
and
fwait
pop
add
adc
sub
notb
add
push
xor
push
lret
fsubl
sub
dec
mov
add
fidivrl
adc
jae
jmp
add
hlt
dec
xchg
xchg
cs
mov
or
xchg
mov
popa
jb
add
mov
imul
jle
pop
fcoms
pop
xor
inc
in
aad
inc
push
add
sub
mov
scas
call
scas
xchg
gs
adc
xchg
lods
aaa
test
fcoms
inc
out
xor
in
arpl
add
mov
int3
ret
mov
cltd
sub
icebp
mov
add
mov
pop
cld
clc
aam
pop
push
stos
rcrl
cmp
lcall
adc
add
cld
cmp
jg
pusha
enter
mov
push
xchg
add
cmp
or
mov
adc
out
ret
mov
loope
adcb
and
jns
inc
lods
sbb
mov
and
es
ljmp
mov
icebp
lret
sbb
or
jnp
insb
add
sbb
push
adc
or
sbb
add
clc
add
mov
push
xchg
and
mov
lret
dec
mov
add
mov
test
dec
add
or
mov
in
push
testl
add
and
add
push
jns
arpl
clc
or
sub
add
orb
add
add
xor
add
add
ljmp
mulb
add
mov
das
sar
fcoms
push
pop
add
jl
pop
xchg
sub
sahf
dec
addb
mov
dec
in
ds
add
out
add
add
xor
cmp
mov
fdivl
add
add
movsb
mov
add
and
jecxz
mov
mov
or
xchg
mov
out
ds
and
add
cld
inc
sub
inc
daa
mov
pop
stos
cmc
sahf
cmp
adc
in
add
or
push
fwait
into
addr16
in
mov
sub
push
out
add
ljmp
or
or
rorb
sub
add
add
insb
or
pop
cwtl
nop
das
pop
mov
dec
jb
adc
mov
shr
cwtl
add
testl
jns
lds
add
cld
add
xor
arpl
ret
xchg
add
add
jecxz
fsubrp
add
inc
mov
jl
dec
ss
inc
pop
add
test
sbb
inc
add
js
aam
inc
scas
add
int3
ds
loop
push
mov
xor
test
mov
inc
sbb
mov
sbb
ljmp
or
adc
cmp
xchg
and
inc
mov
fistl
add
js
je
push
or
inc
fs
rcrb
cmp
jbe
cmp
sub
insb
mov
into
sub
add
adc
loopne
sub
fisubs
or
inc
bound
add
inc
mov
add
imul
pop
ror
insl
loop
sub
dec
sub
in
cltd
inc
ret
mov
xor
lods
loopne
mov
sub
mov
rcrb
jmp
push
repz
add
pop
shrl
jl
add
es
jne
je
add
ficoms
mov
pop
add
shr
andl
cmp
jecxz
fsubrs
or
fidivrs
ds
xchg
jge
call
adc
xor
cmp
add
push
add
and
inc
add
xchg
lahf
adc
xchg
lret
movsb
mov
stc
add
icebp
add
sbb
ljmp
movb
or
dec
lods
push
bnd
movsl
add
add
outsb
mov
cmp
out
mov
xchg
je
aad
cmpsb
ljmp
lds
add
bound
sub
addr16
lcall
in
test
add
pop
fcmovbe
or
enter
aad
stos
lcall
cmpl
rorb
sub
mov
shll
outsl
inc
cmp
mov
and
push
ret
jge
pop
aaa
scas
stos
mov
ss
adc
cmpsl
das
jle
xor
inc
sub
pop
adc
fstp
aaa
addb
vsubsd
push
jne
movsb
jns
or
in
stos
sahf
clc
and
push
fiaddl
subb
push
outsb
xlat
outsl
test
inc
add
pop
add
daa
fcomp
inc
add
mov
in
mov
ss
adc
aam
sub
mov
mov
dec
add
aad
add
les
jns
sti
popf
add
out
mov
add
add
or
mov
or
sti
cmp
mov
xor
dec
xor
shl
arpl
lret
and
icebp
push
ja
mov
mov
ret
mov
scas
pop
aam
into
mov
dec
sti
mov
push
loopne
jno
add
xchg
cmp
dec
stos
stos
lock
jne
add
clc
adc
sbb
inc
mov
test
jge
clc
lods
fsubr
add
mov
mov
and
xchg
mov
pushl
int3
movsl
cmp
or
sarb
mov
fldt
sbb
sbb
xor
mov
add
push
roll
mov
cmp
adc
cli
jmp
pop
and
std
xor
jle
ret
les
js
and
arpl
push
xchg
stc
cmc
subb
add
pusha
test
sub
test
pop
aad
and
mov
add
cmp
xchg
cmp
out
inc
dec
jl
jl
push
push
push
push
loopne
mov
lods
dec
lea
mov
jl
lret
mov
push
sub
mov
out
mov
dec
movsb
pushf
add
xchg
mov
dec
rclb
fdivr
mov
fs
lds
jp
pop
push
jb
lock
or
enter
rorb
xchg
cmp
or
or
adc
insl
ds
cs
or
mov
jno
test
fldl
fcomps
mov
cmp
sahf
shlb
in
pop
rolb
cmp
mov
xchg
sbb
sub
cmpsl
ret
cld
or
jg
scas
sti
adc
inc
add
aad
test
cltd
jecxz
and
mov
call
add
cmp
outsl
xor
and
es
mov
add
dec
add
adc
lock
add
add
scas
notl
pop
pop
add
ljmp
push
dec
xchg
sub
add
or
sbb
loop
mov
and
xchg
lock
push
adc
jg
aad
ret
cmc
or
push
mov
inc
lds
xchg
add
aam
add
test
push
mov
arpl
add
and
push
adc
pop
cmp
stc
je
jg
insl
mov
lcall
lods
lea
lret
and
loope
je
xchg
xchg
add
in
cmpsb
mov
fsts
mov
or
add
shll
pop
es
sti
fldenv
ror
roll
cmpsb
add
lret
xchg
data16
mov
pushf
ljmp
out
cmpsb
push
dec
nop
add
mov
xlat
jbe
pusha
loop
sbb
add
loop
add
sbb
mov
cmc
xchg
inc
scas
call
mov
add
add
add
popf
or
data16
xchg
int
lock
outsl
roll
pop
cli
sbb
pmuludq
in
xchg
adc
jae
out
push
jne
scas
push
stos
pushf
mov
inc
add
ret
adc
jl
dec
mov
shll
push
pop
roll
lahf
in
adc
mov
xchg
add
sub
sbb
add
sbb
call
mov
xor
ja
aam
and
and
jmp
loop
inc
in
pop
repnz
pushf
lahf
outsl
pop
mov
jo
jg
sbbl
adc
add
jns
loopne
add
adc
push
jle
rclb
ret
in
loopne
jne
adc
jg
add
into
scas
add
ljmp
mov
add
mov
jo
or
or
add
enter
jo
jne
xchg
insb
sub
add
jno
add
mov
pop
adc
aas
adc
call
sbb
or
add
sub
lret
add
sti
cmc
jno
xor
push
or
push
xchg
add
or
sti
popa
cmpsl
add
pop
inc
into
jp
xchg
test
cmp
push
adc
xor
mov
xchg
add
add
jnp
int3
notl
or
fdivl
mov
rcrl
add
xor
mov
scas
jne
rcll
int3
sti
lahf
add
loopne
je
cmpsl
and
movsb
add
je
and
push
add
jle
leave
pop
mov
mov
es
rorb
dec
loopne
pusha
jmp
add
mov
jb
add
or
mov
aad
popf
pop
sub
mov
xchg
pusha
in
add
jbe
sub
mov
pop
incl
xor
inc
fwait
lcall
add
sbb
movsb
sbb
dec
mov
add
fsubr
add
sbb
or
js
mov
ret
in
jl
iret
pop
mov
or
mov
sti
test
outsl
add
xor
rcll
js
jg
imul
add
cld
xchg
xor
mov
test
pusha
cmp
aaa
gs
enter
cmp
lcall
jb
ret
add
popf
ret
add
mov
ret
std
out
imul
lea
mov
cmc
cmp
testl
add
cs
mov
xor
repnz
outsl
stc
lods
xchg
out
dec
add
je
adcl
into
repz
mov
cmpsb
sbb
cmp
push
add
add
add
mov
lds
jnp
dec
adc
int
mov
into
sub
add
addr16
scas
into
hlt
mov
daa
add
push
and
ljmp
jle
add
jg
jne
cmpsb
add
fs
sbb
push
add
fsubrs
mov
inc
xchg
loop
adc
xchg
push
xchg
icebp
mov
sub
mov
xchg
add
pop
nop
inc
loope
or
push
stos
sub
bound
dec
add
sub
inc
dec
add
sub
cmp
dec
popf
sbb
push
scas
popa
jbe
mov
add
repnz
mov
add
push
mov
mov
dec
cmp
adc
pop
cltd
add
add
jge
pop
add
fldt
jecxz
or
mov
mov
addr16
add
pop
sub
mov
cli
imul
add
rorl
fcoms
mov
cmp
push
and
ds
mov
xchg
sub
scas
shl
add
imul
jb
mov
punpcklwd
sub
and
jne
xor
int
rcll
loop
push
outsl
add
add
cmp
push
pop
aam
sarl
imul
adcb
add
enter
in
add
popf
xor
daa
add
hlt
testb
lret
sbb
mov
xchg
cmc
and
loop
add
dec
add
add
dec
xcrypt-cfb
cmpsl
and
cmpsb
sti
dec
mov
addr16
js
xchg
sbb
gs
mov
xchg
or
cmp
sbb
pop
adc
lret
jae
lret
std
pop
mov
or
mov
mov
fidivrl
orl
add
fwait
and
daa
shlb
mov
es
ja
cltd
std
iret
or
mov
add
or
mov
fsubl
inc
rorl
xchg
add
fistpl
xchg
cli
add
addr16
ljmp
imull
jne
fnstcw
push
loope
jbe
jo
cli
sbb
movsl
outsl
ret
add
mov
cli
add
jecxz
jo
add
adc
cmpsb
fs
sti
pop
mov
add
fbld
xchg
sbb
add
adcl
movsl
pop
add
arpl
ds
lcall
aad
scas
push
prefetch
push
xor
sbb
dec
add
andl
add
fadds
sub
dec
pop
ljmp
ljmp
fnsave
xchg
push
std
dec
add
lcall
or
push
push
mov
add
add
cld
add
add
fistpll
mov
push
pusha
insb
sbb
add
cwtl
scas
add
pop
xlat
jg
lock
fdivl
mov
push
mov
mov
lods
stos
add
cmpsb
xor
or
add
push
mov
loopne
add
push
push
out
pop
sbb
mov
enter
mov
les
pop
imul
pop
pop
cltd
dec
orl
lcall
adc
test
imul
inc
push
inc
jnp
push
out
xchg
xlat
xchg
das
adc
mov
in
pop
mov
aad
lret
add
fbld
dec
add
out
pop
or
lods
pop
inc
fdivl
pop
insl
rorb
stos
push
sbb
shlb
mov
adc
lret
xchg
cmp
sbb
ss
out
or
xchg
sbb
mov
add
les
add
inc
ja
cli
sti
test
or
add
cmp
div
xor
push
pushf
xor
outsl
sub
jb
test
or
mov
mov
cmp
inc
xchg
xor
mov
jo
mov
adc
push
dec
fsubrp
movl
mov
jecxz
loopne
out
jb
add
and
and
mov
push
and
sub
mov
push
and
mov
out
aas
clc
jnp
xor
jnp
add
in
enter
jmp
int
rorb
pop
dec
and
mov
xchg
jb
popf
push
xor
dec
dec
aas
dec
loope
sahf
jne
pop
insl
jae
or
shll
xor
fucomp
sbb
pop
into
fdivrl
add
xchg
test
adc
cwtl
push
jecxz
inc
adc
or
in
lcall
jp
movsl
dec
iret
pop
and
add
pop
divb
mul
add
iret
fldl
cmc
mov
js
mov
sub
lret
outsb
pop
dec
flds
fdivs
push
dec
aam
fisttps
lock
ret
cmpsb
dec
jbe
mov
pop
stc
in
add
add
fidivl
cmpsl
push
jmp
pop
das
xchg
push
add
add
mov
pop
add
es
ds
mov
fistl
add
cmp
mov
loopne
loopne
xchg
push
mov
add
sbb
xchg
add
mov
enter
loope
lret
mov
inc
pushf
add
inc
arpl
ret
xor
inc
jmp
cs
rorb
adc
xlat
sbb
jae
xchg
add
out
add
xchg
xor
test
mov
push
add
insb
cmp
jecxz
add
in
or
adc
aad
pushf
push
icebp
pop
mov
dec
js
sub
jp
add
mov
icebp
pop
jecxz
mov
into
inc
mov
loop
int
dec
dec
faddl
add
sbb
test
mov
lds
adc
ret
add
pop
add
add
out
out
mov
xor
and
cmp
daa
pop
lcall
lret
jb
mov
stos
dec
lahf
lcall
movsb
js
dec
pop
outsb
mov
gs
mov
orb
push
xor
in
jp
cltd
leave
add
pop
outsl
add
xchg
add
mov
or
pop
pop
pop
jg
add
xchg
or
add
add
add
add
fnsave
or
outsb
push
add
adcl
jg
insb
loope
add
or
add
pop
inc
pop
push
incb
daa
shr
scas
add
and
test
ja
dec
sub
jle
cli
add
add
jno
cmp
imul
leave
and
pop
xor
cmc
xchg
add
xor
add
push
sbb
xchg
jnp
xchg
add
pop
add
icebp
add
sub
xchg
adc
sub
jae
les
iret
mov
add
je
cmpsl
out
insl
icebp
cmpl
mov
add
ja
js
add
cmpsl
incb
std
mov
add
sub
xchg
add
and
rolb
stos
popf
xchg
push
and
mov
and
push
imul
in
mov
aaa
add
out
lea
sbb
cltd
std
es
clc
mov
out
movsb
mov
mov
sbb
shlb
lock
jp
sub
icebp
repnz
mov
pop
or
inc
add
add
mov
adc
cmp
mov
mov
popl
add
shll
gs
mov
cmpsl
loop
daa
jl
jp
aad
das
cmp
popf
mov
sub
inc
aas
fimull
inc
nop
dec
lret
int
fcoms
mov
push
int3
xchg
daa
js
adc
je
repz
rcrl
iret
lret
jmp
push
xchg
aaa
movsb
add
add
xorb
sub
push
filds
adc
imul
inc
cwtl
add
xlat
std
pop
mov
adc
mov
shlb
in
sub
sbb
xor
dec
mov
fstpt
and
rcrb
inc
mov
cmp
push
add
mov
mov
sub
xor
mov
xor
negb
push
or
sbb
bound
es
push
xlat
sar
aad
or
add
push
jns
stc
out
xor
jl
mov
jecxz
xchg
testb
jl
jo
or
sbb
push
bound
pushf
in
cmp
shll
int
add
push
mov
and
or
xlat
push
stc
mov
add
add
jp
add
dec
ljmp
subb
dec
mov
sbb
lods
sbb
xchg
imul
les
sub
jnp
sbb
imul
pop
jg
push
aam
add
and
add
inc
popf
inc
in
adc
add
xchg
xor
rcl
enter
jmp
add
jae
andl
dec
aad
cmp
and
xchg
pop
pop
add
jno
pusha
xchg
pop
sbb
inc
add
enter
sbb
ljmp
add
xchg
das
push
xchg
add
cmp
jecxz
lea
push
fldenv
ficomps
add
repnz
jl
cmp
mov
cmp
xchg
inc
mov
add
movsl
jmp
adc
int3
add
leave
cmc
aas
xor
add
add
mov
loop
mov
inc
popf
mov
pop
in
lods
sarl
nop
fcoml
mov
add
jle
sbb
pop
ss
jg
incb
fadds
ret
int
push
lret
add
xor
jne
sbb
mov
jg
push
fdivrs
fldcw
or
push
and
dec
arpl
in
pop
fistpll
and
mov
or
mov
inc
adcb
lds
mov
add
data16
pop
push
and
add
cmp
pop
add
fldenv
mov
add
pushf
in
out
call
std
into
imul
movsl
xchg
inc
js
std
mov
lock
add
movsl
adc
xor
add
outsl
dec
dec
inc
loope
push
push
out
aaa
jl
scas
mov
xlat
iret
lcall
cmp
out
add
gs
data16
lahf
pop
movsl
add
jmp
mov
add
mov
out
pop
mov
test
mov
int3
lret
add
bound
je
xchg
or
xchg
cltd
iret
dec
or
pusha
mov
mov
cmp
push
stc
daa
addb
sbb
mov
dec
sub
mov
add
or
push
sti
call
jnp
das
mov
mov
adc
add
jb
and
mov
aam
std
clc
orb
insl
out
outsb
test
aaa
or
shr
sbb
pushf
and
hlt
sub
movsb
or
add
cmpsl
xchg
shlb
add
aam
sbb
mov
sub
test
mov
sub
dec
cmp
bound
dec
pop
aam
sti
mov
dec
add
cmp
arpl
dec
and
jmp
jl
cmp
add
jb
or
add
daa
mov
inc
add
pop
cmpsl
add
lret
sub
adc
mov
dec
divb
loop
add
mov
and
jmp
jl
jb
push
in
lcall
icebp
pop
xlat
roll
sub
call
ja
dec
sub
sbb
push
outsb
add
dec
addr16
mov
or
and
ja
jne
adc
inc
push
dec
and
push
ljmp
jno
push
add
xchg
pop
push
or
or
mov
inc
ficomps
mov
mov
add
mov
xlat
add
cmp
sub
jp
arpl
add
add
stos
lahf
ficompl
push
fdivrl
add
negb
add
out
add
add
aaa
xchg
add
stos
or
sub
add
add
fwait
and
out
pop
jae
loope
jmp
xor
dec
pop
push
add
or
jg
add
ljmp
pushf
jae
sbb
and
mov
xor
test
lcall
or
xchg
add
adc
out
inc
pop
fxch
add
imul
sarl
or
pop
pusha
add
jge
call
scas
pop
pminub
push
movsl
sub
add
add
repnz
add
dec
add
popa
imul
daa
jb
aaa
mov
add
xor
add
adc
add
push
cmp
pop
mov
mov
fmuls
and
add
mov
sub
stos
orl
mov
sbb
repnz
xor
lret
add
test
pop
or
out
add
cltd
rclb
outsl
out
add
data16
add
cs
mov
dec
add
add
mov
outsl
sub
add
cmpsb
fiaddl
dec
add
ret
jmp
les
out
push
mov
pushf
add
jmp
imul
fcoml
add
js
pop
test
nop
ja
pop
pop
inc
mov
in
pop
or
cmp
fnstsw
add
mov
outsb
repz
ljmp
aam
js
add
adc
lock
sar
test
cmp
ljmp
add
call
faddl
outsl
int3
repnz
rorl
ljmp
out
dec
loopne
pop
nop
adc
gs
add
add
test
add
push
fs
add
mov
fwait
add
mov
das
jmp
xor
mov
cmp
jg
add
adc
add
mov
sub
movsl
pushf
dec
mov
add
scas
popf
jmp
ds
mov
mov
pop
stos
sub
je
push
lcall
xchg
xlat
add
prefetchw
fildl
mov
inc
sub
test
dec
mov
bound
xchg
mov
push
or
ss
imul
add
pushf
push
cmp
mov
inc
fsubrl
int
add
pshufw
repnz
ret
jg
jnp
add
scas
xchg
push
pop
inc
xor
add
add
pop
bound
add
add
loop
jbe
mov
inc
sub
xchg
std
mov
add
enter
lcall
stos
aam
stos
xchg
rcll
lds
add
add
add
scas
stos
ljmp
sbb
add
lods
add
std
add
in
xor
ret
scas
cmc
mov
popa
cmp
mov
icebp
mov
push
xchg
ljmp
mov
mov
push
adc
cltd
jmp
inc
repz
mov
dec
sti
out
imul
add
lret
stc
add
inc
xor
sbb
ds
sbb
or
call
add
add
dec
sub
dec
cs
sub
xor
shlb
sbb
repnz
xchg
jnp
cmpsb
andl
and
int
push
pop
jbe
add
xor
sub
stos
fists
mov
and
mov
mov
idivl
xor
and
lret
add
repnz
add
cmpsl
cli
add
add
adc
ret
inc
add
jmp
add
add
or
push
add
insl
sbb
lods
mov
push
xchg
test
js
cmp
les
add
aad
add
cmpsb
mov
push
mov
pop
xor
icebp
add
in
adc
add
or
add
xor
imul
dec
sbb
fldenv
out
mov
lock
adc
shlb
lods
cwtl
cld
mov
push
jae
loopne
and
sbb
cwtl
adc
mov
lcall
shrl
adc
push
push
or
or
sbb
or
cltd
xchg
fiadds
cmp
xchg
inc
add
sahf
jge
adc
adc
dec
into
dec
daa
popf
pop
push
and
mov
popf
mov
aam
or
push
xchg
add
aam
inc
mov
add
ljmp
cmp
cmp
stos
mov
arpl
sahf
push
js
movsb
jo
sti
mov
cs
push
gs
dec
mov
jle
imul
stos
shll
add
mov
add
cmpl
mov
and
dec
dec
push
cmp
rcrb
sub
adc
pushf
add
divb
add
dec
inc
cwtl
scas
and
fs
aaa
add
or
stc
pushf
dec
push
dec
out
cld
in
add
sub
add
outsb
sub
fxch
popa
les
cmc
jnp
or
leave
lods
aad
das
jge,pt
sbb
cmp
clc
imul
call
lods
jnp
inc
int
pop
mov
sub
arpl
add
pop
pop
dec
add
mov
mov
mov
test
clc
sti
mov
fcomps
sbb
add
shlb
jnp
div
sub
ret
add
or
clc
xlat
dec
popa
mov
in
imul
or
js
stc
add
jg
add
inc
dec
roll
addr16
aad
test
add
pusha
push
add
mov
mov
mov
pop
mov
add
cmpsb
verr
add
aad
test
cs
cmpsl
add
mov
fisttpl
mov
movsl
fs
ss
enter
add
test
addl
and
lcall
jno
lods
sbb
iret
cmp
mov
out
fstps
testb
sahf
mov
aas
mov
pop
xchg
adc
add
dec
test
xor
xchg
rclb
lock
and
mov
inc
cmp
cmp
jmp
test
int
sub
int
inc
adc
aaa
movsl
movb
dec
add
add
mov
fistpll
add
loopne
add
jne
dec
fstps
add
push
fidivrl
cs
stos
adc
add
jns
ret
sub
jo
jmp
pop
lods
scas
loopne
cld
out
xchg
xor
mov
add
nop
add
pushf
add
sub
add
mov
lea
cwtd
xchg
lret
xchg
or
popa
add
fwait
popl
jns
mov
cwtl
fwait
adc
inc
add
add
add
add
rolb
test
pop
loope
and
into
add
mov
inc
arpl
std
mov
jae
addr16
js
pop
cwtl
add
lcall
jge
leave
sub
ss
pop
pop
add
loop
fisttpll
add
lea
aas
pop
mov
add
mov
add
jp
loop
xor
add
cld
repz
sarb
aad
mov
add
arpl
dec
mov
addb
mov
xchg
mov
sub
outsl
popf
inc
das
add
add
mov
lock
lds
rolb
mov
adc
mov
inc
orb
sbb
pop
testl
iret
jbe
lahf
inc
movsl
add
xor
or
jmp
sbb
out
sub
lds
dec
dec
add
cmpb
add
fcoms
fistpll
jno,pn
mov
fisubrl
pop
xchg
clc
ret
add
bound
pop
xchg
mov
cwtl
filds
test
dec
pop
aas
pop
push
std
xchg
xchg
aaa
xor
add
mov
testb
add
push
repz
add
sti
pop
fidivrs
mov
xlat
loopne
enter
ss
lahf
fsin
add
add
repnz
call
subl
sbb
mov
cmp
lret
or
add
jl
dec
and
sti
add
xor
add
dec
out
arpl
cld
aas
or
xor
psubsw
mov
cld
add
add
pushf
mov
mov
sub
add
mov
cmp
int
cmp
in
rorl
xchg
cmc
sarb
add
jns
arpl
jo
xor
mov
cmc
cld
in
pushf
jecxz
lret
pop
leave
mov
mov
add
sbb
xor
or
jne
ret
pop
add
cmp
addr16
es
push
cmp
dec
jecxz
mov
adc
jnp
je
aam
xor
cmp
call
push
out
add
fsubrl
jbe
out
fs
jecxz
test
add
add
sbb
inc
cs
pop
loopne
add
xor
push
add
or
add
ret
or
daa
xchg
sub
mov
mov
inc
add
push
loopne
dec
loope
xchg
add
adc
add
rcll
add
scas
mov
add
mov
xchg
test
rolb
stc
repnz
jg
cmp
movsl
fisubs
jae
jmp
sbb
daa
xor
jp
shl
shrb
popa
pop
lret
mov
xor
pop
repz
push
jl
add
add
jo
inc
loope
cmpsb
cwtl
mov
loopne
out
adc
daa
mulb
sub
sub
mov
jb
and
jp
test
push
sub
jge
call
jmp
lahf
add
inc
push
dec
jl
mov
leave
mov
fstl
popa
out
jl
jnp
js
stos
dec
mov
dec
ret
repz
mov
movntps
add
lods
inc
sub
sbb
daa
setnp
lods
jl
jne
push
pop
or
jb
cmp
movsl
sub
add
testb
mov
arpl
stc
ret
push
clc
or
mov
add
lods
push
add
fldl
out
cmp
pop
sbb
faddl
jle
cmp
jmp
ss
sub
add
lcall
and
add
fildll
xor
mov
add
mov
sti
sub
aaa
mov
jge
cs
pop
insb
repz
in
sbb
adc
in
jg
add
pop
fildll
mov
lods
js
scas
add
push
adc
fldl
or
jp
pop
cmp
cmpsl
cmp
jl
sbb
cmp
inc
add
lock
sub
inc
push
add
jno
pop
cmp
add
ja
cmp
sbb
aad
faddl
popa
xchg
jecxz
test
in
jecxz
mov
fwait
adc
add
xlat
aas
je
bound
call
in
addb
adc
xor
add
adc
xchg
insl
mov
jns
ficoml
jne
add
mov
add
dec
int3
out
fs
sti
aam
mov
leave
add
xor
or
in
scas
dec
iret
adc
sti
add
stos
fistpll
sti
dec
dec
add
fldl
inc
jnp
ss
rcll
movsl
data16
and
or
mov
mov
jnp
inc
aad
and
sbb
adc
add
adc
popa
test
pop
out
rorl
xor
jecxz
out
sti
call
fnstsw
lock
insb
mov
adc
loop
adc
adc
add
icebp
nop
int
cmp
add
xor
inc
inc
sub
push
inc
add
dec
outsl
incl
inc
mov
xchg
add
ljmp
cmpsl
add
aad
popa
push
clc
js
ljmp
adc
xchg
pop
arpl
mov
mov
test
outsl
iret
stos
add
pop
mov
sbb
nop
lahf
mov
add
mov
into
and
mov
mov
mov
pop
adc
arpl
out
aad
and
add
add
subl
add
adc
mov
ror
add
mov
sbb
or
adc
or
mov
mov
push
add
sbb
cmp
repnz
xor
repnz
cmp
adc
testl
lea
adc
int
pop
xor
cs
test
addr16
add
sbb
lds
sbb
add
pop
add
adc
nop
xorl
xchg
mov
add
mov
lea
repz
jp
sbb
add
jb
cmpsl
mov
pop
cmc
xor
fistpl
adc
jmp
cmp
pop
fwait
cld
jle
push
stc
iret
sahf
lods
sbb
mov
in
mov
or
sub
add
push
int
nop
inc
and
or
aaa
add
adc
stos
add
in
pop
add
sahf
inc
add
das
aad
call
and
stos
add
incl
loopne
inc
pop
add
inc
xchg
pop
mov
mov
jmp
inc
pop
pushf
add
fdivp
fmulp
mov
push
mov
sbb
popa
or
loop
inc
movsb
pop
push
pop
push
stos
pop
mov
mov
mov
pop
xlat
jns
fsubl
inc
ffreep
add
add
xor
test
mov
sbb
jmp
sub
xchg
lahf
xchg
mov
rclb
sahf
out
add
js
nop
adc
add
fcomps
add
movsl
scas
adc
jne
je
gs
cltd
mov
add
add
add
add
push
xorl
cmp
add
loope
fs
sub
fwait
sti
push
fistpll
imul
test
mov
add
or
imul
mov
xchg
add
inc
ja
stos
inc
inc
stos
add
ja
push
mov
cmp
jge
ret
add
cmp
and
imulb
imul
xchg
addr16
pop
pop
aaa
add
add
std
scas
add
push
jmp
out
add
stc
jns
ret
ret
scas
mov
or
sbb
mov
xor
lcall
add
scas
adc
jo
and
add
rolb
aaa
roll
xor
aam
adc
push
fisttpl
cli
divb
or
ret
je
aas
xchg
push
fwait
adc
movsl
cld
add
xorl
and
pop
sbb
xchg
fsubrl
ss
jnp
add
stos
cmp
jmp
or
jno
stos
dec
push
dec
add
jle
stc
pop
mov
in
jae
add
jg
mov
push
mov
test
adc
cmp
scas
pop
sub
pop
push
add
jecxz
roll
call
out
jp
dec
aaa
pop
adc
add
bound
pop
dec
xor
adc
add
xor
push
addr16
stc
xor
mov
call
adc
jnp
add
pusha
repz
jl
rcll
out
xchg
sahf
pushf
push
adc
pushf
stc
add
pop
jmp
add
xlat
mov
xchg
or
mov
push
push
add
fmull
add
cmp
call
hlt
mov
popa
jle
loopne
ss
cmpsb
add
testb
ret
sub
out
xchg
fisttpl
jg
mov
xchg
sub
add
add
sarl
sbb
enter
lea
jo
ljmp
bound
and
pop
push
outsl
imul
dec
add
outsl
lock
xchg
arpl
mov
sti
inc
out
ret
sub
fcomip
insl
stos
dec
loopne
add
data16
sub
xlat
clc
mov
jg
enter
in
add
add
adc
jne
push
add
dec
addb
mov
mov
xor
add
lret
dec
lock
and
scas
xchg
stos
add
sbb
mov
and
out
loope
arpl
and
and
xchg
loope
add
mov
and
jb
mov
cmp
insl
push
dec
imul
scas
pop
sti
int3
add
and
push
and
leave
les
push
aad
out
push
push
jbe
lret
sub
add
mov
testl
add
fildl
roll
loopne
popf
jp
xchg
jecxz
iret
add
out
jg
js
cwtl
add
gs
fstl
in
fimull
mov
add
lret
jmp
pop
pusha
sbb
out
aam
fs
enter
cmpsb
mov
stos
add
cmp
dec
fptan
mov
in
mov
inc
pop
outsl
mov
mov
adc
mov
push
jnp
jns
gs
jo
aad
sub
add
out
pushf
cmp
das
add
push
sbb
mov
neg
dec
movsl
adcl
and
insb
ljmp
mov
notb
add
add
and
mov
xchg
inc
xor
add
mov
out
mov
sub
xchg
add
sbb
push
pusha
sarb
inc
cmp
sbb
jecxz
hlt
cmp
out
loope
verw
pop
mov
repnz
lock
jle
inc
and
out
jbe
add
movsb
rclb
add
push
jg
js
add
test
adc
cmp
insl
movsb
std
lods
ror
mov
dec
jne
gs
fldl
mov
cwtl
in
xchg
inc
enter
adcb
xchg
negl
jmp
mov
out
jg
mov
push
popf
xchg
cmp
loop
add
pop
fcoml
jg
hlt
lods
add
add
testl
pop
xchg
shll
mov
sub
std
cmp
ret
lods
aam
jmp
inc
xor
xor
mov
jb
sti
inc
fiadds
dec
aad
mov
xchg
movsl
cmpsb
xor
imul
fxch
shlb
fmull
cmpsl
shrb
rol
ds
jg
orl
je
add
jne
jae
inc
cmp
add
or
ficomps
fnsave
cmp
push
cwtl
mov
sbb
jge
fidivrs
repnz
add
cld
add
lahf
insl
inc
dec
loope
add
or
jb
out
add
add
jge
pop
fs
add
jecxz
in
sbb
mov
imul
cmp
mov
add
enter
add
lret
mov
leave
ret
cmpsb
mov
add
ss
add
cmp
cli
xor
imul
xchg
push
aas
mov
loop
sub
pusha
add
inc
xor
fistpll
test
bound
cmp
movsl
fs
push
mov
add
adc
mov
shrb
jo
test
add
sarl
popl
incb
mov
test
arpl
add
orl
xor
shlb
arpl
ldmxcsr
mov
or
mov
bound
test
add
xchg
arpl
fcmovu
jmp
adc
xchg
jmp
outsl
or
add
add
push
add
insb
sbb
in
mov
sahf
add
sbb
mov
rcl
mov
out
mov
inc
mov
inc
mov
xchg
sbb
data16
add
cmp
lret
xchg
or
xlat
push
inc
or
mov
add
xchg
and
or
or
and
and
add
add
fildl
popa
inc
lret
mov
subl
adc
xchg
adc
push
and
add
jbe
and
fldl
sbb
roll
stos
mov
std
jmp
dec
repz
mov
sub
popl
push
add
mov
add
test
mov
das
es
sar
xchg
add
mov
cltd
mov
add
xchg
mov
push
xor
add
jle
add
popa
push
clc
pop
sti
ret
in
dec
add
inc
mov
test
push
adc
lds
icebp
movsb
sub
clc
fs
cmp
add
nop
out
jnp
mov
lods
rorb
jnp
mov
insl
and
sbb
nop
clc
or
popf
icebp
int
cmp
push
pop
insb
loopne
add
lods
cmpsl
shlb
inc
jnp
repz
inc
cwtl
lret
jnp
jno
mov
shll
mov
add
mov
std
data16
cmc
xchg
stos
add
pusha
stc
mov
xchg
cmpsb
jnp
pop
aad
cmp
add
aam
add
add
inc
add
push
adc
and
add
pop
je
add
cld
lea
inc
les
outsb
sub
inc
push
lret
pop
js
in
adc
cmp
xor
cmc
cltd
int3
out
push
add
push
int3
jge
add
scas
fstpl
in
fstpt
mov
insl
cwtl
sbb
xor
push
xor
fs
add
sarb
out
cmp
dec
add
lods
mov
jb
stos
shrl
pop
fs
pusha
sub
or
add
mov
cmpsl
gs
fsubl
and
int
ss
jnp
sahf
or
sbb
xchg
ret
mov
add
mov
jle
pop
subb
jp
mov
add
clc
cltd
xchg
out
orb
cmp
add
add
jg
add
and
sub
mov
adc
adc
inc
inc
push
repnz
and
lcall
add
jg
mov
das
leave
xor
cmp
add
inc
enter
push
testl
dec
adc
add
hlt
adc
lret
add
push
lret
add
add
pushf
out
cmp
xor
movsl
pop
in
add
xor
inc
sub
ret
mov
ret
mov
jl
dec
push
add
add
lahf
fnsave
dec
add
div
inc
or
das
add
xchg
add
pcmpeqd
sub
inc
popa
mov
pop
das
jae,pt
sbb
pusha
adc
and
add
movsl
hlt
cmp
and
addb
in
add
cmc
or
jge
add
push
mov
push
dec
or
shll
xor
cltd
add
es
dec
pop
in
pop
push
mov
inc
add
enter
inc
add
jb
ret
inc
jb
mov
jno
loopne
jmp
xchg
lea
ljmp
addb
cltd
imul
adc
mov
add
psubusw
add
movzwl
lret
add
or
lret
imul
dec
mov
sti
or
xchg
xor
mov
int3
and
inc
cmp
int
add
jbe
arpl
cmp
inc
cwtl
pusha
add
xchg
lock
repnz
int
inc
sar
leave
add
out
sbbl
add
add
or
push
incb
mov
lock
addl
shlb
int
punpcklwd
jp
and
lds
test
test
mov
scas
or
mov
mov
push
les
repz
fcomps
fiaddl
sub
pusha
mov
jge
rcrb
xor
lods
jg
xor
repz
add
add
pop
add
sbb
ljmp
mov
mov
cs
xchg
fwait
shll
adc
aas
sbb
push
sub
mov
insb
pushl
dec
jge
cld
stos
or
add
lods
aas
int3
add
mov
cmp
add
sbb
stos
xor
outsl
popf
fldl
testb
or
imul
add
aam
mov
add
insb
ss
mov
add
xchg
add
sbb
inc
popf
mov
test
iret
mov
fildl
and
ljmp
jmp
add
add
subl
mov
lea
into
inc
and
hlt
movsb
das
or
stc
xchg
mov
push
nop
cmp
dec
add
add
xor
push
add
inc
les
mov
mov
test
add
or
cli
sub
int
jb
mov
lret
cmp
ss
push
mov
sub
add
mov
jecxz
gs
pop
and
mov
add
add
push
and
repz
lret
jae
out
loop
add
add
adc
add
add
xchg
lods
sub
cld
or
mov
fstps
decl
aas
leave
cmp
pop
add
fcoms
rorb
mov
or
rorl
mov
cmpsb
cwtl
lods
in
cmp
jge
lahf
shll
mov
sbb
sub
add
cwtl
lret
add
addb
mov
add
push
ja
cs
xor
lods
push
add
mov
dec
adc
sbb
inc
jp
add
int3
cmp
clc
mov
xor
push
pusha
and
and
jle
mov
xor
cwtl
add
jg
sub
sub
add
int3
adc
ret
in
mov
aad
sarb
movl
cmpsl
and
push
xor
and
ljmp
cs
stos
es
pop
mov
movsl
and
inc
jno
mov
aas
leave
inc
xchg
gs
or
push
adc
mov
nop
pop
inc
push
out
outsl
add
mov
adc
cmp
dec
push
imul
pop
mov
mov
out
pop
test
add
dec
adc
and
mov
jne
sub
ds
lcall
mov
rcr
mov
imul
dec
add
fwait
add
sbb
sbb
add
add
add
mov
mov
and
or
or
nop
lahf
add
dec
xchg
add
mov
mov
cmp
push
ret
add
stos
sahf
mov
arpl
cwtl
cmp
adc
inc
pop
or
push
add
add
cmp
sbb
test
add
push
js
jecxz
daa
inc
das
add
push
add
daa
add
adc
xchg
add
add
ret
scas
daa
sahf
out
adcl
cmpsb
fiaddl
test
dec
mov
lock
pop
add
jl
push
jo
cmp
mov
inc
or
or
incb
repz
mov
leave
sbb
out
mov
mov
les
sub
adc
sub
cmpsl
ret
push
outsl
nop
cmp
gs
dec
imulb
push
lret
jle
jp
imul
cli
sete
adc
xorl
jbe
notb
andl
cmpsb
lcall
in
je
cmpsl
aaa
rcrb
adc
lock
add
dec
and
mov
dec
mov
lea
add
adc
stos
cltd
stos
xor
inc
std
loope
imul
aam
aad
mov
dec
adc
gs
sub
jno
dec
push
ja
jae
add
fcoms
rcr
and
push
add
add
ror
mov
lods
add
mov
add
xlat
xorb
push
ror
pushf
mov
fimuls
mov
jmp
test
fildll
dec
movsb
hlt
pushf
popa
mov
addl
mov
cmc
movsl
in
jecxz
add
add
iret
mov
add
das
jl
iret
sub
push
mov
jp
cli
mov
dec
mov
jmp
or
add
out
mov
pop
mov
daa
xchg
lret
xchg
push
xor
and
jbe
add
jle
scas
aad
nop
jle
loop
lcall
cmp
leave
in
aaa
push
loop
sti
mov
addl
cmp
aad
or
mov
loop
out
fsubrs
stos
mov
or
stos
in
movsl
add
clc
jg
or
add
jg
scas
mov
adc
sahf
cltd
dec
in
xchg
leave
dec
mov
add
mov
cmc
mov
out
dec
add
add
jns
pushf
out
push
cmp
xchg
mov
add
jno
sbb
add
ja
xor
cmp
jno
daa
xor
lods
sbbb
add
sub
cld
daa
add
fidivl
clc
sbb
insl
sbb
and
sub
imul
mov
add
mov
push
imul
add
jo
push
jns
cmpb
loopne
push
gs
insb
add
dec
stos
shll
or
mov
aad
sub
sub
sub
jne
movsl
mov
adc
inc
js
xor
add
pop
fdivs
mov
dec
jge
adc
cmp
sub
jg
pop
jmp
aam
add
adc
or
std
xlat
cmc
movsl
or
pop
das
aam
jge
pop
out
cmp
test
xor
ja
scas
jo
or
xchg
pop
je
jp
fdivrs
les
xchg
jnp
mov
pop
push
push
jl
push
movsl
add
imul
xchg
add
ret
fnstenv
jne
jmp
loopne
mov
ja
lahf
jp
sti
xor
das
fimuls
pop
roll
mov
jge
fbld
out
sub
mov
add
enter
push
jno
imul
fdivs
cmpsl
mov
repnz
movsl
and
test
xchg
les
xchg
pop
adc
and
ds
sbb
jg
icebp
cmp
mov
xor
aad
daa
add
cli
aas
add
xchg
jo
mov
sbb
mov
jo
jbe
pop
push
dec
and
mov
add
pop
fdivl
cmp
lret
or
pop
cmpsb
dec
pop
jo
mov
data16
xor
mov
pop
int3
call
push
add
lods
lea
subps
stos
jmp
lret
add
xchg
xchg
sbbb
sbb
add
and
shl
xor
cmp
mov
add
add
ret
bound
and
cmpsb
sbb
fstpt
add
idivl
ljmp
incl
push
add
add
add
mov
dec
sbb
add
mov
and
jge
int
daa
insb
or
jno
jnp
jb
mov
add
mov
les
add
jno
pop
and
neg
enter
mov
lea
add
cmp
jo
push
imul
lds
cmpl
jge
sbb
inc
add
es
jnp
in
int3
bound
into
jge
in
cmp
mov
daa
fdivl
sbbb
in
insb
dec
and
cmp
add
test
mov
pop
add
push
inc
inc
jb
dec
cmp
pop
test
das
cmpsl
mov
add
andb
stos
adcb
sbb
je
je
and
add
pop
std
or
mov
push
push
sbb
sti
ja
orl
add
xchg
dec
aam
scas
rorl
dec
add
xchg
sbbb
xchg
xlat
test
cmpsl
xor
outsb
sarl
jg
in
dec
lods
bound
xor
adc
iret
popf
cmp
cmc
cs
fldenv
in
or
add
dec
adc
jecxz
push
int
inc
dec
ljmp
mov
loop
add
int3
push
add
jno
faddp
sarb
fadds
mov
loop
push
and
or
xor
add
xor
push
add
decl
pop
mov
repnz
in
fwait
cmp
filds
aam
jno
push
out
lahf
sub
inc
jmp
std
jecxz
add
add
push
stc
shlb
or
mov
ret
inc
push
subb
jno
add
add
shlb
dec
in
out
call
sbbb
or
shrl
sbb
add
js
fldenv
or
add
pop
mov
ljmp
addr16
add
insb
and
lcall
frstor
ja
fisttpl
pushf
addl
and
adc
je
inc
stos
jge
dec
dec
rolb
leave
xor
mov
mov
dec
shlb
dec
and
add
insb
repnz
lahf
sbb
call
jp
je
push
mov
test
add
pop
rol
mov
mov
jne
inc
sub
imul
and
mov
into
ljmp
xchg
sub
sub
es
leave
mov
incl
hlt
adc
add
push
int
ret
mov
cmp
jecxz
sbb
dec
scas
jno
out
adc
shrl
lods
jl
xchg
int
jl
push
cmp
cmp
mov
xchg
out
dec
add
xor
add
add
ljmp
lods
add
sub
or
testl
jge
loope
push
je
xchg
add
nop
std
jmp
les
xchg
outsl
jo
xor
add
lcall
ret
clc
push
lahf
add
add
pop
data16
popf
data16
push
cmc
cmpsb
push
mov
add
push
add
clc
fcoml
outsb
or
fsubp
rolb
inc
adc
dec
mov
add
ljmp
jo
dec
sub
ret
mov
in
outsb
loop
rorl
mov
mov
mov
add
sub
jmp
leave
push
nop
inc
sub
or
or
sahf
scas
add
stos
test
add
or
cmp
ret
push
fcmovne
incl
xchg
ds
add
cmp
test
in
mov
cs
dec
add
gs
add
int3
xor
cmpsb
adc
inc
add
add
sbb
roll
addr16
and
inc
xchg
in
sahf
add
add
push
dec
movsb
dec
or
cmp
add
push
sub
imul
dec
jecxz
out
dec
out
stos
out
pusha
pop
cmp
hlt
sti
cmp
inc
cmp
cwtl
push
xor
scas
bound
cmpl
adc
fcmovnb
mov
ret
mov
cmp
lea
add
cmp
mov
jl
pop
push
push
fidivrs
aas
cmp
add
add
rolb
or
insl
add
adc
cmp
mov
jmp
test
dec
pop
add
dec
xchg
dec
addr16
xor
jp
xor
cs
xchg
cmc
ret
jl
daa
in
subl
fcomps
dec
add
enter
in
add
dec
dec
test
sbb
add
int
aad
gs
rclb
mov
add
jb
pop
ret
add
sub
sbb
add
mov
dec
movsb
inc
mov
jmp
add
rcrl
xchg
sbb
cmpsb
jb
dec
imull
push
mov
adc
jbe
mov
rorl
call
or
add
mov
repnz
addl
cmpsb
add
sbb
lcall
fwait
push
dec
and
loopne
dec
jp
cltd
pop
ret
xchg
in
pop
pop
pushf
fcmovbe
adc
xchg
push
cmp
shrd
mov
sbb
insl
sbbl
add
cmp
insl
mov
dec
iret
ja
sahf
push
add
add
cmp
test
add
fsubrl
je
jo
inc
and
test
xchg
sbb
mov
sbb
sbb
std
add
loop
add
add
sbb
in
sub
leave
pop
jno
inc
dec
xchg
fcmovu
ljmp
mov
or
sti
and
jne
jb
push
adc
push
test
cmp
mov
ds
jg
dec
ja
pop
dec
pusha
in
jl
fildll
mov
aaa
mov
loopne
jl
inc
mov
or
or
in
stos
mov
dec
cld
mov
add
mov
inc
addr16
mov
push
sbb
addl
pop
es
add
xchg
add
sbb
std
out
cld
mov
repnz
push
pop
adc
fsubs
xor
outsl
js
add
rolb
dec
cmp
imul
int3
xor
stos
in
add
or
cltd
repnz
mov
dec
mov
pop
mov
sub
inc
hlt
add
sbb
add
and
jno
xor
xchg
mov
xchg
jecxz
pop
rcll
insb
inc
dec
jae
mull
aas
mov
ljmp
inc
mov
in
sbb
add
fdivrs
test
add
mov
jo
fdivrp
mov
ja
lahf
adc
and
outsl
add
les
push
jb
cwtl
inc
pusha
pop
push
push
inc
mov
push
sub
pop
xchg
test
nop
mov
add
aas
clc
rolb
or
add
push
push
cmc
popf
mov
dec
push
stos
dec
jno
add
pop
int3
add
adc
jnp
mov
or
cmp
aaa
aam
add
add
xor
out
fnstenv
add
xchg
movsl
inc
les
add
add
adc
test
divb
daa
adc
pop
gs
pushf
add
cmp
add
jp
cmp
jmp
in
jmp
push
add
add
inc
aam
push
das
addr16
sbb
dec
je
jmp
test
testl
sti
dec
pop
mov
aas
dec
add
add
outsb
sbb
add
inc
ret
push
in
add
and
pusha
add
adcb
test
out
cmp
add
jnp
jl
arpl
in
call
cli
jmp
rolb
xlat
mov
pusha
testl
dec
popa
repz
das
fidivrs
imul
popa
aas
sub
inc
aas
aad
ret
xor
cmp
add
add
mov
pushf
in
out
aaa
adc
mov
sub
imul
jbe
enter
lea
inc
ret
loop
in
adc
add
lods
sub
and
add
mov
push
add
pop
repz
mov
xchg
sbb
enter
sub
jb
pop
add
sub
or
inc
jne
dec
add
mov
sbb
push
dec
orb
cmpb
push
les
mov
or
imul
cli
pmulhw
or
mov
mov
add
into
sbb
lret
stos
add
add
push
ror
clc
or
aaa
mov
xchg
test
cs
mov
aad
jbe
mov
scas
and
shll
sti
add
ret
imul
fcompl
lret
fsubrl
ret
lahf
xorl
add
pusha
add
scas
jbe
add
inc
add
add
jmp
mov
mov
add
push
sbb
scas
subb
pop
hlt
inc
push
adc
inc
lds
xor
jno
xor
adc
push
arpl
lcall
cmp
sbb
in
pusha
roll
push
add
push
sbb
or
add
leave
hlt
sbbb
add
or
adc
mov
fadds
xchg
and
sti
cmp
jl
xchg
movsb
add
cltd
ljmp
xchg
xchg
aas
jnp
inc
ss
add
or
fadd
dec
add
add
cwtl
dec
cmc
jecxz
jbe
push
dec
push
lret
jl
sbb
add
sbb
loope
pop
fadds
rcr
lahf
add
inc
sbb
push
les
cmp
add
cmp
and
aam
sbb
mov
fcom
add
les
dec
sbbb
mov
sub
lods
fwait
jle
add
cli
notl
add
out
push
mov
jg
xchg
add
mov
mov
pop
add
ficompl
add
xor
repnz
pop
outsb
in
cmp
stc
popf
xchg
push
add
add
push
movsb
jbe
dec
sbb
lret
cmpb
add
jbe
ja
adc
mov
sbb
add
or
push
add
adc
jg
add
xor
lret
loope
cwtl
idivl
pop
push
movb
xchg
ret
xchg
sbb
into
add
scas
push
add
enter
mov
popa
loopne
inc
imul
adc
sub
jle
pop
stos
rolb
add
mov
out
pop
xchg
push
xor
mov
fidivrl
test
dec
in
mov
push
push
pop
divl
and
xor
lahf
add
js
pop
cli
enter
lret
outsl
popa
dec
jmp
pushf
popa
in
cmpsl
addl
and
out
int3
call
xchg
insb
jo
outsb
pop
sub
and
add
add
add
cmp
in
fbld
cmp
mov
pop
mov
mov
sbb
sub
popf
pop
add
push
clc
in
adc
add
push
mov
cmpsb
add
push
add
and
cmp
dec
pop
add
loop
int
mov
ret
mov
pop
rcl
das
lret
xor
syscall
sub
xchg
add
sarl
ret
sbb
add
pusha
adc
jns
or
adc
add
mov
dec
jb
loopne
hlt
js
add
dec
pop
add
jge
xor
push
in
mov
or
bound
out
out
out
repz
add
fdiv
adc
movsl
sahf
jnp
mov
xchg
jae
mov
add
cmpsb
testl
sarb
movsb
add
pop
lret
arpl
iret
add
add
out
cwtl
sarb
fs
fnstsw
push
or
int
js
jo
mov
dec
add
add
xchg
in
stc
jp
sub
pop
lcall
pop
add
add
loopne
jmp
addb
bswap
mov
fwait
repz
jbe
sbb
push
ss
ds
pop
loopne
add
ret
or
lea
stc
movsl
xchg
sbb
dec
push
aaa
mov
mov
push
fidivrl
lcall
sahf
insb
lret
add
stos
jne
pop
lret
addl
add
imul
add
in
add
sbb
in
xchg
sbb
out
popf
cmpsl
jmp
ret
out
push
loop
icebp
test
lds
repz
aam
push
aad
lea
sbb
aas
add
add
pop
sbb
add
push
filds
and
inc
cmp
inc
test
std
mov
lahf
pmuludq
adcl
fstpt
or
outsb
fidivs
and
sbb
loop
adc
sub
popf
in
cmp
mov
push
rolb
cld
xchg
insl
add
pop
inc
imul
aam
and
xchg
mov
adc
lahf
add
cmp
or
xor
es
hlt
fcompl
ljmp
scas
in
pop
dec
inc
outsl
cmp
scas
add
mov
aas
dec
fisttps
mov
int
nop
add
out
add
shrl
movsb
jbe
bound
jge
dec
push
rdmsr
adc
mov
push
add
mov
addb
mov
adc
fnsave
jmp
cltd
mov
std
add
push
shll
add
mov
arpl
mov
inc
and
imul
push
les
pop
enter
or
cmc
add
test
mov
jge
push
mov
and
xlat
dec
adc
add
outsb
stos
add
dec
mov
arpl
loop
mov
movsb
xchg
inc
inc
sub
lods
sarb
push
xchg
mov
sub
pop
jae
dec
push
in
dec
outsb
mov
push
lds
popa
mov
shlb
add
adcl
add
cmpl
jp
add
sub
iret
in
jbe
or
repnz
pop
cpuid
imul
cld
fbld
addr16
ret
pop
dec
not
jge
and
in
sbb
and
lods
cmc
add
arpl
hlt
scas
mov
xchg
adc
cmp
stos
rcll
mov
push
add
lods
inc
fs
add
fbstp
adc
mov
int
cmp
pop
xor
lods
cmpsl
cmpsl
xchg
jae
cld
movsb
cmp
jle
add
jp
mov
sbb
notb
enter
sbb
pushf
loop
sbb
loop
mov
mov
xor
es
out
push
mov
mov
in
in
add
pop
push
sbb
jne
add
mov
jne
mov
out
test
jo
add
inc
dec
aam
jo
fwait
xor
add
je
xchg
fstpt
add
repnz
jo
and
add
repnz
cmp
imul
jle
popf
shrl
imul
lret
addl
add
adc
lods
jb
into
xchg
add
aam
push
ret
subl
lds
jmp
adc
repz
jge
insb
sbb
jg
imul
clc
sbb
push
arpl
pop
sub
and
shlb
pop
cmp
mov
in
iret
and
mov
shl
add
shr
adc
pop
lcall
add
add
mov
add
sbb
cmc
lahf
and
inc
in
icebp
xor
stc
mov
add
lods
mov
add
ljmp
pop
in
mov
pop
xchg
ficoms
xchg
add
inc
jle
add
fdivr
jne
inc
mov
fmulp
sub
arpl
or
push
adc
in
and
mov
jb
imul
add
pop
add
sbb
test
xchg
xchg
in
xlat
call
testb
dec
pop
jo
aad
daa
adc
add
mov
or
test
test
cltd
jne
std
inc
push
add
push
add
ret
aam
in
loope
mov
add
pop
stc
cs
mov
sub
push
add
jno
popf
and
pop
cmp
mov
adc
les
bound
lret
and
sbb
sarl
jmp
jmp
mov
xchg
dec
pop
add
flds
pop
mov
les
jmp
adc
roll
cltd
jns
je
sub
fwait
and
sbb
lret
push
shlb
cmp
out
lahf
push
neg
jle
lret
outsl
add
sti
add
add
cli
jg
dec
add
mov
mov
in
sbb
xchg
in
add
mov
jle
mov
cmp
ret
sbb
xor
int
push
jne
add
movsl
jbe
lock
cltd
xchg
xchg
aam
outsl
mov
fidivrl
ja
das
in
aas
add
dec
cwtl
out
test
xor
cmp
add
xchg
jno
cmp
and
xor
cmp
lods
cmp
sbb
mov
pop
les
add
test
aaa
ljmp
add
call
aas
daa
jbe
jmp
cs
add
push
aas
loopne
es
out
cmp
bound
pop
and
int3
push
loope
mov
dec
mov
out
add
add
stos
pop
sbb
test
pop
fmuls
adc
sub
inc
push
out
inc
sbb
xor
pusha
xchg
xor
add
jbe
mov
push
add
xor
inc
ljmp
push
insl
xchg
call
and
dec
sbbb
and
xor
mov
adc
xchg
add
xor
xor
adc
xor
dec
or
pop
fisubrs
add
lods
js
aaa
aas
or
shrb
add
push
inc
sub
jecxz
cmp
ret
dec
mov
mov
mov
test
mov
das
add
loope
movsb
hlt
cltd
shrb
sbb
insl
fmull
pop
add
loope
and
movsl
sbb
add
inc
add
test
lcall
inc
ss
jl
add
add
add
or
add
testb
aad
jmp
in
shlb
dec
iret
mov
cltd
fwait
push
cmp
cmpsb
adc
fildll
jbe
add
test
sbb
mov
ret
scas
repz
sbb
add
mov
mov
test
mov
add
add
ja
adc
imul
dec
xor
mov
add
addl
lods
add
pop
pop
hlt
pushf
ret
sahf
or
xor
cmc
add
cld
loopne
ss
add
sbb
sbb
xchg
jl
shrl
jmp
pop
jp
lcall
xlat
aad
pop
mov
xchg
add
add
add
ffree
and
mov
add
cmp
add
inc
dec
add
mov
test
add
in
movsl
add
jae
dec
add
lods
push
mov
popa
or
aas
andb
add
xor
mulb
lods
pusha
out
fildl
jns
insl
xor
ficomps
sbb
je
lds
mov
imul
cmp
out
or
test
and
lahf
add
mov
add
and
sbb
movsb
scas
test
shll
push
nop
sti
adc
cmpsb
or
add
push
add
cmc
adc
lea
aam
insl
add
call
das
cmp
scas
lock
mov
or
pop
outsl
jge
mov
scas
int3
mov
daa
int3
ja
es
xor
cli
loop
nop
add
addl
addr16
lods
es
push
push
push
out
dec
dec
inc
lea
rcrb
push
inc
out
insb
dec
sahf
add
add
stc
add
sbb
add
lret
aam
sbbb
jg
in
subl
or
stos
mov
hlt
inc
push
outsl
cmp
jae
add
rorl
jno
add
push
adc
add
cmp
xor
add
add
data16
add
push
adcl
or
fwait
rcl
cmpsl
lret
test
sbb
add
xor
xor
ja
daa
add
test
jb
add
push
adc
xor
in
das
fildll
and
mov
add
jo
push
push
loop
inc
std
and
in
hlt
ret
sub
push
and
pop
mov
cmpsl
imul
xor
lock
xchg
add
xor
je
imul
mov
clc
sbb
mov
and
add
push
neg
sub
cmpsl
js
bound
mov
ret
add
push
mov
add
jp
pmuludq
mov
enter
jnp
jo
mov
pop
fisubs
xor
scas
mov
add
inc
div
lcall
mov
fcmovb
jmp
bound
sbb
xchg
jnp
fiaddl
lret
cmp
call
std
jb
xchg
pop
jmp
pop
pusha
pop
pop
add
jl
push
fdivrl
pop
pop
sub
xor
sub
mov
das
mov
push
repnz
dec
add
add
dec
out
out
jns
js
add
push
xchg
push
jbe
lret
out
xorb
jno
adc
out
pop
and
push
add
sub
sbb
sbb
jne
adc
mov
imul
mov
lock
mov
add
les
sahf
jmp
addr16
mov
jno
push
or
scas
add
add
scas
lods
fnsave
mov
jae
adc
mov
add
outsb
sbb
jb
push
in
and
js
pop
xor
add
jbe
jne
sbb
add
sti
cli
add
cmc
imul
lods
pop
insl
jge
pusha
lahf
cmp
cmc
jbe
pop
inc
jg
aam
inc
das
ja
add
jge
gs
push
mov
into
fsubp
ret
sbb
mov
lods
add
fsubl
sti
mov
fcomp
fmulp
aaa
push
les
cmp
push
xchg
add
std
jno
sbb
fbld
insb
mov
in
popf
shl
xor
sbb
pop
out
sbb
icebp
cmp
inc
mov
mov
insb
mov
ljmp
decb
aaa
call
mov
div
add
bound
mov
popf
jo,pn
xor
add
les
rolb
mov
fidivrs
add
popl
pop
les
add
add
les
add
add
pop
xchg
aas
ss
rol
jecxz
xor
xchg
arpl
xchg
rcrb
jno
add
or
arpl
mov
jno
mov
xchg
frstor
add
inc
add
and
and
cmp
sahf
sub
icebp
add
out
jmp
test
je
mov
xor
mov
xchg
add
stos
stos
stc
jle
ret
mov
fldcw
cmc
inc
addr16
push
sbb
mov
mov
sub
sub
inc
jb
mov
loop
outsl
dec
cld
add
push
test
add
jns
ret
dec
add
jp
iret
xchg
cmp
inc
add
add
add
shlb
sub
sub
add
sbb
imul
and
test
pop
lret
push
ljmp
pop
scas
loope
push
enter
popa
lret
xchg
jns
test
sbb
add
hlt
push
pusha
test
arpl
icebp
js
push
je
inc
xchg
and
add
ret
jns,pt
popf
mov
shrl
jnp
dec
jnp
add
push
test
sbb
and
je
leave
add
pop
and
jp
shlb
mov
sub
mov
push
jbe
inc
int3
int
add
leave
rolb
in
sbb
or
pop
call
xchg
inc
pop
xchg
mov
jecxz
fisttpll
cmp
mov
add
sub
sub
or
lret
lret
lahf
ja
nop
cmp
outsb
add
stos
sbbb
pop
pop
mov
pop
add
inc
mov
xchg
rcll
mov
in
sbb
nop
ret
lods
push
xchg
js
push
shl
test
add
fmuls
jns
mov
inc
test
pop
add
and
jmp
mov
xor
flds
and
js
push
aad
ljmp
test
cmpb
ljmp
add
out
jle
lods
hlt
clc
iret
or
inc
sub
push
dec
mov
je
mov
xchg
cmpb
ss
add
gs
addb
icebp
sbbl
mov
inc
mov
aad
push
inc
cmp
add
push
enter
xchg
into
inc
cmp
lret
push
aad
aad
pop
add
jns
add
insb
inc
and
addr16
out
add
pop
daa
inc
pop
sbb
xchg
movsb
add
sub
cltd
hlt
add
add
push
add
test
gs
xchg
fisubrs
lcall
out
jbe
stos
out
add
inc
fsubrp
add
xor
pop
sbb
jnp
enter
add
xchg
mov
pop
cs
fistl
sbb
xchg
cltd
notb
add
lahf
clc
mov
cmp
mov
nop
out
pop
mov
mov
dec
push
lret
insl
mov
xchg
add
jl
xor
sbb
lcall
sbb
sahf
add
fisttps
sbb
inc
or
in
xchg
sub
imul
fimull
cmp
add
pop
sbb
std
cmp
sbb
es
imul
mov
adc
pop
fldt
and
add
mov
cmp
add
out
xor
mov
sub
or
pop
cmp
mov
int
cwtl
jmp
add
xor
adc
sahf
orb
dec
rcll
add
xlat
lcall
add
mov
jmp
pop
add
mov
add
xchg
inc
inc
shrl
push
jle
inc
dec
add
dec
inc
cli
outsb
repnz
ljmp
mov
add
add
or
cmp
mov
rcl
test
sub
inc
mov
popf
sarl
pop
je
lahf
adc
push
add
xor
dec
add
mov
mov
mov
add
push
movsl
stos
fiaddl
frstor
dec
out
in
add
cmp
jne,pt
fdivr
add
xchg
xor
sbb
ljmp
adc
add
cmp
add
aad
cmp
sbb
in
or
stc
stc
orb
lods
mov
movsl
fdivl
push
jno
jl
mov
mov
insl
or
pop
sbb
sub
xchg
test
pop
scas
or
sbb
push
push
pop
mov
mov
lds
push
xchg
jo
int3
or
stc
mov
pop
sub
xor
cmc
cmpsb
sbb
cmp
mov
or
dec
inc
stos
repnz
int
add
xor
rcrl
add
ja
xor
mov
sub
push
jp
push
push
testb
xor
and
mov
add
lods
andl
lahf
call
add
das
mov
push
inc
lahf
sub
adc
or
mov
push
or
xlat
mov
mov
mov
out
push
test
add
shrb
test
adc
lods
ret
in
ja
or
iret
add
mov
ds
pop
and
outsb
add
aas
adc
xlat
cmp
fistl
test
mov
pop
outsb
and
dec
add
or
and
or
dec
push
out
or
lods
out
pop
add
test
repz
inc
xchg
sub
pop
push
or
add
mov
andl
xor
cmpb
popf
aam
push
jg
pop
inc
add
stc
sub
dec
jb
ja
mov
cmp
pop
popf
add
ret
jno
into
xchg
xor
push
push
add
mov
mov
cmp
incl
dec
ffreep
jle
xchg
ljmp
pop
pop
pop
fimull
add
ret
add
cli
ljmp
loop
leave
add
add
xor
sub
cmp
mov
inc
dec
sbb
out
add
outsb
add
xchg
inc
pop
cmpsl
inc
mov
dec
xchg
push
shrl
repz
mov
mov
or
jmp
or
pop
sbb
pop
sar
das
sub
xchg
lods
movsl
mov
out
add
std
push
scas
xchg
pop
add
lahf
add
cmp
fs
push
sahf
dec
cs
mov
push
sbb
in
jb
outsl
or
inc
pop
stos
xchg
jle
das
insb
mov
add
mov
jmp
xlat
insl
dec
mov
cmp
or
mov
add
or
loope
movsb
add
cmp
fwait
pop
push
mov
and
imul
in
add
stos
shlb
or
mov
arpl
push
xchg
jg
jno
and
stos
xchg
int3
add
push
out
add
xor
fdivrp
outsb
imul
fiadds
es
scas
adc
cwtl
add
shll
xchg
cmpsb
add
inc
pop
lds
mov
in
push
popf
sbb
das
and
xchg
jb
cmpsl
aam
adcb
jne
push
int
mov
sahf
clc
mov
and
ret
add
add
xchg
mov
cmp
xor
outsl
insl
adcb
adc
add
cmpsb
cld
fsubl
add
and
push
jge
jge
ja
mov
or
aad
cltd
jmp
fcompl
out
pop
push
arpl
or
fcmovbe
lahf
cmp
addb
cmp
jp
nop
daa
add
xor
xor
mov
mov
adc
aam
addr16
jge
sti
ret
add
mov
adc
xchg
imul
jne
insl
add
mov
cmp
adc
push
in
push
and
add
out
push
xor
fiaddl
enter
xor
mov
data16
pop
push
sbb
jo
mov
scas
arpl
test
aad
add
add
add
cmpsb
fwait
mov
ficoml
push
push
push
pop
repnz
add
jae
add
jno
add
in
hlt
cld
add
aas
mov
add
or
add
cwtl
in
test
bound
sbb
adc
stc
xor
push
aad
or
cltd
pusha
add
add
and
pmuludq
lret
push
ss
push
sub
add
add
add
mov
fwait
add
paddsb
shlb
fdivr
add
dec
rcrl
inc
and
js
mov
inc
jle
or
adc
sbb
ja
fdivrs
add
add
sbb
mov
gs
outsb
fisubrs
dec
cwtl
cmpsb
add
test
sub
xchg
andl
ja
jnp
hlt
cmp
jl
rorb
loope
add
aad
cmp
add
lahf
dec
outsb
imul
or
out
add
testl
xchg
lods
add
add
sbb
add
push
cmp
out
xchg
add
adc
enter
rcll
movsl
inc
add
testl
push
ret
add
fldl
pop
mov
lds
add
and
add
xor
jno
js
pusha
sub
mov
sar
aam
stc
insl
leave
jecxz
add
rcrl
adc
cmp
in
push
add
and
or
jge
add
insl
subb
mov
and
ret
jge
jg
inc
mov
rolb
adc
or
push
jecxz
dec
add
enter
add
dec
fimull
sub
lret
inc
mulb
lock
mov
sub
les
add
mov
in
jo
xor
aam
cld
add
pop
sbb
push
add
pop
pop
and
addr16
cmp
icebp
addl
cmp
push
sbb
ds
add
ljmp
data16
adc
add
adc
or
mov
jne
adc
mov
sub
xor
xchg
div
add
mov
rcrl
mov
lahf
pop
daa
mov
cmp
or
dec
inc
lcall
clc
movsb
mov
xor
clc
add
icebp
daa
mov
lea
insb
add
xor
or
mov
fwait
loop
add
inc
add
dec
mov
cmpb
adc
adcl
xor
pop
pop
leave
cmc
mov
scas
pop
push
test
mov
hlt
aaa
add
lods
jl
add
iret
xor
jecxz
or
lahf
add
xor
in
cld
sbb
add
mov
sub
xchg
pushf
jmp
push
adc
mov
inc
cli
call
cmp
cmp
add
jl
mov
adc
pop
cltd
movl
xor
xchg
leave
or
pop
testl
into
movsl
ljmp
shlb
pop
out
xchg
sti
push
adc
mov
lods
mov
gs
add
and
les
loope
mov
xlat
sub
insb
loop
je
test
repnz
enterw
xor
sti
call
shlb
add
ret
push
loopne
jle
add
or
or
jp
out
pop
sub
imul
xor
adc
stos
push
lods
fisubl
test
sub
aas
mov
test
mov
into
aam
push
mov
aam
lahf
lds
fs
or
jbe
sbb
cmp
dec
jo
inc
add
cmpsb
add
call
mov
adc
jmp
cmpb
sub
push
pop
ja
cwtl
fdiv
and
lock
sbb
sarb
fstpt
dec
fdiv
outsl
mov
push
push
sbbl
fdivs
add
add
je
sub
out
std
imul
loope
out
daa
scas
loop
inc
add
mov
loopne
into
add
inc
add
dec
or
add
sub
bound
out
cmc
cmp
cs
inc
out
add
hlt
loopne
xor
push
dec
push
movsl
xor
add
adc
mov
scas
add
or
add
push
add
lods
loopne
inc
adc
pop
pusha
xor
dec
mov
fmul
mov
ret
mov
and
add
adc
xchg
testl
lods
ret
insb
test
in
xchg
into
addl
add
add
dec
je
add
stc
fwait
adc
add
xchg
mov
sbb
xor
jbe
xor
sbb
lcall
fsubr
add
add
lods
lods
out
add
jge
add
fwait
test
dec
stos
lcall
pushf
pusha
daa
sti
inc
mov
add
add
add
shrl
add
inc
add
mov
insl
xor
and
xchg
add
pusha
lock
in
in
cmp
sub
aad
add
xor
ds
sub
adc
jg
inc
or
hlt
add
inc
sbb
lret
add
cmp
testb
mov
sub
loope
std
jbe
stos
cli
cmc
jp
mov
and
adc
add
loope
jmp
xchg
push
add
jp
dec
push
fneni(8087
xchg
and
add
inc
cmc
ljmp
js
imul
loopne
insb
lods
hlt
insb
fildl
sub
ljmp
pop
in
addr16
outsl
repz
hlt
xor
mov
push
rcr
add
lock
addr16
iret
mov
add
sub
cld
arpl
cld
push
pop
add
mov
movsl
out
add
jns
movsb
push
jns
aad
add
xor
shlb
cld
stc
test
mov
out
jg
xchg
mov
lahf
shlb
xchg
pop
bound
jne
mov
sub
fldl
push
add
inc
push
pop
add
in
scas
mov
cmc
add
mov
mov
mov
in
lret
out
cmp
inc
dec
sub
out
lds
rcll
add
pop
pop
dec
mov
cmp
sub
cmp
and
ja
inc
aaa
xchg
pop
outsb
in
add
cmpsb
dec
add
lret
les
dec
dec
push
test
dec
dec
pop
js
inc
dec
in
mov
jge
jg
dec
pop
add
or
ljmp
add
jae
addr16
jne
pop
daa
jmp
mov
xchg
add
sti
stc
cmp
cmp
cmp
stos
add
mov
imul
jp
cmc
add
stc
jbe,pt
loopne
push
sbb
mov
dec
cmp
add
sti
lret
test
les
stos
add
sub
fs
addl
and
pop
je
and
and
rolb
add
shrb
icebp
xchg
fcomps
rcrl
not
xchg
out
es
push
push
sahf
ljmp
jae
addb
jnp
xor
lock
or
and
sub
es
add
outsl
pop
xor
mov
pop
add
bound
mov
cmc
and
fwait
lahf
jno
test
data16
xor
and
daa
mov
mov
add
add
outsb
push
sub
popf
sbb
adc
sbb
jns
fs
fcoml
mov
mov
adc
dec
jle
ja
push
mov
sbb
inc
xor
add
mov
add
in
pop
repz
adc
mov
sub
imul
fcom
jmp
mov
cmp
add
add
in
out
cltd
daa
jmp
add
loope
jl
or
je
outsl
ss
sub
testl
bound
sub
or
sbb
movsb
out
push
repnz
cs
stc
andl
in
dec
sbb
and
dec
mov
ljmp
fs
shr
jno
inc
dec
loope
and
jbe
insl
dec
and
nop
mov
lahf
enter
dec
xchg
add
inc
es
fadds
add
imull
mov
and
aam
xor
add
and
adc
pop
pusha
pushl
add
imul
test
aad
cmpsl
push
jbe
ljmp
cmpsb
jge
pop
ret
sbb
mov
pop
inc
add
add
in
and
cli
scas
add
mov
or
add
push
mov
mov
bound
push
inc
inc
dec
add
es
out
sti
push
ja
push
lds
into
inc
mov
add
ds
repnz
jnp
push
into
pop
add
lds
add
sub
insl
mov
lods
out
mov
ja
repnz
sub
add
in
cmovg
shlb
mov
and
mov
mov
cwtl
das
scas
lods
add
pop
aad
addl
pop
push
js
add
loopne
insl
stos
test
fs
add
pop
dec
cmp
add
cmp
xchg
and
pop
mov
xchg
mov
int
xor
scas
stc
add
add
shll
dec
dec
dec
int3
dec
sbb
aad
cmp
mov
imul
sbb
ret
and
add
outsl
pop
mov
dec
mov
pop
sub
ss
pop
loopne
pop
fs
xor
decb
insb
add
lahf
sub
daa
popf
into
jmp
add
aam
pop
sbb
ret
xchg
enter
xor
xchg
int3
in
scas
pushf
mov
jmp
scas
or
xor
mov
lock
dec
jge
imul
pop
push
xchg
roll
lock
add
xchg
testl
fcmovb
add
mov
pop
mov
pop
cmpb
sub
imul
in
inc
dec
loopne
sub
xor
push
push
pusha
pop
sub
adc
jle
mov
ret
jno
jge
inc
sub
and
mov
sub
pop
sub
xor
iret
sti
lods
dec
out
sub
popa
jl
jmp
test
call
mov
mov
add
out
pushf
add
jp
add
xor
pop
cmp
mov
gs
mov
jge
idivb
add
and
clc
add
mov
inc
movb
jnp
add
ret
sub
add
lds
rcr
decl
add
dec
fildll
dec
add
sbb
ss
pop
cmp
fcompl
push
sbb
cmp
sub
insl
sbb
data16
push
hlt
inc
jl
mov
dec
in
add
sub
mov
lods
inc
add
js
mov
pop
ljmp
add
add
pop
lret
mov
repz
or
inc
mov
and
add
sbb
je
mov
mov
and
sub
test
out
add
add
pop
ds
add
mov
mov
das
add
sahf
sbb
adcl
std
leave
aas
pusha
cs
mov
xchg
or
push
daa
inc
dec
bound
orl
fiaddl
sub
adc
addl
sbb
arpl
repnz
notb
jb
pop
cmp
daa
or
ret
js
mov
jb
scas
adc
popa
push
lods
leave
fwait
add
xchg
push
adc
fsubr
outsl
cmp
cld
adc
push
add
out
push
xlat
sti
push
add
sub
outsb
fsts
jbe
adc
xchg
les
dec
lret
insb
or
push
xchg
push
xchg
add
mov
int3
daa
pop
jp
mov
add
xchg
pop
mov
cmp
bound
ds
or
hlt
pop
mov
cmp
mov
movsb
jge
add
push
add
fcom
in
sbb
pop
add
pop
ss
sub
insb
add
inc
ss
mov
adc
push
lahf
xlat
enter
inc
mov
xchg
add
movsl
out
lds
lret
dec
jne
inc
pop
clc
add
push
adc
mov
add
jnp
movb
add
movsb
push
fisubrs
mov
int3
out
stos
add
icebp
cmp
sub
add
xor
rolb
pop
add
add
into
adc
push
dec
xor
add
sbb
cld
push
lret
scas
ds
cmc
mov
aam
jb
cli
jp
arpl
outsl
jg
and
sbb
add
outsb
clc
mov
jb
inc
add
lret
movsb
mov
mov
pop
movsl
cli
aaa
add
dec
jo
aaa
add
add
int
lcall
mov
mov
xorl
adc
or
cmpsl
mov
and
cli
adc
push
and
add
push
inc
sbb
add
out
push
add
add
imul
mov
xlat
dec
test
xchg
and
jp
xchg
jbe
jnp
push
dec
pop
insl
push
sbb
push
sub
add
inc
mov
shlb
jg
mov
imul
lock
sbb
jae
add
cmp
fldt
xlat
sahf
or
mov
ds
not
add
mov
xchg
cli
ja
ffree
std
xchg
shr
xchg
call
add
add
nop
add
test
inc
lock
mov
imul
cmpsl
loope
xor
sbb
out
iret
sahf
jnp
push
add
dec
add
add
push
add
jmp
add
add
adc
xlat
mov
cmp
dec
adcb
cltd
add
cmp
pop
or
dec
add
lcall
or
jle
add
push
pusha
sahf
dec
push
pop
jp
push
mov
inc
bound
mov
xor
mov
out
pop
add
jg
pop
xor
mov
xchg
inc
mov
or
add
lods
add
js
lea
pop
mov
adc
push
pop
xor
clc
aaa
sti
push
ja
cs
inc
or
std
ja
sbb
movsl
mov
in
out
add
xchg
cmpsl
add
push
jp
push
aam
lods
fcoms
mov
call
add
add
test
xor
add
mov
subb
outsl
add
dec
or
mov
in
dec
cmp
icebp
fwait
and
fwait
and
cmp
add
sbb
mov
aas
test
mov
fsubrs
enter
daa
stos
add
gs
add
stos
out
rcrb
pushf
sar
sti
inc
mov
cmp
add
pop
mov
pop
mov
add
add
xor
inc
fsubrs
fdivrs
scas
add
push
testb
add
pop
ljmp
dec
les
add
roll
cmp
push
bound
mov
fnstenv
add
add
mov
mov
add
cltd
fdivrs
aaa
adc
in
inc
stc
dec
enter
iret
pop
mov
inc
lret
cmpsl
sbb
insb
lcall
mov
fldl
jb
xchg
add
jle
ret
stos
adc
movl
sbb
mov
push
lret
or
rcl
add
add
sbb
xchg
or
jbe
add
add
jmp
inc
mov
add
das
push
mov
rcll
shlb
sub
andl
popf
or
sbb
add
xchg
aad
imul
jle
push
cli
std
gs
fisttpl
clc
aam
mov
bound
pop
jbe
push
cmp
dec
xor
cmpsb
movsl
adc
in
int
in
daa
cs
popf
jno
jb
jp
test
xor
xlat
jnp
loop
jl
mov
stos
outsb
mov
or
xchg
mov
ret
mov
loopne
sbb
inc
repz
jb
add
add
es
dec
cmpsl
pop
cwtl
popf
testb
push
rcrl
nop
add
call
jnp
lcall
xor
cltd
repz
lds
mov
callw
add
jns
test
nop
sub
push
add
xor
mov
add
mov
add
sub
push
loop
push
notb
pop
add
pop
pop
fadds
enter
sbb
in
aad
lea
scas
iret
std
inc
push
add
cmp
jmp
das
dec
and
stc
pusha
test
ja
cmc
dec
in
jle
fstl
mov
lahf
add
test
mov
jg
push
adc
add
add
in
add
inc
add
enter
jl
aad
pop
cli
adc
cmp
jo
mov
inc
xor
sbb
daa
pop
pop
pop
cmp
fwait
mov
mov
inc
sti
sahf
nop
jl
shrb
cmp
push
inc
push
or
cld
pop
jne
hlt
pushf
add
dec
xlat
adc
lods
fwait
call
pushf
pusha
imul
cmp
push
add
pusha
push
movsl
jge
in
push
loope
sub
push
in
lahf
add
fxch
add
inc
in
dec
fdivp
mov
mov
or
dec
aaa
ret
sbb
dec
sub
faddl
mov
adc
in
nop
xor
add
add
push
loop
aad
xchg
lods
inc
xchg
dec
rorb
cltd
add
lods
xchg
sub
pop
add
mov
add
add
jmp
mov
data16
sbbl
dec
in
in
add
mov
call
add
adc
add
sub
aas
in
inc
pop
addr16
push
ret
sbb
call
xorl
mov
test
imul
outsb
cmc
mov
fsubl
cmp
add
mov
int3
cli
add
dec
into
popf
imul
or
sti
mov
add
xor
icebp
in
inc
add
mov
or
aas
xchg
add
in
inc
imul
jo
add
jp
add
shl
rclb
jg
inc
aad
add
jo
insb
pop
mov
int3
add
mov
mov
lods
adc
or
add
xchg
mov
adc
stc
dec
add
sbb
jbe
rcrl
add
test
add
push
push
out
fiaddl
insl
sbb
xchg
lea
fidivrs
sbb
fwait
jmp
mov
shll
call
pop
add
cmp
pop
sub
icebp
xchg
test
loop
outsb
ljmp
jae
add
add
out
pop
cwtl
jge
fsubrl
add
add
int
dec
mov
std
add
lods
fiadds
shrl
or
inc
lds
das
xchg
int3
or
add
add
insl
rol
add
ret
mov
jno
imul
add
mov
add
mov
fsubr
xor
jp
push
dec
roll
decb
insb
jle
jo
add
in
push
insb
and
push
adc
mov
lret
ds
add
mov
and
lret
cltd
add
test
jae
lds
packuswb
neg
or
push
filds
add
add
dec
adc
sub
adc
daa
add
add
add
cmp
mov
ljmp
add
mov
aam
jle
sub
xchg
cs
or
add
popf
add
xchg
jecxz
loope
mov
lods
stos
and
add
mov
push
icebp
mov
adc
push
lret
mov
jno
xchg
add
push
dec
incl
aas
inc
mov
shll
stos
or
lods
add
lcall
and
and
adcb
cmpsb
add
jbe
inc
add
mov
adc
sbb
call
cmp
xor
in
rcll
pop
add
lock
stc
dec
add
add
add
inc
add
les
dec
adc
mov
insb
sub
pushf
movsl
inc
sbb
inc
inc
test
outsl
mov
xlat
inc
pop
pushf
movb
test
dec
and
push
fsubp
call
pop
add
mov
and
pushf
cmpl
in
jbe
test
into
gs
mov
push
add
scas
fistpl
add
fcomps
or
cmp
cwtl
filds
es
jge
fisttpl
jae
add
pop
movsb
fwait
add
pop
add
aaa
imul
std
sub
imul
lahf
stos
pop
add
lods
lods
ljmp
ltr
mov
sub
push
pop
adc
push
mov
inc
sub
and
inc
add
mov
and
pop
es
test
mov
add
xor
xor
mov
ds
arpl
lcall
xchg
jb
add
add
xchg
sub
adc
fldl
test
jnp
loopne
cmc
push
ss
jp
pop
adc
or
and
gs
lods
jae
stos
pop
push
push
sub
popf
add
incl
js
xchg
nop
addb
add
adc
add
push
dec
repz
inc
arpl
mov
cmp
mov
sbb
add
cmpb
movb
int3
jle
std
lcall
sub
out
add
add
jbe
int3
add
and
sub
inc
mov
push
jnp
andl
stos
nop
jbe
add
sbb
inc
cmp
add
add
fldenv
add
dec
adc
sbbl
arpl
mov
and
fsubr
scas
pop
or
sub
add
shll
add
lock
jecxz
dec
jo
push
out
js
jp
pop
imul
adc
test
dec
imul
mov
mov
cmp
ret
popf
sbb
insl
stos
add
movsb
mov
pop
lds
dec
aaa
mov
add
rcll
scas
mov
cli
add
jns
add
xor
sub
imul
add
push
test
xchg
int3
jno
push
aaa
inc
test
loop
sahf
sbb
fcomi
or
call
sti
std
movb
sub
in
add
mov
mov
xor
movzbl
inc
lock
push
cwtl
sbb
cmp
mov
bound
enter
inc
add
add
jne
cmp
pushf
addl
pop
and
dec
push
je
add
or
add
add
sbb
insl
cmp
adc
cmp
inc
add
cmpsb
jl
fsub
outsl
lahf
sub
mov
dec
gs
jecxz
stc
push
add
in
mov
mov
loopne
jle
inc
add
jb
negb
pop
insl
or
xor
push
pop
add
ljmp
dec
pusha
mov
arpl
add
add
fs
and
jp
sbb
bnd
adc
push
add
pop
daa
ja
fs
aam
scas
add
cmpsl
fcmovne
in
jbe
add
and
ja
xor
pop
adc
je
fidivl
lods
out
xchg
aaa
fsubrs
pop
imul
add
push
add
out
subb
add
mov
testb
call
pusha
call
adc
addb
mov
sub
in
push
das
je
ror
push
jns,pn
mov
mov
cmp
add
push
pop
clc
jo
daa
aad
dec
or
sbb
mov
jge
or
mov
dec
sbb
mov
or
add
xlat
insl
sub
stos
sub
pop
sub
mov
and
and
add
sbb
fstps
cmpsb
adc
add
push
and
outsl
push
fsubrl
sti
mov
mov
pushf
xchg
add
dec
int3
std
xor
sub
xor
add
paddw
dec
out
jmp
pop
scas
pop
cmp
push
filds
push
into
outsb
addb
mov
sbb
push
das
add
add
ja
fisubs
add
enter
into
mov
jns
mov
jb
dec
dec
ret
mov
sbb
fistpll
and
xor
cmp
adc
inc
push
sahf
inc
pop
mov
sbb
repz
cmpsb
cmc
mov
stos
add
add
xchg
adc
add
ja
or
push
xchg
add
das
ljmp
ss
negl
add
in
add
add
inc
inc
lock
rolb
dec
adcl
dec
mov
cmpsl
add
loope
addr16
out
inc
cmp
sbb
pop
por
fisubrl
dec
xchg
mov
xor
aas
iret
shlb
and
je
call
hlt
add
filds
xchg
stos
add
lret
bound
push
aas
xlat
sub
xchg
stos
sbb
iret
fildll
jns
inc
and
nop
sub
clc
mov
push
imul
stos
out
and
sbb
rcr
add
sub
lds
xchg
add
aam
fstps
inc
cld
hlt
add
xchg
add
and
xchg
pop
sub
je
les
enter
push
add
in
add
add
enter
mov
lret
daa
add
nop
adc
xlat
mov
in
add
pop
das
lret
add
out
or
xor
and
sub
stos
add
mov
imul
es
inc
lcall
add
cs
in
add
pop
or
aaa
add
jl
push
push
ds
mov
iret
ds
ret
or
ja
xor
jle
add
outsb
xor
popa
dec
add
inc
push
insb
mov
jb
fwait
xchg
or
sub
and
sub
add
jge
or
inc
sub
in
add
pop
push
xor
pop
movsb
mov
jnp
fcomps
add
int
loop
push
lcall
inc
and
push
jne
and
popa
enter
sub
add
mov
test
jne
push
adc
sub
incb
inc
int3
cmp
retw
std
and
cmpsl
inc
mov
jno
add
push
out
jg
fiadds
sti
mov
push
add
dec
fbstp
iret
js
sub
jns
insb
push
inc
mov
sbb
sti
insl
les
add
and
add
cmpsl
adc
ja
scas
add
pop
cmp
and
sbb
loop
or
add
lahf
ds
add
push
mov
add
testl
add
ffree
sub
or
fadds
ret
shrl
add
aaa
decl
pop
adc
sub
xor
inc
and
dec
addr16
add
pop
add
into
sbb
mov
pop
sbb
pop
and
push
loope
push
push
jne
adc
xchg
loop
je
xchg
add
mov
ja
xchg
das
adc
jecxz
pop
or
mov
and
mov
or
fwait
mov
jne
push
pop
inc
add
lcall
aas
jle
push
stos
pushf
xor
add
inc
pop
pop
inc
mov
pop
sti
rcrb
orb
sbb
in
inc
popf
popl
add
mov
add
add
pop
mov
and
loop
adc
push
out
or
out
add
inc
aas
popf
es
xchg
insl
pop
add
dec
cmc
in
jo
and
and
inc
add
jp
add
adcb
mov
pushf
out
outsl
movsb
or
inc
out
ds
pop
push
ss
decb
pop
mov
nop
pop
add
jle
or
adc
scas
std
add
cmp
ret
add
insb
je
push
cmp
xor
lds
sub
test
xor
pop
xchg
rorb
lahf
or
or
add
add
mov
stos
push
add
pop
jbe
lret
lret
cli
lcall
push
cmp
mov
add
or
xor
out
or
pop
add
lea
lahf
push
add
pusha
xchg
test
jp
sub
add
pop
fisttps
xchg
mov
adc
loopne
cmc
test
inc
dec
icebp
jns
clc
fadds
mov
test
xor
push
add
mov
dec
add
dec
pop
fidivrs
cmp
test
add
jbe
push
cmp
sahf
sbb
addr16
or
jo
dec
push
fcompl
dec
popa
xchg
aas
cmpl
mov
clc
shll
adc
dec
cmp
xchg
aas
mov
mov
pop
filds
out
pop
ljmp
xor
push
aaa
add
push
xchg
enter
add
das
addr16
bound
inc
repnz
pop
add
out
add
subl
jg
dec
into
add
sub
pop
fldpi
add
pop
rcll
xor
pop
addr16
push
inc
add
cmp
int
rolb
mov
mov
mov
mov
dec
inc
jae
insl
sub
dec
bound
mov
loopne
mov
add
jb
mov
sbb
gs
fldenv
xchg
mov
dec
js
mov
dec
jle
dec
cli
lcall
pop
iret
push
dec
popa
dec
mov
scas
scas
add
mov
pushl
or
mov
xor
mov
push
stc
out
push
push
iret
push
cmpsb
iret
pop
mov
push
inc
add
je
mov
pop
add
testl
xor
jbe
add
aad
pop
add
cmpsl
add
xor
push
pop
nop
rorl
jne
loop
lock
xchg
cmp
in
sbb
std
enter
mov
sub
add
add
cmp
mov
ret
in
add
and
mov
or
and
out
into
xor
ljmp
add
push
jmp
add
mov
fists
and
inc
xchg
rcrb
xchg
sub
aaa
add
popf
xcrypt-cfb
cmpsl
movsb
test
adc
in
fisttpll
mov
jne
cmpl
fiaddl
icebp
dec
lret
sbb
push
dec
jns
mov
loop
push
daa
add
pop
fwait
add
mov
ja
test
in
aaa
mov
pop
jg
movb
insb
in
push
lret
mov
xor
sbb
lds
daa
add
sbb
mov
mov
stos
adc
add
sbb
fcmovne
add
adc
add
or
mov
ss
ret
into
inc
cmpsl
push
add
sub
mov
lea
pop
fildll
mov
add
sub
repnz
rolb
inc
lock
in
clc
lret
mov
pop
shlb
lcall
pop
mov
jbe
enter
jl
sub
and
or
adc
add
add
push
pop
sub
mov
mov
jp
fimuls
ss
xchg
pop
daa
push
mov
out
mov
ss
add
xchg
je
sub
xlat
xor
testl
xchg
je
push
aas
fwait
mov
scas
xor
out
sub
bound
jle
sbb
filds
inc
cmc
pop
cltd
leave
mov
dec
scas
notl
push
add
add
mov
iret
cld
sub
out
test
stos
jae
je
ret
stos
xchg
fs
dec
cmpsl
loopne
je
push
adc
or
cs
xchg
cs
push
ss
add
mov
hlt
add
add
addl
inc
add
call
movsl
testb
popf
jp
cmpsb
ret
ja
inc
and
inc
xor
cld
inc
cmp
add
push
outsb
jmp
rcl
daa
in
pop
adcb
add
push
lock
inc
imul
mov
mov
out
lcall
sti
mov
mov
aaa
xchg
xorb
and
push
into
stos
push
gs
add
pop
jle
xchg
jmp
aam
add
add
sti
stos
add
arpl
loop
repnz
jbe
pop
xchg
por
xchg
push
pop
add
push
xchg
int3
jne
arpl
cmp
int3
add
aas
test
mov
jae
stos
fsts
mov
popl
mov
cmp
stc
add
sub
sti
clc
das
and
sahf
mov
aas
lahf
xor
xor
out
mov
dec
jp
mov
in
sbb
jae
add
add
pop
sbb
sub
add
in
cmpsb
cltd
and
roll
push
filds
cmp
shlb
jl
std
xchg
lahf
fdivs
xchg
sldt
leave
xor
adc
inc
add
jno
adc
mov
mov
fisubrs
cmc
inc
add
add
mov
into
jns
sbb
mov
test
daa
add
mov
mov
jg
inc
ljmp
add
inc
xchg
cmpsb
xchg
int
push
lcall
dec
sti
xchg
gs
aad
imul
adc
add
int3
sub
mov
sub
aaa
add
xchg
out
sbb
test
lret
add
inc
out
mov
mov
add
repz
add
dec
mov
stc
jecxz
sbb
fcomi
cmpsl
fdivrl
and
lahf
scas
inc
cmc
and
sbb
aaa
xor
adc
jl
lahf
testl
jo
sbb
or
xchg
mov
add
ja
fwait
dec
sarl
inc
xor
add
mov
xorb
push
inc
lock
ljmp
jmp
into
mov
lods
std
shlb
add
in
and
adc
popfw
sahf
and
add
sbb
jge
fldl
lods
ret
jb
rolb
outsl
mov
addb
or
cmc
xchg
mov
rcrl
mov
push
inc
push
hlt
mov
fnstenv
jmp
fwait
add
xchg
lds
pop
add
add
xlat
xchg
lahf
sub
loop
push
sub
out
cmp
popf
mov
inc
and
loope
mov
adc
push
ffreep
mov
pop
gs
notb
aam
jbe
sbb
add
add
and
pusha
jge
iret
add
mov
xlat
mov
add
pusha
xchg
add
cmp
dec
pop
pop
add
lock
sbb
add
nop
adc
pushf
in
add
push
loope
add
loop
ret
push
or
add
mov
nop
add
scas
pop
mov
push
mov
jnp
add
aam
out
cmpsl
lods
jp
and
and
flds
sub
popa
and
pop
movsl
inc
add
mov
orl
adc
cmp
inc
adc
aaa
daa
add
dec
leave
push
and
jo
push
xchg
jle
add
idivl
ret
jnp
jns
pushf
out
out
test
jb
test
add
stos
push
push
jp
inc
aam
adc
add
adc
add
mov
adc
ja
sbbb
sub
add
push
pop
aad
out
repz
add
xchg
lahf
ds
add
loopne
mov
pop
add
inc
test
add
sub
lods
push
gs
adc
mov
ret
and
or
lret
inc
jae
mull
fcompl
push
xchg
stos
add
xchg
mov
mov
xor
es
bound
push
popa
mov
lahf
jl
call
lds
cmpsl
push
adc
dec
mov
add
stos
inc
add
test
mov
pop
xchg
test
push
jle
enter
pop
lods
fmul
jne
fisubs
mov
jge
sub
fadds
aad
pop
push
icebp
or
and
testb
dec
and
rol
push
orl
std
push
dec
mov
mov
into
push
test
xor
push
pusha
stc
mov
pop
insl
pop
imul
cld
cmp
inc
data16
add
or
sub
leave
cmp
add
aas
jno
es
jg
aaa
add
sub
sbb
sti
int
and
lcall
add
rcr
jle
pop
pop
mov
cwtl
mov
daa
cmp
pop
pop
add
add
mov
and
sub
add
movsb
das
cs
add
loope
jl
xchg
loop
pop
push
dec
aas
xchg
icebp
push
jnp
mov
scas
add
mov
lods
xlat
outsl
mov
or
pop
add
or
mov
fists
mov
push
test
loope
xor
movsb
sar
dec
xchg
jnp
shl
jl
xor
data16
jg
add
add
sub
sti
push
ret
faddl
or
sub
stos
fldenv
push
inc
mov
push
stos
fstps
mov
mov
add
cwtl
lods
fstps
xchg
adc
pusha
stc
fucomi
jnp
mov
or
cwtl
movsb
test
lods
push
xchg
jo
and
in
ss
scas
pop
add
pop
cld
add
add
push
int
icebp
shrl
xchg
sarb
imull
out
add
add
xchg
push
push
add
xor
jmp
mov
das
pop
cmp
xor
sub
repnz
mov
pop
add
pop
mov
jnp
cmp
add
in
cmpsl
hlt
bt
add
push
mov
ljmp
sub
movl
mov
dec
stc
add
icebp
or
bound
sub
mov
pop
push
jle
inc
add
insb
mov
cmpb
add
dec
inc
mov
sbb
js
mov
add
jne
cli
test
jg
int
adc
je
add
das
mov
xor
sbb
inc
repz
sti
adc
dec
add
nop
pop
loopne
add
and
jnp
push
stc
pop
jo
sbb
dec
pop
aaa
xchg
push
dec
pop
mov
adc
add
movsl
lods
add
mov
lcall
stc
push
xchg
or
mov
or
mov
add
add
sub
xchg
cmpl
in
jp
or
pop
sbb
xchg
movsl
into
mov
nop
and
add
lock
jnp
and
lcall
and
inc
add
mov
sub
xchg
add
or
shll
xor
mov
add
enter
es
add
repz
xlat
lock
fcomps
add
cltd
int
adc
imul
inc
repnz
ret
in
sbbb
js
nop
mov
add
push
lds
sbb
jae
push
pop
pop
dec
insb
xor
add
in
and
stos
aam
jg
dec
inc
add
scas
mov
mov
add
dec
fwait
int
insb
add
mov
testb
aaa
mov
and
stos
pop
out
pop
cltd
fdivl
mov
sbb
jbe
fwait
pop
adc
add
enter
add
inc
xor
add
add
dec
in
mov
inc
push
call
cwtl
hlt
jl
lahf
insl
into
repnz
cmpsb
stos
add
in
cmc
add
sbb
mov
test
lea
ltr
lods
popf
sub
push
popf
xor
xchg
mov
mov
fcmovb
fiadds
add
test
xchg
js
and
repnz
jle
insb
add
add
lock
inc
rorl
fdivr
mov
fcomi
jnp
sbb
sub
insb
outsl
add
call
sarl
jl
lods
sti
mov
add
clc
cmpsl
lret
hlt
mov
rcl
and
pop
jae
mov
lock
stos
loope
add
in
adc
pop
stos
sub
psubsb
push
pop
mov
add
xchg
add
mov
orl
add
add
mov
outsb
ja
jno
adc
sarl
stos
mov
xor
leave
jg
fmull
sahf
xchg
addr16
jmp
imul
sbb
outsl
add
sub
pushl
push
lock
aam
movsl
cmp
cmp
lods
hlt
lods
cmp
xchg
or
mov
sbb
stos
test
dec
sub
add
cmp
lods
shlb
cltd
call
and
fs
outsb
sub
and
sbb
mov
pop
addr16
sti
mov
arpl
xchg
idivb
in
xchg
xorb
inc
roll
mov
jg
hlt
aaa
pop
and
inc
cmp
sbb
in
add
sbb
mov
xor
add
imull
movb
gs
add
ror
daa
push
inc
lods
push
scas
popf
add
dec
lea
add
inc
cmp
add
xor
add
add
xchg
sbb
bound
rcrl
add
cs
fbld
stos
pop
out
jno
and
jp
iret
mov
pop
ljmp
loope
mov
call
sbb
mull
jnp
add
aam
sub
xchg
jb
add
and
inc
push
xor
cmp
scas
adc
sbb
movsb
sbb
cmp
jb
jno
pop
fcmovne
cmp
pop
add
mov
notl
adc
fld
lret
pop
data16
nop
es
aad
in
scas
out
xchg
dec
xor
xchg
movsb
decb
add
sub
or
add
sub
push
cwtl
sahf
dec
rclb
pop
stc
push
and
xor
or
push
jge
sbb
sbb
daa
add
sbb
pop
mov
adc
xor
loopne
jno
jno
add
arpl
filds
fwait
enter
sar
mov
das
push
mov
fcoms
and
jl
add
jecxz
mov
push
and
adc
ds
bound
cli
rolb
imul
sbb
arpl
xor
imul
add
outsl
xchg
shlb
fstsw
dec
daa
popa
mov
mov
mov
xchg
fcmovnbe
popf
add
add
jmp
add
xchg
add
pop
test
push
push
mov
push
sbb
push
sub
insl
or
les
adc
lcall
cmp
movl
ja
adc
push
dec
cmp
out
pop
add
test
sbb
iret
sbb
and
jg
inc
pop
adc
add
sub
repnz
aaa
sub
add
jnp
scas
sub
and
sarl
add
inc
fstp
shrb
sbb
verr
aad
mov
lret
pop
movsl
rorb
add
outsb
cmp
xor
sarb
out
add
mov
cmp
jns
dec
addr16
int
xchg
es
add
icebp
add
pop
jge
hlt
jl
mov
add
dec
pop
rorb
inc
add
add
push
xor
shll
sub
jp
and
xor
jp
add
mov
push
add
pop
jg
sarl
push
add
das
out
js
xchg
xchg
jmp
push
cmp
xor
inc
inc
in
xchg
clc
es
xchg
cmp
imul
call
outsb
push
add
and
and
jae
mov
out
in
pop
or
scas
jnp
xor
insl
movsb
add
int
add
adc
xor
dec
lods
jmp
fdivrl
and
jne
push
ss
adc
cmpb
pop
aaa
add
subb
push
adc
pushf
loopne
test
push
call
inc
mov
pop
cmp
mov
enter
dec
xchg
insl
add
sbb
cmp
dec
add
add
mov
and
sub
mov
stos
xor
jmp
add
jns
mov
cld
sbb
cmp
jl
add
dec
rclb
and
mov
add
xor
testl
pop
add
push
add
xor
inc
jnp
cmp
mov
dec
add
push
dec
arpl
es
mov
sbbb
mov
pop
jbe
loop
add
lea
dec
mov
and
mov
loop
pop
xlat
push
jmp
mov
or
daa
add
sbb
sbb
cmp
rcrb
frstor
les
sbb
or
testl
sub
fwait
shl
popf
push
add
dec
in
rclb
xor
dec
leave
sub
cwtl
addr16
sub
int3
push
popw
mov
in
stos
leave
dec
sbb
ror
add
fwait
add
mov
fidivrl
add
inc
sub
pop
cmp
daa
fs
push
sub
sti
push
in
scas
or
aam
andb
adc
addr16
add
cwtl
fistps
lds
inc
stc
add
stc
push
flds
cli
push
mov
add
mov
das
or
les
into
adc
cs
in
std
xor
cltd
dec
pop
dec
mov
pop
sub
dec
dec
out
test
xor
dec
push
ret
es
add
add
xchg
mov
pop
les
scas
add
fldl
inc
add
cmc
movsb
test
mov
es
dec
pop
vpackuswb
ret
mov
popf
lret
xchg
jl
jne
add
cld
cmp
push
and
cmpsl
mov
add
inc
repz
jns
add
mov
mov
mov
add
jns
add
add
add
mov
push
data16
or
or
jbe
flds
xchg
dec
mov
pop
sub
out
pop
push
mov
ficoml
sbb
jae
add
out
dec
mov
or
xor
xchg
test
sbb
out
dec
aad
dec
add
and
loopne
jmp
out
push
add
popa
gs
sbb
popa
push
les
add
insb
in
nop
sarb
ficomps
popf
pusha
ss
in
fidivrl
xchg
in
dec
pop
imul
push
adc
add
and
add
lcall
clc
and
and
or
xor
outsl
jbe
add
add
loop
xchg
pop
aas
outsb
adc
and
add
aad
pop
shll
mov
adc
das
adc
jle
jl
jb
push
jmp
add
testb
adc
dec
fld
fmuls
add
fsts
mov
clc
add
mov
mov
mov
sahf
jge
mov
push
lea
lahf
jo
cwtl
stos
mov
pop
lcall
or
enter
adc
dec
fsubp
nop
inc
inc
cmp
add
or
inc
add
and
lods
add
xchg
cli
in
negb
xor
add
fldl
cmp
pop
fildll
aas
lds
pop
jnp
add
add
push
push
mov
add
add
xchg
cltd
stc
cmp
out
or
cmp
mov
jp
std
add
pop
movsb
sbb
add
mov
in
divb
add
inc
int
fistpl
push
lods
add
stc
fnsave
xor
arpl
add
adc
dec
filds
adc
add
lea
subl
rcrl
push
mov
scas
or
jle
xchg
cmp
cmp
cld
jmp
xor
mov
or
add
mov
add
daa
dec
scas
lock
adc
add
jge
sub
mov
jno
jg
add
jae
mov
pushf
dec
xor
and
mov
cld
jae
jl
mov
pop
adc
cmp
dec
or
out
das
arpl
or
es
shlb
les
insl
repz
add
aad
sti
jge
pop
cmpsl
add
sbb
js
jo
ror
or
mov
cmp
es
add
xchg
cmp
imul
out
xchg
mov
jae
addb
push
test
push
jns
dec
sub
cli
or
add
ds
add
pop
shlb
outsl
cmc
ret
dec
cmpsb
jmp
insl
add
add
add
out
gs
jnp
xchg
add
xor
or
sub
push
pop
xchg
push
add
dec
lea
mov
add
in
xchg
mov
pop
xor
int3
loope
push
pop
sbb
cmpsb
es
add
jl
and
add
push
mov
cmp
lock
add
ljmp
pop
ja
add
adc
add
add
add
pop
fs
cs
add
xor
enter
inc
add
push
std
jp
lcall
cli
stos
fldl
or
cmp
push
add
add
push
sub
sbb
add
lahf
mov
fldl
ret
xchg
pop
push
movsl
xchg
cmc
imul
xchg
jo
cli
pop
adc
es
pop
ficoms
add
lret
add
add
cli
or
test
push
rol
add
shl
add
fs
add
test
mov
rorb
add
fsubrl
or
ficompl
xorb
shrl
loopne
inc
push
xchg
mov
scas
mov
mov
add
pop
add
mov
aad
fdivl
jp
andb
adcb
add
adc
sti
lret
mov
mov
add
and
add
insb
xlat
int
add
insl
sub
nop
mov
xchg
or
sahf
cmc
and
add
imul
mov
push
lahf
test
flds
dec
jp
in
mov
pop
cmpb
mov
std
sub
or
sub
add
int3
lret
data16
xor
push
push
ljmp
adc
sub
add
xlat
into
ret
mov
les
fiaddl
mov
dec
push
inc
imul
arpl
mov
jnp
add
xor
shll
jmp
mov
scas
mov
fs
or
rcr
pop
add
stos
and
testb
cmp
sbb
mov
push
mov
dec
push
or
sbb
push
push
push
and
inc
add
cli
dec
or
jle
add
pop
iret
mov
push
mov
xchg
mulb
fisttpll
movsb
ja
mov
mov
lods
mov
mov
xor
mov
add
fiadds
xchg
add
ud2
and
mov
add
mov
insl
lcall
cli
xlat
add
mov
xlat
lea
jle
fldl
pop
add
popf
or
and
inc
add
mov
sbb
and
jmp
aas
xchg
movsb
in
ja
push
and
adc
jmp
jecxz
sbbb
or
icebp
es
cld
pop
add
inc
cwtl
jle
cmp
call
sub
pop
clc
test
iret
in
ss
iret
or
hlt
or
test
divl
xor
iret
add
stc
add
pop
add
adc
add
mov
cmp
add
int
fbstp
add
int3
xor
cmpsb
sarb
pop
xchg
add
out
xchg
add
popl
lahf
dec
add
sbb
mov
mov
add
out
or
xor
mov
sbb
pop
outsl
pop
hlt
xor
xor
movsb
inc
mov
test
fimull
xor
lahf
lret
sti
arpl
add
test
stc
clc
sub
mov
arpl
pop
rcl
inc
pop
ss
push
xchg
add
jo
xor
dec
jp
mov
xchg
jno
add
divb
rcrl
hlt
dec
sbb
jg
call
out
or
data16
add
mov
roll
mov
add
push
pushf
mov
add
ja
ja
das
movsl
or
test
int
pop
cli
imul
mov
dec
int3
mov
xchg
fmuls
addr16
pop
sbb
je
ud2
mov
ljmp
js
out
add
add
popa
aas
imul
clc
sbb
jp
rcrb
add
fs
shrl
inc
outsl
insl
loope
mov
dec
pop
add
add
es
pop
push
lret
add
inc
test
push
pop
roll
or
std
inc
aaa
dec
jmp
sub
and
jb
daa
inc
call
jmp
push
push
add
pop
cli
shr
mov
pushf
arpl
outsl
scas
daa
mov
or
add
ret
rorl
cmpsl
inc
bndstx
push
add
rorl
test
mov
sub
std
imul
rclb
fildl
adc
add
cmc
xchg
jno
jo
cmpsl
add
push
mov
mov
mov
or
push
ja
add
mov
in
inc
add
push
sub
bnd
outsl
fwait
sub
mov
and
popf
addb
xchg
cld
loopne
jns
test
fistl
js
inc
roll
stos
repnz
fiaddl
xor
push
inc
jno
jl
movsb
leave
push
adc
adc
push
andb
add
dec
jecxz
add
bound
mov
add
or
cmp
jne
dec
mov
lods
dec
enter
dec
cmpsl
xchg
inc
shll
jno
aam
scas
sti
add
sub
cltd
out
mov
adc
in
cmp
dec
and
adc
sahf
mov
add
add
outsb
fiadds
decl
jmp
xor
jnp
pop
and
or
shrb
test
sti
xor
dec
add
jne
ret
movsl
test
outsb
adc
gs
mov
push
xor
jle
call
xchg
cmpl
dec
cmp
mov
cmp
sub
cmpsb
push
lods
cmp
sbb
cmp
cmp
cs
cmc
sahf
sbb
popf
je
call
add
js
pop
add
push
outsb
stos
dec
cmp
adc
or
cmp
cs
jb
dec
repz
sysexit
lods
mov
mov
lahf
add
sub
clc
add
xor
pop
daa
add
hlt
push
and
adc
mov
xor
cmp
xor
add
int3
and
sub
icebp
pop
add
test
lret
ret
out
add
pusha
mov
dec
cmc
inc
or
cmp
out
mov
push
xor
cmpsl
out
add
jg
xchg
jo
sarl
mov
or
bound
sub
add
add
xchg
popa
or
bound
insb
add
dec
or
xor
ds
adc
adc
mov
in
or
add
add
push
push
add
add
cwtl
fnstcw
nop
adc
leave
adc
dec
and
add
push
ror
mov
cmpsb
out
sub
add
pop
cmp
js
xchg
test
outsl
les
adc
jecxz
push
outsb
adc
inc
mov
jle
add
mov
call
inc
add
in
add
push
cmc
outsb
pop
and
addr16
sub
add
leave
mov
in
mov
stos
inc
cmova
ljmp
or
xor
mov
sbb
mov
pop
add
dec
push
push
and
cmpsb
cmp
xchg
pop
xchg
sub
push
add
or
jg
add
add
push
leave
push
repnz
addl
mov
das
push
pop
faddl
fiadds
sub
or
bound
cmp
mov
add
popa
int3
or
cmpsl
and
add
fstl
les
dec
pop
cmp
mov
push
sti
mov
pop
mov
sub
out
mov
imul
sub
cmc
sub
incb
cmpb
inc
ficoml
xchg
add
sub
adc
jle
xlat
icebp
pop
je
mov
lcall
lcall
outsb
inc
out
scas
and
rcrb
mov
jo
sti
add
stos
jno
jg
or
insl
sub
add
mov
pop
test
cmp
fs
jmp
dec
sbbl
add
mov
add
mov
aad
out
das
addl
mov
push
cs
inc
ret
mov
insb
sbb
insl
add
mov
xchg
cli
out
push
sbb
jp
add
pop
mov
ljmp
add
ljmp
lcall
add
imul
rcrb
sub
push
add
cltd
dec
and
push
mov
cmp
xchg
add
add
pushf
fadds
xchg
popa
call
sub
add
cmp
jp
add
add
jp
sub
inc
and
sbb
add
jne
cmp
popf
sbb
pop
xor
add
in
sbb
cld
mov
sbb
bnd
jl
mov
add
cmp
add
loop
aas
add
repz
mov
fdivs
mov
add
dec
addr16
add
fs
and
popf
sub
lods
adc
imul
movsb
insl
hlt
lret
add
push
add
and
mov
ljmp
pop
sahf
pop
leave
sub
xchg
mov
mov
inc
or
or
adc
xchg
push
rolb
mov
mov
mov
add
sbb
fcoms
inc
add
lea
adc
movsl
dec
inc
adc
hlt
or
lods
out
cmc
into
ret
in
sub
aad
add
dec
ljmp
stos
stos
test
sub
or
sub
cwtl
jbe
arpl
mov
movsw
add
pop
ds
repnz
add
subb
outsl
jns
das
push
add
aam
push
xchg
outsl
mov
mov
jns
jle
enter
or
add
jecxz
add
sahf
xchg
inc
data16
insl
pop
cmp
cmpl
sarb
fdivr
mov
sbb
xchg
sub
shr
loopne
loope
jg
and
adc
clc
stc
xchg
push
lock
test
mov
pushf
jnp
adc
add
push
imul
scas
add
pusha
lcall
jecxz
adc
fdivs
xchg
pushf
filds
lea
adc
cmp
cwtl
out
sbb
mov
jbe
add
into
add
mov
add
fnstcw
pop
leave
add
cmp
and
add
add
ss
mov
test
push
das
out
adc
lret
and
pop
dec
cmpb
stc
rorl
add
pop
scas
movl
sub
test
or
sbb
and
outsl
push
mov
clc
xchg
sti
push
add
dec
add
push
pop
pop
aam
cmp
sub
lcall
dec
add
sbbl
lods
lret
jle
or
or
insl
nop
xor
das
sub
nop
push
mov
fidivs
jp
sub
mov
push
xor
inc
stos
inc
div
in
fimuls
std
add
jo
and
sbb
jge
movl
lret
mov
lea
ret
sub
mov
pop
outsl
in
push
push
add
push
cmc
and
sub
scas
addl
add
inc
jecxz
push
addr16
add
add
call
aam
insb
lret
cmp
bound
add
add
xor
push
addl
iret
inc
cld
test
lahf
cli
add
xor
data16
cmpsl
fsubs
and
mov
pop
movb
sub
mov
cmpsl
add
call
mov
dec
arpl
add
or
mov
inc
xchg
and
mov
push
add
dec
jl
test
jmp
sbb
mov
mov
add
in
jnp
sahf
add
adc
mov
faddl
pushaw
xchg
std
push
mov
add
lret
add
push
jae
sub
mov
push
negb
cmpsb
test
aad
sbb
lods
dec
mov
fnstenv
jnp
imul
dec
mov
sub
fwait
outsb
enter
mov
pop
test
negb
cld
add
mov
stos
xor
add
push
add
mov
shl
and
sub
push
test
mov
xchg
add
add
sbb
jle
rcll
xchg
aas
lret
jns
rolb
add
test
jne
inc
mov
les
mov
addb
js
adc
push
ss
sub
xor
add
or
lods
xchg
add
iret
adc
jno
add
pop
aaa
mov
jg
lcall
cmc
aam
outsb
add
and
insl
xor
push
subb
jbe
lret
cmpsb
lds
push
cmpsb
mov
or
fbstp
inc
add
test
ss
jne
push
aam
adc
push
push
add
add
lea
rorb
adc
push
sub
or
stos
fs
add
mov
outsl
mov
sbb
and
push
ja
xor
push
mov
and
cltd
xor
xor
add
std
in
repnz
xchg
rclb
or
fldenv
ja
fs
mov
add
add
dec
push
bound
xchg
inc
add
scas
movsl
mov
add
arpl
xchg
gs
flds
mov
pop
cmp
daa
ret
pop
pop
add
add
fsts
arpl
int
bound
xchg
mov
aaa
add
adc
aam
add
in
sub
push
in
mov
fs
data16
xor
jmp
add
inc
scas
and
push
push
das
imul
clc
ja
inc
add
add
jg
loope
jmp
cwtl
fdivr
pop
mov
fimull
ljmp
and
scas
ljmp
pop
cmpl
adc
jg
mov
xchg
les
and
mov
cmp
and
add
and
out
add
fxch
pop
fstpl
sub
daa
pop
out
cli
push
add
out
sbb
sti
or
xchg
add
inc
xchg
push
sbb
out
sub
mov
add
add
xor
adcl
jnp
insl
jl
add
cmp
inc
orb
pushf
fsub
and
loope
add
sbb
stc
fcoms
out
sbb
call
add
lds
add
fadd
and
sub
add
push
dec
mov
fistps
insb
daa
in
in
inc
int
rcrl
pop
jl
outsl
jg
add
dec
jne
pop
dec
cmp
stc
insb
adc
test
jmp
xchg
rcl
rol
dec
popf
adc
out
jb
add
test
xadd
add
add
xlat
push
sbb
movb
xor
les
sbb
hlt
cld
incb
xchg
fiadds
jno
push
gs
inc
dec
mov
sbb
mov
enter
std
mov
cmp
and
cli
stos
mov
add
push
clc
and
add
popl
adc
shll
in
pop
adc
xlat
and
mov
arpl
fisubs
or
sub
in
mov
jnp
adc
popf
sbb
jmp
cltd
sbb
addb
addr16
mov
mov
jne
and
roll
andb
push
adc
int
add
mov
sub
insb
mov
sub
jnp
push
push
inc
mov
add
and
ret
sti
mov
test
rorl
mov
sub
enter
sbb
fcomps
add
cmp
mov
add
insb
mov
bound
add
pushf
cmp
or
pop
cltd
add
xchg
add
sbb
test
lds
bound
mov
pop
dec
ljmp
int3
cmp
xchg
jg
in
add
fnstcw
push
dec
aaa
andb
add
loopne
loop
cmp
add
cmp
lea
xchg
test
mov
add
ret
jo
pop
pop
adc
sti
in
in
inc
jnp
shll
jl
dec
outsl
add
jl
stos
cmp
repnz
imul
add
cmpsb
dec
repz
data16
or
stos
adc
add
inc
ljmp
es
subb
pushw
daa
mov
mov
mov
push
jo
sbb
add
pop
and
xor
xor
out
xor
sub
jg
add
dec
and
psllw
pop
mov
mov
and
mov
adc
shll
ret
mov
stc
pop
jb
jl
aad
shll
push
jp
adc
cli
add
roll
mov
jb
pop
mov
jnp
rcrb
jmp
bound
ds
sbb
test
sub
xchg
lret
jns
scas
jnp
push
icebp
and
mov
or
add
lahf
xor
sub
sbb
adc
push
adc
adc
add
xor
inc
rcll
repz
pushf
add
test
es
faddl
pop
xor
xor
jl
cmp
lcall
clc
mov
xchg
fdivrl
sbb
imul
add
add
mov
cmp
clc
mov
shlb
pop
add
xor
xchg
add
test
mov
jo
xchg
jp
std
push
faddl
add
int3
fstps
lret
aaa
into
cmp
popf
add
lret
or
dec
decb
movsl
inc
fs
rolb
in
add
or
jmp
sbb
popa
push
nop
pop
test
stc
call
xor
mov
icebp
add
push
mov
xchg
enter
ret
xlat
add
pop
insb
bound
shr
rcrl
sbb
pusha
ja
mov
jnp
loop
xchg
imul
or
lret
lock
lret
test
mov
in
add
cmp
cs
add
shrb
imul
stos
imull
sub
dec
pusha
in
or
icebp
mov
cmp
lret
les
ds
inc
dec
repnz
popf
loop
cmp
aaa
push
outsl
adc
lods
enter
scas
add
add
add
pop
imul
addr16
cmp
push
iret
sbb
push
adc
scas
and
pusha
leave
add
push
fcompl
cmp
or
push
add
movsb
scas
add
pop
or
cmp
cmc
cwtl
mov
add
js
aam
dec
in
mov
lahf
push
jno
mov
pusha
movsb
add
aaa
call
push
ds
into
or
es
rcr
jmp
xor
pop
adc
flds
les
lcall
jae
lods
in
es
outsb
into
push
dec
pop
xchg
loope
pop
add
pop
dec
sub
add
add
add
add
lea
aas
ret
add
out
loop
mov
add
inc
jle
add
popf
imul
outsl
xor
push
mov
mov
sub
or
sbb
sbbl
sub
push
in
cmc
fisubrl
xchg
xchg
push
sub
movsb
xor
add
scas
and
xor
xchg
fdivrs
jg,pn
in
jle
stos
cmp
pop
mov
lcall
imul
lret
cmp
fistl
sahf
sbbb
sbb
mov
popa
dec
out
jbe
jo
mov
addl
jle
push
mov
iret
outsl
mov
inc
in
jp
push
test
bound
dec
orb
jmp
or
and
pop
fwait
das
testb
into
sbb
sbb
cmpsl
add
add
adc
push
out
das
data16
mov
cmpsb
add
lods
orl
lods
add
filds
mov
add
testb
add
ja
mov
jg
stos
jns
test
in
xor
in
test
mov
cmpsl
adc
jnp
rcrb
sub
sbb
sti
add
add
inc
pop
or
pushf
adc
or
fwait
add
mov
adc
pop
xchg
ret
pop
add
mov
mov
js
push
les
push
in
dec
sahf
cmp
jns
add
fnstcw
add
clc
je
mov
cmp
mov
xchg
add
jmp
add
adc
ret
cmp
rcr
jmp
add
add
in
out
add
pusha
xchg
scas
add
ss
push
mov
movsl
mulb
mov
out
pop
in
lds
push
mov
dec
fs
scas
fs
test
jne
std
xorb
add
jbe
icebp
lahf
add
pop
fcmovne
sbb
jp
mov
cmp
xchg
je
daa
dec
xchg
push
xchg
testb
outsb
insb
add
add
or
jg
gs
pop
cld
popf
adc
lods
mov
add
pusha
sbb
fs
sbb
js
imul
add
es
mov
jo
pop
add
add
shll
sar
add
mov
repz
xchg
gs
mov
rorl
dec
push
inc
clc
es
inc
jae
sub
or
daa
push
xchg
add
lcall
fstps
mov
scas
lahf
es
add
sarl
outsl
je
add
jo
pushf
icebp
ss
or
es
lret
push
lods
xchg
test
xchg
mov
sbb
in
repz
pop
push
jnp
das
stos
mov
popf
push
adc
add
aam
into
mov
test
mov
cmp
mov
mov
shll
pop
rolb
add
pusha
add
sbb
add
mov
lods
ljmp
adc
or
push
fdivl
popa
add
es
cmp
sbb
call
sub
add
add
stos
add
add
lods
and
sti
loope
mov
sbb
pop
cmpsb
mov
add
in
rcrb
push
and
enter
shrb
js
jle
adc
clc
subb
cmp
push
je
adc
cld
jb
jb
shl
mov
mov
add
add
inc
pop
mov
jecxz
pop
xorl
xorb
inc
lahf
inc
xor
in
push
xchg
mov
hlt
adc
jae
jmp
inc
or
aaa
jno
mov
add
add
lcall
call
mov
loope
test
sahf
icebp
mov
pop
add
cmp
test
rcl
insl
cmp
xor
add
mov
mov
push
fiaddl
and
add
sarb
xchg
fistps
jecxz
negb
add
fsubs
push
movb
leave
pop
scas
lea
rcrl
inc
or
outsl
xchg
idivb
jo
rclb
push
out
js
inc
inc
sti
add
clc
in
mov
push
add
jmp
fwait
addl
pop
in
rdmsr
arpl
add
call
lds
push
ds
pop
xchg
mov
adc
adc
popl
aam
xchg
pop
adc
inc
sub
mov
std
add
sbb
and
ret
pusha
popf
dec
sub
add
add
add
xchg
cmpsb
mov
xor
lret
shlb
xor
add
sbb
mov
jge
xchg
and
clc
pop
sti
mov
lea
xor
xlat
sub
push
add
mov
lcall
push
pop
in
and
ret
add
xor
loope
sub
inc
cmc
cltd
pushw
jae
cmp
jo
insl
fwait
jae
jb
pop
sbb
insl
xlat
sbb
jle
add
add
cs
popf
lcall
cmp
cmpsl
xchg
push
mov
add
mov
mov
ficoms
arpl
jae
pop
outsl
inc
pusha
aas
xor
nop
popf
fwait
loopne
notl
mov
orl
add
sbb
add
push
test
in
in
mov
push
ficompl
inc
xor
out
in
push
add
mov
mov
add
xor
ret
mov
imul
sbb
pushf
fwait
add
add
add
dec
jno
add
jle
imul
or
push
add
add
add
addb
xor
mov
jnp
jnp
pop
mov
sti
icebp
test
sbb
dec
add
mov
call
inc
in
stos
push
fcmovu
add
popf
push
mov
pop
push
mov
mov
roll
sbb
xor
and
fdivrs
mull
lcall
es
add
cmpsl
inc
nop
sub
add
ja
add
pop
jecxz
mov
mov
iret
pop
lods
and
sbb
mov
xor
icebp
xchg
popl
xchg
jg
xor
and
sbb
jle
xchg
jne
mov
xor
sub
mov
xlat
xor
and
pop
jg
add
sbb
pop
add
or
sahf
jae
cli
and
sub
mov
gs
add
xchg
add
jl
movsl
add
mov
loope
bound
insl
sub
and
and
add
add
call
fistpl
adc
mov
incl
jg
add
jo
sub
popa
inc
sbb
insl
es
add
or
repz
jmp
jecxz
fstpl
imul
cmp
sbb
popa
dec
popf
dec
or
popf
rclb
xor
dec
scas
jecxz
add
adc
mov
fdivp
jnp
add
add
shrb
add
cmpsb
mov
aad
sub
popa
add
xchg
jge
add
inc
shll
int
mov
sub
mov
add
inc
add
gs
cmpsb
lahf
add
fmulp
xlat
sub
rol
pushl
and
int3
xor
push
dec
addr16
lods
add
test
mov
bound
mov
mov
cli
xor
ret
gs
repz
mov
fidivl
adc
test
ret
stc
add
loop
add
add
lahf
fsubp
mov
sahf
inc
inc
add
ja
sbbl
movsb
stos
add
jns
jb
ja
xor
push
adc
or
orl
pminsw
inc
roll
movb
mov
or
jecxz
cmp
sbb
ss
aad
jle
cmpb
xchg
add
add
mov
and
mov
add
rorl
dec
fnstsw
sbb
cltd
int3
and
mov
mov
or
sbb
inc
and
mov
scas
inc
in
mov
inc
cmp
sub
sbb
add
pop
xor
push
popf
add
cmp
adc
push
mov
dec
add
push
cmp
add
and
xchg
add
dec
sbb
add
xchg
jno
add
pop
cld
add
add
push
loopne
sub
clc
and
movb
test
pop
rcll
mov
out
mov
xchg
repz
bound
call
pop
or
lods
mull
add
loop
out
movsl
imul
mulb
add
int3
add
js
fs
xchg
dec
add
sub
loope
add
push
arpl
xchg
cld
adcb
rdmsr
jecxz
idivl
daa
add
les
adc
ficoms
cwtl
pop
xchg
inc
rcrb
jnp
add
jmp
xchg
rcll
ds
mov
in
push
cld
add
aaa
cmp
testb
stos
or
popa
filds
daa
jecxz
mov
add
xchg
loop
or
sbb
lock
cs
xorl
sbbb
mov
mov
pushf
adc
iret
mov
leave
xchg
jae
loope
xchg
mov
dec
push
cmp
mov
test
arpl
aam
dec
test
lods
pop
test
or
add
subb
js
add
jge
scas
sub
adc
shrb
mov
enter
jns
add
add
lods
mov
or
mov
sbb
pop
push
fwait
jle
js
hlt
into
cmp
xchg
add
add
rcr
aad
shr
cmpsb
addb
lret
mov
xchg
sub
cmp
leave
fwait
or
inc
sbb
pop
jl
push
push
fnsave
mov
nopl
add
add
pop
insl
pop
pop
sub
mov
subb
add
aad
lods
cmp
jmp
xor
outsb
add
fwait
jns
popf
iret
pop
jbe
addr16
ds
add
sbb
jne
jne
adc
inc
add
sub
ret
add
dec
add
sub
pop
add
adc
in
popa
adc
sub
out
adc
jp
jg
cmp
cmp
cmpsl
lret
add
pushf
incb
test
push
add
jae
dec
dec
mov
lea
adc
add
add
jns
add
lahf
jge
pusha
sbb
std
sbb
cmp
adc
inc
sahf
cmc
jno
mov
xor
shrb
sbb
xor
cs
sub
add
add
in
push
add
std
mov
nop
sbb
mov
cmp
add
stos
sbb
lock
or
popf
mov
imul
pop
and
jno
add
xor
add
fistpl
pusha
shrb
add
xchg
pop
imul
movl
ja
in
repz
or
decl
leave
add
lds
call
xchg
in
loopne
out
mov
dec
add
add
movb
add
pop
lret
lahf
shlb
rolb
repz
dec
xor
leave
and
push
sbb
xchg
out
in
lret
or
add
adc
cmp
pop
nop
pop
cmovle
pop
add
pop
push
lds
lods
shrb
pop
adc
push
in
mov
jg
push
or
add
dec
mov
xor
lds
adc
mov
cld
xchg
pop
fwait
and
adc
and
push
pusha
hlt
or
test
ja
mov
pop
loopne
push
or
lock
dec
aam
push
add
add
das
popf
jge
js
ja
sahf
jge
sub
clc
cs
insb
test
cltd
or
mov
js
inc
jmp
pop
add
pop
movsl
add
add
das
push
mov
ss
clc
xor
into
mov
dec
out
pop
insl
add
fsubl
test
fisubrl
jg
stos
jnp
jmp
mov
repnz
popa
les
xor
add
fisubrl
decl
movsl
sub
fisttpll
icebp
pop
add
insl
adc
out
cmovbe
inc
icebp
jo
lret
add
inc
cmp
cmp
sbb
aas
cld
ljmp
adc
xchg
cmp
mov
or
cmp
out
fisubrs
cmc
out
push
jg
pop
push
lret
scas
outsb
fmulp
out
or
cmp
push
fimuls
cmpsb
add
ret
jge
cmp
xchg
xlat
jbe
inc
xchg
decb
mov
movsl
ss
cs
pop
add
lods
push
jnp
mov
inc
jmp
pop
and
lods
iret
test
add
loopne
ret
xchg
xchg
add
add
call
mov
fcomps
add
sbb
out
cmp
jae
fs
and
add
sbb
mov
or
jl
stos
add
rcrb
incl
add
add
mov
dec
loope
mov
aaa
and
xchg
and
inc
add
fwait
push
into
cmp
fsubrs
add
in
mov
mov
xor
iret
dec
sbb
into
scas
jns
movsb
mov
sub
roll
faddp
shrl
decb
jp
add
inc
sbb
add
test
es
mov
dec
jb
jb
mov
and
xchg
cmpsb
or
inc
add
int3
and
dec
inc
adc
cmp
repnz
sbb
dec
xor
push
pop
inc
push
data16
loop
add
xor
pop
pop
daa
inc
js
mov
pminub
add
add
inc
jne
add
insl
clc
pusha
cmp
imul
cmpsl
mov
movsb
test
iret
sbb
mov
add
out
aad
add
inc
add
inc
repnz
add
sbb
lock
mov
xchg
inc
scas
lretw
repz
addb
aas
aas
daa
daa
sub
sub
aam
jbe
push
add
add
push
mov
popa
add
cwtl
add
sbb
fdivrl
lock
dec
mov
and
aas
mov
add
jg
mov
lret
xchg
cli
lcall
movsl
pop
adc
adc
addb
outsb
adc
fiaddl
xlat
sub
in
mov
add
insb
lret
add
or
push
xchg
inc
mov
idivb
js
xchg
int
outsb
pop
js
lods
in
add
shlb
idivb
lds
in
mov
clc
push
mov
sbb
outsl
xchg
mov
pop
inc
mov
push
mov
add
sbb
js
cmp
mov
pusha
test
adc
mov
arpl
adc
sahf
andb
jb
out
popf
push
inc
test
aad
add
enter
mov
inc
push
mov
dec
flds
sbb
adc
fnstenv
push
push
push
push
bound
rep
popl
and
daa
outsl
loop
ja
lcall
popa
push
ret
das
dec
test
inc
fadds
pop
add
jp
or
and
jge
lahf
mov
xor
xchg
out
enter
cmpsl
mov
xor
xor
mov
xlat
addb
lret
inc
testl
add
dec
pop
popf
add
test
in
adc
incb
adc
fnstcw
mov
mov
jb
jno
xchg
icebp
into
in
and
out
mov
hlt
or
add
dec
xchg
je
add
std
adc
testl
aas
popf
adc
imul
add
rorl
sub
add
sub
test
xlat
jbe
mov
xchg
into
insl
xchg
test
xor
fdivrl
arpl
das
mov
cmc
inc
push
add
add
aam
sbb
jne
add
push
add
jo
mov
fisttpll
cltd
mov
add
mull
and
out
lahf
mulb
leave
fs
add
or
test
inc
add
inc
data16
mov
loop
add
mov
rcr
outsl
test
xchg
repz
mov
out
sub
lods
adc
mov
jne
adc
add
push
xchg
mov
sbb
sub
adc
add
ja
insb
xchg
pusha
add
pop
test
sbb
insb
add
loope
pop
test
xor
and
add
out
cli
pop
imul
sub
aad
lea
lock
stos
stc
mov
mov
imul
sbb
in
and
add
or
fiadds
mov
test
adc
jge
add
push
cmp
dec
mov
fnsave
test
and
jge
push
push
scas
xchg
cld
add
mov
and
xchg
add
lock
pop
adc
or
mov
push
add
add
add
std
xor
out
cli
add
cld
pop
add
xor
orl
lcall
pop
jae
les
push
rcrl
inc
test
das
mov
dec
push
add
adc
lods
push
outsb
inc
idivb
push
inc
in
sbb
or
push
add
pop
dec
add
lea
mov
mov
in
add
cmp
adc
sbb
mov
add
pop
pop
mov
cmp
or
cmp
not
subb
out
mov
ffree
pop
add
cmp
and
iret
mov
inc
test
jl
insb
push
shrl
xchg
jecxz
popf
fdivrs
jns
xchg
lret
insl
scas
add
inc
mov
hlt
sahf
xchg
jg
in
jecxz
cmpsl
sbb
mov
and
fimull
mov
push
popa
pcmpeqw
push
into
int
add
add
dec
add
jecxz
push
pmullw
push
adc
add
mov
cmp
and
clc
js
lret
lcall
push
fnstsw
adc
fcomps
inc
sub
daa
add
jbe
mov
xlat
cmpsl
add
and
xor
mov
jno
add
lcall
pop
imul
repz
add
cld
xor
xchg
push
jb
das
sbb
add
xchg
jp
add
inc
lods
cmp
mov
out
add
adc
popa
xor
cmp
lods
inc
ljmp
fstl
imul
pop
andb
mov
or
test
shrb
adc
dec
mov
xlat
dec
pause
jp
lea
xlat
xchg
mov
sar
arpl
adc
sub
hlt
outsl
lods
adc
adc
xor
filds
mov
nop
jb
push
mov
mov
xchg
add
aaa
add
mov
add
inc
nop
popf
add
xchg
jmp
testl
cmp
push
add
add
push
repz
or
sub
lds
cltd
xchg
and
mov
mov
jo
xor
dec
ljmp
icebp
cmp
mov
add
push
lods
mov
insb
lcall
add
add
sub
or
jge
pop
int
push
xchg
jb
and
scas
add
enter
ja
mov
lcall
ds
sbb
xchg
jg
bound
ret
clc
call
test
dec
ror
adc
pop
add
sbb
mov
in
outsl
or
add
lods
mov
lock
xchg
xorl
je
test
xor
jo
add
pop
out
daa
iret
aas
mov
jns
xchg
mull
fcomps
push
inc
dec
bound
es
cmp
lret
inc
mul
xor
insb
out
sahf
add
mov
cmpb
nop
xchg
push
mov
mov
inc
fsubrp
fs
jb
add
lret
cli
add
cwtl
aas
add
fwait
push
or
xor
aad
mov
adc
sub
mov
inc
dec
sahf
and
fwait
mov
lock
aam
scas
mov
loopne
rcll
push
in
push
add
lea
insb
mov
test
inc
cmpsl
fdivrl
xchg
sub
dec
xor
mov
xchg
test
sbb
cwtl
aas
cmpsl
inc
sahf
hlt
lds
aam
add
add
add
sub
add
xchg
or
cli
inc
lock
ljmp
pop
cmp
pop
add
dec
jb
lods
and
xor
popa
xor
xchg
and
pop
bnd
pushl
mov
mov
out
push
inc
jl
add
jb
mov
jecxz
mov
lret
mov
xchg
mov
lret
pushf
cwtl
out
push
push
adcl
dec
add
scas
mov
jnp
sbb
leave
insb
lock
mov
mov
xchg
add
pop
enter
xchg
insb
jge
scas
cmpsl
bswap
movb
add
mov
dec
xchg
ret
and
mov
and
jg
sbb
dec
xchg
addb
outsl
dec
xchg
jbe
xchg
push
xchg
cmp
cmc
cmc
in
mov
jmp
shlb
movsl
mov
jmp
into
fidivrs
out
and
loopne
add
mov
fmull
aas
cld
jge
pop
pop
or
test
stc
call
ds
repz
add
push
sbb
add
add
adcb
add
adc
mov
adc
repnz
rcr
cmc
jne
sub
pop
pop
cmp
clc
jl
mov
in
in
add
add
and
add
repnz
test
iret
push
adc
rcl
cmp
cld
mov
aas
adc
mov
aam
cld
pop
add
or
add
aad
sub
flds
mov
add
xor
shll
adc
mov
or
add
shr
add
jo
pop
xor
idivl
add
jmp
dec
cmp
cmc
outsl
add
rcll
inc
add
imul
lcall
insb
add
cli
jp
popf
inc
add
testb
push
outsb
cmpsl
mov
cli
add
and
xchg
jb
pop
cli
loopne
and
jb
push
dec
add
xchg
pushl
add
cmp
cltd
mov
add
ror
inc
bound
mov
out
jecxz
testb
cmpsl
add
call
jae
jb
scas
add
addl
sahf
xchg
pop
fwait
cmpsb
cmpsl
jecxz
mov
inc
add
das
pop
shrb
inc
out
insl
or
mov
ja
dec
jns
movl
jge
add
pop
ss
nop
repnz
push
aas
outsl
jne
mov
push
add
adcl
jb
stos
dec
push
cmp
adc
add
pusha
out
int3
inc
les
mov
cld
lock
sbb
fs
push
mov
ljmp
ret
jle
mov
add
add
ljmp
sti
dec
lods
movsb
movsb
addl
ror
add
xchg
ds
loope
and
inc
aas
inc
dec
ficompl
cmp
mov
jle
xchg
mov
and
pusha
add
cmp
add
cmc
fidivs
or
or
pop
push
cmpsl
dec
jg
ret
cmpsb
jg
nop
pop
jo
cmp
push
or
mov
popa
stos
add
movb
cmc
mov
call
xchg
lock
xor
pop
lock
add
mov
das
add
movsl
popf
add
les
mov
cmpl
pop
sbb
lea
lock
sbb
add
mov
mov
pop
xchg
scas
xchg
mov
sbb
xor
jmp
sub
push
popa
fdivs
sahf
nop
in
ja
fdivl
add
aaa
arpl
sbb
out
popa
mov
out
sub
inc
das
shrb
fwait
popa
dec
mov
aad
imull
ret
lret
je
mov
push
sbb
or
and
movsl
cmp
mov
sti
cld
repnz
push
fmul
push
adc
add
push
add
mov
sahf
pusha
dec
and
adc
xor
jbe
dec
cmp
insl
cmc
cmp
ss
je
adc
sub
int
add
add
mov
fisttpl
fcoms
inc
arpl
int3
into
push
pop
stc
add
imul
xchg
mov
subl
add
jp
ds
pushw
out
inc
lahf
add
andl
or
add
sahf
mov
je
adc
ss
sub
sub
add
or
add
dec
test
mov
addr16
push
mov
xchg
inc
add
mov
add
int3
ss
lret
mov
in
push
add
add
stc
lahf
sub
add
loope
inc
dec
lods
push
pop
xor
inc
add
add
push
push
pop
add
flds
pop
outsb
cli
pusha
lret
and
cmpsb
rclb
lret
repnz
jg
add
cmp
push
or
outsb
adc
pop
jge
std
xor
or
movsl
ds
add
pop
psrad
call
lcall
mov
inc
push
mov
dec
movsb
or
cmp
in
fldt
adc
mov
lcall
sbb
adc
pop
add
cwtl
mov
jo
or
int
inc
mov
aad
add
xor
add
mov
fldlg2
adc
in
xor
add
ljmp
out
cmp
add
sbb
adc
sarb
xor
adc
inc
and
adc
das
add
jno
sub
aam
iret
sbb
in
scas
or
adc
and
add
cmp
mov
pusha
jno
data16
daa
mov
mov
fbld
mov
cmp
cmp
jmp
inc
or
rcll
in
popl
loop
sbb
sbb
lcall
mov
out
add
mov
rorl
insl
fisubrl
mov
loop
add
jne
xor
ja
add
movsl
jns
jmp
add
add
push
adc
jno
add
xchg
or
pop
sub
jb
jmp
loop
movsl
roll
test
xchg
leave
ja
repz
in
flds
cmp
sbb
bound
add
push
sub
arpl
and
jmp
sbb
call
addl
test
inc
add
pop
jp
jbe
and
pushf
sub
pop
outsb
add
add
xor
daa
and
or
fstl
jns
dec
mov
bound
or
cmpsb
add
add
inc
add
xor
and
int3
jecxz
pushf
and
scas
lds
xchg
add
dec
and
add
mov
adc
popf
lock
cmpsb
add
push
ds
or
loope
scas
orb
cs
pop
adc
and
pop
fsts
push
sbb
mov
in
xlat
jno
push
jge
sub
dec
add
add
mov
in
add
mov
cmp
dec
sub
enter
cmp
mov
add
mov
ja
divl
xor
push
adc
adc
cmc
rcll
add
orl
lahf
jo
jb
jb
add
sub
mov
add
add
mov
xor
add
xchg
and
add
xchg
xchg
ret
add
add
leave
add
jne
push
fstps
popa
dec
and
insl
ljmp
out
test
out
add
add
idivl
dec
pop
xor
mov
es
mov
in
mov
mov
shl
cmpsb
mov
xor
insb
pop
mov
push
xor
insl
cmpsb
adc
sub
xchg
sub
data16
rcrb
adc
add
add
incl
jns
push
out
add
insl
mov
add
insb
jnp
mov
jge
jg
add
mov
add
rcrl
push
dec
rorb
je
jle
ss
loopne
fstl
aad
jmp
pop
dec
filds
sqrtps
jecxz
pop
push
adc
in
add
dec
jl
push
movsb
rolb
mov
mov
fistpll
push
sbb
add
mov
dec
stos
sub
mov
cmpsb
inc
call
inc
xor
mov
es
pop
sbb
jle
shlb
inc
rcrb
insb
subl
les
ss
js
mov
sti
add
fstpt
mov
aam
add
sbb
icebp
pop
add
fsubs
mov
iret
cmpsb
clc
fwait
lret
dec
pop
bound
loope
push
fwait
add
and
pop
xor
adc
ljmp
mov
xchg
ret
and
rolb
loope
and
test
movsb
jne
rorl
mov
ljmp
flds
jg
sti
aas
fs
rcrl
out
cmp
popf
add
lret
xchg
cmc
add
push
dec
mov
ds
mov
into
inc
int
add
sub
mov
cwtl
add
add
cmp
mov
xor
insb
movsl
cmp
scas
test
sbb
ljmp
mov
sti
push
out
or
add
sub
enter
add
sub
mov
sub
add
push
add
jge
repz
ret
out
mov
imul
and
std
jl
imul
add
cmc
add
lea
das
adc
lds
add
movl
mov
push
js
das
ret
cwtl
subb
clc
shrb
push
or
cmp
add
add
mov
mov
xor
enter
xchg
ljmp
add
xchg
call
and
adc
add
add
or
in
add
loope
dec
clc
ret
subl
xor
inc
push
shlb
int3
fcom
sti
or
adc
cmp
pusha
jecxz
add
popa
cmp
push
cld
es
pop
std
pop
mov
lret
or
lods
or
fmull
xchg
fwait
call
dec
mov
xchg
xchg
add
mov
imul
sub
add
sbb
pusha
addl
mov
in
lods
add
sbb
push
daa
shrl
gs
mov
inc
sub
cmp
hlt
mov
jb
fildll
xchg
cld
jmp
cmp
add
mov
add
push
add
dec
pop
mov
add
jg
rcl
and
xor
jl
xor
test
mov
in
fstps
add
add
ficompl
sahf
mov
add
xor
lds
cmpsl
aam
xchg
add
loopne
aas
filds
mov
orl
notl
mov
adc
add
pop
dec
mov
pop
or
sbb
adc
push
pop
pop
sub
nop
sub
mov
int
sub
add
xchg
flds
and
mov
bound
sub
out
fwait
and
push
push
fdivr
mov
lret
add
inc
pop
add
shll
jne
sahf
xor
sbb
out
fwait
shlb
inc
lea
insb
lcall
dec
xchg
repz
add
fwait
mov
dec
jg
jnp
cmpsl
aas
arpl
mov
gs
inc
push
sub
out
hlt
imul
push
cld
dec
jo
add
pop
es
out
adc
add
mov
jns
and
jne
movsb
add
add
test
fnsave
ret
scas
popf
adc
push
pop
xlat
ja
call
dec
inc
pop
xchg
jb
add
mov
insl
inc
sub
sbb
insb
pop
sub
add
inc
sub
add
popa
test
test
cltd
repz
mov
es
subb
xchg
or
cmp
push
lahf
das
cmp
imul
lret
aam
inc
add
pop
es
xchg
add
mov
mov
pusha
in
add
stc
jne
jl
add
jl
inc
xchg
lods
popf
pop
or
adc
add
dec
lock
inc
repnz
ret
push
add
pop
mov
insl
sbb
and
add
aad
or
aaa
lock
adc
inc
loope
dec
dec
nop
jae
add
add
cmpb
dec
out
add
sbb
sub
dec
mov
outsb
popf
nop
push
add
daa
enter
ret
loope
and
mov
std
cmpsb
jge
test
xchg
ret
add
mov
add
stos
xchg
daa
jnp
pop
test
addl
es
pop
and
aas
aas
or
add
ret
cmp
or
sbb
mov
shll
add
cld
xchg
jne
mov
and
sbbb
cmpl
ret
int
or
sbb
mov
xchg
jl
enter
fbld
or
jl
pop
xor
jbe
jp
add
popf
sub
push
nop
test
out
add
inc
dec
aas
add
adc
xor
into
into
arpl
in
gs
cltd
pop
and
sbb
testl
iret
aaa
add
negb
mov
shll
test
cmp
imul
inc
add
add
mov
sub
lods
push
push
aaa
inc
test
inc
dec
pop
mov
in
test
sbb
mov
xchg
mov
enter
inc
in
and
fwait
push
pop
les
repz
add
inc
jb
mov
roll
fadds
pop
jnp
movsb
js
mov
insb
lea
sub
add
cmc
imul
clc
fsubrs
add
and
data16
inc
inc
jb
outsl
add
add
leave
add
pop
and
jbe
fiaddl
add
pop
push
push
mov
sar
mov
nop
ret
cltd
mov
cmp
fcmovne
roll
sub
add
dec
notb
push
insl
and
lcall
xor
pop
dec
xor
mov
push
ret
lret
cmp
xchg
mov
cmp
cmp
sbb
or
loop
cmpsl
or
push
lahf
or
and
ret
add
inc
jns
or
clc
add
sbb
or
rol
leave
lret
sbb
es
jge
out
cmp
add
rclb
jns
mov
xor
add
repnz
add
xchg
xchg
std
add
add
push
jecxz
sbb
push
and
cmp
lods
sub
add
cmp
mov
sbb
gs
pop
mov
loope
add
xor
movsb
mov
sub
sbb
or
mov
dec
pop
cmp
and
add
or
add
and
ds
add
xchg
push
dec
es
jmp
pop
add
jne
add
insb
or
cli
xor
pop
push
iret
add
cmp
pusha
push
data16
cmp
add
inc
cmpsl
add
subl
pop
add
or
add
pop
stos
stos
repz
cmc
mov
cwtl
cmpsb
je
hlt
aas
fnstcw
add
adcb
cmp
adc
add
mov
jne
cmp
lds
int3
inc
and
jp
loope
xorl
repz
mov
pop
push
add
jne
repz
add
mov
add
rcl
outsl
jle
push
mov
ret
stc
jno
jae
cld
add
or
loopne
lods
mov
sarl
js
sarl
mov
leave
imul
mov
leave
std
xchg
add
and
mov
push
imul
xchg
ret
in
xchg
add
add
jne
inc
rcrl
xchg
int3
gs
imul
add
cmpb
dec
or
mov
mov
testb
cmp
bnd
stos
xlat
pop
jle
pop
or
cmp
add
roll
test
dec
rolb
scas
cmp
stc
pop
test
inc
lret
mov
add
js
cmp
dec
add
test
jl
and
add
or
jns
add
pop
xchg
mov
sahf
stos
add
add
or
cmc
ds
inc
add
out
push
out
addr16
sbb
add
mov
xchg
pop
inc
sarl
and
add
sbb
sti
imul
add
out
mov
add
shrb
sbb
popa
add
in
add
jno
mov
enter
jno
stos
fsts
or
iret
add
movsb
fidivrs
add
subl
movsl
or
add
les
repnz
mov
lods
add
pop
iret
cmp
test
cmc
fldlg2
cmp
or
jne
xor
mov
aad
data16
xor
and
sbb
ds
stos
xor
lods
xchg
ret
addr16
stos
push
mov
inc
sub
imul
subb
popf
cmc
xchg
out
clc
xchg
sti
lcall
sub
push
cltd
mov
or
addb
test
loopne
call
mov
sub
jmp
add
incl
and
sub
jge
repz
cmp
faddl
mov
inc
ja
scas
and
mov
stc
xchg
push
xchg
add
cmc
dec
mov
jg
xchg
and
shlb
sub
stc
push
add
push
scas
xchg
aas
daa
addr16
or
sbb
or
add
push
insb
lret
xchg
jge
or
add
jno
and
rorl
and
pop
push
add
das
lret
jp
int3
dec
dec
xor
add
pushf
lcall
mov
cmp
jmp
and
cmp
mov
add
sub
pop
mov
mov
pop
push
imul
imul
outsl
dec
push
add
pop
pop
paddq
mov
cmc
fucom
push
mov
add
imul
mov
jae
dec
out
and
mov
lcall
add
mov
int
fwait
mov
ret
mov
lods
repz
sub
dec
jb
jae
rclb
add
dec
sub
xchg
dec
sbb
add
add
rolb
iret
pop
add
add
jbe
loope
fdivs
add
sub
xor
mov
add
inc
popf
idivb
repz
repz
in
leave
pop
dec
filds
es
fmull
inc
add
pop
add
mov
xchg
jbe
outsl
stos
mov
and
movq
push
push
iret
sub
push
dec
jmp
mov
enter
and
dec
test
mov
dec
hlt
and
dec
insb
add
flds
push
add
fwait
dec
je
add
cmp
mov
sbb
aam
inc
in
pushf
and
imul
test
add
repz
arpl
call
repnz
push
test
xor
dec
iret
add
add
inc
rolb
jge
cmc
mov
stos
xlat
or
or
adc
mov
rcr
lcall
subb
jne
push
mov
rcrl
sub
jne
shl
pop
bound
das
notb
out
pop
add
adc
dec
or
cmp
enter
add
add
sub
add
xchg
adc
mov
pop
daa
dec
inc
and
mov
and
notb
repz
mov
les
xchg
add
mov
xchg
add
xor
xor
fsubrl
shrb
cli
shrl
cmp
scas
in
and
jl
add
sub
jbe
gs
add
inc
mov
mov
add
aaa
or
imul
push
roll
pop
mov
das
sbb
je
sti
push
bnd
popf
push
sub
mov
into
add
sbb
sti
shrb
movsb
sbb
out
and
add
push
mov
outsb
add
lcall
sub
xchg
insb
sub
pop
aam
scas
sbb
cmp
frstor
inc
lock
or
push
push
push
scas
inc
add
cmp
add
xchg
add
int
pop
sarb
addb
daa
add
mov
or
sbb
sbb
sbb
add
add
add
das
fmull
add
cwtl
shrb
lods
daa
sbb
add
push
mov
inc
scas
fdivrs
rcrl
add
adcl
stos
xchg
inc
int3
out
add
dec
jecxz
xchg
mov
imul
movsb
dec
jb
test
gs
jp
and
in
movsb
add
loopne
fsts
lret
cwtl
add
add
dec
or
pop
popa
inc
dec
add
add
in
and
xchg
scas
out
fnstenv
add
shrl
aaa
fsts
scas
arpl
xor
andl
sbb
add
xchg
aas
adc
jle
add
mov
xchg
daa
ja
add
out
and
out
inc
add
loopne
loop
adc
xor
cs
lock
rolb
int3
mov
add
inc
and
add
pop
cmp
jp
xchg
inc
add
popf
lret
sub
add
je
fidivl
dec
shll
pop
jmp
mov
add
mov
adc
cmpsb
push
dec
negb
jmp
mov
xchg
inc
xchg
nop
mov
imul
test
gs
repz
lea
fnstsw
int3
dec
insl
and
xchg
movsl
mov
jo
cs
out
add
inc
pop
sahf
mov
push
cmpsb
sbb
jne
xchg
test
add
adc
adc
movb
subl
jg
xor
xor
xor
add
push
push
dec
add
subb
fwait
add
pushf
push
xchg
inc
int
or
fnstcw
orb
xor
test
shrl
int
fsts
xchg
les
add
lahf
mov
mov
scas
lcall
add
fstpt
repnz
movb
aaa
and
fst
repnz
add
or
pop
or
inc
add
call
ret
mov
cmc
or
out
mov
mov
jmp
cld
inc
add
popa
xor
sbb
add
bound
mov
sbb
add
sub
popf
in
add
xor
rorl
ss
push
data16
out
stos
in
dec
mov
pop
subl
mov
jo
imul
push
cld
ficompl
cmp
pop
nop
aas
and
or
repnz
in
lock
inc
pop
sub
and
sbb
jae
movsl
test
and
and
xor
stos
and
push
movsl
in
outsl
push
jno
jle
mov
iret
stc
add
jg
imul
rcrb
add
xchg
pop
inc
and
popa
std
sbb
mov
jl
add
xor
sub
xor
sub
subb
loope
nop
gs
repnz
xor
lock
add
in
dec
lds
enter
mov
mov
subb
lret
jo
hlt
in
sarl
pushf
add
add
out
mov
pop
xchg
loop
and
adc
lock
add
fcmovbe
sbb
mov
jg
popa
push
add
add
inc
jb
fs
aad
stos
jno
out
dec
pop
std
jmp
pop
cmp
insl
mov
shlb
lds
mov
loop
gs
fcomip
dec
sub
xchg
lods
add
or
imul
mov
test
out
out
add
xor
add
repz
roll
cmp
xor
or
subl
icebp
xor
movsl
popa
add
pop
faddl
or
adc
push
push
push
mov
in
jbe
ds
or
adc
leave
adc
gs
mov
sahf
add
jns
dec
mov
lds
rorl
and
into
adc
xor
mov
inc
rcrl
dec
je
push
inc
mov
adc
roll
cbtw
addr16
pop
xor
fisttpl
addr16
mov
or
cli
imul
cltd
lcall
enter
test
leave
jns
cmpsl
movsl
mov
cld
jp
jo
lea
add
test
add
loope
int
sub
push
jae
or
jae
ja
sub
add
add
stos
bound
sbb
mov
roll
xchg
popf
adc
add
imul
add
jae
cmp
aas
decl
dec
push
push
add
icebp
jns
repz
adc
in
cltd
inc
popf
shll
scas
mov
jle
sub
dec
sti
and
jno
jle
add
jle
add
outsb
stos
mov
add
sub
add
in
mov
add
and
js
add
sbb
xor
lret
int
lock
xchg
xor
sub
xchg
aad
add
gs
sahf
subl
mov
sbb
lock
or
sub
dec
fmuls
adc
jb
add
mov
add
gs
push
cmc
and
add
clc
or
sbb
stc
xlat
sub
jb
xor
mov
fwait
mov
adcl
cmp
test
mov
clc
mov
sub
sbb
add
xchg
add
xor
lds
loop
mov
add
lds
add
lldt
scas
mov
jl
stc
decb
xor
add
sbb
fsubl
add
imul
ljmp
ret
scas
push
cmp
stos
add
scas
dec
bound
pop
and
jae
push
shll
sub
repnz
jl
out
mov
jmp
aam
cli
add
add
add
out
or
jo
out
inc
lds
or
add
push
rcrb
push
pop
sub
outsb
jmp
add
pop
pop
add
imull
or
or
add
add
add
or
mov
pop
fisubrl
popa
add
add
mov
lret
int
divb
xlat
outsb
push
mov
stc
cltd
lock
mov
stos
in
add
or
add
mov
decl
sub
int
pop
mov
pop
add
fnsave
xchg
adc
test
xor
testl
sahf
add
xor
push
enter
mov
add
shll
sbb
hlt
push
out
push
aam
test
jl
add
ss
sub
ret
in
add
call
mov
ja
fwait
mov
imul
popa
sbb
repz
pop
add
adc
inc
mov
cmp
roll
mov
jecxz
xchg
xchg
jae
mov
mov
shll
inc
add
add
gs
pushf
add
je
add
add
ret
nop
fcompl
cmp
and
ljmp
and
add
pop
push
add
negb
jge
add
and
xchg
sbb
xlat
add
cld
add
pop
and
xor
ret
andl
lret
add
xor
pop
jns
xchg
mov
add
add
movsl
movsl
mov
pop
jge
mov
add
jge
push
lea
pop
das
xor
sub
pop
cmpl
adc
add
bound
repz
popl
lock
les
xchg
cmp
in
pop
add
fs
lret
mov
ret
cmpsb
mov
mov
pop
sbb
inc
ss
ret
lea
add
stos
inc
ret
pop
jl
sub
sub
dec
arpl
pop
shrl
movl
jl
outsl
pop
inc
mov
loopne
push
pusha
imul
push
stos
pop
sahf
sub
add
jnp
jns
daa
push
cmp
pop
shll
dec
add
insb
xor
in
push
fnstcw
sub
jp
add
add
sbbl
pusha
pop
jo
cmp
add
mov
into
cs
add
int3
jne
jo
add
cmpsb
imul
fisttpll
lods
mov
rcrl
out
add
cs
pop
add
mov
push
ret
sub
repnz
test
js
dec
test
add
jle
add
mov
sbb
pop
mov
sti
je
jae
inc
and
mov
xchg
push
jge
mov
hlt
mov
pop
cmp
jno
mov
int3
lock
nop
add
and
sub
daa
push
nop
add
fdivs
dec
add
adc
cmp
xchg
sbb
inc
orb
mov
adc
jbe
je
add
arpl
imul
push
xchg
mov
pop
mov
jl
inc
and
xor
push
out
or
scas
data16
outsb
movsb
movsl
int3
mov
gs
inc
adc
add
push
jne
jns
clc
adcl
xor
popa
and
jae
incl
pop
add
push
fs
fistpll
cmpsl
pop
mov
inc
add
sbb
cli
cmp
or
push
cmc
xor
repnz
add
and
push
add
and
sub
xchg
in
xorb
add
inc
push
sub
push
sbb
movsl
iret
jecxz
jl
scas
shrb
mov
inc
add
mov
iret
lods
add
shll
mov
push
jno
cmp
mov
ljmp
dec
inc
inc
addb
movsb
fiadds
jg
arpl
inc
adc
arpl
or
cmc
out
add
ja
adc
and
add
aas
add
mov
icebp
cmp
filds
push
out
insl
cmp
xor
repnz
or
mov
scas
sub
xchg
nop
sub
pop
push
push
movl
mov
sub
and
jl
call
jb
jne
je
popa
aaa
mov
clc
sarb
loopne
mov
test
in
sbbl
mov
mov
loope
daa
js
ja
dec
xchg
fildl
int3
and
or
pop
in
fistpl
push
inc
push
adc
mov
add
jp
add
push
dec
inc
add
add
es
shl
pushf
addr16
scas
jp
insl
push
pop
mov
dec
inc
pop
and
test
cmp
scas
adc
sub
filds
jge
and
pop
lret
jle
sar
scas
push
jno
fidivrs
fildll
das
add
popa
xchg
mov
rcrl
jle
xchg
add
add
push
stos
push
lret
mov
lret
cmc
orb
mov
subl
add
add
sub
std
add
fisttps
subb
stc
in
mov
or
addb
mov
jp
scas
inc
fisttps
fmuls
loopne
mov
add
lea
je
xchg
loope
add
mov
cmp
call
incl
jae
inc
mov
pop
xor
shll
cmc
jnp
stc
adc
inc
xchg
cmpsl
stos
and
and
lahf
jnp
pop
roll
cmc
aam
inc
add
out
xlat
pop
test
test
mov
mul
arpl
dec
cli
add
rcll
cli
cmpb
out
add
add
add
sub
xor
mov
or
add
in
test
inc
mov
push
daa
aam
sti
std
loopne
movsl
jbe
and
or
lret
xchg
pop
out
movsb
les
andb
add
and
out
pop
loopne
repz
sarl
nop
test
fisubrs
cmpsl
enter
push
dec
sarb
sarl
fldl
sar
cs
jns
nop
fisttpll
jp
xchg
xor
mov
add
jl
jo
pop
fldl
add
js
or
gs
cltd
sarb
xchg
in
mov
xor
mov
add
jns
incl
push
or
add
mov
and
cmpsb
repz
xor
pop
cmpsl
sub
add
loop
lods
jne
push
add
xchg
add
das
pushf
bound
test
add
mov
xchg
push
sbb
inc
repz
adc
insb
add
dec
aaa
add
xor
add
jae
test
push
aad
aam
sarb
dec
cmp
mov
in
ret
scas
mov
or
xchg
test
clc
mov
add
aas
not
mov
ror
lea
cmp
jb
fstl
outsb
xchg
add
add
pushf
mov
mov
out
addb
movsb
mull
mov
cmp
stos
xchg
or
je
test
fwait
insl
out
call
ret
arpl
and
shl
dec
insl
add
mov
add
add
stos
pop
mov
cmp
push
cmp
mov
movl
into
and
lods
add
or
arpl
jmp
xor
dec
clc
add
xchg
inc
or
add
pushf
push
sub
movsb
test
daa
jp
cmp
sub
and
repnz
clc
push
xchg
add
imul
decb
xchg
cmp
xchg
out
add
lahf
cs
testl
sub
movsb
and
xchg
push
data16
jp
je
ljmp
add
adc
aad
push
mov
and
add
xlat
rcrb
movsl
test
pop
inc
sbb
fisubs
xchg
push
int
je
rolb
xchg
clc
push
pop
arpl
hlt
cmp
enter
xor
std
testl
xchg
lcall
xchg
cwtl
int
sub
push
mov
push
cmp
and
push
test
lds
movsl
add
push
fldenv
clc
fisubrl
or
fs
negl
jle
sub
add
and
mov
imul
push
ret
xor
add
ret
add
sub
les
in
lret
mov
push
xor
sbb
mov
add
mov
in
call
pushf
es
add
mov
inc
or
sbb
xor
aas
xlat
push
xchg
push
js
add
jecxz
adc
push
ljmp
fldenv
xchg
add
insl
push
inc
cmc
xor
clc
fldenv
or
mov
and
mov
aaa
pop
add
test
pop
sub
jae
cli
dec
dec
test
incl
sub
jno
test
mov
inc
jmp
fwait
ret
popf
inc
add
aam
roll
sub
lret
add
mov
add
push
js
mov
fidivrs
or
sub
repz
fwait
mov
add
and
xchg
scas
int
cmpsl
add
adc
xor
data16
push
or
sub
xchg
sbb
add
mov
xorl
lret
inc
insl
cmp
mov
add
add
fs
mov
jecxz
stos
mov
stos
xchg
fnsave
or
cwtl
out
xchg
mov
add
or
add
push
jecxz
mov
xlat
and
push
mov
cld
push
stc
pushf
aaa
movsl
add
inc
in
call
out
subb
out
adc
add
cmp
andb
inc
dec
add
je
fstpt
popl
lock
inc
out
xchg
in
addb
movb
jmp
mov
add
xchg
push
inc
push
fiaddl
xor
push
into
xor
xchg
jnp
outsb
add
pop
push
xor
jmp
out
push
add
mov
mov
imulb
mov
mov
push
loopne
gs
insb
je
dec
aas
mov
xor
lock
xchg
in
fwait
outsl
dec
pop
fadds
mov
add
push
cmp
iret
push
xlat
add
outsb
in
jge
push
adc
dec
push
dec
inc
fistpl
mov
cmp
add
xchg
xchg
push
jecxz
add
jno
mov
push
cwtl
cmpsb
sub
mov
jnp
imul
flds
test
daa
jne
xor
out
outsb
add
xlat
pop
inc
add
xchg
ljmp
jbe
in
popa
ds
sub
pop
test
jecxz
into
inc
inc
jno
xchg
mov
push
mov
insb
jle
js
jle
add
fstp
outsb
push
and
add
adc
nop
lret
cmp
mov
scas
sub
cmpsb
xchg
repnz
scas
inc
lahf
xor
push
sbb
cmc
das
fmull
add
movsb
in
xor
inc
mov
pop
add
mov
sub
out
loopne
add
fsubl
pop
mov
sti
mov
inc
add
sbb
and
and
rorl
mov
or
jo
jecxz
or
enter
xchg
xor
ftst
jp
jnp
jg
push
ficompl
test
adc
push
inc
add
jl
add
bound
jno
cmpsl
add
cmp
sbb
nop
stos
clc
cmp
jp
ja
add
cmc
or
jae
bound
enter
and
inc
loopne
lret
loope
push
lods
mov
jns
inc
mov
pop
sahf
and
in
testl
in
pop
dec
out
jl
add
fisubrl
or
or
add
adc
add
add
adc
mov
xchg
imul
jbe
dec
mov
xchg
push
arpl
rolb
inc
jns
sti
daa
push
incl
adc
hlt
cmp
mov
add
mov
xor
lods
je
mov
out
add
mov
cltd
jnp
leave
ds
lret
mov
add
adc
testb
xlat
data16
clc
jmp
sub
jno
cs
cmp
mov
mov
shl
xchg
jo
idiv
mov
lea
ret
xchg
jnp
and
cwtl
scas
mov
jae
lock
jae
sbb
add
pop
js
shr
mov
and
insl
add
push
adc
popf
xlat
adc
jne
imul
jnp
xor
add
repnz
add
int
and
mov
mov
iret
insb
mov
sbb
cltd
nop
xchg
outsb
stos
push
jle
bound
lods
or
das
scas
rep
fwait
xor
mov
hlt
xlat
movsl
insl
mov
pushf
out
sub
push
sbb
add
inc
jnp
pop
inc
mov
dec
filds
mov
dec
test
arpl
pop
test
sbb
push
mov
pop
xchg
jecxz
lods
mov
rol
popf
jb
fwait
add
add
cmp
cmpsb
rolb
xlat
push
pop
adc
add
inc
push
das
lcall
iret
imul
xchg
add
add
leave
mov
add
xor
addl
ds
ja
mov
mov
mov
cli
and
loopne
xchg
add
arpl
repz
enter
stos
imul
outsb
sub
xchg
ror
addb
inc
cmp
mov
pop
adc
lahf
push
add
je
roll
fisubl
leave
subb
xchg
push
inc
test
test
loopne
call
add
xchg
jbe
sldt
cmp
add
lea
cmp
add
lret
roll
mov
pop
pusha
xchg
test
mov
or
inc
push
jb
jl
in
jae
addr16
add
inc
add
mov
jle
add
gs
daa
cmp
cltd
sub
inc
jmp
cmp
pop
add
xchg
test
rcr
jg
hlt
jo
pop
add
xor
mov
jp
test
out
push
popf
mov
inc
sub
ret
xchg
and
out
or
xchg
cld
fisttps
adc
adc
jg
mov
icebp
add
pop
mov
xchg
lock
ja
pop
dec
subl
push
mov
je
push
mov
addl
rsm
jge
roll
sti
dec
cmp
push
scas
add
sbbb
cmp
imul
add
popl
cmpsb
add
push
rorl
into
dec
icebp
sub
pop
xchg
or
test
pop
leave
test
or
movsl
mov
in
pop
movl
test
ds
rcrl
lock
aam
icebp
icebp
xchg
cwtl
xchg
dec
sbb
cld
sub
push
add
pop
test
dec
xor
inc
jg
jg
or
addr16
int3
push
push
sub
mov
jecxz
inc
mov
lea
xor
adc
arpl
dec
fxsave
inc
jnp
pop
aad
popf
push
pop
int3
imul
add
mov
cmp
sub
mov
or
inc
xchg
push
push
stos
xchg
movsl
ss
push
cmp
aaa
jle
add
pop
push
mov
add
fs
jb
cwtl
and
mov
lds
testl
add
add
test
or
cld
pop
popf
add
fisubl
ja
cwtl
aas
int
sti
push
and
jl
mov
insb
xchg
push
add
sub
or
data16
incb
or
sub
in
sbb
jne
jb
and
mov
test
mov
ret
add
pop
jmp
dec
roll
xchg
sbb
int3
negl
icebp
add
dec
mov
imul
push
cmp
test
sbb
shll
sub
rorl
add
jl
dec
push
fiaddl
lcall
adcb
dec
mov
out
mov
xchg
test
dec
and
daa
add
cmp
add
pop
pop
jge
lods
mov
mov
cmp
cmpsl
cmp
inc
push
mov
sbb
add
add
dec
xchg
dec
and
mov
or
iret
iret
fmul
add
les
add
mov
in
mov
pusha
rolb
aas
ja
xchg
xor
ja
add
imul
scas
mov
mov
arpl
xchg
add
adc
inc
jg
sbb
add
cmp
in
movsb
shlb
test
add
add
jl
imul
in
xchg
push
mov
inc
les
push
dec
mov
cmp
xchg
mov
mov
dec
add
and
les
pushf
flds
rcr
popf
mov
andl
dec
mov
and
cs
insb
jo
sub
lret
add
mov
sbb
inc
and
orl
xchg
dec
xor
add
out
push
and
into
aas
add
daa
lcall
xor
xchg
xor
fwait
inc
popa
inc
add
in
add
fldl
gs
mov
xchg
dec
fwait
add
pop
adc
movsb
shr
mov
pop
cmp
hlt
les
dec
cmpsb
xchg
dec
hlt
lods
mov
inc
ss
sub
test
aas
pop
mov
add
cmp
test
lret
mov
lods
ja
popa
aad
aam
out
push
inc
addr16
xchg
aas
dec
dec
mov
cmp
add
loope
imul
sti
sbb
adc
xchg
shll
lret
mov
iret
pop
xchg
fcompl
push
pop
xor
add
add
pusha
int
push
add
jne
aad
add
test
shr
sbb
cmp
mov
mov
les
mov
mov
lods
addb
add
jno
sub
adc
cmp
aam
add
in
fs
jo
cwtl
arpl
add
sub
mov
mov
jnp
cmp
mov
and
xor
outsl
or
and
cwtl
loopne
add
hlt
or
cmp
jb
call
aad
add
add
sbb
mov
xlat
ja
mov
mov
mov
sbb
jge
mov
pop
sub
js
jp
mov
add
cmc
add
sub
cmpsl
das
push
mov
add
and
xchg
cli
add
mov
add
int3
add
cli
outsb
push
add
negl
cltd
add
jge
ljmp
insb
test
iret
roll
lds
mov
popa
adc
cld
icebp
adc
lods
test
dec
lds
pushl
mov
adc
cmp
mov
loop
cld
xor
xor
jns
sub
lea
mov
into
add
arpl
repz
das
fwait
xchg
enter
mov
data16
fisubrl
xchg
mov
push
and
push
hlt
or
xor
rcl
xorl
imul
push
jecxz
push
daa
adc
flds
scas
gs
repnz
adc
mov
add
mov
add
add
push
dec
jbe
cmpsb
mov
add
adcb
test
popf
push
adc
test
dec
cmpsl
lea
push
cmpsb
cmpsb
inc
ds
rorb
push
cmpsl
pushl
adc
add
xor
ficoml
movsb
mov
push
add
sub
sbb
les
data16
xor
cmp
dec
add
jmp
dec
sbb
mov
fucomi
add
add
popf
add
cmp
mov
add
cmpsb
dec
cmc
sbb
push
dec
push
push
push
inc
insb
or
pop
jle
sbb
outsb
mov
int
xlat
fwait
add
popa
bound
xchg
or
js
hlt
outsl
scas
aam
add
xlat
enter
add
and
pop
xchg
push
xchg
es
out
in
leave
inc
add
rolb
cmpsl
add
mov
xchg
xchg
jnp
mov
add
dec
push
mov
test
add
lods
xor
jb
jno
pop
push
stos
lods
sbb
cmp
outsb
push
jg
jecxz
add
int
xor
cmp
clc
sbb
jo
push
cltd
inc
enter
jnp
cmp
popf
in
ljmp
test
or
add
inc
or
je
ret
jge
adc
loopne
fildll
and
inc
mov
add
add
imul
stos
stos
fsts
out
add
xchg
lods
add
test
outsl
add
dec
lret
scas
filds
xor
hlt
fwait
xchg
mov
add
add
outsb
lret
sbb
or
aaa
stos
xchg
xor
or
popf
fldenv
lcall
add
cwtl
mov
xchg
and
enter
test
testl
push
dec
pop
rorl
add
add
add
sbb
and
scas
test
in
jmp
popw
scas
push
xor
pop
rorb
sbb
test
mov
mov
pop
out
addr16
add
es
dec
add
dec
jl
add
mov
push
add
dec
xor
sub
inc
mov
mov
jmp
add
xor
add
fxch
mov
outsl
xlat
lcall
push
icebp
movsl
push
test
stos
add
or
iret
or
push
and
add
add
dec
inc
xchg
add
loopne
sti
leave
pop
negl
add
das
idivl
lods
jno
dec
lods
mov
pushl
fldt
mov
cmp
jne
cmpsb
lcall
imul
push
and
xor
pop
bound
or
xchg
les
pop
xor
test
add
mov
dec
sub
xchg
test
dec
test
fists
mov
icebp
insb
cmp
or
fsubs
add
out
ret
mov
push
push
flds
mov
jae,pn
cmp
pop
hlt
cmpl
mov
orl
aad
add
inc
lea
adc
xbegin
add
scas
add
jnp
pop
in
add
jns
add
lahf
mov
inc
in
test
mov
js
add
mov
sub
mov
sub
lods
sub
add
loopne
out
leave
sbb
movsl
add
ret
std
adc
cli
push
mov
jns
test
add
dec
movsb
or
scas
aas
ret
mov
sahf
mov
fsubrp
insb
std
jns
out
adc
lahf
or
dec
shll
add
xor
negl
dec
ljmp
adc
aam
test
in
ss
xor
mov
inc
fwait
add
xchg
int3
xor
jb
flds
mov
ret
add
addb
mov
iret
add
pop
dec
add
imul
push
cltd
inc
mov
push
movsb
sti
nop
dec
cmp
cmp
add
push
or
add
xor
sub
icebp
add
pop
mov
add
add
loop
mov
add
push
cmp
or
xchg
push
pop
stos
pop
int
sbb
inc
insl
repz
shlb
fsts
test
inc
add
mov
popa
cmp
enter
ja
push
cmp
mov
add
xchg
add
cmp
add
cmc
les
in
mov
icebp
and
xchg
jl
test
cmp
cli
roll
cmc
jo
and
jl
std
xchg
pusha
cmp
rorl
shlb
ds
cld
add
or
and
push
repz
mov
push
ficoms
call
pop
pop
sub
adc
add
sbb
add
xchg
out
add
xor
mov
dec
and
pop
push
imul
into
shlb
jl
in
sbb
out
pop
out
add
inc
push
add
sahf
push
add
add
test
and
adc
inc
int
mov
cmp
pop
cmp
in
mov
sarb
add
inc
xor
add
sbb
pushf
movsl
js
out
imul
add
ret
into
into
add
cmc
addr16
pop
ficoml
mov
leave
jns
in
in
xchg
mov
push
add
cmp
mov
shll
and
gs
iret
sub
push
pop
subb
popa
test
fisubrl
stos
adc
pop
rclb
cmc
lea
je
or
jle
lock
int
rcll
js
gs
add
aad
xchg
dec
sbb
into
stos
pop
insb
sahf
aas
lods
mov
adc
push
mov
push
mov
jge
lds
dec
add
pop
loop
lds
fcmovbe
xchg
data16
adc
jecxz
clc
scas
add
add
push
add
dec
sub
outsb
jno
aam
push
outsb
lcall
dec
aaa
fidivs
pop
mov
push
add
mov
sbbl
xchg
test
divl
sbb
pop
add
outsl
cwtl
push
push
add
mov
addr16
sbb
out
mov
movsl
dec
add
adcl
xchg
sarl
inc
test
lret
mov
jo
add
pminsw
lcall
scas
outsl
inc
sbbb
mov
jp
stos
jle
jp
subb
add
add
or
adcl
sub
movb
add
or
mov
lahf
xor
push
sub
ret
ret
adc
mov
mov
mov
pop
pop
inc
cmp
scas
push
scas
lods
dec
push
dec
add
pushf
insb
pop
adc
jbe
sub
add
insb
jge
dec
mul
pop
add
popa
aaa
add
mov
jno
add
imul
mov
daa
aaa
dec
adc
les
in
jbe
out
pop
jbe
or
xor
inc
out
sub
inc
add
ljmp
add
and
xor
push
jne
xor
mov
pop
mov
hlt
xor
jnp
pushf
push
add
jp
add
xor
dec
les
cmp
mov
mov
xor
aam
xor
pop
dec
cmp
ljmp
das
iret
fdivrl
inc
ljmp
or
push
xchg
sbb
adc
jle
add
add
or
adc
test
stos
or
lcall
imul
add
cmpsb
dec
jb
adc
add
sub
fmull
movsl
outsb
pop
add
cmpb
incb
xchg
lret
out
cmp
xchg
daa
pop
sbb
daa
xchg
cmpsl
cmpsl
jecxz
inc
pusha
add
aas
cmp
les
inc
ds
sbb
inc
cmp
add
fsubrs
mov
mov
push
sbb
and
pop
es
and
stc
in
push
cs
pop
cli
lret
nop
mov
sub
std
stos
aas
add
add
add
mov
add
enter
and
sub
cmp
sbb
cmp
add
mov
mov
dec
inc
push
movsb
inc
xor
sub
fildl
mov
add
aaa
jne
adc
movsb
rorb
jno
ret
frstor
and
mov
ljmp
adc
add
movl
dec
lock
outsl
adc
jge
ss
mov
xchg
mov
adc
xor
and
pop
verw
fs
xlat
hlt
movsl
adcb
ficoml
add
in
pop
lcall
sub
sbb
mov
insb
stos
cwtl
mov
popf
lds
sbb
xchg
push
jnp
insb
push
inc
or
add
int
cwtl
notb
aad
testb
cmpb
int
mov
mov
add
mov
xchg
mov
xlat
xlat
add
push
pop
jle
sbb
std
inc
adc
addl
test
out
ficoml
dec
loopne
xor
out
daa
int3
mov
pop
sbbl
popf
cmp
sbb
scas
sbb
pop
sub
call
pop
jl
scas
sub
mov
je
sbb
loopne
and
sub
mov
out
scas
sbb
sub
add
dec
in
jmp
and
add
sub
lods
or
push
lcall
addr16
movsb
enter
and
std
inc
mov
aas
sbb
repz
xor
testb
xchg
mov
add
pushf
pop
push
add
nop
cmpsl
out
add
mov
mov
dec
insl
xor
jl
ret
mov
cs
cmp
dec
ja
test
mov
cmp
push
shrl
adc
add
push
push
cmp
push
xchg
cmp
jge
ret
lods
sbb
or
add
ficompl
add
fisttps
pop
rolb
roll
adc
arpl
gs
add
aas
nop
push
int
or
sbb
dec
out
loop
inc
cmp
nop
cmpsl
out
aas
les
out
fsubr
pop
addb
stos
add
cmpb
aas
adcl
mov
loop
loope
cs
rolb
inc
sub
add
add
mov
add
negl
imul
call
mov
xchg
add
xor
add
or
sub
push
notl
jmp
inc
xlat
les
pop
and
leave
jb
jo
xchg
xchg
sbb
popa
fwait
push
mov
sbb
cmp
jle
mov
mov
cmpsb
mov
fimuls
outsb
cmpsb
pop
mov
ret
gs
sub
jne
mov
filds
out
arpl
mov
incb
jg
mov
dec
cmc
incb
mov
and
lods
repnz
adc
pop
xor
xchg
jne
sbb
pop
add
imul
add
push
xlat
inc
aad
incl
repnz
in
add
jecxz
jne
xchg
add
xorb
scas
add
mov
jecxz
aam
loope
xor
idiv
mov
mov
fimull
add
xor
negl
pop
pop
addr16
adc
add
xchg
xchg
fbld
push
add
in
pop
dec
leave
push
push
push
clc
add
orl
inc
dec
mov
aaa
add
mov
mov
pop
push
sbb
aaa
cs
lods
cmpsl
cmp
sub
xchg
add
jmp
in
pop
je
fadds
xor
or
lea
xor
add
repnz
incb
sbb
add
dec
jp
sub
pop
add
mov
add
add
dec
add
mov
or
add
sub
sbb
add
out
leave
xchg
sbb
loope
jge
pop
cmpsl
push
loop
jmp
je
pop
push
add
add
sbb
rolb
xchg
stc
jne
jmp
or
add
fnstcw
cmp
sarb
cmp
mov
stos
loope
inc
ja
add
fisttpll
enter
mov
add
or
add
lods
mov
mov
mov
xchg
out
les
cmp
scas
mov
jl
lods
dec
pop
push
imul
xchg
add
or
pushf
sub
add
xchg
xchg
add
mov
push
push
jnp
sub
push
clc
iret
xchg
sahf
add
leave
add
scas
add
pop
add
xchg
leave
add
add
adc
aam
roll
cmpsl
jl
cmpsb
repz
pusha
movl
jecxz
jecxz
movsb
pusha
lahf
add
sbb
clc
imul
push
insl
add
adc
or
and
jl
sbb
jge
add
cmpl
test
les
ret
add
adc
dec
push
add
loopne
out
add
pop
in
insl
xor
jbe
addb
cmpsb
jae
lods
repz
sbb
dec
cld
add
inc
lods
xor
int
enter
add
pop
mov
xchg
aad
add
imul
dec
adc
int
dec
cltd
icebp
push
cmp
jne
add
mov
dec
sub
jl
rolb
out
int
or
add
mov
addb
stc
pop
mov
xchg
sbb
pop
add
pop
add
xor
add
add
pop
loope
data16
add
adc
mov
out
enter
sbb
sbb
sarl
cmc
add
dec
jg
repnz
lcall
mov
scas
add
mov
in
fmuls
inc
adc
xor
imul
lret
pop
add
push
sbb
push
add
dec
lea
bound
std
jb
add
and
daa
add
push
xchg
in
repnz
adc
dec
test
add
insl
xor
adc
or
in
xor
cmpsl
arpl
sub
add
adc
inc
jp
fisubrl
sbb
test
xchg
lea
out
inc
loope
push
out
add
xchg
outsb
push
add
jae
mov
shll
add
repz
loope
add
es
add
add
add
jmp
and
inc
add
inc
ret
jecxz
fildl
dec
inc
add
and
push
out
pop
push
inc
fcoms
add
arpl
mov
sbb
mov
mov
hlt
and
adc
lcall
pop
das
xor
pusha
add
add
divl
push
pop
inc
sbb
test
jbe
lods
outsb
aas
push
sub
rol
dec
push
jg
dec
xchg
jle
es
inc
jp
inc
mov
icebp
stc
jge
frndint
cltd
mov
add
jns
test
pop
bound
mov
cmpsb
sbb
push
leave
shll
std
push
add
mov
loope
push
add
xor
jne
dec
mov
orb
add
push
add
add
hlt
lcall
outsl
mov
push
xchg
xchg
xchg
and
dec
mov
add
mulb
xchg
loop
push
enter
inc
jl
mov
add
sti
pop
mov
or
pop
add
das
push
leave
add
mov
sbb
add
in
add
rcl
rcrl
mov
in
movsl
sub
imul
mov
sbb
adc
xchg
sub
faddl
xor
les
scas
adc
cmp
add
fs
push
mov
jecxz
lcall
pop
and
inc
lahf
jg
out
push
or
cs
cmp
mov
pop
add
mov
mov
addl
and
adc
out
add
fdivrs
incb
or
adc
add
gs
mov
mov
lret
inc
out
add
push
pushf
cwtl
add
add
mov
xorl
in
add
mov
add
xor
lock
mov
add
shl
aaa
cld
lods
add
push
mov
popf
sub
inc
dec
add
repnz
mov
push
mov
push
add
js
xchg
lcall
add
or
mov
or
scas
hlt
push
mov
jl
in
add
lods
push
adc
inc
das
cmp
dec
pop
mov
sbb
mov
sub
mov
aas
and
test
das
add
popa
jle
mov
add
sub
dec
dec
leave
xor
out
and
outsl
cld
fiadds
adc
xchg
dec
xor
add
in
fwait
sub
outsl
fbstp
add
add
sbb
push
add
xor
pop
test
pop
stos
jnp
add
add
cmp
enter
js
dec
jbe
jae
sbb
loope
bound
stos
loopne
in
xlat
xor
ss
cmp
mov
xchg
ja
popf
xor
mov
cwtl
add
pushf
push
adc
jnp
sub
inc
add
cmc
in
int
push
test
rolb
in
pop
sbb
les
mov
add
sbb
adc
sbb
add
les
add
jne
popf
add
cmp
fsubr
cmp
add
or
add
xchg
test
add
lret
xchg
data16
pop
xchg
pop
fadds
movsl
dec
sub
mov
stos
pop
xchg
mov
or
xlat
fs
add
je
jecxz
in
imul
push
fnstsw
dec
int
and
lds
ficoms
add
outsl
add
xor
add
lret
add
pop
loope
jmp
decb
add
adc
mov
inc
fdivrl
mov
movhps
aam
lcall
mov
dec
jo
dec
cmp
insl
and
mov
hlt
mov
sbb
cmpsb
mov
out
jbe
mov
hlt
xchg
ror
pop
jbe
rcrl
dec
adc
xchg
clc
sbb
pop
add
add
out
sub
add
mov
daa
ds
aam
jo,pt
sbb
dec
orb
sub
xchg
inc
hlt
dec
sub
xchg
insl
js
ljmp
sub
sbb
mov
clc
cmp
sbb
aam
jl
shr
out
fistpll
into
orb
xor
mov
out
xor
xor
mov
pop
sarb
sub
movsl
je
pop
add
andl
xchg
test
mov
pop
cmpsb
push
xor
insb
and
adc
push
jge
add
add
roll
bndstx
or
dec
inc
push
test
add
add
hlt
sub
cmp
lea
loopne
fidivrs
outsb
pop
nop
add
mov
add
call
cmp
add
xchg
xchg
xlat
xlat
movsl
push
int3
push
xlat
dec
call
outsb
add
pop
es
das
push
adc
and
jae
test
js
mov
or
in
pushf
pusha
mov
movsb
xor
jnp
pop
push
adc
ds
lret
gs
push
sub
sub
dec
xchg
xchg
xchg
cmp
add
xchg
pop
das
in
pop
enter
add
push
dec
add
outsb
mov
aaa
sub
roll
fisubrl
xor
mov
lea
xchg
pop
test
push
sub
push
and
cmp
nop
mov
mov
rol
nop
add
xchg
fs
ja
out
sbb
loop
in
jb
and
call
mov
xor
xchg
pop
xchg
xchg
jg
sti
push
jae
dec
fmul
mov
in
ljmp
add
jmp
outsb
clc
scas
and
ss
xchg
xorb
data16
shll
add
add
push
movb
add
xchg
or
nop
xchg
dec
test
add
out
mov
fs
xlat
std
bound
into
pop
fsubp
jg
jl
push
jo
stos
into
inc
loopne
or
mov
cmp
in
stc
lret
data16
mov
adc
lock
cltd
add
xchg
out
mov
insl
xor
cmpsl
inc
ja
push
and
movsl
dec
inc
loop
sub
roll
mov
xor
stc
cmp
or
dec
add
xor
xchg
rclb
push
add
int3
mov
cmp
jl
enter
push
sub
add
js
lock
add
add
push
imul
sbb
cmp
je
es
lea
add
lret
clc
xor
jo
add
into
push
jae
sub
insb
imul
jmp
jbe
test
adc
clc
add
dec
add
cmc
movl
xlat
shlb
outsb
in
add
jbe
dec
xchg
das
jns
jo
in
xchg
cs
add
inc
or
and
add
xchg
dec
adc
incl
test
cmpsb
add
test
jns
jecxz
in
mov
loopne
sbb
clc
stos
and
add
scas
pop
jb
mov
mov
inc
add
cmp
popa
in
or
mov
rcl
in
pop
shl
pop
fisubl
testb
leave
fs
mov
add
pop
add
mov
and
add
push
add
xchg
into
xor
xchg
je
add
stos
mov
je
push
add
push
mov
sahf
mov
mov
ret
inc
cltd
xor
mov
add
int
ror
add
xchg
xor
or
adc
addb
fcoms
jne
add
jg
inc
icebp
add
imul
adc
sbb
movsb
popf
and
lcall
inc
dec
adc
add
xchg
xchg
je
mov
test
subb
sbb
add
inc
and
mul
lret
aaa
sbb
sbb
test
xchg
adc
rolb
sub
mov
outsl
dec
fidivrl
insl
sahf
cwtl
add
mov
or
cmp
daa
outsl
pop
dec
pop
dec
nop
repz
addb
mov
sti
pusha
add
add
pop
pop
pop
adc
pop
fmull
push
shll
pop
jle
aaa
mov
imul
mov
aas
out
bound
mov
mov
or
cmpsl
add
mov
xchg
das
testb
push
mov
add
in
testl
add
inc
mov
add
push
adc
sub
xor
aas
jecxz
add
cmp
adc
rorb
lcall
rcll
mov
fnstcw
popf
shlb
jb
add
fldl
ss
loope
loop
add
out
pop
sub
fldl
or
or
dec
subl
fists
jae
mov
push
inc
and
cli
add
lock
jle
fwait
fwait
add
jmp
arpl
add
dec
xchg
sub
fisttpl
dec
xor
cmp
cltd
adc
lds
leave
and
ret
in
add
int3
xor
sub
mov
jns
push
add
popa
xchg
ljmp
mov
jns
xor
cwtl
incb
shll
push
xor
inc
push
mov
jnp
sub
adc
jb
add
add
sar
or
lods
jnp
pusha
hlt
push
aas
aaa
xchg
rolb
fxch
add
sbb
xor
add
pop
pushf
add
out
add
fwait
pushf
lds
lret
std
das
std
stos
inc
add
ret
in
popf
lds
jecxz
pand
and
xchg
and
add
push
movsb
jg
xor
cmp
leave
loopne
int3
add
sub
add
add
push
dec
sbb
aas
jle
and
adc
pop
inc
mov
jg
add
je
xchg
dec
dec
imul
testl
roll
hlt
cmpsl
push
jg
push
mov
lcall
dec
std
jle
dec
sub
push
dec
sub
pusha
aaa
xchg
cli
add
idivl
or
icebp
add
xchg
xchg
xchg
cs
fnstsw
ficoml
or
pushf
sub
xchg
inc
xlat
mov
mov
jbe
es
add
add
mov
leave
cmp
sahf
jmp
lods
push
cmp
xor
or
push
stc
les
fiadds
cltd
ficompl
sbb
cmp
mov
fwait
dec
add
bound
out
add
push
sbb
popa
or
lret
mov
imul
inc
sarl
movsl
nop
mov
add
jnp
clc
adc
xchg
adcb
outsb
jno
popf
popa
mov
orl
fadd
add
scas
fldcw
dec
add
test
mov
and
loop
clc
sub
jmp
push
sub
adc
mov
add
ret
pop
add
jg
push
sti
int3
xchg
mov
xor
sti
push
pop
insb
sub
cmp
and
jp
mov
roll
jl
push
sarb
xor
sbb
xchg
mov
cmc
data16
pop
mov
out
push
add
add
add
fists
add
mov
lods
or
stos
cmc
loopne
jae
lcall
popa
jmp
or
mov
xchg
lds
shlb
add
imul
scas
add
adc
cmc
in
push
sub
xchg
jne
lock
add
pop
subl
jnp
cmp
xchg
push
cwtl
ja
loop
loopne
mov
mov
aad
dec
scas
sbb
mov
shlb
sbb
rolb
and
jp
push
cs
outsl
push
imul
nop
add
ficoml
jo
pop
pop
scas
xchg
add
mov
pop
cmpsl
inc
mov
jmp
push
add
subb
push
in
out
lret
out
andb
adc
or
add
sbbl
ss
movsl
push
pop
mov
inc
insl
addr16
decl
add
or
add
scas
aad
jge
push
pop
fisubrs
pop
add
lret
fldenv
add
scas
add
mov
add
xlat
aad
int3
fwait
add
and
es
fld
iret
add
pushf
xor
add
xchg
adc
lods
jae,pn
test
pop
mov
scas
pop
aad
xor
and
scas
outsl
add
fsubs
cltd
lea
jge
jns,pt
inc
out
iret
cmc
arpl
inc
jb
jne
sti
sahf
sub
cmp
imul
pop
out
ret
cmp
mov
xor
xchg
pop
clc
xor
pop
das
pop
push
in
lret
fsubrp
push
cmc
call
loopne
int3
mov
cmp
jmp
pop
in
imul
movsb
lret
into
mov
repz
add
mov
add
jbe
push
mov
pushf
add
jno
dec
mov
add
dec
xchg
lea
aas
add
add
xchg
dec
in
pusha
mov
and
jns
push
imul
pushf
aaa
mov
push
mov
or
add
jle
incl
pop
push
inc
clc
sbb
add
cmpl
cmc
test
and
les
add
sahf
ljmp
out
sbb
mov
push
popa
jle
notl
sarb
imul
sbb
arpl
jg
data16
xor
je
dec
jo
hlt
sbb
pop
loope
or
ret
add
inc
inc
lret
inc
int3
popf
ret
mov
mov
pop
aas
pop
ret
shrb
xchg
out
repz
es
popf
or
out
icebp
sbb
pop
mov
fldl
cltd
add
inc
lret
and
loopne
jnp
aas
das
mov
add
cmp
lcall
or
dec
push
xchg
add
push
push
and
add
in
in
sub
add
jbe
out
and
dec
icebp
adcl
xchg
add
mov
loope
jle
mov
dec
lea
xor
int
lea
mov
xchg
adc
lret
sbb
leave
xor
into
and
test
add
xor
dec
mov
add
adc
mov
sub
test
sub
add
daa
insb
cmp
add
and
jecxz
test
in
mov
xor
jp,pt
sbb
sbb
outsb
push
add
lock
add
xor
cld
add
mov
xor
jp
add
add
mov
lds
lock
lds
scas
mov
fsubs
dec
divl
and
xchg
lods
and
cs
imul
fs
add
aad
jne
sub
dec
lea
pop
dec
jb
add
shll
jle
into
in
add
mov
into
pop
jnp
inc
sahf
cmp
mov
pop
lods
add
fwait
add
or
shll
push
jno
clc
sbb
addl
lcall
loop
iret
andl
iret
push
sbb
add
pop
out
xor
add
add
lret
or
and
dec
lahf
ss
xchg
jg
pop
or
add
outsl
in
out
push
pop
les
jge
and
jmp
aam
fiadds
push
adc
mov
add
clc
add
add
add
xor
stos
out
repz
out
mov
xor
sub
aas
xchg
loop
test
inc
push
out
in
and
lods
loope
inc
cmp
add
shll
push
incb
add
add
fs
pop
mov
dec
cli
imul
jl
jge
dec
out
jmp
add
push
push
insb
shrl
add
ror
ret
mov
add
les
mov
add
in
sbb
jae
add
mov
sub
add
mov
addw
dec
cmp
push
sbb
fcmovu
test
cmp
cmp
add
sarb
mov
and
std
cs
jne
into
sbb
cmpsb
dec
add
xor
or
les
cmp
pop
jp
add
mov
repnz
leave
mov
iret
push
cmp
addr16
aas
dec
mov
xlat
adc
cmp
jecxz
jmp
aaa
inc
cli
adc
push
xchg
bound
xor
jl
add
jg
sahf
jg
add
sbb
orl
sub
sbb
or
jge
add
out
es
dec
sbb
sbb
jo
and
fcompl
pop
sbb
adc
mov
and
add
sbb
sub
inc
or
enter
inc
lcall
add
je
lods
js
add
loopne
xchg
add
jae
mov
js
jnp
gs
jge
or
ljmp
iret
adc
dec
xchg
mov
das
pop
sbb
rcrb
pop
notb
xor
cs
jne
hlt
xor
les
push
pusha
ret
pusha
add
rolb
lods
out
add
pop
roll
cltd
dec
inc
cs
jge
push
cs
fdivrl
ror
repnz
add
xchg
push
stos
rcll
xchg
stc
mov
divb
cwtl
pop
mov
imul
dec
cmp
or
cld
imul
int
xlat
sbb
stos
pop
les
add
repnz
int3
jmp
pushf
daa
and
jmp
jae
fcoml
mov
sub
and
pop
arpl
daa
shr
adc
popa
cltd
orb
or
sbb
clc
push
lret
xor
jmp
or
cmp
and
add
dec
push
add
add
xlat
xlat
mov
add
or
pop
mov
inc
lret
neg
jle
mull
sarl
les
mov
xchg
imul
mov
mov
addr16
ljmp
jle
addr16
cmp
adc
setl
mov
in
sub
popf
cmp
pop
sub
imul
stos
add
jb
adc
out
add
add
imul
dec
or
add
add
cmp
mov
das
pop
push
lds
jb
cmp
lods
insl
repnz
xchg
mov
ret
mov
mov
and
daa
mov
rcrl
out
or
mov
mov
cli
sub
imul
xchg
test
mov
push
jle
cmp
cmp
jno
out
les
push
push
mov
pop
inc
sbb
jbe
mov
or
jne
pusha
dec
popa
xchg
jg
inc
sarl
xor
out
dec
add
xchg
stc
fldenv
jecxz
pop
call
pop
xor
sbb
inc
sub
mov
sub
mov
jg
inc
fcmovne
add
mov
jp
out
mov
push
add
ret
push
push
outsb
imul
aaa
aaa
sbb
push
loopne
and
dec
mov
imul
stos
add
or
add
sub
fistps
mov
das
or
repnz
inc
add
cmpsb
sbb
pop
xchg
cld
jns
sub
or
stc
jmp
add
or
mov
jno
das
add
enter
dec
sub
test
add
loopne
sub
push
pop
mov
add
movsb
sub
aas
les
mov
scas
push
jmp
out
in
test
cmpsl
int
pop
outsl
call
or
push
test
add
dec
mov
call
push
inc
out
sub
or
lret
das
mov
pushf
cs
arpl
aam
adc
add
xchg
lods
in
pushf
mov
int3
das
add
roll
add
sarl
ret
repz
mov
add
mov
cmp
test
add
addb
lcall
jbe
add
sub
sti
or
add
and
cwtl
and
inc
and
in
test
ret
in
add
scas
gs
stc
pop
sarb
fadds
mov
jp
adc
popf
push
stos
add
add
mov
sub
mov
aaa
cmp
jae
inc
add
pop
ljmp
lret
add
pop
std
cmp
add
ss
cmpsb
add
imul
pop
and
orl
repnz
ret
lahf
add
sbb
add
pusha
out
aad
xor
lret
jmp
imul
add
and
and
cld
add
pop
mov
aam
inc
add
cmp
clc
shrl
push
add
cmp
and
fisttpl
addl
jbe
out
sub
and
xor
imul
iret
xor
mov
or
inc
test
xchg
xor
into
push
mov
jle
add
cmpsb
aas
pop
mov
ret
add
add
pop
add
mov
cmp
ltr
fsts
or
inc
mov
and
repz
add
jge
lock
add
xchg
push
into
adc
dec
cmpsl
push
sbb
daa
ds
mov
adc
loopne
add
movsb
jp
mov
inc
inc
cmp
xor
lahf
mov
jp
xor
add
lret
add
mov
dec
add
mov
jnp
cmp
add
dec
pop
and
cwtl
mov
mov
pop
aam
sbbb
addr16
inc
and
xchg
pop
sbb
shr
cmp
inc
dec
jnp
inc
add
data16
pop
es
lods
add
jne
sbb
and
pop
add
cmp
lret
dec
inc
push
popl
fldl2t
cmp
daa
sbb
shlb
sbb
enter
adc
ret
pop
lock
imull
lock
add
rorl
xor
add
sbb
adcb
adc
fimuls
pop
call
test
xor
adc
dec
push
insl
jno
inc
dec
adc
fcomi
xor
push
xchg
adc
jge
imul
fimuls
lods
lret
dec
lahf
lods
dec
pop
jnp
add
adc
rcll
xchg
add
popf
cwtl
add
movsl
cmp
mov
xor
add
add
add
jo
dec
jmp
sbb
add
mov
mov
mov
outsb
cmc
scas
push
aad
jno
dec
imul
sarl
mov
jne
cmp
leave
flds
sub
je
and
stos
je
pop
mov
sbb
mov
pushf
and
repz
jo
mov
lds
les
fisubrl
dec
dec
ret
push
add
fdivs
dec
and
rolb
xchg
mov
add
inc
inc
nop
aam
lods
dec
popf
xchg
add
or
cmc
out
dec
das
add
cmp
inc
sbb
push
inc
pop
jo
arpl
cmpsl
test
dec
pop
sti
dec
fisttps
lcall
fistl
enter
adc
addr16
add
fwait
pop
jmp
sub
stos
add
adc
sbb
add
test
jge
scas
scas
jl
add
sarb
gs
pop
cwtl
add
dec
add
push
sub
fstpt
push
jecxz
add
fidivrl
mov
cmp
lcall
out
mov
add
mov
enter
aaa
shll
add
lret
cmp
lret
movsb
nop
out
fcmovne
or
and
inc
mov
push
out
loope
pop
fnstsw
add
xor
pop
mov
jb
sub
out
jmp
ja
sub
add
aaa
movsl
data16
push
pop
rol
add
dec
movb
lahf
pop
cli
cld
cmp
mov
es
add
add
or
incl
outsl
fs
daa
jb
adc
arpl
or
pop
add
pop
enter
xor
roll
imul
inc
jo
es
mov
aam
inc
cmp
ror
aam
pop
sbb
inc
lods
fiaddl
add
sbb
out
add
or
sub
sub
ss
pop
loope
add
jns
or
add
add
xchg
and
test
and
cld
test
dec
cmp
test
add
push
out
xor
or
push
js
mov
les
hlt
sbb
sub
ja
loop
js
test
mov
inc
les
test
add
test
sub
addr16
jp
jmp
jbe
sbb
in
jp
pop
ja
pop
rolb
dec
push
jle
cmp
dec
and
aas
mov
xchg
push
xor
je
xchg
add
add
add
add
cmp
mov
xchg
lods
stos
adc
jecxz
add
and
xchg
push
sbb
out
mov
mov
cmp
add
pop
pusha
and
inc
sub
js
add
leave
je
add
stc
mov
inc
pop
imul
add
cmp
lret
sbb
jne
add
fsubl
fsubrl
add
cmp
add
outsb
xor
stc
xchg
lock
dec
jle
sbb
fsub
xor
adc
adc
jmp
ficoms
sub
inc
add
ret
add
xor
lods
adcb
jecxz
mov
aaa
sub
imul
sub
shll
push
push
lea
cmp
jp
popf
add
scas
gs
jge
cmp
in
shr
jae
pop
add
iret
add
movsb
add
hlt
or
stc
add
cmp
into
out
faddl
or
lea
ljmp
jno
cs
dec
pop
mov
jg
mov
ret
adc
je
popa
add
mov
add
jo
and
or
inc
sbb
scas
ret
adc
add
add
mov
cmp
std
sub
out
dec
stc
stos
mov
add
mov
sub
xor
je
add
or
jne
or
test
xor
add
fnsave
aam
mov
push
pop
dec
add
hlt
clc
aaa
imul
enter
jne
mov
pop
int
pushf
mov
add
jecxz
add
push
mov
cmpsl
je
into
sbb
loop
sbb
xor
nop
lock
jecxz
sub
mov
mov
xlat
add
inc
sbb
loope
loope
mov
dec
push
jecxz
insb
lods
das
mov
sub
xlat
orl
in
add
test
es
decl
mov
jb
adc
mov
lahf
lods
in
add
stos
add
and
stc
sbb
jle
push
or
mov
out
jmp
test
dec
mov
in
call
xlat
dec
cmpsl
icebp
sbb
add
cmp
mov
in
daa
pop
add
loop
lods
repz
and
add
pusha
add
push
push
inc
aas
insb
cltd
add
enter
xchg
out
pop
es
mov
mov
add
mov
mov
add
add
jns
xchg
adc
sub
rorl
add
push
pop
flds
sbb
jmp
testl
pushf
je
mov
sbb
insb
cltd
insb
sub
and
mov
sti
ja
ds
das
xor
test
pop
add
sub
movsl
cmp
jb
lods
sub
sbb
add
js
arpl
inc
and
sub
stos
scas
addr16
sub
add
inc
jp,pn
outsb
add
scas
call
scas
xor
sub
jo
jmp
int3
sbb
mov
into
dec
mov
cli
cmp
aaa
add
add
dec
aad
add
sbb
incb
mov
mov
xor
rcrb
push
and
add
add
add
xor
dec
add
xchg
rorl
and
push
call
cwtl
mov
adc
lret
or
ds
shll
sub
cmp
add
jg
mov
mov
int
inc
dec
xor
dec
pop
mov
pop
push
add
cli
sub
mov
decl
frndint
sbb
lret
push
test
dec
pop
ja
call
sahf
out
add
fistps
jle
out
add
xchg
add
lcall
sub
add
push
mov
and
jns
dec
add
je
add
mov
mov
pusha
adc
shl
clc
dec
js
push
arpl
mov
jno
add
dec
fwait
pop
add
cltd
in
je
add
fs
add
jae
add
cmpsb
lock
fsubr
add
sub
cmp
mov
pop
in
add
sbb
xor
dec
mov
and
xor
sub
mov
addr16
imul
mov
cmpsl
mov
add
jne
incl
lahf
sbb
scas
popa
sub
je
mov
xchg
add
inc
push
std
add
clc
inc
add
call
ret
adc
arpl
or
mov
repz
add
int3
add
add
fwait
add
arpl
mov
pop
cwtl
sub
jg
cmp
mov
clc
ret
add
jl
adc
inc
imul
out
add
lret
add
cmp
or
fidivl
ret
shr
dec
xchg
adc
fnstsw
test
dec
sub
ja
sarl
add
leave
fnstsw
pop
pop
fwait
and
sbb
js
jecxz
fmull
pop
sbb
cmpsb
sub
out
pop
push
ret
pushf
imul
add
lea
dec
fs
sub
clc
sti
lods
or
push
xor
mov
xchg
ss
call
insb
js,pt
and
add
std
jecxz
dec
pop
add
stos
imull
subb
add
mov
or
outsb
arpl
pusha
push
leave
and
or
and
jbe
sti
icebp
push
adc
dec
add
xchg
xchg
add
adc
cltd
add
push
xchg
jp
jo
jns
and
aad
add
pop
mov
jmp
pop
je
and
ret
addb
dec
imul
add
inc
pop
add
xor
inc
add
xchg
mull
mov
mov
xor
lcall
mov
cmp
ret
icebp
lret
jno
xchg
sub
mov
add
das
sbb
dec
js
nop
test
rclb
mov
sub
in
adc
or
jle
addr16
shl
pop
add
add
ja
xchg
cmp
lods
mov
or
mov
inc
push
pop
and
mov
push
outsb
mov
inc
iret
int3
adc
add
or
popw
arpl
add
rcll
cmp
out
push
add
add
xchg
in
inc
and
sbb
xchg
jo
add
iret
dec
test
cmc
pusha
adc
cmp
lods
or
add
or
das
es
sbb
imul
pushf
rol
add
sahf
cmp
push
push
pop
sub
arpl
push
add
add
adc
out
xchg
fstps
xchg
jg
inc
and
push
or
xlat
jnp
mov
and
mov
mov
jge
inc
loope
jnp
inc
add
cmpsb
sub
add
push
js
inc
add
jb
ret
pop
add
add
sub
pop
inc
sub
add
xchg
repnz
add
scas
xchg
push
mov
add
sbb
xchg
ds
lods
std
add
fstpl
loopne
add
xchg
loop
es
out
outsb
stc
inc
repnz
pop
mov
clc
movsl
cmp
inc
adc
mov
add
lods
dec
fbstp
movl
add
js
scas
stos
enter
imul
outsb
andb
add
sub
push
add
lahf
jecxz
or
add
arpl
push
add
fs
mov
cmpsl
add
pop
cmp
loope
push
arpl
dec
leave
daa
int
pop
add
mov
pop
sub
imul
repnz
jge
sub
adc
mov
jae
scas
add
pop
mov
mov
std
cmp
cli
add
js
sub
push
repnz
cmc
lcall
into
sbb
mov
aaa
sbb
pop
add
push
out
dec
add
test
xor
and
dec
pusha
push
fdivr
xchg
add
add
sbb
lret
mov
or
mov
lcall
add
aaa
inc
add
test
add
movsl
push
cmp
jb
add
addl
pop
xor
inc
jae
pop
cmp
pop
sahf
sbb
mov
add
and
mov
cs
xchg
jnp
mov
out
add
add
mov
jg
push
icebp
add
das
lret
add
mov
filds
xchg
es
and
mov
sub
and
gs
xor
add
stos
jle
mov
bound
ret
mov
xchg
pop
dec
rolb
imul
pusha
push
add
cmp
div
stos
dec
inc
xor
adc
aad
sahf
or
stc
inc
mov
aad
sub
repz
repnz
xchg
mov
ffreep
jae
push
test
jmp
add
add
loop
add
arpl
lods
adc
dec
xor
adc
cmc
mov
push
inc
arpl
and
xchg
lret
mov
pop
aad
sbb
mov
push
add
add
jno
retw
add
jle
daa
in
aas
or
decb
int
sbb
lods
je
mov
adc
xor
add
jo
xor
out
subb
fs
nop
sbb
shl
imul
cli
mov
mov
stos
xchg
stos
inc
jp
inc
push
outsb
mov
add
pusha
int
add
add
push
cs
out
mov
xchg
adc
call
out
lods
or
jns
pop
add
add
pop
pop
push
add
jnp
addl
fidivs
cli
out
imul
rcrl
pop
xchg
pop
sbb
jge
xchg
xor
adc
je
sbb
aad
add
dec
je
add
jnp
inc
add
inc
jno
add
ficoml
lret
stc
icebp
add
cs
cmp
cwtl
mov
jne
movsb
mov
repnz
movsb
fiaddl
sub
clc
icebp
inc
xor
sub
add
mov
and
hlt
iret
mov
arpl
ret
or
mov
add
and
push
sub
scas
sbb
icebp
add
not
sbb
or
pushf
push
shl
push
pop
pop
pop
sub
fwait
sub
cmp
mov
aam
pop
fcomps
in
mov
enter
pop
pop
sahf
pop
das
xor
add
mov
lcall
or
xchg
cmpsl
xor
ja
add
clc
or
jnp
cmpsb
and
add
mov
push
stc
ja
imul
push
je
outsl
add
jg
cmp
insb
dec
mov
add
add
xchg
rolb
fs
lret
xchg
and
mov
inc
sub
test
fcmovne
push
popfw
jbe
cwtl
sahf
aam
nop
lret
dec
dec
add
jp
xlat
inc
cmpsl
jecxz
in
leave
xor
xor
inc
add
roll
jecxz
insl
mov
leave
pop
adc
mov
add
add
arpl
cmp
sbb
cmc
add
or
stos
leave
mov
testl
add
lea
in
popf
jnp
push
and
adc
mov
shl
andb
mov
test
xchg
ds
lret
cmc
adc
shll
jl
xor
fdivrs
xor
pop
add
mov
and
add
add
adc
jge
add
and
sub
imul
or
jnp
sbb
inc
sbb
xor
das
cli
add
mov
pop
jmp
push
cmp
jnp
add
test
fwait
jns
test
insb
or
add
mov
cmp
mov
add
rep
fstpl
mov
test
xchg
dec
push
mov
push
add
and
push
mov
jle
or
inc
out
xor
insb
lds
insb
inc
fmulp
adc
xchg
movsl
dec
fidivrs
cltd
mov
or
sub
fisttpll
inc
lods
pop
jbe
mov
lret
shl
scas
pop
or
pop
dec
sub
mov
push
mov
imul
mov
test
scas
das
dec
cmpsl
add
inc
ss
sar
add
sbb
testb
cmp
inc
push
sub
out
adc
movsb
aam
cmp
sbb
cwtl
mov
jne
pop
xor
cmpsl
pop
mov
dec
movsl
add
inc
add
mov
push
hlt
mov
test
adc
push
jne
test
sahf
aam
add
add
add
aas
jmp
fcoms
pop
add
fistpl
outsb
lds
ret
mov
push
dec
test
cwtl
pop
inc
dec
mov
imull
and
fdivs
cmp
pop
adc
pushf
mov
xor
jge,pt
mov
pop
add
les
mov
add
movsb
push
arpl
sti
sahf
icebp
or
int
hlt
js
ret
ror
enter
clc
add
dec
sbb
inc
in
mov
bound
iret
test
cmp
jnp
inc
xor
jne
sbb
add
add
cwtl
mov
push
jge
mov
leave
xlat
stc
sbb
jns
jle
fldenv
lahf
movsl
push
add
or
adc
push
mov
sub
mov
xor
cmpsb
inc
mov
js
jb
add
add
insb
add
rclb
add
loopne
push
les
xchg
pop
xlat
sub
inc
fildll
mov
das
inc
fisubrl
into
and
dec
test
shrd
out
ds
add
and
dec
add
inc
pop
inc
int
adc
idivb
popl
xchg
in
mov
dec
add
outsb
xor
dec
push
cltd
and
cmp
mov
dec
outsl
mov
sbbl
into
cmp
jl
jmp
pop
add
inc
jmp
xor
lcall
aas
mov
xchg
ret
int
add
add
sub
add
jb
jle
cmp
imul
stos
ljmp
add
xor
xchg
xchg
dec
std
adc
loope
adc
or
push
adc
push
sti
mov
adc
xor
and
and
out
add
jne
sti
and
adc
mov
jae
add
cmp
insl
add
and
cmp
sub
aas
inc
or
mov
sbb
or
add
pop
ret
xchg
into
in
movsl
jg
and
scas
imul
mov
adc
mov
aam
sub
xchg
xchg
nop
add
cmpsb
fcmovu
jo
cmp
andl
xorb
cmp
mov
mov
cmp
test
add
push
loopne
call
test
std
mov
adc
fsubl
mov
fcmovb
arpl
pop
fnsave
add
test
add
ss
pop
add
pop
mov
xchg
pop
stos
dec
ficoms
lret
js
sub
dec
jp
mov
add
cmp
movb
xchg
movsb
adc
in
add
into
outsl
xchg
jecxz
daa
mov
cli
rcrl
mov
hlt
mov
mov
std
xchg
and
xchg
stos
mov
jbe
aas
add
std
sub
fisubs
cmc
and
lock
movsb
add
sub
cmp
xchg
jno
dec
xchg
les
sub
ret
pop
mov
add
mov
and
mov
mov
nop
add
xchg
xor
stc
mov
stc
jo
or
lock
mov
ret
in
insl
cwtl
adc
add
icebp
add
add
int
xchg
mov
add
inc
into
push
lret
bnd
add
add
fcom
int
mov
inc
mov
loop
mov
add
pop
aas
ljmp
push
push
mov
jns
rolb
mov
pop
idivb
popa
mov
inc
shll
xlat
aas
add
xchg
sbb
movsl
mov
cld
cmpsl
daa
xor
movsl
movsl
shrb
and
out
stos
mov
lods
inc
or
daa
mov
push
idivl
adc
mov
mov
cmc
xchg
xchg
imul
xchg
pop
outsb
scas
add
push
adc
enter
in
jo
mov
outsl
mov
sbb
or
push
test
mov
jno
pop
or
cmp
movsb
push
out
mov
jge
add
jb,pt
movb
xor
dec
mov
cmpl
addb
hlt
sub
pinsrw
dec
adc
push
jo
add
xchg
test
add
cli
mov
mov
add
gs
add
add
movsl
fdivrs
jae
pop
insb
loop
jnp
sbb
xchg
add
cmpb
fldl
fwait
inc
add
outsl
mov
mov
add
loopne
inc
adc
xor
push
and
add
icebp
cmpsb
fidivrs
arpl
test
pop
xor
jbe
xor
jmp
pop
je
or
add
pusha
decb
bound
je
cmp
out
xchg
cmp
addl
dec
cld
dec
add
stc
add
addr16
add
add
add
xchg
inc
adc
add
mov
xor
adc
push
pop
lods
or
pop
push
insb
jno
sbb
movl
outsl
scas
sbb
mov
push
out
pop
or
sub
fildl
sub
cmpsb
pop
test
cmp
fldcw
cli
mov
cmp
inc
pcmpeqb
mov
iret
add
push
lds
xchg
hlt
cli
aas
push
shlb
xchg
into
cmpsl
es
jl
mov
ds
movsb
and
sahf
sbb
add
gs
mov
icebp
stos
shrb
pop
lods
mov
and
gs
dec
cmp
mov
xor
mov
mov
out
sti
test
ds
or
mov
das
inc
dec
xor
sub
les
out
add
movl
mov
jle
add
icebp
mov
pop
push
cld
sub
aas
lret
sahf
sub
cwtl
add
fs
push
and
outsl
xchg
sub
add
xor
cmp
sub
out
fdivrl
in
pop
daa
inc
jo
pop
sbb
mov
mov
pop
xor
add
cmp
scas
je
in
dec
jno
dec
cmp
mov
jb
add
inc
sbb
cwtl
pop
imull
inc
outsl
add
rcrb
cmp
dec
jg
sbb
pop
notl
popa
into
mov
lds
add
sub
push
push
sub
dec
jno
roll
data16
adc
add
mov
cmp
nop
mov
jle
or
aaa
or
je
ret
xchg
pop
fidivs
ret
in
push
push
mov
cmpb
dec
pop
iret
add
add
add
sbb
movsl
test
push
lret
and
mov
in
nop
add
sbb
xchg
fisttpl
add
xor
add
and
mov
dec
loopne
into
cwtl
add
inc
push
jmp
mov
add
jo
frstor
add
call
mov
call
mov
jnp
cmpl
div
adc
cmp
add
cwtl
adcl
insl
jae
aad
fsubs
mov
jg
xor
imul
adc
roll
mov
sarb
xchg
cltd
add
das
push
add
adc
add
xchg
xchg
push
add
sahf
sbb
add
jecxz
jne
sub
into
loope
add
add
test
jle
scas
fnstsw
ja
mov
pop
rorl
sub
jo
fsubs
fldl
fs
adc
int3
mov
pusha
cmp
insb
stos
mov
flds
inc
add
add
add
sbb
pop
mov
mov
xlat
enter
cmpl
lcall
arpl
push
mov
mov
jne,pt
inc
adc
stc
add
fucom
stos
imul
out
or
xor
xchg
add
dec
mov
add
push
out
dec
test
add
aam
pop
adc
movl
ds
mov
test
mov
fadds
mov
jecxz
jmp
cmc
out
jno
call
push
push
lds
add
jle
push
jmp
icebp
inc
and
sbb
xor
xor
mov
ss
filds
outsl
xchg
add
sahf
outsl
imul
mov
mov
jae
and
sbb
jns
dec
adc
pop
psrld
test
jb
add
push
jg
into
insb
inc
hlt
mov
ja
daa
push
add
popa
dec
gs
xchg
aas
nop
xchg
add
sbb
add
dec
add
add
sbbl
inc
add
add
es
xchg
sub
push
xor
out
dec
push
xchg
add
in
add
sub
clc
add
push
add
or
xor
mov
in
push
shrl
mov
add
or
mov
test
in
mov
outsl
sahf
loopne
mov
jb
sub
repz
pop
add
negl
andl
mov
xor
xor
lds
push
sti
push
or
push
shr
outsb
add
insb
or
add
add
daa
movsb
dec
jo
lods
subl
sbb
mov
in
sub
imul
loop
mov
idivb
dec
mov
push
or
sbb
test
and
cmp
fdivp
jo
in
addl
out
stos
fidivl
dec
push
mov
rolb
cmp
mov
and
dec
add
mov
jbe
in
dec
andl
fistpll
mov
dec
xor
mov
sbb
pop
add
cmp
or
out
notb
and
or
cmp
jl
xchg
dec
add
int
clc
sbb
xor
adcl
pop
add
dec
sti
in
add
movsl
repnz
add
ret
xor
push
mov
sahf
cmp
scas
cmp
xchg
popf
jle
lods
fldcw
add
mov
add
xchg
stos
rclb
add
sbbl
inc
lock
scas
push
lods
add
add
fistpll
lock
mov
add
mov
aam
jo
pop
xchg
adc
mov
xorl
repz
mov
lods
scas
add
xchg
jecxz
sub
mov
pop
sub
test
mov
mov
adc
jno
add
call
xchg
lret
push
lods
xor
sbb
push
daa
cmp
push
add
add
xchg
pushf
add
add
add
mov
push
in
add
add
repnz
hlt
mov
mov
mov
sahf
outsb
mov
pop
pop
add
xor
out
popa
add
lcall
enter
xchg
mov
ja
dec
push
cmpsl
pop
les
daa
fabs
add
ja
addl
shll
mov
cld
push
pop
repz
ficompl
add
aaa
stos
jne
roll
xchg
or
lret
dec
je
rclb
enter
xor
aad
cmp
adc
cmp
mov
and
xor
add
mov
ret
push
fbstp
sub
pop
cmc
mov
je
pop
push
cwtl
mov
sbb
inc
lret
cmc
add
sarl
jbe
cmp
cmpsl
aaa
fs
inc
fdivrs
cmp
cmp
lcall
jno
sbb
add
add
add
mov
lods
pop
scas
cmpsb
les
repnz
out
add
push
push
adc
mov
jmp
pop
inc
adc
mov
call
pushf
mov
mov
jo
jge
mov
dec
and
insl
dec
popa
jg
test
mov
out
cmp
add
add
mov
sub
lret
lods
iret
mov
mov
add
cltd
jae
pop
cwtl
inc
jbe
or
iret
sahf
in
jmp
inc
sbb
cltd
or
mov
lret
pop
inc
xchg
dec
fidivl
adc
xchg
dec
inc
pop
add
push
xor
add
mov
adcb
add
cmp
add
addr16
loopne
sub
jno
add
std
enter
lcall
js
or
ret
add
lret
inc
add
imul
lds
adc
loop
add
mov
xor
int
movsb
int
lcall
test
add
stos
test
js
mov
jb
icebp
wrmsr
mov
ljmp
lret
mov
and
push
dec
add
xor
push
mov
add
orl
std
in
add
xor
roll
clc
add
mov
mov
push
inc
pop
adc
jb
add
mov
mov
add
notl
loopne
pushf
add
mov
shlb
std
jg
jo
add
ja
adc
fistl
add
add
icebp
test
pop
js
pop
add
call
and
mov
ss
movsl
pop
jmp
inc
sbb
push
stos
mov
add
rolb
add
movsl
dec
push
test
add
pop
lret
mov
movsb
mov
fldl
fildll
adc
rcl
ljmp
cmp
mov
enter
add
xchg
mov
out
je
gs
in
xor
xchg
out
add
pop
push
sbb
add
ret
add
and
cmp
clc
sti
nop
mov
xor
sahf
jae
jg
loop
leave
add
mov
add
aad
es
push
ja
and
add
sub
mov
cmp
sbbl
adc
int3
mov
mov
jo
add
dec
push
xor
sbb
add
fmul
jns
xchg
mov
sub
jno
in
sbb
push
mov
adc
xchg
mov
xlat
ja
into
dec
sub
ljmp
sbb
dec
das
cmp
inc
sub
sbbl
out
cwtl
push
sbb
jmp
sbb
lods
hlt
or
sub
push
dec
or
mov
fiadds
dec
xchg
jl
sbb
bound
add
add
psubsb
inc
cmp
out
divl
mov
les
add
fidivrl
aam
mov
fsts
popa
adc
mov
mov
cli
add
cmpsl
mov
and
stos
bound
scas
push
pop
jae
sbb
insb
mov
stos
push
xlat
ret
xchg
js
lds
jb
pop
add
adc
add
popf
and
outsb
cmp
add
add
fsubrp
scas
cmc
push
pop
mov
add
adc
outsb
loop
mov
outsb
ljmp
fs
add
add
add
add
in
cmp
cmp
addl
mov
sub
test
lcall
inc
filds
push
cmpsl
loope
push
repz
push
lock
sub
pop
filds
addr16
aaa
test
int3
sbbb
stos
in
lret
aam
add
mov
ss
xchg
ret
add
outsb
jnp
mov
lret
mov
ljmp
add
and
std
add
call
rolb
add
div
cmp
fs
add
stos
or
push
adc
mov
and
or
jg
mov
adc
pop
out
add
cmpsl
xchg
gs
sbb
add
and
sbb
pmaddwd
outsb
push
adc
shlb
mov
lods
or
imul
push
add
jle
hlt
lret
pop
cld
loop
pop
test
je
ss
add
lcall
out
add
cmp
iret
imul
and
inc
test
push
popa
add
lea
addl
arpl
ja
pop
jb
push
pop
clc
and
add
cmp
pop
cmp
out
nop
cmp
add
repnz
push
jno
nop
sbb
pop
mov
jbe
add
mov
dec
jmp
jbe
or
xchg
sbb
adc
flds
loop
scas
hlt
lods
sub
leave
mov
and
jno
lret
sbb
orb
or
outsl
clc
xlat
sub
inc
dec
es
push
xchg
xchg
into
inc
jmp
add
mov
xchg
iret
pop
popa
jle
aad
cs
test
repnz
loop
add
sub
add
loopne
xlat
cmpsl
pop
and
les
outsl
movl
push
dec
add
push
add
push
daa
xchg
add
enter
jno
sti
test
fmul
mov
js
es
sbb
ja
add
andb
icebp
or
xchg
insl
ss
add
xchg
aam
scas
shll
fistl
jbe
dec
sbb
sbb
push
mul
sub
es
and
or
xor
push
repz
mov
adc
out
add
std
dec
jne
adc
or
mov
cmp
cwtl
data16
sbb
jnp
fsubrl
std
test
and
add
fnstsw
call
cwtl
adc
cmp
and
push
xchg
dec
std
or
jb
inc
add
ja
lcall
inc
sub
adc
add
add
push
mov
cs
add
lea
lahf
xor
add
add
mov
fildll
push
mov
jns
add
std
cltd
imul
jb
aad
int
sub
cs
mov
add
mov
and
pop
and
sub
add
jmp
test
xchg
in
out
mov
fadds
push
sbb
jnp
inc
add
add
enter
fwait
add
outsl
sbb
add
clc
icebp
adc
ljmp
fsubs
in
cmc
add
mov
add
push
maskmovq
negl
fdiv
pop
movb
ret
push
add
roll
pop
filds
and
shrl
jae
xchg
sub
or
fsubrp
push
mov
repnz
in
or
shlb
mov
add
arpl
jns
loop
enter
ss
add
loope
add
sbb
dec
add
aam
popl
jnp
mov
ss
cs
lret
fwait
xchg
ss
cmpsl
add
or
fstps
leave
clc
mov
rorl
mov
bound
lods
or
inc
mov
add
addb
stos
jmp
fisttps
pop
pop
shlb
adc
mov
pushf
inc
shlb
mov
in
inc
fdivp
jp
aam
xchg
rclb
iret
push
ret
ljmp
imul
imul
jle
mov
lret
js
inc
add
cmp
loop
push
add
push
mov
inc
add
add
jge
filds
dec
sbb
cmp
push
lods
mov
xchg
dec
or
inc
inc
dec
jmp
loope
dec
lods
js
xchg
mov
adc
pop
push
mov
xor
sarl
xor
pop
add
cmpsb
pop
pop
add
aam
popf
push
stos
dec
pop
xchg
jl
fmull
fdivs
sub
add
shll
adc
adc
cmpl
add
add
sti
add
js
xchg
add
fbstp
cmc
mov
repnz
int3
rolb
test
jecxz
sub
xor
incl
cmovb
stc
addr16
jae
mov
add
into
cmc
test
mov
stos
rolb
add
adc
adc
or
sti
rcrb
add
repz
pop
sti
xor
mov
or
add
call
cmpsl
dec
xchg
ja
cmc
popa
arpl
bnd
adc
sbb
outsb
push
push
lods
shl
aaa
mov
out
pop
nop
add
mov
add
stos
mov
loopne
push
mov
add
adcl
add
xchg
lahf
add
sbb
push
add
adc
or
and
xor
rcrb
out
jnp
cmc
push
stos
add
ret
in
daa
add
mov
push
mov
xchg
repz
add
add
scas
push
add
xor
repnz
lods
add
dec
jg
loopne
inc
sbb
cmp
cld
enter
xor
sub
pop
push
push
lahf
les
ja
adc
loopne
scas
sub
inc
push
add
pushf
xlat
stc
add
out
add
pop
loopne
mov
dec
insl
das
add
inc
mov
mov
fldl
nop
imul
and
xor
fildll
pop
add
mov
or
ja
aas
add
adc
push
rcrl
mov
add
sub
pop
filds
rclb
pop
cmp
add
mov
insb
fcmovne
lock
cltd
sbb
cli
pusha
push
xor
and
fildl
fldt
and
add
jbe
sbb
mov
mov
bound
add
ret
iret
pushf
stc
xlat
fsubrl
add
int3
add
scas
les
xchg
xchg
jmp
jmp
sbbb
cwtl
dec
push
adc
clc
in
clc
add
inc
push
addl
ficomps
pop
sbb
jns
adc
lock
mov
adc
add
add
add
stos
lods
mov
aam
movsb
mov
jb
add
sahf
add
adc
push
fmulp
int
shl
and
cmc
or
les
mov
push
cmp
adc
insb
pop
jnp
sbb
loop
sub
out
fidivl
pop
adc
pop
scas
fldl
es
adc
add
cmc
push
jb
add
pop
jns
dec
add
add
push
cmp
pop
mov
popf
add
repnz
mov
pop
sbb
daa
outsl
sub
push
add
or
pop
int3
add
xchg
xor
jmp
xor
pop
cmp
arpl
xor
stc
dec
cmpl
stos
dec
or
add
add
out
ds
adc
faddl
add
or
sub
pusha
jge
add
movsl
movl
into
test
sub
popf
fldt
pop
popf
lock
inc
into
std
cld
sti
push
test
stos
xchg
mov
loop
jmp
into
jnp
inc
cld
call
repz
add
push
negl
ljmp
inc
add
mov
sbb
outsb
jl
int
into
cmpsb
insb
dec
shrb
xorl
mov
out
pop
or
mov
jne
or
xor
cwtl
shl
inc
rcrb
add
or
inc
fildll
or
sbb
add
out
and
inc
cltd
or
and
sbb
nop
add
cmp
xlat
sub
or
ficomps
mov
mov
add
sti
adc
daa
mov
lock
and
sbb
rcrb
xor
adc
jle
add
addr16
cmp
daa
add
xlat
cmp
lods
outsb
orl
fisubrl
test
clc
add
adcl
pop
jecxz
popa
add
sahf
add
dec
jmp
add
xchg
pop
in
lds
add
push
data16
fwait
push
mov
nop
mov
or
or
cmp
les
mov
sub
mov
bound
sub
xchg
aas
add
inc
lahf
adc
das
add
dec
adc
in
fwait
aaa
test
cmp
js
movsl
lret
rorb
cmpsb
in
adc
sbb
cmp
xchg
sbb
lds
fcoml
shlb
pop
sub
xor
mov
enter
mov
scas
scas
enter
insl
loop
xchg
lahf
out
pop
fmull
jmp
add
insl
sub
and
mov
aad
lods
cs
jbe
sbb
mov
push
in
add
lcall
inc
dec
adc
cli
fnstenv
jge
dec
inc
add
mov
xchg
add
xor
lret
inc
mov
dec
fcmovne
xchg
mov
add
sub
roll
call
add
stc
mov
pop
jmp
lods
aas
popf
lcall
mov
cld
add
add
adc
push
cli
add
mov
cwtl
mov
pop
add
mov
cmp
dec
addb
add
out
push
cmpsb
add
arpl
cmp
jns
add
add
adc
lret
pop
adc
in
mov
mov
or
mov
movsl
jle
mov
test
ret
js
aaa
lret
faddl
popf
pusha
push
pushf
dec
mov
cli
pop
xchg
aaa
mov
pop
add
scas
adc
rcll
push
imul
insb
aam
add
idivb
cmp
in
add
aaa
mov
cmp
push
test
pop
dec
daa
add
add
sub
pop
mov
add
inc
call
push
add
sbb
adcl
push
imul
or
icebp
sub
sbb
push
test
cmpsb
outsb
fsts
add
add
add
xchg
add
add
imul
pop
and
or
pop
lock
xchg
sti
add
cltd
testl
fadd
and
fstl
xchg
inc
addb
and
add
int
movsl
rcr
mov
stos
lock
add
mov
pop
frstor
dec
push
add
push
popa
fsubs
add
es
pop
popa
arpl
add
xchg
jne
adc
xchg
mov
les
add
add
outsl
lods
in
inc
xchg
mov
js
push
add
clc
mov
or
outsb
in
jl
popf
out
inc
sbb
ror
mov
xlat
in
xchg
jge
adcb
insb
adc
dec
xlat
jnp
add
jle
cmpsl
add
leave
arpl
aas
add
add
xlat
inc
mov
push
cltd
jmp
notl
jmp
xchg
add
sti
mov
add
cmp
cmp
add
ja
pushf
sub
imul
mov
add
fcompl
add
push
xor
test
jecxz
add
or
push
cmp
sub
lds
test
mov
xchg
cwtl
pop
xchg
cmc
mov
leave
add
leave
adc
lahf
cmp
nop
scas
lea
and
mulb
mov
jbe
inc
fs
pushf
add
adcl
sub
inc
lods
hlt
add
divb
outsb
dec
test
call
push
repz
push
or
stos
xchg
aas
adc
iret
jo
add
xchg
adc
popf
cmp
pop
add
add
and
xor
add
sub
mov
das
mov
and
mov
add
sub
pop
add
test
ret
dec
daa
inc
sub
out
cmp
push
fstpl
or
add
pop
xlat
add
dec
dec
nop
cld
imull
scas
sub
test
add
push
lcall
or
xchg
cmp
jne
dec
push
push
imul
iret
sub
xchg
mov
cmp
pop
xor
dec
push
loope
adc
repz
adc
xlat
into
out
imul
std
push
push
add
stos
dec
out
test
out
fdivrp
pop
xor
push
mov
vmovd
cltd
add
mov
xchg
add
lock
mov
dec
push
mov
cld
push
ja
sbb
add
sbb
cmp
push
int3
push
test
test
insb
pop
fildl
jecxz
push
lahf
xchg
scas
add
fsubs
scas
jmp
add
xchg
sub
loop
sub
enter
mov
aam
push
sub
dec
or
xchg
cltd
jne
xchg
add
mov
add
or
pushf
mov
jne
push
clc
out
push
movl
or
pop
add
jmp
fistl
lret
ret
push
jae
xchg
movsb
pop
adc
add
icebp
imul
cld
jl
aaa
mov
add
lahf
jnp
jb
add
mov
out
ja
arpl
sub
fldcw
mov
dec
push
bound
pusha
mov
jb
pop
sub
jo
fildl
ret
xor
cmpsb
flds
shlb
jnp
imul
jl
je
stos
dec
repnz
in
cltd
mov
add
add
add
arpl
mov
add
mov
cmpsl
cmp
clc
lods
fcmovu
push
inc
addl
dec
fcomps
dec
out
mov
decb
je
add
rorb
cwtl
pop
adc
mov
add
sbb
add
sbb
lods
add
call
rolb
sbb
sbb
sbb
xor
clc
and
mov
scas
stos
push
jnp
add
out
mov
data16
sti
or
jg
shrl
sbb
lret
mov
outsb
dec
mov
add
loopne
ret
jmp
in
cmp
movsb
lcall
jno
add
nop
pop
ljmp
xchg
add
add
dec
mov
inc
fwait
sub
ficoms
sar
inc
cmpb
pop
loopne
mov
les
xor
jle
movsb
cmp
sub
inc
ret
add
add
or
mov
repnz
and
lea
aaa
cmp
sub
pushf
aas
pop
test
sbb
add
jnp
add
es
outsl
sbbl
add
add
cmp
loope
xchg
ljmp
or
jnp
add
sysenter
push
xchg
mov
pop
loopne
insl
movsl
add
push
or
test
scas
decl
adc
cmpsb
xchg
push
mov
aam
sbb
or
mov
lcall
add
out
das
jge
mov
add
push
mov
add
movsb
movsl
faddl
inc
add
add
dec
mov
aaa
out
cltd
imul
dec
add
mov
jae
loope
and
js
and
mov
push
mov
pop
cmp
pop
xor
lahf
out
push
mov
sbbl
bound
sub
xchg
push
dec
popa
add
mov
push
xor
add
xor
mov
cmp
sbb
sbb
add
pop
add
mov
xor
add
pop
sub
cld
les
inc
or
or
mov
gs
enter
data16
xchg
repnz
add
inc
add
jns
dec
scas
lret
in
mov
rolb
mov
sbb
dec
jnp
ljmp
sbb
lods
push
imul
pop
adc
or
stos
add
pop
int3
add
push
fwait
and
in
xchg
dec
jo
xor
and
pop
cwtl
dec
sub
jmp
cmp
jle
insl
mov
xor
fs
or
fisubrs
dec
push
mov
imul
inc
subb
inc
jle
xchg
scas
out
incb
or
ss
xchg
sub
mov
test
pop
pop
stos
push
inc
add
inc
pushf
daa
or
xor
add
add
jmp
int
pop
das
cli
mov
jnp
xchg
jne
mov
dec
jge
in
mov
call
ds
cwtl
adc
mov
arpl
pop
pop
sarb
xchg
in
jl
daa
iret
pop
sarb
test
add
adc
push
dec
call
das
mov
add
dec
pop
adcl
out
mov
ucomiss
add
add
cmp
add
out
sub
cmp
movsl
add
and
pop
add
mov
add
add
ss
cltd
mov
test
fmuls
add
push
add
roll
aas
addb
fcmovne
cs
push
fsubrl
add
lods
xor
push
pop
push
mov
push
dec
sbb
enter
stos
rcll
enter
in
xchg
andb
mov
xchg
add
ss
xor
add
cmp
add
fldl
popa
sub
and
cmp
push
pop
inc
pop
divb
cld
inc
loop
pop
xchg
dec
ja
xor
add
lcall
test
adc
scas
adc
mov
sbb
cli
xchg
in
add
mov
push
push
sub
jecxz
mov
sub
es
mov
and
add
in
mov
mov
test
popf
add
mov
fstp
fadds
lock
adc
lret
js
inc
repnz
add
jecxz
add
lock
pop
add
xchg
mov
add
idivb
push
je
add
arpl
cmp
call
rcll
add
push
movsl
push
sbb
sub
leave
dec
add
xchg
inc
repz
imul
pop
or
outsl
adc
mov
inc
add
nop
das
mov
cmp
sub
cmp
cmp
and
mov
or
adc
mov
add
popf
push
push
mov
mov
mov
add
popf
cmp
out
jle
add
add
xchg
mov
loop
rolb
sub
cmp
pusha
adc
sahf
pop
shrb
mov
in
cmpb
xchg
mov
add
dec
mov
gs
pop
in
call
sub
stos
dec
mov
xchg
je
pusha
mov
inc
addr16
xor
push
pop
pop
xor
pop
shl
xchg
xchg
iret
push
test
sub
mov
and
mov
in
fldl
cmp
inc
mov
pusha
push
vmread
add
adc
inc
stos
mov
outsb
and
push
mov
lahf
loope
lods
add
mov
add
ficoms
outsl
mov
jmp
je
ljmp
inc
sub
cmp
mov
add
mov
mov
mov
bndldx
mov
xchg
ret
das
insl
stos
data16
into
add
call
mov
pmullw
test
cmpsb
loopne
fildl
pop
and
fcompl
cltd
sbb
jbe
or
fsubrl
push
outsl
mov
sahf
cmp
outsb
and
gs
push
cmpsb
mov
or
fwait
test
and
pop
mov
imul
xchg
ja
pop
xchg
ja
pop
pop
mov
test
mov
cwtl
push
push
add
pushf
mov
add
mov
test
jmp
bound
roll
rcrb
fistpl
es
add
inc
and
and
mov
mov
dec
mov
push
or
pop
lock
mov
loop
or
push
add
sbb
push
xor
or
add
xchg
je
aad
push
popa
insl
jg
clc
xlat
add
add
jbe
add
jne
xchg
jne
mov
in
cmp
or
imul
and
nop
xchg
test
add
daa
mov
incl
mov
mov
out
mov
adc
or
pop
pop
cs
inc
int3
mov
out
les
push
out
pop
popa
outsl
add
pop
add
fadd
add
stc
mov
jge
sbbl
enter
adc
add
shll
aam
sbb
iret
mov
in
iret
jge
cmp
test
jmp
pop
mov
jbe
sub
ss
mov
lds
sub
nop
cltd
fisttpll
xor
xor
test
push
cmpsb
stc
dec
out
add
lret
sti
lods
aas
push
movsb
xchg
cmp
movl
sti
sub
sbb
add
xor
dec
in
mov
mov
push
push
and
ja
xchg
aad
add
cwtl
mov
push
xor
cmpsb
push
orb
pop
je
out
xchg
movsb
inc
add
cli
fs
dec
xchg
jg
jns
sti
mov
divl
and
add
add
add
adc
pop
pop
lcall
mov
outsb
int
inc
xrelease
push
pop
adc
pop
test
movsl
lret
ss
add
fisttps
fyl2x
sub
lods
jle
mov
ss
push
mov
adc
mov
push
mov
push
pop
xchg
xor
std
bound
movl
popf
jg
mov
sbb
sbb
int
sub
xor
add
scas
add
out
scas
andb
mov
cmp
das
mov
stos
shr
stos
lods
add
and
add
add
bound
mov
mov
fmul
pop
mov
push
sti
xchg
adc
loopne
mov
and
int
jmp
jmp
lods
or
or
add
mov
xchg
cwtl
add
test
filds
push
jp
add
mov
jo
sbbl
or
pop
test
cmp
add
mov
add
inc
les
lret
bound
sub
enter
add
xchg
or
sbb
or
fbstp
fs
scas
arpl
add
xor
fstp
pop
nop
sahf
pop
inc
mov
jg
pop
cmp
fmull
test
in
mov
xchg
inc
add
sbb
pop
insl
jo
or
outsb
inc
mov
xor
jbe
add
cmp
lock
lret
pop
outsb
cmpsb
sbb
test
aas
mov
inc
or
or
xchg
adc
add
push
add
add
clc
mov
xor
push
ljmp
sub
js
fiadds
mov
push
sti
lret
mov
add
shrl
inc
lcall
inc
scas
pop
pop
jne
jno
push
testb
cld
add
push
cli
lret
imul
mov
leave
andb
aaa
pop
repnz
adc
cmp
test
sti
dec
pop
mov
and
jmp
xchg
hlt
bound
push
sbb
adc
inc
mov
fisttpll
fadd
cmp
int3
cli
aaa
mov
or
adc
mov
sub
cmp
mov
or
add
jb
jmp
test
and
xor
adc
and
es
cli
push
mov
push
icebp
fs
pop
mov
add
add
inc
xchg
out
mov
sahf
xlat
and
add
add
push
pop
mov
out
or
jg
jb
loop
ljmp
cmp
outsl
xor
add
enter
xchg
add
xor
daa
add
add
sarl
clc
add
add
add
insl
mov
shll
mov
and
xchg
ret
mov
xor
add
dec
je
mov
stc
lods
add
mov
testb
insb
sub
add
jno
repz
cltd
hlt
push
roll
outsb
xchg
mov
jmp
add
arpl
xchg
dec
mov
fadds
subl
mov
rolb
lea
add
add
jbe
data16
clc
jne
inc
cmp
sbb
call
inc
sarl
add
add
mov
in
int
mov
gs
stos
leave
cmp
pop
faddl
mov
push
jecxz
pop
iret
daa
xlat
add
pop
sub
pop
mov
out
int
dec
dec
add
lods
xor
rolb
bound
adc
aas
push
shlb
mov
adc
add
sub
ret
inc
xor
mov
add
gs
cld
pop
call
cmp
jae
mov
jmp
inc
mov
add
add
adc
loope
loop
adc
sarl
add
add
mov
xor
sbb
cwtl
mov
add
test
cmp
mov
add
rcll
adc
adc
add
mov
nop
add
das
add
loope
roll
inc
adc
cmp
jmp
hlt
sarl
fisubl
and
mull
arpl
popf
push
int
scas
jmp
mov
fsubrs
push
cmpsl
add
mov
xor
fistpll
add
mov
add
mov
xchg
and
ds
push
jmp
sbb
out
cmp
xor
inc
add
jle
pop
jo
mov
cmpsl
pop
cmp
sub
mov
cmp
cmp
mov
pop
push
pop
lret
push
add
sub
mov
ja
mov
fstpl
movl
adc
cmp
and
add
push
popf
push
add
add
test
nop
fs
ror
add
push
push
adcl
dec
add
add
ficoms
pop
jg
cmp
add
add
add
jno,pn
xchg
mov
or
test
xorb
add
pop
pusha
push
mov
inc
xchg
mov
jmp
mov
stos
dec
mov
add
subl
cmp
fisubs
or
dec
inc
jae
sub
jle
push
fildl
cmp
insl
pop
add
mov
add
enter
cmc
stc
add
sbb
sbb
xchg
or
sti
add
test
mov
push
push
imul
cli
mov
add
repnz
push
stos
ret
outsb
add
mov
cmp
pop
call
testl
test
xchg
dec
dec
inc
out
ret
sub
push
enter
sub
push
pop
adc
push
sbb
test
sub
pop
add
add
jp
push
loopne
xchg
outsb
add
shrb
inc
jns
xor
mov
push
int
lea
or
adc
mov
adc
into
inc
pop
aaa
pop
xorb
push
adc
add
cmpb
mov
sub
add
push
add
ds
js
scas
add
mov
mov
adc
or
shlb
add
jno
sub
add
out
data16
push
dec
push
pushf
cmp
add
fsubrs
push
xchg
imul
cmp
mov
add
sub
ds
out
pop
add
xor
add
dec
dec
dec
incl
lock
add
test
mov
fistpl
add
pop
dec
sahf
mov
ss
push
mov
pop
add
cmp
ja
xchg
in
and
cmp
loope
add
inc
dec
add
insl
mov
ds
mov
test
push
cmp
ret
sti
add
inc
ret
jg
movb
xchg
scas
insb
andb
or
add
mov
into
mov
test
pop
add
scas
xlat
add
sbb
arpl
arpl
mov
push
xchg
mov
sti
pop
jb
push
out
mov
test
dec
mov
shll
das
mov
add
in
cli
addb
orb
mov
mov
test
lds
add
mov
add
pop
add
mov
data16
movsl
add
dec
add
mov
popl
and
mov
inc
test
cld
cmp
movsb
flds
pop
test
inc
bound
jno
ljmp
jl
xor
jnp
mulb
mov
sub
mov
out
pop
and
add
lcall
add
inc
mov
add
fwait
add
or
adc
sub
add
test
lret
sub
xor
pushf
lea
pop
jns
outsb
xor
and
add
push
mov
fs
pop
cmp
dec
cmp
jmp
jne
rorl
arpl
in
add
int
fwait
in
leave
ret
cwtl
mov
add
xchg
xchg
jbe
pop
addb
sbb
fnstsw
add
add
mov
mov
xchg
add
scas
lods
cmp
add
jne
ss
mov
rolb
and
and
dec
in
jle
or
lea
jns
rol
add
popl
mov
mov
aaa
or
imul
add
mov
push
nop
int3
xchg
cmpsb
add
add
data16
gs
inc
mov
xchg
push
push
xchg
mov
mov
xor
icebp
add
mov
das
xlat
add
fsubrs
gs
mov
push
ss
add
fisubs
or
stos
and
lea
stos
mov
nop
and
adc
fs
clc
lahf
jl
pop
and
sbb
push
movsl
pop
push
xchg
arpl
sbb
mov
xlat
cmpsb
in
repz
hlt
fsubp
add
add
add
repz
loopne
cli
sub
inc
and
push
add
add
add
mov
aad
imul
pop
mov
shrl
lret
shlb
std
jns
ss
xor
cli
add
add
pop
inc
or
push
lods
xchg
fwait
xchg
popa
arpl
shl
cmpsl
and
or
les
jns
test
mov
out
and
add
add
or
dec
push
and
mov
cmpsl
add
mov
roll
add
jnp
aaa
jbe
mov
stos
xor
loop
jo
inc
data16
mov
stos
mov
icebp
icebp
mov
sub
mov
loope
add
cmp
les
jle
adc
mov
mov
cmp
loopne
push
jnp
push
sbb
les
aam
ret
jp
cmp
jmp
pop
push
outsb
add
inc
jno
data16
pop
lahf
cli
jnp
jo
xor
add
push
shl
pop
xor
mov
out
xlat
jno
lds
xchg
pop
test
sub
xchg
add
dec
cs
lea
inc
int3
lahf
xor
xchg
adc
fwait
jbe
outsl
xchg
add
add
jae
add
add
add
jae
lods
add
sbb
cltd
mov
dec
mov
push
into
push
jns
incb
mov
push
add
add
das
addb
sti
xchg
push
push
mov
push
inc
adc
sub
sbb
sti
mov
push
std
xor
or
or
pop
cmp
add
iret
rorb
cmp
and
hlt
lock
and
and
fnsave
repz
and
je
add
nop
adc
lret
sub
lock
cli
daa
incb
icebp
jae
test
es
nop
jnp
daa
je
add
imul
fldcw
cmpsl
int
addr16
xchg
add
loope
pop
sbb
xor
bts
call
mov
inc
inc
adc
or
lahf
mov
sbb
push
mov
jnp
fmull
add
pop
lds
in
add
add
icebp
dec
cmp
daa
cmp
mov
cmp
pop
test
inc
or
fistps
or
daa
sub
mov
jns
loope
pop
mov
aaa
adc
add
dec
lcall
or
add
jb
mov
imul
out
jp,pt
je
pop
and
xor
xor
scas
fldt
sbb
imul
add
cmp
xchg
push
push
repnz
cmp
testl
cmp
int
mov
or
mov
push
add
cmp
shrl
sti
ret
nop
into
mov
jnp
cld
data16
xchg
add
sbb
add
sbb
mov
call
pop
mov
push
mov
mov
clc
and
loopne
or
cmp
shll
pusha
push
push
stos
repnz
add
jp
jno
xchg
sti
cmp
dec
add
mov
mov
iret
nop
testl
or
data16
cmp
cmpsb
outsl
adc
sub
in
push
and
lea
cltd
add
or
je
mov
cli
sbb
xchg
adc
aam
add
ds
ja
in
add
call
jmp
cmovnp
xor
add
mov
aad
repz
add
loopne
mov
mov
ds
xor
pop
daa
sbbb
xchg
test
mov
push
pushf
add
mov
inc
xor
mov
hlt
dec
inc
adc
adcl
jae
jb
push
shlb
jge
dec
ss
movsl
cmp
mov
sbb
repz
fisubrs
cmp
jae
push
pop
test
and
clc
test
fimuls
inc
and
mov
shll
aad
in
xor
ficoms
and
fmul
add
stos
mov
xor
rcrb
adc
or
add
xchg
imul
scas
mov
lret
call
test
adc
jnp
add
push
add
lret
call
out
mov
mov
push
into
push
es
cmc
call
enter
dec
loope
inc
add
mov
adcl
popa
sahf
lock
inc
imul
je
or
add
dec
cwtl
imull
dec
pop
fsubrp
push
lret
add
add
das
mov
mov
cmp
or
lea
jge
add
sub
and
add
popa
adc
mov
mov
scas
adc
addr16
push
arpl
push
data16
cmc
addr16
adc
jl
mov
add
test
add
xchg
cmp
push
fbstp
test
push
xor
aam
movsb
les
xor
jo
idivb
data16
sti
jg
cs
add
pop
bts
mov
push
test
sub
push
int3
mov
mov
out
addl
xchg
add
jnp
add
jnp
test
sahf
stc
add
add
add
add
ja
pop
iret
sub
aam
pop
sbb
dec
mov
mov
xchg
mov
cmp
jle
adcl
mov
mov
jno
into
cmpsb
fdivrl
adc
lahf
test
jmp
ficoms
or
add
rclb
addb
xor
and
jae
inc
add
aas
push
inc
xor
add
or
dec
hlt
sti
pop
lea
jne
push
mov
push
outsb
lcall
pop
pop
or
xchg
add
adc
add
scas
pop
push
add
ficoms
fmul
rcll
cmp
cmp
add
out
fistpll
cmp
movl
repz
pop
sub
in
int3
or
cmp
incb
cs
test
sub
and
push
adc
nop
add
mov
scas
xor
or
bound
js
push
adc
insl
jge
daa
add
mov
xchg
aam
jl
imul
push
imul
add
push
and
xor
xchg
push
cmp
shlb
xor
cmp
inc
add
add
add
inc
push
xchg
aas
ss
imul
daa
push
cmpsb
xor
lods
outsl
sbb
cmc
add
sar
pop
cmp
pop
xchg
and
push
stc
add
lret
loope
daa
xor
and
push
and
add
mov
add
jecxz
mov
xor
inc
mov
sbb
cbtw
daa
dec
add
aaa
cmp
mov
sub
imul
add
scas
mov
cmp
icebp
mov
pop
xor
fs
add
daa
and
stos
sub
mov
pmaxub
aad
mov
repz
call
inc
jge
in
lock
sub
fldcw
mov
insb
pop
push
sbb
ds
sbb
add
je
mov
push
int
pop
jg
dec
fs
sub
adc
in
add
and
jo
cs
push
inc
add
mov
pushf
cltd
add
cltd
jmp
and
sub
cmp
add
add
jecxz
jp
insb
cwtl
add
test
add
cli
lock
cmpsb
aas
sbb
fiadds
or
scas
mov
jne
cltd
add
pop
pop
inc
test
push
inc
mov
mov
inc
or
pop
je
xchg
into
pop
daa
ret
out
int3
std
lock
out
or
jae
call
bound
mov
imul
pop
cmp
jmp
arpl
mov
xchg
push
pop
add
lea
mov
rcl
insl
add
adc
lods
add
arpl
lcall
add
push
push
fwait
xor
imul
push
add
mov
popa
test
add
add
aam
fldl
out
adc
cmp
add
sahf
add
inc
shrl
add
add
ljmp
adc
fiadds
adc
lahf
in
fucom
fstpl
mov
and
fcoms
shll
add
les
add
dec
mov
xor
or
cltd
stos
push
or
add
gs
push
rolb
mov
sub
adc
add
aas
inc
mul
or
adc
cmc
add
repnz
xor
add
das
mov
cmpsb
add
cmp
adc
push
loop
mov
gs
jl
add
fnstsw
push
mov
add
cmp
adc
loop
adc
cmpsl
stos
dec
data16
mov
xor
add
rcl
movsl
daa
in
sti
mov
jmp
dec
add
in
sub
cmp
add
mov
adc
add
sti
sahf
or
add
ds
es
mov
out
loopne
add
call
ds
xchg
jno
mov
cmpsl
xor
ds
dec
mov
inc
xorl
mov
push
inc
loopne
mov
sbb
sub
xchg
aam
lret
pop
add
jae
add
inc
sub
add
and
cmp
ja
add
add
sub
mov
add
xchg
stc
push
cmp
aaa
scas
add
enter
inc
ss
dec
add
and
out
je
shrl
sub
sbb
sub
add
pop
add
and
and
fisubrl
aam
js
inc
add
das
push
add
add
aad
jbe
and
lds
add
insb
call
push
add
popa
add
loope
add
adc
xor
js
add
popf
add
xchg
or
and
lds
push
cmp
sub
ja
outsl
cmp
xchg
sbb
or
cli
mov
or
out
sbb
bound
add
mov
dec
mov
jo
and
out
push
push
mov
inc
pusha
jnp
add
pusha
test
pushf
fsubp
cmp
mov
movsl
pop
cld
or
sub
mov
cmpsl
sti
jb
add
gs
and
add
sub
fidivl
add
xor
out
xor
jns
insl
movsl
iret
lret
mov
je
jbe
scas
mov
push
in
scas
out
cmc
add
fadds
add
sbb
mov
mov
repz
repz
cs
inc
or
xor
scas
mov
in
les
sti
jbe
cmc
sbb
in
imul
push
addl
add
cmp
hlt
leave
inc
popf
mov
loopne
sub
mov
cmp
sti
mov
je
scas
cld
inc
mov
or
loope
pop
jno,pt
push
in
ds
add
add
add
jbe
in
mov
iret
inc
cmpsl
add
add
testb
insl
in
push
in
adc
sahf
fidivs
fstl
dec
sub
cld
add
lahf
lret
xchg
sub
adc
adc
and
flds
mov
flds
pop
add
repnz
fcoms
iret
stos
imul
icebp
rcrl
cmpsb
push
repnz
in
mov
jge
adc
xor
and
add
sub
iret
mov
mov
in
dec
sbb
mov
fiadds
ret
mov
aam
dec
lods
add
loope
mull
inc
data16
and
add
cld
flds
pushf
cmp
lock
or
mov
adc
and
jns
das
inc
leave
sbb
and
mov
flds
and
xchg
popa
dec
cld
movsb
insl
daa
add
sbb
imul
add
sub
and
sub
xchg
int
arpl
inc
xchg
add
and
gs
insb
jl
add
adc
ss
iret
xor
push
jne
and
dec
addr16
add
and
push
add
add
sub
sbbl
jno,pt
fwait
jb
pop
pop
out
mov
and
add
sub
and
mov
add
insb
mov
jmp
add
sbb
data16
mov
add
add
into
and
mov
add
push
sub
add
sub
add
add
mov
or
pop
out
int3
lods
mov
int
or
into
mov
add
cmp
xchg
mov
sbb
repz
dec
cmpsl
sub
add
mov
and
jnp
mov
pop
movsl
or
jmp
inc
jp
int
mov
or
add
add
inc
fdivrs
sbb
es
pop
jnp
add
push
adc
out
mull
arpl
fcmove
std
push
xlat
je
add
add
cltd
lock
int
ret
data16
or
or
mov
stc
cs
mov
push
jb
add
sbb
pop
gs
mov
lcall
imul
jnp
add
insb
mov
lret
mov
adc
insl
mov
outsl
mov
pop
lock
cwtl
add
add
stos
jg
imul
jno
add
add
sub
xor
mov
fs
xor
xor
xor
je
jge
movsb
xchg
int
addb
cmc
or
rol
adc
and
inc
adc
jne
jns
mov
dec
out
cmovg
push
adc
push
in
add
and
outsb
add
imul
xor
lret
pop
dec
pop
mov
xlat
pusha
and
dec
lea
add
add
add
sub
inc
es
sub
jg
mov
jge
mov
arpl
lods
push
test
jmp
aam
push
stos
insl
and
add
adc
imul
add
inc
mov
shrb
imul
lea
dec
mov
mov
inc
cmp
add
cltd
rolb
jns
pop
jbe
sbb
add
xor
add
mov
sahf
xor
test
fadds
and
pop
lock
mov
hlt
sub
fiadds
jp
and
pop
in
mov
jo
sub
xchg
clc
stc
icebp
movsb
pop
iret
add
ss
adc
xchg
or
mov
push
mov
add
sbb
cmc
out
je
xor
subl
adc
lods
aad
xchg
cwtl
add
test
inc
add
imul
push
adc
lods
sub
xchg
cwtl
dec
and
mov
jb
ds
call
aas
add
and
adc
lahf
push
push
add
cmp
incb
ret
sbb
call
cmp
mov
add
mov
jbe
data16
mov
pushf
jp
mov
int3
or
gs
push
shll
out
jle
add
mov
push
push
gs
add
fwait
scas
adc
cmp
mov
mov
sub
push
out
hlt
xlat
lods
jl
add
mov
add
and
das
clc
int
mov
add
enter
cli
add
xchg
add
pop
out
pop
in
ja
fdivrl
jg
add
mov
add
mov
mov
pop
stc
and
inc
fiaddl
out
xchg
add
fs
iret
jle
dec
mov
xchg
or
popa
mov
xchg
xor
sbb
jp
ficomps
call
outsb
fisubl
test
cmpsl
jecxz
fiadds
inc
mov
jmp
sbb
mov
and
add
sbb
fwait
and
in
imul
mov
add
lock
repnz
ss
add
push
push
fwait
inc
inc
inc
mov
xchg
and
inc
push
add
movsl
inc
push
add
inc
add
das
xor
add
pop
out
xlat
pop
adc
pushf
push
addl
les
aaa
mov
and
lea
pop
cmpsl
cld
sbb
cwtl
cmp
or
hlt
add
cmp
ss
xchg
in
mov
ss
xchg
fcoml
push
jb
inc
fstps
lods
xchg
jmp
or
add
out
inc
enter
sbb
add
insl
sub
push
shr
add
aas
mov
mov
adc
lock
push
aas
dec
mov
add
fildl
xchg
push
pop
mov
add
fidivrs
fdivp
hlt
in
add
cmp
add
lea
pop
add
outsl
add
js
aas
test
test
push
cmp
add
icebp
push
mov
aam
xchg
add
add
cmp
movsb
mov
mov
xchg
add
pop
xor
push
add
push
pop
fwait
jo
add
push
add
jne
add
into
lods
push
sbb
test
pop
xor
and
dec
lods
adc
aam
aaa
cmp
jnp
stc
xchg
aaa
je
pop
fdiv
iret
jns
dec
cmp
rclb
inc
ret
mov
in
subl
add
fs
mov
test
jnp
sahf
push
fiaddl
lret
int3
sarb
and
xorb
cmp
sub
xchg
pop
sub
xchg
test
add
xor
pop
and
push
add
adc
add
clc
and
push
add
lret
cmpl
add
adc
icebp
fisttpl
pop
add
and
nop
jns
fs
in
and
in
sub
add
mov
movsl
in
pushf
pop
ret
mov
pop
mov
enter
lea
add
jno
ss
aam
add
push
push
push
loope
jp
neg
fdivrp
mov
mov
dec
out
stos
cltd
sub
cli
sub
add
aam
call
ds
ds
add
xchg
pop
inc
push
add
outsl
cmpl
cltd
popf
pop
adc
dec
mov
notb
push
sbb
pop
out
rclb
xchg
in
insb
insb
add
js
fisubs
je
push
inc
add
add
addr16
jb
and
inc
pop
inc
mov
sub
aam
mov
add
das
dec
jne
sub
mov
out
nop
jno
jb
add
scas
xor
cs
push
scas
popa
xchg
cmp
movsl
or
dec
imul
add
mov
dec
add
xchg
roll
push
xchg
es
fidivrs
and
mov
add
jbe
inc
repnz
cmp
sarb
pusha
xchg
add
pop
push
add
adc
dec
sbb
add
adc
or
and
dec
imulb
adc
inc
pop
xor
add
fsubl
ljmp
cmp
xchg
iret
roll
dec
xchg
mov
jb
cmp
xchg
mov
jae
movsl
fnstenv
xor
scas
lret
add
cmc
je
jns
dec
stos
sbb
int
out
mov
add
add
adc
push
shll
ret
pop
pop
push
jne
add
mov
out
imul
dec
sahf
loop
pop
lea
pop
xor
add
add
pushf
mov
fwait
add
xchg
pop
cltd
mov
cld
xchg
pushf
push
in
sbb
adc
loopne
fcoml
jne
or
add
stos
aas
or
mov
add
sar
pop
ljmp
jns
ljmp
adc
aam
idiv
int
pop
outsb
add
je
in
sub
cmp
inc
lods
sub
addr16
ja
xchg
cmovno
dec
int3
mov
incb
iret
test
nop
inc
push
cmpsl
fs
xor
jne
jnp
add
cwtl
outsb
dec
lcall
xor
and
jnp
adc
jg
pop
in
dec
js
popa
je
add
shrb
sbb
mov
addr16
add
add
cltd
pop
inc
add
push
push
adc
inc
int3
mov
addl
jmp
int
mov
mov
es
ficoms
pop
add
lds
loopne
fldl
in
mov
xor
arpl
xchg
fistl
and
ret
mov
push
xor
repnz
add
imul
leave
mov
mov
add
inc
add
in
and
mov
inc
jo
jmp
push
ds
jmp
je
insl
jecxz
aaa
daa
in
nop
add
or
out
add
adc
adc
push
push
cltd
mov
adc
add
loopne
pop
scas
pop
add
inc
cmp
mov
or
lods
jno
adc
jl
mov
out
mov
insb
sub
add
lds
pop
cmpsl
add
or
dec
xor
cmp
aaa
add
outsb
jmp
push
loop
mov
pop
jae
or
add
cmpsl
repnz
add
hlt
sbb
sbb
jl
jbe
jns
mov
push
shrl
sti
inc
addr16
popf
fnstcw
and
sbbl
enter
xchg
sbb
cmc
cmp
add
cs
xchg
dec
int3
jnp
mov
and
movsl
sbb
pop
add
or
push
add
fimuls
loopne
sbbl
je
fisubl
addb
mov
mov
sarb
jne
mov
adc
xchg
add
leave
sbb
cmp
push
mov
out
inc
push
cmp
jnp
ljmp
inc
jbe
jnp
add
clc
add
ss
mov
and
inc
mov
pop
call
or
jp
pop
movsl
loopne
cltd
shlb
push
or
filds
add
out
lods
or
lods
add
cmc
nop
add
sar
pop
mov
imul
cmp
out
daa
add
jb
insb
loop
test
aam
ret
stos
push
mov
or
mov
fiaddl
mov
push
push
rcll
xlat
test
mov
leave
lret
nop
add
sub
repz
or
add
mov
xchg
jno
rcl
or
lock
pop
add
aas
sub
add
push
inc
xchg
in
cmp
mov
ret
and
jno
cmp
adc
fcomp
and
pop
adc
add
xchg
mov
in
leave
test
je
out
push
cmovbe
inc
pop
xchg
xor
sbb
mov
dec
in
clc
ds
add
or
mov
or
mov
jmp
add
mov
mov
mov
pop
shll
adc
stos
arpl
cmp
mov
cmp
mov
sbb
mov
mov
andb
mov
inc
push
add
dec
arpl
xor
popf
cmc
add
sbb
cmp
lds
leave
inc
adc
data16
mov
loopne
iret
add
je
in
xlat
add
popa
cmp
stos
add
js
adc
sbb
push
add
cltd
mov
dec
mov
xchg
mov
add
mov
iret
int3
fs
jne
mov
cmp
faddl
orl
nop
incb
push
xchg
idivb
std
xchg
ja
imul
loopne
dec
cmp
ret
push
push
rcrb
xchg
aaa
sbb
and
ret
orl
jg
add
lret
cli
cli
mov
jmp
jno
sub
pop
adc
jno
push
shll
adcl
mov
movsl
test
ret
ja
test
nop
into
movsb
sub
add
jmp
je
add
jb
cmp
sbb
push
adc
pop
das
xchg
push
fdivrp
out
ljmp
cmpsb
sti
popf
jns
jnp
or
jl
ret
cs
cs
pop
add
decl
mov
mov
test
rolb
adc
mov
push
mov
jne
cmp
sbb
aas
add
cmpsl
movsl
xor
nop
cwtl
xchg
jmp
sub
push
or
idiv
mov
adc
mov
jecxz
pop
sub
or
cs
fwait
mov
repz
push
stc
pop
je
imul
pop
adc
inc
movb
add
xchg
cmp
in
into
lahf
cmp
lds
adc
add
nop
test
int
sub
rclb
cli
ftst
push
out
cmp
add
arpl
mov
leave
les
movsl
rol
mov
cmp
push
nop
dec
stos
imul
mov
fimuls
pushf
add
sub
push
jge
cmpsl
mov
rolb
dec
pop
jp
push
dec
or
add
roll
add
lea
rorl
push
mov
dec
sbb
lahf
cmp
mov
mov
push
insb
incb
add
mulb
arpl
test
xchg
out
add
fwait
out
sub
xor
pop
add
mov
imul
test
pop
sub
sbb
push
pop
add
pop
add
popf
and
pop
push
shrb
sbb
rorl
lods
pop
pop
add
add
mov
cmp
fistl
je
and
icebp
in
add
or
push
add
outsl
add
adc
pop
icebp
popa
insb
arpl
jne
add
jne
faddp
data16
xchg
stc
insl
jg
fnstcw
mov
je
movsl
push
xchg
inc
pop
add
xchg
add
add
lret
jae
add
add
test
cli
mov
adc
jl
and
sbb
xchg
in
popf
ja
pop
rorb
data16
add
push
sub
add
or
into
mov
mov
mov
add
and
push
add
add
sbb
pop
mov
mov
loope
loopne
pop
xchg
in
je
insb
jae
enter
rcrb
movsl
imul
push
mov
ret
mov
loop
mov
imul
mov
shlb
pop
push
lds
das
add
add
mov
add
int
pop
in
loope
pop
jp
mov
xchg
add
dec
xor
les
cwtl
sub
dec
sahf
addr16
rcl
push
mov
pop
adc
pop
add
sub
add
cmp
lahf
and
lods
push
inc
and
hlt
notb
add
rcr
sub
and
push
sub
push
iret
outsb
push
push
push
xor
add
fsts
jg
add
icebp
push
add
std
call
cmpsl
jg
fs
and
add
insb
pop
dec
mov
in
idiv
add
pushf
dec
push
lods
mov
test
add
aam
push
add
repz
test
call
adc
xor
mov
out
mulb
jo
adc
jl
int
push
js
fnstenv
inc
adc
add
dec
testb
pop
dec
or
cmc
sar
add
sub
lcall
sub
xlat
dec
dec
xchg
bound
add
xor
jle
jns
add
ret
or
push
sub
sub
cmpsb
loope
add
ja
adc
add
pop
in
or
xor
xor
and
adc
mov
inc
add
rorb
stc
add
dec
mov
stos
cmp
pop
mov
and
or
lock
adc
jle
push
push
add
add
push
decb
xchg
add
mov
mov
add
add
and
aaa
adc
dec
xor
mov
movsl
loop
push
add
es
pushf
imul
pop
sbb
lods
pop
aaa
imul
jmp
mov
xor
push
mov
mov
add
repnz
mov
add
jp
pop
imul
mov
loope
repnz
lcall
and
xchg
das
imul
lea
push
outsl
jo
add
aam
add
push
jb
movsb
aam
add
push
mov
sub
ljmp
adc
cmc
add
rolb
adcl
inc
add
sub
or
sub
test
scas
jmp
dec
add
clc
pop
pop
mov
imul
ds
add
sub
pop
sub
sbb
lods
fisttps
stos
sub
call
xlat
test
in
add
push
add
in
jecxz
pop
xor
sub
fcoms
add
into
add
jp
pop
mov
jge
rcl
mov
jbe
inc
clc
cmp
lock
and
add
mov
pop
nop
mov
mov
add
rolb
mov
add
add
add
out
mov
mov
cmpsb
cmp
push
shrb
adc
mov
cmpsb
aaa
add
mov
shl
sub
inc
fstp
cmp
cli
out
decb
xor
addb
adc
jmp
sub
xchg
repnz
lock
push
fnstenv
mov
mov
mov
sti
dec
or
jbe
sub
push
add
push
js
fisubs
mov
ss
cmp
mull
xor
cmc
imul
add
std
pop
dec
mov
jb
add
add
es
adc
lret
push
nop
sbb
sarl
or
faddl
sbb
or
out
or
sbb
or
xor
outsb
pusha
adc
cmp
and
pusha
call
ja
mov
lock
xchg
cmpsl
push
cmpsb
outsb
lcall
add
mov
add
xor
mov
dec
andl
push
jmp
push
add
cmp
and
adc
pushf
incl
xor
jp
dec
in
add
cltd
xlat
rcr
mov
mov
inc
pop
pop
loope
push
push
add
xchg
pop
pop
add
out
xor
sbb
scas
add
scas
push
stos
xor
fiadds
into
insl
ror
and
and
mov
dec
es
xchg
mov
inc
aas
add
lea
dec
pushf
lcall
jae
std
mov
sub
les
outsl
jns
shll
jle
cmp
mov
in
mov
jl
iret
das
add
jb
dec
jnp
data16
rorb
pop
mov
cmp
jmp
in
outsl
lock
xor
add
imul
xor
adc
cltd
lret
dec
add
or
add
pusha
popl
addr16
or
daa
outsb
mov
out
leave
xchg
or
data16
mov
dec
je
insb
cmp
pop
fistps
je
mov
aas
lcall
insb
test
gs
sub
mov
jne
cwtl
push
jbe
and
pushf
mov
out
adc
add
adc
dec
addr16
pushl
mov
add
sbb
bound
add
sub
xor
xchg
sahf
xor
mov
sbb
cmp
push
lret
cwtl
sub
add
lock
add
add
ds
roll
mov
push
inc
flds
jp
xchg
mov
iret
mov
push
ds
dec
stos
add
mov
sti
and
mov
bound
add
jae
dec
and
nop
ds
add
dec
sub
loopne
add
test
lcall
call
outsb
cmp
lret
jmp
insl
fcoml
icebp
fwait
add
cmpsb
adc
outsb
and
add
sub
dec
push
add
inc
inc
adc
out
push
mov
test
or
or
fdivrl
xor
add
add
push
jb
push
mov
jae
cmp
cmp
and
mov
push
add
jecxz
dec
xor
mov
push
sbb
fsubrl
add
int3
xchg
jle
adc
and
and
push
outsl
loope
rcrl
dec
add
data16
cmp
and
xor
add
xchg
xor
and
xor
in
mov
jbe
enter
xchg
sub
sub
or
jmp
in
fstpt
pusha
loop
mov
ret
sbb
lcall
sar
add
add
xor
jbe
mov
mov
cmp
push
add
sub
mov
cld
out
outsb
mov
add
dec
rcll
mov
jge
jge
fsubs
movsb
xor
dec
adc
adc
xchg
push
addl
mov
mov
mov
movsl
or
jle
test
add
inc
inc
jns
repz
inc
icebp
ljmp
in
andb
shrl
loop
std
je
add
popf
fldenv
add
leave
test
loope
mov
nop
xchg
addr16
mov
add
adc
cmp
pop
xchg
add
pop
cmp
loope
lea
adc
in
popf
mov
add
pop
mov
add
fildl
sti
fwait
jmp
mov
pop
les
scas
jge
js
jbe
add
out
mov
cmc
add
ret
jl
add
and
testb
add
mov
inc
mov
add
pop
or
popa
push
and
cmpsl
dec
testb
test
xor
add
mov
in
verw
nop
or
add
inc
in
imul
or
clc
incb
mov
lea
pop
mov
jns
test
dec
add
imul
sbb
add
test
popf
inc
mov
popf
xchg
lret
nop
push
pop
movsb
fcoml
or
jnp
pushf
jnp
test
push
push
add
std
aas
jg
or
jno
loope
mov
scas
mov
add
scas
jno
sti
add
or
in
das
dec
jle
adc
mov
dec
ret
or
jns
jo
fwait
sbbl
push
adc
dec
fwait
fwait
int
out
enter
jle
push
mov
lcall
inc
add
xor
lret
pushf
orb
aad
add
mov
sbb
push
push
and
fsubrl
jg
cmp
dec
push
int3
mov
pop
xorl
loope
push
insl
xchg
inc
xor
mov
pop
push
and
add
pop
add
add
add
test
adc
loop
sub
test
push
push
xor
or
mov
xchg
aad
push
dec
push
xchg
dec
das
fwait
push
add
add
or
hlt
add
mov
pop
pop
adc
push
jbe
add
push
sub
subb
add
imul
in
sahf
aaa
mov
xor
sub
leave
add
push
push
fstpt
cltd
or
ror
sbb
jp
jle
mov
mov
pushf
mov
rcr
movb
insl
aas
or
insb
pop
xor
mov
mov
mov
push
adc
push
popf
sub
add
hlt
scas
rorl
xchg
sub
pop
loopne
shll
rcll
test
inc
mov
lcall
inc
mov
mov
jnp
mov
rolb
adc
jbe
add
xor
push
cwtl
xchg
cmp
add
test
inc
lcall
and
pop
and
add
xchg
push
ljmp
fcoms
xchg
popf
push
cmc
xchg
aam
ficoml
cmp
in
mov
mov
stc
push
add
insl
mov
inc
roll
fldcw
addr16
mov
mov
cwtl
mov
mov
add
add
add
in
aaa
push
xchg
jg
mov
rcrb
aad
add
sbb
outsb
push
lock
xor
mov
lldt
cmpsb
sub
ds
je
add
inc
das
sub
bound
stos
add
idivl
lock
outsb
sbb
aam
lret
sbb
mov
mov
xor
popl
mov
dec
daa
dec
adc
push
pop
xor
add
sbb
scas
dec
push
inc
push
add
mov
add
sub
aas
mov
xchg
nop
cmp
dec
ljmp
pop
mov
or
sbb
push
push
mov
push
push
add
cmp
jno
xlat
inc
sbbb
scas
pop
rcrl
mov
xchg
add
stos
push
pop
adc
js
jp
or
sbb
sarb
cmp
iret
push
les
adc
add
sub
sbb
sub
add
outsb
xor
cltd
es
ds
movsl
mov
xor
add
add
jbe
inc
push
loop
idivl
gs
cs
adc
dec
cwtl
push
cltd
popa
es
dec
add
negb
cwtl
in
outsl
add
sub
jnp
jno
cmp
sbb
sub
cmp
add
xchg
add
scas
adc
je
xchg
adc
test
add
xchg
pop
lock
loopne
cmpsl
or
pop
or
add
ljmp
add
dec
scas
addr16
add
mov
cltd
lock
jg
push
mov
inc
cmp
jg
mov
adc
dec
aad
sahf
scas
pop
add
push
pop
and
int3
add
add
std
ficoml
push
aam
add
imul
or
rcll
movsl
add
add
mov
push
test
fcoml
jns
jns
dec
sub
or
int3
testb
loopne
inc
loop
into
adc
inc
fs
dec
test
daa
xchg
icebp
add
nop
and
aam
mov
fwait
cmp
insl
inc
dec
cmp
xor
add
rsqrtps
icebp
into
mov
cltd
sbb
xchg
add
push
dec
mov
add
pop
pop
xchg
test
adc
stos
pop
clc
mov
xorl
inc
stc
add
sbb
aaa
leave
or
xlat
mov
add
arpl
inc
in
xchg
mov
hlt
push
dec
and
add
sahf
sbb
mov
sti
add
pop
mov
and
aad
lock
push
sahf
pop
jmp
ja
add
sub
repnz
loope
rolb
xorl
push
sbb
mov
inc
adc
pop
jmp
dec
pusha
add
lcall
sub
mov
lods
add
jmp
sbb
aaa
xchg
inc
sbb
addl
jae
lods
pop
sbb
cmp
add
insl
jmp
cwtl
xchg
pop
jae
sbb
inc
cmp
stos
das
cwtl
push
push
inc
jecxz
repz
adc
jno
add
add
cmp
je
xchg
shlb
sub
cmp
mov
pop
adc
daa
sbb
mov
xor
mov
in
jp
arpl
ficoml
outsb
std
add
xor
jp
es
xchg
ror
mov
and
add
xor
jb
mov
mov
fldl
jno
fsubs
dec
outsb
xchg
fstpt
dec
jb
sbb
out
add
enter
loope
aad
faddl
js
addl
jns
call
add
sahf
lcall
arpl
jp
insl
xor
lods
popf
aaa
daa
loop
jecxz
movl
or
ret
or
in
inc
ficomps
nop
add
add
jp
lahf
sbb
mov
pop
scas
pop
push
add
outsl
aas
iret
adc
insb
add
notb
cld
fs
cmp
jecxz
rcrl
inc
and
sti
add
hlt
and
notl
lret
add
add
mov
cltd
mov
add
mov
popf
test
cs
pop
cmpsb
cmp
add
test
add
add
add
int
rep
out
push
test
dec
xor
cmp
stos
aad
mov
xchg
insl
push
ds
out
pushf
outsl
and
rolb
add
xchg
movsb
shl
jecxz
and
lds
add
sbb
pushf
sub
mov
jp
inc
lahf
jge
sti
out
inc
das
mov
add
cmp
cld
mov
sub
adc
int
mov
daa
jae
in
mov
lds
filds
xchg
int
adc
add
mov
jmp
push
popf
fsubr
lods
push
add
cmpsl
aad
clc
data16
xor
lret
cld
cmp
lahf
pop
add
jns
dec
fisttpll
lods
repnz
jns
xchg
sbb
cmp
jae
or
inc
add
dec
fwait
and
dec
sub
jge
stos
dec
cmp
jge
mov
push
pop
mov
jmp
push
rcr
ds
outsb
imul
imull
mov
xchg
adc
xchg
xchg
popf
pop
add
mov
mov
or
add
or
adc
add
leave
jecxz
or
sti
inc
add
fwait
and
add
or
jp
xchg
insb
adc
pop
mov
xchg
pop
xchg
push
mov
out
sarb
gs
lahf
sti
or
lock
and
add
add
mov
pop
aaa
jp
test
sub
ss
add
insl
push
add
push
aaa
xorb
jo
xor
cmp
xlat
iret
xchg
scas
inc
push
addr16
add
insb
cmp
aaa
xor
les
lret
sub
lahf
pop
xor
cli
jb
cwtl
call
setl
sbb
inc
mov
mov
add
cmp
add
inc
jp
jns
movsl
inc
pop
ds
adc
add
dec
xor
std
fcmove
rcrl
and
jge
adc
jno
mov
sub
movsb
add
int3
cmpb
xchg
fcoml
mov
test
std
in
clc
adc
cmp
ficomps
pop
mov
pop
jno
jae
repnz
lods
mov
push
in
repz
test
inc
dec
add
push
bound
mov
std
dec
add
mov
pop
lret
jb
dec
push
inc
jb
xor
mov
add
add
rcrl
pop
adc
pop
pop
dec
inc
jecxz
jp
sbb
shll
xchg
or
aas
int
cmp
mov
scas
push
sbb
push
jne
push
pop
xor
jmp
pop
push
or
sbb
imull
inc
aaa
dec
int
mov
ja
daa
out
ljmp
loopne
test
sub
add
push
fnstcw
and
in
in
xor
xchg
jle
es
mov
or
and
cli
cli
cwtl
lock
dec
mov
jecxz
add
sub
add
push
movsl
dec
or
call
ss
lret
xor
xor
pop
movb
pop
jne
add
push
adc
aas
or
add
les
and
add
inc
mov
add
popa
hlt
add
add
adc
push
pop
inc
iret
loop
in
pop
inc
scas
add
ss
fdivl
push
fstpl
dec
inc
mov
cli
dec
dec
inc
stc
add
mov
mov
add
pop
add
or
mov
into
add
sbb
cmp
adc
fists
xchg
push
addb
stos
and
cmp
adc
pop
pushw
add
mulb
loopne
add
xchg
cmp
add
mov
add
sbb
add
fisttpl
mov
enter
out
add
cld
pop
dec
push
jns
mov
adc
lret
sub
es
cmp
fisttps
add
sub
lods
fwait
mov
xor
cli
xor
insb
or
jbe
inc
sub
out
fists
dec
jmp
add
in
lods
pop
add
mov
add
insb
mov
lea
arpl
loopne
test
cmp
mov
inc
adc
cli
pusha
dec
pop
testl
pusha
pop
push
fildll
push
sbb
pop
inc
sub
add
jo
push
jbe
push
lahf
push
add
push
div
add
sub
cs
outsl
mov
imul
push
add
add
popl
int3
pop
into
sbb
cs
push
jno
jne
or
add
xchg
lcall
pusha
inc
add
dec
js
add
sub
movsl
adc
orl
dec
imul
mov
in
cmp
cmpsl
cmp
xchg
and
in
pop
adc
inc
jle
jb
inc
or
gs
shlb
add
xor
mov
test
mov
sahf
xchg
stos
push
es
xchg
int3
inc
out
rorb
or
pop
xor
lods
cmp
std
ss
imul
inc
in
push
jbe
add
lret
or
push
lret
cmpsb
test
push
xchg
and
cmp
mov
pop
xorb
mov
or
cld
pop
shr
cmp
pop
das
jmp
fiadds
inc
stos
les
sub
fidivrl
mov
sub
jns
dec
xor
stos
divb
cmp
fisttpl
gs
popf
nop
lahf
jg
das
aam
dec
loop
sbb
add
jg
les
dec
test
or
jno
sub
jne
push
cli
xchg
cmp
sahf
add
add
sbb
enterw
add
das
lcall
dec
mov
ja
cltd
clc
push
int
fidivs
pop
ss
add
cmpsb
lret
and
mov
out
sub
mov
inc
xchg
push
dec
sbb
pop
push
setnp
stc
imul
dec
stc
jae
fisttpll
pop
sarb
enter
xchg
push
aam
add
lock
pop
push
addr16
or
lcall
movsl
ljmp
and
pop
lahf
lds
and
add
adc
popf
push
mov
xor
push
add
jg
or
enter
cmpl
hlt
dec
lods
leave
repz
sahf
add
push
xchg
jnp
and
add
mov
mov
cld
jnp
call
add
and
add
add
dec
push
ja
push
call
mov
sub
test
adc
arpl
cmp
mov
jmp
int
add
or
pop
enter
pop
cmp
pop
push
add
push
out
jo
in
push
ret
into
jmp
imul
sahf
mov
adc
pushf
sbb
add
mov
add
lcall
add
jp
add
add
pop
cmpsb
pop
sub
add
add
cwtl
mov
add
push
out
orb
rolb
push
or
add
push
pop
sbb
and
idivb
into
in
add
cwtl
pop
jbe
adc
movsl
jge
pop
mov
ja
jns
fmuls
lock
xchg
dec
sahf
popl
pop
xchg
jbe
cltd
mov
adc
xor
jns
insl
bound
popa
xchg
sti
in
inc
jo
stc
stc
push
add
adc
jl
sahf
cwtl
mov
dec
je
sarb
pop
lcall
lock
xlat
addl
or
cld
push
test
arpl
mov
pop
in
xor
push
pop
jae
fmulp
add
in
int3
inc
add
scas
outsb
test
pmaxsw
sbb
add
stc
faddl
and
add
lea
push
scas
xor
add
mov
lret
mov
push
mov
fs
repz
xchg
and
imul
add
add
mov
add
inc
rcrb
outsb
shrb
xor
mov
repnz
mov
outsb
cli
add
adc
inc
mov
aam
pop
test
xchg
outsb
cmp
fs
add
mov
js
je
sbb
xor
add
add
lods
xchg
insl
mov
adc
pushf
xor
inc
jl
sbb
mov
add
add
ds
fldt
sub
mov
pop
cmp
loop
mov
sub
mov
mov
xchg
stos
cmpeqps
mov
test
sahf
aaa
insb
fildll
inc
jl
xchg
mov
cmpsb
js
push
paddsb
andl
add
jle
aad
cltd
scas
push
add
into
adc
leave
aas
add
adc
xchg
insb
lcall
scas
pop
inc
nopl
adc
inc
mov
call
sahf
add
movsb
add
and
push
ljmp
inc
popa
xchg
jo
mov
popa
push
outsl
les
add
add
add
xor
cmp
jne
xor
stc
lea
add
xchg
push
std
dec
xchg
sub
add
mov
add
sub
hlt
add
push
adc
test
mov
add
xchg
mul
stos
mov
in
and
mov
cmpsl
jle
add
add
add
jne
dec
add
inc
dec
adc
js
sub
movsb
dec
jmp
xor
jmp
inc
push
sbb
jge
mov
sub
cwtl
or
xchg
test
loope
hlt
in
cmp
shl
add
mov
jo
pop
adc
inc
ja
rolb
out
filds
mov
add
cmp
xor
jg
push
inc
add
jg
cld
add
fiadds
sub
stos
fisttpll
testb
sar
xor
cmp
std
push
or
loop
add
out
test
cmpsl
xchg
xchg
insb
push
bound
test
out
jp
add
push
pop
ret
jmp
inc
and
add
or
pop
enter
add
add
sbb
int3
mov
fwait
pop
inc
cmp
int3
pop
pop
add
insl
mov
aad
jno
add
nop
daa
in
inc
jecxz
daa
fs
sub
mov
sub
fxch
mov
adc
test
hlt
xchg
aam
pushf
in
inc
and
in
push
lret
pop
and
add
rcrb
xchg
pop
mov
or
inc
and
into
mov
scas
fs
and
rcr
jne
js
cld
pop
sbb
sub
sub
mov
cmc
jmp
idiv
aad
jmp
ja
cli
dec
outsl
lahf
add
es
dec
pusha
aas
cld
cmp
or
out
out
inc
mov
add
jbe
push
ret
add
ss
lret
add
orb
mov
push
fnstsw
test
shl
add
scas
cmpsb
adc
jge
jae
or
sub
rorb
sub
add
pop
fs
add
out
sbb
jecxz
add
push
adc
add
inc
add
dec
loop
dec
and
pop
add
es
jecxz
and
jb
mov
rorl
cwtl
sbb
cmc
lods
jmp
pop
outsb
push
jmp
jbe
clc
add
fldt
cmpsb
push
nop
cmp
mov
and
add
add
scas
iret
add
loopne
lahf
ret
in
popa
mov
jg
test
stos
and
mov
je
pushf
mov
leave
fwait
sub
nop
bound
pop
cmc
add
fdivrp
sti
out
dec
bound
add
push
mov
sbb
jmp
and
rolb
sbb
stos
add
cmp
sbb
push
adc
je
sbb
xor
mov
push
std
jns
inc
lods
jl
mov
loopne
idivl
and
pop
push
or
pop
mov
jge
in
jp
xorl
dec
mov
addl
adc
add
scas
imul
add
add
shrl
loope
enter
lods
or
inc
add
xchg
adc
pop
xchg
add
add
in
stc
cwtl
enter
movsl
fiaddl
dec
jbe
cmpsl
jb
jl
lret
cwtl
lods
jge
shr
add
cmp
add
in
jb
xchg
xchg
or
add
cmp
mov
inc
in
testb
add
jl
pop
add
mov
outsb
mov
xor
xor
sub
sbb
cltd
and
popf
clc
adc
test
push
xchg
push
aad
push
ret
fnstsw
jb
icebp
add
cltd
clc
mov
jmp
xor
add
add
lcall
jno
mov
push
lcall
or
cmp
add
ret
mov
xchg
ljmp
sbb
imul
test
out
leave
add
xor
mov
mov
add
scas
add
stc
das
push
in
fsts
xbegin
mov
lods
dec
add
jb
mov
popl
mov
rcrb
es
sub
jecxz
add
in
add
and
test
pop
pop
mov
aas
inc
cli
outsb
inc
das
and
mov
loop
or
ss
add
pop
hlt
mov
mov
sbb
cmpsl
sub
add
add
push
dec
add
test
mov
cmp
adc
add
lods
add
orl
je
xor
push
cld
mov
adc
in
insb
fwait
inc
add
mov
cltd
int3
dec
adc
rcll
adcl
imul
ret
dec
mov
add
loopne
xchg
mov
js
push
mov
popa
add
add
cmpsb
push
aas
inc
add
jae
fsub
add
out
inc
in
ret
outsl
mov
add
cmpsl
jl
fwait
lea
ds
xor
outsb
lret
data16
bound
lret
xor
lahf
inc
das
add
and
sbb
imul
out
sub
movsb
dec
arpl
mov
pop
xchg
mov
xor
jne
add
mov
and
movsb
shll
add
cld
mov
inc
xchg
ret
or
add
ds
or
sub
es
dec
and
mov
dec
sbb
call
ljmp
test
add
jne
cmp
sbb
jecxz
mov
jbe
add
and
outsb
add
add
mov
rcrb
fucomp
push
je
jns
jnp
sbb
push
mov
cli
ret
pushf
add
add
jg
fadd
loopne
sbb
fcmovnu
dec
add
mov
sahf
jb
add
xor
dec
movsl
add
mov
outsb
sti
add
pop
push
inc
rclb
xor
das
test
std
add
inc
es
pop
add
inc
fwait
add
or
mov
pop
jb
aas
add
or
insb
mov
inc
push
pushf
stos
and
jecxz
or
cmp
fadds
jb
dec
scas
xchg
dec
dec
in
pop
add
lds
push
mov
add
jge
xchg
pop
mov
jo
and
mov
mov
add
lods
add
or
add
lret
pop
pop
xchg
xchg
xor
hlt
cwtl
sub
and
scas
in
add
add
xor
add
rcrb
sub
test
add
cmc
lret
sub
and
mov
pop
sub
pop
or
add
and
pop
lods
or
sbbb
mov
pop
and
lret
and
in
es
pop
out
push
sub
fldcw
in
add
push
push
dec
dec
add
orb
fwait
sahf
add
xlat
dec
mov
jp
addl
sbb
fstpt
mov
cmp
out
add
aas
push
mov
add
adc
dec
out
mov
jo
xchg
push
ss
xcrypt-cbc
cmpsl
xchg
push
cld
leave
mov
mov
popl
repnz
pop
and
in
loop
pop
add
cmpsb
rcrb
xchg
rclb
pop
mov
sub
push
sbb
push
idivb
bound
rcrl
mov
xchg
outsb
push
popf
fld
mov
add
rolb
dec
mov
testb
lods
xor
push
push
mov
adc
mov
inc
call
out
or
fiadds
dec
rorl
mov
aas
cmc
add
xchg
mov
jp
xlat
test
mov
out
aaa
loopne
popa
sbbb
sbb
std
pop
inc
sbb
jb,pt
xor
push
and
fdiv
fildl
fldt
ds
pop
add
pusha
lds
jge
xchg
ja
xchg
or
cmpsl
fisubs
xor
sub
add
jle
add
sub
jmp
cli
push
and
sub
jg
add
add
sub
std
mov
xor
stos
add
pop
lahf
sub
inc
add
or
mov
jmp
xchg
and
add
adc
shlb
xchg
adc
movsl
or
inc
aad
and
push
or
push
cmc
jmp
std
lahf
push
add
test
inc
mov
jmp
test
ds
mov
mov
fistpll
sub
push
add
mov
push
add
add
lds
outsl
bound
add
addr16
lahf
mov
es
aad
sbb
add
xor
add
rcrl
cmp
movb
les
mov
adc
outsb
gs
inc
in
popa
sub
jae
outsl
lods
xorb
inc
lahf
add
and
and
add
jne
xor
lcall
aas
aas
ja
xor
iret
lret
add
adc
inc
cmp
idiv
mov
addb
test
xchg
push
cmp
ss
in
xchg
das
pop
push
pop
add
icebp
pop
jnp
es
mov
test
fisubs
mov
add
lea
add
pop
dec
mov
sarb
push
ljmp
imul
fstl
sbb
loop
jnp
fwait
je
loopne
lret
cmp
add
cmp
dec
add
xchg
xor
or
add
fmuls
int3
sbb
icebp
add
and
stc
pop
cmp
push
out
sbb
add
push
ja
or
inc
mov
inc
in
mov
cwtl
arpl
add
jo
add
push
jp
jbe
lock
sarb
pusha
sub
xor
pop
jge
push
add
mov
call
add
xor
add
xor
jae
inc
ja
test
lods
add
push
or
repnz
sub
and
xchg
js
inc
push
push
inc
pop
test
push
mov
mov
inc
outsb
mov
rorb
xchg
push
add
inc
pop
add
and
cmp
imul
push
jne
pop
mov
in
sbb
xchg
sub
shrl
cmp
jg
lret
add
fsubr
xor
jl
es
pop
test
ret
or
add
pop
cmpsb
gs
add
add
mov
mov
verw
add
xor
outsb
mov
add
cwtl
push
iret
add
aam
pop
push
sahf
cs
push
pop
pop
pushf
add
cmp
fmulp
lods
sahf
insb
sub
mov
adc
fcmovnb
push
and
add
adc
cli
scas
daa
xor
add
cmpsl
add
out
imul
adc
dec
adc
xor
or
lret
add
sarb
dec
cmp
push
daa
mov
or
jbe
outsl
inc
ret
test
add
add
pop
les
pop
insb
decb
inc
cs
mov
jo
add
hlt
fdivrs
mov
add
dec
mov
mov
es
ret
pusha
sti
add
bound
sbb
or
mov
pop
xchg
outsb
push
jg
dec
mov
pop
mov
popf
dec
inc
dec
call
xchg
dec
jle
push
dec
add
stos
int
lea
pop
int3
cmp
and
sbb
add
lcall
push
loopne
xor
stc
or
push
incb
fs
inc
add
pop
add
sbb
push
lods
test
adc
repz
add
sahf
push
add
jns
push
and
jge
dec
les
mov
add
iret
mov
sbb
loope
mov
mov
movsl
add
add
adc
sbb
mov
dec
push
mov
pop
mov
mov
add
outsl
mov
add
and
fwait
nop
xchg
cmpsb
sahf
sub
pusha
add
mov
mov
rcrl
movsl
xor
dec
insl
faddp
jle
jno
xchg
lds
add
add
out
adc
push
das
test
je
les
add
lock
push
mov
add
push
xor
add
fisttpl
andb
mov
repnz
fnstenv
orb
inc
push
lods
jb
popa
mov
pop
mov
sub
jecxz
fimull
pop
bound
popa
add
add
popaw
in
cmc
pop
push
xchg
adc
nop
into
cmp
gs
adc
mov
pushf
add
adc
add
cmp
pop
add
ss
push
mov
pop
inc
xor
add
das
outsl
dec
ljmp
add
sub
mov
dec
je
js
daa
repnz
mov
pop
les
mov
push
add
add
mov
sbb
fsubs
pop
mov
daa
repz
sar
inc
and
add
pop
lds
and
pushf
xchg
sub
cli
add
add
jecxz
adcl
add
and
add
lahf
lcall
pop
cld
movsl
and
xchg
and
add
jnp
sbb
add
mov
lret
adc
mov
push
nop
popf
jmp
cmpsb
jg
or
jae
add
daa
xor
hlt
mov
les
inc
inc
inc
xor
add
cwtl
adc
shll
and
lahf
call
add
jo
and
call
scas
jne
cmp
ds
cmp
sub
ss
dec
loopne
aad
shrl
xchg
and
dec
sbb
movsb
xor
pop
push
mov
push
inc
or
lea
pop
ds
inc
jno
outsl
int
add
mov
js
dec
sbb
int
lret
hlt
jo
scas
add
lahf
dec
sub
cld
or
add
add
xchg
lds
sub
insb
rcll
cmpl
aaa
push
inc
add
jmp
and
xorl
aad
insl
add
xchg
out
in
jnp
lock
sub
aaa
imul
loopne
loope
mov
repnz
jg
inc
jne
sbb
outsl
cld
mov
push
popf
in
pop
data16
call
in
xlat
add
add
inc
add
pop
in
es
jne
cmp
aas
add
es
pop
cmp
in
mov
stos
popf
loope
addl
add
lods
xchg
iret
mov
test
add
sbb
adc
mov
cs
push
in
sub
or
add
xor
xor
sti
or
pop
add
pop
orb
stc
call
cmpb
add
imul
loope
mov
into
or
ret
xor
add
dec
jo
jns
mov
inc
pop
shrl
xchg
add
and
lahf
add
cwtl
and
and
jmp
aad
pcmpgtw
push
into
fisubrs
push
sub
add
les
jno
mov
push
outsl
lods
daa
push
mov
clc
inc
shrl
cmpsb
daa
or
lret
clc
outsl
js
jo
jns
lahf
aad
test
add
and
or
popf
inc
inc
mov
adc
push
or
rorb
or
mov
mov
jmp
outsb
lock
add
aaa
xchg
jae
shl
adc
loopne
sub
sbb
lods
push
cmp
int
jp
rclb
sbb
mov
jns
mov
pop
and
divb
cmpsl
sub
add
add
ja
pushf
lods
lea
push
jp
sti
ret
lret
add
add
add
push
iret
movsl
movb
nop
incb
loopne
add
add
mov
mov
xor
add
add
pusha
orl
lods
mov
test
sbb
out
jecxz
and
mov
in
cmp
insb
xor
mov
repnz
movsl
add
cmpsb
scas
imul
sti
add
cmp
int
add
icebp
into
dec
in
out
lds
roll
mov
daa
mov
out
add
rolb
adc
jle
adc
sbb
add
jmp
das
add
lock
adc
xchg
add
js
lds
ljmp
adc
mull
leave
fistps
clc
ja
add
bound
mov
imul
sub
inc
movsb
push
nop
mov
cmp
mov
sahf
mov
cli
cs
in
jmp
xchg
pop
add
mov
sub
mov
lret
sub
sbb
add
jmp
xor
pop
mov
add
pop
jne
xchg
and
ja
rorl
dec
into
pop
int
dec
push
fldcw
jne
inc
add
add
mov
add
ret
pop
mov
stos
data16
mov
push
and
ret
xor
test
lods
les
jge
inc
add
pop
pop
mov
add
sbb
and
das
in
xlat
imul
ret
jae
fs
push
dec
lret
scas
popf
xor
ljmp
inc
add
cld
pop
imul
push
pop
push
jnp
or
mov
loop
push
iret
pop
add
push
inc
push
sub
ja
scas
or
pop
add
push
fwait
push
je
add
cmp
add
add
mov
pop
xor
mov
jle
fsubl
mov
pop
and
mov
xchg
icebp
pop
incl
je
inc
shlb
jp
xchg
out
push
js
mov
add
ss
jp
mov
out
mov
shlb
jo
dec
mov
pop
pusha
add
es
xchg
movsb
aaa
roll
or
add
pop
mov
xchg
push
cmp
add
mov
ret
lods
push
adc
jns
hlt
jno
pop
pop
sbb
cli
and
add
outsl
mov
insb
daa
sbb
sbb
cmc
dec
and
sub
test
push
repz
out
adc
ret
dec
fwait
test
pop
and
pop
loopne
insl
mov
add
sub
xchg
jne
stos
xchg
pop
add
pop
stc
jne
or
sub
or
add
ds
cmp
fistpll
and
cmp
jb
jp
push
add
out
dec
adc
ss
inc
incl
subl
inc
cmp
jp
cli
jg
add
notb
add
pop
es
jae
cmp
dec
add
add
adc
repz
add
cltd
cmp
or
add
outsb
popa
add
arpl
push
lea
jne
cmp
shlb
cmpsb
mov
dec
jl
addr16
filds
movsb
add
push
outsl
add
add
add
call
repnz
stos
add
sbb
sbbl
add
enter
inc
enter
in
pusha
std
out
add
add
shlb
adc
sub
add
popf
inc
add
jnp
add
mov
outsl
ds
add
jns
xor
lcall
cmpsb
outsb
cmpb
add
daa
out
fcmovnu
ja
mov
dec
sub
call
push
sbb
add
mov
pop
insb
orb
pop
cli
add
pusha
icebp
add
ss
lldt
push
add
cmp
add
das
xchg
mov
nop
pop
xchg
push
shl
cmc
push
sub
add
lds
jmp
pop
jae
ds
add
cmp
push
adc
mov
jge
inc
aas
push
sti
add
fldl
push
mov
movb
pop
insb
fcomp
add
jns
add
pusha
stos
sub
sub
pop
inc
lea
fdivrl
pusha
call
test
jmp
divl
movl
add
mov
xchg
sahf
aad
js
mov
addl
aas
pop
jno
xchg
mov
into
stos
xor
xchg
movsl
loope
sub
repz
aaa
subl
loopne
add
ljmp
xchg
add
sarl
lds
push
mov
mov
std
pop
aas
add
add
add
mov
cmp
movsb
outsb
pop
xor
adc
inc
add
test
lods
cmpsl
push
add
jbe
mov
sub
aas
repz
or
mov
adc
test
adc
enter
push
pop
js
cmp
nop
gs
out
and
push
jecxz
pop
test
xor
aad
xor
ds
jg
mov
xor
je
inc
mov
cmpsb
aaa
lret
push
or
xchg
add
cmpsl
insb
adc
lods
out
jbe
jae
jnp
inc
push
nop
add
add
xlat
pop
ret
testb
xlat
stos
in
fcomps
and
enter
adc
arpl
hlt
cld
push
movsb
rol
xchg
dec
sbb
inc
add
mov
rolb
fidivrl
and
and
jns
insl
popf
adc
insb
pop
in
mov
loope
add
sub
stos
insl
jne
mov
mov
mov
test
cmp
pusha
push
add
fsubrs
popa
and
fldl
pop
cltd
adc
mov
mov
int3
add
arpl
popa
lahf
push
imul
add
pop
or
nop
pusha
mov
lret
mov
add
mov
pop
inc
add
shl
js
jns
shrl
mov
aas
jg
and
stos
mov
movsl
and
jne
xor
clc
push
push
cmp
fisubrl
sub
add
and
xor
push
lahf
ljmp
sbb
scas
push
add
add
jg
je
out
movsl
adc
add
mov
add
mov
rolb
das
add
and
adc
fwait
add
or
dec
add
or
push
inc
sbb
pop
push
pop
lock
push
mov
pop
mov
add
jo
add
add
arpl
or
push
dec
pop
sbb
cmp
dec
inc
ds
add
add
add
add
push
push
xor
cmp
enter
mov
add
dec
rcl
scas
mov
in
or
dec
push
jecxz
stc
decb
and
mov
decb
or
cmp
test
mov
mov
aad
xor
mov
xchg
cmpsb
rcll
push
sbb
divl
and
add
or
pop
arpl
mov
push
cmp
pop
mov
mov
lds
add
mov
and
push
adc
add
push
outsb
fwait
add
jmp
mov
add
add
push
push
add
fcmovnu
mov
mov
cmovl
ja
hlt
mov
mov
add
and
mov
loop
or
adc
pop
sub
popa
in
add
popa
movsb
sub
mov
cmp
mov
sub
dec
rolb
push
enter
add
imul
mov
cmc
inc
jp
pop
lahf
iret
pop
aam
add
rolb
lret
cmp
add
rcrb
sbb
xlat
or
add
pop
mov
clc
sbb
cmc
add
js
andb
mov
mov
jmp
push
imul
in
jo
add
cwtl
sub
jno
add
bound
sbb
mov
cs
fldcw
push
add
add
add
push
les
add
jbe
push
mov
xchg
mov
push
iret
add
mov
xchg
push
and
pop
add
mov
sbb
loop
xor
and
ret
push
ficoms
test
in
vmread
insb
lret
in
js
add
lods
jae
push
mov
repnz
loope
add
shlb
loopne
rcl
jnp
incb
notb
out
inc
mov
adc
in
adc
cmpsl
inc
imul
mov
hlt
sub
jl
mov
mov
into
inc
lods
add
bound
jmp
add
loope
icebp
les
add
dec
pusha
pusha
sub
mov
subb
out
in
scas
xchg
lock
jbe
stos
rolb
mov
aas
scas
fwait
gs
add
cwtl
or
test
jl
sbb
scas
shr
jge
add
aad
mov
cltd
sbb
pop
inc
jge
mov
add
sub
sbb
cmp
test
pusha
mov
add
jo
sub
and
add
data16
sbbl
add
inc
mov
inc
pop
pop
pop
mov
jbe
sub
add
rolb
xor
jg
mov
iret
or
and
pop
insl
add
stc
sub
inc
subb
mov
add
imul
ja
bound
sub
jmp
push
jecxz
dec
mov
lods
add
stos
movb
jle
xchg
fidivl
add
push
mov
insb
rcrb
pop
cmp
cmp
out
add
sub
sbb
add
lahf
lret
add
add
adc
dec
jmp
cmp
mov
pushl
xchg
add
and
sbb
cli
dec
cmp
call
pop
mov
in
test
lcall
mov
loopne
and
pop
cmc
add
in
sbb
pusha
add
into
dec
add
cld
js
sahf
adc
mov
movsl
push
jbe
fisubrs
in
dec
stc
jo
add
inc
jle
xor
jb
test
ja
fdivl
jb
pop
fistl
add
cmp
push
cltd
adc
xor
push
insb
loop
add
lret
add
cwtl
add
pop
lea
mov
adc
sub
js
mov
add
es
add
mov
test
ret
jne
mov
lret
push
mov
data16
pop
push
fdivl
mov
daa
add
push
cmc
jmp
pop
mov
ljmp
fistl
add
add
sbb
lldt
push
xchg
cmp
negb
sbb
mov
add
mov
pop
add
add
into
mov
add
mov
add
pushf
das
pop
add
add
in
add
sbb
cmpl
jle
pop
xor
addb
pop
jl
pop
mov
sti
dec
fs
scas
push
lods
sub
cmovbe
out
test
mov
push
aad
bound
fcmovu
add
ficoml
ret
or
pushf
cmc
jae
mov
xchg
pop
dec
loope
test
lahf
add
push
incb
mov
mov
int
add
fisubrl
mov
jo
jbe
add
addb
fisttpl
mov
push
ja
mov
cld
andl
mov
mov
rorb
into
int
pop
data16
nop
push
push
fbld
mov
mov
xchg
pop
add
daa
sbb
ss
add
xor
add
add
xlat
ret
xchg
or
das
mov
imul
push
or
ret
inc
cmp
jae
jecxz
jb
mov
sbbb
pushf
adc
mov
scas
jnp
add
xor
add
add
push
inc
icebp
jno
shl
add
mov
lds
add
ret
je
jnp
aas
enter
test
lcall
test
and
push
out
nop
fsub
iret
gs
push
aaa
ja
cmp
add
call
xchg
add
fdivrs
xchg
push
les
cmp
push
out
adc
inc
aaa
mov
inc
in
mov
mov
fisubl
popf
aas
add
mov
mov
data16
out
mov
cmp
add
inc
adc
je
ret
mov
or
mov
mul
add
adc
jmp
pop
xor
daa
mov
sbb
dec
xor
andb
movsl
mov
loopne
xor
sbb
adc
push
jge
lldt
sub
gs
jno
xchg
inc
incl
inc
loop
lds
shr
cltd
jne
pop
mov
or
sub
aad
repnz
dec
mov
add
inc
test
sbb
ret
and
rorl
xor
cs
outsl
xlat
add
out
add
inc
testb
adc
arpl
inc
out
lret
jmp
sub
flds
inc
cmp
sarl
cmp
cli
imul
xor
sbb
pusha
adc
sub
add
cmp
or
aas
fwait
ss
stos
or
mov
inc
cwtl
add
inc
xor
jo
in
adc
inc
lcall
add
xchg
sub
pop
push
frstor
add
in
jo
push
jns
outsb
ret
lcall
std
add
fists
inc
mov
pop
cmp
outsl
mov
jge
es
loop
sahf
into
push
add
aad
and
and
aam
adc
add
add
mov
add
jno
mov
and
mov
adcl
xor
add
data16
and
cs
add
adc
mov
push
jo
jo
jns
inc
popf
xchg
sti
cmp
jnp
inc
sbb
dec
push
dec
es
andb
adc
in
add
out
xchg
add
gs
rorb
add
xchg
xor
xchg
mov
sbb
jg
dec
add
pop
repnz
popa
sbb
and
add
lds
test
add
sahf
add
stos
or
je
mov
cmp
mov
mov
mov
mov
push
aam
test
clc
jns
add
test
push
stc
mov
add
aaa
fiaddl
or
or
mov
mov
add
push
in
mov
xchg
fwait
cltd
dec
pop
aas
loope
jbe
dec
lahf
sti
add
xchg
cmpsb
xchg
dec
adc
sub
sbb
add
pop
flds
add
ss
shll
cmpsl
adc
or
sub
and
mov
insb
mov
mov
rolb
fs
in
addr16
add
add
in
clc
pop
add
jns
add
loope
xor
xor
xor
sub
lahf
adc
mov
mov
mov
js
lods
jb
aaa
dec
or
in
fisubrl
pusha
sbb
jo
loop
std
loopne
add
pmuludq
dec
sahf
push
mov
aam
aas
pop
cmpsb
push
adc
lea
xchg
add
cs
out
dec
xor
jns
dec
push
dec
cli
lods
push
movsb
and
add
add
sbb
xor
adc
xor
ret
adc
scas
iret
dec
div
aam
mov
lea
leave
pop
gs
add
or
fsubrs
shll
add
add
adcb
cmpsl
and
sbb
push
jb
dec
cmp
xchg
mov
inc
imul
add
sbb
sub
test
mov
in
in
mov
int
pushf
or
sbb
aam
fcomp
adc
add
mov
movsl
jnp
repnz
inc
enter
add
sbb
add
repz
cmp
loopne
add
and
adc
movsb
ds
sbb
add
hlt
sbb
and
pop
and
mov
add
pop
sbb
enter
mov
dec
cmpb
jmp
xorl
divb
add
and
or
leave
mov
add
xchg
add
mov
bound
mov
loopne
loopne
add
jns
fwait
stos
int3
cmp
sub
inc
mov
sub
inc
mov
out
mov
addl
mov
inc
xchg
out
xchg
add
dec
jnp
push
adc
or
add
or
dec
add
and
lret
mov
push
sub
push
inc
xchg
mov
mov
xor
test
xor
add
lock
sub
ljmp
cmp
sub
cmp
jg
in
push
add
aas
and
or
pop
popa
pop
cmp
inc
push
cmpsb
pop
or
cmpl
jg
or
inc
sub
dec
or
addr16
mov
xchg
fwait
and
xchg
mov
fsubs
xchg
mov
mov
fildl
push
ljmp
or
inc
int
insl
push
icebp
xor
cmp
aad
jge
inc
incl
insb
add
xor
dec
popf
add
cmp
push
add
iret
movsl
push
fdiv
cmc
lock
roll
arpl
adc
push
adcl
int
out
shrb
add
add
dec
add
sub
or
push
push
sahf
inc
add
es
cmc
add
xchg
mov
mov
lret
clc
mov
add
pushf
outsl
cmpsb
push
push
push
pop
jae
sarb
pop
sub
xchg
test
outsl
add
dec
push
add
add
in
mov
inc
inc
mov
mov
cld
or
iret
lds
add
ret
add
in
sbb
jo
pop
sbb
add
insl
sarb
push
jne
add
daa
mov
add
and
mov
add
imul
jbe
pop
add
in
loope
or
jnp
jns
pop
out
jmp
pop
outsb
mov
jecxz
push
sarb
pop
jmp
push
sub
daa
sbb
add
fwait
cwtl
jl
add
test
lret
hlt
cmp
push
incb
paddusw
sbb
add
mov
sti
mov
add
cmp
repnz
add
mov
sub
or
daa
lock
sub
test
mov
push
push
les
or
loop
mov
pop
lods
pushf
out
testl
dec
rolb
lcall
and
test
add
lret
icebp
jg
jl
jno
add
lahf
sub
mov
mov
cmpsb
pop
add
add
aas
mov
pushf
or
add
add
mov
add
adc
xchg
pop
mov
aaa
fcompl
mov
fidivl
or
rcrl
repnz
aam
adc
lahf
enter
mov
adc
push
inc
lcall
push
xchg
mov
cltd
into
dec
repz
sbb
add
rorb
mov
mov
push
mov
mov
imul
add
cmc
testl
jp
nop
shll
addl
in
add
sub
mov
xlat
mov
mov
in
cmpb
add
mov
add
in
shll
mov
sahf
lret
insl
add
iret
jne
jnp
push
sub
pushf
mov
adc
lret
xor
stos
jl
lcall
cmp
or
and
push
mov
jae
sbb
es
lahf
add
xorl
lret
jbe
cmp
add
lods
pop
ds
or
xor
sahf
cmp
lretw
add
stc
out
daa
mov
add
ret
fbld
call
popl
sbb
add
jecxz
lret
push
aas
test
xor
movl
enter
and
push
sbb
test
mov
mov
or
adc
push
imul
or
shlb
add
dec
dec
shll
pop
jp
pop
cmp
outsl
xor
sbb
cmp
add
add
add
cmpsl
cmpsl
fisttps
lret
mov
xor
pop
lods
dec
fisubrl
dec
push
outsb
add
mov
cwtl
out
adc
sbb
mov
out
push
lcall
or
lahf
mov
add
push
or
pop
pusha
dec
mov
lds
xchg
ja
sub
scas
pop
lods
loopne
stos
and
cmp
iret
add
ret
and
imul
jo
or
pop
xor
ret
dec
pop
repz
push
cmp
push
in
imul
rcll
sbb
ret
push
add
sub
push
cld
pop
ljmp
sbb
icebp
test
subl
pop
mov
test
xor
inc
insb
js
sbb
add
push
sar
inc
ja
aaa
loopne
push
jne
arpl
into
in
fldcw
out
adc
movsb
std
sub
repnz
insl
add
dec
call
pop
ret
jl
push
xchg
aam
jbe
mov
or
cmp
xchg
or
add
outsb
sar
mov
lcall
jge
adc
push
xor
out
das
pushf
das
iret
and
orb
adc
es
enter
add
outsl
add
dec
jp
xchg
test
shlb
mov
scas
or
ficompl
outsb
add
dec
popa
lcall
mov
adcb
sbb
andb
lods
loope
and
mov
jp
push
and
sbb
dec
cmp
stos
xor
mov
cmp
cmp
mov
lret
ret
sub
fistpll
iret
jb
jne
jmp
push
roll
xchg
cvtps2pd
xchg
jle
loope
add
cmp
add
adc
and
sub
xor
fldl
hlt
sbb
pop
xchg
insb
shr
addl
xchg
push
xchg
ljmp
jbe
jno
leave
add
mov
and
add
add
cli
pop
loop
lods
sub
fmulp
aad
test
jg
mov
adc
sbb
xchg
cmp
pop
fld
idivl
cmpsl
xchg
add
and
xor
cmp
data16
cmpsl
sub
jns
test
cmp
out
negl
cmc
aad
add
jl
xchg
aaa
dec
lcall
ds
scas
mov
mov
repnz
popa
mov
add
sub
hlt
movsl
in
stos
add
add
sub
add
xchg
adc
mov
add
mov
mov
mov
add
ds
popf
incb
xchg
cs
in
imul
pop
add
in
pop
js
lcall
pop
mov
push
in
imul
add
dec
fsubl
into
cmp
leave
cltd
jnp
mov
mov
repz
cmp
nop
jl
daa
call
add
aaa
scas
push
add
jge
ffree
add
cmp
add
sub
xchg
rorb
sub
cwtl
add
add
aaa
or
ret
adc
mov
dec
or
mov
mov
not
push
inc
fdivrs
inc
sub
add
popa
add
mov
and
add
push
mov
jns
add
outsb
outsb
add
jnp
mov
add
inc
jne
dec
int3
outsl
xor
push
pop
xor
outsb
cs
push
pop
stos
mov
rorl
push
mov
ss
adc
aad
rolb
sub
pop
cmpsl
xlat
push
call
es
xor
adc
pop
xchg
shlb
js
add
or
insb
fisttpll
add
sahf
fucomip
adc
add
dec
icebp
ret
add
cmp
nop
sub
mov
pop
leave
xchg
add
cmp
lret
xchg
cmp
push
xor
pop
mov
inc
add
mov
or
mov
and
adc
pop
loope
sbb
adc
adc
xchg
dec
movsb
add
dec
add
jle
insb
xor
add
pop
or
orb
and
jmp
xchg
add
pop
lret
lea
or
adc
incb
mov
dec
mov
pop
pop
int
mov
xchg
mov
lcall
inc
mov
and
dec
push
lcall
mov
sub
jmp
adc
inc
dec
rcrb
mov
shrb
push
dec
cmp
or
push
jns
sub
sbb
cmp
add
sbb
mov
add
add
push
add
icebp
cmp
ja
sbb
jl
add
mov
test
mov
inc
inc
jne
popf
inc
rcl
add
jg
add
cmp
mov
pop
add
fcoml
mov
sub
mov
add
add
dec
xlat
fimuls
cs
loop
add
jmp
jnp
les
push
or
push
cmc
xchg
fwait
xorb
add
add
mov
cld
out
sbb
add
inc
pop
sbb
push
mov
sbb
pop
inc
inc
mov
aam
xor
adc
lcall
inc
mov
cmp
daa
bound
add
add
jae
cmp
lods
mov
sbb
sbb
lahf
dec
popa
xor
xor
ficomps
jns
sub
into
fistpl
sahf
rolb
fldt
leave
add
imull
cltd
xchg
sti
in
bswap
fcomps
add
mov
ss
mov
mov
add
movb
lahf
js
fstpt
add
popa
add
inc
and
mov
mov
dec
je
imul
xor
add
add
sarb
xchg
lods
pushf
mov
inc
jge
rcr
add
lods
sbb
cmp
dec
mov
add
push
testl
add
fiadds
push
mov
imul
ja
aam
cmp
out
cmp
aas
add
ret
inc
mov
pop
mov
sbb
inc
iret
nop
js
mov
cmp
stos
push
mov
addr16
pop
sub
adc
fldl
sti
xor
mov
add
pop
fcompl
xor
aas
or
mov
fmuls
add
add
nop
pop
push
cmp
mov
mov
add
js
xchg
sub
iret
icebp
aas
ss
jbe
outsl
jmp
pop
lahf
push
xor
adc
push
or
push
add
add
out
add
adc
pop
add
mov
dec
rol
push
in
stos
fadd
jb
lcall
scas
add
push
mov
daa
or
jb
in
inc
inc
and
aam
jns
test
add
pop
cwtl
or
add
sti
lock
mov
mov
imul
rorl
jmp
adc
fldenv
adc
mov
stos
push
popa
aas
popf
sub
jo
xor
add
cmp
mov
add
test
daa
push
jecxz
popf
jmp
inc
xchg
push
fwait
popf
sbb
xor
push
mov
add
cmp
std
cli
pop
push
sub
cld
jae
test
lret
divb
pop
mov
sahf
cld
push
xchg
loopne
bound
test
add
mov
add
ret
jne
push
out
arpl
psrad
sbb
add
jb
mov
negl
fst
fcmovu
subb
rolb
sti
decl
fwait
sub
scas
fcompl
test
add
scas
add
pop
sbb
sbb
loop
mov
mov
aad
out
fstpt
leave
sbb
add
cmpsb
ret
fildl
and
test
shlb
xchg
adc
xchg
inc
and
loope
dec
adc
mov
cmp
push
jb
and
sub
cs
fcompl
jmp
inc
nop
sub
mov
push
lret
or
insb
jnp
shll
in
mov
pop
cmp
leave
inc
add
mov
jmp
pop
sub
or
add
add
stos
arpl
mov
scas
fwait
and
adc
movl
cmp
mov
cmp
add
mov
jnp
add
mov
imul
add
mov
add
aaa
xor
sub
addr16
std
pop
mov
cmpsb
mov
movsl
sbb
jecxz
cmpl
inc
cmp
and
jge
cmp
adc
jae
xchg
cld
mov
inc
mov
xor
pop
jnp
jl
popl
adc
xchg
out
rorb
aad
rcrb
daa
add
dec
ret
adc
ds
sub
sbb
orl
jg
lock
push
shll
sbb
pop
insl
sbb
sub
shrb
add
add
lods
roll
mov
lods
das
cmpsl
test
out
push
add
aas
hlt
add
scas
mulb
jp
cmpsb
je
mov
add
leave
lock
and
in
cmp
int
cmp
cmp
outsl
mov
push
movsl
mov
scas
pop
ret
xchg
das
jecxz
clc
subl
frstor
jle
lea
jle
sahf
lret
les
loope
rolb
subl
clc
lods
add
les
or
ds
add
inc
push
fs
or
add
add
push
and
jecxz
fucompp
into
les
xchg
xchg
sbb
shl
add
add
fsts
adcb
push
filds
arpl
cmp
or
ss
add
sbb
xchg
add
fistps
cltd
jae
stc
push
loopne
add
or
lea
addb
mov
loope
stos
mov
pop
xchg
imull
add
add
mov
lock
lret
push
mov
xchg
fs
str
aad
sub
popf
in
f2xm1
fwait
je
xchg
test
xchg
out
push
push
jne
xchg
xlat
out
and
outsb
fwait
mov
in
sbb
dec
xchg
pop
add
fcos
pop
arpl
mov
jnp
cld
sbb
mov
xlat
aaa
xchg
add
addb
pop
add
cmp
mov
push
add
data16
outsb
adc
sbb
add
mov
add
pop
jae
add
pop
pop
or
push
inc
sub
add
leave
push
mov
cmpsl
or
add
add
lods
xorb
pop
incl
push
mov
mov
dec
sub
test
jge
and
xchg
cs
lds
mov
icebp
inc
add
add
popa
or
add
jge
test
popl
push
testb
sub
sub
aad
add
iret
mov
sub
rclb
add
loopne
xchg
or
adc
mov
sbb
pushf
sbb
inc
sahf
test
mov
in
pop
clc
dec
data16
sub
adc
fsubl
mov
sbb
jle
sub
mov
outsb
in
pusha
jbe
pop
aas
gs
mov
xchg
add
fcomp
cmc
push
pop
lea
mov
dec
xchg
adc
das
add
cmp
add
xchg
jb
mov
rolb
pop
jb
jne
fs
mov
pop
hlt
pop
arpl
int
push
cs
push
inc
roll
jb
daa
adc
cmpsl
dec
out
xchg
inc
xchg
and
jb
or
adc
add
inc
xor
add
xchg
sub
or
mov
xchg
sti
subl
int3
out
add
inc
out
add
mov
adc
in
dec
xor
pop
jae
add
add
in
xor
insb
inc
popf
pop
repnz
add
hlt
mov
and
sbb
ret
pop
je
cld
call
push
add
mov
out
jo
xor
mov
push
mov
neg
jle
jge
add
xor
iret
add
imul
cmp
shrb
fimull
add
mov
xchg
jle
scas
add
stc
push
orl
test
or
adc
sub
add
rcrb
push
push
add
dec
insl
ds
int
rclb
or
mov
cltd
test
ret
pusha
sbb
imul
inc
addr16
cmp
cmp
pop
clc
addl
sti
in
sahf
add
mov
mov
cmp
add
push
jmp
aam
mov
lcall
pop
test
movsb
xchg
fadds
inc
sub
add
repz
jbe
in
mov
sbb
fs
add
jo
nop
lods
dec
sti
int3
mov
adc
arpl
add
adc
xor
pushf
xchg
cmp
or
add
pop
add
les
jne
scas
mov
cmpsl
add
nop
xchg
xor
cmpsb
test
add
pop
cwtl
leave
scas
movsl
inc
fadds
sbb
jle
popf
lods
xor
mov
sub
faddl
xchg
cmp
out
mov
fists
dec
jns
inc
mov
add
inc
cmp
movsl
cmp
mov
mov
or
int
aam
movsb
dec
push
rorb
add
mov
out
adc
movsl
add
lret
sbb
pushf
add
xor
shl
aad
push
add
jne
xlat
mov
push
sub
add
mov
jbe
popf
add
divb
jbe
xchg
add
notl
les
cli
subb
popf
add
sar
jno
fstps
add
in
jl
pop
cmpl
and
fcomps
add
or
push
aam
out
repz
pop
pop
inc
push
gs
imul
incb
out
add
push
daa
fdivl
out
sbb
cmp
pop
mov
ss
arpl
repz
cmp
xchg
pop
add
or
xchg
and
fcompl
mov
aaa
lret
cmp
pop
mov
jmp
add
lods
cmp
dec
frstor
push
jne
inc
cmc
cmp
arpl
add
aas
lea
add
addb
incl
mov
add
mov
test
arpl
fnstsw
clc
pop
inc
add
imul
sub
add
jno
cmp
sbbl
add
int3
fsubrl
cltd
sbb
sti
add
cwtl
js
bound
stos
inc
add
xchg
subl
jno
push
cmp
add
add
cmpsl
imull
add
and
int3
dec
cmc
lcall
lock
xchg
lods
pop
iret
add
add
cmp
andl
adc
ljmp
or
mov
cmp
mov
adc
fwait
sbb
sti
mov
lahf
orl
add
xor
push
mov
add
sbb
out
dec
xchg
push
xor
jo
fs
push
add
inc
push
std
and
fstps
arpl
mov
mov
ljmp
and
cmp
sbbl
mov
xchg
jecxz
enter
dec
rol
loop
xor
int3
fs
jp
mov
sbb
cmp
xor
out
int
add
dec
pop
push
outsb
mov
roll
jmp
cmp
ret
nop
pop
add
pop
jne
test
xchg
lcall
repz
inc
testl
push
add
push
test
in
push
add
loope
cltd
inc
sbb
xlat
add
cmpsl
add
cmp
jg
add
cmp
mov
add
sbb
sti
add
adc
loop
jae
add
sbb
sub
add
adc
repnz
cmp
call
cmp
add
add
cltd
mov
add
jb
or
movsl
imul
or
add
mov
jle
inc
sub
jl
and
std
iret
add
pop
mov
and
sahf
dec
pushf
xor
add
hlt
fnstcw
rcll
das
icebp
pop
push
and
or
adcb
add
pusha
int3
ja
int
mov
xchg
add
add
and
add
jns
out
js
fisubrs
out
test
out
add
and
sti
sbb
cmp
push
mov
add
into
inc
add
arpl
cwtl
enter
mov
ds
xlat
fs
add
pop
add
pop
ss
insl
outsl
inc
push
cmp
add
push
xor
add
ret
ficompl
add
add
ror
loope
enter
xchg
jnp
dec
pop
dec
push
add
popf
jo
fsts
mov
sbb
mov
movsl
icebp
xchg
mov
add
lcall
pop
out
dec
jp
outsl
xchg
xchg
stos
xchg
repnz
or
inc
mov
arpl
les
in
shlb
dec
inc
add
pop
les
in
xor
xor
adc
push
rcll
mov
sti
clc
jp
or
add
add
add
mov
loope
or
inc
ret
adc
stos
test
xchg
adc
xlat
xor
rep
push
add
mov
in
jo
add
xor
add
les
xchg
xor
movsl
add
movsl
mov
cs
imul
popa
sub
notb
adc
rcrb
inc
divb
sbb
inc
adc
dec
mov
lds
push
loope
push
add
lret
imul
hlt
push
lret
lds
pop
mov
outsl
inc
sub
xchg
or
add
jge
daa
pop
divb
aaa
inc
mov
int
lret
jns
icebp
add
pusha
fistpll
and
sub
jg
sbb
add
add
pop
addl
cltd
mov
inc
push
testb
mov
repz
ret
pop
ret
lods
hlt
xor
mov
pop
lahf
mov
je
jb
nop
cli
jne
sbb
leave
test
sbb
add
mov
xor
iret
cwtl
mov
int3
std
arpl
xor
test
jns
xor
push
rcrb
jnp
aad
fimuls
add
insb
xlat
mov
nop
test
test
add
bound
daa
add
inc
push
xor
inc
cld
lret
rorb
cli
iret
or
enter
add
lea
push
popa
in
iret
adc
push
dec
je
cs
mov
sub
pop
pushf
int3
dec
push
xorb
mov
dec
jl
pop
mov
dec
sti
xor
jbe
jp
js
adc
fldl
data16
scas
pop
ja
jnp
add
cmpsb
dec
pop
add
loopne
mov
add
cld
les
add
add
cli
push
ds
mov
aaa
ret
sbb
lea
xchg
fimull
push
add
inc
xchg
add
nop
addb
jg
add
and
dec
add
sbb
xor
lds
jmp
mov
jmp
sbb
mov
adc
adc
cld
out
dec
xchg
ret
dec
add
mov
lods
sub
xchg
les
push
or
push
mov
sbb
add
aas
jmp
cmp
movsb
and
pop
lcall
add
cmpsb
stos
and
popf
mov
fcoml
call
jmp
es
cmpsl
add
loop
adc
jbe
and
add
xor
ja
int3
pop
pop
sti
bound
xlat
inc
test
imul
icebp
cltd
add
sbb
ret
cmp
sti
inc
mov
inc
mov
jno
enter
dec
popa
sbb
arpl
cwtl
int3
ret
mov
pop
lret
xchg
sahf
add
mov
fisubl
add
dec
in
loopne
xlat
pop
call
push
jecxz
xchg
fsubs
or
mov
push
push
mov
mov
or
mov
pop
add
popa
je
maskmovq
into
sarb
into
sti
add
mov
fcomip
inc
cmp
lea
mov
adc
add
into
push
or
mov
push
pop
pop
inc
add
jbe
cwtl
push
jbe
das
mov
push
stos
mov
xor
jmp
loopne
outsb
mov
lds
mov
or
pop
cmp
mov
int
jo
mul
xor
ja
sub
das
fisttps
push
pop
pop
push
push
push
mov
out
daa
add
add
adc
xor
xchg
add
test
jns
mov
xor
sbb
add
mov
in
adc
add
sub
add
add
repnz
fsts
add
dec
subl
push
into
push
movsb
mov
push
mov
pop
gs
ret
or
ljmp
adc
fstpt
cmp
sub
sub
movsb
mov
sbb
out
pop
add
lcall
mov
scas
shl
jnp
mov
inc
je
mov
andl
push
add
aas
cmp
xlat
mov
add
sbb
jno
ret
cmc
imul
add
loop
jbe
push
add
pusha
push
add
shl
stos
and
faddl
inc
mov
loopne
test
adc
lea
fiaddl
stos
add
push
xchg
push
mov
add
jle
cmp
sub
fadds
sbb
leave
add
adc
sbbb
sub
sub
push
cs
scas
dec
mov
jmp
sbb
push
int3
jae
mov
sub
inc
mov
and
add
orl
and
test
and
add
fsubrl
sbb
ljmp
mov
push
shll
sbb
inc
jmp
div
or
nop
xor
push
fnstsw
data16
pop
pop
inc
out
sahf
sarb
outsl
aaa
cwtl
aam
adc
sub
pop
jp
inc
sub
rclb
fcompl
out
jl
fstpt
lret
and
aaa
bound
std
mov
inc
popf
in
shrb
pusha
pop
mov
lock
or
or
mov
dec
dec
clc
add
add
in
xor
jmp
add
outsl
pop
cld
data16
sub
dec
or
out
sbb
int
adc
pop
fimull
add
add
jnp
push
cmc
call
mov
add
decl
mov
cmp
lret
stc
sbb
inc
add
adc
movsl
add
lods
dec
mov
or
cmp
jb
gs
lods
mov
in
lea
inc
add
aas
xchg
adc
mov
add
add
or
stos
lds
add
jnp
mov
in
xchg
or
sbb
cmp
and
ret
sbb
add
add
testl
mov
add
mov
pop
movsb
push
pop
xchg
ret
and
cld
add
cmc
enter
mov
daa
inc
cli
cmp
cwtl
and
rolb
push
fiaddl
mov
xchg
add
ljmp
insl
push
outsb
xchg
mov
in
push
xchg
repz
dec
addl
push
add
pop
add
loope
imul
insl
filds
lods
or
jp
add
add
pop
pop
pusha
xchg
je
pop
inc
xchg
mov
and
dec
fdivs
std
jae
or
lods
add
jle
mov
add
sbb
mov
add
xchg
mov
push
and
cmp
sbb
ret
and
out
ja
mov
fsubrl
cmp
fnsave
dec
rcll
add
sbb
in
cmp
fimull
mov
add
stc
popf
add
sahf
rolb
loop
sti
pop
jne
sahf
add
mov
dec
inc
jecxz
int
sbb
rcrb
add
sub
push
mov
testl
add
fadds
lods
inc
cmp
mov
dec
xchg
add
sbb
imul
add
scas
shrl
popf
sub
in
sub
add
or
fucomip
fiadds
ja
mov
add
pop
mov
sbb
xchg
push
loopne
mov
sbbb
pushf
jae
nop
xchg
lahf
cmp
lea
repnz
test
in
arpl
sarb
popa
sub
stos
mov
insl
mov
outsb
subb
mov
aad
push
push
push
jle
sbb
dec
ja
add
xor
shrb
ljmp
jle
pop
lcall
rol
in
xor
cmp
les
mov
popa
pop
inc
clc
sub
cltd
push
stos
inc
jnp
insb
push
dec
jl
add
xlat
pop
or
pop
add
sub
or
pop
mov
imull
std
cmpsl
add
iret
or
add
push
setle
xor
sub
inc
adc
or
pop
xor
adc
mov
outsb
jp
fnsave
or
loop
pop
mov
call
imul
shr
into
out
pop
fnstsw
cmp
mov
add
data16
sub
dec
mov
shlb
dec
dec
cmp
add
xchg
cmp
mov
out
and
inc
jno
sbb
inc
test
add
repnz
and
add
addr16
or
xchg
add
inc
add
popf
inc
fwait
mov
fistps
js
jp
test
leave
aas
mov
pusha
fimuls
cmpsb
pop
sub
outsb
add
adc
or
scas
testl
cltd
shll
adc
xor
add
add
cmp
add
popf
pop
sbb
in
repz
popl
and
push
push
jnp
lret
pop
jp
add
inc
sbb
add
mov
testl
sbb
cmp
dec
out
add
das
mov
aaa
lods
sbb
xchg
call
int
lods
mov
dec
push
test
add
dec
pop
dec
nop
repnz
and
aad
mov
sub
xchg
lcall
and
icebp
inc
sbb
es
mov
add
xlat
mov
jne
cmc
sbb
sub
pop
inc
sub
enter
rorb
fisubrl
xchg
addr16
add
mov
push
mov
jns
pxor
pop
mov
add
xor
mov
add
icebp
in
scas
inc
loop
jge
add
lock
add
pop
sub
cmp
out
cmp
jl
inc
adc
stos
cmpb
sahf
sbb
in
out
xor
adc
mov
add
xor
fwait
sub
hlt
out
int3
add
test
sarl
cli
or
add
add
mov
loopne
add
test
jmp
stc
push
dec
ret
jmp
cli
mov
out
push
pop
jo
cs
movsb
mov
ret
insb
test
inc
in
xchg
and
test
pop
add
pop
add
ja
xchg
sbb
faddl
insl
aas
ljmp
mov
out
out
popa
add
lds
bound
mov
jno
xchg
sub
push
cmp
adc
es
push
stos
push
ljmp
mov
add
cwtl
aam
ds
mov
pop
aad
sti
mov
add
push
out
inc
sbb
mov
inc
sbb
sbb
push
adc
add
pop
stc
movsl
mov
lret
cmpsb
add
mov
add
lret
adc
fsub
sbb
xchg
ficoml
repnz
shll
xchg
sub
cmp
test
daa
out
add
dec
lea
out
mov
arpl
jnp
dec
mov
orb
add
add
ja
sbb
push
mov
mov
xchg
mov
sbb
or
roll
mov
add
xlat
and
push
add
lcall
pop
mov
xor
add
js
jle
pushf
and
pushf
add
bound
mov
add
push
lods
lcall
mov
in
out
or
fwait
sub
push
xchg
adc
cmp
xor
mov
cmp
push
das
cmp
sti
imul
and
jl
adc
push
push
std
jle
loopne
push
out
add
adc
iret
aas
sti
mov
call
fadds
mov
inc
fwait
cs
dec
xchg
mov
mov
lods
xchg
inc
stos
mov
push
fcoms
add
repz
rcll
sysenter
add
nop
cmc
add
dec
loop
push
sbb
addb
and
sub
enter
clc
add
mov
repz
add
dec
adc
xchg
or
jecxz
adc
in
add
add
inc
outsl
cld
fsubs
xor
add
sbb
jbe
inc
adc
filds
and
lods
inc
xlat
jle
ljmp
adc
pop
loopne
sahf
dec
add
dec
sbb
andl
inc
sti
add
add
or
stos
cmpsl
xor
scas
mov
imul
pop
mov
lret
mov
int3
insb
movsb
mov
xchg
pop
xchg
or
jmp
aam
add
ret
test
enter
pop
dec
and
daa
add
jno
rcrl
add
repnz
movl
push
cld
add
jg
jae
incl
sbb
add
faddp
adc
adc
pusha
cwtl
sub
inc
add
push
jp
mov
add
lods
mov
jne
popa
add
sub
mov
test
cmp
pop
stc
xchg
or
je
inc
jo
outsl
out
pop
mov
add
test
xor
cmp
push
mov
lock
icebp
mov
bound
add
cmp
lret
out
mov
aad
add
scas
push
divl
stc
fcomps
lret
out
mov
lret
test
sub
outsl
add
mov
cld
add
push
cmc
add
mov
rorl
dec
and
pop
add
xchg
adc
arpl
dec
stos
add
sbb
pop
in
xchg
sbb
rcl
lds
pop
adc
incb
mov
inc
aas
cmpsb
and
inc
cmp
jp
pusha
xchg
xor
cld
test
imul
shrb
sub
pop
pop
dec
test
popf
movb
imul
ljmp
flds
out
jne
mov
daa
xlat
mov
fcompl
add
sbb
js
cmp
adc
inc
add
or
aam
aad
dec
add
jge
inc
je
cmp
add
cltd
sbb
in
scas
sti
fdivl
jbe
aad
pop
add
cmp
sub
mov
jp
sbb
sub
into
inc
sub
in
push
push
je
pop
and
adc
jmp
lret
test
pop
arpl
and
cmp
pushf
or
cmp
sbb
and
jo
sbb
xchg
sub
add
add
sarl
jnp
add
or
adc
adc
sub
test
sti
mov
add
aaa
sbb
add
iretw
movsl
roll
cltd
xchg
clc
cmp
xor
repnz
in
fidivs
add
es
add
push
sbb
repz
pop
cmpsb
add
insl
cmc
adc
fisttps
dec
cld
cmp
inc
add
cmp
loop
mov
flds
or
pop
add
pop
xchg
fs
stos
fwait
jnp
push
mulb
test
outsl
pop
xor
arpl
push
sub
push
repz
scas
rorl
inc
jmp
cmovo
pushf
inc
ret
ret
stos
xor
jmp
add
add
jo
push
add
fiaddl
mov
add
cwtl
add
lock
and
lods
add
dec
dec
sbb
pop
sub
mov
je
or
aam
into
leave
incl
jmp
add
roll
xchg
inc
sub
repnz
mov
je
cmp
sbb
cmpsb
add
sbb
test
mov
outsb
mov
add
add
iret
adc
add
mov
popl
mov
outsb
sbb
mov
cltd
rol
pop
jmp
mov
mov
jge
mov
ds
add
clc
pop
fstpl
sar
inc
push
flds
stos
adc
cmp
inc
cmp
cmp
shlb
mov
push
add
shll
mov
fcmovnu
fiadds
les
add
inc
stos
add
jb
add
cmp
sub
in
sbb
add
push
fildll
add
insl
mov
mov
out
xor
push
insl
lods
mov
jp
xchg
mov
pop
mov
mov
imul
test
clc
outsl
imul
add
xor
xchg
add
push
faddl
push
fnstenv
sbb
push
sahf
icebp
add
cmpsl
testb
add
pushf
jae
cltd
ficoms
lret
cmp
lods
enter
outsb
inc
mov
jmp
hlt
mov
push
add
inc
xor
xchg
and
imul
rolb
or
aaa
inc
dec
mov
popa
jmp
lret
add
in
add
jle
xchg
out
aam
test
lods
ljmp
push
mov
inc
xchg
add
hlt
sub
add
adcb
add
cmp
hlt
fnstenv
push
jo
add
mov
pop
ror
sbb
xchg
fldcw
add
test
pop
lds
shll
mov
add
add
lods
stc
push
lcall
pop
add
inc
add
imul
dec
orb
xor
inc
mov
push
cmpsb
xor
add
and
andb
push
mov
add
ret
fsubr
xor
shrl
aas
mov
aad
sbb
add
push
mov
mov
scas
xchg
leave
or
out
add
mov
ror
add
or
loopne
dec
xchg
or
jnp
outsl
jb
add
cmp
scas
pop
mov
jo
push
mov
fisttpl
mov
lods
pop
std
adc
int
cli
lds
adc
inc
xorl
add
stos
arpl
pop
ljmp
imul
add
fwait
rcll
adc
mov
sbb
or
add
push
jmp
xchg
push
mov
cmp
arpl
mov
notb
ja
add
pop
ss
jo
adc
mov
cmpsl
mov
cmp
add
add
bound
sbb
xchg
add
rorb
cli
sub
and
add
int3
gs
mov
fstpt
mov
jecxz
sub
insb
int
add
pop
cld
and
cli
lea
std
jns
hlt
xbegin
inc
jbe
add
add
bnd
test
cmc
mov
jno
ss
and
add
rcrl
add
push
mov
add
movl
add
dec
sbb
aaa
ret
int
add
cmpsl
fwait
imul
fstl
add
insl
sbb
inc
push
outsw
test
sub
push
add
add
adc
mov
out
sbb
mov
xchg
add
add
jl
inc
push
les
add
add
mov
pop
and
cmp
sti
iret
adc
test
inc
sub
sub
dec
xor
fistpl
outsl
es
mov
add
xlat
inc
mov
cmp
sbb
mov
push
jb
adc
add
inc
add
pop
mov
add
sub
add
scas
or
adc
jg
fadds
aaa
movsl
xchg
pop
add
push
fnstcw
xchg
mov
mov
jp
adc
mov
mov
xchg
dec
dec
add
fsub
xchg
push
lods
clc
lods
add
adc
mov
fs
sub
cwtl
aas
jp
in
push
sub
mov
pop
in
xchg
add
or
mov
add
and
and
rolb
add
lret
icebp
jo
movsb
daa
xor
jb
ret
rolb
sbb
hlt
pop
dec
loop
fcoml
pop
cmpsb
cmp
movb
ss
mov
push
arpl
sahf
xchg
mov
fcoms
std
and
cmc
add
add
cmp
in
add
jb
sub
jb
add
add
mov
xlat
movb
cmp
xchg
lahf
outsl
leave
xchg
xor
push
popa
sahf
cltd
movl
add
add
xor
pop
cmp
add
and
add
adc
inc
sbb
lods
push
or
adc
mov
loopne
push
in
test
and
inc
repnz
push
dec
mov
scas
andb
push
fucomp
xor
push
cmp
add
repz
stos
popa
adc
sub
push
iret
add
mov
add
push
push
add
jno
cmp
cmp
xchg
inc
sub
cmp
lods
mov
adc
clc
pushf
outsl
add
arpl
add
add
add
mov
adcb
ss
call
inc
call
scas
fists
xor
mov
iret
jecxz
add
jle
jge
dec
add
repz
jp
add
adc
mov
sbb
pop
outsl
add
inc
pop
int
and
add
mov
cmc
nop
lods
or
adcb
rclb
cmpsl
out
std
enter
sub
lret
addb
inc
dec
xor
add
rcrb
and
xlat
push
data16
data16
cmpsl
out
sahf
add
mov
int
add
loop
mov
add
call
xor
pop
push
sub
adc
adc
lahf
xchg
insl
dec
push
fnstcw
inc
mov
pop
add
in
jecxz
sub
dec
movlps
mov
ss
aam
mov
sbb
or
jl
pop
xchg
call
add
jl
xor
call
sub
pusha
pop
add
dec
or
shlb
mov
bound
inc
mov
mov
mov
add
jno
inc
sarl
push
add
xlat
jns
cwtl
bound
add
push
inc
xlat
mov
add
mov
in
xor
inc
dec
add
sar
jge
jl
mov
add
sbb
xor
sub
sub
sbb
and
cmp
cltd
add
xchg
daa
and
cli
cmp
adc
add
and
imul
add
add
flds
std
add
in
mov
shrl
testb
dec
add
add
inc
in
je
test
sub
lret
out
cld
rorl
fsubl
or
add
jnp
fadds
jns
mov
sbb
mov
aas
int3
movsl
push
or
push
cmpsb
cmpsl
loop
in
bound
mov
push
add
je
gs
and
lods
add
call
xor
stos
and
sbb
lds
push
add
loopne
inc
jle
mov
xlat
movsb
cld
add
out
outsl
sub
push
inc
add
and
cmc
add
out
xor
movsb
push
lret
cmp
sub
into
sbb
sahf
add
mov
mov
push
ret
and
aam
aad
lods
pushf
add
cwtl
aam
cli
loope
push
mov
push
xchg
pop
popa
lcall
add
push
push
adc
data16
in
rcll
icebp
mov
add
dec
sbb
xchg
push
push
out
jecxz
int3
loopne
inc
adc
scas
lods
fdivp
add
sbb
adc
dec
imul
enter
lret
adc
and
inc
aad
in
out
add
ds
cmpl
push
xor
into
mov
or
jb
icebp
sub
cmp
mov
adcl
mov
mov
repnz
pop
push
mov
pushf
filds
mov
jg
outsb
inc
stc
clc
int
imul
add
add
or
popa
pop
and
popf
xchg
and
int
inc
scas
add
clc
mov
cmpsl
jne
pop
dec
mov
add
dec
filds
mov
add
pop
mov
jns
ret
shrl
xor
inc
jmp
add
arpl
cmp
outsb
mov
dec
rolb
or
rcrb
mov
mov
jmp
lret
iret
cmp
lahf
mov
push
mov
push
or
xor
xor
add
xor
dec
cmp
cmp
push
xor
mov
mov
xor
add
mov
leave
hlt
add
sub
out
fstl
add
and
adc
mov
scas
add
popa
mov
xchg
or
inc
mov
add
subb
xor
mov
pop
scas
mov
loop
les
inc
stc
out
add
jmp
adc
pop
jno
xor
add
ss
inc
add
add
add
add
jb
pop
in
and
xchg
shlb
fnsave
aad
stc
aas
fcomi
add
mov
mov
and
or
ficoms
add
shll
arpl
mov
ds
pop
packssdw
aas
xchg
cmpsl
ret
add
adc
dec
push
push
inc
add
mov
add
push
xor
je,pn
xchg
add
xor
test
add
lcall
mov
add
push
negl
out
xchg
add
add
and
and
sub
pop
pop
roll
or
fisubs
aas
dec
add
add
push
sub
rolb
add
mov
int3
iret
cmpsb
add
add
ficoml
sbb
sbb
or
ficoms
sbb
adc
mov
jmp
scas
jb
xchg
add
add
xchg
cli
cmp
add
stc
shr
push
cmp
add
test
mov
daa
fldt
dec
mov
pusha
cmp
imulb
out
sub
cmp
test
add
mov
push
pushl
cmpb
lahf
loope
cmp
aad
in
jno
sub
xchg
stos
lods
stos
push
mov
jne
test
int
adc
push
push
int
mov
lret
gs
dec
xorb
add
jg
mov
add
lea
out
test
add
push
or
shrl
dec
cmc
push
test
sbb
lcall
and
sbb
js
mov
imul
aas
iret
pop
popf
cmp
dec
add
aad
adcl
mov
dec
push
jge
leave
cmc
add
out
inc
imul
fsubr
mov
jnp
dec
lock
or
add
jbe
mov
arpl
push
out
ljmp
outsb
lret
out
mov
ret
push
add
push
addr16
add
adc
hlt
negb
sbb
sbb
adc
in
or
add
rorl
lret
add
ret
mov
adc
jbe
mov
adc
add
sbb
dec
push
jns
xlat
movsl
lea
rorl
jns
in
push
roll
adc
add
lret
jmp
sbb
fabs
xlat
pusha
movsb
add
add
add
sti
fsubr
lcall
fwait
inc
jge
jp
mov
mov
cmpsb
dec
add
push
ucomiss
inc
or
inc
mov
rorb
cmp
out
cmc
pop
rol
cmpsb
xor
inc
loop
push
jns
lea
jo
ljmp
mov
icebp
inc
ret
pop
ds
cmp
lret
add
std
push
hlt
pop
xor
xchg
dec
pop
and
test
add
daa
mov
add
sbb
lds
jp
in
push
cli
shrb
jl
cmp
icebp
test
xor
add
and
jne
add
add
arpl
adc
add
mov
pop
sub
pop
notb
sbbb
ds
add
les
xchg
add
sti
in
xor
popa
push
adc
aas
andb
dec
xor
lret
or
add
mov
push
shll
sbb
ret
push
in
and
es
mov
cmp
add
sahf
imul
add
mov
mov
xchg
push
cmp
add
jmp
xchg
cmpsl
add
popa
leave
xchg
add
sti
mov
add
loop
sub
dec
mov
xor
inc
ja
int3
mov
js
mov
mov
xor
cmp
stc
sti
mov
inc
add
dec
stc
add
lods
or
xor
test
push
mov
and
sysexit
mov
push
popa
dec
cmc
sahf
pop
cmpsl
sbb
outsb
push
add
add
jmp
das
pusha
pop
aad
add
mov
aaa
scas
dec
inc
mov
adc
nop
xchg
jmp
movsb
push
sbb
subl
mov
mov
mov
pop
pop
sbb
mov
mov
jnp
xchg
loopne
jmp
test
mov
mov
mov
sub
mov
decb
jp
fmulp
fadds
hlt
out
adc
mov
dec
add
and
add
push
push
xor
add
jno
lds
inc
add
xchg
test
popf
imul
jns
sub
sbb
out
add
xor
sbb
icebp
push
add
jb
jb
jge
sti
inc
mov
sarl
insl
sub
and
push
mov
sbb
mov
jge
adc
sub
add
int3
mov
push
rolb
aam
inc
xor
dec
dec
gs
lods
stc
or
xor
push
jle
leave
jl
addl
mov
out
je
push
fnstcw
leave
pusha
add
std
add
adc
cltd
mov
cmp
jl
into
std
jo
mov
add
add
inc
pop
adc
lods
test
xlat
add
lea
movb
out
cltd
sub
xor
xor
lods
out
mov
mov
fs
sub
inc
ret
mov
add
pop
sarl
xchg
cmp
and
add
push
sbb
daa
cli
adc
loop
mov
add
mov
call
xor
test
inc
mov
or
add
inc
jmp
add
inc
pop
inc
cmp
cmp
jae
dec
add
pop
jns
push
sub
and
xor
xchg
movl
clc
cmp
mov
scas
mov
lds
test
or
pop
js
into
xorl
push
push
aas
jecxz
jns
jg
xchg
jecxz
xlat
add
sub
scas
cmp
add
jp
sub
pop
xchg
jno
les
or
movsl
jp
add
mov
outsb
sub
in
imul
mov
add
mov
push
mov
repnz
sub
or
and
pushf
outsb
in
jle
add
jo
add
rcl
jbe
push
mov
push
pop
cmp
jle
aas
xor
jp
popa
adc
adc
lahf
nop
inc
add
push
push
xorb
adc
xor
pusha
add
lret
mov
test
nop
js
xor
xchg
xlat
add
lret
or
cmpsl
aaa
cmpsl
bound
jg
imul
cmp
out
xchg
mov
xor
jnp
loop
addl
gs
push
stc
adc
jge
xor
add
repz
lds
lret
sbb
les
add
daa
dec
aam
repz
cmpl
xor
push
xchg
pushf
add
inc
xchg
sbb
inc
and
repz
adc
push
lock
mov
insl
jmp
and
mov
lret
fistpl
fcoms
add
add
pusha
mov
enter
push
jl
repnz
mov
loopne
adc
hlt
out
xchg
ss
cmpsb
add
pop
outsl
inc
add
xchg
sarl
pop
mov
xor
sub
and
mov
xchg
push
pop
test
mov
popa
out
push
fidivrs
movsb
jae
mov
inc
inc
sbb
dec
inc
in
jne
add
add
fcmovu
inc
loope
fmulp
inc
add
imul
jb
das
cmpsb
popf
pushf
incb
jmp
call
add
add
mov
add
add
sub
insb
outsl
push
sbb
out
addr16
test
add
mov
sahf
pop
out
fdivs
add
add
add
add
test
into
jae
pop
cmp
pop
xchg
dec
mov
xlat
jno
mov
mov
mov
cld
addb
and
mov
inc
pop
pop
testl
sahf
jae
repz
adc
inc
mov
push
cld
jb
outsb
adc
lods
int3
test
loope
mov
add
cmpl
movsb
or
lcall
pushf
xchg
and
bound
pop
xchg
jno
adc
sbb
fwait
mov
cld
pop
adc
inc
xchg
cld
pop
aad
int3
inc
pop
pop
push
jae
cmp
pusha
cmpsb
dec
in
in
lods
rcll
xchg
lods
leave
jecxz,pn
mov
mov
mov
dec
in
cmc
scas
sti
and
fistpll
jbe
add
inc
add
jnp
jmp
cmpb
sub
ja
sbb
faddp
call
popf
xchg
add
stos
popf
adc
movb
rolb
add
add
mov
ret
xchg
xchg
jmp
in
xchg
adc
add
mov
in
pop
ret
jae
dec
mov
dec
add
test
in
pop
icebp
inc
pop
mov
movsb
divb
cmp
adc
ds
push
and
cmpsl
add
imul
sbb
cmp
add
add
mov
xlat
cmpsb
pop
sbb
imul
add
pop
add
cli
lret
aam
jg
aas
out
push
cs
outsb
insb
xchg
add
push
xchg
xorl
jno
add
add
dec
jno
inc
push
andb
push
out
jp
maxps
in
mov
add
sti
push
in
js
cltd
xor
sahf
pop
add
jmp
loope
out
push
ljmp
adc
pop
mov
rorb
add
ds
add
push
ss
mov
add
outsb
pop
add
adc
and
mov
xchg
add
scas
cmp
inc
test
push
inc
mov
out
push
hlt
rcrl
add
sub
sbbb
cmp
pop
cld
jo
jnp
sarb
rcll
clc
add
add
cmp
jno
jb
adc
jae
inc
dec
loope
add
add
add
adc
sub
aam
add
movsl
mov
push
cmc
repnz
pop
dec
mov
adc
add
push
and
inc
push
aas
cltd
xchg
or
stos
and
xorb
cmp
xchg
jp
ss
int
ds
shrl
repz
sub
lea
cld
sbb
dec
adc
xchg
mov
je
sahf
fdivrs
sub
cli
mov
mov
mov
arpl
sbb
mov
lcall
mov
push
gs
sbb
jns
add
xchg
divb
fsubrs
add
and
out
les
mov
mov
fldl
mov
dec
int
xchg
or
sub
mov
inc
add
or
ret
and
add
push
jge
add
mov
pop
fcmovb
nop
fcmovnbe
in
sub
adc
add
incb
rcrb
add
out
stos
cltd
mov
rcl
movsb
inc
nop
xor
jae
add
sbb
loopne
jns
fsubrp
add
imul
push
out
add
xchg
add
cmp
sbb
repz
outsb
add
mov
sub
ret
ror
mov
pop
sbb
lock
mov
popa
add
lahf
jae
fsubl
pop
insl
xchg
arpl
add
push
pop
in
sub
into
and
shrb
xor
xchg
in
aad
add
sbb
mov
inc
mov
andb
nop
xchg
outsl
dec
lahf
addr16
aas
negl
mov
imul
push
pop
stos
dec
mov
xchg
xchg
push
inc
pop
hlt
dec
mov
add
dec
adc
sub
adc
mov
add
add
and
add
movsl
mov
push
or
jge
fcomps
xchg
mov
inc
cmp
rorl
ss
dec
and
dec
and
leave
fwait
cmp
jo
jge
orb
je
loopne
inc
push
or
add
adc
push
sub
imul
jle
pop
aaa
add
movsb
mov
repz
rcl
pop
stos
jg
out
push
mov
js
int3
aas
ret
inc
lods
or
xor
jl
mov
dec
mov
pop
cmp
inc
push
mov
frstpm(287
outsb
sub
sub
add
xchg
and
xor
push
mov
and
mov
xchg
add
cli
add
out
xor
fcmovnbe
cmp
adc
movl
jle
icebp
lea
nop
add
xchg
jbe
fs
inc
add
into
sub
dec
add
xor
jmp
mov
cmp
mov
mov
add
test
add
sbb
and
pop
adc
popa
and
mov
cmp
add
mov
pop
clc
fadds
push
and
jecxz
bound
xchg
pop
add
sbb
adc
cmc
or
fnstsw
adc
sbb
xchg
cs
movsl
cltd
xchg
mov
cwtl
sahf
add
fnstenv
stc
mov
cltd
xchg
pop
sub
mov
sub
mov
add
inc
cwtl
dec
sti
jle
push
mov
stos
add
inc
jno
icebp
add
push
xor
popl
addb
outsl
mov
shll
scas
sbb
in
test
dec
jo
push
mov
cmp
rolb
cmp
es
popl
je
or
add
scas
add
movsl
ror
loopne
dec
fcompl
add
test
mov
sub
pop
jl
std
sub
and
popf
add
and
add
cmp
fisubl
and
popf
loop
int3
cmp
jns
pop
inc
and
roll
mov
lods
sti
divl
jo
inc
or
je,pn
mov
enter
pop
add
out
and
and
insl
or
pop
mov
jns
push
scas
cmp
outsl
ja
sub
dec
add
sub
imul
insb
sub
dec
mov
jmp
add
imul
dec
icebp
add
rol
and
in
xchg
add
shll
ret
incl
mov
cmpsl
rcll
or
jns
jl
dec
rcr
fidivrl
or
cld
add
cld
dec
imul
out
adc
sbb
or
repz
mov
add
pusha
int
or
fs
jmp
xor
or
std
push
ficompl
sbb
mov
arpl
cmp
mov
icebp
lret
push
cmp
add
aaa
in
xor
sahf
or
out
mov
add
and
dec
sub
xor
mov
push
sbb
sahf
ja
aad
fcmovbe
pop
imul
ret
cmp
or
aaa
faddl
sub
and
sub
add
push
out
push
aam
imul
adc
push
pop
add
jge
add
xor
jbe
ret
jge
mov
out
sub
sarl
clc
int
fadds
lgs
lock
cmp
repz
movsb
and
fdivs
insb
aad
mov
inc
push
adc
xor
imul
add
cmpb
xlat
lcall
mov
add
cltd
mov
pop
inc
pop
out
add
ja
push
or
add
push
or
test
imul
sub
add
outsl
mov
add
imul
push
imul
outsl
inc
or
sbb
mov
sbb
xlat
lret
add
adc
xor
add
mov
pshufw
xchg
in
lea
dec
je
loop
add
fcompl
add
mov
dec
adcb
add
adc
dec
sub
push
add
pusha
xchg
ret
xchg
cmpsl
lds
jae
add
add
sub
push
call
out
sahf
addl
jnp
jnp
lret
pop
lods
mov
fsubrp
dec
xchg
sub
inc
add
pop
mov
div
jnp
add
imul
xor
sti
stos
add
loop
std
pop
fsubl
pop
cli
mov
das
jb
es
jecxz
shrl
mov
and
icebp
sbb
add
clc
pop
add
fst
mov
inc
in
mov
add
xorl
cwtl
movb
and
mov
add
lods
and
cmp
xor
jl
and
pop
fs
jl
mov
rolb
movsl
lret
add
lea
ljmp
add
clc
push
lret
add
xor
adc
mov
scas
mov
pop
cmc
sbb
test
add
outsb
mov
mov
or
pop
adc
sbb
push
test
popf
ret
negl
and
mov
in
add
add
dec
jmp
add
mov
inc
std
xchg
dec
cltd
loope
stos
rcl
add
sub
cld
testl
bound
pop
pushf
jmp
jne
mov
out
sub
add
mov
mov
push
pop
fidivrl
and
and
push
cmp
icebp
xchg
fsubrs
sub
adc
push
movsb
sub
add
pop
sti
jecxz
fs
add
add
pop
mov
pop
and
push
enter
ss
outsb
int3
mov
mov
add
add
jg
orb
pop
dec
add
insb
and
loop
lcall
add
xor
jge
pop
hlt
mov
or
les
pop
out
hlt
pop
add
out
xor
mov
xchg
add
pop
ficomps
pop
lcall
add
or
test
pop
inc
add
push
test
and
push
repz
add
add
gs
jmp
jecxz
divl
or
mov
mov
inc
call
scas
add
xorl
add
popf
add
xor
sbb
std
js
pop
add
outsb
xor
pop
cwtl
jge
ret
dec
cmp
cmp
xchg
test
inc
push
xchg
inc
and
cmc
out
push
push
or
adc
adc
sbb
jmp
fldt
aaa
and
add
sub
fsubp
sahf
ss
cli
loopne
clc
add
in
add
and
pushf
je
add
inc
push
cs
movsb
cmc
add
push
pop
insb
add
add
add
mov
test
and
add
ss
lcall
faddl
paddw
testl
sub
sahf
fs
aaa
lahf
push
or
adc
mov
mov
mov
and
nop
in
add
inc
mov
cltd
add
xchg
mov
test
lea
pop
push
fs
test
pop
test
dec
cmc
adc
lock
loopne
dec
adc
add
lret
and
pop
fisttpl
add
lock
push
aam
stos
mov
dec
bound
add
adcb
mov
mov
mov
pop
add
out
mov
icebp
movsl
aaa
xchg
sub
insl
jns
jmp
incl
and
dec
mov
pushw
add
pop
fiaddl
dec
jns
stos
xchg
in
bound
cli
and
sbb
cmp
lods
cmp
add
dec
notb
xor
dec
xchg
xchg
into
daa
push
add
mov
and
sbb
push
fiaddl
lret
lcall
aaa
inc
es
scas
jo
dec
dec
sahf
add
push
mov
fcmovu
repnz
into
lcall
stos
xlat
iret
mov
xchg
xorl
jb
loopne
pusha
add
adc
cmpsl
add
dec
mov
js
jge
xlat
mov
scas
sarl
pop
xchg
jle
inc
add
roll
jecxz
add
adc
mov
add
mov
and
add
inc
mov
add
das
int3
rcrb
addr16
add
sub
and
mov
sub
add
and
in
in
dec
rorb
xchg
insl
pop
test
inc
inc
add
sbb
sub
popa
add
pop
add
lock
inc
ror
adc
sub
add
xchg
add
push
test
adc
add
or
and
add
add
cwtl
cmc
std
inc
add
lea
cmovno
lret
push
lods
xor
push
xor
or
pop
movsl
inc
divb
mov
jle
inc
inc
mov
mov
push
mov
add
clc
jle
iret
aad
fisubrs
add
add
add
and
outsb
dec
les
add
push
add
jp
out
aad
ja
mov
add
mov
inc
push
mov
add
cmp
dec
pop
popfw
cs
mov
push
test
sub
add
out
add
leave
lock
add
in
sub
insb
ret
add
stos
dec
add
xchg
mov
add
mov
rorl
or
ret
push
aas
mov
xchg
insl
add
add
js
add
cmp
push
inc
dec
dec
add
inc
add
xor
xchg
add
sub
scas
inc
or
addb
adc
rclb
pusha
sbb
fnop
cltd
jbe
xchg
into
aad
rorb
ficompl
mov
cmp
push
jmp
movsl
and
xchg
inc
shlb
mov
fwait
decb
repnz
sub
mov
pusha
mov
cmp
xor
mov
cld
or
add
push
subb
inc
sbb
add
and
jbe
mov
inc
adc
in
add
lock
add
mov
adc
sbb
pop
inc
notl
cmp
inc
out
or
and
xchg
jmp
add
pavgw
xchg
push
sbb
inc
or
in
add
pop
pop
fiaddl
sbb
loope
mov
add
and
jb
fwait
shl
mov
cmp
rorb
xchg
fisubl
in
sbb
lock
es
add
push
lock
inc
xchg
lea
sbb
xor
pop
adc
add
xor
add
lea
xchg
push
fstpl
add
inc
xor
adc
add
mov
add
cmpsb
or
jl
aad
add
insb
into
mov
mov
jo
ror
mov
pushf
add
imul
iret
cli
mov
movsl
cmp
xchg
push
sub
pop
jns
outsb
cs
xor
pop
jg
out
lahf
add
aaa
movsl
and
mov
sbb
sub
add
push
push
adc
aaa
mov
mov
outsb
and
pop
mov
jle
sti
pop
add
and
jne
popl
xchg
inc
jo
pop
sub
add
add
jmp
push
cmc
nop
add
pop
adcb
out
iret
out
ficoms
imull
decl
add
lea
dec
jb
push
jne
outsl
dec
ret
dec
add
inc
pop
bound
popa
loop
fsubl
lret
insb
nop
xchg
sub
push
add
xor
sti
add
add
ljmp
add
aas
inc
cmc
push
pop
rcll
jnp
xor
add
jp
cmpsb
add
and
add
mov
in
mov
mov
movsl
ljmp
mov
dec
roll
push
das
les
add
add
imul
inc
shrd
int
test
push
mov
loope
mov
add
cli
pop
ret
adc
incb
mov
ja
stos
into
js
xchg
sarl
mov
ljmp
out
jmp
lock
xor
inc
stos
mov
or
pushf
lods
cmpsb
mov
dec
mov
jl
mov
mov
xchg
jbe
add
add
notl
add
aaa
mov
flds
pusha
dec
push
dec
inc
add
mov
sub
cmp
stos
pop
adc
call
in
out
in
add
add
bound
push
add
mov
lock
cmpsl
add
fistpl
aad
enter
add
sub
xor
add
xor
mov
lock
add
add
movsb
sbb
movsl
jge
or
arpl
and
mov
inc
aad
mull
dec
call
and
push
cmpsl
data16
jg
test
mov
push
sarl
shlb
push
bound
and
rolb
ss
add
cmp
add
loop
add
jbe
inc
or
sbb
cmp
loopne
push
ljmp
or
mov
sub
sbb
pushf
add
imul
sub
or
cmpsb
scas
faddl
sar
sbb
mov
je
xor
jge
adc
repz
xor
daa
sbb
jl
into
sub
fiaddl
sbb
adc
bound
movsl
jnp
pop
call
leave
xor
ret
imul
mov
mov
push
cmc
stos
cmp
rcll
mov
cli
jae
and
inc
mov
jmp
mov
sub
bound
in
mov
mov
add
dec
ret
imul
adc
arpl
push
dec
into
push
nop
daa
push
int3
add
fisttpll
cmpsb
push
jne,pt
std
sbb
dec
and
push
sbb
imul
jp
mov
pop
add
sbb
push
jl
push
stos
jecxz
iret
loopne
lods
cmpb
jle
movsb
add
xlat
inc
jmp
jp
cmc
ret
hlt
das
pop
call
pop
pop
stos
add
add
add
ljmp
sub
loopne
sub
jmp
adc
xor
add
add
jle
bound
or
xchg
or
push
adc
iret
cwtl
scas
hlt
push
out
addl
fsubrp
fldcw
stc
add
lcall
xchg
add
aas
add
scas
mov
add
jno
or
pop
xchg
lret
clc
sbb
movsb
mov
add
lods
rolb
push
fld
sbb
mov
lods
daa
xor
xor
jecxz
dec
add
jmp
dec
inc
xor
mov
call
push
add
add
jne
xchg
aad
mov
inc
add
jmp
and
or
add
mov
aaa
add
aam
jecxz
dec
addr16
push
xor
pop
add
ljmp
aaa
lock
add
mov
mov
rep
and
mov
or
mov
add
add
add
mov
subl
aas
xorb
sub
dec
mov
enter
fwait
lcall
pop
xchg
movaps
and
add
mov
add
push
aad
cs
add
mov
pop
dec
jl
add
scas
mov
pop
fwait
movsb
and
xor
inc
xor
dec
cmp
out
xor
nop
mov
outsl
jmp
and
mov
pop
sbb
jnp
xchg
sbb
add
push
test
xchg
mov
fcomp
inc
js
or
xchg
addr16
adc
mov
int3
jmp
int
adc
cltd
jne
data16
push
push
nop
add
lcall
push
idivl
jg
push
push
add
xlat
cmp
loope
lea
pop
icebp
and
ljmp
fcompl
jb
out
adc
in
in
fiaddl
add
add
es
in
pop
shlb
add
int
test
les
dec
bound
or
pop
ja
mov
cwtl
into
cmpsb
fcoms
sbb
lret
add
xchg
adc
outsl
imulb
in
ror
adc
mov
lret
jb
subb
xor
sub
clc
xor
push
jg
cmp
adc
push
testl
sbb
daa
add
mulb
mov
and
iret
or
push
add
sbb
call
fstl
dec
test
sbb
sbb
mov
enter
adc
cmp
add
str
mov
push
scas
xchg
push
cmpsl
repz
lea
mov
stc
aad
outsl
dec
mov
ret
into
mov
push
or
xchg
add
push
xchg
roll
adc
push
addr16
popf
cmpsb
inc
cs
add
in
fidivrl
sbb
ds
add
add
xor
mov
push
mov
mov
xchg
jp
pop
xor
add
mov
outsl
inc
or
dec
add
shrl
pop
ror
adc
sar
mov
inc
packsswb
add
mov
jmp
daa
mov
std
add
aad
jecxz
inc
cmp
xor
lock
and
cltd
mov
push
lahf
push
mov
jl
cmp
imul
test
sarl
flds
sbb
add
test
mov
icebp
xor
add
push
mov
add
and
ljmp
cmp
dec
sbb
mov
dec
sbb
xchg
push
js
cli
cmp
mov
ret
inc
into
dec
nop
jmp
and
das
mov
inc
add
mov
dec
mov
fiaddl
arpl
stc
push
mov
mov
ret
test
inc
add
add
dec
sbb
pop
pushf
add
jnp
in
add
test
push
push
rcrb
mov
push
xchg
leave
imul
outsl
xchg
ja
add
loop
hlt
popa
jae
rorb
jo
push
test
repnz
add
cmp
sub
in
movsl
mov
ficomps
dec
adc
ret
imul
adc
push
inc
mov
inc
pusha
inc
cmpb
das
jmp
mov
ja
jmp
add
jne
push
lret
sub
movsb
pop
aam
les
adc
xor
cmp
and
inc
adc
leave
add
xchg
push
ja
cmp
test
jl
add
pop
xor
test
jbe
jo
jbe
or
add
aam
adc
sbb
jbe
mov
xchg
push
icebp
mov
loopne
test
cmpl
jb
xor
and
add
repnz
jmp
aam
movsl
mov
movsb
adc
js
pop
in
or
mov
or
dec
jns
orb
cmpl
pop
push
add
add
movb
add
cmp
mov
out
xor
mov
mov
lods
add
jmp
lods
dec
imul
jp
mov
aam
stos
movsl
xor
lds
mov
add
lods
dec
movl
or
lret
inc
and
cs
jp
inc
cs
sub
sub
push
jno
daa
mov
gs
movl
cmpsb
add
jo
xor
loopne
or
das
jnp
mov
mov
flds
clc
nop
and
pushf
cli
jb
jl
lahf
add
dec
add
in
rolb
mov
test
sbb
std
stc
mov
lock
push
xchg
dec
movb
jae
ljmp
repnz
jmp
add
bound
pop
fnstenv
insb
neg
add
add
add
out
gs
and
fcmovnbe
sbb
repnz
dec
inc
dec
add
repz
out
loopne
jae
jns
addr16
iret
pop
jge
fsub
jecxz
sbb
incb
out
addb
adc
jle
fwait
das
mov
or
inc
sub
imul
sbb
jnp,pn
enter
loope
inc
mov
icebp
push
test
fwait
das
inc
popf
arpl
dec
push
xchg
outsl
push
xor
inc
sub
rcll
rcrb
add
dec
add
xchg
mov
aad
mov
cld
dec
enter
fimull
pop
push
mov
xor
and
add
andb
add
jle
notb
aad
xlat
lahf
or
gs
sub
add
mov
xor
jmp
popf
and
sbb
mov
hlt
jge
cmp
out
cli
sub
cli
inc
and
add
cltd
or
dec
faddl
cmp
or
pop
add
ror
push
lods
sub
push
addl
adc
pop
andb
fld1
out
add
and
fisubl
mov
rorb
mov
sbb
sub
jb
enter
mov
pop
lods
or
adc
mov
pushf
insl
lods
bound
mov
mov
xchg
mov
add
sarl
dec
inc
mov
enter
call
setns
dec
add
add
hlt
pop
push
xlat
adc
mov
add
imul
push
sti
add
sub
pop
out
add
sub
mov
xchg
cwtl
daa
cmp
mov
sub
ror
pushf
hlt
and
faddl
hlt
push
in
xor
movsb
dec
inc
add
loopne
pop
in
adc
or
insb
repz
dec
add
and
leave
ss
fistpl
out
xchg
jno
pop
imul
xchg
sahf
mov
outsl
pop
cmp
xor
mov
jp
inc
in
je
loop
mov
jmp
push
add
outsl
xchg
mov
and
add
call
fiaddl
mov
jge
shlb
mov
scas
fimull
sbb
add
imul
push
mov
in
xchg
adc
or
pop
mov
inc
hlt
add
add
inc
cwtl
add
ja
cwtl
out
sbb
xchg
sbb
pop
add
cmp
es
xchg
out
jo
je
scas
inc
decb
in
push
sbb
add
aam
cld
sbb
sbb
hlt
push
addr16
add
jmp
les
mov
fs
cli
popf
loopne
dec
jne
test
cmpsb
xor
and
cltd
paddsw
sub
add
mov
inc
jae
rorl
or
cmpxchg
test
fnsave
inc
pop
arpl
aaa
xor
das
add
add
ret
add
xchg
add
jp
mov
add
add
or
sub
xchg
test
xchg
fsubs
and
sbb
mov
cld
sbb
addb
push
cmp
pmulhw
mov
mov
pop
outsl
mov
or
mov
icebp
xchg
push
loopne
decl
jge
add
mov
ficoml
fwait
xchg
loop
add
add
sbb
insb
xlat
loop
ret
repnz
dec
outsb
xchg
add
bnd
scas
and
ds
fadds
push
call
push
inc
and
and
jg
inc
clc
pushf
data16
add
xor
movsl
pop
lcall
adc
cmp
shl
enter
adc
lret
out
test
cli
add
sti
test
dec
cli
add
stos
lock
and
add
add
jne
andb
movd
pop
in
popa
imul
push
mov
sbb
clc
call
adc
mov
xchg
and
xor
add
jl
pusha
push
sub
or
xchg
subb
je
in
xchg
inc
push
mov
jmp
add
pop
insb
repnz
movl
jns
stc
pop
jp
loop
add
and
jmp
aam
cmp
dec
xchg
mov
dec
add
popa
ja
adc
sti
mov
movsl
add
fadds
sub
testb
in
adc
add
push
sti
jnp
adc
add
xchg
xchg
cmp
cmp
inc
add
addr16
add
test
movsl
mov
mov
or
nop
sub
push
das
add
stos
cmp
add
add
inc
aad
xor
sbbb
mov
add
xchg
pushf
sub
orl
cmp
sbb
sbb
cmp
dec
xchg
cmpsl
mov
sbbb
xor
jg
mov
adc
and
sbb
add
add
cltd
cmpsl
add
add
add
mov
aas
pop
cmp
or
add
shrl
test
xor
mov
icebp
push
add
sbb
add
dec
add
clc
jmp
lcall
cmc
fistpll
add
add
add
orb
les
out
not
lahf
jno
shlb
adc
in
add
jbe
xor
add
stc
and
add
add
adc
dec
lahf
mov
pop
add
cmp
cmpsb
add
pop
add
lcall
sbb
push
ret
inc
or
sbb
add
fsubrl
add
add
cmc
or
jnp
icebp
adc
mov
jmp
std
movsl
mov
cmc
cli
push
xchg
add
pop
aaa
lods
cmp
rol
add
add
add
fucomip
and
add
add
adc
add
pusha
and
pop
cld
push
mov
hlt
adc
bound
or
add
add
mov
addl
sbb
inc
or
adc
add
mov
addl
sti
scas
add
push
mov
mov
icebp
pop
in
sub
push
addl
add
xor
and
xor
pushf
add
jmp
incl
add
jg
add
stos
adc
loope
push
xchg
inc
and
in
add
sbb
pop
sbb
scas
or
jne
and
bswap
and
fsubl
push
add
jns
and
stos
in
pop
or
mov
mov
loopne
xchg
sbb
add
lret
dec
sub
add
sbb
mov
dec
int3
mull
add
shlb
cmp
in
pusha
add
add
and
push
push
mov
sub
pop
scas
add
add
adc
add
pop
fisubrl
push
mov
push
add
pop
mov
scas
jbe
inc
inc
roll
bound
test
imul
jg
adc
add
out
popf
add
add
mov
cmc
add
mov
adc
and
jmp
pushf
push
les
jae
push
cmp
add
jne
lret
sbb
bound
popa
add
add
icebp
adc
mov
cmp
add
dec
inc
jns
mov
dec
movsb
pop
sub
add
ret
add
dec
les
lods
add
lcall
and
fstpl
lock
add
ds
add
incl
pop
sbb
mov
jecxz
pop
dec
xor
mov
mov
hlt
lock
add
add
repnz
adc
sti
add
ret
mov
xchg
xchg
cmpsl
jle
add
notl
adc
adc
sbb
sub
inc
push
movsb
sbb
inc
enter
xor
push
add
aad
xor
inc
into
outsb
jl
aam
mov
or
jno
adc
call
add
add
addl
cmc
mov
js
stc
xor
ljmp
iret
adc
xor
pusha
ljmp
sub
adc
test
cltd
popa
add
out
push
inc
in
fdiv
sub
test
push
push
adc
inc
add
je
and
mov
cmp
filds
popl
scas
push
fcmovu
dec
sub
mov
add
aad
mov
push
mov
push
xor
cmc
sahf
clc
nop
add
cwtl
lods
add
adc
push
adc
mov
iret
adc
sub
fldl
push
imul
adc
cmp
add
dec
add
pop
and
add
adc
adc
sbb
stos
pop
mov
push
add
jns
pop
out
addr16
inc
adc
add
lahf
std
lds
sti
rcl
mov
les
add
add
repz
filds
jbe
outsb
dec
jne
in
outsb
cli
loopne
and
push
sub
add
jge
out
rorb
shrb
je
add
loopne
add
mov
pop
addr16
pop
adc
cmp
lcall
push
add
dec
test
stos
add
mov
add
decl
outsb
sahf
mov
add
mov
or
hlt
nop
in
mov
loop
cmp
jp
mov
add
repnz
std
mov
jae
push
loope
cmp
ds
add
pop
xor
ss
and
and
add
cltd
and
sbb
add
es
inc
add
test
fidivs
jge
clc
pop
or
into
rclb
sbb
decl
out
in
dec
aaa
push
loopne
jp
mov
dec
pop
movsb
data16
xchg
dec
mov
jnp
js
mov
mov
cmp
sub
xor
add
add
mov
in
mov
inc
enter
ffreep
push
bound
fcomps
xor
mov
es
push
xchg
xor
push
mov
iret
add
mov
add
xor
rol
lret
dec
cmp
jl
pop
or
es
xor
and
scas
lods
dec
push
add
xor
add
lea
xor
add
call
push
jmp
and
mov
mov
push
pop
jle
cli
mov
dec
and
shlb
and
scas
fsub
add
adc
sub
scas
add
xlat
pop
cmp
aaa
movsb
out
sbb
push
push
mov
mov
sbb
adc
add
addb
dec
daa
mov
pushf
cmpsb
mov
ljmp
inc
adc
mov
loop
xchg
mov
add
insl
xor
nop
or
push
dec
test
sub
dec
insb
fildl
mov
cmc
mov
jle
andb
inc
rolb
pop
pop
push
or
nop
seta
add
sbb
aam
mov
loopne
cmpsb
stos
add
cmp
ret
outsb
mov
out
push
movlps
dec
push
xor
sub
test
pushf
mov
fsubrl
adc
push
jno
dec
jge
rcrb
stos
cmp
mov
str
sub
dec
add
xchg
mov
xchg
mov
xlat
aaa
add
jb
add
jo
andb
dec
jbe
push
add
mov
sbb
cmpsl
mov
mov
gs
icebp
add
add
add
insb
xchg
ret
mov
or
dec
jb
gs
pop
xchg
lods
jns
ficompl
lahf
shrl
into
adc
jp
mov
outsb
push
aam
mov
roll
mov
and
and
mov
lret
inc
sbb
mov
add
adc
outsl
pminub
stos
mov
lock
add
ret
cld
jg
in
in
and
and
add
inc
rolb
adc
out
lcall
and
add
push
mov
and
push
ret
xor
aaa
stos
add
add
sahf
orb
inc
sbb
cmp
js
push
lcall
push
roll
test
push
xchg
cwtl
sub
cwtl
pushf
cmp
fwait
add
lret
or
daa
mov
adc
hlt
xchg
jg
lahf
call
call
add
cmp
add
cmpsb
dec
jbe
pop
mov
add
add
and
ds
ficoml
hlt
xchg
jge
fnstcw
mov
fadds
cli
std
add
imul
jb
mov
mov
stos
pop
mov
or
xor
cld
push
stc
insl
cmp
and
add
mov
mov
dec
adc
mov
sub
loopne
push
pop
fists
mov
inc
jae
imul
insb
mov
add
adc
and
pop
add
jo
inc
roll
xor
add
xor
cli
jb
jns
xchg
jmp
and
pop
insl
insl
pop
out
fmuls
dec
add
adc
sub
add
rcll
adc
push
add
cmpsl
xchg
sub
adcb
adc
fstpt
xor
repnz
jb
and
inc
sub
push
adc
stc
and
mov
sbb
push
add
sahf
pop
xor
cmp
test
out
icebp
add
or
mov
ret
add
inc
xchg
add
mov
subb
pushf
dec
jp
mov
es
lcall
mov
jle
and
ja
pop
into
popw
dec
mov
push
rcrl
jns
xor
add
scas
lret
stos
mov
mov
insl
aam
ja
push
xlat
iret
jno
sahf
add
and
lods
test
jg
in
add
push
or
xor
repz
sub
ss
outsl
xchg
fdivl
in
push
aad
in
das
push
test
cmc
mov
add
push
out
mov
sub
sub
xor
pop
add
fwait
push
inc
add
data16
das
add
add
repnz
pop
push
daa
add
inc
stos
add
ret
pusha
negl
push
lds
add
ret
dec
ret
mov
add
add
jecxz
ss
fst
sbb
pusha
mov
mov
xor
xchg
dec
sub
cmp
inc
out
test
sar
xor
pop
push
dec
rclb
cmpsl
add
cmp
enter
pusha
add
hlt
fcom
push
inc
inc
push
push
aas
popf
sbb
lcall
jns
lahf
dec
fld
scas
pop
in
pop
daa
dec
and
lret
push
add
xor
or
mov
add
arpl
dec
adc
arpl
pop
add
mov
adc
mov
rcr
add
add
sbb
push
les
mov
iret
dec
add
test
mov
outsb
pop
adc
push
in
daa
imul
fdivrl
add
xor
daa
add
add
mov
bound
adc
mov
shll
cltd
fisttps
and
push
int
stos
mov
mov
cli
pop
leave
inc
mov
ljmp
fcompp
imul
adc
add
jge
adc
faddl
add
add
add
push
and
jg
mov
add
gs
add
or
test
xor
lahf
xor
sub
pop
sbb
jb
dec
sbb
fldl
add
scas
add
pop
sub
bound
mov
add
daa
loopne
test
jmp
cmp
xor
pop
add
mov
add
and
inc
jno
xor
cwtl
decl
pop
daa
pop
add
inc
add
insb
loope
test
xchg
dec
in
sti
sub
dec
add
jge
call
jle
add
xchg
lret
daa
jbe
bound
push
add
sahf
cmc
cltd
add
imul
fs
xor
inc
push
jecxz
mov
stc
jge
add
push
int3
out
add
pop
aas
ds
sub
jnp
xor
loopne
add
xchg
adc
and
pop
or
add
jecxz
inc
sub
fildl
jp
sbb
or
jnp
add
call
mov
pop
xor
sub
pop
mov
add
sub
dec
dec
leave
lcall
or
add
data16
mov
or
fisubl
sbb
sbb
add
or
fcomp
cli
outsb
xchg
mov
push
jmp
repnz
hlt
sub
mov
add
fwait
negl
repz
and
ret
mov
cli
xor
divl
mov
es
or
pop
push
xchg
cmp
roll
push
xor
into
jbe
repz
pop
add
lea
imul
aaa
stos
mov
mov
pop
scas
js
leave
xchg
jns
arpl
addl
out
mov
xchg
sbb
testb
xchg
mov
movhps
cltd
fistpl
sbb
add
mov
sub
sub
lods
xchg
inc
jecxz
jecxz
cs
push
xor
stos
inc
push
mov
fistpll
cld
jae
sbb
add
inc
and
push
movsl
lea
or
jae
jo
into
nop
popf
mov
inc
ljmp
add
add
jle
push
movsb
add
out
dec
cmp
scas
cmp
add
call
mov
insl
roll
push
dec
sbb
jbe
fidivs
pop
jb
mov
jo
mov
push
add
lock
daa
jns
mov
push
add
inc
sbbb
pop
xchg
and
stc
fsubrs
mov
sti
adc
push
cwtl
jne
addl
add
rcrl
add
aas
lcall
fnstsw
popa
sub
inc
inc
sbb
push
iret
mov
out
daa
ret
pusha
call
punpcklbw
arpl
in
ljmp
adc
add
add
sbb
out
sbb
add
cmp
adc
test
repz
test
jp
add
push
in
mov
idiv
addl
jge
test
daa
add
add
dec
or
lret
mov
fdivrs
bound
test
mov
mov
loop
popf
std
jns
dec
testl
movsb
pop
stos
inc
int
testb
add
cld
mov
andl
mov
push
bound
cmpsl
fidivl
inc
inc
sbb
ss
mov
dec
nop
stos
int3
jmp
aam
inc
cmp
fs
movb
rcrb
lcall
ss
ret
inc
stos
xor
lcall
add
xor
sub
dec
cmpl
inc
lock
test
and
add
or
mov
outsb
scas
iret
adc
add
pop
lcall
test
pop
xchg
fsub
lds
mov
add
jmp
scas
jbe
mov
repz
test
aas
cmp
sub
jg
sub
adc
roll
cmpsb
xchg
add
inc
ja
imul
pop
ljmp
fwait
lods
xor
out
fisubrs
adc
add
mulb
or
add
movb
dec
cmpsb
mov
push
fidivrl
popa
cwtl
enter
lock
sub
imull
sbb
xchg
gs
mov
sbb
push
mov
movsb
aas
xor
mov
test
push
lcall
add
jae
icebp
sub
test
ret
lahf
popa
nop
add
xor
mov
jo
xchg
jecxz
fidivrl
add
mov
lahf
push
jbe
out
mov
dec
popa
add
push
data16
je
dec
ftst
add
jbe
mov
add
push
stos
add
push
cwtl
aaa
add
loop
fldenv
or
jmp
jp
fstpt
mov
lods
test
out
fnstsw
add
pop
cltd
das
movsb
mov
add
pop
js
adc
or
add
xor
pop
pop
test
xor
push
out
mov
icebp
fisubrs
mov
mov
pop
sub
push
add
test
les
cmp
mov
jg
and
rcr
sbb
stos
filds
outsl
aas
xor
incl
mov
fildll
fcmovbe
xchg
bound
or
lock
add
sbb
mov
shlb
aas
dec
mov
dec
adc
addr16
jl
lock
jb
mov
or
daa
inc
jns
arpl
fiaddl
push
insl
test
call
lds
rol
push
ja
lahf
pop
add
popa
repnz
cli
lds
mov
addr16
imul
movsl
add
push
rolb
mov
daa
stos
clc
in
mov
jne
icebp
dec
add
xchg
add
xor
sub
xorb
enter
fwait
xchg
add
add
mov
or
add
movsl
xchg
test
mov
or
cmp
jns
les
add
jmp
popf
add
add
dec
jg
and
add
xor
xor
in
fidivs
push
fildl
add
loope
hlt
sbb
jge
mov
lret
in
cmp
sbb
mov
add
pop
inc
shrl
sbb
out
inc
mov
clc
decb
inc
push
inc
lcall
lods
inc
mov
add
or
std
add
dec
pop
add
jecxz
add
cmp
mov
mov
std
repnz
repnz
xchg
sbbb
pop
fs
xchg
fimull
add
add
inc
add
add
outsl
into
xor
ja
add
or
and
dec
stos
mov
addl
out
lahf
lds
stos
mov
jae
dec
into
xchg
clc
sub
inc
inc
adc
pop
inc
jmp
pop
xor
sbb
cmp
dec
jb
add
or
add
xor
jns
mov
aas
daa
mov
cmp
clc
in
dec
jecxz
loope
add
mov
sbb
pop
lds
pop
scas
cmp
repz
mov
mov
push
add
nop
cmp
xchg
scas
adc
jmp
pop
daa
pusha
lret
pop
jb
xchg
jae
add
hlt
movsl
ret
repnz
xor
int3
xchg
mov
je
or
inc
or
enter
cwtl
add
add
mov
jmp
mov
add
dec
insb
dec
rcll
in
mov
into
sbb
aas
inc
pop
dec
lock
sbb
xchg
adc
push
hlt
fs
push
ds
dec
xchg
add
cmc
add
inc
insb
dec
mov
push
ret
sub
sub
or
pop
add
imul
add
mov
ret
mov
pop
add
inc
mov
movsb
cmpsb
in
cmp
rorb
and
mov
je
jno
ja
shll
mov
iret
or
ret
mov
jecxz
push
xor
push
and
add
mov
enter
lcall
jae
add
lret
sbb
stos
stos
stc
inc
add
add
lods
int
add
sti
orl
enter
pushf
je
push
icebp
pop
nop
test
pop
add
test
mov
cltd
add
add
jecxz
mov
mov
sub
add
or
jg
mov
xchg
xor
outsb
insl
add
das
dec
inc
stos
testb
dec
mov
dec
mov
add
mov
lods
and
push
jae
sub
mov
fwait
push
movsb
and
out
aam
add
bound
add
cmp
adc
pushf
cs
sub
sahf
add
cmp
push
out
in
fs
and
jge
es
jmp
jae
push
mov
addr16
addr16
xchg
dec
add
sbb
pusha
jb
sub
adc
xor
push
adc
cwtl
dec
add
stc
dec
pop
loop
fdivl
jp
fistpl
xchg
add
ret
fldl
pop
xchg
stos
add
add
add
pop
xlat
dec
sbb
add
in
xchg
arpl
scas
add
add
adc
add
jnp
sbb
cmp
inc
xchg
je
adc
je
in
mov
popa
sbb
in
sbb
add
mov
test
mull
and
repnz
dec
aam
adc
sbb
cwtl
sub
syscall
add
mov
cmc
mov
xor
bound
xchg
imull
mov
pushf
mov
pop
fdivrs
sub
adc
scas
push
and
or
push
xor
pop
or
xchg
fstpt
aas
sbb
in
jne
shlb
mov
push
test
int
das
and
add
pusha
or
lret
rol
loopne
pop
sbb
or
add
sub
add
out
add
cmp
inc
add
mov
inc
in
hlt
iret
cmc
or
test
add
dec
pop
lock
jne
jns
pushf
add
inc
xchg
sbb
es
jmp
test
mov
fistpll
ss
ret
clc
mov
rorl
rsqrtps
nop
lret
push
adc
add
imull
add
add
add
or
ds
add
add
or
fsubp
sbb
fs
xor
ljmp
fstpt
add
mov
cmpsb
inc
inc
xchg
cmp
inc
push
in
lahf
jnp
mov
add
jne
mov
dec
add
jne
cmpsb
add
xor
lahf
add
lret
jp
add
pop
sahf
add
movsb
inc
pop
jne
leave
fwait
jle
jg
stos
and
les
add
or
std
sub
adc
sbb
add
pop
mov
mov
add
push
out
aad
add
sbb
outsb
jb
push
add
add
pusha
push
push
aam
scas
xchg
jecxz
add
dec
dec
jns
call
arpl
or
inc
dec
pop
lcall
dec
cmc
popl
jb
loope
outsl
jbe
int
in
mov
sub
push
mov
sbb
fnstcw
add
jne
mov
test
mov
jle
mov
mov
in
sbb
jl
pop
out
xchg
into
sub
jo
lods
js
out
scas
test
push
add
pop
adc
sub
dec
pushf
lods
or
adc
insl
aas
pop
imul
clc
aam
lret
rcl
mov
das
jg
or
add
sbb
movsl
adc
xor
xchg
inc
add
incb
sti
push
adc
add
xchg
xor
mov
sub
xor
mov
outsl
fisubs
jl
push
add
fiaddl
ret
xchg
add
sub
or
mov
mov
in
pop
cltd
mov
and
ret
lods
add
adcb
xchg
jae
bnd
icebp
jmp
ficompl
addr16
test
in
out
mov
and
mov
add
and
aad
sub
test
ret
pop
mov
filds
jnp
add
in
push
movsl
add
mov
out
fisubrs
lahf
fadds
aas
pop
cmp
add
jae
mov
dec
movsl
shl
add
adc
jno
add
push
roll
jge
das
jbe
stc
mov
add
insb
cmpsb
aas
and
xor
xor
sbb
add
jmp
cli
inc
add
fisttps
inc
or
std
jb
pop
and
mov
lods
je
pop
fidivs
movsl
add
insb
fisubrl
xor
pshufw
or
pop
xchg
mov
repz
jae
add
mov
mov
jmp
add
add
add
sbb
lret
fsubs
inc
push
js
test
xchg
movsb
add
in
pop
scas
add
inc
insb
pop
add
out
lcall
imul
and
add
add
out
lock
stc
mov
mov
add
ret
pop
mov
rorb
inc
gs
cli
and
movsb
int
sbb
push
fucomp
add
call
mov
xchg
mov
loopne
and
shlb
push
cmp
inc
inc
xchg
jbe
adc
add
int
push
xchg
aam
and
sub
in
jno
iret
in
cltd
movsb
jmp
add
addr16
jle
movsb
sbb
insl
dec
sub
insb
cmp
lret
ja
cmpsl
push
or
sub
nop
mov
stos
push
adc
scas
into
push
add
xchg
mov
into
xchg
sub
pop
mov
shlb
or
push
mul
loop
fldcw
loopne
jcxz
jl
repnz
add
mov
ss
aam
out
sbb
shlb
or
ror
in
out
ljmp
xchg
add
cs
mov
pop
adc
add
add
dec
xchg
shrl
scas
movsb
stos
adc
xchg
call
jbe
or
add
cmp
xor
sub
in
fimull
popa
inc
jbe
sub
aas
add
jnp
cs
mov
mov
add
fdiv
add
mov
cmc
jmp
dec
push
cs
add
xchg
add
add
addr16
or
subb
add
scas
rcll
sahf
xor
push
cltd
in
fdivs
add
xchg
scas
ficomps
stc
cmc
pop
xchg
loop
jmp
dec
add
jns
aas
add
loopne
add
add
imul
cmp
into
inc
inc
add
xor
insl
into
pushf
mov
into
add
aad
dec
sti
and
push
add
mov
bound
outsl
xchg
fisubrl
add
add
push
aad
mov
dec
adc
mov
xorl
mov
aas
sub
add
add
add
pop
sub
mov
daa
cmp
or
aas
fistl
add
jecxz
mov
mov
add
jno
pop
inc
add
stc
daa
mov
adc
jo
push
outsl
add
mov
or
mov
add
xchg
inc
add
call
adc
jg
out
inc
cwtl
bswap
shr
push
enter
and
push
jo
add
add
movsl
cltd
dec
push
mov
test
adc
add
add
pop
sub
cmp
jecxz
ret
loopne
pop
pop
add
mov
adc
mov
jge
scas
dec
rolb
inc
dec
nop
xchg
add
jle
sbbb
stos
mov
mov
mov
andb
jno
clc
push
test
add
cmpsl
add
addb
add
xchg
jl
adc
and
aas
dec
pop
insb
movl
dec
add
imulb
add
push
aad
add
out
xor
or
xor
jne
lods
fst
fwait
testb
enter
mov
ret
xchg
addl
cmp
add
pusha
sub
jp
and
mov
pop
mov
das
dec
cmp
dec
ret
xor
adc
pop
repz
xor
add
popa
add
clc
outsl
movb
int
test
add
jnp
dec
cld
pushf
outsb
cmpsb
jp
ss
xor
cmp
leave
sti
inc
add
jecxz
sub
add
mov
lods
data16
xchg
cltd
jnp
aad
push
push
packssdw
nop
push
loop
mov
lods
add
cwtl
loopne
movsb
jb
xchg
inc
dec
incl
jnp
popf
arpl
push
rorl
fcomps
push
mov
inc
push
adc
add
fdiv
mov
and
mov
fwait
rorb
fnstsw
pop
pop
in
push
mov
and
jmp
jp
fisubs
cld
shl
sub
add
dec
sbb
and
iret
das
or
dec
xchg
add
dec
dec
repz
adc
aam
jl
add
add
arpl
lret
fisttps
xchg
add
adc
adc
adc
mov
sub
push
and
call
fucomi
add
cmp
add
mov
aas
movsb
mov
ja
clc
ss
in
push
pop
dec
fstp
add
adc
pop
xor
cmpsl
lds
or
out
add
add
sbb
add
add
dec
and
push
scas
add
leave
call
cmc
or
mov
roll
les
sti
out
rolb
inc
dec
inc
stos
mov
ret
es
cld
pushf
sub
jg
movsl
add
mov
add
pushf
add
dec
mov
xchg
lahf
mov
add
pop
mov
push
push
jo
mov
jecxz
gs
pop
sti
mov
ljmp
add
add
push
cmp
add
adc
inc
pop
inc
and
xchg
sub
cwtl
inc
cmp
mov
scas
bound
add
inc
and
mov
add
dec
fldl
add
add
frstor
pop
cwtl
fimuls
or
jecxz
add
xchg
dec
add
cmp
cltd
mov
lcall
jge
imul
jl
push
pop
cli
add
out
dec
and
mov
inc
dec
push
push
push
pop
insl
mov
fsubrl
lret
push
dec
in
mov
rcrl
add
mov
fistpll
xchg
and
cmp
dec
add
js
int
unpcklps
test
mov
xor
inc
xor
negl
add
aas
push
or
mov
mov
xchg
push
adc
fildll
out
lahf
pop
or
pop
movb
add
mov
das
pop
dec
and
inc
jp
out
push
loopne
lods
lahf
jge
xor
insb
sub
rol
sbb
adc
aas
add
sbb
enter
mov
or
add
sub
xor
push
add
add
cmp
inc
and
adc
shll
push
faddl
xor
dec
xchg
mov
inc
pusha
jle
ror
adc
add
jae
inc
outsb
dec
fstpl
push
or
addr16
and
mov
add
mov
out
roll
pop
sahf
push
fimull
adc
xor
jo
dec
icebp
ret
sbb
cmp
xor
xchg
mov
dec
stos
roll
pop
add
add
sbb
lldt
cmp
insl
push
add
inc
std
andl
loopne
mov
push
adc
xchg
pop
nop
subb
mov
mov
mov
add
mov
xor
mov
pop
xchg
add
dec
and
cmp
test
dec
cltd
pushf
inc
movsb
out
out
pop
mov
ljmp
movsl
out
sub
adc
add
xchg
lcall
push
pop
js
add
dec
loopne
xchg
jmp
int3
in
mov
cmpsl
add
mov
xchg
and
xor
test
ficompl
std
pop
mov
mov
add
xlat
add
mov
lahf
xchg
dec
pop
inc
dec
mov
fstpt
jl
jmp
lock
xorl
push
daa
sub
data16
insl
testl
add
ss
mov
scas
push
xchg
inc
add
and
jns
dec
jecxz
enter
or
in
or
jno
sbb
jmp
cmp
lea
lret
add
fbld
add
test
jns
fcomps
adc
pop
cmp
je
pop
mov
in
and
stos
sub
or
add
fnstcw
push
fildl
mov
add
test
ja
and
mov
add
call
loope
int
and
cmp
mov
gs
dec
lret
mov
sti
ror
clc
nop
pop
out
sbb
or
clc
dec
inc
push
dec
add
outsb
bnd
pop
mov
dec
pop
add
mov
pop
dec
dec
ja
rcl
test
push
ljmp
iret
xor
imul
movsb
aam
sbbb
and
das
daa
pushf
pop
add
xor
mov
sbb
adc
xchg
clc
mov
testb
loope
pop
fwait
add
ja
xor
xchg
into
mov
add
loopne
divl
aad
mov
outsb
shrl
inc
mov
mov
jmp
fimuls
dec
jl
insb
push
push
addb
jae
lcall
add
xor
cli
jp
cld
jg
jne
mov
pop
pop
notl
sti
roll
aam
jae
in
push
stos
out
adc
xchg
sbb
test
cld
and
add
push
sbb
add
pushf
cmp
and
push
sbb
imul
out
push
push
insl
mov
out
add
add
dec
fstpt
and
add
rcll
push
inc
lret
mov
or
add
loop
add
add
xchg
ljmp
dec
ja
add
movb
sub
mov
add
add
add
insl
fimull
dec
jg
mov
and
je
out
std
loopne
add
push
inc
std
pop
push
imul
jmp
clc
jle
rcrb
add
and
pop
lea
xlat
daa
loopne
mov
xchg
aam
stos
cmpsl
in
adc
xchg
add
aas
adcb
call
add
and
add
xor
fisttpll
fldl
movb
add
xchg
sbb
add
leave
test
and
mov
insl
add
push
mov
icebp
xchg
cmc
add
or
test
xchg
xlat
imul
popa
xor
imull
adc
fs
mov
add
daa
lret
fistps
jb
push
test
mov
in
mov
add
sbb
add
add
mov
jns
out
add
int3
mov
pop
jns
outsb
leave
aaa
popa
add
mov
mov
adc
xor
lahf
or
push
mov
call
cli
mov
xor
adc
xchg
sub
bound
ret
adcl
and
clc
stos
and
inc
push
jl
pop
std
or
cld
add
jmp
and
fnstcw
in
inc
aas
pop
mov
data16
inc
push
divb
shlb
xchg
sbb
lds
cmp
hlt
sub
jl
aam
lods
inc
cmp
loopne
repnz
loopne
jge
or
fisubs
xchg
sub
cltd
push
das
in
out
mul
lahf
cli
or
ljmp
pop
adc
adcl
rcrl
inc
mov
or
mul
mov
rclb
repnz
sbb
pop
pop
and
lahf
or
dec
je
test
cli
or
or
mov
push
xchg
cmp
dec
dec
hlt
repz
sub
mov
jno
jle
xchg
push
mov
and
adc
mov
clc
push
scas
lcall
and
xchg
cmc
and
sub
add
aad
repnz
pop
cli
mov
es
scas
icebp
add
jno
sub
scas
push
iret
or
xchg
ds
cmp
push
loopne
add
inc
outsb
add
call
and
sarb
jo
rolb
jg
pop
aam
mov
sbb
add
adc
xchg
ljmp
std
mov
scas
push
xchg
cmpl
lods
mov
mov
sbb
and
mov
gs
icebp
add
sbb
and
and
enter
xchg
rolb
jmp
add
mov
push
aad
loop
subl
aam
rcll
leave
inc
mov
cmp
add
mov
add
ret
dec
das
bound
inc
jo
add
insb
or
scas
dec
shrb
cmc
add
pushf
loopne
in
jo
xor
dec
pop
sbb
xor
xor
add
outsl
icebp
add
in
jle
stos
es
add
popf
pop
popa
add
nop
outsb
push
std
das
loopne
lcall
xor
mov
inc
add
dec
mov
popf
adc
pop
in
cwtl
mov
cmp
fadd
or
mov
cmp
mov
cld
add
add
or
add
xchg
les
lds
ljmp
or
les
adc
xchg
cli
cmp
inc
mov
cmp
add
loope
add
add
sub
nop
cmpsb
push
gs
xchg
cs
add
jp
add
les
cmp
inc
enter
add
mov
push
cmp
push
std
add
add
add
insb
inc
add
cmp
icebp
or
lret
js
mov
lds
mov
adc
cmp
mov
add
add
add
aaa
ficomps
push
insb
add
jno
mov
xchg
out
enter
loop
add
mov
lds
add
bswap
mov
dec
inc
adc
pop
mov
jp
inc
mov
xor
mov
stos
push
sbb
add
sti
add
and
push
xchg
shl
je
icebp
arpl
imul
add
inc
cmpl
mov
cmpsl
add
pop
aad
out
cmp
cmc
mov
lea
push
fldcw
add
movl
popa
incl
movl
lods
mov
adc
cmc
add
pop
add
xchg
push
in
add
mov
outsl
add
add
inc
js
mov
add
and
add
add
fadds
fcompl
outsl
add
leave
and
xor
data16
lds
add
add
mov
stos
add
jb
mov
lea
out
mov
mov
clc
sbb
fmulp
xor
xchg
popa
mov
icebp
add
or
sbbl
sbb
das
jo
fldl
fistpl
int
inc
cmp
cwtl
sbb
lret
movsb
addb
test
or
inc
mov
pop
sbb
push
or
dec
aad
call
add
pop
mov
mov
lret
fisttps
cwtl
stc
xchg
cld
int3
mov
sbb
mov
in
pop
movl
mov
push
xchg
les
mov
xchg
fadds
shll
inc
inc
xchg
or
sarb
mov
pop
scas
push
pop
mov
xchg
adc
add
dec
pop
mov
cmp
jo
adc
sub
mov
mov
mov
mov
add
xchg
jg
add
mov
push
loope
call
lret
jb
call
add
or
je
enter
xorb
faddl
sbb
sti
arpl
mov
gs
add
add
adc
add
and
sbb
out
mov
add
or
xor
push
mov
ss
add
cwtl
fisubrs
add
bound
scas
cmc
cmp
sbb
push
in
inc
fiaddl
divl
and
mov
fstps
scas
pop
inc
jnp
add
dec
insl
ljmp
cwtl
dec
push
arpl
scas
ret
push
push
ja
in
jmp
inc
cmp
adc
jnp
aas
xlat
out
scas
lods
add
fcoms
push
xchg
into
test
or
adc
fwait
std
pop
lock
push
insb
sub
add
mov
into
and
inc
xor
add
mov
push
jbe
mov
sbb
insb
sbb
mov
add
sbb
pop
and
out
add
jp
outsb
fcomps
add
cmp
jge
aad
in
add
incl
rcrl
add
sbb
lcall
mov
add
xchg
pusha
outsb
repz
add
ja
test
lret
add
jno
out
ret
add
loop
adc
stc
stos
outsl
inc
push
pop
add
add
lods
push
filds
vcvttps2dq
dec
cli
jnp
js
xchg
add
or
dec
pop
arpl
shrb
push
stos
or
imul
push
and
imul
mov
leave
mov
lahf
fs
aas
lods
add
mov
add
add
lahf
call
dec
adc
daa
fsubrs
cmpsl
gs
pushf
mov
int3
cmp
add
add
adc
mov
adc
sahf
mov
or
add
ja
mov
pop
insl
or
adc
lods
mov
loop
xlat
pop
cli
mov
scas
das
dec
push
test
cmc
mov
add
mov
add
cmp
pushf
pushf
rcrb
negl
pop
jp
das
add
cmpsl
mov
sbb
pop
mov
fcom
imul
dec
incb
out
test
pop
sbb
add
and
in
push
mov
add
movsl
adc
subl
or
mov
sub
test
dec
fwait
xor
insb
cltd
fstpt
cmp
cmp
orb
inc
movsb
xchg
jle
inc
fsubrs
xchg
jns
jb
add
jl
aam
repnz
push
andl
lcall
insb
and
je
aad
das
cmpl
int
enter
lret
add
mov
ja
faddl
arpl
push
fcoml
movsl
pop
fs
or
xchg
jno
xchg
pop
int3
xor
add
stos
mov
or
jbe
loop
xor
mov
daa
add
lds
add
sbb
out
jmp
adc
add
sub
and
pop
mov
dec
cli
jmp
and
add
imul
test
mov
int3
sti
xlat
sbb
mov
xor
add
add
push
movzwl
push
jbe
les
sahf
loope
shll
sbb
cli
dec
pop
and
adc
mov
cmp
movsl
enter
jno
outsl
stos
sub
mov
adc
add
cmp
sarb
test
fs
pop
iret
xchg
aad
mov
fld
add
stc
add
adc
das
ds
mov
mov
pop
repz
inc
aad
inc
add
xchg
stc
add
add
mov
cwtl
sub
or
pop
jg
adc
pop
testl
mov
add
xor
sbb
fdivrl
add
jae
jg
pop
loope
in
fildl
adc
inc
mov
xor
out
push
icebp
xchg
add
out
negl
ret
lcall
shll
aad
adc
push
pop
sarb
inc
adc
xlat
int3
xor
int3
mov
add
in
and
cmp
sbb
push
add
push
mov
add
jno
fstps
lods
add
dec
mov
xor
outsb
and
testb
rcrl
mov
xchg
cli
pop
sub
add
push
cs
add
cltd
jo
add
test
pop
add
adc
add
sbb
xlat
data16
lahf
mov
aas
pop
dec
sub
lods
or
aad
ficompl
or
mov
jbe
sbbl
test
push
inc
add
mov
add
jmp
dec
les
leave
sub
cmp
push
xchg
cld
enter
add
mov
add
add
xor
mov
test
data16
loopne
mov
fwait
out
fadds
or
imul
aas
int3
sub
mov
adc
xor
dec
shr
loope
loop
mov
loope
xor
mov
add
add
cmpsb
cmp
cld
add
add
xor
nop
testb
lret
mov
xchg
xchg
sbbb
jmp
lock
mov
dec
mov
pop
sbb
jg
or
mov
insb
ss
cs
pop
rcr
ss
stos
cltd
or
and
push
ja
stos
cmpsl
mov
test
push
lret
add
mov
movsb
add
std
and
rol
jno
and
outsl
mov
fcomps
inc
dec
push
test
cmp
out
mov
dec
pop
xor
cmp
sbb
add
inc
fld
add
xchg
push
mov
mov
inc
test
aas
xchg
mov
xchg
sub
in
xchg
daa
xchg
ret
adc
jmp
in
add
adc
add
movsl
or
repnz
out
xchg
add
jne
cmp
outsl
mov
add
rcrl
pushf
std
jp
rcrb
repnz
ud1
stc
dec
lock
adc
std
inc
fwait
cltd
mov
rorb
add
aam
cli
xchg
mov
push
imul
outsb
dec
leave
mov
mov
pop
adc
shrb
fildll
push
cmp
sbb
jg,pn
mov
add
jnp
jp
xchg
mov
popl
push
inc
mov
je
add
pop
leave
sahf
imul
pop
bound
insl
dec
add
sub
fimull
fwait
orl
add
and
mull
fcompl
aam
mov
jbe
add
jo
jns
dec
add
add
mov
dec
mov
arpl
jecxz
add
add
cmc
rcll
rolb
and
lcall
add
mov
push
fs
add
repnz
les
loope
pushf
test
mov
add
shl
lods
jge
icebp
pop
lods
pop
fildl
clc
adc
inc
cs
jmp
and
jp
add
dec
dec
out
subl
add
pop
mov
sahf
inc
push
jge
pop
mov
fsubrp
add
dec
pop
jbe
out
add
mov
shrl
or
add
xor
scas
fnstcw
sbb
or
mov
add
jp
add
rorb
dec
mov
addr16
xor
sahf
and
sbb
das
xchg
ljmp
mov
push
cs
or
xor
and
inc
xchg
cmp
jle
cwtl
push
jnp
mov
add
add
inc
dec
or
cwtl
mov
mov
imul
out
and
sbb
out
clc
cmpsl
jae
sbb
push
jnp
jecxz
push
insb
fstl
fcompl
add
test
cmp
sahf
add
and
icebp
pop
dec
scas
add
clc
sbb
pop
add
ret
scas
loope
push
outsl
sub
or
add
push
add
mov
outsl
pusha
inc
out
es
add
push
scas
cmpsl
or
imul
mov
add
mov
pop
stos
adc
lret
test
push
je
mov
cvttps2pi
and
sti
ror
mov
pop
fdivs
inc
or
or
jle
xor
andl
push
testl
negb
sub
fs
add
add
sub
add
cld
rcrb
or
scas
sub
movsb
clc
adc
push
fstp
inc
push
dec
xor
inc
into
add
mov
icebp
jmp
inc
jno
adc
pop
push
cmp
cltd
ror
imul
cmp
jmp
jne
cmc
lahf
push
pop
cmpl
jo
pop
or
mov
dec
adc
adc
add
aad
push
outsl
int
xlat
ljmp
std
and
inc
rol
adc
ja
popf
add
mov
aam
ret
psraw
cmp
in
add
sbb
stos
push
in
fidivl
mov
push
ficoml
ret
push
add
sub
add
lret
rcrb
jmp
xchg
mov
mov
cmp
mov
add
inc
sbb
mov
and
stos
xlat
sbb
add
mov
add
pop
jmp
or
add
sbb
test
lds
mov
adc
pop
pop
jmp
rorb
sbb
jns
add
add
jl
movsb
xchg
sbbl
cmpsl
fldenv
fcompl
lds
adc
and
dec
outsl
negb
lahf
push
out
inc
pop
sbb
enter
add
xlat
incl
fldl
imul
and
push
les
call
aam
and
ljmp
xchg
add
imul
repz
sbb
clc
sbb
add
xor
loopne
add
mov
inc
adc
add
lahf
enter
adc
add
push
stos
movsb
lret
jnp
pop
daa
out
aam
movsl
jp
arpl
dec
pusha
bound
jbe
inc
pusha
scas
out
jmp
sub
cld
add
out
xchg
xchg
mov
int3
mov
pop
jecxz
cli
hlt
pusha
cmc
ljmp
mov
sbb
sti
imulb
sub
add
fcoms
int
iret
add
loopne
jno
stos
mov
mov
pop
xchg
sbb
dec
add
ja
aas
jae
add
push
movsl
add
add
das
popf
mov
add
movl
stos
pop
mov
popf
or
ret
mov
fiaddl
xor
push
xchg
movsb
imull
push
loopne
jmp
mov
xor
xor
daa
jne
jp
mov
insb
adc
sub
xlat
ss
insb
clc
faddl
xor
mov
sbb
lahf
mov
movsb
add
adc
dec
dec
je
add
adc
add
pushf
inc
loop
aad
test
add
sub
pop
popa
in
fimuls
icebp
and
repz
dec
sub
xchg
lea
adc
mov
sub
push
cmp
stc
mov
add
sub
fsubr
push
ds
roll
or
scas
xchg
cmp
sarb
andl
fdivl
push
sahf
inc
add
and
xor
inc
bound
mov
test
or
or
cli
inc
sbb
sub
ret
fs
sahf
addl
pop
iret
add
sub
lahf
lea
or
outsb
and
fstpt
push
mov
shrb
and
push
add
add
int3
pop
add
mov
lcall
les
cmp
add
inc
add
mov
inc
aas
add
add
sti
dec
push
daa
shll
fisubl
add
lret
dec
mov
pop
data16
rcll
nop
pop
data16
or
add
sahf
fdiv
jmp
jae
mov
mov
pop
aam
cmpsb
pop
inc
pop
xchg
adc
ret
sub
xchg
pop
and
in
jmp
inc
in
adc
xchg
mov
loope
ss
jnp
repnz
add
push
mov
test
addb
les
test
jge
mov
stos
lods
icebp
jge
lods
outsl
arpl
inc
xor
jnp
mov
into
mov
pop
clc
add
rcrb
popa
loop
data16
popa
lds
ret
les
xlat
mov
clc
clc
sti
imul
xor
mov
dec
loop
iret
add
clc
jne
js
imul
nop
lcall
push
xor
push
arpl
nop
adc
xor
sbb
in
int3
mov
rcll
xchg
xor
ret
out
pop
or
sub
add
push
jnp
sbb
xchg
lret
sbb
dec
scas
add
call
ret
test
or
fimull
jo
jae
jae
add
lock
iret
adc
lea
es
in
ds
and
icebp
imul
int3
add
lock
add
xchg
lcall
jp
mov
fiadds
popf
sbb
inc
add
adc
xor
popa
push
fistpl
shlb
sub
ret
ljmp
lock
push
adc
fmuls
aad
and
mov
mov
sub
inc
push
pushf
dec
pop
or
daa
and
jae
fidivrs
push
push
pusha
cmp
sbb
pop
sbb
cmp
mov
or
sbb
fucomip
add
int
mov
ret
daa
adc
incl
dec
cmpsl
xor
lret
lods
ljmp
adc
std
fsubs
pop
add
mov
xchg
pop
nop
mov
push
movsb
je
outsb
fildl
add
xor
ja
xchg
cltd
ret
and
pop
push
mov
out
pop
add
add
push
in
test
mov
xchg
test
pop
scas
clc
dec
into
add
add
push
jmp
jge
fildl
jg
mov
add
out
aas
pop
mov
cltd
pop
in
test
stos
jbe
cmpsl
add
sbb
and
movsb
xchg
push
pop
aaa
loop
jecxz
mov
das
adc
xor
xor
aaa
cmp
add
xchg
add
insl
stos
push
add
add
xlat
scas
cmpsb
xchg
das
or
pop
pshufw
loop
add
add
fiaddl
sub
adc
adc
inc
and
jbe,pn
stos
test
cmp
movsb
push
ds
add
cmp
das
addl
pop
and
jmp
pop
inc
testb
movsl
incb
fwait
int
xchg
lea
int
shll
mov
test
movb
cld
int3
mov
add
into
add
push
push
mov
dec
rol
into
add
fistpl
cwtl
jnp
fldenv
mov
inc
aas
mov
cmc
cld
or
sbb
js
incl
inc
pop
into
cmp
ror
lcall
push
je
add
pop
add
sbb
sbb
fidivrl
mov
dec
pop
mov
sub
dec
or
xlat
bound
adc
mov
lods
mov
add
or
mov
add
insl
jmp
xlat
mov
cli
dec
sbb
add
xchg
incb
sub
outsb
add
xor
cmp
cwtl
out
sbb
inc
test
add
mov
das
lret
lods
test
hlt
xor
popa
and
mov
cmc
ljmp
loopne
jo
inc
scas
dec
dec
ret
and
push
loop
sub
add
pop
add
add
add
test
push
jl
mov
cli
mov
add
call
or
daa
mov
add
aas
ss
mov
jno
cs
movsb
fmull
add
adc
sub
mov
sarb
fbld
jo
mov
pop
mov
cmp
int3
push
add
add
mov
fwait
es
xchg
or
aam
lock
pusha
cmp
insb
xchg
ret
add
cld
sbb
cld
xchg
iret
cmp
out
cmp
pop
add
or
dec
jmp
jp
movsl
mov
movsl
mov
arpl
fdiv
mov
add
add
out
add
add
outsb
adc
es
test
xor
add
int3
es
divb
adc
mov
repnz
mov
adc
inc
je
cmp
mov
sbb
aas
ret
imul
mov
lcall
push
xchg
mov
ds
cmpsb
lahf
add
mov
stos
sarb
loope
mov
xchg
add
outsl
scas
in
xchg
test
lds
or
out
jno
adc
nop
pop
add
lret
xchg
roll
jp
pop
ret
call
jmp
lods
add
mov
or
insb
push
out
push
inc
push
sbb
shlb
psllq
dec
add
test
cmp
or
and
xbegin
pop
cmpsb
sub
test
xchg
or
xor
mov
jg
fwait
add
fstpl
popa
cmc
push
pop
jp
faddl
dec
outsb
mov
add
aad
fnstsw
and
jno
add
pop
mov
xor
mov
lods
test
es
out
adc
fcomps
test
popa
add
adc
pushf
adc
inc
jp
arpl
adc
xchg
dec
add
addl
push
outsl
test
add
mov
int3
movsl
icebp
add
leave
jg
add
or
add
xchg
mov
jb
add
adc
cmp
outsb
and
adc
xchg
icebp
push
loope
cmp
or
icebp
jnp
jne
cmpsl
add
add
pop
dec
fdivrl
push
pusha
xchg
or
iret
jo
xor
adc
idivl
in
out
rcll
add
add
lods
les
fadds
dec
xor
int3
idiv
mov
pushf
fdiv
jmp
int
or
loope
mov
hlt
and
andb
mov
popa
add
mov
mov
cmc
out
inc
add
mov
cmp
add
pusha
sub
pop
jmp
adc
jg
add
mov
pop
xchg
dec
mov
rcrl
push
arpl
fcomps
mov
stos
xor
mov
enter
add
out
or
addb
push
pop
leave
fisttpl
mov
push
cmp
add
out
pop
inc
outsl
aam
mov
xor
scas
add
sbb
ds
add
add
pop
adc
or
mov
mov
mov
add
sub
add
sbb
cmp
cmpsl
add
gs
or
cltd
popf
jnp
xorb
rcrb
push
cmc
fnstsw
pop
bound
pop
lahf
cmp
call
mov
add
sti
popl
xchg
jge
in
hlt
pop
jle
loope
mov
ja
jo
faddl
call
addl
fldt
sub
mov
add
lcall
add
es
xor
mov
mov
add
sub
in
xchg
pop
inc
es
test
add
mov
mov
test
cmp
push
decl
in
mov
add
popa
mov
shlb
add
les
add
and
xchg
imul
jns
data16
rorl
call
decl
add
test
iret
cld
push
in
push
push
add
out
mov
nop
xor
insb
outsl
js
push
mov
lahf
jl
dec
xchg
lods
cmpsl
nop
in
adc
ret
das
adcb
xchg
fdivl
inc
jp
or
push
sbb
paddb
jg
fistpl
lea
adc
xchg
dec
sbb
inc
je
fildl
sub
js
aas
xor
dec
push
push
dec
popa
out
fidivrl
xchg
lock
mov
add
jge
jb
cli
daa
jb
jp
sub
xorb
lret
in
pusha
dec
xchg
adc
jp
jne
sarb
fldlg2
push
sbb
xchg
ret
xchg
fdivs
repz
mov
mov
fdivrs
adc
cli
iret
rol
add
rcr
in
test
dec
lahf
outsb
add
mov
shrl
in
jg
and
loop
push
cwtl
sub
or
ja
add
aas
push
add
out
sbb
insb
insb
mov
dec
and
cmpsb
jecxz,pn
pop
jp
add
icebp
cmp
data16
out
push
stos
add
add
mov
adc
mov
or
dec
jmp
push
nop
stos
fadds
test
aaa
ja
push
xchg
dec
add
xor
or
test
add
sub
rorl
mov
popf
and
inc
sbb
std
or
pop
mov
fsts
jmp
push
arpl
jo
jae
ljmp
dec
pop
dec
iret
pusha
pop
test
add
testl
sbb
jmp
not
mov
push
sbb
pop
lock
add
add
xchg
sbb
jbe
ds
lcall
out
dec
insb
mov
in
push
dec
bound
jno
mov
repnz
mov
pushf
fs
mov
and
add
lods
scas
adc
pop
ja
push
mov
inc
sbb
xchg
add
and
inc
movb
mov
push
rolb
jns
out
mov
les
loope
fcom
pop
jp
into
hlt
sti
mov
popa
mov
push
add
repnz
and
mov
in
jo
mov
repz
add
add
sub
aas
sub
xlat
push
inc
daa
mov
mov
out
push
add
lcall
loop
add
xchg
insl
add
sub
faddl
testb
cs
sub
lret
adc
imul
or
jns
mov
inc
mov
roll
enter
mov
cmp
fwait
add
shll
sbb
add
mov
inc
xchg
push
xchg
fnsave
adc
add
mov
test
out
mov
add
cmp
dec
movsb
add
adc
out
mov
add
jmp
out
pop
cmp
mov
adc
lret
add
add
stos
ret
add
mov
mov
cld
jnp
iret
adc
push
jle
jno
jne
add
jo
rcll
cmc
inc
test
pusha
das
add
stos
out
add
lds
cmp
icebp
push
mov
mov
sbb
add
xchg
flds
cwtl
or
add
mov
sub
sahf
inc
pop
push
mov
adc
xorb
popa
or
fisubl
out
lretw
xor
movsb
push
mov
pop
xchg
cltd
cmp
cmp
in
jo
lock
mov
inc
and
cmp
arpl
subl
inc
xchg
jmp
sub
je
cmp
repnz
shll
pop
push
dec
fimuls
add
inc
stc
sbb
adc
add
pop
mov
sti
jecxz
ret
shlb
inc
rclb
and
cld
pop
adc
xchg
out
xor
add
and
imul
push
add
cmp
add
pop
je
cmc
leave
daa
add
add
stc
sti
xchg
pop
mov
mov
je
add
dec
adc
dec
mov
add
incb
mov
mov
sti
roll
adc
in
mov
sahf
aas
fiadds
pop
orl
fistps
sbb
insb
shr
xor
addl
jae
insb
adc
xchg
mov
std
and
dec
add
mov
xchg
fidivl
aas
add
dec
shlb
mov
xor
xor
push
mov
add
inc
xchg
lret
cmp
jge
add
arpl
adc
insl
mov
add
lahf
out
add
imul
add
mov
add
push
push
fcmovb
and
inc
or
or
mov
fdivl
in
mov
cltd
dec
xor
fcomps
jbe
push
nop
mov
test
shlb
mov
add
repnz
mov
pop
xchg
push
push
cld
cltd
jne
rolb
mov
mov
out
sub
add
faddl
xchg
add
mov
push
sub
add
lea
out
leave
cmpsb
and
add
test
cwtl
sub
les
mov
jo
mov
shrl
daa
lret
pop
les
rdtsc
xchg
call
pop
insl
lret
add
jge
test
add
std
jnp
adc
add
xchg
aaa
add
test
add
aaa
add
aam
mov
mov
icebp
fildl
jmp
jl
jne
shrl
sahf
insl
xchg
sub
ret
add
in
repz
and
outsb
icebp
push
aam
mov
add
push
test
jmp
negl
xchg
outsl
rcrb
pop
stc
pusha
mov
adc
subb
test
add
or
mov
dec
shlb
test
push
jmp
add
add
add
mov
loope
add
mov
pop
and
jg
cmp
jnp
ss
into
pusha
dec
sbb
test
push
pop
and
out
mov
icebp
xor
dec
cli
and
sbb
sbb
das
aaa
xor
hlt
inc
shrl
stc
in
pop
push
lds
into
roll
movl
add
add
insb
dec
loopne
stc
mov
sbb
adc
dec
lea
add
inc
mov
mov
mov
in
stos
stos
stc
add
lret
cmc
lods
mov
mov
incb
icebp
add
push
aas
push
test
das
xor
and
xchg
div
jbe
out
fwait
add
fwait
mov
jmp
or
and
adc
push
push
xor
shlb
js
ret
dec
or
scas
and
cmp
daa
jno
scas
add
add
dec
mov
pop
dec
sbb
xor
inc
ficompl
enter
mov
add
cmpsb
sub
xchg
scas
mov
ds
dec
sbb
movsb
pushf
test
add
or
fs
rclb
add
sbb
clc
mov
lret
push
jae
lahf
add
nop
out
sub
pop
in
into
push
jno
sbb
or
dec
pop
out
push
outsl
mov
dec
cs
iret
inc
call
ljmp
jg
push
dec
jle,pn
push
mov
mov
insl
subl
inc
sbb
repz
ss
sub
mov
pop
add
mov
out
add
inc
shrb
pop
mov
dec
lea
mov
dec
call
lret
push
leave
jmp
inc
mov
fucomip
lea
cld
leave
clc
lods
jl
add
add
and
adc
pop
push
mov
mov
ss
outsl
xor
ror
cmp
out
add
add
das
inc
movq
or
add
xor
inc
sbb
dec
lods
pop
inc
xchg
add
sbb
imul
dec
scas
aaa
add
or
add
insl
sub
cmp
cmp
pop
mov
enter
orl
js
std
stc
and
int3
xor
push
in
push
lock
mov
jl
or
incl
sbb
xor
add
jmp
jge
pop
stc
xchg
xchg
sbb
add
loopne
pop
add
push
and
out
lcall
jns
fwait
int3
ljmp
cmp
cs
pop
jle
leave
into
cmp
hlt
pop
and
add
xor
pop
das
cmp
adc
push
pusha
xchg
sub
add
mov
mov
insl
cli
imul
add
hlt
repnz
add
mov
idivl
test
add
add
mov
roll
or
lahf
lret
jne
call
lock
outsl
subl
inc
mov
push
dec
outsl
scas
das
or
mov
lea
ds
mov
push
xorb
sub
fimuls
and
cs
jecxz
add
xor
pop
inc
roll
mov
sarb
into
cwtl
jbe,pt
enter
cmp
mov
loopne
mov
iret
lcall
addl
cmp
aas
pop
or
inc
add
sub
pop
ja
xchg
xor
sbb
push
push
inc
jnp
add
icebp
movsb
add
mov
sbb
movsl
dec
push
mov
je
jle
push
dec
mov
mov
or
test
jg
xchg
mov
add
shlb
fidivrs
cmp
shlb
add
dec
into
ficoms
movsb
cmp
push
push
push
xor
scas
es
repnz
sarl
and
mov
sub
add
dec
push
add
add
fadds
das
jne
mov
add
sub
dec
outsl
sahf
pop
pop
lret
call
aaa
jnp
jae
iret
add
xchg
divl
mov
out
fsubl
or
daa
sbb
adc
jb
push
xorb
jo
cwtl
add
push
jp
xor
inc
fsts
jb
jl
push
xlat
pop
in
add
xchg
shrl
sti
or
mov
and
scas
adc
ja
add
bndldx
lret
arpl
dec
fstp
mov
xchg
sbb
sbb
les
lret
add
push
bound
mov
cs
add
add
insb
cltd
ljmp
into
add
xchg
stos
mov
sar
add
jnp
mov
ds
add
int
nop
cwtl
inc
push
add
loopne
cmc
test
jnp
outsb
lods
test
mov
xor
dec
clc
les
push
jne
push
scas
scas
imul
or
and
xchg
mov
xchg
test
xchg
nop
pusha
rcl
fsts
sbb
sahf
ret
and
add
or
push
push
mov
xor
cs
cmp
imul
mov
cmp
add
mov
add
xor
loopne
stos
push
mov
add
add
mov
jo
andb
ljmp
dec
jl
stos
add
addb
xor
add
repnz
xchg
mov
jmp
dec
add
nop
pop
aad
push
das
inc
and
jb
and
in
cmp
fidivrs
push
sub
and
mov
test
or
jne
pop
outsl
and
adc
faddl
shll
arpl
jno
les
inc
push
pop
jp
fs
js
jmp
fsubrs
sub
push
add
arpl
out
sub
jecxz
cs
mov
aam
les
loope
pusha
movsl
pop
mov
test
mov
shlb
add
jp
add
arpl
aas
mov
dec
xchg
mov
in
sbb
leave
push
sarl
adc
not
jne
mov
add
push
gs
xor
es
jo
push
sub
pop
out
stos
gs
loop
test
or
insb
mov
add
add
push
cmpsb
test
sub
or
imul
repz
mov
rorb
add
es
mov
add
jl
fisttpll
orl
jle
or
lcall
jns
bound
stos
xor
cmp
add
cwtl
xchg
cwtl
push
add
cmpsb
sbb
aas
leave
mov
fidivrl
shll
push
mov
push
imul
jle
out
cmp
add
pop
addr16
push
inc
add
pop
imul
sbb
mov
lods
push
aam
test
and
pop
push
pop
or
lock
icebp
outsb
popf
int
jae
addb
inc
jecxz
mov
stc
dec
add
dec
xchg
fistpll
inc
or
jbe
jb
retw
add
xlat
lahf
insl
into
inc
add
mov
mov
outsl
jne
jns
sub
mov
mov
outsl
and
in
rdtsc
mov
xor
cmp
mov
xchg
push
cmp
push
outsl
xor
sbb
test
popa
iret
testb
mov
aaa
jne
mov
pop
dec
loop
mov
jb
pop
push
popa
cmpsb
insl
xchg
ds
adc
insb
inc
pop
dec
or
cwtl
dec
mov
push
loop
add
stos
xor
push
test
test
adc
xor
mov
add
add
mov
rcrb
aam
adc
push
add
jmp
sbb
jecxz
xchg
bound
xchg
gs
jmp
cmpsb
add
cmpsl
pop
ds
inc
push
add
mov
mov
pop
mov
js
push
push
mov
rolb
ja
lahf
loop
mov
xor
pop
cmovb
lods
lods
cmp
lret
or
outsb
adc
cmp
movl
movsb
push
push
xchg
xor
cmpsb
jno
push
inc
or
xor
clc
out
xchg
add
xor
incb
jle
xchg
dec
jo
enter
sbb
cmp
add
mov
xchg
in
outsb
lock
add
xor
or
fcomp
nop
cs
add
dec
cltd
int3
and
cltd
movsl
mov
mov
pushf
iret
fcoml
cmc
push
test
jmp
xchg
popa
aaa
cmp
ljmp
orb
dec
dec
push
lock
add
and
call
dec
and
or
jne
dec
add
gs
sahf
dec
add
push
dec
sti
imul
add
mov
add
stc
cltd
add
pop
pop
add
add
add
ja
aaa
mov
add
jge
add
pop
xchg
add
addb
cmp
stos
add
ret
xlat
js
es
fnstsw
mov
sbb
testl
add
js
add
pop
testb
and
adc
hlt
jmp
push
add
xchg
sbb
fs
jle
xor
add
push
jp
add
mov
incl
jo
iret
add
fldl
dec
or
mov
push
add
xor
pop
ss
je
push
jge
add
ret
and
jmp
adc
ss
adc
push
xchg
mov
dec
sahf
fs
int
rcrb
scas
outsb
add
int
lcall
inc
in
insb
data16
sbb
xor
fyl2x
push
push
orb
lds
and
int3
fmuls
jge
std
lods
dec
xor
adc
push
sub
xchg
loop
sbb
or
test
cmp
inc
iret
cli
fdiv
push
mov
xor
and
lods
stos
add
das
xor
push
xor
insl
cmpsl
lret
daa
inc
in
fdiv
cmpl
sarl
cmpl
add
add
scas
xchg
mov
aaa
xor
adc
mov
cmc
out
pop
fs
outsb
cmpsb
xor
stos
insb
out
add
add
add
jb
rcll
push
mov
or
in
out
js
pcmpeqd
ja
iret
mov
cltd
push
sub
imul
add
ja
jae
mov
sbb
jl
subl
sbb
push
sbb
add
jle
fdivs
rcrb
push
dec
jecxz
add
ss
dec
ret
lock
in
cs
gs
aas
into
aad
add
cs
mov
enter
dec
fdivrs
push
add
mov
repz
inc
or
xor
jge
and
xchg
adc
dec
stos
addb
aaa
xchg
add
sbb
pop
lret
je
jg
or
or
and
inc
inc
add
xor
jecxz
cltd
add
xchg
xchg
in
cmp
sbb
cmpsl
jecxz
cmp
pop
std
mov
xor
and
jns
aas
ljmp
add
lret
adc
ja
in
pop
add
add
imull
and
cwtl
ret
sub
pop
jp
or
into
fsubr
data16
fsub
xor
add
pop
out
pop
adc
std
cmp
add
dec
cs
lock
mov
jmp
add
pop
sti
mov
inc
mov
jg
pop
rclb
add
cmpsl
fildll
sub
xchg
test
add
or
ror
loop
aaa
iret
sub
xchg
pop
mov
adc
push
stc
or
jge
push
data16
insl
jg
subl
jne
imul
movsl
std
and
jl
adc
sahf
adc
sbb
jmp
add
add
pop
and
add
sub
cmp
rclb
xor
lods
inc
sbb
subb
rcrl
dec
adc
adc
lea
insl
add
add
sub
adc
xor
and
cmc
rorb
loop
es
sub
add
add
outsl
inc
mov
mov
inc
cmp
or
xchg
push
add
pop
aaa
add
mov
lcall
sub
imul
fimull
push
add
andb
push
jl
subl
or
sbb
fwait
xchg
mov
add
repz
out
divb
pextrw
xchg
pop
xchg
mov
arpl
jnp
int
mov
lret
sub
stc
xchg
dec
shl
or
filds
dec
dec
scas
and
nop
push
test
jp
xchg
lahf
mov
out
add
das
cmp
and
add
inc
add
dec
inc
cltd
dec
into
lahf
mov
dec
jno
push
mov
adc
mov
pop
sbb
jno
add
mov
jle
mov
jle
hlt
icebp
add
adc
mov
add
sbb
pushf
mov
in
add
test
or
xchg
enter
inc
xchg
mov
aaa
add
daa
add
xor
pushf
or
sbb
sub
roll
mov
add
sbb
add
add
lods
ret
add
stos
pushf
add
aaa
sbbb
mov
lret
push
add
daa
fimuls
es
push
ret
add
pop
add
out
pop
lahf
cmp
push
in
mov
add
cmc
jl
mov
jns
push
mov
pop
jecxz
es
push
data16
add
out
test
xor
sub
and
rcll
mov
popa
and
cmp
add
and
imul
and
xlat
outsb
in
jl
add
jle
in
add
jo
jb
add
out
adc
cmpsb
bound
pop
ret
sbb
popf
imul
test
add
les
adc
jno
ja
dec
pushf
notb
dec
mov
lock
cmp
xchg
xor
fsubrs
jge
fists
xchg
dec
sub
out
dec
repz
adc
pop
cwtl
push
or
mov
add
cmp
xchg
add
xor
movsl
sbb
mov
jge
js
mov
add
mov
inc
mov
stos
add
mov
sidtl
add
fildl
int3
xchg
or
push
fcom
mov
pop
add
add
cwtl
add
dec
mov
add
nop
xchg
cmp
mov
sbb
cmp
sbb
add
sub
sahf
int
xchg
adc
or
in
add
push
dec
push
negb
or
lahf
push
dec
xor
push
push
add
add
push
and
jno
sub
adc
nop
add
les
lods
and
addr16
push
loop
add
aad
add
mov
dec
loop
jmp
jnp
loopne
stos
aam
lds
add
sti
add
fstpl
add
stc
add
jns
or
add
sbb
jae
cmp
mull
push
stos
loopne
repz
xor
push
ja
pop
jae
or
adcl
imull
dec
mov
cmc
adc
outsl
mov
cmp
leave
sub
sbb
rcr
inc
addb
push
add
push
std
incl
stos
sbb
imulb
arpl
das
cmp
and
add
imul
int3
push
daa
in
out
add
dec
add
aam
or
add
int
mov
adc
push
push
or
popf
mov
sbb
mov
int
push
push
in
cmpsl
or
sbb
rcll
loop
pop
add
mov
adc
jb
test
jno
outsb
ret
out
mov
shrb
cmp
shll
xchg
sub
or
ss
xchg
popf
repnz
setp
push
mov
or
out
cli
orb
repnz
xor
pop
add
sub
xchg
arpl
test
xor
imul
add
inc
mov
xor
hlt
jne
xlat
frstor
lock
daa
add
add
fbld
imul
mov
popl
adc
mov
nop
lds
or
jo
nop
leave
sub
add
in
and
mov
js
addl
sbb
rorl
mov
insb
notl
add
fs
fiadds
push
shrb
in
lret
mov
push
jb
orb
sub
js
jno
test
gs
jno
adc
les
sbb
add
add
test
daa
insb
int
add
fcmovb
add
xchg
das
add
es
clc
push
cmp
sahf
sub
lods
and
outsb
add
dec
push
ja
adc
jl
cmp
xchg
jne
sub
add
mov
and
push
push
stos
ss
cmp
movb
add
call
cwtl
jge
add
scas
popf
sub
add
fisubrl
or
gs
mov
lret
push
or
adc
stos
test
inc
jg
out
xor
arpl
out
add
imul
out
adc
fst
mov
dec
arpl
lock
inc
add
rorl
leave
fildl
cmp
dec
dec
adc
push
stos
xor
fadds
loopne
pop
add
add
mov
pusha
mov
in
out
jo
xchg
test
jmp
inc
push
and
cltd
add
inc
arpl
test
mov
in
jecxz
inc
stc
addb
sbb
add
add
pop
outsl
out
lods
add
arpl
xor
addr16
push
or
leave
xchg
mov
clc
cmc
push
jno
das
sub
in
mov
ss
sbb
loopne
add
hlt
cmp
sbb
push
add
loop
stc
bound
mov
jb
add
mov
jg
lret
int3
mov
shlb
mov
pop
subl
stc
add
leave
lock
adc
cld
sti
xchg
mov
repz
adc
lock
lock
int3
or
aaa
outsl
mov
ret
icebp
mov
jo
stc
add
pop
xor
xchg
test
sbb
add
cwtl
test
pop
add
in
imul
std
mov
sub
rcll
test
in
cmp
mov
mov
stc
cs
and
outsb
push
add
or
lret
inc
clc
add
loope
add
sub
aad
out
sahf
inc
lock
test
rcll
add
mov
stos
aad
sbb
test
or
mov
and
jnp
das
jno
in
adc
sahf
xor
mov
fwait
aad
cmp
cmp
add
add
negl
xchg
rcll
ret
push
outsl
jl
nop
mov
icebp
int3
jne
hlt
push
sbb
sbb
jecxz
sbb
sbb
sub
push
gs
or
bound
add
mov
sub
movsb
jae
push
pushf
and
xor
and
imul
jge
mov
lds
lods
add
xor
lret
xchg
cmp
cltd
shll
jno
mov
sbb
ja
push
test
xchg
imul
mul
push
pop
inc
jae
or
or
outsl
add
add
repnz
pop
add
fimuls
sbb
out
mov
std
add
decb
xchg
sbb
push
loopne
add
popa
sbb
and
jo
cltd
cltd
add
mov
jmp
pop
enter
jl
cmp
push
add
scas
mov
jbe
jl
xchg
lods
add
mov
roll
out
or
notl
push
push
roll
add
dec
dec
data16
add
xor
add
daa
into
xchg
sbb
add
add
pop
in
sbb
add
loop
sub
sbb
ljmp
std
push
sbb
xchg
mov
cmc
dec
outsb
xchg
mov
pushf
xor
inc
sub
sbb
aam
int
adc
subb
outsl
xor
outsl
popf
ret
xor
xor
sub
leave
or
mov
sarl
mov
sbb
add
inc
mov
fdivp
xor
add
std
sti
data16
mov
dec
repnz
rcrb
stc
fstpt
sub
jae
jmp
sti
add
xor
sahf
out
cmp
into
and
pop
jns
sbb
rolb
into
xchg
lret
cwtl
fsubrs
inc
add
push
mov
jo
dec
mov
imul
sbb
out
mov
mov
fadds
add
fsubl
jnp
fdivrl
jecxz
add
jnp
or
push
sub
xor
mov
or
jnp
xchg
fisttpll
add
lahf
leave
loope
add
add
add
mov
jl
jo
jb
aaa
in
xor
add
push
xchg
add
imul
inc
add
add
add
add
in
cmc
dec
add
mov
adc
fmull
add
add
or
pop
scas
add
das
fsubs
nop
aam
dec
call
loop
add
mov
pop
dec
add
adc
neg
mov
jl
lods
imul
xchg
cmc
repz
dec
jle
add
shlb
sbb
clc
mov
inc
lahf
mov
add
adc
ret
sbb
mov
in
mov
mov
mov
sbb
mov
push
div
test
cld
movsb
mov
in
and
dec
cmc
cld
iret
pushf
sarb
bound
aam
add
stc
jmp
rclb
test
push
jge
sbb
push
add
out
out
and
out
add
cmp
outsl
fsubrp
adc
ss
and
add
xor
lods
xor
mov
dec
inc
xchg
cld
or
pop
xor
out
mov
movb
ficompl
add
push
push
xorb
lock
xchg
scas
ja
ljmp
and
cli
add
lea
pop
inc
cmpb
gs
mov
mov
jg
ret
inc
add
add
mov
sub
roll
nop
movsl
in
jnp
pop
add
stc
xor
jno
fisttps
sub
mov
jns
scas
mov
add
jbe
out
pop
add
jg
hlt
in
jns
pop
cmc
add
push
int
cmp
outsl
lods
cmp
mov
sub
fadds
imull
mov
mov
xchg
xchg
or
out
in
lods
ret
add
lcall
dec
lret
xor
cmpsl
lahf
imul
add
sbb
hlt
out
sbb
inc
subb
mov
dec
in
into
sbb
cs
fldt
jno
movl
js
pop
add
hlt
jae
fcoms
xchg
arpl
ljmp
sub
pop
mov
pusha
pop
dec
mov
dec
add
cmp
clc
add
inc
bound
loop
sbb
sub
inc
dec
mov
mov
adc
add
mov
mov
push
stos
inc
cmpl
or
sub
lret
hlt
sbb
gs
xchg
lahf
jge
push
dec
sub
dec
cmpsl
inc
fsubrp
fmull
mov
sbb
xor
notl
leave
or
sbb
jge
cmp
add
aad
add
jbe
pop
xchg
add
jl
add
mov
and
sub
loopne
add
stc
int
clc
dec
movsl
add
adc
sbb
add
xchg
mov
or
scas
test
cld
xor
or
scas
test
push
xchg
add
cmc
add
pop
adc
insl
cltd
leave
add
push
pop
outsb
push
imull
aaa
cld
cmovge
push
adc
or
cmp
xchg
cmp
add
and
loopne
lret
cmp
mov
int3
nop
or
or
jecxz
sbb
sbbl
dec
jge
repz
popf
repz
imul
sub
fs
arpl
subb
cmp
xor
bound
out
pop
in
dec
pop
testl
pushf
ret
ja
xlat
or
adc
inc
xchg
fidivl
cli
xchg
cmp
scas
insl
and
inc
and
gs
outsl
or
xor
mov
xor
adc
pop
ljmp
pop
or
das
mov
cli
popa
cmp
and
cmpsb
xor
in
mov
adc
jl
add
pop
fidivl
jb
mov
or
sbb
jnp
ds
add
mov
andl
pop
idivb
lock
por
imul
dec
jle
mov
cmp
mov
pop
push
push
stc
fsts
out
cmp
inc
mov
mov
icebp
popa
xchg
xor
repz
mov
dec
clc
std
sub
popf
int
pop
inc
addb
mov
adc
insb
xor
scas
pusha
test
jg
cld
les
jmp
add
and
add
add
add
xor
imulb
pushf
sbb
and
add
lret
xor
add
addl
cwtl
lcall
add
popf
aas
adc
adc
fmul
add
xchg
add
xorl
adc
xchg
xor
xchg
stos
xchg
pushl
xlat
repnz
ds
loopne
inc
dec
inc
frstor
fdivrs
push
cmp
add
adc
pop
aaa
fadds
maskmovq
testl
arpl
add
popa
into
mov
fimuls
add
inc
andb
fs
rcll
ja
or
mov
insb
subl
push
or
lret
loopne
cli
shrd
xchg
adc
sub
add
add
int
fidivl
add
and
pop
addr16
add
fmul
dec
in
mov
cmp
sti
jle
sbb
ja
int
loope
into
test
add
pop
jp
mov
rclb
xor
mov
xor
int3
fprem1
negl
mov
clc
push
pop
xor
rcrl
sahf
push
mov
xchg
xor
pushf
sub
icebp
addb
daa
fisubl
cld
xor
xchg
lret
stc
add
push
mov
mov
in
xchg
test
out
gs
test
xchg
push
bound
pushf
add
mov
add
add
add
mov
xchg
das
mov
outsl
xchg
js
xchg
add
js
pop
sbb
pop
cli
rcrb
int
add
pop
popa
sahf
add
push
add
in
out
cmp
outsl
fwait
xor
add
push
sbb
iret
lods
ds
jnp
icebp
jnp
test
inc
insb
xchg
add
test
aas
or
dec
jmp
cmp
add
add
cmp
scas
enter
in
adc
mov
ret
xchg
out
or
bound
xor
mov
pop
mov
jecxz
loopne
sub
lds
jne
push
out
pop
fxsave
out
fwait
loop
push
js
push
jle
or
or
xchg
movsb
aad
sub
loop
jmp
scas
sub
outsl
scas
loop
add
pop
xor
daa
mov
ds
jge
fadds
mov
xchg
xor
inc
jge
inc
in
jl
mov
cmp
xorb
pop
jg
or
push
imul
mov
pop
and
jg
mov
mov
pop
push
xor
lret
mov
mov
lcall
and
sbb
outsb
test
out
std
add
shl
push
in
add
aad
pusha
inc
adc
cltd
push
mov
decb
push
mov
dec
stos
pop
pop
testl
and
lock
dec
inc
shrb
lea
sbb
add
push
xchg
out
sarb
test
loopne
add
rorb
inc
je
cli
pop
sbb
inc
outsb
mov
push
add
push
test
or
jle
insb
push
outsb
out
rcrb
add
add
aam
cmp
add
test
ficoms
lret
pop
inc
add
mov
jecxz
mov
repnz
pop
mov
push
add
and
cwtl
cmpsb
cmp
popa
adc
xor
fwait
add
str
cltd
or
aaa
jecxz
adc
test
xchg
push
cmpsl
add
add
mov
das
sets
add
roll
sub
scas
add
add
and
xlat
cmpsb
push
pop
jbe
cld
add
mov
xchg
fiaddl
repnz
outsl
xor
add
sbb
lea
adc
test
xchg
arpl
repnz
inc
add
lods
fst
add
xchg
push
add
sbb
stc
sbb
xor
add
mov
fcomp
mov
sbb
sbb
int3
adc
adc
inc
push
add
in
mov
cmpsb
jae
lods
pop
pop
test
xor
mov
and
js
ficompl
mov
push
cmc
das
pushf
shlb
hlt
inc
add
les
lds
mov
in
loopne
push
and
add
jno
mov
sub
and
pop
dec
fildl
sbb
sbbb
jno
mov
inc
add
inc
in
test
mov
fldcw
lret
es
sbb
sbb
flds
int3
sbb
fbld
les
inc
pop
and
xor
repz
cmp
xlat
pushf
xchg
ret
jecxz
sub
addb
mov
ret
nop
sub
ds
mov
in
out
jb
adc
add
popf
ret
sbb
xchg
inc
jge
fmull
push
lret
mov
daa
sub
push
pop
imul
add
sbb
inc
test
sub
sbb
pop
xor
stc
out
add
push
add
pop
push
dec
cli
sbb
add
out
jno
mov
hlt
xchg
popf
pop
xlat
mov
pop
in
add
pop
flds
sbb
adc
adc
lods
out
add
dec
add
mov
push
ss
dec
xor
add
add
add
subb
add
dec
mov
sar
out
add
das
es
sbb
inc
fwait
push
pusha
insl
cmp
add
dec
movsl
pop
add
jle
sbb
mulb
xchg
add
gs
or
fisubrl
insl
js
sbb
pop
subl
aas
pop
add
xchg
inc
add
fstl
sarl
mull
mov
insl
mov
sbb
pop
add
int
mov
lds
pop
xor
jle
std
add
add
lods
rcr
lcall
pop
lret
mov
mov
in
inc
add
fistps
mov
test
jg
in
sbb
add
or
or
push
ja
add
loop
add
inc
xchg
sbbl
cmp
repz
aam
add
add
aad
jnp
sahf
pop
add
dec
sub
stos
xchg
sub
aad
lock
add
pop
mov
ds
add
out
ret
jae
jle
sbb
and
mov
rol
loope
xchg
add
jns
lods
add
sub
test
add
imul
andb
hlt
mov
and
push
cmp
push
mov
add
dec
popf
push
dec
mov
mov
inc
pusha
daa
cli
ljmp
sti
imul
pop
aaa
and
int3
push
add
xchg
in
inc
jecxz
adc
jae
push
cmp
imul
sub
add
mov
call
sldt
test
xor
mov
ds
jbe
fists
int3
sub
xorb
lret
repnz
imul
cmp
and
mov
mov
in
mov
push
inc
outsl
aad
xor
push
jo
mov
stc
pop
mov
inc
or
popf
in
aaa
std
add
push
inc
mov
dec
and
add
push
out
add
push
or
mov
sub
sbbb
jno
int
in
jo
sbb
test
inc
mov
xor
dec
scas
inc
sbb
shr
mov
stc
sub
jmp
adc
pop
fldenv
mov
mov
lods
cmp
ljmp
aad
pusha
xor
aas
inc
out
and
pop
lods
or
and
inc
add
push
mov
jno
sub
mov
fstpl
and
or
pop
fwait
es
mov
mov
cwtl
loop
sarl
add
mov
stos
sub
add
mov
data16
or
mov
add
fsubrl
adc
push
cmovns
std
and
popf
add
stc
icebp
loopne
mov
lea
rolb
jg
imul
sbb
cmc
lahf
jb
sbb
es
add
mov
inc
mov
daa
cmpsb
inc
cmp
pop
outsl
mov
add
imul
mov
sub
rorb
hlt
lret
ss
push
cmc
test
das
inc
xchg
mov
aam
push
add
jl
add
adc
cmp
orb
adc
mov
cmpsl
add
jb
jg
shlb
dec
outsl
mov
stos
in
stos
jmp
cmpl
stc
adc
divl
xor
outsb
add
pop
fistl
je
inc
cmp
or
add
add
pop
dec
mov
movb
pop
and
je
add
sub
add
cli
into
popa
ret
push
add
mov
cmc
mov
mov
mov
les
mov
add
jl
mov
or
pop
jmp
lret
sbb
pop
andl
xchg
fcmove
dec
sbb
orl
rcrl
and
arpl
sahf
add
dec
mov
xlat
xor
and
pop
bound
sub
mov
inc
jmp
es
xor
lcall
jge
rcl
or
sbb
into
in
xchg
inc
in
sbb
add
add
test
cmp
jne
xchg
int
out
movsb
add
in
push
flds
sub
mov
dec
dec
inc
add
aam
arpl
ret
add
imul
sbb
es
and
push
and
add
dec
push
mov
xor
pusha
addr16
pop
aas
ds
mov
repnz
add
cmp
add
repz
testl
add
js
or
add
mov
add
cmc
test
add
sub
lea
xchg
ja
arpl
ljmp
add
sub
add
mov
jns
cmpsb
repnz
mov
es
xchg
jno
movsb
mov
arpl
aaa
fnstenv
mov
lcall
movsl
or
outsb
add
repz
dec
mov
es
cmp
loopne
sub
add
cmp
add
add
cmpsl
or
sbb
lods
ja
add
add
pop
scas
cmpsl
xchg
add
mov
jl
rcrb
push
adc
out
movsb
mov
test
cmp
add
popl
xor
add
mov
mov
mov
xor
fists
aam
shll
dec
dec
imul
xor
adc
div
xor
dec
add
mov
push
filds
add
add
lcall
push
add
add
add
into
in
jbe
or
std
inc
lock
inc
loope
fiadds
arpl
pop
insl
add
sub
add
cwtl
in
cld
fsubrp
add
jmp
cmpsb
xchg
adc
loop
cmp
jnp
add
jle
inc
push
data16
sbb
xchg
fisubrs
xchg
mov
fsubrs
in
loopne
jle
lret
mov
cmp
fidivrs
jge
loopne
add
cmp
adc
add
out
cli
pop
add
lock
inc
jnp
cli
fwait
nop
xor
ret
mov
in
mov
cmp
loope
leave
or
dec
add
mov
mov
push
mov
xchg
xor
call
test
ret
add
pop
icebp
jp
cwtl
dec
add
push
ds
jl
jnp
outsl
and
add
add
lcall
push
mov
push
call
jge
push
movb
push
int3
addl
lret
in
add
ss
push
das
inc
jo
nop
inc
push
add
testb
nop
push
and
cmc
rcrb
outsl
push
add
sbb
fs
push
mov
xlat
or
mov
mov
sbb
idiv
push
inc
addb
lret
jg
flds
xorl
inc
sbb
lods
dec
or
pop
add
add
push
cld
dec
sub
outsl
jbe
mov
ds
push
xchg
repz
pop
inc
cmpsb
add
xchg
data16
push
adc
lds
and
sub
outsl
jg
ficomps
cmpsb
cmc
fildl
out
rcrl
pop
mov
into
lods
imul
pop
ss
adc
push
jnp
mov
incl
loope
add
xchg
cli
daa
cmp
sub
mov
test
add
movsl
mov
sub
popa
jle
pop
or
add
fcmovb
and
xor
add
enter
inc
loopne
sub
out
add
std
push
ret
xor
jmp
jne
lahf
mov
inc
mov
dec
lods
sti
add
cmp
stos
mov
sbb
add
xlat
and
add
xlat
xchg
sub
stc
mov
sbb
inc
sbb
adc
lret
cmp
popl
push
sub
popa
and
push
push
jge
lods
clc
xchg
mov
xor
pop
stos
daa
jg
and
lds
les
xor
adc
jne
ret
jne
lea
loope
mov
or
gs
ds
mov
inc
fwait
sub
add
add
data16
sub
andl
inc
push
push
adc
add
push
adc
mov
xchg
outsb
add
pop
loopne
sbb
adc
push
repnz
dec
cmpsl
dec
fwait
add
lds
mov
test
mov
push
or
test
jp
push
outsb
je
add
xchg
in
lods
adc
mov
mov
adc
sti
pop
cmp
and
out
add
or
cli
pop
add
rclb
shll
dec
sahf
mov
sahf
movsb
push
dec
roll
xchg
sar
xchg
add
or
fwait
add
shrl
add
jno
add
lahf
add
ret
sti
sbbl
pop
mov
enter
aas
xlat
sti
scas
adc
and
inc
repnz
xor
loop
into
dec
into
jg
pop
or
xor
dec
mov
fwait
and
pop
jg
push
hlt
sti
test
sub
cmpsl
pop
mov
repnz
add
sub
cmp
pop
ss
cmc
xor
or
mul
sbb
dec
cli
js
mov
std
jo
aam
push
pop
sbb
icebp
nop
stos
push
mov
add
cmp
call
mov
add
mov
add
repnz
fwait
push
sub
inc
stos
imull
ss
mov
shl
idivl
push
add
push
mov
enter
movsb
les
add
outsb
imul
mov
out
or
stc
lods
ret
add
pop
ret
mov
ljmp
mov
cmpsl
ds
push
stc
push
xchg
xor
push
or
loop
pop
inc
xchg
lea
sub
mov
sbb
and
pop
lock
fistl
dec
stos
add
add
add
fwait
dec
xchg
mov
sahf
xchg
add
mov
rcl
push
lods
mov
lods
popf
mov
movsb
pop
cmp
aas
outsl
test
adc
and
jnp
repz
inc
inc
roll
xchg
fsts
inc
hlt
push
scas
add
popf
jp
shr
lods
adcb
add
xchg
pop
and
imul
cmp
lods
mov
lods
add
outsb
test
mov
add
imul
push
ljmp
and
jae
outsl
lock
push
add
inc
sub
scas
add
add
cmp
dec
fldl
or
repz
fildl
scas
testl
ja
repnz
pop
daa
test
push
add
in
fmul
and
fwait
add
sub
mov
ja
xor
movl
ret
push
and
push
mov
add
push
add
xor
andb
add
jge
data16
add
add
out
test
fsub
mov
gs
ljmp
mov
pop
push
sti
and
into
inc
and
sbb
cmovo
fdivrl
fldenv
in
add
mov
add
das
bound
jl
incb
cli
inc
rcr
mov
xor
cld
filds
cld
add
adc
inc
outsb
add
lds
pop
xor
push
pop
or
out
xor
aaa
mov
inc
mov
leave
cli
push
int
test
add
mov
mov
insl
add
xchg
out
adc
aaa
testl
subl
sub
inc
dec
lods
jle
mov
pop
or
and
add
leave
mov
out
leave
jp
mov
repz
add
fcomps
icebp
sub
ds
ffree
mov
dec
mov
inc
int
insb
mov
test
mov
mov
jp
add
add
and
in
add
ret
mov
movsl
xor
stos
outsl
and
mov
mov
loop
push
and
xchg
mov
incb
sbb
add
and
cmp
add
fwait
add
cmp
push
xchg
and
xlat
mov
add
jns
push
bound
cli
xor
jge
lods
mov
sub
mov
out
sbb
sbb
fnstsw
xchg
es
repz
sbb
add
stos
and
cltd
pop
icebp
lock
add
es
repz
out
adc
clc
jg
mov
jo
rcrl
loopne
js
pop
aaa
add
popl
cmp
bound
add
and
lret
ret
jno
fwait
jl
test
xor
fistps
or
sbb
nop
aam
xor
out
add
mov
cwtl
fldt
xor
mov
add
add
push
xchg
add
out
add
loopne
add
add
push
pop
mov
insb
in
out
rcrl
int3
pop
test
jno
jo
push
gs
pushf
xchg
sbb
lret
mov
ret
movsl
fisubl
lods
add
or
dec
lods
test
ss
jle
pop
popa
jecxz
add
sbb
jns
add
sub
sbb
leave
sub
add
ss
ret
xor
push
shrl
inc
in
icebp
inc
scas
sub
sbb
int
data16
mov
dec
lods
add
jbe
sub
jp
sub
xlat
sbb
jns
bswap
and
lods
test
mov
sbb
imul
add
lock
mov
lahf
add
sahf
fstp
xchg
cltd
inc
les
test
sub
add
jg
mov
popf
loope
inc
xor
mov
in
mov
aad
xlat
enter
loopne
inc
outsl
dec
pop
cmp
lret
cld
pushf
add
pop
lret
aas
inc
add
cli
scas
cmp
test
imul
push
mov
inc
inc
add
add
mov
add
adcl
iret
and
movsl
into
add
rcr
sbb
push
lods
add
push
clc
xchg
loopne
in
adc
int
inc
mov
xchg
outsb
add
xchg
push
lcall
std
out
push
sbb
es
push
popa
add
add
in
loopne
imul
out
faddl
add
gs
cmp
push
xchg
add
xchg
cli
xor
add
out
add
dec
es
xchg
push
int
loop
add
insb
add
neg
inc
add
lahf
out
repz
loop
adc
and
add
sbb
xor
or
mov
or
inc
std
das
mov
imul
sbb
mov
xchg
add
aaa
add
ja
lea
add
lock
push
sbb
mov
push
add
fwait
xor
add
daa
add
or
orb
xchg
je
imul
xor
xchg
dec
lods
int
mov
mov
lcall
pop
aad
and
lods
add
mov
out
mov
fldl
or
inc
sub
in
les
cltd
daa
add
mov
fmuls
movsl
cmc
xor
jo
js
scas
je
jnp
and
sbb
push
add
fildll
mov
leave
popa
sahf
test
lock
add
push
mov
ret
add
push
jne
popf
mov
out
lods
arpl
xor
roll
add
scas
sbb
ficoms
pop
test
stc
lret
leave
push
lods
mov
xor
lahf
mov
pop
jp
push
lea
rolb
pop
test
xor
int
mov
add
add
dec
push
mov
jns
add
lret
add
xchg
out
sbb
mov
mov
and
dec
pop
mov
pop
mov
add
or
push
dec
xor
js
xchg
bound
daa
fidivl
aaa
push
cmp
xchg
addl
cmp
sahf
or
fidivl
cmpsl
arpl
pop
cmp
add
fcomip
inc
jb
mov
push
lods
sbb
pop
pop
add
mov
out
lcall
sub
lret
push
mull
inc
icebp
mov
andl
outsl
std
xor
jmp
mov
inc
pusha
inc
cmp
sub
ret
das
popf
push
add
int3
cmc
test
and
pop
cmp
xchg
pop
xlat
mov
inc
lret
xchg
xor
xlat
sbb
cmc
push
mov
stos
in
cmp
push
fbld
insb
popf
add
lret
loope
add
inc
add
arpl
jbe
pop
sbb
jmp
xor
inc
fldcw
add
into
push
enter
jns
add
xor
mov
sbb
sub
ss
xchg
addl
mov
add
push
inc
pop
pop
into
das
jae
or
pushf
inc
add
add
dec
sub
add
pusha
daa
push
add
xchg
int3
pop
mov
sub
xchg
xchg
arpl
add
add
push
lret
add
add
add
pop
and
pop
aam
or
mov
and
fs
mov
test
cmc
or
cmc
cmp
add
xchg
inc
das
jbe
mov
fs
pop
push
adcl
outsb
sti
shrl
out
add
daa
cltd
xchg
inc
jp
xchg
pop
out
loop
out
sbb
inc
add
add
out
push
stos
xor
cmp
xchg
add
adc
es
lahf
sbb
gs
add
stc
push
xlat
lret
fadd
imull
adc
inc
bound
pushf
out
in
push
pop
notl
xlat
out
adc
pop
hlt
add
or
ret
mov
add
je
mov
pop
sarb
and
mov
mov
inc
sbb
add
mov
loop
outsl
inc
fwait
loopne
add
subb
aaa
mov
sub
cmp
add
scas
push
push
add
popa
adc
pop
lock
sub
loopne
roll
fwait
xor
pop
push
test
outsb
fcom
out
cmp
das
icebp
mov
imull
dec
adc
add
or
jb
mov
xor
subb
and
jb
sub
subb
push
ss
testb
arpl
rol
push
lods
add
sahf
push
mov
and
add
add
mov
aas
or
testl
pop
and
nop
dec
push
xchg
call
test
xor
stc
xor
jb
shr
mov
sub
xchg
mov
add
pop
ljmp
gs
out
adc
int3
xor
mov
jb
es
roll
inc
int
add
ficoml
insb
jno
mov
ljmp
sbb
jne
imul
data16
mov
mov
lods
js
fadds
add
outsl
inc
stos
scas
or
jbe
fwait
add
and
inc
cmc
repz
mov
fisttpll
inc
xor
mov
bound
mov
stos
sub
out
pop
sbb
push
sub
aaa
out
push
into
xchg
push
outsl
lret
push
xchg
mov
xchg
outsl
imul
test
add
pop
or
jle
dec
loop
imul
dec
aaa
push
pop
lods
popa
xchg
or
xchg
dec
sub
in
add
add
add
loop
test
mov
mov
iret
lods
shlb
add
add
sub
add
cmc
pop
add
add
scas
mov
in
push
add
out
in
test
hlt
add
inc
push
in
add
loop
sbb
fiaddl
cmp
xchg
aas
inc
shll
fildll
addl
lret
inc
mov
ljmp
into
sbb
fnstsw
shrl
add
imul
int3
add
xchg
push
add
rclb
push
sbb
jl
jb
addl
jae
pop
sub
xchg
push
adc
mov
int3
imul
mov
imul
icebp
nop
std
or
imul
or
dec
mov
lods
daa
int
mov
fs
cli
dec
outsl
jge
in
into
outsl
insl
loop
ret
inc
shl
add
or
push
je
inc
mov
imul
out
aam
lahf
daa
ret
jecxz
add
call
int
adc
sub
inc
icebp
add
dec
test
pop
adc
shll
std
pop
and
mov
xlat
outsl
mov
adc
fadds
add
mov
cmp
test
lock
test
inc
stos
pop
js
adc
fisubs
xchg
adc
out
lods
inc
dec
stc
jbe
xor
fistl
dec
lcall
clc
cmc
leave
adc
lods
rorb
xchg
pop
sub
jecxz
adc
and
or
lods
js
xchg
add
sub
mov
scas
add
cmp
add
add
or
xor
jae
add
cld
repz
stos
add
mov
stos
or
div
add
pushf
add
xchg
add
in
gs
enter
push
lret
xchg
lods
add
add
xrelease
push
fldcw
fldcw
addl
lock
out
jae
add
mov
mov
in
in
dec
cmpsb
add
push
js
mov
in
mov
out
dec
mov
inc
lret
pop
push
mov
cmc
in
loopne
push
adc
mov
test
gs
add
out
ficomps
in
dec
mov
add
aam
daa
out
das
test
int
or
int
add
xchg
loope
jmp
mov
pusha
add
icebp
add
xchg
mull
out
jge
out
int3
out
lods
fcomps
lds
jb
pop
xor
lahf
sbb
hlt
jmp
jbe
sbb
xchg
xor
shlb
test
in
add
pop
in
add
movsb
adc
push
fcoml
mov
mov
test
push
xchg
sbb
add
mov
int3
in
imul
addl
sub
pop
add
data16
divps
cmp
xchg
xor
iret
pop
mov
cmp
fbstp
xchg
sbb
pop
mov
sbb
stos
test
or
adc
mov
add
filds
imul
push
lahf
mov
jns
add
sbb
stos
xchg
lea
out
pop
push
dec
pop
or
test
push
int3
shrb
cld
adc
or
or
inc
xchg
and
enter
add
jl
inc
jbe
outsl
popa
sub
icebp
scas
jmp
in
ret
add
cltd
mov
ret
enter
xchg
xchg
or
xor
es
adc
add
push
popa
bound
stos
iret
fiadds
push
mov
xor
ja,pt
add
jmp
lds
rcrb
mov
xor
pop
pop
xchg
inc
cmp
js
hlt
test
mov
ret
or
pop
pop
sub
dec
push
dec
sub
add
xor
cmc
jmp
add
sbb
jne
push
cmp
jge
aaa
bound
test
pop
out
mov
imul
outsl
not
ja
stos
in
add
push
and
cmp
add
je
mov
int3
pop
add
adc
sub
jmp
pop
out
cmc
add
xor
add
loop
ficompl
out
and
jl
das
inc
pop
loop
lret
stos
or
ss
popa
loop
sub
loopne
js
js
stc
inc
hlt
mov
dec
mov
mov
add
jl
cmc
ret
jecxz
inc
xor
push
add
add
inc
or
push
and
dec
jle
add
fisttps
or
push
jo
dec
int
fwait
aam
ret
add
movswl
push
int
inc
xor
add
aaa
add
mov
js
sbbl
fdivs
add
sahf
rcr
movsb
loop
jmp
insb
testl
xchg
pop
xchg
mov
add
adc
roll
dec
notb
lret
addb
in
inc
sbb
xor
es
and
jp
iret
cmp
dec
add
test
stos
add
popf
push
and
cmp
gs
jbe
scas
cmp
xchg
add
sub
sbb
pop
fcom
repnz
add
jle
adc
sti
dec
xor
xchg
sub
mov
fldt
jl
inc
or
xor
roll
aaa
ljmp
lret
inc
jno
shll
sti
fiadds
ret
in
and
push
mov
mov
add
adc
lret
push
inc
pushf
cmova
add
push
add
sbb
test
in
stc
pop
cmc
mov
clc
xor
sarb
shll
lea
lods
jae
pop
out
mov
or
mov
or
add
push
fdiv
imul
mov
inc
scas
pop
push
and
cmp
mov
scas
add
rol
pusha
add
mov
insl
push
ljmp
sti
cmp
cmp
push
jecxz
and
pop
in
lahf
add
cmp
imul
cmp
add
jecxz
incl
xchg
add
jecxz
add
dec
dec
nop
sub
ror
mov
mov
jmp
add
data16
push
test
sbb
add
incb
mov
jecxz
lret
repz
aas
mov
add
sti
add
and
call
add
test
inc
xor
out
outsl
insb
add
jmp
in
add
jo
add
and
arpl
add
mov
inc
iret
jb
and
rcr
adc
add
add
lret
pop
jo
hlt
int
lret
pusha
das
in
clc
lahf
xor
js
out
dec
mov
fistpll
xchg
aas
lret
lods
sbb
cmp
dec
rcrb
shll
cmp
add
adc
add
mov
add
outsl
sub
push
lret
jl
push
call
adc
flds
inc
insl
test
loopne
cld
outsb
push
mov
or
iret
in
scas
xor
jp
data16
add
incl
jecxz
pop
add
in
ds
sbb
addb
ja
push
inc
mov
test
add
int3
mov
repz
adc
jmp
push
push
cld
add
adc
cld
pop
hlt
push
jg
loopne
add
and
lret
add
mov
xor
into
ficoml
cmp
mov
iret
roll
negl
cmpsl
shll
mov
outsl
enter
fcmovnu
imul
or
cltd
inc
sub
arpl
mov
sub
jmp
push
es
addl
adc
push
add
push
add
cmp
gs
sbb
add
mov
mov
pop
or
jne
imul
mov
imul
cmp
gs
rclb
xor
sbbl
xchg
add
fnstsw
adc
aad
xchg
add
out
pop
aas
stc
adc
or
adc
add
mov
aam
cmpsl
mov
sub
dec
rolb
mov
fists
pmulhw
pushf
adc
adc
cmpsb
dec
out
mov
sub
add
testl
cs
bound
jnp
mov
sahf
or
ret
inc
mov
dec
add
and
add
sbb
into
div
pop
mov
add
mov
jb
popa
paddusb
out
fdivrp
into
mov
negb
arpl
dec
xor
roll
out
ss
jle
add
inc
add
out
mov
pop
xor
or
addb
dec
test
or
inc
fiaddl
aaa
repnz
fistl
js
sti
pop
push
and
je
pop
in
mov
add
les
mov
xor
add
loopne
and
push
subb
mov
leave
out
or
pushf
pop
mov
enter
adc
in
jg
dec
add
lds
mov
daa
int
out
push
pop
push
out
ja
test
push
lods
mov
lret
enter
jg
sub
add
add
mov
sbb
dec
sbb
fistpl
xor
mov
jb
inc
mov
ja
ljmp
pusha
stc
test
dec
xor
sbb
clc
sbb
shll
pop
rcrb
mov
mov
fadds
or
xchg
stos
add
cmc
lea
pop
ret
cltd
pop
mov
push
les
sub
rcll
push
push
adc
sbb
test
push
out
aaa
inc
xlat
add
and
mov
sbb
xsaves
fdiv
sahf
shll
loop
outsl
ljmp
cli
scas
mov
sbb
popf
lock
insl
cmp
aas
mov
and
or
sbb
or
lds
addl
aas
add
add
lcall
out
jp
add
hlt
jle
add
pop
lods
add
sbb
fwait
add
add
gs
push
fcmovnb
dec
mov
push
stos
push
mov
and
test
xor
cltd
fs
inc
dec
or
cmpsb
js
cmp
out
xchg
push
sbb
xchg
pop
aam
ror
mov
lcall
scas
dec
mov
clc
das
add
shrl
jge
aas
lock
add
es
adc
push
mov
cwtl
sbb
xchg
jns
ljmp
mov
out
pusha
adc
imul
js
out
push
int
lods
push
add
xor
add
add
div
nop
inc
int3
lcall
xchg
jmp
xor
push
fwait
test
ja
and
hlt
add
fchs
jae
jg
add
rcr
flds
test
daa
add
push
repnz
repnz
enter
movsl
ja
jl
sbb
or
mov
jle
sti
imul
adc
outsl
push
push
loopne
add
mov
inc
adc
jns
pop
daa
pop
mov
fdivrs
add
std
add
sub
mov
js
nop
jmp
inc
outsl
ja
outsb
adc
in
mov
cwtl
bound
mov
adc
and
sbb
ret
xor
push
pop
pop
sub
imul
push
inc
mov
add
push
ffree
imul
xchg
adc
dec
jo
fs
dec
mov
or
push
lock
jo
xchg
pop
push
test
xor
sahf
sub
cmp
test
jmp
movl
insl
sbb
adc
inc
mov
add
cmp
ret
add
mov
in
mov
imul
mov
pop
jns
xchg
ja
add
outsb
push
add
cmc
cmpsl
push
add
cmpsb
repz
das
mov
inc
lea
ds
adc
add
pop
or
cmp
in
repnz
push
adc
out
or
sub
cmp
cmc
adcl
push
cmc
and
push
xchg
cmp
mov
jecxz
adc
push
add
bnd
lock
lea
test
aam
cwtl
add
inc
xchg
mov
push
xor
cli
pusha
in
add
enter
adc
cmc
sbbb
mov
dec
add
mov
jb
xchg
mov
jbe
stos
pop
adc
pop
add
sbb
test
movaps
sbb
adc
sahf
cmpsl
add
cmp
jnp
dec
loop
aas
ror
add
loopne,pt
test
mov
add
in
stos
add
mov
lret
or
adc
icebp
add
xorl
lods
push
imul
mov
ja
loopne
add
add
setle
add
cmp
jg
sbb
or
inc
pop
fiaddl
mov
fidivl
cwtl
mov
insb
jbe
mov
cmp
fucomp
aas
fwait
xchg
push
out
cmp
adc
ficompl
movsl
sub
push
mov
inc
lea
lcall
add
adc
out
loop
push
cmp
sbb
adc
sbb
add
ja
add
fmuls
fidivs
add
xor
add
cmp
insl
add
or
movl
add
popa
add
sbb
aad
add
cltd
pusha
lret
icebp
xchg
sbb
int3
xchg
cmp
cmp
rclb
mov
cmc
mull
in
test
add
add
clc
sahf
xor
out
or
test
movsb
xlat
daa
daa
or
clc
insb
fcoml
faddl
add
mov
mov
mov
push
xchg
sbb
adc
pop
arpl
add
or
xchg
sub
sub
stos
addb
mov
mov
mov
sbb
je
in
add
add
pop
and
jbe
jp
jae
stos
hlt
or
aas
mov
mov
jns
jo
call
cmp
push
mov
mov
fiaddl
sbb
cmp
popa
add
cmp
popa
jge
stos
xor
push
fsts
mov
movsb
into
add
add
push
fs
xor
xor
add
sahf
sub
pop
xor
xor
cmp
xlat
int3
sbb
bound
sub
mov
daa
icebp
outsb
jbe
ljmp
ljmp
inc
cmc
or
and
ljmp
add
push
test
add
cmc
sub
stos
push
testl
arpl
mov
movsl
mov
rcrb
mov
jl
insl
inc
stc
pop
mov
mov
cmp
jp
sahf
mov
pop
leave
add
cmc
inc
jne
test
xchg
cltd
pop
stos
sbb
push
jns
mov
cmp
mov
fsubs
add
repnz
pop
and
std
mov
loope
shr
push
js
mov
mov
sub
mov
scas
add
popf
sub
sbb
inc
add
add
adc
pop
aaa
add
lods
aaa
jnp
imul
mov
lock
push
mov
add
dec
push
adc
and
sbb
pop
cmp
mov
mov
push
mov
mov
jp
arpl
mov
in
xchg
sbb
gs
jne
mov
or
xchg
ja
cli
sbb
adc
sahf
mov
add
or
and
inc
outsl
add
add
add
dec
push
sub
leave
adc
lds
ljmp
std
ss
mov
and
ltr
icebp
outsb
lea
cltd
mov
jp
adc
dec
pop
pop
out
addb
in
pop
leave
jle
out
lods
and
add
roll
lret
sub
pushf
xor
ficoms
adc
inc
xor
push
decb
and
popf
add
mov
sti
testl
inc
repnz
inc
icebp
imul
rcrb
mov
aad
add
and
or
and
mov
stos
add
sub
pop
sahf
icebp
nop
inc
push
and
sti
inc
mov
mov
add
push
retw
shr
mov
enter
mov
test
popl
mov
in
arpl
push
test
cltd
mov
fnstsw
pushf
pushf
sub
out
sub
sub
arpl
gs
lcall
cmpsb
cmp
lret
jg
or
sub
mov
sub
jg
push
add
aas
stos
jo
push
jmp
add
push
mov
ret
test
cs
mov
adc
add
jbe
push
aas
subw
adc
add
dec
cmpl
or
pop
add
in
shrb
hlt
scas
sub
or
dec
rolb
das
mov
adc
inc
pop
ficoml
add
clc
xor
pop
pop
stc
adc
cmp
pop
dec
mov
push
or
ret
out
add
loope
aaa
pop
and
in
out
lock
xor
clc
jp
pop
add
cmp
adc
lahf
daa
loope
pop
enter
enter
repnz
mov
cli
and
loopne
notb
je
xor
lock
mov
pop
jl
add
mov
xor
sbb
add
sbb
sbb
xor
add
rorb
jmp
push
pusha
jge
les
inc
add
add
xor
out
iret
cmp
pop
pop
mov
mov
sbb
add
cs
sub
fistpl
mov
mov
and
push
mov
xor
mov
push
mov
rorl
sbb
push
int
add
lret
or
test
pop
lea
jno
adc
rclb
adc
sahf
jle
fadds
adc
lcall
dec
mov
pop
mov
xor
xor
mov
or
out
hlt
jg
mov
dec
mov
rcr
pop
xchg
push
dec
add
lock
mov
add
jno
in
sbb
sub
lods
das
pusha
adc
add
add
mov
jmp
andb
sbb
xor
fildl
pop
inc
add
jb
aam
jg
sbb
sbb
lods
jb
bound
lods
xor
mov
add
inc
insl
add
mov
pop
sub
add
pop
enter
add
lcall
push
pand
push
add
inc
scas
sbb
fidivrs
mov
mov
icebp
cmovne
or
sub
pop
xor
xchg
add
jae
add
verr
mov
sahf
add
divb
popa
mov
mov
push
ja
lea
filds
add
dec
sub
add
add
cmp
cli
jmp
xchg
dec
cmp
adc
xchg
mov
xor
fcoml
add
jns
das
xchg
idivb
add
lret
popf
jecxz
mov
inc
xlat
mov
sub
add
out
mov
push
stc
hlt
cmp
dec
loop
das
stos
int3
js
mov
jp
and
mov
and
movsl
test
cmp
or
push
add
xor
pop
scas
ss
test
adc
test
push
int
adc
daa
xor
cmpsl
mov
loopne
std
mov
mov
mov
push
inc
sti
mov
les
daa
mov
cmpb
xor
add
xchg
mov
jmp
or
inc
inc
lods
and
add
xor
dec
xor
daa
pop
jno
mov
xchg
movsb
add
and
cltd
xchg
xor
add
and
mov
pop
add
dec
pop
lea
in
faddl
pop
xlat
mov
push
xor
adc
cmp
mov
xor
dec
testl
xchg
pop
add
add
jno
hlt
pop
xchg
fildll
jo
aam
inc
mov
sub
dec
shr
ljmp
and
mov
xor
add
and
dec
add
mov
lods
test
inc
mov
or
test
and
adc
mov
pop
cltd
xor
pop
mov
shrl
sub
rcl
mov
inc
push
or
loopne
dec
into
sbb
or
ret
sbb
add
pop
xchg
inc
popa
jecxz
inc
mov
push
push
ret
xchg
pop
mov
add
scas
cmc
addb
icebp
mov
hlt
add
add
int
outsl
add
push
push
and
push
lods
dec
repnz
outsl
out
sub
or
icebp
call
movsl
aaa
jb
cmp
mov
popf
into
or
mov
xchg
cli
sbbl
fld1
xchg
add
jno
int3
add
xor
dec
add
outsb
js
fwait
adc
jo
inc
jns
add
cmp
in
add
xor
add
cmp
pop
repz
inc
add
add
sbb
mov
add
sub
xor
add
pop
add
mov
mov
xor
clc
jno
adc
add
mov
cmpsb
jb
fs
rcll
idivl
cmp
inc
xor
xor
repz
add
cli
js
sbb
insl
inc
pop
scas
adc
xor
movsl
push
mov
jge
add
mov
fiadds
aaa
pop
int3
push
mov
and
cmpsb
mov
sbb
or
in
mov
adc
mov
cmpsl
add
testb
xlat
scas
push
dec
dec
mov
xor
insb
scas
fwait
popl
testb
popf
xchg
add
add
pop
cltd
jl
rclb
loopne
adc
inc
xor
add
ror
dec
cmp
push
add
adc
fstl
repz
sbb
or
add
push
jg
ljmp
arpl
push
ja
scas
cli
frstor
add
push
daa
sahf
ret
pop
rcrl
leave
aad
add
data16
lret
sbb
add
add
cmp
xchg
mov
add
imul
pop
scas
push
add
add
push
mov
movsl
add
pop
sub
movsl
rorl
popf
negl
cltd
mov
add
add
jo
add
add
test
add
push
and
cwtl
pop
pop
out
int
mov
ret
jge
add
xchg
sbb
aaa
xor
sbb
add
pop
add
scas
dec
dec
cmovb
dec
sbb
mov
gs
jle
sub
adc
out
das
arpl
push
inc
lcall
add
dec
push
add
add
roll
popf
jo
adc
pop
jp
fwait
les
jle
cs
push
push
xchg
push
lret
shrl
add
sub
dec
jmp
into
xchg
sbb
xchg
push
fsincos
loopne
adc
xor
enter
add
mov
or
xchg
adc
adc
out
and
cld
out
dec
rcr
mov
fcomi
jge
xchg
push
or
stc
fdivr
out
sbb
and
lea
aas
in
sarl
cmc
xlat
add
xchg
rcrb
popf
in
xchg
xor
mov
icebp
lods
mov
mov
pop
add
rolb
repnz
mov
loope
jno
aas
pop
or
sbb
ret
jne
jle
cld
and
adc
pushf
mov
or
loop
add
jge
add
addb
test
add
test
sbb
push
test
adc
inc
lahf
adc
add
shrb
add
pop
and
mov
lds
iret
fists
push
push
mov
dec
pop
int
add
fstl
cmpsl
pop
imul
repz
or
fldl
adc
add
mov
add
pop
idivb
lea
test
add
ss
les
and
jg
add
pop
add
es
and
dec
ret
add
fiadds
stos
push
xchg
cmp
cwtl
lock
decl
and
pop
xor
sub
cmp
outsb
cmp
xor
cld
pop
adc
jge
rclb
lods
push
rcll
clc
add
out
add
movl
aad
and
fs
xchg
mov
cmp
mov
push
stos
dec
push
hlt
mov
cmp
push
jnp
cmp
repnz
outsl
jp
ret
dec
add
filds
dec
jbe
pop
add
mov
and
call
add
aas
push
nop
jnp
or
aad
fwait
xchg
sahf
ja
mov
dec
add
xchg
add
pop
hlt
sarb
xchg
pop
ss
shlb
dec
mov
inc
add
push
xchg
adc
pusha
jbe
imul
call
outsb
jae
sub
popf
xorb
cmpb
mov
adc
loop
or
mov
pushf
test
add
push
lods
sub
lds
add
sbb
es
add
out
in
data16
add
fidivl
mov
test
jbe
lods
sub
and
add
adc
lods
inc
out
std
mov
cwtl
stc
dec
lock
add
iret
jb
add
imul
lods
jecxz
sub
inc
arpl
in
sbb
mov
in
sub
sbb
mov
xchg
dec
or
dec
mov
push
add
add
jmp
adc
imul
mov
sub
xchg
lods
cmpsl
push
or
jo
stos
test
stc
xchg
stc
fbstp
sahf
sub
jb
adc
add
sbb
add
mov
test
push
mov
jg
inc
mov
in
adc
aad
repz
sub
mov
and
js
fwait
dec
cli
and
push
push
mov
cmpsl
mov
xchg
sar
jbe
js
ljmp
add
xchg
imul
xchg
jmp
popf
cmp
add
les
xchg
and
popa
or
jb
add
inc
int3
inc
or
push
add
shll
push
stos
jbe
iret
mov
shll
cwtl
cmp
pop
orb
sub
and
sbb
add
dec
int
and
ret
dec
add
add
sbb
add
add
popf
mov
out
loope
popa
addr16
add
ret
sub
insb
std
xor
inc
fildl
sub
sub
add
lods
cmp
pushf
and
inc
insb
pop
add
push
int
jge
jmp
fnstcw
icebp
inc
xchg
shrb
cmpsl
clc
jb
mov
scas
mov
cmpsb
adc
xchg
jo
in
add
cwtl
mov
popf
incb
in
inc
out
fwait
sti
addb
mov
aaa
add
xor
pop
add
repnz
imul
jae
add
insb
sub
and
pushf
add
ret
add
sbb
popl
bnd
std
add
push
fwait
jle
adcb
sub
add
std
iret
adc
lahf
sub
add
ss
in
xor
mov
fs
jne
out
mov
push
fldt
stc
mov
jo
and
hlt
in
repnz
fdiv
jo
mov
lret
insl
push
cmp
xor
add
adc
fisubl
xlat
notl
add
dec
pop
inc
cmp
add
sub
xor
xchg
test
out
in
jmp
in
xor
clc
add
sti
ret
mov
das
fisttpl
sbb
dec
push
add
repz
and
inc
adc
or
adc
add
add
sub
xchg
sub
push
jne
and
xlat
or
mov
stos
xorl
inc
xlat
insb
pop
popa
clc
add
xchg
imul
add
lods
xchg
jl
mov
pushf
scas
inc
repz
pop
int
or
ret
in
repz
stc
push
add
mov
inc
faddl
rcr
cmc
cs
out
popa
add
dec
xchg
adc
and
cwtl
std
lret
add
arpl
lods
and
popf
fdivs
xlat
repnz
outsl
add
outsb
pop
ljmp
pop
inc
pushf
leave
push
pop
je
cmc
incl
fsubrl
nop
add
add
popa
fiaddl
mov
icebp
dec
xor
repnz
xchg
add
ret
mov
cli
bound
mov
mov
push
pushf
pop
insb
jns
jmp
or
add
sbb
xchg
add
fildll
add
cmp
mov
jg
push
loope
stos
add
aaa
and
popf
int
cmp
add
aas
sti
in
or
ret
add
popa
pop
das
or
in
jp
xchg
ljmp
mov
add
aad
lcall
mov
ljmp
loop
dec
sbb
fcmovnu
data16
jle
or
mov
lcall
dec
out
or
leave
jno
or
push
inc
lret
add
lds
fs
pop
xchg
cld
push
or
push
xor
add
imul
testl
mov
jno
sub
inc
add
push
aad
jmp
jle
mov
das
add
hlt
inc
dec
dec
add
in
fsts
int
push
fs
stc
sahf
add
xor
add
imull
fstp
lahf
sahf
jno
push
add
adc
ficoml
pop
add
sbb
jbe
or
arpl
inc
popf
fdivp
clc
jae
adc
or
push
outsl
iret
insb
or
jl
jg
sbb
cmp
in
outsw
sub
hlt
jge
mov
lods
or
mov
fdivs
insb
push
and
pop
iret
and
dec
fsubr
ss
insb
cs
sub
inc
xor
cld
push
fists
fdivrl
cmp
in
rcr
divb
xor
xor
jbe
popf
sbb
and
addr16
int
dec
mov
fcompl
add
sbb
push
decb
adc
je
inc
fcomps
aaa
int
pop
mov
repnz
add
add
add
repnz
pop
call
add
int
in
jecxz
xor
adc
sub
pop
faddl
dec
out
aam
dec
pop
mov
aam
in
insb
push
aas
je
jns
sti
fdivr
adcl
lds
shrb
hlt
shr
add
stos
add
jae
push
sub
add
pop
jmp
mov
mov
sbbb
xor
pop
add
lods
arpl
scas
sub
shrb
cmp
mov
push
sub
cwtl
add
or
xor
adc
lods
xlat
test
out
inc
add
add
nop
mov
mov
ja
add
fcoml
dec
loop
outsl
pushf
mov
jbe
sub
movsl
push
add
inc
int
add
mov
push
add
or
pop
add
add
out
xchg
pop
ret
aas
mov
mov
int
dec
and
out
int3
lods
insb
cmpl
mov
dec
cli
push
pop
inc
insb
ljmp
enter
mov
enter
rorb
jmp
call
lods
pop
cltd
lret
dec
addb
lahf
aaa
je
mov
cmpsb
cmp
lods
sahf
jp
push
jg
jle
bound
les
push
mov
add
in
xchg
or
popf
mov
sbb
jle
sbb
stos
daa
adc
cmp
pop
dec
fwait
pushf
out
dec
cmpb
mov
lret
jmp
movsb
add
fldl
adc
jne
es
push
inc
das
cltd
and
xchg
aam
daa
or
jle
push
and
hlt
xorb
int
leave
sub
stos
es
add
sub
aad
jge
ljmp
mov
subl
and
jg
cmp
cmp
jae
aaa
loop
xor
pop
add
and
pushf
xchg
cli
std
mov
jns
jl
xchg
dec
xchg
dec
cmp
add
mov
sbb
adc
std
cmpsl
ret
lret
out
mov
std
std
add
dec
add
fistpl
aad
xorl
and
jne
lods
mov
testl
stos
mov
cmp
pushf
rcrl
adc
cmp
test
add
mov
adc
lods
pop
dec
lods
mov
add
jo
pop
movsb
add
mov
roll
adc
aad
adc
stos
out
mov
add
pushf
mov
sbb
jle
add
jae
call
fwait
sub
xlat
sub
jns
aad
outsl
and
mov
cmp
ds
add
inc
add
add
add
push
mov
adc
int
std
lahf
add
leave
cmc
mov
movsb
sarb
add
add
push
fiadds
or
cmp
mov
testl
add
add
inc
pop
lahf
sub
cmc
movsb
lretw
repnz
scas
mov
into
ds
fwait
shrl
aad
inc
int3
mov
pusha
mov
pop
cs
arpl
dec
pop
imul
add
and
cmpsl
test
test
pop
cmp
xchg
push
or
add
int3
cmp
test
hlt
xor
pop
mov
fdivrl
xor
mov
xor
std
push
rcrb
push
add
loopne
hlt
sub
mov
loope
pusha
shrb
sbb
adc
add
sub
jbe
jp
es
fldl
or
ficompl
out
sub
inc
add
add
mov
testl
popf
add
add
jecxz
push
add
xlat
add
push
or
pop
sub
hlt
mov
add
or
rolb
cmp
pop
iret
out
mov
jnp
and
and
sub
pushf
loope
in
stos
out
lcall
shlb
in
jecxz
add
mov
push
test
mov
shll
and
int3
fcoms
add
pop
jecxz
mov
rolb
lods
inc
cmpsl
mov
xchg
dec
mov
mov
push
cwtl
or
insl
cwtl
imul
loop
stos
inc
add
fdivr
int
or
int3
and
les
cwtl
mov
xor
mov
add
sahf
add
xchg
je
ret
add
push
add
pop
add
add
dec
xor
mov
cli
mov
dec
call
dec
xor
push
pop
xchg
in
imul
imul
shrb
sub
mov
mov
out
pop
fwait
pop
jg
test
lods
add
enter
add
jmp
popf
fdivrp
lret
cli
test
and
xchg
sahf
das
into
add
mov
and
xchg
jecxz
stos
fwait
or
in
imul
cli
xchg
jnp
add
mov
jnp
xor
xchg
sbb
frstor
xchg
repnz
popa
cwtl
out
jno
xlat
pop
add
sub
xchg
fdivr
inc
sub
out
add
cmp
testl
out
int3
in
scas
add
add
out
or
dec
xchg
pushf
sub
add
sti
push
ret
mov
add
add
xor
push
js
xor
test
sub
out
mov
pushl
push
fbld
scas
xchg
pushf
sub
dec
rcll
repnz
push
outsl
dec
xchg
test
xor
cltd
clc
sbb
popa
fwait
orb
test
xlat
add
jae
out
jbe
dec
shr
inc
inc
add
sub
shlw
loopne
xlat
dec
jo
jbe
in
mov
dec
xor
cli
incb
pushl
jp
jae
in
sbb
dec
out
add
rorl
stos
call
je
mov
rcll
ss
sbb
stc
adc
add
add
add
fidivs
add
inc
add
cmp
stos
popa
or
cwtl
std
xor
push
sub
jg
fwait
add
stc
cli
test
popf
xchg
xchg
jno
add
mov
movsb
mull
pop
xchg
add
lock
push
sbb
xchg
in
shrl
add
mov
imul
in
repnz
ljmp
outsl
sbb
mov
std
popa
cwtl
pop
and
aad
sahf
pop
shrb
roll
aad
cwtl
mov
ret
popf
int3
xchg
jo
dec
shll
arpl
add
outsl
push
es
shrl
cmp
ja
mov
repnz
into
test
jecxz
pop
bound
add
mov
pop
ret
dec
pop
aam
xchg
pop
icebp
div
testl
lods
jecxz
out
shrl
repnz
add
cmp
repz
in
sub
sar
sub
mov
jbe
loopne
mov
std
in
xor
enter
shll
shr
sbb
mov
mov
lock
mov
add
fnstcw
xchg
pop
aaa
jecxz
sub
ret
daa
push
cmp
inc
mov
add
mov
cmp
adc
out
in
fiaddl
add
add
cmp
sub
into
fdivl
add
js
sahf
inc
add
push
loope
and
cmp
cmp
and
add
repnz
pop
add
iret
add
xor
out
pushf
xor
jo
add
aas
pop
aam
repnz
or
lahf
push
loop
fs
ja
cmpsb
adc
add
mov
dec
xor
ret
mov
addr16
fstl
pusha
js
aam
test
aas
mov
test
fadds
xchg
jecxz
jp
stc
lods
pushf
mov
imul
mov
pop
fdiv
pop
dec
add
sbb
je
out
imul
out
push
mov
jae
push
ds
loop
and
shl
add
inc
jae
je
loop
or
add
fidivl
pop
add
xchg
sahf
mov
aam
jecxz
mov
mov
pop
cmpl
add
add
mov
sub
fcompl
or
ret
into
mov
cmp
lcall
movsl
add
cmpsb
in
std
xor
push
aam
mov
push
xor
pop
in
xor
imul
stos
stos
add
out
xchg
ret
xor
xor
imul
stos
fldcw
mov
clc
mov
pusha
cli
xchg
cmp
lcall
cld
in
add
sahf
in
push
loop
mov
bnd
jo
test
add
add
mov
dec
je
xchg
daa
add
out
fadds
nop
mov
sub
xchg
push
outsb
pop
mov
add
jle
add
andl
ljmp
or
hlt
add
nop
mov
cmp
addl
jno
dec
mov
add
add
scas
adc
movsl
add
pop
pusha
add
into
str
adc
js
sbbl
jbe
sub
or
mov
cmpl
ret
adc
jbe
je
jo
cmpsb
add
add
ss
sub
push
xor
mov
fs
pop
sbb
adc
push
and
aam
add
xchg
bound
xor
daa
push
hlt
icebp
add
push
sub
push
add
push
mov
popa
cwtl
add
push
xor
inc
jnp
imul
int3
add
cmc
mov
ss
pop
dec
jo
push
mov
push
mov
inc
xchg
repnz
flds
jge
cmp
adc
out
clc
neg
mov
add
add
scas
sub
fsubrl
aaa
add
mov
dec
addb
mov
jne
push
mov
inc
outsl
add
and
mov
shll
mov
jg
lcall
fwait
js
rolb
das
push
bound
scas
inc
jmp
ret
adc
add
aas
sbb
cli
mov
insl
idivb
ja
outsl
cmc
ret
stos
add
sub
xchg
add
inc
pop
cmp
sub
sbb
sbb
add
aad
mov
add
sbb
fwait
or
and
lcall
add
out
js
dec
insl
test
add
add
dec
mov
fucomp
fnstcw
movsb
cmc
arpl
adc
inc
dec
lds
and
add
fildl
aad
adc
add
mov
in
push
inc
push
rorb
add
js
add
sbb
js
xchg
inc
iret
movsl
add
cs
out
into
testl
addb
movsb
cmpsb
ja
dec
pop
fs
popa
je
in
sub
iret
push
inc
fsubs
scas
out
or
imul
sub
movsb
mov
mov
jbe
roll
outsl
rcrl
xor
aam
cmp
lret
popl
and
xchg
pusha
or
pop
add
insb
sub
test
add
push
sti
mov
xchg
adc
add
mov
popl
pop
or
test
adc
lock
xor
ret
outsb
cmp
cmp
add
andl
dec
es
cs
add
lods
insb
pop
inc
add
or
pushf
lods
dec
add
xor
adc
adc
dec
add
mov
jnp
popa
notb
ss
test
push
inc
xchg
popl
lods
pop
rclb
push
dec
popf
jae
push
or
outsb
or
nop
cmp
aas
imull
and
inc
aas
pop
adc
cmpb
add
mov
aad
aad
add
pop
iret
aas
push
add
repz
jo
jnp
clc
or
cmp
cmp
dec
lret
xor
jne
mov
add
add
mov
push
add
pop
add
push
cs
movsl
pop
out
mov
ja
cmp
arpl
std
pop
cwtl
xor
in
cmp
pop
sub
and
pop
add
ret
mov
mov
add
daa
push
or
decb
add
out
popa
mov
add
add
popa
cmp
mov
jnp
cmpsl
lods
mov
cmpsl
cs
cmp
mov
loopne
stc
dec
and
cwtl
fiaddl
mov
ja
mov
add
cmp
aad
test
cld
push
xchg
cmp
cld
rolb
outsb
out
stc
into
and
je
cmp
add
mov
pop
jnp
std
inc
in
lods
adc
jne
cmp
push
fstl
push
clc
aad
adcb
add
je
insb
adc
cwtl
cmc
outsb
mov
mov
out
push
std
jg
in
aas
inc
pop
movsb
add
and
call
jl
push
mov
cmpsb
and
add
vpandn
add
jbe
movsl
movsb
enter
stc
or
ret
lods
sub
cld
test
and
mov
stos
pushf
xchg
mov
inc
cmp
jl
add
add
mov
fadd
es
movsl
add
adc
add
inc
in
lret
jle
add
dec
shll
add
das
imul
mov
sub
add
add
lcall
add
mov
jmp
popa
jo
cmp
sbb
dec
or
or
pop
jno
sti
lret
in
xor
dec
mov
clc
add
xor
in
add
jmp
fstl
out
clc
dec
pop
std
add
sti
out
xor
shrl
adc
jmp
pop
jae
dec
ret
and
push
fists
push
sbb
imul
pop
jns
push
pop
mov
and
pop
xor
add
test
xlat
xor
call
cwtl
mov
xor
sbb
out
mov
andb
add
and
shrl
filds
push
repz
add
mov
pushl
test
mov
ret
add
outsb
mov
lds
stc
add
int
addr16
mov
mov
clc
sahf
xchg
mov
mov
cmp
sbb
mov
arpl
mov
adc
mov
dec
dec
pop
add
mov
test
in
lock
xchg
test
repz
sbbl
in
mov
and
mov
rcl
lods
dec
mov
out
sarl
jg
mov
jbe
jno
sub
mov
mov
pop
hlt
mov
lahf
lds
pop
add
jb
xchg
repnz
ret
xchg
xor
sbb
divl
inc
gs
fsubs
cli
sti
pushf
jp
jp
js
call
stc
or
movsb
pop
in
je
mov
dec
cmp
jp
iret
cltd
lcall
push
movsb
xor
cmp
and
cmp
cli
cmp
enter
dec
jmp
out
push
out
insl
pop
jl
sti
leave
add
lea
push
inc
push
add
adc
mov
mov
add
sub
test
mov
loopne
insl
dec
cmp
inc
or
adc
xor
sbb
ret
mov
lahf
push
mov
add
jbe
jne,pt
push
outsl
out
int
add
pop
pusha
adc
mov
add
jg
jbe
cltd
xchg
dec
out
add
push
aas
sti
push
leave
sti
sbbb
push
sbb
add
add
xchg
and
ds
frstor
cmp
mov
shrb
add
adc
push
push
fists
jo
ja
int
push
pop
add
mov
lret
mov
mov
pusha
andl
frstor
pop
gs
push
mov
fs
add
dec
inc
pop
jmp
dec
adc
in
pop
fucomi
aaa
mov
mov
jp
xchg
out
sub
popa
int
gs
aaa
aas
addr16
add
loop
jg
aam
cmp
cli
repz
pop
bound
mov
insb
insb
or
add
flds
jb
xor
imul
stc
rorl
mov
push
pushf
mov
add
lds
jl
or
xor
insl
add
fcmovbe
mov
js
nop
mov
add
jne
mov
lock
test
into
into
clc
sub
push
outsl
mov
pop
mov
mov
and
cmc
add
out
push
lcall
add
push
out
ss
shl
add
ss
push
maxps
lcall
movl
out
and
sub
dec
add
and
scas
add
sub
outsb
fisubrs
dec
inc
stos
loop
add
jge
stos
add
or
sbb
outsb
push
jl
jl
lea
inc
add
int
push
insl
pop
movsl
jmp
jb
stos
or
fildll
add
stos
addr16
xor
add
push
xchg
out
pop
add
int
xchg
aam
syscall
repnz
fbstp
add
lcall
add
cmp
sub
mul
jbe
rcl
roll
xor
loop
call
stos
sti
pop
inc
adcb
cmp
mov
out
dec
arpl
repz
mov
verw
jns
add
or
push
insl
and
pushf
or
add
push
pusha
dec
sbb
or
or
shll
dec
aad
incl
ja
add
cmpsb
dec
cwtl
xchg
or
sbb
jg
sub
mov
vpmulhuw
dec
pop
mov
xchg
xchg
cmp
data16
outsl
sub
jecxz
add
push
lea
jmp
push
add
repnz
push
fimuls
cs
es
mov
mov
sbb
rolb
mov
mov
cld
rcrb
out
xchg
ss
pop
and
fs
push
in
inc
mov
xorb
cmpsb
pop
xchg
ss
cmp
movsb
jo
xchg
or
add
insl
xor
in
icebp
push
stc
sbb
xchg
add
add
popf
pop
sub
mov
repz
pop
addr16
inc
jno
shrl
fldl
orl
imul
push
fadd
imull
outsb
lahf
out
faddl
mov
add
xchg
dec
add
and
enter
xor
cltd
arpl
in
add
testb
fs
cs
out
add
les
add
and
add
clc
and
cld
aas
cltd
rorl
add
push
int3
pminsw
mov
add
or
add
xchg
movsl
cli
hlt
add
push
loopne
mov
subb
pop
add
adc
add
mov
jle
push
hlt
dec
repz
loop
dec
gs
cmp
fisttpll
scas
add
sub
xchg
int
mov
pop
push
popa
mov
jb
loop
sub
cmpb
jns
pop
add
mov
push
sbb
jns
push
stc
mov
dec
sbb
sbb
jno
inc
add
inc
mov
mov
cmp
insl
or
insl
test
leave
dec
add
add
jae
aad
jmp
add
inc
in
cmpb
jmp
gs
adc
sub
or
lahf
mov
mov
leave
repnz
gs
add
jecxz
pop
fnstenv
cmpsl
jle
orl
hlt
enter
sahf
mov
pop
add
dec
jg
inc
add
ficoml
xchg
add
dec
add
pop
push
add
arpl
push
cmp
xchg
jo
xchg
xor
repnz
ret
xchg
add
nop
xor
pop
xchg
inc
push
in
sbb
adc
inc
dec
popa
scas
xchg
sub
xchg
ret
mov
jbe
push
mov
clc
mov
or
sbb
in
push
lret
add
add
mov
xchg
aam
addr16
outsb
mov
xchg
movsl
add
es
lods
imul
mov
adc
push
or
pop
add
jno
sbbl
jecxz
xchg
xor
pop
mov
add
adc
notb
adc
lcall
mov
add
das
cmp
adc
add
out
jo
add
test
cmc
addb
inc
dec
mov
add
jns
push
repz
add
add
add
add
xor
pop
xor
mov
enter
adc
iret
xor
jecxz
jns
lahf
into
fcoms
gs
push
mov
sbb
mov
add
rorl
imul
push
lahf
jmp
add
lods
add
popa
xchg
push
and
add
jl
pushf
aad
sbb
je
ret
gs
fbstp
mov
clc
cwtl
mov
inc
out
mov
jle
pop
pusha
push
test
fisubl
stc
dec
ficoml
lock
filds
adc
push
daa
xchg
add
mov
mov
lahf
mov
rolb
loop
insb
and
jg
inc
ja
fidivl
fcomp
jns
inc
cmp
pop
push
stos
xor
scas
cmp
sub
inc
rolb
pop
push
lea
cmpsb
jae
test
xchg
shlb
sbb
inc
or
cld
pop
aas
mov
push
fxtract
sub
xchg
in
adcb
add
sub
imul
dec
clts
fimull
push
pop
cmpsl
pop
sub
cmp
xor
add
sbb
xchg
add
inc
cmp
add
add
and
xchg
lret
add
push
in
mov
es
mov
cs
pop
arpl
ds
stos
fdivrs
jle
or
lock
xchg
stos
pop
lret
loop
cmp
and
aaa
fcmovnu
sbb
add
xchg
xor
add
adc
rcll
dec
loopne
sub
daa
pushl
sti
push
push
adc
add
in
mov
mov
inc
std
inc
pop
daa
mov
pop
add
insb
xor
pop
mov
loop
popf
ds
sub
add
sbb
xor
push
je
adc
mov
fimull
outsb
mov
flds
or
rcrb
jp
in
or
les
pop
push
mov
mov
or
pop
adc
dec
call
out
insl
nop
push
dec
add
lds
mov
loop
inc
xor
dec
add
cmp
ss
jae
inc
add
sti
fwait
cld
stc
popl
rclb
sarb
repz
outsl
insb
xor
andl
fwait
adc
add
ret
cltd
lds
iret
cmp
inc
jnp
and
pop
add
push
cmp
fiaddl
add
arpl
push
mov
inc
push
in
pop
add
test
push
add
es
neg
fdivr
jno
pop
popf
and
enter
out
or
aas
push
dec
ljmp
sbb
verr
add
imul
ret
xchg
sbb
adc
aad
add
add
stos
insb
in
inc
or
mov
movsb
jno
incl
adc
shl
mov
xchg
jne
inc
inc
mov
insl
out
mov
filds
and
inc
mov
je
dec
add
or
adc
dec
test
mov
add
sbb
and
out
xor
imul
pushf
aas
fbstp
leave
cmp
shll
sbb
add
inc
dec
rolb
xor
mov
jl
or
testl
adc
or
imul
movsl
add
test
jae
or
cmc
es
inc
call
arpl
inc
push
ret
adc
and
cmp
fmuls
movsl
test
leave
jnp
add
data16
add
lock
or
inc
test
dec
mov
loope
mov
jno
lods
add
jno
neg
add
add
xor
lea
sbb
cmp
daa
mov
push
add
mov
add
jae
mov
add
enter
shr
testl
and
xchg
test
add
jae
cmp
jmp
add
lock
imul
jecxz
shll
paddd
bound
add
sbb
movsl
add
jecxz
rclb
rcrb
mov
fcmovne
and
xor
movq
clc
mov
add
jns
test
push
cmp
add
insb
ret
aam
mov
add
mov
arpl
pop
aaa
pop
xchg
mov
cmp
ljmp
xor
mov
adc
fcmovnu
add
decb
xchg
ss
aaa
addb
cmp
add
and
add
sub
or
lret
ja
push
push
or
inc
mov
add
lret
sahf
loopne
imul
in
add
jecxz
and
jp
imul
in
or
xchg
inc
add
mov
pop
rorb
add
daa
stos
dec
loopne
mov
jbe
loope,pn
insl
out
add
sahf
sbb
sbb
jbe
test
xchg
and
ret
scas
jp
add
jp
add
xor
jg
pop
cmpsb
mov
sti
push
ret
add
ficoml
xor
leave
jns
sbb
fistpl
inc
imul
test
sub
add
xor
xchg
mov
ljmp
add
jb
add
add
cld
adc
or
movl
push
sbb
jecxz
mov
cltd
lds
or
cmc
cmc
lahf
sti
sbb
or
adc
add
push
in
mov
cmp
shlb
add
jns
jns
xchg
cmp
inc
hlt
add
lds
lret
and
sub
mov
xchg
inc
add
ds
out
jbe
jo
mov
mov
pop
stos
sbb
sbb
xchg
xchg
movsl
sbb
dec
les
fiadds
call
cld
dec
adc
adc
sub
add
in
xchg
lds
addl
push
push
add
icebp
xor
sbb
jae
xor
push
scas
icebp
or
and
and
stc
or
iret
mov
insl
negb
mov
pop
add
pop
add
gs
incl
sbb
add
xchg
nop
xchg
push
addb
xchg
adc
push
outsl
adc
jmp
jge
bound
add
push
jmp
push
mov
lds
iret
xchg
add
sub
imul
and
pusha
je
adc
popa
arpl
jns
xchg
pusha
push
int3
test
jbe
add
jecxz
xor
pop
fs
push
add
cmp
mov
add
sub
add
fcmovne
fidivrl
dec
add
push
or
push
adc
imul
add
jae
mov
cmpsl
dec
mov
jns
xchg
inc
add
inc
sub
sub
dec
lea
and
push
cwtl
std
shlb
imul
add
xor
mov
repz
arpl
xlat
into
and
pop
cmp
add
fst
pop
add
xchg
push
adc
stos
xor
sbb
add
addr16
jl
mov
jns
insl
lods
sub
enter
shl
and
nop
push
cld
mov
dec
pminub
inc
add
mov
pop
add
inc
push
pop
shlb
cmp
in
mov
stc
ret
mov
and
es
arpl
xchg
aas
int3
dec
cltd
push
divl
add
cmp
add
in
mov
jecxz
add
out
loope
sti
or
jmp
repnz
pop
add
lods
pop
xchg
shrl
repz
enter
add
xor
sbb
add
ret
mov
pop
pop
and
jg
inc
std
jae
cmp
adc
xor
lods
lret
mov
mov
lds
mov
add
sub
push
add
and
ds
rcll
mov
add
int3
lods
inc
pop
das
and
inc
xchg
push
add
xor
sahf
fsqrt
ficoms
cmp
jns
mov
jle
stos
outsl
loopne
mov
imul
pop
mov
dec
sub
call
out
mov
int3
inc
iret
and
adc
mov
dec
fnstenv
or
faddl
dec
xlat
push
adc
mov
lods
nop
cmc
and
mov
or
test
mov
pop
sub
or
leave
mov
je
jnp
jecxz
add
jb
ja
adc
xor
js
icebp
inc
xchg
add
and
in
sahf
push
fisubl
xor
add
add
sub
add
sub
mov
sbb
out
inc
orb
push
jnp
jle
pusha
mov
or
xor
sub
xchg
pop
mov
jg
lahf
xchg
add
ss
xor
addr16
pop
outsb
sub
daa
push
int
sub
cmpsl
xchg
cs
push
dec
dec
add
xor
push
daa
or
add
cmp
sbb
cmp
push
mov
lods
mov
add
or
ljmp
xor
out
ret
pop
add
nop
fwait
or
mov
jg
fwait
mov
xor
sbb
add
jl
and
add
iret
call
insl
inc
leave
add
xchg
sbb
mov
push
sbb
dec
lods
fmull
imul
cs
bound
popa
xor
add
fbld
lea
das
and
sub
add
add
loopne
lods
cmp
lahf
sub
push
insl
add
mov
inc
je
insb
sbb
pop
push
cmp
pop
add
in
repz
out
push
shlb
lcall
add
mov
call
roll
push
call
add
add
inc
hlt
mov
push
add
sbb
loopne
test
stos
xor
je
push
add
mov
inc
jb
leave
out
push
ljmp
cwtl
and
xlat
test
lds
jle
cli
mov
pusha
inc
inc
pushf
xor
dec
sub
or
add
xchg
push
jg
add
inc
xor
out
add
jecxz
mov
std
int
lahf
std
test
sarl
push
rolb
and
sub
mov
sub
inc
xor
adc
mov
repz
cmp
in
pop
divl
push
cmpsb
add
cwtl
dec
xchg
xor
scas
xor
lock
mov
fsubl
cmp
push
add
pop
std
adc
pop
xor
call
jl
add
or
addl
xchg
push
bound
or
je
mov
adc
add
ds
cld
or
hlt
sub
adc
mov
inc
lea
push
loope
add
inc
add
data16
inc
dec
bound
rclb
jne
in
pop
mov
addr16
dec
lret
lock
mov
sub
adc
jle
dec
mov
and
xchg
jo
cwtl
cmc
inc
mov
sbb
sbb
ret
lea
in
pop
cmp
pop
xchg
push
rcl
sbb
jb
data16
jno
sbb
mov
add
daa
lds
fildll
mov
daa
sub
sbbl
push
bound
add
add
add
push
add
inc
add
push
gs
add
inc
jnp
mov
fcompl
dec
aaa
sub
add
cmpsl
testb
push
lret
fldenv
mov
sbb
mov
mov
dec
insb
fiadds
fldl
test
fnop
and
pop
jmp
xchg
jae,pn
jmp
lret
sbb
nop
notl
pop
idivl
mov
cli
add
add
ja
push
gs
popf
jo
xchg
and
sbb
popf
add
lret
dec
loop
imul
cmp
cmp
xchg
mov
loop
add
add
ret
add
adc
add
lock
leave
pushf
jb
push
hlt
loopne
pop
movsl
addb
pop
lcall
pop
scas
mov
and
push
inc
ror
xchg
cld
daa
push
fistpl
add
cmp
lret
jge
stos
add
pop
repz
cmp
mov
mov
lock
imul
jle
xor
xlat
mov
mov
add
jmp
arpl
addr16
fstps
add
push
in
jp
filds
add
lret
mov
mov
imul
push
addb
adc
fsubrs
inc
add
add
dec
loopne
dec
enter
add
imul
sub
es
add
arpl
add
mov
add
add
push
push
lds
add
out
push
or
pop
jno
sbb
and
xor
arpl
sub
sbb
fprem1
mov
cmp
sub
lods
cld
cmp
lds
cld
inc
popf
in
cld
jns
sbb
ds
and
sbb
add
add
and
add
and
add
in
add
pusha
jne
mov
mov
mov
ljmp
cmp
mov
add
cmpsl
and
repz
hlt
add
in
pop
and
and
pop
and
mov
add
dec
xchg
add
or
pop
add
call
fldt
cwtl
js
add
jecxz
or
push
test
scas
mov
pop
add
pushf
into
add
add
or
add
lret
jecxz
mov
jb
popf
push
xor
aam
sbb
push
imul
call
sbb
inc
movsb
movsl
cmp
mov
outsl
jl
mov
fs
sahf
dec
in
xor
sub
add
mov
mov
mov
or
push
imul
mov
add
adc
jnp
popa
push
dec
or
push
pop
sub
add
mov
fmull
test
add
jmp
cmp
jl
mov
sbb
sahf
jnp
xchg
jno
mov
mov
adc
lds
pop
pmullw
aaa
sub
push
mov
dec
icebp
or
lea
add
push
adc
xchg
jl
leave
dec
leave
sbb
mov
dec
aam
inc
jl
add
or
arpl
dec
add
dec
test
pop
lods
push
add
gs
jle
add
add
add
pop
mov
sar
aam
xor
out
cltd
xchg
decb
pusha
add
aas
rcrl
cld
int
mov
daa
dec
or
in
xlat
pushw
int3
xorl
mov
dec
add
lods
daa
xor
or
popf
sbb
movsb
loope
sbb
popf
pop
mov
imul
aas
add
arpl
inc
add
dec
ud2
xorb
mov
flds
cwtl
xor
add
es
xor
testb
das
or
cmp
int3
movsl
arpl
outsb
adc
mov
pop
pop
clc
cmpb
push
sbb
in
mov
mov
mov
sarl
popa
loopne
jne
in
push
fildll
scas
fildl
iret
adc
xchg
dec
pop
or
pop
pushf
mov
dec
loop
pop
add
xchg
add
add
xor
or
xchg
cld
mov
out
or
sarb
sbb
xchg
jmp
and
rcl
or
add
int
fildl
jae
jl,pt
dec
and
out
or
inc
and
sbb
movsl
add
cmp
and
xor
add
mov
data16
fdivl
jnp
sub
fs
negl
add
aaa
add
roll
icebp
inc
push
and
inc
fistpl
test
out
loopne
mov
daa
pavgb
add
cli
add
cmp
xor
add
adc
int
movsb
in
out
imul
xor
xchg
icebp
cmp
test
push
push
or
imul
sbb
xchg
add
jo
and
lds
mov
inc
mov
into
cmp
addb
xor
notb
inc
add
push
push
xchg
push
push
jns
mov
xor
or
into
xor
call
inc
xor
aad
iret
mov
dec
add
mov
and
jbe
mov
pop
sbb
out
xchg
roll
ret
xchg
pop
pop
cmp
or
fdiv
ret
and
data16
dec
scas
mov
xlat
ss
pop
loop
out
add
aam
inc
mov
mov
rol
xor
adc
out
mov
cmpsb
jmp
jle
and
sbb
add
xchg
add
ficoms
jecxz
push
lods
add
cmp
sub
pop
add
imull
rcl
rclb
std
enter
add
lds
add
and
jns
jnp
add
push
sub
xchg
lret
shlb
push
add
push
add
enter
leave
adc
sahf
adcl
or
jb
jmp
jle
push
cmp
mov
or
cmp
add
and
jo
xchg
jge
jnp
insb
or
stos
imul
out
dec
int
inc
xchg
mov
sbb
and
mov
sbb
ret
sbb
and
mov
sub
sbb
int
stos
add
inc
adc
sub
das
mov
lock
cmpl
add
pusha
outsl
arpl
and
add
xchg
pop
add
push
pop
pop
mov
add
add
stos
cmp
leave
add
sbb
or
xchg
arpl
dec
add
mov
add
dec
fwait
sbb
fistpll
mov
clc
dec
idivb
fdiv
out
cmc
pop
fbstp
push
adc
and
in
ljmp
xor
cwtl
push
filds
sub
add
adc
fimuls
jl
mov
cwtl
pop
jmp
push
xorl
testb
cmp
lret
mov
lock
cmp
sub
stos
cld
push
lahf
sub
rol
fcoml
loop
jno
daa
aad
in
outsb
inc
add
inc
mov
fldl
push
dec
pop
sbb
sbb
test
imul
xchg
out
pop
loop
mov
jl
and
stos
fbld
cmp
lds
imul
or
jb
and
inc
nop
addr16
gs
rolb
sbb
mov
in
stos
rol
mov
sbb
mov
xchg
jg
mull
ljmp
nop
xor
dec
out
mov
iret
sub
xchg
ds
es
int
cmp
add
push
fldl
jle
iret
std
movsl
mov
mov
lahf
mov
mov
xchg
mov
outsb
push
and
inc
fdivl
add
xlat
cli
push
push
outsb
and
pushf
mov
ss
stos
mov
ret
mov
es
jl
movsb
add
and
mov
jb
push
sub
inc
add
and
cmpsb
sti
mov
add
and
cwtl
add
dec
lods
sub
fdivl
add
xchg
shll
shld
fwait
mov
std
inc
adc
inc
push
add
inc
jbe
es
cmp
outsl
roll
sub
mov
pop
sbb
into
mov
sbb
mov
sbb
add
inc
andb
inc
xor
or
add
add
ljmp
add
cmc
mov
and
xor
cmp
xor
or
push
sti
mov
add
call
es
push
add
or
inc
add
add
jmp
add
shrl
push
or
mov
add
add
ljmp
push
jmp
cld
fisttpl
enter
cmpsb
add
repz
pop
push
cld
inc
movsb
sti
pusha
push
jne
sbb
jmp
push
inc
test
repz
shlb
addl
xor
test
shrl
aaa
roll
add
repnz
add
rorb
outsl
add
xor
das
add
lods
test
repnz
push
add
ret
sbb
add
incl
cwtl
addr16
add
movsb
or
in
dec
mov
and
ret
or
das
test
jne
add
push
sbb
jl
sbb
sub
and
xor
sarl
sahf
push
je
arpl
pop
fidivl
stos
dec
imul
mov
imul
pop
insb
mov
imul
push
mov
shl
cmc
jmp
xlat
jge
add
xor
sub
push
inc
xchg
adc
add
mov
add
xor
inc
mov
lods
lods
mov
cmp
or
inc
add
rcl
rcrb
imul
insb
mov
ret
pop
sbb
xor
mov
mov
sahf
in
add
mov
sub
jnp
add
fsts
xchg
lea
mov
xchg
inc
ret
add
add
test
mov
subl
popf
mov
testl
sbb
pusha
rclb
push
fwait
repz
xchg
push
outsl
shll
xor
and
and
mov
cmp
sub
pop
inc
jae
pop
dec
lahf
sub
loope
dec
in
mov
lret
hlt
adc
and
add
mov
bound
mov
adc
fucomip
add
lods
jo
cs
ljmp
fldenv
mov
aas
int
mov
mov
out
sub
dec
scas
jbe
sub
push
cmpb
xor
lret
hlt
pop
add
mov
mov
xchg
xchg
jl
clc
stc
add
mov
mov
sub
adc
andl
hlt
jne
inc
imul
xchg
and
and
add
add
adc
scas
mov
add
loopne
call
jo
push
inc
push
pop
push
arpl
pmulhw
inc
mov
cmpl
adc
add
inc
int3
std
leave
add
xorl
dec
sub
add
push
mov
adc
mov
jno
cmp
add
add
add
add
cmp
add
add
cmp
repz
push
jl
xchg
mov
cmp
fisubrl
jne
int
out
xchg
add
mov
add
ds
in
lods
fs
jg
out
push
mov
cmp
gs
sub
or
sub
jp
mov
mov
inc
xor
add
mov
aas
and
test
test
add
ret
cs
shlb
inc
xlat
and
add
test
cmp
fdivl
cmp
sub
scas
jb
lcall
out
dec
push
sbb
add
loopne
mov
les
subl
flds
das
repnz
cmp
push
mov
mov
mov
enter
jnp
jg
xor
mov
adc
add
cmp
jno
inc
push
xchg
and
lret
outsl
int
xchg
or
adc
pop
xlat
xor
xor
lcall
sbb
jb
testl
rolb
out
mov
or
xorb
cmp
xor
pusha
push
cmp
jbe
add
mov
lret
addl
sbb
ss
jae
in
dec
jmp
xchg
xchg
add
push
inc
shrl
popl
mov
shl
pop
xchg
adc
sub
imul
insb
jp
dec
or
inc
mov
add
les
adc
les
std
add
add
jle
push
add
add
add
pop
pusha
lods
arpl
dec
movsl
out
les
add
xchg
data16
pop
mov
pop
pop
or
jbe
leave
cmp
sahf
leave
inc
jnp
scas
pushf
cmp
add
add
and
mov
or
bound
imull
add
fwait
les
pop
ret
pop
out
add
fucomp
mov
push
fwait
add
push
pop
jle
leave
fldenv
mov
mov
pop
inc
inc
data16
sbb
and
push
add
mov
jp
and
push
out
aas
dec
nop
scas
inc
add
pop
ret
dec
push
clc
inc
mov
add
sub
mov
and
xlat
pop
pop
fistps
add
cmp
stos
rolb
fidivs
sub
xchg
add
loopne
cltd
mov
jb
repnz
fldcw
xchg
add
mov
and
xchg
inc
imul
push
xlat
add
popf
stos
lea
sbb
mov
repnz
xchg
les
cmovnp
add
fildll
lods
ja
idiv
xchg
js
add
test
pop
cmp
out
fucomp
mov
and
cmp
ret
add
call
xor
add
dec
mov
sub
sub
add
inc
fnstsw
mov
adc
sub
dec
mov
stos
add
mov
std
add
jne
add
adc
dec
roll
or
mov
add
dec
jnp
ret
add
add
pusha
sbbb
inc
dec
add
push
pop
add
sbb
sti
push
push
mov
mov
add
inc
add
pop
sahf
enter
fmull
push
repz
or
and
push
mov
sub
xchg
add
add
jne
mov
loopne
jo
faddl
xchg
ds
cltd
loope
fcompl
push
push
add
mov
sbb
pop
jge
int3
push
add
repz
push
cltd
push
cmc
jecxz
adc
or
fildl
push
cmp
lret
mov
in
jmp
addr16
popa
add
dec
cmp
adc
cmp
outsl
test
test
adc
xor
ljmp
push
push
shll
dec
adc
push
insb
cmp
fidivs
mov
add
std
dec
inc
and
mov
dec
pop
mov
sahf
inc
jg
xchg
jbe
inc
movsb
cwtl
cmp
dec
scas
or
scas
mov
test
je
fs
add
cmp
das
mov
les
rolb
xchg
add
fdivs
xchg
in
mov
add
add
push
insl
pusha
push
sub
push
jp
sbbb
hlt
jmp
jno
repnz
adcl
add
mov
fildll
add
out
pusha
pop
dec
pop
bound
and
mov
add
xor
cltd
in
imul
inc
add
adc
jecxz
fistps
rorb
pop
add
pop
adc
fs
jb
imul
dec
and
jnp
cld
pop
add
mov
or
mov
ss
test
pop
add
insb
add
ret
xor
xchg
bound
insb
jbe
sbb
push
lret
out
out
mov
repz
cmp
or
add
in
into
addl
jb
je
sbb
iret
cmpsl
push
add
sbb
adc
add
stos
or
and
and
add
mov
movsb
lcall
jns
bound
dec
es
aas
add
jns
and
push
and
inc
cs
clc
sahf
xor
icebp
rclb
roll
rcrl
fldt
enter
rcll
pop
incb
nop
add
pop
add
adc
cmp
jp
push
cmp
dec
lcall
push
add
fistpll
loopne
jbe
jecxz
cmp
xchg
imul
adc
test
in
push
repnz
lods
fnstsw
push
ud1
add
les
mov
repnz
cmp
jae
stos
dec
mov
push
inc
femms
xchg
jle
add
add
adc
mul
out
pop
pop
popf
adc
mov
pushf
ret
shrd
sarl
jle
add
imul
mov
push
and
aad
and
pop
push
xlat
in
data16
adc
mov
add
push
xchg
mov
loopne
add
add
repz
dec
add
fiadds
pop
in
testb
mov
stos
loope
sti
push
add
sbb
ss
lcall
ds
jns
add
ret
inc
sbb
ljmp
in
dec
sbb
jl
aam
pop
jnp
stos
sahf
add
add
add
dec
push
popf
addb
jnp
js
leave
add
cmp
add
test
xchg
cmpsb
or
out
adc
imul
outsl
addb
sbb
test
cs
xchg
out
in
sahf
and
inc
orl
test
call
and
inc
pop
cmpsl
push
popa
cmp
nop
mov
and
mov
or
aaa
xlat
rolb
mov
sub
mov
rorb
xchg
ljmp
fsubl
iret
push
sub
adc
cmp
dec
xorb
imul
ja
out
mov
fwait
int
inc
repz
movsb
or
adc
jne
add
add
cmc
jbe
mov
sti
push
push
add
add
push
pop
insl
add
sbb
push
adc
dec
jge
ret
push
dec
push
mov
lods
push
rorb
shll
insb
sbb
ret
movsl
popa
push
sbb
cmp
inc
add
ss
stc
test
mov
pop
add
lds
cmpsl
inc
inc
push
and
das
mov
add
sbb
add
push
mov
add
mov
lahf
mov
inc
adc
pop
sub
pop
jns
adc
cwtl
cmpsb
aad
out
adc
ret
adc
adc
in
mov
int3
mov
gs
pushf
fiaddl
cmpsb
mov
add
add
mov
dec
test
fildl
stos
flds
push
pop
jns
cmp
frstor
adc
inc
jne
scas
jmp
movsl
add
out
add
mov
cmp
outsb
add
adc
addb
iret
add
test
scas
inc
xor
inc
add
xchg
and
inc
and
sbb
inc
inc
sbb
lret
ret
sahf
sti
stc
repnz
mov
pushf
aas
push
into
out
jns
add
test
cli
xor
dec
pop
pop
out
adc
sbb
ret
popf
mov
mov
dec
dec
dec
mov
lods
push
ljmp
add
cmc
xchg
in
or
add
outsb
push
lcall
fidivl
mov
inc
ja
xor
xchg
mov
push
push
jnp
mov
xor
ljmp
out
xor
add
add
add
cwtl
enter
cmp
mov
cmp
xchg
fwait
mov
ja
bound
js
sub
cmp
mov
sbb
xor
add
dec
sbbb
sbb
push
mov
out
icebp
inc
lock
test
jae
dec
mov
in
add
xchg
stos
sub
inc
xor
xchg
push
outsl
xchg
insb
inc
sub
arpl
pop
add
jo
sub
adc
inc
jne
jns
pop
cld
and
jno
fnstcw
out
xchg
inc
js
cmc
pop
or
mov
cmc
xchg
mov
adc
cmp
aaa
add
out
mov
pop
xchg
mov
add
cmp
sbb
sbb
aaa
sbb
xor
cmpsb
scas
push
add
pop
dec
imul
test
or
cmp
sub
xchg
lods
std
xchg
cmp
imul
in
frstor
int3
mov
sub
notl
cmp
sbb
push
push
add
cltd
push
add
dec
pop
push
cmp
add
add
add
jge
enter
add
mov
jmp
push
movsl
inc
repnz
enter
add
push
mov
mov
add
add
add
push
jb
cmovo
add
shll
push
popa
add
push
loop
sub
add
sub
ja
pop
xchg
and
lret
pop
scas
sub
scas
add
dec
cmp
andb
stos
cmp
enter
jb
fimuls
xor
sbb
push
outsb
mov
ficompl
lahf
add
sub
inc
inc
jne
loopne
pop
stc
filds
adc
or
ja
and
xchg
add
outsb
inc
cmp
fmul
pop
lret
mov
loopne
ret
dec
in
add
mov
mov
or
gs
jae
pop
lahf
aad
add
rcrb
fbstp
fcomp
add
push
xorl
or
sub
mov
pop
xorl
or
je
mov
fadds
add
add
mov
test
fst
sbb
push
rorl
iret
jbe
add
test
push
subb
pop
xor
dec
xchg
sbbb
inc
cmp
mov
sbb
jae
incb
mov
add
push
jmp
mov
add
loope
pusha
and
pusha
add
addl
aaa
in
divb
xor
add
call
adc
jge
jbe
add
sbb
sub
pushf
cmp
mov
mov
aad
popa
dec
fsubrs
repz
sbb
jp
inc
cmpsb
fwait
xor
push
mov
int3
loope
les
shlb
pushf
jns
aam
scas
add
das
iret
sub
ss
or
jle
lcall
push
sbb
cmp
add
jnp
stos
mov
add
loopne
add
adc
add
sbb
dec
sbb
daa
cltd
add
jle
jb
adc
subb
xor
in
jb
clc
pop
add
sbb
sub
mov
push
mov
or
loope
dec
xchg
xchg
add
loop
ret
insl
push
sub
jmp
rcll
pop
mov
inc
cmc
sub
mov
dec
out
add
mov
inc
add
push
sub
pop
xchg
aaa
or
or
stc
mov
push
mov
daa
add
pop
push
icebp
imull
mov
int3
pushf
mov
or
add
ljmp
dec
bound
lret
adc
daa
ret
mov
cs
sbb
in
sub
mov
or
pop
outsb
popl
repnz
pop
mov
out
pop
add
pop
adc
inc
push
insl
loopne
cld
fnstenv
or
pop
add
scas
pop
add
sub
add
loope
push
add
adc
add
int3
or
mov
ljmp
mov
js
xor
leave
rol
test
int3
xor
iret
out
jns
jbe,pt
mov
inc
das
loope
movsl
inc
jo
js
out
js
add
dec
sub
ret
add
dec
add
mov
rol
add
int3
pop
add
adc
popa
je
xor
push
add
outsb
mov
add
adcl
cmp
in
add
adc
add
push
inc
mov
mov
add
add
xchg
clc
pop
dec
jbe
xchg
mov
push
add
es
aam
addl
fs
push
add
cmp
sti
je
sub
addl
sub
xchg
sbb
pusha
add
or
lcall
enter
lock
add
mov
mov
imul
cmc
repz
pop
std
xchg
loope
pop
add
adc
std
and
sbb
add
add
dec
add
add
add
in
and
arpl
push
out
add
fcoml
sti
adc
xchg
cmpsb
jl
jo
add
add
jle
xor
shlb
sub
out
add
pop
inc
mov
mov
insb
pushf
xchg
cmp
push
add
add
pop
jl
and
adc
mov
aas
dec
jae
shl
nop
xor
ficoml
dec
inc
jmp
or
lahf
mov
mov
lret
mov
mov
jb
xchg
push
add
jg
mov
sub
xchg
daa
sbb
cmp
xchg
add
cmc
sbb
xchg
mov
inc
cmp
and
call
add
mov
daa
lea
dec
out
and
les
jbe
xlat
xor
add
addl
mov
xchg
mov
lret
pop
lock
fcmove
sub
dec
enter
push
aam
and
add
dec
xchg
pop
cwtl
cs
or
scas
push
jmp
loopne
cs
test
add
xchg
pop
xlat
mov
xor
test
jae
inc
icebp
push
sbb
adc
in
pop
mov
jge
xchg
aam
in
mov
pop
push
sub
add
jnp
mov
jl
mov
push
inc
cmp
es
ss
rcrl
xchg
adc
std
sbb
or
jae
add
in
lds
jp
ds
mov
sub
jmp
and
cwtl
xor
bound
rorl
test
add
mov
jb
add
add
imul
les
ja
repnz
out
lods
mov
fcoms
jg
or
xchg
sub
and
mov
or
sti
jbe
into
mov
jle
jbe
rolb
push
push
icebp
and
addr16
into
and
fwait
add
add
push
jmp
xor
add
pop
jmp
lret
pop
jecxz
mov
dec
dec
pop
sbb
lods
aam
lahf
and
mov
ficoml
inc
movl
pusha
bound
in
cmp
test
cmpsb
fidivrl
add
add
xor
and
xchg
loope
mov
mov
pop
aam
adc
in
adc
pop
add
jl
adcl
inc
mov
iret
and
add
or
js
dec
jecxz
and
movb
jno
cmpsl
inc
xor
mov
mov
sbb
jle
data16
add
add
out
add
xorb
mov
dec
push
loopne
add
adc
sub
add
leave
mov
mov
xchg
fwait
jns
insb
es
xchg
or
add
dec
clc
add
out
add
mov
std
dec
cli
addr16
add
adc
jg
jbe
xor
insl
out
call
adc
fisubs
popf
lret
cmp
cmpsb
jnp
into
mov
loop
fs
jno
add
call
jle
adc
jo
hlt
testb
pop
add
sub
add
push
iret
lods
add
push
fadds
xchg
out
dec
pop
icebp
sbb
cmpsl
clc
sub
ljmp
int
add
mov
hlt
js
out
subb
jl
test
ret
test
cltd
movl
xor
pop
xlat
aad
pop
enter
jno
cmpsb
adcl
add
and
jno
cmp
mov
sub
andl
dec
roll
daa
or
add
add
pop
stc
add
push
add
xchg
adcb
ror
sbb
and
add
add
sbb
ljmp
sbb
cmp
gs
cltd
std
inc
mov
mov
xchg
inc
shll
pop
pop
lcall
dec
bound
add
sub
les
pop
sub
pop
ret
add
cmp
inc
aad
fcomps
xchg
add
fimull
mov
int
xlat
fxch
mov
dec
orb
xchg
inc
flds
and
push
push
jo
push
add
aad
jno
mov
aaa
mov
into
sub
mov
mov
loope
test
test
xchg
mov
aaa
pop
mov
push
sbb
push
int3
lods
mov
jo
hlt
mov
add
sbbb
dec
pop
pushf
adc
xor
aad
sub
add
adc
pop
inc
adc
sub
mov
add
add
add
ljmp
sbb
shll
pop
add
sub
mov
mov
pop
int3
pusha
xchg
or
js
cmpl
in
and
add
out
push
comiss
add
sub
lea
mov
mov
lods
mov
push
in
add
ja
fidivs
and
out
mov
xchg
jb
loope
adc
mov
shll
int3
inc
push
loope
add
out
imul
pop
mov
add
inc
adc
pop
add
pop
lret
sbb
call
mov
adc
push
out
ds
ja
aam
cmp
cli
sub
jp
ljmp
or
lea
ret
cmp
stc
popw
scas
push
xchg
and
mov
insb
xchg
add
mov
push
push
cli
arpl
imul
push
lret
and
xchg
loopne
int
add
rcr
adc
push
daa
cli
add
outsl
jl
and
pop
fwait
jle
cmpsl
xor
pusha
cmp
rcll
popa
ret
rcr
int
inc
verr
into
pop
out
pop
mov
inc
cli
mov
add
cmc
lods
add
stc
inc
lret
or
push
movsl
add
arpl
push
je
mov
cmpsb
inc
add
xor
or
push
jne
mov
outsb
fs
add
cld
roll
icebp
aam
ret
xor
add
flds
imul
push
sub
add
cmp
mov
cmp
mov
push
sub
pop
idivb
imul
cmp
leave
jae
cmc
clc
push
add
mov
xchg
push
in
int3
or
add
add
cmp
inc
fdivp
add
or
jae
add
add
mull
pop
add
leave
test
dec
add
repnz
cmc
or
mov
fidivrl
or
dec
add
add
mov
sub
jge
add
scas
xor
lret
neg
cmp
mov
stos
add
cmp
cld
cmc
jp
or
js
pop
in
adc
jns
xor
jge
sbb
mov
add
dec
shll
xchg
xchg
xchg
inc
push
dec
xchg
insl
xor
mov
fs
mov
cs
into
fdivr
subb
mov
stos
jb
add
sub
in
shlb
add
xor
sub
add
dec
lods
pop
test
and
stos
add
mov
into
push
mov
cmpsb
mov
out
add
add
mov
xchg
test
addl
cli
push
cs
in
cmp
pop
and
js
shlb
add
imul
pop
std
inc
push
shrb
inc
pop
jbe
inc
push
popf
jge
mov
mov
xor
dec
andb
das
adc
mov
popa
ds
sub
xchg
jbe
jp
mov
and
or
and
add
push
stc
std
xchg
add
ja
jle
rolb
call
or
jecxz
add
cmp
add
ficoml
stc
out
clc
jno
push
mov
push
in
mov
cmp
in
icebp
repz
push
in
push
add
xchg
dec
pushf
packssdw
bound
or
cltd
popf
mov
jecxz
add
mov
pusha
push
enter
cmp
ficomps
fsincos
inc
out
int
insb
rcl
and
xchg
add
lock
add
pop
loopne
into
test
std
js,pt
dec
bound
fdivr
or
mov
imul
je
mov
pop
xorb
jns
aad
xlat
adcl
stc
lods
inc
shl
mov
pop
loopne
xor
fdiv
cmpsb
jb
fcomi
cmpsb
mov
repnz
add
inc
dec
mov
into
xchg
cmp
pop
push
and
ja
mov
dec
or
int3
js
out
lahf
dec
lret
push
insl
sbb
outsb
add
js
fs
loope
sub
xchg
add
xor
jp
jg
es
add
or
add
ret
cmpsl
insb
jp
xchg
jo
and
xchg
ret
add
popa
shrb
add
cvtps2pd
push
add
or
jno
popf
pop
add
aaa
lea
xlat
sarl
push
add
adc
add
mov
add
sahf
fwait
add
jne
xor
out
adc
lods
andl
mov
subl
add
or
inc
nop
push
add
repz
loop
dec
bound
push
outsl
cmp
dec
jge
es
or
inc
aas
ret
inc
imul
pop
stos
mov
xor
xchg
push
inc
add
movsl
movsl
ja
add
add
push
out
cli
xchg
adc
dec
test
inc
fstps
inc
push
out
add
in
add
add
cmp
aad
out
push
add
ljmp
pop
ret
inc
add
add
add
add
jno
movsb
fisubl
test
add
and
popw
mov
ret
sub
int
pop
je
mov
push
add
add
mov
cmp
cmp
sbb
lret
add
sub
push
lods
jne
out
sti
jp
hlt
ret
cmpsl
or
aas
ljmp
in
push
pop
add
rcrw
std
insb
scas
or
and
xchg
fsubl
add
pop
nop
popa
out
ret
fldl
adc
xchg
adc
fs
push
push
xor
ja
mov
rol
movsb
mov
or
sbb
shlb
fsubs
jecxz
add
cmpb
add
and
outsb
out
incl
jb
xchg
xchg
lock
imull
mov
lret
mov
xchg
add
sbb
inc
out
push
enter
xor
add
xor
sub
add
xchg
dec
movsb
into
jnp
cmpsb
add
les
fiaddl
lods
lret
sub
mov
in
enter
jb
rcrb
or
clc
cmp
ficomps
sarb
pop
ja
pop
xchg
xchg
xchg
mov
add
sub
lret
add
lret
adc
in
add
div
icebp
add
or
xor
in
mov
adc
ficomps
or
jno
mov
clc
mov
dec
push
mov
sbb
xchg
adc
arpl
xor
xor
leave
push
add
pop
roll
inc
add
mov
add
jp
jns
jns
movsl
mov
lcall
push
dec
pop
and
xor
mov
mov
pusha
pop
push
cli
pop
test
xor
gs
out
mov
mov
xor
test
fcoml
and
sub
mov
mov
pusha
fnstcw
cmpsb
add
ljmp
xor
ret
rcll
mov
inc
cmp
inc
rcll
dec
out
adcl
pusha
adc
sub
lea
push
mov
out
movsb
ljmp
mov
jmp
clc
sub
cld
fwait
int3
sahf
ficoml
stos
sbb
ja
lds
insb
mov
sub
jle
pushf
cs
xor
insb
std
and
sbb
jle
fidivrl
repz
in
mov
adc
add
sbb
add
jb
out
add
cmp
dec
sbb
fsubs
jmp
add
inc
push
ret
pop
nop
lret
in
add
hlt
add
sbb
push
nop
mov
xchg
lea
sbb
dec
add
addr16
ss
add
push
enter
rclb
aas
pop
in
add
mov
sbb
push
into
dec
add
xlat
ret
iret
iret
insl
repz
add
psubd
jne
das
lcall
dec
and
mov
dec
mov
add
dec
mov
shr
add
fmull
inc
scas
add
or
sub
pop
sub
mov
add
ljmp
dec
adcb
adc
sbb
and
outsb
add
cmpsb
mov
adc
data16
out
loop
jp
test
popf
pop
pop
dec
cs
or
mov
add
cmp
shrl
ltr
aaa
add
add
or
jae
daa
dec
dec
push
add
mov
add
fiadds
ja
add
cmp
xor
ret
adc
mov
out
loop
lock
inc
dec
jg
lea
add
xchg
cmp
dec
xchg
mov
jge
stc
pop
and
mov
mov
lds
add
cmpl
and
ss
pop
add
roll
in
and
or
add
js
push
xor
inc
sbb
hlt
push
add
add
lods
leave
xchg
inc
sub
xrelease
add
cltd
jbe
xchg
sbb
pop
sub
adc
data16
lds
mov
rcll
or
add
push
scas
lods
add
add
adc
cld
pop
loopne
insb
cli
jge
popf
add
paddsw
mov
sbb
cmc
ja
lret
cmc
lea
rol
dec
dec
pop
clc
xor
mov
and
mov
int
dec
add
pop
sbb
lods
std
add
fucom
popf
pop
add
nop
pop
add
ds
xchg
xchg
lods
mov
lock
cmp
loop
mull
jae
out
mov
stos
add
jmp
adc
sbb
hlt
mov
repz
fdivrl
mov
dec
lahf
ret
inc
xchg
sbb
nop
insl
jae
push
faddl
std
cmp
add
stos
sub
add
or
sub
into
test
enter
lret
cli
add
add
fwait
push
sub
add
pop
ret
sub
stc
jecxz
add
cwtl
push
add
mov
lods
mov
fldl
pop
pop
add
scas
jl
clc
aad
add
addb
jecxz
cli
adc
jl
stos
lods
add
call
bswap
aam
jge
jle
inc
inc
add
mov
call
aaa
lds
mov
add
add
add
lret
mov
in
push
sub
aam
push
add
adc
adc
cmp
scas
sub
push
and
loopne
sti
dec
int
add
mov
push
out
mov
pop
stos
stos
test
stc
pop
dec
pushf
pop
push
mov
mov
add
pop
pusha
push
gs
add
add
aad
mov
mov
les
movsl
test
sub
pop
mov
xchg
call
push
or
int3
bswap
cli
leave
pop
rcrb
nop
push
addb
fwait
push
loope
add
cmp
imul
fxam
aaa
xchg
repnz
loope
imul
pusha
out
jge
outsb
add
loope
in
cmp
loopne
cmp
and
adc
dec
adc
fadds
inc
or
push
imul
dec
rep
sahf
or
xchg
mov
mov
stos
mov
lock
hlt
mov
lahf
jecxz
cwtl
je
cmp
dec
inc
add
add
add
pop
cmp
rclb
jae
mov
pop
pop
aam
mov
mov
testl
and
add
outsb
adc
mov
aam
add
or
lcall
add
push
sbb
mov
add
dec
insl
add
movb
hlt
icebp
rolb
inc
dec
fiadds
popf
sbb
and
inc
inc
pusha
pusha
sub
add
lods
subb
jge
in
sbb
clc
jp
std
fs
inc
mov
out
add
add
or
lret
pop
cmp
bound
hlt
pop
lods
lahf
mov
movsb
div
int3
fidivrs
mov
lret
add
test
std
mov
in
sub
into
add
dec
lcall
cltd
nop
fbstp
sbb
jno
mov
inc
inc
xchg
in
add
cld
imul
shl
and
jecxz
test
in
adc
inc
sbb
or
add
mov
and
sbbb
call
mov
test
inc
lock
push
sbb
imul
rcrl
lods
fildl
cmp
adc
out
aas
add
orb
cmp
xchg
ds
xor
aad
jecxz
mov
out
adc
in
push
aad
out
je
repnz
fnstenv
das
or
lods
mov
sbb
add
or
call
push
inc
jg
jno
sbb
cmpsb
sbb
adc
mov
cmpsl
inc
fsubrl
cmp
or
in
out
mov
fldenv
push
call
sbb
pop
rcrb
adc
cwtl
fistpll
dec
add
jmp
pop
mov
add
inc
dec
aad
mov
mov
insl
pop
and
jle
or
enter
sub
jae
sbb
iret
in
mov
cmp
popa
jo
in
lods
das
popf
in
hlt
add
outsl
shrb
clc
orb
jnp
sub
sub
sahf
add
ja
dec
add
add
add
add
fwait
rorb
mov
jae
pushf
int
or
mov
adc
lods
dec
add
lret
ss
and
add
add
mov
xchg
leave
mov
sbb
lret
add
add
inc
push
mov
xor
addl
daa
enter
in
iret
outsl
mov
ja
xchg
or
add
sub
js
aad
inc
add
notb
lret
repnz
adc
shrb
add
je,pt
sbb
sub
cmp
in
add
std
in
scas
scas
test
cld
jp
in
mov
lds
leave
iret
jmp
repz
outsb
adc
sbb
out
cmp
jle
xor
pushf
add
insb
mov
push
js
push
push
pop
xchg
mov
or
enter
loopne
adc
add
xchg
add
adc
nop
jmp
mov
cmpsl
fcom
and
cwtl
lods
aam
mov
jmp
sahf
pop
or
add
adc
jno
mov
mov
cmpsb
sbb
push
add
xchg
nop
push
xchg
add
add
mov
pop
add
push
sahf
cwtl
mov
sub
mov
xchg
sub
lahf
sub
add
movsb
frstor
jnp
in
sub
sbb
aad
lahf
dec
jnp
pop
adc
fldt
hlt
push
dec
pop
mov
adc
fdivrs
or
add
movsl
xchg
mov
dec
insb
xor
cmp
add
repz
xchg
mov
inc
mov
icebp
adc
jbe
insb
shrb
imul
pop
inc
aas
pop
shrb
xchg
out
inc
cmpsb
enter
loop
std
fistpl
adc
jnp
add
mov
adc
add
dec
sbb
add
sbb
add
add
sbb
sub
in
jno
and
xchg
add
js
jl
adc
or
dec
jp
and
dec
jb
les
mov
adc
mov
pop
sub
add
mov
mov
push
cmpsl
clc
lcall
add
or
mov
push
xlat
dec
jp
push
add
in
add
push
hlt
frstor
shr
loopne
ret
jno
andl
pop
xor
xor
push
mov
sub
into
lcall
dec
sbb
add
ljmp
push
pop
jo
fisubrl
xchg
stos
cli
lods
mov
test
push
shll
add
popa
fs
into
popa
inc
les
inc
pop
xchg
xor
test
add
cmp
dec
inc
mov
aas
inc
adcl
mov
add
sbb
mov
icebp
mov
push
ljmp
inc
pusha
add
dec
add
mov
sbb
add
aam
pop
push
xor
adc
push
add
insl
sbb
sti
inc
push
or
inc
add
rclb
ret
add
mov
aam
mov
xchg
push
pop
pushf
add
loopne
icebp
mov
xor
mov
mov
cmp
outsb
fldt
cmpsb
pop
add
xchg
cmp
loope,pn
pushf
cli
add
inc
pop
fdiv
xchg
pop
dec
mov
aad
jg
mov
cmp
sbbb
insl
inc
cmpsb
adc
cltd
leave
divl
out
jle
xchg
mov
fwait
add
sbb
push
pop
gs
lods
pop
add
mov
jecxz
cmp
into
pop
pop
mov
add
jnp
fldt
add
sub
inc
push
mov
or
add
es
jg
popa
xchg
dec
jns
sub
cld
lahf
add
adc
lea
jo
orb
xor
fisttpll
imul
pop
insb
out
loopne
pop
or
outsl
lods
mov
add
dec
stos
dec
rclb
jo
mov
add
and
or
or
lcall
add
sub
push
js
sbb
dec
jg
xchg
add
in
jl
add
cli
push
adc
mov
icebp
les
sahf
xchg
pop
test
add
fcmovne
add
add
add
enter
add
data16
sub
jb
enter
mov
aad
cmpsb
loopne
ja
in
pop
insl
push
and
stos
aaa
or
mull
add
ljmp
subl
jo
mov
jns,pt
loopne
mov
fwait
push
cltd
add
inc
mov
pop
data16
aas
shlb
add
add
loope
mov
lods
add
and
push
and
cmpsb
xor
add
les
add
sub
cmpsl
call
loope
cmp
call
gs
dec
jbe
insb
jl
gs
add
dec
aas
push
data16
test
mov
mov
cmp
repnz
pop
dec
add
lcall
add
loope
or
mov
lret
pop
add
mov
mov
mov
jae
lods
adc
xor
add
push
pop
add
mov
mov
xchg
fucom
ljmp
loop
cmp
in
cmp
aad
lea
and
sahf
stos
cmp
outsb
inc
add
add
pusha
nop
add
mov
mov
lahf
xchg
cmp
mov
xor
lea
inc
push
add
inc
xor
or
add
mov
mov
jbe
add
pop
pop
and
push
nop
dec
sbb
adc
mov
jl
movsb
lods
in
add
add
pop
inc
add
lock
cmc
pop
add
xchg
xchg
out
add
xor
inc
loopne
shlb
jno
xchg
or
cmp
fcompl
pop
xlat
nop
add
lods
add
jo
insl
fidivl
insl
add
xor
mov
cltd
add
mov
pop
add
add
and
cwtl
idiv
add
jb
jnp
mov
add
out
push
xor
mov
int
xor
push
leave
test
xor
add
inc
add
mov
ret
sarl
mov
cmpsl
test
xor
outsb
sbb
adc
ds
sub
add
pop
int3
outsb
loop
mov
cmp
xchg
mov
add
jmp
and
xor
dec
dec
ja
dec
xchg
das
ficompl
ja
enter
cmp
jae
add
mov
jo
fldt
xor
lret
in
hlt
add
repz
sbb
out
sub
cwtl
or
fadds
sbb
jg
add
aas
add
shlb
das
xchg
mov
inc
gs
cmp
shrb
jns
ja
shrl
add
pushf
sbbb
pop
xchg
sbb
xchg
cmp
mov
adcb
out
add
push
lea
and
mov
subl
add
int3
ret
sbb
mov
cmpsb
inc
cli
mov
sub
lret
adc
push
js
adc
inc
hlt
cmp
push
aaa
shll
mov
mov
popf
sbb
mov
pop
push
and
sbb
cmp
xor
jbe
add
sbb
loope
jno
xor
inc
dec
popa
jo
jmp
xchg
cmp
add
pop
mov
flds
lods
pop
inc
sub
outsb
mov
add
push
stos
mov
mov
jle
out
adcb
xchg
jp
push
xor
add
push
clc
movsl
rcrb
push
loope
inc
xor
dec
add
outsl
orl
inc
mov
push
sbb
add
mov
or
loop
push
mov
sub
push
or
sub
aam
sub
ljmp
cli
popf
std
add
cmp
or
nop
sbb
inc
sbb
loope
push
sbb
sahf
sbb
ljmp
fwait
nop
ja
roll
pop
call
add
mov
adc
in
sbb
add
and
aaa
into
std
orl
loope
add
sbb
mov
out
sub
mov
push
bound
addl
push
roll
pusha
xchg
aaa
push
and
in
rclb
mov
sub
push
mov
arpl
add
and
and
fdivrl
mov
les
pop
push
push
cmp
rcrl
jb
out
xor
cwtl
mov
inc
pop
add
fdivr
out
sarb
sbb
mov
out
push
add
add
add
dec
outsb
dec
rorb
xchg
sub
ss
pop
add
loope
push
jecxz
push
push
add
js
adc
cwtl
sub
add
outsb
add
xchg
and
add
and
ret
pop
add
xor
xor
xor
inc
and
mov
xchg
leave
sub
icebp
gs
dec
xorl
out
stos
in
daa
test
jbe
mov
dec
add
incb
push
js
sbbl
sub
pop
fldt
mov
add
mov
push
cmp
ljmp
aaa
es
cmp
or
fisttpl
add
mov
test
jmp
add
ret
and
add
mov
setle
xchg
and
sub
sbb
dec
fistps
cmp
cwtl
or
mov
or
dec
pushf
add
add
cmp
xorl
adc
adc
gs
mov
add
or
jae
loop
push
inc
jnp
xor
push
and
add
int
or
or
push
pop
enter
inc
pop
in
sbb
add
jmp
cmp
mov
bound
loopne
and
cmp
fucomp
push
ja
xorl
jb
add
outsb
sub
add
adcb
sbb
mov
jp
add
add
jns
test
in
mov
fidivl
mov
fldt
movsb
sub
jo
ret
sbb
imul
add
xor
mulb
mov
sti
mov
je
popf
adc
enter
divb
jne
leave
scas
ret
cmp
inc
repz
xchg
and
test
or
mov
sbb
popa
je
adc
pop
mulb
ja
int
pop
xor
fldl
xchg
popa
lret
add
cmp
lds
ret
dec
inc
sub
movhps
mov
push
cld
pusha
mov
cmc
cwtl
add
jae
mov
add
pop
or
cmpsl
stos
pop
cld
in
imul
rcrb
mov
add
add
mov
ret
xchg
add
add
and
mov
add
push
jle
mov
bnd
decl
pop
add
ja
add
mov
mov
out
dec
add
aas
inc
lock
or
ss
out
fcompl
js
add
out
stc
mov
in
add
add
push
sbb
add
addl
je
push
jge
test
cmp
add
jb
mov
or
push
rdpmc
inc
mov
into
mov
call
pop
test
scas
pusha
xor
bswap
add
popa
pop
jmp
add
test
mov
fisttpll
addb
add
data16
scas
jecxz
add
leave
adc
add
mov
mov
sub
mov
daa
add
add
lea
mov
mov
test
roll
das
push
jmp
fnstcw
add
or
xor
loopne
mov
sub
add
and
movntps
push
dec
inc
push
dec
bound
test
sub
xor
test
adc
add
jmp
jno
rcll
pop
loop
inc
mov
lock
add
jge
push
jbe
ds
nop
or
add
shl
test
sub
add
ss
repnz
inc
and
add
pop
add
push
xor
xchg
andl
xlat
outsb
or
rclb
push
sub
pop
add
addb
repz
add
jp
dec
add
sub
roll
sbb
mov
sbb
or
frstor
arpl
add
out
out
push
loop
mov
call
dec
push
lods
add
pop
cmp
mov
mov
pop
jnp
push
in
adc
add
and
sub
repz
insl
lcall
xor
mov
and
cld
cmpsl
testl
loope
or
pushf
push
add
sub
fistpll
arpl
fcmovnbe
sbb
in
or
movsb
rclb
cmpsb
daa
pop
mov
mov
mov
pop
int3
ret
dec
add
mov
fstps
into
test
sarb
mov
dec
call
ljmp
fsubrs
add
bound
movl
add
cmp
xchg
loope
jl
notb
or
fidivl
out
mov
sub
pusha
adc
pop
add
jp
mov
inc
out
outsb
dec
add
jno
dec
jecxz
push
mov
je
inc
enter
mov
or
bound
verw
push
sbb
lods
xchg
fwait
xchg
sbb
jnp
or
data16
stos
sbb
mov
add
test
push
lcall
lea
test
jle
xor
jle
add
dec
add
jg
sahf
incb
leave
fstpt
xchg
dec
fimuls
or
add
push
xchg
hlt
enter
sub
shrl
bound
sub
fsubl
jno
fadds
pop
xchg
adc
dec
call
or
push
ss
pusha
js
pushf
and
inc
add
scas
sbb
jae
add
or
or
sub
or
add
addl
arpl
xor
hlt
pushf
inc
jl
mov
imul
sbb
or
ss
mov
fnsave
int
bound
add
add
add
add
insb
popf
sub
sub
jbe
mov
out
jle
sarb
adc
push
add
push
and
xchg
mov
movsb
fisubrl
xchg
les
mov
test
lea
jb
sub
out
call
sbb
or
inc
mov
aad
daa
pop
ljmp
inc
xor
mov
mov
stos
pop
aad
ret
pop
or
sub
mov
cltd
sbb
aaa
je
adc
jne
or
and
and
lods
aas
add
xchg
mov
pop
push
aaa
xor
push
xor
out
add
test
add
cld
mov
call
push
jae
xlat
je
outsl
stos
roll
dec
pop
movsb
push
mov
mov
mov
insl
dec
andl
sub
add
ss
add
lock
sar
jbe
lock
pushf
xchg
std
xor
dec
rcrl
pop
enter
aam
rclb
sbb
shrl
adc
xchg
fcoms
sbb
cmp
mull
adc
into
loop
xchg
out
xchg
push
mov
std
jno
add
add
pop
out
sarl
movsb
jl
or
aas
push
add
jle
dec
add
std
push
add
inc
mov
int
jp
or
add
pop
cwtl
sub
call
or
mov
push
cmp
push
add
in
push
lods
lea
and
popa
punpckhbw
jp
adc
mov
lods
fdivs
cmpsb
add
cwtl
negl
fmuls
mov
out
dec
int
insb
pmaddwd
mov
in
or
cmp
mov
jnp
bound
pop
mov
push
out
sub
lods
rorl
sarb
add
sbb
jg
inc
mov
outsb
lahf
inc
add
stc
scas
jnp
jecxz
loopne
and
fidivl
cmp
pop
fildl
pusha
sbb
or
sub
lahf
test
loop
cli
das
add
add
xchg
inc
push
js
add
push
lcall
imul
mov
fmull
push
or
stc
data16
add
addb
repnz
adc
xor
js
outsb
loopne
jl
pop
aaa
fbstp
push
xchg
lea
enter
push
dec
xchg
push
ds
pop
lods
sub
mov
test
add
pop
das
shr
xchg
xchg
add
add
cmc
test
and
sub
xor
pop
and
outsb
outsl
jge
add
in
mov
dec
popf
push
sub
pop
inc
stc
out
add
fwait
jb
or
inc
or
mov
adc
jmp
mov
movsb
push
add
mov
and
and
verr
pop
mov
leave
adc
gs
mov
mov
hlt
aad
out
ja
add
dec
ret
pusha
insl
add
pop
pop
or
test
add
mov
cmpsb
mov
mov
jmp
lret
jmp
ja
mov
cmp
aad
add
and
pop
add
add
adc
pushf
xchg
sub
add
inc
or
fsubs
add
dec
int
addl
pop
and
pop
fwait
sbb
jg
imul
fldl
cli
leave
hlt
add
aam
cmp
bound
ljmp
call
xlat
cmp
ds
push
mov
mov
fbld
loop
call
std
add
scas
add
add
cmp
mov
ja
mov
add
fnstcw
ljmp
lods
mov
and
out
jbe
lods
mov
pushf
testl
add
imul
mov
and
and
addr16
mov
sbb
add
cmp
ret
add
out
pop
cmp
outsb
or
mov
sbb
mov
jp
cmpsl
push
xor
outsl
push
add
fstps
push
test
push
lods
push
xorb
sti
lea
cs
push
bound
pushf
pop
shr
shll
fcoml
test
push
out
in
ljmp
popa
push
pop
jo
push
add
add
lods
shll
pop
cmp
xchg
or
add
imul
aam
push
push
sbb
cmp
xchg
fs
xchg
add
mov
xchg
fisubrl
add
mov
adc
add
ljmp
add
add
pop
out
push
push
push
push
cltd
pop
add
and
cmp
adc
shlb
in
add
lret
popa
inc
lcall
sub
and
scas
jb
cmp
fistl
inc
inc
xchg
push
out
dec
lahf
bound
ja
repnz
in
cmp
test
add
mov
mov
lcall
add
push
xor
sbb
add
fs
sbb
pop
test
mov
clc
jge
sbb
aam
push
sub
push
push
add
jbe
stos
test
dec
xchg
add
xor
add
hlt
call
xchg
lcall
push
sbb
daa
mov
xor
pop
add
aam
add
ret
xor
lret
popf
lods
or
mov
mov
lock
sub
inc
nop
aaa
add
and
mov
jns
adc
fisubrs
cmp
in
sbb
lret
into
pop
pop
add
bound
test
daa
leave
pop
scas
add
mov
cmpsl
adc
mov
lahf
pop
add
add
cmp
hlt
or
int3
and
cli
pop
push
push
mov
push
gs
push
push
mov
ret
lock
insl
pop
add
outsb
mov
shlb
mov
mov
daa
jge
cmpsb
scas
or
mov
xor
scas
and
js
imul
mov
es
add
fstps
loopne
daa
das
add
pop
shll
jmp
imul
add
sbb
jns
push
cmpsb
and
aaa
out
cmp
add
add
or
cli
or
add
add
xchg
push
pop
push
adc
add
jb
push
add
jb
js,pn
jl
or
mov
and
nop
sti
cs
mov
mov
sti
loopne
mov
fiaddl
jns
dec
inc
dec
arpl
out
call
jg
dec
xor
cmc
cld
add
inc
div
cmc
inc
mov
lret
shll
mov
jno
pop
aaa
mov
xchg
mov
pusha
js
add
mov
add
xchg
add
repz
clc
mov
movl
dec
out
scas
or
das
mov
repnz
or
xchg
into
pop
xchg
add
fs
int3
adc
sbb
pop
inc
popa
add
insl
inc
add
stos
cwtl
add
popf
dec
jnp
jl
lret
jmp
xor
fwait
pop
add
movsb
test
add
clc
jns
add
lods
mov
popf
gs
mov
jge
rorb
jmp
les
cmp
mov
cmp
xchg
test
pop
and
nop
negb
aaa
lds
add
add
pusha
mov
iret
ret
repz
cmp
sbb
adc
ret
pop
mov
add
inc
in
inc
bound
xchg
jns
test
mov
push
or
dec
dec
add
xchg
test
fs
insl
lcall
pop
arpl
stos
pop
cwtl
insb
or
xchg
adc
test
push
inc
push
xlat
dec
loope
mov
add
in
scas
sbb
jmp
inc
mov
add
inc
push
lock
loope
lea
jmp
sbb
stc
dec
mov
xchg
add
add
jg
pusha
xor
enter
and
add
int
sub
out
ljmp
add
mov
jl
ss
add
sub
mov
es
xchg
movsl
ffree
xor
add
or
lcall
push
stos
xor
mov
fmull
repnz
add
outsl
xlat
pop
add
fistl
add
pop
dec
xor
popf
add
shr
inc
add
jnp
add
add
mov
pop
xchg
cmpsl
lea
push
scas
jl
mov
sub
xchg
push
fdivs
mov
repz
jle
push
popf
cwtl
add
shl
adc
xor
add
pop
add
add
add
push
push
repz
add
data16
mov
sbb
mov
xor
xchg
dec
dec
test
aas
push
cwtl
adc
cmc
movsb
mov
out
mov
in
out
and
addb
jns
popf
out
icebp
push
out
push
xchg
push
lods
add
jl
fdivrs
add
ljmp
add
das
notl
cs
adc
sbb
mov
sub
and
dec
inc
add
dec
js
or
imul
jae
add
popf
xor
mov
cltd
nop
mov
pusha
add
lods
mov
add
add
filds
push
mov
scas
xchg
shrb
xchg
jl
jbe
stos
sub
scas
add
mov
dec
in
daa
cltd
lods
pop
inc
cmp
add
or
mov
mov
mov
fstpl
add
add
pop
scas
cmp
es
cltd
nop
push
vmread
pop
lods
je
push
mov
and
filds
pushf
addl
lret
xor
rolb
jp
imul
es
out
fimull
jo
jns
mov
int3
xor
inc
pop
add
lcall
add
jnp
jo
add
loopne
dec
loope
or
and
popl
add
dec
das
fidivs
lock
out
in
ret
lcall
rolb
aaa
add
imul
mov
push
mov
je
add
dec
add
cmp
mov
cmp
mov
cmp
lods
mov
cld
adc
pop
pusha
arpl
jns
addl
or
xchg
mov
cmp
push
mov
inc
xor
dec
jmp
sbb
mov
add
add
pushf
sbb
ja
push
mov
fidivrl
add
pop
cmc
sbb
push
dec
loop
add
shlb
jmp
into
loope
add
cli
add
add
xor
lods
lret
add
add
test
imul
js
mov
in
fucomi
add
rcrl
outsb
jno
idivl
xchg
xchg
pop
and
pop
push
add
and
dec
and
or
add
int
jecxz
cmp
xor
pop
ret
and
stos
add
xlat
add
pop
add
add
cwtl
fsts
fldl
sub
inc
jae
cmp
push
push
xor
bound
add
sahf
mov
les
inc
mov
adc
mov
cwtl
fs
ret
mov
cmp
sub
scas
insl
inc
mov
xor
jbe
stos
pop
jp
pop
add
aas
cmc
jl
add
shll
sarb
movsb
dec
add
or
push
dec
mov
push
add
test
pop
test
inc
repnz
outsb
add
pop
add
cmp
add
add
dec
xchg
add
test
fiaddl
les
xchg
cmp
in
add
cltd
add
add
daa
push
sbb
dec
add
lea
popl
jecxz
xor
push
mov
mov
sub
add
rcll
jge
sub
movsl
out
and
push
cmp
xchg
dec
lret
pop
jmp
stos
add
bound
into
sbb
pop
add
movsb
mov
add
mov
lock
inc
pop
push
push
and
push
jg
movsl
mov
dec
fcmovnbe
and
jmp
push
mov
jne
add
push
add
popa
daa
add
in
add
push
jl
or
and
lcall
dec
and
andl
fsub
stos
add
jg
mov
pop
xlat
cmpsl
jnp,pt
mov
dec
sti
add
sub
sub
ds
sub
push
lods
pop
sub
xchg
aas
or
push
lods
add
add
inc
add
bound
shll
cmp
pop
addb
out
jno
inc
shll
cmp
mov
aaa
jl
jno
jmp
pusha
nop
out
pusha
mov
add
dec
lock
and
push
mov
add
adc
mov
loop
add
jbe
aas
add
mov
repnz
jmp
stc
outsb
push
xor
pop
dec
mov
lods
mov
daa
push
push
jns
push
jb
into
add
mov
dec
or
add
shll
aas
or
sub
add
and
cmpsl
sub
dec
or
stos
iret
popa
out
in
js
decl
and
dec
pop
push
push
cmp
and
fdivrl
test
add
or
scas
imul
iretw
mov
push
cmp
lea
xchg
adc
dec
es
movsb
and
add
loope
add
cmp
mov
inc
inc
movq
add
cli
add
test
inc
adc
sti
sahf
fiadds
pusha
jo
fs
sahf
add
fnsave
insb
aad
add
mov
adc
adc
icebp
lahf
addr16
cmc
sub
push
add
jae
push
clc
roll
or
cmp
jg
jnp
dec
outsb
mov
rcrb
pop
inc
mov
dec
ret
xorb
push
mov
sub
insb
in
mov
and
out
mov
add
in
pop
lret
mov
jb
xchg
orb
sub
add
rcrb
rdmsr
xchg
and
fistps
mov
add
sti
add
cltd
fwait
xchg
out
sub
adc
orb
fs
and
hlt
mov
pop
add
add
cmp
push
jnp
out
mov
push
cmpsb
aas
pop
hlt
and
xchg
mov
call
ds
imul
mov
in
fwait
xchg
aad
xor
scas
or
pushf
mov
add
sub
xchg
sbb
into
mov
shr
cmp
gs
hlt
add
lock
punpcklwd
out
test
push
inc
add
in
add
stos
outsb
or
inc
lea
add
pushf
shr
repz
push
jge
mov
and
ljmp
add
xor
cmp
fnsetpm(287
mov
push
sbbl
or
bound
flds
cmp
mov
inc
add
sbb
insl
inc
push
out
push
pop
xchg
test
gs
cmp
xor
add
mov
add
add
or
cmp
out
cltd
ror
ret
pop
xor
cmp
inc
imul
xchg
in
cmp
stc
push
mov
mov
push
xchg
jl
jle
pop
add
inc
add
cmpsl
mov
sbb
add
test
or
sub
inc
outsb
sbb
push
jl
repnz
pop
popa
mov
inc
xchg
jne
add
xchg
ljmp
fildl
mov
jl
into
stc
mov
add
xor
jecxz
test
push
stos
int
jno
add
xchg
push
cmp
cmp
push
adc
lret
add
ss
lret
inc
add
adc
shlb
sbb
jmp
xchg
cwtl
popf
or
ljmp
and
or
addr16
fsubr
cmp
or
jae
push
mov
test
ret
push
cmp
in
sti
add
add
add
inc
add
cli
mov
arpl
add
add
aaa
clc
cld
into
add
sahf
dec
push
mov
pusha
pop
stos
icebp
jg
push
and
jns
jp
or
daa
out
add
mov
or
add
jo
rorl
add
push
or
add
push
and
add
xor
add
dec
roll
push
add
fsubl
sub
es
loopne
ljmp
cmp
cmp
or
and
add
xchg
pop
mov
mov
and
aas
push
jns,pn
rep
popf
cmpsl
outsb
repz
aaa
push
fldt
loop
cmp
into
mov
cmc
mov
lcall
pop
mov
nop
jno
inc
adc
dec
jns
pop
pop
mov
xor
mov
jmp
mov
sbb
sub
insb
push
add
lea
jne
push
inc
push
fdivrs
jmp
outsl
jbe
aaa
fwait
shlb
int
jne
pop
sahf
leave
int3
aas
pop
sbb
cmp
add
push
mov
fstl
pop
popf
pushf
sub
push
mov
push
leave
test
in
dec
add
mov
pushf
jl
enter
std
or
dec
xchg
roll
data16
push
add
add
rolb
mov
add
fwait
mov
mov
fisubs
jmp
xor
pop
and
cmpsb
lret
mov
loop
addl
std
add
xorl
mov
je
stc
lcall
xor
inc
xorb
loope
out
jnp
enter
xchg
mov
ret
fimull
mov
lea
push
sub
dec
ds
mov
mov
sbb
cmpsb
sbb
mov
or
lock
call
add
push
rcl
add
lods
in
jmp
test
adc
mov
movsb
stos
movl
xor
inc
inc
das
xchg
cli
out
pop
jb
mov
add
add
rcr
sbb
xor
or
in
int3
pop
test
cmp
jbe
xchg
mov
notb
sbb
pop
js
inc
cld
xchg
sti
jo
dec
xor
dec
movl
rolb
sar
push
dec
test
out
aam
fdivrl
test
inc
add
xor
ja
int3
add
or
jecxz
add
xlat
incb
add
leave
cld
xchg
dec
sub
inc
add
sbb
add
add
add
add
clc
sub
push
dec
add
cmp
fcmovnbe
xchg
icebp
inc
out
jmp
and
cwtl
sub
fwait
pop
add
add
aad
and
iret
in
dec
adc
jne
gs
imul
pop
roll
add
popa
or
js
sbb
or
and
andl
add
ja
das
iret
dec
push
add
add
pushf
lcall
and
xor
pop
imul
xor
push
push
out
mov
or
and
dec
mov
mov
fdivrs
roll
test
mov
pop
jecxz
aam
add
repz
inc
clc
xor
stos
mov
xchg
lret
or
sar
dec
cmp
loop
aam
push
mov
xchg
loope
nop
popa
pop
push
xlat
cmp
sbbl
cmp
and
mov
add
pop
mov
sahf
insb
mov
out
inc
shrl
cmp
and
adc
push
fsubs
popa
adc
push
cmpl
mov
sub
mov
cli
jae
arpl
xor
adc
bnd
xor
inc
out
push
jo
int
add
cmp
out
rcrb
push
push
sbb
mov
pop
xor
test
mov
inc
cmc
loopne
add
or
add
icebp
mov
imul
or
scas
sbb
and
in
out
xchg
push
push
add
add
adc
jne
cmp
movsl
test
push
dec
xchg
add
add
pushf
arpl
sub
rcrb
into
mov
cmc
add
jb
imul
pop
add
add
leave
out
jo
add
and
rolb
inc
pusha
lcall
fwait
in
movsl
popl
mov
mov
push
dec
and
or
jne
jl
sti
sub
pop
out
loopne
mov
and
sti
fcomps
jmp
mov
aaa
add
inc
aas
loop
cmp
enter
jp
mov
shrb
mov
in
add
sub
inc
add
adc
lret
je
mov
xor
and
mov
add
push
cmp
rol
add
xor
in
or
cld
mov
xchg
lahf
adc
iret
rolb
and
lret
sub
nop
push
push
add
sbb
add
stos
add
jbe
add
popf
mov
or
cld
xchg
sub
fldl
aam
mov
loope
nop
mov
jmp
adc
add
mov
cltd
push
add
mov
xchg
mov
add
faddl
jo
lcall
out
push
add
clc
jnp
and
inc
mov
add
ds
mov
sub
push
add
repz
xor
add
add
add
rclb
dec
adc
mov
add
subl
int3
ret
fiaddl
push
andl
push
mov
add
bnd
add
cmp
sbb
movsl
sbb
add
xor
xchg
sub
std
add
ja
xchg
bound
sti
push
adc
das
xchg
js
test
stos
aas
hlt
shld
sub
aas
fldcw
and
sub
addr16
xchg
mov
push
icebp
pop
sbb
loope
mov
hlt
jae
into
sahf
lret
outsb
sbb
dec
sub
scas
add
daa
les
adc
ljmp
cli
add
add
ret
sarb
push
or
add
add
ret
adcl
xor
lahf
xor
clc
sub
mov
add
inc
pop
mov
and
adc
int
inc
add
out
dec
cld
and
xor
imul
clc
mov
bound
out
add
add
add
inc
push
or
cld
sbb
in
mov
dec
pop
mov
fsubrs
mov
outsb
out
ret
je
add
lds
add
insl
push
dec
push
out
scas
xchg
in
add
lds
add
sbb
rcr
dec
add
cmp
lods
adc
mov
push
sub
jge
cmp
rolb
or
dec
inc
add
sub
lds
add
push
jle
bound
add
out
push
adc
in
add
test
shrl
push
sbb
mov
loop
cmc
xchg
dec
cmp
cld
sar
outsl
jne
pop
xor
xchg
jecxz
add
sarl
rolb
add
xor
pop
inc
or
insb
push
fbstp
std
or
adc
add
rcll
mov
adc
flds
imul
faddl
ljmp
stc
test
dec
cmp
add
add
ja
pop
pop
sub
add
std
jp
outsl
add
add
add
ret
mov
xor
xor
add
adc
sub
aas
jl
mov
sub
pusha
fsubl
pusha
add
add
inc
cs
add
jmp
or
mov
aaa
stos
jb
daa
pop
dec
push
add
push
test
addb
add
add
add
add
outsl
les
movsb
int3
scas
ss
jns
cmp
xchg
xchg
in
lods
sub
mov
jmp
push
ja
mov
jge
imulb
jb
sbb
pop
cmp
dec
inc
add
mov
mov
mov
sbb
xor
add
mov
dec
mov
pusha
cmc
data16
add
imul
cld
test
add
fldl
imul
add
pushf
aad
ljmp
push
int
cmpsb
add
ficomps
mov
mov
mulb
push
shll
fstpl
jo
add
les
mov
mov
mov
mov
push
add
sbb
repz
push
push
dec
icebp
xor
mov
loopnew
aad
stos
mov
and
stos
add
movsb
enter
into
call
add
xchg
bound
sbb
dec
xor
nop
xchg
sti
aam
lcall
sub
add
xor
gs
mov
sarl
and
mov
jecxz
jo
xchg
add
sbbb
xchg
cli
push
mov
cltd
aam
pushf
fldl
ss
add
add
add
xchg
cwtl
fstl
add
add
out
cmp
cmpsl
pop
add
stc
mov
sub
cwtl
enter
and
jnp
jmp
out
add
push
add
xchg
add
loope
fnstenv
lea
notl
sbb
mov
xchg
out
xchg
stos
rcrl
dec
adc
rclb
lods
xchg
or
mov
dec
pop
outsl
roll
int3
and
and
movsb
imul
fs
ja
lret
scas
push
pusha
add
xor
mov
xchg
push
cmpsb
cmp
add
add
incb
inc
call
jb
cmp
mov
cs
sub
cmp
add
mov
out
push
add
je
ret
add
adc
push
rorl
aaa
push
les
cmp
lods
push
adc
popf
add
mov
xor
sbb
jno
mov
decl
add
pop
inc
push
pop
lret
mov
rcll
scas
mov
and
sbb
xchg
mov
add
cwtl
add
inc
jne
out
aas
adc
sub
outsb
push
mov
add
mov
les
adc
adc
dec
stos
test
add
jle
in
jno
cmp
test
and
add
xchg
ficoms
mov
cmp
les
inc
dec
xor
sti
icebp
xlat
es
mov
daa
xchg
mov
push
inc
jmpw
js
in
lods
inc
inc
clc
add
fstpt
mov
daa
sub
push
add
in
adc
les
add
das
int3
mov
pushf
pop
pop
push
mov
cwtl
cmp
jmp
into
mov
adc
lcall
daa
jp
daa
adc
add
nop
cs
jno
adc
add
and
sarb
int3
pop
sbb
inc
sarl
push
sahf
sti
add
jbe
cli
sar
or
inc
mov
cmp
lahf
jb
cs
xor
add
cwtl
roll
ret
std
jbe
push
std
adc
mulb
hlt
fwait
xor
sahf
test
arpl
mov
fcoml
jmp
and
fisttps
mov
pop
and
cwtl
pop
test
lret
dec
sub
sbb
xor
push
lea
arpl
add
xchg
js
xorl
push
xchg
dec
push
sbb
and
and
testl
add
add
outsb
test
and
jle
xlat
jo,pt
and
aam
lods
dec
adc
enter
mov
in
bound
cmc
je
movsb
ja
out
subb
dec
xor
pushf
sarb
mov
sub
ljmp
mov
add
add
sub
adc
sbb
pusha
rolw
cld
cltd
add
lods
mov
add
pop
out
outsb
or
test
testb
dec
add
and
add
addr16
or
add
iret
push
jge
dec
add
movb
jns
js
imul
shll
jne
and
rcrb
cmp
adc
add
mov
in
int3
inc
movsb
dec
mov
add
dec
cmp
stc
scas
enter
mov
shlb
mov
pop
sbb
dec
loope
fisttpl
mov
mov
fdivs
popf
pop
xchg
fidivrs
lret
add
das
xchg
cmp
dec
add
sti
je
add
add
ror
sahf
outsl
or
rcr
jo
jg
xor
into
shlb
add
add
test
pushf
lds
pop
test
cld
lcall
jnp
or
jo
xchg
inc
cmp
add
xor
pop
rorl
pusha
adc
lds
imul
push
add
fmull
add
adc
add
push
jae
add
jnp
add
cmp
int3
inc
cmp
bound
push
shrl
fadd
sub
pop
pop
cmp
lcall
add
xchg
scas
add
jmp
add
gs
cmc
inc
xlat
add
cmp
add
leave
xchg
sbb
add
or
fwait
jo
and
jmp
aam
sub
xlat
movsl
sub
push
add
jge
mov
xor
xor
mov
mov
fs
sub
dec
jl
or
aas
pop
dec
and
testl
orl
jmp
mov
lret
cmp
xor
add
adc
pop
pop
lds
sarl
mov
repz
add
mov
scas
add
xchg
movlps
rorb
mov
es
rcrl
out
out
mov
adc
fwait
jl
jae
sbb
mov
add
xchg
insl
sub
lret
cmpsb
add
inc
mov
cmpb
outsb
fdivrl
add
leave
jnp
ret
jns
pop
sbb
out
and
dec
outsl
jns
lcall
aam
addb
cmpb
sub
xor
jo
xchg
lea
repnz
pop
inc
aas
push
mov
mov
out
add
mov
call
adc
cmp
add
scas
mov
fwait
add
iret
add
mov
mov
add
xor
add
mov
or
add
pop
xorb
xchg
cmp
add
mov
insl
mov
inc
and
cmp
sbb
inc
cmp
dec
dec
mov
scas
cwtl
jbe
xchg
ds
cmpsb
fwait
mov
jne
test
pop
scas
mov
cmp
jle
std
addl
sub
dec
test
nop
xor
dec
lock
ficompl
mov
mov
sbb
andb
ficompl
rorl
lret
adc
push
xor
adc
or
pop
stos
add
sub
and
inc
mov
test
data16
lret
xor
sahf
rolb
into
add
addl
pop
shrl
mov
add
push
and
mov
ret
dec
cmp
push
push
jle
sbb
ss
add
daa
dec
testl
mov
adc
xlat
xchg
insl
add
inc
add
cs
dec
sub
int3
xor
mov
in
int
rolw
push
add
xor
or
push
add
aaa
add
mov
jp
push
sub
test
je
pushf
jge
cmp
push
jmp
add
xor
or
push
pop
push
add
add
add
mov
xlat
add
outsl
xchg
imul
data16
xchg
mov
add
push
mov
decl
fimull
inc
add
cmp
je
lret
jae
xchg
sub
roll
add
xchg
fs
jae
add
andb
and
sahf
add
xor
add
sub
in
xor
inc
pusha
inc
push
in
hlt
mov
ror
leave
inc
popf
mov
mov
out
mov
sub
jle
jnp
xchg
pop
add
rclb
add
stos
loope
and
fcoml
jnp
add
cmpsb
mov
dec
inc
fiadds
std
in
lods
mov
add
mov
rorb
repnz
sahf
add
out
in
push
outsl
loop
fs
shll
and
cmp
and
repz
sbb
cmp
mov
add
add
add
add
push
push
or
jae
inc
xlat
xor
and
push
push
sbb
jmp
push
cmpsl
lahf
cmp
outsl
add
lcall
cmpsb
in
push
dec
cs
or
int3
jg
test
or
push
add
inc
push
test
daa
fimuls
popa
ficoml
cmp
aad
scas
mov
add
adc
pushf
mov
sub
add
rcr
in
lea
add
push
stos
clc
pop
je
or
js
daa
push
adc
sbb
inc
jle
movsl
sub
add
dec
dec
sbb
fstps
fxch
add
fcoml
or
and
adc
popf
push
cmp
or
out
add
add
mov
xlat
mov
add
pop
add
rcl
shl
je
lock
push
add
mov
sub
jbe
out
and
add
jg
cmp
mov
push
add
aas
jle
cmp
jbe
cwtl
mov
sub
mov
pop
aas
sbb
and
jnp
add
add
psrld
imul
pusha
dec
lahf
add
lods
repnz
sbbb
in
push
imul
dec
add
dec
xchg
in
insb
jne
add
add
mov
dec
pop
addl
jmp
add
jb
in
lcall
sub
push
addr16
std
add
mov
rclb
xchg
mov
sarb
add
add
push
cmpsb
pop
in
loopne
pop
jecxz
loopne
daa
dec
int3
inc
dec
lahf
es
shlb
in
jp
adc
add
add
push
add
inc
adc
lcall
pop
adc
cmp
add
test
lds
pop
mov
adcb
ret
test
or
vmovaps
and
add
add
xchg
aas
push
xchg
dec
add
mov
adc
inc
or
add
sub
mov
jb
inc
xor
jbe
mov
push
dec
add
add
jl
loopne
mov
imul
ljmp
sub
or
jne
insb
shlb
push
bound
stos
xchg
test
sbb
leave
iret
pop
add
stc
or
andb
cmp
adc
daa
add
add
fcompl
mov
or
rorl
hlt
ljmp
dec
pop
add
mov
pushf
xchg
xor
push
test
xchg
out
movsb
pop
ficoms
lret
cltd
push
aaa
sbb
adc
into
jo
xchg
xchg
mov
sub
add
add
jo
popf
push
add
test
std
sbb
xor
add
lcall
add
test
cmp
inc
adc
push
sbb
mov
jo
inc
adc
test
popa
int3
add
push
add
loope
inc
xor
stos
jmp
lds
add
and
adcl
aad
sub
cmp
add
int
movsb
jge
jb
mov
push
inc
dec
pop
jns
lods
dec
test
and
add
js
test
add
add
sub
nop
mov
xor
cmp
add
xor
and
push
add
data16
mov
jb
cmp
sbb
in
cmp
add
sbb
out
or
jns
cmp
repnz
add
mov
add
sub
add
cltd
es
arpl
jle
sbb
xchg
pop
xchg
nop
loop
fsub
ror
add
in
sahf
mov
cld
cmp
sahf
mov
pop
sahf
daa
xor
dec
jle
das
dec
roll
ljmp
shrl
mov
dec
shrl
insb
mov
cmp
push
mov
or
adc
out
xchg
ret
xor
xchg
mov
in
xor
movsb
dec
out
push
mov
xorb
mov
add
jmp
lcall
xchg
add
loope
push
rolb
call
push
fwait
imul
xor
push
sub
xorb
add
add
add
inc
pop
leave
ret
mov
lods
sarl
add
aaa
or
xchg
xor
sahf
xor
add
ret
jl
mov
mov
in
pop
add
pop
pop
nop
int3
int
add
sbb
flds
mov
xor
in
in
insb
inc
mov
xchg
add
enter
sub
pop
mov
ficoms
and
add
out
add
ja
pop
add
add
push
into
daa
jle
jo
hlt
sbb
dec
subl
mov
add
xor
push
xchg
imul
incb
or
add
stc
or
cmp
fbld
xor
xor
mov
push
and
pushf
sub
xor
and
popa
mov
movl
add
push
pop
addl
rcr
xor
daa
aas
and
lahf
adc
lock
mov
data16
jns
sbb
jg
fiadds
addr16
cmp
sub
test
mov
stos
iret
inc
mov
add
pushf
stc
and
add
mov
add
push
xor
fcmovb
add
and
addr16
dec
loop
add
in
adc
movl
push
push
ret
cs
sub
dec
mov
out
xchg
xor
add
cmc
aad
fiaddl
out
jb
push
adc
lret
dec
jmp
and
mov
xorb
stc
cmp
iret
sarb
mov
pop
stc
into
jmp
push
popf
push
cli
jne
dec
mov
lds
mov
les
pop
inc
pop
bound
stos
cmp
adc
xor
enter
insl
test
mov
lret
dec
pop
add
xor
jae
mov
je
add
mov
or
add
shll
mov
pop
inc
hlt
add
cmp
stos
push
cli
and
jbe
xor
fcoml
imul
outsb
add
fsubrp
lcall
add
lds
popf
pop
in
sbb
add
dec
out
xchg
scas
or
icebp
inc
ds
xchg
push
popl
push
fadds
outsb
loope
sub
and
push
lret
add
arpl
addb
push
add
test
add
xor
push
filds
std
fs
cltd
pusha
adc
sub
sti
dec
pop
les
incl
cmc
push
out
jo
mov
mov
cmc
jo
add
and
fcompl
mov
jo
adcb
add
dec
add
out
jl
cs
loopne
cmpsb
ror
cmp
inc
test
in
es
ja
sarb
addr16
loop
out
test
les
jbe
inc
repnz
mov
mov
cli
sub
cmc
xchg
jno
add
adc
cltd
sbb
sub
add
cmpsl
popf
pop
mov
mov
inc
add
sbb
mov
add
inc
clc
out
dec
lret
js
jno
sbb
sahf
lea
inc
sbb
insl
sub
add
stc
in
ret
dec
cmpsb
pop
idivl
xor
fsubrl
or
pop
xchg
cmp
xchg
xor
add
aas
xorl
shll
mov
mov
pop
lcall
lahf
incl
sbb
mov
sub
icebp
sub
and
pop
sti
xchg
ss
fwait
add
aas
jg
call
xor
jle
nop
pop
xchg
inc
sub
inc
insl
movsb
aaa
bound
jg
mov
call
add
pop
roll
add
cld
lcall
shl
out
insb
xorb
xchg
test
loopne
pushf
movsb
aad
pop
adc
imul
add
daa
cmp
lds
add
movsl
mov
movsl
adc
jecxz
int
lea
add
add
push
lret
dec
add
jmp
cltd
call
jns
add
or
add
fadds
xor
cmpsl
call
and
cmp
push
add
daa
dec
call
push
outsl
and
call
jns
mov
cmp
mov
adc
and
nop
add
dec
dec
sub
mov
pusha
adc
je
mulb
jno
jl
push
add
and
cmp
dec
sub
add
in
pop
pop
sub
sbb
pop
fs
cli
push
sub
dec
aam
add
stos
int
sub
mov
xor
add
xchg
mov
insl
xchg
popa
xchg
inc
cmpb
add
inc
xchg
xor
imul
add
jg
ret
or
mov
jo
lods
mov
popa
clc
rol
outsb
ficompl
lahf
inc
add
aas
add
or
add
ret
lods
add
clc
cmpsb
jb
cmp
and
pushf
je
add
shlb
pushf
int3
add
das
aaa
mov
mov
mov
nop
push
cmp
fucom
add
add
adc
mov
xlat
mov
adc
xor
arpl
inc
fidivl
cmp
add
xchg
add
mov
add
dec
cmp
scas
jns
jge
add
lret
lds
fwait
jecxz
divl
pop
insb
add
fldl
les
or
push
xor
nop
test
fwait
mov
add
insb
inc
xor
fbstp
sbb
addr16
mov
sbb
add
xor
addl
out
add
pop
filds
xor
inc
loopne
rcrl
roll
enter
clc
stos
stos
pop
add
stos
lods
push
push
out
push
fadds
or
dec
adc
or
movntq
pop
add
jnp
lods
mov
ja
jo
loop
push
clc
mov
fists
loopne
aas
scas
mov
dec
fcmovbe
adc
popf
sub
adc
aas
dec
scas
fnstcw
pop
scas
push
cmp
add
lea
adc
xor
lahf
pop
inc
leave
sub
xbegin
in
shlb
inc
mov
add
cmp
loopne
add
sub
nop
jno
icebp
cmp
jns
xchg
mov
adc
fnstenv
xchg
or
xor
pusha
add
icebp
and
popf
add
push
add
add
sub
xchg
cmc
add
add
inc
xchg
xchg
inc
sbb
dec
add
sub
cmpsb
adc
test
stc
hlt
xchg
adc
les
jno
add
add
loope
scas
push
in
adc
mov
xlat
sahf
add
add
add
xchg
add
lret
int3
add
lcall
xor
xchg
jl
addl
inc
push
jne
or
push
out
repz
push
add
sbb
in
out
xchg
sub
add
pusha
jb
add
add
xor
jl
iret
std
jae
aad
xchg
jmp
mov
adc
loop
add
sub
outsb
lret
imul
sbb
jb
add
std
or
les
lret
add
sbb
add
add
mov
add
ja
rolb
pop
movsl
xor
jb
add
enter
mov
jge
sbb
fadd
add
std
mov
stc
inc
adc
push
or
int
mov
sbb
mov
dec
cmpsb
sub
call
adc
movsb
das
test
jg
mov
pop
add
shl
or
xor
adc
dec
adc
test
xlat
mov
gs
dec
fldt
cmc
insb
add
mov
adc
int
pop
add
push
sbb
in
pop
or
adc
mov
add
pop
add
sahf
cmp
mov
inc
push
js
mov
sbb
cld
and
aas
add
cmpsb
aad
push
add
out
mov
in
in
rcrb
xor
in
aas
insl
inc
imul
jnp
add
sbb
int3
roll
cmp
loop
mov
sbb
int3
add
mov
push
dec
adc
cmpsb
imul
pop
ja
test
fldt
ljmp
adc
jle
add
jl
mov
cmp
stos
idiv
fs
ret
cpuid
inc
cmp
sub
dec
push
jp
sub
mov
add
xor
push
pop
xor
push
test
mov
les
add
pop
xchg
inc
int3
xchg
lahf
mov
mov
icebp
popa
fidivs
cmpsb
clc
jg
test
xor
push
stc
mov
lods
pop
jb
cwtl
pop
into
addr16
push
cmc
aaa
or
add
add
rolb
sti
pop
repnz
mul
pop
clc
subb
sbb
add
or
sub
add
fcoms
add
mov
hlt
add
dec
sbbb
add
inc
les
xchg
pushf
add
mov
lock
mov
bound
mov
repz
pop
and
repnz
xchg
or
add
and
aas
lock
jnp
popa
xchg
in
in
mov
add
sub
pop
xchg
push
ret
flds
or
add
daa
insb
push
fucomi
push
xchg
xchg
ljmp
add
ds
mov
clc
fmuls
and
sub
in
leave
aam
xor
jge
add
data16
push
roll
and
add
cltd
or
xchg
ss
inc
lds
pop
dec
lods
inc
test
mov
dec
outsb
add
testb
fistl
cmp
xchg
sub
in
sbb
add
mov
sub
fwait
mov
cli
xor
push
fcmove
sub
testb
xchg
jb
push
jbe
insl
cmp
sub
outsl
push
test
mov
push
mov
fcmovbe
fbld
add
mov
fs
js
cmc
jl
add
inc
push
imul
filds
and
mov
mov
mov
or
stos
es
pop
push
icebp
outsl
lahf
pop
shll
mov
xchg
fwait
cld
sub
std
dec
add
cmp
daa
add
mov
cmp
push
insl
sbb
adcl
xchg
add
jbe
or
inc
add
inc
mov
cmp
clc
cmpsl
add
js
add
popf
jmp
xor
mov
push
add
mov
xchg
add
mov
insb
jg
mov
rolb
and
push
jp
add
sahf
adc
push
jae
leave
jno
cmp
test
mov
add
adc
lods
pop
add
sbb
hlt
add
mov
mov
sti
xor
scas
xchg
and
or
sub
mov
aas
mov
lods
loop
push
in
fists
lods
mov
idivb
inc
cli
add
stos
jno
mov
popf
lcall
inc
je
inc
sub
pop
sub
add
jnp
int
fsubrl
mov
popf
add
add
jmp
add
add
stc
inc
sub
int
mov
inc
push
mov
jbe
divl
jo
inc
jns
cwtl
decb
jmp
scas
mov
mov
bound
add
enter
add
and
add
pop
sub
insb
addr16
fs
bound
xor
or
xor
scas
sbb
sub
insl
mov
mov
mov
jl
sub
out
add
ljmp
lds
pushf
push
imul
pop
mov
add
std
idivl
insb
frstor
cmp
cmp
in
fdiv
and
lods
ret
jg
call
bound
and
xchg
mov
jnp
sarb
add
les
mov
or
xchg
add
addr16
sbb
mov
jg
bound
add
push
out
xor
mov
pusha
punpcklwd
jno
insl
pusha
outsl
mov
add
add
push
insl
add
in
add
mov
pop
les
pop
cmc
push
mov
cmp
jbe
insl
cmp
jne
add
and
or
adc
fcompl
mov
add
cltd
push
sub
mov
lcall
lock
addr16
ljmp
dec
push
clc
ljmp
sbb
push
orb
push
cmpsl
lds
loop
ret
fs
jge
sbb
mov
cltd
lds
jae
les
repnz
out
add
mov
subl
lcall
in
mov
cmpsb
add
mov
repz
sbb
jge
pop
cmp
cmp
imul
push
push
out
js
add
add
add
sub
add
pop
jb
xchg
imul
or
pushf
mov
cmc
cld
bound
xchg
and
push
dec
add
lods
aaa
enter
xchg
add
cmp
add
cmpsl
sbb
add
mov
push
lret
outsl
add
lods
add
mov
add
pop
add
jle
adc
add
jge
adc
push
add
fwait
pusha
mov
push
pop
mov
xchg
mov
jge
add
push
sub
cmpsl
in
sbb
cltd
add
fsubs
mov
nop
leave
rcrl
loopne
sub
sub
inc
sub
pop
cmp
sti
and
aaa
aad
outsb
loopne
mov
iret
inc
fstpl
pop
mov
push
adc
js
dec
xchg
bound
and
iret
lds
mov
scas
jge
insb
add
les
mov
push
pop
andl
lods
mov
aam
xchg
add
mov
add
push
addb
scas
mov
push
lahf
add
repnz
dec
lea
test
mov
adc
pop
dec
out
mov
call
add
push
and
sbb
pop
dec
add
and
add
add
in
xor
arpl
and
into
sub
add
popf
add
jae
mov
ds
add
shlb
adc
push
mov
pop
add
mov
jo
add
mov
cld
pcmpeqw
mov
stc
sub
pop
push
sti
add
push
mov
je
cmp
lahf
jmp
pushf
into
add
jae
pop
xlat
mov
push
or
ja
aad
fadds
xor
jge
ret
cmp
roll
decb
adc
or
daa
inc
bound
aam
add
sbb
jnp
clc
mov
push
and
daa
adc
sub
jge
inc
or
sbb
jp
adc
mov
fldt
repnz
addb
cmpsl
push
add
mov
cmp
add
loopne
dec
add
pop
add
mov
and
scas
icebp
jnp
pop
dec
cld
push
out
push
movsl
cwtl
ds
inc
mov
and
mov
sub
xor
daa
and
mov
pop
pop
nop
inc
insl
mov
push
lret
add
add
mov
add
loop
leave
ja
sub
xor
sub
repz
mov
xor
xchg
pop
jp
xchg
addl
push
adc
hlt
cli
mov
std
rcrb
push
add
lea
xchg
fdivrp
mov
pop
mov
shll
add
adc
sarl
lods
out
inc
jg
push
cmp
fdivs
cmc
xor
fcomi
pop
add
xchg
sti
test
je
mov
add
push
popa
lds
mov
shll
rorl
out
add
add
adc
xchg
pop
and
push
mov
lds
xlat
sarb
cmc
fs
rcrl
add
mov
out
dec
jp
mov
subb
addr16
add
add
mov
js
jbe
jns
dec
cmp
jno
cld
out
inc
lock
add
iret
int
xchg
aaa
aam
pop
mov
mov
gs
rol
adc
inc
ljmp
push
out
mov
dec
sarl
dec
sarb
dec
test
test
xor
dec
push
sahf
add
imul
push
inc
add
and
add
lea
adc
add
mov
fnsave
sahf
push
pop
mov
adc
loope
pop
movl
pop
data16
sbb
addb
push
mov
scas
ja
mov
mov
or
or
xchg
inc
add
das
inc
cmp
push
mov
xor
test
and
data16
addr16
pop
mov
or
fwait
stos
jns
cmc
adc
add
pop
lcall
in
push
adc
add
or
mov
test
push
xor
mov
mov
xchg
repz
inc
mov
or
xor
insl
jns
jnp
mov
push
movsb
mov
cmp
jae
inc
out
imul
mov
aad
ss
jnp
add
and
add
test
lahf
js
clc
add
xchg
jo
add
sbbl
pop
iret
cmp
das
ja
sbb
pop
popa
fstps
inc
and
fisubl
mov
and
add
and
in
cmp
cmp
movb
xor
add
push
dec
jo
lea
cmp
leave
les
add
add
out
adc
add
push
loope
sub
inc
fldenv
push
add
scas
mov
lcall
icebp
lods
nop
adc
add
pushf
and
int
pusha
add
in
mov
and
push
add
add
sub
js
pop
xor
gs
mov
xchg
push
outsl
pop
out
push
or
cld
mov
pop
js
pop
mov
test
imul
bound
xchg
outsb
add
movsl
inc
add
mov
jl
push
repz
jb
push
dec
adc
inc
es
add
dec
adc
into
sbb
iret
stc
or
call
imul
mov
mov
sub
fiaddl
push
cmc
sub
and
push
imul
pop
jle
pop
and
in
and
cmpsl
daa
adc
pop
movsb
cmc
add
ljmp
dec
sldt
pushf
loopne
xchg
sbb
push
add
hlt
lahf
add
sub
std
test
cmp
int3
push
mov
lds
out
fiaddl
fcoms
cmpsl
jmp
jp
adc
xor
add
ds
mov
mov
aas
dec
into
sub
sbb
dec
add
add
sbb
inc
mov
sbb
stos
add
inc
add
add
roll
sbb
lock
call
push
add
es
bound
add
cmp
test
es
mov
dec
add
loope
add
dec
mov
out
bound
jle
pop
fdivrs
cmpsb
flds
or
cmpsb
dec
inc
in
aad
add
ret
jb
or
jp
sbb
sub
in
or
add
sub
enter
inc
push
mov
pop
scas
xor
jl
leave
movsl
stc
divb
mov
dec
push
add
mov
aad
stos
leave
mov
int3
xchg
mov
insl
scas
movups
lods
pushf
jle
and
sbb
out
xor
push
mov
push
aaa
sub
lea
test
jmp
scas
add
add
mov
jo
jae
adc
popa
les
vmovlps
add
shlb
push
imul
shrb
mov
cltd
push
int
add
stos
inc
or
sub
pop
outsl
xor
imul
enter
fs
sub
xchg
pop
int3
cli
cmp
add
outsl
das
jle
mov
push
pop
jo
enter
dec
ds
nop
push
push
arpl
pusha
sbb
push
shl
jns
jo
pushf
mov
push
aad
sbb
popa
xor
xchg
insl
inc
dec
add
test
mov
jne
and
jle
dec
push
dec
rcrl
outsb
add
and
out
jae
es
and
and
add
sarb
js
add
lds
imul
ficoms
or
add
icebp
outsb
add
pop
arpl
sbb
mov
mov
add
mov
sahf
pop
add
add
add
add
daa
dec
js
push
cmp
mov
and
outsl
aas
push
fildl
push
mov
cltd
daa
lea
outsb
lret
pop
dec
mov
test
enter
int3
xchg
pop
shlb
test
lcall
jmp
pop
fldl
add
mulb
adc
roll
mov
mov
add
jg
add
lods
enter
mov
addr16
fwait
mov
dec
or
scas
push
mov
lods
mov
gs
xor
sbb
pop
or
and
mov
sbb
add
aam
push
inc
pop
loopne
mov
adc
aaa
in
sti
or
mov
rcrb
pop
cs
xchg
shrl
in
std
cmp
dec
mov
add
fidivrs
and
out
pop
dec
xor
jno
add
rcrl
outsb
pushf
adc
movsl
rclb
push
cmc
push
xor
pushf
pop
sbb
inc
push
outsb
jbe
inc
popf
push
add
add
stos
jo
scas
push
je
and
loop
and
add
div
out
adc
fstps
inc
in
jns
pop
push
lretw
jbe
add
stos
add
iret
ror
mov
sahf
adc
sub
ret
icebp
or
dec
popf
add
cld
sbb
mov
andb
inc
add
aas
out
pop
mov
jae
add
xor
daa
push
jle
xchg
repnz
xchg
mov
pop
xor
add
mov
fwait
popf
add
in
shr
cmp
or
add
test
in
sbb
add
das
add
loop
add
aad
xchg
shll
sbb
mov
push
bound
add
ret
jbe
add
dec
sbb
cwtl
roll
cmp
daa
mov
fnsave
mov
cwtl
jmp
stc
insb
mov
mov
sahf
test
outsb
mov
arpl
add
fnstsw
add
stc
gs
inc
push
sub
inc
lret
inc
cmp
adc
movsb
mov
xlat
mov
jl
pushf
add
add
icebp
xlat
mov
pop
fdivl
sti
mov
out
repnz
push
bound
movsl
or
add
jecxz
lret
rcrb
popa
mov
daa
aad
xor
sub
xor
lds
and
sub
faddl
add
rclb
stos
imul
mov
sbb
bound
add
test
mov
or
popa
jns
add
dec
in
and
push
lcall
cmp
scas
add
push
sbb
fwait
xlat
mov
and
and
add
imul
imul
pop
popl
in
add
or
mov
jmp
faddl
movsb
mov
call
sti
and
or
popl
sbb
or
fld1
fisttpll
mov
pop
push
hlt
popa
xchg
cmpsl
xlat
jp
jb
jl
imul
inc
cmp
testl
test
inc
and
xchg
aam
mov
pop
add
sub
sbb
add
in
inc
pop
xor
mov
add
ljmp
add
stc
fildll
or
dec
inc
aas
jecxz
daa
add
mov
pop
loopne
jb
pop
mov
xchg
inc
ljmp
dec
dec
add
pop
sbb
sbb
add
gs
pop
xchg
mov
sbb
add
lods
mov
lock
pop
jp
mov
dec
lea
mov
push
fwait
test
insb
out
out
lcall
pop
xchg
cmp
bound
clc
jnp
add
ret
es
mov
xchg
cltd
lea
jmp
jns
jl
mov
outsl
xor
jl
adc
outsl
mov
mov
push
cld
movsl
dec
mov
sbb
shrb
mov
sbb
xchg
scas
pop
jnp
adc
dec
add
subb
jns
sarl
movsb
insb
adc
add
mov
and
scas
cmc
dec
adc
dec
adc
jmp
cmpsl
mov
inc
jae
aam
hlt
add
push
jmp
dec
mov
jno
imul
add
mov
faddl
mov
pusha
out
pop
pusha
addr16
fbstp
add
in
add
jbe
add
lahf
push
dec
pop
pop
add
test
dec
mov
add
fidivl
adc
jbe
rcll
pop
cmc
repz
rcrb
pop
std
xchg
sbb
cmp
ljmp
mov
shl
sahf
inc
add
pop
add
pop
jmp
iret
push
lahf
lcall
xlat
sub
jmp
enter
mov
xchg
add
test
enter
stc
jecxz
add
add
jp
jns
and
roll
fildl
push
roll
push
out
mov
aas
inc
mov
xor
stc
add
jl
sub
sub
adc
add
jbe
mov
add
out
imul
mov
jmp
sbb
pop
pop
cmp
jmp
xchg
mov
roll
negl
mov
or
dec
imul
cltd
mov
xchg
mov
and
xchg
cmp
in
jecxz
aas
or
test
ud1
xchg
xor
repz
xchg
jnp,pn
mov
xchg
repz
into
or
xor
nop
dec
xchg
jns
sub
xor
dec
iret
add
shrl
add
iret
idivl
xchg
xchg
xchg
or
inc
xor
test
wbinvd
cmpsl
add
cmpsl
jmp
fisttpll
call
jno
push
add
dec
fldcw
inc
xchg
dec
nop
daa
iret
jns
shll
mov
xchg
fistpl
mov
imul
add
cmp
shll
std
cmpl
lret
subl
sub
test
add
cmp
add
push
lret
pop
add
jl
or
subb
inc
add
cmp
arpl
cmpsl
jnp
add
mov
jmp
aam
xlat
inc
scas
hlt
call
sarl
ljmp
cltd
adc
shlb
add
loop
icebp
dec
add
add
fxch
arpl
insl
dec
es
mov
push
xchg
add
sbb
fidivs
fbstp
test
outsl
adc
in
cmpsl
jb
dec
mov
jp
into
cmpsl
arpl
mov
insl
inc
xchg
inc
inc
inc
mov
add
inc
xchg
add
iret
scas
leave
add
or
push
loopne
lcall
add
and
or
in
or
sbb
mov
std
xchg
adc
mov
and
cwtl
stos
rclb
fnstcw
rorl
std
sti
test
add
mov
jns
mov
inc
cmp
lea
jnp
mov
incb
aad
into
xlat
inc
pop
repnz
or
cmpsb
out
fldt
mov
stos
lret
add
adc
pop
add
test
mov
iret
aad
add
stos
xchg
out
adc
adc
stos
cmp
movsl
add
scas
jb
test
inc
icebp
fwait
mov
mov
add
xchg
mov
add
add
push
mov
out
fincstp
add
inc
add
sbb
mov
xchg
sbb
mov
sarl
pop
jmp
jno
sub
add
cmp
add
mov
lods
add
adc
stos
sub
movsb
loopne
les
pop
cli
nop
add
repnz
add
jecxz
jl
jae
sub
xchg
add
mov
hlt
mov
in
jmp
ret
pop
pop
repz
xchg
inc
scas
add
sti
add
into
out
aas
xchg
add
xchg
es
push
shl
cmpsb
jge
addr16
pop
imul
jp
popf
add
pushl
add
mov
add
add
pop
lds
xchg
or
aad
arpl
cmovns
xorl
cmpsl
or
or
add
sub
add
mov
pop
add
add
sub
mov
xchg
sub
lret
mov
inc
loop
push
ss
xchg
adc
or
cs
mov
sbb
cmp
aas
ja
add
sbbl
fnsave
cmc
or
fimull
fadds
loope
push
pop
mov
push
aas
mov
pop
jecxz
adc
inc
ljmp
ss
sbb
mov
imul
mov
jae
hlt
subb
cmp
popf
pop
adc
sbb
enter
iret
call
push
mov
arpl
mov
cmp
add
push
jmp
add
cmp
jae
ja
xlat
addb
add
mov
jns
xchg
mov
dec
sti
jnp
xchg
xchg
pusha
loope
in
lods
sahf
mov
jnp
jns
repnz
addb
mov
aam
xchg
add
sub
add
subb
add
nop
ds
xchg
ss
fistpll
or
inc
inc
rcrl
pop
push
add
lret
mov
insb
fildll
mov
ss
xlat
jae
insb
cmpsl
push
jp
push
and
ljmp
jle
loop
jns
mov
mov
call
icebp
pop
popa
pusha
and
mov
add
pushf
cmpsl
fucom
inc
scas
add
nop
aaa
pusha
add
mov
repnz
in
or
popf
call
cmp
pushf
jbe
mov
leave
and
xchg
scas
adc
cmp
add
or
inc
sub
int
fwait
add
and
push
std
xchg
movsl
push
mov
fxam
add
shrl
jg
adc
and
and
jb
xor
xor
or
sub
sub
adc
cmp
push
or
xchg
pop
mov
xor
add
jb
movl
add
nop
sarl
mov
mov
xchg
add
sbb
inc
add
mov
cmpsl
andb
sti
sbb
cs
scas
lret
clc
or
dec
popf
add
xchg
stos
mov
add
mov
jecxz
sarl
fcoml
push
sbb
lods
push
add
fistl
and
iret
scas
movsl
jo
add
jno
mov
lock
sbb
in
sbb
rolb
ljmp
lods
sub
add
add
and
movsb
sbb
push
mov
lret
daa
frstor
xor
mov
push
adc
insb
add
add
add
aas
add
xchg
dec
mov
dec
add
add
jnp
cmp
or
lret
fnstenv
and
and
inc
add
xlat
mov
add
ljmp
sub
dec
daa
shll
daa
pop
add
pop
add
mov
or
xchg
xchg
jno
pop
pop
stc
add
xchg
or
add
gs
mov
adc
aam
sub
push
adc
loop
loop
mov
ja
add
lcall
ljmp
stc
shrb
fdecstp
dec
es
xchg
lret
lock
jo
das
ficoms
jp
imul
add
xor
fidivrs
cwtl
jp
shll
and
mov
sbb
and
pop
and
sub
push
cmp
jne
mov
leave
mov
push
fisubl
and
pop
pop
mov
pusha
roll
ss
cmp
jns
add
add
outsl
or
movsl
sub
mov
lcall
mov
pop
ret
xor
xor
gs
mov
out
jae
sub
cs
dec
movsl
adc
aad
nop
scas
daa
pusha
mov
add
loope
pop
cmp
mov
inc
inc
add
push
or
xchg
add
or
scas
aaa
inc
je
loop
jno
xchg
dec
int3
andl
or
adc
cmpsb
push
or
dec
mov
lods
adc
cmp
mov
cvttps2pi
cmp
xchg
add
pop
fwait
subl
cmp
loop
outsl
xchg
add
push
add
repnz
adc
mov
lods
fs
scas
pop
cmp
movsb
xchg
or
fwait
fists
cs
cmp
jb
pop
xchg
adc
loopne
call
test
fcmovnb
adcl
xchg
ss
cltd
and
add
push
jecxz
xchg
sub
int3
adc
lods
xchg
sahf
xchg
aas
lea
dec
call
js
pop
imul
add
add
adc
and
fmuls
mov
sub
cmp
sub
cmp
mov
adc
imul
sbb
mov
mov
add
xchg
aam
push
add
add
mov
sbb
call
cmp
dec
fstps
sbb
roll
or
mov
sbb
out
sbb
mov
and
out
mov
or
or
mov
mov
cwtl
add
sbb
adc
ss
nop
xlat
scas
aam
or
push
iret
cmpsb
aad
mov
stc
xor
xor
mov
xor
add
scas
fwait
jmp
add
add
test
imul
jl
rcll
cmp
push
mov
leave
roll
jnp
fcom
push
mov
sub
dec
jg
iret
add
std
gs
mov
dec
addb
faddl
insl
and
es
cld
push
test
pop
dec
pop
test
test
pop
cwtl
cwtl
dec
add
add
imul
pop
push
add
add
ds
push
aad
push
filds
mov
stc
push
xor
stc
btr
dec
xchg
mov
cmp
cmpsl
add
add
sarb
fiadds
xchg
inc
xor
add
mov
pop
jbe
xor
sub
sbb
js
mov
lahf
mov
and
mov
pop
stc
inc
add
dec
pushf
cltd
ret
add
movsb
loop
dec
pop
fistl
fwait
mov
stos
rcrl
sub
fdiv
jmp
add
leave
dec
sbb
pop
or
outsl
popf
and
hlt
push
or
mov
rclb
sub
pushf
out
ret
jmp
add
add
add
sub
xchg
mov
jns
mov
sbb
push
add
xor
test
scas
push
cltd
or
pop
popa
sarw
add
ret
rcrl
push
add
cmc
cmpsb
mov
or
jg
add
sub
dec
sub
add
sti
mov
mov
or
jbe
add
dec
mov
cmc
mov
test
ficoms
add
data16
out
or
mov
sub
mov
add
repnz
hlt
dec
pop
sub
jne
add
out
icebp
dec
inc
sbb
jae
sub
xchg
mov
dec
add
xorl
mov
push
rcll
pop
repz
shrl
push
and
jne
sti
pop
mov
push
inc
sub
jns
add
rolb
movsl
or
das
push
adc
and
xchg
inc
lret
cli
inc
add
mov
das
sub
jnp
stos
rcl
faddp
add
mov
jg
pop
imul
push
push
jmp
test
mov
cmp
les
stc
addb
out
lret
push
dec
lahf
adc
and
xor
or
sbb
popa
out
xor
dec
sub
stos
pop
add
sub
jne
pop
or
je
hlt
insl
add
sub
add
cmp
mov
jg
mov
xor
stos
je
mov
mov
mov
pop
call
gs
pop
add
cs
push
xlat
or
jbe
or
pusha
insb
shlb
test
imul
push
test
mov
xchg
add
call
enter
in
or
out
pop
and
xchg
adc
stc
inc
mov
mov
daa
jg
rcrb
loope
mov
jo
faddl
pop
add
dec
icebp
aas
jle
addr16
adc
and
loop
mov
out
pop
pop
pop
aas
pop
movsb
testl
dec
das
call
xor
in
or
xchg
rcr
lea
stos
cli
cld
cmp
pop
xchg
std
les
inc
test
nop
in
je
out
dec
xchg
in
pop
pusha
out
insb
mov
es
cmpsl
mov
mov
repnz
jmp
outsb
ret
nop
loopne
fsubs
add
scas
ljmp
add
add
add
outsl
xchg
add
sub
enter
das
dec
movsl
push
xchg
mov
add
and
arpl
add
and
cs
push
xor
out
pop
icebp
xchg
inc
mov
xlat
fsts
xchg
push
outsl
dec
cs
aaa
mov
push
xlat
sti
mov
mov
mov
lahf
add
xchg
shlb
fdivrl
popa
add
mov
in
repz
add
pop
add
cmp
outsb
add
and
fdivl
add
mov
jne
cmpsb
sub
xor
add
test
push
add
insl
xor
mov
or
sub
and
or
je
adc
xchg
cmpsb
xchg
cmp
scas
fidivrs
scas
aam
add
in
add
cmc
inc
jg
inc
and
adc
out
mov
add
cmpsl
mov
or
jle
dec
cmp
fucomip
inc
add
clc
rcrl
xchg
and
add
add
fmulp
adc
out
test
arpl
cmp
mov
lcall
in
add
pop
mov
mov
clc
fiaddl
frstor
mov
sbb
fnstcw
add
frstpm(287
outsb
xor
add
pop
xor
fists
jmp
loopne
push
or
aad
add
mov
add
stos
add
jno
filds
inc
outsb
scas
pop
flds
enter
into
push
ds
sbb
ss
add
push
imul
das
loop
mov
out
dec
mov
mov
decl
and
adc
jl
sbb
dec
pop
cmp
xor
jmp
pop
fiaddl
jne
or
dec
xor
in
and
dec
das
mov
sti
inc
and
cld
push
adc
add
lret
sbb
cmp
add
out
add
add
icebp
out
test
xor
incl
inc
mov
cwtl
add
sub
jle
push
add
cwtl
in
add
pop
fstpt
or
mov
out
mov
pop
and
inc
add
movsl
dec
ret
add
sbb
xor
xchg
cmp
in
add
andl
dec
sub
adc
inc
push
outsb
pop
lods
cmpsb
cs
jmp
mov
add
int3
sbb
sbb
gs
push
push
cmc
and
lahf
hlt
xchg
jg
add
cltd
in
xlat
jg
lret
dec
xchg
mov
sub
dec
add
add
ja
mov
mov
pop
mov
mov
cltd
in
decl
mov
fdivr
xchg
pop
push
addb
or
arpl
mov
add
xchg
rolb
inc
mov
rclb
popf
bound
lods
dec
cmp
add
mov
jmp
or
fs
mov
add
cmp
sub
mov
loope
cmp
ds
add
outsb
add
jl
movsb
lret
pop
dec
cmc
mov
std
lods
push
mov
push
add
cli
adc
scas
orl
stc
cmpsb
mov
mov
test
addr16
lret
lods
imull
std
xchg
mov
pop
mov
fmul
movsb
iret
pop
or
mov
add
dec
cmp
add
aaa
add
mov
xor
pop
test
jge
pop
jl
and
add
jge
mov
inc
les
mov
dec
mov
inc
fadd
cmc
movsl
push
jg
cwtl
mov
aaa
jg
popa
pop
add
dec
arpl
fs
add
int3
in
mov
xlat
add
jg
data16
mov
add
js
cltd
dec
cltd
add
gs
adc
adc
addr16
pop
push
sub
cmp
mov
xor
pop
stc
push
sahf
repnz
fisubs
inc
je
fsubp
mov
push
out
cmp
jo
lret
sbb
adc
add
lret
cmp
adc
in
add
add
cwtl
loope
push
dec
cwtl
add
pop
xchg
jne
scas
xchg
lods
jae
rolb
fdiv
xor
cmpsb
loope
add
sub
sbb
out
fiadds
or
xchg
push
jp
pop
stos
adc
jge
mov
and
inc
and
xor
mov
jae
push
movsl
daa
dec
mov
ficoml
push
add
push
add
out
adc
scas
push
adcl
mov
cmp
mov
add
mov
loope
inc
jl
sbb
es
add
xchg
in
out
lret
mov
add
imulb
iret
clc
icebp
imul
add
and
test
add
or
mov
insl
fcomip
pop
add
out
add
stos
dec
cwtl
lret
mov
nop
jnp
dec
mov
lcall
jnp
addr16
shll
mov
and
test
aad
ret
adc
lahf
dec
test
dec
les
sub
in
sub
sub
stc
pop
rclb
xchg
out
push
xchg
roll
jl
das
dec
rcr
shlb
lahf
add
popf
sub
add
add
mov
adc
or
add
sbb
ljmp
les
test
add
icebp
insb
js
add
add
mov
and
pop
push
das
adc
adc
lock
mov
pop
mov
add
pop
adc
add
bnd
adc
scas
data16
aad
jbe
add
xor
insb
ljmp
mov
imul
rcl
add
adc
cmpsl
sbb
inc
ret
mov
mov
add
out
and
push
scas
sarl
sarb
into
ficompl
cmpsl
stc
cmc
inc
rcl
adc
dec
in
aam
idiv
movl
fcompl
jg
out
add
fdivrs
imul
xchg
add
add
in
add
mulb
ss
add
pop
or
jp
xchg
icebp
add
test
add
add
mov
add
cltd
xor
cmp
jg
test
mov
push
imul
add
jge
xchg
stos
jecxz
shl
dec
pop
push
scas
cmp
insb
add
in
add
ret
jmp
push
add
or
push
lock
jne
movsl
add
sbb
insb
and
inc
pop
fdivs
add
data16
add
outsb
cwtl
lock
cli
cs
call
sbb
mov
cmpsl
xor
push
loope
cltd
pop
cmp
add
das
bound
add
test
lock
or
add
out
fsubrp
mov
shlb
sti
dec
mov
in
imul
sbb
add
into
sbb
xchg
xchg
and
outsl
fnsave
addb
out
icebp
lods
cmp
jne
pop
enter
lahf
adc
push
inc
hlt
add
sbb
jns
hlt
push
hlt
and
add
in
cmp
sbb
xchg
sbb
out
add
add
aad
ja
cld
cli
fldl
cmpsl
adc
fists
scas
or
pusha
push
dec
and
mov
das
popa
dec
nop
jb
inc
xor
or
or
sbb
gs
jp
stc
cwtl
add
add
push
into
pop
push
add
push
ja
add
push
mov
js
jg
pop
test
js
sahf
add
imul
add
sbb
and
enter
and
sbb
call
scas
dec
mov
mov
test
bound
xor
cmpsb
jne
add
out
int
push
into
ret
xchg
fbstp
jno
data16
les
xchg
lods
bound
xchg
xor
aam
cwtl
add
adc
push
mov
fidivl
scas
sti
jp
mov
cmp
push
inc
fs
xor
and
mov
jle
out
pop
add
push
pop
imul
adc
cmc
fbstp
nop
sbb
mov
mov
lock
or
fwait
scas
adc
adc
add
or
inc
cmp
sti
cmp
int3
lock
push
inc
mov
les
adc
cmp
ss
add
adc
pop
out
add
imul
cmp
sbb
leave
lahf
test
mov
enter
cld
and
xchg
gs
jne
pop
popa
pop
mov
inc
jno
int
xor
stos
filds
movsb
xchg
pop
xchg
loop
push
loop
stos
je
add
pop
out
add
xchg
push
scas
in
mov
mov
std
and
lcall
lock
lea
daa
pop
imul
aas
add
add
adc
dec
add
mov
add
movsl
loopne
mov
jecxz
sarl
add
jp
mov
outsl
test
add
mov
push
pop
xchg
push
add
outsb
adc
fisttpll
bound
adc
les
sub
hlt
or
cmc
add
adc
and
sbbl
add
adc
incb
aas
aad
mov
mov
jo
ds
add
add
add
mov
mov
mov
je
push
add
cld
pop
inc
mov
jle
cmp
mov
or
push
lret
jg
repz
fs
sub
or
or
mov
fsts
push
cwtl
lret
fimuls
push
xchg
sti
dec
out
add
push
and
jle
pop
inc
mov
jne
mov
in
jo
xchg
and
jecxz
stc
xchg
push
add
fwait
jae
jae
cltd
outsb
gs
notb
add
or
push
jp
add
add
push
add
mov
add
in
xor
mov
or
lahf
dec
pop
int3
xchg
in
xor
imul
add
sahf
rclb
rorb
mov
add
outsb
scas
testb
add
in
mov
insb
movsb
imul
add
jl
out
adc
repnz
add
xchg
lods
and
test
ss
pop
popa
in
mov
cld
add
and
xchg
push
nop
add
cld
inc
or
xlat
lds
or
cmp
add
adc
and
mov
jmp
xor
jl
mov
add
fildl
add
add
or
imul
add
jmp
xchg
testb
add
cmpsl
push
cmpsl
js
cmp
mov
andb
xchg
mov
push
mov
add
push
pop
insb
imul
mov
pop
cmpsb
add
fisttps
jp
mov
mov
jo
repnz
add
dec
xor
push
in
xchg
sub
xchg
fiaddl
pop
fadds
adc
xor
sbb
or
es
push
iret
push
lret
enter
cli
outsb
sub
popl
subb
ja
add
sub
add
inc
loope
mov
and
xchg
jmp
scas
dec
cmpsl
ja
add
ud1
pop
or
aad
int
dec
push
cld
call
je
inc
insl
repz
in
sub
add
in
std
sbb
mov
inc
inc
stc
add
out
jmp
mov
mov
aas
call
ljmp
insb
mov
and
add
pop
je
lret
lock
xchg
mov
xor
lret
inc
add
sbb
xorb
or
pop
xchg
xlat
sbb
mov
xlat
cli
push
pushf
inc
fs
clc
adc
mov
push
clc
shll
xlat
inc
loopne
add
lods
pop
add
roll
mov
aam
dec
test
mov
jnp
aas
loopne
and
rolb
out
pop
scas
movsl
jb
les
mov
jne
roll
jbe
or
pop
dec
or
push
adc
add
pushf
subb
add
loopne
ficoms
or
add
xchg
dec
add
inc
add
sahf
jbe
stc
call
jge
jmp
pop
mov
ret
icebp
inc
mov
je
lock
jl
add
cmpsb
jno
test
outsl
ljmp
push
push
out
adc
loop
or
stos
jns
mov
xor
cwtl
add
lea
xor
push
push
int
xchg
and
jp
pushl
add
cwtl
js
gs
xor
push
xlat
push
push
scas
mov
jo
sbb
fld
sbb
shrl
pop
mov
xlat
aas
fs
mov
xchg
add
xchg
sub
or
std
call
lcall
pushf
sbb
ja
icebp
add
jle
push
xchg
insb
add
shrb
add
add
mov
xchg
and
mov
push
jecxz
inc
cmp
xor
xchg
test
dec
add
lret
pop
dec
add
xchg
add
cmp
jp
xchg
jo
scas
add
pusha
cmp
mov
push
adc
pushf
dec
ds
dec
jmp
imul
push
imul
xchg
cmp
daa
filds
add
cvtps2pi
xor
sbb
inc
adc
pop
or
aad
dec
leave
fcmovb
sar
and
or
fidivl
add
cwtl
add
lret
adc
les
xchg
or
inc
add
lea
xlat
mov
insb
aam
stc
repnz
loop
xchg
sub
test
insb
add
cmp
add
add
pop
dec
inc
mov
add
into
lahf
push
adc
sbb
xor
mov
jo
cmp
movsl
inc
jp
xor
hlt
add
mov
stc
dec
adc
xchg
out
sahf
push
jo
movsb
out
dec
adc
push
xor
ret
and
lahf
mov
lcall
fistpll
iret
add
add
aas
rolb
jge
bound
cwtl
shll
xor
add
shrl
xchg
shlb
cmpsl
add
mov
clc
sub
cmc
sbb
shlb
xor
jnp
test
inc
fucom
out
std
inc
add
and
sub
and
push
mov
ficoml
xchg
cmp
mov
push
ljmp
cmp
cmp
push
mov
pop
arpl
cltd
dec
ret
pop
ds
add
jecxz
mov
subl
xor
addl
jg
int3
sub
adc
push
add
xor
add
insl
jl
imul
stc
lret
push
jb
inc
inc
lret
ror
push
ret
add
arpl
xlat
loope
out
push
mov
lods
and
out
filds
dec
jl
bound
lods
inc
jge
add
xchg
mov
sbb
xchg
les
fdivl
add
push
or
leave
mov
pop
xor
add
insb
add
movl
xchg
jge
loope
cmpsl
nop
test
dec
fldl
loope
fldenv
add
pop
lds
lret
or
mov
adc
mov
or
test
jns
mov
add
dec
gs
and
jbe
xchg
cmp
ret
js
cmp
jl
aas
xchg
lods
xlat
mov
mov
mov
xchg
pop
push
adc
sbb
add
fisubrs
push
mov
cmp
add
test
lcall
outsb
add
dec
add
addr16
dec
and
mov
das
add
cmp
fcmovu
add
dec
pop
xchg
mov
loopne
add
cld
sub
sbb
in
shr
stos
xchg
xchg
and
inc
aaa
add
test
pop
stos
sbb
notl
and
mov
data16
add
add
aas
mov
add
scas
mov
fstl
adc
jl
fs
jl
add
out
xor
add
leave
out
out
add
push
rcr
rep
or
mov
add
push
lods
fs
loope
dec
iret
jo
cmp
add
notb
mov
aam
sbb
jns
js
into
iret
repz
inc
pop
push
cmp
pop
add
inc
mov
mov
adc
or
leave
add
add
mov
loop
adc
rcrl
lcall
jne
add
mov
cli
sbb
addr16
pop
std
mov
add
ljmp
loop
dec
mov
test
xor
lods
add
rcrl
das
inc
js
xor
repz
sar
cmpsl
add
lahf
or
cmpsb
add
push
mov
add
pusha
push
push
push
repz
mov
jb
call
test
push
add
pop
mov
add
add
mov
lahf
mov
mov
jge
fildl
dec
ljmp
or
leave
adc
inc
fidivrl
and
mov
test
cs
shlb
dec
es
pushf
mov
mov
cmp
mov
sahf
nop
sub
sbb
das
flds
add
pop
add
add
add
test
in
add
sbb
inc
sbb
add
add
xchg
loop
movsl
clc
jmp
pushf
add
cmpsb
cmp
push
in
push
or
fs
sub
xchg
push
rorl
mov
in
test
and
scas
fdiv
add
mov
lods
pop
idivl
cmp
mov
cmpsb
mov
fs
add
mov
xchg
lods
inc
mov
out
sbb
adc
add
fists
sub
dec
sbb
pop
in
loop
add
mov
xlat
jmp
imul
outsl
pop
push
add
mov
scas
xor
and
add
gs
pop
inc
cli
cmp
add
xchg
add
into
popa
pusha
push
add
pop
add
add
add
ja
fwait
cmp
xor
in
imul
cwtl
add
or
dec
mov
pop
pop
inc
out
cwtl
and
fisubrs
mov
dec
clc
adc
filds
mov
int3
cli
or
ss
movsb
mov
ret
xlat
sbb
roll
aas
cmpl
daa
es
cmp
add
nop
pop
xchg
and
pushf
cld
dec
add
jl
cmp
inc
lahf
or
add
insl
mov
sub
push
add
pop
in
add
sub
mov
repz
aas
mov
aad
add
mov
jno
cmp
cmp
pop
lds
popf
fs
mov
push
sbb
dec
test
cmp
mov
add
fldt
xchg
sbbl
sub
mov
sbb
addb
daa
pop
out
inc
hlt
or
inc
add
xchg
add
cmp
or
stc
add
pop
push
cwtl
hlt
data16
add
add
jle
sbb
loop
dec
xor
test
shll
cmp
dec
ror
aam
cltd
adc
adc
add
add
pop
ss
add
dec
push
frstor
sbb
loop
pop
or
cmp
gs
int
jle
je
mov
jnp
mov
add
mov
add
adc
add
cmp
pop
mov
mov
add
hlt
mov
xchg
int
and
add
sub
sbb
iret
lods
lods
inc
std
iret
arpl
push
negb
iret
sbb
pop
adc
popa
and
jnp
mov
scas
xchg
xchg
sub
popl
inc
dec
mov
pop
mov
pop
je
mov
add
dec
sbb
bound
stc
xchg
sub
push
fcompl
les
inc
mov
lret
sti
aad
shrb
push
add
push
rorl
sub
dec
pushf
into
add
icebp
xchg
sbb
bound
add
xchg
mov
add
dec
aaa
ljmp
pop
test
shl
add
mov
loopne
lea
add
sub
xchg
call
cmc
mov
sub
jecxz
add
lea
xor
push
shrl
xchg
lods
test
insl
push
repnz
xchg
sub
sbb
les
ljmp
xchg
sti
inc
lods
push
or
adc
xor
jecxz
sub
push
cmp
shr
add
add
xchg
mov
std
push
add
popa
orb
add
rcrl
aaa
sahf
xchg
call
xchg
sar
pop
ljmp
jae
inc
sub
stos
rclb
iret
shl
insl
xchg
dec
mov
pop
dec
push
and
add
add
mov
mov
bound
mov
loopne
adc
lea
mov
je
add
test
lcall
cltd
xor
sbb
lea
insb
add
cs
add
inc
pop
test
fwait
jge
mov
movsb
sbb
xchg
mov
scas
pop
loopne
pop
shll
xchg
out
sub
lret
mov
mov
add
out
add
add
push
lock
push
fldenv
ret
test
in
mov
mov
jnp
or
daa
sbb
rolb
or
inc
mov
adc
js
scas
mov
xor
push
push
jbe
xor
add
sahf
sub
cli
bound
jb
xchg
hlt
and
aas
sbb
add
into
xchg
pop
adc
stos
fisubrl
mov
aaa
out
add
jl
mov
into
adc
jnp
add
pop
rol
imull
jns
add
mov
pop
outsl
mov
test
mov
adc
sti
leave
insb
lods
xchg
pushl
adc
fcmovbe
and
sti
cli
add
mov
hlt
data16
into
mov
xchg
int
cmp
nop
inc
shr
push
adc
enter
sbb
jg
call
lret
jl
mov
mov
imull
pop
test
out
adc
mov
fildll
aad
gs
sbb
cmp
or
pop
rorl
mov
in
mov
xchg
mov
adc
les
inc
and
sub
xchg
arpl
xlat
sub
mov
add
xchg
adc
inc
jne
mov
add
aad
add
aad
jl
add
fadds
in
push
stc
loopne
lcall
add
mov
sbb
add
adc
pop
pop
leave
movsb
inc
jnp
xchg
js
jle
mov
mov
add
pop
insl
adc
jne
jmp
mov
jge
loopne
jae
fcmove
and
add
pop
jmp
negl
movsl
add
inc
fildl
cmpsl
jne
jne
add
add
mov
outsb
je
stos
mov
pop
loope
xchg
sbb
pop
rcll
xchg
das
add
imul
mov
imul
mov
popf
outsb
add
jae
test
sbbl
jne
add
push
add
xchg
aad
dec
mov
cwtl
rcr
jg
imul
sbb
idivl
lods
add
or
and
fdivs
fisttpl
dec
xor
loop
add
aas
addr16
cmc
subb
orl
mov
rol
mov
ret
adc
inc
cmpsb
stos
adc
mov
dec
mov
pop
shrl
add
pop
ja
mov
fmul
jbe
cmpsl
pushf
lret
jmp
test
shll
scas
cmove
shll
mov
cmp
js
jnp
mov
add
jle
sub
dec
stos
adc
stos
movsl
js
add
mov
add
pop
mov
add
add
aaa
das
lds
adc
add
pop
int3
int
push
xchg
mov
push
xor
test
mov
xlat
add
add
fsubrs
aas
adc
push
pop
aam
add
sub
cmp
std
das
adc
add
loopne
pop
loopne
jns
movb
popf
das
fnstenv
jno
aad
add
mov
mov
xchg
xchg
stc
jbe
add
jmp
pop
stos
jae
push
ret
aam
mov
mov
sub
or
inc
pop
push
add
add
add
cmp
or
xchg
popa
sub
xor
or
into
or
jl,pn
movb
mov
add
cld
sbb
bound
add
or
imul
push
add
pusha
add
add
in
jo
lea
mov
test
mov
jnp
push
pushf
int3
mov
mov
dec
add
cmp
loop
cld
addr16
xchg
add
cwtl
push
push
ret
mov
sti
push
jno
add
push
jo
fnsave
adc
sub
add
fadds
mov
pop
aas
and
sahf
pop
mov
add
cmpsb
push
daa
mov
scas
ss
lahf
cmpsb
or
inc
adc
add
sub
imul
outsl
mov
add
icebp
xor
enter
inc
aas
add
add
fidivrs
hlt
scas
adcl
lods
out
mov
mov
out
push
or
fdivs
cld
add
and
test
push
roll
call
mov
inc
test
ret
add
add
hlt
fnstenv
add
out
mov
add
adc
add
mov
add
loopne
add
and
add
add
fstl
bound
pop
xchg
out
jnp
scas
mov
jmp
and
add
xchg
add
xor
push
mov
pop
inc
mov
and
add
pop
fstpl
and
out
cmpsl
loop
or
or
mov
dec
in
int
pop
jae
jae
loopne
jbe
stos
sub
pop
cmp
in
or
adc
jns
loope
aam
clc
shlb
movsl
test
movsl
jae
addb
adc
in
lock
add
in
lcall
pop
lds
or
jnp
add
xorl
ja
sub
fwait
out
lods
lret
add
cmpsl
cmpsl
xor
es
add
inc
stos
jg
jns
popa
es
add
stos
adc
pop
dec
xchg
and
lods
into
lods
add
or
pop
imul
cmp
jo
mov
inc
aas
in
jmp
filds
jo
jbe
add
add
std
pop
push
popa
add
jnp
sub
movsl
add
add
mov
inc
movsb
add
add
mov
add
mov
xchg
add
pusha
add
mov
pop
popl
mov
add
mov
xchg
push
daa
sub
out
stc
inc
ret
mov
pusha
jno
add
fldl
stos
inc
push
push
mov
xchg
movsb
or
sbb
mov
pop
scas
push
aad
xchg
mov
sahf
fistps
ret
ret
push
xor
shll
mov
jb
lcall
add
push
cwtl
pushf
adc
pop
mov
xchg
jge
adcb
and
loop
ljmp
add
loop
pop
dec
push
add
push
add
cwtl
jno
icebp
add
dec
imul
xchg
addb
mov
sbb
pop
cld
add
add
lahf
repz
inc
push
add
pop
add
aaa
add
xchg
arpl
jae
xlat
sbbl
mov
inc
lds
dec
push
jg
js
push
adc
ret
mov
mov
sub
mov
test
or
test
cs
or
scas
cmp
les
lret
mov
cmpsl
int3
xor
add
pop
add
push
imul
or
fnstsw
daa
inc
fsubr
add
idiv
sbb
or
aas
adc
test
sub
push
stos
adc
and
xchg
xor
test
lret
int3
add
dec
cli
mov
add
pop
outsb
dec
add
push
cmp
aad
mov
add
loop
xor
add
push
push
pop
and
jbe
pop
iret
insl
dec
lret
jns
es
fadds
xor
add
add
add
add
or
fwait
jecxz
dec
mov
mov
dec
ljmp
test
data16
mov
mov
fistpll
stc
push
mov
add
adc
int
sub
mov
jae
fnstenv
inc
cmp
and
cwtl
jb
lret
xchg
pop
push
add
lods
and
jo
dec
lea
leave
lahf
xchg
cwtl
cmp
add
cmpsl
adc
cld
cld
test
and
jne
es
sarb
push
add
xchg
shlb
int
cmp
fs
jecxz
andb
add
in
test
aaa
into
add
das
mov
dec
fmuls
js
loop
pop
sub
mov
mov
bound
add
mov
xor
jmp
mov
into
mov
ret
iret
push
mov
xor
test
ror
adcb
sbb
add
push
xchg
shrl
mov
scas
cwtl
add
verw
js
mov
or
into
gs
xchg
cltd
pop
mov
sti
push
xchg
add
jl
add
jmp
adc
lret
jns
fwait
out
push
mov
xorl
push
sub
jo
incb
scas
mov
popa
gs
inc
inc
in
add
incb
repz
mov
in
sub
add
inc
push
add
and
enter
and
stos
movb
popa
inc
stos
add
pop
push
mov
push
sbb
add
subb
test
xchg
nop
push
psllq
cld
stos
add
add
mov
inc
push
inc
xor
add
add
mov
popf
rolb
test
xchg
in
loop
adc
jb
aad
jge
add
push
mov
sbb
jns
in
scas
mov
add
cmpsl
add
mov
out
arpl
push
ret
mov
add
pop
mov
adc
sbb
jge
jmp
ltr
add
sbb
int3
inc
sub
xchg
jbe
push
testl
jae
adcl
stos
add
sub
in
out
add
leave
int
or
sbb
in
sbb
xchg
adc
shlb
sbb
inc
push
or
pop
cwtl
adcl
push
cli
add
dec
cmp
pusha
rcll
add
or
dec
mov
add
adc
add
int
add
jae
add
or
add
test
scas
test
shrb
fwait
sahf
leave
pop
lcall
add
jb
je
shll
add
fistps
push
out
fs
cltd
cmp
cmp
add
sbb
pop
in
add
jle
enter
xor
push
inc
loopne
test
lods
mov
insb
pop
xor
arpl
popa
fsubs
popf
ja
add
je
pusha
sub
push
test
pop
push
push
loope
xchg
mov
and
jl
add
test
sbb
dec
adc
loopne
mov
nop
sub
fnstcw
testl
add
data16
cld
adc
push
xor
cmp
jno
insl
out
fbstp
lods
in
sbb
mov
add
je
incl
xchg
jae
loope
orb
fwait
add
outsb
xchg
addl
lods
add
inc
mov
xor
lods
add
imul
dec
xor
mov
xchg
int
mov
jnp
add
push
pop
shlb
in
cmp
ret
aad
repz
pop
push
xor
stos
aas
dec
shrl
fmul
jno
add
add
insl
xchg
ret
in
jns
dec
data16
mov
insb
sub
loop
xor
aas
out
push
testl
in
jb
ljmp
push
and
push
dec
movsl
add
repnz
ret
iret
add
or
pop
mov
mov
daa
stos
aam
sub
add
pop
aam
dec
xchg
add
mov
out
add
jg
push
loope
pop
or
pop
xor
lret
pop
ljmp
add
push
leave
int
or
add
cld
lds
and
xor
sbb
mov
fs
mov
mov
aaa
and
loop
dec
xchg
lahf
jle
sbb
sub
sbb
lahf
imul
or
mov
add
lea
arpl
dec
cmp
lea
add
dec
add
arpl
mov
ret
ret
xchg
shl
insl
inc
ficoms
out
clc
xchg
inc
mov
xchg
push
fwait
sub
add
add
sub
and
and
add
add
mov
inc
mov
ret
adc
shl
mov
fisubrs
test
jle
lcall
add
enter
sbb
pop
pop
adc
loopne
add
add
push
inc
cmp
cmp
pop
cld
cmp
push
test
add
sub
jno
push
jae
add
bound
out
dec
repnz
push
mov
inc
add
js
sbbb
adc
test
mov
in
fs
add
push
testl
fiaddl
cmc
int3
out
add
xor
cltd
add
mov
das
faddp
jne
and
dec
cmp
sahf
ss
xor
ss
add
mov
add
or
mov
sbb
clc
test
push
dec
mov
xor
mov
add
lcall
add
ret
jnp
ja
add
jo
inc
adc
addl
sub
sbb
insl
outsl
add
repz
mov
shll
xchg
add
fadd
pop
outsb
aas
cmp
push
loop
push
adcl
pop
xchg
push
and
imul
and
adc
cmp
mov
jle
cli
add
jae
fiadds
add
sarb
test
mov
inc
fistpl
jnp
adc
cmpb
rcll
inc
add
jae
or
adc
bound
mov
mov
push
add
add
xorl
faddl
in
or
jmp
or
jns
or
inc
cmp
and
fs
inc
out
add
mov
xchg
pop
fcomi
dec
push
lods
jge
adc
ror
adc
sub
xrelease
add
xchg
adc
fsts
clc
movsl
aaa
js
orb
mov
repnz
add
add
jge
add
fwait
mov
enter
mov
mov
mov
push
pop
inc
add
jno
data16
mov
stos
cmp
jge
out
test
sub
mov
add
or
add
shll
mov
sub
mov
cs
fwait
stos
in
mov
xchg
push
add
push
repnz
add
and
mov
cmp
lock
sub
mov
add
sbb
dec
mov
add
add
add
xchg
sti
inc
ljmp
stos
xchg
std
lret
adc
int
test
xlat
add
push
mov
cmp
test
aas
adc
scas
push
add
in
or
push
das
inc
xchg
mov
jo
xchg
in
sbb
sub
nop
icebp
frstor
add
jecxz
or
cmc
nop
and
add
mov
test
inc
add
jecxz
mov
jno
mov
stc
mov
pop
cmp
add
xchg
xchg
addl
add
das
psubq
movsb
xchg
pop
cli
jns
push
and
mov
mov
test
sbb
add
add
pusha
mov
hlt
xchg
je
pop
add
scas
or
sahf
dec
ret
fadds
cwtl
mov
enter
or
mov
das
cwtl
imul
mov
cwtl
cmp
inc
add
mov
outsb
cmp
push
mov
sti
fisubl
add
cmp
lea
rcll
mov
mov
push
inc
out
add
into
fucomi
sti
mov
lds
cmp
lret
mov
jmp
xor
jo
mov
repnz
xchg
xor
adc
popa
mov
push
test
jg
rcl
xor
cld
test
pop
insb
rcrb
add
sub
add
mov
ss
jns
inc
sbb
lods
push
add
and
lahf
add
insb
jns
cmp
and
add
fimuls
mov
add
popf
dec
in
enter
lret
cmp
push
pusha
ret
aas
cmp
call
xchg
add
nop
mov
add
outsl
adc
jl
xor
testb
add
and
test
mov
jne
add
repnz
out
push
mov
xchg
ror
mov
add
lahf
inc
pop
pushf
pop
xchg
cwtl
ljmp
std
clc
in
inc
clc
dec
mov
add
cs
cmp
jecxz
and
xchg
add
xor
cmp
out
pop
stc
aas
add
sbb
fadds
lods
add
pop
inc
loope
add
cmp
inc
cmp
ljmp
mov
data16
daa
add
mov
shrb
mov
loop
ljmp
cltd
jg
hlt
and
xchg
nop
stc
pop
xchg
lret
xchg
add
sbb
insl
mov
lock
adc
flds
ja
cmpsb
shl
ja
shlb
lea
in
fwait
jae
ljmp
inc
xchg
jecxz
lock
push
lcall
lea
pop
jb
mov
loope
cmp
inc
ja
dec
fists
lds
sti
into
add
loopne
sbb
in
jae
jbe
push
lret
pusha
ds
call
fcomip
jbe
lret
add
add
xchg
and
cwtl
or
add
mov
dec
mov
daa
xchg
outsb
jne
jb
inc
ljmp
enter
adc
test
dec
cmpsb
add
out
into
icebp
adc
or
rolb
aaa
daa
stos
push
add
das
dec
xor
rolb
dec
jge
jnp
pop
movsl
add
gs
data16
mov
mov
shlb
adc
dec
aad
push
pop
loope
popf
fidivs
adc
push
adc
insl
add
xchg
sub
add
popa
jnp
icebp
lahf
inc
stc
and
fbld
push
inc
jl
jo
and
add
ljmp
push
dec
add
add
cld
out
sub
daa
lret
rolb
pop
fwait
cwtl
mov
int3
add
mov
jmp
mov
adc
mov
daa
mov
insb
jno
push
xor
add
push
push
es
add
mov
push
ficoml
bound
daa
rcr
add
push
xchg
in
add
data16
outsl
cmpsl
arpl
jmp
test
scas
stc
ja
movsb
push
adc
lods
pop
mov
mull
mov
mov
nop
sub
shlb
shll
xchg
into
dec
stos
addl
or
popf
out
mov
dec
loopne
sub
bts
loop
es
mov
mov
cmp
sbbl
shlb
js
clc
ret
push
gs
xor
add
cs
add
add
push
shrb
cmp
cmp
les
fsubl
jo,pn
in
scas
pop
or
cmp
jno
ret
jnp
mov
add
add
inc
sbb
mov
add
cmp
hlt
addr16
aam
push
inc
sbb
fcomp
add
aad
cld
add
mov
and
sub
loopne
or
call
mov
jno
add
outsl
cmp
xchg
xchg
sub
mov
ja
jns
shll
jmp
and
add
scas
or
in
xchg
add
pop
clc
mov
jne
sbb
lret
gs
incb
aas
pushf
mov
aas
or
cmp
pop
xchg
add
or
in
add
add
in
leave
xchg
cmp
ds
mov
ja
jno
add
add
mov
int
push
pop
push
dec
cmp
add
inc
in
ret
jns
cli
int
pop
sub
sbb
cld
stos
add
in
add
pop
or
mov
sbb
add
pop
push
lret
out
stos
cmp
xor
sub
push
add
dec
and
xchg
mov
and
add
inc
mov
lret
sbb
add
shl
add
add
jg
push
add
push
or
mov
or
ficomps
aas
push
or
dec
add
mov
add
add
dec
js
mov
fadd
pop
xchg
mov
and
mov
mov
add
add
adc
jl
dec
add
out
jmp
add
data16
lods
in
and
hlt
cmpsl
sub
add
pusha
xchg
test
add
repz
loop
lds
adc
test
int3
adc
imul
sub
sbb
outsl
add
movsl
mov
push
or
cmp
pop
pusha
sti
jne
xchg
pop
add
add
sub
inc
adc
xchg
bound
and
adc
mov
mov
and
mov
mov
mov
dec
roll
mov
sbb
adc
pop
dec
scas
add
fldcw
mov
fildl
shrl
aas
fs
add
dec
push
and
push
outsl
adc
xchg
push
mov
mov
bound
add
add
or
dec
xchg
add
mov
test
mov
add
xchg
insl
adc
data16
fcmovbe
mov
faddl
adc
dec
xchg
fisubl
dec
add
xlat
jae
sbb
lcall
add
xor
adc
add
add
rcll
pop
add
jg
hlt
lods
imul
add
cmpsb
outsl
jecxz
push
aam
jp
lret
jbe
testl
pop
push
jo
stc
xor
pop
jb
xchg
mov
jno
xchg
adc
dec
cmp
loope
xor
outsb
xchg
cltd
add
sbb
add
inc
push
add
scas
ds
fisubrl
jbe
xchg
stos
inc
stc
mov
jb
mov
jl
cmp
jg
lods
push
mov
push
sbb
lret
push
or
insl
mov
shll
push
sbbl
sub
jns
cmpsl
xlat
ljmp
sub
in
or
jge
pop
lods
fwait
jl
and
pusha
jnp
add
pusha
add
or
fcoml
ss
jle
test
iret
fstpt
sbb
inc
test
loop
ret
cmpsb
test
xchg
outsl
daa
mov
jo
xor
add
cmpsl
adc
data16
sbb
in
testb
xchg
lock
test
fsub
add
adc
pop
inc
pop
mov
cli
jno
out
xor
xchg
xor
std
mov
scas
cmp
add
add
test
add
gs
mov
push
jns
xor
sbb
sbb
js
add
loopne
and
sub
mov
xchg
xchg
jmp
or
mov
cmpsl
sub
imul
inc
je
cmpsl
xor
jo
je
idivb
lahf
fldl
mov
ret
adc
sbb
aas
pop
mov
sbb
add
lds
pop
in
pop
add
add
lahf
shlb
jb
hlt
mov
cld
inc
lahf
cmp
xchg
cs
inc
fwait
or
cwtl
fstps
movsl
fisttps
push
cmpsl
push
mov
adcb
leave
dec
lea
pop
add
jbe
mov
add
pop
sub
stc
test
std
repz
outsb
jb
nop
and
jmp
or
xchg
jnp
sub
mov
or
scas
stos
sbb
jle
test
nop
xchg
loop
les
add
lcall
out
cmc
mov
scas
adc
xchg
filds
add
xor
dec
jecxz
or
xor
jecxz
out
adc
add
shlb
add
pop
imul
rolb
stos
xor
imul
out
mov
ret
fstl
repz
add
stos
jp
pop
inc
and
pop
xchg
in
add
cs
and
xchg
sbb
jmp
and
cltd
mov
mov
aam
int3
jae
ret
cmp
fmull
pop
repnz
inc
subl
fcoml
xchg
fadds
pop
add
mov
stos
mov
add
push
jb
imul
push
movsl
notb
mov
inc
adc
push
mov
aaa
or
xchg
popl
movsb
incb
add
cmp
push
or
fimuls
mov
lods
sub
lcall
dec
add
outsl
ds
mov
fiadds
iret
add
fidivl
repz
dec
test
adc
push
add
adc
add
pop
push
pushf
push
loope
xor
mov
sarb
movsb
mov
jecxz
mov
add
add
add
lret
mov
movsl
pusha
add
cmp
and
ret
rclb
lock
or
js
sbb
mov
cmp
xchg
pop
std
stc
add
cmp
inc
pop
or
in
add
in
loop
mov
and
mov
fwait
popa
dec
jg
ficoml
cld
sbb
jmp
sbb
lock
iret
add
es
int
pop
mov
mov
add
mov
xor
js
jge
add
sar
scas
dec
cld
fstpt
add
dec
add
mov
mov
inc
outsl
add
or
out
iret
xchg
imul
cmp
pop
in
ja
xlat
adc
mov
andl
int3
mov
jmp
pop
xor
add
and
mov
iret
adc
dec
mov
mov
sbb
jp
mov
mov
push
fistps
push
inc
cmp
dec
and
scas
add
cwtl
add
lret
sub
push
add
push
testl
sbb
inc
push
adc
mov
pop
fistl
push
cmpsb
faddl
push
bound
push
or
cmp
add
sti
inc
add
or
push
ret
dec
sarb
scas
jae
data16
and
fstp
ljmp
jns
cld
and
addb
leave
movsb
daa
fldl
in
and
adc
add
stc
sub
stos
test
mov
mov
inc
xchg
lds
sbb
xchg
add
jle
cmc
inc
cld
push
jmp
mov
pop
sub
cmp
cmp
cmp
mov
lds
adc
adc
push
roll
jle
mov
jo
push
xorb
lret
jae
cmp
jg
and
and
fildl
push
pop
fmulp
push
fstpl
stc
add
test
inc
mov
cmp
cmp
je
lods
mov
and
mov
aad
dec
roll
adc
push
push
push
cmp
scas
inc
int3
add
testb
adc
pop
hlt
jbe
or
int
testb
jns
cmc
add
xchg
push
fidivl
mov
popa
sub
pop
add
stos
or
xor
inc
or
add
add
dec
gs
add
add
adc
pop
inc
outsb
mov
push
and
stos
mov
add
jae
lcall
lock
inc
or
push
jmp
pop
xchg
orb
outsb
add
mov
pop
add
pop
in
fidivl
push
inc
lcall
add
aaa
add
pop
xchg
hlt
cs
clc
loop
adc
mov
in
ljmp
sub
in
insb
mov
cld
jge
jo
pusha
movsl
das
jno
add
mov
out
in
and
pop
mov
or
xchg
add
iret
push
push
das
popl
fmull
mov
arpl
test
or
push
roll
aad
ds
add
add
lret
bound
pop
sub
mov
and
cld
pushf
addr16
xchg
inc
dec
push
roll
push
or
xchg
xor
sbb
xchg
rclb
push
and
sub
adc
xchg
outsl
jle
scas
push
jnp
aad
loopne
test
add
pop
hlt
fdivrs
adc
inc
sub
or
rolb
inc
popa
add
cwtl
push
mov
cmpsb
rcrb
or
xchg
es
push
adc
adc
and
int
js
lea
es
add
divl
sbbb
sbbl
andb
sti
fidivrs
imul
cld
jge
push
ret
fldl
and
add
xchg
pop
xlat
lods
mov
mov
pop
int
fcmove
test
sbb
jge
ss
mov
xchg
popa
roll
push
pop
dec
movsb
add
sub
xchg
ss
add
test
jae
sub
add
add
xchg
adc
mov
iret
sarl
jecxz
add
cwtl
inc
roll
mov
adc
ljmp
fimull
arpl
dec
add
mov
push
push
and
xchg
jg
add
cmp
aad
pop
add
pushf
pushl
scas
mov
and
sub
gs
lea
lcall
mov
in
push
dec
pop
mov
test
inc
sub
add
fldcw
test
daa
add
enter
testb
sub
fildl
jmp
push
inc
jb
shl
aam
mov
cmpsb
movl
sub
dec
add
add
jb
pop
adc
dec
add
jecxz
jmp
jae
add
cmc
jp
ret
popf
push
pop
sub
dec
fwait
addl
pusha
add
inc
sarl
inc
cmp
repnz
repnz
mov
adc
sti
ds
daa
notb
arpl
mov
pop
into
pop
sti
add
pop
scas
mov
clc
imul
pusha
pop
mov
xchg
shrb
push
mov
cmp
lods
xchg
popf
fiadds
das
pop
cmp
pushf
leave
lea
mov
add
push
in
add
bound
inc
lahf
xor
jecxz
sub
inc
movsl
fwait
dec
pop
lods
pop
cli
push
sbb
inc
mov
fidivrs
mov
mov
inc
in
mov
sbb
adc
or
xor
dec
inc
lret
clc
hlt
add
jecxz
fisubrl
jecxz
jmp
jecxz
setnp
xchg
push
add
pop
mov
sub
cwtl
add
add
pop
ret
xchg
add
push
inc
movsl
add
stos
gs
in
fs
add
gs
arpl
inc
dec
mov
test
leave
enter
add
add
add
jnp
jns
add
cmp
pop
cli
and
mov
mov
out
add
lahf
xor
lods
cmpsb
or
or
mov
aas
xchg
push
pop
gs
aas
add
mov
test
lret
mov
jecxz
xchg
push
xchg
aad
sbb
push
mov
add
fdivs
pop
xor
pop
dec
dec
add
push
xchg
sub
mov
jnp
fwait
in
sti
add
or
add
pushf
rorl
xchg
jb
add
data16
xchg
sub
sub
add
mov
dec
adc
cld
and
cmpsl
cmp
xor
inc
inc
inc
lock
js
add
dec
mov
or
mov
lret
xchg
in
adc
jbe
mov
call
jmp
push
mov
nopl
daa
mov
mov
jne
mov
aaa
test
scas
pop
addl
cmpsl
add
mov
add
int
jbe
adc
rcrb
adc
idivl
jbe
fs
add
mov
dec
hlt
sub
add
shrl
jne
mov
add
fs
mov
push
repnz
fnsave
add
mov
sub
adc
clc
pop
pop
add
sbb
mov
add
or
mov
cmp
add
inc
mov
in
cmc
mov
das
dec
and
dec
nop
xlat
test
inc
rcll
scas
add
inc
lock
mov
cli
loope
lahf
sbbb
jmp
pop
add
xor
loopne
enter
jmp
test
ja
xor
lods
fwait
add
pop
mov
movsl
push
push
jno
xor
cwtl
inc
add
mov
pop
test
insb
not
push
mov
jp
add
adc
adc
clc
add
sub
jmp
add
adcb
push
jae
outsb
add
xlat
push
adc
pop
scas
xorl
faddp
lahf
xchg
mov
dec
add
out
mov
adc
test
repnz
xlat
cmpsb
out
sbb
sbb
pop
outsb
mov
mov
add
add
sbb
in
insb
lret
pop
jns
ds
cmp
adc
cmpsb
pop
mov
ds
add
shr
pop
mov
push
dec
push
je
add
pop
cmp
orb
out
leave
dec
add
adc
xchg
fwait
les
fadds
imul
ds
dec
int3
enter
fcoms
out
push
push
js
mov
cmp
pop
pop
add
sub
pop
test
inc
iret
inc
int
gs
pop
or
sbb
dec
sbb
add
aad
adc
mov
cwtl
cmp
sub
loopne
jns
push
outsl
or
stos
cmp
in
cwtl
mov
pop
in
mov
insl
stos
popa
pop
and
add
fmuls
or
sub
jnp
mov
outsl
lret
jb
xchg
xchg
push
add
rcr
insb
shr
outsb
jo
push
hlt
out
lcall
pop
test
cwtl
dec
pop
add
ljmp
and
scas
dec
inc
add
call
pop
mov
mov
rcrl
cmp
cltd
cwtl
nop
add
add
cmp
sbb
cli
add
add
ficompl
sub
data16
add
jno
lret
jg
call
in
add
add
pusha
add
dec
sahf
add
xchg
or
and
jmp
xchg
pusha
mov
divb
aam
or
add
xor
sub
add
lds
sub
add
sub
mov
mov
iret
ja
sub
add
js
and
mov
test
jo
and
ja
cmp
mov
add
xor
lret
pop
xor
imul
test
arpl
mov
cmpb
iret
push
lcall
push
fsub
mov
iret
mov
pop
aaa
ja
add
popa
pop
idivb
pop
add
cmpsl
adcb
add
or
mov
and
mov
aad
test
mov
cmc
add
mov
popa
mov
dec
jl
ljmp
mov
rcr
in
imul
push
cmp
add
cmp
pop
sahf
push
into
imul
add
aaa
fcompl
sbb
add
add
aaa
add
sub
and
popf
push
add
add
cli
cmp
aaa
push
pop
jae
enter
push
or
shrl
cmpsb
mov
in
sub
cwtl
in
dec
sub
pop
leave
js
sbb
xor
test
dec
add
jnp
int3
mov
add
ljmp
inc
ret
filds
stos
jb
adcb
lods
add
dec
sub
dec
xchg
lcall
sub
lds
mov
dec
push
mov
mov
test
pop
aad
inc
jg
add
lahf
ss
in
jmp
std
add
sbb
inc
fadds
add
add
add
testb
test
mov
jns
imul
dec
scas
clc
test
pop
cmp
and
movsb
xorb
test
xlat
or
xlat
cmpsl
add
add
or
push
outsb
fs
int
call
push
add
mov
xchg
xchg
add
add
adc
scas
into
mov
call
mov
aaa
mov
dec
pop
add
fsubs
int3
stc
xchg
adc
add
in
mov
add
mov
pop
add
mov
add
xchg
jecxz
bound
inc
xor
aam
out
sbb
xchg
jb
inc
xchg
and
jb
pop
lds
lret
test
push
in
sbb
add
iret
in
addb
sub
pop
cld
fisttpll
leave
rclb
cli
push
xchg
mov
fwait
lds
enter
idivb
repnz
inc
xor
loopne
test
jg
imul
jl
test
mov
add
daa
mov
add
xor
cmc
push
add
jae
clc
and
add
and
xor
mov
mov
add
jb
roll
jb
jbe
cld
lcall
aaa
mov
mov
xlat
out
into
nop
cltd
bound
lret
add
and
pop
hlt
add
pop
adc
jo
mov
xor
jl
jno
mov
test
sub
jnp
push
jge
add
fdivrl
mov
xchg
dec
iret
push
xchg
adc
add
xchg
xchg
dec
mov
jnp
add
pop
inc
fidivrs
sbbb
push
inc
in
add
add
add
nop
scas
sub
or
hlt
xchg
mov
or
pop
cmp
sbb
les
inc
lcall
xlat
and
shlb
test
add
adc
push
clc
sbb
add
enter
inc
lahf
jmp
lods
sar
jle
cmp
xchg
out
mov
hlt
mov
lcall
lret
sbb
hlt
nop
pop
cld
sub
inc
sbb
add
add
mov
xchg
add
enter
xor
add
sbb
test
mov
or
xchg
aam
out
cmp
clc
add
jmp
outsb
xchg
inc
add
lods
cmpsl
add
call
sbb
xchg
cmp
add
es
xchg
sbb
mov
sub
testb
add
fimull
dec
gs
mov
add
jno
mov
or
dec
orb
dec
xor
push
dec
fs
fisttps
push
add
push
add
cmpsl
pop
pop
ret
rorb
imulb
movsb
sbb
inc
stos
adc
rcll
cwtl
add
out
test
scas
or
add
sub
jne
push
pop
add
out
test
sahf
nop
repz
lods
ds
jg
negl
inc
sbb
mull
movsb
add
mov
fsubs
add
sbb
aaa
cmpl
iret
adc
dec
subb
or
div
dec
leave
cmp
or
out
or
pusha
rcrb
sbb
push
xchg
loop
std
fmull
mov
push
xchg
mov
add
daa
or
and
jmp
add
shl
lods
cltd
cmpsb
push
add
addr16
nop
js
mov
adc
stos
jl
or
call
add
add
sbb
lea
add
mov
cmp
fwait
push
out
add
movsb
mov
dec
add
mov
movsl
out
jae
mov
add
movsb
mov
icebp
xchg
mov
test
data16
adc
adc
out
xor
cltd
pop
xchg
pop
jg
mov
pop
fs
inc
add
xchg
stos
std
cli
mov
cmpsb
dec
mov
or
scas
or
jle
sarl
lcall
stos
pop
je
and
cmp
dec
or
lea
movsb
mov
push
rorl
mov
repnz
lock
in
inc
or
add
out
add
add
mov
xchg
or
mov
mov
adc
add
jp
int3
arpl
xchg
mov
and
sbb
or
cli
push
ds
pop
in
filds
add
stos
mov
add
movb
dec
dec
ret
insb
rorb
ret
mov
fsubrl
shll
pop
je
add
pop
lods
icebp
iret
pushf
lea
push
cmpsl
je
sub
mov
addr16
inc
push
loop
dec
add
fs
mov
cmp
ret
push
adc
loope
popf
ljmp
push
pop
add
je
dec
jecxz
sbb
sub
es
cmp
andl
mov
sbb
inc
push
in
add
xor
or
add
adc
call
pop
add
mov
xor
sbb
hlt
xchg
add
fstl
clc
insb
aas
dec
jbe
push
xlat
std
sar
daa
mov
add
adc
insl
xor
add
pop
data16
add
mov
pop
data16
icebp
pop
cld
jnp
out
add
xchg
add
aad
add
scas
aad
push
lods
add
inc
add
and
add
push
xchg
sub
stos
dec
testb
lea
cld
or
popf
sub
xchg
aas
cmp
pop
add
push
mov
jae
cmp
pop
pop
add
xor
add
xor
repnz
push
or
nop
insl
cmpsb
add
or
add
sbb
adc
add
xchg
add
les
add
mov
add
fildl
shlb
fiadds
pop
sbbl
xchg
add
add
lods
cmpsb
add
dec
add
cmp
mov
add
add
rorb
and
mov
inc
dec
add
add
inc
es
jnp
add
stc
inc
cmp
leave
push
mov
add
add
enter
js
mov
add
lock
ds
iret
add
push
jp
loopne
mov
les
adc
ljmp
mov
dec
inc
int3
and
sbbb
adc
add
cmpl
or
lret
jl
dec
daa
add
add
pop
outsb
inc
mov
sbbl
imul
jne
dec
jle
push
mov
out
fstpt
outsb
inc
iret
fisubrs
je
pop
sbb
add
or
cmpsl
inc
sarl
in
lea
gs
add
lahf
jns
dec
mov
mov
lret
int3
mul
outsl
add
data16
mov
or
jo
add
jnp
pusha
xchg
cmp
and
ljmp
sbb
jl
js
mov
xor
sbb
add
xchg
add
cmpsl
pop
outsb
add
aad
adc
insl
loopne
sub
aad
sbb
jg
push
mov
pop
clc
mov
sti
ficompl
xor
and
or
adc
insb
in
mov
decl
xor
out
fwait
ss
jecxz
lret
xor
push
push
in
mov
dec
jns
jnp
cmpsl
outsl
outsl
adc
ljmp
or
stos
push
mov
ret
sahf
fcomp
xor
fnstcw
loope
call
inc
lahf
rolb
jno
and
adc
shlb
aas
jbe
dec
push
repz
stc
test
add
cli
packssdw
sub
or
adc
add
add
pop
pop
mov
jecxz
mov
add
aad
mov
mov
shlb
push
mov
sti
add
test
addl
bound
mov
in
adc
shll
sub
and
aas
lea
fbstp
dec
add
lahf
fwait
add
popa
sbb
sbb
out
fcompl
lret
ds
dec
xlat
xchg
add
push
jle
and
sbb
add
jl
test
or
cmp
imul
mov
cmp
cld
movsb
inc
add
in
push
aaa
popa
mov
cmc
mov
mov
inc
mov
dec
stc
test
jns
sahf
in
pop
xchg
dec
push
xor
insl
lahf
daa
inc
dec
shll
mov
addl
dec
iret
xlat
sub
add
je,pn
inc
jecxz
fs
fwait
aam
cmp
icebp
fldl
push
inc
addb
xchg
pop
cli
pop
sbb
jo
mov
adc
add
inc
dec
fucomip
sub
int
push
cmp
testl
add
mov
adc
mov
sub
rolb
lret
mov
bound
lods
add
cmp
push
push
jbe
jmp
movl
faddl
cmp
and
dec
testl
add
or
cmp
aas
xor
jae
jbe
jecxz
je
pop
adc
add
mov
inc
xchg
xorl
test
fidivrl
into
mov
add
add
movsl
sub
pop
mov
sbb
push
pop
mov
mov
fsubrl
push
dec
sbb
add
fcoms
and
add
pop
stos
and
jmp
add
imul
icebp
rcrl
add
faddl
mov
mov
cmpsl
aad
mov
fsubr
add
jg
lret
mov
loop
addb
inc
shll
lods
mov
adc
ja
dec
movsb
inc
sub
rcr
add
xchg
push
inc
sbb
add
mov
mov
jmp
mov
pushf
call
sbb
and
add
cmp
and
in
leave
je
shll
cli
fwait
imul
call
and
cwtl
push
pop
pop
add
out
js
add
add
add
add
add
add
mov
xchg
jmp
iret
arpl
add
or
into
mov
fcomip
push
pop
mov
add
arpl
push
iret
out
jb
push
pop
cmp
dec
dec
dec
movb
iret
cmp
add
jg
mov
mov
lock
lret
pusha
hlt
jmp
lret
arpl
pop
jl
mov
inc
pushf
daa
movhps
jno
push
adc
adc
add
in
mov
cwtl
sub
jb
lret
adc
addr16
mov
fs
add
leave
add
addr16
xchg
cs
push
add
and
xchg
icebp
add
add
daa
cmp
fnsave
daa
sbb
outsb
vsqrtpd
adc
out
imul
adc
clc
xchg
loopne
scas
cmp
add
lods
xchg
pop
cmpsl
lahf
xchg
hlt
aad
lea
add
aas
shll
daa
test
cltd
aad
pop
cmp
into
jp
test
mov
add
xchg
xchg
and
int3
lods
add
mov
mov
pop
jns
mov
mov
or
sahf
idivl
test
sub
in
push
mov
sub
or
fildll
sub
in
js
sub
int3
or
add
xchg
enter
cmpsl
out
ds
push
push
or
test
xchg
jp
mov
sbb
sbbb
xchg
xchg
mov
fs
outsb
pop
mov
xchg
xor
cmp
fimull
mov
mov
sbb
into
repz
jne
fsubs
std
pop
inc
fadds
push
pusha
pushf
dec
repz
cmpsb
jl
lea
xchg
fisubrs
or
sbb
adc
ss
imul
pusha
inc
add
arpl
dec
sub
xchg
add
andl
inc
fnstsw
in
and
add
xchg
lods
outsb
dec
add
add
push
cltd
xchg
add
ss
in
add
mov
cmc
test
add
pop
mov
ret
ret
inc
stos
nop
add
addl
pop
xor
add
fadds
mov
outsb
mov
lds
aam
xor
add
mov
inc
cmpsb
add
xor
xchg
push
adc
add
and
sbb
popf
lret
aam
push
and
sub
sahf
adc
arpl
xchg
testb
mov
rcrl
test
outsb
pop
arpl
pop
ficoml
es
sbb
pop
push
cmpsl
add
or
push
pop
pop
xchg
xor
xchg
fwait
ja
xchg
shl
cmp
out
roll
pop
popf
and
push
push
mov
push
xor
notl
int
pop
stos
mov
fnstsw
pop
xchg
push
jle
pop
sbbl
mov
test
xchg
dec
xor
aad
mov
mov
test
subl
cmpsl
push
pop
jge
adc
lock
clc
push
jecxz
xchg
js
ficomps
nop
mov
jb
int
popa
cwtl
jg
cmp
lock
xchg
mov
scas
jns
add
loopne
sbb
test
cmpsb
add
insb
xlat
in
add
cmpsb
push
leave
adc
inc
pop
cmpsl
add
stos
and
int3
and
inc
adc
mov
add
jl
pop
cltd
and
or
inc
inc
cmc
fnsave
mov
push
add
lea
mov
xor
cmp
cmpsl
nop
sbb
add
es
pop
jno
jbe
sub
xchg
jl
jecxz
decb
xchg
in
push
push
mov
inc
fld
mov
adc
sub
add
ljmp
fs
sbb
arpl
mov
mov
mov
jns
adc
sub
lret
add
add
jbe
mov
jmp
sbb
add
xor
ret
jecxz
inc
outsl
iret
je
and
lock
mov
mov
jecxz
in
mov
imul
push
add
mov
cmpsl
ret
clc
inc
inc
and
and
or
loop
fidivl
xchg
cmp
push
jle
fbld
js
inc
add
ds
mov
cmp
add
loope
add
out
add
ret
jb
jno
icebp
or
scas
out
int3
xor
lods
test
adc
mov
jns
addl
lret
movsl
inc
xor
mov
pmaxub
add
inc
shl
add
filds
mov
add
add
ffree
add
jnp
or
add
rorb
incl
inc
lods
dec
out
xchg
imul
cs
je
cmpsl
shr
add
int
push
popa
movsb
call
call
push
add
lahf
add
lea
cmpsb
xor
pop
mov
add
sbb
movsb
mov
insb
mov
aas
int3
hlt
das
scas
xchg
les
jnp
jl
cmp
in
add
ret
lret
test
mov
mov
inc
add
addr16
push
shrb
fdivrl
es
clc
jbe
mov
mov
pop
cwtl
xlat
stc
xchg
mov
jae
mov
jb
notl
pop
mov
add
add
jae
mov
arpl
das
dec
sti
std
les
pushf
add
pop
jbe
es
nop
into
inc
es
cmp
and
inc
push
xchg
or
sub
mov
jnp
in
ret
data16
push
add
jmp
bound
xchg
lret
pushl
push
adc
adc
add
mov
fidivl
sub
xchg
add
sbb
cwtl
int3
add
sbb
addr16
jno
pop
xchg
cli
imul
nop
jae
inc
cmp
cwtl
pop
dec
lret
add
sbb
shld
mov
inc
insb
loope
mov
loopne
push
add
xor
sub
aas
dec
in
jge
je
popa
add
sub
adc
cld
add
adc
dec
push
jecxz
lret
add
add
es
sbb
test
test
sub
jge
cli
cmc
add
adc
push
pop
cmp
jae
outsl
push
push
mov
sbb
add
mov
adc
xchg
dec
push
dec
sbb
mov
add
or
loopne
jmp
sti
or
jno
ljmp
ljmp
das
hlt
stos
outsl
push
iret
add
mov
mov
outsl
add
push
out
and
adc
push
push
loopne
pushf
sbbl
sahf
call
xor
lcall
jge
shrl
fst
loop
andb
push
insb
and
js
add
dec
stos
adc
sub
jmp
cmp
cli
mov
fidivrs
add
xor
out
add
loop
or
dec
push
in
or
and
add
add
sbb
cwtl
mov
loope
in
fildl
out
mov
cltd
sub
arpl
sbb
jle
mov
add
xor
rcrb
out
int
mov
cmpsl
mov
add
inc
outsl
cmp
or
and
mov
imull
ljmp
push
rolb
shr
and
pop
mov
jle
stos
hlt
xchg
sti
stos
out
push
add
enter
add
out
push
mov
pop
stc
jnp
and
fisttps
jl
pop
add
jnp
loop
dec
cmc
stos
mov
pop
push
mov
sub
xchg
add
out
or
stos
sbb
das
and
xor
xchg
and
cmpsb
add
add
push
and
push
stos
cmpsl
cli
ret
shrl
mov
sub
inc
add
cld
jb
nop
sbb
inc
and
add
xor
pop
sub
lock
and
jo
mov
das
sub
jo
add
lods
adc
pushf
insb
mov
lea
fs
or
add
push
dec
lock
dec
push
fadds
dec
jp
jno
repz
pop
negl
aam
add
push
adc
int
adc
ljmp
addb
ss
xor
lds
fisubrl
pop
out
es
add
mov
nop
add
jge
add
add
pop
mov
lcall
pop
inc
mov
pop
popf
adc
xor
add
movsl
mov
or
inc
rcll
hlt
es
call
dec
or
xor
xor
adc
xor
movsb
pop
and
adc
dec
jns
sti
idivl
inc
xor
jg
dec
jge
sahf
imul
aas
xor
add
popa
mov
test
test
xor
and
into
mov
in
fimuls
pushf
test
and
add
test
jl
mov
dec
icebp
std
jge
inc
repz
popf
fwait
pop
iret
int
cmpsb
cs
add
fcmovnb
jne
dec
loop
push
mov
push
test
pushf
jmp
xchg
mov
add
fcoms
jecxz
arpl
insl
cld
mov
sub
sbb
xchg
das
loopne
lret
shrb
sbb
mov
jmp
dec
mov
mov
test
clc
xchg
add
fadds
push
jmp
jbe
add
xchg
mov
adc
das
mov
clc
cmp
pushf
or
sub
stc
fstl
into
sbb
sub
scas
sub
imul
push
or
imul
test
bound
add
jle
lock
xchg
mov
xchg
outsl
xor
mov
cmp
sbb
hlt
mov
add
mov
cld
mov
add
inc
add
arpl
in
subb
mov
dec
xor
or
or
or
sub
mov
dec
test
push
sub
lods
call
repnz
out
dec
dec
add
dec
movsb
add
add
loopne
leave
mov
add
add
and
addr16
jae
insb
enter
loop
add
js
clc
cmp
jb
push
add
add
mov
cld
in
cli
aam
add
int3
mov
clc
add
dec
sbb
pop
dec
jnp
sub
dec
pop
pushf
dec
add
cmpsl
add
adc
mov
lods
sbb
cmp
push
xor
add
sbb
push
xchg
xchg
add
jge
sbb
out
test
dec
nop
in
icebp
xor
adc
xor
loope
es
add
daa
ja
jge
add
jg
lock
jne
xchg
add
sbb
dec
call
scas
xor
imul
add
pop
lret
cmp
mov
fildll
push
sti
add
xorl
xor
mov
dec
repnz
adcb
add
add
inc
push
pusha
hlt
adc
cmpsl
add
push
or
mov
mov
cmp
popa
xchg
rclb
mov
xchg
mov
popf
pop
imul
aaa
mov
adc
fadds
sbb
stc
mov
aad
nop
cli
inc
add
filds
fbld
jae
gs
ds
add
mov
adc
ret
inc
sahf
add
fstpt
inc
xlat
add
out
cmpsb
sub
cmp
dec
sbb
mov
and
push
add
movsb
mov
jns
xchg
pop
shl
dec
xchg
test
inc
decb
into
cmp
lock
mov
cmp
fidivs
ljmp
cmp
sti
popf
adc
sub
movsb
dec
add
add
sbb
cld
aad
clc
xchg
inc
adc
cli
add
and
into
loopne
fwait
verr
gs
push
sub
mov
add
pushf
xchg
cmc
cs
push
std
imull
aaa
add
pop
add
daa
and
sbb
cmp
add
inc
add
ljmp
and
mov
mov
filds
add
lods
inc
sbbb
ljmp
pop
arpl
daa
inc
xchg
pop
in
or
add
sub
pushl
push
push
addr16
iret
movsb
pop
int3
add
or
add
add
dec
fcomps
add
aad
add
js
sub
mov
add
out
push
add
lea
or
inc
mov
insb
sahf
jne
jne
flds
inc
jecxz
lods
and
jne
pop
or
pop
or
and
ficoml
add
aas
shl
lcall
mov
jge
adc
xchg
push
shrb
js
outsb
inc
mov
mov
mov
pusha
add
in
mov
xchg
imul
je
dec
shl
cmp
call
cmovbe
xchg
add
movsl
dec
or
enter
sbb
pop
cli
pop
out
add
popa
adc
or
arpl
push
xor
fisubl
mov
enter
push
jg
add
lret
fwait
imul
mov
pop
leave
lea
scas
incb
or
adc
xor
xchg
push
xor
sahf
into
lahf
js
add
lahf
mov
sub
sbb
mov
add
add
mov
add
and
gs
pushf
sbb
pop
or
push
nop
and
and
pop
hlt
cmc
sarl
push
es
stos
mov
jge
sti
xchg
addl
test
xchg
add
mov
stc
add
and
stos
add
int3
xlat
scas
cmpsb
cmp
inc
aas
add
out
add
hlt
sub
add
addl
vaddsubpd
xchg
sub
sbb
xor
aaa
and
add
out
mov
pop
add
inc
popf
cmp
sbb
pop
fldcw
add
sub
lret
push
mov
in
jbe
jbe
jl
adc
aam
add
imul
cmp
lret
add
hlt
sbb
sahf
pop
dec
jnp
mov
inc
mov
or
xchg
jecxz
add
xchg
pop
test
inc
add
cwtl
mov
xlat
push
out
mov
insb
lods
add
add
push
out
sbb
cli
pop
or
mov
adc
icebp
repnz
add
mov
add
les
sti
push
mov
jae
adc
inc
add
push
pop
xchg
mull
aad
insl
sub
sub
pop
sti
addb
add
add
imull
loope
xor
cmp
or
in
or
loop
repz
decb
pushf
aad
push
mov
out
add
pop
xchg
push
pusha
lods
xchg
add
cmp
aam
mov
push
add
push
push
add
call
mov
test
adc
mov
jge
mull
sbb
or
inc
cmp
add
movsb
outsl
dec
cwtl
test
add
inc
clc
sahf
mov
jmp
icebp
loop
movsb
xlat
lret
cmp
cmp
dec
add
movsb
push
pop
loop
bound
xchg
int
fdivl
add
push
add
lods
cmp
xor
into
mov
fsubrl
rol
popf
ja
cmp
popa
into
or
out
pop
popf
push
sbb
push
jge
test
xchg
adc
jnp
or
shl
loope
xor
cmp
gs
xor
mov
sub
and
lods
negl
pop
add
jo
std
sub
push
ss
lahf
or
cli
add
mov
xchg
mov
add
movsl
incb
inc
dec
add
and
loop
cmp
imul
std
std
jmp
inc
add
dec
xchg
mov
repz
push
or
push
sub
xchg
push
inc
aaa
inc
scas
and
xchg
out
flds
fnstenv
ljmp
cltd
jae
es
mov
add
ret
andps
adc
jp
sub
fdiv
outsl
lcall
mov
test
mov
es
add
mov
add
lcall
inc
fistpll
mov
add
sbb
out
jp
adc
add
pop
push
arpl
and
sub
push
cltd
dec
jo
cmp
scas
andl
out
out
loopne
adc
lea
jb
out
mov
bound
push
xchg
daa
add
adc
add
dec
push
cmc
or
push
add
add
adc
mov
jo
add
in
jns
pop
xlat
ljmp
add
dec
xor
add
sub
sbb
sarb
mov
inc
dec
aam
sarb
insb
pop
sub
or
out
add
cmp
push
mov
test
push
out
adc
dec
mov
mov
jnp
ljmp
sahf
call
loop
push
icebp
fisttpll
cltd
lcall
lea
cmp
jne
out
movsl
fwait
bound
xchg
repnz
mov
sub
jae
enter
pop
fs
adc
xorl
inc
pop
mov
or
mov
test
add
addb
sub
dec
jmp
inc
ltr
sub
adc
jne
push
mov
add
xchg
push
pop
cltd
and
cmp
sbb
jl
jg
aaa
add
adc
xor
sti
arpl
nop
out
mov
add
fisttpl
lods
loope
lods
add
pusha
in
mov
pop
in
es
add
adc
push
add
adc
inc
and
in
add
inc
int
mov
cmp
mov
pop
add
push
clc
outsb
mov
sbb
pop
add
inc
add
mov
inc
inc
add
xchg
sbb
shr
out
cwtl
aad
ljmp
lret
popa
loop
pop
mov
cli
and
mov
push
sahf
shl
insb
xor
mov
xchg
clc
inc
add
xchg
xchg
int3
scas
inc
lea
test
data16
imul
out
loopne
cli
shl
test
cmpsl
in
adc
std
scas
jle
stos
mov
pusha
add
add
shll
stos
add
dec
dec
sbb
cmc
in
add
inc
enter
add
jecxz
xchg
push
stc
add
mov
fstpl
add
rcr
add
aad
bndldx
cmc
push
xor
jbe
add
add
aaa
xlat
inc
int
jl
inc
jnp
push
add
aaa
and
pop
and
fmull
aaa
popf
sbb
mov
lds
lods
add
rcrl
inc
rcrb
movsb
add
sbb
rcrl
insb
stc
scas
mov
fistpl
fcomp
loopne
rcr
xor
stos
outsl
fxch
scas
sub
loop
jle
and
pop
push
mov
and
xchg
sub
cmpsb
movb
popf
stc
mov
int
sbb
sbb
rolb
add
add
aas
insl
sti
rcll
cltd
jns
ficoml
dec
xchg
ljmp
std
xchg
push
add
arpl
notl
test
fisttps
or
testl
xchg
gs
add
fstps
xor
add
scas
adc
mov
in
ds
je
cmp
lahf
sub
fwait
jne
dec
sbb
sub
mov
xlat
mov
push
adc
in
aaa
or
sub
cmp
popl
cli
xor
push
dec
jp
out
sbb
or
shrl
data16
pop
int3
add
lods
ret
test
ret
out
pop
lea
loopne
add
cmpsl
shlb
xor
scas
add
in
xor
out
add
dec
insb
fs
mov
mov
xchg
out
add
push
mov
sbb
dec
jmp
inc
sbb
stc
mov
add
imul
add
and
mov
movsl
mov
xchg
stos
push
imul
rcrl
sbb
out
jp
aad
orl
push
ror
loop
sahf
loopne
push
mulb
push
xchg
mov
xor
push
int
cmp
inc
cli
mov
and
xor
jmp
ficoms
movb
int3
cmpb
xchg
inc
jmp
push
daa
cld
pop
mov
fdivs
add
roll
mov
lahf
add
sahf
mov
hlt
stos
mov
sahf
addb
inc
xchg
xchg
mov
mov
lret
sub
imull
movl
jne
add
mov
add
jp
add
push
xor
sub
sti
xor
cmpsb
lds
sbb
cltd
test
fnstsw
iret
mov
sbb
stos
cltd
iret
icebp
pop
fiaddl
scas
jge
add
and
lret
stos
xchg
ret
bound
add
roll
sub
cmpsl
mov
rolb
xchg
inc
and
mov
jns
add
xor
out
lret
pop
test
sbb
insb
clc
in
sub
jl
add
cmp
add
test
fimuls
and
mov
scas
roll
pushf
jl
pop
xchg
pop
clc
add
sub
cmp
sub
or
out
dec
xchg
ja
shll
add
setl
cmp
add
cmpsl
add
inc
clc
scas
sub
lret
xchg
mov
add
cmp
cmpsl
repz
leave
popl
fisttps
inc
adc
inc
xchg
mov
cmp
test
cltd
add
or
jge
iret
out
xchg
dec
cmp
adcb
sub
es
add
xchg
rolb
add
filds
sub
repz
data16
add
fs
pop
cmpsb
add
push
push
icebp
cmp
and
mov
pop
add
ss
enter
jp
lods
cmp
popa
add
addb
add
mov
aad
lds
inc
movl
xor
inc
jmp
mov
cmpsl
add
out
adc
ret
add
adc
pop
add
lock
lods
sub
fildl
pop
xor
bt
dec
mov
pop
sub
lods
sbb
pop
call
bound
xchg
outsb
xchg
popf
jne
jge
jae
mov
fwait
dec
cmp
fiaddl
jnp
insb
add
adc
cld
fwait
addr16
add
dec
add
clc
rcrl
mov
ja
ljmp
add
inc
xor
mov
jb
mov
add
jmp
mov
mov
out
pop
dec
mov
mov
in
add
out
pop
add
aad
sub
push
cld
add
add
mov
add
add
push
add
imul
mov
jge
lea
inc
inc
lods
cmp
ret
fadd
movsb
add
loopne
inc
sahf
sahf
mov
fwait
sbb
out
icebp
sysexit
pop
popa
adc
daa
push
mov
add
stc
mul
push
dec
add
lods
add
push
push
lret
fildl
test
nop
pop
lods
push
push
sub
mov
add
scas
xor
sarl
test
repnz
inc
pusha
ficoml
jle
cmp
daa
dec
loop
add
pop
mov
movq
push
add
popa
pushf
movsl
mov
push
ficoms
pop
into
push
inc
les
mov
pushf
and
mov
nop
jg
sbb
push
dec
and
rorl
test
aaa
lods
push
lret
add
int
ret
mov
fs
lods
sub
add
add
sti
pop
xchg
insl
lahf
sub
ss
mov
std
adc
cmc
pop
cli
adc
cmc
cmp
push
test
dec
mov
inc
jecxz
pushf
out
sbb
lret
add
sti
xchg
xchg
rorb
fs
cli
cmpsl
imul
mov
add
mov
mov
icebp
add
dec
cmpsl
into
add
fidivs
daa
out
sub
addl
inc
je
pop
sarb
cmp
pop
ficomps
test
popa
fildll
movsb
shl
sbb
cmp
inc
subl
test
addb
vaddpd
jbe
cmp
jnp
cmpl
xchg
mov
jle
aaa
fimuls
push
cwtl
pop
test
cwtl
adc
arpl
mov
push
and
xchg
add
cwtl
leave
mov
pop
xchg
add
add
insl
add
pop
xchg
fcmovnbe
es
cs
add
add
gs
mov
lds
movsl
cmp
mov
cld
pop
mov
ficompl
add
cmp
cmp
pop
cmc
repz
add
pushf
mov
xor
mov
jle
jbe
sub
test
adc
add
aas
add
rcrb
add
lahf
cmpsl
dec
mov
hlt
inc
sbbb
add
adc
fdivrp
mov
gs
inc
inc
in
xchg
sub
xchg
std
mov
ljmp
shrb
cs
lcall
int
xchg
dec
push
repnz
cmp
jl
stos
add
xor
add
add
js
into
fldl2t
xchg
jb
dec
lret
lods
out
inc
movb
mov
add
fbstp
and
scas
or
inc
jecxz
test
enter
xchg
mov
jns
fisttps
xchg
repnz
dec
andps
lret
add
jae
aaa
sti
and
mov
fildll
jae
enter
jmp
cwtl
cmpsb
scas
stc
ss
xor
addl
pop
mov
xlat
inc
mov
fcmovnb
cwtl
mov
add
cmc
add
cmpsb
jbe
push
adc
int3
addr16
cld
pop
adc
mov
lcall
inc
cld
pusha
mov
jmp
push
jne
add
sbb
dec
mov
aas
sub
lock
clc
out
add
xor
add
jnp
cltd
jmp
add
jo
xor
pop
popf
rcl
and
ja
sub
push
add
inc
mov
inc
stc
enter
jno
add
out
pop
in
mov
fildll
add
cmp
and
or
mov
pop
jns
adcb
dec
aaa
out
sub
mov
in
push
cmpsl
xchg
jp
loopne
fcmovnu
mov
add
jbe
movsb
mov
lcall
inc
aas
add
pop
mov
add
aad
lods
add
and
dec
lock
in
enter
mov
push
inc
xchg
push
loop
cmpsb
les
pop
popf
jne
cmc
inc
and
dec
inc
arpl
jge
inc
jnp
jae
xor
into
je
fxch
inc
jae
pop
in
std
xchg
dec
add
xchg
lea
mov
xchg
out
add
dec
jl
addl
ja
shrb
push
sti
pop
movl
faddl
xchg
add
inc
xor
movsb
push
xor
adcl
add
pop
add
add
rcr
cwtl
pop
enter
adc
clc
sub
out
cmpsb
jo
pop
add
lahf
push
add
jp
mov
lret
mov
push
ds
ljmp
pop
test
add
ss
outsb
push
into
ja
push
fucomi
fcmovne
or
xlat
fildll
pop
aaa
add
subl
add
inc
mov
sbb
mov
add
add
jge
out
rorb
negb
jl
jl
iret
test
push
xchg
fildl
add
mov
movsb
add
xor
dec
pop
jae
adcb
pop
js
imul
lcall
adc
inc
std
add
andl
mov
jb
mov
dec
shrl
add
mov
mov
sbb
sbb
clc
fldcw
jnp
int
sub
pop
out
and
cli
sub
popf
dec
add
mov
scas
outsl
mov
add
test
shrl
cmc
lret
push
add
xchg
or
dec
add
and
das
int3
ds
mul
inc
add
push
addb
push
push
mov
sub
in
push
xchg
mov
das
sarl
mov
das
add
jnp
cmpb
add
add
xchg
mov
hlt
inc
cli
add
pop
imul
lods
shll
jns
in
xchg
stc
clc
fsubrs
psrlw
loope
xlat
lret
sub
or
loopne
cmp
hlt
add
mov
aas
lock
xchg
adc
add
sti
imul
adc
in
mov
push
lea
mov
jne
xor
adc
daa
inc
mov
test
aad
cld
pusha
lea
pusha
add
loopne
add
sub
imul
xchg
jp
pop
fldl
add
and
lock
dec
add
mov
mov
pop
fsubs
cmp
mov
stos
test
loope
cli
sbb
jp
add
std
inc
cmp
sbb
movsb
mov
test
andl
jae
xchg
iret
add
out
push
xor
insb
mov
xchg
adc
sbb
mov
daa
mov
jae
add
inc
inc
iret
add
jns
jae
push
sbb
inc
or
sub
jb
add
pop
add
add
stc
inc
adc
add
repz
mov
lret
jmp
push
jl
dec
popf
mov
xchg
add
add
ret
sbb
dec
add
jge
push
pusha
mov
icebp
es
test
push
lahf
lock
add
dec
push
or
rcrl
movsb
mov
call
movsl
add
scas
jno
jne
xor
sub
rclb
adcb
int
lcall
fcomi
rcr
sbb
addr16
jp
hlt
jp
cwtl
push
inc
fcomp
add
xchg
jl,pn
push
cld
jae
xchg
xchg
lahf
daa
sbb
xchg
fmul
add
lahf
lret
add
adc
imul
incb
fiadds
sbbb
pushf
push
shll
add
jb
inc
jb
sbb
add
push
add
ljmp
sub
clc
test
cmp
or
push
mov
rolb
pop
lock
stos
add
es
ljmp
aas
xchg
dec
adc
rcr
push
pmullw
test
xchg
cli
mov
xchg
int
arpl
dec
push
dec
adc
jae
sbb
push
and
lock
add
int
iret
orl
mov
sub
arpl
jge
insb
das
repnz
add
pop
mov
cmp
repz
add
ja
xorps
fs
jns
add
mov
inc
loopne
add
dec
in
mov
xchg
xchg
add
fwait
add
cwtl
fildl
jbe
aas
int3
outsl
add
loope
push
add
xchg
shrb
sbb
xchg
add
xchg
ss
in
aad
jge
xchg
add
push
in
and
mov
xorb
sbb
mov
imul
add
add
jecxz
mov
or
adc
dec
mull
mov
mov
cmp
jbe
add
in
mov
sarl
lcall
add
push
mov
repnz
sub
and
loopne
lcall
pop
xlat
idivl
ror
lods
mov
jnp
sub
jge
cmc
adc
add
insb
sbb
mov
cmp
cmp
jae
into
add
adc
int
aas
jns
es
add
and
mov
js
add
and
sub
lock
push
pop
add
pop
and
xor
cs
xor
or
ficomps
mov
inc
and
subl
fdivr
mov
sbb
rolb
xchg
setnp
xchg
cld
inc
xchg
lret
mov
pop
adc
inc
pop
outsl
sbb
adc
stos
xchg
add
pop
repz
ljmp
adc
mov
dec
adc
jle
push
in
add
cmp
adc
shl
mov
add
add
add
sub
dec
arpl
shlb
and
aam
sbb
xchg
hlt
push
add
fwait
icebp
mov
add
cld
xor
fiadds
jecxz
and
incl
sar
cmp
or
repnz
dec
in
rorl
add
inc
add
icebp
dec
adc
fiaddl
nop
pop
jl
add
or
aaa
add
add
fdivr
rep
fldl
add
mov
add
jg
xorl
aas
jb
add
jmp
popa
add
stos
lret
inc
sarb
add
popf
aam
sbbl
add
pop
ss
or
es
stos
js
mov
jp
jmp
arpl
add
les
repnz
push
out
lcall
and
inc
cmp
add
test
mov
jmp
adc
das
cmpsb
or
pop
adc
pop
sub
incl
add
xor
xchg
rcll
add
mov
daa
push
add
xor
push
roll
xor
push
push
jno
add
push
outsl
add
mov
jnp
fucomip
push
add
std
inc
sbb
ret
xor
jecxz
sub
xor
pop
push
ficoml
or
iret
add
popf
and
mov
ret
pop
sbb
aaa
pop
mov
js
cltd
pop
xor
cld
mov
add
add
arpl
mov
into
xor
js
pop
hlt
pop
push
aad
xchg
add
add
push
mov
and
dec
cli
and
shlb
ds
ret
push
mov
inc
mov
fstl
pop
ret
das
in
inc
add
loopne
ret
push
sub
adc
lock
addl
out
pop
stos
sbb
mov
shrl
push
push
xlat
mov
sbb
iret
insl
inc
push
movsb
and
scas
arpl
add
out
sti
lret
xor
pop
add
adc
stos
ret
xor
adc
jmp
in
add
or
xor
mov
dec
add
out
or
add
sbb
sahf
test
mov
mov
push
scas
add
add
add
stc
add
ljmp
aad
add
adc
mov
pusha
mov
sti
pop
jg
pop
pop
iret
fdivs
add
mov
imul
mov
and
arpl
push
jmp
out
notb
pushf
and
sub
add
fwait
imul
or
push
xchg
cmp
add
out
sub
jl
in
or
pushf
jle
mov
aaa
inc
ret
add
add
dec
gs
add
cmp
inc
and
inc
sub
push
cmc
ds
lds
push
mov
sub
push
add
jae
sub
dec
sub
mov
pop
sbb
mov
add
ja
adc
add
xchg
es
pop
ds
push
add
jecxz
les
aad
mov
xchg
ljmp
or
jp
add
aad
inc
les
jbe
lods
das
add
mov
sub
int3
sbb
addb
cld
push
jp
insb
push
imul
jns
pop
sbb
push
jnp
add
scas
mov
mov
sbb
scas
test
fldt
add
rcll
mov
add
mov
jno
out
add
xchg
loope
cmpsb
clc
mov
femms
mov
push
out
stos
dec
add
dec
data16
fdivrs
scas
loop
add
lahf
jmp
ss
inc
loope
outsb
mov
mov
add
mov
pop
je
fcmovnu
arpl
les
push
or
adc
out
push
or
add
or
xor
popf
test
jbe
stc
push
rcrb
add
jno
mov
data16
sub
add
add
int3
cld
inc
mov
mov
ss
loopne
neg
push
push
xchg
add
cmp
lcall
mov
loopne
push
add
jno
jae
mov
mov
icebp
mov
sub
push
push
pop
add
std
jno
pop
arpl
lcall
daa
add
repz
out
stos
adc
mov
jle
add
jno
mov
jmp
insl
mov
jge
pop
fs
add
sarl
mov
xor
push
loopne
mov
add
add
jmp
or
fstps
mov
add
and
dec
xor
lea
les
mov
add
mov
movups
xchg
iret
sti
popa
in
cmc
mov
pop
jmp
repnz
push
push
sbb
jecxz
push
sahf
add
loopnew
jne
fadd
js
add
xchg
cli
idivb
lock
mov
or
fisttpll
mov
addb
jl
test
xchg
inc
je
jno
or
xor
add
mov
inc
aad
push
push
cld
pop
pop
cli
pop
adc
add
dec
sub
aas
clc
and
adc
and
sbb
xor
and
movsb
loopne
and
mov
jmp
js
pop
icebp
lock
adc
shlb
cmp
lds
inc
ss
push
iret
imul
mov
ror
and
in
or
and
add
add
clc
add
xchg
mov
sub
inc
rorb
add
adcl
mov
mov
fbld
inc
add
push
pushf
inc
mov
negb
notb
mov
xchg
or
jle
pusha
mov
mov
add
jl
loop
mov
dec
jns
inc
add
or
bound
jge
outsb
and
fwait
pusha
sbb
iret
insb
lahf
mov
or
les
add
mov
pop
mov
xor
dec
dec
popa
dec
mov
sbb
test
push
pop
inc
or
mov
sbb
and
jg
mov
mov
clc
stc
add
add
and
bound
xor
mov
ds
bound
mov
test
movsl
jl
aaa
sub
cld
sahf
testb
rolb
sbb
std
outsb
jecxz
add
es
jb
stos
and
hlt
adcl
xchg
add
cmp
xor
pop
aam
fsub
sub
les
cmpsl
and
xchg
dec
cmp
stc
shr
outsl
xchg
mov
add
shrb
sbb
pop
jmp
xchg
add
sbb
ret
nop
jl
outsb
ljmp
add
add
push
cmc
mov
add
cld
xchg
sar
loop
gs
adc
xchg
testl
dec
jmp
inc
cltd
leave
lcall
stc
cmc
out
add
fists
xchg
cs
push
inc
sub
pop
std
inc
icebp
clc
dec
jo
in
adc
arpl
popa
pop
lretw
testl
add
jecxz
int3
xchg
fsubrl
mov
jno
add
mov
cmp
add
popa
adc
movsb
testl
adc
or
cwtl
fwait
std
push
xchg
lret
es
mov
or
loopne
push
xchg
popl
adc
and
orl
sti
cmpsl
adc
dec
push
ret
stc
xor
push
ret
jp
jl
mull
sbb
jle
add
xor
pop
cli
and
mov
out
jo
enter
stos
insl
add
stos
test
add
loope
dec
cmp
dec
add
mov
xchg
test
loop
add
inc
mov
jns
mov
dec
daa
clc
add
mov
jae
addr16
mov
test
out
jb
mov
cld
mov
jae
jo
addr16
incb
into
aad
push
pop
fsubr
mov
add
jle
pop
cwtl
sbb
or
jo
mov
sub
cltd
stos
add
add
pop
testl
lods
xor
and
push
push
insb
push
jp
sub
add
add
ds
sub
fdivp
ret
int
aas
add
cmp
add
mov
xchg
add
add
and
push
sub
and
adc
repz
add
repz
or
dec
cld
js
push
jne
lret
insl
push
xor
inc
add
ss
int
jno
outsb
out
jge
popa
add
cmp
pop
fsubs
mov
pop
pop
mov
or
add
cmpsb
push
mov
or
lcall
jae
sahf
lods
les
xlat
dec
inc
add
je
out
add
dec
add
inc
xor
jp
xchg
fstpt
inc
sbb
jge
fiadds
decb
add
icebp
push
mov
aad
test
and
stos
push
xor
add
into
push
out
mov
pusha
mov
in
enter
push
mov
sti
xor
js
add
push
add
push
adc
push
add
and
popa
roll
add
mov
scas
nop
sub
data16
movsl
jb,pt
adc
aam
sahf
jnp
add
inc
xlat
pop
or
ret
add
imul
jge
add
mov
or
movsb
pop
xchg
mov
sti
dec
add
aam
pop
jmp
lret
ljmp
in
test
mov
add
hlt
mov
xchg
dec
xlat
clc
imul
mov
jns
mov
leave
stos
dec
aad
movsb
push
outsl
iret
push
or
addb
fbld
cmpb
adc
testl
add
add
in
add
mov
ss
push
mov
shl
add
mov
mov
adcb
aad
adc
add
push
add
add
adc
add
not
sub
xchg
cmp
add
sub
jae
icebp
add
cwtl
stos
add
testl
pop
cmp
push
xor
std
daa
xor
add
imul
das
inc
sbb
and
or
pop
pushl
cwtl
ss
add
add
pop
add
add
lcall
xchg
std
or
fldl
adc
cmp
mov
push
jmp
stos
push
decl
mov
les
iret
sub
lcall
outsl
jl
xor
fildl
fdivs
pushf
add
cwtl
sbb
cmc
push
pop
add
add
les
sahf
add
add
ret
aaa
fwait
adc
add
in
add
xor
cs
movsl
cmpsl
mov
aaa
leave
dec
push
adc
mov
inc
faddl
mov
popf
fisubl
outsb
in
add
pop
insl
or
xchg
aad
lret
xchg
pmaxsw
mov
pop
add
and
add
jl
call
sti
xor
les
add
jo
adc
leave
cmpsl
push
shrl
mov
fdivs
add
push
cmp
fistpll
inc
nop
clc
xor
pop
ret
ljmp
sti
jl
add
call
push
ret
nop
lods
dec
push
jo
sbb
outsb
adc
add
mov
adc
xchg
loop
mov
mov
movsl
add
jle
xchg
sub
xchg
or
and
loope
push
loope
lds
cltd
outsl
xchg
mov
lds
sub
jno
and
cwtl
add
ss
mov
call
cwtl
push
out
std
sbb
aam
sbb
in
xor
fsub
inc
sahf
sbb
pushf
sub
aaa
insl
inc
sbb
push
repnz
ss
jl
cmp
add
inc
lds
jge
or
push
mov
mov
cmp
add
pop
movsl
verr
out
add
add
cmpsb
pop
add
ljmp
shlb
add
sbb
add
insb
inc
add
testb
sbb
sbb
out
mull
stos
dec
add
add
fstpl
cmp
add
xchg
push
ficomps
cmp
push
daa
jo
cld
cmpsb
mov
sub
lods
int
icebp
xor
adc
stos
add
sbb
xchg
loopne
or
and
testl
add
and
lods
push
dec
roll
add
jb
add
xchg
inc
add
mov
pop
mov
jmp
or
addr16
jg
add
dec
aas
addr16
add
shl
pusha
pushw
cltd
and
pop
xor
add
inc
jle
add
xor
xchg
xor
mov
movsb
mov
push
push
mov
and
pop
and
add
js
or
sbb
pop
lret
xchg
or
lcall
add
add
jle
or
cmp
and
mov
std
and
jnp
or
xchg
jl
dec
pop
sbb
add
testb
mov
jp
mov
cmc
sub
roll
call
nop
and
add
repz
add
shlb
mov
mov
adc
pusha
xchg
out
insl
or
xchg
jl
push
stos
jmp
and
add
xchg
or
ja
jnp
iret
or
add
mov
test
adc
pop
out
aas
dec
xchg
mov
fs
popa
and
fnsave
add
add
lods
mov
jecxz
jns
pushf
push
pop
push
mov
lcall
dec
mov
sbb
cli
jb
adc
lcall
mov
dec
clc
aas
cld
inc
sbb
xchg
xchg
xchg
sbb
bound
mov
add
fwait
into
shlb
in
inc
cmp
add
xchg
es
jb
sub
movsb
mov
adc
ret
mov
push
add
pushf
sub
es
ror
mov
add
movsb
xor
jnp
xchg
push
add
mov
inc
ljmp
cmc
adc
mov
xchg
add
or
insb
mov
shrl
sti
sbb
repz
dec
addl
enter
stos
ss
pusha
or
sbb
enter
and
pop
cmpl
fstpt
push
ret
xchg
inc
sub
and
pop
push
pop
jmp
sub
fildll
out
adc
inc
add
repz
sarl
out
xchg
adc
xchg
loope
sub
add
out
adc
add
sub
lret
lahf
ljmp
mov
sub
les
in
data16
popf
cmp
pop
movl
mov
je
add
movsl
in
sbb
push
xor
mov
add
data16
sub
xchg
addr16
scas
pop
xlat
add
lcall
call
mov
push
inc
fdivp
sti
and
xchg
add
add
pop
rorl
or
outsl
add
push
mov
call
les
add
cmp
pop
add
test
add
adc
mov
adc
pop
fwait
sbb
pusha
fidivrs
mov
lret
xor
or
std
mov
lds
cmp
or
jle
outsb
outsl
and
push
mov
jecxz
and
add
lds
addl
sbb
jl
and
sub
jge
idivb
mov
add
cmpsb
roll
add
inc
cld
xor
cwtl
mov
add
out
call
loop
add
pop
or
inc
fistpll
add
add
adc
mov
lea
pop
add
xchg
int3
dec
cs
dec
bound
lret
push
int
push
lcall
mov
test
loope
add
add
mov
push
add
in
pop
xor
jl
rorb
add
stos
add
push
jmp
call
pop
mov
mov
ret
mov
cmp
in
mov
push
test
add
loop
sahf
fwait
mov
and
xchg
cs
add
lds
push
std
xchg
xchg
mov
jp
xorl
imul
dec
cli
and
xchg
xor
xchg
iret
inc
arpl
lds
mov
add
cmpl
int
fmuls
arpl
mov
jg
es
adc
loope
daa
test
add
rorl
xchg
xchg
dec
mov
ds
mov
out
arpl
or
pushf
insb
pushl
loopne
js
jae
je
repnz
add
adc
mov
arpl
ljmp
hlt
inc
jb
pop
fdivrl
push
sub
in
nop
add
into
add
out
add
cld
lret
cmp
jbe
lods
push
mov
sub
cmp
clc
mov
sub
xor
das
push
xor
int3
in
sar
inc
add
sub
pop
sub
sub
add
and
xchg
cmp
scas
loop
and
dec
std
ljmp
ljmp
pop
mov
or
cmp
pop
mov
mov
nop
imul
rcll
adc
lret
subb
or
cwtl
jbe
not
ret
add
adc
clc
mov
cs
xchg
xchg
inc
ja
cmc
add
jns
movsb
sbb
add
cmp
out
adc
dec
testl
jmp
and
loope
push
mov
ret
xchg
pop
shll
pop
xor
xor
inc
and
push
sarl
jmp
mov
or
sahf
mov
pop
xor
rcr
les
add
in
add
mov
nop
out
mov
enter
int
pop
push
dec
add
add
jne
inc
add
popa
pop
shrl
cltd
call
and
jg
adc
jb
push
mov
add
and
inc
or
mov
adcb
rcll
mov
mov
bound
add
insb
popa
xchg
and
add
cmp
xor
add
lahf
inc
mov
setb
and
xchg
movsb
add
movsl
and
jle
inc
out
and
data16
add
into
add
jge
xor
add
pop
jg
scas
dec
pop
add
testl
leave
in
ljmp
add
je
out
movb
jmp
cs
and
fcmovnb
roll
and
dec
lods
ja
add
loop
or
xor
sub
fcompl
xorb
add
dec
add
shrb
es
add
mov
sub
arpl
mov
add
test
lea
mov
sahf
push
jnp
test
out
jo
add
loope
push
mov
sbb
in
sbb
shlb
roll
jp
sub
cli
mov
jmp
add
das
xlat
adc
cmpsb
mov
pop
data16
sti
inc
xchg
pop
add
repnz
mulb
cmpsb
test
jno
pop
sub
jb
lods
and
add
xor
xchg
dec
add
mov
call
dec
pop
sub
mov
pop
xor
test
insl
dec
das
xchg
call
add
xchg
outsb
push
filds
ja
repnz
push
lret
add
xlat
fwait
jmp
adc
mov
xchg
pushf
mov
dec
or
es
shl
jge
jl
jns
in
and
pop
pusha
dec
jb
add
testl
add
pop
xchg
out
fdivs
cmp
sbb
mov
lcall
mov
xchg
sbb
pop
sub
jl
adc
ltr
out
pushf
adc
xchg
add
stc
popf
cmc
sub
insb
or
jb
in
nop
adc
loop
add
add
and
stos
add
cmp
mov
mov
push
loop
lcall
pop
xchg
fisubl
and
add
or
cwtl
push
das
adc
mov
mov
nop
and
add
pushf
xor
dec
add
rolb
push
pop
mov
out
add
xor
lods
lds
int3
pop
push
or
push
xor
bnd
lcall
orb
shll
shl
out
stc
loope
outsl
rol
fimuls
push
je
xchg
imul
out
mov
stc
add
fldenv
xor
add
dec
leave
aam
sub
repz
in
test
mov
dec
xchg
add
pop
roll
test
add
iret
repz
pop
xor
aad
inc
and
xchg
call
std
in
mov
inc
lahf
pushf
sbb
jnp
dec
mov
lea
arpl
and
pop
inc
mov
out
inc
cmp
add
push
inc
ds
loope
push
movsl
dec
mov
sub
gs
jle
and
add
pop
pop
xchg
add
cmpsl
out
iret
pmullw
xchg
add
es
sbb
add
cmpl
addr16
mov
jb
mov
test
bound
mov
add
add
sub
outsb
icebp
fwait
stc
push
repz
repnz
add
ret
sub
dec
xor
cmp
xor
addr16
das
add
dec
je
dec
add
imul
das
and
pop
mov
pop
in
dec
cli
jg
shlb
ja
xor
in
xor
clc
or
or
popa
mov
mov
scas
repnz
mov
mov
xchg
add
pusha
les
mov
out
dec
sub
add
jl
cld
pop
bound
mov
mov
adc
int3
popa
xchg
rolb
pushf
dec
add
es
dec
add
add
cmc
mov
andb
jne
rorl
movsb
sti
add
stc
add
insb
test
stc
aad
xor
fdivr
xchg
cmp
cmpsl
jle
out
push
pushl
loop
and
cmp
push
in
mov
jg
mov
fs
add
push
push
add
outsb
add
cs
pop
sub
or
pushf
dec
bound
mov
inc
cmovb
mov
addl
into
dec
jns
and
add
inc
xchg
mov
shll
add
sbb
xor
inc
notl
pop
fs
mov
outsb
add
or
add
jle
gs
adc
das
ret
jle
sub
pushf
fcmovbe
hlt
and
adc
lock
mov
dec
scas
sub
add
mov
orb
mov
scas
data16
call
ss
and
in
lods
xor
add
pusha
sahf
movl
mov
mov
fs
add
scas
xchg
xchg
mov
loopne
mov
push
hlt
sbbb
sbb
push
add
mov
lret
dec
ret
add
add
xchg
or
aad
mov
pop
jb
jnp
xor
faddl
loop
mov
jo
pop
stos
push
mov
test
nop
add
cmp
test
jbe
test
shll
mov
pop
mov
pop
movsl
pop
out
sbb
in
inc
jp
outsl
scas
rcll
movsb
pop
cmpsl
and
cli
cmpsb
jo
fs
push
jns
out
std
push
roll
popa
add
in
in
pushl
jp
ljmp
pop
xchg
aad
or
cmp
mov
insb
inc
add
daa
orl
cmp
inc
fwait
leave
arpl
iret
xchg
jge
adc
add
test
stos
imul
mov
add
xchg
cmpsl
lcall
mov
push
add
xor
and
out
add
cmp
adc
sbb
pop
dec
mov
push
aam
std
inc
shlw
push
in
add
loopne
fwait
clc
inc
pop
ljmp
pop
and
leave
jno
sbb
add
inc
add
lahf
jp
sbb
cmp
sbb
fisubrl
cmp
add
in
add
leave
add
add
lods
add
cs
stos
repz
loope
loopne
add
pop
add
and
test
mov
sub
mov
mov
adc
clc
push
popa
in
add
cli
inc
mov
jmp
cli
roll
data16
out
nop
outsl
add
clc
and
leave
faddl
aam
dec
sbb
and
or
push
push
xchg
mov
leave
fs
gs
rol
add
scas
lds
cmp
inc
leave
repnz
add
pop
out
or
or
mov
mov
insb
jno
jae
dec
cli
popa
add
adcb
mov
push
ficomps
pushf
add
shlb
mov
lods
add
das
add
clc
xor
scas
sub
in
dec
push
scas
xchg
gs
jp
fnsave
adc
or
pop
add
dec
mov
test
sbb
aas
inc
add
imul
fcomps
push
in
pop
in
jg
jb
outsl
int3
push
cmp
ds
lret
and
push
ss
in
imul
out
popa
add
and
inc
test
rorb
cmp
adc
scas
xor
repnz
inc
lret
pop
popa
push
ret
mov
push
pop
cmp
test
inc
mov
mov
sbb
dec
push
and
scas
lret
jo
pushf
inc
js
sub
mov
stos
outsl
add
jg
jp
mov
mov
sbb
loop
jl
push
sbb
cmp
pop
add
dec
loopne
add
sahf
add
shlb
ret
bound
add
add
pop
cld
mov
add
add
outsl
add
lea
popw
mov
add
pop
leave
inc
addr16
adc
rorb
filds
pusha
push
xchg
pushf
pop
sub
add
pusha
int3
clc
add
cmp
pop
jp
jle
mov
movsb
sbbb
sub
push
pop
dec
mov
mov
sub
adc
cmp
jmp
sbb
push
negb
stos
add
jl
dec
rcll
cmp
push
pushf
push
pop
mov
add
jecxz
outsb
insl
pop
push
rcrl
and
xchg
mov
push
mov
add
into
add
add
inc
adc
popf
mov
test
mov
test
bound
out
add
movsl
dec
gs
loopne
enter
add
loope
insl
ljmpw
cli
add
outsb
add
mov
into
pusha
lods
shl
popf
sub
and
inc
mov
sbb
outsb
faddl
cmp
add
xor
push
add
pop
xchg
add
in
cmp
or
mov
inc
push
and
cld
daa
add
rcll
lret
push
cld
cltd
sub
xor
outsb
sub
mov
or
out
movsb
mov
add
sbb
dec
add
sub
xor
cmpsb
add
pop
stos
incl
je
push
lock
add
xor
add
or
push
mov
in
dec
fs
cmp
insl
sbb
add
out
dec
sub
int
push
lods
lock
pushf
sub
push
call
pop
incb
and
fildl
and
mov
push
clc
push
add
pop
orl
int3
jge
cmp
mov
ljmp
add
add
cli
add
push
out
rolb
inc
dec
jge
add
xor
and
testl
shll
xor
inc
push
out
daa
mov
adc
jle
inc
cli
jp
sbb
subb
rolb
aaa
or
gs
or
add
dec
mov
pop
add
lods
add
mov
movb
and
inc
jnp
add
xchg
shlb
pop
out
add
mov
xor
mov
inc
add
mov
sub
stc
fistpll
lahf
mov
aaa
addr16
add
add
add
jno
cld
stos
test
jnp
fwait
pop
aam
xchg
loop
gs
dec
add
insl
stos
jp
adc
repz
fiaddl
fsubl
movsl
icebp
push
sbb
sbbb
orb
test
ret
push
das
push
insb
add
js
in
xor
xor
push
or
add
xchg
pop
cmpsl
add
cli
adc
lcall
add
lock
stos
out
popa
and
add
lock
gs
roll
jg
orb
add
xor
jle
lret
dec
lds
fidivl
les
add
sub
jl
add
xchg
mov
popl
mov
xchg
lea
and
bound
add
or
out
outsl
call
add
inc
inc
add
add
sbb
inc
add
scas
ret
mov
in
es
sbb
jge
bound
inc
add
xchg
stos
xchg
int3
jo
orl
bound
sub
jbe
es
cwtl
xor
dec
add
sbb
adc
sbb
imul
sub
cmp
mov
addb
icebp
add
repz
jae
test
jle
dec
xchg
mov
lahf
iret
in
hlt
jmp
xchg
jg
cmpsl
inc
add
inc
add
adc
or
pop
lods
jbe
xchg
xchg
push
jo
add
data16
out
add
ret
mov
out
add
ficoml
mov
data16
cmpsl
push
xchg
std
add
std
mov
add
dec
sti
mov
jl
add
outsl
or
adc
testl
mov
insb
xor
fwait
dec
jecxz
or
mov
jns
in
add
add
popa
subl
insb
cwtl
mov
lret
jmp
insl
das
dec
jecxz
xor
loop
loope
or
aad
lds
adc
cld
rorb
adc
inc
cmp
bound
add
hlt
jno
sub
loop
jecxz
inc
jns
mov
mov
js
xchg
stos
dec
movb
cmp
cmp
outsb
fisttpl
mov
xchg
bound
push
jl
xchg
shlb
push
cwtl
ljmp
imul
lcall
pop
jmp
jmp
add
imul
jnp
movsb
add
xchg
int3
fdivl
pop
test
ret
in
xor
sub
shrb
sbb
mov
mov
adc
arpl
rolb
pop
mov
out
out
mov
sub
add
inc
das
jae
out
in
add
or
adc
mov
das
xchg
add
pop
nop
add
les
loop
add
ret
or
cli
fistpl
add
inc
bound
cmp
jns
cmp
dec
loop
pop
xchg
or
mov
gs
jb
add
add
mov
bound
rolb
xchg
jno
mov
cltd
mov
out
cld
clc
pop
mov
arpl
addl
mov
loop
xor
js
lds
fstps
xlat
int
ss
imul
cltd
push
add
popf
push
cltd
add
and
add
add
sbb
pushf
aas
fcmove
lea
push
push
into
mov
pop
jno
push
add
push
add
aas
push
addr16
and
add
jle
ljmp
mov
mov
fists
and
int
xor
outsl
sub
ret
call
imul
mov
add
loopne
inc
insl
mov
mov
jb
es
add
dec
outsl
and
lcall
rclb
sub
test
push
cmc
js
push
stc
cwtl
adc
je
dec
and
pop
cmp
cwtl
ja
jae
pop
add
xor
jb
ret
jecxz
pop
add
addr16
test
mov
adcb
add
mov
push
outsl
cmp
xor
pop
nop
pop
add
mov
je
call
sbb
adc
pushf
movsb
mov
addl
loopne
lret
inc
pop
dec
sbb
lea
les
inc
add
xchg
mov
ss
into
add
mov
xor
cld
mov
push
jns
xchg
xor
js
and
in
mov
add
jne
testl
scas
mov
dec
outsl
popa
jne
aas
mov
mov
prefetch
or
add
lds
cmp
in
pop
idivl
inc
jl
addb
adc
add
mov
cld
iret
pusha
daa
add
addl
jns
insb
and
call
push
clc
add
stos
test
pop
xchg
imul
mov
add
dec
xor
mov
cmp
add
icebp
xchg
out
jb
int
notb
sbb
dec
cmp
add
jb
sbb
xor
push
gs
stos
add
sbb
pop
daa
mov
lahf
dec
add
loop
test
add
inc
out
fiaddl
movsb
mov
and
aam
test
dec
mov
leave
mov
lcall
jo
push
ffree
dec
push
add
mov
pop
popa
sbb
testl
cmc
inc
add
cmp
xor
add
jmp
lret
xor
or
cmp
pop
and
mov
mov
mov
lcall
mov
xor
fstpt
mov
xor
das
into
add
dec
add
jl
lcall
xchg
in
add
cmp
stos
jmp
out
dec
jge
mov
scas
inc
ja
add
mov
jnp
outsl
push
xchg
pop
leave
xchg
or
add
push
push
inc
and
jo
mov
add
popl
cld
popa
pop
xchg
fiadds
rcrl
neg
das
xchg
call
rorb
fbld
rorb
inc
pop
outsl
jmp
adc
mov
add
add
cmp
adc
dec
mov
mov
stos
int3
jge
std
in
pop
add
aad
rcr
mov
repz
test
and
or
and
add
jns
lret
add
ds
push
loopne
daa
sarb
add
loop
and
add
dec
mull
mov
popf
mov
add
outsb
mov
mov
pop
iret
mov
mov
add
orb
stos
gs
cmc
cmp
jbe
daa
add
fstl
int
repz
lea
or
sub
fisubrs
add
dec
stos
inc
sti
lret
or
mov
mov
pop
adc
add
clc
les
insb
mov
call
mov
nop
bound
mov
lods
add
shrl
add
mov
ficoms
aad
out
cld
cwtd
loopne
movsb
mov
dec
lea
loope
push
add
xchg
add
mov
repnz
mov
pop
mov
add
aad
lret
leave
mov
sbb
jns
ret
push
mov
fdivp
pop
out
lret
xchg
cmpb
popa
dec
shr
sti
addb
pop
dec
inc
mov
pop
outsb
ret
dec
scas
push
push
sub
add
sub
scas
jne
sbb
mov
je
push
add
xor
xor
push
cmp
add
pop
cmp
shlb
mov
cmp
lods
sub
sub
and
pop
fwait
adc
mov
outsl
daa
mov
hlt
xchg
pop
xor
xor
add
mov
add
adc
jmp
mov
and
ret
xlat
in
dec
popf
sarl
push
mov
cmpsl
dec
out
cmpsb
ret
push
lcall
popf
add
mov
lock
punpcklbw
mov
mov
mov
test
es
add
mov
add
into
inc
cmp
push
mov
jae
cmp
xor
es
dec
add
mov
lret
push
popa
jo
pop
push
mov
add
add
add
insb
add
stc
jecxz
orb
jb
call
jge
add
iret
out
sub
or
sub
fucom
sub
cmp
adc
sub
or
test
ficomps
push
ja
add
cmpl
add
nop
nop
mov
push
push
and
bound
add
pop
inc
les
ror
pop
add
inc
outsb
int3
jnp,pn
test
decl
cmp
cld
sbb
add
cs
aas
pop
adc
pop
inc
sbb
push
les
cld
mov
or
lods
int
mov
shlb
xchg
xor
and
fdivs
addb
jge
test
inc
inc
outsb
mov
add
add
cmp
test
movsl
mov
xchg
add
addr16
xchg
inc
call
jle
popa
add
jns
add
add
filds
push
add
insl
and
or
btr
and
add
add
dec
rol
xchg
cmpsl
sub
inc
jg
jp
push
add
mov
and
mov
mov
jge
or
ljmp
je
mov
fisubl
fwait
imul
dec
mov
xchg
in
mov
testl
mov
xchg
sub
dec
in
ds
lods
cmp
lods
pop
bound
add
rclb
cmp
cmpsl
xor
push
std
push
ret
call
cmp
rclb
xor
test
fldl
loop
mov
in
mov
rorb
testl
add
fucom
add
add
das
push
aad
jmp
add
jge
mov
lea
dec
push
xor
roll
mov
sub
sub
add
lds
add
stos
movsl
push
je
mov
dec
add
sub
add
ja
push
sbb
les
mov
scas
sub
cmp
add
in
add
add
add
jmp
sub
flds
cmp
je
pop
mov
xor
js
clc
and
sub
push
xor
add
movsl
inc
dec
lds
adc
outsl
test
add
mov
sti
into
incl
pop
add
xchg
and
fcoml
add
sahf
and
add
ja
xor
cld
and
mov
mov
mov
fcoms
mov
jg
jmp
or
or
mov
mov
movl
outsb
clc
imul
add
add
cld
add
gs
movb
xchg
pop
xor
xor
addr16
jmp
popa
leave
mov
dec
lcall
mov
ds
stos
dec
push
or
and
cmp
add
mov
xchg
mov
lods
add
or
xchg
mov
adc
or
jb
push
call
mov
popf
cmc
pop
fcoms
lea
pop
add
testl
je
sbb
sarl
icebp
js
pop
push
adc
xchg
mov
loop
sbb
pop
jae
add
mov
lret
sub
fnstenv
mov
push
int
bound
cmc
sbb
xchg
xchg
push
fdivp
push
iret
sbb
add
jne
insl
add
inc
add
add
scas
fildl
mov
scas
cmp
inc
mov
adc
aaa
jne
xchg
popa
xor
out
popa
leave
outsb
add
pop
icebp
fwait
lds
imul
dec
movsl
sub
cli
add
jns
jno
sub
inc
insl
popl
pop
dec
sbb
or
push
add
cld
xchg
add
mov
xchg
push
xchg
addl
xor
fwait
dec
in
pop
addr16
sub
roll
aas
dec
cltd
out
dec
cmpsb
insb
add
imul
outsl
daa
filds
push
scas
xchg
add
push
or
stos
add
sbb
ljmp
es
shlb
lcall
and
inc
mov
andl
cltd
jmp
out
mov
add
test
jbe
movsl
xchg
cmpsb
inc
sahf
sub
sbb
ret
out
cltd
and
push
pusha
add
sti
int3
xor
sub
xlat
lahf
fdiv
lret
subb
add
pusha
nop
pop
cmpsb
test
and
mov
ljmp
out
push
mov
pop
adc
mov
rcrb
cltd
xchg
sub
pop
lock
out
add
iret
add
adc
lret
adc
fdivl
jecxz
fcompl
jmp
jb
shll
cli
push
mov
adc
add
out
rorb
lahf
das
jne
add
add
imul
cmp
mov
xchg
cmpsb
push
xorb
xor
gs
mov
pusha
add
std
mov
add
imul
jge
dec
roll
adc
lret
decb
mov
jle
sahf
mov
and
repnz
mov
jb
lret
pop
out
pop
fld
shl
sbb
sbb
insb
mov
and
mov
sub
fldcw
jecxz
insb
aad
stc
push
hlt
add
and
out
call
cmp
mov
in
lods
shrb
sub
add
aaa
inc
inc
sub
inc
push
daa
sbb
mov
loope
fbld
popf
cltd
mov
push
push
mov
into
add
xor
mulb
nop
xor
add
add
sub
inc
cwtl
mov
cwtl
add
leave
cmp
inc
pop
add
iret
push
mov
je
xchg
nop
inc
lds
ss
scas
add
or
push
add
aad
add
push
das
mov
or
lock
add
add
orb
out
rolb
cwtl
push
cmp
jb
add
add
inc
add
or
int
pop
sbb
call
push
or
out
mov
xchg
std
out
rolb
cli
test
push
dec
pop
jp
in
adc
shrl
cmp
gs
add
rcll
add
sahf
push
sub
test
repnz
pop
sub
sbb
out
xchg
inc
dec
push
add
vpsubw
push
out
add
out
shrb
jbe
sub
cld
xchg
sbb
loope
nop
cmp
add
cltd
xor
aas
add
mov
das
mov
push
cmpsb
xchg
popa
mov
add
idiv
xchg
pop
add
enter
ljmp
push
xor
out
add
xor
jecxz
mov
test
rcr
or
add
repz
pop
ja
add
aam
inc
mov
push
les
inc
lds
call
xchg
adc
pop
or
mov
call
push
jmp
aaa
out
jnp
fnstsw
lea
inc
addl
dec
add
out
fwait
test
aad
mov
mov
xor
out
cmpsl
sbb
adc
push
pop
add
add
add
sbb
test
out
out
mov
lock
add
or
lret
ja
loopne
push
add
popf
cmp
jnp
add
cli
test
adc
aam
fldl
xchg
inc
or
mov
popf
int
add
xchg
pop
add
cmpsl
std
add
sarl
ret
push
fcmove
fisubrs
les
mov
shrl
cwtl
es
add
add
add
add
lret
add
sbb
shlb
imul
cmp
rcll
push
js
mov
leave
lret
pop
xchg
add
add
cwtl
mov
fisttpl
push
or
xchg
add
jae
in
cmp
inc
daa
push
mov
mov
cmp
pop
inc
ds
pop
call
imul
inc
inc
xor
nop
add
sbb
sbbl
add
das
sub
or
pushf
xchg
xchg
mov
aaa
xor
filds
xor
jecxz
sbb
lds
cs
jno
int
negl
add
cli
add
add
cmp
or
dec
imul
cmp
fcomps
not
rorl
insl
cmp
cmp
loop
mov
icebp
dec
aad
add
pop
mov
ret
shufps
xchg
iret
add
lret
bound
les
mov
das
aaa
cmp
add
pop
mov
gs
push
jp
js
pop
adc
lods
mov
add
fcompl
push
js
test
cwtl
ja
lods
movsb
pop
adc
add
aas
and
mov
mov
jmp
popf
insb
or
fidivs
xor
mov
ljmp
xchg
mov
ss
nop
loope
aaa
xor
add
arpl
add
push
or
rorl
fstpt
push
shl
cmc
xchg
loop
cmp
cmp
outsl
sti
movsb
lea
das
sbb
pop
sbb
jnp
sub
stos
fdivl
jle
sbb
imul
ret
inc
subl
add
mov
cmp
pop
and
add
mov
fnstcw
filds
fdivrs
fstps
nop
cmp
sbb
jecxz
mov
cmpsb
jbe
add
sbb
add
xchg
mov
mov
add
mov
lods
xor
cwtl
push
push
dec
push
add
jge
pop
mov
jo
in
cmpsl
test
adc
rorb
sub
add
out
pop
popf
out
add
pop
dec
cwtl
adc
ret
pop
loop
dec
add
rclb
add
add
pop
mov
cmp
lods
jge
hlt
mov
test
add
and
loopne
out
test
and
push
test
addr16
int
add
jecxz
add
cmp
movsb
cmc
stos
add
in
int3
inc
dec
dec
repnz
sbb
adc
add
or
add
sbb
ja
pop
cmpb
mov
xor
jge
add
ret
xchg
adc
jns
mov
push
add
rclb
idiv
jecxz
and
dec
jb
popf
add
xchg
add
in
nop
out
add
hlt
mov
rclb
add
add
scas
dec
sti
inc
mov
jae
lret
ret
add
xlat
fiaddl
add
xlat
add
add
and
pop
and
out
fcmovnu
in
aad
stc
adc
mov
add
and
pop
xor
test
mov
out
add
bound
or
mov
mov
insl
bound
ja
filds
jmp
push
movsl
mov
fsubrs
js
iret
mov
bound
das
and
rcrl
lock
cmpsb
dec
lahf
add
jmp
mov
inc
aad
dec
or
fildl
sub
sbb
cmp
push
popa
push
out
add
cmp
pop
inc
add
daa
add
add
test
push
jns
add
xor
hlt
insl
mov
popa
fstps
loopne
sti
adc
je
das
shrl
out
imul
fcmovnb
movsl
sbb
pop
shll
out
mov
add
mov
mov
mov
jecxz
add
leave
lret
leave
cltd
mov
scas
dec
sbb
mov
pusha
test
imul
add
ja
mov
lods
adc
popf
pop
and
jns
sub
outsl
in
in
xlat
into
ljmp
push
sbb
fwait
sub
mov
mov
push
sub
stos
fsubr
popf
or
lock
or
sub
dec
push
idivl
add
data16
jns
add
cmp
icebp
add
dec
sbb
cmp
jge
fldl
mov
test
xchg
and
mov
and
inc
pop
in
xchg
and
cmp
add
shlb
push
scas
xlat
cmpsb
jae
add
mov
fadds
arpl
js
inc
mov
add
xor
gs
sbb
jmp
fimull
add
scas
lcall
in
add
inc
pop
sub
add
or
mov
mov
mov
pop
or
xchg
mov
add
test
add
aam
xchg
and
lcall
cmp
mov
add
xchg
pop
pop
mov
ficompl
pop
sbb
gs
xchg
fildl
inc
movsl
adc
add
outsb
orb
xchg
xchg
add
cmc
mov
xchg
movsl
hlt
mov
cwtl
cmpsl
add
add
sub
repz
add
popa
lea
insl
cmpsl
sub
incb
adc
dec
cmp
add
adc
push
scas
push
mov
popf
add
adcb
sbbl
pop
mov
jno
add
ljmp
movb
cmp
mov
xor
leave
icebp
and
mov
adc
inc
incl
xor
loope
dec
das
int3
cmpsb
pop
xor
mov
addr16
in
scas
pop
jbe
cmpsl
scas
xchg
popa
push
adc
xchg
dec
cld
sbb
cld
push
mov
adc
add
mov
mov
sbb
jae
test
adc
aam
cmp
dec
add
add
fbld
add
sub
sbb
fstpl
js
and
inc
mov
test
add
add
mov
jb
les
push
inc
sub
adc
fstps
dec
out
lcall
or
mov
inc
popa
sub
addr16
lcall
pop
fwait
mov
cltd
add
or
mov
cmp
sub
or
enter
sbb
add
cmp
cli
mov
int3
pop
sbb
leave
iret
mov
add
push
push
xchg
call
outsl
aas
sub
les
sarb
dec
ret
fisubrl
inc
add
push
fs
out
add
pop
js
outsb
sti
add
sbb
jmp
mov
pop
mov
add
mov
push
adc
mov
xchg
nop
add
jo
sbb
mov
or
mov
inc
sbb
push
cli
in
sbbl
testl
insl
icebp
test
scas
dec
nop
ret
icebp
arpl
stos
cmpsl
popa
mov
mov
movsl
dec
pop
add
add
add
mov
add
adc
das
aas
sbb
repz
mov
stos
mov
cmp
lds
out
cmpl
add
lret
dec
jne
add
or
nop
mov
cmp
das
pop
std
or
andl
jp
pop
lea
add
xorb
sbb
xchg
xchg
rorb
rorb
fldl
imul
jl
xchg
add
std
mov
mov
mov
jecxz
aas
and
or
cs
mov
xor
pop
xchg
mov
push
cmp
std
push
pop
icebp
pop
jmp
add
mov
aam
bound
movsb
divl
add
sahf
decl
push
aad
cmp
inc
movsb
add
lret
add
add
inc
and
aad
jno
and
add
addr16
mov
add
add
icebp
lds
jg
and
fs
mov
push
pushf
add
fdivs
enter
xchg
add
adc
dec
xchg
jo
adc
push
aad
adc
cmpsb
add
mov
in
pop
daa
filds
ljmp
jp
aaa
inc
xor
mov
fistl
add
lret
out
lds
mov
cwtl
add
daa
pop
xchg
inc
sub
fldl2t
pusha
fcoms
loope
add
mov
out
mov
std
xor
or
popf
vandnps
cmpsl
mov
add
xor
cmp
mov
pop
mul
iret
jne
mov
mov
mov
add
rcr
pop
add
and
pushf
rcrl
ljmp
xchg
ds
adc
add
es
pop
push
push
push
jae
xchg
xchg
mov
cmc
es
fisubl
scas
add
rcrb
andl
data16
pop
aas
or
adc
adc
mov
xchg
cmp
push
jg
add
push
push
jg
dec
mov
mov
rcrb
popa
aam
ret
shr
add
ds
sub
rolb
dec
rolb
xor
cmp
push
mov
adc
mov
flds
fwait
add
clc
xor
outsl
sub
cmpsl
or
mov
xchg
cld
jnp
add
fwait
jno
pop
xchg
ret
fisubl
faddl
roll
shlb
jno
stos
loop
jnp
sub
add
adc
xchg
cmp
mov
add
adc
stos
add
inc
lahf
dec
jg
sub
cmp
xor
or
cmpsl
jp
bound
mov
xchg
and
xchg
jns
push
imul
xor
daa
mov
add
jg
jg
sti
sub
push
add
dec
add
mov
cwtl
outsl
sbb
ljmp
imul
bound
ret
cmp
out
or
mov
mov
insl
ret
sti
mov
adc
jne
mov
cltd
push
xor
fwait
add
rcll
add
mov
leave
ret
xchg
add
imul
sbb
imul
arpl
popa
lcall
stos
dec
imul
add
imul
add
data16
cmpsb
bound
jp
outsb
push
imul
or
adc
lds
jl
jnp
mov
mov
cmp
shlb
test
roll
mov
pop
add
cwtl
cmp
dec
je
es
dec
repnz
ljmp
ret
add
mov
clc
push
push
push
std
dec
adc
dec
mov
add
or
inc
jb
adc
andl
and
lods
and
lea
inc
test
mov
pop
bound
testb
enter
sub
and
movsl
jl
and
mov
movsl
jne
inc
cmpsb
add
stc
or
jg,pn
push
mov
in
cmpsl
sbb
daa
movsl
outsl
lret
add
sahf
xor
mov
push
ja
adc
push
sbb
mov
scas
xor
mov
sbb
sub
mov
popa
repz
ja
cmp
je
movsb
adc
les
xchg
add
jbe
pop
aas
mov
add
sub
test
imul
aaa
sub
and
mov
inc
sbb
add
lea
mov
sub
mov
xor
add
stos
add
loopne
add
mov
cli
xlat
mov
sbb
xchg
add
test
add
pop
sub
mov
jp
sbb
push
jge
or
jge
pusha
add
pop
sbb
ds
movb
add
pop
fmul
add
xor
sbb
add
scas
sti
inc
dec
inc
dec
cmpsb
add
add
add
add
mov
mov
aad
movsl
cmp
pop
dec
imul
adc
jmp
scas
sbb
call
mov
xchg
and
sbb
and
dec
xchg
mov
aas
es
ljmp
int
and
loopne
pop
mov
push
cmpsb
inc
les
in
imul
pop
add
ret
std
inc
xor
add
adc
rolb
pop
dec
xchg
add
repnz
jb
daa
pop
dec
aad
fdivl
add
call
xchg
in
vxorps
add
mov
add
adc
cmpsb
lahf
and
scas
sbb
loop
lahf
mov
scas
scas
sub
add
dec
jmp
jmp
mov
add
aas
xor
add
lods
arpl
daa
scas
add
lock
lahf
sub
shlb
xchg
int
rcll
lods
bound
xor
inc
inc
movsb
push
pop
mov
jo
repz
mov
dec
aas
pushf
add
test
in
adc
adc
repz
and
xor
cmpsl
imul
mov
sub
push
mov
inc
add
pop
flds
inc
das
push
idiv
int
mov
lea
add
scas
or
frstor
ja
fs
je
add
loopne
divl
cmp
std
xorb
jae
outsb
rorl
cmpl
dec
sarb
push
in
mov
cli
add
or
out
daa
pop
sub
add
adc
ja
sahf
movsl
adc
int3
add
aam
xchg
gs
push
pop
mov
sbb
loope
add
add
clc
cmp
inc
jmp
lret
mov
insb
pop
mov
mov
push
add
es
add
lods
add
xor
jmp
adc
mov
xchg
push
int3
or
and
cmc
push
push
test
sbb
add
cmc
dec
xchg
inc
jecxz
into
aam
adc
push
push
int3
hlt
dec
sbb
add
lods
mov
or
add
or
lds
jns
add
mov
jl
andb
cli
mov
mov
and
cmpsb
mov
push
je
repz
leave
xchg
adc
loope
inc
js
repz
adc
pop
push
lods
push
sbb
jns
push
ret
mov
adc
push
out
push
sbb
lods
add
or
test
cmp
insl
nop
subb
mov
sbb
xchg
fdivl
rcr
data16
outsb
add
pop
cs
sub
adc
and
dec
add
fildl
inc
lea
sbb
mov
mov
jecxz
jo
jg
push
lock
add
iret
mov
add
cs
scas
outsb
jno
loop
and
fisubrs
jp
inc
pop
add
and
lods
add
push
fimuls
add
sarl
das
inc
jno
dec
fwait
add
push
mov
adc
movsl
ret
add
imul
in
test
icebp
adc
mov
jb
adc
fists
loopne
and
add
mov
mov
mov
mov
bound
ret
add
lcall
push
cmp
add
sti
add
add
add
add
rolb
add
fistl
mov
push
inc
add
fstpt
testb
ja
inc
in
sub
cmp
rorb
fnstcw
inc
pop
cmpsb
pop
leave
out
sub
add
popl
sub
add
adc
push
in
sbb
add
outsb
pop
cwtl
jae
in
into
jno
mov
adc
add
aas
mov
add
cmp
je
test
flds
mov
arpl
nop
in
pop
sub
out
add
ljmp
add
xor
lcall
outsl
movsl
xor
shrl
lea
pop
push
outsl
leave
mov
cmp
call
add
add
jno
push
xchg
add
add
mov
dec
dec
mov
sbb
add
jge
inc
loope
iret
jl
aas
in
lcall
push
add
push
inc
int3
test
push
dec
inc
ss
sbb
xlat
and
xor
lods
push
loope
aaa
add
fildl
inc
loopw
push
dec
loopne
jmp
dec
leave
in
pextrw
sub
decb
pop
push
mov
jl
scas
add
dec
push
fadds
jbe
repnz
into
xor
mov
pop
mov
fbld
add
shlb
sub
mov
pop
rolb
inc
add
add
insb
pop
scas
dec
scas
out
add
or
mov
jge
int3
aad
lods
add
xor
ja
in
ja
daa
add
andl
fisubrs
gs
ss
cmp
ss
adc
test
stos
into
lret
mov
dec
sbb
fwait
add
mov
iret
movsb
call
or
imul
rolb
sbb
inc
sub
mov
nop
outsb
and
icebp
out
push
mov
mov
out
imul
add
lods
fcomip
mov
loope
sbb
testl
imul
mov
push
out
stc
sarb
jno
dec
pop
add
ss
les
mov
add
or
add
das
lret
cmpsb
xchg
xchg
add
add
add
add
dec
mov
xchg
mov
ljmp
xor
mov
inc
sub
pop
dec
mov
movb
js
insl
stos
add
lea
pop
int3
and
iret
push
and
push
add
fs
mov
mov
cmp
mov
xchg
dec
fldl
push
cmpsl
cltd
add
adc
push
cltd
cmp
repnz
jle
or
jns
andl
ret
adc
insb
inc
rcrb
push
test
stc
out
hlt
mov
add
add
inc
add
xchg
xor
add
pop
inc
add
ret
lahf
inc
pusha
ljmp
test
add
ljmp
xor
cli
sub
add
dec
xor
loope
jl
cld
ljmp
and
out
faddl
push
ljmp
add
stos
insb
adcl
add
clc
add
mov
sbb
cltd
add
add
push
adc
ljmp
sub
pop
adc
outsl
jb
jae
jle
loopne
incl
iret
pop
es
outsl
fidivrs
inc
shlb
loop
xchg
ret
fstpt
mov
add
dec
add
fistps
stos
or
cmpsb
cwtl
add
pop
pop
daa
mov
lret
mov
mov
sarb
push
push
sbb
lods
js
add
or
dec
test
pop
push
cs
std
mov
mov
add
int3
rcrl
pop
and
fcoms
lcall
mov
sti
in
add
jmp
or
jno
rcrb
mov
add
scas
sub
aam
imulb
sar
pushf
test
fcoml
cmp
add
dec
enter
jno
cmp
xchg
xchg
fildl
add
adc
stos
pop
inc
sbb
enter
flds
or
or
lcall
mov
mov
xchg
loopne
lock
add
and
out
push
jl
cwtl
lds
adc
jge
fildl
fadds
aas
cmp
cmpsb
roll
pop
outsl
pop
add
dec
inc
jnp
add
mov
int3
fisubs
cmp
leave
out
inc
and
scas
add
push
adc
add
add
data16
test
cwtl
cmp
add
test
in
outsb
hlt
jbe
ret
add
inc
pop
mov
rorb
dec
xor
add
decl
push
push
sahf
add
shll
push
ret
cltd
sti
movsl
and
loope
add
shlb
add
sarl
add
filds
fadds
mov
jbe
ljmp
pop
mov
add
fiadds
inc
push
or
aaa
das
push
push
dec
lahf
jp
sub
pop
jnp
mulb
jg
out
mov
adc
push
inc
icebp
add
push
mov
add
popa
scas
push
in
std
leave
mov
add
cmc
fists
test
and
imul
lea
ljmp
inc
aam
mov
pop
add
add
test
rcr
add
sbb
inc
jno
fmuls
dec
push
daa
jge
fcoml
adc
call
stos
ret
pushf
add
cli
shll
add
dec
into
mov
ror
out
xor
jnp
sarb
loopne
pop
std
sub
fldl
and
test
scas
rep
jge
cld
push
in
dec
push
mov
add
pop
push
sbb
and
cwtl
add
aam
movb
xchg
test
inc
imul
clc
std
jp
addr16
stos
repz
add
ret
fs
out
add
insb
rorb
into
daa
mov
push
in
pushf
cmp
test
lods
pop
sub
mov
xchg
dec
push
add
sar
add
add
add
add
call
dec
lea
adc
lcall
in
add
xchg
push
inc
ja
xchg
add
sahf
add
sbb
fistps
les
test
idiv
lret
pop
pop
fisttps
stc
jg
enter
insl
inc
add
cs
movsb
jp
imul
mov
sub
insb
cmp
add
pop
push
push
inc
mov
cmpsb
add
mov
gs
mov
mov
push
sbb
cltd
mov
js
add
sahf
cmp
xchg
sbb
daa
add
sbb
cmp
lods
cmp
xor
daa
outsl
mov
insb
leave
push
mov
add
test
pop
lods
cli
sub
pop
dec
and
test
pop
push
arpl
mull
jns
add
pop
ret
clc
jo
mov
ret
out
jle
add
push
push
in
sub
xor
shlb
popf
xor
mov
and
push
pop
bound
sbbl
and
jecxz
cmp
repnz
aad
mov
push
pop
sti
push
add
shr
clc
int
stos
stc
jmp
xchg
cmp
sbb
ljmp
inc
clc
jle
fdiv
ja
mov
hlt
or
add
add
imul
roll
xchg
loope
mov
xchg
dec
inc
fsubp
jle
cld
add
push
in
add
subl
push
add
jbe
adc
mov
xor
mov
dec
jo
in
xor
in
loopne
sub
fiadds
and
ljmp
popf
popf
incl
add
rcll
out
sbb
mov
add
mov
add
mov
or
mov
aad
sub
cmp
xchg
pusha
insl
repz
or
jmp
xor
cmp
add
sbb
pop
out
add
push
inc
shlb
mov
add
jg
jecxz
sbb
cli
mov
sub
or
outsl
int3
pop
clc
icebp
cmpsl
xchg
adc
shl
sbb
xor
push
add
outsb
dec
jmp
sub
push
adc
add
mov
mov
lods
or
fs
xchg
pop
sbb
in
add
mov
sub
ljmp
push
jne
add
sarb
jle
in
pop
adc
icebp
add
pop
jbe
imul
jge
jmp
inc
lret
sub
jb
adc
mov
pop
lcall
cltd
add
cwtl
mov
dec
jmp
aam
cmp
cltd
lret
and
adc
push
js
adc
lods
aas
int3
add
or
add
push
test
or
ret
movsl
push
push
out
mov
test
mov
cmpsl
mov
sbb
sub
pop
mov
imul
add
pop
jns
inc
add
or
add
xchg
inc
add
outsl
addr16
adc
inc
and
clc
int3
insb
das
daa
adc
out
dec
xor
push
and
add
add
mov
adcl
popl
add
lea
inc
pop
out
roll
or
mov
outsl
cmc
test
add
in
sub
add
outsl
out
dec
mov
push
push
adc
adc
mov
and
ljmp
lods
mov
cmp
jae
ret
in
pop
mov
add
iret
stos
jns
cld
insb
add
outsl
movsb
inc
dec
sub
sbb
std
out
cmp
scas
jmp
inc
lcall
inc
add
jo
xchg
cmpb
add
pop
pop
js
jle
loopne
add
jge,pt
jb
adc
jnp
add
mov
add
jne
jno
and
xor
dec
bound
lret
jb
jns
xchg
out
fdivrs
sbb
pop
mov
pop
add
inc
jns
mov
sbb
lret
sahf
imul
xchg
scas
cld
jmp
dec
aam
mov
cli
dec
cmp
dec
sarl
add
fcomps
inc
pop
int3
mov
popa
xor
add
imul
push
add
cs
bound
dec
in
pop
xchg
loope
jecxz
adc
jmp
lds
pop
lcall
popf
inc
addr16
mov
add
into
pop
add
rolb
iret
mov
in
sub
add
icebp
dec
add
mov
mov
aas
add
mov
int3
push
add
aad
aas
mov
hlt
in
leave
xor
add
ja
or
mov
loopne
mov
add
mov
cwtl
clc
loope
jge
and
pop
inc
push
std
dec
inc
movsl
jecxz
mov
lds
popl
mulb
xor
mov
cwtl
daa
mov
mov
add
jo
test
cli
iret
push
push
xchg
xchg
dec
mov
int
mov
pop
add
mov
js
add
pop
push
or
sti
add
add
roll
out
je
push
jge
sub
test
add
ljmp
sub
cmp
mov
pop
inc
arpl
incb
js
cmpsl
pop
or
pushf
mov
or
fildl
fnstcw
jl
jb
pusha
cs
push
xor
sbb
jecxz
testl
jno
orb
int3
fdivrs
shrl
cwtl
cmp
add
jl
add
add
into
ret
in
add
dec
jmp
fwait
mov
loopne
adc
push
mov
mov
mov
stc
mov
add
add
addr16
add
add
cli
stc
mov
pop
lret
shll
mov
sbb
add
pop
out
lods
aas
add
jmp
sbb
pop
add
movsl
aad
lahf
or
arpl
stc
filds
jecxz
push
mov
push
mov
add
lcall
add
pop
call
aad
stc
into
add
add
cmpsb
lods
idivl
cmpsb
adc
popa
dec
sbb
xchg
in
jmp
jp
adc
add
into
movl
xchg
pop
and
movsb
dec
faddl
outsb
add
push
mov
adcb
add
dec
sub
sub
cwtl
and
add
push
mov
das
mov
xchg
add
inc
push
lock
and
add
mov
mov
filds
stos
mov
cmp
push
inc
roll
jmp
and
cmp
dec
dec
add
xor
push
add
ret
aad
mov
icebp
lcall
xchg
lock
sub
out
cltd
andb
bswap
arpl
outsb
add
movsb
cwtl
xchg
pop
rclb
and
add
add
add
cmp
cli
repz
stos
fcompl
es
mov
lcall
pop
dec
jle
add
jo
xchg
dec
lock
add
xchg
add
inc
cmc
sbb
jo
mov
and
or
aam
add
add
jmp
xor
add
jecxz
push
std
add
add
push
mov
jp
stos
sub
mov
cmp
roll
or
scas
out
add
xor
data16
aam
add
xchg
sub
insb
add
ja
or
push
aaa
mov
rcll
pop
lahf
dec
lds
xor
xchg
add
pop
sahf
push
mov
std
dec
sub
sbb
fcoml
sub
mov
leave
lret
jnp
fcomp
cld
popa
add
lret
inc
adc
add
or
data16
add
lret
push
cmp
ljmp
pop
mov
in
imul
add
test
jo
outsl
push
jg
xor
outsb
scas
cmp
sbb
or
inc
movsl
sub
repnz
int3
stos
pop
xchg
inc
out
repnz
test
lret
cmc
shld
inc
cmp
cmp
add
jb
mov
add
ja
pop
sub
jle
push
inc
add
in
hlt
in
mov
lods
push
movb
lock
add
mov
add
out
inc
pushl
push
xchg
adc
movsb
dec
cmp
aam
leave
add
cld
jg
pushf
loopne
loope
lret
or
fimull
lods
and
dec
pop
pop
es
xor
cmpsb
mov
dec
movsl
dec
cltd
pop
cmp
mov
add
inc
lcall
scas
lcall
xor
add
rorl
outsb
push
loopne
push
xchg
in
dec
xabort
pop
imul
or
add
mov
or
mov
in
jnp
or
add
lret
mov
add
add
and
sbb
icebp
add
jbe
jae
cmp
enter
add
scas
or
pop
add
jp
sbb
lcall
add
sbb
sbb
push
dec
pop
testb
in
std
jmp
add
xor
mov
sbb
mov
repz
adc
gs
mov
mov
dec
pop
mov
es
scas
cwtl
xlat
and
outsl
imul
mov
push
iret
mov
add
mov
add
clc
and
in
xchg
scas
push
xchg
in
xlat
sbb
inc
lcall
or
js
mov
addr16
int
stc
jmp
cmpsb
pop
push
imull
lcall
iret
xchg
out
push
mov
shlb
mov
push
add
add
stc
ljmp
outsb
xor
cltd
insl
pop
str
xor
ljmp
xchg
xor
pusha
and
mov
jo
inc
add
mov
jg
fmul
movsb
cmc
jp
add
addl
rclb
lds
xchg
adc
fs
sti
add
out
int
mov
cmp
jg
leave
or
add
dec
mov
dec
loope
mov
lods
aaa
add
inc
xchg
cmc
sub
iret
jmp
push
mov
jb
mov
outsb
jmp
add
movsb
xchg
sub
jb
mov
fsubs
push
adc
movsl
add
pop
movsl
repz
add
fsubrs
popf
add
gs
jecxz
inc
jecxz
outsb
xor
add
cmpsb
arpl
cld
aam
jge
add
fwait
pop
pop
adc
cld
jae
pop
dec
jp
test
push
sti
iret
ret
jle
dec
fidivrs
int
subl
inc
iret
inc
sarl
sbb
sbb
xchg
loopne
std
repnz
and
flds
popf
out
ret
and
add
sbb
int
jg
add
daa
inc
stos
and
xor
cmc
xchg
fwait
rolb
inc
mov
xchg
xor
cmpsb
and
fldenv
add
add
fcomps
pop
les
daa
xor
stos
hlt
dec
pop
jnp
ljmp
dec
add
pop
fcom
je
xor
stc
xchg
jle
push
adc
jb
add
xlat
xchg
test
gs
xchg
add
stos
lahf
ljmp
outsb
int
movsl
push
insl
clc
fisttpll
lods
in
aas
fldt
xchg
add
add
pop
leave
mov
popl
data16
dec
xchg
sbb
jnp
mov
mov
es
out
mov
xchg
je
add
push
adc
push
jp
sbb
dec
lret
add
loop
xor
add
pushf
add
mov
xor
xor
aas
push
rclb
xchg
mov
inc
jno
scas
shrb
mov
xchg
pop
div
and
nop
fwait
rorb
add
xlat
stos
jnp
add
ss
std
add
int3
add
push
stc
imul
iret
add
repz
and
bound
add
mov
fimuls
pop
inc
mov
add
out
lret
arpl
jbe
add
js
jle
fnstenv
das
lahf
dec
mov
daa
dec
push
adc
mull
imul
loop
sbb
lods
mov
mov
add
or
orb
inc
push
add
incl
add
pusha
sbb
dec
aaa
adc
sbb
or
ret
xorl
in
call
mov
add
and
cmpsb
mov
add
outsb
loop
addl
enter
cmp
add
or
call
sub
aaa
ds
stos
out
lret
push
add
loope
jge
xchg
fnstsw
lret
ljmp
jp
rcl
add
jecxz
and
xchg
std
dec
int
jecxz
scas
sbb
nop
aad
or
cltd
sti
jecxz
leave
and
adc
mov
adc
sbb
mov
push
sbb
outsb
gs
out
add
jle
imul
sub
ljmp
pop
sub
fdiv
outsl
cmp
sub
hlt
adc
inc
das
stc
adc
outsl
add
adc
adc
cmp
arpl
lock
cli
push
add
in
rcrl
pop
xchg
int3
dec
int3
imul
mov
inc
push
sbb
pop
add
leave
and
xchg
cmp
mov
std
add
pop
jmp
lahf
cs
add
rolb
loopne,pn
jae
push
insb
ret
xor
sbb
sti
int
mov
mov
cmp
pop
cmp
lods
push
cwtl
lret
and
fcmovnu
mov
mov
sub
mov
fcompl
imul
add
js
add
sbb
pop
test
jae
pop
scas
clc
sbb
pop
and
cltd
or
pop
push
add
cmp
repnz
push
popf
mov
and
xchg
or
add
or
xchg
sti
mov
xorl
ljmp
lahf
inc
ret
rorl
andb
xchg
jp
sub
pop
dec
jae
add
xor
in
xorl
test
call
dec
mov
push
mov
outsl
mov
mov
add
repnz
pop
in
lds
test
add
adc
mov
jnp
mov
movsl
add
inc
daa
rcll
add
mov
push
pop
rcrl
in
add
dec
clc
pop
movsb
push
jae
sahf
pusha
pusha
jg
shrb
test
push
jbe
and
jmp
out
jmp
xchg
movb
mov
mov
pop
mov
pop
stc
pop
std
lock
add
jp
xchg
dec
fbstp
jmp
fcomps
ficoms
int
jl
test
cltd
add
cltd
stc
sbb
xchg
outsb
add
push
iret
mov
testl
rcr
cltd
iret
inc
add
add
lods
cmc
sub
add
addr16
in
sub
repnz
add
sbb
xlat
lahf
orb
js
sbb
das
cli
push
roll
jmp
jge
sbb
jmp
pop
push
les
pop
adcl
mov
mov
pop
add
push
cltd
mov
jecxz
shll
mov
jl
lods
test
fidivrs
sbb
sbb
jb
sahf
add
rcr
cmpsl
jl
mov
add
add
add
lahf
cmpl
or
pop
or
jae
lret
mov
mov
jns
in
in
int
test
push
cmp
add
and
xor
add
stos
add
les
jg
xchg
mov
jmp
ja
mov
out
pop
add
add
mov
xor
jnp
stos
jle
pop
add
in
add
add
add
xchg
inc
jl
and
enter
sub
js
pop
sub
cmpsl
add
shrb
bound
inc
mov
add
mov
test
fnstsw
or
or
sahf
cli
push
pop
imul
jl
sbb
arpl
rcrl
push
es
test
bound
lods
adc
shl
add
shlb
add
fildl
xchg
bound
sub
in
ret
xor
pop
lock
popl
je
add
outsb
lret
sub
test
call
daa
or
imul
test
jle
cmpsl
xlat
movsb
iret
test
sub
dec
and
adc
cmp
sbb
pushf
push
add
pusha
adc
addr16
add
sbb
ret
adc
push
add
mov
scas
or
imul
add
out
icebp
data16
imul
out
mov
je
pop
push
pop
xchg
test
ret
popf
add
mov
mov
stos
xor
adc
push
mov
mov
add
xor
xchg
stos
sbb
sbbb
icebp
ret
fisubs
imul
addl
mov
cli
rcll
shrl
movsb
xchg
ret
in
ja
je
test
cmp
sub
test
and
sbb
mov
add
jle
repnz
sub
and
incb
xchg
adc
add
subb
push
push
lcall
pop
cmpsb
add
xchg
mov
pop
add
pop
mov
xor
push
lock
aad
shlb
mov
daa
add
cmp
test
in
or
shrl
xchg
push
inc
sbb
repnz
lcallw
mov
push
aaa
lds
fistpll
xchg
test
aad
pushf
incl
aad
mov
in
and
in
clc
lods
faddl
out
mov
add
jbe
adc
loop
daa
fwait
mov
in
or
dec
or
add
dec
or
add
ja
pushf
push
call
add
mov
add
xchg
mov
push
add
cmpsl
call
insw
fdivrl
jp
std
fst
xchg
daa
add
mov
xor
xchg
adc
arpl
in
sub
ret
push
outsb
add
xchg
dec
stos
mov
aad
pusha
pop
je
mov
aad
xlat
adc
jbe
icebp
out
and
and
mov
push
sub
into
cld
inc
ljmp
add
or
int
ret
bound
adc
cmp
jb
ja
add
xchg
ljmp
push
shl
or
mov
jno
add
pop
pop
cmp
pop
lret
xor
loop
jnp
or
and
xor
es
mov
cmp
loop
mov
mov
mov
mov
add
test
insl
int
jp
push
je
mov
add
mov
cmpsl
and
xor
mov
pop
jnp
int3
jle
lods
mov
cmp
sub
mov
or
mov
lods
aam
sbb
dec
jmp
push
inc
into
cltd
add
mov
out
clc
xchg
sub
call
add
adc
dec
ret
notl
pop
mov
mov
and
add
sub
add
ret
jmp
adc
jle
jecxz
loope
add
cmp
and
sbbb
aaa
push
xor
cltd
fs
mov
or
add
add
jge
enter
out
pop
cmp
push
xor
mov
add
mov
movsl
cmp
mov
in
mov
push
pop
daa
add
sub
xor
loop
add
mov
imul
xlat
add
dec
int
pop
add
lret
inc
xor
jnp
dec
add
mov
xchg
jbe
xor
xorl
iret
and
push
sub
out
pop
and
ja
mov
and
shrl
push
lret
push
js
out
sub
add
or
enter
or
cmp
dec
mov
jne
loop
in
insl
lcall
shll
into
pop
fildl
xor
xor
mov
xor
add
or
lods
add
das
sbb
repz
push
lcall
add
sbb
sub
incb
adc
data16
adc
jmp
arpl
ljmp
add
mov
xchg
into
mov
xor
xorl
test
mov
stc
xor
push
push
lods
mov
les
push
jae
sbb
pusha
push
add
aaa
jl
adc
and
lret
ss
hlt
add
mov
xlat
ja
mov
add
iret
sahf
daa
popa
mov
xor
pop
and
fadds
mov
lret
sti
addl
out
sbb
call
mov
mov
cld
add
add
sbb
bound
push
and
xchg
out
std
filds
or
xchg
aam
mov
fisttps
outsl
xor
push
pop
pop
iret
push
xor
pop
into
daa
idivl
add
sub
inc
test
aad
pop
dec
push
inc
mov
pop
test
hlt
add
and
out
add
inc
testl
cmp
icebp
add
sbb
mov
mov
jecxz
and
mov
mov
or
mov
add
and
inc
scas
sub
data16
outsl
and
mov
and
das
bound
sti
and
inc
mov
loopne
sub
out
popa
add
mov
sub
xchg
cmpsb
roll
jecxz
pushf
int3
or
orl
add
mov
test
mov
add
cmpsb
pop
mov
add
jg
sub
rcl
push
or
sbb
aaa
add
push
cmp
mov
sub
test
roll
add
ljmp
add
std
xchg
jae
jns
add
out
sbb
ljmp
mov
inc
dec
or
xchg
xor
fwait
and
mov
xor
push
cli
sbbl
es
out
xchg
shll
faddl
pushf
ret
sub
jecxz
add
add
adc
push
mov
dec
out
je
test
cmpl
push
jb
cli
dec
iret
or
jae
pop
dec
loopne
add
and
pop
add
add
in
pop
inc
add
push
jmp
xchg
jns
cmpsl
adcb
mov
mov
and
xchg
cmpsl
cs
scas
xor
stos
push
cmp
bound
bound
scas
add
mov
movsb
daa
add
add
jp
or
inc
test
test
call
subb
aas
aas
dec
add
ja
das
roll
out
push
add
push
scas
enter
flds
fistpl
mov
bound
add
jno
mov
xchg
add
inc
iret
adc
pop
xchg
or
push
daa
pop
xor
add
add
fnstcw
pop
jmp
add
xchg
aad
bound
and
lea
fisttps
fiadds
movsb
adc
add
add
lret
add
pop
cwtl
fs
sbb
orl
xlat
outsb
pop
loope
aaa
data16
pusha
loopne
in
add
pop
sub
sub
out
jmp
mov
insl
pop
mov
ja
xlat
mov
imul
cmp
decl
jns
jmp
aad
xchg
in
mull
mov
jmp
out
pop
mov
sub
inc
pop
jmp
jb
mov
and
out
add
outsl
fildl
jecxz
xchg
popa
addb
add
cmp
xor
mov
out
pop
rorb
push
test
add
add
pop
aas
jne
jle
cmp
xchg
sti
xchg
jne
push
mov
cmp
push
fldl
insb
sahf
int3
add
aaa
push
adc
add
orb
loop
add
sub
sbb
adc
bound
in
pop
cmp
cltd
and
test
imul
test
mov
call
pop
ret
xchg
adcl
outsl
push
push
bound
mov
add
pusha
shl
add
add
mov
add
xchg
pop
in
out
add
pop
push
imul
xchg
push
mov
in
mov
rcr
std
add
test
stos
das
pop
mov
add
testl
push
adc
mov
xchg
mov
fiaddl
pop
popl
pop
mov
xchg
repz
dec
repz
inc
add
in
dec
and
mov
add
xchg
mov
mov
hlt
pop
add
mov
mov
dec
into
sub
dec
pop
sbb
cld
pop
je
xlat
add
push
add
loope
xchg
xchg
test
mov
les
pop
data16
pop
mov
xchg
add
ret
mov
add
add
adc
testb
pop
rclb
jp
lret
jp
add
pop
and
popf
add
je
and
pop
and
mov
je
sbb
sbb
ret
repz
gs
add
and
mov
pop
das
mov
shrl
inc
iret
push
js
push
outsl
icebp
push
arpl
add
xchg
fiadds
ret
push
pop
out
movsl
push
pop
add
or
pop
mov
enter
cmp
sbb
xchg
jns
add
imul
jo
aam
sbb
lahf
call
xor
jnp
lds
fildll
add
dec
push
imul
repnz
add
aas
add
es
push
sub
add
sahf
iret
out
jno
nop
popf
add
or
cmpsb
sahf
ret
sbb
inc
dec
push
sbb
js
nop
xor
mov
icebp
pop
lret
shll
arpl
push
mov
pop
hlt
sahf
movb
test
add
mov
mov
or
insb
stos
sbb
pop
enter
adc
adc
mov
repnz
aaa
mov
or
pop
add
rcrb
adc
add
dec
xor
int3
inc
cmp
imull
jp
add
push
jmp
add
xor
add
xor
sub
jbe
adc
ja
aam
mov
jle
push
and
jp
insl
pop
xchg
mov
inc
add
dec
mov
pop
int3
adc
scas
orb
sti
fwait
pop
lcall
icebp
les
lds
fwait
inc
push
movsl
add
nop
loopne
int3
enter
cltd
inc
rcrb
add
fs
cltd
cwtl
iret
shrb
int
mov
cmp
mov
sub
add
jg
in
pop
jl,pn
movsb
fiadds
pusha
pop
dec
push
mov
out
imul
jns
pop
inc
add
add
dec
add
jbe
jecxz
jl
or
mov
std
dec
adc
mov
or
sbb
pop
aas
add
mov
ret
rolb
push
aas
and
xchg
stos
cmp
rcr
loope
cld
add
and
add
ret
push
js
subl
les
sbb
or
pop
sub
xchg
loop
pop
mov
sbb
xlat
ror
xchg
add
xchg
add
sbb
hlt
mov
les
ds
test
jl
cmp
jo
adc
xchg
pop
add
mov
sahf
pop
xchg
cmp
mov
pop
add
push
push
push
pop
xor
add
mov
in
push
sbb
inc
fsubl
fnstcw
xchg
fs
cwtl
jmp
cmp
ljmp
pop
mov
mov
add
fwait
aas
pop
cmp
lahf
push
cmp
pop
in
gs
add
shrb
add
nop
add
popa
add
call
scas
add
jp
out
dec
mov
mov
jl
inc
clc
add
rclb
add
cwtl
xchg
pop
orb
add
in
jnp
add
or
imul
xchg
or
sub
xchg
add
cmc
pop
movsl
and
repnz
pop
adc
shll
imul
outsb
rcrl
push
je
add
mov
push
jmp
cmp
cli
pop
mov
jb
add
sub
add
mov
out
xor
enter
add
stos
lret
push
aad
pop
adc
clc
sbb
addl
mov
jo
stos
mov
mov
xchg
mov
popf
sarb
bound
or
add
mov
ret
add
ja
or
xlat
push
testb
stos
adc
sub
jmp
xchg
xor
and
push
add
adc
mov
sbb
rol
cmpsb
sub
cmp
data16
add
fadds
add
aaa
push
and
cmp
adc
xchg
stos
mov
mov
pop
adc
loope
xchg
dec
pop
jo
cmp
imul
pop
adc
daa
cmpsb
sub
inc
or
rcr
and
and
add
add
adc
insw
aam
mov
mov
push
es
cmp
mov
push
sti
add
mov
and
add
mov
xchg
mov
jmp
mov
add
xor
add
xor
rclb
dec
aad
mov
imul
mov
sub
adc
mov
cwtl
add
xor
lea
push
mov
add
dec
fiadds
jmp
or
inc
in
repnz
pusha
sub
fs
pop
push
and
add
add
or
scas
lods
sbb
push
movsb
inc
xor
xchg
adc
sub
push
add
dec
add
loopne
cmpsb
scas
mov
mov
sub
jb
into
pop
lcall
mov
dec
aas
and
add
push
sub
inc
or
sbb
inc
xchg
jg
or
and
and
add
push
add
notl
pop
jnp
ja
jg
dec
pop
push
inc
shlb
out
jmp
cmp
out
xchg
pop
jl
orb
mov
add
dec
in
std
dec
insb
shl
add
dec
or
adc
mov
and
ljmp
pop
sub
mov
adc
flds
jecxz
push
add
add
push
mov
add
xchg
and
xlat
xchg
add
push
ret
xchg
outsb
sub
sbbl
test
push
adc
xchg
xchg
cmpsb
sub
int3
loopne
add
push
cs
faddl
clc
lret
xor
aaa
repz
jns
add
or
dec
mov
cmp
std
movsb
iret
mov
xchg
mov
jnp
mov
loopne
pop
add
add
jge
and
lcall
stc
lret
or
nop
mov
xchg
popf
push
cld
add
aam
add
lods
pop
mov
add
test
add
dec
xlat
sarl
ds
es
enter
daa
jge
cwtl
in
insl
adc
insl
xlat
mov
inc
add
daa
scas
out
in
jecxz
cmp
jb
adc
or
or
or
mov
push
in
cmpl
cmp
mov
and
outsb
dec
add
call
jno
push
fldl
and
push
cmp
add
xorb
fistpll
and
push
adc
addl
add
adc
add
mov
ds
xor
xlat
loopne
cld
push
dec
push
imul
push
in
test
sahf
xor
fmull
mov
je
enter
pop
sub
stc
out
aad
mov
inc
and
add
stos
jl
add
es
loop
pop
jl
aad
mov
mov
mov
cmpsb
pop
add
add
pop
cmp
and
insl
mov
and
or
jb
xor
mov
rcl
add
stos
ds
cmp
bound
int
mov
adc
inc
and
ss
mov
jns
and
shr
pop
add
stos
add
inc
loop
add
add
add
mov
cwtl
testl
jb
jl
add
lahf
sub
lldt
add
repz
push
mov
icebp
mov
sub
adc
mov
add
loopne
and
add
mov
cmp
pop
add
or
add
ret
sub
leave
int3
lods
sbb
leave
scas
pop
lods
sub
dec
in
test
popl
mov
imul
data16
add
cmp
dec
fsts
cmp
pop
or
add
add
mov
add
mov
add
fldt
xchg
out
js
and
or
mov
data16
add
gs
add
jae,pn
push
adcl
mov
lock
cmpsl
inc
mov
gs
add
mov
test
push
rcrb
mov
popa
cltd
push
repz
shrl
dec
pop
jae
fsubrl
test
cli
sbb
ja
int
mov
xchg
test
or
adc
jp
xchg
inc
ret
dec
iret
icebp
test
add
jge
sbb
cmpsb
xor
je
pusha
incl
idivb
pop
add
sbbl
add
insl
jle
lock
add
daa
test
mov
notb
daa
mov
add
aas
nop
inc
data16
scas
stos
sbb
sub
add
les
mov
cmp
sub
out
pop
pop
add
add
or
xchg
into
fistps
add
add
jne
xchg
sahf
stos
dec
inc
scas
pop
push
or
add
adc
jecxz
pop
ret
test
mov
adc
arpl
jae
add
sbb
mov
in
sti
xchg
fwait
ljmp
and
cli
shl
jmp
or
cmp
cmp
scas
xchg
pop
push
add
test
mov
dec
or
movsb
add
js
push
loop
add
stos
mov
add
pop
lock
popa
cmpb
push
mov
and
cli
jge
scas
xchg
std
pop
stc
shl
push
xorl
pusha
inc
push
add
insb
popf
cmp
divb
inc
xor
popa
mov
daa
inc
add
xor
gs
jecxz
pop
jecxz
pop
outsl
add
out
inc
jne
mov
add
pop
xor
es
testb
cmp
push
mov
ljmp
mov
push
mov
add
pushl
adc
cmpsb
cmp
sbb
cmp
add
lret
jmp
daa
jns
clc
xchg
ljmp
aaa
jge
movb
add
add
pop
add
and
add
dec
add
jbe
jecxz
imul
mov
idivb
jae
and
sbb
add
les
hlt
out
jae
popf
cmp
cli
add
mov
dec
add
aad
adc
xor
loop
outsl
out
je
dec
mov
adc
add
jnp
ljmp
xor
add
jb
and
push
leave
cmp
add
add
sarl
fnstsw
div
mov
jmp
movsl
pop
xor
or
mov
pop
stos
lock
add
shrb
lds
jo
fiaddl
mov
shl
pop
jmp
add
ret
pop
cmpsl
int3
insb
add
call
xchg
mov
push
push
popf
jns
call
xor
mov
adc
xchg
add
add
gs
pop
push
fucomp
neg
fdivr
mov
ljmp
std
adc
jl,pn
loopne
push
mov
scas
das
scas
mov
push
sub
sub
xor
cmp
add
mov
add
pop
sub
mov
push
jo
les
rorl
out
cld
out
mov
add
sub
lods
add
add
push
adc
xchg
add
fldcw
lret
cmp
in
pusha
cli
cli
fdivs
bound
es
inc
cld
mov
faddl
mov
fisubrl
and
repz
mov
out
xchg
add
or
test
fwait
sti
scas
lods
jo
xchg
in
icebp
add
jmp
ljmp
add
sbb
sbb
jl
dec
mov
push
stos
add
mov
add
mov
mov
mov
inc
or
movl
jp
dec
mov
pop
rolb
das
and
mov
rcll
mov
xchg
pop
cmp
xchg
add
clc
add
mov
stc
add
inc
pop
ffree
jle
inc
jnp
mov
cmp
mov
mov
repnz
push
sbb
sbb
add
sbb
adc
out
sub
mov
dec
pop
andb
inc
inc
add
add
dec
mov
push
ljmp
insl
hlt
add
cmpsl
jecxz
add
xchg
ret
jle
sbb
cli
das
imul
movsb
sti
xor
jl
cltd
sbb
push
cmp
test
ds
outsl
mov
out
cmp
xor
fcomip
repnz
dec
mov
mov
sub
inc
dec
es
pushf
ss
or
mov
lahf
pop
loop
lock
insb
add
mov
inc
stos
jge,pt
cs
fs
add
test
adc
aam
jg
add
push
loope
iret
arpl
sub
lret
sub
add
xchg
and
fiadds
jne
in
fldl
or
add
je
and
jge
loopne
sub
and
mov
out
xor
les
pop
shl
push
fbstp
push
xor
and
push
in
jmp
cs
push
dec
push
add
xorl
and
lods
and
cmpsb
add
add
adc
cmp
mov
stos
ja
gs
aad
dec
fistps
faddl
stos
xchg
jmp
cmp
shl
loope
sti
xor
inc
and
imul
mov
push
add
cmpsb
or
into
je
xchg
pushf
add
es
adc
stos
es
mov
insb
cltd
lret
inc
imul
cltd
mov
dec
rorb
add
and
jns
data16
cmp
test
in
cltd
push
ds
mov
insb
leave
add
gs
mov
rorl
add
dec
test
add
add
cmpsb
ficomps
cmp
in
daa
sahf
sti
insb
ret
ss
add
int3
mov
jg
mov
sbb
ds
add
add
loopne
jo
es
cvtps2pd
or
jno
aam
fldenv
fnsave
mov
test
inc
push
pop
filds
inc
add
testb
in
dec
xor
add
cmp
pop
neg
inc
jo
jno
push
jp
sbb
pop
pop
inc
add
xchg
int3
jle
cltd
fxtract
lods
or
jne
ret
cmpsl
mov
lret
add
rorl
into
add
movsl
mov
inc
enter
sub
xchg
sub
dec
sbb
mov
xchg
clc
lahf
push
es
movsb
pop
inc
lret
scas
push
pop
shll
inc
in
xchg
push
inc
dec
inc
insb
aam
into
outsb
add
cmp
sub
xchg
mov
mov
mov
add
repnz
add
or
mov
xor
sbb
add
int
pop
push
mov
adc
or
pop
out
add
mov
sbb
add
add
push
pushf
xchg
fstp
mov
sbb
and
add
mov
and
push
loope
dec
and
sbb
imul
test
imull
mov
jg
aaa
add
and
sub
pop
mov
add
mov
lahf
mov
push
nop
dec
lock
stos
cs
je
subl
add
std
add
add
mov
decl
mov
push
jae
rolb
lods
sbb
sbb
pusha
jne
inc
dec
clc
jge
push
ljmp
or
push
repz
cld
imul
je
add
adc
in
in
hlt
jmp
lods
into
sbb
pop
xchg
bound
push
xor
add
xchg
int3
aas
jl
pop
mov
and
jle
jmp
je
add
movsb
decb
cltd
dec
push
add
push
pop
push
sbb
cmp
stos
inc
mov
into
aam
sub
mov
es
add
bound
das
jbe
and
and
pop
push
inc
fidivrs
dec
pushf
cmc
jp
jg
jle
lods
add
inc
and
pop
push
and
lods
add
add
add
pop
mov
add
xchg
js
fs
cmc
add
adc
pop
insb
jnp
push
adc
flds
insb
add
or
leave
xchg
ret
push
insb
add
mov
mov
mov
pop
loop
cmc
add
pop
es
aaa
mov
sub
outsb
xchg
adc
clc
xchg
fs
pop
push
add
cs
loope
decl
je
frstor
mov
lds
add
adcb
inc
and
mov
into
leave
add
sbb
in
mov
in
movsl
jg
add
add
xor
mov
es
cmp
addb
fcomps
mov
add
testl
mov
or
mov
inc
and
int
movsl
mov
add
add
daa
dec
add
add
in
xchg
pop
mov
xchg
sub
shll
xchg
pushf
lods
add
inc
inc
inc
mov
mov
outsl
fstps
xorb
movsl
add
adcb
jo
dec
mov
add
std
addr16
push
dec
add
pop
inc
sub
add
addr16
fcompl
mov
fs
adc
aad
adc
imul
inc
push
cmp
jo
add
push
repz
in
add
stos
lret
mov
push
rolb
pop
inc
xor
jmp
add
add
mov
pop
ljmp
psubsw
lret
add
das
test
mov
mov
lods
lods
xchg
xchg
and
gs
add
jl
add
pop
pop
jmp
jno
mov
cwtl
sub
sbb
loopne
add
mov
mov
add
add
sub
fdiv
fsubrl
in
sbb
jle
dec
xor
imul
adc
or
jge
mov
add
sub
xor
add
jg
add
add
jecxz
jecxz
mov
andb
enter
pop
mov
mov
cli
fadd
adc
adc
and
mov
or
mov
pop
sub
mov
popf
sbbb
loopne
adc
pop
xor
xchg
xchg
add
jns
bound
jb
pop
dec
hlt
add
adc
and
jmp
std
lds
sub
push
and
jl
add
sub
fists
popf
cmp
mov
inc
mov
sbb
cmp
arpl
add
sarl
inc
xchg
fiadds
xor
mov
jo
inc
scas
add
cmp
repnz
xchg
add
loopne
jp
jp
add
pushf
jge
mov
lret
xchg
add
cli
push
add
test
cmpsb
add
add
mov
test
add
push
push
fcomp
add
clc
pop
xchg
mov
out
add
mov
add
int3
adc
lock
pop
out
mov
xor
cmp
in
test
inc
enter
pop
or
fildll
popf
jae
stos
or
push
and
js
mov
std
std
dec
add
jg
adc
movsb
push
xor
sub
inc
les
imul
stc
jle
movb
add
fcoms
stos
sub
std
fxsave
subb
xlat
in
add
mov
push
rcll
popa
mov
add
cmpsb
mov
jo
rolb
add
cwtl
les
test
lret
mov
arpl
and
in
pop
add
add
ret
data16
cmp
cld
push
outsb
stos
iret
sbb
shll
data16
mov
add
js
sbb
es
xlat
fiaddl
roll
std
add
pop
jl
movl
add
adc
inc
outsb
enter
xor
cmpsb
or
add
sub
add
jo
inc
or
add
dec
mov
jg
push
mov
or
add
mov
adc
stos
shll
sbb
out
imul
jo
jnp
lret
add
pop
jns
das
sahf
hlt
jnp
add
dec
cs
cmp
mov
test
jno
cmp
sarb
add
push
pop
add
pop
into
mov
lahf
xor
add
pop
jp
dec
or
xchg
negl
mov
add
ret
sbb
mov
jnp
jno
add
add
lret
out
xchg
and
add
in
add
cmp
cld
add
or
and
popa
cmp
mov
push
ret
mov
pop
sbb
loopne
lock
cmpsb
or
and
or
ja
cmpsl
add
add
and
psubw
mov
adc
imul
xchg
fldl
icebp
push
sarb
xor
movb
subb
mov
je
adc
add
cld
add
pavgw
cmpsb
add
add
pop
pusha
pop
bound
sub
roll
sbb
add
mov
inc
lcall
fiaddl
xchg
push
add
pop
pop
loope
aam
adc
test
mov
add
push
inc
jp
jge
mov
cltd
cmc
cmp
in
add
add
addl
lahf
shl
xorb
fisubl
aaa
fs
add
jg
add
sub
mov
aaa
add
test
and
cmovp
dec
into
aad
xchg
push
mov
test
add
mov
enter
xor
add
clc
mov
dec
push
or
jg
sub
ja
shlb
addl
outsb
add
orb
pop
add
dec
add
or
aad
xor
lret
in
push
subl
call
and
cmpsb
xor
pop
je
pop
push
add
xor
arpl
or
pop
flds
xor
ljmp
mov
ljmp
xor
jmp
and
scas
shr
mov
clc
insb
jnp
imulb
dec
sbb
test
push
int
mov
inc
push
loopne
push
mov
popf
cmp
sarl
sti
test
mov
cmp
pop
xchg
add
pop
pop
push
roll
call
jmp
push
lods
add
add
sub
das
inc
add
std
or
stos
loopne
lcall
jmp
lret
cmp
add
mov
cs
ret
call
mov
xchg
bound
inc
mov
push
loopne
inc
or
inc
cmp
addr16
jo
es
mov
dec
in
push
inc
add
movsb
scas
jmp
gs
lock
mov
cmp
add
inc
jmp
outsb
mov
mov
stos
aas
cmp
or
cmc
mov
add
mov
sub
dec
sarl
mov
pop
pop
add
dec
push
fisubrl
loope
xor
mov
add
lret
mov
iret
cltd
add
cwtl
xchg
pushf
and
inc
adc
rcrb
ret
jbe
loope
adc
insl
inc
decb
aaa
int
nop
add
lcall
dec
loope
add
data16
cwtl
shrl
imul
mov
and
adc
and
mov
jno
scas
push
nop
push
in
push
lret
pop
sarl
sbb
add
sub
inc
add
imul
jecxz
cmp
rclb
add
popf
test
cmpsl
lds
or
pop
inc
add
sub
mov
inc
add
imul
add
jnp
test
lods
pop
call
icebp
add
sbb
es
inc
fiadds
xchg
sub
rol
movsl
std
andb
into
cli
lcall
lret
mov
and
jbe
movl
add
or
shll
stos
repz
or
jne
push
xchg
les
data16
call
ficomps
jmp
push
je
es
dec
daa
cmpsb
imul
lock
jp
stc
pop
cmp
fldl
scas
popf
mov
add
sub
jg
cs
out
lods
add
popa
call
mov
xor
pusha
and
pop
popl
faddl
inc
lahf
add
fistpl
fwait
outsb
mov
lea
test
dec
xor
frstor
lahf
lods
in
addr16
fisubrs
push
add
in
sub
lock
test
and
aam
xlat
cmp
aas
cs
add
jnp
push
mov
outsb
mov
insb
or
cmp
cmp
mov
ret
mov
int
cmp
adc
addl
xor
pushf
std
jne
jle
xchg
shrb
lahf
cwtl
ret
mov
cmp
js
cld
jmp
addr16
xor
adc
lcall
and
add
in
fdivrs
and
push
mov
pusha
mov
stc
mov
xchg
push
jge
loopne
mov
jns
jne
and
test
add
je
push
and
add
dec
fdivs
and
cmp
inc
repnz
cmp
add
cltd
push
adc
into
inc
add
jg
incb
ja
daa
into
xor
add
in
idivb
arpl
adc
mov
and
add
mov
adcl
lret
inc
pop
push
je
mov
sub
jle
adc
adcl
imul
push
push
arpl
iret
xor
add
inc
sbb
push
sub
nop
add
jae
pop
dec
rolb
dec
jle
sub
xor
dec
jne
add
testl
test
int3
push
add
lds
push
add
movsb
mov
add
lea
ret
jae
pop
imul
sub
insl
push
or
cmpsl
inc
ficompl
mov
add
std
lret
or
rorb
adc
add
outsb
inc
add
sub
sar
xor
out
repz
hlt
or
test
lret
cmpsl
adc
add
in
and
cmp
hlt
mov
je
cld
movsb
add
jg
inc
add
sbb
repnz
cmc
push
mov
add
repz
cli
and
je
sub
mov
add
adc
dec
add
add
cmc
fisubrl
daa
sbb
mov
add
in
movsl
in
rorb
ficompl
rcrl
jg
push
arpl
add
iret
pop
sub
add
lahf
fchs
sub
add
dec
subl
sahf
cli
outsb
sbb
movsb
jmp
pop
out
subl
jg
pop
adc
das
aad
cmc
sbb
shrb
nop
loopne
and
inc
movsl
add
inc
sbb
iret
mov
pusha
add
mov
mov
dec
filds
sbb
push
scas
add
dec
cmp
mov
and
jl
cmpl
int3
in
add
out
mov
add
push
push
push
bound
mov
out
push
cmp
add
xor
add
push
or
lea
add
cmp
dec
flds
inc
je
ficomps
add
outsl
enter
lcall
add
mov
jae
pop
scas
jp
xchg
add
mov
fisubrs
or
push
jb
xor
roll
adc
pop
jb
add
int3
shlb
add
clc
test
xchg
fstpt
push
and
pop
pop
xor
add
cmpsb
mov
fsubs
add
xlat
cltd
pop
mov
and
test
add
pop
jmp
insl
sbb
out
dec
inc
leave
dec
sbb
test
loopne
loopne
sbb
rclb
imul
sbb
in
add
adc
mov
call
push
jno
dec
add
add
inc
inc
xlat
cmp
aad
lea
insl
add
mov
fstpt
add
mov
pop
clc
lods
and
xchg
xchg
adc
shlb
sub
and
add
test
fnstcw
fs
sub
test
pop
outsl
arpl
int3
add
aad
in
scas
xchg
int3
mov
nop
sbb
push
or
sub
mov
mov
ret
add
stos
add
xchg
js
test
lret
xchg
ss
push
jl
les
inc
fisubl
scas
push
add
in
les
pop
cmp
bound
rcll
mov
add
jns
xor
jb
and
ljmp
add
in
std
js
mov
add
shrl
movswl
pop
add
push
add
mov
sbb
loope
mov
lods
pushf
inc
add
add
xor
or
xchg
mov
push
xor
cwtl
sahf
jge
push
add
aaa
add
cmpsl
dec
mov
add
add
rolb
jae
xchg
movsb
sbb
mov
loop
cmc
add
inc
cmc
jge
sahf
add
ret
mov
add
icebp
loop
pop
movsb
jecxz
je
popf
int
aam
cmp
add
add
rcrl
negl
cltd
scas
and
loop
inc
adc
lea
sahf
in
add
roll
clc
or
int3
jns
movsl
add
add
pop
outsl
xchg
jmp
and
push
push
ret
xchg
jecxz
push
adc
push
xchg
cltd
inc
add
add
aam
test
xor
lods
pop
fwait
cmp
clc
add
mov
cmp
jns
pop
and
jle
sbb
pushf
aas
loopne
enter
jp
imul
mov
lcall
rcr
xchg
mov
add
ds
mov
icebp
adc
push
pop
mov
shrl
jl
rorl
pop
jmp
dec
add
add
xchg
ficoms
xchg
pop
call
aaa
push
roll
fcompp
mov
fldl2e
stos
shll
jmp
push
test
loopne
and
popf
add
add
pop
pop
push
lock
mov
fwait
int
add
xchg
add
roll
lahf
in
adc
or
mov
add
inc
lret
or
push
inc
cli
add
daa
and
decl
es
jecxz
xor
loope
jl
pop
xchg
inc
pop
add
add
add
jnp
sarb
mov
lret
cwtl
cmpsl
sub
loop
std
icebp
sbb
mov
mov
mov
sbb
add
add
and
cli
loopne
add
or
divl
xchg
dec
sahf
ficomps
ret
arpl
ss
add
cmp
scas
sbb
and
test
xchg
cmp
sub
mov
or
mov
mov
stc
std
add
xchg
dec
das
pusha
mov
outsb
add
cmc
int3
in
inc
inc
add
popf
adc
fdivs
and
jae
adc
jge
int3
push
and
add
pop
jmp
loopne
dec
test
cmp
ds
pop
pop
add
add
cmp
das
test
cmp
mov
jns
repnz
add
notb
hlt
es
lock
test
sbb
sub
flds
add
pop
fwait
adc
arpl
pop
add
jnp
ror
in
xor
fwait
xor
xor
cmpl
xchg
push
push
test
push
andl
cmpl
dec
mov
add
mov
mov
jp
int3
loop
fstpl
dec
push
test
pushf
cmp
mov
push
loop
mov
jle
push
lret
fldcw
fwait
lods
out
sub
push
test
pop
dec
scas
add
xor
cmp
adc
xchg
jno
cmp
nop
mov
and
xor
or
add
js
jnp
add
or
fiadds
mov
mov
cmp
push
sbb
jnp
aaa
addr16
divb
imul
mov
out
loop
cmp
sub
cmc
add
mov
xor
fidivrs
dec
and
aas
out
lret
inc
add
mov
xchg
bound
arpl
roll
rcll
mov
int3
into
incl
mov
movsl
adc
shrb
pop
add
cld
mov
dec
mov
lcall
inc
xchg
mov
pushf
xchg
sub
scas
es
pusha
lret
jl
add
mov
scas
and
jnp
pop
add
lock
push
jno
mov
pop
xorb
push
mov
adc
lcall
inc
lcall
jg
add
xchg
insb
jl
ja
and
lea
sub
add
fmuls
mov
add
push
aam
add
add
ss
xchg
int
xchg
cmp
add
pusha
xor
or
sarl
repz
add
leave
fnsave
fistpl
test
jge
lods
fildl
mov
enter
lret
lods
add
push
jmp
scas
xor
sbb
xchg
popf
test
scas
bound
adc
push
arpl
call
movsl
add
xchg
rcrb
popa
sbb
xchg
push
add
push
fisttpll
ror
scas
xor
xor
mov
inc
stos
test
add
add
add
ficomps
fbld
test
outsb
out
les
add
lods
add
pop
imul
add
outsl
jb
mov
dec
push
icebp
push
adc
jge
and
shll
fimull
sub
pop
cmc
lock
add
dec
arpl
xchg
sub
mov
sti
mov
adc
sub
aam
fdivs
add
add
popf
arpl
pop
adc
ficoms
dec
popl
add
add
dec
add
jb
mov
dec
sub
add
in
cltd
jg
fsubs
cmp
cmp
adc
insb
jb
andb
movsl
pop
leave
mov
std
and
add
cmpsl
pop
add
sub
mov
pushf
push
or
fiaddl
addb
lea
push
xchg
enter
inc
les
mov
or
add
pop
scas
mov
jp
int
inc
lods
add
mov
int3
jle
dec
popa
cmpsl
bound
mov
aaa
add
cli
cltd
jns
fdecstp
sub
add
enter
pop
test
sbbb
insb
insl
mov
ds
es
add
add
roll
add
inc
push
dec
rclb
testb
rorl
cmc
jo
test
std
add
jo
add
xor
xor
stc
push
popa
jne
jno
or
dec
adc
pop
sbb
pop
pusha
add
sub
sub
cmp
rcr
insl
incb
add
pop
mov
xchg
aaa
add
jb
jmp
sub
cmp
aam
mov
mov
jp
ret
xlat
add
imul
sub
aas
inc
pop
adc
push
sbb
roll
lea
sbb
lods
jg
add
pop
pop
in
aas
push
out
inc
add
or
movsb
fmull
xchg
ja
push
dec
cmpsl
jl
mov
xlat
jge
adc
sti
rcll
data16
add
stos
jge
add
popa
mov
pop
sbb
hlt
add
test
xor
insl
xchg
xchg
lods
repnz
test
and
mov
int3
pushf
push
lcall
dec
pop
popf
add
sub
push
push
cmp
cmpl
leave
mov
sub
and
pop
lock
jne
movsl
mov
dec
mov
bound
xlat
call
fildl
add
xchg
sbbb
mov
pop
inc
and
mov
and
movsb
sbb
stc
add
sub
sub
add
xchg
inc
xor
in
pop
bound
dec
add
iret
ret
add
add
push
add
add
xor
leave
popf
cmp
dec
or
insl
notb
pop
mov
dec
cld
jmp
aam
movsb
adc
push
ja
adc
ret
xchg
push
ss
inc
fs
add
add
ss
in
sub
rcr
pop
xor
int
adc
cmp
out
mov
add
and
pop
sahf
addr16
xchg
imul
ret
mov
jl
dec
or
fprem
and
xor
mov
add
loop
js
pop
addr16
addr16
dec
mov
in
add
movsl
sbb
movsb
ljmp
mov
xchg
movsb
add
orb
mull
iret
and
add
add
jae
jno
arpl
out
ret
add
movsb
add
inc
leave
movsb
xchg
add
and
add
loop
stos
sahf
cmpb
mov
mov
add
icebp
add
xchg
xorb
jnp
and
xchg
sbb
call
push
scas
adc
cwtl
aaa
sbb
int3
add
cmpsb
aaa
adc
xchg
sbb
sahf
add
mov
push
out
rorl
add
in
sti
dec
add
mov
add
add
js
add
and
push
jl
pop
add
jae
mov
stc
cmpsb
test
xchg
add
add
bound
or
js
inc
repz
mov
ficoml
std
in
lret
mov
fwait
pop
outsb
inc
jmp
cli
mov
imul
add
mov
inc
dec
cli
xor
jo
popf
jp
cmpb
roll
stc
push
add
or
or
add
cmp
mov
ficomps
jb
or
out
sub
jns
jl
sbb
add
fwait
pop
adc
inc
lods
inc
push
xor
ficomps
hlt
or
stos
xchg
mov
fildll
xchg
test
add
jp
mov
movsb
aas
adcl
push
jne
cmp
aam
push
iret
add
in
and
pop
in
add
stos
fwait
push
add
or
mov
mov
push
clc
jge
sbb
xor
pop
add
gs
add
add
adc
add
fwait
dec
cmpsl
cmp
cmpsb
jae
ret
push
adc
mov
add
jae
mov
shlw
movsl
ljmp
lret
cmp
stc
dec
push
cmpsl
add
push
xlat
lcall
jno
xchg
cld
pop
inc
add
or
cmpsl
dec
cwtl
pop
arpl
cmc
push
pop
popa
dec
cwtl
mov
test
scas
rcl
sbb
xor
xchg
add
xchg
adc
push
int3
mov
add
pop
cmpsl
push
sti
jecxz,pt
add
ja
and
adc
mov
adc
cld
ljmp
push
cmp
call
sbb
push
je
gs
movsl
sub
cmpb
dec
fwait
cmp
inc
repz
lock
addr16
fcomp
sbb
adc
sbb
mov
add
ret
mov
mov
loopne
mov
add
in
sbb
lds
and
push
add
sub
out
sub
xchg
add
loopne,pt
das
sbb
mov
xchg
pop
cmpsb
add
out
aam
mov
jae
cltd
shll
out
push
dec
add
add
push
mov
push
add
mov
aad
xlat
jge
js
arpl
testb
jbe
mov
dec
xchg
or
xor
mov
push
push
das
sbb
add
cmp
imul
in
push
add
pop
aas
cmpsb
pop
aas
xor
push
int
loope
add
lods
cmp
ss
add
or
rcrl
ret
gs
mov
aad
lds
inc
lret
faddl
rorb
rol
faddl
in
das
xor
cs
shll
xchg
jb
inc
sub
jp
xor
dec
jge
inc
adc
add
jo
xor
sub
dec
push
jp
dec
test
pop
push
or
bsf
ja
lahf
and
push
mov
mov
ljmp
inc
push
pop
jns
or
popf
mov
pop
lret
and
add
das
mov
shll
mov
and
leave
lock
add
cmpb
add
add
les
add
mov
pop
mov
or
mov
dec
cs
jl
enter
movsl
cmpsb
dec
inc
inc
push
add
stos
mov
adc
addr16
je
notl
les
cltd
xchg
xchg
mov
add
pusha
sbb
push
pop
movsl
arpl
movsb
jo
adc
push
mov
add
mov
clc
out
mov
xor
add
popa
add
lcall
pushf
inc
sarb
and
nop
cmc
add
push
incl
cltd
add
jle
push
adc
daa
rclb
or
mov
xor
mov
inc
les
ja
mov
xchg
popa
daa
cltd
xor
insb
pushf
icebp
or
jmp
add
stos
add
fimuls
pop
fs
adc
sbb
inc
ret
faddl
test
cmp
mov
add
lods
adc
and
popa
aam
popf
rdmsr
jmp
icebp
adc
mov
outsb
sub
add
rcr
dec
sbb
push
adc
popa
add
sti
pushl
dec
sbb
inc
test
mov
xchg
loop
call
mov
sbb
andl
xchg
inc
cmpsb
out
adc
add
inc
lcall
mov
hlt
mov
add
jmp
add
add
bound
add
or
fwait
add
outsl
movsb
or
test
add
add
int
add
outsb
shlb
dec
sub
mov
pop
add
adc
test
orl
fcomps
das
cmp
in
add
cmc
mov
mov
add
add
lods
pop
sahf
inc
xor
rclb
cwtl
cmp
loop
sbb
xor
sub
repnz
out
jg
add
sub
mov
sbb
int3
mov
mov
xor
xchg
stc
adc
jbe
roll
pusha
add
or
push
add
mov
add
sbb
dec
popa
push
out
mov
pop
stc
cmp
xchg
jnp
cltd
and
enter
imul
pusha
add
out
dec
push
shr
and
mov
mov
int3
jns
adc
sub
dec
dec
mov
ss
jmp
ds
mov
and
jl
pushf
cmp
mov
jl
add
lahf
sbb
out
add
aad
and
xor
dec
mov
mov
add
jne
insl
ss
inc
mov
inc
push
or
inc
mov
shlb
and
mov
cli
jns
out
dec
add
outsl
stos
incl
int3
xor
test
pop
data16
outsb
out
ficoml
add
test
aad
mov
repz
xchg
add
xor
int
orl
xchg
or
aaa
add
jp
iret
cltd
xchg
jns
push
das
out
xchg
dec
xor
aas
dec
ljmp
inc
xchg
inc
sbb
sahf
and
push
ffree
push
outsl
sbb
pop
pop
outsb
jle
ds
adc
dec
int3
add
xlat
ret
shl
mov
sahf
popf
stos
push
mov
in
mov
dec
sbb
push
lret
pop
and
ret
xor
pop
rcll
addb
scas
jne
fmull
bound
pop
cmpsb
lret
popf
pop
out
lcall
daa
stos
jmp
stos
dec
aad
add
mov
int3
dec
push
mov
inc
xchg
jg
fadds
pop
shl
xor
aaa
jle
les
fidivs
fldpi
push
sub
ja
push
mov
dec
lret
ljmp
inc
inc
mov
xchg
psubusw
stc
sub
cmp
rol
enter
add
repnz
rolb
push
push
and
sub
add
inc
add
push
add
pop
stos
dec
negl
pop
mov
push
cli
xlat
dec
adcl
push
mov
loopne
and
mov
or
add
push
add
add
cmp
out
cmpsl
add
lret
push
inc
in
and
imul
add
sub
adc
sarb
cltd
inc
jno
mov
lcall
pop
mov
xor
fwait
jo
add
push
pop
stc
pushf
int3
addb
lods
xchg
xor
xor
add
add
inc
xchg
mov
int3
mov
add
imul
or
test
and
sbb
dec
xor
stos
negb
and
or
pusha
adc
add
cmpsb
xchg
add
sahf
stos
je
lock
jecxz
mov
jae
jno
mov
and
adc
outsb
insb
roll
pusha
add
in
jns
mov
int
in
std
add
mov
push
xchg
xchg
aas
add
sbb
xchg
add
add
inc
or
add
xchg
ficomps
mov
dec
xchg
pop
and
add
stc
adc
add
mov
sub
in
pop
lahf
lcall
push
jecxz
adc
shrb
sbb
push
adc
or
mov
lahf
add
iret
xlat
cli
jmp
inc
testl
jo
add
imul
mov
jae
adc
mov
cmp
add
aas
adc
lret
ljmp
lcall
in
or
jge
pop
faddl
call
nop
inc
add
add
mov
or
psrlw
jo
jl
jae
sub
push
outsl
xor
xchg
repz
mov
enter
add
xchg
add
movsb
mov
add
fadds
ja
or
push
add
xor
in
lret
add
add
cwtl
cmp
pop
add
orb
or
adc
adc
jmp
and
andl
mov
cmp
lea
fmull
adc
or
add
lcall
mov
add
mov
mov
and
lcall
add
out
pop
aam
jge
xor
push
bnd
enter
sub
mov
mov
mov
arpl
daa
movsl
and
dec
sahf
stc
inc
add
jno
mov
jmp
cmp
or
call
fwait
jns
mov
and
sbb
ljmp
or
adc
add
leave
mov
jp
scas
add
rcrl
les
pop
push
and
mov
fstpl
cmc
adc
jmp
cli
stos
jbe
push
add
iret
ret
add
enter
cs
insl
and
add
jmp
push
dec
jg,pn
sub
mov
movl
stc
int3
xchg
jnp
cmpsb
mov
out
dec
imull
cmp
stc
faddl
add
mov
add
test
mov
out
mov
jbe
imul
add
mov
in
pop
dec
scas
add
scas
adc
cmp
test
int
xor
cmp
fmul
dec
and
add
mov
rcll
lds
mov
xor
or
and
hlt
pop
in
add
lds
xor
clc
add
ss
ja
nop
pop
clc
mov
cwtl
dec
pop
mov
sahf
out
dec
push
xlat
fbld
add
jle
loopne
into
mov
daa
subl
cld
push
add
xchg
mov
xor
or
dec
push
adc
lea
sub
sahf
lods
or
add
and
xchg
add
xchg
inc
add
jne
add
pop
test
mov
mov
sub
jge
iret
mov
lahf
dec
mov
or
gs
fsubrl
cmp
in
les
dec
xchg
pop
add
into
and
add
add
cmp
inc
or
push
cmc
cltd
xchg
add
jb
cmp
pop
popl
enter
sbb
fadds
xlat
dec
jl
jno
imul
fwait
sbb
bound
pop
mov
mov
jb
cli
adc
dec
pop
addl
sub
aam
fdivr
jbe
add
xchg
push
and
add
xor
lea
jge
mov
inc
add
fildll
cmc
jl
lcall
rcrl
cmp
add
ss
sarb
test
add
and
adc
das
shl
push
add
gs
faddl
sbb
orb
add
fnstenv
setnp
add
xchg
adcl
dec
xchg
out
shl
jnp
in
mov
sbb
push
sbb
movsl
inc
icebp
test
and
and
into
push
mov
or
add
loopne
add
inc
aad
xor
in
pop
cmp
add
push
push
insl
outsl
jp
daa
scas
add
cmpsl
movsb
sub
into
inc
lods
nop
iret
push
orl
add
xor
test
mov
outsb
cs
cmc
je
addb
add
mov
lods
xor
jnp
lds
hlt
es
and
push
mov
icebp
xor
jae
fsubrl
gs
xor
add
push
pop
push
mov
outsb
leave
mov
mov
lds
push
fwait
jbe
or
adc
test
or
mov
lcall
nop
add
add
xchg
in
mov
jg
add
push
orb
cmp
add
repz
jp
mov
mov
pop
add
insl
ss
add
adc
int3
sbb
std
push
fmul
aad
pop
leave
jle
dec
sub
inc
stc
and
inc
dec
push
ss
lods
int3
jae
and
daa
or
and
cli
mov
shll
pop
lret
dec
addb
jge
mov
xchg
outsb
fisubrl
push
fistpl
inc
add
movsl
cmpsb
lahf
les
xchg
mov
les
cmp
and
or
es
cmp
and
adc
add
add
ror
sub
cmp
adc
add
add
sub
shr
xor
mov
into
add
ror
and
add
lcall
mov
lods
add
add
add
ret
gs
decl
add
aaa
mov
add
enterw
add
push
outsb
add
pushf
test
scas
xchg
insb
jecxz
dec
push
add
cmp
add
arpl
adc
dec
add
or
sahf
sbb
das
aam
js
gs
es
add
sti
int
mov
or
pop
lea
flds
loopne
fstpt
or
stos
leave
pop
les
mov
loopne
mov
sub
mov
pushf
inc
inc
add
scas
and
xor
test
add
fildll
add
fadds
inc
adc
mov
addl
mov
jp
add
jle
jg
out
adc
jecxz
repnz
mov
mov
sbb
mov
out
pop
bound
cltd
sub
sub
cmpsb
leave
int
inc
add
mov
sbb
das
adc
out
lea
in
pushf
repnz
inc
xchg
incb
popf
jne
cmc
cmpsb
es
icebp
xor
inc
and
pop
mov
push
or
mov
add
add
test
inc
or
fimull
cmpsl
add
sbb
mov
push
add
add
sarl
pop
adc
sahf
and
add
jae
jp
stos
push
xchg
push
addr16
pop
aad
das
cmpsl
xor
add
int3
adc
cmpsb
std
cltd
stos
inc
mov
dec
pop
adc
loopne
icebp
push
push
ror
das
lock
sti
outsb
jecxz
fnstcw
outsl
and
clc
dec
jne
cmpb
daa
cmp
fwait
push
sub
push
mov
or
rorl
adc
and
jbe
mov
sbb
xor
mov
cmpsl
in
aas
jb
and
inc
rolb
loop
scas
add
mov
aas
adc
in
add
out
outsb
add
or
mov
jbe
add
add
pop
cmp
jecxz
adc
add
push
add
mov
sbb
sbb
les
jo
xchg
add
dec
aad
push
test
or
lahf
mov
adc
sub
mov
hlt
adc
push
inc
jecxz
add
cmp
mov
je
dec
cmp
pushf
fwait
or
adcb
sbb
push
in
les
jmp
cmp
mov
adc
lea
jns
add
jo
xorb
mov
push
add
add
ss
add
inc
fwait
pop
add
adc
fistpll
mov
clc
xchg
adc
push
add
dec
and
ljmp
jns
sbb
stos
or
outsb
in
add
xor
add
sbb
inc
jp
and
sub
movl
mov
add
add
pop
and
stc
in
and
cltd
movb
inc
add
xchg
shll
movb
push
push
mov
icebp
sbb
add
ds
add
push
cmpl
add
fs
add
add
add
add
add
shll
xor
movaps
push
repnz
add
add
jae
daa
and
test
mov
or
add
out
lock
cmp
add
xchg
push
bound
sbb
nop
add
sbb
clc
cld
jl
mov
xchg
dec
arpl
std
pop
mov
jb
jge
and
mov
jle
dec
jo
cltd
and
movsl
ds
dec
inc
in
jg
arpl
cmp
into
scas
sub
arpl
lahf
sbb
pushw
push
add
test
ds
inc
fcompl
mov
andl
add
daa
jl
add
add
lcall
xchg
add
lock
cld
es
jge
mov
pop
pop
add
aam
add
dec
add
stos
daa
jl
or
sarb
inc
out
push
icebp
jge
enter
imul
xor
add
jno
mov
out
sbb
push
jns
sub
das
xor
jno
shrb
shl
xor
fsub
xor
jmp
mov
cmpsb
add
fsubr
or
shll
push
pop
mov
lahf
je
adc
lods
add
in
lods
and
add
test
or
sbb
or
loope
and
jb
inc
or
nop
test
jmp
mov
loopne
xlat
jmp
outsb
mov
xchg
push
adc
mov
mov
nop
jnp
lret
push
insl
stos
jne
sbb
cmpsb
stos
sbb
fisttpl
add
outsl
pop
add
popa
adc
repnz
sub
add
push
je
test
imul
out
add
push
sbb
mov
add
pop
add
pop
mov
add
add
xor
push
ret
or
out
mov
mov
add
enter
fisubs
sbb
sti
sarb
aaa
addl
sbb
add
mov
and
add
adc
je
dec
lds
sub
out
cli
test
xlat
out
out
adc
aaa
jns
mov
mov
jp
out
add
cmp
pushf
mov
scas
inc
pop
cld
cmpsb
fadds
pop
xor
mov
pop
add
outsb
pop
push
xor
dec
add
in
dec
jle
sti
les
xchg
es
into
jg
jl
loope
push
clc
data16
fldcw
cli
arpl
and
add
mov
xchg
rolb
ljmp
add
add
xor
cli
mov
frstor
movsl
cmp
jl
sbb
outsl
lods
xchg
push
add
lret
lret
pop
je
fwait
int3
loop
push
iret
push
sbb
mov
push
adc
jb
mov
push
mov
xchg
les
add
push
test
cmpsl
adc
outsl
adc
rclb
sub
pop
shl
sbb
push
push
mov
push
inc
popa
adc
fwait
xor
lret
xorb
cmp
sbb
repnz
sub
mov
jg
cmp
scas
in
imul
mov
lods
pop
xchg
sbb
aad
nop
xor
sti
inc
ror
or
loopne
xchg
add
mov
xor
lret
fdivs
xchg
mov
ror
xchg
add
mov
scas
and
push
add
add
adc
mov
cmpxchg
add
arpl
and
dec
mov
xchg
xor
orl
outsb
xor
push
popl
mov
add
adc
loopne
in
cmp
out
and
mov
add
ret
mov
mov
add
jo
add
mov
data16
js
push
gs
inc
cmpsb
xor
jmp
jno
add
add
insl
mov
repz
or
outsl
nop
lret
adc
test
cmc
add
lret
add
mov
mov
jp
sti
xor
jo
add
add
adc
pop
faddl
and
out
mov
inc
in
ss
push
pop
cmp
sbb
lods
dec
add
mov
cmp
loopne
add
dec
pop
mov
add
lret
xor
adc
sub
insl
add
cmp
es
filds
pop
add
cmp
and
pop
add
add
hlt
fucomp
shrb
jns
jae
insl
mov
scas
mov
pop
mov
dec
jno
mov
mov
mov
out
cltd
or
xor
mov
repz
push
shrl
adc
clc
push
dec
sbb
push
push
inc
xchg
add
sbb
dec
lods
sub
cmpsb
inc
jne
pop
inc
enter
add
xlat
or
ret
jno
int3
nop
jne
fsts
cmp
or
cltd
test
sub
push
add
cmp
mov
jb
ds
pop
cli
dec
add
lds
and
int
nop
test
jecxz
in
lret
ja
pop
xchg
add
dec
and
xchg
add
mov
sub
loope
adc
cld
push
pop
jg
push
dec
add
std
jb
in
in
cmpsb
pop
jae
push
leave
push
xchg
xor
or
cli
xchg
mov
or
or
popa
mov
add
dec
insb
repnz
sbb
cmp
out
out
cmp
add
cltd
fiaddl
push
jb
add
cmp
iret
mov
add
push
cmp
or
or
test
std
xor
add
mov
ret
js
push
es
add
inc
xchg
add
push
add
fiaddl
icebp
inc
jmp
in
mov
cmpsb
enter
inc
adc
ljmp
jle
sbb
outsb
stc
mov
or
add
gs
dec
add
sub
mov
mov
data16
test
cld
jmp
mov
dec
inc
xchg
lret
mov
sub
push
std
shll
jb
jp
enter
cld
push
xor
jnp
add
incb
jae
add
out
or
add
fs
out
xchg
movsb
jecxz
push
repnz
into
mov
add
inc
es
filds
nop
or
dec
add
loop
adc
testl
cmp
cmpsl
cwtl
xchg
pop
xchg
xor
push
loope
cmp
mov
stos
sbb
pop
add
jg
ja
add
inc
test
mov
push
pop
xchg
inc
addb
dec
je
push
test
stos
add
adc
data16
mov
xchg
mov
lods
dec
jp
mov
dec
add
mov
sbb
xor
repnz
lret
add
add
or
arpl
lods
push
push
aam
add
cli
add
lods
andb
add
sub
and
jno
ljmp
mov
das
add
rcrb
pop
or
loop
jne
mov
aad
stos
pushl
stc
shll
dec
outsl
cwtl
mov
jmp
addr16
mov
cld
xor
sbb
sbb
push
add
push
cmp
cmp
mov
jle
into
sbb
mov
mov
sbb
sub
sarl
ret
and
sahf
xchg
add
andb
add
add
pop
cmp
mov
arpl
data16
and
stc
inc
lahf
inc
xchg
mov
dec
push
add
mov
add
inc
sahf
sbb
sub
stc
inc
sub
push
mov
out
mov
negb
daa
cmpsb
outsl
add
in
repz
fisubrs
outsl
xchg
dec
fcomps
add
mov
cmpsl
or
icebp
mov
add
mov
cld
ljmp
rolb
or
add
ret
pop
pop
test
pop
orl
add
std
ss
arpl
mov
push
arpl
or
push
mov
jne
and
add
mov
sbb
aas
add
aas
jbe
xchg
inc
sti
cmp
test
and
push
mov
xchg
in
and
out
mov
mov
jecxz
xor
cmpsb
push
mov
pop
add
pop
sub
or
push
ljmp
imul
divb
add
push
mov
outsb
xor
inc
sti
in
test
dec
add
jge
scas
dec
adc
jp
popl
cmp
cmpsb
test
call
add
add
mov
adc
add
lret
stc
cs
jp
xlat
xchg
cmp
sub
out
inc
mov
test
push
iret
add
push
pop
add
add
popf
mov
scas
pop
fistpll
add
pop
add
leave
add
test
push
mov
mov
bound
fstps
pop
xor
enter
cmp
jno
sub
push
adc
mov
aaa
xor
or
inc
xor
in
add
cmpsb
test
and
add
add
pop
jnp
stc
mov
aam
or
add
jb
or
mov
filds
pop
mov
push
inc
cli
aas
in
add
rcrl
mov
in
jg
repnz
mov
push
add
test
pop
scas
insl
fdivrs
movsl
das
push
add
mov
fwait
or
loop
add
mov
adc
ret
fildl
add
add
movsb
cmpsb
mov
adc
push
dec
adc
push
add
or
and
mov
push
mov
sbb
add
fstpt
stos
mov
pushf
pop
add
cmpsb
add
jg
sub
fisubs
cmpsl
ficompl
pop
loop
adc
cmc
mov
in
in
js
xchg
sbb
add
xchg
mov
sub
jecxz
gs
add
sub
jecxz
dec
divb
xlat
xor
add
add
outsl
pop
leave
mov
loopne
stos
mov
leave
lods
add
add
je
or
lahf
pop
loopne
dec
push
mov
sbb
push
ljmp
call
scas
lahf
pop
mov
idivb
sbbl
add
and
int
insb
sbb
leave
sbb
and
in
add
add
jnp
mov
mov
add
mov
add
add
lods
mov
incb
orb
cmp
loope
push
add
rcrl
js
lock
cmpsb
xor
int3
mov
pop
xor
add
jge
dec
dec
dec
lret
add
fimuls
push
jecxz
fwait
dec
outsl
jae
cmp
cmp
cmp
adcb
outsl
mov
add
inc
test
push
add
orb
sub
inc
insb
test
test
mov
xor
or
cmc
adc
in
or
ljmp
add
icebp
je
and
iret
add
and
add
add
les
xchg
add
movsb
push
in
fbld
mov
add
mov
cmpb
inc
mov
mov
inc
add
add
roll
stos
aad
cmpsl
ja
arpl
aas
popw
scas
js
mov
int
fcoms
add
pop
lahf
sub
add
add
cmc
add
js
jge
stos
jb
in
jle
js
cmp
add
sub
les
cli
movsb
je
sbb
sub
insb
les
mov
dec
jae
add
add
sub
pusha
fimuls
xor
aas
repz
sbb
dec
jmp
sbb
add
repz
mov
or
sbb
stc
mov
shl
ljmp
daa
mov
or
jmp
adc
fildll
inc
leave
pop
add
scas
test
cmp
clc
pop
or
or
lock
pop
add
les
mov
add
sub
or
or
jmp
cmc
clc
pop
cld
les
inc
arpl
or
stos
mov
inc
shlb
jne
loopne
lea
adc
add
cmpsb
add
pop
add
cmpb
movsb
dec
into
cmpsb
add
cmc
xor
mov
dec
sbb
stos
std
rclb
push
lods
insb
or
cmc
mov
jns
aas
jp
add
add
addb
outsb
and
das
fldl
rclb
in
in
mov
dec
stos
or
pop
or
sub
cmpsl
push
ds
cmpsb
shr
scas
mov
pop
xchg
mov
call
push
cli
insb
push
mov
push
and
lret
rcrl
dec
add
add
loope
xor
int
repz
sbb
add
in
mov
sub
mov
sbb
icebp
inc
or
xchg
ds
in
out
add
pop
push
fiadds
ljmp
push
addr16
lret
aad
ljmp
data16
sbb
cmpsl
mov
ffree
cmp
add
inc
xor
adc
stc
cmp
clc
jno
add
xchg
mov
add
mov
jo
test
sti
nop
add
xchg
cmp
xchg
xor
movsb
out
std
xchg
jno
je
cmp
sbb
add
inc
inc
mov
inc
call
mov
popa
incl
lock
pusha
xchg
sbb
add
jecxz
push
jo
xchg
lcall
cli
pop
rolb
jecxz
test
add
add
lcall
pop
rol
cmp
sub
jp
lret
mov
divb
jge
cmp
add
popa
popa
inc
rorl
es
das
rol
jmp
adc
mov
mov
nop
or
fildl
cld
shlb
cli
movsb
pushf
or
stos
rclb
sti
adc
fsubrl
jle
fisubl
xor
or
and
paddd
es
pop
mov
pop
stos
add
outsb
cmc
test
out
mov
and
cmp
cmp
rol
repnz
add
aad
xchg
rclb
add
add
js
add
rcrb
xlat
jl
scas
enter
das
lods
push
stc
stc
std
pop
push
cmc
call
cmpsb
xor
mov
cmpsb
mov
and
or
arpl
cmp
lret
je
cmp
fstpt
add
cmpsb
pop
xchg
jl
adc
into
push
dec
add
add
adc
mov
sub
fsubl
jne
add
add
das
sub
xchg
pop
cmp
or
jp
aas
fidivl
cwtl
mov
push
inc
dec
jg
out
popl
and
add
data16
adc
or
push
mov
add
jne
add
add
and
out
pop
cld
loop
xor
cmp
popf
jge
add
pop
sub
mov
jo
movsl
adc
test
dec
adc
jp
mov
inc
jb
sub
movsb
xchg
pop
pop
sbb
add
mov
or
add
push
add
out
add
cld
sbb
inc
jmp
cltd
mov
add
pushf
add
pop
xchg
test
jmp
mov
dec
cmpsb
or
add
mov
iret
add
add
mov
jne
or
inc
fcoms
cmpsl
add
faddl
repnz
sbb
iret
lds
sub
imul
in
xor
lods
int3
out
mov
add
and
sbb
push
ja
jg
push
add
add
add
dec
lds
stos
mov
xor
clc
loope
jnp
add
inc
push
cmc
adc
push
in
add
mov
jne
cmp
pop
lahf
fst
add
pop
test
push
or
popa
rclb
out
jno
push
stos
mov
cs
sahf
jl
sub
test
sub
rcr
add
inc
jg
push
jo
xor
out
or
lahf
sub
jmp
in
cmp
mov
add
jge
jb
test
mov
test
add
lea
out
inc
add
and
add
mov
rcll
sbb
lahf
dec
popa
enter
add
dec
add
mov
data16
add
flds
push
pop
dec
es
xor
jge
mov
xchg
or
loop
xchg
dec
adc
les
add
aam
jo
xor
mov
jmp
sbb
mov
daa
out
cmp
ljmp
popa
loope
add
inc
cmpsb
push
add
xchg
and
pusha
sbb
pop
xor
xchg
jp
nop
add
popf
or
add
lea
stos
jl
jmp
add
stos
lcall
mov
mov
pop
xchg
sbbl
decl
add
ret
sub
pop
out
sbbb
add
mov
sub
sub
ds
cmp
dec
cmc
mov
push
fisubrl
cli
outsl
subb
push
lods
and
add
mov
stos
in
xor
add
pop
mov
cmp
jae
mov
or
pushf
das
add
add
cmp
scas
add
add
frstor
xor
lret
sbb
lods
cli
out
leave
xchg
xchg
cltd
int
les
sbbl
add
clc
add
add
std
sbb
mov
lret
insl
jno
les
and
inc
cmc
xchg
xchg
or
notb
add
sub
lds
dec
testb
cmp
xlat
xchg
loope
ds
inc
jl
add
add
add
imul
xor
cld
add
add
fcomi
add
add
xchg
stos
add
add
add
addr16
xchg
jmp
adc
int
loopne
adc
mov
out
fwait
add
push
xor
imul
cld
add
je
lea
lcall
les
imul
sbb
sub
and
rol
orl
xchg
add
jl
shlb
out
imul
mov
adc
add
jmp
fimull
adc
popl
jns
fwait
jge
sahf
xor
pusha
xchg
xchg
xlat
add
push
push
inc
or
movb
adc
xchg
dec
jle
negl
mull
daa
add
add
push
xchg
scas
xor
jmp
cmpsl
test
inc
sahf
mov
fwait
stos
and
bound
fs
mov
add
mov
cmp
lret
roll
testb
add
add
inc
cmpsb
inc
mov
cs
popa
aam
add
push
cli
add
mov
mov
bound
sldt
ret
cld
lahf
fwait
dec
mov
sub
xchg
scas
add
int3
sub
inc
xor
out
or
push
mov
mov
cmp
add
movl
xchg
int3
cmpsb
in
mov
dec
cmp
hlt
add
addr16
add
lods
mov
call
or
mul
inc
shlb
or
mov
mov
or
cld
dec
mov
add
test
xchg
add
and
sbbl
pop
test
sti
andl
add
iret
sahf
rol
clc
lds
sub
add
imul
mov
cltd
add
fdivs
lcall
add
mov
cmp
xchg
mov
sbb
and
lock
jne
xor
rclb
mov
pop
pop
fbld
lret
adc
push
scas
addr16
rcrb
iret
mov
bound
out
xchg
cwtl
pop
add
add
push
fistpl
add
out
inc
shrb
das
sahf
xor
and
clc
push
ss
out
inc
jno
cmp
and
xor
enter
push
decb
mov
and
pushf
es
dec
add
test
mov
and
mov
xor
into
mov
add
and
add
test
lea
mov
or
add
mov
xchg
add
fidivrl
insl
je
pushf
jno
add
aas
mov
cmp
add
test
jecxz
adc
add
ljmp
iret
add
xor
add
dec
into
rorl
xor
or
mov
sbb
int
pop
jecxz
and
shrb
pop
test
adc
insb
adc
ficoml
aam
add
bts
lods
inc
add
loope
dec
test
insb
xor
jge
jae
loopne
add
imul
sub
fidivrl
cmc
adc
mov
add
xor
inc
inc
sbb
inc
pusha
loope
test
cmpsl
xor
add
pop
add
add
mov
jmp
jo
imul
add
out
aaa
add
cmp
or
jns
push
cmpsl
stos
push
adc
int
sub
cmpsb
dec
nop
inc
loope
in
jb
in
loop
fsubp
pop
ja
dec
push
xor
sbb
adc
pop
inc
ret
les
mov
and
add
nop
les
and
xchg
or
lea
add
gs
push
sub
add
pop
shld
add
and
mov
xor
movsl
add
andb
adc
sub
inc
fwait
negl
sub
stc
mov
bound
mov
fistpll
add
dec
jecxz
cmpsb
mov
jl
out
adc
inc
mov
popa
scas
out
cmpsl
hlt
push
in
jge
arpl
lods
js
cmp
push
pop
jae
xchg
in
movsl
add
mov
mov
and
fwait
lods
mov
xchg
int3
jp
loop
and
mov
sarb
cli
push
jns
inc
popl
setp
prefetch
stos
push
mov
add
mov
jae
add
addr16
inc
in
add
pop
mov
and
es
inc
lds
adc
push
fs
sbb
push
movb
decb
push
test
push
jg
add
mov
cmp
push
cmpsb
add
loop
movsb
push
dec
add
popf
sbb
imul
scas
mov
imul
add
sbb
add
ss
mov
jle
push
lods
lahf
adc
fldenv
jbe
andl
stos
xchg
aas
lds
sub
xor
jmp
xor
adc
inc
and
mov
out
push
addb
cmpsl
popa
mov
add
std
dec
add
inc
cmpsb
cltd
sti
jo
add
mov
lock
pop
jne
mov
jo
arpl
ss
add
jns
add
cmpsb
sbb
sbb
ficoms
push
test
movsl
shlb
out
lea
arpl
jnp
addr16
dec
fstpt
aad
sti
add
arpl
pop
xchg
repnz
xchg
data16
xchg
subb
leave
lea
imul
inc
xchg
adc
cmc
push
andb
pop
pop
or
cs
jne
mov
sbb
add
inc
mov
or
addr16
daa
jne
xchg
push
test
push
dec
ret
sub
mov
add
add
lock
dec
sub
push
mov
jmp
dec
xor
xlat
pop
daa
cwtl
add
lods
add
push
inc
cmp
mov
add
or
les
popa
sbb
cmpl
add
mov
jl
lea
stos
and
jmp
insl
out
aad
lds
dec
cmp
mov
and
sub
cmp
pop
mov
nop
push
mov
cmp
lret
add
push
add
add
cld
repz
add
add
add
inc
pop
adc
mov
sub
add
int3
mov
push
stc
xchg
daa
imull
jns
rcrb
jp
or
add
mov
add
loopne
cmpsb
ret
mov
out
and
inc
add
add
aas
pop
ljmp
jmp
push
add
dec
gs
inc
xor
out
add
adc
pop
inc
cmp
int3
xor
add
jne
mov
xor
daa
add
out
mov
xchg
test
lock
loopne
adcl
jns
add
dec
dec
xchg
movzwl
dec
testl
and
arpl
pop
pop
bound
cmpsb
adc
hlt
les
adc
sbb
or
data16
imul
mov
adc
ljmp
jae
rcr
add
fildll
mov
ret
scas
push
jl
cmp
aam
cwtl
jb
adc
cld
ret
xor
and
pop
cs
aad
mov
adc
add
out
mov
jnp
inc
inc
mov
sub
lods
mov
addr16
or
jle
dec
frstor
call
cmc
cmp
sub
jae
add
mov
jle
js
mov
jle
xchg
inc
mov
jnp
aas
add
cmp
push
xlat
scas
or
ret
out
fiaddl
lds
shlb
out
xchg
xchg
sub
add
add
pop
add
outsl
in
das
xchg
jae
add
pop
loopne
pop
mov
sub
stc
scas
sbb
and
imul
cwtl
jg
movl
add
es
add
int3
mov
out
jle
rolb
push
sbb
jecxz
add
mov
add
mov
iret
ljmp
scas
rcrl
sub
add
xor
or
add
push
mov
bound
add
add
pusha
jne
das
push
mov
and
or
es
out
mov
nop
push
add
push
rcrb
pop
jg
out
outsl
cmp
jge
ror
push
cmc
cmp
dec
cmc
xor
pop
outsl
sbbb
pop
sbb
cld
dec
cmp
addl
ljmp
pop
scas
rclb
add
ds
movsb
ss
add
sub
push
add
jnp
pop
jle
add
cltd
adcb
bound
push
sub
add
add
lahf
jle
add
ljmp
movsb
aas
add
rcll
cmp
lret
test
cs
ficomps
pop
or
sbb
ljmp
outsl
stc
and
push
sbb
repnz
sbb
fldenv
add
inc
fsin
adc
in
fcomps
xchg
lods
and
or
push
lds
push
mov
cli
xchg
add
sbb
add
test
push
add
jl
add
xchg
mov
scas
loope
dec
xor
xor
pushf
fstpt
cmp
out
push
add
xor
sub
add
cmpsb
mov
dec
pop
add
dec
loope
add
shll
pusha
mov
ljmp
cltd
sti
dec
add
pushf
adc
sbb
mov
inc
jl
cmp
into
js
enter
lods
insb
xor
cmp
lret
add
dec
ret
arpl
or
int
fisubrs
push
jl
lods
add
mov
scas
xor
xchg
and
add
cwtl
add
add
aam
gs
int3
mov
out
cmpb
sbb
mov
inc
dec
inc
jle
pop
mov
adc
mov
inc
cmc
pop
and
xlat
jmp
ret
ret
dec
cmp
ja
and
add
xchg
out
add
jbe
pop
rclb
adc
insl
or
mov
push
xchg
movsb
mov
sub
add
adc
sub
das
add
mov
jns
add
stos
aad
or
repz
cmpsb
lds
fcos
je
cltd
push
dec
lea
idivl
add
mov
jo
aad
add
cwtl
jns
add
mov
cwtl
pop
fisttpll
xor
adc
push
cld
cwtl
sti
push
xchg
cmp
pop
add
mov
add
mov
inc
or
and
jle
into
adc
and
or
fbstp
dec
sbb
jno
mov
dec
sbb
out
sti
je
popa
movsl
jecxz
inc
add
add
cmc
jle
mov
cmpl
sbbl
lahf
into
sbb
fsubrl
hlt
sahf
in
or
sub
and
test
jg
or
mov
cmp
loop
jl
out
movb
or
cs
arpl
jns
test
or
xor
xchg
shll
movl
add
mov
movb
mov
pop
mov
xchg
add
in
outsb
mov
ret
push
cmp
scas
cmp
shrb
mov
dec
add
cmc
dec
xor
call
lods
fldl
xchg
scas
into
fsubrs
jecxz
pop
packuswb
or
movsl
cmpb
pop
in
rorb
mov
mov
scas
push
add
jge
je
out
ljmp
inc
stc
mov
xorb
xchg
ljmp
add
cmp
push
lds
add
stos
xor
fstl
add
adc
push
dec
lcall
adc
add
add
mov
jbe
mov
push
xor
dec
mov
fsubs
popf
mov
push
sbb
push
sub
outsl
xchg
inc
xor
add
jo
xchg
cwtl
je
mov
push
mov
push
inc
inc
fbstp
pop
fnstsw
inc
testl
test
imul
cld
jmp
mov
mov
aas
lcall
add
and
scas
add
jb
cmpsl
lret
jno
aas
or
cmp
loope
pause
jp
inc
popa
rcll
sahf
or
push
push
cmpsb
xchg
jb
pop
mov
gs
nop
verw
xor
pop
mov
outsb
add
inc
mov
mov
xchg
add
fisubl
rolb
and
mov
shrl
rolb
or
pushf
add
xor
push
ljmp
int3
sbb
cmp
fadds
push
fxch
sub
aas
cld
fwait
or
jg
leave
sbb
int
pushf
fwait
jb
push
iret
addr16
repnz
and
adc
mov
mov
ss
sub
xchg
push
das
imul
pop
or
stos
inc
and
negl
cmp
int3
repnz
mov
and
cmp
adc
sub
mov
out
mov
cmpsl
add
dec
imul
and
fldcw
mov
jo
outsb
das
hlt
or
jnp
jnp
xchg
test
enter
sub
lret
cmp
push
or
rorl
dec
and
cmpl
push
pop
sub
cli
jne
add
mov
cmp
and
aad
cltd
jnp
leave
cmc
aas
pop
add
sub
sub
fnstenv
inc
ja
and
add
movsb
adc
std
mov
cmp
add
xlat
test
add
int
test
pop
add
xlat
adc
adc
dec
push
lcall
add
jbe
sbb
mov
arpl
cld
mov
add
rolb
leave
addr16
mov
jo
or
and
arpl
addr16
mov
jecxz
mov
adc
jle
sbb
addb
add
outsb
push
outsl
xchg
dec
add
js
fcomi
add
add
xor
sub
xor
in
jge
bound
lret
xor
or
push
and
inc
mov
sbb
xchg
or
inc
add
pop
pop
ja
mov
mov
lock
jb
cwtl
mov
and
push
dec
xor
add
and
push
and
adc
mov
jge
imul
and
add
dec
add
inc
mov
lds
std
cli
int3
adc
iret
xor
add
add
mov
xor
inc
xor
xchg
ljmp
mov
xchg
dec
and
fs
and
add
test
mov
pop
dec
enter
xor
fcomi
pop
pushf
movsb
add
lods
lods
lcall
pop
or
iret
sub
in
mov
add
stos
jbe
xor
sub
movb
cld
inc
jno
or
add
mov
ret
lock
test
sbb
roll
out
or
fldt
mov
aaa
add
inc
inc
xlat
jne
clc
jns
jno
rcr
xchg
repnz
dec
cli
lret
jne
inc
push
and
sarl
xor
outsb
push
fiaddl
sbb
cmp
loop
pop
push
jb
xor
ret
dec
or
add
xchg
add
inc
or
aaa
adc
add
call
nop
add
adc
add
les
xchg
add
sub
add
rcll
add
lret
fs
xlat
nop
ljmp
aad
add
movsb
push
mov
clc
or
scas
sbb
shll
dec
mov
sarl
jne
sub
sbbb
ja
xchg
ficompl
pop
jl
sub
mov
mov
sbb
mov
idivb
sbb
mov
cmp
push
aad
sbb
mov
push
add
cmp
movsb
or
mov
popf
add
sbb
sti
mov
cld
push
dec
push
jecxz
xchg
es
push
xor
xchg
or
sbb
dec
cs
add
sub
in
and
sub
push
sarl
add
adc
inc
mov
mov
sbb
add
add
add
push
popa
add
enter
mov
add
pusha
mov
add
mov
negl
bnd
shlb
test
sub
pop
cmp
stos
push
decb
fadds
lock
push
addr16
xchg
clc
fistps
push
lods
jmp
jl
jns
add
movsb
pop
pop
add
mov
mov
fstp
lret
xchg
rclb
outsl
inc
lcall
cs
jae
fstps
add
adc
cltd
je
inc
rorb
mov
inc
inc
jae
jno
mov
pop
lods
lea
mov
add
into
mov
loop
add
and
xchg
cltd
cmp
lahf
lret
aaa
fstpt
mull
pop
popf
lods
add
push
adc
xchg
pop
out
pop
mov
push
fisubrs
je
xchg
xchg
int
push
dec
add
in
adc
cwtl
aas
cmp
mov
cs
mov
cwtl
add
insb
add
out
xor
xchg
outsl
movsl
adc
add
sbb
push
shll
mov
xchg
out
lea
sti
mov
pop
or
test
add
lock
sbb
mov
mov
mov
and
lret
and
das
lea
mov
shrl
test
lcall
mov
icebp
add
lret
jne
push
mov
lea
mov
pop
mov
mov
arpl
outsb
and
xor
inc
sub
stos
add
lods
sub
cmp
xchg
jp
iret
shl
aaa
cmp
jae
lock
add
loopne
test
imul
jno
xchg
push
fsubl
and
xor
mov
dec
imul
mov
add
ficomps
outsl
les
jl
adc
dec
fists
dec
add
lea
sbb
add
adc
add
cmp
mov
sarb
cmpl
inc
add
leave
jne
jne
daa
cld
dec
jns
andl
inc
test
sbb
inc
adc
imul
out
add
cli
pop
push
add
add
mov
mov
add
movsl
or
bound
jb
add
add
mov
mov
add
inc
push
add
push
dec
push
push
jbe
loope
fmuls
add
or
add
lds
fistps
add
test
or
xor
or
add
push
outsb
cs
mov
or
jp
add
add
ds
addr16
mov
mov
jmp
adc
fsincos
add
test
insb
pushf
ss
sbbb
icebp
xchg
add
xor
add
arpl
add
addl
imul
icebp
dec
test
ret
les
adc
sbb
test
push
jb
adc
repz
es
test
sar
cmp
inc
add
inc
add
inc
popa
and
cmp
sbb
push
pusha
push
out
inc
cs
push
scas
mov
stos
or
add
add
stc
sarl
pop
test
push
add
pop
bound
and
cmc
mov
mov
pop
xchg
sbb
xchg
icebp
lcall
sbb
dec
call
jb
sbb
cltd
inc
sbb
add
ret
mov
xchg
mov
repz
pop
push
mov
jle
xchg
sarl
and
test
add
aam
orb
fdivl
sbb
sub
pop
sbb
lea
mov
lahf
cwtl
add
jno
mov
cmp
outsl
in
testl
sbb
xchg
cmp
jae
jno
addr16
sbb
int3
mov
scas
and
pop
adc
jbe
rorl
push
divb
test
enter
push
rol
jns
sub
test
loopne
dec
loope
dec
cwtl
test
sbb
add
add
inc
dec
adc
push
test
sbb
add
out
mov
shl
or
jg
sbb
lods
pusha
sbb
add
xlat
add
jbe
pop
sub
or
mov
mov
add
push
add
jae
pushf
xlat
mov
in
lahf
clc
out
mov
mov
pushf
leave
xchg
into
addr16
ljmp
sub
inc
sbb
mov
xchg
lods
mov
ja
neg
xor
test
lahf
inc
add
add
dec
sub
add
mov
dec
stos
in
sub
inc
inc
jecxz
in
push
push
add
inc
enter
cmpl
mov
scas
pop
lret
add
aaa
ficomps
jno
add
cli
stos
cmpsb
imul
mov
push
fildl
dec
ret
mov
fcmove
lds
mov
pop
push
add
add
mov
rolb
lret
cmpsb
aaa
or
adc
pushl
addl
sti
dec
fistpll
mov
cltd
and
mov
ds
mov
dec
push
dec
rcrl
fstpt
add
repnz
ds
in
xchg
add
ret
inc
mov
dec
xchg
stos
and
xchg
jge
popa
icebp
ds
adc
iret
xor
inc
add
and
cmp
sbb
add
fildl
clc
mov
cmp
orl
ret
mov
pop
mov
inc
mov
xchg
movsb
es
push
jp
inc
addr16
mov
sub
cld
xchg
stos
sti
push
xor
out
mov
add
call
add
and
cmp
cmp
jb
and
dec
mov
push
daa
push
adc
mov
dec
cltd
sub
add
sbb
clc
aas
or
pop
loopne
add
add
bound
es
mov
out
sub
cmp
mov
mov
out
xchg
or
out
cmpsl
mov
out
int
sti
int
mov
add
mov
lret
push
test
popf
mov
jbe
sbb
inc
mov
or
leave
ss
addb
add
mov
mov
dec
movb
jp
xor
cmpl
add
push
movsl
mov
aas
jne
dec
bound
cmp
repnz
pop
setbe
mov
add
fnstsw
add
inc
stos
iret
cld
add
mov
add
mov
mov
xchg
int
jl
mov
add
call
or
iret
fs
rcl
es
xor
insb
xchg
lods
test
mov
inc
dec
mov
ret
pop
adc
imul
add
mov
and
int3
adc
dec
pop
idivl
lret
add
ds
jbe
pop
inc
add
pop
add
xlat
jge
cmp
push
out
and
pop
xchg
call
add
cli
add
xchg
out
fmull
lods
ret
cmp
sti
scas
add
int3
push
enter
mov
xor
cmp
cmp
push
sub
addb
jmp
cmp
data16
loop
shll
int
xlat
pop
cld
pop
dec
imul
sub
push
test
sub
into
rorl
leave
lret
pop
cmp
fmuls
add
push
pop
in
dec
cmp
dec
push
add
fcmovb
incb
inc
outsl
or
push
popf
and
inc
hlt
gs
lods
xchg
cmc
test
add
icebp
cli
popl
xlat
cltd
fmull
rcr
call
movsl
stos
mov
xor
adc
pop
push
fdiv
and
bound
test
push
ret
sub
push
adc
cli
push
mov
xchg
dec
dec
mov
mov
sti
nop
add
push
push
add
daa
mov
jno
add
mov
sub
sahf
mov
lock
popl
ret
fisubl
cs
repnz
pop
inc
and
mov
sbb
test
outsl
add
sarl
sub
xchg
sar
aam
add
pop
loopne
sbb
jbe
cwtl
add
xchg
adc
dec
mov
stc
add
leave
xor
mov
xor
out
and
js
dec
out
dec
inc
addb
add
push
adc
cmp
mov
adc
pop
xchg
loopne
add
inc
dec
add
lods
imul
add
push
pop
jecxz
add
cli
pop
mov
mov
cltd
jmp
aad
xchg
jbe
pushf
ret
add
in
hlt
lcall
mov
xor
push
xor
mov
loop
push
inc
bound
cmpsl
sub
mov
add
cmp
xchg
ficoms
mov
sub
pop
mov
add
mov
fcomps
cmp
mov
fisubl
pop
icebp
insb
fs
sbb
jmp
jl
add
fcmovu
out
xor
gs
lds
icebp
jae
sbb
add
jge
add
das
add
scas
pop
dec
add
insb
dec
dec
mov
mov
leave
add
lock
inc
bound
sub
add
pop
cmp
arpl
mull
adc
shrb
sbb
pop
roll
jecxz
sbb
mov
mov
mov
ss
mov
popf
add
mov
nop
test
enter
andb
add
insb
push
clc
adc
roll
insl
dec
add
mov
add
dec
and
ljmp
xchg
mov
movsb
add
and
and
pop
fwait
push
fwait
xor
sub
cmp
mov
xchg
sub
and
fistps
cwtl
stc
daa
pop
add
movb
dec
out
add
cld
lods
pop
sarl
cmp
add
and
add
inc
mov
lret
aam
cmp
add
out
jno
loop
out
add
in
fadds
bound
iret
and
pop
stos
hlt
popa
cmp
jns
add
add
mov
add
pmaxsw
cs
jns
enter
sub
adc
add
inc
inc
push
add
add
xchg
mov
js
add
and
shr
mov
adc
pushf
in
push
lcall
ds
dec
in
lret
mov
add
lods
add
cmp
aas
pop
xor
add
or
and
push
mov
gs
jnp
pop
mov
out
sbb
push
rorb
add
enter
ret
add
mov
add
pop
add
mov
xchg
hlt
loope
fdivrp
xor
push
dec
add
sti
push
pusha
mov
cwtl
jecxz
mov
xor
cmp
jp
testb
add
cmp
push
pop
and
xor
fiadds
and
pop
ljmp
mov
dec
inc
xchg
ret
aad
mov
inc
lock
jmp
add
mov
jg
mov
sbb
test
stos
pop
add
jp
cwtl
sbb
add
ret
add
push
loope
clc
add
mov
inc
push
mov
add
jo
arpl
pop
xor
mov
push
test
pop
mov
ss
movsl
mov
add
mov
add
mov
mov
push
add
cmpb
add
pop
push
xchg
adc
call
jg
dec
call
and
incl
pop
cli
jns
jge,pt
add
in
and
add
xor
jg
push
aad
loopne
cmp
and
ss
out
pop
jecxz
dec
adc
shlb
pop
inc
cmp
jge
xlat
ss
out
aas
jl
fwait
xor
cmpsb
add
sub
incl
popa
movb
add
xchg
pop
pop
testl
fucom
add
test
push
es
lock
aad
xlat
xchg
mov
cmc
icebp
int
ljmp
mov
inc
cli
push
sub
push
ret
push
lea
scas
test
or
mov
xchg
inc
xchg
jno
rorl
push
jnp
test
adc
iret
add
add
movsl
addb
push
insl
leave
push
add
inc
in
cmp
add
push
add
mov
xor
das
xor
adc
in
out
insl
cmpsb
pushfw
cmc
mov
mov
imul
ret
adc
push
lods
xchg
jge
pop
data16
push
clc
mov
mov
xor
push
cltd
cmp
add
cmp
mov
aam
cmp
fisttpl
adc
jb
out
dec
icebp
sub
inc
lock
push
and
mov
add
mov
hlt
sub
inc
add
sbb
aad
cmp
ret
push
sub
and
add
fiaddl
pop
subl
test
adc
jle
xchg
aaa
aas
decl
add
xor
sti
add
xchg
jecxz
add
dec
sub
ja
sbb
mov
jge
add
aas
xchg
add
cmp
sub
mov
lea
sti
data16
add
add
loopne
outsb
fadds
ljmp
adc
lds
ljmp
mov
add
sbb
sub
and
push
test
in
mov
adc
adc
mov
shlb
dec
sbb
add
int3
sbb
insl
mov
xchg
into
into
add
int3
cmp
cmp
jns
lret
das
mov
daa
sub
add
xchg
inc
or
add
cli
imul
nop
pop
sub
add
inc
fimuls
lock
test
loop
jae
fs
sub
scas
xor
in
add
dec
jbe
add
cmp
fcoms
xchg
ja
cmpsb
pop
jb
ficompl
imul
jne
add
jle
push
data16
add
nop
cmc
mov
xchg
jae
push
push
cmp
add
fs
ret
popa
mov
and
add
dec
fnstenv
or
mov
cmp
push
loopne
add
cmc
data16
adc
cmpsb
add
in
test
out
iret
dec
jnp
jg
jecxz
mov
in
add
mov
sbb
push
sub
push
stc
out
pop
jg
cmp
das
cwtl
rcr
xchg
add
inc
push
sub
loop
movsb
mov
hlt
add
mov
adc
or
icebp
mov
add
mov
xor
push
inc
pushf
hlt
or
add
repz
sbb
xorb
inc
mov
ljmp
rcll
mov
push
push
jle
movl
mov
jle
add
jno
fstl
ret
je
add
add
push
loope
and
add
add
clc
out
das
jge
popa
fiaddl
je
clc
inc
add
inc
add
mov
jecxz
push
push
jo
add
pop
add
clc
cmp
loop
dec
or
ret
lods
fwait
or
hlt
stos
mov
jl
dec
xchg
add
or
lods
gs
in
add
sub
roll
les
sti
mov
out
add
add
pop
inc
push
push
xor
pop
cs
outsb
pop
int
pop
adc
fcompl
in
mov
and
adc
inc
aas
add
dec
xorb
or
add
mov
add
add
jl
ljmp
mov
mov
testb
ret
movl
mov
pop
jo
sub
shll
decb
stos
std
js
add
sub
loop
and
int3
cmp
inc
sub
std
dec
cmpsl
add
jp
std
push
sbb
add
sub
push
pop
cltd
and
popf
pop
jge
and
adc
sti
add
add
outsb
push
add
bound
push
mov
pop
mov
mov
iret
je
pop
aaa
stc
inc
mov
mov
sub
adc
jg
push
mov
cmp
cmp
sub
iret
pop
test
jge
pop
xor
mov
sub
addr16
add
xchg
mov
pop
mov
mov
jo
fiaddl
cmp
incb
mov
add
unpcklps
stos
ds
sub
test
test
add
xor
inc
jns
mov
push
pop
into
clc
pop
add
dec
dec
mov
mov
shl
add
mov
movsl
sbb
sarl
rcrl
add
or
cmpsb
mov
test
ds
add
pop
and
pop
pop
scas
loopne
lret
shlb
add
lret
xor
push
lods
push
cmp
jne
dec
pop
sub
in
mov
mov
add
add
popf
cmp
in
pop
inc
daa
jp
sbb
push
jmp
mov
test
js
lret
js
add
add
hlt
mov
dec
ret
push
das
aam
daa
add
push
aam
mov
cmp
add
je
sbb
pop
sbb
push
push
cmp
ret
mov
xor
mov
jnp
pop
mov
je
add
iret
cmp
add
inc
iret
shrb
gs
xor
lea
add
movsb
add
mov
add
mov
sbb
add
pop
stos
js
imul
ja
sbbl
leave
ret
xchg
add
jmp
mov
pop
les
mov
sub
push
outsb
add
and
push
or
inc
add
xor
push
jae
pop
push
push
rcll
adc
adc
aad
add
leave
mov
sub
cli
outsb
mov
add
pop
jecxz
mov
test
add
push
fmuls
jmp
test
divl
les
orl
or
out
or
xchg
jne
xlat
xchg
push
hlt
cmpsb
adc
adc
add
add
and
add
ja
bound
aad
push
xor
daa
xlat
lea
cmp
xchg
sub
mov
and
add
cmp
mov
mov
repnz
es
fildl
add
jae
pop
out
bound
aas
jae
scas
push
push
pop
jbe
mov
add
jge
sub
or
jbe
in
add
fs
call
cmp
xchg
dec
push
pop
lods
pop
jg
scas
sub
cli
jne
dec
pop
clc
add
pop
cmp
or
pop
add
add
lret
mov
cld
rolb
xchg
aad
push
out
test
push
push
dec
filds
nop
es
mov
and
cmp
xor
lods
push
xchg
dec
xor
sub
jo
xchg
inc
jmp
or
mov
rcrl
xchg
xlat
loop
add
inc
pusha
fwait
icebp
add
scas
in
dec
or
cld
and
xchg
int
lret
outsb
add
add
movsl
jge
pop
push
sti
out
or
cmp
or
xchg
iret
test
add
and
add
add
repz
cmp
mov
aas
inc
mov
mov
scas
jecxz
nop
and
mov
dec
and
stos
shl
inc
cmp
mov
cld
test
or
pop
loop
ljmp
mov
test
dec
add
loop
insl
repz
xchg
dec
or
loopne
or
add
enter
mov
and
lahf
addb
mov
fistpll
out
pop
jmp
cmpsl
sbb
call
xor
popa
jp
add
fadds
add
dec
pushf
pop
cmp
mov
mov
add
loopne
add
aad
xchg
je
xlat
adc
aad
jne
mov
orb
out
mov
xlat
add
pop
mov
add
sub
jne
pop
movsl
xchg
dec
and
aam
mov
add
sub
sub
test
xchg
push
mov
test
add
insb
and
loope
mov
or
scas
jl
cli
cwtl
mov
or
shll
scas
jmp
and
fldenv
mov
xor
xchg
mov
test
and
adc
add
add
cli
sarl
outsl
push
inc
mov
pop
inc
add
stc
ret
and
sub
int3
rcrb
fsubs
or
lds
jno
rorl
pop
icebp
aad
mov
add
add
loope
sub
lret
call
das
sub
int3
in
test
cmp
jno
dec
je
push
add
stc
or
add
fisttps
xchg
add
push
adc
pop
dec
std
cltd
mov
scas
scas
data16
sbb
cwtl
in
xchg
mov
xor
rcrl
add
pop
add
hlt
or
leave
or
inc
filds
stc
aad
mov
cmpsb
in
and
stc
push
xor
les
in
xchg
dec
sub
int3
adc
fiadds
stc
int
roll
mov
out
fisttpl
cld
ret
inc
ret
les
sti
push
stc
lret
push
fwait
shlb
adc
xchg
stos
cmp
sub
shr
jnp
pop
call
push
jbe
add
or
jge
mov
sub
add
xlat
adc
mov
out
cmp
xchg
cmp
cltd
dec
insl
sub
aam
lret
lret
pop
push
popa
add
add
xor
ret
push
cmp
push
add
inc
add
or
lret
add
mov
adc
add
mov
and
xor
and
xorb
jb
pop
add
call
push
clc
fimuls
out
rclb
movsb
push
mov
sahf
movsl
xor
or
dec
add
test
xchg
add
outsl
ljmp
cmp
imul
add
add
jge
sub
mov
add
mov
rcrl
cmpsb
enter
in
add
repnz
daa
add
in
push
call
mov
mov
subb
ss
push
and
add
jns
jmp
add
inc
add
add
xor
xchg
cmp
jge
cmp
mov
sub
pushf
xchg
jmp
loop
fdiv
adc
js
adc
sbb
pop
pop
adc
add
inc
sub
or
lret
jp
mov
mov
imul
pop
insl
rcr
add
lret
pop
mov
mov
or
in
dec
cmpsl
dec
aad
add
les
clc
test
in
cmp
out
xor
inc
xchg
int3
xchg
cld
movsb
divb
sub
pop
push
sub
add
push
fstl
and
mov
push
clc
popf
or
xchg
adc
sub
cltd
mov
mov
xchg
add
pusha
in
push
mov
mov
push
mov
and
iret
jns
mov
or
jo
sub
icebp
add
add
sub
shl
mov
mov
xor
sbb
movsl
loop
add
jmp
sbbl
repnz
push
lahf
aas
mov
dec
push
ljmp
add
stc
in
pop
outsb
pop
fstp
stc
jge
xor
scas
mov
rcrb
add
xchg
popa
dec
into
push
add
test
mov
push
addl
mov
push
adc
push
mov
mov
cmpsl
xor
clc
jnp
pop
mov
daa
mov
sub
jg
inc
hlt
cwtl
cmp
xchg
lock
fwait
outsb
add
leave
add
cmp
aam
test
data16
cmpsb
jb
hlt
xor
add
cli
mov
cld
in
xor
out
dec
aas
dec
lods
sbb
mov
push
add
pop
pop
add
add
mov
fnsave
lods
out
xchg
add
mov
imul
cwtl
and
imul
mov
out
stos
test
jl
mov
push
mov
cmp
push
jno
xchg
in
or
aad
add
mov
adc
dec
jb
add
mov
ss
cmp
jbe
add
jmp
jo
and
jbe
jnp
xor
sbbl
lcall
add
mov
pop
pop
mov
lea
pop
rcll
dec
cli
movsl
jp
dec
cmp
add
and
add
divl
pop
push
jg
div
add
dec
adc
add
mov
pop
outsl
dec
rol
leave
sarb
testl
mov
jb
arpl
es
test
mov
xchg
mov
mov
sarb
add
push
pop
popl
push
in
imul
mov
add
mov
ret
rcrl
pop
add
stos
out
call
push
loopne
lds
or
inc
lock
adc
cs
stos
in
scas
pop
rorl
repz
xor
leave
dec
xchg
cmovs
imul
outsb
stos
and
int
gs
int3
imul
ds
insl
pop
push
adc
add
pop
push
inc
jo
hlt
shll
inc
ljmp
mov
loop
es
lods
xchg
jo
jb
add
stc
clc
add
dec
add
loopne
sbb
ja
jge
pop
cld
sub
fsubrl
add
imull
rolb
dec
pusha
cmp
adc
movsl
fadds
jo
shll
shl
push
lock
addb
loopne
cmp
mov
sub
cmp
sbb
mov
sbb
push
push
jb
fcmove
xor
jb
mov
sub
sarb
lret
mov
sbb
jmp
sbb
xor
sbb
mov
adc
mov
jb
daa
or
cmp
mov
shl
cmp
pusha
add
int
testl
jb
test
inc
aaa
xor
xchg
mov
outsl
aaa
cmpsb
xor
adc
ss
cmp
push
ss
cmp
stos
jp
cmp
adc
inc
mov
and
mov
cli
ret
jne
add
add
fmuls
cmp
push
shr
mov
pop
cld
imul
push
sub
pop
insb
loopne
sub
daa
pop
add
loopne
xchg
fwait
add
push
push
adc
ds
test
cmpb
add
add
in
xor
mov
sub
push
outsb
add
and
popa
mov
inc
les
dec
mov
pusha
into
sbb
enter
insb
test
mov
divb
xchg
push
popf
add
pop
push
add
popa
pushf
sub
push
add
add
insl
out
xchg
lods
stos
fs
add
loop
loopne
pop
lods
sub
xchg
or
test
add
repz
nop
imul
addb
lcall
inc
fimull
addb
loopne
adc
lods
lods
add
test
aaa
add
subl
ficompl
sbb
popf
pusha
int
in
sub
add
cmpl
and
sarl
and
add
ljmp
push
jo
out
stos
rol
rcrb
pop
leave
xor
dec
mov
push
insl
xchg
faddl
movsb
push
fs
inc
imul
aas
add
xor
add
out
xchg
sahf
xor
inc
dec
jmp
inc
scas
mov
repz
mov
jge
sahf
inc
jnp
jne
add
mov
cmp
mov
xchg
cmc
mov
lret
push
ss
rclb
push
ja
sbb
add
cmpsl
insl
jb
in
push
icebp
add
aad
push
sub
fwait
sti
cmpl
xchg
push
or
lock
dec
movb
faddl
xchg
in
add
orb
dec
mov
sahf
inc
into
or
cmp
bound
imul
or
add
adc
int
sahf
adc
mov
xchg
out
cmp
out
es
pop
imul
aam
add
jl
lahf
add
add
lcall
adc
lcall
int
add
insl
pop
pop
cltd
or
inc
mov
out
data16
sti
or
mov
ss
movsl
pushf
lea
sbb
mov
sub
cmp
inc
mov
or
sbb
add
les
clc
mov
sub
and
sbb
std
push
xor
lret
inc
decl
push
stos
add
add
add
mov
pop
jge
push
sub
push
mov
ror
cmp
xchg
xchg
sbb
xor
imul
dec
xchg
fadds
xchg
cmp
or
pop
xor
scas
mov
aaa
dec
xor
fs
sub
mov
add
inc
mov
and
std
out
mov
fwait
sbb
mov
sub
or
ltr
es
icebp
mov
sbb
stc
test
jp
icebp
sub
leave
cmpsb
cmp
sub
mov
push
ds
cmp
add
push
and
add
add
clc
xchg
pop
pushf
pop
sub
pop
add
dec
push
cmp
and
mov
add
in
adc
ja
popa
sahf
sti
enter
sbb
cwtl
out
pop
dec
data16
add
dec
fwait
lods
mov
add
into
rolb
rolb
mov
cmpxchg8b
add
inc
xorl
add
mov
cltd
test
sub
or
dec
rol
shll
pop
cmovnp
dec
add
add
xor
es
sbb
lock
mov
sbb
push
or
rorl
add
push
dec
bound
dec
insb
xchg
add
gs
pop
testl
and
test
cltd
cmpl
sub
adc
out
flds
adc
cmpsb
add
cli
xchg
sub
test
mov
mov
add
mov
add
outsl
adc
mov
xchg
or
ficoms
inc
nop
mov
fsts
add
rclb
cmp
repz
mov
add
cmpsl
add
shr
addr16
mov
pop
push
jne
insb
cmp
mov
js
loope
cmp
add
mov
or
or
je
add
add
cwtl
add
or
add
cmp
ds
jns
cltd
shlb
xor
rcrl
add
cmp
adc
add
in
gs
add
arpl
fisttps
or
push
roll
lret
hlt
add
sub
cmpsb
add
pushf
mov
add
add
loope
stc
xor
add
pop
jne
gs
negb
inc
movsb
cmp
faddl
loope
adc
lret
mov
int3
push
pop
xor
xor
add
mov
roll
jl
into
add
push
add
jmp
mov
orl
flds
xor
inc
rcrb
mov
add
cmpsb
cli
out
dec
fdivrs
test
push
data16
inc
cli
mov
cmp
xor
add
mov
std
sbb
subb
push
outsb
sbb
stc
adc
or
xlat
add
adc
xor
stc
mov
jge
push
sbb
mov
sub
add
test
dec
or
mov
sbb
mov
cmp
fwait
imul
sub
scas
lods
dec
mov
int3
push
add
js
add
add
divl
loop
hlt
xor
sbb
adc
push
mov
jle
imul
pop
ret
adc
push
mov
in
or
sbb
push
in
fsubrs
lcall
or
movsl
mov
xchg
push
jge
mov
shrb
xchg
sbb
and
or
outsl
jae
repz
inc
es
pop
movsb
add
ljmp
lods
dec
out
rol
add
sub
add
add
scas
rolb
call
mov
popf
add
jl
cmpsb
jnp
add
mov
cld
mov
fcoms
xchg
xor
sbb
test
aad
mov
push
dec
add
lahf
out
pop
add
mov
aam
inc
dec
in
jmp
ja
iret
sbbb
sub
in
clc
add
mov
jg
sbb
je
outsl
add
pop
in
pop
mov
sub
add
mov
dec
add
es
das
ret
out
in
cltd
mov
jmp
add
add
or
aaa
mov
outsb
mov
ficomps
dec
and
jno
xchg
push
mov
add
push
add
add
xchg
push
stc
pusha
clc
and
in
enter
sub
sbb
mov
inc
push
mov
adc
mov
sbbl
addb
jl
mov
subl
cmp
and
jmp
push
add
sbb
movsl
in
loope
add
sti
push
mov
push
out
jnp
stc
add
sbb
cmp
cmp
int3
insl
xchg
push
add
cmp
push
sub
int3
insb
xor
lcall
sub
ret
sbb
add
mov
sbb
in
fcmovne
shll
scas
add
inc
sub
call
sub
fildll
pop
lret
jne
aad
xchg
ljmp
xchg
popf
mov
mov
xchg
add
add
setl
and
rcll
mov
or
xor
out
stos
mov
aam
pop
repnz
loope
sub
cmpsb
jg
inc
cs
stc
add
movsb
cmc
cli
lcall
cmp
std
add
shlb
add
scas
jno
add
jae
call
inc
cltd
add
push
jnp
inc
je
push
mov
cmp
pop
add
push
shll
push
out
push
jbe
int
dec
xor
lea
mov
das
add
les
pop
push
xchg
out
add
pop
inc
jmp
jecxz
pushf
ret
cmp
mov
xchg
aad
add
pop
out
out
pop
dec
inc
and
daa
mov
inc
outsb
add
daa
jp
add
add
outsb
pop
sub
cmpsb
rclb
add
outsb
stos
js
and
push
jae
sbb
xlat
lods
dec
repnz
sub
jl
xchg
stos
data16
cwtl
nop
jl
pop
ja
das
es
pop
or
mov
mov
add
imul
push
push
add
mov
ss
test
pop
out
xor
popa
inc
insl
mov
test
push
ret
add
mov
jmp
cmp
outsb
ds
jmp
test
add
shlb
cli
xchg
inc
jmp
rcl
dec
in
sub
aad
out
jecxz
adc
push
popf
addl
cmp
cmc
add
or
jp
bound
add
xchg
add
mov
add
les
add
lea
xchg
das
add
mov
add
inc
test
hlt
std
sbb
mov
mov
add
add
repz
lea
in
movl
mov
bound
add
lods
or
add
xlat
cmc
jge
sbb
and
mov
push
add
cmpsl
fimuls
inc
pop
cmp
lods
lock
add
add
in
jno
mov
jne
add
cmp
stos
lret
cs
lock
dec
mov
mov
xchg
decb
pop
jnp
loope
fstl
mov
testb
or
cmp
lcall
icebp
sbb
mov
mov
js
fldt
mov
xor
jnp
adc
dec
jae
stos
repz
dec
cld
push
push
mov
mov
pop
aam
xor
sbb
sub
mov
int3
pop
repz
pop
lea
addr16
pop
call
mov
add
cmc
insl
push
ret
icebp
cmpsl
cmp
shlb
mov
add
stos
test
lahf
jne
jb
stos
les
jmp
ljmp
pop
test
add
inc
push
sbb
push
in
divb
dec
arpl
mov
sub
mov
add
add
pop
xor
sub
push
push
or
stos
mov
sbb
add
push
add
fildll
and
rorb
scas
xchg
int3
loopne
les
and
mov
and
xor
sbb
imul
mov
or
cmpsb
negl
mov
mov
xchg
pushf
mov
xor
add
jp
fadds
cli
divl
and
popf
jp
mov
stos
add
add
lea
xchg
stc
pop
dec
mov
inc
pop
sub
decb
loope
in
add
mov
insl
sbb
enter
cmpl
xchg
add
dec
mov
xchg
adc
insb
jle
dec
insl
fidivrl
rcll
mov
cmp
mov
mov
movsb
add
leave
sub
mov
aam
pop
ret
loopne
lret
js
aas
cmp
lcall
add
ljmp
cld
in
xor
mov
or
sub
add
aad
int
add
les
loopne
in
pop
stos
jae
or
push
xor
sub
mov
add
jno
push
es
cltd
dec
add
scas
add
fdivl
or
pop
cli
das
rorl
add
push
xor
ret
pop
sub
mov
data16
fcmovu
push
loope
inc
push
ss
push
pushf
filds
shl
daa
pop
add
or
push
mov
xor
lea
out
inc
and
sbb
mov
add
lods
repz
pop
pushf
add
jecxz
stos
cmpsl
stos
rcrl
cmp
frstor
imul
cmp
stc
add
stos
ljmp
addb
mov
add
dec
js
mov
pop
cmc
mov
xor
cmp
pop
add
pop
ljmp
xchg
or
pop
push
sub
push
add
inc
out
adc
or
inc
test
mov
es
push
jge
fistl
cmp
leave
icebp
add
jbe
nop
dec
es
mov
dec
cmp
cmp
jbe
lret
jge
mov
stos
sub
mov
fcmovnu
or
and
shlb
or
pop
xchg
xchg
jle
addr16
movsb
push
push
mov
sub
jle
add
je
cmp
mov
push
sbb
xchg
pushf
je
jge
fdivs
das
sub
pop
mov
inc
icebp
faddp
insl
fcmovnu
outsb
add
cmp
mov
add
imul
sbb
scas
popf
and
xor
testb
add
fbstp
test
mov
mov
mov
add
fstpt
inc
cmp
fwait
xlat
mov
cmp
js
fisubrl
inc
push
out
push
popf
mov
sub
popf
mov
icebp
ret
insl
mov
mov
and
fstpl
push
in
mov
jle
dec
inc
xlat
scas
jb
sahf
add
or
loopne
sbb
add
sub
out
aam
jbe
outsl
in
fwait
in
sbb
add
pop
jecxz
sub
imul
enter
sbb
flds
pushf
clc
add
xchg
ds
lcall
sbb
xor
inc
and
add
neg
daa
mov
loopne
jo
mov
mov
fimull
sub
add
inc
cmp
mov
fidivs
fisttpl
ret
lret
add
out
scas
ret
cmpsb
cmp
fwait
mov
in
push
and
clc
cmc
or
fistps
pop
in
int
mov
data16
adcb
jge
mov
and
xor
add
out
js
push
pop
jmp
xor
inc
or
adc
lods
pop
jp
ffreep
push
add
pop
cmp
lret
fiaddl
add
cmp
sbb
mov
mov
cmc
out
popf
add
adc
push
jbe
andl
addl
jle
mov
das
or
cmp
sbb
add
add
xchg
sbb
jle
rol
add
pusha
mov
add
repnz
fwait
shll
add
cli
mov
mov
loopne
add
add
pop
enter
mov
ljmp
add
in
adc
xor
xchg
cmp
fidivrs
daa
sahf
rorb
xor
add
es
pop
loope
add
in
mov
xor
cmp
mov
jl
add
add
jle
push
inc
push
xlat
mov
xor
jp
testl
dec
rorl
or
xor
lea
jg
push
add
int3
loopne
nop
sub
sbb
mov
test
mov
or
roll
add
sbbl
xor
add
outsl
add
jg
loopne
add
ror
fisttps
sub
popa
push
mov
jns
mov
add
icebp
mov
add
add
jmp
add
lret
and
push
sub
sub
xchg
cmpsb
add
fnstenv
jmp
add
mov
cmp
mov
sbb
test
mov
adc
mov
fistpl
imul
jo
mov
idivl
das
aas
insl
add
push
push
out
mov
arpl
imul
mov
mov
cmp
cmpsb
pop
add
mov
jno
sbbb
add
loope
pop
ljmp
repz
daa
filds
lret
cmp
rorl
int
jae
add
int3
xor
arpl
lea
js
daa
jbe
sub
cli
push
add
adc
cmpb
jge
sbb
fcompl
jns
jns
push
sahf
and
arpl
sub
mov
mov
jl
and
arpl
push
mov
popf
and
js
add
or
push
mov
push
leave
lret
leave
gs
add
data16
pop
lods
add
sarl
mov
mov
mov
push
enter
popa
fidivs
sbb
jl
mov
jno
iret
dec
mov
cltd
repz
add
leave
pop
mov
pop
xor
fs
xor
xchg
mov
push
into
and
sub
adc
enter
les
shlb
outsl
inc
mov
ror
xchg
mov
int3
add
inc
xor
push
cmp
pop
jg
pushl
pop
out
testb
add
mov
xchg
pop
push
scas
lcall
fldl
push
shlb
pop
add
gs
ret
jl
sbb
add
addr16
testb
push
insl
ret
jle
add
gs
push
lret
in
push
cli
outsl
sbb
add
and
insb
add
cmp
jbe
add
ja
push
add
and
jp
pop
ljmp
sbb
mov
notl
cmp
inc
xchg
sbb
jns
adc
rorl
or
jnp
cmp
add
jns
out
mov
cli
lods
add
pop
add
add
jno
jnp
xchg
clc
or
mov
add
fwait
in
add
cld
sbb
sub
mov
mov
inc
insb
mov
les
call
out
andps
inc
ret
cmpsl
sti
add
std
add
pop
out
pop
test
push
outsl
inc
cmp
gs
ret
xchg
sub
mov
cwtl
shll
out
stos
jbe
push
push
pop
add
push
xchg
mov
cmp
scas
aas
das
pop
fildl
cmp
jp
hlt
loope
add
xor
lret
and
mov
movsl
pop
add
mov
or
mov
test
fildl
or
bound
add
or
add
aad
aas
cmp
test
push
push
inc
stc
les
dec
inc
nop
scas
jae
sbb
mov
popf
cld
jb
mov
push
add
dec
loopne
add
push
clc
add
imul
push
stos
add
in
enter
dec
jmp
cmp
mov
icebp
test
fnstsw
adc
jge
jge
inc
fbld
sub
cmpsb
cs
test
lock
pop
mov
sub
pop
dec
shll
fcompl
sbb
or
add
add
xchg
rol
and
jle
or
mov
mov
repnz
fsubrp
jae
in
decl
lock
aas
cwtl
mov
jae
rcrb
sti
mov
loop
fldt
cmp
fldl
data16
cmpsb
add
push
dec
lret
xlat
out
out
cmp
mov
cmp
push
xor
insl
andl
xchg
mov
arpl
add
add
iret
ret
enter
inc
cwtl
add
sahf
adc
xchg
filds
xchg
scas
dec
mov
mov
cmp
hlt
add
add
pop
sbb
add
cmp
lock
lea
cmpsl
test
xchg
aas
mov
sub
lods
fucomip
or
aam
in
add
notl
add
inc
dec
add
add
test
mov
ja
mov
inc
add
out
add
add
add
pop
mov
xchg
or
and
mov
into
add
out
mov
sti
fs
pop
jb
mov
cmp
test
dec
gs
push
add
pop
cmp
nop
lret
out
test
adc
add
sub
shlb
jg
sbb
out
and
xchg
pop
dec
test
outsb
icebp
add
clc
add
mov
add
addl
dec
insl
add
add
lea
dec
lret
fiaddl
mov
lods
xchg
outsb
cmpsl
add
sbb
inc
xchg
push
dec
adc
push
or
cmp
outsl
or
push
dec
inc
cmp
imul
cmpsb
cs
mov
fcoms
cmp
or
and
and
int3
mov
add
insb
and
add
xchg
loopne
or
pusha
popf
pop
push
iret
popf
lea
add
dec
mov
push
xor
xor
sbb
sbb
imul
and
cmp
divb
into
add
push
bound
mov
cmp
sarb
cmp
ss
add
test
fwait
dec
outsl
jge
mov
std
pop
mov
mov
and
faddl
push
cmp
mov
mov
out
cwtl
mov
add
jecxz
add
into
xchg
pushf
leave
mov
xchg
jb
rcrb
adc
es
xchg
enter
mov
sub
sbb
mov
or
data16
aam
mov
mov
orl
stc
cmpsb
mov
xchg
cmp
add
fwait
pop
cmpsl
pop
shlb
icebp
scas
mov
xchg
loopne
add
cmp
add
add
xor
mov
add
mov
adc
nop
lret
and
sub
add
jp
add
dec
call
add
mov
inc
or
loopne
pop
sbb
add
adc
rcrb
sub
or
mov
and
sub
insb
and
jecxz
enter
mov
and
sbb
in
add
add
int
push
adc
add
add
out
sahf
adc
mov
int3
jmp
roll
aas
ss
mov
dec
jmp
jne
inc
xchg
addl
mov
xchg
xchg
icebp
add
push
or
loop
scas
fcmovnbe
add
dec
pop
fisubs
add
mov
mov
xor
out
pop
add
fsts
push
add
std
mov
dec
add
push
add
cld
push
std
int3
fwait
icebp
lock
and
cmp
cs
sahf
add
jge
or
xor
mov
and
sub
clc
test
xchg
daa
add
stc
ja
or
ss
test
dec
xchg
and
and
sbb
aaa
or
nop
gs
sbb
shll
mov
call
iret
scas
dec
pop
add
inc
clc
mov
sbb
cwtl
xor
mov
add
arpl
add
inc
mov
aas
add
inc
mov
push
push
and
push
pop
pop
imul
jp
add
pop
pop
call
addb
sub
mov
in
mov
or
es
add
xor
jae
int3
dec
dec
int3
cltd
mov
out
filds
push
loopne
dec
leave
dec
lret
add
xor
shll
pop
xor
dec
daa
roll
ss
and
add
rorb
sbb
mov
mov
pusha
add
jecxz
cwtl
fs
stc
push
inc
out
jmp
cmpsb
stos
add
arpl
inc
add
pop
add
or
and
sbb
movsb
push
cltd
mov
call
add
adc
jecxz
add
dec
add
fists
add
lods
xor
sbb
xchg
add
outsb
repz
or
mov
add
aas
cld
push
or
add
push
daa
jg
and
jecxz
adc
popf
mov
scas
add
rolb
std
in
cmp
mov
cli
push
add
push
ja
add
mov
inc
xchg
add
cmp
jnp
or
pusha
push
dec
pop
cli
pop
pop
sub
pop
pop
xchg
rolb
xor
cmp
lret
add
sbb
scas
insb
or
push
jae
loopne
dec
jecxz
mov
inc
mov
add
jb
adc
hlt
and
add
jo
cmpl
sbb
pusha
fstl
sysret
cmp
fstpl
xor
cltd
inc
mov
rclb
dec
jg
inc
out
add
loopne
add
cld
jmp
add
push
or
mov
push
sti
mov
mov
push
into
cmc
ljmp
mov
scas
add
or
adcl
insb
dec
xchg
sbbl
mov
pshufw
adc
mov
data16
arpl
xor
in
jae
fsubl
or
call
jmp
shll
add
scas
jno
ss
pop
pop
fs
xchg
fbstp
push
test
bswap
mov
xchg
fwait
popa
add
loop
outsl
pop
pop
scas
in
imul
xchg
dec
call
nop
push
push
add
jnp
cld
ja
loop
xchg
les
add
xchg
add
pop
and
push
or
cli
cmovnp
add
int3
sub
test
pop
arpl
enter
bound
enter
push
cmp
out
lds
push
add
int
dec
add
jns
cmp
cmp
cmpsl
shl
add
add
nop
add
add
add
test
pop
insb
leave
add
int3
adc
sahf
and
lea
jo
lock
add
add
mov
xor
add
aad
jns
ror
adc
ja
cmp
sbb
xchg
mov
xor
fidivl
push
add
dec
hlt
pop
filds
lock
leave
incl
inc
sbb
dec
xchg
jge
mov
enter
push
and
xor
call
flds
inc
loopne
out
imul
push
add
aas
push
xchg
movsb
je
aad
mov
cmc
imul
or
in
push
cmp
mov
ljmp
cmp
mov
movsb
das
pop
daa
cmp
xor
addb
sub
mov
clc
je
cltd
data16
add
aad
jns
add
add
or
sahf
inc
js
add
out
add
adc
movsl
xchg
dec
add
int3
add
add
add
add
dec
add
xchg
sbb
add
xor
push
cmpxchg
sbb
add
or
out
sbb
jecxz
add
in
xchg
addl
lds
sarl
loopne
mov
jmp
divl
xchg
push
and
and
das
js
push
ljmp
or
int
rcrl
lock
xchg
push
pushf
lds
sarb
xchg
clc
loop
ss
call
lret
cltd
bound
clc
fimuls
dec
add
lock
leave
pop
add
dec
clc
xchg
and
fimuls
loop
cs
xchg
jecxz
xchg
es
inc
cmc
mov
std
ja
xor
push
sbb
mov
jae
add
lret
lods
orb
out
xchg
pop
mov
aas
lret
test
or
rolb
push
jg
add
fs
xlat
rolb
cmpb
pusha
cmp
add
les
or
psubusb
mov
add
int
add
pop
add
int
xor
dec
shll
in
mov
daa
sbb
mov
in
xchg
add
xchg
and
adc
aas
or
sahf
fcomp
mov
enter
ds
dec
or
inc
mov
push
stc
outsl
cpuid
add
sar
mov
std
in
mov
jle
andl
movsb
daa
add
and
and
mov
clc
push
sub
mov
dec
jecxz
add
repnz
add
mov
jns
add
add
pusha
or
or
lds
xchg
repz
and
dec
adc
add
pop
pop
mov
lods
and
mov
fisttpll
pop
add
xor
jge
hlt
ficompl
jg
add
mov
add
add
mov
arpl
add
xchg
add
pusha
in
mov
testl
out
mulw
sub
add
jno
mov
das
je
add
imul
add
shrb
jno
dec
rorl
lret
jle
movsl
jne
repnz
add
lock
push
fcomps
mov
stos
setne
test
jge
mov
jns
cmc
pop
fbstp
ret
xchg
dec
out
es
add
and
and
sub
add
out
add
test
inc
xor
std
lods
add
add
inc
xchg
repnz
pushf
pop
sahf
and
aam
mov
mov
inc
lret
mov
iret
xor
add
mov
jge
mov
in
adc
nop
daa
pop
or
aas
mov
testb
jb
ret
negb
cld
mov
mov
add
lods
filds
clc
fucom
in
inc
or
sub
addl
sarl
cmpsb
add
stos
xchg
xchg
aas
add
add
jno
fsubrs
jle
ret
xor
cmovno
pusha
adc
pop
xor
sbb
imul
cld
push
int
sub
cmp
adc
imul
add
push
sub
sbb
outsl
add
rclb
mov
mov
and
add
pop
lds
mov
imul
clc
add
jo
imul
ljmp
mov
pop
in
test
jnp
xor
fiadds
add
daa
xor
push
adcb
mov
sbb
inc
notl
test
push
cltd
xorl
or
test
mov
add
sub
pop
or
fs
push
adc
out
addl
cmp
cmpsl
inc
add
icebp
sub
mov
cwtl
cmp
fstl
push
inc
mov
lcall
data16
sub
and
sti
repnz
adc
dec
sub
add
add
loope
imul
mov
ds
mov
roll
xchg
lock
adc
adc
cmc
stos
xchg
sarl
xchg
pop
aam
pop
adc
scas
add
cmp
mov
popa
out
cmp
xor
pop
mov
jo
add
pop
inc
dec
dec
and
add
imul
push
xor
inc
outsl
lds
rolb
data16
stos
xchg
lret
jno
xchg
cld
arpl
dec
sbb
ja
daa
mov
sbb
mov
loop
dec
xor
push
cmp
repnz
mov
add
add
addr16
add
add
add
add
cmpsl
mov
out
lods
jne
out
pop
bound
test
stc
mov
cmp
dec
jae
mov
cltd
test
ljmp
xor
xor
xchg
dec
jge
add
sbb
movsl
add
add
add
int3
or
popf
push
addb
sbb
fdiv
pusha
sub
ficoml
stos
mov
and
ror
mov
add
inc
push
int3
add
xor
add
add
flds
mov
out
cld
dec
add
loop
adc
push
mov
sub
roll
dec
aas
loope
mov
lods
and
mov
loope
sub
inc
dec
mov
add
push
push
jae
jg
cltd
add
add
cld
pop
hlt
fiadds
ja
adc
add
inc
pop
inc
and
pop
push
cltd
test
sbb
imul
sub
xor
dec
xchg
push
loop
adc
add
mov
add
mov
mov
rclb
cmp
sub
aad
aaa
repnz
adcl
dec
add
mov
scas
dec
adc
mov
cmp
mov
movsb
mov
addb
jae
cmp
sbb
daa
scas
out
sbb
addr16
addb
pop
cmpb
add
mov
or
out
add
mov
imul
add
dec
jecxz
pop
mov
cmp
add
dec
loop
sti
jb
pop
xchg
fdiv
inc
add
loopne
out
or
repz
aad
dec
xor
insb
leave
es
add
pusha
mov
andl
push
sbb
jbe
mov
call
add
or
push
push
dec
push
movsb
cwtl
xchg
sarl
or
outsb
rcll
add
out
sahf
pop
cmp
insl
add
insb
add
add
mov
arpl
push
cmp
xor
in
add
sbbb
inc
in
add
call
cmp
insb
mov
push
inc
fstps
add
mov
imul
add
mov
ja
adc
ret
jmp
add
push
test
loope
jge
push
lods
sub
xchg
mov
xchg
xor
test
jne,pt
lods
and
int
add
push
and
add
es
aas
add
add
ljmp
sub
pushf
loopne
dec
test
mov
jle
mov
add
push
mov
xchg
sub
or
xor
mov
jnp
movsl
cmp
lret
in
adc
movsl
inc
lret
movsl
fdivl
mov
out
mov
lods
dec
or
jl
sbb
dec
sbb
mov
das
in
mul
daa
pop
bound
test
sbb
lcall
pop
pop
mov
jno
add
pop
add
jns
je
mov
add
add
inc
push
xchg
mov
pusha
sub
pop
ljmp
aaa
out
fldt
mov
test
and
sti
int3
and
repz
sub
or
cmp
outsb
fwait
and
mov
fwait
mov
dec
mov
pop
pop
mov
add
mov
and
add
xchg
js
push
jp
push
add
ss
inc
cmp
cwtl
sub
mov
mov
xchg
mov
and
add
sub
mov
std
add
push
ror
sbb
fmuls
pop
inc
sub
inc
add
jg
lahf
aaa
sub
sub
je
adc
fidivrl
jb
mov
cmp
xlat
add
push
push
dec
shr
inc
in
mov
add
sub
mov
js
es
and
inc
xchg
repnz
mov
ss
add
mov
cmp
xchg
cmp
data16
sar
push
lds
cltd
inc
xor
cmp
loopne
add
mov
add
insb
dec
mov
pop
inc
imul
pop
sub
and
je
add
xchg
cld
and
cmp
jp
xchg
or
aaa
jns
je
repnz
mov
xchg
mov
in
xor
add
inc
and
cmp
add
scas
and
loop
dec
jle
jecxz
xchg
mov
test
bound
pop
aaa
push
lahf
dec
addb
filds
jne
shl
mov
les
movsb
fisttpl
inc
fs
pop
sub
jge
add
mov
int3
movsl
popa
movsl
mov
or
dec
or
inc
test
ljmp
dec
pop
mov
mov
fmull
add
lahf
cmpsl
push
out
xchg
scas
clc
ja
fiadds
das
or
xor
insl
pop
int3
jecxz
add
mov
add
add
lods
dec
add
add
fcomip
mov
lcall
das
push
rorb
pop
add
adc
sub
lock
mov
xchg
aam
bound
xor
addl
push
cmp
clc
mov
cmp
dec
or
lods
pusha
dec
mov
lret
add
add
sbb
or
or
gs
and
ffree
cltd
sub
pop
mov
popf
insl
push
mov
mov
outsl
enter
add
mov
movsb
push
bound
and
in
int3
fs
daa
xchg
cmpsb
inc
filds
mov
lods
lret
xchg
orl
add
clc
or
pop
cmp
aaa
adcb
add
stos
push
sub
jecxz
add
add
adc
adc
mov
push
enter
push
es
mov
add
lods
mov
add
or
xchg
bound
mov
cmp
fistps
mov
sbb
mov
push
add
loop
mov
cmp
mov
xchg
add
into
add
shll
add
and
add
int
gs
mov
ret
mov
pop
cmpsb
movsb
test
add
add
jne
sub
add
sti
sub
mov
add
cmpsl
add
or
fs
adc
xor
lods
pusha
add
cmp
jl
xchg
add
shl
or
add
xchg
ds
clc
xchg
cmp
pop
cmp
movsl
mov
mov
je
pop
push
sub
jge
ret
or
mov
xor
mov
pop
bound
cmp
xchg
sbb
lock
add
movl
add
or
test
add
jno
add
inc
adc
stc
pop
sbb
loope
and
or
notb
scas
pushf
out
hlt
add
cmp
or
add
adc
mov
shl
jmp
dec
dec
test
adc
jae
les
adcl
aas
add
fs
jl
cmc
add
inc
adc
push
xor
cs
mov
aaa
out
in
sbbb
sbb
fdivs
add
and
imul
sbb
add
cmp
push
push
fldl
mov
outsb
pushf
cltd
xor
jmp
pop
mov
push
sbb
push
cmpsb
push
sbb
cmp
iret
cmpsl
scas
mov
xor
aam
scas
sub
pop
adc
aaa
add
mov
sub
fwait
jae
call
imul
add
and
inc
sub
cmc
xor
mov
int
sti
push
dec
inc
cmp
dec
pop
sbb
out
mov
push
jg
adc
loop
ljmp
push
jns
imul
rolb
daa
ss
fwait
scas
fs
mov
data16
push
dec
aam
adc
mov
addb
jmp
or
add
popa
pop
push
adc
stos
mov
adc
enter
mov
cmpsb
sub
mov
ficomps
sahf
test
xchg
hlt
lods
inc
in
add
sbb
jns
nop
pop
push
cwtl
dec
pop
dec
sahf
inc
stc
adc
xchg
cmpsb
jge
fisubs
push
test
or
add
repnz
add
lea
push
add
fldl
jnp
aas
dec
sub
aas
shll
pop
sub
xor
dec
xchg
add
add
pop
outsb
mov
mov
lret
orb
push
pop
lcall
test
sub
mov
sbb
movb
add
cltd
inc
xchg
sbb
add
lods
loope
add
push
adc
sbb
mov
cmp
shl
inc
pop
cmp
shlb
outsl
jl
scas
inc
loope
fldt
xor
loopne
pop
inc
sbb
lret
aas
and
sbb
test
int
cmpsb
rcr
fisubrs
sahf
popl
outsb
cld
imul
add
push
lret
mov
xor
pusha
lea
rcrl
iret
adc
pop
jnp
test
imul
std
in
test
push
sahf
and
loopne
xchg
fsubrs
clc
jecxz
mov
mov
rolb
dec
movsl
repnz
dec
add
pop
or
outsl
sahf
adc
aas
push
lds
dec
add
add
sbb
aam
fwait
xchg
fstpt
int
add
and
cmp
add
add
add
ljmp
repnz
push
addr16
add
lods
cld
inc
xchg
xor
mov
mov
in
cmp
aaa
add
and
scas
je
lods
add
fwait
mov
frstor
mov
pop
mov
negl
fidivs
cs
add
push
mov
sub
mov
mov
pop
pusha
fstps
aad
pop
stos
cmp
sbb
mov
fwait
add
add
jo
dec
push
les
add
cmp
je
insl
cld
dec
sbb
mov
test
jno
add
ret
push
jbe
dec
add
mov
ja
adc
dec
insl
xchg
pop
mov
cmp
jp
cmc
ljmp
add
call
rorl
inc
jl
test
nop
sbb
dec
fwait
jno
sbb
push
ret
mov
aam
and
aas
mov
test
dec
add
pop
xchg
pop
data16
push
mov
in
mov
test
cmp
es
lcall
xchg
je
aad
add
ret
ljmp
outsb
repz
inc
loope
add
add
push
jl
mov
imul
insl
movsb
bound
add
or
outsb
loopne
mov
in
jne
sub
add
add
add
pop
push
aaa
ret
fildl
in
add
mov
or
mov
ret
dec
pop
mov
mov
jge
jmp
inc
adc
add
add
rcrl
cmpsl
rcll
pop
rorl
ljmp
mov
lods
cld
imul
xor
lods
hlt
dec
addl
add
pop
cmp
cmp
ss
inc
sahf
push
lea
aad
mov
mov
cld
add
add
cmp
mov
mov
xchg
xchg
jp
mov
cmpsb
add
xchg
sbb
mov
mov
add
loop
add
add
or
ficompl
pop
or
mov
adc
rcrl
incl
cwtl
std
add
loop
fisttpl
xor
add
shl
inc
xor
add
add
jo
add
loopne
arpl
ror
dec
pop
xchg
add
hlt
mov
dec
out
hlt
mov
add
add
sbb
jns
and
repz
push
add
mov
les
or
jae
add
adc
or
cmp
inc
adc
lods
add
add
mov
aas
or
insb
push
imul
mov
frstor
les
out
arpl
cmp
jnp
add
push
add
jmp
mov
in
add
mov
sbb
int3
dec
add
adc
add
pop
add
add
inc
adc
sub
dec
paddd
test
xchg
xchg
iret
bound
mov
mov
xchg
inc
and
and
mov
inc
pop
xlat
dec
cltd
mov
hlt
je
mov
jae
les
sub
aaa
jb
xchg
pop
das
or
inc
ljmp
pop
test
adc
insl
xchg
leave
add
icebp
sbb
sub
jg
push
arpl
mov
sub
lcall
adc
sahf
in
xchg
sbb
enter
jne
add
pop
jae
clc
mov
add
add
inc
push
add
push
mov
add
sub
add
or
add
add
cmc
in
test
xchg
add
mov
cmpsl
sbb
roll
push
push
js
sbb
sub
ret
or
out
pushf
adc
and
daa
add
movsl
add
insb
sbb
adc
sbb
pop
pop
das
int3
pop
cli
jbe
jl
add
cmpsl
xchg
in
lods
add
add
jl
testb
gs
add
adc
or
rclb
mov
xchg
rolb
dec
inc
sub
add
cwtl
lret
add
jae
push
pop
xor
pop
inc
lcall
or
sbb
scas
mov
mov
je
loop
das
test
ret
rcrl
jae
dec
pop
leave
mov
lea
jp
sahf
xchg
sub
fprem
xchg
test
sub
nop
adc
xor
xchg
inc
xchg
out
pop
sbb
adc
mov
add
insl
mov
out
jge
lods
add
cmc
testb
inc
adc
and
lods
mov
add
xchg
or
xchg
rclb
xchg
jg
add
cwtl
lock
dec
xor
ret
dec
pop
mov
dec
cli
popf
pop
or
sbb
movsb
push
jns
add
mov
push
push
fcomi
mov
loopne
and
add
and
dec
inc
loop
and
sbb
push
xor
add
xchg
pop
mov
fnstenv
lcall
mov
mov
movb
scas
test
testb
add
pop
adcl
jp
add
jne
and
add
mov
cmc
adc
mov
pop
popf
cmp
fs
mov
in
mov
orb
jge
sbb
subb
add
dec
fs
daa
test
mov
sbb
imul
sti
fiadds
arpl
mov
add
cmpsb
add
movsb
cmp
add
add
movsl
les
or
push
lahf
out
add
dec
add
adc
xor
sbb
pop
sub
and
add
jl
sub
movsl
roll
lods
xchg
dec
mov
aam
lahf
adc
faddp
add
jbe
pop
out
jno
jnp
add
jnp
es
pop
mov
push
iret
add
jle
xor
pop
xchg
gs
loopne
push
pop
and
scas
dec
fimuls
sbb
cmp
ret
jo
add
mov
sub
incb
adc
frstor
push
xor
pop
pop
leave
fsubs
mov
add
mov
xchg
xchg
pushf
add
add
nop
call
enter
clc
sub
daa
stc
scas
movlps
pop
fs
adc
sbb
add
aas
or
cmp
sbb
aam
in
mov
out
ret
and
add
int3
lods
fldt
xor
sub
fcmovnbe
push
arpl
ret
add
in
jbe
repnz
punpcklwd
xchg
stos
std
insl
lds
add
ret
mov
addr16
or
out
mov
push
icebp
jo
rcll
dec
gs
les
add
jmp
movsl
cmp
push
add
std
out
loopne
add
add
mov
adc
repz
xorl
test
add
push
dec
mov
je
lcall
add
inc
sub
lahf
xchg
lea
int
lods
addb
sub
mov
aaa
and
and
cmp
add
mov
repz
xchg
mov
lds
mov
lods
or
pusha
xchg
adc
jae
pop
aam
js
mov
adc
insl
mov
mov
mov
jb
jo
mov
fsubrl
sarb
cmp
or
or
jo
pusha
xor
ret
xadd
mov
xorl
or
vmovsldup
shll
lock
fbld
jle
lock
pop
ret
mov
out
bound
cmp
sbb
adc
lock
add
pop
cmc
sub
or
mov
mov
jbe
cmpps
out
add
rcr
subb
mov
fbstp
push
lds
add
in
lock
add
out
push
sub
xchg
add
loop
and
ljmp
adc
shl
push
or
mov
scas
aad
push
mov
inc
lahf
mov
imul
add
adc
xor
std
sbb
scas
mov
cmpsl
add
pop
pop
add
iret
int3
pop
and
add
cmpsl
add
mov
test
add
dec
push
outsl
add
cli
dec
mov
lea
push
push
jns
cltd
push
push
mov
arpl
mov
push
add
sbb
decb
dec
add
ret
aam
cmp
xchg
cmp
mov
lret
in
dec
sub
sbb
fisubs
fisttpl
in
aad
inc
adc
idivb
adc
leave
hlt
cld
add
fdivrl
inc
jge
add
sbbl
dec
in
pop
test
inc
add
das
adc
add
jnp
les
pop
add
xchg
out
push
xorl
in
and
jb
jo
adc
ja
insb
push
hlt
and
shll
cmp
lods
add
add
scas
jl
jb
pop
test
xchg
shrb
cmp
insb
dec
dec
add
roll
and
add
scas
mov
add
and
push
mov
lcall
and
add
cmpsb
in
leave
flds
sbb
mov
je
roll
das
inc
pop
jae
jne
ret
mov
jl
aam
iret
bound
push
test
inc
push
or
aas
pop
mov
add
mov
cmc
jmp
cmp
jg
scas
add
jle
fstl
dec
in
or
arpl
push
cmc
stos
popf
dec
fidivl
inc
pop
xor
ljmp
add
push
add
sbb
cld
ljmp
filds
in
orl
out
aaa
add
or
btc
test
jae
dec
ja
rcl
and
loopne
xchg
inc
js
and
add
add
mov
leave
mov
sbb
jp
add
addl
add
sub
fstl
fsubs
and
daa
leave
jno
cmpsb
dec
dec
scas
addr16
inc
add
cli
pop
in
pushf
or
add
cwtl
add
aam
push
pop
xor
mov
ret
stos
push
mov
mov
and
ret
push
add
scas
mov
push
test
add
cmpsb
rcrl
loope
push
loopne
subb
dec
add
and
sub
and
test
xchg
in
sub
fs
mov
push
add
add
mov
push
push
sub
jae
inc
movb
or
fldenv
dec
dec
fsubr
add
dec
mov
lret
clc
add
scas
mov
and
sub
mov
adc
jecxz
iret
adc
mov
mov
add
add
inc
ja
push
jg
push
stos
push
mov
dec
inc
xor
and
dec
cld
adc
add
rcr
mulb
mov
rcrb
sbbl
lds
std
xor
pop
outsb
fs
jnp
sti
inc
and
mov
das
add
jge
cmc
jp
mov
int3
arpl
cli
loope
arpl
cmp
dec
in
insb
mov
clc
mov
addl
sub
add
aas
push
out
filds
movsl
call
adc
push
push
mov
push
dec
int3
add
jle
shll
pop
and
cld
mov
cmp
cmp
push
add
stos
mov
jg
pop
add
sbb
aas
daa
and
push
adc
sbb
pop
mov
xchg
cs
out
adc
or
mov
adc
cmp
outsl
sbb
and
cmp
xorb
add
adc
dec
cmp
movsl
es
mov
mov
add
mov
test
scas
jns
adc
std
xchg
inc
movsl
push
cld
rcrb
push
lock
prefetch
fstp
add
or
xor
add
into
add
dec
and
push
mov
add
test
out
mov
out
sub
mov
pop
cmp
je
xchg
add
lds
adc
mov
sub
or
jo
jg
add
pushl
cmp
xor
data16
push
or
add
mov
in
mov
add
push
lds
add
add
adc
in
cmovae
jge
fiaddl
int3
pop
dec
adc
movsb
xchg
add
mov
add
gs
pop
icebp
pop
dec
add
inc
mov
fadd
sbb
fbld
adc
jg
mov
add
sti
out
lcall
lods
data16
push
lock
xchg
loopne
aaa
cmp
adc
rorb
lret
stc
ds
jge
sarb
inc
and
imulb
popa
dec
jbe
inc
or
jae
ds
xchg
and
int
mov
sub
jl
pop
stc
xlat
xchg
add
mov
test
testl
subl
ficompl
xchg
add
movups
scas
lret
dec
test
inc
dec
outsb
sub
xor
mov
add
adc
mov
or
pop
lret
push
cmpsb
clc
push
clc
or
cltd
int
pop
add
add
fwait
add
push
loopne
into
jno
sub
into
push
imul
xchg
add
sub
lret
adc
mov
enter
xchg
xlat
add
jl
push
std
test
add
cld
jmp
lea
push
pop
add
and
sbb
push
sub
xor
subb
add
cwtd
mov
addr16
dec
add
and
jmp
add
test
xor
cld
xchg
movsb
mov
mov
jecxz
jecxz
loope
popa
imul
in
cltd
lret
xchg
cmpsb
int3
cmp
mov
out
mov
add
add
add
sbb
push
cs
pop
or
rolb
dec
push
pop
dec
sbb
and
lock
xchg
pop
mov
lahf
leave
pop
scas
cmp
pusha
in
add
add
add
adc
imul
sub
inc
mov
add
outsb
jno
int3
xchg
jp
repnz
mov
mov
in
add
add
adc
add
push
and
arpl
sub
test
dec
add
mov
xor
mov
cli
int
xchg
sbb
add
mov
add
stc
sbb
test
mov
aam
shl
adcl
add
or
jmp
adc
inc
adcb
outsb
cwtl
loopne
movsb
lock
movsl
mov
add
test
mov
sbb
cmp
mov
sbb
lahf
negb
add
jne
mov
sbb
jbe
ror
or
jns
inc
push
xchg
std
mov
add
mov
push
in
mov
cwtl
scas
insl
add
add
fisubs
add
ss
out
jp
push
add
dec
sbb
sub
add
and
add
jnp
add
shl
or
aaa
bound
dec
inc
sbb
xchg
call
xor
pop
or
add
rcrb
mov
mov
sub
dec
xor
xchg
int
nop
or
sub
fisubl
add
mov
bnd
aad
divl
nop
fdivrs
icebp
jno
cmc
push
add
loope
push
xchg
add
add
mov
call
adc
into
add
pop
add
aaa
mov
cmp
mov
jle
test
andl
jb
sub
mov
test
cltd
dec
and
adc
add
loopne
aam
add
dec
and
imul
inc
enter
or
mov
dec
and
xchg
ss
pop
ljmp
xchg
fdivrs
push
out
mov
ja
sub
pop
bound
cs
fcomps
add
jmp
cli
adc
shl
fildll
sbb
btr
mov
stos
jo
mov
mov
cmpsl
aam
adc
sub
add
sbb
sbb
movsb
gs
jb
add
stc
sti
push
je
inc
add
push
or
mov
add
sbb
loopne
dec
add
add
stos
xchg
inc
inc
mov
inc
mov
mov
fisubl
test
and
or
add
jb
and
cmp
mov
mov
mov
rorl
add
or
add
lret
test
mov
dec
sbb
fiaddl
and
xor
fildl
imul
cmp
imul
add
andl
pusha
or
push
and
pushf
jne
decb
std
xor
mov
xor
test
push
repz
xor
repnz
nop
add
cmpsb
add
inc
mov
add
ss
mov
mov
sti
add
out
dec
enter
inc
movsb
std
sbb
sbb
sub
add
add
dec
mov
dec
pop
stc
and
xrelease
lods
les
sub
jg
sbb
sbb
roll
ds
fldt
imul
add
mov
add
xor
sub
addr16
sub
ljmp
fld
leave
push
mov
xchg
adc
add
push
mov
fsubs
jnp
pop
add
push
addl
outsl
sub
enter
pushf
scas
xchg
cli
add
negb
and
pop
cltd
popa
mov
pop
cmp
ds
push
adc
xlat
cmp
jmp
clc
sbb
sbb
add
add
xchg
cmp
decl
push
adc
or
cmp
mov
insl
dec
fiadds
in
push
bound
js
out
aad
push
add
add
sbb
pop
fsubr
cld
lds
and
jo
xchg
ss
out
add
cwtl
jge
outsb
fnsave
rcrw
pop
subb
add
jno
sbb
das
add
stos
sub
xchg
les
dec
xchg
cmp
jle
mov
push
add
movl
xchg
test
add
pop
sub
sub
aam
or
or
jle
adc
js
repz
add
cmp
stos
mov
jp
xchg
push
out
xchg
push
add
push
sub
pop
filds
incl
int3
clc
sub
mov
xchg
shrl
adc
data16
add
aam
hlt
jecxz
sbb
mov
mov
jnp
add
mov
xchg
add
not
loop
addl
enter
mov
or
fmull
iret
pushf
or
add
mov
movsb
loop
call
add
int3
mov
add
inc
mov
mov
arpl
pop
pusha
adc
push
inc
xor
mov
add
fisubrl
ret
lahf
gs
loop
jno
pop
push
daa
outsl
xlat
pop
das
mov
add
add
in
cld
aam
imul
jno
add
test
xchg
push
sub
push
jo
add
and
fiaddl
loopne
jne
and
add
lret
testl
shlb
pushf
or
cmp
loope
add
add
nop
insb
fnstenv
mov
add
mov
insb
add
loopne
imul
scas
cli
cmp
fistl
sub
pop
pop
add
lcall
add
mov
ljmp
cwtl
xor
mov
fstp
xchg
lds
xor
sbb
push
push
call
add
sbb
jne
mov
push
loop
or
xor
sub
addb
in
loopne
adc
and
add
mov
pop
testl
push
stos
addb
mov
mov
jo
add
das
mov
loope
call
pop
or
add
add
xchg
pop
add
icebp
lcall
stos
adcl
and
roll
imul
push
push
sbb
loop
arpl
sub
add
lret
mulb
addb
pop
jae
add
std
or
xchg
outsl
pop
cmp
pop
sub
sti
xor
cmp
loop
mov
gs
xor
lret
xchg
push
sbb
inc
xor
or
add
movsl
fwait
and
xchg
lea
jns
jmp
jg
or
add
daa
iret
mov
sub
xor
int
std
dec
icebp
data16
jns
insb
lahf
pop
xchg
push
pop
int3
lret
lcall
mov
mov
int
cmc
add
ret
jno
xor
adc
add
push
je
and
adc
mov
clc
or
inc
clc
add
add
push
inc
add
pusha
mov
add
gs
xchg
test
icebp
xchg
adcb
out
push
add
adcb
dec
ret
pop
inc
inc
add
and
lods
fdivr
stos
aam
xchg
ss
push
adcl
aam
arpl
and
and
and
jno
fadds
ror
push
dec
sub
add
mov
aaa
adcl
push
add
add
bound
add
in
add
rcrb
jge
mov
les
shrb
xchg
icebp
fmul
add
pop
mov
add
sti
mov
mov
add
add
adc
mov
dec
or
dec
and
add
shl
loopne
add
out
pop
movb
nop
fwait
int
mov
adc
imul
sub
sub
or
xchg
jb
cmp
daa
add
and
cmpsb
mov
jnp
and
call
add
outsl
roll
jbe
pop
test
push
mov
cmp
or
stos
mov
sbb
mov
movsb
add
dec
push
push
inc
cmp
push
jl
push
xchg
loope
jge
sti
add
sbb
add
repnz
jne
iret
inc
cmp
mov
lods
jg
or
mov
dec
lahf
sub
xchg
sarl
mov
pop
push
add
cmp
push
arpl
ret
clc
ds
jbe
dec
cmp
xchg
and
xlat
push
test
fcoml
sub
fiaddl
mov
jecxz
call
add
add
js
mov
inc
mov
push
mov
mov
jae
int3
xor
loope
pop
adcb
sbb
adc
fadd
inc
add
dec
ficompl
clc
faddp
faddl
and
jp
push
jge
mov
movsl
add
add
xor
les
add
negl
cmp
adc
add
xchg
pop
jne
push
pushf
stos
lds
or
test
sub
es
sub
les
mov
add
xor
fisubrs
jecxz
sbb
jnp
cltd
inc
or
mov
push
add
aad
lcall
rcrl
or
mov
ret
pop
add
mov
or
push
xor
cmpsl
and
add
insl
pop
adc
adc
adc
std
ljmp
push
dec
add
decl
push
add
adc
add
dec
add
stc
int
pop
add
fucom
cmpsb
push
les
mov
imul
add
test
cli
cld
dec
bound
xchg
js
add
dec
ljmp
clc
fwait
add
ficomps
add
cmpsl
pop
mov
push
jno
int
imul
jp
movsl
mov
test
sub
inc
jle
add
adc
ljmp
cmp
push
stos
int3
lods
jne
xor
dec
jae
aad
sbb
add
ret
push
iret
and
pop
cwtl
jle
sarl
mov
lcall
filds
jge
dec
cmp
insb
add
roll
test
push
lock
fdivr
out
cltd
mov
adc
dec
cmc
cmp
cld
dec
xchg
movsb
add
push
test
dec
or
lods
adc
sub
add
dec
cld
or
mov
daa
lret
adc
sbb
add
int3
daa
jae
inc
mov
inc
push
xchg
add
lcall
movsb
jge
mov
sbb
hlt
fcoml
imul
dec
push
hlt
lds
mov
xchg
mov
pop
jg
add
adc
mov
dec
lret
lods
pop
push
lods
mov
pop
repnz
loope
sahf
or
sub
je
arpl
mov
addr16
pop
fildl
pushl
adc
mov
int3
xchg
mov
mov
jbe
mov
leave
push
and
add
ltr
arpl
or
mov
sbb
test
gs
push
in
in
xor
leave
push
adc
cli
js
add
jp
js
cli
icebp
fwait
mov
lahf
push
inc
pop
push
cmpsl
add
dec
or
mov
cmpsb
cmp
xchg
lcall
push
push
jp
sub
sbb
das
mov
or
push
add
adc
fwait
mov
neg
addr16
mov
in
ds
and
inc
add
test
jl
ficompl
inc
dec
int3
adcl
sub
add
add
scas
ret
mov
jns
stos
fbstp
sub
mov
and
ds
push
lcall
add
or
or
clc
int3
mov
mov
inc
leave
inc
sub
add
mov
mov
daa
out
sbb
loop
dec
add
mov
cmovle
dec
dec
add
cltd
push
add
imull
int
mov
outsb
xchg
int3
leave
cltd
sahf
in
addl
test
js
fwait
lock
fistpl
mov
into
push
jns
dec
mov
add
add
mov
leave
xchg
adc
pop
add
add
add
into
push
mov
iret
sub
add
mov
out
dec
test
sbb
push
mov
dec
sub
add
fistl
fldt
loopne
add
aas
stc
mov
push
mov
cltd
add
xchg
out
sub
sub
cwtl
negl
cli
add
mov
cltd
jnp
lods
pop
push
inc
adc
cmp
add
into
jb
adc
cmc
mov
add
mov
lds
lret
in
jge
adc
scas
mov
or
pop
or
add
and
pop
mov
cmpsl
inc
mov
add
push
mov
out
cmp
xchg
pop
or
gs
stos
mov
cli
add
push
addb
sub
and
add
and
sub
ds
aaa
pop
add
jnp
loopne
adc
cmp
xor
xchg
sbb
in
add
lods
out
add
mov
add
loop
add
jno
aas
adcb
add
add
fs
lahf
and
aad
sub
lret
pop
jge
push
enter
jnp
fdivrs
jbe
add
cmpsl
test
mov
add
add
pop
xor
out
ljmp
stos
mov
int
pop
add
das
fsub
sbb
loope
adc
mov
or
or
inc
leave
pop
aad
test
add
cmp
push
dec
nop
fwait
daa
adc
int
cmp
cvttps2pi
add
into
lret
sbb
pop
add
clc
add
mov
andb
add
add
seto
xchg
sbb
push
mov
and
add
add
das
in
loope
outsl
dec
and
sub
fildll
scas
xor
jge
pop
add
sbb
mov
jns
add
aas
sub
add
mov
mov
fucomi
lret
ds
in
pop
push
pop
add
sub
inc
fildl
cmp
add
gs
cmpsb
rcrb
lods
fstps
cmp
cmpl
scas
ja
xor
fst
xchg
xor
inc
xchg
fisubrs
fnstcw
add
movsb
add
ficoml
jae
add
out
in
pop
sub
add
add
in
cmp
repz
mov
mov
bound
push
add
mov
push
shrb
mov
add
loop
or
adc
push
cld
cld
sub
dec
add
push
into
iret
add
roll
fistpll
or
add
jne
lods
mov
lea
and
test
pop
clc
sub
fbld
and
jle
mov
hlt
aam
into
push
mov
ret
push
jle
sbb
inc
shll
jmp
add
mov
dec
ljmp
notl
cltd
mov
mov
fidivs
mov
add
mov
cmp
sub
mov
enter
loop
pop
rorb
adc
scas
ss
insl
shrb
lock
js
pop
shrb
iret
or
xor
in
loope
sbb
ss
movb
add
lret
iret
mov
xor
dec
outsb
jne
push
fbstp
or
fdivs
nop
inc
cli
mov
imul
mov
cmp
inc
xchg
pop
add
push
add
xchg
cld
pop
add
push
add
rorb
jb
mov
les
aad
lret
mov
add
xor
and
jl
jmp
mov
out
mov
add
cmp
fimull
movsl
int3
jbe
in
inc
cld
push
add
add
add
push
movsb
mov
ljmp
add
push
mov
mov
add
stc
test
daa
gs
mov
imul
mov
fbstp
add
inc
xchg
es
sub
add
or
add
cmp
dec
adc
rcll
inc
test
fsub
cmpsb
insb
daa
add
sbb
dec
data16
push
sbb
mov
push
je
inc
mov
or
rorb
add
sbb
xchg
inc
imul
andb
lock
push
test
aad
xor
repz
add
or
lea
jne
mov
lds
loope
xor
and
pushf
adc
jno
and
notb
xor
jg
cmp
add
out
leave
ficoms
repnz
bnd
add
jecxz
add
bound
pop
add
sbb
cld
adc
in
das
daa
add
add
lds
popf
push
sub
flds
sti
add
inc
aas
cwtl
lods
jp
xchg
mov
mov
cld
add
scas
pop
mov
adc
rcrb
inc
sbb
or
movsl
sbb
mov
add
and
icebp
or
addb
or
adc
sbb
sbb
gs
mov
add
ret
sbb
mov
data16
and
stos
mov
dec
add
shlb
jge
add
add
add
add
repnz
dec
mov
cmp
mov
add
lods
shrl
add
js
orl
adc
sbb
fwait
and
movsl
mov
and
ret
add
cli
std
add
je
mov
call
lea
or
fwait
add
pop
jo
mov
cwtl
negl
jg
rorl
mov
sbb
test
mov
cmp
mov
add
aad
ficomps
xchg
jne
les
mov
jl
imul
xor
nop
scas
daa
imul
sub
push
and
or
add
add
aad
arpl
dec
sahf
pop
lcall
push
mov
mov
sub
sbb
dec
sub
dec
add
add
aas
push
out
inc
pop
jle
enter
sbb
mov
add
fmulp
pop
sub
enter
push
lret
mov
fcmovbe
fbld
sbb
xchg
push
add
add
fists
pop
cmp
mov
cmp
adc
push
dec
daa
pop
jbe
mov
add
iret
out
test
mov
mov
cmpl
add
xchg
xchg
les
fisttpl
stos
inc
lock
xor
int
faddl
mov
add
sbb
mov
or
adcl
shlb
inc
mov
push
cmpsb
leave
addr16
xchg
adc
pop
and
add
add
in
add
mov
fwait
std
dec
mov
repnz
xchg
push
in
fucomi
les
xchg
and
fs
xchg
pop
aas
hlt
pop
pop
decl
mov
fwait
dec
les
xchg
lds
mov
ret
mov
sub
mov
xchg
call
mov
mov
fstps
mov
pop
or
add
ja
add
sbb
add
add
sub
out
pop
loop
lds
mov
insb
cld
icebp
les
add
cmp
or
push
mov
movd
popa
sub
xor
repnz
lcall
out
sti
add
and
cmpsl
in
notl
fistpll
lods
inc
push
lock
pop
and
cmp
push
leave
jp
sbb
mov
lods
cmp
addl
jbe
lcall
xlat
push
dec
add
arpl
add
outsl
sub
dec
cld
add
incl
icebp
xor
stos
dec
add
sub
add
dec
or
mov
out
push
jg
xchg
mov
mov
sbb
in
cltd
test
mov
push
and
mov
add
mov
xor
dec
sub
mov
andl
addr16
das
movsb
add
jae
add
addl
and
ss
xchg
dec
sub
dec
outsl
and
add
cmpsb
mov
xor
stos
insb
adc
cs
xchg
xchg
outsl
add
roll
mov
sub
ds
rcll
xchg
add
adc
dec
dec
add
add
sub
add
and
cli
add
aam
ja
push
cld
inc
fisubs
int
mov
loope
add
xchg
and
add
ljmp
loopne
js
in
es
in
add
cld
sub
sub
sti
mov
lcall
in
loope
pushf
add
pop
push
mov
jnp
aaa
add
rolb
fst
sub
push
cmp
and
push
mov
xlat
push
movl
insl
lods
or
arpl
sbb
shl
das
adc
add
pop
int
sub
cmp
inc
dec
dec
pop
sbb
gs
and
divl
add
clc
cmp
shll
ret
nop
ret
sbb
outsl
mov
ss
jge
push
xor
outsl
loope
and
pusha
pop
and
ds
add
in
inc
sub
rorl
flds
jg
mov
adc
add
inc
sbb
lods
loop
out
xchg
mov
adc
mov
in
insl
das
jge
popf
adc
or
std
xchg
loope
cwtl
push
loope
jb
mov
add
es
adcb
add
shlb
sbb
pop
cmp
add
add
add
hlt
jo
dec
stos
cld
add
les
xor
or
adc
xlat
lds
sub
movsb
mov
dec
add
sbb
xor
leave
ret
daa
or
add
aas
add
xor
cwtl
pop
sbb
pop
pop
mov
inc
out
imul
xchg
call
cltd
cltd
subl
pop
aas
add
cmp
test
pop
pop
test
aad
shll
mov
hlt
xor
push
cli
adc
xchg
testl
cmp
pop
mov
inc
iret
jge
add
popl
call
add
ss
add
in
jb
add
xchg
popa
int3
int
pushf
into
lods
out
add
jp
loopne
lock
push
mov
mov
rolb
sbb
mov
push
dec
call
iret
xchg
arpl
add
sub
insl
mov
mov
and
add
dec
push
popl
dec
mov
adc
pop
or
insb
mov
ret
add
adc
aam
sbb
xor
mov
fsts
add
add
cwtl
sbb
mov
add
add
or
xchg
repnz
jbe
push
pop
add
jmp
add
add
push
add
add
ret
dec
jmp
sbb
and
adc
xchg
sub
lret
adc
jb
fadds
push
xchg
add
ljmp
push
fnsave
mov
fnstcw
lea
ja
data16
pop
sub
mull
mov
push
arpl
mov
nop
fstl
ret
lds
sbb
in
add
dec
mov
sbb
push
sti
dec
mov
ljmp
in
mov
mov
test
push
fdivrs
sbb
rcrb
cmc
add
xorb
in
add
push
int3
xchg
jae
lahf
pop
xchg
push
dec
or
add
cmpsl
add
je
xorb
fwait
adc
loope
xor
insl
push
jne
inc
rolb
sub
in
cmp
outsl
int3
pop
jle
nop
pop
mov
or
inc
xchg
mov
ljmp
ds
push
shll
divb
fs
out
daa
jg
mov
add
adcb
add
testl
fiaddl
arpl
push
into
lcall
js
in
add
inc
in
aam
add
and
std
sub
xor
sub
dec
push
add
add
adc
inc
add
add
decb
xor
push
xchg
mov
push
push
mov
cli
mov
dec
out
lock
out
xor
movsb
pushw
add
jno
cmp
add
mov
fdiv
scas
xchg
mov
push
add
in
push
xchg
or
movl
push
pop
pop
inc
jno
iret
cwtl
xchg
xchg
cmc
and
ja
push
ss
sub
dec
xchg
cmp
and
jg
add
cmp
sti
pop
int
lret
dec
sub
lahf
mov
dec
flds
inc
add
or
pop
scas
mov
dec
out
add
das
fcomp
bnd
das
fwait
fs
pop
add
test
lods
pushf
imul
sahf
lahf
loopne
xlat
test
push
jmp
jg
adc
lahf
lcall
loope,pt
ja
sub
pop
cmc
pushf
xchg
add
mov
rcll
mov
mov
popa
nop
imul
test
cwtl
icebp
cmp
and
hlt
inc
mov
mov
xlat
jno
sbb
add
cltd
adc
pop
jge
xchg
dec
pop
leave
stos
sbbl
testl
adc
cld
fisttps
or
mov
out
pop
add
in
xor
pop
cwtl
jno
push
insl
subb
in
les
adc
mov
push
add
add
in
adc
mov
popa
loopne
ja
cmc
mov
xor
mov
jns
in
or
push
lods
add
add
add
sahf
movl
daa
cli
pop
add
mov
rcl
inc
popa
pop
and
fwait
sbb
jnp
stos
add
cli
xlat
or
sti
add
add
subb
inc
xchg
jno
mov
je
in
mov
add
int
jns
jle
insb
add
xor
cmpsl
push
out
jae
push
call
roll
stc
adc
mov
cmp
imul
sbbl
add
addb
dec
pop
add
arpl
mov
leave
sub
mov
push
into
stos
stc
pop
push
je
cmp
adc
xchg
dec
add
push
fcoml
popf
add
xchg
repz
and
mov
mov
int
mov
aaa
or
mov
sub
xchg
mov
rorb
add
and
mov
adc
popa
fcmovnbe
movsl
add
cmp
lahf
lret
mov
in
test
dec
popa
jmp
lret
jnp
xchg
ss
rorl
or
dec
pop
es
push
es
es
in
xchg
mov
adc
movsl
xchg
dec
ds
add
add
hlt
cwtl
and
adc
xor
dec
into
arpl
fadds
pop
mov
adc
rolb
outsb
xchg
repnz
xchg
inc
add
decb
in
cmpl
dec
xor
sbb
adc
add
lret
add
shrl
pop
lret
ret
addr16
add
mov
add
jg
jo
cwtl
mov
add
ret
mov
xor
xchg
push
add
repz
add
xchg
popa
xor
add
xchg
add
es
lahf
pop
mov
xor
jno
mov
sbb
cs
add
and
pop
add
out
or
push
rcrb
add
xchg
sbb
stos
add
jno
test
mov
call
cmpb
add
jne
pop
out
or
leave
jnp
push
adc
push
test
out
jb
add
pop
mov
sub
xor
subl
in
mov
jge
cmpsb
loope
mov
add
pop
lock
inc
and
cmp
icebp
or
lcall
or
sub
add
or
nop
enter
lret
adc
orl
mov
pop
sbb
and
fdivs
mov
adcb
lcall
sbb
ss
pop
add
nop
fiadds
nop
pusha
sarl
xchg
in
sbb
sbb
test
mov
mov
sbb
in
cs
les
cmp
push
push
imull
cmpsl
mov
mov
adcl
mov
lahf
add
inc
iret
dec
cld
into
mov
mov
fwait
and
and
or
dec
sbb
and
xchg
adc
stos
imul
and
add
or
add
cmp
add
inc
scas
test
push
sub
aad
push
jmp
push
push
mov
lret
sub
in
mov
mov
cmp
leave
push
push
es
scas
jae
push
add
bound
and
cmp
inc
xchg
xchg
scas
add
push
js
or
andb
sbb
outsb
adc
dec
push
mov
mov
or
add
retw
push
lcall
dec
add
add
jl
cmpsb
inc
xchg
sub
fiadds
fiadds
mov
mov
dec
add
dec
add
adc
out
push
adc
sti
sbb
sbb
outsl
and
and
data16
add
mov
or
add
mov
arpl
mov
mov
jns
add
sbb
push
add
sbb
jl
jle
enter
sbb
inc
push
push
call
dec
loope
in
xchg
mov
pop
loopne
push
shrl
stos
add
aaa
cmp
push
movsl
add
cmp
bound
roll
sub
or
mov
jae
adc
or
xchg
jbe
mov
subb
shl
mov
or
xchg
add
pop
add
cmp
mulb
cmp
mov
push
int3
inc
enter
movsb
inc
mov
call
pop
add
add
push
lret
mov
bound
add
lret
out
push
add
dec
push
inc
cmp
sbb
push
mov
icebp
add
add
mov
nop
imul
add
std
cmp
aas
pop
adc
scas
int3
icebp
xor
aas
mov
je
out
adc
subb
rcrb
imul
jle
int3
sarl
addb
daa
shll
ja
mov
xchg
imul
leave
insl
and
outsb
cmp
std
ljmp
mov
pusha
push
mov
fs
fiaddl
popf
fisttpll
enter
pop
add
data16
je
pop
lods
mov
add
xchg
and
mov
mov
pop
add
pop
int3
aaa
adc
dec
mov
inc
fiaddl
and
inc
mov
loope
sbb
into
inc
dec
sti
sahf
push
addl
pusha
adc
xor
add
mov
add
jo
add
mov
mov
movsb
and
aas
inc
in
add
clc
add
or
cmp
shll
rclb
shrl
sbb
dec
ret
mov
sahf
js
rorl
aam
insb
add
and
and
and
jle
mov
cmp
fcoms
add
adc
cmp
cmp
mov
mov
xor
adc
and
add
mov
ss
mov
rolb
ljmp
cmp
cli
clc
cmpsb
inc
adc
dec
add
pop
fcmovnu
xor
inc
mov
repnz
rsqrtps
outsb
add
mov
jp
or
cmp
mov
stos
cmp
jmp
daa
ret
jne
or
add
dec
scas
mov
jbe
xchg
je
adcl
aaa
add
lret
sub
add
add
adc
cmp
add
lret
mov
xor
dec
mov
shll
stos
clc
or
repnz
mov
mov
add
mov
add
cmp
mov
adc
add
in
xchg
mov
gs
pop
sbb
push
pop
imul
xor
lods
pop
aaa
add
jle
add
pop
andl
jb
xchg
sbb
adc
jns
gs
adc
or
xor
in
add
negl
clc
fwait
mov
and
or
xchg
roll
mov
insl
add
add
inc
push
add
fidivrs
movsl
or
push
movb
inc
add
enter
push
add
orb
add
jno
add
xchg
xchg
in
sbb
cwtl
inc
mov
and
fildll
cli
mov
fldenv
add
add
add
int3
pop
or
and
dec
int
mov
add
sti
add
add
add
add
jb
cmpl
add
les
and
test
scas
sub
sahf
daa
pop
ficoml
mov
enter
movsb
xor
mov
jns
inc
fwait
jb
and
iret
push
mov
lea
es
xor
pop
mov
ja
insb
mov
popa
mov
pop
out
pusha
fldl
push
jo
jbe
and
ss
cld
mov
scas
push
aam
arpl
int3
add
sahf
mov
rolb
fwait
test
or
add
jb
cmovg
jo
xor
subl
cmpsb
or
ret
sbb
mov
sbb
jl
popa
ret
sbb
inc
inc
orb
ss
mov
fildll
out
inc
adc
dec
xor
xchg
jne
lea
mov
bound
mov
pop
lcall
mov
int3
jno
stos
or
icebp
xchg
sub
xor
and
pop
xchg
std
push
packsswb
sbb
xorb
pop
outsb
pop
xchg
mov
dec
sahf
push
xchg
add
fildl
cwtl
loopne
test
clc
bnd
dec
inc
rclb
in
pop
add
add
sbb
insb
int
leave
mov
ss
dec
mov
lahf
add
popa
shll
movsl
jge
xchg
out
push
das
insl
in
add
jns
test
sbb
adcl
and
scas
pop
inc
or
fiaddl
incb
dec
add
mov
jbe
push
lret
jle
int
pop
cmp
test
jae
add
pop
mov
sub
xor
mov
rolb
bound
daa
cs
mov
jge
inc
or
xchg
or
pop
mov
ss
test
out
add
jmp
out
fldenv
dec
dec
je
xchg
add
popw
and
adc
hlt
add
lock
pop
cmpsl
inc
cmp
or
gs
outsb
pusha
mov
inc
add
or
dec
aaa
add
icebp
add
mov
dec
cmp
mov
xlat
dec
or
inc
out
fsubp
push
jmp
adc
addb
add
cs
cmp
loopne
add
fwait
inc
push
mov
dec
xor
repnz
cmpsb
scas
repnz
sbb
std
sbb
and
jecxz
pusha
add
xor
jmp
imul
test
pop
clc
fiadds
out
xchg
lahf
cltd
je
mov
jge
add
jp
in
cmc
data16
xor
bound
insl
out
add
cmp
xchg
loope
movl
push
int
fldt
and
jmp
and
xchg
mov
inc
add
jbe
mov
add
mov
push
and
arpl
in
adc
sub
or
or
and
add
add
cli
mov
adc
adc
stos
pop
xor
mov
push
movsb
lcall
ljmp
cmp
outsl
out
add
movsb
push
inc
repz
in
xchg
in
mov
jmp
jg
and
cmp
addr16
mov
leave
int
das
in
lea
sbb
add
add
xor
push
sub
mov
mov
frstor
adc
or
lret
pop
xor
dec
jg
push
stos
sbb
cmp
mov
cs
add
xchg
add
inc
and
mov
or
xor
push
dec
fs
jo
jl
in
lods
xchg
ljmp
fcompl
cmp
cmpsl
mov
lahf
add
add
lret
push
in
add
add
scas
add
jnp
jae
xchg
mov
add
mov
jp
aam
cmp
sbb
sub
test
mov
data16
loop
and
jl
movsb
jg
int
gs
add
push
add
push
add
call
cli
test
sbb
lods
adc
fistps
mov
lret
or
test
add
xchg
aam
sbb
sahf
lds
push
mov
push
sahf
pop
sbb
mov
aaa
xor
adc
add
fistps
adc
popa
subl
outsb
add
movsb
cli
jge
stos
jo
sbb
adc
add
sarl
pop
add
mov
popf
call
sldt
cmp
fidivrl
out
in
dec
push
mov
jg
mov
sub
pop
and
xor
sahf
add
add
add
ljmp
jne
sahf
add
scas
pusha
stos
mov
xor
arpl
cmpsl
add
decl
jae
xchg
insb
xor
in
int3
pop
gs
ja
mov
push
or
cmp
push
add
es
cmp
aad
mov
inc
jns
sub
dec
jno
fs
xlat
adc
out
mov
sub
inc
push
add
jb
and
jne
push
or
dec
dec
or
and
inc
in
sbb
add
scas
push
mov
shll
jae
mov
dec
movsb
push
mov
ret
add
es
roll
out
fimull
movsb
add
add
add
push
mov
imul
dec
fisubs
aaa
add
mov
add
arpl
nop
and
jo
inc
ss
xchg
jmp
call
add
xchg
sbb
pop
lret
sub
adc
lcall
pop
enter
fisttpl
jl
dec
insb
add
add
jge
adc
cld
scas
sub
push
ja
testl
xchg
mov
inc
inc
add
dec
cli
bound
imulb
add
sahf
and
in
cmc
daa
stos
inc
jge
dec
fcomip
mov
push
ret
in
ljmp
test
pop
stos
xchg
add
popf
sarb
inc
xchg
adc
add
mov
int
dec
push
sbb
xchg
aad
sub
jb
into
xor
xchg
pop
add
sub
arpl
loop
inc
cmp
fwait
insb
cli
add
adc
in
push
pop
les
jle
aas
mov
cld
xchg
push
movsb
fists
add
icebp
xchg
push
stc
into
dec
mov
pop
pop
pop
stos
adc
loope
cmp
add
push
pop
adc
dec
ror
in
mov
add
xchg
notb
sbb
scas
xchg
mov
cmp
int
push
add
lock
pop
insb
subl
mov
outsb
int
ds
inc
sbb
jle
rclb
xchg
push
fldl
movsb
sub
fmul
adc
mov
adc
pop
das
ss
sub
inc
add
pop
iret
roll
roll
add
js
add
add
lret
loope
and
jecxz
mov
outsb
je
in
xchg
add
push
add
mov
jnp
or
sbb
add
and
movsb
test
pop
arpl
aas
add
outsl
add
nop
sbb
mov
roll
adc
push
add
cmpsb
ljmp
mov
xor
add
jae
outsl
adc
out
mov
xchg
add
lahf
add
loopne
push
insw
mov
push
scas
dec
cs
add
add
ror
je
sub
or
cs
enter
pusha
cmp
dec
imul
movsl
test
dec
sub
push
and
xor
lock
in
and
jmp
add
cs
xchg
add
cmp
popa
mov
mov
push
jge
mov
inc
or
stos
mov
repz
jno
int3
add
int
sbb
cld
jae
add
xchg
aaa
push
sbbl
jnp
aas
movsl
jo
pop
shll
and
add
imul
add
lret
push
ror
push
daa
jne
add
push
adc
pop
xor
and
enter
add
jne
or
xor
fimull
or
fchs
adc
sbb
adc
ret
add
dec
bnd
stos
add
push
jg
add
bound
pop
add
add
adc
and
ret
jecxz
out
add
clc
rolb
pushl
dec
lahf
inc
or
pop
mov
repz
ret
addl
jns
xchg
push
loope
les
jge
push
push
inc
lahf
leave
inc
in
jge
les
lods
cmp
mov
jae
mov
bnd
mov
lods
fbld
push
inc
outsb
sub
clc
cmpsl
cmpsb
cmp
jne
push
mov
add
jbe
hlt
shll
mov
jle
les
or
mov
add
insl
add
xor
inc
stos
cmp
std
cmp
inc
in
cmovl
inc
lahf
ss
xor
jae
push
test
in
push
pop
pop
mov
and
and
jge
mov
jb,pt
subl
add
adc
mov
add
fstps
push
sti
cmp
mov
mov
xchg
in
xor
jae
testl
add
or
sbb
jo
iret
mov
xor
lds
xor
push
xor
rcr
jno
movb
addr16
mov
sub
insb
mov
ss
movsl
sbb
jge
fs
add
sbb
and
outsl
std
out
pusha
or
jmp
lea
or
add
and
sub
adc
lock
mov
rorl
add
mov
in
es
call
add
sub
in
mov
and
push
test
add
mov
add
inc
fs
pop
pop
sub
add
bound
insb
jbe
out
add
movsl
stos
mov
sbb
mov
fists
adc
add
add
rolb
leave
clc
in
idivb
pop
add
add
xor
xchg
jo
xor
add
add
lds
push
test
mov
clc
sbb
xchg
ror
rolb
pop
fwait
add
cmc
outsl
adc
xor
jg
mov
adc
arpl
push
mov
and
cmpsb
cltd
gs
xchg
ret
cmp
jmp
int
fildl
xor
mov
es
lcall
add
dec
add
mov
dec
add
add
dec
jl
xchg
iret
mov
lock
cltd
out
inc
add
or
lret
into
stos
hlt
push
and
pusha
lret
es
shrb
mov
cltd
jbe
mov
roll
push
stos
xchg
add
xchg
add
inc
mov
fildl
int3
push
push
sbb
dec
add
jp
cmp
pop
add
mov
xor
test
xchg
fcom
mov
xor
jo
xchg
cwtl
add
add
push
jo
das
les
test
jnp
outsb
mov
les
daa
fdivrl
add
in
add
add
aad
xchg
fwait
out
mov
pop
clc
mov
add
in
in
rol
loope
add
push
adc
push
jne
adc
jp
mov
les
add
ss
lret
icebp
movsb
dec
shlb
out
add
mov
push
adc
negb
aaa
ret
call
dec
cld
xor
push
sub
mov
aas
push
notb
cmc
leave
int3
inc
test
call
psubusw
test
xor
add
mov
shlb
sub
xchg
cmp
add
je
lods
cmpsl
cmp
les
add
mov
cmp
ljmp
test
fucomp
fcmovnb
pop
jae
mov
jecxz
xchg
add
enter
add
add
cmp
mov
cmp
roll
xlat
inc
cmp
mov
and
outsb
push
add
add
pop
sbb
add
test
inc
mov
add
or
mov
add
pop
mov
push
cmpsb
inc
stos
mov
add
jp
das
add
adc
testl
insb
mov
cmp
jmp
rcrl
shll
mov
xor
mov
mov
add
and
jbe
je
sbb
push
leave
mov
xchg
mov
test
sub
cmpsl
jo
push
hlt
push
or
in
imul
sbb
xchg
sub
mov
add
fiadds
dec
cmp
sbb
int3
add
repnz
clc
jnp
dec
mov
mov
dec
mov
repz
out
ffreep
push
push
addr16
xor
add
hlt
push
scas
movsb
jb
pop
lods
lcall
sub
mov
daa
push
in
or
inc
jb
ret
jns
inc
push
ltr
xchg
loopne
jmp
outsb
aam
incl
sub
pop
add
imul
push
add
push
mov
in
outsl
dec
xor
pop
shl
dec
scas
aaa
xchg
or
enter
fldl
cmpsb
jle
xchg
adc
lahf
insl
add
mov
xchg
xchg
adc
cmpsl
xor
ror
xlat
pusha
xchg
pop
push
inc
dec
mov
sub
sbb
mov
adc
mov
bound
add
jo
js
sbbb
sub
push
scas
lahf
adc
jmp
mov
push
lods
sub
jmp
xchg
mov
fcomps
fdivs
cli
cmp
or
roll
xor
popa
add
jns
dec
movsb
sub
add
push
sbb
add
out
add
ret
es
pop
mov
in
mov
inc
add
into
imul
pop
cli
xchg
or
add
stos
jns
pop
cs
mov
lods
mov
lcall
shl
mov
add
add
or
dec
xor
xor
add
add
cltd
mov
push
lcall
pop
or
cmpsb
push
add
les
outsb
pop
das
xchg
jmp
xchg
adc
pop
pop
inc
add
mov
imul
adc
mov
jae
dec
and
sbb
dec
cmpsb
pop
xchg
mov
or
cli
cmpsl
sub
int
pop
adcl
ja
cmc
fimuls
mov
int3
xor
add
repz
add
mov
or
mov
sahf
xor
xchg
dec
fisubrl
pop
mov
ss
adc
test
pop
jg,pt
xor
insb
add
xor
lods
mov
imul
roll
pop
mov
aas
scas
push
in
adc
and
lret
shlb
xor
push
add
mov
ss
push
inc
mov
repz
dec
cs
pop
cmp
inc
sub
jle
in
add
cmp
dec
les
push
or
lret
clc
mov
sub
pop
sbb
bound
dec
dec
mov
dec
xchg
jmp
scas
out
push
and
rcrb
cs
inc
add
or
add
add
add
inc
add
repnz
and
out
mov
sub
pop
mov
and
xor
cli
int
mov
sbb
mov
std
adc
lcall
inc
int3
mov
out
nop
loop
addb
lret
das
xor
aad
push
xor
js
add
pop
jge
aam
xchg
aaa
movsb
pop
sub
into
movsl
ljmp
xor
inc
movsb
add
pop
ror
xor
cmp
add
add
push
mov
sub
pop
int3
js
mov
subl
int
cmpsb
jno
test
mov
add
and
test
jne
jno
out
cltd
or
push
push
in
mov
lahf
imul
inc
cmpsl
sti
sub
mov
mov
fwait
inc
add
mov
or
and
add
xchg
mov
decb
fdivrl
mov
add
pop
repz
mov
mov
mov
fidivrl
add
jle
and
outsl
imul
mov
shll
cld
dec
pop
in
mov
aam
add
scas
stos
jecxz
jae
push
push
add
push
mov
or
nop
xorb
test
adc
f2xm1
mov
mov
add
add
inc
xor
mov
js
add
cmp
out
add
inc
test
push
outsb
push
sbb
push
test
fcmovbe
pop
mov
mov
add
test
mov
das
test
xor
adc
jb
pop
mov
insb
add
pop
repnz
lods
std
lods
negl
imul
fadd
cmp
pop
push
in
movl
int3
add
fistps
xor
dec
inc
add
outsl
xchg
divb
jle
adc
pop
add
pusha
cmp
and
rolb
lock
out
pop
add
add
push
je
push
rclb
pop
movsb
movsb
jae
shlb
push
and
add
jnp
mov
clc
sub
out
adc
pop
hlt
mov
jp
sub
pop
pop
or
cmp
cmp
add
dec
gs
sbb
adc
mov
loope
jmp
and
or
bound
jns
xor
hlt
pop
jb
cmpsl
xor
add
add
sbb
sahf
pop
inc
pop
inc
ja
mov
sahf
push
jmp
pop
gs
add
aad
sbb
roll
push
inc
mov
sbb
and
add
xchg
sahf
imul
add
cmp
mov
dec
pusha
lret
shlb
xchg
lcall
add
adc
inc
cwtl
jmp
sub
pop
mov
lock
test
push
push
aad
cmp
inc
jae
ja
and
repz
cmp
out
push
pop
ja
xchg
aad
sbb
lock
pop
and
mov
int3
fdivl
push
adc
cli
test
mov
mov
imul
mov
bound
mov
push
inc
add
xchg
dec
push
imulb
fsubr
imul
fimull
and
jae
pop
xchg
or
movsl
lret
inc
cwtl
xchg
push
xorb
cmpsb
filds
mov
dec
test
or
push
arpl
mov
add
mov
xor
xor
jns
dec
dec
dec
cmpb
add
jmp
movsl
fidivs
mov
xor
sub
mov
into
mov
mov
cld
ret
jb
ds
jae
lahf
adc
cmp
jle
inc
scas
pop
push
aad
inc
into
sub
push
pop
add
hlt
icebp
or
add
ret
js
lods
jmp
ficompl
add
xchg
push
cmp
sbb
jle
cmp
addb
add
or
adcb
add
add
ret
fsts
inc
leave
add
icebp
add
fisttpl
leave
or
stos
pop
add
sub
rcll
dec
mov
and
sub
insb
out
pop
jge
cmp
lods
mov
clc
add
je
cs
pop
test
xor
push
add
xchg
clc
mov
mov
scas
fbld
xchg
adc
in
fucomi
xchg
add
int
shrb
push
pop
mov
and
mov
hlt
add
repnz
add
adc
push
fiaddl
inc
push
in
xorl
adc
jge
fsubs
cmc
inc
add
sbb
mov
jne
je
out
dec
add
enter
ret
push
add
pop
popa
cmp
add
xor
add
inc
push
mov
and
outsb
or
insl
aas
adc
mov
icebp
enter
imul
int3
add
mov
pop
popl
call
out
xor
sarb
or
shll
repz
add
rcr
pop
aaa
std
dec
lahf
pop
mov
xor
add
fwait
gs
add
in
add
cmp
add
inc
jg
add
sahf
es
cltd
add
outsl
jb
and
inc
xchg
dec
add
add
cmp
jnp
pop
rcrl
dec
and
int3
sub
das
add
cmp
xchg
adc
inc
gs
in
xor
pop
aam
cltd
jns
or
add
xor
sbb
dec
inc
add
fldt
loopne
push
add
jae
xlat
lret
icebp
cmp
in
addl
repnz
or
adc
shll
mov
xchg
and
jle
cwtl
mov
jge
lahf
dec
addl
cltd
test
mov
sub
cltd
sub
mov
jle
out
loope
jmp
add
hlt
add
cltd
aaa
add
mov
idivb
lahf
inc
ret
into
xchg
ret
add
mov
sarb
mov
aad
inc
jae
mov
jecxz
or
stos
and
int3
in
arpl
jnp
out
les
iret
divb
loop
in
imulb
add
testl
add
or
mov
in
imul
cmp
cmp
inc
sbb
jge
cmp
test
rcll
movsb
add
cmp
or
add
add
and
adc
or
pop
jns
je
xchg
loopne
xchg
mov
rclb
jmp
add
lcall
les
and
scas
pushf
pop
cli
add
jnp
push
xor
filds
out
std
add
inc
daa
aad
add
pusha
mov
push
fidivrs
pop
les
fsubl
and
add
or
adc
lahf
jbe
jge
aam
lods
add
aaa
sub
into
popf
mov
push
nop
ljmp
jge
add
mov
rorl
xchg
test
loop
mov
ja
sbb
add
outsl
adc
add
pop
es
or
jns
add
mov
mov
dec
dec
add
flds
pop
mov
faddl
stc
jmp
lds
ja
add
mov
scas
std
mov
and
xlat
push
mov
jb
cmpsb
inc
jb
xor
cmp
sbb
mov
add
sbb
add
add
sbb
mov
push
pusha
push
mov
add
add
std
popf
ss
lock
fadds
stos
or
xor
add
jp
das
push
mov
rolb
add
xchg
inc
jmp
xchg
test
dec
sbb
xchg
lahf
pusha
or
cmpsl
adc
cmc
mov
mov
jae
mov
and
add
or
sti
shl
push
jne
sub
or
add
or
shl
cli
sbb
nop
ja
fcmovnbe
add
dec
sarb
dec
mov
xor
je
xchg
adc
popa
outsl
sbb
cltd
icebp
add
sahf
xchg
movsb
insb
lret
add
xchg
add
lret
pop
add
add
addr16
aam
arpl
pop
lods
add
add
out
xchg
and
insb
int3
adc
filds
iret
mov
jnp
out
pop
mov
lods
loop
add
add
xor
add
pop
push
adc
add
jge
sub
lea
mov
adc
push
add
mov
push
fnstenv
jp
push
push
movw
out
sbb
sbb
les
push
fcom
imulb
xchg
push
sbb
cli
cmp
mov
dec
push
sub
or
inc
add
jae
mov
imul
add
gs
insl
cltd
add
mov
sub
mov
mov
push
fstpt
in
sub
add
add
jae
push
push
sub
or
lock
mov
cmp
add
sar
sbb
sub
lar
pop
push
rolb
movl
mov
testb
fldl
cli
das
aam
add
ds
inc
push
dec
add
pop
data16
loope
ret
jmp
and
add
test
movsl
mov
push
sub
add
add
pop
xor
sbb
add
arpl
in
or
hlt
pop
and
daa
xor
iret
bound
in
add
add
fldenv
mov
int
adc
push
movsb
test
xchg
lock
jbe
xchg
leave
out
jmp
cld
int
loopne
add
fcom
cmp
sbb
cmp
sub
movsb
or
cltd
popf
nopl
push
pushf
dec
add
sti
add
sbb
outsb
mov
clc
fs
inc
jbe
into
add
xchg
add
stos
sbb
daa
aaa
xchg
insb
fisttps
fwait
add
jne
data16
mov
add
push
dec
pusha
pop
cld
repz
imul
xor
mov
ja
push
je
add
je
rolb
pop
adc
mov
cmpsl
mov
inc
aad
pushl
and
ds
lret
xchg
dec
mov
pop
movsb
test
xchg
mov
lock
popa
pop
pop
add
fwait
mov
cltd
xchg
dec
sahf
in
out
pop
or
dec
ss
mov
dec
add
pop
mov
adc
xor
imul
xchg
mov
adc
cmc
cmp
loop
fldenv
punpckldq
push
and
xor
insb
or
mov
pop
add
roll
adc
cmp
mov
fwait
gs
xchg
add
fs
mov
pop
dec
xchg
mov
fnstenv
je
cld
movl
mov
add
jno
rolb
jno
cmp
sbb
push
lret
shlb
jae
mov
sub
jno
jo
xchg
dec
add
stc
push
add
jae
and
sbbl
loopne
jmp
adc
in
jnp
xchg
push
test
push
stos
ficompl
lret
sti
xchg
cmp
pusha
sub
lea
mov
sub
cmp
jb
and
cmpsl
popa
nop
stc
add
int
sub
xorb
inc
inc
ja
adc
rclb
fwait
adc
lret
repz
push
cltd
subl
fldl2t
pop
mov
inc
add
xor
cmp
lods
test
in
push
lahf
mov
aas
jle
mov
lret
popl
add
sbb
mov
cmpsb
add
add
dec
add
sub
mov
xor
mov
pop
dec
push
stc
mov
dec
mov
and
mov
mov
scas
add
insb
mov
das
loope
dec
into
adc
das
jo
jmp
xor
inc
add
add
fdivrl
data16
push
adc
xchg
add
insl
add
add
add
push
pop
add
xchg
bnd
sbb
repz
add
xor
in
je
dec
xchg
add
inc
or
pop
fiadds
push
mov
add
adc
insl
or
insb
xor
add
sbb
lahf
lret
les
add
icebp
adc
jae
xor
lea
ficoml
lods
add
es
pop
sti
add
gs
push
aas
add
xor
push
addb
jmp
loop
pop
jp
or
add
dec
popa
jmp
out
mov
pushf
scas
or
lret
das
cmpsl
jns
ret
xchg
mov
sbb
mov
push
in
pop
cmp
fsubs
xchg
mov
xor
fisttpl
bnd
scas
sbb
loope
dec
add
add
cli
cltd
ret
dec
mov
mov
fs
ret
fcompl
es
stos
sub
sbb
sbb
adcl
das
int3
push
leave
xlat
and
jo
call
imul
enter
in
add
outsb
add
jns
cli
lret
pop
cmc
pop
cmp
shl
jo
cwtl
mov
add
add
xor
mov
jmp
jnp
adc
push
test
sbb
fnstcw
std
jle
incl
inc
stc
mov
add
adc
mov
es
xor
mov
push
push
testb
add
push
mov
mov
xor
mov
rorl
dec
inc
decl
cmc
das
lahf
pop
clc
inc
fwait
rcrl
dec
adc
cmpsb
pop
pop
add
cmp
dec
dec
cmp
ljmp
aam
add
and
or
sub
test
out
add
sbbb
mov
pop
cltd
push
or
push
push
xchg
stos
lret
adc
add
sahf
adc
iret
inc
inc
inc
ror
fcoms
cmc
cmc
sbb
xchg
add
dec
insl
decb
lods
lret
add
int
stos
nop
xchg
ret
sbb
shl
mov
ret
insb
add
dec
fisttpl
in
mov
pop
add
sbb
loop
or
std
and
xchg
dec
mov
ds
bound
sarb
test
fists
xchg
add
ficompl
add
add
push
push
inc
lret
sti
ret
jo
cli
cmp
add
mov
and
add
pop
push
enter
int
mov
dec
push
xor
inc
add
pop
mov
add
aaa
pop
push
xchg
push
pop
xor
inc
adc
or
rclb
or
add
sti
add
incb
ds
test
push
add
mov
pop
xchg
dec
cmc
decb
sub
mov
add
add
sbb
arpl
and
add
jns
sbb
mov
inc
add
shr
enter
leave
jns
xor
add
shr
pop
mov
jnp
dec
jbe
add
ds
xor
je
dec
inc
xchg
daa
jge
out
xchg
out
cmp
add
xor
mov
mov
mov
sbb
outsb
aad
clc
icebp
clc
add
pop
add
inc
negb
movsl
pop
in
push
fnstenv
in
clts
add
loope
inc
lea
cs
xor
cmpsl
jae
mov
jbe
xchg
pop
jno
call
cmp
push
push
sub
mov
cmp
jae
data16
fsts
jecxz
or
add
sbb
inc
push
sub
cmc
test
cld
add
cltd
add
loopne
jno
or
jnp
or
add
popf
ret
cld
pusha
mov
out
sbb
xor
in
jnp
loopne
mov
mov
cmpsb
popa
cmp
aam
add
stos
cmpsl
pop
rorl
gs
xchg
add
mov
cmpsb
rdtsc
aad
jb
and
lods
pop
pop
sbb
add
add
push
push
xchg
add
mov
push
mov
add
cli
icebp
cmp
mov
sbb
hlt
push
xchg
scas
int3
add
lahf
mov
into
sbb
add
imul
add
add
scas
out
jmp
jae
popa
mov
addr16
cmp
sarl
jb
jmp
incl
xor
add
leave
fwait
add
cmp
add
adc
cmp
aas
sbb
ds
and
add
test
stos
add
pop
arpl
popf
addl
outsb
jg
mov
shll
jb
pop
add
adc
outsl
jns
gs
in
sbb
repnz
into
imul
sub
ss
sti
inc
gs
jg
test
mull
or
int
add
pop
out
xchg
out
shll
ret
loop
mov
scas
or
sub
or
cmpsb
add
lods
add
out
jge
cmp
cmpsl
push
pop
lret
out
cmp
bound
fwait
dec
aaa
ficoms
mov
data16
jl
add
int
push
shll
add
pop
add
jne
lock
add
jns
jb
add
dec
mov
sub
cmp
out
addl
es
sub
fisubl
add
ds
stos
xor
dec
xor
mov
mov
lods
mov
lret
imul
sbb
push
pop
pop
add
je
sti
mov
mov
sub
xor
jecxz
loopne
fsubr
adc
pop
call
ja
push
ds
xor
or
push
add
sub
mov
inc
test
insb
dec
adc
or
popf
fs
repnz
push
int
adc
xorl
adc
mov
xchg
lock
cmp
push
cs
mov
mov
push
lds
inc
pop
cltd
mov
ja
movsb
pop
ss
jg
inc
lret
adc
mov
mov
sbb
movsl
dec
xlat
hlt
mov
scas
clc
clc
dec
dec
xchg
adc
jno
lahf
repnz
rorl
dec
xchg
add
js
cwtl
popf
and
fdiv
cli
sbb
xlat
in
push
and
inc
pushf
jge
in
out
sbb
repz
add
fadds
add
inc
add
jmp
mov
sbb
dec
adc
add
scas
push
roll
dec
fisttps
ljmp
mov
movl
mov
add
pop
jbe
int3
fsubs
pop
add
push
dec
out
inc
cmp
insl
in
test
jae
shrb
sbb
cld
pop
dec
lret
adc
cmp
pushf
mov
push
add
sbb
outsb
ljmp
add
fdivrl
fiadds
pop
add
pushf
out
add
je
enter
xor
mov
cltd
rcll
sbb
add
lcall
aaa
shlb
fldl
add
loope
cltd
hlt
adc
jae
jbe
xor
cmp
adc
mov
xchg
lahf
mov
test
pop
test
call
decb
outsb
sbb
mov
jnp
in
pushaw
leave
add
dec
cwtl
cld
add
imul
fstps
push
mov
testb
push
cmpsb
add
daa
pop
jno
test
sbb
add
scas
ljmp
in
mov
rorl
aad
pop
in
insb
push
imul
pop
xchg
enter
add
cmpsl
mov
popf
pop
pop
pop
cmp
add
fldcw
cs
xor
push
sbb
xor
popa
xchg
test
mov
rolb
aad
sub
in
xor
and
add
add
and
movsb
les
xchg
add
xchg
cmp
cmp
jge
aad
sbb
gs
add
sub
pushf
push
mov
adc
mov
add
int3
add
add
push
add
pop
xor
pop
ret
rcrl
mov
je
xchg
jbe
add
add
add
mov
mov
adc
adc
dec
add
ffreep
popa
cld
mov
jmp
sbb
test
pop
add
add
xchg
xor
aas
or
fwait
or
add
lods
push
mov
cmp
dec
xor
add
add
ficompl
stos
negb
and
xchg
add
add
mov
repnz
mov
aas
arpl
pushf
xor
nop
jnp
das
cmp
add
jno
lret
dec
xor
pcmpeqb
push
inc
faddl
inc
add
int3
mov
adc
and
loopne
rcrl
clc
sub
mov
and
ja
in
inc
jl
cmp
add
dec
dec
xor
pop
lahf
lds
jb
push
mov
add
nop
iret
xlat
add
xor
add
loopne
lret
cld
push
mov
out
add
jle
fistpl
test
add
add
jmp
add
inc
push
inc
and
imul
clc
lock
lahf
flds
xchg
add
dec
cmp
addr16
mov
adc
int
cmpsl
add
sbb
fwait
icebp
xchg
test
mov
add
adc
sub
xor
or
xchg
adc
dec
lods
add
sbb
xchg
repnz
jo
mov
imul
aam
or
cmpsl
jmp
inc
add
mov
sahf
add
icebp
mov
inc
add
cld
lods
addl
fists
sbb
mov
adc
outsl
pop
sti
mov
adc
sbb
pop
add
mov
in
rorb
sarb
mov
inc
ret
std
jle
loop
ds
pop
cmp
add
xchg
bound
repz
movsl
add
xor
add
add
add
or
jns
scas
dec
mov
adc
and
das
and
or
adc
mov
lret
pushf
ret
add
ds
and
popf
aam
cmp
add
bnd
lock
lret
add
sbb
rclb
add
test
jge
mov
popa
jo
adc
push
shrb
add
sahf
sub
inc
mov
and
cmpl
xor
scas
add
jae
add
stos
lock
push
leave
mov
gs
shlb
push
adc
xor
mov
aas
add
enter
jmp
pop
icebp
add
and
push
std
push
movsb
xor
incb
fbld
jl
dec
or
pop
dec
or
or
ja
sub
or
adc
clc
cmp
fistl
and
data16
aas
ret
add
add
popf
or
push
inc
xchg
and
add
call
jmp
in
repnz
xchg
jecxz
mov
add
cmc
add
nop
mov
mov
ret
pop
ja
push
or
dec
movsl
sub
push
inc
or
add
pop
sahf
or
cmp
dec
xchg
pop
mov
movsl
mov
in
jae
ss
sbb
leave
push
loop
rcll
pop
pop
fs
xlat
std
xlat
fbld
outsl
adc
add
aaa
push
shll
adc
or
add
pop
xor
add
notl
fiadds
movsb
pop
iret
lds
jecxz
inc
dec
lcall
add
add
add
outsb
xor
lcall
inc
ficompl
test
xorb
or
and
push
add
add
mov
daa
sub
inc
out
add
cmp
out
add
xlat
dec
cmp
mov
push
je
test
add
mov
lret
cmpsb
sbb
shr
hlt
ja
sti
add
lahf
jg
sub
or
dec
or
push
mov
inc
daa
addl
mov
mov
es
mov
aas
inc
dec
mov
mov
lea
test
divb
add
sub
inc
cs
cmp
or
xor
test
mov
and
add
in
add
rolb
stos
aad
xor
std
adc
mov
bnd
mov
or
aad
or
jl
dec
pop
jmp
test
pop
add
cld
cmp
push
add
pop
add
mov
fnsave
pop
cwtl
mov
movsl
mov
les
add
xchg
add
bound
sbb
dec
push
rolb
test
adc
sub
inc
addl
fcomps
xchg
sub
push
cmp
insb
inc
push
stc
rorb
and
cmp
fs
add
fwait
and
movsb
or
dec
push
add
std
movb
movl
push
pop
adc
jns
ja
cmpsl
or
dec
loop
sahf
xchg
inc
cs
add
add
jnp
gs
popf
pop
adc
adc
addl
mov
or
testb
rcll
mov
xchg
in
sbbb
add
test
insl
sbb
mov
push
sbb
stos
or
lahf
mov
xor
add
push
add
cmpl
adc
mov
adc
sbb
and
data16
adc
add
insb
repnz
mov
pop
stos
jbe
ret
jecxz
ds
dec
adc
and
loop
imulb
data16
popf
jp
mov
jns,pt
andb
pop
cmpsb
sub
pop
out
cmp
shl
jmp
add
ret
push
mov
xchg
xor
repnz
in
les
push
push
xor
lea
add
int
sub
xchg
push
push
and
stos
rolb
mov
fldlg2
addr16
jno
mov
pop
jp
cmp
sysexit
in
in
or
add
cmpsb
mov
add
jns
stos
mov
sub
add
sbb
jp
push
add
mov
cmp
cmc
cmp
cmp
lahf
xchg
adc
psrlw
outsb
add
dec
dec
test
add
enter
test
add
add
sub
xor
inc
add
inc
xor
push
enter
into
test
add
fiadds
cmp
lds
data16
xorb
add
jl
mov
add
stc
scas
nop
sbb
cli
push
lods
aam
cs
inc
insl
push
xchg
outsl
add
ja
jae
pop
cmp
add
xchg
inc
loope
add
add
add
sbb
add
inc
and
lea
mov
jge
mov
xchg
mov
int
add
add
or
repnz
xor
aaa
xor
cmpsl
add
inc
ror
enter
cmpsb
lahf
shrl
mov
cmpsl
add
lods
add
nop
scas
and
add
fnsave
dec
loope
in
test
mov
adc
push
add
addl
mov
test
or
lock
cmovo
xor
inc
add
or
push
sub
iret
add
xchg
xor
cmc
or
jb
push
lea
mov
cltd
cmp
add
fldcw
cmp
pop
add
ja
or
push
sbb
dec
clc
aas
outsb
dec
sub
out
sbb
push
sub
shlb
cmp
lods
fcomps
shll
outsl
xlat
rolb
lods
gs
push
movsl
push
and
lods
in
push
les
add
sbb
out
fldcw
mov
push
mov
cmp
mov
daa
add
xchg
dec
sbb
push
push
add
pop
mov
jmp
mov
lock
cmp
aam
mov
shll
add
scas
lods
cwtl
lock
inc
vcmpps
daa
out
cmp
ltr
jne
xor
les
add
aam
mov
lret
mov
jl
add
mov
aam
aaa
sub
in
out
xor
push
filds
jo
and
sbb
xchg
jecxz
hlt
sub
push
in
std
dec
pop
fmuls
jmp
mov
cld
dec
pop
imul
mov
push
test
inc
or
test
out
xor
jns
xor
iret
xor
je
dec
or
test
dec
xchg
add
rcl
cwtl
xchg
jp
xor
es
push
adc
sbb
add
add
add
jmp
push
mov
add
sub
shll
ja
addr16
faddl
cs
jae
mov
push
adc
imul
xchg
or
cmp
push
add
lods
arpl
aad
out
mov
int3
sub
test
mov
inc
mov
jae
dec
jle
icebp
cmp
cltd
sub
pop
les
add
fsts
or
es
add
cs
jecxz
adc
into
mov
loopne
inc
mov
add
stc
add
clc
dec
dec
icebp
sti
sub
lret
mov
pop
enter
lods
mov
pop
xchg
mov
or
add
dec
call
pop
insb
pop
lret
mov
add
lock
cmpsb
mov
cmp
xchg
inc
adc
cmpsb
jle
leave
addl
add
mov
add
add
jae
inc
aad
add
jp
insl
out
push
es
das
cmp
push
dec
out
leave
add
cmpsl
out
add
cltd
add
jno
or
rcrb
js
mov
jnp
insl
and
jmp
cmpsb
push
and
scas
mov
sub
insb
cli
outsl
adc
dec
mov
cld
popf
sti
nop
add
stos
int3
jno
xchg
dec
cli
cmp
add
lret
insl
add
mov
jmp
mov
fidivrs
popa
bound
es
push
aad
stc
in
add
xor
or
jnp
add
popf
insl
and
jge
pop
add
rolb
dec
or
aam
loop
jne
jb
inc
mov
xchg
pop
lret
and
testl
xor
sub
add
dec
hlt
gs
sbb
rolb
jns
sbb
mov
std
pushl
push
rorb
in
push
push
jl
div
in
mov
int
jnp
in
mov
lock
gs
add
and
add
mov
data16
and
hlt
test
fcmovbe
fcoml
mov
ffree
xor
xor
adc
in
fs
xor
add
in
pusha
and
xchg
inc
out
xchg
sbb
outsb
stos
cmpsl
inc
fs
add
jmpw
push
movsb
lcall
sbb
aad
nop
add
adc
mov
into
fisubs
lods
pop
push
in
mov
jecxz
jmp
loopne
stos
aas
cmp
add
add
push
pushl
fldt
xchg
push
fistpll
add
xlat
fstpt
inc
jno
xorb
or
push
lock
add
add
jle
insl
add
movsb
movsl
mov
add
mov
add
or
call
adc
adc
popa
fidivl
out
adc
addb
dec
pop
sbbb
mov
fsubrl
or
lahf
rol
mov
jno
jmp
scas
fwait
dec
xor
movsb
add
cmpsl
xor
scas
add
lds
sub
push
dec
xchg
push
add
add
insl
sub
jno
push
jno
add
icebp
dec
mov
mov
jmp
sub
xchg
fcoms
lds
stos
xor
xchg
es
lock
adc
cmc
push
out
js
jbe
ljmp
bound
aam
push
sbb
arpl
sbb
xchg
add
cmpsb
push
mov
add
cmp
xchg
cmp
loope
repnz
xchg
jl
rolb
mov
sub
pop
jle
and
mov
or
inc
clc
and
mov
in
mov
adcl
xchg
push
adc
shrb
sub
cmpsb
add
push
sbb
insl
mov
add
pop
addr16
push
xor
push
add
cs
das
dec
lret
test
inc
add
mov
pop
cs
mull
out
add
xor
inc
daa
add
ja
or
cmp
mov
adc
xor
lods
cld
daa
ds
add
testb
popa
cmp
in
out
and
jne
nop
dec
cmp
pop
inc
cmpb
push
inc
xor
cmp
cmp
mov
stc
mov
bound
into
or
std
add
insl
ror
movsl
in
or
repnz
or
xor
movsb
mull
lods
inc
in
cmp
xchg
add
add
iret
mov
push
lret
popf
add
inc
jb
fsubs
xchg
daa
ds
std
mov
push
jb
jae
icebp
shrl
jl
mov
push
add
bound
add
add
xor
das
sub
jp
imul
adc
lcall
xchg
sub
fld
aas
and
cmc
ret
rorl
push
push
pop
add
push
jp
lret
popf
mov
sbb
pop
xor
jb
or
sarb
ja
push
outsb
stos
pop
cld
add
insl
add
cmpsb
lret
xchg
add
imulb
fcom
jg
int3
xor
mov
cs
inc
stos
mov
add
add
sub
pop
les
dec
ja
add
adcl
shld
in
add
bound
dec
xchg
and
dec
and
test
jbe
fs
push
mov
and
add
sahf
push
add
push
xchg
sti
daa
adc
dec
rolb
mov
lods
lock
add
add
jg
imul
mov
add
adc
jp
add
stos
xlat
xchg
dec
dec
xchg
in
sub
shll
cmp
ret
xor
int3
jmp
cmc
cmp
pop
pop
fcoml
add
sti
push
dec
add
jo
mov
ret
lods
or
add
inc
push
jmp
ss
push
xchg
mov
lahf
sbb
jp
push
mulb
inc
test
sbb
jae
movsl
push
jns
inc
cld
push
xlat
scas
mov
or
dec
add
iret
cwtl
std
gs
sub
icebp
add
shrl
add
inc
jnp
jne,pt
aas
into
stos
push
fdivrl
add
ret
lret
insl
sub
nop
lods
cmp
in
scas
mov
mov
jo
mov
push
mov
movsb
mov
add
fldl
add
popl
add
loope
and
sub
addr16
jns
lret
mull
stos
adc
repnz
add
jo
pusha
xchg
popf
add
dec
xor
sub
mov
xor
mov
jg
add
sub
fcompl
scas
inc
mov
push
pop
insl
jns
lea
mov
adc
rol
or
or
and
sbbl
clc
je
out
push
out
add
in
add
std
add
jg
icebp
sub
movsb
push
mov
sbb
sbb
mov
push
xor
inc
cld
in
inc
aaa
aam
enter
mov
loopne
add
leave
fdiv
add
outsb
enter
add
xchg
iret
dec
shrb
sub
into
sub
xorb
jae
rcr
mov
fidivl
std
shrl
jle
pop
dec
jae
and
movsbl
sub
sahf
aam
jne
xlat
jo
les
pop
subb
icebp
cmpsb
test
or
xor
add
adc
push
add
out
pop
mov
popf
xor
add
bnd
mov
or
roll
ljmp
movsb
cmp
mov
cltd
enter
add
push
outsb
add
dec
push
mov
ss
js
inc
ljmp
inc
pop
and
jb
add
in
mov
mov
je
add
inc
dec
sbb
add
xor
insb
xchg
mov
scas
stos
ds
fcoms
xchg
add
mov
leave
xor
mov
add
xchg
cmp
outsb
add
inc
pop
daa
pop
out
hlt
or
imul
jle
pop
or
movsl
push
sbb
icebp
lret
or
fimull
loopne
add
sub
adc
outsl
enter
add
add
cmp
sub
ds
xor
std
mov
add
std
sahf
cmpsb
or
cmp
or
rcll
add
or
sbb
push
std
adc
iret
test
cmp
mov
or
lods
fwait
mov
neg
ret
mov
in
outsb
popa
aas
aam
xchg
out
lea
mov
cs
lret
jne
fistpll
inc
push
jne
repz
mov
add
mov
push
bound
andb
pop
jmp
enter
add
ja
cli
outsl
add
in
in
and
adc
movsl
add
ss
inc
or
jle
or
mov
dec
and
push
mov
jno
mov
xchg
dec
fdivrl
or
mov
jge
xor
cmp
inc
sub
stos
notb
add
add
cmp
mov
dec
pushf
icebp
mov
cmpsl
xchg
lods
clc
add
fnstenv
xor
inc
pop
push
aas
lea
mov
or
sti
xchg
mov
xor
fdivrs
aad
pop
fiadds
push
add
scas
outsb
cmpsb
add
sbb
pop
push
ret
or
mul
outsl
pcmpeqb
xchg
add
in
add
lcall
lds
out
push
cwtl
jmp
lahf
sub
jp
lret
xor
add
add
es
test
add
mov
aas
add
ss
mov
in
cmp
inc
and
adc
std
lahf
sub
lods
xchg
loope
push
lcall
cwtl
dec
ja
cld
add
dec
sahf
cmp
add
fisttpl
in
lods
das
addr16
jmp
dec
cmp
add
pop
add
add
das
es
sarb
cmc
pop
movsb
and
cmp
add
mov
xor
sahf
inc
add
mov
adc
movsb
jge
js
imul
jp
dec
push
sbb
push
pop
inc
stos
add
fldenv
cmpsl
idivl
jo
push
xlat
cld
jo
call
cmp
add
in
adc
pop
add
scas
ljmp
pop
jl
add
add
sbb
repz
jbe
add
or
mov
loopne
dec
add
aaa
sub
sti
outsl
add
and
dec
out
dec
loopne
push
push
push
add
loopne
inc
mov
dec
je
and
xlat
inc
sbb
decl
pop
mov
lahf
push
arpl
cltd
add
fsub
jle
dec
outsl
mov
add
xor
test
sub
pop
lods
push
mov
aad
jp
mov
and
dec
lret
testl
lret
dec
mov
cmc
ss
faddl
icebp
add
add
or
add
shlb
add
subb
adc
add
add
shl
adc
push
jg
jle
xor
add
lds
aad
push
or
lret
add
pop
pop
scas
add
sbb
cwtl
or
es
outsb
inc
data16
cltd
jge
iret
ds
repnz
add
lret
pop
mov
fwait
leave
es
and
xor
add
mov
push
add
adc
inc
mov
xor
dec
aas
inc
mov
test
xchg
sti
xchg
xchg
push
jmp
pop
mov
insb
dec
lea
lahf
cli
jp
addb
jge
xor
jle
xor
and
repz
add
jne
scas
lret
out
push
or
out
add
cmpsl
rorl
jns
in
and
fcmovnu
mov
add
xor
cmp
roll
jge
flds
in
inc
add
xorb
xor
add
test
popl
xchg
dec
lods
stos
jl
add
das
jne
loopne
mov
addl
fmuls
ja
sbb
dec
cwtl
jo
shlb
sbb
jl
faddl
mov
jne
adc
pop
sub
push
lea
add
xchg
dec
fdivrs
sar
cmp
add
in
sub
xchg
lret
and
insb
add
ret
mov
and
add
notb
lods
ret
sahf
adc
cmp
push
add
cmpsb
std
add
popa
shll
das
std
aad
push
mov
icebp
jecxz
filds
sub
pop
repnz
sub
sar
icebp
adc
sub
sub
sar
test
pop
pusha
xor
stos
add
add
xor
stos
sbb
divb
ja
movl
data16
push
add
add
cs
push
add
add
in
imull
movsl
inc
push
adc
mov
pushf
sbb
or
daa
push
fdivl
add
pusha
ss
push
pop
repnz
or
leave
xchg
and
xchg
aaa
rorb
in
or
add
jbe
adc
fisubrl
insb
outsb
add
lock
or
inc
dec
add
enter
dec
mov
sbb
add
dec
stos
inc
add
enter
xchg
push
sub
add
add
and
add
xchg
push
push
sub
stos
test
in
insb
add
add
sbb
ljmp
jnp
cmpsl
add
cmp
add
cmp
inc
imull
fistpll
xor
mov
lret
push
out
or
pop
mov
ljmp
or
pop
add
out
gs
mov
jae
cmp
or
test
jg
roll
push
add
ljmp
adc
push
push
aas
xor
test
lret
xor
inc
or
scas
jge
adc
inc
fstpt
out
mov
push
sbb
lret
aas
orb
adc
jae
imul
jb
xchg
mov
sbb
cmp
mov
gs
add
data16
test
divl
cs
add
shrb
ljmp
add
pop
mov
andl
out
jns
jecxz
mov
dec
dec
lods
lods
or
add
fwait
and
add
jae
jb
jecxz
sbb
add
dec
or
imul
xor
xchg
sbbb
mov
jg
shlb
cmc
xor
mov
bound
mov
pop
repz
jns
sub
sbb
inc
sub
mov
push
std
pop
pop
movsl
add
add
lods
pop
push
fstl
sar
stos
pop
loope
int3
push
mov
or
add
fldcw
add
popa
cmp
push
addl
enter
mov
fnstcw
ss
aaa
inc
les
and
add
add
dec
push
xchg
xor
push
es
in
cmc
pop
mov
jno
add
add
inc
dec
xor
aaa
popf
imul
xchg
ljmp
mov
add
xchg
mov
or
daa
out
pop
pop
cmpsb
sahf
jbe
adc
mov
mov
fidivrs
xchg
inc
cld
sahf
loopne
in
mov
test
jo
clc
add
cmp
mov
sub
dec
or
cmp
sub
js
cmp
xchg
sub
mov
loopne
outsb
or
mov
push
into
add
add
add
aam
add
push
cli
icebp
dec
aam
lock
frstor
shl
repz
leave
add
scas
imul
xchg
lods
cwtl
or
mov
add
add
xor
add
jmp
jbe
mov
daa
es
add
pop
add
sub
push
mov
iret
lock
mov
pusha
stos
and
xor
iret
rolb
decl
out
mov
je
dec
add
cmp
clc
mov
push
andl
inc
mov
loope
and
xor
inc
add
lret
test
mov
sbb
insb
or
mov
dec
push
mov
inc
jns
push
sbb
out
xor
cmp
test
mov
jl
pop
add
add
in
xchg
and
out
mov
xor
xor
add
rcrl
lret
fidivl
test
jg
add
xor
mov
jmp
or
add
and
cld
cmp
add
je
inc
lret
mov
gs
jbe
andb
xchg
aas
mov
arpl
push
add
dec
stc
insb
dec
test
sbb
clc
add
ret
lods
in
fadds
imul
cs
add
adcl
mov
stos
sbb
cmpsb
adc
add
xor
movsl
shlb
mov
cmp
sahf
sbb
testl
or
repz
push
cmpb
jl
jle
mov
cmp
adc
mov
adc
add
add
push
in
cmpsb
insb
and
aad
sub
pop
add
loop
inc
add
add
cmp
popa
add
add
add
sbb
icebp
push
out
shld
push
add
fs
iret
add
jl
movsl
add
lcall
push
mov
cli
cwtl
pop
pop
ret
rolb
pop
add
ja
adc
mov
call
or
jae
leave
sti
movsl
rolb
dec
incb
clc
lcall
mov
cmp
jecxz
insb
pop
mov
daa
add
daa
push
inc
cwtl
out
mov
adc
aad
add
in
pop
push
or
jg
popa
rcrb
add
scas
cwtl
loope
sbb
mov
aaa
sbb
ja
add
jne
shll
or
xchg
out
add
dec
jae
stc
push
orb
push
xchg
jg
sub
int3
xor
movsb
nop
pushf
addr16
mov
dec
add
pop
pop
xor
jmp
mov
push
adc
pop
sub
fiaddl
cmpsb
add
pop
inc
or
clc
add
iret
sub
sub
mov
or
xor
mov
test
push
add
xor
sub
cmp
lcall
aaa
flds
imul
sbb
loope
leave
cmc
pop
adc
cmp
pop
adc
rcrb
andl
add
add
clc
mov
inc
aaa
inc
dec
fisubl
out
add
lea
js
pop
inc
xchg
fnstenv
insl
addr16
add
cmp
enter
xor
inc
pop
add
add
adc
and
add
cmp
loop
leave
add
out
cmp
sbb
cmp
mov
sbb
push
xor
arpl
cmp
jp
mov
mov
aas
inc
shlb
jp
push
addl
insb
adc
mov
or
lea
int
int3
add
sbb
pusha
mov
ljmp
push
sbb
icebp
sbb
je
iret
ds
pop
add
outsl
outsl
lods
xchg
mov
dec
add
jl
mov
and
pusha
add
jl
stos
xor
popa
jns
push
jo
add
imulb
arpl
and
mov
add
adc
sub
add
fmulp
mov
in
outsl
dec
adc
add
dec
popl
mov
cwtl
cwtl
adc
ja
ret
out
sub
or
xlat
dec
push
pop
insb
jp
adcl
gs
xchg
gs
dec
fs
push
cmp
add
push
inc
addr16
sbb
fnsave
fs
and
ljmp
add
enter
xchg
out
add
push
jae
inc
lds
xor
mov
mov
mov
mov
add
pusha
inc
push
lret
or
add
das
xor
push
outsb
add
mov
jno
dec
cmp
mov
add
addb
dec
out
frstor
lcall
add
pop
pop
sbb
jecxz
cld
add
push
mov
add
mov
xor
andb
lods
das
js
or
add
fcoml
mov
inc
inc
xchg
es
int
jbe
dec
inc
les
add
sbbb
push
loope
xchg
sub
add
ja
loope
mov
rorl
add
pop
lcall
cmpsb
jle
add
int
add
xchg
jo
cmp
add
cmp
gs
iret
push
in
mov
or
cmp
dec
outsb
sbb
bnd
pop
aas
jle
xchg
sti
rol
jecxz
bound
bound
adc
push
add
dec
sub
and
add
lds
and
pusha
pushf
mov
fs
in
out
sar
push
jg
push
sti
lds
stos
add
dec
addr16
inc
mov
push
dec
ja
sahf
aas
mov
mov
stc
push
or
add
nop
addb
cmpsl
add
sbb
sub
push
add
and
cmpb
add
mov
lock
or
test
or
jge
cs
lret
fstpl
mov
cld
add
add
mov
ret
jp
inc
mov
jno
test
xchg
ss
mov
testl
flds
sbb
mov
mov
movsb
cmp
call
in
cld
mov
add
add
lods
add
add
pop
add
sarl
add
rorb
leave
sub
adc
insl
cmpb
add
add
push
sbb
add
cmp
pop
cmp
lea
cmp
add
dec
sbb
mov
lods
scas
loop
cvtps2pi
jno
xchg
sbb
cmp
lods
lods
add
add
mov
mov
imul
mov
lret
inc
mov
mov
pusha
ds
mov
push
lcall
or
test
cs
dec
pop
mov
addr16
dec
add
mov
jae
inc
nop
dec
addr16
inc
faddl
and
rcl
adc
mov
xchg
add
mov
cmp
into
push
xor
xor
add
leave
das
jnp
mov
mov
sbb
pop
pop
lret
add
int
mov
add
cli
sub
adc
add
out
dec
cmpsb
movl
sub
movb
mov
repz
dec
movsl
mov
push
inc
xor
shll
mov
out
mov
loopne
add
inc
fcmovu
add
jae
add
gs
insl
add
imul
out
scas
xor
add
cmp
ljmp
test
add
mov
faddl
cmp
popl
jbe
hlt
bound
xor
pop
fisubrl
imul
add
sub
add
or
xor
adc
cltd
sarb
movsb
adc
add
xor
sbb
sub
jae
pushf
mov
mov
push
dec
jp
and
addr16
xchg
and
add
add
cli
fs
add
mov
inc
jg
and
adc
dec
rep
js
fiadds
mov
bound
jl
xchg
sti
aam
popa
pop
movl
lcall
leave
pop
jne
cmpsl
add
mov
cmp
and
jmp
ljmp
vmaxpd
add
dec
pop
popf
or
mov
sub
pushf
test
aam
xchg
sbb
out
pop
or
into
ljmp
add
out
sub
pop
insl
sti
mov
stos
ja
push
cmpsl
dec
cmp
jne
int
add
push
xchg
push
int3
sub
shr
punpcklwd
ds
add
out
mov
mov
aas
mov
inc
cmpsl
roll
xor
sub
push
mov
je
mov
scas
sahf
ror
pop
jnp
sub
push
icebp
mov
cmp
dec
push
andl
jb
push
cmpsl
imul
add
adc
xor
fwait
inc
mov
xor
lret
lds
add
push
xor
xchg
jno
cwtl
addl
mov
shll
pushf
sahf
stos
mov
mov
bound
add
mov
sti
out
icebp
stos
jo
sbb
pop
mov
mov
incb
aam
mov
shrl
jecxz
mov
loope
lods
push
cmpsl
and
sub
push
jle
pop
add
xchg
dec
fs
ret
les
dec
sub
insb
aad
push
call
add
int
pop
mov
xor
dec
cli
add
insl
inc
mull
sbb
adc
jb
add
mov
add
dec
gs
cmpsl
pushf
in
xchg
push
cld
and
testl
filds
in
cltd
rcrl
xor
mov
and
pop
mov
mul
mov
add
and
icebp
insb
push
jnp
and
dec
fs
inc
push
mov
arpl
mov
pop
fidivrl
fiaddl
add
repnz
jp
daa
jg
pushf
mov
ret
add
and
mov
add
sub
mov
sahf
pop
out
add
push
push
pop
inc
and
mov
push
loopne
in
fiaddl
iret
inc
and
std
cwtl
out
add
xchg
cmp
in
mov
lds
es
and
mov
mov
cmpsl
popf
xor
mov
jb
add
add
mov
out
movl
inc
add
add
mov
pop
fildl
leave
push
cli
or
dec
add
out
aas
push
xchg
fldl
adc
dec
loopne
sbb
jp
push
cltd
scas
push
dec
mov
mov
pop
mov
mov
lock
jp
add
inc
jnp
sbb
xchg
insb
sbb
pop
lods
es
cmp
cmpsb
sbb
push
add
push
jg
mov
xchg
add
add
push
pop
add
pop
cli
repz
mov
int3
xor
aaa
lds
pop
add
or
int
jle
ja
pop
aas
jl
xor
mul
add
adc
or
mov
add
cmc
and
cli
stc
add
jmp
add
aad
cmpb
jns
add
pop
add
cmc
push
xchg
jg
adc
lcall
out
xchg
mov
add
into
es
fcmovbe
cli
add
testb
add
shl
add
lods
pushl
jg
std
mov
cmp
std
pop
push
sub
scas
sbb
insl
push
cmp
jns
loope
add
pop
pop
jge
adc
repnz
cli
lret
cmp
cmpsb
mov
cmpsb
testl
xchg
add
inc
mov
pop
scas
ja
xchg
inc
aas
ljmp
jo
cmp
add
daa
mov
sbb
ret
xchg
sti
insb
add
scas
or
xchg
movsl
dec
or
inc
add
push
mov
mov
xchg
mov
pop
cmp
ss
arpl
mov
push
sub
aaa
imul
mov
mov
cmp
mov
add
stc
notb
jb
mov
movsl
addr16
add
mov
add
sahf
fs
lods
mov
js
nopl
imul
jo
daa
insb
add
orb
out
shr
jg
mov
dec
aaa
cmp
dec
add
inc
das
mov
sub
fdiv
in
xor
cwtl
ret
in
adc
cmp
std
loope
jne
cmp
cwtl
sbb
testl
mov
inc
pop
mulb
inc
push
mov
shrl
int3
sub
cmp
in
add
movsb
sub
xor
insb
add
bound
loope
orb
aas
rcrb
out
xor
add
fidivrl
dec
test
popa
pop
adc
xchg
add
and
xor
pop
dec
int3
aas
and
fisttpl
divb
push
lds
and
add
mov
clc
mov
add
inc
add
leave
int
xor
ret
sbb
jle
out
adc
jns
add
adc
pop
dec
in
add
ja
pop
mov
orl
add
and
mov
jge
cltd
jl
xchg
push
mov
mov
sahf
fs
sti
jle
dec
jae
push
push
mov
add
xchg
mov
repz
cmp
ljmp
push
inc
pop
ret
iret
shrl
inc
cmp
add
subl
and
sbb
cmp
sbb
cmp
mov
add
mov
or
clc
xor
int3
add
filds
sbb
dec
insl
mov
mov
cmpsb
int
add
xchg
push
mov
mov
xchg
int3
dec
jmp
stos
inc
ljmp
shlb
pop
mov
divb
sub
aas
dec
and
add
cli
mov
les
push
sub
cs
add
mov
xchg
dec
test
add
dec
add
mov
add
dec
mov
repz
push
adc
sbb
push
ss
add
popl
lods
shrl
cmpsb
pushf
movl
pop
addr16
adc
lret
dec
out
aaa
ljmp
adc
add
add
out
repnz
push
add
add
stos
inc
std
xchg
stos
mov
pop
popa
push
inc
jo
adc
cmp
shll
and
cmp
lret
popf
add
mov
or
sbb
test
test
add
dec
jmp
pusha
or
loope
inc
repnz
decb
cli
scas
cmpsl
cmp
popf
add
push
and
movsl
jp
sub
fstps
stos
in
out
pop
add
cmp
lods
inc
ret
push
push
popl
mov
aam
stc
add
icebp
mov
adcl
cltd
cltd
xchg
push
fistpll
and
inc
call
sub
add
jg
adc
pop
xor
sub
push
in
inc
mov
mov
sahf
push
cmpsl
dec
jmp
push
add
es
ljmp
add
add
das
mov
mov
out
les
cli
aad
push
scas
sbb
add
addr16
mov
mov
movsl
add
ja
mov
jmp
mov
add
data16
xchg
add
add
into
jg
and
andb
dec
push
add
cmpb
inc
sbb
movsb
add
imul
addb
lods
add
int
push
pop
push
add
mov
add
pushf
sub
dec
add
out
add
sarl
jnp
sbb
lock
inc
sbb
add
add
scas
inc
loope
add
test
shrl
xchg
add
sub
pop
insb
add
jnp
lret
icebp
sarl
arpl
mov
adc
dec
enter
roll
dec
and
pop
push
add
xor
fs
lods
add
add
mov
or
xchg
lea
js
sub
pop
add
in
push
pop
add
imul
pop
aas
pop
rcrl
orl
inc
fisubl
mov
jle
or
xor
dec
arpl
imul
or
add
inc
dec
jae
sub
cmp
lcall
cmp
lods
hlt
cmpsl
or
mov
cmpsb
push
lea
add
jae
mov
and
dec
add
cmp
enter
leave
clc
rorb
cli
cli
scas
int
add
mov
add
add
popf
pop
xlat
and
jge
mov
sbb
lds
add
mov
mov
shrb
cwtl
or
and
jns
add
and
mov
add
lret
xchg
add
dec
les
fdivs
add
push
fisttps
mov
dec
push
and
xor
push
add
add
mov
or
add
and
repnz
add
push
cltd
add
scas
and
daa
xchg
add
fiadds
push
mov
mov
adc
lods
mov
push
sahf
jne
fs
int
adc
adc
dec
inc
mov
mov
or
mov
jb
jl
mov
sbb
js
cmp
daa
pop
add
mov
lea
mov
insl
iret
daa
fs
add
push
adc
gs
imul
adc
inc
add
push
jb
lds
mov
add
int3
lds
xchg
fdivrl
add
fisubrl
addr16
add
rcrb
clc
add
xor
mov
in
cmp
orl
test
decl
jle
push
add
add
stc
add
pop
xor
nop
mov
jno
xchg
push
out
push
icebp
add
loop
in
shlb
add
imul
jne
add
push
clc
insl
dec
and
add
mov
adc
mov
jp
mov
outsl
mov
inc
inc
jns
mov
sbb
gs
sahf
or
and
sub
subb
mov
andl
pop
jecxz
sbb
jmp
jecxz
addr16
cmp
fldl
push
pop
cmp
fadds
pop
add
pop
lret
icebp
jbe
imul
mov
cmpsl
xchg
aaa
enter
add
add
scas
add
pop
adc
pop
xchg
test
add
clc
fildll
add
pop
int
fucomp
call
add
js
in
ljmp
mov
in
sbb
add
out
es
xor
pusha
add
icebp
jnp
cld
dec
fsubrl
bound
add
add
jg
ja
pop
iret
repz
movb
mov
data16
mov
mov
xchg
add
xor
pop
sbb
push
inc
add
xchg
ja
fstps
in
lock
jle
jne
lods
xchg
dec
cli
lahf
cld
push
and
pop
and
add
out
pushf
stos
push
or
mov
andb
js
xchg
jge
hlt
jo
ret
mov
out
jb
data16
cmp
cmovle
out
ret
test
add
repz
add
mov
sbb
or
mov
sub
in
test
test
mov
testl
cltd
add
pop
push
inc
jno
test
sub
jnp
push
in
jle
lahf
add
fistl
lods
add
fldcw
cs
push
xor
add
or
lock
out
mov
rorl
jg
in
cmpsl
in
push
xor
xchg
sbb
xchg
add
add
daa
nop
loop
inc
add
inc
fwait
inc
jg
shrb
dec
sub
inc
add
psubsw
add
sub
dec
or
in
jnp
xchg
dec
add
add
pop
popf
sti
sbb
mov
cmp
or
mov
push
xor
or
pushf
data16
sbb
push
xchg
sbb
adc
mov
mov
je
add
add
pop
sub
lahf
xor
sahf
add
mov
push
scas
sbb
xor
test
add
mov
fdivrs
xchg
sbbl
sub
pop
xlat
add
add
add
ljmp
adc
xchg
mov
add
in
and
jbe
ret
out
lret
xchg
and
pop
pop
and
jp
pop
data16
loope
mov
lock
pop
jne
movsl
cmp
push
dec
clc
add
mov
xor
mov
aas
xor
scas
in
inc
fidivrl
jl
cli
and
lds
lcall
or
push
out
dec
mov
dec
movsb
push
xchg
inc
addl
sub
js
push
mov
add
insl
fimull
iret
add
rcrb
mov
jmp
lcall
rclb
pop
cmp
jnp
mov
in
push
icebp
jp
enter
gs
xchg
xchg
in
xchg
mov
int3
int3
mov
fcoms
or
sahf
sarl
arpl
pop
cs
xchg
and
add
add
and
and
add
cmpsb
add
xor
fnstsw
pop
aad
inc
cmpsl
add
push
jo
push
jmp
pop
pop
mov
in
add
int
add
pop
sbb
les
mov
mov
call
bound
xor
sbb
ja
rorb
mov
ret
lcall
pop
adc
mov
mov
mov
sub
mov
add
add
cmp
xor
and
popf
sub
adc
fldt
inc
push
sub
and
int3
pushf
push
nop
mov
test
jl
add
aas
or
add
std
hlt
cmp
dec
gs
add
mov
add
jp
cmp
testl
ja
add
fdivl
xor
xor
popl
mov
mov
lret
lcall
fildl
std
sbb
add
jne
in
add
mov
ret
inc
or
ret
push
movl
inc
add
dec
dec
sub
ljmp
and
inc
lahf
popf
aas
adc
clc
xor
xchg
mov
ffreep
sub
jb
sti
int3
push
mov
fs
and
stos
jbe
movsb
dec
or
out
cltd
popf
and
sub
scas
loope
mov
lret
pusha
adc
rcl
add
test
xchg
cmp
mov
push
sub
jl
addr16
rorl
repnz
add
cwtl
mov
and
out
sbb
sbb
int
and
push
imul
and
loop
dec
lds
jns
in
in
movsb
jecxz
fsubrl
lock
fcmovu
push
or
movsl
push
lods
adc
enter
push
or
cmp
mov
fcoms
jb
cli
add
xor
repnz
fdivs
in
not
enter
je
popl
adc
sub
dec
push
in
add
add
xor
push
cmpsl
add
insb
jns
idivb
push
jb
scas
insb
cmp
shr
sub
sahf
movsb
cld
add
adc
add
shl
lcall
mov
ss
xor
aad
lock
add
add
mov
lcall
add
add
add
adc
lcall
ret
add
adc
pop
clc
push
mov
popa
ja
and
fildl
or
push
mov
jnp
in
jge
insb
add
mov
dec
pop
inc
xor
arpl
jo
and
les
cmp
das
adc
mov
cmc
lds
loopne
es
cs
ret
add
lods
jo
xchg
add
jp
push
jnp
ss
notl
test
mov
inc
aam
ds
lahf
jle
sub
inc
cmp
pop
push
cld
outsb
ja
ficoms
sahf
mov
xor
sub
aad
fsubs
cmpsb
xor
icebp
jne
xlat
ljmp
push
int3
mov
adc
pop
sub
sub
mov
push
daa
adc
sub
add
or
add
mov
or
loop
pop
add
mov
jnp
outsb
or
add
loop
cli
add
jbe
in
rolb
xor
pop
add
rol
ljmp
add
mov
mov
xchg
icebp
ljmp
sub
out
push
test
or
into
push
pop
adc
add
add
push
aam
or
push
rcrl
jns
fmuls
cmp
add
push
je
mov
jbe
push
ret
stos
and
add
imull
add
rcll
popf
cli
test
mov
mov
dec
fsubr
dec
icebp
add
sub
mov
pop
gs
mov
out
dec
mov
addr16
sbb
add
lret
mov
add
add
cmpl
push
mov
jle
mov
sbb
and
call
mov
lret
xor
cs
adc
ret
sti
add
jbe
pushf
pop
add
cmp
push
dec
and
sbb
dec
pop
in
out
lds
fidivs
loope
imul
movsb
add
add
out
jg
push
inc
nop
and
pushf
add
aad
pusha
rorl
sub
dec
cli
arpl
std
pop
mov
add
je
leave
cmp
pop
lock
lods
mov
adc
pop
or
ficomps
push
jo
cmp
sbb
insl
jb
mov
lret
dec
mov
arpl
add
js
scas
add
sub
add
add
popa
dec
add
xchg
add
push
sub
into
xchg
imul
add
xchg
cli
dec
jae
fadds
jnp
jno
add
adc
cmp
iret
lcall
insl
or
mov
stc
add
mov
scas
ret
cmp
imul
sarl
sub
xor
sub
dec
sub
sti
mov
cmpsb
cmpsb
dec
or
xchg
or
daa
in
jns
movsl
pusha
cmp
add
dec
dec
adc
push
pop
cmp
jne
cmp
add
xorl
cmp
lods
mov
test
dec
outsb
jbe
or
dec
adc
pop
xchg
push
lea
test
ljmp
jge
pop
cmpsb
test
ds
mov
add
cmp
test
rorb
addr16
rcll
testb
and
add
pop
inc
fadds
inc
or
add
add
add
jl
push
into
xor
data16
call
lock
ds
push
dec
sub
clc
lock
dec
lret
mov
push
jl
ret
mov
add
sbb
loop
push
mov
add
lret
dec
test
vpaddw
mov
in
xchg
lods
in
add
sbb
lret
repnz
add
jg
adc
cs
xchg
pushf
xchg
lock
icebp
mov
add
inc
push
adc
jmp
adc
repz
pop
dec
add
pop
int3
add
xor
add
ja
movsb
pop
add
xor
in
aam
mov
adc
lret
pushf
dec
pop
mov
fsts
sarb
pop
xor
jg
cmp
into
add
jp
add
leave
sub
aas
mov
add
lock
inc
cmp
add
xor
and
popa
cmp
lret
add
dec
mov
sub
mov
out
mov
enter
xchg
cmp
sahf
call
outsb
mov
mov
push
sub
call
orb
stos
xchg
rolb
sub
cmp
sub
test
ret
jge
add
fidivrs
xchg
das
repnz
icebp
bound
adc
mov
or
repnz
mov
push
mov
jno
out
jno
add
sbb
pop
xchg
pop
add
adc
mov
push
xor
and
in
and
fwait
out
mov
sub
jne
adc
repnz
test
lcall
mov
cli
insb
or
ss
or
lret
jl
fs
rcr
in
mov
pop
jecxz
das
ja
sti
lahf
scas
add
je
in
cltd
mov
mov
lahf
inc
push
aaa
les
out
mov
inc
dec
insb
test
add
in
add
sbb
rorb
add
mov
push
and
shrb
xchg
and
add
xor
movsl
push
cs
loop
insb
xchg
fsubrp
mov
cs
clc
sbb
call
das
gs
add
add
pop
stos
out
lret
add
fcoms
ljmp
mov
clc
or
leave
or
dec
and
std
dec
sub
mov
xor
add
add
or
aas
scas
shrl
pop
jns
or
xor
dec
pop
xchg
add
shlb
stos
daa
movsb
test
sub
add
and
lcall
loop
sarb
cmpsl
push
cld
xor
dec
add
cmp
sbb
add
pop
in
mov
aam
dec
push
loop
shr
add
add
inc
ret
mov
or
cwtl
add
fsubp
lock
cmc
shrl
hlt
ja
push
imul
mov
pop
movsb
iret
cwtl
xor
lea
int3
call
add
push
add
fistpl
jno
out
push
mov
push
sbb
xchg
or
mov
stos
add
orb
push
testl
sbb
inc
xchg
add
sbb
call
xchg
ja
cld
mov
inc
and
in
sbb
add
rol
les
pop
notl
push
add
fldl
sbb
fwait
push
call
dec
xchg
add
and
test
daa
jle
pop
add
add
add
and
xor
inc
loop
popa
outsl
dec
jne
add
lock
xor
sbb
pop
mov
xor
jmp
cmp
daa
mov
mov
in
loope
rorb
fdivs
inc
jl
mov
xor
pop
push
dec
push
jge
lret
int
add
push
arpl
fnsave
cld
xor
insb
mov
mov
add
add
mov
add
add
aas
add
xchg
xor
ss
jb
xchg
xchg
mov
dec
xchg
sub
sarb
cs
add
les
add
push
inc
push
xor
adc
push
cmp
xchg
push
push
sub
mov
and
cmp
fnsave
mov
out
arpl
add
add
dec
pop
mov
scas
flds
push
adc
loop
mov
ret
dec
std
adc
rolb
sub
enter
call
and
add
clc
ljmp
ficomps
and
bnd
add
ds
add
push
imul
adc
mov
outsb
enter
outsb
pop
or
dec
pop
dec
ret
cmovge
push
jmp
sbb
add
int
fnstsw
mov
dec
push
pushf
loop
rclb
scas
ss
sub
lea
or
in
repz
nop
and
jecxz
mov
or
jl
lahf
xchg
mov
mov
xchg
add
sbb
loop
cli
inc
mov
jp
icebp
test
mov
int
imul
add
add
mov
xor
fstps
xchg
jne
jmp
lahf
fidivrl
push
cmpsb
mov
add
dec
dec
jne
push
mov
xchg
lea
dec
gs
push
inc
add
pop
sub
add
jmp
sub
pop
adc
jmp
jge
pop
clc
add
std
das
cmp
add
aad
inc
lds
pop
les
push
adc
and
fxtract
lret
or
lret
enter
jns
and
cmpsl
inc
sarb
enter
sub
imul
sbb
cmp
adc
fstl
dec
mov
in
js
incb
add
pop
xor
cltd
push
ljmp
jmp
mov
add
ficompl
in
imul
ret
aaa
pop
clc
push
add
mov
not
sarb
add
lret
add
push
dec
dec
in
pop
add
or
out
jge
add
add
pop
dec
add
jns,pn
mov
add
sbb
cmpsb
les
lods
test
repnz
test
adc
sub
xchg
sub
lret
mov
mov
add
pop
xchg
int3
dec
sbb
mov
daa
out
dec
nop
add
mov
add
lods
add
dec
dec
push
in
gs
push
lret
jmp
int
gs
add
in
outsb
xchg
jae
cwtl
dec
ret
jmp
ret
fucomp
lret
fbld
adc
or
add
and
fldl
or
adc
mov
test
fsubrs
jmp
push
add
pop
push
aad
stc
data16
jno
xor
adc
add
add
adc
or
shlb
lldt
emms
mov
add
movsb
cmpsb
pushf
xchg
push
add
mov
add
idivl
xor
pop
jl
je
dec
adc
push
test
arpl
xor
sbb
imul
call
sbb
or
add
out
xchg
clc
jp
push
ret
add
sbb
xchg
bound
sub
mov
xor
in
jnp
in
add
scas
stos
aad
jb
sahf
fcmovnb
pop
das
shll
mov
mov
stos
jns
lret
out
in
inc
sub
push
popl
les
jne
rcr
jmp
push
cmp
cmc
imul
or
jo
int3
jae
ljmp
bound
dec
push
sbb
mov
xchg
push
aas
add
sub
test
aaa
dec
push
adc
inc
push
jecxz
add
mov
stos
push
outsl
add
add
pop
popa
push
arpl
sbb
sbb
lahf
add
cmp
pop
mov
pop
pop
jns
xchg
mov
inc
fsts
cmp
xchg
imulb
pusha
call
aaa
outsb
mov
in
cmp
aad
lret
bnd
add
jp
stos
jo
mov
jp
pop
aad
jg
cmp
out
cmp
inc
cs
jle
jne
ljmp
sbb
enter
mov
inc
inc
push
inc
repnz
push
cs
add
pop
int
icebp
loopne
fidivrl
add
jne
and
int
pop
xchg
cmp
daa
dec
add
add
adc
repz
insb
jno
js
sub
std
fisubl
push
and
mov
add
pop
jbe
dec
outsb
inc
sbb
pop
add
mov
xlat
dec
add
stos
push
add
bound
add
mov
add
add
lea
xchg
cmp
pop
sub
adc
xor
push
add
insb
dec
jmp
add
add
pop
push
inc
aas
push
scas
in
aas
rorb
mov
test
jl
das
xchg
push
and
adc
in
mov
into
ljmp
ret
iret
jg
pop
aad
mov
test
shl
xchg
clc
bound
adc
test
add
icebp
outsl
lods
jl
dec
fmuls
add
jnp
popl
addl
add
dec
enter
push
ret
test
push
cmp
jle
add
add
jae
dec
sbb
xchg
xlat
add
sbb
push
icebp
add
cmpsl
call
imul
add
cmp
mov
movsl
adc
dec
mov
fidivs
pop
mov
sbb
mov
jmp
xchg
movsl
dec
mov
or
add
mov
fs
ja
add
int3
jmp
mov
icebp
stc
xchg
movsb
mov
push
mov
xchg
and
sti
test
mov
popf
adc
pop
stos
pop
inc
xor
jbe
testl
inc
add
ss
add
sti
push
add
sub
push
fstpl
or
sub
jecxz
add
fwait
jp
sbb
inc
xchg
inc
add
popa
xor
out
sub
lahf
xchg
and
ret
jp
mov
outsb
cmp
dec
adc
js
cltd
flds
inc
das
insl
sarl
add
add
push
outsl
jl
cld
xorl
add
insb
jne
enter
dec
push
lret
es
lock
mov
stc
outsb
addr16
outsb
mov
ret
rcll
mov
sti
and
add
xchg
jnp
leave
lret
dec
push
sar
mov
add
mov
sub
add
test
add
or
cmpl
add
cmpsl
popa
adc
imul
push
sbb
js
mov
jp
pop
mov
jnp
mov
mov
pusha
popl
dec
add
jns
xchg
ljmp
in
sbb
add
add
repz
ds
ja
add
popa
pop
mov
int
es
in
xchg
add
cmpsl
add
das
out
adc
js
push
sbb
inc
ffreep
leave
lods
sarb
push
mov
fldenv
add
push
add
inc
pop
test
push
add
roll
pop
jg
dec
adc
fst
add
inc
test
addl
lea
shlb
sub
push
mov
test
inc
add
cwtl
jbe
add
std
push
int
aaa
xchg
inc
mov
mov
cmp
cmp
inc
std
mov
hlt
lahf
jb
mov
pop
add
lds
cli
cmc
add
pop
stc
int3
push
mov
pop
push
mov
xchg
jl
mov
inc
mov
sub
mov
test
aam
dec
imul
xchg
add
sub
bound
pop
and
cmp
repnz
sub
lcall
imul
pop
sahf
and
push
jmp
mov
lahf
push
push
xlat
sub
xchg
stos
cs
xchg
aas
add
xor
gs
add
sbb
inc
cmpsb
xor
mov
mov
stos
mov
ret
jl
mov
push
adc
lods
cltd
add
mov
js
jg
outsl
xchg
push
mov
mov
dec
jo
scas
add
adc
jnp
push
mov
and
add
lret
push
stos
inc
hlt
lods
jecxz
aad
add
jnp
adcb
mov
mov
add
and
arpl
pop
add
push
bound
sar
pushf
aam
inc
jp
nop
add
rcrl
pop
loop
add
add
repz
out
in
repz
add
add
in
add
sub
mov
pop
test
dec
aam
add
and
push
ret
aam
movsl
sarb
aad
sbb
sub
push
and
pop
ret
sub
loopne
mov
aad
sahf
add
ret
ret
fwait
cli
xor
adc
add
push
pop
mov
or
dec
push
fsubrs
xor
ret
sbb
or
les
pop
push
add
sub
mov
jnp
cli
rolb
fcompl
add
lods
add
push
fldenv
add
mov
pop
pop
or
xor
push
cmp
daa
pop
test
pop
fisttpll
cmpsl
push
es
rclb
sbbb
and
scas
movsl
sub
xor
jo
inc
popa
push
sub
es
adc
mov
pop
dec
mov
mov
cmpsl
lock
add
cmpsl
dec
xor
add
dec
je
mov
cld
mov
lds
out
mov
pop
sub
add
fs
xchg
or
stos
xor
js
jge
add
add
inc
or
gs
scas
jp
add
dec
das
test
testl
aas
pop
sti
mov
test
es
add
loopne
pop
jge
je
mov
pop
repz
das
or
test
into
pop
sti
jae
jnp
xchg
jge
mov
jecxz
out
add
addb
test
mov
enter
sti
add
cmp
daa
sbb
push
mov
mov
cmc
mov
sbbb
and
mov
xchg
jb
bound
adc
add
cmpsl
mov
push
je
dec
cmp
xor
cmpsl
push
or
clc
push
out
add
jmp
subb
push
inc
stos
dec
mov
int3
dec
pop
add
inc
add
mov
ficoms
cs
jmp
lret
adc
leave
outsl
push
ret
xor
shr
cmpsb
adc
adc
daa
mov
cmp
inc
inc
les
push
jmp
outsl
outsl
adc
enter
leave
out
cli
pop
ja
sub
lods
mov
add
pop
lret
jecxz
and
es
nop
mov
bound
add
shr
add
cmp
mov
and
add
add
inc
add
mov
cltd
pop
jmp
aad
push
xchg
push
mov
enter
sub
xchg
fwait
and
xchg
inc
pusha
adc
mov
sbb
or
sbb
es
fdivs
xchg
cli
jae
dec
idiv
inc
add
jnp
pop
jmp
iret
or
int
cmp
jge
loop
in
and
repnz
push
outsl
xor
test
lret
mov
std
inc
add
dec
and
stos
test
cmp
add
int
icebp
call
sarl
pop
add
lret
xor
ljmp
inc
pop
pop
adc
push
pop
xor
enter
jne
cltd
mov
enter
roll
cmp
inc
mov
add
repnz
cmpsl
mov
movsb
icebp
cld
sub
inc
hlt
lods
int
add
and
pop
pop
movsl
inc
and
cmp
mov
jp
aas
insb
adc
pop
pop
mov
add
lods
ljmp
js
mov
imul
imul
add
dec
and
mov
cwtl
or
call
mov
xchg
xchg
lret
add
out
shrb
leave
testb
arpl
jne
mov
movsl
sub
inc
and
inc
inc
cwtl
cmpsl
and
inc
into
stos
icebp
mov
cmp
add
ljmp
cmp
lods
je
add
add
pop
add
je
shr
imul
add
hlt
lcall
add
mov
add
mov
sarb
imulb
out
rorl
add
xor
mov
dec
rorb
movsl
movsb
add
out
xchg
mov
mov
call
add
and
pusha
inc
add
xlat
add
jg
cmpb
ss
add
mov
cmp
push
scas
lods
mov
out
aas
cmp
lock
xchg
imul
movsb
es
hlt
jmp
ror
add
or
push
fistpl
push
sbb
pop
jg
stos
mov
std
dec
pop
and
or
inc
enter
lahf
repz
adc
js
pop
push
and
pop
add
mov
adc
icebp
add
stos
mov
movl
sbb
add
cmpsb
jb
add
popa
std
dec
mov
hlt
add
jae,pt
inc
jge
stos
adc
insb
add
add
or
inc
out
mov
jae
jne
int
cmp
sbb
cmp
xchg
cmp
mov
lret
ljmp
shl
jbe
fs
outsb
dec
sbb
push
ror
sbb
fbld
aam
insl
xor
add
sub
orb
outsl
xor
and
xor
cltd
outsl
movsb
or
pop
es
and
stos
mov
inc
jbe
xor
outsl
sti
test
add
lods
test
adc
add
add
sub
loope
pop
mov
out
mov
sbbb
dec
push
sub
shl
mov
cmc
mov
movsb
int3
jns
or
cmpsb
jo
scas
inc
or
mov
cld
and
jge
mov
add
hlt
add
pushf
jne
lahf
arpl
dec
rcrl
repz
push
mov
ja
imul
push
add
xchg
or
add
js
mov
cmp
imul
rolb
add
pop
mov
push
inc
ds
inc
lods
dec
push
sbb
repz
cmpsl
cs
xor
inc
hlt
adc
mov
sahf
fisubrl
add
push
clc
test
sub
add
push
sub
cmpsl
add
mov
sub
add
xor
ret
ljmp
sbb
fadds
cltd
and
lahf
xchg
add
push
cltd
out
push
sbbb
push
mov
sti
mov
cmp
dec
pop
ds
lahf
popf
mov
xchg
lds
jns
stos
sbb
fcmove
xchg
inc
jne
and
loopne
pushf
add
mov
out
fisttpl
lret
cmp
add
add
push
dec
lcall
addl
add
pop
add
mov
clc
xchg
mov
adc
pop
add
add
xchg
adc
test
pop
add
mov
aam
cmp
xor
inc
addr16
mov
add
pop
adc
cwtl
xchg
or
lret
aad
pop
orl
add
add
in
ljmp
fisttpl
push
insb
mov
nop
add
push
in
add
dec
xchg
fcomps
xor
dec
add
jo
add
mov
jnp
ss
add
repnz
out
cwtd
scas
popl
push
out
movsb
mov
add
inc
ds
orl
adcl
dec
jle
pop
add
int
mov
mov
fimull
add
aam
adc
cmp
outsb
mov
rcrb
add
repnz
repz
inc
push
fnsave
scas
pop
test
add
xor
cld
scas
ja
mov
add
call
add
add
dec
sahf
push
mov
adc
add
out
test
xor
mov
xchg
xor
add
jns
xchg
sbb
outsb
std
xor
mov
testb
sub
add
dec
fxch
dec
mov
lret
xor
ja
adc
add
leave
mov
add
test
add
push
in
add
pop
add
loop
iret
xor
fwait
lds
addr16
inc
add
clc
mov
xorl
fs
mov
int
sub
push
into
test
fsubs
div
add
pop
adc
push
sti
in
or
int
fsubrs
jg
inc
add
fdivrp
add
sub
pop
gs
pop
dec
lds
mov
nop
lods
mov
and
loopne
sbbb
adc
or
shrl
xchg
sti
ret
dec
repnz
pusha
push
test
add
push
ss
stos
nop
insl
jae
iret
imul
rorb
jno
bndldx
sahf
add
stc
jb
cmp
mov
xor
aas
sbb
mov
mov
pop
lret
in
mov
out
adc
leave
inc
push
dec
xor
push
and
pop
add
loope
fildll
add
dec
sbb
adc
jo
insb
add
mov
aaa
adc
subb
repz
pop
stos
sbb
call
add
jno
or
mov
sbb
xchg
sub
test
add
in
push
add
add
sbb
lret
lods
popf
add
sbb
clc
enter
sbb
sbb
sbb
mov
aad
hlt
fmuls
add
arpl
jne
add
push
xchg
sbb
arpl
add
push
add
add
das
and
add
dec
divb
in
out
pushf
add
loop
mov
scas
scas
jl
pop
jo
xchg
aad
add
add
pusha
add
add
div
in
scas
add
js
xchg
leave
mov
jmp
fstl
fdivs
jnp
mov
dec
scas
xor
cltd
scas
add
mov
inc
mov
aam
stos
lret
pushf
dec
insb
mov
add
in
pusha
add
out
push
push
push
mov
or
xlat
mov
lods
loope
xchg
cld
loope
dec
xchg
or
pmaxsw
js,pt
shlb
mov
inc
jl
add
in
cli
es
pop
sub
add
mov
fldenv
hlt
aam
add
fidivrs
sub
sub
add
rolb
mov
dec
add
xchg
mov
frstor
loope
sub
cmp
sbbb
sahf
mov
adc
push
icebp
loop
push
lock
test
cld
loopne
nop
inc
xchg
in
and
add
and
pop
fists
fidivl
roll
sahf
mov
inc
sarl
mov
sub
add
xor
or
std
mov
xchg
ficoms
cltd
mov
rorl
xchg
fs
movsb
add
es
lahf
cmp
and
add
sahf
xor
iret
rolb
in
add
adc
or
ss
push
das
ds
in
xor
andnps
cwtl
and
mov
jp
inc
insl
jl
jp
pop
sbb
lret
loope
repnz
xchg
les
adc
pop
dec
add
daa
sbb
sub
sbb
daa
sarb
adc
cwtl
test
xchg
ret
mov
adc
ljmp
outsl
dec
cmp
fwait
inc
sub
sti
fs
movl
pusha
fdiv
lock
in
test
ds
xchg
xor
sub
add
xchg
idivl
sbb
in
push
or
addl
mov
dec
adc
jp
imul
clc
jg
cmp
icebp
xor
iret
filds
test
sub
jnp
aad
lcall
test
inc
push
mov
jp
mov
pop
mov
es
jne
jne
mov
mov
add
cmp
mov
fwait
mov
mov
mov
lret
fidivs
sbb
or
or
xor
add
dec
movsb
add
int3
add
mov
stc
pop
push
aas
aad
in
cmp
mov
dec
add
mov
insb
add
enter
repz
or
ret
add
insb
or
cmp
stos
cmp
sbb
xlat
ret
xor
jge
mov
or
mov
ja
cli
xchg
push
adc
scas
std
add
iret
push
jns
imul
andb
cmp
ss
cmpsb
out
sub
ret
mov
sub
imulb
idiv
add
add
add
shll
lret
aaa
test
daa
pop
in
add
andl
shlb
int
mov
rsm
add
dec
lret
mov
pop
cltd
add
xchg
push
jno
mov
adc
movsl
add
lds
cltd
add
lret
jae
ret
xor
push
addl
dec
aam
stc
add
mov
outsl
add
iret
or
jecxz
add
and
mov
arpl
pop
incl
pop
mov
jge
imul
stos
jmp
mov
add
dec
lret
add
adc
push
movsl
adc
test
lcall
ja
cmp
fdivl
fs
add
add
ret
sti
je
rcl
xor
adc
cmpsb
lea
add
add
and
xchg
sbb
imul
fsubr
mov
and
add
popf
push
sbb
push
mov
sti
inc
enter
popa
adc
sbb
xchg
adc
into
xor
notl
mov
testl
lret
add
rcll
mov
cmpsb
rorb
outsl
lcall
mov
xchg
or
add
push
popa
lahf
in
adc
add
popf
in
out
add
iret
test
cmp
xchg
xchg
add
and
sub
in
jge
into
cmp
xchg
push
fisubl
cmpsb
xchg
rolb
xor
int3
lcall
mov
push
sub
addr16
mov
push
add
int
or
ret
and
imul
xlat
add
dec
mov
add
iret
add
movq
aas
mov
xchg
add
push
jle
add
add
movsb
dec
addl
mov
push
push
inc
mov
ja
cs
pop
stos
inc
jp
or
shl
ret
cmp
cmpsl
pop
dec
add
movsl
out
cs
xchg
dec
fisttpl
xrelease
dec
pushf
aad
push
add
cs
icebp
inc
and
sub
pop
subl
rolb
test
mov
je
push
add
enter
into
scas
mov
cmp
add
pushf
and
ljmp
jge
push
dec
popf
cli
das
xchg
clc
xchg
ljmp
pop
jge
add
mov
les
clc
dec
or
push
pop
mov
repz
add
mov
out
dec
fldt
rclb
ds
push
cli
fnstcw
outsb
sbb
sbb
or
mov
mov
mov
push
mov
add
cmc
lea
sarl
add
adc
loope
nopl
rcrl
inc
inc
mov
in
movsb
mov
and
sub
add
insl
add
jo,pt
cmp
mov
mov
cmp
add
mov
pop
adc
jne
stc
xchg
in
push
adc
jl
inc
sbb
or
mov
sbb
les
hlt
and
arpl
add
movsb
pop
pop
xor
adc
and
ret
and
pushf
hlt
aaa
lock
add
movsl
int3
xchg
lock
add
add
or
add
cmp
mov
inc
mov
add
sbb
add
testb
add
xchg
add
or
aaa
pop
adc
or
add
add
push
out
mov
jg
aad
mov
push
inc
add
repnz
lock
add
int3
faddl
adc
pop
es
cwtl
nop
add
ret
push
push
scas
stos
rcl
inc
ljmp
xlat
mov
dec
mov
mov
fs
adc
stc
mov
and
cmp
ss
cmpsb
push
aad
rcll
scas
mov
jnp
add
lret
sub
cli
add
imul
push
cli
mov
xor
aas
adc
mov
add
xorb
jecxz
lret
add
jl
or
pop
popf
add
out
add
jge
or
sti
adc
sbb
sbb
adc
mov
mov
lea
movsb
mov
and
lahf
notb
stc
cwtl
add
push
int
cmp
clc
insl
ds
mov
ret
mov
lea
add
mov
pop
clc
sub
mov
pop
add
jb
in
loop
cs
xchg
add
push
jle
push
aas
cwtl
fdivrs
inc
xlat
add
adc
sbb
mov
aaa
xchg
xchg
out
data16
jns
shrl
test
lahf
out
lret
mov
inc
xchg
adc
lret
or
rcll
insl
dec
push
arpl
stos
xor
push
nop
add
fcompl
aas
add
std
arpl
adc
pop
mov
insb
sbb
add
lret
jle
lds
aas
out
nop
stos
add
or
imul
mov
jge
and
and
lahf
jg
adc
sub
lods
xchg
or
mov
add
inc
sar
lea
add
add
add
cmp
mov
or
frstor
or
add
popa
sub
add
xchg
lcall
cmp
or
arpl
jge
clc
imul
daa
lret
add
jns
jge
insb
jl
and
cltd
cld
sbb
shlb
movsl
sbb
lds
add
fsubrl
lods
inc
push
xchg
testl
add
xchg
xorl
add
adc
testl
jnp
movsb
mov
sub
out
xchg
pusha
adc
jb
mov
imul
and
add
pop
dec
pusha
xchg
add
cli
call
fpatan
cmp
xor
test
adc
add
bound
stos
dec
add
mov
clc
add
outsl
adc
loopne
js
sub
or
jp
push
dec
dec
sub
add
pop
jmp
sahf
pop
add
xchg
pop
inc
xchg
into
xchg
pop
adc
mov
aad
cmp
or
push
and
xor
stc
push
aam
add
fstpl
ret
xlat
pop
call
mov
pop
fidivs
sbb
inc
xchg
sub
add
cmp
ljmp
sbb
mov
imul
lds
fmulp
pop
mov
push
dec
jmp
lret
ret
jnp
mov
mov
mov
pop
mov
add
xor
in
mov
or
arpl
in
push
sub
push
add
dec
lds
and
jb
inc
push
adc
pop
mov
mov
cwtl
in
mov
pop
nop
sub
mov
add
cmp
cmp
aad
add
mov
xor
xor
inc
push
rcrb
sahf
dec
lods
lret
es
inc
int3
clc
cmp
cmp
add
add
inc
and
mov
mov
add
daa
popf
add
jnp
pop
pop
popf
xor
mov
push
aad
jp
ljmp
je
add
sbb
repz
or
xchg
jecxz
xor
movsb
fbstp
mov
movsl
js
adc
xchg
add
pusha
add
sub
push
call
sti
lcall
xor
fiaddl
stc
push
fwait
lret
add
add
mov
faddl
or
and
adc
mov
in
push
je
in
xchg
mov
add
mov
test
aaa
add
js
aaa
jp
push
call
sahf
add
hlt
fcoms
push
popf
mov
add
xlat
mov
iret
insl
aam
aaa
aam
out
push
add
mov
inc
cld
sbb
sub
gs
mov
stos
mov
imul
xchg
popa
ljmp
xchg
inc
fsubrs
xchg
add
xchg
mov
cmp
add
add
out
adc
xchg
sar
push
add
cmp
arpl
cli
ss
push
enter
and
repnz
mov
inc
dec
inc
aam
movsl
add
add
add
out
icebp
add
cwtl
xchg
lock
add
add
sub
call
xor
in
inc
lcall
dec
jb
xchg
fistpl
fwait
out
inc
aaa
add
jnp
jmp
dec
in
negl
mov
loope
or
add
or
jp
add
jnp
cli
add
sub
hlt
cmpsb
add
lcall
jge
cmpsb
rol
jecxz
or
stos
ja
insl
fsubl
rolb
cld
dec
dec
and
js
add
stos
jno
dec
aam
cld
jnp
push
js
ret
int3
out
pop
roll
and
rorl
xchg
add
jl
mov
pop
sbb
mov
push
xor
iret
add
fldt
hlt
or
sub
mov
int3
jecxz
cmpsl
mov
sbb
jbe
jns
push
add
ja
pusha
add
flds
lds
cmp
movsl
es
adc
lret
mov
pop
popa
add
les
and
repz
cwtl
add
add
or
out
outsl
add
sbb
add
pop
sub
lds
std
and
push
add
xor
add
adc
add
ret
xor
xchg
inc
cmp
add
sahf
mov
iret
jo
mov
fimuls
mov
lret
addl
mov
mov
daa
xchg
sbb
inc
add
fldcw
inc
bnd
sub
bound
scas
call
mov
mov
mov
arpl
divl
add
out
jmp
push
insb
popa
aas
sbb
or
lods
sbbl
loope
push
sub
pushf
cmpsl
in
and
notb
mov
add
sub
and
test
inc
loop
prefetch
sbb
add
mov
stos
or
mov
testb
add
enter
test
mov
cltd
aas
mov
add
inc
mov
xchg
add
mov
add
add
push
xchg
jae
xor
xor
shll
add
in
jecxz
push
outsb
dec
pop
add
mov
sbb
or
mov
cmp
std
cmp
cwtl
jnp
pop
testb
dec
push
jne
mov
insl
insl
cmp
or
jg,pt
mov
pop
sub
adc
gs
popf
add
fsubrs
lret
xchg
stos
mov
mov
sbb
cld
xchg
add
push
add
test
pop
pop
mov
addr16
cmp
cmp
or
add
ds
add
rcr
int
rcrb
xchg
in
std
rorb
dec
jl
int
inc
fnstcw
fidivl
cld
insl
lahf
icebp
cmp
imul
ljmp
mov
mov
cmpsl
flds
ljmp
mov
lahf
or
sbb
pusha
mov
scas
in
inc
jecxz
clc
add
sbb
pop
add
xchg
push
addb
cmp
jne
rcrl
mov
clc
fildll
es
and
clc
aad
int3
cmp
out
jmp
bnd
lods
dec
push
icebp
push
sbb
xchg
inc
imul
fistps
push
aaa
jo
and
out
fcomps
lods
in
mov
add
rolb
mov
xor
mov
push
movb
in
in
mov
inc
lret
sub
imul
mov
enter
push
mov
adc
push
mov
rcrl
cmp
imul
push
sbb
mov
inc
loop
jns
add
add
add
test
addr16
enter
inc
or
pop
or
gs
or
scas
mov
add
outsl
mov
ljmp
mov
mov
cmp
das
fs
pop
add
loope
mov
add
insb
aaa
mov
bound
into
shlb
aam
mov
jnp
pop
out
sub
dec
and
mov
sbb
xor
mov
fmul
bound
xchg
mov
jne
or
aad
mov
rclb
loopne
add
push
adc
mov
push
add
mov
in
ljmp
sub
push
wrmsr
mov
add
and
repnz
aaa
je
ret
dec
or
xchg
add
subb
popa
nop
negl
shl
jnp
pop
mov
sub
add
int
sbb
aad
and
dec
adc
cmp
pop
mov
add
mov
add
adc
jns
movsb
scas
daa
movsb
xchg
sub
sbb
jmp
jg
and
cli
je
jecxz
push
add
decl
arpl
and
and
jae
pop
add
add
jl
das
in
sub
jno
cmp
cld
ljmp
je
rcrl
dec
mov
push
test
xchg
add
adc
out
pop
or
out
cmp
es
pusha
jns
aad
add
fstl
lcall
pop
addr16
aas
decb
jnp
jo
cmp
out
imul
pop
push
data16
sub
jp
jbe
cmp
out
inc
shl
pop
mov
and
lds
adc
mov
add
dec
add
mull
pop
je
cmp
add
and
jno
dec
add
les
ret
std
add
xchg
push
mov
xor
dec
cltd
fst
inc
mov
daa
mov
dec
outsl
jb,pt
pop
addr16
add
movsb
mov
add
pushf
add
cmp
ljmp
add
sbb
cmpsl
rolb
jnp
add
xchg
aad
insb
sarb
add
jno
lods
jl
mov
adc
cmpsl
outsl
mov
inc
add
shlb
fisttps
mov
dec
popf
addb
mov
push
mov
daa
add
mov
add
push
push
popa
sarb
out
rcll
ret
cmc
pop
pop
pop
xor
xor
fdiv
and
ret
or
cwtl
push
add
ljmp
adc
ret
add
outsl
add
das
add
loopne
ret
xor
movsb
xor
sbb
add
insl
xor
aad
insb
add
dec
mov
sub
mov
mov
cmp
add
out
dec
jge
fadds
xchg
ret
into
test
xchg
xchg
dec
pusha
insb
and
outsb
add
adc
jge
pop
push
cmpsl
aas
jnp
add
add
mov
pop
jo
aas
dec
add
xor
lret
push
pushf
jbe
jl
in
mov
lds
aaa
push
sahf
mov
gs
cwtl
add
push
and
or
in
dec
add
pop
lret
movsl
mov
mov
xchg
sbb
out
push
hlt
add
xchg
pop
enter
push
xor
insb
pop
les
add
add
fwait
add
add
pop
loop
adc
jecxz
xchg
add
movsl
xchg
call
add
mov
jae,pt
mov
hlt
pusha
add
out
sbb
out
mov
jb
jge
xchg
add
or
lock
adc
add
cltd
add
mov
inc
add
add
cs
xchg
aas
jo
rorl
cmc
jp
fnstsw
add
add
cmp
lret
add
sahf
add
mov
pop
test
mov
repnz
clc
je
int3
cmpsb
aam
in
test
out
adc
adc
add
and
sahf
add
sbb
and
sub
add
aaa
add
xchg
add
aad
add
xchg
cmpsl
add
jno
add
push
jno
outsb
roll
add
pusha
xchg
sub
mov
inc
sahf
push
pop
mov
leave
xchg
into
inc
les
inc
inc
adc
jbe
daa
jbe
xor
jb
fcomp
incl
test
xor
loope
add
and
adc
mov
add
int
mov
test
cmp
inc
icebp
movsl
push
xchg
and
cmp
dec
and
daa
ds
mov
xor
jle
adc
xchg
add
add
pop
cmp
push
rclb
popa
and
push
call
dec
mov
jns
pop
inc
add
sbb
roll
inc
out
sbb
add
add
cmp
xchg
add
lcall
aaa
and
shll
test
inc
cli
add
add
add
add
and
bswap
dec
add
es
xor
inc
incb
int3
add
or
loope
jbe
lret
ror
push
inc
popa
sub
dec
mov
pusha
jmp
push
mov
aas
sbb
add
inc
jecxz
fs
ret
test
lods
jl
inc
mov
dec
mov
test
cmp
inc
lret
add
add
ds
ljmp
jl
leave
bound
inc
bound
cmp
push
mov
inc
add
fists
add
add
icebp
dec
add
inc
loope
mov
arpl
mov
mov
sub
pop
subb
outsl
mov
cmp
or
add
hlt
and
inc
imul
stc
out
and
xchg
and
mov
cltd
mov
add
add
repz
mov
outsl
cmp
nop
add
push
js
push
stc
cmp
add
sbb
add
mov
add
lretw
ret
sub
test
stos
add
xchg
mov
add
jns
cltd
std
inc
sti
add
add
add
movsb
dec
xchg
or
pop
add
and
movsb
orl
jmp
sbb
xor
call
add
pop
lock
dec
mov
mov
jp
pop
mov
push
add
mov
adc
pop
add
mov
loopne
mov
repnz
add
fwait
dec
verr
mov
cs
mov
cmp
cld
test
shlb
stos
push
push
cmp
pusha
loopne
test
mov
add
mov
xor
scas
fmuls
jae
and
jb
dec
ret
das
pop
or
add
fnstsw
cmp
mov
sbb
jge
lock
lods
add
add
sub
or
pop
test
pop
cs
add
daa
mulb
push
sub
int3
int
and
xchg
and
or
enter
sti
xchg
rolb
mov
and
insl
add
add
pop
add
fdivs
out
jae
loop
fwait
sarl
ds
cmp
divl
push
jmp
dec
pop
jae
fwait
jp
jno
sahf
icebp
jg
xor
in
cmpsl
lds
js
add
adc
daa
fistpl
push
push
xchg
and
dec
fldcw
jg
lds
stos
add
addr16
inc
pop
les
cmp
lret
pop
mov
imul
ss
dec
into
mov
pop
sbb
scas
cs
add
add
adc
mov
add
add
mov
cmp
add
ljmp
add
stos
adc
push
loope
mov
push
push
push
gs
add
flds
jg
mov
add
cmp
movsl
cld
add
push
roll
or
xchg
gs
lret
adc
arpl
cmp
xor
sbb
push
mov
ret
jbe
out
sbb
xchg
xchg
insb
xchg
aad
pop
sti
jg
adc
add
inc
mov
mov
jecxz
jmp
lock
adc
into
sbb
cmc
xchg
pop
repz
push
clc
jns
cmp
fsub
pop
sti
lods
jle
lret
pop
enter
roll
mov
filds
xchg
xchg
add
push
testb
cmp
clc
push
and
popf
insb
in
add
push
js
ret
repz
mov
xor
add
stos
lcall
sbb
shll
enter
outsl
xor
mov
imulb
imul
subl
test
testb
lds
inc
pop
bound
add
lret
push
mov
push
js
xchg
stos
sub
xorb
add
xor
push
stos
mov
aas
cld
dec
jle
pop
mov
loop
xor
inc
int3
mov
pop
or
jge
xchg
adc
xchg
arpl
or
push
aam
or
and
cmp
push
fsubrp
mov
jl
sbb
les
jae
cmp
int3
scas
pop
inc
add
ss
aaa
xor
or
repnz
test
mov
mov
xchg
divb
outsl
mov
jns
shll
or
ret
loope
mulb
aad
cmp
push
adc
out
enter
or
jmp
push
jg
add
xchg
inc
je
inc
ret
pop
jnp
aas
push
daa
lahf
insb
inc
dec
cmpsb
add
popl
sbb
sub
and
loop
cmc
xchg
cltd
xor
or
loop
ljmp
pcmpgtd
icebp
add
fcomi
aaa
mov
cmp
push
stc
inc
add
fiaddl
and
pop
punpcklwd
adc
cmp
hlt
add
scas
dec
and
ss
lock
clc
in
call
enter
push
daa
jo
or
je
jp
xchg
iret
mov
arpl
nop
pop
xlat
sbb
jg
pop
add
sbb
popl
imul
push
enter
movsl
je
mov
sub
lret
movsl
push
fwait
or
mov
fcmove
out
add
xchg
outsl
cwtl
add
aam
aas
std
insb
add
xchg
loope
lods
ret
jo
inc
xchg
add
xor
subl
xchg
push
add
sbb
fldt
int3
or
add
shlb
add
imul
sbb
add
loop
outsb
insl
jmp
sub
rclb
popf
mov
shlb
stc
and
fsubrp
add
mov
shll
push
lods
or
pop
xchg
imulb
lods
ret
ror
outsb
fcomi
jns
mov
in
xor
or
rorb
jnp
ret
sub
out
add
inc
data16
and
iret
icebp
dec
add
sub
cmp
inc
into
es
sbb
mov
xchg
faddl
mov
push
scas
xor
mov
sbb
push
test
loope
add
loop
dec
mov
gs
add
sub
sub
add
fsubs
mov
mov
lahf
xchg
ret
imul
lret
aas
adc
cld
mov
loopne
loop
repz
add
add
jo
sbb
or
mov
clc
lods
dec
orl
lea
add
jl
sub
add
add
jo
add
jb
in
hlt
in
add
fsubs
fst
outsb
leave
fcomps
or
add
mov
ret
dec
jmp
add
add
test
loope
adc
stos
add
xor
bound
or
movsb
add
and
sub
scas
jmp
add
adc
and
pop
mov
sbb
popa
loop
push
jne
notl
sbbb
add
in
add
out
cmpsb
add
mov
sub
xor
fld
ds
ret
adc
mov
mov
mov
inc
out
adc
popf
push
pop
jg
in
mov
lahf
cmp
add
sbbb
mov
sahf
sahf
js
xlat
dec
fdivrs
int
push
or
cmp
push
mov
fidivrl
ficompl
or
in
addb
out
test
mov
sub
add
ss
or
movsb
cmp
sbb
push
mov
push
push
cmpsb
xchg
mov
js
ret
xor
popf
fistps
add
enter
cmp
push
dec
mov
xor
data16
iret
adc
push
lea
es
jle
mov
and
sub
push
add
inc
out
jbe
fimuls
rcrb
and
in
pop
push
adcl
sub
pop
pusha
jmp
add
xor
jnp
push
add
pop
and
sahf
dec
pop
push
xchg
jp
aad
cltd
sti
inc
out
aad
shrl
das
bound
adc
cmc
shll
or
clc
xor
xchg
mov
add
xor
mov
out
notb
cmpsb
sbb
pop
jp
cmp
leave
out
push
dec
add
test
data16
add
jno
mov
cmpsb
push
movsl
loopne
adc
pop
push
xchg
sar
adc
imul
add
test
sbb
add
fisubl
add
and
roll
push
add
add
sbbl
or
rorb
fisttpl
loop
adc
mov
jne
mov
ja
jle
les
pop
cs
mov
leave
mov
rcll
int3
mul
in
stc
add
inc
add
sub
ret
xor
add
mov
add
push
out
xchg
hlt
cmp
hlt
add
jg
push
fs
test
daa
daa
inc
mov
jns
pop
movsb
std
sub
add
fcoml
ror
or
cmp
sub
jge
lock
mov
add
repz
or
mov
aaa
in
flds
lcall
cld
push
push
pop
sbb
jb
jge
inc
repnz
jne
decl
cld
or
push
add
sarl
dec
cltd
add
scas
movsb
add
bound
push
or
cmp
add
cmp
add
xchg
mov
test
sti
xor
int3
inc
sbb
pop
sbb
aaa
mov
ret
scas
pop
cmp
xor
test
icebp
jge
test
mov
popa
imul
cld
icebp
lret
fiaddl
loope
lret
mov
lldt
pop
repz
jae
cmpsb
cmp
mov
scas
push
out
jle
loopne
push
testl
stos
or
es
mov
add
push
repnz
push
add
cld
ret
mov
add
sbb
xchg
scas
mov
outsb
div
xchg
add
add
add
add
shrl
jge
mov
add
add
xor
shl
add
imul
xchg
mov
lock
jbe
inc
stos
ljmp
xchg
roll
xchg
add
adc
mov
sbb
mov
push
pop
flds
imul
insl
mov
jbe
dec
dec
dec
add
rol
sbb
push
cmc
ss
fists
pop
ret
pop
and
xor
add
dec
into
faddl
incb
rorb
iret
aad
sbb
pusha
mov
mov
add
loope
or
aaa
in
sub
bound
mov
push
xor
in
xchg
test
and
pop
test
fiaddl
dec
mov
ds
or
cmp
adc
daa
and
bound
xor
sahf
add
and
out
jge
inc
loop
adcb
popa
add
add
add
sub
pop
cwtl
aam
mov
adc
xchg
fnstenv
gs
jno
push
dec
xchg
dec
or
inc
jecxz
cwtl
and
leave
into
xchg
mov
pop
or
in
xor
xor
add
add
mov
out
sub
int3
test
mov
push
ret
outsl
or
mov
inc
add
cmp
jle
ret
push
sub
add
fisttps
fnstcw
push
mov
popa
cmp
cmp
pop
scas
dec
movsb
xor
mov
dec
add
adc
xchg
test
fstl
cmp
add
addb
sub
mov
sub
pop
sbb
pop
add
movsl
repnz
mov
lcall
inc
and
imul
in
add
xor
cmp
add
iret
loop
or
idivb
pop
mov
adc
mov
rcll
sahf
pop
add
and
mov
fwait
shlb
jmp
mov
mov
insl
sbb
cli
inc
mov
stos
hlt
sbb
movsb
add
sbb
add
dec
jne
xlat
stc
dec
pushf
sub
js,pt
pop
add
adcb
add
lret
sar
xor
sbb
rcrl
int3
push
stos
add
imul
lea
loop
and
insb
and
inc
add
cwtl
into
movsl
gs
dec
enter
add
inc
push
add
in
or
iret
mov
push
insb
outsb
or
xor
call
shlb
movsl
jecxz
dec
dec
dec
mov
and
enter
dec
pop
js
dec
or
imul
add
cmc
push
dec
add
fldl
je
adc
add
addr16
and
fwait
out
fbld
sarl
cmpl
inc
int
cmpsb
mov
addr16
push
je
loope
test
insb
xchg
and
mov
dec
test
jle
or
sub
add
push
aad
add
arpl
arpl
sub
push
movsb
xchg
aaa
add
inc
lret
mov
push
xor
popa
pop
hlt
or
shlb
add
xor
add
or
outsb
cmp
add
pop
mov
ret
xor
je
push
sti
div
hlt
add
add
sub
scas
vmovhps
rcrl
das
add
imul
or
adc
fstpl
lea
add
loopne
add
push
or
adcb
xor
pop
add
add
add
scas
xchg
jo
or
movsb
add
mov
add
mov
cld
add
add
add
mov
fwait
stc
nop
xor
push
inc
push
sti
cmpsb
pop
mov
xchg
test
ds
jae
data16
lret
push
imul
and
add
lods
sub
leave
test
pusha
lret
jge
fcomps
stc
insl
shll
add
cmp
cmpsb
daa
pushf
push
add
call
add
std
xchg
inc
jp
pop
test
and
and
and
mov
loope
out
add
jo
test
inc
cltd
push
insl
pop
rorb
mov
fadds
movb
adc
les
mov
dec
fisttps
mull
scas
aas
add
fbld
add
xchg
mov
add
js
add
out
lds
pusha
lcall
xchg
sbb
mov
pop
add
add
xor
mov
lea
or
push
jne
scas
mov
xchg
jp
insb
inc
xchg
or
dec
xchg
push
jne
sub
inc
push
add
push
add
insb
pop
mov
das
sub
cmp
jg
ficoms
in
dec
push
sbb
loopne
scas
sbb
push
jmp
xchg
add
xor
push
pop
cmp
testb
int
iret
outsl
rolb
dec
mov
lods
add
stc
mov
or
cmpsb
add
pop
add
aas
mov
insl
int3
je
stc
movsb
push
mov
push
out
sbb
sub
add
hlt
inc
add
add
lea
jb
xor
pop
int
ret
stos
add
mov
sub
cmp
setne
aaa
xlat
add
add
out
xor
or
inc
sub
xor
gs
push
test
cmp
cmp
jo
lret
mov
or
popf
popl
add
dec
je
adc
mov
ss
push
cmpsb
mov
add
cmp
push
fadds
push
cmp
pop
jg
cli
mov
mov
pop
js
ret
cmp
add
jbe
ret
scas
add
adc
mov
and
and
ss
add
push
jp
out
pop
es
inc
add
ss
sarb
add
enter
fnsave
in
verw
cld
add
add
cmp
icebp
cmp
jmp
xor
cmpsb
scas
add
add
mov
mov
pop
icebp
push
fiaddl
in
adc
inc
shrl
xchg
lret
sub
aad
movsl
sbb
add
and
sub
xor
push
sbb
arpl
mov
and
add
nop
cmp
shll
bound
andb
sbb
es
adc
out
repz
popf
fnstenv
leave
sbb
and
add
loop
test
data16
sub
xchg
push
jno
sub
adc
popa
and
rcr
xchg
add
cmp
jbe
loopne
xlat
jecxz
dec
add
pop
cltd
push
jnp
xor
push
mov
dec
sub
inc
mov
add
jo
add
jo
pop
hlt
xchg
sub
adc
dec
std
mov
mov
mov
adc
add
jle
adc
add
inc
push
aaa
popf
add
jae
cmp
sbb
fcomi
jmp
xor
mov
scas
cmp
dec
data16
add
mov
cmp
fdivs
adc
xlat
or
mov
jns
sar
push
inc
jns
das
icebp
add
shlb
add
ja
les
gs
add
test
movsb
add
mov
fsubr
add
mov
cmp
cmp
xchg
xor
hlt
dec
pop
es
or
adc
test
ljmp
test
std
add
movsb
lcall
dec
pop
mov
mov
and
into
movl
scas
daa
mov
je
adc
push
repnz
xor
stc
shr
lahf
add
add
mov
shl
pop
xor
dec
add
mov
and
pop
sub
push
jg
iret
loopnew
stc
mov
mov
or
jge
sti
shll
test
push
or
sti
nop
add
mov
movsb
clc
push
dec
test
popf
jae
cwtl
add
cmp
aas
std
cmpsl
add
add
cltd
sub
jge
xchg
loopne
add
out
add
adc
mov
bound
xchg
push
rol
popa
loopne
cmp
dec
shlb
mov
sbb
mov
pop
add
mov
mov
sahf
xchg
cmp
add
add
jp
xchg
and
fists
test
push
cld
rol
add
sub
pop
xor
add
inc
cmp
lcall
das
data16
aaa
mov
jne
sbb
addr16
std
cmpsl
ds
cld
sti
dec
add
ja
mov
xchg
add
jmp
xor
mov
add
sahf
sbb
pop
inc
fs
jo
daa
sbb
add
cmp
sub
or
inc
imul
add
lcall
mov
cmp
xlat
pusha
sarb
add
mov
aad
or
mov
dec
jmp
mov
call
sbb
lock
sub
push
xchg
mov
repnz
inc
push
and
cmp
clc
sbb
gs
dec
xchg
iret
xchg
ss
jmp
cmp
cwtl
lea
add
pop
mov
mov
ss
add
push
mov
out
pop
call
out
std
out
add
sub
daa
add
jle
and
jne
xchg
ss
stos
icebp
sub
fwait
mov
add
xchg
iret
add
add
and
pop
xchg
add
mov
popa
movb
movb
in
sub
pop
dec
jle
add
add
inc
jnp
push
push
in
jno
dec
ss
and
outsb
push
push
push
push
out
mov
pop
inc
out
or
inc
xchg
add
stos
cmp
dec
in
dec
jg
add
mov
jnp
cs
push
xchg
push
dec
add
mov
add
cmpsb
xchg
orb
out
add
add
push
filds
fists
push
jl
mov
xchg
xor
loopne
test
insl
jp
in
data16
adc
jmp
fs
mov
xor
call
mov
sbb
dec
adc
pushf
jae
dec
inc
jl
repz
dec
pop
out
xor
push
cmpsb
sub
lock
xchg
mov
dec
cmc
sbb
add
inc
cmpsl
cwtl
jbe
lock
lock
and
sahf
dec
test
lock
out
outsb
add
cmp
fcompl
jb
mov
sub
fwait
daa
jno
add
add
fimull
xchg
ret
adc
jmp
test
stos
pop
call
in
cwtl
push
inc
sub
aad
cwtl
add
std
inc
jmp
mov
shrb
push
cs
push
xchg
rcl
sbb
jb
jb
rorb
mov
cwtl
into
mov
inc
cs
xor
pop
add
xacquire
add
jbe
adc
sub
mov
xor
cmc
test
data16
mov
jnp
lock
adc
lea
sbb
add
and
sahf
fldl2e
dec
mov
jmp
test
ljmp
xchg
leave
cmpsl
pop
jg
movsl
out
jbe
lldt
ds
lods
int3
lea
pop
sub
in
mov
add
xchg
sbb
mov
ds
pop
add
imul
enter
mov
fdivrs
xor
sbb
rolb
loop
lods
jnp
add
popa
or
push
mov
pop
negb
in
jp
fnstsw
les
add
xchg
jmp
add
cmp
add
mov
and
hlt
push
push
mov
scas
sbb
push
fdivl
dec
mov
add
ja
mov
or
mov
dec
int3
ljmp
add
rcll
add
pop
add
ret
inc
xor
ret
mov
das
jae
jno
xor
sti
adc
shl
fwait
xchg
push
daa
fcompl
repz
inc
sti
dec
or
jl
hlt
add
rcrb
pop
adc
jg
pop
stc
or
jle
into
pop
add
and
mov
push
inc
mov
leave
in
dec
bound
cmp
xchg
sub
add
aad
popf
add
add
add
pop
add
mov
sbb
add
jbe
movb
push
lock
pop
lahf
in
add
pop
ljmp
test
sub
add
stos
addl
in
lsl
fwait
test
inc
mov
dec
add
cmp
xchg
imul
mov
add
mov
movb
stc
push
pop
jbe
add
mov
adc
mov
push
add
xchg
insl
punpckldq
jmp
pushf
pop
test
clc
sbb
pop
inc
or
dec
call
or
dec
xor
push
mov
scas
popa
iret
sti
add
std
clc
cmp
lods
orl
add
inc
movsl
cmp
cmpsl
sub
sbb
out
cmp
nop
mov
dec
dec
outsl
jb
mov
popf
add
hlt
pop
mov
fs
mov
cltd
dec
add
add
ds
test
pop
add
push
dec
push
sbb
lds
std
adc
jbe
mov
pop
mov
pop
add
and
shlb
gs
pop
pop
nop
dec
loope
cli
xor
or
mov
cmp
into
scas
cmp
data16
dec
test
add
and
sub
ss
mov
outsl
fldenv
mov
outsb
inc
and
and
scas
dec
and
add
sub
loop
fs
pop
mov
add
dec
out
mov
cli
cmpsl
mov
rcl
add
mov
test
adc
or
fcomps
cmp
pusha
loope
or
sub
scas
scas
sbb
mov
push
stos
or
sub
rolb
push
mov
scas
add
add
cmpsl
ds
add
mov
mov
adc
add
and
fistl
adc
bound
ds
add
leave
fmuls
xor
test
xlat
movsb
jge
clc
push
divl
pusha
or
or
xlat
jmp
push
add
mov
cltd
sbb
icebp
cld
sbb
les
lret
pop
test
add
add
push
nop
arpl
iret
dec
jmp
pop
or
leave
add
inc
int3
rcl
pop
call
cmpsb
lret
cmp
adc
divl
inc
and
ss
xlat
mov
hlt
jp
mov
add
sub
nop
push
mov
push
sti
ficoms
insb
jbe
cltd
add
push
dec
pop
cltd
sbb
ret
lds
add
out
cld
pop
xchg
aad
movsl
add
inc
mov
and
add
out
test
in
insl
sub
repz
cmp
out
pop
add
cmp
lcall
cwtl
scas
roll
stc
pop
jge
push
dec
pop
sahf
jg
gs
and
jbe
dec
imul
cwtl
lret
test
add
cmp
jmp
dec
mov
mov
adc
out
jle
or
lret
jmp
add
pop
and
mov
iret
add
fbstp
mov
gs
mov
mov
lock
fwait
add
mov
xlat
cmpsb
sarb
cmpsb
ret
decl
leave
dec
jmp
pop
pusha
and
les
test
daa
cmp
adc
push
out
leave
lods
push
popa
cmp
cmpb
pop
mov
jae
jnp
popf
push
lods
mov
dec
hlt
xor
xchg
inc
mov
out
loope
in
jo
sti
add
stos
sub
dec
out
sub
repnz
xor
xor
out
add
out
dec
sbbb
and
out
ss
lock
or
test
outsl
jp
add
jp
add
jle
add
push
sbb
int
fildll
xchg
add
pusha
sbb
add
dec
adc
inc
into
test
gs
mov
outsl
xchg
movsl
add
cmp
dec
add
addr16
cmp
jp
fadds
sar
xchg
stos
das
popf
ss
dec
aam
jne
add
dec
cmpsb
out
popa
xlat
cmp
lods
ret
jb
or
aas
push
sbb
inc
mov
xchg
inc
xlat
cltd
mov
inc
dec
fnstenv
lcall
lret
push
push
add
les
jb
mov
dec
imul
popf
inc
inc
jle
movsb
mov
in
mov
push
mov
cmc
inc
add
imul
add
pop
mov
push
fcoms
leave
mov
inc
xor
enter
inc
std
inc
xchg
jecxz
jg
subl
jl
mov
xchg
aad
cmp
jb
xlat
pop
std
movsl
mov
pop
xor
loop
lret
enter
mov
push
das
xchg
inc
pop
add
ss
lods
call
movsl
notl
sbb
mov
aam
aad
cld
sbb
rcrb
adc
add
dec
call
sbb
int
movsb
lcall
xor
cld
push
and
popf
clc
push
jle
add
add
push
sbb
sub
fdivrl
add
jg
ficoms
mov
push
ret
push
pop
cwtl
mov
jo
add
pop
add
add
andb
add
add
sub
mov
mov
or
sahf
enter
rolb
repnz
xchg
sbb
stos
imull
pop
push
add
xchg
cmpsl
push
rcll
add
adc
lcall
iret
andl
lcall
popa
out
add
sbb
insb
add
sub
int
add
xchg
call
divl
iret
addr16
jle
pop
fsubrs
mov
and
fistpll
fistpll
loope
xlat
mov
jg
add
orl
mov
xor
push
ret
add
jge
nop
cld
pop
add
mov
jae
leave
add
inc
sub
inc
ret
icebp
insb
fwait
add
popa
xor
push
mov
dec
lahf
in
adc
stc
pop
int3
sub
cmpsb
push
sbb
cmp
and
dec
int3
daa
pop
sub
dec
pop
add
add
jns
add
movb
xor
mov
lcall
push
pop
mov
sub
add
add
clc
xchg
out
int3
sbb
add
sub
leave
add
rorb
sub
lret
lods
add
mov
sub
add
sbb
pop
mov
add
sbb
popa
push
add
cmp
int3
xchg
in
jmp
mov
pop
fmuls
xor
xchg
cltd
hlt
cltd
pop
add
xor
add
push
add
inc
mov
ds
sarl
je
inc
cmpsl
out
pop
or
scas
sbb
inc
sub
cmpsl
xchg
aam
adc
cmp
pop
xlat
mov
movsl
jae
ljmp
popf
aas
pop
or
xchg
adc
add
add
mov
add
add
push
imul
mov
mov
fisubl
movsb
negl
mov
xchg
jmp
mov
add
sub
or
push
lcall
pop
je
pop
push
in
out
inc
mov
add
decb
xchg
jp
aad
testl
push
jge
jmp
shll
ds
fdivl
mov
les
add
fdivl
add
adc
lods
jecxz
outsl
int3
push
jo
or
sub
into
jmp
sub
flds
aaa
cmp
imul
fsubr
loop
test
sti
cli
add
dec
gs
push
stos
add
leave
mov
mov
add
insl
mov
jl
out
fsubrl
mov
mov
out
aas
shlb
add
xchg
xor
int3
insl
flds
out
add
sub
push
addr16
lds
cmpsb
sbb
test
push
pop
insl
dec
mov
ds
rclb
aaa
xor
jmp
add
mov
add
inc
les
es
insb
inc
loopne
fiaddl
add
cltd
fwait
xchg
mov
popa
xchg
aaa
mov
push
or
fwait
sbb
loop,pn
add
adc
out
or
out
sub
add
add
aas
push
add
and
cld
pop
out
fstp
push
sub
jp
rcrl
xchg
in
sub
pusha
and
ret
xor
add
lods
test
in
jmp
sub
lret
jb
pop
mov
add
pusha
sbb
nop
push
pop
insl
mov
leave
rcrb
test
push
xchg
push
fs
mov
jp
add
mov
mov
out
ja
outsb
adc
jp
pop
xchg
xor
add
sub
inc
or
add
mov
jno
popf
jl
mov
icebp
add
pushf
add
push
aad
loope
stos
sbb
cmp
sbb
orb
das
add
pusha
add
pop
sbb
inc
push
lds
mov
sbb
inc
jno
pop
cld
int
faddl
incb
dec
sbb
push
mov
jbe
cmp
jnp
mov
lock
lods
daa
rcll
fbstp
mov
add
test
loopne
popf
jle
mov
cmp
cmpsb
into
mov
cmp
movq
scas
xlat
xchg
push
fstl
sarl
add
push
add
add
mov
xchg
mov
ret
sar
leave
mov
clc
add
or
xlat
add
pushf
nop
int3
fsts
mov
jbe
mov
ljmp
add
and
lret
mov
loop
add
fwait
add
movb
cmp
arpl
cwtl
pop
adc
testb
dec
orl
scas
rclb
lock
ljmp
mov
add
sub
push
mov
jmp
mov
add
imul
or
xadd
scas
in
add
lret
lcall
pop
cmpsl
inc
mov
cmp
jg
push
jp
movb
rcr
xchg
data16
sti
xchg
xorl
pushw
add
mov
push
xchg
mov
loope
rclb
xlat
adc
push
data16
jge
jne
add
xor
dec
mov
pushf
adc
fcoms
je
adc
add
mov
dec
add
add
mov
lret
inc
lret
mov
xor
mov
adc
adc
cmp
pusha
xchg
add
add
pop
add
add
inc
cwtl
add
shll
out
movsb
add
jbe
bnd
mov
stc
scas
mov
stc
shl
insl
add
call
mov
and
fcomip
inc
pop
fucomip
dec
or
insb
cmp
das
shlb
sbb
mov
inc
pop
ret
in
stos
mov
add
mov
and
add
ja
add
mov
cmp
xchg
pop
and
aaa
outsb
xlat
push
test
cmp
iret
mov
lea
push
test
bound
sub
inc
cmpsl
iret
xchg
inc
xlat
lods
cmp
jg
lock
jno
jle
sahf
cmc
jecxz
cmp
add
add
xlat
add
mov
ret
push
add
add
call
fsubl
xor
jae
mov
xor
xor
jg
pop
dec
jns
loopne
cmpsb
pop
cltd
test
push
pushf
cmpsb
sti
add
adc
bound
out
test
pop
fs
enter
add
or
add
enter
sbb
adc
xchg
cmp
clc
xchg
out
cmc
scas
mov
mov
add
enter
jns
dec
cmp
pusha
adc
stos
ss
add
ret
roll
adc
and
xchg
add
mov
loope
ret
and
sbb
cmp
mov
dec
sbb
ret
leave
rcr
push
and
adc
in
add
mov
arpl
adc
push
loop
ss
sbb
aaa
sub
jo
add
subl
jb
data16
es
add
movb
sahf
add
cwtl
mov
pop
add
imul
addr16
fidivs
pushf
int3
xchg
xorl
cmpb
push
push
add
push
jmp
mov
pop
add
lcall
lea
mov
push
mov
mov
leave
daa
mul
mov
sbb
cltd
add
movsb
jb
testl
mov
enter
in
and
add
insl
scas
rorb
sub
mov
jecxz
mov
aaa
add
cli
test
add
add
add
les
inc
lea
add
xor
add
and
xchg
dec
sbb
mov
jae
inc
lock
mov
add
lds
jae
stc
movsb
fsubrl
mov
pop
lds
add
aaa
rcrl
mov
mov
mov
add
adc
add
jecxz
push
mov
movsl
xchg
sbb
add
lahf
adc
scas
int3
jae
aaa
ljmp
pop
js
sub
xchg
jo
pop
mov
or
push
mov
mov
mov
mov
add
dec
inc
jl
call
sti
add
stos
cwtl
add
sahf
sahf
add
add
loop
pop
sti
adc
or
dec
xor
bound
aad
add
pushf
add
inc
add
push
xlat
lods
inc
add
jne
adc
fidivrs
cmpb
dec
jle
xchg
jmp
mov
cmp
out
mov
mov
test
repnz
add
shll
add
xchg
mov
sub
repnz
mov
xchg
js
jb
or
nop
lds
jns
mulb
cltd
and
icebp
push
ja
loope
lea
inc
xchg
jno
mov
call
ss
cmp
call
jb
mov
adc
fidivl
push
ficomps
repnz
mov
test
push
add
ljmp
cs
xorb
inc
dec
sbb
je
lret
adc
adc
add
sbb
add
cmp
jbe
add
xorb
xchg
arpl
sbb
ror
in
add
sbb
dec
mov
nop
out
or
cmp
cmp
xchg
es
add
les
xor
int3
mov
and
fadds
jecxz
add
or
in
mov
dec
mov
ret
iret
or
add
sbb
iret
adc
inc
outsl
mov
mov
stos
ljmp
inc
add
push
add
adc
shrb
sub
push
out
jl
enter
jle
arpl
and
aam
push
ret
sarb
mov
cmp
push
jge
pop
jp
add
iret
arpl
insb
fdivl
or
adc
ljmp
cmp
nop
jp
xor
inc
lret
or
add
sti
or
or
loope
or
rcll
fmul
add
int
ret
xchg
mov
insb
gs
std
cwtl
cmc
cli
sub
add
fs
dec
ficoms
fstpl
push
push
or
add
dec
fstpt
inc
adc
je
adc
mov
pusha
cmp
xchg
insl
pop
push
pop
jbe
or
es
bound
add
ficomps
cmp
xor
xchg
mov
icebp
xchg
mov
jp
xchg
and
cmp
add
add
mov
push
and
add
mov
jno
cmpsl
movsb
add
outsl
testb
fmuls
inc
push
dec
test
add
cmp
or
mov
or
icebp
pop
jmp
pop
jo
jno
out
add
add
add
fistl
pop
pop
xchg
pop
xchg
ljmp
jbe
inc
jno
scas
enter
out
jmp
adc
dec
aam
jp
and
pop
lds
fnstenv
lret
sbb
mov
cmc
roll
push
pop
cmp
add
inc
inc
fs
and
cmp
mov
push
test
adc
sbb
push
icebp
adc
add
add
shrl
mov
jle
xor
stc
iret
popf
dec
into
scas
imul
jb
mov
add
inc
mov
int3
mov
xor
mov
and
test
and
add
push
fmull
push
xchg
out
rolb
das
fdiv
movsb
popa
inc
pop
movsb
pop
shlb
lods
xchg
xchg
mov
das
ljmp
hlt
movsl
pusha
cmp
or
mov
cli
insl
adc
dec
sahf
adc
add
lret
daa
ljmp
add
mov
add
jb
mov
ret
and
push
sar
test
jns
push
fisubrs
add
add
lods
sar
dec
cli
cs
mov
rcrb
add
inc
jbe
jae
inc
xchg
mov
add
out
clc
mov
lds
fmull
test
cmp
xchg
cmp
add
push
jb
jnp
fidivl
mov
in
push
jge
or
mov
push
fs
add
add
add
outsl
imul
or
add
cmovnp
xor
les
inc
incb
fidivrl
dec
or
jb
adc
mov
add
add
test
testl
xchg
xlat
hlt
sbbb
add
pop
pushf
xchg
std
add
pop
mov
sahf
fmuls
cld
rorb
push
in
add
call
dec
test
xor
mulb
cmpsb
js
out
or
test
fwait
and
sub
add
push
adc
inc
add
add
sahf
add
gs
xor
rorl
movsb
adc
lds
std
jo
fistpll
andl
lcall
mov
int3
fildl
popf
imul
cli
add
jns
mov
sbb
add
scas
addr16
dec
clc
mov
cmc
enter
ret
xor
sub
jne
xor
xlat
mov
into
mov
add
lret
push
cltd
sbb
xchg
fldenv
stos
add
add
jbe
mov
imul
test
mov
lret
pushf
cltd
out
cmp
mov
filds
add
or
xchg
or
cli
cmp
jl
push
mov
add
lahf
rcrb
flds
ret
mov
fistpl
stos
orb
sbb
dec
in
inc
and
loopne
jl
jns
xchg
add
cmp
pop
jae
cs
out
mov
adc
jnp
mov
inc
sarl
add
cwtl
mov
lea
shl
fnstenv
mov
lret
icebp
cld
push
or
test
adc
add
jle
cmp
rcrl
test
lock
add
add
xor
das
out
xchg
out
jbe
xchg
pusha
add
shrl
add
pmaxub
mov
je
pop
sahf
dec
xchg
popf
or
mov
xor
and
scas
xchg
adc
add
enter
js
xorb
add
icebp
dec
subl
rclb
imul
int3
push
cmc
aad
aad
dec
fidivl
dec
cmp
cmp
icebp
mov
rcrb
std
xlat
jae
add
dec
cwtl
push
nop
jne
xchg
testl
lcall
jmp
and
out
xor
test
add
ds
aas
ret
loopne
jle
sti
cli
sbb
add
jo
arpl
cs
pop
mov
sub
mov
mov
add
add
roll
sahf
lock
mov
hlt
add
jle
xchg
xor
mov
xchg
in
stos
sbbl
ficompl
pushf
add
mov
fs
daa
inc
xor
testl
dec
stc
fwait
pop
in
imul
add
movsl
xor
dec
popa
ficoms
test
add
test
push
add
mov
mov
aaa
dec
fiaddl
insb
fists
add
out
les
mov
dec
lock
mov
les
adc
or
dec
pop
push
mov
cmp
xor
ljmp
into
outsl
xchg
stos
stos
pop
pop
mov
jle
pop
mov
add
xchg
into
add
jge
sbb
in
dec
sbb
push
xor
shll
dec
add
add
sar
push
mov
mov
jnp
loopne
loop
stos
cld
add
xor
cs
pop
cwtl
mov
pusha
jp
add
imul
push
sub
ror
pop
aaa
add
sti
leave
loop
xchg
add
mov
les
add
rcr
or
enter
mov
divb
sub
inc
add
popf
add
mov
cmpl
cmc
jne
gs
fsubs
mov
sbb
jo
adc
mov
dec
jo
add
out
sub
arpl
lcall
dec
in
sub
in
popf
fiadds
xchg
push
movsb
pop
dec
add
shlb
pop
xchg
mov
fmul
sbb
add
mov
popf
faddl
xchg
js
sub
jecxz
xchg
out
xchg
icebp
inc
sbb
pusha
outsl
ss
add
int3
and
jg
and
sub
js
das
dec
jecxz
mov
testb
bound
or
sbb
movsl
cld
jbe
cmpsb
loopne
lcall
mov
mov
int3
add
fidivl
adc
sbb
decl
loopne
pop
sti
dec
int
test
add
jb
ljmp
orb
pushf
js
movsl
lahf
dec
out
in
pop
sbb
in
pop
add
stc
jmp
lahf
jmp
fldt
push
xor
jb
insl
or
enter
mov
fmul
mov
jmp
mov
push
sti
ud1
cli
out
mov
out
jo
mov
clc
push
jmp
scas
push
in
ljmp
rcr
pushf
aad
cmc
sbb
nop
pop
inc
mov
stos
xchg
mov
int3
adc
lea
sysenter
mov
fldl
dec
popa
push
clc
dec
jp
mov
cmpsb
add
lahf
cltd
add
sbb
mov
lret
lret
cld
pushf
cwtl
roll
pop
jns
lret
mov
testb
add
lods
mov
mov
aas
mov
lret
push
test
orb
mov
jecxz
movsl
push
jae
add
dec
or
div
pop
iret
fwait
inc
lods
mov
cld
icebp
aam
inc
add
cli
add
arpl
dec
mov
out
add
lahf
cld
hlt
pop
imul
dec
movb
add
mov
ljmp
mov
lods
mov
test
ret
mov
mov
and
add
je
data16
or
stos
test
icebp
cli
add
cwtl
sbb
mov
div
sub
jo
std
faddl
cmp
xchg
jae
and
mov
add
inc
xor
fidivrl
adc
pop
bswap
hlt
xchg
lea
popf
in
sbb
test
mulb
add
dec
pop
clc
dec
add
mov
add
push
jae
add
out
or
enter
xchg
adc
jo
add
cmp
adc
mov
jae
test
les
bound
fiadds
add
fwait
xchg
fsubrl
shll
add
addb
movsl
loope
out
je
or
push
rolb
sbb
dec
push
call
fsub
jle
mov
dec
add
add
out
push
add
pop
stc
adc
jb
xor
mov
dec
sahf
add
arpl
add
add
mov
imul
mov
cmc
insl
jge
add
cli
dec
mov
aam
stos
dec
add
mov
cmp
sub
jmp
pushl
add
lds
pop
es
insl
inc
divb
lods
inc
ret
push
add
jle
sub
pop
add
cld
jg
add
sti
enter
int
cmpsb
sbb
fiadds
cmpsb
in
cli
mov
rcrl
sub
fs
jecxz
xor
cmp
add
jg
or
pop
mov
sbb
fistps
cmpsb
cmp
insb
cli
push
dec
add
imul
call
and
out
jle
add
pop
cmp
jp
add
push
add
insl
ds
int3
cmp
pop
dec
sub
add
ljmp
push
stc
std
add
jne
push
mov
jno
add
add
push
cmp
mov
add
insl
aaa
inc
pushf
jl
push
stos
movsb
repnz
clc
add
shl
dec
pop
mov
pop
adc
push
xchg
mov
sbb
in
data16
xchg
add
add
push
and
decb
xor
adc
cmc
fisttps
aas
adc
iret
push
je
adc
fmulp
mov
sbb
add
add
hlt
shl
pop
mov
fs
add
fcmovne
ja
inc
lcall
xor
loopne
add
movsl
lret
cmp
cmp
pop
cmp
mov
imul
out
mov
ja
add
add
pop
or
and
add
ret
data16
add
cmpsl
or
ret
push
push
jae
repnz
adc
fwait
cmpsb
in
scas
repz
add
xchg
add
movsb
addl
cmpsl
sbb
dec
xchg
xchg
mov
xabort
loopne
sti
roll
sub
add
jae
movsl
aad
or
ja
inc
popl
ret
sub
inc
push
cmp
add
flds
pminub
negl
add
das
and
lret
inc
push
stc
in
add
xchg
shl
jbe
and
decl
in
fwait
or
adc
mov
and
pop
lret
jle
add
sbb
mov
mov
movb
rclb
cld
jno
inc
add
add
pusha
mov
mov
insl
xorb
aaa
jno
in
daa
addl
mov
and
mov
inc
add
lock
mov
cmp
pop
jo
pop
sub
mulb
or
aaa
into
arpl
add
test
cmp
adc
mov
nop
cmp
push
nop
push
fstl
outsl
add
mov
mov
sub
cmc
test
push
imul
movsb
fmulp
in
xorl
lahf
pop
mov
mov
std
loopne
sti
cli
xlat
stos
into
ljmp
insb
add
add
cli
inc
mov
mov
or
stos
xor
pusha
add
test
add
sbb
adc
push
mov
sbbb
flds
std
add
add
add
in
out
mov
in
hlt
pop
add
jns
in
add
or
cmp
add
jb
arpl
mov
xchg
lret
iret
jns
push
iret
xor
pushf
lret
in
ljmp
sbb
add
cmp
iret
xchg
fistl
addb
dec
in
sub
mov
add
adc
inc
add
pop
imul
pusha
les
ljmp
jb
mov
lahf
add
scas
and
cs
cli
test
mov
pop
je
xor
fcmovbe
jg
mov
or
add
leave
inc
cmp
dec
cmpsl
jmp
sbb
jo
mov
pop
clc
ljmp
adc
add
add
jbe
scas
add
lock
jae
loop
popa
hlt
dec
xor
add
mov
jecxz
addl
in
mov
or
xor
into
in
push
jge
sbb
inc
inc
das
jns
out
sahf
mov
orl
adc
adc
daa
jnp
stc
mov
cmp
loop
subl
inc
clc
or
lea
es
out
mov
add
sub
pop
inc
cmpb
push
add
ret
push
cld
int
dec
mov
enter
mov
sub
xor
sub
mov
sbb
xor
aaa
shl
frstor
mov
movsl
repz
cmp
gs
cltd
xor
fisubrs
adc
or
mov
lret
insl
and
jne
push
cmpsl
hlt
popf
or
je
push
or
add
pushw
mov
push
cmp
xchg
add
ja
pop
in
adc
mov
cwtl
aad
gs
mov
mov
sbb
movsl
aas
add
mov
fadds
fnstenv
sbb
aaa
movsb
cmc
inc
iret
out
nop
pop
sbbb
dec
addl
test
mov
sbb
ljmp
mov
or
add
mov
push
add
push
mov
mov
xor
xor
add
xchg
lock
and
push
test
adc
ljmp
popa
dec
lea
pop
gs
dec
add
inc
sbb
aas
rolb
pop
add
scas
pop
es
aam
test
call
cmp
xchg
push
lods
dec
add
clc
xchg
ss
mov
jnp
cmp
xlat
lret
cmc
daa
ret
or
popf
add
push
mov
mov
mov
jge
imul
add
mov
pop
stos
jno
stc
and
scas
add
push
test
dec
pop
into
cmp
in
int3
adc
std
cmpsl
add
add
lret
orb
arpl
mov
mov
cli
cmp
adc
insl
add
xchg
add
shlb
loopne
push
inc
and
mov
lock
cmp
and
movb
xchg
sbb
dec
out
les
test
sbb
sub
xchg
rcll
movsb
push
xchg
out
add
ja
adc
push
out
dec
sub
pushf
cmp
pop
mov
cli
mov
adc
popa
adc
pop
dec
add
sbb
mov
nop
into
xor
cld
inc
fst
hlt
add
roll
fildl
sbb
rcll
sahf
shrd
std
aad
imul
push
sar
sbb
adcl
add
xchg
push
add
add
repz
add
and
popa
into
sbb
popa
movsl
add
sub
repnz
mov
movsl
icebp
add
jle
pusha
fcos
mov
and
add
add
xchg
mov
fbstp
ljmp
sub
sub
sti
insl
jecxz
and
pop
mov
roll
adc
pop
hlt
add
loope
and
add
cld
add
fldenv
dec
xchg
std
cli
push
dec
or
pop
dec
xor
out
ds
das
xor
insl
adc
or
nop
leave
flds
loop,pn
add
sub
sub
mov
add
fst
cmpl
mov
or
cli
pop
rclb
add
push
es
pop
adc
loopne
in
addb
fadds
xor
int3
push
iret
dec
xchg
push
mov
or
push
popf
jp
call
lret
roll
mov
pop
insw
push
jbe
inc
lret
es
cwtl
in
cltd
daa
imul
fldcw
pop
mov
in
add
out
lea
sbb
cwtl
ljmp
mov
iret
rolb
pop
adc
jl
push
dec
std
and
cmp
push
call
xchg
add
jne
mov
loop
jns
pop
loop
lock
add
xor
int
add
xchg
add
push
sbb
push
pop
jo
movsl
clc
mov
add
push
and
jns
xchg
mov
or
mov
adc
push
cmc
add
or
lcall
int
xchg
cmpl
jae
pop
add
jecxz
pop
add
inc
popa
push
shlb
pop
enter
jp
and
insb
mov
int
mov
dec
scas
mov
add
add
pop
or
add
inc
jo
xor
add
js
aad
sbb
in
dec
movl
scas
add
pop
mov
mov
roll
add
add
pop
das
adc
dec
xor
call
and
sbb
add
popa
jle
cmc
add
add
xchg
add
outsl
jp
lret
sbb
arpl
add
lcall
xchg
add
push
mov
jg
incb
mov
jp
mov
repnz
pop
repnz
dec
mov
lcall
icebp
and
push
lods
or
in
fst
dec
jp
pop
adc
lahf
outsb
xchg
in
inc
dec
clc
inc
cs
push
iret
mov
cmp
add
add
insl
or
sub
cli
pop
and
negl
and
sbb
das
push
add
dec
mov
xchg
inc
adc
pop
mov
mov
scas
xchg
jne
sarl
adc
adc
or
sbb
movsl
or
dec
filds
idivb
jno
inc
xchg
jns
movsl
mov
jg
push
push
repnz
adc
movsb
inc
mov
cs
movsb
jae
je
add
push
mov
sbb
xorb
sub
mov
push
xchg
faddl
shlb
loopne
cmpb
ss
rolb
js
xchg
add
nop
pop
fldl
hlt
inc
xlat
jnp
insl
pop
cmpsb
and
daa
hlt
push
xor
push
fsubr
mov
add
push
jne
xchg
movsb
out
add
sahf
inc
add
mov
jns
psubusw
cmc
xor
or
sub
lret
jb
shlb
or
sub
addl
pop
repz
cmp
dec
scas
rolb
cmp
cmp
ja
sub
popa
negl
sahf
sbb
iret
add
or
push
xlat
mov
arpl
push
aam
push
xor
pop
push
xchg
idivb
add
xchg
sbb
pop
add
add
add
add
shlb
add
addl
xor
test
mov
pop
lods
pop
xor
mov
xchg
cltd
xor
sbb
ds
call
add
mov
insl
inc
pop
iret
ds
add
lods
outsb
dec
jae
stos
cmpsb
push
dec
aam
push
mov
push
mov
xor
dec
addl
mov
dec
or
ret
push
inc
ljmp
lock
jl
inc
add
int3
das
xor
jge
ljmp
add
pop
data16
aad
inc
add
jle
mov
sub
fnstsw
add
aas
notl
push
into
xchg
pop
ret
inc
and
dec
lret
imul
add
call
ficoml
inc
dec
and
or
mov
push
mov
xor
in
cmp
imul
test
std
insl
mov
addr16
sub
inc
push
leave
or
nop
add
cld
xchg
jg
aad
imul
lcall
inc
mov
nopl
cli
inc
add
jle
pop
ljmp
or
xchg
test
mov
jmp
js
scas
jno
sbb
mull
and
sbb
inc
xchg
loopne
cmp
daa
mov
dec
mov
adc
repnz
mov
loope
add
addl
gs
fcmovnbe
and
mov
add
rorb
add
inc
arpl
and
add
stos
int3
lahf
pop
ret
mov
add
xor
and
add
pop
push
jae
add
cmp
mov
add
lea
add
add
cld
scas
sahf
sarl
sbb
add
cwtl
outsb
std
dec
add
cmp
mov
in
jno
mov
call
shll
or
pop
addb
loope
repnz
mov
push
pop
add
xchg
jecxz
xchg
mov
clc
add
xlat
stos
icebp
aas
lahf
add
pop
test
mov
sub
push
jmp
and
xor
xchg
add
orl
aam
mov
stc
inc
sub
gs
bound
dec
add
movsb
adc
lds
add
cmp
add
and
add
add
add
add
loop
jbe
push
addr16
inc
xchg
adc
add
popf
add
filds
add
out
icebp
cld
xorl
push
sub
adc
out
add
fwait
cmp
cmp
and
data16
jmp
add
call
pop
pop
pop
adc
push
add
in
sbb
out
ror
push
sbb
fstps
dec
pcmpgtd
insl
dec
add
add
mov
insl
ds
fists
adc
jmp
xor
xor
jecxz
mov
frstor
enter
mov
insb
shl
adc
adc
jge
mov
and
adc
ret
adc
jae
pop
pop
pop
int3
pop
jge
aad
out
bound
mov
pop
shlb
ljmp
sahf
shrl
add
fldl
xor
out
add
and
scas
add
mov
add
jne
xchg
testb
mov
adc
hlt
push
rcl
add
movb
les
andb
push
push
cmpsl
bound
cmp
adc
add
in
xlat
nop
adc
pop
mov
mov
sbb
xor
dec
add
add
push
push
mov
negb
pop
mov
loopne
push
hlt
lods
xlat
ret
xor
and
pop
cmp
ficomps
inc
loope
mov
add
xacquire
fiaddl
mov
jns
lret
jp
inc
daa
sbb
sarl
inc
or
xor
add
adc
das
push
lcall
xlat
mov
pop
push
dec
in
cld
popf
imul
pop
das
sahf
push
add
pop
outsb
cmc
add
jmp
aas
repnz
test
lods
or
ret
mov
loop
shrb
add
add
out
add
in
pop
jb
pop
insl
and
mov
sub
mov
xchg
and
in
mov
sbb
stc
add
and
int
popf
sti
dec
mov
leave
or
adc
mov
cltd
dec
movsl
push
add
adc
pop
xor
inc
add
enter
push
mov
adcb
add
cwtl
sub
push
testb
fmuls
mov
pop
movsb
clc
push
cmp
jae
insb
xchg
add
pop
outsl
pop
pop
jmp
sbbb
mov
stos
pop
sbb
aad
lcall
pop
push
dec
fcomps
out
lret
inc
cli
add
scas
push
jb
ljmp
sbb
fdivs
push
add
pop
mov
mov
jbe
add
mov
fcmovne
dec
sub
lock
cwtl
std
adc
in
test
mov
mov
push
inc
cvtpi2ps
cs
mov
push
adc
sbb
and
sub
repnz
lods
popf
jno
sub
frstor
shlb
or
xchg
cmp
dec
fidivs
jo
movsl
in
pop
jmp
mov
insl
xchg
cmpsb
dec
inc
mov
mov
add
cld
pop
pop
fdivrl
sahf
push
fisubs
dec
flds
lods
cmp
es
lahf
xchg
pop
sti
mov
xchg
dec
adc
xchg
sub
inc
es
push
outsl
arpl
push
push
int
cmp
push
mov
dec
sub
test
sbb
outsb
mov
sbb
add
pop
xchg
inc
push
sub
fistpl
or
lea
sbbb
cs
shr
jo
cmp
add
adc
test
jo
rclb
add
inc
arpl
add
test
or
mov
pop
add
ds
pop
pop
insb
add
mov
js
outsl
add
nop
adc
xchg
ret
mov
push
enter
stc
pop
hlt
add
fstp
dec
xorb
add
in
mov
or
testl
dec
add
jnp
xchg
addr16
and
cmp
xor
cmc
push
push
jnp
sub
add
xchg
mov
cld
dec
sub
cmpsl
pop
loope
pusha
add
andl
cli
adc
dec
lcall
push
ficompl
sbb
jns
and
inc
push
xor
push
jecxz
inc
and
mov
popa
cli
nop
add
int3
inc
add
jle
dec
pop
stc
iret
sbb
add
arpl
scas
std
add
xchg
sub
add
add
mov
mov
and
cmp
adc
sub
mov
imull
sub
xor
pop
pop
mov
insl
cmc
mov
es
push
aaa
mov
test
outsb
mov
enter
add
cmp
jb
jg
outsb
imul
popl
sub
insl
jmp
pop
cmpsb
lss
adc
add
in
js
cld
push
mov
mov
add
inc
xchg
sub
sarb
faddl
mov
pop
mov
cld
js
arpl
mov
lcall
adc
xchg
add
add
xchg
pop
inc
mov
test
fstpt
ja
mov
push
jmp
xor
jg
les
xchg
cltd
or
push
hlt
sbb
lea
push
andl
inc
xchg
bound
aas
lahf
aaa
cmp
movsb
aaa
inc
pop
add
adc
jno
lods
mov
cmp
stos
fldt
xchg
xor
inc
clc
add
xchg
popf
insb
push
pop
add
add
add
adc
divb
adc
xchg
mov
cli
rcrl
jl
filds
lods
add
arpl
add
adc
scas
out
xchg
arpl
shlb
ja
andl
out
mov
add
test
add
loopne
cmpsl
xchg
mov
and
dec
push
pop
out
fs
sar
into
in
cmp
mov
outsl
push
shrb
xchg
popa
add
stos
push
sahf
and
and
xorl
inc
push
pop
pushf
rcrb
xor
mov
popf
decb
mov
repnz
push
inc
int3
add
jmp
xchg
lret
out
adc
jecxz
jp
add
dec
add
push
mov
and
cltd
aas
leave
mov
es
push
jb
iret
je
mov
inc
inc
aad
inc
movsl
xor
push
add
jmp
jnp
pop
add
popa
mov
sub
adc
add
xchg
inc
idiv
pop
stos
dec
fs
cmpsb
add
add
add
lret
add
lods
jle
add
and
jp
mov
sub
xchg
and
fidivrs
in
cmp
ret
cmc
incl
scas
xlat
ret
les
xor
outsb
mov
es
inc
sti
aas
dec
daa
add
ljmp
imul
aas
jge
add
dec
xchg
mov
xchg
adc
push
pop
xchg
add
sbb
jg
pop
movd
enter
or
cmc
mov
xor
add
mov
add
js
pop
adc
jb
mov
jnp
mov
inc
jle
push
bound
cltd
xor
add
ficompl
fidivrl
ljmp
mov
push
xchg
add
cmpsl
or
push
adc
pop
cmp
loop
dec
dec
xor
popa
inc
adc
mov
add
cmp
cmpsb
mov
shlb
outsb
ret
cmp
mov
imul
push
outsl
popl
add
jbe
cmp
fwait
movsl
mov
add
add
xchg
mov
lods
je
sbb
add
add
add
sbb
jmp
test
xchg
push
push
add
add
xchg
outsl
add
mov
jl
in
lds
or
jae
add
out
arpl
cmp
or
movsb
push
sbb
mul
push
sbb
aaa
jmp
je
aas
jns
cmc
jne
sbb
dec
fisubs
jb
lahf
or
pop
lock
cmp
jmp
mov
dec
xchg
lahf
add
mov
xor
dec
lret
out
cmp
cmp
pop
scas
add
loop
icebp
subb
add
xor
out
xor
add
inc
lea
ret
cmp
and
cmp
push
add
jl
fs
mov
mov
jp
sub
cmp
add
add
add
jmp
and
sbb
jb
repz
hlt
mov
lcall
in
jb
add
test
push
jns
cwtl
std
mov
sub
mov
pop
leave
add
mov
mov
and
mov
fs
xchg
dec
inc
add
shlb
cmpsb
rcll
add
addr16
push
test
leave
adc
add
stc
cmp
jle
sub
fstl
data16
dec
push
xchg
mov
add
add
add
fistl
clc
sub
stc
imul
add
add
leave
xlat
bound
stos
cs
xchg
je
leave
mov
dec
jmp
ss
adc
lods
add
cmp
sbb
dec
add
add
add
push
jns
jp
add
ret
add
stos
sub
cmp
push
xchg
fmull
push
push
cmp
push
jge
int3
sbb
loopne
arpl
movsb
sbb
outsl
cmpsb
xchg
push
fstpt
fstps
sbb
mov
add
add
jge
enter
add
cmp
mov
pop
pop
filds
or
mov
jno
js
jns
mov
call
jp
cmp
or
pop
jno
add
incl
int3
enter
pop
push
adc
push
insb
add
dec
add
fstps
cmp
arpl
inc
sub
lahf
add
push
or
out
lods
les
cmp
add
mov
cmpsb
mov
mov
in
xchg
cwtl
push
popa
sub
adc
negl
imul
push
das
sub
push
mov
sub
ret
dec
add
adc
test
popa
mov
xchg
js
jecxz
cli
or
sti
jmp
inc
inc
cmpsb
gs
mov
popa
imul
mov
test
sub
mov
insb
adc
or
cmp
pop
pop
add
or
test
scas
xor
jae
inc
add
pop
fdivrl
add
addr16
test
js
sbb
add
cmpsl
xor
inc
lahf
xorb
and
jae
add
jg
xchg
ffreep
cmp
pop
add
daa
mov
mov
mov
jbe
out
sub
fwait
mov
adc
add
shl
mov
jg
add
pop
xchg
xchg
enter
aas
dec
and
lea
dec
mov
mov
leave
xchg
xchg
xchg
mov
mov
push
sub
xchg
movsl
add
popf
incb
xchg
push
repz
notb
in
add
or
data16
clc
add
cs
sbb
adc
sahf
add
data16
pop
mov
and
mov
shrl
js
out
fadd
loop
outsb
test
cmpsb
in
lret
pop
xchg
pop
or
adc
movsl
mov
sbb
or
adc
into
clc
nop
lods
sbb
adc
cmp
mov
add
sub
pop
xchg
add
sub
rclb
xlat
jb
rcrl
add
iret
add
pop
insb
cmp
fs
addr16
lods
sbb
jl
cmp
add
or
inc
jae
aad
add
jl
push
outsb
es
pusha
ret
loop
ret
clc
push
or
insl
mov
jp
jo
jno
fdivr
test
push
les
add
dec
fbstp
int
imul
push
inc
lret
xchg
xchg
insb
add
push
mov
push
sub
repz
lock
mov
jns
aas
imul
mov
lods
add
add
add
cld
pop
lds
push
xchg
add
jns
dec
add
fstpt
sub
btc
cs
enter
shlb
cmp
movsl
adc
jg
jmp
fmull
adc
test
add
das
xorl
jl
jle
inc
enter
mov
les
push
and
cltd
or
in
jnp
mov
add
orl
xchg
pop
mov
pop
push
popf
cmp
and
and
or
or
cmpsl
sub
add
mov
mov
dec
enter
mov
insl
fists
or
aaa
add
mov
push
int
sbb
adc
fisubs
dec
push
fmuls
repz
out
aam
mov
icebp
mov
lcall
mov
filds
ljmp
icebp
dec
shrl
add
dec
repz
addb
mov
rcrb
sarb
ficompl
xchg
inc
pusha
hlt
add
dec
outsb
add
out
filds
and
std
call
dec
cs
cmp
and
mov
lcall
xchg
mov
cli
mov
mov
scas
in
std
inc
inc
add
jmp
js
push
add
add
dec
mov
add
sti
or
ror
add
sbb
js
add
xchg
add
ds
dec
ret
jg
es
and
add
mov
leave
shlb
int3
jp
mov
nop
sub
pop
jno
gs
add
iret
add
stos
pusha
sarl
divb
xor
fwait
sbb
insl
je
pop
cmp
inc
add
xchg
xor
add
fs
jg
mov
testb
mov
in
shlb
push
fcompl
scas
aas
add
add
dec
imul
scas
scas
sub
pusha
sbb
dec
mov
ror
out
mov
loope
int3
xlat
mov
xor
xchg
cltd
mov
push
add
cwtl
sub
sbb
mov
add
add
mov
dec
pop
mov
ljmp
push
arpl
sbb
pop
add
jecxz
and
jb
or
cmp
test
mov
sti
mov
shlb
mov
arpl
push
mov
in
testb
pop
jge
lcall
dec
xchg
mov
cmp
out
cwtl
sahf
xchg
mov
push
push
add
sub
daa
adc
xchg
insb
arpl
lock
dec
add
or
add
jno
je
xchg
add
mov
pop
dec
sbb
filds
jne
ret
jge
add
jbe
jecxz
scas
flds
cwtl
fucomi
jno
pop
stos
xchg
and
sub
add
repz
sbb
adc
arpl
adc
jle
sti
add
add
daa
mov
mov
add
sbb
and
out
mov
mov
mov
pop
lahf
jne
xchg
insl
out
hlt
cmpsl
jae
cmp
pop
push
add
sbb
mov
in
js
add
popf
rorl
and
aad
mov
je
mov
fs
or
int3
fmuls
adc
fsubrp
fcomip
shrb
add
add
adc
rcrb
add
stc
imul
add
fisttpl
add
cmp
insl
nop
sbb
popa
in
xchg
roll
or
andl
add
cmp
daa
fs
lods
jb
pop
mov
jl
mov
mov
xor
or
cmc
das
lcall
add
sbb
pushf
out
incb
mov
clc
adc
push
fcomip
shlb
loop
mov
dec
inc
mov
cmp
add
add
sub
mov
xor
cmp
or
and
add
mov
add
js
xor
xorb
xchg
sub
dec
filds
sbb
addr16
ret
test
push
add
pop
sbb
add
mov
aas
std
add
outsl
xchg
mov
sub
mov
outsl
les
into
inc
lahf
xor
mov
mov
sbb
dec
rorb
sarb
mov
cltd
shld
jg
hlt
add
loopne
imul
clc
rol
add
add
arpl
cmp
dec
cmp
jbe
fwait
jl
sub
cmpsl
in
cwtl
lock
xchg
add
xchg
lret
jmp
scas
inc
add
dec
rorb
dec
cmp
cld
cltd
pop
sub
int
add
push
in
movsb
mov
add
test
add
scas
push
ljmp
add
std
loope
mov
jae
pop
test
scas
mov
fcmovne
popf
dec
add
out
shrl
push
xchg
icebp
dec
jl
mov
push
jle
int3
sub
je
es
leave
imul
into
pop
shll
xor
sub
cld
sub
xor
cwtl
testl
xchg
mov
add
pop
mov
xor
dec
mov
ret
inc
jo
push
fdivrl
les
mov
sbb
lods
add
or
pop
das
insb
test
adc
outsl
gs
das
call
mov
cmp
sti
js
add
mov
xor
xor
xchg
mov
or
je
and
test
ret
add
xor
mov
adc
lods
jle
mov
pop
shrl
mov
fmul
add
mov
cmp
pop
sbb
fsubs
std
test
test
inc
add
les
cmc
cmp
or
cmp
aam
jecxz
ret
imul
add
orl
mov
ds
jae
dec
push
add
and
or
imul
add
and
adc
xor
pop
repz
xor
add
mov
lcall
xchg
inc
loop
add
fs
lea
scas
jno
fcmovne
xor
mov
xchg
pop
add
ljmp
or
outsl
xor
in
xor
lret
push
pusha
mov
jbe
mov
pop
jmp
sub
jp
lret
cmpsl
sub
xchg
jno
imul
add
movsl
dec
mov
fwait
jecxz
shl
push
movsl
cmpxchg
test
add
xchg
mov
pusha
jo
push
gs
mov
subl
fwait
cmc
pop
dec
add
clc
shrl
push
add
dec
mov
inc
mov
or
call
insb
stos
mov
stos
repz
lock
pop
inc
aas
mov
mov
inc
jne
lret
fldl
mov
add
or
cli
cmpsb
divl
xchg
in
daa
stos
ficoml
and
inc
mov
addr16
add
adc
add
jo
jge
enter
ljmp
outsl
or
dec
ret
data16
mov
pushl
xchg
fwait
fsubrl
inc
adc
add
movsb
dec
js
pop
leave
les
mov
pop
pop
lret
push
add
dec
jle
xor
test
jne
pop
mov
dec
mov
clc
inc
cmp
add
stos
push
das
add
test
jne
int
jp
imul
out
cmp
inc
sbb
and
mov
cwtl
adc
pop
test
iret
sub
das
inc
in
sub
and
js
in
jge
pushf
mov
mov
mov
push
aaa
sub
sarb
cld
inc
pop
cwtl
dec
xchg
cli
mov
xchg
add
mov
push
add
or
mov
add
mov
add
std
dec
test
push
adc
lods
xchg
ret
add
jmp
add
cmp
mov
ja
cmp
int3
scas
repz
pop
jmp
jae
mov
cmp
add
out
cld
mov
pop
mov
arpl
divl
daa
pushf
std
inc
cmp
jno
adc
mull
pop
sub
sbb
out
jbe
or
mov
dec
test
jl
out
adc
scas
popl
aas
pusha
sbb
daa
aaa
hlt
cmp
add
sbb
ret
out
sbb
test
test
stc
inc
xchg
cmp
mov
arpl
add
mov
pushf
shll
add
sub
jo
add
push
add
inc
insl
sbb
sub
mov
jmp
daa
int3
mov
jnp
imul
gs
pop
stos
popa
add
or
add
jbe
sbb
jae
xchg
inc
mov
add
mov
mov
test
in
out
cwtl
pusha
out
mov
dec
push
mov
xor
pusha
add
push
xor
int3
and
adc
pusha
dec
adc
or
dec
jo
add
xor
mov
jge
jnp
mov
and
push
add
je
fisubl
aad
add
dec
jmp
fdivl
aad
xchg
dec
lock
add
push
xlat
or
int
mov
mov
lds
fcoml
imul
cmp
in
ret
xchg
icebp
sbb
fadds
mov
sbb
scas
xchg
stos
pop
fs
fsqrt
ret
jmp
dec
add
outsb
add
aaa
and
add
ds
mov
cmp
pushf
jp
mov
pop
xchg
sti
inc
adc
gs
cmc
out
sar
mov
mov
xor
rolb
jg
insl
imul
data16
pop
jns
cs
movsb
stos
or
dec
pop
add
xor
mov
adc
jge
ja
add
fistpll
and
lds
and
sbbb
push
lcall
push
mov
int3
inc
popl
adc
sub
aam
mov
xchg
aas
js
lcall
test
insb
add
test
push
push
scas
push
lcall
push
mov
rcrb
ret
insl
sti
and
data16
out
push
loopne
aam
popf
fildl
inc
xchg
sbb
push
rolb
add
addl
shr
and
leave
bound
imul
outsl
adc
ret
xchg
xor
push
mov
jecxz
add
pop
add
faddl
dec
adc
pop
ss
movsb
fwait
add
push
clc
aas
pop
jb
pop
dec
add
sahf
xor
insl
add
es
das
pop
or
xchg
stos
loope
add
dec
pop
add
cmp
add
outsb
push
jns
outsl
add
mov
ljmp
inc
lock
clc
push
inc
mov
es
sub
shrb
cli
dec
int3
sbb
lods
lea
movsb
mov
in
and
aam
and
push
pop
mov
and
ds
sub
jge
sub
push
add
sbb
push
add
inc
shl
out
adc
out
pop
xor
inc
bound
push
mov
inc
scas
xorb
in
cmc
mov
jle
xchg
dec
and
imulb
dec
fdivrl
mov
jo
pop
push
shlb
add
in
fs
shl
and
sbb
mov
dec
push
sti
add
xchg
aas
ljmp
lcall
incb
sbb
mov
stos
int
push
ljmp
push
out
push
xor
mov
dec
arpl
dec
int3
outsl
std
es
ljmp
inc
xchg
inc
dec
insb
add
jecxz
mov
sbb
rorl
mov
es
or
jp
jp
arpl
mov
push
cmp
add
pop
push
dec
xlat
jbe
repnz
pop
shll
cmc
adc
pop
sub
stc
ds
adc
xchg
push
pop
shl
rcl
add
inc
and
mov
les
jno
loopne
cld
mov
rorb
or
add
jb
add
pop
insb
das
xchg
mov
std
add
push
pop
jne
add
add
out
add
cwtl
js
pop
pop
or
divl
lret
fs
lret
mov
add
pop
clc
in
add
push
add
fucompp
mov
add
add
roll
dec
int
xchg
test
enter
pusha
inc
pop
add
xchg
mov
push
push
add
xor
out
and
lea
rcrl
xlat
test
imul
push
loop
push
dec
push
push
or
int3
lahf
dec
add
sub
add
add
pusha
hlt
daa
mov
adc
mov
cmp
pop
mov
adc
je
lods
pop
mov
sbb
xchg
adc
fsubrl
daa
je
popf
incl
loop
jle
adc
cmp
push
push
ljmp
and
cld
divl
js
imul
or
add
retw
dec
add
xchg
jae
xorb
adc
cmc
add
loopne
pop
fs
inc
call
mov
add
pop
mov
imul
dec
pop
pop
push
mov
cmp
jmp
sti
xor
mov
rolb
ss
sbbb
in
sti
jno
inc
cltd
add
sub
mov
incb
mov
and
jmp
push
mov
cli
and
add
lods
mov
outsb
push
sbb
inc
sbb
sbb
rol
xchg
fwait
mull
xchg
adc
cmp
mov
and
mov
add
xchg
push
lcall
in
dec
ss
lods
out
dec
dec
lods
leave
push
jnp,pn
jo
xchg
js
insl
mov
loopne
jbe
ljmp
adcl
daa
inc
mov
jno
loopne
mov
push
mov
add
subb
add
test
mov
sbb
adc
add
dec
sbb
xor
add
rcl
ljmp
aam
jle
cmp
or
add
jbe
jnp
scas
dec
push
jp
xor
aaa
jae
loop
gs
add
das
ret
mov
mov
and
clc
testb
dec
or
dec
add
add
sbb
adc
in
es
fcompl
pop
data16
iret
or
add
mov
pop
add
pop
xchg
mov
sub
ljmp
mov
out
das
sti
cli
lods
xlat
aaa
add
nop
inc
nop
in
add
mov
mull
pop
add
leave
cltd
ds
mov
cmp
cmp
out
push
cltd
sub
pop
push
add
jmp
add
add
incb
xchg
add
mov
mov
test
and
mov
or
pop
fwait
add
and
div
adc
cmp
add
xchg
cmc
lock
mov
jbe
shrb
xor
in
pop
loope
popf
sbb
scas
mov
flds
cmp
sahf
jno
sbb
sub
sub
loope
sbb
aam
mov
xor
loopne
aad
push
mov
add
adc
push
js
add
mov
verw
xchg
sub
jmp
ret
or
or
imul
sub
test
das
loop
push
ljmp
fwait
mov
popa
xchg
cli
adc
cmp
xor
jo
sbb
dec
lret
add
add
pop
sbb
mov
add
dec
out
xor
sti
imulb
out
push
ficoml
icebp
xchg
outsb
test
add
stos
adc
xor
popf
je
inc
add
jo
cmp
adc
jae
loope
test
popa
cld
enter
xor
xor
inc
add
add
adc
cmpsl
stc
push
xchg
add
adc
pop
cwtl
adc
jmp
idiv
pushl
dec
add
repz
imulb
jecxz
add
and
lea
cmp
ss
test
cmp
add
push
fldenv
je
sbb
adc
adc
lea
xchg
sub
sbb
repnz
pop
jmp
add
scas
mov
and
add
sbb
jne
cmp
clc
dec
jae
add
inc
pop
cmpsb
dec
sub
lods
cld
mov
std
xor
pusha
add
js
adc
arpl
and
das
or
fcom
jnp
push
xchg
ljmp
cmpsb
fs
add
or
add
pop
in
imul
push
cmpsb
dec
aam
add
gs
xchg
sbb
sti
dec
inc
push
lret
push
test
lcall
mov
add
pop
mov
xor
adc
xchg
clc
lods
dec
jb
mov
sti
jns
mov
or
or
mov
xchg
pop
sub
sarl
and
add
mov
stos
mov
pop
add
daa
mov
mov
pusha
cmpsl
jl
sbb
mov
arpl
ret
bound
mov
leave
leave
fcmove
out
pop
aaa
lahf
add
add
sbb
add
jmp
or
lahf
lret
jge
call
fsub
jp
add
flds
xor
xor
xor
adc
insl
add
mov
fldl
push
or
mov
xchg
mov
dec
das
sbb
sbb
push
dec
xor
outsb
add
or
test
jns
test
add
pop
mov
adc
add
imul
fisttps
sbb
jbe
lock
cwtl
push
data16
add
hlt
cmp
push
jns
sbb
aas
dec
pushf
fs
mov
lret
cwtl
test
xchg
in
cmp
cltd
das
lds
add
dec
pop
in
shlb
mov
or
xor
stos
mov
aas
imul
add
stc
jp
pop
push
jo
xchg
mov
lods
ret
gs
mov
push
mov
mov
add
xchg
sub
pop
or
push
mov
mov
ss
xchg
ds
in
insl
aam
add
sbb
cltd
add
lret
lods
add
dec
cmp
pop
roll
pusha
pop
mov
int
sti
test
sbb
roll
cs
pusha
inc
rorl
movb
xchg
ja
shl
mov
int
lods
push
add
jmp
xchg
stos
add
dec
leave
repnz
and
insl
andb
adc
inc
mov
push
ret
mov
addr16
addr16
dec
cmp
add
loop
stos
nop
pop
cmpsl
test
movsl
ret
push
sti
shrl
mov
jnp
mov
add
jae
ljmp
imul
push
cmpsb
add
dec
pop
cmpsl
fimull
mov
or
push
inc
add
cmc
sub
aas
imul
daa
mov
and
jb
ss
jl
imul
push
push
leave
ss
pop
cwtl
add
mov
push
mull
negb
xorb
out
pop
add
inc
add
or
mov
add
and
insl
adc
jecxz
push
xchg
lcall
iret
arpl
add
cwtl
icebp
ja
or
mov
xchg
lea
in
pop
test
in
jge
xchg
mov
imul
add
hlt
sbb
push
dec
adc
popf
sbb
mov
bound
mov
mov
add
orl
add
add
adcb
push
push
cmp
lock
add
add
rolb
ret
rolb
xchg
ss
jno
mov
lahf
adc
sbbb
pop
nop
popf
inc
add
mov
sti
pop
pop
lock
incl
lret
sbbb
aaa
add
call
nop
cwtl
fisubs
aas
or
or
pop
and
add
or
mov
or
add
xchg
inc
and
mov
jb
jl
mov
inc
add
cmpl
inc
fnstcw
dec
sub
jae
add
dec
imul
add
rclb
fiadds
add
ret
add
cmpsl
rcrb
and
add
cmp
das
int3
out
mov
das
mov
lods
adc
sbb
jge
mov
out
add
push
rolb
lea
cmp
loopne
das
lods
mov
lock
add
in
lret
mov
fs
jl
xchg
int3
add
adc
adc
test
add
daa
add
mov
mov
test
pushf
pop
jb
jbe
add
ss
pop
in
xchg
in
fisubrl
mov
push
mov
shlb
push
adc
xchg
add
or
fcmovbe
add
add
addr16
je
cwtl
mov
pusha
add
roll
bound
xchg
ljmp
ljmp
call
add
lock
inc
add
icebp
mov
add
push
stos
faddl
add
or
fcom
scas
sti
cmp
push
and
push
sbb
int3
push
out
outsl
loop
push
lods
or
ds
xor
inc
add
in
fwait
jb
or
lret
fcom
bnd
push
pop
jno
mov
push
pop
inc
subb
push
call
ret
fs
mov
roll
mov
add
push
add
fcmovbe
fcompl
sub
popa
test
xor
dec
loopne
out
mov
xchg
in
xchg
insb
inc
dec
add
fnstenv
lret
iret
subb
scas
dec
add
and
shrl
fsts
add
add
adc
aas
mov
cmp
push
xor
inc
xchg
xchg
mov
js
sub
pop
imul
sbb
xchg
pop
daa
add
sub
movsl
dec
jns
arpl
lcall
add
fstpl
jae
mov
mov
cld
inc
jge
push
add
push
popa
out
or
jp
xchg
aam
out
popf
cli
ljmp
lods
add
loope
and
jo
xchg
mov
movsb
ret
sarb
add
daa
xor
xor
push
mov
lds
in
add
push
addb
add
jns
jne
cmp
cmp
es
ljmp
add
add
add
addb
stos
sbb
ja
sbb
and
push
std
mov
mov
or
mov
scas
add
mov
xor
jl
jmp
add
jp
pop
adc
js
xor
jge
enter
mov
rol
sub
inc
icebp
add
in
xchg
into
cmpl
add
in
or
movsl
mov
stos
subb
addl
cs
push
pop
cmc
and
add
add
sub
xor
cmp
roll
jl
add
push
int
cmpsb
mov
inc
add
les
sub
push
adc
or
xor
add
add
ljmp
jle
and
bound
sbb
leave
idivb
je
cli
pop
out
jo
sub
in
loopne
addb
movsl
sub
inc
test
pushf
xchg
add
add
sbb
sbb
pop
mov
sub
fimuls
std
xor
sub
rol
or
adc
insb
mov
mov
add
add
mov
jb
out
cltd
mov
leave
sbb
add
movsb
mov
add
adc
fistps
push
add
outsb
push
mov
dec
or
jns
mov
test
ljmp
dec
insb
repz
xor
in
pop
mov
in
add
cs
repz
adc
sahf
jae
add
add
aas
cld
and
shrb
jmp
cmp
add
sbbl
adc
js
pop
scas
lret
add
inc
push
mov
adc
int3
leave
jmp
scas
inc
out
call
dec
mov
xchg
dec
push
fimuls
and
addr16
je
in
pop
js
popf
mov
shlb
mov
dec
fs
jle
mov
inc
add
xchg
mov
dec
inc
jnp
add
pop
adc
fsubrl
sti
sub
ljmp
cmpsb
sahf
add
pop
mov
push
cmp
dec
pop
scas
in
int3
fdivl
insb
sub
out
fimull
mov
je
stos
add
cli
test
je
inc
out
sub
test
scas
sub
leave
repnz
arpl
int
rorl
sbb
scas
add
leave
sub
pop
add
lret
mov
dec
pop
jno
add
je
pop
stc
add
pop
xor
mov
jnp
pop
sub
jne
jnp
add
jp
push
fmul
mov
movsl
mov
gs
cmp
add
pushf
adc
sbb
jno
imul
mov
push
mov
lret
add
cmp
add
loopne
jl
xchg
mov
xchg
add
clc
adc
mov
pop
cld
inc
xor
gs
fstpl
enter
jnp
push
or
add
test
pop
fiaddl
adcb
repz
or
dec
mov
add
leave
pop
mov
push
mov
leave
pusha
sbb
add
push
xchg
packsswb
sub
imul
mov
push
inc
je
repz
push
gs
sub
add
cmp
lret
idiv
mov
and
adc
push
scas
cmp
add
inc
js
movsb
inc
and
mov
pop
cli
cmp
push
add
mov
adc
mov
xchg
sbb
dec
enter
mov
mov
daa
xchg
out
pop
pop
mov
pop
add
hlt
inc
dec
jnp
sub
sbb
mov
xchg
xchg
or
add
hlt
dec
cmp
outsl
inc
jns
lods
add
xchg
pop
pushf
add
loopne
out
cmc
mull
ror
add
dec
xor
inc
shlb
add
sbb
xchg
mov
adc
mov
add
adc
add
and
add
jmp
dec
loope
adc
enter
sbb
xchg
wrmsr
adc
push
mov
mov
hlt
xchg
lret
ljmp
in
repnz
xchg
mov
dec
add
pop
dec
gs
jns,pn
adc
and
add
jbe
mov
sub
fistps
jae
add
les
movsb
mov
insb
push
adc
add
rolb
pop
inc
push
add
ljmp
testb
stos
xor
mov
sub
add
stos
and
xor
sbb
scas
add
out
sarl
test
popf
and
in
or
mov
test
add
fidivrs
add
and
fnstsw
movq
imul
push
test
sbb
mov
call
daa
rcl
mov
dec
je
jno
adc
and
sub
aam
mov
into
add
xlat
roll
xor
add
jle
push
dec
add
cmp
clc
test
enter
mov
mov
jno
push
or
inc
loope
adc
xchg
aad
loope
mov
in
in
sbb
stos
cmp
mov
add
mov
add
push
lds
stos
jg
popa
add
add
cld
or
add
and
in
data16
pop
cmpl
jno
sub
rol
sbb
push
subl
dec
cmpsl
stos
mov
aaa
pop
scas
adc
test
aaa
mov
js
sbb
shll
xchg
les
aas
fs
inc
notb
nop
sub
cltd
data16
iret
jmp
lret
push
rcrl
subl
add
dec
jno
into
cmpsl
or
or
popa
sbb
sbb
xchg
outsl
cmp
cs
lds
add
in
repnz
cmp
push
xchg
notb
mov
add
mov
cmpsl
cmp
scas
ds
sbb
add
mov
popf
insl
xor
mov
pushf
mov
push
mov
adc
mov
inc
subb
xor
xchg
fdivp
push
jge
sbb
outsb
data16
add
add
das
out
add
mov
push
dec
push
pushf
push
lret
out
frstor
or
fmul
sub
je
add
movsb
je
insl
stos
push
inc
es
xlat
gs
add
xlat
iret
ret
sbb
xchg
je
add
push
dec
sti
mov
xchg
push
jecxz
xchg
sbb
add
cmp
jmp
xor
add
jle
dec
lcall
and
clc
push
and
add
aaa
cmp
jg
pop
sub
mov
mov
fadds
add
ds
mov
repz
stc
lods
and
inc
and
cmp
mov
add
cli
add
dec
cmp
cmp
xchg
adc
add
add
dec
or
sbbb
add
add
or
loopne
pusha
ds
fimuls
js
cmp
cmp
cmp
or
cmpsl
pop
jo
ljmp
add
mov
js
lcall
movsl
in
inc
dec
fdivp
push
dec
jg
in
add
add
add
inc
js
cmp
dec
mov
jo
ds
add
add
cmpsb
add
mov
mov
iret
add
jne
mov
loope
add
push
sub
or
sub
add
adc
sbbb
inc
jnp
adc
sahf
pop
mov
add
add
dec
out
call
push
lcall
push
mov
jb
nop
aaa
and
pop
xor
mov
add
push
cmp
es
xchg
xchg
pop
add
xor
dec
add
arpl
sbb
push
pop
push
adc
xchg
add
cmpsb
stc
dec
add
add
inc
shll
fwait
add
xchg
jbe
add
add
sub
mov
and
add
cmp
lret
insl
and
fmuls
sarb
rcl
or
push
jb
mov
mov
and
add
push
in
add
pop
test
iret
mov
xorl
sahf
mov
shr
xchg
lcall
jge
push
repnz
leave
popa
enter
push
lahf
jmp
and
sbb
cmp
cmpsb
int
inc
loop
add
add
or
mov
dec
aam
test
mov
mov
jmp
inc
aam
adc
and
dec
sbb
loopne
mov
cmp
xor
es
dec
and
sub
inc
adc
sub
push
jle
bound
mov
xchg
or
add
add
inc
test
inc
or
jmpw
pop
or
icebp
es
int3
add
mov
clc
je
rorb
adc
jno
sbbb
fidivl
add
mov
add
in
jle
pop
inc
aam
mov
sub
add
add
test
sub
scas
add
add
jle
mov
testl
sub
add
push
xchg
add
in
add
dec
mov
mov
add
ret
add
mov
sub
addr16
lods
ret
add
jge
in
mov
xchg
add
add
cmpsb
push
lds
adc
sub
pop
cmpsb
jl
xor
or
and
andl
push
add
add
add
xor
and
scas
mov
popf
sbb
ds
ret
mov
add
add
sbb
add
or
jge
rolb
fstl
or
add
xor
imul
sahf
imul
fnstcw
stc
jno
push
mov
xchg
dec
push
push
mov
add
xchg
std
mov
sbb
imul
lahf
repnz
in
dec
cli
add
pop
std
addb
jp
jecxz
sub
cmpsb
dec
xchg
outsl
xor
dec
cmpsl
arpl
out
jp
gs
loop
call
adc
add
xor
jmp
mov
add
pop
aaa
into
xchg
sbb
add
add
movsl
push
popa
and
movsl
in
add
mov
loope
mov
aam
xor
push
add
cmpsb
xor
fwait
or
push
mov
xor
jae
add
mov
arpl
fdivp
loope
lock
xlat
jo
adc
jbe
jae
adc
into
mov
xchg
mov
pop
and
pushf
popa
incb
xchg
push
jp
nop
lret
fdivs
in
dec
mull
add
cltd
cmp
lcall
push
push
adc
nop
sarb
lret
into
shlb
cmpsl
pushf
rolb
movsl
mov
cld
sub
or
cmp
test
fcomi
out
xchg
loopne
cmp
repz
jecxz
adc
jnp
lods
cmpl
adc
add
mov
add
loop
pop
ret
scas
add
add
pop
rcl
jl
or
dec
gs
mov
sub
loope
inc
push
movsb
mov
mov
mov
or
jge
test
adc
add
mov
stc
xor
mov
cltd
and
xchg
mov
cmpsl
sub
add
lret
into
in
push
mov
arpl
mov
dec
js
cmp
add
fistps
mov
ljmp
add
sbb
add
sub
cmp
add
xor
sbb
lahf
sti
mov
scas
les
sar
add
add
jle
out
dec
pop
andb
sbb
xchg
mov
hlt
add
push
out
in
fwait
jno
sbb
lock
es
add
sahf
loopne
lret
in
add
add
fiadds
sbb
movsl
js
add
jno
and
dec
mov
jae
add
stc
or
sbb
flds
mov
sbb
xor
insb
xor
cli
xor
or
add
out
xchg
or
pushf
xor
int3
mov
jle
add
fstps
addr16
push
insb
loopne
in
clc
adc
cmp
mov
cmpsb
lods
jbe,pt
movhps
add
outsb
inc
xor
inc
fdivs
and
lea
hlt
icebp
add
cmp
add
mov
add
xor
lahf
rorb
sarb
scas
inc
add
insl
sub
data16
mov
jb
or
push
jae
loope
out
add
add
fdivrs
and
in
es
jb
stos
dec
jecxz
cli
jne
xchg
enter
ret
adc
pop
mov
jecxz
and
adc
pop
lea
mov
fnstcw
imul
lret
or
jne
iret
into
add
outsb
push
ja
mov
stos
pop
xor
add
outsl
push
stc
mov
scas
scas
fcoms
test
cwtl
adcl
inc
jle
adc
adcl
insl
dec
fcomi
mov
rcrb
repnz
mov
and
fidivrl
add
push
sub
aad
jae
mov
lock
pop
in
or
enter
add
adc
mov
lcall
sub
dec
pop
ss
insb
or
add
incl
push
arpl
fcomps
or
add
add
cmpb
adc
ljmp
jnp
add
cmp
add
add
xchg
add
ss
cmp
push
sub
or
bound
sub
push
add
testl
std
add
repz
add
push
sub
and
add
mov
xor
stos
imul
cmp
addr16
add
shll
aad
add
sub
lahf
xchg
div
push
movsb
stc
dec
xor
lods
cmp
push
xchg
fisttps
dec
sub
add
add
ret
loop
push
in
add
add
push
sti
in
add
xor
lcall
jbe,pt
inc
add
pop
cmpsb
xchg
arpl
stc
add
pop
and
pop
push
push
aas
ss
adc
in
repz
cmc
pushf
test
add
pusha
ret
add
add
lock
loope
and
sti
das
je
and
fisttps
dec
ficoms
or
in
jp
or
aaa
pushf
xor
loope
lahf
add
in
jg
test
adc
or
adc
mov
cs
sub
adc
and
cmp
adc
xor
mov
add
add
add
mov
add
jecxz
add
add
push
add
imul
testb
leave
sbb
fcmovb
add
and
add
fnsave
mov
add
stc
pop
add
or
lods
jb
fwait
add
popl
lods
adc
lahf
add
inc
xlat
add
aaa
mov
bound
in
jle
iret
cmp
inc
dec
jo
xabort
push
pop
loopne
xor
add
xor
or
jnp
out
dec
add
and
xor
jp
jecxz
push
xor
push
ret
or
stc
mov
cmp
dec
xchg
std
fldl
cmp
ja
bound
ret
nop
inc
inc
xchg
add
sti
pusha
sbb
add
sbb
jae
and
das
push
adc
add
add
test
cmp
push
dec
aam
cmp
cmp
popl
cltd
test
icebp
cmp
imul
xor
xor
fnstcw
adc
dec
addl
pop
stc
mov
pop
sub
jbe
mov
clc
test
sbb
push
add
mov
shrl
sub
or
in
xor
push
std
adc
fwait
cmp
or
sub
add
pop
adc
add
mov
mov
cmpsb
jmp
jecxz
std
ja
add
push
out
add
mov
cmp
pop
and
xchg
out
test
lret
aad
cmp
rcl
ds
fwait
int3
icebp
in
mov
mov
sahf
pop
add
push
int
adc
movsb
mov
mov
add
jmp
push
mov
lods
cmp
add
sub
lods
pushf
add
mov
sbb
test
lret
add
push
and
xchg
out
add
jae
xchg
nop
pop
cld
pop
aas
inc
ret
pop
mov
adc
into
fmuls
mov
lret
cmc
xchg
add
mov
cld
in
roll
push
dec
dec
and
nop
lods
add
add
shlb
push
int3
clc
mov
insb
pop
add
sub
incl
fiaddl
outsl
push
jo
or
stc
das
out
rorb
mov
and
jo
jp
shrb
xchg
shll
adcl
cmp
cmp
popa
stc
add
cmpl
cmpsl
roll
add
jae
shrl
add
pop
enter
push
or
or
push
mov
mov
les
ja
add
add
dec
and
adc
inc
mov
push
aaa
add
fwait
dec
ret
xor
into
adc
in
testb
movsb
add
or
xor
mov
out
mov
in
xchg
sub
mov
aam
pop
insl
xor
out
arpl
cmpsb
push
iret
loop
lret
outsl
enter
mov
sub
lea
add
test
out
mov
inc
loopne
add
xor
lahf
pop
gs
pop
pop
inc
add
inc
or
jno
adc
xor
xchg
in
outsb
add
xchg
lock
subl
pmulhw
scas
adc
xor
adc
imul
outsb
mov
add
pusha
dec
jp
add
add
cmp
inc
cmp
xor
imul
lea
jae
insb
xchg
dec
inc
or
add
sub
or
adc
nop
pop
enter
aas
inc
add
adc
iret
mov
sbb
push
pop
test
inc
or
jmp
push
dec
or
hlt
sbb
inc
add
out
add
jne
icebp
sub
jecxz
mov
lds
pop
pop
sbb
imul
add
add
mov
gs
add
imul
imul
and
sub
add
rorl
daa
dec
push
add
dec
adc
andl
sarl
adc
sbb
mov
sbb
push
xchg
sbb
push
inc
rorb
fcompl
scas
cmp
push
movsb
push
ja
xchg
adc
add
testb
or
ret
mov
cmp
mov
jno
in
fwait
add
xor
mov
adc
push
sub
jnp
fbstp
mov
jae
sub
pop
dec
cmc
push
in
ret
jge
mov
push
dec
jge
push
ficoml
popf
jle
mov
add
jle
sbb
cmp
add
bound
rorb
hlt
push
add
sub
add
pushf
lock
test
xchg
leave
hlt
xor
jg
movsb
ja
lret
sub
add
mov
shr
xor
push
sub
rdpmc
add
jb
enter
adc
pop
loopne
adc
mov
insl
rcll
ds
mov
pop
push
sahf
dec
mov
add
cmp
cmc
jns
push
add
rclb
hlt
into
lret
mov
lcall
cmp
push
pushf
daa
popl
loopne
jl
daa
es
fisubrl
add
adc
stc
insl
inc
cwtl
pop
jne
mov
inc
pop
add
push
hlt
mov
sbb
frstor
and
pop
mov
ljmp
das
lock
loop
fwait
xchg
mov
mov
sbbb
mov
xor
xchg
sbb
dec
push
or
cmp
mov
enter
daa
idivl
sub
mov
xchg
add
cmp
or
add
rcll
or
and
sbb
dec
mov
xor
insb
mov
mov
add
dec
sub
inc
xchg
cltd
adc
jae
add
rclb
sub
mov
add
repnz
int3
mov
cmp
inc
jmp
or
pop
jns
add
into
rcr
xor
push
adc
jp
pop
jo
mov
mov
in
inc
fimuls
xchg
ret
push
mov
mov
inc
loop
out
pusha
flds
jo
popf
lret
les
pop
xchg
inc
ret
mov
cli
add
add
dec
in
mov
bound
insl
es
ret
or
add
aas
add
or
ja
sub
push
cmp
fs
cmpsl
mov
sti
pushf
pop
adc
arpl
repnz
mov
push
daa
add
push
xchg
inc
mov
popf
lods
and
inc
lret
pop
inc
mov
mov
lods
fldenv
mov
out
in
add
test
xchg
push
add
js
cmp
mov
sbb
test
mov
mov
test
add
sbb
ljmp
jns
imull
push
inc
push
test
push
scas
adc
inc
cmp
sbb
sbb
inc
mov
les
icebp
adc
dec
sbb
subb
add
test
pushl
inc
scas
ret
or
add
mov
add
iret
cmpl
mov
add
and
xor
add
stos
es
mov
adc
mov
aaa
js
aam
add
and
push
lcall
fildl
in
cmp
mov
jmp
adc
dec
push
and
dec
pop
test
loopne
sbb
fldt
aas
into
mov
pop
add
lods
and
pop
add
cmp
add
ret
and
jl
add
movsl
std
data16
fists
xor
pop
loopne
adc
cs
rcrb
jo
xchg
pop
out
scas
dec
in
add
fisubs
scas
add
addr16
sub
ret
fcomi
push
orb
pop
lret
add
fimuls
inc
cmpb
fcmovb
jbe
cli
movsl
inc
pop
mov
ds
in
js,pn
add
std
and
ficompl
out
mov
xchg
lock
xchg
sbbb
jae
or
xchg
pop
pushf
add
dec
adc
pop
xchg
pop
inc
add
movsl
mov
xor
pop
outsb
cli
dec
daa
mov
rolb
out
push
push
adc
xchg
mov
add
jnp
orl
push
mov
and
faddl
stos
pusha
ret
pop
enter
inc
ljmp
inc
add
loope
jle
add
ss
pop
mov
adc
dec
add
push
add
je
jns
adc
lods
add
adc
str
add
mov
pop
call
inc
or
ret
add
test
outsb
pop
mov
push
xchg
arpl
imul
add
aad
dec
flds
and
xchg
ljmp
pushf
add
xchg
xchg
gs
pop
leave
lods
cmp
xchg
add
js
add
xor
out
loop
into
dec
pop
stc
sub
testl
popf
add
adc
push
jo,pn
inc
and
jnp
dec
xchg
imul
rcll
cmp
add
pushl
loop
fucomp
sbb
and
cli
sub
push
add
imul
jnp
fwait
cmc
jnp
mov
inc
lret
daa
push
and
scas
cli
movsb
add
arpl
ds
add
xor
dec
sbb
inc
add
inc
jge
pop
flds
test
add
mov
add
xchg
cli
imul
lds
popf
repnz
repz
mov
bound
lahf
add
nop
rorb
mov
mov
add
cmp
mov
les
xor
and
adc
mov
int
fildl
xchg
pop
mov
mov
hlt
clc
jecxz
add
sub
inc
xor
mov
fs
int3
add
sub
fisttpll
test
mov
adc
enter
mov
shrl
daa
mov
sub
out
add
add
icebp
adc
imul
xor
add
jmp
add
ret
mov
les
mov
roll
cmpsl
mov
add
lret
xchg
cmp
mov
popa
mov
sbb
xor
shll
loope
pop
xchg
push
aad
jb
add
or
xor
pop
push
push
shrl
xchg
xor
daa
xchg
mov
iret
mov
push
sarl
push
pop
mov
lahf
add
dec
add
jl
pop
add
lods
add
xor
mov
bound
enter
loop
adc
addb
movsl
jg
or
es
pop
pop
add
popfw
dec
xor
das
inc
jnp
add
dec
xchg
jb
fsubs
insb
test
test
push
jnp
pop
sub
loope
push
cld
fildll
add
push
mov
lret
insb
aad
xchg
xor
add
mov
add
movsb
rorl
in
or
pop
jecxz
mov
dec
push
pop
iret
es
dec
movsb
add
pop
lea
cld
xchg
repz
or
lods
mov
inc
dec
ljmp
pop
cld
es
add
add
outsb
inc
sub
jge
xchg
les
sub
out
ss
xchg
push
mov
add
rclb
sbb
jp
shlb
inc
mov
filds
insb
loope
add
inc
jno
cli
mov
sbb
scas
jae
mov
add
lds
repnz
test
add
icebp
ljmp
mulb
push
pop
push
pop
mov
sti
iret
sbb
xchg
add
inc
dec
pop
dec
push
push
iret
push
shlb
aam
add
push
mov
fisttps
jbe
pop
and
mov
jo
add
jo
push
ljmp
add
data16
sbb
sub
xlat
int3
adc
mov
inc
jl
es
or
mov
mov
loopne
arpl
push
addl
xchg
jmp
clc
add
xchg
add
inc
mov
adc
xor
pop
adc
mov
dec
jnp
addl
data16
movsl
push
and
mov
add
xchg
add
sti
insl
lods
add
pop
xor
push
test
subl
lret
inc
mov
push
push
dec
aad
sub
inc
dec
loop
pop
mov
add
std
push
mov
or
lret
add
les
adc
flds
jno
add
add
arpl
add
xchg
add
adc
in
jecxz
mov
mov
sti
add
xchg
mov
xlat
aad
inc
stc
jg
cmpsb
xor
push
arpl
and
jo
mov
cmc
dec
jns
rol
scas
pop
sbb
lods
add
jb
mov
je
add
add
sub
arpl
cld
std
and
movb
test
es
add
xchg
push
sarb
mov
dec
mov
int3
add
dec
jge
outsl
inc
adc
sub
add
xor
inc
mov
pusha
scas
hlt
ficoml
lcall
repnz
push
aad
push
adcl
add
add
aaa
div
add
and
in
jnp
dec
subl
xor
add
sub
add
or
mov
inc
add
out
jecxz
loopne
cmp
cltd
cmp
sahf
adc
mov
aam
lea
mov
or
popa
sbb
adc
mov
flds
dec
jae
add
xchg
push
mov
dec
fildl
and
in
dec
aad
fs
add
xor
iret
pop
add
xchg
nop
ljmp
cld
mov
add
inc
jo
sbb
push
inc
ds
pushf
mov
stos
sub
add
xor
jmp
lahf
xchg
test
fs
push
push
addl
loopne
add
add
mov
into
cmpsl
sub
out
jge
insl
iret
cmp
add
mov
or
add
hlt
add
test
cmpsb
imul
push
cwtl
call
call
xchg
push
lods
push
sub
add
or
nop
add
xor
add
dec
sub
inc
fbld
call
mov
mov
sub
xlat
jl
or
jl
add
adc
loope
testb
lods
pop
sub
or
int3
out
out
call
ficoml
stc
add
add
jg
mov
mov
mov
add
mov
in
hlt
mov
pop
aas
lea
sub
mov
dec
add
aad
fdivrs
leave
mov
in
xor
adc
outsl
lods
sub
cmc
cmp
xchg
pop
add
test
or
add
dec
cmp
sub
pop
lods
test
sub
add
outsb
mov
sahf
xchg
out
and
pop
mov
orb
mov
in
sub
push
add
lds
or
int
inc
std
fdivrl
jne
push
pop
int
mov
es
fildl
loop
push
add
xchg
pushf
pop
gs
fnstsw
add
add
dec
add
add
lds
inc
repnz
mov
stc
sub
lahf
adc
fwait
lds
mov
out
push
jo
subl
add
push
dec
jno
sub
add
out
test
insb
fildl
std
add
cmpsb
fmuls
fsubrl
imul
mov
cmc
test
cmp
insb
clc
dec
scas
jle
add
push
in
mov
adc
mov
inc
loop
add
bound
or
fadd
pop
out
sbb
aam
inc
sub
mov
pop
add
push
push
push
std
fildl
sbb
cld
imul
call
out
or
xchg
xchg
add
cli
adc
sub
or
into
jle
push
movsl
addr16
jns
cwtl
mov
das
lret
sti
enter
jno
inc
in
sub
lds
out
xor
mov
cmpsb
mov
movsb
daa
or
add
pop
rcll
inc
paddusw
add
xor
and
push
push
pop
dec
add
pop
hlt
cmpsl
orl
push
xor
jae
cli
mov
mov
inc
jecxz
add
lcall
or
or
pop
and
fiadds
sbb
rclb
sti
push
scas
fdivr
fnsave
shll
add
add
xorl
jnp
add
inc
cmpsb
push
add
add
lcall
push
add
adc
sahf
and
sub
add
mov
enter
sbb
xchg
and
ja
std
out
jge
mov
das
cwtl
lcall
inc
jo
pop
mov
xchg
outsb
movsb
iret
and
adc
mov
dec
jb
add
push
out
xor
sub
add
adc
add
sbb
mov
or
dec
in
out
add
sbb
add
cmp
addr16
das
cmp
xlat
jae
mov
inc
stos
lds
scas
loopne
rcl
ds
mov
mov
enter
jmp
push
or
add
cmpsb
sbb
popa
ret
dec
sahf
cli
jnp
mov
in
fiadds
xlat
add
add
push
pop
popa
add
stos
imul
in
adc
cmpsb
jno
das
out
mov
repnz
add
add
stc
dec
lcall
fcmovnu
mov
mov
sbb
add
add
pop
or
out
outsb
dec
mov
push
and
add
popl
pop
aad
enter
jb
push
enter
push
sbb
xchg
add
cmp
dec
add
xor
or
add
xchg
jne
mov
pop
add
add
scas
jnp
add
add
lods
pop
enter
out
sbb
iret
dec
dec
les
add
add
dec
or
into
cli
cmp
add
push
add
mov
outsb
dec
testb
cmp
and
add
scas
lcall
inc
bound
testb
test
push
out
push
es
mov
shll
pop
cmp
add
lds
push
pop
and
jecxz
jmp
dec
adc
in
and
out
mov
jl
roll
add
decb
xchg
inc
mov
and
cwtl
imull
das
rolb
push
xor
orb
dec
out
push
rcl
add
lahf
dec
jno
enter
xchg
dec
and
adc
fmull
add
mov
fldcw
mov
and
mov
fbld
pop
add
sbb
add
test
add
data16
pop
int3
pop
jno
xchg
das
sub
rclb
repnz
daa
dec
sahf
in
cwtl
add
sub
cltd
mov
cli
mov
xor
adc
movsl
jno
dec
push
verr
ds
push
in
cmp
xor
sub
cwtl
pop
mov
add
stos
sub
jns
and
jne
add
and
shll
scas
inc
pop
insl
popl
in
test
shll
xor
mov
scas
sti
xor
enter
jbe
fwait
xlat
and
or
xchg
xor
mov
push
add
jle
movl
adc
sbb
mov
mov
add
insl
inc
fs
cmpsb
xchg
pop
and
mov
lahf
inc
lds
add
adc
add
movsb
aad
dec
jae
psllq
clc
add
es
add
jo
add
jns
sub
push
stc
ss
mov
add
push
fwait
fwait
lret
repz
rolb
xchg
jbe
bound
jb
dec
cli
add
dec
or
dec
cmpb
orl
xor
mov
cld
add
mov
and
fnsave
pop
scas
idiv
mov
jp
mov
inc
mov
cmp
or
flds
stc
popf
push
dec
jne
fiadds
xchg
out
mov
or
cmp
pop
push
dec
test
mov
and
sbb
push
cmpsl
sbbb
subb
pop
xor
adc
add
sar
daa
xchg
in
dec
cmp
inc
add
pop
sbb
or
mov
xchg
in
inc
adc
hlt
add
jo
sbb
outsl
mov
mov
aas
mov
adc
mov
movsl
push
jg
jp
popf
fists
mov
sti
and
sub
flds
dec
dec
mov
add
int3
jl
ds
mov
lods
in
or
into
xor
add
add
xchg
addl
loope
and
push
xchg
insb
add
and
sub
jmp
add
push
pop
mov
add
aas
popf
jmp
out
out
dec
add
rolb
inc
rcrb
popl
or
inc
imul
les
cmpsl
stos
add
jp
je
adc
fs
xchg
add
sub
mov
add
cmpsb
ds
pop
les
ret
jmp
dec
cli
movsb
mov
ret
pop
mov
cli
rcrl
mov
lock
outsl
pop
cmp
sub
fstpt
jno
pop
jae
fsubrs
xor
add
sbb
fwait
add
add
mov
std
add
and
add
sub
mov
add
mov
mov
mov
ret
jo
subb
push
or
paddsb
leave
cmp
push
jae
lock
and
adcb
out
scas
or
push
add
stos
test
mov
test
add
lahf
je
pop
adc
mov
popf
add
add
arpl
pop
jmp
loopne
scas
test
sahf
push
mov
out
movsb
add
scas
cmp
pop
sbb
pop
fists
daa
lret
outsb
mov
jge
cmpsb
dec
jo
add
mov
push
mov
mov
cmp
out
daa
repnz
and
imul
and
testl
or
jne
xor
add
jno
cmp
fucomip
in
les
lods
add
mov
add
scas
mov
outsl
test
mov
rorl
shll
mov
and
stos
sbb
mov
jne
or
das
sub
xor
jle
add
es
sbb
loopne
dec
sbb
adc
movsl
and
enter
add
jle
out
sub
dec
or
fnstsw
dec
mov
out
and
inc
inc
sub
xor
call
ret
mov
mov
out
fldcw
sub
loope
cltd
lds
add
ja
enter
data16
popf
idivb
push
push
or
add
or
shl
mov
in
sbb
xor
adc
add
cmp
add
fdivr
aad
mov
add
lods
mov
adc
repnz
mov
mov
add
mov
stc
cltd
out
xchg
call
inc
rcll
xchg
jb
push
push
adc
dec
xor
add
pushf
push
pop
jno
jge
add
int
cmpsb
jae
mov
adcl
movhps
pop
mov
mov
inc
push
clc
add
repz
jb
add
add
cmp
add
sbb
jg
fwait
push
sbb
push
or
sub
movsl
or
xlat
jne
and
inc
add
add
fstpt
out
or
out
out
add
leave
addr16
call
fidivs
add
sub
je
jp
mov
pop
mov
push
push
pop
fdivr
push
adc
push
mov
jg
push
shll
add
xchg
orb
mov
inc
add
dec
mov
or
imul
aad
pop
mulb
push
insb
lret
sub
shll
jl
push
pop
insl
inc
out
ds
adcb
xor
in
push
int3
mov
push
enter
sbb
xchg
mov
ja
add
or
jno
outsl
push
daa
ja
fwait
push
sbb
pop
data16
jl
push
popa
mov
mov
call
fists
pop
xlat
add
fcompl
adc
je
add
test
or
push
addl
add
sti
inc
xchg
sarl
lea
xchg
mov
sbb
loop
das
les
pop
in
add
addr16
jmp
ret
hlt
fcmovnb
xor
cmp
pop
add
add
fcmovnu
lock
out
and
add
cld
dec
xchg
filds
fdivl
add
pop
sbb
add
adc
call
loop
movl
hlt
add
mov
add
pop
push
xchg
add
or
addr16
jmp
ret
ja
mov
xor
xchg
mov
jge
push
add
dec
mov
cld
add
jns
jp
out
push
mov
mov
loop
mov
mov
shl
or
push
add
lahf
rep
pushf
xchg
sbb
xor
sbb
in
int
add
mov
dec
or
ss
add
inc
ja
sbb
jb
push
insl
add
sbbl
pop
push
lahf
pop
nop
cmp
mov
xchg
and
scas
ret
jns
inc
int3
add
mov
insb
aad
sbb
sbb
mov
scas
jae
add
out
dec
mov
xor
cmp
insl
rolb
adc
arpl
insl
adc
add
inc
cli
cmpsl
jg
xchg
sub
test
ret
out
fdivrp
mov
sahf
movsb
dec
inc
push
and
shrl
push
inc
xor
xchg
insb
or
sub
js
ljmp
dec
xchg
jbe
add
mov
dec
mov
cmpsl
mov
pop
cs
inc
add
popf
mov
faddl
add
jp
mov
dec
push
add
pop
pop
or
pop
out
aaa
lds
je
test
in
addr16
jno
and
or
xchg
and
jge
gs
pop
adc
cmc
lock
dec
cmpsl
outsl
sbb
or
jecxz
jbe
add
inc
insb
sbb
mov
xlat
sub
add
std
mov
ds
ret
repz
cli
add
stos
imul
ds
or
adc
or
scas
pusha
out
inc
insl
or
push
out
lret
or
add
jge
push
sti
push
jl
lret
sbb
push
xor
movsb
cli
inc
mov
out
and
gs
cmpsb
adc
add
add
xor
pop
dec
adc
ret
ss
jle
cmpsb
js
mov
arpl
add
gs
shlb
push
sbb
xchg
popf
sahf
xor
pop
ret
add
add
sub
sub
push
cld
lods
pop
pop
movsl
les
inc
iret
ror
stos
out
jmp
js
dec
adc
mov
jnp
insl
cmp
or
mov
out
add
outsb
int3
repnz
es
cld
js
fstps
push
push
stos
add
inc
sbb
add
dec
lcall
arpl
pop
pop
add
iret
and
push
rcll
cmp
add
jo
add
sahf
cmp
cwtl
mov
out
cmpsb
dec
add
mov
shlb
inc
and
aaa
das
mov
add
pop
in
or
add
scas
xchg
add
or
dec
in
adc
inc
mov
add
cmp
outsl
scas
dec
aad
push
int3
cmpsb
add
adc
sub
aaa
icebp
add
dec
mov
add
push
enter
stc
shl
xor
jae
jo
hlt
add
jecxz
cmp
mov
ljmp
lcall
das
push
rcl
and
pop
ljmp
addps
inc
pop
and
aas
fstpl
popa
dec
jecxz
orb
pop
lods
pop
repnz
pusha
lock
mov
fcoml
dec
out
arpl
mov
popf
idiv
int3
add
add
lcall
jae
add
inc
add
xor
cld
fisubl
jno
int3
outsl
xchg
push
add
stos
jecxz
fmuls
mov
add
inc
dec
mov
add
push
add
out
sarl
and
add
out
add
jmp
add
lret
sbb
cld
mov
jo
mov
mov
jle
or
mov
inc
pop
push
ret
add
sub
or
pop
cmp
mov
shr
or
mov
int3
mov
add
jmp
scas
adc
les
repz
add
lret
or
loop
push
xor
xchg
xor
les
pop
lods
in
pusha
and
mov
sbb
cmp
cmp
int3
add
into
iret
push
sbb
mov
adc
or
insb
inc
push
add
test
nop
shll
inc
mov
std
sub
pusha
aaa
pop
xchg
ljmp
xchg
inc
add
sbb
xor
out
rolb
std
jle
jg
xchg
sub
test
xchg
les
inc
jl
add
std
adc
sbb
imul
cmp
jb
mov
mov
prefetchwt1
and
sub
mov
clc
push
jns
add
add
push
pop
and
mov
add
fisttpll
push
jne
xchg
sbb
sub
xlat
add
sub
nop
add
repz
out
outsb
sbb
adc
inc
test
loopne
mov
dec
inc
pop
lods
jno,pn
jb
lea
ljmp
stc
shlb
incl
push
xorl
add
xchg
add
or
psubw
lods
sti
adc
sbb
pop
and
jl
add
adc
sbb
cltd
jg
cmp
hlt
cmc
pop
icebp
and
pop
add
add
dec
xor
add
cmp
fsubrp
popf
mov
lahf
in
imul
scas
push
push
cs
add
orb
mov
shrb
test
add
mov
jae
push
mov
pop
int3
dec
sbb
fistpll
sub
push
add
aad
add
imul
inc
add
add
add
add
cmp
mov
outsl
mov
mov
mov
in
mov
cmp
out
add
movsl
jge
sub
out
adc
orl
ds
push
sbb
mov
sbb
add
dec
xor
cltd
hlt
add
mov
push
jno
add
mov
push
jns
sub
xor
add
movsl
inc
jae
shrl
mov
add
inc
lea
xor
lock
enter
mov
mov
dec
fucomp
mov
or
daa
repz
sbb
lahf
xchg
jbe
inc
aad
arpl
pusha
pushf
and
jb
cmpsl
js
fimull
stos
cmc
popf
add
scas
add
outsl
movb
cltd
cmpsl
pop
jp
sub
fld
add
jl
inc
add
add
inc
test
insb
arpl
dec
add
dec
push
dec
add
and
out
mov
push
sub
aad
jecxz
and
add
mov
dec
out
jne
ret
push
add
ret
add
cli
das
adc
add
aam
mov
fnstcw
inc
mov
cwtl
adc
adc
adc
push
cmpsb
xchg
xor
aam
in
jecxz
mov
sbb
cs
add
add
xchg
ficoml
pop
aas
add
cmpsl
or
mov
sbb
adc
xchg
inc
inc
test
ja
fs
int
jnp
adc
pop
mov
xchg
add
add
sub
add
jecxz
and
in
scas
bound
pop
add
in
call
add
xchg
or
imul
dec
pop
push
mov
cmp
and
leave
xchg
pop
pop
stos
add
clc
rorl
loopne
fistps
sub
lods
push
or
sub
add
iret
jns
and
push
mov
cmp
mov
inc
or
cmp
sub
nop
test
shr
outsb
xor
aad
popf
pop
push
fdivrp
lret
pop
jg
das
loope
fcoms
or
pusha
push
jp
divb
add
in
add
add
cs
and
filds
insb
sbbb
jge
push
mov
mov
jb
lcall
movsl
add
rcll
jle
arpl
bound
in
lds
inc
xor
inc
add
int
cmp
push
ds
xchg
dec
int
cmp
xor
fildl
testb
xor
or
mov
add
add
scas
push
add
sub
inc
cld
pop
and
mulb
sarb
cmpsb
jmp
push
cmp
sti
jnp
loopne
xor
addl
push
es
lods
pop
imul
les
aaa
mov
das
mov
mov
xor
movsl
mov
jg
sbb
ljmp
clc
add
dec
sub
inc
add
or
or
add
cmp
ja
dec
xchg
shl
fnstsw
pop
iret
leave
add
or
xchg
push
mov
or
push
int3
js
add
push
mov
and
dec
push
sti
xchg
add
pop
out
or
addl
cmpb
mov
data16
add
in
aam
add
jecxz
mov
adc
mov
clc
sbb
out
xor
adc
cmc
pop
sub
lea
das
cmc
pop
jg
add
and
test
insb
push
loop
cmp
mov
movsl
add
mov
push
scas
lock
loop
cmpsl
add
adc
fildll
sbb
cmp
pop
add
icebp
add
inc
hlt
sub
add
add
cmp
sub
sbb
sbb
add
cmc
jb
fistpl
sbbl
xor
fwait
mov
mov
adc
lea
sub
fs
add
iret
fisubrl
xor
mov
push
cwtl
cmp
stos
pop
mov
add
movsb
adc
xchg
rcrb
add
pop
insl
movsl
add
adcb
push
mov
fsubl
xor
add
mov
cs
daa
pop
add
lock
sub
mov
int
dec
add
popf
lock
adc
jmp
adc
mov
add
nop
add
xor
mov
add
fsubr
lods
add
lahf
jp
xor
add
dec
add
or
iret
xchg
add
dec
xor
push
or
xchg
add
shrl
aas
sbb
ret
test
jnp
scas
popa
inc
test
jle
mov
mov
mov
adc
pop
push
mov
mov
pop
mov
fnstsw
dec
pop
andb
lock
adc
std
dec
push
shll
jo
add
imull
add
add
es
lahf
sahf
pop
popl
in
dec
cmp
in
cmpsl
pop
xchg
xor
sbb
lock
cwtl
adc
test
mov
repnz
rorb
xor
push
xlat
repnz
xchg
jge
xchg
stos
xor
add
add
jle
fimuls
fldl
leave
jno
mov
sub
in
add
jmp
push
add
mov
mov
push
push
test
int
inc
jnp
add
jle
push
ret
pop
pop
das
add
outsl
adc
add
add
fnstsw
ficompl
scas
add
sub
dec
pop
jl
iret
cs
mov
lock
movl
out
add
scas
push
lea
ja
cmp
scas
dec
sbb
scas
or
out
dec
xchg
cmp
sbb
aas
dec
cmp
sub
stos
sub
adcl
mov
mov
add
push
insl
pop
out
das
add
sbb
push
and
mov
lods
cmpsb
mov
pop
movsl
add
ss
pop
sbb
pop
pop
dec
push
add
pop
add
adc
sub
sbb
add
add
in
inc
mov
call
dec
insb
mov
fwait
dec
ds
fs
clc
pusha
scas
add
add
sub
movsl
push
roll
adcb
lea
pushf
add
in
mov
pop
sub
lods
mov
and
sbb
mov
or
xchg
lea
inc
push
out
sub
sub
jno
xchg
push
cltd
bound
stc
add
daa
add
mov
jo
xor
movsb
jb
add
lcall
mov
and
fimull
push
test
mov
dec
sbb
add
mov
mov
sub
insl
xor
xor
call
jae
mov
je
cmp
sub
pop
inc
addb
cmp
add
icebp
dec
inc
xlat
faddl
frstor
sbb
mov
add
call
mov
mov
dec
xchg
std
sbb
scas
add
sahf
add
xorb
sbb
xchg
vpmacssdqh
xchg
adc
add
and
sub
xlat
inc
test
mov
int3
push
add
xchg
outsb
repz
cwtl
popa
sub
fadds
add
into
push
push
push
rcr
add
xor
stos
jne
xor
test
fmuls
pop
stos
pop
inc
mov
mov
imul
dec
add
xor
mov
faddl
mov
mov
and
xchg
fs
pop
hlt
in
adc
stos
ret
adc
lret
or
inc
push
mov
add
loopne
add
movsl
add
add
mov
daa
push
cltd
sub
sbb
xor
add
stos
js
aas
add
mov
sti
add
mov
testb
lret
mov
sub
mov
das
lock
cli
xor
mov
sbb
aas
inc
repz
xchg
loopne,pt
add
push
pop
adc
scas
add
pop
add
pop
adc
sbb
lahf
add
xchg
das
movl
dec
test
adc
sti
push
pop
frstor
lods
pop
and
mov
andl
aas
std
stos
pop
es
and
das
jmp
ss
repz
lods
cmp
popa
sti
fbld
daa
shll
xorl
inc
pop
adc
movsl
push
jle
lock
sub
push
fcomps
add
arpl
outsb
pop
popa
pop
add
sbbl
xchg
jae
add
outsl
inc
test
movb
push
adc
std
jns
inc
lahf
stos
xchg
sub
push
popf
fxch
pop
fwait
adcl
xchg
jnp
mov
adc
movsl
mov
add
lret
pop
scas
scas
push
add
mov
mov
xchg
mov
in
add
jo
xor
inc
xchg
mov
fiadds
push
jne
js
inc
or
cmpsb
mov
add
xchg
sub
movsl
xchg
dec
xor
xor
lods
add
or
repnz
fs
dec
rcr
int3
push
jbe
loop
add
add
add
add
bound
and
push
jge
xchg
bound
repz
jge
xor
push
add
lret
loop
and
jp
call
cmpsb
push
int3
add
cmp
out
cmpb
adc
jae
or
inc
push
pop
xchg
mov
testb
add
mov
sbb
test
js
shll
add
push
or
add
out
inc
push
add
jo
ljmp
lahf
test
add
stc
dec
movb
mov
push
pushl
adc
xchg
and
imul
add
jnp
lcall
add
jl
adc
ror
nop
add
lods
or
imul
cmp
add
add
add
xchg
out
ljmp
add
sub
jp
cli
mov
xlat
add
xor
dec
inc
shll
sbb
scas
lea
jge
stos
cmpsb
add
push
and
scas
roll
pop
add
or
mov
xchg
jae
leave
das
rcrb
add
adc
nop
push
add
cmp
add
stc
add
fdivl
jg
mov
adc
add
popa
and
loopne
dec
add
ja
add
mov
pop
mov
sbb
lds
aaa
add
in
movsl
mov
stc
stos
repnz
add
add
verr
mov
push
push
jle
xchg
fwait
mov
or
add
push
add
dec
add
aas
je
xchg
nop
cmp
dec
or
fiaddl
dec
push
nop
cs
mov
add
cmpl
add
cmp
add
or
aad
push
sbb
cmp
rol
adc
dec
inc
mov
bound
lcall
mov
daa
push
xor
xchg
stos
add
push
add
sahf
inc
dec
adc
add
in
and
or
into
ja
pop
and
inc
mov
scas
lock
test
inc
pop
and
push
jmp
mov
dec
push
clc
mov
jl
cmp
repz
pop
or
mov
lret
push
add
add
and
inc
cmp
add
add
mov
pop
sub
out
xchg
and
ja
iret
or
pusha
add
jmp
adc
pop
bound
loopne
add
adc
imul
mov
enter
mov
cli
jp
add
cld
xlat
ret
mov
jno
cmp
in
add
rol
out
jbe
data16
rcll
insb
adc
aad
test
add
mov
sub
add
insl
adc
add
and
push
jmp
ss
jmp
lahf
pop
and
sub
ja
sub
push
cmpsl
dec
dec
clc
mov
add
add
xor
dec
push
dec
mov
xor
cmp
movsl
in
add
fucomi
jecxz
cmovno
out
addl
out
aad
enter
fistps
stos
incb
sbb
cmp
jge
dec
xchg
sub
cmp
leave
jae
xchg
jbe
jae
andl
push
mov
aad
xchg
mov
dec
lcall
add
iret
test
xor
movsl
cltd
shrb
fisubl
rol
add
push
pop
xchg
loope
jmp
int
pop
adc
xor
push
or
mov
add
dec
lahf
gs
pusha
lea
inc
les
scas
jne
mov
and
sbbw
addb
out
cmp
cmp
add
jbe
das
xchg
pop
test
movsb
enter
dec
int
lock
popf
cmc
fmul
sub
push
mov
xchg
movsb
nop
sbb
aas
aaa
outsb
fcoml
pushf
sub
stc
xchg
push
pop
sbb
sqrtps
dec
cli
push
push
mov
or
pushf
pcmpeqd
lret
add
cmp
fldl
pop
sti
int3
add
hlt
adc
ljmp
pushl
bound
out
add
or
and
sbb
push
add
inc
and
out
push
add
and
cld
ja
stos
push
mov
add
push
xchg
mov
add
pop
add
test
add
jmp
push
jns
and
xlat
int3
sbb
rorl
gs
outsb
add
arpl
fisttpl
inc
pushf
dec
idivl
add
inc
push
jo
cmpsl
lret
mov
push
pop
sub
mov
ret
jge
jg
and
cmc
std
add
xchg
sbb
adc
aas
in
outsb
data16
sub
call
pusha
outsl
sbb
fildl
xorl
lock
incl
dec
lahf
push
adc
and
shr
add
add
push
push
sub
sub
xchg
movsb
ja
lret
loop
mov
out
pcmpeqb
mov
sti
movq
push
insb
stos
stos
mov
add
int
sar
shrl
incb
xor
add
push
daa
add
and
inc
iret
roll
stc
sub
adc
cmp
pop
shl
mov
lret
les
or
scas
lea
aaa
test
rcr
cltd
outsl
inc
jge,pt
xchg
les
add
push
add
add
fnsave
add
or
inc
add
outsl
imul
ljmp
jo
enter
dec
push
in
add
mov
add
add
leave
jno
jge
aas
push
out
xchg
add
dec
lods
or
push
add
sub
out
sbb
cmp
pop
testb
fadds
sbb
add
jo
and
or
mov
dec
loop
mov
ret
loop
fwait
xor
out
add
dec
ds
sbb
or
dec
jb
add
sarb
xor
xchg
das
or
sub
lret
sub
popf
add
push
xor
mov
ja
xchg
xchg
inc
dec
outsb
outsl
ss
or
jg
je
daa
arpl
mov
pusha
and
push
enter
cmp
inc
push
add
movsb
push
add
add
imul
add
push
mov
iret
call
mov
fcmove
add
fistpll
or
fistps
sbb
lds
mov
icebp
fnstsw
movsb
sub
mov
out
mov
or
or
pop
fs
push
mov
scas
sub
sbb
in
sbb
jnp
in
sbb
inc
and
jbe
xorps
leave
xchg
cld
mov
push
push
fs
and
add
icebp
mov
push
mov
into
cmc
jno
cmp
pop
sbb
rcrl
clc
add
rcrl
ja
cmp
jae
andps
stos
test
xchg
jnp
jno
pop
cs
adc
mov
sbb
inc
push
lcall
je
or
js
cmp
mov
mov
cmp
subb
pop
test
out
xor
pop
xchg
js
mov
and
and
pop
jae
cli
sub
jo
add
add
fcmove
xor
pop
or
les
mov
add
lret
call
xchg
jae
cld
pop
aaa
add
js
xor
aas
dec
test
cld
test
push
sarl
add
enter
add
stc
mov
aaa
add
and
add
adc
pop
mov
add
push
in
add
mov
movsl
cs
shrl
pop
xor
jno
inc
xor
outsl
movsl
jns
verr
sti
aad
mov
add
add
or
leave
aam
fdivrs
mov
pop
jb
and
sub
out
inc
add
filds
or
test
pop
dec
add
xchg
jo
imul
pop
popa
movsb
add
fcmovnb
lret
adc
repnz
add
xor
inc
xchg
xchg
dec
inc
lret
push
test
push
push
testb
lahf
cwtl
out
jne
enter
cmc
xchg
jae
jb
and
sti
or
mov
cmp
lds
cmc
push
add
dec
enter
imul
sub
in
add
fstps
cmp
jecxz
add
add
adc
sbb
jae
jg
or
sbb
jge
stos
cld
sub
jbe
scas
push
das
js
inc
imulb
sbb
pop
xlat
lods
add
and
push
sub
push
scas
sbb
add
push
aam
push
out
cmp
cmp
imul
inc
xchg
mov
xchg
push
cmc
push
add
inc
mov
add
add
dec
subl
sub
fs
ret
xor
mov
push
add
jecxz
jns
jno
lret
cmpsl
adc
push
inc
pop
inc
inc
add
or
out
out
sar
mov
cld
jo
add
cmp
stos
mov
or
jne
scas
es
dec
mov
daa
fildll
push
dec
add
fldl
add
imul
inc
push
cmp
aam
stc
add
mov
push
xor
jmp
ds
and
rorb
int3
mov
add
dec
jo
jae
enter
add
add
outsb
inc
sub
shll
add
xlat
pop
adc
fdivs
sbb
cli
jp
mov
xor
and
ret
add
movsl
popa
add
dec
mov
push
cmpsl
mov
jns
jecxz
xchg
push
pop
jnp
jecxz
faddl
sub
add
jne
ljmp
mov
xchg
or
movsl
and
bound
dec
adc
ja
jmp
sub
mov
js
int
add
dec
add
out
lods
or
adc
and
mov
daa
and
cmp
gs
mov
or
out
mov
mov
out
mov
sub
adcb
xchg
push
lock
cmp
iret
andb
pop
clc
pop
dec
xor
repnz
sti
in
jp
mov
jae
sub
mov
frstor
lds
leave
stos
mov
add
fsubrs
jns
xchg
add
cmp
inc
mov
add
les
bound
xchg
sbb
data16
add
add
or
lock
mov
add
sbbl
shl
jg
xor
sub
mov
xchg
lret
add
adc
push
push
arpl
addl
push
inc
or
hlt
cwtl
into
daa
rcr
sti
and
dec
sub
jb
ficoml
add
mov
push
add
add
pop
xor
add
fiaddl
sbb
mov
add
and
xor
xchg
add
loop
ret
pushf
stos
and
inc
sub
insl
mov
or
sbb
sbb
add
xchg
mov
mov
xchg
xchg
test
je
xchg
fcomps
lods
insb
add
ret
jb
leave
add
xor
es
add
cmpsb
add
movl
mov
enter
mov
lods
pop
movsb
lods
cmp
or
xchg
mov
shr
imull
leave
add
cmpsb
cmc
add
add
and
add
std
adc
mov
aam
fldenv
frstor
scas
mov
ds
mov
add
in
dec
roll
jg
jle
outsl
aad
lret
mov
cmc
dec
pop
add
rol
das
insl
add
sbb
mov
mov
mov
faddl
and
fs
in
lock
mov
ss
mov
roll
xor
std
xor
push
xlat
xor
gs
mov
mov
xor
add
inc
cmp
add
frstor
insb
and
and
dec
aas
and
into
insb
les
add
sar
push
pop
push
xchg
fistpll
dec
je
and
fsubp
lods
push
loopne
mov
aam
imul
cmpsb
out
icebp
xor
arpl
test
add
lods
dec
cmpsb
rcrb
adc
cs
out
mov
sti
mov
xchg
daa
mov
ss
push
jge
xchg
xchg
mov
addb
test
or
add
add
or
push
enter
dec
inc
xchg
call
or
add
mov
lock
je
sub
idivl
add
jne
pushf
xor
add
ljmp
stos
add
adc
add
cli
cmp
out
lcall
and
fwait
sub
add
les
mov
add
push
pcmpeqd
fs
and
jb
mov
cs
pop
mov
outsb
mov
lahf
add
mov
ljmp
jecxz
das
mov
xor
test
mov
or
add
jge
pop
cmc
add
hlt
repnz
cmp
cmc
xor
dec
jl,pt
rep
cltd
add
cmpsb
in
mov
jle
add
repz
jp
mov
loope
cmp
adc
mov
in
pop
xor
xchg
adc
push
xor
iret
add
add
and
mov
mov
mov
mov
xor
jnp
das
add
cltd
add
mov
sbb
jae,pn
cli
jmp
clc
push
push
xor
pop
subb
int3
push
dec
into
push
or
mov
test
inc
aam
inc
call
add
add
ja
leave
cmp
add
icebp
sbb
loope
cmp
rorb
aam
rcll
lds
andb
sbb
mov
jne
add
add
js
cwtl
pop
notl
enter
add
subb
inc
dec
add
add
or
lods
ds
pop
testb
imul
mov
enter
cs
mov
add
xchg
add
je
adc
rcrb
call
lcall
test
addl
sbb
jecxz
and
adc
mov
ljmp
add
shl
jnp
push
add
cmp
stc
push
mov
ret
or
ja
xor
push
data16
adc
adcb
xchg
adc
addr16
add
xchg
shlb
mov
xchg
scas
xchg
decb
sub
clc
mov
insb
jmp
mov
std
pushf
stc
sub
idiv
xor
dec
inc
push
add
push
je
pop
ficoms
add
and
sbb
jo
cmc
add
stc
xchg
add
filds
ret
fucomip
je
and
loop
add
adc
add
ficoml
repz
arpl
les
push
mov
add
fdivrs
andb
int3
outsb
std
jno
xor
mov
stos
repnz
dec
mov
std
cltd
fimuls
add
and
pop
and
jae,pt
jae
jae
add
jcxz
jp
add
cmp
xchg
add
leave
sbb
mov
add
repz
faddl
mov
adc
add
xchg
add
mov
test
or
leave
js
dec
mov
push
jb
mov
and
or
pusha
sub
add
or
stos
xor
and
mov
hlt
inc
mov
out
mov
loope
push
mov
jmp
add
cmpsb
mov
std
cmp
flds
daa
mov
test
or
addr16
and
clc
or
xchg
repnz
add
leave
inc
rolb
cmp
aad
adc
cmpsb
mov
ret
add
int3
xor
mov
mov
add
addl
int
push
call
movl
xchg
fnstsw
fs
and
ret
xor
add
dec
mov
mov
pop
pop
xchg
mov
mov
je
mov
call
jno
sbb
roll
dec
push
push
add
inc
jg
pop
and
es
insl
adc
add
push
movsl
lock
mov
fstps
xchg
cmpl
aas
cmp
daa
xchg
fwait
sub
push
add
aas
in
in
cmc
add
mov
orb
clc
std
add
fiaddl
mov
dec
sbb
aaa
jp
mov
xor
xchg
pushw
in
add
mov
movsl
or
dec
testl
int3
inc
adcl
cmpsl
xchg
mov
jmp
add
add
ror
stos
add
popf
add
and
idiv
add
daa
lea
mov
outsb
cli
xchg
jb
stos
cwtl
add
add
mov
cmpsl
shll
cli
mov
mov
test
push
sub
pop
mov
xor
loopne
dec
cmpsl
cmp
insb
push
mov
out
or
dec
sbb
movsl
jmp
push
sahf
jns
rorb
inc
add
xlat
sub
cmp
hlt
pop
inc
xor
es
mov
xor
enter
addl
pop
pop
mov
ret
xchg
into
sbb
mov
fisubs
or
push
jnp
lods
out
push
repnz
int3
add
add
leave
dec
cmpsl
add
xchg
mov
ja
mov
aam
jl
scas
cmpsl
xor
mov
icebp
test
push
xchg
fidivl
lret
xchg
xlat
in
add
daa
adcb
in
pop
push
and
mov
mov
stos
aaa
add
xchg
pop
xlat
out
ficoms
roll
shl
inc
lret
cmp
add
in
in
jno
add
mov
mov
add
pop
ja
shrb
mov
js
data16
int3
cmpsb
add
sub
jne
sub
faddl
mov
xchg
xchg
add
push
fnstsw
popa
push
sub
sbb
test
add
cmp
bound
xchg
inc
nop
mov
or
dec
push
dec
imul
filds
and
add
in
pop
xor
popf
mov
add
test
xchg
add
add
cmp
jg
add
pop
mov
scas
adcl
fwait
push
cs
scas
inc
add
in
repz
push
int
out
iret
jg
ret
das
adc
mov
test
push
dec
cmpsl
call
add
popf
jecxz
in
and
inc
mov
mov
sbb
push
jne
std
sub
aam
insb
rolb
jns
mov
test
bound
movb
das
fcmovne
test
add
dec
mov
lcall
stos
jl
imul
and
sub
add
lea
jo
push
sub
leave
dec
in
fadds
sub
adc
pusha
cmpsl
jo
pop
mov
addl
in
dec
push
out
inc
dec
icebp
inc
xor
int
jle
push
in
add
sbbb
scas
add
fisubrs
push
sub
in
test
fadd
dec
xor
xchg
adc
mov
xchg
sbb
mov
in
add
xchg
cld
lcall
jmp
incl
and
mov
pop
jae
dec
les
stc
popf
movsl
mov
and
fs
inc
call
sbb
add
data16
popa
cmc
pop
cld
xor
ljmp
lret
je
stos
sbb
cld
inc
ss
addr16
outsb
gs
stc
and
add
push
dec
imulb
mov
iret
add
jbe
xor
mov
xchg
clc
addb
xchg
and
shlb
mov
pop
scas
popa
mov
popa
dec
testl
mov
adc
add
movsb
popf
xor
add
add
jne
add
sub
mov
xlat
add
push
or
adc
jl
dec
fcoml
cli
movsb
incl
enter
mov
sub
mov
push
add
cld
sbbb
add
dec
in
dec
add
in
repnz
pop
stc
sahf
push
cmp
repz
subl
dec
add
sbb
jp
call
adc
mov
jb
add
xorb
sbb
sbb
cmp
add
pop
add
out
fbstp
scas
repnz
icebp
js,pt
int3
mov
clc
insl
incl
add
daa
nop
adc
outsl
inc
pusha
pop
imul
cmpsb
pop
pop
test
ljmp
xchg
sub
jbe
sbb
xchg
daa
or
mov
jbe
mov
cmp
add
sbb
mov
addl
or
ret
or
bound
add
add
stos
add
nop
sahf
movsl
add
lahf
popa
lods
test
push
daa
iret
xlat
lock
stos
mov
test
imul
sbb
adc
sub
mov
mov
outsl
add
inc
andl
ret
xor
gs
ss
jnp
icebp
je
mov
fldl
adc
sub
sbb
or
ret
xor
sbbl
add
adc
push
outsl
add
and
bound
dec
subl
fmul
add
add
in
mov
addb
xchg
andb
ret
cmp
out
mov
or
js
imull
sahf
bound
nop
push
mov
mov
push
pop
add
add
das
xor
xchg
pop
sbb
cli
or
add
mov
sbb
xor
cmc
mov
sub
jnp
add
test
cmpsb
mov
xchg
push
pop
ret
mov
add
pop
add
stc
jns
push
add
add
add
loop
in
cmp
or
je
push
cmp
xchg
jmp
stos
inc
mov
add
jnp
fsubs
cmp
mov
cwtl
test
pop
in
rcrb
sti
and
sub
add
idiv
add
ja
jnp
clc
jae
insl
add
stos
xor
jl
jns
xor
and
add
jne
mov
dec
add
add
xchg
fimull
je
add
scas
mov
sub
fcmovne
in
addb
and
ja
mov
shll
add
orl
out
mov
sub
hlt
scas
add
roll
in
es
inc
outsb
xchg
adc
shll
in
mov
test
or
jmp
add
pop
cli
aad
push
bound
add
test
sahf
daa
addb
inc
add
out
add
rol
and
add
sarl
out
mov
test
xchg
mov
in
es
aad
lods
push
sahf
inc
adc
outsb
ds
and
xor
push
outsb
stc
test
or
sub
mov
popa
jo
popf
insb
ss
jle
lea
inc
adc
cmp
mov
cwtl
xor
sbb
or
loope
add
xor
mov
in
cmpl
mov
pop
fwait
or
outsb
fs
clc
add
mov
nop
mov
xchg
sub
pushf
pop
or
add
ja
fmulp
push
aam
scas
pop
ret
jg
xchg
inc
inc
movsl
insb
daa
jae
out
mov
call
push
mov
lods
jecxz
add
dec
ss
adc
push
xchg
add
imul
cmp
sub
dec
nop
inc
mov
mov
pop
negb
stc
aaa
add
mov
lahf
push
rorb
mov
mov
add
xchg
lret
cmp
sub
push
stos
gs
add
fs
mulb
daa
add
rorl
ficoml
cmp
das
movsl
mov
imul
stc
add
jl
jo
es
movsl
add
insb
sbb
gs
add
imul
popa
add
add
jl
push
es
xchg
or
pusha
lret
out
push
movsb
xor
ret
loope
aas
stos
pop
jnp
es
mov
movsl
fwait
adc
sub
mov
lret
icebp
testb
jp
push
out
push
add
dec
addr16
dec
add
xor
sbb
add
jo
pop
cmc
inc
test
push
adc
xchg
cmp
scas
add
pop
mov
push
data16
sti
imul
pop
add
dec
sub
inc
add
dec
sub
add
sbb
push
xchg
loopne
sti
movsb
pusha
mov
add
in
and
push
cmp
hlt
mov
and
daa
and
add
pop
mov
adc
add
or
or
jecxz
cmp
into
das
jge
in
repz
sbb
sbb
movsb
out
add
scas
push
dec
or
jno
mov
sti
aad
clc
loope
lock
aad
push
pop
mov
repnz
add
push
sub
mov
enter
hlt
add
arpl
call
adc
lods
faddl
pop
mov
add
mov
fldcw
pusha
pop
adc
ja
subb
and
inc
mov
inc
add
cmp
push
xor
cmp
int3
jmp
popa
mov
sub
out
sub
pushf
shrl
cltd
xor
push
call
xor
mov
aam
pop
push
dec
xor
xchg
jle
inc
adc
sbb
jg
push
or
in
add
inc
xchg
scas
add
in
das
scas
add
xchg
cltd
lahf
pop
push
cmp
add
or
jge
add
aam
movl
sarl
addr16
fstpl
insl
push
add
mov
push
push
add
out
andl
mov
or
icebp
lcall
outsb
mov
inc
jg
clc
cmpsb
and
pop
or
pop
sub
push
xchg
pop
mov
and
repz
lds
xlat
cmpl
add
inc
mov
testl
sub
bound
clc
mov
lds
bound
mov
outsl
jae
movsb
sqrtps
xor
or
mov
stos
fldcw
cmp
out
adc
add
mov
inc
or
lea
adc
arpl
and
scas
mov
mov
mov
stc
mov
les
sub
lret
fiaddl
andl
cmpsl
insb
gs
and
enter
add
sbb
movsb
push
mov
xor
add
mov
nop
inc
add
add
loope
mov
cmp
fcmovne
iret
insl
sbb
addr16
push
add
sti
enter
out
and
fsubr
mov
sbb
mov
add
mov
jnp
dec
sub
scas
add
add
mov
cmpsl
verr
jnp
aad
nop
fildll
cmpsb
mov
sub
movsl
add
add
rolb
out
pop
adc
in
sub
push
fwait
xchg
dec
mov
sub
inc
or
rolb
popf
sub
xlat
add
ljmp
mov
xlat
popa
call
jecxz
cmc
cltd
dec
xchg
inc
and
mov
mov
mov
mov
dec
jno
popf
jno
jle
cwtl
nop
push
jnp
ret
jb
int3
dec
stos
testb
mull
ljmp
cmp
pop
mov
cmp
add
cmp
xor
jo
add
cmp
jmp
mov
add
jne
fwait
cs
jg
lahf
add
xchg
mov
mov
adc
fcmovnu
or
add
lcall
push
pop
mov
mov
or
jb
mov
jmp
push
orb
mov
lods
inc
add
sub
jle
or
sub
sbb
mov
mov
movsb
adc
add
mov
adc
roll
sti
fld
inc
rolb
test
mov
imul
adc
out
add
clc
push
cld
cld
movsl
fs
arpl
push
popa
mov
addr16
add
mov
mov
sub
and
fistpl
add
movsl
add
pop
jge,pt
imul
cs
jecxz
out
sub
cmp
nop
lock
xor
mov
imul
cmp
add
movsb
dec
xor
sbb
cmc
js
out
or
movsl
insl
filds
mov
out
inc
jmp
push
push
ret
mov
aam
add
push
enter
push
cltd
and
popf
and
ret
jmp
mov
push
cmp
add
and
add
pop
add
mov
lds
sarl
add
inc
add
add
out
mov
pop
mov
adc
xor
movsb
add
mov
inc
filds
addl
out
in
cli
mov
test
dec
out
sbb
or
mov
pusha
int
add
mov
sub
fs
fwait
stos
dec
xor
test
mov
push
cmp
stos
push
inc
dec
and
dec
lea
inc
repnz
dec
or
pop
cmc
xor
iret
mov
mov
cmpsb
out
aas
add
mov
sub
add
fs
sub
push
lret
mov
sbb
fstpl
xor
test
shrl
add
aaa
mov
mov
in
xchg
popa
add
add
iret
cmp
mov
add
push
and
stc
cwtl
test
push
add
sbb
inc
ja
mov
loopne
push
add
xchg
add
pop
pop
fisttps
fiadds
lock
push
testb
shl
cltd
sbb
xor
mov
loop
inc
nop
lock
faddp
mov
mov
in
jmp
or
fsub
test
cld
mov
scas
add
xchg
pusha
pop
add
add
add
cmpsl
sub
ss
orl
xchg
add
imul
outsb
sub
adc
add
cmp
add
je
dec
mov
xchg
dec
je
sbb
add
hlt
cli
xlat
add
in
jne
add
sbb
loop
mov
jmp
mov
testb
pop
inc
jne
dec
fimuls
adc
add
incl
fwait
mov
movsb
dec
push
dec
mov
stos
xchg
lret
cmp
mov
sbb
or
add
addr16
mov
aam
mov
stc
cmp
clc
push
iret
inc
add
xchg
jmp
mov
mov
dec
jl
add
aad
loop
xchg
ss
add
push
imul
add
mov
or
cld
add
jg
insb
mov
add
pop
add
fisttps
stc
sbb
shrl
icebp
int3
xor
add
and
stc
cmc
xchg
add
dec
mov
add
out
xlat
sbb
cmpsb
sarl
add
add
add
les
jno
int3
cmp
in
lods
popfw
roll
add
imul
fcmovne
adc
fimull
dec
cmp
xchg
xchg
notl
mov
add
movsb
add
adcl
loope
and
add
mov
rorw
mov
push
stos
push
sbb
hlt
xchg
dec
lretw
add
dec
pop
neg
xor
ret
add
faddp
cli
xchg
data16
push
xchg
cli
add
add
sahf
cmp
mov
add
scas
outsb
divps
push
cltd
and
inc
gs
add
sub
dec
add
cmpsb
jecxz
fdivp
cs
add
test
pop
out
adc
add
rcll
sbb
cmp
dec
cwtl
sub
aaa
add
push
add
mov
mov
mov
inc
movsl
in
fdivs
stc
pop
frstor
fidivs
mov
jae
fiaddl
fwait
movl
cmpsb
jecxz
insl
mov
cmp
adc
insl
in
or
test
add
lcall
pop
xchg
xor
xlat
dec
push
or
in
sub
push
cmp
stos
cmp
scas
cmp
push
sarb
add
push
aad
sub
mov
mov
xor
pusha
xor
psubsw
mov
push
add
add
push
adc
rolb
in
rolb
add
dec
add
cmp
outsb
dec
xor
test
clc
lret
or
add
ret
aaa
xor
loop
and
sbb
lcall
sahf
int
mov
adc
dec
imul
jb
lret
rorl
pop
hlt
mov
push
lea
incl
loopne
fwait
push
addb
dec
add
movsl
int3
mov
movsb
dec
cmpsb
bound
add
and
cmpsl
in
xchg
add
jae
iret
push
cmc
pop
cwtl
add
bound
add
es
and
das
rcl
push
nop
inc
inc
cltd
add
add
push
add
add
in
xchg
popa
orb
jb
repnz
inc
or
sub
cmc
mov
xor
mov
push
or
mov
test
pop
or
push
inc
dec
outsl
and
scas
add
cmpsl
sarl
sub
push
movl
cmp
inc
mov
push
test
sub
push
mov
mov
mov
cmp
xchg
leave
ret
dec
add
movsb
dec
jnp
add
je
dec
pusha
or
xchg
cmc
and
lods
xlat
jns
push
pop
adc
sbb
inc
add
fcmovb
add
dec
inc
in
sbb
mov
mov
pushf
std
mov
fwait
lock
push
fs
cmp
add
mov
repnz
in
jae
jle
fimull
jne
push
out
jbe
dec
adc
mov
add
add
push
or
add
lods
jbe
fwait
cmp
jae
fisubrs
cs
pushf
xor
add
ret
cmp
mov
jo
inc
fisttps
jmp
dec
insl
cmp
roll
jae
add
bound
out
cmp
mov
mov
jg
cwtl
test
xchg
xchg
nop
test
sub
fadd
fadds
add
pop
and
jl
cmpps
pop
ret
mov
push
cmp
pop
mov
in
xchg
jnp
jo
movq
scas
je
sub
testb
push
imul
sbb
or
data16
xchg
es
dec
lret
std
jno
sbb
adc
pop
jl
cmp
add
aas
mov
and
insb
mov
xor
faddl
sub
push
pop
mov
mov
aaa
mov
ret
imul
inc
xor
in
test
pop
jo
insb
xor
add
pop
movsl
imul
pop
loope
push
popa
add
shr
pusha
sarl
les
push
xchg
sar
and
pop
rcll
rclb
int
enter
push
and
cmpsl
pop
out
xor
leave
add
roll
rcrb
add
cmpsl
pop
adc
sarb
ret
jge
or
sbb
push
aaa
test
lods
push
cli
push
inc
push
add
add
ljmp
mov
es
mov
stos
dec
and
adc
inc
loope
sub
sbb
lods
sar
pop
mov
ja
push
add
xchg
add
sub
push
in
mov
cmp
add
add
add
rclb
test
mov
xchg
sti
cmpsb
cltd
inc
push
out
daa
push
je
cmp
cmp
sbb
in
fnsave
ljmp
ficompl
out
ja
mov
cld
sub
mov
add
push
stos
cwtl
addr16
pop
sub
sbbb
add
loop
cli
cltd
xchg
add
cmp
mov
xchg
gs
mov
or
into
dec
dec
cmp
add
in
mov
cld
push
add
push
idivl
lods
push
jae
xlat
push
push
subb
stos
mov
add
sbb
pop
out
cmp
inc
add
fs
add
icebp
sbb
mov
das
and
ret
add
sub
movsb
pop
push
fists
les
sbb
in
test
mov
adc
add
add
lock
dec
mov
mov
add
out
add
sub
rcr
pop
xchg
sbb
lds
add
ret
mov
add
add
inc
insb
push
pop
or
add
xchg
mov
pop
xor
gs
xlat
das
rorb
xorl
xor
scas
cmp
popa
add
mov
out
pushf
call
sahf
enter
sarl
cwtl
sbb
xchg
dec
mov
jbe
sbb
dec
pop
aas
xchg
lcall
and
addb
je
call
push
cmpsb
icebp
mov
lret
add
cmp
int3
xchg
dec
popf
in
stos
add
jae
movsb
test
inc
jp
inc
add
adc
or
test
add
cli
mov
push
fisttps
and
negl
add
orb
inc
jmp
cld
je
psrld
mov
hlt
outsl
add
xor
jbe
xor
mov
call
push
or
lods
roll
xor
movsl
cld
call
xor
jp
loope
xchg
push
out
imul
add
push
or
cmp
hlt
sbb
jle
sarb
shlb
ljmp
xchg
and
mov
cmp
push
test
decb
jo
mov
movb
fsubr
or
roll
in
aaa
cli
fisttps
mov
daa
hlt
push
mov
add
imul
fisubl
lret
mov
mov
pop
xor
jno
jge
jge
dec
push
sub
adc
adc
das
clc
xor
cmpb
adc
inc
lea
jl
push
push
jmp
add
in
rolb
push
push
push
aam
mov
out
add
icebp
adc
add
dec
fwait
mov
add
imul
cmp
mov
dec
add
mov
rolb
push
mov
ds
in
xchg
daa
sub
sub
mov
leave
add
xchg
out
sub
scas
sub
add
in
repz
mov
test
add
addb
add
jae
lea
movsl
scas
mov
or
lahf
inc
iret
fiaddl
int3
mov
jecxz
pop
jns
je
stc
popa
mov
dec
and
mov
pop
sarl
xor
ret
mov
nop
add
pushl
or
mov
insl
ret
mov
xchg
lods
shl
cmp
sbb
fwait
add
out
cmp
pusha
or
mov
cmpsl
mov
add
jo
ds
repnz
mov
fstps
and
add
sub
sub
ja
test
js
data16
cmp
mov
out
test
inc
movsl
xchg
or
sahf
xchg
add
add
lret
xchg
ljmp
imul
sub
ltr
fists
add
inc
cld
sahf
add
xchg
lock
mov
push
push
cmpsb
inc
and
rolb
cmpsl
pop
icebp
sub
sbb
out
add
add
add
rcrb
add
mov
lret
mov
cmc
jb
adc
into
add
addr16
cmpsb
add
add
shlb
jb
rcl
loope
add
push
mov
push
in
xor
dec
add
cwtl
fisubrl
ret
ret
jmp
jnp
or
jg
xchg
xchg
add
inc
push
mov
mov
filds
add
jb
ja
push
std
cmp
ret
and
mov
push
cli
stc
es
jbe
push
shll
cmp
dec
push
xlat
mov
mov
clc
inc
rcrl
add
push
sbb
ljmp
xor
inc
sbb
ja
ret
add
lock
les
outsl
push
add
add
add
sbb
rorb
movsb
pop
test
add
mov
inc
jmp
add
mov
mov
imul
jp
ffreep
mov
cmpsb
dec
aaa
mov
push
rclb
idivl
xchg
jne
mov
xor
jmp
aas
fldenv
add
dec
fwait
dec
ja
cmp
stc
flds
sbb
mov
int3
cmp
enter
mov
stos
add
add
add
add
sbbl
jmp
add
inc
add
inc
xor
add
sub
loopne
into
ret
push
push
mov
cmpsl
add
push
loop
add
movsb
cmp
leave
inc
add
and
pop
add
pop
add
aas
adc
add
mov
cli
pop
push
add
add
test
ss
adc
xchg
cmp
in
pop
push
icebp
pop
pop
out
add
cwtl
add
mov
xor
jmp
inc
push
cmc
in
jne
sub
cmp
mov
popl
pop
jle
xchg
or
and
xchg
cmp
roll
xchg
or
in
pop
mov
inc
cmp
cmc
call
jbe
xor
pop
push
sarb
jae
in
int3
add
aas
les
stos
mov
push
shll
lcall
into
pop
popa
xchg
popa
or
loopne
xor
fwait
loopne
sbbl
mov
add
addps
dec
cmp
daa
imul
out
xor
inc
sbb
aad
call
add
mov
mov
imul
adc
enter
inc
aaa
daa
cmpsb
in
xchg
cmp
cmpl
jo
imul
add
add
push
add
sbb
dec
jno
daa
subl
int3
ljmp
cmp
cltd
out
std
xchg
test
add
test
xchg
inc
add
or
test
push
out
cs
dec
mov
aad
add
add
sbb
into
icebp
push
js
push
mov
add
aaa
mov
add
in
add
sahf
repz
mov
fdivs
lret
pushf
nop
add
fldt
aas
jge
es
push
sbb
test
test
adc
push
ja
mov
ret
les
jo
add
push
mov
push
jg
data16
or
into
mov
add
jge
std
dec
addl
or
xchg
jnp
mov
test
jge
rcll
hlt
movsl
jno
and
gs
push
dec
add
inc
std
adc
fistpll
mov
mov
inc
iret
cmp
lcall
rcrl
sbb
add
outsb
mov
fmull
xchg
movsl
or
push
xchg
pop
mov
push
fisubs
sub
sub
inc
aam
add
mov
lret
inc
aad
mov
sbb
int
aad
cmp
mov
mov
jp
sbb
inc
add
data16
ljmp
popa
xor
add
lret
clc
pop
shlb
dec
sub
or
sub
stc
fwait
out
mov
sbb
or
mov
push
insl
push
lods
add
adc
sub
stc
pop
mov
outsl
mov
pop
push
cld
mov
mov
mov
data16
inc
adc
add
xorl
out
add
outsb
mov
dec
inc
add
rolb
repz
add
in
pop
mov
mov
adc
push
add
sbb
pop
add
or
stc
xchg
add
add
lea
sti
in
add
outsl
mov
loope
test
nop
in
cmp
sbb
stc
mov
jnp
inc
imul
ret
inc
test
fldcw
push
xor
lea
sub
pushf
outsb
sbb
ja
add
lods
push
lahf
hlt
hlt
adc
dec
ret
mov
xor
mov
mov
cld
jo
fsubp
add
add
sub
push
mov
lock
push
fiadds
pop
jp
mov
pop
jae
inc
jnp
push
clc
push
gs
dec
rolb
add
ret
ret
call
push
ja
lret
add
pop
ret
in
js
popf
add
xor
cmp
in
inc
frstor
xchg
movsl
cs
jbe
mov
test
dec
add
inc
adc
negb
xchg
inc
sbb
sub
std
sub
xor
test
shlb
adc
add
push
add
xchg
or
mov
sub
out
inc
sub
add
mov
or
lea
add
test
xchg
scas
out
scas
sbb
adc
in
inc
lahf
or
add
and
add
inc
shrb
je
lcall
mov
stc
pop
dec
mov
bound
add
sbb
out
mov
jmp
sahf
pop
dec
adc
leave
jge
mov
xorl
mov
add
aaa
push
inc
cmp
inc
leave
addr16
mov
fiadds
mov
cwtl
add
into
int3
mov
ja
xchg
sub
add
mov
sub
mov
dec
jno
and
dec
cs
cld
movsb
cld
or
notl
add
mov
jecxz
cmp
lret
pop
shl
pop
add
movsl
out
mov
sbb
ljmp
xor
cmpsl
mov
dec
ucomiss
mov
add
mov
hlt
inc
mov
lds
inc
add
ja
test
xor
mov
add
jmp
add
jns
je
dec
rcr
ss
xor
dec
incb
fiaddl
adc
inc
fstps
rcrb
es
pusha
pop
dec
fs
push
add
out
jns
jmp
and
dec
fldcw
adc
add
clc
mov
es
movsb
sbb
cli
lret
add
xor
repz
push
add
iret
mov
stc
add
xchg
add
add
jp
mov
bound
sbb
gs
push
sbb
sub
sbb
add
xchg
add
fiaddl
pushf
xor
xchg
add
jae
scas
mov
fwait
inc
add
enter
add
jge
out
dec
hlt
xor
shrb
add
xchg
je
je
lods
fadds
xchg
dec
popf
fwait
loopne
xchg
insl
test
pop
out
xor
add
dec
adc
mov
mov
pop
lea
flds
bound
add
add
fstps
les
or
and
inc
shr
popa
and
xor
jge
lret
xor
pop
inc
js
cwtl
add
adc
mov
add
popa
pop
sub
lret
out
addr16
aam
data16
push
add
sub
pop
lea
add
add
pusha
add
lods
sbb
imul
add
fstpl
add
rorl
dec
loop
pushf
test
jno
ss
jnp
mov
pusha
sub
rcr
xor
mov
shll
add
out
stos
lahf
call
add
std
not
sbb
testl
arpl
inc
inc
jns
cmp
jecxz
shl
sti
cli
inc
add
rolb
mov
in
fwait
push
push
loop
pushf
xchg
imul
or
pop
arpl
add
sahf
add
add
add
add
add
sbb
es
push
gs
sahf
add
add
add
in
add
xor
jmp
incl
cmp
inc
mov
add
cmp
mov
out
pop
imul
xor
test
add
sbb
dec
cltd
add
push
mov
xchg
add
cmp
sub
not
jb
fstpt
mov
adc
shl
add
iret
in
add
mov
xor
sub
add
add
pop
pop
cmp
mov
pushf
jp
fs
push
jle
mov
add
mov
movsb
add
mov
xchg
and
jmp
xchg
pop
lea
xchg
add
inc
push
test
cwtl
xchg
and
xor
push
in
or
nop
add
add
int
lahf
loope
test
pop
add
stos
stos
mov
xchg
jb
or
add
iret
test
lock
cmp
jmp
inc
lds
add
jmp
aas
mov
xchg
lret
lret
aad
or
stc
xor
add
dec
sbb
bound
add
adc
test
add
idiv
xchg
rorl
mov
repnz
add
das
add
jnp
ljmp
popf
add
retw
ljmp
fwait
cmp
jg
jp
cltd
dec
call
or
add
cli
ja
dec
nop
adc
rolb
sbb
dec
mov
pop
add
mov
add
mov
inc
xorl
or
fistps
popf
mov
mov
push
mov
mov
cmp
add
daa
jae
jne
rorl
add
mov
xchg
mov
fdiv
in
jnp
ja
mov
add
sub
add
adc
jge
and
pop
cmp
into
add
mov
push
lahf
dec
mov
xchg
bound
jg
in
test
adc
movsl
mov
lods
mov
or
xchg
jo
jge
scas
popa
std
mov
push
filds
jg
push
aad
mov
loopne
insb
mov
in
insb
sub
push
cmp
mov
add
sub
jmp
add
add
scas
movsb
and
jmp
add
mov
cli
pop
ja
mov
das
dec
add
or
sbb
movsl
scas
cmp
xor
or
ret
shll
add
ljmp
jae
add
imul
jle
imul
inc
dec
jne
jnp
add
lock
mov
jbe
xor
add
or
popa
mov
jno
mov
dec
leave
sahf
mov
insb
cmp
out
mov
js
fidivrl
add
cwtl
clc
jnp
add
inc
add
mov
adc
mov
out
fwait
xor
shrb
insb
in
jno
das
dec
pop
cmp
cli
dec
sub
add
xor
xchg
in
repz
cmp
int3
mov
pop
or
add
cmovo
sbb
inc
xchg
cmp
mov
test
add
jnp
adc
int3
test
daa
or
add
lods
in
test
mov
add
in
cmpsl
shrl
sti
xchg
cmc
add
add
bound
add
icebp
add
data16
lds
les
rolb
add
js
je
sbb
stc
adc
lcall
shl
dec
add
push
xor
xchg
leave
fisttps
stc
sub
dec
and
in
sub
ljmp
mov
cltd
lock
sub
test
stos
aas
icebp
add
jecxz
dec
out
shl
stos
jecxz
add
and
lcall
mov
rcrb
popf
add
clc
cmp
insb
je
out
add
push
pop
std
add
sti
call
xchg
jbe
insb
xchg
mov
dec
xchg
icebp
aaa
ja
outsl
lret
pop
xchg
out
inc
xchg
jae
imul
pop
add
add
or
aad
push
std
shlb
add
push
add
sub
or
ret
mov
pop
mov
or
pop
add
mov
es
jb
push
xor
mov
xchg
es
push
add
sbb
sub
inc
mov
push
inc
aad
sub
add
add
mov
push
out
jne
push
mov
sub
xchg
jmp
fs
add
or
pop
inc
insl
lret
push
mov
and
jg
sarl
add
sbb
mov
sub
xor
adc
add
cmp
call
sub
mov
inc
dec
inc
or
jp
add
mov
add
pop
add
xor
cwtl
addr16
mov
cmpsl
push
test
cmp
adc
lret
daa
push
inc
dec
add
out
fcoml
icebp
lahf
inc
push
xor
dec
and
mov
arpl
divl
repz
jg
push
or
cmovge
xchg
sahf
scas
out
dec
rolb
cmp
adc
sbb
rcr
add
in
imul
movsl
jg
inc
insb
add
dec
inc
fisubs
add
repnz
sbb
daa
add
mov
add
mov
push
mov
icebp
push
icebp
mul
into
ss
mov
fwait
push
add
sbb
sbb
sti
xchg
jle
pop
ljmp
mov
add
and
popa
stos
and
mov
jo
pop
add
outsl
xchg
and
cmp
push
cld
jl
xor
sbbb
jae
outsl
add
push
jb
add
add
add
rorb
mov
mov
mov
dec
sub
mov
mov
dec
sbb
sub
inc
fwait
xchg
jge
mov
into
pushl
str
mov
xchg
lds
sub
out
inc
enter
lds
fildl
test
sub
jbe
stos
in
test
pusha
pop
add
jl
out
or
popa
cmp
sub
imul
je
ret
cmp
jp
mov
arpl
and
sbb
sti
add
and
and
pop
add
dec
ret
addr16
xor
mov
mov
cmp
pop
les
sub
int3
sub
dec
in
or
scas
mov
jp
mov
in
add
mov
dec
js
add
aam
add
mov
cmp
das
mov
add
sbb
xchg
in
popf
pop
nop
inc
pop
xchg
mov
addr16
dec
filds
sbb
mov
arpl
in
mov
pop
test
add
add
repnz
aas
dec
loopne
jg
xchg
repz
push
out
addr16
add
and
stos
dec
add
popf
out
je
add
aas
xor
mov
add
pop
out
add
mov
add
dec
and
or
inc
imul
popf
adc
adc
or
adc
dec
movsl
jg
into
out
out
orb
addl
cli
lock
jecxz
cld
ds
in
mov
jecxz,pn
push
adc
add
nop
int
nop
inc
in
cli
ja
add
leave
mov
decb
dec
cld
dec
xchg
or
fs
push
fcomip
add
out
cmp
rorb
lods
ret
ret
or
mov
push
add
dec
cmp
rorl
sbb
cmc
mov
incl
or
fisubl
push
xor
jmp
mov
adc
xlat
add
bndldx
push
pop
insb
dec
sub
add
or
or
dec
add
xchg
sbb
fisubrs
es
orl
mov
add
jle
cmp
xor
jmp
das
icebp
outsb
pop
mov
jb
mov
add
sbb
jecxz
xor
cmpsb
lret
add
fcoml
ss
add
shlb
xor
iret
mulb
inc
cmp
shll
adc
fimuls
and
cmp
mov
shrb
cltd
mov
and
push
imul
add
out
jp
dec
pushf
outsb
add
xchg
add
adc
fisubs
stos
stos
cmp
std
into
in
pop
pop
add
push
aam
mov
or
lock
push
cmp
add
and
jg
int
arpl
into
mov
mov
fnstenv
repnz
add
mov
mov
enter
mov
gs
or
cltd
push
orl
push
ret
imul
add
jecxz
jno
pop
jns
cmp
push
cmp
fsts
rolb
stos
andb
add
cwtl
add
dec
ret
add
fs
stos
add
mov
jns
fsubl
jo
xchg
lret
fdiv
add
cwtl
push
pop
and
xchg
int
add
dec
idivb
gs
mov
sub
fadds
es
pushf
sbb
push
insl
int3
mov
jbe
xchg
or
loop
xchg
out
popa
add
stos
mov
xchg
push
dec
add
add
cmp
rcll
sarl
into
jnp
pushf
jecxz
mov
push
add
jle
repnz
sarl
dec
adc
add
aaa
in
sub
cmp
ret
sti
add
push
sbb
sbb
mov
pop
lea
cmp
mov
movb
jecxz
dec
enter
mov
mov
ja
mov
lea
xor
inc
sub
stc
enter
ror
add
pop
sbb
in
lret
mov
lret
and
push
add
jo
add
mov
sub
inc
add
adc
mov
mov
adc
dec
add
into
sub
add
dec
pop
xor
mov
cwtl
sbb
and
aas
and
into
lock
add
fisttpl
sbb
aad
mov
cmpl
add
jge
mov
mov
xor
outsl
add
cmpsl
add
movsl
rclb
scas
mov
out
adcl
adc
xchg
mov
jg
push
out
daa
mov
cmpsb
add
std
out
in
pop
or
outsl
iret
fisttpl
ficoml
mov
xchg
cmp
sbb
mov
xchg
pop
inc
mov
dec
adcb
ds
pusha
add
ljmp
xor
jp
notb
mov
out
aaa
cltd
xor
sti
sub
pop
add
jmp
out
add
shl
mov
add
add
add
add
xor
add
movsl
faddl
into
sbb
mov
adc
cmp
out
mov
xor
add
shl
es
ret
mov
lahf
lods
jp
xchg
sbb
sub
lods
inc
jo
cltd
sub
sbb
ret
sub
add
ss
lds
cwtl
xchg
negb
dec
rorl
inc
mov
rolb
xchg
mov
aad
mov
verr
addr16
add
scas
push
adc
push
add
push
fwait
out
mov
shrb
and
dec
mov
xchg
cmp
es
add
ds
add
jge
daa
inc
and
dec
adc
out
add
adc
xor
adc
add
insl
cs
loopne
js
add
scas
shl
movsb
es
dec
jg
daa
jmp
aas
xchg
xchg
xor
mov
xchg
int
xchg
xchg
mov
and
adc
imul
and
xchg
jle
jno
mov
jecxz
xchg
ret
mov
add
cmpsb
inc
push
pop
jecxz
in
loop
add
pop
add
out
sahf
add
sti
jb
and
subl
add
pop
stos
mov
xchg
shrl
add
adc
fcoms
pop
mov
jbe
add
cs
sbb
call
mov
push
mov
out
mov
jge
inc
repz
in
jp
mov
or
in
add
add
movsb
cmpsl
sub
in
imul
clc
into
xchg
cmp
pop
push
js
add
bound
jne
inc
xor
nop
pop
cmc
and
push
mov
add
mov
call
add
pop
mov
add
dec
les
jge
rolb
int3
add
lea
add
adc
xor
test
fsubrl
mov
xor
das
sbb
mov
std
dec
paddsb
jae
arpl
xchg
int
fimull
data16
js
xchg
sbb
in
pop
stos
add
jl
jae
mov
cmpsl
add
je
push
iret
cmp
sbb
jle
cmp
mov
inc
add
xchg
cmpsl
lods
sub
dec
inc
aad
dec
inc
pop
add
add
jb
sub
ds
in
sbb
rolb
sarl
test
mov
call
popf
mov
out
js
cmpsb
add
shr
jle
add
popa
aad
test
push
lret
iret
mov
addr16
das
rcl
mov
in
lock
test
sub
aaa
jnp
inc
mov
add
testb
inc
test
adc
and
loopne
testb
mov
jge
dec
add
push
sbb
pop
add
pop
adc
add
lret
outsl
ret
mov
push
stc
sub
pop
add
lahf
test
in
scas
mov
repnz
pop
int
cld
and
pushf
mov
push
mov
or
add
pop
roll
mov
adc
pop
dec
je
add
sbb
addb
lcall
add
cmpsb
adc
out
lahf
mov
sbb
jmp
add
add
daa
adc
aad
jae
das
ret
mov
cmpsb
inc
mov
inc
xor
lahf
scas
jp
add
nop
push
jecxz
test
jne
jae
pop
das
inc
ljmp
add
test
lea
add
lret
scas
add
sub
pop
rcrl
push
cmp
lret
lret
stc
jo
fiaddl
mov
add
sbb
mov
lea
aaa
push
mov
enter
jbe
xchg
call
xchg
pop
mov
ja
dec
aad
pop
sub
test
je
ss
jg
mov
hlt
movsl
pop
inc
add
cmc
in
sub
dec
add
inc
sbb
add
popf
adc
sahf
fdivr
push
pop
fiadds
add
adc
add
adc
add
fs
in
dec
and
jmp
and
ret
pop
sub
add
inc
int
dec
iret
scas
dec
aam
enter
inc
dec
jno
adc
imul
sub
add
adc
sub
stos
int3
ss
rorl
aas
inc
imul
sub
mov
pop
and
lods
jmp
xchg
jle
add
add
enter
add
mov
inc
lods
add
mov
fldl
jg
cmp
sub
fwait
ret
or
mov
hlt
add
sub
flds
ljmp
add
and
fldl
movsl
add
lret
shl
adc
aad
add
lea
icebp
fs
jge
cmp
faddp
adc
add
push
leave
adc
inc
fcomps
mov
add
idivb
mov
xor
mov
mov
add
outsl
jmp
push
stc
repz
mov
xor
inc
sub
cli
add
pop
jp
in
sbb
add
add
push
cmp
sbb
xchg
or
loop
mov
adc
fucomp
shrb
add
scas
lods
dec
loope
push
adc
jb
sbb
and
jp
out
cmc
enter
out
xor
js
roll
push
cmp
es
in
test
add
xchg
xchg
call
incb
inc
jbe
add
pop
imul
mov
je
nop
insb
add
loopne
fiadds
loopne
mov
lock
dec
inc
ret
lock
xchg
jno
mov
mov
adc
pop
mov
das
cld
sub
outsb
rep
mov
pop
dec
paddusb
das
add
xchg
add
and
add
stos
jae
or
add
int
roll
push
inc
nop
fildl
fnstcw
xchg
jmp
insl
jecxz
fadds
xor
loop
icebp
scas
das
add
add
or
adc
lret
sub
arpl
or
test
cmp
inc
push
and
jbe
cmp
imulb
add
dec
stos
stc
lcall
add
lret
add
lret
stc
and
mov
or
pop
xor
sub
mov
pop
mov
push
cwtl
add
mov
add
add
lret
int3
xchg
adc
shlb
outsl
stos
or
add
insl
add
into
and
je
xchg
mov
jecxz
inc
add
add
aas
test
pop
mov
cvtps2pi
cmp
lret
add
inc
je
test
or
dec
sti
mov
jb
inc
pop
add
add
loop
lahf
add
pop
daa
ds
adc
dec
iret
scas
xor
add
adc
mov
push
ljmp
mov
cmc
int3
lea
shrb
adc
add
in
fnstenv
shrl
mov
jecxz
out
push
push
rorl
jge
jge
mov
popa
popf
mov
and
mov
inc
inc
adc
pop
fldcw
popa
push
jbe
fwait
push
sbb
adc
movsl
add
je
bound
sub
adc
movsl
cwtl
ja
mov
push
add
add
mov
faddl
dec
sbb
push
add
xor
sub
sbb
insl
fistpll
mov
subl
push
cmp
cmp
roll
and
sbb
incl
scas
inc
jne
lods
pop
pop
fwait
add
dec
cli
adc
mov
sbb
rorl
push
cmpsb
add
dec
add
pop
or
movsb
mov
nop
cmpsl
subl
test
sbb
jmp
lret
and
add
filds
out
push
sbb
loop
pop
add
ficompl
add
in
push
pop
cmp
and
add
sbb
divb
clc
pushf
dec
add
add
push
mov
mov
add
es
pause
bound
shrl
mov
andl
rcll
in
jmp
cmp
fldl
dec
ret
dec
aad
sub
js
ss
or
pop
rcll
hlt
dec
andb
sbb
sar
scas
push
rolb
mov
push
adc
push
repz
outsl
mov
or
lods
das
sbb
pop
jno
bound
jl
out
in
sbb
fadd
mov
and
jbe
movsl
icebp
dec
ficomps
adc
xor
add
sub
xor
add
mov
adc
in
pop
jb
add
mov
pop
pop
cmpsl
sbb
add
jb
add
mov
sub
xchg
lret
xchg
sbb
outsl
mov
mov
lods
cwtl
adc
in
xchg
aas
es
and
jb
lods
insl
inc
push
ja
shll
jns
add
bound
aad
shlb
cmpsb
outsb
add
xchg
add
push
xchg
sbb
xor
jns
fstl
iret
xchg
xor
mov
insl
add
adc
pop
int3
cmp
gs
cld
js
les
cltd
shll
cmpsb
inc
movsl
add
bound
xor
jle
add
add
dec
js
inc
mov
sbb
mov
adcb
inc
sub
stos
test
dec
daa
icebp
jp
cmp
in
jge
rolb
pusha
pop
jne
mov
bound
pop
popf
push
cli
cmpsb
and
add
fcmovnbe
add
push
add
loop
jnp
push
jp
clc
jg
shl
cltd
xchg
add
adc
push
ret
int
cmpsl
ljmp
and
add
pop
inc
mov
push
push
ret
mov
mov
adc
push
test
pop
cmp
mov
enter
imul
mov
mov
bnd
shll
mov
ss
add
mov
sbb
fdivrs
mov
mov
inc
ja
aad
add
in
mov
ds
lods
fnstsw
add
int3
pop
inc
add
mov
pop
add
out
leave
test
add
in
add
pop
lods
clc
lds
jg
rcr
and
lods
mov
mov
add
test
lods
fcmovb
pop
jae
push
cmp
outsl
ds
cmc
add
clc
add
and
adc
mov
in
idiv
mov
pusha
dec
das
int
insl
jbe
push
aas
in
movnti
xor
flds
mov
mov
fnstenv
add
mov
pop
sbb
add
add
in
add
je
add
xchg
inc
popa
push
or
fadds
jle
fists
and
pop
add
and
rcr
leave
add
cmc
add
add
stos
mov
mov
lret
or
jno
or
cmpl
or
mov
adc
es
or
and
mov
pop
push
add
popf
int3
mov
lods
push
mov
clc
inc
mov
ss
push
mov
mov
pop
push
outsw
add
test
sti
mov
pusha
jno
out
jno
xchg
negl
cmpsl
add
stos
hlt
sbb
fldcw
dec
out
addb
pop
inc
push
xchg
add
mov
je
mov
mov
sti
jne
inc
pop
in
sar
out
add
mov
inc
call
pushf
inc
adc
add
push
lods
mov
stc
repnz
mov
sbb
sbb
push
pop
inc
add
inc
add
sub
les
stos
sub
cli
push
stos
push
ret
jg
inc
mov
add
mov
add
lret
repnz
shl
sub
push
xor
sbb
add
dec
mov
aad
enter
adc
sub
cltd
das
loop
add
sar
fiaddl
mov
mov
outsb
add
shll
mov
incb
loop
add
stc
js
data16
inc
popa
push
push
lret
adc
sbbl
into
mov
and
rcrb
daa
dec
in
test
add
bnd
mov
aad
add
mov
add
movsl
xor
sbb
dec
cwtl
testb
sub
or
mov
add
mov
mov
push
pop
call
pop
cmpsb
lret
test
ficomps
sub
add
mov
sbb
add
icebp
cmp
stc
add
cld
into
dec
ljmp
cs
and
mov
popl
rcr
add
xor
xor
add
testl
cmp
push
out
dec
jecxz
insb
xor
add
jnp
pusha
rep
pop
call
add
loopne
xchg
push
pop
add
mov
dec
gs
sbb
adc
inc
stos
add
int3
xchg
vmovups
xor
mov
into
mov
add
xor
in
ljmp
add
into
ret
jg
loope
fnstenv
movsb
add
iret
fidivrl
fistpll
mov
add
lea
and
mov
das
jns
stc
andb
and
data16
mov
sbb
xlat
mov
fstpt
idivb
push
dec
or
push
mov
jmp
inc
iret
and
and
int3
popa
test
push
lret
or
add
je
jge
negl
insb
out
cmp
loop
int3
cwtl
cli
xor
fdivrl
les
fcom
std
out
add
add
add
xor
jno
stc
push
call
inc
cld
push
psubw
loop
out
and
lcall
mov
cmp
xchg
jge
jmp
jmp
sub
inc
jns
in
incb
and
mov
ja
add
mov
adc
repz
test
xchg
sbb
hlt
testl
inc
push
test
jle
cmpb
idivl
add
repz
inc
mov
jno
adc
aad
cmpsb
add
xchg
mov
fld
push
cltd
sbb
mov
mov
cmp
jecxz
out
fimuls
jle
ss
loope
adc
nop
xor
pop
add
xlat
mov
rorb
mov
popa
mov
gs
repnz
sbb
add
and
and
jo
mov
mov
aaa
daa
aas
mov
in
push
lahf
add
add
push
jns
mov
or
pop
or
inc
xor
insl
getsec
add
inc
inc
push
prefetch
scas
test
outsl
jp
sub
add
add
js
sbb
dec
ret
add
add
sub
xor
inc
aas
jo
std
repz
inc
add
hlt
out
icebp
push
xor
push
xor
fbld
add
mov
sti
adc
cmp
mov
and
call
in
jns
pop
adc
js
pop
xchg
orb
add
add
aas
and
sbb
add
into
lcall
cmpb
hlt
gs
pop
pushf
push
inc
sahf
data16
shrl
das
xor
enter
popf
mov
add
pop
loop
lcall
fildll
sbbl
xchg
and
push
add
mov
fldcw
add
adc
imul
push
fcmovnbe
sub
jnp
add
std
add
scas
lods
xchg
mov
movsb
add
aam
inc
mov
imul
movsb
add
out
jne
loope
icebp
mov
stos
out
aad
sbb
outsb
or
jg
fstpt
mov
xchg
add
ljmp
jp
push
mov
fld
and
adc
add
jg
jecxz
add
add
add
or
rorl
adc
add
pop
xchg
or
and
movb
loopne
pop
movsl
cmp
daa
adc
dec
add
pop
xor
add
dec
add
mov
lds
loop
add
xchg
nop
xchg
stc
add
or
add
sbb
cmp
ja
jno
jmp
adc
fwait
fs
or
loope
mov
jmp
mov
in
rcrl
mov
test
dec
mov
aad
shlb
movsb
cwtl
xor
pop
sahf
add
add
xchg
mov
cmp
add
inc
inc
sub
add
lods
push
mov
xchg
test
xchg
aad
popa
add
add
pop
cmp
add
or
push
adc
adc
scas
adc
sub
imul
add
xchg
mov
enter
pop
sarl
pop
hlt
lcall
add
inc
clc
inc
pop
pop
loope
push
add
cmpsl
adcb
add
and
mov
and
pop
jp
inc
add
xchg
mov
call
add
cmp
movnti
inc
cmc
jns
out
and
xchg
add
sarb
mov
xor
add
pushf
cmp
ja
xor
fimull
sbb
bound
xchg
loop
pop
enter
cld
push
incb
pushf
stos
rcrb
push
add
jnp
push
gs
ds
fs
arpl
addr16
sbb
mov
jo
jl
add
add
xor
popf
ja
push
mov
and
in
lahf
out
in
xor
add
and
xor
jno
sub
pop
popa
push
jb
add
sti
add
add
push
out
fisttpll
mov
into
adc
fistpll
xchg
add
test
popa
mov
leave
adc
mov
pop
add
ljmp
sbb
jo
gs
rolb
sbbb
and
sahf
mov
mov
mov
jp
add
add
pop
or
loope
mov
mov
push
je
add
sti
popa
add
cmpsl
arpl
or
or
cmp
mov
sub
ret
fs
push
push
push
adc
sub
out
cmpsl
in
xchg
adc
popf
jns
xlat
cmc
add
dec
das
dec
test
addb
add
aam
push
neg
dec
sub
into
out
add
incb
jbe
daa
sub
mov
add
dec
add
loope
pop
add
into
mov
jbe
add
mov
add
dec
xchg
addr16
xchg
subb
outsb
popf
xchg
lods
mov
push
add
mov
data16
and
rolb
iret
cwtl
fwait
sub
adc
cmp
shll
sub
outsb
xchg
cmpsl
xor
add
nop
lods
adc
arpl
loopne
sbb
push
or
adc
aam
pop
inc
movsb
cmp
je
aaa
add
add
mov
or
sbb
push
pop
ret
cmp
inc
mov
cmp
int3
arpl
mov
mov
mov
jns
cmpsb
xchg
ret
jns
sbb
jno
inc
add
lock
loop
sub
add
mov
pop
popf
add
mov
pop
jl
mov
cmp
stc
add
movsb
pop
loop
jg
orl
cmp
mov
jnp
ja
sbb
lock
movsl
test
add
call
pop
cmpsl
rol
add
insl
add
rcr
mov
in
jl
mov
imul
lret
out
sub
push
xor
cmc
dec
jbe
inc
mov
in
pop
add
out
mov
les
mov
mulb
rorl
add
fsts
push
ljmp
das
cmp
inc
mov
jp
jbe
lea
inc
movd
rcl
test
sub
jne
ret
xchg
xchg
sbb
movsb
das
sub
mov
cld
cmp
jmp
or
pop
scas
fisttps
pop
adc
jb
jns
lods
scas
push
incl
dec
or
pop
mov
rorl
aad
add
push
aad
cmc
adc
fs
cmp
je
sub
jb
rolb
ljmp
lret
or
fwait
sbb
shrb
add
jp
leave
add
cmc
cmp
fistpll
loope
stos
sub
or
jae
mov
or
cmp
add
pop
loopne
sub
cld
sub
mov
dec
out
lea
inc
push
add
xor
pop
or
add
xor
fimuls
jo
ljmp
insb
loop
mov
xlat
incb
dec
rolb
rcrb
leave
scas
add
dec
add
rolb
push
inc
inc
jmp
cmpsl
push
andl
mov
adc
inc
add
hlt
ret
insl
adc
dec
popf
lock
mov
add
dec
mov
test
and
mov
xchg
mull
pop
loop
ret
add
add
pop
mov
loopne
pop
mov
lods
mov
adc
add
movsb
add
fstl
mov
aaa
adc
inc
pop
out
mov
inc
loop
add
jecxz
and
sbb
mov
add
loope
mov
sbb
dec
cli
adc
aam
lds
cli
es
pop
mov
add
stos
pop
aad
and
movsb
sub
add
jecxz
add
pusha
jmp
or
cmpsl
jge
ucomiss
cmp
push
add
push
or
jae
in
lea
dec
add
in
scas
mov
lea
ud2
aas
add
lret
mov
pop
add
lock
cmpsl
loop
mov
int
xchg
fiaddl
pop
mov
inc
sbb
or
shl
add
push
test
add
add
ljmp
rcrb
divb
add
push
inc
subl
adc
and
or
stc
mov
js
fcmovnbe
lods
jne
out
dec
adc
rcrl
shrl
insb
mov
add
inc
ret
ljmp
mov
dec
jo
shl
add
aad
and
les
push
mov
push
add
in
mov
jp
lcall
xor
scas
negb
mov
sub
stos
dec
add
sbb
xchg
pop
sub
inc
adc
add
xchg
mov
sbb
add
outsl
add
sub
in
les
cs
adc
loopne
call
jecxz
mov
fisubs
addr16
test
out
jno
inc
sub
in
js
add
mov
lods
inc
inc
add
xor
pusha
sbb
pushf
jle
push
adc
mov
cmpsb
pop
sub
pushl
fistpll
fs
mov
jns
add
test
dec
push
fwait
daa
mov
xchg
icebp
movsl
mov
xor
or
stos
mov
mov
dec
cmp
inc
sub
insb
sub
scas
dec
jg
push
dec
data16
popa
pop
stos
add
push
sti
int3
insb
adc
adc
lods
das
les
add
xchg
sbb
cli
add
sub
jnp
xchg
vmread
dec
mov
je
mov
rol
mov
iret
push
mov
dec
into
sahf
mov
xchg
pop
pop
fsubr
jg
mov
mov
fidivrl
inc
xchg
cmp
sahf
jne
shll
dec
push
add
xchg
cmp
daa
fldt
add
inc
jne
popf
mov
jp
push
xor
add
push
pop
cmpsl
scas
add
xor
test
xchg
jo
sti
mov
lcall
adc
add
bound
xor
and
add
sbb
subl
add
xchg
data16
stos
mov
sub
lock
mov
int
lret
rorb
rcl
cmp
mov
psubsw
cmp
scas
fwait
jl
sbb
xor
sbb
cmp
push
ret
jne
in
mov
or
std
loopne
push
jle
adc
add
add
fs
xor
lea
jno
push
inc
dec
loopne
mov
or
pop
mov
cmpsl
sub
sub
sbb
data16
pop
mov
sbb
add
clc
aad
hlt
cmpsl
sbb
addl
jl
adc
dec
push
push
fistpl
nop
clc
pop
xchg
push
aas
xchg
mov
sub
sub
pop
cwtl
dec
rcr
mov
add
and
push
mov
mov
aaa
leave
cmpsb
bound
sbb
jae
popf
lods
mov
test
insb
mov
lret
xchg
arpl
mov
and
add
add
add
xlat
xchg
pop
stos
mov
loopne
jle
inc
inc
push
mov
cld
adc
xor
or
pop
fstpl
xor
mov
add
mov
daa
mov
adc
cmp
ror
xor
out
jnp
add
xchg
jb
test
push
add
aaa
add
xchg
adc
out
pop
or
fiadds
out
test
or
sub
push
hlt
add
pop
mov
xor
and
mov
inc
dec
dec
out
fimuls
dec
add
scas
add
bound
mov
clc
add
add
int
xchg
sarl
jl
mov
cmpsb
jg
cltd
push
add
int
rolb
adc
add
and
cltd
loope
mov
cmp
xchg
sbbb
dec
sbb
sub
dec
add
jmp
pop
fsubl
mov
loope
ds
add
sub
jne
sti
popa
imul
popa
sub
mov
test
rcll
add
sbb
stc
dec
shr
data16
add
sbb
shll
push
xchg
icebp
jge
test
xchg
shlb
inc
lcall
adc
sub
mov
xchg
in
das
rcrb
cmpsb
push
sbb
jnp
insb
xchg
test
or
out
and
aaa
imul
add
adc
fs
test
push
dec
addb
and
jp
jbe
sub
out
or
lcall
jne
test
repz
loopne
cmpsb
aam
jg
fcmovne
loop
add
adc
add
sub
xchg
mov
cli
xchg
sub
mov
mov
xchg
mov
loopne
push
add
xchg
shlb
popl
add
je
mov
add
and
mov
bound
ljmp
add
dec
out
sbb
leave
push
cwtl
pop
sahf
aas
push
adc
pop
fmull
sbb
es
pop
aam
rorb
mov
add
push
lea
clc
push
inc
add
stos
xlat
arpl
cmp
xlat
mov
sbb
push
fwait
scas
sub
adc
cmpsl
aas
add
aas
scas
clc
orl
pop
lods
add
adc
mov
pop
insl
xchg
pop
aad
mov
test
popa
add
mov
ds
dec
and
mov
shll
add
sub
push
add
scas
adc
add
hlt
xor
sahf
add
mov
add
push
pop
add
out
jbe
je
fsubs
inc
add
sub
xchg
sbb
insb
add
push
push
js
xor
insl
mov
insb
xchg
xchg
pusha
sub
jae
add
loop
js
int3
vmovupd
add
jp
mov
fwait
and
imul
add
subl
cmp
dec
pusha
xchg
jg
daa
sbb
in
out
xor
scas
sub
jecxz
aaa
das
jno
fsubr
add
ss
lcall
cmp
out
and
mov
pop
dec
and
add
jle
nop
mov
popa
xorl
imul
mov
lods
mov
sub
mov
stc
xor
das
pop
repnz
pop
in
repnz
int3
jo
mov
aad
lahf
rorb
in
in
fldcw
push
nop
mov
pop
stos
mov
mov
imul
jne
jno
daa
repz
or
cmp
repz
loopne
data16
add
pop
adc
mov
hlt
std
mov
xor
jae
adc
gs
lock
pop
fbstp
add
sub
xchg
push
jecxz
insb
add
fwait
mov
pop
bound
pop
add
aad
pusha
add
adc
jno
movsl
lods
adc
movsb
mov
xchg
test
ret
and
insb
inc
add
cmp
loope
cmp
addr16
lods
mov
or
mov
push
sbb
push
mov
push
cmpsl
push
jnp
lret
adc
xchg
push
sahf
pop
jp
movsl
xchg
mov
push
pop
loop
add
es
add
xchg
add
cli
repz
pop
lea
xchg
mov
push
cwtl
inc
ja
and
push
sbb
cmp
test
push
mov
lods
sbb
sub
jbe
sub
mov
ret
push
icebp
adc
inc
cmc
ljmp
xchg
pop
pop
inc
gs
inc
popf
fiaddl
pop
push
adcl
out
cmp
adcl
dec
dec
mov
in
pop
sbb
mov
inc
lea
xor
in
pushf
addr16
add
push
dec
adc
mov
dec
push
jne
and
mov
xchg
and
jg,pn
sbb
fistps
push
sbb
xchg
sbb
lods
faddl
adc
jne
sbb
mov
add
addr16
inc
ss
in
popa
cmp
dec
arpl
xchg
test
cmp
and
lcall
movsb
filds
cwtl
xchg
inc
cmp
lock
movsb
mov
and
mov
push
mov
xchg
jae
out
out
mov
adc
add
insb
or
mov
jnp
pop
cmpl
in
dec
dec
sbbb
adc
or
push
pop
sub
dec
pushf
in
loop
and
mov
inc
cmp
add
ja
mov
push
inc
sbb
xchg
mov
movl
scas
mov
or
add
add
and
jp
imul
or
cmp
xchg
add
mov
incb
pop
add
push
imul
inc
mov
imul
inc
push
dec
cmc
lea
sbb
popa
sub
add
icebp
mov
mov
test
push
adc
mov
push
js
push
pop
add
add
add
adc
nop
sub
cmp
sbb
add
push
xchg
outsb
and
dec
dec
inc
dec
mov
cmp
push
add
cwtl
out
cmpsl
pop
es
adc
sbb
mov
push
cmp
stos
pop
sub
or
out
mov
movsl
stos
fidivrl
inc
push
jne
push
rcrb
add
pop
imul
dec
jbe
imul
rclb
mov
ret
mov
add
adcl
fwait
pop
es
push
lcall
mov
es
ror
cmpsl
xor
cmpsb
clc
jne
pop
sub
xchg
or
add
jge
xor
cmc
rcrl
push
jmp
repnz
pop
add
ror
icebp
out
xchg
cltd
inc
add
movsb
mov
subl
add
jp
add
push
cmp
cmpl
push
cmpsb
mov
inc
aas
rolb
pop
mov
push
mov
fwait
call
adc
push
push
sbb
insl
js
mov
adc
addr16
mov
mov
lahf
addb
and
sbb
mov
pop
add
push
cmpsl
sbbl
loope
push
iret
je
mov
and
jb
loopne
aaa
popa
cmp
push
lahf
or
jge
mov
dec
cmc
pop
push
inc
fmull
insb
iret
push
test
test
rclb
js
inc
cwtl
dec
mov
jno
mov
add
out
dec
fsubs
add
sbb
push
sahf
aad
movsb
add
jbe
add
cmpsl
leave
gs
sub
add
mov
int
sbbb
stos
lods
jbe
cmp
jge
cmp
cmp
test
adc
data16
les
in
push
add
add
sbb
jge
push
mov
or
sarb
or
inc
add
mov
add
jl
fcomip
add
insb
add
adc
push
sbb
inc
cmp
lds
in
xchg
sbb
xchg
xor
xchg
scas
cmpsb
add
push
les
sbbl
cmp
fcomi
inc
and
movsb
lock
mov
js
lds
mov
test
stos
jecxz
mov
loop
cmp
cwtl
mov
add
add
pushf
add
jne
cmp
pop
inc
mov
add
mov
int3
sub
insl
push
out
es
out
and
pop
std
imul
jmp
adcl
sahf
sub
in
cld
cmp
cmp
sti
inc
std
adc
cs
in
ds
push
mov
cld
adc
sub
test
push
sub
jecxz,pn
sbb
out
and
mov
add
add
lret
inc
filds
xchg
add
cmp
push
mov
test
cmp
imul
mov
jle
cmpsl
add
mov
js
cmp
adc
add
in
mov
mov
lcall
lods
aam
and
push
mov
test
into
xchg
add
jp
hlt
push
ficoms
pop
sbb
scas
std
arpl
imul
fldt
cmpb
mov
and
mov
ret
xchg
push
repz
adc
xor
add
xor
loope
adc
inc
loop
dec
add
lods
push
sbb
add
add
stc
sbb
add
pop
pop
push
mov
aad
sarl
push
notl
pop
xchg
shr
add
out
mov
inc
push
pop
stos
aaa
enter
push
lcall
inc
int3
add
add
xchg
lret
vpunpckldq
inc
loop
adc
mov
mov
sub
fiadds
adc
je
dec
or
jge
pop
out
imul
data16
add
push
mov
inc
xchg
jge
sub
iret
and
insl
mov
cmp
mov
int
rcll
mov
ss
sbb
icebp
sub
fwait
adc
insl
push
lock
insl
and
fistps
call
in
test
jbe
jecxz
js
lock
xchg
sub
add
dec
add
jno
jo
add
sbb
fbld
ret
push
push
add
decl
add
aam
push
xor
cmp
or
jecxz
outsl
add
mov
pop
add
add
adc
fwait
lock
add
lcall
jg
cld
jmp
mov
shr
mov
popw
fstps
lcall
push
movsb
lea
data16
bound
movsl
push
jno
fidivrl
xor
fs
mov
sbb
xchg
orb
cli
sahf
and
es
mov
mov
xlat
clc
add
sbb
push
fsubrs
add
add
fsub
movsb
ja
sub
push
adc
mov
xor
pop
mov
pushf
out
arpl
hlt
add
xlat
add
mov
fstpl
cwtl
movl
inc
add
fmuls
dec
ljmp
sub
jecxz
or
pop
dec
inc
fnstcw
sahf
stos
xchg
add
cmpsl
mov
mov
iret
mov
nop
add
and
outsb
cmp
mov
add
daa
add
aam
jo
or
fwait
ret
add
mov
int
xchg
in
push
call
sub
jne
jbe
add
shrl
mov
pop
adc
sub
or
add
add
xor
loop
add
mov
mov
repz
es
inc
fidivrl
cmp
fcoms
sets
mov
cli
jae
cld
mov
xchg
push
fldt
scas
push
push
std
andb
inc
xor
jle
mov
mov
push
iret
mov
fcomps
sub
add
add
add
and
fidivs
xor
sub
or
xchg
push
xor
rol
xlat
push
adc
and
pop
mov
xchg
adc
sub
pop
sti
push
mov
jb
dec
mov
push
jle
add
or
jns
lock
adc
cs
add
stc
xor
sbb
mov
fwait
xchg
in
pop
rcr
jno
add
enter
fistpl
sub
aam
add
iret
sbb
or
add
loop
sub
dec
mov
cmp
or
push
sbb
pop
in
add
inc
mov
fcomip
jle
mov
sub
pop
add
or
aas
lods
mov
xchg
push
lock
out
mov
int3
enter
iret
ss
mov
cmp
and
ltr
test
fldt
pop
outsb
popf
loop
das
das
add
adc
mov
test
aaa
out
cld
movsb
mov
mov
scas
add
add
adc
push
arpl
mov
adc
sahf
hlt
xor
daa
dec
adc
pop
or
cmpsl
pop
mov
add
add
es
dec
ljmp
add
arpl
movsl
out
mov
call
add
mov
outsl
cld
mov
pop
inc
sarb
sahf
xchg
xchg
int
inc
jle
mov
xchg
mov
pop
xor
jge
xor
add
dec
adc
add
in
push
lock
das
or
push
sbb
paddw
sbb
adc
or
daa
push
test
dec
add
dec
and
mov
add
or
add
ss
mov
xchg
stc
fucomip
pop
xchg
push
dec
es
aas
xchg
cmp
adc
lods
subb
pop
xchg
out
dec
and
aas
cltd
mov
iret
sbb
sub
cmp
pop
les
jne
rclb
pop
sbb
push
fiadds
dec
jbe
in
fsubrs
jecxz
jmp
inc
fcmovne
add
xchg
sub
pusha
add
mov
outsb
jmp
pop
or
add
dec
xorl
in
and
pop
lcall
push
adc
dec
out
xchg
cmp
adc
jle
mov
fcmovnb
test
pop
ljmp
add
push
cmp
loop
int3
add
push
aam
aaa
jo
jl
in
test
push
pop
adc
jmp
add
popa
imul
pop
rcll
mov
dec
jp
mov
stos
push
mov
push
cs
cmpsb
add
aas
mov
sub
test
stos
push
and
decl
in
imul
xchg
je
je
mov
mov
or
mov
iret
cmp
test
jb
movl
jl
std
out
aas
hlt
jge
add
shll
add
xor
mov
out
in
sahf
add
add
repz
pushf
add
cmc
cmp
pop
rcrb
or
cmpsl
add
rorb
jo
pop
mov
addb
adc
movb
add
add
int3
enter
jo
pop
sbb
bound
negl
dec
lods
ret
jnp
add
or
mov
xchg
lock
and
or
neg
mov
jae
pop
and
xor
clc
hlt
das
xor
int3
int
mov
add
std
in
lds
aam
aas
filds
enter
push
cmp
outsl
idivb
test
xor
adc
and
add
sub
rcrl
pop
fstp
pop
dec
push
cmp
xchg
add
pop
or
dec
mov
dec
ret
repz
sbb
cmp
test
fwait
inc
out
add
or
add
inc
mov
sbb
es
sbb
cmpsl
inc
imul
and
mov
cs
cmp
and
lods
or
add
loop
cmpb
adc
add
test
shrl
add
xor
add
cmp
jbe
add
jecxz
movsb
ljmp
adc
in
cmp
add
jmp
mov
xor
push
subb
jae
repnz
sub
in
ljmp
subl
cmpsl
jnp
add
jnp
add
add
sub
mov
into
fstps
dec
mov
pop
icebp
add
mov
push
sub
jo
jo
mov
jge,pn
aad
and
ljmp
pop
adc
int
add
sub
mov
popa
mov
lock
repz
dec
push
dec
xchg
lret
adc
push
in
fdivs
inc
add
sub
scas
or
push
fistpll
imul
cmp
rorb
repnz
add
addr16
inc
and
mov
or
lods
stos
xor
pop
scas
jno
adc
jb
cmp
jae
call
xchg
xor
mov
add
repz
cmpsb
repz
add
add
mov
push
add
jae
add
imul
mov
or
mov
sahf
pop
add
or
inc
mov
push
mov
cltd
ret
add
fs
pop
and
sbb
scas
inc
filds
lock
cli
inc
fs
push
lea
sub
mov
shlb
lds
sub
int
in
out
fdivrl
push
xor
fwait
add
cwtl
in
jb
adc
js
mov
push
dec
mov
jnp
mov
lods
insb
add
leave
add
arpl
insl
add
cli
ret
mov
loopne
movb
dec
mov
lret
movsl
jno
fwait
mov
sbb
cmp
xchg
pop
sbbl
fisubl
push
pop
faddl
scas
shlb
rcl
daa
push
mov
push
les
fisubs
mov
xchg
pop
adc
dec
cmp
add
add
xchg
mov
mov
cmp
in
loopne
add
lahf
jbe
jno
shlb
push
add
add
movsl
inc
add
imul
mov
movsw
lss
dec
rolb
outsl
andl
lahf
lret
xchg
fistpll
jb
mov
call
add
xor
iret
and
pxor
out
stos
es
cmp
cmpsl
clc
pop
pop
add
ljmp
sub
pop
xchg
lods
cli
movsb
xchg
add
mov
sub
jbe
cmpsl
and
int3
xor
mov
dec
shrb
adc
les
xchg
add
shrb
xchg
fdivrl
lahf
inc
add
inc
jae
cmp
sarl
jmp
inc
das
adc
loop
pop
inc
cmc
pop
add
inc
loop
icebp
add
cmp
loopne
and
cld
scas
add
inc
lock
mov
jecxz
mov
call
imul
lcall
sub
mov
mov
lods
cmp
xchg
dec
add
ja
testl
mov
stc
fbld
fwait
add
jmp
sahf
add
pop
add
stos
add
les
repz
or
fcmovb
into
mov
cli
add
ret
and
cmpsb
add
add
add
mov
pop
pop
cmp
popf
imul
add
add
add
fldenv
test
fmulp
outsl
pop
imul
add
in
push
mov
or
inc
add
nop
cmp
ja
add
outsl
enter
or
sahf
lcall
mov
mov
repz
add
jp
movl
mov
rclb
add
ficompl
cmc
mov
sarb
mov
aas
jmp
jmp
and
inc
add
inc
int
mov
mov
mov
adc
add
add
out
stos
outsb
addl
aaa
jo
xchg
jg
pop
push
stos
push
loop
out
pushf
incb
mov
sub
or
push
cmp
rorb
add
fidivrs
add
sbb
push
add
pop
add
imul
push
pop
stos
push
mov
out
outsl
pop
lea
ficomps
dec
add
jnp
mov
add
push
jecxz
add
mov
test
ss
adc
in
xchg
in
jg
sub
xchg
jno
or
inc
mov
imul
or
dec
ret
add
jl
add
aaa
test
xchg
mov
fidivrs
call
adc
ret
push
pop
add
aad
cmp
cld
push
test
add
mov
jl
mov
jnp
mov
mov
lret
test
sbb
inc
dec
scas
in
jne
jb
sub
adc
es
fiaddl
xor
add
jno
mov
bound
js
xchg
movsl
test
incl
push
cmp
jecxz
mov
loope
jb
into
mov
adc
in
jne
lods
mov
add
xchg
or
add
dec
sub
push
lds
add
mov
mov
mov
movsl
xor
movsl
add
jo
cmp
xor
jp
lea
xchg
xor
loopne
aad
add
movsl
add
cmpsb
mov
add
and
sarl
addl
adc
fidivl
pusha
push
and
cli
add
js
pop
mov
pop
inc
roll
insb
sbb
fs
mov
sti
movsb
jae
and
cmp
mov
rolb
and
mov
dec
mov
add
and
push
add
loope
cwtl
outsl
js
pop
repz
or
jl
add
cmpsl
cmpsl
fsub
xchg
pop
xor
push
imul
push
xor
sub
push
push
mov
xchg
add
mov
cmp
jo
cmp
add
iret
idiv
sub
sub
mov
or
fisttpl
mov
cmp
mov
out
mov
mov
mov
ljmp
add
dec
cmp
mov
ds
pop
lret
xchg
fcomp
nop
out
dec
inc
add
push
nop
mov
fldl
ficoms
sub
ljmp
insb
mov
cmp
rcll
roll
imul
ss
xchg
out
add
mov
dec
sahf
inc
add
fadds
jmp
add
mov
mov
add
and
addb
fisubrs
or
cld
or
sbb
push
roll
mov
aam
adc
cmpsl
xor
pop
popa
inc
mov
imul
and
cmpb
jg
push
mull
add
add
fisttps
push
cwtl
mov
mov
mov
cmp
add
add
mov
aad
jp
roll
cmp
xor
gs
mov
test
add
movsl
daa
shrl
popa
xchg
rolb
inc
cmc
add
sub
ljmp
adc
pop
sub
in
and
add
cmp
int3
push
jo
fimull
jg
mov
push
jge
imul
inc
pop
jp
mov
cmp
add
mov
add
sahf
fists
sub
jmp
call
les
scas
in
cmpsl
test
pop
add
mov
push
xchg
add
dec
inc
nop
in
add
jg
popf
mov
jl
mov
mov
xor
dec
jb
pop
repnz
xor
mov
call
sub
roll
xchg
mov
jl
inc
push
push
lcall
sub
mov
sub
in
aad
lods
dec
jnp
sbb
sahf
pop
add
inc
repnz
add
cltd
std
mov
pop
xor
cmp
adc
add
jge
cmp
dec
mov
sbbl
es
fldl
fsqrt
repz
out
daa
cmpsb
sbb
push
test
pop
stc
mov
jp
cmp
sahf
add
imul
mov
mov
pop
scas
xchg
push
dec
xchg
sarl
add
lret
dec
insl
testb
adcl
js
into
dec
bound
ja
imul
dec
add
cmp
movsb
shll
or
add
aaa
add
mov
sub
sbb
xor
mov
add
xchg
repz
add
mov
adc
xchg
xor
loopne
or
jbe
roll
arpl
adc
pop
mov
and
pop
sbb
add
sti
mov
nop
dec
cwtl
stos
les
xchg
xchg
sub
add
sbb
xchg
mov
add
and
in
cmp
inc
stos
add
cmp
es
mov
push
jg
mov
inc
jae
js
xchg
add
out
mov
repnz
push
scas
or
dec
enter
les
js
stos
jg
pop
mov
and
int
into
es
jne
aas
into
addr16
mov
imul
inc
shrl
jns
pop
data16
push
mov
xchg
mov
cmc
scas
sub
push
push
ljmp
lea
jno
adc
pop
rolb
xchg
cmp
aas
mov
dec
jo
push
sbb
push
add
lock
enter
xchg
or
pop
sahf
bound
push
notb
aam
lods
xchg
cmp
enter
std
mov
test
fmull
mov
movsb
orb
sbb
ret
jmp
clc
add
ud1
cmc
jb
add
leave
add
pop
imul
mov
add
imul
test
mov
add
push
fists
mov
add
adc
hlt
js
add
xor
in
push
adc
adcl
mov
fstpt
in
inc
push
add
push
add
imul
hlt
enter
add
mov
nop
push
jnp
add
pop
pop
adc
into
testl
stos
int3
ret
add
push
clc
xor
push
cmp
cmpsb
shl
jnp
mov
dec
mov
mov
popa
xchg
imul
aaa
movsb
cld
loopne
adc
sti
mov
xchg
push
push
pushf
leave
sbbb
je
mov
add
imul
rolb
adc
pop
add
add
lock
pop
add
xor
jb
cmp
add
adc
adc
fsubrl
movsl
mov
sub
mov
movsb
jnp
scas
jno
jno
es
cli
xchg
and
fstl
in
add
out
cmp
add
push
xorb
jo
add
jmp
add
mov
jb
nop
add
mov
lods
test
xor
push
xchg
add
pop
add
xor
lret
loop
fdivs
pop
hlt
call
in
mov
sbb
shlb
add
jne
out
mov
dec
and
cld
add
outsl
ret
mov
aad
cltd
cld
out
and
cmpsl
idivb
cmp
xchg
lret
push
mov
add
sarb
mov
std
or
xchg
test
mov
inc
sbb
jnp
lret
jae
sub
add
sbb
sti
add
jae
xchg
xor
push
repz
in
je
int
xor
test
jno
jne
xor
insb
cli
outsb
out
mov
add
scas
add
mov
dec
jecxz
fs
jg
rolb
vdivps
jmp
inc
add
add
dec
stos
lret
add
add
fldcw
sbb
inc
inc
sbb
orl
fiadds
add
loope
loopne
sub
mov
repnz
mull
cmpsl
inc
fwait
inc
add
in
clc
lret
arpl
mov
adc
mov
or
int3
scas
sbb
cmp
push
pop
xchg
leave
aaa
add
cmp
xchg
or
fs
adc
mov
cmp
fdivs
lea
enter
dec
in
shll
push
sbb
fiaddl
cwtl
loope
xor
jo
jp
add
adc
aaa
and
inc
dec
jl
imul
gs
ds
or
divl
add
push
add
fucomp
lcall
add
dec
xchg
insl
pop
aas
jecxz
mov
push
push
push
out
sti
out
scas
mov
lret
ror
xor
add
sub
ret
pop
jne
aad
lret
or
inc
mov
push
flds
cmpsl
sub
cmc
outsl
fsubs
in
loop
pop
lds
subl
je
dec
add
sbb
aas
xor
cltd
add
sub
xchg
sub
push
scas
incl
cmp
mov
cmpsl
daa
push
add
mov
loope
test
add
mov
fiaddl
xor
cwtl
repz
test
pop
pop
int3
pop
out
sbb
dec
cmp
neg
jg
inc
add
dec
fbld
or
call
lcall
add
stc
loop
sbb
add
aas
lcall
std
add
add
faddl
nop
loopne
add
mov
popf
dec
scas
mov
je
lcall
loop
push
lahf
and
js
mov
push
stos
add
flds
test
in
jae
pop
imul
mov
lret
loopne
adc
insb
loopne
ror
add
iret
add
dec
mov
jp
in
or
cwtl
scas
fwait
cmp
in
pop
sahf
or
arpl
icebp
cmp
fwait
es
jmp
add
cmp
push
js
push
add
jl
inc
pusha
add
mov
cmpsb
and
decl
push
mov
jnp
scas
add
inc
inc
mov
cs
or
fcompl
or
add
shll
test
pop
cmpsb
mov
push
xchg
movsl
jo
xor
adc
push
jp
and
add
stos
push
xchg
js
push
pop
fcmovbe
ret
in
xchg
pop
xchg
add
ficoml
lock
scas
je
movsl
jae
xchg
aaa
cmp
sbb
movsb
ja
push
jns
xor
pop
pop
loope
scas
lods
add
mov
pop
add
push
jns
out
cmpsb
jbe
mov
cmp
add
add
add
mov
or
je
add
and
add
repz
mov
and
in
cmpsl
loope
lods
add
ljmp
cld
add
jne
add
mov
pushf
or
fsubs
insl
lret
scas
jg
mov
add
jae
mov
iret
scas
jp
outsb
xor
addl
and
movsl
mov
push
lret
cmpb
aaa
mov
dec
pop
push
jecxz
adc
mov
add
sbb
push
fisubrl
mov
pop
jae
xor
and
and
add
mov
cs
lea
mov
les
aas
mov
cltd
incl
jmp
cmp
add
fcom
adc
ljmp
mov
add
clc
pop
push
add
clc
cli
add
jne
cmpsl
adc
cmp
pop
loopne
push
adc
ret
jb
aad
add
adc
sub
xchg
rolb
ret
and
jae
jae
jecxz
sbb
add
lds
clc
and
dec
jb
mov
jno
outsl
roll
dec
imul
enter
push
orl
and
imul
add
roll
adc
gs
jo
jg
inc
xchg
out
jno,pt
std
cmp
setae
fisubrl
cmp
pop
js
sbb
pop
push
shlb
pusha
in
push
sbb
in
clc
xor
rcrl
arpl
dec
jge
push
in
lahf
xlat
dec
popf
xor
aas
inc
push
lahf
pop
stos
inc
inc
xor
jno
add
dec
pop
aad
add
xchg
std
pop
sbb
add
adc
bound
or
insb
cmpsl
in
and
xor
dec
dec
mov
add
add
pop
je
bound
sub
ss
mov
jb
sbb
cmp
dec
xor
test
adc
ljmp
adc
sub
and
loop
add
xchg
jg
cwtl
pop
or
mov
add
leave
outsb
mov
add
mov
add
in
dec
add
cli
pop
mov
mov
lret
lret
imul
fcoml
adc
jnp
cmp
es
sub
mov
mov
subl
movsb
mov
jg
add
add
out
add
into
add
add
shll
adc
insl
mov
push
je
sub
mov
test
mov
mov
xor
addr16
loop
inc
add
sbb
adc
push
imul
pop
mov
push
lods
in
add
mov
push
xorl
fdivs
in
adc
sub
das
jge
ljmp
fs
sub
aam
shll
mov
adc
jecxz
pop
std
xchg
cmp
stos
sub
leave
int
mov
mov
jns
jbe
sub
or
pop
bound
sahf
out
xchg
add
push
jp
cmp
ret
add
adc
shlb
popf
sbb
push
leave
push
sarl
xchg
sub
test
push
movsl
add
add
lfs
addr16
sub
add
insl
mov
add
hlt
cmp
add
data16
sarl
stos
add
add
test
cltd
add
xchg
mov
fldcw
push
jl
sar
clc
fisttps
sbb
dec
imull
mov
jecxz
or
xlat
xchg
adc
hlt
fimuls
mov
shrl
scas
sbb
in
or
add
add
jb
in
jnp
inc
pop
mov
call
xchg
les
aad
add
mov
addr16
xor
nop
loope
cltd
loope
cwtl
jb
scas
add
lock
mov
sar
add
testl
sub
push
jns
inc
jbe
lock
mov
add
pop
int3
test
jo
add
push
or
shll
or
lcall
or
add
aam
push
jg
loope
and
jae
call
cld
andl
dec
pop
xchg
mov
add
subb
aas
pop
add
in
inc
out
cmp
shlb
adc
ret
and
xchg
sub
shlb
xchg
and
mov
icebp
fwait
stc
mov
jno
mov
dec
in
add
arpl
lds
xchg
sub
loopne
or
call
jb
pop
inc
pop
insl
push
push
sub
movsb
mov
gs
sbb
inc
jnp
movsb
pop
lea
sbb
jo
dec
fwait
xchg
jmp
add
mov
mov
test
pop
inc
arpl
adc
fistps
add
shl
clc
pop
xor
mov
cmpsl
daa
jecxz
add
add
sbb
and
sbb
scas
add
mov
add
adc
dec
push
and
and
out
sbb
lock
add
pop
arpl
add
outsl
add
sub
add
jl
adc
add
int3
cmp
gs
out
xor
mov
aas
lock
jbe
pusha
repnz
jp
xchg
cmc
push
inc
mov
cltd
ret
add
or
in
inc
mov
leave
ds
add
in
add
xlat
cmp
push
js
jns
cmp
adc
cmc
sub
add
pushf
mov
xchg
add
add
pop
adc
add
shlb
sbb
es
fsubl
mov
fmull
inc
pop
mov
or
and
loopne
in
pop
out
mov
lods
in
add
sbb
int
fldl
loopne
adc
add
sbbb
mov
ljmp
add
add
cltd
mov
jp
dec
ljmp
mov
pop
pop
mov
jno
add
add
mov
ret
xchg
stc
pop
mov
rolb
xor
loope
bound
mov
hlt
push
xor
pusha
dec
and
scas
lret
ret
cld
add
in
jno
jae,pt
movsb
mov
adc
test
add
leave
or
mov
pop
test
inc
add
add
xchg
or
int3
add
cld
jns
add
insl
jle
add
add
mov
adc
push
xchg
sbb
or
add
or
das
add
and
test
insb
aas
dec
cmpsb
fimull
in
add
sbb
pop
loope
test
push
or
scas
cmpsl
mov
rclb
or
sbb
shlb
inc
cmp
pop
out
int3
mov
pop
dec
push
add
out
add
inc
shrl
insb
or
jno
jnp
fcomps
mov
int
je
and
mov
add
repz
int
movsl
dec
aam
add
je
xlat
loope
testb
test
negl
test
mov
push
ret
xorb
pop
js
pop
cmp
adc
icebp
pop
add
and
sub
jmp
data16
loop
ficompl
mov
sub
popf
mov
pop
test
popf
push
push
movsl
push
add
xchg
aam
add
mov
aad
pusha
sbb
adc
inc
negb
push
adc
sbb
xor
ret
mov
test
inc
dec
add
addb
sahf
jbe
fnsave
xor
dec
add
sub
pop
or
mov
inc
lret
xlat
repz
nop
nop
xor
or
stc
mov
mov
out
inc
jnp
add
sbb
add
cmp
dec
dec
rol
cwtl
sub
sub
cltd
sbb
add
push
lods
add
add
in
insb
add
rolb
stos
repz
mov
pop
add
jmp
sbb
xchg
ds
pop
repz
push
dec
cmpsl
or
call
movsl
push
pop
sub
ja
fidivrs
sbb
inc
and
sbb
pop
mov
pop
and
add
ret
add
adc
push
add
fnstsw
mov
sbb
add
loopne
outsb
pop
adc
adc
insl
int3
sub
xchg
mov
add
add
arpl
es
popf
cwtl
mov
add
adc
insb
add
out
ljmp
jne
adc
sub
sbbb
mov
insb
mov
jnp
jnp
out
push
sbb
cmp
inc
out
in
lret
and
add
add
add
icebp
xchg
out
and
outsl
add
daa
sti
add
cltd
sbb
add
add
add
xchg
flds
pushf
fisttpl
pop
cmp
add
js
outsb
lret
add
inc
and
mov
jbe
sub
inc
mov
add
xchg
hlt
adc
daa
dec
add
push
jo
inc
xor
nop
add
adc
bound
push
push
jo
cltd
das
adc
pop
add
inc
cli
add
or
inc
lods
xor
mov
add
mov
push
lcall
push
adc
js
sub
jnp
and
push
add
mov
xor
add
xchg
and
call
mov
into
sti
sahf
and
adcb
imul
push
out
xchg
stc
fsts
aam
mov
popf
add
imul
iret
movsl
enter
imul
jns
les
outsl
or
dec
add
add
jns
bound
adc
lock
out
cmpsl
adcl
mov
xchg
sbb
in
jge
jo
cs
mov
push
inc
mov
add
incl
imul
incb
xchg
sub
pushf
add
mov
adc
push
jg
add
in
add
push
xor
scas
out
repz
aaa
mov
pop
add
mull
push
add
incl
in
mov
addb
pop
and
mov
lods
xchg
je
push
scas
inc
mov
add
sub
add
add
mov
jle
add
add
inc
into
nop
sbb
dec
sub
bound
fadds
add
jge
dec
add
sahf
add
insl
jns
sub
ret
and
popl
repnz
jp
cmp
subl
aad
and
aas
and
cmp
mov
imul
add
cmpsb
xchg
ret
js
clc
rorl
dec
push
sbb
mov
push
cld
iret
add
push
add
rolb
sub
add
pop
jmp
cli
mov
pop
jmp
aaa
dec
add
mull
add
add
cmp
sub
add
xchg
pop
lods
std
outsb
add
mov
cwtl
ret
jg
jl
inc
adc
imul
pop
add
shrl
and
push
push
test
enter
sbb
add
call
testl
add
dec
jnp
in
lahf
dec
and
in
pusha
mov
xor
ffreep
push
fnstenv
in
mov
mov
jae
sti
xchg
repz
ljmp
lcall
jle
pop
dec
ret
aam
add
push
sub
inc
jno
fiadds
adc
into
lods
xor
adc
mov
out
test
aas
add
push
pop
lea
add
into
int3
adcl
adc
scas
clc
jo
push
test
inc
std
jmp
jno
cs
daa
jecxz
mov
lcall
add
icebp
xor
sti
fisubs
lret
inc
imul
fadds
iretw
aad
ja
push
mov
sbb
sbb
xchg
sbb
mov
in
repz
or
add
mov
inc
cltd
aad
les
push
or
das
mov
jne
call
cmpsl
and
add
aam
loop
add
dec
test
sub
and
imul
bound
out
cmovnp
or
mov
stc
add
sti
and
add
add
sub
push
fmuls
pop
sbb
lret
stos
pop
insb
lods
jno
fsubrs
addr16
sub
mov
int3
cmp
add
mov
jge
stos
add
out
jecxz
push
loopne
test
stc
je
add
add
lods
adc
popa
mov
in
push
lods
xchg
add
sarl
xor
add
xor
mov
lret
fs
mov
sub
sbb
push
hlt
add
fists
testb
mov
cli
fs
add
loopne
imul
in
fisttps
adc
mov
jg
int3
gs
out
sub
mov
inc
add
adc
mov
ror
add
or
aaa
mov
aas
fiaddl
stos
loop
mov
outsb
in
movsl
jle
icebp
in
push
cld
add
jp
add
mov
add
adc
jb
mov
sub
adc
cltd
add
lahf
xor
shl
hlt
roll
add
outsb
iret
mov
pushf
push
sbbl
fists
xchg
imul
or
push
popa
pop
push
jmp
das
xchg
test
mov
mov
mov
les
jne
into
xor
insb
dec
adc
pop
add
nop
cwtl
mov
mov
pop
lock
lea
pusha
and
sbb
sbb
jecxz
out
popw
jno
mov
mov
insb
ret
ds
dec
fwait
pop
int
or
stos
lock
adc
sbb
mov
mov
add
bound
push
hlt
push
add
mov
jge
lea
insb
inc
out
mov
jb
jp
add
je
les
inc
ss
add
loopne
loopne
add
es
add
push
mov
pushf
inc
adc
mov
dec
add
aam
sub
pop
xchg
hlt
add
jo
mov
and
loop
ljmp
iret
mov
add
std
int
iret
mov
push
xchg
jnp
jae
loop
aas
add
jb
and
xchg
nop
fadds
sbb
ret
fs
out
insl
fstps
sbb
sub
roll
or
divb
cmpsb
lcall
adc
cwtl
sub
push
out
iret
mul
imul
xor
out
ds
adc
stos
jl
ficompl
or
out
outsb
push
insb
sub
inc
movsl
push
dec
incl
add
add
lret
jmp
jo
or
js
lods
aaa
jb
sbb
add
add
or
int3
or
xchg
sub
cltd
jle
pop
test
add
mov
jle
mov
loop
add
add
mov
sbb
aad
cwtl
call
int3
jecxz
or
xor
movsl
movsb
add
inc
xchg
insb
adc
imul
jo
jae
movsb
outsl
add
lods
jno
ret
add
add
add
stos
push
xchg
add
xchg
cmpsl
add
jg
lret
dec
data16
mov
adc
loop
mov
mov
in
out
test
std
pop
inc
je
cmp
xchg
sub
jb
adc
in
xchg
das
cmp
jb
mov
loope
pop
sbb
fldl
scas
aam
dec
add
sub
jb
sahf
push
std
xchg
add
inc
add
aad
es
es
mov
sub
push
pop
fisttpll
sahf
add
or
shll
mov
cmp
loopne,pn
aas
insb
arpl
pop
xor
mov
add
dec
and
leave
dec
rolb
mov
iret
xor
inc
sarl
and
mov
mov
sbb
mov
push
dec
add
in
ret
les
sub
pop
jle
insl
imul
jmp
push
nop
xor
jne
cmp
add
loop
jns
movl
jns
mov
lock
add
out
add
xchg
fsts
sbb
add
adc
add
mov
inc
mov
push
mov
cmp
dec
cmp
std
into
add
rcll
dec
or
mov
imul
jge
js
mov
test
mov
jb
jnp
ds
sbb
aas
add
lock
xchg
add
dec
cltd
sub
xor
inc
add
inc
negl
push
xchg
adc
sub
pop
outsb
outsb
jmp
incl
into
add
push
adc
pop
cmpsb
call
leave
push
xchg
adc
sbb
xchg
jne
and
pop
sbb
and
stos
push
mov
sub
pop
mov
cmp
scas
add
fsubrl
pop
jb
enter
std
cmp
divl
gs
les
or
movsl
mov
dec
add
dec
cmp
cmp
push
mov
ds
addb
cmp
lds
or
sub
aad
xchg
rol
in
mov
jl
mov
mov
test
cmc
ljmp
rolb
lcall
add
mov
lret
test
add
cltd
ljmp
add
xchg
lret
insb
aad
js
mov
add
cmc
dec
cs
icebp
cli
xlat
push
mov
xor
nop
jne
or
add
xchg
lret
mov
add
add
nop
repz
add
jge
lea
jno
and
push
js
enter
testb
mov
or
mov
add
add
scas
mov
fwait
out
repz
into
cwtl
popa
lret
add
mov
xlat
pop
add
add
xchg
mov
inc
adc
add
add
fstpl
sbb
ret
xchg
in
es
and
mov
clc
shrb
sub
sarb
sub
leave
mov
in
repz
fs
adc
sub
insl
jp
outsb
in
or
adc
in
xor
call
push
add
shll
and
sahf
xchg
mov
push
jbe
add
sahf
dec
add
gs
in
xchg
xlat
add
imul
mov
xor
xchg
pushf
xor
mov
test
adc
push
jmp
loope
pushf
scas
aaa
and
push
daa
add
ds
dec
pop
adc
outsl
andb
mov
pop
push
add
or
push
jge
and
jbe
js
add
sub
inc
add
shl
or
andb
pop
add
sub
xchg
pop
popa
ret
jl
flds
out
lods
mov
push
push
popf
mov
add
fdiv
add
and
add
jmp
jl
in
in
inc
add
mov
mov
outsb
pop
pop
fidivrs
outsb
into
xor
aam
lret
cld
movsb
scas
sti
fmul
dec
push
test
mov
inc
pop
add
push
lods
push
mov
incb
adc
cmp
repz
aas
push
ja
sub
push
cmp
mov
xchg
add
jbe
or
push
out
xchg
pop
inc
aad
lock
xchg
inc
mov
inc
stos
sub
xorb
pusha
jne
mov
mov
push
add
dec
xchg
xor
jne
jmp
popa
or
add
mov
add
add
sbb
mov
cs
enter
jnp
add
stos
jecxz
faddp
adc
lahf
pop
add
sub
xor
add
andb
icebp
bound
xchg
lret
and
stos
inc
push
push
and
iret
pushf
cltd
aas
sub
jns
add
fldt
mov
inc
ficomps
mov
xor
adc
fs
fsubl
fxch
cwtl
xchg
cmp
add
out
sub
iret
mov
add
sbb
int
mov
mov
les
sub
add
xchg
push
jg
stos
sbb
rolb
push
or
or
loope
mov
add
xchg
add
mov
push
mov
data16
jmp
cmpsb
cmp
lahf
icebp
dec
xlat
dec
add
add
cld
imul
cli
pop
inc
push
add
add
add
jmp
add
or
les
or
add
jl
sub
add
xor
cmpsb
add
ljmp
cmpsl
sbb
aam
icebp
add
mov
add
into
push
push
sbb
test
rcl
sbb
in
and
add
or
mov
push
mov
scas
jge
push
pop
in
ljmp
lock
mov
scas
cs
dec
pop
ljmp
xchg
ret
mov
add
or
mov
gs
ret
outsl
cli
movsb
rorl
movsb
inc
cmpl
pop
adc
xchg
es
testl
inc
or
mov
xor
ds
mov
lahf
inc
insl
iret
jp
ja
mov
rcrl
scas
adc
lods
pop
loopne
popa
or
iret
push
cmp
addr16
stos
cmp
out
jge
jnp
inc
repnz
jb
data16
repz
mov
addr16
add
inc
add
cltd
push
fs
inc
jmp
dec
jnp
or
push
add
push
dec
js
jg
push
and
clc
lods
mov
push
push
pop
mov
cs
xor
pop
mov
xchg
mov
sti
shlb
stos
test
lret
push
in
mov
add
ss
outsb
adc
xchg
lds
aas
push
daa
arpl
test
lret
or
add
push
pop
shrl
loop
add
dec
push
cmpsb
jle
add
mov
and
jb
xor
and
xorb
je
aaa
pusha
mov
add
enter
add
jno
add
insl
rorb
push
in
cmp
mov
adc
push
out
add
movsb
add
sbb
test
fmull
call
add
shr
dec
fistl
jp
lods
mov
mov
mov
ja
add
xchg
dec
add
cmp
stc
inc
add
push
and
push
jge
lret
repnz
mov
sub
sub
add
outsb
add
add
add
xchg
imul
stos
dec
xor
cmpsb
add
push
add
xchg
in
mov
popa
adc
cmp
xchg
xchg
into
lcall
cwtl
add
pop
in
je
stc
dec
cs
add
mov
and
in
int
leave
add
movsb
add
mov
cld
push
jnp
addl
aaa
add
add
cmp
sbb
xchg
add
lods
cmpsb
data16
decb
xchg
jne
repnz
in
cltd
mov
push
mov
mov
mov
lea
sub
add
gs
inc
gs
mov
add
add
add
out
xor
xlat
mov
dec
jp
inc
test
add
adc
cmp
dec
add
mov
cmp
xchg
in
add
inc
or
andl
jmp
add
fists
addr16
adc
scas
ljmp
sbb
loopne
add
movsl
das
xor
add
xor
mov
add
jbe
inc
jne
scas
xchg
mov
outsb
xchg
mov
push
mov
dec
or
outsb
sti
mov
cli
sbb
sbb
mov
dec
add
decb
and
test
add
fcompl
cmp
xchg
jbe
lret
xchg
add
xchg
add
jns
add
add
jnp
xor
dec
or
dec
or
sub
into
mov
stc
push
add
and
jns
add
add
mov
xor
sbb
dec
addl
fldenv
es
add
icebp
add
lret
adc
pusha
lahf
outsl
dec
lock
add
mov
ljmp
sti
dec
pop
sub
add
cli
cmc
xchg
testb
dec
roll
int
dec
cmp
add
mov
xchg
lahf
add
mov
lds
clc
or
movsl
aad
rcll
jg
sbb
cmpsl
mov
sub
jno
ficomps
cmpsb
and
push
pusha
sbb
jbe
push
add
cltd
pop
cmp
inc
fnstcw
cs
and
mov
dec
popa
mov
cmp
sub
sbb
rorl
in
divb
jmp
cmp
jo
dec
mov
std
cmp
aaa
shll
cmp
outsb
sbb
mov
popf
cmp
lcall
lea
fwait
add
adc
into
xchg
xchg
mov
push
mov
and
push
pop
lret
les
add
xchg
mov
xor
scas
sub
cmpsb
mov
inc
sbb
incl
or
ss
xchg
adc
jl
jne
push
sub
pop
add
push
mov
add
pop
int3
je
mov
jecxz
add
xor
push
out
xchg
data16
fsubr
push
adc
fiaddl
push
mov
add
mov
or
cmpsl
xchg
jmp
outsl
and
lcall
fdivs
pop
add
movsb
fs
mov
hlt
enter
lods
xor
mov
ljmp
inc
sub
scas
into
loope
add
inc
or
sarb
fbld
add
ja
ss
lcall
inc
jp
mov
inc
fidivrs
xchg
movb
add
cmp
stos
imul
push
sbb
filds
push
addr16
dec
sbb
dec
cmpsb
push
add
addr16
cmp
insb
push
cmp
push
xor
inc
add
add
adc
sub
aas
repnz
into
xor
scas
and
inc
jge
mov
in
push
dec
ds
mov
out
mov
add
xor
movsb
fiadds
sbb
inc
cmpsb
lock
push
iret
dec
add
aaa
addb
mov
jns
imul
daa
lcallw
add
inc
cld
or
stc
mov
outsl
in
jnp
rcrl
pop
xor
fs
nop
cmpsl
sbb
imul
insb
into
add
xchg
orb
cmp
or
rorl
movsl
lea
aam
mov
test
add
pop
push
and
dec
shlb
imul
mov
push
test
stos
push
js
inc
inc
jo
and
cltd
mov
pop
add
das
cld
fimuls
mov
add
iret
lret
int3
sbb
fwait
add
and
mulb
jbe
outsl
les
rorb
adcl
orb
and
xchg
xchg
test
xor
aas
movsb
fadds
pop
mov
mov
fwait
add
es
mov
into
add
les
cli
jae
push
push
sub
ret
add
sub
int
into
into
cmp
sub
mov
or
add
mov
xchg
stos
packsswb
add
add
in
es
mov
icebp
add
ret
int3
xor
sbbb
incb
push
pop
xchg
fldenv
add
outsb
nop
cmp
adc
xchg
pop
sub
add
mov
xchg
add
fistpll
test
shll
inc
sarb
movsl
cmp
movsl
xchg
add
imul
or
mov
fmull
and
add
ret
jl
inc
arpl
or
dec
fildll
lret
js
push
add
sub
xchg
sar
pop
iret
stos
push
add
or
pop
sahf
cmp
iret
cmp
xor
add
or
add
adc
mov
in
imul
stos
pop
testl
out
out
movsl
fistpl
scas
mov
xor
add
xchg
orb
andl
push
stos
mov
dec
xor
mov
add
xchg
or
jmp
push
add
inc
rcrb
and
or
ljmp
lcall
sub
and
test
subb
xchg
xor
add
adc
cmpsl
out
xchg
mov
sahf
mov
mov
xor
mov
sub
ret
orl
aad
lret
stos
cltd
cmpsb
pop
xchg
es
mov
mov
and
push
xchg
insb
jecxz
sahf
xor
leave
mov
imul
cs
xchg
daa
mov
sub
testl
xchg
xchg
ret
or
add
movl
add
add
xor
mov
outsb
inc
stc
pop
push
shrl
mov
repnz
lahf
das
dec
lret
bound
aaa
mov
push
mov
or
data16
les
xor
sbb
and
aas
bound
nop
jns
dec
nop
int
mov
stos
pop
or
push
xor
dec
jo
push
fisubl
or
pop
das
jle
lds
add
dec
push
add
jl
inc
aaa
sbb
jne
bound
aam
pop
push
cmpsb
mov
outsl
inc
pop
nop
mov
xor
xchg
or
pop
and
push
mov
outsl
ds
mov
loopne
and
push
sbb
fsubr
pop
fstpt
popa
adc
lock
mov
jge
dec
or
mov
nop
cli
lea
sub
cmpsl
jbe
jge
add
clc
add
cmp
push
xchg
cmp
inc
push
jl
inc
xchg
jno
or
cwtl
out
add
jb
dec
sbb
mov
mov
add
pop
add
daa
mov
cmc
add
add
jg
cmp
adc
rcl
insl
addl
add
jge
fldl
in
or
xor
in
lret
jb
lcall
fcomip
or
add
ja
mov
loop
add
mov
add
pushf
stc
xchg
movsl
push
or
outsl
cmp
cmpsl
inc
or
pop
incb
xor
sbb
add
xchg
js
dec
rcrl
add
mov
arpl
loop
fwait
enter
add
leave
add
repnz
add
add
mov
popa
xlat
cmp
add
pop
pop
fisttps
adc
in
pusha
push
and
lds
dec
cmpsb
sub
add
add
in
pop
add
jle
mov
aas
test
mov
scas
jno
sar
fsub
adc
or
test
pop
ret
ja
add
add
fisubrl
lahf
das
lds
sbb
js
data16
mov
sti
cmpsl
daa
sub
ret
shr
repz
cmpsb
xor
cmp
out
int3
int3
push
add
sbb
cmp
push
data16
and
outsl
movsl
pusha
or
test
lock
add
fnstsw
xor
add
dec
lcall
in
jle
sub
add
ljmp
add
pushl
sub
pop
xchg
pop
xor
icebp
add
adc
jne
cld
aad
xor
add
out
lods
push
imul
outsb
push
mov
xabort
daa
lcall
add
add
mov
add
add
pushf
sti
cmp
add
cli
packsswb
mov
outsb
dec
jecxz
push
lret
sub
pushf
jbe
js
cmp
jbe
sub
icebp
mov
rcr
xor
add
and
add
add
cmp
popa
add
mov
inc
add
ret
scas
sti
push
xchg
mov
mov
sbbl
jb
push
sub
add
push
pop
add
add
dec
xchg
test
add
add
cli
les
inc
inc
stc
sub
lods
roll
inc
mov
loopne
mov
lahf
or
inc
out
add
push
fbld
sub
add
xchg
into
xor
mov
push
mov
inc
add
or
loop
add
pop
mov
jmp
mov
pop
push
sub
pop
loop
int3
xlat
repnz
fdivs
mov
fsubs
pop
xchg
xchg
movsb
adc
aad
pop
pop
mov
loopne
pop
or
outsb
rcrl
pop
push
stc
add
fisttps
ljmp
mov
and
pop
xchg
cwtl
xchg
add
adc
add
cmpsb
mov
or
mov
add
mov
push
popf
mov
add
xchg
cli
sub
xor
add
add
xchg
jg
pop
and
aaa
sarb
addr16
movsb
sub
cltd
out
push
ret
clc
je
mov
test
xor
fisubl
add
ja
jae
add
out
enter
add
adc
push
add
add
push
outsl
xchg
stc
mov
in
jae
call
ljmp
test
adc
orl
xchg
sub
les
inc
and
fwait
mov
insl
mov
add
lcall
xchg
jae
mov
xchg
push
in
aas
into
mov
add
and
adc
sub
xchg
add
ret
cmpsb
sahf
aad
inc
pop
jnp
ret
sbb
or
pop
add
push
mov
xchg
add
add
stc
and
push
add
mov
jbe
cli
add
shll
jge
push
add
stc
mov
iret
cwtl
sbb
mov
out
push
lahf
sbb
add
popf
dec
js
sbb
lret
adc
aas
imul
fs
and
add
add
push
add
arpl
mov
add
loope
popf
pop
pop
mov
add
rolb
cli
int
into
push
cmp
push
cmp
and
int3
cmpb
add
in
movsl
aad
mov
jnp
rcl
add
lds
int3
jge
or
add
xor
aas
add
negl
add
push
aad
add
sbb
mov
clc
in
jns
shl
mov
add
call
outsb
aad
xor
cmc
add
scas
xor
add
aaa
add
add
ja
add
add
push
dec
dec
sub
arpl
inc
lret
out
roll
lcall
add
cmp
dec
add
lret
int3
xchg
addl
push
mov
clc
xchg
add
int
mov
jmp
add
mov
jo,pn
sbb
push
test
sbb
int
ds
int
add
sbb
jnp
cltd
fdiv
incb
loop
scas
mov
push
jge
add
mov
loop
dec
mov
add
add
add
push
cmpsb
add
cmpsb
cmp
push
dec
add
rcrl
out
pop
aaa
inc
mov
lea
mov
fstpl
pop
loopne
add
xchg
pop
popa
dec
arpl
jle
icebp
jg
push
mov
add
lods
enter
xchg
sbb
rcrl
add
push
pop
push
jle
xchg
dec
outsl
js
fwait
sbb
popf
aas
mov
xor
adc
xchg
lods
jo
ljmp
jno
inc
cwtl
inc
add
add
jne
fdivrs
or
fbstp
cmpsl
cmpb
pop
add
add
fldcw
daa
adc
dec
sub
jne
js
movsb
push
mov
call
jno
or
data16
jg
popa
xchg
mov
sbb
ret
addr16
sbb
jmp
push
enter
shr
inc
mov
cmpsl
shrb
xor
cli
lods
pop
jno
es
xlat
add
inc
push
mov
inc
shl
cwtl
pop
xor
xchg
lock
ja
jo
add
sbb
xchg
xchg
add
sbb
cmp
imul
pop
data16
lret
mov
mov
divl
xor
or
daa
add
insl
nop
add
push
out
sub
jb
xor
movsl
mov
and
mov
sti
dec
test
cwtl
add
fiaddl
push
hlt
add
adc
jno
adc
addl
ret
loope
add
or
negb
movsl
xor
pop
lret
and
idivl
push
sti
mov
je
arpl
mov
aas
js
outsb
or
sub
add
repnz
jne
mov
dec
xchg
sahf
dec
add
cmp
and
jbe
jne
loop
cwtl
and
mov
add
mov
mov
and
add
mov
dec
add
mov
xor
or
add
xchg
mov
ret
andl
push
add
test
pop
pop
jmp
add
sti
add
jnp
add
sar
out
xchg
cmp
insb
push
xor
cltd
push
xor
cmp
rorb
movsb
into
nop
inc
dec
mov
fcmovnbe
aad
mov
sbbb
mov
in
adc
cmp
outsl
push
repz
dec
mov
xor
clc
rorl
es
pusha
jle
add
add
add
cltd
or
ret
sbb
cmpsb
outsl
mov
outsl
mov
push
add
add
inc
mov
xchg
jbe
inc
add
in
imul
sub
loop
popf
outsl
adcl
add
inc
in
push
lods
add
adc
pop
jo
or
hlt
add
pushf
add
adc
rcll
adc
fdivr
pop
xor
ds
push
pop
jnp
add
movb
add
addr16
add
enter
pop
push
and
sahf
add
dec
cltd
add
ret
repnz
sub
add
adc
pop
adc
push
insl
ss
jle
out
mov
sub
adc
sbb
add
add
cmpsl
es
xchg
cld
int3
xchg
loop
adc
add
inc
loope
pop
add
add
and
das
hlt
and
rorb
mov
fstp
xor
sub
test
adc
mov
lods
add
sbb
sbb
stc
fs
mov
cltd
xchg
push
mov
push
and
xchg
inc
scas
cld
movsl
jp
lea
inc
ret
cli
pop
test
scas
nop
mov
push
cmp
xor
pushl
call
push
jl
and
mov
add
mov
jmp
xchg
test
scas
adc
jp
add
lods
sbb
das
add
add
dec
adc
and
mov
ljmp
andb
jecxz
jo
push
mov
mov
jb
add
add
xchg
add
mov
jno,pn
jp
mov
adc
js
les
add
jno
jmp
cmpsb
add
gs
aaa
fs
movsl
push
leave
lret
insb
das
add
arpl
inc
cld
push
add
out
pop
jp
in
nop
push
das
add
push
fs
in
pop
and
nop
out
ffree
pop
push
or
mov
xor
ja
test
pop
stc
add
repnz
dec
rolb
add
fs
add
lret
or
loop
push
add
add
add
jno
jne
cwtl
insb
test
adc
add
ljmp
rolb
iret
inc
add
sahf
adc
outsl
je
jmp
cmp
and
fadds
jecxz
add
xchg
cmp
inc
pop
mov
dec
mov
add
test
inc
or
lds
push
movsl
test
mov
cli
add
popf
xor
int3
fdivr
repz
dec
add
mov
out
arpl
or
pop
inc
aad
xchg
xchg
sub
jno
push
dec
in
adc
stos
dec
icebp
call
and
les
sbb
push
out
ljmp
add
xlat
add
dec
daa
adc
iret
dec
inc
loop
inc
and
push
add
jb
mov
stos
pusha
lock
int3
rorl
roll
or
or
popf
pop
iret
dec
xchg
add
js
out
mov
hlt
aaa
cld
mov
fiadds
xor
add
add
addr16
fldl
jle
push
imul
jmp
loopne
mov
jp
scas
jo
mov
mov
and
iret
movl
lea
cmpsl
out
jae
pop
jno
testb
sub
or
or
shlb
sar
xchg
xchg
dec
adc
stos
mov
cmpsb
lahf
idivb
stc
test
cltd
orl
push
ret
int3
test
pushf
mov
add
adc
cmc
cmp
cmp
in
push
fsubrl
outsb
xor
adc
lock
frstor
mov
or
rcrl
lahf
add
xchg
xor
andl
pop
adc
xor
pop
mov
adc
jne
add
mov
mov
addr16
stos
adc
cld
jb
ret
jae
push
xor
mov
sahf
xchg
mov
out
mov
mov
mov
sbb
cmpb
add
add
mov
lods
pop
jmp
add
or
rcrl
mov
mov
push
outsb
fldenv
enter
movsl
mov
sub
add
adc
add
jnp
out
or
cmpsb
sbb
jo
mov
push
dec
test
cli
adc
sub
add
sbb
cmp
mov
push
shrb
add
jbe
jae
mov
pop
shl
jbe
mov
ja
sub
sbb
sub
add
pop
mov
js
mov
jp
push
ret
push
inc
push
add
add
aam
in
dec
jae
or
mov
push
mov
lahf
add
pushf
aaa
sub
mov
mov
add
xor
mull
subb
popa
call
jne
pushf
sbb
ds
lods
bound
cmp
nopl
mov
cmpsb
push
add
in
xor
clc
xchg
add
and
rolb
rclb
nop
sub
nop
push
xchg
add
sbb
cmp
cmpsb
pop
push
pop
in
outsb
das
popa
add
xor
pop
push
push
push
aam
sub
mov
or
push
add
sbb
movsb
or
add
cwtl
mov
push
xchg
stos
je
adc
decl
pop
or
pop
scas
inc
jg
lea
sti
or
pushl
and
add
jno
repz
or
pop
movsl
fsts
jno
outsl
mov
mov
add
and
jp
push
pop
push
mov
mov
mov
stc
add
add
lret
dec
adc
add
sbb
add
fldt
push
and
clc
or
xchg
sti
push
mov
xchg
movb
in
fwait
rolb
in
sbb
dec
out
aas
mov
ljmp
sub
mov
dec
xor
add
test
arpl
lahf
movsb
jae
cmpsl
and
mov
jne
add
add
ljmp
addb
lods
sbbb
or
mov
add
jl
repz
jle
inc
sbb
in
sub
mov
es
movsl
mov
sub
push
aaa
int3
rorb
adc
push
popf
add
fldcw
mov
inc
inc
pop
adc
mov
mov
sbbb
pop
hlt
mov
inc
xor
pop
and
in
pop
add
daa
dec
movsb
loop
xor
lret
ret
mov
mov
jge
or
repnz
bound
add
jecxz
add
add
lret
mov
jp
inc
push
in
aam
fwait
add
dec
insl
hlt
adc
adc
lods
pop
or
push
add
lock
repnz
decl
aam
dec
add
sub
mov
mov
adc
or
ljmp
adc
mov
add
sbb
jle
cmpsl
push
push
xchg
data16
mov
xchg
xchg
inc
xchg
xchg
lcall
mov
lds
dec
add
pop
mov
add
add
ss
repnz
xchg
add
popa
lret
add
mov
or
add
fisubrs
push
xor
outsl
flds
rorb
clc
inc
add
jg
rorb
add
add
add
loope
dec
sub
or
adc
lea
in
mov
iret
ret
mov
inc
xchg
adc
insl
or
add
inc
add
dec
mov
ljmp
scas
cld
push
add
aad
add
addr16
in
add
add
lahf
push
data16
js
daa
add
aad
test
movsl
stc
add
sub
jecxz
test
iret
insb
test
outsb
mov
mov
pop
insl
cmpsb
mov
add
pop
icebp
add
lret
test
xor
cltd
add
orb
push
iret
jp
out
jle
push
add
inc
inc
add
inc
scas
clc
insb
data16
jmp
xchg
mov
sub
call
mov
mov
int3
jno
stos
filds
nop
dec
outsl
add
jo
cmp
bound
xchg
lahf
add
stos
mov
add
sbb
inc
add
lods
pop
ror
pop
jl
adc
das
pop
aas
mov
cmc
mov
adc
outsb
jge
adc
jecxz
xlat
into
mov
add
lahf
cmp
dec
shrl
sub
addb
shrb
stos
out
je
iret
push
add
int
inc
mov
pop
arpl
push
push
jbe
out
xor
xchg
outsl
rcrl
jge
mov
add
push
mov
add
add
fsts
xor
cmp
pushw
pop
jge
fmull
mov
pop
out
xchg
cmp
push
je
pop
sub
adc
mov
xor
dec
jl
dec
add
jbe
je
testb
add
add
or
rolb
movd
and
adc
add
add
mov
sub
mov
fldl
es
push
arpl
jmp
add
xchg
add
or
sub
mov
mov
sbb
mov
icebp
mov
xor
rorb
lock
outsl
add
cmp
cld
inc
add
jmp
mov
cmp
push
mov
xchg
negb
add
mov
stos
push
out
xlat
cmp
add
cltd
sahf
in
faddp
jae
lcall
add
inc
pusha
fistps
mov
test
loop
aas
sub
enter
ret
push
mov
or
adc
cltd
pop
xor
jg
add
jp
lcall
stos
loop
add
fucomp
adcl
mov
inc
add
rolb
adc
iret
or
scas
insl
or
dec
dec
pop
push
mov
hlt
xchg
cmp
mov
add
stos
ficomps
add
sbb
ret
mov
xor
int
push
or
cltd
mov
adc
adc
insl
add
xchg
pop
mov
ja
add
and
test
dec
int3
mov
divb
xchg
popa
cwtl
jg
sti
loop
ret
popl
push
xor
lret
add
stos
pop
fisttps
mov
add
sahf
mov
call
add
sbb
daa
cmpsb
in
std
mov
repnz
and
lds
xchg
pusha
cmp
ror
lock
outsl
sbb
movsl
js
lret
iret
mov
int3
push
xchg
sarl
dec
fiaddl
repnz
int3
adc
add
pop
jmp
loopne
mov
loopne
ret
add
mov
mov
cmp
cmp
or
push
add
gs
push
je
add
inc
orb
xchg
add
mov
cli
shll
mov
or
ja
pop
add
xor
xor
rcrl
push
cmp
lods
mov
mov
shll
xlat
inc
jg
daa
pop
inc
xchg
add
ret
add
loop
xchg
dec
mov
pop
int3
dec
mov
jb
xchg
xchg
cmp
icebp
push
stos
xchg
jo
scas
fiadds
int
xor
nop
add
add
push
or
mov
xchg
fists
and
sub
in
je
lods
mov
cmp
mov
aam
pop
xchg
add
add
outsb
push
xor
daa
call
xchg
lahf
push
pop
dec
dec
add
and
pop
add
iret
xor
add
jl
jbe
sti
mov
and
mov
inc
jns
adc
or
in
loopne
ret
or
xlat
push
push
xor
ret
ds
popf
mov
inc
stc
cwtl
shrb
pop
add
and
add
in
pop
ret
add
push
push
adc
cmp
lods
jns
dec
or
push
jbe
add
dec
push
movsb
push
cmp
lea
pop
insb
add
xor
add
pop
mov
pop
push
mul
add
outsl
adc
and
and
sahf
push
adc
xchg
jp
sbbb
mov
jle
add
cli
test
gs
scas
les
repz
mov
pop
je
in
fisttpll
pop
pop
push
xchg
jecxz
into
adc
mov
in
aas
add
sub
dec
pop
test
push
inc
jge
jge
stos
dec
add
add
pop
mov
addr16
mov
icebp
dec
incl
stos
aam
adc
sbb
sarb
add
ret
add
pop
mov
mov
mov
in
add
mov
rorl
adc
out
and
xchg
ljmp
fisttpl
ss
push
add
std
test
pop
jae
mov
int3
inc
add
cmpsb
idivb
mov
sbb
inc
clc
push
out
lds
dec
cld
add
xchg
adc
sub
add
loope
cli
add
mov
inc
aaa
in
cmc
ret
inc
pop
mov
sarb
mov
inc
fcoms
outsl
repnz
fisubrs
jl
sbb
pop
fists
xor
jmp
fidivrl
test
cmp
lods
jnp
ret
incl
cmpsb
pop
add
lds
aad
jmp
pop
sbb
and
and
mov
push
adc
scas
or
decb
adcl
dec
in
popa
into
fcomi
loope
les
shlb
push
add
add
dec
mov
push
inc
cltd
mov
xor
pop
adc
cltd
cmp
test
fiadds
pop
jl
fisubrl
and
pop
and
aaa
js
jno
ja
and
shrl
or
stos
add
add
add
add
push
add
mov
adc
add
mov
add
sbb
add
jg
sarl
sub
imul
shlb
jns
adc
inc
cmp
dec
push
xor
sbb
lret
enter
out
add
out
dec
aad
push
add
sbb
xor
push
sbbl
inc
roll
adc
iret
or
add
xor
sub
sbb
cwtl
xor
push
cmpsb
add
ljmp
add
jnp
dec
pop
push
sub
movb
cmpsl
push
test
push
insl
mull
add
lds
jl
jnp
rol
out
push
aam
sub
add
push
xchg
cmpsl
call
xchg
test
pop
dec
out
add
cmp
fstpt
loop
add
mov
popa
cmpl
add
push
xor
push
push
add
inc
std
xor
clc
inc
inc
jle
add
and
ds
ret
add
and
call
or
cld
dec
xlat
xlat
jle
add
xor
inc
adc
pop
jo
and
daa
scas
add
sub
pop
xchg
shrb
xor
outsl
pop
clc
mov
jp
add
add
add
add
fistps
add
adc
mov
roll
insb
mov
cmp
ljmp
push
ja
mov
testl
adc
dec
or
pop
mov
cmp
push
add
adc
jl
jle
into
add
add
pushf
pop
xor
cwtl
push
xchg
add
je
shll
push
testl
pop
mov
dec
xchg
add
pop
add
aam
xchg
sbb
xchg
mov
cwtl
sbb
out
xchg
dec
and
and
jnp
mov
push
clc
icebp
out
and
mov
or
bound
out
rcr
rcll
cwtl
push
out
add
sbb
add
hlt
stc
dec
call
rol
arpl
add
xchg
adc
stos
jo
jb
jmp
scas
sub
pop
xchg
test
mov
or
popl
shll
xor
sbb
pushfw
cmp
jo
ficomps
fisubl
popf
xchg
fs
mov
add
outsl
add
sub
ss
lds
push
xchg
outsb
mov
hlt
add
jae
leave
ja
sub
mov
ja
push
push
add
daa
push
js
dec
outsl
cmp
out
mov
and
vshufps
sbb
jbe
adc
or
add
dec
scas
sbb
xchg
add
icebp
xchg
xchg
data16
jo
das
add
push
ret
into
shlb
mov
in
mov
sti
cmp
sti
outsb
les
add
add
hlt
iret
outsb
cmpsl
sub
pop
jnp
jne
ds
imul
addr16
int
cmpsb
out
sbb
pushf
push
pop
decl
sbb
add
leave
roll
adc
add
and
dec
or
lahf
hlt
std
jmp
mov
pop
sbb
notl
lret
test
cmp
ret
cmp
loop
pop
push
xchg
or
arpl
add
add
ljmp
jg
fildl
bound
fucomi
mov
dec
rcrb
add
movsl
les
sub
xchg
fistpll
dec
repnz
pusha
cltd
sub
out
add
daa
cmpsl
int3
mov
scas
int3
lahf
mov
add
pop
in
test
sti
xchg
int3
adcb
mov
ud2
ljmp
mov
sahf
inc
and
int
dec
ficoml
fildl
lret
out
add
add
add
dec
sub
add
outsb
add
ret
mov
scas
pusha
addr16
mov
mov
clc
adc
fistpll
out
xchg
add
add
mov
andl
push
fnstcw
add
add
sbb
movsb
je
cmp
adc
imul
das
pop
loope
xchg
add
mov
fildll
xchg
pop
mov
push
add
add
jp
push
rcrl
pop
mov
adc
pop
dec
mov
or
cmp
adc
pusha
mov
fnstcw
cmc
push
ja
ljmp
add
or
pop
cli
sbb
dec
xlat
inc
fst
xor
test
out
repz
je
aam
js
add
add
adc
add
jp
add
mov
sub
rcr
fcoml
and
stos
in
adc
add
popf
push
js
sbb
inc
adc
data16
push
push
mov
mov
mov
add
iret
pushf
lret
push
dec
stos
add
xchg
sub
int
cmp
cmp
lods
fiaddl
sbb
jl
add
jl
outsl
ljmp
test
adc
push
stos
jae
mov
insl
int
fbld
sub
mov
ljmp
push
pushf
and
push
mov
lods
mov
push
add
add
rolb
mov
popa
fstl
int3
into
loop
sub
mov
stos
jae
add
push
bswap
sbb
fs
mov
out
sbb
mov
dec
add
sub
inc
imul
inc
xchg
or
inc
add
lds
push
daa
jle
rcr
das
xchg
push
add
scas
and
js
mov
inc
add
pushf
cwtl
add
sahf
add
add
inc
push
push
xchg
jle
dec
and
cltd
sti
mov
mov
xchg
xor
lods
xor
popf
jmp
add
push
data16
xor
xchg
das
notrack
dec
cwtl
add
test
fisubl
jl
inc
inc
dec
add
sub
push
add
pop
inc
mov
xlat
mov
add
add
add
add
mov
pop
out
cwtl
adc
push
sub
mov
add
jnp
cmp
cli
pop
sbb
push
test
jns
fcomps
add
cmpsb
ret
mov
fs
add
out
add
dec
add
filds
cmc
add
popa
xchg
ds
lret
pop
jne
pop
add
aam
xchg
add
cmc
add
mov
mov
jno
cmp
and
fimull
repnz
loopne
add
lret
dec
push
lds
out
add
out
pop
nop
test
lret
jmp
jb
dec
xchg
xchg
push
adc
xor
dec
nop
mov
popa
fwait
enter
add
imul
clc
mov
jg
out
mov
sahf
push
add
leave
jns
add
xor
testb
mov
lret
sbb
fldenv
outsb
lahf
jnp
testl
inc
cmp
imul
mov
popa
add
aad
daa
fwait
ret
push
testl
roll
jnp
jmp
shll
scas
insl
rcrl
cmp
cmpsb
arpl
add
test
or
ret
jecxz
lock
fwait
dec
mov
fs
loop
insb
add
add
cmp
cmc
imul
push
jp
add
push
insb
ret
movsb
xor
pop
add
sub
in
cmp
mov
and
add
gs
add
std
insl
js
andb
mov
xor
cli
mov
pop
add
mov
scas
iret
add
das
stos
ds
sbb
adc
xor
pop
cwtl
add
add
push
cmp
cmp
xchg
xlat
jnp
jb
hlt
xor
mov
in
push
push
mov
xchg
pop
sbb
add
jecxz
mov
lods
out
pop
mov
mov
decb
push
out
pop
jg
test
push
xchg
add
cmp
scas
push
add
pop
xchg
cmc
add
pop
add
add
clc
xor
hlt
sub
outsl
add
ret
rclb
mov
dec
dec
and
in
jo
fiadds
dec
testb
aam
or
add
cli
jne
sbb
int3
add
adc
or
cmp
add
xchg
cmp
jmp
add
mov
jbe
ret
ja
jns
and
mov
mov
adc
or
out
xchg
or
das
mov
mov
aas
scas
push
insb
cmp
ret
sub
cwtl
add
jae
je
repnz
or
add
std
adc
movsb
jp
fildl
stc
adc
sti
add
jo
aam
cmp
add
mov
packssdw
jmp
add
ffreep
mov
ds
test
and
popa
out
movsl
add
push
sub
sysret
testl
cmp
add
ret
pusha
sub
and
add
scas
push
cmp
cmpsl
cmp
in
add
das
add
xchg
inc
sarb
dec
sub
fsubrp
stos
add
push
mov
jb
or
inc
pop
push
sahf
pop
cmp
add
add
cmpb
mov
xchg
ljmp
add
add
xchg
aam
cmp
ja
push
bound
push
mov
icebp
xchg
mov
mov
xor
fiadds
dec
add
fdivs
xchg
add
add
roll
repz
pop
je
fisttpl
fsubrl
mov
cmp
or
sbb
lcall
int3
movsl
add
dec
outsb
iret
pop
push
aad
mov
ret
into
add
mov
add
dec
and
rcr
sub
add
mov
mov
popa
cmp
jbe
roll
jnp
sbbb
dec
add
shlb
lds
xchg
add
in
out
or
insb
add
movsl
or
sub
js
pop
and
add
mov
aas
and
or
xchg
faddl
shrl
adc
jae
xchg
arpl
mov
inc
jnp
push
pop
xchg
push
stc
push
orps
js
add
cmp
nop
add
hlt
roll
mov
xchg
add
insb
in
in
cmc
jns
jmp
pop
jo
insl
ljmp
es
scas
jmp
clc
jns
sub
int
add
cli
lret
je
cltd
add
mov
lret
ljmp
dec
add
fnstsw
inc
das
add
pop
js
cmp
push
jmp
add
jge
pop
inc
mov
inc
dec
mov
pop
cmp
and
lcall
scas
aas
mov
adc
xchg
add
jg
add
adc
in
mov
mov
shll
push
mov
add
ljmp
in
repz
decb
jmp
notb
xchg
jg
add
aam
stc
ret
mov
add
adc
lds
imul
add
and
push
movsl
movsl
out
je
gs
xchg
rolb
imul
sub
inc
dec
icebp
lahf
push
jl
sub
add
aas
add
in
rcrb
mov
sbb
xor
repz
and
add
mov
in
push
ljmp
enter
push
les
aad
lds
pop
and
dec
sbb
in
mov
outsb
add
xchg
jno
push
subl
imul
imul
sub
notl
cmp
push
lret
mov
mov
add
add
cltd
inc
pop
add
add
add
in
out
divl
cld
xorb
xor
pop
dec
cmc
pop
sub
loope
test
xchg
add
jb
aad
xchg
sbb
rorb
out
shll
out
fcomps
movsb
out
mov
add
roll
ret
mov
mov
aam
add
mov
pushf
cmpsl
pop
call
stc
xchg
cmp
roll
jbe
dec
test
pushf
addl
add
jp
add
add
lds
xor
add
push
data16
je
add
jne
xchg
add
movb
dec
push
or
and
jae
xor
imull
lret
cwtl
js
int3
xchg
add
or
in
add
js
int3
std
popf
clc
sahf
sub
lds
ret
arpl
sub
mov
jg
mov
call
faddl
shrl
adc
jne
mov
add
add
test
add
or
mov
scas
xchg
adc
hlt
inc
popa
ljmp
sbb
addl
inc
repnz
repnz
push
xor
jmp
cmp
mov
cs
ljmp
in
pop
pop
shrb
sub
setns
mov
lahf
call
sub
and
add
mov
pop
mov
subb
cltd
int
es
add
add
sub
add
mov
add
ret
arpl
stos
fs
xor
ja
mov
dec
loop
add
sbb
or
jmp
add
push
aaa
and
lcall
leave
ljmp
dec
add
mov
shl
pop
lret
insl
jns
add
rcr
pop
sahf
daa
out
aad
mov
sub
cmpl
mov
mov
cwtl
stos
mov
add
mov
outsl
leave
mov
pop
fiadds
cmc
mov
mov
push
mov
xorb
adc
dec
stos
roll
insb
mov
dec
pop
add
or
push
dec
into
aad
adc
pop
std
insb
sub
mov
jae
or
cmp
test
add
pop
mov
fdivrl
jecxz
cli
push
movl
mov
std
call
add
clc
dec
rolb
arpl
aad
outsl
xchg
pushf
icebp
cmp
cli
dec
lret
in
xor
fmuls
push
add
inc
jp
adc
push
stos
jle
test
test
out
xchg
frstor
ds
jo
jae
xchg
jle
add
sub
outsl
xor
xchg
sub
test
mov
pop
add
add
cmp
push
add
pop
dec
arpl
add
add
lahf
test
fists
movb
mov
lret
dec
adc
ret
adc
mov
je
mov
imul
subl
filds
roll
shl
add
adc
lret
xchg
push
leave
add
nop
pop
ss
or
pop
xchg
arpl
push
add
das
roll
pushf
add
andl
push
cmc
push
test
add
sub
movl
jge
ljmp
and
add
mov
repz
cli
and
pop
push
nop
add
xchg
jmp
sti
dec
iret
mov
lods
jmp
or
push
push
xchg
add
icebp
daa
cld
mov
movsl
or
enter
sbb
sbb
imul
cmp
adc
aaa
pop
lea
jns
shl
add
ret
mov
sub
test
mov
pop
popa
mov
add
xchg
cmpsb
lcall
test
mov
mov
movsb
push
mov
in
negl
mov
lcall
and
cmp
sahf
push
hlt
mov
mov
cmpsl
sbb
clc
add
push
ljmp
add
jle
test
mov
jnp
aas
in
dec
add
add
mov
mov
sarb
int3
mov
mov
cmp
enter
push
gs
int
xor
push
mov
add
aam
sbb
sub
sbb
xchg
or
adcb
jecxz
dec
cmpsb
fiaddl
jl
sbb
in
das
add
jmp
add
add
mov
jge
stos
cltd
pop
test
pop
add
xchg
scas
mov
mov
adc
add
mov
int3
cwtl
xor
arpl
sbb
leave
lock
add
pushl
or
dec
outsb
add
jmp
pop
sbb
sub
aaa
or
add
fisubrs
ja
scas
add
cmp
add
dec
cmpl
aas
xor
ficomps
add
fcoms
xchg
add
pop
and
xor
adc
add
sub
in
and
and
fwait
outsl
cwtl
xlat
les
sbb
xchg
int
lods
mov
je
and
call
dec
ljmp
loope
push
roll
sbb
roll
lret
add
cmp
sbb
cmpl
dec
add
mov
xor
mov
sti
stos
add
xchg
push
imul
add
fsub
pop
outsb
mov
inc
inc
ds
aas
imul
xchg
fistpl
cmp
cmpsb
pop
add
push
out
dec
cmp
push
mov
daa
shll
adc
xor
out
add
scas
in
mov
cmp
mov
loope
mov
xchg
adc
cmpsb
inc
mov
fcompl
repz
xlat
cli
xor
or
fwait
xchg
dec
idivl
out
add
adcb
sbb
adc
add
add
cmp
or
adc
sub
mov
and
lret
lret
add
push
add
and
add
cmp
push
add
mov
test
cmp
aam
adc
pop
fsubs
cmpsl
adc
and
rol
repz
mov
pop
lock
faddl
std
add
data16
add
jmp
jnp
add
xchg
mov
std
clc
cs
mov
mov
test
fwait
sbb
fildl
mov
dec
mov
push
in
sbb
mov
out
pop
sub
addr16
mov
adc
aaa
pushl
push
ltr
push
ret
xchg
add
add
inc
or
mov
aaa
add
jbe
or
repnz
adc
inc
dec
jp
int3
add
loope
sbb
add
pop
xchg
fldl
sbbl
cmp
adc
testb
jno
add
jnp
xor
rcrl
sub
inc
add
ljmp
cmpsl
and
aaa
cmp
out
jg
mov
fisubrl
mov
xchg
gs
add
or
adc
mov
inc
pusha
dec
sub
mov
repz
in
enter
scas
xor
push
jle
leave
hlt
add
or
call
push
add
aas
sbb
aad
add
xchg
out
dec
jmp
loop
add
shll
xchg
rolb
push
movsl
aad
push
sahf
dec
sub
push
mov
jmp
stos
out
or
cmpb
into
cld
in
dec
pop
add
inc
out
cmpsb
leave
addr16
cmp
cwtl
inc
shlb
inc
cmp
pop
push
jg
sbb
arpl
sub
rorl
push
insb
cmpsb
scas
sbb
pop
xchg
lock
pop
add
iret
movsb
bound
imul
add
mov
mov
inc
add
pop
xlat
mov
adc
mov
setae
pop
loop
inc
mov
dec
add
cmpl
sbb
std
xor
sub
lahf
xchg
cmp
testl
add
inc
scas
lods
fstp
cmp
nop
sub
lods
pmulhuw
loope
adc
cmp
sti
mov
jnp
add
or
inc
adc
xchg
add
xor
add
xchg
stos
push
aaa
add
jp
in
pop
lock
ja
je
xchg
testb
lcall
sub
daa
push
aas
pusha
add
jmp
adc
movsl
filds
pop
inc
add
loope
leave
rorl
xchg
aad
add
test
cwtl
addr16
xchg
inc
stc
in
fxch
fdivrp
add
fimull
testl
repnz
add
mov
sbb
xlat
cs
cmc
push
add
cld
add
add
add
scas
add
or
mov
cmp
push
mov
xchg
dec
adc
xchg
fadds
and
or
xor
dec
jb
jne
stc
mov
call
pop
add
add
xchg
sub
sub
stos
push
into
mov
aas
mov
jne
rcll
mov
inc
test
or
xchg
jb
jae,pt
xor
add
subb
stos
add
jnp
cmp
add
push
add
rolb
sbb
jmp
cmp
add
lret
je
test
movl
cmp
xlat
sub
cs
xlat
push
fiadds
popa
hlt
std
sub
pop
add
dec
pop
xchg
fwait
pop
add
fcoml
cs
add
in
add
repnz
test
lds
orb
in
and
dec
repz
mov
add
sarl
sub
add
sub
adc
xchg
aaa
dec
lea
adc
sub
dec
add
and
mov
mov
add
inc
cmc
lock
sbb
sub
test
scas
dec
push
cmp
jb
xchg
jmp
lcall
add
dec
lretw
add
xchg
push
scas
sbb
out
push
cltd
int
test
add
dec
lods
arpl
xchg
or
aas
loop
sbb
mov
pop
and
sbb
cmpsb
fildl
fldl
shrb
lret
xor
cli
and
addr16
mov
loop
jge
xchg
mov
jo
mov
pop
jo
cld
nop
testb
xor
mov
andb
fadd
cld
icebp
cmp
add
add
mov
in
insb
je
fldl
adc
fisubl
jmp
int3
repnz
xchg
cmpsl
fcom
je
out
add
jecxz
cmp
add
pop
ss
test
cld
and
loop
loope
rcll
mov
sti
subb
add
lock
out
popa
pop
lods
or
sbb
pop
fcoms
ficomps
xchg
adc
cmp
dec
push
adc
mov
mov
mov
pop
lock
sar
ret
mov
dec
fbld
adc
mov
dec
pop
dec
pop
popf
adc
testb
pop
mov
test
clc
idivl
stos
out
mov
pushf
out
cmp
jae
and
rep
push
add
xchg
mov
pop
add
xlat
cs
inc
jae
mov
addr16
pop
cs
cmp
pop
add
ss
lods
in
xchg
add
jb
add
lret
add
inc
ret
sti
out
into
shll
cmp
je
adc
add
push
add
jne
add
cmp
add
sbb
sub
jns
inc
mov
rcrb
xchg
push
mov
in
xchg
xchg
scas
subl
call
pop
dec
adc
sub
js
lods
mov
popa
or
mov
jecxz
or
jns
loope
test
push
add
mov
scas
loop
inc
cwtl
repz
add
xor
dec
jge
fcoms
test
mov
icebp
cli
mov
xor
cmpsb
pop
sbb
push
mov
xchg
test
inc
ret
fadd
sbb
sbb
add
inc
sub
xor
mov
fadds
repz
sbb
mov
cmpsb
push
and
and
sbb
lock
sbb
xlat
pop
add
push
dec
sbbb
jg
or
add
ds
add
add
outsl
inc
mov
adc
sbb
xor
cltd
fdivs
push
add
add
mov
mov
jge
outsb
jl
fdivrs
lahf
out
or
addb
add
movsb
sbb
lods
out
add
stc
ret
add
add
sub
gs
mov
add
add
loop
call
jle
mov
je
or
push
adc
mov
push
mov
lcall
and
sub
pop
cld
and
and
add
iret
push
movsb
add
add
add
lock
mov
rcll
cmp
fldenv
mov
cmc
repnz
leave
xchg
out
fsubl
add
stos
xchg
jge
add
jnp
jbe
push
rcll
dec
adc
sbb
testl
gs
sub
add
dec
ja
sbb
jp
mov
adc
add
add
add
movsl
add
xor
and
roll
pop
imul
dec
lahf
mov
loopne
loope
les
inc
pop
and
scas
add
add
in
mov
mov
or
out
inc
or
popf
mov
mov
push
in
add
inc
pop
and
insb
mov
adc
mov
mov
cld
dec
ror
dec
xor
dec
jge
push
push
push
imul
inc
jge
push
data16
mov
imul
int
add
mov
xchg
add
add
cmp
loopne
adc
hlt
lahf
mov
cltd
sub
add
adc
rorl
clc
inc
xchg
push
jge
mov
mov
jae
add
sub
add
fsubs
jno
sub
sarl
and
sub
daa
repnz
add
fistps
cltd
add
pop
in
xchg
xchg
xchg
jmp
sub
mov
das
mov
add
jns
scas
dec
lret
std
add
movsb
jo
xchg
bnd
pop
movsb
lahf
add
cmpsl
inc
out
imul
or
and
inc
inc
push
es
faddp
mov
lret
or
clc
dec
dec
jns
sbb
in
mov
jg
and
dec
mov
cmp
std
mov
dec
loope
cmp
xor
pop
add
dec
pop
outsb
int
out
lcall
xchg
stos
inc
or
sub
clc
and
add
mov
xchg
sbb
cmp
mov
adc
rcrb
loopne
push
add
cmp
push
lret
outsb
push
sub
popa
mov
sahf
push
cmc
mov
lret
sub
stc
dec
int3
leave
mov
inc
out
add
pop
mov
ss
sub
pop
lahf
sbbb
jg
add
add
pop
add
icebp
add
imul
push
and
lds
lock
pop
mov
fs
add
push
xchg
add
je
cmpsb
js
test
inc
add
mov
pop
insb
js
imul
data16
pop
or
sbb
cmp
add
insl
stos
add
sub
pop
mov
xchg
jbe
dec
jmp
push
xchg
adc
add
jb
out
add
xchg
add
movb
loope
mov
cwtl
jnp
inc
fdivrs
fdivrs
cmc
clc
int3
mov
stos
jmp
cmp
clc
sub
cmp
add
pop
lret
popl
sti
push
or
test
popl
and
mov
ret
push
int
test
adc
popf
lahf
push
add
incl
cmpsl
fisubl
xor
repnz
push
cmc
and
sub
aas
int3
adc
add
xchg
out
icebp
sub
movsb
movsb
cmp
add
add
dec
sahf
add
arpl
mov
add
in
add
leave
mov
lret
orl
subl
xor
add
gs
aad
xchg
loop
add
adc
iret
jmp
mov
shlb
icebp
inc
ret
add
cmp
dec
dec
add
shl
stc
fldl
mov
mov
andl
sub
ret
rcrb
into
dec
add
rorl
aaa
pop
mov
insl
pusha
sub
repnz
cmpsl
daa
xchg
push
add
test
inc
jne
stc
and
les
add
pop
mov
jo
pop
pop
xchg
lret
add
xchg
add
add
sub
add
stos
lea
add
fs
dec
call
adc
fdivs
pop
add
jb
jo
pop
sbb
push
sbb
add
sbb
sahf
mov
shlb
fyl2xp1
adc
and
mov
lret
mov
movsb
jmp
cmpsl
je
fisubs
xchg
xchg
arpl
daa
add
ljmp
jns
jg
dec
xor
inc
mov
mov
lcall
and
mov
add
inc
cmpsl
cmp
pop
leave
fidivrl
ret
cmp
jo
mov
jns
mov
popf
loopne
rcrb
add
aas
movsl
xor
adc
adc
stos
push
pop
xor
or
or
call
push
sub
rolb
jno
add
faddl
jnp
and
add
jo
push
sbb
add
outsb
sub
push
jno
add
jb
cmp
push
cli
inc
fdivrp
cmp
dec
xor
mov
sub
out
jae
mov
dec
xor
es
sbb
adc
daa
mov
cmc
leave
dec
adcb
roll
or
pop
push
int
mov
add
in
pop
add
adc
jp
sbb
xor
cli
xchg
mov
mov
mov
jnp
jl
inc
cli
add
xchg
dec
fcmovu
mov
lret
add
outsb
sbb
sub
lods
dec
int
jne
inc
mov
adc
inc
cld
add
gs
xor
add
add
negl
les
mov
add
insl
add
cmp
pusha
push
rorl
cmpsl
sub
and
repz
xor
pop
or
or
in
cwtl
add
xor
sub
sbb
inc
adc
les
mov
xchg
test
leave
dec
sbb
mov
add
cmp
lds
jecxz
add
sbb
or
les
adc
in
data16
mov
mov
std
sti
fs
jmp
add
lods
ds
lret
jle
jp
inc
push
mov
add
pop
int
mov
aam
mov
movsb
push
pop
inc
imul
cmpsl
add
das
add
add
lods
rcpps
xchg
add
stc
subl
pop
pop
push
mov
inc
push
rcrl
jl
out
loope
sahf
movsb
test
nop
sbb
out
repnz
add
add
push
into
fisubl
scas
in
mov
adc
hlt
and
mov
cmpsl
scas
sahf
fdivp
in
push
les
add
hlt
cltd
push
jns
pop
add
push
add
cmp
bound
lret
add
add
aaa
xchg
mov
cmpsb
rep
mov
popf
push
jmp
out
jno
mov
add
scas
sub
or
xor
test
das
adc
push
ja
add
add
add
dec
movsb
testb
xor
mov
add
add
or
insb
sub
mov
push
fisubs
rorb
insb
and
nop
pusha
movsb
dec
add
push
fsts
jbe
pop
mov
xchg
shl
push
mov
pop
add
rolb
mov
sbb
jp
aas
add
lahf
es
xor
sub
jg
mov
jmp
adc
scas
add
add
cmpsl
stc
icebp
mov
movsb
fsubr
sti
lea
fisubl
test
inc
push
shlb
jge
sub
pop
pop
sti
cltd
add
mov
or
xor
out
dec
xchg
faddl
js
jnp
jne
fidivrs
hlt
push
mov
add
jl
in
sahf
push
shl
cmp
pop
xorl
push
pop
mov
lock
addb
cmpsb
push
lea
enter
push
sub
cmp
jp
call
xchg
add
jmp
sbb
add
testl
fld
fs
es
ret
jle
pop
mov
add
xchg
xor
dec
cmpsl
push
iret
insb
mov
add
jge
adc
fs
imul
fnstcw
mov
loopne
mov
add
cmp
fisubl
ret
mov
mov
dec
pop
cmpsb
call
call
mov
adc
sub
dec
data16
nop
add
mov
insb
cmp
xchg
pop
fdivs
mov
leave
add
adcb
dec
stos
int
add
xor
add
push
sar
nop
push
das
sub
data16
insb
leave
adc
add
add
add
cmpsb
add
sbb
sbb
pop
into
fistpl
push
rolb
xor
mov
add
fcoml
jmp
cmp
inc
call
es
cli
xchg
bound
or
push
inc
inc
adc
adc
mov
mov
imul
test
cmp
xor
call
add
shlb
clc
test
jno
imul
sbbl
daa
add
loope
popa
pop
mov
pop
inc
cmp
add
sbb
cwtl
lea
aam
mov
testl
jb
add
pushf
adc
fiadds
push
adc
xchg
mov
add
xchg
mov
leave
inc
xchg
ret
in
mov
dec
loopne
mov
pop
shl
stc
dec
sbb
xchg
add
sbb
stc
xchg
sub
mov
xor
fs
dec
add
fcompl
shrl
ss
add
add
mov
cli
pop
and
and
sub
xor
jp
push
add
add
cltd
or
out
mov
pop
add
mov
dec
mov
jmp
imul
pop
mov
cmp
movl
add
adc
call
push
aaa
cmp
jnp
add
pop
in
clc
mov
dec
ror
out
xor
in
mov
test
out
sbb
add
mul
xchg
push
andl
adc
add
pop
pop
movsb
in
add
stos
and
add
hlt
mov
cltd
sahf
cmp
add
or
lret
mov
pop
sub
add
add
xor
mov
push
add
loop
push
add
adc
cmp
dec
daa
jecxz
mov
ss
sbb
pop
cmpsl
jb
add
xor
pusha
mov
sbb
add
movsl
push
pusha
int3
je
push
aas
add
test
add
sub
lcall
xchg
mov
cmpsl
pop
inc
enter
cltd
and
scas
xchg
xchg
or
add
push
lret
add
mov
push
push
and
inc
mov
out
les
sarl
xor
and
add
clc
jbe
mov
mov
jns
test
xchg
xor
xchg
insl
add
push
add
bound
adc
imul
mov
mov
xchg
add
loop
and
into
add
fmulp
inc
aaa
or
push
add
mov
add
sub
ret
sbb
cmp
movsl
jo
test
mov
push
inc
add
jg
jmp
out
in
cltd
gs
icebp
movsb
mov
out
push
std
xchg
loope
jnp
mov
cli
xor
stc
fs
xchg
and
lahf
pop
add
or
shlb
pop
add
dec
cmp
inc
in
pinsrw
add
mov
push
cmp
lahf
add
scas
cmovnp
push
add
ss
cmc
mov
pop
jecxz
mov
sub
andb
or
xchg
loopne
fisttpl
xchg
add
cmp
add
addl
xchg
cmp
loope
clc
add
ret
mov
and
mov
les
add
pusha
jne
repz
mov
cmpsb
cli
cmp
jne
or
xor
filds
lds
sbb
cwtl
sahf
push
mov
leave
ja
lret
sti
dec
add
repz
rcll
push
loop
mov
xchg
cmpsb
push
add
loopne
movsl
mov
fdivrs
or
mov
and
fs
sarl
push
add
add
test
add
xor
mov
lretw
mov
add
popa
mov
insb
inc
jae
inc
pop
std
mov
aad
in
jbe
jmp
jl
xchg
cli
movsb
cmp
add
adc
mov
in
mov
adc
fsubl
pop
cli
adc
push
imul
sub
pop
pop
jge
out
jecxz
sbb
lods
adc
add
jmp
in
fmuls
push
loopne
add
jge
sbb
int3
stc
add
xchg
divl
movsl
or
shll
sti
sub
es
out
push
imul
add
in
push
loopne
out
mov
lret
add
pop
cmpb
jge
jg
xor
push
cltd
pop
cmpsl
jle
out
jmp
pop
jbe
mov
add
add
imul
add
divb
mov
add
sbb
or
add
fs
mov
mov
fildll
cmp
popf
call
add
push
jne
enter
roll
out
push
add
sbb
add
shlb
cltd
xchg
dec
sti
push
xor
jnp
mov
incb
push
mov
add
scas
fnstsw
fcmovnu
pop
sub
or
subb
push
cli
out
add
lret
jo
pop
in
rcll
lds
inc
add
add
and
ret
in
imul
and
sahf
add
int
sbb
dec
cmp
mov
add
pop
out
cmc
test
stos
and
mov
mov
sub
and
fcmovnb
mov
push
les
leave
jmp
aad
add
cmp
test
cmp
add
cwtl
dec
adc
cs
add
mov
adc
mov
add
adc
cmpsb
nop
add
inc
pop
mov
in
rcll
test
sbb
inc
loop
lock
mov
adc
pop
xor
inc
roll
movsl
out
dec
mov
pop
jne
fsts
js
sarb
paddb
addl
movsb
add
push
push
cmpsb
fwait
push
mov
xor
jl
add
xchg
scas
mov
pop
mov
pop
xchg
add
push
inc
mov
sub
flds
add
test
sbb
xchg
xchg
lods
jno
outsb
or
mov
adcb
add
fisubrs
lcall
aam
and
add
in
ds
fistpl
cmp
js
out
jg
loope
call
mov
xor
jmp
pop
push
adc
fcompp
imul
adc
sub
pop
daa
shll
adc
push
add
jnp
mov
push
lret
adc
test
fwait
daa
cmpsl
add
mov
add
pop
add
fnstcw
inc
dec
mov
add
dec
push
scas
test
add
add
xchg
outsb
cmpsl
jecxz
xchg
ss
ss
imul
push
mov
xchg
das
pop
cmp
mov
jle
add
add
adc
notb
mov
movb
jbe
out
cmp
dec
sahf
fistpl
xchg
mov
in
sbb
sbb
pop
mov
mull
mov
mov
or
add
or
je,pt
sbb
cli
or
adc
subl
clc
push
into
lahf
sbb
fisubl
mov
jne
mov
fwait
pushaw
add
divl
adc
sti
and
movb
loop
sbb
popa
xchg
movsb
add
add
jp
xlat
mov
pop
lods
lock
add
pop
movsb
mulb
fwait
xchg
push
mov
bnd
ficompl
ja
fwait
add
hlt
test
or
xchg
ljmp
mov
mov
test
mov
add
or
add
add
aas
mov
jnp
fwait
sub
jp
and
data16
lds
aaa
shrl
stos
in
cwtl
dec
add
lods
jmp
adc
fisttps
adcb
test
jno
test
add
push
cmp
xchg
jbe
add
add
in
and
and
mov
xchg
mov
not
push
mov
adc
sub
mov
xor
jmp
xor
inc
jl
jno
xor
add
sub
int3
movsb
sub
aaa
pop
add
in
add
add
flds
sahf
shlb
add
test
dec
pop
push
jl
loopne
pop
das
adc
add
jp
adc
adc
add
jno
add
dec
sti
stos
jb
add
out
dec
inc
clc
dec
mov
xor
push
test
fcoms
leave
stos
daa
add
sub
js
pop
add
insb
outsb
add
adc
mov
lret
jne
and
into
imul
add
imul
stos
fcomip
pop
mov
push
mov
and
mov
jmp
bound
adc
and
out
pop
add
xchg
insb
add
adc
int3
bound
sbb
addb
or
add
add
ret
movsb
xchg
mov
into
jno
pop
cmpsb
push
xchg
and
lret
stos
xor
xor
clc
fcmovnu
rcrl
and
sub
add
sbb
sub
lea
sahf
sbb
and
add
sbb
jbe
dec
gs
mov
mov
add
bound
and
xor
lds
xor
add
fldcw
sub
adc
sub
adc
xlat
jle
dec
test
xchg
inc
sbb
and
sbb
xchg
push
cli
push
adc
xor
dec
aaa
or
repnz
popa
add
add
mov
jle
lcall
insb
add
arpl
cmp
adc
add
add
jecxz
adc
pop
pop
movsb
or
or
push
in
add
mov
mov
mov
push
imul
sub
push
or
into
mov
jmp
mov
fldl
rcrl
add
cld
lock
fs
enter
icebp
lcall
loope
roll
dec
sbb
pop
mov
add
add
fidivl
clc
addb
add
imul
add
imul
xchg
add
data16
add
and
lods
pusha
cmp
gs
jle
andl
in
cmp
add
and
mov
sub
jge
insb
jo
jg
add
divb
addl
outsl
xchg
pop
sahf
sub
pop
sbb
std
jp
pop
sub
movq
test
adc
mov
mov
xor
lret
rolb
call
xchg
jl
dec
add
shll
addb
mov
insl
mov
add
jae
xor
push
and
in
test
add
jo
xor
add
add
xchg
add
cmpsb
aam
loopne
or
xchg
enter
sahf
test
enter
rolb
dec
inc
mov
jb
add
xlat
add
mov
push
push
add
sbb
add
sub
and
xor
cmp
add
mov
push
testl
arpl
test
inc
xor
divb
sahf
jno
or
add
outsb
and
fadds
call
inc
out
jmp
ja
aam
add
jmp
or
cmp
rcrb
ret
je
movsb
jb
jno
mov
lock
pop
adc
aas
pop
dec
jae
sbb
sub
sub
lock
gs
jmp
fwait
add
add
nop
inc
push
add
push
add
addr16
enter
xchg
add
enter
jns
add
sub
add
push
or
rorb
sbb
dec
push
arpl
mov
pop
addl
rolb
jbe
mov
xor
lods
movsb
xchg
dec
out
lock
subb
add
sbb
loop
or
pop
push
mov
mov
jecxz
popa
mov
movsl
mov
jno
jl
and
fiaddl
cwtl
cmpsl
xor
sbbl
sbb
sub
shrl
bound
mov
in
mov
popa
hlt
jno
cmp
gs
mov
lods
jae
add
lods
xchg
cmp
push
cmp
mov
dec
dec
push
pop
testb
push
cmp
xchg
adc
cwtl
push
inc
sbb
or
mov
xchg
inc
mov
mov
roll
js
push
inc
cmpsb
xlat
or
xor
out
and
cld
xchg
add
jno
add
add
inc
push
push
xor
loopne
jmp
mov
xor
and
lcall
mov
add
inc
and
add
lcall
roll
lcall
pop
dec
add
cltd
pop
push
xor
out
adc
sub
stc
inc
pop
outsb
lret
das
rcll
jne
add
leave
lret
pop
int
enter
push
push
add
push
loop
xchg
in
mov
fxch
xchg
pop
push
add
jne
sarl
mov
jmp
xchg
mov
in
shlb
add
mov
sbb
sbb
add
pop
addr16
pop
aad
addr16
add
mov
adc
outsb
ficoms
dec
add
cmp
add
scas
loopne
add
js
sbb
ja
test
ljmp
std
icebp
iret
push
popa
pop
add
stos
add
add
shl
fcomps
push
inc
pop
mov
mov
leave
xchg
dec
cltd
push
iret
pop
jno
dec
add
mov
mov
dec
je
push
shrb
insb
mov
push
add
push
pop
cmp
rol
hlt
jg
incb
cltd
into
cmpl
cld
pop
bndstx
outsb
lret
fs
cmpl
dec
fwait
push
out
fisttpll
sarb
jecxz
add
aad
fistpll
cmp
add
sarb
pop
cmp
adc
insb
repz
xchg
fistps
mov
add
sub
sti
adc
adc
xchg
xor
jae
mov
add
push
pop
push
imul
add
add
jno
cli
stos
out
sti
and
inc
or
and
sbb
add
sub
mov
add
in
push
push
mov
fstl
or
data16
icebp
add
add
sbb
loope
scas
daa
filds
xor
orb
sti
stos
pop
ficoms
push
push
adc
in
mov
outsl
add
sub
adc
add
or
out
add
std
add
mov
inc
shrb
lret
sbb
aas
mov
jmp
imulb
stos
call
gs
test
xchg
xchg
adc
leave
pop
cmp
push
add
cld
add
cli
movsb
add
lret
test
mov
cltd
xlat
mov
push
pop
push
add
push
xchg
es
int3
adc
in
lods
data16
ret
lds
jp
lods
addr16
fwait
enter
xchg
mov
fwait
roll
test
out
add
and
das
les
into
xorl
xor
data16
push
lcall
add
lret
lods
mov
push
das
das
div
push
mov
jg
and
clc
adc
and
xor
sbb
rorb
push
xchg
inc
repnz
add
popf
inc
cmp
cld
jg
ffree
in
inc
mov
mov
push
jno
movsl
cmp
into
mov
xchg
pop
mov
xor
add
ret
push
lcall
jl
add
nop
or
sub
add
dec
adc
or
iret
lret
icebp
add
fsubrs
sub
add
add
icebp
movsb
cwtl
shrl
shll
es
mov
cmp
mov
xchg
cli
mov
add
dec
int
mov
iret
mov
adc
add
stos
or
mov
add
add
dec
add
mov
cmp
add
cmp
shlb
outsb
jmp
testb
dec
ss
aad
dec
mov
pop
and
adc
xorl
add
xor
call
jbe
add
or
push
or
add
roll
cmp
dec
mov
addl
mov
push
mov
ret
jb
lock
iret
mov
inc
lret
xor
and
add
dec
sti
les
aad
arpl
jne
xchg
ret
in
into
pushf
mov
inc
dec
flds
mov
adc
xor
push
repnz
out
push
mov
inc
decl
mov
push
ds
fcoml
test
mov
sar
gs
in
stos
add
inc
jb
movsb
fs
add
test
roll
leave
adc
inc
repz
add
add
jge
dec
es
sahf
ljmp
mov
or
xchg
inc
mov
mov
cmp
idivb
sldt
aam
dec
push
testb
popf
in
add
inc
pop
imul
sahf
or
add
or
and
into
pop
cmp
mov
cmp
add
ds
pusha
push
jmp
enter
mov
add
dec
cmpsl
clc
sbb
enter
testb
push
call
stos
add
loope
add
ja
add
xchg
dec
jmp
sbb
add
inc
lods
xor
inc
insb
xchg
push
data16
jae
add
add
pop
xchg
add
add
fdivl
arpl
add
cmp
sub
pop
add
add
add
adc
jb
scas
ret
jno
add
add
insb
mov
daa
cmp
scas
gs
icebp
in
push
jb
js
adc
pushf
int3
aad
in
add
push
and
scas
push
add
add
sub
inc
roll
mov
push
xor
pop
popa
pop
popa
inc
fmull
pop
sbb
push
add
adc
xchg
sti
mov
test
into
jbe
mov
ja
vcvtdq2pd
or
repnz
movsb
ss
movl
in
inc
aas
sbb
insb
popl
sbb
and
iret
xchg
int3
mov
add
std
push
or
bound
or
push
jmp
jmp
fldl
pop
stos
fisttpl
js
sbb
testl
push
scas
iret
add
sub
adc
xor
add
out
fdivrs
add
pop
xchg
lcall
in
add
push
mulb
push
jne
mov
jns
sub
call
addr16
jnp
aas
add
and
add
lret
add
fdivrl
stos
stos
popf
push
push
cmp
inc
add
dec
inc
add
bound
outsb
fildll
mov
pop
sub
jae
add
jge
add
movl
lret
add
jb
jnp
addl
adc
pop
cmpsl
loope
scas
mov
add
add
jle
mov
push
inc
xchg
push
dec
cmp
jnp
inc
xor
or
incb
ds
mov
repnz
add
xor
in
add
arpl
imul
aaa
jno
lock
push
dec
jle
pushf
add
push
or
mov
in
int3
xchg
push
mulb
pushf
dec
add
nop
sub
popa
xchg
mov
loop
rdmsr
stos
cmp
loopne
pop
dec
movsl
jp
mov
add
add
into
lods
outsl
jae
xchg
jp
add
push
jp
push
adc
loopne
push
inc
pop
jmp
das
xchg
add
push
jl
inc
inc
jbe
push
add
pop
cmp
push
push
add
xchg
mov
ss
cmp
pop
pop
push
cmp
nop
push
sarl
push
push
push
fiadds
pextrw
add
in
addr16
ret
cs
outsb
mov
add
jno
jnp
add
stos
cmp
leave
mov
xchg
push
add
ljmpw
xor
push
pop
jle
sbb
out
add
int
ret
add
sbb
sbb
rcrl
adc
push
jecxz
imul
jnp
fmul
sbb
aad
je
push
xor
xchg
sbb
fdivs
add
inc
aaa
dec
fdivrl
and
xor
add
mov
push
cmp
movsl
imul
sub
cmpsl
push
add
push
xchg
push
or
jnp
mov
lea
xchg
add
outsb
aam
scas
mov
arpl
and
xor
aaa
mov
fstp
int
sbb
or
pushf
sub
mov
rcll
inc
jg
jb
fsubr
add
add
adc
mov
in
in
jno
jbe
punpckhdq
xchg
filds
fisubs
jo
or
inc
test
jecxz
decl
inc
add
popf
jecxz
lret
mov
push
frndint
cmp
leave
pusha
xchg
adc
ret
fsubp
insl
cmp
fidivrl
roll
jle
add
ljmp
sbb
and
inc
or
jmp
inc
fcmovnbe
mov
or
and
jl
mov
fiaddl
push
stos
cmp
addr16
adc
push
test
lock
test
scas
in
xchg
add
add
and
ja
xlat
ret
fdivl
andb
add
shr
mov
rolw
or
adc
dec
shrl
les
lods
dec
cmp
in
ret
or
cmp
cmp
mov
shrl
jle
add
mov
jo
rcrb
int
jns
loopne
xchg
mov
int
mov
push
sbb
fists
mov
daa
xorl
jns
leave
cli
test
fiadds
lods
adc
jo
adc
xchg
push
into
cld
sbbb
fdivr
xlat
add
fiaddl
pop
scas
iret
popa
xor
test
add
ficompl
cmc
mov
add
jp
jp
iret
test
bound
loop
pop
dec
sub
add
sahf
jle
clc
int
ret
dec
nop
jb
xchg
js
pop
cmpsl
test
add
mov
or
dec
imul
pcmpeqb
fldcw
out
adc
jno
imul
cwtl
cmpsl
test
jb
js
add
jno,pn
ret
or
add
mov
mov
outsb
stos
movb
add
jle
pop
pushf
inc
out
mov
push
jbe
lods
jecxz
insb
pop
aam
sub
rolb
add
fistl
in
mov
mov
lret
pop
add
add
les
mov
dec
add
lock
repz
pop
fcmovnu
in
push
sbb
dec
mov
add
push
inc
popf
stc
and
push
ja
xchg
fcmovnu
cld
sub
push
cmp
xchg
sub
xchg
adc
cmp
daa
mov
inc
add
aas
pop
add
add
clc
in
stc
add
adc
xchg
mov
in
push
jo
cmp
add
fcoms
cmp
jb
add
dec
add
add
pop
clc
mov
andb
mov
out
jecxz
out
mov
jp
lock
add
js
mov
imul
xor
mov
fwait
xchg
push
xor
or
add
and
jge
ja
jg
repz
incb
mov
ja
xchg
inc
mov
ss
add
dec
movsb
push
inc
xchg
sahf
jge
repnz
push
std
push
xor
sub
sbb
mov
shlb
test
rclb
addr16
lods
add
lcall
cmp
jae
clc
test
outsl
sbb
test
repnz
lock
mov
push
jne
add
push
sahf
adcl
out
leave
mov
mov
rcll
mov
test
fcompl
dec
add
inc
push
insl
fstpt
imul
sbb
xchg
add
dec
add
in
pop
roll
fstp
shlb
ret
nop
or
pop
sub
shr
add
sahf
jge
loope
mov
nop
stos
ljmp
loopne
fldl
out
repnz
mov
xor
js
lret
sub
bound
add
scas
cmp
leave
mov
sbb
or
out
imul
inc
mov
and
adc
add
mov
mov
ja
loopne
add
dec
pop
adc
mov
adc
leave
add
add
add
sbb
orb
jle
add
add
add
in
test
and
movsb
into
lcall
ret
add
mov
or
add
movsl
int3
xchg
adc
sbbl
cmpsb
and
add
cmp
jg
jno
sbb
jae
lea
xchg
mov
mov
je
sbb
inc
xchg
add
data16
push
popa
adcl
nop
sub
fisttpl
outsl
jbe
fmulp
mov
mov
cli
adc
loopne
sub
inc
cmp
andb
add
add
arpl
imul
cmp
outsb
dec
int
adc
pop
jp
adc
pop
add
sbb
pop
inc
int
lods
adc
mov
fisubrl
fldl
add
dec
add
dec
int
mov
add
xchg
push
inc
xor
fcomi
out
pop
loope
xor
sub
je
arpl
jmp
imul
iret
jmp
sti
mov
sbb
sbb
jl
or
movb
push
mov
in
or
add
dec
imull
sbb
pop
push
in
jmp
dec
sbb
and
pop
sub
stos
push
add
xlat
jbe
mov
pop
imul
arpl
jbe
in
add
mov
fbld
add
inc
adc
add
int3
push
add
push
mov
pop
add
ss
mov
or
cmpl
push
xor
movntps
fmuls
add
push
mov
call
add
add
jae
ret
xlat
fsubrp
loopne
out
loope
pop
fcmovbe
mov
pop
in
das
pop
pop
cmpsl
push
lcall
call
sub
or
jmp
lret
xor
or
stos
cmp
xor
cmpsb
pop
cwtl
add
das
mov
add
cmp
sub
sahf
lea
push
rcrb
lret
add
add
inc
adc
inc
add
cli
add
pop
repnz
and
jg
out
inc
sbb
add
add
js
lret
ja
add
cwtl
jg
xchg
xchg
cmpsl
xchg
cmpsl
lods
adc
cld
add
insb
dec
roll
or
daa
ja
mov
sbb
bound
jnp
jno
inc
xor
jae
rcrb
jo
pop
and
and
adc
outsl
add
add
push
xor
pop
add
jmp
loope
cli
add
add
mov
int3
test
add
lods
jae
add
mov
add
rcll
in
dec
or
nop
outsb
flds
add
and
pop
mov
sbb
add
or
cmpsl
add
mov
add
add
out
xchg
xlat
jae
xchg
stos
add
sub
js
filds
jp
add
xchg
les
mov
inc
fsubr
add
add
jne
sbb
mov
int
sub
pop
and
int3
rorb
mov
xor
mov
xor
je
pusha
mov
sub
rcll
fcompl
inc
mov
push
test
lahf
or
dec
push
fwait
xchg
aad
in
aas
add
or
stc
xor
cmc
add
add
pop
repnz
imul
xchg
fwait
loop
adc
test
jno
outsl
jb
pushf
and
jbe
mov
pop
inc
lcall
call
sub
test
lret
sbb
add
xchg
sbb
and
pop
inc
rclb
stos
frstor
fs
xor
call
mov
ss
push
std
jne
and
add
jnp
je
and
fisubl
add
pop
mov
and
mov
mov
gs
inc
fisttpl
add
pop
ja
cmc
add
mov
addr16
pop
movsl
aad
stos
inc
push
fsubrs
xchg
jns
add
das
test
xchg
add
mov
jmp
add
sbb
cmc
punpckldq
pop
aas
add
inc
fstpl
and
xchg
aam
push
and
cmp
cmpsb
mov
dec
int
cwtl
jle
sbb
std
adc
out
cmpsb
mov
add
repnz
sarl
test
push
insb
sbb
adc
mov
add
jo
lret
jecxz
cmp
cmp
cmpsb
lds
jne
lret
mov
and
add
mov
adc
add
stc
iret
in
add
pop
negl
test
push
fstps
fidivrs
pusha
xchg
cmp
pop
add
repnz
lahf
mov
roll
str
add
inc
add
ret
jl
add
add
aas
mov
sti
add
into
movsl
sub
add
xchg
sbb
pushf
cmp
in
add
add
and
xchg
icebp
add
icebp
mov
fucomip
add
clc
sbb
add
movsl
mov
xor
loopne
repnz
pop
sub
mov
xor
sarb
stc
ret
fwait
imul
cmpl
mov
bound
pusha
pop
shrl
mul
es
pop
or
mov
add
mov
daa
repnz
mov
sarl
mov
add
rcrb
lret
ret
leave
leave
sub
loop
mov
mov
stos
ret
add
jp
add
push
fnstcw
inc
mov
mov
orl
arpl
hlt
aaa
and
push
xchg
dec
jle
sar
push
mov
shll
fwait
mov
cmp
inc
aas
xor
dec
jno
mov
push
add
add
stc
push
and
mov
sub
sbb
add
cmp
adc
add
ja
add
push
adc
jns
iret
xor
jle
popf
add
in
ljmp
mov
and
ja
cld
dec
ss
fldl
xor
mov
sbb
xchg
dec
add
mov
and
cli
cmc
add
sbb
out
xchg
repnz
pop
fwait
pushf
cmp
dec
aaa
mov
int
add
xchg
adc
sbb
int
sbb
dec
add
or
mov
jmp
inc
add
add
mov
les
pop
xor
jmp
and
push
add
jo
fstps
xchg
sub
fsubl
jecxz
fwait
fidivs
cmp
pop
cmpsl
andb
cltd
enter
xchg
call
pop
cmp
or
mov
add
test
ds
inc
outsb
aam
sbb
std
sub
dec
pop
add
or
jbe
pop
xor
fldcw
jecxz
dec
sbb
mov
hlt
aas
dec
out
add
inc
inc
cld
add
adc
and
add
jne
scas
and
nop
lret
decl
add
push
add
pop
cmp
scas
in
mov
inc
dec
mov
dec
mov
or
test
clc
add
ds
adc
loop
loop
add
das
push
icebp
icebp
add
dec
mov
fisttpll
cwtl
lock
add
ljmp
add
adc
jns
or
daa
int
xchg
mov
jno
ds
test
fisubrl
sub
shll
xor
fadds
xor
das
popf
mov
out
inc
cmp
sub
clc
xor
mov
inc
mov
dec
sub
aaa
stos
js
mov
jbe
stc
sbb
dec
pop
fistpll
scas
add
fdivs
xor
xor
jmp
popa
das
add
push
test
xchg
inc
add
cmpsb
push
pop
sbb
adc
adc
jp
xchg
in
repnz
out
aam
push
xor
lds
in
or
xchg
cmp
dec
push
lcall
xor
lret
jbe
fs
pop
and
call
adc
cvtpi2ps
stos
addr16
xor
push
jecxz
icebp
add
xchg
push
in
fwait
add
jne
cmp
insb
std
nop
dec
push
jp
dec
js
add
jl
add
adc
loope
insb
jb
push
out
xchg
sbb
call
push
test
dec
fcoml
cmp
dec
sbb
fcomps
mov
add
pop
push
jnp
push
jge
xchg
add
dec
gs
jmp
jno
subb
add
add
pop
rolb
add
jecxz
mov
add
mov
jmp
sbb
dec
add
hlt
pop
pop
inc
repnz
mov
jecxz
xchg
rclb
stos
add
add
call
aad
and
lods
and
sbb
out
cmc
cmc
mov
push
or
sbb
shr
lcall
testl
cmp
repz
mov
mov
rcrl
adc
ror
mov
call
jg
aaa
push
mov
imul
mov
sbb
pop
and
int3
push
dec
out
mov
in
mov
sbb
mov
mov
mov
call
fcmovu
adc
daa
loop
jl
shlb
cmc
sbbb
daa
hlt
pop
add
push
in
repz
sbb
sbb
int
jbe
insb
mov
gs
inc
mov
pop
loopne
pop
add
mov
int
aas
jbe
add
lret
mov
and
mov
inc
frstor
add
inc
xchg
and
in
faddl
cmc
cmp
je
adc
add
adc
mov
ss
add
sbbl
fisubs
push
lds
outsl
add
mov
int
das
push
add
xlat
out
pop
add
movsl
add
cli
das
mov
pop
arpl
jg
xchg
cmp
outsb
or
adc
lods
repnz
outsb
imul
and
pop
shrl
in
js
inc
or
es
nop
xor
fists
dec
std
es
or
repnz
addr16
dec
ja
push
lcall
inc
adc
test
shl
mov
aas
or
cbtw
clc
inc
inc
push
loopne
add
in
addb
pop
xor
dec
icebp
xor
mov
jno
outsl
adc
loopne
rcll
or
jl
add
sbb
cltd
push
pushf
adc
clc
addr16
sub
adc
out
add
add
int3
aad
or
test
lods
insb
mov
pop
xor
cli
add
outsl
jne
push
mov
or
inc
add
je
mov
xchg
push
enter
or
les
stos
aaa
inc
add
jmp
out
mov
cs
sbb
out
pop
add
cmp
xchg
add
pop
push
and
imul
cmp
repz
jle
into
rclb
jae
inc
js
pop
mov
das
jmp
popa
inc
out
xchg
outsb
jo
mov
add
das
in
add
xchg
std
xor
jle
add
and
and
into
dec
mov
mov
adc
inc
lret
add
es
xchg
cs
loope
in
push
adc
dec
jo
mov
cmp
push
shrl
add
cmp
jnp
sub
ja
sbb
add
fiaddl
sbbb
adc
aam
movl
xchg
pop
int3
add
adc
imul
int3
je
mov
stos
push
sbb
push
sub
in
jb
mov
shlb
and
or
unpckhps
pop
add
inc
add
jp
fcmovb
mov
xchg
sub
das
or
mov
add
jbe
xchg
xor
xor
inc
or
icebp
xor
loop
sbb
fmul
inc
mov
add
push
popa
cwtl
sub
scas
gs
pop
inc
sub
jno
cmp
rep
fistpl
stc
or
pop
lahf
repz
mov
loope
ds
dec
xchg
add
dec
jns
cmp
jg
sub
add
add
lea
push
inc
lock
sub
scas
sbb
rolb
imul
imul
dec
fsubs
enter
out
push
jne
mov
mov
pop
pusha
cli
jge
sbb
fldl2e
enter
in
ret
add
adcl
adc
push
and
mov
fbstp
pop
mov
pop
je
in
inc
inc
mov
das
jne
pop
mov
cmp
pop
jnp
mov
mov
and
add
add
inc
mov
mov
fsqrt
scas
add
outsl
lcall
add
mov
scas
ret
ds
and
loope
inc
push
push
int
lds
push
add
ret
push
daa
pop
adc
test
mov
daa
imul
scas
sub
push
push
mov
cmpsl
pop
jns
mov
cltd
xor
pop
or
fisttps
repnz
jge
fwait
jns
outsb
xchg
cltd
pop
mov
sti
rcrl
add
mov
mov
add
push
push
ret
sub
daa
aas
add
lret
call
sbb
mov
enter
in
add
movl
mov
sbb
adc
mov
rcll
in
push
xchg
lds
fadd
es
jnp
arpl
cmp
stos
adc
mov
int3
cmc
clc
xlat
jo
push
add
aas
add
ror
add
inc
in
lcall
and
lret
or
mov
jl
xchg
mov
and
mov
ds
mov
cli
sbb
jo
lods
in
inc
sbb
cli
and
dec
leave
add
ja
pop
add
fnsave
or
ficoms
cmp
pop
inc
test
popf
mov
icebp
add
push
adc
add
fcomps
daa
mov
int
test
scas
aaa
imul
cmp
pop
lock
cmpsb
mov
nop
cwtl
xchg
mull
dec
add
add
sub
or
push
xchg
mov
leave
cmp
inc
add
pushf
or
add
xchg
sub
leave
jg
pop
pop
dec
call
cmovno
stos
fistpl
mov
adc
mov
add
inc
gs
cli
js
aad
cwtl
push
push
adc
jns
into
lcall
fistps
scas
push
aas
rcrb
fmulp
cld
insb
enter
mov
xor
pusha
xlat
xor
mov
jae
gs
mov
mov
scas
int3
sbb
adc
pop
add
cmp
outsb
jg
jmp
add
push
jl
mov
xchg
imul
add
fdivl
mov
add
xchg
xchg
jnp
and
mov
dec
mov
add
xchg
adc
mov
xor
xor
jo
push
je
roll
sub
lret
sub
pushf
mov
dec
roll
xchg
sub
pop
ret
add
dec
xlat
xchg
pop
enter
enter
ja
add
dec
xchg
pusha
insl
push
clc
fildl
fdivrl
mov
add
sti
cli
imul
popf
cli
xor
dec
in
mov
adc
or
add
add
incl
add
fwait
push
js
ret
fisubrl
jmp
leave
add
jo
add
xor
push
das
pop
pop
mov
pop
push
add
mov
pusha
sbb
addr16
pop
in
xor
call
add
add
arpl
mov
add
sub
mov
call
lret
or
incb
push
add
mov
sub
push
rorb
cltd
mov
mov
adc
and
push
jge
fdivrp
inc
inc
lret
mov
xchg
repnz
fdivs
sbb
lods
cmovae
mov
ja
out
lods
cmp
sub
sti
mov
dec
mov
cmp
out
add
inc
testb
fsubrl
mov
add
rol
rcr
cmp
roll
rcll
sbb
mov
add
jle
test
add
and
push
jns
jno
es
add
cwtl
into
mov
dec
pop
pop
mov
inc
xchg
inc
js
aaa
fnstenv
add
cmp
dec
out
sbb
xor
scas
and
or
xchg
sbb
add
pop
mov
test
cmp
pop
push
lret
roll
xor
pusha
addl
pop
sub
xor
repz
add
into
adc
xor
jne
adc
adc
add
or
andl
add
push
lods
adc
pop
add
add
popa
enter
jge
loopne
push
test
xchg
ljmp
es
lret
mov
inc
add
je
dec
data16
fcmovnbe
xchg
mov
pop
fnsave
aas
inc
push
push
test
push
push
es
add
pop
jo
outsb
mov
adc
pusha
add
push
add
ret
arpl
mov
push
xchg
idiv
sti
pop
adc
or
add
test
cmp
add
cmp
repnz
dec
and
leave
or
sub
mov
adc
ljmp
mulw
jle
mov
inc
jns
fbld
push
hlt
add
jmp
and
mov
or
or
fwait
and
dec
insl
fadd
push
insl
add
xchg
add
mov
push
icebp
lods
sbb
dec
xchg
in
mov
cpuid
add
adc
xchg
mov
push
iret
add
or
pop
out
sbb
pop
out
jo
jmp
or
add
and
add
out
in
scas
pusha
stos
rorl
sub
mov
jg
cmpsb
mov
rcrb
jo
xor
xchg
adc
pop
jb
testb
cmp
xchg
in
test
xor
pop
push
push
fnstenv
add
in
pushf
sbb
movsl
data16
add
shl
scas
pop
lods
add
jae
es
xor
add
mov
jmp
pop
push
add
adc
adc
pusha
xor
lahf
xchg
mul
stc
aas
add
xor
mov
add
add
push
push
aam
fnstsw
fdivrp
add
add
xor
and
sub
ja
or
push
insb
in
shll
jp
mov
cmp
mov
cmp
jle
bound
and
inc
dec
dec
sub
mov
add
jle
repz
jle
add
push
out
cltd
cmpsb
add
add
test
xchg
rcrl
sahf
add
cmpsb
mov
add
fs
add
add
inc
rclb
pop
dec
and
divl
add
push
mov
sub
jle
pop
dec
and
and
mov
pusha
movsb
cmpsb
fstl
fmuls
add
xchg
jbe
loope
fstps
add
call
mov
add
add
mov
psllq
out
aam
or
sbb
cld
add
sub
cmp
aam
sbb
inc
fstpl
shll
add
and
sahf
mov
rclb
mov
inc
lret
xchg
add
sbb
mov
loopne
add
sahf
dec
ss
mov
add
inc
pushf
jl
movsb
fidivl
incl
sarb
xchg
inc
dec
inc
push
shll
lods
adc
and
scas
push
into
push
mov
and
or
sbb
add
push
je
loopne
add
or
mov
gs
mov
sbb
leave
cmp
nop
or
sbb
bound
xchg
test
cmp
push
in
push
cmpsl
dec
xor
mov
sub
and
cmpsb
push
mov
andl
shll
inc
xor
gs
xchg
add
push
insl
add
aam
icebp
in
mov
inc
loop
jns
test
shll
xor
add
inc
leave
add
inc
rcrl
or
std
ss
pop
rolb
clc
jle
jbe
fistpll
push
mov
sub
in
xorl
jmp
cmp
lret
add
mov
jg
mov
mov
pusha
data16
test
enter
xorb
jne
push
loopne
insb
inc
push
ljmp
add
fisubrl
out
add
cmp
cwtl
ficompl
popa
cltd
outsl
mov
out
add
inc
shlb
rclb
push
sbb
in
adc
fsubrl
insb
cmp
pushf
add
loopne
lods
xchg
add
xor
fsubrs
add
dec
pop
sub
add
cmp
ljmp
addr16
xor
ljmp
aas
jno
cwtl
daa
add
popf
add
push
jno
repz
movsb
mov
pop
aam
xor
xor
arpl
inc
fmulp
or
inc
add
cld
hlt
insb
imul
pop
add
and
and
imul
int3
xor
push
icebp
cmp
add
cwtl
fistpll
aas
push
xor
fwait
xchg
mov
add
add
sbb
mov
add
push
xchg
shl
cmpsl
jmp
sub
mov
push
mov
cmpl
add
mov
push
pop
lods
cmp
jnp
inc
add
addb
testb
test
pop
into
ljmp
mov
adc
add
inc
ja
int3
loop
fiaddl
cmp
push
aam
imul
xor
inc
cmp
movd
jge,pt
adc
mov
xor
mov
in
push
enter
inc
mov
pop
in
dec
inc
push
pop
in
pop
clc
ja
pop
push
add
mov
adc
jp
push
test
gs
mov
add
notl
aas
outsb
cmpsb
insb
insl
mov
mov
push
je
add
pop
inc
sbb
dec
xchg
push
in
scas
mov
icebp
mov
dec
add
add
push
jnp
mov
outsb
jno
repz
daa
loopne
bound
jns
lock
and
into
add
scas
adc
mov
or
inc
add
mov
sti
or
xchg
cltd
imul
xchg
mov
imul
daa
in
add
test
daa
fists
clc
rcll
popa
pop
xor
or
xor
arpl
ss
inc
add
mov
cmp
push
loopne
mov
xor
push
outsb
adc
add
adc
mov
xchg
add
out
ss
leave
test
xor
jnp
add
pop
add
add
pusha
push
sarl
fimuls
push
test
into
sahf
dec
cltd
or
and
repnz
arpl
xor
or
in
jmp
decb
push
xchg
add
rolb
out
dec
mov
call
addr16
test
lret
cmpsl
mov
scas
xor
adc
arpl
mov
lds
test
push
push
add
idiv
sub
and
inc
add
sbb
int
inc
or
cmp
push
mov
add
cs
aam
add
data16
fsubrp
popa
ror
bound
ja
mov
inc
or
sbbb
dec
xor
add
add
inc
mov
cwtl
adc
push
cltd
mov
jge
adcl
mov
mov
aas
in
jae
mov
cmp
pop
xchg
add
lds
rcrb
cmp
jecxz
fbld
call
push
pop
add
test
xor
mov
add
hlt
mov
push
and
fldenv
sahf
dec
test
xchg
xchg
xchg
les
hlt
fidivl
cmc
lcall
xchg
mov
inc
test
add
fwait
jmp
sub
stc
fisttpl
sub
lret
popa
sar
lahf
dec
repnz
cmp
mov
adc
cmp
sub
stc
and
fstpt
dec
mov
xor
xchg
xor
push
cmpsb
and
out
mulb
pop
pop
outsl
push
in
adc
cmpsl
mov
xor
push
push
testl
jae
addb
add
mov
xchg
inc
add
loop
jp
pop
add
popa
mov
mov
jp
fldenv
xchg
aas
mov
adc
pop
add
out
mov
add
add
sbb
mov
adc
enter
mov
bound
in
add
and
fadds
add
inc
cs
sub
mov
pop
je
jae
xchg
int3
or
push
sahf
inc
pushf
insl
sbb
jb
add
add
jbe
cmp
lea
push
add
mulb
add
clc
add
xchg
loope
ja
pusha
xor
call
js
addb
pushl
outsl
into
in
pop
pop
imul
xchg
or
sbb
insb
pusha
sub
dec
xor
push
pop
arpl
les
mov
aaa
inc
clc
dec
mov
mov
jl
jl
in
jecxz
ljmp
mov
movsl
loopne
add
fwait
jne
adc
add
in
mov
stc
adc
add
mov
hlt
add
add
push
xor
pop
pop
cmpsb
outsl
aaa
sub
lret
cmp
addb
push
cmp
mov
jg
add
push
incb
push
add
in
push
cmc
movsb
loopne
aam
push
mov
add
pop
stc
and
sbb
xorb
xor
add
test
add
xor
xor
out
inc
fs
and
test
mov
cwtl
hlt
lock
mov
jbe
fildll
mull
mov
cs
std
or
jmp
daa
add
clc
cmp
and
dec
xor
cmpsb
push
jns
jne
adc
int
jo
lcall
les
iret
push
std
add
popa
fisubrl
and
add
mov
js
sbb
xchg
fmuls
out
mov
test
fisttps
add
insl
fistps
aaa
fisubrs
out
sbb
dec
shll
sub
sbb
dec
xchg
push
sbb
jo
jcxz
cmp
mov
ret
mov
dec
out
nop
push
cmp
add
mov
add
and
add
mov
mov
push
insb
scas
rdtsc
add
add
bound
cmp
stc
stos
cltd
push
xchg
xchg
xchg
les
xor
cwtl
cmp
cmpsl
fs
loop
leave
imul
adc
stos
shll
or
hlt
js
add
add
ret
repz
jge
push
sub
mov
sti
aad
out
and
xor
xchg
and
jno
add
add
test
inc
add
rolb
mov
enter
jg
pop
dec
add
dec
outsl
test
je
sti
cmp
push
ret
cmp
fucomi
add
sub
push
iret
rolb
ret
jle
lahf
mov
cmc
cmp
aaa
pop
cli
add
adc
push
shll
mov
jno
movsb
in
dec
add
inc
inc
xchg
jae
mov
mov
add
in
mov
push
push
xchg
lock
imul
jnp
movsl
and
jb
mov
add
std
out
mov
addr16
mov
bound
sti
sbb
repz
pop
movsl
dec
xchg
xchg
push
movl
lahf
insb
jmp
mul
add
cmp
enter
inc
mov
jnp
push
jo
add
sbb
cmpsl
sbb
cmpsl
add
int3
cwtl
dec
cwtl
or
add
cs
cmc
punpckhwd
cltd
mov
jno
mov
push
js
int3
and
adc
call
test
dec
mov
hlt
mov
mov
test
outsb
negl
stc
add
pop
or
jmp
mov
repz
mov
push
clc
cmpsb
jnp
xor
out
push
add
xchg
add
in
cli
jg
add
or
add
add
add
xor
insb
add
add
adc
aaa
inc
and
mov
cmpl
fiadds
pop
imul
cmp
jmp
jb
sahf
pushf
sub
ret
dec
cltd
shlb
insl
int
jle
or
stos
test
and
add
out
push
into
add
cli
push
in
hlt
jl
jmp
stc
sub
pop
pop
sub
mov
pusha
add
pop
add
push
add
mov
insl
mov
movsb
mov
add
mov
imul
lcall
sarb
jmp
adc
hlt
js
push
push
lods
fmuls
cmpsl
add
adc
in
fwait
jp
dec
jb
push
mov
xchg
push
in
ljmp
mov
leave
in
push
and
adc
mov
andnps
pop
add
add
ds
loop
mov
roll
pop
daa
add
push
and
or
add
popf
pop
ret
push
mov
not
test
sub
jmp
cmp
xchg
inc
movsb
arpl
scas
inc
inc
mov
xor
add
loopne
fsubl
add
jle
filds
pop
mov
and
push
movsl
out
jbe
out
mov
fsub
push
sti
rcrb
push
andl
push
push
push
push
lcall
arpl
fidivs
sub
jp
pop
sub
les
jle
add
adc
xor
fs
hlt
push
jecxz
cmp
repz
inc
inc
xor
pusha
push
xlat
add
xchg
sbb
xchg
ljmp
xchg
add
and
pop
jns
pop
cmp
out
and
xlat
add
lds
rcrl
cld
xchg
ja
push
add
xchg
add
mov
rcr
sub
fildll
je
jns
mov
inc
shrb
in
ljmp
add
mov
push
iret
push
enter
xchg
lods
subb
mov
out
lea
push
hlt
les
xor
mov
out
mov
cmc
ljmp
cmpsl
add
sub
in
stos
add
ret
or
lods
test
jge
xchg
push
mov
popf
jo
push
movsl
cmp
mov
loope
jge
mov
ret
test
clc
nop
lods
mull
xor
fldl
rcrb
jge
cmp
add
cmp
push
cltd
add
cmc
dec
cmp
mov
pop
fcomip
push
add
add
mov
dec
jne
aaa
lret
pop
fldl
pop
adc
cmpsl
cltd
push
ficompl
or
jge
int3
subb
add
push
add
clc
adc
fsubrs
roll
cmp
jg
mov
insl
rolb
and
js
or
jp
idivl
add
pop
dec
jmp
jbe
scas
daa
dec
inc
stos
jmp
cmpsl
filds
fcmovnbe
stos
or
cmp
addr16
sub
in
outsl
mov
mov
hlt
in
shll
add
or
sbb
outsl
xorb
dec
hlt
test
les
xchg
fadds
aas
fistpl
cmp
inc
push
adc
add
and
add
sub
mov
roll
mov
into
mov
adc
mov
dec
push
mov
insl
nop
pop
inc
cmp
add
sbb
add
xchg
aaa
jp
mov
cwtl
push
add
sbb
bound
mov
add
adc
sbb
faddl
jne
jmp
xor
sbb
add
ss
outsb
dec
sbb
cmp
fsubrl
add
stos
lods
lahf
mov
sbb
add
adc
dec
mov
and
aaa
pop
movl
add
pop
add
add
out
xor
aas
sti
xchg
add
cmp
negb
and
dec
pop
iret
add
adc
sub
out
xchg
into
into
jp
and
popf
add
mov
jge
cli
add
rorl
scas
and
movsb
dec
inc
add
repz
mov
es
fadds
das
add
jo
mov
movsl
add
push
xchg
in
in
loopne
clc
mov
adc
jmp
inc
jg
inc
in
add
cmp
xchg
iret
ds
cmp
xor
cmp
mov
push
lock
lret
inc
icebp
sti
mov
das
and
repz
xchg
cmp
or
jg
sub
add
popl
xbegin
adc
mov
mov
and
pop
pop
dec
test
add
jb
fninit
enter
ljmp
aam
adc
out
and
dec
bound
mov
pop
push
push
add
pop
pop
out
add
pop
sub
sbb
pop
cld
rclb
mov
push
add
cmp
cmp
inc
rol
mov
add
add
mov
or
add
imul
push
add
add
xorl
in
or
out
mov
add
sub
addb
cmpsl
xlat
ret
dec
icebp
add
inc
idivl
cmp
arpl
adc
sub
andb
stc
xchg
cmp
xchg
int
lods
pop
jo
clc
or
add
dec
data16
xor
add
int3
lret
sarb
popf
adc
lods
decb
inc
js
lret
mov
std
and
xor
mulb
mov
shl
jmp
das
add
mov
movsl
leave
sbb
inc
idivb
pop
pusha
mov
or
mov
aad
push
stos
clc
addr16
mov
jecxz
out
enter
pop
xlat
sub
pop
das
add
sbb
push
insb
add
movsb
mov
out
sub
adc
mov
test
repz
imul
sbb
repnz
xchg
mov
cmp
loope
test
mov
clc
add
mov
dec
jb
les
pop
insb
test
out
fs
add
pop
or
add
test
js
mov
xchg
mov
add
cmp
inc
add
fsubrl
mov
push
in
cwtl
cmp
pop
repnz
jb
jnp
insl
xor
js
nop
jnp
add
adc
testl
jne
iret
mov
xchg
mov
fistpl
jg
iret
call
scas
dec
add
lcall
insl
add
testl
mov
cmp
popa
add
add
scas
xor
jo
inc
adcb
add
hlt
add
leave
mov
push
add
xor
jo
call
ljmp
xchg
icebp
cmp
repz
cmpsb
pop
mov
mov
lcall
stc
and
add
jno
cmp
jb
int3
arpl
adc
out
fdiv
data16
add
fisubl
jns
add
sbb
test
in
hlt
pusha
xor
cmp
add
pushl
out
dec
mov
test
lret
fisttpll
inc
mov
in
xor
xchg
dec
jno
add
lret
add
lret
test
push
pop
dec
pop
xchg
mov
dec
push
add
pop
addl
int
push
add
lret
aas
lods
ljmp
outsl
out
inc
sub
ja
mov
aas
pop
lods
or
push
bts
lock
pushf
mov
xor
add
pop
inc
lea
bound
sbb
test
mov
pop
sahf
in
push
inc
and
mov
jg
push
add
jl
jg
xor
call
xor
add
inc
testb
fwait
and
jge
test
mov
xchg
jne
sub
out
and
sbb
aam
add
mov
int3
fbld
add
prefetch
or
es
cld
dec
in
ret
push
jg
xchg
lret
pop
out
and
int3
jmp
add
in
and
or
roll
add
nop
jne
rorl
jl
push
mov
je
sbb
int
xor
lds
adc
lods
leave
jle
mov
add
jno
test
mov
push
xorb
outsb
loopne
add
and
aam
pop
flds
inc
cmp
mov
xor
out
or
add
mov
xchg
add
add
out
fcomp
or
add
and
add
add
add
add
mov
add
mov
push
gs
punpckhbw
mov
add
add
mov
push
ja
xchg
mov
mov
or
jge
fists
mov
dec
cmp
in
popf
add
loop
mov
push
mov
cs
mov
adc
jle
gs
or
mov
mov
lahf
loope
inc
add
fisubl
js
fs
gs
add
jae
pop
add
ss
push
in
sbb
loope
js
loop
movsb
or
xchg
xor
and
or
std
cmc
test
adc
push
outsl
inc
xor
mov
fdivrs
jb
mov
movsl
inc
nop
mov
cld
lea
cmp
mov
mov
inc
inc
push
pop
mov
xor
mov
xchg
in
les
jns
push
cmpsb
cmp
pushf
dec
aad
dec
dec
mov
aaa
int
push
int
arpl
add
rolb
mov
jnp
sub
adc
mov
rol
das
dec
add
scas
dec
mov
mov
add
ljmp
es
add
sub
xchg
add
add
les
pop
sub
cmpb
imul
fs
push
push
cli
cmc
sub
lret
add
add
loop
adc
push
add
clc
jb
icebp
test
mov
add
cld
push
lods
xor
add
lret
lret
sbb
jns
mov
leave
je
cmp
bound
add
mov
mov
adc
mov
mov
sbb
adc
cmpsl
pop
add
add
add
dec
xorl
movsl
push
ret
push
lods
and
mov
outsl
adc
push
push
jne
les
insl
add
mov
xchg
pop
das
clc
xchg
dec
add
add
cmp
es
js
std
dec
push
xchg
add
add
cmp
add
hlt
mov
lods
xor
pop
das
lea
bound
mov
sbb
add
pop
jae
add
add
xor
cli
add
mov
add
inc
add
lds
mov
xor
adc
push
add
or
stos
dec
add
jle
push
in
fistl
loopne
mov
add
push
ja
aam
dec
add
push
inc
cwtl
dec
pop
clc
mov
or
ss
and
mov
add
mov
divb
sub
jmp
push
mov
push
pop
or
sahf
jmp
aaa
push
add
ds
gs
add
int
loop
cmpsb
loop
lods
push
sub
add
cmp
add
sahf
add
hlt
mov
jl
mov
pop
pop
xlat
inc
hlt
mov
xchg
mov
inc
sbb
out
dec
outsl
pop
outsb
add
mov
push
leave
incb
nop
xorb
out
out
fs
push
filds
pop
jae
leave
add
add
xor
jg
fiaddl
sub
xchg
gs
shlb
ficompl
xchg
xorl
movsb
add
leave
test
int
jne
ss
outsb
mov
push
add
aad
loop
sub
add
ret
mov
xor
inc
iret
pop
pop
xor
add
pushf
add
cmp
add
shl
pop
movsl
out
mov
pop
jae
mov
and
pop
or
cmp
push
push
popf
push
mov
add
adc
mov
mov
and
pop
in
dec
lret
cmp
xchg
sub
sbb
and
add
pushf
add
leave
mov
scas
andl
fmull
pop
ljmp
adc
orl
scas
jo
or
jle
add
push
gs
loope
dec
imul
add
rorl
pop
mov
in
lcall
add
or
sbb
add
jns
mov
lds
cwtl
inc
mov
add
lods
aas
data16
and
mov
test
inc
add
jle
add
out
add
add
or
test
or
push
adc
pop
or
cmpl
pop
jb
add
add
mov
stc
les
scas
add
cmp
add
push
jne
mull
cli
addr16
rcl
and
loopne
js
repnz
in
lea
fiaddl
test
push
test
rorb
add
or
cmpsl
add
or
dec
ljmp
add
outsb
xchg
xchg
lock
add
dec
aad
movl
or
add
fnstsw
mov
adc
sbb
test
or
mov
jnp
jb
lahf
mov
mull
sbb
jo
test
add
out
callw
and
xchg
aaa
shlb
shlb
sbb
add
shlb
jns
mov
in
pop
mov
lret
hlt
add
add
pop
xchg
call
cld
add
std
add
adc
mov
push
rcll
add
das
xchg
xchg
mov
in
inc
sbb
add
fs
sbb
inc
stos
add
add
sub
inc
xchg
pushf
js
aas
xchg
inc
out
stos
pushf
add
ret
xchg
pop
test
add
inc
xchg
in
out
mov
adc
std
mov
push
fprem
add
les
addr16
xchg
dec
add
sub
iret
add
jp
cmp
inc
mov
inc
xchg
arpl
and
add
mov
outsl
cmpsl
and
in
dec
add
pop
sti
add
sub
inc
inc
inc
loope
test
stos
in
xchg
add
xor
inc
or
inc
add
ja
add
pop
pop
and
incl
dec
js
lcall
test
mov
lods
es
mov
add
aad
andb
out
cmc
stos
sub
jle
sub
push
pop
push
sbb
adc
mov
pop
adc
push
mov
aas
sarl
xlat
xchg
aaa
xor
and
in
les
int
ret
push
mov
iret
add
or
cli
add
icebp
jno
push
je
add
adc
clc
stos
adc
sbb
hlt
xorl
mov
roll
adc
xor
add
sbb
add
mov
sbb
test
xor
sarl
mov
pop
mov
adc
js
psrlw
mov
xchg
dec
add
aam
xor
push
cli
add
dec
sahf
push
and
cld
inc
repnz
fistpl
sbb
pushf
jmp
add
dec
dec
stos
scas
add
out
xor
js
mov
pop
cld
xchg
add
pop
lods
bound
lds
mov
pop
adc
int3
mov
les
ret
bound
pop
mov
fists
or
push
add
xor
mov
in
xchg
push
cmp
push
fisubl
push
jb
mov
or
aad
ret
inc
sub
test
fiaddl
mov
mov
mov
jp
jmp
push
fwait
addl
ja
push
add
push
cli
fxch
push
ret
or
pop
jb
dec
add
add
add
scas
add
jae
add
cmpsl
jecxz
push
jl
ss
scas
cmp
add
das
jge
inc
xor
push
movsb
lahf
add
add
add
jo
mov
cmp
sub
out
popa
str
jns
movsl
enter
mov
out
xlat
add
or
cli
add
mov
mov
mov
push
gs
add
inc
jmp
ds
fst
pop
fnstcw
add
es
add
imul
and
add
add
popf
popa
add
pop
in
add
pop
out
fnsave
cmc
add
cmp
test
int
ss
pushf
in
xchg
inc
ss
mov
or
add
fwait
aad
add
fldl
xor
test
xor
pop
sti
imul
das
add
lgs
add
push
into
pop
mov
inc
fidivs
insb
das
push
adc
add
pusha
into
add
xor
sti
jb
sub
aad
pop
inc
or
pop
das
inc
notb
ljmp
xor
gs
sub
push
mov
pop
jbe
add
outsl
add
lods
xlat
sbb
or
xor
sarl
push
es
add
andl
xor
mov
dec
fwait
push
add
inc
sub
dec
cwtl
xor
hlt
inc
adc
cwtl
add
add
jmp
cmp
iret
jae
or
sub
test
mov
cmp
mov
mov
add
sbb
stos
out
fsubr
mov
imul
add
and
cmpsb
add
push
add
pop
add
data16
fnsave
mov
insl
add
fadds
pushl
mov
inc
data16
inc
mov
leave
add
xor
enter
or
enter
mov
fsub
xchg
mov
fcompp
add
jp
add
add
imul
mov
lcall
insl
arpl
pop
adc
stos
clc
push
out
scas
icebp
lea
ret
fstp
mov
xchg
push
add
cmpl
jge,pt
adcb
add
add
xor
fisttpl
add
fucomp
out
mov
jb
dec
fcmovbe
add
out
lldt
inc
testl
and
push
xchg
add
push
add
cmc
addl
jge
loop
pop
add
push
add
mull
sub
into
add
jbe
int
hlt
xlat
cld
jmp
out
cmp
push
ficompl
sbb
addl
mov
shll
sbb
sub
add
outsb
ret
add
out
xchg
stc
mov
movsl
push
mov
add
sbb
jmp
fwait
pop
sub
add
add
add
inc
js
push
add
or
jp
lcall
stos
lcall
lods
add
nop
add
loope
iret
loope
add
sub
sbb
repnz
sti
push
dec
lret
pop
sub
push
scas
xchg
testb
out
mov
sub
leave
and
pop
hlt
incb
fsubp
jge
cwtl
mov
cmp
xor
sarl
dec
rcll
imul
jp
sti
stos
aam
inc
add
mov
mov
jl
mov
in
xor
out
adc
or
loope
jecxz
jns
xor
ret
mov
xchg
pop
cltd
mulb
xchg
pop
addb
pop
add
jge
and
arpl
dec
xorl
add
pop
int
out
jmp
pop
mov
popf
sub
jns
lcall
or
das
add
xchg
add
add
or
add
test
xchg
sub
adc
add
and
pop
add
cli
daa
in
cmc
add
outsl
repz
add
add
and
lods
sub
sbb
scas
in
xchg
jb
xchg
dec
push
mov
add
mov
movsb
jge
iret
je
arpl
popf
filds
push
mov
sbb
aad
mov
add
add
add
icebp
pusha
pop
jmp
out
jne
xor
hlt
xchg
fbstp
fcoml
cltd
insl
mov
icebp
push
cmp
add
lock
push
mov
pusha
jge
mov
add
bound
aam
push
mov
pushf
lds
cwtl
adc
push
int3
lods
test
pop
rcll
cmp
adc
testb
jb
lcall
pop
cmpsl
lret
ljmp
add
xchg
sbb
adc
push
dec
cmpsb
lret
incl
add
xchg
bound
add
int3
add
aad
mov
pop
add
cs
add
xchg
fcoms
bound
rolb
pop
add
call
mov
and
and
cmp
orb
in
mov
imulb
add
xchg
add
scas
push
or
dec
sub
add
inc
test
dec
xor
sub
xor
jle
sbb
push
outsl
add
jo
sub
movzwl
jp
mov
inc
lret
mov
and
enter
cmp
lods
jne
jne
mov
add
cmp
jecxz
and
mov
in
rolb
add
test
add
shrb
inc
mov
into
gs
add
add
adc
aas
dec
dec
jp
add
cmpsl
out
and
push
inc
dec
aam
aam
loop
sub
sbb
sub
add
fildl
test
add
gs
in
popa
add
adc
cwtl
adc
fidivrs
leave
stos
arpl
fildl
and
push
add
les
and
jge
inc
cmpsb
or
leave
jae
xor
out
mov
imul
test
xor
je
jg
and
jb
mov
insb
popf
addr16
add
dec
add
mov
repnz
add
push
push
pop
hlt
add
inc
cmp
sbb
add
jae
xor
add
aas
lds
mov
push
add
lods
mov
arpl
rcr
repz
pusha
mov
xchg
mov
mov
push
push
scas
sbb
add
add
mov
adc
mov
add
add
xchg
andl
sarl
scas
in
adc
add
out
xor
jo
dec
sbb
daa
aas
lahf
popf
aad
cmp
stc
not
fsts
test
in
jecxz
adcb
xchg
inc
adc
out
add
mov
adcl
imul
jp
sub
jo
add
add
movzbl
mov
and
pusha
call
les
insl
pop
cwtl
dec
rcr
outsb
or
mov
stos
add
cmp
mov
cwtl
adc
push
call
inc
lock
mov
fsubl
jns
fwait
push
push
jnp
mov
pop
add
xlat
bnd
mov
dec
xlat
inc
add
push
mov
mov
sbb
insl
in
jnp
add
mov
add
mov
out
sti
pop
push
push
pop
iret
jp
fildll
add
adc
dec
into
add
inc
mov
mov
pop
jmp
mov
pop
sar
push
inc
fisttpll
insb
sti
faddl
push
cmp
imul
in
loope
and
andb
js
dec
dec
cltd
add
pop
mov
add
test
mov
inc
push
jg
add
xchg
stos
movsl
add
rcl
adc
and
add
jae
pop
cmp
add
aad
orl
pop
sbbl
sub
push
jg
call
and
xor
or
pop
popa
aas
fcomps
mov
jl
std
lods
adc
xor
sti
sarb
sub
lea
jo
push
mov
js
sbb
movq
add
cmp
sbb
das
out
mov
stos
mov
stc
popf
xor
sarb
in
imul
xchg
int
movl
mov
inc
imul
clc
data16
sub
test
inc
add
mov
add
lret
mov
pop
inc
shlb
call
adc
aad
add
aam
xor
test
je
xor
xchg
and
pop
inc
or
mov
adc
rcr
inc
xorb
xor
into
mov
mov
sub
into
add
js
and
xor
jecxz
pushf
add
insb
filds
xor
add
scas
add
push
add
cmp
sbb
push
mov
push
sti
cmpsb
add
lahf
je
lock
out
xchg
pop
test
inc
dec
jbe
add
mov
loop
cmp
jmp
cmpsl
add
loop
aaa
nop
xchg
addr16
jl
or
mov
fnstenv
andl
and
aam
test
or
lret
dec
cltd
mov
hlt
adc
inc
fs
jg
pop
dec
cmp
sbb
push
mov
push
add
enter
cmpsl
add
add
xor
jb
lods
mov
sti
add
sub
push
jmp
out
mov
mov
cmp
add
aaa
addl
data16
les
ret
and
xor
cli
adc
sbb
test
add
sbb
gs
pushf
decb
mov
ljmp
add
dec
out
xor
mov
mov
fwait
daa
add
mov
add
addb
pop
addl
str
adc
dec
add
ja
pop
mov
test
cwtl
sbb
ret
cs
push
xchg
inc
or
pop
in
jno
pop
cld
jp
pop
call
decl
add
and
sti
lods
xchg
mov
jge
divl
inc
stos
xor
std
sbb
movb
add
push
shr
insb
mov
sub
out
test
cmpl
push
add
or
stos
adcl
cmpsl
jl
add
hlt
add
or
inc
jmp
fdivs
add
jae
out
out
cmp
cs
push
imull
rorl
loop
push
cs
mov
das
cmp
loope
pop
fisubs
mov
faddp
test
push
cmpsl
adc
add
andl
pusha
sbb
sbbl
add
str
fldcw
aaa
in
mov
mov
into
loop
and
sti
and
dec
fistps
mov
sub
scas
jle
adc
pop
lock
push
js
les
and
add
test
jno
jge
pop
lret
jcxz
cmpl
or
out
pop
mov
jge
push
divl
xor
xchg
fs
add
add
ljmp
rclb
adc
inc
mov
cld
pop
jb
not
in
popa
ljmp
inc
add
add
or
push
jg
push
dec
adc
xchg
gs
mulb
add
mov
mov
rcrb
je
ljmp
mov
ja
mov
jecxz
cmp
xor
inc
leave
cwtl
pop
aaa
cmp
rolb
push
sub
punpckhbw
movb
xchg
mov
cmpsl
fisttps
jae
or
or
add
mov
mov
add
subl
movsl
loop
push
add
lret
call
pop
jle
mov
pop
inc
sti
dec
sub
push
scas
daa
aaa
xchg
imul
ret
test
add
xchg
int
add
or
add
adc
sub
bound
adc
adc
out
cmp
insl
das
add
mov
rcrl
imul
addr16
stos
insb
incb
frstor
lds
lret
adcb
mov
out
mov
ja
inc
xorl
xchg
cwtl
pop
push
dec
sub
adc
sbb
mov
fists
dec
pusha
filds
ret
icebp
mov
jns
add
push
lcall
pop
gs
pusha
xchg
mov
jb
loopne
jmp
popf
test
xor
pop
pusha
fisubs
pusha
mov
mov
mov
in
pop
imul
add
pop
jae
and
xchg
jle
jmp
sbb
sbb
frstor
xor
xchg
add
jns
fbstp
jge
pop
dec
cmp
and
mov
arpl
jmp
pop
hlt
add
add
andb
cmpsb
out
add
ds
stos
add
insb
xchg
add
adc
add
mov
cmp
cmc
out
in
add
mov
add
mov
xchg
addb
add
sti
sbb
xlat
push
rcll
sbb
or
and
mov
mov
ja
mov
xchg
jb
xor
xor
imul
sub
jo
mov
xchg
test
movsb
fildll
adc
add
inc
push
add
add
addr16
add
es
repnz
adc
cld
and
lock
xor
pop
adc
add
adc
jge
xor
mov
pop
dec
push
add
sbb
add
sbb
add
xchg
push
stc
out
jae
xchg
cmp
pop
rolb
or
pop
mov
dec
jbe
inc
push
aas
xor
cmpsb
adc
cld
and
sbb
loope
movsb
add
movsb
ficoml
mov
or
add
push
push
adc
or
call
sbb
inc
pop
mov
ret
dec
sub
data16
mov
add
mov
push
xchg
mov
mov
jp
dec
iret
add
iret
add
sub
add
xlat
add
icebp
test
mov
mov
test
inc
push
je
stos
addr16
dec
iret
push
int3
cmpsl
nop
adc
stos
sbb
pop
call
jns
xchg
shlb
idiv
out
aaa
movsl
add
addb
sub
dec
sbb
inc
or
inc
add
mov
mov
sbb
stos
rcrb
adc
push
lcall
fiadds
sub
in
xor
xor
add
xchg
add
pushf
add
call
cmc
cli
ret
push
pop
sbb
imul
xor
add
sub
adc
pop
test
mov
sbb
cmpsb
mov
inc
mov
dec
adc
das
pop
js
mov
sub
dec
add
cmpsl
fiadds
ret
rol
out
repz
add
scas
ret
push
xor
push
inc
sbb
fcoms
clc
inc
jmp
cmp
push
aad
push
dec
mov
test
repz
or
in
lods
and
mov
fimull
add
hlt
addb
fnstsw
sbb
add
imul
fidivl
dec
add
hlt
stc
add
into
in
adc
cld
add
pusha
add
mov
loop
xchg
and
xor
mov
dec
invlpg
jne
add
std
loop
push
and
andb
repz
add
das
icebp
ljmp
fs
adc
fidivs
xor
inc
ljmp
aam
inc
cmp
sub
sbbb
stc
dec
add
jbe
sub
addl
ljmp
scas
add
push
ss
cmp
add
mov
stc
lods
fiaddl
lret
inc
inc
inc
mov
ljmp
sarb
into
add
in
cmp
lea
imul
jle
testl
add
add
mov
inc
jbe
adc
mov
nop
nop
cltd
inc
jecxz
das
pushl
or
sbb
add
add
push
mov
add
and
sbb
add
jnp
mov
test
pop
negb
and
js
test
and
add
adc
jg
dec
adc
dec
push
stos
add
dec
xor
data16
jmp
stos
lret
jl
mov
lahf
sbb
adc
adc
push
jbe
stos
or
mov
mov
cmp
add
add
test
add
lahf
adc
test
add
jne
roll
mov
add
lret
cltd
mov
jp
inc
lahf
or
ja
add
je
pusha
cmp
inc
add
ret
pop
das
sahf
pushf
add
js
lds
movsl
mov
push
sahf
call
addl
add
mov
pop
sub
sbb
outsb
cmp
add
pushf
es
scas
add
insb
adc
enter
sub
cmp
clc
jno
add
add
call
add
scas
aam
pop
and
sub
inc
inc
cwtl
mov
verw
jl
inc
mov
lea
xchg
movsb
inc
ss
in
and
add
sub
xchg
cmp
test
cmpl
mov
movsl
inc
push
jns
lcall
int
jp
jno
hlt
int
adc
sbb
inc
add
sbb
add
push
popl
push
dec
adc
scas
stos
add
lcall
fwait
and
insb
cmp
sub
jp
int3
mov
mov
data16
add
push
dec
add
loop
add
adc
add
push
add
dec
add
cld
pop
cmc
sbb
loopne
sarl
dec
jb
add
sub
les
xorl
jae
sub
jb
pop
add
fs
lcall
pop
add
mov
mov
pusha
push
pop
fadds
xchg
int3
jmp
into
add
out
out
in
mov
mov
int3
dec
xchg
test
mov
add
in
mov
or
push
xchg
dec
sub
fstpt
pop
stc
in
and
sbb
scas
dec
add
test
mov
push
adc
add
push
adc
jb
fcmovnb
ret
pop
or
lods
loopne
ret
hlt
sbb
lcall
xadd
xor
and
je
fidivrl
hlt
sbb
adc
and
scas
push
mov
jp
cmpsb
mov
inc
mov
int
push
fnstenv
test
inc
xchg
inc
xchg
push
add
jnp
stos
add
shrb
imul
enter
ljmp
xor
lods
adc
mov
push
push
add
add
loop,pn
jne
mov
adcl
stos
jb
xchg
add
dec
add
stos
scas
es
test
jo
push
and
add
pop
sbb
push
scas
rcr
enter
add
rol
pop
push
add
lds
test
add
cs
inc
sti
cltd
adc
xchg
stc
adc
and
xchg
arpl
add
xchg
in
sub
dec
or
add
outsb
xor
xchg
add
add
sub
adc
xor
mov
inc
add
test
pop
fwait
add
add
push
cmp
sbb
inc
pop
add
mov
sbb
sub
sub
cmp
add
xchg
adc
test
adc
mov
mov
add
imul
mov
inc
pop
int3
cmpsl
and
push
or
nop
push
xchg
or
mov
mov
out
add
stc
div
adc
jo
pusha
push
pop
cmp
xlat
adc
loope
je
lcall
clc
mov
mov
add
daa
add
jl
xchg
testb
int
inc
sbb
xchg
shrl
enter
loopne
xchg
sub
cmp
adc
mov
sbb
sarb
add
imul
push
or
dec
jp
sub
xchg
cs
jmp
fisttps
stos
repnz
iret
xor
xchg
jbe
jp
ljmp
ss
addr16
lock
fsubl
mov
push
dec
popa
movsb
mov
add
add
push
cmp
cmp
imul
pusha
faddl
out
xchg
ss
jge
add
pop
add
repnz
mov
mov
scas
mov
cmpsb
shll
sub
les
sub
add
jb
add
add
pop
add
fwait
movsb
push
dec
negb
fcoms
pop
adc
mov
test
into
movl
pop
jno
scas
push
pop
add
mov
cmpl
scas
sub
add
xchg
aam
add
mov
out
cmp
lock
lret
mov
in
adc
jge
in
add
jae
sbbb
pop
inc
sub
popf
sub
ds
push
cld
jl
mov
mov
decl
loop
sbb
les
sbb
ret
icebp
sub
dec
add
into
mov
imul
movsb
cmp
imul
out
test
and
dec
xor
fs
repnz
add
add
add
jne
mov
shl
add
push
adc
movsl
jge
mov
rolb
sub
xor
fwait
or
lahf
and
sahf
pusha
stos
mov
sbb
push
push
mov
mov
ljmp
out
sub
add
add
mov
loop
add
jae
rol
je
test
xchg
add
add
sahf
enter
jbe
add
inc
repnz
mov
xchg
add
lods
orl
outsb
add
enter
cmp
in
and
int
imul
add
xchg
mov
lds
outsb
xchg
stc
lods
xorl
add
add
sbb
pinsrw
test
pop
int3
es
scas
fwait
clc
mov
add
sub
inc
pop
add
out
add
arpl
push
push
clc
jmp
sbb
dec
cmp
add
loope
pusha
movb
mov
std
stos
jno
ret
sbb
lds
sbb
aas
sarl
sti
stos
repz
test
stos
test
or
xor
add
add
sbb
pop
push
dec
jb
iret
stos
add
jb
add
aad
dec
cmp
jmp
in
out
in
adc
add
mov
add
mov
in
cld
mov
add
aad
jb
sub
cli
push
mov
hlt
bound
loope
push
iret
add
xchg
push
dec
ret
stos
adc
sub
xchg
add
cmp
add
fmul
mov
add
xchg
bound
sahf
sbb
test
xchg
xor
jecxz
cltd
jne
lds
int3
mov
adc
in
add
add
jne
fcmovbe
add
scas
add
adc
mov
sub
out
pop
add
push
sub
add
push
lock
fists
dec
in
cmp
addl
cwtl
bound
mov
and
add
pop
jo
push
mov
lds
iret
add
mov
dec
lock
pop
xorl
fnsave
pop
addr16
cs
xchg
addl
cmpsb
pop
rcr
insb
push
jnp
add
add
pop
out
xor
xchg
sub
aad
adc
movsl
lods
pop
jg
mov
add
ret
stos
and
cmp
sub
mov
movsb
daa
jbe
xor
daa
mov
inc
adc
stos
cmp
and
pop
xchg
cmp
ljmp
pop
jne
xchg
addl
xlat
adc
mov
xchg
clc
and
jl
lods
lock
add
and
dec
pop
inc
inc
imul
test
pop
add
dec
adc
xchg
sahf
add
cmp
hlt
sbb
xchg
push
sbb
lret
cs
add
cmpl
shll
clc
mov
ret
xor
mov
lret
pop
lods
hlt
mov
stc
inc
imul
add
lods
sub
push
mov
out
add
dec
sub
fildl
dec
inc
add
add
adcl
scas
jecxz
inc
sbb
adc
fs
xor
inc
adc
sbb
add
mov
mov
addb
int3
test
in
popa
out
scas
into
icebp
xchg
xchg
add
mov
jbe
jecxz
add
popa
cmp
xorl
pop
add
test
push
sbb
lahf
xchg
push
cli
shrb
jg
out
xchg
xchg
add
popa
or
cmp
xor
cmpsl
add
adc
sbb
arpl
cs
jp
mov
add
xchg
andl
mov
cmp
iret
lea
test
dec
popf
add
push
outsl
sub
out
dec
xor
lret
cltd
lods
lret
sub
jae
mov
daa
add
cmp
std
mov
das
andb
mov
push
pop
hlt
in
adc
bound
cmp
div
mov
sahf
mov
and
loopne
and
dec
pop
mov
js
dec
icebp
outsb
cmp
add
cmp
mov
jp
out
int3
add
xchg
fcoms
push
sbb
outsb
mov
xchg
test
loop
sub
jno
add
stos
push
arpl
dec
pop
test
add
mov
sbb
add
or
sti
into
add
test
push
out
lahf
xor
dec
or
xchg
jecxz
pop
or
mov
stc
add
xchg
repnz
mov
push
sbb
daa
xor
iret
add
ss
stos
add
xlat
fwait
pop
ret
inc
cld
ja
add
rcll
sbb
enter
push
aad
into
pop
sub
add
add
add
sbb
cmp
pop
loop,pt
xchg
add
fwait
add
xchg
add
jbe
out
add
lret
ljmp
inc
shrb
pop
repnz
int3
mov
cs
outsl
cmp
jo
jo
pop
loop
xor
xchg
cmpsl
or
mov
shll
pop
bound
jae
les
mov
pop
and
sbb
movsb
xchg
jmp
sub
push
ds
movsl
add
jnp
inc
lcall
mov
add
mov
inc
leave
dec
lods
sbb
sub
push
push
out
add
add
pop
lahf
inc
mov
loope
js
add
or
insb
es
pop
enter
and
xor
xor
pop
imul
add
mulb
push
cmp
pop
cmp
mov
outsl
pop
fcmovu
shll
push
ficompl
lock
push
add
orb
int3
in
aaa
outsb
jae
in
or
out
dec
sarl
inc
outsb
ret
xchg
out
ss
and
aaa
dec
in
mov
ficomps
push
int
sub
iret
mov
pop
adc
enter
cmp
outsl
jecxz
dec
jnp
lds
jle
add
xchg
test
ja
iret
add
mov
adc
lahf
push
adc
lods
xor
or
scas
cmp
add
dec
push
push
js
cmp
mov
pop
push
fisubs
mov
cmpsb
jno
add
pop
sbb
test
add
imul
mov
sub
pop
sti
outsl
jbe
gs
jo
push
mov
add
push
shr
inc
add
xor
add
fnstenv
or
sarl
scas
and
cmp
xor
jecxz
into
push
adc
in
or
xlat
dec
testl
lcall
push
cltd
cmp
cmp
test
loop
sub
push
scas
and
inc
inc
les
add
xchg
mov
ret
aaa
and
add
push
aaa
ljmp
mov
mov
inc
push
icebp
int
test
nop
push
mov
or
xchg
add
dec
int3
push
mov
mov
sub
and
iret
jp
sub
in
dec
jg
add
dec
imul
enter
and
cmp
jmp
cmp
pop
adc
dec
and
adc
push
adc
cmp
push
jae
inc
pusha
sub
pusha
test
je
sub
std
in
test
mov
stos
and
pusha
stos
sub
add
mov
arpl
repnz
rcl
xor
cmpl
cs
jb
or
pextrw
imul
xchg
mov
cltd
pop
fstp
cltd
xor
movsb
frstor
stos
add
call
out
sub
mov
sahf
adc
mov
roll
fldt
and
arpl
add
push
add
add
add
xchg
mov
std
cltd
sub
add
movsl
sbb
jl
aaa
lahf
mov
cmpsl
ficomps
out
add
mov
movups
add
jbe
cmp
add
and
xor
mov
add
adc
lcall
mov
dec
popf
add
fwait
nop
xchg
into
ret
add
mov
or
mov
int3
jp
subl
in
frstor
orl
add
xchg
dec
sbb
mov
lret
mov
jbe
enter
lret
adc
pop
push
stos
sbb
sbb
lahf
add
aaa
pop
ror
insb
xlat
rcl
test
sti
adc
popa
push
daa
sbb
addl
mov
jns
dec
loopne
sub
add
adc
popf
test
push
stos
mov
sahf
jmp
xor
add
dec
shrb
ltr
lret
lcall
pop
xor
outsb
mov
mov
fmuls
shl
sbb
push
or
fistpll
sbb
mov
add
mov
inc
cmp
loopne
cmp
add
mov
add
add
cmp
and
dec
and
movsl
add
pop
add
iret
shlb
ret
andb
aaa
xchg
movsb
pushf
test
jae
xchg
stos
jb
pop
rcrb
add
addr16
xchg
in
stos
dec
ror
lret
mov
mov
in
add
adc
and
add
push
cmpb
outsb
loopne
push
add
add
cmc
mov
out
lcall
mov
mov
cmp
jp
sahf
jle
rol
daa
mov
sbb
ss
add
inc
icebp
movsb
je
movsl
test
mov
or
and
add
xchg
mov
add
sbb
aad
mov
cmp
cmp
cmp
inc
js
lret
into
dec
add
popa
add
push
xor
xlat
movsl
add
addb
subb
outsl
arpl
push
icebp
dec
add
sub
push
stc
add
jno
xor
int
repnz
test
ljmp
add
jecxz
push
xchg
ljmp
fstpt
add
and
sbb
es
push
add
cwtl
dec
ljmp
jle
in
mov
mov
add
repnz
push
sub
lods
push
mov
jle
adc
sub
xor
aaa
jne
in
add
test
pop
mov
add
das
js
dec
popa
sbb
test
push
cmp
test
cmp
add
imul
ret
imul
je
dec
mov
mov
or
push
jl
xlat
fcmovnb
ret
mov
push
mov
lcall
add
push
sub
add
into
cmp
add
jle
cmc
lds
leave
xlat
rolb
cli
pusha
out
mov
out
incl
mov
shlb
and
scas
add
add
insl
imul
clc
mov
popf
add
sbb
sub
sbb
mov
jecxz
mov
push
add
into
push
mov
test
pushf
popf
bound
lea
lret
jbe
lds
inc
jo,pt
xchg
mov
es
xchg
loop
mov
stos
add
cmc
and
fbstp
or
cmpsl
int
or
add
imul
fwait
jnp
xchg
loope
popa
sbb
pop
in
mov
iret
cmp
roll
fcomi
inc
scas
push
pop
jl
add
movsb
mov
xchg
xor
jg
repz
aaa
add
fldl
lea
aaa
pop
cltd
movsb
shll
mov
add
xor
pop
fwait
imul
sub
mov
xchg
scas
data16
enter
adc
dec
add
and
add
sbb
push
stc
fadds
mov
add
mov
xchg
pop
addr16
xchg
mov
test
movsb
ficompl
out
jns
mov
scas
rolb
inc
fildl
ss
fidivs
lods
pop
imul
ja
add
sub
outsl
lods
add
je
fwait
sub
ds
add
inc
in
divl
dec
push
popl
divl
aaa
hlt
setbe
xchg
js
cmc
xor
mov
test
sbb
add
mov
std
psrlq
xor
cs
subb
das
add
mulb
mov
add
xor
pop
cmp
pop
dec
mov
outsl
dec
dec
add
ds
or
xchg
jp
stos
push
push
fsubrl
jns
imul
stos
bound
movb
jnp
mov
iret
ds
adc
xchg
cmp
int3
loopne
add
xchg
mov
jns
gs
fcmove
les
mov
and
add
cmpl
mov
sub
rorb
jg
add
and
xchg
add
mov
jb
jle
inc
add
lret
lcall
bound
out
dec
mov
and
mov
pusha
popa
push
inc
test
add
mov
xchg
lret
inc
mov
dec
inc
xor
repnz
jp
xchg
mov
jecxz
imul
popf
add
mov
lea
out
push
jno
push
fidivs
dec
imul
mov
sbb
sar
and
int3
add
add
int3
sarl
mov
pop
adc
shl
loope
inc
xchg
into
lea
add
mov
mov
add
inc
inc
pop
int3
insl
or
and
hlt
add
add
add
cmpsb
fmuls
jmp
sub
push
inc
push
and
push
fstpt
xor
jl
pop
jmp
ljmp
add
pop
roll
xor
in
fidivs
adc
add
xchg
mov
fcoms
add
or
sbb
popf
fs
mov
movsl
mov
and
cs
out
add
add
xor
fs
daa
adc
loopne
mov
movsl
ds
insl
sbb
stos
cmc
adc
jp
pop
add
test
push
shlb
dec
repnz
loope
adc
flds
mov
sahf
add
popf
xchg
pop
out
cmp
and
add
inc
fadds
jle
data16
add
stos
jle
or
hlt
jae
mov
mov
ret
cltd
xchg
lahf
ret
and
or
dec
insl
xor
test
push
rorl
call
mov
fstpt
fwait
popa
ja
mov
add
cltd
out
lahf
lods
push
add
out
push
xchg
jnp
or
mov
sub
cmp
inc
add
mov
add
loope
cmpsl
lcall
aad
pop
les
jbe
addb
jb
sbb
jle
popa
dec
add
jbe
adc
lcall
dec
mov
xchg
or
xchg
add
shlb
cwtl
leave
imull
pop
xor
gs
add
outsl
push
addb
cmc
dec
push
jne
xchg
icebp
je
movsl
mov
mov
test
sahf
in
cld
movsl
xchg
dec
rolb
add
cltd
int
jg
jno
add
pop
je
pushf
loope
in
push
sbb
fstl
ja
int3
mov
sti
jg
pushf
sub
nop
push
incb
jb
shld
add
jg
mov
add
cmpsl
lret
sbb
push
rcll
jmp
and
sub
sbb
test
inc
mov
add
jnp
mov
add
imul
cld
dec
lret
xchg
push
not
mov
jecxz
and
mov
shrl
nop
mov
jae
mov
sbb
pushf
sub
mov
add
pop
or
add
data16
arpl
popf
add
dec
shl
add
ja
pop
loop
add
pop
pop
cmp
add
pusha
iret
adc
cli
sub
push
xchg
push
mov
add
testl
add
add
lock
push
add
add
stc
mov
sbb
add
sbb
pushf
add
add
cwtl
or
test
icebp
pop
ss
aas
lock
pop
das
inc
addr16
sti
shr
int
xchg
dec
xchg
mov
mov
movsb
or
jg
jb
mov
ds
push
jp
in
mov
mov
call
or
or
insb
sbbl
xor
jno
aaa
hlt
leave
jmp
and
mov
sbb
add
jo
out
add
subl
inc
xchg
xlat
add
mov
movsb
fildll
ds
xor
enter
cmp
xchg
push
mov
decl
cmp
hlt
xchg
sbb
jns
add
int3
pop
aam
jno
add
js
mov
push
and
std
pop
mov
push
sub
pop
mov
dec
adc
jp
pop
mov
mov
xor
inc
mov
in
add
mov
add
push
add
sbb
pop
mov
add
enter
jae
add
add
pushf
jo
add
insl
mov
mov
xchg
ss
xchg
mov
int3
xor
hlt
inc
push
out
rorl
mov
push
stos
in
cmp
mov
jp
add
add
inc
pop
leave
jae
add
ror
push
add
xor
push
add
jae
dec
loope
dec
push
loope
into
mov
dec
sti
pop
idivl
dec
add
nop
out
jb
add
push
push
std
jl
push
add
dec
push
add
cmc
cmp
int3
adc
mov
out
in
mov
add
add
scas
mov
sldt
inc
add
xor
pop
jl
xchg
clc
add
daa
push
or
hlt
xor
lret
mov
or
scas
dec
xchg
cwtl
add
sti
sub
dec
js
faddl
lea
rcl
pop
add
push
mov
sbb
add
mov
add
les
add
rolb
popf
and
mov
lods
pop
pop
in
arpl
sbb
adc
push
inc
or
int3
imul
imull
fdivs
mov
das
jecxz
cmp
mov
jp
aas
test
mov
push
out
inc
push
add
adc
dec
aad
mov
inc
cmp
mov
lsl
add
dec
push
jg
test
inc
rclb
leave
add
out
jo
add
adc
test
push
dec
andb
je
mov
roll
xor
test
add
ljmp
inc
aas
xor
jo
push
jo
add
add
add
and
pop
fwait
mov
or
das
imul
jg
jle,pt
popf
add
sahf
daa
cmp
mov
add
cltd
pushf
les
incl
lret
roll
xor
out
fdivp
subl
xchg
push
pop
fstpt
sbb
cltd
faddl
mov
jb
jl
pop
xchg
add
daa
jp
mov
jb
pop
std
js
fwait
xor
jecxz
xlat
out
mov
push
roll
push
sub
mov
pusha
std
mov
lcall
aad
pop
sub
inc
clc
xchg
mov
test
std
fmull
sub
mov
jle
das
adc
jmp
inc
test
add
data16
cmp
hlt
mov
inc
fs
lods
lds
nop
lret
mov
push
adc
stos
mov
mov
leave
daa
ret
xor
or
jge
add
jae
and
outsb
xchg
sub
add
aad
cmc
and
cld
push
xchg
cmpsb
popa
sti
inc
pop
cmp
add
add
sbb
pop
xor
cwtl
test
fists
mov
dec
jbe
sbb
leave
mov
inc
sbb
cwtl
rcrl
xchg
mov
add
push
fsub
xchg
test
xor
aad
gs
jnp
sbb
add
mov
add
jno
jbe
lds
filds
movsb
add
cmp
popl
inc
xor
dec
lret
inc
add
bound
or
frstor
ljmp
push
cmp
dec
add
add
inc
add
add
add
loop
test
ljmp
sbb
push
stos
jnp
cmp
stos
cs
add
scas
insl
in
mov
add
clc
addr16
and
fdivl
int3
xor
pop
imull
pop
imul
xchg
pop
fs
test
aas
pop
pop
pop
push
dec
adc
insb
xchg
jge
int
jbe
bswap
jecxz
mov
sbb
fists
xor
mov
ljmp
fisubrl
pushf
fsubl
jecxz
out
lahf
xor
cld
add
add
push
jne
add
cwtl
add
fdiv
in
nop
repnz
and
mov
sub
sbbb
mov
jbe
mov
arpl
xchg
rol
push
add
xor
aaa
mov
lods
add
icebp
inc
aad
leave
movsl
add
cmp
add
sahf
mov
data16
jne
or
jne
add
or
mov
and
add
mov
leave
push
inc
dec
dec
and
jge
add
jl
and
cmpsl
xchg
jae
rclb
loop
sti
push
mov
mov
cmp
inc
add
stc
mov
in
mov
cmp
imul
into
and
push
xchg
xor
roll
mov
add
or
xchg
push
mov
sbb
filds
jns
iret
pop
push
je
movsb
test
push
fdiv
xlat
sbb
push
fwait
jge
cmp
gs
cmp
cmpl
mov
and
inc
pop
scas
stos
push
xor
popa
add
push
fsub
cmp
mov
cwtl
fidivrl
fs
sbb
test
add
int
push
jb
pop
pop
jae
pop
add
sbb
dec
test
das
imul
add
scas
mov
inc
add
call
add
test
pop
sub
dec
adc
mov
in
in
xlat
and
inc
aam
sub
imul
or
fs
aam
aad
dec
add
add
arpl
xchg
dec
mov
push
loopne
mov
idivb
adc
cmpsl
mov
sbb
inc
mov
add
jb
mov
flds
flds
faddl
lods
subl
add
adc
mov
push
jne
arpl
mov
push
mov
in
push
cmp
fadds
scas
xchg
add
xchg
push
cmpsb
mov
mov
sti
add
jp
adc
or
dec
jecxz
mov
in
dec
push
pop
nop
jne
add
add
jae
sub
dec
mov
xchg
mov
and
adc
lods
xor
push
add
xor
xlat
loope
adc
inc
lock
cmp
popf
cmp
xor
aas
mov
in
testl
add
jg
inc
or
fadds
lods
add
js
push
bound
popl
es
add
repz
xor
repnz
add
mov
popa
jae
inc
add
in
and
cmp
movsl
lods
aad
or
std
add
add
add
xlat
add
sbb
sbb
hlt
push
push
and
adc
bound
flds
pop
ljmp
sbb
jb
dec
xor
sti
jmp
popa
flds
cmpsb
lods
popa
je
icebp
add
xchg
and
pop
mov
cli
add
jno
inc
testb
xor
inc
fsubp
adc
into
fcomip
iret
ret
add
cmpl
dec
and
lock
leave
and
movsl
xor
hlt
cmp
mov
push
inc
inc
mov
lea
orb
jg
or
popa
add
test
mov
popa
and
jno
std
add
mov
loopne
sbb
arpl
adc
add
subb
add
movsl
mov
shlb
add
cmp
fwait
mov
mov
pop
push
lcall
mov
and
or
imul
add
fmuls
adc
mov
lods
mov
add
outsb
int
cmp
int
sub
iret
and
lcall
push
aam
mov
out
jmp
add
addps
cmpsb
xchg
dec
push
mov
cltd
out
add
pusha
inc
xchg
jo
lods
mov
dec
repnz
loope
add
cmpsl
shll
roll
movsb
jg
pop
adc
out
cmp
push
add
add
movsl
stos
bound
inc
in
add
outsb
add
lods
int3
or
dec
cmp
xchg
enter
add
inc
loopne
cmp
daa
rolb
sbb
and
testw
popf
repnz
movb
inc
mov
popl
xor
and
addr16
cmp
lcall
push
ret
aam
mov
repnz
test
mov
jge
add
add
fcomps
sahf
outsb
lods
xchg
jnp
sub
dec
and
add
scas
mov
mov
dec
mov
js
mov
mulb
das
mov
pop
dec
stos
jecxz
mov
rolb
lds
mov
lahf
test
sub
repnz
xchg
add
mov
jecxz
xchg
clc
call
xchg
cmp
jge
scas
lods
mov
out
xor
clc
cmp
and
push
jl
int
dec
daa
push
lahf
dec
dec
add
push
clc
outsl
jge
mov
test
ljmp
out
movsl
or
and
imul
dec
stos
mov
mov
shlb
leave
jg
add
and
push
sbb
jmp
imul
cmpsb
dec
add
add
push
clc
inc
pop
add
hlt
lahf
loope
add
mov
sbb
ljmp
lds
testb
adc
into
mov
and
lods
in
push
dec
jbe
ret
lret
cmp
les
stos
jl
add
and
stc
sub
rclb
mov
insl
pop
sub
addr16
sbb
das
cmpb
add
das
add
cmp
aaa
andl
xchg
xchg
movsb
sub
adc
adc
jo
out
mov
or
movsl
mov
adc
push
add
jp
mov
push
pop
jg
fiadds
mov
adc
pop
nop
add
add
push
imul
xor
adc
mov
fstpl
add
jl
add
push
dec
jl
push
add
dec
jae
xchg
aam
mov
inc
sbb
pop
sahf
outsb
jns
inc
jmp
loope
mov
cld
dec
sti
mov
mov
add
scas
add
mov
mov
add
fbstp
leave
mov
outsl
add
sbb
dec
mov
outsl
aam
inc
inc
xor
popw
aam
sahf
xchg
lret
adcl
jg
push
push
inc
mov
mov
add
add
loopne
xchg
jp
add
add
dec
add
adc
xor
pop
pop
arpl
dec
lahf
jmp
je
mov
mov
in
pusha
xchg
imull
add
mov
jb
mov
sti
inc
ret
mov
cld
dec
rorl
and
xorl
aam
shlb
jbe
dec
mov
popw
pop
xchg
add
adc
mov
adc
out
adc
in
ret
xchg
mov
in
cmpsl
ljmp
or
adc
hlt
push
add
jb
pusha
add
ret
adcb
mov
sahf
push
jecxz
lods
pop
out
dec
scas
mov
data16
add
clc
mov
pcmpgtd
sbb
das
ret
dec
jns
add
fsub
mov
sbb
pop
mov
xor
inc
scas
jmp
mov
adc
outsl
dec
fistpll
add
cltd
xor
mov
inc
adc
imul
push
add
js
rorb
add
add
sbb
inc
pop
inc
dec
dec
add
aam
dec
test
outsb
add
leave
mov
into
mov
loopne
cs
jl
dec
ljmp
enter
adc
jb
and
jno
call
popf
adcb
sbb
out
cltd
inc
push
xchg
add
cmp
mov
andb
pop
leave
xor
push
sub
add
push
jno
add
pusha
call
test
mov
ljmp
cmp
into
add
in
or
mov
test
add
jae
sub
pop
mov
in
xchg
decl
cmp
fsubr
xchg
xchg
push
push
and
addb
add
push
jmp
sub
inc
das
add
out
add
adc
add
aad
idivb
push
test
adc
cmpsb
add
mov
add
jb
iret
mov
lock
enter
push
in
out
add
dec
dec
aaa
adc
outsl
add
add
sub
pop
mov
xor
cwtl
lcall
add
adc
adc
push
sbb
hlt
movsb
add
rol
add
bound
jnp
sahf
lret
and
xor
push
add
cmpsb
mov
sbb
jle
sub
adc
mov
rol
jge
test
ficompl
push
xor
add
mov
jne
xor
incb
xor
clc
addr16
decl
inc
stos
add
sahf
jge
inc
inc
jae
in
int3
jns
mov
mov
sar
adc
sub
fsts
jb
add
jb
outsb
add
xchg
sbb
lods
add
aad
out
out
fsubl
sbb
lret
add
push
in
push
adc
data16
jle
dec
push
mov
in
in
fidivrs
pop
mov
mov
stos
ja
cmpl
movsb
and
cmovae
shrb
pop
pop
div
ss
cmpsw
inc
fwait
imul
add
ja
test
outsb
xchg
mov
add
adc
add
imul
add
and
jns
rcll
sbb
add
lea
mov
clc
in
xchg
addl
xor
jo
shl
xchg
punpckhbw
add
add
mov
jne
cmp
mov
cmp
push
mov
ja
adc
test
ljmp
loopne
jmp
and
pop
jnp
test
add
mov
xchg
ljmp
jg
add
mov
push
mov
jmp
fisttpll
insb
in
fdivl
fdiv
fidivl
dec
fbld
lret
xchg
dec
dec
leave
mov
data16
add
adcb
in
push
es
adc
push
pop
push
or
add
int3
lock
es
add
xchg
push
rcll
icebp
mov
or
dec
dec
pop
insl
add
mov
push
xlat
in
add
jnp
sti
sbb
add
add
cmc
pop
xlat
cmpsl
je
ret
jp
loopne
add
pop
adc
mov
push
xchg
loope
push
push
test
lahf
test
lock
xchg
gs
inc
mov
cmp
or
add
loope
push
add
jmp
sbb
hlt
add
out
jns
pop
add
pop
shll
push
add
and
aaa
push
ja
push
add
mov
gs
lods
ljmp
shl
icebp
add
lcall
lods
add
add
int
aas
push
imul
push
add
mov
push
inc
adc
inc
pop
or
das
xchg
arpl
add
out
add
js
add
sub
cmp
jbe
roll
fdivr
scas
add
cmp
fsubrs
test
lods
pop
lcall
rcrl
adc
fisttpll
nop
add
ljmp
aam
add
jno
cmp
repz
call
clc
insl
movsl
jnp
xchg
add
adc
cli
test
test
sahf
dec
xchg
aaa
add
cmp
cmp
pop
fucomip
or
pop
add
mov
jae
or
inc
mov
je
add
mov
cmpsl
xor
ja
adc
fbld
int3
add
popf
test
repz
loop
add
imul
clc
adc
pop
fdivl
cmp
lret
das
add
xor
pusha
enter
pop
cmpsl
mov
add
aam
and
and
in
mov
rol
stos
pop
out
pushf
mov
movsb
dec
mov
mov
xchg
subl
add
add
sbb
jno
add
mov
dec
cld
aam
add
add
jne
in
push
das
xchg
pop
push
nop
add
sahf
and
jns
idivl
ret
into
xchg
sub
push
out
in
dec
or
mov
loope
add
jae
into
mov
jbe
sar
jbe
loope
cmc
int
xor
adc
jae
jnp
sbb
fisubl
test
mov
push
lock
out
popa
push
cmpsb
jmp
loopne
adc
cmc
pop
repz
fnstenv
push
push
in
mov
ljmp
out
jmp
mov
add
push
outsb
jbe
cli
xor
push
pop
icebp
lods
sbb
cmp
mov
mov
add
lods
add
add
fstp
aas
push
stos
bound
mov
xor
pop
enter
jae
out
outsl
pushf
pop
scas
jp
add
add
out
add
add
and
and
cmpb
xor
push
jnp
nop
popa
add
jne
ja
sub
nop
add
data16
popa
push
add
adc
add
pop
pop
hlt
jmp
add
cwtl
push
jae
jnp
out
mov
add
gs
repz
mov
add
bound
js
xchg
pop
push
mov
jl
and
mov
pusha
fisubl
push
xchg
scas
mov
data16
mov
sbb
add
ret
sbb
add
mov
icebp
popf
int3
nop
jmp
or
add
add
clc
push
movsl
add
dec
stos
add
lea
jae
js
sbb
and
mov
xor
icebp
jge
xchg
pop
sub
jns
aam
mov
mov
add
mov
int3
out
ret
das
xor
mov
inc
add
scas
fisubl
push
add
add
ss
add
mov
xadd
cmp
add
cld
mov
fldcw
movsl
adcb
pop
push
cmp
ljmp
popl
add
dec
std
push
jle
add
ficoms
mov
stos
imul
int
fiaddl
or
mov
add
add
fisttpl
inc
das
jae
xchg
std
faddp
int3
out
into
sub
dec
cmp
or
adc
cli
mov
or
ficompl
int
adc
jae
gs
add
loopne
popl
das
xchg
loopne
mov
sbbb
gs
scas
jbe
rorb
add
and
lock
fldl
roll
pop
int3
rolb
jmp
mov
rcr
cltd
ret
call
mov
mov
add
add
rcl
dec
mov
adc
js
sbbb
add
pop
push
movsb
add
movsl
cmc
add
inc
inc
lods
sarl
mov
xchg
jno
enter
dec
sub
cmp
stc
add
outsb
push
add
icebp
dec
leave
jnp
jns
push
push
test
xchg
inc
jle
add
cld
adc
mov
imul
and
mov
lea
add
shrb
ljmp
lock
cmpb
push
jecxz
bound
push
cmp
xor
pop
cli
fiaddl
sub
sub
jg
mov
add
loop
cwtl
add
cs
add
push
cmc
adc
fbstp
push
xchg
roll
cmpl
ljmp
fadds
mov
push
cmp
add
fxch
shrb
mov
shlb
sbb
add
add
xor
ss
add
jmp
jmp
mov
mov
dec
push
jp
stc
cld
ss
mov
add
arpl
lds
test
cmp
je
call
sbb
sahf
add
mov
rorl
lret
in
pop
add
pop
loop
jge
and
mov
dec
adc
jg
mov
out
stc
out
sahf
lds
jl
add
sete
jmp
aaa
push
adc
fsubrl
add
mov
and
xchg
pop
add
inc
hlt
sbb
jo
jo
jmp
xchg
int
add
xlat
dec
jg
or
imul
cltd
aas
popa
ret
lcall
sub
xor
or
and
jo
test
repz
push
cmp
adcl
mov
pushf
mov
ljmp
and
js
push
mov
insb
or
push
push
add
dec
cmp
xchg
add
cld
sub
push
xchg
lock
or
mov
push
pop
outsl
jmp
es
lock
add
and
fnstsw
pop
xchg
add
fldl
cmp
pop
add
fwait
jp
add
push
adc
pop
add
push
fwait
shl
adc
push
dec
inc
add
ljmp
or
dec
adc
jno
mov
in
dec
fwait
lret
sub
dec
lock
orb
add
test
test
mov
imul
shll
inc
jo
das
sbb
cli
cwtl
aas
xchg
flds
lea
ja
xor
xorl
push
inc
neg
lea
inc
dec
cltd
fsubl
aas
stos
and
xor
nop
loopne
add
cmpsb
and
xchg
add
push
jno
and
scas
mov
adc
mov
or
mov
pop
sbb
test
pop
faddl
fldt
or
iret
dec
adc
dec
stos
fwait
push
add
lods
add
fists
das
jmp
sbb
add
add
add
xor
shrl
add
or
mov
pop
sbb
push
add
jbe
les
jno
adc
fwait
dec
lods
jle
fs
ret
xchg
xlat
es
pop
andb
add
mov
mov
je
hlt
add
outsb
imul
add
add
mov
pop
dec
lock
fcoms
cmpsl
iret
xchg
ret
add
pusha
add
and
loop
mov
add
xchg
mov
pop
repz
pop
add
clc
andb
test
mul
push
jl
push
add
stos
ss
sub
xchg
lret
inc
lods
mov
insl
jg
or
cmpsl
hlt
push
popf
xor
sahf
imul
adc
xchg
jae
add
out
repnz
movsb
jmp
xor
movsl
fs
xchg
dec
cmp
fistpll
ja
in
xchg
xchg
js
jg
cs
pusha
call
sbbb
in
xchg
adc
movsl
es
add
push
clc
cmp
push
scas
add
dec
test
ret
shlb
push
stos
daa
add
test
out
sub
stc
add
cli
mov
add
sub
pusha
jbe
jecxz
add
mov
cmpsl
out
or
jnp
fidivl
cmp
lret
inc
sbb
insl
nop
mulb
lret
xchg
les
cmp
sti
xlat
add
repnz
mov
dec
xchg
cmp
dec
lahf
jmp
fists
into
jg
push
pop
mov
add
adc
scas
push
repz
scas
shll
adc
int
inc
add
pop
add
bound
hlt
stc
sub
jnp
mov
cmovs
dec
rol
cltd
outsl
mov
or
insl
sbb
mov
pop
sbb
mov
add
add
pop
add
add
pop
ja
jle
add
bound
mov
add
add
xchg
push
add
roll
and
popf
and
shll
shrb
add
lock
inc
xchg
nop
mov
in
push
add
xor
jo
and
icebp
xchg
bound
and
dec
int3
addr16
jae
sub
cmp
fildl
mov
lahf
xchg
jno
push
add
lea
cmpsl
jno
or
cld
les
xchg
adc
adc
outsb
mov
int3
insl
leave
movsb
mov
and
mov
adc
sbb
mov
lret
add
jl
lods
add
daa
movsb
push
loope
jl
push
xchg
mov
loop
sbbl
gs
push
loopne
xchg
dec
aaa
inc
lods
push
cld
repz
add
fisttps
ds
mov
sub
js
add
sub
shrb
xor
mov
mov
les
mov
push
push
addb
aaa
xor
fisttpll
sub
add
xor
add
icebp
insb
dec
add
gs
add
mov
and
lock
pop
js
imul
mov
out
cli
push
icebp
ret
clc
pop
shrl
aad
adc
jmp
out
mov
ljmp
jl
ds
add
dec
out
add
add
xchg
add
cmp
sbb
clc
and
adc
fnstenv
in
mov
sbb
aad
test
mov
inc
clc
push
xchg
inc
loope
jo
add
stos
test
sarb
xor
push
push
mov
scas
add
sti
cmpsl
dec
cmp
enter
push
add
add
cmp
lock
inc
loop
testl
add
fildl
xchg
popf
add
sub
sub
push
fs
int
out
cmpsb
mov
cmp
and
daa
mov
pop
imul
add
loope
aaa
lds
ja
push
add
jecxz
sbb
out
xchg
add
or
cli
add
std
jl
xor
inc
cmp
sbb
aad
add
dec
sahf
test
arpl
pop
imul
adc
push
push
das
push
add
xchg
lahf
pop
push
jns
popa
add
sub
mov
dec
gs
mov
aaa
add
mov
xchg
es
test
lock
push
add
sub
jae
iret
out
xchg
movsb
outsb
push
add
push
add
cmc
pushf
or
sbb
cmpsb
out
push
jmp
cli
int3
arpl
mov
mov
or
pop
neg
dec
add
adc
pop
into
dec
test
loop
add
cli
cld
notb
ret
aas
fidivrl
mov
mov
lds
mov
into
fidivs
aas
test
cmp
add
add
ss
mov
jge
mov
std
sbb
test
js
pop
add
movsl
or
addr16
cmp
jp
ljmp
iret
lea
add
ja
dec
add
mov
jno
mov
repz
add
adc
push
add
mov
push
iret
pop
push
scas
stos
insl
or
add
popf
add
adc
mov
xor
add
jno
lds
mov
add
out
out
pop
fs
xor
add
imul
psrlq
movsl
add
add
aas
iret
enter
add
dec
and
cld
mov
mov
inc
add
sbb
add
pop
push
loope
sub
fdivrl
enter
push
stos
mov
add
add
push
add
jae
add
sbb
inc
mov
divl
mov
add
xor
shll
cvtdq2ps
pop
adc
add
mov
addl
faddl
or
xchg
xor
add
js
imul
fwait
mov
add
cs
pusha
jmp
jbe
data16
iret
sti
dec
mov
sub
frstor
add
add
cwtl
test
fistpll
xlat
dec
sarl
test
mov
cli
add
sbb
sub
adc
fildl
test
add
cs
jae
push
add
adc
sub
xchg
pop
push
ficomps
scas
jnp
nop
out
pop
les
aas
sub
jg
mov
mov
sahf
add
mov
adc
add
jnp
lock
xchg
add
call
loop
aas
xchg
push
pop
xlat
add
sbb
xlat
add
icebp
add
add
xchg
shlb
add
pop
mov
mov
mov
jo
jecxz
enter
or
jl
dec
lcall
jp
iret
addr16
out
test
add
inc
sahf
sub
stc
test
in
and
add
rep
pop
roll
and
push
or
add
inc
popa
test
sub
cwtl
xor
sbb
add
jo
mov
popf
cli
add
mov
or
add
pop
adc
mov
int
jnp,pn
cmc
xor
mov
jg
stc
add
lods
mov
out
sub
cwtl
mov
cmp
sub
sub
pop
scas
add
adc
addl
adc
scas
inc
pop
dec
scas
push
test
add
int
dec
jae
mov
jle
inc
or
xor
add
pop
rolb
pop
add
pop
add
insb
aam
cmp
add
cmp
jl
stos
cmp
mov
fdivrl
and
mov
push
addr16
inc
xor
add
or
icebp
cmp
inc
or
in
sub
push
sarb
add
loope
dec
mov
cli
daa
jo
inc
fidivrl
sti
push
xchg
mov
jno
fidivs
adc
test
data16
sti
or
sbb
xor
in
jbe
out
inc
jmp
add
add
dec
and
fcompl
add
in
and
adc
xor
pop
jbe
mov
inc
mov
or
cs
subl
outsb
lcall
das
cmp
cld
sti
and
push
movsb
add
into
cmp
divb
add
add
in
and
fwait
xor
dec
mov
daa
push
pop
shlb
xor
cmp
enter
aam
add
push
jle
push
mov
or
das
int
loopne
inc
add
out
pop
pop
mov
dec
adc
sbb
push
fstpt
inc
imulb
jns
jno
mov
ss
cmp
dec
push
es
add
call
test
jne
push
push
rolb
add
mov
or
mov
dec
xor
lret
sub
cli
pop
or
add
loopne
xchg
and
iret
insb
jl
cltd
add
lds
clc
jbe
xchg
cmp
or
xchg
pop
dec
std
xor
mov
add
dec
jg
lahf
mov
or
cmpsl
add
jle
ret
mov
mov
ret
ljmp
mov
clc
popa
sbb
test
add
js
add
sub
add
mov
xchg
loopne
pop
add
cld
test
fwait
mov
std
stc
jle
fildll
pop
add
call
pop
dec
xchg
push
nop
jbe
fidivs
jb
jg
jo
xchg
push
scas
jecxz
and
scas
jge
inc
and
dec
add
scas
push
or
jno
push
pop
sub
das
add
popf
call
mov
ret
push
add
lret
out
xchg
push
jae
push
out
cmp
int
add
or
dec
sbb
imul
test
adc
push
push
ljmp
add
or
adc
mov
aas
mov
cwtl
mov
imul
add
jge
dec
pushf
mov
sub
mov
mov
sub
inc
add
dec
scas
scas
mov
pop
scas
dec
mov
lods
sub
enter
bnd
mov
xor
outsl
cld
adc
pop
test
in
jbe
das
cmp
test
ss
push
xchg
movsb
push
cmp
into
popf
xchg
iret
adc
add
add
cmc
ret
add
call
inc
xlat
ret
aad
sub
dec
ret
add
repnz
push
add
sub
add
cmpsb
sbb
arpl
pop
add
jle
jns
aam
cmp
ret
or
lldt
mov
push
add
repz
push
pop
xchg
icebp
xor
cmp
add
clc
ds
add
in
scas
inc
mov
xor
cmpsl
jno
adc
aam
inc
dec
fidivrl
add
js
insb
orb
add
inc
adc
popa
push
add
mov
outsb
push
fisttpll
int3
jecxz
out
xchg
dec
sbbl
into
add
out
fdivr
loope
or
xchg
cmp
pusha
or
stc
add
jae
dec
mov
jns
ret
add
mov
add
and
lods
add
in
add
pop
enter
jno
mov
leave
insb
gs
sub
imul
js
add
pop
cmc
xchg
push
push
fildll
mov
xchg
mov
dec
add
xchg
in
rolb
pop
adc
rclb
and
add
out
mov
dec
push
dec
add
mov
iret
das
jecxz
loop
call
inc
add
into
movsl
or
lahf
add
adc
cmp
xchg
popa
pop
scas
stos
out
add
sub
and
mov
xor
cmp
push
or
fdivrl
movsl
add
test
adc
out
popa
pop
add
mov
add
data16
jb
adc
mov
pop
cmp
shrb
cmp
dec
sbb
and
das
clc
push
add
lcall
mov
add
shlb
std
jmp
cmp
push
xor
out
pop
fisubrl
mov
push
sub
mov
add
mov
aaa
les
jecxz
adc
scas
or
clc
std
or
fldl
aam
aas
rorb
mov
push
movsl
rolb
add
aam
pushf
mov
int
dec
ds
jo
inc
add
jmp
add
xchg
inc
hlt
add
pop
sub
mov
add
mov
stc
pop
adc
loop
sub
add
movsl
xor
lret
lea
cld
or
in
aas
ret
cwtl
fidivrs
mov
add
xor
fstpt
idivb
into
xor
popa
or
mov
cmp
add
push
xor
push
or
pushf
add
pop
test
sub
adc
scas
fsubp
ret
adc
aas
xor
sbb
add
dec
xor
sub
mov
sub
inc
fldt
sbb
repnz
push
inc
cmpsb
and
and
nop
mov
adc
adc
out
mov
cmp
dec
cmp
sbb
xchg
iret
xor
inc
add
scas
or
jo
xchg
jmp
dec
mov
add
xor
push
imulb
gs
push
repnz
add
fadds
lods
mov
pop
lahf
idivb
or
fsubs
loope
sbb
adc
xor
add
lods
add
dec
movsb
xchg
xchg
add
cmp
xchg
inc
mov
add
mov
sti
mov
je
das
jl
and
pop
loopne
pop
rcrl
jmp
out
dec
xchg
jnp
out
repz
ror
add
int
push
add
cs
or
push
cmc
add
sub
add
idivb
dec
sbb
mov
mov
out
xor
jno
xor
cmp
sub
sub
jne
push
or
push
xor
fwait
dec
int3
out
jnp
jne
dec
sbb
les
mov
push
jle
jo
xchg
bswap
imul
insb
out
arpl
mov
iret
lret
inc
pop
push
jo
mov
inc
add
insb
push
add
ja
add
xor
push
pop
dec
mov
jne
push
or
sbb
fnsaves
cli
stos
add
xchg
vmovshdup
negb
add
pusha
xor
xchg
add
inc
sbb
ja
push
xor
cwtl
int
add
add
cmp
xor
stc
bound
outsb
xchg
cwtl
cmpl
adc
lock
push
adc
fucomip
jge
hlt
add
clc
test
jo
cmp
orb
out
cltd
in
add
addr16
adc
not
jno
insl
fisubl
les
cwtl
sahf
add
pusha
aam
jl
enter
jo
add
inc
dec
jo
xchg
test
cmp
je
xchg
shll
daa
or
xchg
cwtl
pop
or
imulb
and
add
int3
pushf
push
xchg
lea
dec
mov
push
sahf
clc
cmp
rolb
inc
push
lods
enter
dec
adc
fisubs
mov
enter
inc
ljmp
pop
add
icebp
ja
daa
imul
into
cmp
xrelease
xor
popl
jb
jne
lods
pop
mov
sbb
test
xchg
mov
inc
outsl
add
add
mov
pop
jbe
addl
popf
cwtl
faddl
adc
test
add
sbb
push
add
mov
sbb
add
cltd
add
or
xchg
cmp
out
add
jae
sbb
jae
cmp
stos
add
adc
adc
inc
inc
pop
pop
sbb
lcall
inc
scas
add
xchg
pop
sbb
stos
out
sub
cmovg
jb
mov
push
leave
add
std
add
testb
add
das
mov
fs
or
ja
mov
dec
cltd
dec
sti
std
push
push
inc
sahf
xor
lahf
mov
or
sti
dec
fcomps
dec
add
setns
repz
mov
lock
test
aas
rcrl
sbbb
jae
add
cmpsl
mov
cmp
mov
sbb
mov
sbb
jp
push
bound
mov
xchg
jnp
mov
jno
add
push
ljmp
adc
jmp
dec
mov
add
pushf
push
mov
add
push
and
push
rcrl
je
xchg
xor
jae
mov
sub
xor
cli
xchg
les
dec
and
cmp
add
sub
jl
add
mov
aad
dec
or
add
dec
faddl
xor
adc
add
aaa
inc
dec
daa
or
add
xchg
nop
ret
cmp
stc
adc
xor
mov
fstpl
jnp
mov
test
jns
ja
xchg
xchg
mov
sbb
jle
xor
and
pop
pop
push
push
cmp
cmp
push
push
add
add
mov
lods
out
data16
adc
sbb
xorl
and
xchg
cmp
adc
andb
add
es
aam
jb
js
add
jnp
push
jns
and
dec
scas
jecxz
daa
add
mov
jp
imul
fwait
dec
push
dec
clc
xchg
adc
hlt
inc
jb
cld
push
inc
bswap
adc
jae
push
push
ss
jmp
add
sub
fistpll
dec
lret
add
inc
sub
loope
add
and
add
add
jns
and
or
fildl
jnp
jb
out
jg
pop
jl
arpl
push
cwtl
bound
cmp
insl
cwtl
jg
movsl
xor
lret
fwait
push
cmp
inc
movsl
ds
ja
mov
jo
xlat
push
add
inc
int
dec
sbb
add
add
cmpsl
xlat
mov
add
sub
add
add
add
add
pusha
sub
pop
xor
lcall
add
xor
arpl
in
leave
cltd
outsl
inc
jle
fildl
push
and
inc
xchg
imul
add
cmc
add
je
push
jp
jb
cmp
adc
push
push
jb
into
pushf
jl
mov
inc
xchg
ljmp
add
fistpll
pop
add
aas
mov
addr16
or
int3
mov
xchg
les
cwtl
lcall
inc
cmp
pop
loopne
push
in
sbb
sbbl
jnp
shll
xor
lea
adc
fdivl
rcr
lods
inc
xchg
les
inc
rcrb
pop
test
addr16
int3
pusha
push
imul
cmc
and
int3
shl
jge
push
stos
mov
push
add
decl
ljmp
cld
add
je
add
in
loope
adc
pop
xchg
xchg
push
cltd
jb
add
nop
mov
inc
in
lods
add
and
clc
cmp
idivl
add
fs
popf
xor
ja
cmp
add
add
xor
push
out
xchg
inc
push
cwtl
and
cmp
repz
rorb
add
popl
popf
xor
pop
mov
rolb
adcl
add
lcall
jns
cmp
and
rolb
loope
add
xchg
in
cmp
add
xor
imul
fldl
cmp
add
repnz
xchg
adc
arpl
addr16
add
idivl
and
test
inc
les
roll
and
hlt
jp
adc
add
adc
ds
add
pmulhuw
or
insb
cwtl
daa
cmp
add
pop
iret
decb
adc
xchg
ror
add
clc
add
or
adc
movb
aaa
ss
aam
mov
xor
push
fwait
gs
push
push
lretw
sahf
loop
add
cli
ror
add
mov
jo
aas
mov
and
movsb
xchg
add
jge
js
je
dec
pop
cmpsl
insb
add
mov
sbb
imul
jmp
or
popa
repnz
rolb
mov
mov
cmp
push
aas
add
cmp
adc
jne
hlt
push
enter
data16
xchg
mov
add
sbb
mov
cmpsl
add
sub
cmp
loop
add
or
pop
add
out
popa
lods
js
mov
pop
cwtl
cltd
stos
hlt
loopne
xchg
fstpl
dec
pop
mov
push
xchg
add
add
add
adc
jno
mov
xlat
ret
mov
inc
push
str
dec
xchg
lods
add
push
add
mov
fcmovne
leave
cmp
fs
push
jle
dec
fwait
or
add
xor
mov
fcomi
add
ss
mov
xor
add
std
aam
add
add
ja
add
or
data16
jle
imul
cmpsb
bswap
adc
mov
mov
or
pop
add
lock
add
add
xchg
mov
icebp
jmp
adc
xchg
mov
add
daa
or
rorl
in
aaa
jb
js
ss
push
push
push
in
fsub
dec
pop
stc
loop
aas
jl
loope
std
sub
pmulhw
rcll
iret
add
jmp
sarl
pushf
xor
pop
cmp
icebp
add
stos
cmpsb
mov
fbld
adc
loope
shll
jbe
bound
inc
lock
push
popa
add
bound
jo
int
sbb
cmp
pop
rolb
iret
add
loope
mov
scas
rclb
cmpsb
mov
cmp
xchg
add
add
adc
fcomi
ljmp
fwait
sub
push
xchg
mov
ret
cmpsl
add
flds
div
add
addr16
xchg
fadds
pop
in
push
add
xchg
scas
fimuls
sbb
out
mov
pop
das
add
sbb
add
push
mov
movsb
lods
add
mov
xchg
push
mov
negb
cld
mov
push
cmp
pop
std
adc
xabort
popa
xchg
mov
add
pop
lret
adc
push
xchg
cld
add
and
jno
jae
das
out
je
pop
add
int
shr
add
mov
inc
aad
cmp
xchg
sbb
sbb
add
loope
ds
cmpsl
test
add
lock
imul
arpl
inc
add
cmp
cmp
push
mov
dec
add
inc
loope
jge
and
sbb
cld
pop
or
sarb
fisubs
cwtl
push
cmp
stos
jp
sbb
movlps
mov
mov
add
enter
sbb
out
repnz
add
add
ljmp
int3
les
dec
fcompl
xor
add
ss
repz
and
cld
add
dec
push
add
adc
lret
pop
lahf
add
dec
mov
push
incl
sti
sbb
sub
notb
xchg
dec
cmp
sbb
add
jge
add
add
out
clc
loop
cmpsb
daa
mov
push
daa
nop
insb
gs
out
insl
mov
aas
stos
pop
rcr
xlat
jmp
aaa
add
clc
jae
pop
fisttpll
data16
dec
ficompl
cmc
leave
mov
stc
lret
sahf
popf
cmpsb
cs
mov
ret
push
sbb
pop
cmp
fstl
cmp
movsb
sub
dec
xor
mov
or
add
add
push
jno
sub
ljmp
out
inc
xor
add
fwait
mov
push
div
mov
aas
add
aam
test
add
lds
or
mov
push
add
mov
pop
rcl
mov
sub
xor
xor
push
add
ret
cli
lcall
add
cmp
int
in
cmp
aad
xchg
dec
fs
or
xor
jmp
lret
add
add
popf
cmpsb
and
add
add
sahf
call
enter
in
lret
add
dec
mov
sbb
push
stc
sbb
lahf
xor
jl
sbb
jg
int3
addr16
fadds
ret
fsubr
jge
movsb
scas
in
push
fcmovbe
imul
andb
aad
xchg
pop
ds
negb
add
xchg
sti
pop
fidivl
aam
add
mov
add
sub
or
push
adcl
add
out
and
mov
daa
fadds
cltd
add
sub
add
cmc
and
inc
add
sti
pop
ret
test
lods
add
mov
jo
jo
adc
inc
je
cmpsl
lods
pop
or
add
or
and
rolb
xchg
mov
add
add
xchg
or
jno
xchg
repz
fs
mov
jbe
out
push
lods
out
hlt
hlt
and
adc
lds
mov
test
in
loopne
movl
pop
into
fadds
popf
mov
std
sbb
enter
mov
pop
mov
out
dec
push
push
xor
repnz
int
stc
inc
fincstp
add
repnz
int
sti
mov
mov
mov
sub
and
cwtl
inc
jg
dec
cltd
in
stos
into
in
mov
or
inc
add
addb
add
ljmp
inc
adc
fstpt
aas
jb
incl
inc
mov
jne
test
pop
bound
pop
add
mov
or
repz
add
inc
push
inc
jle
add
add
xor
pushf
mov
arpl
popa
add
jle
mov
in
call
and
add
xchg
pop
leave
fwait
shl
test
or
mull
add
push
outsl
xchg
mov
mov
outsl
or
add
out
add
mov
lods
jecxz
add
and
xor
adc
dec
add
enter
add
les
loope
xchg
out
data16
dec
adc
fisttpl
mov
mov
adc
and
aaa
mov
or
push
dec
popf
inc
jg,pn
mov
jns
push
mov
pop
add
filds
xchg
add
das
fdivs
popf
dec
daa
xlat
xor
negl
lret
mov
add
jo
jb
jge
cmp
arpl
mov
add
aad
mov
xchg
pop
mov
pop
jge
mov
mov
mov
and
or
std
or
push
adc
pusha
cmpl
in
or
add
mov
roll
mov
int
cmpsl
mov
xor
stos
jge
add
push
sub
push
adc
outsl
pop
sub
jge
add
mov
lods
movsl
jge
cmp
mov
outsb
das
adc
mov
dec
in
push
dec
hlt
pop
adc
xchg
sbb
pop
add
dec
pusha
repnz
in
ljmp
cs
jmp
xor
les
dec
mov
add
sub
shl
mov
nop
daa
cltd
pop
xchg
lods
jae
inc
pop
movsb
fwait
and
pusha
repz
andl
out
add
add
jo
add
ss
push
jae
and
add
add
add
mov
cld
add
xchg
cld
push
mov
inc
push
cltd
gs
add
insl
enter
and
cwtl
mov
jbe
mov
into
test
nop
mov
xchg
mov
scas
ja
add
xchg
dec
mov
dec
jb
inc
xor
push
lahf
lea
add
icebp
stc
xchg
inc
mov
addr16
mov
push
cmp
xchg
adc
cli
mov
mov
fwait
mov
mov
push
sbb
or
cli
dec
xor
js
mov
add
loopne
add
roll
mov
inc
aad
repz
lods
loope
inc
out
add
jo
jb
cmpsb
pop
xchg
int3
pop
call
cltd
cmpsl
mov
mov
pop
push
pop
add
xor
mov
sub
mov
sbb
add
add
or
fildll
cmp
rclb
cmp
imul
add
bound
jb
popf
and
jle
int3
imul
mov
push
test
stos
rcrl
jb
pop
add
shll
loopne
adc
mov
inc
adc
xchg
daa
int3
add
add
sub
xchg
add
inc
rorl
cltd
cs
adc
pop
lcall
incb
jb
add
xlat
stos
add
adc
clc
push
lret
ret
cmp
gs
sbb
outsb
push
pop
out
xchg
mov
adc
cltd
lds
rolb
inc
les
outsl
fwait
std
movsb
int3
sub
push
ret
pop
adc
push
mov
mov
jg
cwtl
xor
out
xor
cmp
mov
cmp
in
inc
lock
mov
into
callw
mov
lock
aad
cwtl
or
pop
xor
cmp
addb
iret
aad
scas
add
arpl
cmc
in
dec
jne
add
push
ljmp
jnp
je
je
mov
push
stos
dec
cmp
xchg
in
sbb
fldl
xchg
pop
cmp
cld
out
addr16
mov
mov
stos
xor
je
add
or
cmpsb
stos
outsl
add
add
loop,pn
in
jmp
sub
mov
ret
add
pushf
sbb
sub
jecxz
mov
xchg
filds
sbb
roll
gs
clc
fs
stos
mov
test
ret
jb
push
inc
out
aad
cmpsb
dec
add
sbb
outsb
add
mov
dec
arpl
inc
or
out
mov
in
add
mov
add
enter
icebp
cltd
add
or
pop
add
add
mov
xchg
mov
or
mov
lcall
sub
bnd
mov
aad
mov
xor
cmc
addl
jae
add
je
add
mov
dec
int
add
aad
adcl
cmp
mov
sbb
sbb
movsb
add
mov
mov
add
xor
arpl
mov
pop
insb
orl
push
mov
movsb
cmp
mov
das
mov
arpl
cmp
movsb
adc
insb
cmp
mov
jg
dec
cmpsb
or
cmc
pop
mov
add
ud1
jecxz
pop
jno
jge
lods
xchg
pop
inc
add
sbb
loopne
xchg
sbb
pop
sub
mov
add
push
test
pusha
jae
sub
xor
xlat
xor
cmp
inc
add
mov
mov
sbb
add
test
fdivl
add
or
repz
add
pop
xchg
rclb
mov
pushf
les
lds
loop
aaa
lock
mov
and
addl
repz
cmp
push
push
push
mov
pop
push
mov
add
mov
add
dec
mov
jmp
add
jbe
dec
add
inc
lds
mov
xchg
stc
cmpsl
clc
mov
mov
cmp
int
sbb
sub
imul
fildl
int3
push
mov
data16
xchg
add
jmp
add
pop
aad
fwait
dec
int3
mov
stos
data16
loop
xchg
add
add
add
aam
jne
fdivrs
add
dec
xchg
mov
fisubs
cmp
insb
adc
cmp
rorl
mov
scas
adc
xchg
xchg
pop
pushf
je
add
out
push
lret
jno
es
pop
add
sbb
ret
push
add
test
movsb
add
ja
arpl
loopne
mov
adc
in
test
add
loope
ror
push
mov
adc
adc
cmp
add
add
add
sub
scas
add
in
xchg
add
dec
lods
jge
mov
cmpsl
stos
and
mov
jne
mov
imul
pop
sbb
or
mov
mov
xchg
mov
xlat
jmp
add
lret
ficoms
bound
test
pop
ja
gs
push
push
cmpsl
cwtl
pop
push
pop
push
mov
fbstp
add
fcmovnu
ss
sbb
mov
xor
stos
cwtl
imul
pop
or
inc
jbe
je
adc
mov
inc
lock
mov
hlt
arpl
popl
in
add
mov
or
shufps
xchg
add
add
pusha
test
incb
jge
jp
nop
push
scas
jmp
add
lods
js
movsb
insb
lcall
mov
push
aas
enter
add
add
adc
lods
adc
lds
xor
addb
rcrb
popa
push
mov
aaa
jo
in
pop
sbb
cmp
add
gs
test
inc
add
pop
adc
cmp
add
stos
into
aam
es
inc
cmc
ds
add
add
jmp
dec
add
fisubrs
adc
jns
push
movsb
cmp
lds
add
add
add
lahf
fistps
add
and
add
test
aam
and
mov
inc
dec
adc
jg
adc
mov
cs
xor
mov
push
add
scas
into
cmp
cmpsl
pop
out
sbb
mov
add
pop
add
mov
int
fs
cli
add
add
and
arpl
fsts
mov
jmp
add
enter
add
xor
lcall
xor
add
add
cld
add
jmp
ds
add
add
add
mov
sbb
or
loop
xchg
jp
arpl
xchg
fwait
mov
xchg
adc
sub
rol
push
push
mov
ficompl
add
and
repz
out
ret
mov
add
jg
cltd
shrb
sahf
lock
cmp
clc
stos
int3
repnz
ret
lds
out
fisubl
clc
gs
out
push
push
ja
dec
pop
dec
adc
adc
dec
cli
add
push
mov
push
add
mov
cmp
or
das
out
rorb
mov
cli
sub
shl
orb
sbb
mov
insl
add
hlt
push
xor
mov
mov
add
xrelease
leave
jge
ret
push
mov
mov
add
stos
add
add
cltd
cs
ja
or
clc
inc
rcr
das
push
outsl
xchg
mov
movsb
add
adc
outsl
fistps
subb
xchg
fcoms
mov
ficompl
mov
dec
jmp
fsubrl
mov
mov
adc
add
cld
jo
push
cmpsb
sub
jmp
fcmovnb
mov
adc
push
adc
pop
enter
int3
jbe
jae
push
inc
add
push
sub
outsb
test
xchg
fsub
pop
adc
pop
add
lods
loope
xor
jle
mov
mov
sti
add
insb
mov
movsl
jno
inc
xchg
mov
xchg
lds
push
sbb
mov
xchg
jae
pop
push
dec
push
out
xor
mov
add
push
inc
jmp
add
insb
jl
cmp
add
roll
pop
leave
mov
aad
adc
add
xor
push
xchg
fisubrs
add
rolb
add
cld
testb
rclb
mov
mov
inc
dec
sbb
pop
ret
ds
pop
jne
mov
adc
sub
sub
sbb
push
sub
push
mov
and
enter
jnp
mov
xorb
push
out
dec
cs
in
in
ret
les
cmp
add
cmpsl
decb
mov
add
or
jecxz
scas
into
frstor
and
jae
pushf
xchg
pushf
add
xchg
pop
xor
sbb
orb
xchg
add
mov
adc
add
sti
les
adc
jle
adcl
xorl
mov
adc
mov
sarl
cmp
fstp
sti
add
test
movsb
mov
pop
inc
scas
jno
push
cmp
inc
add
jno
add
xor
add
in
lods
jp
int3
xchg
daa
push
add
add
mov
lea
mov
cmp
in
scas
cmp
pop
dec
jne
push
add
mov
inc
add
adc
icebp
sbb
mov
lea
cli
cs
xor
cmc
or
add
add
push
fidivrs
add
pop
cli
jp
je
shlb
pop
jl
rcrb
jns
pop
xor
mov
add
adcb
fs
add
xor
mov
jno
add
pop
mov
shll
leave
out
ret
sbb
adc
dec
inc
cmp
addr16
mov
inc
lock
xlat
add
repz
les
sub
push
fistl
aas
cmc
dec
mov
push
stc
jle
rclb
add
xchg
add
add
or
and
in
outsb
popf
xchg
cs
in
jns
sub
add
negl
in
mov
insl
adc
inc
push
add
sub
inc
aad
shll
lret
xor
cmc
mov
jb
rorb
in
cmp
dec
sub
adc
xchg
add
gs
add
cmp
lods
push
aaa
jecxz
movsb
lcall
sub
scas
nop
pop
adc
jmp
call
jp
push
bound
add
lods
mov
add
movsb
xchg
add
jb
xchg
scas
shll
mov
rorl
das
test
loopne
adc
das
movb
aas
sub
int3
int
bound
push
add
popf
icebp
push
mov
adc
add
lcall
ret
int
push
jl
inc
inc
fwait
mov
jg
shll
mov
mov
push
jg
stos
je
dec
test
and
mov
test
loopne
push
add
stos
cmp
push
add
inc
cltd
lods
pop
ss
mov
cmpsl
sub
test
mov
int3
add
add
or
xchg
dec
pop
pop
add
test
xor
test
jbe
or
jle
add
and
dec
cmpb
sti
mov
add
test
add
xor
push
test
xchg
nop
push
jb
add
mov
shrl
add
or
jnp
sahf
jp
mov
aas
mov
jbe
xor
std
xchg
dec
add
dec
cmpsl
popa
int
adc
add
popa
adc
sbb
add
add
mov
scas
jecxz
out
dec
sub
xor
mov
jge
push
jno
test
cmc
pop
pop
add
fcomps
enter
inc
mov
je
add
add
mov
scas
arpl
ljmp
pusha
add
jg
movb
jb
pop
add
outsb
fildll
pushw
mov
jne
sub
add
sub
mov
cli
add
pushf
push
inc
test
mov
mov
rcll
push
xchg
pop
mov
rorl
out
addl
cmp
mov
xchg
clc
jae
push
xchg
xchg
dec
pop
mov
in
popf
mov
sar
fidivl
aaa
frstor
adc
bound
add
sti
imul
and
lret
lods
or
popf
shll
dec
add
xlat
stc
outsl
mull
inc
cld
mov
pop
add
add
pop
adc
inc
cmp
ret
xor
mov
sbb
dec
cmpb
or
and
xor
and
sahf
add
mov
add
pop
icebp
int
push
insb
add
fcoms
push
xchg
add
add
daa
sub
test
mulb
addr16
jns
in
mov
add
inc
sub
dec
popf
add
mov
dec
cmc
add
imul
jo
cmpsl
call
stc
arpl
cmp
repz
movsl
add
repz
cld
push
xchg
or
push
xchg
mov
xchg
add
cmpsl
call
mov
enter
into
xor
add
pop
mov
outsb
push
mov
add
sub
cmp
roll
lcall
int3
add
pop
pushf
mov
xchg
js
dec
test
das
and
and
into
xchg
int
pop
mov
fwait
movsl
push
ret
add
inc
xchg
ret
bound
dec
sbb
add
add
dec
lret
into
aas
xor
cld
movb
mov
bound
hlt
stos
adc
mov
addb
add
mov
mov
iret
push
push
lds
out
pop
or
loop
add
fldcw
das
xchg
mov
xor
add
int3
lcall
sbb
add
add
mov
xchg
add
pop
out
mov
add
mov
bound
xchg
mov
add
es
mov
pop
add
jg
lret
cmp
push
dec
push
add
orl
bound
push
inc
icebp
inc
push
jl
and
xchg
cld
xchg
push
add
jnp
add
add
and
fldl
fiaddl
fisttps
shlb
xor
sub
push
popa
mov
mov
testb
mov
out
sub
fistpl
js
or
xchg
pop
or
in
sub
adc
add
sbb
outsb
or
pop
or
push
pushf
das
test
pop
mov
lret
adc
pop
cwtl
push
add
add
scas
push
enter
mov
sub
adc
mov
hlt
in
inc
or
add
jnp
aad
add
lods
add
fildl
add
sbb
and
cmp
xchg
sub
inc
scas
data16
xchg
pusha
add
lods
push
jb
or
test
jnp
mov
dec
adc
cmpsl
clc
add
insl
cmpsl
andl
cld
add
aaa
nop
out
lock
mov
imul
cmpsl
scas
jno
or
jecxz
fs
fadds
sub
add
inc
lods
int
scas
xchg
or
push
add
xchg
mov
sub
cmp
push
int3
or
push
repnz
dec
into
aam
pop
xor
add
out
dec
dec
jns
inc
testb
add
and
xchg
fisubrl
lret
add
in
inc
mov
adc
mov
sbb
add
push
adc
pop
dec
sbb
jecxz
aaa
out
into
fisubl
and
sti
mov
nop
or
cltd
jns
push
sbb
pop
cmp
lcall
jg
xchg
push
and
das
pop
int3
adc
out
lock
cmc
das
data16
dec
mov
lods
add
jecxz
pop
add
int
pop
test
mov
add
add
outsl
popa
jne
add
inc
add
mov
sbb
inc
mov
dec
push
hlt
dec
push
mov
lods
lods
jmp
mov
clc
ljmp
push
nop
ds
and
xor
xor
inc
out
pop
inc
test
jnp
or
cmp
xchg
sbb
mov
mov
insl
add
ljmp
add
push
mov
hlt
insl
cmp
in
aas
jno
jbe
sbb
fdivs
pushf
test
jle
test
aas
mov
jge
js
xor
iret
sub
inc
subb
push
mov
sarb
add
aaa
daa
pop
mov
mov
pop
imul
andl
add
pop
out
jle
push
mov
mov
pop
hlt
add
data16
add
mov
inc
js
sub
add
ja
add
pop
ds
add
add
jno
aas
xchg
jae
pop
push
shll
inc
jle
cli
cwtl
aam
out
add
js
scas
and
cmp
sub
out
mov
dec
ds
xor
test
xor
jo
dec
push
pop
push
add
fisttpl
pop
add
xor
sbb
fdivr
push
add
sub
add
mov
mov
idiv
je
cwtl
inc
orb
mov
xchg
loope
jle
jmp
or
not
roll
jle
mov
inc
xchg
into
adc
mov
scas
iret
xchg
xor
add
lcall
xlat
in
add
inc
fdivrp
fcomps
mov
cmp
ret
shlb
mov
std
add
lods
push
add
push
pop
jae
mov
xchg
add
test
add
and
push
add
idiv
das
lods
addr16
adc
test
mov
and
add
push
in
stc
add
jmp
or
add
pusha
mov
fildl
pop
aad
insl
add
andb
and
xchg
add
add
loope
add
testl
imul
add
inc
add
imul
push
sbb
ret
stc
mov
add
jg
or
xchg
gs
mov
cmc
sbb
je
mov
add
ljmp
fildl
data16
add
push
mov
mov
jp
bound
cmp
add
incb
and
clc
lods
lock
add
add
inc
adc
movsb
jb
inc
and
clc
mov
pop
push
jecxz
mov
loop
and
addl
ret
inc
cmpsb
pop
or
pop
sub
dec
xchg
test
push
add
pop
jl
inc
mov
subb
fidivrl
push
xchg
fdivrs
loope
fldcw
and
lret
add
pop
add
push
or
cltd
add
fwait
loop
mov
mov
ds
dec
int
rol
movsl
scas
add
in
fs
std
xlat
add
call
mov
inc
mov
daa
add
mov
dec
inc
mov
in
push
sub
stos
into
aam
bound
sbb
add
and
lock
pop
pusha
adc
xchg
add
mov
jp
sub
xor
add
add
ret
in
mov
xchg
rol
cltd
pop
push
aad
lret
push
add
jns
fistpl
mov
jp
test
mov
xchg
push
lcall
jbe
mov
dec
movsb
js
fiaddl
fdivrs
imul
pop
xor
xlat
push
gs
cwtl
incl
add
jp
or
in
test
jb
push
xor
push
imul
cmpsl
push
add
dec
and
xchg
movsb
lock
sbb
insb
push
mov
add
add
sbb
add
movsl
fildl
adc
add
push
add
or
adc
mov
jns
add
jo
pop
sbb
adc
push
xor
adc
push
roll
stos
or
add
sti
popa
push
cmp
add
inc
jae
push
mov
fmull
add
mov
push
or
and
add
push
add
inc
jg
jmp
leave
loop
movsb
rolb
insb
mov
mov
sub
lea
push
adc
mov
cmp
sbb
ret
testb
add
js
add
aad
xchg
idiv
popf
fs
pop
sbb
ss
xor
pop
dec
sub
lret
outsb
xchg
jle
aad
add
jp
adc
push
jno
out
and
jae
lret
or
cmp
dec
add
mov
xchg
xor
mov
out
push
mov
pop
sarb
pop
xchg
pop
int
sbb
ud1
sub
mov
mov
movsl
add
sti
cs
sub
jp
jnp
ljmp
movsb
push
outsl
fimuls
mov
adc
cmpb
call
add
xchg
add
sub
adc
dec
repz
or
inc
imul
jl
pop
inc
addl
repnz
and
fnstsw
adc
test
pop
or
adc
and
mov
lcall
sbb
mov
push
or
pop
inc
popa
test
std
or
pushf
mov
aaa
mov
add
cmpsb
fidivl
xchg
sub
xor
cmpsl
sub
cli
fldl
popw
xchg
add
dec
jp
jge
cmp
push
fmuls
add
mov
add
mov
icebp
add
adc
loopne
in
mov
xorb
leave
xor
sbb
mov
filds
mov
sub
and
add
aas
lods
adc
orb
and
inc
leave
sbb
jnp
push
pop
data16
adc
ss
js
adc
aad
das
sbb
cmp
addr16
add
mov
pop
jo
fcmovbe
ds
dec
mov
inc
push
aam
xor
jae
stos
xor
sbb
outsl
pushf
movsl
repnz
movsl
and
orb
xchg
loope
mov
adc
pop
shl
add
jnp
add
daa
sbb
orl
add
jno
mov
mov
lods
fldt
aad
pop
lock
or
rcrb
sbb
cli
pushf
add
ss
and
jmp
pop
subb
and
add
jl
testb
xchg
out
rcl
loop
sub
loopne
push
ret
add
add
movsb
lea
loopne
add
insl
adc
mov
mov
add
add
dec
imull
inc
insl
pop
outsb
push
add
or
ret
dec
daa
xchg
mov
cmpsb
mov
mov
test
mov
jg
xchg
inc
aam
dec
xchg
jg
sbb
add
mov
pop
jns
add
mov
adc
pop
outsl
call
stc
mov
outsl
sahf
test
scas
pop
sbb
add
xor
add
adc
out
add
jns
js
scas
iret
add
ljmp
xor
in
add
mov
pop
adc
xchg
add
faddl
andl
jne
lods
mov
js
ret
je
movsl
mov
add
cmpsl
out
xchg
fmul
adc
add
es
pop
pop
pop
add
push
popl
sti
inc
imul
or
mov
arpl
xor
leave
sbb
add
pop
testl
fidivrs
push
push
push
push
insl
cmp
js
into
or
push
stos
enter
add
inc
testb
or
pop
pop
sbb
gs
insl
mov
lock
inc
sbb
cmp
jnp
in
xchg
jae
in
testl
test
adc
mov
push
mov
cltd
mov
popf
imul
mov
add
les
hlt
add
cs
or
int3
xchg
scas
push
dec
cli
lea
icebp
jb
xchg
sbb
push
add
pop
cmpsb
in
dec
xchg
incl
cmpsb
mov
sbb
sbb
or
lods
pop
addr16
loope
outsb
add
xchg
xchg
xchg
mov
push
outsl
xor
push
jp
popf
add
xlat
mov
movb
cmp
rolb
jmp
cmc
out
inc
lcall
and
or
or
das
nop
leave
ret
ja
movb
push
cld
jecxz
test
inc
loop
sbb
jl
lea
mov
rcr
arpl
in
and
imul
dec
call
mov
add
loopne
int3
sarl
jmp
mov
mov
jg
xchg
mov
ja
add
add
popf
push
add
add
adc
aam
pop
adcb
add
outsl
movsl
push
jle
jge
pop
es
cmp
jbe
mov
jne
add
pop
fisubrs
and
adcb
loope
lea
pop
dec
rcrl
add
add
rcl
mov
adc
fs
lret
sub
add
add
call
add
insb
cmp
add
and
add
dec
xor
fdivr
xor
scas
sub
add
imulb
mov
add
add
or
js
ret
add
insl
cli
add
add
leave
inc
push
fdiv
pop
adc
add
int
nop
push
shlb
lock
dec
add
out
int3
inc
iret
add
adc
pushf
repz
add
lods
rolb
xor
xorl
sub
add
cmc
fs
movsb
pop
push
mov
rcll
jg
addb
mov
inc
pusha
sub
testl
add
mov
jle
out
je
addl
aad
xchg
ljmp
add
push
cmpsl
add
push
add
jl
outsl
and
mov
sar
add
mov
add
clc
adc
dec
mov
jle
fwait
dec
fadds
rcll
jecxz
out
ret
xchg
mov
ds
add
add
jno
pop
xchg
jmp
jp
cmp
jb
mov
filds
mov
loope
insb
adc
add
adc
jne
push
mov
push
push
mov
push
sahf
out
and
xchg
aas
add
insb
pop
stc
insb
inc
sub
xchg
push
add
lcall
loopne
pop
fsubl
sbb
jno
push
mov
add
dec
add
ljmp
das
iret
or
pop
fcomps
push
aad
in
pop
add
add
jp
jno
jmp
xchg
std
add
test
and
add
outsl
add
mov
jge
outsl
or
push
mov
jp
outsl
test
and
scas
lods
fnstcw
sub
movsl
mov
nop
xchg
scas
lahf
add
sub
xor
push
dec
add
rolb
push
add
out
lods
pop
testl
xor
jae
repz
aad
out
cli
or
add
lret
cmpsl
jae
jp
adc
ret
jp
pop
xchg
mov
xchg
push
imul
subb
jl
inc
inc
mov
insl
dec
dec
or
inc
testb
xor
dec
jle
jne
add
or
xchg
pop
add
outsb
ret
and
push
fs
inc
add
pop
xlat
jl
cmp
add
ret
inc
cwtl
sbb
repnz
into
jo
add
dec
stos
sti
cs
pop
add
sbb
ljmp
in
add
pusha
jl
cmp
fiadds
ds
aaa
jne
push
inc
in
cmpsl
xor
xor
cwtl
daa
mov
icebp
mov
fstpl
sbb
shll
insb
jno
jne
test
insl
pop
add
ljmp
mov
pushf
pop
adc
pop
pop
out
ret
lret
add
dec
add
data16
icebp
lea
pop
or
mov
decl
pop
stos
push
xchg
add
pusha
test
cmpsl
clc
ret
add
rclb
shrb
push
scas
fmull
jnp
xor
pop
mov
add
jmp
xor
sarb
aad
bound
pop
hlt
and
sub
sub
dec
adc
das
mov
dec
test
or
dec
mov
inc
loopne
pop
ljmp
pop
rolb
push
cmp
lods
inc
inc
movsb
add
xchg
adc
inc
js
shl
pop
add
mov
clc
pop
add
adc
add
inc
filds
fwait
add
sbb
mov
bound
inc
jb
lcall
xor
sub
not
test
testl
enter
lahf
add
sub
add
jno
adc
inc
mov
scas
pop
jae
sbb
inc
imull
xor
fcmove
push
add
cmpsb
add
sub
movsl
test
push
lods
jecxz
pop
mov
loop
mov
lret
jne
repnz
fistl
jnp
data16
add
mov
adc
sbb
adc
adc
hlt
adc
test
jg
xor
xchg
jb
out
or
sbb
push
aam
loopne
aaa
adc
mov
sbb
jae
mov
push
push
cld
clc
call
add
movsb
xor
inc
lods
movsl
add
insb
lcallw
mov
imul
xchg
ficomps
mov
jb
mov
loop
cmp
inc
cmpsb
loop
int
mov
jle
jb
aas
push
test
fwait
jmp
add
mov
mov
pop
mov
fistps
cmpsl
sub
fs
mov
xchg
hlt
push
aad
cmp
cmp
dec
push
into
jne
fdivrs
push
ja
sahf
nop
imul
dec
add
cmp
test
sub
icebp
out
in
cmp
inc
lds
add
andl
faddp
popf
sub
add
adc
adc
jae
jle
rorb
out
and
push
xchg
mov
scas
adc
push
add
push
pop
jecxz
pop
and
sbb
in
pop
jp
rcll
fldcw
sub
out
mov
dec
mov
add
popf
add
movsl
cmp
dec
fs
in
out
hlt
add
dec
add
sahf
out
jl
dec
mov
pusha
xchg
nop
dec
clc
add
add
cmp
and
add
rorb
add
jecxz
scas
push
push
or
in
xorb
add
add
icebp
add
xchg
add
or
add
nop
xchg
inc
std
scas
xlat
cmpsb
jbe
fadd
cs
insb
int
adc
std
xor
or
insl
sub
mov
pop
iret
movsl
fidivrl
add
add
scas
adc
sub
dec
jecxz
int3
scas
mov
insb
jo
add
mov
or
jno
jnp
and
lahf
in
stos
lahf
in
pop
enter
cmp
cmp
aam
pop
sub
mov
add
out
fldcw
stos
mov
xchg
and
sti
cs
lds
cmp
mov
shrl
sbb
sub
add
stc
std
scas
movsb
jle
jge
sti
add
or
scas
enter
adc
adc
lret
insb
add
gs
mov
push
adc
cmp
add
out
cmp
out
xchg
mov
add
add
or
mov
ret
das
sub
popf
xchg
add
movb
mov
lock
popa
test
and
cli
xchg
fucomip
stc
mov
pop
and
es
or
or
aas
popa
add
popa
stc
adc
xchg
adc
add
mov
repnz
and
cwtl
add
jecxz
dec
add
loopne
daa
mov
mov
outsb
loop
mov
lea
dec
inc
sbb
add
xor
inc
xchg
fdivs
popa
fsubrs
imul
cmpsl
push
movsb
add
enter
lds
or
sbb
push
jne
adc
mov
sub
lret
add
fidivs
push
cmpsb
rolb
xor
add
sub
push
stos
add
sub
sbb
add
jb
and
inc
daa
mov
fmuls
fsubrl
jb
sbb
cmp
add
cli
adc
addr16
mov
scas
add
cwtl
pavgw
cmp
div
shrl
adc
xor
jg
loope
hlt
or
aaa
add
jg
rcll
ficoml
pop
pop
rorb
push
test
push
adc
sub
dec
push
jnp
inc
sbb
add
gs
pop
fistps
jg
sbb
fildl
loop
push
push
jbe
push
enter
pop
lods
iret
sub
clc
jnp
add
xchg
add
xor
push
mul
mov
gs
fs
add
popa
xor
add
add
mov
cmpsb
pop
cmpsl
ret
jp
test
xor
mov
rorl
mov
shll
push
push
sub
sbb
mov
ficoms
dec
xchg
xchg
aad
add
jecxz
cmp
or
push
inc
imul
xor
mov
pop
sub
int3
xlat
enter
push
xchg
add
test
sbb
stos
dec
add
add
jns
outsb
and
sub
inc
cmp
repnz
int3
add
adc
add
add
add
ss
pop
out
lret
popl
scas
inc
adcl
inc
aaa
fwait
inc
add
and
push
dec
pop
add
push
inc
and
popf
or
imul
xchg
add
mov
mov
push
fisubl
add
mov
push
jmp
dec
cmp
out
jle
or
add
xor
das
dec
lea
das
cmpsb
rcll
cli
mov
movsl
xor
call
xor
add
jns
repnz
mov
add
ret
add
adc
rcl
aas
adcl
in
sub
mov
mov
out
xor
mov
es
sbb
inc
lea
mov
dec
fadds
mov
ljmp
jle
xor
inc
inc
add
rorl
xchg
add
add
jnp
or
shl
daa
and
je
in
inc
xor
pop
out
insl
add
lods
xchg
sahf
popa
or
xchg
xchg
pop
lret
adc
jge
xor
push
sub
int3
mov
xchg
mov
mov
enter
pop
pop
mov
fildl
inc
into
jmp
add
in
ror
scas
fmul
add
cmp
pop
jns
aad
sub
push
add
jo
loopne
xchg
pop
and
inc
fwait
loopne
sbb
adc
les
ljmp
add
hlt
mov
cli
popa
ds
xchg
xchg
cmp
scas
jl
mov
add
jg
loope
adcb
int3
sbb
aad
xchg
mov
pop
add
test
bound
mov
test
mov
jl
add
cmp
or
fcomps
or
or
fs
outsl
jo
add
sbb
pop
add
add
push
shl
data16
movsl
hlt
cmpsl
setae
dec
gs
cmp
clc
sub
or
addl
xchg
das
add
inc
sbb
out
lock
push
stc
fwait
movsl
or
clc
je
iret
and
int3
nop
adc
add
mov
xchg
mov
push
add
jle
mov
pop
pop
inc
es
cmp
cltd
mov
cwtl
add
mov
xlat
add
jmp
adc
sub
movsl
cmp
mov
push
mov
or
iret
ss
sbb
sub
inc
movsl
mov
adc
ret
add
add
fwait
dec
data16
or
lds
adc
xor
jo
add
dec
inc
mov
sbb
mov
add
lahf
mov
pop
jne
add
mov
mov
cmpsl
lahf
mull
mov
stos
xchg
int3
mov
sbb
push
inc
adc
imul
xchg
aad
in
adc
xor
push
add
cmp
add
int3
bound
jb
clc
mov
or
xchg
xor
add
call
fcmovnb
popa
add
shl
sahf
mov
out
lock
cmpsb
add
ss
xlat
cmpb
into
cmc
adc
mov
repz
imul
adc
sti
stos
jmp
call
aas
add
add
xchg
push
gs
add
pop
pushf
movsb
cltd
mov
adc
stos
pop
add
mov
lcall
sbb
add
add
xor
cltd
sub
jo
mov
lret
mov
mov
sbb
out
inc
test
add
add
jne
std
cmp
int3
add
mov
scas
xchg
lret
lds
movsb
paddq
add
test
add
or
into
popf
sbb
lock
arpl
push
jno
add
add
mov
ja
ja
sbb
pop
jg
stc
mov
aaa
fmul
icebp
add
lds
les
jnp
sub
loop
loopne
cld
xor
xor
bound
dec
xor
push
mov
in
push
sub
dec
dec
jnp
cmp
imul
xor
inc
jns,pn
cmpsb
shlb
xchg
int
push
clc
xor
sahf
add
test
std
stos
iret
add
aaa
pop
mov
cmp
jmp
cli
stos
add
adc
dec
enter
mov
aaa
stc
daa
int
lahf
cmp
fldt
mov
out
sbb
cmp
adc
sar
xchg
sbbl
repz
data16
jge
fsubrl
jne
lcall
iret
lret
add
xlat
stos
or
loopne
insl
jo
add
pop
cs
jns
jle
mov
jo
pop
out
adc
add
xchg
pop
xchg
in
mov
xchg
roll
pop
xor
add
ds
add
add
mov
insl
stos
lds
add
inc
sbb
sbb
cmp
stos
or
lea
mov
xchg
push
stos
push
in
sbb
inc
add
add
sbb
stos
adc
push
scas
aam
cwtl
loope
cmp
cltd
idivl
add
sub
outsb
cmpsb
or
mov
fwait
jmp
dec
add
pop
mov
scas
data16
add
lods
xor
add
mov
cld
add
jo
add
pusha
push
mov
push
cmp
push
or
xchg
inc
add
sub
lea
in
push
inc
aaa
add
xchg
stos
mov
add
js
hlt
sbb
add
pop
popa
add
fs
js
stos
push
pop
in
je
add
insb
push
stos
movsl
mov
shll
or
scas
filds
bound
fisttpl
push
shll
xor
mov
add
mov
add
iret
ret
adc
ja
mov
mov
int
sarl
dec
and
rolb
add
mov
test
xchg
push
pop
mov
loop
sub
stc
or
addb
and
aad
into
add
mov
pop
inc
aam
ljmp
jne
fcoms
fdiv
dec
mov
and
ret
xchg
inc
inc
push
add
enter
call
jmp
add
inc
push
add
cmp
cld
pop
mov
dec
mov
in
adc
test
add
inc
pop
adc
inc
sbb
push
sarl
cmp
test
xchg
aam
ucomiss
scas
inc
mov
pop
leave
je
data16
jno
pop
add
push
xor
movsl
ret
repz
pop
inc
add
cmp
mov
add
add
leave
add
sbb
mov
push
add
or
bnd
sub
xor
je
bound
push
mov
mov
andb
xchg
jbe
cld
leave
dec
dec
sub
xor
lock
cmpsl
xchg
dec
out
into
outsb
popf
rcll
lret
int
das
imul
loop
sbb
dec
adc
addb
out
lods
adc
das
mov
inc
push
scas
cmpsb
jno
pop
leave
nop
add
dec
test
jne
adc
gs
mov
repz
in
popf
sbb
cmpsl
pop
jle
xchg
ficoml
add
mov
cli
pushf
add
cltd
movsl
pop
shlb
xchg
sub
cmp
daa
lret
or
dec
adc
mov
sbb
imul
aad
inc
add
xchg
ret
lret
or
push
adc
or
mov
sub
stc
pop
jo
ds
dec
pop
aam
or
outsb
movsb
add
jecxz
add
je
mov
dec
xchg
cld
loope
add
ja
mov
addr16
add
jns
movsl
xlat
mov
lret
add
adc
jne
xlat
addl
dec
sti
xor
add
cmpsb
bound
in
adcl
mov
repnz
push
aam
pop
mov
pop
add
dec
add
mov
mov
outsb
pusha
dec
or
xor
cmp
in
test
roll
sbb
sbb
add
xchg
add
mov
mov
adc
mov
cmpsl
lahf
sub
je
pop
mov
xchg
mov
push
adc
push
out
mov
lds
loopne
loopne
pop
shrl
jae
hlt
lret
add
scas
mov
mov
mov
mov
popf
pop
xlat
add
repz
push
test
add
jno
add
out
dec
call
cli
pop
data16
iret
sahf
xor
add
dec
sti
and
into
push
out
jae
repnz
sti
sub
push
cltd
push
shrb
lea
add
cmp
fsubrl
jb
pop
je
cmpl
lcall
or
mov
cmpsb
pop
jne
bound
gs
dec
dec
jg
mov
mov
fmul
xor
inc
sbb
lds
insl
js
leave
and
add
lds
pop
sti
push
dec
inc
sbbl
add
pop
pop
mov
cmp
data16
adc
push
leave
mov
pop
movb
mov
sub
adc
dec
cld
mov
int
sbb
mov
push
mov
add
leave
or
cmp
or
movsb
cwtl
inc
adc
scas
and
jecxz
enter
loop
ret
pop
adc
in
ret
aad
ljmp
or
repz
jmp
xor
add
shlb
xor
push
mov
add
lret
mov
sbb
add
jb
icebp
in
dec
je
idivl
insl
adc
add
cmc
or
add
movsl
add
fnstsw
sbb
jnp
jnp
cmp
stc
mov
push
sbb
sahf
fstps
add
dec
xor
insl
loopne
les
dec
add
add
add
jnp
add
dec
aad
and
add
xor
dec
dec
cwtl
cmp
xchg
lret
sub
add
aas
ss
mov
pop
xchg
jo
cs
sbb
mov
push
pop
inc
push
int3
cmp
jle
out
pusha
sub
imul
lret
sub
cwtl
orl
cmp
cmp
sbb
push
ret
rcr
in
mov
add
sbb
dec
pop
adc
sbb
leave
rolb
xchg
mov
cmp
add
xchg
mov
add
add
add
pop
mov
and
in
add
adc
lret
add
sbb
pop
push
psubw
int
mov
mov
test
push
popl
dec
cmp
sbb
lcall
or
xchg
cmp
das
stc
dec
cmpl
xchg
xor
addr16
mov
popa
lcall
add
add
add
push
dec
add
das
mov
loope
in
mov
mov
adcl
push
sbb
test
jecxz
and
orb
fidivl
dec
arpl
lds
scas
sub
add
pushl
xchg
xor
std
sub
dec
pop
popf
mov
dec
ja
push
sbb
cmp
add
xor
lahf
xchg
aaa
add
rolb
mov
mov
add
loope
mov
add
add
cmp
pop
js
mov
fstpl
add
mov
out
dec
push
shlb
and
push
mov
xlat
add
sub
in
mov
insl
push
dec
inc
cwtl
int
aaa
mov
and
push
add
mov
and
inc
or
dec
mov
add
push
xor
data16
add
mov
test
pop
movsb
les
add
sub
push
lock
mov
or
jb
xor
ja
out
adc
movsb
dec
rol
out
iret
and
fdivl
push
push
pop
xor
add
push
aas
cltd
pop
js
inc
rolb
mov
add
push
add
add
loopne
sbb
and
or
cmpsl
sub
or
inc
cld
add
addr16
add
imul
add
mov
pop
ljmp
fbstp
add
inc
xchg
pop
jmp
add
pusha
setb
push
mov
pop
sub
add
test
addr16
stc
mov
mov
out
inc
add
bound
shrb
jb
sub
mov
and
and
mov
or
push
pop
or
adc
mov
out
or
nop
add
add
clc
outsb
mov
add
xchg
dec
popa
xchg
adc
or
push
push
dec
adc
add
and
fidivrs
int3
add
jno
pop
mov
mov
inc
scas
in
nop
jae
mov
xchg
add
inc
sbb
int3
out
adc
xchg
push
aas
stos
in
sahf
jmp
jg
ret
rorb
cmpxchg
bound
add
lret
in
outsl
insl
inc
sub
pop
cmp
mov
dec
sub
stc
add
jp
mov
jno
push
fisttps
jno
lock
sub
mov
xor
add
andb
in
ret
int
add
stos
into
inc
add
add
or
mov
mov
add
inc
lcall
or
inc
pusha
push
push
cmc
cltd
and
lds
or
lea
push
cmp
ret
jge
sbb
sbb
hlt
dec
sub
fldcw
fsubrs
insb
pushf
sbb
es
ficoml
add
lret
mov
outsb
aam
mov
xchg
inc
push
mov
adc
setge
xchg
inc
push
mov
loopne
xchg
or
mov
je
inc
add
add
add
ficoml
add
inc
add
aad
mov
scas
cmp
add
mov
add
aaa
and
sbb
add
add
mov
xor
jno
jge
out
pushf
cwtl
mov
repnz
mov
cwtl
jns
sub
jo
jg
cmp
adc
push
xchg
shll
pop
add
add
cmp
loop
jg
jnp
mov
sbb
and
or
dec
and
sbb
ret
mov
adc
sub
popf
jae
outsb
dec
or
in
inc
add
sbb
ret
or
pushf
pop
cmp
stc
inc
popa
add
lret
jno
pop
adc
repz
inc
fmull
insl
sub
jle
lcall
adc
add
cld
pop
add
mov
jo
fldl
mov
lahf
xor
pop
int3
pop
cwtl
sub
fildl
mov
or
pop
push
and
bound
add
ds
pushf
call
inc
mov
add
adc
lods
adc
ret
add
and
xor
out
push
shll
in
push
pop
les
add
pop
imulb
dec
add
add
mov
add
lea
push
shlb
push
add
inc
ret
cmc
cmp
sbb
out
aad
xrelease
inc
jb
sub
dec
push
pop
xchg
cmp
testb
add
fldt
mov
int
fisttps
jp
movsb
mov
ret
sarb
inc
add
test
nop
clc
inc
push
scas
dec
mov
add
or
mov
test
add
fxch
pushf
hlt
and
sbb
cmpsl
pop
xchg
dec
add
lods
mov
cmpsl
jle
decl
das
fisubrs
jb
and
adc
add
outsl
add
mov
jmp
dec
loope
scas
jle,pn
pop
jae
hlt
loop
test
fidivl
enter
arpl
aad
stos
leave
arpl
je
jno
and
lret
scas
stc
fdivrl
add
or
and
je
scas
movsl
dec
add
inc
add
stc
daa
addr16
leave
cmovo
mov
mov
fwait
pushf
xor
xchg
testb
push
scas
movsb
push
mov
sbb
mov
filds
jno
xor
stc
cli
in
leave
ss
add
hlt
add
icebp
iret
cmp
adc
push
popa
scas
aam
pop
push
fwait
sub
add
add
movsb
add
add
sub
pop
mov
ljmp
adc
test
movsb
jbe
lret
cmp
sbb
add
add
sbb
pop
cmp
add
sbb
or
mov
pop
iret
getsec
test
cmp
ret
and
pop
clc
sub
add
xor
cltd
in
add
int
gs
add
cmc
push
mov
sbb
lds
fs
jg
test
inc
jecxz
int
lcall
daa
call
lcall
xor
mov
pop
sub
mov
add
push
out
scas
enter
int
cmc
mov
add
mov
lret
and
cmp
subb
add
ret
push
adc
ljmp
movsb
dec
push
add
jns
jp
xlat
xor
add
pop
add
push
lret
iret
add
or
mov
clc
incl
sub
faddl
bnd
mov
imul
cmp
inc
fwait
adc
xchg
ds
gs
or
mov
das
std
inc
or
add
xor
inc
repz
into
or
jp
mov
mov
jl
test
pop
sbb
inc
adc
add
xchg
lock
fdivrs
call
popa
popf
sub
sub
sub
call
push
loop
movsb
inc
out
enter
addr16
addl
cmpsl
out
adc
iret
and
mov
test
sarb
int3
test
or
movsl
addb
test
test
add
jle
jns
xor
aad
xor
scas
into
add
mov
and
xchg
add
lock
push
cmp
mov
dec
ror
and
ja,pt
inc
add
add
add
jecxz
negl
add
mov
inc
lods
cli
arpl
and
adc
out
sbb
jmp
xchg
scas
add
loop
dec
cmp
inc
out
and
xorb
mov
add
xor
add
cmpsl
into
cmp
add
add
dec
movsl
mov
mov
xlat
and
in
push
add
cmp
popf
data16
add
iret
cltd
add
aaa
push
add
ficompl
jno
add
fsubl
add
out
push
xor
mov
jmp
sbb
mov
adc
sbb
fdivrs
outsb
and
add
add
sub
push
mov
add
add
dec
mov
inc
data16
push
loopne
xchg
shlb
jns
add
stos
xor
dec
fnstsw
push
add
outsb
push
jno
out
mov
xor
aaa
ss
stos
cmp
xor
xlat
push
add
int
mov
aaa
js
stc
push
inc
movsb
xchg
mov
xchg
add
psubusw
ret
sbb
mov
icebp
addb
or
lcall
aas
lcall
sbb
pusha
add
nop
push
scas
cmpsb
cmc
sbb
fildl
pop
add
sbb
popf
popf
jo
cmpsl
out
movsb
add
jo
cltd
and
ss
fimuls
pop
push
iret
fldenv
call
das
mov
add
dec
jns
aad
add
shlb
push
add
das
add
mov
mov
out
push
sbb
mov
ficoml
pop
clc
fcom
push
roll
and
repz
mov
or
out
into
add
imul
inc
xchg
pop
mov
cwtl
nop
pop
fiadds
push
pop
fcomps
jnp
clc
jbe
pop
test
ss
xor
stos
jo
inc
loope
sbb
adc
pusha
add
arpl
je
adc
rclb
dec
dec
add
add
adc
push
pop
mov
and
mov
add
out
add
add
xchg
add
loope
cli
fsubrp
add
scas
sbb
dec
add
repnz
add
add
add
sub
iret
dec
add
add
cld
adc
fistpl
xor
mov
dec
mov
cltd
aas
inc
test
js
lret
es
xor
sub
pop
pop
add
add
add
jl
ficoms
adc
mov
add
popf
xchg
pop
push
scas
mov
frstpm(287
clc
add
cmpsl
repnz
out
sub
xor
insl
push
hlt
sub
cmc
xchg
add
stos
cmp
cli
aad
push
push
pusha
push
adc
loope
or
mov
repz
pop
mov
or
or
sbb
and
repnz
hlt
push
rolb
mov
pop
loope
mov
mov
add
out
filds
mov
mov
pop
dec
xchg
add
pop
sti
cmp
jp
pop
push
add
add
aaa
sbb
shr
sbb
cmp
pop
daa
call
pop
push
sbb
add
pop
adc
add
sarb
add
shlb
dec
adc
inc
lea
push
push
jbe
add
add
push
xor
clc
stc
sub
sbb
vxorps
js
fildll
into
add
or
mov
jge
mov
push
fsubl
mov
movsb
cmp
pop
jb
repz
mov
jb
roll
sbb
cs
sbb
and
add
and
and
pop
or
les
push
and
aam
sub
cltd
or
mov
lds
mov
add
fcmove
add
jb
pop
add
add
hlt
lcall
cli
cmp
mov
testl
mov
xlat
and
movsl
in
sub
iret
push
cmc
add
mov
inc
out
int3
imul
shll
mov
mov
test
ss
aam
push
lods
or
mov
sarb
mov
ret
jl
add
decl
sub
mov
shrb
int
add
jo
adc
fnsave
mulb
cltd
stos
ret
cmp
and
in
cmpsl
mov
cmp
es
jo
mov
xor
out
push
mov
sbb
pop
and
gs
inc
scas
push
popa
add
popa
add
mov
xchg
add
ja
pop
leave
dec
popa
test
xorl
add
mov
pop
cmp
cmp
cwtl
add
and
mov
jbe
lods
add
outsl
mov
add
sbb
jnp
add
adc
jo
and
mov
jp
pop
andb
popf
add
pop
dec
stc
mov
rclb
cmp
xchg
adc
daa
jle
cmp
add
sub
int3
sbb
cmpsb
or
add
jp
push
lcall
cmp
xor
pop
mov
fs
cmp
fptan
hlt
rolb
mov
mov
add
popf
loope
mov
int3
test
xor
hlt
add
cmp
in
xchg
add
ds
mov
testb
or
add
add
push
jmp
mov
ficoms
gs
mov
jo
arpl
imul
jl
aad
add
add
scas
stos
pop
mov
ljmp
and
sahf
stos
push
cmpsb
add
pop
ljmp
in
movsl
push
std
test
cmp
mov
add
and
scas
negl
testb
sub
lahf
and
push
daa
cld
push
mov
sar
clc
sub
add
popf
bound
std
sbb
and
jne
mov
fs
add
repz
popa
push
mov
or
insl
sbb
dec
add
add
dec
sbb
mov
cmp
jp
jp
adc
jl
clc
cmpsl
fiaddl
ljmp
lret
add
xlat
pop
cwtl
daa
add
add
add
jbe
je
icebp
subl
mov
cmp
xor
jle
add
dec
movsl
es
fwait
add
mov
pop
push
add
adc
sub
push
inc
lock
fstpt
push
push
push
jne
adc
idivb
out
push
xor
or
es
push
es
sub
xor
mov
iret
add
ss
stc
mov
mov
call
jmp
push
sub
inc
add
xor
shlb
cwtl
test
arpl
imul
mov
es
out
adc
lods
add
pushf
call
add
mul
push
and
add
nop
pusha
sbb
xchg
mov
sub
imul
push
push
movsb
add
enter
pop
add
push
cltd
inc
mov
hlt
or
bound
leave
fildl
mov
dec
rorb
aam
add
push
add
cmp
mov
stc
je
repz
add
in
insb
add
xor
add
xchg
dec
dec
mov
and
xchg
fwait
xchg
mov
lahf
push
mov
xchg
push
outsl
adc
sarl
nop
inc
jge
enter
jg
push
add
mov
stos
cmp
adc
jae
or
xchg
add
loop
ret
ja
push
xor
sub
hlt
cmp
add
je
fucomi
and
cs
add
fsts
xchg
xchg
cmp
cmp
js
mov
gs
mov
jge
and
push
jno
jae
and
aad
pop
add
cmp
out
add
xlat
mov
pop
jnp
add
popa
jno
movsb
cmp
out
pop
sub
push
mov
scas
insl
int3
add
shrb
sbb
or
int
cmpsl
lds
je
and
add
arpl
or
ds
les
mov
cs
bound
xor
mov
ret
xchg
jne
sbb
cmp
add
xchg
fiaddl
popf
in
pop
add
decb
jb
cmpsl
sti
iret
jle
and
call
inc
mov
fcmovu
push
jecxz
jg
sub
cmp
push
sbb
or
mov
add
push
sar
adc
add
mov
and
mov
mov
mov
loope
shr
mov
add
into
into
xor
fwait
cmpsl
xchg
loope
adc
test
cld
add
add
adc
xchg
push
add
daa
mov
add
mov
insl
aaa
cmpsb
dec
sbb
xchg
and
stos
mov
cmp
inc
xchg
jmp
add
outsb
cmp
sbb
pop
rolb
jae
xor
add
pop
xchg
into
pop
stos
int
ret
pop
add
test
mov
push
or
push
imul
mov
scas
pop
sub
push
xchg
add
fucomip
mov
lods
sar
cmpsb
inc
add
cmp
in
ljmp
mov
pushl
andl
add
push
pop
push
mov
jno
pop
out
dec
xchg
into
add
xchg
pop
movsb
sub
hlt
or
pop
rcrl
aam
add
in
dec
ret
inc
imul
gs
push
arpl
add
dec
movsb
mov
outsl
add
add
add
loope
add
aad
add
sub
pusha
add
and
push
rcrb
sub
xchg
and
ja
in
xor
jmp
rcrl
push
outsb
flds
push
ljmp
jo
ret
or
adc
xchg
popl
pop
ja
insl
push
cmp
push
add
pop
fsubrl
xor
pop
bound
adc
fisttpll
add
popa
mov
dec
out
stos
add
cmp
test
add
gs
test
mov
aam
aam
xchg
add
xor
fcmovnb
lock
les
add
mov
and
pop
add
add
pop
add
add
pop
add
sarl
push
xor
xor
mov
mov
test
aad
add
add
push
push
add
popf
cmp
lret
xchg
cmpsb
jge
inc
out
pushf
jnp
push
add
xor
push
add
push
mov
xlat
lcall
jae
add
iret
add
push
incl
mov
lea
loop
outsb
add
mov
insb
fwait
repz
push
pop
jmp
or
fcomps
or
arpl
scas
cmp
jnp
mov
outsl
jbe
cmc
xchg
add
fistl
pop
movsl
mov
and
insl
push
push
js
push
std
and
cmpsb
fidivrs
add
add
sub
jl
inc
faddl
ja,pn
int
lock
pop
push
mov
pop
rclb
sbb
add
jne
lcall
ret
adc
and
mov
cmpsb
outsb
cwtl
mov
inc
clc
add
add
mov
cmp
add
fildl
or
add
inc
pop
idivb
dec
cli
popf
pop
fsubrs
xchg
dec
push
ljmp
dec
int3
out
movsb
add
pop
ret
xchg
add
movsl
fld
ds
mov
mov
das
clc
scas
push
data16
mov
cmp
xor
mov
add
sub
xchg
jns
or
test
add
xlat
push
mov
data16
jg
es
out
popa
adc
pop
xor
add
jp
and
xor
repnz
stos
add
aas
mov
cmc
sbb
sbb
jo
pop
in
push
push
xchg
ret
adc
mov
add
insb
lods
arpl
shlb
cmp
add
mov
popa
dec
popa
into
mov
out
mov
mov
int3
loop
fnstsw
xchg
sbb
add
push
add
fistl
push
inc
jle
in
xlat
jg
les
sahf
in
das
sbb
xor
test
adc
add
fs
sub
add
out
inc
sbbl
les
sub
jecxz
loope
lea
int3
popa
sbb
jge
out
es
or
or
ljmp
js
add
in
jp
pushf
dec
dec
mov
data16
add
cmp
movsb
add
mov
fwait
lods
and
inc
add
add
push
cmpsl
ret
lcall
push
subl
add
sbb
jno
xor
pop
arpl
hlt
jl
shll
je
dec
inc
scas
add
data16
data16
lods
icebp
push
scas
lods
add
add
mov
out
movsl
maxps
mov
ja
adc
imul
hlt
add
data16
jnp
add
sub
add
ret
adc
pop
mov
xchg
and
add
pop
push
cmpsl
add
ja
cmpsl
add
add
adc
sub
ss
gs
xor
and
inc
add
int
and
imul
add
mov
jo
push
lcall
mov
sub
pop
in
push
call
push
lds
jl
cmpsb
loope
or
pop
add
scas
jp
cmp
pop
jbe
mov
int3
rorl
mov
and
push
fwait
xor
xchg
xlat
aam
ret
sbb
inc
testl
jb
lret
mov
out
mov
mul
adc
popa
add
and
cmp
push
test
jecxz
xchg
jle
xchg
lock
adc
fs
aam
ja
mov
shl
cwtl
sub
addr16
aas
jl
add
add
pop
divb
pop
addl
sub
mov
cli
mov
arpl
jge
add
pop
jl
adc
fcomp
ljmp
nop
push
sub
add
sahf
xor
xchg
test
xor
adc
sub
adc
stc
stos
inc
das
pop
sbb
nop
mov
push
scas
add
popf
adc
rcll
ds
mov
xor
push
mov
xor
xor
adcl
or
and
cmp
and
sub
ret
mov
pop
add
add
cwtl
les
xchg
pop
jns
je
mov
xchg
int
int
jg
xorb
leave
popf
fistpll
add
insl
es
insb
sub
jmp
pop
ret
mov
das
adc
mov
xor
sahf
add
dec
jne
xchg
add
das
xor
daa
pop
add
out
jle
test
pop
mov
xchg
je
xchg
cld
or
clc
add
insb
mov
add
ljmp
sub
and
inc
add
pusha
add
pop
aas
fs
add
mov
add
data16
or
fildl
dec
scas
sbb
cli
adc
inc
shrb
sub
in
int
insl
shlb
adc
xchg
mov
cmp
cmp
incb
sbb
mov
jle
jg
or
add
orl
sbb
xchg
sbb
pop
fsts
add
les
mov
lcall
add
jmp
dec
movl
pop
gs
scas
dec
cmp
add
in
jmp
push
or
xlat
xor
leave
add
inc
mov
repz
cmpsl
adc
fstpt
aaa
or
loop
sahf
add
jbe
pushf
mov
add
or
ret
cli
add
add
xor
or
mov
stc
add
lods
inc
xchg
frstor
adc
lret
adc
mov
pop
xor
popa
testb
sti
popf
pusha
mov
fbstp
movsb
and
add
lldt
cmp
xor
add
adc
pop
js
pop
cmpsb
je
inc
ret
add
cltd
loopne
ficoml
add
call
pushf
sub
insb
cwtl
jp
int3
ljmp
jbe
sahf
push
stos
or
loopne
mov
mov
sub
sti
xchg
jae
aam
add
iret
add
push
test
or
and
add
sbb
mov
maxps
xchg
mov
cmp
cmpsl
jae
cmc
xor
and
lods
mov
add
mov
mov
leave
outsl
jne
jb
push
shll
mov
mov
jle
and
fcmove
xchg
cli
mov
add
add
xor
push
pusha
mov
push
outsb
out
add
and
dec
add
pop
add
mov
cli
and
cld
testl
mov
jnp
pop
fsubl
add
fstl
sbb
add
inc
pop
cwtl
xor
adc
pop
or
add
add
and
add
adc
xor
ret
mov
mov
lret
mov
incl
jbe
jbe
xchg
push
aad
add
inc
xchg
aam
add
or
and
dec
bound
adc
cltd
test
push
das
xor
push
lret
and
or
int
mov
mov
cld
push
and
aad
ret
clc
test
jns
jo
testl
into
jae
and
mov
fdivr
cmp
dec
add
xchg
in
pop
test
add
or
sub
incb
add
mov
xor
leave
adc
xlat
adc
iret
add
jmp
add
dec
push
lods
xchg
ljmp
loop
add
add
sahf
rcrb
daa
test
jmp
imul
and
les
add
mov
icebp
imul
mov
jno
popa
sar
into
jae
xchg
insl
dec
add
loope
mov
sub
divb
pop
pop
xchg
outsl
loope
inc
mov
cmpsb
add
scas
lock
mov
add
repnz
out
aad
faddp
cld
push
repz
insb
stos
and
mov
sbb
add
repz
add
jle
sbb
add
mov
cmp
push
fdivs
fs
enter
or
pop
jb
xor
pop
push
xchg
jp
add
stc
icebp
int
movsl
ljmp
mov
add
imull
jae
add
add
cmp
loope
test
dec
mov
mov
aad
push
add
sub
jmp
xchg
inc
sub
enter
subb
loopne
out
jb
mov
nop
add
scas
push
lret
mov
add
push
std
pop
mov
pushf
push
cmp
inc
popf
aas
mov
pushf
pop
xchg
lea
xchg
repz
fidivl
sub
mov
and
inc
dec
mov
jecxz
jl
mov
push
je
test
add
xchg
add
dec
icebp
lods
addr16
pop
xor
inc
scas
pop
add
mov
xchg
jmp
gs
dec
xchg
je
cs
cmp
mov
add
add
push
sub
rorl
xchg
sub
xchg
xchg
inc
push
fs
test
cmp
jb
jbe
xchg
adc
add
adc
stos
and
aad
in
iret
insl
xlat
mov
add
add
xchg
fs
add
dec
cmp
add
xlat
div
das
loop
pop
xor
pushf
add
mov
push
mov
and
add
shll
xor
scas
pop
xchg
fcoms
or
add
dec
fcmovne
dec
insb
mov
inc
in
pusha
add
jae
dec
subb
mov
scas
rcr
ljmp
cmpl
mov
jge
push
loope
mov
push
add
dec
adc
xchg
inc
movsb
subb
add
add
push
lcall
lds
cmc
and
out
cmp
sub
rolb
add
and
lea
std
sti
pop
xor
outsl
xchg
scas
std
xor
out
nop
scas
cwtl
cwtl
xchg
inc
pop
dec
add
add
ret
mov
daa
clc
sub
add
xor
hlt
add
jge
add
shll
jo
or
lahf
xlat
add
sub
pop
push
cltd
xchg
mov
mov
mov
fs
add
add
cmp
push
xchg
sbbb
in
ljmp
aam
sbb
popa
fcoml
xchg
jecxz
jge
pop
fisubs
gs
fildl
sbb
in
into
add
mov
insl
fstps
push
loope
jne
test
fwait
xchg
xor
scas
add
bound
mov
lahf
shr
pop
jecxz
sub
sub
pop
cli
mov
lods
mov
incb
add
cs
jmp
cmp
js
stc
and
faddl
push
dec
stos
sub
insl
pop
movnti
fisubrs
lret
mov
inc
cmp
aaa
repnz
mov
in
xor
add
add
mov
push
push
inc
sarl
gs
mov
pop
gs
rcrb
stos
and
aad
ljmp
je
leave
inc
or
push
and
and
sub
in
xchg
arpl
scas
ljmp
dec
aas
mov
add
xor
mov
cmpb
add
ja
sti
pop
pop
ds
mov
add
lds
call
es
add
pop
lret
shll
loopne
cs
sbb
aad
or
inc
add
mov
add
dec
scas
mov
xor
fwait
rol
mov
pushf
add
pop
mov
inc
fwait
inc
add
or
idivl
adc
rorb
fisubrs
mov
dec
loope
shlb
test
ja
push
das
fcom
dec
and
sbb
loopne
pusha
mov
js
mov
sub
inc
mulb
outsb
out
jae
push
jmp
cmp
pop
pextrw
pop
cmp
push
mov
loopne
in
inc
add
mov
test
ljmp
jnp
sub
jbe
or
mov
mov
mov
push
mov
pop
cmp
movsb
pop
add
nop
cmpxchg
jl
xor
xchg
jnp
mov
mov
inc
dec
aad
cmpsb
mov
in
add
jns
jbe
jle
jmp
cmpsl
mov
sub
sbbl
mov
mov
add
rolb
sbb
ss
fiaddl
sbb
lds
pop
inc
pop
js
jae
stc
add
pop
adc
lret
por
push
add
ret
xor
push
popf
in
out
js
pop
jecxz
add
fs
lods
sub
mov
out
add
mov
jbe
add
jo
cmp
dec
mov
add
mov
stc
cmp
jl
fcomp
fistl
es
out
add
inc
jp
cmpsb
ss
pop
add
aam
aad
das
and
and
and
add
fimuls
cltd
scas
adc
jmp
cmc
mov
cmp
xchg
cmpb
pusha
xor
jmp
or
and
in
add
cmp
int3
addl
xor
jbe
cmp
and
hlt
and
rcr
inc
add
test
and
lret
loope
bound
mov
aas
inc
icebp
ljmp
push
in
sbb
add
popf
mov
cmc
das
daa
push
add
mov
inc
push
cmp
and
adc
movsl
xor
add
arpl
add
jno
dec
jae
flds
add
ret
ja
xchg
sbb
jno
dec
xchg
and
popa
add
xchg
jne
pop
int
lock
insb
mov
push
mov
std
js
mov
scas
fwait
jae
arpl
jns
std
sub
fcmovbe
cli
std
add
rorl
add
sbb
lahf
xchg
in
mov
and
add
jnp
mov
mov
lds
or
divb
add
movb
mov
imul
test
nop
shll
add
repnz
enter
icebp
ret
sub
add
cmp
sub
add
add
adc
mov
aas
outsb
mov
push
vcvttpd2dqy
in
add
pop
dec
inc
movsb
add
repnz
fs
dec
add
push
push
jp
or
or
scas
xor
add
imul
or
or
xor
mov
sbb
aaa
scas
mov
bound
iret
push
mov
xor
ds
xor
add
xor
stc
push
push
or
add
pop
add
inc
add
add
add
jno
cmp
pop
add
mov
movsb
scas
sbb
loope
add
arpl
scas
lea
sub
imul
addr16
and
add
test
xchg
pop
push
mov
rcr
je
mov
stos
add
sbb
adc
aas
add
ja
xor
popa
cmc
shlb
cmp
or
andb
inc
mov
add
add
mov
es
push
push
xor
jbe
add
stos
out
outsb
add
repz
mov
gs
dec
addr16
lahf
sarl
cmpsb
lods
int
je
add
mov
popa
push
jge
cmc
push
push
ret
pop
imul
mov
pop
add
aas
jmp
cmp
xchg
inc
xchg
add
and
ds
add
mov
fiaddl
push
or
add
and
add
add
cmp
fisubl
jae
mov
dec
xor
push
daa
int3
or
mov
jo
mov
dec
add
pop
or
mov
icebp
enter
insb
cmp
ljmp
scas
sbb
movb
adc
xor
arpl
push
mov
add
mov
xchg
jo
pop
mov
cltd
ljmp
jo
add
test
adc
xor
or
or
adc
into
gs
jmp
out
sub
dec
adc
jmp
jge
add
add
add
rolb
add
gs
xchg
testb
mov
mov
fucomi
dec
mov
or
pop
pop
or
pop
or
fdivs
add
fldenv
fsubrs
pop
cltd
adc
pop
pop
fcoms
inc
pushf
add
in
or
arpl
roll
add
fldcw
test
sub
pop
push
lcall
add
mov
fisttps
mov
add
ja
mov
push
add
lock
xchg
xor
push
out
test
ds
out
mov
add
add
add
lea
out
xchg
jnp
or
add
add
adc
jne
or
cltd
mov
add
cmp
lcall
mov
add
aam
enter
aas
add
in
jb
cmp
add
cmp
push
add
and
pop
data16
xchg
pushf
add
jnp
pop
mov
mov
pop
fwait
jae
shrb
js
dec
push
mov
out
or
sub
loope
movups
out
flds
sub
pusha
and
push
sbb
cmp
lret
rolb
leave
mov
movb
aam
xor
add
rorl
xchg
leave
es
jl
fs
cwtl
scas
jg
mov
push
cmp
sbb
arpl
dec
idiv
sbb
xor
pop
adc
cli
cmp
pop
inc
cmp
mov
bound
mov
fadds
push
push
jl
insb
push
push
add
xchg
cmpsl
std
sbb
xor
cmp
sub
scas
push
or
lods
out
movsl
mov
sbb
jge
and
loope
fbld
pop
cmp
lret
out
scas
sbb
or
ret
test
push
pushf
sti
outsb
addb
adc
out
pop
add
lods
inc
out
in
imul
es
stc
add
jae
das
orb
das
out
dec
je,pn
jbe
jecxz
xlat
aas
lods
xor
jge
ret
lds
adc
sub
add
and
add
jmp
pop
adc
push
or
or
movb
mul
add
cmpsl
cmp
dec
mov
jnp
or
les
mov
ss
push
inc
lods
sub
pop
popf
jo
mov
int3
nop
sbb
push
lret
cmpsl
push
cmp
inc
cld
add
int3
ljmp
arpl
jnp
roll
in
jnp
and
mov
dec
data16
add
movsl
add
dec
add
push
in
add
jecxz
outsl
call
in
cld
clc
add
or
into
inc
add
test
loopne
mov
or
cmpsb
and
out
xor
dec
mov
loopne
xor
mov
add
add
xchg
mov
and
push
push
test
adc
ljmp
sub
dec
sub
scas
dec
add
pushf
mov
mov
jg
scas
or
shlb
add
cmp
xchg
mov
aad
fmuls
xchg
addr16
add
jnp
push
lods
je
outsl
add
sub
imul
add
aam
lret
xor
popf
xor
out
int3
mov
mov
lea
adc
jmp
addb
fsts
lea
outsb
inc
xor
add
sbb
add
xchg
bound
mov
and
das
mov
sar
add
add
add
data16
mov
xor
mull
push
and
add
push
push
fdiv
add
test
mov
mov
dec
mov
add
sbb
mov
pusha
cmp
decl
subb
leave
push
sbb
es
sbb
lds
xchg
flds
and
daa
add
jb
adc
adc
scas
cs
aam
xor
jno
add
inc
in
mov
daa
mov
fwait
push
out
es
lret
pop
add
fisttpll
stos
lahf
pop
add
push
push
mov
stos
mov
aas
mov
add
mov
pop
add
mov
incl
ss
and
mov
add
aaa
pop
cld
dec
push
jb
sub
adc
add
faddp
push
jle
gs
ror
stos
cmp
jne
jg
add
or
or
add
in
rorb
imul
repz
xor
add
fimuls
add
add
pop
shrl
sub
loopne
add
cmpsb
lock
pop
mov
pop
add
in
je
sbb
add
sbb
scas
insb
mov
addr16
ljmp
cmpsb
push
cmp
sub
add
push
adc
ja
into
push
mov
arpl
push
loope
push
out
push
mov
mov
add
sti
add
and
call
inc
bound
push
xor
xor
les
ja
jno
adc
inc
fiadds
push
add
sub
and
sbb
pop
adc
push
or
shl
ret
iret
movsb
dec
lods
push
jg
xchg
fsubr
lret
or
ds
xchg
sbb
sbb
stos
sub
add
test
sahf
sbb
ret
mov
jnp
cmp
sbb
add
js
cli
in
push
dec
jge
mov
xor
mov
jmp
xchg
dec
push
xchg
mov
pusha
mov
pop
mov
xchg
outsb
cltd
sbb
sub
pop
test
lcall
fld
je
addr16
popf
mov
cmpsl
loopne
outsl
add
sbb
and
mov
pushf
mov
popa
adc
sbb
ret
jbe
push
lds
sbbl
dec
stc
adc
add
add
loop
dec
ljmp
daa
add
lret
and
dec
ds
loopne
add
mov
xor
push
in
xor
jge
add
jo
movsl
cmpl
adc
insb
add
cs
pop
jbe
rolb
dec
push
inc
and
gs
lods
sahf
add
xchg
xor
add
movsb
add
popa
fisubrl
push
clc
out
pusha
ret
pop
roll
lahf
imull
cmp
loope
jge
popf
push
or
inc
sbb
sbb
add
outsb
dec
mov
pop
cmpsb
adc
sub
lea
stos
mov
data16
mov
add
sub
es
or
adc
jb
jmp
repnz
shr
adc
push
insl
fisttps
cmp
or
rcrb
xchg
mulb
leave
jecxz
aam
test
pop
js
pop
ret
push
add
cmp
fwait
or
in
mov
mov
test
into
pushf
cmpsl
cmp
fcoml
mov
pop
adc
leave
mov
jp
add
mov
and
inc
es
mov
enter
add
dec
add
mov
iret
xor
icebp
add
mov
fstl
add
sub
push
xor
daa
add
aad
test
aad
in
loopne
adcb
sub
adc
add
add
sarb
mov
hlt
dec
pop
jne
push
dec
aas
inc
ficompl
cltd
add
jmp
clc
test
jno
cmp
xchg
add
push
lahf
lea
movsl
add
jae
aam
jmp
lea
jmp
xchg
sbb
and
cmp
add
push
sub
sbb
mov
add
adc
mov
push
add
in
cld
add
movsl
enter
test
mov
gs
mov
je
add
jp
stos
add
lock
testl
shl
insl
lock
frstor
dec
xchg
shll
test
inc
inc
jmp
or
sbb
mov
mov
jae
rolb
cmpsb
and
add
cmp
add
add
dec
shll
or
out
mov
adc
push
adc
push
subl
jle
cmp
add
add
fiaddl
sbb
push
lods
es
or
dec
add
inc
xchg
add
wrmsr
mov
lret
add
mov
in
add
add
pop
jmp
add
add
out
and
inc
sahf
pop
xor
mov
add
cmp
arpl
mov
push
fiadds
aam
shlb
jge
add
push
sub
sub
push
mov
div
rorb
scas
pop
xor
add
gs
push
movsl
add
add
les
add
dec
ret
jge
push
sub
addl
add
inc
out
and
cmp
loop
add
sti
and
pop
ljmp
add
add
add
in
es
hlt
aas
cmpsb
jge
push
popa
add
repz
in
in
pop
add
les
add
repz
add
pop
xor
sub
in
or
adc
aam
out
ret
sbb
cmp
push
jnp
scas
add
or
ret
popa
rorl
cmp
inc
add
fwait
mov
xchg
aam
add
sbb
xchg
out
cwtl
push
fisubs
cwtl
add
xor
mov
push
inc
gs
ss
hlt
inc
out
jmp
loop
push
popa
filds
pushf
shl
mov
sub
mov
imul
lret
push
push
repz
insl
iret
pop
pop
push
mov
shlb
fwait
pop
adc
in
ds
adc
push
lahf
xor
push
mov
lret
fidivl
cmp
mov
dec
cmp
or
and
jne
xor
rolb
stos
cmc
call
add
inc
push
cmp
add
pop
xchg
out
jmp
std
mov
adc
jecxz
sbb
cli
xor
or
pop
out
dec
sbb
sub
add
and
sbb
dec
cmp
fcoml
add
cmp
cs
push
mov
push
xor
add
xor
ljmp
or
lcall
cmp
and
add
shrb
insb
add
xchg
cmp
add
mov
push
push
jb
xchg
add
mulb
insl
and
test
fwait
cli
add
add
jbe
bound
insl
and
ds
sub
jnp
ffree
add
iret
jnp
adc
inc
sbb
jbe
jp
loope
fld
les
mov
add
insl
aas
ja
adc
and
insb
add
jmp
add
scas
and
leave
push
mov
cmp
and
dec
enter
repz
or
inc
pushf
repnz
jmp
mov
cmp
fucom
out
test
push
scas
add
stc
push
dec
add
add
popl
ljmp
test
aas
je
xor
idiv
ret
pop
ret
add
xchg
test
ljmp
mov
cmpsb
pop
movsl
out
and
mov
xchg
and
push
mov
sub
add
js
rorl
movsl
add
rep
mov
dec
and
ss
sti
fwait
cmp
mov
pop
divl
jge,pt
and
mov
pop
mov
xchg
rcll
dec
add
rolb
mov
and
gs
push
cmp
pop
add
xchg
pop
add
jge
into
add
add
imul
iret
arpl
pop
xchg
ja
frstor
xchg
and
add
add
add
add
repnz
scas
xor
fadds
daa
add
mov
fdivrp
mov
and
dec
cld
stos
dec
ljmp
sahf
xchg
aam
add
or
addr16
sbb
js
add
add
mov
mov
add
test
imul
add
push
adc
xchg
test
mov
jmp
inc
test
int3
jnp
jmp
inc
sbb
sub
jae
mov
cwtl
pop
pop
scas
sub
adc
test
mul
cmp
addr16
add
pop
add
out
in
or
mov
and
insl
cmpsl
int
add
pop
pushf
xor
mov
or
pop
add
xlat
inc
jno
aad
jns
repz
xchg
mov
add
pushf
sbb
lret
push
mov
mov
adc
xorb
mov
xor
loopne
add
xchg
mov
dec
add
pop
mov
add
pushf
add
enter
arpl
les
stos
jge
add
sbb
adc
fcompl
repz
mov
jns
inc
add
lds
jle
add
in
jg
add
outsl
mov
mov
xchg
push
ret
jno
mov
pop
mov
loop
sbb
addl
or
out
and
shrb
cmpsb
or
xor
add
in
and
mov
push
add
sub
pop
bound
xchg
mov
inc
scas
sub
push
shll
iret
stos
rolb
push
add
dec
outsb
inc
dec
test
add
out
or
in
add
sub
mov
rolb
fcoms
es
fwait
pop
jge
and
stos
push
int
cwtl
add
xchg
not
das
inc
js
mov
sbb
cmp
xchg
sahf
mov
jp
movsb
mov
arpl
in
add
sbb
fdivrp
dec
dec
inc
imul
out
mov
icebp
inc
lret
mov
mov
mov
xchg
int3
mul
add
cld
xor
pop
femms
lcall
add
ffreep
mov
ficoms
je
sub
xchg
mov
shlb
jmp
add
mov
adc
and
les
mov
cmpsb
xor
or
cmp
pop
inc
rclb
aam
jno
sub
div
inc
mov
mov
xor
mov
mov
pop
add
push
pusha
popl
sahf
push
mov
cmp
dec
aam
in
add
rol
inc
push
add
pop
add
xchg
lods
jnp
mov
inc
fiadds
shlb
adc
pop
les
aas
loop
pop
aam
dec
repz
mov
add
inc
mov
xchg
fidivrs
jle
add
pop
adc
mov
jg
mov
jl
xchg
push
insb
stc
push
sub
and
nop
aam
jmp
add
pop
xor
mov
jno
fimull
sar
add
std
out
enter
sbb
out
pop
push
ret
or
data16
fmull
add
xor
xor
jecxz
sbb
jg
out
clc
mov
xlat
xchg
in
ret
pop
jecxz
roll
out
add
mov
test
add
sarb
adcb
fnsave
mov
add
sub
or
in
xchg
les
loope
inc
movb
dec
mov
sahf
add
pop
mov
cmc
push
popa
jge,pn
add
mov
sub
add
xchg
mov
pop
push
jnp
mov
outsl
lret
fadds
jle
sub
shrb
ret
and
jno
inc
ds
rolb
jbe
lds
enter
push
xor
sbb
pusha
push
jge
add
scas
push
pushf
cmc
dec
add
insl
imul
inc
add
es
jbe
push
inc
mov
in
loopne
mov
leave
inc
das
add
cli
adc
ret
sahf
dec
push
pushf
sub
adc
sbb
mov
add
push
jle
adc
mov
inc
test
jmp
push
and
mov
adc
xor
mov
bound
shrb
add
and
lret
add
push
add
sub
mov
inc
aaa
sbb
add
repz
xchg
pop
jne
in
ja
cmp
out
mov
sbb
add
push
call
xlat
push
add
xchg
mov
push
pop
push
mov
jp
mov
xchg
add
aad
lds
pop
push
jle
fwait
in
fbstp
testl
sub
lock
adcl
stos
push
sti
add
lods
mov
and
sbb
aaa
sahf
mov
push
inc
icebp
bound
mov
push
and
or
adc
pop
cld
rorb
mov
nop
add
add
pop
add
fcmovnu
lds
mov
add
mov
mov
imul
xor
mov
sbb
sub
xlat
add
push
stc
push
xor
addr16
cmp
popl
mov
roll
out
in
and
cmp
cwtl
add
data16
add
packssdw
inc
jnp
test
and
pop
out
popa
add
sbb
lret
arpl
sbb
pop
sbb
mov
cmp
push
push
add
xchg
inc
imul
test
enter
pop
loope
jmp
cmp
scas
lods
aam
sub
nop
repnz
fsubrs
in
in
push
mov
mov
icebp
inc
add
add
lds
or
lock
sub
xchg
sbb
in
inc
pop
mov
pop
test
add
add
sbb
inc
ret
hlt
out
dec
adc
movsl
or
popa
popl
dec
mov
mov
fidivs
les
pusha
idivb
inc
std
fisttps
bound
mov
add
inc
movsl
mov
fcmovu
lock
mov
sahf
scas
pusha
jge
divl
push
add
icebp
ds
xorl
test
add
fmulp
scas
dec
arpl
add
dec
xor
rolb
dec
xchg
cmp
jp
add
lea
ljmp
in
sbb
orl
add
jle
ret
daa
lahf
add
aad
cmp
add
xor
push
call
out
mov
sti
jmp
popf
mov
aad
ret
imul
imul
cmp
gs
mov
mov
cmp
sub
repnz
add
mov
out
test
xor
or
pop
push
mov
fs
mov
mov
xchg
in
sub
lahf
lock
add
add
push
aam
ds
jo
add
icebp
lds
add
adc
mov
xchg
popl
or
pop
out
add
mov
mov
adc
push
stos
pop
enter
inc
imul
jmp
dec
pop
cltd
in
int3
daa
std
cmp
mov
or
pop
test
sub
add
or
incl
add
aam
outsl
enter
fidivrl
icebp
subb
stc
jge
sub
nop
inc
ss
add
filds
dec
daa
lret
push
mov
arpl
adc
push
mov
push
ljmp
lcall
loope
test
push
aas
addr16
adc
xor
loope
and
mov
adc
push
cmp
in
xchg
ret
scas
or
xchg
cltd
enter
add
add
sub
fsubl
push
jle
pop
add
pop
and
nop
mov
jnp
pop
push
aad
cpuid
xchg
push
xchg
les
dec
push
jmp
mov
test
pop
mov
push
pop
jbe
scas
xor
xlat
std
ss
sub
add
xchg
popf
jo
cmpsl
pop
les
lret
ret
xor
inc
add
add
xor
and
jg
jp
fs
adc
add
pop
test
fnstenv
sbb
dec
jne
in
neg
add
addb
incb
push
jl
cmpsl
add
push
fistps
add
mov
add
add
dec
add
add
push
scas
lds
inc
cmp
xor
test
es
les
movsl
and
mov
sbb
leave
add
arpl
lcall
xlat
clc
push
mov
lcall
lcall
sub
jecxz
add
xchg
rolb
dec
sbb
mov
pop
jmp
into
sarl
mov
pop
or
stc
or
jo
mov
stos
gs
push
push
and
outsl
aad
dec
iret
add
clc
mov
lcall
in
in
adc
movsl
enter
mov
mov
or
nop
sub
test
push
into
inc
jmp
add
roll
mov
aas
push
clc
das
add
mov
les
repz
pop
sbb
sqrtps
lods
scas
int
scas
pop
add
ljmp
cmp
add
push
pop
xor
testb
add
iret
jbe
add
add
lret
push
add
imul
sbb
mov
xor
add
fildl
sub
in
jo
add
xor
add
xor
adc
dec
imul
ja
sub
sti
add
fistpll
add
add
add
add
add
jmp
sub
pop
inc
add
lret
fmul
xchg
subl
mov
decb
loope
add
nop
cmp
dec
push
filds
add
add
call
xchg
push
ljmp
add
adc
popa
add
repnz
mulb
sti
and
or
or
xor
xor
call
cmpsl
add
stos
xor
jnp
mov
push
add
dec
lfs
or
jbe
mov
sahf
rolb
mov
imul
scas
add
aam
push
xor
push
mov
push
enter
mov
add
les
add
add
xchg
mov
ljmp
push
test
shll
and
leave
add
add
stc
add
andb
stc
mov
cmp
mov
daa
sbb
inc
mov
orb
add
sti
add
mov
cld
add
mov
add
add
jne
add
or
sahf
xchg
mov
jmp
rcrb
fs
xchg
push
bound
es
add
jmp
dec
add
xchg
add
push
jecxz
xchg
inc
push
movsl
ja
or
test
movl
or
push
scas
in
inc
add
jl
xchg
into
add
adc
cld
lds
jbe
xor
jb
add
mov
cld
loopne
movsb
pushf
shl
sbb
adc
leave
fmuls
repz
mov
push
test
mov
arpl
adc
test
xchg
dec
add
add
shlb
outsl
lret
add
mov
outsb
add
in
inc
add
aas
cli
add
add
call
jmp
push
ja
jmp
fldt
stos
ds
cmpl
andl
dec
cmp
je
xchg
add
out
in
je
add
mov
cwtl
jp
cs
mov
sub
ret
mov
xchg
adc
sti
xchg
sarb
sbbb
call
add
ret
imulb
jno
in
pop
cmp
call
ret
add
stos
mov
fcomip
jno
jns
add
push
sub
call
cmp
add
in
pop
mov
jnp
fldt
in
jo
mov
popa
lsl
mov
fistl
mov
pop
jne
mov
or
jl
and
add
add
push
pop
arpl
cmpsl
es
mov
scas
jmp
xchg
adc
lahf
jp
and
in
mov
in
jl
add
cmpsb
inc
popa
cmpsl
sub
jae
cmpsb
aaa
sahf
or
pop
lea
in
add
iret
fbld
xchg
inc
xor
scas
mov
hlt
inc
mov
or
ja
pop
loope
pop
sub
daa
add
xchg
mov
movsb
add
out
outsb
lret
xor
daa
mov
outsb
aad
mov
xchg
add
imul
imul
mov
xchg
pop
adc
dec
xchg
stc
lea
add
sub
incl
mov
fldl
push
sub
loopne
ret
add
test
addb
mov
ret
fidivs
add
movsl
jl
out
jle
mov
dec
add
dec
fists
mov
and
mov
add
xor
test
and
outsw
loopne
aas
pop
lret
js
add
mov
fs
lods
testl
negb
jne
add
or
stc
lret
call
mov
insb
mov
add
jmp
add
imul
mov
cld
cmp
sub
push
dec
add
roll
popl
xor
int3
fs
fwait
dec
add
xchg
mov
inc
cwtl
jns
cmp
mov
xchg
mov
adc
or
faddl
outsb
arpl
test
inc
pusha
out
or
rcl
sbb
add
adc
ret
icebp
add
xchg
sbb
icebp
fldenv
jg
push
cmp
and
lock
xchg
xchg
test
dec
or
mov
and
push
mov
repz
addl
outsl
add
add
movsb
mov
pop
xor
mov
add
nop
pop
addl
data16
push
jb
add
pop
sbb
outsl
pushf
push
lret
xchg
adc
jae
push
cmp
sbb
jne
push
push
and
xchg
jp
mov
inc
mov
mov
pusha
imul
clc
gs
xchg
out
leave
sti
xchg
add
add
push
pop
add
jae
test
sub
and
sahf
sti
push
in
sub
xchg
cmpsb
add
movsb
push
iret
jo
ss
mov
gs
movsl
add
jns
movsl
add
add
push
jmp
add
push
fildl
iret
inc
push
cmpsl
cs
jp
mov
mov
dec
repnz
xchg
iret
aas
stos
add
add
jo
xor
push
inc
int3
lahf
inc
push
int
add
push
pushf
add
jl
mov
scas
addr16
mov
insb
add
sub
aam
push
xchg
cmp
add
test
add
fsubrl
add
loopne
mov
cltd
push
and
add
push
data16
cli
ret
loop
popl
and
cmp
and
roll
mov
scas
push
iret
sub
pop
arpl
mov
cmpsb
jnp
movsb
int3
sub
sub
mov
push
add
jle
lock
mov
shll
stc
or
rolb
or
imulb
fwait
pop
add
loope
rcl
imul
movsl
je
sbb
fsub
int3
mov
adc
mov
mov
incb
add
mov
or
add
aas
stos
sub
xchg
fucomip
and
into
lds
cmp
xchg
aam
push
lret
sbb
je
push
or
sub
add
xor
fisttpl
jp
lcall
xor
fwait
add
in
fistps
push
andnps
add
jp
sbb
cltd
stos
fisubrs
scas
xchg
inc
cli
cld
stos
arpl
jecxz
mov
add
jbe
push
dec
pop
sarl
js
add
sbb
outsl
dec
jno
ffreep
das
js
cmp
inc
loopne
arpl
cmc
outsb
test
add
add
add
jmp
pop
mov
inc
mov
popa
sbb
sub
inc
xchg
mov
sub
add
add
fs
jecxz
dec
out
mov
movsb
cmp
add
add
add
outsb
jl
cwtl
add
clc
loopne
in
stos
imul
jl
mov
sub
iret
cmp
and
push
loopne
inc
xchg
add
cmpsb
xor
add
sbb
inc
aam
loope
insl
jge
cmpsb
mov
das
xor
mov
jb
je
fldenv
stos
faddp
add
fsub
cmpsl
mov
cmp
adc
std
lods
mov
dec
mov
sahf
lods
xor
mov
mov
mov
add
add
mov
or
or
imul
mov
fildl
lret
call
test
pop
xor
jnp
cmp
outsl
add
add
fiaddl
jae
xchg
mov
or
fiadds
imul
nop
inc
add
push
xchg
add
mov
lahf
add
adcb
call
fs
adc
fprem
fisttpl
add
add
insb
popa
jl
or
jno
push
fldt
loop
add
cltd
into
int3
add
or
lods
lods
ret
sbb
cmpsb
idivl
push
insl
loope
sub
and
inc
pushw
xchg
cwtl
aas
mov
dec
and
xlat
in
nop
rorl
shr
mov
push
jg
fcoms
xchg
enter
mov
push
mov
cmp
jg
sbbl
xor
scas
xor
int
test
inc
sarl
jb
add
cli
cmpsl
and
xchg
lds
add
inc
int3
cltd
pop
test
subl
sahf
xor
add
xor
cmpsb
sarl
mov
jbe
stos
test
push
aas
mov
add
jge
jl
add
sbb
js
add
jl
add
add
pop
and
add
out
mov
pop
mov
ret
mov
jg
adc
inc
add
ficomps
add
lods
call
test
xchg
add
add
add
rcll
push
inc
scas
cs
faddl
inc
xchg
push
ljmp
pop
jno
pop
movsb
add
add
push
rolb
lods
lcall
mov
cmpsb
add
stos
pop
sbb
insl
ficompl
inc
lock
dec
aad
add
out
add
ja,pt
jp
mov
jns
adc
mov
dec
out
stc
fs
mov
push
add
xchg
jbe
add
mov
xchg
hlt
xchg
add
addr16
out
adc
add
push
xor
test
jecxz
popf
fcmovb
pop
clc
stos
pop
add
xchg
push
out
push
dec
add
and
push
jp
es
push
out
cltd
lea
xchg
and
jns
incl
les
addr16
cmp
mov
push
xorl
inc
mov
pop
pop
mov
add
fst
xchg
xlat
dec
dec
dec
adc
push
iret
insb
loope
fisubrs
lods
sub
add
cmc
pop
aaa
pop
loopne
lret
out
cltd
ljmp
pop
popf
dec
xchg
mov
inc
dec
jge
xchg
fwait
sub
out
cs
hlt
or
sbb
lea
add
lods
mov
add
pop
add
sub
mov
push
add
push
faddl
add
lods
add
int3
sbbb
jmp
or
add
cmpsb
or
sub
mov
rcll
data16
loop
out
add
add
add
xchg
add
in
lock
cmp
sbb
mov
or
ret
inc
int
arpl
into
imul
pop
mov
and
add
lock
dec
sahf
call
rcll
inc
enter
bnd
or
xchg
cmp
loope
xorl
pusha
mov
adc
xlat
fwait
xchg
xchg
or
ja
dec
mov
add
mov
jle
je
and
xchg
add
lds
inc
lahf
pop
test
sub
jle
shrl
pop
out
add
push
push
int
mov
add
das
dec
rorl
andl
or
add
scas
repnz
sub
pusha
pop
insl
stos
sub
mov
sub
mull
jno
add
shr
add
rol
cmp
shrb
jle
cmp
test
loop
movsl
inc
or
cmpsb
add
add
sub
push
sub
xchg
push
cmp
repz
pop
xlat
mov
scas
jle
mov
xchg
pop
add
inc
mov
shlb
movsb
xor
adc
lret
push
sub
insl
andl
lea
dec
mov
lods
pop
add
iret
stos
jbe
cltd
add
add
jle
mov
add
jb
lods
dec
pop
sub
jbe
adc
hlt
push
sti
jns
push
xor
adc
bound
jns
pusha
stos
daa
mov
das
push
jmp
push
cmpsb
and
xchg
movsb
add
lcall
xabort
sub
add
cmp
adc
and
pushf
pop
fstpt
das
rorl
pushf
div
xchg
into
mov
outsb
push
int
sbb
xlat
xchg
pop
mov
cmpb
out
pop
mov
std
lods
mov
add
sbb
jae
cld
add
outsl
out
sub
ficoms
push
xchg
mov
lds
js
insl
dec
add
mov
dec
lret
movsl
aaa
mov
sahf
xchg
xchg
add
popf
pop
test
fstpt
mov
jg
mov
stos
cld
add
sbb
xchg
repz
clc
jae
jmp
movsl
fnstsw
roll
xchg
push
add
sub
rcr
dec
loopne,pn
add
sub
mov
add
inc
mov
inc
jno
addr16
add
loopne
add
add
cmpsb
daa
push
xchg
mov
add
aad
imul
or
mov
and
lret
mov
ror
add
mov
adc
add
fbld
repnz
xchg
xor
cmpsb
add
add
lds
mov
mov
rcr
or
add
sub
add
push
rcrl
rolb
jp
mov
mov
cwtl
outsl
lret
lret
add
and
push
add
test
xor
insl
aas
adc
or
mov
fmulp
add
cld
add
cmp
ljmp
add
mov
xchg
cmc
adc
outsb
pop
jp
mov
jne
aas
add
sub
add
addr16
jo
fisubrs
mov
lret
in
push
add
mov
mov
inc
mov
inc
dec
and
stos
inc
popa
inc
mov
bound
loopne
jmp
jmp
sbb
rclb
insb
adc
in
add
sub
sub
push
sub
stc
jmp
mov
sbb
xor
sahf
pop
add
adc
sub
add
pusha
add
test
dec
out
or
sub
ljmp
je
imul
add
inc
addr16
add
leave
ss
mov
jae
jmp
add
aas
jle
or
add
xor
add
test
ss
pop
repz
jbe
mov
cld
mov
cmp
insl
fs
mov
sub
add
sub
add
or
stos
fwait
add
mov
arpl
push
adc
div
incb
cmp
insb
push
sub
add
add
fistps
or
mov
add
stos
in
xchg
add
jmp
xchg
in
add
pop
inc
mov
es
jg
mov
sbb
ss
push
jmp
fsubrs
enter
fists
gs
dec
add
pushf
xchg
lret
inc
add
arpl
stos
cmc
jge
inc
cmpb
jnp
data16
sbb
sub
xor
movsb
push
xor
bound
pop
aam
incb
popl
popa
cmp
mov
in
loopne
cmp
mov
push
add
add
xlat
in
leave
mov
jmp
pop
mov
insb
arpl
sbb
jge
cmp
add
add
xchg
sub
leave
xchg
mov
add
jae
cwtl
add
cmp
cli
or
rcrb
subl
mov
cmp
adc
retw
add
popf
add
sbb
add
inc
lods
fidivs
add
mov
fs
aad
mov
adc
add
adc
add
notl
xchg
mov
lds
call
pop
push
adc
add
add
loope
dec
rcl
jecxz
jg
sbb
add
add
test
sub
and
sbb
jbe
out
inc
add
cmp
les
cli
mov
mov
aas
push
push
andb
push
add
in
xor
add
ljmp
or
mov
scas
iret
xchg
shlb
insb
cmpsb
lods
loope
scas
cmp
mov
dec
pop
in
push
add
add
repz
mov
lea
std
mov
cmp
and
ds
mov
je
pop
mov
je
outsl
or
push
adc
lods
add
arpl
sub
adc
mov
xchg
add
scas
xchg
and
cmp
jge
les
add
jle
fucom
repz
sub
mov
pop
add
pop
hlt
add
add
addb
ljmp
mov
add
mov
inc
aad
add
add
sarb
rcl
add
xchg
add
adcb
aam
add
imul
repz
clc
icebp
jno
scas
mov
jbe
lods
leave
cmpsb
add
ret
aaa
in
or
or
cmpsl
and
bnd
xor
inc
mov
xor
and
int3
fiaddl
pushf
daa
jb
mov
sete
iret
add
dec
cmp
test
push
add
and
jge
bswap
lret
testb
shrb
cmpsl
sbb
mov
mov
add
xor
in
jae
dec
jne
cmp
xor
mov
sub
jne
stos
add
sbb
cmpsl
dec
jno
addr16
cmc
xor
sti
push
adc
nop
pop
xchg
fadd
jmp
or
xchg
inc
andl
add
xor
add
xor
in
ds
sbb
sbb
addb
in
dec
jae
cmp
jmp
dec
adc
xchg
mov
pusha
add
ljmp
add
xchg
lods
add
dec
outsl
movsl
lock
or
jle
jg
mov
jmp
xchg
iret
cltd
sub
inc
push
add
test
push
lret
pop
shl
jb
dec
or
add
in
es
add
fwait
cltd
call
in
add
add
jae
push
mov
pushf
mov
lret
mov
loop
add
in
sbb
in
or
test
les
adc
imul
pushf
and
add
add
adc
cld
setge
inc
push
pop
lcall
dec
jge
cmpsl
es
mov
adc
flds
pop
add
rorl
mov
mov
ljmp
mov
rcll
mov
mov
frstor
or
daa
sbb
sarl
push
add
ljmp
dec
addl
jmp
into
imul
cmp
call
in
pop
add
cmp
add
xlat
clc
add
xor
fistpl
add
movsl
pusha
sbb
or
cld
push
add
andb
jo
adc
testl
sub
add
lcall
mov
fistpll
mov
mov
fs
xchg
jp
shlb
addr16
pop
ss
jnp
or
sbb
mov
adc
adc
pushf
xor
add
cmp
dec
add
hlt
xchg
xor
push
imul
movsl
sbb
repnz
les
mov
and
sub
ljmp
dec
sbb
cmpl
xlat
movsb
aam
and
inc
xor
xchg
dec
std
add
rorl
test
add
push
cmp
jb
testb
pop
stos
xchg
ret
fwait
sbbb
add
stos
in
push
inc
pop
imul
cmpsl
inc
xor
test
mov
xchg
sti
push
add
inc
jge
add
lock
stos
aas
mov
mov
pop
cwtl
xchg
rcrl
clc
enter
leave
dec
add
adc
mov
adc
jno
add
mov
cmc
add
mov
cmpsl
add
add
loope
cld
shrb
adc
in
popa
add
sbb
sub
lock
sub
lret
ss
subb
pushf
stos
sub
or
stos
mov
stos
mov
ror
sahf
cltd
cmp
pop
sbb
mov
add
in
xor
jl
in
mov
mov
fdivl
pop
add
jle
mov
mov
push
push
push
aas
sbb
and
add
jle
push
mov
xchg
inc
pop
inc
add
repz
xchg
sarl
leave
mov
xchg
test
test
xor
add
jle
leave
jg
ss
dec
dec
jns
and
jb
fidivs
call
ljmpw
xchg
sti
xor
cmp
ss
jg
imul
imul
das
mov
icebp
add
fwait
cmp
mov
ror
adc
add
mov
mov
test
xchg
pop
popa
mov
popa
insl
add
and
gs
mov
add
movsl
xor
add
rclb
xchg
xchg
push
push
push
cwtl
jne
sbb
outsb
movd
test
mov
xchg
xor
sbb
int
dec
add
pop
mov
inc
iret
loop
lds
hlt
sarb
or
aam
or
push
or
lea
jnp
scas
test
test
test
add
out
pop
xor
add
dec
xor
xor
lods
sbb
pusha
add
mov
push
add
lods
jae
and
or
sub
pop
enter
pop
jmp
jg
hlt
add
lock
loopne
mov
xchg
inc
jle
lods
jmp
mov
fwait
rcrl
xor
leave
jb
outsl
mov
inc
xchg
sbb
add
dec
push
lahf
jae
sub
jge
add
orl
mov
mov
inc
scas
test
jp
jb
out
inc
jbe
add
xchg
imul
lods
scas
imul
stos
jnp
adc
add
ljmp
in
popa
add
add
jmp
movb
dec
jecxz
pop
mov
fdivrl
mov
add
jecxz
fidivs
add
or
add
and
jg
stos
scas
sbb
ffree
sarb
push
rolb
adc
add
scas
lods
add
movsl
add
fwait
add
jl
pop
jne
dec
add
das
mov
loopne
xor
mov
push
add
add
mov
out
fidivrl
lcall
pusha
add
out
mov
cmp
mov
or
adc
cmpsl
add
add
push
popa
jl
ja
pop
pop
push
add
in
jae
add
es
inc
push
cmp
sbb
mov
lea
lcall
mov
jno
not
sub
fildl
jbe
bound
sti
add
inc
mov
or
sub
aad
adc
popf
add
fnsave
mov
inc
daa
xor
fisubrs
shlb
xor
xchg
mov
pop
sbb
rclb
cwtl
add
mov
jecxz
scas
add
mov
adc
inc
add
mov
cmp
xchg
and
jecxz
add
add
jae
int3
je
or
cld
cs
xor
movsl
test
gs
arpl
add
icebp
fcompl
jmp
bound
scas
jo
arpl
and
je
add
roll
sbb
jge
dec
xchg
add
add
and
sahf
add
sbb
dec
push
add
insl
ret
add
fdivrl
mov
mov
sub
xchg
xchg
add
test
cmp
mov
hlt
cmp
sub
ds
outsb
add
pop
sbb
mov
sbb
fucomp
movsb
mov
xchg
bound
xchg
ficompl
or
imulb
mov
imul
cmp
popl
into
xor
arpl
icebp
and
movsl
pop
cld
in
les
lret
inc
lret
ljmp
aaa
cmpsb
push
cld
nop
inc
cs
fdivrp
mov
add
in
lcall
and
mov
jnp
jo
insb
imul
inc
js
ja
and
in
add
add
sbb
add
and
ret
les
jle
fimuls
dec
cld
xchg
sbb
jo
add
add
add
stos
into
clc
jp
fmuls
dec
add
add
lret
xor
mov
cs
jmp
je
out
out
sub
xor
push
lock
sbb
rolb
and
xchg
cmpb
into
outsl
jl
add
ds
imul
int
pop
push
fildll
divb
mov
leave
icebp
pushf
mov
lret
inc
int
int3
jbe
xlat
pop
inc
in
sbb
adc
add
ret
nop
add
popf
dec
pop
cwtl
and
stos
sub
add
testl
es
push
or
push
mov
push
sbb
sub
test
add
rolb
add
aas
loope
cs
mov
fsubs
inc
data16
incb
xchg
and
adc
sub
lahf
dec
jae
add
add
cmp
sbb
mov
pop
add
ds
inc
add
add
dec
dec
xor
jecxz
insl
nop
pop
dec
push
lock
in
add
or
push
test
andb
xchg
shlb
idiv
out
int
loope
cmp
push
or
cmpsb
mov
lds
rolb
or
mov
stos
mov
mov
inc
or
mov
stc
add
add
aaa
pop
and
push
cmp
xchg
add
add
gs
rsqrtps
or
fimull
add
lcall
rcrl
add
lret
fiaddl
jle
sbbb
inc
cmpsb
ljmp
add
add
sub
data16
popf
xor
fidivl
fsubp
fimull
jp
lods
lcall
aas
xlat
stc
xchg
enter
inc
inc
cmp
lods
cmp
adc
dec
cmp
pop
mov
dec
add
push
in
adc
icebp
add
pop
jne
adc
pop
sbb
aas
add
jnp
or
add
inc
mov
pop
faddl
or
cmp
add
mov
dec
in
loop
les
adc
jmp
push
bound
add
and
nop
imul
test
inc
mov
jae
rcr
add
aaa
sahf
fadds
xchg
xor
cmp
enter
sbb
add
arpl
sbb
adc
jnp
das
pop
incb
add
push
shl
add
dec
dec
js,pn
jns
mov
test
in
sbb
mov
jecxz
push
loopne
cmp
push
push
xor
add
dec
pushf
xchg
pop
xor
sub
pushf
xor
xlat
movsl
repnz
mov
add
mov
dec
in
popf
xor
frstpm(287
add
mov
popf
add
add
outsb
sbb
push
add
je
imull
xor
inc
adc
lret
add
inc
lea
add
sti
xchg
inc
dec
and
push
movsl
outsb
push
push
add
lahf
add
jns
into
cmp
push
jb
push
jne
dec
and
mov
jge
add
add
add
ljmp
jge
test
lahf
sti
push
and
add
add
dec
iret
loopne
mov
cltd
jo
mov
add
pop
push
rolb
lds
popf
outsl
hlt
jae
mov
icebp
add
rorb
iret
xor
in
jl
xchg
mov
push
je
add
jb
pop
sbb
push
mov
and
adc
sub
mov
aam
nop
lcall
or
out
loopne
mov
addb
int
les
add
fsubl
test
cmpsl
add
add
cmp
addb
sahf
sbb
outsl
sbb
ja
addb
or
xor
add
dec
dec
push
pop
imul
sub
cmc
add
jae
daa
js
mov
dec
out
inc
or
sbb
int3
and
cmp
dec
in
xchg
adc
shrb
add
push
jno
xor
orb
add
and
adc
dec
push
cwtl
add
mov
fcompl
lret
push
dec
nop
mov
mov
dec
push
and
xchg
hlt
sub
dec
push
pop
hlt
jmp
add
rcrb
mov
cmc
jae
icebp
add
sub
xchg
jae
out
dec
jb
loopne
mov
mov
and
clc
cli
xchg
ret
sbb
sbb
push
insb
add
lods
imul
addb
adc
and
cmp
add
pop
add
add
mov
xor
inc
dec
sbb
test
add
stos
sbb
jno
xor
arpl
cmc
add
test
outsl
and
jns
pusha
add
scas
add
jno
arpl
jge
add
add
loope
add
or
add
cmp
xor
add
dec
mov
push
mov
aam
add
fsubr
mov
cld
mov
clc
addr16
cs
in
adc
push
mov
jae
jne
cwtl
in
mov
sub
adcb
ljmp
mov
int3
mov
fisubrs
mov
adc
jns
pop
out
and
cmp
jne
scas
jge
lret
push
add
jns
xor
loopne
sbb
mov
sbb
movsb
inc
cli
jp
add
add
push
mov
rcrl
add
or
shll
dec
pop
add
mov
dec
fwait
jle
jo
fdivs
or
rorb
mov
mov
repz
cmp
sub
mov
and
jecxz
or
sbb
sub
sub
mov
in
jne
sarb
in
jae
pop
add
mov
fstpt
mov
fs
insb
jg
aad
and
sahf
fisubrs
cmp
ljmp
clc
jae
sbb
push
mov
jl
mov
popf
push
fcompl
or
add
fwait
nop
add
adc
push
mov
mov
inc
mov
xchg
add
add
push
imul
aas
dec
pop
adc
repnz
cmc
sti
popf
sbb
xor
add
or
and
mov
mov
add
std
arpl
clc
loopne
jecxz
fwait
enter
pusha
add
loope
das
add
sub
xor
rcl
add
sub
or
xchg
add
mov
add
cmp
push
add
jb
repnz
mov
outsb
test
inc
les
cmp
and
daa
sub
leave
cmp
int3
cmp
add
xlat
mov
in
push
jl
data16
pop
fwait
sub
hlt
add
int3
xchg
sbb
add
sbb
or
push
jecxz
sub
shrb
add
in
std
mov
imulb
mov
shr
lret
stos
sub
mov
jecxz
mov
mov
xchg
fldl
jp
cltd
mov
or
mov
mov
out
add
mov
push
hlt
inc
dec
jecxz
xor
add
addb
pop
ficomps
adc
icebp
pop
sbb
add
or
in
ret
insb
mov
xchg
inc
hlt
popf
aaa
jp
adc
ja
xchg
add
ret
add
or
adc
jne
leave
scas
repz
insl
enter
xor
push
sub
daa
jge
mov
pop
test
cmp
pusha
pusha
mov
xor
cwtl
mov
cmp
call
scas
loopne
or
pop
cwtl
cmpsl
xorb
sub
and
inc
movsl
dec
imul
in
mov
pop
push
push
add
lret
repnz
dec
add
inc
data16
repz
mov
add
jl
xor
cmpsl
add
fisttpl
sbb
inc
xor
lahf
cmpsb
add
or
rolb
push
mov
fwait
add
cmp
xchg
sbb
xor
add
idivb
add
add
add
ljmp
add
mov
insb
push
lcall
push
add
popf
bound
dec
mov
add
push
cmpsl
xor
push
cmp
out
lret
fistpl
dec
jl,pt
mov
cmc
add
imul
outsb
and
adc
cmp
add
and
roll
push
and
ljmp
add
test
mov
fst
jbe
push
das
dec
pop
mov
int
add
out
push
stos
loop
lahf
mov
mov
pavgw
add
fwait
xor
cmp
lock
add
mov
push
les
xor
arpl
in
stos
adc
pop
inc
xor
mov
adc
rep
push
ret
cmp
cmp
es
add
fstl
imul
add
sti
ret
add
sti
pusha
add
ss
push
cmpsb
loopne
mov
repz
push
out
mov
push
add
adc
add
in
add
mov
das
sbb
dec
daa
aas
dec
inc
sti
cmpsl
sub
add
lcall
in
rorl
sbb
cs
push
pop
push
mov
xor
mov
jl
pusha
hlt
and
mov
ss
fistps
or
lcall
ja
xchg
test
add
add
fcompl
out
mov
sbb
dec
add
add
add
jne
mov
sbb
add
int
cmp
cwtl
add
xchg
arpl
cmp
mov
mov
add
add
ja
xchg
stc
cmc
xor
xor
dec
add
pop
test
add
loop
add
out
outsl
fldcw
dec
mov
or
fmulp
add
loopne
and
add
popa
bnd
fisubl
xchg
iret
xor
add
out
cmpsb
cs
jecxz
jp
add
add
inc
dec
jns
shlb
bound
inc
sbb
sbb
add
cmp
fnsave
int
add
add
cmpsb
mov
xchg
cmp
jmp
stc
xchg
and
add
and
cmp
dec
cwtl
in
call
add
loope
rcrl
aam
cmc
call
jmp
mov
imul
scas
add
sbb
leave
mov
repnz
aad
sub
xor
inc
mov
movsl
mov
mov
sbb
aas
mov
and
push
inc
add
add
xchg
dec
sahf
push
add
loope
add
dec
jp
add
push
jb
stc
mov
addr16
pushf
sbb
add
push
lea
cmc
popa
jl
std
sbb
in
ljmp
jp
add
outsb
xchg
and
add
xor
ljmpw
cmp
jnp
mov
sbb
fdivl
mov
repnz
jecxz
add
stos
cmp
add
xchg
jns
sub
sbb
cmpsb
jmp
add
xor
fstpl
cmpb
pop
inc
into
adcl
in
in
add
add
pop
xchg
notl
add
pushf
push
ds
jg
andl
push
aam
add
lods
aad
add
cmp
mov
add
les
imul
addb
xchg
sti
pusha
xchg
add
pop
jmp
jns
scas
add
pop
add
add
adc
jp
dec
testb
add
movsb
fdivs
push
add
cld
lods
add
or
scas
xlat
nop
cmp
lds
dec
sbb
dec
fwait
add
inc
dec
add
add
add
pushf
sub
xlat
lods
sahf
mov
mov
pop
mov
aam
es
dec
mov
mov
packuswb
out
mov
xchg
aam
and
pop
pushf
filds
cltd
jb
add
push
fstl
jge
add
add
cltd
add
adc
fwait
push
lahf
inc
inc
int3
idivb
movsl
pop
push
dec
scas
pop
pop
add
or
fsubl
stc
add
xchg
inc
bound
xor
test
add
popl
movsl
add
cmpl
push
mov
add
add
and
jns
xor
add
mov
push
leave
add
lods
test
test
mov
dec
jmp
add
icebp
cli
stos
add
mov
add
addr16
fcmovne
cmp
jbe
imul
mov
pop
jecxz
pop
roll
lret
scas
push
aad
pop
push
out
into
push
add
movb
mov
hlt
dec
add
lret
xchg
sub
gs
outsl
mov
xchg
fisubrl
cli
jp
scas
sub
mov
mov
xchg
test
cmp
add
cmp
std
aad
inc
sub
fidivl
lret
push
mov
dec
sub
push
mov
add
and
add
movsb
add
add
dec
scas
mov
mov
or
insl
add
adc
pop
sub
out
ds
add
leave
test
subw
push
pop
lahf
leave
test
and
push
sub
add
push
cmc
fadds
cmp
stc
sub
inc
add
add
jbe
pop
cmp
in
add
fs
mov
pop
in
jle
mov
mov
pop
jae
test
les
test
xor
loop
xchg
adc
clc
test
test
jle
fists
push
add
leave
cli
daa
in
add
sbb
call
pop
sub
add
fstpl
sub
imul
scas
xchg
and
cmp
pop
sbb
push
repz
pusha
imul
popa
in
inc
add
std
cmp
jmp
stos
add
add
movntq
add
lea
dec
push
add
add
shl
test
mov
lret
sti
in
ret
cmp
mov
repz
or
dec
adc
jne
push
das
push
jnp
aam
in
sbb
cmp
cmc
or
add
pop
add
sbb
int3
push
icebp
dec
gs
inc
out
add
mov
cmc
test
mov
fs
sbb
mov
mov
or
add
fcmovnb
mov
aam
das
xchg
rcrb
dec
jmp
hlt
add
pop
test
rolb
cmp
test
mov
in
movb
popl
add
aad
jp
mov
add
inc
icebp
sub
or
pushf
mov
repz
shrl
xor
adc
adc
jb
xchg
inc
pop
jo
int3
iret
push
pusha
roll
xor
jno
xchg
leave
nop
jmp
mov
or
loope
push
adc
insl
pop
add
add
mov
mov
cmpsb
mov
cwtl
and
js
cmp
add
pop
mov
insl
add
add
js
jo
js
xor
pop
add
sub
or
aas
idivl
aas
aas
int3
mov
add
add
pop
add
dec
and
adc
add
cmp
mov
cmpsl
gs
jbe
add
dec
push
xor
lea
int
mov
mov
dec
jbe
out
bound
xchg
aad
arpl
jge
add
dec
test
add
sbb
mov
sahf
mov
sub
push
cmp
pop
push
add
dec
or
mov
mov
add
dec
popf
push
inc
push
add
hlt
push
sahf
lret
enter
in
jns
int
das
outsl
lock
cld
or
call
in
mov
xchg
add
seta
dec
aas
cmp
jo
imul
or
mov
mov
sub
jg
lock
xchg
movsl
jae
addl
shrl
push
mov
add
gs
movb
push
add
and
pop
aad
insb
jp
lcall
cmc
pop
xchg
fistpll
pop
imul
fimuls
scas
dec
mov
pop
in
sahf
add
mov
inc
insl
xor
jg
lahf
flds
jg
mov
add
das
cmp
add
fsts
push
cmp
sbb
decl
add
add
ret
cmp
add
fdivs
jo
cmp
jmp
repnz
add
jg
cld
mov
orl
sbb
ficomps
negb
mov
mov
dec
dec
data16
mov
call
and
cmpsb
sub
add
pop
scas
jg
xor
add
fadds
outsb
sub
in
pop
mov
ljmp
lret
fs
xor
xchg
sbb
fdivrs
add
call
xor
aaa
add
jb
add
cmc
add
sarb
xor
ljmp
jno
xchg
mov
xchg
dec
add
add
xorb
jmp
add
and
repnz
sbb
rcrb
and
lret
fwait
mov
jg
imul
lahf
ja
les
mov
jns
or
test
add
aam
push
add
add
test
jp
xchg
mov
cs
movsl
hlt
inc
rclb
cmp
fdivrl
push
xchg
add
add
mov
jns
imul
jno
mov
xchg
add
sbb
mul
shl
lock
dec
stc
add
lock
add
push
add
outsl
aaa
add
dec
nop
test
inc
pop
add
fiadds
jecxz
add
dec
xor
inc
cli
mov
jae
mov
jo
arpl
fnstsw
push
adc
ret
and
ret
cli
mov
cmp
add
add
add
je
mov
add
sub
ja
cmp
daa
data16
aam
add
jge
dec
add
sbb
xlat
es
add
leave
inc
inc
mov
xchg
xlat
jo
mov
push
shl
loopne
pop
outsb
out
adc
add
xchg
mov
inc
mov
jg
mov
adc
jle
push
add
in
add
add
sbb
xchg
ror
bound
or
ret
xor
aam
cmp
add
xchg
add
cltd
scas
xchg
loope
mov
fsubs
sub
clc
outsb
imul
xchg
cli
imul
bound
jo
inc
mov
movsb
enter
fmuls
mov
xchg
icebp
push
cld
fnstenv
sahf
fs
int
pop
add
iret
and
clc
cmp
adc
add
in
add
mov
ret
jp
sub
sub
fcoml
and
push
popa
bound
jae
mov
mov
mov
repz
aad
testl
add
add
fdivl
sub
in
ja
sbb
imul
add
jno
roll
mov
lea
in
out
and
mul
dec
in
pop
cmp
scas
add
inc
mov
push
jl
mov
sbb
xlat
push
xor
adcb
mov
push
repz
in
add
push
jns
stos
or
xlat
cltd
cmpl
and
adc
insl
dec
add
mov
mov
push
add
call
adc
loopne
jo
dec
xchg
imul
pop
icebp
cmp
aam
shlb
mov
mov
sti
pop
adc
sub
sbb
ret
es
jl
xor
add
add
pop
popa
push
mov
add
sub
mov
sbbl
cmp
mov
stos
pop
lcall
mov
dec
sti
out
pop
imul
mov
jg
imul
sbb
and
mov
popa
dec
sub
lahf
sbb
jl
lret
push
add
in
ja
loopne
xchg
ja
sub
orl
add
xlat
pop
mov
push
mov
sub
adc
push
sbb
add
add
adc
sub
testb
pop
xchg
orl
add
dec
dec
dec
cmp
sti
test
outsb
mov
loope
sbb
decb
mov
cmp
fdivp
orb
add
add
cmp
mov
movsb
es
pushf
jge
cmc
push
loope
add
xor
pop
xor
in
inc
xchg
cmp
sub
push
add
dec
mov
test
push
xchg
add
jbe
mov
mov
add
push
popa
repnz
pop
dec
mov
jmp
lock
push
add
lock
inc
jmp
fwait
lret
mov
mov
add
rcll
pop
div
add
andb
or
sbb
add
leave
inc
dec
xchg
lcall
sub
repnz
jle
sbb
add
out
adc
adc
stos
mov
pusha
lret
jno
insl
dec
inc
add
or
into
add
lret
xchg
add
addl
ljmp
cmp
nop
mov
loop
add
inc
fcom
imul
add
xor
outsl
add
popf
les
loop
add
mov
stc
xchg
xchg
add
jg
iret
inc
jb
mov
add
add
mov
and
arpl
xchg
sbb
hlt
and
popf
inc
jecxz
push
mov
add
jne
ds
add
pop
jns
inc
ret
sbb
pop
jge
add
xor
and
mov
add
outsb
rolb
push
add
mov
push
mov
push
js
addl
mov
xor
fstpl
sbb
int
xor
int3
ljmp
xorl
das
xchg
imul
inc
scas
sub
and
insb
pop
cmp
xchg
add
mov
cmp
xchg
daa
lods
mov
push
add
xchg
inc
repnz
fistpl
int
dec
int3
xchg
and
pop
fsts
xchg
mov
add
loop
into
cmp
and
add
test
pop
adc
ret
ja
shrb
aam
pusha
ja
xchg
rolb
das
add
ret
push
add
cld
hlt
into
scas
rorl
xchg
add
sub
ljmp
cwtl
es
add
mov
pop
pop
xor
xchg
nop
add
mov
movsb
mov
dec
test
or
cmp
shlb
in
pusha
add
test
add
jae,pt
cmc
not
loop
roll
movsl
mov
add
xor
sbb
testl
mov
aas
out
cmpsb
inc
add
sub
inc
js
insl
insb
lea
jnp
inc
add
fwait
add
sbb
jl
cmp
mov
jns
dec
mov
pushf
nop
popf
push
fdivrp
add
add
xchg
jp
jo
or
rcrl
loopne
les
pop
push
fs
mov
int3
hlt
aas
jne
int
rcll
jbe
call
add
add
pushaw
push
sbb
shr
mov
fadds
addr16
mov
xor
inc
out
mov
pop
mov
lcall
inc
push
adc
add
or
arpl
add
inc
mov
or
xchg
jg
sbb
nopl
mov
mov
jne
rol
mov
int
fwait
add
hlt
outsl
add
xchg
xchg
xchg
pop
out
sub
int3
xchg
and
sub
icebp
mov
aaa
movb
inc
push
xchg
jne
data16
lods
loop
cmp
pop
or
mov
jno
xor
add
sub
cmp
fildl
imulb
insb
sbb
in
leave
add
pop
push
push
idiv
cmp
add
mov
ret
add
ret
ret
