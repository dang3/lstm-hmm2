push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
mov
jo
jo
jle
jo
xlat
cmp
rol
pop
push
add
mov
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
lret
mov
sub
incl
fwait
mov
mov
cltd
sub
cmpsb
pop
fbstp
sti
adc
jo
adc
sbb
ret
mov
jnp
jnp
movsb
ret
insl
jno
daa
and
data16
cmp
dec
andl
add
int
ret
aas
push
ljmp
out
push
mov
sbb
in
ljmp
pop
mov
jne
fs
sti
scas
xor
int3
aas
rorb
or
inc
jge
out
sub
fs
aas
ret
ret
je
bound
pop
shrl
add
stos
sub
sbb
dec
stos
fyl2xp1
movaps
mov
inc
jno
xchg
inc
inc
iret
test
and
pop
test
jp
adcb
cmpsb
xor
ja
push
xchg
jns
jle
adcl
and
lock
or
jecxz
std
jno
insl
std
dec
push
sub
aaa
push
mov
cmp
inc
push
mov
mov
jp
rorb
popa
inc
std
pop
fsubs
shll
sbb
xchg
notl
dec
and
xor
popa
pop
xor
inc
cld
jmp
clc
icebp
mov
icebp
ficompl
lret
jle
jo
jle
jo
mov
dec
pushf
addb
xlat
aas
fucomi
clc
in
in
nop
jbe
shrl
add
mov
js
nop
leave
sub
mov
mov
loopne
pop
add
xchg
pop
xorb
insb
sahf
or
jl
loope
mov
push
jl
out
ss
orb
lods
mov
loopne
jmp
push
inc
xchg
imul
ror
xchg
push
add
and
pop
mov
adc
scas
mov
shl
jle
punpcklbw
sub
fsubp
shl
enter
sbb
fildll
cs
rclb
push
leave
inc
mov
das
in
int3
jno
call
mov
jae
pop
outsl
test
js
cmp
mov
fcompl
mov
hlt
jp
scas
lea
mov
adc
and
outsb
jle
push
inc
ja
push
enter
jb
in
inc
mov
cmp
idivl
mov
ret
pop
stos
or
push
sub
push
shr
bound
sub
adc
into
addr16
shrb
lret
add
mov
xchg
push
out
arpl
inc
jns
mov
aam
ret
fcomi
iret
fs
sbb
sahf
cmp
js
out
outsl
cld
sbb
or
jne
or
lahf
test
iret
adc
js
jne
ja
imul
jmp
cmp
or
in
insl
push
dec
cwtl
movsl
fldl
outsl
repz
mov
pop
sbb
cli
test
fldl
cmpsl
lock
sti
mov
jmp
lret
mov
std
xchg
or
in
add
movsb
sbb
push
into
push
dec
sbbb
lea
mov
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
add
inc
out
jl
jo
jle
jo
pop
mov
xor
gs
repz
lods
repz
fwait
std
push
lret
iret
push
test
outsl
loop
or
movsb
addr16
sahf
mov
pop
loopne
add
nop
mov
inc
div
jb
aad
dec
fwait
sub
imul
cmp
popf
sub
pusha
aam
cmc
push
ret
repnz
pop
sub
je
insb
jne
bound
pop
and
pop
jnp
sbb
mov
shll
pop
and
or
jae
and
jmp
adcb
mov
fidivrs
jmp
add
out
je,pt
pop
and
ja
xchg
aas
push
movsb
popa
je
loope
add
push
ss
and
adc
cmp
imul
push
sbb
jmp
cmp
mov
outsl
mov
es
pushf
mov
popa
in
nop
mov
cld
xor
movsb
jge
pop
jo
add
icebp
in
movsb
sti
mov
sbb
loop
decl
addr16
icebp
mov
jmp
cmc
or
xchg
and
pop
jnp
cmp
ljmp
jmp
xchg
push
jmp
or
lcall
cmp
sahf
add
fwait
fs
fidivrs
pop
imul
cmp
ss
jle
ret
fists
add
add
rep
and
xchg
aas
imul
push
push
pop
push
ret
dec
adcl
in
xchg
icebp
mov
jl
out
addl
pop
cmp
ret
xchg
lcall
stos
jno
pop
gs
xor
jno
gs
adc
subb
xchg
sub
js
test
pop
or
sub
push
call
pop
stos
sbb
scas
xchg
xchg
fldenv
mov
ret
jl
icebp
push
mov
rorb
inc
pop
xlat
add
subl
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
add
jo
jo
mov
mov
movsb
cld
ret
add
cmpsb
stos
testl
mov
mov
inc
push
lods
popa
movsb
mov
adc
imul
cli
pop
adc
sub
pop
gs
push
imul
pop
inc
es
sar
xchg
dec
ret
jns
lods
pop
mov
sub
es
out
shr
mov
loop
xchg
push
inc
popl
test
sarb
es
cli
aas
clc
mov
inc
pop
scas
sbb
push
repz
lcall
imul
xor
xor
pop
lods
xlat
adc
in
xor
sbb
jecxz
pop
fiaddl
notl
in
decb
push
es
into
fdivrp
push
inc
sub
sbb
ret
xchg
test
js
mov
pop
in
push
or
lods
adcb
out
jmp
ret
dec
or
add
mov
jl
adcl
movsl
pop
cmovns
push
ljmp
pop
cltd
mov
imul
dec
and
loop
adc
xchg
jmp
ret
or
jbe
fdivrp
jae
pop
mov
jmp
push
cmpsl
mov
cmp
mov
mov
aaa
in
xchg
inc
jae
pop
cltd
mov
pop
shlb
adc
xor
mov
xchg
or
ret
mov
mov
clc
mov
test
push
sub
sti
add
movsb
shlb
mov
fldenv
push
cltd
sar
leave
add
push
cmp
daa
xchg
xchg
xor
push
adc
sub
rorl
sbb
dec
dec
loop
stos
jmp
scas
loopne
cli
adc
mov
jae
dec
insb
in
es
ss
or
xchg
fistl
rol
and
cmp
mov
mov
pop
jmp
adc
stc
push
lret
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
imul
jo
jo
jo
jo
stos
xchg
and
sarl
arpl
add
call
test
and
ja
leave
cmp
sti
mov
or
push
sub
sub
and
xchg
mov
rcl
stc
icebp
mov
cwtl
xchg
aas
ds
or
push
pop
aam
mov
jecxz
push
leave
mov
adc
pop
pop
pop
xchg
and
xor
sbb
in
jbe
lcall
insl
out
lret
inc
mov
mov
stos
aad
mov
jae
add
jns
or
lock
push
xchg
mov
out
popf
popa
sub
fpatan
add
pop
imul
and
scas
cwtl
in
cmpsb
push
lods
adc
dec
pop
xchg
add
pop
das
out
or
insb
add
dec
insb
icebp
sub
cs
xchg
jnp
nop
lds
mov
ss
mov
bound
ds
aam
add
sub
rcpps
shlb
adc
adc
gs
not
xchg
fidivl
sub
push
out
ss
pushf
jmpw
lahf
pop
stos
std
or
aas
fnstsw
cmp
cmp
jo
mov
lea
mov
je
dec
jmp
adc
int3
jne
mov
adc
sbb
aaa
pop
or
jg
subl
test
cs
push
inc
out
sub
in
and
out
inc
adc
shll
jns
int3
scas
rorb
mov
les
add
cmp
sbb
mov
out
clc
mov
fxtract
ret
notl
or
insl
iret
lds
lcall
pop
xchg
into
add
addr16
or
rcll
jb
lahf
js
stos
insb
in
and
mov
out
lcall
jge
lret
test
add
add
cltd
sbb
add
sub
add
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
or
push
jo
jo
jo
xchg
popa
mov
mov
push
pop
arpl
fwait
inc
push
aam
fildl
and
cmp
mov
mov
les
add
out
add
loopne
xchg
lods
fstpl
iret
and
ror
xchg
lret
cmpb
pop
jecxz
scas
dec
sbb
push
add
cmpsb
out
sbb
jns
pop
daa
call
adc
mov
aas
inc
in
fcomps
jle
jns
and
xchg
add
out
push
cmc
jne
dec
sarb
mov
ss
fmuls
cmpb
into
push
mov
jmp
imul
es
mov
cli
cli
dec
push
icebp
jp
ljmp
xor
ficoms
enter
rcl
or
pop
mov
ficomps
mov
push
mov
addr16
mov
int
mov
push
jno
mov
sub
rcl
outsb
aas
adc
fadd
lcall
mov
mov
xlat
mov
xor
rolb
jae
fistps
push
clc
repz
lds
mov
xor
or
in
cmpsb
addb
imul
sbb
and
cwtl
push
fadds
clc
or
adcb
mov
sahf
jg
mov
imul
aas
lcall
jns
mov
inc
jae
arpl
sub
ret
andb
mov
adc
jno
xor
xlat
scas
xor
call
pop
pop
out
insl
mov
jno
mov
gs
pop
scas
leave
in
ss
jo
dec
pop
pop
mov
fwait
addr16
cmpsb
std
cmp
xor
push
mov
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
andb
jmp
add
jo
jle
jo
mov
jle
mov
outsb
lret
dec
mov
mov
fbstp
shll
ds
xchg
sbb
shlb
push
fmuls
xchg
cltd
pop
push
jecxz
and
dec
pop
into
mov
out
add
or
xor
ljmp
or
in
loope
mov
fs
push
mov
or
loope
cmp
mov
mov
xchg
fcoms
mov
lea
dec
lcall
mov
jb
iret
mov
xor
jle
push
insl
icebp
adc
cwtl
mov
pusha
sbb
aaa
mov
push
xor
sub
xchg
add
popa
mov
les
xchg
lea
xchg
bound
mov
test
mov
xor
clc
fstl
pushf
inc
sbb
xchg
cmp
lahf
hlt
imulb
pop
xor
ror
add
dec
xchg
sub
jp
inc
aas
rorb
cltd
in
mov
lds
xchg
aas
stos
lahf
scas
in
adc
stos
push
adc
daa
es
ret
adc
es
mov
jns
sub
testl
pop
mov
jb
loopne
nop
push
sub
lds
push
lods
mov
push
cli
mov
xchg
push
add
sbb
push
push
aad
fwait
xchg
imul
loopne
sub
jne
fwait
dec
loopne
and
mov
jne
pop
pop
lds
pusha
mov
int3
mov
js
xchg
push
test
outsl
xor
pushf
mov
jbe
cmpsl
aad
mov
jbe
add
jne
addr16
insl
pop
jp
js
or
test
scas
shrb
dec
subb
pop
mov
lea
cmp
dec
and
xor
lret
adc
add
add
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
fs
xchg
aad
rcrl
xchg
sub
jnp
dec
fstps
dec
inc
push
out
outsb
sub
xchg
jmp
jmp
jge
cmc
lcall
sbb
inc
testb
rcrl
cwtl
popa
movsl
dec
les
test
popa
loopne
xor
sub
nop
arpl
dec
inc
aas
and
and
in
mov
popf
cli
mov
sahf
adc
cwtl
lret
aas
xchg
outsb
aaa
in
xchg
out
out
cmp
mov
add
cltd
in
mov
pop
adc
inc
icebp
je
inc
adc
adc
fdivrl
into
cmc
pop
xchg
lods
lods
in
xchg
mov
xchg
inc
xor
jecxz
inc
call
mov
sbb
mov
fcoml
inc
xor
and
inc
xorl
loope
int
xchg
dec
pop
push
es
push
add
sub
frstor
cltd
jae
fs
pop
inc
in
shll
adc
jnp
sub
out
clc
xchg
sub
mov
xor
push
push
add
adc
xchg
xchg
clc
inc
insl
jbe
push
sub
lea
or
sbb
clc
aad
mov
sbb
outsl
insb
loopne
and
outsb
inc
out
dec
std
out
jnp
clc
lret
adc
inc
lret
dec
cmpsb
mov
testl
push
aam
cmp
mov
stos
popa
out
repz
ret
or
fistpl
cmp
sbb
push
lahf
dec
outsl
inc
fistps
fwait
sub
movsb
mov
das
adc
pop
push
dec
int
sub
or
or
sbb
ret
push
shlb
ljmp
push
xchg
popf
pushf
mov
xchg
hlt
xor
mov
js
mov
add
enter
add
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
fdivs
jo
jo
jo
mov
xchg
decl
sti
jnp
push
insb
push
cmp
inc
pop
cltd
std
sub
cmova
fadds
es
ret
test
mov
push
cmp
lret
mov
add
fcomi
add
inc
test
jae
cmp
cmp
xor
rclb
mov
js
popa
push
nopl
xchg
mov
mov
mul
sahf
adc
inc
movsl
mov
cmpsl
mov
sub
arpl
aas
nop
shlb
dec
cmp
les
mov
xlat
fcompl
cltd
in
daa
scas
dec
xor
sti
pop
mov
inc
inc
in
jmp
push
xor
in
adc
outsb
gs
scas
sbb
adc
mov
push
push
lahf
lcall
dec
mov
data16
pop
pop
daa
xor
aam
imul
pop
cmp
imul
pop
xchg
xor
inc
fistpl
fstpt
inc
push
call
xchg
push
hlt
or
jle
add
jge
add
movsb
in
mov
mov
scas
add
adc
pop
inc
cmp
mov
sti
cltd
repnz
push
fnstsw
aad
ret
mov
inc
stos
cmp
mov
xchg
cmp
stos
pop
jecxz
outsb
xchg
lods
xor
or
add
jmp
cltd
push
inc
daa
and
leave
enter
incl
push
jp
mov
jno
mov
sub
inc
insb
xchg
and
sub
les
int3
jecxz
xchg
or
dec
mov
sbb
mov
ljmp
scas
sbbl
pusha
stos
adc
or
lcall
mov
fstl
adcl
lcall
stc
icebp
add
or
call
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
mov
dec
jl
adc
fmul
lea
xchg
and
ljmp
xchg
xchg
cmp
test
xor
sub
enter
jecxz
sbb
gs
adc
mov
and
stc
out
mov
inc
dec
std
mov
cmpsb
add
loop
cmp
in
push
mov
loop
push
ja
sbb
pop
dec
jns
stc
shll
sti
add
lods
sbb
repnz
inc
jecxz
jecxz
pop
or
fisubrl
inc
in
sbb
mov
imul
sub
pushf
iret
lods
in
fisttps
call
dec
jno
test
xor
lds
and
mov
mov
popf
mov
shll
or
cmc
in
jmp
dec
xor
add
jne
inc
lea
mov
in
vcvttss2si
xlat
pop
je
loop
cmpsb
nop
pop
jmp
shlb
lock
dec
mov
jno
adc
ljmp
lahf
daa
lret
loopne
push
and
js
jmp
xchg
mov
test
ret
xor
xchg
test
mov
sub
outsl
dec
ret
mov
repnz
inc
pop
pop
cmp
jb
adc
add
pop
fidivs
jg
test
sub
nop
push
cltd
push
loop
jl
and
jp
rorl
insl
mov
enter
rcrl
cwtl
test
das
sahf
sub
je
loop
jns
fnstcw
test
imul
stos
dec
popa
push
clc
lcall
xor
xchg
xchg
pusha
data16
sti
outsb
test
push
sub
std
inc
insl
cmovg
cmpsl
xchg
adc
lret
xchg
out
adc
mov
bound
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
cli
jp
inc
loop
mov
in
cmp
pmaxub
xchg
pop
mov
push
mov
aam
fistpll
insb
rcr
push
into
scas
test
rol
in
shll
xor
in
loop
int
std
xor
imulb
pop
cmp
call
add
and
test
sub
inc
fsubl
lcall
cwtl
jecxz
xchg
push
jl
dec
ljmp
std
mov
xor
inc
fistps
test
mov
xchg
inc
je
mov
pop
xor
das
push
jg
or
dec
popa
mov
bound
data16
push
mov
mov
xchg
and
imul
adc
mov
sub
xchg
cli
lock
or
push
sbb
mov
cmpsl
or
loop
icebp
jg
jecxz
sahf
pusha
and
pop
ja
cmp
mov
popf
jecxz
pop
int3
movsb
or
add
loopne
push
or
es
jmp
lock
mov
cmp
repz
and
subb
push
sub
inc
shrd
mov
pop
stos
ja
les
imul
and
mov
push
leave
xchg
aaa
xor
mov
mov
jne
and
out
xchg
ds
or
adc
push
ds
pop
scas
mov
xchg
fisttpll
bnd
in
data16
cld
push
dec
or
jo
fwait
jle
loopne
pop
clc
dec
dec
std
js
dec
repnz
fwait
repnz
xchg
add
xor
in
aam
fwait
mov
or
jnp
mov
sbb
inc
popa
fs
push
mov
jg
fistps
out
aas
mov
fs
or
adc
cmpb
pop
xlat
push
add
sbb
insl
ds
xchg
mov
cmp
hlt
add
dec
shl
cld
aad
xlat
lahf
mov
mov
push
pop
sub
xchg
add
in
insb
sti
xor
sbb
movsl
mov
iret
and
ret
test
xor
adc
lds
push
push
pxor
dec
lods
jge
or
fwait
xor
jnp
sub
cltd
sti
aas
lds
adc
xchg
je
addr16
sub
cltd
fwait
pop
xor
mov
int3
add
cmp
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
mov
or
or
mov
std
mov
sub
mov
pop
inc
in
fldl
fsub
xchg
test
or
cmpsl
push
std
lock
push
cmc
lods
imul
pop
pop
dec
push
and
or
mov
sbb
push
les
sub
hlt
jbe
outsb
push
xor
adc
subb
notl
inc
das
mov
or
sti
dec
cmpsl
jns
push
sub
ror
stc
scas
scas
scas
sbb
push
add
sbb
cmp
push
mov
sub
bound
scas
xor
jmp
lock
cmpsl
fdivrl
xor
or
adc
pushf
mov
pop
push
pop
cmp
push
into
enter
in
call
fsub
jne
and
insb
mov
dec
stos
addb
cmpsl
pop
and
out
push
push
stos
cmp
aaa
inc
jo
aaa
jmp
rcr
adc
shrb
sahf
mov
stc
or
mov
orl
sub
dec
mov
fidivrs
mov
repz
and
insl
or
add
pop
iret
inc
jg
js
mov
pop
inc
sarb
repnz
xor
fiadds
cmc
and
std
push
fildll
sti
cmp
dec
sbb
sub
mov
xchg
lods
dec
cmp
les
lret
or
or
repz
and
jo
shrb
push
cmp
lahf
pop
cmp
test
je
sahf
jl
test
out
jmp
inc
and
cmp
mov
push
jne
jg
inc
shrb
mov
ja
inc
ja
shlb
jle
pop
mov
cmp
push
mov
or
jns
addr16
call
xor
rcr
or
jge
mov
or
lds
sbb
jmp
movsb
ja
sti
inc
dec
nop
shll
ss
jno
jb
add
cwtl
mov
cmc
pusha
push
dec
movsb
lods
je
pop
cwtl
test
or
ficomps
dec
or
sub
push
icebp
xchg
mov
insl
out
sub
pop
xlat
dec
mov
inc
divl
in
jnp
fisubrl
jns,pt
jo
jnp
lds
jle
loop
xchg
mov
fwait
and
shr
mov
ja
mov
mov
iret
mov
and
mov
mov
cwtl
aad
hlt
ficoml
push
xchg
iret
push
lcall
pushf
jb
add
cld
xor
add
jmp
fistl
loope
lds
add
in
in
cld
pop
jo
mov
adc
fcmovnbe
add
out
addr16
add
outsb
and
add
out
or
mov
add
dec
mov
insb
mov
inc
jl
add
pop
std
and
insl
xchg
gs
frstor
mov
ja
and
sti
jae
dec
stc
xor
sub
frstor
pop
dec
xor
out
insb
dec
cwtl
mov
daa
lods
jge
xchg
shll
push
and
push
ljmp
scas
cmc
mov
pop
filds
test
adc
cld
clc
add
mov
dec
xchg
mov
mov
pop
mov
cmp
push
ljmp
mov
push
test
std
aam
cmp
ret
std
cmp
call
jmp
jge
xchg
sbb
jle
lods
stos
xadd
mov
lret
push
shr
pop
cltd
cmp
add
mov
pop
sti
ret
int
push
lfs
lods
stc
inc
adc
dec
inc
pop
push
xchg
dec
dec
or
int3
xchg
inc
sub
out
push
shll
iret
or
xlat
std
jl
lds
push
aam
cltd
sbb
xorl
sbb
ljmp
lcall
jmp
mov
cli
jmp
xlat
ss
lcall
push
pushf
clc
dec
xor
inc
jge
adc
jo
sbb
mov
fsubl
mov
popf
push
cmpb
cmp
movsb
out
jns
cwtl
and
jg
mov
imul
push
neg
das
sub
out
ljmp
push
ret
icebp
and
jae
push
push
add
pop
jl
xchg
or
in
jl
out
xor
xlat
dec
cld
std
pop
add
xchg
dec
add
sub
lahf
popf
push
stc
fiadds
mov
test
mov
decl
jb
js
mov
scas
bound
repnz
sbb
mov
adcl
cmc
sbb
sbbl
jae
mov
inc
fwait
mov
mov
or
fs
or
mulb
mov
les
jnp
insl
popf
jg
movb
insb
lods
add
cmp
xchg
out
mov
adc
jne
and
in
jge
testb
push
mov
jg
inc
dec
sub
or
fimuls
testb
push
out
cs
and
and
xchg
bound
leave
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
ja
dec
cmp
jo
jle
jo
and
mov
fwait
mov
in
ja
cltd
push
jmp
sbb
inc
test
pusha
jl
or
scas
jle
adc
adc
xor
cmp
lods
test
jbe
xor
mov
aaa
lods
xchg
rclb
and
leave
in
pop
fidivrs
loop
xchg
inc
adc
inc
ret
xor
pop
and
ss
mov
push
mov
test
jae
and
mov
notb
testb
sub
push
stos
loope
xchg
icebp
and
pop
add
pop
pop
mov
ljmp
repnz
roll
fsubs
icebp
cmpsl
lods
mov
mov
add
je
jge
sbb
ljmp
sbb
mov
cmp
fs
aad
lds
bound
xchg
ja
xor
out
mov
push
mov
movsb
scas
push
stos
popf
sbb
dec
adc
fucomip
jg
loop
sub
push
jno
ds
cmpsb
jle
jo
popf
lret
aaa
cltd
lds
and
pop
cs
js
fdivl
pusha
int3
stos
js
icebp
pop
xchg
mov
fimull
xor
jge
fistpll
dec
sbb
mov
dec
fs
aad
repz
imul
jns
inc
fmul
loope
aas
aas
jbe
adc
jge
sarl
dec
push
jnp
fs
outsb
adc
daa
cs
cltd
fadds
mov
lods
sbb
sbb
adc
lods
sti
stos
stos
xlat
xchg
js
negb
mov
and
sbb
insl
jno
add
inc
jnp
jbe
lret
icebp
and
in
or
rorb
outsb
sub
pop
lret
dec
push
cmpsb
scas
and
sbb
das
repnz
push
jns
dec
cmp
shl
jmp
xchg
pop
or
daa
push
inc
test
cs
pushf
fsts
xor
dec
cmp
in
and
icebp
out
in
cmp
ror
dec
and
mov
subb
sbb
xor
negb
lea
mov
std
sbb
mov
add
mov
fistpl
cmpsl
or
push
jo
das
cmp
ret
rolb
ja
arpl
jne
mov
in
movb
pop
push
hlt
movsl
mov
mov
and
addr16
mov
or
mov
mov
push
jge
rcll
imul
rclb
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
jo
jge
jo
icebp
aaa
jae
leave
cltd
mov
inc
cltd
andl
cld
and
mov
cmp
and
jge
jecxz
imul
jo
repnz
lods
outsb
inc
lahf
test
sbbb
push
fadds
sub
push
pop
aas
popf
mov
cmp
mov
daa
pushf
cmpsb
aam
loop
jle
lret
pusha
fisubs
mov
fnstsw
dec
mov
lods
mov
and
das
in
fnsave
xchg
mov
repz
repnz
shl
or
adc
mov
dec
imul
fists
outsl
mov
or
loope
out
insb
xchg
nop
cmc
adc
mov
clc
outsb
cmp
inc
pushf
push
sub
enter
mov
jb
cmp
in
imul
ljmp
jae
dec
es
push
scas
lock
inc
fwait
stos
sbb
xor
and
inc
or
pop
jne
out
and
or
mov
and
xchg
shlb
push
lret
fisubl
lods
adc
imul
in
cmp
push
or
gs
mov
scas
xor
dec
outsl
push
clc
movsl
sub
movsl
jg
or
push
pop
cmpsb
in
jmp
sbb
frstor
jno
jl
jns
aad
dec
adc
mov
mov
pusha
cmc
out
add
mov
scas
dec
sub
rclb
es
add
sbb
fwait
subb
adc
push
pop
and
jmp
dec
mov
adc
call
jle
loop
rorl
cmp
pop
pop
push
add
lods
add
or
xor
testb
xchg
faddp
out
xchg
and
jnp
mov
dec
jne
roll
xchg
lods
negb
xchg
ret
sti
loope
addl
inc
stos
das
arpl
xor
dec
cmp
lods
outsb
push
mov
test
lret
aad
cmpsl
test
aad
and
lret
pop
and
mov
stc
in
mov
dec
rorl
sti
icebp
int3
lahf
or
scas
mov
add
mov
mov
movsl
xchg
in
inc
cmpsl
pushl
pop
xchg
or
jne
sub
sti
stos
into
xor
cmp
popf
cmp
imul
jnp
iret
popf
test
pushw
xor
sti
jb
bound
cmp
cmp
mov
push
push
ret
dec
inc
mov
movsl
jne
push
out
xlat
lret
mov
inc
mov
sub
fsubrl
or
sub
xlat
out
mov
and
in
adc
in
icebp
in
lods
cmc
and
clc
cwtl
or
dec
scas
pop
pop
cmpsl
rorl
kmovb
dec
dec
repnz
fs
icebp
movl
int3
dec
lods
scas
pop
or
push
or
xchg
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
pusha
lds
jo
cmp
dec
out
add
sahf
push
xor
dec
loopne
ja
or
stos
adc
xor
mov
xor
mov
and
jae
or
xchg
popf
aaa
and
movsl
sub
addr16
repnz
inc
pusha
jl
and
js
fdivl
xor
lods
sarl
int
jnp
push
add
dec
inc
add
push
sub
test
lock
xchg
pop
nop
mov
mov
fwait
sbb
cmp
push
adc
sbb
data16
push
inc
push
pop
leave
jmp
xorl
test
xchg
mov
mov
call
jg
rolb
loopne
lea
xchg
push
into
cld
pop
sbb
cmp
testl
dec
testl
daa
dec
xchg
jno
and
repnz
js
pusha
addr16
sbb
aad
push
cmp
hlt
and
xor
repz
notrack
in
imul
enter
cmp
test
push
jmp
mov
push
dec
insb
fld
push
or
cmpsl
xchg
das
jb
lods
sub
mov
xchg
sahf
mov
push
test
sahf
ds
adc
scas
mov
rcrb
push
jne
or
add
mov
sbb
das
stos
adc
mov
lds
mov
sub
push
xchg
sub
pop
pop
lea
sbb
mov
xchg
mov
adc
xchg
dec
lods
rcrb
xor
repnz
xor
mov
mov
inc
cmp
imul
imul
or
stos
and
cltd
cmpsb
cmp
sbb
andb
stc
stos
mov
or
and
je
sub
jecxz
sbb
mov
ja
add
push
cltd
sahf
ret
inc
xchg
bound
xchg
inc
pushl
lahf
jne
and
js
or
jle
mov
bnd
mov
pop
mov
xchg
mov
dec
into
jae
sub
inc
clflush
das
cmp
ja
push
xchg
scas
inc
xchg
push
mov
int3
jb
push
lea
mov
loopne
jg
mov
push
call
sahf
xchg
dec
sbb
stos
jno
adc
movsbl
mov
mov
xchg
mov
call
inc
mov
dec
loop
lock
inc
in
sti
mov
xor
cmp
sbb
mov
imul
xchg
cmp
sub
push
in
aas
dec
inc
cmp
pop
aad
add
in
inc
cmp
in
jl
mov
mov
mov
and
mov
adcb
pop
test
mov
add
mov
pop
xor
jne
mov
pop
push
cmp
jle
fcmovbe
xchg
fadds
mov
xadd
xchg
push
psubq
xchg
pop
orl
shr
dec
sahf
fadd
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
pop
repz
jo
jge
jo
mov
fildll
xchg
push
les
mov
pop
rol
jbe
dec
ss
sbbb
push
fwait
repnz
int3
jmp
cmpsl
inc
add
cmp
or
imul
mov
loopne
cmp
and
push
jle
pop
sbb
nop
cmp
out
or
push
lods
ljmp
aaa
gs
arpl
shll
or
mov
filds
ret
mov
pop
jmp
fisubl
lods
cmp
and
aam
sub
xchg
stos
test
sbb
lahf
mov
hlt
push
inc
ljmp
fwait
adcl
out
mov
mov
andb
push
and
mov
xchg
pop
mov
mov
cmpsb
aam
fnstcw
test
xor
jb
mov
adc
adc
pop
fisubrs
lret
loope
or
xchg
push
cmp
adc
dec
movsb
pop
loop
pop
sbb
fidivl
inc
xchg
cmp
mov
mov
mov
jg
push
push
sub
sbb
repz
or
bound
je
inc
cmp
cmpsb
xchg
enter
repnz
lcall
cli
pop
sbb
adc
cmp
xchg
adc
sbb
and
mov
or
aam
pop
xor
rcrb
xor
push
insl
bnd
aad
jns
jns
int3
test
sub
jne
inc
test
xchg
loope
adc
ret
jnp
inc
pop
jbe
sti
adc
dec
in
jne
cmp
clc
lds
add
push
sub
ja
sti
push
ljmp
cld
and
or
mov
cltd
xchg
cltd
sbb
and
test
xor
cltd
push
adc
mov
adcl
jbe
sarl
ds
mov
imul
cltd
insb
sub
mov
mov
xchg
push
and
mov
add
or
push
aad
pop
dec
fs
shr
mov
ds
add
or
and
push
div
inc
rcrl
mov
jo
inc
mov
loope
fdivr
ficoml
pusha
cmp
sti
mov
leave
sub
cltd
into
xor
and
cmp
mov
pop
shlb
pop
and
add
lea
dec
psrad
cmp
and
mov
and
jae
add
popf
or
cmp
xor
inc
mov
sahf
outsl
inc
mov
mov
adcb
adc
cmpsb
loop
jmp
popa
lock
mov
inc
cmpb
fnsave
and
sub
pop
xchg
lret
test
cwtl
ja
dec
clc
push
jb
cmp
and
pop
cmpsb
out
insb
push
push
nop
cmpsl
nop
inc
lea
out
xchg
das
pop
loopne
mov
loope
out
dec
pushf
clc
leave
fcmovb
mov
pop
mov
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
unpcklps
jo
cmp
into
push
hlt
pop
sbb
cs
add
xor
xchg
das
mov
pop
xor
out
mov
push
lds
cmpsb
pop
add
dec
sahf
cli
jno
pop
dec
lods
push
ljmp
and
mov
add
outsb
addr16
xchg
jnp
sti
sub
arpl
test
and
in
data16
mov
pushf
les
jno
push
ljmp
int
dec
aad
jmp
push
rolb
mov
popa
out
jp
shlb
add
sbb
fcmovu
je
int3
loopne
mov
xchg
popa
jl
jle
loope
lret
pop
stc
sbb
gs
mov
xchg
cmpsl
push
fisttpll
out
sub
cmp
out
and
cmpsb
lret
sbb
lock
xchg
or
adc
out
clc
lret
mov
mov
pop
and
arpl
push
mov
mov
insb
xchg
dec
mov
dec
mov
inc
lcall
dec
movsl
gs
jle
testl
aad
int
sub
int
mov
xchg
jnp
jbe
test
lret
dec
aaa
std
insb
testl
sub
mov
and
mov
cwtl
mov
test
sub
lret
call
in
mov
movsb
mov
rolb
movsl
test
push
lret
pusha
xor
xchg
fdivp
out
xchg
add
fdivrl
loopne
scas
mov
cmc
xchg
andb
icebp
add
lods
stos
es
xchg
icebp
push
adc
mov
push
cmp
fistpl
inc
outsb
add
cmpl
mov
or
addr16
or
int
nop
mov
aad
loop
jo
test
sbb
pop
out
mov
test
push
pop
mov
push
sub
dec
xchg
fwait
ret
bound
cmpxchg
imul
and
mov
and
imul
sub
mov
and
ret
adc
loop
or
ljmp
dec
ja
jnp
fstl
pusha
sbb
test
jnp
add
pop
push
fwait
daa
outsl
dec
jno
clc
pop
mov
call
cmp
es
mov
or
stos
pusha
push
pop
jmp
ja
push
cmpsb
pop
insl
mov
in
cs
aas
das
pop
push
in
arpl
mov
push
arpl
popa
inc
xlat
jo
adc
adc
out
lahf
push
call
stos
push
mov
aaa
pop
lahf
dec
ror
aaa
fucomip
mov
xchg
push
jle
lock
clc
gs
fdivrl
call
mov
cmp
add
jne
into
xor
jo
mov
cld
in
push
inc
sti
cmpsb
mov
mov
jge
fnstcw
cmp
das
insb
mov
nop
ja
test
adcb
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
enter
or
jo
cmp
cmpsb
ret
pop
jg
dec
pop
ret
xchg
addl
jbe
sbb
aad
push
adc
out
lcallw
movsl
xor
inc
pop
out
sbb
pop
cmp
push
cmc
mov
push
jae
sub
push
daa
mov
lods
inc
and
pop
xor
les
iret
mov
bound
and
inc
fidivl
mov
pop
jecxz
test
lods
xor
movsl
punpckhbw
jle
enter
loopne
xor
aam
dec
dec
cli
repnz
clc
xor
pusha
pop
push
repnz
mov
cmp
fists
mov
and
aam
pop
pop
sbb
and
mov
or
xchg
pop
scas
mov
xchg
cmp
push
mov
inc
sub
inc
mov
mov
gs
push
das
inc
pop
xor
in
mov
pop
mov
sub
jp
stos
ficomps
movsl
xchg
js
xchg
imul
mov
cmp
xor
and
imul
push
mov
cld
and
mov
mov
iret
xor
pop
jne
popf
iret
orl
cmp
pop
bound
clc
stc
fwait
out
adc
and
sub
jmp
in
mov
aad
hlt
cmp
ja
cmpsb
sarl
insl
nop
sbb
or
push
nop
mov
push
gs
cmp
adc
mov
sar
lock
out
push
int3
movsb
lock
inc
sub
test
sbb
mov
inc
jecxz
repz
loop
fwait
enter
movsl
cmpsl
push
xor
lret
dec
or
loop
gs
inc
xchg
xor
stos
jmp
lods
cld
xchg
jle
add
cmovs
icebp
cmc
pop
into
rclb
mov
mov
out
fcomps
mov
jns
rcrb
or
or
mov
or
pop
adc
sbb
int
mov
and
fwait
or
in
sub
push
xlat
lret
cmovs
stos
inc
xchg
dec
sbb
sub
add
xchg
repnz
enter
ja
xchg
push
aad
jne
cli
push
pushw
pop
pop
loop
xchg
xor
std
push
dec
icebp
push
and
loopne
sbb
jns
inc
inc
mov
fcmovnb
mov
out
pop
das
arpl
xchg
popa
ss
add
adc
pushf
push
jmp
sti
xor
lret
jae
loopne
fsubs
lret
dec
mov
push
mov
gs
out
and
dec
and
outsb
pop
pop
scas
hlt
nop
mov
shl
rorl
add
mov
mov
jmp
xor
jg
add
fwait
call
mov
sbb
fisubl
add
in
gs
scas
cmp
fstl
mov
mov
push
adc
mov
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
push
ljmp
pop
leave
and
cmp
sub
and
lcall
insb
dec
push
shrb
mov
pop
mov
dec
and
mov
jle
sbb
sbb
push
pop
xchg
add
rcll
hlt
scas
pop
sub
cwtl
and
mov
xchg
push
jae
imul
shlb
xchg
dec
pushf
lea
pop
dec
pop
pop
lret
sbb
ja
inc
sbb
cmpsb
pop
jne
xor
stos
bound
fstpl
div
out
pop
cmp
and
xor
xchg
push
cmp
outsb
push
jl
negl
test
lock
xchg
and
cmp
push
mov
mov
fucom
out
or
mov
repnz
mov
lods
xchg
cltd
mov
or
ficompl
test
shlb
jmp
pop
push
push
jns
jmp
dec
mov
outsb
cltd
sbb
pop
dec
inc
sub
into
cmp
ret
pop
xchg
std
daa
cmp
xorl
sbb
jo
jne
je
xchg
into
sbb
cmp
ja,pn
aaa
data16
jge
lret
pop
stos
into
pop
in
dec
cmpsl
jl
dec
push
lret
xor
push
xlat
leave
xchg
xlat
or
mov
jb
lret
adc
jecxz
lods
sbb
mov
push
in
and
inc
fwait
inc
outsb
sub
mov
in
loope
test
push
xchg
cmpsb
shll
dec
sbb
pop
mov
out
dec
jbe
loope
or
sub
fsts
testb
xchg
sub
lock
mov
mov
aaa
mov
jae
jmp
addr16
and
mov
xchg
inc
jge
add
stos
popf
add
adc
and
mov
and
arpl
mov
ret
sbb
out
rol
adc
xor
add
inc
mov
fwait
inc
fcoms
xchg
mov
sub
les
push
xor
xchg
std
mov
jnp
cli
push
rcrl
fiaddl
sub
inc
sub
rcrb
data16
mov
dec
test
push
adc
mov
jp
sub
xorb
test
mov
add
loopne
pop
lret
inc
sarb
dec
inc
outsb
mov
popa
mov
pop
js
mov
sti
mov
loope
arpl
daa
mov
ljmp
or
or
loop
scas
ds
movsl
roll
mov
xlat
pop
inc
add
addl
sbb
xchg
or
ds
push
adc
arpl
cwtl
int
or
xchg
movsb
xchg
jle
xchg
addr16
scas
inc
pop
jno
lret
sbb
sahf
mov
xor
into
xchg
imul
mov
push
mov
les
shrb
add
aad
out
dec
insl
xchg
sub
movsl
mov
jnp
inc
jno
cmp
pop
in
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
sbb
jo
cmp
iret
mov
mov
inc
inc
xor
or
stos
pushf
jle
scas
jecxz
and
jge
lds
sbb
mull
scas
daa
insl
js
push
inc
ficoms
sbb
cli
sub
out
stc
fsubr
jmp
sbb
adc
mov
jno
out
mov
jle
ficompl
mov
pop
jmp
cmp
adc
fidivrs
dec
mov
out
push
xchg
in
and
mov
sahf
or
data16
push
pop
inc
jmp
inc
jl
and
popf
jmp
xchg
inc
xchg
jmp
dec
push
add
mov
pop
xchg
adc
lret
mov
ret
gs
lea
mov
in
pop
xchg
icebp
push
divl
sti
and
das
jo
ds
sbb
cltd
aas
bswap
xor
scas
pusha
mov
fucom
jecxz
outsb
dec
hlt
insl
mov
pusha
fwait
mov
adc
sarl
mov
cld
or
rorb
mov
adc
mov
in
jne
aam
xor
cmp
add
mov
sbb
mov
dec
scas
cmp
sti
or
test
mov
add
mov
arpl
xchg
scas
or
xchg
push
ret
push
pop
mov
aam
xchg
cli
sub
js
jmp
ss
push
pop
cld
push
push
pop
arpl
pop
sbb
popa
jmp
loop
and
push
jecxz
sub
loope,pt
mul
fldl
mov
cmpsl
and
sbbl
sbb
pop
ds
pushf
and
sub
xchg
lds
pop
xorl
jb
jp
sbb
out
pop
fs
dec
or
insl
cmpsb
push
pop
cli
sbb
rorl
sbb
mov
jne
mov
js
push
cld
inc
pop
jae
xchg
cwtl
imul
inc
in
adc
imul
adc
adcb
sbb
orl
and
in
je
test
xor
cwtl
mov
adc
outsb
inc
pop
pop
roll
movl
lcall
push
jecxz
fcomip
jle
les
inc
in
jp
lret
xor
cltd
ret
jmp
movsb
inc
imul
jmp
lahf
inc
fwait
movsl
push
pop
lahf
pop
add
pop
mov
or
cwtl
push
xchg
les
push
xchg
adc
dec
enter
imul
les
gs
mov
mov
dec
out
dec
inc
fistps
lods
lods
xor
sub
jp
mov
or
bound
dec
out
push
les
pusha
inc
jp
mov
repnz
sbb
adc
push
ficoml
or
filds
or
mul
pushf
cmp
jmp
iret
movsb
cmp
fnsave
jge
loope
scas
xchg
add
mov
sub
es
xchg
push
push
pop
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rorl
jo
cmp
push
add
dec
add
std
jns
scas
xor
push
rcrl
sub
push
sbb
in
pop
lahf
cmp
sub
cltd
int
push
pop
inc
push
aad
inc
test
out
sub
repz
mov
xchg
les
cmpsl
loop
push
das
out
bound
sub
add
aas
sub
cmp
daa
mov
sbb
fnstcw
call
lea
jmp
push
loopne
mov
insb
fisubs
xor
iret
cmp
xchg
add
pop
mov
test
add
inc
pop
loop
pusha
dec
xor
div
rclb
adc
jle
dec
xchg
push
or
mov
adc
pop
in
mov
push
mov
test
push
and
or
or
adc
cmpb
lock
je
or
push
jmp
push
pop
pop
cli
push
lea
loopne
mov
jbe
jecxz
cmc
shlb
das
xor
mov
mov
jl
cmp
jns
push
rclb
in
lock
lret
fmulp
jmp
test
lcall
mov
cmp
dec
insl
divl
sub
mov
adc
push
cmc
nop
lret
daa
mov
push
je
jb
jns
pop
mov
addb
pushf
jmp
push
sbb
push
repnz
xor
xchg
xchg
xchg
add
int3
rol
sti
inc
jl
and
ljmp
and
xchg
enter
imul
sbb
or
push
fmul
and
dec
mov
push
addl
or
adc
jmp
mov
pop
arpl
xchg
inc
pop
or
pop
sbb
and
lret
and
idiv
jmp
push
stc
and
cli
ret
jl
and
loopne
fadd
ret
jp
dec
mov
xchg
hlt
jle
jl
sbb
je
hlt
rcll
sbb
sar
outsl
je
sbb
jae
push
inc
addr16
nop
imul
push
push
bound
push
or
repz
pop
or
imul
mov
in
cmp
repnz
movsb
add
ljmp
fsts
inc
ds
cmc
mov
aas
stos
sub
mov
aam
lock
xor
lds
mov
in
jnp,pt
sbb
jne
arpl
mov
mov
xor
das
mov
sub
lock
adc
jmp
das
pop
fstpt
mov
imul
ljmp
popf
pop
test
mull
and
movsb
fidivl
outsb
stos
loopne
call
cmpsl
daa
outsb
lock
aam
in
pop
mov
int
push
cmc
in
add
lods
leave
xor
fs
rcr
pop
insb
pop
rorl
inc
pop
lahf
jmp
jb
test
cmp
andl
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
pop
shrb
aaa
jo
stos
jle
jo
test
xor
sbb
fwait
jge
xor
insb
fcomi
ret
pop
mov
inc
popa
inc
jns
jbe
pop
out
mov
dec
mov
and
fnsave
inc
lods
adc
scas
add
mov
cld
adc
hlt
jb
add
ffreep
std
pop
mov
inc
mov
sbb
xchg
jmp
stos
lret
adc
mov
lea
roll
cld
add
test
xchg
adc
mov
repnz
sub
mov
imul
push
cs
in
int3
add
shlb
inc
jno
mov
mov
addb
lret
push
jp
adc
popf
test
loop
mov
es
or
xchg
sbb
addr16
cmc
jo
dec
xor
imul
repnz
lds
cmc
jnp
repz
adc
adc
or
icebp
xchg
std
xor
shll
inc
inc
add
jecxz
mov
mov
sub
jle
std
mov
sarb
aaa
jg
mov
push
repnz
mov
popa
test
fcoms
dec
pop
push
js
test
xchg
dec
adcl
jp
jb
and
popa
pop
scas
je
lret
mov
push
push
dec
ja
stc
adc
shr
and
lock
ds
es
call
lret
hlt
cs
adc
cmpsl
push
adc
sbb
ja
aad
je
fcmove
je
cmpsb
stos
pop
pop
leave
jle
and
lock
dec
jmp
xchg
jnp
cmp
ljmp
cs
das
cmc
push
loope
dec
dec
mov
mov
inc
in
push
add
iret
and
gs
mov
inc
out
push
sbb
xchg
or
ja
xchg
rorb
dec
mov
rorl
mov
jle
jg
aam
pshufw
xchg
sbb
inc
or
inc
push
push
lret
dec
insb
push
jge
out
mov
repz
xchg
mov
les
gs
repnz
cli
xor
pop
add
cmp
push
push
adc
or
cmp
mov
dec
mov
mov
lcall
push
cs
out
jae
scas
mov
adc
sti
cmp
test
add
jae
xchg
test
and
out
out
sub
mov
xor
daa
sbb
out
lods
sahf
js
je
hlt
lods
jae
stc
popf
push
mov
movzwl
and
mov
jmp
ja
and
dec
xchg
imul
xor
jo
xchg
imul
or
sub
xor
pop
sub
mov
mov
inc
push
pusha
clc
jns
mov
mov
pop
je
push
pop
mov
pusha
pop
loope
inc
adc
in
cld
pop
addr16
cld
jo
jecxz
mov
fwait
ds
jne
fsubl
pop
jb
and
jno
movsb
shrl
js
sarb
push
cmc
lret
mov
shlb
popf
jno
fmull
cmc
js
les
loopne
push
and
pop
jo
in
jl
mov
cmc
jecxz
push
mov
add
cs
lods
cmc
sub
ret
dec
sbb
mov
sbb
addb
orl
xchg
loop
ficoms
or
pop
and
ss
xor
stos
movsl
and
addr16
jg
inc
cld
sbb
inc
push
nop
adc
data16
sbbb
es
jmp
hlt
pop
inc
mov
push
add
insb
imul
mov
sbb
roll
mov
sbb
cmc
mov
mov
mov
in
pusha
inc
xchg
sar
sarl
cmpsb
pop
fwait
jno
js
test
mov
test
add
add
push
cli
and
sbb
orl
push
aad
adc
push
xchg
fldlg2
test
lcall
inc
fsubrl
fbld
lcall
sub
cmp
xchg
sbb
gs
push
and
cmp
push
jmp
ljmp
loope
push
mov
jecxz
in
cmpsb
xor
lret
roll
mov
push
xchg
push
push
loop
push
js
inc
test
in
dec
pop
lea
fcom
fwait
jns
add
mov
mov
notb
aaa
addl
sbb
outsl
hlt
mov
jnp
stc
mov
test
mov
adc
inc
lahf
xor
out
fstpl
loope
xor
or
adc
loope
ret
mov
mov
sbb
jle
shll
nop
fnstsw
pop
pmaxub
adc
icebp
cltd
in
fimuls
jle
jo
sbb
aam
dec
test
int3
mov
fbstp
cmp
jo
sub
dec
loop
pop
pusha
cmp
lds
loope
adc
hlt
mov
dec
pop
dec
test
adc
movsl
xchg
jg
pop
in
or
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
cmp
test
jo
stos
jle
jo
in
mov
jnp
lock
xchg
or
dec
or
stos
leave
mov
sti
icebp
dec
push
lcall
jle
daa
pop
fnstenv
pusha
xchg
test
jno
xor
push
lods
add
out
notb
mov
cli
sub
out
test
and
lahf
xor
inc
mov
je
cwtl
jle
inc
cli
dec
mov
ljmp
ret
cmovo
pop
adc
jecxz
cwtl
mov
insl
cwtl
jbe
loopne
lods
lret
or
xchg
shrl
sbb
xchg
inc
mov
pop
add
scas
pop
call
mov
mov
clc
test
add
adc
xchg
adc
ret
cmp
push
frstor
sbb
cmpsb
arpl
std
lret
ror
push
jo
inc
xchg
aas
jnp
lods
sub
pop
add
inc
pop
decl
fcomps
sbb
fwait
dec
and
xchg
lock
mov
push
xchg
or
ss
sbb
addl
cmc
and
popf
cs
jmp
out
cmp
push
pop
sti
adc
lods
lds
adc
sbb
fdivl
stos
push
or
icebp
sub
rclb
xor
das
jle
fcomi
inc
sahf
jb
aam
cmpsl
or
or
lods
mov
mov
push
popf
mov
notl
nop
cwtl
cmp
mov
mov
movsl
daa
jb
mov
cmp
imul
lahf
push
sti
lcall
dec
xorb
mov
movsb
mov
sbb
push
cmp
xor
iret
jl
outsl
mov
je
cmpsl
popa
stc
insl
push
adc
sbb
dec
and
cwtl
pop
in
adcl
pop
dec
cld
jmp
lahf
mov
adc
jb
xchg
addr16
mov
push
inc
aas
fistpll
js
or
popf
insl
into
and
xor
xchg
mov
ja
loope
lock
and
pop
inc
dec
inc
lcall
jmp
in
bound
xor
push
or
lret
popf
jns
xor
cmp
nop
js
pop
mov
dec
and
jp
or
aaa
mov
out
mov
ljmp
cltd
mov
xor
or
and
gs
loope
scas
and
add
or
fsubrl
hlt
and
cltd
outsl
outsb
das
push
shlb
add
mov
jl
lds
sbb
pushf
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
pushf
int3
js
aas
jo
cmpsl
jg
jo
iret
or
shrb
push
loopne
sub
shll
or
mov
pop
ret
and
lods
push
loopne,pn
stc
fwait
push
repz
in
or
jge
mov
add
out
ret
mov
add
sbb
jnp
mov
fcoms
clc
xchg
sbb
aam
inc
xor
cmpsl
out
popa
outsb
mov
sbb
pop
aad
repnz
xor
pop
xchg
test
out
int3
lret
mov
jo
pop
dec
orl
subl
pushf
mov
pop
es
inc
and
repz
inc
xchg
js
push
insb
xchg
scas
jb
inc
imul
outsb
jmp
mov
push
lret
mov
arpl
loope
sub
pop
sti
jbe
cmp
in
rcr
adc
sti
jg
jne
imul
in
xor
sbb
invd
jnp
nop
xchg
out
in
imul
ljmp
imul
add
xchg
pop
sbb
addr16
pop
lea
jmp
sub
pop
jmp
arpl
push
push
mov
idivl
iret
add
dec
inc
jne
xchg
in
sub
sbb
push
mov
push
out
mov
sbb
adc
cmpsb
imul
stc
shl
add
and
sub
xchg
adc
or
sub
sub
sbb
dec
lea
loopne
fldt
fnstcw
pop
lock
in
cmp
fiadds
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
jns
jo,pt
cmpsl
jg
jo
cli
hlt
fcoms
stos
pop
mov
mov
mov
fisttpll
xchg
mov
add
stos
xor
sbb
inc
sbb
in
jp
movsb
sbbb
fwait
push
mov
inc
inc
push
cmp
das
cmp
scas
xchg
shrb
jmp
pushf
pushf
mov
rol
pop
xor
add
cs
add
and
test
inc
test
adcb
push
fs
cmp
jo
or
add
repz
mov
xor
mov
add
int3
aaa
sub
cmp
pop
decb
adc
add
scas
adc
or
pop
fildll
jo
sbb
xor
lcall
jl
pop
movsb
pushf
pop
and
push
aad
sbb
lahf
adc
cs
sub
hlt
mov
push
pop
jg
decb
xchg
sub
xchg
mov
cmpb
cli
cmpsb
sub
push
mov
rolb
or
or
adc
cs
in
jle
fwait
and
jl
pushl
je
xchg
and
sbb
insb
jo
mov
xor
rcll
arpl
das
in
call
jbe
xor
pop
scas
ret
or
pop
inc
pop
ds
ljmp
ficompl
pop
adc
in
add
push
pop
sub
xchg
arpl
xchg
jbe
out
pop
mov
add
push
movsl
imul
mov
sub
popa
mov
lret
pop
mov
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
pop
test
mov
jo
jg
jo
jns
icebp
sub
mov
or
mov
insb
xchg
in
jge
dec
nop
movsl
test
sti
sub
das
adc
or
dec
xchg
mov
cmp
ja
inc
sub
jp
mov
lds
dec
adc
cmp
pop
cli
mov
xchg
out
dec
jle
cmp
cwtl
pop
adc
pop
test
ds
jge
lahf
ret
xor
add
dec
icebp
and
and
out
sub
jl
mov
lcall
fsubr
sub
adcb
or
subl
aam
movsl
test
dec
inc
cmp
shl
out
push
mov
push
out
cwtl
repz
orb
jo
mov
std
xchg
out
sbb
sub
mov
pop
mov
int
ljmp
push
pop
in
popf
inc
cmp
inc
dec
xlat
lds
sbb
imul
cmc
dec
mov
pushf
andb
add
pop
jmp
nop
arpl
xchg
xchg
jmp
add
fdivs
mov
out
cmp
jne
lahf
ret
fldcw
je
sbb
fdivl
mov
inc
orb
ret
into
das
inc
xchg
into
lahf
fnsave
and
lret
jge
jo
ret
into
inc
xor
cmp
xchg
jnp
jno
jecxz
test
jmp
adc
icebp
arpl
dec
push
jbe
adc
or
adc
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
xchg
popf
nop
sti
xor
jo
loop
jo
inc
mov
xor
enter
lods
ret
inc
pop
sbbl
ss
pusha
sub
aas
and
xchg
in
and
loop
sbb
imul
adc
inc
jge
and
dec
adc
repz
or
lods
int
sub
out
lock
dec
xchg
pop
pop
mov
hlt
push
es
mov
das
and
enter
xchg
pop
and
sub
xor
ret
xchg
ret
mov
outsl
sub
outsb
mov
push
xchg
ret
xchg
and
stc
add
scas
ret
add
popf
cmp
jno
lahf
loope
leave
in
inc
cwtl
and
out
hlt
inc
xor
mov
mov
enter
sti
push
ret
mov
xlat
adc
jne
filds
xlat
sbb
gs
fisubrl
push
pop
dec
push
jg
add
mov
outsl
push
inc
out
jle
sbb
pop
or
push
and
mov
dec
xor
mov
je
push
mov
push
cltd
mov
and
mov
xor
sub
cwtl
dec
repnz
leave
lock
mov
xchg
jp
adc
enter
shll
rorl
pop
add
mov
leave
or
ss
popf
mov
cmp
sbb
push
orb
dec
cmp
enter
sbb
shrb
pop
in
sbb
rcr
ds
mov
xchg
xor
aad
out
mov
pavgb
sahf
pop
inc
leave
shrl
sub
mov
pop
lds
sub
mov
jl
daa
cmp
xchg
pop
push
fistl
jecxz
loopne
xchg
xor
add
fstpl
lock
iret
out
outsl
test
cmpsl
or
popf
in
mov
inc
sar
inc
arpl
push
sbb
lcall
mov
sbb
div
sub
cmp
sbb
xor
xchg
int
xchg
ja,pn
sbbl
push
jmp
int
das
test
icebp
data16
mov
pop
mov
or
push
adc
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
sbb
movsw
cmp
loop
jo
cmp
mov
mov
inc
imul
fwait
mov
sbb
pop
pop
xor
add
inc
and
dec
inc
test
aam
cmpb
int
js
push
mov
xchg
adc
mov
movntq
aad
cmpsl
andb
int3
dec
inc
aad
mov
xor
mov
dec
xchg
xchg
inc
fdivrs
sbb
cmp
loopne
jno
sub
sub
push
add
stc
add
push
movsb
fs
loope
and
mov
out
loope
lret
insl
sub
sub
dec
xor
mov
xchg
mov
dec
cmp
fnstsw
iret
inc
xchg
jecxz
cwtl
push
pop
jl
jg
sub
xchg
int
push
rcll
lods
imul
bound
mov
adc
sti
aaa
out
sub
ljmp
push
and
mov
insl
std
xor
mov
sbb
mov
xor
fstpt
adc
fdivrs
in
jp
sub
mov
out
xor
mov
dec
sub
pop
loope
insb
dec
mov
notl
xor
mov
jp
inc
fdivs
bswap
mov
xor
inc
sub
cmp
jge
lock
jle
mov
lods
stc
into
das
flds
add
mov
repnz
cltd
fcmovnbe
pushf
pop
gs
repz
push
lds
outsb
adc
int
push
mov
sub
dec
dec
sub
pop
pop
add
dec
test
mov
insb
lret
xlat
dec
int3
mov
je
dec
scas
xchg
ret
cmc
es
adc
adc
cmp
and
cld
mov
xor
adc
push
inc
pop
sbb
out
orl
imul
pop
daa
dec
cmp
and
jl
inc
sub
cmp
loop
add
dec
jge
mov
clc
inc
add
mov
das
mov
dec
and
insl
inc
inc
mov
inc
in
or
pop
sbb
mov
push
pop
out
pop
mov
push
xchg
pushf
movsb
and
negl
cmpsl
pop
les
pushf
jb
add
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
ret
pop
lds
and
jo
push
or
hlt
push
xchg
into
jae
test
shll
incl
push
sub
push
mov
push
mov
push
fisttpll
clc
and
sub
out
xchg
insl
pop
cmp
addl
dec
ljmp
jmp
mov
mov
adc
ret
add
movsb
out
arpl
rcrb
and
add
test
and
add
push
fcmovne
scas
or
fucomip
xchg
cmp
fistpl
shr
push
aas
scas
xlat
and
fwait
or
pop
ret
pop
fildl
ja
into
jge
out
or
mov
aad
popa
mov
push
popa
cmp
addl
mov
sti
fcmovne
repnz
add
or
sbbb
jecxz
sti
aas
imul
or
lea
mov
push
movsl
xchg
dec
sti
fsincos
out
out
out
dec
xchg
and
dec
cmp
push
bound
jecxz
push
push
loop
sti
je
repz
cmpsl
outsb
sbb
and
or
into
ds
aad
int
decl
fmull
sbb
mov
xlat
pop
inc
sahf
mov
mov
mov
adc
xchg
inc
aaa
movsb
cmp
pop
ja
addr16
aas
adc
cmp
mov
add
jmp
je
mov
fisttps
jne
mov
mov
and
out
and
pop
and
enter
cmp
mov
movsb
sbb
or
xor
jp
jno
jmp
sub
outsb
mov
out
mov
jge
enter
scas
popa
dec
dec
imul
jo
imul
or
mov
mov
cwtl
add
mov
test
out
xorl
aaa
or
push
sbb
xlat
inc
movsb
lret
jl
lahf
icebp
jmp
leave
lock
mov
mov
movsb
or
fidivs
clc
fidivrl
push
or
dec
inc
scas
fdivrp
pusha
xchg
push
inc
sbb
xor
mov
jmp
and
xor
xor
mov
lret
adc
incb
mov
mov
push
xlat
or
pop
clc
and
loopne
sbb
cmp
in
lea
xor
imul
clc
test
xchg
mov
int3
push
xor
dec
out
xor
hlt
test
or
fdivl
jmp
push
jns
insb
dec
ja
mov
pop
cmp
out
test
mov
pop
add
sahf
and
faddl
aad
add
iret
cmpsb
mov
adc
lods
sbb
jo
push
xchg
add
mov
add
inc
mov
popa
cwtl
and
mov
pop
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
out
insb
mov
jo
cmc
fdivl
cmpl
jno
cmp
jge
jmp
and
ds
sub
imul
xor
mov
jecxz
out
xchg
int
xchg
loope
sbb
adc
and
dec
aaa
outsl
mov
jle
js
or
in
addb
in
cmp
test
mov
xor
cmp
push
mov
mov
add
insb
daa
xor
or
sub
push
xchg
or
insb
jbe
xchg
inc
dec
gs
add
xor
mov
jnp
loop
repnz
lods
cmp
ficoms
adc
arpl
fcomip
test
pop
enter
jg
dec
loop
jle
std
cs
add
push
pop
jl
dec
jbe
icebp
orb
mov
setge
push
clc
xchg
and
xchg
dec
int3
mov
xchg
push
imul
mov
movsl
cmpsl
outsl
dec
enter
ret
mov
iret
fsub
lock
push
xlat
scas
add
gs
xor
out
and
mov
push
cmc
mov
out
jg
insb
mov
out
loopne
lahf
or
arpl
gs
imul
stos
ret
push
es
push
test
pop
test
mov
xor
scas
jge
out
sarb
testb
pop
mov
pop
fdivl
repz
cmpsl
sub
mov
out
imul
push
sbb
push
std
mov
icebp
inc
fiadds
push
jp
les
mov
adc
add
addr16
ja
cmp
mov
in
cs
xchg
and
gs
mov
push
push
in
movzwl
rcrb
xor
xor
inc
jg
inc
int
rclb
mov
pop
jo
pop
pop
inc
push
push
ret
xchg
add
enter
jns
jg
decb
jbe
xchg
add
lret
dec
rorb
roll
hlt
shl
inc
or
nop
icebp
cmp
pop
shl
mov
popf
dec
fldcw
mov
jg
mov
sbb
iret
or
sub
pop
in
sbb
loope
nop
mov
fnsave
jns
lcall
sbb
call
fidivrs
int
movsl
addb
fldcw
mov
mov
int
mov
xchg
pop
icebp
and
out
lret
mov
je
cmpsl
fnclex
sub
add
icebp
into
jp
pop
aas
cmpsb
aad
fstpt
mov
daa
push
fs
cmpsb
arpl
mov
mov
fs
sub
fnsave
sub
mov
xchg
inc
loopne
addb
enter
fsubs
int3
repnz
mov
mov
and
fmuls
mov
and
repz
push
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
pop
lods
mov
jo
jge
jo
push
fwait
dec
inc
ret
scas
repnz
andb
sub
push
test
mov
bound
lcall
or
mov
mov
and
push
mov
cmc
pusha
popf
mov
mov
shl
punpcklbw
mov
jno
int
data16
or
mov
aas
or
lods
dec
fwait
aam
rorb
test
aas
jmp
jns
sub
lods
ss
popf
cs
xor
icebp
inc
je
sbb
imul
fs
mov
popf
ret
movb
xchg
pop
in
mov
adc
out
add
dec
sub
arpl
inc
stos
mov
cmp
int
cld
mov
stc
cwtl
jge
fs
mov
xchg
pop
out
inc
add
subb
fucomi
mov
dec
fs
xor
pop
roll
fisubl
inc
push
jg
fisttpll
cmpsb
mov
testl
jno
mov
add
xor
scas
add
test
sub
jo
jecxz
mov
push
je
loope
pop
inc
xor
adc
pusha
xchg
xchg
test
repnz
arpl
or
iret
repnz
fldpi
sti
shll
sbb
cmpsb
loopne
ss
pop
jbe
mov
jnp
cmp
js
sub
xchg
jae
test
add
addr16
or
lahf
sbb
xchg
sub
sbb
dec
inc
int
push
mov
pop
mov
repnz
push
mov
out
loope
lds
xor
out
jge
cmp
jae
int
outsb
imul
lock
dec
int
inc
inc
cmp
jp
xchg
jnp
call
dec
or
scas
mov
jle
cli
cmp
pop
jg
sahf
xchg
mov
pusha
xchg
clc
ja
mov
xchg
and
sbb
xor
or
insb
test
sbb
add
insl
mov
push
cmp
sub
pop
inc
je
rorl
clc
bound
or
and
mov
mov
add
cmp
dec
cwtl
mov
pop
cmpsb
repnz
leave
add
jns
rcrb
mov
repnz
in
fs
adc
push
out
scas
test
pop
mov
sub
xchg
sub
pop
aas
mov
xchg
mov
inc
xchg
rolb
test
sbb
mov
adcl
pop
cld
sub
lahf
data16
cld
scas
ja
and
rolb
fdivrl
sbb
mov
or
push
add
retw
sbb
dec
and
insb
ret
divb
iret
inc
fwait
sub
lock
seta
push
out
sbb
loope
in
hlt
sub
push
mov
mov
rcll
aas
cwtl
dec
lods
mov
int
pop
dec
push
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
loopne
movsb
pop
cmpsl
int3
jo
and
jo
pop
push
jns
inc
pop
push
in
shrb
mov
xor
xorl
fidivrl
and
enter
in
cmp
pop
xchg
push
push
mov
lods
cmc
xchg
or
in
bound
mov
into
mov
out
in
inc
jae
sub
arpl
test
leave
adc
mov
cmp
pop
xchg
movsb
scas
push
push
mov
sub
ljmp
dec
mov
insl
repz
and
stc
hlt
mov
rcrb
popf
clc
fs
loopne
jo
loopne
negl
fisubl
xor
cmpsb
int3
mov
les
clc
adc
jmp
xchg
inc
and
je
mov
fisubl
pop
popa
pop
scas
mov
cmp
fs
sbb
ficoml
mov
xor
jne
jecxz
and
inc
sbb
dec
cmpsl
loope
jge
rcll
jns
xchg
fistl
mov
clc
adc
cli
push
dec
jmp
lock
enter
push
jecxz
dec
jle
dec
adc
shl
or
adc
outsb
scas
add
cld
sbb
rcll
jnp
pushf
jae
and
mov
in
out
lcall
les
aam
fisubl
pushf
and
mov
fistps
push
fsub
add
mov
andb
and
xor
orb
es
into
ror
cltd
push
dec
cmp
xor
jne
fistps
sahf
add
and
ja
adcb
iret
gs
jg
mov
rorb
push
loopne
mov
jg
adc
inc
mov
lret
mov
add
dec
cli
push
sub
daa
dec
push
jbe
pop
out
mov
or
add
push
pop
jno
add
into
faddp
stos
decl
jno
int
and
movsb
xchg
nop
xchg
mov
mov
lret
outsl
pushf
jecxz
dec
rclb
xchg
fcmovnb
lahf
mulb
test
xor
push
fs
cmp
jecxz
mov
jae
sbb
adc
test
icebp
pop
clc
data16
mov
add
xchg
adc
push
hlt
sbb
gs
mov
adc
push
js
pop
add
inc
movsb
jns
dec
push
in
insl
pop
repnz
int3
sub
pop
imul
out
das
les
xchg
pop
stc
xor
cmpsb
push
loope
cmpsl
mov
add
pushf
push
shrl
fsubrl
inc
xor
rcl
xor
dec
and
xchg
insb
cltd
push
sti
sbb
jo
mov
imul
or
outsl
outsl
mov
jo
imul
push
mov
dec
sbb
jne
dec
inc
mov
loop
aad
shl
jmp
scas
inc
popf
imul
ret
stos
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
insb
cwtl
push
xor
jo
and
jo
test
rclb
dec
scas
iret
cmpsl
lods
movsl
xchg
roll
jge
cmp
rcrl
push
and
mov
xlat
lds
test
sbb
jmp
aad
sahf
jmp
call
sbb
nop
popa
cmc
jl
inc
cmp
stos
inc
mov
test
mov
fwait
out
leave
lret
dec
mov
call
int3
movsb
jge
inc
jbe
sub
inc
mov
or
jle
out
sub
mov
jnp
xlat
ljmp
pushf
mov
pop
in
sbb
push
imul
add
popa
cmc
andb
pop
shl
mov
mov
lahf
or
jbe
mov
lahf
bound
int
xchg
les
xchg
clc
pop
push
dec
aad
jl
mov
movsl
cltd
pop
inc
sarb
shlb
add
and
clc
aaa
mov
loope
lcall
shlb
aad
ja
in
sub
pushf
mov
in
int3
leave
jno
test
lahf
testl
xchg
out
sbb
inc
aaa
mov
or
push
in
mov
loope
dec
sbb
outsl
cmp
push
inc
out
add
sbb
aaa
cmp
adc
in
cmp
sbb
mov
xchg
xchg
add
in
pop
pop
inc
xor
mov
scas
mov
lods
pushf
ret
and
mulb
in
into
sub
mov
xchg
mov
sti
cmp
lock
or
test
mov
out
pop
or
jecxz
test
mov
lds
testb
adc
into
cmpsl
push
roll
mov
inc
outsl
inc
shlb
xchg
rcrl
push
mov
out
pxor
lret
and
mov
shrl
adc
xchg
dec
push
mov
sbb
fcmovne
jb
xabort
push
idivb
push
mov
inc
movsb
lea
pusha
mov
into
ret
cld
mov
movsb
addr16
sbb
fists
lds
repnz
icebp
pop
fcompl
cmp
movsl
cs
xchg
pusha
jne
je
lods
inc
insl
es
movsl
scas
outsl
outsb
and
clc
test
repz
addl
push
pop
jmp
adc
cmp
xor
and
loop
in
mov
daa
int
sbb
fistl
cmpsb
mov
mov
fs
cmc
and
jl
xchg
xlat
mov
or
movsb
mov
fwait
cld
push
testb
and
sbb
pushf
xchg
xchg
daa
sbb
xchg
adc
dec
lcall
shll
xchg
lahf
data16
inc
xor
insb
repz
arpl
sub
out
sbb
cmpsl
or
xor
das
es
cmpb
mov
push
enter
icebp
scas
cmp
jno
in
xor
ljmp
rcr
sbb
dec
adc
scas
pop
test
push
cltd
popa
and
ret
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
les
pop
aad
jo
jge
jo
fnsave
sahf
dec
push
cmpl
idivl
jmp
sub
pop
or
adc
cltd
fiadds
adc
and
imul
mov
or
sub
dec
ret
dec
mov
fnstsw
mulb
lods
call
jle
fidivs
jl
fistl
ss
es
ljmp
sbb
aaa
cmc
sbb
cwtl
xlat
popa
push
cltd
outsl
mov
cld
mov
popf
xor
adcl
or
fsubrl
ret
or
add
out
subb
xchg
adc
adc
stc
aam
or
xor
je
cmp
mov
fsubrl
fcomps
negb
dec
jl
and
testl
sbb
and
sti
xchg
lret
std
push
gs
dec
xchg
add
test
outsl
sbb
cmp
addps
pop
jbe
daa
mov
call
xor
or
pcmpgtb
and
inc
cmpsl
aas
cmp
das
scas
xor
pop
xor
mov
pop
scas
xor
lcall
push
imul
fcmovu
or
mov
call
scas
scas
ret
fst
scas
lea
mov
and
mov
out
xchg
loopne
js
mov
mov
insb
jno
lds
test
call
iret
stc
adc
test
insl
or
int3
push
fwait
or
jae
jb
mov
scas
sbb
popa
rcr
mov
jecxz
test
mov
push
jp
sahf
lahf
mov
xlat
or
pop
and
out
adc
inc
xlat
xchg
repz
sub
imul
call
mov
test
mov
icebp
mov
fsubs
cwtl
jno
int3
mov
stc
and
ja
sub
mov
ljmp
push
repnz
mov
in
fisttpll
pop
ja
sbb
lea
mov
dec
pop
inc
cmp
loop
jno
cmp
sub
lcall
hlt
dec
negb
mov
dec
cld
xor
inc
jg
push
jb
rcl
cmpsb
add
mov
mov
loopne
mov
dec
jns
mov
cli
movsl
push
sbb
rorb
mov
sub
mov
orb
test
lret
movsb
jl
inc
jl
stos
sti
iret
fsts
lahf
pop
sub
faddl
jne
jecxz
inc
nop
fisubrs
sbb
push
ja
xor
jmp
aam
jp
jo
push
int
pop
cwtl
push
ja
inc
je
mov
mov
push
aad
jmp
mov
cltd
aam
pop
or
mov
mov
ret
test
sub
cmc
push
daa
call
in
sahf
push
cmp
dec
in
pop
out
pop
out
add
mov
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
inc
xor
jo
jge
jo
adcb
push
mov
dec
pop
jb
push
les
fiadds
andl
cs
jl
cltd
jne
lcall
cmp
mov
mov
add
dec
repz
stos
xor
popf
add
pop
inc
daa
cmpsl
jae
ljmp
aaa
test
inc
fildll
cmp
inc
jge
jno
pop
xchg
subb
inc
adc
mov
inc
pop
pop
jmp
iret
mov
flds
aas
sbb
cld
adc
ret
int3
jns
inc
gs
jp
test
jne
stc
dec
dec
xchg
mov
addr16
jnp
out
mov
xor
and
xchg
test
movl
ja
loopne
adc
leave
push
jp
mov
pop
aad
sub
insb
ret
ss
push
incb
push
pushf
jp
fcoml
sbb
popw
sbb
cli
sub
test
mov
and
int
mov
out
sub
adc
cmpsb
addb
inc
hlt
test
lret
ss
jmp
aaa
adc
and
and
push
push
push
jne
imul
in
enter
sub
push
stos
pop
or
mov
add
js
jg
scas
xchg
add
push
jo
push
sub
das
subl
pop
jns
pop
mov
pop
dec
sub
out
jmp
stos
mov
mov
xchg
and
mov
mov
cmpsb
sbb
int3
and
cmp
push
push
popf
jo
cmpsl
mov
pop
inc
push
or
mov
xchg
mov
dec
jo
out
mov
js
xchg
out
sbb
mov
cs
out
xor
adc
imul
in
in
or
leave
mov
cli
and
push
push
fisttpll
pop
inc
mov
dec
outsl
les
pushf
adc
loopne
mov
cmp
mov
mov
mov
and
sti
iret
mov
test
cmp
sahf
xor
jle
shrb
adc
popf
pop
mov
push
movsl
cmp
das
xchg
mov
int
sarb
jmp
es
out
or
add
cmp
je
xchg
xor
icebp
pop
cmpsl
jno
je
rcrb
xor
fisttpll
aam
lds
ljmp
in
mov
bt
gs
mov
jbe
test
dec
push
rcrl
lods
out
lds
ljmp
mov
or
or
jecxz
mov
xchg
inc
xor
pop
xlat
dec
fwait
jns
mov
call
xor
pop
fmuls
dec
subl
push
jg
mov
push
and
pop
bound
xchg
xchg
loopne
jle
pusha
out
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
jp
pop
leave
sbb
add
ja
xor
and
inc
repnz
pop
filds
jne
mov
fmulp
movsb
xor
mov
dec
xchg
cli
mov
mov
data16
sbb
jb
lret
add
pop
mov
jp
jge
popa
jge
out
push
adc
outsl
xchg
out
sbb
or
insb
xchg
mov
or
cld
lods
cmp
shlb
lret
inc
gs
mov
cmp
out
sar
jl
sbb
jmp
adc
xchg
movsl
and
je
dec
xor
loop
aad
dec
dec
sbb
jno
mov
push
sbb
or
lret
aas
jle
add
and
dec
mov
cmp
cmpsb
fidivl
mov
inc
sbb
cmpsb
fisttps
ss
inc
pop
mov
je
test
jecxz
jne
and
mov
cltd
in
and
xchg
pop
add
sub
and
mov
lods
es
xchg
and
in
mov
repz
int3
lret
cmpsl
jmp
sbb
fwait
cmc
btr
push
xchg
jb
in
xchg
adc
push
popf
mov
xchg
sub
js
adc
xor
cmp
das
sbb
push
out
xor
in
scas
mov
dec
sub
rorb
mov
ret
jecxz
fcomi
jle
addr16
or
inc
dec
push
add
sub
jp
divb
ficompl
repnz
inc
sub
dec
cmp
or
xor
inc
sbb
mov
cmpl
pop
stos
movsl
enter
xchg
xor
imul
jno
inc
cmp
sbb
daa
dec
outsb
std
negb
pop
pop
movsl
rclb
icebp
xchg
dec
call
push
aam
dec
dec
popf
cmpsb
mov
and
loope
imul
popf
and
cmpsl
push
jnp
jae
jb
subl
mov
and
mov
enter
mov
mov
push
adc
cmp
clc
js
push
push
mov
pop
mov
adc
xchg
push
push
out
adc
mov
les
nop
outsl
jnp
out
push
push
jo
fnstcw
dec
pop
mov
mov
dec
movsl
xchg
dec
xor
xlat
arpl
lock
ds
dec
fsts
xlat
jne
or
in
push
sbb
pop
movsl
stc
das
xlat
and
xor
movsb
inc
leave
mov
xchg
or
dec
xchg
imul
add
jecxz
pop
sbb
lret
dec
imul
mov
or
push
in
sub
push
test
out
mov
xchg
mov
push
dec
or
cmp
jns
es
cmp
je
arpl
fcmovnu
mov
push
dec
lods
pop
xchg
stc
and
pusha
push
lea
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
inc
adc
xchg
fdivl
and
jo
hlt
roll
fldcw
in
or
movsb
cmp
iret
inc
int
pop
or
cmc
dec
popa
adc
bound
mov
xchg
test
in
xor
xor
mov
lahf
sub
stos
lret
jg
adcl
pushf
into
ja
sbb
call
sub
mov
nop
sahf
jbe
sub
xchg
loop
les
mov
icebp
insb
sbb
rclb
ret
lcall
nop
xchg
lcall
sahf
jnp
ds
int
jb
iret
pop
mov
rep
cmp
loope
shll
outsb
pop
mov
mov
xor
sub
fnstenv
jecxz
xchg
pop
lods
mov
orb
or
fsubrl
dec
out
mov
mov
jnp
mov
lods
lcall
sub
sbb
fucomip
inc
xchg
rcrl
lea
or
lret
jnp
pushf
push
push
pusha
dec
adc
int3
mov
and
in
push
shlb
cmc
jno
fistpl
in
push
mov
xor
push
sbbb
je
inc
lds
push
push
mov
xor
or
or
lods
pop
or
cmp
ucomiss
pop
test
mov
loopne
dec
sahf
xchg
insb
or
movsb
hlt
fs
xchg
push
in
jmp
fsubs
pop
or
lds
push
add
aaa
pop
add
mov
enter
pop
push
pusha
lods
lock
cltd
mov
mov
xchg
or
cli
ljmp
push
lods
in
enter
sub
push
lret
add
sbb
fstps
ss
mov
lds
testl
rclb
js
or
adc
imul
daa
es
add
icebp
xor
outsb
es
movl
add
iret
mov
idivl
xor
andl
int3
mov
cmp
xor
test
xchg
in
ret
push
in
add
pop
or
or
jl
fwait
aaa
jp
cld
js
lock
sbb
mov
decb
into
fdivrs
and
subb
cwtl
sub
add
add
pop
mov
jne
fs
jmp
jne
data16
imul
mov
rcll
mov
pop
shl
push
aam
andb
inc
dec
pop
inc
dec
js
push
mov
mov
stos
push
ror
fadd
push
scas
fs
push
jecxz
jg
lds
aaa
sbb
dec
pop
stc
cmp
pop
sub
insl
fnstcw
int3
mov
mov
out
ds
insb
pop
lahf
jo
inc
add
icebp
jns
jne
lret
jmp
pushf
fs
push
popa
adc
push
push
out
jp
cwtl
xchg
popl
fdecstp
insl
adc
add
sbb
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
pop
cmova
jo
and
jo
pop
and
pop
dec
loopne
dec
into
sti
adc
ret
out
ja
and
dec
jmp
push
mov
pop
das
mov
mov
mov
mov
sbb
mov
aaa
dec
gs
test
lcall
mov
lret
pop
add
or
gs
repnz
mov
and
hlt
dec
pop
jnp
add
cmp
xchg
push
stos
pop
adc
sbb
mov
test
popa
jl
lods
aam
insb
clc
jmp
outsl
in
and
sub
mov
inc
add
and
in
xor
or
xchg
cwtl
test
jl
divl
adc
movhps
in
loopne
or
popf
cmp
jbe
sbb
std
loope
mov
cmp
jmp
sub
pop
test
test
pop
ja
nop
dec
xchg
je
sbb
sub
dec
mov
xchg
outsb
dec
std
push
inc
cltd
dec
rclb
ds
and
pop
repnz
mov
js
dec
jne
pop
xor
xchg
push
insb
fsubrs
or
pop
imul
lahf
dec
jp
or
sbb
test
sub
mov
adc
shrl
popf
outsl
arpl
or
addr16
cmp
mov
movsl
sbb
sub
mov
dec
outsl
adc
aam
mov
mov
adc
mov
movsb
rolb
or
stos
inc
adc
mov
enter
sbb
mov
dec
dec
push
int
loop
mov
ficomps
fwait
jae
xor
popf
xor
int3
hlt
mov
nop
arpl
mov
fadds
lea
out
cmp
cmpsb
fisttpl
pop
mov
push
ljmp
loopne
das
adc
add
lahf
enter
cmp
mov
subl
fsub
add
clc
lahf
xchg
xchg
sub
es
fiaddl
mov
xor
imul
daa
lea
stos
jmp
ja
and
mov
push
repz
xchg
and
popa
incb
ret
and
pop
ja
adc
pop
mov
jg
and
sbb
lds
jo
mov
lods
mov
lds
sbb
fstpt
push
and
dec
outsb
cmpsb
ja
rcll
cmp
add
mov
ds
push
xor
sbb
xchg
jae
push
xor
cs
xchg
out
icebp
movsl
inc
or
cmp
insb
mov
jle
std
fcmovb
les
aam
insb
enter
push
pop
test
inc
int3
ror
pop
pop
mov
xchg
sbb
sbb
cmp
popf
ja
cmc
int3
add
mov
xchg
dec
sbb
dec
stos
sbb
push
sub
sub
xchg
dec
adc
sbb
cmp
mov
pusha
or
adc
call
cmpsl
outsl
gs
inc
test
sub
shlb
xchg
adc
lea
jmp
add
out
out
xor
call
loope
jns
out
jo
jge
jo
cmp
icebp
xor
push
scas
scas
jmp
jle
pop
insb
mov
mov
xor
lock
mov
orb
std
xchg
xor
test
lret
ret
jp
imul
add
add
sub
mov
or
fs
mov
and
or
fldl
mov
pop
adc
leave
pusha
in
enter
inc
push
or
push
push
adc
stos
push
mov
xor
jns
adc
movsb
addb
pushl
adc
pusha
jp
inc
outsl
lahf
pop
dec
mov
ja
sbb
or
and
add
inc
test
out
ljmp
xor
cmp
fldenv
data16
cmp
adc
push
lahf
loopne
mov
aaa
aam
mov
xor
jl
jge
push
pop
stc
xor
pusha
decl
loope
add
sub
stc
ss
jmp
clc
pop
inc
mov
or
rorb
fnstenv
push
leave
cmp
mov
jb
call
int
scas
shrb
out
clc
xrelease
add
mov
je
pop
outsl
decb
divb
pop
divl
popf
pop
jb
push
pop
jnp
rorl
add
jae
stc
ds
imul
cwtl
inc
pop
add
pop
shlb
jg
mov
imul
gs
jle
popa
push
and
sub
inc
mov
xchg
mov
jmp
mov
fwait
ret
mov
xor
or
xchg
adc
xchg
adc
out
lock
lea
adc
call
call
pop
jb
movsl
int3
mov
jae
dec
xor
fs
mov
leave
jmp
sbb
xlat
push
lods
xchg
lea
sahf
cmpb
mov
or
stos
lock
jae
xor
or
jl
popa
mov
add
xor
mov
mov
addr16
xchg
xchg
cmp
cmp
jp
pop
mov
pushl
gs
leave
cltd
xchg
int
in
mov
cmp
pop
and
pop
jne
push
or
mov
cmp
adc
pop
lea
icebp
cld
push
mov
mov
aaa
cli
jns
loop
push
xchg
popa
fmuls
mov
inc
sub
sub
mov
lahf
js
sbbb
add
aam
pop
scas
daa
clc
movsb
xchg
rclb
mov
lods
jb
push
pusha
xchg
lock
mov
cmpb
jge
xor
mov
movsl
and
out
ret
add
jae
aaa
sbb
dec
imulb
test
mov
jmp
loop
in
inc
adc
call
xor
add
xor
add
xor
jmp
push
pop
jmp
cmpsb
jnp
or
lahf
jo
insb
scas
inc
in
daa
loop
jo
jge
jo
arpl
mov
jmp
movsb
lcall
push
and
fwait
bnd
push
sub
sarl
push
cltd
les
repz
pop
xlat
dec
pushf
pop
sbb
xchg
and
add
and
jno
cld
cld
mov
push
rcrb
sub
pop
push
pop
or
stos
xchg
ds
shrb
cwtl
shlb
pusha
nop
xor
push
dec
in
lods
fists
dec
jns
repz
add
xchg
into
bound
repnz
cmp
sbb
stos
push
mov
call
add
das
or
sub
fwait
call
sbbb
insl
cmp
pop
bound
jge
xchg
daa
fs
xor
push
ds
fs
lods
add
fs
sub
out
pop
mov
adc
xor
mov
ffreep
stc
or
push
lcall
into
and
mov
icebp
or
mov
sti
xchg
and
cli
pop
daa
iret
ret
out
popa
into
imul
sub
xchg
push
jmp
sar
add
add
add
out
pop
fadd
sub
push
and
repz
xor
or
dec
repz
sbb
pop
or
jb
inc
add
das
cmp
or
jle
mov
popa
outsl
insb
inc
xor
ret
fwait
in
insb
loope
mov
scas
jb
test
mov
sbb
fsubs
sub
and
insl
fsub
leave
ja
testb
or
call
mov
mov
clc
jecxz
bnd
decl
mov
subl
imul
test
mov
inc
or
add
cmp
or
arpl
xor
shr
sti
cmp
mov
or
jne
jecxz
xor
push
push
insl
outsb
push
arpl
xor
out
call
movsb
and
lds
insb
mov
sarb
insl
sbb
add
lock
jns
movsl
adc
pushf
and
cmpsl
or
mov
and
mov
aaa
loope
fldcw
xchg
sbb
xor
repnz
ret
sub
out
imul
add
xor
jl
mov
push
fnsave
dec
jnp
push
mov
xor
shll
mov
xchg
jne
mov
inc
sbb
leave
xchg
aas
in
or
mov
mov
xor
push
mov
xor
negl
ss
add
call
int
pop
test
cmp
mov
lds
cs
outsb
or
and
add
ret
and
jae
dec
mov
adc
inc
inc
xchg
push
stc
lahf
adc
pop
jp
pushf
xor
mov
push
push
adc
push
jl
hlt
dec
cwtl
push
dec
or
ret
mov
scas
inc
sbb
call
mov
mov
jmp
out
mov
ja
add
xchg
ss
push
and
jo
repz
enter
stc
jnp
inc
out
inc
sub
jp
loop
cmp
lea
adc
xor
jno
mov
notl
cmp
mov
out
cmp
push
das
lret
fucomi
mov
insb
ds
push
outsb
cmp
push
and
mov
movsl
push
das
daa
mov
je
das
clc
je
insb
jae
fwait
inc
add
push
sub
test
iret
push
xchg
loopne
cmp
inc
inc
push
repz
pushf
leave
push
mov
int3
sbb
ja
add
push
cmp
cmp
ja
jo
mov
testl
or
pop
insb
and
movsb
ja
and
cmp
mov
jnp
or
repz
sbb
jge,pn
in
cli
in
and
jle
xor
mov
push
ds
in
outsl
pop
mov
add
jns
dec
adc
je
mov
jno
sbb
pop
pop
gs
push
shl
ja
stos
mov
mov
sub
push
adc
add
sub
lods
xor
test
mov
pop
fs
shl
pop
outsb
jae
jne
out
and
xchg
repnz
xchg
repz
in
sub
inc
test
jmp
cmc
movsb
ret
into
fdivl
mov
movsb
fcoms
mov
in
and
lahf
mov
nop
sahf
jne
cmp
or
xchg
rcrb
stos
xlat
xor
sub
js
shlb
repz
aad
cmp
nop
adc
dec
cwtl
dec
ret
cmp
pop
cmpsb
dec
in
mov
ljmp
imul
fisttpll
pushf
in
sub
jae
xchg
loope
clc
int3
mov
xlat
sahf
inc
shlb
das
adc
ljmp
inc
cmp
fldl
jnp
xchg
mov
jo
mov
nop
inc
call
push
dec
bound
repz
cld
into
lods
das
dec
and
sti
repnz
mov
movsb
sarl
xchg
jecxz
repnz
xor
insb
rolb
cmovae
xchg
daa
jmp
add
loop
xor
pop
cmp
and
xor
sbb
mov
xorl
sbb
je
mov
es
test
sub
popa
bound
adc
fwait
xchg
jae
inc
test
xchg
cs
push
scas
aad
fstpt
aad
inc
xchg
cmp
ds
popl
xchg
xor
push
nop
xor
push
mov
stos
je
xchg
ficoml
mov
into
bound
cli
adc
jmp
fldenv
lods
movsb
dec
call
cld
in
out
push
add
cltd
push
ss
mov
mov
pop
cmp
cmp
cltd
insb
int
out
cmc
inc
imul
add
adc
adc
sub
mov
movsl
mov
mov
test
loope
or
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
neg
mov
jo
lahf
jge
jo
fwait
stc
jbe
mov
in
pop
out
dec
jb
mov
inc
push
lds
jg
into
add
jp
inc
cli
inc
sahf
mov
and
lret
mov
sub
dec
addr16
fsts
outsl
mov
add
or
jecxz
ja
fcmovbe
ffreep
mov
fdivrs
inc
mov
push
stos
and
cmp
aad
mov
out
in
jmp
in
cltd
xor
jb
push
and
out
stos
xor
pop
fcoml
lea
mov
inc
fdivrs
mov
js
sahf
das
add
dec
sarl
inc
sbb
mov
cmp
or
sbb
rcrl
sub
fistpl
mov
lods
int3
cmpsl
into
mov
repnz
mov
cld
dec
pop
stos
adc
scas
vpaddusb
fimull
mov
jne
out
insw
das
into
nop
mov
cmp
sbb
arpl
loop
cmp
lea
mov
scas
movsb
shrb
mov
mov
in
adc
xchg
inc
cmp
lahf
pop
cmpsb
into
cli
clc
lea
jno
pop
pusha
sarl
in
jmp
or
push
mov
loope
ret
jne
ljmp
mov
sbb
mov
testb
mov
ret
ljmp
and
aad
divb
leavew
pop
and
nop
jle
inc
loopne
repz
hlt
cmp
iret
cmp
xor
lret
dec
cmp
ja
fsubrl
cmp
add
jmp
inc
or
bound
js
mov
iret
aad
xor
sub
addr16
inc
int
xlat
adc
mov
popa
push
sahf
jmp
pop
push
push
pop
outsb
int3
test
pop
clc
lahf
adc
xchg
xor
jns
xor
js
int3
sbb
mov
imul
mov
int
lds
jmp
lds
insl
inc
inc
popl
sahf
add
iret
fdiv
shrb
dec
int3
rcrb
imul
dec
insb
push
xlat
loope
jmp
and
mov
rcrb
jg
popa
adc
push
sbb
pop
adc
imul
xchg
adc
into
mov
icebp
pop
rclb
imul
stos
inc
adc
fwait
aas
aad
or
cmp
in
fcomps
pop
dec
in
fsub
mov
cltd
xor
lods
lret
push
cmp
or
dec
inc
movsb
call
arpl
pop
aas
out
lahf
hlt
xor
pop
push
into
iret
jo
push
fs
xor
mov
push
dec
push
movsl
and
cmp
and
fiaddl
sbb
fistpl
daa
stos
add
stos
add
cmp
filds
loop
icebp
lea
push
pushf
vmovsldup
out
shll
and
pushf
mov
jl
pop
xlat
mov
sbb
imul
adc
in
fwait
dec
xor
out
stc
pop
aas
cmp
jnp
push
aas
sub
movsb
or
shlb
mov
mov
xor
dec
fs
repz
loopne
mov
hlt
shl
pop
sbb
bound
ss
aaa
xor
or
cli
xor
fisubl
notl
adc
push
or
data16
mov
jbe
mov
aaa
movaps
push
sti
sbb
inc
pop
dec
mov
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
jle
movsl
mov
lahf
jge
jo
lds
in
hlt
xor
cmp
inc
pop
push
xchg
mov
xor
pop
adc
les
dec
lcall
aam
sub
stc
aam
rorb
in
jecxz
pop
xchg
fs
stos
sub
psrld
nop
mov
sub
or
adc
and
ljmp
cmc
sub
mov
sub
push
js
jg
dec
popf
sahf
into
xor
mov
sub
or
mov
mov
pop
stos
insb
repnz
cmp
in
xchg
test
push
les
inc
cld
push
inc
movsl
aam
imul
xchg
fcoms
movsb
push
cld
cs
shlb
hlt
pop
jne
mov
pusha
arpl
loope
lea
movb
ret
scas
clc
xor
arpl
xchg
loope
xlat
andl
add
inc
enter
bound
add
jl
jge
lea
lcall
into
cmp
mov
scas
fistpl
das
mov
ja
push
adc
sarb
or
inc
xchg
sub
cltd
fidivl
mov
dec
jns
outsl
pop
and
mov
iret
pushf
fidivs
out
shll
mov
mov
dec
test
dec
es
jnp
out
or
test
xchg
pop
ds
and
mov
cmp
aam
cs
fbld
fdivs
out
call
fwait
push
xchg
notl
push
jg
int3
inc
test
pop
adc
sub
add
cmp
add
pop
mov
cmp
into
xchg
lret
cmp
inc
jl
add
xor
filds
jp
insb
shll
int3
sbb
stos
out
dec
fildl
push
add
ss
gs
mov
push
add
mov
sub
adc
jb
xchg
sbb
fsubp
sbb
fmuls
sbb
adc
lods
push
cld
enter
inc
and
xor
loope
and
loopne
adc
push
testl
idivl
mov
adc
jae
fisttpll
dec
sarb
inc
jne
xchg
subb
push
leave
mov
sbb
adcl
sub
outsl
cmp
rcrl
push
ljmp
mov
xor
fidivs
enter
xchg
jno
dec
pop
out
mov
ret
push
mov
pop
enter
pop
pop
or
sub
stos
and
lret
mov
add
imul
ficompl
lahf
xlat
push
je
sbb
cmp
movsb
sub
fidivs
jo
pop
jmp
push
lret
jno
xchg
sbb
jne
pop
dec
repnz
add
mov
push
cmp
inc
jmp
daa
bound
xchg
cmc
popa
and
inc
mov
test
or
xchg
inc
add
mov
adc
jne
push
jns
sbb
lcall
pusha
dec
loop
pushf
int
inc
and
shlb
rcrb
jno
inc
jecxz
lea
jg
popf
sbb
loop
mov
int3
pop
push
xor
push
stc
movl
movl
adc
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
mov
fdivrs
jge
jo
fistpll
xchg
dec
add
sahf
inc
jb
mov
pop
inc
sub
jg
sub
cmp
cmp
mov
cmpsl
xchg
lret
push
mov
sub
cmp
or
out
test
pushf
cli
lret
in
adc
sbb
fsubl
and
or
pop
mov
xchg
cmc
adc
add
pop
dec
popa
jg
call
and
addr16
popa
sahf
cmp
outsl
jl
les
add
sbb
inc
arpl
stc
cltd
inc
pop
clc
scas
cs
jecxz
add
inc
rcll
popa
pop
repz
addr16
das
jns
sub
mov
ja
cmpsb
inc
adc
int
rcrl
cmp
dec
ficoms
shll
xchg
sub
jp
cmp
lods
call
ja
sarb
scas
cmp
dec
mov
out
xchg
stos
adc
dec
int3
pop
fs
repz
pop
inc
add
es
test
arpl
hlt
fdivp
pop
sbb
data16
mov
loopne
in
sub
mov
push
add
mov
push
xlat
test
fbld
int
insb
ret
xchg
jo
jl
cmp
adc
cmpsl
adc
xchg
inc
cmp
cwtl
test
test
stos
es
aaa
adcb
test
je
xchg
and
cmp
add
stos
pushl
inc
pop
xorb
enter
push
xor
aam
inc
lea
mov
and
and
adc
scas
divl
sub
pop
ljmp
or
subl
test
test
mov
adc
mov
push
cmp
rcrb
mov
repnz
cmp
xor
fnstcw
pop
dec
jae
inc
mov
cmp
mov
outsb
lods
jmp
sub
sbbb
pop
cmc
xor
shlb
xchg
mov
adc
aam
mov
xor
scas
dec
std
jo
out
dec
xlat
mov
jbe
cmc
out
mov
jmp
nop
pop
xor
jne
jge
push
cltd
repnz
push
bound
adc
dec
cmp
aad
jae
add
push
add
add
movsl
movsb
ficompl
sub
mov
pop
jae
adc
mov
movsb
push
aam
adc
sbb
cltd
scas
xor
cmp
cmp
cmpsb
xchg
arpl
fiaddl
cmp
fs
push
dec
cmp
adc
out
test
out
test
shl
xor
movsb
jne
push
dec
cmc
xor
stos
inc
hlt
sbb
xor
rcll
mov
lea
cs
or
cltd
sub
add
pop
push
push
xchg
rcrb
adc
fdivrl
mov
sbb
pusha
and
jns
pop
inc
jno
sub
mov
gs
sbb
push
icebp
lea
popf
scas
pop
mov
xor
test
out
nop
ret
jne
cmp
popl
js
sub
daa
mull
orb
dec
add
xchg
fisubs
pop
adc
push
sub
sahf
sub
or
lods
outsl
push
pop
clc
dec
push
ficoms
out
int
bswap
cmc
inc
mov
rol
inc
int3
cmp
pushf
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
sbb
int3
icebp
in
jo
lahf
jge
jo
das
sbb
out
insl
and
cmp
outsl
or
sub
lods
aas
or
scas
cmc
daa
gs
not
or
inc
sbb
ret
cli
add
addr16
inc
pop
int
cmpsl
cmpsl
xor
js
or
ja
jmp
aas
int
xor
roll
or
outsb
clc
or
insl
push
test
inc
cmp
cld
aaa
sbb
mov
mov
push
push
xchg
gs
loopne
lahf
sti
jne
inc
test
mov
jg
lock
adc
repz
outsl
fistl
push
pop
pop
cmpsl
and
or
fcoms
stc
cmpl
test
into
push
push
dec
lret
mov
xchg
test
repz
bound
jp
cmp
sbb
and
sbb
adc
mov
insl
add
xlat
cs
xor
jne
ret
jae
pop
std
pusha
aas
add
mov
sub
fcomp
test
je
std
mov
int3
xchg
je
pop
cld
adc
fdivrs
ret
jb
cmp
lea
xor
pop
fwait
in
fildll
or
cmp
xor
dec
lock
jno
adc
fs
repz
popa
xor
add
xchg
pop
and
iret
stos
addr16
movsl
mov
pop
pop
and
or
orl
pop
dec
repz
mov
mov
notl
and
mov
push
push
pop
mov
jg
test
jnp
testb
outsb
stos
sarb
outsl
test
xchg
mov
push
sub
adc
movsb
pop
sti
xor
addr16
das
xor
xorl
xchg
test
jg
mov
shlb
dec
jp
addr16
ja
or
inc
pop
mov
or
inc
out
xchg
push
dec
mov
out
cmpsl
icebp
and
push
ss
out
in
jno
mov
pop
jmp
fdivrp
loop
pop
out
mov
aaa
inc
jbe
jmp
xor
mov
mov
insb
xchg
push
movsl
push
outsb
sbb
xchg
cmc
lods
push
pop
xor
inc
lret
loop
mov
lret
hlt
inc
or
xchg
mov
jo
inc
add
in
jmp
decl
daa
scas
lret
mulb
mov
push
and
push
or
pop
push
push
push
or
imul
es
test
and
fsubl
mov
lahf
bound
xchg
mov
jge
fsubrp
dec
scas
dec
add
inc
fs
jno
inc
jne
cltd
add
pusha
ds
dec
aam
xorl
add
ficomps
cwtl
jp
paddw
iret
sbb
adc
jecxz
lret
outsl
xor
lds
cltd
pop
mov
movsb
arpl
repnz
or
cmp
add
inc
icebp
lret
pop
mov
xor
loop
mov
jb
fldcw
lcall
adc
ljmp
loop
lods
imul
push
nop
or
sub
jle
sub
loope
sbb
pop
movsb
andl
and
add
mov
repz
pop
adc
pop
mov
es
xor
mov
js
into
scas
xchg
ret
mov
mov
push
in
add
jge
je
dec
push
xchg
iret
lods
sub
jmp
xor
xchg
sti
xor
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
xchg
inc
testl
jge
jo
pop
loope
mov
sti
outsb
mov
mov
lret
pusha
dec
stos
inc
pop
fimuls
cmpsb
mov
popa
sbb
push
xchg
in
jp
jg
jmp
ja
xor
insb
pop
sbb
incb
popf
shll
in
movsb
aaa
xchg
insb
sti
hlt
and
cmp
inc
sbb
mov
cmc
mov
pop
andl
test
add
aam
jge
pop
jae
adc
rcr
inc
jecxz
mov
mov
mov
ss
cli
xor
inc
add
ds
cmp
test
pop
orl
call
push
adc
sub
shrl
cmp
dec
xchg
js
mov
mov
out
push
push
lret
rorl
sbb
pushf
fsubs
inc
jge
movsb
add
add
sbb
arpl
xor
imul
int
sarl
cmp
iret
sub
or
xchg
into
cmp
out
inc
push
dec
pusha
pop
popa
cmpsb
push
test
inc
inc
shll
inc
sbbl
ret
lea
mov
popa
fmull
js
sbb
cmp
mov
enter
test
mov
pop
js
inc
mov
fdivs
sub
xchg
jns
mov
int
mov
popf
add
mov
push
icebp
addr16
cmp
lret
push
add
mov
inc
test
jns
lods
daa
or
add
in
icebp
add
xlat
add
cmp
mov
fs
adc
ss
out
inc
insb
repz
out
jecxz
add
push
shlb
insl
insl
xchg
push
jnp
push
jle
and
fsubl
not
je
arpl
pop
shll
mov
pop
pop
sbb
add
sar
cmpsb
dec
mov
xor
and
cmpsl
mov
idivb
in
std
jnp
addr16
or
cmpsl
jo
ret
sub
push
mov
adc
fbld
jmp
xchg
inc
decl
push
push
mov
push
inc
shlb
into
or
add
lret
leave
dec
mov
pop
push
lods
inc
out
insl
dec
mov
mov
inc
jge
inc
jmp
push
inc
shlb
mov
lret
mov
mov
repz
js
xchg
ss
popf
stos
es
push
and
fdivrl
mov
je
or
xchg
lcall
add
sub
push
aaa
shll
sub
xchg
aas
out
or
ljmp
add
movsl
enter
jae
js
ficoml
int3
insl
push
and
movsb
jnp
aas
cld
sub
dec
mov
dec
popa
jns
dec
lods
push
pop
jbe
xor
inc
int3
xchg
cs
aas
inc
out
in
das
movsb
push
and
mov
xchg
mov
cltd
cwtl
xlat
loope
pop
or
shl
mov
pop
xchg
dec
xchg
movd
into
insl
lcall
dec
xchg
test
nop
fwait
add
sbb
sbb
in
xor
push
push
fisttpl
pop
lcall
ret
push
pop
and
xor
andl
jnp
rorl
into
cmp
movsl
cmpsl
sub
shr
mov
jne
sub
lret
ss
andb
jge
jo
pop
mov
insb
in
sub
sbb
gs
sbb
in
cs
mov
jecxz
dec
jmp
xchg
int3
pop
xor
mov
loop
dec
lret
sbb
mov
sbb
inc
repnz
mov
jo
pop
inc
dec
pop
jno
and
out
cli
cld
loop
dec
ror
lods
call
popf
mov
lahf
mov
movsb
or
push
xlat
sub
push
and
aam
xchg
ret
imul
lcall
into
mov
mov
jge
sub
fsts
or
dec
aas
inc
cld
or
jno
int3
ljmp
jo
dec
push
call
mov
jmp
je
sahf
fwait
aaa
outsl
sti
stos
imul
das
cs
xor
pop
adc
je
mov
xchg
nop
xor
mov
mov
jp
popa
aaa
pop
incb
subb
test
mov
mov
adc
cmp
addr16
shlb
push
jp
jmp
sub
xor
stos
sub
pop
mov
movsb
jo
and
lret
push
push
push
sub
and
sub
xchg
mov
sbbb
mov
pop
jns
inc
sub
jge
add
sbb
test
ret
xor
bound
adc
mov
mov
and
arpl
adc
adc
mov
and
pop
add
mov
fs
aad
jo
cmpsb
mull
dec
inc
dec
push
jae
popf
mov
hlt
shlb
test
xor
push
insb
jo
push
pushf
pushf
or
aaa
jl
add
lds
and
sbb
rolb
or
inc
xlat
into
jne
jle
fldcw
adc
fdiv
push
das
adc
ljmp
aas
sbb
mov
inc
or
mov
xchg
sub
jecxz
xchg
inc
mov
aad
jp
mov
jle
out
mov
inc
dec
sub
mov
add
shr
push
loop
sbb
test
cmp
mov
jmp
sub
mov
movsb
cs
mov
and
xchg
sub
xchg
test
xor
lods
clc
orb
dec
pop
ficoml
sbb
add
push
cli
stos
add
hlt
jp
frstor
sub
dec
cmc
pop
xor
loope
mov
pusha
mov
jne
or
dec
sub
lods
mov
jecxz
and
es
pop
stc
insl
js
cmp
mov
clc
add
xor
popf
sbb
sbb
push
out
repz
mov
jnp
mov
sbb
in
movsb
fsubrs
call
mov
xor
sti
add
xchg
test
cwtl
jbe
je
inc
xor
or
push
pop
sub
mov
clc
popa
mov
pop
loop
jb
xor
int
mov
pop
inc
mov
outsl
aas
lds
lock
dec
pop
and
sarl
sbb
call
shll
mov
sub
outsb
adc
std
cmc
xorb
clc
push
sahf
shlb
cmpsl
sub
sbb
sub
pop
pop
push
repnz
lcall
adc
stos
adc
or
outsb
dec
push
pop
xchg
fmul
scas
inc
pop
sbb
pushf
dec
mov
iret
xor
mov
daa
mov
xlat
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
adc
xchg
roll
jo
sub
repz
xchg
pop
test
cbtw
clc
out
gs
inc
das
daa
cwtl
lret
xor
mov
push
fisubl
xor
cmpsl
push
xchg
outsl
xor
lds
out
dec
push
insb
mov
movsb
lret
popa
add
xchg
aad
imul
pop
adcb
and
sub
mul
mov
sub
pop
cwtl
or
xlat
push
sub
xor
xchg
and
mov
ret
popf
loop
sub
cmp
xchg
adc
lret
lock
jb
imul
sub
sbb
pusha
cmc
movsl
mov
inc
jno
xchg
xor
gs
mov
ds
lcall
in
xchg
mov
inc
aad
cmp
or
in
pushf
lods
idivl
xor
pop
int
lret
xor
aaa
and
call
xlat
cmp
push
cli
xorl
sub
mov
test
mov
mov
or
outsl
dec
out
movsb
inc
in
std
jbe
mov
mov
sbb
inc
js
fwait
xchg
cmp
outsl
adc
sbb
sarb
xor
dec
mov
push
mov
loope
push
js
jo
mov
or
mov
stc
push
fidivrs
and
push
rcrl
cs
cmc
jmp
cmp
push
dec
outsl
and
and
sub
inc
inc
out
xchg
sti
push
dec
icebp
fwait
dec
jne
cmp
cltd
fbld
arpl
push
adc
xchg
cmc
jbe
pop
lods
mov
das
push
insl
into
pop
hlt
mov
xor
dec
xor
clc
xchg
or
xchg
icebp
pop
push
enter
ret
imull
pop
mov
sbb
shll
rcr
into
scas
hlt
mov
js
pop
add
mov
xor
nop
mul
ret
jmp
cmp
xchg
and
and
xor
in
adc
clc
or
aas
mov
int
jl
push
inc
insb
dec
push
sub
sub
ljmp
in
mov
mov
mov
inc
mov
adc
xchg
pushf
sub
cmpsl
xlat
subb
dec
insb
shll
rcrl
mov
add
pop
push
sub
pop
jo
iret
in
sbb
sub
clc
push
sahf
xor
mov
cmpb
jle
pop
sbb
xor
cmp
pop
sub
pop
xchg
and
fdivl
pop
and
cli
mov
add
iret
jge
push
or
dec
push
ret
call
aad
imul
mov
dec
mov
mov
call
push
cmc
leave
sbb
cmp
divb
xchg
pusha
int
cwtd
dec
enter
sub
orb
mov
dec
ja
sub
loope
mov
call
fldl
sbbl
mov
pop
xor
int
mov
sub
pusha
sar
dec
pminub
or
dec
pushf
add
add
dec
jle
insl
loopne
xor
rclb
jg
jo
push
shl
mov
aas
pop
sbb
mov
in
cltd
dec
inc
in
xchg
xor
add
cmp
in
leave
xlat
cmp
shr
mov
jno
push
daa
fwait
add
daa
js
clc
sbb
dec
outsb
push
aaa
push
in
push
shll
sub
test
rclb
xor
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
cmp
pusha
xorl
jge
jo
mov
add
lret
and
lock
cli
xchg
pop
push
jo
in
xchg
and
mov
jmp
dec
int
mov
sahf
loop
scas
push
cwtl
cmp
xchg
pop
mov
mov
roll
jp
inc
shlb
sub
push
pop
aaa
dec
icebp
lock
out
in
jnp
repz
adc
jnp
stos
cltd
aam
sahf
dec
xlat
and
test
inc
add
cwtl
repnz
arpl
das
lret
push
test
dec
mov
rorb
mov
ficoml
andb
lahf
in
insb
mov
mov
cli
leave
fs
jns
xor
into
test
cmp
insl
pop
mov
aaa
push
or
xor
jne
cmp
or
adc
aad
jge
pop
jmp
cld
cmp
pop
mov
and
or
fistps
jo
repz
ret
jns
adc
stc
pop
sbb
dec
cmc
out
outsb
push
es
into
jno
cs
jno
repnz
cmp
lahf
outsl
test
add
test
mov
icebp
mov
mov
fnstcw
mov
or
push
add
mov
clc
inc
movsb
fistpll
push
or
adc
call
movsb
mov
sbb
jne
arpl
test
lea
in
sbb
push
stos
insb
add
sub
iret
jnp
cli
push
push
ret
add
test
xor
push
mov
mov
outsb
nop
jmp
test
es
iret
lret
jl
in
mov
sub
dec
xchg
xchg
inc
int3
iret
ret
mov
inc
ljmp
dec
dec
or
mov
push
pop
xchg
dec
mov
dec
imul
sub
test
xchg
add
fs
xor
mov
arpl
insl
jge
adcb
nop
fcomp
and
sbb
jns
sbb
mov
ffreep
pop
insl
dec
sarl
add
jnp
pop
test
stos
jne
and
sub
iret
jne
aad
sub
add
dec
adc
ror
adc
mov
mov
icebp
test
sub
adc
inc
dec
fdivrp
jbe
and
inc
mov
xchg
cli
xchg
mov
faddl
inc
mov
addl
push
push
aad
xor
gs
add
imul
or
xchg
nop
mov
jo
adc
jnp
divb
sbbl
inc
sbb
out
out
and
je
mov
add
push
lods
fidivrl
outsl
cmpb
rorb
adc
fs
jecxz
add
scas
scas
enter
or
mov
jbe
add
lods
or
add
jns
jno
xor
subl
shlb
sbb
es
leave
test
jp
es
inc
dec
arpl
adc
std
lcall
dec
cmc
and
daa
sbb
icebp
cwtl
shll
loopne
mov
cmp
jecxz
push
aad
icebp
sbb
cmp
mov
mov
sub
stos
fsts
adc
and
call
adc
fstpt
mov
ja
bound
push
popf
je
int3
test
std
nop
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
lahf
daa
mov
lahf
jge
jo
xor
in
or
cmc
cmpsl
ret
add
sub
xchg
lea
dec
dec
aam
or
je
fcmovnbe
xchg
sbb
or
std
in
xchg
mov
push
push
push
insb
iret
fs
mov
lock
jmp
sub
xchg
out
inc
inc
aas
or
mov
mov
inc
rorb
add
cli
add
pop
lahf
or
fisttpll
rorl
lahf
stc
add
inc
xchg
and
fucomp
fcoms
mov
hlt
stos
mov
movsb
fsubrs
and
jge
cmc
jg
add
inc
push
xor
add
mov
pop
push
jg
xchg
mov
addl
mov
sbb
pop
test
jne
xor
in
adc
dec
idivb
add
jge
add
adc
fldt
xchg
cmc
jl
adc
loope
xchg
ljmp
dec
fwait
mov
mov
outsl
adc
cmp
inc
popa
nop
fsub
xor
cld
andb
pop
lock
sahf
icebp
addl
fistl
or
popf
jp
cmp
jnp
cmp
cld
and
add
loope
dec
lret
mov
adc
cmp
dec
inc
jne
outsl
fstpl
cltd
rcll
and
sub
clc
and
lods
jmp
fldcw
loope
push
add
xor
call
push
mov
xchg
push
and
es
adc
stos
sub
mov
imul
data16
mov
ret
xor
call
sbb
adc
pushf
jl
mov
adc
mov
mov
mov
cmp
or
mov
mov
pop
les
insb
inc
fistpll
loop
dec
or
push
lahf
pop
jge
cmpsl
or
dec
push
xchg
pushf
mov
cmp
mov
jns
inc
dec
push
ret
arpl
ret
xor
mov
daa
ret
push
cmp
outsb
add
loope
pop
sbb
shrl
mov
ret
xor
mov
add
ret
and
lahf
lcall
nop
inc
adc
movsb
sub
incb
mov
lret
add
push
addr16
cmpsl
cmp
mov
adc
mov
inc
nop
clc
cld
pop
mov
jecxz
pop
ss
iret
add
inc
clc
and
mov
leave
jb
imul
cli
sbb
push
xor
xchg
pop
dec
lds
mulb
inc
lret
ja
lahf
in
insb
pop
cmpsb
pop
fdivp
or
mov
mov
iret
jmp
jmp
and
fsts
xchg
pop
dec
iret
xchg
adc
and
popf
dec
pop
ffreep
cmpsb
into
xlat
adc
mov
adc
xchg
dec
shll
mov
daa
push
test
outsb
pop
cld
sub
push
in
jp
mov
jo
cmpsb
push
sbb
cmpsb
pushf
mov
mov
loopne
nop
mov
or
pop
popa
aam
xchg
push
push
mov
aam
adc
mov
cmp
sub
lret
sbb
addr16
and
dec
add
insl
push
addb
cli
insl
out
pop
icebp
movsb
mov
xchg
aas
sbb
push
xorl
cmpb
inc
dec
and
ret
adc
cld
test
jnp
divl
ret
and
jp
insl
pop
xchg
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
sbb
jmp
lahf
jge
jo
push
push
jge
mov
dec
cmp
mov
xchg
leave
sti
popf
xor
gs
jp
stos
xor
aaa
in
mov
repnz
or
lcall
mov
or
inc
repz
xchg
popa
fcomps
sub
inc
addb
mov
inc
ret
int
and
bound
dec
testl
pop
in
jge
mov
pop
ss
sub
mov
mov
mov
jecxz
sahf
paddsw
xlat
fcompl
cmp
push
mov
xlat
jl
imulb
outsl
or
jge
xchg
insb
adc
jnp
jge
push
aam
cltd
and
cmp
sub
add
negl
pop
inc
adc
mov
and
sbb
inc
push
pop
rdmsr
xchg
notb
data16
jb
movsb
shlb
sbb
loopne
or
sbb
push
aam
sub
out
mov
dec
loope
jmp
pop
mov
bound
stos
add
mov
mov
mov
fnstenv
mov
cmp
outsw
pop
mov
shrl
test
bound
mov
ja
cmp
push
push
insb
dec
dec
mov
jnp
in
pop
cwtl
mov
xchg
xchg
sti
orb
add
jg
faddl
daa
mov
ficomps
call
movsl
push
mov
mov
push
lock
jmp
repnz
sbb
movsl
mov
pusha
jo
je
xchg
scas
hlt
jno
sub
stos
cmpsb
adc
xor
out
adc
mov
push
pause
lock
in
xchg
test
mov
in
adcl
dec
inc
in
dec
shlb
jae
push
mov
dec
inc
pop
add
pop
fimuls
mov
in
incl
cli
pop
jbe
lods
mov
popf
inc
mov
jne
les
cmpsb
mov
scas
mov
scas
cs
es
in
out
jmp
xchg
lods
ret
lret
sbb
rolb
cmp
mov
dec
inc
aas
ss
and
push
mov
out
inc
mov
mov
push
adc
mov
hlt
cmc
push
inc
cs
mov
mov
roll
xchg
andl
mov
clc
sbb
and
jmp
mov
lods
ljmp
or
adc
lods
andb
lds
xchg
adc
mov
mov
jae
pop
sub
call
out
sub
cmp
jp
or
xchg
in
lret
and
ljmp
in
shrl
cmpsl
ficoms
push
in
scas
cmp
and
sbb
addb
ficompl
pop
dec
adc
insb
mov
sub
mov
mov
inc
xor
jne
jb
sub
or
sbb
movsl
imul
pop
cld
cmp
out
push
test
xchg
inc
cld
sbb
mov
or
xchg
mov
or
dec
inc
sbb
xchg
cs
jle
scas
popf
push
popa
filds
movsb
ret
sub
jge
test
dec
adc
aaa
xchg
adc
addl
adc
xor
cmpsl
clc
cmp
pop
nop
pop
repnz
inc
lods
mov
loope
rorl
push
push
cmpsl
inc
xchg
mov
or
push
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
pop
arpl
lahf
jge
jo
loope
sbb
xor
stos
mov
scas
sarb
imul
jb
decl
dec
mov
mov
cmp
out
data16
mov
cmp
in
ret
xchg
mov
ds
call
call
test
daa
ret
je
movsb
shrl
ljmp
xor
mov
push
cmpsl
stos
add
test
push
sub
imul
cmp
sbb
fs
mov
add
mov
xor
mov
ret
push
fwait
xchg
add
ds
es
test
add
rcrl
xchg
cmpsb
mov
push
cs
mov
in
scas
addr16
pop
or
and
mov
insl
jae
data16
or
icebp
ret
not
jmp
mov
loopnew
xchg
inc
lahf
mov
lods
orl
or
and
stos
xor
sarl
mov
ds
push
out
pop
rcl
shr
cmpb
dec
movsb
adc
adc
sti
sarb
pop
mov
stc
lret
imul
sub
movsl
mov
into
cmp
adc
insl
xlat
xchg
fmul
scas
pop
call
scas
sub
jle
cltd
es
xchg
xchg
in
scas
mov
inc
pop
adc
shrb
orl
jle
leave
push
push
mull
mov
subb
adc
jl
ja
mov
out
sarb
lahf
dec
bound
jp
outsb
stos
add
mov
dec
sub
aas
lret
inc
sub
aas
xor
lds
xchg
push
sbb
sti
test
pop
xor
mov
adc
addr16
mov
in
mov
xor
or
mov
sub
notb
or
push
enter
xchg
jge
cmp
push
loopne
inc
sti
mov
or
ficoms
jbe
je
sub
mov
iret
adcl
jecxz
test
pusha
push
adc
fwait
loope
push
or
leave
cmpsb
dec
jmp
jbe
popf
int3
add
inc
mov
jnp
hlt
je
jno
loop
cmpsl
leave
je
loopne
lret
mov
or
aas
rclb
sbb
in
lahf
jns
imul
fisttpl
add
pop
xor
pop
out
jns
int
test
xchg
mov
insl
fs
in
xor
jb
in
inc
and
imul
insl
add
out
and
xor
push
pop
mov
or
testb
and
or
gs
xchg
sti
int3
add
das
sub
test
clc
outsl
or
pop
sbb
or
lods
hlt
aaa
pop
imul
icebp
outsb
outsb
popa
popf
lds
daa
ja
pop
les
sub
out
cltd
mov
enter
scas
pop
mov
push
xchg
add
shlb
mov
jns
xor
mov
addb
xor
out
loop
insb
jecxz
incl
out
push
sub
call
pop
pop
popf
dec
mov
je
mov
jmp
frstor
inc
and
dec
xchg
dec
or
ja
and
nop
mov
push
sbb
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
push
xchg
cmpsl
fucomi
xchg
jo
lahf
jge
jo
lcall
mov
push
das
add
mov
adc
daa
pop
into
das
into
pop
jo
insl
cli
imul
mov
test
push
add
mov
in
aas
and
insl
stos
jne
idivb
mov
and
subb
add
push
stc
movsl
or
jae
sbb
mov
popa
fldt
xor
pushf
mov
loope
sbb
mov
push
mov
lret
inc
out
jnp
mov
ficompl
movsl
sub
lock
pusha
cli
xor
dec
xchg
mov
ret
mov
jne
mov
out
dec
test
pop
pop
icebp
adc
fcoms
les
hlt
sub
daa
or
xchg
xchg
dec
stos
sbb
mov
fldcw
or
push
dec
psrad
outsl
clc
cwtl
icebp
inc
mov
cmpsb
fiadds
pop
adc
dec
push
dec
out
adc
pop
inc
mov
push
insl
fwait
dec
dec
cmp
push
das
aad
lcall
jbe
dec
daa
into
lods
pop
pop
test
fdivl
les
stc
sbb
stos
je
jns
cwtl
lcall
sub
jl
loop
jne
daa
push
jmp
jge
int
add
jecxz
sbb
and
test
fcompl
push
dec
pushf
mov
mov
ljmp
ret
loop
cmp
jge
push
fnstsw
pop
popa
leave
hlt
lcall
ret
iret
sub
inc
sbb
pop
sahf
jmp
push
or
fisttpl
pop
xlat
sti
dec
xchg
and
shl
mov
cmp
adc
push
sub
ljmp
ljmp
jne
dec
inc
incb
fwait
mov
push
mov
mov
push
adc
xchg
or
sub
arpl
pop
or
out
adc
add
push
sar
push
xor
movsb
ret
shrb
jae
rclb
and
jg
in
stc
mov
and
mov
js
inc
mov
loop
and
aad
js
mov
adc
sub
jbe
mov
movsb
cmp
outsb
push
mov
int
push
mov
test
sbb
xchg
dec
testl
and
or
sub
mov
mov
adc
and
addl
cmp
or
popf
rolb
push
mov
cli
lahf
test
imul
add
xchg
add
xchg
lret
out
sub
in
repnz
movsb
dec
or
inc
mov
adcl
sub
cmp
shr
lret
xchg
inc
int
cld
and
arpl
and
sub
into
mov
test
mov
adc
dec
mov
dec
jnp
sub
xorl
in
pop
dec
ja
sub
ss
daa
orb
xchg
fldcw
and
or
xchg
subl
lods
movsl
out
fstp
fs
cmc
add
pop
sarb
jmp
mov
loop
xchg
jge
xchg
popa
popa
shl
scas
lret
in
add
xchg
xlat
fisubrl
int3
mov
jle
mov
sub
js
in
pop
xlat
and
xor
or
iret
mov
cmpsl
push
fstpt
or
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
subl
push
or
lahf
jge
jo
js
insl
push
mov
test
pushf
lret
test
mov
lret
enter
xchg
sub
lcall
stc
mov
add
cwtl
mov
lods
mov
push
cmpsl
xor
dec
fs
leave
lret
out
xor
xorl
popa
cmp
push
pop
addb
test
ljmp
pop
outsl
lea
aam
xorb
mov
jno
lock
mov
fs
aaa
mov
rclb
push
dec
cmpsl
imulb
jo
stc
lods
cmova
jle
lods
push
movsl
les
push
mov
xor
inc
adc
scas
lret
mov
jno
lcall
or
shll
ss
test
jne
cld
jecxz
cmp
add
mov
cmp
repz
push
lods
pop
push
dec
fisttpl
sbb
icebp
jl
mov
dec
sub
mov
lcall
imul
daa
inc
adc
loopne
sbb
or
int3
loop
arpl
lahf
out
fwait
push
stos
pop
fbld
add
cmp
dec
divb
rcrl
or
bound
ss
mov
mov
iret
and
es
imul
dec
pop
out
push
mov
daa
xorb
rcrl
std
sub
fnstenv
aad
insb
std
xchg
loop
cltd
inc
filds
pop
inc
or
lret
push
inc
pusha
xor
or
inc
cmp
jge
aaa
js
push
stos
add
out
sub
push
stos
dec
clc
add
push
dec
pop
fidivl
xor
ja
pop
stc
mov
dec
adc
xor
fstps
call
cmp
andb
inc
mov
out
lret
pop
adc
in
jno
sub
inc
arpl
push
out
pushf
mov
push
jp
or
movsb
imul
cmp
sub
fwait
xchg
jg
imull
int
lds
stos
jns
sahf
mov
or
add
imul
mov
lcall
pop
lods
jo
dec
sub
xor
int
adc
icebp
cmp
mov
imul
fisttpl
mov
rcll
enter
push
call
jno
lahf
imulb
mov
inc
je
inc
dec
aam
jo
ss
sbb
xor
lock
xorb
lcall
les
ja
test
pop
ret
sub
push
loopne
fildll
jo
jg
adc
loop
xor
cltd
in
inc
or
xor
jns
xchg
xchg
pusha
popa
into
pushf
into
push
mov
out
pop
lods
nop/reserved
sbb
cmc
outsl
arpl
xor
cmp
mov
in
or
xchg
loop
xchg
shll
cmc
fistps
inc
mov
aam
ljmp
testl
std
popf
dec
cmpsl
das
sti
stos
clc
push
dec
shlb
xchg
push
cmpsl
subl
xchg
or
jnp
or
xchg
fsub
mov
inc
scas
mov
mov
nop
jnp
in
pop
out
and
sbb
lods
nop
xchg
xchg
paddsw
cli
jo
test
adc
xchg
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
popf
jo
lahf
jge
jo
mov
sbb
add
leave
mov
mov
pusha
sbb
fisttpll
dec
loop
jg
push
mov
inc
add
add
mov
in
test
inc
test
test
ret
push
imul
negw
stos
mov
mov
dec
cmpsb
mov
pop
ret
jns
adc
push
sub
xchg
push
movsl
lret
and
out
or
aaa
into
jno
je
add
stc
repnz
ljmp
sti
add
mov
cltd
xor
mov
push
insl
add
fistpll
movsb
clc
ja
jnp
sbb
lds
dec
shrl
ret
or
lock
leave
lods
jae
inc
sti
rcrb
movsb
jbe
add
jg
repz
div
or
cltd
dec
jl
test
sub
fmuls
clc
push
inc
and
rclb
jl
ja
push
test
dec
and
adc
or
add
je
lret
movsb
loop
out
sbb
cwtl
mov
aad
adc
jl
mov
cmc
or
scas
movsl
out
fidivrs
cmp
subl
sbb
push
lcall
jl
ja
test
in
hlt
insl
sahf
lea
ret
cltd
sub
pop
outsb
jb
ficoml
sub
jmp
ja
inc
xor
or
and
sbb
xor
and
sahf
jb
arpl
dec
adc
jl
lds
mov
sub
movsb
lods
testb
lret
adc
insb
daa
out
outsl
cmpsb
mov
lret
and
xchg
jo
inc
fwait
test
adc
ljmp
out
outsb
dec
xlat
fimull
js
rep
pop
lcall
lahf
sahf
test
xchg
dec
push
jb
push
pusha
fisubl
loope
adc
and
fdivrs
jle
and
into
or
dec
or
les
inc
jno
sub
rcrb
inc
cmp
jns
jecxz
xor
sub
mov
cmp
add
xchg
xor
fistl
mov
and
pushl
xlat
or
mov
gs
add
mov
repz
cmp
mov
mov
adcb
or
stos
ds
mov
hlt
shrl
leave
push
fcoml
cmp
xor
fs
mov
lcall
insb
test
push
push
ret
or
idiv
ret
scas
sub
sbb
pop
es
stos
sbb
and
mov
out
jo
and
cmp
mov
mov
mov
add
adc
jo
inc
sub
fwait
pop
sbb
mov
out
movsl
xchg
adc
out
and
scas
push
cmpl
xchg
lods
dec
fsts
ja
addb
pop
push
dec
pop
jo
push
jns
xchg
jnp
loopne
fbld
pop
push
and
and
loopne
outsb
sarl
pop
jge
enter
cwtl
inc
add
pop
jo
sbb
pop
fiaddl
mov
pop
xchg
mov
ja
adc
mov
push
sub
cmpsl
pop
mov
insl
popaw
cmp
repz
jge
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
xchg
roll
lahf
jge
jo
sub
xchg
or
rcrb
sbb
inc
adc
mov
sbb
xor
lods
dec
cmc
cmp
xchg
popa
mov
xchg
push
aas
movsl
sti
xor
add
mov
shl
dec
adc
lahf
lahf
add
pushf
inc
xchg
adc
ret
and
add
jno
inc
mov
orb
dec
cwtl
adc
inc
ss
shll
jo
lcall
lods
push
xchg
inc
xchg
outsb
popf
xchg
cmp
cmp
and
push
aam
std
cltd
out
lcall
lahf
and
or
pop
imul
cmpsl
das
pop
fisttpll
ficompl
cmp
mov
pusha
rcrl
shll
sbb
and
pop
pop
repnz
jae
inc
mov
mov
shlb
pusha
jne
leave
cmc
add
mov
js
push
cltd
fisubrl
shrl
push
bound
inc
push
sbb
lret
das
aaa
cmpsb
cmpsb
push
dec
lret
in
fdivl
aam
push
inc
cs
xchg
stc
cmp
xor
or
adc
mov
addr16
or
adc
mov
sub
add
data16
outsb
cwtl
inc
decb
in
xchg
daa
int3
and
adc
shl
fwait
pop
sub
fwait
mov
inc
inc
jns
xchg
mov
ret
mov
cltd
and
sahf
dec
pop
call
inc
fmul
lea
shrb
inc
repz
jo
mov
jae
dec
and
jmp
fnstsw
xor
test
fwait
xchg
cmpsl
adc
loop
mov
lods
pop
popa
bound
outsb
or
out
mov
in
xchg
iret
or
and
movsb
xor
lcall
repz
adc
jbe
insb
fdivs
addb
cld
push
jo
mov
adc
cmp
inc
adc
mov
popf
pop
idiv
cli
addr16
imul
ljmp
test
and
in
imul
outsl
jbe
or
pop
pop
add
mov
mov
movsb
add
dec
xchg
mov
subb
stos
out
xchg
add
mov
cmp
mov
mov
lock
push
rclb
jbe
sbb
std
adc
jg
add
andl
dec
lock
push
adc
mov
xchg
insb
jge
sub
xor
push
xchg
push
std
lahf
test
mov
xor
sub
jo
or
mov
adc
arpl
sbb
mov
stc
adc
and
adc
enter
and
data16
push
pushf
xor
negl
out
xchg
pop
push
lret
lret
pusha
mov
pop
repnz
mov
cmp
and
addr16
add
or
fisttps
shl
pop
lahf
or
loopne
jle
push
jo
and
clc
cmp
pusha
loope
out
adc
lea
adc
mov
inc
jno
xchg
fdivs
ret
mov
sahf
inc
ja
aas
ret
pushl
adc
call
shl
repnz
and
cli
insl
adc
pusha
cmc
inc
mov
cmp
jno
cmp
int
stos
aad
int3
mov
jne
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
and
push
jg
jo
je
scas
mov
push
pop
lock
cmp
rcr
lds
adc
aas
push
add
inc
jecxz
dec
loope
mov
add
shlb
out
sub
stos
cmpsl
mov
cmp
pop
sub
or
inc
cltd
iret
or
outsb
push
sbb
mov
mov
incb
push
sub
stos
adcb
sbb
stc
xchg
xchg
cmp
sub
jb
or
clc
cld
add
mov
dec
sbb
jle
push
ja
xor
or
push
cmpsl
xchg
movsb
mov
ljmp
adc
cmp
and
int
mul
std
mov
jns
add
fistl
xor
add
ja
mov
dec
xor
mov
imul
mov
lods
xor
xchg
addr16
mov
lret
imul
dec
mov
in
add
dec
inc
mov
dec
mov
je
je
bound
mov
jo
sbb
ja
fdiv
movsl
scas
xor
insb
les
mov
add
aaa
sbb
repnz
inc
xor
clc
mov
clc
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
sahf
mov
js
movsb
jo
ret
jg
jo
push
ja
sub
mov
mov
lret
fstpl
xchg
jo
lods
jbe
or
test
filds
add
xor
push
fcomi
adc
mov
inc
xor
sbb
int3
out
ljmp
pop
stc
fstps
outsl
xor
leave
and
inc
adc
popf
push
inc
adc
out
sbb
mov
icebp
mov
or
imul
sub
mov
mov
mov
lahf
and
push
lret
sub
pop
int3
popa
mov
fcmovbe
xchg
fcmovne
sbb
movsb
addr16
xor
bnd
add
mov
test
dec
fildll
sub
call
push
enter
mov
pop
jle
push
xlat
pop
mov
dec
mov
mov
sub
push
fisubrs
sbb
orl
ds
sbb
lds
cmpsl
adcb
lds
les
cmpl
fisttpl
cmc
in
call
cmp
dec
scas
push
jp
and
scas
xor
ljmp
incb
aaa
adc
movl
and
lea
mov
jmp
rorl
sbb
dec
mov
jo
pop
xlat
lret
jnp
je
popf
repnz
mov
ret
ret
decl
push
in
jmp
and
sub
jl
iret
lahf
cmpsl
test
jmp
subl
lea
jge
int3
add
jns
or
and
mov
jecxz
mov
mov
lahf
and
mov
push
mov
dec
ljmp
pop
xchg
xor
je
jmp
fcoms
adc
mov
shlb
xchg
pop
push
sub
pop
dec
repnz
shlb
mov
mov
leave
jno
das
mov
push
mov
pop
ficomps
imul
mov
int3
mov
lret
xchg
lods
sub
push
xchg
inc
xor
mov
sbb
movsl
mov
push
scas
lret
dec
push
ja
or
lods
xchg
retw
ret
cld
fldt
jne
out
cmp
jge
jns
scas
push
cwtl
sbb
in
add
fidivl
cmp
cmpsb
aaa
mov
iret
adc
insb
mov
mov
popa
pop
out
mov
into
ss
call
add
add
mov
xor
xchg
lea
pop
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
jne
mov
jg
jo
cmp
cwtl
push
stos
mov
fcomps
mov
lods
lret
out
and
jp
inc
and
aas
adc
xor
add
and
adc
stos
sbb
addl
stos
inc
imul
fsts
stos
outsl
scas
mov
adc
push
cmp
push
pop
sahf
ror
roll
adc
insl
add
pushf
imul
in
mov
jmp
pop
test
fadd
lret
inc
adc
leave
ja
loope
mov
ljmp
sti
ror
fisubl
ljmp
or
fwait
stos
pop
cmp
adc
jnp
fld1
xor
add
xor
push
lods
push
sbb
add
add
pop
push
sbb
adcb
mov
outsl
negb
dec
mov
mov
jne
fmuls
inc
inc
aam
outsb
xchg
xor
inc
fidivrs
ljmp
movsl
pop
outsb
call
iret
fildll
andb
mov
call
jno
lods
and
aam
popf
nop
jg
mov
sbb
mov
aaa
outsl
push
mov
add
dec
mov
xor
fucomp
stc
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
leave
push
jo
ret
jg
jo
aaa
pop
add
adc
out
clc
sbb
aas
sbb
jg
and
mov
daa
jnp
call
fucomi
ja
cli
cmpsb
jae
push
push
pop
aam
add
aaa
dec
sub
jecxz
loope
movsl
cmp
enter
in
lock
sqrtps
pop
fiadds
xchg
in
and
out
xor
mov
icebp
imul
test
shrl
jns
lds
push
repnz
cld
mov
mov
pop
stos
jg
rcrb
bound
jbe
adc
sub
js
js
and
push
jns
inc
imul
cmp
test
push
decl
testl
jecxz
and
orb
push
jno
or
arpl
xor
xchg
aas
mov
sbb
test
add
dec
hlt
cmp
movsb
adc
xchg
inc
jae
xor
pop
sbb
aaa
shlb
sbb
mulb
adc
jb
mov
and
xor
inc
in
cmp
pop
in
scas
bound
inc
pop
fadds
add
outsb
pop
xor
test
test
aas
push
pushf
scas
jae
pop
test
push
or
fcoms
push
cmpsb
add
add
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
dec
lods
ret
imull
jo
push
mov
xchg
lahf
popf
xor
jle
lods
jo
pushf
inc
lds
imul
and
lret
xchg
and
sub
das
fdiv
ds
jmp
xchg
sub
pushf
fcomps
nop
add
pop
push
or
pop
mov
jns,pt
lea
pop
fs
mov
mov
mov
rorb
inc
insb
adc
mov
sarl
and
fwait
cltd
daa
mov
push
mov
stc
adc
jno
jg
lahf
les
xor
add
or
add
dec
out
fwait
lahf
adc
pop
repnz
mov
mov
mov
push
sbb
clc
and
jge
idivl
cltd
testl
loopne
or
in
scas
pop
ljmp
mov
aam
repnz
push
sub
push
repnz
test
call
xchg
xlat
mull
loope
lea
inc
lcall
xor
xor
popa
dec
push
movswl
add
test
sbb
fsub
xorb
je
shlb
push
out
scas
push
sub
adc
in
movzwl
jmp
movntps
push
rep
mov
push
jle
pop
fwait
mov
jg
jo
pop
out
sbb
mov
leave
sbb
pusha
je
cwtl
push
adc
push
jmp
aam
lret
int3
pop
push
ret
push
xlat
xchg
fcmovnu
out
out
imulb
enter
fstps
fdivl
and
sbb
mov
jmp
loop
repz
xor
std
mov
je
pop
outsl
in
xor
stc
or
adc
or
lock
adc
jp
insb
mov
adc
mov
ja
mov
testb
adc
iret
in
pop
mov
inc
sub
pop
pop
fwait
sbb
sbb
inc
sub
iret
in
push
sarb
mov
cltd
push
hlt
stos
stos
jbe
lds
mov
fimull
add
divb
lods
mov
shrl
adc
in
out
mov
cmp
cmp
add
mov
pop
xor
addr16
int3
std
pusha
jmp
pop
out
mov
aas
jecxz
pop
xlat
sti
jecxz
dec
movsl
sub
xlat
stos
mov
cmp
xchg
lods
scas
mov
xchg
mov
cmp
lcall
fchs
les
push
aam
or
fstps
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
add
int
lods
jo
ret
jg
jo
cs
mov
sub
into
idivb
or
movb
fabs
mov
out
push
bound
sbb
mov
dec
cmp
mov
int
sub
mov
or
jmp
mov
adc
xchg
mov
sub
fbld
imul
sahf
mov
filds
mov
add
mov
and
pop
hlt
in
int3
push
scas
cwtl
fcmovu
jae
scas
out
enter
insl
test
mov
and
mov
jbe
loope
test
mov
xor
fidivl
aaa
xchg
xor
aaa
fs
iret
push
cmp
out
call
xchg
jle
inc
ja
cmpb
adc
jmp
sub
xor
mov
out
sbb
gs
subl
test
or
xlat
cmp
movsl
and
jb
sbb
jb
insb
lea
dec
cmc
push
or
testl
mov
or
push
dec
adc
sub
add
lahf
clc
sbb
adc
mov
movsl
fistpl
aaa
lds
adc
or
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
call
stos
jo
ret
jg
jo
movsl
add
fistl
mov
jno
ss
mov
dec
loopne
rcrb
das
cmp
aaa
mov
into
pop
sub
or
adc
add
into
adc
js
data16
std
sbb
outsl
std
icebp
std
add
or
test
adc
cmc
aas
pushf
scas
xchg
daa
das
ss
xchg
pop
pop
mov
loope,pt
popf
xchg
mov
mov
mov
js
in
pop
clc
or
lock
cltd
mov
or
sbb
adc
imul
lock
testl
add
mov
lock
jnp
sbb
sub
inc
pop
mov
pop
xorl
imul
repnz
mov
adcl
pop
pop
std
inc
xchg
stos
push
idivl
cs
add
mov
cld
ror
xorl
xor
dec
incb
cli
cwtl
xorl
cwtl
in
lret
andl
dec
xchg
rolb
push
xchg
mov
pop
daa
pop
pop
sub
in
das
popf
sbbb
mov
repnz
xchg
add
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
iret
mov
jg
jo
xchg
pusha
out
inc
jnp
mov
fisubs
sti
outsb
mov
data16
and
cmpsl
cld
mov
daa
and
dec
cmp
sti
mov
ret
aaa
xchg
cmp
mov
lea
pop
pop
xchg
mov
cld
push
scas
nop
aad
mov
movsb
in
scas
clc
into
fadds
neg
and
sti
mov
pop
mov
nop
aaa
pinsrw
lds
pop
or
xchg
add
das
xor
jbe
or
enter
fwait
jae
aas
push
int3
icebp
sahf
test
inc
aam
mov
lea
jmp
sbbl
arpl
js
inc
xchg
test
enter
stos
add
sub
imulb
daa
addr16
jae
xchg
or
ljmp
nop
andb
into
mov
in
cmpsb
xchg
jg
xchg
push
mov
repz
repz
imul
pop
jmp
pop
pusha
dec
nop
mov
mov
push
iret
dec
sub
cmp
shl
fnstenv
adc
int3
mov
in
xor
sub
lret
pop
les
push
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
sarb
xchg
sub
jo
ret
jg
jo
and
jl
int3
cmc
xor
pop
rol
xor
adc
xchg
shlb
mov
imull
aas
std
cmpsb
cmp
pusha
adc
add
cmp
lock
fistps
and
addb
cmpsb
adc
fs
cmp
jo
stc
pop
pop
pop
inc
adc
cs
imul
add
dec
test
scas
fidivrl
xchg
fs
pop
sbb
jbe
gs
pop
add
push
pushl
pusha
and
cmp
add
sahf
sbb
cs
jge
sbb
cltd
mov
xor
pop
sbb
dec
cwtl
mov
frstor
out
mov
mov
arpl
lea
and
add
out
frstor
pop
jl
mov
push
in
cli
clc
das
cmp
and
adc
pop
daa
sub
adc
nop
sub
leave
std
mov
cwtl
cmp
insl
out
sub
aas
push
icebp
or
xlat
push
ss
or
xchg
pusha
jbe
push
inc
xchg
adc
cmpsl
mov
ja
xor
cs
sub
dec
imul
and
insl
jns
shl
cli
fimull
add
add
ror
icebp
imul
test
arpl
mov
jo
jg
jo
add
ret
pop
sub
sahf
adc
push
mov
pop
imul
fsubrs
cmpsb
and
rclb
lret
mov
adc
inc
pop
cmp
xchg
icebp
sbb
pop
outsb
and
pop
shlb
jecxz
call
dec
repnz
inc
cmp
cmp
les
gs
inc
insl
int
fwait
rcll
insb
cmp
xor
push
lahf
mov
ja
jp
pop
xchg
subb
jno
pop
imull
inc
cs
mov
inc
sahf
repnz
mov
xchg
ja
stos
pop
jmp
pushf
push
int
int3
mov
and
movsl
xchg
xor
mov
shll
xor
adc
pop
push
push
inc
ds
pushf
stos
and
add
sbb
sbb
dec
mov
adc
int
cmp
stos
and
stos
out
add
push
movsl
inc
incb
jmp
dec
repnz
jo
and
mov
pop
add
divb
test
arpl
xor
repz
xchg
jg
sub
cmp
lahf
dec
sbb
das
dec
fsubrs
pop
sub
sub
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
je
pop
inc
mov
jo
mov
add
pop
iret
dec
xchg
in
and
call
vsqrtpd
lea
jmp
lds
add
push
jp
xchg
pop
lods
insl
mov
sbb
push
gs
adc
dec
outsl
push
enter
mov
mov
in
sbb
adc
mov
jmp
test
je
movntps
mov
lret
pop
xchg
inc
lret
adc
jbe
or
andl
pusha
mov
add
push
sbb
mov
xchg
inc
push
pop
pop
dec
lret
inc
stc
fbstp
stos
xor
enter
push
loope
loopne
sbb
cmp
mov
out
mov
push
adc
rolb
xor
adcl
cmp
iret
sub
sub
mov
xchg
sub
mov
arpl
lret
or
mov
sub
cwtl
sbb
test
inc
inc
sbb
cs
jl
mov
push
fcmovb
into
mov
inc
mov
mov
dec
jge
loope
ret
push
pop
sbb
adcl
sarb
adc
dec
shll
inc
loop
shrl
lret
push
xchg
mov
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
adc
mov
loop
pushf
add
xor
push
or
push
pop
lods
mov
xor
inc
dec
pop
shlb
daa
push
mov
jae
pop
or
sbb
inc
cmp
pop
cmp
add
rcrl
adc
mov
adc
out
or
jg
out
mov
in
jne
ja
cmpsl
fsubrs
cmc
hlt
shll
into
add
ja
inc
xchg
adc
bnd
cmp
xchg
dec
insl
ljmp
jns
jg
bound
lahf
or
dec
cmpsb
shr
cmpsb
mov
pop
push
sub
cltd
sbb
jge
dec
mul
loope
cmc
imul
cmpsb
je
or
rcll
add
mov
xchg
push
pop
push
testb
push
pop
je
jl
inc
test
loope
and
fisubs
pushf
mov
cwtl
aam
jae
sti
mov
push
dec
sub
add
pop
and
mov
int
xlat
mov
fisttpll
add
fldcw
cwtl
fdivs
inc
out
movsl
push
data16
pop
movsl
enter
jne
pop
xlat
bound
mov
mov
sbb
sbb
adc
lds
pop
ljmp
pop
xor
dec
ret
xor
ja
lahf
std
jne
sbb
aam
stos
adc
pop
mov
mov
stos
cltd
je
pop
sbb
enter
xchg
hlt
insb
add
fdivrl
call
jmp
mov
adc
inc
sti
inc
int3
rol
mov
jnp
gs
cmp
shlb
sahf
cli
mov
gs
inc
idivb
add
popf
sbb
xchg
cmp
cmpsb
in
lea
outsl
pop
inc
add
out
or
cs
ss
lods
fdecstp
jb
ss
ret
push
xchg
outsl
xchg
add
adcl
xor
xor
jmp
hlt
out
mov
jecxz
pop
shlb
popa
in
fnsave
out
cmp
lret
adc
and
sarb
hlt
add
mov
jnp
mov
and
pop
cmpsl
cmp
iret
xchg
dec
iret
insb
adc
jbe
lcall
jl
ljmp
outsb
mov
scas
sub
xor
mov
shll
sahf
std
cli
test
sahf
mov
jg
xor
push
mov
inc
rorb
jbe
sbb
dec
mov
adc
xchg
jnp
iret
loop
pusha
cmpl
in
int3
es
ret
shl
mov
fs
mov
shl
mov
or
movsb
out
jns
outsb
pop
sub
inc
cmpsl
push
cmp
fbld
repnz
mov
lods
xor
or
inc
mov
dec
in
je
push
sub
dec
push
mov
clc
ljmp
in
imul
call
es
sub
mov
frstor
cld
repz
pop
nop
dec
mov
mov
gs
add
mov
gs
mov
scas
push
out
or
aam
sub
mov
call
cmp
fcmovu
cmpsl
mov
iret
adc
mov
sbb
aaa
filds
cmp
std
sbb
dec
ret
scas
enter
stc
adc
ficompl
sahf
scas
data16
fildl
mov
adc
divl
and
sub
stos
sub
aam
xor
sbb
ret
cmp
inc
fcompl
imul
push
negl
jmp
mov
cli
xor
testb
xchg
lret
outsl
xorb
jo
mov
cmpsb
aaa
jmp
xor
dec
enter
pop
jle
aam
xchg
in
adc
jp
pop
sbb
in
rolb
leave
mov
xor
jle
stc
aas
mov
pop
pusha
sbb
push
xchg
or
pop
xchg
and
testl
and
sbb
imul
cmp
nop
lea
mov
sbb
and
jno
jne
and
dec
pop
mov
fisubs
sbb
adc
emms
mov
push
outsl
and
jmp
pusha
orb
lods
xor
fcomp
mov
fcoml
jb
cs
sub
movsl
notl
lahf
mov
lds
cmp
lods
lahf
aam
clc
mov
add
lods
nop
inc
ja
sub
je
aad
roll
insl
daa
xchg
pop
cmp
fs
les
popa
jmp
adc
cmpl
popa
gs
mov
jnp
fldcw
scas
hlt
sub
in
xchg
pop
imul
rol
sahf
fadds
mov
push
pop
adc
jecxz
mov
in
push
jbe
lcall
cmp
lret
mov
mov
push
jbe
jae
pop
repz
push
addl
test
adc
stos
jns
jle
dec
idivb
xchg
dec
pop
xorb
hlt
jg
cmc
shlb
mov
xchg
lea
adc
cmpsl
mov
add
or
mov
push
lods
push
inc
mov
jp
push
inc
mov
dec
pushf
fwait
push
sub
or
in
les
sbb
int
mov
and
push
mov
jp
out
fucomi
pop
or
jbe
loope
pop
pushf
les
fldl
das
cmp
fsts
push
push
jne
add
sbb
sbb
loop
mov
adc
and
xor
aad
test
imul
fsts
rcrb
les
repnz
dec
add
adcb
jmp
cmpsb
xor
inc
and
sbbb
xchg
insb
push
movb
mov
leavew
mov
dec
pop
mov
movsb
aad
mov
sbb
mov
jbe
mov
jno
and
cltd
xchg
pop
fiadds
mov
insb
lods
and
xchg
and
sbb
lcall
push
or
or
xchg
cmp
xchg
push
outsl
mov
add
inc
xchg
and
jge
out
jle
add
in
jns
xor
js
test
push
and
dec
push
rorl
iret
jo
pop
or
fildl
sub
in
mov
notl
insb
inc
sbb
lock
push
movsb
sti
and
add
bound
mov
and
xchg
out
test
lock
mov
sti
cmp
mov
sbb
mov
adc
mov
fadds
cmp
in
stos
cmp
add
loope
fbld
lds
mov
lcall
gs
imul
push
or
inc
lds
arpl
push
jne
sbb
mov
dec
xlat
push
js
add
lock
pop
dec
lcall
or
mov
subl
pushf
clc
mov
mov
movl
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
int
jbe
xor
jge
jo
test
es
iret
push
mov
ss
ljmp
adc
jp
mov
sbb
push
std
push
xchg
lret
imul
lcall
and
mov
adc
xor
icebp
mov
mov
or
or
adc
les
dec
sub
and
std
mov
jecxz
pop
push
outsl
sbb
ficompl
adc
lcall
inc
lea
jp
insl
fstpl
roll
fisubrl
cmc
sub
sbb
pop
and
mov
rol
arpl
pop
xchg
adc
sahf
not
movsb
push
dec
cltd
loop
xlat
pop
pop
cmp
dec
cmc
cmp
sbbb
and
adc
jle
loope
mov
push
mov
mov
xchg
mov
xor
addl
enter
fcoms
imul
test
shlb
sbb
out
and
aad
mov
fbld
mov
mov
sahf
ret
mov
jb
mov
xchg
pop
xchg
icebp
jp
daa
pop
leave
mov
xor
into
dec
push
icebp
outsl
dec
pop
jnp
mov
stc
add
int3
sbb
arpl
outsb
pop
push
das
sarb
push
sbb
int
scas
xchg
and
mov
cmp
push
call
ret
rcll
jle
jg
in
push
sub
cli
mov
dec
dec
lahf
shl
sbb
push
cmp
mov
sbb
and
test
mov
shrb
cmp
ss
jecxz
xchg
addr16
pop
cmp
outsb
repnz
mov
jecxz
cmc
inc
addr16
cs
fisubl
repz
aas
mov
push
out
mov
pop
or
clc
js
jg
das
movsb
daa
repz
adc
aaa
movsb
fstp
insl
cmpsb
inc
cld
loop
loopne
ret
fmull
mov
lea
cltd
mov
inc
xlat
repz
movsb
sbb
mov
pop
mov
add
mov
in
stc
jp
pop
inc
cli
cmp
lods
cmp
sub
adcl
pop
fsubp
xchg
xchg
fimuls
add
pop
mov
mov
stc
cmp
es
cltd
xchg
insb
jns
stos
movsb
shr
cmpsl
mov
xor
jl,pt
jle
lcall
andl
fstp
mov
push
out
stos
negl
mov
push
std
imul
adc
xchg
jno
xchg
scas
int
xchg
jae
pop
fnstcw
mov
rorb
sbb
xor
bound
xchg
aad
push
push
sub
or
mov
outsl
in
flds
jne
into
sti
mov
lock
bound
lea
pusha
push
fidivrl
xorb
imul
push
pop
lock
sub
aam
hlt
loope
fucompp
enter
insl
mov
sbb
pushl
pop
jmp
std
lds
pop
add
push
imulb
lret
xorb
pop
mov
and
sub
push
lds
jecxz
mov
lcall
out
std
push
add
int3
mov
fildl
xchg
cltd
fstps
aam
test
std
dec
xor
lret
pusha
jg
pop
adc
jmp
sub
add
and
add
add
or
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
cmp
cwtl
sub
les
lcall
jl
inc
xchg
push
adc
lcall
movsl
aas
mov
or
fs
les
push
push
sub
sahf
pop
sub
outsl
or
jbe
push
cwtl
xchg
cli
pop
jnp
outsb
fldcw
shl
pop
xor
mov
xor
andl
xchg
push
mov
add
fldl
cmp
stos
pop
stos
sub
iret
popf
sbb
dec
jne
dec
or
les
xchg
shlb
inc
fimull
aad
inc
dec
mov
fiadds
inc
mov
in
mov
inc
imul
daa
jbe
outsl
mov
xor
adc
sub
jo
inc
pop
add
mov
shlb
mov
mov
ja
ljmp
loope
testl
cli
sub
fs
inc
mov
sbb
fscale
mov
bound
adc
jl
cmp
outsl
sbb
loopne
adc
sbb
mov
push
aad
popf
pop
mov
inc
dec
and
dec
movsb
or
sub
popa
test
push
push
aas
fidivrl
cmp
cmp
dec
jp
data16
xchg
mov
scas
pushf
sbb
and
push
xor
in
inc
jnp
xchg
loop
dec
mov
push
push
and
rorl
jg
scas
or
jnp
or
jbe
scas
sbb
into
addr16
mov
adc
sbb
orl
or
dec
mov
movsl
jo
mov
sbb
sbb
popa
cmpsl
xchg
movsl
or
mov
cmp
cmp
pop
test
sbb
test
aas
push
fimuls
stos
mov
cld
push
scas
and
bound
aas
inc
lock
nop
xchg
cmpsl
jo
je
jb
lods
dec
ficoml
lock
sahf
dec
mov
xchg
scas
es
int3
cmp
sub
loop
push
bound
jge
push
mov
insl
inc
icebp
loope
cltd
ds
lods
jbe
loopne,pt
jmp
fbstp
xchg
adc
scas
push
movsl
pop
lods
cld
movsb
xor
fadds
loop
cmpsb
jb
mov
pop
rorb
sub
ret
cld
mov
daa
dec
enter
jo
fmul
sbb
or
int
and
mov
fsubrl
mov
cmp
xchg
ljmp
push
cmp
clc
or
adc
in
or
sbb
in
and
xor
enter
cmp
in
je
dec
pusha
in
xor
inc
jp
rolb
xor
cmp
test
mov
in
test
shrl
sub
and
inc
ret
jae
xchg
sbb
rorl
xchg
mov
sbb
jp
cmp
subl
leave
push
sbb
inc
lock
pop
mov
stos
notl
int3
mov
add
imul
lock
pushf
dec
sbb
xchg
inc
cmp
push
lods
mov
sbb
mov
imul
mov
add
adc
mov
xchg
std
mov
jns
mov
popf
lods
mov
aaa
and
dec
fwait
mov
xor
addl
push
in
or
sub
xor
in
sub
or
add
add
jmp
outsl
mov
or
imul
sbb
inc
mov
jo
jge
jo
ss
jb
repnz
and
je
insl
mov
jge
mov
add
and
enter
mov
or
sub
hlt
push
jle
data16
lock
sbb
aad
std
ret
xchg
sub
test
xor
fstl
jns
enter
inc
gs
mov
push
lcall
popa
sbb
out
sbb
insb
ret
mov
jns
loopne
add
mov
add
fidivrl
inc
and
lahf
pop
decb
dec
xchg
sbb
and
jl
cmc
sub
dec
scas
pop
cmpsb
incb
and
sub
cmp
jecxz
xlat
pop
xchg
bound
filds
ds
sahf
xchg
push
fadds
scas
in
sub
hlt
popa
dec
mov
gs
cli
stc
mov
xchg
rcll
push
push
repnz
lock
sub
jle
lcall
stos
inc
cmp
nop
and
add
shr
repz
sti
in
fs
push
ror
in
lds
xor
adc
int
popf
xor
rcrl
or
sub
mov
adc
sub
stos
pop
aaa
or
es
dec
pop
ret
out
sbb
jle
dec
inc
mov
jge
inc
inc
dec
jns
in
repnz
mov
cmpsl
dec
xchg
into
imul
mov
xlat
add
sbb
jns
loopne
lret
ss
outsl
out
repnz
sub
pop
jbe
sbb
std
cwtl
inc
push
mov
data16
stos
sub
popl
and
and
push
loop
mov
xor
dec
pop
subb
pushf
jns
push
loop
daa
sub
fistl
sub
ljmp
ljmp
push
into
push
sahf
test
xor
in
mov
ja
sbb
pusha
lea
xor
xor
jl
dec
xchg
jne
imul
test
nop
cwtl
inc
daa
add
pushf
ret
rcl
mov
and
rorb
jne
add
jnp
xchg
or
dec
and
outsb
mov
rcl
test
jnp
cmp
sbb
sub
jg
test
out
adcb
add
adc
bndldx
arpl
jo
hlt
sbb
dec
cmpl
mov
aad
fbstp
pop
xchg
popa
xchg
cs
orl
sub
sbbb
dec
mov
push
jo
or
test
push
gs
dec
cli
aas
sbb
jmp
sbb
nop
mov
fwait
addr16
dec
dec
mov
fsubl
bound
ret
loopne
int
mov
xchg
popa
inc
lret
sub
sub
xor
mov
loop
mov
adc
cmpsl
push
sub
hlt
mov
inc
sub
bound
and
cmp
repz
push
dec
mov
shl
shlb
scas
xor
in
cmc
movsl
xchg
dec
and
arpl
pop
repz
jbe
subl
or
xor
loop
shll
inc
jno
leave
sub
xchg
xor
jmp
xchg
repz
add
call
pop
loopne
cmp
mov
inc
and
das
push
push
sbb
push
rolb
pop
inc
dec
push
lahf
test
int3
sbb
dec
add
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
loopne
jl
inc
jo
pop
jge
jo
out
xchg
adc
leave
push
sahf
adc
mov
inc
call
aam
jmp
mov
pop
and
pop
insb
add
loope
jae
sub
add
arpl
cmp
and
sahf
push
jbe
test
inc
mov
out
addr16
and
les
nop
fstpl
sub
lcall
cmp
jle
mov
test
sbbl
xor
fsts
cmp
inc
jmp
repnz
addr16
jns
mov
addl
rep
mov
insb
lret
mov
insl
pop
mov
stos
sahf
cmp
cwtl
jne
insl
jl
imul
fwait
rcll
jb
repz
mov
mov
xlat
and
call
es
inc
rcl
lahf
scas
fisttpl
mov
xor
pop
dec
xchg
mov
dec
imul
xor
nop
ja
mov
inc
or
fdivrl
out
sub
push
push
sub
arpl
dec
sub
lret
ds
loope
pop
or
rcrl
mov
xor
jecxz
mov
dec
push
mov
add
xchg
pop
push
pusha
sti
jae
dec
pop
jo
out
xchg
in
or
das
mov
jle
adc
or
dec
inc
xchg
sub
daa
mov
push
mov
mov
subb
in
mov
mov
pop
jo
jbe
lcall
ds
rcrb
adc
into
xchg
push
ljmp
aas
and
call
scas
push
adc
jno
stc
jl
test
mov
jmp
orl
mov
lret
xor
xor
das
xchg
testl
xchg
aad
pop
cmp
scas
jl
or
adc
add
fisubs
dec
popf
mov
dec
push
xchg
or
mov
jno
lcall
or
insl
sub
ljmp
mov
and
out
jne
outsb
popfw
cmpsb
mov
fstpl
mov
xor
jbe
aad
push
stc
xor
scas
inc
inc
out
addb
lahf
mov
push
inc
fsubrs
mov
cli
sub
jne
jmp
fcomp
mov
repz
and
cmp
scas
das
push
xor
fbstp
adc
outsb
ret
out
mov
mov
mul
test
imul
lret
pop
ds
fcomps
lahf
scas
test
lret
jnp
push
jns
xchg
movl
or
sub
out
movsb
push
inc
rcll
sbb
push
fsubrl
mov
out
out
movl
cwtl
push
jno
dec
jmp
cli
jmp
lods
sbb
lcall
in
pop
pop
pusha
jb
dec
push
sub
push
mov
fadd
mov
cs
imul
fmull
sbb
adc
in
insb
mov
adc
push
mov
jge
cmp
cmc
ffree
xor
scas
stos
fcmovnu
loopne
sti
and
cmp
das
mov
dec
add
dec
test
xor
aaa
sub
in
addr16
mov
daa
sbb
addr16
rorb
scas
addl
hlt
mov
sub
push
mov
jge
scas
dec
cmp
dec
or
sub
test
inc
add
popf
cwtl
aad
sub
mov
mov
aaa
push
cmpsl
imul
pop
sbb
insl
sub
neg
fistps
jle
or
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
cmp
mov
data16
fwait
sub
pop
lret
movsb
inc
sbb
xlat
neg
xchg
jnp
repnz
hlt
mov
pop
fwait
orb
cwtl
das
addl
xchg
out
push
in
inc
xchg
mov
stos
mov
pushf
aam
in
iret
shr
int
sbbb
ljmp
in
mov
add
jbe
sbb
popf
mov
insl
jbe
je
jmp
outsb
add
add
lods
fsts
xor
push
or
push
add
xor
push
sub
scas
and
mov
mov
lods
sbb
sbb
js
dec
fwait
dec
sub
ds
test
sub
lret
cmp
cmpl
sbb
cmc
adc
out
loope
and
push
lret
push
cmp
scas
mov
arpl
lret
dec
in
xor
inc
push
adc
in
push
cli
scas
pushf
xor
mov
lock
out
ss
fdiv
cmp
xor
nop
push
cmpb
outsb
popf
sbb
dec
shll
in
clc
sub
xchg
and
xchg
and
pop
xchg
inc
ds
out
mov
mov
xchg
cmp
fdivl
into
cmpl
std
or
mov
repnz
and
nop
lret
jmp
rol
or
adcl
cs
nop
push
cmp
xchg
ja
push
subl
ss
adc
mov
stos
div
orl
iret
pop
mov
inc
js
mov
dec
xchg
aam
xchg
xor
outsb
jmp
jmp
xchg
sahf
jo
jecxz
jge
imul
ret
jmp
mov
xchg
ret
test
mov
aaa
std
add
ljmp
pop
lock
pushf
nop
jne
push
lds
scas
mov
test
nop
movsb
out
xchg
xor
outsb
jnp
dec
mov
cli
push
xchg
and
sbb
out
push
mov
aas
and
les
jne
pop
sbb
add
or
xor
into
push
push
add
sub
xchg
xchg
jne
repnz
mov
mov
js
stos
sahf
mov
xchg
gs
jne,pt
or
cmp
xchg
shlb
mov
in
jnp
mov
inc
cld
sbb
push
xorl
sub
mov
xorl
pop
push
jmp
popf
adc
cmpsl
sbb
fcmovu
aam
xor
popl
sub
mov
jne
cmpsb
jmp
adc
outsl
ss
scas
push
test
cmp
jnp
cmp
outsb
aas
jmp
es
jmp
push
jge
aas
dec
sbb
xor
mov
rcll
mov
inc
lret
cmp
xor
xchg
leave
push
lock
and
je
mov
fdivrs
jb
mov
mov
cmp
jp
gs
jl
push
popa
cmp
and
xor
inc
push
out
jecxz
icebp
adc
pop
pop
xor
mov
sarl
test
pop
inc
push
mov
dec
pop
ficomps
call
jle
push
enter
jnp
cld
cs
and
dec
pop
div
mull
scas
add
xor
push
loop
cmp
pop
lock
pop
call
xor
sbb
xchg
shlb
add
mov
sub
cs
mov
pop
mov
xor
or
movsb
pop
js
cmp
movsl
ret
xchg
out
je
jmp
sub
or
cmpsl
cmp
jmp
cmp
movl
je
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
mov
mov
jo
jge
jo
negl
dec
cwtl
leave
std
cmpsl
mov
shl
daa
pushf
aaa
or
mov
sub
dec
shlb
cmp
outsl
dec
es
fwait
subb
push
int
cld
cmc
adc
std
movsl
jae
adc
xchg
stos
or
subl
aas
in
push
enter
sub
cld
mov
rcrb
das
dec
cld
mov
or
lret
push
push
dec
js
jecxz
cwtl
test
pop
fwait
imul
pushf
icebp
and
jnp
cmp
mov
pop
add
and
inc
cmpsb
sub
fiadds
sub
lods
jg
sub
lock
and
dec
test
pop
into
cmp
std
lods
dec
sti
inc
jbe
add
loope
rclb
cmp
cmp
cmp
sub
push
mov
and
push
cli
aaa
fnstcw
push
sbbl
pop
addr16
repnz
aad
aad
stc
inc
mov
mov
jb
sub
pop
pop
aad
push
mov
mov
out
cmpsl
push
push
test
push
push
mov
add
xchg
pop
sar
sbb
or
fs
movsl
adc
ret
dec
repnz
dec
jl
repz
or
adc
inc
push
mov
xchg
or
icebp
inc
push
xchg
cmp
arpl
add
pusha
test
insb
rorl
cmp
inc
push
clc
lds
cmpsb
jae
mov
mov
sbb
xchg
into
push
movsl
ret
outsb
outsl
add
dec
lret
pop
out
mov
lcall
les
aam
dec
sub
loop
sahf
mov
mov
push
iret
cli
iret
pop
stos
jns
mov
in
pusha
mov
cmpsb
mov
leave
mov
add
cmpsb
fld
lods
dec
js
adc
mov
data16
test
repz
leave
mov
faddl
imul
push
scas
mov
fwait
cld
dec
addl
push
stc
push
clc
insl
fistl
gs
dec
insb
dec
sbb
lret
ss
fwait
dec
sbb
in
adc
pop
sarl
shll
xlat
lret
dec
adc
enter
cmp
mov
mov
fldenv
xchg
sbb
and
in
jbe
sub
sbb
adc
lea
push
imul
mov
mov
mov
repz
cmp
dec
xchg
out
movsl
mov
adc
in
mov
sub
xchg
push
sti
cmc
mov
sti
rclb
das
mov
cld
and
fistps
aas
inc
or
nop
mov
mov
cmp
repz
and
mov
insb
push
pop
jl
mov
mov
mov
xchg
lock
or
inc
and
pop
cmc
and
aas
mov
cwtl
icebp
ja
sbb
pop
cli
nop
aad
sbb
lea
ds
dec
fidivs
jl
xchg
repz
out
push
fsubrl
iret
pop
xchg
jns
enter
mov
mov
jge
clc
lods
push
jl
add
div
clc
inc
inc
add
clc
adc
sub
inc
fcmovbe
push
adc
pop
xchg
loopne
add
imul
daa
mov
inc
adcl
mov
mov
or
cwtl
aas
push
xchg
test
mov
bound
jl
inc
pop
repnz
pop
mov
xchg
xchg
popf
or
sub
inc
xchg
mov
in
dec
cmp
mov
xchg
outsl
xchg
test
pushf
mov
adc
shrb
add
aad
mov
fidivrl
pop
popf
call
pushf
adc
int3
icebp
jno
mov
cmp
xchg
xchg
fnsave
out
add
xor
out
cmc
lcall
jne
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
fidivs
jo
pop
jge
jo
add
xchg
cld
mov
nop
mov
fidivs
ror
sbb
add
popl
push
arpl
outsl
dec
mov
pop
int
mov
add
imul
push
xchg
jge
ret
lahf
xchg
ret
in
pushf
pushf
gs
test
js
pop
lock
in
jbe
mov
insl
popa
inc
jbe
aas
add
cli
inc
mov
pop
mov
rcrb
jae
add
inc
or
pop
jo
into
lret
aas
dec
into
popf
cmp
push
push
popa
iret
adc
das
xchg
addr16
push
cmp
xchg
mov
sbb
mov
std
sub
in
movsb
sub
jne
xchg
orb
mov
inc
pop
push
in
push
sub
xchg
lret
cmp
pop
xchg
in
in
pop
iretw
sbb
push
lods
sbb
lahf
sarl
xchg
jmp
mov
cmp
in
dec
sbb
add
inc
jns
mov
cmpsb
xor
adc
adcb
sbb
xchg
mov
into
push
dec
cli
inc
xchg
test
cltd
xchg
sub
ficoms
into
insl
and
xchg
lods
xlat
int
jmp
pop
pop
mov
sub
cld
or
mov
jno
rclb
pushf
sarl
jnp
and
popa
cmpl
insb
loop
lods
shrl
leave
out
or
inc
cmp
cmp
dec
call
loopne
stos
fsubs
dec
mov
xchg
fcomp
jmp
add
jae
add
cwtl
inc
fs
leave
sub
roll
daa
sbb
lods
cltd
or
adc
mov
dec
sbb
insb
loopne
sbb
fdiv
mov
mov
int3
pop
jb
ljmp
pop
hlt
mov
test
cld
pop
push
mull
bound
xchg
test
lret
jno
mov
fiadds
pop
add
out
insb
mov
lea
scas
xchg
hlt
out
outsb
pop
lcall
mov
movl
sbb
idiv
push
sub
lods
iret
lahf
ror
gs
xor
out
xchg
push
inc
and
xor
jge
ja
jns
mov
push
xchg
in
xchg
lods
sub
pop
repnz
inc
decb
stc
xchg
sub
in
add
mov
testl
sbb
push
test
or
fstpl
loop
cmp
scas
xor
into
mov
dec
mov
rcr
jne
shlb
stos
sti
out
pop
daa
cmpsb
data16
jns
sbb
sub
rclb
ja
xchg
or
sbbb
xor
dec
faddl
xchg
and
pop
aas
ret
fcomp
adc
scas
inc
imul
in
sbb
cmc
int
fsubs
cwtl
lea
test
sub
iret
rolb
test
clc
pop
daa
std
pop
pop
xor
clc
mov
mov
ljmp
mov
push
xor
lods
std
sbb
cmp
push
lds
jo
dec
push
sub
mov
xchg
or
adc
inc
hlt
mov
mov
push
into
add
test
cmp
lea
leave
hlt
popf
hlt
loopne
sub
mov
dec
xlat
popf
dec
lods
sahf
sbb
insb
mov
imul
inc
std
pop
adc
scas
scas
mov
mov
inc
pop
push
divl
stos
dec
dec
inc
sub
xor
in
repz
bound
pop
inc
or
pop
orl
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
cmc
pop
push
jo
pop
jge
jo
jmp
out
add
mov
mov
outsl
andl
aad
fsubp
rorl
xchg
imul
addr16
movsl
rcll
pop
xor
fwait
inc
fsubrl
mov
dec
daa
cmp
mov
xchg
popf
imul
dec
pop
ret
sub
jb
add
aam
xor
daa
mov
clc
insb
push
mov
lcall
iret
pop
je
into
sbb
clc
jmp
push
push
imul
clc
inc
xchg
fmuls
mov
push
jns
testb
pop
lcall
and
fmull
xor
ss
xchg
stos
scas
imul
xchg
or
and
scas
mov
inc
popf
inc
sbb
leave
jge
aaa
mov
or
cmp
jb
mov
pushl
iret
jb
xchg
push
inc
xor
push
pop
xchg
mov
pushf
xchg
addr16
mov
inc
sub
adc
mov
iret
and
lahf
jne
sub
scas
sub
xchg
push
lahf
xchg
data16
push
imul
xor
das
cld
mov
mov
pop
jne
pop
xchg
mov
push
pusha
lock
lods
jecxz
cld
aas
inc
mov
jbe
cmp
aad
js
dec
sub
mov
inc
in
adcl
sub
roll
jbe
call
lret
xor
sub
movsl
shlb
aad
xchg
xchg
pop
loope
arpl
loopne
dec
jle
popa
fisubrl
fdivrl
dec
aaa
mov
dec
or
fstpl
fistps
inc
xchg
or
cmp
loopne
push
cmpsl
lock
lock
jnp
out
or
movsl
cmp
mov
aaa
jns
and
out
push
sbb
pop
sub
leave
lea
jg
sahf
fsubs
lret
ret
adc
ficoms
outsb
push
fadds
daa
movsl
mov
fwait
fwait
mov
push
jecxz
outsl
andb
inc
mov
icebp
lahf
or
pop
cmp
pop
shrb
lea
pushf
xor
orl
shrb
pop
sahf
and
jge
int3
int
xor
mov
cltd
push
jg
pop
das
out
and
int
xchg
inc
sbb
out
sub
mov
in
dec
sbbl
cmpsl
ds
sbb
jmp
mov
adc
lahf
aam
dec
stos
push
enter
and
lea
and
stos
push
movsb
xor
ja
mov
push
scas
cmp
test
dec
aad
shr
test
ret
dec
lea
lods
negl
aas
mov
mov
negb
aaa
jecxz
adc
ja
adc
dec
pop
cmpsb
xor
dec
testb
daa
dec
fistl
addb
inc
cmp
fdivl
xor
std
mov
imul
cmp
rolb
rcl
mov
std
lret
testb
imulb
aam
mov
inc
jmp
data16
sti
inc
cwtl
scas
push
jl
pop
jb
add
sub
pop
dec
and
xor
rcll
adc
popa
push
inc
mov
mov
bound
call
rol
inc
push
mov
inc
inc
stos
aad
repz
ficoms
pop
loop
inc
xor
fdivrl
sbb
icebp
mov
cmc
popa
in
mov
ret
cwtl
xchg
frstor
outsl
push
sbb
jge
pop
cs
clc
push
ds
div
inc
pop
and
dec
sahf
push
movsb
popa
orl
insb
dec
pop
add
dec
sahf
jle
fists
pop
out
cmpsb
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
fnstsw
mov
pop
jo
mov
testl
inc
scas
sub
mov
mov
pop
enter
inc
cmp
in
push
cmp
ljmp
movsl
xor
rcr
or
hlt
or
in
sub
cmp
sarl
sub
imul
dec
xorb
xchg
popa
pop
sbb
sbb
repz
rcrl
rolb
and
inc
leave
lret
cmp
dec
dec
or
out
loop
xchg
push
mov
inc
cmp
das
shll
mov
xchg
faddp
aas
mov
push
and
adc
pop
xchg
add
mov
outsb
movsb
lea
aas
jle
pop
icebp
push
xor
rcr
ret
stc
cmp
adcb
out
jmp
rcrb
push
dec
xlat
je
and
pop
mov
cmp
adc
jo
test
add
mov
out
mov
mov
or
pushf
out
out
fstps
jne
and
jge
add
inc
mov
jo
testb
mov
pop
lea
xor
sbb
jle
jmp
ret
jecxz
fst
fisubrl
mov
test
sar
mov
insb
data16
jno
pop
push
sub
adc
sbb
data16
fxam
mov
xchg
daa
and
repnz
lcall
dec
push
sub
mov
inc
inc
or
push
pusha
flds
in
xor
pop
xchg
jne
add
mov
movsb
loope
loop
pop
or
cmp
lock
jb
xor
adc
jno
jle
mov
into
addr16
test
mov
inc
js
mov
lock
cmpsl
das
outsl
fs
mov
sbb
es
insl
cmp
mov
into
push
movsl
jno
fdivl
les
inc
mov
repz
jecxz,pn
inc
rorl
fstps
and
outsl
and
or
push
jge
sbb
add
movsb
lahf
jecxz
jmp
lock
pop
cmc
mov
scas
push
and
imul
adc
xchg
ret
fwait
outsl
mov
push
fbstp
addr16
mov
push
jl
jge
and
jae
mov
ds
fwait
repz
xchg
add
scas
jmp
adc
in
pop
mov
popf
push
ss
pop
fidivs
jb
lds
shr
sub
out
lret
subl
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
repnz
mov
pop
jo
mov
push
dec
std
divb
push
dec
or
test
mov
inc
mov
add
or
outsl
out
in
mov
inc
inc
mov
ja
mov
testb
das
pop
scas
loope
pop
add
shlb
sub
push
push
pop
pop
pusha
imul
out
pop
mov
mov
jmp
js
sub
mov
aam
push
sti
push
adc
lock
sbb
jnp
mov
aas
xchg
adc
mov
xchg
pop
push
hlt
std
sub
arpl
dec
push
scas
push
mov
shrd
mov
xor
popa
enter
fists
jno
leave
aas
pop
not
stc
call
orl
addr16
inc
pusha
addr16
sti
push
push
pop
out
pusha
cmp
leave
cmp
popa
cmpsb
jb
xor
sbb
push
or
sub
movsl
int3
push
mov
sub
loop
mov
push
push
out
arpl
add
and
jmp
loope
add
ror
mov
repz
hlt
lret
stos
jmp
sbb
fucomp
hlt
dec
pop
mov
push
dec
sahf
push
loop
int
add
or
xchg
pop
and
movsb
loop
ss
fcoms
mov
jns
inc
inc
or
popa
aas
cmp
sqrtps
fdivrl
emms
call
inc
add
cld
inc
aam
ror
ret
in
popa
mov
mov
movsl
sub
mov
jb
and
sbb
call
xchg
or
sub
mov
out
or
pop
dec
inc
gs
sub
cmp
int3
sbb
pushf
les
shrb
in
in
mov
mov
arpl
stc
xchg
es
xchg
out
cmpsb
popf
ljmp
mov
dec
inc
and
cmp
out
inc
add
out
push
popa
inc
imul
add
inc
aaa
testl
iret
sbb
je
mov
sbb
sahf
sbbb
or
dec
pop
arpl
mov
incb
nop
jnp
mov
mov
outsb
adc
push
pushf
je
inc
cmp
sbb
cmp
fs
inc
inc
jg
mov
and
test
jo
ljmp
sbb
mov
pop
gs
xchg
arpl
fcmovbe
cwtl
daa
mov
arpl
icebp
cmp
int
notl
dec
or
or
in
int3
and
mov
andl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
pop
jo
mov
cmc
mov
pusha
adc
aas
fisttpl
insb
insb
pop
aas
aaa
mov
cmp
fcoms
js
rcrb
dec
sbb
push
in
cmp
sub
subl
loope
cmp
adc
xor
mov
push
fidivs
in
cmc
daa
rcl
gs
in
fmuls
mov
inc
je
jge
mov
sbb
out
jle
mov
jae
stc
cmp
ret
jecxz
hlt
fimull
insl
pop
mov
int3
mov
inc
xor
imul
cwtl
xor
popf
in
pop
lret
test
mov
cmpsl
sbb
loope
mov
dec
xor
adc
inc
aas
adc
mov
sbb
pop
insb
or
scas
pop
inc
roll
hlt
out
pop
mov
fidivrs
loop
mov
pop
push
dec
scas
pop
jp
stos
xchg
mov
and
sub
mov
popf
scas
dec
or
popf
test
fwait
jb
sub
sub
stos
and
sti
dec
jb
cmc
and
movsb
fnsave
or
adc
xor
in
ret
js
xor
mov
fimull
fists
push
lods
mov
sti
add
jae
inc
cwtl
lret
adc
fdivrl
aas
inc
enter
and
xor
fidivrs
sti
leave
test
xor
fstpl
in
movsb
jp
sbb
xchg
and
out
pop
lea
cli
push
movsl
loopne
pop
lcall
cs
jb
xchg
loopne
out
dec
push
mov
push
lret
mov
stos
negb
lea
outsl
js
pop
cld
mov
xor
inc
rolb
test
dec
push
daa
fistl
pop
adc
iret
dec
mov
hlt
sub
cld
push
xchg
jae
movsl
inc
cmpsl
push
cli
adc
mov
push
clc
rol
mov
lcall
jecxz
icebp
pop
scas
sub
mov
repnz
adcl
push
shll
aad
and
lret
mov
lahf
mov
jmp
mov
inc
jge
in
or
mov
je
xor
inc
imul
jno
sub
jnp
xor
outsl
pop
jl
repnz
xchg
or
xchg
mov
jno
andl
andl
lea
movsb
jl
jge
inc
cld
xchg
aad
in
fucomip
mov
add
clc
jg
sbb
inc
insl
bound
loop
push
jbe
dec
pop
pushf
sub
repz
or
repz
mov
add
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
sar
insl
adc
jo
jle
jo
into
mov
mov
gs
push
pop
out
mov
adc
xchg
cs
sbb
jp
movsb
clc
xor
lcall
or
icebp
push
mov
and
xchg
adc
fnsave
orl
xchg
clc
in
xor
jecxz
lds
xchg
push
mov
test
aam
das
adc
adc
int3
lods
adc
jno
call
push
xchg
push
mulb
push
sbb
pop
mov
in
or
stos
xchg
pop
adc
xor
lods
sub
test
into
and
and
jb
mov
jmp
repnz
frstor
or
jo
mov
inc
cs
leave
mov
lods
cmp
lret
xchg
pop
pop
xor
aam
lods
add
mov
jle
test
out
jl
adc
cmp
xlat
in
push
or
bnd
mov
pop
mov
das
xchg
in
int
or
imul
sub
cmp
jb
cmpsl
shlb
rcrl
xlat
scas
ret
sbb
es
jo
xor
mov
iret
gs
pop
cli
and
mov
pop
or
push
jmp
cwtl
xchg
mov
mov
je
mov
xor
pop
shll
in
jge
in
loop
fistps
mov
push
push
fistl
sahf
pop
icebp
fs
sahf
xlat
add
mov
scas
cmp
add
dec
cmp
jno
test
scas
mov
mov
inc
sahf
cltd
sbb
fwait
mov
sbb
fimuls
js
pop
xor
push
sub
nop
mov
push
lock
insl
cmp
jmp
repnz
pushf
shlb
pop
and
in
and
sbb
lcall
out
mov
mov
mov
aad
pusha
or
shlb
mov
test
das
movsl
add
cld
rcr
xchg
loope
pop
sub
stos
jge
sbb
sub
push
push
sarl
int
shrl
and
jae
adc
mov
adc
mov
adc
es
jl
sbb
orb
cld
xchg
sti
or
sti
mov
push
push
cwtl
cmpsl
shl
sub
outsb
in
stos
call
cltd
mov
fbld
cmp
pop
mov
sbb
ret
jno
sti
sub
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
dec
in
pop
fs
mov
imul
pusha
std
ret
gs
rcrb
ja
cmp
mov
push
push
rcr
je
or
add
jge
mov
insb
dec
fnsave
ret
and
add
loop
xor
adc
mov
int
add
loop
arpl
scas
out
add
sub
clc
or
or
cli
sbb
dec
scas
out
or
sub
inc
xchg
cmp
ss
cmpsb
push
jb
notl
addr16
cmpl
shll
dec
jo
adc
in
jecxz
adc
cltd
movsl
jb
adc
mov
sbb
shlb
push
int
daa
andl
and
scas
xlat
ret
lods
dec
cmpsl
addr16
into
or
mov
aam
cmp
cmp
or
lret
jae
mov
jl
xor
popf
push
roll
push
push
rcrl
pop
xchg
les
outsb
xor
or
in
jp
stos
popf
ja
jle
fiadds
iret
stc
mov
mov
mov
loop
cmp
je
mov
push
push
mov
cmp
jl
mov
cmp
inc
push
cmp
psubsb
mov
push
aas
loop
cmp
cmp
popf
push
mov
insl
insl
movsl
enter
inc
xor
loopne
loope
sti
out
or
sbb
jl
mul
push
test
pushf
nop
das
aaa
aaa
mov
xchg
pop
and
stos
push
div
add
iret
mov
mov
enter
jp
mull
add
aas
mov
jns
adc
call
dec
ret
adcl
or
sbb
mov
xor
jle
mov
fwait
sarb
cmpsb
popa
lods
mov
stos
pop
xchg
ja
jge
cmp
sahf
shrl
loope
loop
icebp
rclb
fcompl
add
frstor
sbb
jge
push
ror
jmp
cmc
jl
fcmovu
pminsw
mov
sbb
rolb
sbbw
aaa
mov
adc
pushf
pop
loope
jmp
insb
xchg
push
ljmp
dec
push
bound
loop
jne
imul
in
stc
int3
ret
movsb
pop
hlt
ss
sbb
dec
push
inc
cltd
jns
mov
mov
inc
sahf
push
and
addr16
mov
sti
sti
push
lods
push
dec
aam
negl
out
push
sbb
add
ret
dec
arpl
sti
cmp
repnz
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
or
popa
jo
mov
mov
test
int
mov
sub
jo
iret
ljmp
mov
lea
push
push
inc
jbe
out
call
into
add
push
sbb
cs
adc
xchg
test
outsb
mov
xchg
stc
int3
divl
loope
neg
out
push
out
orl
and
scas
cmp
dec
push
cmp
xor
inc
outsl
push
add
gs
inc
negb
and
add
test
pushf
jo
cmp
outsb
loope
pop
push
mov
sbb
je
pushf
add
push
and
sbb
out
sbb
nop
xchg
xchg
inc
and
pop
add
mov
outsb
lods
jo
out
out
sub
add
call
or
icebp
inc
xor
lcall
cld
push
movsl
scas
jns
inc
jbe
pop
sub
push
add
inc
roll
adc
ret
fs
jg
sbb
inc
sbb
daa
sbbl
and
cmp
dec
xor
test
cmpsb
push
push
pop
push
sub
add
loop
push
or
outsl
pop
cmp
ret
cmp
clc
or
lods
scas
sub
data16
sti
mov
mov
push
outsl
push
inc
cmp
add
sahf
jmp
mov
repnz
lods
scas
pop
outsb
test
sbb
push
lret
int3
cmpsl
inc
iret
inc
clc
push
loop
fimull
mov
fs
jl
into
or
rcr
mov
stos
ljmp
movsb
pushf
jo
cmp
push
fiadds
pop
fsubr
and
test
icebp
fstps
les
and
stos
test
jl
in
inc
jle
fistl
stos
test
popf
inc
adc
pop
ret
insb
mov
popf
mov
lcall
cmp
jns
lods
xchg
sub
test
ret
rcrb
nop
mov
mov
mov
lock
mov
xchg
mov
icebp
or
pop
cmp
testl
sbb
push
and
fcmovu
jge
or
sbb
loopne
and
imul
inc
add
es
mov
inc
xchg
rorl
aaa
add
insb
notl
mov
addr16
mov
xor
pop
cmp
mov
jnp
xchg
sbb
push
pop
fstps
fsts
mov
out
jmp
dec
out
mov
shrl
daa
popf
push
popf
mov
iret
inc
pop
inc
int
inc
stc
cld
fildl
and
call
pop
nop
mov
roll
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
test
outsb
jo
mov
aad
into
imul
mov
das
in
or
ss
pop
js
xchg
sti
imul
cmp
pushf
dec
pushl
xchg
or
dec
in
rcrb
mov
testb
adc
mov
cs
mov
lea
jp
in
sub
sub
jb
xlat
icebp
mov
stos
xchg
jae
cmp
jmp
mov
push
push
xor
lock
push
dec
push
inc
sub
loopne
out
lds
dec
je
pop
adc
pop
xor
inc
mov
movsl
xchg
sub
xlat
sub
xchg
xchg
mov
lods
repz
je
mov
jns
mov
aam
cld
sub
repnz
mov
jo
push
aaa
push
cwtl
add
xor
ja
mov
imul
inc
xor
lods
push
shl
negl
mov
shlb
int3
cmp
ds
sbb
sbb
dec
mov
jo
test
mov
sbbl
xor
dec
es
xlat
shll
xor
sbb
lahf
into
pop
xor
in
xor
mov
cwtl
add
xor
popf
stos
popa
test
fildl
cmpsb
negl
movsb
stos
xchg
and
dec
sahf
cmp
mov
mov
js
xchg
aad
dec
cld
or
lods
addr16
cmp
icebp
imul
xchg
mov
das
push
or
mull
inc
jne
add
and
enter
shlb
js
cmp
data16
push
mov
cld
lret
inc
arpl
dec
xor
test
mov
dec
push
test
adc
ret
test
adc
imul
or
scas
add
cs
repz
lock
jmp
int3
in
in
call
je
sbb
out
push
sub
rcrl
adc
outsb
pop
jne
push
adc
mov
cmp
sbb
dec
xchg
xchg
jle
xchg
cld
jb
push
sbb
aaa
out
xchg
es
xchg
cmpsb
sahf
movsb
mov
lcall
inc
fistpll
test
xor
repz
jno
aad
lock
sub
mov
sub
push
jge
add
jns
mov
xchg
adc
mov
icebp
out
inc
pop
dec
xor
repz
sbb
lahf
xor
sub
push
or
arpl
or
add
movsb
aas
mov
es
mov
icebp
push
cwtl
cld
adc
cmpsb
imul
je
sub
pop
sbb
test
add
pushl
jmp
and
lods
shrb
in
xchg
fs
jl
imul
jle
jo
xchg
sbb
push
cmp
add
imul
adc
jl
sub
mov
pushf
gs
and
test
jae
adc
push
sbb
inc
in
push
adc
push
jne
daa
adc
aas
mov
xchg
pop
lds
fstl
mov
or
loopne
or
mov
cmpsb
leave
cmp
cld
daa
push
sub
dec
mov
into
push
adc
inc
pop
and
lcall
or
lahf
test
push
addr16
mov
xchg
dec
popf
rol
aad
jnp
je
sbb
cmp
mov
jecxz,pt
movsb
adcb
mov
pop
or
push
dec
outsb
aas
test
xor
sub
add
cmp
insb
inc
cltd
clc
cmp
mov
cmpsl
push
clc
pop
insb
insb
cld
pop
mov
sti
push
and
mov
sbb
xchg
jle
adc
mov
enter
out
jp
xchg
push
mov
aad
adc
sbb
pop
bound
cmc
mov
push
mov
inc
ljmpw
inc
mov
pop
dec
and
mov
pop
lret
mov
dec
lea
fimull
and
lcall
xchg
jae
in
stos
jnp
dec
xchg
mov
sti
cmc
push
mov
jecxz
and
mov
cmp
das
mulb
dec
sub
dec
fs
xchg
jle,pt
arpl
call
inc
sub
int
loope
out
outsl
push
mov
aam
mov
out
loopne
repz
inc
stc
mov
dec
aad
cwtl
sarl
push
out
shrl
in
mov
add
stos
xor
and
enter
aad
sbb
sahf
mov
pushf
push
and
jb
ret
mov
adc
insb
movb
clc
std
roll
ss
sub
mov
pop
stos
and
outsb
fstpt
dec
sub
push
popf
cwtl
iret
dec
fcomps
xorb
mov
stc
dec
jmp
lea
mov
rorb
adc
inc
xchg
adc
movsb
filds
lods
cld
and
scas
push
push
cmp
sbb
lds
enter
xchg
and
inc
insl
gs
xor
fisubrl
out
jbe
into
mov
test
mov
stc
mov
pop
aad
cltd
xchg
fidivl
xor
xchg
cmc
out
movsb
pop
adc
es
and
sbb
dec
pop
sbb
nop
xor
jns
or
pop
or
lds
mov
call
jmp
pop
insl
and
xor
insl
jp
or
jp
mov
mov
les
loopw
sbbb
add
xchg
hlt
cmpsb
mov
jns
jbe
mov
dec
faddp
mov
leave
and
push
xchg
push
loop
push
iret
ret
pop
mov
roll
inc
jne
sub
xchg
popf
test
sbb
pop
jmp
shl
cmp
icebp
pop
ds
std
push
cmp
fistl
inc
mov
mov
movsb
cmp
jo
hlt
scas
sbb
mov
cwtl
adc
xchg
fisubl
jg
call
xchg
in
cmpsl
lods
push
cmpb
sbb
cli
inc
iret
mov
lods
nop
mov
sbb
push
pop
mov
call
cmp
das
push
xor
push
lds
mov
in
jl
jns
sbb
or
mov
shrb
adc
adc
xchg
or
aaa
cwtl
mov
mov
nop
jp
cmc
popa
sbb
pop
data16
pop
aad
lea
sub
pushf
shrd
mov
sbb
cmc
aam
cmp
ror
jne
cmpsl
jnp
xorb
jae
lods
pop
lea
cmp
lock
mov
push
sahf
cli
fs
gs
rorl
xchg
notl
ds
push
stos
lods
pop
inc
mov
std
mov
out
push
das
es
ljmp
in
inc
iret
jge
mov
jmp
rorl
scas
mov
lods
repz
ret
or
xor
push
loopne
xchg
xchg
jle
shr
xor
jl
sbb
mov
adc
pop
dec
and
ljmp
sub
mov
dec
ret
inc
push
mov
dec
imul
imul
adc
and
inc
xor
lea
and
aaa
imul
in
add
jg
stos
sbb
mov
outsb
in
pushf
or
add
je
cmpsl
pop
and
adc
inc
movsb
cmc
movsl
mov
cmc
repnz
pop
inc
adc
cmpsl
push
inc
inc
xlat
ficompl
cmpsl
inc
cmp
test
popa
mov
pop
pop
fsubrp
add
mov
das
fwait
cmpsb
cmpl
popf
and
mov
xor
or
and
cmp
addr16
fistpll
dec
sub
test
jmp
mov
jmp
aad
jl
ret
mov
or
mov
mov
aaa
es
test
jg
xor
sub
mov
pusha
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
push
cs
sbb
jbe
jo
jle
jo
nop
sub
insb
jo
pop
cmp
mov
fsts
mov
pop
or
add
mov
or
mov
aam
cmp
imul
add
cmp
cwtl
push
xor
inc
pop
js
sub
outsl
or
rclb
pop
lahf
cmovb
enter
sub
pop
cmp
pop
aaa
add
and
adc
cmp
or
negb
lahf
pop
push
pop
cmpsl
and
push
in
test
dec
jno
test
mov
jb
add
outsb
xchg
loop
xlat
nop
and
mul
add
cmpsl
jmp
out
adc
das
or
mov
add
xchg
shl
call
fildll
or
in
out
mov
cmp
cwtl
jo
pop
int3
test
xor
push
sbb
sbb
fdivrs
and
icebp
insl
xor
xor
out
lea
jmp
and
lods
xor
or
or
cmp
dec
cmp
int
insb
dec
or
xor
jp
pusha
xchg
inc
fsubs
sti
jl
clc
sti
cmp
xor
cmp
je
mov
sbb
inc
mov
jl
test
fwait
mov
stos
cmp
pop
sbb
jg
cmc
mov
test
mov
jecxz
ja
shrl
add
mov
cmc
sub
push
jmp
adc
mov
cltd
push
addr16
jb
mov
fs
and
into
xor
inc
add
shll
in
dec
sbb
sti
xchg
jb
jae
jmp
and
add
inc
mov
push
inc
lea
or
jmp
push
imul
jmp
mov
insb
outsb
xchg
lds
xchg
or
mov
das
jne
in
test
mov
mov
add
adc
sub
or
dec
xchg
std
sub
or
rcrl
iret
les
aad
mov
mov
mov
loope
lcall
pop
in
or
lods
jp
cmpl
cltd
jb
adc
out
out
sub
pop
push
dec
dec
xchg
inc
int
dec
push
mov
push
jnp
int
fwait
xchg
je
bound
mov
dec
or
pop
cmp
push
mov
ds
pusha
sbb
ror
test
es
push
xor
add
mov
jge
adc
mov
cwtl
dec
test
orb
jo
call
clc
jmp
jmp
test
add
adc
or
inc
rclb
mov
jge
mov
test
in
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
scas
mov
jo
jle
jo
push
les
out
imul
dec
movnti
enter
jmp
mov
daa
and
hlt
dec
or
icebp
sub
out
xchg
stos
mov
push
clc
pop
stos
sbb
fimull
popf
lea
loope
shl
push
ja
mov
pop
jmp
and
push
push
mov
cld
cltd
iret
lret
pop
push
cmp
mov
xchg
repnz
xor
scas
rcr
cli
jne
dec
sbb
adc
jbe
lret
ds
rcrl
pop
push
inc
jbe
xchg
fs
lcall
mov
mov
jg
pop
add
xchg
mov
loope
add
mov
lea
push
shr
jmp
xorl
shrb
sbb
xchg
xchg
call
push
filds
stos
aaa
gs
dec
sti
jg
popf
icebp
ds
sbb
sub
jecxz
sub
in
repz
mov
xchg
int
negb
mov
lods
xor
jge
jle
ret
push
dec
push
sbbl
mov
test
mov
mov
cmp
dec
repnz
sahf
xlat
test
into
out
add
cmp
fldt
or
lret
dec
xor
mov
jg
jp
mov
in
dec
scas
push
pop
inc
add
pop
sbb
inc
sti
mov
test
or
inc
jnp
lret
loope
into
xchg
in
test
stc
mov
mov
cmp
add
mov
cmp
lahf
fnsave
data16
sub
jecxz
or
roll
pop
aas
scas
sub
adc
insb
and
rcr
dec
mov
mov
dec
outsb
test
mov
out
iret
frstor
mov
das
jmp
cwtl
mov
fcmovnb
lcall
xor
mov
mov
adc
js
xor
xchg
test
dec
or
pusha
jb
and
push
jne
sar
adc
dec
dec
add
int3
lret
sbb
lea
push
cmc
and
outsl
call
mov
icebp
lea
add
push
out
pop
and
mov
jmp
pop
lods
pop
sar
std
lea
stos
cwtl
add
adc
decb
mov
stos
fdivl
adc
leave
push
or
pop
mov
pop
and
mov
jl
popf
cld
div
pop
push
cld
jbe
xchg
call
push
mov
pop
dec
inc
or
stos
add
sbb
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
jge
leave
jo
jo
jle
jo
and
aad
pop
mov
xchg
lds
add
stos
rclb
xchg
cmp
pop
inc
and
daa
push
fldt
cmp
xor
dec
in
or
cmc
push
scas
sbb
scas
ljmp
jns
pop
scas
push
dec
push
insb
dec
sub
mov
or
and
pop
mov
adc
add
test
in
mov
jecxz
dec
cmc
mov
lcall
mov
movsl
inc
incl
mov
jo
mov
insb
inc
repz
jne
cmpsl
cmpsb
inc
add
mov
mov
psllq
sub
pop
das
pop
add
popf
mov
mov
ret
cmp
addr16
dec
xchg
aas
in
cmp
mov
lods
test
add
jge
xchg
xor
cmp
inc
popa
pop
jb
or
dec
dec
data16
xchg
faddl
push
mov
sbb
cmpsl
pusha
daa
adc
scas
fwait
lods
adc
scas
pop
pminub
addb
jno
aaa
dec
popl
sub
and
enter
mov
inc
xchg
cmp
mov
adc
add
cli
xor
jl
mov
cmpsl
xchg
repz
sub
jb
mov
mov
lcall
dec
testb
fcoml
test
sbb
mov
lock
mov
dec
adc
cli
das
pusha
outsl
mov
js
enter
push
cmc
xor
or
les
sbb
cmpsl
addl
mov
inc
jo
mov
mov
cwtl
movsl
js
sub
or
repz
sbb
movsl
push
mov
adc
jo
insl
pop
test
mov
adc
stos
cwtl
push
mov
sbb
push
nop
das
xor
shl
cmp
cmpsl
test
jnp
push
jb
stc
fnstsw
popf
add
enter
or
xor
movsl
leave
cli
jbe
imul
iret
fs
daa
icebp
push
add
out
jmp
clc
cwtl
jg
add
cltd
test
xor
lcall
or
cld
or
xor
addr16
push
sbb
es
loopne
inc
sub
or
movsb
mov
lock
mov
js
push
mov
sbb
je
scas
pop
adc
xchg
int
sub
jp
fdivrs
sub
bound
add
call
adc
loop
aaa
jns,pn
xor
xor
jmp
add
mov
jb
jge
jge
notl
dec
adc
jo
jle
jo
sub
mov
iret
adc
mov
jp
xor
xor
mov
dec
mov
je
xchg
imul
sbb
inc
and
xchg
push
out
cwtl
gs
sbb
push
mov
push
shll
movsb
pop
popf
das
xor
popf
insl
mov
jnp
push
clc
loope
in
insb
loope
arpl
movsb
fcmovnbe
lea
xchg
pop
js
mov
adc
jge
ss
int3
push
int3
mov
lret
push
add
jo
loopne
push
or
out
dec
xchg
and
mov
pop
pop
decb
xchg
xchg
lock
xchg
jnp
pop
add
cmc
push
es
push
je
pop
push
and
adc
jnp
mov
shl
movsl
xchg
or
outsb
or
lock
aam
loop
fidivrl
mov
inc
out
dec
jge
mov
push
daa
or
movsl
xchg
xorb
or
dec
mov
and
jnp
xor
xchg
lods
mov
xchg
mov
mov
mov
stos
das
clc
fs
ljmp
xchg
flds
out
ja
loopne
das
gs
push
fwait
cld
js
cmpb
xor
mov
fbstp
sub
and
imul
dec
fcmovnb
mov
push
xor
sub
lea
mov
inc
mov
cs
lds
shrl
aam
and
pop
inc
cltd
ret
dec
jge
add
jge
mov
mov
adc
push
dec
push
dec
xchg
daa
adc
xchg
dec
mov
pushf
cwtl
in
inc
xchg
or
loopne
imul
out
std
movsb
jne
jne
cmpsl
cmp
loop
bound
sub
adc
and
fs
ljmp
jle
icebp
mov
divl
aas
add
mov
push
inc
sub
sub
jge
arpl
mov
pusha
fsubrl
test
mov
inc
inc
and
add
mov
and
xchg
adc
pop
sub
lret
or
sbb
sub
aaa
pop
in
lret
sub
lcall
lcall
sbb
mov
popl
mov
mov
dec
mov
popf
pushf
add
test
mov
mov
mov
mov
rcll
add
fdivrs
cmp
xor
out
jnp
and
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
scas
addb
jnp
jo
jle
jo
das
xchg
dec
xchg
pop
icebp
sbb
cld
adcb
add
add
mov
add
cmp
cs
mov
push
jnp
add
adc
adc
packssdw
push
rclb
fucomi
in
gs
sub
add
jns
out
imul
aaa
leave
xchg
xor
push
inc
das
out
mov
push
mov
or
movsb
aaa
sbb
xchg
call
mov
ja
sbb
and
inc
movsl
mov
dec
insb
inc
pusha
mov
sub
sbb
inc
cwtl
pop
cmp
dec
sbb
xchg
test
aam
adc
pop
cmc
mov
mov
gs
push
jae
stos
out
les
fistps
pop
out
mov
jae
push
ds
icebp
ja
enter
cmp
jae
testb
mov
dec
decl
inc
jmp
mov
clc
mov
insl
mov
lds
out
fidivrl
and
xlat
push
icebp
push
cmp
add
add
xchg
mov
jbe
movsb
push
js
scas
cmpsb
push
jecxz
ja
ficoms
dec
mov
nop
arpl
dec
inc
mov
and
aam
sub
in
mov
test
arpl
cs
aam
sbb
or
mov
push
ficomps
sub
jbe
mov
xchg
sub
push
lods
scas
jae
sbb
mov
arpl
lods
push
repz
aas
cmp
rcrl
jle,pt
pop
or
sbb
fidivrs
sti
xchg
sbb
mov
sbb
js
int3
sbb
mov
push
dec
popf
ret
or
push
mov
pop
mov
ja
arpl
fnstsw
push
and
das
or
xchg
mov
in
xor
sub
mov
mov
mov
cld
inc
jp
popf
inc
inc
jo
iret
sub
mov
out
insl
insl
ret
sbb
cld
enter
inc
pop
leave
stos
in
and
cli
xchg
out
dec
les
cmp
sbb
fstl
inc
xlat
pop
pusha
cmp
push
jo
arpl
mov
je
jl
mov
lock
aad
push
dec
cs
das
movsb
repz
dec
mov
xchg
sbb
lods
push
xchg
call
data16
out
ret
out
xchg
mov
jl
sub
mov
sub
or
fwait
test
sub
outsb
dec
inc
sub
cmp
xchg
jo
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
dec
sub
ret
movsb
js
jo
jle
jo
xor
int
dec
out
pop
add
test
xor
pop
lods
push
push
push
pusha
jnp
in
out
jae
dec
mov
sub
stc
scas
sub
inc
and
outsl
dec
addb
mov
fisubrl
xor
xor
jp
dec
cmp
int
lcall
pop
mov
xchg
push
push
xchg
mov
rorl
cmc
xchg
mov
mov
pop
je
cmp
movsl
outsl
mov
imul
sbb
pop
pop
lea
cmpsb
mov
cmc
mov
xor
js
cmp
ret
or
and
in
idivb
stc
xlat
xchg
adc
push
es
cli
xor
das
mov
sbb
mov
leave
dec
inc
xor
sub
int3
outsl
ljmp
push
push
push
adc
fadd
sub
mov
cli
loopne
cmpl
adc
xchg
push
cmpsl
dec
mov
sti
in
sbb
popf
xchg
cmc
adc
aaa
mov
jmp
fisubrl
lods
gs
mov
jne
push
out
lods
push
cmp
lods
jb
cli
cmpsl
xor
mov
sub
lods
leave
and
hlt
aad
and
cltd
ret
inc
adc
sub
or
ret
mov
pushf
jb
adc
mov
pop
lock
movsl
pop
cmpsb
es
jae
roll
inc
aaa
sub
mov
int
test
adc
loop
or
jmp
cmp
mov
jge
test
mov
dec
sbb
xchg
pop
cmp
ffreep
fstp
ret
ret
mov
sub
or
push
mov
shl
push
xchg
sbbl
popf
mov
inc
inc
xchg
sbb
pop
dec
jmp
pop
lahf
stos
cmp
insl
push
jmp
mov
jae
cmc
sahf
jae
jmp
mov
lcall
lods
cwtl
sti
pop
mov
cmc
jns
jmp
inc
jnp
xchg
arpl
mov
pop
scas
aas
inc
out
inc
arpl
cmp
and
push
xlat
jno
pop
cs
jo
jno
ja
je
or
loope
ss
out
cwtl
pop
cmp
push
cmpsl
jecxz
push
or
movsl
out
push
cld
xor
ljmp
pushf
loope
outsb
cld
dec
sbb
or
sbb
iret
cmp
push
cmp
or
in
andb
sti
fadds
cmc
in
mov
xchg
aaa
aad
jmp
jno
dec
clc
sub
out
fcomps
divl
or
cmp
mov
adc
push
sbb
jae
loopne
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstenv
lods
fwait
in
add
jo
sub
imul
sti
and
xor
or
add
stc
sub
pop
jmp
pop
lret
push
pop
lock
icebp
fidivrl
xchg
pop
add
mov
xchg
inc
scas
jl
leave
mov
add
outsl
pop
sbb
inc
xchg
icebp
mov
mov
xchg
xchg
addr16
repnz
mov
pop
jl
fldt
mov
and
push
sbb
shrb
mov
adc
sub
les
push
ret
push
in
or
sbb
mov
sub
xchg
fstps
sub
jg
stc
xchg
aas
push
mov
mov
mov
stc
xor
xchg
xchg
testl
mov
pop
adc
addr16
cmp
adc
xchg
and
sub
sub
int
jns
iret
push
sub
xor
inc
call
mov
add
fsubrs
dec
test
cmpsb
add
push
mov
cli
test
loope
repnz
push
dec
push
cmc
outsb
popa
push
dec
movsl
mov
pushf
jnp
outsl
mov
les
outsl
fcoms
fcomi
scas
and
mov
inc
mov
repnz
imul
mov
mov
sbb
inc
lods
pop
insl
add
fimuls
aas
sub
jae
mov
fmull
mov
out
lods
repz
lea
mov
js
lahf
push
jle
fs
pop
mov
movsl
sub
add
jne
push
sbb
add
sbb
stos
std
mov
mov
js
mov
imul
xchg
xor
or
pusha
js
mov
iret
loopne
test
mov
nop
push
adc
rol
adc
pop
mov
scas
test
pop
jns
imul
fwait
imul
fdivr
fmull
fistpll
or
mov
sbb
mov
mov
out
pop
mov
and
cmpsb
stc
insl
mov
xchg
xchg
aaa
cltd
enter
cmp
subb
jmp
adcb
cmp
jo
pop
ds
in
sub
leave
and
jge
std
fwait
mov
mov
es
aas
lret
xchg
jns
scas
mov
sbb
ss
lahf
lret
xchg
xchg
push
jle
jmp
mov
jno
sarb
xor
pop
sahf
into
outsl
sub
rep
cmpb
daa
mov
pusha
mov
or
fs
xchg
call
jae
add
int3
sahf
xchg
mov
inc
sbbb
or
cmp
sbb
and
and
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
sbb
out
add
mov
xchg
shl
jno
mov
inc
addl
push
jp
and
out
mov
xchg
mov
jne
test
in
sbb
into
mov
pop
or
fildl
or
push
pop
pop
mov
aad
movswl
jge
sbb
out
and
mov
add
adc
mov
mov
aaa
dec
xor
add
or
mov
movsl
je
push
push
or
clc
sahf
rorl
insl
jecxz
jp
scas
adc
xchg
mov
sub
bound
in
cmpsl
fwait
icebp
inc
dec
lods
pop
mov
mov
and
pop
mov
sub
pop
mulb
mov
test
pop
inc
lahf
pop
add
push
or
jnp
dec
rolb
inc
fdivrl
jmp
mov
sbb
inc
or
fcmovu
jp
fstpl
adc
in
popa
cltd
loopne
test
sbb
pop
aas
xlat
xchg
lea
stos
fisttpl
xlat
es
inc
imul
push
lcall
imul
sbb
std
mov
in
pop
jne
int3
push
test
xlat
lods
inc
pop
js
cmp
fadds
and
ficomps
sub
cmp
fists
jb
inc
mov
pop
inc
dec
addl
psubsb
cld
ds
repnz
push
imul
cmp
push
shl
loope
ret
sbb
cmpl
and
faddl
sbb
mov
fs
push
mov
inc
fbld
test
jns
pusha
adc
ret
sub
sbb
subb
insl
lods
lock
adc
inc
daa
jp
cli
and
loope
pop
stos
xchg
dec
adc
or
and
in
lock
or
cmp
push
lret
repz
sbb
xor
notb
sbb
add
sbb
lods
sti
rolb
or
test
sbb
xchg
outsb
inc
push
mov
idiv
sti
sbb
js
and
dec
enter
imul
addl
mov
push
jnp
inc
jae,pt
repz
mov
repnz
fcoml
nop
push
sub
lods
popf
lahf
popa
jbe
adc
test
lods
xchg
sbb
mov
dec
std
mov
adc
aam
aaa
test
mov
mov
leave
test
loopne
ja
call
jbe
pop
mov
push
fildll
cmpsb
adc
inc
les
xchg
test
xchg
pop
jmp
jbe
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
push
lock
jg
jg
mov
xchg
fistl
cmp
cmc
dec
testb
mov
in
dec
cmp
dec
xchg
fnstcw
inc
mov
push
and
inc
cmp
cwtl
nop
sub
sbb
into
test
scas
sub
cli
lods
int
leave
push
inc
jo
movsb
flds
jns
das
pop
and
jae
pop
cmp
jge
jge
lret
or
je
mov
scas
outsl
xor
ret
pop
cmpsl
pusha
repz
js
cmpsb
jb
sarl
or
cmp
das
dec
xchg
push
mov
aas
jge
jns
pop
lea
mov
loopne
add
xchg
sub
mov
mov
inc
insl
daa
jg
mov
sub
loopne
jo
das
imul
sub
jmp
add
dec
ds
nop
imul
adc
in
in
mov
fisubs
xor
out
mov
enter
and
jo
add
cmpsb
in
cmp
mov
pusha
or
insb
push
nop
ss
mov
xchg
inc
leave
loope
pushf
pop
push
add
ror
sbb
test
int
adc
push
pop
xadd
cld
dec
clc
adc
or
outsl
sbb
mov
jle
fiaddl
sub
mov
insl
adc
mulb
pop
movsl
out
insl
adc
inc
add
mov
clc
mov
dec
lcall
cmp
insl
mov
add
add
shlb
pop
sbbb
push
pushl
jmp
inc
cwtl
jb
and
sub
mov
fistpl
pushf
lods
movsb
js
mov
push
add
in
mov
aam
cmpsl
and
sti
cmp
mov
xor
cwtl
xchg
rclb
imul
movsl
add
pusha
ljmp
jmp
pushf
xor
insb
lock
xor
test
in
cmp
inc
mov
inc
mov
lods
sarb
add
js
mov
out
lea
es
clc
imul
adcb
data16
std
aam
xchg
es
xchg
pop
shrb
mov
inc
and
imul
dec
sbb
mov
jle
cmp
inc
js
test
xchg
push
xor
into
adc
add
imul
std
lock
pop
inc
sub
mov
push
and
cvtpi2ps
lods
and
daa
fildl
pop
insl
add
cmc
pop
xchg
xor
faddl
mov
sub
dec
out
or
mov
fs
lea
jmp
sub
mov
popa
pop
xchg
aas
icebp
inc
pop
xchg
mov
jle
jo
pop
pushf
lds
xchg
shrl
out
adc
clc
dec
test
lock
pop
icebp
push
fcompl
stos
xor
jmp
mov
pop
in
or
inc
add
lahf
inc
xor
push
adc
repz
xchg
pusha
nop
push
out
xor
pop
or
and
loope
imul
adc
cli
lahf
iret
gs
fmul
mov
pop
lea
cmpsl
xchg
mov
and
andb
push
mov
cmp
mov
inc
adc
inc
test
inc
aas
add
sbbb
ret
fldenv
movb
shlb
dec
mov
fnstsw
cmpsb
xchg
mov
scas
jp
hlt
call
mov
pop
std
or
cmp
pop
popa
mov
sarl
push
outsb
mov
psubq
pop
push
adc
xlat
or
ljmp
jecxz
fsubs
sarl
stc
ja
adc
lock
cmp
pop
andl
loope,pn
loop
xlat
mov
and
nop
mov
adc
jns
push
adc
jns
rcrb
and
or
mov
sbb
aaa
cmpsb
cmp
jp
cmp
shll
aas
subl
repz
pop
clc
push
arpl
xchg
int3
shlb
mov
jb
xorb
sub
sti
inc
testl
push
repz
or
into
dec
mov
lods
mov
push
aad
fxtract
xchg
int3
fdivl
push
es
repnz
fbstp
sub
mov
fbstp
mov
jno
sbb
loopne
test
jo
xlat
sbb
jge
xchg
loope
fwait
mov
test
mov
ret
push
icebp
int
sub
inc
icebp
andl
sub
cmpsb
sub
push
cltd
dec
leave
push
push
xor
lret
mov
add
das
inc
push
sbb
jl
into
iret
ljmp
inc
mov
xor
xor
por
mov
insl
fs
inc
cltd
popf
cmp
jo
hlt
cltd
lock
push
pop
mov
jae
push
mov
pop
jecxz
mov
orb
sbb
adc
cltd
mov
xchg
jne
call
in
pusha
mov
loope
dec
jl
cwtl
pop
mov
loopne
outsl
bound
fdivr
adc
sahf
cmp
dec
xor
mov
inc
lret
sbbb
lods
cmp
add
adc
dec
mov
popa
out
xor
jns
jbe
and
and
sbb
pop
jmp
test
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
movb
orl
jo
notl
pop
sub
bound
mov
ss
push
xor
adc
or
clc
out
push
addl
inc
pusha
inc
out
loope
imul
stos
push
cs
mov
mov
test
mov
aad
dec
mov
adc
test
cli
imul
scas
repnz
out
loopne
mov
out
inc
sub
ret
inc
sar
push
xor
xor
in
cmp
inc
pop
mov
dec
mov
test
out
es
mov
cmp
in
test
icebp
arpl
mov
loope
dec
or
stos
ljmp
jb
es
cmp
mov
cmp
or
lods
add
mov
and
pop
pushf
lods
fbld
lcall
iret
mov
mov
pushf
fcmove
sbb
lcall
pop
ret
mov
ret
pop
pop
or
dec
add
in
arpl
xor
insb
add
fistpll
std
or
dec
repnz
xchg
adc
dec
pop
inc
push
push
add
sub
test
mov
mov
enter
cmp
or
aad
push
ret
pushl
jp
repnz
insl
mov
mov
xchg
pop
out
sbb
xor
lahf
loope
fwait
rol
ja
or
dec
push
lods
pushf
xchg
xchg
lcall
into
lahf
ds
dec
repz
sub
lock
out
stos
fs
jno
pusha
push
inc
jb
iret
std
hlt
arpl
ljmp
adc
jl
rorl
and
rcrl
nop
mov
mov
add
arpl
inc
jmp
cmp
loopne
sub
out
stos
out
mov
xlat
lahf
sbb
sahf
jl
adc
insb
lea
sub
imul
mov
pop
stos
pop
inc
adc
leave
scas
rol
inc
repnz
in
int3
divl
pop
mov
adc
and
gs
pop
inc
mov
aas
scas
es
inc
adc
and
add
test
das
imul
test
cmp
int3
xchg
repz
push
into
xchg
mov
jbe
test
shlb
subps
and
xchg
push
jge
leave
push
or
pop
and
bound
ret
jo
mov
call
je
loopne
imul
cmp
cltd
and
jb
and
or
jnp
xchg
add
pop
fildl
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
or
mov
mov
sahf
lcall
psrld
mov
out
pop
lock
fisttpl
fiadds
test
outsb
aam
pop
rolb
lods
xchg
xchg
push
mov
iret
dec
test
cld
dec
je
inc
jnp
mov
push
int3
and
sub
scas
lods
aam
sbbl
jno
repnz
dec
mov
or
in
push
cwtl
jle
jmp
mov
loope
or
mov
in
push
jg
cmp
gs
mov
insb
xchg
popa
sub
mov
push
pop
xor
sub
adc
jb
xchg
arpl
in
test
std
jbe
fstpl
fmul
xchg
push
push
ret
xlat
push
push
mov
lds
adc
les
scas
sub
fbstp
movsb
xchg
shll
mov
mov
repnz
rol
jmp
outsl
jmp
pop
repnz
leave
jbe
adc
aas
lock
iret
hlt
stos
stc
stos
inc
jge
leave
aam
cmpsl
out
sbb
icebp
aam
jne
xchg
adc
shrl
or
int
test
leave
pop
pop
push
dec
je,pt
addl
xor
mul
pop
imul
out
test
ficoml
in
mov
sbb
lods
repz
addb
xlat
stos
ja
ret
cwtl
inc
lcall
repz
push
int3
jl
ficoms
or
fldl
mov
cmp
sbb
add
aam
testl
bound
fdivrp
pusha
shlb
jg
pusha
mov
sub
js
arpl
xchg
sbb
cmc
lcall
mov
adc
push
add
sbb
scas
or
or
cmp
rcl
or
in
push
and
pusha
sub
cmp
xchg
lods
push
idivb
movsb
mov
shrb
mov
loope,pt
cmc
outsb
fadds
dec
mov
jle
lods
push
pop
jns
sub
loope
repnz
sarl
and
lcall
push
roll
pop
lds
pop
add
push
fs
sub
xchg
or
loop
lret
mov
push
dec
pop
sub
out
cwtl
movsb
cmp
test
xor
inc
cmc
adc
test
adc
das
aas
scas
bswap
mov
xor
testl
mov
sahf
sbbl
push
fistl
fildl
mov
rclb
dec
loope
jo
xchg
orl
test
fisttpl
pop
sti
and
in
sarb
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
cmp
adc
jo
jle
jo
push
inc
test
dec
aaa
shlb
inc
jg
les
sub
aad
sub
xor
lods
fwait
ljmp
mov
repnz
mov
mov
not
or
hlt
js
aaa
jb
aas
add
dec
insl
movsl
cmpsb
dec
in
xorb
cmp
dec
pop
xchg
and
scas
xchg
pop
shl
repz
sbb
push
or
adc
jge
xchg
mov
out
xchg
aad
popa
xor
sub
lods
cmp
cmp
mov
dec
mov
lea
imul
sub
add
add
add
mov
and
push
jge
fcomps
xchg
push
and
pusha
xchg
fimull
imul
jns
pushf
leave
add
aas
aam
lds
repz
out
aas
xchg
push
out
bound
and
sbb
cmp
les
xor
inc
adc
into
xor
rorl
test
dec
sahf
mov
dec
cmpsb
inc
jne
stos
pop
mov
jmp
addr16
int3
xor
imul
xor
adc
jmp
loop
aam
lcall
js
jbe
sarl
xchg
loope
mov
cmc
or
mov
je
test
add
mov
out
loope
scas
xchg
dec
ret
jne
mov
mov
mov
scas
shlb
mov
lods
hlt
xlat
dec
jo
movsb
cmp
jle
sbbb
ds
lods
shl
xorl
movsl
mov
js
sbb
std
fistl
xor
ljmp
ficoml
outsl
and
mov
div
mov
dec
andl
orb
imul
testb
jmp
pop
sbb
fisubl
insb
inc
lea
jo
adc
mov
or
decl
push
jb
das
jo,pt
shlb
xchg
jb
jp
cmpsb
sub
xor
pop
add
out
xorb
bound
adc
ss
inc
into
adc
dec
dec
mov
xor
xchg
in
push
pop
lock
fs
mov
dec
call
idiv
push
lds
sbb
sub
xor
inc
mov
cmp
xorl
popl
stc
add
mov
sub
mov
add
out
sbb
mov
push
sti
je
fsubrs
add
outsb
mov
mov
mov
sub
xchg
cmc
xchg
ds
push
pop
push
pop
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
mov
jg
mov
fimuls
das
out
fbld
rorl
rcr
lcall
mov
dec
jo
pusha
hlt
dec
enter
and
nop
cmp
dec
in
rolb
cmp
cmc
jae
cmp
js
mov
push
push
pop
in
mov
lods
mov
or
dec
push
fiaddl
inc
stos
adc
dec
inc
cmc
in
mov
mov
cmpsb
gs
xor
dec
imul
ret
inc
shll
mov
pusha
outsl
daa
add
mov
sbbb
movl
lods
push
and
add
sbb
test
adc
xlat
aam
mov
inc
xchg
arpl
xor
lea
push
daa
sub
sub
add
xchg
inc
jecxz
inc
xor
dec
cmp
jnp
adc
pop
mov
mov
nop
jle
cmp
pop
jae
pop
mov
stos
ret
out
jno
decb
jae
mov
sub
aam
jmp
imul
sbb
repz
pop
call
mov
mov
test
es
mov
inc
pop
lret
fwait
cwtl
jmp
add
lea
loop
mov
out
and
imul
ja
ror
cs
sub
rcll
mov
adc
mov
sbb
cmp
rcrb
cmpsb
mov
cwtl
mov
jmp
cltd
in
jb
fnstenv
push
sub
popf
mov
jl
in
jg
repz
xchg
icebp
test
call
xor
pushf
mov
js
pop
jae
cmpsb
jge
push
cmc
sub
adc
stos
test
adc
test
pop
fsubs
mov
pusha
imul
add
mov
sbb
push
push
jmp
mov
jle
cwtl
xor
shr
cmc
data16
pop
mov
stos
xchg
or
inc
cmovp
sub
cmp
mov
lcall
test
cmp
iret
fcompl
pop
mov
sub
loop
jns
out
outsl
movsb
lcall
mov
mov
addr16
adc
shl
fstps
push
ljmp
aaa
xor
mov
dec
mov
pop
jmp
jp
mov
sub
pushf
rcll
sub
outsb
add
sbb
les
xlat
sbb
push
lds
aam
aaa
mov
xchg
jmp
cmc
std
fs
jno
mov
push
push
mov
iret
mov
pushf
mov
xorb
movsl
adc
pop
mov
push
fs
cmp
xchg
cmp
fwait
sti
std
pop
add
repnz
andl
rorl
inc
adcb
sub
cmpsb
inc
aam
popa
pop
es
sbb
enter
and
jl
test
push
daa
pop
pusha
dec
fdiv
mov
aas
jb
orb
popf
int
bound
sbb
sub
adc
xor
mov
shrl
arpl
shll
adc
xor
in
push
pop
incb
inc
xor
mov
xchg
xchg
int3
cwtl
test
lods
outsl
cmpsb
inc
mov
rcl
ljmp
incl
and
sub
mov
add
xlat
inc
movl
andb
ds
inc
pop
hlt
sarl
fstpl
outsl
push
jnp
xchg
xchg
dec
sbb
adc
and
adc
or
sub
shlb
or
inc
xor
jge
rol
cmpsb
jl
sub
and
cmp
cmp
or
pop
mov
and
and
pop
xchg
push
shlb
lock
xchg
pop
mov
jae
push
mov
fwait
add
dec
leave
mov
fcomp
shll
pause
in
lahf
popa
loop
xchg
pop
scas
ja
popa
jp
inc
cltd
xchg
adc
push
popf
push
push
xchg
scas
stos
cs
je
es
xchg
out
or
leave
adc
outsb
or
jnp
ds
popa
and
dec
ror
incl
incb
gs
fistl
add
movsb
adc
aaa
inc
add
pandn
xor
lret
xchg
push
or
aad
loop
xor
loopne
dec
rolb
adc
pop
icebp
mov
push
lea
xorb
pop
insb
adc
out
loopne
fiaddl
nop
fisubs
inc
jne
sub
ret
popw
adc
fs
stos
addb
push
xchg
dec
xor
sbb
jge
push
in
adc
push
xorb
pop
lret
mov
je
lcall
shlb
pop
lret
scas
mov
jae
andb
mov
jmp
and
sbb
fbstp
cmpsb
and
cs
mov
fdivrl
dec
test
lea
inc
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
insl
and
mov
sbb
jo
jle
jo
pop
inc
inc
mov
out
jmp
loopne
inc
aas
dec
mov
pop
mov
pop
adc
scas
and
ja
fidivrs
jno
stos
push
hlt
jno
scas
mov
insb
push
lcall
cltd
fwait
shr
dec
jae
dec
inc
fsubl
movsl
sub
ficompl
addb
stc
stos
jns
imul
pop
inc
or
adcl
das
add
push
sbb
xchg
mov
int3
daa
rorl
xor
or
xchg
dec
mov
test
mov
push
in
inc
xchg
mov
cmpsb
lods
daa
push
jl
jg,pt
adc
mov
inc
icebp
test
jno
inc
mov
inc
aas
lahf
enter
push
pusha
lahf
imul
inc
iret
loopne
inc
addb
cmpsb
rorl
fbstp
add
push
or
shll
lds
aaa
jge
sbb
sub
or
and
dec
adc
aaa
mov
mov
pop
jle
pop
adc
sub
push
jle
inc
cmp
xchg
inc
ret
icebp
add
mov
loop
aam
out
fcoms
ja
jne
mov
xor
movsb
pushf
mov
test
sbb
dec
push
mov
cli
div
scas
add
mov
aad
and
dec
pop
iret
fwait
rcl
lds
mov
sub
loope
adc
fidivrl
inc
mov
lret
je
push
push
mov
js
adc
mov
xor
mov
push
mov
in
adc
gs
and
mull
bswap
outsl
xor
icebp
xchg
mov
push
xor
cmpsb
in
jecxz
jge
cmc
iret
xchg
add
mov
cwtl
insb
xchg
xchg
sbb
push
jb
or
xor
fwait
or
movsl
hlt
and
repz
pop
shl
cli
out
aaa
jne
dec
xchg
fs
lcall
pop
push
adc
imulb
loopne
mov
ja
mov
fnstsw
fwait
mov
pop
jecxz
or
jnp
push
je
sahf
jl
sbb
pop
dec
fucom
jle
sbb
icebp
int3
cli
stc
cltd
push
insl
das
pop
into
inc
and
ret
cs
loope
jne
pop
sbb
jae
pop
test
or
int
ret
pop
mov
loopne
in
push
rclb
inc
mov
fistpl
push
cwtl
jae
lahf
imul
cs
inc
pop
data16
mov
push
popa
and
dec
out
pop
clc
sub
xor
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
stos
sbb
dec
aaa
sbb
mov
mov
sub
call
pop
arpl
dec
xor
xorb
mov
sbb
push
cmp
and
outsb
fcmovnb
cli
inc
cmp
pop
push
inc
leave
adc
push
daa
and
cmp
cmp
push
add
jne
mov
jp
cli
cmpb
jge
scas
push
adc
fcom
cmpsb
sub
sti
xchg
pop
and
push
xlat
pop
xchg
cmc
sahf
mov
das
push
pop
push
out
fsubs
fisubrs
push
xchg
jb
push
jns
pop
cmp
shll
mov
push
and
mov
scas
mov
inc
mov
adc
lods
pop
fstps
es
or
sub
and
jle
cmp
outsl
in
add
or
lods
es
adcl
dec
or
jne
ficompl
mov
xchg
sbb
sbb
testb
adc
inc
mov
sbb
les
loop
scas
cli
mov
cwtl
subl
aas
add
mov
and
in
sti
cmp
mov
pop
rcll
inc
mov
sub
push
test
mov
adc
pop
adc
xor
loope
inc
data16
pop
out
push
ret
push
jne
cmp
mov
filds
cmp
das
iret
addr16
ds
add
jbe
rcrl
push
jbe
xor
mov
jo
pusha
int
mov
and
lods
out
mov
outsl
call
popa
xlat
adc
xchg
jecxz
ja
cs
xchg
pop
int3
adc
mov
xor
push
loope
sar
dec
out
jp
orl
pop
dec
fidivl
out
clc
xor
scas
mov
or
pop
mulb
stos
xchg
push
in
dec
push
jle
loope
outsb
roll
jae
mov
stos
es
push
cwtl
lret
jmp
stc
addr16
lret
mov
pop
mov
imul
sbb
push
aas
hlt
mov
mov
add
add
aam
lret
pop
int3
mov
xor
jae
jl
imul
mov
lret
mov
pminub
popf
outsb
mov
fadds
sbb
iret
imull
cld
scas
mov
clc
sub
pop
ret
mov
fstps
cmp
aam
pop
adc
inc
loope
daa
xchg
movsb
dec
mov
nop
lret
int
sbb
outsl
pop
fs
test
pop
aam
je
adc
popf
out
aad
inc
cmp
leave
and
hlt
dec
dec
inc
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
in
roll
mov
fisttps
sub
xor
fs
popf
fldcw
testl
roll
or
sub
push
cwtl
je
jbe
dec
xchg
into
in
cmp
add
jg
xchg
popf
push
ss
es
std
pop
repz
enter
rcrl
sub
mov
jp
xchg
decl
cld
dec
jb
cmp
mov
pop
pop
xor
fcomps
and
push
jnp
ljmp
jnp
cli
xchg
sahf
fdivrs
insl
mov
mov
xlat
test
test
dec
lcall
fmul
shrl
xchg
in
jmp
pop
fistl
mov
pop
mov
cmpsl
clc
mov
out
or
xorl
jb
inc
jge
fdivs
xor
inc
adc
popf
dec
bound
lds
and
jle
jnp
jecxz
xor
adc
or
ja
push
movsb
cmp
mov
in
xchg
xchg
cmp
sahf
lds
ret
aas
mov
dec
pop
cltd
mov
aas
bound
pusha
mov
dec
clc
add
je
jg
popa
cwtl
jecxz
add
mov
jne
add
faddp
jb
mov
ljmp
loopne
pop
sbb
push
or
xor
stc
out
jnp
adc
adc
mov
mov
jle
or
mov
pop
pop
out
cmc
push
test
push
jp
jge
sbb
shll
mov
mov
push
shr
inc
pop
jmp
test
idivb
jno
jmp
decl
les
mov
and
xchg
jb
sub
lcall
dec
popf
lock
xor
or
xor
jp
out
dec
push
mov
ja
cli
dec
jbe
cmp
mov
dec
cmc
stos
xlat
pop
pop
ret
out
mov
bound
ficoms
shl
mov
xor
mov
xchg
add
add
inc
test
dec
test
out
inc
in
xor
fisttpll
imul
icebp
cs
mov
ret
bound
mov
xchg
das
addl
in
icebp
cmpsb
cmpsl
mov
dec
ljmp
xchg
aas
pop
mov
jno
outsl
ss
jb
pusha
jge
call
divl
fs
inc
or
or
mov
xchg
nop
test
sbb
fsubr
xor
cs
cmp
cwtl
aam
std
lock
adc
test
xor
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
jno
mov
jle
jo
imul
insl
test
push
pop
and
dec
ficoms
cmp
mov
push
sbb
add
sbb
sub
shl
je
addb
lret
mov
stos
mov
dec
inc
jae
loop
xchg
adc
cltd
loop
sub
mov
cs
push
les
xor
je
push
inc
fdivl
inc
push
arpl
bndstx
jecxz
mov
frstor
movb
mov
lock
jmp
clc
adc
js
adc
test
or
jl
fwait
stos
int
es
clc
in
mov
jmp
xchg
out
or
cmp
fildll
xchg
mov
mov
mov
cmc
mov
pop
cli
or
inc
lods
mov
jo
lods
mov
adc
ret
jle
insb
sahf
and
cli
jge
mov
in
leave
mov
mov
aas
sbb
iret
xor
dec
pop
aaa
loopne
and
mov
adc
or
push
es
pop
or
adc
cltd
in
xchg
add
hlt
lods
shll
push
pop
sub
mov
into
ljmp
std
sahf
adc
jle
fwait
dec
inc
add
movsb
mov
and
repnz
or
dec
jg
vminpd
dec
sub
push
add
add
popa
lods
inc
cmc
cwtl
jp
cld
push
lea
lods
push
stos
cmp
addr16
dec
pop
push
call
mov
mov
push
loop
daa
in
frstor
push
pop
loop
ss
or
jmp
test
dec
mov
jno
lods
loopne
or
ds
loope
divb
adc
mov
arpl
push
ljmp
sub
movsl
xchg
sbb
push
fstl
and
add
cmp
jmp
loop
shlb
pop
mov
lret
test
pop
bound
pop
xlat
mov
lret
mov
and
ljmp
pop
jno
leave
dec
pop
test
xchg
and
lods
lret
fdivr
cs
dec
std
ficoms
loope
cmp
stos
in
cltd
xor
xor
test
icebp
sub
les
fiadds
mov
sbb
test
adc
mov
sbb
mov
xchg
mov
lcall
insl
out
bound
xor
lods
push
xorb
les
shll
popa
loop
jmp
ljmp
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
