pop
cmp
shll
shr
insb
repz
divb
cwtl
or
ret
sahf
add
mov
icebp
shrl
mov
push
mul
loopne
outsb
push
pushf
xchg
sarl
jge
jl
cltd
and
pop
out
repz
fdivr
xchg
push
ljmp
jnp
sahf
cltd
mov
in
pop
xchg
push
mov
movsb
rolb
adc
movsl
data16
ret
mov
mov
dec
cmp
les
adc
or
add
mov
insl
push
push
mov
mov
ret
xsaveopt
sbb
mov
ret
aas
add
fwait
or
push
mov
lahf
cs
aas
icebp
and
ret
inc
xchg
cmp
leave
xor
mov
ja
or
ljmp
mov
arpl
mov
cmp
ficoms
in
fildll
aam
xchg
pop
scas
pop
jb
inc
inc
dec
xchg
arpl
push
cltd
add
incb
popf
scas
xor
push
jl
xor
fs
out
popa
xor
sti
ret
test
nop
sbb
cmp
daa
fsts
aam
gs
sti
pop
out
aad
gs
adc
std
loope
das
pop
inc
jecxz
sbb
aad
mov
and
adc
mov
inc
loope
loope
add
fcom
cltd
push
dec
pop
jns
add
lods
out
inc
negb
scas
dec
xor
add
sbb
out
jg
das
jae
adc
test
mov
adc
sbbl
imul
adc
xchg
pop
and
push
pop
mov
mov
adc
cld
cld
into
fdivrl
mov
push
pop
shlb
ror
rcr
xchg
pop
dec
adc
sub
lcall
dec
push
xor
out
or
test
sub
repz
jp
xor
mov
xor
push
and
insl
stos
jmp
ljmp
mov
jnp
iret
fs
es
ljmp
fwait
mov
xor
push
sub
enter
rcrl
aaa
ljmp
mov
dec
sbb
shrb
mov
mov
repz
xor
pop
fldt
lcall
or
lds
adc
lret
dec
popf
stc
mov
jb
cmp
cld
imul
out
repnz
das
test
mov
stos
dec
test
stos
jbe
and
sub
inc
pop
push
jnp
mov
mov
jle
xchg
jno
xchg
outsb
pop
xchg
push
xchg
or
mov
std
out
orl
mov
jle
dec
pop
mov
xor
mov
aas
stos
fs
xor
divb
or
aas
into
jb
loopne
lss
int3
in
mov
lahf
loopne
mov
rcrl
cmc
sbbb
jle
inc
iret
mov
or
xor
cmp
ja
stc
jo
sahf
cwtl
data16
fldt
mov
xchg
mov
loop
and
ljmp
mov
sbb
sbb
insb
jnp
jge
les
adc
adc
pop
pop
ret
adc
sahf
or
imul
inc
insb
or
cmpsl
or
jns
std
cld
pushf
add
xchg
inc
xchg
das
and
lods
dec
adc
out
mov
stc
dec
sbb
adc
pop
bound
outsb
jge
mov
lret
sub
add
push
xchg
pop
out
insl
insb
xor
cmp
cwtl
adc
fistps
outsl
ror
inc
and
jle
xlat
xchg
movsb
scas
mov
mov
pop
mov
mov
jmp
and
ljmp
dec
subb
imul
movl
popf
push
shl
xchg
out
arpl
adc
xchg
or
cld
mov
aas
mov
sub
jo
fstl
jle
in
inc
xchg
push
das
mov
lds
sub
mov
push
mov
xor
inc
es
xchg
pop
into
lods
stos
lock
mov
xor
sub
sub
push
sub
push
add
push
lods
insl
xor
ja
cli
jae
movsl
mov
mov
es
adc
je
mov
das
inc
bnd
cld
inc
les
or
shll
mov
in
xchg
and
jl
out
jo
lods
push
push
les
adc
cld
xor
xor
inc
int
ror
insb
hlt
xchg
je
push
or
sub
fbstp
sub
mov
lahf
shl
lea
mov
add
mov
popf
jbe
lds
jle
fiadds
mov
pop
into
stos
pop
push
push
cmpsl
lcall
inc
hlt
push
nop
xchg
pop
pop
push
fildll
imul
insl
fadds
out
orl
mov
dec
popf
dec
das
mov
or
jmp
jmp
push
adc
sbb
push
fdivl
cwtl
ret
call
inc
aas
nop
jns
add
push
pop
out
mov
loope
dec
das
mov
sar
jae
sbb
icebp
mov
iret
add
iret
push
nop
aaa
sti
das
andl
or
lods
xchg
pop
imulb
push
xchg
cmp
repz
data16
fldcw
sub
sub
xchg
lods
lcall
ljmp
aaa
insl
icebp
jae
inc
out
popf
fs
pop
popa
xor
sbb
scas
cwtl
xor
ret
mov
lret
pop
mov
pop
in
sarl
in
popa
mov
pop
stos
fildll
frstor
cld
push
in
fadds
inc
sbb
lret
out
out
and
dec
dec
mov
sub
add
aas
jne
sar
iret
pop
cmp
shll
in
jmp
mov
addb
xchg
mov
push
ficoml
cwtl
cs
adc
scas
or
std
mov
ja
das
fiaddl
aam
pop
pop
xchg
out
jae
out
cmp
mov
idivb
jmp
data16
icebp
andb
jae
or
loopne
mov
movsb
and
mov
ret
inc
pusha
push
pop
out
sbb
fbstp
adc
mov
inc
sbb
inc
inc
addr16
int
cmp
xor
ja
fxch
hlt
jb
push
xor
jecxz
out
das
movsb
pushf
xchg
hlt
insl
adc
push
jo
inc
cmp
adcl
push
adc
shr
hlt
arpl
jno
in
ret
icebp
fs
jecxz
push
in
mov
dec
jns
icebp
scas
mov
pop
les
cmp
mov
test
hlt
nop
mov
cld
imul
std
aaa
push
jge
cmp
push
sub
leave
jl
xor
jbe
add
or
cmp
ja
cld
sbb
push
aaa
jg
mov
mov
daa
mov
xor
int3
mov
aam
stos
sub
cwtl
jle
xchg
push
add
or
jle
mul
aam
aam
sbb
js
mov
mov
arpl
push
sahf
mov
test
je
jbe
push
jbe
clc
mov
imul
outsb
jbe
sub
mov
test
xchg
adc
sbb
mov
adc
cmp
fstps
roll
or
pop
dec
out
cmp
push
cmpsb
mov
mov
popa
mov
pop
add
cmp
orb
jbe
cmp
lds
mov
cmp
stc
xchg
xchg
xor
dec
in
testb
inc
scas
cmp
xchg
push
iret
xor
loopne
shr
insb
int3
sbb
insb
nop
mov
sbb
inc
add
inc
xor
mov
push
xchg
fistl
mov
pop
add
sub
mov
add
pop
aam
bound
fsincos
adc
lds
nop
fwait
xlat
test
out
rol
xchg
inc
lds
xchg
data16
fstpt
mov
cmp
sbb
ficoms
xor
jne
pop
mov
pop
stos
jae
mov
fidivl
or
push
sar
pop
sub
dec
inc
push
push
push
push
lea
push
push
push
push
jl
push
push
ror
pop
pop
rol
push
cmp
pop
lea
cmp
push
call
pop
xchg
cmp
xchg
push
mov
mov
dec
jb
pop
les
xor
add
pop
push
pop
push
add
pop
or
stc
shl
nop
jp
push
sub
pop
test
push
xchg
xchg
pop
nop
test
jae
push
push
inc
pop
pop
or
test
jl
push
mov
pop
jo
push
push
pop
pop
call
jo
push
push
cmp
pop
pop
and
xor
push
jo
jg
mov
pop
or
push
push
pop
pop
cld
add
mov
add
push
dec
pop
nop
and
push
push
push
cmp
pop
pop
pop
jge
push
cmp
pop
push
test
pop
push
add
mov
pop
inc
dec
loop
jecxz
popf
pop
cmpb
or
cmpsl
nop
push
dec
pop
fidivl
sbb
mov
aas
in
rol
popf
pop
leave
loop
cmpsl
and
test
test
cld
lea
push
ror
pop
jns
test
push
add
pop
push
cmp
pop
jns
push
je
rol
pop
add
sub
add
jbe
or
lea
lea
mov
push
call
sahf
invd
pop
icebp
mov
test
mov
cmp
pop
xchg
popf
pop
jnp
imul
jge
add
int3
add
inc
popf
pop
aas
std
add
jle
jae
pop
add
add
je
shl
jbe
push
add
push
jge
push
mov
pop
pop
push
sub
pop
push
add
pop
push
call
sub
lret
pop
add
push
xchg
lret
add
mov
dec
aad
fistpl
push
mov
push
xor
pop
pop
loop
jecxz
ss
jg
jp
mov
inc
pcmpgtw
push
xorb
xchg
xor
imul
sarb
mov
mov
jge
pusha
mov
pop
xorl
fildll
dec
pop
pop
fcmovb
in
cld
push
mov
push
xchg
movsl
xchg
mov
pop
add
push
jp
jg
std
cld
pop
push
jg
jae
test
pop
sub
add
jnp
push
pop
push
js
cmp
pop
clc
cmc
lea
sub
jmp
and
mov
mov
mov
aad
push
jp
mov
test
jmp
sbb
cmc
xchg
or
and
push
fdivrs
lods
fisubs
pop
pop
adc
push
mov
pop
add
push
push
jno
shl
pop
pop
nop
loop
jecxz
or
outsb
cli
es
into
roll
outsb
mov
mov
push
push
mov
pop
pop
pop
loop
jecxz
in
shlb
inc
js
cmp
out
int3
sub
sub
xor
dec
mov
jns
jmp
cmp
iret
imul
adc
add
lcall
call
push
jg
shlb
mov
outsl
jb
addr16
mov
or
popa
jp
and
mov
mov
xchg
je
push
loop
repnz
int
mov
pop
mov
rolb
dec
sub
mov
movsl
int
xor
push
push
js
aas
enter
mov
loopne
sub
jecxz
inc
int
xchg
shr
jno
push
jmp
push
jo
mov
out
cmpsl
xchg
subb
jnp
lds
stos
sbb
cli
lcall
jns
push
jmp
out
cld
jns
shr
sbb
mov
pusha
insb
xchg
xor
int
xchg
or
data16
and
cltd
cmp
dec
dec
adc
sarl
pop
jmp
clc
push
jle
shr
pop
jp
or
sub
push
jg
test
pop
andl
jno
daa
ret
lods
loope
mov
mov
std
sbb
fs
and
xor
loope
ret
pop
test
lahf
aaa
jbe
stos
cmp
inc
xlat
sti
xchg
adc
dec
sub
pop
adc
mov
jl
add
push
cmp
xor
push
js
cmp
add
pop
lds
sbb
xchg
jo
rclb
out
jp
sub
jecxz
jo
in
push
leave
ret
jle
fwait
xchg
add
mov
pop
dec
push
jge
in
push
push
inc
sub
or
ss
jl
fcompl
iret
mov
xchg
daa
or
cmp
sahf
aaa
push
mov
rol
sub
scas
fwait
enter
addr16
xor
inc
insl
push
test
sub
repnz
fstpt
xchg
jmp
sti
out
push
icebp
das
xchg
loop
add
sbb
and
ret
adc
popa
in
push
scas
sub
jnp
mov
pop
push
aas
and
jne
add
and
les
sbb
subl
pop
sbbb
and
je
outsl
scas
adc
mov
dec
jg
lret
loop
dec
add
sbb
cwtl
fs
sub
xor
popf
int3
stc
mov
adc
pop
lret
movsl
adc
or
cli
adc
jno
fsubl
dec
mov
pushf
mov
or
sbb
add
lock
mov
ljmp
sbb
push
neg
mov
fsub
out
mov
lret
mov
push
cmp
popa
cmp
xchg
cmp
adc
fimull
fwait
mov
lock
or
jae
cli
push
cmp
or
je
inc
xchg
sub
pushf
lods
adc
fidivrl
sti
cltd
lea
add
pop
xor
repz
or
test
aaa
leave
xorb
dec
add
ljmp
xor
in
mov
test
je
aas
jb
mov
sub
mov
adc
mov
loope
dec
shrl
add
or
pop
cmp
ja
test
mov
icebp
pop
xchg
add
inc
cmpsl
xor
out
inc
jb
mov
add
test
mov
sahf
mov
das
scas
push
push
dec
cmp
mov
loop
adc
std
cmp
dec
inc
out
movsb
cmc
hlt
loope
movsb
jne
or
jg
cwtl
push
and
dec
das
push
xlat
pop
leave
shr
xor
sub
pop
test
pop
cli
stc
lret
lea
jo
inc
stos
arpl
addb
xor
sub
shrl
mov
cld
movsl
mov
mov
inc
in
aam
mov
xchg
fiadds
pop
pop
pop
mull
sub
hlt
loopne
jg
cmp
sbb
mov
icebp
int3
mov
pop
mov
cld
xor
cli
push
push
pop
shlb
call
ficoms
ljmp
lock
int3
or
mov
pop
cmp
pop
aam
fstpl
mov
mov
sbb
mov
ret
xor
mov
dec
inc
imul
fldcw
pop
push
call
data16
mov
movsl
cmpsl
mov
loope
imul
fisubl
mov
sub
push
push
add
and
xlat
cmpsb
jecxz
jecxz
test
jl
das
ds
xor
or
rorl
mov
fwait
inc
dec
fwait
rcrl
mov
fs
ret
xchg
sub
clc
mov
les
or
xor
xchg
fmuls
insw
je
sub
loopne
xchg
ja
inc
add
mov
mov
cmp
and
sub
mov
nop
call
movq
ds
or
icebp
popf
es
je
repnz
push
lea
in
pop
dec
pop
stos
jne
js
add
xchg
fsubrl
imul
repz
add
jns
push
pop
inc
pminsw
sub
mov
adcl
pop
lcall
incb
dec
sub
cltd
push
mov
xchg
push
into
mov
mov
mov
repnz
fwait
imul
mov
add
cli
jb
inc
orb
dec
xchg
out
frstor
cmp
ds
rclb
bound
mov
test
dec
fadds
jnp
dec
sub
mov
gs
jp
adcl
mov
pusha
mov
cli
mov
jo
mov
or
repz
inc
mov
sahf
xchg
nop
push
sbb
jecxz
push
inc
mov
aad
mov
xor
pop
cmc
jae
dec
xchg
cld
pop
xorb
ss
in
push
pop
lahf
rcll
or
out
orl
sub
mov
in
mov
and
pmaddwd
xchg
mull
pop
rorl
into
xchg
mov
shll
jo
mov
nop
into
lahf
addr16
aam
imul
popa
lcall
incl
push
xor
sub
dec
lds
nop
repz
lcall
pop
ret
ss
adc
mov
insl
inc
movsl
bound
jno
loopne
or
aad
insl
hlt
aaa
push
nop
push
aas
outsl
mov
cmp
xor
loop
rol
and
push
gs
jle
xor
call
cwtl
cltd
js,pn
stos
mov
icebp
adc
into
lds
pop
xchg
stos
stc
fwait
mov
xchg
xor
or
or
or
fwait
pop
mov
jmp
xor
inc
push
jne
fsts
lret
sbb
xchg
fucomi
jecxz
adc
sub
adc
or
and
in
mov
sarb
adc
cmp
ljmp
ljmp
or
repnz
test
subb
hlt
fstpt
mov
mov
rorl
out
popf
fcoms
pop
and
repnz
mov
push
xlat
xchg
fdivs
loop
mov
lods
lods
or
mov
xbegin
int
inc
paddsw
fcomps
sbb
mov
sub
mov
cmc
rolb
mov
shlb
and
sbb
out
cmpsl
jmp
out
sarl
xchg
jno
push
sub
ss
xchg
in
decb
push
mov
insb
inc
psubusw
enter
leave
sbbb
mov
add
lret
dec
pop
sbb
pop
adc
adc
outsb
xchg
and
xorl
daa
sti
hlt
mov
xlat
mov
ret
pop
jp
pop
mov
xor
cmp
or
daa
lods
mov
sti
adc
or
xchg
push
pusha
sti
inc
das
dec
lcall
fisttpll
into
aad
xor
xor
pop
ret
xchg
xchg
cmc
pop
sub
mov
xor
adc
sub
adc
mov
cmp
hlt
aas
add
adcb
jp
push
adc
xlat
jo
mov
mov
movl
mov
loope
into
fsubrl
inc
popa
fcompl
das
sub
mov
daa
cmpsl
sub
shrb
jge
ljmp
adc
nop
fstps
add
bound
xlat
stos
push
scas
jmp
and
outsb
pop
cwtl
and
decb
adc
ret
push
les
mov
mov
adc
pop
jp
mov
mov
mov
pop
adc
pushf
lcall
cmpsl
adc
in
xor
fisubrs
xchg
rcr
cmp
lcall
inc
insb
nop
sarb
sarl
cs
xor
and
dec
stos
inc
pop
xlat
js
push
and
rcrl
sub
dec
popw
jnp
pop
xchg
adc
loope
mov
and
push
add
daa
mov
push
or
ret
jle
mov
adc
push
cmp
dec
adc
daa
call
mov
or
outsl
add
inc
lret
xor
adc
outsb
sbb
and
sti
lock
xchg
sarl
mov
roll
push
sbb
arpl
push
mov
fldcw
jmp
and
pop
jp
roll
int
mov
mov
pop
pop
cmp
cmpsb
xchg
in
in
xchg
mov
jl
dec
cmp
mov
sub
aas
xor
mov
add
bound
jns
xchg
aam
add
and
sbb
ret
and
movsb
arpl
je
mov
rcll
push
and
push
adc
neg
cmpsl
cmp
scas
aaa
loopne
je
mov
int3
mov
nop
cs
sub
mov
pop
xchg
pop
push
mov
lahf
rolb
dec
add
adc
imul
rorl
mov
mov
dec
inc
jns
fwait
in
xchg
xchg
ds
shll
xchg
stc
pop
movsl
in
adc
jo
cmpsl
push
mov
nop
in
xchg
xor
sbb
call
adc
pop
subl
or
adc
fstpl
push
cmp
mov
jno
add
adc
mov
enter
cld
or
outsl
mov
push
pop
cmp
clc
push
jl
mov
stc
je
jmp
stc
sub
jns
cmpsb
out
test
pop
adc
sbb
movsb
cmp
cmc
test
sti
out
scas
cmp
scas
xor
pusha
cmp
ret
das
into
or
ja
les
pop
mov
int
jp
pop
and
dec
dec
xchg
test
gs
je
sahf
mov
fimull
pop
fimuls
push
jb,pn
xor
push
lods
and
add
sub
xor
popa
cmp
rclb
popf
lods
cmc
adc
outsb
mov
lods
movsb
dec
or
cmpsb
stos
cwtl
leave
insl
sbb
mov
adc
or
xchg
mov
push
sbb
xor
mov
xor
fnstcw
mov
ret
es
add
rcll
imul
adc
push
mov
mov
sub
bound
adc
addr16
or
ja
rolb
sarb
lods
adc
es
cmpsb
or
test
fucomp
xor
jo
rolb
mov
sbb
adc
stos
inc
sub
cmpsl
out
mov
inc
xor
daa
inc
imul
insb
xchg
add
into
push
cmpsb
shlb
rorb
dec
lods
imul
dec
jnp
insb
fs
push
sub
cld
mov
scas
hlt
push
flds
xor
pop
xchg
inc
leave
cmp
pop
inc
aad
enter
outsl
or
aaa
rolb
fld
outsb
xor
lahf
rol
sub
inc
lahf
hlt
xor
xor
jp
cmp
movsl
inc
popf
test
icebp
outsl
mov
push
sbb
jo
and
mov
outsb
dec
popf
jae
push
ret
inc
das
repnz
div
jne
xor
inc
lcall
pop
fistps
adc
xchg
mov
lds
imul
jne
stos
or
dec
fwait
les
xor
jle
sbb
movsb
pusha
push
sub
xchg
into
dec
leave
das
lds
cmp
adc
outsl
dec
mov
mov
sub
push
mov
aad
aam
cmpsb
pop
cmp
mov
pop
jge
aaa
frstor
sub
test
sub
out
dec
or
mov
cmpsl
lret
movntq
in
jmp
roll
arpl
inc
adc
inc
pop
scas
adc
pop
inc
popf
ja
push
mov
fidivrl
jb
call
loopne
cmpsb
inc
dec
cwtl
loope
insb
cmpsb
cld
fdivp
scas
adc
sahf
and
sub
out
or
inc
sbb
xchg
xchg
add
sbb
cld
loopne
movsb
jae
or
inc
and
ret
aas
das
mov
mov
movsl
adc
loope
add
insb
dec
cli
dec
mov
jge
sti
push
fs
mov
lcall
mov
addr16
lahf
icebp
dec
mov
stc
xorl
sub
pop
das
mulb
mov
mov
out
inc
mov
je
jecxz
jae
dec
rcl
or
icebp
pop
loopne
enter
xchg
mov
out
cli
push
push
stos
and
fucom
and
std
cwtl
fiadds
int
popf
les
dec
fmuls
es
out
or
out
fmul
ljmp
inc
add
test
xor
jmp
or
xchg
fsubrl
push
shlb
push
sti
sub
iret
jbe
jb
mov
mov
popa
outsl
sbb
xchg
jbe
lock
adc
cmpsb
sbb
jns
shll
and
jnp
adc
ja
mov
divb
inc
mov
pop
cmp
and
inc
xlat
in
out
xor
in
push
sub
jge
add
pop
popa
dec
int
pop
adc
mov
sbb
or
rolb
int3
xor
pop
xor
adc
add
clc
cmp
je
sub
mov
loopne
mov
jae
push
sbb
loope
enter
xor
addr16
shll
aas
rep
shl
lcall
pop
inc
adc
ret
fistps
in
out
cmp
and
icebp
ror
jge
clc
mov
mov
fisubrl
jp
dec
pushf
xrelease
and
jns
cmp
shrb
mov
jmp
jmp
into
add
or
scas
mov
mov
jmp
sub
pop
aaa
jnp
dec
xchg
divl
adc
stc
les
imul
repz
int
inc
pushf
cli
mov
into
jnp
xor
and
scas
xchg
popa
mov
jae
push
dec
cmpsl
stc
xor
dec
ss
or
xor
hlt
scas
das
sti
xchg
mov
or
scas
jle
add
sub
mov
mov
jg
pop
gs
bndstx
loopne
or
dec
jno
lds
or
les
fisttpll
cld
movsb
cmp
cmp
sbb
sub
push
sub
in
push
stc
or
std
fsub
fdivs
movsb
stos
cmovp
pop
js
roll
cs
jno
pop
mov
inc
sbb
pop
push
je
out
enter
mulb
into
jno
jb
push
mov
mov
rdtsc
enter
pop
push
scas
in
jmp
enter
cmpsl
test
cmc
icebp
cld
imul
dec
xchg
loope
jnp
sub
movl
nop
mov
jmp
mov
mov
insl
jg
loopne
mov
aad
mov
mov
bound
sbb
cs
out
adc
pusha
jp
inc
mov
push
cwtl
sub
or
in
loope
mov
fcoml
fistl
aas
mov
pop
sbb
pop
dec
aam
xchg
fucomp
adc
cwtl
and
push
es
popa
addr16
icebp
std
dec
fwait
sub
aad
dec
dec
inc
imul
sub
push
icebp
pop
xchg
xor
push
lock
cmpl
popf
js
imul
mov
xchg
push
push
call
test
nop
sub
test
rcll
out
xchg
aas
cmpsb
mov
out
mov
mov
sbbb
sub
test
jnp
aaa
mov
xchg
gs
js
inc
bnd
dec
and
mov
fimull
ret
jno
int
fcmovne
in
fistpll
sub
push
incb
xchg
into
mov
shl
inc
add
or
push
insb
fstp
add
and
lods
xor
fcomi
sahf
ss
clc
inc
loop
xor
mov
fwait
sub
aam
das
xchg
or
addr16
stc
or
and
cld
scas
rorb
inc
cmp
xchg
scas
xlat
subb
movsb
imul
enter
adc
jl
movsl
add
mov
cmp
fisttpl
rcrl
jo
xchg
rclb
test
push
sbb
outsl
adc
mov
adc
popa
lea
lret
loop
inc
push
jg
negl
inc
aaa
ficomps
mov
fs
mov
loopne
jmp
roll
push
loope
cmp
nop
aas
sti
push
cltd
ds
jno
jmp
loopne
sbb
mov
fsubl
in
movsb
and
xchg
pushf
xchg
mov
fwait
or
push
jb
aas
or
xchg
push
jnp
stos
mov
or
inc
imul
mov
sbbb
xchg
jmp
cmp
xchg
rclb
iret
daa
sbb
jle
xor
sbb
stos
and
jnp
dec
mov
inc
dec
cmp
xchg
cmpsb
cmpsl
inc
stos
xor
xor
out
push
scas
or
js
stos
pop
push
dec
mov
mov
add
and
pushf
sbb
pop
xchg
into
lea
ret
and
sarb
dec
mov
jbe
mov
pop
or
int
ss
xchg
int
shl
pop
push
xor
cmpsb
pop
data16
fisubrs
shll
sbb
es
mov
xlat
cs
dec
cwtl
adcb
dec
sahf
or
push
pop
les
cltd
gs
das
inc
loope
aas
outsl
cmp
pop
jno
pop
or
mov
sbbb
aas
pop
stos
mov
je
or
jge
dec
inc
enter
push
jg
pop
ror
xor
mov
xchg
sub
push
pop
sub
cmc
mov
push
movsb
xor
cmp
add
or
shl
xchg
fisttpl
fsubrl
popf
in
test
cmp
outsl
jl
jmp
std
xchg
fistpll
incl
int
push
int
adc
gs
pop
subl
ret
adc
pop
out
insb
jae
lock
sbbl
pop
lea
repz
outsl
in
xchg
in
movzwl
mov
mov
or
mov
les
lret
out
les
idivl
pusha
push
push
test
imul
sarb
sbb
add
sub
sbb
push
lahf
cmovb
cmpsb
fcoml
sarb
fwait
ret
int3
out
out
mov
fmuls
inc
mov
aam
add
fwait
adc
shl
xor
test
stos
jle
ret
sub
insb
xor
mov
cmp
cltd
sbb
test
mov
jg
dec
sub
addb
sub
scas
xor
pop
sbb
mov
adc
popf
mov
fisubrl
push
mov
in
out
or
sub
enter
sbb
out
repnz
pop
or
add
xor
lahf
insl
addr16
lcall
push
jno
mov
into
xchg
cmp
int3
cmc
mov
repnz
ja
pop
pop
testb
dec
testl
sti
xchg
imull
jmp
fnstenv
test
repz
push
push
xor
mov
fcom
ret
stos
out
push
mov
pop
mov
jne
pop
sub
mov
xor
cmp
jge
insb
or
stc
roll
ret
sub
nop
inc
out
cli
xchg
and
js
enter
in
xchg
or
pop
sti
lcall
mov
rolb
or
xorl
inc
sub
push
data16
cmp
jnp
lret
lods
jnp
mov
in
lcall
stos
bound
enter
rorl
sub
stc
inc
cld
or
and
setge
and
cmp
sub
test
and
dec
pop
repz
stc
mov
or
dec
rorl
mov
rcl
mov
xchg
pusha
adc
les
leave
insl
jno
sarl
lcall
ret
cli
cmp
das
out
or
ss
xchg
in
pop
xchg
jp
push
jle
or
ljmp
pop
ljmp
jo
jns
push
mov
mov
adc
shr
inc
and
int3
adc
out
int
daa
jl
jg
mov
fwait
sub
in
sbb
popf
add
push
addr16
repnz
out
stos
add
loop
mov
push
jb
add
hlt
outsl
mov
imul
stos
lret
pop
and
lea
enter
push
sbb
cmp
mov
insb
pop
cmpsb
cltd
mov
popa
fidivrl
pop
scas
xor
bnd
lahf
inc
cmp
lahf
stc
mov
dec
adc
sbb
repnz
push
mov
cmc
cld
add
dec
xor
test
mov
lret
call
lret
lods
aas
jge
xor
push
mov
in
mov
inc
mov
dec
jge
dec
sub
inc
xor
jle
push
fstps
or
mov
cltd
push
cmp
insl
xor
lods
sub
jnp
notl
gs
js
jne
sbb
clc
data16
lea
fmulp
jne
or
ss
dec
out
rcr
adc
cmpsb
mov
lea
jmp
dec
push
mov
ljmp
sub
divl
xchg
ljmp
xchg
cmp
mov
jge
lock
hlt
insl
hlt
sub
cmpsl
and
push
arpl
add
std
inc
sbb
mov
es
sbb
out
push
dec
push
pusha
pop
pop
shrb
rclb
outsl
dec
add
mov
fcoml
loop
sub
mov
jge
dec
pushf
out
into
aam
repnz
add
sbb
adc
lods
inc
out
outsb
and
lock
inc
jl
inc
or
rol
sub
mov
adc
lea
push
adc
popa
imull
divb
loope
jmp
cmp
leave
in
pop
push
push
in
adc
aad
std
and
sbb
jecxz
mov
scas
mov
sub
cmovg
pusha
ljmp
push
cmpb
ret
clc
mov
xchg
in
mov
stos
jne
add
xor
je
xchg
das
lret
dec
jb
ja
or
inc
ds
xor
xlat
inc
inc
fiaddl
fsubp
hlt
sbb
inc
shlb
sbb
xchg
mov
cli
je
inc
enter
mov
push
cwtl
cld
and
aaa
sbb
mov
stc
fldenv
jb
lahf
sub
fisubrl
std
inc
imul
push
je
iret
sub
xchg
adc
inc
sbb
stos
mov
les
gs
pop
and
sbb
pusha
gs
inc
xchg
hlt
pusha
mov
xor
ljmp
xchg
sub
out
adc
aad
pusha
cmpsb
orb
or
adc
cmpsl
lock
fstpl
mov
xor
mov
rcrl
pop
in
out
nop
jne
push
dec
inc
push
push
mov
adc
cwtl
roll
pusha
and
imul
or
int
shr
pop
mov
dec
test
and
loop
lahf
and
push
test
adc
jne
js
and
jbe
sub
je,pt
cli
out
mov
dec
addl
popa
xchg
push
mov
cmp
xor
jo
pminub
mov
outsb
inc
enter
repz
mov
ret
push
adc
mov
sbb
fs
push
insb
imulb
adc
nop
jge
fdivrs
cmp
xchg
xor
jge
add
or
out
cmp
clc
leave
shll
lods
jle
or
dec
mov
and
push
leave
sahf
stos
pushf
repnz
dec
clc
xlat
push
xchg
adc
loopne
mov
cld
dec
stc
pushf
insl
testl
pop
imulb
jns
int3
sub
stc
sti
cmp
push
cmp
pop
lods
movsb
push
js
inc
lods
sbb
loope
adc
scas
mov
ret
or
xchg
ror
mov
xchg
mov
js
adc
lcall
push
dec
test
or
into
xchg
inc
xor
push
adc
xor
and
xor
data16
jo
into
jno
clc
push
jns
push
sbb
fnstenv
inc
out
movsl
bound
mov
cmp
mov
fbld
outsb
fidivrl
int
imul
jle
cmp
in
sub
jle
sbb
lret
jno
out
mov
fdivs
sbb
push
std
add
adc
ret
jge
lahf
popf
sub
repnz
jnp
mov
or
push
cmp
call
or
and
out
out
xor
pop
and
out
call
sub
decl
lcall
pop
int
in
cmpsb
sbb
jo
scas
std
sub
inc
dec
fnstcw
mov
pop
adc
je
fsubl
in
inc
pop
jmp
inc
ficomps
push
sub
pop
inc
cmc
jo
movsb
mov
jae
push
cwtl
cmp
xadd
cmp
xchg
push
rcll
subl
cld
and
lods
pushf
data16
test
pop
lret
scas
add
sbb
xor
xlat
xor
cmc
popf
out
or
lods
lahf
movsl
dec
mov
cmp
out
fs
lods
push
cld
movsl
mov
stos
cmpl
push
sti
aam
jg
aas
icebp
sbb
push
and
ret
negb
shll
aad
aas
xor
inc
rorl
push
std
xor
jo
push
mov
lods
cmp
mov
sbb
push
into
test
pop
jnp
fdivp
mov
add
lret
pop
test
std
push
andl
pop
sub
stos
mov
clc
fidivl
xor
push
push
push
mov
fwait
subl
xchg
mov
dec
movsl
mov
push
clc
lods
sahf
ror
dec
fmull
inc
sub
lock
test
scas
insl
test
push
mov
fldz
fildll
xor
sub
lods
and
pop
and
xchg
ds
pop
xchg
out
adc
xor
push
or
jl
int3
xor
xchg
mov
test
inc
nop
lret
pop
add
fcoms
inc
popf
fisttpl
jae
les
clc
push
mov
fadd
push
or
push
fstpl
loop
pushf
out
das
test
xor
gs
pop
pop
pop
sbb
icebp
and
ffree
xlat
lds
lock
test
movsb
mov
mov
hlt
in
addr16
mov
jmp
mov
cwtl
xchg
loope
and
adc
js
scas
push
mov
push
test
fidivrl
cmp
mov
cmc
andl
jg
dec
and
enter
dec
into
lods
aas
mov
movsb
sub
xor
sub
jbe
stos
adc
and
pusha
iret
lods
xlat
mov
stos
lahf
and
iret
imul
out
cmp
mov
mov
les
adc
add
cltd
jb
aas
jno
das
push
dec
clc
cmp
xchg
aad
leave
ja
stos
mull
add
jns
stos
lcall
mov
rcll
push
fsubrs
and
lds
cmp
lcall
pop
mov
mov
mov
push
fisubrl
mov
js
fisubrs
arpl
test
jb
dec
mov
shl
add
dec
scas
xchg
and
mov
xor
cmp
and
mov
das
add
adc
push
mov
jnp
sub
loope
xchg
pop
cmp
mov
jl
push
bound
stos
and
mov
xchg
movsb
je
add
or
imul
lret
out
inc
js
xchg
sahf
out
shll
adc
leave
pop
sub
pusha
push
mov
mov
imul
inc
or
sub
dec
les
pop
jp
fs
aas
jb
out
stc
movsb
add
lock
cmp
in
into
enter
ja
andl
in
lds
ljmp
aas
push
add
leave
and
leave
sub
dec
and
in
cli
or
pop
cmp
icebp
push
movsb
jb
lahf
call
sahf
loope
sub
and
xor
push
or
jbe
iret
cmpsl
aas
setne
mov
mov
sub
sbb
mov
stos
sbbl
inc
lods
cmp
lock
into
adc
mov
lods
dec
jo
push
pop
repz
cmp
or
fucomp
aaa
xchg
dec
jo
xor
stc
cmp
inc
xor
popf
hlt
jecxz
pop
es
push
push
inc
mov
mov
cmpsb
out
xor
addl
rolb
es
rcrb
and
add
adc
bound
movsl
xor
ljmp
pushf
arpl
push
lret
inc
mov
sub
and
bswap
xor
shlb
inc
mov
adc
sub
inc
inc
fxch
and
add
repz
ja
jae
sbb
inc
ss
loopne
test
dec
aaa
jnp
lcall
les
scas
pop
dec
add
insb
mov
cltd
mov
aaa
inc
cmpsb
js
mov
mov
inc
xlat
mov
mov
sub
inc
push
mov
cmpsl
adcb
or
cmp
subb
xor
inc
adc
pop
lret
shr
bound
cmp
icebp
fs
fwait
mov
int
inc
xchg
pop
xchg
pop
jno
pop
lcall
je
jb
jmp
add
pop
xor
jmp
jl
hlt
mov
mov
arpl
js
loop
mov
push
cld
adc
imul
cmp
aas
jmp
jnp
push
sbb
inc
pop
out
sub
cmp
cmpsb
bound
loopne
push
in
cmp
cmpsb
daa
sbb
push
jge
iret
mov
lock
mov
push
sub
rcrl
xchg
scas
jae
xchg
in
insl
mov
das
shll
pop
daa
cwtl
rcrl
addr16
and
loopne
and
jns
mov
xchg
adc
ljmp
int3
shrl
cli
out
push
addr16
lds
sub
popf
jb
ja
xor
adc
jmp
out
push
add
dec
pop
push
mov
push
xor
cmc
stc
test
inc
sbb
loop
insl
mov
fld
mov
adc
sub
xlat
pop
dec
pop
jecxz
xchg
pop
mov
stc
and
lds
lds
mov
clc
in
jne
push
fs
mov
je
xor
mov
jns
jns
xchg
mov
mov
loope
fnstcw
mov
pop
and
dec
dec
enter
add
or
or
arpl
cld
scas
push
in
push
sbb
inc
mov
aad
int3
sar
mov
aad
xor
mov
dec
cmpsb
fdivl
sbb
adc
sub
pop
repnz
or
adc
arpl
js
cmp
cmpb
cmp
pop
fisttpll
mov
fcmovnbe
ja
push
inc
and
or
lock
int3
aas
cmp
test
mov
insb
lock
cmp
inc
or
mov
inc
push
sbb
fldt
add
imul
popf
xorb
sbb
jmp
cld
xor
dec
shll
aaa
inc
lods
mov
fidivl
add
jae
dec
cmpsb
push
enter
rcll
push
loope
movsb
lret
loopne
gs
popf
scas
loop
jmp
data16
mov
mov
push
pop
sbb
jecxz
imul
mov
or
int3
jo
push
jg
cs
dec
lcall
lret
jmp
cmc
sbb
xor
add
push
aad
inc
in
in
imul
add
daa
jmp
cmpsl
push
in
mov
push
lock
inc
int
push
ja
xor
shr
cwtl
rcrb
loopne
dec
sahf
fmulp
dec
jg
mov
cmp
push
or
sti
push
add
jp
ret
clc
sub
shlb
lods
push
push
in
jmp
push
mov
xor
loopne
mov
lret
and
jmp
sbb
mov
ljmp
adc
add
add
mov
jns
cmpsl
jns
fs
repnz
jo
es
aad
jbe
sbb
aam
lret
js
pop
xchg
shrb
and
and
mov
mov
loope
cmpsl
cmp
dec
out
add
sahf
pop
or
test
out
es
jg
loopne
orb
push
and
pop
pusha
pop
push
inc
in
pop
sub
mov
dec
cmp
sti
dec
fistps
mov
ja,pt
repnz
incl
xor
ds
rclb
cmp
and
cmc
js
loop
ds
loop
test
xor
je
jge
dec
inc
outsb
add
out
stc
sarl
push
add
aam
outsl
cmc
push
mov
jg
jl
add
pop
pop
jmp
or
or
jmp
push
xchg
loopne
and
cmp
sahf
mov
sbbb
mov
mov
mov
flds
cmp
sbb
mov
test
and
sbb
popf
lock
fcomi
pop
shlb
pop
bound
xor
pop
repnz
xlat
inc
xor
rolb
mov
lea
pop
pop
cs
stc
push
fbstp
fs
sub
stos
pop
test
mov
mov
adc
popa
outsb
imul
jl
gs
mov
push
repz
lret
imul
test
lret
cs
das
mov
call
mov
int3
call
shll
fs
mov
aad
push
sub
jnp
and
imul
jmp
inc
xchg
test
inc
jp
mov
add
in
jl
or
imul
gs
push
sahf
lock
in
dec
push
pop
movl
jmp
pushf
fwait
adc
fstpt
loope
and
movsl
loope
lods
sarl
clc
lret
and
cli
pop
negl
addb
mov
sbb
push
cwtl
clc
pop
adc
sbbb
sbb
push
xchg
sub
xchg
and
fs
xchg
stos
loope
imul
faddl
or
sbb
fistl
les
add
test
dec
negb
mov
xchg
leave
stos
loop
insb
inc
and
push
rolb
push
jmp
xor
aas
mov
mov
fisubrl
lret
test
sti
jnp
insb
fs
jl
xchg
rorb
pushf
bound
jb
and
and
cld
cmpl
ljmp
jl
fstl
inc
jbe
sbb
mov
lcall
stos
cmp
out
xchg
jae
cmpsb
outsb
test
cmp
in
in
xor
add
insb
ror
jae
scas
stos
adc
in
adc
mov
lret
mov
lret
movsl
dec
pop
jbe,pt
mov
mov
inc
std
mov
cltd
mov
or
mov
lret
push
pop
mov
pop
pop
adc
and
mov
add
xor
sbb
imul
lret
inc
scas
inc
inc
mov
sub
push
repnz
aam
pop
adc
cwtl
xor
xchg
addb
or
fcmovbe
add
imul
pop
mov
dec
leave
xchg
cmp
dec
repnz
xor
pusha
mov
popa
mov
push
cld
pop
xor
ja
ljmp
jno
and
nop
mov
mov
insb
fwait
outsb
hlt
lods
insl
sbb
ret
hlt
sbb
xlat
or
push
lret
adc
mov
lahf
xor
or
add
jno
sub
fnstcw
fistpll
xorb
ds
push
pop
enter
in
dec
pop
sbb
clc
dec
dec
sbb
xchg
mov
fldl
repz
rclb
shl
dec
push
xchg
out
push
jns
or
push
fadd
xchg
bound
daa
aaa
mov
out
inc
mov
pop
or
test
fisubrs
mov
hlt
jmp
arpl
std
shl
cmp
scas
mov
loop
arpl
fs
movsl
cmpsl
je
inc
sbb
mov
ficomps
enter
or
and
adc
scas
or
daa
call
fildll
sbb
mov
mov
cmp
cmc
push
fstpl
repz
jnp
xchg
aaa
add
or
xor
loop
addb
lds
ror
sub
adc
mov
fadds
and
mov
rcrb
outsb
sub
sbb
loope
out
pop
xchg
and
outsl
pop
push
ds
pop
fnsave
fildl
sahf
stos
sub
add
inc
pop
fcmovu
jae
sbb
pop
pop
ds
sub
mov
cmp
pop
aad
stc
in
xor
jno
loope
sub
cmp
shl
lds
data16
xlat
movsl
or
mov
sub
dec
cmc
lcall
rcl
sub
in
push
adc
or
loopne
mov
lock
pop
mov
jbe
lods
mov
mov
jecxz
out
pop
adc
outsb
decb
mov
sbb
mov
mov
pop
movq
inc
pop
push
sub
push
pop
pop
xor
fistpll
xor
fdivrl
cmc
push
add
xor
push
arpl
aad
dec
add
aam
jnp
popa
in
ficoml
mov
jb
ret
loopne
mov
lret
xor
inc
test
cmp
mov
jns
dec
repnz
les
and
loopne
cs
sub
jmp
inc
test
dec
stc
pop
iret
in
ja
or
pop
mov
sbb
test
lahf
clc
cmc
pop
mov
std
xchg
push
cmp
rcl
loopne
lret
mov
xchg
sbb
push
out
repz
sub
out
clc
sbb
dec
test
stc
divl
cmpsl
out
push
clc
cmp
shl
and
adc
jbe
das
call
lds
jl
pop
push
ror
shl
pop
cs
push
bound
mov
hlt
lcall
push
adc
fnstsw
sahf
cs
mov
mov
push
and
mov
xchg
inc
shrl
mov
mov
xchg
inc
out
or
js
pop
sub
scas
out
mov
in
push
xchg
rol
movsb
jnp
dec
mov
rclb
lods
mov
aam
data16
add
sub
adc
std
lahf
add
lcall
fistpl
call
daa
nop
jbe
inc
imul
or
xlat
xorb
jns
dec
push
cmp
and
popa
mov
iret
fisubs
or
mov
movsb
cmp
xchg
filds
jns
sub
rcr
or
out
add
add
pop
jp
xchg
bound
jbe
inc
cli
pop
mov
gs
loope
mov
xchg
clc
xchg
pop
in
mov
movsl
cltd
in
int3
cmpsl
imul
xchg
jmp
in
sub
fadd
or
lods
add
sahf
ljmp
lods
jb
and
inc
jecxz
xor
xor
jae
int
sbb
dec
xlat
cmp
cmp
mov
lea
mov
testb
add
imul
or
xchg
movsl
xor
pop
repnz
mov
add
arpl
push
daa
xchg
mov
pop
or
je
add
mov
xlat
test
scas
sbb
cmc
add
push
add
in
jl
mov
cmp
or
dec
sbb
out
cltd
jno
lahf
dec
dec
sbb
xlat
cmpb
add
test
and
and
movsb
jp
cmpsl
mov
jo
out
int
repz
pop
cs
mov
scas
notl
mov
mov
loope
pop
adc
dec
pusha
cmp
adc
adc
xor
ret
cli
mov
pop
pop
inc
fsubrs
mov
dec
mov
stc
bound
dec
push
add
dec
mov
fcmovnb
scas
shlb
pop
fildl
sbb
adc
add
pop
sub
push
sbb
cmp
das
mov
xor
fmul
jno
lret
stos
push
jo
and
out
rclb
lcall
lock
adc
xchg
in
stos
add
jae
sub
mov
int
sub
lea
hlt
sbb
lock
frstor
jbe
dec
jbe
cmp
es
push
ss
mov
push
das
adc
add
lret
mov
sbb
jno
dec
sub
push
pushw
xchg
mov
rol
fisubrl
in
dec
push
dec
push
sub
daa
pop
mov
int3
inc
xchg
or
inc
jne
cmpsb
out
dec
jbe
out
cmp
mov
hlt
cmc
jp
add
insb
pop
adcb
mov
pop
or
push
dec
mov
fidivrs
mov
adc
clc
push
iret
xor
out
xchg
stos
leave
imul
mov
fisttps
jnp
out
cmpb
or
push
out
jge
leave
and
pop
lea
out
test
int
cltd
ret
in
mov
outsl
pop
or
xlat
cli
call
sbb
fs
aam
arpl
lds
pop
lret
pop
aaa
sbbl
mov
scas
pop
add
sti
loope
add
jp
loop
adc
lea
sbb
dec
ret
push
clc
gs
mov
jp
fstl
loop
push
dec
xchg
adc
pop
mov
inc
xchg
cli
add
test
inc
xor
jne
in
je
ret
in
mov
pushf
cltd
cmp
js
push
dec
lea
or
into
adc
pop
pop
and
jo
pop
stos
loope
mov
push
pop
testl
sub
outsl
xor
mov
adc
cmpl
mov
push
xorb
pop
cli
add
inc
std
sbb
lock
gs
xchg
gs
dec
gs
push
and
lcall
imul
mov
shll
dec
gs
repnz
das
je
in
push
push
dec
add
fnstsw
stc
mov
cmp
in
xor
dec
pop
insl
mov
fwait
ror
xchg
in
or
cmpsl
fwait
pop
es
out
xchg
movq
pop
sub
cmp
mov
adc
inc
cmp
cwtl
xor
dec
push
lret
mov
enter
aaa
ljmp
lods
push
inc
dec
jmp
test
mov
aam
xor
mov
pop
int3
bound
into
and
scas
aaa
pop
xlat
mov
mov
cli
hlt
adc
test
adc
add
xchg
add
nop
imul
out
addr16
int
mov
mov
movsl
movl
push
mov
or
adc
cmpl
test
clc
lahf
adc
pushf
add
adc
popa
inc
mov
std
and
push
sub
mov
push
dec
stos
adc
xchg
and
jne
sti
mov
mov
mov
or
aam
ficompl
pop
jl
cmp
mov
ljmp
add
sub
ret
out
lea
pop
mov
mov
sbb
hlt
and
pop
dec
sarb
cltd
adc
pop
pushf
movsb
sub
sub
add
imul
neg
roll
insb
jns
outsl
push
pop
inc
and
xchg
dec
jne
sbb
add
mov
shr
cmova
stos
xchg
inc
in
int
cs
and
lret
xorb
data16
sbb
jmp
pop
ret
or
or
xchg
mov
adc
lcall
pop
ds
mov
push
movsl
pop
pop
push
jae
jge
clc
mov
push
and
jl
ret
pop
mov
stos
pop
insb
lods
test
xor
cmp
insb
push
rolb
mov
jo
push
push
test
xlat
mov
pop
shrl
fs
mov
mov
xor
imul
mov
lods
jecxz
fwait
jg
mov
loop,pn
test
mov
call
mov
inc
and
adc
outsl
inc
add
popf
mov
jmp
insb
es
inc
add
jecxz
paddw
lods
pop
and
rcl
cmp
loope
cltd
popf
jnp
popa
hlt
out
sub
mov
xchg
xchg
outsl
ds
inc
repz
or
mov
jne
xchg
leave
pop
adc
mov
adc
sub
loop
scas
and
pop
ja
gs
inc
add
mov
iret
and
mov
mov
sub
sti
stos
push
sub
jp
mov
test
in
stc
insl
lret
mov
cmp
fwait
rclb
in
iret
cmpsb
and
clc
fstpt
call
jle
adc
popa
mov
push
xchg
lret
add
pop
addr16
cmp
mov
pusha
daa
rcll
ljmp
sub
jbe
mov
sbb
loopne
inc
sbb
mov
cltd
sub
rcll
aad
xor
dec
sti
loopne
push
aad
daa
pop
lret
mov
cmpsl
pop
sti
jnp
fisttpll
jne
movl
or
jmp
cs
xchg
push
repnz
jg
xchg
rorl
mov
cli
pop
incl
loope
xor
push
or
mov
fildll
repnz
je
mov
adc
dec
push
jns,pn
lret
push
rorl
add
dec
jo
lods
push
ljmp
cltd
vpmulld
xor
pop
pushf
insl
push
pop
movl
mov
imul
sarl
int
cld
call
cmc
ret
inc
jl
in
push
inc
cmp
aam
sub
popf
xchg
ja
rol
adc
scas
sub
pop
stos
cli
sub
xor
icebp
jg
decb
subl
or
push
push
shlb
push
daa
xchg
and
outsl
and
fdivrl
pop
push
rorl
in
fdivl
loop
insb
and
mov
in
std
dec
iret
xchg
sbb
loope
lcall
fildll
aaa
jmp
jmp
shlb
inc
stc
inc
inc
mov
cwtl
aam
les
xchg
lret
cmp
jle
pop
mov
jne
pop
push
sub
lock
scas
repnz
addr16
mov
fmull
enter
mov
decl
rol
stos
jmp
mov
mov
int3
jg
aam
shll
fldcw
dec
adc
fimuls
mov
mov
push
aas
inc
push
in
mov
or
mov
and
mov
movsb
aad
xor
xchg
lret
push
xchg
addr16
sub
sub
xchg
out
sarl
ja
stc
fs
push
test
jge
mov
lock
pop
mov
call
das
pushf
add
hlt
fwait
adc
repz
test
sti
dec
jmp
jecxz
subb
pop
mov
cmp
test
stc
cmpsl
sbb
xchg
sbb
imul
sbb
xorb
clc
push
test
jmp
sbb
ret
add
sub
inc
xor
mov
cld
ret
cmc
shll
sbb
adc
or
sbb
orl
sub
mov
bound
cmp
mov
js
rcrl
jge
cltd
xor
jns
mov
rcll
fcoms
adc
repnz
sub
movsl
or
push
mov
data16
sbb
pop
mov
je
mov
inc
cs
popa
push
and
data16
sti
rcl
pop
ljmp
mov
inc
sbb
test
jo
jae
and
loope
add
scas
outsb
call
cmp
in
sbb
outsl
fildll
dec
sarb
xor
insb
push
pusha
dec
imul
cmp
fnstcw
jle
mov
push
or
nop
lret
pop
cmovg
sub
es
je
fistps
mov
loope
imul
xchg
ret
push
icebp
push
into
cmpsl
inc
mov
dec
loop
sub
xchg
dec
test
or
and
mov
fwait
fwait
imul
fwait
jg
sbb
fcomp
pop
adc
cmpb
lock
shlb
loop
mov
fdivl
movsl
rcrl
and
xor
sub
pushf
jl
xchg
jnp
mov
jecxz
mov
out
addl
mov
lahf
add
pop
int
add
pop
mov
es
in
out
repnz
jge
sub
cmpsl
sbb
adc
cs
ficompl
and
outsb
cmpsb
dec
jecxz
jnp
cmp
jp
xchg
jno
sti
aas
out
ss
add
mov
ljmp
stos
testb
mov
cli
pop
mov
add
enter
jno
sarb
jne
pushf
or
test
enter
lea
mov
in
stc
test
fldl
xchg
mov
in
arpl
push
jae
sbb
incl
pop
mov
cs
outsl
mov
jcxz
fmuls
ficomps
add
es
mov
xlat
push
push
jae
imul
mov
cld
enter
pop
repnz
lods
jo
ficoms
xor
and
mov
jmp
cmpb
and
jno
stos
mov
jno
cmc
out
in
mov
push
loop
pusha
notb
xchg
dec
lods
testb
push
jae
mov
shrl
pop
mov
push
cwtl
cmp
in
fistl
mov
or
sub
repnz
inc
xor
dec
xchg
inc
and
or
xchg
scas
in
jmp
pushf
xor
xchg
imul
and
pop
in
xlat
and
fcompl
mov
popf
orl
ret
ret
in
fstps
adc
mov
sbb
fmul
xor
int
dec
fs
add
xchg
add
cltd
enter
movsb
sbb
add
jae
stos
sub
data16
ficoms
xchg
jle
insl
xor
mov
insb
jmp
push
xor
repnz
cs
mov
out
and
and
popf
popf
lds
dec
xor
pushf
push
add
sub
dec
shld
mov
cwtl
call
out
jae
jae
lcall
les
nop
testl
mov
push
xchg
mov
or
mov
pop
cld
out
adc
mull
in
shlb
stos
sub
addb
push
push
pop
mov
xchg
inc
out
repz
push
xchg
cmpsb
mov
cmpsb
fistpll
mov
or
hlt
pop
lret
notl
cwtl
mov
out
sbb
push
lds
ret
sbb
add
stc
inc
add
add
cmp
out
xchg
mov
pop
mov
pop
ja
push
inc
pop
out
push
xchg
scas
mov
sub
leave
xlat
and
mov
or
int
popa
and
pop
ja
and
pop
int
and
stc
scas
sahf
test
pop
cmpsl
add
xor
daa
dec
jo
xchg
outsl
cmp
int
shll
adc
aas
xchg
fs
fcoml
sub
shlb
jg
mov
inc
shld
test
lret
shrb
or
adc
adc
inc
sub
jge
stos
movsb
cmp
push
sub
add
xchg
clc
add
jg
sub
mov
jecxz
enter
lcall
sub
push
shll
mov
sub
mov
daa
shl
ljmp
mov
adc
jle
rolb
lods
add
sbb
jmp
xor
pop
sbb
inc
dec
adcl
out
nop
int
inc
movsb
xor
cli
dec
cs
sub
aaa
out
sub
mov
test
sub
fsubrs
sbb
push
rolb
cmp
and
xorb
jae
pop
push
pop
insl
popf
cmp
dec
xchg
jno
aas
fbstp
sub
sarl
push
pop
jmp
cwtl
aas
push
cmp
or
mov
dec
popf
in
pop
cmp
xor
inc
ret
sbb
cli
lods
add
sub
js
pop
xchg
test
xorl
jb
mov
cltd
jns
xchg
divl
loope
add
dec
shrb
divb
pop
icebp
test
dec
ret
and
mov
lea
ss
negb
xor
arpl
dec
movsl
xor
mov
pop
pop
jg
sbb
pop
jg
jle
lret
sub
iret
mov
dec
hlt
jmp
and
pop
cltd
sahf
adc
sbbl
inc
and
mov
lods
inc
jle
js
mov
inc
dec
xor
mov
cs
mov
mov
inc
mov
mov
mov
addr16
movsl
aaa
rcrb
mov
orb
bswap
inc
bound
add
test
pushf
cmpsb
and
test
xor
ljmp
and
sub
roll
leave
and
pop
mov
push
xchg
test
out
mov
push
inc
push
dec
daa
push
imul
jp
push
mov
test
push
repnz
fiaddl
stc
loop
or
inc
pop
dec
adc
xlat
mov
push
pop
and
dec
ss
repnz
mov
in
test
cmp
repz
mov
inc
sbb
sub
fdivl
popa
in
pop
mov
lods
cld
pusha
lods
pop
in
out
ret
xchg
dec
dec
je
shl
scas
adc
imul
popf
cmp
in
les
sub
test
popa
stos
out
xor
xor
mov
mov
sbb
xchg
pop
and
gs
imul
jae
mov
sbb
jne
loop
jl
lret
pop
push
shlb
imull
pop
mov
push
push
jmp
jmp
lahf
popf
dec
jp
dec
mov
clc
ds
mov
mov
loope
lods
mov
and
out
loopne
fcompl
dec
sub
mov
ss
jne
fisubl
mov
not
xchg
push
into
cli
mov
sbb
mov
fidivrl
xchg
lret
std
sbb
test
std
add
mov
xchg
dec
mov
and
call
lea
aaa
inc
ret
iret
addl
dec
sub
mov
les
js
mov
iret
xor
mov
iret
daa
mov
popa
filds
sub
cltd
fidivs
xlat
jne
out
add
mov
cmp
cmp
enter
mov
or
dec
out
or
leave
inc
xchg
mov
cmp
xchg
rorl
daa
jne
out
pop
jnp
and
shrb
fisttps
es
imul
addr16
decb
not
icebp
loope
cmc
testb
arpl
cli
adc
cmp
insl
test
jl
gs
and
dec
push
cmpsb
into
clc
int3
sub
xor
jns
add
lods
call
in
cmpsl
push
ret
stos
adc
cmpsl
cmc
xchg
out
cmp
push
maskmovq
cmpsb
rorb
sbb
dec
push
sub
iret
jmp
dec
sahf
int
and
pop
mov
xchg
sarb
aam
shlb
xor
sahf
iret
pusha
inc
xchg
push
xor
das
cwtl
push
mov
das
xlat
or
sub
in
xchg
loop
mov
in
nop
sbb
pop
ja
mov
mov
aaa
mov
popa
cld
pop
push
loopne
daa
icebp
xchg
add
push
pop
ficoms
lahf
shl
sbb
push
dec
mov
cmp
push
adc
shll
lcall
test
icebp
cld
ret
inc
into
lea
bound
pop
shll
inc
shlb
push
out
fbld
int3
pop
jle
out
insl
pop
inc
in
and
adc
fdivrs
pop
es
fucomp
adc
cmp
cmp
xlat
cli
das
push
jecxz
cmpsl
imul
stos
sbb
rcrb
push
lret
adc
mov
dec
js
jmp
jmp
adc
mov
clc
jb
xchg
lods
jo
scas
add
inc
or
loopne
cltd
add
bound
addl
nop
gs
mov
into
clc
sbb
mov
cmp
sub
dec
and
and
pop
aam
fldenv
lods
mov
inc
xchg
cmp
pop
sar
sbb
mov
adc
lods
aaa
test
mov
jl
or
push
aas
xor
mov
mov
jecxz
push
fnstsw
bnd
cld
sahf
mov
pop
mov
addl
stc
or
pop
inc
pop
jg
xor
mov
mov
ss
pushf
jmp
test
jb
test
cld
fldenv
not
mov
jp
xchg
lock
call
aad
ljmp
ficoms
std
sub
repnz
outsb
lahf
lret
xor
nop
adc
jg
sub
notl
loop
jecxz
scas
pop
mov
push
cmc
shll
enter
mov
arpl
jae
mov
jae
out
les
sub
daa
adcb
adc
dec
push
popf
mov
stos
fldenv
ds
fsts
add
sbb
fwait
sarl
adc
out
cmp
mov
dec
push
xor
adc
inc
or
mov
call
pop
pop
pop
outsb
test
fst
repnz
xchg
es
fs
jge
adc
fildll
lea
movsl
xchg
sub
mov
roll
pop
fisttps
inc
test
call
push
fnstenv
or
lahf
outsb
addl
aaa
std
ficoms
in
xor
pop
inc
and
mov
pop
mov
cmpb
sarb
lock
aaa
adc
mov
jl,pn
jb
std
jae
mov
add
shll
sub
cmc
cmp
insb
sub
aam
sub
insl
dec
pop
xchg
in
mov
gs
in
andl
movsl
mull
imul
push
and
and
pop
test
ljmp
rcrb
sahf
neg
cmp
leave
inc
das
add
mov
push
aaa
inc
ja
mov
repnz
cmpsb
stos
push
push
mov
pop
fs
push
je
sahf
loopne
adc
ds
das
addr16
sbb
clc
lcall
insl
push
adc
pop
aas
add
sbb
sub
pop
jecxz
test
mov
rcll
insb
addl
int3
int
int3
clc
loopne
hlt
mov
push
inc
mov
lcall
mov
aam
ja
jecxz
add
sub
lret
dec
sbb
and
fs
mov
bound
adc
pop
cmc
and
mov
mov
mov
subb
sub
xchg
int3
push
push
les
ljmp
mov
mov
movsl
add
jecxz
jp
xchg
cmp
jle
pop
les
outsb
stos
daa
push
out
and
sbb
enter
fmul
in
xor
bnd
push
push
jmp
xor
push
mov
cmp
iret
push
mov
fcomps
jae
push
cli
outsl
lret
xchg
sbb
cmp
test
ljmp
or
xchg
xchg
or
icebp
js
bnd
test
insb
je
imul
repz
cmp
lret
test
jp
jbe
test
jecxz
aas
cmc
mov
inc
xchg
jmp
mov
jbe
aam
inc
push
sbb
incb
pushf
aaa
cmp
sarl
adc
mov
pop
in
stos
out
repz
lea
ss
movsl
loope
push
test
fldcw
repz
push
cmpl
ja
xor
loop
inc
insb
cmc
bound
int3
cmpsl
std
mov
aaa
cmpsl
jbe
jmp
push
not
jle
int3
and
inc
cwtl
cmpsb
and
and
in
adc
inc
in
je
xchg
cli
cmpsl
fistpll
cmpsb
dec
test
or
xchg
fistpl
pop
lcall
mov
cmc
mov
jecxz
outsb
cwtl
xchg
pop
push
js
test
in
icebp
fmul
inc
fwait
lods
xchg
pop
daa
outsb
ss
push
pop
stos
imul
mov
mov
dec
xor
mov
dec
sbb
sbb
push
daa
or
mov
mov
cmpsl
xor
xchg
mov
add
fcoml
sbb
test
outsl
aam
sahf
xchg
insb
sub
jnp
cmc
sub
movsb
xor
ss
mov
xor
push
addl
sti
or
sbb
sbb
push
in
mov
and
nop
mov
aas
inc
adc
xchg
addl
gs
in
fstp
dec
shr
cli
add
shr
mov
xchg
sbb
or
cmpsl
cmp
lret
mov
fsubrs
dec
das
xchg
xchg
cmp
stc
jge
xchg
xchg
adc
out
adc
dec
dec
cmc
mov
cli
das
pop
jp
inc
popa
pop
sbb
out
lahf
in
std
push
fisttpl
push
dec
and
jl
movsb
cli
movb
pop
push
mov
xor
out
inc
rcrl
dec
ret
sbb
fidivrs
cmp
and
into
sub
js
pop
into
mov
mov
iret
pop
test
fnstsw
push
jns
xchg
xchg
lods
jg
outsb
cmp
sub
hlt
test
arpl
mov
scas
incl
push
jae
int3
inc
dec
xchg
outsl
movsl
ficoms
fbstp
mov
xchg
ret
movsl
insb
into
ljmp
adc
dec
xchg
dec
mov
mov
rcl
into
ds
mov
daa
xchg
xor
cmp
xlat
jbe
decb
xor
aam
inc
sbb
inc
dec
pusha
jbe
dec
jp
sbbl
xchg
leave
mov
or
jg
lods
stc
and
mov
and
adc
mov
pusha
mov
jo
aas
pop
ret
adc
testb
cli
inc
gs
shll
mov
sbb
out
and
or
lea
xor
lea
pushf
xchg
push
icebp
inc
mov
adc
jg
out
daa
push
fs
xlat
pusha
or
cmp
add
dec
lds
bound
sub
and
mov
scas
bound
daa
xor
or
and
xchg
mov
lds
pop
lcall
sbb
adc
mov
inc
insl
sbb
repz
cmp
jg
cmpsb
shl
or
cmp
sbb
jmp
lods
sbb
dec
rol
dec
sahf
mov
mov
push
out
mov
or
out
cmp
insb
psubb
and
lcall
es
and
inc
testl
insl
idivb
pop
stc
jno
ja
sbb
stos
inc
int
push
mov
push
jecxz
fistl
sti
sub
movsl
out
mov
cmp
jnp
jo
scas
das
push
add
inc
mov
xchg
sbb
push
cmp
ficoml
ljmp
add
or
add
jbe
or
int3
stc
and
fucomp
xor
clc
jo
push
out
add
cwtl
push
xchg
dec
into
add
mov
cmc
lods
xchg
sub
shll
lcall
mov
ss
mov
pushf
inc
lret
push
add
fmull
mov
hlt
call
cs
js
hlt
mov
scas
cmpsl
jle
movl
lret
out
pop
pusha
mov
push
shl
and
imul
jo
aaa
jb
and
jp
push
fs
xchg
jnp
rorb
push
mov
je
mov
push
mov
sahf
sbb
pop
cmpsl
inc
insl
and
push
mov
add
or
pusha
jecxz
dec
mov
inc
iret
repz
mov
lcall
or
es
or
adc
ret
repz
popf
sti
cmc
xor
or
jae,pt
sahf
int
or
rol
push
dec
mov
arpl
movsl
jns
lcall
imul
fisttpll
imul
popa
out
push
test
push
jno
loop
inc
movsl
mov
mov
insb
data16
imul
imull
lds
shlb
stos
stos
fdivrp
stos
jnp
push
add
add
inc
js
fsubrs
insl
adc
cmp
aaa
fcompl
lret
std
mov
sub
gs
pop
add
add
lret
jmp
out
adc
nop
pop
inc
ss
cmp
and
add
imul
jno
inc
in
pop
xchg
stos
fisubl
adc
ss
pop
cli
mov
sub
dec
sarl
shrl
idivl
int
ja
repnz
xorl
fstpt
sti
dec
jns
xchg
inc
sub
sub
out
scas
fwait
mov
ret
pop
mov
jmp
jle
lahf
sbb
dec
jae
pop
xor
aad
cli
xchg
push
rclb
gs
push
mov
pusha
mov
mov
int
jo
aaa
popf
fs
jmp
sub
outsb
adc
repnz
dec
mov
ss
aad
inc
dec
lret
pop
jle
xchg
pusha
out
shll
xor
lahf
mov
std
inc
xchg
cmp
push
dec
mov
hlt
scas
or
ljmp
mov
sub
lods
fisttpl
cmc
ljmp
aas
push
xor
psubd
push
pop
rolb
fldcw
xor
push
jno
mov
dec
mulb
sub
mov
jb
imul
lods
test
fbld
inc
and
or
push
sbb
mov
mov
cltd
jbe
adc
ret
xor
int
lods
sbb
sbb
mov
jne
mov
mov
stos
jbe
inc
dec
incb
add
xchg
xlat
cwtl
pop
adc
mov
das
sahf
pop
xlat
xchg
fwait
aaa
sbb
scas
jmp
and
pop
add
dec
mov
or
sbb
and
mov
ljmp
mov
mov
fldl
xchg
xchg
mov
jecxz
xlat
std
rolb
xor
lahf
fsts
ficoms
inc
jno
pop
sahf
jge
outsl
lods
pop
testb
dec
dec
in
sub
push
std
mov
cltd
movsl
jp
mov
imul
inc
in
ds
xor
push
test
pop
mov
out
mov
fs
pop
and
push
or
aaa
adc
inc
pop
pushf
jp
popl
push
sar
addr16
rolb
lahf
mov
mov
lret
xchg
clc
jb
mov
xchg
shlb
sub
mov
in
mov
rorl
pop
cli
xor
xor
out
xor
sub
inc
scas
fsubl
dec
push
pusha
into
scas
cmp
mov
xor
jo
dec
in
xchg
jae
sahf
pop
fadd
mov
push
cmp
dec
test
xorl
sbb
jno
and
test
orb
pusha
jns
lea
cmp
cmpsb
je
push
pop
fxch
sbb
push
and
mov
lret
mov
adc
outsl
cwtl
cwtl
in
mov
div
push
xor
pop
inc
loop
jb
or
inc
dec
mov
adc
gs
or
movsl
mov
jb
jge
inc
jmp
jne
pushf
test
sti
jg
push
xor
mov
nop
mov
scas
out
in
pop
xchg
sbb
mov
sub
xchg
aad
or
imul
or
aam
insb
sub
dec
in
into
stos
lock
xchg
mov
xor
push
and
or
repz
shl
mov
fisttps
insb
je
pop
push
mov
insb
xchg
mov
xchg
pop
push
in
pop
mov
cmp
xchg
std
mov
mov
inc
pop
sbb
sbb
mov
sahf
pusha
out
mov
in
test
or
push
push
out
dec
pop
loopne
push
jno
enter
dec
lods
pop
and
lods
mov
fisubl
loopne
xor
cmp
jb
inc
loopne
xchg
mov
mov
jo
fs
shl
sub
lods
sbb
gs
inc
lock
cld
mov
test
cmpb
dec
sahf
push
lods
cwtl
inc
and
push
inc
call
xchg
jmp
mov
fldl
or
ror
or
out
aad
inc
push
push
push
xor
jmp
insb
sub
xor
lock
insl
mov
mov
cmp
nop
sbbl
pop
add
push
repz
cmp
mov
sahf
js
stc
hlt
fnstenv
xchg
ret
mov
push
sahf
loope,pt
or
addps
js
and
mov
xor
or
mov
rorb
inc
pop
mov
mov
push
bound
hlt
adc
rclb
mov
insl
xchg
mov
dec
leave
xchg
test
inc
inc
adc
out
and
mov
stos
and
imul
arpl
mov
in
pop
out
mov
pushf
dec
inc
inc
sub
cmpsl
dec
ficompl
mov
scas
out
outsb
mov
xor
fs
lock
xchg
or
aad
ret
add
sahf
arpl
rcrl
add
sub
xchg
mov
addl
in
std
xchg
cwtl
inc
dec
loop
sub
pop
mov
fyl2xp1
and
fnsave
loope
jns
xorb
fdivrl
add
dec
add
push
inc
imul
mov
sbb
add
mov
imul
aam
cmc
jg
call
xchg
shlb
push
pop
cmc
lds
xor
aam
fcmovu
add
icebp
clc
jbe
inc
mov
jg
jecxz
ss
addl
lret
dec
call
icebp
popf
lds
mov
jmp
mov
mov
outsl
jae
mov
sub
push
cmpps
iret
push
rcrl
int
shl
cs
scas
lods
jmp
inc
arpl
fsts
xor
mov
ret
popa
sbb
in
ds
cmpsb
sbb
sahf
inc
or
or
mov
lock
outsb
mov
add
int3
jo
loop
dec
jno
and
sbb
cwtl
aam
xor
sbb
loope
add
lret
mov
inc
pushf
pop
dec
ror
xchg
mov
stc
jb
fisttps
pop
out
clc
popa
movsb
pop
or
jl
sti
aas
dec
add
lock
mov
xchg
push
push
lret
xor
xchg
jecxz
movsl
roll
cwtl
int
ret
mov
and
mov
inc
test
cld
leave
adcl
xor
daa
pop
fwait
aad
push
mov
inc
mov
fists
rorb
fnstcw
ss
pop
test
adc
lods
je
xchg
and
call
test
clc
mov
aas
and
dec
cld
or
out
scas
outsl
mov
es
movsl
push
adc
push
shll
push
outsb
inc
popf
push
jnp
jbe
xchg
sar
inc
sub
icebp
adc
imul
cmpsb
clc
push
sub
out
sub
jno
loop
scas
cmp
xchg
in
arpl
jmp
push
sarl
dec
sbb
push
and
mov
ljmp
and
sub
insb
push
dec
jns
or
stos
sbb
sahf
fwait
and
jl
outsl
adc
and
jle
mov
into
movsl
pop
cld
icebp
or
iret
mov
sbbl
sahf
push
and
dec
mov
clc
xchg
xor
jle
xchg
push
mov
nop
mov
and
mov
or
xchg
je
fsubrs
popf
arpl
jg
and
and
xchg
jns
dec
jbe
pop
or
mov
popa
pop
cld
xchg
into
stos
or
dec
rcrb
movsl
xchg
jne
sub
pop
sbb
fsubl
mov
xor
mov
inc
adc
mov
lret
mov
stc
ret
outsl
aas
mov
stc
leave
or
cmp
and
sub
into
mov
test
push
add
iret
or
aas
pop
and
push
ds
je
shlb
xchg
pushf
pop
outsb
pop
or
js
push
lret
cmp
mov
mov
sub
out
arpl
jbe
or
lods
sti
mov
out
xor
call
cs
inc
dec
fcmovne
movsb
mov
rcrb
movsb
loop
ja
test
or
out
decl
test
cwtl
pop
pop
into
push
lea
fcompl
inc
ss
das
sbb
add
les
fcoml
xchg
cmp
dec
mov
dec
adc
add
adc
lcall
mov
cltd
lds
lods
lret
mov
loop
rclb
test
insb
aad
push
in
pusha
cmp
sub
test
push
mov
lds
xor
ja
dec
sbb
andl
push
or
push
push
ja
js
not
repnz
pop
call
mov
lahf
and
cltd
daa
ss
popf
jecxz
pop
test
scas
sub
arpl
out
sub
jno
mov
insb
inc
out
xlat
testb
xlat
xchg
setns
pop
mov
mov
mov
test
aaa
sub
aam
popa
mov
les
addr16
add
dec
or
lcall
and
fstpt
mov
inc
fnstenv
shl
mov
aam
jg
int
and
mov
mov
add
mov
stos
or
mov
mov
push
mov
js
addl
pusha
push
mov
leave
movsb
pop
xor
jge
iret
sarl
mov
pop
out
pop
clc
movsb
add
and
xchg
jae,pn
orb
jb
repz
out
icebp
sub
pop
addr16
stos
fnsave
orb
pop
fcomps
mov
inc
dec
outsb
inc
mov
frstor
out
cmp
mov
imul
cwtl
sub
inc
add
mov
fcoml
in
jl
movsb
cli
ds
clc
mov
rcrl
int
and
daa
mov
ret
mov
das
push
int3
or
jae
jmp
fcomps
xchg
xchg
fidivrl
jecxz
xor
mov
push
xorb
lock
pop
loope
adcl
push
adc
mov
outsl
adc
frstor
xor
ja
insl
jbe
aas
das
aas
test
in
dec
ficoml
pop
jge
popf
testl
ret
fdivl
fldl
pop
out
cmp
dec
ret
add
push
or
into
out
mov
loope
adc
cmpsb
std
xor
jle
add
mov
es
push
pop
jno
pushf
fwait
es
gs
sbb
mov
pop
cld
dec
rorl
inc
cmpsl
xor
fisubs
scas
out
jnp
jecxz
icebp
lock
adc
sub
std
inc
in
xchg
dec
test
jo
fisttpl
cmc
in
jg
ret
out
mov
and
pusha
jae
stos
cmp
rclb
dec
or
sbb
rorl
sahf
dec
mov
xor
cli
test
jl
stos
clc
dec
mov
add
pxor
imul
xchg
mov
mov
sti
test
mov
clc
push
in
mov
pop
aad
mov
or
or
adc
insl
pop
fidivrl
es
repz
push
adc
pop
cs
push
ds
aas
in
mov
ret
mov
add
rorb
lds
cltd
mov
sub
scas
gs
mov
imul
adc
sub
push
dec
test
pop
sub
jge
sbb
sub
xor
imul
and
fs
aam
test
in
dec
in
sub
mov
pop
xchg
mov
fcomps
fisubs
popf
je
cltd
push
sub
jmp
inc
mov
icebp
rclb
imulb
cmp
adcb
push
js
xchg
and
mov
xlat
lret
shr
push
jg
enter
rol
and
mov
dec
test
pop
pop
sub
sbb
mov
xor
dec
sub
test
test
mov
push
and
push
push
and
push
xor
in
mov
and
add
shlb
cs
jbe
cmpsb
lea
xchg
jae
sbb
add
in
mov
and
movsl
dec
adc
push
dec
stos
jo
adc
mov
inc
cmp
xchg
mov
sub
loop
pop
sub
jbe
insb
xor
iret
test
pop
daa
xchg
push
add
fdivrs
aam
lods
jg
push
sahf
inc
sub
icebp
sub
shrb
jae,pn
imul
lahf
es
pop
sub
inc
and
or
mov
xor
and
mov
jl
enter
inc
mov
call
xchg
xlat
mov
push
push
leave
ja
jo
call
rcrb
xor
inc
sub
fiaddl
cs
cli
mov
shrl
inc
sub
or
rcl
cmc
pusha
stc
jp
pop
aaa
xlat
mov
xor
loop
xchg
push
pop
sahf
fmul
and
lea
pop
cmpsb
fs
lods
jmp
and
mov
mov
jo
das
push
jo
sbb
les
shll
lcall
lcall
mov
xor
stc
xchg
and
aam
mov
imul
xchg
dec
jno
xor
out
mov
mov
jge
js
scas
pop
mov
add
out
sub
adc
mov
es
and
mov
jo
pop
jecxz
icebp
jmp
mov
dec
sbb
xchg
faddl
inc
outsb
mov
fbld
xlat
push
and
mov
repnz
popa
xor
aaa
aaa
add
aam
mov
aad
xchg
adc
adc
stos
aad
cmp
out
sub
dec
das
push
sarb
popf
sub
or
mov
fnstcw
int
sub
and
pop
push
pop
pop
jle
cli
cmp
fisttps
mov
dec
xchg
mov
fs
dec
push
inc
or
and
add
ret
sub
or
jle
xchg
xchg
jp
inc
sub
lret
icebp
push
push
ja
push
pop
ss
loope
xor
xlat
movsl
cmp
xor
jne
cmc
push
sbb
mov
insb
mov
push
adc
add
dec
inc
into
cmp
add
adc
jecxz
int
stos
mov
in
lret
lds
xor
xorb
inc
pop
jmp
xor
frstor
repz
jl
outsl
pop
jle
mov
xchg
or
sti
shrl
pop
lret
sub
les
fadds
aad
das
ret
xchg
mov
outsb
lock
loope
add
int
or
dec
js
jmp
dec
ljmp
aaa
addl
popf
mov
int
dec
xchg
mull
repz
sub
scas
and
push
cli
std
movsl
cmpsb
scas
jg
test
shll
les
lahf
das
sbb
push
mov
add
hlt
ret
aam
inc
push
xlat
mov
ret
icebp
adc
leave
loop
cli
aam
dec
xchg
sbb
mov
jb
icebp
je
in
mov
pop
scas
hlt
sub
sbb
popa
icebp
pop
stos
aaa
pop
icebp
xor
out
or
add
jge
jae
out
add
adc
test
inc
jb
xor
test
mov
mov
enter
out
sub
dec
xchg
cli
sahf
dec
jecxz
xlat
xchg
push
and
xchg
add
xor
clc
adc
jge
inc
mov
pop
pop
notb
mov
mov
cmpsb
dec
mov
dec
int3
cmc
fidivrl
loope
add
jge
mov
mov
sub
mov
mov
nop
dec
shrb
pop
lods
lret
cmp
cmp
push
ss
fcoms
jae
ss
imul
imul
addr16
fcmovb
or
out
mov
insb
fldl
data16
mov
mov
sub
rcrb
mov
adc
xchg
in
xchg
out
movsb
ret
stos
inc
pushf
lret
and
lods
mov
cmp
xor
jge
mov
xor
cmp
cli
mov
test
cld
fnsave
or
loope
movsb
inc
cs
jecxz
push
pop
out
add
fldt
add
sahf
movsl
lods
mov
sub
test
dec
dec
cwtl
sub
or
cmc
cwtl
fistl
mov
mov
cwtl
inc
or
sbb
sub
push
xor
repnz
std
mov
enter
in
in
lret
push
sbb
in
lahf
sub
or
ss
xchg
sub
clc
out
xchg
jns
mov
mov
in
and
push
fwait
idivb
in
dec
ret
in
out
mov
mov
lahf
imul
les
fcom
sbbb
ljmp
in
push
adc
lcall
adc
cmp
jp
movsb
lea
jle
scas
inc
xchg
push
inc
les
or
xchg
loope
sub
xchg
imul
jge
push
lods
or
mov
in
roll
lret
test
test
das
mov
mov
mov
push
and
lcall
dec
std
nop
lahf
xchg
aad
jge
jg
daa
cltd
rcll
jns
mov
icebp
cmpsl
loope
cli
loopne
dec
pop
popf
dec
add
sbbl
fnstenv
bound
push
or
xchg
fimuls
pop
out
aam
and
sub
sarb
lret
ds
aaa
leave
test
dec
mov
xchg
mov
jmp
push
cmpsl
es
sub
mov
push
lret
push
cli
fsubrs
mov
ret
jae
dec
mov
stc
pop
ja
xchg
mov
call
pop
adc
sub
leave
add
test
mov
jne
mov
sub
fwait
sti
jae
jge
lahf
sbb
xchg
inc
inc
aaa
xchg
test
cmpsb
jbe
inc
cli
mov
imul
repnz
dec
rorl
and
jbe
xor
adc
scas
imul
mov
or
out
xor
inc
inc
jmp
dec
lods
adc
into
js
dec
and
xchg
call
loope
popa
test
lods
int3
cmp
and
xor
clc
jp
add
mov
pop
mov
xor
test
jmp
ficomps
sub
jo
loopne
or
pop
out
mov
mov
rcrl
or
cmc
jbe
jle
xor
jae
dec
lahf
ret
ljmp
adcl
pop
xlat
and
adc
cmp
mov
scas
insl
and
fcoms
out
addl
out
mov
cmp
ret
je
jp
sbb
rcrb
cmp
or
xor
dec
testl
mov
adc
pop
loope
popa
stos
idiv
mov
fnstsw
jae
outsb
or
pop
xor
addr16
jl
data16
orl
push
cmpsl
out
and
add
testb
fcmovne
mov
scas
xorb
leave
inc
repz
jmp
jns
add
and
cs
cmp
jp
movsb
and
cmp
mov
mov
fwait
pop
add
inc
add
pop
jecxz
ret
push
xchg
stc
ret
hlt
bound
ja
dec
fisubl
inc
pop
shl
repnz
stos
pop
stc
mov
shll
iret
loopne
mov
scas
mov
roll
sbb
vorps
mov
scas
fs
adc
repz
movl
pop
subb
dec
int3
push
mov
insl
adc
xchg
cmp
gs
sbb
inc
in
in
push
fcomip
ficompl
int
test
filds
jne
aas
addr16
mov
fst
dec
add
pop
ss
or
scas
inc
push
lods
and
lock
arpl
nop
clc
mov
js
dec
sub
sub
push
push
mov
pop
add
jl
jbe
jns
jge
fisubs
cwtl
bound
minps
jp
lret
rolb
jp
pushf
mov
fs
fstps
arpl
clc
into
adc
cmp
lcall
sbb
inc
jle
mov
fstpl
stc
neg
and
pop
pop
roll
cmp
add
xchg
imul
mov
shlb
test
outsl
ret
mov
dec
mov
shl
mov
and
ret
call
popf
clc
xor
gs
pop
mov
subb
cld
js
fildl
xor
scas
cmp
adc
lock
jne
scas
sbb
mov
cmp
jne
cmp
incb
pop
pop
adc
pop
imul
call
sbb
enter
lret
les
pop
movsb
pop
movsb
sbb
dec
ss
pop
lock
roll
xor
adc
loopne
and
lea
xchg
addr16
cmp
push
inc
or
mov
testb
cmp
cmp
or
inc
cmpsb
into
mov
add
aam
dec
dec
mov
sbb
cmp
mov
xchg
iret
adc
testb
pop
lahf
push
ja
or
push
dec
lret
in
mov
imul
or
push
lea
add
pop
loopne
pop
pushf
jle
test
add
call
lods
cmpb
mov
rorb
stos
clc
mov
call
aam
push
arpl
mov
getsec
adc
movsl
adc
incb
mov
iret
adc
imul
clc
hlt
out
popa
mov
cmpsl
jbe
sub
cmpb
leave
inc
dec
mov
lock
adc
mov
call
cld
loope
sti
cmp
testb
scas
dec
call
in
xor
add
mov
xchg
push
mov
ds
aaa
xchg
xlat
jns
dec
mov
mov
mov
and
rclb
sbb
inc
adc
lret
pop
sbb
pop
out
sahf
arpl
push
stc
je
test
cmp
loopne
inc
jnp
insl
jbe
inc
adc
xchg
fmuls
loopne
pushf
ret
movsl
std
fists
pop
ja
push
aaa
jae
mov
xchg
push
rcll
dec
lret
inc
fs
in
mov
sbb
xchg
lcall
mov
push
cmc
jno
out
stos
jne
pop
xchg
mov
inc
cmp
cmc
aad
cltd
jecxz
popf
or
rorl
add
pop
cmp
aaa
mov
jno
lock
push
outsl
mov
xor
xchg
cmp
push
rcll
dec
xor
jle
xchg
or
xchg
or
xchg
cs
fsub
push
gs
cmp
int3
pop
jbe
scas
fcoms
jo
movsl
shrl
mov
js
nop
mov
je
inc
inc
and
outsl
sarl
pushf
mov
pop
pop
in
lds
lods
pop
and
add
call
sub
bound
ja
mov
jno
mov
pop
cmpsb
gs
movsb
and
addb
pusha
and
es
jnp
inc
test
stc
inc
pop
add
push
lahf
pop
dec
loopne
cmpl
inc
test
stc
push
cwtl
aam
sub
inc
sbb
stos
mov
fisubs
aas
mov
push
rcr
pop
mov
sbb
movsl
mov
dec
sbb
outsl
pop
add
pop
mov
sub
inc
pop
aad
lahf
jae
mov
cs
inc
subl
sbbb
inc
int3
sbb
ja
and
jmp
ret
fsubrs
cmp
sbb
push
es
jecxz
pop
inc
lcall
leave
daa
repnz
ret
out
cmp
jmp
sbb
in
mov
mov
insb
mov
push
mov
dec
pop
ret
xor
std
pop
mov
arpl
mov
out
jb
shlb
sub
addr16
push
xchg
fdivs
mov
jbe
mov
fcmovnu
mov
mov
inc
jno
lods
es
sub
mov
pushf
jge
xor
mov
dec
push
or
mov
fmuls
add
mov
xchg
xchg
adc
es
out
movsl
lock
cltd
clc
lahf
incl
test
hlt
adc
cs
pop
cmc
test
push
negb
out
or
pusha
jp
xor
xchg
pop
xor
cltd
add
aaa
ss
mov
adcl
sarl
imul
dec
mov
inc
xor
fisubrs
insl
dec
mov
and
test
xchg
stos
xchg
or
sarl
sub
insl
adc
xor
repnz
sub
insl
push
jbe
hlt
pushf
mov
aas
adc
ss
outsb
add
pusha
test
sbbl
lds
jno
mov
test
aam
test
ds
push
push
inc
and
loopne
push
cmpsl
push
test
cld
iret
lods
popa
mov
int
pop
jae
and
fstl
adc
jl
daa
popa
push
pop
stc
pushf
repnz
mov
rcrb
lods
xor
sub
shlb
test
lcall
add
jp
sbb
adc
sbb
cmp
adc
addb
stos
test
movsl
aad
les
test
jb
xchg
fs
out
int
mov
push
mov
adc
and
test
test
xchg
mov
cmpsb
stos
fisttps
popa
bound
gs
pop
cs
add
push
popa
arpl
aaa
imul
push
lcall
jno
push
out
adc
mov
dec
add
cltd
jns
shlb
lods
cld
jecxz
jl
jmp
loopne
jno
push
jns
pop
lods
filds
mov
jbe
in
out
push
xchg
lods
movsl
push
call
in
mov
push
xor
push
sbb
xchg
xchg
pop
mov
arpl
shr
cltd
inc
stos
push
loope
cmc
ret
xor
dec
inc
inc
sub
fdivrs
clc
jne
mov
jno
in
jae
cs
fistl
loopne
jb
and
subl
fcmovne
pop
cli
xchg
adcl
jnp
adc
or
inc
jmp
and
jle
jns
mov
xchg
mov
in
outsl
mov
sbb
xchg
inc
out
dec
lahf
sbb
mov
cmpsl
dec
pop
loop
pop
int
int3
adc
pop
out
pop
xor
or
mov
in
call
lock
int3
mov
test
inc
mov
imul
dec
xrelease
mov
push
js
popa
push
movl
pop
in
test
and
enter
jae
lret
xchg
mov
add
test
sbb
xorb
sub
push
dec
scas
mov
mov
leave
jbe
adc
pushl
rcll
sbb
or
sti
js
or
push
and
sub
shll
jle
pop
and
xchg
pop
mov
dec
and
les
out
into
xchg
ret
push
clc
pop
cmp
ss
fnstsw
iret
sub
mov
jb
call
adc
sbb
sti
orl
clc
mov
outsl
inc
jmp
sub
inc
imul
inc
je
repz
mov
jne
call
push
mov
dec
adc
jmp
inc
mov
and
pop
mov
jne
mov
sub
and
sub
div
sti
scas
or
mov
add
shl
push
js
lret
sbb
jno
test
mov
movsb
lock
add
fcoms
sub
fwait
in
or
cmp
lds
daa
stc
ss
pop
aam
adc
sbb
jmp
std
cli
das
dec
into
push
push
stos
sub
adc
pop
push
add
sub
fimull
imul
jo
mov
push
int3
scas
rolb
sti
scas
cmp
sar
mov
cmp
mov
stc
adc
cmp
dec
push
xchg
xchg
sbb
or
sub
inc
lret
daa
out
mov
jecxz
xlat
adc
sub
xchg
ljmp
stos
ret
dec
jo
push
mov
fcmovbe
fsubr
lock
xchg
pop
shrb
and
and
in
xor
lods
int3
fiaddl
das
push
xchg
test
mov
xor
enter
or
sbb
push
mov
sbb
and
mov
dec
lret
adc
inc
shrl
sbb
repz
sti
mov
mov
pop
mov
pop
push
iret
fstpl
lahf
jbe
das
je
test
pusha
or
ret
and
out
aas
repz
neg
cmpb
roll
sub
ret
scas
xor
loop
shlb
aaa
stos
stc
push
pop
mov
add
cs
inc
or
xchg
movsl
pusha
jno
jmp
push
sbb
fcomps
loopne
int
hlt
int
shll
jecxz
xor
mov
mov
xchg
xchg
sti
call
je
ljmp
ja
in
fstp
in
jnp
dec
xor
add
faddl
mov
push
jp
adcb
in
sub
pop
and
arpl
clc
dec
mov
ficoms
test
out
mov
fldt
pop
cs
popf
in
lea
mov
cmpsl
mov
imul
lcall
sub
mov
test
mov
inc
dec
adc
aaa
mov
cmp
push
xchg
xor
sarl
adc
shrl
xor
outsl
push
in
mov
pusha
dec
icebp
adcl
or
ljmp
ret
adc
xor
ss
push
and
xchg
cmp
cmpsl
cmp
out
out
push
rcl
xorb
xor
repnz
test
addb
and
mov
adc
pop
mov
jnp
in
stos
gs
popa
jecxz
pop
scas
and
decl
repnz
test
lds
out
inc
popa
xchg
adc
add
aad
in
mov
jmp
xchg
mov
test
cwtl
xor
sub
ljmp
jp
sub
fcmovu
ss
loopne
add
cmc
int3
pop
dec
jne
lock
ss
and
cmp
dec
xchg
lea
push
push
addr16
xchg
insl
cwtl
shrb
jne
ljmp
jp
aad
iret
inc
andl
test
cmp
insl
fwait
lcall
inc
mov
pop
sub
data16
cwtl
inc
sub
or
jnp
pop
imul
mov
movsb
adc
or
imul
mov
je
ja
inc
xchg
push
out
mov
xlat
push
in
hlt
mov
shlb
popa
xor
outsl
adc
movsl
adc
sbb
ja
fdivrl
pop
mov
jb
das
dec
inc
int3
xchg
hlt
push
cmp
movsb
pop
pusha
mov
jnp
negl
push
ret
mov
add
lds
push
mov
jns
jbe
jle
das
or
stc
push
imul
xor
sub
xchg
fiaddl
mov
in
adc
stos
mov
ficoms
inc
push
jl
mov
and
lahf
sub
inc
jns
or
mov
jge
test
sbb
cmp
fucomi
cltd
fiaddl
pop
sub
jo
loop
out
ret
cmp
jge
cmp
adc
and
fucomip
test
leave
and
lock
call
sbb
mov
mov
sub
sbb
mov
jno
and
mov
mov
int3
mov
sub
or
pusha
packssdw
push
jmp
stos
enter
xchg
ret
inc
test
rolb
mov
push
cmp
jbe
inc
out
and
sarb
cmp
jbe
mov
xchg
popf
jns
push
mov
jae
jbe
loopne
stos
shll
mov
xor
cwtl
jb
rclb
dec
xchg
daa
xchg
push
int3
adcb
aad
call
sub
lret
or
lret
push
fisttpll
lock
or
adc
movsb
mov
rolb
scas
xor
xchg
addr16
cmp
dec
and
jp
daa
inc
sub
jae
inc
out
and
shrl
jmp
xor
xor
movsb
in
xchg
bound
inc
dec
jl
dec
and
xchg
or
je
jmp
call
mov
xchg
mov
out
shl
jns
mov
xor
push
popa
adc
mov
or
mov
sti
mov
mov
cmpsb
xchg
das
ret
pop
leave
lods
push
inc
xchg
and
aad
mov
inc
mov
jnp
adc
push
dec
repz
mov
mov
lock
sbb
push
mov
xchg
sbb
das
inc
pop
or
call
lahf
ja
repnz
add
insb
scas
loopne
push
lock
inc
pop
and
stos
std
mov
sahf
xchg
dec
pop
xchg
pop
aas
aaa
aaa
push
loope
pop
dec
jae
cld
jno
pop
push
push
lret
sbb
sbb
iret
cmp
jge
rclb
jns
in
cmp
cmp
adc
icebp
push
mov
mov
aaa
xchg
sbb
inc
dec
shlw
das
sbb
in
dec
xchg
add
out
fisubrs
jge
dec
pop
or
cmpsb
shll
jmp
data16
into
cmp
mov
push
dec
pop
adc
sbb
gs
out
mov
lods
sub
pop
fs
or
mov
jae
int
ss
cld
xor
xor
or
sbb
dec
adc
dec
fnstcw
xchg
subl
mov
xor
push
imul
outsb
into
inc
repnz
jmp
loopne
stos
hlt
inc
clc
push
loop
sub
js
fistl
cmp
pop
cmp
cs
popa
jae
test
xlat
rol
jl
cld
push
push
mov
pushf
movsl
pop
cmp
mov
mov
aas
push
cmp
stos
sbb
loop
jno
inc
xchg
cltd
adc
push
fidivrl
mov
lods
leave
loopne
jbe
mull
lcall
cmpsb
outsl
sub
mov
cmp
pop
sahf
jl
lock
cmp
push
rcll
and
lcall
adc
mov
inc
mov
adc
xlat
lret
mov
or
add
xchg
je
mov
xchg
pop
insb
in
out
stos
pop
mov
cmp
int
popf
cmp
out
mov
sbb
xchg
cwtl
cmc
psubq
pusha
push
push
mov
in
dec
mov
mov
sbb
int3
adc
fstpt
lret
push
cmp
test
in
andl
notb
jno
enter
xor
sbb
or
ret
outsb
and
cs
adc
mov
sbb
aas
sub
fnstcw
into
inc
xor
sar
lretw
out
or
gs
outsl
stos
cmc
shlb
pop
sub
push
rclb
adc
lock
or
jmp
arpl
sbb
pop
imul
mov
fdiv
popa
push
loope
lret
dec
int3
and
jge
and
enter
andl
fdivrl
jae
int3
jmp
jae
jmp
in
jne
push
dec
adc
ss
imul
push
pop
popf
push
hlt
imul
inc
inc
popf
aam
jecxz
xor
add
mov
in
sbb
cmp
sub
in
gs
push
lret
ret
jns
testl
mov
cmp
imulb
xchg
pop
pop
inc
add
test
push
jb
inc
bound
mov
jbe
in
pop
dec
cmp
pop
cmp
or
pop
add
pop
cmp
out
jge
andl
inc
sub
mov
adc
test
mov
das
aad
and
shrl
dec
repnz
xor
jmp
loope
xchg
enter
ljmp
adc
push
out
rolb
stos
icebp
jns
push
outsb
fs
cmp
idiv
mov
and
mov
jle
pop
shlb
mov
enter
daa
rolb
xchg
cli
dec
loop
inc
sub
xchg
adc
jbe
mov
dec
es
mov
pushf
dec
push
lret
addr16
in
stos
fcompl
es
jbe
cmp
cwtl
sbb
jl
dec
call
mov
dec
or
inc
or
and
adc
ljmp
cmpsb
mov
je
push
add
sub
jnp
hlt
ja,pt
pop
push
fsin
add
jge
push
imul
mov
jb
add
inc
mov
ret
cmp
aam
stos
push
arpl
test
and
push
sbb
mov
mov
movsl
pop
dec
andb
or
jecxz
pop
mov
dec
mov
fimuls
push
aas
test
jae
jb
fisubs
decb
sbbb
cmp
ss
pop
dec
pop
mov
push
fidivs
xchg
fcom
cmp
test
jno
sbb
test
faddp
mov
mov
loopne
icebp
or
inc
pop
dec
xchg
cs
mov
mov
ljmp
mov
dec
push
jae
dec
inc
lock
jae
inc
fmuls
ror
sbb
or
repnz
sub
mov
or
ficoms
scas
into
js
dec
shlb
lea
or
repnz
mov
dec
out
shlb
jno
lods
call
jle
in
and
jle
inc
rorb
sub
add
push
jno
out
push
inc
movsl
jle
add
sub
pop
mov
neg
testl
xchg
xchg
jne
pusha
popa
sbb
dec
jmp
and
mov
xor
add
add
sbb
pop
mov
shl
jmp
clc
mov
xchg
sub
in
pop
sarb
xchg
dec
mov
mov
out
jae
mov
popa
mov
sub
subl
movsl
fimull
sub
xor
push
es
fldenv
popf
aad
xchg
sub
cmc
imull
pop
jle
jno
and
or
fmull
mov
jecxz
or
mov
jno
sbb
scas
out
int3
mov
dec
cltd
hlt
push
sub
negb
cltd
xor
ss
addl
xchg
je
mov
fsubl
mov
add
jg
inc
and
or
sub
jp
lock
pop
adcb
movb
xor
jo
aad
sbb
pop
aad
and
jle
pop
dec
sbb
jno
mov
jg
dec
outsl
jo
lret
pop
mov
inc
popf
push
outsb
aam
imulb
cld
pushf
cmp
add
pop
mov
inc
xchg
movsb
pop
pop
or
or
sbb
loop
adc
inc
cld
push
pop
jnp
mov
xchg
mov
jle
sbb
sbb
push
fdivl
ds
pop
movsl
sub
lret
mov
mov
sti
mov
fildll
mov
mov
mov
push
inc
insb
xor
int
or
in
xor
jne
mov
cmp
lret
loop
shlb
imul
popa
enter
xchg
cltd
mov
ss
adc
imul
iret
xchg
std
cmpsl
addr16
mov
jecxz
clc
popa
test
fistps
pushf
xor
adc
push
jnp
cld
clc
lahf
push
stos
mov
mov
icebp
xchg
push
inc
xchg
cmovp
or
ja
pop
mov
pop
cwtl
shll
loope
jp
mov
sbb
jecxz
xchg
arpl
and
jbe
fimuls
loopne
test
sbb
fiadds
xor
mov
movsl
aam
nop
or
ja
ljmp
or
mov
xchg
movsb
pushf
test
paddw
jge
push
push
lret
cmp
lret
stos
idiv
dec
lods
ds
jmp
lock
ret
insb
adc
dec
add
jae
xor
lret
inc
test
les
lods
or
xchg
into
add
pop
jno
mov
std
sub
inc
cmp
or
fldl
mov
sbb
insl
push
add
js
mov
push
leave
mov
pop
loop
dec
testl
les
inc
in
mov
cs
dec
jns
dec
mov
mov
and
faddl
or
dec
adc
pop
xchg
and
or
mov
testl
xchg
gs
rclb
pop
hlt
and
mov
or
sub
aad
sub
pop
or
stos
xor
xchg
jbe
and
xchg
xor
mov
bound
jbe
stos
pop
addr16
dec
xor
add
popf
sub
std
mov
cmc
push
js
push
xchg
cmpsb
inc
rorl
dec
dec
mov
xchg
or
adc
in
jge
aam
mov
add
and
dec
int
js
adc
scas
adc
repz
das
lea
push
add
mov
adc
je
daa
cmp
cmpsb
sahf
xchg
aam
stos
out
fcomps
jmp
fdecstp
ret
sbb
ljmp
lods
inc
imul
cmp
fdivrs
fs
fdivs
inc
pop
out
cli
dec
negb
popf
rol
xor
test
pop
sbb
cmp
mov
popf
andl
cmc
fnsave
mov
xlat
push
cmp
mov
mov
push
and
clc
xlat
inc
sbb
xchg
push
mov
or
and
ljmp
test
mov
xchg
icebp
ss
sahf
mov
movsl
mov
stc
lcall
add
ja
in
push
push
das
ret
or
dec
push
gs
rcl
xchg
jecxz
cltd
nop
mov
mov
bound
insl
xchg
pop
fists
aam
dec
jnp
aas
mov
lea
jl
cmp
push
aaa
mov
ds
stos
into
pop
loop
out
les
adc
aaa
or
push
sbb
sahf
out
and
pop
syscall
inc
lods
xchg
cmpsl
mov
outsb
mov
mov
sub
xorl
jmp
sub
push
in
add
and
out
adc
pop
adc
inc
and
jg
mov
mov
cmpsb
push
jecxz
iret
dec
test
mov
mov
pop
adc
js
aas
mov
xchg
imul
scas
sub
xor
bnd
xor
sbb
sub
inc
bound
ret
adc
gs
and
pusha
addl
add
lea
fistpll
mov
mov
sub
push
rorl
add
mov
xlat
xor
sets
mov
xor
cmc
out
sbb
fcoms
or
jmp
sahf
xor
xor
stos
insb
ljmp
mov
mov
data16
jns
jmp
mov
adc
jo
loop
fildl
shll
out
test
jge
arpl
pop
mov
cld
push
add
xchg
cmp
iret
and
fdivl
sub
sub
xchg
dec
push
stos
sub
stc
dec
lcall
sub
xacquire
sbb
cltd
jle
jl
lret
loope
adc
push
icebp
jp
iret
sub
lods
jne
adcl
add
jne
jl
add
fld
fistpl
mov
incl
sbbl
xchg
insl
adc
enter
sub
lret
inc
sbbb
mov
fcoms
xorl
jns
jnp
das
xchg
stos
mov
out
fcmovbe
push
out
pop
test
pop
mov
or
mov
jb
loopne
mov
or
in
sub
adc
mov
adc
pop
sub
bound
inc
fwait
jne
rol
push
int
lods
addb
jns
and
imul
or
jle
and
add
cmp
ret
sti
mul
push
add
div
jne
fcmove
sarl
or
jns
mov
xor
sub
loop
ja
es
inc
scas
out
mov
lods
jl
ficoml
sbb
sbb
jmp
jnp
inc
adc
scas
rcrb
jo
icebp
mov
sbb
loop
fs
icebp
sub
sbb
xor
jne
inc
xchg
push
jmp
mov
pop
add
sahf
push
xlat
jno
stc
iret
sub
sub
pop
and
ljmp
icebp
jge
sahf
mov
xchg
js
inc
test
and
xor
out
sbb
jnp
pop
xlat
dec
xchg
fisttpll
jl
pop
jae
push
call
mov
bound
stos
add
pop
test
pop
in
out
ja
sbb
pop
jge
xchg
rolb
outsb
jg
movsb
loopne
rorl
mov
xor
fistl
mov
ret
xchg
into
call
sahf
push
fcomp
xlat
call
mov
and
push
sbb
or
xchg
xchg
arpl
stos
or
sub
push
xchg
push
or
cli
push
movl
jle
mov
scas
pusha
ljmp
fidivs
arpl
jns
and
fsubs
xor
popw
imul
xchg
adc
cli
out
mov
test
adc
lcall
call
pop
insb
xlat
in
mov
pop
test
lods
and
jo
mov
adc
inc
sbb
jg
cs
outsl
int3
inc
xchg
inc
mov
into
and
cli
outsl
lahf
sub
repnz
sub
ljmp
sub
aaa
and
ljmp
inc
aaa
ficoml
nop
idivb
outsb
insb
mov
cmpsl
aas
push
or
dec
lds
outsl
lods
push
push
push
xchg
in
je
ds
push
adc
pop
mov
dec
lods
xor
in
mov
lods
pop
dec
mov
sbb
fs
int3
xchg
pop
mov
mov
gs
ds
sahf
test
inc
adc
rclb
pusha
sub
movsb
and
scas
fistps
dec
push
mov
pop
ret
mov
fs
sbb
ret
jns
in
fstl
std
fbstp
hlt
mov
jmp
mov
jns
fcom
in
movsl
push
outsl
xchg
out
xor
sub
fmull
nop
aad
sbb
test
shrl
pop
outsl
int
repnz
pop
or
pop
ret
test
inc
loope
ss
adc
stos
and
loope
lret
enter
mov
sub
stc
xchg
pop
adc
cmp
cld
loopne
jecxz
or
cwtl
push
fcomi
ret
jns
and
pop
mov
dec
dec
pop
pop
insb
mov
daa
shl
in
jge
add
pop
push
dec
outsb
add
sub
int
fwait
mov
adc
inc
or
dec
shlb
or
imul
sub
mov
add
outsl
ret
fstl
mov
in
insl
mov
inc
sbb
mov
mov
and
aas
mov
xchg
dec
mov
xchg
jo
shll
sbb
adc
outsb
push
cld
mov
out
test
leave
mov
aaa
orb
push
sub
inc
aas
mov
lods
in
xchg
pop
test
fldcw
mov
cmpsl
das
rcl
dec
mov
ror
das
int3
add
scas
fldt
lods
mov
imul
fst
in
imul
ljmp
popa
ja
sbb
into
cmc
push
rcrl
mov
ss
lcall
cmp
cld
dec
mov
lock
or
inc
dec
popa
in
and
xchg
jl
push
sub
xchg
movsl
cmp
mov
dec
mov
lea
xchg
iret
stos
das
dec
add
cs
ret
jmp
enter
imul
sarb
imull
cmp
pop
hlt
cmp
lret
fnstenv
jg
loop
fsubs
cmc
push
lods
cmp
es
repz
pop
movsl
popa
int3
xor
inc
push
push
cwtl
fsubl
das
mov
lods
dec
popa
sub
in
repnz
nop
sarb
cmp
xchg
loop
out
out
pusha
scas
das
loopne
jl
insl
out
sti
out
out
imull
das
dec
mov
adc
jg
lret
cmp
mov
xchg
shl
or
dec
jecxz
mov
sbb
cmp
addl
xorl
lea
lcall
mov
jbe
scas
sub
push
call
xor
ficomps
dec
mov
inc
les
aad
shll
add
out
movsl
or
jbe
iret
inc
fucomi
dec
xor
js
insb
nop
xor
add
mov
ss
call
aam
stos
idivl
orb
aad
leave
cmpsb
test
add
push
push
into
dec
pop
les
mov
out
lcall
ds
xor
outsb
insb
inc
ds
pusha
cli
icebp
sbb
dec
dec
clc
push
mov
inc
movsl
or
lods
fdivrs
jp
push
mov
insb
hlt
mov
mov
lock
fs
or
xchg
mov
daa
aad
lcall
sub
mov
pushf
pop
cmp
sub
jle
out
push
mov
in
scas
into
xor
hlt
sbb
sbb
mov
cmp
xlat
stos
push
mov
adc
jmp
daa
push
in
inc
mov
push
rcrl
mov
xor
dec
pusha
bound
cmp
add
push
loop
dec
dec
sbb
mov
into
test
mov
adc
les
insb
aad
insb
test
sbb
pusha
push
ret
lock
mov
loope
jle
push
sti
cwtl
sub
lods
outsl
mov
call
jl
sub
xor
inc
nop
addr16
in
push
push
sahf
mov
adc
or
inc
outsl
cmc
cs
push
addr16
mov
add
xchg
lret
shlb
pop
inc
inc
les
mov
mov
into
xchg
jle
fidivl
nop
mov
mov
mov
or
pop
enter
mov
mov
scas
inc
jg
movsl
imul
xor
test
inc
or
sub
mov
stos
fidivrl
push
lds
nop
jmp
dec
jmp
xor
mov
lds
pop
imul
push
stos
in
add
gs
lods
sti
or
sub
xor
mov
inc
popf
mov
loop
sub
scas
adc
mov
or
mov
rcrb
mov
cmp
mov
aam
adc
std
mov
jle
add
out
pop
je
das
mov
fnsave
mov
mov
jmp
push
cltd
in
stos
sbb
in
mov
in
fisttpll
push
out
jmp
js
dec
loope
fwait
xor
rol
mov
dec
or
leave
add
push
adc
mov
jmp
jmp
outsb
adc
xchg
dec
rclb
mov
sti
mov
test
fstpl
ret
insl
xchg
and
jo
stc
fistps
into
call
ss
icebp
cmp
pusha
sbbb
hlt
dec
pop
subb
xor
sub
mov
push
ljmp
adc
cmpsb
inc
mov
mov
cwtl
mov
cmp
jbe
or
repnz
push
xabort
out
xchg
push
shl
out
rclb
sbb
mov
jge
push
sub
mov
sub
shll
push
push
or
flds
and
adc
add
mov
pop
add
lret
xlat
lret
jb
sbb
or
std
out
cli
pop
idivl
subb
cltd
and
mov
push
pop
les
aaa
push
xchg
inc
xchg
cltd
pop
dec
fsts
outsb
mov
out
cmpsb
sub
imul
dec
repz
sbbl
adc
mov
ja
shrb
jg
lcall
shlb
imul
sub
dec
gs
in
popf
inc
mov
jp
leave
rcl
mov
dec
icebp
data16
cld
aam
ror
jns
pop
scas
add
xor
mov
cltd
movsl
je
sub
bound
test
mov
and
clc
dec
adc
mov
fidivl
pushf
or
outsb
jne
clc
jno
or
shrl
add
sbb
aaa
in
cmp
mov
inc
sub
or
ss
rclb
aad
test
pop
push
fwait
minps
ds
add
and
push
xchg
adc
cmpb
xchg
push
call
or
pop
dec
pop
fimuls
inc
cmp
inc
push
sbb
imul
idivb
add
jnp
cmp
ret
jmp
mov
xchg
sub
sbb
aaa
pop
popf
push
ret
push
xchg
jno
pop
xor
jne
inc
cmp
mov
mov
repz
mov
mov
stos
xchg
mov
and
jecxz
dec
sbbb
cltd
jle
cld
xor
pop
jns
mov
jne
dec
cld
fcomps
lods
xor
push
inc
lahf
sti
pushf
jo
jg
xor
imul
mov
cmp
ret
nop
and
jle
push
out
leave
or
nop
jns
pushf
adc
add
sti
adc
repz
add
sbb
push
dec
add
push
ret
xchg
jne
enter
push
cmp
push
push
adc
dec
lret
mov
xor
fildll
pusha
mov
dec
loopne
test
xor
iret
outsl
in
push
sub
shl
cmp
xchg
shr
scas
fldenv
jp
adc
xor
add
frstor
pop
xchg
push
or
and
sub
sbb
int
je
jns
jmp
add
cli
loop
iret
sbb
loopne
imul
ffree
stc
xchg
fistpl
addr16
sub
jle
mov
dec
dec
js
push
arpl
orb
jge
dec
push
in
insb
adc
stc
lods
cmpsb
xor
mov
icebp
jle
add
pop
ret
mov
nop
std
xor
lcall
inc
inc
pusha
insl
cmpsb
sub
add
nop
int
das
jnp
lods
xor
testl
mov
push
cmp
fsubrl
out
cmp
cmp
push
mov
iret
lea
das
push
addb
pop
pop
mov
fsubrs
mov
insb
pop
pop
out
jne
popa
shlb
and
pop
mov
popf
daa
inc
test
dec
popa
mov
mov
dec
sub
lahf
cs
jo
add
jge
xchg
mov
mov
fistpll
sbb
sbb
and
pop
pop
mov
pop
push
lods
push
push
pop
xor
testb
mov
hlt
and
iret
addb
xchg
lret
cmp
in
xchg
adc
pop
cs
inc
lods
cmpsl
dec
in
cld
in
dec
xlat
rclb
pop
pop
cwtl
lock
or
dec
sbb
inc
ficompl
or
hlt
or
inc
leave
jno
and
cmp
int3
out
je
enter
lods
lret
int
test
aam
mov
xchg
mov
xchg
sub
in
adc
loop
sbb
xchg
adc
in
dec
shlb
pop
popa
ss
xchg
in
dec
lahf
in
adc
cwtl
mov
xor
icebp
push
xchg
pop
push
shlb
and
pop
sbb
ss
fst
push
push
or
inc
jno
adc
test
mov
and
sub
add
jns
leave
and
outsb
jbe
lds
xchg
leave
rcr
leave
add
sub
out
sti
and
mov
out
pop
gs
mov
jo
or
push
jmp
and
fcoms
aad
mov
aas
lea
add
jb
xor
jl
test
fidivs
inc
fucomp
aas
mov
sub
jl
dec
add
inc
mov
sub
aam
sarb
fisubrl
and
xchg
mov
aad
divl
xchg
je
push
mov
and
das
cmc
mov
sub
mov
mov
addr16
cmp
pop
dec
sahf
hlt
dec
cmp
mov
int3
push
inc
inc
ss
ja
mov
rcrl
inc
or
mov
int
pushf
mov
cli
cmp
jmp
adc
jae
mov
outsl
push
jb
cmc
js
out
mov
and
mov
xchg
mov
xchg
pop
dec
lret
enter
lret
lahf
jmp
dec
xchg
mov
outsb
lret
cmpsb
js
pop
cmp
add
ficompl
jae
dec
inc
in
pop
adc
dec
sub
dec
adc
enter
gs
add
mov
push
inc
jo
xchg
addr16
orb
xchg
out
and
xchg
pop
aas
push
and
out
out
mov
lds
mov
add
repz
mov
ja
call
rorb
xchg
lahf
inc
scas
mov
mov
std
insb
jns
and
mov
shlb
mov
xorb
or
out
adc
outsl
rcrb
gs
or
xchg
das
or
enter
mov
in
cld
bnd
pop
xor
xor
xchg
pop
sub
subb
sbb
fsubrp
das
push
stos
scas
or
xchg
int
stc
mov
push
dec
push
pop
movl
bound
gs
push
jb
out
test
icebp
and
inc
or
sbb
adc
enter
and
int3
adc
retw
push
movsl
aaa
sub
gs
sbb
jb
mov
xchg
xchg
cli
aas
mov
out
cmp
repnz
sub
pop
mov
idiv
clc
popf
mov
test
lds
xlat
add
in
push
stos
push
pop
xor
xlat
int
mov
movsb
in
mov
notb
add
mov
icebp
push
fisubs
loopne
icebp
shlb
xchg
leave
adc
xchg
push
imul
in
mov
inc
sub
or
or
ret
lods
negb
add
mov
mov
dec
bound
lcall
dec
cs
jb
fdivrs
rcrb
loope
shlb
jb
mov
add
jae
andb
inc
divb
push
mov
fnstcw
cwtl
add
subb
cs
mov
xchg
loop
adc
pop
negl
test
ds
sti
inc
in
syscall
fdivl
mov
sub
jbe
pushf
in
sub
leave
cmpsb
mov
into
sti
insb
lret
inc
mul
sub
fmuls
xor
int
jno
cmp
add
outsb
imul
inc
inc
imulb
adc
orb
mov
cmp
sub
lods
imul
stc
mov
notl
inc
iret
inc
inc
push
mov
filds
pusha
pusha
rorb
push
loop
addr16
jl
xor
icebp
jecxz
jne
popf
test
jb
icebp
aas
mov
je
sub
sahf
add
sub
push
sbb
in
test
jb
fs
arpl
dec
and
rcll
mov
mov
mov
inc
mov
lds
xchg
rcrl
sbb
jp
in
sub
push
std
sahf
xchg
xchg
js
leave
xor
jecxz
pop
inc
jo
movsb
aaa
xorl
repz
push
out
mov
adc
mov
jg
adc
add
pop
stc
jne
insl
push
mov
lret
push
mov
sub
cmp
addl
sbb
mov
dec
sbb
jbe
mov
mov
jae
jb
jno
rorb
and
mov
add
repnz
push
pop
and
adc
xor
iret
mov
xor
ss
fs
push
icebp
jmp
pop
fidivs
lret
add
cmpsb
adc
ror
rcrl
push
movsl
and
jecxz
fwait
mov
xor
shlb
add
icebp
cmpsb
nop
push
rcll
dec
ret
pop
xchg
or
rorb
jge
aad
xchg
shlb
mov
rorb
dec
sbbl
test
adc
stc
pop
shll
fwait
dec
scas
mov
outsb
sub
add
mov
cltd
fistpll
stos
test
mov
push
cmp
je
jg
stc
pop
imul
daa
jle
fldl
data16
inc
aaa
sahf
loopne
or
inc
rcrl
sti
and
mov
aam
icebp
jge
enter
aas
push
jge
aam
dec
sbb
nop
lods
xchg
xor
pop
sbbb
pop
mov
xor
xchg
adc
je
pop
hlt
leave
inc
insl
jp
sub
fs
and
fidivs
in
mov
adc
repz
popf
push
xor
inc
dec
out
dec
cmp
xlat
cmc
mov
mov
cmpsl
push
rcll
ljmp
icebp
mov
xor
repz
xor
mov
into
jno
add
movsb
sub
movsb
push
adc
aad
jg
out
sub
aas
xor
xchg
lods
iret
paddd
popf
and
or
push
and
pop
ret
xchg
sahf
push
fsts
icebp
cli
sarl
xlat
pop
je
or
jbe
ret
add
out
xchg
lods
push
div
add
ljmp
xor
xor
cli
ja
popf
out
outsb
mov
push
pop
push
fs
mov
mov
loopne
popf
xlat
mov
dec
mov
rcrl
repz
push
add
cmpsb
jnp
adc
imul
popa
cmp
adc
bound
mov
xor
dec
sbb
xchg
inc
fucomi
cltd
insl
mov
cld
std
test
aaa
jmp
xchg
fsubs
jmp
adc
pop
sub
mov
push
jecxz
xchg
pop
jo
pusha
fcoms
enter
lcall
ds
std
enter
daa
cmp
cmpb
pop
mov
and
adc
dec
pop
stos
ljmp
mov
mov
out
dec
mov
rolb
in
mov
std
push
lcall
inc
iret
insl
lods
aad
addr16
pop
sbb
jo
jg
xchg
mov
xor
jle
lret
and
rorl
data16
xor
mov
leave
sub
in
push
push
mov
mov
sbbb
sbb
pop
cmpsl
imul
pop
stos
scas
pop
xlat
jecxz
scas
cmp
push
xchg
je
lock
scas
mov
loopne
pop
jo
cwtl
push
add
push
call
xchg
mov
repnz
aad
lret
push
loope
nop
pop
mov
sahf
rcrl
and
aaa
jg
addr16
inc
adc
mov
mov
inc
sub
fistl
inc
outsl
jae
or
fisttpl
notb
jno
fwait
xorl
add
cmc
cltd
push
in
shll
lods
mov
adc
jg
jno
mov
push
aad
lcall
push
inc
insb
addr16
sbb
push
hlt
rol
scas
mov
nop
mov
push
mov
or
xor
dec
push
or
push
push
inc
mov
and
test
outsb
fsubl
sti
std
mov
pop
dec
jbe
sti
adc
ds
test
push
lcall
adc
push
dec
js
lods
sbb
jmp
pop
mov
jle
mov
bnd
nop
lret
push
sub
and
and
movsl
hlt
mov
jno
jge
or
add
fdivrs
shl
mov
xor
popa
adc
ficompl
mov
je
mov
repz
loop
dec
xchg
xor
jno
mov
roll
cli
movsl
sbb
fsubs
mov
lock
jnp
jl
add
fstpt
xchg
lret
notl
pop
add
dec
and
push
fnstenv
in
xor
mov
push
mov
push
or
dec
inc
iret
mov
pushf
fwait
jp
fidivl
jle
outsl
push
pushf
pop
movsl
sub
cmp
std
or
lret
xlat
test
sub
sbb
sbb
aas
lods
pop
inc
ljmp
dec
jns
mov
mov
imul
lret
push
frstor
pop
aas
xor
xchg
lret
sbb
in
out
mov
dec
sub
mov
xor
imul
rcll
inc
test
fistps
xchg
lods
adc
xchg
imul
nop
gs
jecxz
cmp
push
jbe
sub
dec
fyl2x
jle
hlt
cmpb
jmp
in
mov
adc
imulb
xor
sub
push
adc
sbb
jp
cmp
xor
cvttps2pi
cmpsl
std
inc
dec
lods
stos
in
fists
mov
lahf
das
call
sub
test
mov
push
ds
xor
sbb
sahf
sub
outsb
icebp
leave
sbb
cmp
out
jae
lock
jne
loop
mov
lret
imul
mov
add
pop
test
sub
or
cmp
fbld
mov
pop
lahf
jns
dec
out
xor
pop
imul
mov
mov
leave
leave
adc
shlb
in
pop
sbb
aad
es
enter
push
sti
dec
inc
js
pop
push
nop
aas
fcmovnu
sbb
sbb
pop
mov
in
jns
or
into
and
out
sbb
inc
or
xor
loope
mov
scas
and
call
fldenv
cmovb
xchg
pop
lret
mov
adc
arpl
or
cmp
mov
cmp
insl
or
push
pop
das
xor
iret
push
xor
mov
daa
jmp
xorb
rcrb
xchg
push
add
xchg
sti
loop
icebp
shl
mov
out
push
or
inc
imul
negl
loope
sub
clc
push
sub
out
clc
or
lahf
bound
dec
and
pop
leavew
push
movsb
hlt
clc
inc
adc
lcall
addr16
or
clc
push
aaa
pushl
push
scas
lret
cmpsb
call
sbb
fidivrl
jo
in
stos
xchg
mov
shl
andb
arpl
push
xlat
sbb
in
xor
pop
mov
bound
xchg
cmp
lret
enter
loopne
dec
jp
loop
xchg
sbb
repnz
xchg
ds
sti
add
shrl
xor
mov
push
out
es
insb
xor
enter
sarl
pushf
cmpsl
ja
adc
outsb
out
jbe
mov
add
cs
in
cmc
call
mov
stos
xchg
outsb
cmc
ret
stos
stc
ret
push
in
lods
mov
mov
mov
adc
sub
add
mov
aas
xchg
xchg
adc
fisubrs
ja
push
inc
push
loopne
pop
sti
push
inc
in
cld
mov
lods
push
lods
inc
lahf
push
or
sub
sbb
adc
aad
fimuls
pop
sarb
in
stos
out
xor
mov
cld
stos
pop
or
dec
adc
daa
adc
movsb
das
pusha
ret
pop
stc
ret
dec
ret
jl
mov
fistl
mov
div
inc
mov
jg
stc
jmp
ljmp
mov
lods
out
fnsave
xchg
sub
sahf
mov
jecxz
lock
sub
push
pop
fwait
dec
sbb
loope
testb
nop
mov
mov
mov
or
mov
jl
stos
or
adc
pop
fstl
and
dec
push
xchg
dec
push
in
push
push
and
mov
push
sbb
and
sbb
ljmp
dec
jl
aam
stos
cmp
xor
cmp
pop
pushf
mov
mov
inc
cmp
loope
mov
aas
xchg
mov
mov
movsl
adc
adc
sbb
icebp
hlt
dec
jmp
xchg
add
cld
push
jge
cmp
repnz
das
loope
jmp
cmpl
pop
hlt
imul
sbb
sbb
stos
jmp
lahf
ljmp
dec
test
or
sub
adc
lret
dec
mov
mov
xchg
adc
cmp
adc
cmpsl
mov
mov
in
add
pop
or
aam
mov
mov
pop
bound
gs
and
adc
jl
iret
cld
or
mov
rcl
es
sbb
out
ret
stos
sbb
jle
fwait
gs
stc
jmp
stc
pop
popf
js
inc
pop
subl
and
mov
inc
clc
mov
nop
in
and
jl
ds
jb
push
addr16
jae
out
cmp
mov
cmc
mov
xchg
cmp
daa
jae
pop
jns
mov
lret
fs
pop
cmp
into
jns
pop
frstor
pop
mov
in
mov
mov
int
xchg
push
mov
xchg
int3
addl
out
insl
or
test
sbb
xorl
mov
arpl
test
int3
add
adc
lret
mov
insb
test
xor
push
icebp
bound
into
adc
mov
pop
sahf
push
sbb
inc
fdiv
leave
ds
xchg
shr
jns
test
call
sar
mov
out
jg
jnp
shlb
popa
xchg
fmuls
pop
filds
and
in
outsl
push
xlat
insl
out
outsl
sub
pop
idivl
dec
cltd
je
fisubl
xlat
mov
mov
pop
sets
mov
sbb
imul
or
ss
fstl
sub
insl
notb
insl
mov
sbb
mov
dec
test
ja
ds
add
repz
dec
pusha
mov
test
sarl
pop
mov
xor
jae
in
aaa
lcall
mov
aad
cmpsl
dec
and
out
fwait
xor
loope
rorb
mov
xchg
xlat
enter
aam
pop
mov
scas
test
add
and
faddp
movsb
or
mov
insb
push
add
inc
idivb
ret
in
jl
cli
fadd
in
and
outsb
or
adc
cs
inc
cmp
dec
inc
adc
add
adc
sub
mov
jp
push
adc
cmpsl
sub
cwtl
push
dec
push
and
fisubs
in
mov
aad
or
sbb
jns
sub
insb
xchg
fdivrp
scas
in
push
adc
adc
lcall
mov
test
lods
js
jns
and
out
leave
call
push
jecxz
mov
stos
add
mov
stos
pusha
xchg
sarb
mov
sbbl
push
in
jmp
movsl
jb
imull
popa
push
mov
sub
mov
in
cld
dec
sub
data16
pop
ret
aaa
xor
lret
add
sbb
rol
call
mov
dec
jns
and
lea
into
fidivl
fwait
into
and
sbb
mov
sbb
sbb
adc
dec
push
sahf
pop
xor
idivl
pop
ds
xlat
xchg
loope
arpl
jmp
adc
arpl
lret
rclb
stos
sub
dec
insb
inc
test
mov
mov
jecxz
jae
fmull
or
sbb
jno
hlt
lret
mov
pop
in
add
push
mov
sbb
jl
mov
pop
jecxz
push
std
xchg
enter
aad
pop
dec
nop
mov
test
sub
fxch
add
add
jo
insl
stc
adc
adc
jb
push
xor
mov
jae
sarl
sub
gs
jle
ds
fldl
jle
jo
and
dec
aaa
arpl
out
sub
clc
mov
mov
jb
popf
adc
out
cmp
mov
lret
lcall
mov
push
das
adc
fildl
iret
mov
xor
subl
ret
ja
pop
and
push
push
adc
adc
cli
cmc
cwtl
cltd
adc
sub
gs
push
addl
jmp
jmp
xor
out
cmp
mov
inc
inc
pop
cmp
lcall
jb
mov
cmpsb
pop
mov
pop
ret
fs
inc
popl
lea
lcall
adc
jge
jecxz
cmp
icebp
cltd
es
cmpsl
dec
movsl
xchg
pop
fimull
push
std
iret
mulb
mov
mov
mov
scas
add
in
adc
hlt
mov
cmpsb
dec
mov
xchg
adc
adc
and
pop
jo
sbb
pop
es
fcoms
and
andl
sti
dec
repz
and
or
aaa
sbb
push
jmp
pop
xchg
iret
push
fs
xchg
push
cmp
dec
sti
call
push
es
or
dec
data16
fwait
lret
xlat
out
fisubrs
adc
imul
mov
xor
ss
shl
or
stos
mov
cmpl
aad
and
pushf
push
in
pop
stos
mov
pusha
loope
lea
cmp
gs
jp
dec
mov
fsubs
jns
jmp
pop
movb
mov
add
cmp
sbb
mov
in
jge
pusha
stos
mov
add
iret
xor
les
lahf
mov
stos
arpl
xlat
inc
dec
fisubrs
and
push
jmp
mov
xchg
and
cld
jb
lds
sbb
jle
pop
andl
push
pop
sbb
push
pusha
out
fsubrs
aas
roll
mov
mov
cmp
pusha
loop
sbb
iret
and
fwait
out
jmp
inc
adcb
jle
jo
vmovaps
fmul
mov
mov
ds
leave
cmp
loopne
cwtl
sbb
repz
stc
sarl
or
lock
lcall
mov
ficoms
cld
push
test
cmpsl
sbb
call
lret
testb
cli
dec
shrb
xchg
pop
jno
stos
jb
xchg
jle
into
iret
sbb
pop
push
pushf
sub
pushf
pop
int3
call
add
test
push
lock
in
rorb
test
inc
dec
jp
dec
fnstenv
jecxz
enter
mov
jbe
outsl
push
xor
sbb
mov
movsbl
or
dec
mov
aam
int3
inc
arpl
lods
jg
sbb
enter
sub
outsb
dec
add
or
sub
int3
fmulp
int
xor
imul
jle
jge
or
or
lret
daa
andl
mov
mov
add
jg
roll
push
clc
test
rorl
or
popa
push
aas
pop
or
lock
lcall
insl
jae
adc
jno
sar
or
cwtl
cmp
mov
mov
mov
sbb
in
adc
addr16
jecxz
xor
hlt
movsb
fstpt
or
pop
inc
jno
mov
push
in
xchg
push
push
out
pop
arpl
push
popf
xor
mov
ror
jo
mov
dec
cwtl
xor
push
repz
adc
mov
xor
adc
stos
rcl
cmpsb
test
inc
mov
lcall
xchg
aad
cld
and
mov
mov
inc
add
outsl
and
int3
sbb
aam
test
cmp
cltd
and
shlb
shl
loop
cwtl
sbb
enter
or
insb
mov
aad
mov
xchg
fisubl
insl
pop
insl
and
stc
out
mov
dec
fs
push
mov
cmp
outsb
mov
aaa
xor
xlat
xchg
insb
mov
sub
xchg
pop
or
bound
jge
mov
popf
addr16
daa
mov
lods
test
adc
push
sub
jae
sub
adcb
nop
imul
and
data16
jne
dec
mov
jbe
mov
stos
cmpsb
pop
ds
jbe
xor
cli
sti
push
add
das
dec
cmpsb
dec
jp
xchg
ds
inc
fcompl
loop
bnd
divb
stos
test
ret
ds
sbbl
inc
jecxz
mov
fildl
push
clc
xchg
mov
push
lods
cmpsl
aaa
pop
jmp
push
mul
jl
mov
ja
cmp
cli
pop
push
jb
fwait
rcrb
shl
xor
cs
shlb
sti
xor
int
repnz
inc
mov
inc
addl
fstps
xchg
insb
sti
negl
xchg
scas
data16
xchg
sub
jle
ljmp
or
icebp
lock
pop
pop
mov
push
je
push
xchg
add
call
out
adc
jg
lret
push
mov
repz
cmp
movsb
sbbl
adc
sbb
mov
sti
xchg
xor
scas
addr16
das
mov
andb
push
fdivr
ror
mov
pop
stos
jo
gs
mov
ljmp
sub
push
sbb
shrl
pop
cmp
xchg
loopne
push
jmp
and
loope
sbb
test
repz
xchg
sahf
jg
push
stos
movl
cld
sub
sub
mov
rep
xor
psrad
cvtdq2ps
inc
mulb
or
push
jmp
pushf
gs
pop
adc
cmp
out
out
jg
xor
jge
into
jmp
push
lcall
xchg
inc
test
sub
test
mov
jb
push
mov
lock
cmp
rorb
inc
leave
fs
xchg
mov
sbb
push
xchg
inc
xlat
mov
andb
fstpt
mov
outsl
gs
xchg
movsl
mov
dec
jecxz
push
sbb
sbb
loopne
shlb
xchg
pop
je
scas
xor
adc
push
dec
test
std
mov
and
cmp
jle
je
mov
aam
repnz
popa
leave
pop
jmp
cmc
pop
pop
sarl
shr
xchg
sub
jae
jae
push
xchg
mov
mov
icebp
daa
push
in
loope
mov
stos
addb
fcomps
jecxz
push
sub
outsl
sub
lods
in
adc
jns
shll
push
fwait
dec
and
imul
pop
inc
cld
push
ja
mov
fidivs
and
ja
jle
mov
mov
cmp
insl
arpl
popa
sub
pop
loopne
mov
mov
dec
rorl
pop
sbb
out
dec
inc
sub
sbb
sbb
push
lds
inc
adc
push
in
sub
push
or
shrb
mov
push
mov
cmp
xor
jbe
out
add
jae
call
xor
push
push
sbb
dec
ljmp
fdivrs
xchg
xchg
mov
push
movsl
repnz
sbb
loopne
add
addl
sub
and
bound
cmc
and
mov
and
movsl
enter
mov
scas
or
jno
adc
cmp
andb
xlat
je
cmp
out
loop
mov
mov
xor
gs
shlb
cmp
ljmp
lret
jg
cbtw
mov
jb
cltd
cmp
cli
call
lcall
mov
inc
rorl
dec
sbb
aad
lock
sti
pop
jae
xor
and
push
out
rclb
mov
in
test
nop
add
push
cld
cli
outsb
pusha
cmp
scas
mov
repnz
fwait
cmpsb
fnstenv
xchg
out
dec
inc
push
mov
ret
sub
push
xchg
and
jmp
mov
sarb
xchg
inc
rep
movsl
repnz
lret
pop
rdtsc
push
jbe
ljmp
mov
add
test
push
test
push
cli
cmp
xor
and
adc
mov
mov
dec
movsb
inc
fistpl
add
xor
pop
loopne
popf
add
adc
inc
ret
adc
jmp
test
pop
dec
out
mov
call
jl
lods
or
in
or
cmc
stc
sub
andb
lea
addr16
cmp
add
push
negl
sti
xchg
mov
dec
mov
sub
ret
xor
pop
cmc
cwtl
xchg
jae
mov
and
inc
xor
inc
adc
test
stos
cmp
xchg
xchg
fdivs
jg
movsb
jge
push
cld
or
and
movsl
out
mov
imul
xor
pop
mov
push
rol
mov
mov
adc
jle
enter
rcrb
enter
in
sub
mov
iret
imul
xchg
pop
lret
inc
in
sub
popa
xchg
arpl
cmpl
and
and
inc
cld
sub
jae
pop
lret
ja
outsb
add
cmpsb
fimuls
loop
fcomps
cmp
lcall
lods
lods
test
subl
loopne
rclb
xchg
das
or
ss
js
in
mov
fwait
scas
mov
popa
add
sub
mov
in
mov
or
cmpsl
mov
popa
jb
out
dec
push
inc
pop
cmc
fidivrl
sbb
cmc
test
or
push
mov
push
in
adc
fcmovb
imul
jecxz
loop
repz
xor
xor
call
test
dec
xor
push
sbb
xchg
outsb
or
xchg
sbb
mov
cmp
lret
xor
icebp
jo
pop
lea
jp
je
adc
add
iret
popa
shll
cmpb
aas
insl
xor
and
bound
cwtl
inc
cmp
cltd
inc
in
cmp
mov
imull
or
std
sub
cmp
ss
jae
arpl
dec
scas
ret
and
and
push
std
xor
scas
mov
inc
in
cltd
cmp
jo
aad
add
pop
mov
aaa
pop
lds
idiv
pop
insl
inc
mov
in
aad
push
sub
rcl
pusha
mov
push
push
negl
mov
xor
xor
or
pop
out
inc
sahf
mov
jno
inc
insb
add
adc
imul
into
cmp
mov
mov
scas
jge
mulb
lods
push
pop
pusha
test
sbb
xchg
popa
sahf
mov
imul
add
mov
pop
into
lret
adcb
test
sub
iret
popa
sbb
mov
leave
xor
push
lock
jg
mov
or
fisubl
dec
cmp
repnz
leave
imul
mov
and
push
in
call
adc
push
mov
push
sbb
lret
in
sbb
and
in
dec
mov
push
pop
mov
jne
shl
add
mov
push
push
add
and
xchg
mov
movsl
lea
xor
xchg
or
in
inc
fcomps
mov
aam
mov
adc
leave
imul
dec
cld
aad
adc
fistpll
dec
in
mov
push
xor
aaa
push
int3
fcos
lods
cwtl
jae
call
inc
add
push
adc
popf
cmp
pop
into
xchg
call
das
push
jge
cmc
inc
or
jp
lock
insl
xorl
mov
push
push
aas
push
mov
je
jnp
mov
sub
mov
push
data16
pusha
movsl
aas
outsb
cmp
mov
decl
mov
pop
jg
fbstp
sub
mov
push
xchg
repnz
sbb
test
adc
inc
xor
and
xlat
mov
pop
mov
popa
pop
add
cs
ffree
cmc
cltd
jmp
xchg
jns
push
dec
pop
jp
xor
mov
lret
les
out
sbb
mov
es
dec
jecxz
scas
sbb
jno
shll
sub
xchg
test
mov
inc
int3
dec
cmc
pop
aam
or
mov
mov
jl
cltd
mov
lahf
movsl
xor
ss
mov
scas
hlt
insb
cmp
into
test
mov
dec
ljmp
iret
cmp
cmc
pop
dec
test
in
xor
adc
xchg
mov
inc
sbb
int
iret
sbb
xlat
cld
inc
cli
pop
stos
sahf
xchg
mov
shlb
pushf
fwait
cmp
leave
mov
add
addr16
test
mov
cmp
std
push
mov
lds
pusha
fstl
js
pop
popf
mov
rcrl
mov
imul
push
mov
mov
out
xchg
mov
push
xchg
xchg
frstor
cltd
xchg
mov
and
push
jb
lret
in
inc
pop
sti
imul
push
aas
adc
lods
aad
jmp
fisttpll
push
mov
mov
sbb
je
aam
mov
out
js
mov
xchg
sbb
push
rcr
cmp
mov
jnp
js
mov
push
test
and
aas
add
inc
pop
mov
sub
in
jb
pop
sub
les
testb
or
cld
inc
cmp
mov
aam
ja
sub
dec
aaa
xchg
mov
xor
pusha
xor
cwtl
adc
dec
mov
mov
inc
mov
fcoml
push
adc
cli
sub
out
les
cmp
or
mov
and
aas
add
les
scas
adcl
out
pop
and
mov
addr16
dec
push
or
jmp
mov
aam
orb
pop
dec
aam
sub
xchg
mov
xchg
cld
addr16
movsb
jae,pn
pushf
hlt
dec
adc
fnstsw
cld
xchg
adc
pop
inc
mov
add
pop
cmp
fbld
mov
cwtl
stos
push
inc
jo
insl
cmp
add
add
pop
aam
adcl
lcall
sbb
fwait
mov
ret
int3
popf
pop
xor
inc
inc
cld
mov
xlat
sub
cvtps2pi
xchg
aam
mov
mov
jb
addr16
imull
jb
mov
mov
cmp
push
sbb
int3
push
add
mov
jecxz
pop
cmp
sti
and
dec
shr
mov
mov
ja
int
ds
mov
adcb
mov
and
sti
negb
icebp
mov
dec
xor
inc
and
icebp
inc
xlat
lea
aam
je
pushf
mov
rorl
addr16
out
adc
dec
push
mov
xchg
js
cmp
movsb
int3
push
in
mov
dec
cs
cmp
sub
in
mov
cmpsb
test
scas
addr16
adc
jmp
push
and
mov
jge
popa
in
jo
mov
iret
fildll
add
xchg
mov
xlat
insl
les
sub
mov
xchg
mov
mov
push
sub
dec
aaa
fidivs
ficomps
rol
inc
mov
push
out
pop
push
cmp
and
mov
mov
cmp
pop
mulb
adcb
cld
push
and
aam
bound
jne
imul
fisubrs
mov
jle
inc
addr16
mov
into
pop
push
das
lcall
mov
sbb
cmp
dec
nop
stc
mov
mov
fwait
add
push
fisttpl
loope
je
cmp
sub
jne
xor
test
call
xchg
sti
pop
push
dec
adcl
lret
in
fwait
mov
dec
dec
outsl
iret
sbb
xor
xor
repz
shlb
xchg
sub
scas
xor
push
rcll
stc
std
insb
mov
movsl
or
mov
or
jg
fbld
ret
insl
xchg
test
scas
push
loope
sbbb
cmp
jne
and
mov
or
dec
test
cli
pop
aaa
imul
daa
stos
jecxz
bound
fwait
mov
sub
pop
xor
inc
mov
inc
inc
or
gs
xchg
mov
pop
cwtl
data16
pusha
sub
add
add
fidivrs
mov
mov
iret
mov
jecxz
inc
cmp
sub
cmp
pop
nop
xchg
adcl
or
fdivrl
negb
lock
xor
jne
repnz
add
inc
shr
pop
or
gs
sbb
stc
aas
mov
sub
out
ljmp
adc
ficomps
int
adc
aad
push
rorb
loope
cs
jne
outsb
loop
and
mov
or
mov
cmp
movsl
enter
mov
xchg
or
jno
es
sub
jl
adc
icebp
outsl
shrl
cmp
repnz
loop
mov
rorl
or
xor
pop
clc
lahf
gs
mov
inc
jmpw
dec
mov
and
cli
call
ret
test
stos
jge
push
loope
dec
push
ds
loop
andl
pop
sub
push
cmp
push
jmp
push
rol
adcl
push
inc
sarl
cmp
cmpsl
lock
fisubrs
fwait
cmpsb
xor
mov
icebp
pop
inc
inc
mov
shrl
orb
js
fs
and
clc
js
gs
and
sub
repz
orl
add
jbe
ret
fisttpl
loopne
xchg
push
test
jne
xor
scas
mov
jbe
ror
cmp
out
stc
push
mov
adcl
xor
pop
lcall
stc
outsb
into
inc
shrb
add
mov
mov
rorl
fwait
lret
jae
mov
fldln2
gs
cmc
and
subb
subl
fnstcw
push
add
xlat
push
ret
testl
ds
loope
int
test
cwtl
xchg
jbe
mov
xor
xor
push
adc
adcl
xchg
xchg
sarl
dec
cltd
mov
or
sub
lock
icebp
pop
mov
inc
shrl
or
pop
pop
lret
outsl
xchg
mov
mov
loopne
or
enter
mov
jle
in
cmp
mov
ret
add
loopne
mov
arpl
dec
lods
and
mov
jbe
adc
pop
stc
push
cld
add
dec
call
ja
sarb
cltd
mov
ljmp
pop
push
shl
insl
mov
inc
rcl
jp
cs
lret
sbb
clc
sbb
xor
add
cmpps
inc
popf
fdivl
flds
cmp
adc
insb
sub
mov
mov
sbb
je
lahf
loopne
push
ja
mov
cmp
cmc
adc
push
cmpl
xchg
push
repnz
xlat
fcmovbe
jg
mov
mov
push
sbb
leave
mov
mov
mov
jecxz
xchg
or
fs
orb
push
xchg
fcompl
lods
pop
call
orl
outsl
jmp
mov
xchg
imul
mov
je
pop
repz
aam
xchg
dec
out
sbb
mov
jne
push
sbb
mov
ret
out
in
push
and
movsb
xchg
mov
xor
sbb
rcrb
xchg
pop
in
inc
scas
pushl
fmuls
orb
pop
lea
lcall
or
in
fadds
lods
mov
sti
fildl
cld
insb
cmp
scas
add
jle
fldl
add
call
rorb
arpl
lds
pop
mov
roll
movsb
insb
out
mov
in
dec
sub
sub
add
pusha
xor
mov
adc
cmpsl
arpl
pop
sub
out
aam
fiadds
mov
mov
or
cmc
ror
repnz
dec
pop
xchg
scas
xchg
jne
outsl
ret
cmp
subb
and
inc
sbb
jbe
leave
xchg
dec
into
shlb
nop
jb
add
mov
shll
push
add
cli
or
cmp
push
sti
jne
sbb
add
push
fisttpll
inc
call
out
jb
push
cmp
rol
xchg
dec
push
in
fistpl
push
je
dec
pusha
sub
xchg
xor
cwtl
stos
icebp
sub
xchg
dec
out
dec
adc
sub
sarl
out
cwtl
mov
mull
lds
fistpl
or
jmp
fistpll
jp
cmpb
push
daa
into
outsl
pop
xchg
mov
fcomps
xor
andb
mov
sub
xchg
cmp
xor
cmp
int3
fcmovb
outsb
cwtl
mov
dec
loop
pop
adc
adc
push
sub
jnp
popf
stos
cmp
ret
mov
std
std
push
or
test
lock
and
pop
xchg
dec
push
pop
test
xlat
popa
lret
sarb
cmc
pop
mov
xor
pusha
lcall
enter
lcall
enter
or
call
sahf
int3
pop
jl
cwtl
add
sub
inc
rorl
daa
test
fnstenv
mov
scas
xchg
je
or
sbb
clc
push
lock
xchg
push
fwait
push
cmp
aam
fcoml
mov
or
out
popa
lret
mov
das
push
dec
mov
pop
sbb
xor
or
ret
jle
inc
xchg
mov
adc
sbb
and
es
cmpsl
in
inc
mov
pushf
cmpsb
inc
jno
jle
xor
or
enter
mov
adc
ja
out
add
je
ljmp
outsl
dec
aas
imul
push
cwtl
mov
sub
les
lret
sub
mov
xchg
jle
ljmp
enter
xchg
mov
incl
and
jb
mov
push
lods
daa
in
repnz
cmp
sub
push
push
sbb
dec
jecxz
scas
cltd
mov
outsb
fildl
xor
cmp
pop
mov
in
and
jns
mov
push
pop
lea
add
cli
and
popf
ret
dec
outsl
pop
mov
xchg
ja
jp
add
fidivs
mov
push
sub
fmuls
cmp
out
mov
jae
mov
inc
shrb
mov
leave
aam
xor
mov
dec
dec
inc
xchg
pop
pushf
aaa
xor
popf
xor
jbe
push
xchg
xchg
jp
or
insb
sahf
dec
cmc
jbe
test
or
hlt
pop
add
mov
rolb
pop
sub
sete
cmp
adc
cltd
jmp
stos
pushf
inc
stos
jo
sbb
aas
adc
dec
les
and
cmc
mov
lods
roll
adc
pushf
pop
sub
xchg
lds
ja
mov
mov
movsb
pop
das
xor
and
enter
xchg
inc
push
lcall
add
and
ficoms
lock
stos
nop
test
jl
dec
cmpb
sbb
jbe
pop
js
lret
add
out
push
xor
popf
inc
push
sbb
stos
lahf
and
jo
std
mov
les
pop
andl
pop
rdmsr
fmulp
mov
ljmp
sbbl
lcall
stc
mov
cmc
addb
jp
lahf
mov
mov
in
sub
daa
jecxz
inc
push
pusha
scas
adc
das
in
mov
sub
insl
mov
cwtl
jne
mov
aaa
pop
hlt
jb
sbb
push
or
inc
testb
lahf
xor
ficompl
adc
les
imul
xor
sti
xlat
jo
shl
pop
imul
fcmove
jo
adc
and
imul
push
or
sbb
jne
icebp
lahf
mov
fldenv
jns
and
adc
or
in
shr
lods
mov
arpl
nop
mov
fsubs
mov
mov
and
lahf
arpl
aad
iret
cmp
aam
push
insl
jb
test
cld
dec
and
xor
jo
into
jecxz
mov
out
jnp
mov
scas
and
inc
mov
roll
mov
inc
mov
rorl
sub
xor
adc
and
cmpsl
cmpsl
adc
in
outsb
cld
imulb
cmp
mov
mov
imul
lret
mov
push
rcrl
xchg
sti
aas
push
sahf
jecxz,pn
mov
mov
mov
sub
int
push
addl
in
dec
inc
pop
stc
adc
cmpsl
sbb
jnp
je
and
hlt
movsl
cld
add
add
setg
and
fnstsw
xchg
pop
push
addr16
data16
xor
sub
xchg
call
mov
inc
dec
cltd
dec
jge
jp
lds
cmp
leave
out
pop
xchg
mov
fwait
xor
std
mov
pushf
insl
les
pop
push
sbbb
xor
pop
sahf
fsub
ljmp
push
insl
aaa
jp
or
cld
xor
loopne
xchg
xchg
push
xchg
in
sbb
and
jno
mov
mov
mov
lea
xchg
adc
mov
cmp
ss
pop
jge
lods
xchg
push
xchg
push
rcll
sub
outsb
jmp
add
cli
outsb
orb
cmp
xlat
or
and
cwtl
cmp
sub
push
push
cmc
gs
xchg
xchg
cmp
xor
jecxz
or
sahf
dec
adc
push
xorb
arpl
stc
pop
sub
fwait
mov
jns
inc
out
cvtdq2ps
aas
and
jnp
out
mov
mov
sbb
insb
jg
pop
or
pop
roll
mov
in
adc
out
mov
xor
sbb
test
lret
int
sahf
xlat
add
inc
sub
sahf
pop
add
ds
xor
mov
mov
clc
jg
or
sbb
xchg
dec
repnz
fcompl
sbb
pop
imul
lahf
jb
std
pop
or
subl
xchg
pop
arpl
pop
mov
mov
filds
cwtl
arpl
pop
stos
sub
xchg
dec
adc
out
adc
and
lock
mov
jbe
mulb
mov
or
sbbb
or
mov
cwtl
sub
shl
jno
sbbb
inc
fdivs
xor
fmulp
or
sbb
xchg
sbb
setl
adc
in
mov
xorb
and
push
je
ds
mov
out
dec
mov
mov
sbb
adc
mov
xor
jae
cli
call
int
mov
mov
ljmp
testl
ja
push
xor
daa
aam
mov
mov
inc
fidivs
cmp
or
aam
imul
test
test
sub
mov
xchg
pop
pushf
mov
or
popa
lds
sti
cs
adcb
push
jb
pop
cmp
and
psllq
out
xchg
sbb
mov
scas
dec
inc
arpl
jo
lret
ds
imul
dec
clc
sbb
fsubrl
rcrl
pushf
es
test
imul
push
mov
gs
pop
inc
out
xor
fldenv
jae
dec
adc
add
fldln2
pusha
out
push
sbb
xchg
mov
popa
pop
jns
add
and
movnti
loop
jne
mov
mov
out
gs
fisttps
sub
jecxz
shll
jno
scas
jl
sub
adc
hlt
xor
cli
stos
adc
mov
cwtl
mov
das
adc
add
push
adc
movsl
std
push
xchg
test
adc
hlt
xor
shlb
mov
pop
pop
mov
loopne
add
add
xor
jmp
sub
arpl
xchg
mov
sub
es
jne
pop
lods
and
sahf
jae
jo
adc
adc
pcmpeqb
pop
fdiv
xor
mov
jb
adcl
push
adc
icebp
push
or
jp
and
mov
jp
mov
pop
data16
add
adc
popf
fdivl
jmp
add
mov
xchg
hlt
sbb
cmpsl
mov
and
dec
pop
push
ja
sahf
daa
scas
fcomp
cmc
adc
sub
add
push
sub
sti
add
shlb
fwait
dec
mov
push
rcl
pop
cmp
outsb
rcl
insb
mov
mov
dec
lret
pop
sbb
xchg
mov
mov
and
je
enter
rcr
out
mov
icebp
outsl
mov
mov
je
aaa
pop
aad
or
mov
stos
xchg
pop
push
or
sub
xor
leave
cmp
clc
loope
adc
or
lcall
dec
insl
xbegin
xor
mov
adc
or
jne
push
xchg
mov
or
gs
ja
sahf
sbb
cmp
pop
fucomip
mov
ljmp
and
mov
addr16
mov
aam
pop
into
lcall
inc
iret
mov
fwait
pusha
addr16
aaa
push
out
das
iret
or
gs
incl
clc
inc
cmp
movaps
lcall
xchg
rcr
pop
inc
xor
push
lar
loope
cmp
mov
jbe
jl
mov
repz
xchg
sbb
sahf
sbb
mov
adc
idivl
into
xchg
mov
inc
or
scas
sub
and
or
mov
and
das
movsl
inc
insl
jp
andb
push
push
aaa
jmp
fdivl
hlt
lcall
mov
sub
fmull
outsl
out
push
insl
stos
sub
out
iret
push
aas
fs
jl
adcl
shll
jmp
sbb
nop
cs
jg
into
loope
and
fnstenv
jp
push
fwait
push
dec
leave
enter
add
in
inc
sahf
hlt
sbb
jo
cmp
or
mov
and
cmpb
push
aaa
push
dec
fdivl
lahf
inc
paddd
fsub
mov
mov
repnz
dec
sub
call
ret
ret
xchg
inc
xchg
mov
jl
xchg
leavew
xor
sub
push
jl
mov
push
cs
into
mov
movsbl
sti
bnd
xchg
push
and
mov
out
fwait
aas
outsb
ja
faddl
sti
insb
lea
mov
addr16
shll
dec
fmull
cmp
sbb
xorb
xor
push
je
mov
in
idivl
lods
dec
and
jp
sbb
iret
shl
and
mov
pop
insl
scas
xchg
sbb
cmp
and
adc
sub
mov
push
lock
and
lret
outsb
jb
pop
xor
loope
aad
test
fidivrl
sti
imul
cs
dec
cld
ret
or
xor
push
inc
inc
cmp
orb
and
xor
decb
je
lods
inc
xor
jle
cmc
es
lret
je
icebp
nop
jle
aad
mov
jns
pop
ja
ljmp
outsl
sub
out
inc
mulb
test
ret
jl
in
popa
gs
mov
fildl
xchg
adc
inc
mov
push
nop
push
push
jbe
addr16
cmpsl
cli
fs
andl
inc
sbb
inc
fisubrs
test
or
rcll
lods
repnz
push
mov
loopne
pop
aas
insl
and
xchg
mov
insb
pop
mov
lret
fiadds
xchg
sub
fdivl
push
fwait
es
mov
sub
inc
jge
es
push
mov
sub
jp
ret
lock
lret
scas
cltd
js
dec
pop
sbb
fwait
sub
fcom
repz
xor
ret
scas
mov
mov
cmp
adc
aas
cltd
dec
outsb
jge
fsubl
xlat
outsl
push
xor
xor
mov
ljmp
lret
xor
or
ret
cltd
mov
push
inc
push
mov
pop
cmp
and
jno
jl
and
cmpsb
adc
lock
ret
or
test
push
push
stc
sbb
pop
adc
mov
add
sti
loop
sti
jae
pop
mov
push
or
mov
sbb
aas
out
in
mov
mov
adc
and
inc
dec
fwait
add
mov
into
ret
inc
aad
push
or
arpl
mov
ret
scas
jg
pop
aas
add
aam
sbb
pop
cmp
test
sbb
adc
jmp
andl
dec
mov
sub
cltd
inc
incl
adc
stos
movsb
xor
jae
icebp
insb
sbb
imul
addl
dec
jl
pop
mov
out
adc
icebp
xchg
sbb
ja
mov
or
lods
push
inc
sub
cmp
and
add
mov
mov
enter
mov
pop
pop
subl
cwtl
inc
in
mov
mov
mov
es
adc
cli
xchg
mov
cwtl
jbe
inc
scas
cmpsl
xorb
fadds
and
sbb
pop
imul
pusha
cmpsl
cmp
or
imul
dec
and
pop
test
xor
mov
and
push
lods
pop
insl
imul
jmp
push
ljmp
adc
inc
into
push
repz
out
int3
iret
sub
pop
enter
xchg
mov
jbe
jle
loope
or
fiadds
jb
icebp
out
aas
hlt
mov
lds
pop
mov
push
outsb
sub
dec
add
cwtl
rorl
rcl
cld
sbbb
ficomps
push
mov
movsl
sbb
ss
cmp
repnz
movsb
mov
mov
jg
mov
adc
sbb
push
clc
fisubs
xchg
test
out
addr16
jae
mov
sbb
cwtl
aas
mov
ror
sub
push
pop
sbb
jl
lahf
xchg
add
in
jmp
inc
ja
push
sbb
int3
push
loope
xor
mov
dec
inc
loopne
adc
mov
xor
outsl
sub
outsl
test
fwait
out
hlt
and
mov
push
mov
jae
fmul
sub
push
pop
cmpsl
addr16
jle
xor
sbb
hlt
es
jae
jle
cmp
mov
jns
icebp
pop
cld
ret
inc
or
or
sbb
mov
insl
test
mov
shl
ss
xchg
mov
sbbb
sbb
fstp
and
movsl
addr16
scas
scas
mov
loop,pt
fwait
cld
cmp
mov
dec
stc
test
test
inc
popf
sbb
dec
push
add
adc
out
mov
add
js
sbb
aaa
repnz
lret
mov
lahf
or
mov
dec
insl
shr
cmp
lahf
pushf
pop
cmp
mov
loop
nop
push
pop
test
pushf
mul
mov
sub
out
mov
loop,pt
jbe
adc
xor
xchg
jne
or
cmp
sbb
pop
pop
push
loope
lods
mov
sub
dec
test
stos
jbe
bound
ret
inc
push
lea
jecxz
push
dec
jnp
inc
sbb
xor
enter
mov
popa
movsb
inc
inc
cmp
adc
call
faddl
sahf
cmpsb
mov
fldt
cwtl
jp
dec
lods
outsb
lret
movsl
in
adc
cld
or
cmp
pop
pusha
push
inc
dec
xor
aas
mov
mov
xchg
sbb
and
push
sbb
ljmp
mov
nop
xchg
jge
lods
jns
lea
std
enter
add
out
pop
repnz
xchg
addb
sub
mov
add
cmp
xchg
mov
push
sbb
loope
fwait
or
and
jbe
jae
imul
loopne
cmp
aad
jno
sbb
dec
lahf
jbe
mov
movsl
adcl
outsl
pop
push
and
addr16
mov
out
cmp
mov
movsl
or
add
es
mov
xchg
push
inc
jne
sbb
cmp
loop
shll
jle
fdivl
mov
jae
into
addr16
js
aam
push
pushf
lahf
rol
mov
in
inc
sahf
push
outsb
addr16
scas
and
xchg
incb
jl
aas
xchg
jb
ret
xchg
add
orl
pop
inc
fucom
jb
ljmp
fldcw
ljmp
lds
add
push
inc
cmp
jmp
mov
inc
jne
pop
aad
cmc
and
mov
cltd
sub
lods
sbb
hlt
jns
iret
aad
rorb
imul
inc
sub
mov
jecxz
imul
jno
fidivrl
fmuls
lods
pop
push
insb
sahf
cmpb
sarb
out
and
add
inc
mov
sarb
jecxz
mov
lret
mov
pop
cltd
xor
xchg
mov
shl
and
popa
and
das
notb
jg
adc
pop
mov
rcl
out
inc
cltd
sbb
xchg
insb
cwtl
push
sub
mov
mov
push
pop
ret
insl
pusha
xchg
sbb
push
pop
push
movb
std
mov
sub
stos
das
lret
repz
mov
pop
jge
sbb
or
xchg
sub
ficompl
xchg
mov
mov
je
cmc
xor
mov
jg
negb
lahf
mov
pop
xchg
adc
rclb
mov
xor
in
lock
sbb
sahf
loope
xchg
aam
ffree
mov
push
cmpsb
ret
pop
scas
jns
fsub
sbb
jmp
imul
adc
repz
mov
add
fcmovu
jae
xchg
loop
aam
inc
adc
mov
insb
mov
sub
sarl
leave
out
mov
mov
push
pop
dec
arpl
xlat
xor
sahf
pop
shr
push
test
or
mov
lret
cmp
cmpsb
mov
sbb
insb
or
movsl
fnstcw
aaa
std
std
mov
cmp
push
movsb
jle
imul
test
loope
int
fimull
pop
mov
inc
aam
cmp
sub
data16
fs
out
mov
cli
xor
xchg
xor
push
lahf
enter
xchg
das
cwtl
adc
jne
push
and
sub
mov
dec
mov
sbb
lds
rclb
push
jmp
cli
and
pop
xor
cmp
aaa
lret
aam
or
nop
add
pop
adc
sbb
ss
das
in
push
loop
out
mov
scas
loopne
mov
adc
add
andb
fwait
cmpsl
loop
shlb
mov
or
insl
mov
subl
inc
dec
cmp
hlt
xchg
adc
cmpsb
pop
add
or
addr16
sub
cmp
pop
mov
nop
in
jge
mov
or
inc
cmp
ret
popl
lods
fsts
repnz
sbb
jmp
inc
jmp
push
add
fxtract
int3
mov
jge
dec
imul
aam
cmc
out
xchg
in
pop
push
imul
sub
imul
xor
rolb
mov
pop
cmp
inc
jno
push
sub
fsubp
xchg
jno
and
mov
or
add
fmul
ror
or
sbb
lods
or
in
cmp
mov
cld
cmp
xor
push
iret
iret
pop
arpl
mov
push
xchg
fsubp
add
xlat
stos
or
popa
insl
inc
insl
mov
repnz
xor
jae
je
mov
inc
dec
lcall
and
sbb
xchg
xchg
lds
test
sahf
icebp
cmp
dec
mov
shrl
dec
notb
or
mov
les
popl
pusha
mov
bound
divb
mov
mov
sub
ljmp
scas
dec
pop
mov
sbb
scas
adc
adc
and
mov
mov
iret
xchg
roll
fildl
filds
pop
push
jle
insb
xchg
add
cmp
jp
inc
inc
mov
test
rol
fimull
pop
in
scas
mov
test
daa
xchg
rol
testb
xchg
dec
test
inc
or
and
std
pop
loop
xchg
cmpsl
push
push
pop
cld
push
mov
cmp
mov
std
leave
jbe
mov
lcall
cmp
movsl
push
out
hlt
and
mov
pushl
popa
jge
xor
aad
stc
pushf
cmc
sbb
enter
aaa
or
aaa
iret
lock
mov
mov
inc
and
xor
jmp
pop
inc
imull
and
mov
push
mov
cmp
negb
int
or
jb
orl
add
outsb
out
xchg
out
pop
mov
outsb
cmpsb
dec
push
sar
pop
iret
clc
cmp
fiaddl
dec
lcall
pusha
jge
mov
push
and
arpl
mov
mull
fs
push
rcrl
out
testb
lds
cltd
sbb
and
cmp
mov
sbb
jl
test
cmp
dec
mov
or
aaa
jne
int
adc
xchg
mov
out
jnp
mov
mov
sar
daa
mov
test
mov
mov
xchg
repz
aad
and
sahf
sbb
adc
adc
push
mov
or
daa
aas
loope
jge
mov
add
mov
push
xchg
add
xor
cld
and
lahf
mov
and
inc
dec
jl
pop
cmp
sbb
popf
loop
icebp
jb
jb
and
push
adc
push
adcb
pop
push
jmp
es
pop
push
std
pop
push
scas
jge
push
test
mov
ja
mov
popf
pop
push
xor
push
arpl
mov
inc
cltd
in
pop
jge
shll
xor
sbb
iret
and
xchg
pextrw
and
pop
fwait
add
cltd
mov
and
jge
in
dec
or
insl
mov
mov
lds
nop
test
jno
inc
dec
or
cmp
out
fldl
push
dec
cwtl
fs
ss
cmp
jmp
inc
dec
test
xor
pop
dec
mov
pop
incl
sbb
push
cld
sub
cmpsl
in
and
jp
out
insl
mov
cld
outsl
xchg
pop
mov
dec
sbb
into
push
cmpl
aad
mov
insb
cmp
aaa
xor
mov
pop
adc
inc
mov
adc
mov
mov
in
loopne
test
or
dec
adc
or
int3
test
pop
mov
pop
sub
add
mov
cli
add
stc
add
iret
push
jl
inc
enter
jecxz
rcl
mov
loopne
outsl
popa
mov
mov
rcrb
ss
or
xchg
mov
jbe
inc
lds
adcl
outsb
out
std
mov
mov
jle
out
or
jne
pop
inc
mov
icebp
adcl
push
push
pop
push
pusha
xor
xor
out
mov
sub
fs
aaa
or
aam
mov
inc
mov
cs
adc
adc
iret
push
lret
insb
mov
scas
pusha
aaa
jae
mov
add
cwtl
cmp
mov
pop
insl
jl
sbb
fisubrs
aas
in
adc
push
sbb
xorl
popf
pop
into
fistps
jecxz
popa
test
pop
aaa
mulb
sbb
mov
aaa
aad
mov
xchg
pop
dec
imul
push
pop
sbb
pop
subb
sar
and
lea
stos
pusha
mov
aas
cli
or
mov
icebp
cmp
inc
mov
cld
fisttps
add
lods
insl
lret
stos
out
xor
mov
mov
mov
dec
adc
xchg
add
sbb
cltd
or
xor
es
adc
scas
roll
mov
int3
pop
loop
add
aam
inc
decb
and
push
outsl
in
adc
test
adc
sub
hlt
movsl
call
cmpsb
push
jp
inc
sbb
add
leave
lock
lahf
jmp
outsl
mov
insl
sub
jle
xchg
inc
cmp
jp
popf
pop
or
pop
sub
stos
ret
rcrl
or
jne
add
xor
fbld
mov
addl
xchg
jae
daa
sarl
dec
jecxz
push
cmpsb
fs
add
and
sbb
inc
dec
int3
pop
add
mov
lret
mov
scas
sub
into
int3
out
aas
xchg
aam
je
sahf
inc
mov
mov
fisubrs
xor
dec
push
inc
mov
cs
pusha
jmp
add
cmp
icebp
adc
repz
mov
pop
sbb
push
pop
cmp
or
pushf
xlat
in
and
inc
test
inc
das
sbb
sub
les
mov
dec
inc
test
adc
or
xchg
push
mulb
stos
lea
fdivl
push
mov
dec
fcoml
aad
mov
adc
arpl
loope
ds
loopne
cwtl
jb
jg
sub
push
or
mov
into
leave
xor
mov
movl
rcl
jnp
popf
or
jl
push
repnz
mov
icebp
ss
mov
inc
add
in
popa
in
adcb
mov
aam
jecxz
mov
cmp
sub
inc
cmpb
fs
push
push
in
xchg
lahf
lock
stos
mov
and
mov
sbb
push
add
into
adc
enter
ret
dec
pop
jne
or
in
cs
jne
movsb
mov
add
lea
fstpt
in
mov
fcompp
dec
mov
adc
add
and
fwait
cmpsb
std
cmp
inc
je
arpl
mov
mov
adc
out
shl
es
andb
addb
cmpsl
xor
enter
push
cmp
push
inc
fdivrs
iret
in
mov
cs
ss
cmp
xchg
insb
mov
shlb
divb
out
orl
xor
dec
rolb
xchg
add
adc
cltd
mov
movsb
mov
sar
jmp
and
mov
ret
cmpsb
fwait
xchg
push
imul
push
or
lcall
cmc
and
xchg
ja
jl
xor
add
mov
in
push
push
mov
daa
es
push
nop
adc
iret
stos
addr16
or
xchg
ds
ljmp
jmp
dec
sub
cmp
xchg
mov
insl
jb
sbb
int
test
fdivl
dec
pop
adc
test
aad
cmp
adcb
xchg
inc
push
loopne
pusha
stos
mov
cs
loopne
repz
lods
jns
mov
xor
test
adc
pop
adc
sbb
mov
data16
and
das
cli
adc
lds
fiaddl
jge
adc
mov
pop
outsl
shll
stos
jmp
adc
cmp
test
arpl
jl
xor
aad
hlt
sub
dec
jl
lods
adc
jecxz
cmp
and
hlt
mov
xchg
aaa
push
mov
int
adc
shll
cmp
ljmp
pop
lcall
adc
mov
hlt
lock
sub
push
out
enter
mov
loop
pop
outsb
mov
sbb
mov
loopne
jbe
aad
add
xchg
sub
insb
cmp
push
test
ja
rcll
pop
mov
mov
sub
mov
pop
pop
xor
sarl
leave
popf
sub
mov
popa
notb
dec
push
scas
divl
sbb
jns
leave
and
int3
fdivl
fstl
insb
lahf
sbb
push
out
cmp
adc
jns
aas
test
popa
sti
les
push
dec
pop
popf
xor
lods
pop
loop
mov
add
mov
mov
ret
aaa
lea
pushf
mov
inc
or
add
sahf
sub
bound
sub
jmp
int
mov
jecxz
mov
popf
inc
cmp
lods
adc
xchg
adc
lret
clc
mov
and
xor
test
add
out
xchg
mov
sbbl
sub
je
adc
in
outsb
fwait
and
pop
cmpsl
iret
mov
sbb
lea
cld
lret
xor
inc
pop
cwtl
call
aam
inc
sbb
data16
sub
pushf
jno
cmp
test
or
pop
pushf
fdivs
lea
xchg
adc
movsl
je
es
cmp
loop
ficoms
or
daa
jle
adcb
test
adcb
push
pop
nop
loop
push
in
adc
je
push
popa
dec
cmp
xor
xchg
stos
mov
push
inc
add
ss
pop
fisttpll
movsb
pop
bnd
and
add
or
sbb
imul
cmp
push
mov
jae
push
imul
shlb
stc
out
mov
cmp
ja
data16
popf
add
xor
mov
inc
scas
inc
inc
fucomp
or
lcall
jo
mov
cs
loopne
add
xlat
inc
pop
and
leave
dec
sbbl
enter
mov
rorb
inc
addr16
lock
dec
cmp
or
xor
adc
and
cltd
adc
mov
inc
mov
cmp
subl
les
cli
frstor
dec
push
or
push
fwait
and
nop
pop
mov
shrl
icebp
add
mov
aas
mov
lcall
push
cmp
gs
lcall
idivl
xchg
mov
sbb
dec
xor
mov
xchg
adc
test
cmpsl
or
sub
and
mov
ja
movsl
dec
xor
xor
adc
mov
jmp
or
dec
cltd
lods
outsb
push
stos
jns
add
iret
arpl
lds
sbb
fs
sub
xchg
sub
and
mov
sbb
jmp
and
inc
inc
popf
inc
add
xlat
jg
xchg
adc
lret
and
mov
xchg
pop
stos
test
imul
and
lea
mov
sub
scas
pusha
mov
lcall
mov
mov
pop
xor
rcrb
in
pop
loope
mov
xchg
fldt
jl
or
sahf
das
add
repnz
ljmp
mov
clc
jo
add
test
subb
sbb
and
xor
mov
cmp
fmull
and
sbb
xor
adc
out
mov
and
push
outsb
popw
sahf
lret
adc
out
int
mov
push
push
clc
and
adc
adc
pop
add
subb
je
push
ljmp
cmp
inc
popl
mov
xchg
je
gs
and
ret
mov
in
testb
jbe
sbb
cmp
ficoms
sbb
and
push
scas
in
adc
xchg
insl
xor
pop
cld
dec
outsb
xor
es
lds
mov
jmp
ret
out
out
xchg
mov
mov
push
popa
data16
adc
ljmp
ret
cmpsl
push
sub
cmp
mov
imulb
mov
dec
movsb
jecxz
js
test
add
sbb
fidivrs
rorb
jae
jbe
push
shlb
fsub
fstp
cltd
rcrb
cltd
outsb
nop
jne
xor
insb
cmp
cmc
sub
sbb
test
lret
cmp
sbb
pusha
ss
gs
popf
pop
jmp
or
inc
adc
add
and
mov
mov
imul
movsb
decb
lock
adc
cmpl
pushf
outsl
sbb
xchg
add
dec
rcl
pop
test
mov
shlb
mov
xchg
xor
int3
push
repnz
push
inc
pop
inc
into
or
imul
or
scas
mov
and
lret
jbe
mov
or
lock
add
jp
sbb
push
imul
sbb
rcrl
jle
loopne
lret
test
push
mov
fildll
mov
cmc
sbbb
outsb
dec
shll
rclb
add
cltd
cmp
mov
xlat
dec
mov
jns
mov
dec
push
je
pop
in
lret
out
mov
lock
sub
repz
fisubrs
mov
fbstp
jle
mov
or
lods
addl
lods
fscale
pop
imul
negb
jo
loop
sbb
scas
cmp
inc
xchg
fsubrl
leave
dec
lret
nop
cltd
sub
out
and
shlb
inc
in
xor
jle
mov
ret
jnp
cli
jne
pop
xor
or
out
fsubl
popf
mov
fs
and
es
push
mov
jle
imul
jle
xor
add
pop
sbb
mov
xor
movsl
push
cwtl
and
adc
push
scas
cmp
xor
sub
cwtl
mov
fwait
cli
fists
fcmovnu
inc
testl
out
push
dec
imul
mov
push
sub
mov
dec
inc
xor
xor
push
push
dec
sbb
xor
test
xchg
mov
or
jae
inc
sbb
iret
aam
notl
sub
scas
js
pushl
push
out
es
lods
jmp
jb
fidivrl
xchg
ror
or
xchg
xchg
xchg
mov
dec
cwtl
cmp
push
nop
lds
leave
test
ja
mov
sbb
sbb
out
repz
jnp
lods
jge
mov
jne
idivl
clc
int3
leave
xor
dec
inc
mov
or
fistl
sahf
sub
iret
movsl
imul
sub
imul
scas
jb
addl
mov
xchg
sbb
pop
push
xor
test
mov
lcall
jp
xor
jmp
rol
test
dec
pop
mov
push
fldz
or
out
es
js
mov
pop
js
int3
jne
xchg
fcoml
rcl
mov
sbb
and
mov
jno
out
mov
enter
sbbb
or
rorb
stos
scas
cs
jp
out
cmp
and
mov
mov
rol
enter
mov
push
xor
jno
ret
mov
xchg
setp
xor
mov
mov
mov
dec
cmp
mov
inc
dec
cmp
fs
in
nop
fcomp
leave
imul
lds
scas
out
mov
xchg
dec
lods
cmp
sahf
push
sarl
xor
and
fs
dec
or
sbb
sahf
mov
aaa
int3
mov
repnz
out
addl
dec
pop
lds
mov
test
movsl
fnstsw
stos
jmp
fidivs
lock
daa
clc
dec
and
xchg
and
sbb
add
fcomps
addr16
jp
test
adc
lock
daa
cmpb
or
cmp
dec
jne
xchg
adc
pop
mov
clc
xor
out
dec
push
ss
jge
insl
mov
jbe
mov
aas
rol
pop
mov
ret
push
dec
movsl
adc
xor
and
enter
mov
in
outsb
mov
lcall
mov
sub
cmpsb
push
sahf
imul
cmpsb
push
in
mov
ret
sub
aam
add
jmp
loop
fimull
jmp
cmpsb
add
pop
insl
mov
mov
loope
jge
pop
inc
iret
mov
int3
xor
cmpsb
bound
inc
xor
pop
repz
es
mov
jge
imul
popf
inc
out
jecxz
sub
cmc
fnstenv
jmp
jl
adc
scas
mov
jge
jmp
lcall
cmp
sub
push
or
mov
mov
pop
in
shl
mov
aad
arpl
mov
xor
mov
cli
lods
add
sahf
je
push
insb
add
call
nop
pop
fsubr
jbe
out
add
jl
lock
cli
xor
test
dec
push
rolb
cmp
or
aam
rcl
out
lahf
das
mov
movsb
gs
arpl
sbb
inc
inc
idivb
mov
jp
test
add
inc
cmp
loope
adc
insl
call
sbb
cmpsb
test
lods
jb
mov
or
js
mov
mov
push
add
push
clc
mov
fdivr
mov
addr16
fmulp
fildll
in
test
lea
xchg
les
inc
pop
popf
xor
das
out
arpl
fstl
or
into
xor
xor
push
jge
jbe,pt
xchg
push
mov
pop
push
pop
xor
stos
imul
loope
push
out
mov
out
lea
mov
xor
inc
in
sbb
dec
dec
push
enter
in
fsubr
rorb
arpl
sub
xor
pop
dec
icebp
sbb
test
jns
or
and
das
cld
inc
movsb
mov
arpl
xchg
idiv
add
fsubrp
jnp
ljmp
insl
mov
inc
push
insl
cmp
and
xor
mov
dec
mov
mov
cmp
aaa
add
lea
popf
xchg
push
lds
cmp
jmp
mov
mov
xor
cmpsl
inc
das
jmp
bound
pop
cs
inc
xchg
scas
rclb
push
arpl
shl
divb
xor
add
dec
incb
andb
pop
xor
es
push
cmp
sbb
mov
out
out
jp
dec
je
sbb
inc
clc
xchg
cmp
mov
adc
push
pop
imul
mov
into
es
sti
lods
stc
pop
lods
push
je
xor
add
into
rcll
push
aas
test
mov
bound
sub
hlt
out
sub
mov
divb
dec
leave
mov
inc
sub
add
xchg
insb
xchg
pop
scas
pop
mov
and
mov
out
xlat
std
aad
push
mov
jb
movsb
lea
mov
mov
dec
lea
outsl
ljmp
xchg
call
outsb
ds
push
cmp
push
aad
xor
loopne
repz
hlt
dec
sub
sbb
or
inc
fcomps
fisubrs
inc
sub
shrb
mov
jp
xchg
add
cmpsl
sbb
test
movswl
fildl
and
shlb
rcrb
stos
jne
jmp
dec
add
outsl
cltd
dec
iret
xor
jg
cmp
xchg
loopw
jmp
frstpm(287
es
and
gs
aaa
sti
inc
insl
es
sbb
movsl
and
and
popf
jg,pn
pop
or
sub
add
mul
mov
mov
pop
cmpsl
mov
sbb
cmp
fcomp
adc
outsl
mov
xchg
and
ds
xchg
ja
adc
out
xchg
lods
mov
test
mov
jne
push
adc
xchg
mul
and
push
imul
andb
mov
cmpsb
aad
xchg
rorb
pop
push
hlt
pop
popa
test
push
or
mov
mov
loop
into
mov
in
outsl
fs
sbb
adc
cmp
cli
pop
dec
inc
lret
adc
add
andl
dec
mov
lds
mov
add
or
pop
mov
testl
std
leave
pop
lods
test
push
inc
pop
add
pushf
xchg
insb
or
dec
mov
mov
mov
in
mov
fwait
cmc
jns
mov
pop
adc
mov
outsl
add
outsl
movsl
nop
mov
in
out
js
stos
je
sub
dec
daa
add
add
ljmp
jg
jl
lods
add
fnstsw
and
adc
imul
and
or
and
push
xchg
add
imul
sbb
pop
addr16
fldcw
hlt
sub
cmc
jecxz
je
jbe
sbb
pop
and
into
fistl
movsl
adc
cmpsb
or
fsubl
fadds
jbe
jne
leave
addb
scas
test
in
jns
mov
jne
adc
in
dec
xor
and
int3
mov
lret
cwtl
push
ljmp
mov
int3
adc
shrl
jae
pop
inc
push
jge
xchg
or
nop
jle
xchg
xor
test
inc
lock
mov
push
xchg
daa
shr
xchg
push
xor
in
mov
popa
jo
pusha
dec
aas
test
mov
adc
fwait
mov
inc
xchg
inc
inc
push
jmp
dec
in
sub
sub
jnp
pop
insl
xchg
mov
xchg
lods
movsb
std
lret
js
mov
pop
and
jg
add
int3
cmp
push
xchg
addr16
push
ds
push
cli
fstp
and
jmp
cwtl
test
loopne
ja
insb
cmpl
lret
stc
sub
jno
pop
xchg
cmpsl
inc
int3
add
cmp
fistpl
dec
shll
popf
pop
xor
sbb
fistps
push
imul
pop
out
scas
repz
subl
xor
mov
cmp
push
shrb
ret
sub
insb
mov
jecxz
push
xchg
mov
add
xor
daa
mov
in
hlt
lock
dec
adc
pop
add
lods
cltd
jg,pn
mov
sub
shll
stc
push
xchg
stc
cli
mov
push
dec
pop
pop
adcb
insb
lock
mov
cltd
xchg
fisubrs
sti
jbe
fdivl
push
enter
lret
xor
xchg
jbe
ret
movsl
out
clc
ret
cmpsl
sub
jg
cmp
pop
enter
jbe
mov
or
shrl
nop
mull
mov
lret
test
mov
push
push
adc
cmpsb
cld
jae
aas
mov
jne
add
imul
pop
int
mov
xor
and
mov
mov
sub
cmc
repz
pop
fisttpll
je
jno
mov
and
test
or
idiv
loopne
movl
push
stc
sub
pop
outsl
mov
inc
cmp
rcr
jmp
sti
neg
mov
jge
xor
hlt
loope
mov
scas
lods
xchg
cmpb
sub
inc
xor
mov
cmpsb
popa
test
outsb
shrb
dec
xor
push
xor
test
pop
mov
cmp
push
andl
andl
mov
jge
sbb
pushf
push
sbb
in
lds
push
imul
popf
loopne
lret
cmp
mov
xchg
stos
imul
adc
sub
lret
popf
inc
adc
stc
mov
sbb
test
insl
cli
adc
in
popf
data16
divl
sbb
pop
aas
mov
pop
jl
sub
outsl
inc
cmpsb
cmp
shlb
mov
loopne
inc
fs
or
cmp
push
xlat
mov
sbb
aaa
pop
xorl
stos
cmpsb
inc
sub
dec
frstor
xchg
clc
clc
lcall
mov
inc
cwtl
or
or
xchg
cmp
add
mov
or
stos
mov
and
add
or
mov
hlt
mov
inc
pop
aam
push
mov
xor
cmc
mov
data16
mov
cmpsl
aaa
or
int3
das
cltd
fcomps
mov
pop
sbb
jecxz
notl
or
cltd
push
repz
mov
pop
and
icebp
bound
mov
xchg
jmp
loopne
cmp
data16
lret
jmp
jmp
jle
mov
mov
pop
jb
cmpsb
jle
cmp
and
push
sub
in
jp
mov
in
loope
and
scas
popa
ss
jo
add
add
dec
test
aad
aas
hlt
sahf
rclb
andb
dec
cmpsl
mov
cmp
ljmp
outsb
inc
xchg
lods
inc
dec
dec
dec
or
fs
jge
cmovae
je
std
add
pop
mov
incl
call
xlat
movsb
sarb
dec
add
xchg
push
roll
push
push
lcall
fstpt
cmpsl
or
sarb
dec
jo
lahf
xchg
int
mov
cmpb
rcr
pusha
lcall
push
and
in
fwait
add
and
into
mov
in
sub
vhsubpd
xorl
subb
push
mov
jae
xor
in
ds
les
daa
push
jl
sbb
sub
pop
push
pop
push
push
call
mov
loope
lcall
add
lret
sbb
nop
jne
movsb
lock
pop
sbb
adc
xor
sub
nop
push
stos
pop
adc
btr
cmpsb
out
cmpsl
fbstp
sbb
test
fstp
arpl
in
rorb
je
push
pop
mov
cmp
stos
add
xchg
mov
outsl
dec
jge
cmp
lods
cmp
pop
mov
ds
lcall
fcmovbe
xor
repz
data16
cld
fistl
inc
xor
adc
pop
subb
cmpsb
xchg
pop
or
sbbb
mov
insb
and
cmp
jno
add
imul
fst
cli
inc
or
mov
add
mov
dec
mov
insb
int
jge
in
cmp
mov
rclb
popl
inc
push
xchg
sub
adc
push
ficoml
lret
lods
mov
jne
adc
pop
scas
and
or
jge
lods
dec
repnz
out
push
loop
push
and
adc
xor
mov
xchg
sub
push
lock
or
in
ret
out
mov
push
dec
ret
rcrb
mov
dec
push
out
js
repnz
imul
inc
out
scas
adc
cmpsl
outsb
sub
cmp
mov
cmp
jecxz
sarl
sbb
les
or
pushf
cmp
flds
in
stos
push
imul
stmxcsr
jmp
xchg
stos
push
mov
inc
mov
cmp
orl
addl
lds
mov
lds
or
mov
ja
test
insb
push
into
jge
orb
or
repz
push
sahf
out
roll
ja
xor
mov
push
ficoms
in
pop
or
xchg
aaa
movsl
enter
sarl
out
mov
sub
fstpt
fadds
cmpsb
and
enter
addb
add
rcll
dec
pop
adc
push
popa
mov
lock
jge
mov
mov
mov
out
jge
inc
sbb
divb
inc
mov
sbb
cmp
arpl
jg
lods
inc
sbb
cltd
ss
xor
ret
sub
fwait
xchg
movsb
ds
sub
popf
psubq
loop
movsb
xor
xchg
inc
out
mov
push
ret
cli
lret
cmp
outsl
lret
mov
sahf
in
int3
ss
stos
pop
movsb
dec
loope
int
addr16
cmp
call
jns
sarb
in
repnz
roll
stc
icebp
jbe
jno
andl
insl
lods
jne
je,pn
nop
shlb
mov
imul
sbb
sahf
icebp
inc
rcr
lea
or
adcl
aaa
pop
mov
push
mov
addb
bound
sarb
push
push
in
sbb
mov
and
mov
outsl
push
pop
and
mov
sti
xchg
cmp
add
sti
and
fldlg2
std
shl
cmp
cmpl
testl
xchg
fxch
fs
aam
lcall
mov
lret
orb
sbb
ret
mov
sarb
lcall
daa
add
xchg
fwait
sub
inc
movsb
lea
mul
scas
inc
cmc
push
rcr
incl
clc
insb
fbstp
cmc
xchg
mov
push
adc
cmp
push
push
cld
pop
jmp
arpl
stos
dec
addr16
repnz
sbb
lods
lock
stos
cmp
cltd
mov
inc
dec
in
test
pop
call
mov
clc
sbb
jnp
add
fbld
shrl
out
or
imul
xor
sbb
jne
dec
nop
add
or
fcoml
rol
call
mov
jno
mov
arpl
ds
popa
sahf
ret
movsb
in
xchg
mov
mov
xchg
decb
sahf
ds
push
jno
cmpsb
lds
jl
mov
inc
iret
in
adc
dec
push
and
cwtl
sbb
in
mov
jne
push
sbb
mov
lods
negb
loope
ret
cmp
clc
inc
or
mov
push
bt
cli
add
xor
popa
test
pop
mov
inc
movsb
andl
pusha
pop
xchg
jbe
mov
adc
mov
inc
flds
test
fistpll
and
or
mov
xchg
sbb
or
clc
in
fucomip
jl
xchg
loopne
lea
shlb
adc
in
mov
sub
popa
cmc
mov
cmp
and
sti
pop
cmp
outsb
repz
lock
stos
mov
push
and
xlat
sbb
test
fidivl
inc
mov
xor
or
cld
ret
dec
xlat
fsubrl
mov
fs
pop
mov
or
loope
cmp
dec
ret
andl
pop
lret
push
out
dec
stos
mov
adc
dec
add
in
xor
repnz
mov
scas
jp
pop
mov
lea
les
xlat
xchg
movsb
ds
jl
adc
fldln2
outsb
aad
push
push
hlt
add
push
cmp
hlt
mov
iret
scas
adc
adc
sbb
movsb
sbb
dec
xor
or
mov
scas
xor
lds
mov
add
sbbl
mov
mul
je
in
push
push
xchg
add
int
lahf
adc
std
ret
fs
aam
repz
int3
cwtl
or
ret
out
jecxz
mov
add
or
jge
mov
xchg
bound
addr16
sub
mov
inc
bound
mov
data16
jnp
lret
push
push
sub
in
or
inc
stos
lcall
fs
aam
aad
cltd
adc
mov
xchg
repnz
or
mov
mov
mov
sbb
inc
imul
bswap
icebp
or
lea
arpl
mov
mov
inc
mov
mov
add
inc
cs
loopne
or
push
ret
xchg
loopne
movsb
outsb
repz
test
mov
add
sub
pop
mov
or
insb
xchg
roll
dec
cmc
push
mov
cli
pop
jb
movsb
in
xchg
mov
push
mov
cmp
adc
pop
repnz
sub
and
insl
or
mov
jl
mov
insb
out
lret
push
add
pop
xor
xor
jae
inc
mov
add
lods
in
dec
push
and
lods
std
push
shrb
ljmp
sub
repz
aaa
cld
mov
mov
dec
jb
mov
outsl
push
lcall
xor
xor
mov
sarb
sbb
inc
ret
pop
or
cmc
or
addr16
repz
mov
mov
shlb
arpl
clc
in
cli
or
mov
or
fmulp
inc
xchg
insb
xchg
mov
or
aad
in
sti
mov
std
aas
or
pushf
adc
mov
xor
lods
mov
dec
add
sbb
mov
cmp
add
shll
mov
ds
jecxz
push
nop
add
xor
jp
jno
pop
rorb
js
mov
sbb
add
pop
daa
push
push
imul
insb
out
jp
add
mov
cltd
xlat
jo
sar
sbb
aas
rcl
inc
ljmp
in
sarb
mov
push
js
push
lea
jl
ljmp
push
ljmp
ret
inc
test
out
xor
nop
pop
bound
cmovbe
test
jecxz
cli
push
or
sbb
xchg
fsubl
inc
or
aam
xchg
fldenv
xor
gs
int
cmpsl
or
pushf
xor
mov
aad
add
adc
mov
rorb
test
push
imul
fcom
inc
sahf
cmc
dec
or
aaa
das
das
addr16
mov
jecxz
push
and
xor
andb
out
push
test
shl
ljmp
lret
es
sti
lea
push
jp
xchg
roll
xchg
jne
push
and
in
sbb
mov
lods
xlat
xchg
call
call
jnp
enter
loope
or
mov
cli
add
mov
hlt
mov
mov
outsl
add
sub
push
inc
mov
pop
pop
inc
ss
inc
cmp
sub
mov
xchg
movsb
popf
mov
int3
lcall
lea
jg
lret
mov
out
addr16
aad
jle
dec
movb
das
psrlw
pusha
push
arpl
or
in
mov
in
hlt
les
xor
incb
in
pop
mov
push
ret
jbe
test
mov
push
sti
jns
nop
adc
mov
cld
and
sub
test
cmp
and
movsb
dec
jb
int3
data16
add
imul
pop
or
cmp
pop
clc
or
test
cmp
arpl
dec
xor
into
or
or
mov
jl
leave
dec
pop
fidivrl
cs
adc
jnp
mov
repnz
push
dec
add
fwait
setns
mov
ret
outsb
dec
insb
pop
adc
xor
adc
int
and
movsl
out
stos
or
cmpsb
das
xorb
add
dec
jb
pop
out
movsb
cmc
in
int
into
push
or
les
cmp
xor
mov
mov
or
call
sub
test
sbb
sub
filds
lahf
inc
mov
pop
xchg
add
lock
xchg
cmp
fdivrs
lahf
dec
das
or
ror
dec
in
jno
dec
ret
mov
inc
add
or
leave
lods
enter
mov
and
test
test
xchg
rolb
je
sbb
jns
jle
add
lods
sub
xchg
mov
push
ljmp
cwtl
scas
negl
lea
pop
pushf
in
xchg
sub
enter
sahf
and
mull
ljmp
inc
fimull
mov
fs
xchg
fcoml
dec
stos
cld
je
xor
inc
add
mov
push
push
in
and
xchg
xlat
pop
cwtl
xor
ja
push
push
outsb
xlat
test
dec
arpl
testl
clc
inc
inc
add
insb
jo
pop
mov
cwtd
loopne
mov
lret
sub
cmp
test
aaa
sbb
or
scas
test
push
mov
mov
push
jl
je
ds
popa
subl
fisubrl
pusha
inc
mov
xor
insl
cmp
into
aam
or
in
mov
addr16
fs
bound
adc
lods
addb
pop
adc
in
cmp
push
push
adc
stc
xlat
inc
test
xchg
out
dec
xorw
mov
cli
loopne
xchg
testl
jp
push
pop
js
inc
sbb
xorl
fucomi
xor
pop
sarl
jo
pop
mov
mov
mov
pop
or
lods
sub
mov
popa
andb
jmp
aaa
pop
decl
enter
add
dec
dec
sub
repnz
sub
jge
mov
and
push
movsl
mov
pop
mov
fistl
sub
in
dec
sub
jns
negb
push
mov
and
addb
loop
fimuls
cmpsb
dec
xlat
cmp
and
leave
bnd
inc
pop
jbe
mov
ss
cmpsb
clc
inc
dec
adc
enter
and
mov
mov
popa
mov
insb
xor
jne
fmuls
pop
lahf
ds
push
adc
ljmp
in
cmp
fsts
jne
dec
outsb
adc
stos
mov
test
ja
into
mov
leave
and
xchg
roll
cmp
hlt
mov
jo
imul
cmp
inc
les
in
adc
pop
popa
loop
clc
adc
xor
hlt
mov
iret
mov
push
jno
cmp
lods
sbb
jo
mov
mov
shl
pop
mov
push
cmp
push
mov
mov
and
adc
jae
jmp
jle
idiv
jbe
adc
push
fsubrp
lcall
pop
ja
push
ljmp
dec
cld
bound
sub
negb
jmp
ss
les
fnstsw
mov
pop
pop
inc
push
out
orb
lock
iret
jle
sbb
inc
jle
dec
fnstcw
loopne
mov
push
add
fldcw
xlat
mov
shll
hlt
out
cmp
insl
lea
or
ret
jecxz
out
in
or
lea
mov
push
xchg
add
outsb
movsl
insl
imul
push
xchg
push
rorl
mov
jge
and
roll
enter
stc
insb
outsb
xchg
fsubrl
xchg
inc
or
pop
test
js
inc
mov
dec
dec
aam
je
out
or
movsb
mov
mov
es
or
outsb
pop
imul
sub
mov
stos
gs
movsb
test
adc
roll
sub
xchg
aas
mov
jnp
cmp
inc
orl
dec
inc
and
push
inc
cs
fwait
or
sahf
rclb
repnz
icebp
or
aad
jns
push
dec
adc
clc
in
in
ret
aas
sbb
mov
iret
loop
inc
mov
xor
xor
adc
inc
int
popf
mov
vmovhpd
loope
imul
or
hlt
enter
inc
je
jl
mov
cmp
inc
mov
inc
mov
adc
imul
cmp
ljmp
in
push
add
xor
xor
lods
sub
or
and
inc
stc
sbb
xor
add
into
pushf
push
and
aaa
cmpl
cmp
sub
sbb
cmp
js
repz
or
or
rcll
frstor
int
std
sbb
jo
mov
ja
bound
mov
cmpsb
mov
mov
jle
or
test
sub
iret
ds
and
xchg
popa
sub
mov
adc
mov
in
and
add
jle
repnz
pminub
fdivl
lds
lret
mov
outsl
push
jbe
dec
and
jmp
jo
push
fsubrs
pusha
jg
insl
clc
rcl
in
repz
repnz
mov
jns
iret
mov
jo
xchg
sub
ficomps
fadds
sbb
or
jne
popf
pusha
int
mov
sbb
jmp
cs
les
aam
fwait
ret
je
pop
push
jge
aas
fnsave
and
roll
or
sbb
jns
in
push
dec
pop
dec
mov
idivl
mov
sub
bound
mov
mov
jl
sub
sbb
cmpsl
stos
fildl
inc
pop
aad
pop
or
mov
inc
cmp
subl
insb
cmp
frstor
adc
movsb
dec
cmpsl
sbb
cmp
adc
jnp
jae
cmp
aaa
add
jae
jmp
cli
insb
lret
shr
icebp
dec
fisubrl
jecxz
push
aam
addr16
iret
nop
in
adc
cmpsl
fisubrl
cli
jmp
imul
adc
mov
lds
and
cmp
cmpsb
mov
sub
repnz
lahf
clc
fwait
lods
fwait
cli
xchg
ret
roll
or
stc
into
jl
leave
xor
mov
les
sub
leave
insl
ljmp
push
nop
nop
pop
dec
mov
lods
in
scas
js
inc
add
cmp
ja
sbb
out
inc
or
xchg
pop
es
sbb
dec
and
rcrb
sbb
mov
rclb
inc
cmpsb
outsb
subl
pop
mov
mov
or
and
sbb
addr16
mov
sti
roll
cmp
jbe
outsl
pushl
or
lcall
imul
add
ret
pop
sbb
dec
int3
aam
mov
adc
bound
mov
orl
nop
scas
pop
out
hlt
lds
jo
and
jl
iret
fcom
cmc
aad
jb
xor
mov
dec
xchg
repz
enter
xor
inc
mov
jno
mov
jl
pop
lret
mov
xor
into
iret
inc
adc
mov
mov
push
test
and
icebp
mov
frstor
in
outsb
pop
cmp
or
jns
test
jmp
rcrl
mov
pushf
stos
repnz
cmp
gs
lock
dec
mov
dec
rcrb
add
ja
lret
inc
jp
in
das
arpl
mov
fistps
icebp
mov
ds
jno
dec
das
std
pop
sbbb
dec
ja
pop
sbb
testb
mov
push
hlt
sub
insb
bound
imul
push
cmp
sbb
mov
repz
inc
add
jp
jmp
pop
ja
cltd
lcall
push
mov
ja
and
cmpsl
outsb
jbe
push
dec
mov
daa
test
xor
add
sarl
dec
call
or
jge
outsl
outsb
outsb
mov
dec
out
and
jne
in
xor
test
xchg
push
fs
jae
ds
ret
movsl
stos
adc
insb
out
add
adc
xchg
dec
stos
or
push
xor
icebp
test
sub
cmc
mov
pop
push
cli
lea
divb
or
lock
pop
jle
xchg
xchg
outsb
repnz
lret
pop
repz
xchg
pusha
pop
xor
daa
sbb
push
or
inc
inc
out
and
xchg
test
sub
dec
mov
popf
mov
mov
mov
or
ror
push
fisubs
dec
push
cmp
sbb
inc
adc
es
jns
stos
jns
pop
xchg
or
stc
sub
mov
mov
sbb
and
stos
in
loope
rcll
cmp
dec
push
fsubl
clc
ljmp
das
push
fisubl
inc
push
mov
lods
xchg
int3
mov
or
in
jne
add
cs
stos
add
push
fadd
and
xlat
jle
rorb
cmp
cmp
jge
cmp
push
lret
mov
jmp
add
fistpll
ror
fdivs
out
jb
aas
cwtl
or
arpl
push
adc
addl
cs
pop
in
loop
jg
push
sub
aad
push
lcall
out
or
and
std
add
jne
pop
into
jnp
rorl
ficompl
add
repz
mov
repz
jmp
fimull
pop
pop
pop
outsl
jmp
aaa
insb
xorw
sar
lret
fstl
dec
outsb
out
mov
dec
into
outsl
bound
es
in
ja
cmp
jle
sub
cmp
and
test
sti
lock
cmpsl
push
sub
xor
jns
lretw
in
cs
adc
leave
cs
in
aad
add
movsb
or
ss
push
mov
ret
out
add
shl
jmp
push
pop
bound
popa
stc
push
and
cmp
mov
mov
arpl
pop
jmp
rorl
jbe
xor
push
cld
gs
pop
xchg
pop
pop
loopne
data16
push
sub
dec
aad
xchg
mov
movsl
out
lock
shrb
mov
orb
arpl
inc
inc
dec
sub
jne
cwtl
int
into
pop
jp
les
cs
aam
js
hlt
rcl
mov
outsl
test
lock
or
sahf
xor
in
xor
dec
js
icebp
ret
or
jb
imul
pop
push
and
sbb
mov
cmpsl
xchg
push
sub
mov
push
xchg
fs
test
jle
cmpsl
gs
mov
addr16
fisttpll
bnd
mov
or
cmp
subb
inc
mov
lds
push
and
adc
jae
xchg
push
sub
cmpsb
dec
mov
push
pop
stos
cmp
lods
cmp
pop
xlat
stc
in
bound
ja
sbb
push
movsl
sbb
mov
arpl
jne
ljmp
pop
ret
sub
add
stc
or
cmpsb
ret
ret
dec
popf
pop
cmpsl
mov
fmull
shll
sub
lret
xor
and
push
lahf
cmp
adc
out
cld
cmpsl
adc
std
mov
addr16
add
adc
int
addr16
rorl
sub
inc
xchg
push
lahf
add
inc
pop
xchg
jb
xchg
mov
adc
rolb
aad
outsl
es
cmpsl
pop
jg
inc
les
cmp
enter
jno
testl
in
je
xor
sbb
ljmp
push
xor
lds
mov
mov
insl
sbb
add
xor
pop
loope
imull
mov
adc
in
je
fdivs
adc
xchg
daa
sub
dec
stos
push
bound
mov
xchg
shr
dec
pushf
jecxz
lret
xor
call
jl
xor
mov
ss
ljmp
mov
mov
or
outsb
cmp
mov
adc
stos
and
movsl
jbe
pop
outsb
cmc
sbb
das
shl
sub
mov
dec
imul
ror
sbb
inc
jecxz
dec
mov
out
pop
xor
cmp
lods
jmp
je
xlat
mov
mov
pop
lock
inc
ja
loope
push
sub
out
cltd
fbstp
adc
sbb
dec
mov
add
adc
adc
xchg
pop
mov
imul
xor
bound
js
dec
sub
stc
mov
or
jmp
ja
jnp
jge
pushf
out
mov
sub
jnp
roll
sub
jge
rcll
insb
xor
in
cli
in
flds
or
xchg
outsl
pop
push
mov
cli
sub
mov
int
jle
push
nop
ljmp
bnd
ljmp
mov
mov
dec
test
adc
pusha
add
mov
adc
dec
mov
push
ja
addr16
cmc
repnz
pushl
filds
mov
push
mov
adc
push
std
out
aad
adc
xor
sub
inc
dec
mov
sbb
scas
lret
std
lock
cmpsb
insb
lea
pop
test
and
or
push
dec
divl
push
or
mov
iret
xchg
adc
sub
sbb
dec
mov
pop
push
das
fxtract
sbbl
les
fildl
xor
xchg
dec
mov
fadd
mov
pop
sub
in
and
fldl
cmp
in
and
mov
lret
push
and
push
test
cmp
sbb
test
scas
inc
mov
lea
scas
pop
add
adc
inc
lret
jae
ljmp
in
and
or
push
ret
mov
movb
mov
push
dec
xchg
mov
adcb
subl
push
jmp
jp
loopne
pop
movsb
loop
hlt
and
or
sahf
lock
testl
mov
pop
adc
sahf
test
xchg
mov
repz
rcl
lods
dec
xorb
dec
insl
mov
push
mov
push
mov
shll
ret
jno
outsl
and
inc
adc
adc
push
sub
or
dec
pop
sti
sbb
or
jno
jo
popa
adc
rcll
sbb
js
movsb
popf
push
test
or
dec
mov
ret
stos
packssdw
rcrl
les
ret
cmpsl
xchg
push
sbb
mov
cli
fwait
mov
jnp
or
rep
mov
xchg
mov
outsb
jmp
xchg
in
mov
mov
inc
xor
in
daa
cmpsb
out
mov
rclb
js
mov
out
movsb
gs
rorb
mov
xlat
xor
sti
cli
jl
pusha
adc
dec
sti
rolb
addb
pop
cli
stc
clc
mov
jno
sub
pop
or
xchg
enter
es
mov
jmp
call
mov
pusha
popl
pop
fxch
lret
dec
testl
and
imul
cli
xchg
dec
xchg
sub
ljmp
fdivl
and
jl
xchg
clc
cmp
xor
ljmp
ss
jnp
mov
fst
mov
or
mov
sbb
mov
add
out
inc
push
adc
jge
bound
fs
jg
mov
xchg
add
lahf
lahf
add
cmp
adcl
push
fmull
jns
shlb
jecxz
ret
aam
cmp
adc
int
pushf
add
ror
lods
ja
mov
sbb
ret
data16
jp
into
shlb
ss
sbb
dec
sbb
xchg
out
leave
test
or
pushf
pop
rcrl
icebp
fwait
leave
ds
addb
add
lea
lock
movsl
mov
and
dec
and
out
mov
pop
pop
in
stos
cmp
arpl
mov
ret
arpl
loop
aaa
je
fmul
cmp
jbe
imul
lahf
mov
sub
xor
rcrl
or
cmp
cmp
fsubrs
enter
mov
mov
xchg
push
mov
xorb
push
pusha
shll
rcrb
es
mov
fistl
mov
imul
xchg
xchg
cmp
sub
fstps
lcall
gs
sbb
xchg
jbe
pop
and
fisttpll
sub
xor
adc
inc
sbb
inc
sbb
ja
in
xchg
xor
sbb
pusha
scas
iret
jae
mov
imul
ss
sahf
adc
sbb
push
dec
iret
inc
lods
rorl
mov
into
or
in
andb
jmp
aad
inc
mov
mov
dec
sbb
test
insl
mov
and
in
data16
stos
pop
orps
xchg
mov
add
mov
stc
scas
pop
xor
aam
xor
fiadds
sbb
sbb
out
push
movsb
dec
cmp
jg
loop
mov
pushf
jo
lcall
adc
xchg
ficompl
insb
adc
push
lahf
jo
mov
sub
in
and
mov
xchg
hlt
dec
pop
aas
jbe
add
adc
or
and
xorl
aas
aas
pop
shrb
cld
push
mov
pop
mov
add
dec
xchg
lret
out
out
ds
pcmpeqw
imul
cwtl
jg
or
dec
dec
rcrb
pop
jmp
jno
das
or
inc
loop
sahf
pop
addb
pop
shrb
test
rorb
add
arpl
in
and
xor
mov
fs
sub
call
outsl
addr16
mov
sub
pop
mov
adc
dec
lret
andl
mov
call
pop
fsub
mov
out
xchg
mov
sub
sahf
das
dec
jle
movl
mov
movsb
xchg
in
cmp
jnp
fucomp
insl
inc
int3
jp
dec
out
icebp
jecxz
sbb
lods
cs
lcall
jno
pushf
mov
adc
xchg
jmp
pop
jg
mov
lcall
mov
int
mov
adc
loopne
dec
or
test
pushf
and
dec
movsl
imul
jns
lods
popa
imul
nop
les
sbb
push
popa
jbe
int3
popa
orl
mov
mov
imul
arpl
lahf
testb
ds
or
fstl
adc
and
int
xchg
dec
push
sbb
loope
in
sub
cmp
loop
xor
add
insl
mov
ljmp
arpl
fildll
or
inc
mov
cmp
or
cld
loope
imul
das
jl
mov
mov
or
mov
jns
inc
jge
dec
scas
ljmp
loope
sbb
fldcw
cwtl
sbb
in
push
out
or
rorl
sbb
xor
jae
push
and
loopne
push
fstpt
ljmp
loope
rcrl
xchg
pop
fwait
inc
dec
xchg
xchg
xchg
dec
cmp
stc
outsl
or
cmpsb
insb
xor
cmp
pusha
cltd
scas
sbb
test
cmc
imull
roll
popa
push
mov
js
in
sub
sbbb
mov
pop
popa
stos
mov
in
das
hlt
addb
jge
or
mov
dec
mov
rcrl
xor
negl
arpl
stc
and
push
dec
push
call
or
negb
pop
xchg
mov
sti
xchg
inc
cs
pop
cld
je
leave
mov
arpl
cmp
inc
cli
xchg
dec
subl
mov
inc
and
jl
xchg
add
addl
xchg
pop
scas
mov
sub
cmp
sbb
mov
out
ficoms
xchg
mov
jns
push
notb
jns
jns
push
lea
repz
popf
cmp
sub
int
int
jl
xchg
pop
mov
or
sbb
ficoml
sbb
stos
pushf
int3
inc
mov
scas
sub
rcrl
cli
and
shrb
sbb
jge
dec
das
adc
in
aam
add
rol
inc
push
nop
adc
fwait
inc
cmpsb
into
and
add
pop
sub
mov
pop
lahf
popf
inc
outsb
dec
fidivrs
pop
ficompl
ds
cltd
outsb
push
push
gs
stos
aad
push
and
inc
jl
push
pop
pop
xor
or
sub
adc
in
mov
adc
negl
jae
iret
pop
pusha
jmp
sti
pop
inc
sub
pop
aad
pop
sti
jl
hlt
inc
push
fmulp
shll
gs
add
and
dec
xor
test
mov
rorb
add
addr16
pop
imul
jp
fdiv
rcl
les
ror
xchg
add
js
sbb
sub
pop
loopne
movsb
les
out
jne
inc
js
pop
cmp
mov
scas
stc
aas
push
imul
hlt
test
iret
cmp
mov
stc
adc
xchg
mov
push
and
xor
or
adc
jno
xchg
arpl
fsubs
imul
pop
mov
inc
pushf
dec
sub
stos
lds
mov
cmpsl
in
mov
and
cld
iret
adcl
mov
sti
addr16
jl
pop
int3
cmp
faddl
and
push
and
sub
inc
movsl
call
mov
icebp
fs
add
out
jmp
or
inc
or
in
push
daa
adc
test
shr
cmp
jge
inc
and
stc
dec
js
mov
cmp
movsb
mov
sbb
mov
shlb
sbb
mov
std
push
in
cmpsb
idivl
cmp
std
mov
or
aad
adcl
cmp
push
lods
lods
jns
push
xchg
dec
sub
sbb
push
jle
je
xchg
lock
jge
jl
fldt
inc
mov
mov
dec
mov
loope
pop
inc
int3
shll
sub
mov
xlat
fsubs
shll
sub
sub
mov
mov
xor
stc
cpuid
cmp
and
ljmp
bnd
out
outsb
je
push
pop
pop
adc
stc
cmp
cmp
inc
in
pop
add
repz
cbtw
cmpsb
mov
sub
loop
ds
aam
popf
jnp
push
loop
xor
adc
lock
xor
pop
hlt
push
adc
xchg
test
xchg
ss
mov
pop
in
ret
jmp
arpl
movsl
cmp
fwait
jp
loop
cmpsb
pop
inc
xchg
jnp
and
adc
xlat
inc
mov
mov
sbb
mov
and
fiaddl
icebp
sub
stc
add
jge
icebp
dec
adc
mov
fldl
push
add
cs
mov
rcrl
add
xor
rcl
in
push
nop
outsl
mov
dec
aas
jbe
adc
in
push
ret
or
mov
or
fwait
mov
popf
or
pop
lret
lret
xor
cwtl
out
mov
or
or
ja
test
imul
dec
sar
xchg
sbb
lea
cmc
xchg
push
inc
repz
adc
push
jg
or
mov
push
pop
fbstp
xlat
out
call
and
xor
push
cmpsb
mov
and
in
andnps
jo
mov
sub
es
push
mov
enter
or
jmp
inc
and
aas
inc
push
sub
mov
popa
sub
adc
aam
xor
shl
add
mov
jp
pop
add
jmp
lahf
fstps
adc
enter
mov
aaa
arpl
sbb
adc
les
movsb
cmpsl
fsubrl
mov
push
sub
jb
inc
or
mov
jmp
out
jmp
mov
inc
ss
cmp
out
xor
or
pop
imull
inc
sahf
sub
xor
int
js
test
jno
sub
je,pn
cltd
nop
popf
add
sbb
dec
out
mov
sti
popa
cltd
push
push
shl
ds
sub
inc
into
pop
push
add
dec
push
xor
test
fwait
lcall
mov
loop
xchg
in
cmpsl
pop
dec
inc
mov
std
add
mov
adc
mov
mov
loope
incb
in
pop
inc
jp
cs
insl
insl
cmp
dec
push
das
arpl
xor
stc
sub
or
in
cmpsl
cmp
fiadds
daa
pop
mov
int3
insl
std
inc
gs
bound
mov
add
fs
lea
cmp
stos
jne
loop
outsb
sbb
jmp
sub
in
jg
in
test
dec
lods
sbb
in
xor
out
or
cmp
flds
jae
inc
xor
movsl
sub
popa
leave
repnz
pop
inc
dec
and
jno
xlat
cmp
adc
mov
mov
push
int3
dec
std
mov
sbb
je
int
mov
xchg
mov
fldl2e
and
sti
call
jmp
imul
roll
mov
cmpsl
movntps
mov
scas
mov
ja
adc
and
xchg
fistl
cmc
int
cmp
loope
mov
fcmove
push
xor
mov
fcomps
xor
aas
add
movsl
xor
and
jnp
push
stos
stos
xor
aam
xchg
adc
inc
es
jns
xchg
imul
adc
je
and
pop
ret
out
rcrl
subb
sub
in
aas
xchg
outsb
cmc
adc
fnstenv
dec
lea
and
imul
cld
enter
inc
loop
cli
mov
lcall
or
loopne
popa
fnstsw
mov
inc
and
adc
inc
rorb
xchg
dec
pusha
inc
push
in
iret
mov
inc
adc
push
ds
or
in
clc
pop
cmp
push
test
cwtl
shrb
cli
adc
ret
pushf
leave
mov
or
mov
and
sbb
std
pop
testb
inc
add
jmp
jmp
pop
xlat
mov
mov
pushf
repz
sub
jle
xchg
sub
out
insb
popa
xor
mov
inc
loopne
lods
dec
sbb
xchg
imul
xor
int3
add
mov
mov
fsubr
mov
repz
sbb
xchg
mov
and
jp
arpl
jb
repnz
sbb
or
inc
pop
or
sbb
aaa
punpckhdq
jnp
mov
push
mov
int
jo
mull
and
in
jae
cmc
push
js
push
imul
mov
xchg
and
inc
fimuls
pop
out
jns
mov
aas
jne
or
in
out
aam
mov
jmp
add
push
iret
daa
repnz
push
cwtl
push
mov
xchg
xchg
fldl
dec
or
ljmp
sbb
out
lret
jmp
lods
or
mov
test
dec
dec
jge
fnstcw
jg
data16
sub
cwtl
pop
sbb
or
das
stos
push
bnd
jae
jne
sub
sub
dec
cmp
lahf
push
add
mov
lret
cld
push
push
arpl
pop
icebp
movl
out
subl
sbb
je
cld
add
ret
fidivs
or
push
lock
xor
adc
xchg
mov
popf
stos
xor
sahf
mov
nop
insb
out
cmpsb
jmp
xchg
sub
repnz
sbb
push
loop
fnstsw
push
scas
hlt
nop
stos
cli
mov
push
aad
add
test
insb
loopne
dec
loopne
pxor
das
test
shll
mov
dec
jae
push
jl
cmpsb
and
js
mov
mov
enter
xchg
dec
jp
lea
dec
shll
aad
cmpl
mov
cmpsb
and
scas
jmp
mov
fdivs
xchg
int
es
movsl
add
inc
push
jg
or
mov
mov
inc
pop
push
data16
jle
or
in
pop
data16
mov
leave
jae
dec
aam
push
push
pop
or
inc
jl
mov
pop
mov
fsubrs
clc
and
lret
push
dec
inc
lret
loop
adc
sub
lret
cmp
ds
enter
and
jmp
mov
cmp
in
jecxz
ror
mov
xchg
stos
push
push
adc
xchg
mov
pop
pop
push
add
pop
lea
fdivrs
inc
pop
aam
push
add
test
out
cmp
mov
fimuls
int
fmuls
stos
pop
add
sbb
aas
sbb
pop
inc
sbb
aam
dec
sbb
stc
lcall
adc
mov
hlt
pop
adc
push
mov
sub
sub
xchg
dec
mov
ss
ret
out
inc
xchg
jl
dec
add
mov
push
add
xorb
inc
and
aam
inc
push
push
dec
bnd
and
insb
leave
fdivrl
cmp
sbb
inc
sbb
sbb
pusha
push
and
push
ja
add
push
inc
adc
fists
add
adc
pop
fdivp
mov
cmp
jno
ljmp
inc
enter
jb
add
jns
loop
imulb
or
dec
js
js
mov
jo
pop
mov
pop
rcr
push
nop
cmpl
add
xlat
mov
xchg
sarl
fstpt
inc
xchg
ret
xchg
movsb
lret
das
add
xchg
popa
lcall
jge
sub
fbld
xchg
mov
pop
shrb
mov
or
add
mov
mov
call
mov
in
cmc
cli
ss
mov
mov
mov
xor
add
inc
es
inc
mov
insl
mov
rcll
and
push
cmpsl
xchg
adc
mov
test
dec
mov
mov
fs
push
test
lock
mov
pop
mov
out
fmulp
or
mov
popa
test
fmull
inc
sbbl
outsl
pop
mov
mov
add
mov
cwtl
das
fisubrs
jmp
repnz
mov
sbb
jnp
nop
shll
mov
cmovl
or
sti
out
fs
les
sti
and
out
ss
in
in
xchg
pushf
dec
and
cli
add
lock
push
scas
lock
mov
hlt
jp
bound
lahf
mov
pushf
or
push
jb
repnz
hlt
inc
mov
cmp
sbb
xchg
jne
pop
mov
push
push
mov
fdivrs
jp
divb
andb
sbb
mov
cs
inc
and
aaa
mov
fwait
clc
sbb
aad
push
aaa
in
fst
inc
aad
xor
mov
notl
in
jmp
retw
pop
stos
lret
sbb
test
inc
aad
xor
jl
enter
test
jbe
std
data16
ss
pop
xchg
jns
push
lret
add
lock
insb
push
loop
push
sbb
cli
pop
mov
fidivrl
mov
adc
stos
or
lea
mov
push
das
jns
mov
add
loopne
insl
dec
cmp
xchg
aad
mov
inc
mov
mov
divb
or
xor
mov
mov
addr16
xchg
and
and
jle
sbb
dec
in
cmpsl
xor
pushf
enter
adcb
lods
sub
add
mov
cmp
fisubrs
adc
es
lahf
dec
cmp
sbb
outsb
andb
je
fdivrp
daa
fisubl
aaa
xor
imul
filds
loope
mov
std
fimull
adc
cwtl
mov
mov
xor
pop
fcomi
xlat
test
and
jecxz
xchg
pop
lret
lock
sbb
jbe
jge
sbb
xor
and
cmp
sbb
pop
sarl
mov
or
jl
iret
addr16
pop
jl
mov
adc
hlt
mov
pusha
hlt
cmpsb
cmovle
or
adc
mov
in
adc
imul
lea
pop
mov
push
js
leave
sbb
je
or
mov
inc
and
fwait
sahf
out
mov
fsubrl
add
movl
adc
adc
mov
arpl
jo
sbb
incl
cmp
adc
adc
in
lods
movaps
test
xchg
mov
pop
das
lea
xor
test
xchg
jo
jmp
pop
push
xor
and
adc
mov
dec
cmp
pop
xchg
or
dec
and
aam
out
xchg
or
rcrb
xor
shll
dec
adc
out
out
neg
fsubrl
popf
loopne
mov
fnsave
jg
pop
or
fidivs
mov
dec
fisttps
cmc
mov
shrb
sbbl
inc
sub
adc
jbe
mov
out
test
clc
or
mov
stos
xchg
pop
ffreep
popf
orb
push
aad
mov
jl
cmpsb
or
jae
xor
cmpsb
sbb
push
pop
lock
hlt
and
ja
push
movsb
and
xchg
dec
lods
cmp
sub
push
push
in
fisttpl
fdivr
fs
push
jp
mov
jecxz
pushf
repz
pop
in
and
xchg
stos
cmp
shll
ror
jne
lret
sti
xor
lea
pusha
add
bound
std
testb
std
pop
lods
dec
mov
rcll
in
inc
lods
nop
stos
jle
mov
inc
pushf
popf
movl
and
clc
mov
ret
and
cli
and
stc
sbb
xchg
mov
mov
aaa
ffreep
mov
mov
cmp
je
jno
xchg
jp
notl
ret
push
xchg
xchg
imul
pusha
fisubl
jo
nop
ret
mov
popf
dec
mov
xchg
push
jnp
pushf
xchg
mov
iret
es
jmp
mov
push
xchg
jl
mov
xchg
or
add
subl
orl
adc
jo
aas
dec
aad
xor
movsl
xchg
enter
jl
inc
mov
pop
repz
or
add
scas
push
mov
or
and
aad
push
and
pop
dec
inc
cmp
mov
jns
orb
in
in
adc
xchg
orl
nop
test
dec
jge
clc
out
sbb
int
lcall
xchg
mov
mov
fs
xor
stos
jbe
aad
or
sbb
jl
push
lgs
in
sahf
add
and
sub
adc
loope
clc
dec
sbbl
ljmp
arpl
ret
add
int3
and
jno
pop
jbe
into
mov
stos
testl
add
int3
lods
ret
pusha
mov
push
sub
cmc
mov
in
mov
in
lock
xor
out
es
push
mov
iret
int3
dec
lods
cmp
push
push
hlt
aaa
inc
dec
push
test
lret
inc
cmp
fnstsw
mov
dec
xor
andb
xchg
mov
stos
lcall
ret
xor
ret
cmp
xchg
rorb
push
add
vaddsubps
aad
xlat
lahf
out
scas
jp
dec
cli
rclb
sti
out
cmpsl
cwtl
sbb
es
jg
ret
ret
rclb
sbb
and
popa
jge
lcall
jecxz
or
fidivl
shlw
dec
lret
mov
test
mov
mov
out
push
and
icebp
orl
data16
in
xor
xchg
stc
mov
icebp
cld
pop
xor
ja
fwait
test
arpl
hlt
pop
lods
test
ss
adc
and
lods
subl
scas
xor
adc
and
sub
fisubl
popf
or
sbb
es
and
xchg
xor
mov
xchg
jle
aas
push
sahf
ja
inc
mov
sarl
add
xchg
sarl
rcrb
insb
mov
adc
in
add
inc
or
out
pusha
pop
mov
nop
pop
mov
fstp
cmp
or
inc
cmpsw
fwait
adc
addb
out
sbb
out
and
dec
mov
movsl
loop
xor
mov
scas
ss
inc
inc
cltd
cmpsl
ja
jl
push
rorb
xor
cltd
std
in
pop
lret
mov
and
nop
aad
sub
jle
inc
lahf
adc
jmp
loope
popf
addb
mov
and
cmp
xor
pop
sub
test
inc
and
xchg
popl
lret
jl
and
pushf
sbb
add
test
add
jmp
or
test
push
in
repz
inc
out
xchg
and
mov
stc
das
add
sbb
jo
fdivrs
daa
mov
aas
clc
sbb
mov
lds
inc
sub
add
testb
in
cmpsb
test
lods
cmp
mov
fimuls
fiaddl
pop
stos
jnp
add
mov
jmp
rcrl
cmp
sub
ljmp
daa
mov
ds
cmp
cmp
and
mov
dec
out
mov
ficoms
mov
or
mov
fdiv
loope
sub
cmp
xor
mov
jmp
daa
loopne
imul
cld
ss
ret
bound
xor
dec
mov
jns,pt
repnz
push
cmp
fstpl
mov
enter
stos
inc
test
ficompl
das
pop
subl
lock
sbb
push
out
std
jecxz
xchg
imul
cmp
fdivr
sub
or
inc
cld
inc
rolb
or
lahf
lock
push
rep
jle
pop
pop
mov
outsl
xor
popa
push
insb
adc
in
mov
pop
sahf
sahf
cmc
pop
mov
sbbl
push
sub
jbe
pop
xor
add
dec
sbb
xchg
sub
add
lock
fisttpl
roll
sub
cli
xor
xor
subb
or
pop
ja
pop
loope
nop
scas
mov
insl
das
enter
pop
push
aam
iret
or
xchg
mov
pop
push
pushf
mov
mov
cltd
out
std
cmp
leave
mov
lcall
add
lcall
push
addb
mov
or
xchg
es
pusha
ret
mov
sti
xor
pop
or
iret
push
pop
pop
repz
or
jno
sub
inc
out
cwtl
add
pop
mov
or
fsubs
mov
jg
lds
pop
mov
mov
pop
int3
jo
push
jnp
out
push
or
aam
or
and
je
dec
xchg
and
lods
add
jp
divl
lcall
inc
jp
mov
mov
sub
and
shrb
cld
add
mov
xor
inc
or
negb
sbb
jo
xor
jnp
repz
loope
insb
mov
movsb
rol
js
mov
and
adc
cmpl
jp
fdivrp
mov
inc
jae
fdiv
adc
loopne
and
popa
sub
ret
add
push
push
cmp
movsb
fwait
int3
popf
movsl
leave
xchg
adc
adc
add
imul
ljmp
mov
sub
int3
dec
jle
icebp
and
in
aad
push
das
adc
mov
sarb
push
ret
dec
and
and
pop
and
inc
sub
add
orl
push
inc
mov
cs
sub
jge
pusha
pop
iret
adc
shlb
rcr
and
cld
call
popf
popa
mov
jns
bound
arpl
fildll
movsl
imull
mov
fimull
pop
jne
push
or
inc
stc
sub
mov
fcmovnbe
or
adc
mov
js
sub
push
jge
popf
inc
xchg
gs
pop
mov
dec
movsb
push
clc
xor
jno
sbb
sbb
std
enter
cmp
rcll
lds
faddl
cmp
mov
dec
mov
loop
and
js
sub
mov
movsl
stos
outsl
popa
and
xchg
ja
les
fucomp
mov
cmp
clc
fimull
cld
jle
inc
push
mov
shr
sahf
dec
pop
pop
sbb
add
sub
out
stos
jnp
adc
ret
mov
mov
outsb
les
bound
sub
jg
mov
or
loopne
inc
adc
addr16
jmp
addl
stc
shlb
mov
fdivrs
sub
sub
cmc
mov
test
shll
sbb
pushf
in
rolb
out
ja
pop
cmp
outsl
pop
decb
inc
mov
sbb
lea
jmp
fisubrs
fmull
repnz
pop
mov
adc
or
in
add
push
int3
mov
or
and
cld
push
mov
or
sbb
lds
lret
and
add
insb
mov
add
bound
popa
in
add
notb
je
adc
xchg
or
sbb
adc
cmovae
adc
adc
clc
insl
mov
xchg
imul
orb
dec
cmp
push
adc
pop
int3
outsb
push
stc
and
cmp
push
xchg
cmpsl
push
sbb
xchg
dec
xor
and
fstpl
dec
fwait
shlb
cmp
mov
popa
push
inc
or
adc
lret
mov
lods
scas
sar
add
or
jae
mov
jns
pop
gs
cmpb
clc
xchg
shlb
cmp
shlb
icebp
lret
mov
mov
rorl
outsl
outsb
xchg
js
jge
push
jnp
repz
in
mov
cli
dec
sub
and
test
push
adc
sbb
lret
test
sub
cmp
fisubs
pop
mov
test
imul
aam
and
pop
mov
jae
outsl
add
pop
add
mov
cmp
xchg
int3
aam
sar
movsl
iret
mov
xor
pop
adc
push
mov
aaa
cli
das
or
ds
mov
or
and
push
cld
fadd
add
cmc
add
mov
inc
int3
push
cmpsl
in
inc
xchg
adc
jp
inc
mov
sub
stos
outsl
inc
int
mov
outsb
std
lods
and
pop
fimull
dec
call
test
dec
ds
jmp
xchg
jno
iret
scas
rcll
repz
rolb
or
cmp
aaa
cmp
out
dec
xlat
push
out
aad
lock
pop
add
adc
push
mov
in
xchg
negb
daa
iret
jo
pop
dec
xchg
add
push
fld
mov
mov
add
inc
mov
cwtl
mov
lcall
mov
insl
sbb
filds
inc
mov
pop
pop
sub
and
cmp
aas
mov
jg
dec
dec
imul
imul
stos
push
mov
mov
shll
je
enter
inc
cmpsl
cmp
fmull
rol
negl
repz
lahf
aas
mov
std
mov
aaa
jg
mov
inc
push
or
dec
mov
scas
cwtl
cmp
aad
or
xor
push
iret
cwtl
pop
ljmp
xor
ljmp
stos
dec
aaa
clc
cs
xor
fists
decb
ds
cwtl
test
fdivs
sub
mov
push
jb
icebp
fisubrs
dec
fsubl
jns
sar
xor
fidivrs
pop
sub
lock
loopne
xchg
push
push
mov
and
or
or
sub
daa
sub
scas
xor
and
adc
xor
testl
sarb
dec
and
sbb
leave
fwait
mov
loope
mov
fadd
dec
out
cmp
mov
mov
outsb
rorl
mov
fldcw
cmp
stos
or
mov
inc
nop
clc
fdivr
inc
xchg
cmp
and
div
mov
cwtl
inc
lret
lret
mov
xlat
jne
movsl
inc
push
pop
pop
mov
jns
es
leave
jmp
ds
sbb
cmc
inc
fnstenv
sub
mov
add
mov
mov
rcr
jne
push
insl
xchg
mov
sbb
and
xchg
clc
addb
adc
mov
mov
insb
pop
dec
rol
dec
dec
pop
rclb
dec
xchg
xor
cmp
dec
jl
arpl
test
scas
outsb
ror
and
mov
xor
incb
jnp
shrl
pop
leave
popa
xchg
inc
mov
jle
mov
push
mov
mov
cmpsb
jae
cmp
inc
rorl
lcall
in
addr16
movsl
mov
xchg
xchg
ss
ds
mov
mov
sahf
adc
adc
dec
mov
sbb
es
inc
ja
mov
repnz
lahf
rclb
push
aas
xlat
getsec
inc
jecxz
inc
mov
and
aam
or
enter
jns
and
push
inc
mov
xor
mov
loope
iret
js
mov
push
mov
movsb
fwait
push
jae
xchg
jle
test
push
inc
rcl
div
mov
inc
add
mov
or
mov
aaa
adc
sahf
bnd
mov
or
dec
loope
js
cltd
dec
mov
loopne
out
xor
aad
hlt
or
jne
pop
bound
dec
sub
inc
xchg
sub
cltd
mov
jge
int3
mov
fs
inc
xchg
mov
inc
xchg
sbb
rcl
loopne
inc
enter
mov
pushf
sbb
bound
imul
mov
stos
jae
in
int
pop
loope
ds
popf
mov
cmp
sbb
lods
je
or
mov
hlt
stos
cwtl
pop
adc
je
jl
cli
jle
push
int
inc
fisttps
dec
dec
pushf
inc
jo
mov
out
out
arpl
dec
pop
or
stos
cli
jp
leave
push
cs
mov
andl
or
sub
leave
adc
add
ret
shl
outsl
js
lcall
int3
cmp
mov
ja
or
iret
mov
cmpsl
in
xor
xor
into
lret
cltd
sub
popa
hlt
add
jb
and
mov
jl
dec
add
push
mov
arpl
fmuls
pusha
hlt
lret
xchg
cmp
leave
into
into
and
inc
inc
jb
dec
and
pushf
pop
fs
pop
dec
outsb
dec
fdiv
dec
mov
mov
lods
xor
mov
enter
mov
xlat
pusha
xchg
mov
cmp
cltd
push
pop
jbe
dec
test
jmp
hlt
mov
lods
into
jb
pop
jne
adc
xor
jno
repz
mov
es
xor
jb
sub
mov
push
les
std
loopne
lret
rorb
popa
xlat
xor
jae
jne
stos
and
idivl
call
fnstcw
xor
cmp
int
fstpt
xorl
push
mov
xchg
aad
aam
test
jb
jo
mov
dec
lds
mov
imul
mov
pusha
movsl
lods
or
roll
call
push
cmp
cltd
test
out
in
fs
movsl
xchg
cmp
cli
inc
andl
out
popf
mov
jnp
aad
adc
call
or
movsl
or
clc
or
div
add
sarl
testb
xchg
add
xchg
dec
or
aad
cltd
repnz
mov
out
movsb
fstps
inc
lds
lods
mov
xchg
lods
gs
int3
push
and
ret
dec
or
mov
push
imul
call
cmp
gs
push
daa
repz
and
sub
mov
int3
mov
sti
aam
lret
pop
add
in
xor
out
call
and
push
jns
rcr
dec
adc
add
or
jb
into
push
mov
fwait
je
jmp
add
jne
loop
fwait
popa
dec
mov
movsb
fsubs
cmp
rolb
test
mov
pop
jno
jmp
push
imul
repnz
fmul
icebp
mov
popa
mov
movsl
cmp
sbbl
js
sub
push
cmp
xchg
iret
cmpb
ret
mov
cmpsl
out
sub
dec
fucomi
sti
and
call
mov
adcb
inc
jg
sahf
xor
popa
pusha
xor
pop
pop
adc
mov
int3
push
stos
jg
in
jnp
and
lds
insl
mov
mov
or
sub
movsb
movsb
cmc
outsb
pop
outsl
push
cmp
cs
fbld
aas
movsl
pop
pop
xor
test
iret
jae
and
mov
mov
popa
pop
int3
imul
movsl
imul
adc
lock
mov
jo
leave
adc
and
jne
push
cmpsl
mov
shr
pop
or
push
insl
jp
xor
fdiv
js
adc
loope
xchg
dec
in
in
mov
in
jle
pop
subl
les
mov
xor
aaa
mov
pusha
sub
mov
adc
mov
fistpl
dec
cmpsb
or
mov
mov
and
insb
adc
cmc
call
insl
add
out
fmull
addr16
adc
insb
ljmp
leave
enter
inc
cmpsl
sub
dec
inc
cmp
pop
and
inc
pusha
inc
out
dec
nop
imul
add
add
fwait
push
mov
aas
xchg
call
rclb
out
iret
les
sub
lds
sti
and
sub
stos
sbb
xchg
adc
push
test
xchg
xchg
lret
and
xchg
mov
popf
cmp
mov
les
std
gs
push
adc
mov
or
enter
push
enter
pop
ja
loop
shlb
add
xchg
mov
iret
mov
arpl
dec
mov
push
rcrb
repnz
aad
xchg
or
mov
pop
jle
out
jge
push
in
sub
push
aad
mov
or
xchg
inc
movsl
pop
stos
add
cmc
pushf
cmp
aad
pop
dec
xchg
jae
add
jle
pusha
pop
jge
dec
jno
lret
sub
lods
je
or
adc
inc
and
adc
push
pop
insl
scas
rcll
imul
pop
je
dec
pop
cmp
daa
inc
pop
mov
push
mov
xchg
xor
gs
enter
out
add
les
rorl
lahf
xor
push
ja
cmp
push
pop
les
sbb
xor
lock
cld
aam
data16
fstpl
cltd
aas
imul
push
sahf
nopl
cmc
xchg
stc
sub
loopne
test
pop
and
mov
or
mov
stc
pop
pushf
jmp
dec
inc
adc
imul
cs
faddp
out
lcall
je
clc
scas
push
aam
shll
push
loopne
xor
push
lea
popa
in
mov
sub
mov
xchg
cmpb
int3
nop
cmp
add
idivl
or
mov
ficompl
fimuls
push
sbb
sbb
xchg
aam
imul
mov
xor
and
ja
rcr
int3
jp
repnz
ja
mov
in
sub
cmp
and
xor
jbe
jnp
stc
sub
lahf
pushf
iret
test
pop
adc
imul
je
out
and
pop
fucomip
dec
jnp
or
fdivr
repz
sbbb
add
pop
call
subb
mov
xchg
jl,pt
push
adc
and
sti
and
adc
sbb
pop
pop
xchg
jns
pop
mov
xor
and
sti
jbe
addr16
stos
xchg
and
push
in
xchg
and
ficompl
mov
test
sbb
add
push
in
std
dec
in
pop
scas
or
xor
mov
mov
fcomps
and
aaa
add
scas
out
jge
ja
lods
movsl
add
adcb
inc
cmc
pop
lret
stos
pop
orb
cli
jp
inc
pop
loop
fwait
push
jp
gs
hlt
cwtl
in
xor
push
hlt
clc
shrb
cmp
mov
adc
xor
push
mov
pushf
inc
mov
lock
push
insb
mov
leave
notb
cld
mov
xorb
pop
mov
aam
xlat
mov
jl
jns
xor
in
inc
pop
cli
es
movzbl
mov
fidivrs
mov
add
jnp
in
sub
jb
add
jo
in
lds
cmp
jae
mov
xchg
jl
fimuls
or
insl
inc
push
jp
adc
xchg
pop
xor
scas
mov
frstor
mov
and
xchg
add
mov
movsb
dec
jg
aaa
outsb
dec
subb
dec
ss
fs
inc
ljmp
cmp
pop
jne
pop
inc
jg
push
mov
pushf
sbb
es
mov
outsl
testl
imul
and
xor
cmp
sub
sbb
push
push
inc
cmp
and
nop
test
jne
cmp
fisubrl
sub
sub
cli
andb
call
psllw
into
andb
cmpl
xor
push
or
cltd
aad
mov
loop
and
mov
inc
pop
fwait
pushl
arpl
mov
add
push
mov
std
insl
and
imul
pop
test
sbb
in
stos
fsubrl
xchg
fcmovbe
and
inc
mov
insl
sbb
xchg
out
add
push
cmp
hlt
sub
nop
dec
scas
mov
imul
xor
out
out
inc
mov
mov
pop
jg
int
cmp
ja
mov
adc
ret
dec
and
test
and
dec
scas
or
xchg
dec
jmp
sub
stos
lret
pop
pusha
mov
push
mov
fnsave
in
push
mov
mov
movsb
in
ljmp
repz
in
xchg
fldt
mov
mov
ret
add
sub
addr16
insl
jecxz
add
out
gs
dec
pop
jmp
pop
lds
sbb
cmpl
push
mov
mov
xor
outsl
xlat
sbb
push
icebp
xor
not
cmp
jbe
sub
dec
mov
cmp
mov
popf
out
stos
popa
mov
xchg
fwait
subl
shrb
pop
dec
insb
loope
fcmovb
pushw
dec
lahf
stc
xor
gs
cmpsl
mov
add
cmc
je
data16
rorb
lcall
sbb
sbb
jo
mov
ss
mov
scas
fwait
imul
ss
sub
mov
adc
push
mov
leave
xor
sub
or
sub
lahf
outsb
hlt
jecxz
push
rorb
adc
xor
rorl
add
out
inc
cmp
add
sti
in
and
int
sahf
add
cltd
out
movsb
stos
sub
lock
xchg
xchg
xchg
nop
lock
loop
adc
push
jae
jnp
aad
mov
stos
divb
sarb
xchg
xchg
xchg
sahf
jbe
ds
test
and
fildll
jg
popa
fdivr
aas
stos
je
lret
popa
inc
mov
sti
loope
hlt
out
repz
inc
push
out
sub
lret
dec
dec
ja
push
shlb
and
xchg
fbstp
jne
xchg
or
mov
xor
fstpl
das
lock
mov
jmp
pop
sbb
sbb
iret
cmp
sbb
push
add
jecxz
xor
stos
pop
lahf
mov
in
add
sub
cs
mov
stos
sub
inc
pop
push
xchg
movsb
xchg
jb
fwait
shl
test
aam
dec
jl
not
in
mov
lcall
fs
fwait
cmp
les
ja
mov
adc
outsl
push
cmp
cs
xchg
ss
or
dec
popf
in
adc
stos
mov
and
and
adc
jne
mov
imul
push
fstps
adc
dec
cmp
sbb
fisubs
push
imul
cmp
xor
insl
jl
cmp
cmp
aaa
add
rorb
fiadds
sbb
push
jb
jg
cmp
push
push
int
fs
cld
push
ja
dec
and
mov
mov
push
shlb
mov
cli
push
scas
jo
push
loope
dec
cld
mov
or
js
in
add
push
fcmovnb
idivb
repz
add
mov
or
clc
insl
and
clc
and
aaa
test
cld
and
mov
or
jp
fiadds
pop
mov
adc
xchg
hlt
popa
push
lods
sub
lds
scas
mov
mov
lret
imul
ja
test
jl
into
dec
sbb
cld
movsl
xor
mov
mov
and
cmc
xchg
outsl
cmp
sarl
jne
sub
sbb
insb
into
dec
xchg
imul
mov
out
test
shll
bound
push
inc
test
daa
mov
pop
jno
xchg
pop
push
jl
pusha
addb
mov
test
in
or
dec
out
les
pusha
mov
and
andb
or
pop
movsl
push
or
push
pop
loop
jne
add
je
fidivl
push
mov
hlt
outsl
mov
fdivp
movb
sbb
push
xlat
lret
or
xor
xchg
dec
mov
fwait
setp
insb
jb
or
test
mov
les
addr16
xlat
cmpsb
sub
aam
and
inc
fdivrs
add
lret
cmp
mov
test
adc
push
add
aas
push
fwait
jmp
cli
add
lret
pop
adc
mov
jmp
pop
ret
fwait
outsl
cmp
test
pop
dec
fwait
add
mov
aaa
xor
push
jno
sahf
xor
mov
addr16
xchg
lds
in
adc
mov
dec
pop
imul
xor
scas
xchg
xor
iret
xchg
mov
andb
aad
pop
sahf
int3
jg
fs
lret
and
push
jae
xchg
push
ret
mov
adc
fldl
jo
xchg
dec
pop
xchg
mov
push
mov
in
xchg
ja
int
xsaves
addl
pusha
pushf
pusha
imul
jmp
nop
mov
dec
orb
hlt
rcl
or
lret
inc
popf
mov
bound
or
pop
cli
js
iret
cmpl
sub
scas
idiv
push
pop
pop
pop
gs
out
and
dec
ret
push
pushf
lahf
setns
sub
or
push
xchg
jns
call
mov
shlb
push
icebp
add
mov
rclb
in
jl
popa
mov
shlb
daa
dec
arpl
or
xchg
push
pxor
mov
movsb
lds
mov
push
jo
mov
xor
mov
push
idivl
test
std
leave
xlat
inc
dec
jae
xchg
pop
or
pop
mov
mov
movsl
xor
sub
loope
gs
les
in
fisttps
scas
xchg
cmp
push
test
mov
pop
insb
xchg
shll
jge
inc
int3
loop
test
mov
repnz
sarb
jg,pn
dec
out
pop
ja
jecxz
gs
lock
repz
cltd
outsl
xchg
ja
frstor
jle
bound
xchg
mov
fiadds
push
mov
es
xor
and
pusha
or
mov
lcall
mov
lock
fstpt
sub
int
ljmp
movsl
ficoml
icebp
jle
repnz
sbb
fidivrl
xor
in
mov
adc
setne
mov
mov
stos
dec
rorl
and
cmp
xchg
and
mov
ja
push
pop
xchg
les
push
inc
in
fcmovb
fptan
or
mov
and
jb
pop
mov
xchg
push
dec
mov
incb
rcll
xchg
sub
lock
xor
aas
movsb
loope
mov
adc
push
push
cli
loopne
cli
mov
push
pop
repnz
jecxz
insl
push
mov
dec
xchg
mov
mov
test
out
xchg
jnp
add
mov
push
push
stos
into
int3
push
jmp
jae
in
out
xor
jno
dec
shll
cmp
xor
dec
xchg
dec
testl
add
push
dec
rcrb
inc
jmp
lahf
shld
xlat
jp
xchg
pop
dec
test
xchg
and
jle
cmp
dec
insb
mov
mov
mov
arpl
pop
mov
or
sbb
fisubrs
jle
cmp
inc
scas
xor
mov
inc
imul
mov
movsb
pop
jmp
push
sub
mov
sub
mov
inc
orb
push
or
ret
popa
mov
lahf
xchg
pop
jecxz
sar
inc
pop
push
add
lret
jns
mov
inc
jmp
cmp
stc
inc
xchg
push
xor
lds
jo
lret
testl
pop
mov
lret
test
ljmp
cmp
cmpsb
pusha
test
dec
xchg
dec
out
push
cmp
mov
inc
hlt
int3
mov
int3
mov
dec
gs
jmp
sti
insl
jne
or
adc
mov
add
test
fsubp
les
testb
in
mov
aam
push
test
clc
add
dec
add
pop
lret
fisubrl
hlt
outsb
dec
xorb
xchg
dec
lock
sbb
and
fmulp
inc
inc
aas
loopne
mov
arpl
lods
mov
arpl
inc
mov
inc
inc
xchg
add
fdivrs
jecxz
int3
or
dec
inc
or
sub
jnp
mov
stc
cmp
pop
add
dec
or
roll
lods
add
adc
adc
insb
pop
pop
out
ret
xchg
jnp
andb
sbb
pushf
fildll
jae
push
xchg
rcrb
cli
gs
bswap
push
jo
fimuls
mov
lcall
or
jnp
int
mov
mov
cmc
out
out
repnz
sub
push
xchg
inc
out
dec
mov
insb
jo
dec
andb
mov
xchg
dec
popa
jle
xor
shl
out
test
cld
call
cmp
sub
push
popf
lds
mov
aad
or
imul
pop
cmp
mov
push
mov
xor
data16
cltd
xchg
hlt
sub
loopne
lods
xchg
sbb
dec
xor
cmpsl
shrl
outsb
inc
lahf
mov
mov
jle
les
nop
jmp
aam
mov
or
mov
jb
push
jo
movsl
push
roll
inc
ffree
imul
cmc
ret
dec
push
stc
aas
call
jmp
aaa
sti
mov
in
movsl
add
fidivrs
repnz
cmc
push
int3
xchg
fwait
out
inc
mov
mov
es
cld
arpl
mov
xchg
aad
mov
push
sub
add
lret
test
sbb
add
pushf
lods
mov
cld
or
adc
notl
or
sbb
test
divl
mov
loope
jl
pop
mov
sbb
jo
jge
or
adcb
pop
lret
std
mov
mov
inc
cmpsb
push
loope
adc
sub
xor
fcmovnb
push
add
jo
pop
daa
in
and
fcmovu
pop
xchg
loop
add
dec
icebp
mov
insl
not
jle
in
lcall
inc
or
push
mov
cmp
rorb
mov
cmp
lret
in
das
bound
popa
fimuls
jne
js
add
xor
out
mov
test
xlat
iret
aas
pop
clc
aaa
adc
sti
cmpsb
in
xchg
out
jge
in
lds
hlt
lret
xchg
out
lcall
les
push
mov
and
imul
inc
sbb
push
sub
pop
jp
adc
and
dec
dec
lds
gs
decl
mov
repnz
lods
fstpl
mov
or
out
add
cs
jns
in
pop
xorl
pop
sti
popf
mov
add
adc
cmp
push
sub
addr16
test
push
fwait
cmp
xlat
jbe
adc
sti
popf
ljmp
int
aam
hlt
and
push
outsl
cmp
stos
pop
mov
pop
fcmovbe
sub
shll
leave
ljmp
scas
popf
push
aas
rcrl
cmp
mov
mov
mov
in
inc
rolb
hlt
lock
in
mov
mov
xchg
aaa
js
jne
cmc
pop
pusha
adc
in
xchg
jge
add
hlt
push
adc
addr16
dec
pushl
lods
push
xchg
scas
hlt
pushl
js
test
subb
in
gs
jecxz
ret
jne
push
fistps
adc
sub
daa
push
mov
adc
and
movsb
xchg
inc
js
test
push
leave
insb
std
add
jmp
nop
mov
repnz
push
xchg
or
outsl
sbbb
ljmp
push
aaa
loope
rcl
pop
shrl
push
fnsave
decl
sbb
nop
add
push
sbbl
or
xchg
adc
sar
cmc
adc
and
mov
jg
sub
pushf
mov
push
adc
sbb
push
shlb
xchg
sub
jns
pushf
add
lods
pop
adc
mov
pop
testb
mov
arpl
cmp
jns
fs
adc
pop
lods
test
unpcklps
in
sub
in
out
in
fisubs
in
xor
scas
adc
xchg
stc
pop
cmc
into
mov
mov
lahf
mov
clc
add
daa
in
pop
movsl
out
lcall
sbb
xor
rcll
pop
cmpsl
cli
cmpsb
dec
sahf
cmc
mov
pop
rcrl
sbb
fs
mov
add
push
das
xchg
inc
gs
pop
mov
into
xchg
push
aam
movsl
pop
rol
movsl
xchg
nopl
mov
sbb
mov
out
out
inc
cmp
scas
imul
jl
repz
jne
mov
add
cs
mov
sub
int3
xchg
mov
push
rcr
mov
jno
cmp
loope
popf
fisttpll
cmp
ret
push
shll
sbb
repnz
lcall
mov
inc
sub
test
push
mov
or
int3
push
ficoml
fildll
imul
aad
jne
ss
xchg
fs
dec
pop
ds
aam
cli
insl
jae
cmpsb
pop
orl
test
sub
sbb
jge
and
push
jecxz
roll
pusha
jnp
mov
out
lds
out
movsl
and
sub
pop
sbb
mov
jp
data16
pop
data16
xlat
lock
sbb
imul
arpl
dec
cld
jb
outsl
repz
sbb
mov
jb
lods
aas
fldcw
sbb
mov
arpl
stc
mulb
aaa
push
mov
insb
push
out
and
xor
test
mov
mov
inc
test
aad
clc
cmp
mov
pop
cltd
movsb
pop
jnp
loop
fwait
mov
pop
cmp
pop
xor
in
or
push
add
or
data16
jo
mov
xchg
push
shrb
jbe
add
inc
inc
imul
mov
cli
es
sahf
fldt
mov
push
sbb
push
stos
push
jg
das
mov
fs
mov
outsb
push
or
loope
sub
or
pop
outsb
aaa
jno
cmp
pop
sub
popa
sub
mov
xor
or
ljmp
add
lahf
pop
daa
mov
and
pop
lds
sar
fisttps
xchg
jle
fisttpll
mov
stos
popl
les
pop
mov
addr16
mov
ja
imul
fcmovnb
add
test
or
adc
xor
fsubrs
aaa
in
cmp
pushf
pop
pop
jmp
fs
aam
mov
gs
cmpl
sbb
lahf
out
lea
push
jg
sub
test
gs
jne
xor
xlat
jmp
adc
and
dec
lahf
and
enter
xlat
aas
fisttpll
inc
mov
ret
cltd
ret
pop
sub
cwtl
pusha
inc
std
sbb
dec
in
imul
sub
inc
pop
dec
imul
int3
iret
push
jnp
pop
inc
idivl
ja
ret
loop
shlb
lret
icebp
mov
xchg
lds
push
jne
push
sub
outsb
lahf
xor
jge
ss
jb
jb
sbb
xor
mov
les
push
dec
ja
inc
sub
mov
inc
out
sbb
loope
jne
sbb
push
dec
adc
outsl
testl
cmp
push
gs
in
xor
mov
add
shlb
cmp
pop
inc
adc
pop
notb
add
or
mov
add
jg
inc
int3
cmp
xchg
sub
mov
rcrb
imul
mov
sbb
stc
call
mov
stos
out
in
or
mov
inc
adc
lcall
js
scas
mov
cmpsl
jbe
repnz
or
add
add
hlt
push
fbld
mov
jns
movsl
or
sbb
out
ds
dec
lods
std
dec
fldl
pop
idivl
pop
and
and
std
push
ss
xor
stc
pop
imul
and
sub
or
mull
addr16
push
les
pop
lods
arpl
fisubs
cwtl
ret
scas
mov
cs
int
jle
inc
push
push
int3
aaa
movswl
adc
in
popl
push
jo
and
mov
mov
mov
out
fxch
daa
int
lods
fdivrs
add
outsl
shl
adc
out
or
in
or
roll
stos
lret
push
pop
aas
jp
into
cld
mov
cwtl
shlb
xchg
in
cmpsl
popf
fsubrs
mov
add
pop
ss
mov
iret
movl
jecxz
andl
pop
nop
in
imul
and
pushf
movb
xor
or
mov
or
inc
add
pop
fs
mov
mov
bound
mov
cmp
popa
pop
add
es
test
shrb
into
pop
inc
fisubrs
lahf
in
ja
xlat
sbb
dec
or
push
lods
cs
je
mov
cmp
sub
icebp
dec
cli
popa
cmc
jne
mov
mov
dec
fcom
jecxz
movsl
dec
push
repz
cmpb
add
mov
pop
and
testb
lock
mov
fisubrs
or
dec
icebp
ret
mov
jns
mov
in
mov
aaa
cmp
jno
jecxz
popf
adc
call
fwait
pop
stc
jae
lds
in
rolb
sti
aam
mov
pop
and
adc
adc
jg,pn
mov
pop
stos
decl
pop
mov
inc
or
cmp
xor
outsl
mov
sti
stos
daa
sbb
pop
mov
pop
push
sub
cmp
scas
push
sti
into
dec
leave
icebp
jae
jae
in
imul
dec
mov
and
mov
adc
push
jl
xor
clc
mov
fs
pop
std
mov
adc
jo
outsl
test
jb
fwait
and
mov
gs
jmp
fidivs
mov
fwait
pop
xchg
jae
movsl
mov
lds
mov
and
and
and
sbb
outsl
ds
out
xchg
sub
inc
subl
cmpsl
int
repz
jne
and
mov
xlat
mov
sub
in
arpl
sbb
test
adc
inc
in
jl
cwtl
xorb
setne
movb
mov
xchg
jmp
xchg
xchg
add
push
ljmp
mov
popa
cmp
fisttpl
test
inc
movnti
icebp
pusha
jbe
popa
lods
mov
mov
pushf
cld
xchg
fcomip
rcl
push
imul
mov
mov
dec
mov
jns
xchg
jne
pop
in
fidivrs
cld
addl
lock
xor
add
sbb
xor
aad
dec
hlt
sti
pop
pushf
pop
sub
jle
and
mov
popa
sbb
ss
mov
roll
add
sti
cmp
mov
and
cld
dec
pop
cmp
adc
lods
dec
jae
jg
cmpsl
mov
push
mov
inc
and
jecxz
sub
test
mov
lods
clc
dec
sub
in
fiadds
mov
repz
sub
inc
in
insb
cmp
sahf
and
lret
idivl
mov
dec
out
push
pop
bound
movsl
cwtl
daa
jg
test
out
popa
dec
fxch
icebp
in
pop
lcall
push
jne
mov
sub
test
adc
fnstsw
xchg
sarl
fistps
sub
cmp
fnsave
jl
iret
icebp
aam
fsts
inc
cmp
xlat
fstps
insb
dec
xchg
push
cmpsb
and
stos
imul
pop
sub
fidivrl
jb,pn
dec
sub
xchg
inc
les
movsl
arpl
dec
fimull
adc
jo
stos
ljmp
cwtl
cmp
pop
xor
xchg
bswap
inc
xlat
push
and
mov
into
fiadds
inc
jns
sub
sub
push
scas
inc
cltd
aad
cli
mov
mov
xor
out
mov
inc
pop
les
inc
daa
dec
and
arpl
and
cltd
xor
add
lods
shlb
cmp
xor
int
add
pop
cmc
fists
sub
fs
stos
testl
push
in
pushf
or
lods
sbb
pusha
shlb
add
insb
es
mov
aas
and
test
push
jo
mov
mov
das
push
mov
or
adc
push
dec
scas
or
lods
movsl
xlat
rolb
cmpsl
inc
push
cmpsl
sub
xlat
push
push
std
mov
cmc
sti
fnsave
jmp
push
cmpsl
xchg
addb
shlb
lret
push
xchg
mov
test
movsb
pusha
mov
dec
ja
cmp
lcall
arpl
lea
sbbl
outsb
arpl
leave
ret
and
in
xor
jb
xor
inc
xlat
into
bound
pop
mov
dec
clc
sub
loop
mov
ret
andl
add
or
std
les
jbe
mov
stos
cmp
add
out
xlat
dec
cmp
push
lods
or
jle
shll
fs
test
sub
sahf
in
or
pop
sbb
pop
and
jmp
pop
into
or
in
nop
add
sbb
push
pushf
sub
mov
cltd
lret
popl
or
sbbl
or
test
clc
push
push
mov
cmp
and
cmp
lock
dec
fisttpl
test
cli
sub
xor
and
mov
mov
mov
sub
lock
inc
aas
hlt
sub
stos
out
jnp
imul
out
push
rclb
or
int3
cwtl
push
jno
mov
sbb
or
cmpsl
push
outsl
in
xor
int3
in
push
lods
fidivrl
imul
ss
inc
je
pop
mov
mov
sbb
orb
xorl
popa
sbb
out
dec
mov
sub
dec
jle
push
aad
pushf
or
jbe
out
std
cli
cmp
dec
outsb
xchg
mov
rcrb
jo
lock
leave
aas
cld
or
popf
dec
jp
enter
jbe
rcr
fldt
adc
aas
mov
stos
mov
pop
mov
push
lea
arpl
adc
inc
or
jg
daa
test
pop
shrl
or
loopw
add
sub
sub
lret
mov
icebp
inc
clc
lea
je
faddp
out
dec
lds
ds
ficomps
in
push
loop
jbe
or
int
andl
mov
push
out
cmp
lahf
mov
movsl
mov
add
loop
lock
cs
cmp
jecxz
test
pop
push
test
cmp
xchg
mov
in
data16
dec
pop
mov
sbb
mov
lea
sub
mov
pop
cmc
mov
lods
jle
cmc
es
scas
xchg
mov
pop
sub
call
stos
mov
add
sub
xchg
js
dec
cli
test
jecxz
xchg
rcrl
mov
fidivrs
inc
xchg
cmpsl
scas
loope
arpl
jnp
jg
sub
xchg
inc
mov
iret
mov
cmp
dec
adc
ja
cmpsl
fistl
test
movsl
jno
sbb
movsl
fdivrl
sbb
outsl
push
lahf
fists
andl
sbb
jne
dec
ret
jbe
mov
inc
push
fidivs
leave
xchg
cmpsb
mov
ds
jecxz
pop
out
incb
loopne
jg
sarb
lahf
stos
fwait
ds
fmul
push
pop
mov
call
cmp
movsb
push
daa
xor
aas
std
sbb
sub
rcrb
out
fs
cmp
in
cmp
pop
lahf
outsl
leave
mov
dec
fstps
bound
jmp
jnp
and
outsl
pop
adc
and
test
mov
shlb
or
jno
dec
int3
testb
pop
fwait
jns
mov
mov
pop
push
cmc
mov
cs
jnp
out
lahf
or
dec
js
cmp
mov
adc
ljmp
xchg
sub
pop
dec
xor
iret
loop
andl
test
out
daa
rcrl
inc
imul
sbb
outsb
mov
and
in
mov
mov
mov
mov
lret
lea
jmp
mov
ds
pusha
xchg
leave
adc
rolb
icebp
call
and
add
adc
cld
imul
aam
lods
cmp
int
mov
sbb
and
dec
xchg
fwait
ljmp
and
jns
stos
nop
dec
and
xor
lret
movsb
mov
mov
inc
push
out
es
ljmp
sub
and
daa
mov
xor
mov
leave
xor
das
in
fisttpl
adc
mov
in
jmp
out
rclb
cwtl
sub
int3
push
outsb
cmpsl
xchg
xchg
dec
sub
aam
fs
mov
imul
mov
out
idiv
jp
and
scas
outsb
sbb
out
dec
lret
inc
ret
or
xor
ret
pop
xchg
icebp
dec
or
mov
mov
rcrb
inc
rcl
inc
add
jae
enter
jmp
and
mov
ret
inc
ficoml
mov
sbb
push
xchg
push
inc
outsl
push
or
fwait
mov
iret
jno
popf
test
lcall
push
jp
jge
out
lock
add
mov
lret
xchg
pop
repnz
scas
pop
daa
xor
int3
js
outsl
push
and
pushf
add
jo
push
mov
test
mov
loop
gs
arpl
inc
adc
rcrb
jmp
pop
lahf
lahf
adc
mov
add
fnstcw
dec
loopne
jp
loop
out
pop
lea
cmp
test
jecxz
lds
xor
sti
nop
into
fidivl
push
or
jecxz
movsb
jle
in
cs
push
cli
aaa
push
roll
jae
push
rcrb
loope
adc
jmp
jno
sub
loopne
imul
rol
xchg
mov
jmp
sbb
mov
lahf
fadds
push
pop
cmpsl
enter
mov
mov
dec
lcall
mov
sbb
addr16
cs
and
push
cmp
ds
xorl
iret
add
add
lret
xor
mov
mov
mov
dec
inc
insl
adc
jge
inc
lds
xor
insl
dec
out
push
cmp
out
fs
std
xor
xchg
push
jl
pop
inc
mov
pop
jne
jmp
into
mov
jge
inc
jecxz
popa
insl
and
sar
negl
sbb
mov
push
or
stos
jmp
rolb
pop
pop
push
ret
mov
add
inc
dec
and
sbb
xor
add
adc
loope
sti
xor
xchg
mov
or
add
in
sbb
repnz
arpl
push
dec
aad
test
int3
cmp
xchg
int
mov
stos
push
bound
mov
adc
fistpl
mov
scas
in
inc
mov
je
movsl
adc
outsl
hlt
js
inc
in
in
cmp
jl
hlt
xor
imul
notb
jbe
xor
push
test
ds
outsb
sub
fwait
out
xorb
ss
push
adc
mov
inc
out
bound
jbe
loope
jle
sub
pop
repnz
inc
iret
jmp
pop
in
into
and
xchg
sbb
popf
mov
or
inc
inc
scas
cmp
aaa
pop
cltd
inc
sub
sub
inc
push
xchg
in
es
push
and
push
xor
gs
ss
outsb
sbb
das
leave
jae
repnz
out
xchg
ret
sbb
shrd
xor
adc
loopne
pop
xchg
and
aad
sub
clc
jns
mov
push
lock
mov
jmp
outsl
push
xchg
inc
ret
repnz
inc
fidivrl
cmpl
jb
scas
call
int
jp
jbe
call
fidivl
inc
jo
inc
js
enter
jae
loopne
in
cmpsb
mov
fwait
call
add
cli
jae
xor
pop
sbb
mov
mov
out
push
pop
xor
aas
stos
leave
in
fs
xchg
cmp
call
loope
push
fisubl
jmp
push
sbb
or
call
jl
inc
mov
test
mov
sbbl
pop
adc
lods
dec
negl
outsb
sbb
imul
mov
sbb
jg
movsb
mov
movsl
xor
adc
mov
aas
xor
out
mov
out
push
push
das
sub
mulb
test
shll
sti
out
inc
sub
jns
pop
shrl
sbb
mov
sbbb
data16
in
cmc
int3
loope
xor
test
shrl
or
jns,pt
sbb
cbtw
mov
ljmp
cltd
cmp
cld
inc
cmp
mov
push
pop
jbe
jg
test
cltd
or
inc
jne
aaa
or
push
test
mov
add
repnz
cmp
imul
add
sarl
inc
mov
ljmp
jge
gs
mov
inc
mov
pop
or
lret
lret
push
mov
addb
sbb
xlat
lock
pop
dec
or
inc
mov
outsb
xchg
mov
dec
push
push
arpl
jecxz
je
cmp
or
and
popa
dec
jle
sbb
pusha
inc
daa
jno
xchg
es
imul
push
xchg
jns
jb
ret
jnp
inc
ljmp
inc
cmp
insb
cmpsb
xchg
mov
xor
sub
sub
and
fucomi
test
test
mov
fsubl
sbb
lea
and
negb
loope
shl
cmc
jbe
popf
iret
pop
std
scas
xor
aam
jg
mov
ja
fwait
push
cmp
loope
and
sti
add
xchg
xor
lahf
and
jns
cmp
inc
fsubs
leave
outsb
out
or
sar
jmp
mov
push
cmpsb
push
push
repz
jecxz
xchg
stos
cs
shl
sbb
daa
je
adc
dec
or
shll
loop
pop
aaa
popf
int3
fnsave
and
lods
mov
dec
cltd
cmp
lock
xor
addr16
jnp
jle
ds
popa
or
sub
or
add
push
jecxz
mov
inc
in
xlat
and
push
pop
ror
jo
add
loop
sbb
inc
push
pop
scas
push
jno
push
inc
fbld
pop
xchg
stc
mov
jbe
addb
sbb
ret
sbb
aaa
cmp
xchg
jns
repz
cmp
jle
js
js
xor
jbe
mov
mov
adc
stc
xchg
xchg
and
leave
jne
ret
jmp
and
inc
dec
cmpsl
mov
aam
adc
mov
pop
ljmp
mov
pop
sbb
mov
into
pusha
inc
and
xchg
fisttpll
cli
push
test
jl
lods
out
sub
sbb
dec
fs
aad
test
inc
leave
sbb
xchg
and
pushf
sbb
cld
xchg
mov
loop
fisubrl
ficoms
sub
icebp
push
pop
andl
inc
shll
hlt
push
neg
sbb
mov
cmp
dec
xchg
or
andb
inc
clc
inc
lock
leave
lea
mov
aam
cltd
cwtl
cmc
push
iret
and
xchg
mov
pusha
mov
divl
sub
dec
xchg
cmp
loope
and
add
or
pop
mov
test
mov
push
das
iret
lds
dec
jg
in
fwait
jmp
push
daa
adc
aas
test
push
and
jno
and
inc
rolb
push
pusha
inc
iret
add
inc
push
mov
das
add
adc
data16
add
scas
mov
sub
sub
nop
mov
rorb
jmp
call
inc
lret
enter
adc
push
and
jp
sbb
add
ret
scas
andb
sti
pop
insb
ret
nop
into
sub
cmp
mov
lret
sbb
mov
int
mov
adc
cs
pop
rorb
loope
or
or
fnstcw
push
das
loop
push
push
push
cli
call
jge
sahf
adc
dec
pop
sub
jno
das
scas
xchg
dec
xor
jo
mov
push
clc
mov
push
sub
daa
and
mov
call
inc
or
jmp
sbb
imul
cmp
jmp
ja
adc
lds
mov
adc
fcmovbe
fwait
ljmp
sbb
repnz
aaa
or
lcall
stos
lds
push
lret
je
push
or
dec
push
cmp
in
dec
dec
xor
mov
les
mov
cmp
fnsave
fldt
lea
xor
ret
and
mov
mov
adc
sub
sub
jg
mov
xor
sub
test
and
pushf
lcall
sub
cmp
rorl
movsl
stos
fistps
xchg
jmp
aaa
mov
arpl
pop
fcomip
rcll
adc
in
xor
jnp
push
cmpsb
je
ret
test
adc
jecxz
pop
ficoms
lea
adc
repz
bound
lret
push
sbb
jo
int3
int3
popf
pop
imulb
jp
fcoml
jo
filds
jno
mov
xchg
add
pop
mov
inc
out
lret
and
pop
fildll
testb
fsubrs
inc
js
pop
cmpsl
adc
push
inc
dec
out
pop
pop
rcl
scas
mov
xchg
jb
lcall
jne
orb
cmp
sbb
sbb
bound
pop
jle
sub
pop
or
ret
cmc
jge
mov
pushf
ja
aam
adc
cmp
cwtl
pop
lods
insb
push
jae,pt
leave
mov
dec
icebp
jno
js
pusha
mov
subb
mov
les
rclb
jmp
stos
add
pop
repz
xchg
push
add
adc
cmc
xor
cmp
cmp
add
mov
lret
jno
add
and
fldt
stc
out
cmpsb
les
setne
sbb
loopne
sbb
adc
fdivs
and
lea
cmpsb
push
adc
and
fidivl
in
mov
xor
inc
mov
mov
aas
jp
pushf
insl
and
nop
and
jo
out
out
and
inc
cmc
hlt
insb
dec
mov
and
adc
leave
std
jle
and
mov
push
repnz
pop
das
and
add
sarl
dec
jl
test
iret
scas
xchg
mov
mov
jno
decl
rcrl
les
sti
jne
add
and
inc
rcll
or
dec
and
push
lret
cmp
out
mov
aam
jbe
scas
fdivs
pause
mov
mov
xlat
mov
sub
cmpsl
pop
scas
movsl
shrl
inc
jns
cld
loope
jo
shll
js
popf
fstpt
pop
clc
add
add
jge
xchg
mov
push
sbb
pop
push
gs
xchg
pop
jmp
adc
cmp
mov
leave
mov
movsb
mov
xor
cmp
imul
out
jl
mov
pop
ds
xchg
js
pop
push
mov
mov
pop
adc
jecxz
test
push
in
adc
test
addr16
rcll
jne
cmp
les
scas
dec
ds
mov
sbb
in
xchg
sti
add
pop
ficoml
xchg
fsubs
std
xor
sub
xchg
jnp
sub
adc
cltd
fdivrp
out
xchg
test
jbe
bound
jbe
cmpl
and
push
nop
adc
sub
dec
orl
fildl
cmp
xchg
jp
jne
test
mov
pop
sbb
aam
push
in
and
and
test
inc
mov
in
mov
mov
pop
adc
mov
lea
fbstp
push
daa
scas
or
mov
push
push
jle
and
cwtl
out
rcrb
push
ftst
insb
ret
add
popf
bound
addr16
add
adc
fcomps
fimuls
pop
fnstsw
aas
out
push
mov
inc
mov
cwtl
and
sub
clc
jno
cmpsl
mov
xor
cmp
jge
push
mov
aam
lahf
or
push
pop
push
jle
lahf
adc
push
jecxz
push
loope
fcoms
xchg
insl
in
mov
stos
lcall
xchg
sar
jno
xor
imul
imul
inc
out
push
adc
into
inc
mov
xchg
and
faddl
add
popf
loopne
push
xlat
scas
or
lods
xor
sahf
jne
jge
xchg
shlb
call
adc
mov
adc
adc
lods
sub
pop
mov
adc
push
lea
adc
mov
lods
es
dec
popf
addl
cmpsl
add
push
mov
sti
adc
push
add
mov
xlat
sbb
mov
ljmp
xchg
sbb
add
pop
dec
rcrb
mov
xor
outsb
dec
dec
mov
pop
pop
movb
fdivl
xor
mov
add
popa
scas
xlat
sub
aaa
mov
out
loope
in
out
sbbl
repz
int3
into
push
scas
imul
in
cltd
ljmp
lret
pop
popa
push
loop
popl
hlt
addr16
stc
jb
int
push
cmpsl
push
jmp
mov
push
test
ret
jne
add
imul
insb
inc
inc
fistpl
aas
mov
rcrb
dec
cltd
leave
dec
cld
sub
lds
imul
gs
dec
loop
xchg
ss
fmul
push
mov
test
adc
jecxz
pushl
adc
add
mov
xchg
mov
jl
mov
lahf
pushf
loopne
inc
dec
dec
ja
aad
jmp
and
fdivr
xor
sbb
dec
adc
mov
xchg
aad
lret
mov
add
and
mov
jo
out
and
xor
mov
pop
or
xchg
mov
hlt
pop
in
rclb
mov
mov
dec
aaa
push
adcb
dec
pop
pushf
mov
inc
stos
mov
test
and
inc
mov
push
je
in
in
jl
lcall
dec
mov
or
or
sub
stc
outsl
add
ud2
push
push
ret
sbb
out
push
out
jb
push
pop
pop
das
fisttpll
mov
fldt
xchg
inc
mov
sbb
sub
and
jbe
push
loopne
stc
test
shl
test
lret
mov
jae
dec
mov
negl
lea
int3
xor
mov
out
es
jmp
jo
sbb
cmp
push
addr16
jb
pop
add
inc
mov
push
out
aaa
int3
lret
xchg
cmp
fidivs
push
nop
dec
mov
outsl
icebp
push
push
sub
sbb
inc
push
dec
lock
pop
sub
rolb
movsb
mov
sbb
in
mov
sub
fstpt
idiv
rcll
and
mov
int
out
jno
pusha
xor
shlb
nop
push
or
mov
mov
sbb
jmp
jno
cmp
sbb
data16
xlat
push
repnz
jp
add
test
scas
addr16
adc
push
movsb
push
add
push
jno
push
ljmp
adc
mov
jnp
or
cmc
jo
stos
aas
loopne
add
daa
mov
negl
iret
pop
cld
jnp
jp
push
scas
mov
fimull
mov
les
push
cmpsl
mov
cmp
mov
into
xchg
inc
out
cmp
mov
cmc
pop
loopne
xor
in
jg
mov
inc
rclb
nop
sub
jb
faddl
subb
andb
sarl
inc
pop
mov
es
mov
pop
neg
cmp
pop
xchg
movsl
fildl
and
addr16
push
cld
inc
in
mov
test
rorl
test
daa
add
dec
int
je
xor
loope
add
and
dec
fmul
xchg
sub
push
stc
add
jecxz
mov
into
sub
fsubrs
outsb
test
jne
fwait
mov
mov
std
inc
scas
fistpl
mov
pop
outsl
clflush
dec
or
insl
lahf
in
jb
pop
xchg
out
js
push
add
fstl
xchg
xchg
ds
jae
xchg
dec
dec
jnp
leave
mov
push
es
xlat
push
adc
xchg
dec
push
cmc
stos
jge
cmp
js
jge
jp
mov
mov
jge
ret
rep
adc
loope
add
xchg
push
jne
ret
adc
shlb
inc
sbb
movsl
out
sbb
jno
in
inc
push
add
out
das
repz
ljmp
pop
ja
mov
sub
inc
sbb
lea
cli
cmc
dec
and
pop
std
jb
out
ss
aaa
fwait
addb
add
push
aad
aaa
mov
xchg
pop
xchg
iret
dec
mov
cmpsl
pop
shl
ja
inc
std
cmpsl
stos
mov
ficompl
leave
iret
pop
mov
int3
push
pop
inc
movsl
sbb
sbb
stos
sti
ds
sbb
sbb
shll
or
sub
in
xorl
cmc
and
mov
add
dec
adc
sbb
fcmovbe
sub
jmp
pop
adc
mov
mov
int
out
xchg
stos
iret
dec
fsubs
and
sub
mov
stos
lock
hlt
mov
push
mov
jae
ja
cmp
push
and
and
dec
mov
iret
fiadds
xor
mov
dec
inc
xor
cmc
mov
lea
clc
pop
lcall
ror
mov
shlb
and
xor
jge
movsl
cwtl
ss
je
jl
stos
repz
ljmp
lcall
stos
outsb
sbb
lock
inc
xchg
adc
inc
mov
jo
xor
xor
in
ret
push
js
aad
sub
leave
jle
pusha
repz
mov
stos
xorb
xchg
clc
outsl
out
shlb
jne
cmp
cld
out
mov
loop
dec
xor
jg
and
leave
mov
push
push
inc
or
movsl
jbe
xchg
fucomi
in
mov
cmp
mov
xchg
leave
iret
push
stos
aam
sbb
lods
dec
inc
incl
mov
jo
inc
sbb
pop
inc
aas
ud2
xor
adc
sbb
adc
dec
mov
push
jg
xchg
sub
inc
inc
fsubrp
fidivs
shl
lods
sarl
inc
sbb
inc
pop
popf
adc
or
mov
call
xor
push
sub
std
imul
inc
xchg
cli
sbb
jbe
out
adc
clc
call
push
cli
out
jecxz
ret
jge
push
movsb
pop
jl
imul
cli
sub
xlat
push
cmp
mov
enterw
mov
dec
repnz
mov
pop
jge
imul
jmp
nop
pop
nop
fdivrl
aam
lret
rcl
insl
aas
lds
ror
arpl
das
andl
in
push
addl
jl
ja
in
push
pop
mov
dec
test
mov
sub
sbb
pop
notb
lcall
mov
xchg
incl
lods
sub
mov
cmc
shrb
adc
cli
repz
xchg
lcall
jp
pusha
fldt
pop
push
sbb
and
ret
adc
inc
cmp
sbb
ljmp
in
jnp
scas
outsl
push
insl
mov
imul
in
pop
mov
jmp
test
mov
push
data16
shlb
and
mov
popa
mov
or
sbb
and
and
jne
push
enter
push
mov
pop
pusha
js
in
cmpb
shll
dec
jns
push
cs
add
add
pusha
mov
adc
repnz
out
movsb
push
lods
aas
inc
cmp
adc
in
fbstp
loop
and
sti
add
add
sub
cli
inc
out
pop
jb
push
pop
sarl
pop
int
in
das
jbe
push
sub
sbb
sub
cld
add
shl
in
sbb
ficoml
lret
popa
enter
divl
imul
jno
sub
mov
js
push
push
fcoml
pop
insl
inc
loope
or
inc
push
pop
out
icebp
and
pop
in
stc
push
sbb
dec
lret
jle
jno
inc
and
push
dec
push
pop
stos
cmp
movsb
fwait
mov
xchg
test
adc
fdivrs
xchg
int
rolb
jle
cld
leave
inc
sbb
insl
repz
sbb
ficoms
xchg
jecxz
adc
icebp
aad
mov
adc
pop
loop
in
dec
dec
add
popf
dec
cmp
jns
jno
mov
lahf
dec
int
or
cli
jle
mov
inc
cmp
pop
jp
je
std
lds
outsl
cmp
push
popf
xchg
jo
or
cmc
cmp
cli
fadd
lahf
test
shll
scas
adc
sbb
outsl
jge
mov
je
sbb
or
adc
jns
loope
sahf
pop
enter
jmp
adc
daa
push
mov
js
xorb
mov
sbb
jp
dec
in
stos
jb
push
add
jbe
movsl
sub
stc
push
jnp
clc
adc
mov
push
inc
outsb
es
scas
add
adc
daa
jmp
in
jg
dec
jae
repnz
cmp
subl
cld
sbb
adc
mov
jp
and
xchg
xlat
lcall
sub
pop
ja
sbbl
mov
jb
and
lahf
movsl
stos
mov
insb
push
clc
mulb
sbb
sahf
push
pop
xchg
std
lds
andb
arpl
sub
in
movb
rorl
jge
aam
pop
push
fbstp
outsl
mov
loope
sbb
sub
mov
or
ja
std
fcmovnbe
scas
test
cmpsb
mov
cmp
mov
add
js
xchg
jg
int3
pop
and
or
xchg
pop
inc
jle
aaa
jae
rcr
dec
xchg
nop
push
mov
mov
push
icebp
jnp
mov
xchg
in
sbb
mov
ja
int3
in
jmp
fdivl
jo
ds
pop
add
xchg
es
cmp
rolb
and
stos
jnp
mov
call
test
inc
mov
mov
dec
jae
mov
xor
mov
cmp
push
scas
xchg
bound
add
imul
dec
mov
push
push
sahf
dec
insb
shll
sub
repz
aam
push
stos
add
mov
or
adc
xor
mov
js
repz
mov
mull
xor
sbb
and
mov
sub
dec
aas
jge
popa
cmpsb
mulb
push
push
jne
je
jnp
xor
imull
push
dec
aas
aas
outsb
imul
lea
push
ret
sbb
add
pop
add
outsl
xchg
rcr
mov
jle
pusha
cmp
add
push
push
out
xchg
dec
test
push
out
mov
scas
cmp
call
fistpl
js
cmpsl
adc
lods
mov
mov
arpl
ret
or
in
cmp
enter
sub
mov
cmp
mov
ljmp
pop
lret
xchg
fisubrs
into
push
ret
mov
imul
dec
std
pop
outsb
and
jbe
or
ss
xchg
aad
test
sbb
add
push
mov
push
push
bound
mov
mov
test
stos
mulps
sti
filds
xchg
sbb
mov
adc
dec
push
push
cmp
push
dec
mov
int3
into
mov
out
lds
push
popf
xchg
jle
push
push
out
and
jl
out
xchg
pop
pop
fisubrl
fldl
hlt
adc
cmp
sub
mov
mov
in
add
or
ret
sbb
xorl
inc
mov
jne
inc
and
fistpl
mov
jb
call
jge
push
and
sarl
inc
mov
mov
jne
and
test
insb
xor
ss
add
jb
push
fdivrs
in
push
sbb
stos
jge
and
ja
sub
xchg
leave
dec
pop
je
pushf
mov
jbe
xor
adc
rcll
push
in
loop
lret
subb
es
adc
lcall
pop
jno
sbb
fcoml
mov
insl
int3
mov
mov
subl
les
lret
push
bound
add
jp
or
cmc
xor
mov
jg
sbb
xchg
xor
loope
pop
xor
dec
fistl
scas
pop
sub
dec
lea
enter
or
xlat
mov
push
adc
and
pop
lods
das
in
ret
cmp
cmp
sub
xchg
jmp
je
lahf
jg
ljmp
pop
lock
cmp
pop
add
xchg
ja
fimull
lcall
js
mov
pause
sub
movsb
cli
ret
outsl
cmp
mov
shr
int
inc
xchg
xor
sbb
dec
mov
cmp
jl
std
rol
push
jmp
shrb
insl
fisubl
add
fwait
pop
cmp
sub
mov
jle
jo
or
popa
decl
cld
adc
push
dec
cmp
cmp
mov
pop
imul
dec
call
in
dec
lods
sti
inc
adc
shl
leave
je
sbb
arpl
cmc
notl
out
cli
sub
inc
xchg
pop
sbb
cmp
dec
mov
push
pop
cvtps2pi
addb
aam
dec
test
sub
out
jns
sub
jo
sub
mov
cs
push
fcomps
push
add
or
jle
dec
js
pop
push
sbb
mov
adc
mov
cwtl
scas
and
loop
inc
sbb
sbb
inc
and
popl
xchg
iret
in
aaa
call
cmp
rcrb
outsb
rcrl
lock
or
mov
jecxz
and
inc
jp
fidivs
add
cmpsl
xchg
loope
pushf
stos
sbb
mov
leave
fisubrl
mov
loope
mov
testb
mov
pop
and
jg
pop
mov
ror
mov
fscale
pop
mov
sarl
xor
stos
imul
cmp
sqrtps
cmp
sti
insb
fnstcw
fwait
cmpsl
sub
mov
leave
mov
fldt
xchg
sti
pop
out
adc
sub
cmp
sub
cwtl
movsl
mov
mov
inc
mov
nop
inc
rolb
pop
in
mov
js
cs
sbb
inc
ljmp
iret
jp
xor
dec
inc
pop
xchg
push
jmp
mov
sub
xor
pusha
sub
stc
hlt
sarb
jno
cs
or
cmc
es
push
push
push
or
sbb
mov
insb
xor
sub
sub
cmpsb
jb
lret
and
mov
adc
mov
or
mov
lods
sbb
mov
fists
xlat
test
or
call
in
jnp
cmp
cs
ds
push
fcmovnu
mov
stos
idivl
cli
mov
cmp
pop
daa
jp
lds
lret
or
addl
addl
sub
jge
jg
push
loope
imul
mov
popa
testl
daa
xlat
and
cmc
mov
bound
dec
aas
jne
or
test
inc
and
loope
add
mov
add
filds
push
daa
mov
mov
inc
jne
xchg
xchg
add
jg
fidivs
outsb
outsl
cmc
imul
jecxz
xchg
add
movsl
cli
mov
xor
cmp
or
jne
xchg
sbb
cmc
mov
bound
movsl
cmp
les
out
pop
cmpsb
and
inc
test
mov
mov
movsb
mov
repz
pop
mov
cmp
fwait
xor
lods
cli
out
pushf
lahf
test
bndldx
xor
rcr
xchg
rcrl
cltd
inc
orb
xor
mov
cmp
test
adc
in
push
mov
pop
loope
adc
out
lret
sarb
scas
mov
sbb
pop
cmp
cs
jae
mov
das
sbb
sub
add
mov
cmp
jbe
or
jb
int
xchg
test
lcall
fwait
stos
and
mov
sbb
push
es
pop
jl
push
jecxz
jg
and
pop
mov
mov
es
or
mov
push
loope
int3
cwtl
aas
jmp
add
int
adc
lcall
sbbb
or
mov
aad
stc
cltd
mov
fidivs
inc
sub
mov
pop
call
adc
mov
shl
push
xchg
adc
mov
pop
test
cs
xchg
sahf
sbb
mov
icebp
mov
jle
sub
leave
daa
out
inc
ss
dec
pop
xor
add
test
push
repz
fwait
sub
nop
loopne
int3
stos
sub
enter
addr16
testl
and
jnp
push
mov
lahf
xchg
xchg
das
or
cmp
jmp
jecxz
aam
ljmp
add
push
hlt
ret
xor
mov
pop
pcmpeqw
dec
sub
or
stos
mov
addr16
and
fidivs
insl
mov
pop
je
and
pop
movsb
lods
cltd
sbb
rol
fisttpl
lret
mov
mov
push
xchg
sub
mov
orl
dec
cmp
arpl
shll
pop
imul
pop
lea
xchg
ja
lds
or
sub
mov
into
sbb
lock
icebp
gs
cmp
in
data16
inc
movsb
hlt
pushf
scas
lds
mov
faddp
pop
shll
sti
outsb
push
adc
test
in
or
cltd
adc
mov
xchg
push
xchg
fsubr
andl
out
stos
mov
cmp
mov
lods
icebp
and
hlt
add
mov
xchg
in
jg
push
add
add
test
fwait
leave
push
movb
ret
loope
push
cmp
inc
adc
pop
fisttps
lea
sbb
adc
enter
sbbl
int
fs
es
daa
sub
out
das
popf
lds
push
pop
int3
rcr
into
imul
mov
pop
ds
lea
movsl
add
repz
mov
push
test
shr
sbb
jae
das
ds
je
jnp
push
sti
aam
cmp
mov
and
jo
inc
cmp
xor
mov
fst
rolb
ret
pop
jmp
clc
imul
sti
movsl
or
cld
mov
mov
rcll
mov
mov
xor
daa
mov
loopne
imul
movsb
push
out
gs
inc
fldcw
aaa
push
mov
xor
sbb
push
loop
and
lea
jne
test
in
xchg
sub
xor
mov
incl
orl
mov
loope
loop
mov
stos
cmp
xchg
bound
es
pushf
in
xchg
cli
into
mov
arpl
jne
mov
jns
frstor
mov
pop
sti
jo
mov
mov
xor
mov
add
outsl
xchg
fwait
mov
and
adc
loop
mov
les
push
xchg
dec
push
xlat
sbb
sahf
in
stos
and
daa
nop
dec
pop
cmp
popf
or
sub
and
push
stc
or
jge
pop
movsb
addr16
push
test
jl
dec
test
push
jecxz
sahf
or
mov
cmpsl
icebp
aaa
sbb
pop
scas
xor
jbe,pn
repz
jle
repz
or
pop
adc
jb
pop
mov
pop
mov
mov
jne
xchg
push
imul
mov
adc
out
mov
push
push
or
jg
xchg
xchg
xchg
and
icebp
repz
inc
lahf
push
testl
orb
cmp
mov
fs
mov
ss
xchg
mov
lds
jl
xor
ss
pop
push
mov
jb
jmp
add
loopne
jns
fcoms
push
push
call
aas
mov
sti
mov
mov
dec
push
sbb
cmp
nop
je
inc
push
mov
das
dec
hlt
fbld
sub
push
andb
cld
in
sbb
jmp
das
repz
push
sbb
xchg
adc
cmp
cld
and
movsb
fistpl
or
sub
dec
popl
sti
enter
sar
xchg
sarl
lcall
push
dec
jno
adc
lcall
xlat
mov
lret
aas
cmc
mov
jmp
cwtl
cmpb
adc
xor
push
mov
jl
rclb
cmp
stos
xlat
popf
mov
xchg
mov
inc
dec
idiv
lds
lret
inc
xlat
nop
cld
mov
or
mov
mov
inc
jnp
ds
in
sub
lock
rcll
and
sub
mov
lahf
pop
in
mov
sub
cli
lret
push
inc
pop
popf
cmp
jmp
andl
mov
movsb
xchg
adc
out
lcall
mov
xchg
dec
aam
dec
sbb
imul
outsl
testb
cmpb
movsb
shlb
pop
adc
jmp
mov
scas
stc
adc
or
ds
je
scas
lret
inc
pop
sbb
mov
lret
jl
pop
inc
dec
dec
mov
ss
sub
fmull
jmp
pusha
stc
inc
out
inc
push
filds
jnp
push
js
pop
push
inc
adc
jns
ss
aad
fdivs
cld
fs
dec
mov
and
seto
sub
jle
faddl
dec
dec
mov
outsb
in
dec
and
xor
sar
cmp
mov
jae
adc
lret
mov
test
lcall
aam
ror
jne
xchg
or
loope
xchg
inc
nop
rol
mov
fnsave
popf
add
cmp
adc
arpl
leave
mov
push
jmp
fstl
jg
mov
gs
ds
xchg
mov
repz
add
iret
inc
jae
lcall
lcall
or
nop
inc
clc
and
or
sbb
add
add
lcall
bound
stos
mov
ret
into
mov
arpl
out
and
imul
xor
test
dec
cmp
lds
pop
xor
xchg
je
sub
notb
xor
and
jge
and
push
add
push
mov
rcl
repz
imul
loopne
nop
mov
cmp
fsubrl
sti
loopne
lds
cmc
pop
mov
stc
call
inc
clc
fidivrl
daa
mov
daa
pop
add
mov
pop
jns
and
xor
pop
pop
pop
mov
dec
add
movsl
dec
jl
movsb
xchg
mov
mov
ret
xchg
or
test
xor
gs
xor
xchg
jge
dec
sub
test
movsl
sbb
push
and
fildl
cmp
mov
ret
dec
jg
pop
ljmp
icebp
jno
lods
sahf
aam
hlt
sub
cld
or
clc
adc
out
jbe
dec
aaa
pop
or
push
sbb
les
fildl
in
mov
jg
lods
stos
pop
aas
mov
daa
jbe
push
xor
mov
sub
sarb
mov
mov
push
mov
imul
push
sbb
jecxz
test
mov
out
push
dec
sbb
out
std
pop
mov
insb
mov
add
je
iret
sub
mov
sub
pop
les
cmp
or
js
push
jo
or
sbb
call
mov
gs
pop
aad
inc
roll
xor
mul
call
fidivs
jno
and
or
cwtl
xchg
jp
sbb
dec
cwtl
xor
pop
rorl
push
mov
in
and
fadd
test
xchg
imul
xchg
pop
mov
je
xchg
mov
fbld
inc
test
sbb
dec
inc
push
shll
mov
inc
popa
mov
daa
cmc
lret
inc
mulb
movsb
cmp
mov
stos
insl
lods
mov
jge
dec
sub
cltd
jp
call
push
addr16
add
clc
test
popa
jnp
arpl
aad
add
adc
lock
push
hlt
mov
pop
orl
xchg
push
hlt
xchg
jl
push
push
imul
outsl
imul
adc
pushf
and
fsubr
cmp
push
push
lahf
loopne
sub
subb
jg
es
fcomi
pusha
mov
aas
jl
or
and
adc
movsb
incl
mov
xchg
push
pop
rcrl
xlat
lret
adc
mov
xlat
xchg
or
lds
adcl
or
ljmp
aad
and
enter
or
fimuls
out
push
ds
lret
cwtl
and
or
sbb
add
in
dec
inc
push
jp
arpl
mov
xchg
jne
out
pop
or
imul
jbe
or
mov
jmp
lods
testb
out
pop
cmp
xchg
cmc
add
test
or
mov
sbbl
and
jo
cmpsl
leave
and
fcoms
mov
mov
push
dec
repz
nop
dec
sub
add
adc
imul
mov
cmc
stc
dec
push
mov
push
jb
inc
cmp
mov
js
aaa
insl
test
pop
leave
jo
popf
je
lret
aas
lahf
sub
rcrb
adc
mov
inc
push
jns
pop
jp
mov
jne
mov
fadd
lret
inc
jp
jge
js
les
push
or
and
push
pusha
cmp
xchg
rorb
or
clc
cmpsl
inc
push
movsl
scas
test
push
mov
imulb
push
lcall
js
cmp
rcrl
dec
out
inc
push
inc
add
cmp
mov
dec
addr16
ret
mov
cmp
mov
pushl
xchg
loop
popf
or
shlb
pusha
xor
into
enter
aad
aaa
ret
int3
inc
iret
add
fadds
les
mov
movsb
sbb
add
mov
sub
adc
outsl
ja
and
enter
pop
pop
arpl
adc
or
sti
add
push
outsb
jae
outsb
aas
icebp
mov
sbb
adcl
inc
leave
dec
inc
fmul
or
sbb
jp
enter
push
test
js
mov
sti
sbb
or
mov
lods
mov
bnd
lret
dec
imulb
pop
stc
out
out
cmc
and
cmp
rcll
out
dec
clc
popa
mov
pop
call
ds
sbbb
fistps
cmp
in
ljmp
loopne
aas
push
inc
xchg
outsl
dec
repz
push
in
sbb
arpl
popa
push
out
jmp
idivl
xor
sbb
in
push
mov
aaa
inc
jb
cmc
fiadds
test
and
xor
icebp
leave
lods
es
mov
add
mov
fcoms
pop
insl
xor
cs
mov
ljmp
cmp
pop
ja
mov
aaa
sub
jnp
mov
sub
and
aaa
lds
ds
xchg
jle
ss
lret
and
bound
push
cmp
sti
out
fldl
adc
cmc
pusha
sbb
loop
ret
inc
inc
movsl
cwtl
mov
movsb
nop
cmp
lods
into
cmc
lods
cmp
sbb
fdivrs
jns
xchg
aas
sub
das
pop
rcrb
in
fmul
push
or
sbb
pop
jle
xlat
aad
aaa
xchg
dec
push
mov
mov
iret
loopne
xchg
mov
clc
sbb
or
cmpsb
js
popf
js
jo
mov
and
jg
lcall
dec
xchg
jo
stos
mulb
xchg
mov
xor
and
mov
out
and
scas
and
pop
push
xlat
jp
push
xchg
and
adc
bound
xchg
jbe
pusha
push
pop
mov
cld
mov
fldcw
leave
stc
fcoms
sub
repz
or
pmaddwd
imul
cmp
bound
sub
sub
cmp
mov
lret
imul
into
xor
idivb
or
iret
hlt
inc
cmp
mov
cwtl
cmp
sub
andb
and
push
or
call
lcall
adc
xchg
jns
jbe
lcall
int
jp
enter
cmc
cld
cmpb
xchg
in
stos
fs
mov
aad
jo
mov
push
xchg
dec
or
inc
dec
shl
adc
outsb
pop
bound
mov
push
enter
int
and
shrl
dec
ret
lods
sbb
pushf
or
ds
dec
mov
cmova
pusha
fsubs
xor
addr16
fidivl
dec
dec
adc
xor
adc
mov
cmp
jbe
gs
mov
mov
jbe
push
jne
cmp
in
ret
out
addr16
jecxz
push
add
cwtl
shlb
loope
cmp
pop
cmpsb
rol
cmpsl
and
cmc
add
ret
stc
or
sub
outsl
pop
or
inc
ds
mov
pop
xlat
mov
aam
push
push
and
repnz
sub
andl
cwtl
fisubrl
dec
mov
dec
aaa
dec
ficompl
mov
scas
call
int3
or
sub
jge
call
cmp
xchg
adcb
insl
mov
sub
pop
out
stc
pushf
insb
data16
mov
test
incb
sbbl
or
orl
push
pxor
cmpsl
jp
stos
fists
insb
aas
add
push
cmp
push
lahf
fs
jp
stos
inc
push
icebp
mov
outsb
push
vfnmsubpd
inc
into
fisttpl
rcrb
push
imul
pusha
ja
sbb
mov
cmp
mov
gs
inc
popf
add
mov
mov
adc
inc
test
addr16
rcrb
mov
adc
sahf
into
pop
push
stos
xchg
iret
push
rclb
sbb
sahf
arpl
fnsave
cld
or
in
mov
fsubr
push
and
mov
js
sbb
push
out
cmpsb
sbb
movsl
mov
xchg
xorl
in
lods
div
cmp
adc
xchg
lock
cld
push
dec
inc
xlat
inc
mov
cli
lock
lahf
mov
or
dec
in
test
es
dec
rcl
nop
mov
sbb
push
xchg
inc
mov
mov
lea
ret
or
cmp
push
mov
push
lods
insb
push
mov
jo
sahf
jg
jb
les
dec
adc
mov
arpl
int
jns
inc
pop
xor
int
xchg
jbe,pn
rol
xchg
popa
lods
ja
sti
jmp
xchg
sbb
fisubrs
testb
mov
je
sub
int3
ja
fsub
mov
int
ficoml
std
cmp
push
ljmp
lds
pop
xor
repnz
pushw
inc
push
jo
dec
and
adc
inc
xor
frstor
movsl
out
imul
xchg
add
negb
imul
add
add
fildl
mov
xchg
mov
into
pop
fmul
ljmp
mov
push
push
fidivs
push
dec
das
xchg
rcll
jecxz
mov
in
cmpl
inc
int
mov
sub
repnz
mov
inc
clc
ret
pop
jmp
test
mov
xchg
arpl
or
mov
je
add
int
shrb
or
pusha
xor
push
dec
cld
mov
mov
repnz
incl
push
jp
lret
xor
and
pop
mov
mov
or
xchg
out
fildl
pop
lcall
cmpsl
mov
aam
xor
push
adc
mov
cmp
mov
jg
xorl
stos
cmp
bound
fwait
xor
fbstp
out
push
jg
shrl
jg
data16
dec
cmp
pop
icebp
cmp
jne
xchg
inc
sahf
or
ss
insl
mov
shrb
pop
fcmovnb
cs
repnz
shll
dec
dec
outsl
and
mov
fwait
dec
sbb
xchg
inc
cmp
es
push
adc
xchg
sarb
popf
cmpsb
cli
jg
call
inc
jne
jb
cltd
push
mov
sti
mov
cmp
bound
call
pop
das
pop
test
push
shlb
daa
jb
imul
out
lea
or
lods
lret
pop
or
shlb
outsl
mov
out
and
std
or
lock
adc
push
clc
lock
scas
in
fadd
mov
outsl
or
das
test
scas
pop
xor
sub
jmp
pop
mov
sub
ja
pop
adcb
mov
pop
push
push
dec
xor
push
xchg
stos
sub
inc
pop
clc
hlt
shl
push
cmp
jg
inc
inc
cmpsl
and
cmp
cmp
and
loop
dec
movsl
out
mov
rorb
add
int
ret
rclb
jnp
push
aaa
popa
stos
sub
lds
movb
add
into
jo
sarb
dec
addr16
jbe
xor
mov
mov
dec
shlb
addl
lods
insl
repnz
test
push
cmp
push
call
sub
inc
or
mov
testl
cmp
gs
jne
mov
cmp
in
repz
mov
aam
dec
sti
mov
and
arpl
bound
les
jge
bound
pop
jmp
adc
jmp
or
sub
adc
mov
mov
aas
test
iret
icebp
test
mov
lret
lock
popa
insb
enter
dec
das
cmp
jp
std
arpl
xchg
stos
into
icebp
mov
hlt
mov
xor
sbb
jo,pn
lret
adc
sbb
pop
stc
or
jl
xchg
xchg
add
into
scas
xorb
xchg
jae
insb
and
stc
pop
pop
lcall
aam
movsl
popf
inc
les
sti
cltd
ficomps
outsb
das
xchg
sub
mov
jp
mov
add
mov
data16
cmp
fiadds
aad
push
push
jne
icebp
mov
into
fists
fisubrl
lods
mov
jmp
cmp
jecxz
in
repz
int3
sbb
jbe
aaa
notl
lods
sbb
inc
add
lret
mov
in
xchg
jo
mov
sbb
lret
xor
cmp
add
mov
xchg
xor
fs
pop
jg
sbb
lret
popa
push
sub
data16
sbb
sbb
sbb
stos
adc
mov
outsb
daa
pop
xor
jb
xor
mov
js
push
and
mov
sarb
rcrl
pusha
jmp
pop
pop
dec
fisttps
add
lea
xchg
aam
mov
fdivrp
pop
mov
add
cld
mov
test
xlat
mov
test
cmp
test
mov
or
pop
or
andb
pop
cmpsl
inc
pusha
dec
arpl
mov
and
and
loopne
insl
mov
push
mov
idivl
mov
sub
cltd
loopne
loopne
out
sbb
inc
adc
xor
dec
pop
fldlg2
pop
xchg
lods
je
or
cli
push
daa
push
pop
inc
out
pop
call
xchg
addr16
in
mov
sub
jg
repz
loop
pop
sub
nop
push
jb
gs
or
out
sub
imul
mov
mov
loop
adcb
pop
ja
pushf
ret
adc
pop
out
add
mov
fucomi
jle
push
pushf
repnz
sub
adc
push
mov
cmp
pop
mov
mov
xchg
cltd
xor
scas
jb
mov
dec
jnp
int
dec
adc
out
cwtl
cli
repz
mov
pop
call
scas
mov
add
fstl
sub
jp
mov
mov
jg
xor
mov
sub
in
pop
movsb
into
fwait
mov
mov
add
mov
pop
stc
ret
jl
add
add
inc
pop
pop
popa
test
jb
out
lret
inc
rcrl
imul
loop
pop
jne
mov
sbb
aas
jb
sbb
loopne
lret
sub
pop
jns
or
testl
inc
shlb
or
jae
and
adc
pop
inc
push
ret
test
sar
dec
adc
loope
xchg
mov
jmp
les
enter
xchg
insb
inc
iret
cli
outsb
xchg
loopne
outsl
outsl
jp
test
mov
xor
jge
je
cmpsb
scas
je
iret
mov
push
xor
pop
mov
xor
daa
ret
jno
mov
movsl
mov
sti
xor
ret
iret
xor
dec
cld
scas
mov
or
es
or
add
mov
mov
fsubrl
jo
shrl
xchg
jmp
cwtl
add
mov
iret
cmp
push
aaa
into
jnp
loop
lock
enter
xor
push
sub
idivb
pop
cmp
cmp
and
or
mov
repnz
or
pop
inc
loop
dec
fldt
jg
aaa
dec
jbe
dec
mov
xor
icebp
cmc
fsub
jp
adc
jp
lret
sub
shlb
jg
sahf
mov
or
sub
out
movsb
cmp
xor
ds
in
shrb
xchg
mov
popa
add
adc
test
in
inc
adc
repnz
test
aas
in
mov
pop
cwtl
pop
adc
mov
add
data16
lods
mov
inc
mov
clc
push
jae
sbb
repnz
loope
push
sbb
psubq
rorb
cmpsb
jg
scas
add
lds
dec
inc
pop
mov
fnstenv
sti
sbbl
aam
sahf
fstpl
lock
jnp
mov
xchg
sub
xchg
test
mov
outsb
out
leave
mov
ljmp
xor
scas
mov
popa
loopne
cmp
lods
xor
cmp
pop
sub
ficoms
aas
mov
inc
push
and
mov
adc
pop
mov
or
mov
adc
sub
cmpsl
inc
clc
sti
jl
xchg
popf
dec
mov
dec
jl
les
xchg
fwait
mov
pop
fldcw
cltd
xor
call
int3
insl
mov
push
mov
sbb
mov
add
js
jmpw
mov
xor
pop
idivb
add
fwait
jae
imul
pop
ret
add
mov
push
inc
leave
mov
sub
cmp
scas
pop
in
mov
adc
pop
in
jg
cmp
aad
adc
leave
mov
test
adc
dec
cmp
stos
in
mulb
mov
jp
mov
aad
gs
inc
inc
cld
daa
mov
enter
xor
imul
pop
cwtl
xchg
icebp
push
jecxz
add
cmpsl
add
dec
jmp
stos
nop
or
add
pop
test
push
lahf
out
cmp
or
lea
popa
inc
int
or
cmpsb
clc
and
out
pushf
mov
xor
jg
dec
push
adc
repz
jno
aaa
out
mov
call
dec
js
push
pop
fstl
outsb
mov
les
into
cmp
or
lds
ret
test
dec
jae
loopne
xor
xchg
pop
lahf
mov
xchg
xchg
out
in
lock
pop
jb
xchg
cmp
mov
rcrb
push
mov
cmp
mov
mov
inc
sahf
inc
jno
imul
clc
jl
pop
imul
int
add
outsb
ljmp
icebp
sbb
or
outsl
xor
xor
xor
adcb
insl
clc
xor
pop
fisubrl
sub
aaa
jne
es
fisttps
jg
andl
push
outsl
sbb
adc
icebp
dec
leave
in
add
loop
push
test
lea
out
mov
xlat
adc
fldt
jp
cld
dec
xchg
pushf
or
scas
lock
mov
add
pop
xchg
or
fmuls
mov
in
sbb
push
push
shrb
repz
pop
icebp
negl
dec
orl
xorl
jp
mov
inc
js
jg
jp
adc
fdivrl
push
xor
inc
add
mov
xchg
jmp
inc
jle
pop
ljmp
cmp
xor
stos
sub
xor
jnp
movsb
xor
adc
cmpsb
mov
dec
add
xchg
aas
sub
mov
xor
dec
jmp
fsubs
jnp
adc
inc
push
lret
mov
pop
ds
xor
push
mov
dec
add
and
cmp
std
pushf
repz
push
std
pusha
pop
xchg
repnz
sbb
or
out
pop
and
cli
mov
xchg
mov
push
pop
leave
pop
mov
fisttps
jle
pop
sbb
add
and
mov
stc
int
sbb
pop
fstl
push
jge
or
adc
das
je
jns
push
mov
in
pop
xor
adc
jmp
ss
cs
lods
out
pop
inc
push
add
int
nop
outsb
sbb
jnp
xor
sub
icebp
xor
mov
dec
mov
sbbl
daa
pop
fwait
shll
ret
iret
ss
sub
xchg
mov
lret
jge
inc
xor
es
and
xchg
mov
sbb
pushf
jle
ljmp
mov
jb
test
shrb
push
mov
lods
pop
push
imul
mov
jb
sub
outsl
iret
fimuls
jle
push
xor
adc
cmp
push
fcmovne
push
mov
jge
repz
add
enter
shll
ret
adcl
cmp
cmpsb
js
add
or
or
xor
out
insb
xchg
and
jmp
pop
xchg
or
jmp
lods
das
inc
push
lds
xchg
add
jnp
or
movsl
adc
lret
icebp
jns
dec
xor
inc
test
sub
sbb
dec
lahf
cs
loope
mov
inc
test
mov
ret
sub
arpl
mov
repz
fcompl
mov
mov
xor
mov
ret
or
add
addr16
sahf
test
xchg
push
lret
sti
mov
jbe
daa
roll
mov
xchg
and
in
out
int
mov
sbb
mov
and
in
pop
btr
mov
clc
pop
fimull
pop
jp
mov
mov
pop
push
ljmp
mov
pop
stos
ds
cmp
fmuls
xchg
mov
stc
rclb
adc
mov
mov
in
out
xchg
mov
push
inc
jmp
repz
cwtl
je
js
and
int3
sub
jge
out
bound
lret
shll
idiv
arpl
sbb
lret
repnz
jo
sub
adc
jne
scas
dec
sbb
mov
ja
call
test
and
dec
jp
lahf
out
fwait
rcl
or
cmp
loopne
icebp
add
push
sub
adc
mov
lods
ljmp
int
xor
dec
into
addr16
insl
std
or
repnz
xchg
movsl
insb
sub
cmp
test
int3
push
and
les
into
sahf
adc
ret
aad
push
mov
xchg
shl
jne
inc
ss
in
inc
addr16
cmp
mov
aas
imul
shrb
int
cltd
lods
pop
enter
push
xor
and
add
mov
cmp
repz
dec
mov
pop
loopne
jecxz
cmp
repnz
add
fildll
movlps
fidivrl
out
sub
adc
pop
mov
data16
jg
mov
iret
jge
sbb
cmp
mov
mov
push
imul
xchg
scas
adc
sub
sti
push
pusha
xchg
fucomi
push
scas
add
std
cltd
sub
dec
inc
shlb
xchg
push
outsb
movsl
push
jbe
jns
pop
iret
pop
int
movsl
fdivrl
dec
repnz
shll
or
pop
or
sbb
test
orb
das
mov
int3
and
clc
push
push
push
mov
adc
inc
rolb
push
dec
xor
mov
pop
xchg
out
xlat
movsb
arpl
fisubrs
inc
sbbl
out
dec
xor
inc
or
ss
sbb
repnz
mov
inc
cld
clc
stos
push
mov
and
mov
mov
dec
pop
imul
push
sahf
cmp
in
xlat
pop
pusha
cmp
stc
dec
sub
mov
int
cmp
ljmp
jle
fimuls
jb
dec
in
daa
adc
sbb
lcall
jecxz
mov
fisttpl
mov
fsubs
lret
mov
push
test
test
lret
repz
or
cmp
mov
cmp
dec
add
stos
jns
mov
xchg
stc
dec
inc
loopne
push
ljmp
inc
xchg
fisubrl
shrb
or
out
jnp
nop
push
loope
xchg
sub
inc
push
pop
xchg
out
jmp
xchg
mov
in
js
ret
and
inc
mov
ja
xor
dec
ss
adc
ljmp
jl
cltd
jno
lret
je
outsl
mov
out
jnp
mov
jp
and
xchg
pop
and
push
mov
stos
out
dec
gs
mov
movsl
push
inc
in
ds
fs
aaa
jmp
pusha
cmp
rorl
es
jmp
outsl
mov
push
icebp
or
push
scas
decb
inc
leave
loop
into
jl
jmp
ret
icebp
fsubrp
jo
push
mov
cmc
loopne
pop
add
lret
add
out
call
xor
sahf
and
sete
mov
dec
mov
xchg
lcall
pop
data16
mov
ds
xlat
push
push
adc
lret
push
in
cmp
popf
mov
pop
hlt
and
sub
arpl
pusha
push
lods
sub
xchg
dec
outsb
rorl
and
pop
lret
popf
push
mov
xchg
cmp
mov
ret
mov
mov
lahf
jmp
push
out
pop
jne
sbbb
xchg
lcall
lret
cmp
in
imul
push
arpl
xor
jg
addr16
pusha
hlt
push
mov
xchg
fs
adcb
jmp
jmp
pop
jmp
ret
fs
sbb
mov
jnp
push
jo
pop
jge
fcoms
jns
inc
push
cmovne
dec
cld
movsb
dec
dec
inc
es
call
xor
and
je
mov
adc
sub
jbe
rcll
push
mov
fisttpll
cli
push
rorb
cli
inc
inc
leave
pop
fldcw
testb
xchg
out
ficoml
fcoms
adc
cmc
mov
pop
xchg
add
jae
jp
out
mov
ret
pop
stos
jmp
jne
addr16
ja
pop
je
xchg
xor
dec
mov
xor
scas
sti
mov
fbld
clc
outsb
push
andl
pop
pop
mov
adc
adc
orl
lds
daa
pop
cmp
fstpl
icebp
stos
and
inc
cwtl
push
cmc
lods
call
sbb
mov
adc
xor
leave
daa
movsb
fiadds
js
xor
mov
jae
fisubrs
call
mov
push
jne
out
mov
mov
xor
push
add
jne
mov
jae
and
xchg
mov
jp
adc
mov
out
movsb
mov
dec
cwtl
mov
jg
hlt
cs
ds
jne
dec
pop
push
mov
cli
popa
test
repnz
xchg
es
cmp
testl
test
mov
pushf
cmp
adc
push
in
fwait
jmp
insb
pusha
push
xlat
mov
cmp
xor
out
fnsave
in
pop
into
sub
fldl
shlb
mov
cmovge
dec
sbb
movsb
pop
dec
and
lock
sub
enter
jp
hlt
sti
insb
outsb
jmp
lret
das
addb
mov
mov
cmpsl
inc
stos
mov
test
xor
pop
cmpl
jmp
out
mov
lret
in
jb
sbb
sarb
int
pop
out
pop
bound
movl
inc
mov
add
pushf
loope
test
fists
jle
sbb
sbb
mov
out
sbb
xchg
scas
add
or
pushf
jns
mov
cwtl
add
inc
sub
inc
and
mov
cmpsl
push
mov
xchg
xchg
in
fdivrp
ret
push
inc
xor
cmpsb
ljmp
je
orb
insl
mov
push
jg
fsubrl
mov
xor
flds
jmp
mov
mov
lahf
add
pop
test
loope
jl
imul
hlt
jmp
xor
lcall
or
sar
or
cltd
and
rcr
roll
cwtl
loope
sub
stos
mov
outsb
fisttpl
mov
outsb
and
inc
sbb
arpl
loope
mov
into
int3
ror
negb
fnsave
aad
sub
fmuls
sbb
dec
int
mov
add
mov
sub
dec
and
aaa
mul
psubq
adc
jae
add
dec
jnp
adc
dec
inc
mov
leave
xor
pop
jb
pop
fcomip
leave
imulb
cs
rclb
testl
jge
fs
imul
sub
loopne
push
movsb
dec
jae
das
pop
cmp
sbbb
subb
pushf
orl
xchg
ljmp
scas
adc
sub
jb
cmp
das
daa
out
shr
pop
int3
call
hlt
pop
inc
jmp
xchg
mov
mov
scas
pop
addb
andb
fwait
pop
fstpl
push
sbb
roll
push
push
ss
pop
cmp
inc
adc
inc
shll
aaa
aaa
sub
add
pushf
cmp
ss
ds
add
xlat
ljmp
xor
rcrl
sub
cltd
ja
cmp
dec
fnstenv
fs
jo
xlat
and
imul
mov
std
popf
rolb
lds
in
inc
aad
pop
das
inc
sub
out
movsl
sbb
nop
test
mov
mov
push
mov
std
sub
out
mov
movsl
scas
jne
frstor
push
add
jl
mov
aam
fisubrs
pop
cmpsb
in
in
jae
mov
cmp
movsl
stos
test
add
sub
or
mov
test
pop
mov
push
cmp
push
adc
ljmp
lret
cmp
push
gs
mov
and
lock
push
pop
out
mov
jbe
js
mov
daa
pop
loop
or
lret
jp
dec
test
dec
test
pop
std
pop
or
shrl
ljmp
popf
stos
sbb
add
leave
ja
push
rolb
nop
stos
js
loopne
push
jg
push
jge
divb
mov
jbe
xchg
lock
ffreep
lods
rcr
in
sub
mov
sbb
jmp
scas
dec
gs
adc
xor
sbb
outsl
dec
sub
leave
jne
pop
cmpsb
in
mov
or
pusha
mov
lods
sub
jnp
sbb
fs
scas
adc
lods
cmp
je
in
lret
scas
shlb
pop
sbb
add
in
movsb
bound
ljmp
pop
and
popa
adc
jecxz,pn
arpl
lods
in
pop
mov
jo
mov
adc
push
jmp
xlat
jp
pop
sub
aaa
push
and
mov
mov
fsqrt
pusha
mov
aam
in
mov
out
push
xrelease
sbb
js
or
jno
pop
and
push
mov
stc
mov
mov
faddp
mov
insl
sub
outsb
and
fisubs
jbe
mov
arpl
icebp
in
or
stos
out
pand
fsts
addr16
cmp
dec
cmp
ljmp
xor
mov
pop
jo
inc
push
xchg
mov
popa
int
addb
or
int
insl
adcl
subb
jle
xor
push
rcl
dec
int
jecxz
andl
ja
adc
cmpsb
test
lock
mov
dec
fcmovnb
sbb
imull
adc
imul
dec
ret
test
adc
inc
xchg
adcl
lcall
out
sub
lret
and
mov
push
jne
or
sbb
cltd
or
bound
mov
aam
std
xorl
rorb
xchg
jg
or
mov
outsl
xor
inc
shll
aas
xchg
aaa
loop
ret
mov
push
xchg
mov
in
rcrb
arpl
stos
mov
out
sahf
adc
jae
mov
enter
stos
pop
inc
lret
mov
test
getsec
mul
cmp
cmpsb
sub
cmpsl
jo
pop
or
mov
mov
pop
mov
in
pushf
dec
enter
or
inc
mov
insb
push
inc
movsb
and
cmp
cmp
rcll
cld
push
inc
xlat
cld
fs
repnz
ss
and
or
rcll
push
out
or
pushf
scas
jg
mov
jo
mov
and
xchg
inc
push
into
cs
mov
popf
popf
add
add
add
cltd
stos
loop
lret
les
fs
pop
inc
jnp
adc
push
and
cmp
out
das
loope
cmp
out
fwait
sbb
mov
leave
add
jg
fldl
jl
js
lret
sbb
jae
inc
pop
cld
inc
cmpsl
and
cmp
and
pop
inc
pop
mov
mov
jmp
dec
fcoms
xchg
test
out
mov
push
mov
push
cmp
mov
dec
inc
in
xchg
test
gs
arpl
sub
mov
insb
enter
pop
jmp
push
jb
mov
sub
cmp
jge
inc
sbb
mov
mov
fsubs
xor
subl
std
sub
shll
push
pusha
add
or
jae
or
xor
xchg
loop
scas
shlb
and
mov
loopne
push
dec
xor
cmp
data16
scas
stos
ss
dec
push
imul
insb
mov
inc
mov
sbb
sti
or
scas
cmp
dec
lods
push
in
je
xchg
push
fsubrs
sub
stos
inc
xchg
xor
lock
sbb
add
jp
mov
je
xchg
mov
cld
xchg
sbb
rolb
addl
adc
jae
fidivl
push
xor
and
icebp
add
inc
aas
or
push
insb
xchg
jae
jns
push
lahf
mov
shlb
insl
push
jmp
popf
jnp
inc
inc
mov
iret
or
push
andb
dec
movsb
addr16
or
addr16
add
add
loope
sub
scas
mov
pop
setae
sahf
fistpl
data16
sbb
or
xchg
arpl
data16
stc
push
scas
jns
pop
xor
sub
sub
cmpsb
mov
pop
nop
mov
nop
cmp
mov
sub
dec
push
mov
jnp
xor
adc
pusha
pop
mov
push
stos
lahf
stos
push
mov
mov
mov
add
mov
punpckhdq
std
fstp
shlb
aam
and
nop
cmp
pop
or
out
mov
popf
aas
jae
add
inc
fsubrs
stos
into
mov
scas
dec
test
pop
sbb
inc
jp
test
imul
push
daa
and
sub
mov
lock
outsl
pop
mov
xor
std
sbb
and
mov
adc
cmp
xchg
mov
or
mov
enter
jg
xor
idivb
pop
jns
movsl
out
pop
shl
cltd
out
pop
push
mov
cli
insl
mov
das
push
in
inc
in
jnp
push
fists
inc
inc
dec
cltd
lea
out
scas
add
mov
add
sbb
int3
addr16
in
psubusb
loope
xchg
repnz
shl
add
repz
mov
enter
in
je
popf
inc
push
and
mov
testl
data16
pop
scas
or
mov
test
arpl
add
mov
addl
sahf
xor
push
dec
xlat
sub
pop
push
in
movsl
jbe
push
mov
fdivrs
lods
xor
out
ret
jno
int3
mov
int
mov
sub
movsb
clc
adc
mov
mov
cs
lret
outsb
mov
test
ds
mov
es
push
sub
or
xchg
xlat
dec
icebp
mov
std
mov
leave
pop
gs
outsb
pop
cwtl
call
ljmp
lahf
mov
outsl
mov
mov
out
mov
add
mov
mov
adc
int3
push
or
inc
inc
pop
sub
gs
stos
fiaddl
test
cmp
mov
mov
inc
stc
push
aad
enter
js
or
in
sbb
lds
inc
out
jbe
jle
popa
push
pop
hlt
mov
pop
mov
xchg
xor
xchg
xchg
cwtl
cmp
shrb
or
mov
ret
or
push
jne
hlt
test
xor
enter
add
loopne
or
clc
mov
mov
pusha
pop
and
push
inc
int3
inc
lock
xor
mov
jae
push
jge
pop
xor
cmp
sahf
cmp
je
cmp
ja
loop
or
ljmp
dec
rclb
idivl
push
clc
pop
or
cmpsb
mov
lods
imul
xor
add
pop
addr16
jecxz
and
lock
in
fstps
sub
mov
sub
dec
gs
jecxz
or
fadd
je
add
or
jns
aad
sub
loopne
ljmp
push
sbb
insl
push
mov
dec
cmp
loope
jle
lock
lods
cwtl
mov
sahf
pop
mov
xchg
icebp
out
lcall
ss
shl
pop
clc
filds
xor
pop
filds
iret
xchg
fadds
cmp
mov
lock
arpl
push
jecxz
xchg
cmp
jae
and
movsb
mov
push
jnp
jbe
jno
xchg
jns
int
int3
ffree
call
scas
orl
cld
mov
subl
cmp
fdivl
and
rorb
ret
arpl
sbb
mov
adc
xor
dec
push
cmc
mov
sub
adc
loopne
and
and
lahf
loope
pop
push
sti
xchg
mov
mov
xlat
lock
aad
push
imul
nop
addr16
xchg
ret
jo
push
push
das
add
sbbl
fwait
leave
jecxz
sub
fld1
fidivrs
out
pop
outsl
xchg
push
lret
cld
bound
aas
loop
cld
loopne
cmp
mov
pop
cmpsb
add
insb
mov
aad
pop
stos
inc
mov
mov
jle
dec
lcall
sub
dec
nop
jne
repz
mov
out
xchg
pop
xchg
jmp
push
insl
fldlg2
sarl
cmp
xor
mov
push
cli
lods
cwtl
testl
inc
sbb
and
sub
jnp
xlat
cs
dec
xor
pop
push
cmpsb
std
sub
xchg
ja
sub
and
adc
add
outsl
push
push
ret
cli
push
mov
mov
fcoml
push
mov
mov
stos
sbb
insb
test
repnz
inc
xchg
cld
test
adc
jae
movsb
or
fldl
push
mov
adc
jb
loope
ja
sbb
ret
xor
int
push
aaa
mov
xor
pop
and
dec
push
dec
push
fstps
out
mov
loopne
imul
add
and
jnp
rcr
xor
orl
or
movsb
add
loope
scas
outsl
and
mov
jle
push
sahf
mov
push
pop
daa
or
leave
aas
push
pushl
pushf
mov
fstpt
pop
in
adc
jge
lods
insl
ss
std
into
inc
mov
cmp
sub
add
add
into
adc
pop
cmp
cwtl
pop
adcb
adc
add
std
into
or
add
sarl
mov
sahf
int
jge
adc
adc
or
fstl
loopne
mov
sarl
fisubrs
push
xchg
pop
bound
pop
jle
push
andb
push
rcll
adc
and
bound
push
icebp
sbb
jo
icebp
in
jle
in
inc
scas
inc
jbe
xchg
movsl
setae
in
movsl
inc
xor
sbb
sbb
jg
and
dec
push
mov
cmpsl
mov
mov
cmp
mov
and
pop
cwtl
fnstsw
scas
popf
sub
aam
cmp
pusha
pop
lret
push
adcl
int3
ds
mov
daa
ja
jns
pop
jnp
andps
cmp
add
xor
pop
xchg
cld
ss
mov
ljmp
mov
xor
lcall
jb
jl
out
aam
mov
int3
xor
mov
dec
jmp
sub
mov
shrb
jecxz
sbb
loop
mov
push
movsb
aas
mov
mov
push
jb
dec
push
push
xor
pop
out
and
sbbb
mov
pop
inc
fnstcw
and
cmpsb
bound
xchg
inc
and
xor
inc
cmp
js
pop
dec
lds
movsl
ja
jne
jl
into
sahf
ret
push
inc
je
xlat
push
dec
mov
ret
push
int3
xchg
insb
in
xchg
clc
cmp
test
imul
sub
fstl
ljmp
test
jmp
and
adc
cld
mov
push
push
push
gs
scas
or
xchg
out
xor
dec
mov
sub
mov
or
decl
inc
loope
push
jecxz
out
std
add
sbb
fistl
cmc
rcrl
sbb
call
lea
sbb
out
outsl
sub
in
pop
cmp
nop
pop
outsl
xchg
fwait
jecxz
jl
pop
adc
jb
hlt
sar
cltd
mov
inc
daa
sub
outsb
data16
push
mov
insl
cltd
fistpl
inc
imul
mov
xor
push
xchg
cld
fistpll
fadds
lock
mov
inc
add
mov
jmp
or
loop
dec
icebp
pop
lahf
sbb
lret
inc
add
outsb
fwait
and
fsubrs
adc
and
dec
aas
test
subb
aaa
add
sbb
cmp
push
pop
js
outsb
enter
inc
xor
into
fstpt
aaa
sbb
pop
loope
hlt
aad
inc
inc
cmp
fs
jb
or
cmc
push
std
xorb
dec
aas
lcall
or
cmpsb
and
push
sbb
ficoml
xchg
iret
addr16
lds
fiadds
idivl
mov
addr16
icebp
aas
mov
xorb
mov
je
lcall
and
cmp
xor
xor
sub
inc
dec
rcll
add
adc
hlt
clc
pop
lahf
xchg
sub
jbe
xor
sbb
test
or
hlt
xchg
jnp
call
add
out
push
ljmp
push
bound
ss
dec
cmc
lcall
jg
mov
jle
sbb
pop
jmp
cli
in
cmc
out
mov
jl
adc
xor
subb
dec
gs
stos
in
fnstenv
mov
mov
out
adc
scas
adc
lahf
jmp
nop
sub
fisttpll
inc
lcall
mov
enter
xor
or
in
jbe
daa
aaa
xchg
pop
mov
ja
dec
ja
dec
aam
sub
jp
mov
nop
pop
andl
pop
push
jmp
fwait
push
adc
pusha
xlat
aaa
jno
into
mov
inc
hlt
mov
adc
jecxz
cmp
pop
add
fdivs
push
sub
imul
fs
outsl
pop
pop
sub
div
in
push
out
push
xchg
pop
lret
mov
adc
sbb
xchg
sbb
pop
loope
ljmp
out
and
daa
push
jp
loop
ficoml
mov
xlat
int3
mov
add
pop
cmp
sub
lret
mov
aad
shll
dec
std
sbb
add
popf
sbb
lock
inc
pop
dec
xchg
stos
mov
push
cltd
rol
push
cmp
adc
jbe
shrl
outsl
mov
hlt
roll
ljmp
fildll
jno
adc
jge
jle
loop
loopne
and
mov
add
mov
and
out
and
sub
sub
sti
push
in
cmp
jp
mov
stos
and
mov
in
data16
jp
cmpb
cmp
cltd
push
push
pushf
jno
out
jp
cmp
into
mov
xor
xor
lret
push
cmp
or
sub
and
jae
dec
and
pop
out
jmp
fs
add
mov
jo
or
push
push
fs
dec
hlt
test
pop
adc
sbb
xor
out
loop
cmp
imul
sbb
xchg
in
or
hlt
cltd
xor
imul
imul
push
mov
pop
lock
adc
aam
pminub
add
jge
jae
adc
cmp
mov
dec
stos
pop
cmpsl
addr16
inc
pop
push
mov
loop
cli
or
cwtl
or
xorl
stos
and
out
cld
mov
mov
nop
push
xchg
fldl2t
mov
in
and
sub
stos
movsb
cltd
pop
lds
leave
je
adc
jae
push
ret
mov
andl
cmc
xor
lret
push
outsb
je
aam
xchg
scas
ljmp
xchg
dec
sub
fwait
je
pop
ss
cmp
push
ret
adc
sarl
jecxz
fcomip
in
jmp
aaa
dec
gs
repnz
or
or
loopne
inc
aaa
sbb
mov
sahf
out
bound
fstp
cmp
pusha
xchg
movsl
sbb
inc
stos
pmulhw
xchg
push
in
ret
push
testl
push
repz
inc
mov
clc
incl
lahf
xchg
sub
lock
int
jnp
shrl
aaa
xor
int
sub
loope
fprem1
pop
sbb
popa
mov
movb
sbb
scas
stc
lret
popf
pusha
push
mov
push
sub
outsl
stos
xchg
in
sub
inc
adc
pop
movsl
add
mov
mov
outsl
ja
jo
sub
rcrl
and
ds
loopne
mov
mov
aas
jle
stc
mov
imul
jl
out
data16
jbe
fisubrl
scas
or
mov
xchg
and
mov
inc
and
push
out
rcr
xor
cwtl
scas
sbb
shll
orb
add
daa
lock
ja
out
sahf
xor
pop
pop
aaa
cmc
dec
dec
sub
xlat
in
jg
je
mov
adc
jae
aaa
stos
aaa
fdivl
bound
stos
rcl
inc
adc
fsubrl
cmp
jns
test
pop
fdiv
pop
dec
push
subb
xchg
inc
jge
jo
and
imul
or
pop
inc
mull
pop
in
or
inc
or
sbb
test
and
cli
jb
outsb
or
inc
adc
stos
cltd
outsb
cmpsb
inc
sbb
fmull
dec
addr16
pop
fsubr
adc
in
jbe
add
out
mov
cmp
insb
xchg
xchg
enter
mov
inc
nop
les
mov
sub
xchg
mov
jle
xlat
sub
pop
lds
push
and
daa
cmpsb
add
or
lret
dec
idivl
mov
jbe
mov
fwait
sahf
lods
popa
jp
adc
fbld
and
mov
std
push
push
ds
or
add
dec
jnp
fcmovbe
inc
stc
cmpsl
cmp
inc
cltd
mov
xchg
ds
and
jmp
pop
adc
xor
jbe
jge
inc
cmpsl
inc
pop
inc
jecxz
mov
ds
mov
repnz
xchg
adc
sbbb
jg
in
lock
andl
sti
shl
es
mov
sub
add
addb
loope
shrl
out
inc
mov
fcoml
mov
imulb
leave
sbb
jnp
cli
inc
les
idivb
lds
clc
aad
int
negl
lock
add
xchg
test
fdivp
flds
mov
lahf
mov
push
dec
loop
aaa
inc
inc
sti
sarb
jp
stos
stos
in
xchg
pop
jb
mov
out
sub
xchg
xchg
ja
das
jno
and
aaa
cmpb
sbb
cmp
ja
enter
imul
loopne
js
call
cltd
mov
cmp
lea
lds
xchg
loop
popf
mov
lock
ret
xchg
jns
sbb
xor
adc
pop
jle
jecxz
cmp
mov
dec
pop
jbe
cmp
out
insl
inc
movsb
fs
or
clc
add
add
lret
das
pop
adc
mov
mov
mov
jg
and
dec
ljmp
icebp
sbb
inc
ljmp
out
jne
jno
pop
inc
xchg
fwait
sahf
mov
sahf
pop
mov
pop
cmp
fsubrs
shlb
xlat
push
fisubs
add
jl
pop
jb
lret
das
pop
imul
jmp
add
and
fiaddl
pushf
jnp
xor
push
mov
pop
dec
cmp
xor
or
dec
push
jmp
ficoms
sbb
and
repnz
lds
arpl
cwtl
mov
dec
or
aas
shrb
xchg
xchg
aas
push
shll
imul
aam
jl
adc
mov
movsl
jp
out
mov
adc
sub
cwtl
xor
xor
shl
push
push
and
dec
loop
ljmp
aas
jns
adc
cs
cli
mov
adc
lahf
pusha
and
adc
stos
popa
mov
dec
pop
or
idiv
stos
dec
mov
xchg
mov
scas
mov
fxch
test
inc
int3
pop
stos
dec
cwtl
add
cmc
out
stc
mov
fnstcw
in
insl
sti
iret
sub
xor
loop
adc
push
xor
or
ja
bnd
sbb
loopew
pop
fdivr
pop
jnp
and
orb
dec
repnz
mov
dec
inc
ret
sahf
or
shrb
mov
fldt
stos
movsb
mov
lds
mov
movsb
and
mov
orl
push
sbb
rcrl
xchg
repnz
dec
fnstcw
push
scas
fidivl
pop
mov
insb
adc
mov
nop
stc
mov
fldcw
test
pop
popf
jno
addr16
repz
test
jecxz
jbe
cld
push
std
iret
sbb
inc
cmp
adc
add
int3
imull
icebp
push
xor
cld
fisttps
mov
test
addb
xor
pop
pop
mov
pop
or
notb
push
mov
int
ret
test
int
pusha
ja
xchg
cmp
adc
jb
fisttps
cmp
js
mov
imul
cmpsb
xchg
add
cmp
jno
outsl
pop
and
or
cltd
js
in
ljmp
mov
lods
push
repz
mov
imul
xor
ret
mov
pop
adc
adc
mov
or
jae
test
into
mov
out
pushl
and
xchg
sbb
pop
aam
dec
out
sarb
mov
movsb
push
jns
cmp
loop
xchg
inc
data16
jb
pop
cld
scas
out
movsb
push
cli
or
xor
jmp
scas
js
pop
push
leave
faddp
push
and
shl
pop
dec
loope
push
dec
rcll
dec
icebp
fildll
lods
adc
cltd
push
cmc
leave
outsl
xor
ret
loope
mov
mov
into
jns
or
sbb
push
lret
xor
lahf
in
push
adc
addr16
test
or
js
add
or
dec
lahf
cmpsl
xchg
ljmp
out
fistps
push
cwtl
lret
push
dec
mov
mov
ja
xchg
and
jbe
xor
outsl
jp
pusha
mov
flds
testb
add
mov
int
sbb
test
and
pop
jne
jae
sub
in
pop
das
or
and
sub
push
arpl
mov
xchg
mov
xchg
in
jle
adc
sub
mov
mov
es
testb
mov
mov
mov
mov
mov
movsl
outsl
sub
clc
addr16
pop
sub
mov
mov
mov
addr16
cmc
or
fst
inc
add
or
or
orl
push
jp
pop
jp
mov
adc
or
pop
nop
inc
push
pop
mov
call
xchg
xchg
mov
mov
mov
jbe
daa
mov
stc
push
mov
dec
dec
add
test
push
sbb
mov
push
test
int
inc
jge
pop
xchg
in
inc
movsl
stc
jnp
push
xchg
rcrl
psubusw
in
pop
cmc
and
cs
fbstp
pop
mov
pop
pusha
adc
dec
stc
and
out
mov
xchg
sti
sbbb
push
mov
cmpsb
cwtl
cmp
sub
clc
fbstp
sbb
inc
dec
or
sub
xor
push
shll
mov
pushf
sub
arpl
popa
lods
movl
nop
rol
adc
imul
jle
ja
es
cwtl
push
int
movsb
cmp
and
push
cmc
outsl
pop
aas
jae
pop
lret
negb
mov
mov
mov
lea
pop
xchg
push
mov
lea
mov
mov
xchg
mov
mov
xchg
rcr
fs
sahf
xor
sbb
mov
pop
fcomps
cltd
ss
xor
aad
xchg
push
jb
ficompl
xchg
lds
mov
sub
loope
adc
add
pop
int
lret
iret
push
pop
outsb
pop
push
stc
fcmovne
iret
into
and
out
adc
inc
lret
lods
push
stos
mov
call
push
inc
lods
or
int
repz
jb
xlat
stc
std
or
adc
mov
cmpsb
call
inc
xchg
ljmp
imul
lcall
cmp
sbb
or
test
das
out
fsubrs
in
repnz
in
xchg
jns
jb
lods
jp
jl
jno
pop
add
hlt
jne
jo
loopne
xchg
in
mov
or
cs
leave
mov
xchg
push
rcrl
insl
data16
or
movsl
jne
add
or
adc
push
mov
or
and
and
aam
push
mov
pop
mov
and
xor
sti
xchg
adc
or
ficoml
xchg
daa
outsl
pop
sbb
fistps
pop
mov
cmc
shl
shlb
push
lret
and
sbb
test
aam
cli
daa
xchg
sbb
jg
mov
shrl
sbb
sbb
imul
out
movsl
sub
jns
sbb
mov
ss
popf
xor
hlt
out
sbb
insb
pop
and
stos
jmp
enter
or
fidivl
mov
xchg
popa
stos
test
out
or
push
insb
and
clc
cmpsl
or
out
add
sbb
mov
xchg
insb
gs
dec
nop
and
imul
xor
in
push
push
inc
adc
addr16
aad
cmp
jmp
cwtl
push
aaa
xor
ljmp
xlat
push
mov
inc
gs
xchg
test
or
out
fldl
jae
push
or
sar
cmp
movsl
pop
test
and
mov
mov
dec
or
cmp
popa
dec
mov
sub
insb
mov
pop
sbb
sub
xorb
mov
dec
add
sbb
and
dec
pop
xor
mov
mov
jbe
cmp
push
notb
sahf
lock
gs
jg
or
cmp
mov
cmp
adc
sub
xchg
daa
pop
test
cwtl
repz
add
xchg
ja
jae
pop
mov
test
sbb
and
lcall
xchg
xor
xchg
inc
out
pushl
clc
inc
pop
mov
lret
test
push
xchg
sub
arpl
stos
push
lcall
jns
sub
hlt
andb
ret
in
and
lahf
fadd
add
and
imul
adc
xor
dec
pop
rcr
sbbb
adc
dec
push
cmpsl
fldenv
xchg
ficoms
mov
push
scas
jnp
and
scas
aam
nop
push
mov
dec
gs
fs
mov
repz
xor
fcmovu
rorl
mov
in
out
je
push
scas
andl
leave
mov
xor
stc
insb
lcall
xchg
bnd
popa
sahf
add
idivb
mov
test
popa
das
xlat
mov
iret
pop
sub
call
repz
stc
inc
sbb
lret
dec
scas
fidivrl
or
mov
sub
fcmove
ret
pop
jae
loop
cmp
xor
sahf
fwait
jmp
sub
sarb
loop
pop
ljmp
hlt
loop
rcr
push
jno
or
arpl
xchg
into
negl
mov
stos
jp
lods
dec
xchg
cmpsb
mov
add
ret
mov
push
fwait
loop
test
imul
into
insl
dec
out
dec
push
out
mov
shrl
cltd
jae
loop
fcomi
mov
pop
fldl
inc
out
adc
rcrl
pop
lea
int
gs
ret
ja
and
pop
shlb
push
daa
jns
add
xchg
pop
mov
out
mov
dec
test
inc
xlat
mov
mov
cmp
ficomps
xchg
xchg
and
loope
inc
add
imul
in
sahf
into
cmp
test
xchg
sub
jmp
movsl
scas
test
out
ja
int3
sbb
dec
jp
xor
mov
fnstsw
xor
adc
dec
les
dec
dec
and
scas
inc
and
pop
fbld
repz
popa
mov
sbb
jo
mov
pop
repz
ja
call
xor
push
je
fadds
out
inc
pusha
rolb
in
test
cmpsl
fildl
iret
push
pop
xor
test
jl
xchg
lret
xor
iret
dec
pushl
adc
mov
push
in
in
dec
test
bound
cld
dec
lahf
std
dec
add
insb
leave
inc
push
and
out
or
iret
aam
push
add
iret
sbb
sbb
clc
sub
xor
adc
insl
xchg
bound
movsb
mov
mov
and
pop
addr16
sub
jl
xor
inc
test
out
les
xchg
xchg
pusha
ljmp
imulb
imul
dec
and
dec
pop
daa
daa
or
cmp
in
dec
push
ldmxcsr
stos
iret
out
aaa
stos
mov
inc
cmp
jnp
shl
or
cmp
sub
jo
pop
pop
sub
push
dec
lock
in
aad
data16
jbe
and
sbb
add
out
shrl
out
jae
pop
dec
idivb
out
mov
pop
into
int3
inc
inc
dec
jl
add
icebp
cld
mov
mov
mov
into
imul
test
dec
push
cmp
mov
inc
push
out
sub
daa
sbb
pushf
dec
test
mov
aas
push
add
sbb
mov
mov
push
jne
jg
pop
lahf
mov
iret
and
push
aam
dec
push
rorl
hlt
lahf
out
shlb
cs
stos
xlat
aas
aad
ret
sbb
movsb
xlat
addr16
inc
test
popf
mov
scas
sbb
dec
cltd
xlat
dec
sbb
mov
in
push
mov
ret
adc
outsl
clc
insl
and
mov
mov
or
leave
push
outsb
call
cmpsl
cmp
cmc
data16
jmp
out
add
clc
or
nop
dec
in
xchg
and
fldcw
fisubs
jg
cs
stos
sbb
insl
test
sub
mov
add
mov
call
dec
loop
outsl
test
or
xor
pop
hlt
out
adc
data16
cmp
scas
jmp
test
imulb
repz
pop
jns
js
popa
pusha
xor
in
pmaddwd
pop
cs
jmp
xlat
jbe
mov
jle
sbb
dec
cli
xchg
call
les
cmp
add
pusha
jmp
mov
into
mov
fwait
lahf
sub
cmovb
sbb
hlt
cmp
push
lcall
mov
into
test
push
xor
jp
shlb
fnstenv
in
mov
lret
sbb
divl
repnz
daa
mov
and
mov
es
jmp
mov
mov
and
jb
sub
push
mov
std
rcll
mov
das
mov
int3
push
sub
push
jns
or
scas
cmp
cmp
dec
sbb
mov
adc
sub
movsb
pop
xchg
adc
int3
jne
lods
mov
popa
dec
cmp
cmpb
cmpsl
fcmovnbe
in
sub
stos
jmp
dec
mov
std
orl
push
insb
cli
cmp
push
pop
sub
adc
int3
shl
repnz
int3
leave
inc
sbb
xchg
mov
outsb
enter
push
test
sbb
cmpl
fisttps
stc
test
mov
ret
or
adc
mov
and
and
mov
pop
sbb
cmp
pop
add
outsb
jg
sub
push
push
add
cwtl
arpl
fwait
shrb
sbb
jmp
fldt
xchg
pop
cld
adc
fnsave
stos
sub
movsl
ret
adc
xchg
call
jno
movsb
mov
sub
cli
mov
sbb
xchg
dec
add
aas
popf
fldcw
daa
scas
ret
lock
sbb
scas
xor
jg
xchg
cs
stc
mov
aaa
adc
add
lahf
cs
push
push
dec
push
cmp
adc
mov
mov
and
xor
mov
fdiv
pop
f2xm1
xchg
inc
mov
jns
daa
push
mov
sbb
test
xchg
rorl
xchg
sbb
add
push
lock
gs
inc
pop
jne
xchg
mov
clc
rorl
pop
inc
and
push
sbb
xor
pushf
mov
adcb
inc
mov
and
arpl
mulb
ss
dec
call
stos
add
aaa
adc
sub
call
repnz
xor
sbb
push
scas
icebp
inc
out
xchg
ret
pop
sti
rol
mov
dec
push
xchg
cmp
rclb
pop
mov
popa
xchg
hlt
push
mov
dec
jmp
xchg
test
lret
inc
adc
in
sbb
mov
lcall
add
fldt
sub
sub
inc
mov
pop
mov
dec
ret
pop
inc
test
ret
and
sub
mov
fcompl
sub
jns
std
stos
jge
lahf
hlt
or
xor
pop
insl
mov
or
mov
shll
xorl
scas
jno,pt
out
or
sub
mov
int3
shl
xlat
inc
adc
mov
aas
aad
inc
sub
fisttpll
xor
inc
xchg
or
test
mov
push
sbb
outsb
pop
push
xchg
pop
mov
mov
dec
fildl
out
ret
les
dec
psubusw
push
hlt
mov
int3
push
xchg
jb
add
icebp
jo
filds
jle
cmp
push
scas
mov
popa
pop
add
in
xchg
andl
jo
and
mov
sar
sbb
sahf
in
scas
mov
mov
inc
outsl
cmp
push
cmp
mov
jmp
mov
jns
ss
in
mov
movsb
adc
and
mov
nop
test
push
dec
dec
dec
cmp
jns
pop
je
mov
mov
enter
fsub
sub
add
mov
or
mov
add
test
inc
pop
pop
xchg
mov
fs
pop
push
ja
test
cltd
ficoms
push
sub
push
mov
inc
out
jne
idivl
mov
inc
lods
push
mov
mov
sbb
imul
or
ljmp
int
fbstp
and
lds
or
loopne
cmpb
mov
dec
flds
fwait
jnp
mov
jns
out
das
test
adc
adc
mov
sub
andb
xor
int3
dec
mov
fcmovb
imul
or
fsts
pop
data16
sub
mov
mov
xor
pop
es
pop
addr16
mov
testb
popa
sbb
and
xor
xchg
pop
sub
pop
aaa
push
fwait
sti
mov
dec
pop
aaa
cmp
andl
fdivs
lret
xchg
shll
push
in
enter
stos
pop
ljmp
pop
ret
adc
sbb
in
add
xchg
mov
sbb
inc
jp
pop
sbb
bound
sarb
clc
push
outsl
push
std
sbb
xchg
jns
pop
ret
mov
stos
sub
or
fnstsw
ds
adc
mov
fstpt
in
jns
pop
lock
jbe
std
lcall
add
dec
cmp
jmp
movsl
mov
inc
push
sub
add
sbb
and
adc
je
dec
xor
jno
iret
lock
xchg
pop
repnz
neg
cmp
sbb
not
jbe
inc
test
sbb
sub
les
testl
les
mov
rol
dec
outsl
add
rclb
jnp
test
fidivl
fmulp
jne
clc
sub
adc
jno
loop
mov
mov
stos
add
xor
shrl
negb
push
aas
inc
jno
cltd
mov
in
negl
outsb
daa
dec
notb
bound
pop
or
lds
in
push
xchg
xorb
sahf
imul
xchg
inc
lahf
leave
or
rol
repnz
and
xor
lret
icebp
cli
dec
and
sbb
cmp
das
dec
xor
fwait
pop
loope
add
jmp
gs
mov
loopne
add
insb
and
dec
gs
cmp
mov
ljmp
loope
fimull
cli
cmp
jp
mov
sbb
cld
std
xchg
add
inc
mov
leave
or
and
ret
test
enter
bound
enter
aad
cmp
leave
sarb
cmp
jecxz
pusha
push
inc
insb
lock
jno
sti
xchg
dec
jmp
mov
and
rcll
mov
insb
fwait
mov
je
jne
jnp
repz
fcompl
lret
aam
call
push
rcl
xlat
mov
in
pop
or
shl
loopne
lret
add
xor
ds
fldcw
add
mov
lea
xchg
add
dec
aad
or
pop
xor
push
imul
dec
pop
xchg
lods
cmp
bound
lcall
fldcw
mov
push
or
fidivrl
push
repz
nop
xchg
repz
aaa
mov
movsb
popf
mov
inc
lahf
or
call
xchg
add
dec
push
or
nop
mov
notb
jns
xchg
test
sbb
jmp
inc
mov
sub
cmp
out
lcall
enter
mov
ljmp
clc
pushl
xchg
shlb
das
fadds
and
adc
sar
fstps
or
push
cmp
jl
or
lahf
hlt
jl
dec
pop
jae
lea
ret
inc
in
jg
sahf
enter
or
xor
push
int3
adc
inc
movsl
add
sub
outsl
scas
mov
test
xor
iret
ss
popa
jb
movsl
imul
dec
insb
leave
xchg
jo
mov
jge
jae
je
dec
cmpsb
pop
test
rcrl
mov
cmp
js
xor
iret
cltd
out
jae
mov
lahf
push
aas
in
ja
ljmp
add
fsub
aam
or
mov
sbb
pop
mov
xchg
and
es
mov
add
test
stc
enter
out
or
ret
mov
sub
leave
add
add
mov
sbb
sbbb
sub
ss
out
aas
mov
lret
adc
push
mov
sub
nop
daa
movsb
inc
add
and
and
xor
icebp
jp
fists
cmp
and
lods
and
rcrl
icebp
lret
in
cmc
ljmp
addr16
jl
rcrl
mov
jl
add
xor
les
jae
mul
mov
xchg
test
cs
xor
test
test
outsb
hlt
mov
mov
fld
insb
xchg
popa
mov
int
std
mov
ret
loope
mov
xor
jbe
fistpll
and
in
movsl
test
movsl
jbe
ret
imul
mov
insb
ffreep
sbb
je
addb
sub
in
or
or
pop
xor
enter
cmp
test
call
add
sahf
stc
dec
out
adc
pop
sbb
mov
cmp
pop
and
xchg
in
int
in
mov
cmpl
daa
push
dec
je
repnz
adc
push
xchg
inc
pop
xchg
das
stos
ffreep
in
or
lahf
jo
xchg
js
clc
mov
div
pop
push
cmp
movsl
addr16
or
scas
mov
ffreep
push
push
adc
cmp
xchg
leave
sub
mov
sbb
aaa
mov
enter
adc
xchg
ljmp
adc
leave
and
out
lret
xchg
fsubrl
sahf
and
or
icebp
inc
jle
repnz
in
mov
pop
loop
hlt
popa
repz
sub
cmp
jne
mov
lcall
dec
test
and
lods
sbb
xor
popf
sets
aam
or
pushf
mov
xlat
push
push
ljmp
adc
mov
pop
and
repz
mov
jns
push
inc
mov
movsl
push
mov
shl
ret
movsb
sub
icebp
inc
cmp
clc
int3
inc
test
push
fwait
sub
xor
test
pop
adc
shlb
mov
in
shrb
adc
pop
mov
mov
jb
inc
jp
pushf
mov
cmp
and
ljmp
adc
stc
push
xorb
movsl
dec
adc
leave
xchg
jle
pusha
cmp
sarl
fisttps
mov
in
dec
rcll
mov
push
aaa
pusha
pushf
movsb
pop
outsb
fnsave
into
sahf
addl
rorb
loope
sbb
and
fldenv
in
shl
xchg
sbb
or
xor
pop
dec
out
stos
cmp
in
test
push
movsl
mov
mov
imul
push
inc
add
adc
test
daa
rcll
mov
aad
les
push
insl
push
push
mov
outsl
xchg
cltd
pop
sub
fsubl
int
jbe
xlat
sti
push
cli
dec
sub
dec
outsb
sub
std
xchg
mov
dec
mov
sarl
push
mov
std
pusha
aaa
add
mov
testb
mov
jnp
mov
inc
cmp
testb
addr16
sahf
mov
stc
cmp
repz
ret
dec
fwait
pop
addr16
sub
test
jecxz
idivl
mov
add
jae
xor
fadds
sbb
push
xchg
mov
mov
insb
test
inc
jl
test
push
cmpb
in
out
pop
xlat
pop
inc
sub
pop
jb
cmp
out
repz
lds
inc
cmp
aaa
rcl
outsl
addr16
cmpsl
ja
push
rclb
adc
push
mov
mov
outsl
cltd
dec
iret
cmp
xchg
cmpsl
xchg
xor
lret
cltd
xchg
xor
push
rcll
mull
cmp
insb
jecxz
int3
xor
je
loop
fcomip
inc
xchg
out
imul
stos
sti
mov
add
fcompl
aas
push
jb
fstl
cmp
inc
aad
dec
sub
mov
xchg
into
les
lret
push
aad
dec
inc
decb
js
test
subb
mov
jl
mov
int3
outsb
sti
dec
jle
push
jns
out
mov
adc
xchg
mov
sarl
mov
icebp
lcall
ret
mulb
pop
mov
mov
stos
imul
xchg
dec
jge
out
movsb
les
sub
xchg
pop
les
pop
in
test
iret
pop
or
push
sbb
std
ds
movsb
scas
shl
jg
popf
bnd
dec
pminub
xor
data16
setbe
aam
mov
leave
iret
std
add
outsb
out
sbb
pop
or
sbb
inc
shll
int3
pop
add
repz
pop
cld
pop
pop
cli
movsb
int
pop
stos
ret
dec
fisttps
loope
rclb
mov
push
aaa
dec
fimuls
xchg
adc
push
mov
push
mov
xor
lds
cmp
rclb
fs
std
repz
sub
rcr
repz
hlt
pop
jns
es
mov
cmp
cli
add
push
xor
mov
xor
fwait
lcall
ret
pop
dec
push
test
push
adcl
ret
sub
push
in
popa
and
ret
sarb
int3
popf
mov
jbe
subl
mov
cli
and
push
shl
cmp
dec
mov
mov
or
lods
jge
and
adc
fs
loop
xchg
or
orb
repz
aad
int3
rcrb
leave
inc
jno
dec
push
insl
xlat
not
or
out
sahf
jge
into
stos
cmp
sub
and
sbb
push
lcall
lods
xchg
cmpsb
shl
movsl
xor
flds
out
clc
in
int
xchg
or
scas
mov
push
mov
add
repz
pop
fwait
pop
xchg
cltd
dec
ret
jnp
sbb
divl
out
in
pop
aam
inc
push
xor
mov
xchg
imul
leave
rolb
out
sub
add
jbe
mov
std
xor
jnp
sub
xchg
xchg
xchg
and
icebp
sub
rolb
in
jb
cmc
sti
mov
mov
mov
mov
lret
inc
cld
dec
in
mov
ljmp
mov
push
sbb
xchg
imul
loopne
pushf
in
in
or
push
cmp
es
rcrb
daa
push
add
shrl
xchg
in
or
das
pop
sub
adcb
xor
xlat
add
divl
add
sub
nop
push
arpl
xor
testl
jl
push
add
mov
ss
adc
pushl
adc
jg
ds
lds
push
rcrl
mov
ss
insb
sbb
mov
mov
popa
sbb
or
sahf
imul
insb
mov
out
rcr
adc
add
cli
mov
jp
mov
mov
adc
xor
mov
jbe
or
imul
mov
in
insl
sbbb
fisttps
add
mov
sarb
icebp
dec
add
xor
xchg
repz
cmp
lock
leave
ret
jb
test
sbb
dec
xor
lods
jne
mov
es
int
push
in
xor
ficoml
lret
inc
repz
jp
pop
enter
sub
cmpsl
scas
and
mov
frstor
push
enter
int3
out
ja
xor
inc
call
sarl
iret
repz
insl
stos
jmp
pop
jmp
lock
jmp
imul
adc
add
jb
pushf
jns
dec
add
fdivr
lea
ficoml
shl
or
xchg
andl
cli
and
adc
mulb
in
add
mov
lret
sbbl
arpl
outsl
cmp
stc
jl
dec
mov
pusha
cwtl
mov
lret
sbb
dec
mov
flds
pop
insb
inc
mov
cld
inc
add
xor
outsb
aad
iret
cld
nop
adc
dec
adc
and
mov
xchg
aad
gs
in
inc
dec
mov
mov
ljmp
cld
dec
notl
int3
push
push
movsl
test
fwait
mov
xor
jae
push
and
xchg
jmp
iret
lods
lds
sti
shr
xchg
mov
cmc
pop
cmp
jle
add
cmp
stos
push
in
sub
jne
daa
mov
scas
lret
les
cmp
in
pop
cwtl
sub
push
ja
ja
test
and
imulb
popf
in
pop
flds
fdivrl
unpcklps
divl
scas
test
insl
dec
imul
jbe
push
lcall
pop
cmp
test
out
xchg
mov
in
gs
test
mov
jg
dec
in
cmc
pminub
ficoml
xor
subl
push
xor
jbe
or
bound
jecxz
test
lcall
push
xor
push
nop
sub
hlt
test
xor
negb
das
test
scas
mov
dec
inc
test
adc
aaa
jbe
stos
mov
mov
das
and
push
lret
orl
jnp
bound
ljmp
sbb
pop
ja
jae
sbb
pop
iret
dec
xor
insb
outsb
xchg
movsb
leave
out
jnp
dec
mov
xchg
rolb
lock
dec
mov
jnp
xor
or
mov
mov
ja
orb
or
lods
je
or
jge
out
fwait
cld
adc
mov
sub
shrl
mov
div
nop
leave
push
cmp
addr16
daa
ss
sbb
mov
push
push
iret
adc
ja
xchg
push
test
fadds
sub
ljmp
jle
imul
in
sub
sbb
and
add
scas
fidivl
pop
add
xor
enter
jbe
pop
jmp
subb
xor
sub
add
pop
or
aas
js
out
rolb
mov
or
or
cmp
gs
sub
push
call
jns
ficoml
out
ljmp
push
roll
mov
nop
aam
incl
jp
in
repnz
or
cmp
push
jecxz
cwtl
dec
push
and
xchg
xchg
or
sarl
dec
or
shrl
dec
mov
loopne
outsl
dec
stos
fildl
sti
sub
push
bound
xchg
jb
xor
repz
and
dec
and
call
xchg
push
daa
pop
insl
lds
push
mov
mov
cmpsb
in
xchg
jmp
cmpsl
mov
das
js
es
int3
mov
mov
dec
cwtl
pop
les
adc
sub
add
push
cmp
inc
pop
xor
mov
popl
push
cs
fs
jg
out
fs
xor
push
pop
orl
jmp
aas
fwait
push
scas
sub
mov
dec
and
xor
adc
pop
inc
popf
adc
mov
pop
inc
sbb
gs
dec
cmp
fnsave
pop
lret
out
sub
pop
push
mov
fildll
ja
sbb
fsubr
bound
sub
sub
xor
fisubrs
js
inc
mov
loopne
cmp
loopne
fisubrs
mov
out
dec
jbe
cmpsb
pop
lods
sbb
xor
pop
xor
or
push
pop
pop
loopne
das
rcr
pop
dec
add
pop
es
mov
cli
add
mov
pop
lcall
jno
add
pop
mov
loope
mov
adc
cwtl
fisttps
in
inc
jb
neg
lret
push
dec
xor
push
sahf
pop
mov
test
adc
out
push
ret
push
xor
cmpsl
adc
shl
lods
shl
les
testl
repnz
fdivrs
mov
popf
mov
sub
fwait
jae
popa
cmp
sbb
pop
out
lods
push
rorb
push
or
repnz
mov
push
lahf
rol
cwtl
inc
xor
cmp
jmp
mov
outsl
sub
jle
pusha
insb
adc
repnz
pop
out
pop
in
push
mov
gs
push
jge
xor
clc
xchg
cmpl
mov
sub
int3
iret
sarb
sahf
cmpsl
mov
xchg
dec
add
xchg
cmp
xchg
jl
mov
mov
addr16
scas
jae
sbb
outsl
xor
xchg
fadds
jo
jecxz
push
mov
pop
adcb
adc
mov
dec
imul
push
xlat
sub
mov
stos
inc
roll
fdivs
loopne
jg
push
mov
hlt
scas
cmpsb
fildll
and
cli
sbb
pop
dec
lret
addb
xchg
dec
lock
adc
xchg
mov
pop
and
jmp
lahf
push
dec
call
mov
std
add
sbb
pusha
xor
adcl
aam
ds
sbb
jge
push
xor
mov
mov
xchg
lret
dec
pop
pop
js
cmpsb
mov
sbb
cmpsl
addr16
fisttpl
icebp
addr16
and
je
inc
pop
pop
cwtl
mov
lcall
mov
xchg
fnstenv
cmp
xchg
xchg
pop
xchg
xchg
lds
add
lock
adcb
in
into
xor
sbb
inc
mov
leave
mov
orb
loopne
or
sti
pushf
popa
out
in
xor
sbb
jmp
movsb
add
adc
pop
and
sub
andb
or
fsubl
and
std
mov
or
cmp
adc
call
test
sbb
ficomps
mov
movsb
mov
out
fistl
mov
push
jnp
pop
out
jecxz
js
pop
xchg
lods
gs
out
loopne
sbb
rorb
mov
xor
and
scas
xchg
xor
dec
shlb
sahf
mov
cmpsb
jle
mov
sub
shll
cmp
lret
out
ror
addr16
negb
out
sbb
jb
adc
jb
and
icebp
pop
dec
into
mov
notl
ljmp
mov
notl
xor
push
cmp
xchg
outsb
xchg
dec
scas
negl
pop
out
add
jl
mov
jb
lock
fistpll
push
cmp
xchg
jno
adc
push
push
push
dec
sbb
dec
out
orb
xor
call
cli
arpl
daa
cld
stos
push
xchg
push
mov
and
pop
mov
push
jnp
pop
into
ljmp
xchg
in
enter
xchg
or
dec
es
sbb
lods
and
jb
out
push
je
out
popf
sbb
push
push
es
jge
pop
in
cs
ja
shrl
std
and
loop
in
xchg
sub
sub
cmp
mov
xchg
mov
mov
scas
dec
mov
in
inc
adc
iret
test
aad
in
push
xchg
mov
dec
push
pop
nop
ja
xchg
test
sub
push
scas
bnd
jl
hlt
add
sub
pop
inc
adc
push
vmwrite
or
xchg
and
mov
push
nop
test
int
gs
inc
push
push
test
inc
push
lock
push
mov
mov
aaa
enter
leave
fildll
xor
cmp
sbb
push
mov
jp
cmp
dec
sbb
or
mov
jae
mov
aaa
mov
mov
sbb
imul
aas
mov
icebp
dec
adc
jo
popa
jmp
jp
add
sbb
jae
aas
mov
lahf
scas
and
mov
sbb
xor
popf
jl
jg
insb
shlb
or
loopne
mov
jecxz
jecxz
cmc
fs
in
add
call
mov
xor
pop
mov
adc
push
les
into
iret
test
in
cmp
and
shlb
scas
xchg
test
in
mov
push
dec
xor
cmp
ret
mul
xchg
inc
or
lds
mov
inc
enter
mov
fiaddl
cld
stos
call
xchg
nop
xchg
dec
fs
mov
sbbl
call
fimuls
xorl
repnz
cmpsb
dec
scas
sub
xorb
and
jae
popf
pop
sti
xchg
out
inc
in
and
sub
mov
cltd
inc
push
shll
cmp
cmp
imul
es
insb
rcl
test
and
in
nop
out
xchg
jnp
dec
mov
and
xchg
int
ja
loopne
mov
test
add
test
scas
mov
lods
in
cmc
pop
add
imul
mov
or
mov
mov
pop
mov
xchg
sbb
adc
and
shr
xchg
es
push
je
push
xor
outsb
ljmp
xor
or
add
sahf
shr
rorl
push
sbb
ja
std
and
adc
mov
repz
jb
loop
push
xchg
inc
push
aad
addl
push
shl
loop
andb
mov
adc
shrl
pop
push
pop
inc
cmp
lods
std
inc
sahf
jecxz
sbb
mov
mov
lea
out
push
mov
jb
and
xor
leave
cmpsl
je
rcrl
insl
xchg
sbb
mov
dec
shlb
imul
gs
addr16
or
sbb
xchg
cmpsl
in
mov
std
mov
xchg
aas
cltd
lret
pop
clc
faddl
rorl
lcall
pop
mov
jge
sub
cmp
fiadds
mov
pop
mov
int3
test
xchg
je
push
sbbb
fbld
out
lret
dec
mov
addr16
out
jg
jo
ss
sbb
es
inc
inc
stos
leave
pop
paddb
neg
addb
or
jns
sub
push
shlb
push
lods
xchg
jae
xor
adc
and
test
xchg
xor
enter
inc
add
and
stos
jne
xchg
mov
ret
sahf
mov
push
sbb
insl
arpl
out
cmp
dec
movsb
lahf
mov
mov
xor
sub
stos
test
into
lods
mov
or
push
jg
jg
subl
adc
shrb
movsl
shrl
ss
shll
sub
incl
fstp
mov
cli
and
mov
cvtps2pd
lret
push
pop
or
psllq
or
inc
pop
arpl
not
testl
inc
fadds
inc
loope
pop
imul
jmp
inc
and
setae
jg
push
xchg
imul
repz
dec
ret
pop
inc
dec
or
adc
arpl
cmpl
pop
and
mov
jns
push
jl
inc
jmp
adc
xchg
inc
mull
inc
bound
rcl
mov
cmp
xor
mov
vmovsd
inc
lds
mov
rolb
icebp
mov
decl
test
pop
sub
or
outsb
fidivrs
cltd
aam
mov
adc
pop
sbb
shll
xlat
test
xlat
inc
sub
mov
imul
jno
push
ret
jl
inc
dec
fdivrs
xchg
fcoms
out
lods
cmpsl
inc
ljmp
xchg
jnp
insb
mov
adc
add
cmp
add
jle
cmp
pop
fnsave
stc
sarb
dec
mov
add
sub
xor
xchg
es
cmpsb
imul
divl
jno
les
jns
push
cmp
sahf
mov
xor
cmp
pop
cmpsb
jbe
mov
ja
cmp
ror
and
cmp
mov
and
inc
sub
xlat
or
sbb
js
add
pushf
stc
in
xor
call
testb
pop
push
out
sub
jl
xor
cmp
add
and
inc
repnz
and
aad
lret
lods
in
mov
arpl
adc
loopne
push
mov
inc
jg
and
mov
or
push
in
xchg
int
and
lods
xchg
shrl
mov
fisubl
call
lcall
cmpsb
mov
sbb
add
cs
pop
jmp
popa
jmp
clc
adc
pop
xchg
pop
sbb
pop
cld
jle
jmp
pop
hlt
cwtl
inc
jb
stc
enter
mov
enter
stc
cmp
cmp
dec
mov
test
adc
lods
popf
push
add
pop
xor
mov
rorb
jnp
lret
push
cld
fsub
pop
mov
pop
cmp
xor
sub
test
push
jno
std
inc
pop
jns
xor
movsb
mov
pop
mov
cmp
insb
sub
sbb
dec
lea
or
test
push
jmp
jbe
and
inc
cmpsb
xor
es
pop
jge
mov
xchg
mov
fnstenv
sbb
in
stos
fcompl
pushf
cld
loope
sbb
jg
push
mov
jae
xchg
or
outsl
mov
pop
xchg
dec
data16
es
addb
push
dec
div
dec
xor
jle
cmp
movsl
jmp
ljmp
ret
add
fnstenv
cmpb
pop
repz
fstl
mov
inc
pusha
into
and
cld
stos
es
add
push
sbbl
repz
dec
outsb
cmp
mov
inc
or
jbe
sbb
mov
addl
push
leave
mov
clc
lea
iret
lock
pop
mov
fnstenv
adc
xor
dec
in
and
outsb
sbb
sbb
xchg
repnz
test
ficoms
ds
add
mov
call
mov
mov
stos
pause
mov
cmc
bound
call
dec
fidivrs
adc
or
mov
mov
test
push
pusha
out
mov
and
js
out
movsl
leave
daa
push
dec
and
sbb
mov
ret
data16
nop
push
xchg
outsl
sahf
fcmovu
rcr
leave
adc
xchg
push
lahf
cmpsl
es
es
cwtl
stos
out
xor
movsb
movsb
sub
cmp
movsl
shll
pop
inc
int3
movsb
pop
xor
repnz
decl
movsb
mov
mov
jne
xchg
addr16
mov
or
mov
cmpsb
cmp
mov
push
push
xlat
stc
xchg
call
dec
arpl
out
sub
xchg
rclb
cwtl
jnp
popa
xchg
pop
das
jnp
sub
mov
dec
jae
and
pop
xor
testb
add
xchg
test
mov
adc
popf
adc
idivl
adc
dec
or
pop
push
jle
mov
and
iret
inc
push
xchg
outsl
iret
loopne
jmp
inc
repnz
sbb
jo
lcall
in
in
sub
js
pop
mov
or
push
jecxz
cmp
rorl
sub
fstl
jo
out
mov
lds
ljmp
movsb
sarl
das
fcoms
movsb
dec
jno
clc
cmp
aas
jge
sub
mov
mov
sub
jae
ret
es
jbe
iret
pop
inc
cmp
lret
je
test
adc
jl
mov
xchg
ds
movsb
insl
ljmp
lret
xorl
pop
sbb
rorb
inc
or
or
insb
and
push
outsl
mov
test
push
sbbl
sarb
sub
push
push
jle
xchg
cmp
shll
push
sub
dec
in
sbb
pop
cwtl
out
pop
dec
xor
push
cmp
lods
or
add
inc
inc
sbb
adc
push
arpl
fiaddl
rclb
mov
ret
je
test
jmp
nop
mov
cmpsl
push
sbb
mov
inc
nop
jno
jae
xorl
imul
loope
push
mov
notb
mov
dec
pop
subl
fildl
xchg
stos
jl
mov
push
sbb
cwtl
mov
ja
pop
adc
stos
call
fnstenv
pop
scas
js
ja
add
dec
adc
cltd
sub
pop
xor
xchg
testb
cmc
cmp
adcl
cs
in
lea
or
dec
jns
and
mov
push
xor
stos
insb
jecxz
push
adc
xchg
xor
xchg
insl
inc
fistpl
shl
lret
sbbl
out
xlat
popa
xchg
ds
xchg
mov
sub
push
out
enter
jae
icebp
std
push
fwait
inc
outsb
xchg
dec
mov
push
lret
mov
xchg
cwtl
aaa
xor
lea
test
jno
fiadds
xor
pop
push
xor
es
int
in
jne
pop
or
mov
daa
xchg
sti
sbb
es
and
enter
xchg
outsb
sbb
leave
in
idivb
cmp
pop
xchg
pushf
cld
cmpsl
mov
mov
in
xor
mov
cmpsl
xor
sub
popa
mov
fsts
shrl
dec
pshufw
xorb
push
sti
jne
test
mov
push
roll
sub
pop
xor
or
aaa
mov
dec
cmpsl
dec
les
mov
mov
cmp
mov
rcrl
mov
aaa
or
inc
aaa
sbbl
sti
fistpl
clc
xchg
fmuls
or
ljmp
inc
pushf
xchg
les
dec
fstps
les
jbe
test
mov
filds
data16
jge
pop
inc
jmp
negb
lods
mov
outsb
mov
inc
cmpsl
shlb
test
in
shll
mov
jo
popf
in
ret
fwait
push
fistpl
out
mov
fcmovnb
daa
out
jno
movsb
das
adc
in
rcrl
push
int
cmp
prefetch
or
stos
add
stos
xor
sub
mov
fildll
daa
mov
jns
xor
and
enter
inc
or
xchg
aam
stos
fsubrs
mov
out
clc
sub
pop
enter
inc
dec
xor
xchg
call
sub
lea
fisubl
push
inc
xchg
xlat
push
and
repnz
iret
push
sahf
xor
push
mov
int3
ret
test
stos
out
pushf
add
into
pusha
pop
enter
mov
daa
ficompl
aas
mov
hlt
mov
cmp
lods
sarb
jmp
pop
sbb
mov
sub
mov
les
not
lock
add
lret
scas
push
add
popa
icebp
dec
sahf
loope
lcall
test
movsb
dec
push
addr16
pop
lods
mov
mov
clc
and
je
add
nop
in
mov
or
ficoms
fnstsw
stos
mov
nop
scas
flds
push
xchg
push
mov
icebp
dec
test
xchg
xchg
add
mov
aad
sub
sub
cmp
jnp
popf
push
cmpsb
xchg
jnp
jle
push
decl
inc
mov
gs
ret
pop
and
ror
insb
push
cmp
pop
jl
or
shrb
lret
iret
dec
and
pop
or
dec
mov
enter
jmp
pop
mov
xor
sub
inc
and
push
lcall
xor
fnstsw
add
aas
std
imul
dec
imul
dec
ret
outsb
xchg
mov
pop
inc
jo
pop
adc
loopne,pn
and
lods
lods
fcoml
je
and
enter
add
mov
dec
or
in
and
insl
mov
movsl
int3
rcrl
arpl
into
testb
ljmp
fnstcw
mov
push
cmp
and
xchg
stos
mov
adc
xchg
test
and
daa
es
xchg
xchg
in
mov
add
ret
or
dec
cli
data16
call
cmp
arpl
into
add
dec
inc
mov
insl
std
mov
into
xchg
fists
or
mov
jnp
scas
push
mov
inc
imul
ja
mov
stos
or
rclb
adcl
push
cli
dec
xlat
inc
sub
add
adc
shufps
out
insb
push
mov
add
or
add
rep
sub
fs
push
adc
icebp
sub
sub
adc
popf
mov
jg
pushf
lcall
dec
int
xor
lds
or
or
shll
pop
cmc
mov
in
repnz
scas
pop
repnz
sbb
sbb
jnp
jo,pn
arpl
imul
shrb
sub
pop
leave
ljmp
inc
xor
cltd
call
xlat
test
add
out
jbe
popf
out
pushf
push
imul
push
cltd
jmp
popa
mov
dec
jge
push
xor
adc
xchg
pop
lea
lret
inc
fs
stos
mov
xchg
xlat
mov
add
add
fwait
jnp
out
adc
xor
xchg
ds
sub
mov
cld
int3
sbb
cmc
adc
mov
and
fimuls
clc
daa
cmpsb
pop
fmul
pop
cli
lahf
jecxz
lea
pusha
imul
andb
jns
add
ret
fs
lea
dec
mov
sti
enter
inc
addb
mov
xor
pop
imul
cmp
dec
dec
notb
xor
cmp
addr16
outsl
sarl
push
push
movsb
xlat
add
popf
ljmp
cwtl
pop
inc
adc
fsubrs
loope
xor
xchg
mov
roll
cmp
pop
pusha
pop
mov
imul
xlat
iret
cs
pop
pop
fnstcw
jo
inc
scas
mov
push
pop
fsubl
call
push
addl
cmp
decl
xchg
sbb
pop
in
test
mov
mov
pushf
xchg
cmc
xchg
daa
in
pop
fisttpll
mov
adc
mov
fnclex
and
ret
cs
scas
add
mov
repnz
call
frstor
lret
fsub
push
pop
out
pop
inc
xchg
imul
xchg
dec
rcll
nop
jno
cmp
or
dec
loope
pop
lea
ret
mov
mov
jno
fdivl
xchg
jge
mov
dec
fldt
arpl
imul
dec
rcrb
lahf
in
mov
call
push
push
sbb
add
es
push
jmp
add
push
jmp
js
addr16
mov
jge
fldcw
and
out
add
mov
adc
pop
cmp
insl
sub
inc
mov
push
xor
cmp
enter
adc
es
pop
pop
cmp
mov
mov
mov
insl
rcrl
add
or
lock
mov
sbb
xchg
mov
mov
sbb
mov
jnp
loop
data16
andl
cltd
jg
fildll
insl
in
add
imul
push
les
aad
adcb
and
push
mov
rclb
call
sub
lcall
xor
push
cmp
loop
lret
push
cmp
add
pop
enter
fistl
subl
jo
dec
ss
cmp
mov
iret
popa
out
int3
sbb
sub
mov
stos
adc
loop
xor
scas
fwait
push
pop
vmwrite
sub
sahf
jg
out
and
lahf
dec
lret
pop
add
xchg
cmpl
dec
aaa
stos
cmp
jne
inc
xor
pushf
test
inc
ja
jge
or
cmp
dec
xor
lret
inc
push
cmp
mov
loop
sub
mov
mull
leave
jp
call
test
push
jg
stos
xor
aam
inc
je
push
sbb
lock
js
lahf
fnsave
jae
or
pop
pop
lahf
in
sti
sbb
dec
outsl
inc
and
or
outsb
cmp
jecxz
sbb
jnp
pop
mov
xchg
pop
aad
in
cmpsb
cmp
mov
gs
adc
lcall
scas
cmpsb
cld
test
cmp
icebp
pop
in
scas
pop
in
cmpsb
lea
and
cmp
pop
mov
push
mov
ret
jle
lods
pop
mov
inc
inc
clc
out
push
popa
cmc
pop
ret
int3
adc
mov
iret
mov
adc
xchg
repnz
addl
push
outsb
dec
sbb
xchg
movsl
scas
mov
in
pushf
pop
xchg
xlat
mov
add
mov
sub
mulb
sbbb
push
adc
cwtl
mov
sbb
repz
push
mov
cmp
or
ficoms
push
rcr
mov
jp
popa
ret
addr16
pop
or
xchg
cmp
imul
cmpsl
mov
popa
in
bound
cmp
test
sbb
xor
bound
icebp
xlat
sti
sbb
adc
cmp
ja
mov
into
dec
int3
in
bound
popf
and
out
inc
imull
or
flds
fisttpl
pop
rcrl
loope
fcomp
lock
push
pop
cmp
lods
jle
cmp
das
push
dec
cwtl
fs
add
sbb
or
or
in
adc
add
adc
jne
jl
lds
arpl
adc
mov
adc
or
push
sub
data16
jecxz
pushf
lcall
sti
in
mov
mov
jns
dec
addr16
fucomip
sahf
mov
pop
and
loope
cld
sbb
pop
add
xor
testl
add
dec
cmp
imul
movsb
les
and
adc
sarb
inc
mov
xchg
inc
sbb
sub
fdivl
cmp
xchg
mov
int
xchg
cli
inc
lds
mov
jl
or
adc
mov
repz
inc
lahf
and
jo
lods
sahf
fnstcw
out
outsl
insl
dec
outsb
leave
jbe
jnp
sahf
std
xor
xchg
fs
xlat
aas
fldt
push
insl
inc
fbld
lea
ret
jg
sbb
nop
mov
adc
inc
jno
aas
or
arpl
cli
addl
inc
mov
pop
mov
ja
in
jo
adc
cli
movsl
lods
sti
jno
js
and
jbe
cmp
testb
pop
ljmp
mov
cltd
push
jl
jge
clc
inc
pop
sub
aam
in
int3
fnsave
sbb
out
cmc
fs
jo
scas
ror
clc
and
scas
mov
retw
and
inc
jle
shlb
jle
fimull
xor
leave
fwait
js
cmp
pushf
cmc
xlat
shrb
enter
incl
mov
cmp
mov
mov
test
jnp
cld
jo
add
inc
cmp
jae
cmp
shll
mov
push
add
xorl
and
or
orl
repz
popf
mov
sbb
cwtl
out
in
int3
nop
mov
adc
fnstsw
les
and
xchg
jecxz
xchg
div
fwait
shll
imul
inc
push
and
fwait
sahf
mov
push
cmpsb
in
mov
add
out
gs
adc
lret
insl
in
insl
sbb
scas
stos
ja
pop
add
dec
je
sub
fldl
and
psubsw
mov
ret
xchg
push
adc
mov
or
mov
xchg
mov
pop
dec
push
loope
sub
fbld
xchg
mov
sub
jbe
pop
and
xchg
in
int3
pop
cmpsl
mov
test
loopne
xchg
inc
mov
and
jmp
jecxz
adc
pop
dec
mov
icebp
rolb
sub
mov
hlt
sub
xchg
cmp
mov
ret
cmp
loop
test
jmp
xchg
mov
cmp
popf
inc
lods
imul
into
dec
sbb
dec
in
pushf
sbb
hlt
jg
lcall
jb
inc
dec
xor
stos
xor
cmp
sub
jb
sahf
aad
push
push
mov
push
push
call
sub
sarl
std
sub
sbb
inc
cmp
sbb
add
sub
dec
cld
aas
push
push
xchg
sub
jae
inc
or
in
xchg
add
and
xchg
lret
or
arpl
push
int3
cmp
push
bound
mov
xor
xchg
inc
leave
test
lods
adc
inc
addr16
test
out
push
mov
stos
fldcw
sub
stc
adc
pop
addb
xorl
jnp
fucomi
ljmp
fdivrl
addr16
pop
pop
xchg
xchg
xchg
rol
xchg
in
or
leave
ss
pop
push
popa
lea
les
icebp
jns
cmp
bound
sub
and
in
push
push
push
cmp
or
push
mov
xchg
out
xorl
xchg
loop
xchg
dec
call
subl
ds
mov
jmp
leave
mov
cmpsl
icebp
mov
dec
add
mov
imul
inc
mov
mov
xchg
push
out
push
cmp
adc
movsl
scas
add
cltd
push
aam
into
and
sub
test
adc
inc
xchg
sub
add
jmp
mov
insl
jl
fst
xchg
cli
cltd
sub
lods
test
in
repnz
cmpsb
jge
jle
mov
cmp
mov
jle
sub
push
inc
xchg
js
stos
out
popa
gs
xchg
hlt
adc
mov
inc
cmp
jns
push
push
push
stc
inc
mov
insl
fsub
cmp
fbld
push
mov
add
filds
xor
nop
pusha
add
outsb
jmp
cli
cmp
test
sbb
loop
test
jmp
or
push
xor
pushf
jns
ljmp
mov
std
test
add
and
das
enter
add
mov
dec
mov
outsl
sbb
add
sub
sub
test
xchg
test
jne
paddq
repz
and
outsb
daa
xorb
xchg
sub
jns
mov
xor
rorl
out
cmpsl
orl
or
in
clc
pop
fmull
pusha
ficomps
dec
lock
jge
cmp
loope
mov
aad
xchg
test
stos
pop
ds
enter
pop
pushl
adc
dec
pop
outsl
mov
xchg
aam
sub
jo
cwtl
and
mov
imul
cltd
or
dec
nop
mov
ret
out
push
sar
jns
int
jne
bnd
xchg
aam
fwait
cld
dec
int3
mov
or
dec
bound
pop
fwait
out
jns
lea
add
jg
ljmp
pop
cltd
loop
daa
daa
lahf
ret
rcrb
mov
movsb
int3
fsubrl
and
sub
pop
dec
cmc
pop
scas
insb
in
cwtl
outsb
mov
scas
pop
or
icebp
mov
cli
icebp
out
int3
dec
push
push
sbb
insl
outsl
insb
mov
pop
mov
outsl
pop
inc
pop
sub
add
mov
out
mov
mov
aam
mov
out
sub
ljmp
push
dec
mov
cmp
mov
comiss
idivb
outsb
dec
mov
inc
int3
aad
cmp
xchg
fstpl
fimull
cmpsl
push
cmp
add
fcoml
ret
add
insb
ret
sbb
pop
repnz
xchg
or
mov
cmp
hlt
mov
xchg
xor
in
mov
jecxz
into
pop
cltd
sub
test
pop
add
fs
sbb
sbb
std
jno
xchg
pop
mov
negb
jge
dec
xlat
jge
iret
push
lock
enter
jge
and
aad
out
xchg
fsubr
sarl
xchg
mov
mov
mov
rcrb
insb
cltd
jmp
pop
js
mov
ljmp
loop
aas
lods
fistl
and
xor
and
adc
ss
je
sbb
mov
push
repnz
xchg
repnz
cmpl
jle
pop
je
std
bound
mov
das
xor
xrelease
xor
dec
xor
cmpsb
mulb
ficoms
faddl
daa
mov
leave
popl
or
imul
in
and
std
ret
aas
aam
sub
jge
stos
sbb
mov
and
or
sbb
mov
lock
or
mov
das
xchg
lods
push
jg
jne
adc
outsl
dec
movsb
mov
fnstsw
loope
inc
enter
outsl
call
push
pop
fs
shlb
cmc
scas
sbb
fsubs
fnstsw
xlat
addr16
clc
push
insl
jae
xorb
jno
sub
and
shl
out
aad
xchg
or
mov
mov
cmp
adcl
dec
xchg
fwait
in
sbb
pop
je
aam
ljmp
jb
addr16
mov
dec
mov
cmp
lods
in
add
imul
fwait
pop
negb
add
jae
pop
inc
fmull
daa
inc
cmc
popa
outsl
jl
fwait
sub
mov
xchg
out
push
std
fdivrl
add
dec
mov
imul
pop
repnz
or
lcall
std
xchg
mov
and
fldt
cmp
add
adc
xchg
or
and
test
mov
out
mov
jnp
jnp
and
push
jo
sbb
aam
or
xor
pop
cmp
outsb
and
fwait
sahf
insl
jnp
xor
stos
jp
jne
int3
sub
sbb
inc
pop
sbb
stos
pop
jl
loope
adc
idivl
mov
lret
repnz
push
mov
jno
mov
jb
cmp
sub
dec
cmp
outsb
jp
lcall
add
int3
mov
mov
imul
int
xor
mov
rol
mov
dec
inc
jg
fstpt
shll
mov
cltd
cmc
lds
cmpb
mov
pop
mov
insl
adc
out
lds
fwait
adc
pop
or
pusha
leave
mov
sub
and
out
push
iret
test
pop
xchg
in
mov
mov
sbb
xchg
sbb
repz
imul
cmc
lea
addr16
xlat
sub
mov
insb
mov
cwtl
mov
in
stos
or
adc
sti
xor
je
add
mov
mov
fadd
mov
jbe
fsubl
ds
addr16
or
or
movsb
xor
mov
sti
hlt
push
cmp
gs
shll
sbb
push
pop
sub
hlt
pop
lret
xor
pusha
inc
lcall
xor
xchg
adc
out
add
cmp
xor
movsb
inc
push
mov
jecxz
push
scas
jno
out
mov
into
mov
add
mov
lds
into
inc
daa
nop
jbe
outsb
mov
daa
inc
jns
adc
push
sbb
mov
lcall
into
mov
mov
ja
lods
in
xlat
dec
sub
jmp
sti
fnstenv
inc
jecxz
cmpsl
jae
out
sub
lret
sub
xor
jne
mov
or
test
fs
nop
pushf
add
ljmp
les
or
xchg
lods
push
lds
sbb
xlat
mov
xorl
js
ret
mov
sbb
add
popf
jne
mov
push
xchg
hlt
sub
jp
jo
lods
or
hlt
dec
cmp
lahf
add
test
mov
stc
test
dec
outsb
push
fwait
pop
jp
xchg
fcomip
es
in
fistps
dec
andb
jmp
jle
mov
cwtl
js
or
jp
adcb
mov
xchg
out
sbb
add
cmp
push
pop
sbb
xchg
sub
mov
inc
cmp
dec
jg
sbb
xchg
mov
stos
jl
lds
xor
sti
jb
lods
out
adc
jge
push
xchg
nop
std
jl
repz
adc
mov
nop
ja
popa
mov
xchg
jno
jmp
push
mov
aas
pop
adc
jae
push
jbe
xchg
push
lcall
and
push
fsubrl
push
xor
dec
out
jns
fisttps
and
and
mov
and
stos
repz
out
push
mov
xchg
in
push
and
mov
cmc
andb
jno
test
or
add
ja
mov
popa
fcompl
or
sub
notl
es
dec
bound
pusha
lock
scas
cmp
dec
add
std
les
sub
mov
mov
jno
adc
cld
mov
aam
repnz
int
mov
jbe
jmp
rclb
repnz
xchg
mov
sbb
dec
and
push
adc
pop
shlb
pop
out
ljmp
ret
shl
push
out
inc
sub
push
mov
pop
sbb
ds
jp
mov
jecxz
test
mov
cmp
or
fisttps
xchg
pop
pop
cmpsb
cmpsb
and
mov
ja
xchg
dec
and
xchg
ret
jbe
sub
shr
sub
bnd
xor
add
cmp
mov
push
xor
nop
sbb
cmpsl
fsubs
stos
dec
pop
jg
inc
test
movsl
dec
in
adc
jb
fisubrs
and
push
cmpsb
adc
cwtl
fsubrl
cmpl
lock
mov
cwtl
seto
sub
adc
in
inc
or
and
pop
xor
jb
sub
cmc
insl
inc
scas
es
insb
clc
add
psubd
jmp
add
xlat
mov
imul
add
inc
xchg
jnp
xor
test
insb
mov
out
pop
scas
mov
fsts
insl
cmp
inc
mov
and
jecxz
test
scas
out
mov
pop
dec
and
push
push
and
ja
sub
mov
icebp
sbb
pop
xchg
inc
mov
outsb
lret
lea
int3
or
bound
and
dec
rcrl
mov
add
mov
adc
mov
pop
ljmp
loope
pop
jnp
xor
dec
mov
sbb
adc
xlat
and
jno
jmp
adc
cli
pop
ret
cmp
push
inc
sti
in
in
push
idivb
cmpsb
mov
push
jmp
jp
jecxz
adc
popa
fwait
mov
std
pop
out
and
push
dec
jbe
ja
dec
inc
scas
andl
cmp
and
mov
inc
inc
jle
mov
test
jbe
lods
mov
xlat
mov
add
or
xchg
outsb
and
test
inc
xchg
cld
bound
pop
ljmp
mov
outsl
xor
loop
add
cmp
lods
mov
int3
test
adc
dec
es
mov
and
adc
cmp
imull
cli
ss
jle
sbb
jl
dec
out
xchg
jns
jno
and
lock
mov
or
adc
inc
mov
push
incl
imul
adc
addl
out
clc
pop
pop
stc
cmp
sbb
repnz
sub
lret
adc
mov
or
xchg
lds
or
cs
mov
pop
add
pop
jae
dec
mov
stos
in
jge
stos
test
fwait
clc
aam
push
xor
jno
sub
push
insb
dec
xor
add
add
inc
push
inc
cmpsb
shll
cltd
mov
std
xchg
or
mov
push
adc
xor
popf
dec
pusha
in
and
lret
cmp
sub
xor
icebp
xor
jp
adc
gs
inc
and
sub
mov
ds
xchg
pop
mov
fsubl
jns
int3
sub
inc
fisubrl
mov
jnp
popa
xchg
pop
push
out
sbb
in
pop
and
es
in
enter
rcrb
xchg
inc
mov
into
adc
lea
sub
mov
xor
outsl
jae
push
mov
clc
sbb
adc
pop
push
xlat
lea
mov
in
outsb
fsubl
ljmp
adc
sbb
mov
push
cwtl
mov
fsts
enter
fldt
adcl
repz
or
insb
daa
push
pusha
aaa
rcrl
outsl
xchg
and
mov
mov
jbe
inc
xor
pop
out
test
fldt
push
inc
and
push
in
dec
aad
dec
cmp
push
mov
and
insb
stos
mov
mov
jnp
jp
neg
jmp
rcrb
andb
inc
or
or
out
cld
adc
cs
mov
xchg
fnstenv
stos
cltd
push
or
sbb
and
fs
pop
dec
dec
pop
push
in
sbb
fisttps
test
fbld
pushf
in
jecxz
inc
pop
in
fnstenv
insl
int3
dec
mov
scas
xor
and
scas
and
add
shl
cmpsl
sub
or
addr16
pop
jb
pop
stos
cmp
stc
nop
xchg
xchg
inc
outsb
mov
cmp
mov
stos
push
push
xor
add
jmp
test
jg
mov
sbb
pop
enter
jle
decl
xor
jmp
fistpl
add
adc
jbe
push
cmp
jle
inc
imul
in
pop
cltd
out
addl
rcrb
mov
jge
xchg
jg
xor
inc
cltd
mov
repz
sbb
push
faddl
dec
mov
jecxz
adc
cmp
out
cmp
out
inc
ss
ss
xchg
in
scas
xor
pop
sahf
add
add
inc
shll
adc
mov
jp
lahf
xor
andb
adc
jns
jnp
add
fwait
or
hlt
mov
add
cli
in
in
mov
push
push
lods
xchg
lcall
jmp
pop
jno
mov
bound
cs
les
jnp
jnp
cld
stc
outsb
and
into
pop
jp
mov
and
fistpll
cmp
ja
lret
aaa
sbbl
insb
stc
bound
insb
cli
xchg
mov
or
jo
or
adc
xor
or
cmp
flds
mov
mov
or
inc
enter
stos
sub
leave
push
pop
sub
iret
cmp
dec
push
xchg
lcall
hlt
fiadds
cmp
xchg
enter
out
and
jne
push
dec
icebp
mov
jae
popf
xor
push
pop
pusha
fisubrs
mov
lods
xor
jns
mov
push
adcb
sti
jmp
add
out
mov
fcoml
js
mov
stos
fs
insb
jl
or
mov
or
out
push
xor
dec
cmp
repnz
cmp
push
xor
test
pop
mov
mov
pop
pop
ret
sbb
mov
lcall
push
xlat
movsb
mov
cmp
lret
test
sbb
add
jo
xor
mov
cwtl
nop
in
jbe
leave
push
iret
mov
popa
or
fs
mov
xchg
int3
pop
inc
xchg
jge
add
jno
push
push
adc
mov
imul
xor
cld
inc
ljmp
sbb
xor
lock
icebp
inc
je
scas
out
push
push
jmp
mov
out
hlt
lock
inc
lock
mov
jp
test
jbe
mov
mov
pop
mov
fcoml
jns
xchg
mov
push
mov
std
push
lret
shlb
mov
pop
into
mov
mov
insl
imul
fdivp
jo
outsb
lds
cmp
fs
adc
enter
lcall
jmp
fstp
test
bound
xor
add
inc
dec
je
sbb
pop
out
adc
inc
sbb
testl
pop
mov
frstor
fisttps
in
retw
xchg
in
and
fiadds
xchg
mov
outsb
sbb
repnz
xchg
mov
cmp
cmp
jge
sub
mov
aad
push
pop
fdivl
out
lock
xchg
xchg
cmpsb
lds
inc
sbb
add
stc
dec
test
imulb
cmp
cmp
dec
mov
xchg
xchg
in
adc
inc
mov
push
fs
push
mov
dec
call
iret
int
aam
pop
sub
aas
mov
dec
call
in
jecxz
mov
mov
push
fldt
mov
fstpt
xchg
cmp
sbb
pop
in
pop
insl
push
out
sub
in
inc
lcall
addr16
icebp
dec
insb
and
sarb
lea
outsb
jp
push
scas
sbb
mov
cmpsl
pop
cmpsb
sub
pop
into
pop
out
mov
in
sbb
dec
les
ret
mov
addr16
and
testb
xchg
inc
push
pop
adc
mov
mov
mov
or
xchg
pusha
dec
xor
jmp
and
popa
imul
cmp
dec
xor
xchg
mov
mov
idivl
mov
jmp
das
fmuls
stos
test
mov
sub
and
and
inc
or
adc
cmovns
sti
out
int3
popf
add
lods
add
mov
mov
pusha
xlat
ljmp
and
idiv
jae
shl
sub
popa
dec
xor
xchg
cmpsb
jbe
adc
inc
cmp
fsubs
mov
int3
dec
addr16
gs
stos
jle
clc
mov
insb
pop
or
in
dec
shlb
sub
pop
test
test
mov
add
movsb
xor
pop
out
or
lcall
xor
mov
dec
cmp
xchg
jne
jo
push
in
xchg
andl
shlb
push
mov
stos
mov
jno
xchg
stos
mov
or
in
push
jns
inc
sbbb
jmp
lret
lret
jle
stos
movsl
add
cmp
mov
mov
sar
repz
stos
pop
cmp
fldcw
stc
out
xor
mov
push
jl
lahf
push
cld
fstpt
mov
and
jne
sahf
aaa
test
adc
shll
pop
sub
ss
repnz
jbe
mov
dec
or
sahf
xchg
xchg
rcrl
dec
cltd
inc
idiv
push
js
and
enter
add
movsl
pushf
adc
mov
dec
sub
pop
dec
mov
ss
lods
pop
mov
les
sub
cmp
mov
cmp
cmp
mov
lods
arpl
std
cmpsb
jnp
ret
ss
mov
add
in
daa
xchg
sti
lret
in
stc
sub
dec
gs
fisttpl
pop
jae
in
lds
mov
mov
sub
pop
jl
mov
scas
icebp
push
xchg
mov
add
cmpsl
mov
ljmp
insb
xlat
push
rcrl
mov
add
and
push
cmp
and
or
adc
hlt
and
push
cmp
js
lods
fcmovne
mov
add
test
mov
arpl
test
into
push
jle
jns
inc
xchg
out
mov
pop
les
or
leave
addr16
mov
lock
mov
jecxz
sbb
pop
call
and
pop
xor
adc
iret
scas
sub
mov
in
addr16
cmp
cltd
jle
aam
lds
nop
jno
mov
loop
mov
or
stc
aaa
sub
incb
dec
stc
push
pop
cltd
xor
and
test
lds
add
adc
sbb
mov
jecxz
pop
iret
lods
imul
or
ja
or
jne
imul
in
popa
pop
int
fmul
fs
pop
lods
mov
mov
adc
jnp
xlat
jne
mov
rclb
aam
cmpsb
dec
into
xchg
addb
lcall
lret
out
xchg
lcall
mov
push
pop
jge
sub
lret
out
push
pop
jno
mov
mov
or
mov
xchg
xchg
jle
sub
imul
test
push
fiaddl
mov
cmp
arpl
cmp
sub
lock
sbb
pop
test
out
lcall
es
ds
insb
mov
cmp
pop
mov
popf
mov
cmp
pop
mov
aaa
jmp
ret
loopne
aad
arpl
jp
push
scas
int3
dec
sub
pop
pop
or
pop
into
gs
mov
xorl
dec
daa
pop
dec
add
mov
arpl
ja
dec
icebp
add
adc
call
repz
cltd
push
xchg
insb
insl
lret
call
lea
stos
push
shr
mov
addr16
adc
hlt
test
ficoml
rclb
xor
cli
pop
iret
lcall
aad
fcom
cld
and
fimuls
lods
add
mov
pop
fisttpll
xor
or
sarl
pop
mov
enter
push
mov
add
mov
inc
adc
cltd
mov
shlb
xchg
mov
pushf
es
out
push
popf
sbb
xor
lods
pop
pop
xor
mov
mov
sub
aaa
jecxz
push
out
jl
jb
movsl
cmp
jecxz
mov
aam
push
cmp
cmp
not
xor
push
mov
push
enter
fcoms
adc
jecxz
int
dec
inc
mov
and
adc
popf
mov
and
repz
sub
movb
mov
sbb
jno
mov
mov
loop
adc
xchg
out
lock
popl
sub
sbb
shrl
pop
mov
sub
cmc
fidivrl
fst
add
loop
pushf
or
xchg
neg
pop
mov
jp
adc
mov
fildll
rcll
jnp
mov
or
fisttpll
mov
stos
mov
arpl
pop
stc
lods
jl
dec
bound
xchg
or
push
dec
and
jl
adc
push
jle
shrb
jno
fistpll
xor
mov
fimuls
and
push
test
stos
movsl
lcall
rclb
adc
pop
fisubs
pop
pop
xchg
lcall
shll
inc
adc
push
and
js
jg
pop
lahf
xchg
push
push
mov
rclb
mull
jno
inc
in
hlt
enter
cld
imul
xchg
sub
cmp
mov
je
xor
mov
test
les
sbb
mov
enter
lock
fnstenv
adc
sub
cmp
sbb
pop
loope
and
mov
ljmp
jmp
idivl
ret
movsl
push
popf
cld
xchg
xchg
stos
mov
and
jnp
inc
mov
dec
in
jge
loope
dec
out
icebp
inc
push
mov
cld
pop
shll
inc
bound
das
sbb
dec
jmp
pop
fldcw
bound
xchg
xor
es
or
cmp
xchg
bound
outsb
outsb
lret
cmpsl
es
lea
mov
lret
mov
into
lds
lods
jg
mov
lcall
or
mov
xor
pop
pushf
xchg
aad
imul
jbe
push
adc
sub
dec
or
adc
cmp
test
adc
test
jns
inc
adc
in
lret
out
pop
fs
aad
popa
xor
pop
jbe
sub
dec
icebp
in
in
ror
daa
or
stc
addb
dec
inc
dec
cmp
add
arpl
cmp
adc
inc
in
lods
mov
js
imul
cmp
movsb
jg
rol
repz
xlat
movsl
sbb
push
cmp
icebp
out
mov
lret
adc
pop
lods
add
cmpsl
popf
pushf
mov
jbe
test
in
mov
rorl
or
add
cmpsl
sbb
data16
movsb
arpl
mov
xorb
mov
push
fadds
cmp
jns
xchg
iret
cwtl
das
jg
inc
mov
nop
lods
popf
lcall
push
andl
fcomp
adc
outsb
movsb
call
sub
pop
cs
mov
leave
mov
sti
jne
jb
ljmp
sub
hlt
or
movsl
out
es
pop
jno
push
mov
pop
push
mov
inc
push
xchg
popa
fisubl
int3
xchg
xchg
xchg
cmpsb
scas
and
fwait
jo
lret
jl
dec
lahf
xchg
or
jbe
xchg
std
cmp
fidivl
aam
lret
mov
inc
cmp
ljmp
fs
mov
aad
in
jno
pop
inc
push
xchg
xor
ret
xor
setbe
mov
outsl
fxrstor
jns
jmp
repz
xchg
movsl
mov
push
or
cmpsb
cmp
fadds
popa
or
or
movsl
gs
push
dec
mov
test
and
mov
jl
push
adc
arpl
call
aaa
stos
mov
scas
sub
jns
pop
stos
jl
pop
enter
mov
stos
insb
jne
jecxz
pop
cs
in
stc
data16
push
push
push
lea
enter
je
dec
push
dec
mov
push
xor
inc
fcomi
mov
push
adc
cmp
rclb
jecxz
mov
out
movsb
pop
xchg
add
jno
test
arpl
cmp
adc
add
jecxz
mov
js
sti
xchg
fwait
out
jns
ljmp
stos
pop
pop
out
pop
fwait
rclb
mov
sbb
push
cmp
int
incb
pop
push
adc
lret
subl
pop
xor
lock
outsl
fsubrl
cmpsb
fildll
cs
mov
add
psubw
in
jo
cmp
pop
into
jae
lods
sub
in
cmp
test
shrb
cmp
pop
mov
sti
pop
add
mov
dec
sbb
cmp
in
loop
iret
in
insl
inc
into
push
and
xchg
xorb
inc
push
and
lret
sub
repz
push
xchg
push
add
lretw
imulb
clc
dec
inc
imul
daa
cmp
test
adc
and
pop
jmp
xchg
iret
pop
adc
cli
movsl
mov
inc
sub
aad
dec
rorl
bound
pop
int
out
test
iret
insl
xchg
fisubs
xor
mov
pop
mov
sbb
pop
jp
fmull
pop
sub
aas
pushl
outsb
fst
xor
inc
subb
xchg
mov
jno
xchg
in
or
pop
loopne
push
fsubs
mov
cmc
rolb
fisttps
gs
andl
paddb
and
or
cmp
test
cmp
add
lahf
jbe
xchg
je
sub
push
jmp
pusha
shlb
jp
dec
pop
mov
lds
jne
lods
mov
mov
out
mov
mov
xor
int
sbb
jg
outsl
addr16
adc
mov
xchg
push
sub
int3
into
add
pop
inc
lcall
enter
jne
incb
std
lret
dec
lods
jnp
push
mov
outsb
inc
push
cmp
clc
sub
xchg
and
cmp
lret
jge
or
stc
or
dec
xchg
adc
or
loop
push
ret
push
dec
push
movsl
cmp
add
clc
xor
jae
inc
and
xor
out
icebp
pop
pop
pop
lahf
and
rcrb
enter
cmp
xor
mov
dec
xor
ljmp
scas
std
jb
mov
xor
insl
out
pushf
jg
stos
and
stos
idiv
gs
ss
sub
xor
mov
push
int3
push
in
xor
repz
scas
out
pop
and
sbb
pop
xchg
dec
fldt
xchg
loope
lret
bound
mov
cmp
mov
xor
push
xchg
push
lcall
cmp
popa
fwait
mov
inc
dec
scas
test
push
mov
xchg
loop
ljmp
hlt
punpckldq
add
sub
or
push
mov
add
add
jne
daa
and
clc
and
xor
mov
fdivr
cmp
das
lds
test
rcr
sbb
add
sub
fcmovne
dec
push
shrb
pop
jno
jg
fnsave
pop
sbb
sub
cld
icebp
mov
mov
lods
aam
xchg
fildl
test
jo
cmp
add
add
add
and
jmp
lds
test
sub
lret
pop
hlt
jg
push
ds
std
cmpl
lock
into
mov
hlt
std
mov
fs
mov
adc
dec
data16
cmp
jmp
lods
popl
leave
jo
jmp
xchg
xchg
inc
out
imul
mov
sub
dec
cmc
into
xchg
test
adc
fisttpll
roll
les
lea
jae
leave
sub
ss
loope
pop
push
ss
js
mov
mov
outsb
test
cld
mov
mov
cmp
mov
jae
shlb
shl
mov
add
mov
enter
int
outsb
push
xchg
js
hlt
arpl
xor
pop
js
push
xor
xor
jmp
mov
movsb
mov
xor
inc
xchg
jge
sub
shr
jmp
in
xor
dec
sub
sahf
pop
xor
mov
fsub
push
mov
data16
test
xor
insb
fsubs
not
xchg
sub
sbb
mov
je
sarb
inc
daa
adc
pop
mov
cmc
aas
mov
pop
repnz
fnstsw
lret
lret
lcall
pop
add
lds
push
iret
es
enter
sbb
cmc
add
out
xchg
and
fucomip
cmp
jmp
xchg
xchg
jne
adc
fbstp
imul
mov
sbb
push
inc
arpl
inc
xchg
in
shrl
icebp
jb
or
inc
mov
int3
pop
out
cwtl
push
sbb
or
mov
lods
xchg
cmp
mov
mov
arpl
and
daa
inc
daa
xor
sub
dec
pop
cmp
cmp
push
popa
lods
or
pop
fdiv
pop
sti
push
rolb
shlb
mov
mov
arpl
sbb
lea
stos
or
sub
pop
call
es
test
fwait
xchg
push
cld
or
cli
adc
mov
pop
lds
dec
dec
lret
hlt
out
subb
nop
mov
inc
outsl
add
addr16
movsb
mov
cli
negl
fwait
sahf
in
jno
jl
or
xor
push
inc
cmp
xchg
data16
lods
or
cmp
xor
jae
fs
xor
pop
popa
jo
lret
arpl
or
xlat
jbe
sbb
cmp
repnz
je
daa
and
sbb
adc
add
loop
insl
mov
xor
fwait
jle
push
add
mov
lds
adc
gs
pop
adc
arpl
dec
ret
mov
cmp
cs
and
xchg
rcl
sub
mov
mov
movb
add
cmpsl
inc
sbb
test
sbb
dec
arpl
jle
mov
pop
and
sub
movsl
add
xchg
cwtl
dec
mov
dec
movsl
xor
div
or
and
and
push
cltd
ljmp
mov
jl
fildl
das
inc
push
enter
sub
testb
les
in
test
cmp
sbb
pop
scas
adc
pop
orb
les
mov
jno
ja
outsl
pop
add
das
adc
dec
imul
int
push
mov
sub
mov
rsm
je
sbb
lods
add
adc
push
push
mov
xor
or
xchg
into
ficomps
xchg
mov
lret
or
outsb
jbe
inc
sub
mov
or
ret
loopne
mov
sbb
cwtl
add
fcmovnb
iret
xchg
shll
inc
test
pop
push
popf
outsb
cld
sub
cmp
aaa
and
jg
rol
cwtl
movsb
jmp
sbb
sub
jns
test
cwtl
adc
jge
pop
sub
in
jge
mov
out
jae
jl
fimuls
incb
vmptrst
add
imul
outsl
insl
pusha
push
push
push
or
xchg
test
dec
inc
sbbb
sub
js
arpl
ds
push
ss
lock
jns
mov
into
cmp
nop
mov
andb
sbb
data16
mov
sbb
and
mov
hlt
add
aad
xor
or
xchg
insb
out
sub
popf
movswl
push
lcall
mov
aad
call
fildll
xchg
bound
xchg
pop
dec
and
out
pop
je
push
xchg
aad
pop
mov
call
push
cmpl
or
push
and
mov
icebp
das
out
fs
jns
frstor
lock
and
sbb
xchg
inc
mov
xchg
sub
insb
add
test
roll
sub
leave
andl
dec
sarb
out
xchg
pop
push
iret
test
clc
fs
dec
jb
clc
scas
and
mov
add
pop
outsb
pop
ret
inc
mov
xor
jl
mov
stc
adcl
mov
cmp
jae
mov
fldl
jo
andb
or
xlat
mulb
clc
popa
jmp
fimull
xor
or
fld
call
and
and
arpl
push
xchg
lret
dec
insb
and
stos
or
and
cmp
inc
fstps
add
cmc
movsl
mov
and
imul
xchg
arpl
scas
popa
pop
mov
aaa
call
cmp
mov
and
pop
mov
dec
adc
data16
adc
cmp
jnp
idiv
out
rcrl
push
xchg
orb
mov
or
push
push
xor
arpl
pop
bswap
cmpl
fcomp
push
mov
mov
aad
jmp
mov
gs
dec
cmp
xor
inc
jo
push
xor
dec
enter
or
in
cmp
jbe
sbb
cmp
mov
rcll
cmp
pop
xchg
or
cmp
xchg
sbb
sbb
stc
push
mov
arpl
out
inc
lret
in
addb
loopne
stc
dec
test
add
fadds
pop
arpl
pushw
pop
add
inc
lods
pop
outsl
dec
notl
mov
cmp
sub
jo
pop
push
and
andb
add
cmp
sbb
xor
ljmp
add
cmc
or
xchg
subb
jp
add
xor
daa
and
adc
fdivrp
sbb
cmp
lcall
cwtl
dec
mov
aam
mov
test
push
push
das
inc
cmp
shll
inc
inc
mov
xlat
push
xor
imul
mov
push
or
cs
mov
dec
jnp
rolb
lcall
lcall
mov
mov
sti
mov
push
adc
fsts
roll
inc
xor
lahf
gs
push
test
sub
and
lcall
xor
scas
inc
outsb
ficomps
pop
push
incl
inc
lea
mov
popf
and
popf
pop
sub
not
shrl
std
int3
xchg
add
push
or
rclb
jns
pop
sti
ret
pop
or
push
ror
sub
icebp
testb
xor
inc
es
push
mov
pop
xchg
push
inc
mov
add
xor
xor
ret
fmull
dec
push
or
shl
jmp
in
sbb
pop
jl
adc
testl
adc
sub
movsb
aad
mov
adc
inc
and
sbb
mov
fidivrs
lret
iret
adc
cltd
in
shll
je
ret
loop
push
sub
je
ljmp
push
dec
mov
inc
mov
lret
dec
shrb
or
dec
nop
movsb
ja
ficoml
push
mov
das
adc
jno
shrl
jmp
jnp
pop
mov
stos
in
movsb
ret
repnz
push
ret
mov
bound
arpl
mov
loopne,pn
mov
nop
pop
sub
mov
xchg
adc
aaa
imul
sub
inc
jmp
adc
icebp
icebp
push
lret
lret
sarl
fdivrs
dec
push
xor
in
push
stos
sub
push
push
inc
jne
imul
mov
ret
adc
subb
pop
push
adc
lret
pop
data16
mov
shrb
sub
cli
jno
inc
out
cli
pop
es
test
push
out
or
dec
xchg
add
inc
roll
inc
cmp
aad
outsl
jae
into
inc
fildll
loop
out
add
aaa
test
arpl
xchg
imull
cmp
stos
int
and
xor
icebp
incb
mov
push
adc
adc
call
fdivrs
push
fisttps
cmp
mov
or
imul
test
lcall
fisttpl
pop
inc
or
ret
sbbl
or
loope
insl
jmp
mov
sarb
ror
inc
jae
xchg
xchg
fdivrl
sub
and
mov
inc
xor
enter
sarl
adc
dec
jb
stc
mov
mov
test
imul
jns
jmp
fstpt
push
adc
cmp
jb
mov
cmp
jne
sub
lcall
mov
push
iret
adc
pop
mov
sbb
ss
rcrl
faddl
inc
out
pop
stos
dec
jle
pop
adc
dec
mov
dec
arpl
std
dec
xchg
mov
sub
add
js
dec
jne
in
lock
pop
outsb
out
add
jg
insb
lret
push
pushf
adc
cli
pop
pop
aaa
or
loopne
out
push
jns
enter
or
aas
imul
test
das
lock
mov
xor
inc
push
stos
mov
repnz
mov
clc
sub
adc
icebp
aaa
push
imul
add
in
and
mov
push
nop
xchg
iret
cmpb
shlw
fyl2xp1
lret
loopne
subb
dec
adcb
adc
pop
pop
stos
xor
jo
mull
hlt
inc
outsl
outsb
jmp
adc
addl
lahf
test
leave
sub
bswap
sbb
insb
js
fcoml
xchg
lret
jl
dec
sub
xchg
mov
daa
mov
lcall
mov
ja
xchg
mov
and
insb
inc
add
push
loope
cs
and
add
fnsave
mov
cmp
dec
push
nop
jno
dec
push
pop
sbb
fbld
pop
sbb
sub
pop
xor
negl
loopne
mul
sbb
or
xchg
cli
leave
fs
cmpl
mov
loop
xor
and
pop
mov
sbb
jmp
pop
jl
leave
push
icebp
fistl
loop
out
push
dec
jno
out
std
fs
mov
jg
pusha
clc
mov
mov
xlat
xchg
sbb
pop
lods
mov
out
loopne
test
push
subl
rep
xchg
mov
pop
mov
adc
sub
icebp
cmc
push
jl
cmp
inc
inc
push
out
shlb
sahf
mov
xor
fsubs
iret
xchg
sahf
arpl
sbbb
and
xor
rcrl
mov
sahf
ljmp
jp
cmp
adc
xor
push
ret
xchg
mov
cmp
in
cmc
sbb
das
xchg
dec
out
rcrl
xchg
cmc
hlt
insl
fmuls
xor
arpl
cmp
xchg
movsb
and
loopne
std
fisttpl
ss
push
mov
pop
inc
fstl
shll
adc
les
inc
loop
in
lea
add
imul
in
hlt
ret
pop
jbe
push
jp
and
inc
inc
fisubrl
pop
inc
lds
ds
mov
bound
rorl
xrstors
stc
adc
jns
loopne
adc
cltd
in
mov
pop
add
push
dec
and
xchg
mov
mov
sub
lods
jae
jae
mulb
and
cli
mov
std
fbld
push
mov
scas
inc
jg
cmp
lea
push
push
loope
and
push
iret
cltd
ljmp
stos
jmp
iret
lds
repz
push
fcoms
inc
jmp
push
insl
imul
pop
fldlg2
jne
lds
adc
aas
xor
rcll
fs
fbld
or
es
cld
jae
push
loop
xchg
mov
and
sbb
add
jl
mov
add
and
shlb
sti
sbb
adc
pop
lahf
hlt
mov
sbb
subl
pop
clc
adc
mulb
sub
mov
out
int3
ret
mov
je
test
inc
mov
nop
std
ret
mov
mov
mov
sbb
hlt
test
scas
fs
repz
add
adc
add
sub
jmp
xor
hlt
xchg
rorb
lret
xor
in
push
lock
jne
in
push
jbe
jmp
pop
negb
mov
add
cmp
or
or
adc
pop
repz
cld
cmpsw
ret
pop
mov
pop
vcvtps2dq
xlat
shrl
clc
adc
dec
mov
push
push
pushf
pop
mov
mov
imul
daa
andb
fildl
ret
sub
call
add
hlt
out
jbe
bound
jae
inc
xlat
gs
inc
dec
in
mov
xor
xor
jns
mov
imul
dec
loope
cli
sub
adc
fs
jmp
lahf
subl
sbbb
fimull
dec
fistps
cmc
or
sbb
or
les
sbb
hlt
lea
mov
xchg
sbb
in
push
sahf
in
int3
mov
sbbb
loop
sbb
test
and
jbe
pusha
dec
lock
or
mov
bound
roll
push
mov
lcall
xor
popf
xchg
xchg
enter
dec
lcall
xor
in
jns
push
mov
in
jnp
pusha
test
pop
scas
sub
mov
xor
mov
push
jl
xchg
mov
jo
lret
pop
push
stc
int3
cld
fistps
mov
pusha
add
fisubl
adc
addr16
cld
dec
sbb
dec
in
pop
jno
pop
bsf
cltd
and
pop
scas
mov
test
fisubs
dec
adc
ficomps
test
mov
daa
xchg
dec
sub
stos
rorl
xchg
in
jl
leave
lcall
inc
rorb
xor
push
outsb
ret
insl
push
rclb
stc
les
mov
xor
push
arpl
cmp
jmp
xor
sub
or
mov
pop
sub
arpl
fisttps
mov
cs
mov
hlt
movsl
add
pusha
adc
push
or
js
push
stc
pop
ficoms
ficomps
pop
jge
adcb
mov
xchg
mov
or
int3
outsl
push
mov
xor
inc
push
mov
jg
clc
sub
aam
nop
pop
cmp
cld
pop
pop
push
and
mov
scas
push
daa
das
sub
mov
fisttpll
cwtl
sbb
mov
xchg
lea
bound
ljmp
mov
dec
addr16
leave
lock
fsubr
cmpsb
sub
loope
test
add
dec
xchg
movsb
shll
sbb
dec
aam
mov
pop
ja
ljmp
mov
jle
mov
jns
xchg
add
adcb
xor
pop
or
outsl
jb,pt
mov
inc
insb
sahf
push
xchg
sti
mov
mov
mov
lcall
or
rcll
nop
std
movsl
xchg
add
mov
add
lods
cmp
jbe
movsb
sub
leave
in
jg
in
push
pop
pop
gs
ss
lock
in
inc
jne
ror
js
dec
rclb
in
js
leave
ss
ds
add
add
pop
out
iret
repz
jle
cmp
jns
insb
pop
and
pop
int
mov
sahf
cmp
adc
test
pushf
std
outsl
jns
popa
icebp
mov
dec
repz
ret
mov
inc
inc
and
lock
jmp
outsl
nop
sbb
xchg
aam
push
sbb
cli
inc
insb
inc
mov
loope
mov
push
pop
adcl
enter
and
jmp
pxor
divl
pop
jge
xor
adc
add
mov
insb
xchg
xor
outsb
adcb
jg
imul
out
lds
add
mov
push
push
testb
or
xchg
xchg
sub
push
aaa
jno
push
xlat
mov
cli
or
out
mov
sti
in
xor
and
inc
push
cmp
std
add
bound
aas
divl
pop
sarl
xlat
mov
cmp
mov
jge
pop
stos
in
int
and
sbb
outsb
ds
movsb
or
int
or
add
sbb
out
pop
lods
push
sti
add
fldt
test
sub
mov
lahf
in
cmp
loopne
xlat
lea
and
lods
in
lret
or
jecxz
js
ljmp
mov
in
inc
das
xchg
push
fucom
push
dec
xchg
jns
ret
mov
jl
loope
rcrb
pop
dec
pop
xchg
testl
lds
imul
push
cmp
and
jns
int3
push
cmpsb
cmpsb
popf
inc
mov
fs
push
xchg
pop
imul
movsb
dec
mov
data16
rorb
mov
and
outsb
gs
cmpl
mov
out
sub
sbb
pop
xchg
getsec
pusha
dec
inc
je
xchg
pop
mov
pop
fwait
push
jnp
outsb
cmp
addr16
mov
imul
rorb
xchg
ret
in
xorb
inc
add
pop
insb
js
imul
adc
movsb
das
xor
mov
sbb
xlat
movsl
dec
push
loop
inc
imul
scas
add
icebp
and
mov
push
dec
popl
cmpsb
insb
sbb
xchg
xchg
dec
jo
cmpsb
mov
sarl
outsl
daa
outsb
lahf
pop
pop
mov
push
rcll
and
inc
fldcw
inc
sbb
jl
or
cltd
mov
lret
idiv
ljmp
les
sbb
dec
out
lock
out
push
and
pop
mov
xlat
dec
cmpsl
stos
pusha
hlt
push
addr16
lods
sub
mov
push
cmp
mov
xchg
mov
fiaddl
add
or
mov
inc
orl
inc
incl
dec
mov
popf
mov
test
inc
inc
lcall
cwtl
cld
mov
fcom
and
sbb
iret
dec
add
mov
adc
mov
outsb
cltd
fdivs
ljmp
dec
or
inc
iret
rorl
push
mov
xor
push
mov
mov
or
ret
pop
xor
arpl
icebp
cmp
push
adc
jmp
sahf
test
xchg
movsb
mov
sbb
pop
xchg
std
stos
mov
jmp
push
mov
cmp
and
jns
xor
iret
in
xor
cmp
out
nop
lcall
out
ds
gs
and
ret
mov
nop
insb
add
push
pop
shlb
repnz
mov
mov
sbb
mov
sbb
mov
out
clc
jo
cmovge
push
and
pushf
cmpsb
mov
mov
rolb
xchg
std
push
push
icebp
xor
xlat
jnp
mov
or
pop
adc
aam
xor
mov
loopne
cmp
ss
or
xor
pop
sbb
sub
fisttpll
xor
outsl
sahf
inc
or
xchg
sub
jae
mov
outsl
int
ret
or
std
test
int3
sub
mov
int
test
roll
pushf
mov
aam
cmp
sbb
dec
test
sbb
loopne
mov
lea
sbbl
jecxz
xchg
cmpsb
roll
mov
pop
imul
popaw
mov
mov
mov
lods
pop
inc
int3
pop
stos
adc
in
mov
andb
push
cmp
out
sub
pop
add
std
pop
ja
sub
or
nop
sti
push
pushf
dec
lret
aam
mov
lret
mov
enter
push
add
data16
inc
or
cmp
sbb
mov
aad
pusha
jg
stc
in
lret
pusha
push
cmp
aas
jns
ret
scas
xchg
add
mov
sahf
shrd
push
sti
mov
je
push
xor
add
or
dec
mov
fdiv
stc
je
dec
xor
pop
dec
sub
into
ror
loopne
mov
mov
movsl
fisttpl
jmp
std
mov
rolb
push
or
jbe
xorl
mov
inc
push
adc
orl
ja
repz
ret
enter
popa
pop
pop
xchg
dec
adc
cs
and
daa
jl
or
dec
lret
jae
loopne
jbe
fdivl
int
pop
test
dec
ficomps
and
es
sbbl
shrl
sub
shll
xchg
lret
inc
dec
daa
movsb
jp
das
adc
lea
fwait
jp
or
das
mov
mov
daa
mov
push
xor
pop
gs
and
xlat
cld
xchg
fstps
test
add
push
sub
sub
cmp
xchg
jne
in
pushf
adc
bsr
enter
or
pop
int
fiaddl
cmp
push
jae
mulb
cmp
arpl
and
fmul
push
mov
repnz
jle
std
shlb
jg
push
filds
insb
mov
jns
ss
mov
jg
xor
jmp
out
jmp
call
push
add
js
cmp
adc
cmp
inc
movsl
lahf
test
les
movsl
jnp
test
int
mov
cld
lods
dec
adc
stc
push
mov
or
flds
mov
leave
pusha
sbb
movsl
cld
nop
jmp
cwtl
pusha
imul
dec
mov
scas
ret
das
mov
inc
adc
cld
aas
inc
mov
enter
add
dec
mov
xor
nop
mov
and
notl
sbbb
inc
inc
stos
xor
bound
repnz
pop
mov
fsincos
pusha
mov
lds
jnp
mov
icebp
icebp
xorb
out
cld
xor
lods
sahf
adc
addr16
xchg
aad
dec
jg
call
jle
cmc
xchg
je
inc
mulps
gs
stos
pop
femms
scas
fldcw
lret
dec
int
data16
paddb
adcl
or
int3
pop
rcrl
mov
mov
dec
adc
or
jae
jbe
mov
mov
inc
cmpsb
enter
into
xchg
add
or
aas
add
cmp
dec
ficomps
mov
mov
and
xchg
mov
push
dec
jo
mov
out
shrb
cld
mov
mov
call
out
std
mov
mul
dec
push
cwtl
outsb
mov
jge
orl
pop
mov
js
pop
pop
or
mov
sbb
lds
cmpsl
inc
jnp
dec
cmp
cmc
mov
cld
pop
bound
cmp
pop
leave
adc
mov
cmp
xor
aad
cli
push
xchg
push
loop
xor
adc
add
push
test
fwait
jnp
xlat
aad
notb
pop
call
into
add
push
lods
and
scas
mov
loope
mov
out
je
mov
mov
pop
addb
daa
inc
xor
js
hlt
loopne
fs
das
pushf
mov
inc
in
sahf
pop
mov
mov
add
hlt
ss
icebp
xor
push
pop
mov
ja
add
ror
iret
jns
mov
dec
int3
or
out
and
xor
dec
cltd
gs
sub
inc
test
ljmp
mov
jns
and
ds
mov
xor
aad
repnz
or
jecxz
mov
mov
lahf
aad
mov
ljmp
pop
out
adc
add
lock
loop
in
scas
gs
lods
fisttpl
mov
push
xor
repz
add
ja
pop
xor
stos
fistps
sti
orb
data16
or
arpl
sbb
pop
rclb
dec
xorl
jno
dec
dec
adc
mov
jg
mov
push
or
add
gs
push
mov
xor
pop
push
rorl
movsb
jo
test
scas
or
push
mull
mov
jb
cwtl
popa
rcr
push
dec
rcr
hlt
das
xchg
sub
dec
mov
stc
test
mov
and
and
outsl
loop
ds
jno
push
mov
push
aaa
rcrb
insl
pop
xor
or
ja
dec
xchg
add
in
xchg
fidivrl
andb
shll
dec
mov
rclb
mov
cmp
into
cld
jbe
out
cmpsb
sub
popa
add
jno
mov
sbb
loope
cmp
scas
int3
movsl
lods
or
mov
imul
inc
cmp
mov
mov
inc
daa
sub
dec
fbld
test
xchg
sub
arpl
add
sbb
ficoml
shlw
cmpsl
ss
test
in
mov
negb
jmp
lret
push
rorb
les
gs
inc
add
imull
outsl
out
shl
mov
push
jne
loope
into
int
xchg
in
pop
mov
mov
push
pop
sbb
loopne
repnz
rcll
sub
jbe
fldl
mov
and
xor
jnp
xchg
out
add
jge
push
imul
xor
in
xor
push
ds
jnp
mov
and
jbe
mov
push
mov
notb
into
out
pop
cmpl
mov
mov
stc
cli
cmp
call
sbb
and
loop
cmc
aad
and
cltd
shl
jg
out
shl
xchg
and
clc
cmp
add
fsubs
add
dec
mov
div
jo
xchg
int
scas
mov
fs
rcl
jp
lcall
add
test
sahf
push
arpl
fldenv
mov
sbb
std
sub
cld
dec
dec
std
adc
pop
xchg
jne
jbe
cltd
inc
xchg
inc
or
clc
jo
and
xchg
xor
int3
or
and
repz
stc
stos
ss
jmp
ret
pop
and
mov
das
ret
cmp
jge
lock
cs
int3
mov
stc
mov
pop
add
repnz
or
repz
cmp
cmp
add
nop
decl
call
push
or
cld
fbstp
xchg
out
mov
iret
cmpb
cld
sbb
ss
int
jno
inc
mov
add
leave
dec
icebp
sub
shll
out
out
fwait
ret
jb
push
mov
add
push
pop
adc
in
lret
lcall
ss
mov
mov
cmp
xor
loopne
cmp
add
outsl
push
mov
push
mov
mov
ss
test
enter
rorb
push
dec
sbb
cwtl
outsl
jno
rcll
dec
lahf
sti
push
repz
std
dec
js
pop
stc
add
sbb
mov
mov
leave
xor
out
std
adc
stos
push
xchg
lea
pop
movsb
out
shlb
dec
insb
cwtl
mov
in
cs
lds
push
loopne
add
outsb
repnz
aas
inc
in
lret
xchg
insl
adc
outsb
push
loop
roll
leave
cmp
fwait
cmpl
aaa
or
les
lods
jg
lock
push
cmp
ret
jmp
mov
push
fwait
or
setnp
test
mov
addr16
pop
and
push
xor
pop
or
cmpsl
aaa
clc
lret
pop
andl
mov
out
mov
sub
jp
adc
pop
push
cmc
push
in
addb
lods
xchg
add
push
push
scas
add
test
loope
inc
in
popa
inc
call
and
xchg
sbb
lret
adcb
pop
out
lret
add
push
hlt
xor
std
push
cli
lahf
push
test
jmp
jne
xlat
jmp
mov
jne
std
jb
jno
mov
push
sbb
mov
pop
test
push
mov
lret
mov
push
stc
negl
pop
push
rcll
dec
rcll
je
sub
fs
into
notl
sub
enter
push
adc
or
inc
and
lret
add
sbb
stos
fisubrs
xchg
cmc
mov
dec
mov
test
lret
nop
xor
or
xchg
adc
aad
das
xchg
add
sub
sbb
rep
ss
lret
pop
fmull
je
fsts
lods
jp
fs
xchg
mov
leave
shl
or
sub
icebp
mov
lock
imul
fcom
or
jmp
dec
sbb
ret
xchg
adcb
subb
add
jl
fadd
in
mov
or
roll
sbb
loopne
scas
lods
jmp
inc
sbb
and
outsb
movsl
sub
test
in
pop
ja
mov
push
sbb
xor
cmp
mov
mov
mov
xchg
nop
mov
aad
adc
test
dec
mov
cmpb
jge
repz
jmp
arpl
and
inc
cmp
ret
ss
out
pop
jns
adc
loope
cmpb
mov
cmp
push
mov
mov
sub
rorl
in
leave
stos
lds
push
scas
inc
andl
or
lods
sub
add
sub
inc
es
inc
add
push
mov
leave
popf
in
cmc
mov
jmp
or
fstps
pop
dec
test
cmp
push
jg
stc
iret
repnz
push
inc
aaa
imul
sub
aad
emms
gs
enter
in
repnz
push
pusha
mov
adc
cs
mov
sbb
pushf
mov
xchg
and
and
fwait
fs
int
and
dec
dec
sub
lods
sbb
inc
push
fs
add
xchg
scas
daa
arpl
das
and
inc
and
mov
sti
push
sbb
loopne
sub
mov
stos
mov
lret
xchg
add
xchg
lahf
and
push
pop
adc
push
mov
add
adc
into
shlb
sbb
add
mov
pop
mov
je
jecxz
and
jmp
lods
rclb
push
cmc
dec
adc
jle
adc
leave
jmp
fdivrl
outsb
imul
ss
cmp
cmc
push
xchg
sti
xor
es
nop
dec
jmp
adc
outsl
ss
test
daa
jno
inc
pop
fwait
stos
sti
cmp
aas
in
xor
mov
ret
int3
cmp
xor
sbb
mov
mov
std
mov
aaa
std
outsl
mov
notl
scas
jae
imul
fsts
sub
popa
inc
mov
add
mov
mov
push
xor
ss
mov
fnstsw
push
sbb
and
push
add
daa
xor
out
mov
lods
out
add
sti
cwtl
call
pop
push
pusha
xor
xor
mov
popa
test
jo
and
scas
push
push
sbb
mov
xchg
lahf
dec
cmpsb
dec
inc
scas
inc
sbb
jg
xor
mov
mov
push
imul
mov
push
xlat
iret
sbb
adc
push
push
mov
push
scas
rcrb
pop
in
pop
jecxz
xor
mov
lds
bound
repnz
out
sub
arpl
pop
outsl
cmp
inc
jns
sub
push
dec
mov
cmp
push
scas
lret
add
movsl
jbe
sbb
mov
cmpsl
mov
xchg
sub
cmp
cwtl
add
or
in
shrl
in
dec
mov
hlt
dec
sub
incl
cwtl
lret
xor
or
adc
mov
insb
mov
jmp
push
sbb
cmpsl
pop
cmp
sbb
push
mov
xor
xchg
out
xchg
mov
pop
rorl
in
cwtl
mov
sbb
mov
inc
and
pop
mov
push
adc
mov
clc
mov
setg
xchg
mov
push
dec
cli
ret
jns
cwtl
outsl
lcall
jl
jecxz
dec
pop
aas
ret
mov
mov
mov
cmp
loope
fistps
inc
test
xchg
adc
push
sahf
andl
pop
imul
mov
xlat
xchg
pop
xchg
repz
jl
or
je
daa
icebp
jae
clc
notb
aaa
clc
mov
movsl
mov
dec
pop
or
and
adc
lret
sub
push
dec
adc
ja
ja
cmp
decb
movq
imul
test
addr16
addr16
cld
leave
adc
push
insb
ror
xor
mov
fwait
nop
and
push
aas
std
rep
subl
inc
enter
xor
test
xchg
imul
out
jns
movsl
imull
and
rorb
outsl
push
add
fcoms
inc
xchg
inc
lcall
xchg
mov
push
xor
aad
ljmp
xlat
cwtl
fwait
xchg
jo
lret
add
add
pushf
jae
out
repnz
lahf
or
jl
pusha
add
sbb
mov
xchg
inc
mov
jge
aad
shll
and
and
xchg
loopne
into
push
leave
icebp
je
lret
cmp
mov
add
fidivrl
dec
lods
rclb
sbb
movhps
daa
dec
imul
stc
or
sbb
sbb
mov
test
or
mov
enter
xor
aaa
push
ljmp
cmpsb
popf
jb
fdivl
sbb
sbbl
out
and
aad
imul
adc
rcrl
lahf
or
mov
xchg
lods
test
mov
jle
mov
mov
add
js
sti
adc
shl
or
imul
fs
das
imul
add
fs
mov
cmp
out
gs
lds
ror
push
ss
adc
dec
std
jmp
mov
pop
or
push
or
ja
xor
les
and
adc
inc
scas
imul
dec
mov
into
xor
ljmp
call
jecxz
lret
fcmovne
iret
add
push
loope
test
jne
or
stos
scas
movl
jb
adc
jns
data16
test
cmp
out
push
scas
cmp
and
jge
movb
and
cli
das
inc
adc
lret
or
xor
push
mov
cli
ja
out
jns
aad
in
pushf
dec
sub
dec
cmp
movsb
sub
das
xor
xchg
mov
jmp
mov
dec
fdivs
shlb
rep
sub
sbb
inc
pop
sahf
sbb
push
pop
clc
rep
fisubl
jno
mov
xchg
push
jl
stos
adc
pop
mov
std
dec
dec
in
sub
gs
jecxz
and
and
std
push
xor
push
lcall
mov
test
lcall
jge
cmp
sbb
int
stos
lds
push
xor
mov
ret
xor
and
or
test
call
xor
sub
stc
movsl
fsubs
sbb
mov
in
jmp
pop
scas
xor
test
stos
bound
xor
sahf
mov
test
dec
sub
fcomp
lea
sarl
mov
sbb
test
mov
cmp
adc
or
jnp
iret
mov
push
lods
push
test
cmp
outsl
mov
filds
pop
xor
xor
shrb
imul
push
sahf
rcrb
push
out
fistps
mov
lods
jmp
sub
inc
fmul
xor
mov
jae
sbb
lea
loopne
mov
nop
jae
sub
mov
inc
push
mov
fiadds
or
loopne
sbb
jg
push
jbe
xorl
xlat
mov
jnp
push
xchg
add
inc
xchg
jl
add
cmp
test
lcall
pop
lods
ficompl
push
add
jmp
repnz
push
rorl
sub
push
mov
inc
aas
mov
cli
in
dec
call
push
jmp
mov
dec
call
mov
shll
pop
jo
test
pop
mov
outsb
pop
and
push
push
lahf
rclb
cmp
inc
lea
sbb
inc
clc
fcompl
push
mov
aad
aas
adc
out
or
clc
pushf
dec
movsb
pop
xor
outsl
cmpsl
add
cmp
shlb
icebp
push
inc
xchg
pop
scas
adc
fwait
mov
or
or
sbb
or
fstpl
mov
sub
mov
popf
mov
cmp
mov
sub
ja
jl
xor
or
popa
in
ljmp
dec
out
pusha
test
fildl
mov
sub
adc
inc
push
inc
jmp
adc
dec
push
lock
shlb
imul
popa
cwtl
jbe
cmp
lahf
mov
cwtl
dec
sub
adc
mull
aaa
jbe
mov
insb
pop
in
mov
xchg
dec
mov
and
mov
cmpsb
rolb
mov
ds
jmp
mov
repz
jnp
mov
test
rorb
sub
cmpsb
pop
adc
scas
lods
loope
scas
inc
pop
cs
mov
in
aam
jae
jp
adc
mov
pop
cmp
adc
cld
cld
outsb
inc
loop
pop
xchg
iret
lcall
divl
sbb
push
lock
es
pop
out
bound
sbb
add
sbb
stos
and
mov
hlt
sahf
pmulhw
addr16
dec
dec
add
or
push
cwtl
pop
adcl
int
mov
or
pop
xchg
repnz
insl
xchg
cld
enter
lock
push
sub
movsb
jae
jg
ljmp
daa
jno
daa
loopne
jecxz
sbb
dec
push
sahf
cmpsb
mov
fnsetpm(287
or
clc
loope
dec
push
pop
clc
xchg
ret
lret
notl
scas
xor
and
ret
mov
adc
shrb
mov
push
xchg
mov
int3
lcall
mov
lds
fsubrl
add
sti
xchg
add
mov
push
sbb
jle
aad
push
xchg
arpl
push
xchg
pop
pop
daa
xor
int
pop
push
scas
pop
in
pop
loop
sbb
mov
pop
adc
jne
loop
jo
lods
dec
sbbl
inc
jbe
aad
test
mov
inc
data16
push
popf
xchg
pusha
cmp
mov
das
push
in
repz
faddp
scas
mov
dec
add
jmp
dec
out
mov
xchg
wrmsr
mov
pop
jo
scas
mov
out
dec
popa
mov
popa
in
bound
xorl
gs
arpl
pop
cmp
sbb
jmp
out
push
int3
jns
push
cmp
push
out
and
jno
push
jmp
inc
imul
loope
sahf
lahf
mov
rcl
inc
jmp
jne
insl
inc
xchg
inc
les
xor
fiadds
jp
xor
push
lods
popa
add
adc
rcrb
add
mov
pop
dec
xchg
js
in
stos
into
sbb
movsb
das
stc
pop
push
mov
sar
add
push
push
fwait
negl
int3
in
lods
test
xchg
dec
dec
daa
bnd
push
sub
aas
sbb
rcrl
inc
lods
nop
sbb
pop
movsb
sub
stc
jle
aaa
or
call
fimuls
ljmp
sbb
pop
fdivp
adc
xlat
push
hlt
xlat
pop
pushf
je
and
ret
push
mov
push
xor
subl
das
mov
mov
not
sub
lahf
popf
push
jae
cwtl
andl
sbb
les
jne
xchg
cs
idivl
inc
aas
push
mov
sbb
xchg
hlt
shl
xor
test
addr16
movsb
push
jp
scas
pop
xchg
jae
cmp
nop
cmpsl
out
jp
pop
rcrb
fnsave
in
mov
inc
lods
push
das
or
aas
repz
jbe
in
sbbl
loopne,pn
and
insb
sbb
mov
data16
fiaddl
inc
divb
xchg
loope
push
xchg
push
mov
or
xlat
pop
leave
mov
or
into
adc
push
jo
aaa
push
out
out
icebp
imul
xor
push
sbb
test
fdivrp
cmp
enter
repz
xchg
push
stc
xorb
test
fldt
and
jle
cmp
imul
xchg
sub
jmp
add
test
or
rorl
inc
iret
xchg
mov
int
sub
pop
dec
aaa
arpl
pop
cmp
jo
outsl
cltd
push
aas
xchg
loopne
or
out
fisubrl
fisubs
jp
in
pop
loopne
xchg
lret
mov
rcr
les
cld
and
movsl
push
ret
pop
add
cwtl
in
and
stos
push
or
mov
jle
xor
scas
fsubp
add
jbe
lods
jbe
fadds
repz
and
mov
mov
mov
push
pop
mov
jnp
in
aaa
xlat
fmuls
cli
sub
inc
in
mov
pop
push
aad
scas
movsl
clc
xchg
mov
jnp
lods
push
shr
fsubs
scas
adc
inc
xchg
lret
lahf
mov
stc
lret
cmpsl
sbb
test
cmp
and
xlat
iret
call
jg
stos
out
je
xchg
das
pushf
jnp
inc
mov
xor
sbb
loopne
pop
xor
loope
push
andl
lret
or
mov
into
scas
scas
jl
sub
or
ja
call
aam
cmp
sub
push
mov
adc
pop
fidivrl
leave
and
inc
rcr
fidivrl
push
ja
dec
jae
inc
mov
push
sbb
lods
sbb
dec
lea
pop
je
add
cli
mov
je
fs
pop
ror
inc
inc
jns
mov
nop
dec
mov
sub
mov
jne
into
mov
push
jl
and
xchg
push
cmp
lret
inc
jmp
inc
cmp
mov
sti
ficoms
jno
pusha
mov
sub
mov
stos
sar
jno
call
mov
xchg
repz
jne
aam
adcb
add
popf
push
inc
xlat
and
mov
scas
nop
aad
sub
fsubrl
call
xor
push
mov
in
add
nop
sub
lods
pop
jecxz
cwtl
out
cmp
flds
mov
ret
mov
mov
mov
mov
divl
ljmp
and
call
shr
stos
popa
hlt
sbb
pop
call
mov
enter
pop
sbb
push
and
mov
stos
push
and
mov
js
popf
pop
clc
aam
das
pusha
pop
jae
icebp
push
rorl
aad
out
xor
dec
push
and
jnp
adc
jnp
inc
add
aam
addr16
cs
sbb
test
adc
xchg
inc
ljmp
test
mov
mov
mov
mov
inc
xor
jp
stos
outsl
js
mov
loop
arpl
xchg
xchg
and
mov
push
int
arpl
pop
mov
imul
lret
test
lea
aad
inc
xor
cltd
or
mov
aaa
mov
incb
and
xor
push
sbb
inc
addl
xor
aam
cmpsl
call
mov
add
faddl
mov
imul
adc
push
add
push
sub
out
mov
clc
inc
sub
sbb
shrl
xchg
lret
adc
add
psubw
pusha
shlb
or
js
pushf
xchg
mov
mov
push
fisubs
loope
mov
aam
xchg
mov
adc
xor
sub
jge
and
addb
dec
popf
outsl
adc
add
mov
cmp
test
xchg
test
mov
mov
dec
cs
loope
adcl
sbb
push
inc
dec
and
test
push
adc
je
xor
int
stos
movsl
add
mov
iret
in
ja
xor
add
out
test
sub
pop
aam
mov
xchg
or
lret
fwait
push
xor
xchg
sarb
loop
out
sub
or
mov
fcmovnb
jo
je
idiv
jmp
pop
dec
mov
inc
stos
cmp
daa
adc
cmpsl
nop
mov
and
dec
mov
fwait
mov
and
xor
shlb
imulb
sti
add
movsb
movb
fcoml
add
int3
and
sub
int3
xor
xchg
popa
jmp
jmp
ficomps
cli
and
shl
sbb
adc
jae
repz
mov
imul
iret
lods
rorl
pusha
mov
fsubl
or
loope
jne
xor
push
dec
jecxz
sub
faddl
add
cwtl
mov
jp
inc
int
faddl
sti
incl
or
into
stos
jne
in
mull
xchg
xor
lret
cmpsb
je
gs
test
out
icebp
sub
fnstcw
loop
jp,pt
lret
stos
mov
xchg
and
dec
inc
loop
rorl
pop
cltd
xor
scas
mov
cmp
mov
xchg
enter
pusha
paddusw
and
out
lea
xor
pop
mov
ja
pushf
jge
dec
in
mov
in
jnp
jnp
ss
cmp
insl
dec
cs
mov
bound
cmc
fildll
clc
mov
xchg
push
fisttpl
fcom
testl
outsl
adc
sbb
fwait
cmp
adc
pop
icebp
cmp
mov
or
sti
sub
lret
mov
cs
mov
or
idivl
mov
in
sbb
test
sub
mov
pushf
out
idivb
xlat
mov
roll
cmp
cld
xor
cmpsb
mov
or
and
aad
out
test
outsb
xchg
cli
jecxz
sbb
sbb
and
popf
cmp
mov
into
std
jbe
pop
jle
in
insb
lahf
nop
xchg
loopne
adc
shl
xor
scas
mov
stos
ret
pop
mov
xchg
test
fs
setg
or
dec
insb
loope
addl
lret
shrl
cmc
jl
sbb
mov
xor
in
mov
mov
sahf
xchg
xchg
and
sub
in
shrl
fstps
mov
mov
mov
cli
imul
sub
add
or
xor
xchg
inc
xchg
adc
adc
dec
inc
or
cmp
sub
mov
mov
imul
mov
popa
or
sub
pop
xchg
mov
out
mov
mov
cwtl
xor
inc
cwtl
lods
adc
dec
mov
inc
sub
xchg
inc
pop
jl
dec
fisttpl
das
xor
or
inc
mov
ss
mov
jnp
cmp
push
sbb
jp
dec
scas
inc
cmp
outsb
or
or
arpl
arpl
aas
mov
in
pop
jbe
xchg
dec
pop
xchg
xchg
sti
les
xchg
std
mov
repz
xor
pop
into
dec
sub
out
pusha
and
cmp
fnsave
mov
sarl
add
in
ds
popf
shr
enter
inc
jecxz
mov
inc
nop
aam
into
lahf
push
lods
push
dec
cwtl
into
push
cmp
clc
js
mov
hlt
mov
xorl
jo
push
and
jbe
mov
stos
mov
xor
push
faddl
fistpll
or
jbe
adc
xchg
ja
push
inc
and
std
rcrb
js
adc
jecxz
loopne
jg
mov
aam
aam
nop
das
xor
fcmovb
xchg
lock
or
cli
xor
sbb
lods
and
lret
cmp
enter
and
jle
lret
fsubrp
mov
ret
test
je
mov
cli
and
lods
pop
ljmp
nop
fnstsw
call
add
stos
fcmovnb
insb
test
mov
mov
cmp
dec
cmp
push
lahf
pop
hlt
cld
and
jo
sub
inc
lea
in
mov
dec
or
sub
shrl
test
adc
aam
sbb
sbb
js
lds
sub
clc
mov
rolb
aam
mov
out
dec
pop
roll
xor
xor
mov
mov
and
and
mov
or
stos
cwtl
sbb
cmp
mov
out
sbb
sar
cmpsl
sub
add
nop
pop
int3
inc
aam
jmp
lods
sub
popa
test
lret
mov
std
lock
sub
out
lods
cmp
outsb
dec
pop
into
cmp
testl
dec
pop
jae
cltd
stc
arpl
push
sti
in
xlat
hlt
inc
add
stos
hlt
lret
mov
or
mov
insl
mov
aad
cmpsl
push
ret
mov
inc
pushf
bound
or
pop
dec
sbb
mov
and
fcompl
push
fcomps
mov
push
shll
cmc
pop
or
mov
into
jne
test
dec
mov
xchg
sahf
and
mov
push
into
enter
gs
jns
jbe
mov
les
push
aam
dec
aas
fwait
xor
js
fucomp
call
sub
fcoml
pop
mov
cmp
dec
mov
or
test
inc
out
sub
and
rolb
aad
push
repz
jecxz
sub
pop
and
push
xor
push
sbb
insl
sbb
es
adc
lds
movsb
ficomps
popf
testb
cmp
adc
add
les
ds
pop
jp
nop
adc
and
mov
jp
test
sub
cmpsb
adc
repnz
arpl
or
roll
or
fsubr
xchg
bound
iret
pop
clc
cmc
insb
mov
sbb
and
lds
aaa
gs
lock
fldt
in
mov
push
push
fisttpll
shrl
or
clc
pop
incb
das
jo
xchg
pop
shrb
sbb
add
adc
adc
pusha
mov
out
jg
in
outsl
clc
js
ficomps
bound
and
xor
adc
fs
xchg
adc
cwtl
cli
cmpsl
outsl
adc
push
and
inc
dec
stc
stc
and
int3
mov
sub
cmp
pop
jno
mov
cwtl
mov
jecxz
dec
mov
rep
ds
xor
pop
test
inc
push
push
pop
lea
pop
push
iret
and
xchg
sbbl
add
xchg
rcll
sub
add
inc
outsb
xchg
pop
test
pop
lock
mov
fdivl
aam
icebp
out
pop
xchg
push
out
pop
ret
rcr
push
or
cmpsl
mov
dec
shl
cltd
dec
sarb
sti
and
mov
pop
in
cwtl
insl
sti
xchg
cmp
and
sub
aam
outsb
fdivr
scas
movsb
bound
sub
hlt
les
mov
cmpsb
stc
xor
out
mov
std
push
scas
mov
aad
shlb
add
add
lods
leave
sub
rcl
inc
scas
xor
mov
adcl
cmc
jl
dec
mov
ljmp
clc
in
xor
or
call
stos
mov
in
cs
mov
jmp
lahf
in
inc
adc
out
ficompl
mov
cmpl
aas
popf
cmp
cli
loopne
or
fstp
fcmovu
adc
mov
aad
aad
or
mov
ficompl
ja
test
aam
shr
movsb
scas
xlat
cmp
adc
loopne
dec
lret
add
cmp
cmovg
xchg
xor
jl
xor
sbb
mov
sbb
cwtl
push
aaa
gs
movaps
stos
loopne
mov
pop
pop
xchg
xor
test
cmc
adc
faddl
fisttpll
cmc
pushf
cmpsb
dec
jbe
xchg
insl
out
mov
add
es
out
cmp
cs
cmp
or
mov
fdivp
insb
mov
clc
cltd
sbb
jecxz
pushf
mov
stos
dec
fldcw
and
jo
dec
jmp
iret
pop
hlt
pop
or
and
and
push
pop
out
getsec
mov
out
push
out
ja
cs
popf
shlb
cltd
mov
test
lea
lahf
jne
or
or
mov
lret
and
stos
cmpsl
jnp
lods
jl
inc
test
dec
outsb
dec
lods
enter
lock
add
fnsave
leave
pop
pop
add
xor
fmull
cs
dec
in
jae
imul
stos
and
adc
cmpsl
push
or
mov
mov
push
adc
into
sbb
cmpsb
shl
jnp
xchg
push
scas
adc
pop
jno
bound
fs
lock
mov
fidivrl
mov
pop
inc
fucom
ror
mov
popf
clc
ds
push
in
pop
jnp
jmp
xor
fs
out
test
and
sub
in
andb
fisttpll
pusha
ds
mov
je
fnstenv
fdivs
mov
out
inc
mov
adc
sbb
cmp
fstl
mov
adc
iret
or
mov
fldt
adc
filds
filds
hlt
aaa
pop
repz
xchg
pop
jae
and
cmp
loop
or
add
mov
add
push
data16
rorl
xchg
sub
es
xchg
dec
shlb
mov
xchg
popf
outsb
jg
adc
mov
sbb
dec
imul
std
push
push
mov
pop
jns
or
add
cwtl
std
sbb
dec
ret
lods
imul
inc
cmp
insb
fs
ret
ds
xchg
xlat
cwtl
movsl
aaa
mov
fcoml
cmp
lret
fsubs
popf
xor
lret
sbb
dec
push
lods
repnz
or
dec
cmp
mov
sbb
or
mov
fdivrl
lret
pop
dec
inc
mov
outsl
mov
pop
mov
js
clc
jb
daa
and
jecxz
mov
mov
insb
mov
push
ds
jp
popa
mov
sbb
outsl
xor
cmp
adc
enter
and
mov
outsl
xor
popf
into
mov
cmpsl
push
filds
int3
cmp
std
push
cmp
mov
lret
pop
enter
int
adc
pop
sub
sarb
and
int
sub
dec
or
mov
insl
fs
add
popf
jbe
or
outsl
inc
xor
or
push
out
sub
mov
fildl
int3
add
adc
inc
ss
xor
pop
sti
test
inc
cmp
push
rclb
test
stos
inc
lds
in
ss
pusha
aad
jle
xor
fwait
dec
mov
fs
xor
movzwl
into
mov
or
outsb
push
jne
push
jle
push
test
cld
push
out
push
cmp
or
scas
aam
dec
ds
in
cld
pop
pop
xchg
cmp
outsl
aam
cmpsl
pop
adc
mov
shrb
or
xor
daa
lods
leave
ret
pop
sbb
imul
mov
call
dec
jge
mul
add
aam
xor
shrl
pop
or
fildll
mov
dec
stos
xchg
mov
pop
adc
mul
jp
xchg
jns
rol
jecxz
test
stos
ret
cmp
test
fmull
pop
mov
loopne
popa
rol
int
aam
lds
jp
out
loope
mov
mov
lock
in
shlb
movsl
or
pop
xchg
clc
adc
fadd
jb
mov
push
xchg
inc
jne
adc
sub
jno
push
adc
jo
pop
movsb
push
pop
shr
popf
cmp
push
pop
lret
sbb
adc
fwait
mov
xchg
jge
adc
imul
push
xor
sbb
or
popa
aas
mov
or
cmp
mov
test
xchg
jmp
and
daa
push
pop
sbb
scas
addr16
jbe
fmuls
inc
arpl
sarb
outsl
dec
aas
mov
fs
scas
jmp
hlt
mov
cmp
and
inc
inc
adc
aaa
push
fildll
xchg
xchg
inc
data16
sub
or
sahf
hlt
notl
js
add
scas
out
ret
lods
adc
ror
in
pop
add
inc
stos
call
jecxz
or
xlat
sub
loopne
cmpsb
jmp
adc
pop
xchg
scas
out
sbb
loopne
inc
pop
pop
mov
cmpsb
das
shlb
clc
push
push
mov
sarb
fists
stos
ja
cmp
cmpl
mov
xchg
fwait
stos
mul
imul
mov
adc
cmpsb
jle
cmpsb
xchg
lock
not
push
mov
mov
ficoms
js
outsb
inc
push
adc
iret
int
mov
push
mov
adc
sbb
fwait
mov
imul
mov
add
mov
jge
rcrl
subl
mov
ret
or
jl
test
ret
pop
iret
jmp
lock
jb
push
jbe
inc
adc
lds
jae
aam
and
inc
sub
jp
icebp
insl
jecxz
jne
fisttpl
sbb
test
scas
push
lret
sub
lret
xchg
push
sbb
dec
sbb
aaa
pop
add
loop
inc
int3
add
andl
test
sub
shrl
mov
pusha
mov
lea
mov
or
or
xchg
xor
test
xor
and
fidivrl
push
fcompl
adc
in
pop
lcall
cmp
jge
cli
xchg
push
bnd
cld
jo
jl
lret
xchg
inc
inc
cmpsl
push
push
lock
push
dec
aad
bound
dec
mov
daa
jno
push
xchg
pushf
fisttps
adc
jmp
or
roll
xchg
sub
lods
enter
push
imul
popf
aaa
cld
cmp
ljmp
pop
jno
sbb
push
lds
icebp
jnp
jno
cmc
cmpl
test
pop
cmp
push
mov
fsubl
mov
pop
cltd
cmc
adc
inc
add
test
pop
xlat
insl
pop
dec
xchg
mov
jbe
or
lods
jns
mov
dec
sbb
jns
mov
push
imul
push
cmp
gs
repz
pop
inc
pop
mov
pop
jns
inc
jg
mov
sbb
cmp
xchg
fstpt
push
mov
xchg
stos
or
push
iret
in
mov
in
rcrb
out
pop
out
inc
sbb
mov
sbb
call
repnz
mov
fadd
das
push
inc
sub
mov
repnz
test
movb
mov
call
xlat
arpl
fucomi
push
lahf
xchg
xchg
push
xchg
dec
xchg
push
push
dec
fwait
cmpsb
out
adc
es
outsb
repz
les
jle
mov
sarl
inc
subb
addr16
inc
notl
fsubp
call
fcoml
push
pushf
mov
cmpsb
xchg
pop
les
lret
xor
mov
adc
xor
jno
mov
je
cmc
mov
xlat
or
mov
sti
out
mov
jnp
into
lea
sbbb
cmpsb
cmpsb
sub
or
push
mov
int3
es
pop
roll
jle
sub
and
or
mov
xchg
inc
pusha
xchg
inc
mov
adc
mov
stos
enter
dec
push
add
sahf
cli
add
addr16
dec
cmp
dec
icebp
dec
pushf
jno
je
adc
mov
push
frstor
scas
fisubl
cltd
pop
inc
pop
mov
push
push
jg
mov
addr16
mov
mov
add
pop
cmpsl
or
stos
sbb
arpl
ljmp
or
adc
cli
xorb
insb
adc
mov
jno
dec
xchg
rorb
jb
xchg
test
cmp
enter
cld
insl
cmpsb
jmp
mov
push
dec
iret
es
cmp
sbb
cmpsl
push
sarb
adc
loope
jno
lret
sahf
test
jmp
enter
jae
cmpsb
or
fbstp
push
dec
lahf
fnstenv
sbb
jmp
into
fidivl
mov
pop
fsubrl
in
adc
inc
jbe
mov
jbe
pop
cmpsb
sbb
adc
iret
lahf
loopne
das
stos
add
dec
mov
jns
adc
sub
dec
jecxz
jmp
xor
pop
add
mov
mov
pop
int
out
lahf
fs
sbb
sbb
mov
dec
dec
and
mov
imul
popa
mov
add
and
and
enter
adc
int3
ja
xchg
popa
lcall
adc
push
jg
mov
pop
dec
mov
jecxz
push
inc
and
repnz
mov
lret
push
lcall
leave
inc
in
pop
popf
cmp
lcall
dec
imul
xor
adc
cmp
imul
mov
sbb
hlt
adc
imul
sub
add
adc
push
dec
stc
cmp
mov
jnp
cmp
sub
ret
dec
pop
inc
cltd
and
in
mov
or
aaa
shlb
fwait
inc
jle
addr16
lcall
cmc
and
push
jae
cmpsl
mov
stos
mov
add
add
std
xor
rcll
lock
andb
icebp
int
or
push
pop
dec
cli
and
add
into
hlt
or
xor
int
mov
sbb
ds
or
sub
subb
in
xchg
test
mov
cmpsb
sbb
lret
and
dec
in
int
jae
jnp
pop
fisubl
movb
pusha
ljmp
sahf
dec
cltd
xchg
aad
stos
push
aad
cmpsb
loop
lods
jmp
or
leave
out
icebp
pop
pushf
jb
out
ficoml
sub
pop
data16
jo
ljmp
dec
add
pop
xchg
mov
mov
adc
mov
add
inc
lret
movsl
testl
rcll
dec
jnp
xor
push
push
int3
jnp
stos
xchg
nop
cs
cmp
bswap
out
idivb
jb
clc
rcrl
xchg
add
outsl
mov
xchg
sti
fadds
test
bound
pop
lock
inc
fcompl
sbb
xor
xor
adc
rclb
xorb
and
jmp
ret
adc
nop
roll
fisubrl
mov
jo
out
mulb
cmpsl
rclb
js
mov
shll
sub
and
sub
or
in
stos
enter
rclb
pop
pop
mov
out
xlat
lcall
adc
lcall
or
inc
fists
fstl
or
movsl
js
and
fwait
fwait
stos
lret
stc
scas
insb
mov
jle
mov
adc
push
sbb
shll
scas
mov
mov
addr16
mov
mov
jl
aas
mov
jne
sub
adc
xchg
mov
inc
das
mov
dec
popa
xchg
lcall
mov
add
lea
inc
fwait
sub
outsb
or
xchg
sbb
pop
add
ds
inc
jo
add
adc
lods
adc
or
es
stos
jmp
sbb
ficompl
arpl
adc
sbb
xor
lea
comiss
mov
cmp
ffree
out
outsb
fisubl
and
dec
mov
not
or
loop
and
in
push
int
lret
jmp
inc
mov
cmp
pusha
int
adc
les
pop
mov
jnp
lahf
imul
loopne
sub
testl
and
adc
call
movb
sahf
pop
fdivrs
iret
xchg
sbb
jbe
daa
addr16
sbb
sahf
jle
cmp
mov
ds
rolb
pop
mov
andl
lock
mov
cmpsl
and
jb
push
mov
or
rorl
push
or
enter
lcall
xor
outsl
jno
enterw
or
jo
cmp
push
dec
jge
hlt
cmp
jmp
jl
aas
or
push
mov
test
jle
mov
cmp
add
repnz
insb
test
dec
mov
pop
or
call
in
inc
xor
aas
adc
or
test
gs
in
out
mov
mov
mov
inc
fdivs
call
fstpl
movsb
add
fcoms
repz
nop
imulb
push
gs
push
cld
adc
ds
std
adc
sub
repz
add
push
push
das
dec
test
xor
andb
into
roll
lds
lock
lahf
imul
and
jg
js
andb
stc
push
cs
sbb
out
fiadds
in
sub
jmp
sbb
ret
dec
enter
lret
ret
cli
mov
lcall
jbe
jmp
lock
faddl
or
popf
imul
cmp
mov
mov
inc
popa
addr16
sbb
push
add
mov
out
sar
xchg
jbe
ljmp
pushf
mov
andl
test
inc
out
mov
mov
out
mov
push
js
jge
push
popf
add
cmp
cmc
ret
dec
cmc
cld
mov
xchg
rcr
lds
mov
push
add
adc
mov
repnz
mov
stc
scas
addr16
jl
out
mov
shlb
inc
and
add
adc
test
jg
sub
push
mov
pop
rol
out
and
jg
sbbb
add
test
xor
and
lds
test
jae
push
andl
mov
test
dec
dec
div
rorl
call
cmp
jne
pop
mov
jo
test
xor
xchg
xor
shrb
mov
addr16
testb
and
xlat
add
js
mov
pop
and
push
sub
outsb
or
dec
paddb
lock
ja
add
addr16
stc
dec
loop
adc
inc
mov
sub
cltd
jns
repz
fwait
add
sti
jmp
cmp
sbb
sub
sbb
mov
and
pushl
fldt
xchg
enter
and
xchg
cmc
cmp
pop
and
adc
les
shrb
push
out
adc
jo
add
cmpsb
inc
push
mov
icebp
mov
in
fnsave
lcall
sbbb
movsl
add
inc
add
adc
sub
mov
jne
sub
dec
lock
xchg
in
or
into
cltd
cmc
push
pushf
imul
xor
xchg
stos
push
mov
mov
inc
and
adc
and
xchg
cmp
xor
les
out
xor
mov
add
test
arpl
push
imul
xchg
aad
push
push
adc
cmp
imul
sarl
pop
or
jae
test
pop
adc
cmp
add
cmc
inc
stc
or
decb
mov
imulb
dec
mov
in
ficoms
pop
fidivrs
mov
and
cmp
test
xlat
je
xor
dec
cmpsb
cli
add
std
cmp
cmpsb
mov
mov
inc
int
push
daa
push
adc
or
imul
adc
add
aas
cmpsb
sbb
pop
fnstsw
mov
shl
je
pop
pop
cmp
dec
imul
mov
dec
xchg
fcmovb
push
push
in
and
mov
out
sub
xchg
fldenv
push
and
fs
inc
ret
add
inc
dec
popf
jp
sahf
pop
stos
stos
test
jge
stc
dec
jnp
imul
andb
stos
fldt
bound
adc
setp
mov
xor
jle
gs
push
push
imul
xor
fmuls
jp
inc
cmpl
stc
jl
imul
mov
or
arpl
in
mov
pushf
test
mov
add
cld
popl
aas
int
imul
xchg
pop
mov
jb
sbb
test
or
movsl
sub
mov
mov
inc
xor
adc
inc
sbb
push
pusha
push
sub
mov
mov
outsb
imul
or
push
adc
push
xchg
push
outsl
ja
add
nop
pushf
lods
jno
dec
icebp
mov
sub
cmpsb
cs
enter
mov
add
cmpsl
jnp
adc
and
inc
stos
adc
aas
mov
lahf
dec
mulb
mov
jb
jmp
jo
lret
pusha
mov
mov
lods
cmp
sub
ret
cmpsl
mov
stos
movsl
pop
in
push
add
cld
pop
jmp
xor
shl
ds
mov
das
arpl
adc
hlt
cwtl
cmp
sbb
inc
xor
ret
mov
xchg
loope
in
dec
out
pop
in
shlb
xor
stos
ja
cmp
inc
js
fmul
inc
ds
aam
adc
pop
xchg
movl
push
add
sahf
arpl
cmp
mov
cmc
mov
popf
pop
cmpxchg
fadds
and
rcr
cmc
popa
gs
iret
inc
test
scas
or
fnstcw
fistpll
fcoms
fdivrl
push
or
sahf
fucomip
mov
data16
es
aam
outsl
stos
ljmp
xor
inc
add
xorb
cmp
mov
adc
test
inc
in
arpl
lcall
pop
frstor
xchg
adc
movsb
mov
and
lods
test
adc
int
fbstp
mov
loop
cli
push
loopne
fisubrs
pop
mov
adc
ss
call
cmp
dec
jg
mov
test
scas
call
jle
xor
pop
add
movsb
sar
push
xchg
stos
je
xlat
mov
pop
arpl
sub
mov
xor
sahf
test
mov
sbb
cmp
shr
aad
ja
loope
movsb
inc
cli
cmc
ret
pop
mov
mov
fidivrs
popf
inc
mov
icebp
push
dec
out
rcl
lret
bound
hlt
or
rcrb
fstpl
fnstsw
and
and
sub
sbb
into
ret
stos
es
les
stos
sub
mov
and
sbb
mov
in
xor
fstps
jg
bnd
adc
gs
mov
test
push
les
ret
int3
inc
xchg
insb
inc
cmpsl
out
xchg
sbb
or
cwtl
test
mov
pop
rcrl
pop
rol
nop
push
push
jae
loope
sbb
cmpsb
cmp
icebp
pushf
cmp
adc
mov
pop
mov
xchg
arpl
adc
dec
loope
test
mov
inc
pushf
lret
loope
push
push
daa
popa
jmp
aam
adc
pusha
sbb
inc
mov
add
xchg
imul
sti
clc
add
sbb
aam
insb
dec
fs
sbb
mov
xorl
call
lods
jecxz
dec
sub
sub
out
rcll
sarb
loopne
cmp
repnz
jp
dec
and
hlt
mov
mov
fidivrl
cs
inc
lea
nop
sbb
cmp
sub
sub
or
xor
xor
xor
test
test
xchg
adc
out
jbe
mov
mov
xor
mov
xor
insl
inc
inc
dec
push
pop
ret
push
cli
push
leave
test
sbb
cmpsl
xor
xlat
inc
test
cmpsl
sub
mov
cmc
xor
lea
ja
jbe
shr
cmp
js
imul
into
mov
jae
stc
shll
mov
mov
ret
xchg
int
hlt
push
pop
or
push
xchg
in
xor
nop
fcomps
add
jns
cmp
stc
mov
icebp
add
shl
push
and
jle
jne
or
movsl
fnstcw
mov
in
xchg
sub
add
ja
pop
jmp
stos
fsubrl
cmpsb
sbb
test
cmc
enter
out
mov
fdivrs
push
xchg
mov
aaa
xor
pushf
cwtl
or
mov
mov
push
jbe
cmpsl
js
hlt
test
add
movsb
arpl
clc
jmp
jp
movsb
rolb
mov
add
xor
push
mov
mov
shrl
lahf
faddl
mov
cmp
mov
mov
mov
aam
pushf
cmp
aaa
mov
cwtl
fwait
pop
push
hlt
cmp
or
mov
ret
and
add
inc
hlt
dec
aas
mov
jne
enter
pushf
rorb
ror
jmp
xchg
jge
or
mov
pop
pop
dec
cmp
insb
dec
jl
push
cmp
sbb
jge
jmp
cmp
jecxz
pop
xchg
inc
shlb
add
or
mov
fldenv
aaa
pop
xchg
push
or
sbb
test
insb
pop
mov
xorb
sub
fisttpl
adc
fstl
imul
xor
sbb
xchg
scas
lods
add
adc
lock
push
lds
or
lods
fidivs
stos
jne
jbe
pushf
jecxz
outsb
dec
jge
incl
lahf
sbb
mov
push
adc
xor
and
or
xchg
dec
add
sbb
mov
xchg
test
call
ja
mov
stc
jg
jge
cmp
pop
out
jecxz
push
icebp
adc
lret
outsl
scas
imul
inc
sahf
scas
xchg
xlat
test
fisubrs
adc
fidivs
xlat
xchg
ss
jb
fists
sahf
lret
arpl
xlat
cwtl
out
gs
jae
repz
and
push
faddl
adc
lahf
test
pop
mov
pop
outsl
cmp
into
xchg
cmp
dec
push
fisttps
clc
push
mov
lret
lods
inc
not
dec
testb
jo
pop
nop
fisttps
cmpl
repz
adc
fs
sbb
jmp
jns
mov
sbb
movsl
sbb
in
mov
inc
dec
xchg
repz
mov
dec
loop
xor
data16
repnz
rorb
and
adc
jp
lahf
mov
enter
insl
sarl
inc
je,pt
add
or
xchg
icebp
std
pop
dec
pushf
cmp
lock
int3
or
add
pop
push
jnp
fsubs
mull
popa
sbb
aas
in
test
sub
pusha
daa
addl
sub
addl
out
add
dec
cltd
std
pop
xchg
rcll
sbb
push
pop
push
aad
push
dec
push
mov
xor
loopne
cmp
aas
mov
pop
lret
jge
sub
movntq
cmp
test
jg
or
loope
test
mov
pop
mov
leave
ret
rol
xchg
outsl
shlb
xchg
in
and
fdivrl
xor
mov
fdivs
cmpsb
and
fwait
ja
and
mov
loopne
add
adcl
or
pop
xchg
out
pop
je
scas
mov
divb
xchg
pop
cli
rcll
lods
mov
push
negb
sbbb
jp
loop
loopne
jns
shlb
push
dec
daa
bound
test
outsl
into
call
mov
add
jno
jb
rol
adc
xchg
pop
sub
sbbl
imul
add
adc
test
jae
lret
sbb
add
mov
loop
inc
xchg
sub
sarb
cmp
test
xchg
outsl
fcomps
and
push
xor
mov
test
and
out
mov
insb
rcrl
out
sbb
cmp
xor
mov
lea
and
cli
mov
ftst
push
out
adc
dec
bt
sbb
jle
xlat
dec
int
and
jae
or
mov
cmp
pop
arpl
mov
sub
clc
jnp
lahf
daa
in
rcrl
mov
cmpsb
imul
ret
scas
icebp
ds
loope
inc
add
sub
fstl
pop
lea
test
idiv
add
shll
dec
in
dec
push
push
sub
dec
std
push
fldcw
ljmp
inc
int3
pop
iret
xor
pusha
cmp
mov
jmp
daa
and
mov
pop
inc
cmp
xchg
outsl
push
mov
mov
dec
mov
mov
mov
inc
loop
gs
rcl
scas
inc
sbb
sbb
orb
xchg
bound
sbb
aas
sub
js
insb
inc
mov
daa
les
xchg
jnp
addl
nop
test
cmpsl
icebp
fsubs
popf
stc
in
ret
nop
pop
pop
mov
mov
push
nop
mov
mov
sti
sub
stos
imul
fnsave
repz
cmp
insb
decl
pop
xor
mov
xchg
pop
stos
and
adc
maskmovq
negl
adc
call
mov
pop
xor
mov
push
sbb
mov
dec
int3
pusha
iret
gs
lret
fwait
mov
add
inc
rcrl
test
icebp
lahf
fildll
ja
sub
dec
sbb
fs
clc
inc
adc
lcall
test
and
inc
sbb
inc
push
pop
push
data16
pop
gs
lcall
mov
loopne
sbb
popa
je
xlat
xor
cltd
fidivrs
imul
nop
into
dec
mull
movsl
addr16
sub
jbe
test
push
jle
or
and
cmp
cmp
imul
fwait
cmc
mov
pop
pushf
mov
into
mov
add
movsl
loopne
lds
pop
fildll
loop
test
pop
and
mov
rcrl
or
pop
mov
imul
cmp
add
and
ds
mov
dec
lcall
dec
addr16
outsb
xchg
adc
xchg
loop
mov
lods
adc
or
cmpb
pusha
xchg
pop
or
ja
movsl
ja
push
pop
int3
ret
or
pusha
je
push
bound
or
mov
push
fwait
xchg
mov
inc
cmpl
jg
xchg
cwtl
cmp
ss
pushf
or
roll
arpl
xor
inc
movsb
leave
cli
in
lahf
cld
lea
xor
xchg
gs
jb
loop
shll
mov
test
wbinvd
nop
xchg
jg
mov
int3
call
xorb
xor
shrb
dec
data16
rolb
jns
fs
clc
pop
push
nop
test
push
push
jl
lods
cmp
mov
test
mov
jl
xchg
test
cld
bound
scas
pushf
in
sub
cmp
or
jecxz
das
pop
sub
push
push
push
cltd
inc
jl
hlt
cmp
xchg
cmp
xor
inc
add
dec
and
lret
aam
stos
call
sbb
xchg
repnz
xchg
mov
int3
in
jbe
cmp
adc
es
aas
or
pusha
sub
sbb
mov
rorl
nop
fstps
inc
adc
aas
pushf
in
daa
and
xchg
inc
cmc
fsubrl
add
mov
adc
jmp
adc
inc
adc
xor
mov
pop
test
in
adc
mov
test
jecxz
mov
xor
jmp
inc
clc
mov
xchg
sbb
and
mov
sub
daa
push
push
inc
xor
idivb
cmp
xor
cwtl
xchg
cmpsl
dec
and
add
adc
mov
aaa
in
xchg
adc
and
shl
inc
les
sti
xchg
popa
inc
sub
add
jo
es
gs
adc
jg
mov
and
negl
inc
stc
pop
adc
sub
adc
stos
shll
xor
pop
xor
ret
icebp
dec
mov
and
and
xlat
push
repz
sbb
mov
xchg
jmp
xchg
hlt
loopne
sbb
jo
mov
scas
cmpsb
cwtl
je
mov
dec
mull
cmp
sub
adc
add
in
loop
cwtl
and
xlat
das
and
incl
test
lea
sarb
inc
iret
cmpl
lock
adc
mov
sub
std
xchg
xor
inc
jb
and
ljmp
pop
xor
enter
xchg
adc
xchg
sbb
cmp
push
mov
dec
sbb
jecxz
mov
test
xchg
mov
rolb
dec
add
testb
or
xor
cmp
inc
sbb
dec
add
adc
dec
enter
mov
jae
xchg
xor
push
jns
adc
and
dec
dec
fsubs
and
jp
mov
mov
notb
push
sbb
dec
sbb
stc
cli
mov
shlb
pop
mov
movsb
adc
pop
adcb
push
jg
mov
inc
repnz
insb
mov
mov
jge
xchg
mov
xchg
jno
sbb
xchg
sbb
mov
pop
enter
insb
ljmp
xor
ds
jb
popf
add
int
jg
lds
or
mov
and
scas
cmp
xchg
inc
jg
int
sub
lret
sub
mov
cmc
or
add
dec
addl
push
pop
data16
std
mov
dec
jne
cmc
and
mov
nop
mov
jne
outsl
fisttpl
ja
popa
cld
popf
mov
add
mov
inc
inc
or
and
xchg
mov
nop
cltd
lods
sbb
xchg
lds
fists
repz
inc
cltd
jae
cli
push
lods
xchg
cmc
or
and
faddl
leave
les
movsb
adc
jbe
rorl
and
sub
inc
aas
inc
ljmp
jno
repnz
mov
dec
sub
inc
aas
adc
jbe
into
movl
sub
hlt
mov
dec
add
ret
shl
cmp
sbb
jae
loop
pushw
xchg
add
dec
lret
mov
xchg
jnp
ss
out
cltd
sarl
xchg
dec
or
int3
mov
pop
stc
or
jb
jne
loope
loope
inc
or
cmpsb
pop
xchg
insb
pushl
xor
or
js
add
pop
xchg
jo
push
popa
mov
cmpsb
loop
arpl
push
out
fcom
jo
int
inc
jae
adc
cmp
lahf
or
ss
mov
loop
xchg
movsb
mov
mov
shrb
lahf
and
mov
adc
aad
fists
shl
in
adc
inc
jnp
test
mov
es
inc
mov
int
hlt
movsl
sti
int3
or
or
xor
shrl
dec
jno
xor
jg
imul
out
rolb
sbb
xor
incb
mov
test
rcrb
dec
mov
daa
cmp
aad
sbb
movsl
cmp
loope
jp
mov
cmp
mov
jae
lods
lret
aas
or
cld
fldl
pop
inc
mov
lods
mov
mov
jo
aam
cwtl
jns
mov
xchg
push
or
jp
mov
scas
adc
lds
adcl
movsb
jg
push
aam
jns
iret
jp
lcall
adc
in
mov
jb
leave
dec
sbb
mov
mov
xlat
or
cld
xchg
gs
pop
addr16
iret
leave
add
adc
adc
ret
dec
mov
sub
scas
aas
jne
mov
cmp
cli
cmp
cmp
add
shlb
inc
std
mov
xor
sub
mov
sbbl
push
pop
dec
mov
push
mov
out
out
rcr
bound
aam
xchg
jg
loop
or
scas
loope
inc
bnd
adc
dec
movsl
xor
pop
ret
test
scas
fisubrs
icebp
push
test
dec
outsl
sub
inc
gs
or
int3
ja
jp
xlat
loope
jl
mov
subl
jne
outsl
jecxz
movsb
out
pop
xchg
jbe
mov
mov
lea
fstpt
mov
jmp
imul
int3
and
jbe
dec
mov
mov
ret
lret
jp
repnz
adcl
in
mov
dec
pop
data16
iret
test
ret
mov
rcrb
in
dec
pusha
dec
dec
mov
dec
fiadds
mov
add
jae
push
sbb
inc
loope
sbb
mov
mov
jp
or
jo
mov
shl
pop
sbb
push
mov
lret
je
jg
or
sti
fcmovbe
out
sbb
xchg
xor
imul
shlb
lret
imul
xchg
xchg
std
xchg
jb
mov
shr
pusha
xchg
pop
and
pop
stos
insl
lret
jnp
sar
jg
arpl
and
outsl
sub
sti
das
insb
iret
push
inc
shlb
cli
movsb
cwtl
mov
loop
test
fcmovnu
cwtl
pop
in
sub
add
cmp
and
or
push
add
adc
testl
cwtl
push
bound
jne
repnz
jo
ficoml
xor
inc
mov
inc
in
stos
fbstp
lret
jecxz
les
sbb
test
mov
int
repnz
xchg
stos
ret
aas
and
test
jno
pop
mov
loop
jecxz
push
sub
fldcw
jle
mov
sub
pop
ja
lds
test
pop
enter
and
jne
lods
rcr
push
cmp
cmp
lahf
fsubrs
mov
enter
dec
stos
ffree
out
popf
mov
out
adc
xor
lret
sahf
jp
cmp
cmp
xor
jnp
pop
jle
push
push
popa
pop
sbb
mov
popa
push
aas
dec
mov
xchg
stc
mov
fxtract
mov
mov
xchg
mov
bound
paddd
mov
jns
xor
xchg
mov
dec
mov
inc
lahf
cmc
movsb
int
and
inc
rcrb
clc
dec
cwtl
cmpsl
ljmp
clc
cli
pop
out
sub
cmc
xor
push
cmpsl
mov
xchg
xor
in
subb
faddl
mov
addr16
or
in
mov
push
add
xlat
sbb
pushf
aaa
xchg
into
dec
inc
xchg
je
nopl
push
jmp
sbb
lret
sbb
mov
pusha
leave
mov
inc
bound
sub
cmp
in
les
mov
repz
fbstp
mov
push
ss
cli
roll
arpl
ljmp
lea
xor
xor
add
dec
repnz
ror
out
aaa
lret
push
leave
inc
scas
imul
add
mov
sti
xor
ss
cmp
pop
aas
dec
mov
leave
neg
push
jno
and
jnp
aad
and
jp
addr16
pop
xor
jnp
mov
repz
mov
dec
push
mov
repz
es
push
loopne
mov
mov
pop
mov
rcll
or
add
xchg
push
cwtl
xor
mul
xchg
cltd
adc
aas
arpl
sahf
jnp
out
testl
aas
out
pop
out
and
inc
or
jp
sbb
ja
notb
sti
repnz
outsb
sbb
inc
mov
int
mov
mov
dec
push
sub
pop
mov
mov
sahf
pop
loope
push
popa
bound
ret
add
dec
and
subb
jge,pn
inc
stos
xlat
sub
adc
or
pop
popa
adc
das
jns
leave
mov
aaa
lret
mov
pop
cli
mov
push
xchg
lret
cmp
sbb
icebp
mov
sbb
cmp
xor
loop
sub
ds
test
jmp
mov
pushl
xchg
outsl
jmp
lds
lds
call
popf
iret
xor
arpl
pop
outsb
jns
sahf
repz
mov
int3
sbb
mov
xor
dec
out
jae
adc
mov
and
pop
shrb
bound
movsb
faddl
fimull
and
das
cmp
in
std
pop
push
push
pop
std
mov
push
jb
stc
movsl
pusha
rolb
enter
jecxz
or
adc
push
mov
mov
lahf
ss
movsl
mov
enter
jmp
push
pop
lahf
loop
aas
ficompl
dec
arpl
and
movsb
in
cmp
mov
add
rolb
xlat
arpl
inc
sub
testb
adc
adc
jmp
out
rcrb
out
dec
or
xor
aaa
fldcw
movsl
jo
daa
dec
jo
test
cmp
mov
add
adc
ret
or
lock
imul
pop
xchg
jbe
lock
mov
pop
subb
repnz
in
ja
mov
filds
mov
test
mov
pop
ljmp
fs
cmpsb
leave
testb
cmp
pop
cs
adc
xchg
add
inc
adcb
addb
dec
ds
shlb
xor
in
adc
sub
mov
into
jae
jmp
test
push
add
sub
out
in
test
sti
mov
inc
sub
stos
rorb
test
mov
adc
cltd
loope
jne
sbb
sub
imul
mov
mov
mov
fsubl
fs
popa
jge
scas
dec
adc
jle
scas
daa
clc
in
add
sub
mov
or
pop
jmp
and
cmp
xchg
xlat
enter
adc
sub
add
aad
mov
xor
sub
xor
xchg
pushf
sub
xchg
mov
mov
dec
jo
sub
inc
sbb
adc
push
test
popa
push
insb
insb
sbb
fildl
jp
inc
sbbl
push
push
jle
dec
xchg
mov
dec
insb
pop
mov
pop
mov
lcall
add
or
and
adc
jecxz
in
divl
stc
movsl
repz
js
sbb
xchg
add
arpl
movsb
loopne
out
mov
ja
clc
pop
sub
dec
outsl
mov
push
dec
mov
in
jg
lcall
mov
fbld
popa
lea
ljmp
addr16
dec
test
stos
adc
jl
movsl
add
push
and
mov
jl
xchg
imul
add
imul
rcrl
mov
fisubrs
xchg
rorl
testb
lock
xorl
mov
jb
mov
loop
push
xchg
loop
sahf
sbb
cmp
sub
lcall
leave
arpl
subb
pushf
sbb
or
cmp
jns
scas
push
inc
aaa
jl
xchg
jns
jl
subb
popa
sub
pop
shll
inc
test
xor
xchg
push
inc
sbb
loop
pop
pop
push
jmp
lea
jmp
aam
mov
ret
adc
movsb
stos
sub
inc
mov
push
mov
pusha
icebp
lret
sbb
pop
sub
sbb
pop
out
jnp
or
mov
cmpsb
adc
outsl
dec
out
lods
imul
iret
jmp
adc
sahf
sbb
insb
scas
jbe
sbb
add
jns
adc
das
int3
add
dec
std
adc
les
inc
xchg
fidivs
dec
mov
movsb
mov
movsl
call
rcrl
test
inc
psrld
adc
adc
lea
xchg
inc
jg
lods
xor
lret
cli
fidivs
andl
subb
das
inc
inc
xchg
in
jmp
cwtl
and
sub
push
pushf
nop
jae
mov
sbb
fs
add
cwtl
push
icebp
cmpsl
xor
xor
dec
call
xchg
dec
popf
cltd
inc
or
arpl
test
mov
scas
sbb
ja
inc
or
ja
dec
xchg
cmpsl
bound
popf
sub
mov
mov
inc
mov
fwait
and
mov
mov
add
xchg
insb
mov
bound
testb
ret
and
rcrb
sub
int
xchg
fbld
jle
ss
fldt
xor
cs
out
mov
hlt
add
mov
pop
and
mov
aas
mov
fucomp
lds
jns
and
push
jae
movsb
movsl
pop
pop
lds
mov
and
scas
cmp
enter
mov
xor
sarl
subb
rep
xor
clc
sub
add
add
in
cmp
mov
leave
adc
mov
jae
pop
fnsave
or
aas
xchg
int3
xor
pop
mov
andl
push
add
mov
loop
nop
or
pop
sbb
mov
test
in
push
scas
shlb
sbb
lea
jl
xchg
scas
out
pusha
incb
shlb
stos
push
popa
pusha
pop
dec
or
cmp
pop
xorl
jo
push
inc
ret
lock
insb
shll
adc
jmp
in
and
dec
and
pop
jnp
pop
iret
mov
faddl
roll
lcall
stc
out
fsubs
mov
jnp
test
out
inc
loope
sub
ret
loop
jb
sub
mov
std
cmpsb
repnz
lcall
int
xchg
sti
pop
pop
xor
xor
inc
mov
je
xor
mov
jmp
cld
sub
fdivr
insl
adc
xchg
dec
add
and
scas
pop
jmp
and
xor
jp
push
cmp
adc
mov
pop
xlat
dec
cmp
pop
test
cmp
sub
inc
xchg
sub
jge
mov
shrb
pushf
xchg
movsb
sbb
xchg
jae
mov
push
xor
test
lods
cmp
pop
sbb
jp
in
pop
lcall
std
mov
jbe
xchg
cmp
sarl
mov
stos
lret
fs
dec
push
push
enter
scas
movl
mov
push
xor
xor
xor
ret
push
cwtl
dec
adc
push
loope
push
subl
add
or
or
jb
int
js
inc
out
sub
mov
dec
imul
pop
shrl
loop
in
imul
pop
sbb
mov
push
insl
mov
call
cmp
jno
cmp
add
inc
push
jnp
push
pop
xor
lds
jge
iret
xlat
in
sub
out
das
lock
ror
cli
and
rcrb
cmp
cmc
movsb
pushf
lret
pop
dec
pusha
divl
aam
adc
stos
sbb
inc
ljmp
jb
call
push
inc
aad
stos
cmpsl
inc
sarb
subb
xchg
imul
pusha
in
xlat
ret
xchg
into
jmp
add
test
jle
in
jno
jmp
clc
mov
adc
adc
dec
lock
dec
adc
mov
mov
pop
int
dec
rcrb
stc
mov
movsl
mov
fiaddl
mov
sbb
xchg
add
xchg
pop
mov
mov
mov
jns
stc
mov
or
scas
push
mov
cltd
or
or
mov
mov
ss
ss
dec
push
and
dec
enter
cs
and
xchg
xor
pop
mov
pextrw
aad
adc
or
mov
mov
out
fstpt
fdivp
mov
pop
movsl
cmp
pop
fucomp
xchg
leave
mov
test
dec
sub
or
dec
daa
jp
adc
add
divl
outsb
subl
cmpsb
addr16
jmp
sub
pop
pusha
sti
mov
mov
cmp
xchg
jo
iret
cmp
push
lods
mov
adc
into
lea
in
addr16
addr16
js
shrb
clc
dec
mov
mov
dec
xor
push
std
stc
jae
cld
enter
jo
cmpb
das
inc
xchg
dec
mov
jmp
das
sbb
jno
rorl
test
imul
mov
ret
xor
xchg
inc
sub
mov
stc
jge
add
mov
ret
add
mov
push
dec
push
dec
lret
popa
dec
orl
js
mov
mov
aad
fists
ret
or
cmc
movsl
and
or
inc
push
cwtl
insb
sub
jmp
mov
xchg
daa
lret
push
mov
jp
inc
inc
add
scas
adc
testb
das
orb
outsb
mov
dec
push
add
fwait
mov
add
and
lds
sub
shlb
cmp
xchg
inc
mov
filds
stc
in
stos
lret
out
xchg
lea
out
inc
ret
cmpb
jo
mov
movsb
mov
lock
stos
pcmpeqd
subl
subl
lret
add
cld
lods
std
jae
test
pushf
dec
sti
xor
std
test
imul
test
xor
add
outsl
cwtl
addb
mov
jo
sbb
addr16
mov
adc
push
mov
insb
mov
mov
add
add
xor
jae
adc
adc
clc
pminub
repz
aam
mov
nop
sahf
mov
adc
lcall
insb
in
lahf
arpl
stc
je
dec
xor
cwtl
std
in
xlat
in
js
dec
pop
addr16
dec
jae
pop
movsl
pop
jb
jle
int
scas
jg
fwait
lock
xchg
out
sbb
cmp
mov
loopne
xchg
in
shll
aas
sbb
mov
dec
aad
adc
jno
inc
ljmp
jo
add
sbb
and
arpl
aad
push
bound
fists
decb
lret
pop
adc
xchg
jle
or
push
int
mov
rolb
pop
ds
pop
icebp
pop
dec
adc
pop
popa
fs
repz
out
push
cmpsb
xor
mov
xlat
outsl
mov
arpl
lods
je
scas
jecxz
jmp
cmp
dec
enter
xchg
into
sub
xor
int3
xor
mov
iret
ds
in
adc
divl
inc
cmpsb
rorl
sbb
xorb
cld
cmp
les
loopne
sbb
mov
aas
jbe
cmp
jnp
ret
in
pop
ret
jge
inc
test
inc
ds
sahf
adc
pop
fisttps
ror
scas
int
dec
pop
dec
pop
enter
add
push
pop
icebp
nop
dec
addr16
push
mov
adc
pop
sub
mov
jb
add
sub
dec
aad
pop
pop
sti
dec
xchg
dec
pop
dec
inc
sub
xchg
xchg
and
jge
ds
sbb
mov
clc
dec
in
test
iret
insb
int
neg
xorl
xchg
test
pop
sub
roll
inc
shll
lods
ja
xor
mov
js
outsl
in
jecxz
mov
push
push
mov
inc
sub
mov
add
fisttps
andb
out
mov
sarl
out
jmp
outsb
mov
mov
dec
popf
cmpsb
sub
mov
testl
jno
push
xor
lret
iret
dec
icebp
mov
cli
call
mov
call
adc
xchg
stos
pop
nop
mov
mov
cltd
and
std
cmpsb
xor
xor
pop
loope
imul
les
xlat
in
lret
in
das
cmp
jne
in
jmp
mov
push
xlat
jp
rcl
out
das
xor
shl
iretw
in
imul
mov
push
push
incb
xor
js
cwtl
in
lret
jae
or
loope
jo
sar
je
stc
movsl
mov
sti
jmp
stos
cs
mov
cmp
insb
mov
mov
sbb
cmpsb
filds
roll
jle
movsb
cltd
ficomps
outsb
cmp
sub
addr16
add
call
push
pop
sbb
mov
xor
lea
cwtl
iret
pop
add
daa
mov
mov
ret
or
dec
aad
pop
dec
in
into
in
mov
or
in
push
or
outsl
fdivp
shrl
popa
mov
test
dec
out
pop
sbb
jb
dec
shll
push
wrmsr
imul
xor
imul
cmpsl
std
add
xchg
pop
cli
sahf
scas
enter
inc
mov
in
and
mov
inc
ja
inc
sbb
rolb
sbb
jg
sub
pushf
iret
cld
lods
icebp
insb
ficoms
and
dec
xchg
pop
push
in
jmp
jg
mov
pop
xchg
cli
andl
shll
int3
jle
xor
lock
or
xor
dec
aam
loope
leave
cmpsb
push
rcr
mov
scas
imul
lret
mov
cmp
clc
adc
jae
jne
jne
mov
sti
js
sbbb
cmp
dec
pushf
es
repz
add
xor
jae
mov
and
fnsave
dec
sub
clc
fwait
jge
pop
push
into
jns
add
fs
ret
xchg
jge
sbb
inc
xchg
incl
aas
jbe
xchg
insl
out
rcrl
sbb
mov
adc
adc
enter
lret
push
jmp
cmpsl
and
xchg
pop
loope
xor
pop
push
lds
filds
jb
pop
lods
jo
into
clc
xchg
rol
mov
scas
inc
shl
insl
pop
jns
sbb
int
mov
int3
rcll
jl
cltd
lock
ret
testb
mov
pop
mov
scas
inc
mov
ljmp
adc
in
dec
pusha
mov
test
in
push
gs
jmp
jno
repz
mov
enter
clc
scas
or
and
mov
mov
in
push
out
mov
push
cmp
roll
pushf
dec
pop
pop
and
test
iret
lahf
hlt
addr16
mov
add
mov
lods
xorb
mov
mov
outsb
ja
mov
lods
mov
lret
xchg
cmpsb
adc
xchg
repnz
cli
leave
jmp
dec
xor
or
xchg
ret
xchg
mov
scas
push
mov
push
inc
dec
mull
movsl
ds
jbe
pop
out
ret
aad
inc
sahf
xchg
in
test
rcll
call
push
sbb
ja
and
mov
cmp
mov
aaa
outsb
in
in
or
pop
add
dec
pop
aad
addr16
push
jb
jo
stc
sahf
cmp
jnp
pop
jp
jno
stos
das
xor
push
sysret
mov
fs
push
outsb
leave
xchg
jmp
inc
shll
mov
add
mov
xor
mov
mov
sub
decl
repz
das
nop
cmc
cmp
repnz
dec
cld
adc
enter
mov
mov
mov
pushl
mov
stos
push
popa
insb
push
jne
stos
mov
push
hlt
adc
pop
or
lahf
out
cli
adc
xchg
push
clc
mov
add
xor
ljmp
push
pusha
mov
jl
stc
xchg
xchg
add
test
out
push
xor
pop
xchg
dec
jbe
pop
inc
xchg
mov
sub
mov
scas
cld
sahf
subb
lods
cs
std
inc
add
xchg
pop
mov
lods
jo
mov
push
int
mov
fisttpll
shll
cmpsb
pop
mov
insl
add
or
ficoms
xchg
add
cmp
rolb
or
mov
pop
das
test
xchg
stos
lret
cmp
xchg
add
push
push
and
fiaddl
jo
pop
mov
imul
mov
fdivrs
inc
cmp
xchg
mov
aad
xor
mov
mov
dec
inc
daa
fcmove
icebp
aam
and
or
std
lea
xchg
push
in
lcall
scas
pop
xor
push
in
sbb
aaa
pop
sub
fucomip
arpl
bound
add
out
movsb
add
push
push
int3
out
test
inc
movsl
in
test
ret
int3
cld
inc
inc
sub
outsl
inc
filds
movsb
ret
mov
ja
jbe
lahf
cs
mov
fists
mov
je
jge
push
xlat
les
cmc
sub
movsb
movsl
mov
jne
iret
sub
rcl
sbb
repnz
jo
ss
dec
pop
pop
mov
in
dec
mov
std
stc
cmpsb
popa
ss
mov
pop
sub
into
cmp
jle
xor
lock
call
pop
pushf
vandps
jp
sub
mov
pop
pop
pop
lods
mov
dec
testl
adcl
dec
mov
inc
sub
sub
loopne
cld
inc
xlat
mov
pusha
mov
data16
dec
jle
sbb
fcomp
adc
mov
xor
lds
push
push
dec
push
lock
adc
xor
pop
mov
add
pop
fs
pop
outsl
inc
rclb
pop
adc
push
pusha
sar
xchg
pop
mov
ss
cli
mov
lcall
sub
xchg
aaa
repnz
out
sbb
out
aaa
mov
shrl
dec
mov
hlt
inc
ss
jecxz
sbb
mov
inc
fs
adc
test
dec
or
and
adc
je
repz
jne
test
jg
adc
ds
mov
ds
inc
lds
or
lahf
adc
xor
sti
push
bound
push
in
bound
pop
mov
mov
adc
cmp
enter
xchg
fsubs
adc
jl
fstl
fsubrs
aas
scas
jle
das
divb
dec
lcall
lea
sub
fs
jmp
mul
clc
mov
loopne
or
ret
pop
test
or
xlat
leave
es
scas
lahf
mov
lea
cltd
enter
jbe
ret
arpl
mov
shrl
mov
aas
dec
movsb
and
in
outsb
int3
jae
fwait
aam
outsl
in
std
or
pop
inc
or
push
push
outsl
das
imul
sti
dec
in
dec
out
cmp
out
cmp
in
cmpb
mov
sbb
push
add
pop
or
rcrl
lahf
int3
push
sub
pop
adc
out
mov
in
jecxz
jg
out
xchg
pop
and
aaa
push
lahf
bound
sahf
sbb
repnz
mov
fnsave
pop
das
jb
mov
scas
mov
cld
mov
insl
push
jne
cltd
aas
jmp
mov
mov
pop
loopne
insb
dec
movsb
push
or
jg
or
xlat
fwait
jnp
sbb
pusha
test
insl
pusha
aad
popf
dec
sbb
dec
lahf
add
adc
inc
fidivrl
pop
sub
pop
das
adc
mov
out
fcmovnu
pop
in
je
mov
xor
adc
sbb
mov
or
sub
mov
xchg
or
push
out
shll
jp
inc
and
je
sub
mov
int3
dec
mov
cmovns
dec
lret
push
shlb
xchg
hlt
add
sub
mov
mov
addr16
filds
xlat
cmp
push
imul
lahf
movsb
and
lcall
cmp
lock
mov
inc
lret
pop
push
dec
xor
push
mov
or
fs
shr
stc
add
jle
lret
jb
or
int
adcb
mov
or
mov
push
sti
insb
adc
cmp
xchg
xchg
mov
push
pop
gs
adc
and
mov
sub
in
insb
inc
push
dec
pop
add
enter
pop
or
dec
pop
mov
dec
clc
in
or
sbb
rolb
pusha
sbb
fwait
rcrb
adc
pusha
mov
push
and
jnp
xchg
shll
mov
test
or
mov
xchg
enter
mov
fdivrl
sbb
into
lds
loope
push
popf
test
push
adc
loope
test
daa
push
pop
fmuls
in
test
add
push
inc
ret
je
jp
mov
jno
dec
pop
cld
add
jl
xchg
stc
pop
and
xchg
sub
movsb
lret
mov
sarb
cld
xchg
mov
fwait
jge
es
call
je
ss
inc
cmp
xor
and
pop
out
lock
jnp
hlt
out
wrmsr
mov
pop
jbe
or
dec
je
push
movsl
sbbl
imul
xor
sbb
leave
sub
pop
inc
neg
xor
dec
mov
and
fs
lcall
dec
icebp
mov
push
enter
xchg
jae
add
xchg
push
out
test
faddp
lcall
mov
pop
sub
mov
add
sti
jb
pop
lret
subb
xor
iret
orb
sub
xlat
jns
fbstp
mov
mov
jo
add
aas
sbb
mov
jle
iret
mov
addl
nop
push
mov
sub
mov
jmp
cld
scas
sbb
push
push
adc
jecxz
add
xor
pop
movsl
push
push
ficomps
push
ljmp
add
je
les
cmp
xchg
mov
notb
cmp
adc
mov
jmp
sub
sub
jns
shrl
pop
ficomps
and
jmp
and
pusha
test
adc
jmpw
in
jns
mov
mov
sbb
jae,pt
inc
repnz
xchg
jno
bound
lods
sub
outsl
pop
scas
cli
ret
outsb
add
pop
daa
xlat
cltd
clc
pop
mov
andl
fldcw
xchg
lahf
adcl
push
jb
pop
out
pop
add
xchg
popf
dec
es
and
mov
int
fs
stc
aam
das
jp
lcall
fcoml
inc
cmpsb
jo
dec
xchg
or
xchg
xchg
icebp
inc
xchg
adc
xor
mov
fwait
cmpsb
stos
scas
lds
imul
xor
incl
inc
mov
lods
lret
jg
repnz
popa
xchg
jnp
lock
aaa
xchg
pop
popa
arpl
push
cmc
outsb
movsb
xchg
or
pop
sbb
mov
sti
push
xor
pusha
jecxz
fidivl
test
push
and
pop
mov
xchg
mov
pop
shlb
adc
sahf
stos
inc
jge
fistl
xchg
mov
movsl
add
sub
jle
dec
sbb
mov
flds
or
divl
pop
jmp
cltd
jmp
mov
lahf
fmulp
push
dec
lea
fnstsw
push
daa
push
daa
out
and
ret
sub
xchg
daa
lock
hlt
add
imul
retw
push
and
test
sub
insb
jo
push
fidivrs
cli
cwtl
push
call
gs
sub
sbb
je
xchg
sub
test
in
mov
inc
and
adc
outsb
sub
iret
cli
jg
mov
push
mov
ljmp
in
mov
cmc
leave
mov
push
inc
fdivrs
or
mov
pusha
sub
mov
loopne
mov
dec
in
dec
in
cmp
fsts
and
inc
adc
mov
xchg
xor
cmpsb
push
fisubrs
fimuls
xchg
jl
fstps
mov
adc
fadds
insb
outsl
dec
push
push
and
xor
xchg
fisubrs
lock
cwtl
jg
nop
rorb
mov
sbbl
outsl
adc
test
lcall
mov
loopne
push
xchg
rol
pop
test
lret
inc
dec
pop
mov
push
sub
pop
mov
shll
hlt
outsl
mov
ds
push
pop
lds
mov
fwait
and
push
nop
test
or
pop
jge
inc
lea
mov
add
repnz
in
inc
push
cmp
push
ret
mov
jnp
xlat
pushf
lds
in
lds
fdivl
mov
std
or
lds
or
mov
mov
testl
pop
and
push
mov
test
push
mov
popf
adc
idivb
adc
xchg
inc
mov
pop
das
lods
sub
adc
mov
loope
sbb
push
out
adc
jbe
sti
outsl
pop
movsb
or
aaa
bound
mov
stos
loope
mov
push
push
sub
std
and
lahf
xchg
repz
xor
add
jnp
dec
andl
mov
xor
mov
fs
and
sub
inc
mov
lret
ja
pop
push
push
mov
mov
cwtl
push
xchg
popf
inc
xchg
aad
jl
sub
pop
xor
lret
data16
and
inc
lret
or
fisttpll
in
push
sbb
mov
es
fs
pop
dec
jmp
cmpsl
insl
aaa
test
xor
movhps
insb
icebp
fisubrl
rcrb
xor
inc
jb
gs
adc
ret
sbb
scas
rcll
jae
mov
or
fbstp
cmp
in
jl
jns
testl
pusha
mov
scas
adc
pop
jbe
inc
movsl
mov
push
std
iret
and
test
fdivrl
mov
test
fisubrs
adc
cld
dec
mov
jmp
pop
js
stc
nop
cld
stos
rep
mov
and
mov
cmpsl
jae
push
test
ficoms
cmpsl
xor
es
jmp
mov
bound
daa
mov
jo
testb
aam
adc
in
cmpsl
ljmp
test
mov
pop
shr
into
pop
dec
mov
push
push
imul
mov
mov
icebp
std
or
loopne
pop
stc
xchg
jg
popl
mov
or
sbb
data16
js
adc
gs
imul
loope
xchg
xor
jne
cld
popa
repnz
insb
jo
cs
sub
out
mov
inc
int3
cmpsb
mov
mov
xchg
out
std
mov
mov
xor
imul
cmp
in
jns
adc
imul
xor
gs
or
xchg
call
test
ret
out
mov
out
mov
sbb
rclb
hlt
push
test
xor
subl
fimull
subl
jb
popf
repnz
sub
inc
popa
cld
fildll
and
and
and
mov
xchg
or
xor
cmp
sbb
mov
jecxz
push
lcall
inc
add
mov
and
or
xor
dec
inc
sbb
dec
push
xor
call
xchg
cmp
pushf
adc
scas
mov
xchg
mov
lea
or
jno
or
dec
adc
and
xlat
sub
stc
sub
pop
jae
into
add
sub
imul
sti
stc
sbb
mov
movsb
xchg
into
popa
pcmpeqd
or
inc
jne
repz
inc
rorl
xlat
ljmp
inc
pop
scas
outsb
icebp
mov
push
and
idivl
jecxz
or
outsb
cmp
mov
lcall
xor
mov
jbe
jle
jmp
mov
lcall
mov
xchg
lcall
aad
xchg
xchg
fsts
mov
xor
int
adc
loop
sbb
cld
or
mov
lahf
imul
je
jo
daa
pop
scas
sub
mov
shlb
cmp
push
xchg
into
push
subb
imul
dec
pop
shll
test
push
ds
jae
pop
push
lahf
add
mov
rcrl
insl
dec
mov
inc
in
xchg
aad
stos
or
mov
jb
sub
inc
out
cmp
ficoms
ficoml
dec
or
inc
out
dec
mov
lds
adc
mov
gs
and
add
sbb
mov
mov
popf
push
lahf
lock
test
jmp
aas
cmp
and
add
xlat
nop
add
lret
jo
popl
jne
xlat
shrl
sub
push
rolb
popf
jecxz
dec
scas
sbb
movhps
cltd
mov
jns
test
shlb
pop
or
imul
xchg
inc
pop
in
xchg
mov
xorb
repz
cli
push
sahf
pusha
mov
inc
les
mov
pop
push
xchg
sahf
sbb
dec
in
xor
addr16
shr
fnstsw
stos
je
pop
stos
or
jo
scas
fs
mov
xchg
into
cmpsl
data16
leave
push
xchg
jns
lds
dec
push
in
mov
add
pop
in
dec
cmp
or
sbbb
iret
xorb
mov
call
pop
lds
insl
aaa
repnz
lahf
mov
push
negl
jg
pushf
pop
adc
add
jg
inc
lock
or
lahf
sub
pop
dec
fimuls
cmp
sub
stos
filds
jne
push
sbb
sbb
movsbl
les
fbld
hlt
jge
xlat
hlt
ret
push
fisubl
xchg
jb
sbb
mov
push
mov
movsb
lret
insb
in
pop
mov
xchg
mov
sar
stc
or
adc
sub
pushf
sbb
add
push
cmp
out
inc
push
shl
jo
cmp
pop
mov
out
cmp
jno
dec
push
shrb
adc
shrb
shrb
pop
jmp
xor
xor
test
lods
or
push
sub
xchg
mov
icebp
in
cltd
xor
jo
cmp
sbb
out
or
inc
cld
xchg
pop
add
add
stos
push
outsb
jno
ret
adc
clc
push
xchg
add
lods
out
std
ljmp
add
test
mov
fisubrs
mov
inc
inc
add
or
mov
mov
lods
ret
xor
movsl
iret
xchg
push
or
dec
add
and
or
clc
insl
or
scas
dec
pop
repnz
mov
scas
mov
or
or
icebp
cmp
sbb
sub
mov
mov
mov
mov
adc
lahf
aad
test
inc
inc
outsl
add
mov
ds
stos
lret
inc
clc
jo
add
jns
data16
arpl
out
mov
xchg
loop
dec
int
stc
jge
push
idiv
dec
add
aas
mov
fsubrl
dec
into
inc
push
adc
add
repz
add
test
test
in
test
sub
roll
sub
push
bound
xor
add
loope
in
push
dec
and
cmp
push
daa
jae
xchg
adc
jb
xchg
jle
sub
xchg
jp
fs
int
pop
std
test
sbb
ret
jl
push
roll
pusha
lahf
xor
and
enter
mov
sbb
inc
arpl
cmp
addl
pop
push
in
gs
mov
xchg
enter
sbb
xchg
loop
test
jno
mov
jb
into
stc
aaa
test
push
test
adc
jg
sbb
cs
mov
imul
out
adc
popf
aas
rorb
jle
jb
xor
cmp
imul
pusha
in
sahf
push
adc
shrb
rcrl
shl
xchg
sbb
out
add
mov
cmp
mov
mov
vmwrite
insb
add
inc
leave
outsb
pop
cmpb
sub
sbb
xor
push
inc
inc
cmp
mov
loopne
sub
pop
test
mov
jo
cmp
scas
mov
dec
adc
pop
xchg
gs
push
aas
test
and
xchg
repz
inc
out
cmpsb
ret
inc
xchg
dec
pop
in
lret
popa
add
enter
wbinvd
mov
loopne
cmpsl
sub
sbb
fimull
cmc
icebp
roll
mov
mov
bound
lahf
mov
and
in
int3
stos
add
cltd
in
xchg
ljmp
dec
sub
int3
push
inc
push
aas
arpl
mov
push
dec
fsubs
jae
pop
mov
push
jne
cmp
cltd
ret
movsl
dec
jae
xor
fstpt
fisubrs
subb
insl
int
push
ljmp
pushf
lret
pusha
dec
nop
and
mov
jl
daa
test
jbe
mov
or
stos
movsb
in
pushf
lea
daa
push
adc
orb
add
jne
out
pop
xor
cmpsl
add
lahf
test
inc
call
pop
mov
cmpsb
push
fisttpl
jo
dec
jmp
clc
mov
inc
inc
adc
sub
imul
out
imul
mov
pop
dec
iret
repz
ss
mov
xchg
mov
shlb
cmpsb
pop
shlb
les
cmpsl
add
inc
xchg
jmp
sti
orl
nop
leave
inc
in
pop
addr16
imul
push
inc
dec
push
mov
je
lock
add
jnp
jb
jmp
or
jnp
add
sub
jne
push
jnp
mov
inc
sbb
mov
mov
adc
loope
xor
popf
mov
lock
push
mov
mov
xor
sbb
aas
aas
cmp
jae
movsb
jns
adc
das
push
cmp
in
cmpsl
sbb
mov
dec
pusha
pushf
mov
or
roll
stc
aas
sbb
cmp
mov
mov
fdivrs
popa
fsqrt
test
loop
sub
sbb
jo
add
cmp
push
cmp
std
xor
lods
paddq
pop
dec
test
les
js
adc
jo
push
dec
nop
fwait
xchg
rcrl
mov
pushf
fwait
je
out
outsl
scas
and
out
xchg
push
dec
sarb
nop
pop
jmp
ljmp
iret
sbb
sbb
add
xchg
sahf
mov
dec
stos
lret
sti
int3
pop
scas
out
mov
mov
ja
xchg
ds
int
dec
sbb
cmp
js
mov
pop
adc
xchg
es
loopne
pop
cmp
jle
xchg
mov
filds
nop
cmp
xchg
jnp
nop
dec
and
mov
stc
inc
xlat
xlat
je
and
loope
test
jbe
adc
stc
divb
daa
testl
lea
push
stc
out
push
xchg
add
xchg
sbb
adc
jns
fs
or
pop
cmpsl
inc
loopne
mov
add
jbe
bnd
sub
inc
lods
xor
in
es
adc
loope
adc
loopne
adc
repz
dec
lock
popa
sahf
test
mull
push
shr
in
scas
nop
mov
enter
mov
rorl
pop
or
test
inc
sub
mov
out
mov
sbb
cmc
mov
push
cld
add
js
jp
inc
and
sbb
cmp
jg
dec
mov
sbb
lods
xlat
mov
cmp
es
pop
loopw,pn
dec
adc
xchg
sub
fstpl
aaa
loope
pop
mov
sbb
ret
and
mov
movsl
add
sub
or
imul
je
xchg
jle
fs
sbb
loop
xor
xlat
pop
loop
lahf
jb
stos
mov
sbb
push
push
xchg
mov
iret
lret
cmpsl
inc
lods
cmp
push
mov
das
push
test
pushf
adc
stos
or
mov
shrl
scas
mov
cmp
and
loope
jb
mov
push
adc
push
pop
mov
add
pusha
add
insl
scas
xchg
enter
loopne
inc
xor
jnp
arpl
cmpl
setp
xchg
mov
jbe
mov
out
in
jo
push
adc
mov
pop
fisubs
dec
add
in
loop
adc
in
sub
test
movsl
xorb
sub
dec
out
dec
ljmp
je
or
xorl
incb
data16
cmp
xchg
mov
lahf
gs
xor
clc
mov
ja
sub
add
mov
mov
iret
sahf
jmp
int3
dec
repz
ja
xor
inc
adc
sbb
sahf
xchg
and
mov
inc
xchg
inc
sbb
xchg
mov
xlat
loop
lods
aaa
cwtl
pop
out
pop
aam
mov
cs
lcall
fdivrl
clc
sub
add
test
arpl
in
imul
iret
or
or
inc
mov
add
in
inc
pop
mov
sbb
xchg
mov
aaa
lea
dec
xor
mov
repz
jae
dec
in
push
es
mov
cmpsl
aas
arpl
mov
pop
add
fsubl
imul
adc
xchg
or
int3
push
push
or
push
dec
jl
dec
outsl
or
jl
push
ret
sti
push
mov
cwtl
adc
cli
mov
jle
lods
int
aaa
adc
xor
pusha
and
cmpsl
mov
idivl
out
pop
xchg
mov
jp
pop
scas
xor
push
mov
int3
jne
punpckhwd
lock
add
push
cmp
xchg
movsl
xchg
inc
sti
cmpsb
dec
cmp
jmp
pop
inc
inc
mov
inc
js
rorb
daa
insl
iret
jmp
or
push
js
fwait
outsl
cli
outsl
pop
dec
cli
test
fdivs
sti
sub
sub
ficoms
sbb
inc
insl
push
and
sti
pop
sbb
xchg
lods
test
adcb
mov
mov
arpl
lods
cmpsb
jl
in
mov
jg
sub
xchg
jge
jno
xor
aaa
mov
mov
pop
xchg
jbe
push
or
mov
daa
into
dec
insl
sahf
sbb
cs
outsb
data16
xchg
js
cmp
mov
ss
rorl
fidivrl
in
fcoml
pop
clc
pop
add
sbb
outsb
int
and
lret
stos
mov
in
adc
stos
mov
inc
mov
xor
or
loop
addr16
bound
xchg
push
lods
popf
push
push
mov
clc
lcall
or
inc
jmp
gs
inc
or
or
adc
and
pop
fcomi
pop
xor
xor
pop
in
mov
pop
fbld
shlb
int3
jae
sarl
inc
fs
test
push
stos
dec
int
fwait
dec
call
mov
repz
ja
notb
repz
sti
sbb
or
cmp
sahf
jne
cli
scas
jl
mov
lcall
adc
push
insl
popa
sbb
and
sub
mov
xchg
mov
stc
lds
lock
pop
mov
daa
subb
cmc
into
fistps
adc
cmp
cmpsl
xchg
test
orb
and
or
push
ss
ds
stos
adc
neg
mov
add
lock
push
jae
repnz
or
lcall
jae
jbe
push
test
sub
ficomps
dec
adc
das
lods
inc
xchg
jl
lea
lock
repz
sbb
add
jp
push
push
xchg
jbe
addr16
rcll
js
adc
stos
mov
cmovbe
test
jo
fmull
pusha
das
out
addl
mov
cwtl
pusha
aaa
shlb
pushf
loope
repz
sbb
mov
adc
sbb
jecxz
inc
inc
lret
pop
enter
adc
dec
jle,pn
jle
add
std
out
push
xor
xchg
add
cmc
and
jecxz
adcb
or
or
or
push
hlt
push
push
repz
mov
or
stos
fisubs
mov
sbb
inc
leave
ror
sub
or
jmp
mov
mov
and
push
fsub
and
dec
and
scas
pop
mov
inc
mov
lods
xchg
jnp
push
popa
pop
sbb
push
xor
enter
ret
mov
loop
inc
mov
add
sahf
cwtl
enter
mov
pop
cmp
or
mov
sub
xchg
dec
ss
data16
inc
mov
adc
hlt
add
test
mov
inc
das
mov
je
daa
imul
cmp
hlt
fiadds
mov
in
mov
cmpsl
out
sbb
fists
gs
adc
iret
xchg
pop
mov
lahf
ljmp
xor
loop
lahf
ja
jns
jns
fists
or
push
adc
jge
inc
sub
inc
jne
ss
out
rolb
mov
sahf
cmc
out
mov
mov
inc
sub
das
add
mov
sub
popa
sub
lock
xor
mov
xor
jae
pop
jmp
popf
adc
cld
pop
loop
jg
in
fdivrp
mov
or
mov
cwtl
adc
dec
in
add
test
inc
sbb
pop
cs
sbb
sub
lret
sbb
mov
or
and
lock
mov
adcb
ljmp
insb
loopne
mov
sub
sbb
into
xchg
cwtl
test
push
add
and
dec
mov
xor
stos
jno
pop
inc
leave
xorb
dec
aam
pusha
movsl
fwait
and
nop
push
cmpsb
out
sbb
push
xchg
xadd
inc
dec
ljmp
and
cmp
fadds
dec
pop
and
das
jbe
repz
jbe
movsl
or
addb
insl
sahf
ret
jge
aas
jne
ds
or
mov
out
mov
out
icebp
dec
les
pop
in
inc
dec
fisubs
mov
jg
xchg
addr16
pop
sbb
sbb
mov
mov
inc
rclb
pop
imul
jne
loop
in
negl
mov
sbb
std
cwtl
sbb
cmp
mov
imul
mov
inc
je
icebp
pop
and
mov
jbe
mov
popf
push
pop
pop
daa
or
cmp
sbb
sub
inc
aas
or
cwtl
jmp
mov
aas
leave
add
ja
mov
mov
mov
cld
xor
ja
pop
popf
pop
add
cmp
pavgw
sub
push
movsb
sbb
outsb
je
inc
in
aam
add
fwait
jge
fiaddl
bound
icebp
sub
dec
outsl
mov
jbe
lret
jne
mov
push
adc
aas
popf
dec
loope
and
fadd
pop
sbb
mov
and
jae
push
mov
dec
xlat
lret
loope
stc
dec
dec
ss
xchg
dec
arpl
imul
xchg
ret
and
mov
pop
insl
add
or
fdivl
mov
lods
mov
popl
pusha
jmp
fs
or
mov
and
decl
and
test
cmpsb
inc
lds
dec
rcl
test
shlb
push
jle
mov
shll
adc
mov
leave
inc
lods
inc
push
cmpsb
jnp
add
loope
mov
sbb
inc
jno
push
sbb
xchg
fucom
jo
aam
arpl
cwtl
mov
inc
jle
mov
pop
and
shlb
imul
divl
adc
ss
xchg
inc
int
xchg
adcl
fdivrs
mov
add
and
fisubrs
cmc
jl
outsl
push
cmp
repz
sub
xchg
or
movsl
stos
xor
push
sbb
sub
out
sbb
lds
or
push
push
aad
mov
fdivrl
cltd
jno
iret
ljmp
loopne
loopne
test
push
push
fnstcw
or
out
jbe
or
inc
int3
or
call
fiadds
mov
rclb
cmpsl
xchg
nop
mov
negl
push
call
jp
jnp
push
cli
jne
rclb
cltd
cli
dec
loope
sbbb
jno
repz
or
lret
cmp
pop
or
lcall
out
insl
sbb
pop
and
sbb
out
out
cld
cld
cltd
cmp
orb
mov
loope
push
xlat
loop
dec
xchg
aad
jb
repnz
or
enter
add
pop
fwait
mov
inc
dec
dec
pop
clc
mov
movsl
pop
lcall
cmp
inc
arpl
mov
jmp
test
xor
imul
repz
pusha
imul
inc
pop
aam
daa
movsl
sub
testb
or
or
cli
jno
icebp
push
push
push
imul
or
insl
fistpl
arpl
das
rcr
sub
sub
push
das
sub
push
outsb
sub
pop
test
stos
push
cltd
dec
popf
mov
imul
sbb
int
mov
fwait
xchg
inc
leave
bnd
xor
add
or
inc
negl
shlb
icebp
fnstsw
and
outsl
push
push
cmp
adc
cli
cld
xor
in
int
ficoms
adc
orb
add
and
push
lret
pusha
sbb
adc
add
popa
data16
popa
js
movsb
lds
cmpsb
aad
test
dec
pop
push
movsb
aas
iret
inc
lods
sti
and
lcall
stos
adc
jl
xchg
inc
insl
xor
mov
sbb
out
fsubrp
mov
xchg
out
sbb
in
xor
sub
dec
jbe
sbb
fidivl
jo
mov
dec
inc
jnp
sub
subl
mov
xchg
mov
scas
aam
imul
add
push
or
scas
mov
fstpt
xorl
gs
cwtl
imul
mov
push
mov
xor
and
jno
dec
sbb
sbb
popa
sub
inc
sub
out
and
in
dec
adc
xchg
jp
lea
int3
pop
es
fmul
test
push
push
or
insb
xor
int3
sti
popf
or
add
push
std
pop
mov
clc
mov
cmp
out
sub
mov
xchg
das
test
pop
push
repnz
pusha
mov
cmp
sbb
xchg
mov
xchg
pop
rcr
jae
sub
sub
dec
push
dec
fbld
pop
sbb
jb
sarl
mov
push
inc
add
mov
ss
roll
jg
add
sti
cmp
sbb
outsb
sti
push
fs
in
inc
mov
fidivs
es
cmpsl
arpl
adc
mov
push
loope
mov
adc
scas
rcrl
js
lahf
mov
add
pop
es
mov
sub
push
dec
fwait
adc
popf
lock
sbb
xchg
add
ja
inc
stc
cmp
int
sti
popa
jle
popf
xor
sbb
cwtl
int
jmp
iret
push
mov
inc
mov
hlt
inc
in
jb
jmp
in
xchg
lret
mov
mov
sahf
jmp
insl
scas
sub
xor
xor
mov
out
in
loop
mov
daa
cli
mov
sbb
cltd
cmpsb
fidivs
test
loopne
add
aaa
fcomp
pusha
mov
mov
enter
iret
mov
movsl
xor
mov
mov
lret
fimuls
push
lahf
sbb
push
sar
push
jne
aaa
in
xchg
pop
les
not
cmpsb
cmc
inc
mov
jne
pop
movl
out
and
sbb
arpl
xchg
inc
sub
and
mov
ficoml
js
sub
test
or
adc
sub
rcrl
mov
lock
imul
hlt
repz
mov
addr16
mov
cld
sub
es
std
dec
add
out
and
sti
in
jge
pop
adc
mov
mov
dec
arpl
xchg
test
inc
repnz
push
mov
stos
loop
dec
in
sub
sbb
jae
cmp
hlt
pop
fmuls
pop
cmpsb
mov
sub
test
push
mov
xchg
rorb
xchg
addr16
pop
stc
shll
sbb
repz
arpl
jne
or
sbbb
ficompl
push
sbb
fcoml
push
loop
enter
fiadds
mov
lret
mov
je
adc
int3
mov
mov
cmpb
mov
cmpsb
pop
inc
or
xchg
lcall
ja
fiaddl
mov
in
pop
cmp
gs
push
loop
nop
hlt
sbb
jl
inc
lds
out
dec
stc
mov
movsl
icebp
inc
push
jl
out
pop
das
xor
fstp
pop
in
jge
rclb
push
inc
jp
out
adc
xchg
adc
ret
or
into
in
bound
js
lods
loop
xchg
xchg
mov
nop
mov
lret
mov
jae
call
sahf
cmp
jmp
icebp
xor
daa
out
repnz
roll
add
adc
bound
and
loop
xor
repnz
mov
mov
aaa
lret
mov
inc
es
push
out
pushl
mov
jbe
mov
cmc
push
inc
imul
pop
xor
jbe
mov
js
add
pop
adc
pusha
aas
sub
jle
std
pop
xor
dec
shr
mov
daa
ja
shl
in
sub
mov
leave
fnsave
clc
les
loope
icebp
add
scas
sub
or
mov
lods
pop
fs
fcoms
and
nop
mov
push
cld
xor
cmpsl
jg
js
mov
sbb
sahf
leave
loop
inc
or
les
test
movsl
push
out
pop
pop
das
cli
xchg
adc
rcr
out
push
call
test
add
cld
xchg
jle
lock
xchg
cmp
or
in
aaa
shlb
pop
jno
imul
hlt
pop
cs
jecxz
mov
dec
adc
sbb
les
divps
xchg
repnz
or
push
mov
cmpsb
pushf
pop
dec
jae
js
popf
lds
fildl
and
mov
xchg
xlat
cmp
bound
les
xchg
cmpsl
sub
iret
dec
ja
dec
jecxz
inc
push
hlt
and
sbb
xchg
pop
shll
push
inc
or
rcr
dec
xchg
arpl
cmp
lahf
xor
mov
adc
mov
and
mov
lret
inc
push
fldt
aam
mov
pop
imulb
stos
xchg
in
popa
rolb
std
mov
or
and
aam
into
cmc
pushf
jno
cmp
sub
lods
sbb
mov
jp
pop
xor
lds
fists
fwait
mov
mov
adc
sbb
js
loopne
rcrb
pop
sub
fnstcw
mov
push
add
sub
movsb
xchg
fcomps
pop
inc
push
adc
mov
inc
add
pop
jge
mov
clc
push
sbbb
cld
sbb
ret
enter
and
dec
jle
inc
xchg
cmpsl
cmp
add
jne
jns
pop
and
dec
and
lahf
xchg
dec
daa
es
popa
fcmovnb
cmpsb
hlt
mov
push
jne
sar
push
mov
in
adc
jno
scas
cltd
mov
or
sub
repnz
arpl
arpl
stos
ret
imul
lret
popa
cmpsl
enter
je
rolb
adc
addr16
lcall
push
sbb
xchg
and
jae
jnp
adc
add
inc
sub
std
adc
adc
xor
dec
mov
fisttpl
setl
mov
push
sbb
xor
mov
data16
cld
scas
mov
jmp
mov
divb
lcall
fsts
dec
in
mov
divb
call
jp
ja
mov
xchg
xchg
outsl
bnd
pop
mov
lahf
call
loop
roll
fisubrs
lods
pop
or
fistps
ffreep
jb
scas
pminsw
sub
shrb
call
pop
push
test
rol
mov
xor
or
inc
clc
jne
push
rolb
xor
pop
xor
test
scas
add
je
std
test
fidivrs
xor
xchg
xor
mov
orb
dec
sbb
ret
imul
int
jne
mov
pop
mov
pop
mov
icebp
cmp
mov
lock
xlat
pop
xor
add
sub
inc
xor
jecxz
stos
scas
shlb
push
or
adc
fsubr
cwtl
cmpsb
jmp
adc
movsl
add
mov
mov
cld
adc
in
inc
dec
out
mov
scas
stos
cmpsl
xor
adc
dec
mov
mov
and
xchg
and
mov
stos
les
cmpsb
insl
mov
shl
lock
push
sbb
inc
cltd
cmp
jmp
mov
fcompl
lods
adc
clc
das
pop
xchg
mov
loope
orl
xchg
sbb
dec
dec
fnstsw
xor
mov
movsb
add
mov
mov
stos
add
outsb
or
dec
jecxz
dec
xor
push
sti
popa
mov
sahf
mov
jbe
add
cld
imul
pop
push
or
inc
je
pop
rorb
mov
adc
push
outsb
mov
inc
cmp
inc
imul
imul
jb
inc
gs
pop
xchg
inc
popa
jmp
cmp
ret
pop
jne
sbb
and
push
outsl
mov
lock
in
push
shll
mov
or
or
sbb
mov
loopne
xor
xor
jns
xlat
push
add
into
adc
cmc
test
loop
cmp
add
stos
out
dec
jo
jo
lcall
dec
sbb
scas
or
inc
cmp
daa
adc
decl
inc
into
aas
xor
or
push
iret
shrl
dec
inc
lds
xor
xchg
shll
insl
les
mov
enter
loope
xchg
sbb
cwtl
fs
imul
xor
cltd
mov
jmp
test
and
sbb
bound
or
dec
cmp
js
sti
and
push
mov
imul
fwait
sub
mov
sub
mov
pop
jae
add
lcall
ds
pop
icebp
jno
rorl
data16
cmp
push
ret
pop
push
push
insl
int
jmp
aaa
sbb
lret
add
lock
cwtl
push
testl
call
inc
push
pop
xchg
lea
lret
xorl
mov
test
xchg
rcrb
sub
mov
das
mov
cmpsb
out
cmpsb
push
push
lcall
fldt
es
mov
in
xchg
jg
loope
arpl
mov
sbb
std
test
mov
insl
xchg
mov
mul
mov
lret
adc
xchg
pop
into
out
jle
imul
jnp
and
jmp
mov
cmp
or
push
jg
pop
int
push
fisubrl
enter
sbb
aam
jg
push
push
inc
xor
sbb
pop
insl
test
push
rolb
xchg
mov
int3
out
pop
cmc
cmp
and
loope
sbb
sahf
and
pop
push
jmp
pop
testl
cmp
shl
push
mov
icebp
mov
mov
sub
push
addl
sahf
test
loopne
push
inc
mov
cld
sub
push
ret
test
mov
adc
mov
mov
mov
pop
repnz
pop
inc
fnstenv
dec
push
sahf
jle
insl
dec
rcll
bound
sbb
sbb
scas
xchg
and
mov
cmp
test
jbe
bound
jge
in
cwtl
push
dec
in
out
inc
test
lods
xor
in
pop
int
jg
cltd
mov
daa
scas
negb
subl
jnp,pt
cmp
shll
das
lods
loopne
xchg
imul
push
clc
cli
mov
push
xchg
dec
stos
fisubrs
aad
gs
pop
rcrb
xchg
dec
aam
cmpsl
fnstsw
les
repnz
aaa
neg
inc
jecxz
int3
movsl
push
fmuls
data16
iret
sbb
aaa
ret
add
fldenv
mov
inc
fwait
lahf
outsl
aad
addr16
mov
popa
pop
xor
movsl
jb
pop
jmp
xchg
and
inc
inc
xor
out
cli
imul
je
jno
xchg
or
rcl
mov
sbb
addb
mov
arpl
daa
pop
pop
jecxz
push
or
xor
sub
ds
xchg
sbbl
and
cmp
je
je
jnp
add
mov
jl
cmp
out
xor
arpl
mov
or
les
aaa
stos
pop
hlt
fldenv
mov
addr16
sub
push
movsb
inc
cmpsb
js
xchg
js
rep
and
push
add
or
adc
pop
dec
xchg
mov
dec
adc
or
push
arpl
in
xor
or
xor
inc
sbb
loop
jb
fcmove
shll
lret
sbb
mov
pop
jns
pop
fs
push
ss
cmpsb
rcrb
cmp
jb
in
shlb
or
hlt
inc
xchg
jle
in
push
rorb
data16
pop
mov
fisubs
cmpl
out
adc
nop
or
xchg
xchg
fldenv
in
pop
xor
push
cmp
aad
cmp
xchg
inc
clc
sbb
push
movsb
sarb
out
mov
mov
aam
sbb
cmp
repnz
and
xchg
add
sub
out
arpl
jae
and
jne
or
cmp
dec
in
mov
and
pop
or
add
adc
daa
xchg
inc
out
inc
dec
cs
inc
bound
mov
jle
outsl
and
out
cwtl
rcll
dec
pop
jp
or
mov
movsl
sti
sub
clc
xor
push
mov
cmp
inc
cmpsb
mov
pop
leave
negb
xor
aam
ds
lock
imul
nop
fs
mov
push
call
ljmp
inc
dec
inc
lds
rcrb
pop
pop
xchg
loop
jne
xchg
push
out
jo
sarb
rcll
push
cli
incl
pusha
repnz
jmp
popf
fidivrl
or
jl
ret
sarl
mov
out
fcomip
mov
mov
ja
dec
lods
bnd
aad
sub
sbb
addr16
pop
push
mov
jno
mov
xor
push
pop
out
sub
and
push
push
mov
mov
in
xor
arpl
sbb
orl
bound
push
sbb
stos
loope
imul
das
in
inc
aad
mov
mov
add
sub
mov
stc
cmp
sbbb
push
shrl
mov
outsl
fidivrl
cwtl
or
jg
out
or
cmp
xchg
dec
in
sub
insl
mov
sub
imulb
insl
dec
icebp
out
pop
sarl
fdivrl
sub
cmpsb
icebp
je
fimull
test
stos
popa
gs
sbb
gs
adc
rcrb
enter
lea
add
dec
or
mov
and
sahf
mov
mov
popw
je
jbe
mov
loop
push
cld
lods
scas
ret
sbb
jnp
cmp
hlt
in
cmpsb
xchg
xchg
mov
inc
and
xchg
sub
in
cmpsl
pop
scas
xor
add
push
lods
ficoml
in
gs
pop
fadd
lahf
xor
add
pop
cmc
addr16
dec
dec
outsb
lret
test
xor
mov
push
fsubs
push
mov
inc
mov
push
inc
aas
out
mov
fldcw
pop
mull
cmpl
mov
dec
mov
movsb
inc
das
xchg
iret
mov
sarb
cltd
hlt
les
push
test
shrb
mov
xor
ljmp
test
xchg
sahf
sub
dec
repz
xchg
addr16
jnp
or
pop
pop
pop
aam
jg
inc
rcrb
pop
call
mov
adc
xchg
fcomps
push
int
push
roll
and
inc
push
scas
cli
pop
shrl
in
mov
xchg
ja
lret
jle
add
push
push
aam
push
das
jge
rcl
fldt
aam
or
inc
in
cmp
fistps
lret
bound
in
inc
adc
cmp
fidivl
xchg
cmp
addr16
std
in
mov
xlat
sysexit
jecxz,pt
and
pop
in
test
mov
hlt
cmc
cmc
test
mov
mov
aaa
insl
push
out
and
fcompl
mov
add
or
pushf
mov
sub
aas
in
xchg
jbe
call
clc
push
daa
push
xor
imul
cmp
cmp
fisttps
das
test
mov
je
pusha
stos
fldt
and
shlb
jae
xchg
xchg
popf
xchg
adc
lcall
xchg
stos
cmpl
push
pop
dec
add
xlat
cwtl
movl
pop
out
pop
xchg
mov
icebp
rorl
leave
loopne
mov
icebp
jmp
lret
adc
sub
mov
or
pop
mov
jge
cwtl
mov
fwait
pop
scas
movsl
and
pop
dec
xor
adc
xlat
dec
loop
daa
rorl
in
mov
add
push
data16
cmp
test
or
in
mov
cmp
lret
testb
repnz
negl
push
cmp
xor
mov
adc
push
sub
fiaddl
out
frstor
arpl
adc
pop
mov
inc
pop
push
sbb
outsl
mov
lahf
pop
mov
iret
jnp
push
cmc
xchg
std
ret
xchg
mov
mov
mov
gs
jmp
out
sbb
add
stos
inc
lret
jns
pop
lods
push
in
push
add
sub
and
gs
push
orb
push
mov
movsl
sbb
scas
ffree
jns
pop
push
adc
mov
adc
adc
xchg
push
sbb
pop
popa
sub
repz
pop
add
lds
xor
cmpsb
xchg
dec
sahf
daa
add
jno
inc
jge
adc
mov
mov
pop
repz
mov
add
es
xchg
mov
faddl
imul
adc
imul
aaa
cli
mov
mov
inc
or
adc
push
add
nop
adc
in
outsb
bound
insl
scas
test
cmpsb
test
mov
mov
ljmp
inc
and
xchg
stos
inc
jge
push
push
repnz
fcoml
imul
mov
cmp
daa
push
addl
insl
rcrl
xchg
and
shlb
push
push
mov
push
sahf
adc
pmulhuw
push
or
mov
xchg
cmc
cmp
or
pushf
pop
mov
xchg
jb
mov
popf
mov
cltd
or
mov
or
jb
sub
push
inc
fstl
and
xor
outsl
pop
dec
aam
mov
lock
repnz
mov
push
jae
fildll
mov
repz
popf
dec
pop
add
push
lea
cmc
loop
adc
inc
sub
cmp
das
fs
xchg
dec
or
cwtl
sub
sbb
mov
mov
int3
pop
and
add
pop
sbb
push
roll
push
lret
repnz
push
dec
loop
psubw
andb
pop
sbb
fldpi
outsl
mov
les
xor
fwait
jp
gs
inc
test
mov
lods
pop
mov
sbb
jno
ja
scas
pop
int3
pusha
lcall
xchg
mov
cmp
data16
loope
stos
xor
jae
jmp
mov
push
jmp
sbb
lret
and
sub
out
jnp
sub
movl
adc
daa
popf
lahf
cmp
inc
mov
lret
and
cmc
add
mov
xor
jae
lds
and
clc
lods
mov
lcall
ret
arpl
cwtl
ds
je
andb
into
inc
mov
pop
fistps
fisubs
mov
repnz
call
jae
movsl
mov
xchg
mov
cs
mov
scas
bound
ret
hlt
repnz
es
jecxz
add
and
mov
pop
pop
leave
mov
lret
inc
add
sahf
jns
cwtl
fildll
imul
add
cwtl
sub
mov
hlt
sub
push
pop
cmc
repz
aas
imul
add
inc
xchg
pop
xchg
testl
mov
ret
sub
sbb
jl
pop
movsb
shrb
or
dec
xchg
dec
movsl
push
jno
add
jno
js
scas
inc
test
imul
movsb
fidivrs
mov
pop
arpl
or
mov
lcall
in
inc
stos
cld
xlat
bswap
mov
cmp
iret
or
mov
mov
fsubrl
dec
pop
fldt
cmpl
or
sbb
jp
jb
push
test
xor
paddusw
jne
fwait
dec
and
or
sbb
lds
inc
stos
daa
aam
add
sbbl
lods
jnp
imul
add
inc
jg
lcall
jmp
cmp
push
mov
pop
not
call
rep
and
out
sub
xor
dec
adc
inc
pop
adc
movsl
sahf
adc
test
mov
fisubrs
dec
and
xor
mov
gs
xchg
das
mov
lock
movsl
dec
dec
and
iret
mov
lods
push
out
push
call
cmp
gs
mov
pop
pop
xor
pop
dec
pusha
notl
in
in
outsl
inc
push
mov
xor
loopne
insl
rolb
cli
or
jecxz
mov
int
push
inc
mov
add
xor
std
inc
popa
jmp
push
sbb
or
pop
popa
addr16
mov
add
or
loopne
subb
insl
add
dec
mov
shll
sbb
popa
mov
sub
dec
aaa
bound
xchg
mov
dec
mov
popa
out
pop
jecxz
cmc
popf
sbb
sub
dec
popf
push
daa
imull
lcall
cmp
hlt
push
mov
icebp
add
mov
stc
fadds
xchg
out
cltd
pop
scas
clc
test
pop
mov
cmpsb
es
mov
adc
mov
jae
adc
xchg
into
sti
fmuls
and
movsb
sbb
add
pop
inc
fwait
test
sbbl
adc
push
andl
adc
lods
xchg
out
iret
test
add
outsl
test
sbb
ja
xchg
sub
in
inc
push
popf
lret
daa
mov
fcompl
ds
and
mov
push
call
iret
gs
fcmovnbe
lret
pop
push
dec
pop
insb
cmp
js
divl
iret
push
mov
mov
push
arpl
jns
push
js
stos
stc
int3
mov
push
imul
adc
cld
ljmp
das
insl
adc
lcall
mov
test
or
inc
shl
loopne
mov
jg
mov
cmp
adc
pop
lock
cwtl
pusha
jecxz
addb
xchg
lea
adc
rolb
les
into
mov
add
mov
cltd
pop
xchg
adc
jns
pop
add
add
insb
xor
bound
fucomp
xor
jp
cwtl
push
out
jne
xor
loop
jg
pushf
stc
repnz
xchg
xor
inc
add
sbb
cwtl
insl
jno
fsubs
fwait
sub
insl
jmp
cmpsb
mov
fwait
mov
ret
mov
pop
loope
cmpsb
sbb
js
and
dec
xchg
add
pop
ja
xchg
or
adc
add
fistpll
sahf
std
and
or
xchg
mov
pop
pop
jle
adc
mov
cmpsl
inc
jns
stos
aam
xchg
dec
add
add
push
sub
cs
adc
scas
cmp
adc
inc
adc
mov
dec
or
icebp
test
je
iret
dec
stos
push
sbb
dec
jbe
lsl
emms
scas
xor
mov
ja
movsl
sub
sbb
ret
lds
jge
sub
xor
loopne
lock
in
push
in
or
ds
mov
xchg
xor
pop
or
add
xor
mov
sahf
test
lcall
roll
out
jno
add
imulb
dec
xor
push
aam
in
mov
jne
imul
int3
xor
mov
push
lds
mov
pop
scas
bound
fiaddl
jb
scas
and
push
movsl
mov
or
testl
or
loop
loopne
sub
inc
ja
xor
ss
adc
popa
sub
push
push
pusha
outsl
dec
test
pop
out
add
dec
scas
xor
push
sub
sahf
push
stc
adc
aam
test
mov
stos
in
push
cmc
out
mov
mov
dec
cld
sub
testb
xchg
clc
sub
mov
ret
dec
ficoml
mov
ret
icebp
adc
sahf
fstps
lret
in
mov
sahf
jb
out
xchg
sub
jbe
aad
out
pop
mov
xchg
mov
pop
ficomps
mov
arpl
dec
push
inc
jl
scas
mov
adc
adc
cmp
sub
adc
cmp
xchg
mov
ror
cli
xchg
inc
std
push
ret
fistpll
js
loope
iret
fs
call
iret
xor
fildll
mov
ja
jo
or
shr
rol
aaa
sub
je
or
xchg
in
jbe
test
push
dec
inc
push
ds
xor
dec
sti
rorl
es
pop
and
sbb
mov
in
cmpsl
data16
adc
jge
cmpb
aas
or
mov
cmp
imul
imul
std
in
push
ja
cmp
inc
lret
stos
cltd
outsl
loop
in
nop
test
call
and
mov
dec
mov
jge
clc
mov
outsb
cli
ja
fst
cli
int
add
pop
sub
jbe
es
test
outsl
mov
in
lret
subb
test
mov
add
fsubr
je
dec
xor
pop
stos
push
das
cltd
inc
jno
repnz
xchg
clc
add
jecxz
scas
xchg
push
out
inc
or
sahf
movsb
pop
sahf
cmc
stc
jl
sub
dec
out
in
test
mov
dec
int3
add
and
ret
out
jecxz
fiadds
xchg
cmp
lods
cwtl
xor
es
into
popa
sub
mov
xchg
popa
mov
or
imul
mov
or
mov
pop
lods
add
sbb
fimull
push
sbb
cwtl
mov
and
pop
ljmp
mov
aam
sbb
adc
jnp
sbb
add
out
dec
cmpsl
jnp
call
mov
jge
lcall
mov
loop
jl
roll
and
es
mov
inc
push
add
push
xchg
cmp
test
imul
mov
imul
fidivl
jecxz
stos
fsubl
cmpsl
cwtl
into
cmp
fwait
xchg
lds
jae
notb
pop
cs
bound
sub
in
push
or
add
xor
adc
hlt
mov
mov
jmp
xchg
in
jb
mov
ficoml
inc
xor
push
stc
fbld
cmp
lods
in
fwait
and
sbb
jp
cmpsb
stos
xchg
in
mov
or
pop
fcomps
mov
fstl
jle
in
jg
mov
mulb
les
cwtl
aaa
aad
xchg
stc
ds
sbb
aad
cwtl
mov
mov
loopne
and
notb
pop
lcall
push
fisubs
sbb
repnz
jae
or
adc
push
outsl
sbb
bnd
pop
push
int3
add
leave
mov
aam
inc
cmp
sbb
add
xchg
or
inc
xor
sarb
lods
jb
jns
and
fldcw
mov
xchg
add
roll
dec
inc
ret
loopne
test
xchg
xchg
jno
cld
nop
mov
leave
js
add
jp
jmp
cli
stc
dec
scas
int3
pop
rcll
sub
push
movsb
mov
gs
je
or
loopne
or
inc
jl
mov
xchg
adc
dec
pop
sahf
adc
sti
mov
cs
cmp
push
mov
cmpsl
mov
jbe
pop
xor
xchg
aad
xorb
clc
xchg
call
out
sbb
in
jp
lret
push
roll
push
mov
into
arpl
scas
addb
adc
xor
testl
cwtl
loop
fmull
stc
dec
and
dec
stos
pop
or
cmp
cmpsb
inc
mov
jnp
and
sub
mov
enter
rcrb
repz
fisubl
jb
lret
dec
xor
mov
adc
dec
push
or
in
mov
and
cmpsb
idivl
into
add
test
test
inc
popf
sti
push
jns
loopne
test
mov
jo
in
insl
adcl
sarl
fildll
and
xabort
jmp
jnp
or
std
out
addr16
stos
insb
je
std
cmc
incl
jecxz
lret
pop
jmp
sub
into
push
push
rcr
jg
sbb
shll
pusha
into
add
cli
mov
mov
sarb
sbb
in
push
scas
cmp
insl
mov
negl
scas
xchg
mov
scas
mov
scas
lret
mov
mov
popf
lcall
out
inc
pop
adc
sbb
fdivrl
arpl
adc
mov
mov
out
fcmovnu
pop
inc
sub
int
or
insl
adc
mov
push
push
xchg
mov
jae
xor
std
daa
pushf
bound
push
lods
pop
and
mov
ss
js
xchg
mov
push
jp
pop
mov
scas
or
sbb
loope
scas
aas
movsl
adc
repz
ret
xchg
imul
daa
xor
mov
lock
cwtl
cmpsb
mov
std
jne
arpl
sbb
or
mov
pop
dec
out
mov
subb
out
jge
mov
movsb
mov
cmpsl
icebp
or
push
lea
les
jo
xlat
test
pusha
test
lods
xchg
insb
adc
popa
xor
mov
in
js
es
dec
test
clc
js
inc
mov
arpl
in
shlb
jb
mov
and
repz
dec
sti
insl
repnz
data16
mov
adc
imul
in
scas
das
repnz
das
pusha
scas
adc
cmc
lods
fsubr
sbb
cwtl
xor
pop
dec
sub
fdivs
jle
adc
adc
das
fistps
cltd
jbe
shlb
sbbl
lock
sub
push
xchg
scas
xchg
cmp
mov
add
xchg
mov
xor
adcl
inc
push
fbstp
mov
jbe
xor
loop
jmp
in
mov
sbb
dec
sahf
std
mov
xchg
int3
xchg
pop
frstor
clc
out
mov
pop
pop
xor
mov
add
xor
and
shrb
xor
test
mov
add
pop
es
xchg
out
sbb
out
pop
lret
and
or
pusha
movsl
xor
and
adc
inc
jmp
jecxz
xor
fwait
je
cmpsl
jmp
jne
lea
jo
sti
push
movsb
lahf
sub
ja
icebp
pop
imul
bound
mov
imulb
mov
rclb
insb
jp
and
sbb
xor
cmp
ds
nop
push
mov
fsub
xchg
mov
outsb
incl
aad
loop
les
sti
ds
push
mov
or
enter
das
adc
das
popf
and
hlt
int
imul
cmp
cmp
xor
jnp
jbe
push
push
lods
insl
fistpll
shrb
push
repz
cs
mov
nop
pop
nop
pop
jmp
and
mov
mov
ret
pop
int3
js
pop
dec
mov
and
xchg
push
mov
push
cmp
sbb
and
push
push
loope
xor
push
sub
fwait
lahf
pop
movl
jo
loop
jns
adc
pop
push
or
pushf
mov
cmp
pop
pop
js
dec
pop
fwait
andl
popf
outsb
les
das
sti
aaa
push
mov
lea
int3
mov
push
jg
add
fucomip
sbb
fildl
inc
dec
mov
pop
jg
mov
inc
stc
add
push
lods
call
lret
sbb
push
sbb
nop
add
int3
xchg
shll
das
push
inc
push
insb
out
testb
pop
daa
fdiv
lret
mov
push
pop
pop
loopne
cmp
lahf
mov
inc
fwait
movsb
pop
xor
into
sahf
hlt
inc
pusha
add
rcrl
fstl
lds
sub
cmp
xchg
mov
xchg
lea
jge
mov
jnp
pop
psllq
fcmovnu
xchg
int3
ficomps
outsb
mov
mov
xor
dec
sbb
inc
mov
push
dec
dec
inc
ds
xor
push
or
add
cmp
mov
insb
adc
stos
mov
stos
into
mull
sbb
sbb
and
das
inc
xor
aam
mov
jmp
adc
push
ret
stc
push
pushf
xor
or
xchg
xchg
dec
pop
loop
mov
in
daa
hlt
cld
aaa
push
dec
add
das
dec
inc
subl
inc
ss
jmp
or
lea
cmpsb
push
or
daa
cli
push
mov
ja
xchg
xchg
xor
adc
sbb
pop
pop
in
or
mov
sub
lods
insl
cbtw
popl
cmc
rol
aas
xchg
leave
lret
mov
into
lretw
add
xchg
nop
je
enter
inc
cmp
lods
adc
shrl
push
cmp
or
popf
jb
rcrl
mov
xchg
fwait
inc
and
push
or
push
pop
xchg
adc
adc
add
pop
aam
mov
xchg
mov
jg
dec
mov
cmp
in
aam
hlt
enter
xchg
int
pop
pop
movsl
lock
add
fldenv
movsl
lods
nop
dec
mov
xchg
ret
sbb
ss
xlat
andl
sbb
fisttpll
icebp
mov
sarb
je
adc
stos
mov
lret
and
or
mov
xor
add
mov
jge
xor
outsl
mov
ljmp
lds
sub
repnz
inc
push
xchg
mov
ret
push
jle
push
insl
cmp
adc
lods
leave
sti
xchg
outsb
xor
mov
mov
ja
popf
jb
adc
out
push
jo
fisttps
fbld
daa
inc
inc
lea
add
jmp
testb
push
add
test
cmp
cmc
addl
inc
aas
xchg
stc
xor
mov
cli
into
lds
stos
loopne
mov
jp
in
and
dec
into
pop
loopne
xchg
mov
cmp
or
push
xchg
xchg
out
xor
insb
aam
add
in
and
icebp
or
cmp
mov
imul
sub
imul
lret
mov
cmp
push
mov
pop
fldln2
xor
cltd
sub
and
call
adc
stc
jbe
adcb
out
lock
and
push
dec
je
sbb
mov
andl
mov
sahf
lods
sbb
adc
leave
mov
cmp
add
mov
pushf
cmpsb
fdivl
jns
xor
js
xchg
in
sub
and
inc
adc
out
cmp
mov
pop
push
inc
pop
out
inc
jle
sahf
enter
arpl
bound
lea
es
sub
iret
jmp
adc
es
mov
xor
in
pop
jnp
mov
xchg
mov
pop
add
xor
lock
mov
cwtl
cltd
popa
pop
add
pop
mov
mov
std
push
mov
in
hlt
push
push
dec
out
pop
cmc
mov
pushf
ljmp
inc
jbe
outsl
in
mov
cltd
cs
mov
xchg
xchg
sbb
cmp
dec
enter
jecxz
xorl
mov
push
fcmovnu
int3
shrb
ds
movsb
mov
cmc
mov
dec
mov
dec
push
pushf
jne
das
mov
jnp
jle
pop
enter
aam
xor
aam
xor
mov
cld
jmp
jns
inc
jge
aam
cmpsl
je
sbb
out
cmpsl
lret
add
push
adc
aad
push
js
lret
xor
adc
mov
addl
iret
pop
insl
sub
clc
jle
dec
and
aas
loope
loopne
insl
mov
inc
lock
cmp
add
in
mov
in
push
cs
inc
flds
push
sub
ja
xchg
aad
add
out
xchg
jle
and
xchg
or
bound
push
adc
pop
pop
popf
mov
sbbl
movsl
mov
and
and
jp
mov
jmp
addl
mov
adc
dec
and
jno
dec
push
shrl
addr16
sub
adc
ds
lock
adc
lret
movsb
lods
or
mov
push
hlt
insb
and
xchg
je
aas
imul
mov
mov
push
cmpsl
push
pop
xchg
js
mov
jae
inc
push
mov
fdivl
fimuls
test
dec
outsb
rcrb
mov
popa
rcll
aas
js
fsubrs
mov
xchg
cwtl
inc
pop
pop
or
mov
pop
dec
dec
dec
mov
scas
xchg
cwtl
sbb
movsl
mov
pop
push
xchg
xor
lahf
jno
mov
cmp
dec
fsubl
fnstcw
arpl
sbb
xor
xchg
add
call
xchg
out
dec
clc
shl
pop
lock
inc
cwtl
lcall
idivl
jmp
pop
and
dec
out
movsl
mov
decl
jns
mov
mov
or
fidivrs
sub
movsl
dec
ljmp
xchg
pop
or
fsubrs
insl
mov
cmp
xor
push
stos
out
or
cmc
jns
cmp
scas
loope
mov
sbb
iret
xchg
and
add
sbb
outsb
sahf
fiaddl
imul
pop
mov
push
mov
cmp
jp
inc
js
fsubr
push
into
ret
int3
in
inc
cwtl
jmp
pop
jge
movsl
mov
mov
call
and
pop
test
xchg
lds
ud2
fbstp
shrb
add
dec
rclb
out
daa
xor
pop
out
into
insb
pop
push
iret
or
cltd
push
mov
in
aad
xchg
mov
dec
dec
adc
mov
jno
mov
sub
push
jo
xchg
cmc
xor
aam
sti
enter
inc
pop
push
std
and
xchg
jne
lds
pop
mov
in
mov
push
cmp
adc
mov
push
adcl
out
cmp
bound
imul
lahf
or
push
add
pop
pop
cmpb
lock
mov
call
and
add
or
frstor
inc
sarb
pop
push
fldl
xchg
scas
into
jmp
jne
in
jle
cmp
inc
imulb
arpl
or
and
ds
sti
loopne
adc
orl
inc
roll
pop
pop
mov
or
dec
in
mov
repz
xor
popl
fisubl
out
stos
orb
lahf
into
cmp
pop
shlb
jns
repnz
pusha
and
imul
inc
jge
mov
stos
daa
out
adc
icebp
insb
mov
fstps
add
lcall
lods
in
jge
adc
pop
stos
xchg
xor
imul
push
test
sub
sub
jmp
in
imul
hlt
pop
into
lahf
mov
mov
jae
jle
mov
mov
xorl
mov
ja
mov
ljmp
or
addl
imul
mov
mov
mov
or
mov
pop
cs
jle
test
sbb
fldcw
lcall
jb
imul
push
loope
movb
dec
fbstp
sti
fsubp
sahf
fists
idivl
add
cmp
les
xor
pop
cli
add
xchg
mov
and
dec
xor
cmp
mov
aas
pop
fcomps
test
adc
mov
adc
mov
lods
fisttpl
adc
add
lret
imul
insb
movsb
nop
jge
icebp
mov
pop
in
mov
inc
or
sub
not
int3
bound
je
xor
js
sti
dec
ficomps
adc
js
sub
dec
data16
lock
push
dec
pop
mov
mov
adc
aas
xchg
imul
xchg
sbb
gs
aaa
dec
iret
outsb
or
stos
adc
in
jae
scas
ja
out
jge
fxam
out
dec
jb
divl
inc
movzbl
arpl
cwtl
adc
lret
push
or
cltd
xor
or
and
enter
jecxz
cld
jnp
out
clc
in
pop
test
ja
add
iret
imul
fdivl
jg
test
mov
sbb
cs
gs
jae
cs
popa
clc
sbb
adc
test
int3
lock
rcl
adc
jle
lcall
xor
fstps
and
fidivs
cld
sub
mov
jecxz
scas
push
inc
adc
fdivrs
xchg
mov
pop
lret
jbe
push
sbbl
lods
jp
xchg
loope
mov
pop
inc
pop
outsl
inc
lret
mov
adc
xchg
sbb
sbb
cmp
jae
out
pop
movsl
xchg
hlt
pop
jo
adc
out
insl
sbb
in
sub
jne
jb
dec
int
mov
inc
jno
into
add
mov
jne
cli
pushf
jle
cmpb
push
push
jne
sub
fs
adc
inc
jb
sub
out
push
push
inc
or
add
xchg
cwtl
mov
sbb
add
movsb
testb
dec
fsts
xchg
xchg
loopne
mov
rcl
push
add
fsubr
jb
jmp
leave
mov
cmp
push
sbb
out
subb
inc
outsb
dec
and
dec
test
push
xor
imul
lock
xor
push
fidivl
rorl
jnp
push
jmp
pop
filds
push
pop
mov
jno
push
outsb
dec
int
ds
mov
xchg
xor
xchg
addr16
in
inc
inc
mov
xor
shlb
jg
push
push
rcrb
or
dec
popa
sbb
call
dec
and
add
inc
mov
jecxz
mov
or
add
shlb
mov
mov
aad
sti
daa
mov
adc
push
dec
push
imul
dec
enter
inc
sbb
mov
adc
mov
mov
ret
ljmp
sub
cmc
pop
jns
mov
mov
mov
mov
ror
jle
sysret
inc
push
pop
add
mov
jae
insl
push
stos
je
pop
adc
cmp
iret
lds
mov
sub
pop
mov
cld
xchg
push
dec
jns
jge
cmp
jbe
rcr
mov
or
push
or
dec
out
pop
gs
popa
fisttpl
add
fwait
lcall
shll
inc
popf
dec
bound
movsb
mov
das
in
and
lea
pop
adc
lds
push
xchg
fstpt
mov
fisttpll
inc
jb
mov
or
cmp
jae
mov
jmp
push
bound
pop
in
adc
stc
jle
inc
repz
and
sbbl
inc
inc
int3
outsb
jle
cmp
into
loope
xchg
jecxz
sbbb
cltd
aas
xor
add
bound
int
cmpsb
cli
call
mov
mov
mov
xor
clc
es
gs
jecxz
jmp
fsubp
rcll
leave
lret
push
push
int3
imul
je
das
push
imul
ret
xchg
xchg
pop
xchg
cmpsb
aad
popa
imul
pop
push
sub
jecxz
pusha
xchg
pop
int3
pusha
pop
add
fsubrs
and
js
popf
int
or
in
out
cmpl
frstor
in
jp
pushf
jge
popf
imul
xlat
rcrb
sbb
sub
push
xchg
cmpsb
hlt
cmp
xchg
inc
sub
mov
mov
mov
mov
push
and
pop
jl
dec
push
sub
movsl
hlt
fmuls
jmp
push
pop
sbb
dec
add
fimull
aas
push
or
cmpsl
movsl
enter
inc
cmp
mov
cmp
xlat
mov
pop
inc
add
add
in
shl
xchg
mov
add
cmp
les
jg
lahf
mov
cwtl
push
jle
test
xchg
pop
xor
lahf
cmpsl
inc
push
jnp
insl
or
in
push
popf
mov
test
mov
mov
xor
push
cmp
insb
dec
call
mov
xchg
cli
mov
bound
shr
scas
xor
xor
arpl
fwait
mov
notb
in
jg
js
ret
push
fistl
out
mov
sub
push
or
iret
in
fdivr
push
or
jg
mov
xchg
dec
pop
push
xchg
lods
dec
imulb
movsl
jmp
jb
push
insb
mov
adc
pop
push
fcmovb
push
push
inc
add
fiaddl
cmp
test
stos
es
cmp
adc
mov
jae
push
dec
cmpsb
out
imul
aas
add
sub
adc
stos
dec
fstp
xor
int3
jmp
das
mov
jno
jge
ljmp
jle
jle
push
xlat
call
mov
in
ss
dec
or
mov
outsb
rcll
aaa
jp
sub
hlt
cmp
mov
mov
aad
push
mov
mov
push
mov
inc
xchg
shlb
jo
sub
outsb
sbb
mov
cmp
test
mov
pop
es
loop
xchg
arpl
adc
pop
add
mov
cmpsb
outsl
push
rsm
fs
decb
pop
imul
loop
call
xor
cmp
push
loop
bound
mov
cmp
lret
mov
mov
in
adc
mov
rclb
fs
cli
mov
pop
jecxz
cmpsl
jb
mov
in
dec
es
fdivrl
das
rcll
ljmp
mov
mov
dec
ds
push
cmp
popa
pop
movsb
sti
aaa
dec
pop
dec
or
pop
mov
daa
int
add
rorl
push
je
jg
inc
cmp
pop
jns
push
cmp
lahf
pushf
sub
mov
stos
ret
inc
push
dec
repz
mov
loopne
pushf
mov
xor
pushf
mov
inc
arpl
cmpsb
dec
sbb
into
or
ret
loop
ds
aas
les
inc
arpl
lret
push
inc
cmp
leave
add
hlt
ds
or
out
push
adc
loopne
repz
add
jo
xor
popa
rcl
cmp
ret
sub
popf
arpl
push
pop
jmp
jmp
pop
lds
in
mov
mov
cmp
popf
inc
test
mov
xchg
add
mov
jae
out
es
adc
cmp
dec
subl
jmp
jbe
lds
and
bound
inc
repz
xchg
add
test
rcl
clc
adc
add
ljmp
dec
fwait
push
mov
sahf
dec
push
adc
pop
push
lods
rorb
nop
into
test
cmc
xchg
fwait
loopne
andl
jnp
bnd
jbe
sub
mov
sbb
out
int3
in
aad
int3
stos
cltd
mov
pushf
mov
rorl
in
sub
mov
cmpsl
add
jb
dec
lcall
rcll
leave
fidivrs
icebp
jo
push
dec
cwtl
loop
gs
dec
loop
sub
pop
cs
decl
int
cwtl
enter
aaa
mov
add
andb
cli
xlat
hlt
jle
popf
scas
adc
data16
dec
les
dec
fdivrl
or
jle
and
adc
pop
inc
stos
dec
ficomps
out
jae
outsl
arpl
aam
or
xchg
pop
std
ss
push
andb
shl
push
xchg
out
jle
pop
mov
shl
mov
es
stos
bound
nop
mov
aam
push
push
in
enter
inc
pop
imul
xor
test
push
mov
mov
xchg
icebp
pusha
push
js
push
mov
jmp
and
jnp
imul
jae
stc
daa
sub
cmp
pop
push
aam
sbb
fisttpll
and
shll
stos
push
or
out
mov
xor
sti
mov
sahf
xchg
add
push
ss
aam
pusha
bound
pushf
pop
mov
cmp
loopne
insl
xchg
sahf
lret
pusha
xchg
sbb
lcall
pop
ret
xchg
insb
std
test
xchg
inc
icebp
loop
mov
xchg
sub
ret
out
or
enter
cld
enter
fwait
jns
das
shlb
fcomps
movl
out
adc
enter
sub
add
push
ja
out
imull
xor
push
lcall
repnz
sub
add
mov
and
outsl
push
es
clc
xchg
fisttps
push
xor
pop
sub
dec
fnstenv
int3
mov
adc
lret
in
push
cmp
frstor
pop
mov
add
lods
int
fisttpll
pop
ret
leave
lret
xchg
fwait
mov
add
fistpl
jne
out
subb
add
pop
dec
stos
xor
scas
je
or
imul
stos
and
push
push
dec
mov
or
shl
ror
shlb
or
les
sbb
xchg
imul
jp
pop
out
out
test
dec
dec
test
and
loop
aam
pop
push
test
jb
jne
aad
push
jle
dec
mov
inc
sbb
lcall
scas
pop
sahf
mov
push
out
orb
cwtl
aaa
jb
inc
adc
adc
push
mov
add
pushf
cld
sub
and
dec
popa
aam
jmp
sbb
test
jge
jg
into
jns
adc
shlb
cmpsb
mov
nop
pop
lcall
hlt
mov
xchg
aaa
push
jae
sub
or
jbe
xchg
fdivrl
sub
mov
push
lds
pusha
mov
xorb
out
sti
push
or
sbb
gs
imul
or
fstpl
es
xor
into
push
stc
xor
insb
mov
call
or
aas
mov
mov
jb
sbb
push
movsb
push
icebp
outsl
loop
dec
rcll
scas
je
test
in
aaa
or
daa
enter
push
inc
lcall
mov
test
ret
andb
lcall
jno
cmp
or
pushf
jmp
jle
dec
rcrl
push
ds
push
ds
lret
and
das
or
sub
sbb
mov
lcall
or
jl
dec
gs
insb
xor
in
dec
adcl
push
test
clc
push
xor
inc
inc
iret
es
inc
fwait
adc
insb
xor
dec
jle
fwait
ds
mov
clc
dec
add
ret
xor
out
pop
jnp
jge
mov
loop
sti
in
fcomip
mov
and
mov
add
xor
movsb
pusha
icebp
js
dec
mov
aad
or
xlat
fcomp
sub
enter
fldt
mov
sarl
xor
add
paddd
mov
imul
add
gs
push
jmp
sbb
mov
into
sahf
pop
push
fisubs
cmpsb
push
adc
shll
dec
outsl
cmc
push
and
movsb
mov
stos
xchg
rcrb
and
mov
int
push
fisttps
stos
jbe
cmpsb
rcrb
inc
mov
push
jp
pop
mov
and
imul
inc
into
ret
adc
jmp
add
adc
dec
inc
ss
in
rcrl
test
out
test
sub
cli
rorl
xor
or
jle
inc
pop
or
ljmp
dec
adc
les
add
or
les
cmpsb
orb
loope
lret
rcl
fwait
inc
jnp
enter
fisttpll
lcall
jo
insb
or
push
aam
xchg
sub
dec
inc
add
adc
jae
testb
jmp
sbb
push
jbe
lds
enter
and
mov
xchg
outsb
dec
fmull
fidivrl
into
jmp
bound
mov
dec
mov
push
aam
sub
cmp
pop
icebp
repnz
pop
mov
mov
int
mov
mov
mul
aam
decl
scas
sbb
add
loope
es
mov
aaa
dec
lret
inc
push
jo
push
mov
mov
js
jmp
cmp
cmpb
sub
repz
pop
mov
adc
sub
in
or
inc
pusha
iret
lahf
or
rcl
ret
test
mov
inc
test
inc
mov
test
maskmovq
fwait
movsb
push
sub
pop
xor
imul
jne
xchg
or
stos
pushf
adc
bound
mov
repnz
mov
mov
idivl
pop
ror
inc
sbb
mov
push
rcl
sahf
out
xchg
mov
lods
repz
dec
js
scas
js
cmp
repnz
sbb
mov
and
jmp
aad
push
pop
pushf
arpl
lea
xchg
add
lahf
sub
jne
fnsave
dec
or
mov
mov
out
pushf
push
test
arpl
mov
pushf
fidivl
sbb
push
outsl
mov
js
mov
loope
mov
int
data16
stc
ss
dec
incb
pop
cmpsl
dec
xchg
insl
iret
mov
insb
xor
shrl
mov
loop
or
call
push
shll
mov
pop
addb
xchg
stos
add
stos
dec
cmpsb
out
add
test
popa
fisubrl
das
and
cmp
xchg
inc
sub
dec
ljmp
out
xchg
lock
mov
fcomps
not
adc
pop
icebp
mov
cmpsl
jmp
inc
cmpsl
inc
mov
pop
dec
stos
and
scas
gs
xor
mov
pop
mov
xchg
cmp
int
pusha
filds
and
stos
and
xlat
in
push
cmp
push
xorl
dec
push
in
arpl
rclb
ret
and
lock
and
mov
lea
test
push
inc
adc
test
mov
jecxz
jns
stos
scas
mov
adc
call
add
pop
jle
and
adc
bswap
push
in
xlat
sbb
mov
cld
jne
adc
adc
mov
dec
inc
lcall
adc
or
fildll
cmp
movsb
lret
mov
inc
xchg
data16
push
test
into
mov
xchg
add
nop
js
add
loop
imul
mov
or
pop
rolb
mov
movb
xor
divps
test
push
fmull
jne
mov
adc
xchg
jae
cmp
mull
fs
inc
fsubl
fistpll
repz
rcr
mov
mov
fsubrl
adc
je
jecxz
cmp
jno
iret
mov
jb
or
push
add
push
mov
aaa
dec
push
xchg
cmp
dec
pop
rorl
negb
xor
subb
pop
shll
cwtl
mov
jp
cmp
subb
or
pop
cmpsb
cli
or
loop
and
repz
int
lahf
das
pop
mov
movl
std
jmp
out
pop
push
xchg
mov
aam
xor
loop
sarb
jb
fs
cltd
out
addr16
ja
ret
or
jno
jp
cmpsl
cmpsl
scas
enter
jle
pop
scas
or
lahf
inc
lods
cmpsl
and
loopne
add
and
sbb
mov
outsl
sbb
cmp
sti
iret
or
aaa
mov
incl
xchg
mov
adc
pop
jp
popa
movl
andb
jnp
sbb
lods
jbe
xchg
push
jmp
add
hlt
lcall
rorb
pop
out
insl
pop
scas
cmp
jmp
adc
inc
pusha
test
mov
jmp
or
mov
icebp
and
mov
dec
xlat
inc
sub
out
inc
sub
jae
pop
mov
mov
mov
dec
out
mov
sub
cltd
das
cmp
lret
push
pusha
mov
inc
xchg
or
sub
push
inc
cmp
sub
mov
mov
xchg
jns
jbe
mulb
xchg
stc
jge
fiadds
push
jno
pop
mov
loopne
in
dec
loop
lret
lret
xchg
outsb
scas
or
and
pop
data16
or
in
pushf
insl
jmp
iret
mov
push
dec
sarb
mov
jl
aam
adc
fstpt
daa
loopne
mov
and
push
popa
inc
gs
add
ds
add
cmpsb
popa
mov
pushf
push
test
dec
mov
stos
xor
pop
jbe
xchg
bound
les
push
fisttpll
cli
mov
xchg
idivb
jle
rcr
sahf
mov
add
aam
pusha
sub
add
imul
xorl
sbb
jne
outsb
xlat
or
jo
xor
movsb
jecxz
ss
mov
adc
jle
loopne
aad
test
xchg
mov
inc
mov
xor
jne
push
lcall
in
fstpt
add
inc
mov
scas
sbb
adc
sbb
dec
or
and
imul
mov
ret
es
or
or
call
pushl
push
sti
dec
aaa
jge
rol
xor
and
jne
ret
fistl
inc
stc
pushf
mov
push
fwait
movsb
push
cld
imul
fs
fcmovnu
cmp
cmpsl
out
js
ficomps
sahf
inc
sahf
leave
mov
sub
in
jge
push
cli
add
inc
dec
push
aad
je
mov
or
std
sbb
subb
rcrb
inc
push
cmp
push
stos
das
mov
adc
pop
jg
out
mov
rorl
pop
sbb
mov
andl
insl
out
dec
outsl
insl
cmp
loopne
fistl
insl
xor
fmuls
mov
pop
xlat
and
sub
lcall
push
aaa
sub
iret
test
jne
mov
insl
test
pushf
cmc
out
xchg
sub
call
push
pop
les
out
mov
inc
ljmp
add
rolb
sub
mov
dec
movsl
mov
stos
push
addl
push
add
inc
adc
jg
mov
mov
iret
inc
add
scas
addb
dec
add
sbb
or
mov
inc
mov
rcl
iret
lea
mov
cmc
scas
rol
push
inc
neg
outsl
dec
sti
dec
test
int3
mov
mov
test
cltd
pop
mov
in
mov
jle
adc
xlat
pushf
adc
rcrl
adc
xlat
pop
or
or
xor
lock
xor
cmp
mov
loop
push
out
inc
int
xlat
add
sbb
push
adc
in
add
outsl
push
sbb
push
int
es
pop
or
lods
dec
shl
test
dec
stc
mov
mov
cmovnp
sub
fs
bound
subb
out
std
arpl
dec
pusha
out
enter
mov
adc
push
pop
inc
adc
xor
mov
je
lds
and
pop
sub
lods
mov
rol
lds
mov
mov
mov
adc
out
and
adc
insb
aas
ret
testl
push
dec
inc
adc
aam
scas
jno
pop
imul
popa
repz
fwait
repnz
andl
xor
lret
mov
das
push
sbb
mov
pop
mov
cmp
inc
fisttpll
ds
add
xchg
dec
repz
mov
inc
out
sub
add
fwait
jl
mov
push
mov
call
call
and
and
jg
out
iret
pop
sub
cmpl
push
cli
xchg
mov
and
sub
jg
xor
xlat
bound
cli
sbb
rorl
mov
aas
push
inc
repnz
push
mov
ds
shll
sub
shl
adc
lret
jecxz
xchg
call
aaa
or
out
push
adc
pop
or
flds
cli
lods
mov
and
jmp
imul
stc
pop
mov
inc
fldenv
adc
mov
mov
mov
pop
mov
mov
ja
lods
push
sbb
xchg
fwait
inc
and
ljmp
leave
sti
movsl
sub
sbb
sub
jmp
aaa
pop
insb
sbb
jle
mov
xor
loop
sbb
lds
jmp
push
add
and
addb
adc
shrb
das
sub
mov
mov
hlt
mov
or
les
aad
mov
pop
xor
jnp
dec
enter
xor
xor
xchg
xchg
loopne
jge
call
pop
mov
fs
leave
subb
cmp
add
sahf
movd
and
xor
mov
push
cltd
adc
inc
add
out
in
add
cmp
or
ss
std
cmp
imul
dec
leave
jae
add
and
in
pushl
popf
jne
cmp
jne
inc
and
pop
arpl
and
inc
add
mov
jo
mov
and
jb
out
push
inc
and
rolb
push
sbb
xchg
fldt
jmp
dec
xchg
fisubl
rorb
jmp
fcmovnu
stos
iret
outsl
cs
sarl
shll
pusha
fidivl
loop
dec
push
test
movsb
jnp
sub
and
rclb
icebp
mov
pop
sub
std
gs
sahf
loopne
mov
int3
pop
push
cli
pop
or
les
pop
mov
lock
test
lret
negl
lahf
aaa
fiadds
inc
inc
test
aad
outsl
jecxz
sbb
sub
sahf
addr16
lret
sbb
xchg
jae
loop
sub
jg
lahf
stos
mov
clc
pop
mov
std
test
inc
leave
imul
flds
mov
dec
cmpsl
pop
lods
xchg
dec
and
bound
cmp
cmc
imul
outsb
das
lods
inc
cmpsb
adc
mov
and
aas
jno
adc
push
sub
inc
xchg
ss
xchg
push
push
lds
xlat
insl
stos
sbb
push
lcall
std
xchg
or
sbb
int
add
push
int3
addl
sub
lret
sbb
or
mov
push
pop
sub
mov
sub
cs
out
fisubrs
into
stos
mov
mov
pop
mov
push
pop
repz
cltd
outsl
lock
fstps
mov
mov
cwtl
leave
cmpsl
lea
hlt
movsl
stos
mov
out
dec
out
xchg
ret
dec
mov
outsl
push
mov
sub
mov
add
add
jg
rcrl
add
mov
imul
sbb
mov
lahf
dec
adc
rorb
movsl
xchg
push
xor
push
mov
lods
repz
jno
and
xlat
jg
movsl
gs
clc
xor
push
in
xchg
leave
or
add
call
movsb
test
aam
ljmp
or
cmp
mov
inc
dec
insb
dec
xchg
iret
pop
out
fwait
std
cli
int3
push
out
sarb
lds
xor
jnp
mov
movsb
xlat
dec
mov
mov
lods
js
cmp
mov
cmc
push
int
xchg
mov
leave
bswap
in
aaa
test
test
sub
or
lods
ja
lds
cmp
xchg
ret
out
xchg
push
loop
lcall
mov
dec
dec
mov
dec
sub
jmp
ret
fld
mov
jp
inc
pusha
jl
sub
dec
sbbl
icebp
lods
pop
rclb
jb
bswap
dec
xchg
jle
xchg
sahf
xchg
cmp
lods
cltd
testl
inc
cmp
xor
sub
neg
ret
xor
insb
fdivr
mov
aaa
mov
mov
xchg
jo
inc
dec
push
jmp
push
call
add
sub
or
cli
pop
fs
dec
das
bound
loop
pop
sahf
into
mov
push
call
dec
loopne
sbb
aad
in
nop
sbb
cmpsb
popa
in
pop
sbb
adc
or
sub
jl
aad
es
aaa
inc
mov
pop
and
repnz
mov
cmpsl
jle
push
mov
cli
aam
and
sbb
std
sahf
shll
xchg
lods
pop
js
add
jns
lds
mov
test
push
lods
dec
mov
cmp
iret
lock
push
pop
fwait
inc
sbb
sub
insl
cld
ss
cmc
test
xchg
jp
xor
adc
orl
dec
mov
rcl
inc
xchg
mov
out
mov
lcall
jae
ja
pop
mov
aam
popa
xor
xor
addr16
sbb
das
cmp
jecxz
xor
in
je
mov
out
add
daa
inc
clc
negb
enter
add
pop
je
rorb
mov
gs
mov
test
out
mov
add
mov
icebp
fcmovnbe
inc
iret
loope
ljmp
mov
cwtl
ret
cmp
xor
mov
data16
fwait
xor
mov
mov
mov
data16
hlt
mov
int3
rclb
subb
cmc
ret
mov
push
xchg
add
jmp
sub
movsb
int
or
push
pop
test
cli
or
fwait
inc
cltd
or
xchg
add
out
xchg
rorb
jge
dec
shlb
fdivrs
dec
jg
push
outsb
cmp
push
scas
dec
notb
addr16
enter
mov
jg
pop
and
repz
int3
push
or
pusha
movsl
std
mov
sub
mov
dec
push
jb
out
notl
jmp
jecxz
sbb
adc
mov
jg
and
or
add
hlt
push
jle
xchg
xchg
sub
and
push
pop
mov
out
pusha
pop
mov
pop
inc
xlat
xchg
mov
out
xchg
pop
mov
shl
push
jo
push
jecxz
adc
push
sti
sbb
push
sub
inc
jae
xorl
sbb
xchg
pop
mov
pop
loope
int
orl
add
mov
aas
hlt
call
fs
mov
sarl
pusha
lods
mov
xchg
sbb
inc
mov
stos
push
pushf
adc
lds
jmp
mov
aam
sarb
dec
mov
and
loope
jmp
push
cli
loope
or
out
inc
adc
cmp
aaa
cmova
pop
shlb
push
xor
int
cmp
fisttpll
xchg
testb
mov
jbe
sub
inc
xchg
and
xor
push
inc
std
xchg
call
jns
inc
fnstcw
int
mov
cmp
dec
mov
mov
ss
add
adc
je
jecxz
lret
cmpsl
sbb
daa
loop
aam
and
hlt
lsl
push
fistl
jmp
mov
adc
pop
pop
mov
pop
sbb
mov
pop
cmpsl
jmp
sub
jbe
outsb
test
push
xor
sbb
movsb
mov
mov
mov
push
in
mov
lahf
xor
adc
mov
in
in
add
sub
or
inc
lahf
push
push
xchg
insb
shll
je
jo
sbb
repz
push
inc
cltd
in
push
cmpsb
lds
mov
les
add
popl
mov
int3
imul
int
scas
iret
movsl
int3
add
mov
adc
add
xor
shll
aad
bound
loop
sub
dec
inc
imul
addr16
sbb
hlt
mov
int
lea
pop
dec
and
adc
outsb
mov
xor
cmp
jbe
jecxz
add
faddl
decl
lret
les
js
cwtl
pusha
icebp
icebp
hlt
pop
sub
add
bound
dec
sbb
loop
mov
push
xor
or
leave
and
hlt
test
mov
hlt
nop
xchg
jmp
cwtl
mov
push
push
stos
inc
test
xor
cltd
push
lcall
sub
pop
sbb
imull
sarl
fwait
cmp
mov
test
stc
sub
rorl
mov
mov
and
es
inc
ljmp
lods
cli
ja
jns
mov
dec
je
sbb
xchg
mov
out
mov
rolb
je
jecxz
rcll
push
jg
cmpsl
jnp
mov
scas
ss
inc
std
xor
popf
push
xchg
and
xchg
xor
loop
inc
xchg
sub
fcoml
push
fisubrl
push
jns
stos
or
repnz
mov
negb
sahf
xchg
sarl
xchg
in
adc
jecxz
movsl
stc
push
lcall
xor
and
popl
mov
test
adc
rorb
adc
pop
sub
imul
mov
lret
call
movsb
inc
loope
scas
fs
xchg
cltd
sub
out
mov
aam
inc
mov
sbb
gs
daa
push
in
ret
mov
add
dec
xor
push
loope
pop
and
in
mov
mov
lods
lods
je
rcll
sub
std
xchg
sarl
std
mov
call
pop
sbb
push
jb
mov
and
push
jecxz
jb
or
stos
test
sub
lds
add
mov
fsubp
cmpsb
call
stos
leave
mov
in
aad
loope
adc
dec
mov
mov
sub
mov
mov
sub
mov
jl
xor
adc
icebp
xorl
sub
shl
xchg
mov
xchg
mov
adc
lea
sbb
jo
sbbb
repz
pop
rcll
stos
xor
lret
out
push
lcall
xor
xchg
pop
jbe
mov
fnstcw
mov
test
cmp
inc
dec
data16
mov
add
push
in
stos
ror
inc
pop
mov
mov
ss
adc
ljmp
inc
xchg
ljmp
add
pop
mov
jo
sbb
pop
scas
jae,pt
lds
push
xchg
jecxz
sub
dec
mov
dec
push
mov
fbstp
xor
mov
xor
sbb
andb
lcall
movsb
sbb
popa
fsubs
stc
jecxz
int
test
add
das
mov
aaa
lea
lret
gs
cmovns
or
pop
out
xor
or
jg
call
popa
pop
mov
repnz
xor
fstps
mov
mov
mov
rclb
fstp
dec
dec
enter
jbe
data16
sahf
adc
lock
push
ds
cmp
js
aas
cmpb
scas
call
cmc
outsb
sahf
rcr
push
into
out
mov
aaa
aaa
cmp
rcl
sbb
sub
jb
cmc
push
jge
xor
pop
cwtl
add
into
dec
lock
push
push
inc
or
jb
lods
and
mov
sub
inc
push
loopne
push
xor
pusha
cmp
test
xor
test
xchg
sti
ja
cmpsb
cwtl
movsl
cmc
mov
iret
subb
leave
or
std
mov
cltd
mov
mov
std
xor
push
in
hlt
jbe
jns
lock
pop
sub
mov
mov
fisubl
jmp
out
xchg
cmpsl
xor
and
sar
push
pushf
cmpsl
pop
and
jno
mov
lcall
insl
sub
imul
aad
std
shrl
mov
rep
pop
or
push
pop
inc
xchg
or
or
lret
jmp
int
rcrl
ret
nop
enter
out
in
shll
stos
pusha
fsub
test
fwait
pop
pop
std
xchg
dec
jmp
out
push
mov
fdivrs
mov
fcoms
and
lcall
mov
scas
jg
lret
sahf
scas
and
cmp
out
aaa
in
jle
inc
or
stos
scas
ja
inc
ret
xchg
or
out
fbstp
adc
lods
jo
or
jmp
jno
adc
jmp
pusha
or
pop
pop
sub
icebp
mov
loopne
sbb
outsb
sub
push
pop
loope
fsubl
stos
xchg
cltd
push
lods
inc
mov
pop
daa
pop
xchg
pop
pop
test
leave
add
cmc
dec
lret
jbe
and
cmp
idiv
dec
icebp
xlat
sbbl
scas
sub
and
bound
je
mov
lret
lcall
mov
in
sub
insl
inc
push
mov
in
movsl
gs
adcl
xchg
mov
and
shl
iret
enter
into
je
mov
hlt
push
sub
xor
jle
pop
scas
pushf
adc
cmpsb
xlat
push
repnz
in
ss
stos
sbb
repz
faddl
and
les
fs
test
push
notb
or
pop
sub
sti
out
fsts
xchg
jbe
adc
test
out
out
scas
ja
xchg
jo
or
jns
test
add
imul
fimull
stos
clc
add
cmp
stc
or
jg
jno
jns
rorl
mov
scas
sbb
addr16
lret
out
jno
or
cmpb
sbb
loop
dec
outsb
lcall
jnp
sub
sub
push
mov
pop
hlt
pop
loopne
in
enter
xor
xchg
sbb
lock
cmp
in
nop
std
push
out
sub
inc
jmp
dec
movzwl
fs
adc
sub
sub
pushf
add
js
test
enter
inc
mov
gs
je
mov
enter
pop
nop
inc
pop
xchg
int3
das
push
or
das
add
jne
lret
rcl
mov
adc
lds
mov
imul
imul
dec
cmpsb
push
fstpl
lahf
stos
push
in
xchg
sbb
jge
loopne
jecxz
mov
cmp
inc
js
test
xor
jae
jo
movsb
ja
js
sti
push
mov
pushl
addl
cmp
dec
out
or
pop
insl
and
roll
mov
ror
push
lret
xchg
mov
xchg
lahf
push
in
pop
clc
idivb
insb
je
add
dec
clc
sub
test
shufps
jae
and
out
stc
outsb
repz
int
dec
mov
out
inc
sub
stos
pop
js
xor
fs
das
fwait
cmp
dec
lcall
adc
and
xchg
mov
sbb
fbstp
repnz
push
scas
mov
fwait
or
mov
xor
dec
fwait
rcrl
mov
ret
xchg
icebp
cmp
sub
loope
and
mov
xor
sub
jge
xor
lods
bnd
add
loopne,pt
pusha
cs
testl
push
xchg
popa
push
ds
out
xor
sti
ret
inc
je
js
in
addb
push
add
cwtl
std
xchg
ret
insl
or
loop
lret
je
cmp
roll
push
jmp
jb
sbb
arpl
dec
ds
add
pop
out
outsl
scas
mov
leave
push
jne
nop
and
and
mov
mov
jecxz
scas
sahf
insl
sbb
add
adc
shl
aas
xchg
nop
into
fsts
push
mov
pop
notl
xor
mov
pop
enter
stc
xchg
cmpsl
repnz
nop
add
xlat
fsubl
jmp
inc
push
push
cmp
cwtl
insl
scas
xchg
adc
test
sub
add
ret
cmpsb
adc
les
push
jne
mov
pop
xchg
xchg
cmp
add
xor
push
stos
jbe
xor
xor
push
lret
jb
mov
sti
push
mov
cmp
jg
aam
imul
aaa
cmp
pop
inc
movsb
dec
in
loop
pop
cmp
pop
mov
inc
sbb
mov
adc
mov
loopne
and
fsubl
cmp
rcr
pop
mov
and
mov
fwait
sbb
pop
pop
inc
insl
sub
and
lods
cmp
dec
mov
jno
int
rolb
out
test
je
inc
mov
mov
cwtl
add
jno
lret
sub
frstor
rolb
xchg
andl
lea
cmpsl
adc
lret
mov
pop
and
mov
jecxz
cmc
std
adc
jnp
pop
int
jmp
mov
xchg
xchg
and
jmp
xchg
pop
mov
and
jl
into
sti
mov
sbb
gs
mov
sub
call
cmp
lcall
jne
mov
repz
mov
xchg
dec
mov
faddp
sbb
mov
or
rcr
jl
roll
das
xor
loope
cli
pop
lret
shrb
jb
pop
pop
out
mov
inc
in
inc
es
mov
inc
or
dec
sbb
inc
and
jno
sbb
lahf
data16
test
out
lahf
pop
scas
sbb
test
mov
pop
adcl
cltd
dec
dec
ja
pop
ret
cmp
add
jmp
lret
inc
dec
xchg
pop
fs
jnp
or
inc
pop
scas
pushf
cmp
in
cmp
aas
roll
sar
pop
mov
dec
xor
push
ret
xchg
mov
into
and
out
or
xchg
out
push
inc
xchg
mov
pop
in
adc
push
mov
into
fwait
cltd
pop
mov
aam
std
mov
pop
scas
push
insb
out
mov
out
or
add
and
dec
out
gs
sub
xor
cmp
pusha
adc
inc
mov
or
fmul
andl
iret
nop
lret
adc
sbb
lock
mov
in
movsb
imul
roll
or
popa
and
rcrb
and
sbbl
inc
lods
idivl
cmp
pop
mov
mov
cli
or
adc
das
cwtl
fwait
adc
fsubl
cmp
cmc
dec
lea
shl
mov
filds
testl
xchg
and
push
sti
jl
inc
adc
daa
scas
sbb
dec
mov
aas
mov
cmpsb
xchg
outsl
test
push
inc
xor
push
push
sti
loope
pop
jo
dec
je
fcomps
mov
adc
movsb
push
call
mov
cmpsl
mov
sub
inc
pop
fldenv
pusha
dec
ror
frstor
mov
inc
jae
mov
sub
lea
push
and
adc
fs
popf
mov
fs
mov
ja
out
and
mov
mov
das
orl
scas
aaa
sbb
push
shll
jge
push
stos
std
divb
rcrl
jp
ja
sub
inc
fwait
or
jns
call
or
inc
lahf
add
push
fsts
mov
mov
pushf
bound
push
lahf
sub
setle
push
pop
out
pop
sub
xchg
sub
inc
loop
int3
inc
scas
addr16
popf
or
fcmove
adc
sub
pop
mov
inc
pop
je
out
xchg
dec
outsl
scas
adc
repnz
or
mov
sti
das
punpckhwd
adc
mov
ljmp
push
or
xor
fidivrl
sti
dec
lea
push
popa
xor
or
adc
test
push
push
cwtl
or
adc
rcl
mov
in
das
xor
and
mov
cwtl
fldt
adc
into
add
mov
xor
pop
test
inc
push
test
push
cmp
cltd
aad
jle
inc
dec
or
lds
or
stos
cmpsl
stc
jbe
std
pop
cmp
cmpsb
enter
mov
sub
push
mov
inc
mov
inc
cmp
jg
jle
loope
mov
jmp
arpl
mov
jnp
or
jns
xchg
adc
sbb
mov
inc
imul
arpl
adc
mov
lret
sub
xchg
inc
into
lret
shrb
jo
adc
jbe
imul
fcomps
data16
in
clc
mov
and
jp
scas
xchg
xchg
outsl
push
jnp
push
arpl
and
gs
fisubrs
shlb
mov
push
inc
imul
add
or
negl
cmp
adcb
mov
add
sub
adc
cltd
icebp
je
mov
cmpsl
mov
enter
fildll
push
lcall
adc
stc
lock
nop
add
daa
mov
aad
xchg
iret
adc
add
sub
dec
pop
xlat
sub
pusha
cmp
mov
push
repnz
subl
out
out
mov
rcrl
xchg
cmp
gs
aaa
mov
push
push
ss
aad
test
shrl
aaa
adc
clc
and
mov
mov
dec
addl
mov
mov
les
jo
test
cmpsl
fisttps
mov
lods
cwtl
jl
aas
jne
clc
mov
and
push
cmp
cmpsl
clc
or
lret
xor
xchg
dec
cmpsl
fcmovnb
sub
inc
pusha
push
mov
and
ja
shrl
lods
xchg
adc
daa
xor
sbb
and
sub
lahf
sbbl
jb
rolb
sarb
out
mov
arpl
movsl
jns
stos
sub
out
xor
mov
push
mov
jnp
or
push
inc
sub
imul
push
mov
inc
push
repnz
js
mov
ficoml
cltd
popa
stos
sub
jns
lods
mov
lahf
lahf
enter
repz
leave
icebp
pop
xor
or
scas
cmp
sub
sbb
popf
bswap
inc
sbb
in
sbb
cmp
sbb
adc
fildll
bound
decl
and
jecxz
ret
mov
mov
push
sbb
ret
adc
gs
add
insb
pop
cmp
movsb
rol
cwtl
pop
sub
jmp
repz
adc
inc
and
inc
push
jg
sub
dec
mov
negl
and
dec
mov
ljmp
mov
roll
cmp
xor
insb
imul
mov
jmp
mov
ffreep
stos
call
xchg
popa
and
add
jg
pushf
ficomps
cmc
adc
jle
xor
stc
inc
push
jae
cwtl
pop
and
inc
add
call
mov
lods
adc
movsb
sub
sbb
enter
add
and
inc
add
dec
sbb
ret
sbb
xchg
in
clc
xor
cltd
sub
cmp
dec
daa
cmpl
dec
bound
test
inc
lret
mov
inc
mov
xor
sub
fwait
jg
in
aaa
xlat
mul
imul
into
push
jmp
lock
pop
pop
ds
jp
jmp
repnz
or
push
pop
mov
pop
add
stc
jo
insl
mov
inc
lods
ljmp
xor
lods
lcall
jg
mov
mov
jbe
push
jle
pop
pop
lcall
add
push
dec
sub
pop
mov
dec
cmp
subl
push
ds
mov
mov
sub
in
sub
fistpl
scas
out
cmp
arpl
fiadds
jmp
iret
cli
adc
lock
jae
enter
pop
lea
xchg
leave
and
andl
jle
and
jb
int3
in
arpl
sub
call
jmp
jns
dec
insl
dec
jp
jl
lret
cmp
inc
out
dec
jns
lret
or
lret
lods
stos
leave
es
push
push
add
add
sbbl
imul
ss
dec
in
push
lods
cmp
xchg
sbbl
cmp
mov
test
dec
or
pop
adc
xor
xor
cmpsl
pop
ficoml
icebp
push
xchg
sbbb
std
mov
sbb
pop
mov
jns
sbb
pop
mov
bound
or
cs
pop
testb
xor
shlb
fimuls
xorps
nop
mov
iret
jg
push
ret
bound
iret
inc
dec
test
lods
sbb
out
mov
mov
cmp
lods
outsb
add
subl
rclb
jmp
pop
stc
shrb
movsb
pop
in
sub
push
cmp
pop
mov
cmpsb
int3
pop
test
inc
cld
sub
pop
aas
inc
ljmp
jl
push
add
xchg
jp
adc
or
les
out
jno
xchg
test
mov
inc
clc
mov
stos
lods
jecxz
cmp
lods
lcall
call
pop
flds
pop
mov
push
cmc
push
cmpsl
mov
adc
aad
mov
mov
addr16
mov
push
les
mov
std
xchg
inc
fistl
gs
fdivrl
mov
sbb
mov
aam
dec
lret
out
xor
jl
xchg
mov
sub
hlt
dec
in
cmpsl
shll
xchg
mov
cmpsb
shll
xor
sub
mulb
sub
rcl
push
arpl
and
adcl
jns
cmp
aaa
sub
sub
stc
lods
sub
and
dec
ror
arpl
mov
jmp
jnp
popl
fnstcw
adc
dec
roll
sar
lret
mov
dec
fnsave
enter
inc
jmp
pop
adc
pusha
dec
xchg
jae
dec
jmp
pop
aam
add
dec
int
push
es
cmp
lods
cld
mov
add
daa
es
in
stc
mov
xchg
dec
sub
and
pop
mov
sti
imul
push
dec
inc
sbb
pop
shl
jg
lods
pop
int3
adc
rorb
xlat
ds
xchg
dec
int
sarl
test
pop
sbb
pop
popa
out
add
je
stc
jecxz
jns
jo
pop
call
mov
addr16
inc
loop
xor
leave
mov
stos
xchg
mulb
mov
imul
fxtract
pop
jp
in
jmp
icebp
add
pop
daa
in
lcall
out
sbb
ret
cmp
gs
insl
test
data16
outsl
mov
mov
or
jl
and
mov
xor
in
test
jno
popf
jp
aaa
inc
or
cmpsb
push
or
jns
or
je
xchg
cmp
sbb
fldpi
ja
xchg
mov
and
jecxz
popa
rcrl
jl
mov
je
and
sarb
sbb
dec
stos
push
sub
cmpsb
and
ret
ret
and
ja
pop
out
aas
jl
add
pusha
or
cs
add
lea
pop
pop
iret
lods
scas
call
jg
or
jns
rorb
test
inc
insb
xchg
cmpl
mov
push
out
cld
fldcw
jecxz
out
cmp
and
mov
sub
push
push
lods
mov
lods
aas
out
and
push
sbb
sahf
ret
fwait
inc
in
mov
or
shlb
cwtl
jne
popf
std
test
adc
inc
cwtl
push
aas
loope
push
std
adc
fmul
xchg
and
inc
loope
mov
fildl
jl
and
scas
sbbl
addr16
dec
ljmp
out
arpl
jmp
inc
jo
pop
or
call
pusha
push
add
ficoms
push
rclb
adc
sbb
and
mov
jo
sahf
adc
nop
scas
imul
mov
fs
scas
add
cltd
sbb
jne
nop
addl
jb
fbstp
jo
mov
jge
push
sub
sub
in
aam
add
rolb
imul
stc
lea
gs
loop
in
hlt
add
jl
daa
add
popf
adc
jp
loopne
pop
jmp
xchg
fldcw
out
xchg
out
add
into
add
jae
adc
rcl
notl
pusha
mov
es
sbb
jl
cmpsl
out
int
lds
dec
lea
dec
sarb
adc
mov
cmp
sbb
jbe
movsb
dec
push
arpl
mov
fcmovb
or
sub
lock
sbbb
xchg
mov
jo
xchg
test
decb
pop
mov
adc
arpl
loopne
stos
sub
imul
fneni(8087
repnz
lea
iret
jl
cld
sub
dec
sub
dec
repz
pushf
pop
inc
test
pop
mov
jb
fsub
cmp
xchg
xchg
adc
fidivl
mov
mov
popa
inc
mov
sarl
fsubl
test
pusha
and
fisttpll
sbb
imul
pop
lahf
push
shrl
ljmp
lods
cwtl
addr16
rclb
shl
loopne
shrl
adc
les
inc
lea
shr
lret
rorl
pop
cmp
pop
xchg
aas
int
mov
neg
sbb
dec
setg
mov
mov
push
add
xchg
ficomps
xor
jmp
sbb
jmp
sub
jno
bound
and
push
popf
les
and
add
ja
les
insl
idivl
es
filds
pop
jb
add
int3
dec
jp
add
xor
mov
mov
bsr
pusha
jne
lods
lds
shl
fldt
jbe
fimull
lret
aad
in
or
mov
call
mov
mov
add
inc
xchg
dec
dec
scas
aam
mov
jp
ds
mov
jne
push
pusha
enter
hlt
or
mov
add
cmp
fiaddl
dec
sahf
dec
int
add
jbe
add
adc
mov
dec
filds
lock
stc
add
stc
shlb
jno
inc
clc
repnz
jecxz
cmc
mov
aaa
or
cmpsb
dec
faddp
xchg
xchg
add
movsl
fldenv
nop
xor
arpl
pop
jns
xor
jle
and
mov
in
icebp
movsb
pop
cmp
mov
jnp
stc
mov
mov
lods
clc
ljmp
xchg
xchg
js
adc
adc
sbb
push
arpl
mov
xor
enter
jge
mov
xchg
xchg
mov
xchg
mov
and
jnp
test
dec
mov
ds
lds
jno
jb
inc
aam
stos
sub
test
mov
adc
out
aaa
xor
imull
or
icebp
push
lods
movsb
mov
xor
leave
fstpt
dec
adc
test
pop
dec
in
out
subl
nop
dec
mov
or
mov
out
stos
popa
stos
popl
mov
jp
or
jg
add
data16
adc
lahf
pop
test
cmp
into
xor
repz
ja
jmp
dec
pop
cli
fs
jne
imul
mov
push
sbb
cld
outsl
mov
mov
imul
sbb
jg
pop
sti
ljmp
popf
fadds
mov
dec
or
jl
mov
fists
jmp
jle
outsl
imul
enter
jl
call
insl
out
inc
in
cmp
hlt
out
inc
pop
jmp
and
add
and
pop
jmp
add
lods
mov
push
pop
dec
aad
dec
gs
mov
and
cmc
inc
pop
lods
loope
test
in
sbb
sti
negl
leave
insb
fsubs
sarl
aas
je
cmp
cmp
test
incb
hlt
jge
pop
outsb
and
into
inc
cmpsb
cmp
lcall
mov
mov
int
mov
add
sub
ror
inc
sbb
jmp
push
xor
adcb
sub
add
xor
inc
add
out
sub
or
inc
mov
scas
pop
repz
sub
loopne
movsl
xor
inc
fdivl
inc
add
mov
sahf
sbb
movsl
in
cmp
cmp
xchg
or
sub
sbb
sbb
xlat
aas
mov
js
cmp
mov
out
lods
inc
icebp
test
fdivp
enter
jmp
pusha
push
mov
add
mov
iret
push
test
sbb
and
sahf
icebp
inc
push
fidivl
inc
sub
push
xchg
fs
xchg
cltd
mov
shrb
pusha
mov
stc
movsb
fidivs
faddp
xchg
mov
cmc
loop
call
xchg
pop
jge
jg
icebp
add
cmp
les
shl
xor
in
sbb
xchg
mov
js
int3
pushf
ss
ljmp
sbb
es
int3
leave
jns
sbb
pop
push
cmp
mov
out
stos
pop
cmc
cmc
ror
movsb
jb
scas
pop
leave
mov
fs
or
dec
add
pop
or
adc
mov
mov
out
int
fs
mov
in
xchg
iret
sbb
hlt
jle
stc
pushf
xchg
cltd
or
or
aaa
xchg
push
fistl
mov
addb
call
xchg
adc
sub
rcr
scas
ret
push
add
out
push
inc
popa
sahf
mov
aas
in
cmc
cwtl
dec
out
and
push
adc
pop
xlat
lahf
add
inc
push
sub
sbb
fwait
sbb
pushf
mov
gs
lahf
inc
fdiv
insb
inc
ljmp
test
jge
fistpl
cmp
lret
lret
lock
repz
jle
ret
movsb
data16
mov
lods
fidivrs
xor
add
or
dec
jp
xchg
pop
xor
cltd
movsl
add
cmp
pop
repz
push
rorb
es
rorb
int3
mov
xlat
stos
mov
jb
or
arpl
dec
cmp
fadds
push
lea
xchg
dec
mov
js
jmp
xchg
mov
lcall
mov
stc
push
jne
int3
jbe
les
and
cmpsl
popa
mov
and
lods
inc
lret
xlat
cli
aam
fdivs
cmp
lahf
pop
xchg
dec
dec
std
roll
sarl
push
cmpsb
mov
xchg
roll
daa
cmpsb
mov
and
enter
test
in
js
mov
push
jnp
jne
mov
xchg
addl
push
aad
iret
sbb
dec
mov
inc
dec
add
and
call
cmp
js
out
mov
mov
xor
xorb
adc
push
cld
pop
iret
mov
push
ljmp
nop
pusha
out
inc
popf
inc
arpl
adc
jne
add
scas
adc
lock
and
push
jns
cmpsb
scas
mov
and
sti
mov
gs
pop
push
dec
lret
and
cmp
inc
fbld
xor
addr16
enter
jp
pop
push
addb
ja
adc
fwait
jns
aaa
into
mov
fldt
repz
rcrb
xchg
negl
push
fsts
flds
cmp
jnp
sub
or
pop
adc
leave
mov
pushl
mov
cmc
pop
and
mov
or
imulb
ljmp
and
adcl
imulb
les
lea
popa
cmpsl
es
ss
out
mov
push
jae
cmp
xchg
jmp
mov
inc
leave
sbb
js
dec
push
shr
lret
stos
andb
cmp
dec
mov
fidivrs
inc
xchg
arpl
movsl
cmp
iret
dec
loope
sahf
xor
mov
sub
std
xlat
xorb
mov
dec
jmp
sub
xchg
negb
mov
sub
pop
jecxz
lock
dec
hlt
imul
pop
mov
test
xchg
call
push
std
xchg
repnz
lret
pop
mov
and
xor
add
cmp
fists
cmpl
mov
repz
jp
dec
pop
fmull
or
dec
pop
in
lahf
ret
mov
ljmp
int
or
xlat
ss
mov
mov
xlat
and
jb
lret
inc
outsl
cmp
cmp
out
cmp
dec
hlt
mov
pop
xchg
ljmp
pop
xor
and
arpl
fs
push
popa
das
rorl
jmp
negb
fbld
xchg
lock
xchg
mov
cwtl
sahf
sbb
jg
lret
jae
sub
inc
or
sbb
sub
xor
icebp
lea
pushf
cmpsb
jne
outsl
cld
sbb
xchg
mov
jmp
add
add
ljmp
loopne
add
and
clc
lds
gs
sub
icebp
aaa
mov
in
inc
push
mov
xlat
cmc
jg
cmp
mov
lds
or
ret
xchg
jp
pop
pop
dec
cmp
jp
aad
dec
xor
jne
popa
loop
into
xor
adc
mov
jb
lods
xor
add
in
push
mov
xchg
fmul
in
xor
dec
adc
xchg
dec
popl
pop
sti
arpl
cltd
inc
pop
fadd
rorl
sub
int
push
notb
jle
pop
fs
jg
test
fcomps
or
ds
fsubl
add
imulb
xor
ret
loope
xchg
mov
xchg
push
jp
test
xchg
lahf
mov
or
and
popf
fiadds
push
sub
add
cs
sti
sub
in
loope
inc
inc
jl
pop
imul
xor
mov
jne
mov
movsb
decb
jo
testb
aam
popf
push
xor
sahf
repz
jmp
jle
cmc
mov
call
xchg
inc
mov
cmc
scas
adc
cmc
xor
push
jmp
xchg
and
or
cmp
fdivs
dec
sbb
dec
cwtl
push
inc
sub
inc
add
sarl
cs
inc
mov
imul
push
jo
cmp
inc
je
adc
outsl
dec
popa
out
cmp
push
rclb
filds
imul
inc
sub
push
fnsave
aam
out
divb
repz
pop
inc
dec
sub
fcoms
outsb
lcall
data16
test
jno
in
push
ljmp
mov
outsb
test
inc
pop
push
sub
aaa
dec
insl
sub
jno
cmp
fs
ljmp
lret
aas
dec
xchg
xlat
loopne
mov
movsl
stos
push
xchg
cwtl
iret
test
clc
out
mov
mov
mov
pop
into
push
jnp
cmp
and
dec
iret
popf
cmp
scas
dec
in
push
sbb
test
sbb
xchg
pop
inc
mov
test
push
repnz
mov
cs
jl
repz
jnp
push
sbb
mov
inc
adc
pop
jp
dec
mov
pop
sub
dec
push
out
inc
sbb
arpl
lock
xchg
and
imul
or
push
lods
and
sti
ficoms
sti
mov
clc
sbb
inc
add
xor
icebp
decb
inc
xor
lock
cltd
lret
mov
ret
sub
loop
pop
pop
and
mov
lahf
mov
sbb
mov
push
fs
test
sbb
cmpsl
ja
filds
dec
dec
dec
mov
and
mov
lea
push
mov
mov
add
pop
imul
popa
adc
mov
hlt
xchg
rcrb
mov
out
fcmove
cwtl
data16
mov
punpckldq
iret
sbb
sbb
sbb
xchg
rorl
ret
xchg
cmp
xchg
add
sub
adc
xchg
sub
arpl
mov
jmp
cmp
xorb
mov
out
jle
mov
aam
cld
xchg
mov
mov
loope
jecxz
icebp
jne
jge
filds
jnp
enter
mov
sbb
pop
pop
push
loope
lods
or
push
cwtl
dec
mov
sbb
dec
mov
lahf
mov
dec
mov
inc
lahf
mov
enter
jnp
and
fwait
clc
adc
iret
xor
in
dec
bound
dec
sbb
out
out
inc
shlb
ror
sar
repz
bswap
pop
sub
xor
test
and
fisubrs
jp
add
ficompl
aam
mov
cmp
shll
in
out
add
mov
push
jl
and
mov
loope
leave
aad
lds
gs
je
lcall
push
cwtl
mov
lods
push
mov
das
dec
xchg
mov
std
and
sub
mov
shr
mov
aaa
jae
xor
dec
sbb
test
mov
shrl
cld
push
mov
push
aas
xchg
mov
mov
dec
mov
mov
scas
test
ret
arpl
jae
pop
or
cwtl
push
rolb
push
xor
cltd
push
cmp
test
sbb
sbb
daa
nop
cmp
std
out
push
les
push
xchg
in
dec
insl
fadds
xorb
test
fistpl
stc
test
pop
insl
fildl
xor
cwtl
pop
loopne
mov
cmp
aas
push
sti
mov
sub
dec
pop
xor
push
inc
mov
adc
or
out
xchg
loope
fwait
sbb
loop
das
ret
nop
xchg
sbb
or
out
mov
pop
mov
inc
pop
adc
fistpl
in
push
xor
xorb
add
xchg
enter
jmp
lods
mov
ljmp
repz
pop
mov
outsl
adc
jo
arpl
xchg
fiaddl
sub
adc
dec
dec
daa
and
fnsave
mov
sub
mov
imul
mov
mov
push
scas
es
and
adc
imul
and
jne
xchg
cmpsb
lret
repz
pop
xor
xchg
xor
loopne
data16
adc
pop
fiaddl
cmpps
push
pop
rclb
jns
push
pop
and
call
or
leave
or
jle
orb
xor
into
dec
mov
stc
adc
mov
mov
das
mov
loop
pop
pop
dec
mov
ficomps
jle
mov
lahf
in
outsl
shll
xchg
jb
popl
push
loope
negl
ss
bound
out
scas
fidivl
mov
dec
ss
leave
push
push
subl
jae
xor
stos
stos
pusha
jbe
in
es
and
jle
jb
jae
call
sarl
sbb
gs
cmp
fisttpll
mov
or
nop
xor
cmp
xchg
pop
ja
mov
loope
xchg
scas
cmp
add
mov
adc
push
call
fs
lret
xor
rclb
jnp
jno
dec
mov
mov
push
ljmp
cltd
je
notl
xchg
jne
push
xchg
leave
fistpll
mov
pop
stos
ljmp
sbb
and
cmp
and
int3
adc
add
or
jns
jnp
fistps
xor
jg
data16
pop
jge
imul
push
outsl
inc
es
cmpsl
aaa
mov
pop
lods
jno
or
inc
fnsave
out
or
pop
xor
jmp
mov
mov
mov
lcall
pop
add
inc
aad
fiadds
out
lods
xorb
jp
fsubs
lret
add
add
inc
sub
adc
xchg
dec
jne
sti
out
insl
test
push
and
and
mov
scas
lahf
cmp
mov
cld
arpl
stc
sarb
inc
arpl
call
fdivs
cmp
les
mov
sbb
push
icebp
jb
push
cmp
out
mov
fnsave
or
lea
fidivs
xlat
pusha
push
mov
cmp
inc
adc
xor
add
pop
in
sar
xchg
imul
cmpsl
pop
mov
mov
inc
pop
and
movsl
dec
fst
mov
les
or
xchg
test
es
pop
dec
enter
daa
lret
stos
int
mov
pop
adc
jnp
sub
add
clc
test
mov
ret
je
sbb
ficoms
icebp
ror
and
pop
and
fstl
pop
filds
sub
cwtl
fcoms
xchg
outsl
out
ret
sub
mov
jns
mov
cld
xor
dec
or
icebp
xchg
ja
into
rcll
loope
iret
ret
pop
add
pop
fs
cmc
push
lods
enter
iret
inc
into
mov
mov
sub
jmp
enter
int
cmp
stc
cld
ss
push
fs
sbb
test
mov
insb
hlt
js
into
mov
outsl
ja
lret
js
pop
mov
mov
cmp
adc
dec
mov
enter
sbb
and
loope
or
or
je
cli
or
loope
int
aaa
push
add
and
push
lcall
push
fcmovnu
push
lock
movsl
push
test
dec
out
sbb
pop
and
mov
sbb
jmp
jl
mov
sbb
frstor
or
arpl
or
aad
cli
cmp
shlb
mov
call
loope
push
sbb
inc
jo
sub
dec
mov
inc
cmp
xchg
pop
and
adc
leave
add
sbb
push
out
xor
mov
adc
addl
sti
push
adc
mov
stos
int
andl
mov
or
sub
mov
pop
movsb
xor
dec
imul
in
dec
or
and
push
jmp
mov
mov
sti
in
cmp
xor
xor
dec
and
repnz
xchg
int
adc
push
dec
ljmp
jbe
pop
jp
testl
stos
out
pop
sub
fucomi
popa
int3
pusha
push
je
add
mov
fsubr
cmp
enter
shrb
jb
andl
mov
fdivl
cmc
xor
jno
cli
push
cmp
cli
lea
in
xlat
leave
mov
pop
jge
lret
sbb
fdivl
mov
or
xchg
popf
inc
cli
lods
pop
sahf
and
push
stos
jno
bound
or
insl
mov
jp
loope
add
loope
test
pop
or
push
repz
push
xchg
push
pop
aad
xchg
pop
jns
jno
add
or
mov
hlt
fsubrl
cmp
scas
fstl
dec
ret
out
loop
xchg
add
repz
and
mov
lcall
aas
ljmp
dec
mov
jnp
mov
cmc
outsl
frstor
pop
xchg
fcmovb
add
addr16
inc
fsubl
arpl
xchg
leave
mov
lret
sarl
test
mov
pop
test
cltd
in
xor
std
lds
mov
out
jecxz
mov
or
adc
scas
sub
ds
clc
xor
pop
sbb
adc
mov
andl
cmp
insb
test
xchg
mov
sub
sbb
jge
and
dec
into
das
pop
jl
xchg
xchg
bound
mov
sub
push
cltd
jb
icebp
pop
mov
push
sbb
pop
mov
dec
fsubr
testb
jg
sub
pop
ret
jno
push
dec
mov
jmp
int3
arpl
inc
arpl
jmp
fistps
cmp
popa
rorb
mov
dec
mov
repz
mov
mov
sub
jbe
sbb
xor
lods
push
jecxz
sbb
push
xor
enter
adc
cmp
dec
sbb
inc
rorl
scas
lret
inc
clc
lret
mov
cmp
movsb
addr16
mov
jno
adc
cmc
jp
mov
fs
outsb
add
mov
mov
add
jg
arpl
sahf
rcrl
aaa
loop
es
les
or
sub
xor
cmp
sbb
int
xchg
in
cltd
jo
sahf
sub
inc
shlb
dec
ljmp
btl
addr16
repnz
sub
add
fs
cs
loope
bswap
dec
test
sbb
fdivr
test
shrb
jge
add
sti
and
scas
lods
fildll
repnz
jl
sbb
xchg
movsb
jge
in
stc
sub
adc
test
or
ds
xchg
mov
loope
loope
mov
xchg
out
inc
pop
lock
std
lret
mov
and
repnz
inc
fistl
mov
stc
inc
sub
pop
popf
mov
into
mov
pop
ds
sub
mov
int3
or
sbb
mull
inc
pop
aas
scas
jp
cmp
scas
push
gs
popa
mov
roll
lods
mov
cmc
test
jl
mov
or
stos
lock
jne
pop
mov
push
cltd
inc
movb
sahf
lret
sub
dec
cmpsb
pusha
shrb
pop
icebp
lods
push
lret
adc
push
mov
pop
hlt
stc
sbb
sbb
shlb
mov
xchg
and
iret
test
mov
in
filds
sti
ss
fwait
cwtl
mov
push
cli
outsb
lock
or
clc
call
out
out
js
movb
insl
mov
out
in
mov
fwait
jns
repz
cmp
rclb
dec
jno
ds
xor
je
sub
data16
or
sbb
or
test
scas
cmpsl
test
fsts
dec
in
fisttps
pop
ss
xchg
add
or
ret
mov
lods
int
call
push
ljmp
mov
pop
fwait
mov
mov
sti
mov
jecxz
js
push
fdivr
test
jbe
das
cltd
cmp
push
push
xchg
aas
std
test
jmp
jge
push
cltd
fwait
testl
rorl
mov
imul
inc
mov
iret
addr16
ljmp
xchg
and
or
jmp
divl
inc
inc
lret
jmp
lea
xor
movsl
fs
mov
pop
sarl
loop
adc
loope
jne
dec
ljmp
xchg
jno
cld
fcom
and
aad
push
xor
insb
femms
and
repnz
jp
sub
xchg
fmull
lods
dec
das
jnp
push
ljmp
cmpb
out
ljmp
int3
lods
inc
arpl
jmpw
stos
aam
loopne
shr
or
xchg
stc
sub
shll
mov
fists
dec
dec
sub
jnp
adc
into
scas
jae
sbb
sarb
push
push
repnz
mov
pusha
cltd
dec
roll
xchg
jge
pop
mov
pop
xchg
loopne
sub
mov
mov
or
in
dec
mov
popf
xchg
fs
sahf
mov
aaa
jge
mov
push
imul
sbb
or
call
in
jg
popa
test
outsb
sbb
je
repz
inc
and
adc
enter
into
lock
and
jno
orb
ljmp
inc
mov
in
mov
jp
jne
mov
cmp
roll
xor
jno
mov
cmp
addr16
adc
push
push
push
push
mov
sbb
mov
lret
xchg
xchg
lods
icebp
outsb
pop
or
or
lcall
daa
jecxz
sub
jle
sub
push
and
cmp
and
mov
pop
or
mov
adc
pusha
out
mov
xchg
aas
push
xchg
xchg
add
sbb
dec
adc
xor
sbb
addr16
daa
movsl
cmpl
test
fmul
dec
mov
push
into
dec
enter
mov
sbb
xchg
adc
fists
imul
outsl
push
and
fistpl
adcl
in
lods
movsb
xchg
dec
dec
dec
or
jmp
js
insl
in
sub
mov
stc
mov
test
xlat
sub
mov
cwtl
inc
int
push
aad
gs
lds
rolb
cltd
pop
enter
pop
andl
xchg
stc
xor
jb
shlb
stos
sbb
rclb
je
xchg
jecxz
adc
decl
out
mov
imul
ret
sub
mov
add
pop
inc
xor
xor
movsl
jb
mov
lea
mov
inc
xor
sarl
repz
les
leave
cmp
adc
outsl
outsl
cmpsl
lock
scas
adc
pop
and
stos
adc
div
sub
aad
lcall
dec
ljmp
fsubrl
mov
xchg
sub
loope
andb
loopne
ja
cwtl
aas
movsb
mov
sbb
pop
pushl
mov
and
or
mov
lods
sub
das
rolb
mov
jmp
sti
and
pop
and
sub
cmp
xlat
scas
mov
in
dec
imul
in
test
aaa
sub
mov
or
lea
je
rclb
push
pop
xchg
arpl
inc
shl
and
sub
std
mov
sbb
js
pop
stc
xchg
jno
fcoms
stos
in
pop
pop
rorb
add
mov
xchg
insb
mov
xchg
dec
xorb
mov
cmc
gs
addl
cmc
jae
int3
push
sti
in
bound
dec
dec
js
or
aad
or
cmp
jae
adc
sbb
jne
mov
push
cmp
push
sbb
inc
ds
cmp
sarl
jae
hlt
or
adc
repz
mov
mov
xor
push
adc
adc
lcall
jg
mov
ljmp
enter
mov
fstenv
dec
pop
xchg
mov
mov
mov
add
call
cmp
imul
outsl
xchg
movsb
bound
lds
not
cltd
pop
outsl
ljmp
sub
push
hlt
inc
cmpl
filds
inc
fs
insl
push
sbb
sub
notl
pop
incl
inc
mov
mov
repz
aas
fwait
or
xor
iret
addr16
mov
sub
and
xchg
jl
xor
xor
and
std
std
nop
inc
scas
scas
push
repz
jmp
stos
fstps
sbb
iret
xor
arpl
rorb
aam
mov
enter
popf
repz
add
aam
imul
fsub
out
lds
orb
jb
fbstp
ja
jbe
test
in
mov
daa
lret
adc
or
xchg
sti
into
cltd
jnp
pop
inc
and
and
popf
ljmp
push
jbe
or
lods
or
pusha
cwtl
dec
inc
pop
popa
push
sbb
add
stos
outsb
out
lret
fidivrs
pop
sbb
xchg
test
pop
adc
jns
add
mov
enter
mov
sbb
ja
add
jno
mov
cmp
inc
bound
or
jae
cmp
ficoml
cmpsb
addl
leave
push
test
repz
imul
pop
cmc
jae
sbb
fdivl
scas
dec
addr16
stos
shrb
mov
leave
dec
push
js
cmpsl
loop
int3
into
add
jae
outsb
cmpsb
inc
jg
xor
xchg
jl
lret
adc
out
imul
xor
inc
icebp
ss
cmp
std
lods
aam
lea
dec
pushf
and
xchg
mov
ss
fldt
flds
push
lods
add
das
shll
repnz
jle
lods
xchg
int
mov
sbb
loopne
call
mov
inc
sub
pop
push
sub
mov
mov
mov
lcall
test
clc
adc
in
xor
pusha
xchg
push
pusha
or
lcall
bound
inc
pop
lcall
ret
xchg
cmp
addr16
loope
ds
adcb
fimuls
repnz
adc
call
scas
xchg
cmp
fldenv
sub
lret
loopne
movsl
cmp
inc
cmc
out
fsubrl
stos
cmp
xor
rcr
and
movsl
fs
icebp
mov
popa
adc
cltd
or
push
clc
xchg
adc
out
out
adc
inc
das
scas
push
inc
aaa
stos
jb
push
push
add
jecxz
out
mov
xorb
lret
sub
outsb
jecxz
mov
icebp
push
push
xor
sub
dec
sbb
jno
mov
jl
dec
push
pop
pusha
shrb
std
add
sub
arpl
rcll
das
iret
push
sbb
jo
push
mov
jnp
jo
pop
xor
dec
push
sbb
sbb
pop
pop
loope
adcb
inc
mov
inc
jns
jne
cmp
sar
in
dec
cli
shrl
in
pusha
sbb
xchg
sbb
rclb
aas
out
negb
ja
andl
or
das
sub
pop
jnp
xor
insb
stos
mov
bound
and
sbb
dec
aad
and
insl
push
dec
cmp
or
imul
adc
cmp
sub
mov
cltd
test
mov
and
jns
pusha
fsubs
sbb
rclb
pop
jp
push
stc
or
sbb
enter
pop
loopne
sub
mov
test
push
mov
xchg
nop
pusha
xchg
out
adc
mov
or
outsb
test
pop
mov
pop
enter
insb
cmc
test
push
loopne
jmp
std
xchg
mov
jno
scas
and
repz
fisubs
mov
mov
sbb
cmpsb
xchg
out
sbb
jnp
xchg
mov
in
and
popf
pop
cmp
lret
push
xor
dec
std
dec
jns
pop
insb
scas
hlt
insb
sub
lods
std
jmp
push
xor
xlat
dec
pop
pmulhuw
push
mov
fs
negl
test
jecxz
aad
xchg
rclb
mov
or
lods
lock
lea
cmp
aad
xor
repnz
and
xchg
into
fildll
movsl
sbb
mov
adc
mov
test
sbb
jecxz
lahf
leave
test
inc
ljmp
cmp
shl
es
rcrb
repnz
outsl
mov
fwait
movsb
cs
inc
mov
cmpsb
jge
jb
insb
sti
push
mov
fildl
jo
dec
cld
or
aad
push
movsb
jmp
or
arpl
cmpsb
xchg
cmp
sub
ss
pop
dec
cmp
mov
inc
add
sbb
xchg
push
cmpsb
pop
ss
popa
push
inc
inc
fnstsw
ljmp
adcl
xchg
sub
out
dec
and
data16
xor
xor
xchg
jno
mov
jecxz
repnz
jbe
mov
push
mov
jbe
jo
pop
push
sti
adc
sbbl
test
pop
shlb
popf
sarl
cli
or
push
fildl
enter
clc
sbb
sub
js
lds
jnp
dec
inc
sub
push
mov
push
sbb
mov
mov
hlt
jge
add
test
push
mov
push
sub
mov
push
lods
inc
jle
loopne
popl
nop
ret
pop
sarl
xor
rcll
mov
popa
or
es
add
add
sbb
aaa
push
shl
cli
aas
cmpsl
cli
and
pop
sbb
aas
inc
dec
push
lret
lods
pushf
sbb
call
xor
push
sbb
adc
xor
or
out
das
push
shrl
in
out
jl
adc
je
mov
call
leave
xchg
push
mov
sbb
data16
sahf
sbb
mov
movsl
sbb
mov
push
mov
fimull
push
mov
aad
jle
mov
clc
addb
sahf
mov
sbb
je
xchg
xlat
mov
push
mov
lods
stos
es
in
sub
jno
xlat
pop
adc
das
ds
insl
adc
inc
cli
ja
sub
jnp
cmp
mov
or
cmp
mov
mov
repnz
mov
flds
mov
or
sbb
cltd
push
out
push
mov
xor
xor
addb
sbb
sar
stc
and
pop
loopne
push
js
out
mov
pop
push
ja
push
in
cmp
outsb
pop
movsl
pop
add
jnp
sar
add
fucom
mov
subb
jge
gs
xor
repnz
inc
sub
mov
sub
popf
leave
xchg
mov
imul
mov
pushf
jle
add
or
push
sbb
inc
mov
cltd
addr16
sti
inc
loopne
int3
icebp
leave
and
adc
push
dec
pusha
mov
inc
or
test
mov
fnstcw
inc
sub
call
mov
pop
xchg
sub
scas
mov
or
push
movsl
or
fucomip
js
out
jmp
xchg
sub
or
cli
cmp
scas
aam
add
fiaddl
addl
ja
adc
lock
adc
mov
in
inc
sbb
jbe
js
seta
mov
repz
adc
push
xchg
jns
or
or
movsb
or
addl
ret
add
or
pop
pop
mov
mov
lcall
inc
sub
sub
divl
enter
mov
push
loopne
add
ljmp
mov
adc
mov
pop
sbb
pop
inc
mov
adc
popa
incl
cli
pop
or
and
sbb
lret
mov
push
std
ss
mov
sbb
push
mov
repz
ja
or
cmp
adc
into
push
fcomp
ljmp
adc
lcall
jl
aad
gs
mov
xorl
in
enter
icebp
popa
pop
bound
adc
or
xor
xor
cmpsb
lret
lea
cli
cmpsl
sub
inc
filds
add
pop
xchg
into
jmp
pop
adc
imul
adc
cmp
nop
dec
xor
insb
add
sub
movsb
mov
mov
test
test
test
push
jmp
adc
sub
fists
int3
sub
jns
dec
into
fdivrp
and
cmp
fcoms
out
negb
mov
sbb
jne
sub
cmc
sub
adc
xlat
pop
push
imul
test
push
and
into
bound
cmpsl
js
jle
ss
jge
mov
ret
inc
orl
dec
imul
incl
rclb
fld
and
or
jge
sub
xor
push
ss
lahf
jg
xor
fstl
dec
and
lcall
adc
jb
fwait
dec
sahf
jno
lcall
push
test
adc
mov
jno
dec
jne
pop
fildl
ljmp
into
fwait
push
and
and
push
lods
roll
hlt
mov
adc
jnp
rcpps
add
stos
stc
jmp
mov
or
enter
adc
mov
outsb
add
xchg
dec
push
jle
ret
jecxz
shrl
lock
in
dec
dec
adc
jo
js
mov
nop
daa
and
and
lods
pop
outsl
rcrl
mov
jge
jnp
scas
sub
ljmp
outsb
mov
or
mov
popf
roll
stc
mov
mov
ss
fcompl
xchg
daa
lret
jnp
pop
mov
add
and
xchg
push
xchg
inc
fcoml
sbbl
fs
fdivs
ret
gs
sub
int
xor
pop
movsl
es
push
and
hlt
pop
sub
mov
xor
push
pop
inc
fstpl
dec
int
push
test
test
xchg
mov
push
or
test
mov
fwait
movsb
fnstsw
and
loopne
mov
pop
cli
inc
gs
sahf
cmpsl
pop
xchg
pop
sub
push
js
sub
pop
test
cmp
stos
arpl
jmp
pop
in
xor
cwtl
adc
arpl
out
inc
cmpsl
push
cmc
dec
mov
or
loope
imul
into
ror
sbb
mov
cmpsb
into
pop
sub
xor
loop,pn
repnz
in
test
lret
jb
jle
std
testl
xor
mov
std
mov
pop
xor
mov
or
pop
popa
fiaddl
jnp
jno
dec
or
xor
sbb
jne
jl
or
mov
in
xor
inc
xlat
incb
dec
cli
xor
aad
mov
rorb
and
jo
sbb
sbb
int
nop
fisttpl
xchg
jnp
call
inc
or
adc
pop
inc
insl
jp
sbb
dec
lcall
inc
sbb
std
xor
inc
lds
sub
push
mov
pop
jne
loop
idivl
mov
lret
mov
jne
sub
lods
inc
lcall
mov
xchg
fidivrs
lcall
sbb
pusha
in
jle
enter
mov
cmc
dec
lss
add
fcmovnb
stos
lahf
mov
nop
push
sbb
into
jge
setg
test
mull
adc
and
mov
cmp
sbb
in
jbe
adcb
cmp
xor
or
and
add
popf
dec
loop
sbb
jl
mov
ss
inc
jo
mov
cmp
or
dec
inc
cmpsl
jno
mov
test
daa
push
ret
shrl
sar
cmp
mov
ds
test
jns
bound
push
lret
xchg
and
movsb
jno
shl
xor
loopne
orb
roll
popa
arpl
or
ss
dec
mov
sbb
pop
push
xor
push
xor
pop
inc
fsubrl
ljmp
pop
dec
sti
imul
enter
xchg
jnp
aaa
or
jecxz
fisubrs
cmp
int3
lret
inc
out
add
lret
add
dec
loope
lret
cmpsb
in
cmc
scas
loopne
movsl
mov
push
inc
and
into
stos
lret
and
aas
adc
adc
pushf
les
es
push
jae
sti
add
xor
pusha
and
adc
adc
adc
lret
cwtl
pop
popf
icebp
xchg
pop
jmp
push
data16
push
inc
mov
ficomps
addr16
mov
or
std
mov
mov
ljmp
push
jle
inc
push
xchg
mov
mov
vmovhps
cmp
mov
add
lea
imul
and
and
faddl
outsl
pop
sbb
loop
and
mov
add
sti
cmc
mov
mov
pop
pop
ja
testl
sub
mov
mov
outsb
in
fnsave
mov
mul
push
jecxz
dec
cmpb
add
cwtl
pop
cs
sub
xor
insb
stc
ljmp
jmp
lcall
sub
loope
das
mov
sub
into
enter
hlt
jnp
push
sahf
xchg
lds
rclb
inc
rorl
jne
mov
mov
mov
cmp
fnstcw
movb
jae
das
test
imul
jg
test
dec
mov
loop
xchg
aad
xchg
push
xor
cs
cmp
push
cmp
aad
ds
scas
inc
dec
ret
xchg
inc
loope
movsl
adc
sub
call
pushf
xchg
fidivl
shlb
push
inc
bound
mov
pop
iret
mov
loope
mov
adc
mov
movsl
sub
pop
inc
lea
xchg
aad
xor
jle
cmp
sub
divb
scas
xchg
dec
or
mov
enter
dec
or
sub
xchg
cmp
push
and
jbe
cmpsb
repz
test
or
mov
mov
and
loope
and
mov
push
stos
aas
test
jl
sub
mov
rcr
nop
jmp
xor
mov
mov
cmp
push
roll
imul
out
sub
mov
jge
nop
cmp
repnz
cwtl
std
jmp
into
add
lret
std
push
fists
cs
xchg
or
mov
cmp
std
push
daa
bound
xchg
insb
leave
and
movsl
mov
adc
mov
cltd
pusha
xlat
aaa
cmp
xor
or
shl
dec
test
ljmp
push
mov
jne
int
mov
sbb
stos
enter
xorl
rcl
add
inc
ds
and
dec
daa
push
adc
add
hlt
std
inc
fbstp
mov
adc
pop
or
clc
adc
loopne
sbb
ret
jl
xchg
mov
add
inc
hlt
mov
icebp
xor
outsl
pop
or
mov
jae
in
call
xor
je
lret
scas
js
xlat
not
lds
leave
and
mov
lods
adc
lret
pop
movsl
fstps
stos
call
push
repz
jge
and
mov
repz
sub
jb
dec
mov
cld
xchg
jns
mov
jno
in
mov
pop
push
hlt
lcall
push
cltd
divb
or
stos
xchg
cmp
rorl
mov
daa
lods
sar
iret
outsl
cmc
and
ret
outsb
mov
xor
or
orl
call
loop
mov
jl
mov
fxch
scas
out
and
sbbb
or
add
jg
adc
mov
stos
jge
aaa
js
adc
insl
cmp
xchg
or
sub
xor
or
or
push
popa
and
sbb
imul
push
movsl
es
enter
es
xor
pop
cltd
test
adc
mov
inc
aam
addr16
add
fidivrl
jne
push
mov
sub
lods
test
pop
cmp
inc
arpl
fstps
sbb
push
mov
xchg
out
lock
or
mov
mov
xchg
popa
xchg
and
push
and
aam
in
xchg
cld
loop
jbe
loopne
call
test
sub
out
pop
xor
inc
repnz
xor
sahf
dec
pop
cwtl
sub
leave
mov
or
stc
mov
fcoms
scas
mov
movsb
mov
insb
dec
mov
ret
stc
mov
lcall
rcr
mov
mov
push
jnp
mov
or
std
ss
or
addb
xchg
lock
inc
xor
sub
push
and
pop
outsl
push
adc
call
in
aad
data16
std
sub
arpl
push
and
movswl
imul
das
stc
xlat
xchg
loopne
lods
cmpsl
ja
push
ja
clc
fwait
incb
add
sti
stos
pop
xlat
imul
mov
ja
leave
in
test
sub
pop
aaa
sub
loop
scas
fistps
pop
pushf
iret
stos
into
mov
scas
sbb
stos
jmp
add
sbb
mov
inc
push
xor
mull
push
scas
mov
pop
cmp
mov
xchg
iret
cmp
daa
cmpsl
xchg
mov
scas
rolb
test
pop
fnstcw
xchg
js
xchg
cmp
push
gs
jnp
fs
adc
dec
xchg
fadd
out
push
popf
test
xlat
icebp
insb
push
mov
insb
mov
frstor
addl
dec
cmpsb
pop
mov
xor
inc
adc
mov
mov
dec
sbb
adc
xor
daa
test
cmp
les
cwtl
aam
xor
xor
insl
add
mov
push
ret
inc
xor
pop
cmp
dec
scas
insb
out
cmp
push
mov
addl
jb
pop
pop
repz
mov
mov
mov
jb
pop
sti
es
sub
cld
jb
scas
dec
pop
pushf
pop
mov
mov
rclb
loope
xor
pop
jo
loope
push
push
push
mov
and
push
inc
ljmp
adc
daa
sub
btc
test
movsb
in
into
mov
pop
negb
jl
xchg
xor
cmp
adc
insl
sub
fs
jo
jno
xor
daa
std
dec
jns
xor
adc
mov
xor
ret
fwait
ds
xchg
ds
pop
jno
mov
jle
jne
sbb
push
mov
mov
icebp
adc
and
adc
int
pop
sbb
pushf
pop
jne
rcll
aam
fsubrl
sub
or
inc
insl
stos
inc
mov
push
mov
in
lock
inc
pop
ret
jmp
mov
stos
pop
popf
lea
lcall
outsb
sub
pop
and
adc
mov
popa
push
lock
dec
pop
out
mov
ds
lahf
lods
inc
lea
or
cltd
es
sub
sub
mov
lret
iret
cld
lds
xchg
or
jp
add
xchg
xor
dec
cmpsb
lods
and
dec
loopne
xchg
mov
jp
arpl
daa
repz
xchg
addl
xchg
pushf
jge
mov
or
sar
adc
add
clc
test
in
push
xchg
test
sub
sub
lcall
sbb
adc
mov
mov
pop
adcb
jbe
pop
xchg
test
inc
mov
test
dec
inc
sub
mov
fcompl
shrl
push
xor
rcl
jne
xchg
insb
test
fisttps
aaa
ffree
shll
sbb
jecxz
lcall
xlat
mov
clc
mov
sub
push
out
shl
jecxz
add
out
test
lahf
pusha
jg
testb
out
arpl
adc
cld
repnz
insb
pop
fcomps
push
mov
sti
ret
hlt
inc
push
sbb
dec
jp
xlat
mov
inc
sbb
fcoml
cld
sub
add
popa
pop
inc
pop
stos
out
cmpsl
inc
daa
add
inc
pop
bound
sub
mov
push
cld
cmpsb
call
ss
icebp
mov
scas
scas
stos
jo
and
lcall
repz
push
adc
and
ss
in
or
cwtl
aas
xchg
xor
std
xchg
mov
in
movsl
scas
iret
repz
mov
push
add
daa
add
repnz
sbb
sub
pop
loop
fstpl
adc
mov
xchg
clc
jnp
mov
xchg
test
cltd
insl
repnz
sbb
inc
mov
xor
mov
mov
leave
add
jecxz
fmulp
out
es
movsl
shlb
gs
cmp
test
repnz
les
push
push
push
inc
test
lea
jl
mov
xchg
xor
or
sbb
loope
mov
insl
rolb
int
idivb
mov
leave
sbb
push
adc
push
xchg
andl
inc
xor
mov
pop
stos
mov
adc
pop
push
test
push
stos
int3
dec
and
lcall
int
jl
rorl
sbb
sub
cmp
push
jne
aas
sbb
jecxz
sub
push
imul
mov
push
hlt
cwtl
mov
add
inc
iret
inc
inc
insb
sub
shrb
pop
adc
insl
jecxz
and
mov
inc
xor
adc
test
imul
sbb
inc
add
jecxz
test
and
js
mov
test
lahf
xchg
pop
js
cld
testl
inc
push
xor
adc
in
outsl
insb
out
fdivl
int3
cs
mov
popf
fs
xlat
push
add
js
pop
push
sub
fdivl
xchg
jmp
jmp
mov
shl
sbb
cmp
and
add
push
push
movsb
insb
mov
call
xor
popl
in
cmpsl
imul
ljmp
or
sbb
jmp
test
scas
sar
imul
jmp
aam
sub
sub
dec
xchg
cmp
lret
imul
adc
es
mov
xor
cmp
stos
or
and
mov
movsl
aam
shll
push
fistpl
dec
int3
imul
dec
and
jbe
pop
repnz
push
daa
xchg
ljmp
test
cmp
fwait
xchg
lcall
bound
outsl
push
xor
notb
int
pop
in
stc
dec
jg
inc
imul
or
xchg
into
rcll
or
mov
mov
xchg
ret
xor
mov
iret
in
sarb
nop
jmp
add
repz
pop
ljmp
or
dec
jecxz
ja
cmc
in
or
lock
or
mov
mov
je
jg
dec
add
mov
movsl
lret
loop
shlb
push
push
fldenv
decb
or
add
cmc
lahf
aaa
cmpsb
jae
cs
sub
push
mov
mov
and
sub
adc
sub
push
nop
mov
inc
lods
test
leave
add
test
rorb
cs
outsl
in
or
adc
cmp
lret
jg
xchg
dec
aas
xor
test
nop
ljmp
jne
outsl
movb
push
xchg
clc
shrb
pop
into
sub
sbb
pop
daa
inc
test
fsubrs
cli
fldl
ds
jo
xchg
cmp
aad
stos
mov
ja
xchg
jo
xchg
or
fwait
cmp
jne
out
pop
xor
adc
mov
pop
sub
fs
dec
sti
pop
inc
xor
ja
or
outsl
insl
push
dec
or
sub
outsl
push
push
ss
ficoms
aaa
push
cmp
js
shr
mov
adc
mov
push
jns
test
sbbb
push
and
cmp
bound
jg
mov
pushf
sub
cmp
add
sub
xor
test
cld
mov
jmp
cmc
cltd
push
je
and
add
jne
xchg
and
int3
jns
in
pop
mov
test
in
aaa
jb
cltd
mov
adc
insb
bound
dec
hlt
mov
jmp
adc
in
shll
xor
mov
jmp
mov
rolb
out
lret
outsl
inc
pop
add
pop
mov
mov
cmpb
sbb
mov
xor
mov
jecxz
dec
stos
iret
cli
lods
arpl
pop
cmp
shlb
and
mov
out
test
push
dec
pop
mov
mov
lea
int3
dec
test
pusha
arpl
xor
imul
dec
inc
cmp
fnop
shll
stos
xchg
sti
sub
pop
fildl
sub
lcall
cmpsl
and
xchg
out
call
xor
mov
ja
push
xor
test
sbb
jecxz
fldl
call
dec
std
cmpsb
ret
pusha
ror
in
loope
bound
dec
aam
push
xchg
call
je
es
inc
dec
jbe
jecxz
cmp
pusha
ja
outsl
cld
std
push
dec
adc
dec
cmp
clc
xor
and
popw
adc
lahf
xlat
sub
push
movsl
sbb
testb
sub
pop
push
add
iret
shl
test
jmp
pop
xor
test
pop
mov
xchg
add
popa
sbb
sbb
mov
dec
pop
jg
daa
or
fs
mov
shlb
lea
pushl
out
or
and
adc
mov
sbb
push
add
sub
sbb
and
mov
or
push
sti
and
dec
push
movsb
adc
mov
loopne
mov
inc
sahf
nop
sub
enter
pop
sbb
ficoml
dec
sbb
xor
fistl
sti
shl
xlat
pop
xchg
xchg
jp
subb
shrb
adc
mov
cld
int3
out
push
enter
mov
rcr
test
jecxz
mov
arpl
cmp
testb
and
xchg
xchg
aam
push
loope
pushf
adc
inc
pop
les
or
xchg
mov
xor
push
shl
scas
add
iret
and
and
into
je
sbb
adc
push
je
push
and
test
or
mov
cmp
push
mov
fisubrs
imull
dec
out
pop
push
mov
push
mov
xlat
and
xor
mov
and
sbb
sbbb
icebp
sar
lret
into
jne
xlat
test
sub
ljmp
test
push
aas
pop
adc
mov
jmp
rcrl
xchg
or
or
and
lret
push
aas
mov
inc
dec
mov
mov
pop
dec
or
push
push
nop
and
lea
xor
insl
mov
push
inc
and
movsb
inc
jno
jp
xor
dec
sub
mov
or
int
negl
nop
cmpsl
add
xchg
pop
sbb
dec
mov
scas
push
cwtl
pop
call
adc
pop
out
stos
mov
hlt
out
testb
cmpsl
aas
mov
pop
loopne
ret
shll
pop
repz
add
push
lret
xor
fstpt
aam
add
loopne
add
mov
inc
and
mov
adc
scas
lret
hlt
lret
incl
dec
push
jae
mov
jnp
pop
dec
arpl
rol
pop
mov
sub
mov
sub
xchg
in
dec
and
adc
ficomps
or
outsl
xchg
pop
xor
daa
xchg
xchg
je
xchg
jmp
jmp
aad
in
sub
sub
cmp
ljmp
cmp
dec
insb
sbb
mov
negb
orb
cmc
pop
cmp
mov
cmpb
xchg
sub
lcall
mov
test
out
jns
jle
outsb
pusha
pop
push
sbb
xchg
adc
jae
arpl
push
and
dec
and
push
pop
jne
jnp
mov
cs
aaa
insb
mov
fstps
movsl
cs
iret
push
addb
out
leave
fisttpl
xchg
mov
cltd
in
dec
loope
cmpl
aam
out
jb
js
xor
fisttpll
sbb
jb
jne
push
sub
push
sub
pop
mov
fmull
sidtl
loop
pop
xor
mov
mov
sub
inc
jne
and
lods
mov
cmp
mov
and
add
dec
mov
lret
sub
jns
cmc
xchg
dec
jno
inc
inc
add
arpl
jle
pushf
push
testb
int3
pop
jecxz
les
xorb
mov
mov
loopne
shlb
adc
jno
mov
push
sub
icebp
mulb
pop
aas
pushf
dec
iret
cmpsb
sbb
mov
jp
adc
jmp
sbb
push
or
pop
test
mov
jle
cltd
nop
xchg
lock
pop
pop
dec
fldl
mov
mov
mov
fwait
pop
inc
dec
push
lods
ja
lods
jp
mov
repz
push
imul
or
rcl
pop
mov
push
ffree
xchg
add
mov
xor
mov
cli
test
or
push
inc
mov
lret
sub
pop
mov
mov
push
push
cmp
xor
out
pop
pop
rorl
xchg
or
jmp
mov
push
fidivs
push
push
outsb
shll
scas
ss
xor
xor
nop
inc
fistl
or
fwait
movsb
push
outsl
fwait
loopne
xlat
pop
pop
rclb
mov
fwait
rsqrtps
jns
sbb
inc
lods
jne
sbb
mov
mov
sub
xor
ss
xor
test
aaa
addr16
imul
mov
insl
mov
jecxz
sbb
fidivl
mov
cmp
in
push
lcall
mov
das
or
or
popf
sarl
xchg
movsb
arpl
or
inc
cmpsl
mov
and
ljmp
xchg
out
jmp
das
xchg
or
xchg
or
xor
leave
out
cmpsw
xchg
je
jae
xchg
add
mov
mov
aaa
mov
or
data16
xor
rep
push
add
shlb
aas
hlt
jg
pop
adc
pop
sarl
mov
cld
inc
or
fldt
mov
data16
out
fiadds
rorl
inc
jns
fstps
or
mov
mov
and
mov
loopne
ret
xchg
je
xchg
push
push
adc
and
js
push
je
sahf
xchg
mov
ret
or
jle
xor
push
xchg
sub
cli
dec
ljmp
sub
jecxz
in
iret
jg
scas
mov
sbb
xchg
rcl
and
sbb
lds
inc
fbstp
stc
or
aam
movsb
in
dec
jne
xchg
ret
pop
icebp
pop
icebp
jne
mov
and
idivb
cmp
out
lret
adc
arpl
push
sub
xchg
ficompl
jmp
popf
and
andl
cmp
ljmp
popa
out
mov
mov
pop
mov
add
mov
jbe
les
pop
adc
add
xchg
aaa
push
ret
fdivl
jns
cmpsl
enter
ret
dec
in
fistl
ljmp
mov
mov
mov
mov
push
and
in
sbb
lds
fcompl
sbb
out
push
pop
push
cmp
data16
lods
out
adcb
adcl
icebp
bound
call
or
jbe
out
movsl
cmc
cmpb
or
push
cld
pop
jbe
pop
jnp
imul
cmpsb
in
rolb
jne
inc
rolb
push
test
push
jae
popa
daa
push
cmp
mov
cmc
adc
push
mov
or
pop
mov
arpl
sub
sub
shlb
cmp
mov
sbb
mov
sub
pushf
mov
sub
or
mov
add
ljmp
fwait
push
sbb
paddsb
xchg
sbb
pop
pop
sbb
xchg
mov
aaa
out
inc
xchg
in
lret
mov
shll
and
xor
and
lods
mov
mov
hlt
or
push
andl
push
mov
mov
jnp
mov
fucomi
cmp
scas
and
dec
sub
mov
stos
jnp
push
iret
push
lea
mov
fs
inc
test
adc
lods
nop
pop
and
sub
xor
loope
xor
mov
les
movb
xor
pop
aad
xor
addr16
sbb
rolb
stc
push
mov
cmpsb
push
adc
ja
cmpsb
fimuls
pop
and
test
js
scas
cli
int3
lret
adc
int
add
insl
je
iret
imulb
and
and
adc
adc
xchg
iret
push
sbb
adc
mov
pop
bound
mov
mov
arpl
dec
mov
cmp
cld
xor
enter
out
pop
outsl
add
lock
mov
add
mov
mov
sbb
fidivl
icebp
ss
loopne
jg
outsl
jae
icebp
int
std
jb
scas
ret
mov
pop
xchg
ds
sbb
mov
mov
fidivrs
adc
add
jl
add
mov
fwait
pop
add
push
lock
rorb
outsb
xchg
fnstsw
mov
movsl
nop
js
lret
cltd
jns
fisubrl
loope
sub
push
fdivrs
add
leave
femms
shlb
mov
outsb
sbb
out
xchg
xor
and
lds
int3
scas
jmp
pop
dec
sar
pop
mov
mov
or
cmp
mov
in
imul
xchg
out
push
repnz
cmp
dec
pop
scas
dec
xchg
add
xor
cmpsl
jne
pop
das
cmp
gs
in
xor
bound
outsb
call
popf
hlt
xlat
in
pusha
scas
aas
cmp
xchg
scas
and
aas
mov
xor
mov
lds
arpl
cmc
test
test
rcrl
inc
fldl
out
into
outsb
mov
fcos
push
and
fisubrl
popf
adc
popa
mov
inc
sbb
xchg
je
mov
xor
fildl
cwtl
imul
stc
add
jecxz
xor
out
adc
push
sahf
sub
js
or
f2xm1
sahf
ret
movsb
sub
repz
adcb
sarb
mov
fistps
mov
nop
dec
and
jno
enter
pop
lods
pusha
xchg
xorb
xchg
gs
shl
dec
into
dec
dec
nop
clc
aas
mov
add
add
or
in
push
popf
xchg
js
mov
push
and
and
stos
daa
orl
mov
mov
out
push
cmp
xchg
sbb
jne
and
pop
fmull
iret
mov
movsl
mov
cmp
mov
cmpb
lds
jnp
lea
popf
ret
and
mov
lcall
loop
movsl
jbe
jae
dec
cmp
cmpsb
pop
outsl
mov
push
cmpsb
test
add
xchg
mov
dec
int3
push
xchg
inc
sub
pop
xchg
and
lss
in
rolb
popa
das
addr16
cs
sbb
dec
je
movsl
push
mov
add
xchg
cmpl
pop
xchg
and
jbe
sub
cmpsb
ret
imul
adc
ljmp
sbb
push
jbe
out
or
jmp
stc
mov
in
xchg
mov
and
ficomps
popl
mov
negb
insb
sbb
xchg
fcmovne
mov
xor
scas
outsb
in
and
stos
sbb
adcl
nop
xor
mov
int3
add
lds
push
push
xchg
inc
shrb
inc
push
inc
outsb
xor
iret
les
mov
and
cmovs
fcoms
mov
pop
xor
out
lods
rolw
push
xor
sbbb
out
cmpsl
xchg
daa
xchg
jo
and
or
push
push
pop
push
repz
sbb
cmp
dec
jae
xchg
lods
popa
into
mov
push
inc
pop
rclb
and
mov
pop
imul
adc
push
sub
int3
mov
or
fnstenv
mov
mov
adc
add
jb
shrl
sbb
mov
addr16
hlt
mov
lea
push
daa
mov
inc
mov
stc
test
xchg
mov
and
adc
lods
jns
xor
popa
mov
xor
jno
in
sub
je
sbb
imul
flds
fdivrl
sbb
fsubrs
into
mov
outsl
mov
add
push
rolb
and
int3
loopne
stos
sub
push
mov
bound
cmp
jp
push
cmp
jo
add
cs
loop
xor
scas
into
cmp
cmp
jns
add
fcomps
fbstp
shrl
fldenv
adc
sbb
leave
fsubl
sbb
jb
enter
leave
sub
adc
popa
sbb
aas
lcall
shll
pop
or
mov
push
push
sub
out
mov
cmpsb
mov
jo
dec
or
sbb
lahf
mov
lea
xor
ds
faddl
push
or
xchg
mov
sahf
sarb
les
cmpl
lahf
out
fdivrs
pushf
sahf
shrb
in
fistpll
pop
or
lahf
fstpl
inc
lret
shll
sub
mov
iret
ret
jp,pn
adc
mov
pop
cmp
ret
xchg
lds
jp
imul
or
and
inc
push
sbb
dec
stos
aas
jg
in
mov
or
mov
and
pusha
shll
add
inc
mov
pop
push
fs
mov
imul
or
pop
scas
andl
andl
mov
push
add
pop
aaa
leave
jg
xor
sub
sti
lret
jns
cwtl
fwait
sbb
push
sub
hlt
js
in
lea
insl
movb
jns
pop
xlat
push
cmpsl
or
stos
sub
cli
cs
scas
mov
cmp
test
int3
mulb
lods
mov
adc
jne
cmp
mov
into
xlat
pusha
fs
sub
and
mov
jmp
fstpt
jns
fstpt
repnz
or
leave
pop
js
inc
mov
hlt
mov
pop
aaa
pop
xchg
das
xor
mov
repz
pop
xor
inc
lds
shll
jecxz
push
jecxz
push
mov
push
push
test
push
mov
ret
cwtl
jl
add
pop
test
pusha
mov
fimull
mov
leave
xor
cli
jle
lret
cmp
pop
sbbl
mov
jae
mov
sub
xor
dec
mov
pop
xor
nop
xor
movsl
out
dec
pop
pop
repz
jge
aad
outsl
mov
dec
bound
push
xchg
hlt
xor
dec
out
nop
xchg
mov
xor
mov
mov
sbb
cmp
mov
mov
lret
pop
or
sbb
xchg
pop
xchg
mov
mov
inc
iret
cmp
jnp
jo
or
out
add
sub
in
xchg
call
call
pushf
cs
bswap
adc
sbb
mov
shlb
push
ficompl
cmc
jb
call
add
call
ss
ret
cmp
pop
push
and
cmp
in
add
gs
arpl
loope
pop
pop
rorl
cmp
in
movsl
dec
inc
push
xorb
push
aas
orb
mov
jecxz
and
js
mov
mov
test
pop
push
popa
scas
lock
push
sub
popf
lods
call
into
push
sbbl
clc
push
hlt
mov
movsl
fsubr
movsl
outsl
pop
enter
xorb
add
jae
mov
stc
aaa
frndint
cmc
mulb
loope
xchg
test
movsl
jg
pushf
call
pop
cs
loopne
push
add
mov
pop
sahf
lock
scas
aaa
stos
das
cmc
cmp
dec
inc
dec
inc
mov
pusha
lret
in
clc
pusha
into
rcl
adc
je
sbb
addb
push
pop
mov
push
js
flds
ljmp
cmpsb
sar
jo
test
push
mov
cmpl
adc
xlat
adc
adcl
push
add
outsl
add
out
je
outsl
test
mov
mov
notb
and
mov
dec
fistpl
aad
lret
push
sbb
and
fwait
add
sub
idivb
gs
daa
call
add
decb
mov
out
add
cwtl
cmp
xor
ss
in
sbb
in
andl
mov
out
jle
sub
mov
inc
push
aam
into
sti
cmp
out
mov
hlt
sub
push
mov
fwait
je
scas
sbb
mov
sti
fisubs
sarb
mov
add
xor
scas
push
jnp
outsb
testb
andb
mov
inc
stos
hlt
or
mov
pushf
inc
pop
mov
dec
int
push
sub
in
xor
inc
lcall
cli
ljmp
xchg
cs
mov
add
push
and
cmp
jae
out
sbb
in
popa
lcall
in
roll
adc
insb
mov
pop
or
mov
data16
fs
test
sub
cmpl
mov
push
sahf
int3
aaa
test
push
adc
or
xchg
movsl
ja
dec
jae
mov
dec
out
jmp
mov
mov
stc
mov
loop
sbb
dec
jo
lahf
pop
pop
je
jo
add
pop
js
sbb
mov
aaa
je
mov
stos
jl
xchg
iret
lret
inc
and
lahf
cmp
nop
add
and
add
aam
xor
adc
sub
and
mov
sbb
dec
push
std
icebp
clc
jae
lcall
inc
sbb
add
mov
push
push
xchg
popl
xor
xchg
addr16
adc
cmovns
mov
movsl
mov
pop
cmp
cmp
imul
cld
out
std
in
imul
mov
enter
xchg
aad
in
mov
adc
je
in
cmp
testb
mov
inc
mov
cmp
lea
das
cmpsl
jecxz
or
stos
and
mov
jmp
push
stc
mov
dec
js,pt
jecxz
dec
pop
xchg
mov
xchg
mov
adc
subl
cli
push
jge
adcl
std
sub
or
in
pop
pop
or
lds
xchg
andb
shrb
lock
and
pop
mov
add
cmpsl
mov
popl
mov
sub
or
in
add
pop
rcll
cmp
and
lea
mov
lds
mov
pushf
pop
lahf
movb
sbb
jmp
dec
and
or
inc
inc
dec
dec
fstp
js
dec
div
sbb
jbe
jbe
icebp
sbb
jbe
sbb
scas
add
jbe
push
mov
mov
xor
add
mov
fisubrs
mov
das
pop
stc
mov
adc
inc
outsb
dec
mov
or
pop
mov
sti
sbb
add
mov
sahf
xor
and
test
cltd
xchg
repz
and
jp
fstpl
adc
mov
cmp
push
pop
lret
inc
jl
adc
xchg
push
stos
xchg
push
or
mov
test
mov
iret
mov
cld
inc
aad
mov
pop
adc
dec
movsl
lret
xchg
jge
mov
ja
sub
adc
mov
das
push
mov
pop
sbb
sub
xchg
or
jns
outsl
push
nop
outsl
lods
fucom
mov
aad
mov
xlat
enter
dec
add
pop
std
mov
sub
shl
nop
ficomps
inc
es
rcr
gs
fsubl
and
push
sbb
xchg
dec
xlat
xor
jecxz
mov
jp
fs
test
test
insb
push
rcll
stos
dec
test
flds
pop
sub
loop
scas
and
push
movsl
mov
or
or
sbb
mov
sub
mov
rclb
cmp
test
lock
shr
shll
aaa
daa
lcall
dec
movzbl
pop
iret
ret
outsb
dec
cmpsb
push
adc
push
sahf
mov
jecxz
mov
das
scas
or
lahf
aam
fnstenv
stos
outsl
add
xchg
popa
pop
mov
aam
stc
cli
scas
roll
mov
push
fisttps
mov
or
shrl
int
jle
inc
repnz
lea
and
mov
mov
lds
ljmp
lds
andl
xor
and
jo
nop
fcompl
iret
loop
fdivl
push
orb
fimull
lcall
push
outsl
pop
sbbb
cmp
mov
xsaveopt
addb
fiaddl
cmp
cmp
jnp
pop
adc
gs
mov
push
mov
rorb
and
repnz
or
add
push
push
shll
jae
sub
insb
mov
andl
mov
mov
sbb
cmc
jg
pushf
mov
xchg
xchg
loopne
vpsubsb
test
imul
loopnew
jb
xor
into
adc
xor
and
orb
sub
xor
or
fdivrl
and
jbe
sahf
and
push
movsb
int3
cld
mov
dec
xlat
hlt
test
pop
xchg
mov
pop
aam
xor
fucom
mov
jno
push
add
mov
or
loopne
std
ds
push
testb
or
xlat
in
pop
sub
lret
or
stos
mov
cmp
test
test
decb
pop
fdivrp
mov
in
js
push
cmpsb
xchg
lret
mov
mov
cld
push
inc
jno
jle
rcl
loope
int3
sahf
mov
inc
ja
and
push
add
je
inc
xor
sti
jbe
daa
sub
jge
mov
out
call
adc
sbb
or
sbb
push
xor
mov
insb
aas
sbb
and
loope
push
cmp
mov
dec
fadds
mov
in
mov
push
int3
mov
sti
inc
divb
add
mov
and
sbb
outsl
pop
cmpsl
fldt
inc
pop
pop
das
mov
sub
adc
cltd
movsl
jnp
rcr
jb
ret
jge
cmp
or
sti
push
test
adc
lods
pop
test
jns
jmp
out
or
xchg
or
into
inc
xor
mov
addr16
xor
add
or
mov
out
mov
rcll
cmp
daa
js
sbb
and
mov
inc
xchg
imul
xor
mov
lock
inc
es
ja
data16
stc
push
push
or
dec
orl
pop
push
jle
fisubrs
in
scas
add
cmp
lds
es
rcl
cmp
jecxz
push
jno
mov
mov
inc
add
jmp
loop
jg
jbe
xchg
inc
faddl
aas
adc
sbb
sahf
sti
mov
mov
inc
ja
mov
je
jg
push
vmovd
sub
xlat
sahf
clc
inc
addr16
sbb
pop
arpl
inc
and
xchg
lock
enter
das
mov
les
sti
out
pushf
mov
lock
popa
fwait
mov
sbb
cmp
inc
int
ror
xchg
jg
lods
jb
xchg
fidivrl
xor
xchg
iret
dec
test
mov
push
aad
mov
jae
lret
jle
inc
popa
movsb
pop
leave
sub
fninit
insb
pop
lret
fldenv
cmp
mov
and
push
jmp
stc
mov
mov
fiadds
and
lods
push
rcrl
shll
push
or
sbb
mov
fwait
call
pop
cmp
test
imul
add
sub
push
fistpll
jmp
dec
insl
jns
pop
sahf
aad
idiv
or
aam
push
bound
arpl
jmp
xor
out
bound
cmp
pop
xchg
mov
and
and
adc
loope
xlat
or
mov
adc
popa
add
call
insb
push
add
aaa
faddl
ret
adc
mov
jne
and
xor
movsl
cli
lret
ret
andb
int3
testb
ss
test
dec
movsl
sbb
cli
fwait
push
shll
popa
fcomps
sub
mov
and
das
std
push
add
fiadds
shrb
loop
nop
cmpsb
inc
imul
cmpl
aad
xchg
movb
test
jecxz
xor
inc
mov
cltd
sahf
jae
or
dec
and
push
loope
jg
sarb
jmp
daa
jno
in
es
cld
mov
xor
nop
aad
cmp
ja
lea
ss
idivl
cmpsb
cwtl
add
sub
fldcw
jmp
xchg
sti
je
mov
outsb
jno
les
jmp
push
pop
lahf
scas
in
inc
inc
push
and
mov
cmp
sub
push
mov
jo
adc
xchg
imul
hlt
lods
add
pop
adc
in
mov
sarb
fdivl
imul
push
scas
sub
ds
mov
mov
gs
inc
or
add
mov
inc
sahf
and
in
inc
mov
idivb
sub
inc
arpl
jp
orl
data16
sbbb
cmpsb
sub
xor
jg
and
push
pop
mov
push
sbb
cmp
dec
movsl
faddl
cmp
test
ret
dec
ret
cmp
sbb
ljmp
jo
andb
cmp
hlt
mov
outsb
adc
rcrl
jecxz
subl
or
lcall
mov
cli
pusha
ret
mov
push
add
push
andb
xchg
in
inc
fidivrs
daa
mov
mov
xor
in
adc
imul
dec
lods
fistps
push
and
pop
ret
aaa
aam
insb
in
mov
je
out
lods
stos
push
sbb
loope
stos
pop
scas
inc
ljmp
rorb
ss
and
dec
pcmpgtb
mov
xchg
push
popf
enter
std
mov
psubq
cmp
add
dec
das
icebp
jnp
outsb
jge
out
push
mov
push
sub
sti
out
lods
into
sbb
and
mov
pop
dec
add
hlt
repnz
out
adc
repnz
push
repnz
mov
push
lcall
jp
xor
xchg
int
lods
adc
outsl
push
cmc
inc
pushf
mov
add
mov
popa
dec
add
popa
sub
xchg
imul
clc
lahf
stc
jmp
pusha
scas
inc
inc
stc
sbb
xor
gs
js
out
jg
push
push
mov
push
or
inc
inc
pop
loopne
push
pop
fnstcw
adc
shll
insb
jmp
add
in
scas
push
call
push
scas
or
out
sub
lods
xor
push
inc
xchg
adc
jle
jbe
sub
jb
push
ficoms
test
sbbl
xchg
mov
fidivl
mov
mov
bound
jecxz
mov
mov
mov
cmp
rcr
mov
xchg
jbe
cmp
loop
pop
lahf
pop
arpl
out
mov
xorl
inc
les
jae
aad
cli
imul
sub
sahf
mov
xor
cld
jne
sbb
jno
daa
in
push
pushf
sti
call
inc
xchg
cld
mov
lods
sub
rcrl
arpl
cmpsb
pusha
aam
mov
hlt
mov
and
cs
movsb
inc
push
decl
or
arpl
sbb
inc
inc
and
insb
pop
adc
push
xor
inc
js
cmp
xor
cltd
lcall
cmp
jp
fsubrl
in
dec
xchg
dec
pop
lds
xchg
xor
out
cwtl
lds
add
pop
out
sub
xchg
xchg
cmpl
addl
icebp
or
pop
dec
pop
inc
arpl
and
fnstcw
jmp
pop
pop
xor
mov
bound
mov
sub
outsl
adc
xchg
loopne
iret
cmp
mov
push
xchg
jns
xchg
lods
cmp
jae
outsb
dec
mov
outsb
sub
fs
mov
sahf
mov
push
out
add
insb
or
call
sub
jae
scas
clc
cld
lahf
scas
daa
scas
jno
repz
adc
imul
movsl
imul
scas
cs
aam
sahf
inc
fisubrl
ffree
outsb
push
je
repz
or
fsubs
cmp
stos
fists
clc
mov
scas
push
xorl
faddl
outsb
inc
aas
stos
xchg
or
arpl
sbb
lcall
sbb
mov
ret
subl
sub
into
dec
repnz
cmp
hlt
lcall
sbb
adc
inc
xchg
gs
xchg
pop
loopne
pop
xor
push
insl
push
pushf
adc
sub
sub
ljmp
je
fnsave
push
or
shrl
out
popa
or
movsb
sbb
negl
sub
addr16
je
pop
subb
fbld
add
sar
sti
sbb
and
ret
gs
insb
sbb
aad
mov
loope
decb
imul
rcrb
es
sbb
iret
xchg
gs
stos
mov
dec
xchg
cmp
mov
or
xor
dec
mov
xor
cmp
pop
inc
sub
std
scas
call
pushf
es
int
std
fs
imul
cs
jg
xchg
pop
push
jg
stc
cld
mov
cmp
in
idiv
stos
mov
loop
and
mov
xor
cmp
adc
mov
aaa
jnp
push
scas
fsubs
hlt
nop
jmp
cmpb
jge
scas
add
pusha
mull
sbb
pop
mov
int
dec
and
and
xchg
in
xchg
adc
sbb
and
lods
dec
sti
ja
test
clc
mov
test
stos
loop
aad
pop
mov
add
cmc
cmp
sbb
sahf
mov
sti
pusha
xor
imul
orps
jle
cs
hlt
xor
or
pop
loop
pop
jnp
push
mov
and
push
or
sti
ja
rclb
push
push
add
mov
notb
stc
inc
pusha
dec
imul
xchg
rorl
jb
jo
shll
mov
mov
cmp
in
fwait
stc
es
mov
in
aad
enter
jle
popf
jbe
imulb
loop
stos
pop
mov
mov
adc
mov
loopne
repnz
cwtl
pop
sub
jecxz
push
mov
pusha
add
ljmp
sbb
movsb
add
inc
adc
adcl
dec
xor
mov
pop
mov
push
in
jp
cmp
lcall
push
lret
xlat
popf
dec
push
icebp
es
aas
test
fildl
and
mov
cmp
mov
and
loop
mov
jge
pop
cld
or
and
loopne
call
lea
pop
neg
int
mov
popf
mov
add
push
ds
inc
cmp
or
in
into
adc
dec
cmp
dec
jnp,pt
dec
mov
je
add
mov
icebp
dec
popf
pop
push
stc
and
xchg
push
stc
mov
jne
popa
jb
cwtl
mov
or
mov
mov
in
inc
sarl
pop
in
pushl
or
loop
nop
sbb
lods
add
jp
mov
push
cmp
frstor
push
daa
jl
xor
lock
mov
mov
jl
lahf
pop
out
sub
dec
fidivs
jmp
mov
addr16
out
lret
dec
xor
push
sarl
xor
sub
pop
sahf
pushf
dec
test
jbe
lods
sahf
subl
lods
repnz
out
fdivr
dec
ljmp
pop
dec
enter
repnz
xchg
inc
cli
enter
pop
mov
xor
add
clc
enter
fwait
js
dec
jge
mov
jo
or
test
incl
in
out
mov
sub
xchg
cmp
xchg
insl
pop
out
test
jae
insl
insb
xor
xchg
leave
cmp
andb
insb
adcb
adc
xor
cmpl
jno
sbb
cld
or
dec
test
mov
xor
test
fiaddl
jno
mov
outsl
in
mov
sbb
mov
push
out
les
mov
pop
shlb
jnp
insb
mov
nop
imul
std
and
cmc
or
jge
fisubrs
js
push
cmp
sub
jno
fwait
push
movsb
sub
mov
pop
and
cmc
mov
out
jns
jp
mov
adc
in
in
ja
xchg
imul
or
test
data16
push
jae
jp
xchg
out
faddp
xor
jnp
push
popl
aaa
mov
into
mov
movhps
leave
test
jne
pop
inc
xor
or
sub
in
into
in
cwtl
mov
pop
leave
xor
ss
adcl
xchg
push
cmpsb
and
inc
repnz
add
les
lcall
jae
pop
subl
pop
cli
push
push
out
imulb
adc
sub
sub
or
adc
testl
cmp
cmp
add
xchg
orb
push
pop
sbb
cmp
inc
cmp
mov
outsl
xchg
aas
push
xor
dec
cmp
jns
inc
movsl
inc
inc
nop
lret
mov
add
cmpsl
push
mov
adc
xchg
iret
pop
xor
cld
ret
cmpl
sarb
inc
out
cmpl
adc
cmpb
add
fwait
inc
xchg
add
bound
push
out
incb
push
insb
sbb
xchg
jb
sbb
jmp
mov
jecxz
fistpll
jg
mov
sbb
imul
lahf
test
aaa
jo
pop
add
add
jge
push
scas
lods
iret
mov
or
jae
mov
mov
into
xlat
mov
xchg
and
iret
enter
lock
mov
outsl
push
push
lcall
inc
dec
dec
adc
hlt
cld
mov
ss
adc
jno
in
inc
enter
mov
pop
fimull
mov
pop
push
fcoml
lds
jl
push
mov
fmull
cmp
mov
out
push
fildl
in
mov
or
mov
xor
sti
mulb
inc
sbb
jns
stos
sub
mov
push
lds
sarb
xor
and
and
mov
xor
add
movb
lds
inc
or
push
outsb
aas
lahf
xlat
mov
cmpsb
jb
shrb
adc
mov
jmp
bnd
xor
sub
lret
jle
pusha
jl
sbb
fimull
xor
sbb
dec
loopne
jge
stos
and
bound
or
nop
data16
sub
xor
mov
std
or
fisttps
das
lods
jecxz,pt
add
sti
push
jmp
cmp
xor
mov
lahf
popa
sti
lock
sub
fsts
rcrb
mov
out
lahf
mov
rclb
pop
mov
addl
jae
pop
jge
push
pop
in
fldl
mov
mov
in
je
jno
arpl
push
add
test
pop
xor
bound
push
inc
sub
dec
mov
pop
pop
jl
jle
pop
inc
jo
repnz
mov
sahf
aam
repnz
and
movsb
stc
mov
jp
call
cmp
pop
cmp
pop
shr
ret
je
lock
adc
sub
and
mov
ret
or
push
xor
sbb
and
mov
lods
adc
dec
fsts
stos
inc
pop
dec
xchg
mov
pop
icebp
fcmovnu
fistpll
jns
js
mov
pop
daa
aad
jl
fidivrl
pop
xor
lret
cmpsb
inc
mov
movsb
cld
and
and
push
mov
add
sub
lahf
jnp
outsb
mov
push
sub
clc
dec
mov
test
jb
pop
cmp
daa
jb
out
or
pop
mov
imul
inc
push
add
lret
dec
push
es
dec
sarb
push
add
out
mov
pop
movl
add
loopne
movsl
cs
out
icebp
subb
adc
mov
mov
ror
mov
ret
lds
mov
notb
dec
rorb
xchg
fstps
xor
cmp
or
xchg
jp
fisubl
fisubl
test
addr16
mov
sub
outsl
xchg
ss
arpl
into
or
mov
stc
pop
ds
mov
fidivl
leave
cld
mul
fldl
jns
cmp
xor
in
pop
mov
negl
aad
je
ret
jns
fwait
xor
cmp
jo
sub
jnp
int
stc
mov
fwait
sbb
mov
xor
sbb
inc
cltd
iret
push
and
fsubrl
lods
jnp
in
push
lods
js
cmpsl
fwait
ss
iret
xchg
adc
pop
push
mov
inc
cli
test
cli
daa
sub
jmp
or
std
mov
incl
popf
gs
cmp
ljmp
bnd
icebp
inc
cld
das
int
add
test
out
pop
jne
xor
adc
mov
loop
cmp
jnp
daa
sbb
cmp
xor
cmp
movsl
mov
repz
clc
mov
repz
cmp
cs
out
push
jo
mov
cs
loopne
cmp
inc
es
mov
fnstsw
in
rclb
cmp
jmp
adc
lret
or
dec
movsl
dec
jns
sub
mov
mov
xchg
cmpsl
bound
mov
and
rcll
aas
xchg
out
mov
push
daa
mov
sti
daa
in
loopne
ret
mov
ret
and
push
cli
cli
cmp
jae
jns
mov
and
imul
jns
call
add
sti
inc
sbb
jp
rorb
ret
scas
mov
dec
popf
mov
jge
mov
mov
dec
ljmp
mov
add
xchg
cltd
mov
xchg
jbe
pop
emms
xlat
mov
loop
adc
insl
jge
and
push
daa
push
pop
sub
xchg
or
or
adcb
test
pop
push
jge
sbb
mov
pusha
adc
test
filds
repnz
mov
aad
test
aaa
fnstcw
testb
ss
je
push
ljmp
sub
add
push
loop
push
jne
adc
lock
push
xchg
mov
push
loope
mov
into
add
int3
lcall
les
leave
xor
inc
sub
xor
icebp
mov
fwait
sub
inc
fisubs
mov
stos
data16
lods
decb
mov
cmp
xchg
pushf
mov
jg
jl
add
cld
or
lock
sub
ja
cmpsb
and
outsl
adc
sub
cmp
pop
hlt
mov
xchg
leave
lcall
mov
mov
mov
lea
sbb
ficompl
hlt
push
add
dec
mov
in
dec
stos
jp
mov
mov
dec
push
aaa
idivb
push
mov
std
andl
testb
sub
mov
mov
aad
sub
aad
int3
lods
adc
mov
mov
pop
push
pop
in
push
iret
fdivr
out
add
jns
lret
inc
imul
mov
in
push
push
cmp
or
in
sbb
pop
out
popa
push
jmp
push
mov
imul
adc
clc
pop
arpl
popf
cmpsl
cmp
xorb
subb
int
leave
xlat
mov
shll
rcll
je
add
clc
subl
fs
mov
fsubp
xlat
jle
add
jge
cmp
orb
loope
pop
xchg
or
inc
xchg
orb
lret
les
sarl
iret
push
cmpsl
lds
pushf
lds
pop
loop
aaa
xor
sbb
scas
push
xlat
movsl
jg
mov
xchg
push
divb
rol
pop
add
mov
scas
nop
cli
jge
sbb
int3
cmp
clc
xchg
jge
test
sbb
xchg
sub
pop
bound
cld
into
lcall
das
jo
xor
jbe
mov
lea
scas
push
and
sbb
jge
sbb
add
es
imul
fidivrs
jl
iret
das
hlt
std
mov
cmp
jg
xlat
fcomps
dec
or
mov
gs
mov
xor
add
mov
aad
dec
dec
insb
push
sub
in
lods
inc
mov
cmp
jae
pop
mov
mov
ljmp
cmp
enter
add
lcall
jo
mov
xor
jmp
dec
fnstenv
insl
adc
jne
jmp
add
push
insl
jno
addb
addr16
and
mov
xchg
mov
test
movsb
jb
imul
aam
leave
subb
out
ficoml
mov
push
pop
add
dec
je
outsb
xchg
sbb
jle
mov
fisubrs
pop
in
frstor
pusha
cmpsl
aam
inc
or
cmp
or
orb
push
push
pop
repnz
int3
or
dec
inc
pop
mov
cmc
inc
mov
cmp
sub
cmp
sbb
xor
pop
cld
mov
pushf
push
cmp
test
loop
lea
inc
mov
call
cmpsl
xchg
mov
and
xor
jae
jl
jmp
ficoms
jo
mov
cli
test
sub
shll
jb
pop
in
lods
pop
jmp
icebp
dec
lcall
in
test
mov
dec
pop
add
lret
rcll
xacquire
cmpsl
nop
fdivr
fisttpl
shrb
cmp
insb
mov
xor
sub
mov
ret
jg
rclb
pop
int3
sub
sahf
dec
mov
dec
cmp
fcmovu
mov
inc
out
xchg
ss
sbb
popa
flds
imul
mov
lcall
adc
sbb
addr16
pop
adc
mov
xlat
cli
add
mov
nop
lock
ljmp
lods
addb
cli
add
dec
jecxz
push
shll
pop
xchg
inc
andb
pop
or
not
shrb
xchg
cmpb
rorb
cltd
lea
cmc
mov
stc
scas
mov
pop
out
jge
outsb
jecxz
lret
mov
out
bound
or
fdivl
scas
arpl
in
or
pop
push
sbb
add
ret
lcall
movsb
popf
sub
popa
sbb
or
fbstp
clc
adc
pushf
fwait
loope
lock
insl
and
adc
inc
xchg
push
cmc
les
movsl
aaa
jnp
sbb
adc
shr
dec
aam
jno
fnstenv
jo
jnp
popf
iret
sarb
jmp
cmp
leave
ljmp
pop
mov
jns
imul
popf
int3
xchg
pop
xor
loope
cmp
jmp
adc
orb
adc
rclb
jge
dec
mov
xor
cmp
ljmp
cld
in
cld
addr16
pop
inc
cmpsb
enter
add
jg
nop
and
fcomps
sub
fs
pop
sbb
add
ss
decl
add
test
insl
mov
icebp
test
mov
xor
addr16
push
jmp
add
add
popa
orb
in
or
clc
enter
call
add
pop
mulb
stos
in
outsl
lea
arpl
mov
test
ss
xchg
mov
fstps
dec
ljmp
xor
je
fdivrl
sub
test
pop
fcompl
mov
mov
je
or
sar
outsb
adc
or
and
pop
bnd
sub
enter
lea
std
push
jns
push
inc
add
pop
xorl
mov
insb
mov
icebp
mov
test
stc
int
adcl
fs
inc
xchg
mov
dec
mov
xor
and
les
fldt
pushf
clc
jmp
aam
out
cmp
clc
sahf
hlt
push
lds
push
cmp
shlb
xchg
cli
inc
repz
adc
xchg
mov
and
int3
dec
mov
pusha
shll
mov
add
popa
fwait
cmp
pop
pop
insl
movb
adc
sbb
jno
add
ljmp
or
aas
jl
js
cld
jno
shl
cmpsb
cmp
cmpsl
stos
mov
aaa
jns
ret
int3
jo
xchg
xor
add
add
and
mov
insl
push
and
ret
mov
in
mov
xchg
int
std
xchg
sub
and
stc
push
aam
mov
fbstp
cmpsb
daa
ss
dec
sub
push
sbb
sub
jnp
pop
movsl
rcrb
xchg
mov
sub
mov
lock
movsb
pop
cmp
lods
cmp
and
int3
sub
pop
sahf
jge
cld
ljmp
add
aaa
xchg
mov
fs
loope
cwtl
cmpl
loop
xchg
test
sahf
mov
shrb
push
add
fsubl
push
fwait
inc
push
pop
jl
insl
pop
add
aas
inc
pushf
adc
pop
jnp
xor
aam
jae
cld
shll
push
adc
hlt
xor
test
aam
push
sbb
out
into
and
inc
cmc
enter
outsb
out
subb
lods
nop
test
dec
jno
adc
imul
inc
movl
jg
pushf
test
ret
pop
push
and
adc
mov
cld
aas
ret
inc
movsb
cmp
cld
mov
enter
pop
lahf
addb
mov
and
jecxz
pop
cld
sub
add
or
fwait
mov
lret
push
in
out
push
sbb
jae
mov
fldenv
add
and
fisubrl
sub
push
mov
adc
mov
ds
xchg
add
add
and
es
repnz
fistl
int3
inc
faddl
sub
mov
ja
cltd
in
push
dec
xor
loop
or
sbb
fdivrl
ficompl
daa
cmp
fbld
add
test
pop
jmp
dec
xchg
enter
outsb
mov
push
xlat
scas
and
lret
rclb
subl
int
call
pop
dec
cmp
rorl
mov
inc
dec
imul
sbb
or
test
xor
jp
mov
xchg
or
mov
or
test
mov
imul
stc
out
icebp
sbb
cltd
lea
xchg
push
sbb
jmp
xchg
popa
xor
pop
xchg
loopne
cmp
enter
xor
jmp
push
push
pop
sbb
jmp
into
scas
push
setl
mov
imul
inc
mov
sbb
jp
and
in
repnz
fstpl
cmp
sbb
dec
sbb
pushf
mov
movsl
mov
insl
cmpsb
sub
flds
leave
xorb
loop
mov
imul
dec
loopne
mov
sbb
pop
gs
xchg
push
push
ljmp
dec
mov
pmaddwd
out
push
bound
mov
jp
fsts
leave
mov
mov
imul
addr16
or
jle
shlb
out
insb
cmp
add
sub
adc
sbb
dec
sub
pop
sub
enter
fwait
das
push
and
test
in
repz
test
jns
je
into
inc
xor
icebp
adc
loop
mov
jne
adc
sbb
cwtl
cmp
lcall
shrl
dec
adc
lds
dec
jmp
addl
adc
rcrb
jnp
mov
jae
fsubl
adc
cmp
fidivrs
mov
divl
test
std
cs
in
insl
repnz
mulb
jnp
add
aas
mov
aaa
or
in
movsb
rclb
popa
sti
dec
sub
xorl
std
les
lods
dec
xchg
aas
mov
out
fildl
and
mov
or
add
jo
mov
test
scas
fadd
dec
mov
xor
hlt
mov
and
jae
xor
mov
fcoml
fs
dec
loop
je
je
loopne
rorb
rcl
ficoms
shl
clc
sub
mov
jo,pn
cmp
je
pop
mov
lret
imul
and
enter
shlb
xor
jbe
pop
xor
shl
jecxz
jno
jg
repz
out
dec
sub
jp
pop
dec
dec
out
sbb
add
jg
xchg
dec
repnz
pop
scas
loope
int
inc
xor
add
inc
fisubrs
jns
pop
stos
mov
ret
mov
addl
and
dec
fcoms
and
xchg
nop
aam
rcr
or
inc
jge
js
add
inc
mov
cmp
insl
aas
jecxz
int3
js
sub
loopne
popa
lock
dec
mov
cmp
xor
cmpsb
hlt
mov
mov
call
cli
push
pop
out
les
pop
fsubrs
hlt
loop
not
cmp
leave
insb
mov
test
mov
cmpsb
xchg
daa
pop
nop
cmp
sbb
stc
in
adc
inc
cmp
xchg
ret
imul
dec
test
loopne
stos
je
out
xchg
je
and
and
fldcw
outsl
ljmp
leave
inc
add
pop
mov
mov
call
std
dec
jp
cmp
in
icebp
enter
cmp
sarb
lods
push
xchg
jl
lds
xorb
addl
jo
inc
or
cwtl
mov
sub
rcl
sub
lds
inc
pop
test
gs
lret
enter
scas
mov
jb
sahf
adc
aad
test
pusha
test
mov
iret
fstps
mov
xor
scas
arpl
les
in
das
in
or
ljmp
inc
decb
or
ljmp
lock
rorl
mov
xchg
adc
cmpsb
mov
addr16
jnp
rol
stos
sahf
imul
test
jae
stos
dec
xchg
jae
xor
jmp
mov
dec
loopne
fidivrs
push
add
inc
push
mov
daa
loope
cmp
sub
sbb
jno
xchg
adc
jb
out
inc
imull
daa
cmpsb
idiv
ja
pop
mov
out
xchg
add
sbb
outsl
sarb
and
xor
ja
push
cld
dec
jmp
pop
rol
jne
repz
or
adc
mov
repnz
pop
ss
mov
orb
pop
dec
add
pop
pop
adc
call
aad
adc
or
adc
xchg
rcll
testl
pop
sub
mov
mov
adc
jae
add
out
insl
popf
je
in
mov
js
adc
xchg
pop
jle
jmp
push
sti
jl
lret
cli
jae
and
sbb
enter
mov
je
mov
iret
fwait
mov
adc
lea
cmp
pop
sbb
push
shll
verw
cmp
jecxz
sti
dec
movsb
sbb
sbb
fiaddl
push
xchg
push
jp
inc
fisubrl
and
notb
into
and
sbb
adc
push
sbb
dec
jp
scas
xchg
cmp
rolb
xchg
mov
xor
pop
insl
push
stos
adc
mov
push
xchg
mov
jg,pt
sbb
ret
sti
mov
lods
jno
push
sbb
or
mov
fstl
jo
pop
jge
push
aaa
jle
mov
iret
pop
jecxz
mov
cwtl
fwait
xor
mov
add
xchg
std
test
clc
and
popf
aaa
sti
pop
xchg
lds
sbb
ficomps
jg
iret
jmp
lods
lods
xorl
inc
jno
jae
push
fisttpl
dec
stos
adc
orb
dec
xchg
out
xor
jb
jge
sbb
and
mov
adc
cld
rcr
ds
or
mov
xor
hlt
cmp
push
mov
sahf
inc
fbstp
leave
sbb
jb
scas
or
arpl
pop
call
ss
movsl
popf
sbb
mov
test
sub
xchg
iret
pop
sarb
mulb
mul
add
cmp
sti
in
sbb
into
outsb
iret
adc
into
mov
sub
cmp
add
adc
dec
mov
push
inc
mov
movsl
lahf
test
aad
or
ret
stos
inc
pop
mov
shll
mov
mov
jne
int3
jge
subl
mov
fnstenv
xlat
jb
shrl
push
cmpsl
and
mov
and
push
fisubrs
and
inc
imul
sub
pop
jge,pn
push
cltd
jle
test
or
inc
mov
adc
cwtl
xor
adc
mov
push
mov
add
and
addr16
xor
sub
bound
out
das
lods
and
lcall
and
inc
cld
sub
mov
xchg
call
add
add
je
and
pop
add
sub
pop
sbb
jp
lahf
sbb
imul
daa
ret
jbe
sbb
xchg
out
add
lea
adc
ss
daa
xchg
lea
mov
sbb
xor
movsb
outsl
leave
jp
xchg
cmp
inc
xor
mov
dec
push
xchg
shlb
jne
mov
sub
sub
pop
mov
xor
xchg
push
out
les
popf
clc
mov
outsb
add
xor
nop
stc
into
sub
repnz
mov
xchg
sub
iret
push
mull
ret
jecxz
push
push
xchg
ljmp
inc
fwait
pop
or
stc
pushf
shr
pop
hlt
fwait
shll
sbb
xchg
inc
hlt
adc
mov
scas
test
pop
mov
lds
test
ja
dec
pop
add
add
push
xor
jo
jge
dec
xchg
in
add
addb
daa
or
cmp
lea
sub
xchg
inc
popf
iret
mov
xor
mov
pop
pop
popf
dec
andb
jo
movsl
mov
mov
pop
stc
mov
jg
mov
adc
and
mov
sub
xchg
add
push
sbb
pop
or
xchg
mov
fcoml
push
fsubrs
sbb
insb
mov
push
std
adc
adc
lret
and
sub
push
test
mov
pusha
leave
xchg
add
daa
or
lea
jecxz
or
inc
les
mov
sub
inc
fs
stos
es
loopne
mov
adc
js
repnz
add
scas
adc
cmp
dec
pop
mov
shl
sbb
pop
fisubrl
loope
xchg
sahf
mov
pop
cltd
rol
cmpb
ror
cmp
incb
adc
xchg
int
inc
sub
repnz
jg
hlt
arpl
addr16
sub
mov
sbb
pop
std
xchg
orb
iret
mov
imul
push
push
jo
pop
inc
inc
call
sar
scas
call
add
xchg
push
dec
subl
cltd
movsb
lods
push
mov
sub
xchg
jp
scas
lds
xchg
push
pop
ds
cmp
rorb
dec
push
jae
stc
pop
push
fnstsw
dec
out
xor
lret
lret
testl
gs
mov
push
xchg
sub
dec
sti
mov
cli
mov
inc
outsb
iret
int
outsl
enter
repnz
pop
sub
push
fmul
scas
insl
push
repz
xchg
mov
cmp
mov
shl
imul
jbe
mov
popa
pop
mov
outsb
cli
dec
adc
and
rolb
sbb
inc
daa
and
icebp
push
inc
or
mov
pop
in
sarl
test
loopne
push
dec
popa
adc
in
dec
test
out
cli
fs
add
loope
mov
push
insb
in
fisttpl
push
and
loope
lcall
fs
mov
pop
mov
mov
gs
mov
out
test
setno
daa
sahf
dec
fcompp
inc
push
cmc
push
cmp
and
test
mov
repz
bnd
clc
in
xor
data16
dec
push
in
and
sahf
in
pop
adc
mov
stos
fisttpl
or
in
dec
push
rcl
mov
inc
add
cwtl
cld
mov
xchg
ljmp
inc
adc
cmp
fs
out
and
cmp
jecxz
sub
movsb
bound
out
cmp
adc
dec
popf
pop
xchg
jecxz
movsl
xor
shlb
std
bound
lea
pop
out
scas
push
pop
in
insb
cld
push
dec
fdivl
xchg
inc
aas
fidivrs
out
dec
aam
push
addl
inc
in
add
lods
rcrb
xorb
cmpsl
xchg
sarl
call
insb
addr16
pop
sub
pushf
cltd
push
arpl
test
test
cmp
mov
mov
and
call
adc
pushl
jge
jno
or
imul
daa
je
inc
push
jbe
and
test
and
lret
cli
and
jmp
dec
mov
mov
dec
rol
daa
mov
imul
mov
sahf
cwtl
fwait
sub
data16
add
mov
fnstenv
inc
adc
mov
sub
lcall
pop
push
sub
xchg
sub
dec
mov
sbb
leave
loopne
imul
das
mov
mov
daa
fists
imulb
imul
es
test
adc
sahf
lock
push
pslld
pop
xor
into
hlt
or
inc
inc
inc
adc
and
outsb
mov
add
xchg
sbb
push
jge
mov
out
pop
push
fildll
sbb
fnsave
pop
je
inc
add
in
roll
scas
sub
push
or
fmuls
sar
arpl
xchg
xor
pop
loop
out
repz
pop
jmp
orl
xchg
fwait
push
mov
cmpsb
push
insb
imul
sub
xchg
add
into
push
jns
jg
jb
hlt
cli
shlb
outsb
mov
or
aad
jbe
pop
xchg
stos
dec
fadds
sbb
sbb
mov
int
sbb
daa
rcrl
roll
call
lcall
and
pop
or
sub
int
cwtl
or
pusha
movsb
mov
xchg
jp
jns
pusha
cmp
and
mov
pop
repz
jns
sti
leave
adc
or
sub
add
mov
stc
add
xchg
insb
nop
push
sar
sbb
test
add
jb
jae
xorb
adc
xor
loop
jae
xchg
dec
test
dec
dec
flds
sbbl
mov
jg
mov
mov
cmp
inc
movsb
test
dec
lods
mov
sahf
and
mov
arpl
xlat
or
adc
call
mov
mov
inc
add
xor
js
hlt
decb
sti
inc
ret
push
lcall
stos
add
pop
cli
out
lock
aad
mov
insl
mov
pop
lret
sub
ret
cmc
das
dec
lea
aas
mov
jp
add
and
int3
inc
sti
movsl
subb
sbb
sbb
xor
leave
inc
dec
cmp
or
pusha
fsubrl
lahf
ja
xchg
imul
dec
enter
xchg
inc
je
in
cld
imul
dec
fnstenv
aaa
xor
pop
sbb
dec
rcl
xchg
loop
insb
fisubrl
sbb
add
jecxz
adc
inc
ficompl
push
mov
les
xchg
sub
mov
adc
mov
add
in
pop
cmp
aaa
and
xchg
pop
pop
fisubrl
shll
jl
sub
mov
fcomps
test
leave
fldl
lods
gs
sbb
mov
nop
xchg
leave
nop
adc
pop
repz
adc
and
jno
pop
xor
sub
sbb
jnp
sub
fcomps
js
mov
push
imul
xor
sbb
test
mov
push
fst
test
xor
lret
mov
je
mov
pop
xchg
scas
add
cmp
enter
cmp
aam
es
inc
mov
into
jl
mov
pop
push
mov
pop
nop
pusha
dec
adc
arpl
leave
pop
aas
rcl
insl
dec
jns
out
xchg
cmpsb
loop
inc
sbb
pop
daa
pop
cmpsb
jmp
ja
cmova
sahf
gs
and
fdivrs
and
fidivrl
stc
cmpb
bound
andb
test
jecxz
mov
add
cmp
imul
jecxz
test
rcrb
jbe
repz
aam
lahf
fs
clc
add
cmp
test
rolb
inc
aas
aas
incb
test
cli
jge
pop
outsl
nop
cmp
or
jmp
ror
adc
mov
push
dec
call
insb
test
xchg
push
push
jae
test
and
mov
cwtl
daa
add
insb
dec
sbb
jae
mov
sbb
cltd
cmp
aam
inc
or
push
in
push
insb
aaa
jecxz
out
and
mov
add
dec
clc
cli
daa
fucomp
mov
popa
inc
sbbb
test
cmpsl
aad
clc
mov
cs
jno
mov
mov
cmpsl
mov
cwtl
ficompl
push
lods
inc
mov
jg
hlt
and
fwait
xchg
rcrb
ret
ret
sarb
cltd
fildl
data16
repnz
or
out
pop
adc
and
add
xchg
adc
divb
mov
mov
aam
popa
add
mov
cwtl
lock
bnd
bound
mov
in
fs
mov
fildl
xchg
addr16
sbb
lcall
mov
pop
jmp
sub
adc
fstpt
sbb
lea
test
loop
mov
sbb
mov
mov
rorb
xchg
int3
stc
mov
mov
adc
pop
ficomps
es
sti
jae
push
mov
jne
daa
loop
stc
mov
int
cmp
sbb
sbb
and
test
lods
out
inc
sbb
test
add
add
cltd
imull
ljmp
lcall
or
fcoml
push
lds
insb
jmp
mov
je
es
mov
pop
call
mov
push
sbb
test
int
aaa
testb
andl
add
sub
jne
fldcw
fcoml
imul
mov
scas
sub
iret
jnp
sbbl
mov
rcrb
xor
fimull
or
hlt
xor
das
add
or
scas
pop
xor
push
mov
cmpsl
xor
lret
cltd
in
cmp
cmpsb
scas
jns
push
push
jnp
pop
inc
cmc
nop
lods
pushf
cwtl
lods
jno
push
call
pop
nop
and
jle
lock
cmp
les
pushf
add
fbld
sbb
je
mov
and
jge
test
cld
mov
ficoml
scas
mov
mov
mov
push
xchg
cmpsl
insb
push
and
pop
mov
xchg
lea
add
and
xchg
xchg
mov
aaa
cmp
pop
jae
sub
or
xchg
pop
mov
push
add
test
dec
hlt
xchg
sub
pop
xchg
mov
icebp
pusha
ljmp
lahf
mov
fdiv
mov
leave
popa
ljmp
jg
pop
fcompl
mov
sbb
in
cmp
aam
xchg
lahf
fwait
cmp
mov
sbb
aam
std
mov
dec
cmp
push
mov
out
fsts
ss
icebp
adc
xor
xchg
jge
movsb
daa
or
xor
push
imul
jge
xlat
xor
popf
cmp
aad
pop
ljmp
test
aam
add
mov
mov
cmpsb
sbbb
xchg
icebp
add
mov
dec
add
dec
mov
lret
clc
rcl
xor
pop
sti
mov
xchg
mov
mov
ds
xchg
push
lret
flds
imul
sbb
mov
pop
dec
test
and
int
addb
insl
mov
mov
sahf
mov
loope
imul
ja
out
sub
out
stos
lahf
xorl
imul
lods
jne
jns
and
or
sbb
mov
sti
dec
out
sti
in
es
rclb
das
jno
ret
sbb
lea
jo
in
mov
mov
fcomps
and
loopne
sbb
cmp
jecxz
mov
add
rolb
jns
mov
jno
test
xlat
dec
rolb
jp
jae
mov
add
dec
popa
add
push
mov
jmp
mov
add
arpl
jg
inc
scas
dec
dec
xchg
push
insb
test
pop
cltd
mov
inc
cmc
inc
test
daa
sahf
out
icebp
jmp
add
cmp
jp
dec
repnz
push
xor
adc
jmp
inc
aaa
jmp
aam
inc
push
aas
lds
fisttps
jg
lea
and
negb
xorl
fcmovnbe
js
test
push
sub
mov
mov
loope
push
or
and
mov
bound
js
mov
cmpsl
lcall
into
gs
fdiv
test
das
adc
scas
les
mov
push
fcom
ljmp
out
in
cmp
sub
popa
lcall
daa
jbe
shr
mov
std
sub
sbb
aas
leave
mov
xchg
push
fsubrp
xchg
jp
dec
aaa
push
sbb
or
add
mov
pop
push
ja
jae
scas
mov
xchg
fwait
xor
sub
rorl
jae
mov
pop
inc
loopne
ja
sub
mov
popf
adc
in
cs
fxch
xchg
inc
mov
pushf
arpl
mov
sub
pop
lahf
pop
dec
popa
mov
add
xchg
sbb
pop
or
jmp
jmp
pop
pop
xor
out
xchg
lsl
cld
lret
xchg
jp
js
xchg
loop
jmp
cmp
cmp
jb
mov
test
jg
hlt
rclb
fcomp
outsb
xchg
sbb
inc
es
stc
cmc
in
or
xchg
xor
xor
pop
mov
and
jg
das
jecxz
xor
cmp
dec
add
and
cmp
jae
incl
fiaddl
xchg
push
outsl
sbb
roll
push
xor
add
sbb
pop
xchg
jmp
adc
add
dec
jg
ss
mov
xor
push
pop
and
cmp
test
sti
or
mov
mov
test
jbe
push
mov
mov
dec
rcrl
repnz
lret
bnd
adc
push
mov
push
and
or
stos
stos
push
mov
or
push
mov
out
sahf
decl
nop
es
stos
mov
or
mov
mov
mov
xchg
je
ja
sbb
adc
cmp
lods
jbe
jo
cli
testb
pop
push
ret
into
sbb
in
push
xor
retw
shll
jl
push
mov
push
scas
stc
inc
ja
add
enter
ljmp
xor
dec
sbb
jecxz
addl
sub
clc
jbe
loopne
jge
dec
cmp
test
imul
push
cltd
lret
mov
ret
stos
fsubrs
xor
add
push
add
cs
fcompp
sbb
cmp
jp
hlt
gs
dec
clc
fdivrs
add
jbe
push
xor
jecxz
inc
fisubl
test
ja
jbe
jecxz
ucomiss
das
push
clc
push
jo
stos
fsub
sub
pop
pop
xor
ljmp
dec
cs
mov
aad
out
clc
out
jo
jns
xor
out
push
or
loopne
ss
sbb
xor
xchg
sbbb
mov
jecxz
js
mov
xor
mov
fcomp
mov
xor
data16
into
push
xor
or
shl
nop
dec
test
cmp
mov
xchg
dec
jge
mov
cmp
inc
pop
or
test
inc
rcrl
sbb
xchg
cmc
or
bound
in
cmp
ja
orl
fsub
add
mov
loope
sub
xchg
shrb
inc
out
pop
jns
ds
or
test
adc
jge
lock
jo
mov
arpl
lods
push
sub
clc
cmp
or
pop
and
xor
pop
sbb
mov
outsb
push
sbb
leave
imul
jbe
loop
mov
mov
in
pop
data16
cmc
lds
pushf
pop
xchg
mov
add
push
jl
rol
mov
cmpsl
popa
jnp
mov
mov
shlb
insb
cmpsl
sub
outsb
push
out
test
sar
push
stc
ds
inc
repnz
insl
mov
js
mov
push
fcmovu
push
xchg
enter
ja
cmp
or
cmp
jnp
addps
popl
or
insb
cli
dec
pop
sbb
pop
ds
fimull
or
or
scas
jne
rorl
insl
sbb
sbb
adc
out
lret
js
jne
push
inc
mov
imul
pusha
inc
les
pusha
sarl
out
hlt
cmp
inc
bound
imul
jbe
push
or
sub
rcll
pop
sub
lods
mov
test
jno
xor
addr16
enter
in
xchg
loopne
push
pop
cmpsl
fwait
fwait
les
movd
js
or
sbbb
outsl
movsl
stos
or
ret
repnz
xor
and
adc
or
cli
hlt
push
std
mov
or
lods
mov
nop
sarl
pushl
rclb
fbld
daa
fscale
sbb
aam
xchg
xchg
jne
lods
jmp
pop
idivb
mov
mov
cmpsl
pop
mov
mov
and
pop
mov
stos
arpl
sub
fdiv
test
sbb
pop
mov
imul
mov
add
lret
int
sbb
adc
mov
inc
roll
ret
mov
dec
dec
pop
cli
je
int3
jle
in
and
jb
cmp
sahf
dec
sub
insl
sbb
je
adc
cmpsb
out
arpl
pop
ret
jno
repz
ret
imul
pop
xor
in
jnp
les
pop
push
mov
inc
pop
sub
mov
roll
xchg
shl
in
mov
mov
movsl
aaa
scas
hlt
sbb
leave
sub
call
or
mov
sbb
lret
sub
inc
cltd
adc
adc
mov
clc
inc
or
int
je
jmp
sahf
fistl
test
pushfw
sub
cmpsl
lds
mov
xor
cmp
outsl
jns
jo
stc
mov
pop
cmp
insb
mov
mov
imulb
ret
dec
push
fcompl
dec
ja
xlat
lcall
lret
jno
outsb
pop
mov
sbb
add
shr
jl
inc
push
jbe
mov
jo
jle
sub
movsb
pop
fwait
loopne
or
xchg
testl
or
psubd
arpl
mov
mov
xchg
add
aaa
jb
aas
sbb
dec
push
pop
xchg
je
outsl
pop
into
mov
je
das
std
repz
fs
jle
and
inc
aaa
popa
popf
mov
out
in
dec
sti
add
orb
loope
xchg
cwtl
jecxz
stos
or
fisttpl
out
imul
dec
push
jae
push
leave
dec
mov
sbb
sbb
rolb
cltd
je
lds
pop
inc
movsb
adc
aam
xchg
xor
mov
push
push
inc
adc
jmp
jle
xor
or
repnz
fwait
fs
mov
movb
ret
mov
pop
data16
call
shr
shl
jl
pop
loop
mov
mov
and
xor
add
leave
push
vpunpcklqdq
jnp
divl
ja
cmpsb
mov
pop
ficomps
test
jp
mov
test
sub
aam
jecxz
lods
repnz
push
mov
es
sub
adc
mov
std
nop
in
aad
fsubs
jmp
sbb
dec
adc
add
ljmp
or
int
movsl
sub
int3
xchg
mov
aad
outsb
push
mov
jmp
cmp
retw
xchg
xchg
adc
aad
cmp
ret
fistps
sub
test
mov
dec
and
jg
mov
lret
and
roll
out
or
push
int
dec
imul
mov
and
mov
sbb
into
aas
ljmp
jmp
nop
jb
and
nop
addr16
andb
ss
nop
cld
ds
pop
nop
loopne
or
faddp
jne
adc
das
pop
mov
push
test
or
xor
pop
test
iret
mov
push
inc
xlat
data16
dec
adc
xor
scas
insb
lahf
ss
cs
inc
in
sub
cltd
mov
loope
and
jns
je
je
cmp
mov
dec
inc
mov
mov
sbb
cmp
push
push
mov
outsb
cmp
nop
adc
int3
icebp
inc
ret
call
mov
mov
aam
lcall
mov
add
cmc
movsb
cli
bound
movsl
jb
dec
lea
daa
xchg
jb
add
je
lea
and
xchg
sbb
push
xchg
lahf
sbbl
das
js
mov
xchg
dec
std
adc
pop
mov
inc
test
gs
or
or
add
fsub
test
mov
sbb
push
pusha
out
cmp
mov
mov
add
and
pop
stos
jbe
jb
push
movsl
cmp
mov
popf
sbb
imul
outsl
addl
push
push
cmp
adc
lahf
shll
in
lret
or
mov
cld
push
add
call
fs
mov
xchg
mov
lds
inc
or
or
dec
jmp
mov
loope
sbb
or
sbb
cs
mov
cmc
shlb
or
inc
ljmp
mov
test
pop
push
insl
jecxz
or
fildl
int
aaa
push
scas
in
cmp
lods
ret
pop
into
adc
das
mov
cmp
xlat
xchg
jo
pop
pop
cld
xchg
test
scas
xchg
adc
mov
pop
add
cld
adcb
xchg
ljmp
and
cmpsl
repz
and
pop
xchg
adc
add
in
pop
jl
mov
lods
mov
jns
jmp
lahf
cmp
jae
hlt
ljmp
shll
inc
fiaddl
popa
rorb
iret
add
dec
add
test
add
xchg
insb
mov
nop
and
sub
push
xchg
mov
rolb
push
add
call
cltd
inc
push
dec
mov
dec
sahf
in
ret
jge
daa
test
lss
pushf
push
add
pop
push
or
pushf
push
mov
stos
mov
data16
mov
sub
pop
mov
and
adc
fcmovnbe
mov
daa
push
lret
aaa
adc
add
cltd
fisttps
pop
or
push
xorl
pop
push
pushf
je
xor
add
fldcw
loop
div
mov
cmp
mov
jmp
xor
xchg
mov
xchg
cltd
or
jge
das
outsl
fidivrs
loope
aam
cmpsl
movsl
jl
leave
iret
loope
add
cli
mov
push
fistpl
fcmovnbe
push
and
or
jp
cmp
add
repnz
and
std
xor
sti
xchg
fisubs
pusha
fimuls
ljmp
sub
adc
mov
sbb
adc
cli
jnp
lea
ss
xor
cmp
jmp
mov
mov
mov
inc
sbb
ret
jae
cs
and
ljmp
xchg
dec
pop
in
test
fldl
and
stc
cltd
and
inc
mov
and
in
pop
into
push
loope
push
xor
mov
mov
mov
and
xlat
sub
call
mov
stos
aas
mov
cli
add
mov
test
icebp
repnz
jns
mov
mov
aam
xor
dec
jns
ja
add
outsb
or
jge
xchg
fadd
hlt
je
test
xchg
addr16
mov
into
jp
pusha
into
mov
leave
mov
dec
outsb
inc
cs
mov
mov
xchg
loopne
or
add
sbb
push
test
int
iret
popf
add
stos
pusha
stos
idiv
or
jnp
scas
jp
lea
xchg
ds
stc
adc
ds
or
int
pop
stos
jno
stc
mov
andb
cmp
pop
adc
loopne
in
test
dec
ror
fdivl
mov
mov
addb
and
cld
rclb
into
push
or
popa
out
outsb
push
lds
scas
or
pusha
data16
push
js
dec
add
cld
sub
push
pop
fninit
fstl
aas
cmp
clc
add
pop
cs
scas
mov
movl
pop
jne
mov
repnz
int3
enter
nop
das
cmp
pusha
mov
pop
add
add
pop
popf
fcoml
dec
jl
xor
cltd
xor
bound
mov
loop
add
jae
push
mov
jno
pusha
jb
ljmp
xchg
loopne
xor
test
and
filds
push
or
push
data16
dec
pop
add
faddl
rcll
inc
push
jmp
push
xchg
mov
fimull
jbe
test
das
jo
mov
lods
adc
xchg
dec
stos
jg
sahf
pushf
leave
fdivp
mov
negl
fistl
cmp
dec
cltd
cld
push
cmpsl
scas
mov
stc
sub
mov
insl
aaa
and
sti
fldcw
lret
mov
xchg
mov
xchg
cwtl
insl
mov
fstpt
cmp
mov
sbbl
inc
das
push
call
jo
push
cmpb
stos
mov
adc
dec
call
gs
mov
gs
cmpsl
or
mov
fsubs
push
fcmovbe
xor
dec
jge
test
fcoml
jo
int3
pushf
dec
daa
cmp
mov
push
xchg
int3
lea
sbb
dec
jo
popf
dec
xchg
dec
lea
xchg
in
push
jle,pn
mov
inc
popf
fcmovb
mov
xchg
adc
fmuls
mov
lea
lds
rclb
inc
out
gs
or
ds
mov
and
out
jmp
inc
and
mov
cmpsl
and
push
inc
in
push
push
jl
fldenv
inc
adc
adc
inc
sbb
jae
fsubr
mov
inc
or
arpl
mov
mov
mov
jnp
fbld
fcoms
mov
sub
inc
fiadds
mov
inc
sbb
inc
dec
xchg
cmp
jecxz
dec
pop
insl
mul
ljmp
xorb
and
cmp
jecxz
into
mov
jno
gs
dec
int
pop
fmull
sub
lds
mov
inc
add
and
or
mov
loopne
mov
ret
clc
adc
lods
xchg
sbb
mov
daa
mov
sbb
xchg
idivl
cmpsl
dec
sbb
sub
aas
add
stos
or
mov
lea
bound
cmp
fidivs
sbb
or
mov
aaa
sbb
and
mov
arpl
std
dec
loop
jo
mov
mov
fs
das
mov
xor
scas
mov
idiv
push
dec
and
fwait
aas
pop
push
loop
jecxz
mov
ret
xor
mov
adc
out
cmp
stc
cmc
notb
pop
insb
ljmp
cld
fs
pop
popf
jo
push
dec
sbb
cwtl
mov
fadds
inc
in
mov
mov
sub
xchg
inc
clc
pushf
jo
pop
popa
adc
shl
dec
clc
inc
dec
bound
adc
cltd
aas
inc
arpl
sti
popa
cmpl
lahf
dec
mov
ficompl
sbb
outsb
pop
mov
icebp
rolb
adc
xchg
adc
mov
dec
aam
mov
adc
aas
push
cmp
repz
fincstp
ret
add
pop
fxam
jbe
and
and
fildll
inc
out
iret
or
fstpt
ret
arpl
mov
popa
mov
mov
jp
repz
aam
inc
jle
lds
out
xchg
mov
popa
clc
xchg
adc
arpl
shrb
mov
fdivl
loope
xor
aaa
daa
sar
mov
out
mov
dec
cmp
sub
adc
cmp
subl
int
movsl
lret
xor
sub
aad
cmp
jne
xor
mov
sub
dec
sub
or
out
testb
push
inc
sub
sub
les
inc
out
mov
cmp
fidivrs
lret
insl
ret
aas
push
pop
and
mov
cld
cmpsb
into
jno
cmpsb
jle
adc
adc
xchg
mov
dec
das
movsl
jge
mov
lods
in
sahf
push
push
rclb
pop
push
jb
jl
aam
rcll
lock
pop
push
out
stos
lods
pop
push
push
jp
jecxz
aaa
jb
lods
jnp
lea
aas
add
jge
fidivs
or
pop
mov
sub
and
and
pop
in
dec
sub
addr16
dec
dec
movsl
loope
fnstenv
cli
push
mov
mov
xchg
int3
and
loopne
inc
mov
and
jp
shrb
imul
into
stos
add
out
jnp
ds
pushf
negl
fldl
pop
push
subl
rcrl
lea
jns
dec
inc
not
mull
pop
mov
fwait
mov
cmc
ljmp
push
pop
jno
push
mov
xchg
das
lds
sub
cmp
or
pop
loopne
jp
or
cmpsb
cli
xor
inc
xchg
out
es
movsb
andl
pop
add
push
int
fldenv
mov
std
mov
mov
ljmp
lahf
jg
out
loopne
push
xchg
mov
and
adc
xchg
cmp
out
cmp
mov
mov
incb
jnp
dec
mul
and
jecxz
dec
add
xchg
adc
fs
int
xorb
outsb
mov
dec
xlat
imul
scas
xor
jmp
repnz
ljmp
adc
mov
pop
xchg
fsubrs
xor
pop
sub
das
imul
dec
xchg
sti
pop
daa
xchg
xchg
std
repnz
fcoml
jg
xor
xchg
rcrb
lret
adc
les
xlat
push
pop
shll
mov
sahf
int
aam
mov
sub
push
sbb
add
lahf
iret
mov
nop
mov
scas
fisttpll
add
mov
mov
dec
jp
cmp
stc
push
mov
test
mov
push
dec
mul
scas
xchg
ljmp
lea
int3
jl
dec
bound
cmp
xor
and
mov
insl
sti
aaa
mov
jnp
out
lahf
and
and
insl
pop
jle
jns
or
mov
imul
insb
pushf
test
dec
dec
and
outsl
std
filds
fldenv
xchg
fstpt
scas
daa
mov
mov
loop
jecxz
push
mov
jb
sub
pop
outsb
inc
lea
arpl
pushf
mov
and
stc
push
arpl
sti
or
ret
test
adc
or
jne
ds
idivl
xchg
idivb
cmpsb
loope
call
and
bound
cli
mov
xchg
mov
push
enter
aad
cmp
push
pop
js
cmp
insl
outsb
push
or
in
stos
dec
inc
inc
inc
and
pop
or
sub
xor
pop
bswap
mov
cmp
fldt
scas
sbb
in
mov
dec
xor
pop
fsts
ss
enter
pop
daa
repnz
xchg
add
push
push
sbb
ss
mov
imul
add
inc
into
jl
outsl
arpl
and
or
sub
sbb
mov
pop
pop
add
shll
loopne
sub
jbe
inc
imul
ret
mov
call
mov
sbb
sub
ja
dec
jo
mov
mov
shrb
cmp
add
jp
ljmp
lea
cmpb
jbe
mov
push
ficoml
aam
aas
push
aaa
push
push
movsb
mov
push
push
dec
stc
nop
or
pop
mov
repnz
hlt
and
mov
jns
leave
or
outsb
sub
or
mov
mov
invd
adc
clc
and
mov
repz
out
cmc
pushf
fistps
aas
mov
xor
mov
repnz
cmp
bound
inc
pop
sub
outsl
push
nop
mov
xorl
daa
call
shlb
pop
gs
sarb
dec
mov
push
sbb
push
in
xchg
dec
push
pushw
in
jne
in
jb
fisubrl
mov
cmp
adc
mov
dec
pop
pop
popa
test
inc
sbb
xchg
mov
cmpsl
push
and
dec
adc
std
pop
xor
dec
inc
pushl
adc
inc
sub
adc
mov
xor
mov
inc
out
mov
cli
adc
mov
xchg
push
loop
hlt
jp
cwtl
lret
mov
mov
pop
fcmovu
pop
clc
sub
adc
mov
adc
stc
push
add
mov
push
inc
aas
orl
sarb
inc
sbb
int3
call
neg
jecxz
mov
pop
cltd
sub
pop
push
push
out
and
jl
aam
jns
push
pop
andb
pop
test
add
aad
cmp
or
shlb
ds
adc
mov
or
jne
pop
mov
in
fildl
pop
sub
shrl
sarl
ljmp
bound
sbb
fldl
ljmp
scas
jns
push
shlb
jle
push
enter
push
mov
ds
xlat
mov
mov
dec
fdivl
push
scas
or
push
fwait
add
xor
addr16
iret
mull
cmovs
cld
repnz
inc
fnstsw
loope
bound
sbb
cmp
iret
fidivl
shll
xchg
pop
je
push
aas
ret
inc
dec
rolb
hlt
stos
ret
das
aaa
mov
ljmp
dec
push
sub
inc
stos
jns
scas
jp
icebp
push
pop
and
stos
sbb
mov
pop
sahf
cld
loope
int
lds
cli
or
push
leave
jbe
adc
cmpsl
xchg
cmp
repnz
cwtl
leave
pop
push
hlt
popa
test
and
add
rolb
loop
mov
rcll
aas
popl
xchg
cmp
pop
clc
pextrw
and
sbb
mov
mov
loopne
nop
push
cmp
push
add
call
sahf
sarb
xor
jae
inc
loop
pop
jl
pop
pusha
mov
dec
dec
int
and
out
sbbb
adcb
stos
adc
fnsave
out
cltd
jns
pop
jge
int
dec
fs
push
jnp
jns
std
icebp
fs
cld
sub
jo
test
mov
cmpsb
add
add
ss
hlt
jge
mov
cmp
scas
cmpsl
mov
cmpsl
push
xchg
dec
push
negb
fmul
adc
and
faddl
or
sub
dec
cwtl
ss
push
add
ret
mov
inc
jmp
dec
hlt
mov
mov
enter
orb
icebp
mov
jecxz
lock
mov
in
imul
add
push
sahf
mov
push
aas
cmp
pop
das
inc
mov
sar
sub
push
faddp
test
sahf
lock
in
ds
dec
cltd
mov
test
xor
add
nop
daa
mov
pop
xor
xchg
lcall
jbe
jnp
sub
mov
mov
lods
push
in
pop
aam
pop
es
test
orb
ja
repz
in
xor
mov
jg
xorl
negb
pop
cmp
loop
sbb
or
test
test
cmp
pushf
or
nop
lds
push
mov
jmp
xchg
dec
xchg
adc
or
add
outsb
and
pusha
pop
push
rcrl
cmp
mov
pusha
add
push
repz
inc
dec
leave
leave
mov
jo
sub
cs
jns
pop
mov
jecxz
push
popf
ficoml
jns
xor
or
sub
lods
pop
movsb
jo
pop
shll
mov
icebp
andb
pop
inc
jbe
notb
into
fnstcw
enter
sub
cmp
in
cmp
mov
sbb
roll
mov
test
mov
push
push
shl
xchg
jmp
mov
mov
out
sub
mov
inc
push
and
pushf
mov
push
push
xor
and
movsl
imul
cmp
pop
pop
cwtl
pop
cwtl
xor
add
pusha
push
icebp
out
outsl
xor
push
sbb
or
mov
and
aam
adc
and
sbb
inc
aam
pop
test
mov
in
addr16
pusha
cmp
out
xor
repnz
inc
rorb
dec
loop
aaa
loopne
fiaddl
dec
push
ret
shrl
stos
mov
inc
fldt
and
xchg
lods
es
test
cld
lcall
sahf
jmp
jle
inc
cwtl
pusha
int3
mov
mov
scas
cmc
in
sub
cmp
jp
cmp
jae
sti
lahf
pop
cmp
push
fiadds
xor
pop
pop
ret
retw
mov
push
fcmovu
dec
mov
inc
mov
sarl
inc
jbe
pop
hlt
fisttps
push
ja
cltd
imul
lds
test
dec
pushf
mov
cmp
push
mov
jmp
pusha
xchg
test
sbb
mov
inc
sub
dec
fisubrl
out
sbb
jb
adc
adc
iret
imul
xlat
mov
push
arpl
and
pusha
jp
sub
aaa
push
shll
push
jb
jl
addr16
xor
test
xlat
fisttpl
or
adc
pusha
aam
jnp
pop
int3
mov
inc
push
insl
lahf
inc
mov
scas
test
mov
cmpsl
fsubs
mull
mov
pusha
cs
movsb
lock
jp
jbe
push
or
inc
out
add
lretw
js
cmp
adc
mov
inc
rcrl
cmp
sbb
shr
scas
pop
cmc
xor
pushf
xchg
mov
push
scas
iret
mov
clc
fdivrl
jmp
frndint
pop
pop
mov
adc
sbb
out
out
dec
and
lret
sbb
or
out
jns
cmpsl
sub
pop
mov
jmp
out
sbb
insb
in
mov
jnp
pop
cmp
mov
sti
lahf
fcmovnbe
dec
sub
fmuls
addr16
mov
es
jb
outsb
cmp
jl
and
ficompl
js
xor
loopne
xor
les
mov
sbb
daa
call
push
xor
test
push
stc
xchg
pushf
cmp
jecxz
cltd
out
sarb
cmp
mov
mov
fwait
loopne
push
int3
popf
xlat
and
std
bound
inc
mov
movl
sbb
popa
xchg
enter
mov
imul
clc
adc
cmp
push
sahf
ds
and
out
cltd
jae
dec
pop
inc
pop
test
cmp
adcl
in
fidivs
fcmovu
popf
cmc
cmp
mov
fistps
mov
pop
mov
ret
subb
sbb
icebp
inc
xlat
insb
shlb
ficomps
cltd
lock
mov
jle
insl
ret
xlat
sar
aas
push
and
and
hlt
sbb
leave
in
dec
test
mov
scas
movb
cmp
insb
and
inc
negl
mov
fucom
push
xchg
das
test
and
pop
inc
enter
jae
fidivrl
hlt
mov
mov
xchg
lods
repnz
cmp
adc
push
add
xlat
push
cmp
mov
push
and
imul
popf
dec
cmpsl
jle
xchg
push
icebp
lods
imul
fldt
das
testl
push
sbb
sbb
mov
xchg
mov
popf
dec
sbb
in
pop
mov
jp
inc
sub
mov
ja
test
cmp
xchg
adc
fs
jp
hlt
or
aas
popa
mov
sub
stos
inc
subl
fadd
je
js
arpl
negb
cmp
ret
pop
xchg
push
push
push
push
or
aad
or
shrl
lock
jge
dec
dec
dec
adc
mov
or
mov
aas
cmpsb
sbb
pop
cmpsb
ret
gs
sahf
popa
add
or
pop
scas
mov
and
shrl
shll
and
dec
sahf
insl
and
mov
xchg
push
and
outsl
pop
mov
bnd
mov
xchg
cmp
push
icebp
sti
xchg
adc
dec
lahf
cs
add
inc
scas
sbb
imul
push
outsl
gs
outsl
mov
fiadds
mov
jo
repnz
aam
data16
mov
xor
outsl
in
lahf
icebp
push
in
test
and
cmp
jmp
les
xchg
push
mov
pop
sarl
std
out
cmp
enter
push
jns
add
lods
mov
sbb
cmp
sahf
mov
jmp
aaa
jno
les
xchg
jb
jo
subb
mov
test
gs
dec
outsb
xor
mov
sub
dec
cmp
sub
dec
dec
add
mov
stos
dec
bound
pushf
leave
mov
mov
shrl
fcmovnb
add
mov
inc
sbb
ss
rcrb
xchg
mov
mov
pushw
mov
pop
test
or
jno
mov
insb
fisttps
lock
ss
or
lahf
adc
xor
ljmp
out
ret
into
mov
imul
daa
bnd
xchg
mov
je
mov
fisttpll
inc
jmp
movsl
add
or
lcall
jmp
pop
mov
push
mov
fwait
mov
jmp
cs
add
mov
pop
jo
pop
ja
sub
outsl
jge
cltd
and
sbb
inc
fwait
jp
dec
adc
js
pop
jnp
outsb
xor
dec
mov
stc
mov
shll
mov
addr16
in
inc
fiaddl
dec
pushf
enter
mov
xchg
lods
or
into
adc
mov
lock
rcll
das
adc
icebp
cltd
shll
fwait
mov
das
cmpb
in
mov
push
aas
sbbb
jge
jge
es
add
pop
stos
jl
or
mov
fisubrs
xor
mov
adc
pop
ret
ds
sbb
and
add
dec
mov
inc
addb
in
lods
cmp
dec
and
jmp
call
lret
inc
fstps
jecxz
ljmp
jns
mov
mov
sbb
je
pop
dec
stc
iret
aad
cld
movsl
dec
mov
cmpsb
shrl
cmpsb
rcrl
pop
sub
sub
jmp
cwtl
mov
and
inc
test
repnz
push
pushf
mulb
jnp
repnz
cmp
fwait
xchg
xor
mov
std
mov
or
imul
aad
iret
sub
jns
xor
xchg
in
inc
mov
mov
lahf
mov
xlat
jb
fsubrp
pop
js
ljmp
and
fwait
rorb
xchg
shrb
call
repnz
push
mov
fidivs
adc
sti
sub
mov
pop
push
pop
sbb
push
lock
mov
cmp
imul
jp
out
cmc
sub
xor
add
mov
out
pusha
xchg
mov
inc
mov
sti
stos
pop
repnz
clc
dec
jmp
jb
dec
scas
adc
imul
movsl
lret
fidivl
xchg
daa
ljmp
addr16
adc
sub
mov
pop
jecxz
mov
pop
insb
in
push
jne
fsubr
push
adc
insb
dec
mov
or
pop
out
inc
jl
push
das
mov
dec
in
mov
les
dec
cli
jo
xchg
push
lcall
std
test
loopne
loopne
jns
mov
call
daa
mov
negb
out
and
sarl
jo
add
sbbb
push
fs
sub
push
repz
sbb
stos
push
fsubl
and
bnd
test
xor
lods
sbb
xor
lret
cmp
mov
push
pop
mov
shl
sbb
sub
ret
scas
or
xor
hlt
adc
xor
push
mov
push
sbb
fwait
push
fdivl
mov
cmove
xor
sbb
mov
ss
sbb
push
mov
adc
cmp
icebp
clc
xchg
data16
rol
push
or
inc
mov
std
cld
fs
and
loopne
rorl
adc
jne
pop
xchg
sbb
jae
aaa
stos
ljmp
ss
add
sub
std
imul
pop
xlat
mov
sti
mov
and
mov
or
mov
out
clc
fadds
and
arpl
push
mov
cmp
xor
ficomps
push
fsubl
inc
lret
push
cmpsb
iret
fcoms
and
jo
inc
xchg
loop
lret
pop
xchg
xchg
pop
outsb
iret
mov
xor
jecxz
cli
mov
sub
mov
push
fnsave
mov
mov
push
jle
dec
adc
std
cltd
les
ret
or
cmpb
clc
jne
jae
aam
jg
enter
popa
pop
sti
mov
mov
mov
pusha
mov
and
js
mov
les
push
add
push
mov
outsl
pop
mov
mov
std
cwtl
inc
test
pop
mov
ja
aam
sbb
lods
pop
pushl
push
aam
cmp
addr16
and
test
fldenv
pop
fmulp
lock
test
jne
jmp
test
push
test
and
mov
sub
sub
mov
cmp
pop
imul
ret
ficomps
pop
add
lods
fimull
sub
sub
mov
sti
pop
inc
inc
pusha
xchg
daa
out
je
mov
dec
mov
pop
ljmp
aam
jns
sub
mov
sbb
sbb
int
jl
aaa
push
lret
sub
mov
test
call
pop
js
mov
lods
jbe
cltd
jmp
xlat
xorb
loope
popf
jl
pop
cmp
out
inc
jbe
stos
filds
adc
mov
adc
jns
push
loop
xor
jns
mov
jecxz
loop
movsb
adc
dec
addl
stc
xchg
sbb
stos
stc
sub
hlt
sbb
cmp
adcl
and
push
dec
mov
inc
add
inc
mov
pop
gs
mov
push
mov
mov
add
or
xchg
in
inc
fprem
sbb
jb
dec
std
push
cmc
and
jns
cs
add
pushf
addl
xlat
xor
cli
jl
nop
and
in
lds
jle
and
inc
les
fsubl
mov
bound
loop
les
out
ljmp
test
shrl
stos
adc
test
push
cmp
xchg
xchg
mov
mov
xchg
cltd
xor
inc
jb
add
xor
mov
rolb
adc
fadd
punpcklbw
mov
in
clc
sahf
inc
popa
insl
sbb
mov
repnz
mov
addr16
pusha
mov
push
into
arpl
repz
scas
iret
rorl
or
aam
push
sti
mov
mov
clc
sub
adc
mov
mov
js
rorl
dec
xchg
std
xor
cld
jmp
pop
cmp
sub
ljmp
inc
loopne
dec
jne
cld
mov
cmp
adc
je
push
lahf
stos
test
mov
jl
adc
outsb
aas
fcoms
push
insl
adc
push
or
jecxz
mov
sbb
push
popa
mov
cwtl
xchg
cmpsl
lods
lret
sub
test
pop
iret
and
pop
movsl
fnstcw
aaa
inc
jg
jle
inc
cmp
mov
js
sub
adc
adc
lret
lock
mov
cmpsl
inc
out
mov
leave
decb
mov
mov
mov
aaa
lods
add
cmc
shll
fst
ret
jns
imul
cltd
shrl
push
and
cmpsb
ja
mov
pusha
xor
insl
stos
mov
mov
mov
cmpsb
ret
leave
sub
xchg
push
cmpsl
fcoml
pop
adc
xor
stos
dec
loopne
rol
pop
cmp
xchg
and
push
adc
and
mov
fcom
add
mov
je
in
es
mov
aaa
lret
sahf
jne
pop
jno
or
sbb
inc
push
pop
lods
loop
out
repz
dec
lds
fisubrl
dec
lds
xchg
mov
sub
cmpsb
push
cs
jl
xchg
loopne
xor
ds
mov
mov
std
test
shlb
mov
pop
xchg
adcl
or
or
jg
scas
dec
sbb
cmp
pop
mov
insb
mov
cwtl
sarl
or
mov
adc
pushf
push
jnp
push
dec
sbb
or
xchg
mov
push
popf
inc
fsts
std
push
pop
andb
dec
imulb
push
cld
ljmp
pop
inc
shlb
lods
std
cmp
aam
sarb
xchg
jl
mov
add
pop
js
push
popa
add
das
mov
lds
lock
push
subl
inc
mov
and
call
stc
jbe
dec
push
xor
fwait
or
lret
shr
mov
mov
in
xor
adc
add
fwait
cmp
ss
insl
mov
test
adc
sbb
inc
lds
mov
stos
je
iret
fcmove
fbld
iret
dec
mov
test
das
xlat
xchg
dec
je
or
inc
xchg
testb
xchg
xchg
lcall
cmp
out
jno
pop
into
in
clc
inc
call
inc
pop
mov
insl
sub
push
pop
or
cmp
push
xchg
fadds
or
inc
add
mov
mov
adc
fs
iret
adc
xor
cmc
pop
movsl
divb
dec
test
outsb
mov
sub
inc
jle
dec
cmp
cmc
and
enter
scas
push
jo
stos
imul
andb
jmp
es
jne
cmp
test
mov
push
dec
adc
jne
subl
into
and
mov
mov
mov
loop
dec
mov
xlat
xchg
xchg
pop
xchg
xchg
and
fcoms
mov
inc
lcall
ss
mov
adc
in
sbb
cmp
out
jge
or
or
inc
mov
out
repnz
push
test
cmp
ret
add
lret
lods
push
ret
xchg
stc
jge
jmp
add
std
xchg
out
inc
jecxz
andl
dec
mov
sbb
arpl
pop
jp
push
mov
xchg
mov
imulb
mov
scas
insb
cli
into
les
or
pop
pop
or
pop
cmp
ja
dec
add
dec
jns
divb
pop
cwtl
rcl
jmp
sbb
and
push
call
mov
sbb
fstpl
mov
sbb
adc
scas
pop
shlb
ror
stos
dec
push
cmpb
movsl
xchg
cwtl
pop
dec
and
imull
rcll
dec
test
enter
inc
addb
inc
or
sub
ret
nop
orb
loop
imul
dec
sahf
test
mov
mov
or
jecxz
mov
sub
shl
mov
dec
fstpt
xchg
mov
push
xor
sbb
subl
ret
rorb
dec
fs
xor
pop
shrl
out
mov
or
lcall
add
jp
je
inc
lods
pop
push
lods
mov
shrb
fadd
ret
jl
lds
pop
orl
repz
fstp
push
mov
mov
adc
fistps
loop
xor
inc
das
xor
lahf
loop
addr16
lock
rcrb
fimuls
scas
xlat
iret
in
jl
aam
push
in
xor
or
aas
enter
jge
mov
xor
out
or
xor
push
adc
mov
mov
push
aas
test
add
sub
mov
mov
ja
push
es
sbbl
test
and
lcall
lods
pop
and
add
stc
jge
cmp
mov
arpl
cld
vmread
or
adc
mov
mov
repz
mov
fwait
jns
mov
or
js
jnp
mov
jle
or
mov
out
push
int3
pop
es
mov
adc
rcr
pop
pop
mov
ss
lret
sahf
call
cmp
jbe
or
jns
jge
xchg
xor
mov
int3
sbb
lahf
inc
add
leave
in
push
xor
sub
imul
adc
test
divb
out
lods
insl
movsb
ja
jg
add
je
cmpsb
xlat
inc
arpl
fisttpl
jno
fs
cmp
mov
lcall
xchg
into
jne
aam
pop
mov
xchg
pusha
xchg
mov
insb
js
cmpb
je
xor
rcrb
fisubl
mov
mul
adc
and
xor
aam
outsb
mov
dec
repnz
in
push
movzwl
bound
xrelease
cltd
test
xchg
mov
add
push
inc
lods
repz
es
cwtl
dec
cltd
mov
ss
ffreep
inc
out
je
lock
push
dec
push
clc
sbb
pushf
adc
ds
cmp
enter
xchg
adc
push
flds
jae
data16
psubsw
sarb
je
cmpsl
mov
inc
inc
push
add
sub
dec
sub
add
cli
movq
inc
adc
in
mov
data16
xor
add
adc
je
mov
xchg
jbe
sti
test
lds
pop
test
push
aad
outsl
mov
sbbb
jmp
loopne
jl
aas
cmp
rcrb
mov
loope
fsubrs
jno
adc
fucomip
cmc
mov
push
mov
pop
rcrl
enter
out
and
lods
jge
dec
or
je
movsl
mov
dec
xor
pop
aam
ss
in
add
cli
fdivp
mov
orb
scas
xchg
mov
imul
addb
in
add
cmpsl
out
popf
mov
popf
jb
mov
jl
out
lahf
leave
inc
insl
lods
popf
dec
or
loope
cmpsl
aad
cmp
dec
insl
subl
int
loope
stc
ja
mov
jns
mov
ficoms
lcall
mov
shr
xchg
fwait
sahf
ret
les
xor
adc
enter
mov
negb
test
shrl
sbb
sahf
pop
add
ss
xor
adc
outsb
mov
mov
aaa
arpl
stos
test
mov
push
adc
mov
adc
out
icebp
xor
das
xor
inc
stos
lahf
int
mov
cli
sbb
jl
mov
xchg
pop
add
js
sub
in
pop
and
ds
and
repnz
xchg
adc
and
stc
cmp
cli
bound
stos
xor
xchg
movsl
and
lods
or
jp
xchg
and
cmpsb
icebp
out
push
lds
jmp
aaa
dec
stc
iret
xor
cmc
cmc
jbe
jle
lea
jecxz
pusha
in
inc
cmc
cmc
xor
rcll
stc
or
dec
pop
mov
aam
cmp
lods
in
stos
cmpl
adc
mov
or
fbstp
mov
mov
mov
shlb
aas
lds
jle
sti
lock
mov
inc
cs
fisttpll
ljmp
int
fsubl
mov
cld
mov
pop
xor
mov
cmp
and
inc
xlat
negl
adc
into
loopne
sti
ja
int
bound
mov
outsb
lea
or
xorl
xchg
xchg
mov
aad
scas
shll
mov
sbb
or
add
and
addr16
fwait
pop
jb
cmpsl
push
sbb
fsubl
imul
pop
repz
xchg
gs
iret
mov
sub
mov
mov
addr16
loopne
rclb
jmp
out
mov
out
xor
mull
hlt
aad
aaa
sbb
adc
cs
les
pop
inc
iret
das
repnz
adc
pop
xchg
push
push
cmp
mov
decl
rcl
push
dec
pop
push
aam
sbb
lods
hlt
and
insl
pop
pop
xor
addb
sub
ss
push
cmp
sub
lahf
clc
xchg
and
xor
cwtl
lea
jae
test
jg
xchg
loope
xchg
mov
inc
pop
imul
loope
xchg
fsts
mov
mov
cltd
xor
rolb
mov
insl
mov
ljmp
dec
std
dec
adc
or
push
fcompl
lret
and
mov
mov
fnstenv
jbe
push
out
mov
xchg
mov
push
or
cs
push
push
jnp
xchg
xchg
fwait
push
mov
inc
fbld
mov
rcll
push
mov
mov
adc
jne
sbb
pop
jmp
jecxz
push
add
or
sub
inc
lods
daa
or
mov
movsl
test
add
mov
dec
xchg
sbb
pop
out
cmp
xchg
shll
faddp
out
mov
adc
jge
lret
jne
dec
mov
add
ds
xor
pop
scas
scas
insb
pop
pop
lods
jmp
in
insb
fadd
cld
fs
movsl
pop
dec
push
stos
lret
sahf
sub
mov
lods
les
mov
enter
sbb
xlat
xchg
aam
das
rorb
sbb
mov
xchg
mov
pop
lcall
push
jecxz
dec
cmc
into
push
push
js
push
test
mov
lods
lods
xchg
push
mov
cmc
repz
add
sti
out
cmp
repz
inc
and
out
mov
rcll
xchg
sub
rcrl
jae
sti
psubb
int
into
fcoml
push
and
loope
jp
sbb
cli
mov
mov
pop
fwait
push
fbld
inc
out
cld
jnp
aaa
pop
out
es
and
andb
jae
insl
loopne
pop
fnsave
push
fbstp
in
jle
ja
lods
dec
jnp
pop
rcl
dec
push
and
and
xchg
inc
clc
and
in
sbb
xor
out
jbe
ljmp
mov
ret
fisubrs
jge
pushf
shll
test
lret
mov
add
dec
pop
stos
pop
pusha
cmp
xlat
dec
jnp
inc
jo
xchg
pushf
pop
dec
scas
mov
push
dec
xchg
in
pop
popa
mov
mov
gs
les
pop
and
dec
mov
movsl
fnsave
fildl
addl
mov
mov
dec
mov
fwait
inc
lock
jle
mov
filds
and
les
dec
mov
lahf
adc
lock
pop
or
xchg
bnd
fwait
cmp
cmpsb
aas
push
ljmp
std
jle
icebp
gs
add
sbb
cwtl
xchg
leave
das
push
data16
orl
inc
xor
incb
pop
inc
mov
cmpl
inc
fdivrl
dec
or
add
jl
mov
dec
push
push
or
cmc
movsl
leave
push
adc
ljmp
inc
test
xor
adc
cmc
fyl2xp1
stc
xchg
cmp
pop
push
inc
shrl
out
int3
xchg
mov
xchg
daa
jno
jb
pop
filds
lock
icebp
shlb
stos
sti
pop
shrb
xchg
mov
sti
roll
push
jns
mov
mov
cmpsb
int3
add
mov
xchg
mov
leave
xor
addr16
fisttpll
loope
inc
inc
add
idivb
add
hlt
dec
xor
lea
pop
push
push
jle
xchg
mov
bound
mov
sbb
cmp
flds
adc
jecxz
xchg
xchg
in
mov
inc
and
push
subb
adcl
or
inc
push
sbb
or
cltd
loopew
int
jo
lds
fildll
js
stos
and
xor
arpl
sbb
inc
add
pop
mov
cmp
filds
inc
ss
cmp
stc
cmp
cmp
fs
sub
sub
scas
mov
mov
jp
inc
inc
mov
jo
mov
gs
mov
icebp
jnp
mov
aad
push
incl
cltd
mov
out
fadds
icebp
rol
pop
and
xorb
in
sub
cmp
shlb
stos
sarl
push
and
sbb
mov
out
xor
mov
insl
test
or
movsb
cs
in
les
ja
xchg
mov
icebp
push
and
repz
inc
dec
pop
push
inc
popa
xlat
mov
push
add
ss
mov
inc
in
sub
test
pop
mov
sbb
ret
dec
aam
out
xor
xchg
pop
xchg
test
push
test
es
neg
pop
pop
mov
jne
mov
dec
dec
repnz
adc
out
ss
mov
fcom
rclb
mov
cmp
xchg
movsb
adc
test
xchg
repnz
push
adc
push
aad
pushf
adc
iret
mov
cwtl
jbe
lea
bound
pop
jl
jp
mov
fmulp
lods
sbb
lcall
pop
test
pusha
icebp
ret
xchg
in
dec
repz
enter
push
imul
dec
sbb
lods
sub
subl
in
cmp
add
stos
add
rolb
dec
testb
ret
loopne
mov
repz
mov
test
in
jle
nop
dec
dec
loope
in
insl
test
stos
in
sbbl
lods
rcrb
mov
sbb
neg
push
test
mov
ds
mov
pop
sub
lea
jmpw
sbb
sbb
fs
test
inc
in
sub
mov
inc
jp
pop
mov
cmp
adc
mov
add
pusha
fistl
dec
and
sub
push
xorb
scas
in
adc
ja
or
mov
pop
mov
sbb
add
cli
sub
stc
mov
scas
and
or
inc
into
cmp
clc
dec
cli
push
in
xor
cli
jo
lret
stos
scas
sbb
cmpsb
divl
gs
add
add
nop
pop
mov
jo
shlb
fwait
add
sbb
inc
mov
push
xor
mov
dec
add
lods
xor
dec
imulb
xor
hlt
dec
repz
jl
nop
arpl
dec
in
jb
mov
adc
and
cmc
sub
stos
js
cwtl
fistl
mov
xor
xchg
sbb
dec
insl
ret
and
push
sbb
adc
dec
mov
sbb
inc
mov
jno
or
cmpsb
xlat
pushf
cmpsl
out
shlb
out
std
popf
mov
lcall
inc
fs
nop
das
push
clc
add
aas
lret
xlat
adc
cmp
fisubs
inc
push
popa
mov
out
test
xor
leave
dec
pop
xchg
jnp
or
add
divl
mov
mov
xchg
inc
loope
inc
mov
stos
test
push
sahf
or
jp
or
repz
cld
loopne
addb
rcrb
xchg
ljmp
inc
mov
lret
pusha
scas
out
lahf
xor
inc
mov
or
adc
jo
insl
int3
lods
jo
mov
std
in
aas
add
cmp
or
or
jmp
push
sbb
scas
test
dec
or
aam
inc
inc
je
add
pop
xor
pushf
into
lock
iret
stc
push
insl
int3
insl
or
pop
test
fsubrl
adc
daa
mov
mov
mov
fcompl
or
nop
pop
add
pop
fcompl
pop
xor
scas
dec
xlat
push
fcoml
push
dec
out
jne
fwait
mov
push
jnp
sahf
adc
out
ret
xor
lret
inc
fisubrs
mov
xchg
movsl
rcr
pop
ffree
or
xor
sbb
mov
out
loopne
xchg
push
jns
add
lahf
sahf
cmp
cmp
rorl
or
pop
mov
cmp
pop
and
pop
int
pop
mov
cmp
add
jno
bound
jecxz
jp
subb
jecxz
dec
in
pushf
divl
cli
jo
rcrb
mulb
xchg
xor
fucom
cmp
mov
pop
jns
dec
mov
pminsw
pop
jb
jl
arpl
mov
jl
jns
std
push
jmp
pop
adc
aam
push
jo
or
out
stos
push
ss
sub
mov
sub
push
das
mov
loop
or
cwtl
daa
cmc
and
push
mov
fcmovb
pop
jmp
popa
negb
cltd
and
mov
jmp
jnp
inc
cmp
arpl
fs
je
jae
dec
push
cmp
lret
push
scas
insb
gs
pusha
loopne
ret
es
int3
testl
in
or
jo
push
imul
iret
repz
cli
dec
int
movsb
cmc
adc
xor
enter
sarl
data16
mov
addl
movsb
lcall
xchg
int3
sub
mov
cltd
andb
or
jb
std
and
push
scas
jmp
lods
roll
fimuls
addr16
xchg
or
test
into
and
scas
and
pop
mov
cli
push
clc
test
std
shufps
adc
mov
mov
pop
add
call
sbb
jp
adc
inc
inc
out
fcomps
dec
inc
mov
add
or
or
js
sbb
cmpsb
or
incb
lahf
or
daa
push
andl
pop
ret
sti
lods
mov
mov
out
inc
mov
and
stos
add
ficoms
or
mov
arpl
sbb
inc
jae
dec
pop
pop
cmp
ljmp
mov
pop
mov
cs
or
mov
rorb
mov
pop
dec
lcall
sbb
in
insl
shr
xor
xchg
inc
mov
js
rcll
xlat
cli
aad
leave
mov
fdivs
add
inc
ljmp
imul
sbb
add
fstl
sub
and
mov
fsubs
mov
lret
fmul
jo
mov
adc
or
cmp
ja
mov
out
popa
inc
andb
arpl
pusha
int3
xchg
mov
xchg
lock
or
xor
lea
fnsave
push
lods
les
cmp
loopew
or
and
inc
lods
inc
adc
loope
xor
out
mov
sbb
outsb
gs
frstor
or
xchg
jg
in
mov
int
or
jns
lcall
movb
mov
pop
mov
pop
fucomip
inc
pop
out
push
lods
jb
sub
test
sub
cwtl
push
mov
and
adc
ret
aad
in
or
lcall
mov
inc
pop
mov
mov
ss
std
sbb
int3
jmp
sahf
cmp
data16
stos
fisubrs
inc
xor
xchg
adc
daa
int3
pushf
popa
push
incl
jg
xchg
in
fistl
aam
jmp
loope
cli
sbb
test
loope
xchg
mov
mov
fcmovb
les
sbb
daa
add
pushf
inc
fnsave
js
or
xor
inc
ljmp
fisubrs
das
adc
cmp
inc
mov
insb
xor
or
pop
jecxz
out
sahf
push
sub
xchg
and
inc
jns
stos
sub
les
push
jno
push
lock
mov
scas
rcrl
aad
cmp
iret
and
jecxz
sbb
lds
lods
mov
jp
stos
iret
jns
movsl
popf
dec
xor
arpl
pop
repnz
sub
jnp
cmp
xchg
xor
xchg
insl
jg
ret
cmpb
sbb
sbb
mov
aad
pop
or
out
pop
xchg
pop
sbb
xchg
add
jmp
inc
add
js
xor
mov
frstor
or
inc
mov
push
adc
inc
ret
jmp
mov
xor
movsb
loop
pop
icebp
shr
outsb
js
cmp
loope
shll
ret
adcb
cmp
push
cmp
fsubp
jge
sub
sub
cmp
movsb
stos
sub
cmpsb
movsl
fistpll
cmp
lods
pop
add
ret
push
adc
divl
lret
and
mov
jbe
lcall
aas
repz
jo
mov
rorb
mov
inc
mov
jnp
mov
jge
ljmp
pusha
pop
jge
pop
push
std
sub
por
push
cmp
in
bound
pop
jo
push
sbb
mov
adc
fisubl
push
bound
cmpb
and
push
sub
ja
lods
in
sub
xor
int
add
loop
mov
in
pusha
inc
leave
sarl
mov
fiaddl
mov
push
nop
pushf
push
mov
fcomps
mov
testb
and
xchg
ret
pop
hlt
cmp
xchg
jmp
mov
mov
push
xchg
in
jmp
shll
les
sti
pop
fists
mov
jo
jg
xor
xchg
inc
xchg
dec
rcrl
sub
and
or
pop
cmp
rorb
add
mov
pop
xor
aam
fwait
popl
stos
inc
xor
hlt
mov
pop
lahf
cmp
mov
mov
mov
add
push
xor
xor
lahf
stos
fadds
mov
pop
cld
dec
dec
loop
and
mov
inc
adc
lcall
jne
scas
ds
cli
lods
sbb
fiaddl
cld
jl
neg
push
shrb
adc
insl
add
fwait
and
lds
sbb
sub
movl
add
inc
ret
out
rol
sarl
repz
imul
jno
aam
rcrl
imul
mov
sbb
xchg
push
pop
shll
mov
dec
cmp
cmp
xchg
push
push
fwait
enter
jbe
scas
aaa
out
mov
out
jne
mov
lea
jmp
or
ss
js
mov
push
insl
movsl
notb
clc
aad
inc
or
nop
cmpsl
popa
xchg
mov
mov
jmp
jno
leave
xorl
icebp
in
push
shll
mov
mov
cmpsl
mov
pop
push
fsts
mov
mov
mov
cmp
sbbb
cmc
pop
ljmp
fcomi
loope
jo
xchg
adc
dec
mov
scas
in
das
je
iret
repz
push
sbb
imul
pop
cli
adc
dec
bound
mov
bound
push
mov
insb
add
and
mov
jnp
xor
xorl
sub
arpl
imul
aam
push
pushf
push
pushf
inc
fiadds
dec
adc
int
lock
fcompl
mov
jmp
ror
inc
xor
pop
daa
add
cmpsb
aam
sub
xchg
mov
in
mov
lock
shrl
clc
dec
negl
adc
hlt
inc
dec
pusha
jno
out
and
mov
repnz
out
js
mov
movsb
and
dec
pop
test
add
pop
pop
jle
add
lock
cwtl
mov
push
out
es
adcl
fcompl
cltd
add
sbb
mov
repz
push
xor
push
les
mov
jo
push
test
jp
adc
std
xor
outsl
shrl
aaa
push
sub
and
sbb
sbb
mov
loopne
dec
mov
push
lret
sbb
or
aas
push
push
pop
lret
in
jae
lds
cmpl
add
movsb
jp
sbb
iret
mov
pop
lods
outsb
ja
sub
mov
cmp
es
mov
adc
lods
andb
stos
loopne
rcrb
mov
push
in
fildl
call
aaa
or
jo
leave
std
cmpsl
jp
sbbl
or
inc
xchg
jmp
xor
stc
test
or
icebp
aas
int3
pop
scas
mov
cltd
sbb
incw
sub
xlat
mov
adc
out
push
xchg
mov
bound
call
sbb
cmp
leave
cmpl
xor
inc
xlat
daa
lret
arpl
out
ss
stos
test
movsl
cli
sti
mov
in
std
dec
shl
pop
jmp
aad
and
or
aad
mov
dec
mov
mov
push
dec
aad
fidivrs
or
dec
loopne
mov
pop
cmp
mov
adc
jg
lcall
imul
and
mov
pop
xlat
xchg
xchg
into
mov
ds
mov
inc
lret
lahf
outsb
pusha
push
push
or
mov
inc
enter
leave
push
int3
xor
mov
data16
push
push
sub
cmp
aad
iret
clc
mov
ffreep
lods
or
lods
inc
xchg
jge
cmp
in
dec
daa
fwait
cltd
xor
cmp
cmp
cmp
es
mul
adc
into
xchg
shrb
inc
jp
push
enter
imul
push
sbb
popa
rcl
lcall
cmp
nop
arpl
pop
xchg
data16
or
cmp
test
aad
dec
xchg
testb
into
roll
push
jnp
int
aad
andl
xor
xchg
cmp
stc
inc
sub
push
inc
leave
stc
outsb
sbb
dec
test
xchg
push
movsl
adc
xchg
inc
loope
inc
push
inc
lods
pop
sub
lret
test
and
fistps
mov
sbb
ljmp
rclb
or
fldcw
mov
incl
inc
clc
jb
dec
push
dec
or
sar
cmpl
add
jns
push
sbb
rcrl
pop
setnp
pushf
cmp
dec
rcrb
insb
scas
leave
fmuls
sti
ret
jle
popf
pop
daa
cmpsl
xor
shrl
cld
mov
inc
sub
sbb
imul
jp
pop
pusha
xchg
adc
jno
cmp
sub
lret
pop
inc
hlt
adc
movsb
insl
rclb
psubsb
mov
dec
mov
push
popa
mov
ljmp
jmp
push
cmpsb
int3
adc
sub
xor
mov
push
cmp
push
push
lods
sbb
and
lock
fcmovu
xchg
xchg
and
xchg
cmp
lcall
pop
jbe
test
jns
mov
mov
sbbl
mov
out
lret
mov
outsl
xchg
lea
ret
sarl
dec
insl
adc
popa
test
push
jne
mov
pushf
lcall
out
push
push
pop
sbb
fnstsw
jmp
ficompl
mov
jg
jg
mov
mov
in
mov
inc
sbb
outsl
sub
mov
cmpw
das
repnz
and
cwtl
pop
icebp
inc
imul
pop
orb
jmp
das
mov
mov
outsl
push
inc
jg
ret
xchg
pop
aaa
jne
divl
mov
cltd
adc
inc
hlt
dec
cmp
lea
dec
or
jg
pop
rolb
cwtl
push
hlt
push
ss
outsb
idivb
adcl
mov
jle
and
sarb
pop
inc
adc
sbb
dec
mov
ljmp
mov
into
jb
adc
xor
push
imul
popa
movsl
dec
jmp
dec
jge
dec
fnstenv
lds
cmp
repz
into
jnp
jne
dec
push
adc
or
or
mov
dec
mov
mov
fwait
sbb
sbb
fidivrl
xlat
rcll
mov
and
outsl
sbb
mov
dec
or
dec
leave
hlt
cmp
js
add
xchg
adc
dec
ds
cmp
loopne
icebp
add
cmp
inc
sbb
sub
pop
pop
and
add
hlt
push
push
jb
add
imul
mov
xchg
cli
sti
pushf
lahf
into
adc
insl
cmpsb
fwait
int
lock
push
in
cmp
call
push
sarb
addr16
push
sub
push
lret
ljmp
mov
mov
jns
pop
out
in
and
xor
push
in
add
xlat
pop
ret
jne
popf
test
push
sbb
mull
sbb
sbb
push
orb
jecxz
cltd
lret
insl
and
mov
test
cmp
cmp
pop
test
xchg
pop
xor
fwait
sahf
call
cmpsl
mov
shlb
dec
xlat
dec
and
das
cs
mov
xchg
mov
push
xchg
adc
add
mov
inc
xchg
test
sbb
cs
out
flds
push
icebp
mov
sub
push
es
mov
sub
fidivrl
cmp
fs
mov
testb
adcl
or
pop
jno
inc
mov
mov
adc
jno
test
jmp
leave
dec
mov
and
scas
inc
jge
jle
jno
mov
pop
in
mov
in
ss
iret
rolb
mov
mov
cld
adc
cwtl
mov
shlb
idiv
loope
inc
ds
xor
mov
cmp
pop
enter
das
jmp
int3
mov
adc
sbb
imulb
mov
inc
stos
out
rcll
cli
sbb
mov
test
jp
mov
rclb
int3
loope
xor
in
scas
jb
pusha
movsl
test
in
and
in
jns
and
jo
push
and
sahf
repnz
dec
test
sbbl
jne
dec
cs
hlt
and
leave
bsf
and
pusha
push
lods
and
ret
inc
xchg
push
dec
jp,pt
sbb
xchg
and
dec
inc
cmp
std
cmp
mov
mov
sub
decb
mov
cmp
lods
imul
mov
xchg
mov
lahf
mov
dec
pop
repz
fnstenv
enter
test
cmp
daa
xchg
fcmovu
inc
xchg
mov
xchg
test
xor
movb
in
cmp
jp
fs
jae
sub
sub
push
scas
push
mov
lcall
in
cmpsl
sub
sub
mov
cmc
sub
iret
std
and
movsl
cmp
jle
push
sbb
and
cmpsl
fucomp
jl
fisubrs
inc
jbe
int
and
bound
test
in
les
loope
fnstsw
psrlq
jo
jbe
xchg
shl
push
imulb
insb
pop
adc
push
adc
iret
mov
into
dec
imul
dec
xchg
cwtl
dec
test
icebp
dec
xor
inc
pop
leave
mov
cmp
mov
pop
mov
data16
sbb
ret
mov
cmpsl
mov
ffreep
mov
ja
or
scas
in
inc
jbe
push
rolb
out
loope
push
dec
ja
mov
dec
data16
pop
xchg
fwait
insb
pop
jno
mov
add
or
jl
fildl
filds
push
leave
mov
adc
stos
or
lods
insl
scas
nop
lcall
out
filds
add
mov
pop
or
stos
fwait
jge
fbstp
push
inc
xor
sbb
dec
mov
push
jmp
xlat
xchg
nop
ss
call
and
cmc
sbb
shlb
xchg
sub
xchg
out
lret
out
les
push
popf
add
inc
mov
mov
imul
lret
push
adc
cmpsb
mov
xchg
ffree
scas
into
mov
and
ret
or
jl
rcr
dec
jl
std
and
mov
jl
sbb
mov
or
mov
sbb
stos
stos
imul
and
in
push
mov
jp
ds
cwtl
call
rep
jl
das
dec
js,pn
or
gs
shlb
xchg
mov
sbb
out
xchg
mov
dec
and
cmp
dec
xor
lret
addl
cmpb
mov
into
scas
out
sbb
pop
sbb
jg
ret
mov
arpl
cld
imulb
push
dec
scas
mull
into
inc
mov
jo
pop
rol
neg
int3
mov
adc
mov
int3
jae
js
push
andl
in
cmp
mov
lahf
test
xchg
ret
inc
call
in
cltd
test
xor
sub
jle
add
je
addb
shl
jle
sahf
movsb
dec
dec
push
lret
fmuls
and
dec
adcl
and
movl
or
jo
mov
add
out
mov
fidivrs
xchg
rcll
lds
sub
pop
cmp
sahf
or
cmp
pop
out
or
sub
dec
dec
lds
dec
xchg
push
test
shrl
cmp
mov
xor
pop
mov
aam
aas
adc
adc
sub
sbb
lret
xor
mov
xchg
mov
sbb
loop
sahf
nop
and
jle
rclb
jae
cmpsl
je
outsl
adc
loope
push
sub
or
ficoml
jb
sarl
add
psubusw
aad
std
jae
pusha
jae
push
stos
mov
cwtl
push
mov
fisubrl
jno
imul
pop
mov
popf
inc
jmp
shrb
sub
xor
ret
xor
sub
jge
test
mov
test
sbb
test
pop
adc
add
push
cli
jns
cmp
mov
push
and
inc
ds
push
add
jge
add
cmp
mov
jo
int3
mov
add
xchg
notb
out
push
popa
movsb
jl
adc
pop
outsb
outsl
ret
push
mov
or
fiadds
mov
pop
xor
sub
js
mov
enter
jmp
jns
fcmovbe
cmp
stc
ficomps
or
in
fdivr
insb
gs
dec
push
push
inc
xlat
lea
out
pop
in
fmull
add
stos
sbb
fwait
clc
xor
mov
jmp
inc
and
popa
ret
dec
mov
push
cli
sbb
inc
loop
into
cld
or
push
imul
mov
in
addl
ds
ret
nop
out
test
cltd
mov
nop
push
mov
icebp
inc
gs
scas
push
adc
mov
ss
es
dec
mov
xchg
fcmove
in
add
aad
dec
loope
xchg
aaa
enter
fwait
sbb
nop
out
divl
sbb
sti
xchg
in
fnstcw
inc
inc
loope
jbe
out
fisttpll
mov
sahf
add
xor
pop
sbb
jnp
ss
pop
mov
xor
ficoms
xchg
xor
mov
iret
sub
sarl
int
add
add
or
cmpsl
mov
cli
popa
fisubrs
adc
jle
mov
mov
rcr
push
repz
mov
jae
xor
pop
xchg
out
stc
jns
push
mov
ret
pop
xchg
mov
inc
mov
xchg
xchg
push
loope
lds
insb
aam
fcompl
mov
lret
insb
or
lret
xchg
lds
jbe
push
or
imul
and
sti
jbe
mov
sub
xor
dec
xor
inc
add
repz
in
jmp
dec
daa
pop
dec
fs
loopne
nop
mov
sbb
or
or
jp
mov
sti
or
jg
mov
test
cs
lret
mov
cmp
lret
iret
loopne
rorl
adc
scas
push
xchg
sbb
mov
xchg
adc
and
jecxz
sbbb
xchg
mov
dec
lahf
or
loop
pop
je
mov
movsl
lock
aas
stos
imul
test
enter
or
in
xchg
addr16
inc
gs
jecxz
arpl
add
push
cli
xchg
rorl
mov
fs
cli
sub
sub
mov
ds
adc
sbb
mov
cmp
mov
ljmp
push
pop
lret
dec
or
mov
mov
das
scas
mov
mov
hlt
aad
es
jb,pt
sub
push
cmp
cmp
pop
mov
mov
ficompl
cmpsb
xchg
in
fbstp
call
cs
test
add
add
push
roll
rcrb
pop
fistpll
and
rorl
jno
dec
test
inc
xor
insl
mov
js
mov
outsl
mov
jp
and
push
xchg
cli
je
xchg
mov
mov
jmp
xor
xchg
ds
push
mov
das
dec
gs
stos
bound
and
xchg
ds
jp
xor
jns
sarl
roll
inc
pop
mov
jmp
mov
adc
jg
andb
mov
and
cmp
or
cltd
int3
dec
cmp
push
sub
scas
pop
or
or
mov
dec
aad
add
cltd
sub
sbb
imul
xchg
comiss
pop
dec
sahf
sbb
stc
mov
cmp
mov
xchg
repnz
jb
lahf
inc
sub
cli
repz
aam
mov
sub
xchg
movsb
mov
add
fdivl
aam
sbb
punpckhdq
add
ret
fistps
jne
fidivs
pop
jno
pop
bound
pop
shll
test
incl
out
ss
mov
lcall
push
sbb
pop
nop
sahf
xchg
pop
push
popf
out
popa
rclb
cltd
fildl
and
jno
hlt
push
sahf
jmp
cmp
pop
ljmp
jle
or
icebp
dec
fmull
sarb
xchg
test
xchg
fs
pop
adc
repnz
mov
loop
mov
pop
imul
sti
jg
xchg
lds
test
pusha
lods
add
sbbb
sahf
and
mov
pusha
movsl
and
fists
add
fistps
repnz
scas
fmulp
and
pop
test
mov
out
inc
shrl
bound
xor
test
mov
out
into
jg
ret
fcomp
inc
mov
and
jl
mov
pushf
xchg
jmp
mov
inc
push
outsb
leave
cmp
nop
cmpsl
loope
sub
int3
aam
fwait
lcall
fidivl
adc
loop
push
jecxz
pop
fistps
add
or
xchg
loop
stos
inc
xchg
fbld
out
xor
pop
es
push
int3
pop
loope
frstor
imul
mov
imul
fdivl
imul
xchg
mov
dec
or
xchg
and
push
imul
aad
push
mov
mov
jb
cwtl
inc
adc
jae
pop
sti
push
shrl
dec
ffree
or
outsl
push
stos
scas
mov
sbb
sahf
lods
push
jmp
ja
sbb
jl
xchg
out
shl
adc
push
les
outsb
push
sbb
sarl
fst
mov
cmpsl
sahf
les
sub
les
pop
je
lcall
arpl
cld
scas
cmpsl
pop
fnstsw
and
ss
popf
jae
mov
xlat
testl
xor
dec
and
daa
jo
adc
adc
dec
lcall
xor
lahf
fistl
cwtl
in
aaa
shrb
loopne
or
or
es
dec
xor
aas
xchg
or
cmpsl
daa
sbb
lds
xor
sbb
jae
mov
dec
js
sbb
push
mov
jp
inc
test
hlt
mov
xchg
jne
cmp
stos
sarb
shll
adc
movsl
test
popa
jge
sbb
mov
mov
mov
inc
rcrl
dec
jae
rcrl
mov
data16
bound
inc
fbld
in
jecxz
fistpl
mov
push
push
push
shll
pop
push
mov
fdiv
cmp
adcb
cwtl
movsb
add
mov
fmuls
shlb
dec
adc
lret
dec
ret
inc
sbb
dec
add
and
cmp
pop
push
mov
sahf
cmpsb
lds
mov
push
mov
data16
cmpsb
mov
inc
and
mov
aad
mov
out
lds
mov
sbb
bnd
into
sbb
mov
fildl
js
bound
xor
sub
dec
dec
dec
sahf
imul
and
loop
loop
orb
rorb
movsb
or
call
nop
ss
rcll
lods
mov
mov
sbb
imul
sub
mov
into
loop
sahf
sahf
fdivrs
or
icebp
dec
negl
mov
incb
mov
ds
pop
adc
das
mov
adc
std
lods
jnp
je
jo
xor
out
and
decb
xlat
jl
cs
sub
stc
loopne
sbb
lcall
jl
daa
rolb
std
jnp
sbb
in
jmp
jle
imul
sub
sbb
xlat
rolw
jle
shll
add
sbbl
cli
test
ret
ror
jo
fcmovnb
mov
pushf
sub
scas
lcall
xlat
adc
mov
mov
sub
nop
pop
push
mov
lods
push
arpl
lret
adc
dec
cmp
andb
xchg
dec
xchg
inc
lret
cmp
aam
xchg
sahf
push
aaa
je
sub
adc
cli
sbb
add
fildll
push
fwait
mov
adcb
jno
lds
popf
leave
xchg
xchg
daa
loop
adc
fwait
pop
out
push
mov
push
push
xor
mov
rcll
adc
jg
lret
jnp
mov
inc
lcall
push
out
cmp
inc
mov
add
jl
cwtl
sub
mov
xchg
inc
fsubs
jnp
cwtl
cmpsb
iret
adc
and
push
adc
or
jb
xlat
cmpsl
adc
sbb
aaa
fnstenv
inc
cmpsb
pop
fnsave
dec
cmc
daa
inc
mov
lret
lods
pop
jnp
pop
je
std
push
in
mov
jecxz
jb
and
in
sbb
cli
inc
pop
adc
out
push
pop
hlt
inc
fsubs
mov
xlat
adc
xor
repz
mov
inc
ss
push
lock
jae
test
in
call
outsl
dec
popa
add
lret
es
addr16
xchg
sti
push
movsb
jns
movsb
mov
mov
clc
fwait
mov
divb
xor
dec
inc
xor
jmp
cs
cmpsl
bound
sub
rclb
test
in
fdivl
es
daa
rcrl
mov
int3
dec
aas
sbb
sub
mov
loopne,pt
cli
or
sub
push
aam
jmp
pop
inc
shll
sub
test
jle
mov
sub
ficoms
add
sub
add
pop
fabs
fildl
fs
lds
push
cmp
leave
sub
stos
sub
push
mov
add
sub
mov
mov
sbb
and
aam
lods
in
mov
mov
inc
push
dec
mov
mov
cmc
cmp
sbb
xchg
aas
jb
or
mov
andb
lahf
add
push
pop
mov
fstl
mov
cmp
cmpsb
mov
jb
icebp
push
mov
shll
cmp
fisubrs
jmp
mov
pop
push
daa
inc
int3
sbb
je
aam
in
push
and
test
fdivs
test
push
fnsave
push
push
ss
mov
jecxz
iret
ficomps
ja
adc
ss
cmpsl
adc
lret
push
xchg
js
shlb
cmp
pop
inc
ret
das
pop
das
xor
jne
mov
dec
subb
pop
inc
xor
jmp
jle
mov
call
add
hlt
jp
out
mov
jne
lock
cmc
cmp
arpl
lock
roll
hlt
or
rolb
pop
cmp
mov
mov
sub
aas
rcll
pop
jecxz
push
fistpll
push
jbe
xor
fwait
push
mov
dec
inc
lock
adc
mov
inc
adc
mov
push
idivb
dec
fsub
inc
cmp
es
jae
sbb
aam
mov
mov
ss
ljmp
mov
sbb
adcb
pop
sub
fidivrl
sbb
push
sbb
xor
ficomps
inc
push
bound
in
pop
cmp
push
leave
daa
and
movsl
adc
cmp
insb
xchg
mov
pop
cli
pop
xor
mov
in
or
movq
push
or
lcall
cmp
test
xor
pop
sub
jns
and
out
lods
test
icebp
mov
jo
jmp
setg
dec
repnz
cmp
pop
shll
in
xchg
lods
xchg
push
cmp
adc
lret
push
fs
scas
maxps
hlt
loop
ret
out
adc
mov
icebp
roll
push
fcmovnbe
imul
iret
push
aad
cltd
cmp
loope
adc
sbb
push
cmp
dec
xchg
mov
popf
inc
into
insl
enter
inc
loop
test
arpl
mov
mov
sub
sarb
fidivrs
cmp
imul
push
popf
enter
mov
xor
inc
and
and
insb
add
mov
insl
movsb
enter
pusha
and
out
fldl
mov
jnp
push
repnz
data16
rolb
sub
sahf
xchg
pop
sbb
jg
jne
in
dec
lods
mov
stos
adc
xor
out
and
dec
je
lods
rcl
sub
xor
les
pop
jno
movsb
ja
pop
aad
xchg
cmpsl
and
pop
divb
test
lahf
mov
scas
jle
shrb
push
cli
aas
sub
pop
ret
cs
ret
loopne
test
icebp
mov
popa
cld
xchg
sahf
pop
ljmp
in
jno
rcll
xor
sbb
dec
insl
add
adc
xchg
jl
sub
rcrl
lods
sub
push
cli
mov
sub
out
mov
mov
lods
out
pushf
or
repz
scas
jne
xchg
fsubr
add
sub
mov
jge
movd
xor
push
je
mov
cmp
rclb
imul
stos
pminsw
jle
scas
add
sbb
rolb
mov
in
sub
jns
ja
mov
in
xchg
scas
ret
inc
bound
xchg
adc
clc
cli
sub
cs
mov
fsts
adc
adc
xor
les
mov
adc
std
into
cmpsb
mov
mov
cmp
out
add
adc
push
mov
mov
ss
inc
in
pusha
mov
mov
in
fadd
sub
pop
inc
and
ret
inc
lahf
mov
and
repnz
inc
sbb
sbb
pop
mov
push
pusha
push
or
sbb
dec
inc
inc
add
jo
scas
enter
sbb
dec
popa
inc
lret
je
lods
jae
pop
mov
jns
lahf
jecxz
inc
xchg
push
inc
int
mul
aam
scas
mov
or
jg
dec
stos
sub
popf
dec
jecxz
mov
test
hlt
jmp
push
imul
ret
hlt
ja
loopne
xrelease
cmp
add
mov
push
pop
cmp
mov
inc
fcmovnbe
js
out
sub
subb
fsub
jo
jecxz
ja,pn
adc
or
mov
mov
pop
jecxz
jg
popf
repnz
leave
ds
inc
push
sub
push
leave
push
leave
push
cld
sti
inc
mov
or
lcall
pop
aam
push
mov
sbb
test
movsl
dec
in
inc
mov
jecxz
and
ficoml
test
decl
rcrl
lret
xor
test
pop
jg
dec
jmp
test
lods
jl
xchg
xor
xlat
test
jne
push
add
jecxz
in
sub
daa
pop
mov
stos
dec
push
xor
rcl
sub
test
or
in
in
das
jg
mov
data16
fsubrl
or
dec
outsl
test
mov
xor
aas
jae
push
das
pop
and
cmp
ret
insl
or
sbb
mov
dec
pop
shlb
pusha
ret
push
in
stos
iret
jp
xlat
repz
in
mov
and
pop
push
add
aaa
cmpsl
mov
and
out
lcall
test
lcall
mov
ss
jbe
imul
jno
pushf
adc
mov
pop
sub
inc
or
pushl
push
jg
adc
xchg
addr16
dec
addr16
inc
adc
jmp
imul
sbb
bound
das
and
iret
std
adc
or
sub
shrb
push
sahf
shl
popf
aas
aaa
xchg
leave
jb
in
pop
pop
mov
or
adc
pushf
mov
js
xchg
and
std
adc
test
ja
loope
sar
fcmovnu
test
test
mov
orl
cmp
xor
imul
or
dec
mov
jne
cld
add
xchg
sub
lret
jecxz
sbb
cmpsb
mov
xor
jl
pop
push
faddl
addb
xchg
lcall
cltd
sub
sbb
push
cs
repz
push
out
negb
orb
or
aad
mov
dec
call
loopne
or
hlt
fs
ja
arpl
mov
mov
sahf
scas
cmpl
xchg
jo
scas
sub
mov
xchg
sub
pushf
enter
mov
jmp
xchg
shl
lret
daa
add
mov
mov
sbb
out
dec
mov
js
inc
ret
arpl
icebp
pop
leave
int3
rcll
cltd
mov
in
xor
fiadds
clc
out
je
jo
shrl
nop
sub
push
add
push
pop
call
fcompl
push
mov
xchg
push
fcom
clc
sti
lret
movsb
inc
out
push
mov
aaa
dec
pop
xchg
mov
testl
int
jo
xchg
sub
or
pop
dec
mov
xor
inc
push
outsb
aad
pop
int3
mov
mov
sub
dec
sti
mov
fs
das
aas
mov
sahf
xor
jmp
mov
out
sub
or
inc
dec
arpl
fldt
cmp
pop
aam
cmp
movsb
into
jmp
jne
xor
int3
inc
test
mov
pushf
cmpsb
dec
scas
sub
test
and
call
fsts
out
xor
xor
add
or
nop
js
xchg
scas
adc
sbb
xchg
dec
inc
mov
jge
add
sub
daa
into
fildl
popf
jo
and
das
sub
push
sub
xor
pop
outsl
push
push
ret
push
jnp
call
bound
jb
and
pop
push
and
adc
fistps
bound
add
or
push
scas
and
ds
sbb
cmp
mov
negb
scas
push
out
mov
mov
pop
flds
out
or
fwait
cli
push
insb
loop
push
loope
arpl
push
lods
pushf
xor
lret
mov
cli
lret
mov
in
pop
and
sbb
xchg
subl
push
inc
sub
pop
dec
mov
jne
add
inc
iret
call
je
hlt
jle
pop
das
add
xor
lds
lods
inc
xchg
push
testb
xor
test
or
sbb
divb
call
xchg
cmpsl
daa
xchg
mov
adc
add
sub
push
and
aaa
xor
xchg
inc
shl
fisubrs
test
mov
pop
pop
mov
test
dec
mov
imul
in
jno
cmpsb
dec
scas
push
leave
cmp
mov
push
sub
das
stc
pop
insb
imull
loope
loop
fpatan
adc
stos
dec
cli
jmp
add
or
lods
pop
cmpsl
es
mov
mov
adc
addr16
lret
pop
mov
and
test
ret
out
adc
inc
arpl
je
mov
xchg
insl
push
mov
js
mov
jb
xchg
sahf
rcll
outsl
xchg
les
lcall
ja
icebp
ret
add
fsubl
movsl
ja
cs
daa
test
cmpsl
movsb
or
jnp
icebp
sbb
mov
push
mov
negb
pop
ss
ss
cli
aad
test
dec
cwtl
push
stos
xchg
xchg
pop
push
iret
shll
pcmpeqb
xor
ljmp
insl
adc
addr16
lock
or
push
cmp
pop
lods
push
jae
popf
inc
cmp
cltd
addr16
push
lahf
pop
xchg
mov
mov
or
xor
in
repz
inc
xchg
sbb
in
out
mov
jmp
fs
enter
xchg
nop
or
add
pusha
lret
pop
insb
cmpl
pop
pop
pop
test
in
xor
ljmp
push
xor
push
pop
xchg
aas
mov
push
fs
icebp
mov
push
aaa
mov
sti
es
and
lods
or
push
addb
std
call
out
pushf
movsb
xor
sub
pop
sub
hlt
xchg
inc
pop
xchg
dec
xchg
jno
repz
jmp
push
shll
xchg
cmp
aad
iret
lcall
mov
test
and
les
mov
test
sti
cmpsl
push
hlt
es
mov
popf
out
xor
fdivrl
jl
push
xor
lea
xor
and
xor
xchg
mov
out
jne
adc
adc
hlt
mov
enter
dec
or
stos
jns
imul
xor
rcrl
ja
mov
jne
cmpsb
test
loope
sti
jmp
andb
outsb
shlb
aam
xor
stos
mov
fs
jb
xchg
push
sbb
push
aaa
fdivr
and
in
arpl
sbb
das
and
stc
shlb
test
xor
xor
pop
movsb
arpl
inc
push
xchg
cmp
dec
push
rorl
ja
pop
cmp
push
mov
push
std
movsb
lahf
push
pop
fisubrl
sbb
jecxz
je
and
mov
mov
jg
cmp
pop
dec
push
imul
jns
ret
push
in
cmp
mov
cli
lahf
cmp
mov
cmp
lock
bnd
fldt
jmp
push
adc
push
call
push
xor
les
lahf
push
movsl
mov
mov
test
insl
stos
imul
int3
icebp
ja
gs
in
mov
fnstenv
fcomp
rcll
pop
lods
int
jae
sar
push
in
outsl
lcall
xor
push
stos
lahf
les
inc
xchg
outsl
dec
inc
sbb
xor
ret
out
cmpb
jb
inc
in
lods
sarl
add
adc
or
data16
cld
and
dec
xor
aas
lock
ja
cmp
movsl
es
sub
in
fisubrs
movsb
fisubl
das
test
cmpl
xchg
and
push
gs
lock
jmp
dec
mov
dec
fisubrs
sahf
clc
icebp
jno
je
std
ss
iret
xor
lret
mov
mov
and
lock
repz
gs
xchg
mov
cmp
sbb
xor
mov
daa
test
mov
sbb
jl
aaa
sub
sbb
pop
jo
daa
and
pop
inc
xchg
pop
adc
jle
jl
mov
imull
jle
mov
cmp
lret
dec
pop
addl
sub
sub
inc
int3
popa
cltd
cmc
incl
data16
mov
xchg
loop
pop
enter
aaa
jb
jge
scas
mov
mov
jp
push
mov
dec
mov
fbstp
lret
and
stos
lahf
popa
xor
cmp
push
push
and
cli
int3
icebp
dec
xchg
adc
mov
arpl
sub
sub
xchg
into
push
ss
mov
or
sub
or
or
and
xchg
subb
add
cmp
popf
or
sbb
test
add
pushf
dec
sbb
fucom
adc
rcll
fwait
cmp
xchg
out
push
mov
jns
sub
mov
shll
enter
adcl
stos
movsb
pop
xchg
es
mov
sub
call
fdiv
jle
leave
jb
fstpl
jle
mov
hlt
addr16
in
sbb
mov
xor
push
cmp
xor
pop
pop
lea
les
icebp
lds
aam
lds
cmp
xor
mov
je
jns
stos
mov
push
in
hlt
or
sub
enter
addb
push
inc
or
outsb
mov
cmc
inc
mov
jmp
xor
fcomps
or
jns
jmp
gs
sti
dec
sbb
and
push
sub
lea
xlat
or
aam
in
jns
sub
fdivrl
fnstcw
sbb
inc
loope
add
mov
dec
lcall
outsl
jmp
add
fisubrl
int3
sub
jle
add
mov
pop
ret
imul
or
pop
filds
pop
sbb
cmp
pop
jg
call
js
ret
shrl
pop
pop
cmp
xchg
mov
or
daa
inc
aas
fstps
lods
pushf
mov
sub
lret
ljmp
and
mov
pusha
test
iret
xchg
pop
bound
call
popf
lret
adc
cmp
push
rcl
pop
inc
jnp
or
inc
shll
cs
push
cltd
in
bound
push
fsts
test
gs
movsb
pop
sub
lods
outsb
xchg
add
loopnew
pop
sbb
dec
cwtl
or
je
pushf
dec
mov
lock
into
and
inc
mov
dec
paddusb
stos
fcomps
adc
imul
decb
fsubs
sbb
and
or
jp
ret
testb
xchg
xor
jp
jge
lock
mov
aaa
sub
aas
cmp
dec
fadds
cmc
sbb
ret
nop
mov
icebp
fadd
out
jnp
mov
mov
ljmp
mov
incl
jmp
sub
repz
mov
xor
sbb
mov
loope
in
ss
addr16
iret
sub
xchg
hlt
dec
mov
dec
pop
or
sub
pop
ret
data16
jb
cmp
faddl
or
jle
sahf
popf
lods
add
jp
loopne
sbb
into
sahf
and
or
inc
cmpsb
push
fwait
sub
xlat
daa
out
adc
push
pop
shlb
sub
mov
aam
and
add
int3
jmp
stos
jae
mov
in
pop
inc
mov
cmp
dec
lock
push
arpl
dec
fdivs
mov
fs
outsl
pop
xchg
leave
das
inc
push
rep
lret
and
loope
outsb
cmp
es
or
in
ds
add
fistpl
stc
movsl
pop
arpl
das
std
mov
ror
lods
shll
les
add
testl
mov
scas
adc
cmpsb
cli
jle
pushf
scas
pusha
xor
je
loop
int3
xchg
aaa
pop
mov
fdivp
pusha
andb
popa
cmp
lret
xorb
push
fsubrs
mov
filds
cmp
fistl
lcall
popf
mov
cltd
mov
mov
mov
js
sub
scas
jbe
imul
lods
jp
cmp
mov
cwtl
inc
xor
inc
test
stc
mov
inc
aaa
add
dec
dec
pop
ss
sub
push
xor
mov
fs
aas
fcomi
das
inc
ljmp
mov
adc
cs
mov
sub
add
mov
jo
orb
cltd
xor
loopne
dec
fwait
aad
push
push
das
jmp
mov
inc
jmp
mov
lahf
shrl
andl
mov
in
adc
sbb
or
loopne
mov
scas
jecxz
ja
sub
popf
and
insb
rcrb
sbb
xchg
push
scas
cmpsb
out
addr16
pop
in
adc
addr16
cmp
sbb
inc
xchg
jecxz
and
stos
out
jmp
aam
enter
dec
ja
daa
ret
jle
js
xchg
cld
sub
jo
mov
pop
ds
enter
ret
mov
adc
mov
lods
sbb
repnz
into
jp
in
fildll
arpl
sbb
lock
cmc
setae
push
mov
outsb
data16
inc
mov
out
fistpl
mov
dec
and
dec
cmp
cltd
scas
imul
mov
mov
mov
cld
xchg
add
lahf
mov
cmp
sar
jle
xor
sbb
add
je
push
mov
shlb
cmp
andb
pushf
les
xchg
icebp
out
aad
push
adc
adc
sbb
or
subl
xchg
fdivl
mov
test
lods
adc
dec
cli
shll
mov
stc
leave
scas
jnp
rcr
test
insb
pop
sbb
mov
out
mov
imul
sbb
insl
sub
aas
scas
xor
cmp
lds
in
push
jg,pn
sbb
call
pop
aam
pop
push
loope
stc
mul
adc
xchg
dec
iret
mov
or
or
mov
cmp
into
lea
ret
lock
fnstenv
pusha
fnstenv
push
mov
aam
xchg
stc
mov
add
push
fwait
and
roll
cmp
rcrb
pminub
jno
popf
loop
cmp
xchg
sub
or
jnp
or
into
cmp
ret
sbb
lret
cwtl
xchg
bound
inc
inc
mov
sub
dec
cmpsl
aas
aam
inc
lret
push
sub
pop
and
aaa
es
mov
and
js
fwait
adc
outsb
test
jmp
cmp
inc
mov
imul
into
xchg
fisubs
imul
pop
mulb
xchg
add
fsubrl
pop
hlt
test
mov
inc
and
enter
lret
imul
loop
push
roll
int3
sub
dec
imul
xlat
mov
sub
rclb
and
jmp
inc
jge
cmp
scas
sbb
lods
jne
mov
push
out
aam
mov
add
in
inc
adc
inc
fcompp
mov
cmp
mov
mov
fcmovbe
push
inc
pop
cmp
cmp
push
out
xchg
stos
jecxz
xchg
xorb
shlb
jg
sub
jl
mov
xchg
add
mov
into
jb
insb
mov
icebp
push
dec
pop
repz
mov
outsl
xor
and
call
ffreep
or
push
repnz
or
stos
adc
pop
pop
sarl
jbe
cmp
mov
shrl
push
stc
stos
loopne
cwtl
jne
shlb
add
outsl
std
pop
mov
xor
push
loop
lods
out
addr16
jne
mov
clc
dec
loop
pop
cmp
pop
jle
xchg
es
frstor
loop
and
int3
push
add
dec
push
cmp
out
iret
xor
mov
push
xorb
decl
or
es
imul
dec
inc
in
pop
cs
push
add
push
push
push
imul
and
or
adc
test
xchg
nop
fnstenv
push
mov
xchg
sub
and
subb
shrl
cwtl
jecxz
movsl
inc
fstps
loopne
imul
bound
push
rcll
lock
mov
mov
jmp
int3
mov
rcll
int
ss
push
xorl
dec
lock
ss
pop
lods
dec
xor
rcrl
push
int
lea
mov
pop
adc
mov
imul
aas
push
hlt
sbb
xchg
push
rcrl
pop
shll
add
fnsave
cmp
dec
sahf
pop
pop
fwait
mov
cs
dec
sbb
int3
lds
data16
mov
mov
sub
sub
push
jge
pop
ljmp
or
out
xchg
imul
fldt
push
call
xlat
pop
xor
or
xchg
xchg
sub
inc
xchg
dec
xor
imul
fs
lock
push
and
int
dec
fisttpl
xchg
add
push
rcrb
sbb
out
jle
int
sbb
mov
fdivl
or
bound
ljmp
mov
mov
mov
fsubr
mov
cmp
mov
mov
jmp
pop
push
or
sub
mov
lods
jl
xchg
jp
enter
fdivrl
cmp
movsl
icebp
sarl
rclb
jns
into
jle
cwtl
mov
lahf
sub
jns
ljmp
loopne
xor
add
or
loop
push
jae
std
xchg
xchg
adc
clc
push
ret
add
dec
mov
divl
jne
fs
or
mov
push
jg
inc
lods
hlt
jno
push
or
fs
js
enter
shll
fidivl
sub
lods
mov
sub
jecxz
aam
or
inc
mov
jb,pn
inc
bound
cld
sarl
ret
mov
mov
aam
data16
out
fstps
cmpsb
push
pop
mov
ficoms
xor
loope
dec
jnp
adc
stos
jae
xchg
jl
dec
sbb
daa
lahf
and
iret
jmp
sbb
loope
outsb
and
sbb
mov
dec
cmpsl
jno
dec
adc
xchg
inc
push
dec
add
daa
outsl
fs
in
test
lret
adc
das
scas
ret
adc
aam
lock
bound
inc
dec
pop
adc
adc
jno
sbb
xor
loop
pop
cmpsb
jp
inc
pop
adc
or
dec
push
sbb
scas
jle
and
test
jg
jbe
mov
lock
je
int
dec
sahf
jo
mov
rcl
push
std
dec
imul
pop
shl
mov
lock
xor
sub
sarl
aam
dec
mov
add
loope
push
jle
fadds
push
hlt
stc
repz
mov
mov
lahf
pusha
dec
adc
flds
adc
xor
movsl
dec
mov
cmpsl
decb
loope
in
ljmp
adc
or
adc
test
cld
sbb
hlt
lds
jbe
lods
js
out
jbe
push
inc
inc
xchg
xor
es
add
lods
sbb
jl
pushf
pop
cmpsb
push
popa
mov
dec
arpl
popa
pop
int3
aas
test
mov
cmp
jle
addr16
mov
xchg
xchg
dec
sub
adc
addb
movsl
shrb
push
xor
and
js
or
leave
je
pop
icebp
fstpt
mov
test
or
mov
js
mov
adc
test
sbb
jno
test
cmpsl
arpl
xchg
mov
jno
sti
dec
lds
mov
cmpb
addl
pop
fldt
mov
sub
add
add
int3
mov
dec
scas
add
dec
dec
dec
ret
cmc
inc
cmp
dec
and
loop,pn
push
push
fidivl
xor
pop
jns
popa
imul
add
dec
xchg
sub
pop
or
test
and
mov
gs
dec
pop
mov
add
jmp
out
inc
lea
int
outsl
adc
push
mov
inc
mov
jle
ret
mov
dec
xor
mov
cld
mov
dec
cmp
test
leave
jl
jge
mov
xchg
push
mov
xchg
cwtl
add
lahf
mov
rclb
in
mov
pop
xor
int
fldenv
dec
sub
dec
xor
mov
loopne
or
fidivl
cmp
mov
push
stc
mov
sub
adc
shll
xor
lret
das
inc
ljmp
mov
jnp
push
pushf
add
imulb
inc
adc
add
insb
dec
stc
jp
adc
mov
mov
fstpl
xor
cmpl
inc
notl
and
cmc
outsb
adc
std
insb
das
sbb
fwait
cmc
movsb
mov
jb
jne
pop
data16
fimull
adc
call
pop
adc
jne
shlb
sbbb
in
icebp
lahf
popf
mov
xlat
sub
jp
es
pop
mov
dec
mov
call
adc
in
out
sti
daa
sub
add
dec
mov
ficoms
pop
lods
fmull
mov
and
lea
push
fcompl
stos
in
inc
dec
ja
sbb
sub
fidivrs
ja
sahf
js
arpl
pusha
je
fwait
xorl
out
shr
lret
lahf
sub
in
cmpsl
stos
sbb
cli
or
cld
outsl
int3
movsl
xchg
mov
out
rep
test
xor
cmpsl
push
loopne
dec
dec
sub
xchg
sub
jle
int
inc
aad
aaa
inc
gs
xchg
fimull
ds
movsl
sbb
loopne
sbb
adc
lods
xchg
dec
movntq
out
push
sub
mov
jp
ud2
sbb
dec
enter
and
out
in
gs
aas
jl
movsb
fs
testb
test
mov
dec
dec
add
sbb
movsb
int3
in
mov
jnp
daa
lods
jnp
cmpsb
scas
xchg
mov
xchg
imul
mov
pop
lods
cmp
mov
mov
out
cld
add
push
and
mov
pand
fbstp
dec
syscall
jg
and
xor
mov
lret
pop
inc
jmp
lods
subl
lods
push
popl
test
adc
sub
mov
xchg
js
pop
hlt
mov
leave
xor
xor
xchg
pop
cmc
dec
data16
sbb
sti
movsl
or
push
aad
shrb
mov
add
jl
inc
lods
scas
popa
movsb
je
loope
dec
shlb
insb
test
jb
int
push
jb
and
insb
mov
fbstp
push
int3
aad
jg
pop
ret
cwtl
nop
mov
out
cmp
mov
and
icebp
cmp
orl
cmpsb
in
nop
add
jmp
adc
add
ja
addb
mov
mov
cmpsl
pop
pop
mov
jecxz
jnp
mov
sub
pop
push
scas
js
mov
test
xor
mov
cs
inc
pop
or
mov
js
mov
mov
rcll
push
outsb
out
cmpsl
inc
and
repnz
cltd
daa
ret
cmp
popf
int
pop
in
sub
fs
sahf
test
ret
int3
daa
vpaddq
inc
cmp
std
daa
test
inc
sub
in
cmp
and
or
loop
sti
mov
xchg
rcll
inc
push
imul
dec
test
sbb
icebp
push
jo
pop
adc
mov
ds
pop
cmp
and
lret
cltd
adc
mov
jno
jno
add
add
je
pop
out
cwtl
add
add
xchg
cmp
add
mov
cmc
and
push
push
sub
sub
push
mov
repnz
loopne
inc
mov
js
in
mov
repnz
shrb
fiaddl
sahf
ljmp
in
js
ljmp
test
loop
jg
movsb
add
mov
enter
int3
ja
movl
mov
call
outsl
mov
push
jo
xchg
dec
std
jmp
or
dec
adcl
and
cmpsb
repz
sub
sub
push
sub
outsb
mov
imul
fstl
shl
bound
push
or
loope
add
or
pusha
push
push
lahf
enter
negl
jo
cmp
test
sbbl
out
mov
lods
mov
cmp
hlt
incb
ret
inc
inc
xor
aaa
cmp
in
js
lods
sbb
adc
xchg
outsl
xchg
jb
ret
adc
mov
std
leave
sub
add
mov
mov
fiaddl
enter
fsqrt
arpl
sti
jl
pop
fs
jo
cwtl
jmp
jno
int3
rsm
and
xor
pop
pop
push
add
into
movsl
or
pxor
xchg
sahf
sti
imul
adc
fistps
jmp
ret
fimull
push
jbe
ret
xor
enter
aas
sub
das
mov
pop
lods
cmpsl
mov
xor
in
imul
mov
repz
xchg
xor
sub
icebp
test
mov
and
lret
adc
ret
cmp
rcl
jmp
cs
lret
inc
test
mov
mov
fs
and
mov
sub
and
dec
icebp
push
fwait
shl
test
lret
popf
repnz
jle
pop
into
xor
sub
mov
lea
cmovo
mov
data16
inc
xchg
lock
fadd
push
ficoml
pop
mov
xchg
jl
and
push
loopne
cmp
pop
mov
dec
inc
sub
adc
mov
add
bound
lret
and
les
pop
and
mov
test
lods
lock
sub
push
lods
iret
out
mov
roll
sub
or
aas
push
popa
dec
das
test
fldenv
xchg
mov
jmp
xchg
mov
mov
xor
sbb
insl
cmp
or
movsl
nop
or
movsl
test
imul
lea
imul
mov
inc
bound
lods
ret
fwait
cmc
cmc
inc
stc
in
jmp
aam
add
arpl
sub
sbb
loope
scas
lahf
fcomps
movsb
ret
stos
outsb
and
pop
pop
js
cmp
pop
into
mov
shrl
sti
mov
ds
scas
or
ds
cmp
dec
add
xchg
or
bound
mov
sbb
test
fwait
push
outsl
or
out
orl
mov
sar
xchg
cltd
fisubs
iret
xchg
out
or
stc
outsl
sbb
icebp
or
les
or
adc
sarl
sarb
test
pop
aaa
or
mov
xchg
pusha
jle
lods
and
mov
sub
fwait
cmpsl
or
addr16
mov
jns
pushf
std
test
mov
and
jnp
dec
add
push
das
fsubrs
repnz
jo
mov
fists
sub
leave
cld
push
inc
dec
xchg
push
sar
rclb
sbb
call
insb
icebp
sarb
movsl
cwtl
fcoml
jae
adc
mov
enter
testl
mov
pop
sti
sbb
iret
xor
call
xchg
rcr
dec
push
sbb
and
cwtl
push
ret
inc
mov
and
jo
dec
xchg
in
or
test
in
aas
and
js
inc
and
test
fimull
cmp
or
cmp
out
push
enter
jge
pop
loop
fs
cmp
cld
outsb
aas
mov
nop
gs
mov
sbb
jb
or
pop
icebp
pop
loop
add
mov
testb
ret
sar
movsl
add
movsl
out
sbb
sub
sub
adc
hlt
push
sbb
cmp
mov
imul
shrl
rorl
inc
nop
std
add
cmpsl
lcall
jo
cmc
dec
jne
or
fcompl
mov
or
push
jns
xor
out
and
push
mov
ss
cmpsl
pop
shrl
cmp
lcall
add
mov
outsl
sbb
mov
leave
adc
and
sub
sub
fsubrp
pop
movsl
inc
int
mov
icebp
sbb
mov
jge
inc
or
xor
xchg
mov
or
aam
in
pop
mov
sub
mov
or
pop
push
aaa
subl
out
out
ds
xlat
out
sahf
enter
test
stos
shll
clc
cmpsl
dec
int
pop
push
adc
int
adc
scas
subl
addr16
loopne
pop
sub
cmp
repz
test
notl
rolb
sbb
data16
pop
xor
or
insl
test
cli
sbb
sbb
ja
pop
test
push
notl
xchg
mov
push
mov
scas
movsl
sahf
stc
bound
dec
xchg
gs
daa
inc
hlt
cld
pop
add
pop
lcall
gs
jl
jnp
ret
pusha
cwtl
mov
pop
mov
in
in
lods
and
mov
les
cwtl
cmp
addb
shl
int3
hlt
mov
outsb
loopne
xor
out
mov
dec
sub
jb
imul
mov
out
lods
jecxz
popa
test
xor
jns
mov
adc
jle
xchg
xchg
loop
subl
mov
inc
xchg
movsb
stos
mov
scas
inc
inc
xchg
fiaddl
jmp
int
mov
fsubl
nop
mov
mov
dec
movsb
jns
mov
mov
mov
ret
xchg
lock
scas
mov
cltd
call
pop
das
call
in
fisubl
and
jecxz
inc
mov
pop
clc
pop
adc
and
dec
ja
push
fcompl
push
in
jle
xchg
jge
std
jmp
les
push
add
rcrb
xchg
pop
jne
mov
fsubs
pop
cmp
outsl
out
out
mov
std
xor
and
dec
fcmovb
loope
popa
lahf
ficompl
jne
cli
loopne
les
cmp
adc
add
sti
lods
into
and
cmp
mov
pop
jb
jo
shl
int3
in
fldl
imul
nop
imul
lds
jge
sbb
les
add
pop
and
ds
popf
repz
stc
mov
fsubrs
push
cmpsb
jp
jmp
jp
lods
daa
testb
sbb
mov
mov
stc
fdivrs
mov
int
sbb
xor
and
lea
popa
lahf
push
mov
push
loopne
mov
pop
inc
call
mov
les
insl
cmp
jae
xor
movsl
movsl
sbbl
adc
dec
inc
pop
int
xor
sti
mov
repz
sbb
and
inc
loope
test
sub
mov
scas
popa
adc
xlat
mov
jo
rcr
aad
or
mov
loop
movsl
das
cwtl
inc
pusha
xor
aaa
aad
xor
lods
jae
daa
dec
xor
push
movb
aad
xchg
jge
stos
mov
pop
adc
cmp
shl
dec
pop
shrb
pop
test
stos
ljmp
mov
inc
imul
lods
jg
pusha
cmp
and
push
xchg
je
add
adc
fistl
sarb
std
fsub
lcall
iret
sbbl
loop
lods
andl
mov
inc
jne
imul
std
sbb
xor
fwait
nop
or
cld
scas
test
dec
call
lahf
ret
mov
aam
call
ret
movsl
incl
fistl
push
dec
pop
xchg
jp
pop
mov
jmp
xorl
add
cmpsb
cmp
xor
arpl
cmp
mov
pop
xchg
ljmp
xor
lahf
push
adcl
das
imul
pop
adc
ret
call
rolb
or
lar
cmp
add
mov
lock
imul
sub
push
push
loopne
cmp
hlt
and
mov
jne
scas
jno
lcall
mov
cmp
xchg
fstl
lods
daa
sbb
sbb
cmp
dec
cld
mov
arpl
imul
jnp
fcmovnu
and
lds
sbb
push
outsb
xchg
mov
sbb
sbb
popa
jmp
stc
and
test
cmp
push
jne
mov
mov
dec
jp
sub
xor
or
or
test
and
sahf
div
xor
xchg
or
jmp
rcrb
mov
enter
inc
gs
pop
add
lds
dec
loope
rolb
lea
enter
testl
in
pushf
adc
loop
push
mov
push
shr
rorl
mov
xor
pop
mov
sahf
xchg
push
mov
fsubrl
sub
in
add
or
ret
dec
and
push
xchg
push
jno
push
fstpt
xor
cltd
cmp
lds
jecxz
or
mov
es
mov
xor
dec
jge
enter
neg
stos
sub
fcmovne
ja
xor
cltd
cmpsl
lcall
popf
sbb
in
xor
stc
sbb
sbb
mov
pop
sbb
dec
pop
cmp
lret
cltd
dec
add
popa
faddl
mov
jg
imul
popf
aas
dec
ror
mov
dec
or
sub
fbstp
adc
bound
push
cld
into
add
in
mov
outsl
test
xor
and
mov
les
push
push
xorb
mov
adc
lahf
dec
inc
adcl
pop
push
hlt
cmp
aad
nop
push
insb
fldcw
ljmp
mov
inc
mov
cs
insb
dec
pop
addr16
add
mov
xchg
into
out
inc
mov
cli
jp
cmp
lahf
jnp
mov
lahf
mov
adc
addr16
push
js
fidivs
bound
data16
xor
xchg
push
xor
xlat
jae
cli
subl
cli
mov
mov
jmp
mov
or
int
dec
and
sbb
xchg
push
mulb
xchg
fs
pop
or
cs
imul
sub
fdivs
aam
xchg
insb
pop
and
jl
pop
pop
sub
inc
jo
mov
insb
fisttpll
and
je
jmp
cli
push
or
push
inc
add
neg
mov
push
pop
popf
lcall
dec
das
gs
inc
and
pop
cmp
or
cwtl
cmc
cld
add
mov
pusha
nop
cmpl
daa
xor
add
lcall
mov
xlat
insl
pop
fwait
pminsw
out
cmp
enter
xor
xlat
dec
in
or
test
lds
or
dec
and
push
hlt
adc
hlt
movsb
add
fdivrs
or
arpl
aam
mov
dec
movsl
pop
pop
les
sbb
pushl
add
adc
jb
inc
and
xchg
pop
pushf
mov
aad
pushf
jge
push
add
add
inc
ja
cld
xor
add
cmc
or
pop
jl
setg
xor
mov
push
lds
pop
lds
dec
mov
jbe
add
dec
sbb
inc
js
push
daa
mov
sub
int3
out
jl
testb
sub
scas
mov
inc
add
xchg
jo
cmp
stos
in
filds
sub
sub
cmp
les
jno
fimuls
cmp
mov
lcall
jp
cmp
mov
clc
mov
dec
jecxz
js
inc
and
pushf
pop
jbe
pop
dec
fs
cltd
out
pop
xchg
adc
fisubl
jl
and
xchg
fucomp
orb
mov
loop
ret
in
add
int
das
add
mov
in
cmpsl
cwtl
out
es
int
in
pop
cmp
call
add
dec
stos
mov
scas
mov
cmpsb
push
call
sbb
aam
adc
adcb
arpl
xlat
jno
fwait
xor
xchg
inc
push
and
cmp
mov
es
ljmp
jb
popa
loope
mov
andb
inc
adc
rolb
je
fildll
outsl
imul
sahf
mov
mov
out
out
fldl
push
mov
outsb
fs
add
cmpsb
push
aaa
in
fisttpl
mov
shr
add
mov
outsl
xchg
add
add
pushf
jnp
push
mov
mov
iret
daa
xor
and
je
and
scas
pusha
scas
xchg
aad
push
jb
popf
in
testb
xchg
jl
push
pop
jbe
addr16
fcmovu
inc
lcall
adc
push
sbb
out
ret
jns
aam
inc
sbb
jnp
xchg
loope
jle
add
cmp
test
jno
sbb
pop
bound
insl
xorl
sti
push
testl
repnz
sbb
sub
fwait
mov
repz
loop
jno
mov
out
adc
out
inc
std
daa
sbb
lcall
into
test
adc
sbb
dec
xor
lcall
jno
and
and
xchg
jb
dec
lds
sar
test
adc
les
cwtl
loopne
mov
mov
js
inc
add
pop
imull
and
out
inc
bound
sbb
and
call
popa
xchg
sbb
or
mov
cmp
sub
mov
xchg
push
ja
inc
or
inc
jnp
gs
aam
inc
add
xor
ret
test
mov
dec
and
jno
push
xor
xor
jns
ret
and
adc
push
int3
popa
stc
adc
cwtl
cmp
popf
cmp
stos
imul
push
stc
notl
shl
mov
dec
dec
mov
or
cmp
and
scas
push
mov
nop
push
xorl
sbb
daa
sbb
xchg
loopne
pop
jmp
cld
inc
ss
adc
mov
pop
outsl
mov
ja
xor
pop
sahf
out
shl
ss
add
stos
push
sbb
jb
mov
sbb
lds
jmp
push
jle
mov
jb
lods
into
bnd
and
test
mov
ret
rcrl
mov
sbb
addr16
pop
aas
ss
repnz
inc
cmp
bnd
lods
push
dec
aas
jns
lds
sbb
ret
es
shrb
repz
lds
jecxz
xor
insl
jmp
jne
mov
inc
mov
fsts
mov
xchg
pop
sub
mov
inc
jns
jbe
jne
mov
cwtl
insb
icebp
arpl
and
ds
mov
push
mov
or
mov
jb
aaa
into
jle
or
mov
sarl
lahf
or
and
hlt
jl
xchg
mov
xor
mov
ret
push
and
call
xor
mov
leave
stos
pushf
sub
repnz
rcll
push
jb
fdivrs
clc
test
or
divb
mov
xor
push
push
scas
inc
fsubrl
sub
jmp
lret
fs
filds
xlat
les
movsl
cli
imul
negb
stos
je
adc
xchg
mov
ret
scas
fndisi(8087
mov
cmp
divb
or
add
add
loopne
imul
add
repz
cmpsb
pop
pop
sarl
ret
insl
loop
add
mov
push
rclb
mov
adc
jae
jne
bound
adc
roll
inc
fcmovnb
sbb
xchg
ficompl
inc
aad
mov
mov
push
or
xlat
imul
push
mov
pop
add
add
inc
test
push
xor
sub
mov
aas
cmp
nopl
mov
lods
out
mov
shrl
outsl
das
aas
sbb
adc
mov
cmpb
and
sbb
scas
pop
movsb
loop
dec
mov
loop
sbb
mull
pop
cmp
add
xor
les
cmp
fwait
ret
jmp
pop
fcmovbe
sub
dec
lods
lahf
adc
mov
leave
or
xchg
test
cs
fucomip
xchg
mov
sub
aad
inc
jecxz
push
mov
out
add
mov
nop
test
pop
add
or
sub
stos
in
loope
mov
lock
mov
or
jg
in
jp
mov
pop
cmp
ljmp
pop
rcrb
dec
outsb
jnp
mov
xchg
test
inc
iret
in
lret
jnp
sub
xchg
stc
loop
loopnew
lcall
and
inc
or
mov
jnp
orb
cmpsl
mov
xchg
xchg
sub
xor
fwait
push
xor
les
and
rorb
dec
lds
inc
mov
mov
jnp
fistps
sbb
mov
xor
pop
cmp
xchg
add
sar
xchg
ret
push
inc
mov
mov
xor
out
mov
xor
mov
and
add
mov
lock
sarb
add
push
push
inc
mov
xor
cmc
fstps
loopne
cwtl
dec
movsb
mov
jl
xchg
fistpl
or
and
in
mov
or
inc
cmpsb
outsb
sahf
iret
mulb
mov
pop
loop
inc
and
fwait
mov
sub
xchg
andl
lock
cs
in
in
mov
mov
cwtl
dec
cmpsl
fbld
fsubs
sub
or
call
sti
push
sub
mov
cmp
jae
sub
cmc
jge
add
testl
sti
icebp
lcall
cmpsl
jg
fiadds
ret
mov
adc
adc
adc
cmp
inc
xchg
adc
mov
mov
inc
aad
lret
sbb
add
or
jno
inc
push
or
lods
fildl
aas
ljmp
inc
push
jae
cmp
or
pop
cltd
ret
adc
xchg
loope
sti
sub
test
and
push
or
pop
aaa
pop
cs
add
xor
cld
aam
sub
mov
movsl
mov
add
scas
shrl
jp
clc
pop
lods
mov
pop
jns
ds
and
xchg
lds
ret
fmulp
cmp
in
push
pop
dec
movl
or
or
mov
mov
xchg
cwtl
sub
idiv
mov
dec
enter
out
stos
or
test
loopne
in
cmp
pop
popa
mov
inc
mov
ret
mov
sub
cmpsl
and
add
outsl
aam
or
push
push
push
sbb
jle
or
or
shl
cmp
sub
jecxz
fldl
aas
mov
push
clc
inc
inc
int
dec
ds
sub
mov
rclb
popf
xchg
mov
inc
imul
int3
cmpsb
add
mov
xor
or
push
jo
mov
mov
push
mov
ss
adcl
jle
mov
ds
imul
testb
xor
sub
ds
clc
sahf
push
repnz
stc
mov
aad
cmp
mov
jp
sub
repz
dec
jbe
ljmp
cmp
inc
lcall
int
mov
xlat
in
dec
stos
xabort
mov
fisttpll
xchg
fwait
popa
mov
cmp
ds
pop
mov
pop
lret
dec
maxps
cmp
hlt
sub
adc
dec
stos
and
shrl
cltd
iret
lock
fsub
sbb
push
add
dec
jecxz
out
push
sbb
scas
push
aad
fadd
outsb
dec
repz
sbb
and
insl
mov
enter
fsubl
cmp
mov
pop
jg
andl
jae
adc
fwait
int
push
lahf
jg
je
mov
jp
push
push
sbb
fcmovnbe
add
popa
nop
adc
or
sub
sbb
aad
addr16
mov
or
mov
fmull
rcrl
and
cli
inc
mov
mov
cmp
jmp
in
int3
jecxz
dec
lret
loopne
inc
ja
mov
adc
xchg
mov
xchg
mov
mul
shlb
in
sbb
push
insb
and
fsubs
outsb
mov
test
xchg
div
orl
and
sub
cmpb
dec
mov
test
daa
and
fnstcw
xor
sbb
call
mov
dec
imul
in
xor
fdiv
in
mov
mov
jl
jne
adc
xor
imul
cmp
jmp
ret
jne
fisubrs
xor
mov
scas
xor
repnz
jne
and
xchg
mov
pushf
stos
arpl
mov
push
lcall
dec
jg
ret
mov
js
cmp
jmp
arpl
shlb
pop
pop
and
inc
pop
xor
outsl
stos
cmp
adc
xchg
mov
and
dec
cmpsb
cmp
push
subb
cmpsb
das
popa
pop
add
fiaddl
repnz
push
rclb
pop
pusha
xchg
and
mov
mov
inc
mov
leave
out
roll
sub
and
xlat
dec
jle
jge
dec
xlat
jne
or
in
and
mov
repnz
mov
shl
fbld
dec
pushf
push
je
add
or
jmp
js
pop
addr16
pop
iret
jne
sti
out
imul
insb
ret
pushf
aaa
loop
lea
das
lods
fildll
cmp
bound
sub
data16
mov
ret
ror
inc
aad
mov
imul
fisubl
lods
sub
into
cmp
rcr
cmpsb
out
or
adc
jl
lods
pop
jmp
jge
cs
cmpsb
cmp
cmp
leave
out
or
lahf
bswap
fidivrl
outsl
push
jbe
adc
stos
sti
mov
js
push
mov
aas
push
and
sub
popa
mov
aaa
scas
fists
jcxz
icebp
push
call
xchg
adc
xchg
stc
ss
and
jl
inc
hlt
rorl
test
mov
xchg
loope
aaa
cmp
jno
cmc
cmpsl
mov
cmp
and
xchg
imul
out
push
cltd
jo
or
pushf
dec
mov
jb
rolb
stos
dec
in
sbb
fisttps
and
adc
ljmp
pushf
sbb
cmp
mov
cwtl
fistps
and
cmp
xor
rorl
dec
imul
pop
inc
rcll
into
clc
and
dec
cmp
cmc
movsb
std
sbb
add
repz
jo
pop
jnp
push
fstps
push
sbbb
out
imul
mov
cltd
stc
xchg
jae
cmpsl
dec
test
xlat
cmp
add
in
aas
push
cltd
pop
xor
adc
jl
and
lds
xlat
cmp
mov
push
xchg
mov
test
fnsave
aas
adc
cld
push
xor
clc
cmpl
jle
inc
stos
mov
or
and
jb
stos
push
imulb
xor
or
adc
xchg
cmp
push
ret
inc
xchg
cmp
lods
ficoms
daa
fstps
call
inc
dec
daa
sub
lcall
sar
aad
add
xchg
push
sbb
adc
fwait
inc
xchg
fldt
ss
mov
adc
mov
sbb
je
mov
inc
pop
rclb
xchg
and
lahf
cmp
xchg
and
mov
sbb
pop
and
dec
inc
xchg
cltd
fmuls
mov
mov
pop
mov
lods
push
fdivr
xor
pop
lret
rorb
cmp
aam
cld
mov
loope
shll
aas
popa
mov
mov
lret
pop
inc
aaa
outsl
and
call
cmp
movsb
in
ljmp
scas
push
sub
sub
and
fstpl
mov
push
stos
lods
ja
push
dec
out
dec
hlt
and
shlb
loop
or
push
fstl
sbb
out
jbe
rorl
sub
pop
mov
mov
jae
std
inc
arpl
dec
ret
pusha
std
sbb
fwait
daa
and
and
and
sti
lret
sbb
cmp
in
sbb
loop
ss
stos
mov
stos
or
aas
pop
movsb
and
inc
outsb
fcoml
push
test
movsl
inc
jge
inc
mov
pop
aas
lret
add
mov
add
mov
fistl
pop
jo
jl
cltd
mov
pop
repz
fsubs
cwtl
cmc
enter
jbe
pop
push
xor
cmp
fists
outsb
nop
mov
insb
sbb
enter
mov
xchg
and
pop
fwait
push
xchg
cmp
arpl
dec
fwait
pop
sbb
mov
outsl
leavew
popa
lret
push
icebp
data16
jmp
movsb
mov
xor
xchg
aaa
scas
dec
imul
add
daa
mov
lret
sub
sti
dec
add
insb
fstl
and
cmpsl
cmp
add
movsl
inc
ss
sub
mov
jg
pop
jbe
lret
xchg
dec
push
incb
aad
sub
ljmp
les
gs
push
dec
pop
cmpsl
jno
call
loop
repz
in
jl
mov
xorb
aaa
and
cmp
adcb
sbb
lods
lahf
scas
fildl
out
popa
adc
dec
nop
out
lahf
imul
jns
xchg
imul
aas
mov
jnp
mov
mov
std
fsubrp
push
adc
mov
fcompl
push
in
sbb
scas
andl
mov
or
sub
aad
mov
adc
clc
jle
je
mov
sub
cli
cli
sahf
cmpsb
je
mov
pusha
add
das
es
cmpsl
jb
incl
repnz
test
push
jl
xor
sbb
and
inc
data16
imull
popa
pavgw
push
fdivl
imul
pop
lea
aas
inc
std
jns
push
xor
add
cs
sub
pop
sti
xchg
nop
add
jnp
cmp
shlb
ret
inc
inc
mov
test
clc
mov
cwtl
push
jae
movsb
mov
loop
ss
add
mov
data16
jbe
cltd
xor
inc
mov
pop
xchg
adc
int3
or
aad
add
push
and
dec
iret
inc
aad
sbb
adc
shrb
push
insb
push
movsb
xor
xchg
arpl
dec
inc
add
push
movsb
cmp
jg
adc
pop
into
adc
inc
mov
fnsave
inc
adc
cld
pop
cmc
in
fwait
cmp
add
sbb
cmp
jnp
or
bound
cmp
sub
mov
test
push
mov
jmp
cmp
mov
sub
xor
popa
sub
pop
rcl
or
aam
mov
scas
xchg
dec
enter
pop
xchg
push
fs
aas
shl
sbb
inc
in
push
int3
divb
mov
fxch
aas
out
or
adc
stos
pop
out
not
push
and
push
adc
mov
inc
out
cmpsb
push
xchg
add
testb
rcrb
mulb
push
icebp
and
mov
push
inc
or
jo
lock
stos
pop
cmp
push
cmpsb
jl
adc
adc
dec
push
test
pop
mov
ret
gs
imul
pop
mov
xor
jge
cmp
int
lds
mov
mov
test
add
pusha
cmp
pop
inc
add
into
sahf
xchg
adc
mov
jp
mov
adc
jns,pn
pop
lods
out
outsb
call
adc
mov
pop
pop
in
pop
sbb
xchg
xchg
sarb
inc
add
fnsave
jne
mov
cmp
mov
pop
outsl
je
lret
and
int
test
push
ret
pop
xor
cld
outsl
xor
xchg
aam
or
popa
xor
mov
ror
push
or
mov
jae
mov
je
int
mov
mov
xchg
ss
lods
bound
cwtl
into
test
sbb
lds
data16
jbe
loope
movsb
test
pop
pop
mov
les
xchg
negb
sub
rorb
adc
ret
mov
out
or
or
and
mov
adc
add
scas
push
pusha
inc
cmp
push
xor
pop
popf
sahf
lods
cs
leave
pop
jecxz
into
leave
mov
imul
arpl
mov
js
adc
lret
ficoml
sbb
mov
bound
pusha
and
and
lods
idiv
sub
sbb
xor
fsubr
push
jae
adc
out
mov
sarb
lods
mov
xchg
pop
mov
nop
bound
loope
jmp
pop
dec
mov
icebp
cmp
loopne
sub
or
loop
int
and
divb
arpl
dec
dec
lcall
in
jecxz
call
cmp
ss
cmc
and
das
pushf
adc
fimull
cmp
xor
push
ljmp
lods
adc
outsb
pop
or
fisubs
add
pop
cld
aad
jne
mov
cmpsl
es
mov
es
inc
mov
idivl
ss
cld
xchg
das
jp
or
mov
daa
add
mov
js
imul
enter
add
cmp
inc
and
arpl
iret
sbb
inc
mov
push
sbb
stos
mov
or
in
mov
push
lcall
mov
lcall
xlat
dec
lods
fxch
dec
mov
je
out
jno
sbb
out
nop
sbb
stos
and
int
movsl
push
inc
and
sub
push
mov
xchg
adc
add
lock
sbb
mull
movsb
mov
adc
pop
inc
ds
outsl
loop
aad
mov
stc
in
xorl
jns
imul
int3
mov
data16
fcomip
sbb
lds
xchg
in
inc
aas
icebp
int3
sub
mov
or
movsl
fidivl
stos
add
sub
fsubrs
aam
jns
and
push
rcl
and
out
pop
aam
mov
sub
xor
aad
push
mov
push
mov
mov
cmp
pushf
mov
icebp
jl
fucom
sbb
test
pop
dec
je
in
xchg
cmp
into
mov
mov
incl
imul
xorps
add
mov
or
xor
sub
fwait
mov
inc
pop
jno
push
dec
jnp
mov
sti
xchg
push
sbb
inc
jmp
and
xadd
add
push
xchg
xor
lcall
sbb
sub
icebp
mov
int3
inc
xchg
or
addb
lret
mov
rorb
mov
fidivs
adc
pop
mov
mov
das
popa
imul
mov
cmp
out
push
imul
mov
mov
xchg
rcl
fidivrl
ljmp
and
pushf
in
adcl
test
mov
ret
push
fcmovbe
out
out
sbb
push
mov
mov
ds
sbb
xchg
clc
popa
test
ss
pop
mov
cmp
lods
clc
ljmp
fwait
push
or
lock
and
inc
imull
inc
inc
sti
xor
je
xchg
xchg
out
xchg
cwtl
xchg
fs
icebp
std
leave
cmp
lret
out
or
cmp
daa
mov
hlt
pop
xorl
adc
dec
or
push
lea
push
cmpsl
and
dec
pop
sbb
mov
cs
inc
ret
jle
es
in
sbb
inc
inc
out
fbstp
ljmp
jnp
sbb
pop
pop
lret
iret
jnp
stc
push
es
int
sbb
dec
jbe
inc
inc
shll
add
cmpsb
dec
pop
mov
push
mov
cmp
cmp
dec
ja
mov
pop
and
mov
movsl
sbb
xchg
cmpsl
dec
mov
xor
in
mov
jae
or
cmpsb
shlb
mov
outsl
or
js
add
gs
xchg
test
push
fsubr
xchg
bound
pop
xor
je
inc
jl
xchg
xor
aas
cmc
cmp
lods
repz
mov
xchg
test
jecxz
cmp
pop
cwtl
pop
xchg
push
pop
adc
lods
fs
aam
mov
push
push
dec
daa
inc
in
jg
xchg
pop
call
inc
in
test
cmp
xor
out
jl
nop
pop
mov
gs
xor
dec
cltd
cmpsb
fbld
ljmp
pop
and
repz
mov
and
aaa
es
jle
gs
in
scas
add
jnp
sub
cmpsb
pusha
enter
jl
mov
xchg
cwtl
sub
mov
dec
test
fbstp
add
sub
call
popf
mov
sub
xchg
cmp
add
pusha
ficomps
lret
je
sub
push
int
cmpsb
mov
div
cmpb
push
sub
cwtl
xchg
insb
inc
fiaddl
cmp
subl
mov
jmp
das
arpl
movsl
push
inc
subl
sub
add
dec
cmp
xchg
popa
mov
sbb
lods
movsb
push
dec
mov
sbb
xor
scas
loopne
pop
add
xchg
lahf
stos
fstpt
mov
ss
pop
inc
sbb
in
test
pop
push
mov
scas
jle
aaa
test
mov
and
enter
jg
lds
lea
outsl
cmc
mov
insl
jae
in
mov
adc
cmp
cmp
mov
pop
and
sub
out
test
push
lods
xchg
jbe
std
loope
loope
sbb
xchg
xchg
xchg
std
lea
aas
shr
xchg
add
or
pusha
or
dec
int3
loop
inc
movsb
fdivrs
ljmp
cltd
xor
bnd
out
push
pop
sbb
adc
push
stos
cltd
test
and
outsb
pusha
jg
ss
cltd
push
mov
arpl
and
adcl
push
negb
std
dec
lea
xchg
cmp
in
xor
sbb
cmp
movsb
sbb
dec
add
movsb
and
in
cmpb
pop
adc
in
dec
push
das
dec
pop
mov
push
fstl
daa
rcrb
cmp
push
mov
push
cmpsb
in
inc
and
jecxz
xchg
pop
adc
and
outsl
or
pushf
idiv
inc
je
mov
lock
lock
jbe
stos
mov
popa
mov
fnstenv
xchg
das
xchg
lea
push
inc
nop
cli
insl
dec
dec
test
sub
dec
xchg
movsl
shr
fnstcw
outsl
adc
and
or
popa
push
mov
pop
std
iret
xchg
scas
repz
pushf
dec
scas
add
test
inc
adc
movsb
push
pmaxsw
jo
ljmp
outsl
pop
dec
or
mov
rcll
push
or
scas
push
push
dec
sbb
pop
das
push
nop
and
push
sub
pop
dec
lea
imul
cs
fimuls
test
inc
adc
scas
in
push
fwait
sbb
stos
xor
jl
adc
popf
mov
std
scas
cmp
sbb
mov
pop
scas
pop
lret
stc
push
push
cs
mov
jmp
sbb
xor
ja
into
call
lret
lock
xchg
jle
enter
and
xchg
jne
cmpsl
aam
hlt
mov
and
into
bound
imul
int
push
out
xchg
or
mov
mov
mov
mov
xlat
test
inc
test
push
sbb
xchg
into
mov
add
leave
lds
inc
imul
ds
call
xchg
addb
int
int
mov
pop
aam
repnz
jmp
mov
cmp
mov
push
fadds
xor
pusha
jae
inc
shr
ds
add
push
lods
adc
movsl
call
data16
test
xor
pop
cmpl
mov
push
sti
cwtl
sub
out
in
ret
push
std
and
es
imul
push
xchg
or
pusha
fistpl
in
data16
xchg
mov
push
add
iret
test
ds
ret
jp
sub
xchg
scas
mov
mov
mov
cmp
jmp
xchg
mov
pop
add
mov
stc
repnz
js
testl
xor
imul
mov
enter
adc
arpl
or
mov
mov
ret
lock
mov
stos
inc
cs
fwait
dec
mov
sbb
cmp
js
aad
xchg
jbe
lods
adc
scas
ret
test
lahf
jns
inc
xchg
sahf
mov
enter
fmuls
mov
adcl
cwtl
cmp
sub
inc
pop
shl
test
stc
pop
addr16
mov
xchg
hlt
xchg
xor
loopne
fdivrl
inc
cmp
push
mov
mov
das
rcrb
scas
imul
inc
stc
movsb
insl
pop
mov
push
dec
mov
dec
pop
loop
cltd
cmpsb
idivl
popa
pushf
int
andl
jmp
xchg
rorb
add
popf
and
and
push
and
in
daa
out
adc
insb
xor
movsl
outsb
dec
mov
fwait
hlt
iret
adc
test
into
xor
out
insl
nop
add
cmp
std
jns
dec
push
dec
cmp
jo
and
mov
jne
mov
push
xor
adc
jg
scas
push
lret
pushf
adc
mov
ret
mov
sub
outsl
leave
rorl
lret
mov
bound
cmpl
jle
jle
fisubl
push
mov
lds
rep
outsl
mov
jbe
sbb
in
sti
dec
ficoms
fstp
testl
cmpsb
test
cs
mov
outsl
cltd
clc
ljmp
ljmp
add
repz
pop
fucomi
cmp
clc
call
mov
xchg
arpl
stc
push
scas
sbb
test
cltd
pop
sbb
mov
into
sbb
xor
sub
xchg
fbstp
adc
cli
aaa
pop
jae
xor
cmp
xchg
insl
xchg
jns
mov
mov
mov
shrd
push
dec
add
sbb
adc
or
xchg
sub
or
js
xchg
sub
je
adc
add
xchg
cmpsl
cmc
push
inc
jmp
loopne
jmp
push
loope
insl
test
inc
pop
leave
cwtl
mov
jae
lret
dec
stos
ss
sbb
fdivl
mov
push
addr16
xor
dec
jnp
adc
adc
and
call
dec
jb
or
xrelease
xchg
iret
es
push
dec
adc
inc
jo
out
xchg
rorb
cmp
fbstp
mov
notl
mov
and
cmp
lods
jbe
xchg
inc
adc
sub
in
fimull
ja
loopne
rclb
mov
imul
and
sti
or
sub
xchg
jecxz
xor
ss
mov
movsl
mov
dec
test
mov
lcall
mov
outsl
sub
dec
xchg
dec
call
sub
lea
test
aaa
or
cmp
fsub
jno
dec
mov
xchg
jle
adc
sbb
cli
dec
push
shr
frstpm(287
aas
adc
out
les
inc
mov
cmp
rcl
inc
cmp
xor
lea
add
inc
xor
adc
xchg
push
dec
pop
and
lcall
or
mov
mov
push
jle
cld
ret
nop
sbb
lods
test
jecxz
popf
in
push
pop
movsb
out
in
adc
push
mov
out
inc
int
ret
ja
cwtl
enter
adc
mov
leave
pop
cmp
pop
cs
daa
mov
sbb
cltd
ljmp
shl
mov
stos
into
lds
dec
data16
call
lret
mov
imul
mov
jne
sub
mov
add
cmc
andb
add
push
add
mov
sbb
decl
pop
insl
sbb
push
cmc
jmp
jae
fs
jmp
enter
mov
adc
sbbl
js
cld
pop
mov
push
jb
pop
cli
or
push
xchg
in
icebp
mov
addr16
xor
ja
movsl
mov
mov
fldcw
jno
loopne
pop
test
cmp
ja
fs
jecxz
adc
cmpsb
ja
imul
loop
mov
outsb
cwtl
das
popa
dec
scas
cld
fwait
dec
mov
idivl
stos
out
imul
mov
inc
fadds
orl
test
ja
cmp
dec
mov
push
in
in
lahf
int3
mov
cs
xchg
repnz
mov
adc
loope
jmp
frstor
mov
pop
arpl
pop
jbe
xor
sbb
outsb
stos
out
dec
fdivs
test
jns
mov
jno
test
bound
push
adc
adc
sbb
cli
lahf
sti
push
ljmp
xchg
pop
push
jo
mov
scas
jmp
mov
xchg
jae
mov
hlt
push
aas
mov
mov
lcall
stc
sbb
ljmp
fsubrs
add
xor
ds
dec
jae
adc
and
nop
sahf
divb
mov
xchg
xlat
xor
lea
outsl
test
clc
adc
xchg
jmp
aaa
jp
lret
or
inc
out
js
lret
add
test
mov
mov
push
inc
adcl
jae
pop
jle
cmp
mov
insb
lahf
lods
inc
push
sub
push
das
inc
push
icebp
out
mov
int
mov
stc
inc
mov
lret
jns
add
push
mov
jecxz
cmp
pusha
ret
dec
xchg
pop
outsl
lret
fstpl
push
pop
xchg
jnp
inc
ss
jno
xchg
mov
mov
sbb
push
fs
stc
sbb
repnz
insb
or
into
cwtl
jb
add
mov
cs
lret
cmp
out
or
mov
sub
mov
push
xor
jbe
ror
loopne
push
adc
jo
sub
adc
add
jbe
jl
xchg
inc
test
movsl
out
or
sub
in
andb
mov
repz
mov
nop
xchg
sub
add
sub
adc
and
push
idivl
lcall
xor
sahf
inc
pop
jae
dec
fadd
jecxz
sar
ret
outsl
ffreep
jle
ljmp
test
lahf
scas
lcall
lods
arpl
mov
insl
adc
icebp
xchg
mov
mov
movsb
push
and
sub
jmp
push
test
or
sbbl
adc
xor
mov
push
jge
sarb
sti
push
xchg
leave
cwtl
stos
loopne
inc
or
mov
jle
out
sub
lret
sti
sub
outsb
imul
push
in
cmpsb
push
xchg
loopne
test
outsb
in
cli
aam
inc
sbb
mov
fwait
insb
or
and
dec
jmp
arpl
stos
xchg
lahf
fmull
aam
ljmp
dec
insb
repnz
andb
cmp
test
push
sub
jp
fwait
popf
mov
adc
add
jns
sarl
fwait
xor
ret
cmpsb
mov
std
cs
pushf
loopne
inc
stc
in
movsb
mov
jmp
pop
cltd
push
xchg
and
push
mov
xchg
adc
lods
sub
dec
sti
jne
or
shll
sbb
cmp
es
xor
jle
fidivs
or
sbb
stos
and
add
pushf
sbb
xlat
leave
js
roll
jg
andb
lea
xchg
mov
push
loopne
cmpsb
inc
rcrl
add
add
out
push
add
push
pop
fwait
and
mov
mov
lcall
xchg
mov
repz
adc
outsl
push
mov
lods
gs
test
iret
pop
mov
addr16
inc
std
test
cmp
cli
testb
movsl
pop
inc
div
cmpsl
or
icebp
mov
jns
jb
lret
dec
ret
sub
dec
das
cs
jnp
adc
aam
add
sub
jno
lods
imul
inc
mov
sub
movsl
shlb
push
push
dec
cld
iret
lcall
pop
dec
mov
mov
imul
pop
mov
xor
movsb
dec
dec
sub
mov
out
sub
orl
sbb
adc
cltd
pop
fcomps
and
movsb
cmpl
or
insl
arpl
or
inc
sub
sub
mov
into
shll
in
ficompl
insl
lcall
arpl
xchg
sti
repnz
into
push
not
mov
in
cmpsb
sub
adc
fs
fdivl
les
scas
fucomp
dec
loope
outsl
mov
mov
and
mov
push
add
sub
push
es
sbb
jp
cmp
jne
jmp
pop
dec
add
and
and
in
inc
sbb
outsl
int
mov
sub
or
mov
and
aaa
sbb
sub
jo
call
out
test
sbb
cmpb
mov
testl
or
mov
mov
daa
shrl
scas
xor
pop
data16
add
mov
xorl
pop
or
loopne
and
mov
jle
mov
pop
add
vunpckhpd
and
mov
push
mov
xchg
cmp
repz
fs
mov
dec
das
mov
jno
lret
mov
lods
mov
inc
stos
pop
mov
push
out
pushf
movsb
ror
pop
mov
int3
pop
push
outsb
add
pop
xor
pushf
test
adc
imul
and
sub
sbb
fsubr
cmp
fcompl
push
sub
mov
xor
or
push
pop
cmpsl
sbb
mov
or
mov
cs
dec
mov
push
in
xor
xor
jmp
lds
out
loope
jns
mov
cmpl
xor
scas
cwtl
lea
push
shrb
cmpsl
rorl
andb
mov
scas
loope
int3
push
dec
das
sub
mov
jns
loopne
inc
inc
aaa
jp
pop
xor
in
movsb
js
test
and
shl
pop
mov
mov
arpl
icebp
out
out
xchg
stos
jge
sahf
repz
jge
fwait
call
xchg
inc
adc
push
insb
or
or
adc
or
lock
jge
inc
int
scas
arpl
push
cmpsl
adc
or
dec
dec
pop
pop
inc
lahf
adc
dec
mov
mov
out
mov
lods
push
repz
sbb
sbb
es
imul
sbb
or
dec
lret
push
imul
mov
pushf
push
sti
insb
or
pop
loop
push
and
int
mov
iret
dec
xchg
or
or
or
imul
daa
ljmp
cmpb
ljmp
bound
jle
add
xorb
adc
pop
loopne
inc
cvtps2pd
mov
sbb
sbb
add
ffreep
inc
loopne
loopne
add
xor
jg
fistps
mov
mov
cmp
cmpb
inc
add
or
pop
sub
sti
cli
in
push
inc
jb
or
mov
and
sub
sbbb
mov
clc
lret
sarl
xchg
int
cmp
mov
or
push
ljmp
mov
hlt
mov
xchg
mov
pop
sub
je
jmp
roll
push
test
lods
mov
pcmpeqw
shrb
push
je
test
stos
test
test
adc
into
dec
push
xor
in
icebp
jle
inc
jb
sbb
pop
ret
mov
sbb
push
push
stc
subl
xchg
fwait
out
addr16
cmpsb
add
decl
dec
adc
mull
jle
xchg
dec
dec
or
sbb
sbb
imull
cltd
mov
addr16
loope
add
mov
stc
jecxz
cmp
sbb
loope
call
xchg
in
stos
addl
or
cmp
and
mov
jb
cwtl
add
gs
in
jle
mov
jno
shll
xor
mov
xchg
pop
mov
daa
and
scas
rorl
and
mov
push
add
mov
hlt
lods
sbb
sub
push
and
xor
icebp
mov
cmp
lea
out
in
sbb
js
pop
xchg
jae
mov
sbb
in
ret
gs
pop
and
lret
push
aaa
aam
pop
mov
sub
pop
push
lods
mov
mov
ds
xchg
adc
adc
inc
sti
addr16
popf
call
cmpsb
xlat
andb
add
fdivrp
cmp
incb
aaa
xchg
adc
ss
pop
aaa
lahf
fnsave
stos
sub
repnz
lret
or
mov
jnp
push
sub
aas
sbb
repz
add
push
push
and
push
jp
inc
jne
out
shrl
popa
mov
popl
xchg
rep
dec
mov
push
jl
aad
xor
ja
add
dec
lcall
cmp
shl
xchg
lds
ljmp
shlb
dec
pusha
cmp
hlt
in
cmp
setnp
dec
fldenv
mov
rclb
mov
push
jl
fidivrl
push
mov
cltd
adc
sbb
fcmovne
dec
mov
sbb
sbb
adcl
xchg
mov
in
rorb
test
rcll
mov
in
xchg
lcall
cmpsb
sbb
adc
int
repz
push
aaa
xchg
ret
fistps
sub
xchg
and
dec
or
lcall
movsb
daa
mov
aam
mov
je
sub
xchg
pop
daa
sbb
xchg
leave
and
xchg
cmpb
push
sub
cmp
sbb
imul
cmp
mov
pop
cs
jle
dec
xchg
mov
cmp
cmp
mov
or
cmpsl
fs
iret
dec
rcrb
cwtl
inc
imul
lahf
add
add
push
jl
lods
incb
fsubrs
cltd
fstp
sbb
roll
shl
dec
in
ja
pop
sbb
mov
xor
lret
je
adc
cmp
fadds
push
xchg
xor
fwait
sub
mov
and
jp
mov
cmpsb
jle
mov
or
popf
loope
out
mov
adc
inc
int
aam
idivl
jg
test
jp
push
pop
nop
lock
or
ja
aad
jecxz
scas
jmp
sbb
and
fdivs
test
sbb
pop
ljmp
jmp
pop
jbe
xchg
hlt
out
dec
xchg
sbb
mov
mov
mov
mov
addr16
mov
stos
or
ljmp
jnp
pop
adc
cmc
test
cmp
sbb
scas
push
movsb
movsb
je
inc
pop
mov
cmp
sbb
pop
add
cmc
dec
shrb
sbb
into
data16
or
std
cmp
push
into
mov
jne
and
lret
mov
pop
test
ss
inc
inc
les
bound
in
fstpl
stc
lods
andl
add
pop
sbb
and
jnp
mov
and
mov
inc
js
dec
sub
dec
les
sub
xchg
lret
add
inc
mov
mov
scas
push
xchg
repz
push
sahf
mov
fsubr
and
dec
ljmp
adc
xchg
adc
leave
insb
lahf
and
pop
int
mov
dec
sub
pop
mov
cmp
shl
fnstenv
adc
cmp
mov
adc
push
push
dec
cmp
sub
adc
shll
and
cmovs
cli
rcl
jmp
mov
add
cmc
nop
lahf
fwait
mov
mov
push
insb
sbb
cli
or
pop
aad
jl
nop
and
push
sbb
insl
fs
sbb
and
mov
or
inc
xchg
mov
pop
add
loope
pop
cmpb
mov
sub
jno
and
ret
ds
dec
mov
clc
xchg
inc
cmp
push
ljmp
mov
xchg
cmp
rorl
cmp
jb
mov
push
jb
sub
add
pop
int3
sbb
ds
add
pop
rcrl
in
fs
sti
jg
js
fistps
lret
cmp
out
mov
xchg
mov
push
or
and
pop
cltd
jle
into
dec
xchg
jno
cld
xor
rcll
push
mov
or
ja
stos
js
lods
iret
pop
cmpsb
sti
and
cs
dec
lret
sbb
aad
mov
mov
out
cmp
xor
inc
or
movsb
sbb
sub
mov
data16
cld
xchg
cmp
jge
nop
cli
jne
cmp
popa
insl
mov
xor
push
adcb
loopne
call
loop
and
jg
aaa
add
rclb
adc
fisubrl
aas
xchg
adc
xchg
es
stos
call
rorl
cmp
add
pop
pop
inc
add
and
mov
test
pop
jg
jmp
scas
sub
sti
jg
pop
sub
bound
cld
fwait
xchg
cmp
hlt
in
sbb
test
push
cli
cmp
dec
fs
in
adc
and
adcl
add
pop
std
out
or
adc
mov
push
inc
mov
ja
push
push
inc
jl
out
or
sarl
dec
lds
aad
adcl
jns
movsl
imul
fsubs
daa
xor
dec
ds
adc
sbb
cmpsb
insl
pop
adc
lock
dec
pop
push
xorl
xchg
loope
mov
dec
pop
cmpsb
and
jb
in
popa
mov
jl
and
leave
cmp
push
sbb
jg
dec
es
outsb
sbb
mov
push
xchg
aaa
int
mov
dec
jns
sbb
stos
and
cmp
sub
out
ja
loop
ds
mov
lods
pop
mov
fincstp
std
mov
sbb
pop
lahf
fcom
inc
clc
repz
je
mov
repnz
arpl
test
cmpsl
lds
or
lea
xor
int3
mov
cli
pop
pop
test
sub
jnp
xor
pop
push
shl
pop
cmp
pop
rcrl
fisttpl
lea
or
cmpsl
cli
dec
mov
cwtl
fsubs
push
dec
xchg
ljmp
xchg
lds
lcall
add
shl
lahf
addr16
add
adc
adc
push
push
inc
xchg
test
divb
cmpsl
mov
test
pop
ja
sbb
push
sub
insb
sbb
inc
xor
cmpb
mov
add
lds
jp
mov
add
xor
cmpw
pop
sub
popa
repnz
dec
sbb
nop
rorl
cltd
mov
jnp
aaa
sub
stc
cltd
in
sti
fnstsw
cmpl
or
lret
xor
stos
and
fwait
bound
sti
jge
cmpsb
hlt
cmc
pop
ret
outsb
jb
sub
mov
out
sub
aam
jno
lcall
sbb
xchg
pop
xlat
xchg
imul
lods
fisubrs
icebp
adc
inc
fcomps
test
mov
pusha
imull
aam
imul
repnz
and
cmpsl
fimuls
cs
outsl
cmp
test
stos
cvtps2pi
push
xchg
xor
aam
adc
gs
pop
push
enter
xchg
out
psubd
dec
mov
add
faddl
adc
mov
inc
push
aas
cmp
add
in
adc
testl
ja
jecxz
iret
lcall
and
mov
les
sarl
test
sahf
shll
xchg
movsb
dec
jg
inc
movsb
aas
xchg
lods
dec
clc
pop
or
in
lock
daa
xchg
xchg
jle
rolb
out
stos
xchg
aaa
mov
popf
add
subl
and
repz
popl
movsl
outsb
test
je
adc
xor
mov
aas
ljmp
push
incl
je
les
add
insb
rcr
stos
mov
into
sbb
imull
loop
dec
mov
xchg
sub
jo
and
adc
imul
cmc
fisttpll
inc
sbb
mov
aaa
or
push
lcall
add
aad
test
lret
xchg
int
lods
fcmovnb
cmp
adc
jl
rcl
or
push
add
cmpsl
in
push
fidivl
out
sti
shrb
int3
test
outsl
lcall
sub
add
sbb
dec
mov
xchg
sti
dec
inc
in
call
in
xchg
push
mov
push
ss
lcall
mov
loopne
mov
pop
adc
and
int3
and
pop
outsl
sub
hlt
jne
inc
daa
cmp
push
ljmp
mov
in
repz
lods
push
gs
das
sbb
xor
pop
mov
xchg
mov
cld
or
test
mov
fs
push
mov
mov
cltd
imull
push
push
push
push
addr16
mov
insl
shrl
jecxz
xchg
jnp
jge
cwtl
fildl
jl
insl
bound
push
and
push
frstor
out
int
sbb
andl
popa
sub
adc
stc
pop
aas
mov
pop
sbb
subb
fnstcw
int3
mov
cmpsl
jg
jp
ds
push
mov
dec
ds
inc
xlat
and
or
adc
push
jp
pop
scas
fwait
cwtl
sbb
inc
loopne
mov
lret
mov
out
cmp
xor
sbb
mov
sahf
ret
sub
ret
or
lahf
pop
ret
jge
into
enter
fnstsw
xchg
xchg
mov
and
push
popl
fiadds
dec
cli
inc
mov
add
pop
mov
mov
xor
pop
call
stos
mov
cld
dec
mov
loopne
add
js
clc
inc
sbb
dec
push
repnz
aad
aas
jp
pop
fwait
out
aam
jno
sti
cltd
dec
test
mov
andl
xor
xchg
das
iret
lods
jbe
sahf
cltd
rclb
repz
mov
loop
jg
jle
cmp
jecxz
dec
mov
xchg
mov
sbb
mov
or
jg
iret
push
jg
inc
fidivs
test
pushw
inc
xor
mov
mov
add
data16
push
rcll
gs
add
cmp
dec
push
inc
icebp
mov
cltd
push
sub
imul
enter
jmp
call
aam
icebp
lahf
ret
int3
add
bnd
cmp
push
ds
xor
mov
push
cmp
imul
stos
movsb
fiadds
les
in
xorb
push
aam
lea
push
xchg
rcr
or
jmp
imul
lcall
icebp
xchg
lahf
mov
xor
es
mov
push
add
ja
fdivr
mov
inc
cs
push
nop
fldl
out
jecxz
xchg
cmc
dec
jecxz
mov
fists
dec
jmp
adc
push
fnsave
cmp
aas
push
aad
jecxz
mov
mov
pop
mov
xchg
jb
jnp
mov
data16
ja
jne
jmp
scas
aam
jb
cmp
mov
push
bound
inc
mov
fmul
dec
jg
push
dec
push
js
mov
pop
adc
or
or
push
rolb
pop
jns
popf
jg
jmp
xchg
stc
mov
movsb
xchg
inc
mov
or
sub
xor
jmp
dec
stos
test
pop
mov
das
adc
mov
int3
ficoms
shlb
mov
mov
test
jp
mov
cmp
xchg
jle
mov
xor
test
xor
pop
loope
sub
dec
daa
dec
or
sbb
xor
sub
cld
mov
in
test
roll
fsubs
mov
mov
les
lea
cmp
mov
in
mov
call
jge
outsl
xchg
adc
mov
iret
xchg
sahf
cmp
xchg
fucom
sti
je
in
imul
ret
arpl
add
push
push
add
insl
les
arpl
xchg
call
pop
xchg
shl
lret
or
fadds
jecxz
xchg
adc
inc
xchg
dec
cli
fadd
arpl
pop
lcall
insl
jg
test
in
enter
xchg
cmpps
cmp
fnstsw
out
cwtl
jns
xor
gs
fsubs
outsl
cmp
xor
mov
cmp
cmpsb
fucomip
imul
aas
sbbb
pushf
out
xor
and
mov
dec
adc
mov
add
cmp
jo
cmc
ret
dec
pop
dec
push
push
push
std
js
add
mov
data16
sbb
inc
mov
mov
lock
test
pop
mov
cli
mov
pusha
push
pop
inc
lods
add
incb
or
push
push
subl
clc
ficoms
stos
or
mov
das
cmc
enter
fdivs
add
imul
adc
add
xchg
enter
xchg
add
in
or
into
or
cmp
fistpl
xor
insb
ffreep
repnz
cmp
mov
aaa
mov
in
aam
cmp
adc
ljmp
lcall
cmp
movsl
jecxz
jmp
adc
add
data16
bound
movsb
outsb
push
add
int3
xchg
lret
ja
mov
into
push
cmp
mov
fwait
cmp
push
js
lret
xor
dec
push
sub
rorb
aas
movsl
mov
sub
xlat
cld
mov
mov
pop
test
mov
adc
pusha
aaa
cld
pop
xor
push
pop
clc
fsubl
mov
xchg
cli
rclb
adc
jmp
lock
or
mov
inc
das
lods
cmp
outsb
xor
scas
lods
fcmovnbe
jno
aaa
aaa
dec
out
xchg
add
dec
scas
sbb
enter
xchg
out
pop
fsubl
dec
push
fistl
stos
test
fwait
inc
stos
jmp
jg
inc
decl
call
movsb
fldl
or
icebp
movsb
mov
cmp
fistpll
leave
je
and
dec
xchg
mov
fwait
or
sbb
shll
fldl
push
lcall
cs
inc
into
hlt
pop
push
or
push
inc
je
sub
out
xor
mov
jle
frstor
add
push
insb
insl
add
and
push
push
inc
das
mov
es
jmp
popa
stos
push
push
xor
and
sub
daa
sub
mov
jns
stc
or
push
mov
add
stos
jno
push
cld
mov
pop
test
es
xchg
sbb
add
cmp
mov
imul
cwtl
shr
rcll
xor
cwtl
in
dec
mov
mov
dec
push
cld
in
out
inc
stos
std
fdivl
stos
pop
mov
and
sbb
push
pushl
adc
aad
jns
inc
fsubl
cmpl
pusha
scas
movsb
movsb
xchg
stos
les
jne
sti
sub
sbb
add
mov
fnstsw
sahf
pop
inc
xorl
dec
mov
pop
test
lds
ficoml
test
popa
sarb
jg
dec
je
jnp
inc
mov
jge
jo
data16
scas
add
in
repnz
mov
mov
mov
push
mov
lahf
push
cmpsb
cld
xchg
jne
mov
xor
mov
fisubrl
bound
test
xchg
xor
outsl
adc
push
dec
pop
xor
aam
sub
adc
mull
xor
or
ficompl
loop
dec
pop
or
stos
loopne
push
push
lds
sbb
daa
pop
sub
fcomps
sub
jnp
test
scas
aam
dec
imul
icebp
sbb
enter
mov
std
push
and
fs
mov
add
push
push
fimuls
mov
lahf
sub
test
jne
mov
and
push
mov
mov
inc
mov
sbb
cmp
test
sti
jns
mov
add
mov
cmp
push
jl
aam
repnz
lods
add
aad
push
icebp
ret
mov
in
xor
outsl
add
pop
hlt
orl
lods
roll
push
bound
rorb
cwtl
addr16
mov
insl
fsubrs
ret
cmp
cltd
and
xor
cmpsl
popf
outsl
push
popf
add
out
push
inc
aam
ret
jns,pt
shrl
imul
jge
mov
lahf
xchg
dec
int
movsl
rol
push
push
dec
jb
imul
mov
subl
arpl
jo
mov
push
icebp
and
xchg
in
cwtl
std
xchg
mov
std
repnz
mov
scas
push
movsl
mov
pushf
aas
adc
fimull
push
sbb
add
mov
fisubrl
push
add
divl
jge
lahf
pop
push
mov
into
shl
jg
loopne
mov
pop
lcall
mov
add
dec
rolb
mov
stos
ret
adc
adc
shll
xor
pop
scas
cmc
cwtl
stos
dec
in
mov
cwtl
fisttpl
add
inc
aam
adcl
jo,pt
mov
pop
lods
xchg
or
filds
aaa
lcall
neg
jle
mov
sbb
es
jo
enter
jns
pop
das
cltd
xchg
filds
in
push
arpl
les
sbb
adc
pop
dec
sbb
rcrb
stc
mov
jl
xchg
in
repnz
dec
xchg
repz
jmp
push
repnz
loopne
cmpsb
jns
arpl
notl
or
arpl
add
pop
mov
cmp
sub
std
int3
outsl
sbb
ds
or
loope
push
sbb
mov
sub
push
pop
adc
jns
pusha
lcall
aad
sub
mov
or
loopne
mov
loope
add
bound
imul
mov
push
sar
inc
repnz
pop
adc
push
stos
xor
stc
mov
mov
sub
adc
xor
out
outsb
pop
xor
aam
inc
sbb
push
push
jb
ficompl
xchg
cmp
loopne
sbb
inc
jbe
dec
stos
gs
mov
dec
jno
stos
decl
sub
mov
sti
test
rolb
jp
push
lods
out
mov
push
mov
gs
mov
std
and
scas
adc
aad
sar
dec
sti
dec
dec
lods
mov
leave
scas
scas
sub
mov
cmp
imul
sbb
cmpsl
dec
test
arpl
popf
cmp
ror
sub
outsl
push
cmp
inc
push
xchg
push
jne
leave
jo
mov
js
dec
ss
dec
in
mov
jecxz,pt
sbb
das
xchg
jmp
sbb
pop
mov
pop
out
cli
add
mov
sbb
push
rolb
fs
or
sub
movsb
jns
mov
out
popf
insb
in
xchg
das
ficoml
cmp
sti
cltd
sbb
push
int
nop
or
scas
out
lahf
push
mov
mov
cltd
leave
or
push
popf
xlat
mov
jo
std
xor
add
gs
leave
cmp
mov
lds
sahf
in
push
pop
mov
mov
cmp
bound
xchg
pushl
in
dec
ret
xchg
push
leave
in
dec
lods
and
popa
popf
icebp
jnp
inc
add
cld
out
rorl
or
lcall
add
stos
out
ss
mov
mov
rorb
jle
decb
out
dec
inc
pop
cs
jecxz
fmull
cwtl
xor
xor
pop
bound
xor
cmp
lods
pop
repz
push
movsl
stos
sub
clc
or
pusha
mov
cli
jmp
pop
test
sbbb
popf
lock
test
imul
sub
loop
lods
nop
movsb
mov
out
push
sub
test
mov
sub
lret
pop
adc
popf
mov
xchg
outsb
scas
test
inc
ljmp
cld
arpl
pusha
cmpsb
leave
sbb
imul
cmp
jmp
push
out
out
in
stos
ss
stos
addr16
sub
je
adc
xchg
adc
mov
push
and
and
jg
add
lret
cltd
scas
flds
or
push
jmp
dec
mov
and
data16
xchg
hlt
push
dec
inc
shrb
pop
mov
loope
or
aas
xchg
in
and
add
out
out
jg
pop
neg
mov
mov
bound
hlt
and
scas
or
sub
pop
test
outsl
sarl
addr16
sbb
insl
insb
es
mov
and
roll
das
std
scas
loopne
faddl
push
insb
push
call
and
xor
lret
xchg
mov
push
cmp
fisubrl
lahf
dec
cld
mov
arpl
lds
jecxz
gs
fcompl
pop
jb
adc
roll
mov
es
sbb
xor
enter
addr16
push
xor
dec
dec
into
adc
int3
adc
jo
mov
push
in
mov
aaa
fisttpll
test
jnp
cs
cmp
jle
adc
lahf
outsb
fwait
xchg
xor
adc
lret
cld
pop
inc
orl
and
jns
cmp
addr16
das
fwait
dec
ja
sub
xor
sub
rorb
mov
adc
lahf
fldcw
fdivrs
push
push
mov
ret
lret
cmp
or
pop
xchg
xor
sub
adc
jmp
push
adc
lock
adc
mov
inc
sbb
daa
nop
jecxz
adc
push
mov
imull
sbb
out
sub
add
cmpsb
mov
xor
test
outsb
ds
repnz
lock
jnp
pop
xchg
mov
dec
in
stos
inc
push
sbb
ss
mov
jmp
dec
sbb
xchg
test
scas
movsl
xchg
mov
cmp
xor
jecxz
inc
and
nop
std
dec
xchg
cmp
stos
inc
call
inc
test
mov
ja
push
dec
sarb
mov
lret
cltd
mov
push
fildll
jge
ret
cmpl
in
sarb
adc
lret
mov
push
fimull
and
dec
out
adc
outsb
sub
xcrypt-ecb
cmpsl
int
adc
inc
stc
jb
mov
or
pop
aaa
or
pop
int
jge
dec
sbb
mov
cmp
sbb
pop
xor
xchg
mov
cmpsl
jl
push
sbb
mov
int3
dec
dec
outsb
rorl
out
dec
arpl
int3
inc
sub
dec
push
aam
mov
mov
cmc
xchg
inc
xor
jns
mov
xor
mov
fistps
mov
hlt
in
pushf
adc
mov
jo
scas
pop
jb
mov
sub
jns
mov
lods
jo
rcrb
outsl
in
sub
cmp
fildl
imul
xor
and
mov
insb
xchg
and
jmp
jecxz
cwtl
xor
je
in
add
andb
sahf
ret
xchg
lahf
jnp
sub
int3
mov
jmp
in
leave
lahf
mov
xor
and
jmp
add
lret
fbstp
loop
push
shl
ret
push
rclb
icebp
arpl
jo
and
xor
in
sub
outsl
xchg
adc
minps
sub
sub
mov
bound
stos
iret
loope
cmp
ds
jnp
testb
inc
mov
in
sahf
fdivrp
mov
xor
sbb
jnp
pop
xchg
daa
das
loop
lea
and
lods
and
lods
leave
cmp
push
lret
sub
dec
lea
outsl
jg
fidivrs
adc
ret
pop
insl
xchg
sti
cld
jge
sbb
lock
jns
jg
sub
cmp
inc
out
xchg
arpl
outsl
or
test
aad
cwtl
dec
out
xchg
push
jne
mov
cwtl
ficompl
pop
xchg
rclb
ss
stc
push
cmc
lahf
loopne
mov
jbe
or
push
jnp
and
sbb
inc
inc
neg
repz
int3
daa
std
xchg
inc
scas
rcrl
pop
popf
jne
inc
cli
in
aad
enter
jae
nop
adc
jnp
push
scas
dec
clc
stos
inc
loop
xchg
jmp
push
mov
gs
fwait
sub
icebp
sahf
inc
icebp
in
insl
push
mov
icebp
mov
cmc
pop
into
mov
icebp
or
add
dec
ficoml
aam
mov
out
flds
std
push
push
push
test
xchg
fimull
neg
mov
dec
clc
aam
xchg
sbb
jg
xor
lcall
je
fistpl
add
mov
subl
sbb
mov
mov
jge
jp
out
lret
mov
xlat
clc
jne
or
test
or
cmp
mov
and
ss
stos
lahf
push
add
adc
cmpsb
and
or
call
cmp
repz
aad
pop
xchg
jnp
out
das
sbb
gs
jbe
push
mov
adc
stc
jg
out
xorl
mov
or
pop
xchg
scas
mov
hlt
inc
mov
adc
jecxz
cld
add
cmp
xchg
xchg
cmp
shrl
int
mov
cld
test
fistpll
sbb
dec
pop
mov
cmp
mov
out
sbb
ficoms
and
stos
faddl
js
cmp
aas
dec
mov
insl
push
sbb
fwait
daa
jmp
aam
stc
out
or
fld
mov
mov
jl
idivl
and
subb
push
mov
stc
rolb
lret
lret
loopne
add
dec
out
push
pop
sbb
push
jp
ds
js
dec
xor
jnp
jnp
mov
nop
sahf
movsl
outsl
pop
int
pop
sbb
scas
js
jmp
jle
mov
jg
fcoml
jle
int
daa
xchg
loopne
stos
cmc
int
and
dec
rorb
add
pop
add
mov
and
rorb
lcall
mov
cld
clc
stos
sub
add
ret
inc
popa
ljmp
jmp
mov
fadds
rorb
sub
xor
ret
sub
mov
das
jno
cltd
enter
mov
in
push
rolb
out
out
or
stos
cmp
fcoml
test
jmp
adc
inc
int
dec
ljmp
mov
scas
fs
adc
add
push
repz
sar
test
rclb
test
lods
adc
xor
stc
adc
adc
jge
les
pushl
xor
sbb
sbb
lret
dec
imul
movsb
sti
hlt
add
int3
jl
fistpl
stos
movsl
sub
nop
pop
repz
ja
and
je
add
jmp
push
sbb
or
cmp
mov
jae
cmc
push
push
dec
sbb
scas
inc
or
lods
mov
je
jecxz
cmpl
push
cs
pop
mov
cmpsb
cltd
int3
cwtl
jns
icebp
xor
daa
inc
lret
pop
adc
bound
jle
sub
int3
mov
push
mov
mov
stc
and
push
lahf
cld
xchg
push
sub
pop
sbb
or
inc
mov
ja
test
jge
fsubrs
dec
add
inc
ja
mov
fadds
mov
or
aaa
cmp
scas
mov
xchg
rcll
stos
in
push
aad
jnp
sbb
push
lds
leave
jnp
sti
push
sbb
mov
add
les
mov
test
pop
pop
add
pop
pop
mov
or
roll
pop
aaa
pop
test
dec
test
add
outsb
js
pop
sub
out
jl
in
stos
xchg
test
jg
add
test
mov
add
popa
loopne
cmpsb
in
movsb
add
popf
and
mov
xchg
clc
jl
imul
cmp
imul
cmp
cs
cltd
fistl
inc
mov
pop
or
or
mov
movsl
test
lock
xchg
mov
adc
jl
incb
movl
push
xchg
inc
int
ds
mov
sbb
daa
mov
and
xor
xor
lods
cmp
jns
jae
or
fucomip
leave
mov
push
adc
test
aas
clc
lea
pop
outsb
and
add
push
jne
lock
xor
inc
sbb
lret
xorl
adc
icebp
xor
xchg
adc
jle
ja
adc
fsubr
sbb
int
mov
push
jae
into
push
into
sbb
insb
imul
cld
outsl
outsb
fdivr
ret
or
roll
test
jle
adc
cmp
ret
jbe
sub
fisttps
push
es
aad
xor
sahf
jbe
iret
add
in
outsb
jecxz
pop
lret
cmp
pop
cmc
gs
pushf
les
jnp
cmpb
aam
jmp
mov
mov
out
scas
and
fs
dec
mov
jl
and
pop
cmpsb
adc
or
insl
cs
cmc
xchg
mov
cwtl
jl
or
lods
lret
pop
mov
sbb
jp
pop
mov
rorl
mov
lret
lods
push
and
mov
and
pslld
jp
mov
in
xlat
rcrl
cli
add
mov
test
cmp
cmc
sub
movsl
jecxz
mov
testb
out
sahf
cs
loopne
fdivrs
and
cli
push
or
int
sbb
push
stos
adc
aaa
sbb
push
cli
movsl
inc
xor
ljmp
fildl
push
fsts
das
sbb
jno
mov
das
adc
fstps
iret
jge
lahf
icebp
push
fsubrs
sbb
xchg
dec
js
int
lock
fsubl
or
adc
sub
jle
mov
push
dec
int
or
push
in
pop
push
ja
mov
jb
add
je
popf
ret
mov
fs
sbb
aas
xor
ds
xor
jle
popf
xchg
int
pop
les
adc
cmpl
mov
jbe
insl
or
lret
shlb
jbe
call
cmp
jmp
stos
ja
int3
inc
pop
xor
inc
subb
or
sbb
sbb
push
incb
nop
lock
fstps
sub
push
stc
pusha
inc
ret
imull
pushf
inc
cltd
cmpsl
insl
jge
lret
push
push
scas
mov
cs
adc
scas
jg
lock
or
jp
xchg
out
pop
icebp
adc
xchg
loope
cltd
movsl
ljmp
pop
inc
cmp
sub
call
adc
jp
cld
lods
sbb
or
xlat
and
test
jg
adc
jl
xor
push
sub
sbb
leave
mov
jge
sub
cmp
dec
addr16
cltd
out
and
das
cltd
jbe
imulb
rorb
enter
inc
mov
arpl
cmp
sahf
imul
fldenv
or
into
adc
das
ds
push
imul
lea
test
pop
or
aaa
in
cmc
push
adc
mov
push
inc
push
xchg
mov
loope
sbb
mov
ds
and
iret
mov
iret
jnp
out
mov
ret
test
mov
jb
mov
lcall
cwtl
rorb
into
test
je
or
xor
dec
cmp
xchg
mov
iret
pop
mov
pop
xchg
stos
xor
pop
test
adc
and
daa
decl
les
movsb
stos
push
jg
xchg
dec
icebp
insl
imul
or
push
xchg
fs
nop
sbb
cmp
shr
mov
fidivrl
cmp
xor
pop
jo
push
pop
jbe
mov
xor
pushf
xchg
int3
xor
lock
test
and
mov
enter
sbb
cli
daa
aas
push
cmp
fdivp
sbb
rolb
bnd
sahf
shrb
out
outsb
imul
test
xchg
lret
push
pop
fisubl
jo
std
cmp
push
push
ja
call
xor
mov
pop
aad
gs
loop
sub
out
jge
repnz
jp
sbb
add
cmp
lods
lds
mov
mov
ja
cmp
dec
decb
mov
cwtl
out
cmpsb
sub
sahf
sub
pop
sbb
cld
nop
loop
test
fs
mov
or
aam
ret
or
icebp
mov
dec
or
inc
lock
jmp
adc
cmp
aas
adc
adc
inc
sbb
mov
subl
lret
xchg
in
add
out
rcll
and
in
stos
push
push
sub
mov
cld
cmp
loope
movsl
push
push
lret
sbb
aam
cwtl
lret
xchg
lea
fcmovnb
mov
dec
dec
jb
mov
mov
enter
inc
js
mov
mov
fwait
xlat
adc
add
pop
mov
pop
mov
js
int
adc
mov
testb
mov
je
dec
mov
push
jno
ficompl
mov
xchg
adc
and
sbb
jle
xchg
stc
or
lahf
js
out
cltd
aas
loope
cmpsb
lcall
jecxz
sub
cltd
jp
in
dec
arpl
mov
test
mov
test
or
dec
cmp
dec
inc
mov
xchg
shlb
sbbl
jnp
inc
pop
rcrb
pop
xor
out
jge
insl
out
push
outsw
mov
sbb
add
test
fisubrl
or
in
ljmp
add
and
xchg
out
mov
ljmp
mov
xchg
xchg
xchg
enter
scas
add
push
jns
xor
fwait
xchg
xlat
jne
jle
add
mov
repz
xchg
clc
jmp
stc
fsubl
jl
jl
push
xchg
rorl
push
mov
push
pusha
mov
xchg
movsl
daa
loopne
insb
arpl
ret
jmp
stc
add
int3
lods
adc
fwait
xor
push
shlb
rcrb
out
push
sbb
push
arpl
iret
push
inc
jle
insb
cld
ja
or
push
mov
xchg
test
pop
or
dec
sarl
inc
dec
xlat
mov
xchg
mov
stc
loope
lcall
sub
fisttpll
or
push
mov
jno
insb
stc
scas
xor
les
mov
push
adcl
sub
add
mov
scas
popf
push
adc
aam
mov
jmp
imul
clc
fs
inc
arpl
out
mov
mov
and
push
push
clc
std
loope
jl
dec
in
mulb
pop
push
lret
loopne
mov
add
and
pop
out
push
arpl
rorb
js
jne
mov
movsb
cmp
stos
xchg
nop
adc
daa
push
fdivr
fucomip
lea
shll
sub
jmp
scas
jae
scas
push
nop
ret
iret
cld
mov
adc
insb
pop
cmpl
inc
inc
clc
pushf
mov
fnsetpm(287
sti
cwtl
aaa
xchg
sub
insb
jle
add
dec
inc
fcomps
adc
fwait
cmp
inc
aam
mov
cmp
fisttpl
bound
stos
dec
idivl
and
jne
and
cltd
imul
fidivs
stos
mov
jecxz
aad
shrl
dec
xor
add
mov
movsb
adc
push
jge
push
fistps
mov
pop
hlt
dec
push
pop
inc
jg
mov
icebp
push
iret
pusha
cmp
push
rcpps
inc
pop
push
dec
and
or
dec
icebp
rorl
or
adc
cwtl
inc
frstor
mov
fmuls
pop
int3
lods
rolb
xor
jo
or
out
adc
into
dec
inc
lock
jmp
and
lcall
xchg
push
pop
pop
loopne
adc
push
cltd
or
cmc
rcr
jae
cs
pop
xchg
test
sbb
loope
xchg
mov
sti
adc
dec
push
jo
xchg
and
shlb
insl
es
or
xlat
lea
pusha
rcrl
mov
loopne
enter
jb
push
insb
sub
xchg
shl
arpl
add
push
pop
jle
ret
in
ljmp
inc
js
es
mov
loopne
mov
cmp
test
in
int3
out
inc
clc
adc
push
sbbb
add
mov
frstor
xor
or
jg
imul
lahf
fstps
leave
sti
stos
mov
push
inc
or
push
stc
cmp
loope
imul
ds
hlt
aaa
mov
stos
pop
leave
adc
dec
jno
leave
daa
aad
cmp
adc
dec
movb
adc
aas
adc
add
cmp
loopne
popa
mov
push
shlb
cmc
fs
pop
mov
lods
testb
arpl
enter
mov
clc
hlt
into
lret
lods
lods
rclb
test
push
shrd
xchg
stos
iret
rcll
testl
inc
sarb
jecxz
mov
aas
mov
lock
insl
scas
test
xor
jecxz
in
fs
mov
ja
movsb
cmp
sbb
inc
cmpb
adc
inc
inc
leave
fildll
push
int3
mov
pop
popf
mov
test
divb
sub
jbe
cmp
js
xchg
sti
imul
cmc
fmull
lret
repnz
mov
mov
jae
fsubrp
imul
cmpsb
int
pop
in
push
jge
and
cmp
sbb
icebp
int
cmp
cmp
cs
dec
or
cli
movsb
xchg
adc
adc
clc
mov
pop
pop
adc
jo
mov
aad
nop
mov
mov
dec
add
mov
pop
jb
mov
xchg
xchg
lcall
test
das
mov
mov
loope
shlb
loope
or
cs
pop
pop
int3
jno
outsl
sbb
xchg
pusha
andb
cmp
lret
xor
add
sub
mov
dec
mov
or
cmpsb
out
push
cli
dec
fucomi
and
mov
lds
adc
cli
cmc
insl
jge
dec
in
aam
lods
mov
ja
aam
fcoml
fcompl
mov
push
iret
add
sub
sahf
sbb
jp
das
cli
lock
push
cmp
test
cmpsl
sub
insl
jnp
sbb
fildll
sahf
movb
imul
jo
or
je
and
sbb
test
loopne
xor
mov
xor
push
in
int
in
insb
pop
stos
jmp
pop
mov
sar
bnd
inc
stos
sub
repnz
scas
cld
jge
bound
fs
fiaddl
mov
insb
sahf
push
outsb
mov
hlt
ucomiss
dec
pop
rolb
std
lea
test
jg
push
test
aam
js
adc
gs
adc
repnz
inc
mov
aaa
daa
and
adc
test
movsl
cmp
dec
test
mov
into
dec
ret
xchg
shlb
adc
insl
dec
mov
jb
adc
fmul
sbb
xchg
cli
flds
out
add
clc
lods
xor
dec
stos
add
cmp
cmpsl
lcall
pop
mov
mov
pop
dec
ja
pusha
push
pusha
insb
push
scas
popf
test
and
outsl
outsl
inc
lcall
aaa
add
outsb
pop
sbb
repz
or
lods
enter
mov
pop
pop
lret
idivl
mov
daa
mov
xor
and
ret
push
or
ds
ror
xor
pop
bound
mov
mov
fbld
xor
jp
mov
mov
add
sbb
cmp
dec
es
jmp
out
fcmovbe
filds
add
jge
dec
roll
push
arpl
or
inc
out
enter
add
sahf
ja
stos
jg
filds
fstps
and
sti
pushl
rcll
inc
push
cs
imulb
sbb
pop
jp
in
adc
mov
test
adc
mov
inc
andl
mov
testl
sbb
aad
gs
sub
mov
fs
in
idivb
inc
jg
shrb
xorl
pop
out
cmpsl
push
shlb
sbb
jne
mov
bound
das
shr
or
adc
sub
mov
xchg
inc
sbb
aas
sub
imul
push
loope
gs
jge
or
les
mov
je
push
pop
cmp
adc
cmpsl
dec
cli
popf
sub
cmp
sbb
adc
jle
lret
or
jmp
adc
adc
dec
lcall
fwait
call
fsubrs
mov
dec
or
push
sub
dec
cmc
mov
in
lahf
shll
pop
aas
xchg
out
lea
sbb
icebp
push
out
gs
mov
js
mov
mov
pop
mov
adc
inc
movsl
hlt
sarb
pop
jecxz
push
add
jecxz
pop
jle
nop
and
rcll
ja
adc
les
xchg
push
arpl
fs
xchg
in
loope
je
xorl
jl
js
mov
push
stc
into
ja
cmp
call
in
xchg
mov
sbb
push
pushf
aaa
mov
sub
gs
fsts
fstp
mov
movsl
ss
hlt
cmp
ja
push
pop
xchg
jl
jbe
adc
rcll
mov
mov
xchg
cmp
out
enter
repz
out
push
or
in
dec
push
cmp
mov
or
iret
jb
push
jns
pop
add
mov
push
push
mov
xchg
dec
add
test
in
rclb
test
jge
push
shlb
stc
outsl
cmc
xchg
stos
les
fstpt
arpl
lds
or
jg
dec
es
add
sbb
decl
cmp
out
xor
stc
push
mov
jg
lahf
or
xchg
fstps
mov
repz
jae
push
aas
outsb
imul
jle
out
mov
jg
int
or
dec
fisttpll
shl
or
jns
ja
dec
cli
push
enter
mov
dec
cmp
enter
fldt
js
xorl
in
lret
and
decl
fidivrs
outsb
rdtsc
divb
in
inc
sbb
pushf
pop
jne
mov
xchg
cwtl
stos
mov
xor
jnp
mov
imul
sahf
and
ss
inc
test
fdivrl
add
sahf
xchg
inc
sahf
rcrb
pop
ja
enter
jle
or
add
ret
jnp
pop
shl
mov
scas
xor
ljmp
jbe
inc
and
and
xor
sahf
pop
movsb
aas
and
loopne
dec
mov
ret
and
stos
out
in
leave
out
xchg
sub
mov
shrl
scas
leave
rcrb
jmp
or
xchg
lret
push
adc
mov
xlat
dec
rcll
xchg
icebp
int3
pop
add
repnz
movl
mov
or
cli
mov
push
cmpsl
std
outsl
repnz
loop
into
stos
adc
xor
movsb
lea
xor
xor
add
mov
scas
dec
rcrb
fldt
add
cmpsl
in
test
iret
or
push
inc
jae
rclb
jnp
filds
fldl
sbb
or
leave
sbb
fs
orl
push
xchg
movsb
add
jge
and
into
lock
mov
ja
pop
mov
adc
sbbb
mov
xchg
and
test
aaa
xor
aad
das
clc
cli
xchg
cmp
or
mov
and
paddsb
inc
std
inc
pop
fstps
pop
or
fnclex
imul
cmp
gs
mov
sub
sub
mov
scas
mov
sub
std
add
sub
xchg
and
dec
mov
sbb
imul
and
pop
lds
jle
inc
scas
pop
pop
or
xchg
fldl2e
push
push
insb
mov
pusha
cld
shll
sbb
rcrb
jecxz
dec
pop
outsl
mov
xor
js
lahf
hlt
xor
push
push
sub
cmp
and
pop
mov
dec
mov
push
mov
sub
sub
xchg
repnz
into
jecxz
cmpsb
jge
sub
mov
mov
inc
mov
repnz
dec
jb
mov
out
mov
push
mov
mov
leave
cmpsb
sub
rorl
out
insl
ret
lret
xchg
sbb
in
cmp
or
mov
repz
loop
xor
sub
hlt
dec
mov
xchg
ror
lea
inc
or
xchg
adc
push
pop
js
jmp
fwait
lea
mov
sub
adc
sahf
mov
jno
push
sahf
xchg
js
sbb
cmp
jmp
push
lods
sbb
inc
pop
sbb
mov
ds
sbb
lods
push
lds
aad
sti
jns
inc
xor
cmp
lret
in
int
roll
cmpsl
mull
mov
mov
lcall
aad
cmc
add
lds
dec
or
ss
ljmp
popa
loopne
mov
sub
les
fnstenv
imul
mov
cmp
or
lods
mov
adcb
insl
add
or
xchg
xchg
mov
lods
repnz
pop
mov
jmp
push
xchg
dec
sbb
sbb
pandn
xchg
in
test
xor
xor
jbe
inc
aad
test
les
iret
mov
inc
outsl
mov
shl
int
or
mov
pop
mov
mov
adc
test
gs
dec
push
scas
add
mov
repz
cltd
das
scas
data16
inc
mov
adc
jnp
popa
movsl
jle
data16
jle
push
mov
outsb
rcl
xchg
sub
mov
inc
aam
and
sub
sub
leave
mov
fwait
lods
inc
add
movsb
or
inc
clc
mov
jae
daa
insl
mov
cwtd
sahf
push
lahf
lea
ljmp
or
lds
pop
test
mov
inc
or
lret
mov
incb
icebp
cli
cmpsl
jecxz
inc
pop
into
push
aad
pop
jo
lret
dec
out
cs
pop
xor
mov
mov
sub
add
cmpsb
clc
pop
jmp
icebp
lds
clc
add
inc
addb
mov
mov
in
lds
dec
pusha
adc
lcall
je
inc
in
int3
jne
pop
shll
gs
and
fldenv
and
int3
sbb
push
call
mov
mov
cmp
pop
fs
pop
nop
out
inc
xor
sarb
sub
push
roll
fisubs
loop
cmp
mov
nop
jle
sbb
sbb
sbb
leave
movsl
subb
mov
sbb
cmc
test
xchg
jmp
ljmp
adc
pop
mov
add
push
cmp
inc
push
stc
mov
outsb
add
xor
jns
push
sub
push
in
dec
loop
mov
mov
out
out
call
not
mov
fistl
sbb
add
ucomiss
mov
insl
repnz
mov
nop
mov
call
inc
mov
add
aaa
pop
xchg
pop
or
popa
call
ficompl
fdivl
push
inc
sbb
std
ret
cli
ss
jnp
cmpb
xchg
jno
dec
adc
cli
fldcw
aas
fs
sarl
repnz
xchg
incb
push
fdivrs
cld
xor
fcmove
fwait
xchg
lock
sbb
stc
and
test
mov
out
lock
std
sbbb
in
test
jbe
loop
rcrb
and
dec
pop
shrb
and
or
aaa
sti
push
or
ret
xchg
imul
add
sub
cmc
lahf
or
clc
stos
fcmove
xchg
add
test
int
es
cltd
inc
nop
testb
sahf
inc
cmc
dec
dec
int3
dec
outsl
xor
mov
loope
mov
mov
cli
fimull
xor
xchg
cmpsl
test
shrb
mull
push
test
pop
pop
mov
dec
ja
popf
xlat
ret
jb
adc
push
lods
xor
rorb
mov
loopne
sub
push
jge
pop
cli
add
pusha
movsb
adc
jge
mov
movsb
cmpsb
mov
mov
rcrl
adc
dec
in
jbe,pt
and
pop
into
icebp
mov
pop
mov
cmp
cwtl
xor
push
pop
mov
xor
cld
imul
dec
jecxz
inc
lahf
movsl
int
rcrl
push
stc
inc
loope
lock
push
cmpps
lcall
repz
push
ja
xchg
subb
inc
mov
fcomps
les
xor
fucom
cli
xor
jns
add
cmpsl
enter
push
jae
int
and
out
sahf
inc
or
lea
or
lea
cmc
insl
mov
stc
int
fsts
popa
fs
mov
cmc
jl
pop
aaa
dec
inc
test
xchg
insb
fcomps
aad
add
pop
es
vmread
das
mov
mov
imul
sbb
mov
ljmp
dec
jns
mov
xor
cmpl
push
sbb
stos
xor
cli
sub
adc
aam
sub
mov
andl
outsl
jbe
arpl
mov
mov
loope
dec
fbld
dec
sub
push
loop
popf
ljmp
sub
mov
outsl
popf
out
dec
sbb
outsb
in
inc
mov
mov
push
fisubl
cmpsl
test
mov
inc
imulb
addr16
imul
jecxz
adc
mov
lret
mull
fld
cmp
mov
push
sar
xlat
push
icebp
mov
call
push
out
out
lock
lret
loopne
xor
jns
cmp
dec
ljmp
int
mov
cltd
mov
es
push
add
jns
nop
mov
mov
and
dec
inc
addr16
mov
mov
in
jg
into
lods
out
mov
pop
dec
jl
es
jle
dec
mov
jns
or
cli
mov
fnstenv
push
or
sbb
or
fcoms
xchg
mov
jmp
xlat
std
nop
sub
or
mov
es
insl
xchg
test
int3
repz
mov
fst
lock
ja
xor
dec
pop
cli
jle
dec
cmp
push
shlb
lcall
ds
cmp
add
sub
push
jmp
add
mov
adc
pop
mov
fs
sbb
mov
xchg
mov
pushf
test
fisubs
sbb
aad
pop
test
push
pop
push
sub
or
jns
sub
rolb
mov
cmp
lock
cmpsl
out
loop
es
nop
in
xor
or
sub
pop
dec
sbb
lahf
insl
fimull
pop
mov
push
add
adc
and
mov
jne
mov
mov
push
xchg
add
loop
shlb
mov
outsb
insb
and
dec
jnp
add
arpl
pop
roll
xor
cwtl
sub
add
aad
in
cmp
sbb
cmp
sub
pop
mov
cmp
inc
dec
sarb
jl
lea
lcall
jne
loopne
pushf
fsubl
and
rclb
rclb
cmpsb
aam
nop
mov
imul
jge
je
xchg
pop
outsb
jo
insb
inc
push
xchg
pusha
in
cld
sbb
mov
ret
dec
lock
cmpsl
insb
imul
mov
sbb
add
push
ljmp
dec
fildl
xchg
xor
mov
test
sub
je
sar
mov
and
add
insl
loope
jge
cmc
and
aad
sbb
aam
jl
cmpsb
pop
dec
aad
or
out
xor
dec
stos
fucom
cmp
popa
xchg
insl
push
aas
add
dec
xchg
dec
stos
add
call
icebp
mov
mov
mov
out
mov
inc
push
sbb
lea
pop
pop
lea
bound
mov
mov
loop
std
add
clc
mov
imul
aaa
lock
in
jecxz
jmp
fbstp
jb
aam
adc
add
repz
dec
inc
cmp
dec
jp
xlat
imul
sub
inc
jle
mov
xchg
imul
ja
outsb
imul
mov
add
in
incb
pop
lods
loope
jp
lcall
xor
push
sti
mov
outsl
add
mov
pop
pop
xor
pop
push
cli
mov
sub
loope
bound
sub
rcl
sahf
and
fldt
pop
xchg
ficomps
fwait
cli
lcall
jns
clc
push
in
mov
pop
pop
sbb
xchg
mov
inc
ds
and
mov
dec
call
dec
repnz
ret
data16
lea
test
hlt
add
mov
adc
cli
dec
jecxz
mov
ljmp
push
fcoml
je
iret
dec
push
mov
ret
xchg
jg
pop
jne
mov
int
xlat
jns
xchg
fs
ss
sub
pop
jb
idivl
dec
add
dec
aas
rorl
xor
fs
shlb
xchg
pop
incl
or
mov
sbb
pminub
pushf
add
nop
sub
and
xor
pop
pop
int3
xchg
xor
cli
lahf
bound
mov
test
xchg
andl
lahf
jl
idivb
jae
mov
dec
imul
aas
popa
inc
idivb
pushf
lahf
jb
out
roll
inc
jge
bound
xchg
fdivl
test
fdivr
mov
and
mov
mov
arpl
test
or
dec
sbb
mov
pop
pop
inc
fimuls
mov
aas
add
aam
roll
mov
in
mov
out
outsb
lret
inc
scas
xchg
out
jnp
push
adc
mov
scas
add
es
hlt
dec
pop
adc
cmpsl
test
mov
aas
xor
shr
orb
movsb
sbb
pop
inc
mov
jne
push
sub
negl
cmovbe
ja
pushf
xchg
sbbb
notl
push
imul
xlat
mov
push
push
xor
cmc
cmp
test
mov
rcll
push
add
cmp
dec
xchg
roll
adc
or
and
test
push
jge
sub
pusha
rolb
and
adc
adc
inc
mull
scas
xor
xchg
dec
xchg
dec
ja
cmpl
push
outsb
inc
xchg
cmp
les
repz
pop
and
sar
xchg
stos
js
mov
fldt
xchg
inc
mov
cmp
insb
in
dec
xchg
push
pop
data16
sbb
loope
aaa
pop
popa
sub
mov
mov
test
xchg
rorl
out
jl
pop
test
pop
movsl
mov
in
xchg
daa
jns
adc
pop
mov
mov
sub
popf
out
add
pop
jp
cwtl
arpl
pop
xchg
out
fistl
addl
mov
pop
pusha
in
shll
lret
fwait
paddusb
push
mov
mov
add
mov
xchg
cmpsl
call
mov
or
call
nop
test
jnp
int3
push
xor
fbstp
jns
rcrl
das
enter
lret
clc
out
call
dec
jno
je
rorl
mov
mov
dec
push
cmpsl
mov
mov
pop
pop
mov
mov
subb
out
out
sub
mov
stc
dec
loopne
pop
jno
das
jge
and
xlat
arpl
cmp
jbe
scas
mov
mov
aad
lds
les
aad
xchg
sbbl
fdivrl
and
dec
sub
mov
lahf
xlat
lock
adc
js
adc
or
cmpsl
xchg
push
shrd
jb
daa
mov
imulb
test
inc
pusha
and
push
nop
mov
push
inc
and
sub
imul
cld
das
add
pop
in
mov
and
push
and
insb
dec
aaa
xchg
es
sub
xor
xchg
or
add
push
and
jp
fmulp
mov
fnstcw
jg
push
arpl
push
std
jmp
sub
fwait
add
aad
or
je
scas
rcrb
lcall
push
jge
pushf
sahf
xor
decb
arpl
repz
icebp
sbb
insl
lcall
leave
aam
incb
xor
pop
fistpll
scas
rcl
mov
sbb
and
repnz
sub
jl
cmp
out
das
dec
or
jbe
adc
in
mov
iret
pop
push
mov
fst
sahf
mov
sbbb
inc
jne
jle
ret
test
outsb
adc
lcall
clc
arpl
enter
std
popa
cmpl
clc
arpl
cli
test
scas
cmp
mov
sbb
loopne
push
or
fwait
jl
and
imul
adc
lods
mov
pop
jbe
lock
xor
and
add
and
dec
or
and
daa
jnp
cmp
rorl
cwtl
push
and
mov
shrb
idiv
lcall
pop
movsb
enter
sbb
subl
js
in
xorl
lahf
push
jmp
out
mov
jb
cld
sbb
pusha
mov
in
in
push
inc
loop
or
rep
sbb
jecxz
arpl
cwtl
xchg
add
ret
test
ds
repnz
sbb
mov
in
xor
shlb
nop
andl
adc
aad
push
pop
xor
dec
mov
sub
xchg
negl
lock
or
fidivrl
inc
dec
mov
sarl
fsubrp
jns
pop
add
fiadds
or
test
ljmp
lock
inc
adc
movsb
ret
mov
mov
cmp
loopne
repnz
insl
test
mov
pop
scas
jl
mov
adcb
xor
in
jl
lds
sbb
xchg
pop
shrl
mov
inc
cmpsb
adc
inc
jno
adc
jae
mov
mov
jb
or
leave
jge
hlt
clc
or
incb
cmp
xor
outsb
dec
push
cmpsb
fcomps
mov
int3
cmp
jge
push
lock
out
add
xchg
jns
cmpsb
push
popa
aaa
fcoml
clc
dec
nop
outsb
mov
xchg
mov
pop
in
mov
stc
xchg
aas
mov
inc
adc
std
aam
push
sub
pop
dec
lods
sti
xchg
hlt
inc
lods
add
cwtl
aaa
outsl
adc
ds
popf
and
sub
inc
push
add
fldcw
cmp
xchg
in
jb
enter
adc
imul
jle
lea
dec
add
ljmp
fdivrs
stos
fstpl
popa
jnp
rolb
cmovno
cwtl
cwtl
das
push
mov
out
cltd
popf
jge
lds
nop
ret
clc
shll
ss
push
aad
arpl
xor
shll
jae
sub
pop
loop
je
jecxz
jne
cmp
sub
adc
sarl
push
push
push
and
aam
out
test
and
xchg
xor
dec
cmpsl
loopne
icebp
pop
popf
rcl
inc
insl
imul
adc
mov
sub
loop
call
jl
push
mov
ficomps
hlt
mov
xor
pop
push
and
pusha
bound
cmpsb
rcll
push
subl
aad
loope
ss
sbb
mov
cmp
leave
jns
js
jbe
lret
aad
movsl
adc
and
les
pop
data16
sub
mov
dec
inc
adc
jns
xchg
pop
or
lds
mov
movsb
scas
xchg
jb
sbb
inc
sub
inc
shlb
aad
xor
jmp
push
pop
sub
add
ljmp
enter
cld
push
int3
jge
push
jo
cmp
sub
xor
pop
sti
sub
pushf
loop
sub
out
push
lds
shlb
jl
push
mov
mov
out
out
pop
push
jmp
popf
lds
lods
sahf
outsb
scas
adc
or
push
and
int
add
push
jmp
adc
add
mov
iret
nop
sarb
push
cmp
or
and
jle
mov
ljmp
jb
jle
xchg
jne
push
jmp
scas
mov
cmc
jg
in
lea
add
jo
data16
test
dec
inc
push
sbb
and
add
sub
lret
enter
or
test
mov
pushf
popa
xor
lds
mov
pop
push
lods
mov
xchg
jns
in
ret
popa
push
mov
cld
dec
ja
jmp
sub
fiadds
loop
test
dec
cmp
insl
push
mov
das
repz
mov
push
lcall
jg
sub
pop
nop
lret
imul
xorl
aam
inc
pop
loop
stos
jae
inc
lea
pushf
mov
add
add
add
lret
mov
cmpsb
insb
cltd
xchg
adc
mov
or
xorl
subb
insl
xchg
sbb
or
cltd
iret
in
jg
mov
mov
cwtl
sub
dec
cmpl
cmp
xor
mov
sbb
mov
dec
in
xor
mov
push
or
mov
sbb
inc
insl
cli
fs
lcall
inc
jl
ljmp
sti
popa
sbb
fyl2x
dec
pusha
loopne
sahf
cmp
jno
cs
adc
xchg
aad
mov
and
test
imull
push
cmp
data16
scas
test
sbb
sub
or
add
push
xor
test
lods
out
orl
insb
xchg
fdivrs
push
jno
or
adc
pop
adc
subb
ret
mov
out
in
xchg
pop
dec
sbb
pop
and
aas
push
pusha
xchg
inc
cli
sub
mov
inc
data16
inc
pop
cmp
mov
incl
sbb
mov
cld
mov
dec
lock
xchg
aas
stc
hlt
pop
out
cmp
outsl
loopne
inc
add
or
xor
mov
icebp
aam
and
call
mov
pop
loope
test
rcrl
lea
es
inc
fiaddl
popf
or
xchg
cmp
inc
ljmp
mov
imul
add
imul
inc
loopne
loopne
fidivrs
sbb
xor
mov
enter
flds
jb
insb
jmp
xchg
push
push
out
ss
cmp
cmc
mov
inc
push
cltd
or
jmp
addr16
sbb
movsl
movsb
xchg
push
xchg
add
sub
pusha
lret
jbe
out
out
sub
sahf
fldcw
lret
in
jb
shll
jg
mov
jne
adc
iret
stos
mov
loope
mov
dec
push
int3
lods
jg
mov
jp
jns
and
jae
aad
sub
mov
rolb
add
addl
leave
arpl
call
push
pop
into
mov
ds
test
adc
inc
sbb
sbb
or
or
mov
inc
or
push
xchg
cmp
leave
xor
mov
sarb
lret
cmp
xchg
jae
inc
insb
icebp
inc
push
aas
mov
ret
sbb
rorb
sub
adc
jl
xchg
mov
dec
hlt
dec
ds
das
xchg
pop
movsl
pop
lea
and
lock
pop
mov
adc
imul
loop
fnstenv
loopne
gs
clc
mov
xor
decb
imul
cli
push
in
sbb
repz
push
sahf
pop
add
cmp
cmpsl
add
add
jmp
dec
into
pop
adc
std
lea
push
mov
ficoml
sub
xchg
pop
sti
xchg
jnp
rcll
aas
mov
int
sub
popf
cmp
in
call
movsb
movsl
mov
mov
adc
adc
in
pop
mov
push
insl
dec
adc
shl
dec
ja
scas
comiss
popl
popf
out
push
push
sbb
test
mov
cmp
xchg
aaa
xchg
adc
int
or
clc
rol
jb
pop
imul
or
add
vpmacsswd
pop
out
shrb
sahf
lods
push
loopne
ret
into
into
mov
aas
pop
push
aas
dec
mov
mov
mov
loope
mov
sbb
rcrb
push
ds
xchg
xchg
inc
jae
out
enter
lahf
push
xchg
test
or
sub
mov
mov
jno
lret
cltd
mov
add
and
cmp
int
jmp
fdivrs
dec
xorl
adc
pusha
fstpl
push
sbb
out
shl
mov
push
pop
sar
mov
pop
cmc
fiaddl
scas
insl
jo
negl
dec
xor
or
in
arpl
mov
inc
xchg
test
jne
sbb
add
fsubr
jae
push
hlt
mov
cmp
push
push
das
sbb
mov
shlb
loop
das
out
sbb
or
jmp
ret
pushf
outsl
pop
xchg
mov
addl
in
das
and
push
data16
pop
int3
fs
repnz
inc
das
mov
cwtl
xchg
and
leave
lea
gs
ret
mov
sub
popf
cmp
push
sbb
in
ds
cld
jle
push
lds
inc
and
nop
out
dec
xor
or
or
rcll
dec
cmpsl
add
pop
out
loop
xchg
bound
xlat
dec
popl
jno
out
into
mov
aad
and
repnz
push
adc
loop
sbb
lds
mov
mov
sub
dec
pop
imul
sbb
mov
mov
ret
pop
jo
mov
sub
aas
in
xchg
repnz
shll
xor
xor
push
pop
and
mov
cltd
cwtl
fidivrl
lcall
ficompl
es
std
mov
push
nop
and
adcl
addr16
adc
adc
dec
lods
pop
mov
aad
leave
sub
jmp
jp
sbb
rcr
push
or
shlb
pop
cmp
inc
ficomps
cmpsb
push
in
pushf
mov
repnz
int
mov
scas
pusha
into
add
ja
cli
stos
stc
lds
sbb
xor
adc
les
cmpb
outsl
cmpsl
lods
xor
div
add
stos
lock
out
xchg
jb
pusha
cmpsl
dec
out
and
imul
sbb
popf
jmp
aad
inc
xchg
push
cmc
movsl
sbb
or
push
push
dec
lcall
dec
imul
test
jns
lods
hlt
pop
enter
lcall
xor
mov
das
aas
dec
jo
cs
sti
popf
and
iret
es
mov
daa
mov
mov
dec
scas
or
loope
xchg
je
sbb
jo
jo
fs
add
insb
cld
push
ja
imul
aam
repz
xlat
aas
mov
adc
sub
add
pop
pop
mov
out
pusha
jo
mov
dec
into
shrb
add
scas
lods
and
lahf
xchg
mov
jle
js
repz
cmpsb
ss
lods
in
pop
inc
in
xor
repnz
push
int
das
mov
push
xor
outsl
cmp
subb
aaa
jp
mov
rcr
pop
push
es
jae
inc
mov
mov
jmp
xchg
pop
pop
push
add
gs
loopne
mov
mov
ljmp
sbb
out
dec
mov
mov
xor
push
std
lea
jnp
mov
test
sub
sbb
pusha
in
call
mov
and
lcall
push
scas
jbe
lcall
sahf
out
shrl
mov
ret
push
mov
or
aad
mov
fwait
lahf
aaa
mov
xor
mov
xor
pop
dec
inc
daa
popa
xchg
sbb
fdivrs
mov
adc
xchg
sbb
popa
mov
xchg
repz
mov
je
stc
add
in
mov
cmp
jp
dec
sub
sahf
enter
fcompl
add
stos
jle
stos
dec
jg
pop
mov
ficompl
std
push
cmpsl
lods
into
out
jp
jecxz
push
or
xor
jne
push
paddw
loopne
mov
loop
sub
push
sbb
pop
lock
insl
lret
mov
fdivl
xchg
test
mov
cli
cs
adc
push
lcall
mov
and
fisttpl
jl
xor
mov
loopne
fisttpl
pushf
push
pop
pusha
into
das
in
mov
mov
mov
jle
pop
add
fdivrs
nop
call
mov
or
sub
push
lret
sbb
aad
xchg
inc
ret
push
imul
ds
jmp
lock
les
mov
in
repz
pop
fld
cmp
adc
xchg
sbbb
ret
fdivrs
jle
sub
adc
ja
push
fiadds
test
push
std
mov
mov
jbe
adc
iret
cs
scas
mov
hlt
sub
icebp
mov
icebp
mov
cmc
dec
xchg
lret
stc
xchg
xor
jmp
mov
mov
inc
push
xor
lret
lcall
mov
push
mov
pusha
sub
jle
sub
dec
xor
and
jge
outsl
ret
and
inc
mov
test
subb
push
add
inc
push
xor
xchg
js
ret
adc
dec
cmp
arpl
sahf
aam
cmp
and
jmp
mov
ficomps
dec
jecxz
sbb
adc
inc
in
push
test
jae
nop
cs
test
cmpsl
mov
in
mov
lea
adc
mov
push
aas
shll
out
cmpsl
mov
hlt
push
xor
lods
mov
cmp
mov
inc
pusha
mov
mov
push
rcrl
iret
lods
addb
iret
je
gs
add
cmp
aam
shll
mov
xor
fnsave
hlt
jb
shlb
loope
cld
inc
pop
fadds
sar
jnp
mov
xchg
int
mov
cmp
aad
int
sub
bnd
in
cmpl
in
lahf
push
sub
jno
faddp
clc
loope
out
dec
mov
push
xor
mov
ret
in
mov
add
scas
movsb
sti
mov
decb
jg
xor
inc
dec
aas
int
dec
or
loopne
aam
mov
sahf
repnz
bswap
push
dec
dec
scas
mov
xor
fdivrl
ljmp
outsb
out
lods
sbb
inc
mov
or
popf
pop
cli
dec
ss
jmp
int
in
mov
xor
xchg
adc
sub
sub
or
xor
fs
icebp
adc
aaa
nop
push
add
repz
ret
pushf
or
hlt
and
loope
ror
jg
inc
sbb
jmp
pop
icebp
push
mov
dec
movsl
daa
push
or
lret
inc
mov
mov
adc
andb
xchg
negb
xchg
andl
mov
jb
or
push
jle
mov
pusha
movsb
push
mov
sahf
out
adc
outsb
jns
push
inc
dec
loopne
stos
add
iret
addr16
and
or
jnp
js
repz
jmp
lods
je
popf
daa
addr16
stc
mov
aam
loope
aam
mov
xlat
mov
imul
adc
mov
iret
push
xchg
pop
xor
mov
pop
cmp
cmp
push
inc
or
shl
fdivl
or
mov
dec
lcall
mov
into
jbe
or
xor
mov
pop
das
repz
pop
xchg
fptan
pop
fdivr
vcvttsd2si
pop
mov
jbe
dec
repnz
stos
aas
mov
popaw
mov
pushf
mov
push
mov
jp
call
std
stc
mov
sub
xor
fdivrl
out
aaa
out
pushf
scas
pop
mov
std
ss
xor
fucom
cld
cmpsl
in
dec
sbb
aad
aad
leave
push
sbb
pop
sub
jo
sub
insl
or
jb
orb
test
push
pop
mov
dec
or
push
sub
cmp
add
out
xor
cmpb
roll
push
push
jmp
pop
insb
sub
outsl
xchg
loope
outsl
xlat
jo
pop
pandn
jge
cmpsl
cli
mov
mov
push
mov
icebp
fstpl
sub
ret
xor
sbb
mov
xor
jnp
jge
mov
xchg
dec
lret
mov
dec
jb
and
add
push
cwtl
test
rcr
lock
imul
out
and
aaa
shl
push
jge
jae
sbb
mov
loope
sub
inc
sbb
out
ljmp
adc
ss
sbb
adc
sub
hlt
mov
out
les
pusha
lahf
lods
xchg
jne
or
mov
cmc
fwait
ds
in
add
jg
cmpsl
dec
jecxz
ret
rcr
aam
mov
xchg
sbb
in
cmp
inc
pop
lcall
push
and
mov
add
ja
sbb
gs
mov
sub
out
arpl
pop
jmp
cmc
sub
lock
ja
js
push
mov
outsb
dec
mov
xor
scas
fisttps
fsubs
lods
mov
push
adc
into
cmc
decb
push
or
ret
out
cs
dec
xchg
pop
dec
or
dec
and
jno
mov
push
aas
jo
arpl
orb
mov
jne
lea
and
jp
ret
inc
or
mov
and
xor
cli
rcrb
push
cmp
out
clc
sahf
xchg
sub
push
adc
sub
in
movsb
jl
dec
outsb
pop
outsl
jno
pop
dec
sbb
aaa
std
pop
test
or
push
outsl
aam
fnstsw
nop
sub
stos
fcompl
stos
dec
xchg
adc
mov
jmp
mov
inc
adc
and
dec
pop
outsl
divb
jno
lahf
hlt
out
mov
rorb
cmpsb
test
add
sbb
push
mov
inc
std
idivb
jne
rclb
sub
mov
sar
xor
daa
stc
push
or
xchg
in
iret
pop
movsb
rcr
adc
cmpsb
dec
jb
jae
ds
fbstp
sub
inc
mov
cmp
scas
lret
pop
fisubrl
mov
push
add
cmp
xchg
push
fstp
scas
inc
clc
call
inc
mov
cmp
shll
mov
xor
fmull
xor
xchg
arpl
xchg
je
mov
repz
xchg
popa
out
addr16
xchg
push
test
jbe
sbb
push
mov
je
les
jle
rorb
mov
mov
jmp
xlat
out
pusha
adc
xlat
mov
inc
sub
jae
dec
dec
lock
enter
and
shr
popf
xor
cld
pop
add
mov
lock
and
mov
ds
inc
imul
sub
mov
std
cld
sub
data16
push
mov
cmp
push
inc
pushf
push
xor
dec
cmpsl
xchg
push
adcl
push
in
pop
ljmp
sbb
adc
ja
mov
clc
pop
gs
sbb
loop
sub
sbb
mov
cmp
pusha
sarl
pop
lret
mov
lods
dec
icebp
add
pop
aaa
dec
mov
sub
shrl
dec
mov
test
test
sbb
add
and
add
out
jb
adc
xor
mov
popf
pop
xor
jge
out
dec
dec
cmpsl
outsl
mov
xchg
inc
stc
jns
pop
loope
inc
adc
sbb
or
std
outsb
jle
and
dec
lock
and
mov
jns
xor
out
cmpsl
sub
es
hlt
jnp
adc
in
push
cwtl
sbb
mov
jne
and
jge
adc
jns
ja
daa
push
aas
inc
inc
or
mov
pushf
sub
nop
and
ja
dec
and
cmp
mov
xchg
pushf
pop
push
lock
cmc
jle
call
xchg
jo
push
pop
ficoml
lods
in
fsubs
enter
xor
pop
mov
push
sbb
flds
out
sbb
inc
iret
std
cmp
push
addr16
out
adc
mov
ror
into
repz
mov
pop
jb
cmpsb
jle
dec
cmp
gs
in
mov
andb
sbb
mov
bound
insl
ss
inc
insl
ds
xchg
arpl
jge
xor
js
aam
push
or
lds
sub
es
sub
push
jmp
loope
sbb
cmpsl
incb
dec
movsl
mov
ret
retw
mov
hlt
pop
cwtl
movsl
lret
dec
mov
sti
je
es
push
add
lret
fsubrl
in
or
pusha
scas
icebp
cs
ja
out
add
dec
push
sbb
adc
jb
inc
xchg
enter
daa
in
and
movsb
mov
dec
inc
cmp
mov
stc
xchg
cmp
mov
mov
ficompl
jge
outsl
pop
das
sbb
movsb
repz
push
adc
inc
shr
and
test
and
out
inc
or
cmp
shrb
cld
pop
jg
ret
xchg
scas
and
push
push
test
xor
test
loopne
enter
jmp
es
pop
and
outsl
mov
pop
out
aad
lcall
mov
pop
push
jns
lahf
inc
jp
mov
or
pop
mov
xor
jns
aas
imul
lods
push
daa
mov
ds
stc
in
xchg
push
mov
and
nop
add
cs
xor
in
xor
xchg
fldenv
mov
jae
int
mov
mov
cmp
or
js
xor
repz
mov
mov
pop
add
fadd
cmp
out
push
in
or
cmp
jp
add
das
fsubs
push
roll
stc
adc
mov
ret
inc
sbb
test
lcall
lret
or
cmpsl
repz
aad
cmp
mov
mov
sub
or
push
in
lret
xor
je
stos
leave
clc
inc
clc
pop
mov
aas
clc
shlb
mov
dec
inc
mov
or
or
fstpt
pop
xor
rolb
scas
adc
outsb
je
and
jb
mov
xlat
inc
cltd
push
roll
aam
or
pusha
push
push
sub
popa
jecxz
and
push
test
and
xchg
mov
cmpsl
xor
iret
in
frstor
mov
orl
fadds
lahf
mov
mov
xor
jg
fisttpl
inc
shrl
inc
dec
jbe
in
fildl
jmp
sub
dec
pop
xchg
push
inc
fidivrs
imul
push
xchg
cs
movsl
jb
ffreep
mov
inc
push
push
push
pop
push
cmp
int
cmp
nop
or
lock
add
adc
dec
aaa
shlb
sub
arpl
sarb
test
mov
xchg
outsb
fnstsw
dec
icebp
nopl
mov
sub
and
ds
movsb
ljmp
jb
sahf
mov
test
pusha
cli
dec
jne
fiaddl
jne
pop
out
popa
mov
or
mov
and
test
insb
push
shrb
mov
sbb
sub
fidivs
adc
push
and
pop
movsb
into
fcompl
push
hlt
outsl
xchg
movsb
mov
and
mov
push
push
mov
jbe
mov
ds
stos
mov
push
out
in
push
jno
lcall
in
push
lock
cmpb
repz
or
add
xchg
and
push
and
das
lods
xor
aaa
mov
and
daa
push
test
add
sub
mul
mov
out
push
and
lock
xchg
push
lock
in
ss
pop
inc
pop
hlt
cwtl
jno
nop
xlat
fcoms
or
xchg
addr16
inc
movl
mov
mov
adc
jae
int3
test
or
sub
ficomps
insb
scas
fwait
pop
inc
mov
mov
mov
cwtl
adc
loope
repnz
dec
test
jne
unpcklps
pop
psllq
fmuls
or
mov
jno
pop
add
mov
sbb
shll
pop
dec
or
stc
aas
loop
sub
xor
rclb
mov
xchg
or
sub
cmpsl
lds
jb
imul
inc
add
sbb
out
sub
cmp
out
aas
dec
data16
in
or
xchg
xor
lret
btc
adc
cmp
cmpsb
xchg
xchg
out
pop
test
add
loope
xchg
inc
hlt
sub
inc
dec
or
mov
xchg
jo
mov
jle
cmpsl
mov
stos
mov
lret
and
xchg
imul
mov
imul
stc
cmc
cmpsl
loope
mov
lods
add
pop
add
sarb
add
lahf
test
movb
je
imul
jae
sub
dec
lcall
ret
mov
pushf
lods
xor
pushf
das
out
int
insl
sbb
lods
inc
mov
jae
push
fistl
push
and
aam
rcrb
inc
jmp
xor
into
call
cmp
jmp
jno
cwtl
stc
test
or
jns
mov
in
jl
popa
xchg
push
dec
test
jmp
mov
aas
orl
pop
xchg
mov
inc
lods
jmp
sarl
pop
xor
pushf
add
xor
add
mov
int
bnd
insb
insl
sub
pop
xlat
in
jne
icebp
pop
fistps
add
pop
daa
movsl
insb
xchg
jnp
pop
cmp
mov
and
out
into
out
jae
push
mov
and
pop
push
aaa
mov
in
inc
add
sbb
fdivrp
aam
pop
pop
jbe
lret
fstpt
add
jg
xchg
and
inc
sbb
add
shll
jb
fmuls
xchg
xorb
jl
ds
int
inc
mov
push
js
cli
push
lret
xlat
mov
xchg
push
sbb
dec
out
cmp
insb
xlat
test
jecxz
xchg
mov
xor
cmc
inc
lcall
sub
jle
inc
std
insl
cmp
xor
add
mov
cli
fxch
cltd
lcall
jge
jb
push
adc
mov
insl
cmp
scas
mov
int
add
mov
push
xor
popa
mov
mov
sbb
jbe
cmp
xor
and
mov
adc
aaa
ljmp
and
xchg
lahf
sub
lret
pop
out
xor
xchg
push
and
fldl
sbb
pop
stos
mov
cmp
adc
mov
inc
nop
lsl
int3
sbb
push
xor
sub
cmp
sbb
sbb
xchg
cmpb
xchg
sub
push
movsb
push
scas
sarb
jb
movsl
mov
or
push
or
dec
fldcw
cld
arpl
shrl
test
fnstenv
add
xor
stos
xor
scas
outsl
jle
sbb
enter
mov
stos
iret
xchg
int3
pop
push
xchg
imul
add
das
mov
arpl
bound
fidivrs
sub
aam
xchg
insb
adc
mov
mov
push
xchg
insl
loop
xor
mov
sbb
icebp
repnz
or
inc
fwait
xor
mov
insl
out
add
sbb
add
pop
daa
push
mov
lcall
xchg
add
testb
and
ljmp
add
roll
aad
call
push
pop
jp
sub
ljmp
inc
sarl
pop
inc
push
add
cmp
hlt
adc
inc
sub
jae
into
mov
inc
mov
insl
push
mov
xchg
loope
or
scas
sbb
push
loope
or
mov
adc
icebp
mov
cmp
xchg
int3
inc
mov
cmp
faddl
repnz
lods
mov
inc
scas
sub
in
fwait
insl
movsb
xor
add
xchg
ret
dec
mov
test
lds
jmp
pop
outsl
test
push
lock
das
stos
mov
mov
inc
int
xor
mov
inc
sbb
mov
push
rol
lock
cmpsl
je
negb
xchg
dec
jb
push
aaa
into
repnz
add
shlb
jbe
jmp
jl
sbb
arpl
je
cmpsl
jge
test
mulb
cmpsl
int3
nop
movsl
dec
nop
lcall
aaa
imul
divl
sbb
mov
out
inc
movsb
or
mov
sub
scas
aas
pusha
xchg
xlat
cmp
movsb
sub
es
jns
bound
or
pop
xor
ret
xor
mov
fdivp
add
mov
cmp
sub
jae
ret
insl
adc
jmp
out
jns
in
jecxz
jmp
aas
stos
movsb
rcll
nop
xchg
repnz
ret
cmp
jle
sbb
sub
push
int3
scas
xchg
inc
imul
lods
gs
outsl
ret
xorb
scas
xor
or
repnz
shr
repz
jmp
push
dec
shrb
mov
and
sbb
nop
mov
movb
pushf
jecxz
add
ja
scas
push
iret
sbb
xor
fneni(8087
outsl
sub
jne
xchg
dec
cs
leave
mov
pop
in
and
insb
out
dec
ljmp
cmpsl
das
shlb
jp
lods
xor
in
pop
pushf
ja
pop
ficoml
sub
dec
std
fcomi
rcll
dec
or
xchg
dec
movsl
push
adc
push
mov
pop
roll
cmp
dec
dec
inc
push
cli
fstps
adc
pop
add
subl
adc
add
jle
mov
sbb
cmc
ja
sahf
fsubrl
test
das
xchg
adc
test
add
or
jmp
leave
inc
pusha
div
pop
adc
mov
mov
mov
pop
pop
push
pop
inc
sahf
es
add
pop
out
mov
sbb
sbb
dec
cmpsb
cmp
mov
test
pop
mov
subl
scas
mov
or
pop
push
jge
movsl
dec
ret
test
cwtl
sub
rep
jge
inc
sub
and
bound
movsb
push
test
sub
in
out
sbb
fisubrl
sub
mov
aas
push
or
pop
fcmovne
jmp
dec
data16
sahf
andl
cwtl
in
mov
jle
test
in
movl
out
sbb
les
outsb
mov
pushf
shrb
or
mov
iret
data16
push
mov
sbb
sub
jle
pop
fbstp
mov
aaa
fidivrs
ja
test
cltd
sub
dec
mov
mov
sbb
push
push
fwait
call
popf
mov
jg
cmp
and
adc
std
out
dec
stc
cs
les
das
mov
mov
in
clc
gs
lds
sub
mov
aam
ficompl
jns
pop
je
mov
mov
push
push
clc
mov
pop
mov
test
loope
addb
inc
in
push
add
adc
movsb
xor
out
sbbl
sub
mov
inc
rolb
loopne
jnp
scas
nop
test
enter
shl
lock
fiaddl
inc
lret
adcl
xchg
inc
lods
inc
inc
sub
sbbb
and
push
pop
cmp
test
inc
gs
popa
mov
rcr
xchg
xchg
notb
cli
push
scas
lods
pop
mov
inc
jae
fldl
jne
adc
stos
int
imul
cli
in
jp
gs
std
das
pop
sub
lret
mov
mov
mov
inc
rol
adc
jmp
aaa
enter
cwtl
cmp
mov
addb
sub
adc
cwtl
addr16
inc
mov
aam
pop
mov
cmpsl
lods
push
push
jno
mov
data16
mov
jl
adcl
cmc
lahf
mov
das
adcb
or
add
push
sub
and
dec
and
xchg
pop
lock
add
stos
sbb
je
mov
ja
xchg
cmc
mov
addr16
push
pop
call
cmp
jg
mov
test
movsl
inc
test
push
mov
jo
or
pop
fs
sbb
movsl
test
push
mov
lea
int
fldenv
lahf
mov
xor
jnp
das
sub
loopne
and
mov
jmp
in
push
jns
inc
loope
divl
iret
sahf
out
sub
in
push
jnp
dec
mov
jmp
mov
rolb
sbb
repz
leave
test
mov
xchg
rcrl
pop
out
pusha
pop
rol
dec
jl
arpl
dec
fiadds
mov
inc
cmp
inc
adc
mov
out
pushf
mov
and
jbe
lret
mov
inc
bound
repz
jns
addb
rcrl
xchg
fs
cmp
cmp
add
cmp
pop
subl
jmp
fsubl
jg
sbb
mov
mov
jne
mov
xchg
rcrl
dec
jns
mov
in
shl
push
jmp
lahf
push
inc
cmpsl
adc
pop
fisubl
mov
fiadds
dec
into
int
sub
adc
aas
fsubr
in
mov
in
push
pop
call
mov
pusha
lret
cmp
insl
mov
mov
fcmovnb
shl
sbb
pop
rcr
pushl
scas
sub
add
shl
xlat
les
sti
in
frstor
imul
cmpsb
push
repnz
movsl
adc
jle
cmpsl
push
mov
or
inc
inc
jge
iret
sub
int
imull
outsl
hlt
adc
pop
flds
movsl
jg
jnp
mov
stos
xchg
subb
test
repz
shrl
dec
push
sbbl
cld
adc
loop
xor
fdivr
daa
cld
inc
jne
or
jp
dec
sbb
cwtl
insb
ss
mov
dec
lock
cmpsl
rol
repnz
inc
pop
divb
dec
shl
out
jae
or
mov
pop
jae
sub
ds
iret
movsl
rol
ljmp
cmpsl
mov
mov
jle
ficomps
daa
sahf
pop
out
out
fists
sbb
js
inc
and
jg
insl
andb
ljmp
pop
clc
insl
pushf
xor
cmpsl
divb
cmp
adc
xor
imul
into
rcrl
xor
outsb
inc
mov
pop
xchg
adc
push
ds
icebp
mov
adc
jnp
xlat
jae
in
dec
xchg
and
fwait
adcb
add
ss
out
push
push
and
xor
push
hlt
shll
xchg
sub
je
shrb
inc
pop
add
insl
jo
sbb
sub
and
bound
adc
push
std
repz
imul
ds
int3
dec
adcl
xchg
lcall
ljmp
dec
pop
ss
push
sti
loopne
adc
or
std
mov
or
mov
outsb
in
ja
and
add
imul
inc
scas
xor
inc
scas
xor
sbb
aad
push
pushf
mov
sub
test
arpl
lods
inc
int
repz
xchg
fnstsw
cmp
inc
push
xor
filds
or
hlt
cmpl
cltd
enter
test
and
jmp
add
das
les
xor
stos
or
aam
and
scas
sub
hlt
mov
cmp
ja
adc
and
ffreep
and
gs
push
add
shll
sub
push
mov
jmp
imul
pushf
pop
andb
and
xlat
dec
je
pop
popf
fldcw
xchg
mov
in
int
adcb
jg
sub
out
mov
add
adc
xchg
pop
mov
repnz
mov
or
iret
cmp
push
mov
push
mov
movsl
jecxz
inc
pop
scas
cs
dec
dec
sahf
rcr
add
mov
punpcklbw
jne
mov
incl
or
test
xor
decl
je
pop
daa
out
out
sbb
pusha
mov
xchg
std
sub
cwtl
and
pop
fsubrl
hlt
jge
outsb
cltd
sarl
push
fcomip
mov
lret
mov
scas
xchg
sub
jecxz
into
push
repz
push
pushf
ret
cs
out
shlb
je
jl
addb
push
or
cs
movsb
sbb
mov
daa
inc
mov
lods
jne
outsl
pop
xor
stos
xor
pop
adcb
and
jno
and
es
lret
fldt
mov
mov
mov
xchg
sbb
and
stc
inc
popa
in
xchg
das
jbe
xchg
dec
pop
movsb
push
push
call
mov
push
arpl
adc
xchg
pop
jb
dec
icebp
movsb
addr16
cmpsl
xchg
mov
movsl
enter
andb
sub
fprem1
test
test
popa
adc
movsl
push
mov
xor
lcall
cmc
je
pop
movsb
inc
inc
push
xchg
inc
mov
cmp
shll
and
sahf
fisttpll
adc
insl
into
add
pop
leave
clc
aad
in
scas
mov
push
loop
stos
clc
out
jg
cmp
sbb
add
sti
lods
popf
das
pop
jge
xorb
xor
inc
jns
nop
cmp
xorl
push
jg
jp
jecxz
sbb
aam
mov
sub
push
sub
mov
inc
jge
dec
mov
push
sarb
push
push
add
shr
push
bound
lahf
jnp
xchg
inc
mov
jecxz
and
inc
int3
insl
add
das
and
lretw
push
shll
mov
fstp
pop
arpl
ja
iret
lock
jae
repz
xchg
in
sub
adc
mov
sub
test
test
ret
cmpsb
push
fwait
push
or
test
inc
mov
mov
and
rclb
ss
push
adc
add
test
aaa
cmp
push
fwait
sub
pop
js
adc
xor
cwtl
jp
sub
aaa
repz
xchg
inc
loop
inc
fisttpll
lds
push
jle
jmp
cmp
dec
mov
shlb
cwtl
push
push
add
test
ret
jg
das
mov
and
adc
xor
shrb
loopne
push
gs
inc
inc
add
cmpsl
mov
or
add
mov
mov
jno
cmpl
xor
les
fsubs
in
jecxz
push
cli
notl
arpl
loope
mov
dec
pop
ds
sub
iret
adc
push
lcall
push
lea
mov
out
adc
insl
adc
or
test
pop
ja
nop
into
inc
cmp
rol
mov
push
jp
or
sbb
call
lret
inc
push
mov
sub
cs
adc
jecxz
cmp
sbb
lcall
es
sahf
in
adc
leave
ja
addr16
testl
jnp
fbld
fchs
sub
int3
dec
jns
inc
sbb
pop
add
jnp
xlat
cld
jnp
inc
rol
loopne
ret
pop
lods
cmc
fisubrl
xchg
rol
fsubl
addb
popf
pop
scas
aam
push
cmc
scas
mov
enter
jge
mov
xchg
outsb
jle
into
mov
xchg
lcall
rcrl
out
sbb
ret
andb
pop
mov
imul
push
popf
cs
in
cmp
cli
shrb
push
pmulhw
dec
in
insl
xchg
xchg
mov
outsb
push
pop
xchg
xor
ljmp
lret
adc
mov
cmpsl
daa
repz
imul
cld
iret
push
sub
ret
shlb
fidivl
jle
pushl
gs
loop
mov
into
arpl
loop
pusha
xor
filds
in
dec
loopne
addr16
jl
les
jo
scas
lds
xor
push
inc
jmp
xor
leave
lea
inc
xchg
jmp
xchg
xchg
mov
into
enter
idivb
jns
iret
xlat
addr16
insl
rclb
pop
setle
leave
pop
les
add
shll
out
pop
xchg
jmp
popa
lret
sti
xor
xchg
push
ret
dec
inc
pop
push
ror
inc
push
xor
mov
pop
ljmp
sbb
mov
fwait
or
ret
out
ficoms
xor
mov
mov
loope
icebp
stos
rorb
nop
pushf
mov
pop
rcrb
out
subb
dec
push
popa
push
lret
je
shl
fisubs
movsb
aaa
int
jecxz
pop
pop
mov
mov
push
fldenv
insb
packuswb
idivl
jno
cmc
pop
mov
in
mov
js
jl
pop
shll
popf
test
push
popf
cmp
jbe
into
pop
inc
mov
fisubrl
jmp
or
inc
mov
mov
dec
cmpsl
mov
sub
inc
in
test
in
inc
push
aas
loop
idiv
pop
pop
xchg
arpl
push
jne
xchg
repz
xchg
xlat
add
mov
inc
mov
aaa
loope
push
arpl
mov
daa
adc
push
xchg
dec
jne
in
fisttps
rorl
inc
push
and
xchg
sub
lret
fwait
sub
or
subl
jae
jbe
in
push
mov
shl
rol
out
mov
cld
xor
or
in
and
cmp
sbb
std
pop
lahf
adc
push
sbb
movb
xlat
mov
addr16
cld
mov
sbb
push
cmp
xor
cmp
adc
in
fdivl
jle
mov
iret
sub
mov
bound
stc
add
xchg
pop
filds
fadd
pop
or
sub
xor
sbb
mov
call
addr16
adc
leave
cltd
in
mov
push
xor
adc
push
jge
add
sub
shlb
decl
xor
das
push
adc
js
inc
pop
idivl
aaa
push
sbb
jle
cmpsb
test
decl
sbb
test
outsb
inc
inc
fcmovnu
inc
adc
xchg
insb
cltd
push
movsb
das
loopne
mov
addps
cmpsb
ja
dec
rcl
mov
xchg
adc
jmp
into
lret
sbb
call
ljmp
and
mov
mov
movsl
push
inc
mov
ja
lea
out
pop
arpl
dec
pop
inc
pushf
xchg
divb
movsb
lahf
fbld
iret
jnp
insb
in
xchg
mov
outsl
or
sti
inc
ljmp
adc
outsl
mov
scas
loope
inc
or
stc
adc
loop
mov
mov
ror
mov
mov
push
xchg
loope
dec
inc
mov
or
sbb
sbb
les
loopne
xor
movsb
dec
fadd
xlat
push
icebp
and
mov
divb
std
in
cmp
lret
stos
mov
inc
xchg
mov
dec
dec
addr16
rcrl
xor
inc
mov
xchg
popa
and
sti
outsb
ja
lods
jbe
test
dec
or
rol
or
xor
in
dec
dec
cmp
aaa
inc
int
pop
pop
cwtl
test
movsb
cs
jno
lret
stos
fcomps
adc
aaa
xor
stc
lcall
call
rolb
cmp
cli
repnz
popf
add
push
loope
aam
addr16
into
dec
push
das
cmpsl
jne
mov
ret
cli
sub
dec
jecxz
cmp
fnstenv
das
fidivrl
mov
scas
and
lods
mov
inc
mov
sahf
ds
aas
enter
dec
lret
hlt
jge
dec
je
xchg
xchg
cmp
xor
inc
sahf
sarb
mov
clc
push
test
ret
cmp
mov
mov
into
mov
mov
flds
loopne
ds
fdivs
out
cwtl
xlat
clc
arpl
int
pop
cmp
mov
repz
sbb
sbb
repnz
scas
shrb
fucomip
sub
push
mov
mov
shl
push
dec
and
fadds
addr16
inc
jnp
mov
sahf
adc
xor
xor
lahf
movsb
lods
lods
incl
xchg
pop
cmc
hlt
stos
sbb
js
jb
or
xchg
and
add
add
jne
mov
gs
jae
mov
mov
rcll
and
pop
cmpsl
add
pop
fcoml
inc
out
test
fiaddl
hlt
and
or
inc
cmp
scas
cmp
dec
xchg
pop
add
push
fs
push
xchg
or
cmc
sub
in
adcl
repnz
shlb
lret
jecxz
nop
jle
mov
test
outsb
stos
mov
jne
sbb
loopne
jmp
sbb
xchg
push
sub
dec
lock
into
adc
mov
ficoml
int
sbb
mov
addl
cmp
jmp
idiv
mov
test
jg
or
xor
pusha
adc
adc
scas
adc
dec
adc
insb
cld
push
push
adc
mov
test
call
pop
xlat
dec
call
imul
cs
jne
xor
mov
add
mov
and
lds
mov
xchg
insl
shl
ret
cmp
movsb
inc
aas
stc
or
cmc
and
and
aaa
imul
pop
into
push
stos
clc
or
inc
dec
pop
mov
push
cs
mov
test
xor
not
or
ret
sbb
ret
shll
mov
push
into
jmp
pop
scas
aaa
cmp
dec
pop
push
inc
addr16
mov
pop
cmp
mov
outsl
cmc
xchg
jae
dec
idivl
xor
mov
lock
andl
mov
dec
sbb
int
dec
es
and
pop
pushf
push
pmuludq
or
mov
dec
or
sub
lcall
ret
jl
divb
test
insb
cmp
rclb
leave
xchg
pusha
sub
mov
das
xchg
ss
insb
lcall
adc
sbb
dec
movsl
fisttps
cld
dec
fstpl
daa
inc
jno
daa
and
pusha
inc
test
popf
int3
pop
sbb
pop
adc
push
adc
insb
jp
movsb
in
test
push
call
jge
xchg
call
stos
ret
jecxz
pop
pop
lret
cli
xchg
sbb
sub
sub
bound
ss
inc
jmp
sbb
sahf
aad
subb
adc
test
or
jno
test
ljmp
sub
pop
aam
cmc
je
rolb
lods
dec
adc
jno
ja
cmp
sub
loope
pop
xor
cmp
mov
mov
dec
int
sub
stc
repnz
hlt
inc
cmpsl
testl
jne
popf
xchg
inc
fs
aad
das
cld
mov
inc
push
mov
divb
xchg
push
cs
lods
mov
imull
test
jp
or
in
adc
mov
addr16
jns
into
dec
cld
push
into
sub
repz
js
jmp
outsb
xchg
addl
xchg
or
hlt
cmc
xorb
or
out
mov
ret
jl
xor
aad
call
mov
lods
xchg
cs
sub
inc
out
xlat
popaw
push
pushf
jle
arpl
jo
mov
ljmp
out
mov
mov
sbb
fwait
cltd
push
out
insl
ss
out
mov
cwtl
test
rolb
push
push
pop
int
pop
sti
jb
icebp
push
pop
mov
lret
or
test
iret
shll
add
jmp
push
mov
fidivl
cwtl
sbb
adc
ss
mov
mov
and
sbbl
icebp
pop
pop
lret
inc
repnz
inc
in
in
iret
adc
adc
or
lret
les
lahf
roll
push
or
add
loopne
cwtl
mov
aam
cld
jecxz
cmp
stos
out
into
je
xchg
mov
out
cmpsb
push
push
inc
push
lods
inc
addb
cmpsb
fadds
sub
jle
lahf
dec
jle
in
jnp
sbb
xchg
add
adc
jo
xor
pop
jno
sbb
adc
ja
cmp
adc
dec
mov
dec
mov
cmp
inc
pop
pop
enter
jne
cmp
repz
pushf
std
pop
mov
imul
and
hlt
bnd
pop
xor
ficompl
push
iret
push
ss
jae
cmp
das
jno
push
xor
rorb
inc
sub
scas
and
and
ss
xor
push
lret
mov
mov
std
xchg
inc
lea
leave
addr16
das
aad
push
jp
inc
add
loope
sub
iret
divb
pusha
sub
out
lods
adc
xchg
sbb
and
lret
out
sbb
and
xor
std
test
and
sub
fnsave
faddp
sub
xchg
mov
sub
and
xchg
cmp
add
pop
xor
test
push
dec
sbb
sti
cwtl
out
mov
aaa
popf
xchg
in
sub
lds
movsb
repz
ret
pop
mov
inc
movsl
cmpsl
push
sub
popa
mov
loopne
fidivrl
les
fdivs
lds
xchg
inc
and
push
fsubs
lods
push
lret
add
imul
inc
xor
lret
std
dec
mov
scas
add
fcompl
lcall
scas
stc
or
lea
loopne
sub
or
push
cld
lods
xor
pop
jmp
invd
lds
or
cwtl
mov
pop
push
ljmp
inc
mov
dec
jge
and
xor
loop
fld
sbb
add
rorb
adc
xor
adcl
dec
insl
pop
lea
call
or
gs
sbb
dec
xchg
adc
dec
cmp
mov
gs
mov
cmp
mov
in
inc
arpl
aam
mov
aam
in
pop
mov
mov
mov
aaa
lahf
adc
mov
xor
scas
addr16
shll
mov
out
popl
lock
cli
sbb
outsl
jae
adc
xchg
mov
and
cmpsb
inc
mov
mov
scas
fsubl
int
mov
xchg
out
xor
data16
add
mov
jb
mov
ficoml
out
add
pop
sbb
inc
jb
addb
sub
call
fisttps
repz
je
lea
mov
pop
outsb
mov
push
mov
push
stc
pop
or
jns
insb
push
mov
jmp
stos
sbb
and
pop
lods
popa
mov
mov
movsb
dec
push
xchg
push
aas
cmpsl
nop
pop
popa
dec
fimull
pop
ss
insb
pop
push
add
add
std
inc
xchg
jnp
xlat
test
lds
pop
loopne
arpl
lret
loope
gs
mov
popa
out
cmpsb
xchg
je
outsl
fldcw
sbb
sbb
movsl
dec
test
cmp
das
aad
xchg
pusha
pop
pop
fbstp
ds
decb
sub
mov
and
pushf
jl
les
popf
cmp
sahf
xchg
lock
inc
popf
adc
jae
pop
sub
ljmp
mov
pop
call
test
or
lods
pop
xlat
fistpll
pop
mov
nop
mov
dec
jno
bnd
dec
lret
pop
int
mull
xlat
push
xchg
mov
mov
mov
cli
imul
out
and
mov
and
sbb
and
xchg
dec
popa
arpl
mov
leave
out
dec
test
mov
aad
add
neg
xchg
or
pop
push
rorb
sub
mov
test
into
cmc
ss
mov
push
lds
dec
jno
dec
and
and
mov
mov
subl
and
enter
jg
pop
stos
pop
xchg
repz
mov
add
and
int3
adc
add
xchg
adc
out
cmpsb
pop
fwait
sub
out
inc
fdiv
add
addr16
xor
inc
jo
cmp
jmp
sub
jo
mov
or
adc
inc
fiaddl
sbb
adc
sbb
in
repnz
cwtl
or
mov
lock
cmpsb
mov
xchg
dec
mov
mov
add
or
test
sub
push
inc
popf
pop
fbld
mov
xchg
idiv
fcomi
mov
pop
lds
fdivrp
movsl
and
inc
dec
lea
mov
fs
push
insb
lds
sbbl
adc
icebp
pusha
mov
lret
or
aaa
mov
jnp
jg
mov
xor
jbe
cli
fwait
inc
inc
xor
addr16
mov
dec
leave
rorl
rolb
mov
mov
pop
or
dec
rclb
lds
or
or
test
mov
xchg
inc
mov
mov
lods
fstl
decl
andl
xchg
mov
or
mov
bound
sub
cmp
sub
in
mov
xor
push
mov
xor
insl
arpl
pop
lret
repnz
jg
sbb
jbe
jno
xchg
nop
pop
rcll
xchg
jmp
mov
or
fnstenv
pop
pop
cmc
fidivs
mov
insl
mov
repnz
loope
repz
mov
pop
insl
mov
lahf
xchg
xchg
xchg
add
dec
push
cmpsl
mov
adc
pop
es
inc
push
sbb
fisubrl
leave
and
jae,pt
cmc
xchg
cmpsb
test
jl
mov
jl
pop
mov
mov
outsb
lahf
jnp
iret
adc
add
mov
pop
add
dec
push
cmp
jmp
pop
pop
int3
sar
adc
mov
int
xor
mov
push
and
in
or
iret
inc
in
add
jbe
sbb
icebp
cmp
shlb
outsl
or
push
loop
mov
call
xor
cmc
loopne
mov
clc
add
pusha
call
outsb
fnstenv
cmc
mov
xor
cmp
mov
or
lahf
sbb
popa
fstpt
dec
add
jne
ret
das
outsb
mov
outsl
push
mov
push
mul
xchg
icebp
in
mov
arpl
std
and
pop
rolb
loopne
jp
inc
sub
adc
aam
clc
popfw
das
mov
xchg
int3
xor
sub
leave
daa
jle
lret
int3
pop
jno
or
rclb
push
pop
push
clc
test
lret
popa
mov
gs
and
jg
mov
ret
sti
or
inc
lods
cs
add
icebp
xchg
mov
push
inc
cmp
dec
divl
add
loopne
lret
jmp
inc
jbe
push
dec
lock
jno
mov
daa
and
sub
add
inc
arpl
sarl
mov
scas
dec
mov
adc
inc
push
push
shl
and
pop
bound
mov
repz
ljmp
test
mov
mov
mov
pop
scas
xlat
in
xchg
or
and
call
inc
in
pop
in
bound
xor
mov
rcrb
ret
repnz
or
adcl
fstl
xor
pop
jp
lcall
insl
sahf
out
jnp
imul
inc
popa
jo
push
jo
loop
shr
stos
cmp
es
adc
dec
push
icebp
push
mov
xchg
xor
ljmp
mov
fs
ret
fwait
push
inc
jnp
lret
lcall
fnstsw
or
mov
les
cmc
inc
jecxz
shl
dec
mov
inc
loope
cmpsl
xor
mov
icebp
ror
pop
jg
mov
shl
mov
mov
push
inc
inc
frstor
cmp
enter
mov
dec
push
inc
fnsave
adc
push
push
push
jnp
mov
mov
scas
jle
stc
pop
jae
dec
mov
cmp
jae
std
mov
cld
inc
xor
dec
sar
jecxz
adc
pop
mov
or
sti
or
pop
out
inc
scas
pop
in
loop
aaa
clc
int
aas
or
cmpsb
out
sbb
push
fstps
mov
stc
xchg
aaa
jg
dec
dec
or
jno
fistps
mov
filds
push
icebp
sub
xor
imul
pop
jo
addr16
xlat
cmp
mov
pop
xchg
movsl
pop
repz
loopne
inc
stc
and
int
jle
add
adc
jnp
xchg
add
xchg
int3
xchg
sub
call
push
fidivl
jp
in
lret
cmp
xchg
repnz
jnp
xor
mov
test
push
sub
lahf
in
outsl
fst
xchg
cmpsb
ja
pusha
stos
jo
mov
pusha
and
inc
cwtl
add
pop
cmpsb
sub
jbe
inc
mov
js
push
mov
jge
icebp
mov
inc
aas
or
int3
sub
dec
mov
sub
icebp
mov
sbb
and
mov
loope
push
stos
cmpsl
ret
sub
cli
sub
cli
push
mov
dec
cmp
shll
stos
cmc
adc
fiaddl
jbe
sbbl
dec
inc
xchg
sub
inc
aaa
or
push
sub
test
push
ret
clc
lods
testl
repz
mov
iret
mov
mov
lock
push
lcall
sbb
add
dec
imul
lods
dec
pop
arpl
dec
mov
daa
adc
cmp
ljmp
and
inc
insb
out
mov
rcr
mov
dec
out
mov
and
push
xor
mov
push
loopne
sub
das
inc
jge
shl
daa
push
jmp
cmc
pushf
arpl
pop
scas
lods
stos
lods
pop
jg
pop
stos
add
mov
arpl
xchg
fadd
in
push
inc
jle
stos
outsl
scas
movsb
push
xor
out
cwtl
hlt
popa
les
fists
sbb
out
push
fidivrl
sarl
inc
cmpsb
mov
dec
bound
bound
add
sti
adc
jne
rclb
cmp
jo
sub
adc
sbb
lahf
sarb
ss
clc
jae
inc
push
adc
das
inc
rcrl
fnsave
repnz
dec
dec
clc
push
ja
mov
xor
mov
cmp
lods
les
das
cmc
adc
test
lock
pop
inc
push
sarl
in
fwait
lods
cmovne
adc
addr16
cwtl
mov
shlb
add
loope
test
in
je,pn
neg
cltd
fiaddl
insb
repz
movsl
ljmp
mov
mov
aas
xchg
fidivs
mov
pop
cmp
imul
ret
aas
loopne
out
stos
or
sbb
xchg
xor
jbe
jle
sarb
add
in
dec
sahf
in
cld
scas
shll
inc
dec
push
push
cmpsl
aad
mov
add
aaa
shlb
jecxz
pop
or
in
aad
add
fisubs
iret
scas
sahf
mov
sub
and
cmp
mov
daa
icebp
mov
out
push
cmp
jne
sahf
stc
orl
je
iret
lods
and
stos
mov
mov
out
aas
lea
je
clc
shll
sbb
lods
dec
dec
mov
cli
pop
notb
ljmp
stos
int3
inc
xchg
aad
add
or
iret
adc
jge
or
ja
xchg
adc
ljmp
insb
repz
std
pop
shl
jmp
stos
and
lods
rcrb
ror
orb
icebp
add
lods
stc
lds
push
lea
aad
xlat
adc
ja
jnp
stc
xorb
jne
cwtl
jp
jg
inc
inc
push
dec
mov
icebp
xor
add
add
mov
shl
aam
xor
pusha
in
in
leave
adc
fxtract
aam
sbb
sub
dec
xchg
repz
inc
outsb
and
xlat
pop
in
lds
jnp
pop
scas
dec
bound
mov
pop
shrb
rorb
inc
clc
pop
outsl
xchg
ret
popa
lods
mov
mov
pop
mov
xchg
mov
push
inc
imul
sbb
add
jp
cmpsl
jne
mov
sbb
ljmp
fwait
and
or
stc
pop
sub
int
sbb
pusha
push
inc
mov
aad
call
int
test
ljmp
mov
sbb
cmp
loopne
adc
in
mov
jb
fistl
cltd
stos
pop
mov
loop
gs
pop
in
jmp
xchg
mov
xchg
dec
gs
mov
dec
add
mov
mov
mov
dec
jecxz
orb
cmp
sub
stos
inc
mov
fldcw
movb
shll
stc
stos
int3
mov
xchg
sahf
pop
and
xchg
sbb
std
mov
lret
sub
scas
or
fdivp
cmp
sub
pusha
insl
adc
dec
xor
pop
sbb
les
pushl
mov
shl
js
and
mov
lahf
stos
pop
imul
pusha
inc
or
enter
or
fdivrl
into
mov
lcall
sbb
enter
xchg
mov
insb
into
lret
cmp
adc
stos
xchg
mov
pop
mov
pop
mov
out
add
hlt
and
adc
lock
in
test
adc
stos
lea
and
or
cmp
fstps
mov
and
jmp
fcmovb
jmp
jns
jo
imul
cmp
mov
fcomp
push
and
popf
out
pop
mov
out
sbb
lea
mov
mov
orl
push
scas
sub
sub
faddl
xor
or
ret
jmp
das
mov
lret
jecxz
mov
jb
xchg
nop
testb
mov
shll
cmp
xchg
xchg
jge
ljmp
es
repz
xor
cs
add
cwtl
loopne
in
jno
xchg
lret
cltd
popa
int3
mov
push
push
or
movsb
cmp
xchg
test
mov
dec
sub
les
cmpsl
mov
sbb
pop
pusha
cmp
jns
mov
imul
pop
push
xchg
dec
inc
xchg
mov
addl
imul
mov
je
mull
fildl
repz
cld
stos
mov
push
idivl
jns
jbe
in
aaa
call
inc
add
cli
fdivrs
pop
addr16
lds
das
sub
fcoml
sub
into
or
mov
add
inc
aaa
or
and
stos
push
or
pop
dec
jg
mov
sub
rolb
mov
mov
xchg
jg
mov
add
test
cwtl
push
pushf
sbb
add
mov
jne
add
pusha
fwait
or
jo
es
dec
fidivrs
dec
pusha
rolb
and
sbb
or
test
mov
imul
sahf
xchg
pop
aad
pushw
pop
popf
daa
xlat
add
adc
cs
movsl
adc
pop
fstpt
jnp
test
mov
lds
and
xchg
sub
push
incb
xor
pop
data16
mov
fisttps
inc
repnz
fidivl
stos
mov
sahf
add
xchg
add
push
shll
mov
lret
jae
fistl
insl
lock
movsb
loope
aaa
and
cwtl
jle
dec
xor
out
xor
inc
ja
jne
inc
insl
xor
mov
add
fwait
leave
xchg
je
jl
push
push
cmp
in
int
cmc
stc
pushf
jo
adc
pop
fidivs
cmpsl
fisttpll
jl
out
xor
or
imul
jge
ret
cmp
jnp
je
sbb
stos
mov
cmp
push
fistl
std
pop
stos
ds
adc
mov
lret
push
xchg
orl
aaa
jbe
cmp
and
push
repz
pop
or
cmp
loopne
mov
les
aam
adc
fstl
jnp
adc
xor
and
imull
fcmove
inc
je
xlat
dec
mov
adc
cltd
data16
test
sbb
adc
dec
mov
or
xor
jae
mov
and
dec
cmp
cmp
mov
rorl
repz
inc
push
outsb
jmp
adcb
std
stos
je
pop
sbb
iret
sub
sbb
dec
push
push
out
jmp
jg
jmp
push
sbb
push
mov
pop
leave
les
adc
inc
loop
iret
mov
int3
imul
icebp
leave
pushf
dec
mov
rcrl
mov
call
push
pop
fadd
sti
add
push
cmp
test
xchg
nop
xchg
sbb
jge
push
arpl
inc
jne
jecxz
repz
les
and
add
mov
mov
add
pushf
mov
mov
inc
pop
xlat
mul
cld
mov
xchg
mov
insl
stc
xlat
addr16
cmp
scas
outsl
cmpsb
mov
into
xor
test
std
mov
arpl
hlt
or
push
sbbl
pop
sbb
sbb
in
cmpsb
sub
jbe
mov
shlb
adc
mov
sbb
xor
aad
shlb
jo
adc
mov
scas
nopl
fxtract
in
sub
jae
hlt
dec
lret
lds
fnstsw
add
cmpsb
cmpsl
gs
pop
sbb
insl
jl
inc
xor
loopne
sbb
and
inc
inc
repz
lods
xchg
push
sti
jge
mov
lock
jmp
mov
sub
fwait
addb
in
scas
mov
mov
xchg
sub
gs
cld
loope
fcomps
mov
inc
cli
xchg
mov
mov
js
mov
sbb
stos
push
mov
pusha
rol
in
and
inc
mov
sti
cmp
fwait
and
push
lcall
or
add
sub
std
sbb
das
add
or
mov
ret
mov
mov
push
pop
test
cmp
lods
jb
enter
add
cmp
mov
ss
daa
cmpsl
mov
cmpsb
jmp
inc
jnp
int
gs
mov
mov
sub
ror
stos
cmp
jg
js
dec
daa
sti
and
pop
xchg
sarb
inc
push
mov
sbbb
ss
push
inc
je
fucomp
jg
notl
pusha
lock
out
xchg
movsb
pop
rcll
stos
hlt
adc
movsl
push
loopne
pop
push
arpl
or
pop
ss
jbe
bound
cmp
push
ljmp
into
mov
shll
bound
mov
or
push
fisttps
pop
out
lcall
cmp
insb
call
push
sub
test
int
jnp
jae
cmc
push
imul
mov
mov
push
fmuls
pop
subl
cmp
dec
cmp
sbb
outsb
fs
cli
mov
push
shl
sarb
ja
push
call
pusha
dec
pop
insl
sbb
cs
arpl
daa
xor
mov
inc
int3
out
cmc
int
adc
gs
push
mov
or
jno
pop
mov
or
sbb
sbb
xchg
daa
inc
jnp
jne
enter
sbbb
inc
xchg
int3
push
fs
stc
sbb
inc
push
mov
ss
inc
incb
imul
outsb
add
lret
xchg
pop
inc
cmp
cmp
jge
cltd
addr16
cs
dec
pop
clc
dec
mov
out
adc
fldl
sub
cmp
sbb
ret
aaa
sbb
clc
xchg
adc
pop
mov
dec
rorb
jo
push
outsb
jge
sub
nop
push
sbb
pop
and
lods
mov
sub
frstor
xchg
cmp
fstps
mov
bound
push
mov
adc
mov
add
jnp
jb
dec
sub
jg
adc
sub
scas
aam
or
add
cwtl
aas
and
mov
in
jns
or
cmp
sbb
push
lods
push
push
mov
sbb
nop
and
mov
add
push
sub
sub
fiadds
sti
sub
push
dec
inc
xor
mov
clc
mov
mull
iret
outsb
sbb
rclb
loopne
pop
cmp
cwtl
rep
bound
imul
cmp
xor
xchg
dec
dec
mov
cltd
ljmp
out
lods
arpl
movsb
inc
jb
rcl
and
push
sbb
dec
gs
icebp
mov
mov
jno
aad
fdiv
sti
fimuls
pop
mov
adcl
fldt
and
lahf
dec
fstpl
loop
add
push
jo
mov
in
push
int3
pop
sub
cltd
popf
filds
sbb
outsl
test
popf
sbb
loopne
int
lret
ljmp
or
mov
insb
test
insl
adc
fldt
lret
mov
mov
in
notl
pushl
rclb
imul
add
mov
hlt
addl
or
pushf
mov
mov
mov
jge
mov
loop
ljmp
dec
adc
loope
pusha
adc
je
test
sbb
sbb
xor
scas
add
repnz
sub
sub
mov
dec
mov
and
xor
xor
hlt
pushf
inc
out
push
dec
movsb
mov
das
push
adc
popf
pusha
pop
popf
mov
push
and
sahf
push
insl
loope
add
mov
in
inc
inc
and
adc
aas
pop
ficoml
rorl
xlat
fwait
sub
shrl
mov
lret
jl
pop
aam
imul
mov
ljmp
es
sbb
or
pop
sub
subl
outsl
push
and
push
push
popa
and
into
std
mov
pop
jl
xor
inc
into
sub
dec
mov
nop
dec
das
fnstsw
in
jl
pop
push
or
jo
int3
ds
mov
xchg
inc
shrb
mov
xchg
int3
or
dec
rcrl
jecxz
iret
push
xorl
push
cmc
or
xchg
jl
leave
adc
mov
in
cli
add
sub
in
pop
sbb
fistps
pop
ret
xchg
add
pop
jae
inc
mov
and
les
hlt
fnstsw
movsb
insl
fcmovbe
xchg
jg
push
aam
push
rol
divl
test
sbb
or
shrl
sub
sub
and
into
or
or
mov
leave
aas
add
fs
mov
mov
cmp
sub
imul
mov
mov
xchg
pop
adc
cwtl
lds
jo
mov
ja
jae
add
inc
cmpsb
fstl
repnz
in
in
fidivl
xchg
loopne
dec
out
fcomps
out
add
shll
add
cs
push
test
cmp
push
mov
movsl
nop
repnz
add
push
sub
xchg
push
xchg
sbb
dec
cmp
add
les
shlb
dec
stos
jge
repnz
addr16
xor
pop
adc
adcl
jne
mov
push
dec
cmovp
test
hlt
das
adc
mov
and
mov
pop
bound
sbbb
xor
cltd
int
xchg
hlt
dec
sarl
fnsetpm(287
mov
and
add
shl
mov
mov
popa
lods
cli
sbb
aam
mov
daa
aad
sub
pop
ffreep
push
repz
jno
xchg
fdiv
jl
fidivl
enter
add
js
popa
out
lods
push
sub
xor
lret
sbb
mov
mov
jae
sub
cld
jle
adc
lea
jl
repz
pop
ret
xchg
imulb
sbb
loop
fs
int
dec
mov
push
js
and
adc
mov
ret
mov
pusha
cmp
movsb
pop
mov
push
mov
das
pop
lahf
sti
mov
jbe
inc
mov
xchg
sahf
mov
ret
pop
sti
push
insl
push
mov
push
test
xor
dec
ss
outsb
sub
idivb
ds
pop
out
fnstcw
xchg
xchg
xor
and
or
rcrb
push
inc
inc
jecxz
in
push
dec
mov
insl
pop
vpand
ret
and
push
fs
fs
cmpsl
inc
dec
mov
inc
lock
pop
mov
out
sub
stc
nop
lds
xor
arpl
sar
pop
das
movsl
pop
adc
inc
adc
or
scas
or
dec
loope
mov
inc
inc
pop
ljmp
popf
cld
dec
fildl
xchg
mov
outsl
push
sar
mov
lea
mov
inc
addr16
es
mov
scas
jl
push
mov
mov
ja
pop
fsubl
in
les
xchg
fs
or
adc
push
mov
aad
ret
add
pushf
jbe
push
imul
inc
dec
adc
fdivl
addr16
sbb
insb
ja
adc
test
dec
sub
xor
push
cld
in
ja
or
sub
xchg
repz
cmpsl
into
ljmp
xchg
test
insb
mov
cmp
fidivrl
call
fs
add
inc
call
pop
dec
sti
std
cld
nop
sahf
nop
or
xor
push
ds
test
xor
sbb
les
push
stos
cmp
mov
orb
mov
jns
movl
sbb
dec
sbb
and
inc
pop
shll
and
hlt
cmp
inc
adc
hlt
imul
mov
ss
pushf
and
aam
jl
shl
lock
xchg
rcll
mov
jnp
add
andl
dec
jne
aam
lahf
sub
aad
push
divb
out
and
popf
cmpsb
ret
inc
mov
clc
neg
jmp
lret
pop
pop
mov
shll
jbe
push
jge
sub
leave
push
mov
cwtl
ljmp
movsl
cld
adc
sti
pop
dec
xor
fs
or
xor
lods
stos
outsb
das
mov
out
leave
or
mov
imul
test
jl
pop
jl
cmpsb
pop
imul
pop
int
je
adc
sub
into
sti
lods
ret
jns
jmp
mov
daa
fisubs
mov
mov
shr
scas
jmp
push
inc
push
mov
inc
sbb
lret
jbe
or
or
enter
mov
xchg
cmp
fldt
add
add
ret
pop
aas
mov
icebp
inc
call
pop
mov
outsb
popa
repnz
testl
fisubs
jecxz
in
imul
jns
jns
inc
bnd
leave
push
mov
or
testb
cs
add
fidivs
sti
inc
inc
adc
shrl
cmp
inc
cltd
icebp
or
rclb
jne
xlat
pop
sbb
cmp
insl
pop
fimull
mov
test
lock
or
aad
mov
jle
jecxz
lea
dec
cmp
idiv
popa
lret
push
jge
loope
stos
fcoml
pusha
push
test
inc
and
or
push
fwait
xchg
mov
outsl
and
leave
mov
jle
popa
in
sti
sbb
pop
dec
pop
sbb
xchg
add
cltd
and
dec
out
mov
mov
pop
popa
js
cmpsb
xchg
add
mov
mov
inc
mov
fidivl
scas
pushl
xor
lret
inc
mov
sbb
sahf
pop
iret
test
push
mov
push
push
lahf
pop
ficomps
cmp
in
loopne
dec
jge
call
sbb
cmp
movb
mov
jo
jmp
and
push
jne
and
popf
cmp
cmp
add
cmc
arpl
xchg
outsl
jo
cld
pop
insl
sub
outsl
sbb
loope
add
add
inc
add
rcll
lock
call
mov
stos
bound
jnp
and
mov
dec
jnp
cmp
fwait
adc
mulb
mov
xchg
mov
adc
xorb
dec
inc
movsl
popa
cld
arpl
xor
gs
jge
jle
loopne
cmp
xlat
sub
jb
add
stc
daa
add
jmp
mov
and
in
jae
xchg
or
inc
adc
adc
xchg
ljmp
popf
sahf
adc
or
lahf
xchg
sti
flds
jae
imul
xchg
cmpsb
adc
cmp
into
pushf
xchg
xchg
sarb
cmp
data16
into
out
cmpsb
addl
call
inc
in
sub
lahf
pop
pop
mov
pop
loop
int
xor
add
xchg
push
or
iret
mov
pushf
fcomi
add
jmp
dec
lock
call
mov
in
inc
fistpl
aas
sbb
mov
fiadds
jmp
imul
es
lcall
subb
inc
sbbb
sub
ffreep
jns
cld
lret
mov
negb
mov
jae
inc
xor
inc
nop
adc
test
rolb
xchg
inc
lret
fstpl
fistps
cmpsl
adc
cli
dec
inc
sbb
imul
out
addr16
xchg
int3
rcrb
mov
adcb
lea
cmpsl
ss
pop
mov
add
jbe
xchg
scas
push
mov
rol
imul
mov
jb
or
lods
cmc
lea
add
les
mov
xchg
or
jno
test
int
adc
das
mov
adc
jb
in
cmpsl
mov
cs
sbb
mov
shrl
sarb
inc
cmp
push
es
stc
les
xorb
ret
mov
mov
aas
xor
inc
rcll
mov
add
scas
fistl
mov
jg
lods
lcall
sub
ja
and
xchg
mov
xor
pop
push
xchg
lret
xor
ja
cld
mov
adc
xchg
mov
jns
pop
mov
cmp
mov
pusha
jns
add
in
call
or
loopne
sbb
outsb
sub
xorb
arpl
xor
cmpsb
loopne
adc
scas
out
sbb
out
mov
jle
push
sahf
ficoms
lock
rcll
jle
arpl
fsub
dec
xchg
out
sbb
jg
cld
push
push
xor
test
jo
cmc
insl
out
mov
jns
jmp
jge
fsubrs
pop
test
lcall
or
je
arpl
mov
mov
data16
loopne
cltd
add
fsubl
xchg
or
fsubrl
jnp
jne
lahf
bound
pop
fs
sbb
pop
stos
mov
inc
es
cmp
incl
mov
imul
mov
shll
push
fiadds
sarl
pop
std
test
jb
popf
cltd
mov
and
jne
and
sbb
mov
in
xor
sub
xchg
or
inc
test
cld
adc
sbb
cmp
mov
dec
xchg
mov
clc
arpl
cmc
lock
xor
lret
test
add
pop
mov
and
dec
push
jnp
mov
in
jl
mov
dec
out
mov
mov
or
mov
pop
data16
or
fisttpl
jg
rcll
fists
call
in
xlat
or
sub
push
enter
adc
jmp
in
stos
repnz
dec
popa
stos
test
xchg
adc
out
jns
lahf
ss
or
or
fnstcw
push
cmp
int
cli
test
cmpsb
popa
lahf
ret
xchg
xor
push
mov
pop
test
mov
cmc
insl
mov
pop
sub
mov
rcr
adc
fiaddl
in
sbb
jae
push
cmp
repz
jle
mov
fld
jns,pt
push
push
test
dec
je
stc
sub
push
jle
negl
call
xchg
push
imul
xchg
jno
jecxz
lock
lret
in
mov
pop
mov
pop
dec
outsb
mov
imul
popf
sbbl
repnz
jnp
cli
dec
lret
pop
jbe
fmul
popf
stc
aaa
js
adc
fisubrl
cmp
out
inc
es
pop
ja,pt
stc
push
sbb
fldl
shl
or
call
sbbb
jnp
and
pop
shrl
dec
gs
es
ret
cli
xchg
mov
or
dec
int
lcall
fsubrl
xchg
mov
mov
aas
mov
cmp
incb
adc
inc
js
fistpl
adc
jae
and
xchg
and
fs
fucomip
mov
jmp
cld
cltd
sub
std
imul
inc
xor
out
inc
mov
sti
js
mov
push
push
insl
add
cli
jecxz
lret
fadd
mov
xchg
mov
sub
jbe
ret
cmp
lods
mov
ds
imul
les
sub
mov
pop
movsb
pop
sti
jbe
jge
stos
fildl
mov
jg
dec
ret
xchg
shrl
push
sub
mov
fmull
mov
sub
pop
shll
mov
xchg
mov
mov
mov
xor
xchg
and
pop
push
inc
sbb
mov
mov
imul
bound
mov
mov
orl
pop
test
xor
loopne
mov
dec
xchg
jmp
insl
fucomp
test
dec
cmpsb
rcr
mov
pushf
adc
adc
sti
in
jmp
mov
cltd
adc
clc
loope
fiaddl
hlt
xchg
roll
into
sbb
mov
test
dec
pop
fstps
jbe
jecxz
adc
arpl
mov
push
jne
push
jmp
lock
xchg
gs
xor
push
jl
loop
xor
xchg
movl
mov
jbe
fistl
in
dec
adcb
fmull
push
push
inc
pop
fdivs
and
ja
or
leave
lock
stos
inc
jo
and
push
xchg
and
repz
push
es
cmp
scas
mov
nop
sbb
xchg
fcmovb
ljmp
out
in
adc
cld
xlat
mov
lea
and
sbb
mov
leave
push
in
mov
nop
sub
inc
cs
lret
add
inc
ss
in
es
push
mov
xchg
add
xor
roll
sub
mov
lret
add
negl
dec
loop
fiadds
in
in
aaa
or
les
jmp
stos
lcall
enter
mov
jns
idiv
mov
xchg
dec
cmp
sub
jmp
fistl
inc
jle
sbb
popa
sahf
lcall
cs
inc
repnz
outsl
mov
int3
and
aam
not
mov
lods
daa
in
mov
mov
add
mov
jo
int3
test
test
addl
popa
je
inc
ljmp
cmp
sbb
iret
xchg
aaa
fbld
jne
adc
aam
mov
mov
stc
add
push
sub
dec
pop
flds
into
flds
mov
sahf
inc
out
jl
mov
cmp
out
jne
xor
cltd
sub
mov
js
lock
mov
xchg
xchg
paddsb
dec
mov
push
int
ret
mov
xchg
arpl
mov
in
test
arpl
outsl
adc
imull
push
inc
inc
and
and
jb
xor
lods
sub
ret
jnp
add
and
mov
dec
sbb
test
je
pop
push
faddl
mov
jno
xor
clc
xchg
dec
nop
jno
es
add
and
movsb
pop
push
call
jno
and
mov
fwait
insb
or
mov
xchg
inc
jp
cmp
xchg
pop
loop
rcll
and
xlat
andb
xchg
aad
imul
sub
xor
out
mov
cmp
lret
cmpsb
repnz
inc
sbb
cltd
or
mov
and
or
data16
sbb
jo
cltd
fldt
mov
ja
pop
dec
inc
cmp
imul
lcall
popa
movsl
adc
pop
pop
repz
aaa
shl
jno
mov
cltd
sub
faddl
int3
cmp
or
push
les
into
adc
sahf
shlb
mov
mov
push
or
inc
clc
aad
test
or
nop
shll
adc
ret
in
fisubrs
pop
fcoms
xchg
or
lods
pop
jne
int3
or
fistpl
xchg
loope
les
mov
aas
pop
push
adc
lds
das
mov
loopne
imul
popf
pcmpeqb
and
inc
or
adc
mov
aad
scas
dec
inc
arpl
pop
mov
decl
add
insb
or
mov
and
addr16
jns
inc
mov
push
xchg
dec
outsl
lods
dec
hlt
push
movsl
sub
pop
add
sbb
xchg
cltd
and
mov
repnz
mov
stos
addr16
dec
mov
fidivl
push
xor
fwait
lret
repnz
push
clc
addr16
loope
pop
cmp
xchg
and
ret
iret
dec
and
xor
push
popf
stc
jle
adc
mov
stc
movsb
cmp
mov
loop
inc
lds
mov
adc
jns
jo
or
and
daa
aas
movsb
mov
or
or
inc
mov
lcall
pushf
cmp
add
push
insb
ret
lods
xor
ror
das
pushf
push
ljmp
cwtl
pop
popa
xchg
mov
bound
dec
xchg
jl
adc
adc
loopne
outsb
in
push
xor
out
call
inc
test
pusha
cmp
xor
les
and
add
test
fnstsw
icebp
cmp
repz
pop
adc
pop
dec
stc
jecxz
outsb
pop
dec
push
lret
mov
cwtl
cmc
inc
fistpll
cwtl
inc
push
or
or
dec
pushf
mov
addl
test
iret
mov
inc
pusha
in
or
xor
int
movsb
jg
or
xchg
pop
push
cli
fwait
jmp
xor
or
push
clc
adc
aam
aam
lahf
inc
mul
sbb
inc
repz
pop
sub
aad
call
incb
adc
shr
sarb
jl
mov
addr16
in
xchg
dec
sub
outsl
jg
frstor
lea
mov
or
arpl
mov
mov
cmp
ss
xor
arpl
sub
jl
pop
mov
or
in
lret
flds
inc
repz
es
mov
cmp
sbb
cmc
std
dec
testl
shll
in
cltd
push
mov
xor
aaa
pop
inc
mov
jns
stos
pop
movsl
dec
ret
xchg
adcl
inc
bound
insb
adc
push
icebp
hlt
sub
out
out
popl
xchg
and
sub
inc
imul
mov
jb
jne
dec
jmp
stos
loopne
je
mov
cmp
mov
jns
jnp
out
mov
and
out
negl
ja
popa
xlat
pop
rcll
xor
push
lahf
mov
dec
cmp
lds
out
leave
lea
xor
addb
inc
insl
xorl
movd
xchg
in
xchg
inc
sbb
and
adc
pop
test
cmc
push
or
fisttps
mov
test
out
add
sbb
push
mov
cli
jb
pop
fstl
add
mov
lods
loope
repz
mov
jl
pushf
pop
lret
filds
int3
daa
sub
rcrb
or
cmpsl
xchg
test
les
rcr
mov
jl
fsubs
clc
cli
andl
or
dec
push
ja
mov
ret
sub
in
xor
movsb
xor
push
mov
mov
jge
mov
test
mov
jnp
sub
mov
lcall
xor
addr16
clc
xchg
and
pusha
mov
xlat
aaa
xor
add
dec
mov
mov
mov
adc
sub
clc
mov
dec
outsl
xchg
in
test
stos
popa
hlt
inc
testb
movsl
xor
inc
sub
js
in
xadd
mov
push
stos
jg
sub
cli
dec
mov
or
mov
js
mov
daa
int3
mov
pop
jmp
loopne
add
mov
mov
pop
xor
inc
mov
inc
popf
and
sub
dec
pop
inc
xor
repz
jecxz
popf
jmp
xchg
orl
stos
push
frstor
add
mov
mov
fsubrl
cmp
xchg
sub
and
in
outsb
rcll
stos
notl
sti
loop
xchg
insl
sub
outsb
sub
push
mov
or
cmp
xchg
fdiv
fiadds
repz
dec
or
stos
cli
out
or
in
sti
ss
das
hlt
in
add
xor
xor
pop
jmp
pop
les
negb
call
inc
jg
subl
sbb
inc
or
sub
xchg
or
popa
insb
in
popf
sarb
icebp
jge
mov
pusha
and
fidivrs
jnp
cmp
scas
mov
xor
cli
fdivs
jo
jns
lds
mov
mov
cs
sbb
std
loop
pop
mov
fistl
pop
jg
mov
jg
xlat
mov
jp
syscall
test
test
ljmp
add
hlt
movsb
jns
push
push
mov
add
mov
mov
inc
fiadds
cltd
shrl
notb
jne
add
fdivs
adc
pop
or
mov
aam
js
enter
testb
int3
outsl
add
decl
dec
sub
cmpsl
sub
mov
int3
push
push
mov
scas
and
sahf
ret
int
sbb
pop
cmpb
aas
fisubrl
out
mov
mov
rcrb
out
inc
mov
adc
mov
mov
mov
sbb
pop
jb
adc
out
lea
pop
in
cld
push
adc
cmpsl
cmp
pusha
in
cmp
ss
pushf
jl
sub
cmp
add
pop
mull
xor
fwait
mov
push
or
adc
movsb
cmp
movsl
cld
das
xor
lea
test
mov
imul
aam
jmp
mov
pop
pop
sarl
ficoml
pop
insb
jb
mov
adc
jns
push
jno
inc
jo
jp
dec
mov
mov
in
push
cmp
xor
aaa
mov
clc
ja
push
mov
lcall
jo
out
mov
jg
ljmp
lret
inc
enter
test
cwtl
inc
xor
mov
bt
xor
les
lahf
cmp
cwtl
ja
daa
mov
test
jae
cmp
pop
mov
testl
aad
inc
xor
xchg
xchg
xor
jmp
push
sahf
int
adc
xchg
idivl
jge
xor
adc
mov
adc
dec
sbb
ja
mov
mov
imul
jge
lcall
stos
jns
sub
pop
test
ds
xchg
add
fcmovnbe
mov
jmp
xchg
outsb
ljmp
loopne
cmp
or
rcll
loop
dec
int
or
js
lea
movnti
dec
mov
outsb
out
inc
aam
xor
incb
mov
arpl
cmpsl
sarl
loop
inc
outsb
mov
mov
push
outsb
pop
lods
nop
xchg
out
test
cwtl
and
push
push
cmp
pop
in
pop
arpl
aam
cmp
and
shll
and
icebp
jbe
and
xchg
test
gs
sbb
add
cmp
es
mov
cmpsb
clc
call
rcrb
adc
inc
insl
lcall
mov
xor
bound
mov
out
sahf
cs
cmp
outsl
scas
mov
push
mov
adc
imull
std
xor
gs
ss
mov
test
clc
xorl
mov
lods
dec
push
or
mov
jle
pushf
popf
sbb
xchg
push
mov
xor
movsl
xchg
fucomi
popf
cmp
ds
mov
in
into
inc
xor
insb
imul
push
stos
dec
fnsave
add
loopne
dec
jo
inc
test
dec
ja
mov
push
sti
jmp
cmp
adc
imulb
jge
xchg
push
mov
stos
arpl
xor
mov
mov
pop
fists
add
xor
sbb
or
stos
lea
ss
test
add
aas
test
lock
push
mov
add
and
cmpsb
je
push
stos
cmpsl
fwait
into
movsl
lahf
lods
pop
leave
lods
xor
xchg
and
scas
popf
mov
rcrl
pop
pop
cmp
mov
rcrw
gs
loop
into
sbb
dec
neg
icebp
push
push
xchg
lcall
inc
cmp
pusha
insl
jmp
pop
sbb
stos
fwait
mov
ror
jl
scas
dec
push
push
scas
popa
mov
push
test
sub
xchg
test
push
adc
into
fcmovu
and
repz
mov
shlb
and
xor
xor
out
or
mov
jp
sbb
test
cmp
mov
xchg
cmp
ss
pop
int3
add
add
mov
cmpsl
cmpsl
mov
and
popf
pop
cmp
call
jl
jno
add
movsl
shl
movb
lret
fucomi
popa
repz
xor
ret
xchg
mov
fistpll
shlb
mov
and
xchg
sub
inc
int
shrb
and
and
sbb
mov
xchg
push
adcb
fidivs
push
adc
ss
xor
push
mov
jo
in
mov
lods
fcomps
jge
in
enter
stos
call
adc
cmp
sti
mov
sbb
imul
cltd
ljmp
adc
xlat
lret
mov
sub
lret
pop
jle
mov
jbe
fisttpll
sub
mov
xor
mov
ret
loop
int3
scas
sbb
jae
nop
pushf
cmpsl
or
imul
ret
ss
out
shrb
push
xchg
pop
scas
jne
frstor
inc
or
movsb
sbb
inc
or
sbb
outsb
in
lcall
dec
fisttps
cmpsb
mov
loop
mov
adc
xor
mov
fisubrs
adc
ficoms
jb
int
jnp
and
and
inc
sub
leave
pop
rclb
in
pop
cmp
mov
lahf
es
lcall
cmc
sub
sub
cmp
mov
repnz
ljmp
pop
jmp
les
jge
aaa
inc
jnp
mov
lret
sbb
pop
push
or
pop
shlb
rorb
in
aam
popf
push
daa
aad
mov
dec
cld
push
xlat
sub
adc
push
inc
fs
enter
jecxz
jb
ret
insl
push
push
adc
xchg
into
push
dec
imul
dec
or
inc
adc
add
jecxz
lods
scas
int
out
dec
iret
cmpsb
test
fnstsw
xchg
movsl
jns
mov
jge
xchg
sbb
and
jp
xor
roll
sub
push
mov
orb
cmp
cmp
mov
insl
into
jge
int3
dec
xchg
lods
adc
aam
in
jecxz
rcr
inc
data16
adc
pop
jnp,pt
imul
or
mov
lea
pop
xchg
loop
lahf
shl
mov
dec
xor
pop
xchg
push
sti
xchg
cmp
addr16
and
or
testb
cmc
nop
push
mov
push
jecxz
fstpt
push
testb
pop
mov
add
add
rol
push
fdivr
in
test
scas
xchg
xchg
insl
sbbb
mov
outsb
rcll
jecxz
mov
icebp
or
dec
test
jl
mov
lock
into
int
pop
ja
xchg
add
inc
scas
mov
mov
mov
outsb
ret
xor
adc
in
insb
and
and
loope
jnp
add
dec
cmp
push
imul
cltd
rorl
ljmp
shll
outsb
push
and
popa
pop
call
sub
or
dec
xor
repnz
cmp
dec
mov
mov
mov
xor
pop
arpl
aaa
jg
lock
imul
fmulp
lock
or
or
faddl
shrl
pop
cmpsb
outsl
mov
xchg
ja
lds
pop
adc
pop
adc
mov
sarl
repz
xchg
cwtl
mov
jb
jns
ficoms
or
sub
mov
adc
cmc
xchg
loopne
jg
mov
push
fs
sub
xchg
std
jp
jmp
push
in
pop
adc
jnp
lds
call
lds
mov
xchg
call
roll
pop
jns
jne
cmpxchg
std
xor
xchg
pop
rep
xchg
iret
push
xor
jo
dec
push
fs
mov
out
stc
enter
xor
cmc
mov
mov
mov
add
mov
fwait
cmp
pop
sbb
stos
jg
sti
xchg
mov
popa
or
jp
add
jnp
leave
or
inc
mov
and
cmp
cs
mov
test
insl
rcrb
lods
psrad
push
rcrb
sahf
jne
rcll
mov
xlat
push
xchg
sahf
in
xchg
ret
cmc
or
jl
pop
push
and
mov
mov
push
inc
cltd
sbb
jnp
test
and
jne
mov
xor
pop
sbb
cs
inc
aaa
js
sbb
xchg
sbb
push
push
jecxz
je
inc
ds
xchg
mov
mov
mov
adc
lcall
loopne
fists
cmc
out
stos
mov
push
dec
testb
mov
and
pushf
mov
popa
out
adc
lcall
sahf
or
popf
jne
mov
arpl
call
jo
fistl
push
ret
mov
or
add
and
pop
ret
xchg
rorl
pop
jge
neg
mov
sbb
sti
imul
out
or
iret
dec
push
adc
dec
adc
jmp
push
mov
leave
pushf
adc
mov
add
pop
cmp
push
xchg
jbe
ljmp
xor
dec
ret
addr16
cmp
adc
add
mov
fisubl
aaa
push
and
push
out
mov
in
inc
pop
xchg
jg
insl
inc
lods
or
jge
out
inc
cmp
adc
pop
lret
dec
in
mov
in
push
cmc
leave
cmp
mov
hlt
sbb
js
aas
mov
mov
push
push
std
fscale
mov
lcall
jecxz
fiaddl
xchg
mov
fcomps
dec
pop
arpl
push
jg
fiadds
dec
sub
jg
test
add
fsubp
mov
jb
sub
leave
sbb
loopw
popa
lock
mov
push
insl
loop
jns
outsb
pop
pop
mov
fmuls
hlt
push
or
ror
sub
rcr
les
repnz
jle
test
push
jne
int3
adc
or
sub
out
lahf
sub
pop
jge
sub
fcomp
add
and
aas
sahf
fstpl
mov
popf
xchg
scas
pop
sar
xor
pop
sub
xchg
inc
sbb
or
test
add
shll
mov
sbb
cld
adc
xchg
rclb
orl
sub
jg
push
es
ds
adc
insb
adc
test
lret
lods
es
xor
bound
adc
in
or
rcrl
leave
sub
jbe
xor
dec
lds
scas
fdivl
std
vcvtdq2ps
push
xchg
push
cmp
and
fwait
aam
fsubrl
inc
in
adc
cmp
dec
cmp
pop
mov
cmp
int3
lds
push
jl
cmc
push
jae
adc
fcmovnbe
mov
bound
pop
push
inc
sti
adc
mov
push
and
aas
and
call
popf
lock
add
fdivl
pushf
push
lods
cmpl
movb
adc
add
mov
test
push
scas
pusha
adc
addr16
pop
xchg
rcrl
lahf
fistpl
push
sbb
cmp
push
adc
gs
push
and
mov
gs
shlb
rcll
rorb
fisubs
mov
mov
in
adc
jl
adc
cmpsl
push
pop
mov
movb
fidivl
sub
cmp
mov
fstpt
aas
fidivs
push
mov
push
aad
jno
and
ret
and
addr16
push
xor
popa
mov
arpl
pop
int3
outsl
imul
mov
dec
pop
rcrb
mov
cmpsb
dec
iret
sub
pop
repnz
icebp
js
in
into
sti
lcall
lea
mov
ljmp
nop
vandnps
pushf
into
pop
fcompl
push
fimull
push
aaa
loopne
xor
dec
mov
jne
pop
push
jnp
mov
int
inc
pop
inc
es
sub
add
insl
imul
sub
fwait
sidtl
lcall
mov
push
lods
int3
pop
xchg
shll
call
leave
ljmp
or
push
mov
dec
sub
stos
loopne
lds
push
out
cld
out
xchg
lret
rcll
pop
fiadds
mov
push
and
sbb
xlat
push
call
mov
pop
mov
mov
add
xor
sub
stc
add
adc
sbb
in
or
mov
imul
arpl
adc
sub
fs
push
pop
push
dec
popf
or
push
ds
std
rcll
insl
jae
mov
mov
mov
mov
in
cld
push
jb
cmp
sbb
or
out
and
xchg
sbb
jo
movsb
xchg
mov
sub
sbb
popa
lock
out
push
hlt
xor
pop
inc
and
adcl
push
subb
fwait
inc
sub
dec
lret
adc
pop
shrb
js
push
xor
push
xchg
add
shlb
andb
pop
or
and
mov
adc
pop
clc
mov
imul
xor
arpl
divl
jnp
imul
hlt
and
mov
inc
jae,pt
pop
or
lahf
cmp
push
cwtl
into
xor
and
lock
pop
sub
or
jnp
xorl
pop
pop
lcall
xor
xor
outsb
fwait
mov
mov
sub
aaa
sub
xlat
gs
push
jmp
push
lcall
mov
mov
and
clc
insl
push
sbb
mov
inc
and
sub
out
jle
lret
and
loop
mov
scas
add
pushf
faddl
dec
jnp
hlt
out
into
clc
nop
imul
into
mov
inc
dec
dec
jmp
in
dec
mov
mov
shlb
call
xor
mov
sbb
or
cmpl
cmpsl
in
icebp
cmpl
jl
add
out
mov
push
pushf
lds
ja
jbe
add
in
insl
pop
or
fcomp
ret
insb
xchg
cltd
xor
loopne
jb
iret
fcmovne
call
dec
sub
mov
xchg
les
xorl
inc
addr16
push
movsb
jl
inc
outsl
pop
sahf
in
jnp
add
jge
outsl
inc
push
cmp
ds
insb
xchg
inc
insb
out
test
xor
out
outsl
jae
xchg
ljmpw
sbb
inc
mov
int
pop
cwtl
push
inc
movsb
mov
cmp
and
lock
popa
leave
inc
cwtl
dec
xlat
test
dec
or
xor
out
xor
int
dec
mov
mov
stc
ret
dec
cs
mov
les
pop
jle
pop
jge
testl
jp
inc
out
mov
add
out
popf
aas
rcrl
jl
jne
xchg
xlat
adc
adc
fdivp
mov
cmc
pop
pop
jecxz
cmp
dec
cmp
daa
inc
movntq
mov
mov
test
pop
pushf
cmp
fsubrp
jmp
mov
leave
aad
fnstenv
jb
sub
repz
lcall
frstor
inc
inc
mulb
push
hlt
mov
das
ss
push
pop
sbb
pushl
out
lds
mov
test
pop
cmp
outsb
fs
mov
xchg
xor
aas
dec
mov
lea
sub
aad
jecxz
into
lret
je
mov
xchg
lock
je
jae
jae
and
shlb
mov
xor
inc
pop
fidivrl
les
add
add
xchg
cmp
jg
jne
adc
gs
into
jmp
aam
in
int
repnz
das
push
jp
fcomi
out
jmp
cmp
jecxz
cmc
inc
inc
mov
idivl
push
mov
dec
arpl
stos
pop
inc
dec
adc
jae
jge
les
sub
repnz
mov
aas
xchg
and
out
aas
and
sti
mov
and
insb
icebp
mov
psubusb
cmp
mov
and
jp
je
ljmp
push
mov
fwait
pop
shl
push
inc
sub
in
sub
jle
cmp
jl
and
jb
mov
lods
ret
or
adc
stos
aaa
ljmp
push
aad
cmp
int
mov
out
push
sbb
cmc
repnz
icebp
cld
mov
rol
jmp
adc
insl
adc
mov
orb
xchg
mov
add
cld
scas
push
xor
xor
mov
ljmp
sbb
jb
xor
sbb
lahf
pop
das
sbb
ds
sub
lds
andb
cmp
in
mov
arpl
out
cmc
loope
decb
aam
leave
outsb
push
jl
repnz
push
xor
psrad
fiadds
sti
dec
out
outsb
lret
std
cmp
cmp
xchg
mov
and
orl
xchg
das
fnstsw
dec
mov
outsb
sbb
aam
iret
popa
sbb
lock
hlt
mov
aaa
leave
repz
pop
ret
scas
andb
daa
mov
hlt
cld
and
and
popa
scas
dec
fisubrs
push
stc
cmp
scas
add
in
cli
test
push
add
call
mov
outsl
es
pushf
push
scas
int
pushw
call
inc
push
leavew
pop
sub
xor
in
jne
xor
mov
pop
int3
sub
sbb
fcoms
repnz
adc
shlb
push
cmp
mov
sub
xchg
pop
xchg
imul
add
sbb
int
push
shl
and
lock
push
sub
cmp
sbb
jb
and
cli
sti
repnz
std
lret
or
es
dec
test
jno
sbb
or
stos
lock
sbb
call
mov
push
push
stos
pusha
dec
mov
push
ret
fsubs
pop
cmp
rorl
push
cltd
cmp
mov
stos
mov
sbb
pop
sbbb
jne
or
ficoms
jmp
and
sub
outsb
pop
in
pop
inc
jg
loop
push
jle
pusha
mov
mov
data16
xor
push
scas
jp
fwait
cmpsb
pusha
xor
pushf
mov
add
jl
adc
sbb
adc
fisttps
cmpb
sahf
in
rcrl
fs
lcall
xor
jp
jmp
into
add
lods
xchg
push
outsl
test
and
xchg
jl
lods
xchg
call
cli
xchg
in
out
or
dec
jge
int
and
cmp
int3
sbb
pop
les
jle
mov
out
int
lods
mov
xchg
hlt
cmp
add
sub
pop
loope
lock
adc
dec
push
cli
mov
push
push
cmp
and
icebp
pop
adc
sar
bound
jmp
fcomip
in
push
fwait
ret
sub
loopne
sbb
sbb
ljmp
or
aad
sbb
test
es
cs
dec
add
mov
daa
sahf
iret
mov
mov
jb
lods
aam
pop
call
faddp
xchg
push
mov
sbb
sahf
push
loop
fisubs
mov
cmp
nop
in
insl
mov
push
xchg
mov
or
sahf
fst
in
xchg
flds
dec
sub
pop
dec
imul
mull
pop
subb
lcall
call
sbb
xchg
stos
test
pushf
es
push
jns
fwait
mov
mov
pushf
mov
pop
icebp
xchg
jl
mov
outsl
cwtl
stc
cmp
sarl
mov
or
lds
adc
repnz
dec
mov
loope
sti
xchg
scas
je
scas
bnd
pop
loop
mov
imul
das
sbb
stc
adc
out
dec
mov
repz
lock
or
mov
pop
jmp
repz
mov
or
pop
ret
push
ja
xchg
inc
cli
aad
jne
addl
loop
xchg
jle
dec
xchg
pusha
in
scas
aam
out
cmp
lcall
popf
xchg
outsl
scas
fstpt
lods
pop
movsb
push
fldcw
test
push
fldl
cmpsl
push
lods
adc
repnz
mov
int3
jo
mov
jmp
sbb
cld
or
sbb
fwait
scas
pop
mov
stos
aaa
mov
addr16
adcl
and
mov
push
xchg
cmp
dec
shlb
stos
test
testl
sub
enter
lret
xchg
inc
sbb
mov
notl
mov
adc
mov
pop
ret
fwait
rcll
push
dec
sbb
fidivs
mov
nop
outsl
adc
add
jge
adc
sarb
cmp
lcall
fcomip
adc
xchg
adc
aad
push
add
loope
loope
sbb
adc
adc
adc
dec
xchg
and
insb
xor
out
dec
lcall
aas
fcomps
stos
sbb
scas
hlt
pop
ret
pop
sarl
movsl
dec
or
orl
jl
inc
mov
xchg
sub
xchg
xor
test
jnp
jnp
dec
inc
add
adc
in
sub
adc
add
imul
shll
test
and
test
sbb
sbb
xchg
mov
lret
bound
xchg
out
stc
dec
sub
stos
cmp
outsb
imul
adc
lods
xor
cld
test
mov
push
sahf
cmpsl
decl
inc
add
in
bound
sar
jnp
ja
iret
cli
out
and
std
loopne
dec
mov
xchg
stos
mov
ret
fidivrs
std
sarl
sahf
pushfw
xchg
push
mov
inc
add
lods
or
int3
sbb
mov
sbb
loopnew
or
cmp
lds
mov
mov
pop
ljmp
shlb
mov
add
daa
and
dec
adc
dec
movsb
xor
xor
out
jl
insl
jne
pushf
decb
pusha
inc
add
rorb
push
cwtl
add
cli
jno
outsb
and
cmp
mov
insb
push
mov
ss
push
mov
insl
adc
int
mov
aaa
jle
aam
int3
dec
icebp
mov
inc
fwait
or
andb
nop
mov
mov
arpl
dec
iret
push
ret
ja
adc
test
sahf
enter
lret
cmpsl
fldl
cmp
movsl
loop
out
std
push
test
into
lds
pop
in
lods
stos
jecxz
lods
push
push
jg
lret
ja
mov
or
fwait
cmpsl
xor
push
loop
stos
lods
shr
push
int
out
add
imul
mov
lock
cmp
xchg
subl
cli
lea
mov
mov
cmp
and
es
push
aam
ret
cmp
mov
xchg
jb
sahf
outsb
sti
into
mov
inc
adc
shll
imul
out
mov
andl
pushf
rclb
out
push
test
xchg
leave
cmpsb
mov
xchg
cmpsb
out
sti
xchg
cmc
sbb
xchg
xchg
add
popf
movsl
int3
inc
out
adc
cltd
xor
dec
and
push
jo
xchg
mov
inc
sbb
jg
fdivrl
stos
adc
fistps
or
ret
xchg
incb
js
xchg
testl
mov
movsl
push
inc
test
movsl
xchg
mov
or
mov
mov
cmc
or
in
or
scas
int3
scas
das
push
fidivl
and
sbb
adc
xchg
pop
popf
in
jno
inc
xlat
mov
rorb
dec
addr16
xchg
testb
mov
std
shr
mov
adc
push
xchg
or
cltd
mov
inc
inc
or
mov
dec
fistl
sub
pop
adc
lock
scas
cmpsl
out
fs
adc
and
or
and
sbb
mov
add
lret
sbb
xor
or
or
psrlq
dec
mov
adc
js
das
fcmovnu
pop
xchg
sbb
mov
inc
and
scas
aad
pushf
lock
pop
idivb
mov
mov
out
lods
mov
mov
mov
scas
sbbb
mov
jae
mov
std
pop
movsb
js
pop
sub
in
bound
popf
call
aas
scas
out
xchg
ja
cmp
mov
div
sti
or
mov
divb
inc
mov
adc
bound
adc
add
aas
push
jne
fbstp
fldcw
jl
or
cmpb
inc
adc
xchg
or
loopne
cmp
jp
add
dec
jo
dec
push
seto
mov
or
stos
in
lret
inc
jne
pop
cmp
dec
cmp
lods
out
dec
mov
lods
jbe
into
and
mov
cmp
and
in
adc
shll
cmp
popf
sbb
mov
dec
cld
cwtl
push
add
jle
cmpsl
mov
in
mov
repz
push
or
push
sti
jg
call
mov
adc
repnz
xchg
fcomps
test
xchg
fmul
inc
jne
pop
pop
mov
aas
cmp
cmovge
mov
sbb
add
in
cmp
xchg
cwtl
enter
mov
push
shl
in
loopne
sub
mov
and
mov
inc
jo
test
and
out
mov
xchg
pop
xor
int
or
add
jno
in
or
mov
push
push
xchg
stos
ja
lea
push
popa
push
mov
pop
adc
sbb
ret
pusha
push
inc
mov
iret
sahf
pop
subb
ret
xor
cli
rcr
sub
das
add
loopne
sbb
mov
sub
and
inc
xchg
adc
mov
cmp
mov
cmc
cli
adc
cmc
leave
push
ljmp
mov
adc
cwtl
mov
movaps
aam
faddl
dec
sub
xor
out
mov
push
pop
xchg
mov
pop
cmpsb
push
cmpsb
dec
ljmp
mov
xchg
je
test
xchg
jnp
mov
movsl
cmp
sbb
icebp
sub
dec
add
fistl
insl
push
iret
push
into
int3
add
ret
jno
pushf
inc
sub
mov
shlb
inc
fisubrl
fcomip
push
push
dec
inc
in
mov
push
jecxz
insl
daa
jmp
push
ss
dec
faddp
xchg
lock
jo
stos
adc
pusha
adc
dec
push
int3
cli
sub
mov
lahf
scas
jmp
das
add
adc
cmp
inc
aad
jmp
addr16
mov
or
ja
cmpsl
insl
out
stos
cmp
cmp
inc
mov
mov
movb
fdivrs
js
int
and
stos
mov
sub
cltd
xchg
xor
push
incl
out
xor
dec
insl
xchg
adc
ja
mov
mov
idivb
cmc
es
mov
fmull
mov
and
loopne
add
or
push
jp
pushf
je
mov
add
xchg
or
jmp
arpl
lret
and
mov
incl
push
pop
rorl
jo
and
out
loope
loop
mov
xchg
lods
pop
inc
mov
jle
inc
pop
xor
test
push
fistpll
pop
sbb
mov
jno
xor
dec
pop
int
roll
aas
cltd
and
add
cmp
dec
out
icebp
jns
fs
sub
sarl
lods
inc
or
pop
adc
mov
xchg
cmp
xor
adc
xchg
sub
xchg
addr16
mov
pop
inc
xchg
in
fdivl
pop
movsb
repnz
lock
mov
orb
cmpsb
jl
xchg
lahf
cmpsl
jmp
jl
adc
dec
fldl
lock
sbb
lock
inc
lret
add
lock
jg
loop
xor
icebp
add
adc
mov
jne
inc
cmp
add
addl
fisubrs
add
sbb
mov
adc
aaa
xchg
push
in
test
inc
sbb
enter
test
popa
mov
cmpsb
jae
add
fnstsw
je
inc
mov
push
add
mov
jle
lods
xor
out
inc
cmp
leave
mov
mov
sub
mov
lahf
mov
aad
ss
stos
xor
out
mov
adc
lods
nop
pop
mov
jbe
lret
add
mov
test
add
mov
out
xor
aaa
sti
and
aaa
pushf
adc
sub
adc
idivb
daa
inc
pusha
shlb
idivl
add
sub
test
inc
sarb
mov
pop
mov
fstps
movsb
test
fmul
or
and
shll
iret
jp
sub
dec
mov
jg
mov
mov
mov
jo
push
pop
push
rorl
scas
jecxz
adc
mov
ds
addb
jp
icebp
inc
lods
scas
xor
mov
dec
pop
popa
push
aad
aaa
mov
enter
mov
aam
insl
lahf
popa
out
push
pop
xchg
jge
adc
insb
imul
aaa
lods
sub
dec
mov
aaa
arpl
cwtl
sub
push
ret
outsl
repz
dec
jp
lahf
testl
add
pop
rcrl
movsl
push
daa
add
aaa
cmc
jmp
mov
mov
ja
jle
or
xchg
loop
negl
pop
lcall
sbb
out
cwtl
fwait
rorb
ror
or
lods
mov
adc
insb
xchg
sbb
xchg
lock
in
or
cwtl
dec
sub
cmp
loope
ja
mov
pop
mov
ja,pn
xchg
inc
bound
mov
pop
div
pushf
add
dec
sbb
idivb
mov
hlt
ficompl
mov
test
int3
gs
sbb
push
xor
test
out
lret
test
cmp
mov
or
outsb
mov
sub
fucomp
gs
adc
cmp
sbb
dec
mov
jge
orl
iret
fdivr
xorw
mov
inc
mov
xor
lcall
push
pop
inc
dec
mov
cld
mov
stos
in
arpl
fidivl
cmp
push
jecxz
scas
mov
addr16
aaa
dec
sbb
imul
push
pop
sbb
pop
jns
lea
test
popa
cmpsb
cmp
mov
loope
mov
std
fcmovb
sbb
pushf
sbb
push
pushf
push
fwait
loopne
add
nop
insl
mov
or
push
inc
dec
scas
adc
jbe
mov
mov
mov
pop
push
icebp
add
pop
xor
int3
xchg
fs
in
das
lret
mov
push
in
jbe
sub
out
inc
mov
cmp
inc
add
ficoms
xchg
divb
pop
or
inc
js
outsl
adc
popf
sahf
shll
scas
sub
inc
pop
enter
test
cmpsb
jge
mov
setle
test
cmp
test
mov
jmp
imul
insb
inc
cmp
push
sbb
insb
lods
iret
cmpsl
sbb
sti
addb
xchg
dec
cmp
adc
test
mov
jge
test
jmp
push
sti
pop
xchg
sbb
adc
jb
sub
lea
add
hlt
rolb
xor
inc
shlb
lcall
cmpsb
mov
insb
push
in
scas
inc
adc
and
stc
sub
sti
sub
or
es
out
imul
fisttpl
push
jb
mov
sub
and
sub
sti
sbb
xchg
das
inc
push
mov
sbb
out
in
sbbb
push
or
xchg
leave
sbb
arpl
lea
lods
and
mov
andb
inc
rcrl
aad
pop
cmp
test
inc
mov
add
or
arpl
cs
pop
in
mov
dec
inc
pop
jl
negl
cwtl
into
adc
enter
add
cld
add
mov
xchg
les
mov
push
or
xor
pop
stos
and
loopne
add
pop
addl
mov
mov
shl
push
inc
xor
xchg
inc
xor
call
mov
loop
xorb
or
xor
pop
je
add
das
jnp
shr
or
inc
std
popa
push
rcrb
mov
out
mov
in
add
jge
pop
mov
test
ret
fs
cltd
icebp
mov
out
dec
movsb
inc
ljmp
push
adcb
push
in
les
lods
push
ds
adc
js
dec
ss
adc
mov
mov
dec
jae
adc
jbe
xor
test
xchg
int
add
mov
add
jns
into
cmp
int
inc
mov
sub
in
sahf
enter
sahf
inc
xor
rol
lods
sbb
int3
mov
out
fmuls
add
js
pusha
fwait
mov
mov
sbb
es
daa
dec
jecxz
cwtl
popa
cs
sbb
jmp
cmc
jg
mov
ljmp
cwtl
icebp
shl
into
lods
mov
inc
jg
fucom
push
mov
mov
cmpsb
xor
xchg
sbb
xor
push
add
gs
push
shlb
cmpsb
jl
xor
mov
mov
and
pusha
or
and
pusha
adc
cmp
lea
cmp
mov
jne
scas
cmp
xor
adc
mov
frstor
cmp
adc
dec
push
shl
scas
inc
and
add
das
cmpsb
dec
rcrb
bound
aad
adc
mov
ror
adc
jo
inc
insl
mov
dec
loopne
shlb
and
iret
mov
sub
inc
mov
in
movsb
mov
loope
mov
adc
dec
lods
lret
xor
push
inc
test
mov
jge
mov
mov
fldenv
or
sub
cmp
lret
jne
popa
les
sbb
cwtl
leave
add
sbb
add
stos
cmp
jne
popf
out
hlt
cmp
gs
push
or
pop
out
ret
push
into
shrl
add
xchg
repnz
mov
sub
and
cmpsb
xchg
aad
int3
dec
and
fs
mov
fwait
push
fs
or
mov
xchg
push
pop
jns
adc
inc
fsub
mov
adc
sub
jmp
dec
daa
pop
push
adc
adc
cmp
push
lods
dec
lock
out
adc
and
in
mov
xchg
inc
popa
sbb
int
mov
sbb
mov
jno
add
sti
push
dec
inc
xchg
ret
and
push
gs
insb
imul
pushf
xchg
dec
cmp
dec
jl
jle
imul
jnp
scas
sarb
pop
mov
xor
mov
cli
les
lcall
pop
inc
mov
fidivl
js
mov
movsb
jo
mov
ret
repnz
scas
iret
xchg
repnz
test
rorb
fmull
fcmovnbe
ss
movsl
xchg
add
js
add
or
inc
pop
out
inc
push
jae
xor
mov
mov
mov
fmull
fisubrl
cmovle
fimull
test
sub
stos
xchg
xlat
sbbb
push
aam
or
xchg
or
ja
push
xchg
fsubrs
mov
ljmp
adc
mov
fidivrs
inc
jb
cld
mov
dec
lahf
cmpsb
fnstcw
or
cmp
mov
adc
cmpsb
sbb
in
out
outsb
jge
stc
shlb
andl
mov
cmp
sub
js
mov
pop
xchg
pushl
ja
inc
and
adc
inc
lahf
mov
push
sub
out
or
std
enter
call
inc
sbb
popa
sub
lret
leave
arpl
mov
xor
adc
cli
movsb
mov
jp
fcmovnb
lds
loop
insl
movsl
imul
clc
sahf
stc
imul
mov
subb
jne
popf
rcrl
adc
leave
cmp
shll
jno
mov
push
lds
pop
add
lahf
cli
adc
xchg
inc
push
mov
loope
test
push
stos
das
pushf
jne
dec
lcall
sti
pop
subl
fldt
xor
out
mov
sbb
xor
mov
xchg
outsl
cmp
pop
lret
fiaddl
icebp
mov
gs
push
pop
testl
or
fistpl
rorl
fwait
add
add
cmpsb
fwait
jecxz
or
mov
enter
sub
jae
push
push
dec
fstpt
xchg
xchg
lcall
ds
mov
sub
divl
cli
fidivrs
cltd
xchg
movsbl
daa
orl
and
stc
lcall
inc
shlw
mov
testl
lods
cli
cwtl
test
test
lcall
push
out
insb
addb
dec
mov
popf
mov
test
popf
xchg
xchg
sbbb
ljmp
mov
push
scas
xchg
push
xor
enter
pop
push
adc
leave
add
push
mov
and
push
add
je
ds
push
jecxz
pop
nop
cmc
cmp
fmull
sub
std
xchg
xor
out
xchg
sbb
and
cld
pop
or
insl
cmp
cmpsl
and
inc
or
xor
int
mov
inc
mov
test
xlat
movsb
lock
rolb
mov
push
mov
ja
cltd
sub
and
mov
sbb
inc
xor
xorl
push
push
pop
repz
xor
mov
push
roll
xchg
test
push
stos
xchg
pop
fstps
xor
daa
xchg
inc
mov
sarl
aam
push
or
cmp
mov
jle
add
sarb
add
stc
push
cmp
and
test
popf
std
push
sti
dec
push
test
mov
imul
pop
testb
mov
cld
dec
out
pop
fmuls
jp
inc
ja
ret
cmpsl
xor
cmpsb
jo
cs
adc
out
xchg
push
lcall
subl
aas
inc
xor
mov
sahf
hlt
xchg
out
xor
je
test
cwtl
daa
or
jae
das
pop
nop
adc
pushf
cwtl
negb
mov
repz
decb
test
mov
leave
dec
or
mov
dec
push
stos
imul
and
fdivrl
mov
mov
push
cmp
and
mov
sub
cmp
mov
hlt
lock
sub
adc
inc
js
xchg
xor
mov
stc
scas
repz
mov
std
push
roll
nop
sti
iret
inc
sub
subl
mov
scas
popf
jg
ja
xor
jge
xchg
loopne
jns
push
adc
jge
sarl
enter
push
loopne
push
cmpsl
in
jp
hlt
sbb
or
pop
out
push
in
aad
fs
mov
cmp
nop
mov
push
fld
insb
and
sbb
sub
stos
aam
xlat
fstl
and
lcall
cltd
push
inc
push
mov
xchg
xchg
and
inc
aad
mov
movl
repz
inc
or
pop
sbb
jge
cmpsl
jl
mov
or
imul
add
test
inc
fnsave
test
xchg
aam
dec
insb
or
dec
and
test
inc
mov
mov
xchg
mov
jge
dec
sub
mov
xchg
aad
ret
stos
push
mov
mov
lds
movsl
inc
ficoml
inc
das
enter
push
scas
data16
cmp
inc
out
loope
das
add
test
cmc
pop
lds
and
pop
pop
or
divb
loop
push
inc
andl
icebp
test
mov
jns
or
pop
pop
ret
enter
jmp
mov
sub
lods
pop
dec
xchg
aas
mov
push
aad
mov
dec
cmp
and
ret
loope
mov
xor
pop
xor
out
mov
jbe
call
test
icebp
or
das
js
addb
out
test
mov
aaa
xchg
and
imul
cmpsb
push
cmp
in
push
sbb
pop
testl
push
mov
arpl
imul
lret
fildll
lods
fld
inc
sarl
pop
shlb
enter
shl
pop
pop
scas
pop
in
out
aam
aas
cmc
mov
movl
xor
push
cmp
clc
sub
mov
cmpb
in
stos
idivl
cmc
xor
add
inc
cmp
inc
dec
cld
mov
movsb
mov
es
stos
dec
loop
fisttps
stos
add
aaa
pop
push
sub
mov
mov
jnp
adc
aas
xchg
jb
inc
roll
fsts
insb
aad
popa
jmp
fistl
xor
out
jae
enter
pop
mov
add
xchg
dec
mov
mov
sub
call
cltd
aas
xchg
mov
push
sahf
insl
cwtl
sub
inc
sahf
aam
loopne
notb
jne
push
inc
push
and
mov
push
and
test
jbe
inc
stos
stos
out
or
mov
pop
ljmp
cmp
adc
and
pop
push
jbe
into
jg
js
mov
test
or
pop
cmp
aam
jmp
std
adc
dec
lret
es
leave
and
xchg
aas
cmp
loop
mov
test
scas
out
push
lcall
sbb
je
cltd
test
cmp
mov
pop
clc
addr16
and
and
nop
adc
cmp
jecxz
xchg
in
add
sub
sahf
nop
test
push
sbb
mov
push
insl
loope
add
dec
sub
mov
cmp
cmc
push
dec
aas
add
dec
jne
mov
push
movsb
and
addl
fsts
pop
xchg
ja
sbb
jg
pop
ficoml
movsb
enter
imul
dec
pop
add
jb
ss
lahf
call
mov
rclb
es
es
pop
add
mov
cmp
mov
xchg
pop
mov
aaa
jno
cmp
pop
in
jl
je
int3
insb
jo
out
push
mov
fwait
lds
xchg
pop
jo
sbb
xchg
out
jg
into
sbb
xlat
mov
popa
push
mul
cli
push
or
mov
xchg
test
enter
cmp
imul
cli
mov
mov
lds
xlat
dec
ljmp
movsl
and
or
jp
cltd
and
xchg
scas
push
aam
scas
rol
jae
punpckhbw
test
ja
mov
in
push
inc
das
in
lahf
jle
sub
filds
push
dec
or
add
lcall
jmp
gs
dec
mov
jg
mov
out
aaa
mov
xchg
cmpsl
and
lret
push
push
jl
xor
cs
mov
pushf
sbb
jno
mov
pop
jne
push
int3
daa
jl
inc
orl
repnz
test
push
inc
fiaddl
xchg
and
pop
xchg
rolb
ds
or
stos
test
cmp
xchg
fstpt
imul
int
sbb
test
stos
push
and
lret
movsb
loop
add
inc
and
add
stos
dec
enter
pusha
iret
jl
clc
mov
addr16
out
push
in
push
shll
mov
sbb
cs
cmpl
jl
call
cld
push
cmpsl
cmpsl
push
cmp
sub
push
sbbl
pop
lods
pop
cli
in
push
mov
cmp
addb
imul
shll
pop
pop
aas
jne
hlt
add
jb
ljmp
and
adc
nop
push
dec
iret
stc
xor
xchg
inc
stos
pop
adc
push
inc
sbb
ret
dec
mov
test
sbb
dec
sub
lret
mov
lods
inc
imul
cmp
fisubl
mov
lcall
mov
sbb
stos
sub
pop
je
pusha
addb
push
xchg
dec
jns
pop
lret
bound
mov
pop
add
adc
leave
mov
cmp
fwait
jge
pop
push
xchg
rcl
scas
push
aad
idivl
rol
pusha
les
inc
xchg
clc
sbb
addb
into
mov
mov
xor
and
xchg
adc
xchg
lock
add
mov
xchg
mov
mull
cmp
push
or
mov
sarb
mov
lea
pop
iret
in
cli
cmc
add
mov
mov
cmpsl
mov
adc
xor
xchg
mov
cmpb
adc
inc
dec
ja
or
adc
xor
mov
cmc
lahf
test
sbb
cwtl
mov
mov
filds
mov
fidivrl
scas
cmc
loope
jmp
pushf
inc
mov
rcr
cmpsb
cwtl
push
outsl
pop
jo
pusha
lahf
cli
outsb
pop
jae
lods
arpl
movsb
xchg
ret
mov
dec
add
cmp
orb
ja
jp
sbb
imul
jne
repz
test
push
dec
lahf
pop
pushf
fistpll
sbb
fcmovb
sub
loope
inc
stos
sahf
cld
fcompl
stos
gs
mov
xor
stc
ja
and
xor
loope
lea
sbb
mov
test
or
outsb
mov
sarb
add
jnp
out
pusha
pop
mov
cwtl
dec
bound
add
dec
cmc
jns
inc
xchg
sub
and
lods
xlat
xchg
in
or
jno
and
fistps
adc
xchg
xchg
cld
inc
inc
ja
jmp
insl
inc
jp
aas
gs
jecxz
pop
lcall
lcall
loopne
xchg
mov
out
imul
iret
or
shl
mov
bound
movsb
das
jae
dec
leave
mov
push
jne
sbb
sub
stc
lret
xor
push
and
inc
aaa
imul
cmpsl
lret
jg
jbe
mov
dec
repnz
mov
adc
jno
and
adc
sbb
in
insl
dec
imul
adc
hlt
mov
sub
lock
inc
addr16
sbb
in
jne
and
fs
lock
loope
idivb
pop
call
cmp
or
sti
pop
xor
cmpsl
frndint
in
mov
repz
gs
arpl
or
lret
mov
int
es
inc
pop
shll
addr16
and
pop
inc
mov
inc
ljmp
mov
mov
pop
dec
xchg
push
and
fs
fdivl
sub
movsb
ds
andl
shrb
rorl
cmp
fdivrl
cld
ljmp
push
test
add
int3
test
xor
pop
lret
jns
push
cmp
in
xchg
add
jle
xor
and
add
popf
ds
jnp
or
loop
fcom
mov
pushf
cmc
cmpsl
cmp
fwait
and
pusha
mov
xchg
js
test
cmp
xchg
sub
hlt
pop
pop
scas
adc
fidivs
add
inc
cmpsl
sbb
and
repz
jne
pop
fimull
dec
inc
sar
mov
mov
gs
mul
or
mov
mov
lods
jge
sbb
fcoms
jle
outsb
sbb
aam
fsubl
push
cmpl
orb
loop
imul
dec
pop
xlat
loopne
and
sbb
xor
pop
popf
jp
pop
ljmp
in
addr16
negb
xchg
sub
frstor
mov
or
fs
test
jne
int3
mov
cmpb
dec
sbb
pop
mov
les
jg
mov
fcomi
icebp
mov
sub
cmpl
shlb
fstl
shrl
dec
push
pushf
cmp
movsl
or
mov
cmc
outsl
mov
lret
jle
add
adc
push
push
sbb
dec
pushf
push
or
push
pop
or
out
and
and
push
jge
xchg
loopne
stc
sbb
loop
xchg
mov
inc
sub
dec
mov
push
call
jnp
sahf
and
stos
add
dec
or
mov
jbe
and
rcrb
aad
test
sbb
xor
addr16
testl
fwait
jmp
das
cmpsb
repz
mov
repz
lcall
pop
call
icebp
adc
and
or
sbb
ffree
testl
add
dec
ja
lahf
push
int
faddl
or
js
int3
xor
add
int3
jbe
and
push
and
lea
daa
mov
sub
in
lods
sar
movsl
test
fisttpl
cmp
xchg
les
ret
je
fdivrl
jle
jae
pop
sbb
mov
fwait
sti
loop
jg
imul
jmp
fwait
push
lods
add
pop
hlt
sub
test
ret
aas
cmc
ljmp
mov
fidivs
stos
cli
int
es
in
mov
xchg
enter
pop
into
xor
loope
fistps
mov
push
dec
aaa
std
mov
ds
inc
aaa
lea
cwtl
mov
pop
adc
aad
or
cmp
push
ret
adc
addr16
enter
in
rol
mov
call
cs
adc
std
addr16
in
mov
add
shlb
rolb
ret
push
icebp
pop
and
fistpll
xor
mov
push
mov
lea
push
lock
test
mov
fistps
mov
insb
int3
jb
inc
flds
js
icebp
call
inc
das
in
inc
cs
mov
mov
shr
out
push
xor
loopne
cmpsb
or
call
lock
sub
bound
cmc
push
mov
pop
cmpsb
jmp
or
fwait
rcll
aam
xor
call
sbbb
repz
mov
dec
push
fiaddl
sbb
sub
cs
push
lcall
adc
jns
sub
jno
test
cmp
outsl
ret
push
movl
cli
ja
mov
or
push
mov
outsl
mov
es
rcrb
adc
in
hlt
popa
mov
daa
push
shrb
push
scas
test
mov
xor
outsl
imul
mov
push
cmp
out
or
jne
lahf
or
flds
cld
les
xlat
adc
jle
jle
push
cmp
in
and
mov
pop
dec
cmp
aad
add
and
inc
mulb
ja
lcall
sub
push
stos
xor
in
and
xchg
rolb
sti
fsubrl
sub
pop
jl
sbbb
xor
sbbl
into
cmp
test
xor
aas
jecxz
cmp
mov
adc
cmovle
mov
dec
mov
sub
adc
pop
das
das
shll
imul
pop
out
or
and
arpl
iret
sub
mov
arpl
pusha
xchg
dec
bnd
push
add
popf
jge
incl
push
popf
lea
dec
xchg
sbb
divl
cmpsl
dec
imul
pop
jns
push
xor
inc
xchg
insl
mov
adc
add
inc
xchg
pop
xchg
cwtl
in
fs
mov
lret
xchg
loopne
ja
popa
mov
fs
out
jb
insb
dec
in
mov
mov
int3
mov
push
xchg
sbb
cmp
addr16
mov
pop
mov
lret
scas
cld
ret
sbbb
pushf
mov
cs
loop
test
pop
cltd
testl
mov
push
mov
fs
push
out
mov
push
pushf
xor
sbb
and
lret
or
cmc
inc
xchg
ds
jnp
aam
jns
sbb
dec
icebp
fwait
push
imul
icebp
mov
push
pop
fistps
inc
xchg
loopne
int
jbe
sub
sbb
push
insb
shl
add
mov
jno
fwait
push
vpaddusb
push
and
jl
sbb
sahf
xor
pop
mov
cmc
jmp
cmp
insl
cmpsb
push
ficoml
test
jge
lods
rcl
filds
cmp
xchg
into
lcall
dec
dec
pop
push
lea
mov
lahf
cmp
mov
lahf
sub
dec
lahf
sbb
mov
pop
cltd
sti
ret
loopne
popf
xchg
int
pop
ret
sub
popf
xchg
shll
and
shlb
xchg
out
stc
loope
pushw
mov
push
insb
dec
ffreep
movsl
adc
pop
jb
test
cmp
lods
xor
call
xchg
pop
cmpsb
dec
ja
mov
xor
mov
xchg
xchg
and
xor
mov
add
mov
pop
push
js
mov
dec
filds
les
into
in
cmpsl
lahf
adc
xlat
aas
xchg
jl
push
hlt
daa
push
sbb
mov
push
mov
arpl
dec
add
xor
lea
dec
clc
push
sub
lock
dec
cmpsb
mov
aam
imul
sbb
adc
mov
int
jl
mov
mov
jle
movsb
inc
xor
je
sub
and
subb
cmp
xor
sub
inc
popf
adc
fists
cltd
jle
call
pop
or
into
test
add
jo
mov
mov
inc
lock
insb
cmp
mov
fldcw
int
push
jbe
pop
adc
sbb
dec
inc
pop
lods
call
jnp
addb
loopne
icebp
divb
out
fldl
xchg
and
add
jne
mov
dec
ret
das
mov
mov
sbb
sbb
test
lcall
jmp
ss
add
in
xchg
dec
add
pop
lds
mov
ljmp
test
std
int
out
lret
pop
movsb
js
aaa
leave
and
cltd
cmp
xchg
lods
and
mov
jns
lret
je
pop
addl
mov
mov
lods
imul
jno
rorb
repnz
adc
in
sar
inc
ror
pop
rolb
in
mov
push
pop
lods
pop
push
cltd
mov
arpl
adc
aam
inc
imul
int3
aaa
adc
fmulp
jb
push
xchg
inc
shl
movsl
mov
xchg
mov
push
add
xorl
lea
scas
push
sbb
cmc
cmc
or
jae
aaa
mov
sbb
xchg
shl
inc
std
sub
pop
repnz
in
cmp
inc
jp,pn
add
into
mov
push
jne
mov
push
add
adc
and
les
sbb
test
push
push
lock
adc
test
jle
jp
imul
push
sti
or
data16
aam
jge
sysenter
jge
test
add
ret
sbb
fadds
push
jns
inc
jbe
jne
ds
mov
dec
ret
ss
sbb
cmp
or
ret
dec
jbe
add
pop
rcll
aaa
xlat
test
popf
inc
gs
add
pusha
push
push
int3
mov
cmpsb
lret
adc
pushl
inc
stos
xchg
sub
dec
lods
mov
push
aad
cmp
imul
clc
daa
pop
arpl
or
jb
adc
mov
mov
fidivs
lahf
jmp
aad
pop
addr16
adc
repz
push
ss
xorl
lock
inc
cld
add
pop
and
xor
xchg
cmpsb
insb
sbbb
cwtl
jmp
bound
sub
stos
int
int3
sub
sti
sub
je
pop
cmp
jl
shl
mov
inc
sbb
sub
arpl
out
out
jae
cltd
adc
popf
or
je
pusha
add
pushf
dec
call
mov
jl
stos
cli
adc
push
mov
idivl
popa
jg
pop
shlb
negb
add
mov
stc
rcll
or
lret
testl
sti
popl
test
pop
mov
in
insb
xchg
cmp
adcl
js
cmpsl
and
sbb
iret
pop
clc
adc
push
xor
dec
fcomp
jge
shll
icebp
jle
and
mov
mov
and
fs
jo
jge
popf
sbb
fistpll
mov
xor
mov
sbb
fwait
cltd
cli
add
int3
and
inc
sbb
jo
mov
bound
pop
mov
mov
iret
inc
lods
scas
jp
sarb
test
xchg
mov
push
les
icebp
stc
dec
adc
gs
incl
loopne
shrb
hlt
lea
xor
out
xor
sub
pop
cmp
sarl
fdivrp
arpl
loope
or
push
dec
jp
nop
stos
test
sub
cmp
ja
je
cmc
pop
sbbb
test
mov
aaa
jb
loopne
aas
inc
std
loop
std
jl
pop
mov
and
jnp
ds
cmpsb
cmp
push
and
pop
ljmp
mov
loop
mov
and
dec
or
adc
fidivs
pop
lods
xchg
dec
mov
clc
pop
in
leave
sub
or
imull
test
pop
jo
or
mov
in
icebp
mov
push
in
sar
adc
nop
lahf
jnp
arpl
pop
xchg
sbb
cmp
shlb
sbb
out
jecxz
inc
and
mov
dec
or
sub
jle
push
imul
push
pop
xchg
mov
call
cmp
inc
and
bound
sbb
xor
add
add
adc
fnsave
sbb
xchg
push
icebp
dec
repz
lea
push
scas
push
xchg
ja
mov
mov
pusha
lock
or
xchg
lea
lea
fwait
loop
fst
jo
incb
jg
lds
push
xor
mov
mov
mov
xlat
fucompp
stc
xchg
or
test
lods
add
jp
xchg
xchg
jecxz
sbb
movsb
cmc
fsubl
xchg
xorb
push
mov
ss
mov
push
sti
xlat
testb
sub
mov
sbb
sub
leave
fbstp
add
and
sahf
mov
cli
pop
or
and
pop
popa
repnz
xorb
xchg
lret
les
and
mov
adc
mov
mov
inc
push
aas
cld
repz
imul
sbb
and
repnz
jmp
mov
outsb
or
cmp
lahf
inc
lret
mov
mov
pop
lods
jno
and
xchg
fisttpl
out
or
dec
rolb
push
adcb
aam
dec
jbe
ret
add
lods
cmp
adc
push
jl
xor
aam
dec
or
popa
mov
sub
sbb
adc
call
push
dec
sbb
mov
sub
fcoms
jnp
cmc
jb
xorb
sub
push
aas
xchg
push
imul
mov
xor
mov
out
out
mov
fdivr
andl
mov
pop
jbe
mov
and
jle
mov
mov
add
and
js
dec
adc
push
das
inc
into
iret
sahf
out
ss
movsb
mov
xchg
lahf
dec
aad
shl
ds
push
cmp
mov
pop
cli
fs
outsl
pop
pop
jb
or
or
xchg
insl
jo
scas
pcmpeqw
or
test
xchg
inc
adc
or
jnp
xchg
adc
es
adc
cmpsl
xchg
insl
test
scas
imul
repz
lock
and
jmp
xorl
xchg
mov
lods
inc
xor
jle
popa
jbe
cmp
inc
xor
and
mov
notb
in
xor
nop
scas
mov
inc
jle
ss
arpl
dec
push
addr16
insb
or
xorb
inc
daa
add
pop
out
dec
fwait
mov
sbb
mov
jne
imul
push
dec
leave
xorb
test
lret
and
fistpl
cmp
and
pop
add
imul
xor
jno
fcmovnb
fprem
rcrl
lret
push
mov
xchg
mov
xor
sub
cli
bound
adc
jae
aas
test
in
shrb
push
xchg
fdivr
out
inc
insl
mov
jl
stc
movsl
sub
popa
sarl
mul
es
mov
inc
out
nop
test
pop
jmp
push
outsb
movb
test
adc
idiv
fcoms
sub
arpl
fnstenv
or
mov
sbb
sub
ret
xor
dec
jnp
mov
xor
xor
imul
inc
push
dec
rcrl
mov
fcmovu
inc
or
add
add
mov
shlb
into
cmp
mov
gs
push
lret
mov
scas
mov
mov
cltd
stos
out
adc
mov
mov
xor
fsubrl
int
pop
leave
xor
in
pop
mov
fisubs
loopne
out
cmpsb
push
mov
loop
mov
pushf
inc
jne
pop
or
cmp
cmpsb
rdpmc
lret
into
sub
sub
rcrb
aam
mov
adc
cmc
push
xchg
ffreep
dec
jno
ficoml
adc
inc
out
pop
sarl
lds
daa
push
push
or
xor
xorl
pop
dec
adc
xchg
push
xorb
shll
popf
out
xchg
jns
jle
mov
addr16
mov
inc
inc
mov
or
dec
cs
nop
sub
fbstp
decb
mov
push
sub
jge
sar
sub
mov
cmp
jl
pop
addb
es
das
cmpsl
push
sbbb
sub
adcl
cmpsb
sbb
jb
pop
cmpl
loopne
ss
fcmovb
push
dec
leave
fnstcw
inc
in
add
sub
mov
icebp
mov
pop
inc
add
cs
push
fstpt
lret
inc
out
or
cmp
lds
lods
cmp
cmpsl
dec
nop
jae
cmc
dec
fisttpll
jo
out
pop
xor
cmp
std
les
jge
fimuls
xchg
out
sbb
mov
daa
sbb
jb
cmp
loope
into
xor
fwait
icebp
rcll
dec
add
outsl
sahf
cmp
push
pop
stos
scas
ret
or
mov
fwait
jo
aad
xchg
jns
or
roll
jle
cmp
pop
ret
mov
leave
push
das
sti
mov
leave
rol
test
scas
lds
inc
cmp
in
shll
add
dec
mov
call
dec
pop
daa
mov
jbe
add
mov
jp
into
inc
jno
cmp
inc
mul
testb
push
jb
add
adc
jae
aas
js
inc
mov
sub
mov
mov
xor
pop
push
and
pusha
mov
je
sbb
loop
inc
mov
stc
and
test
mov
call
sub
imul
inc
test
dec
push
inc
nop
icebp
xchg
ret
loop
cmp
repnz
inc
mov
ficompl
fnsave
out
stos
movsl
ret
sub
nop
xor
leave
jg
sub
ret
fstl
push
cmp
stc
mov
push
push
mov
add
shl
and
daa
push
je
in
adc
pop
push
mov
xor
into
enter
adc
sub
lret
mov
lcall
ss
lcall
mov
push
sbb
xchg
xlat
jg
push
mov
xchg
icebp
push
es
push
add
xor
mov
data16
pusha
ss
clc
ret
fistps
out
mov
fiaddl
decl
xor
cmp
xor
pop
out
push
push
mov
lods
out
lea
dec
dec
rol
mov
jl
and
les
les
adc
sahf
lahf
push
aas
sarl
pop
push
sbb
fstpt
mov
cmp
jmp
mov
xchg
daa
lds
cmp
fiaddl
inc
sti
mov
stos
pop
lret
cli
push
pop
sub
mov
pop
outsl
and
mov
shrb
push
call
outsb
ficomps
mov
leave
cmpsb
addr16
loopne
es
or
sbb
cmc
fbstp
add
fnstcw
pop
xlat
mov
or
dec
pop
or
push
mov
dec
or
test
jns
dec
fs
movsl
jb
clc
int3
sbb
add
inc
sti
dec
rorb
cmp
xchg
lods
test
iret
adc
inc
imul
adc
and
mov
dec
lods
mov
in
xor
scas
jg
lret
dec
std
cmp
push
dec
mov
shrl
xchg
loope
push
mov
push
icebp
test
xchg
xchg
ja
cmp
mulb
inc
aam
popf
cmpsl
loopne
lea
leave
xchg
xchg
dec
xchg
xor
loope
adc
jb
add
call
cwtl
ss
push
jecxz
sbb
xchg
sub
adc
into
mov
inc
mov
repnz
inc
insl
mov
inc
test
mov
pop
mov
jg
add
mov
loopne
shl
mov
shrb
cld
dec
cmp
cmc
into
out
pop
cmpsl
xchg
lods
adc
loopne
iret
cmp
pop
cltd
mov
mov
loopne
xchg
or
add
ljmp
sub
fists
ret
scas
daa
fistps
mov
gs
cld
fisttpl
jecxz
mov
stos
out
nop
in
into
jg
pop
rcrb
sub
pop
in
popa
mov
dec
arpl
jmp
jg
jecxz
inc
or
jns
mov
scas
push
divb
mov
inc
out
test
xchg
pop
mov
mov
stos
push
xchg
or
cwtl
sub
inc
iret
adcl
pop
lds
icebp
in
lea
das
jmp
dec
arpl
movsl
fsubrs
pop
cmp
mov
add
or
or
cmp
cmc
out
pop
xor
jg
jae
mov
adc
imul
adc
adc
nop
mov
pop
or
cmp
fwait
lahf
sbb
test
mov
icebp
pop
and
clc
mov
gs
sbbb
das
div
dec
xchg
pop
jge
sti
mov
mov
pop
jbe
pop
int3
movsl
leave
jb
push
aas
daa
stos
sti
jl,pn
mov
and
dec
out
pop
out
xchg
aad
cmpsl
scas
push
jne
sahf
cmp
rol
mov
aad
pop
fiadds
inc
fstp
sbb
les
push
insb
jecxz
cmp
lcall
aas
repz
pop
mov
or
inc
xchg
lret
inc
ss
imul
xchg
rclb
cmpsl
in
jge
mov
inc
je
es
shll
cmp
inc
call
jp
pop
aas
mov
fists
mov
sahf
add
xor
loopne
mov
pop
jecxz
inc
jge
mov
jb
mov
or
fadds
imul
in
test
pop
lods
ss
jecxz
out
das
imul
or
jg
xor
cld
leave
jnp
lret
xor
inc
jo
xchg
inc
shl
scas
test
data16
jg
add
icebp
stos
mov
push
fidivrl
sbb
aaa
xchg
xchg
jne
xchg
cmpsl
ficoml
imul
leave
jno
sarb
push
mov
mov
repnz
ficompl
push
and
add
scas
dec
lret
lret
push
xchg
je
lret
add
cmovl
push
andb
int3
or
aaa
mov
sti
fwait
mov
adc
aad
push
imul
sub
mov
push
into
and
push
mov
and
lods
fnstenv
cmp
jns
and
push
fadd
sbbl
sbb
outsl
inc
push
mov
mov
jge
jecxz
push
mov
mov
push
pop
daa
mov
mov
or
or
push
rcrb
push
xlat
xor
jno
pushl
add
mov
popf
mov
es
adc
mov
xlat
push
inc
aam
jmp
jle
inc
mov
shrl
and
in
insl
lods
imul
mov
or
fidivs
inc
mov
outsl
outsl
inc
aam
push
fdivrl
pushf
int3
ljmp
stos
push
pusha
cmp
xchg
imul
pop
add
fisubs
xorb
test
mov
jge
call
std
dec
dec
inc
xor
xor
xchg
scas
aam
adc
xlat
sub
mov
mov
hlt
pop
subl
pop
sub
cmp
ja
lcall
push
ss
pop
pop
cmp
sbb
push
popf
fists
xchg
sbb
jl
fisttps
ffreep
lds
in
or
mov
imul
xlat
fdivr
rolb
sub
in
imul
roll
bound
scas
test
push
dec
cmc
cmpsb
sub
mov
xor
add
mov
psubq
push
jge
std
xchg
xor
in
scas
jecxz
mov
jns
dec
fisubl
push
xchg
nop
jno
pushf
mov
pop
fnstsw
adc
inc
enter
sub
sub
jae
pop
sub
repz
ds
xchg
lret
and
push
xchg
fdivl
mov
outsl
add
jp
xchg
mov
xor
ljmp
and
test
push
lcall
or
mov
pop
mov
add
cmpsb
xor
pushf
fistpll
out
jne
mov
pop
xor
mov
jecxz
jbe
jmp
mov
inc
fmull
or
dec
ret
test
mov
jne
rcll
dec
mov
cwtl
stos
xlat
insb
sahf
mov
cs
fmull
loope
dec
inc
call
xchg
cmp
fnsave
mov
mov
push
addl
inc
divl
mov
cli
xlat
push
in
mov
in
mov
mov
pop
adc
pop
cld
out
jo
cwtl
aad
pusha
mov
jbe
pop
mov
test
cwtl
cmp
xor
dec
inc
iret
xor
and
shll
add
subb
lods
push
out
cs
cmp
imul
jl
add
pop
add
subb
aas
lods
cmp
jmp
lods
xchg
xchg
lock
adc
test
js
lds
add
jnp
or
mov
ucomiss
test
ss
xorl
cmp
dec
sub
insb
les
js
or
lahf
or
jns
rep
push
js
jge
push
pop
cmp
fs
xchg
sarl
ficompl
lock
and
mov
sub
mov
pop
mov
mov
mov
pop
int3
mov
movsl
fldenv
push
cmp
add
out
daa
jmp
imul
dec
push
enter
fcmove
test
addr16
push
sahf
in
test
int
inc
inc
icebp
sbb
adc
inc
je
in
in
ficompl
cmp
push
jg
aas
mov
mov
mov
clc
fdivs
sub
ret
dec
mov
inc
out
sub
int3
iret
int
cli
sub
or
adc
fwait
sbb
jae
push
insb
cmc
mov
sub
xor
bswap
ss
jg
xor
mov
ss
fbstp
ljmp
addl
mov
pop
fcompl
jmp
xor
cltd
push
or
jne
outsl
call
cltd
sar
xchg
negl
dec
xchg
xchg
push
mov
ret
jns
xor
push
mov
jmp
stc
xor
mov
mov
pop
pop
scas
mov
fistpll
sbb
js
jno
jnp
stos
dec
mov
fidivl
jle
xchg
sbb
fistpl
cmp
inc
mov
clc
push
adc
out
mov
mov
sbb
xchg
fisttps
or
cltd
mov
add
fldenv
popa
cmpsb
mov
popf
hlt
notl
xor
mov
fistps
xchg
mov
lret
fnsave
and
loop
aas
addr16
sbb
sbb
dec
mov
jg
stc
pop
inc
inc
loopne
mov
and
sub
or
mov
test
adc
idivb
sub
lods
aaa
and
mov
pop
cmp
jle
test
adc
test
sbb
adc
sbb
mov
cli
mov
icebp
mov
mov
mov
add
dec
fstps
xchg
cs
fsts
std
xor
or
push
data16
pop
enter
ret
xor
mov
stc
xchg
out
inc
pop
stc
imul
xchg
scas
mov
pushf
cs
pop
and
push
ljmp
inc
jo
push
mov
je
enter
lds
cld
les
add
je
fidivs
mov
inc
mov
mov
scas
insb
jo
push
push
mov
inc
ficompl
push
dec
std
mov
xchg
insl
icebp
popa
insl
xor
rorb
push
pop
movsl
std
stc
sub
fiaddl
insl
daa
cmpb
icebp
dec
fiaddl
call
aas
add
cs
jl
mov
fbstp
lods
movd
rcrl
adc
inc
and
loopne
test
lret
mov
pop
sub
inc
jp
xchg
lds
add
test
clc
add
adc
adc
rolb
lcall
divl
loop
shrl
dec
in
pop
movsl
lock
inc
fidivs
lock
dec
bound
sbb
jg
shll
pop
mov
xchg
out
push
arpl
xchg
lret
imul
addl
jne
out
sub
pop
rclb
jnp
sti
push
push
repz
pop
adc
es
push
insb
testl
mov
dec
mov
stos
shr
js
in
fidivrl
lock
in
loop
cmp
mov
stos
lds
fnsave
mov
xor
popf
inc
and
sbb
pushf
sahf
sub
icebp
shll
clc
in
test
push
dec
xor
push
push
add
inc
scas
and
scas
sahf
out
aad
push
xor
lahf
ss
ret
popf
inc
fldenv
shll
or
pop
popa
push
xchg
lret
jo
test
test
fwait
sbb
cmpsb
test
out
mov
push
addb
mov
jno
jo
cmp
mov
lret
les
ds
mov
aaa
test
inc
cltd
dec
pop
jmp
push
scas
fidivl
js
cmp
sub
xchg
cmpsl
mov
inc
jp
cmp
shrb
mov
cli
out
lahf
dec
mov
ljmp
loopne
sub
das
mov
jle
aaa
loope
pop
mov
sbb
adc
dec
adc
out
add
jmp
push
jp
int3
mov
adc
in
iret
lea
push
mov
jne
aad
sahf
xchg
xor
leave
dec
mov
xor
push
mov
or
repnz
and
iret
push
xchg
and
iret
mov
pop
and
xchg
daa
stos
outsb
dec
icebp
fwait
test
add
cmp
arpl
lods
cmc
xchg
aas
sbb
outsb
fwait
pop
xchg
into
imul
or
push
add
or
jmp
dec
add
or
fldcw
jmp
rcl
jo
pusha
fsubrl
jae
mov
into
sbb
dec
and
or
dec
je
add
push
cmp
xchg
ret
sbb
sahf
lods
ljmp
xlat
push
in
dec
sub
out
ja
inc
sbbb
fiadds
andl
mov
mov
filds
mov
clc
jmp
cli
sbb
inc
lcall
loopne
test
orl
aaa
aad
ror
scas
scas
cmp
push
pop
jnp
sbb
sbb
in
lcall
enter
sbbl
ret
add
je
sub
inc
xor
les
xchg
push
out
pop
pop
push
or
cmp
jne
leave
outsb
pop
sbbl
aad
dec
xor
jle
pop
jl
mov
sbb
add
cmp
dec
dec
add
xchg
int3
imul
sahf
cs
inc
inc
loopne
xor
cld
mov
jns
out
fcmovnu
test
or
inc
cmpsb
ficoms
inc
dec
inc
sub
push
enter
lock
sahf
or
outsl
hlt
sub
mov
fmul
add
stc
ret
mov
imul
and
fsubrs
mov
enter
flds
fadd
pop
lret
or
sub
sbb
adc
xchg
std
std
cmp
pop
loope
sbb
fwait
stos
ret
mov
sbb
pop
and
add
jbe
lret
repnz
hlt
xchg
sahf
push
dec
aam
mov
pop
aam
addr16
pop
adc
inc
mov
cli
add
scas
mov
inc
push
pop
shr
mov
das
xor
cmp
ja
jmp
scas
xchg
dec
add
inc
dec
xchg
scas
enter
ror
sahf
xchg
int3
out
das
lds
ret
fs
adc
dec
int3
pop
xchg
or
mov
cmpsb
inc
imul
xor
jnp
stc
adc
sub
int3
call
jno
std
fiadds
jne
test
lret
movsb
div
add
mov
out
pop
pop
lds
scas
cmpsb
ds
ds
jl
std
sub
dec
cmp
fwait
cmpsl
push
xor
test
jecxz
pop
cmp
cmovns
jbe
or
ds
mov
mov
adc
and
mov
push
mov
insl
lret
mov
sahf
lahf
mov
mov
pop
lret
push
arpl
xchg
les
xchg
pop
push
or
fidivrl
pop
push
mov
sub
testl
pop
pop
mov
fldl
pop
cmpb
loop
cmp
pop
push
mov
push
cmp
insl
mov
cmpsl
push
je
insl
push
aam
cli
mov
jg
fs
shrl
pop
repz
cmp
rcll
adc
mov
xchg
rcr
jns
shll
cmpl
adc
inc
repnz
jge
rclb
incb
sub
adc
cmp
adc
out
mov
xor
dec
sbb
push
xchg
cli
andb
mov
je
mov
loope
shrb
sub
mov
mov
push
dec
or
movsl
repnz
mov
push
add
sub
mov
mov
push
mov
lds
xchg
mov
or
in
xor
popa
push
jo
enter
mov
push
fstl
movsl
sub
dec
in
fsubs
pop
cld
pop
fwait
cld
mov
and
shl
or
outsb
in
loopne
test
mov
mov
push
test
jge
sbb
add
inc
aaa
xchg
shrb
in
ss
sti
mov
push
cld
cld
repnz
cmp
into
insb
loopne
xchg
dec
jmp
cltd
cs
mov
cmp
cmp
pusha
mov
inc
test
movsl
aas
or
hlt
les
xor
xchg
insb
popa
mov
lcall
not
xor
repz
xor
and
push
subb
mov
mov
push
inc
add
lret
push
aas
rolb
sbb
cli
ret
inc
dec
adc
sbb
js
aad
sti
lock
mov
mov
mov
cld
std
push
cmp
test
mov
iret
ss
cmpsl
cmp
or
add
jno
mov
sbb
rorb
out
sub
mov
add
dec
aad
sub
clc
mov
push
into
fwait
jno
mov
and
aaa
outsb
push
or
jmp
lock
cwtl
fmull
aad
sbb
xchg
pushf
jae
xor
lods
jne
rclb
or
xchg
in
or
inc
hlt
cmp
mov
mov
add
jbe
sub
jnp
imul
aad
lcall
xchg
cmpl
sub
js
sub
test
fidivs
or
sbb
inc
in
das
cltd
iret
sbbl
xchg
imul
sub
icebp
add
jmp
or
push
cmp
outsl
add
mov
cli
cmpsl
lcall
lods
pop
push
sbb
in
push
xchg
stos
and
mov
push
pusha
repnz
xor
mov
cmp
sbb
outsl
neg
mov
push
inc
push
xchg
popf
fidivl
jae
int
rcll
inc
push
xor
push
push
push
mov
ror
pop
sbb
mov
shll
shll
iret
sbb
loope
add
dec
sub
movsb
dec
push
inc
jbe
pop
ficompl
lock
and
dec
and
ljmp
dec
roll
sub
lret
loope
dec
loope
sbb
and
dec
movl
mov
jae
lahf
push
dec
cmp
aaa
jle
hlt
mov
rorl
mov
and
incl
dec
add
sti
aad
mov
int3
fldt
scas
loop
add
sub
je
inc
mov
cmpsl
fsubrs
jge
pusha
sbb
lods
cmp
out
cmp
hlt
inc
ljmp
aaa
dec
push
pop
cmp
out
mov
ss
mov
psrld
pop
nop
sahf
mov
hlt
test
pop
mov
add
andl
bound
dec
jl
lret
jno
mov
arpl
ja
loope
insb
xchg
inc
jno
mov
adc
add
fwait
test
inc
xor
push
sbb
mov
mov
popf
lret
push
push
sub
jo
out
push
jmp
xor
arpl
out
or
outsl
mov
loope,pt
jg
mov
sahf
inc
ud0
sbb
cmp
mov
subb
loop
mov
iret
cmpsl
and
repnz
scas
inc
pop
sub
cmp
aas
mov
data16
inc
cmp
fbstp
lods
addb
xchg
inc
mov
js
mov
push
fisubs
lahf
jmp
iret
pop
jae
cmpsb
sbb
sub
mov
cmp
movsl
sbb
mov
cmp
jg
jns
loop
repz
inc
mov
lock
data16
and
push
or
or
sbb
dec
test
sbb
jno
adc
push
stc
rorl
jge
in
cvtdq2ps
adcb
or
pop
enter
xlat
test
sbb
push
push
jbe
xor
aam
cs
in
loope
daa
dec
adc
or
rcrl
xlat
dec
mov
pop
loope
adc
jnp
xchg
inc
mov
rorb
adc
dec
mov
fwait
jnp
and
adc
test
and
idivb
leave
xor
lcall
stc
mov
mov
icebp
add
stos
cltd
imul
scas
cli
ja
jno
cmpsl
fcom
inc
sbb
out
fsub
jne
lock
adc
fsubrs
mov
and
xchg
adc
sub
in
data16
std
bound
mov
mov
ret
out
stos
cli
mov
jle
sub
inc
cld
sbb
mov
les
outsl
sub
testl
xor
lods
cmpsb
mov
xor
es
repnz
mov
daa
repz
mul
dec
jo
pop
and
dec
dec
cs
scas
hlt
add
fdivrs
lods
sbb
lret
and
sbb
xchg
hlt
es
shrl
or
mov
mov
xchg
cmp
lret
daa
sub
push
and
or
ficoml
stos
push
mov
loope
xchg
imull
mov
dec
adc
out
pop
cmp
lock
loopne
fsubrl
adc
xchg
je
dec
jl
xchg
out
sub
push
sti
push
xchg
sbb
shr
sarb
fcompl
icebp
cmp
xor
jp
jge
les
insl
notl
cmpl
mov
insl
daa
sub
mov
add
dec
pop
repz
add
test
mov
out
call
adc
jg
imul
inc
fstl
mov
sbb
std
lock
or
enter
fildl
outsb
loope
int3
or
lret
pop
ret
hlt
dec
inc
push
fcomps
mov
shll
push
insl
mov
adc
pop
push
loop
mov
inc
and
adc
aad
push
das
and
sub
dec
and
ja
cmpl
lahf
pop
adc
popf
test
in
insl
pop
xor
sbb
or
push
and
inc
dec
inc
movsl
inc
mov
divb
jp
stc
pop
clc
inc
je
fucomi
sub
dec
xlat
or
sbbl
or
lock
jge
add
xlat
push
xlat
out
in
cmp
and
dec
jae
fildl
lcall
into
jle
neg
mov
into
dec
fstl
mov
fldl
out
dec
cmp
sub
pop
adc
xchg
lock
xor
sbbb
cmp
lods
adc
dec
arpl
loop
xchg
push
cmp
inc
push
or
comiss
mov
call
rorl
pop
leave
cmpsl
jbe
je
lret
inc
dec
jmp
inc
jg
stos
dec
repnz
fwait
jae
call
out
add
fsubrs
mov
fnstcw
outsb
test
fs
pop
push
sub
mov
lcall
das
inc
or
sahf
orl
test
ret
or
jg
push
dec
adc
imul
mov
jno
shrb
add
lods
sub
subb
xchg
popa
shl
fisubs
in
xchg
inc
sub
jmp
push
mov
add
xchg
push
mov
js
xlat
lds
sub
sbb
cs
and
sti
inc
pusha
adc
ds
pop
mov
mov
in
cs
fildl
push
ljmp
xchg
sti
xadd
sbb
scas
mov
adc
lds
adc
xchg
mov
push
mov
pusha
cli
adc
in
sub
cmp
pop
lahf
or
ja
push
andb
pop
clc
test
xchg
fmulp
push
inc
adc
fmuls
xchg
cmp
ds
scas
pop
popf
adc
iret
ljmp
push
in
call
cli
ret
pop
sub
popf
out
or
fildll
sub
fwait
int
inc
mov
dec
outsl
mov
fisubs
popa
das
cmp
mov
jmp
stos
jne
gs
fdivr
cltd
dec
mov
imul
mov
into
div
add
iret
addl
jecxz
add
fwait
sbbb
adcb
mov
gs
hlt
pushf
sti
push
js
dec
push
jg
sub
push
mov
scas
jg
sbb
sub
jae
jnp
pop
pop
mov
inc
popf
lret
iret
jnp
push
jae
cli
add
popa
ss
imul
les
aam
xchg
jbe
mov
xchg
je
fcompl
cltd
fisttpll
int3
imulb
pop
and
call
inc
testb
aaa
scas
push
inc
pop
test
imul
sub
mov
xchg
lock
mov
movsb
inc
lods
shlb
idivl
push
jae
mov
push
adc
lods
jmp
dec
xchg
aad
les
ret
outsb
adc
and
cli
add
mov
adc
pop
mov
add
stos
outsl
leave
mov
cmp
add
outsb
lods
popf
mov
dec
pusha
xor
mov
sub
pop
bound
in
aaa
push
mov
jmp
cmp
icebp
aas
and
insl
dec
subb
cmc
inc
movsb
mov
imul
inc
or
int3
mov
into
lahf
and
adcb
or
jecxz
push
fstpt
loope
mov
and
jg
into
dec
stos
into
sbb
stos
jns
or
mov
sbb
mov
jbe
ds
jmp
data16
pop
aad
push
sbb
adc
fld
das
mov
test
sub
dec
subl
out
movsb
scas
jl
inc
xchg
std
adc
jbe
sub
cltd
pushf
sarb
fadds
rorb
scas
popa
imul
out
jns
ja
jmp
pop
cmpsb
inc
ljmp
cmp
lcall
enter
icebp
mov
repnz
sub
xlat
cwtl
bound
push
push
sti
les
nop
fcoml
lea
jp
pop
das
and
popa
xor
sbb
imul
adc
sar
xchg
inc
and
adc
xor
xor
push
cmp
mov
fcomp
jb,pt
iret
cltd
push
ret
dec
sub
or
lds
mov
push
push
add
loope
sarb
stos
daa
ss
and
xor
and
std
adc
adc
sub
roll
mov
loop
aaa
addb
mov
je
cltd
adc
mov
mov
jns
push
aad
in
lahf
pop
mov
jo
loope
hlt
test
sahf
add
inc
decb
adc
push
pop
fdivrl
lret
lea
pop
jno
xchg
jp
fdiv
dec
mov
jns
int
addr16
lods
push
mov
mov
dec
enter
sbb
cmpsl
rolb
inc
push
push
mov
daa
dec
into
lods
in
jg
dec
andb
xchg
add
sbb
push
xchg
pushf
and
and
lahf
das
cmp
hlt
xchg
rcrb
jb
jnp
cld
jno
xor
fstpt
leave
mov
in
mov
aad
cmpsl
cmc
dec
fiaddl
ret
fsubrl
not
lret
nopl
aas
push
push
aas
mov
repnz
sub
loope
test
hlt
fsub
lods
mov
fistl
test
push
outsb
mov
mov
push
mov
rclb
mov
mov
cmc
out
sub
jmp
std
and
xchg
inc
sahf
lods
xchg
sub
mov
pop
jmp
lret
repnz
out
dec
fcmovb
jp
or
je
fs
sbb
dec
cld
mov
dec
xchg
jb
not
xlat
jl
mov
gs
ret
ret
daa
sbb
inc
leave
sub
sub
or
test
mov
cld
daa
out
pop
out
out
pop
sbb
js
add
icebp
in
lcall
outsl
xchg
cmp
jae
sbb
push
push
lret
popa
xchg
jbe
or
xor
popa
add
outsb
mov
and
pop
and
mov
sub
scas
and
pop
fistpll
jl
inc
lcall
inc
jno
xchg
ja
adc
cwtl
mov
mov
cli
loopne
sbb
or
dec
xor
sub
lds
jmp
sbb
ja
testl
stos
sub
pop
cmpsl
cmpsb
fisubl
mov
in
pop
dec
ret
push
push
aam
je
adc
lahf
cmc
xor
aaa
add
xchg
mov
xchg
lock
loopne
in
push
out
sub
rcl
jg
out
jl
adc
jns
cmp
and
xor
roll
mov
adc
xor
outsb
insl
fildll
cmp
es
lds
sbb
je
xor
inc
jle
lret
int
js
cmp
cmp
call
or
stos
mov
jno
mov
jne
mov
ret
mov
or
cmp
xchg
mov
push
sub
cmp
movsb
aad
inc
gs
cltd
cli
jp
mov
dec
push
lds
sub
fbstp
in
inc
push
mov
div
addr16
sub
and
jmp
or
test
xchg
inc
mov
sbb
sbb
icebp
jb
cmc
mov
mov
lds
ljmp
mov
and
sbb
sti
mov
sbb
in
jp
push
loope
dec
mov
pop
popa
xchg
mov
shl
inc
push
insl
sar
mov
mov
leave
ret
push
push
loop
lds
pop
outsb
sub
fsub
cmp
mov
inc
sub
and
popf
xor
or
int3
daa
out
cmp
mov
out
dec
shlb
and
fxch
jge
filds
pop
aad
test
mov
adc
rcrb
mov
mov
dec
dec
dec
bound
movsb
fldt
arpl
and
arpl
data16
iret
dec
sub
mov
stos
xlat
or
cli
lahf
and
mov
cli
std
xchg
mov
in
sub
lea
stc
add
rcrl
popa
mov
mov
mov
sbb
dec
adc
insb
or
es
push
or
push
jp
js
xor
mov
xchg
cmp
add
loop
into
mov
shrl
fs
testb
adc
sbb
mov
inc
mov
mov
push
push
je
fs
je
in
mov
lret
jb,pt
pusha
into
pushf
add
jle
subl
mov
imul
dec
test
movsl
jle
mov
clc
in
les
xor
pop
sarb
in
jnp
sbb
mov
sbb
fwait
lahf
pop
dec
mul
and
in
test
sahf
mov
ret
mov
dec
dec
sti
cmc
and
test
rcl
imul
jnp
popf
fs
and
pop
test
lret
push
sub
shll
jge
mov
and
or
add
arpl
xor
repz
mov
sti
jmp
daa
xor
sub
cs
sbb
icebp
lcall
lret
addb
or
xchg
push
and
gs
adc
jne
fiadds
daa
fldlg2
out
rcl
lret
xor
and
aad
test
loop
mov
gs
sub
xchg
outsl
addr16
test
icebp
pop
adc
push
push
cli
push
and
test
orl
popa
pop
mov
fisttpl
in
xor
pop
mov
jne
mov
xor
inc
and
movsl
out
mov
jns
or
pop
mov
fwait
mov
call
bound
aad
lret
in
mov
or
jo
mov
data16
mov
cmp
ss
push
pop
mov
sbb
mov
jmp
mov
out
rorb
jbe
xor
je
aas
fldt
into
dec
push
push
sub
add
mov
fsubs
fsubrl
inc
pop
mulb
cmpsl
cltd
xor
jno
push
cmp
mov
shlb
lret
jo
pushf
sti
stos
repz
dec
lahf
hlt
push
cltd
mov
pop
aaa
rcrl
add
popf
sub
adc
and
loope
cs
out
push
jne
rorl
pop
add
test
fs
xor
decb
cmp
sbbb
adc
in
push
inc
push
jne
rorb
fdivl
fcmove
gs
repnz
sahf
dec
xlat
sbb
add
push
mov
mov
jl
repnz
push
adc
cmc
gs
or
es
push
cltd
movsb
jg
push
sub
out
int3
sbb
jmp
gs
sbb
ds
shl
int
dec
xor
test
incb
xor
fbld
lahf
lret
and
jmp
ret
and
roll
xchg
fbstp
sbb
dec
push
xchg
add
pop
mov
loopw
jp
test
popa
ss
lcall
adc
mov
mov
or
mov
fadd
jno
sbb
adc
clc
popa
fisubs
sbb
pop
in
fidivrs
repz
cld
jge
mov
enter
mov
pop
cli
js
mov
inc
sub
inc
mov
cmp
pusha
cmpsb
loop
adc
fcoms
notb
enter
jno
push
mov
cmc
out
add
in
inc
jmp
fldcw
cmp
xchg
push
divb
mov
pusha
push
in
insb
cmp
popf
fwait
pop
sbb
cli
lea
sbb
loopne
ss
dec
adc
xchg
xchg
cwtl
mov
cmp
adc
iret
movb
jnp
mulb
inc
mov
sub
fcompl
xchg
ret
pop
in
loop
loope
or
ss
mov
lret
in
cwtl
imull
test
or
or
mov
or
les
data16
adc
test
cmpsb
cmp
jb
jae
std
lret
fnsave
push
xchg
push
sbb
push
clc
sub
jl
mov
cmp
mov
repnz
xchg
and
icebp
or
fcmove
xchg
xor
add
jne
pusha
addl
sub
in
push
scas
aam
cmp
dec
mov
out
jns
xchg
into
add
in
insl
lds
outsl
pushf
scas
scas
pslld
cmc
cmp
sub
mov
xchg
cld
push
adc
or
scas
fwait
or
lea
or
dec
jmp
pop
rcrb
mov
mov
jle
pushf
or
mov
push
and
call
cmc
or
jbe
pop
pushf
xchg
dec
inc
mov
jmp
pop
jnp
jno
enter
shl
mov
jp
sbb
pop
lret
sbb
or
adcb
cmp
jl
xchg
mov
adc
shl
subb
ret
lods
jecxz
mov
pop
test
mov
mov
adcl
jo
jae
mov
mov
sub
shr
or
sbb
mov
loope
daa
push
notl
outsb
xor
sub
ss
shr
jno
jo
and
les
xor
in
add
jno
pop
mov
shlb
dec
test
nop
sbb
cmp
sub
push
lods
mov
ret
adc
test
mov
movsl
leave
adc
sbb
mov
pop
fs
sub
aas
lock
add
std
mov
mov
push
pushf
lret
mov
int3
mov
ret
xchg
mov
or
and
rorl
in
dec
scas
notb
in
dec
lret
sbb
test
push
xchg
cmpsl
adc
ds
mov
imul
jmp
ret
push
mov
aam
scas
cli
xchg
xor
mov
cmp
bound
xor
jnp
and
xchg
mov
ss
mov
push
shl
outsb
lcall
gs
shlb
cmp
stc
sbb
add
mov
pop
loop
or
jle
addr16
je
mov
jbe
pop
push
sub
xchg
jae
rcll
cmovns
mov
insb
mov
fs
popa
test
rcr
mov
mov
pop
aad
and
pop
dec
sbb
daa
dec
in
cwtl
cmp
dec
js
inc
add
faddl
das
addr16
push
pushf
arpl
sub
arpl
dec
cmp
xor
and
repnz
test
dec
mov
pusha
inc
and
das
add
sub
cmp
fnstcw
mov
push
mov
add
test
pop
push
mov
dec
andb
scas
mov
out
lods
lds
add
scas
cmc
jmp
in
addb
xchg
adc
mov
popf
lcall
mov
orb
mov
jle
loope
adc
pop
mov
push
repz
rclb
movsb
dec
leave
scas
jmp
paddb
cmp
enter
pop
popa
jmp
xchg
and
and
stc
xchg
frstor
cmp
push
cmpsl
xchg
sub
mov
mov
jmp
sti
insb
insl
fs
or
push
test
fidivrs
mov
stos
jecxz
leave
mov
jg
sub
jl
out
mov
pop
xchg
xchg
or
xchg
int3
sahf
popw
cld
xchg
les
cli
jne
sbb
lahf
int3
inc
add
cmp
fs
xchg
add
sbb
lcall
xor
ljmp
sbb
scas
int
cmp
mov
addr16
jb
in
out
pop
leave
dec
mov
enter
enter
lcall
sub
push
sti
iret
mov
xchg
loope
call
dec
and
into
sub
pop
sbb
test
jle
push
loop
daa
lret
push
sbb
jle
les
mull
inc
call
inc
cld
push
push
pop
adc
test
pop
les
push
iret
mov
jp
loop
xchg
sbb
pop
mov
lods
push
sub
inc
pop
xor
pop
push
push
loopne
ds
jbe
mov
sub
aad
leave
jmp
dec
and
jns
ljmp
pop
jg
in
dec
or
leave
dec
ret
jne
push
ja
jb
cmpl
cld
inc
mov
jb
mov
cmc
je
and
push
fcompl
outsb
in
sbb
mov
loop
leave
nop
repz
mov
enter
mov
int
and
or
testb
push
jp
pushl
pop
divb
xchg
mov
mov
mov
push
adc
out
in
jle
jecxz
mov
pop
pop
and
insb
subl
pop
andb
lea
pushf
out
lcall
push
stc
je
movsb
icebp
pop
mov
testb
pop
or
popa
dec
dec
out
push
icebp
jle
stc
lds
addr16
lcall
xchg
bound
in
cmpsl
mov
bt
push
hlt
xchg
fcmovu
xchg
xchg
jl
sub
xchg
xor
lret
outsl
mov
movsb
aaa
enter
push
add
xor
fs
imull
or
ss
scas
movsb
cmpsb
mov
sbb
mov
adc
fstl
add
outsl
idivb
test
and
mov
cmp
pop
loopne
lock
hlt
and
jle
mov
lea
jmp
sti
fsubs
jmp
push
mov
shrl
int
sbb
lods
es
stos
jp,pn
movsb
mov
mov
push
insb
cmp
je
outsl
mov
cld
aam
out
lret
jecxz
insb
xchg
xchg
cli
pop
loopne
outsl
fidivrl
jbe
lahf
clc
jnp
xchg
aad
mov
adc
jmp
dec
mov
dec
inc
ja
lret
movsl
mov
xchg
into
loop
add
in
aas
mov
push
mov
stos
sub
ljmp
mov
loop
insb
lods
int
dec
stos
out
daa
lret
sahf
jo
arpl
add
fbstp
or
mov
jae
pop
fistl
mov
jl
into
mov
cltd
shrl
out
dec
into
mov
int3
push
adc
or
push
pop
jg
mov
pop
dec
lea
insl
mov
sbb
addr16
imul
stos
jl
stos
sub
inc
mov
mov
rclb
cmp
pop
shrb
inc
pop
jle
loopne
adc
jl
stc
sahf
lret
or
xchg
push
mov
aas
or
sub
pop
lcall
mov
iret
dec
hlt
mov
loope
mov
gs
into
daa
iret
or
fwait
mov
dec
push
lea
clc
fidivl
xor
cmpsl
mov
into
add
std
inc
xchg
lret
lret
adc
push
pop
and
data16
push
loop
sub
lods
mov
lret
inc
pop
xchg
movl
lods
dec
cmp
pop
xchg
stos
push
hlt
push
and
bound
out
lea
sti
inc
cltd
and
cwtl
mov
leave
xchg
je
sbb
mov
int3
iret
data16
sbb
dec
test
repnz
icebp
jle
rorb
pushf
pop
push
xor
adc
fcoms
pop
stos
add
add
jp
fsubl
fdivr
lds
das
cli
adc
lahf
lret
adc
inc
fisubrl
fists
pop
xor
mov
lds
mov
test
sub
adcb
hlt
xlat
jle
cmpsl
jb
push
sbb
push
stc
dec
stos
loop
ljmp
loop
cmpsb
inc
and
repnz
xchg
repz
or
jle
xchg
rcrl
cmpb
inc
push
and
rcrl
repz
sbb
pushf
test
scas
cmpb
mov
cmpsl
leave
fsts
pop
pop
mov
mov
daa
dec
int
ljmp
sti
add
mov
sub
cmp
xchg
inc
xor
xchg
or
movsl
leave
ret
sti
mov
cmpsb
add
xchg
mov
iret
lods
xor
fidivl
pop
out
adc
test
les
lcall
ss
sub
call
xor
ret
jns
adcb
jns
es
sub
aas
and
cs
add
in
sbb
lea
mov
pop
test
stos
ja
mov
in
in
pop
pop
stos
mov
ficomps
mov
mov
ret
call
jle
mov
mov
mov
push
jne
xchg
ja
mov
nop
addr16
mov
ret
cltd
add
cmp
pop
jmp
andl
push
or
jo
inc
inc
jmp
or
gs
sbbb
push
jne
or
and
les
test
jns
xchg
orb
fstpt
mov
sub
cli
clc
xor
sbb
xchg
mov
outsl
in
adc
jbe
cmp
cmp
sub
sbb
xor
jge
jns
test
inc
lcall
dec
xor
xchg
hlt
sbb
xor
test
xchg
pop
or
sarb
mov
adc
jecxz
jae
test
xor
cs
lret
adc
add
fwait
inc
sub
add
push
hlt
cmpb
fnstcw
movb
mov
or
jge
xchg
stc
sarb
dec
ds
ljmp
fcmovnu
jbe
insb
jmp
mov
mov
clc
inc
aam
int3
xchg
clc
xchg
cmp
mov
inc
push
dec
test
test
sub
mov
xchg
std
jge
rorb
adc
lea
int
jnp
xor
jge
sahf
rcrl
lahf
jae
and
aam
jp
fsub
mov
sahf
xchg
push
jl
jp
xor
or
lcall
jns
test
push
lret
jno
sub
ja
lret
aam
mov
inc
dec
sub
xor
add
cmp
mov
jmp
test
arpl
pop
gs
xor
adc
in
stc
mov
lret
mov
push
dec
cltd
inc
pop
xchg
xchg
sbbl
movsb
pop
pop
mov
mov
pop
dec
out
loop
ret
js
iret
ret
pop
shlb
cmp
pop
enter
enter
cmpsl
push
popa
repnz
or
inc
pop
mov
xchg
push
clc
imul
cltd
mov
mov
jle
mov
outsl
jecxz
sbb
movsb
test
mov
cs
push
mov
cltd
loope
out
pop
push
sub
mov
pop
and
xchg
or
lds
mov
repz
xchg
cs
jno
mov
nop
jne
cltd
and
xchg
adc
ret
mov
lock
dec
xor
inc
addl
adc
cwtl
push
nop
stos
pop
je
and
mov
sbb
testb
sahf
aas
sbb
jbe
fwait
cmp
dec
aaa
jl
out
fmull
lret
cmpsl
cmp
lret
jg
bound
or
pop
stos
sahf
sbb
xor
insl
outsl
fdiv
rcl
dec
repnz
sbb
xchg
push
lret
out
call
add
cmp
out
rcrl
loopne
leave
js
cs
add
add
loopne
mov
dec
das
push
cmp
xor
imul
fildll
fwait
rorb
pop
dec
pop
loop
cmp
push
sahf
imul
jl
fs
cwtl
jp
dec
inc
push
cmp
mov
lret
jns
std
sbb
mov
sub
mov
push
inc
stc
pop
mov
in
int3
mov
stos
lret
shll
mov
or
iret
push
outsb
mov
cmp
xchg
rcrl
mov
fstp
rclb
xchg
inc
loope
es
jmp
xchg
cmc
fstpl
xchg
mov
scas
cwtl
push
dec
jo
dec
cmp
push
sbb
add
jecxz
adc
jno
xchg
inc
adc
xchg
and
lret
pop
sarl
fsubrs
add
testl
xor
data16
inc
not
cmp
stc
nop
mov
test
add
push
mov
mov
jae
pushw
out
sbb
adc
jmp
test
rcrl
inc
cmc
cmp
imul
gs
gs
inc
sarl
fldl
xchg
mov
cwtl
pop
jno
mov
out
pusha
int3
mov
loopne
add
cmp
adc
pop
mov
sti
pop
dec
enter
xchg
test
mov
jae
loope
xchg
push
push
inc
scas
aas
dec
and
mov
call
bound
in
fucomi
sub
pop
repnz
dec
or
out
inc
cmp
lea
jp
xor
mov
mov
je
and
ret
mov
aam
pop
add
add
xor
jne
mov
fsubl
and
jge
test
test
imul
xor
fists
jp
out
pop
jge
mov
rorb
das
pop
adc
mov
push
xlat
cmp
and
adc
cld
pop
pop
xchg
mov
mov
jns
xor
add
ret
xlat
pop
jo
sbb
push
test
movsb
push
hlt
jmp
mov
mov
gs
xchg
cmpsb
hlt
mov
popa
mov
pop
jns
pop
mov
sub
cmc
xchg
scas
dec
pop
in
mov
mov
pop
pop
mov
fisttpll
or
out
es
es
mov
mov
jbe
lahf
test
jnp
aaa
lock
cmp
ret
jp
sub
mov
sub
loopne
gs
lcall
pop
push
sub
push
sahf
loop
int3
test
mov
fistpll
into
sbbb
aas
and
lcall
mov
cmp
fwait
xor
aad
fdivr
inc
mov
mov
add
and
movsb
mov
lds
mov
testl
cwtl
in
imul
movsl
push
dec
inc
fstl
rorl
in
push
ja
inc
gs
and
mov
adc
fisubl
loop
arpl
movsl
data16
fs
cs
call
sbb
arpl
add
sub
jno
push
cmp
je
adc
push
jbe
jbe
xchg
insb
push
xor
mov
inc
mov
jnp
xchg
xchg
mov
cmpsl
movsb
out
in
leave
loope
scas
mov
loopne
cmp
orb
enter
pinsrw
xor
sub
inc
push
sub
pop
sahf
add
sub
lock
adc
lods
icebp
in
pop
lret
aas
mov
jg
xchg
inc
mov
dec
dec
cmp
test
and
movsb
lret
jo
pop
addb
imul
add
mov
or
jmp
pop
sbb
loopne
xchg
adc
cmp
dec
lods
xchg
sahf
test
jne
popa
or
xchg
dec
inc
repz
pop
sub
aaa
xchg
inc
xor
mov
sbb
mov
cli
xchg
or
cltd
mov
adc
es
cmp
and
pop
push
popf
mov
jg
pop
mov
lcall
ret
js
das
arpl
bound
xchg
cld
arpl
psubq
int3
int3
push
push
scas
enter
lock
inc
jns
inc
mov
mov
ret
xor
lds
out
adc
xchg
push
movaps
push
xchg
loope
pop
fisttpl
mov
les
cmp
cmpsb
cmp
jecxz
ja
inc
xchg
jns
adc
es
lcall
in
pop
inc
pop
push
pop
call
xor
cmp
shrb
fwait
inc
jecxz
ret
outsl
sub
jle
sbb
xchg
pop
stos
out
push
popa
mov
jb
xchg
push
xchg
ljmp
cmc
cmp
cmpsb
mov
add
fsubl
scas
aad
fidivrs
pop
fistpl
insl
pop
mov
out
inc
push
repnz
inc
mov
sbb
insl
dec
sub
cmovl
arpl
dec
inc
insl
scas
ret
and
xchg
xchg
pop
mov
dec
stos
in
test
adc
or
inc
shlb
mov
sub
mov
mov
lods
data16
outsb
push
test
cmp
sahf
or
jp
pop
add
sub
lret
lock
loope
xorb
addr16
sub
cld
mov
test
data16
adc
ret
loopne
push
cmp
rolb
out
push
cmpsl
test
int
lods
and
sub
xchg
mov
inc
mov
enter
in
test
fcmovbe
cmp
je
std
add
addr16
subb
mov
or
aad
or
lahf
add
mov
inc
and
mov
pop
out
int3
add
stos
push
jecxz
es
cltd
fmul
pop
inc
mov
pop
push
or
mov
xor
scas
mov
cmc
aam
into
test
std
dec
jno
add
icebp
xchg
je
out
dec
test
std
mov
jmp
cmp
push
add
push
push
mov
hlt
pusha
dec
fiaddl
pop
insl
ret
mov
sub
push
push
pop
sahf
sbb
jl
aas
and
push
xor
jne
add
lea
dec
push
xchg
xchg
jae
or
cmc
dec
in
in
push
mov
xor
stos
inc
mov
cwtl
adcl
fisttpl
mov
es
pop
mov
adc
out
notb
xor
mov
or
inc
jns
inc
adc
pop
loopne
xor
and
popa
fistps
gs
cmp
aad
leave
fldenv
xor
and
ror
xor
sub
stos
std
mov
lods
lret
push
mov
sub
cmp
add
xchg
in
je
aad
rorl
push
adc
fucompp
shlb
push
and
and
pop
mov
clc
lea
in
les
imul
add
pop
dec
jae
or
jecxz
pushf
shlb
jno
inc
or
xchg
mov
mov
mov
mov
call
jno
adc
pop
and
iret
adc
hlt
xchg
andb
or
dec
std
add
xchg
leave
ljmp
push
sti
or
dec
lahf
sar
sub
dec
or
lock
divb
cld
mov
pop
and
mov
push
jne
push
mov
add
pop
fcoms
arpl
mov
mov
jp
jp
cwtl
ret
insl
outsb
testb
sub
cmp
pop
add
insl
dec
cmpsb
dec
icebp
sbb
xchg
shlb
arpl
xchg
out
xchg
sub
addr16
frstor
add
mov
push
lcall
shll
pop
adcb
fsubr
sbb
push
jmp
xchg
out
push
stos
out
cmp
xor
dec
addl
fsubl
inc
rcll
xchg
test
xchg
cmp
xchg
je
xchg
mov
ds
mulb
cwtl
lds
pop
cmp
fs
roll
rcll
cltd
jo
nop
pop
or
push
cli
enter
popa
adc
pop
lretw
jnp
or
and
in
push
fucomp
pop
push
adc
scas
inc
dec
sti
fwait
pop
loope
cmp
cmpsb
andl
hlt
dec
xlat
arpl
popf
icebp
pop
fwait
dec
sub
fldenv
mov
pop
shrl
sbb
loopne
mov
sar
mov
and
aaa
test
dec
mov
dec
loop
cmp
jp,pn
roll
jp
fs
hlt
gs
in
adc
add
cmp
sbb
fadds
jbe
sbb
or
lods
pop
sbb
adc
pop
imul
lcall
sub
testl
pop
inc
adc
dec
fbstp
iret
inc
sub
aam
jl
or
inc
rcrb
add
jo
repnz
lahf
xchg
dec
loop
ljmp
cmp
lods
cmp
mov
in
jne
enter
cmpsb
mov
mov
aam
mov
call
fistpl
mov
mov
adc
in
cmp
gs
push
mov
push
mov
add
mov
notb
fisubs
mov
cmp
test
out
xor
dec
mov
xor
pusha
mov
jb
mov
push
jb
sbb
in
dec
cld
sarb
lret
negl
push
and
adc
or
mov
mov
and
pop
xchg
xchg
xor
lock
jecxz
test
inc
int
cmp
mov
aas
repz
pop
xchg
sbb
shlb
xchg
or
mov
insb
aam
sub
add
je
pop
dec
mov
push
mov
fcmove
outsb
pop
paddd
popa
xchg
jno
fdivrl
dec
stc
dec
test
sbb
lret
sti
jne
mov
hlt
push
imul
xchg
jo
cld
cmp
sub
xor
decl
jnp
jo
sub
or
stos
mov
je
push
sub
loop
xchg
sbb
bound
cmp
jl
mov
cmp
ljmp
xchg
pushf
into
adc
adc
dec
xor
cltd
out
ss
into
pop
pushf
stos
jp
push
outsl
mov
ret
or
cmc
fisubs
insb
lcall
jno
pop
jecxz
jne
mov
push
inc
cmp
xor
lcall
push
imul
frstor
mov
jb
nop
aas
dec
or
lfs
xor
out
xor
sbb
inc
dec
insl
pop
xor
fwait
stos
adc
inc
gs
pop
mov
sbb
cmpsl
lret
sbb
call
xor
leave
cmp
in
push
arpl
mov
pop
sbb
pop
stos
xchg
cmpsl
and
iret
fsubs
nop
xor
insl
sarl
inc
jns
data16
cmc
lret
mov
push
cld
xor
inc
pop
sbb
push
pop
and
sbb
out
sub
popa
dec
mov
mov
orl
jae
adc
xchg
sbb
pop
repz
dec
or
roll
ret
cmp
push
sbb
dec
rcll
pop
icebp
testl
testl
jno
sbb
scas
mov
jp
lret
fbld
or
cwtl
arpl
loopne
sbb
int3
mov
int
test
loop
jg
gs
pop
sub
ja
lock
pusha
jnp
hlt
fisubs
and
test
adc
jecxz
cmp
inc
popa
ret
inc
adc
stc
call
js
adc
sahf
lods
sub
js
sbb
mov
fldenv
or
daa
adc
lds
std
ret
sub
cmpsb
ret
pop
inc
lds
ds
out
inc
cmpsl
aam
xor
xor
or
mov
mov
sbb
push
daa
js
loope
pop
cmpsb
shll
xchg
mov
mov
xchg
mov
leave
jo
xchg
xor
and
or
xor
insb
mov
cs
mov
mov
movsl
mov
add
cmp
shl
xchg
test
in
fcmovb
xchg
jne
xchg
cmp
and
inc
mov
push
xchg
scas
out
mov
int3
addr16
xchg
adc
lahf
mov
cmp
data16
insl
add
mov
lods
scas
leave
push
hlt
lods
adc
lret
mov
sub
scas
iret
mov
cmp
imul
leave
pop
xchg
sub
fucomp
pusha
pop
popa
outsl
mov
insb
nop
gs
xchg
mov
pop
sahf
dec
mov
aad
xor
sbb
cli
cli
mov
push
iret
cli
add
mov
aad
arpl
xchg
nop
or
mov
xchg
call
ss
insl
out
movsb
sbb
setnp
shrl
mov
jp
into
popf
mov
sub
add
in
das
das
mov
jge
leave
or
shll
xor
jmp
sub
jb
jmp
mov
loopne
imul
dec
pop
cmp
js
loope
notl
idivb
outsl
mov
push
arpl
mov
mulb
xchg
pop
dec
mov
nop
test
and
repz
aad
pop
push
outsl
pushf
jns
scas
cmp
mov
inc
or
cs
rcrl
scas
lret
mov
adc
popf
or
out
pop
mov
sub
add
xor
sub
inc
pop
push
repnz
imull
push
cmpsb
inc
push
scas
inc
jp
sub
and
cmp
jp
inc
push
scas
into
inc
cmp
pop
insl
sub
jl
push
in
push
fmull
mov
in
lahf
movsl
push
jae
mov
fwait
movsb
testl
and
add
xchg
push
add
mov
dec
or
test
mov
xchg
add
inc
lods
std
or
andl
and
add
inc
shrl
lcall
mov
adc
test
test
sbb
jne
call
rcrb
outsb
lcall
popa
addb
repnz
sarl
ja
mov
roll
fimuls
push
scas
jecxz
cmc
jl
sbb
imul
push
les
sahf
ja
xchg
repnz
test
adc
insb
shl
outsb
add
adc
out
mov
xor
cmp
mov
or
xor
xor
mov
insb
shl
inc
sbb
sbb
clc
cmpsl
and
and
sub
lds
push
and
dec
in
push
lahf
sbb
adc
test
and
lahf
push
mov
xchg
loop
movsl
jecxz
aaa
add
jmp
mov
test
mov
mov
inc
inc
cmpsl
pop
aad
jne
cmc
jne
ret
adc
mov
in
jg
cmpsl
fsubp
xor
test
mov
dec
call
or
jnp
mov
mov
jno
jl
xor
cmpsl
sub
pop
inc
nop
and
mov
jecxz
or
mov
out
lret
addb
dec
lahf
push
or
outsb
pop
xor
into
std
and
outsb
push
decl
shrb
cmp
mov
adcb
add
loope
jmp
lods
and
jnp
sarb
xorb
fnstsw
dec
xorl
repnz
out
shr
frstor
imul
mov
jbe
mov
fbld
sbb
stc
push
iret
lea
fwait
mov
popf
mov
inc
roll
cs
inc
xor
hlt
mov
jb
xchg
xor
inc
addr16
jnp
add
or
adc
jecxz
insl
out
lret
cli
jae
imul
cmp
sub
jle
aam
sbb
sbb
jb
inc
mov
adc
push
jg
inc
xchg
orb
and
leave
add
cmp
fidivs
test
hlt
es
xor
loopne
js
push
mov
nop
enter
lods
dec
and
dec
ds
mov
or
mov
inc
mov
pop
push
dec
dec
fs
dec
mov
inc
insl
ret
popf
sub
xor
sbb
ret
mov
mov
jmp
sub
and
xor
sub
ret
cmp
jns
xor
fldenv
decl
in
and
and
mov
jp,pt
xlat
push
stc
cmp
call
pop
pop
xchg
js
pop
ja
popf
inc
jae
sarl
rep
movsb
addl
fcoml
jmp
adc
dec
ja
sbb
mov
jbe
xchg
mov
push
ss
fcomip
imul
xchg
mov
cld
call
inc
and
xor
and
stos
push
inc
addr16
fidivs
pop
xor
lods
test
xor
and
lahf
adc
jg
and
adc
pop
xchg
push
xchg
nop
repz
mov
cmpsl
ja
test
push
and
ret
jl
or
fldl
jne
sbb
jp
push
lock
incb
pop
sub
fwait
scas
fmulp
add
jno
mov
jb
ret
inc
sbb
cltd
add
xchg
mov
js
mov
or
push
in
test
pop
sub
imul
divb
jle
lock
fisubl
pop
push
cmpl
jb
call
or
shll
sbb
push
push
add
push
mov
movsb
jge
or
pop
sub
jmp
lret
int3
lds
adc
dec
mov
cld
lret
xchg
mov
mov
in
xor
lock
scas
cmc
insl
pop
into
jb
sub
sbb
inc
or
sub
je
mov
fidivs
push
sti
fmulp
lret
mov
mov
mov
out
out
jb
shlb
les
stos
sub
mov
or
add
push
in
or
flds
aas
mov
outsb
and
lahf
data16
adc
dec
je
aad
mov
movl
shl
mov
std
das
mov
inc
leave
test
pop
jno
mov
out
daa
sarl
gs
cmp
mov
loopne
inc
int3
mov
add
xor
mov
mov
cmp
and
arpl
jnp
ja
mov
lds
lcall
push
call
inc
pushf
cmc
in
pushf
push
jp
cmp
jne
pop
xorl
mov
xor
push
xchg
shll
mov
fsubr
and
push
call
sbb
test
fisubrs
das
imulb
mov
dec
shlb
dec
ret
inc
push
jg
outsl
pusha
iret
xorb
adc
xchg
imul
in
jnp
or
dec
sbb
adc
pop
mov
test
pop
jb
push
inc
ja
xor
fsubrs
sbb
inc
movsl
inc
sub
arpl
aas
xor
push
dec
and
insb
pop
pop
test
testb
and
in
lret
inc
pop
cwtl
cltd
std
adc
xor
movsb
sbb
inc
test
or
xchg
andb
xchg
jnp
push
cmp
dec
xchg
iret
or
jle
and
addl
ja
scas
inc
dec
subl
fdivs
mov
dec
adc
inc
movsb
mov
jne
lret
arpl
push
jno
cld
ret
insb
or
fdiv
loop
sub
nop
cmpsb
stos
inc
push
mov
xchg
call
mov
xchg
out
mov
cmpsl
add
adc
jle
lods
ljmp
mov
jb,pn
xor
scas
test
addr16
jne
into
sti
sub
clc
adc
ror
test
out
mov
inc
ret
inc
xor
adc
adc
push
mov
fcompl
pusha
adc
sarl
das
sbb
fcoms
test
cmpsb
stos
jg
adc
cmc
sbb
cltd
sbb
push
mov
cld
adc
pop
cwtl
xchg
jl
xor
jle
lock
inc
not
cltd
jno
repz
sbb
lods
shrb
pop
xchg
ret
mov
push
push
push
es
decb
or
pop
inc
sbb
jecxz
cmp
aad
nop
imul
out
pop
movsb
fbld
sti
sbb
aad
lods
lods
add
outsl
mov
jne
movsl
jmp
mov
sub
bound
enter
cmp
inc
lods
cmp
pop
int
lea
js
shlb
push
data16
jo
or
jnp
pusha
push
pop
push
imul
lahf
adc
lret
or
cli
add
int3
sub
fwait
loop
pop
stc
int
fldenv
pop
jne
cmc
sbb
mov
jb
mov
rcll
push
into
mov
lret
mov
push
cmp
xchg
xchg
pop
loopne
pop
lret
mov
jnp
push
std
lock
mov
adc
push
inc
in
push
dec
int
std
push
movsb
pushf
sub
jnp
pop
fildll
icebp
sbb
xlat
imul
hlt
and
xchg
xchg
dec
or
xchg
push
daa
fiaddl
mov
jecxz
and
js
in
xchg
lock
sbb
nop
fldcw
movsb
push
pop
fdivrs
sbb
xor
adc
sub
into
lock
and
call
arpl
push
fistl
loope
cmpsb
lock
sbb
add
push
movsl
adc
or
mov
fadds
inc
inc
cli
or
or
stos
outsb
aas
xlat
repnz
jnp
inc
mov
insb
scas
adcb
repnz
mov
push
jp
test
jg
pop
or
mov
sbb
fdivl
sub
das
or
jb
xorl
lock
push
or
addb
dec
add
mov
outsl
popa
jp
inc
sub
or
push
loope
mov
mov
leave
cld
pop
xchg
out
push
scas
testb
mov
xchg
sahf
repnz
mov
sbb
hlt
sbb
in
in
cwtl
subb
pop
cmpsb
leave
push
pop
jl
cmp
int
popf
mov
jo
out
xchg
lret
mov
mov
imul
test
sub
cmp
push
cmp
cmpb
lock
cld
add
add
lret
daa
dec
jns
lret
mov
stos
movsl
add
add
int3
call
les
xchg
mov
jbe
out
push
push
pop
vminps
popa
push
movsb
inc
leave
push
stc
jg
adc
xchg
out
xor
inc
inc
xor
sti
mov
mov
orb
xchg
in
xchg
and
and
xor
into
lods
imul
stos
mov
jbe
les
decb
adc
outsb
jo
inc
dec
inc
adc
mov
push
jbe
lahf
mov
jbe
cli
dec
mov
repz
repz
jno
icebp
loope
mov
pop
or
clc
popa
jns
dec
and
ja
mov
pop
frstor
hlt
cwtl
pop
div
jge
pop
sbb
repz
adc
fimuls
icebp
add
cmp
stos
and
andb
hlt
jbe
lea
jbe
and
fldt
insl
aas
mov
cld
fxch
cmpsb
lea
in
push
popa
ja
stc
jle
xor
sub
nop
movsl
popf
sub
sbb
cmpsb
out
xchg
les
adc
sahf
push
xchg
cmp
dec
adc
adc
jle
sbb
mov
jae
es
les
push
fistpll
shlb
outsl
add
jae
push
xor
xchg
pusha
dec
mov
jp
xor
out
and
mov
pusha
dec
push
and
aam
stc
xchg
inc
xchg
in
jl
arpl
icebp
mov
lds
xchg
push
xor
cmp
jno
int3
mov
das
add
xlat
adc
mov
aas
ljmp
bound
cmpsb
add
pop
and
inc
aam
jne
jge
mov
xor
xchg
jmp
insb
mov
sbb
jo
cmp
push
sbb
xchg
xor
in
xchg
jge
jp
and
loopne
flds
xlat
add
cwtl
adc
pop
inc
repnz
repz
push
aad
icebp
or
pop
xchg
loopne
movl
xchg
sti
adc
subb
addr16
mov
ret
in
arpl
out
add
adc
jecxz
es
mov
cld
shl
xlat
fisubrl
rorb
dec
fcmove
sbb
pop
cmpsl
packssdw
sbb
xchg
rcrb
add
inc
outsb
sub
sahf
pushf
push
inc
sbb
imul
lock
loop
inc
lods
sub
popf
mov
pushf
dec
pusha
or
test
sbb
in
mov
inc
jno
mov
mov
test
inc
jbe
sbb
mov
inc
call
jl
mov
leave
dec
mov
scas
aad
aas
fidivs
daa
jb
lahf
mov
dec
outsl
lods
mov
or
mov
divl
out
mov
loop
cmp
mov
cs
mov
lret
das
mov
out
jne
push
inc
xor
xchg
stc
xor
das
sub
cmp
scas
inc
mov
ss
rcl
and
aas
outsb
sub
repnz
jnp
cmpsb
sub
in
mov
push
cmp
inc
es
adc
imul
pop
in
cmp
adc
and
and
insl
rcrb
imul
pop
push
pop
les
out
cmpsb
jl
sbb
push
sub
addr16
xchg
and
imul
sub
and
fcompl
cmp
mov
shlb
repz
jbe
and
sahf
push
rorl
loope
jns
mov
insl
push
dec
aaa
lods
jo
xchg
add
push
sbbb
mov
push
mov
jb
mov
adc
pop
xor
pop
out
pop
sub
adc
mov
std
add
sub
and
arpl
pop
and
gs
jle
adc
inc
aaa
or
aam
xor
hlt
or
jne
into
test
lods
dec
sub
std
xor
push
fwait
sbb
popa
cmp
pop
subl
in
push
jl
mov
push
add
push
push
pop
cltd
cs
loopne
aas
ret
mov
xor
popa
iret
loope
xchg
xchg
dec
xchg
mov
test
or
inc
jge
das
and
jmp
cld
mov
icebp
sbb
pop
mov
arpl
test
jne
push
mov
adcl
outsb
stos
gs
jo
dec
mov
lret
adc
in
dec
lret
push
pop
push
test
fwait
divl
orb
fucom
enter
xchg
and
cli
fwait
insb
push
or
cmp
sub
mov
or
and
inc
mov
sub
adc
loop
std
and
push
mov
mov
and
cmp
ja,pt
mov
cmp
pop
ds
fst
push
divb
xchg
rorb
push
sbb
addl
jb
insl
mov
push
aam
lcall
or
inc
addr16
lret
sarl
fdivrs
and
addr16
mov
jmp
or
xabort
int3
sbb
insl
cmpl
insl
bound
scas
dec
and
pop
movsl
arpl
jnp
add
test
jp
jae
pop
and
adc
test
insb
mov
sub
dec
cmp
adc
add
hlt
ss
loopne
mov
rclb
repnz
lods
gs
shlb
push
inc
imul
xchg
les
in
mov
or
lds
cmp
mulb
pop
shll
push
ljmp
cld
or
frstor
outsl
or
out
jmp
mov
into
ds
lods
out
pop
into
cmc
jae
leave
shll
inc
sub
mov
pop
pop
push
roll
imul
push
jg
xchg
inc
jno
into
sbb
int
push
out
adc
andl
adc
or
adc
movsl
loope
aaa
xor
mov
cmp
push
test
cmp
leave
pop
fsts
sete
bound
ja
sub
loopne
lcall
push
and
aad
js
jge
or
sub
jp
jmp
mov
xor
and
iret
mov
enter
push
stc
dec
xor
push
cmp
and
incl
in
pop
movsl
mov
dec
or
cmp
loopne
lds
push
lahf
rorb
fiadds
fimull
out
cmc
pop
shrl
ja
push
sub
aaa
aad
push
lods
add
inc
fidivrl
daa
push
stos
test
ret
xor
aaa
mov
mov
stc
ja
test
sub
push
mov
dec
call
or
scas
mov
rcll
scas
dec
mov
mov
sbb
mov
stc
leave
pop
dec
jne
test
adc
jmp
adc
pusha
mov
std
cmp
sahf
aas
add
dec
push
imul
pop
jb
dec
or
lea
shr
pop
push
scas
gs
mov
sbb
xor
xchg
push
sbb
movsb
shrb
data16
pop
cmp
push
xchg
sbb
enter
xlat
jb
sub
testl
andb
or
daa
rcrl
nop
idivl
outsb
dec
ljmp
sar
xchg
stos
cli
frstor
sbb
mov
lahf
pop
dec
mov
fiadds
pop
sbb
stos
in
and
dec
clc
push
mov
roll
enter
js
inc
and
xchg
add
test
add
out
pop
xchg
cmp
dec
xchg
enter
sbb
jnp
lds
jg
shl
in
sub
pop
mov
and
pop
rorl
adc
fisubs
rcl
mov
add
in
cmpb
cltd
cmp
insl
cmp
in
outsl
cmpsl
aad
mulb
aam
js
sbb
mov
or
aas
mov
scas
jp
jecxz
scas
mov
fwait
int3
xor
pusha
sub
les
cmpsb
mov
scas
mov
repz
bound
stos
xor
push
movsl
and
je
fwait
cmpsl
clc
sub
std
mov
mov
lods
mov
dec
xchg
mov
aad
mov
or
push
mull
shrl
sarb
cmpsl
pop
pop
movsl
in
dec
out
xor
int3
int
sbb
shl
stos
adc
pop
rorl
cmp
jb
add
outsl
mov
shll
syscall
push
sbb
popa
das
aaa
xor
push
aaa
sar
cmp
jg
fxch
cmp
ss
xchg
out
aam
decl
in
mov
dec
jp
xchg
js
mov
lret
add
pop
popf
addl
inc
adc
jp
adcb
pop
jne
xor
xor
pop
push
mov
fwait
jl
xchg
or
lahf
inc
ss
mov
jl
aad
jb
mov
ss
adc
mov
or
sarb
jl
and
push
sub
sub
into
jp
and
push
mov
mov
shl
inc
add
aad
cmp
adc
mov
pop
sahf
js
pop
jmp
inc
sub
sti
dec
fsub
mov
mov
dec
inc
std
dec
bnd
sahf
mov
test
mov
push
mov
sti
cmp
jae
lret
idiv
jge
jge
inc
mov
push
mov
ja
loop
xchg
imul
dec
xlat
or
pop
stos
dec
add
sub
ss
cwtl
das
adc
and
cmc
or
mov
mov
fwait
clc
enterw
mov
ja
push
neg
sti
push
adc
scas
lods
inc
push
cmc
inc
mov
push
pop
or
int
or
adc
in
ja
xor
mov
mov
dec
fucomip
sbb
pushf
xchg
lock
push
ja
inc
jns
pop
arpl
xlat
mov
je
nop
add
ror
inc
dec
cmp
mov
scas
and
mov
inc
inc
xor
adc
sub
ja
xor
jg
and
push
popa
adc
int3
add
pushf
adc
xchg
adc
fwait
inc
fucomp
and
push
fbld
xlat
inc
loope
pushf
fwait
adc
pop
pop
icebp
push
adc
or
test
xlat
and
add
cmp
sub
xor
xchg
dec
lods
lods
roll
negb
loopne
repz
clc
push
shll
add
jl
enter
daa
pop
js
mov
lea
pop
data16
or
shl
xlat
scas
sub
call
loope
enter
mov
mov
lahf
scas
aam
inc
dec
xor
xor
xor
jnp
js
cmp
mov
fnsave
inc
inc
test
xchg
jne
rcrl
lahf
pop
push
movsl
fstl
inc
jae
pop
cmp
add
pop
cmp
and
xor
xchg
xchg
or
ret
inc
inc
jbe
adc
shrb
je
pop
dec
sbb
pop
dec
outsl
pop
out
in
aam
loope
outsb
lock
inc
adc
inc
movsl
push
fwait
sti
xor
adc
xchg
fstpt
cmp
test
mov
push
mov
fistl
push
adc
jge
fdecstp
jae
push
adc
daa
call
inc
cmp
adc
pop
outsl
mov
pop
aam
lock
sbb
jl
int
repz
lods
xchg
lock
aam
sbb
push
cmp
xchg
sub
shlb
movsl
je
stos
jle
xor
dec
dec
insb
push
lds
xchg
testb
sub
lea
hlt
sbb
stc
add
ja
jno
jl
jmp
dec
int
pusha
inc
rorl
mov
mov
fs
mov
xor
sti
pusha
das
ja
inc
add
mov
jmp
mov
sbb
and
mov
nop
add
jmp
cmc
inc
xorl
sbb
lods
push
stos
mov
dec
emms
rolb
or
icebp
out
adc
out
clc
ret
push
fs
lock
int
jno
dec
movsb
push
add
repz
in
das
shlb
and
cmc
mov
or
mov
ds
cmp
stc
arpl
lods
inc
xlat
out
cli
dec
pop
jb
jno
push
out
mov
jge
jmp
push
push
sub
cli
pop
std
in
xchg
in
xchg
and
push
out
push
sub
pop
insb
sbb
ret
out
push
movsb
mov
or
sbb
ret
push
cwtl
mov
push
add
lods
scas
stos
pop
stos
xorl
cmpsb
pusha
rcll
push
std
enter
insl
in
push
nop
aad
test
dec
pop
out
mov
jle
inc
sbb
mov
adc
push
inc
cmp
mov
sub
stos
pop
push
roll
cmpsl
enter
movsl
or
das
call
pusha
sbb
or
clc
loopne
sub
and
not
and
or
push
out
lea
popa
mov
jge
sahf
movsl
stos
lret
xchg
xchg
ret
xchg
stc
pop
bound
inc
add
pop
jbe
sub
or
pop
lcall
ja,pn
cmpsb
jne
imul
or
pop
out
mov
inc
mov
cld
addl
sbb
nop
mov
orb
xchg
push
push
fimull
pop
cmp
mov
lret
pop
das
sbb
jae
xor
lods
mov
xchg
in
sub
cmp
notb
loope
sub
mov
cmpsb
push
sub
out
in
cmc
fsubs
jl
mov
inc
std
dec
scas
jnp
in
cli
xchg
push
test
movsl
stc
pusha
loop
push
cmp
inc
pop
mov
shrl
mov
xchg
mov
push
pop
fadd
push
fbstp
mov
pop
inc
push
or
insb
inc
cwtl
dec
fcoml
mov
and
push
in
lods
xchg
pop
sbb
rcrb
xor
out
inc
sub
test
ficomps
xchg
cld
xchg
shll
rolb
idivb
mov
pop
in
push
sub
sahf
loope
outsl
out
mov
mov
shrb
popf
mov
sbb
ss
test
pushf
push
cli
sbb
push
fcom
test
imul
xchg
xor
repnz
fcompl
dec
mov
mov
test
ret
int
pop
jb
or
sbb
push
jp
mov
lods
mov
repnz
cmp
adcb
rcr
rorl
dec
lods
mov
dec
pop
jno
aaa
repz
js
lret
xchg
scas
std
push
sub
aad
inc
adc
sbb
int
daa
mov
adc
movsl
ret
fbstp
scas
cmpsl
pop
and
lahf
sub
xchg
in
in
push
bnd
jge
stc
loop
int
clc
pop
mov
clc
cmp
daa
int
lahf
into
add
dec
fcmovnb
pop
fidivrs
add
mov
sub
jmp
pop
inc
iret
int3
cmpsl
push
dec
sbb
mov
pop
imul
push
or
pop
mov
fidivrs
aam
xor
popf
cltd
pop
std
leave
sbb
push
adc
mov
test
je
mov
and
ja
aas
xchg
dec
inc
in
xor
pop
jb
pop
inc
push
mov
test
mov
ds
lea
cmp
iret
jecxz
push
add
gs
sbb
aad
fs
pop
inc
adc
adc
cwtl
sbb
pop
mov
inc
mov
and
jnp
es
sbb
popa
repz
xchg
lret
mov
dec
push
xchg
sub
iret
xor
addr16
sub
in
push
addr16
add
ficomps
lret
scas
fcmovnbe
mov
ss
data16
repnz
add
test
pop
xlat
minps
mov
pop
pusha
cmpsl
adc
orl
mov
pusha
insb
sbb
shll
jns
push
stos
inc
in
lahf
xchg
loope
scas
cwtl
dec
int3
fidivrs
jo
in
xorl
loope
js
popf
add
push
pop
orl
cmc
jle
xchg
pop
push
dec
imul
dec
cli
jp
sbb
or
ret
fcom
sub
add
shll
dec
add
pop
inc
or
lds
popa
xor
xchg
sub
mov
out
dec
inc
push
mov
jb
in
adc
jb
add
out
push
frstor
test
dec
mov
fcmovu
and
sub
push
scas
fisubl
insl
jne
addb
mov
leave
mul
cmp
push
in
xchg
cmp
xor
dec
lock
lods
jp
or
or
push
lock
leave
fiaddl
or
add
dec
mov
mov
stc
xor
addps
cmc
mov
push
add
ja
or
mov
pop
push
dec
scas
lret
jbe
push
mov
inc
mov
jecxz
or
and
jl
mov
dec
sub
push
xabort
dec
xchg
hlt
int
sbb
cmp
or
or
nop
mov
mov
jle
arpl
cwtl
push
popf
ret
test
inc
rorb
lods
and
xor
dec
push
xchg
cli
scas
icebp
outsb
shr
clc
sahf
lahf
int
subl
ficompl
adc
outsl
shll
mov
leave
xchg
inc
lods
mov
mov
push
cli
add
ljmp
je
ret
xchg
xchg
daa
and
mov
out
cmp
imul
cmp
clc
mov
jge
in
pop
scas
jecxz
adc
aam
and
aaa
lock
push
enter
inc
inc
xchg
cmc
pop
mov
hlt
xor
mov
test
mov
arpl
push
xor
xchg
xorb
cmp
testb
xchg
lahf
cltd
dec
or
cld
icebp
jb
sub
sarb
inc
adc
dec
adc
es
mov
mov
movsl
in
mov
arpl
rorb
mov
push
push
cmpsl
bound
inc
pusha
scas
jmp
iret
jbe
push
mov
mov
data16
xchg
add
gs
mov
push
jne
imul
lods
shrl
cmp
icebp
push
or
sbbb
sub
mov
or
ljmp
jb
mov
stos
std
xor
pop
dec
cmc
cli
jb
stos
sbb
mov
pop
popa
sbb
movsl
arpl
lret
clc
xchg
mov
fcomps
add
mov
cmp
mov
roll
insl
inc
jg
enter
scas
or
jle
sahf
aas
mov
popa
push
adc
pop
dec
scas
in
outsl
bound
lret
cwtl
int
shlb
out
cmpsb
lock
ret
aad
arpl
xchg
in
mov
xchg
inc
push
les
ret
dec
add
push
xor
jno
fs
pop
in
mov
dec
jmp
fsubr
or
out
jo
pop
jne
outsb
popa
push
iret
mov
das
dec
sub
pop
push
stos
pop
pusha
lcall
mov
xchg
rorb
mov
cmp
xchg
push
lret
fucomp
notb
std
mov
sub
add
mov
stc
push
loope
cs
jmp
mov
pop
pushf
cmp
mov
clc
inc
inc
mov
pop
add
xchg
add
mov
int
stos
rcl
or
xchg
stos
fs
add
mov
mov
jbe
stos
popa
push
cs
out
sti
adc
pop
push
cmp
pop
push
sbbb
mov
cld
in
ss
pop
jbe
add
jl
imul
add
lods
fdivs
fimuls
add
xor
out
stos
xchg
std
mov
xchg
or
icebp
push
lods
push
mov
es
insb
je
sbb
dec
repnz
lock
sti
dec
popf
hlt
adc
ret
scas
ss
xor
xlat
mov
cmp
cltd
pop
imul
outsl
daa
icebp
jo
mov
daa
je
ror
popf
sbb
cs
lcall
int
mov
ds
iret
pop
imul
hlt
int3
pop
mov
outsb
adc
push
cltd
adc
lds
outsl
mov
pop
filds
mov
inc
sub
lock
xchg
out
js
mov
xchg
jne
cs
dec
cltd
es
loop
icebp
imull
xchg
and
xor
sub
lret
pop
pop
movsl
cmp
lcall
jp
sbb
push
xchg
xor
subb
jle
nop
ret
arpl
cmp
aam
lock
repz
push
xor
mov
inc
mov
jns
not
in
pop
mov
jmp
mov
test
cmp
and
sti
sbbb
imul
or
inc
push
loop
movsb
push
inc
xlat
or
jmp
pop
adc
lahf
jmp
sub
dec
and
adc
rclb
mov
xor
xchg
int
inc
jo
mov
ret
lcall
test
xor
pushf
insb
mov
out
mov
fdivrl
pop
mov
repnz
mov
add
cmp
insb
in
js
fucomi
lods
mov
cwtl
in
pop
cwtl
cwtl
punpcklbw
repz
push
nop
arpl
ss
push
jmp
ficomps
lods
call
test
jb
xor
or
inc
push
outsl
jo
leave
aam
scas
push
and
xchg
add
adc
std
scas
jle
push
inc
push
mov
loope
fildl
fimuls
rclb
sub
xor
fbstp
cltd
push
fidivs
int
xchg
sbb
lds
cmpl
xchg
in
cmp
fwait
xchg
cmpxchg
dec
imul
lahf
shrl
lods
popa
mov
mov
aaa
fnstenv
loope
and
shr
or
mov
push
shl
mov
inc
mov
lods
jae
aad
push
cmp
cli
and
rol
xchg
loop
xor
inc
push
sarb
scas
xchg
inc
xchg
movsb
bound
nop
out
jp
enter
sbb
add
add
pop
bound
outsl
adc
mov
xor
lock
movsb
inc
js
sub
sbb
mov
loope
out
lret
mov
cmp
dec
adc
sbb
xor
jmp
add
jnp
popa
vshufps
xor
mov
orl
mov
iret
pop
out
enter
sub
sbb
sub
out
jl
imul
lods
jbe
das
scas
inc
add
test
hlt
in
icebp
call
xchg
je
dec
subb
fstpt
loop
mov
out
or
xchg
mov
std
int3
rcrl
or
ficompl
or
out
pop
push
push
scas
push
addr16
loopne
jge
int
xchg
jae
pop
cmpsl
movsb
xor
hlt
loopne
sub
dec
popa
lret
shrl
add
xor
fs
inc
int
xor
pmaddwd
jbe
jne
sub
mov
nop
dec
add
icebp
sarb
cmp
push
movsb
mov
je
xchg
faddl
daa
add
rclb
mov
lds
out
aam
cmp
ljmp
imul
fcoms
or
into
ds
dec
and
lret
bound
jl
inc
push
mov
shll
add
sti
scas
xchg
sub
add
xor
push
add
or
orb
adc
dec
std
ljmp
jl
cmp
lods
or
stc
dec
push
cmpsl
and
lcall
pop
sti
mov
test
js
mov
mov
fcomps
shll
mov
push
jecxz
mov
dec
or
iret
cmp
int
inc
lea
fs
mov
mov
and
push
add
pop
and
cs
mulb
dec
cmpsb
push
adc
cli
rol
or
stc
and
jno
xchg
inc
and
dec
mov
sub
xor
repz
es
jp
mov
loopne
push
add
cmpl
imul
pop
adc
dec
sbbl
inc
lea
int3
leave
lock
jge
pop
jecxz
push
pop
push
mov
inc
cmp
cmp
les
cmp
push
out
cmp
xlat
adc
inc
dec
inc
xchg
mov
arpl
fs
test
sub
dec
mov
pusha
sbb
inc
mov
nopl
adc
cmc
mov
xchg
jnp
cmp
jno
mov
lret
pop
dec
cmpsb
mov
sub
xor
jp
inc
aas
pop
jmp
mov
call
mov
sub
mov
add
pop
aaa
push
loopne
mov
jae
loop
lock
push
stc
addr16
test
push
inc
mov
add
push
dec
dec
push
inc
out
call
frstor
popf
push
xor
js
dec
bound
adc
xchg
xlat
cmpsb
fdivr
stc
cmpb
cmp
test
or
lock
cli
mov
mov
mov
push
cli
xchg
pop
imul
repz
push
out
jne
fsubr
insl
cmp
mov
lea
iret
sarl
sub
push
in
les
add
jle
aad
notl
push
scas
fadds
cmp
mov
sub
cmpsb
jb
sbb
jle
nop
cmc
mov
jbe
push
jle
in
jp
cmp
inc
lods
cmp
cld
push
sahf
icebp
mov
repnz
mov
dec
jg
in
xor
jl
sbb
mov
jg
mov
xchg
jns
mov
jge
or
dec
adc
loopne
adc
sbb
rclb
mov
inc
sbb
push
and
cmp
push
ljmp
shrl
push
js
sbb
cmp
pop
fcoms
fsubrs
lods
push
std
shrb
cltd
xchg
cwtl
dec
es
outsl
daa
dec
add
arpl
xchg
aam
inc
mov
push
mov
cmp
adc
fcomip
lret
and
or
mov
inc
stos
inc
sbb
inc
dec
jg
mov
data16
ds
mov
mov
jnp
jl
jns
dec
psrlq
dec
jmp
sbb
jp
into
shrl
mov
or
jle
xchg
add
repnz
lods
cmpsl
adc
jns
jp
add
or
xchg
push
xchg
push
sub
cmp
mov
insl
xchg
int
push
jle
les
mov
pop
pop
sub
push
cmp
daa
xchg
xorl
ror
xor
fbld
mov
dec
int3
jno
sti
xchg
jp
test
sub
and
add
jb
loopne
inc
fwait
loopne
lret
pop
scas
sbb
dec
popa
call
in
cmp
andl
push
mov
mov
int
xchg
jmp
and
jle
sbb
mov
test
out
mov
insb
int3
jbe
adc
fisubrl
in
mov
cmp
pop
std
sub
pop
call
lret
setge
mov
mov
pop
pop
or
mov
stos
mov
in
imul
inc
or
in
jle
iret
xchg
call
popl
adc
cmp
adc
cli
stos
dec
out
inc
ja
sbb
je
mov
add
pop
jle
push
xor
xchg
and
icebp
push
mov
sbb
outsb
or
jae
jl
push
xchg
nop
hlt
mov
sub
cmp
push
inc
sbb
xor
js
int3
mov
xor
add
or
out
inc
lods
sbb
lret
or
adc
fs
ds
mov
mov
adc
test
jg
movsb
insl
fiaddl
insb
push
icebp
jmp
xchg
push
or
jecxz
or
aad
fidivl
push
lahf
push
aas
cmp
enter
loopne
or
pop
mov
add
lds
lcall
add
notl
out
in
stc
xor
xor
sbb
int
pop
inc
push
dec
xchg
jp
aad
jb
pop
sub
bswap
push
cmp
int3
mov
mov
inc
add
xchg
jmp
xor
aas
mov
xchg
sbb
push
sbb
xchg
shrb
dec
scas
jmp
jecxz
cmpsl
dec
add
cmp
inc
inc
lret
out
jmp
mov
mov
mov
mov
adc
fdivrs
cs
mov
fsubr
icebp
and
nop
or
jg
adc
stos
lock
shrl
jl
or
pop
xor
and
xchg
subb
out
mov
out
or
fmuls
lods
insl
ds
das
sbb
inc
or
les
mov
es
mov
xorl
pushf
xchg
xchg
popf
inc
and
adc
mov
ss
add
mov
mov
and
bound
push
push
test
pop
xchg
rclb
cmp
jmp
or
sbb
pop
or
adc
or
push
xchg
or
andb
mov
pusha
scas
xchg
pop
pop
jb
or
cmp
pop
ss
mov
stc
popa
xchg
mov
pop
es
jl
mov
mov
aaa
push
jle
insb
addr16
sub
into
dec
sub
mov
push
cmpsb
and
leave
add
dec
mov
nop
jge
shrl
mov
lcall
das
mov
iret
test
mov
stos
add
test
mov
pop
scas
testb
out
test
xlat
iret
inc
lcall
imul
add
sub
call
aam
insl
push
xor
xor
jnp
xor
fwait
lods
sbb
mov
cmpsb
push
std
adc
std
pop
mov
cmpsb
fnstsw
ja
xchg
push
loopne
push
pop
fisttps
xchg
sbb
or
lcall
inc
adc
cmpb
xchg
fcompl
mov
fadd
cmpsl
sahf
pop
pop
popf
dec
inc
mov
loope
add
cmp
or
adc
push
imul
xor
jle
je
pop
adc
fnstenv
fdivl
jo
ffreep
dec
mov
sub
or
pop
xchg
or
outsb
in
gs
call
push
inc
add
lcall
sbb
cwtl
xlat
in
in
inc
ficompl
cmp
es
test
loop
and
hlt
mov
fwait
sbb
outsl
lahf
rcr
adc
pushl
jge
fisubrl
loop
repnz
mov
push
push
pusha
xchg
scas
ljmp
and
jp
data16
adc
test
and
fcmovne
ljmp
pusha
loop
add
pusha
mov
sub
adc
in
xchg
xchg
lret
insb
or
dec
jl
loop
jecxz
jnp
mov
mov
out
popa
mov
jg
push
dec
xor
cmp
xchg
pop
gs
pop
mov
and
sbb
sbb
push
iret
cltd
js
rolb
pop
pusha
nop
cmp
aas
push
pop
sbb
lock
and
and
in
mov
fsts
jne
loopne
pop
shrb
inc
push
imul
push
push
sti
dec
ljmp
sbb
push
mov
push
push
lret
push
xor
add
sbb
mov
hlt
inc
sbb
notl
inc
lret
xlat
or
movsl
cld
fidivrs
jmp
cmpsl
pop
out
jns
sti
bnd
jno
jno
and
sahf
mov
ficomps
push
jbe
pop
inc
push
stc
xchg
insl
mov
out
aaa
das
fdivrs
pop
aam
pop
scas
rcrl
std
sbb
pusha
out
fsubrs
pop
out
or
fstl
jnp
cmc
inc
adc
cltd
jbe
idivb
ja
div
mov
or
add
pusha
insl
cmpsb
lds
inc
mov
mov
push
inc
dec
inc
pushl
and
jne
sub
test
sbb
js
sub
pop
adcl
dec
clc
stos
stc
push
stos
xor
out
push
adc
add
andl
int
loope
mov
or
xor
into
clc
sub
push
cmpl
addr16
punpckhbw
in
cmc
cmp
xchg
adc
cmovl
mov
sub
xchg
or
pop
push
xor
imul
sub
jae
and
add
mov
sub
dec
fstpt
jp
xchg
rolb
jno
sarl
cwtl
adc
pop
xchg
cmp
cld
lret
pusha
xchg
push
lcall
lret
stos
dec
inc
push
add
push
sbb
mov
adc
inc
push
je
mov
sub
imul
mov
add
pop
jge
sarb
pop
cwtl
mov
bndldx
ljmp
jb
jg
xor
stc
insb
test
loopne
sub
xor
and
xor
cmp
inc
ja
mov
test
and
xchg
push
and
testl
nop
je
mov
pop
popf
andl
adc
jle
cli
pushf
mov
lds
sbb
add
dec
sbb
or
idivb
inc
pop
xchg
add
jno
loopne
sub
cld
icebp
shll
test
subl
pop
ljmp
outsb
or
loop
and
push
cmc
out
or
fs
inc
push
mov
mov
sub
inc
lods
pop
add
cmc
mov
fs
add
pop
psubq
lcall
jno
and
cmc
adc
aaa
dec
mov
movsb
test
jl
out
push
negb
cmpsl
or
enter
repnz
cwtl
xor
or
in
dec
push
lea
into
dec
inc
inc
fwait
jno
sbb
out
clc
cmpsb
mov
pop
sub
mov
adc
mov
mov
jae
rol
in
mov
hlt
sbb
imul
add
jg
lret
ja
ficompl
sub
neg
dec
xchg
add
js
insl
xor
cld
clc
jmp
cmp
jne
cmp
adc
imul
in
push
add
mov
jne
mov
leave
stos
xchg
mov
mov
out
mov
insl
or
pop
jecxz
sub
ljmp
push
xor
add
jecxz
lret
insb
push
sbbb
push
dec
mov
dec
mov
dec
xor
and
ss
clc
lahf
and
adc
into
cmp
xor
fcomps
jecxz
les
jnp
xchg
insb
sar
sbb
loop
adc
push
sbb
xchg
mov
push
jnp
pop
mov
lods
packssdw
mov
fists
and
je
aam
or
ficompl
aas
sub
inc
sub
push
pop
inc
std
pop
cmp
jb,pn
sbb
dec
lods
fstpt
imul
test
ror
aad
pop
push
in
in
dec
movl
sbb
lret
cli
jne
xor
int3
adc
divb
add
aam
mov
xchg
cmpl
push
inc
and
mov
mov
xchg
imul
hlt
addr16
loop
sub
fwait
ret
jmp
mov
out
loope
cwtl
stc
outsb
mov
mov
and
or
scas
push
add
divb
jmp
or
cmp
jae
xchg
call
sub
sbb
cmp
lret
lds
mov
lock
xorb
jecxz
les
adc
imul
mov
sbb
mov
aad
xor
aas
fldl
out
imul
rcrl
std
mov
adc
jae
sub
sub
aam
mov
and
or
jae
jmp
jbe
daa
scas
jns
shlb
pop
mov
rcrb
stos
push
jae
test
in
ss
dec
push
call
mov
push
mov
mov
scas
sbb
and
enter
jne
dec
jae
pop
jae
dec
ds
xchg
mov
push
out
in
mov
out
pusha
aam
out
cmpsb
mov
es
jne
ljmp
xchg
lret
xor
lock
data16
jns
and
push
adc
stos
imul
push
and
and
mov
cmp
mov
jns
pop
inc
outsl
mov
sub
test
shlb
mov
int
dec
subl
pop
mov
jo
mov
push
cwtl
imulb
push
mov
lret
fmul
sub
mov
or
cmp
and
mov
mov
fwait
loopne
sub
into
mov
jmp
mov
mov
sub
lods
jmp
ficoms
mov
add
cmp
aad
mov
addr16
pop
jb
and
add
mov
cmc
lret
and
cmp
insb
mov
and
ret
and
aaa
in
mov
cli
jo
gs
stos
jnp
lahf
push
and
sub
aad
daa
insb
mov
hlt
addr16
in
jle
mov
fmuls
jb
sahf
fsub
pop
mov
shrl
and
mov
push
adc
xchg
scas
mov
jl
enter
andl
lods
fucomip
pop
inc
aad
adc
adc
mov
sahf
ljmp
jp
loop
imul
inc
aaa
lret
fsqrt
loope
jp
push
ret
fs
rorl
ret
cmp
inc
dec
scas
jecxz
cwtl
mov
adc
cmp
inc
push
pop
pop
ljmp
adc
mov
or
les
pop
mov
inc
pop
sbb
adc
sbb
sub
add
enter
ljmp
ja
dec
lahf
ds
push
outsl
jp
cmp
xor
jmp
dec
mov
addb
imul
test
sub
test
mov
les
xchg
lret
pop
cltd
pusha
or
push
mov
sahf
and
mov
into
js
dec
ror
pusha
aaa
jnp
jmp
push
gs
mov
jecxz
ss
cmp
add
fwait
dec
ja
mov
mov
push
std
cmpsl
push
fdivrp
in
out
or
je
hlt
dec
js
mov
sbb
fwait
mov
xchg
shll
mov
arpl
push
insl
movsb
jno
mov
jp
fs
orb
pop
push
sahf
repz
push
pop
imul
fwait
ret
push
mov
adc
pop
dec
xchg
pop
sahf
das
mov
xchg
sub
inc
shll
and
fwait
xor
fildl
pop
cmpsb
bndstx
or
notb
mov
mov
xorl
cltd
mov
scas
or
xor
and
enter
push
enter
mov
ja
inc
jp
testl
scas
pushf
imul
or
lret
pop
add
jne
mov
mov
sub
mov
imul
pop
jp
in
inc
fcomi
cs
add
fistps
sub
jle
jb
shrl
mov
mov
jmp
and
sub
out
jecxz
les
daa
lods
clc
jbe
cmp
int3
cmp
lcall
xorl
loop
repnz
sbb
in
xor
jl
add
push
rcrl
mov
ret
adc
sahf
lcall
loopne
jle
ficompl
push
outsl
mov
add
add
xor
into
mov
xchg
dec
popf
sbb
inc
aam
daa
mov
sub
out
rcrb
ss
shlb
es
iret
jne
test
popa
and
xchg
mov
test
pop
enter
popa
jb
or
cli
dec
or
dec
xor
mov
shll
popa
inc
shrb
stos
insb
mov
adc
fs
and
cld
xor
pop
jecxz
and
sbb
pop
cmp
sbb
cmp
imul
lcall
hlt
jmp
cmp
mov
pop
mov
adc
int3
cmp
aad
cmp
sbb
aaa
fs
lods
jmp
pushl
in
push
fwait
cmp
adc
movsl
inc
mov
mov
movsb
icebp
and
pop
or
mov
xchg
lods
and
daa
aas
pop
shrb
int3
fs
add
stos
mov
xchg
push
stos
jp
cmpsb
js
inc
push
pop
sbb
pop
fnsave
ret
lock
xchg
shlb
out
jle
lods
loope
enter
or
int
test
pusha
sub
iret
adc
sub
test
lea
call
mov
mov
adc
ss
ret
push
in
jp
cmp
pop
loope
adc
aam
repz
sbb
out
xchg
xchg
cld
sbb
std
sub
lahf
push
imul
imul
shl
testl
pop
add
nop
in
ja
aas
mov
jle
repz
mov
pop
outsl
popf
ljmp
rcr
mov
js
add
jge
pop
out
mov
xchg
jae
rclb
repz
ret
and
mov
pop
lods
psllw
lret
sbb
bound
mov
xchg
cli
insb
mov
idivb
shrb
mov
dec
lods
pop
int3
fst
jge
mov
lahf
insl
push
ror
movsl
lods
dec
cltd
popa
cs
jo
aam
loopne
xchg
bound
adc
sbb
lds
fwait
loope
sub
xor
add
pop
and
push
and
cmp
repz
notl
push
mov
test
push
inc
test
push
mov
test
inc
cmp
mov
popf
jne
pop
push
xchg
iret
jne
cmp
push
jne
aaa
insb
jg
mov
cmpsb
dec
xor
dec
rorl
ja
push
add
mov
mov
loopne
and
test
aad
xchg
js
adc
out
push
pop
mov
popa
divl
testl
cmp
test
ficoms
fdivrs
inc
mov
mov
outsl
inc
std
push
or
out
mov
icebp
cld
push
icebp
popa
push
sti
sbb
sbb
sub
pop
xor
inc
fnstenv
aad
xchg
scas
stc
mov
das
push
inc
sbb
add
popf
les
dec
sub
add
mov
cwtl
mov
push
int3
cmp
sbb
and
call
sahf
xor
std
fwait
pop
inc
adc
fidivs
lcall
aaa
mov
mov
fisubrl
mov
je
into
std
loope
insb
cmpl
aas
int
pop
loope
shlb
dec
dec
jo
movsl
mov
shll
adc
lcall
or
or
popa
loope
fimull
pushf
push
or
push
push
pop
jecxz
roll
push
aad
dec
test
inc
cmp
jbe
mov
push
cmp
dec
icebp
or
imul
pop
jg
fdivl
mov
jns
out
ljmp
add
outsb
mov
cmp
test
xchg
fldenv
sub
push
inc
mov
js
dec
pop
lcall
pop
shlb
call
dec
arpl
push
xlat
push
xor
rcrb
dec
loopne
inc
mov
jge
jmp
jne
push
int3
cmpsl
int
addr16
mov
aas
ss
loop
push
lret
push
imul
je
inc
scas
aaa
mov
popf
arpl
inc
dec
inc
ss
jae
xchg
push
cmovp
xchg
pop
mov
stc
cmp
push
cwtl
add
mov
jmp
xchg
sarl
subb
mov
cmp
xlat
call
inc
mov
mov
out
sub
jnp
out
movsl
jns
outsl
push
test
push
push
mov
push
mov
sub
jmp
cmp
sub
dec
loope
xlat
shl
mov
in
pop
out
sbb
sahf
mov
mov
inc
sbb
push
mov
pushf
jl
cltd
sub
movsl
fxch
fisubs
mov
repz
in
in
scas
pop
push
dec
mov
push
push
aam
push
mov
test
cmc
inc
sar
sbb
imul
outsl
xchg
into
out
outsb
push
rcll
mov
popf
loopne
add
and
and
mov
or
clc
mov
sbb
sub
incl
jmp
repnz
pop
adc
xchg
lods
std
mov
xchg
sbb
jo
test
mov
notb
into
stc
pop
mov
xor
ret
jl
push
dec
pushf
sbb
fiadds
lds
dec
jle
fs
adc
push
repz
or
sub
adcl
rorl
jae
movsl
mov
fcomps
das
fimuls
xor
fisttpll
das
fnstsw
shlb
mov
xlat
into
shrl
jl
add
mov
jns
rcrl
loop
pop
fidivrs
mov
add
sahf
add
movsl
ds
jno
fstps
and
iret
xchg
cs
into
js
out
cld
jne
pop
or
std
sbb
inc
out
aaa
movl
xor
mov
adc
mov
sbb
loop
fnsave
sbb
push
scas
outsb
add
push
shll
xchg
cmp
add
and
dec
adc
dec
out
ror
aaa
movsb
dec
or
jnp
in
inc
mov
sbb
dec
je
sbb
sub
sti
push
out
xor
imul
sub
clc
lret
es
xchg
mov
std
push
mov
lahf
mov
inc
mov
out
mov
fdivl
mov
into
add
inc
jo
mov
gs
dec
cmpl
aaa
mov
je
dec
shll
rcrl
cld
jg
ret
cltd
dec
mov
scas
jp
es
mov
lea
mov
jbe
loope
jmp
imull
cmpsl
jo
and
mov
xor
aam
adc
add
shll
jnp
xchg
in
dec
and
adc
lret
dec
pusha
pop
push
add
pop
popf
stos
jbe
or
in
add
outsb
mov
adc
icebp
adc
push
xlat
nop
xchg
das
jmp
insb
mov
leave
xchg
push
test
pushf
mov
mov
dec
mov
sbb
xchg
dec
pop
mov
push
mov
jb
or
mov
add
faddp
fiadds
ficoml
sbb
test
inc
mov
ljmp
dec
push
inc
fnstenv
stos
aad
scas
cmc
sarb
mov
js
outsl
lcall
bound
push
mov
leave
imul
or
mov
inc
pop
adc
js
pop
lret
test
aas
mov
lahf
jno
cmpsb
mov
add
dec
mov
push
cmp
pop
test
sub
pop
sub
xchg
fiaddl
push
gs
mov
aaa
leave
mov
and
push
inc
fwait
pusha
xchg
sub
mov
dec
aaa
pop
inc
repnz
loope
sahf
or
rcl
lss
pop
test
dec
dec
dec
in
pop
push
lret
dec
clc
shrl
hlt
push
xchg
rorb
test
sbb
ret
xor
dec
inc
sti
rcll
shll
fidivs
sahf
fldl
cmp
mov
jmp
movsb
leave
mov
in
aam
xchg
cli
inc
jp
rclb
movsb
out
enter
leave
mov
test
xchg
mov
cmp
aad
xchg
sbb
inc
scas
add
pop
icebp
rcrl
mov
sub
test
movsl
std
pushf
rorl
andl
loop
nop
adc
xchg
cmp
scas
add
sub
mov
shlb
pop
inc
jmp
sub
out
fbstp
pop
loope
das
pop
and
mov
or
jae
dec
pop
and
decb
xchg
and
test
ljmp
jae
jge
lea
mov
test
mov
jbe
pop
popf
imul
dec
mov
adc
dec
out
cmp
xor
or
push
pop
sub
xchg
mov
in
adc
inc
xchg
mov
icebp
jge
mov
movsl
ss
insl
inc
pop
fstpt
in
mov
pop
xchg
repnz
push
rcl
add
jmp
leave
pop
lcall
inc
sub
cmp
add
sahf
lds
lret
sarb
mov
add
xchg
adc
dec
mov
xchg
and
mov
cmp
in
mov
cmpsl
sti
adc
jnp
hlt
cmp
cld
fnsave
pop
inc
imul
nop
add
daa
xchg
push
jp
loope
ja
jge
int3
cmpsl
imul
inc
add
jmp
pop
or
popf
sbb
shll
cmp
adc
sbb
rolb
and
and
ret
loop
and
or
and
or
jb
scas
add
sub
and
mov
outsl
sub
add
js
mov
jl
cmp
mov
rorb
sub
daa
scas
std
je
bound
and
jmp
inc
and
add
push
mov
les
ds
cs
mov
mov
adc
int
xor
out
and
in
and
lcall
in
out
std
dec
xlat
xchg
mov
lret
push
int3
ja
scas
xor
jg
out
mov
xor
ja
xlat
lahf
les
sti
inc
add
divb
xor
cmp
pop
pop
inc
inc
xchg
lea
adc
out
dec
adc
aad
repnz
inc
dec
dec
and
cltd
test
arpl
xlat
sub
dec
adc
arpl
sahf
push
dec
xchg
aad
dec
sbb
mov
xor
jge
enter
ja
mov
pop
testb
or
push
mov
in
daa
mov
and
mov
in
or
or
repnz
ror
sti
jmp
call
sbb
aad
out
stos
xchg
cmp
subl
jge
sbb
inc
mov
mov
sbb
add
cmpsl
or
or
jg
shlb
jns
jnp
imul
in
data16
inc
inc
js
lret
add
shlb
dec
dec
or
fdivrs
sbbb
and
and
cs
dec
outsb
subl
sbb
xchg
mov
ljmp
test
jmp
imul
popf
jbe
mov
mov
rcl
dec
dec
adc
cmp
fisttpll
hlt
rcr
jp
out
movsb
adc
adc
add
or
pop
pushl
fistps
insl
arpl
data16
aas
in
adc
fsubrl
sti
test
repnz
jp
ret
cmpsb
push
ret
sub
aad
pop
cmp
xor
loopne
in
dec
xchg
add
addr16
mov
add
xchg
es
popf
jne
sar
ds
cmp
stc
push
sbb
nop
or
clc
test
mov
inc
cmp
out
or
jmp
enter
mov
xor
ljmp
das
jbe
pop
mov
push
popa
lahf
and
cmp
cs
or
out
aas
lcall
ja
inc
and
test
fcoms
add
xchg
inc
sbb
mov
lcall
mov
inc
push
push
pop
icebp
pusha
clc
mov
xchg
sub
cmpb
sbb
pop
sub
ljmp
aaa
out
adc
jle
lret
outsb
imul
enter
jb
xlat
notb
mov
cmp
into
jmp
pop
subl
arpl
int
pop
ret
ljmp
inc
stc
jnp
repz
sbb
mov
or
int3
or
jnp
int
bound
push
adc
push
cld
cmpb
loope
mov
lcall
sahf
cmp
or
jl
sti
ljmp
jecxz
pop
pop
stos
dec
mov
xor
sbb
sbb
aam
fs
mov
stc
push
push
mov
sbb
icebp
push
insl
mov
cmp
add
shlb
sub
cmp
jmp
imul
and
leave
in
imul
add
int3
xchg
out
imul
daa
push
jmp
dec
sti
fdivs
push
ret
or
scas
inc
push
lret
iret
and
add
mov
xchg
jno
imul
arpl
cmp
jge
sbb
repz
scas
adc
push
lea
decb
out
insb
and
mov
mov
aad
pop
cltd
jg
mov
pop
hlt
fidivs
mov
adc
and
jg
jl
mov
and
subl
fsubrl
jnp
mov
mov
scas
inc
push
push
jl
jns
stos
jnp
lahf
fists
fnstsw
sub
push
pop
cmp
cmc
into
fwait
jae
jge
xchg
xor
push
gs
in
jp
or
dec
fiaddl
adc
pushf
std
das
hlt
in
xchg
call
not
push
pop
dec
push
mov
jmp
push
jg
repnz
fldpi
jne
inc
mov
ret
stos
adc
push
js
aaa
dec
mov
jnp
ja
xchg
aas
inc
and
mov
mov
aaa
mov
test
mov
push
push
aaa
jbe
push
jae
mov
cmp
jecxz
pushl
repz
xor
push
test
push
xchg
in
push
nop
out
cltd
daa
pop
cmp
lret
pop
stos
inc
test
mov
hlt
mov
dec
in
in
bound
fisttps
and
aaa
adc
jno
stos
inc
std
sub
dec
push
dec
push
dec
sub
aad
jge
add
xor
sbb
stos
mov
inc
out
lret
insl
jp
lea
bound
add
cwtl
dec
inc
pop
jle
pop
jo
fucomp
in
or
adc
das
in
je
sahf
ss
push
std
packssdw
test
xor
bound
xchg
mov
pusha
add
mov
loopne
sbb
fst
adc
sub
pusha
xor
mov
in
xchg
sbb
or
pusha
pusha
cwtl
and
sbb
push
jo
and
pop
cs
pop
mov
xchg
sub
sub
shll
in
push
pop
enter
rcr
sbb
pop
sarb
mov
ret
data16
cmp
pop
pop
lcall
daa
dec
lods
shl
push
call
gs
loopne
xchg
add
popa
add
jno
ja
stos
out
arpl
aaa
cwtl
sbb
push
mov
insb
shrb
and
outsl
adc
and
inc
cmp
lret
shrl
ret
jg
sahf
in
nop
fiaddl
les
push
cmp
es
inc
sarl
adc
loope
push
cmpsb
faddl
and
ljmp
int
fcompl
xchg
jns
cmp
ja
pushf
outsl
lock
sub
xlat
in
mov
dec
xor
and
add
addr16
cmp
rcll
rorb
jle
mov
ljmp
mov
xor
rorl
cwtl
pusha
pop
cmc
in
pushf
jno
xchg
and
bound
sub
jge
mov
dec
dec
stos
cltd
daa
ret
pop
mov
and
jle,pn
pop
out
in
inc
mov
cmp
lock
je
sti
mov
js
sti
dec
mov
ficoml
mov
adc
neg
push
daa
jne
mov
stc
push
data16
mov
sbbb
in
stos
scas
jl
xchg
xchg
pop
cltd
push
xchg
in
pop
pop
fdivs
dec
movsb
jge
jp
gs
fisttpll
sub
ret
scas
cld
das
mov
ljmp
lahf
xchg
mull
xor
lods
add
dec
jge
dec
or
adc
icebp
ss
fldt
shll
xchg
cmpsb
bound
mov
pop
outsb
out
ja
xchg
mov
push
cwtl
pop
add
shr
iret
dec
cmp
addr16
mov
js
insl
loopne
xchg
lds
xchg
inc
adc
sbb
jno
push
inc
jmp
xor
add
dec
pop
adc
inc
pop
mov
mov
stc
hlt
pop
or
shll
shll
imul
pop
xor
repnz
inc
rcr
push
jle
pushf
es
icebp
add
movsl
mov
xchg
mov
push
test
pop
push
mov
dec
ja
sub
or
sbb
cmc
cmp
jae
dec
ja
cmp
out
mov
addr16
imul
pusha
movsb
data16
jg
jmp
or
dec
xor
or
mov
fstpl
dec
cltd
ret
dec
push
mov
mov
cli
or
cmp
mov
push
gs
out
ret
cs
sub
add
xchg
mov
std
xchg
xchg
inc
imul
cmp
inc
jp
ret
inc
pushf
insb
adc
jb
mov
jle
push
mov
and
imul
outsb
add
or
mov
sbb
xchg
dec
nop
icebp
mov
mov
ret
cmp
lcall
mov
cs
pop
push
or
mov
pop
jp
pop
lret
js
lods
call
pusha
stos
jnp
sti
cmpsb
addr16
pop
popa
scas
lret
stc
adc
xor
scas
les
xor
es
pop
fld
mov
or
sub
inc
fnstenv
inc
and
xor
inc
add
cmp
sbb
and
fstl
fidivs
jmp
adc
pop
xor
repz
mov
jle
nop
cld
loop
js
fistps
sbb
mov
push
push
in
mov
or
jo
xchg
cltd
scas
mov
adc
insl
pop
mov
loopne
jmp
ret
and
sbb
pop
in
inc
clc
add
js
je
mov
fwait
aaa
inc
out
xor
mov
jae
mov
pop
jmp
or
add
push
test
test
xchg
jmp
in
mov
cld
push
hlt
into
jne
and
movsb
stc
sbb
cli
int3
cmpsb
cltd
je
cmp
cmp
rcr
call
in
xchg
imul
push
ljmp
mov
ficoml
jns
adc
rcrl
jp
lcall
aaa
xlat
pop
out
lods
aaa
mov
xchg
cwtl
lock
and
lcall
jbe
mov
push
popf
out
push
fnsave
mov
push
sub
das
xor
push
insl
xor
sahf
lods
mov
xor
in
push
repz
aad
push
jecxz
mov
mov
mov
mov
pushf
dec
fldcw
stc
cs
not
dec
sub
mov
xchg
mov
mov
test
dec
notb
fisubs
pop
mov
mov
jb
scas
xchg
cmp
lahf
cltd
dec
decb
adc
fcos
rclb
mov
or
pushf
cltd
mov
sub
jno
and
rcrl
jb
mov
jecxz
dec
ss
addr16
and
clc
clc
divl
sub
outsl
inc
ficompl
pop
out
jp
inc
loope
out
pop
push
xor
mov
pop
mov
cmp
jge
xchg
out
sub
cmp
lret
mov
xchg
leave
mov
mov
inc
jne
mov
dec
add
dec
mov
mov
ror
iret
rcrb
shlb
enter
add
fst
daa
pushf
ss
dec
movsl
fcoms
imul
inc
push
pop
or
mov
inc
out
packsswb
jl
insb
icebp
and
sahf
jecxz
add
mov
aas
mov
rorl
jo
jmp
divb
adc
nop
cli
jno
push
sti
ss
fsubrl
inc
inc
mov
insb
lods
rorb
mov
sti
mov
outsl
lcall
lods
dec
push
push
mov
mov
mov
cmp
repz
sbb
or
mov
mov
dec
push
daa
xchg
mov
addr16
sub
fisubrs
mov
mov
push
and
sbb
in
cmpsb
into
lds
clc
adcb
xor
xchg
shrb
mov
stos
in
and
shll
test
add
jo
push
test
jp
xchg
push
lret
add
stos
out
outsl
mov
jmp
adc
pop
mov
mov
call
xchg
and
pop
mov
cmp
sbb
mov
xchg
out
pop
cld
leave
and
pop
lcall
cld
and
cli
rcll
mov
test
mov
cltd
xor
mov
inc
pushf
adc
test
popf
adc
push
lret
mov
lock
push
mov
fadds
lcall
das
inc
fs
jno
cwtl
sub
or
sti
dec
jge
jo
push
push
hlt
and
ja
fadds
mov
repz
lahf
mov
cmp
leave
or
ljmp
xchg
dec
sub
test
pop
jecxz
push
inc
loopne
daa
and
leave
pcmpgtd
sarb
mov
or
mov
in
rcrb
mov
push
out
add
cltd
stc
loope
cltd
roll
adc
stos
scas
movsb
iret
loope
cmp
je
mov
cmp
pop
aam
add
jle
mov
pop
daa
xchg
sahf
in
fdivs
xchg
or
fcoms
int
subl
adc
cmp
dec
xchg
and
lods
idivb
cmp
jns
sub
xor
adc
test
mov
sbb
test
jmp
jne
pop
pop
push
add
arpl
mov
pop
jl
arpl
push
sub
or
push
pusha
xor
cmp
push
loope
test
rclb
rorw
rolb
xor
outsb
inc
imul
pop
mov
xchg
imul
jnp
pop
pusha
and
mov
push
dec
dec
std
xchg
add
out
stos
addl
fwait
xor
dec
adc
and
mov
lret
stos
adc
je
xchg
aaa
push
and
stos
jle
movsb
jnp
sub
inc
dec
inc
bound
mov
js
ja
enter
pop
mov
les
dec
cmp
xchg
jl
pop
inc
xchg
arpl
sub
orl
cmp
inc
adc
sahf
mov
inc
test
outsl
add
data16
mov
lret
aas
push
mov
lea
jmp
and
dec
and
push
add
or
inc
dec
cmp
sahf
nop
movsb
and
fisttpll
xchg
in
pop
push
xchg
movl
lret
pop
popa
push
jns
je
mov
mov
sub
jb
iret
aam
shlb
or
divb
ljmp
pop
inc
pop
cmp
fisubl
xor
fdivrl
adc
mov
test
imul
dec
jno
sbb
lahf
mov
jb
stc
dec
mov
movsl
mov
enter
add
mov
mov
and
outsl
in
add
repz
sti
adc
mov
add
mov
mov
sbb
adc
mov
sbb
push
add
pop
xchg
pop
test
pop
mov
mov
push
mov
scas
pop
pop
push
icebp
mov
xchg
mov
leave
xchg
fmulp
stos
xchg
cmp
inc
lret
icebp
call
and
dec
and
je
dec
sbb
jne
add
mov
dec
sub
xchg
enter
or
in
lahf
mov
push
mov
es
dec
add
pop
fs
imul
dec
into
adc
cli
inc
push
push
push
aaa
outsb
xor
movsl
adc
mov
dec
push
ds
push
add
mov
sbb
sahf
nop
xor
andl
adc
test
mov
dec
sub
push
mov
jl
roll
pop
push
push
cmp
adc
add
pop
jb
add
inc
and
mov
in
call
insb
stos
xor
rolb
mov
pushf
jns
cltd
inc
icebp
shlb
ds
jge
mov
mov
stos
insl
in
adc
daa
xchg
scas
std
jmp
stc
ficomps
adc
jg
mov
push
and
imul
inc
push
jmp
shll
xor
stos
adc
sbb
and
roll
xor
dec
mov
int
test
pop
bound
test
sub
or
pop
and
fcompl
insl
int
rcrb
push
aas
mov
dec
inc
clc
rep
xchg
dec
aaa
adc
jle
mov
push
inc
lret
push
cld
push
xor
ret
test
jno
sti
jbe
sbb
test
push
push
rorb
outsl
and
jge
stos
or
jmp
push
ficoms
sti
rcl
add
mov
icebp
shll
fdivl
je
jae
and
clc
push
dec
fdivl
inc
lret
add
lods
outsl
push
pop
inc
mov
notb
cli
adc
fcompl
push
aad
call
lcall
push
add
xorb
mov
xchg
nop
daa
int3
imul
add
cld
loope
gs
adc
pushf
xchg
jp
aam
test
addl
mov
cmp
sbb
xchg
jne
adc
int
imul
lret
mov
inc
inc
push
in
inc
inc
insl
xlat
fnstenv
dec
xchg
push
adc
xchg
js
adc
in
inc
push
dec
pop
inc
test
mov
jo
call
arpl
fisubl
pop
lcall
add
push
jl
inc
inc
popa
xchg
mov
in
in
xchg
xor
dec
iret
adc
pop
rorb
in
push
add
addr16
xor
lret
outsb
push
ss
push
int3
bound
sub
out
mov
les
adc
dec
lcall
add
jmp
inc
loopne
mov
cmp
dec
out
loope
repz
xchg
lea
fwait
sbbb
mov
pop
bound
fs
in
cltd
mov
inc
cmp
xchg
xor
pop
gs
lahf
push
mov
adc
call
in
pop
sub
shl
out
fimull
imulb
pop
orl
scas
or
fdivs
sahf
icebp
faddl
adc
xor
in
cli
daa
dec
cli
cmp
jae
stos
subb
mov
fs
mov
add
sbb
jmp
aam
push
lods
fucomip
gs
les
jecxz
ss
imul
or
or
popa
cmc
jae
lret
jecxz
je
and
cmp
out
inc
ds
push
das
xchg
inc
push
imul
test
sbb
sbb
cwtl
xor
adc
inc
adc
lea
xchg
addr16
sbb
sbb
push
mov
dec
push
scas
scas
pop
mov
jl
scas
lcall
call
dec
jo
sub
jno
loop
ror
mov
inc
xor
cmc
or
push
and
jno
and
je
mov
es
out
inc
jnp
in
jne
repz
filds
xchg
pmulhuw
sbbl
inc
addr16
lods
andb
cld
xor
cmp
push
sar
int
repz
xor
rorl
ja
adc
int
shrl
pop
mov
mov
jo
cmc
mov
je
adc
insb
aaa
int
enter
mov
dec
popa
dec
leave
mul
jg
sbb
xchg
dec
sub
jne
inc
es
or
xchg
jnp
jg
loope
enter
jb
sub
pop
inc
jbe
and
daa
cmp
in
cmc
jecxz
loopne
in
fbld
add
pop
out
jmp
pop
inc
into
cmc
mov
push
popa
push
mov
xor
dec
fildll
dec
mov
icebp
add
jecxz
repnz
sbb
adc
ucomiss
jno
neg
xchg
mov
mov
in
fldl
ret
xchg
add
sbb
xor
imul
sbb
iret
and
dec
adc
imul
mov
dec
add
fsubrs
daa
subb
in
jl
and
cld
jg
xor
jle
cmp
jnp
sbb
mov
and
shlb
sbb
dec
or
test
push
inc
insl
push
lds
in
xchg
psubusw
sub
mov
movsbl
inc
test
in
mov
mov
fsubrl
pop
dec
mul
mov
dec
sbb
icebp
inc
fwait
shlb
xchg
sbb
out
test
push
mov
sbbl
mov
or
cmpl
bound
cltd
fwait
mov
shlb
fwait
sbb
xchg
jecxz
mov
cld
and
pop
jns
or
xor
insb
pusha
imul
cwtl
sbb
and
jae
xlat
adc
xchg
jo
lds
adc
mov
clc
dec
scas
inc
ds
cli
xchg
push
and
mov
adc
mov
inc
sbb
repnz
ud2
roll
fisttpll
xor
scas
sub
add
mov
xchg
stos
jmp
pop
xchg
pop
xor
push
lods
mov
call
jns
imul
inc
dec
xor
cmp
pushf
ret
out
mov
mov
sub
outsb
push
adc
ret
pushf
dec
xchg
dec
cmp
push
sub
mov
push
aas
add
adc
mov
xlat
push
test
ret
je
test
not
mov
jmp
sahf
mov
mov
mov
dec
push
rcrl
and
cmp
fcmovnbe
cmpsb
push
add
call
rorl
jmp
in
daa
scas
mov
push
sbb
shl
sbb
leave
sarb
mov
push
test
enter
xor
push
dec
mov
sub
dec
into
and
addr16
ret
andb
cmp
sbb
fnstenv
lods
movsl
adc
stc
xchg
jae
jno
mov
xchg
mov
imul
inc
or
inc
fsubrl
ja
inc
push
mov
mov
iret
add
xchg
cs
cmp
sub
xor
mov
xlat
lret
xchg
pop
jecxz
jmp
ret
loop
adc
les
lret
push
hlt
cwtl
in
xchg
or
aas
jmp
xor
sub
fstps
mov
aad
xchg
out
icebp
in
sub
lds
sub
pop
fldcw
xchg
sbb
in
imul
push
and
outsb
sbb
mov
in
insl
in
jl
push
andb
lock
xchg
or
scas
or
xor
xchg
push
and
sub
lock
and
pop
sbb
lods
cld
inc
les
or
hlt
or
scas
add
fildll
or
xor
push
in
cmp
popf
mov
mov
sahf
push
push
test
xor
cli
add
scas
xor
hlt
shrb
sbb
std
dec
xor
jmp
jne
fmull
dec
fdiv
sar
dec
push
inc
jno
sbb
xor
stc
mov
or
imul
cmp
lret
dec
cmp
or
cwtl
adc
or
sbb
push
rcll
andb
rorb
adc
sub
adc
mov
dec
dec
cmp
fs
cltd
ret
cmp
dec
sbb
sarl
test
ljmp
xor
popf
in
mov
pop
sbb
inc
push
xor
sbb
sub
imul
std
dec
mov
xor
xchg
sahf
mov
mov
adc
inc
popf
leave
sbb
add
div
inc
mov
cmp
push
mov
std
or
pushf
adc
repnz
jne
repnz
sbb
sbb
push
imul
dec
mov
sub
add
mov
loope
cmp
sti
pusha
shlb
sbb
mov
repnz
repnz
cwtl
sbb
mov
int3
mov
jb
cli
lea
test
inc
aad
jne
jns
jnp
push
xor
xchg
adc
gs
inc
into
xchg
aam
sbb
shr
out
ss
jge
mov
aaa
stos
cmc
jo
js
dec
out
xor
cs
jmp
xlat
mov
push
cli
ss
cmp
lret
jmp
jle
xchg
test
stos
lcall
adcl
imul
nop
les
mov
clc
xlat
xchg
shll
adc
je
jne
stos
push
jmp
jno
mov
movsl
enter
fdivs
mov
push
jmp
ret
lcall
jl
and
mov
in
out
sbb
je
xor
dec
ds
les
xor
pop
adc
jno
jns
pop
shll
pop
in
adc
push
inc
cmp
inc
divl
or
pop
pop
mov
mov
pop
and
pop
ret
jne
ret
xor
into
lock
cld
inc
divl
jae
or
add
repz
int3
enter
inc
pop
dec
sbb
mov
inc
sbb
test
mov
sbb
iret
lds
gs
or
adc
or
nop
add
and
aas
imul
repnz
pop
idivl
and
aaa
icebp
shlb
fbstp
lods
mov
fnstsw
popf
test
sub
mov
dec
cmpl
xchg
push
push
popf
mov
test
dec
inc
sub
fbld
out
pop
test
sub
and
scas
mov
ljmp
lock
jmp
inc
fwait
cmp
insl
stos
push
fldcw
jecxz
adc
stos
mov
iret
jbe
or
imul
push
rolb
xor
push
sbbl
and
sub
in
test
test
adc
mov
push
test
pop
stos
cmp
inc
sub
mov
dec
xor
mov
shl
jne
pop
inc
shr
imul
cmp
sub
and
scas
inc
divb
rolb
pop
xor
cltd
stos
pop
imul
test
ja
push
xorl
test
lods
arpl
mov
xchg
lds
lock
and
cld
jb
jmp
lret
insl
shl
fs
enter
mov
ljmp
or
add
push
addr16
ror
pop
loopne
aad
fucomi
in
je
cmp
cmc
lea
dec
nop
push
mov
add
in
scas
vpcmpgtb
mov
cmp
ja
xchg
test
test
push
in
subl
test
cld
lahf
or
aam
int3
dec
outsl
in
add
arpl
add
mov
std
loop
cmp
rol
jns
std
clc
mov
negb
rolb
sbb
lret
or
mov
push
sub
cmpsb
inc
inc
jmp
fsts
ljmp
in
fnsave
faddl
sub
rcr
mov
pop
aad
jp
shrl
xlat
mov
test
adc
cmc
fsubs
addr16
adc
adc
divl
loope
mov
pop
je
push
sbb
jle
sbb
aaa
and
cmpsl
dec
iret
je
testb
lcall
or
push
mov
sbb
test
mov
cmp
pop
dec
insb
jp
test
and
mov
pop
arpl
ds
ljmp
xor
pop
adc
push
and
adc
sub
mov
or
divl
mov
xchg
jno
repnz
xchg
push
xor
sbb
cli
xchg
sarb
sub
dec
dec
or
xor
push
in
int3
push
pop
jb
xor
and
cmpsl
inc
mov
test
in
in
and
mov
add
pop
int
xchg
or
aam
pop
aam
push
or
stos
aam
daa
fbstp
popa
mov
dec
mov
shlb
xchg
ret
nop
mov
xor
pusha
inc
sbb
shrb
sbb
ja
or
mov
mov
mov
fistpll
adc
cli
cmp
dec
jp
mov
xor
mov
xchg
ret
adc
add
xchg
pop
lahf
pop
cmpsb
stc
mov
jp
ss
mov
ret
push
subl
mov
je
or
neg
ss
hlt
in
cmp
and
in
inc
imul
inc
sbbb
jge
jne
lock
mov
cmpsl
mov
bound
xchg
fs
loope
divl
and
jle
repnz
call
sbb
lret
push
mov
movsb
in
cmp
dec
xchg
inc
mov
cmp
xchg
popa
sbb
fists
sbb
cmp
xchg
add
pop
jns
int3
dec
sbb
add
frstor
dec
mov
mov
enter
mov
push
jp
xchg
stos
pop
jb
sbb
lahf
sub
loop
fnsave
fdivs
pop
push
stos
fsubrs
mov
lods
in
js
gs
jle
repnz
xchg
add
jns
xchg
dec
and
into
fsts
nop
cs
sub
mov
lret
test
sahf
int3
cmp
fnstenv
pushf
cmp
and
inc
dec
xchg
jge
mov
mov
add
cmp
sbb
cmpl
mov
or
fwait
lods
mov
mov
cmp
fistpl
sbb
pop
lret
dec
jp
clc
dec
xorb
inc
xlat
sub
inc
les
sbb
cmpsl
lock
and
push
mov
ljmp
sbb
inc
pop
test
fldenv
mov
mov
out
in
stos
inc
arpl
jno
add
fndisi(8087
stc
sbbl
adc
into
loopne
filds
sub
gs
dec
ljmp
pop
dec
cmpsl
call
pop
sbb
adc
loopne
xor
mov
jp
mov
and
dec
dec
and
inc
jl
or
nop
xor
xchg
mov
lods
or
cmp
mov
mov
or
jo
hlt
cmp
inc
fsubs
ja
jg
mov
mov
or
add
imul
adcb
clc
cmp
popa
popf
pop
ret
out
xorb
mov
jb
push
test
stos
push
sar
xchg
xor
sarb
add
daa
pop
out
xor
inc
pop
nop
mov
push
andl
mov
imul
rcrb
hlt
push
push
inc
sub
test
pop
sub
lcall
shrb
mov
jo
enter
call
sub
cmp
cli
push
dec
jnp
cmp
pop
shr
xchg
mov
ljmp
jnp
leave
add
hlt
push
adc
or
push
sub
mov
xchg
pop
xor
js
sub
mov
dec
dec
mov
out
sar
fs
pop
repnz
mov
dec
data16
push
sbb
mov
sbbl
cs
insb
enter
idiv
in
cld
push
ljmp
aad
cmc
sbb
sbb
in
out
adc
lea
and
cltd
dec
ret
gs
jp
into
xchg
cld
shlb
or
jae
adc
jl
std
xor
mov
cmc
mov
test
lds
sti
xchg
out
or
scas
cwtl
mov
sbb
mov
or
dec
fisubs
jg
int3
adc
inc
sub
sub
sbbl
shrb
cmp
push
push
add
inc
fnstsw
adc
arpl
ret
int3
adc
shrb
outsl
xchg
xor
sub
push
xor
ss
mov
cmp
dec
clc
leave
scas
sbb
ss
in
jmp
xlat
and
push
push
pop
in
test
mov
popf
cli
sbb
xchg
and
jbe
bound
hlt
adc
testb
cmc
sub
xchg
loop
sub
bound
push
adc
movsl
imul
decl
lods
mov
xor
aaa
test
jo
dec
imul
into
data16
inc
aaa
nop
out
xchg
cmp
inc
pop
cmp
mov
stc
inc
push
fcomps
xacquire
cli
popf
bsr
or
xchg
pop
sub
daa
sub
push
std
inc
pop
push
or
into
mov
pop
addr16
imulb
sub
ljmp
jge
ljmp
push
or
test
push
mov
jl
mov
push
mov
mov
or
xor
inc
mov
loop
push
inc
mov
pushf
js
mov
dec
jg
mov
mov
mov
sti
fcomi
in
xchg
and
test
mov
lea
shlb
xor
scas
push
mov
jo
subb
mov
in
jbe
dec
repnz
into
orl
in
leave
mov
ss
xchg
push
outsl
ljmp
pop
xchg
cmp
lds
loopne
ja
lods
aas
scas
ljmp
aaa
std
add
add
dec
cmp
aad
pushf
jmp
cmc
lds
or
repz
inc
mov
inc
stos
mov
in
jg
fcomip
xchg
and
and
pop
sub
fnstenv
fnsave
movsl
xor
cmpl
or
pop
rcrb
sarl
stos
cmp
icebp
push
xor
add
mov
xchg
xchg
xchg
hlt
out
movl
inc
mov
or
scas
xchg
in
addr16
adc
xor
subl
lret
mov
rolb
repnz
pushf
add
mov
sub
dec
xor
out
pop
dec
hlt
das
sti
into
add
lahf
pop
iret
adc
push
scas
ja
cmp
les
xchg
fisubrs
es
cwtl
or
cmp
lret
mov
mov
push
mov
ret
out
outsb
adc
ds
jp
jnp
cmp
jae
fdivrs
lahf
out
push
jp
lret
sub
lods
lcall
pop
mul
movb
mov
mov
cmp
ret
add
or
mov
fdivl
adc
imul
pop
jns
int3
icebp
fists
call
jno
test
stos
outsb
loope
repnz
xor
mov
pop
push
loope
inc
loopne
jno
and
inc
sti
push
pop
dec
pop
inc
repnz
sbb
xchg
lret
mov
pop
cmpsl
mov
xchg
or
js
fistpl
sub
xchg
mov
sbb
mov
sti
mov
push
sub
fists
das
out
enter
in
inc
icebp
addr16
aaa
adc
cmp
sub
out
xorl
jecxz
sbb
jns
lcall
pushf
jle
lret
mov
repz
lret
pop
inc
mov
xchg
mov
or
and
jge
jne
push
test
imul
adc
out
popa
dec
cltd
jnp
clc
in
stos
cli
daa
iret
push
lock
and
inc
sbb
cwtl
lcall
pop
cmp
and
stc
std
adc
icebp
rcl
push
jp
xchg
cld
xor
xor
dec
dec
icebp
dec
repnz
mov
cmp
das
inc
xor
dec
cmp
and
sbb
sub
popa
shlb
sub
repnz
cmpb
push
hlt
adc
daa
pop
inc
cltd
into
imul
pop
sbb
into
shrb
mov
add
lahf
fists
pop
pushf
jb
test
aad
nop
iret
sub
sbb
pop
mov
mov
outsl
push
mov
jo
dec
sbb
sub
sbb
jne
jb
addr16
mov
fmul
mov
push
xor
sub
cmp
loop
hlt
mov
xchg
ficompl
ret
sbb
jb
adcb
repz
loopne
gs
inc
outsb
add
leave
jae
test
jg
dec
adcl
outsl
outsb
fstpl
adc
nop
mov
fisubrs
adc
push
xchg
push
or
cltd
lcall
jl
roll
sahf
cs
push
rcrl
sub
cmp
push
or
mov
add
aaa
lret
out
sbb
and
imulb
leave
sarl
outsb
out
cld
aas
test
mov
loope
adc
jne
jge
push
fdiv
popa
fiadds
push
lods
shll
mov
add
stos
and
jo,pn
outsl
jl
arpl
push
fildll
pop
clc
pop
addr16
es
and
add
jno
ds
add
outsl
into
lret
into
repnz
adc
inc
push
sbb
aad
pop
lcall
sub
in
fbld
inc
add
loopne
jge
xor
dec
js
sahf
ds
xchg
les
incb
std
mov
mov
movsb
cmp
jo
or
inc
imul
ss
inc
cs
inc
and
adc
inc
bound
sbb
cwtl
loop
roll
fisubrs
int3
dec
out
inc
ja
ljmp
pop
ficoml
add
inc
cmp
cmp
aas
sbb
cmpsl
inc
mov
jbe
push
push
lret
sub
movsl
dec
ljmp
lret
inc
push
mov
dec
repnz
cmp
sub
repnz
ss
ret
notb
lods
adc
lcall
ret
hlt
incb
es
icebp
movsl
xchg
sbb
js
insl
inc
inc
mov
mov
mov
dec
mov
out
jg
adc
push
or
aaa
and
add
or
add
or
aas
inc
cwtl
int3
shl
pop
mov
cwtl
dec
and
xlat
adc
jl
or
or
imul
mov
lcall
push
xor
rcll
bound
inc
loop
jmp
mov
xor
scas
stos
cmp
adc
scas
mov
jbe
cltd
inc
cmpsl
or
bound
fisubrs
shr
add
pop
push
mov
stos
and
gs
test
sarl
dec
mov
jns,pn
jno
jnp
mov
sahf
outsl
das
sub
inc
test
icebp
inc
cmp
movsb
shll
lahf
sarb
lret
and
inc
xlat
pop
push
mov
cmp
sbb
push
fwait
pop
push
imul
mov
loopne
pop
in
sub
mov
in
inc
pmaddwd
xchg
jle
xchg
ret
rorb
cmpb
repz
mov
mov
push
mov
addr16
or
addr16
test
dec
ficoml
xor
jo
xchg
jg
lcall
nop
add
mov
adc
mov
mov
rcl
add
sbb
frstor
shll
mov
adc
int3
jnp
sub
mov
fcompl
cld
inc
in
mov
cmp
xchg
jl
jae
push
sarb
pop
pop
dec
bound
and
and
test
sub
fs
adc
sbbb
and
dec
repnz
aam
sub
jbe
mov
mov
xchg
dec
mov
mov
ret
mov
lds
sbb
xorl
xlat
cmp
dec
lahf
cwtl
adc
shll
lods
push
add
clc
scas
in
push
ljmp
lcall
ficoml
ja
fidivs
pushf
loopne
adc
dec
adc
xchg
jbe
xchg
mov
mov
xor
inc
les
cld
mov
mov
jp
scas
xchg
test
xor
aas
lcall
pop
push
out
aam
jge
stos
dec
push
inc
cmp
aam
pusha
cmpsl
and
lods
inc
cltd
test
sbb
sarb
fnstcw
test
clc
jae
cld
sub
in
std
push
and
inc
pop
cwtl
rclb
jg
mov
jns
or
nop
dec
repnz
sbb
xchg
gs
test
gs
mov
cld
lods
mov
push
lahf
insb
add
rorl
inc
mov
push
nop
out
ficompl
sti
in
lods
rcrb
inc
mov
cwtl
push
or
cmp
lcall
sbb
xchg
jg
in
dec
das
fmull
push
mov
push
fs
add
inc
add
xor
pop
hlt
adc
outsb
mov
in
push
outsb
and
pop
mov
iret
and
roll
push
imul
mov
cmpsb
lcall
int
nop
sti
leave
mov
mov
push
push
pop
sti
push
mov
sbb
negl
sarb
shlb
push
ret
rolb
pop
mov
mov
aas
ss
jae
test
xchg
xor
dec
inc
sub
add
call
push
addr16
mov
pushl
mov
das
ffreep
jb
test
repnz
jl
mov
in
pop
dec
test
jp
andb
pop
iret
mov
adc
repnz
into
xor
or
inc
repz
pop
lret
and
push
shrb
sbb
shl
popa
andb
int
lret
nop
jecxz
nop
fildl
xchg
mov
or
aam
add
pushf
push
iret
loopne
bound
adc
or
or
xor
mov
xor
adc
mov
orl
in
pop
faddl
push
pop
lret
adc
pop
data16
jno
loop
les
mov
mov
cmc
inc
cmp
aam
loop
cmpsl
outsl
push
out
push
adc
mov
pop
and
movsb
sbbb
sub
out
test
ja
inc
stos
sahf
mov
sub
sub
push
mov
push
movsb
arpl
cmp
gs
loope
sti
add
push
ds
andl
rcrl
add
push
and
and
pusha
in
mov
push
fstpt
loopne
out
cmc
push
movsb
inc
es
mov
jg
push
in
cltd
mov
cmp
out
mov
mov
cmc
pusha
cmp
push
lret
mov
jne
lods
nop
push
push
inc
movl
inc
xor
xchg
mov
data16
jae
in
push
jp
jmp
add
lock
out
dec
cmp
call
jns
repz
stos
and
aaa
fdivrl
mov
inc
dec
push
les
movb
cmp
mov
rcl
movsb
cld
repz
jmp
mov
sbb
in
xchg
xorb
sub
aam
xor
dec
inc
xchg
adc
outsl
push
sub
sbb
addr16
dec
mov
mov
pop
aaa
fwait
mov
sub
mov
fs
xchg
popa
pop
ret
xchg
jbe
cld
in
inc
xchg
pop
out
js
and
inc
data16
pop
dec
or
xor
cmc
sub
xabort
sti
bnd
jge
fs
dec
sub
pop
push
mov
pop
mov
sbb
jb
movsl
aas
xchg
sbb
es
rcll
adc
push
dec
pop
js
nop
inc
das
push
lea
fsubr
enter
pop
mov
add
mov
pushf
lea
dec
loope
sub
mov
mov
bnd
push
inc
xchg
loop
sysenter
imul
mul
sbb
movsl
stos
daa
lahf
movsl
jns
pop
movsl
out
ds
in
mov
cmc
add
inc
je
jb
xor
lds
cmp
sub
pusha
mov
mov
mov
adc
sub
cld
adc
push
push
mov
push
icebp
xor
xchg
int3
sub
insb
mov
mov
mov
insl
ret
push
orb
jne
aas
ss
call
std
or
nop
xchg
pop
push
out
xchg
xchg
das
stc
push
icebp
movsl
mov
cmp
sbb
mov
adc
sub
mov
icebp
xchg
jge
loop
cmp
xchg
roll
mov
mov
cs
bound
fistl
or
mov
and
pop
jge
jp
and
rcr
out
scas
popa
pop
outsb
dec
dec
nop
sbb
div
lock
mov
xchg
jge
loop
cmp
inc
sahf
call
sahf
gs
mov
inc
sub
pop
lcall
sbb
shll
and
pop
out
test
out
cmp
mov
mov
adc
push
sahf
pusha
push
mov
sub
test
and
pop
lret
push
xchg
push
inc
insl
arpl
ds
xor
push
push
inc
xchg
std
jae
sbb
notl
mov
dec
pop
test
repnz
iret
sbb
out
mov
andb
outsb
mov
mov
push
ds
mov
pop
sbb
lods
add
xchg
mov
fwait
push
mov
ljmp
movsl
nop
ror
xchg
repnz
cmp
pop
mov
jl
jo
adcb
inc
cli
xchg
xorl
movsb
sbb
gs
fucom
dec
call
inc
stos
rcrl
jg
mov
js
outsb
in
movb
mov
xchg
add
stos
test
sbb
dec
xor
mov
aaa
mov
xchg
lea
push
fwait
push
mov
and
ljmp
cmp
xchg
movsl
stos
fiaddl
sbb
fucomip
and
into
push
xlat
mov
insl
fwait
cmp
sahf
arpl
mov
mov
popa
in
mov
add
pop
mov
mov
push
jb
dec
aad
jne
jo
sub
mov
rorb
xor
xor
sbb
jns
movsb
mov
or
sub
outsb
adc
sarb
test
fdivl
dec
mov
test
das
imul
and
mov
sbb
shlb
dec
xor
add
addl
jp
hlt
loopne
mov
aaa
sub
popf
xor
sbb
cmp
xchg
fadd
imul
dec
std
popa
pop
adc
fildl
in
subb
pop
xor
push
dec
jns
std
out
jp
xlat
adc
cs
xchg
fsts
mov
repnz
add
shlb
jo
adc
jmp
insl
add
mov
loop
out
lcall
ja
sahf
add
sub
dec
jg
cmpsl
push
stos
push
xor
cmp
sbbb
dec
xchg
shll
inc
inc
pop
sub
push
dec
sarl
mov
add
fs
xlat
stos
push
inc
cmp
add
fwait
mov
adc
xchg
mov
mov
in
and
in
pop
ja
sbb
sbb
adc
pushf
jecxz
fbstp
add
mov
dec
or
sbbl
lret
cmpsb
lods
jecxz
cmp
jl
jne
cmp
sub
push
dec
mov
jmp
bound
std
ja
or
xchg
pop
andl
daa
outsb
dec
je
out
in
adc
cmpsl
jbe
cmp
cmp
in
cmp
add
bound
adc
frstor
push
daa
adc
mov
cs
mov
imul
mov
xor
adc
jb
pop
add
sub
jecxz
mov
outsb
gs
jo
lcall
pop
movsl
into
or
inc
xor
mov
dec
inc
outsb
mov
add
sbb
xchg
sbb
pop
xchg
xlat
call
mov
test
xchg
xchg
mov
stc
ret
pop
fs
test
sarl
mov
repz
sub
push
jecxz
xor
push
aaa
push
mov
sub
testw
pop
xchg
adc
jbe
pop
fwait
mov
xchg
movsb
addb
movsb
fs
outsl
jnp
push
and
mov
ret
fs
lock
lret
bound
pop
or
mov
sub
jmp
adc
push
arpl
stos
movsl
cltd
push
xor
hlt
xchg
push
mul
xlat
js
cmp
cmp
dec
lahf
push
cmp
push
inc
fs
jmp
jle
iret
lods
sbb
out
test
xor
jg
leave
add
push
jae
out
pop
lahf
or
movsb
roll
push
push
pop
xor
fldt
pop
mov
and
mov
fcomps
call
out
aam
mov
or
lahf
add
pop
out
clc
add
push
or
daa
fs
out
outsl
mov
aas
inc
in
sti
mov
cld
xlat
push
push
imul
mov
sahf
or
xchg
aam
inc
and
mov
imul
scas
scas
insb
sbb
sbb
mov
cli
push
mov
frstor
dec
cmp
ret
mov
negb
adc
fs
test
out
jne
adc
into
enter
sub
pop
fdivs
mov
fstpl
dec
movsb
insb
aam
mov
and
lock
xlat
sub
test
adc
cmp
push
push
fistl
fimuls
hlt
mov
sub
push
cmpsl
mov
enter
sbbl
or
in
sarb
enter
ret
sti
fcoml
mull
aas
les
adc
cld
jns
inc
insl
inc
inc
fadds
pop
dec
roll
lods
hlt
inc
inc
ja
cmpsl
ret
mov
scas
sahf
ficoml
cmp
and
stos
lcall
push
sbb
test
nop
sub
xor
sub
movsl
adc
int
add
out
jae
dec
fisttpll
mov
out
adc
inc
mov
jo
xchg
dec
ror
testl
gs
xor
outsl
loopne
xchg
lret
add
call
clc
stc
jo
pop
pushf
pusha
adc
hlt
lods
dec
popa
enter
push
sub
insl
fisttpl
sti
aad
mov
fstps
push
or
fimuls
gs
cs
fiadds
leave
mov
pop
push
mov
imul
push
xor
ss
inc
popl
test
add
sbb
sbb
xor
xor
insl
aad
les
push
mov
mov
sbb
sub
jne
addr16
jnp
lods
xchg
pop
aam
aaa
ficomps
dec
cmpsl
and
push
jb
xchg
rorb
jg
cmp
pop
stc
out
push
ret
adcb
repnz
add
adc
mov
push
add
clc
adc
dec
fmull
sarl
andl
aaa
frstor
xchg
icebp
adc
pop
es
push
xor
push
push
pop
cmp
mov
lahf
pop
sub
push
inc
lret
mov
mov
push
mov
mov
ja
pop
jb
add
lods
ret
mov
pushf
in
add
dec
inc
add
cmpsl
sbb
mov
stos
dec
push
add
and
pop
aam
jge
je
fildll
xor
movsb
dec
cld
push
push
sahf
mov
mov
and
jp
cltd
lods
in
adc
pop
fidivrs
adc
jb
addr16
and
bound
rclb
jno
pop
ds
mov
es
outsb
les
pop
sbb
add
and
pushf
jns
fwait
arpl
or
cltd
cmpsl
outsl
loopne
and
jne
push
loopne
push
aas
push
mov
pop
inc
scas
pusha
adc
loopne
mov
jne
inc
ret
cltd
mov
pop
es
in
jmp
out
push
cwtl
arpl
xchg
mov
sarb
dec
add
clc
lcall
lret
int3
hlt
call
dec
xchg
arpl
mov
pop
jmp
fistpll
popa
mov
inc
inc
popa
xchg
xlat
push
aad
shll
les
pop
out
insl
adc
pop
push
cmp
xor
shll
push
and
xchg
mov
dec
mov
jns
out
iret
loop
fisttps
push
clc
pop
inc
xor
mov
mov
xor
scas
mov
mov
les
jecxz
insl
lahf
arpl
or
and
mov
push
jno
fimuls
pop
fs
mov
ret
and
xor
mov
xor
movsb
jne
push
adc
loopne
push
mov
ss
jle
mov
test
push
call
xor
cltd
pusha
dec
movsb
call
mov
mov
addl
and
rcl
xor
mov
xor
sub
or
clc
cmp
into
mov
mov
out
hlt
sbb
cmp
movsb
dec
xchg
jge
cld
imul
mov
sbb
push
stc
shr
fs
cmp
sti
pop
xchg
mov
push
adc
jo
pushf
cltd
sbb
lea
add
es
sbb
pop
mov
jns
mov
sbb
add
mov
cmp
ss
dec
xor
sarl
into
pop
fists
xchg
loope
es
scas
sub
fcoms
pop
test
sti
mov
jb
out
pop
enter
pop
bound
adc
aas
nop
dec
mov
pop
ret
popa
inc
add
lret
out
into
mov
sbb
ret
mov
mov
push
lds
jecxz
pop
out
push
and
jmp
clc
mov
mov
sbb
shll
and
int
out
adc
mov
push
add
add
iret
and
jo
and
out
xor
cmpsb
and
addr16
inc
cmc
gs
imul
lret
xchg
dec
fdivs
adc
shll
in
xchg
and
and
ss
push
inc
xor
xchg
out
cmpsl
adc
sbb
fcmove
leave
pop
mov
pop
pop
lock
aam
mov
mov
xlat
mov
iret
mov
iret
or
rcrb
lock
sti
insb
bound
pusha
arpl
inc
xor
push
dec
xchg
stc
scas
dec
push
lods
les
int3
mov
adc
fninit
clc
insl
loop
into
sbb
mov
pop
add
leave
pusha
inc
mov
fdivrl
mov
or
repz
je
cmp
sub
fstpl
addr16
iret
in
clc
in
cmp
pop
or
pop
inc
imul
repnz
push
stc
adc
sbb
cmp
pusha
insb
in
insl
push
ficoml
imul
mov
clc
mov
xchg
add
jne
mov
dec
test
out
in
mov
movsb
push
push
sub
cmc
cwtl
push
xchg
out
imul
sbb
jno
jg
daa
xor
add
sub
movsl
or
push
aad
lock
loopnew
mov
fistpll
sarb
inc
mov
arpl
outsl
dec
decl
cs
pop
jns
sti
lock
pushf
loope
js
adc
add
mov
adc
xlat
jbe
or
ja
mov
lret
cwtl
inc
cwtl
mov
adc
mov
gs
sub
mov
stc
mov
sub
es
pop
sbb
cmc
popf
cmp
adc
pop
mov
mov
xchg
adc
fs
cmp
sbb
cmpb
mov
mov
movsl
push
pushf
enter
filds
shl
or
add
ja
or
pop
cmp
cmp
jecxz
imul
inc
les
es
or
outsl
outsl
into
pop
test
shlb
arpl
dec
aaa
mov
scas
sbb
fdivrs
pop
addr16
or
jbe
inc
std
sbb
add
mov
xchg
fwait
aam
jo
jo
clc
fwait
mov
mov
and
loopne
mov
test
lods
fdivr
mov
cld
rcrb
adc
sub
sbb
push
or
outsb
xchg
sbb
ja
jmp
pop
hlt
push
sbb
cmpsl
outsb
test
lret
mov
add
mov
add
popf
enter
xor
in
mov
jp
rcrl
mov
pop
call
dec
xor
pop
sbb
aam
int3
cmp
lock
and
fwait
icebp
cltd
xchg
and
pop
loopne
inc
jae
popa
pop
jmp
xor
jecxz
fnsave
sbb
adc
loop
neg
or
divl
xchg
or
outsl
mov
hlt
xlat
aaa
pop
outsb
mov
push
repz
idivb
pop
pop
and
neg
jno
pop
push
in
push
push
aaa
xchg
std
sub
dec
cmp
mov
mov
and
jge
jne
int
mov
dec
mov
int3
add
sbb
jmp
mov
fidivrl
int
jae
movb
sub
enter
or
inc
ja
xor
loope
dec
adc
icebp
dec
mov
fdivr
cmp
cs
loope
stc
inc
mov
test
mov
mov
xchg
ret
cmp
cwtl
mov
lds
data16
pop
test
sub
fildl
push
test
sbb
mov
bndstx
mov
cltd
mov
aad
cmp
int3
cmp
outsl
lret
mov
out
cmp
xor
mov
xor
jl
das
xchg
ret
enter
cli
add
cmpl
or
mov
inc
push
dec
jnp
in
push
mov
fs
dec
lods
pop
mov
push
or
loope
sbbl
mov
inc
test
sub
xchg
stc
or
aad
out
mov
sbb
fldenv
outsl
pop
jb
adc
in
ror
dec
out
pop
mov
out
cmp
shl
test
xor
pop
popa
or
repnz
xchg
jmp
jmp
push
and
ficoms
test
jmp
in
scas
in
out
mov
nop
cmpsl
ss
jae
stos
fprem
pop
scas
or
out
sub
int
ss
cs
sub
cmp
les
xchg
mov
pop
xor
in
dec
push
cs
aad
pop
add
mov
out
inc
pop
lcall
sbb
insl
shll
xlat
outsb
cli
mov
mov
xchg
adc
rcrl
mov
sub
repz
mov
pushf
loopne
inc
iret
dec
push
cmp
xchg
mov
les
imul
fs
scas
push
loop
or
mov
dec
cmpsb
jae
inc
nop
aas
sahf
lods
adc
insb
out
pop
out
pushf
and
jle
jle
inc
int
movsl
jb
dec
in
movb
sub
pop
push
jno
fxch
adc
sub
sbb
dec
lret
iret
ret
add
mov
adc
rolb
in
jbe
mov
cmp
out
aad
mov
rorl
and
and
inc
arpl
or
pop
loope
mov
pop
shl
adc
push
ljmp
lods
call
cmp
or
in
or
fsubrs
jmp
test
mov
cs
mov
xor
inc
sbbl
push
pop
rorb
aas
inc
fbld
sub
cltd
xor
xor
cmp
pushf
out
jno
shl
stc
shl
and
enter
rorl
andb
xorl
cmp
dec
ret
ss
and
es
pop
cmpsl
repnz
in
shlb
mov
lret
push
mov
push
test
sarl
sub
out
push
call
and
aaa
fmuls
sub
inc
cld
pop
cwtl
xchg
mov
jp
and
pop
dec
push
and
dec
jecxz
pop
fwait
and
and
decl
cmp
xor
cld
das
inc
shrl
dec
push
test
pop
pushf
rorb
movsl
pop
fs
push
sti
xchg
call
imul
idiv
imul
scas
jecxz
mov
dec
xchg
sbb
push
dec
or
and
inc
xchg
loop
or
add
jle
xor
adc
movsl
xchg
mov
cmp
add
push
orb
stos
push
ljmp
and
leave
sub
loope
mov
out
cld
sub
pop
xchg
mov
stc
mov
jnp
pxor
xchg
mov
test
sub
test
xor
shll
fcomip
outsw
sti
popa
cmp
cmp
push
cld
testl
in
or
imull
jb
gs
sub
xchg
mov
xchg
mov
cmp
out
repnz
dec
cmp
sub
and
pop
ficomps
jge
loop
push
pop
sub
mov
mov
lods
nop
in
test
icebp
inc
leave
in
add
mov
sub
pop
aaa
adc
jae
out
mov
fsubrs
mov
add
inc
in
mov
insb
jne
repnz
jg
xchg
adc
je
jo
sbb
fisubl
pop
add
dec
xor
mov
inc
pop
mov
leave
cmpb
mov
xchg
mov
lods
sbb
dec
fwait
sbb
xchg
mov
ret
xlat
filds
xchg
or
sbb
inc
out
cwtl
fsubl
addb
inc
add
das
inc
cmp
lret
stc
imul
pop
movsl
jmp
mov
add
mov
aad
fstpl
xchg
adc
lock
mov
mov
popf
mov
fadd
aaa
dec
push
lds
hlt
adc
das
sahf
xor
or
xchg
cmp
mov
jg
insb
xchg
jnp
xlat
es
mov
push
dec
imul
bound
add
fiaddl
in
mov
push
jae
cmp
adc
out
in
inc
shl
loope
sti
xchg
negb
sti
or
sub
xchg
aas
or
sbb
pop
outsl
xchg
enter
sub
sbb
mov
xchg
sub
mov
pop
ja
test
jp
jecxz
push
inc
sub
aam
std
jnp
cmp
std
rcrb
js
lock
in
cmpsl
std
cltd
or
and
mov
cmp
xchg
inc
in
or
mov
sub
test
pop
nop
and
jo
jl
icebp
inc
shrb
repnz
jo
rorl
inc
mov
sub
sub
jl
out
xorb
mov
xor
or
lods
enter
or
je
or
xchg
cs
cmp
add
mov
sub
call
out
mov
nop
inc
push
dec
imul
sbb
jmp
add
xchg
inc
imul
testl
push
jge
and
jbe
dec
mov
sub
mov
sbbl
sbb
stos
mov
push
cmp
inc
push
push
sbb
mov
mov
push
lcall
mov
scas
dec
imul
push
xchg
repz
dec
test
mov
xor
aas
and
xlat
jp
adc
mov
cmpsb
xlat
or
sbb
jp
mov
xor
nop
xchg
cmpsl
ret
out
or
test
push
stc
jge
dec
add
fs
pop
mov
out
mov
fsubl
mov
insl
js
pop
mov
fnstsw
addr16
lcall
dec
mov
mov
and
cmp
pop
fxch
sub
imul
rorb
cmp
aam
aaa
jmp
aam
stos
adc
cltd
add
jno
xlat
call
sub
or
test
push
mov
pushf
xchg
pop
pop
imul
repnz
add
fildl
mov
inc
add
and
cmp
dec
jne
loopne
sub
lret
push
sbb
ja
sub
push
cs
cs
sub
mov
xor
pop
nopl
inc
aad
mov
or
imul
jp
push
pop
jno
mov
jg
insl
lahf
mov
leave
dec
movsb
lds
scas
fwait
ss
clc
pop
jno
loopne
dec
repz
es
in
sbbl
inc
push
or
fnstcw
repnz
in
pop
fcom
inc
mov
iret
js
cmp
popw
test
iret
add
lret
xlat
in
rorl
pop
aas
stos
mulb
xor
or
lds
out
xchg
call
dec
jmp
cs
ret
dec
add
jbe
stos
adc
in
inc
scas
dec
add
jnp
pop
jmp
sahf
roll
scas
inc
or
dec
inc
inc
aad
xor
xor
insl
imul
jle
divb
gs
mov
hlt
sub
pop
dec
mov
mov
inc
clc
inc
add
mov
pop
cmp
in
adc
lret
mov
fnstsw
mov
mov
sbb
rclb
xor
or
sbb
ret
out
sar
push
insb
rcrl
push
mov
xchg
jg
frndint
inc
ljmp
mov
fwait
dec
cmp
fsubrs
lret
add
adc
inc
jae
push
mov
pop
aaa
or
pushf
or
xorl
flds
or
idivb
pop
es
jmp
mov
and
sbb
push
pop
dec
ja
xor
dec
push
pusha
scas
or
push
inc
js
icebp
in
aas
jle
hlt
mov
stc
xor
sahf
out
fwait
in
xor
movsb
push
and
dec
das
adc
push
in
xlat
ret
mov
aas
imul
je
lds
jbe
pop
insb
adcb
xor
mov
jns
fsubrl
and
loopne
adc
js
int3
outsb
jb
cmp
inc
xchg
sbb
daa
push
repnz
test
int3
popa
mulb
das
js
sub
idivb
jns
es
dec
mov
jg
fstp
in
int
push
sbb
imul
das
mov
les
mov
cmp
jae
adc
rorl
out
or
sub
loope
shll
rorl
push
mov
pop
adc
xchg
or
dec
movsl
loop
inc
aaa
icebp
add
lods
addl
dec
data16
pop
push
inc
add
les
jne
fmul
mov
inc
push
inc
xchg
sub
push
and
jne
jne
nop
fsubs
or
jb
call
fildl
xchg
mov
leave
jo
pop
addl
jg
xor
push
das
cmp
sbb
dec
out
cli
dec
fidivrl
cmp
mov
das
dec
push
nop
push
adc
iret
add
arpl
cmp
jge
loope
aas
insl
imul
test
test
sub
dec
notl
pushf
out
inc
sbb
testb
loopne
fs
mov
or
jnp
repnz
inc
ret
inc
mov
roll
mov
shlb
add
mov
fwait
es
jnp
repz
push
xchg
inc
lods
les
imul
xor
icebp
enter
xor
push
sti
int3
pushf
push
sbb
in
pop
mov
mov
sbb
subl
fmuls
scas
inc
jne
xchg
inc
shl
jecxz
cmp
test
cld
pop
mov
cli
std
or
mov
dec
fstpt
imul
mov
out
jle
push
add
shlb
mov
test
dec
shrl
adc
inc
ja
xorb
daa
ret
xchg
stos
mov
cli
fsubrl
sbb
mov
dec
sbb
aam
scas
jge
dec
cmp
mov
scas
sbb
aas
xor
mov
push
repz
and
out
push
movsb
sbb
pop
xchg
xlat
fwait
lret
inc
repnz
andl
nop
lcall
sub
push
mov
mov
mov
jmp
fwait
js
push
pandn
xchg
daa
mov
jl
mov
cmp
adc
lret
adc
push
arpl
popf
sub
xor
dec
fiadds
inc
je
mov
pop
xchg
out
hlt
sbb
rcrb
loope
rcll
out
icebp
inc
js
and
nop
data16
sbb
mov
hlt
pop
xlat
insb
out
xchg
pop
scas
push
cli
sub
test
loopne
cmpsb
ljmp
lcall
mov
or
xor
test
es
xor
sbb
rorb
pop
shll
sub
pop
mov
lods
xor
sbb
xchg
in
inc
cmpsb
inc
sub
mov
mov
aas
pop
add
outsl
sbb
sub
iret
lcall
clc
notb
or
or
dec
rorl
lahf
sbb
mov
into
xlat
adc
dec
lds
jne
mov
xchg
mov
xor
inc
test
mov
sub
pop
mov
lock
daa
or
mov
inc
sbb
icebp
xchg
call
dec
fcomps
addr16
and
sahf
sbb
mov
mov
testb
jle
mov
pushf
sbb
mov
popf
lcall
jmp
cld
shll
dec
mov
insb
adc
xchg
nop
xchg
cmp
xor
add
test
push
les
jecxz
clc
popa
push
inc
cld
cmp
hlt
jo
or
pop
outsb
push
inc
jle
inc
jns
fnstsw
add
jne
popa
popa
jg
dec
in
sub
push
xchg
pushf
cmpsb
push
outsb
sbb
mov
push
dec
mov
mov
nop
sbb
or
icebp
pop
outsl
cltd
cmpb
pop
cld
inc
cmp
xchg
enter
rolb
mov
loopne
cltd
inc
mov
or
fwait
ljmp
insl
or
aaa
pop
cmpsb
sbb
fcompl
ss
mov
xor
pop
lods
aam
jle
and
rcll
je
scas
jo
mov
insb
pop
xor
xor
dec
xor
mov
ror
js
popf
stos
xchg
mov
loopne
subb
inc
inc
out
rcrb
imul
adc
ficoms
xchg
arpl
ret
and
sub
pop
xchg
es
xchg
cmc
js,pn
notb
xchg
sbb
loop
scas
cmp
mov
mov
mov
sub
sarb
popf
loope
fxch
sahf
sbb
into
pop
lds
leave
cmc
lods
ds
inc
and
xchg
lds
lcall
fyl2xp1
pop
fwait
xor
aam
jge
push
arpl
gs
sbb
cs
xchg
xor
rcll
notl
inc
cmpb
ljmp
adc
and
add
ficompl
enter
les
cli
int
popa
test
xor
test
icebp
dec
mov
cmp
push
arpl
add
fs
pop
lods
mov
inc
lds
jp
add
mov
mov
nop
mov
push
popf
orl
test
lock
pop
fldt
inc
icebp
cmp
out
dec
adc
cs
pushf
mov
cmp
testb
push
addr16
repz
int3
push
mov
inc
es
andl
lds
xchg
xor
sbb
je
cmp
push
and
cwtl
mov
leave
sub
sbb
mov
aad
add
into
cmp
jo
or
lods
xor
lret
mov
dec
dec
rcrl
call
mov
fisttpll
jmp
inc
or
cli
and
sbb
xchg
cmp
xchg
rol
push
xor
sbb
outsl
mov
mov
mov
cli
mov
lahf
lcall
lock
xchg
mov
push
or
or
push
jmp
or
cmp
daa
or
lock
cltd
data16
sbbb
lods
sbbb
adc
iret
pop
paddsw
jnp
mov
out
mull
mov
nop
sub
cli
cmp
dec
xchg
xchg
lock
out
and
add
mov
xchg
and
mov
bound
pop
outsb
shll
in
hlt
dec
addb
and
sbb
xor
mov
pop
pop
pusha
jo
jo
aad
or
mov
mov
lods
sbb
in
ud0
fistps
inc
in
icebp
mov
bound
les
lock
fiadds
pop
xorl
lds
das
or
adc
cmp
fscale
jns
xchg
subb
cs
rcrb
cmc
push
add
orb
jo
insl
add
ja
stos
clc
fldenv
out
rcr
jne
lcall
xor
test
push
add
mov
adc
cs
xor
and
orb
cmpsb
imul
call
cs
cmpsl
mov
adc
movsb
repnz
lea
adc
ss
xor
icebp
test
insb
cmpsb
jbe
xchg
mov
sub
sbb
dec
xor
fwait
movl
jmp
cmp
xchg
stos
sbb
pop
jnp
cltd
pop
cmp
lock
push
testl
xchg
mov
push
push
mov
push
popf
or
and
mov
popl
out
or
add
roll
mov
into
inc
or
cmp
push
or
inc
roll
lea
sbb
mov
mov
mov
nop
push
mov
mov
jmp
sahf
add
jnp
hlt
cs
sbb
pop
dec
mov
in
adc
inc
int3
mov
sub
add
sbb
test
pop
jns
push
out
movsb
jbe
call
sbb
sarl
in
or
out
mov
cs
add
xor
les
mov
popa
jae
std
dec
insb
add
sbb
pop
xor
lahf
xor
iret
sub
insb
dec
fcmovu
pushf
scas
daa
popa
ja
imul
sub
and
xorb
jne
sbb
sbb
xchg
xchg
push
hlt
std
in
pusha
xlat
push
mov
movl
adc
adc
outsl
sub
cmp
shrb
mov
stos
pushf
or
and
fucomp
stc
test
int
jns
xor
inc
loop
andb
mov
out
lret
dec
loopne
insb
in
mov
stc
loopne
rcrb
push
cld
pop
xchg
int3
sbb
sarl
cmp
cwtl
mov
fsubrl
test
scas
xlat
dec
pop
fdivs
test
jb
sbb
or
call
inc
imul
fldt
add
inc
lahf
or
push
outsl
mov
jmp
sbb
dec
and
aaa
sti
xor
push
shrl
dec
add
lahf
mov
pop
xchg
jge
lcall
inc
int3
clc
popa
cli
rolb
popf
popa
add
stos
sbb
rorl
clc
push
pushf
xchg
jb
rolb
out
daa
dec
loop
out
js
sub
mov
lret
movsb
sub
cmc
outsb
push
jbe
movsl
lret
cli
push
dec
in
int
xor
in
repnz
mov
pop
push
mov
es
push
xchg
or
cmp
sub
cmp
and
shrd
dec
subb
jnp
cmp
aam
xor
dec
call
inc
das
mov
mov
rolb
mov
dec
test
lret
stos
test
cwtl
ljmp
bound
lods
js
lds
pop
std
mov
leave
jge
mov
mov
pop
xor
arpl
int3
jp
popf
outsb
addr16
inc
jae
ljmp
xchg
mov
adc
pushf
mov
fcom
sar
pop
xlat
cmp
adc
sub
ds
sub
or
cmp
mov
gs
sub
mov
dec
or
jno
jg
out
and
ss
inc
push
jb
cmc
gs
dec
jae
cmp
sbb
mov
mov
in
aam
lahf
jmp
inc
lods
mov
xor
jae
std
xor
pop
cmp
jmp
sbb
insl
sbb
mov
push
mov
call
mov
mov
or
in
dec
add
add
rol
ret
out
xor
das
sub
jl
movsb
dec
mov
sahf
rcrb
xchg
fwait
mov
push
mov
add
ret
loope
pop
scas
xor
adc
divl
idivb
xchg
shl
inc
mov
xor
push
sub
mov
or
push
pop
mov
test
sti
icebp
xchg
push
xor
movsl
imul
add
arpl
mov
xor
dec
ret
and
lret
xchg
cmp
lret
stc
mov
fists
loope
cmpsl
mov
pop
cltd
adc
repnz
jbe
mov
push
insl
cmpsl
pusha
in
lcall
aas
hlt
popa
jmp
adc
or
int3
and
cmp
push
loop
fdivs
das
mov
pop
ror
jge
sarl
shlb
testl
lods
pop
popf
sbb
shlb
aam
dec
ja
test
jno
icebp
loop
mov
jae
fldl
pop
mov
fwait
aad
add
ljmp
insb
fnstenv
sbb
loope
subl
xchg
jmp
xor
loop
int
add
ljmp
lods
daa
es
daa
lret
and
shrl
pop
cmp
pop
cmpsb
std
dec
fcmovne
and
xor
fnstenv
outsl
iret
fpatan
and
in
sbb
icebp
dec
mov
movsb
xchg
sub
notl
pop
lds
pop
jno
add
push
push
adc
or
mov
nop
inc
and
cmc
std
or
push
jno
lds
outsl
jg
fistpl
adc
lds
fbstp
sub
inc
sub
and
add
shrl
out
xchg
mov
out
bound
xlat
imul
push
and
mov
mov
faddp
cs
xchg
ljmp
jne
data16
ret
das
insb
rcrb
inc
movsl
ss
shlb
inc
dec
out
out
hlt
fldcw
mov
pmullw
into
cmp
xchg
and
mov
ljmp
lea
dec
push
insl
pop
insl
int
out
int3
scas
fdivl
jge
xchg
clc
push
mov
push
adc
xchg
push
clc
pop
loope
mov
popa
repz
cmp
stos
sbb
jg
inc
dec
mov
push
dec
js
xor
push
push
sbb
mov
in
das
adc
inc
sub
insl
arpl
mov
jae
mov
cmc
int3
int
repnz
xlat
mov
xchg
test
sub
dec
pop
mov
fs
nop
inc
add
mov
xchg
add
ljmp
sub
sti
push
aad
jecxz
out
cmpsb
sbb
lds
and
cwtl
fmul
and
inc
jge
es
mov
ss
push
ds
je
xor
in
mov
ljmp
pusha
inc
xchg
mov
hlt
push
dec
movsl
sbb
icebp
lods
lds
xchg
xor
jne
push
pusha
outsb
push
lahf
imul
stos
rcrl
cmpsl
and
ret
orl
cmp
sub
and
mov
fadds
xor
call
insb
add
lret
adc
ss
mov
fimuls
mov
sbb
jle
aas
sub
stos
sub
and
cmp
inc
inc
arpl
out
jecxz
pop
stc
mov
movsl
gs
sub
push
inc
jg
adc
inc
mov
testb
inc
xchg
lret
xchg
movl
mov
into
fsubrl
fdecstp
pop
push
inc
pop
adc
rcrl
sahf
insb
and
enter
mov
sbb
add
cmp
adc
out
into
mov
addl
xchg
or
daa
cmp
ss
or
ds
sub
push
imul
jno
aad
or
outsl
jmp
cmp
adc
test
pop
clc
fwait
nop
adc
loopne
imul
int
in
push
loopne
pop
pop
pushf
call
out
mov
adc
sbb
in
jnp
jnp
sub
inc
sub
sbb
cmp
mov
scas
imulb
mov
lods
cltd
cmp
pop
adc
adc
popf
imul
ror
aad
outsl
jg
add
pop
insl
jge
add
push
subl
push
rol
div
outsl
jecxz
and
cmp
insb
imul
push
sbbb
add
lret
iret
sub
push
cmpsl
xchg
negl
mov
inc
jo
clc
jnp
sbb
mov
arpl
sbb
inc
add
ljmp
in
mov
mov
push
ja
cli
xor
or
movsb
aam
xchg
push
mov
stos
cmovp
fildl
leave
jle
jmp
jle
cmpsb
repnz
push
jae
sub
cmp
call
pop
jge
push
fsubrs
sub
ljmp
rsm
mov
dec
adc
dec
cmp
ja
gs
jne
leave
testb
cmp
insl
cwtl
inc
les
outsb
lock
sahf
adc
push
jno
xchg
dec
lods
push
and
fsubl
push
mov
and
push
leave
arpl
xor
mov
push
test
cmpsl
rcrb
mov
stos
xor
lods
mov
pushf
pop
mov
adc
test
adc
add
mov
shlb
mov
popf
dec
hlt
xor
jl
sub
cmpsl
jnp
push
jno
scas
mov
jno
add
std
test
dec
mull
adc
mov
xor
popa
int
sbb
popa
aam
ja
push
fsts
popa
int3
mov
xchg
mov
out
mov
mov
outsl
enter
pushf
idiv
insl
enter
into
daa
daa
mov
mov
push
pop
sub
mov
pop
iret
mov
sbb
mov
test
pop
sub
je
scas
sahf
test
int
push
cmp
in
mov
mov
sub
addr16
fistpl
xchg
mov
cmc
test
jno
mov
out
jno
lock
push
xor
sub
xor
push
inc
jb
xchg
aam
leave
mov
je
or
pop
push
mov
shll
push
sub
jnp
pop
adc
sbb
rorl
arpl
loopne
pop
cmp
ret
das
push
rcr
test
lcall
xchg
add
xor
mov
sbb
jecxz
adc
addr16
ss
jae
mov
inc
pop
adc
mov
adc
mov
popf
sub
sarl
js
lahf
xor
jo
lahf
icebp
and
jp
inc
int
lds
rcl
cmp
pop
mov
pop
push
inc
push
dec
xor
nop
xchg
ja
jno
test
mov
call
std
out
cmc
test
add
sub
dec
aam
hlt
stos
imul
jl
insb
jmp
imul
xchg
cld
test
jle
sub
cltd
leave
leave
icebp
or
loop
movsb
repz
adc
jb
xlat
cwtl
lds
add
or
fstpl
adc
fsub
mov
pop
mov
mov
or
add
dec
or
test
flds
sbb
lahf
add
jo
dec
jno
jg
mov
dec
push
sbb
mov
or
fisubrs
push
ja
stos
dec
ret
cmp
add
mov
std
inc
push
dec
sub
fwait
push
xlat
repnz
mov
stos
jle
xor
cltd
inc
das
dec
pushf
adc
lea
je
dec
bound
lcall
inc
hlt
cs
push
pusha
sbb
test
leave
xchg
sub
xchg
ss
pop
or
outsb
xor
in
sbb
scas
pop
inc
cs
out
and
outsl
pushf
stos
scas
sbb
lock
out
imul
jb
cmp
or
and
cmp
lret
mov
repnz
lcall
pop
cmp
mov
movsb
das
cmc
jmp
sti
icebp
xchg
stos
lcallw
mov
daa
scas
mov
jmp
adc
push
lds
sub
mov
in
push
mov
mov
and
in
jae
add
jno
jns
fs
add
add
add
sbb
je
adc
in
call
dec
loopne
inc
sbb
jno
mov
mov
xchg
mov
sbb
nop
ljmp
aam
scas
rorl
inc
mov
cwtl
sbb
and
stos
int
stos
pusha
loop
xchg
push
jp
scas
rcrb
shlb
xlat
inc
add
dec
mov
xchg
and
das
shlb
sbb
loop
test
mov
scas
jmp
dec
fidivs
aad
lret
loop
xchg
popa
cmp
in
cmp
ficompl
sub
cmpsb
out
out
gs
int3
push
pop
hlt
mov
sbb
dec
aaa
pusha
lods
and
or
xor
bnd
and
insl
inc
int3
push
cmp
mov
inc
fcompl
xchg
cmovle
adc
jle
mov
pop
dec
repnz
adc
stc
adcb
gs
pop
or
insb
xor
mov
push
and
xor
mov
nop
push
int
fsubrl
xchg
xchg
test
push
adc
out
enter
lock
js
push
xchg
xchg
lret
add
add
mov
lods
xchg
lcall
call
mov
inc
xchg
mov
fs
mov
xchg
jge
sarb
jp
sahf
mov
out
loope
fmul
cmp
inc
out
call
inc
xchg
fs
out
jo
add
add
and
stos
int3
mov
xor
adc
push
adc
dec
xchg
or
adc
into
mov
add
je
sub
and
mov
pusha
xor
insl
scas
fidivs
mov
int
jns
int
sbb
test
sub
xor
push
dec
cmp
dec
mov
inc
test
xor
mov
lahf
sbbl
mov
push
lret
sub
xchg
add
pop
sub
incb
cmpsl
push
push
push
jmp
push
pop
es
xchg
bound
orb
xor
int
mov
std
jns
addr16
in
fcmovnb
jecxz
xchg
xchg
and
dec
xor
add
push
dec
inc
sbb
subb
ss
and
and
enter
into
sbbb
mov
jae
pop
lret
stos
outsl
mov
cld
jge
mov
jmp
push
arpl
sti
inc
enter
mov
shr
hlt
stos
mov
pop
sbb
sub
into
fwait
leave
cltd
bound
adc
hlt
pop
push
and
imul
cs
jb
cmp
cmpsb
cmp
or
mov
jle
mov
not
xchg
jo
leave
shlb
iret
mov
mov
gs
nop
ljmp
cmp
or
or
push
jecxz
je
add
or
rcll
cltd
cmp
aas
hlt
mov
cld
xor
mov
mov
push
sarl
fldlg2
sarl
jl
dec
mov
pop
ds
gs
mov
jmp
push
sub
pushf
xchg
aas
ds
jae
shrb
xchg
das
loop
cwtl
xchg
mov
inc
into
lock
jge
cmpsb
lahf
sub
in
mov
ret
xor
scas
xchg
dec
xchg
pop
and
lea
sub
clc
das
sbb
leave
stc
idivl
sbb
mov
dec
push
push
jl
cs
and
fistl
push
int
or
cmpsb
xor
sbb
imul
mov
dec
mov
and
mov
mov
out
or
cmp
int
imul
and
imul
sbb
xor
inc
aaa
fldcw
in
add
mov
arpl
cltd
xchg
mov
fidivl
outsb
push
dec
hlt
sbb
repnz
aaa
fcmovu
push
and
test
fbstp
jne
dec
rorl
dec
in
adc
shr
jae
out
cltd
pusha
icebp
dec
mov
jg
fs
cmpsl
test
or
xchg
bound
cli
jb
data16
jbe
std
jg
dec
mov
cmp
push
rcrb
in
sub
push
mov
dec
arpl
jg
popa
mov
aam
iret
sbb
jbe
cmp
or
mov
adc
xlat
sbb
push
add
scas
loope
push
or
leave
jle
mov
sbb
or
lahf
clc
insl
push
es
shrd
insb
push
jo
lcall
lock
xor
je
int3
mov
cmp
mov
mov
test
addr16
arpl
mov
arpl
ja
push
push
cmc
bound
xchg
dec
sarl
aad
cmp
jne
jge
adc
sub
int3
ja
int3
sbb
xchg
lods
enter
addl
jne
push
pop
inc
jne
pop
or
test
lock
jne
adc
out
fildl
fs
dec
mov
lret
lret
xchg
mov
sbb
sbb
fimuls
sub
cmpsl
xor
cmp
popa
push
test
pushf
xchg
jge
fcoml
inc
mov
xchg
dec
arpl
lcall
int
mov
push
sahf
adc
hlt
xor
aas
in
or
out
add
cmp
sbb
loopne
push
addl
pushf
adc
sbb
frstor
scas
push
aaa
in
scas
fisubrs
pop
punpcklbw
sqrtps
or
leave
cmc
test
mov
mov
or
rcrb
je
pushfw
mov
dec
ret
xchg
fisttpll
mov
xchg
pop
int
lods
je
mov
and
jo
cmpl
jecxz
pop
sub
filds
jp
adc
clc
fwait
xchg
xchg
sti
lods
pop
and
ja
int3
xor
inc
out
sub
in
movsl
repnz
sbb
push
stos
inc
mov
inc
mov
test
pop
inc
xlat
fidivs
and
xor
adc
sbb
out
xchg
ss
aad
aas
jae
xlat
xchg
fldl
scas
icebp
rorl
cmp
mov
mov
out
pop
jmp
imul
testb
sub
repnz
popa
and
and
mov
aam
jne
xchg
ret
aam
hlt
shr
and
loope
xor
and
mov
out
or
xlat
mov
add
outsb
pusha
insb
push
iret
push
cmp
mov
pop
lock
aam
cwtl
test
mov
xor
cld
clc
mov
mov
add
dec
add
adc
jp
xlat
sub
and
popa
clc
xor
test
cwtl
cmp
xchg
dec
mov
push
cmp
mov
insl
mov
gs
iret
adc
sub
mov
outsl
mov
lock
imul
sub
shrl
dec
jecxz
ljmp
cltd
in
xchg
add
sub
scas
push
shrb
arpl
dec
adc
mov
gs
ja
or
mov
xor
fdivs
scas
mov
add
frstpm(287
sbb
decb
sbb
jp
in
pusha
xchg
nop
cmpsb
out
inc
sbb
cmpsb
enter
add
test
and
test
sahf
vhaddpd
lods
mov
mov
out
xchg
mov
push
gs
ja
mov
mov
mov
mov
or
mov
ljmp
fiadds
mov
cmp
rcrl
sbb
sbb
mov
sbbb
dec
call
hlt
pop
mov
jo
mov
mov
fst
jb
test
mov
fsts
mov
imul
int3
aaa
adc
je
es
out
test
fldt
mov
ljmp
dec
dec
mov
movsl
pop
and
or
cwtl
lcall
and
idivb
jnp
outsl
fld
cmp
jo
out
lret
adc
or
ror
mov
mov
inc
mov
or
iret
popa
mov
test
dec
test
in
mov
sbb
rcll
aam
idiv
iret
sbb
push
clc
jno
lods
fmuls
packsswb
ja
cld
test
xor
jo
jmp
xchg
mov
sbb
cmp
xor
cmp
loopne
xor
sarb
imul
dec
test
xor
xchg
jle
imul
cs
push
pop
dec
out
gs
sbb
xchg
pop
sbb
std
das
and
ret
inc
or
lods
jmp
pop
add
push
inc
bnd
imul
test
xorl
imul
inc
cltd
cmp
mov
dec
repz
ja
es
icebp
andb
cmc
sub
aam
cltd
add
outsl
and
into
jle
sbb
hlt
xor
ret
and
cmp
loop
mov
das
mov
adc
inc
pop
sti
push
cmpsl
addr16
out
pop
cmpsl
cmp
ljmp
fwait
push
cmpps
inc
cmpsb
pop
lock
lret
xor
jbe
ljmp
je
cmp
or
mov
insl
xchg
cmc
xor
lahf
xchg
outsl
cmp
add
repz
sbb
cltd
into
pop
cmp
mov
gs
sub
ds
loop
xchg
pop
pop
andl
fs
jecxz
cmpsl
into
in
dec
mov
jge
test
inc
or
popf
shll
push
in
jmp
push
jnp
daa
add
jle
mov
cmp
in
push
add
xchg
cmpsl
mov
dec
dec
sbb
cmpsb
stc
xor
mov
dec
sbb
es
mov
cmc
mov
test
mov
mov
jno
aas
sbb
xchg
mov
sub
sahf
adc
popa
cs
xchg
scas
cmp
adc
test
sub
or
popa
bound
adc
pop
sub
xor
loope
icebp
cmp
push
insl
clc
and
aam
imul
lods
dec
ret
insl
adc
fidivrs
cli
in
aam
mov
fisubrl
xchg
push
jp
pop
mov
aas
xor
stc
adc
mov
cmp
mov
lods
push
test
lret
loop
out
mov
ja
push
xor
mov
mov
leave
xorb
int3
popa
gs
and
mov
aaa
cmp
pop
je
fsubrp
mov
pop
mov
sar
mov
fstps
sub
rol
sbb
xchg
insl
mov
andl
lcall
hlt
cli
inc
mov
cmp
pop
lret
xor
xor
mov
popf
mov
stos
dec
mov
add
mov
mov
mov
mov
pusha
ret
xor
call
jns
rcrb
push
insl
paddq
dec
add
xor
push
rcll
paddd
mov
push
mov
repz
movsl
mov
and
hlt
test
in
adc
jecxz
sbbb
dec
inc
xchg
pop
mov
dec
sbb
xor
inc
das
mov
sbb
faddp
incb
fmull
sbb
push
mov
scas
mov
movsb
cmp
lock
fwait
and
pushf
shlb
movsb
inc
test
xor
inc
xor
stos
inc
push
je
cmp
movsl
adc
mov
aam
sub
add
in
iret
or
pop
sahf
fmulp
or
icebp
dec
test
push
push
mov
pop
lahf
negl
add
xchg
mov
mov
rcll
cmp
fdivr
push
cwtl
loope
sub
push
mov
mov
add
rolb
cltd
js
stc
push
insl
adc
aam
xchg
pop
jbe
in
cmpsl
cmc
lods
mov
dec
push
fsubrl
fimull
mov
rorl
sbb
and
repz
push
stos
xor
mov
add
mov
push
mov
xor
out
in
ficomps
ficompl
and
shll
mov
cmp
adc
hlt
jg
pop
xchg
push
mov
out
inc
jns
or
arpl
loopne
or
ss
cmp
cmp
sub
xchg
int3
and
sub
pop
lret
cmp
add
add
in
lock
cld
cmpsb
test
idivl
mov
xor
in
ja
or
shlb
dec
pop
repnz
std
dec
cltd
ja
ljmp
dec
dec
scas
popa
fnstsw
and
pusha
jg
cmp
and
push
dec
gs
add
jmp
push
mov
fimull
je
xchg
lds
push
push
xor
fsubrs
loopne
mov
mov
dec
pushf
or
inc
inc
lahf
mov
mov
ror
mov
out
xchg
mov
pop
add
sub
xchg
mov
mov
test
jp
ljmp
nop
add
aas
pop
mov
aam
cmp
cwtl
push
adc
nop
push
lret
xchg
add
or
scas
enter
mov
js
add
loope
test
in
sub
ud0
ljmp
xchg
jecxz
stos
or
and
jbe
psllq
fisttpl
xchg
adc
adc
lods
add
aaa
adc
xchg
cs
fcoml
sub
faddp
cmpsl
jo
std
cli
pop
bt
in
psubb
dec
and
fldl
jno
inc
cmpsb
loope
cltd
jo
insb
add
repnz
test
sbbb
sub
or
into
into
adc
adc
sbb
xor
sahf
jnp
pop
fsubs
pop
gs
fucomip
cmp
ret
push
inc
divb
std
jo
dec
test
adc
out
adc
das
popa
jg
jg
xchg
aam
enter
add
and
aam
jle
popa
mov
cmp
test
test
cli
insl
jno
mov
adc
pop
ror
lret
fwait
int3
xchg
lcall
gs
push
cmp
dec
push
sbb
pusha
mov
mov
rol
es
push
mov
data16
jo
ret
inc
adc
inc
mov
cmp
das
out
xchg
mov
ja
mov
add
cmp
lods
call
fs
push
jmp
jb
xchg
out
jno
push
mov
cmpsl
orb
movsb
repz
mov
sub
mov
in
gs
mov
cs
repz
and
fwait
std
cli
fsubrl
ret
push
arpl
add
xchg
adc
sbb
in
jg
enter
dec
inc
sbb
inc
xchg
pop
sbb
and
xlat
mov
xlat
lahf
ja
les
jmp
xchg
inc
lret
pop
sub
add
lea
in
sbb
jle
in
fmull
jb
test
push
pop
mov
jbe
push
xor
lea
jae
test
jb
out
test
push
int3
cwtl
pop
and
test
cmp
dec
cmc
arpl
cs
mov
inc
daa
test
mov
lds
cmp
push
xor
mov
sti
sbb
fldl
push
out
inc
lcall
cmc
pop
div
icebp
mov
or
bound
inc
jne
dec
cs
in
adc
push
mov
lods
mov
popa
lcall
ret
mov
idivl
sbb
lock
shlb
mov
mov
cmp
rcll
xor
in
ret
outsl
mov
test
and
stos
lea
push
test
pushw
dec
jb
xchg
pop
mov
imul
ror
movsl
pop
repz
pop
cld
inc
push
sbb
sub
gs
or
xchg
imul
mov
cmpl
loope
push
ret
xchg
or
sbb
inc
push
packsswb
add
push
and
pusha
inc
leave
mov
mov
mov
test
push
push
cs
fs
pusha
inc
lahf
mov
jnp
lds
aam
mov
insl
jg
notl
pop
mov
xchg
mov
clc
inc
xchg
and
ss
mov
dec
fwait
adc
mov
insl
faddl
jo
cmpsb
xorb
imul
testb
pop
nop
sub
xchg
sti
sbb
sbb
sub
inc
ljmpw
push
stc
pop
lods
iret
mov
loopne
inc
jns
frstor
and
xchg
mov
fcomp
popf
sub
adcl
jecxz
lahf
jmp
sarl
sub
or
cmp
xlat
adc
mov
inc
adc
das
int
sbb
out
jns
fnstenv
and
cmp
add
js
dec
mov
mov
lret
fadds
adc
pop
cld
pop
sahf
int3
ja
and
inc
movsl
insb
or
pop
mov
out
shlb
mov
xor
fistpll
mov
lock
out
mov
inc
jmp
inc
cmp
stos
xor
insl
add
dec
mov
xchg
sar
jle
jo
decl
adc
test
loop
sbb
adc
cmp
stc
test
mov
xor
divl
jae
call
lcall
arpl
shrl
sub
ret
clc
add
cmp
pop
push
mov
test
and
cmp
popf
aas
inc
sub
inc
xor
out
nop
inc
cmp
add
js
daa
sahf
daa
out
popf
push
movsl
roll
jmp
nop
test
mov
test
pop
sbb
jnp
icebp
shlb
cmp
push
mov
xchg
xor
push
ja
xchg
test
ror
inc
ja
mov
lret
loopne
mov
in
xchg
enter
mov
inc
in
mov
push
imul
push
jno
xor
xor
mov
dec
decl
fisubs
sub
ss
adc
push
testb
ret
in
sub
mov
cmp
cmc
jb
movsl
aaa
and
inc
pop
jecxz
icebp
cmp
sub
sbb
popf
enter
sbb
xchg
lods
mov
adc
or
jecxz
mov
or
jne
lcall
cmp
xchg
cmp
xchg
sbb
pusha
pusha
fisttps
clc
and
cwtl
jnp
data16
jae
push
ss
out
push
repnz
dec
fldt
fcmovne
or
cmp
cli
fstpt
xchg
test
pmuludq
sub
jno
shlb
lahf
xorb
inc
jae
mov
push
movsb
mov
mov
pop
cld
add
shll
iret
push
rolb
xchg
lea
pusha
adc
aas
fwait
add
inc
push
orb
mov
jmp
xchg
imul
jnp
inc
push
add
jle
sub
jne
or
mov
jg
cwtl
subl
mov
cmp
mov
cs
fcom
pop
aaa
int3
pop
push
mov
bound
test
and
popf
pop
cmpsl
jge
scas
xchg
lret
scas
dec
fdivr
mov
rorb
loop
pop
arpl
mov
inc
jae
xor
mov
rcrl
push
or
addb
xor
mov
pop
or
popf
test
aas
cmp
cmp
mov
inc
pusha
push
xchg
popf
pop
out
in
loopne
add
and
mov
dec
jge
bound
cmp
sbb
add
push
aas
loope
into
ror
push
ret
xor
xchg
add
sbb
push
stos
lds
je
sbb
add
add
xor
push
ja
jmp
mov
dec
movl
inc
cltd
mov
test
xchg
pop
cmp
fisubl
jae
push
pop
inc
cmp
insb
mov
ja
pop
out
inc
pushf
push
xchg
out
fldenv
ret
push
jl
xchg
push
jge
jecxz
test
hlt
sbb
mov
loopne
mov
imul
movsb
addr16
ss
mov
inc
out
ja
add
mov
pop
or
jb
in
out
xchg
imul
jne
std
xchg
xor
mov
jb
jle
mov
mov
mov
inc
pop
pop
sbb
repz
in
mov
shrb
pushf
aam
push
sbb
lods
inc
mov
xor
in
jnp
ljmp
daa
data16
rcrl
out
fildl
dec
adc
jle
mov
loope
cli
mov
mov
js
out
mov
mov
test
jmp
scas
mov
subl
mov
and
lret
icebp
int
bound
rclb
rol
dec
pop
cmp
fwait
cmp
pextrw
xchg
testb
mov
inc
in
movsb
push
cmpb
pop
pop
jo
and
aaa
xor
sbb
stc
pop
lahf
fldcw
ret
stos
fisubrl
mov
mov
test
cmp
mov
jo
lea
push
fiaddl
das
mov
fs
aam
jp
sbb
sbb
lea
inc
cmp
imul
sbb
adc
adc
mov
cmc
sub
insb
cmp
or
pop
adc
subb
adc
xchg
mov
cld
jle
mov
fimull
repz
mov
inc
mov
fldcw
data16
das
dec
push
mov
mov
add
add
ss
lret
cmpsl
jae
movsb
shrb
sub
les
dec
into
sbb
in
cmp
or
ja
in
gs
popf
sbb
add
sbb
xlat
lahf
cmp
jl
lods
pop
in
or
jecxz
push
test
enter
add
jge
sub
lahf
jns
es
fcmovb
cmp
cltd
imul
jo
fdiv
sarl
inc
sbb
push
lods
and
test
mov
in
sbb
cmp
aaa
das
inc
xchg
xchg
in
mov
pop
pop
mov
push
sbb
cmp
pcmpgtd
call
jge
jp
jl
loopne
leave
loopne
loop
xchg
push
pop
in
sbbb
fndisi(8087
mov
xchg
loope
inc
add
inc
push
push
sahf
repz
test
push
fsubs
insl
ljmp
dec
cwtl
imul
mov
adc
cmp
dec
fmuls
lods
dec
sahf
clc
repnz
out
dec
sbb
pop
into
cs
imul
sub
outsl
or
mov
jmp
aas
pop
mov
shl
push
jb
and
xor
xor
pop
in
aaa
popf
dec
push
xchg
pop
xchg
dec
push
push
push
inc
fistps
sub
adc
loop
add
movsb
ja
rol
scas
adc
dec
pushf
shr
mov
insb
loopne
mov
mov
loop
lods
ss
gs
cmp
jg
test
sub
mov
adc
or
mov
cli
icebp
and
mov
or
mov
test
rcll
fimull
test
and
mov
sub
xchg
push
mov
gs
and
insb
lods
clc
lods
inc
sub
add
xchg
pop
cmp
adc
jge
mov
pushf
jns
subl
push
xchg
jge
repnz
data16
scas
pop
or
add
sub
test
inc
pushf
aad
and
sahf
jb
imul
mov
jmp
sub
mov
movsb
sbb
pand
dec
pop
fnstsw
push
iret
lret
repnz
scas
xchg
pop
loopne
pop
movsb
sbb
adc
jle
inc
jbe
dec
call
insb
dec
cld
adc
lret
dec
test
icebp
push
jg
cmpsl
inc
gs
imul
lods
clc
jne
sub
push
or
adc
out
pop
dec
hlt
mov
or
push
dec
ror
faddl
and
cmp
push
arpl
shrb
roll
repz
fimuls
pop
out
push
loop
arpl
mov
adc
mov
cmp
fsubrl
cmpsb
sbb
mov
and
mov
add
loopne
adc
mov
arpl
insl
aad
lret
inc
mov
jmp
mov
mov
mov
mov
fstl
inc
inc
xor
cmp
push
xor
mov
and
shr
or
or
daa
fwait
jg
mov
pop
xor
std
adc
xchg
xorl
adc
subb
xchg
addr16
mov
jecxz
lods
daa
fimull
test
cmc
in
mov
and
jb
xor
aad
mov
adc
popf
out
jmp
pop
sub
movsl
insl
addr16
das
sub
jecxz
dec
ret
pop
cmpb
stc
mov
xchg
sub
popf
inc
loope
pop
out
ds
jns
add
out
mov
rorl
out
jp
call
ss
or
in
hlt
or
nop
imul
jae
pop
mov
sub
mov
mov
mov
xchg
and
jmp
hlt
lcall
sbb
add
sbb
xchg
push
mov
mov
cmpsl
push
inc
and
gs
dec
ret
nop
mov
es
je
insl
cmp
mov
push
pushf
cli
loop
jg
sahf
adc
scas
jo
ror
jl
jnp
fdivrl
sbb
or
cmp
bound
out
and
fnstcw
repnz
int3
pop
inc
shlb
jbe
jmp
or
mov
test
inc
mov
and
repz
mov
adc
inc
clc
push
popf
int
push
into
inc
mov
jge
push
adc
repz
or
call
mov
mov
mov
subb
mov
cltd
xchg
jae
mov
mov
push
stos
xchg
imul
push
scas
stc
sub
adc
ja
in
pop
loop
mov
shlb
mov
pop
mov
inc
lahf
lret
pop
xor
scas
jge
roll
dec
sbb
in
and
inc
or
push
insl
cmp
hlt
cmp
cmp
and
or
inc
mov
int3
inc
in
xchg
mov
cmp
inc
nop
pop
mov
mov
mov
xor
nop
jmp
loope
cmc
mov
pop
mov
push
pop
adc
inc
sub
fmul
outsl
dec
lea
xor
rcll
int
push
xchg
fidivl
jecxz
adc
sbb
mov
lods
xchg
shrb
fcoms
jp
cmp
dec
mov
stos
negl
xor
fcoml
fsubs
out
sub
fwait
out
jmp
xchg
fldenv
xor
xor
daa
scas
fsubrp
cmpl
sbb
repnz
inc
out
imul
shrb
adc
ret
fldcw
sub
adcl
sub
sub
pop
lock
xor
dec
adc
add
lret
mov
shll
sub
dec
mov
inc
paddsw
push
push
lret
jp
cmpsl
daa
push
int
mov
ljmp
imul
icebp
push
push
sub
ret
shl
pop
and
in
sub
fwait
inc
mov
jmp
fdivrs
movsb
repnz
jecxz
push
pop
les
xor
push
or
add
add
popf
sub
sbb
imul
repz
pusha
inc
or
sbb
popf
fs
mov
jno
or
cmp
fdivr
xchg
vpsrlq
sbb
or
stos
adc
push
jns
mov
jnp
popa
dec
adc
pushf
mov
sub
out
cmp
cmp
sbb
jnp
nop
out
cli
int3
hlt
scas
jg
dec
ficompl
pop
fdivrs
js
and
dec
stos
jl
aas
lahf
out
xchg
nop
mov
xchg
fstpl
lret
sub
lods
sub
lea
out
arpl
je
orb
mov
jp
iret
mov
xchg
stc
cmp
inc
sbb
push
pop
shrl
adcl
xchg
adc
rclb
adc
cmp
adc
test
sbb
gs
mov
add
push
sub
test
and
cmp
lret
xlat
or
fwait
sub
pop
sbb
push
xor
insb
pop
sahf
clc
movl
aaa
mov
insl
setp
sbb
jae
popf
sti
xor
sbb
or
in
lret
and
mov
and
push
sub
cli
outsb
mov
mov
xchg
xor
lret
mov
out
mov
inc
negl
stos
push
and
xchg
roll
lcall
or
xor
je
cs
xor
test
add
adc
jle
mov
xor
xchg
add
ss
gs
dec
push
mov
add
je
test
hlt
jl
jp
test
out
testl
push
pop
mov
sub
icebp
inc
faddl
js
mov
scas
ja
mov
jnp
rcll
xor
xchg
test
addb
imul
lret
cs
out
lret
pop
dec
sbb
push
mov
sub
xchg
adc
cld
shrb
loope
in
pushf
adc
mov
jg
out
or
mov
les
push
mov
sti
mov
pop
fstpl
or
dec
add
nop
push
sbb
dec
adc
pop
movsb
es
dec
dec
in
rorl
jae
mov
or
aaa
outsb
and
jnp
jg
mov
fdivrl
ljmp
adc
popf
cltd
dec
dec
dec
lcall
add
push
add
mov
adc
enter
xchg
push
lock
push
and
and
jge
xorl
cwtl
pop
mov
movsl
and
incl
jne
ret
int
stos
leave
sbb
loop
mov
hlt
pop
cltd
jmp
js
xchg
fisubs
loopne
dec
mov
pushf
inc
push
out
ficoml
jne
out
ficoms
lods
insb
add
lods
xor
scas
pop
dec
lods
mov
leave
or
or
xor
aaa
dec
jne
out
test
mov
sub
sbb
inc
pop
push
mov
mov
pop
out
mov
jl
jns
bound
mov
cmp
repz
jbe
push
cmc
cmp
xchg
or
fisubl
cli
mov
or
dec
outsl
dec
dec
movsl
add
mov
bound
mov
push
cwtl
pop
and
lcall
pop
adc
push
out
mov
stos
push
stos
fnstcw
adc
rcr
andb
dec
dec
jno
sbb
mov
lods
and
mov
test
cs
sub
cwtl
fsubs
lcall
sbb
fiaddl
shrl
xchg
popa
pop
les
mov
cmp
cmp
mov
in
loop
repnz
gs
movsl
cmc
cmpsb
repnz
in
and
cmp
cltd
or
xchg
pop
mov
or
mov
push
pop
dec
cmp
and
inc
fwait
dec
cs
xchg
mov
fnstsw
scas
cmpsl
mov
hlt
mov
lock
je
fbstp
or
xchg
fbld
arpl
loop
pusha
shrl
inc
pop
sub
xchg
push
push
scas
sub
sub
cmc
dec
shll
aaa
shlb
lods
pop
dec
fwait
lcall
insb
mov
popl
sub
hlt
testl
pop
lds
ljmp
pop
and
testl
pop
push
scas
xor
mov
sbb
popf
xchg
nop
and
inc
enter
add
ret
inc
push
and
outsl
lods
inc
lret
xchg
sbb
je
xor
loope
push
jno
ljmp
daa
or
pop
pop
inc
in
cmp
xchg
es
and
rorl
or
sbb
jbe
dec
push
jno
sbb
test
in
sbb
push
jl
arpl
insb
gs
leave
jbe
push
jns
mov
cmc
lea
inc
loope
pop
cmp
jecxz
and
dec
pop
sbb
cld
pop
jmp
shrl
repnz
mov
in
lahf
sbb
fsubl
xrelease
inc
adc
xchg
pop
jae
mov
aas
or
dec
in
jne
bound
cmp
mov
sarb
dec
cmc
mov
or
cli
stos
pop
fwait
nop
inc
das
lret
xchg
enter
addr16
mov
push
gs
leave
or
daa
cmpsb
mov
jnp
loopne
shlb
add
xor
mov
cmp
inc
lea
xor
into
ret
cmp
push
fmull
push
aad
or
rorb
and
xchg
and
jo
mov
cmpsb
pop
cmpsl
xchg
ret
and
dec
sbb
repz
les
les
xchg
ljmp
test
mov
mov
dec
js
loop
pop
or
sti
lcall
xchg
leave
xor
cmp
push
es
lods
push
test
inc
aaa
cmpl
push
jmp
fs
fnstsw
int3
ss
jp
sub
xor
icebp
mov
pusha
sub
pop
pop
sub
ficoml
ret
sbb
mov
repz
stos
mov
ja
pop
pop
repz
insl
and
add
push
mov
push
iret
cmp
std
stos
mov
in
mov
pop
mov
rol
xor
rorb
sub
pop
jle
xor
mov
loopne
jbe
in
dec
fistpl
test
mov
rol
pop
adc
dec
xchg
sbb
sub
adc
jbe
adcl
push
push
mov
arpl
mov
push
pop
mov
js
cmp
add
dec
int3
xchg
gs
inc
gs
test
popf
push
aas
sub
pop
nop
xchg
andl
enter
xchg
mov
and
es
jge
in
idiv
std
bound
rorl
imul
sbb
push
jns
aad
shl
pop
das
pop
icebp
fsub
xchg
stos
sbb
ja
call
out
ja
shr
test
loop
or
xor
nop
dec
mov
xchg
test
sbb
cld
inc
push
or
pop
into
jge
dec
jbe
sahf
lods
rolb
xchg
push
inc
test
cmc
or
mov
mov
sysenter
jo
mov
gs
jg
stos
sbb
pushl
push
cmpsb
shll
test
mov
pop
push
push
es
mov
and
inc
out
adc
jl
aas
fnstsw
lds
pop
adc
sbb
shll
gs
pop
mulb
inc
and
rol
aam
icebp
inc
into
ficompl
or
aam
add
pop
popf
rcr
aaa
add
push
xchg
insb
pusha
negl
mov
cmc
mov
dec
out
pop
sub
and
out
movsl
cmp
jecxz
dec
bound
mov
sbbb
mov
mov
sbb
inc
lahf
repnz
dec
insb
ret
icebp
jae
cltd
pop
rcrl
jne
cmp
xchg
js
sub
xchg
push
pop
divl
into
mov
xchg
rcrb
in
and
dec
pop
faddp
dec
push
inc
mov
sahf
icebp
fdivs
pop
fldcw
mov
fsubl
aaa
adc
push
fwait
pop
popf
pop
ss
cmp
ffree
mov
sbbb
test
pushl
sbb
xor
shl
pop
dec
das
jmp
fsubl
and
or
call
addl
clc
out
mov
fcoml
push
gs
test
out
mov
push
sub
jmp
jno
mov
xchg
xchg
dec
dec
xchg
outsl
pushf
pop
lock
pop
or
sub
adc
lds
xor
ret
fs
sub
xor
pop
mov
aad
push
ret
fsub
outsl
mov
jmp
stos
and
cmpsb
adc
test
sbb
dec
sub
test
lock
xchg
mov
clc
fmul
mov
mov
push
mov
cld
insb
rcrb
into
test
mull
aad
insl
and
cwtl
jnp
lea
jl
prefetch
stc
sbb
ja
and
adc
clc
sub
or
sahf
pop
sbb
inc
pushf
popa
dec
arpl
shlb
stos
mov
test
cmpsb
push
stos
jge
adc
aam
mov
int
xor
mov
outsb
push
xlat
aas
cmp
in
lods
ljmp
js
lea
test
push
out
or
pop
or
ror
mov
cmpsl
test
das
sbb
popa
mov
pusha
inc
jmp
mov
sbb
scas
loopne
add
inc
mov
jle
pop
cmp
cmp
mov
pop
jle
filds
lcall
xchg
js
pop
jae
outsb
add
fcomip
cmc
lea
lods
mov
mov
mov
into
int3
stc
xor
inc
mov
test
pop
fwait
aaa
lret
fstps
cmp
cwtl
out
inc
mov
mov
push
pop
dec
pop
mov
adc
mov
add
stc
ljmp
stos
and
adc
inc
mov
je
js
aam
jle
mov
sahf
js
jl
cwtl
push
and
mov
mov
xacquire
or
jge
dec
add
sub
out
mov
js
push
push
mov
jae
repnz
mov
jnp
add
ja
js
xrelease
push
stc
mov
out
jge
inc
push
jns
aaa
jle
mov
push
cmp
mov
test
in
sahf
push
ret
out
ret
pop
data16
cmpsl
scas
cltd
inc
call
cmp
and
cmpsb
sbb
fdivs
pop
clc
es
cmc
into
fwait
and
jge
out
xchg
adc
dec
mov
cmpsl
sub
push
sti
dec
push
and
test
int
in
sbb
lods
orl
outsb
xchg
int3
aaa
mov
loope
subl
rorl
arpl
ds
mov
pop
stos
icebp
imul
test
and
gs
insl
int
pusha
imul
cltd
sbb
cmp
enter
cmp
xchg
sub
daa
xor
and
sbb
es
mov
bound
sub
sbb
jl
xor
xor
dec
cltd
scas
imul
icebp
and
cmovnp
jmp
or
lret
add
pop
ss
xchg
inc
sbb
jo
jae
shrl
mov
jbe
jmp
sbb
data16
lods
or
cmpl
jne
jo
sbb
sub
push
cmpsb
or
xchg
lea
arpl
pushf
xchg
pusha
ret
out
mov
stos
ret
mov
inc
cmp
or
xor
mov
mov
dec
sahf
jo
mov
int3
fmull
shll
mov
aad
xchg
shll
dec
jnp
aad
rclb
fsubrp
pop
rol
sarl
push
ret
repz
cs
outsl
pop
mov
jae
jae
dec
sbb
nop
insl
mov
enter
mov
sub
out
inc
lock
inc
insl
push
and
push
stos
repz
clc
sbb
stos
inc
xlat
fsubrs
mov
add
push
fiaddl
fnstenv
or
orl
xchg
mov
mov
jmp
and
into
jle
jle
dec
xchg
fdivrp
lea
cltd
mov
ret
test
and
dec
aad
adc
scas
rorl
hlt
in
or
aam
cmp
pop
jno
sti
mov
mov
cmpsb
iret
add
mov
mov
fstps
setno
test
adc
scas
out
jecxz
mov
es
and
in
das
push
scas
xor
push
jbe
flds
cvtdq2ps
in
dec
mov
std
or
cltd
cmp
fisubrl
xchg
sub
and
fsubrs
arpl
cmpsb
push
fs
mov
fs
add
and
or
stc
mov
loopne
mov
hlt
aas
shr
aas
int
into
sbb
push
adc
aas
mov
xchg
jmp
and
inc
in
data16
cmp
fs
sti
or
and
jno
sbb
ret
jae
adc
aam
dec
cmp
and
in
and
ds
sbb
cs
xchg
subl
mov
pop
je
outsl
lret
lods
das
mov
mov
fldenv
sub
mov
loop
push
dec
testb
add
das
sub
fwait
ret
psubusb
pusha
xlat
test
bound
and
shrb
enter
jmp
subl
push
pop
dec
jns
cmpsl
pop
xor
das
push
loopne
pop
mov
pop
rcrb
es
imul
add
cmp
cld
mov
adc
cmp
pop
loopne
js
mov
push
fisttpll
mov
lret
sbb
or
mov
push
cwtl
pop
fadds
sub
lea
pop
jge
jmp
push
jg
ss
lock
cmp
test
lret
pop
push
repnz
leave
inc
into
push
or
test
mov
push
cmc
push
icebp
lcall
xchg
mov
shll
and
push
jecxz
mov
pop
sub
mov
xor
aad
dec
cmpb
jne
fsubs
adc
sbb
andl
or
aad
adc
xchg
test
inc
gs
dec
mov
sbb
and
mov
shrl
xchg
push
jl
ljmp
out
mov
and
hlt
mov
js
stos
sub
or
jp
hlt
cmp
aam
xchg
cli
or
add
xchg
xchg
jb
adc
das
repnz
mov
cmp
jae
gs
repnz
ljmp
dec
dec
bound
repz
iret
test
dec
pop
movsl
icebp
shrb
sbb
pop
rolb
movsl
push
lahf
gs
into
ret
pop
loope
dec
and
es
loopne
dec
js
sub
loope
sbb
adc
and
aam
push
sti
mov
mov
insl
jg
std
dec
jo
arpl
stos
push
pop
dec
lcall
xchg
mov
mov
lahf
dec
add
dec
mov
std
lock
bound
mov
ja
out
sbb
xor
cwtl
add
push
jnp
loop
mov
ljmp
xorl
xor
int3
mov
jbe
mov
mov
stos
xchg
movsb
sub
sbb
xor
jmp
insb
inc
add
pop
mov
and
mov
push
sub
xor
dec
jb
cld
mov
mov
outsl
sub
dec
daa
or
mov
xor
push
rolb
mov
aad
sbb
jne
push
mov
out
jp
sbb
adc
mov
insb
xchg
lcall
pop
xor
push
orb
sbb
gs
pop
jle
hlt
adc
fidivrs
jns
fxch
sbb
push
in
into
jecxz
xchg
inc
adc
inc
imul
mov
aas
push
add
lods
outsb
sbb
fistl
repnz
sti
inc
cmp
sbb
inc
pop
mov
mov
jp
imul
fs
sub
mov
testb
stc
fadds
lock
aad
mov
leave
cmp
jns
jns
repnz
jbe
xchg
ficomps
arpl
ja
mov
sbb
xor
inc
stc
and
adc
shrb
or
or
xor
lock
pop
cmpleps
icebp
les
fwait
nop
js
lods
pop
repnz
imul
inc
popf
push
push
xor
mov
pop
add
mov
mov
test
mov
jb
mov
popf
fwait
outsb
jns
popf
push
push
es
imul
or
add
xchg
mov
push
repnz
jno
sahf
adc
mov
cmpb
aad
sti
jmp
fidivs
je
pop
push
sbbb
mov
ss
movsb
cs
int3
sub
mov
das
push
fadds
iret
stos
mov
gs
mov
dec
sbb
and
mov
lea
sbb
cmpsl
xchg
xchg
mov
push
sahf
imul
and
mov
sahf
fwait
int3
inc
xlat
icebp
push
cmp
push
ss
or
mov
stos
or
aam
and
dec
icebp
out
incl
push
xor
andb
pop
jl
in
and
aad
fwait
mov
aad
cli
fstps
or
add
adc
loopne
clc
inc
sbb
inc
sbb
adc
jmp
add
add
dec
ljmp
cmp
fcomps
fldt
mov
xlat
or
outsb
xor
pushf
mov
push
push
push
subb
sub
xchg
aad
pop
cs
jnp
popa
roll
jno
ret
and
in
je
pop
lcall
jmp
lcall
mov
adc
adc
or
cmp
sti
jae
push
cmp
stos
fisttpll
addl
mov
sbb
testb
add
lea
mull
movsl
adc
xor
adc
flds
sub
lea
outsl
shl
mov
add
or
inc
dec
aas
jnp
out
mov
push
fidivrl
xlat
outsb
lret
cmp
aad
mov
stos
out
notl
sets
jns
pop
jae
or
fistps
jne
and
call
in
ja
lea
popf
into
xchg
sub
jno
xor
mov
inc
cmp
in
mov
aad
mov
inc
stos
loope
stos
mov
and
xchg
mov
dec
add
iret
popa
mov
adc
inc
or
int3
push
mov
bound
xchg
push
or
push
dec
push
jo
mov
pop
shll
aam
mov
dec
jnp
test
adc
push
insb
jmp
push
in
cli
push
pop
sti
push
lock
adc
jbe
mov
xor
inc
mov
pop
cli
mov
sbb
das
sarl
hlt
sbb
daa
cmp
in
mov
cltd
sbb
mov
call
push
cmp
hlt
push
xor
bound
rcrl
flds
pushf
test
jmp
adc
repz
iret
pop
test
sbb
add
stos
iret
arpl
pop
fucomi
inc
ss
mov
movsb
outsl
subb
jno
repnz
ss
data16
sbb
xchg
lea
hlt
imul
adc
bsf
out
stos
jmp
jecxz
cmp
xchg
or
mov
dec
xchg
int3
lds
jmp
lcall
mov
ljmp
call
inc
lret
bound
fldenv
xchg
adc
loope
sahf
test
pop
sti
shrb
js
inc
xchg
aam
gs
jb
mulb
mov
into
pop
out
dec
xchg
pop
loopne
orl
sarl
jmp
pop
push
pop
jl
adc
adc
push
mov
and
int
mov
loope
faddl
lcall
adc
or
cmc
adcl
cs
scas
lcall
icebp
dec
aaa
inc
jmp
sti
cltd
orb
loopne
jl
fs
testl
fxch
nop
sub
rcrl
mov
xchg
popf
mov
xchg
mov
xorb
or
shrb
repnz
push
add
pop
mov
movsb
movsl
dec
add
push
mov
fdivr
pushf
push
popf
pop
test
ret
dec
fsubl
int
mulb
jb
lods
rorb
dec
je
mov
inc
dec
dec
nop
fidivl
mov
popa
lea
xchg
cwtl
sbb
mov
sbb
push
jbe
rcrl
sub
sub
in
mov
fidivrl
out
in
popa
js
push
jns
and
dec
ss
stos
inc
push
int3
jle
cmp
test
pop
and
mov
orl
cs
adc
adc
jecxz
jnp
xchg
cmp
aas
push
rcrl
loope
mov
inc
xchg
jge
or
jne
and
xor
jmp
js
pop
add
mov
push
mov
push
xorb
dec
mov
scas
cltd
xchg
mov
bound
in
jae
inc
out
lds
insl
jnp
pop
mov
rclb
inc
lea
xchg
leave
cmc
out
std
xor
gs
add
fadd
mov
mov
fs
xor
leave
mov
in
adc
cmp
ret
test
xchg
dec
xchg
popf
sarl
lods
lret
in
scas
lahf
jns
sub
in
push
cmc
mov
xchg
xor
aam
dec
adc
mov
popa
xor
repnz
adc
inc
filds
leave
fnsave
mov
xor
cmp
cmp
lock
inc
pop
or
xchg
mov
enter
mov
push
lods
mov
sarl
test
lock
fbstp
or
or
mov
and
outsl
insl
or
ret
fisubrl
fldcw
stos
push
enter
fs
inc
sub
aaa
test
sub
dec
mov
xchg
dec
add
lods
xlat
mov
mov
scas
mov
adc
mov
add
sub
sbb
fs
xchg
pushf
pslld
push
fdivrl
mov
inc
add
mov
xchg
aam
or
adc
sub
test
and
cli
sub
push
xchg
in
sbb
rclb
or
pop
xchg
daa
sub
dec
pop
dec
lds
sbb
nop
enter
add
pushl
iret
ror
mov
sub
imul
mov
fadd
sub
pop
dec
lcall
push
inc
ffreep
and
icebp
inc
mov
cmpsl
cmc
adc
push
in
or
inc
rep
test
or
sub
jae
jae
stos
mov
pop
arpl
aaa
mov
push
or
sti
push
or
sub
stos
je
lock
lahf
aas
inc
push
jne
pop
lods
ljmp
cmp
push
pop
fcoms
ret
mov
call
ljmp
fbld
cmpsl
jnp
jae
mov
xor
pop
dec
gs
stos
in
mov
xchg
push
pop
mov
push
insl
mov
rorl
pop
ja
dec
stos
mov
cmp
push
loopne
adc
xchg
sbb
jle
ret
jae
test
jmp
xor
cmp
jns
push
popf
and
and
int
jg
or
cmp
pop
cli
cs
jle
enter
jecxz
dec
cmp
and
dec
pop
divl
into
lea
sub
xchg
arpl
inc
or
pusha
sbb
add
fnstcw
popa
cltd
sbb
sub
lahf
inc
inc
mov
outsb
negb
and
push
mov
jnp
sbb
inc
and
sub
test
addr16
icebp
lahf
aad
or
test
imul
add
jmp
into
ret
inc
data16
cmp
mov
sbb
add
lods
mov
in
into
pop
sahf
push
and
icebp
ja
sahf
inc
push
pop
stos
loopne
ss
xchg
xor
and
dec
xchg
pusha
scas
sub
dec
dec
ret
mov
sbb
cs
push
dec
insl
test
pop
scas
adc
dec
xchg
call
loop
or
out
push
in
pop
ret
mov
push
dec
adc
cltd
jecxz
pop
add
pop
and
fcoms
add
test
jp
push
fnstenv
clc
lds
in
adc
or
mov
adcl
imul
sub
fldcw
mov
inc
imul
mov
rep
xchg
jnp
cmpsl
mov
sub
daa
adc
adc
mov
xor
lcall
dec
sbb
push
daa
mov
inc
mov
sub
mov
push
ret
pop
add
sbb
inc
mov
mov
mov
std
mov
cmp
leave
int
aaa
push
hlt
clc
add
rolb
mov
loope
sub
sub
and
inc
stos
clc
lahf
xchg
mov
push
or
xor
jecxz
stc
pushf
or
sub
or
mov
pop
pop
clc
push
fisttpl
test
push
mov
mov
cs
cmp
mov
mov
out
test
push
into
ret
fdivl
fs
hlt
test
pop
iret
ljmp
insb
movsb
mov
int
push
mov
rclb
mov
lds
test
popf
push
ss
pop
cmp
aad
pop
and
iret
cltd
sti
int3
test
adc
pusha
push
push
mov
mov
scas
mov
aaa
sub
test
cld
or
xor
ficompl
daa
popf
lock
jbe
popf
mov
iret
out
aam
mov
dec
cld
mov
push
shr
pop
sbb
repnz
ret
mov
addl
in
fnstsw
adc
jle
iret
out
mov
test
xchg
rcrl
dec
ret
push
push
sarb
jl
mov
test
sub
mov
pushf
pop
cmpsb
mov
xchg
out
cmc
xchg
dec
xchg
xchg
into
cmc
daa
test
add
lfs
sub
adc
sbb
or
mov
jp
jge
out
cmp
cwtl
sub
sub
rolb
inc
mov
lret
add
push
mov
jns
xor
mulb
mov
arpl
pop
fdivrl
mov
enter
icebp
out
in
push
bound
stos
push
xchg
insl
fs
cltd
out
arpl
popa
dec
adc
ficomps
sbb
mov
xchg
imul
mov
test
sub
adc
or
inc
pop
icebp
insl
cmp
aas
adc
sti
pop
pusha
sbb
out
sahf
mov
aaa
fldcw
adc
mov
in
mov
adc
inc
push
rorl
push
ret
iret
aas
mov
dec
xlat
and
dec
add
iret
mov
subl
mov
addr16
push
je
mov
outsb
aad
xor
or
push
iret
or
call
sbb
or
out
push
jnp
clc
test
cli
loopne,pt
mov
mov
mov
and
jno
jl
or
mov
jge
mov
pop
or
inc
imull
iret
mov
lret
jp
repnz
mov
and
out
jg
xor
sahf
mov
lahf
int
dec
and
mov
fcompl
dec
aas
cmp
je
out
stos
xor
ret
ret
outsl
negb
dec
adcb
pusha
int
imul
fdiv
repnz
mov
jg
roll
addr16
inc
push
int
cltd
xor
lods
xor
jb
stos
jnp
mov
lcall
sti
push
cli
xchg
mov
ret
lock
sbb
cmp
or
pusha
mul
out
pop
pushf
mov
cltd
mov
push
aas
xor
ret
pop
imul
jbe
shll
jge
call
divl
or
xor
iret
lock
pop
bound
in
mov
loop
ds
ja
push
outsb
xor
adc
or
leave
xor
fistpll
dec
mov
das
push
callw
xor
pushf
jnp
jae
shll
les
mov
es
jnp
in
mov
rcl
movsb
mull
lock
es
jnp
out
push
jl
test
test
jb
jno
mov
leave
or
fadds
dec
cli
rcll
outsl
push
mov
jo
insb
xor
inc
mov
xor
test
repz
push
leave
jp
test
lods
les
sbb
mov
cmp
xor
jge
sub
pop
movsl
call
dec
pop
mov
addr16
shll
jo
pop
imul
aas
push
jl
and
hlt
mov
lods
lahf
loopne
or
ret
ret
mov
les
int
aaa
int
dec
inc
mov
cltd
sbb
insl
popa
movsb
push
inc
mov
pusha
aad
arpl
push
sbb
cmpsb
repnz
sub
cli
pushl
ret
pop
push
push
lods
mov
add
cli
pop
sub
les
mov
push
rorl
cmp
test
repnz
pop
subl
leave
pop
movsb
ret
cmp
data16
or
xchg
jo
sahf
ffree
daa
adc
xlat
xchg
test
or
or
add
hlt
add
mov
repz
mov
mov
cmc
jnp
inc
incl
adc
cmp
lods
fmull
cmp
sub
or
pop
add
push
test
gs
jo
mov
xor
push
aas
lret
lods
clc
push
xchg
jbe
out
arpl
pusha
xchg
and
das
loope
push
pop
or
shrl
pop
popa
cs
adc
xor
mov
push
sub
call
add
dec
push
mov
cmp
and
imul
test
adc
cmc
pop
pop
jle
fmul
pop
jecxz
sub
xor
lret
jb
mov
call
aas
jg
and
cmc
in
into
cmp
add
int3
popa
pop
push
push
bound
aaa
and
adc
loop
shll
loope
pop
lods
lret
push
shl
fsubrs
test
outsl
xor
mov
xor
lock
aaa
adc
xor
mulb
sahf
pop
sbb
mov
or
int
or
cltd
imul
xor
loope
dec
push
push
dec
or
cltd
pop
sbb
fisttpl
jmp
cmp
lret
sahf
mov
mov
add
lds
fs
xchg
pusha
aam
mov
xor
and
inc
add
jno
faddl
das
in
nop
mov
sbb
stos
pop
dec
ljmp
adc
inc
je
sbb
push
jno
popa
nop
or
movsl
jne
fs
cld
gs
lcall
lods
sub
push
push
ret
jns
int
sahf
ret
jl
sbb
sbb
push
lods
xchg
test
decl
dec
pop
ds
std
into
lds
sbb
fcompl
xchg
dec
pushf
dec
icebp
pop
mov
negl
or
and
mov
push
cmp
pop
ja
inc
or
movq
push
adc
pop
push
inc
ja
out
push
xchg
mov
pop
sbb
push
rcrl
mov
xchg
xchg
into
cmp
jg
loopne
sub
popa
repz
mov
push
adc
inc
mov
adc
dec
ss
fbld
add
and
lds
push
fst
mov
push
jo
inc
test
mov
test
test
adc
cmc
popa
or
push
or
adc
sub
ljmp
mov
xchg
inc
mov
dec
dec
cmp
mov
xor
mov
mov
ror
mov
les
jae
loopne
mov
leave
cmp
mov
pushf
jns
imul
cmp
movsb
mov
out
loopne
stc
xor
xchg
iret
mov
popa
out
out
inc
xchg
sbb
clc
scas
xchg
pop
adc
mov
dec
mov
jmp
lret
cmp
inc
test
sub
repz
mov
sarl
movsl
mov
lret
and
add
nop
xor
dec
out
mov
test
js
add
push
mov
mov
and
aam
mov
pop
cmp
inc
cwtl
sub
cmp
testb
add
inc
jmp
cmp
xchg
data16
rol
push
pushf
lret
loope
adc
outsl
adc
nop
pop
std
hlt
out
shrb
shll
sbb
call
cld
xor
lds
sahf
cltd
sbb
push
fwait
scas
adc
pop
in
les
sbb
mov
and
sbb
cmp
jle
or
pop
jle
cmp
xchg
xchg
push
aad
pop
lcall
sub
mov
jns
push
fistpl
scas
xchg
jo
loop
popa
dec
lret
out
bound
int3
pop
sub
mov
ja
push
sbbl
inc
lahf
cmp
xchg
sbb
popf
outsb
xchg
shll
addr16
add
movsb
push
div
repz
cmpl
push
enter
dec
das
fldl
and
lret
nop
jnp
fildll
sbb
clc
mov
divl
imul
adc
mov
mov
push
dec
mov
divb
lret
inc
sub
mov
xchg
subl
mov
clc
push
push
dec
mov
insl
cmc
xor
mov
test
adc
mov
enter
dec
sub
push
loopne
mov
in
pushf
fsubs
sbb
push
jmp
cmc
jl
fsubrs
sbb
dec
stos
push
sub
pop
dec
push
mulb
mov
sbb
jp
or
jb
or
in
lret
and
insb
jmp
outsb
outsb
jg
inc
add
jmp
sbb
jnp,pt
sub
xchg
cmc
fadd
mov
mov
addr16
icebp
mov
inc
cmp
sub
xchg
lret
lret
or
cmp
or
xchg
mov
xchg
fsubp
mov
push
pusha
sbb
ss
and
inc
or
push
mov
in
mov
repz
jg
or
mov
pop
insb
add
mov
imul
xchg
les
push
ret
pop
cmpsb
jbe
pop
int3
jne
xchg
and
lahf
scas
sarb
test
mov
jmp
xor
xchg
inc
cmp
inc
jbe
cli
jecxz
xchg
jns
imulb
call
ret
pop
pop
or
mov
jle
sub
sub
pusha
push
jp
lods
or
pop
dec
mov
dec
sbb
adc
jp
popa
sbb
lods
cmp
jmp
les
es
imul
ss
pop
jne
data16
cltd
dec
imul
loop
mov
sti
jg
sbb
adc
jno
shrb
aam
in
sbb
lods
out
jns
inc
ljmp
je
pop
lcall
lds
arpl
mov
add
cmp
add
das
sub
out
aaa
pop
repnz
je
aas
adc
cmp
fs
rep
mov
push
sti
add
mov
cmc
ja
mov
nop
add
inc
jno
imul
xlat
mov
or
xlat
and
jl
add
mov
mov
sub
clc
mov
xchg
mov
push
mov
cmp
scas
shll
mov
rorl
jecxz
mov
pop
push
test
enter
xor
adc
sar
xchg
lock
loop
call
mov
mov
cmp
inc
push
or
ljmp
dec
or
or
mov
cmp
cmp
loopne
cmp
call
addl
dec
je
scas
pop
xchg
scas
lcall
inc
repnz
mov
or
sub
scas
fs
imul
or
push
pop
in
pushf
stos
add
push
add
imul
les
rcrl
ds
dec
mov
call
call
pop
push
dec
and
push
cwtl
ja
cs
add
inc
stc
sti
mov
push
loopne
sbb
jne
pop
lret
xor
fistps
add
push
ss
ret
ja
dec
cmc
lcall
mov
mov
xchg
sub
pusha
adcb
add
or
stos
pusha
fs
scas
sub
aad
sarb
jae
in
in
into
xlat
sbb
sub
inc
fldcw
add
imul
pusha
pop
into
sahf
or
dec
movsb
jno
xor
pop
nop
test
jmp
mov
fcomi
and
inc
adc
js
test
pop
push
jp
or
cmpb
flds
or
out
adc
lods
push
scas
push
jne
push
xchg
sub
jne
sbb
mov
nop
mov
cld
dec
pop
daa
aaa
mov
mov
mov
xor
popf
notb
sbb
andl
pop
fcoml
andb
mov
out
mov
or
dec
enter
and
push
cmp
and
push
xor
repnz
outsl
jne
shll
xchg
cmp
call
test
jmp
fldt
or
add
sbb
ret
adc
imul
xor
stos
adc
mov
sahf
xor
in
jnp
lret
and
adc
or
insb
arpl
xor
and
popf
mov
cld
mov
cmp
and
lock
gs
mov
test
int3
pop
mov
jo
push
enter
xor
sbbb
je
push
and
cwtl
inc
pop
bnd
aam
cwtl
mov
lret
mov
dec
mov
or
xor
cmp
es
orb
mov
adc
mov
ljmp
das
cmpsb
lods
ret
dec
test
dec
addr16
jge
mov
mov
mov
cmpsl
push
dec
cmp
ret
sbb
cmpsb
mov
ds
js
xchg
push
imul
mov
sub
loopne
and
int
jmp
sub
fsubrs
mov
scas
adc
add
push
or
loope
push
jge
xor
jecxz
push
or
mov
cmp
xchg
mov
loope
mov
rcr
jge
or
fists
cs
mov
dec
inc
fildl
mov
stos
sub
js
adc
outsl
sub
sbb
mov
or
ret
jmp
lcall
sbb
push
pop
xor
mov
dec
dec
jmp
dec
std
movsb
lods
add
loopne
pop
clc
pushf
pop
in
push
clc
lret
ds
or
fdivs
mov
jno
mov
adcl
pop
mov
sbb
ret
cmp
movsb
bnd
push
and
repz
and
inc
xchg
push
sbb
cwtl
bnd
jns
xlat
pop
in
je
hlt
shrb
sub
cmc
mov
and
shr
xchg
out
out
cli
imul
and
rorb
mov
dec
mov
lods
fiaddl
mov
cmp
or
push
cli
or
call
add
pop
fisubl
call
rol
enter
mov
sub
and
test
neg
nop
xchg
andb
push
mov
fdivrs
push
inc
out
test
cld
es
sarl
jne
xchg
lret
sbb
das
sbb
mov
cmpsl
fisubl
sti
fidivl
test
sbb
and
les
xchg
xchg
sbb
mov
call
scas
mov
dec
mov
push
mov
ret
adc
sub
jb
and
sahf
push
fstpt
cmp
pop
arpl
insb
or
and
xchg
pop
adc
or
lods
ja
bound
stos
dec
popf
xor
cmp
rcrb
jnp
fstps
add
ds
sub
adc
in
pushf
inc
cmp
mov
ljmp
jge
test
xor
adc
or
push
xor
xchg
test
das
or
xor
jle
mov
incl
cmp
pop
outsl
inc
insl
and
xchg
cmpsl
jo
ret
cltd
and
jg
clc
mov
cmpsb
sub
dec
rcrl
xor
daa
sub
clc
mov
ljmp
xlat
xchg
xor
cld
adc
sbb
fildl
hlt
add
fs
cmpsb
cli
push
test
mov
or
mov
mov
jo
adc
mov
das
out
scas
lods
das
pop
dec
inc
mov
xchg
jp
fldt
fisttpl
aaa
pusha
lret
pop
jo
sbb
inc
pop
mov
dec
outsl
fs
mov
fadds
mov
jo
pop
fildl
jge
dec
popf
mov
inc
add
ret
lds
or
push
test
and
pop
cld
outsb
movsb
in
inc
adc
les
pop
or
push
mov
call
subb
jae
ljmp
sarl
xchg
fisubrs
inc
js
mov
jbe
or
imull
jmp
and
inc
xchg
cld
inc
cld
or
add
mov
cs
arpl
inc
movsb
arpl
inc
aas
ja
arpl
and
cmp
mov
mov
scas
push
rcrl
adc
out
pop
imul
out
std
aam
jecxz
xorps
cmc
mov
and
sbb
cmp
fmuls
fisubrl
fs
mov
insb
in
ja
dec
inc
mov
popa
movsl
xchg
jle
xor
inc
lret
addr16
mov
aas
sbb
test
mov
mov
xor
clc
push
jo
pop
faddl
cmp
lea
push
sti
arpl
dec
xor
adc
in
push
jp
lcall
inc
ret
pop
mov
test
inc
pop
dec
mov
sti
mov
movsb
iret
dec
repz
push
imul
out
fdivrs
ffreep
pop
mov
bnd
test
mov
loop
xchg
test
adc
xor
adc
into
rol
ficompl
cli
dec
xor
cmc
pop
fmulp
dec
roll
mov
mov
inc
test
mov
movsl
adc
and
arpl
shrl
add
mov
inc
mov
add
adc
inc
mov
sub
fs
into
incb
popa
stc
jb
aaa
sub
add
xlat
inc
jp
sub
or
sub
mov
mov
pop
push
jae
mov
cmp
pop
or
test
sti
jae
add
js
push
test
bound
fisttpl
enter
xacquire
jmp
adc
fisubs
movsb
adc
repz
cmp
stos
out
mov
loopne
push
int3
stos
bound
addr16
out
inc
jo
lock
pop
repz
jno
stc
fs
cmp
loop
mov
sbb
repnz
mov
stos
dec
jbe
mov
aaa
xor
cmp
pop
sbb
inc
jnp
or
out
xor
outsb
mov
inc
test
mov
dec
add
call
imul
sbb
std
or
adc
addl
ret
xor
add
loopne
xlat
loope
cld
xor
addr16
or
aaa
mov
addr16
cli
shl
inc
mov
inc
lahf
mov
mov
push
add
int3
dec
pop
lods
jle
mov
out
aaa
jbe
jle
adc
cli
repz
xor
dec
test
mov
scas
inc
push
es
or
rorl
sbb
adc
adc
pusha
call
xchg
pop
sbb
popa
adc
sub
insl
loop
add
jle
out
inc
rcll
cmp
outsb
icebp
xchg
sub
fcmovnbe
mov
popa
adc
ljmp
sbb
xor
inc
sbb
cmp
xchg
bound
aas
mov
and
ja
pop
aaa
xchg
mov
sahf
mov
int
insl
jp
mov
xchg
inc
call
rep
pushf
hlt
mov
test
sub
xchg
inc
stc
jb
mov
adc
data16
dec
pop
lar
bnd
cmp
or
arpl
mov
cli
or
insb
int3
int3
sbb
pop
fdivrl
adc
dec
mov
jo
fwait
js
mov
push
pop
or
xchg
pop
test
insl
pop
xor
leave
sub
xlat
pop
jmp
test
mov
test
aad
mov
data16
adc
in
adc
ljmp
pop
sub
ja
out
lcall
add
addr16
clc
jae
mov
mov
insb
shll
ret
fwait
pop
jnp
mov
rcl
lds
sub
daa
out
sbb
imul
inc
scas
rep
sub
mov
sub
pusha
xor
jecxz
mov
or
mov
rolb
dec
js
sub
adc
pop
pop
jae
aam
push
pop
inc
shl
lods
call
cld
xor
adc
dec
stos
aad
mov
cs
inc
sbb
iret
sub
push
pusha
stos
or
add
and
out
fistpll
sbb
pop
push
cs
dec
push
icebp
mov
test
idivl
jle
sbb
inc
sahf
mov
std
pop
push
mov
loopne
outsb
pop
fxtract
or
jl
out
dec
push
sbb
cltd
insb
pop
icebp
clc
pop
mov
add
lret
shl
push
in
cmpsl
es
leave
push
mov
xchg
or
jnp
xor
cmp
add
mov
outsl
fbstp
enter
and
int
xor
ret
sbb
add
xor
sbb
lods
dec
stos
dec
and
stc
fnstcw
fiadds
pop
outsl
sbb
lahf
jg
adc
jecxz
cmp
sarl
jl,pn
xchg
outsb
push
add
sub
xchg
cli
xchg
pop
in
scas
lahf
and
scas
jb
jge
insb
lret
lret
tzmsk
inc
add
ljmp
jmp
ja
push
lret
dec
negb
fisttpll
jns
out
js
pop
and
outsb
and
sti
jg
cmpsl
inc
jge
mov
or
cli
cli
pop
dec
sbb
lea
rcll
push
xlat
mov
frstpm(287
mov
push
stos
outsb
leave
sub
mov
cltd
call
adc
iret
stos
aas
cmc
mov
mov
aad
out
push
shlb
cmp
popf
mov
dec
mov
cwtl
or
dec
inc
or
movsb
mov
pop
jecxz
sbb
jno
les
mov
cmc
aas
dec
out
mov
push
dec
adcl
cmp
mov
ja
inc
sahf
out
lahf
daa
jno
xchg
cmp
cmp
adc
push
pop
mov
fcompl
repnz
sub
out
inc
fnstsw
mov
pop
lods
cli
cli
pop
mov
std
je
shrl
out
repnz
shl
adc
jnp
cmp
imull
leave
xchg
cmc
cmc
mov
movsl
adc
lret
sbb
adc
push
xchg
inc
push
outsl
xlat
push
dec
adc
jo
scas
outsl
mov
mov
mov
jle
and
icebp
sti
mov
lock
rcrb
dec
aas
movsb
fnstsw
lahf
loope
in
aad
dec
mov
adc
rolb
es
or
out
mov
or
arpl
sub
lret
adc
nop
push
dec
imul
stc
test
jle
push
jns
pop
or
jp
push
push
xor
push
mov
pushf
arpl
push
cmpsb
mov
pop
xor
int3
mov
xor
adc
xchg
jae
mov
mov
rolb
cltd
mov
push
jne
fimuls
test
lea
outsb
jmp
sub
xor
ja
push
test
add
adc
mov
xchg
aad
sbb
cli
inc
cltd
jne
aam
sub
out
push
mov
cmc
fildl
mov
or
fwait
lods
jbe
dec
push
das
subl
xcrypt-ofb
cmpsl
lods
xlat
ss
jno
lcall
mov
mov
popf
dec
mov
mov
pop
push
mov
clc
mov
pop
xlat
and
jg
js
jle
sbbl
push
and
mov
pop
adc
or
popf
add
loop
pop
mov
mov
or
insb
xlat
adc
scas
jne
pop
jl
inc
jnp,pn
push
mov
es
loop
inc
push
gs
mov
loop
xor
imul
pop
int3
mov
in
dec
out
add
out
bound
or
adc
dec
clc
xchg
repz
test
and
lds
add
icebp
sahf
xor
pop
out
rorb
pop
test
test
ss
jne
dec
dec
adcb
loop
sbb
xchg
sbb
adc
pop
mov
es
in
adc
dec
mov
mov
cwtl
pop
loopne
cmp
js
push
sbb
xchg
dec
xor
xchg
aas
sahf
gs
ljmp
je
mov
cli
sub
pop
test
xchg
push
sbb
sub
xchg
js
rcrl
cmp
pop
int3
in
mov
mov
adc
fcomip
cmp
and
sahf
ljmp
xchg
enter
xor
iret
mov
daa
les
divl
jne
scas
xor
lods
or
pusha
movsl
mov
dec
mov
hlt
ret
jge
sub
xchg
nop
add
ljmp
xchg
mov
push
dec
ret
pushf
dec
movsl
ds
sbbb
bound
xchg
cmp
cmp
mov
out
movsl
popa
mov
cltd
mov
loopne
aad
xchg
jne
ds
scas
lea
test
or
cmpsb
adc
push
mov
adc
subl
fistps
mov
shl
inc
xor
data16
div
dec
add
pop
iret
jle
jg
inc
dec
adc
sub
mov
sti
sbb
das
push
mov
jge
jne
addr16
or
push
inc
in
lods
cmp
push
jge
mov
and
add
push
data16
sbb
mov
dec
enter
or
mov
push
mov
ret
jno
stos
mov
stc
ljmp
je
jb
cmp
lds
das
lea
fdivs
push
adc
add
mov
sbb
fdivrl
mov
mov
out
pop
mov
lret
stos
or
or
ja
pop
jmp
je
xor
or
hlt
xor
mov
pop
inc
pop
push
push
adc
into
out
adc
stc
or
xlat
fwait
pop
jne
leave
dec
into
sub
lods
xor
nop
xor
inc
dec
cmpsl
xchg
pop
test
mov
repnz
icebp
jb
inc
rclb
stos
int3
jnp
dec
mov
mov
les
cmp
add
in
sbb
adc
xor
cmpsb
pop
and
cmp
or
addr16
cmp
push
lret
add
pop
test
int3
outsl
inc
dec
das
xor
out
push
mov
pop
cli
test
mov
mov
lret
xchg
rorb
pop
sub
lret
into
movsl
mov
nop
lock
jmp
push
pusha
lcall
lock
or
stos
jmp
push
adc
stos
cltd
inc
lock
incl
add
xor
shll
cmp
cmp
dec
out
mov
jle
scas
jne
pop
cld
test
enter
stos
stos
cmp
cmovo
fildl
jo
leave
std
dec
xchg
lds
jo
mov
mov
das
into
aad
test
pop
std
sbb
push
xor
pop
in
out
daa
fdivrs
out
lret
addr16
int3
xorb
pop
sbb
ds
mov
aam
add
inc
mov
add
bound
sbb
jecxz
or
stc
jg
mov
out
jecxz
data16
loope
pop
mov
fbstp
xor
jno
xchg
or
sbb
pop
das
xchg
popa
inc
flds
out
push
mov
cltd
push
jge
add
xorb
inc
mov
sbb
lahf
or
fxch
mov
sub
adc
cs
clc
sub
into
xor
cmp
sahf
loop
mov
filds
leave
adc
out
lahf
sbb
xorl
shl
adc
lock
inc
flds
movsb
fsubrl
in
adc
mov
clc
imul
ds
rol
outsb
mov
mov
das
ja
mov
lahf
inc
mov
arpl
cmpsb
xchg
mov
aas
and
je
lods
cmp
pusha
jo
cmp
xchg
mov
jbe
fidivrs
inc
enter
pop
sbb
and
or
adc
jmp
hlt
xchg
fsubs
cmp
sbb
push
push
adc
jno
pop
fs
nop
es
jl
aaa
inc
xchg
in
sbb
fnstsw
mov
ja
inc
jl
push
fs
in
lahf
fadd
scas
jl
adc
mov
lcall
mov
repz
aaa
cmp
shll
mov
fcomi
stc
jl
lock
loop
inc
dec
lcall
xchg
fidivs
push
cmp
dec
addl
test
cmpb
jl
pop
dec
movsb
sub
mov
adc
stc
js
push
dec
scas
mov
cltd
cmpsl
lret
mov
adcl
pusha
cmp
ror
sbb
pop
add
sub
push
mov
add
popf
and
test
mov
jns
lea
aaa
lods
and
test
rclb
inc
aaa
push
jg
cmpsb
dec
cwtl
data16
fcmovnb
xor
add
lods
stos
xor
loope
cli
jmp
xchg
fbld
mov
popf
inc
in
je
push
jl
and
xor
jmp
cwtl
addb
adc
inc
lea
push
adc
call
mov
adc
push
push
pop
andb
inc
jae
sti
shll
outsb
popf
ja
pop
loop
cwtl
leave
lods
xchg
loope
sti
xchg
mov
shlb
push
int
mov
loopne
sub
dec
and
lahf
stc
repz
std
sbb
dec
loop
test
dec
and
mov
or
fisubrl
mov
ja
jne
rolb
lea
test
and
negb
lret
or
xor
push
inc
mov
movsl
test
fadds
aad
mov
rorb
das
sti
ljmp
iret
rclb
mov
rcll
adc
sub
shl
and
cwtl
fwait
xor
or
sub
rolb
pop
mov
xchg
lcall
test
lret
mov
adc
aam
imul
pusha
inc
jp
ljmp
gs
xchg
loopne
out
repnz
cltd
jmp
pop
fs
mov
pop
jl
pop
xchg
repz
pop
cmp
rclb
rcll
cld
vpaddsb
lret
into
or
dec
js
dec
mov
fisttpll
xchg
hlt
mov
lahf
aam
cmc
imul
mov
cmp
xor
push
push
add
sti
inc
int
clc
clc
dec
loopne
adc
test
mov
lahf
negb
js
lret
inc
test
dec
push
repnz
enter
aad
daa
jp
xor
mov
repz
out
clc
jl
loope
sub
xor
or
cli
xchg
push
ret
lea
data16
push
mov
jnp
mov
adc
mov
xchg
shlb
dec
fidivrl
pop
inc
add
sub
add
std
mov
sbb
sub
push
pop
cmp
test
enter
pop
aaa
cltd
adc
jecxz
mov
inc
sub
jecxz
pop
xchg
sbb
fldt
mov
mov
mov
push
push
jmp
push
shl
loopne
or
mov
fisttpll
ficompl
mov
or
loopne
inc
testl
xor
aas
xchg
fidivrs
xor
insb
dec
mov
mov
adc
add
or
dec
mov
das
loope
xor
sub
bound
jecxz
mov
nop
cmpsb
mov
scas
aam
out
dec
loope
aam
mov
push
adc
cmp
es
out
sub
cmpsb
hlt
fists
xchg
insl
sbbl
adc
pop
subl
cmc
push
int
out
xchg
movsb
fcmovnb
and
lret
jns
lds
adc
jne
adc
adc
addr16
add
sub
lret
mov
dec
clc
mov
test
push
xor
xchg
loope
imul
xor
push
mov
adc
cmp
push
nop
sbb
pushf
inc
in
and
sahf
sbb
and
xchg
inc
xchg
imul
mov
cmp
pop
or
dec
pusha
popa
pop
leave
cli
sbb
mov
fstl
inc
aaa
inc
adc
pop
shr
aas
ja
and
cmp
insb
mov
lcall
push
pop
inc
sub
xchg
test
dec
out
push
pusha
daa
mov
xchg
data16
adc
mov
add
and
outsl
cmp
lea
mov
xor
sbb
mov
daa
call
int3
jns
testb
push
test
test
addr16
std
mov
jp
add
mov
test
rorl
dec
ret
cli
dec
adcb
fisttps
xlat
out
loope
mov
pushf
icebp
mov
ret
jle
add
in
sahf
iret
outsl
sub
mov
mov
mov
imul
clc
pop
stc
jno
das
xor
or
xchg
lcall
sbb
jg
test
rcrb
jmp
mov
pop
jecxz
push
sub
xor
sbb
pcmpeqb
inc
push
sub
xchg
jmp
push
cmp
icebp
push
int
pop
mov
dec
adc
fwait
dec
sub
add
addr16
mov
mov
push
dec
nop
imul
pop
xchg
mov
loopne
clc
test
adc
fucomip
pop
or
and
sbb
adc
mov
add
in
cwtl
and
leave
jbe
dec
mov
fwait
out
out
es
push
aam
out
shll
lock
lahf
pusha
repz
sbb
xlat
sbb
xlat
hlt
mov
cltd
or
test
adc
lods
sbb
jae
mov
inc
mov
mov
add
mov
inc
pushl
mov
jge
mov
test
push
or
test
mov
pop
bound
popf
ljmp
out
cwtl
lods
in
std
or
dec
mov
jge
loopne
jb
incb
cwtl
mov
mov
add
pusha
pop
aad
stc
mov
aaa
and
fnsave
frstor
imull
icebp
jns
sub
xchg
pop
decl
repnz
push
sti
cwtl
dec
mov
cld
mov
test
xchg
in
and
add
sub
add
xor
mov
mov
dec
imul
fiaddl
push
xchg
push
and
inc
and
in
dec
aas
mov
inc
test
or
in
pop
movsb
sti
popf
daa
es
push
ret
sbbb
js
aad
mov
adc
iret
jo
push
clc
std
loopne
cli
xchg
ret
addl
inc
pop
aam
mov
add
stos
outsl
fnsave
mov
pushf
jl
popf
jne
in
cmc
bound
add
aad
xchg
dec
adc
mov
sbb
shlb
inc
inc
scas
rcrb
repz
lcall
cmc
add
in
push
leave
pop
ds
data16
mulb
or
pop
js
test
push
xor
jmp
jl
aam
out
shll
negl
mov
inc
and
clc
xor
pop
sub
int3
cmp
cmp
adc
xchg
mov
mov
push
fnstsw
dec
push
and
pop
mov
mov
insb
mov
rorb
inc
std
push
lds
cmc
mov
fisttpl
out
inc
pusha
leave
push
nop
jno
mov
shlb
fwait
mov
adc
rcll
mov
jb
jecxz
push
or
cmp
xchg
aaa
es
cmp
add
ss
mov
dec
out
mov
xchg
dec
ror
cwtl
push
jbe
xchg
addr16
jno
into
push
insl
jg
loop
xchg
cmpb
sbb
xchg
sahf
jle
dec
movsb
out
push
cmc
int
adc
push
cli
lsl
sub
mov
imul
shrl
in
dec
or
mov
dec
mov
lret
test
movsl
mov
cmp
and
and
rcrl
push
lcall
mov
jo
mov
fiadds
mov
mov
mov
mov
lods
cltd
push
jp
lret
paddusb
lea
sub
mov
push
pop
cmpb
xor
xchg
or
insb
cwtl
dec
mov
xchg
addb
pusha
stos
test
lea
sub
int3
pop
inc
das
fs
lods
aaa
xlat
sub
cli
in
add
mov
push
scas
xor
jle
stc
mov
dec
pop
imulb
scas
mov
dec
loop
sub
into
ret
adc
push
or
and
ja
push
pop
arpl
mov
xchg
aad
icebp
sub
xchg
jb
jmp
movsb
sbb
dec
shrb
sbb
jns
repz
mov
pop
int3
mov
bound
jg
nop
push
mov
fs
push
movsb
imul
ss
sub
sbb
es
mov
mov
add
xlat
fnstsw
loope
or
pop
cs
ja
push
imull
mov
je
hlt
lods
xlat
adc
add
mov
mov
inc
lock
xor
aad
jmp
pop
push
ds
fwait
mov
mov
mov
mov
cmpsl
inc
pop
icebp
xchg
inc
bsf
jg
addr16
mov
mov
das
mov
mov
sub
mov
inc
fidivrl
out
inc
adc
out
mov
dec
in
out
stos
imul
adcl
push
gs
and
ret
pop
push
out
cli
movsl
lret
xor
mov
mov
jb
jmp
mov
std
gs
dec
outsb
xchg
loopne
jae
enter
ljmp
aaa
les
dec
dec
mov
nop
daa
call
jmp
movsl
repz
movsb
add
in
sbb
adc
push
in
shll
fstpt
loop
push
jmp
pop
mov
mov
in
mov
imul
pop
mov
or
aad
fcmovnu
sarl
mov
hlt
int
imul
xchg
xor
push
xchg
jbe
cmp
mov
dec
imul
insb
adc
dec
xchg
push
outsb
addr16
imul
mov
ss
incb
bound
dec
adcb
movsb
mov
sbb
mov
jg
sarb
leave
addr16
int3
daa
fucomp
loopne
rcrl
add
gs
pop
ficoml
js
std
outsb
mov
adc
imul
or
mov
dec
and
jo
cmp
cmp
pop
add
mov
cmovb
adc
mov
push
xchg
jae
push
stc
push
and
inc
ja
dec
sub
faddl
testl
inc
divl
out
and
pop
rcrl
pop
sarb
das
xor
imul
cltd
scas
xchg
mov
punpckldq
and
xchg
pop
inc
xchg
mov
mov
cmp
mov
sbb
pop
cld
cmp
lds
jle
adc
inc
and
and
mov
lea
or
push
insb
cmp
inc
mov
jns
or
mov
decl
pop
rclb
pop
mov
nop
mov
das
jb
and
aam
push
push
and
decb
push
loopne
test
cwtl
cmpsl
mov
insb
or
aaa
mov
out
inc
rcrl
gs
jmp
stos
mov
lods
fcmovb
repnz
aaa
sub
adc
jae
jmp
add
jg
inc
ret
mov
out
push
jp
aam
ret
mov
adc
div
ljmp
mov
pop
adcb
nop
adc
fsubl
fcmove
out
adc
pushf
sub
sub
xor
insb
ja
ja
cmp
push
rolb
jae
outsl
mov
adc
mov
push
inc
clc
xlat
mov
sahf
stos
cwtl
hlt
in
aaa
sub
ja
inc
pop
sbb
adc
sahf
dec
test
shrl
pop
xchg
addr16
push
sub
or
xor
jp
lahf
pop
fwait
push
hlt
enter
cwtl
ret
gs
cmp
inc
dec
popa
dec
aad
jnp
lret
fnstcw
pop
popa
sub
aaa
stos
add
in
jge
inc
imul
rolb
and
jl
mov
ja
and
scas
aad
das
jge
or
jmp
bnd
out
push
mov
cmp
ret
loop
cmpb
clc
jmp
das
fcmovu
cmp
test
or
in
shrl
mov
sub
jmp
popa
jno
sbb
fxch
cmpsl
mov
jb,pt
mov
rcr
cmp
je
xor
dec
les
push
push
mov
push
leave
sbbb
int3
in
ror
enter
dec
inc
mov
inc
cmp
mov
repz
sub
xchg
arpl
aad
xchg
imul
sbb
push
sti
adc
or
cwtl
lcall
sub
dec
fnsave
cmp
sub
out
add
xchg
xor
lret
scas
test
xchg
out
adc
cmp
push
js
outsl
lea
lds
push
aad
mov
xor
xchg
lods
or
out
xchg
xchg
loopne
xor
xor
mov
sbb
add
inc
sbbl
jo
cli
sub
ljmp
cmp
nop
or
add
sti
lret
pop
std
inc
shl
push
add
inc
pushf
add
rorb
imul
jb
addr16
fs
sub
and
fs
mov
ja
jle
cmp
cwtl
out
and
push
incl
mov
aad
arpl
cltd
stos
fstpt
add
mov
bndstx
xor
mov
add
out
out
imul
fisttps
xchg
push
inc
mov
lods
push
push
stos
mov
ja
pusha
std
mov
lret
jl
pop
mov
add
iret
push
sub
out
add
pop
cmp
xchg
add
cmc
push
and
jle
std
dec
jl
pop
push
cli
sarl
subb
mov
stos
mov
cmpb
or
scas
jb
mov
cmp
mov
pusha
push
mov
cli
jge
out
insb
push
and
popf
mov
and
mov
push
sub
lods
fwait
push
ret
push
scas
sbb
cmp
data16
xor
adc
int3
lret
push
adc
je
test
arpl
je
cmc
cmp
gs
push
fs
loop
and
movsw
sahf
push
xor
mov
inc
jmp
insb
in
and
sub
jne
add
mov
pop
pop
popf
mov
jb
xchg
jge
imul
shlb
cld
and
xchg
dec
mov
jno
mov
mov
popa
popa
fimuls
cwtl
clc
mov
ljmp
cmpb
aas
inc
bound
and
jae
xchg
mov
test
shll
pop
adc
subb
aad
or
popf
xchg
in
mov
jge
push
xchg
jo
jge
into
fcmovnbe
dec
loope
push
enter
or
fs
sub
addr16
jnp
mov
jecxz
or
stos
pop
int
adc
cwtl
insl
cmpsl
add
sub
pop
stc
mov
mov
int
es
les
mov
sub
mov
lret
jg
ss
and
ss
lds
dec
fisubrl
cltd
xchg
cmp
js
test
scas
dec
pop
push
sub
imul
inc
int
adc
push
mov
and
fistl
cs
cli
movsl
pop
add
ret
mov
aaa
popf
xchg
cs
pop
jae
ds
pop
pusha
ds
cmc
or
xor
sbb
dec
mov
dec
add
nop
jg
fstl
or
stos
dec
jbe
xor
mov
and
jbe
bnd
sahf
dec
mov
push
int
inc
ror
adc
adc
mov
and
les
and
repz
push
cltd
insl
xchg
push
into
pop
sahf
xchg
scas
inc
mov
mov
aad
rcll
fisubl
and
les
mov
insl
add
cli
or
mov
dec
mov
adc
adc
imul
xchg
mov
and
jl
push
mov
mov
mov
dec
in
cs
adc
mov
stos
push
mov
xchg
ss
or
pop
loop
jge
in
and
mov
push
addr16
sub
pop
sbb
arpl
sbb
popa
xor
outsb
not
insl
mov
and
loope
jmp
ljmp
pop
xor
clc
mov
jmp
inc
push
lcall
jae
outsl
outsb
lock
inc
jg
into
shrl
call
cmc
out
rclb
enter
in
andl
in
inc
pop
jecxz
stos
pop
imul
test
lock
ret
sbb
mov
fmul
adc
sbb
bsr
hlt
in
pop
sti
idivl
jge
and
repnz
cltd
fisttps
mov
in
mov
or
pusha
jbe
lcall
pop
out
dec
push
xor
sbb
mov
repz
stos
cwtl
inc
insb
jae
inc
jecxz
shll
jb
inc
mov
fstps
das
jecxz
pusha
mov
lds
sub
sub
sub
xor
fistl
or
pop
lock
pop
lret
mov
fs
push
xor
sbb
or
or
pop
mov
cwtl
jbe
inc
jne
or
mov
int
xchg
mov
dec
xlat
jne
dec
roll
mov
pushl
rol
aad
pop
adcl
ret
shl
adc
rcrl
loop
pop
adc
lods
les
cmp
sub
xchg
jmp
cltd
test
lods
mov
jae
jbe
lahf
mov
hlt
jbe
out
fwait
mov
cwtl
xchg
mov
shrb
lahf
push
xchg
sbbl
inc
push
sub
mov
push
sbb
cmp
sti
cwtl
and
adc
in
xchg
pop
rolb
cmp
xchg
adc
and
adc
scas
xchg
pop
cli
sbb
cmp
xorb
pop
add
pop
repz
enter
push
sub
add
push
jae
jnp
adc
jmp
aam
repnz
loopne
loopne
push
mov
fildll
jo
adc
add
rorb
hlt
insb
pop
sahf
push
add
inc
sbb
inc
sub
inc
push
leave
insb
shl
jp
xchg
scas
cmc
dec
arpl
pop
adc
push
popa
sbb
outsl
std
and
mov
test
sub
lahf
movsl
lahf
adc
stos
popa
lret
int3
pop
mov
jl
ds
dec
sbb
push
les
cmpsl
cmovno
xchg
push
outsl
movsb
push
dec
jmp
mov
push
leave
or
nop
cmpsb
lea
shrl
iret
dec
push
or
mov
shl
stos
mov
ss
test
jg
xchg
jne
imull
or
arpl
je
xchg
pop
out
cmp
push
pop
shrl
movsl
fdiv
scas
lahf
pushl
dec
aad
or
adc
fldcw
hlt
xchg
jnp
lret
hlt
xlat
jg
fisubl
mov
fcmovne
arpl
mov
loope
jns
aas
jecxz
fadds
daa
cmpsl
push
fchs
cmp
sahf
ljmp
test
sbb
sbb
and
rolb
mov
out
mov
fnstcw
fcoml
adc
mov
aam
push
add
insb
mov
scas
push
enter
fisubl
inc
or
mov
pusha
ud0
js
les
xchg
xchg
lock
sub
loope
shr
mov
les
es
xor
mov
insb
js
loop
sub
sbbl
sbb
aas
fiadds
add
mov
mov
push
dec
dec
js
loop
xchg
stc
inc
xor
jmp
jns
lds
jne
adc
imul
pop
push
loope
adc
fstps
mov
mov
mov
in
xchg
fistl
outsl
jnp
and
dec
xchg
stc
mov
pop
ret
in
lods
insb
ja
dec
scas
dec
mov
cmc
mov
xchg
xor
setnp
xor
cmp
lds
imulb
dec
cmp
jl
cmpsb
addr16
ja
out
jg
dec
int3
inc
stos
sub
aam
jbe
sbb
inc
pop
inc
pusha
arpl
ret
leave
out
aas
test
out
and
push
aad
stos
aam
sub
and
hlt
add
push
sub
xchg
mov
das
mov
and
xchg
faddl
mov
adc
pop
sbb
int
insb
inc
sub
push
mov
ss
adc
loop
jmp
xchg
imul
push
std
ret
and
jb
testb
insb
add
call
inc
dec
jb
jle
or
add
call
mov
addl
adc
loopne
pop
pop
xor
inc
arpl
lods
push
mov
cmp
pop
movsl
sbb
cmp
es
xchg
or
inc
out
out
cmpsl
popf
push
ud0
jp
shll
pop
push
je
je
push
adcl
ret
dec
subb
jmp
rolb
jbe
ret
pop
lods
and
adc
pop
imulb
mov
cmp
push
pushf
cld
testb
sbb
jge
and
sub
mov
aad
fidivrl
pop
popf
mov
xchg
cmc
dec
in
testl
push
scas
leave
mov
push
xor
sub
lds
das
sarb
loopne
pop
loopne
dec
cmp
aas
loope
or
pop
mov
inc
pop
lret
jge
cmp
push
testb
mov
jb
cmp
das
adc
jp
xchg
in
aas
xchg
test
int3
test
lods
icebp
lret
inc
pop
dec
outsl
ficoml
xor
inc
adc
es
sub
xchg
cwtl
in
cli
xchg
jmp
ds
jmp
pop
sbb
xor
in
inc
lahf
js
jno
outsl
push
or
mov
mov
push
push
leave
xchg
pop
or
push
mov
jo
imul
fsubs
or
sub
cli
int
jmp
cmpsb
jl
int
lods
stos
mov
jecxz
mov
cmp
int3
shrb
leave
inc
pop
das
sub
pmaxub
test
jne
lds
out
mov
ret
sub
stos
dec
in
xchg
mov
sbb
enter
test
ja
inc
test
lahf
test
sub
dec
stos
sar
imul
mov
xchg
idivl
in
das
stos
and
pusha
arpl
jns
and
or
fsubl
jbe
jmp
out
out
mov
stos
js
mov
inc
adc
pushf
aam
jg
mov
xlat
nop
inc
daa
add
mov
popa
ljmp
lret
jp
fisttps
mov
js,pt
xor
pop
sti
mov
xchg
xor
lret
push
aaa
mov
lods
stos
stos
outsl
es
loopne
inc
ljmp
pop
inc
out
push
loope
call
test
fstps
mov
cltd
push
sub
mov
scas
sbb
fistl
add
dec
les
arpl
mov
insb
jo
mov
xchg
xchg
or
jo
lock
fcoml
push
sahf
jmp
outsl
cmp
dec
jl
adc
push
xchg
xchg
je
gs
loopne
pop
inc
jg
out
out
test
aas
sub
loopne
ljmp
add
adc
or
pusha
out
add
mov
or
pop
fdivs
outsl
push
sbb
in
insb
pop
je
sub
aam
scas
iret
cmp
lea
ljmp
mov
jl
sbb
jns
fdivl
imul
pop
mov
sbb
fs
push
sti
pop
push
stc
mov
sbb
adc
rcll
popl
cmp
adc
lock
aas
aas
test
dec
and
xchg
sbb
lods
test
jns
mov
std
int
cltd
sub
les
pop
or
jge
push
mov
cwtl
into
add
aas
jno
adc
cmp
or
hlt
mov
cmp
adc
cmpsl
inc
pop
adc
jo
adc
and
loopne
lcall
mov
fsub
add
sub
and
adc
rcr
outsb
movsb
pop
pop
push
out
outsb
sbb
pop
cmp
in
ret
pop
xchg
mov
fisubl
movsb
mov
or
fdivl
sub
adc
cmp
adc
movsb
ljmp
fisubrl
fiadds
mov
addr16
das
call
jae
ja
rol
es
adc
jo
lahf
jle
xchg
push
mov
call
aam
inc
cmp
xchg
mov
cli
ret
jl
push
je
fistpll
insl
pop
stc
in
adc
adc
pop
stc
push
pop
cmpsl
cmpsl
sbb
and
cmc
les
int
jbe
cmpsb
test
testl
mov
inc
adc
push
insb
or
cwtl
push
xor
repz
xor
mov
sub
inc
jp
xchg
roll
or
mov
in
fisttpl
xor
int
in
xor
dec
loopw
pop
ljmp
mov
xchg
and
fmull
mov
pop
leave
xchg
dec
icebp
or
inc
rcrb
xchg
xchg
ficoms
outsb
mov
jecxz
je
cmpsl
or
cmpsb
add
pop
dec
lret
dec
mov
adc
notb
lock
sub
into
sti
leave
mov
cmp
adc
stos
and
dec
mov
popa
jmp
sbb
pop
xchg
push
jecxz
jb
ss
mov
stc
aad
dec
jge
mov
add
scas
add
mov
arpl
in
push
cmp
aam
dec
push
cs
xchg
mov
mov
push
or
jb
ret
xor
inc
xchg
lock
cmp
mov
sbb
cs
stos
loopne
mov
cmp
imul
mov
scas
jne
nop
in
cmpsb
dec
mov
mov
or
ss
insl
sub
pop
mov
xchg
les
aam
inc
sbb
inc
fsts
adc
jmp
lea
mov
subl
sbb
scas
inc
stc
inc
loop
inc
or
mov
sbb
shl
push
push
inc
out
pop
mov
sub
cmpsl
pop
dec
jno
inc
dec
ljmp
pop
adc
adc
or
pop
push
pop
sahf
insb
ret
xchg
pop
mov
or
pop
ffreep
xor
getsec
add
scas
mov
hlt
shrb
repz
leave
push
pop
mov
mov
js
adc
jne
and
mov
push
jmp
ljmp
cltd
cmp
sbb
sub
lret
jge
add
cmp
and
pusha
push
lcall
push
fwait
xchg
adc
stos
pop
dec
cmpsl
lret
out
aad
aam
mov
nop
fisttpl
out
arpl
arpl
imul
sbb
faddl
jbe
bound
cmpsl
jo
push
loope
inc
aaa
pop
jae
data16
in
mov
mov
stos
lret
mov
rclb
movsl
push
ret
pop
adc
and
jg,pt
hlt
rclb
cwtl
inc
xchg
out
or
addl
inc
and
cli
fisttps
dec
jne
sbb
adc
outsb
in
sbb
shl
popf
cmc
mov
test
adc
or
nop
push
in
mov
pushf
add
aam
clc
ljmp
hlt
nop
cwtl
ficompl
jbe
jae
pop
leave
inc
in
lcall
mov
jbe
pusha
push
cltd
xchg
loope
sub
cld
in
fdivrs
dec
out
pushf
fwait
add
mov
jmp
adc
clc
jecxz
xchg
xor
scas
or
popa
xchg
dec
test
jo
leave
xchg
dec
lcall
and
push
cwtl
cmpsl
lock
and
lea
popl
push
data16
call
and
and
jp
rcll
mov
and
dec
test
fidivrs
inc
lods
call
jbe
imul
mov
andl
push
repnz
xor
push
cmp
lods
push
shll
cltd
aaa
jmp
jmp
push
sarb
push
ret
mov
pop
jns
cwtl
stc
mov
ja
test
in
xchg
cltd
mov
ss
mov
scas
lods
sub
mov
push
subl
jns
pop
xor
aam
jae
imul
scas
out
movsb
stc
mov
aad
loop
sub
addr16
popf
loope
cmpsb
in
cs
les
int3
pop
xchg
icebp
pop
add
cmc
and
push
shll
sbb
std
jo
lret
push
pop
mov
cmp
ret
push
mov
dec
inc
sbb
pop
mov
xor
adc
cmp
sub
testl
lods
adc
cmp
adc
jmp
repnz
ss
stos
lods
paddd
lods
inc
mov
fnstenv
movsl
mov
cmp
jecxz
notl
insl
mov
les
outsl
arpl
jb
bound
mov
push
inc
dec
pop
std
popa
cmp
cmp
icebp
loopne
arpl
imul
jmp
enter
cs
icebp
out
popa
cmp
ret
xchg
repnz
or
or
ret
adc
imull
pop
jbe
mov
push
enter
out
jmp
mov
cmp
cmp
dec
jp
pop
lahf
insb
sbb
lahf
mov
add
test
cmp
stos
push
std
fdivs
mov
test
push
xchg
fnstenv
stc
sub
mov
xor
loope
scas
test
cmp
dec
adc
jbe
jnp
and
mov
dec
idiv
scas
cmc
fidivrs
scas
aas
int3
outsl
sbb
call
push
jae
imul
add
pushf
frstor
xor
lock
and
jnp
mov
or
fptan
movsl
daa
xor
outsb
sub
lds
xor
xchg
iret
imul
data16
int
jb
insl
mov
sub
mov
fsubrl
aad
popf
mov
cli
neg
lcall
dec
pop
mov
adc
push
dec
or
push
mov
in
cwtl
dec
ffree
lock
jbe
push
dec
add
mov
cltd
test
out
push
sbb
in
adc
inc
cmp
mov
in
pop
stos
mov
loopne
mov
int
push
outsb
mov
xor
je
dec
or
test
jnp
outsb
subl
xor
jp
xchg
dec
sarl
jo
inc
push
pop
xchg
or
adc
adc
insl
iret
imul
mov
rcrl
inc
stos
pusha
pop
mov
jmp
cwtl
xchg
sarb
push
pop
rcl
aaa
idivl
dec
lahf
adc
movsl
pop
bound
push
jmp
aad
adc
fs
ja
add
ljmp
sub
inc
cs
repz
and
mov
cmp
push
gs
pop
out
adc
or
pushf
xchg
fadd
jbe
test
mov
push
fs
movsb
clc
jnp
sti
xchg
inc
lods
pop
call
sub
xchg
filds
loop
mov
xchg
shr
test
adc
add
incl
int3
cmp
out
mov
call
in
fldl
jno
addr16
xchg
mov
fisttpll
cltd
repnz
pop
pop
xchg
pop
gs
jb
adc
sub
mov
in
cltd
ljmp
inc
cmp
mov
cld
decl
push
inc
xor
mov
jle
cmp
in
ficoms
icebp
sbb
xorl
and
xor
rolb
push
cmp
out
jp
jecxz
nop
mov
movsb
rcll
stos
inc
arpl
jp
cmp
lock
xchg
mov
rolb
mov
jnp
mov
push
push
rcrb
mov
insb
mov
repnz
adc
mul
pop
inc
loope
iret
inc
out
js
out
jge
pop
sbb
mov
cmc
pusha
xor
shrb
aas
jne
mov
mov
xlat
and
test
imull
in
push
cmc
xor
mov
mov
lods
mov
push
mov
jg
fnsave
jl,pt
in
sbb
shll
and
imull
in
mov
pusha
stc
shlb
sbb
lcall
push
adc
adc
xchg
sbb
xor
ret
push
je
adc
add
popf
jae
jle
add
fmuls
sbb
adc
jo
mov
stc
out
ffree
fsubp
push
xchg
std
movsb
and
mov
out
jne,pt
out
inc
loop
sbb
fmuls
mov
sub
push
lds
and
bnd
mov
cwtl
sbb
pushf
stos
push
mov
mov
shll
inc
clc
dec
xlat
cmp
and
jle
aaa
pop
popa
nop
push
iret
adc
outsb
aam
and
inc
pop
cmpsb
push
mov
cmp
mov
inc
aad
mov
mov
cwtl
mov
stc
dec
idiv
mov
mov
fildll
aaa
fwait
inc
lods
ja
push
aaa
sub
sub
sbbb
pop
mov
lds
aad
xor
mov
nop
lret
ss
fidivl
push
cmp
nop
dec
test
loopne
add
leave
mov
add
inc
mov
mov
jmp
xchg
ret
sbb
ficomps
push
mov
xor
lods
lcall
jmp
or
aaa
hlt
adc
adc
daa
adc
adc
lret
jnp
test
cmpl
lock
inc
sbb
decb
testl
xor
or
enter
lret
dec
aas
or
mov
xchg
jl
inc
mov
ss
cmp
xchg
inc
incl
mov
dec
push
pop
pop
aad
inc
in
adc
add
inc
imul
rdmsr
jmp
and
pop
cmp
pop
gs
xor
xrelease
inc
fdiv
sbb
je
or
insl
imul
pop
scas
jns
fs
push
popa
sbb
test
fwait
lock
lahf
pop
dec
mov
js
mov
adc
inc
sbb
cmc
mov
in
sbb
sbb
mov
mov
or
xchg
cmp
dec
std
jg
in
jne
push
xor
outsl
dec
inc
loop
mov
xchg
dec
xchg
das
in
ffree
shld
xchg
out
push
and
inc
rolb
int3
pop
add
aaa
adc
sub
inc
inc
jge
test
fdivp
mov
lea
or
add
jns
inc
dec
jl
push
clc
add
push
xor
mov
xor
mov
jmp
fwait
pop
int
sti
daa
inc
cli
and
jp
cmp
mov
mov
sarl
sbb
hlt
or
push
mov
lret
inc
aam
pop
add
pop
sub
mov
add
fsubrl
lcall
cmp
paddb
addr16
stc
pop
pop
ja
sahf
mov
fmull
insb
adc
mov
movsb
pop
pop
cmp
imul
or
sbb
insb
and
test
sub
pushf
loop
bound
xchg
outsl
scas
sahf
lods
aad
movsb
fistpll
outsl
push
mov
popa
js
jae
imul
into
mov
add
mov
jns
test
jmp
cli
and
inc
mov
push
and
pop
add
pop
fistpl
push
mov
cltd
mov
into
sbb
loope
push
lahf
push
push
out
fstpl
inc
mov
lock
pop
jb
addb
push
in
xor
outsb
or
int
inc
loop
mov
xor
addr16
inc
cmpsl
cmp
ficoml
addl
repz
outsl
sub
inc
or
int3
test
mov
xlat
insb
pop
xchg
mov
mov
ret
icebp
and
imul
mov
dec
lock
aam
mov
adc
rorb
pop
inc
adc
rorb
outsb
inc
fs
mov
fwait
inc
add
and
adc
lret
lea
lods
dec
cwtl
cmp
inc
nop
aam
test
stc
sbb
sub
jo
cmp
imul
xlat
pusha
push
mov
mov
aaa
mov
or
add
xor
add
scas
mov
scas
mov
mov
mov
inc
push
xchg
jo
xchg
testb
bound
jle
jno
lods
jbe
loopne
ljmp
jecxz
xchg
fcoms
popa
mov
push
hlt
frstor
fldenv
outsl
mov
loopne
sahf
imul
in
jns
pop
data16
cmp
repz
mov
shlb
je
or
adc
insl
jle
stos
insb
dec
cmpsb
enter
pusha
mov
dec
mov
mov
sbb
lock
and
lar
add
das
mov
outsl
xor
adc
daa
not
sbb
dec
outsl
lret
dec
stos
insl
shrl
add
nop
mov
inc
mov
shlb
js
mov
mov
mov
daa
pop
mov
xchg
push
sti
rolb
xchg
mov
jae
outsl
pop
mov
dec
test
and
sub
xor
sbb
sbb
mov
cmp
push
push
xchg
fbstp
cmp
xchg
rol
mov
pushl
fistps
ss
leave
pop
sarb
push
adc
mov
leave
xor
pop
mov
sub
mov
cmc
xor
inc
cmp
es
loopnew
mov
or
inc
icebp
pusha
shll
mov
sbb
fimuls
nop
test
in
pop
inc
xor
inc
cwtl
jp
jb
push
shrl
jne
rolb
adc
xor
dec
test
fcoml
jmp
andl
mov
stos
pop
lcall
and
das
and
ret
sub
int
xchg
add
push
cmpsb
add
mov
in
sahf
add
mov
jmp
int
jo
cmc
popf
shlb
pop
dec
mov
xor
push
mov
fs
call
cmp
scas
push
add
push
mov
mov
push
clc
daa
into
jg
into
aam
or
enter
jp
mov
mov
outsb
cmp
ficoms
xor
pop
insb
mov
inc
jno
lcall
xchg
call
xchg
outsb
out
push
add
cmpl
leave
pslld
test
ljmp
push
fstps
imul
stc
add
cmp
cld
out
fmull
stos
lods
add
xlat
ret
lock
shlw
test
sub
aam
xchg
test
int
xchg
popf
adc
mov
fs
clc
jl
push
ljmp
xchg
lret
push
cs
gs
mov
push
jle
test
cmp
xchg
lahf
mov
cmpsb
mov
int3
sbb
lods
movsl
or
pop
aad
jb
in
xchg
loop
and
outsb
pop
adc
cmp
das
sahf
xlat
sbb
fs
and
les
cmpsl
mov
pop
adc
push
sbb
jmp
push
inc
lea
es
mov
pop
je
ret
loop
fiadds
sbb
and
or
pushf
cli
jp
inc
test
jg
inc
pusha
mov
and
invlpg
inc
jo
aam
inc
dec
ljmp
fistl
icebp
pop
cmpl
mov
stc
je
and
adc
mov
jp
les
jg
scas
dec
xor
loop
sbb
and
fisubrs
std
fidivrl
imul
jmp
cmpsl
pop
push
lcall
and
pop
jno
dec
sbb
xchg
inc
add
lock
fstpt
or
imul
add
fcmovnu
sbb
inc
inc
inc
jo
mov
mov
cld
ja
add
sub
or
sub
int
mov
cmp
cmp
aas
data16
inc
fsubs
nop
es
ja
inc
fwait
xchg
lods
cmpsb
fnsave
insl
inc
filds
dec
xchg
cli
inc
int
or
pusha
xor
xchg
mov
ret
es
ret
aas
in
es
ljmp
sub
mov
push
insl
jle
test
sub
iret
lods
movsl
repz
xchg
sarb
pop
outsl
mov
sub
mov
push
mov
cli
fwait
adc
aaa
jmp
push
push
pop
in
pop
cmp
push
inc
adc
adc
in
push
and
rcrb
mov
into
xor
inc
cmp
cmp
xchg
inc
movsl
sbb
push
int3
mov
or
adc
jns
or
push
enter
mov
and
fcoml
lret
addl
loopne
sbb
jb
fcoml
test
dec
jg
xor
mov
scas
ret
mov
outsl
cltd
call
jb
hlt
push
int
pop
aas
sahf
pop
add
scas
insl
loope
lahf
mov
stc
sahf
cmp
pop
push
rcrb
daa
inc
adcl
mov
mov
xchg
xorl
xchg
push
sub
movsl
and
adcb
push
inc
or
lds
push
inc
scas
add
mov
adc
arpl
jmp
cmp
lcall
scas
daa
outsl
mov
test
jg
daa
outsb
iret
sbb
test
mov
pop
lea
mov
jns
xor
pushf
lahf
fisttpl
ficompl
mov
or
js
and
out
push
or
jns
xor
imul
add
arpl
cmpsb
test
push
add
addr16
in
adcb
xchg
test
jge
lods
std
je
mov
inc
out
add
cli
dec
mov
mov
gs
pop
xor
push
or
fcompl
je
mov
sub
mov
test
add
gs
outsl
orl
or
cmp
loope
or
xor
jo
mov
mov
or
xchg
jmp
mov
mov
sbb
xor
mov
test
addb
out
xlat
pusha
push
mov
push
pop
add
fs
sub
fcmovne
sbb
sbbl
sbb
jecxz
adc
fs
jle
repnz
or
or
test
faddl
jmp
push
in
lcall
cmpb
sar
mov
shrl
adcl
je
jp
leave
fnstcw
lock
fsqrt
sti
dec
jbe
jg
movsb
adc
inc
mov
jl
rcrb
add
fwait
das
lods
xchg
xor
lcall
aad
mov
enter
lcall
jg
lods
ret
ret
add
test
push
mov
sub
ucomiss
pop
out
mov
sbb
jmp
sti
std
lods
fwait
and
imulb
stc
loope
mov
or
push
jne
and
insl
mov
sub
les
cmc
or
jecxz
push
fmull
lods
out
jbe
xchg
pop
cwtl
stos
pop
loope
xchg
sbb
in
or
mov
mov
hlt
push
or
jns
lea
inc
nop
adc
inc
and
pop
imul
imul
adc
push
imul
addps
dec
das
and
mov
and
dec
mov
sub
cmp
add
lock
pop
push
push
pop
test
ja
dec
sbb
cltd
pop
icebp
int
xchg
mov
sub
sbb
insl
or
mov
test
xchg
cmc
push
inc
mov
sbb
daa
cmpsl
rclb
or
ss
loope
push
repnz
or
jmp
jnp
lock
xchg
and
stc
xchg
mov
jp
lods
jae
dec
mov
xchg
cwtl
jne
repz
xchg
adc
push
lds
fbld
push
inc
pushf
mov
lds
add
test
xor
sbb
add
data16
std
lock
mov
dec
lcall
std
jp
cmc
push
sub
popf
adc
inc
scas
xor
inc
pushf
xor
into
rolb
cmpsl
inc
arpl
aad
inc
add
cmp
add
loopne
lods
fsubr
movsl
pop
in
mov
push
ljmp
pop
bound
mov
sti
iret
and
ret
loopne
adc
push
rcrl
jmp
pop
inc
jmp
xor
dec
jae
xchg
or
xchg
or
adc
shll
push
and
bound
sbb
adc
sub
jmp
pop
push
fcom
or
pop
test
xchg
into
into
xchg
decb
test
pop
scas
and
les
outsl
ret
out
and
lahf
cltd
test
push
shl
out
outsl
sbb
xchg
mov
cs
pop
nop
stos
push
or
imulb
pop
mov
lret
sar
ljmp
shll
pop
ljmp
outsl
adc
mov
adc
mov
scas
mov
in
and
mov
imul
fists
ret
rol
repz
mov
sbbb
ret
adc
cmpb
or
xor
push
add
mov
test
loop
popf
pop
test
leavew
into
movb
dec
pop
jg
adc
jno
lcall
pop
gs
or
movsb
mov
out
mov
mov
push
and
mov
repz
and
push
add
push
mov
stos
pop
out
xor
mov
dec
loope
or
mov
into
sbb
icebp
lds
mov
and
imul
mov
sub
cmp
push
rorl
leave
add
fistl
test
sub
mov
lahf
or
movl
ror
mov
lret
add
mov
jae
cltd
mov
xchg
xchg
mov
loop
lea
insb
sub
fs
jnp
arpl
cmc
addr16
mov
adc
xor
mov
xchg
cmp
inc
mov
xchg
cmc
lret
sub
pop
daa
xor
cmp
pop
add
adc
cli
push
and
jmp
cmp
dec
pop
sub
das
xor
push
lea
int
sbb
js
imul
or
rcll
into
in
mov
pop
out
pop
mov
inc
repnz
arpl
repnz
xor
inc
es
test
ja
jmp
inc
rorb
jge
clc
cmpsl
lret
mov
push
or
enter
cmpsb
jg
es
int
inc
fmul
sahf
pop
add
jnp
adc
xchg
jg
in
stos
outsb
insl
xchg
xchg
jge
cmp
jnp
xlat
arpl
jb
sti
les
sahf
aaa
adc
mov
mov
aad
insb
pop
dec
stc
adcl
jb
sbb
es
fdivrl
mov
jle
orb
mov
cld
fimuls
jl
xchg
and
sbb
loopne
pop
out
inc
jo
mov
or
int3
inc
push
loopne
push
sbb
jle
shll
push
push
arpl
addr16
adc
lahf
mov
or
adc
movsb
ja
cli
push
insb
pusha
add
movsb
fldl2t
and
pushw
outsb
xchg
ja
xor
out
subb
cmp
dec
mov
inc
jns
cmpsb
mov
adc
ljmp
cmp
iret
jae
xchg
ljmp
ret
xchg
push
vmwrite
ret
imul
out
mov
adc
xchg
aad
movsb
jnp
aaa
repnz
es
and
int3
fucomp
fwait
pop
fucom
sub
mov
sahf
xor
push
ljmp
add
mov
or
mov
pushf
push
adc
int3
jne
stos
ror
xchg
cld
outsb
pop
rcr
xor
movsb
fstps
outsb
cmp
sbb
add
sbb
popf
adc
iret
push
push
mov
push
gs
sub
lahf
iret
dec
leave
cmp
inc
jno
ficoml
jne
xor
jmp
lds
mov
movl
in
dec
adc
cmp
in
mov
test
pop
and
fisttpl
data16
push
fs
inc
add
cmpl
sbb
xor
xlat
movl
leave
add
out
and
mov
ljmp
xchg
aam
jb
lcall
clc
xchg
xor
js
cwtl
adc
ja
sarb
das
sbb
mov
xor
loopne
mov
divl
cltd
test
dec
or
cltd
movsb
add
adcb
mov
sbb
jb
and
lcall
orl
jo
xor
push
or
mov
stos
xchg
and
jmp
into
mov
add
leave
popa
jge
jne
xchg
mov
leave
cli
shrl
add
jg
cli
dec
mov
out
or
sub
sti
loope
mov
jmp
sbb
pushf
loopne
and
add
jle
cmp
aaa
xor
dec
dec
rcr
sub
ds
movsb
fwait
xchg
and
push
fs
ljmp
pushf
jle
iret
in
dec
push
jmp
xchg
daa
cld
dec
out
in
ret
std
pop
xchg
sti
insl
push
or
addr16
inc
aam
incl
xor
mov
and
cmp
fnstenv
stos
lods
mov
popa
push
or
or
rolb
cmp
shl
mov
sbb
and
jmp
cmpsl
push
lret
loopne
imulb
popa
test
in
gs
inc
xchg
push
push
mov
pop
ficoml
cwtl
push
cwtl
lods
sti
xchg
sbb
sbbl
shr
inc
xor
jl
adc
test
int3
push
loope
out
not
dec
jb
add
cltd
sbb
push
sti
bound
fwait
pop
pop
in
mov
sbb
xchg
adcl
out
fs
and
iret
int3
fwait
test
jb
mov
sbb
pushf
mov
push
adc
cmp
lock
test
mov
test
add
fistpll
fists
aaa
scas
jle
mov
stos
xchg
popa
mov
mov
jo
pushf
in
or
xor
mov
adc
add
shl
add
stos
adc
mov
and
mov
outsl
mov
or
gs
mov
jnp
ja
jne
std
jg
push
inc
aad
add
xor
xchg
inc
xchg
sub
dec
arpl
pop
aam
mov
inc
in
adc
lods
imul
in
in
sub
mov
jp
adc
lods
xchg
push
ja
shl
movsl
testl
add
push
mov
mov
stc
sub
pop
push
and
movsl
and
iret
xchg
rorb
rcrl
sub
jnp
jne
jnp
jle
mov
inc
hlt
add
loope
push
ret
jnp
out
arpl
pop
data16
mov
jge
push
push
repz
adc
mov
and
pop
mov
repz
icebp
cltd
jnp
bound
jnp
sbb
and
cmp
inc
inc
inc
xchg
pop
rol
xchg
enter
fcoml
push
jl
jbe
jne
test
gs
dec
cmpsl
mov
mov
inc
jo
lea
mov
pop
shll
lods
mov
pop
xchg
frstor
and
cmp
mov
jp
and
fmul
addr16
loope
and
mov
ret
arpl
stos
mov
adc
mov
adc
test
lret
and
js
mov
jb
adc
outsb
inc
inc
sbb
sbb
int
mov
xchg
frstors
sarb
enter
cs
xchg
pop
movsb
push
pop
adc
rclb
xchg
pop
jg
mov
nop
mov
popa
pop
xchg
jecxz
fxam
mov
popa
cmpsl
addb
mov
add
in
daa
test
add
ror
lahf
push
pop
jmp
aaa
sbb
js
xor
test
add
popa
pop
loopne
aas
jmp
push
jg
das
ss
or
fwait
xlat
xchg
sub
insl
xchg
and
pushf
push
add
dec
icebp
loope
dec
push
cli
cmovge
into
fimull
mov
sub
inc
or
jns
sbb
jle
dec
mov
jmp
jne
adc
mov
nop
lock
nop
mov
jecxz
addr16
mov
push
addr16
jbe
jge
fisubrl
cmpsb
xor
and
iret
sbb
push
sub
mov
bound
ja
and
xchg
test
add
ja
inc
push
mov
je
loop
and
mov
cmp
sti
ret
ficomps
gs
xor
mov
fdivr
mov
xchg
push
and
pusha
jae
and
mov
mov
adcb
int3
jp
icebp
cli
inc
and
mov
loopne
mov
pand
popl
add
cmpb
fbld
sub
rcll
fsubrl
idivb
jecxz
mov
mov
inc
mov
xchg
jp
shlb
aam
daa
loopne
pop
mov
xor
jecxz
add
xchg
push
cli
pop
fiaddl
mov
push
shlb
push
jae
test
jne
xor
sub
bound
into
mov
mov
adc
pop
test
or
sbb
sbb
pop
mov
sub
cmp
insb
push
adc
push
mov
leave
jl
dec
outsb
pop
pop
inc
jp
mov
and
lds
jmp
das
pop
push
pushf
add
dec
mov
into
sbb
and
jno
inc
add
out
lods
push
mov
stos
das
ljmp
mov
int
dec
dec
pop
into
ljmp
push
and
jb
addl
popf
rorl
and
dec
mov
xchg
test
mov
inc
lods
dec
add
je
mov
push
dec
mov
and
push
and
inc
aaa
fisttpll
in
or
les
or
or
add
cwtl
inc
es
popa
mov
lcall
pop
sti
shl
in
xchg
into
call
jne
js
xchg
mov
movsb
faddl
idivb
fistps
cmpsb
jno
insl
ljmp
enter
push
cmp
pop
test
push
mov
add
nop
in
fsubr
insl
jne
ficompl
push
mov
icebp
jae
test
xor
mov
pop
mov
stc
insl
icebp
jle
adc
pop
xor
rorb
or
and
int3
ljmp
stc
divl
mov
stc
xsavec
and
fsubrp
cld
pop
into
adc
flds
jge
or
fwait
push
aam
or
jnp
mov
xchg
xlat
sti
and
mov
pop
mov
mov
rorl
cld
loope
push
stos
repz
daa
mov
xchg
les
push
mov
xchg
out
shll
push
push
stos
aas
ret
sbb
xchg
inc
loopne
jge
and
sbbb
sub
gs
sbb
pop
pop
inc
addl
add
inc
aaa
jb
adc
addb
xchg
push
stc
mov
lock
inc
in
xchg
popf
cmp
mov
cs
xlat
or
cmp
movsb
cli
and
test
dec
movb
adcb
les
sbb
addr16
leave
std
int
mov
repnz
popf
mov
rclb
mov
inc
loope
or
mov
daa
and
jb
mov
jno
sub
sbb
inc
push
add
shll
cld
push
les
stc
and
fistps
push
inc
sahf
pop
aaa
swapgs
add
arpl
sub
pop
or
add
pop
std
or
mov
imul
xchg
dec
sarl
js
insb
roll
sbb
adc
enter
into
repnz
pop
push
sub
out
adc
mov
add
dec
in
adc
inc
mov
stos
adc
sbb
jmp
repnz
xchg
xor
loopne
cmp
sbb
jb
xchg
inc
movl
mov
pop
xchg
adc
push
mov
dec
push
clc
adc
or
pop
push
mov
lcall
mov
test
sub
lods
lahf
and
loop
or
rcrl
mov
iret
out
xchg
in
jecxz
sahf
stos
mov
lock
sbb
pop
and
in
arpl
hlt
scas
jg
sahf
and
popa
loop
popf
and
repnz
xchg
push
cmc
mov
cmp
push
lret
jmp
inc
add
push
jbe
divl
dec
add
mov
xlat
bound
xorl
xchg
mov
jg
out
dec
sti
xchg
xchg
xor
insb
aaa
aad
or
xor
sbb
enter
pop
xor
jns
sbb
mov
es
adc
lds
ljmp
xor
mov
sub
aad
hlt
mov
and
mov
stos
push
jp
jp
mov
pop
sti
lahf
sub
xor
mov
push
mov
sbb
insl
lea
inc
in
leave
sub
cmpsl
or
cmpsl
test
into
xor
xchg
pop
jecxz
sbb
imul
repnz
jg
stos
add
mov
jae
lahf
hlt
pop
lahf
dec
ret
ficompl
add
or
insl
sub
mov
push
jbe
dec
fsubl
aad
cld
add
icebp
mov
adc
rol
arpl
sarb
movsb
adc
xchg
inc
popf
add
out
ret
add
xor
ret
push
mov
mov
lods
or
std
mov
shlb
das
repnz
inc
in
sub
jl
popf
xor
dec
in
ds
clc
fisubl
adc
mov
push
dec
daa
push
ds
iret
insl
dec
xor
js
sub
jle
mov
cmp
cwtl
sbb
int
sub
jmp
inc
or
test
mov
imul
sbb
jp,pn
dec
and
mov
xchg
add
dec
sub
out
mov
shll
jge
pop
cmpsl
sbb
sbb
sbb
adc
imul
dec
fisubrs
xor
xor
test
sbb
lret
push
mov
and
fisttps
mov
scas
jl
jl
xor
dec
sbb
or
scas
and
outsb
pop
movsb
and
movsb
shll
mov
pop
mov
fcoml
fistps
retw
fldenv
and
push
jge
iret
and
push
cltd
cltd
lahf
hlt
sub
call
je
arpl
jnp
pusha
xchg
mov
movsl
jnp
insb
int3
adc
scas
adc
mov
push
scas
shll
push
xchg
push
push
clc
stos
test
subl
mov
ret
out
ss
loopne
loopne
scas
je
aaa
mov
cwtl
cmp
cmpsl
dec
dec
add
inc
dec
loopne
xor
fadds
sub
mov
daa
cltd
gs
mov
or
adc
fidivs
push
data16
pop
push
cmpsb
adc
pop
inc
int3
ss
enter
adc
push
sbb
adc
mov
test
sub
popf
std
fcmovu
pop
mov
daa
pop
aam
aas
data16
push
pop
out
lahf
leave
ss
adc
or
bound
mov
add
push
jne
dec
lea
xchg
xchg
add
cmc
mov
xchg
imull
mov
mov
std
jl
cwtl
mov
sbb
fsubp
nop
xlat
xchg
outsb
jnp
out
mov
fistl
or
pushf
xor
and
xchg
jbe
pushf
rorl
mov
xor
jno
xchg
or
xchg
fcmovnbe
xchg
sub
xor
inc
pushf
shlb
mov
pop
data16
pop
sbb
das
lret
shrl
jno
adc
xor
ret
daa
icebp
jb
sbb
int3
xorb
xchg
cmpsl
xor
dec
icebp
add
dec
mov
cwtl
sbb
push
jb
push
lcall
fs
inc
shll
jne
icebp
sub
jmp
out
mov
test
mov
pop
icebp
jmp
fmuls
jnp
xor
xor
push
add
fnstsw
mov
jmp
xlat
lods
out
jo
mov
dec
arpl
xlat
mov
jo
pop
inc
jns
push
dec
add
xlat
cmp
jns
mov
add
movsb
inc
sub
mov
jns
cmp
add
in
cld
jnp
mov
xor
js
and
cs
out
cmp
push
inc
adc
pop
enter
neg
add
in
stos
push
cmpsb
leave
aas
bound
stos
cmp
fisubrl
movsl
dec
mov
jae
push
mov
sbb
aas
cmpb
inc
lcall
adc
shlb
jge
xchg
or
ljmp
and
mov
fstpt
dec
in
inc
cmpsl
sbb
scas
pop
gs
out
push
lret
mov
sub
ret
sbb
mov
pop
repnz
mov
gs
sbb
addl
mov
xor
xor
jmp
pushf
inc
div
lret
push
lds
cld
es
ja
mov
je
cmpl
sub
cld
and
pushf
ror
in
aaa
mov
test
add
push
fisubrl
or
bound
jne
and
pop
lods
das
sbb
mov
or
jbe
jne
pop
out
sbb
out
outsb
iret
pop
scas
sbb
test
cmp
leave
adc
stc
cld
cmp
pushf
push
jle
and
sub
push
lcall
push
lods
mov
imul
je
cmc
mov
push
adc
push
paddusb
js
je
sar
insl
inc
cmp
shrb
dec
popf
xor
sbb
cmp
loopne
int
das
push
int
enter
mov
lahf
xchg
dec
mov
push
pop
cmpl
aam
xchg
xor
mov
lds
test
and
loop
loopne
mov
pop
sahf
adc
lret
dec
xchg
push
cmp
sbb
dec
jle
repz
scas
sti
and
in
mov
mov
add
xor
cmpsb
cwtl
gs
push
or
and
shlb
xadd
fcoml
jne
outsb
in
jne
cmp
lock
inc
add
test
and
push
jae
lea
or
jle
or
leave
repnz
js
xorb
add
scas
fwait
add
inc
sarb
je
js
xchg
fucomi
xchg
stos
lods
mov
push
push
in
sub
inc
xlat
pop
push
cmpl
adc
jecxz
cmc
ds
dec
sarl
inc
data16
mov
lcall
sub
cltd
cli
jge
into
push
pop
icebp
mov
mov
push
fnstsw
mov
gs
or
ficoml
stos
jo
imul
jns
shll
in
shll
adc
sbb
aaa
popl
pop
sub
mov
cli
aad
rcrl
xchg
adc
cs
fwait
insl
mov
clc
xchg
in
test
mov
ss
pop
xchg
iret
push
pushf
xlat
int3
in
lea
mov
mov
rcrl
push
mov
xorl
jo
adc
pop
mov
aas
or
and
xchg
pop
adc
xor
pop
jl
in
cmp
mov
dec
out
flds
cli
ds
daa
mov
fxch
subl
cmc
sub
pop
adc
mov
popa
mov
loope
in
xchg
fwait
ret
bound
out
data16
mov
std
mov
jno
jnp
aam
ficomps
sbb
sub
push
sbb
loop
jge
push
fadds
rcrl
negl
loope
sarl
lcall
xor
lret
mov
iret
mov
adc
insb
mov
xor
arpl
in
cmp
xchg
ret
call
int
push
pop
pop
test
cwtl
or
mov
cmp
leave
fs
jno
push
in
jp
shl
cmpsb
jg
mov
ret
add
cmp
adc
fs
and
leave
sbb
loope
aad
call
js
shlb
int
pop
cmp
inc
sbb
xchg
lds
andb
or
push
push
scas
push
inc
lret
cmp
cmp
idivb
sbbb
enter
and
lret
in
or
ret
pop
adc
ds
sub
dec
and
test
push
add
pusha
das
fs
jne
or
in
and
test
add
cmpsl
rcr
jne
repnz
ds
sar
add
in
cs
fidivrs
lret
fisttpl
out
lods
inc
and
cli
xor
cmp
xchg
mov
cmpl
jns
out
popa
ds
imul
push
mov
xor
mov
movsb
sub
sbb
sub
xchg
add
lahf
pop
je
mov
xchg
lret
mov
jg
mov
out
mov
bound
cmp
cmp
add
sub
out
out
mov
pop
fcmovne
stos
jb
sbb
xchg
mov
dec
xor
inc
cltd
pushf
push
roll
lds
jge
hlt
movsb
push
dec
sbb
call
mov
inc
or
addr16
pop
sub
out
xlat
push
fistpll
adc
cmp
jo
imul
jne
scas
mov
xor
jecxz
cmpsl
outsb
imul
push
pop
ret
add
cmc
xchg
insl
jle
mov
jo
icebp
push
pop
cmpsl
mov
loope
adc
dec
out
mov
jge
ss
or
shrl
xchg
pushf
lea
add
stc
pop
out
das
adc
lret
out
push
daa
xadd
push
pushf
xchg
jl
mov
pusha
sub
add
adc
rorl
add
and
hlt
jg
cli
mov
xor
stos
cld
mov
popf
inc
bound
cld
jb
outsl
adc
add
insb
call
pop
sbb
pop
jecxz
popa
push
push
mov
sub
lea
fst
fs
and
push
loope
test
cmpsb
fstp
loop
adc
aam
cs
jo
adc
stos
push
fstps
lret
mov
iret
arpl
push
mov
inc
mov
ljmp
or
xchg
push
dec
jp
xchg
and
inc
enter
pop
nop
jae
cmp
fbstp
cld
ja
fcomps
mov
std
test
imul
arpl
stos
push
arpl
mov
mov
cmp
sti
out
ret
and
mov
cmp
ret
sbb
or
inc
sub
pop
fwait
add
aas
leave
std
xor
adc
rcl
test
shll
ljmp
jg
out
into
test
lahf
inc
shrl
mov
push
jnp
cmp
bnd
fsubs
clc
add
out
lock
push
adc
cmpsl
in
repnz
ljmp
cmpsb
jns
arpl
mov
push
adc
pop
sub
xchg
mov
adc
pop
push
lods
sbb
out
adc
pop
int
int3
insl
lods
hlt
test
dec
xlat
adc
xchg
pushf
rclb
xchg
dec
cli
mov
bound
imul
retw
xchg
add
sub
js
push
stos
and
adc
pop
arpl
lcall
dec
fs
repz
push
nop
and
dec
or
es
test
pop
dec
mov
mov
sbb
jae
xor
adc
push
mov
and
mov
xor
std
mov
xchg
lahf
jo
dec
in
or
dec
sub
lahf
and
fs
sub
dec
mov
mov
pop
lcall
scas
jecxz
pop
dec
jge
dec
addr16
pop
mov
std
hlt
jb
movsb
inc
jg
sbb
out
repz
push
rclb
icebp
bound
hlt
mov
mov
xchg
pop
fadds
test
incl
dec
add
jbe
faddl
mov
test
adc
insl
leave
cs
cwtl
xchg
nop
add
mov
and
dec
mov
xchg
ret
dec
icebp
adc
adcb
popf
xor
call
or
les
sub
xlat
aam
and
rcll
or
add
out
repnz
cmp
or
movl
jo
push
cmp
inc
inc
sbb
data16
ljmp
in
mov
inc
cmp
out
test
push
mov
repnz
adc
jnp
pop
and
ret
insb
mov
loope
dec
rorb
push
pusha
or
xchg
mov
sti
mov
jge
mov
ja
imul
cmp
mov
add
popa
nop
pop
outsl
rorb
cmpb
sti
cmp
cli
es
adc
push
add
cmpsl
push
sub
movsl
pop
mov
aam
pusha
leave
out
inc
aad
or
stos
out
jo
dec
sahf
loopne
push
add
fnstenv
inc
fstl
ja
fdivrs
testb
sbb
xor
jne
mov
mov
pop
rclb
ret
dec
bound
and
lret
xchg
xchg
inc
pushf
dec
icebp
dec
add
bound
add
aad
pop
sub
mov
mov
sbb
mov
lahf
jmp
jge
and
inc
je
mov
add
aam
adc
popf
lds
jbe
mov
in
cltd
bound
lahf
push
in
pop
fimuls
and
xor
fists
jecxz
push
out
add
pop
xor
nop
pop
fidivl
cwtl
mov
repz
ljmp
lods
add
adc
add
icebp
lcall
shll
scas
out
fldt
jae
mov
lcall
or
mov
adc
cmp
outsb
mov
sbb
xchg
rclb
insb
std
loope
popa
pop
fiadds
jecxz
xchg
xor
je
mov
aad
clc
pop
cmp
adc
mov
adc
insl
dec
fwait
mov
pusha
cmp
add
inc
mov
movsb
lods
idivb
repz
aaa
jge
dec
dec
jecxz
xor
mov
in
jnp
sub
xor
mov
mov
xchg
lds
nop
jo
mov
pop
inc
ss
out
cmpsb
push
in
jp
es
test
adc
fwait
pop
ret
nop
xchg
jae
add
sub
arpl
test
xchg
push
jb
jae
add
jno
lahf
dec
icebp
movsl
pusha
fdivrs
push
sub
pop
sbb
inc
rclb
or
dec
rcrb
lods
loop
cmpsb
push
mov
mov
mov
jbe
daa
in
push
jae
int
test
xchg
cwtl
fildl
ja
mov
out
mov
or
scas
adc
fsubrs
cmpsl
das
fcmovnbe
push
scas
test
or
or
cs
sbb
imul
fcoms
in
fidivrs
mov
xor
jmp
cmp
hlt
cmp
fcom
pop
pop
add
js
and
mov
xor
mov
push
cld
cmp
enter
add
cmpsb
stos
cmpsb
div
mov
xor
push
lods
cmpsb
cld
mov
sahf
int
cmp
out
aad
js
test
sbb
shrd
adc
and
sbb
sub
out
jne
push
dec
and
xor
cld
addl
or
movsl
scas
or
mov
jmp
mov
fcmove
outsb
cmp
mov
jl
sbb
mov
inc
pop
mov
and
negl
enter
mov
aad
xchg
jae
aas
jne
daa
pop
insl
jg
xor
nop
xlat
mov
test
cs
and
or
scas
adc
jae
mov
fnstenv
repnz
mov
addr16
iret
scas
mov
add
jno
sbb
mov
js
and
or
xchg
jmp
dec
arpl
ljmp
mov
sub
leave
pop
lods
jecxz
mov
scas
xchg
mov
xchg
cld
mov
mov
sbb
and
cmp
lcall
popf
pop
sub
inc
data16
sbb
popf
mov
xchg
popf
and
jns
jbe
cmp
enter
mov
aas
pushf
nop
lret
addr16
es
loop
mov
divl
out
cmp
mov
or
sub
jae
push
stos
stc
push
mov
outsl
inc
scas
jae
cmp
aam
jae
and
imul
xchg
and
aam
xor
ss
stos
push
inc
stc
cmp
mov
add
mov
inc
mov
out
jg
in
insb
inc
bound
jp
cmpsb
mov
pop
xor
cwtl
imul
fsts
lret
and
xchg
mov
or
mul
jb
fmulp
outsl
clc
xlat
stc
andl
xor
adcb
mov
push
stos
shll
adc
adcb
addr16
rorb
sub
xlat
lods
mov
jo
popa
sarb
test
mov
test
jge
dec
arpl
js
inc
sub
jecxz
popf
xchg
hlt
shrl
adc
ds
call
std
add
imul
xchg
or
std
inc
pop
dec
jae
mov
fistpll
mov
stos
and
rorb
pusha
das
mov
cmp
push
xchg
sbb
pop
fdivp
lods
dec
adc
inc
dec
data16
pop
push
outsl
into
inc
xchg
mov
dec
lods
cmp
scas
popa
loope
dec
mov
sbb
xchg
mov
test
into
das
mov
cwtl
dec
mov
enter
shll
or
add
inc
dec
sahf
push
inc
push
pop
cmp
fsubrl
xchg
adc
jp
push
xchg
out
ja
es
cmpsl
mov
and
fstpt
movb
inc
fbld
dec
mov
xchg
cmp
fsubs
loop
cmp
jecxz
stos
jbe
daa
cltd
sti
cltd
add
test
cmovbe
push
xchg
dec
imul
push
add
lods
test
or
xchg
cld
mov
fisubl
jae
adc
xchg
fists
push
sbb
jge
das
out
mov
and
std
imul
rcll
sub
mov
or
icebp
cld
gs
lods
je
cmp
xchg
pushf
push
mov
sub
or
jbe
popa
loope
jp
int3
out
scas
fistpl
xchg
mov
mov
fwait
inc
add
cmpsl
mov
mov
jle
jo
mov
loope
shr
js
pop
add
xchg
lods
out
jae
aad
bound
inc
mov
je
mov
inc
jo
jo
cli
sti
aad
inc
sti
inc
add
std
mov
in
fs
dec
and
outsl
js
adc
outsb
aas
loop
pop
mov
adc
dec
dec
jne
testl
sub
jb
jle
push
jne
or
stos
inc
xor
and
pop
test
insl
jns
xor
mov
divl
jns
mov
scas
jge
and
aaa
mov
mov
adc
repnz
cmp
jb
lods
fprem1
jae
paddd
and
pop
cmp
jecxz
jb
jge
pop
nop
push
data16
xchg
imul
inc
int3
cmp
lret
pop
push
mov
inc
les
call
mov
and
sbb
scas
push
outsb
ja
aam
mov
lahf
xchg
cwtl
leave
sbb
sbb
jl
rcll
xchg
out
popa
sbb
mov
push
cmpsb
shl
js
dec
dec
lods
mov
addr16
hlt
mov
mov
lret
in
clc
push
xor
out
rorb
mov
dec
cmp
pop
scas
addr16
jns
negb
test
outsb
mov
jg
dec
into
dec
xchg
add
or
sbb
shlb
cmpsb
rol
shll
cmp
push
leave
inc
aas
xor
dec
fstpt
fs
adc
adc
mov
or
push
cmc
mov
add
pop
pop
sbb
adc
push
leave
lds
or
jmp
stc
adc
rcrb
mov
aaa
arpl
cmc
outsl
lods
adc
sahf
sahf
insb
jns
dec
pusha
lret
push
inc
mov
call
dec
test
ljmp
or
mov
roll
test
fldt
jo
xchg
in
aas
mov
ficoms
jmp
ja
int
loopne
movb
int3
mov
pop
out
jle
adc
jae
inc
inc
inc
popa
sbb
mov
andb
jle
in
test
mov
addr16
or
cmpsl
mov
cwtl
jbe
sahf
adc
sti
cwtl
aad
ret
cli
xchg
lahf
adc
push
mov
addr16
mov
xchg
sbb
pop
sbb
pushf
adc
shl
mov
xchg
cmc
insb
pop
sbb
dec
xor
sarl
pop
dec
test
rclb
mov
pusha
jecxz
jns
pusha
in
xchg
push
jae
out
or
stos
jl
int
dec
ljmp
add
adc
cmp
sub
pop
xchg
sub
adc
mov
ljmp
push
add
sub
loopne
aaa
out
push
push
lret
scas
pop
sbb
jmp
sbb
pop
jae
lret
loope
mov
ds
pop
jmp
sub
xor
add
xorb
push
cmp
xchg
shll
into
loopne
jnp,pn
or
ja
and
mov
and
shrl
sbb
jns
add
mov
bound
ret
inc
into
jne
mov
xor
mov
gs
fldl
mov
adc
bound
xor
or
add
shrl
sub
insb
leave
mov
inc
pop
push
dec
rcrb
iret
pop
rcll
sbb
push
pop
mov
out
daa
mov
and
in
xchg
mov
test
xchg
negl
mov
cmp
mov
push
xchg
jae
rsm
jb
pop
dec
cmp
push
or
and
mov
cmp
loope
rclb
mov
cmp
add
repnz
xlat
cmp
aas
iret
mull
xchg
popf
xchg
scas
pop
jb
addl
sti
cld
pusha
loop
inc
shll
push
not
jae
loope
hlt
iret
mov
mov
ja
call
inc
sub
fildll
add
out
in
popa
dec
insb
or
inc
and
scas
addr16
or
jmp
ficomps
push
popa
loope
imul
mov
test
xchg
xor
inc
cmp
lcall
dec
mov
fildll
mov
andl
inc
dec
lea
arpl
movsb
or
mov
lea
leave
sbb
push
je
insb
push
pop
dec
adc
rol
inc
lret
pop
inc
iret
cltd
mulb
mov
mov
and
xor
pop
jo
add
cmc
filds
outsl
jg
gs
push
add
inc
add
adc
cli
or
popf
mov
cmc
push
out
fstpl
subb
mov
mov
adc
dec
adc
mov
aad
mov
add
loope
xor
das
xor
cmp
and
cmp
clc
mov
out
pop
push
jmp
jne
and
push
or
and
and
sbb
mov
dec
ljmp
mov
sbb
test
dec
or
rclb
jmp
xor
fldenv
sahf
adc
das
sahf
std
rorl
xchg
pop
add
push
mov
lret
fs
mov
adc
cmp
sti
stc
xor
mov
push
cmc
adc
insl
cmc
lahf
imul
cmp
mov
inc
xchg
sub
adc
and
xor
sbb
fs
cmpsb
push
enter
stos
ret
push
mov
push
add
add
mov
jno
dec
clc
std
mul
push
out
sub
cwtl
mov
in
xlat
push
addr16
cmpsl
inc
stos
cmp
xchg
pop
inc
loopne
lret
ret
clc
jmp
jns
lret
inc
and
or
cld
scas
ret
icebp
movsb
jo
je
ja
dec
cmpsl
enter
in
jg
inc
dec
push
mov
pushf
xor
or
out
mov
or
jnp
dec
outsb
pushf
pop
divb
cwtl
push
test
push
pop
mov
dec
mov
pushf
lods
lret
in
push
icebp
js
mov
sti
cmp
mov
arpl
nop
cmp
jp
mov
cmp
pop
add
lret
cmp
cmpsl
icebp
outsl
inc
shlb
icebp
mov
aas
push
hlt
fdivrl
xor
sarb
aam
dec
movsl
xor
and
inc
dec
subb
aam
sub
mov
push
dec
icebp
xor
movsb
loop
sarl
cmp
gs
cmp
insl
das
lahf
cs
mov
mul
mov
xchg
inc
loop
jg
scas
imul
cld
xor
fists
ret
jmp
mov
sti
fisttps
sbb
das
or
bound
add
out
and
addr16
lds
sub
pop
jns
push
neg
subl
mov
add
jge
lods
mov
and
cmp
xchg
and
and
shr
or
push
sbb
lret
inc
ja
jmp
ret
dec
ficomps
xor
xor
inc
pushf
lock
jbe
rolb
push
add
jno
or
push
jo
movsl
loope
lahf
mov
test
das
push
dec
fwait
xlat
mov
jae
mov
push
imul
icebp
sbb
pushf
mov
test
in
cmpsb
or
cmp
and
add
ja
push
add
int
rcrb
getsec
xlat
cli
imul
in
jmp
in
xchg
and
mov
jecxz
lock
es
rclb
inc
les
test
es
xchg
lcall
mov
cli
test
cmp
push
jge
sahf
enter
sub
sti
movsl
mov
and
or
cmp
ds
int
inc
sub
or
das
pop
popa
pop
jno
push
hlt
xor
pop
xchg
mov
popa
ret
and
movsl
dec
or
mov
jns
shll
jecxz
dec
call
dec
or
mov
out
mov
cmp
rcr
out
ss
test
fwait
xchg
fs
repnz
lock
imul
jl
lahf
int3
mov
adc
in
xor
sub
dec
adc
test
xor
stos
test
xorb
dec
sbb
insl
sub
stos
or
push
frstor
cmc
jl
subl
fs
jno
fnstsw
out
outsl
mov
pop
sbb
lods
cmpsl
fnsave
mov
sub
pusha
pop
cmp
lea
jge
in
cld
nop
fcmovnb
dec
mov
mov
insl
push
out
mov
inc
xlat
dec
sbb
loopne
push
rcll
sub
test
pop
mov
add
popa
xor
fwait
cmp
cmp
bound
popl
movsb
negb
sbb
sahf
jecxz
pusha
filds
in
rolb
sub
mov
test
fldlg2
mov
insl
xor
add
fnsave
pop
in
dec
pop
adc
or
jb
pop
loop
roll
pop
sub
mov
lea
sub
sbb
fistl
and
pushf
hlt
add
out
pop
xor
sti
outsl
fmull
add
inc
idiv
adc
stc
ss
inc
in
insb
mov
or
mov
jns
sub
xchg
adc
in
stos
in
mov
pop
dec
xor
sbb
jnp
fprem
xor
data16
lcall
rcrl
aam
loope
mov
add
pop
xor
mov
jo
rcrb
movsb
sti
popa
movsl
in
iret
cwtl
std
andl
xlat
shrl
es
in
pushl
jae
negb
ds
xor
dec
leave
rcrb
imul
imul
mov
add
lods
shrb
mov
jno
mov
jmp
popa
loop
movsb
cwtl
cmc
jecxz
mov
and
in
and
sub
gs
shrb
jecxz
or
lcall
fsubrl
xor
and
rorb
into
inc
addb
adc
dec
fld
cmpsb
mov
in
inc
testl
push
pop
mov
push
lahf
sbb
cmc
loop
inc
or
or
outsb
or
push
test
cmp
pop
xchg
movsl
rcl
bound
fisttpll
and
loope
push
adc
push
jl
cmp
and
and
dec
lock
outsl
xor
dec
dec
ret
shlb
sub
mov
ret
call
dec
sar
cmc
enter
ret
xchg
or
sbbl
inc
lock
dec
xor
shll
sub
sbb
ret
punpcklbw
jg
into
push
das
mov
jg
cmp
shlb
inc
scas
repnz
lahf
pop
jae
inc
or
jns
pop
sbb
sbb
lret
xlat
in
lret
clc
pop
mov
mov
xchg
js
sbb
repnz
dec
mov
jo
movsb
popl
xor
cmp
mov
fnstenv
xchg
xor
fistpll
rol
mov
mov
jbe
add
dec
sub
out
test
cwtl
xor
out
test
ret
mov
mov
inc
dec
cmp
iret
sbb
popf
test
das
mov
fs
lds
lds
in
push
adc
es
std
cld
mov
inc
dec
mov
sub
daa
or
test
fwait
jmp
xlat
mov
fidivrs
add
roll
or
pop
dec
fs
add
xor
mov
rorl
lret
mov
sti
xchg
nop
dec
add
push
jmp
stc
icebp
dec
cmp
jmp
jne
push
and
aad
fildll
cmp
xchg
das
or
mov
insl
mov
xchg
aas
push
ret
push
cmp
and
adc
xor
aas
fistpll
mov
mov
cmpsb
xchg
stos
adc
jbe
xor
movsb
aad
cltd
dec
mov
incw
out
daa
inc
inc
ficoml
cli
outsl
notl
loopne
adc
jo
hlt
adc
inc
jbe
push
or
fdivp
iret
test
test
pop
pop
xchg
xchg
int3
rcrb
repz
lds
mov
pop
jg
mov
clc
mov
jo
cmp
sbb
cmpsb
mov
dec
add
dec
mov
in
dec
data16
xor
in
dec
cli
add
mov
mov
les
inc
mov
mov
sub
sbb
clc
les
out
in
push
xchg
push
js
fcmovnbe
ret
mov
cmp
mov
sbb
movsl
jl
out
push
xchg
imull
jp
test
sahf
stos
ret
and
mov
push
push
daa
xor
add
xor
icebp
cmp
cmp
fisttpll
adc
lods
jle
lret
sarb
lock
subl
push
cltd
stos
xchg
std
mov
sarl
jmp
pop
push
fimuls
and
and
in
jg
sbb
mov
fstpl
ds
roll
cmp
jmp
repnz
cmpsl
rorb
fwait
or
mov
lcall
pop
loop
add
fidivl
mov
int
lock
hlt
loop
or
mov
sub
test
cmp
xchg
add
mov
outsl
shrl
push
or
cmp
cmp
xchg
ret
mov
mov
ss
arpl
aas
insb
pop
clc
cltd
aaa
test
dec
dec
mov
clc
inc
stos
pusha
test
jmp
in
into
push
and
pop
sarb
test
sub
mov
inc
fmull
scas
cmp
dec
lods
out
nop
in
fwait
jmp
jle
mov
outsl
cwtl
sbb
pop
add
or
mov
ja
decb
adc
fimuls
jne
push
pusha
inc
nop
mov
pop
cltd
movb
cmp
cmc
sahf
adc
pop
pop
fstpl
in
mov
movsb
movsl
mov
aad
jae
xor
call
xor
xchg
jge
iret
push
cli
ds
in
sarb
jns
icebp
fbld
lea
lods
lea
push
xor
sbb
dec
and
fidivl
jne
int3
idivl
daa
lds
mov
enter
pushf
outsb
inc
jg
testl
jmp
jnp
cmpsb
sub
xor
ljmp
add
lahf
scas
arpl
enter
ja
sbb
push
lret
movb
icebp
test
mov
rcll
subb
or
xor
mov
xor
jg
ret
cmp
hlt
jbe
jecxz
gs
pop
shrb
cs
cmp
lcall
ret
popf
push
pop
jl
pushf
jmp
sbb
test
lcall
mul
adc
icebp
push
loopne
dec
push
mov
fistpll
lods
je
mov
push
pusha
jns
fcom
xor
test
push
je
xlat
mov
pop
cmp
dec
push
and
jle
div
xchg
mov
test
clc
or
adc
lock
push
lock
cld
adc
fmuls
cltd
call
fs
add
sub
cs
out
stos
test
push
cmpsb
cmp
add
xchg
sti
fcoml
loopne
jne
sub
push
and
mov
mov
pusha
addr16
fs
out
stc
jle
push
into
mov
mov
inc
outsl
gs
clc
dec
popa
fstps
pop
mov
jge
sub
movsb
pop
inc
stc
push
jg
pop
inc
clc
mov
into
mov
pop
pop
data16
jno
ds
data16
jle
fxtract
dec
test
sbb
rcl
mov
and
jecxz
mov
enter
ret
xor
push
subl
lret
inc
lock
xlat
cli
xchg
in
cmp
pop
push
stos
fwait
inc
dec
pop
sub
pushl
es
popf
xchg
or
push
lret
jns
dec
pusha
xchg
popf
lods
mov
data16
cmp
push
les
xchg
mov
imul
sbb
inc
flds
sbb
ja
cmp
enter
xchg
scas
mov
xor
push
or
mov
mov
popa
xor
mov
inc
lret
xor
cld
leave
movsl
fs
adc
sub
xchg
popa
inc
repnz
and
cwtl
ret
or
cli
pop
les
add
cmpsb
mov
jnp
pop
jp
jl
inc
adc
xchg
fnsave
inc
dec
inc
jle
inc
int
push
inc
orl
es
inc
rolb
addr16
sbb
out
adc
inc
lods
adc
gs
movsl
ret
insl
adc
mov
not
mov
cmp
ficomps
in
ljmp
lods
jnp
push
data16
and
mov
iret
or
out
sbb
xchg
dec
cmp
and
outsl
movsb
mov
addb
and
lods
in
mov
lcall
mov
dec
test
sti
mov
roll
sbb
mov
or
cmp
sbb
rep
jb
shrb
push
fs
sti
out
jl
lods
cmp
xor
inc
lcall
ljmp
xchg
and
in
add
cs
cwtl
xor
xor
loop
scas
add
jne
push
adc
or
cltd
stos
in
or
pop
repnz
mov
sub
push
loope
inc
or
cmp
std
or
inc
movaps
stos
xchg
lcall
inc
push
push
adc
loope
jno
std
fistl
adc
aas
ret
shrb
dec
pop
dec
mov
std
or
imul
inc
out
hlt
addb
test
jnp
enter
movsl
push
mov
jo
sbb
rol
cmp
add
mov
xor
loope
mov
xchg
int
mov
or
adc
pop
lcall
std
testl
or
jmp
mov
adc
mov
pusha
or
pop
pop
mov
pop
lea
add
adc
dec
cmp
dec
add
mov
inc
inc
mov
loope
inc
movsb
push
inc
jo
loope
and
pop
mulb
and
pop
or
data16
arpl
xchg
pusha
fbstp
nop
in
clc
push
pop
ffree
das
or
cmp
xor
xchg
popf
insl
push
or
sub
xchg
lds
in
in
push
pop
hlt
xchg
fistl
dec
push
cmp
insb
inc
or
clc
into
mov
rcrb
pusha
dec
in
pop
repz
daa
dec
out
mov
mov
sub
pop
xor
xchg
mov
js
faddl
in
dec
movsl
push
cmp
ret
sar
mov
push
jae
bound
fcomp
or
jl
push
popf
xor
dec
adc
sarl
xchg
outsb
jnp
push
push
stc
xchg
addl
mov
ret
aas
cmp
mov
jecxz
jae
sub
mov
dec
fsubrl
dec
fnstsw
xor
jmp
xchg
imul
leave
xchg
lahf
pop
in
addb
scas
cmpsb
inc
inc
xor
mov
adc
jo
jge
shrb
loop
inc
cmp
pop
aad
xchg
pop
loop
mov
push
js
xor
ret
dec
call
or
rorb
ja
xchg
or
xlat
mov
outsl
nop
sbb
addr16
fidivrl
mov
add
mov
jmp
add
divb
dec
dec
ja
js
inc
push
shr
jmp
push
push
sar
loop
mov
add
addl
dec
and
cmp
jp
aam
adc
xchg
push
inc
or
xchg
sub
mov
mov
dec
into
in
fnsave
xor
or
sub
sub
testl
movsl
pop
push
les
cmpsl
je
xorb
jb
jb
outsb
shrb
mov
out
sbb
push
adc
pusha
clc
leave
in
xor
test
iret
stos
lea
aam
mov
icebp
sbbb
push
int3
ss
out
cmc
roll
or
int3
cmpb
shrl
jb
out
and
jns
add
pop
mov
mov
xchg
dec
add
sbb
mov
mov
mov
in
mov
add
das
nop
loop
or
fbstp
xor
and
andb
mov
dec
push
ss
sub
jmp
repnz
xchg
dec
jle
aam
adc
cltd
dec
sbbl
negb
lret
add
pop
cmp
aam
add
push
adc
sbb
pop
jae
loope
mov
inc
jns
sub
pop
sbb
mov
push
std
lock
into
mov
add
add
cmpl
push
dec
pop
push
test
test
jmp
mov
xchg
pop
sbb
lahf
jnp
js
and
les
adc
test
lahf
mov
push
push
aas
cs
stos
mov
push
mov
in
sbb
mov
int3
mov
or
pop
jle
sbb
pushf
not
dec
push
dec
push
mov
addr16
inc
jb
ret
aas
adc
lahf
pushf
mov
mov
sarl
daa
pop
xor
push
lds
jl
mov
push
mov
outsb
cmpsl
pop
loop
push
pop
nop
pusha
pop
or
aam
mov
xchg
hlt
push
cltd
pop
and
lods
cwtl
lahf
cmp
fcmovbe
inc
ljmp
or
xorb
sub
gs
sarl
pop
in
jnp
add
out
rcll
lods
addr16
stc
add
add
dec
sbb
pop
mov
fsubs
stos
imul
xchg
aas
movl
cmp
mov
stc
push
aad
add
inc
push
ficomps
cltd
mov
pop
int3
xor
cmpsb
cmpsl
adc
jbe
push
pushf
test
mov
inc
in
cmp
call
add
bound
adc
cmp
pop
jmp
repz
bnd
sahf
mov
pusha
lods
lahf
ret
pop
cld
shlb
scas
cmp
jb
sbb
sbbl
enter
xor
cmp
sub
and
stos
fwait
adc
xchg
test
outsl
jnp
repnz
mov
fs
xor
xor
cmp
lahf
cmp
jne
sahf
pushf
xor
loop
xchg
mov
sub
cs
push
fwait
jl
out
fs
lods
scas
aad
xchg
insl
dec
repz
in
ret
test
mov
jbe
je
lods
ljmp
mov
pop
cld
jecxz
dec
leave
xor
mov
push
add
cmpsl
shrb
or
repz
pop
mov
and
fidivrs
mov
lea
push
nop
and
test
fwait
cld
ja
pop
jp
mov
leave
repz
pop
mov
or
mov
mov
lea
mov
js
jle
sub
int3
mov
sub
or
push
cmp
notb
adc
int
xor
pop
mov
adc
push
stos
mov
fstpl
lcall
icebp
jb
or
int
mov
fwait
lret
retw
push
andb
arpl
rolb
cmp
xchg
rclb
jno
cmp
add
pop
addr16
cmpsl
fisttpll
ja
cmpsl
mov
adc
mov
jmp
lcall
iret
aas
pop
in
rcll
inc
out
dec
dec
push
mov
jg
lock
inc
xchg
cs
test
pop
and
jne
clts
insb
mov
pop
sbb
pop
sbb
adc
or
cli
push
in
xchg
xchg
sahf
pop
cwtl
adc
xchg
add
scas
mov
ja
mov
enter
into
xchg
fs
inc
jge
mov
or
dec
push
decb
adc
mov
jecxz
adc
fdivrs
fdivrs
stos
loope
jnp
pop
dec
leave
pop
pop
dec
ljmp
mov
test
jo
pop
jbe
test
add
ja
cmp
adc
int3
ret
fiadds
inc
sub
int
lret
pop
jmp
dec
outsb
dec
push
out
mov
mov
adc
ss
std
xchg
pop
in
jb
and
and
jo
sub
lret
shlb
adc
or
push
popf
das
adc
push
cmpsl
pop
and
dec
dec
insl
mov
divb
movsl
sbb
shlb
dec
mov
std
test
or
inc
pop
mov
loope
xlat
enter
mov
or
ja
out
jae
mov
loopne
shlb
dec
jecxz
adc
mov
ja
test
sti
iret
push
jecxz
or
xchg
lret
roll
loop
add
pop
cmp
sub
xlat
jecxz
loop
dec
daa
or
movsb
mov
int
pop
inc
enter
inc
push
out
mov
call
out
pop
stos
repnz
ss
test
inc
in
rorl
inc
rcrb
sub
mov
imul
ljmp
das
fildll
xchg
js
dec
mov
mov
divb
stos
stc
push
push
or
clc
inc
divl
adc
jo
test
lds
int3
jb
jo
push
sarl
sahf
jecxz
cmpsb
or
lea
jecxz
jl
jg
loope
xchg
fnstcw
xor
dec
xchg
inc
add
icebp
mov
fcoml
jp
inc
movsl
sbb
cmp
loope
mov
adc
ss
pop
inc
jp
dec
scas
sarb
and
gs
xchg
sbb
dec
add
out
stos
push
fmuls
movsl
and
addr16
inc
or
and
xchg
adc
gs
sahf
into
imul
and
mov
lret
repnz
mov
or
bound
jno
cmp
cmp
mov
shrl
idivb
mov
sti
push
stos
test
call
push
hlt
cwtl
stos
lds
ss
rol
sub
push
das
lret
dec
mov
in
stc
add
repz
js
push
daa
xchg
mov
leave
fdivs
insl
or
fisubrl
sub
in
cmova
dec
pushf
adc
xor
sahf
leave
icebp
mov
or
loopne
jb
negb
mov
mov
daa
jp
cltd
leave
scas
and
adc
mov
xchg
stos
imul
das
sbb
mov
loopne
pop
ret
dec
and
out
mov
imul
jg
sub
sub
pop
fnstenv
mov
or
out
popf
pop
add
cltd
repz
xchg
clc
int3
xchg
push
movsl
push
stos
sbb
movsb
fsubrs
out
outsb
add
jns
mov
arpl
fcmove
ret
jmp
jae
call
mov
xor
pop
mov
mov
pop
cs
xor
divb
cwtl
pause
mov
sub
mov
mov
lods
jg
inc
scas
call
ja
icebp
fildll
jnp
or
lahf
sub
push
mov
aas
xor
fistps
pushf
xor
mov
xchg
pop
repnz
in
cs
fstl
hlt
add
repz
or
xlat
inc
lcall
fnstsw
jne
dec
frstor
je
and
push
call
mov
sub
mov
fcoms
push
sbb
mov
add
repnz
mov
mov
dec
adc
repz
test
mov
add
jmp
and
xchg
push
sbb
jp
mov
dec
rcrb
fwait
out
scas
adc
jle
cld
jle
shl
ret
sahf
shll
sub
call
int
cmpl
mov
sub
leave
pop
jecxz
std
xor
sub
cltd
push
inc
push
pop
gs
out
cld
je
jnp
and
inc
xchg
mov
ret
out
arpl
mov
inc
pop
mov
cmp
and
mov
loop
dec
cwtl
xchg
and
stos
outsl
cli
push
cmpsl
push
aam
adc
js
jbe
pop
dec
loope
jle
les
adc
jnp
daa
mov
jbe
imul
subl
dec
dec
dec
sahf
les
push
mov
sar
lcall
mov
ret
adc
js
movsb
add
icebp
jns
mov
mov
pop
arpl
and
or
jns
fiadds
sbb
xchg
in
jne
pop
icebp
iret
mov
push
cmp
adc
fmull
xor
rorb
sbb
adc
add
lea
push
mov
sbb
lock
repnz
lods
test
mov
les
mov
push
or
std
xchg
xor
xlat
inc
into
lds
jp
cmp
hlt
subl
mov
push
ficoms
push
or
xchg
jae
mov
or
add
dec
xchg
test
fs
xchg
xchg
sub
mov
hlt
ja
cs
in
ljmp
mov
lret
int
popf
adc
dec
or
aad
mov
push
sbb
dec
pop
inc
adc
in
arpl
out
dec
dec
lds
daa
imul
hlt
mov
xor
lds
aaa
scas
pop
outsb
inc
xchg
cltd
mov
gs
dec
das
mov
popa
dec
sbb
ss
and
mov
enter
jmp
mov
pop
insb
and
or
push
xlat
xorl
push
xchg
xchg
ret
mov
xor
clc
jp
jg
mov
ficompl
mov
shlb
aas
shrb
mov
outsb
cmp
scas
pop
dec
lock
out
addr16
cltd
cmpsb
cmp
dec
pop
push
lods
jle
xchg
push
inc
push
lock
jecxz
mov
mov
mov
lret
push
mull
insb
jae
pop
sub
cli
mov
addr16
out
call
push
std
sub
xorb
outsl
and
lret
pop
adc
cmpsl
jge
sbb
cld
cltd
lock
gs
bound
jnp
fdiv
iret
push
push
or
mov
in
mov
sti
mov
movsb
aas
cmp
in
insl
xchg
xchg
push
jg
test
adc
cltd
bound
mov
mov
sub
nop
mov
dec
leave
pushf
mov
jp
inc
sbb
ss
loop
out
push
int3
insb
or
pop
out
iret
mov
xor
es
or
aam
cmp
add
dec
shl
jo
jno
jne
mov
add
ds
cwtl
stc
enter
sbb
or
lret
or
cmpsl
mov
cmpb
inc
add
idivb
dec
test
negl
dec
aaa
mov
xchg
in
adc
mov
jl
xchg
fs
and
cmp
ss
shrb
and
ljmp
add
mov
xchg
in
outsb
pop
cs
xchg
arpl
test
jg
xchg
shlb
clc
fwait
in
inc
js
push
sahf
xorl
shlb
xor
outsb
jg
sti
cmp
jle
or
mov
ret
xor
arpl
mov
aas
insb
jl
fsubrl
sub
jecxz
mov
or
into
outsb
cltd
or
mov
jg
aaa
cmp
mov
xchg
and
jnp
mov
stos
adc
popf
aad
clc
mov
shll
mov
sahf
out
aas
fs
dec
inc
or
pop
mov
hlt
lahf
shrl
inc
fbstp
sbb
mov
lods
imul
inc
mov
repz
mov
jmp
sub
outsb
and
dec
insb
dec
push
lcall
sub
out
mov
cmp
repnz
faddl
jnp
mov
lret
in
rorl
addr16
push
shlb
xor
lea
mov
in
cmp
push
adc
negl
sarb
mov
daa
xchg
gs
adc
sbb
xchg
push
dec
jo
int
mov
inc
add
roll
daa
sub
inc
pop
mov
in
and
inc
push
inc
cli
test
mov
and
mov
mov
xchg
shrl
outsb
hlt
stc
test
lods
push
xor
jge
rclb
cmp
shll
xchg
aaa
inc
mov
add
pop
clc
outsl
aam
sahf
sub
testl
int3
lock
rcrl
cltd
add
fwait
sbb
fwait
cwtl
out
stos
jo
insb
scas
adc
mov
pop
fbstp
gs
pop
mov
push
lcall
ss
jp
jo
and
insl
imul
push
test
adc
mov
dec
pop
movsl
mov
pop
loopne
push
in
mov
xor
repz
xchg
mov
pop
out
in
push
jmp
cmp
out
inc
js
fistpl
test
sub
adc
inc
sahf
pop
and
pushf
lahf
sub
test
mov
pop
xchg
sbb
shrl
inc
xchg
jg
rol
ja
pop
orl
outsb
sahf
sub
leave
sub
enter
push
pop
inc
dec
in
mov
xor
out
cltd
std
test
aam
pop
dec
jle
stc
sti
jno
mov
sub
clc
scas
sbb
sbbb
arpl
push
cli
jg
test
out
outsb
cld
leave
xor
out
mov
jnp
jge
pop
mov
dec
ss
and
adc
das
mov
cld
cltd
inc
in
addl
stc
xor
xchg
dec
or
pusha
push
push
imul
cmp
jecxz
sub
dec
ss
mov
jle
xchg
add
and
cmpsb
loope
and
mov
fs
add
lods
mov
pop
push
inc
pop
push
rcr
nop
inc
push
dec
fldenv
pushf
dec
test
lahf
mov
imul
jle
adc
add
sbb
imul
outsb
mov
js
xor
jmp
jl
jmp
mov
daa
in
adcl
negb
data16
repz
fstpl
mov
xchg
jbe
push
push
add
add
jns
sbb
mov
add
xchg
icebp
dec
es
mov
fisttpll
push
ret
hlt
cmp
jbe
adc
mov
sbb
rolb
into
fdivl
add
xchg
mulb
sbb
xchg
add
dec
push
lds
incl
data16
test
jns
dec
push
cwtl
pop
pop
sbb
ret
icebp
mov
out
addb
mov
xchg
insl
mov
loope
sub
js
push
or
test
jnp
cltd
enter
aaa
or
xchg
jge
sub
push
ss
add
add
test
cmpl
andb
mov
fs
add
sub
mulb
xchg
mov
mov
dec
pushf
rclb
pop
push
add
pop
ja
into
mov
inc
sub
loop
mov
mov
mov
insb
test
into
cmp
nop
lcall
and
test
fs
mull
inc
add
pop
das
scas
pop
into
jae
jnp
mov
or
pop
xchg
xchg
icebp
fdivr
pop
jmp
data16
testb
xchg
inc
fs
es
js
pop
inc
test
insb
jo
add
outsb
out
sbb
pop
jge
cmp
inc
fs
push
and
repnz
mov
pop
pop
pushf
fmull
inc
and
xor
scas
rorb
mov
imul
es
mov
aaa
pop
jge
xchg
js
adc
pop
lods
scas
jmp
iret
cmpsb
push
and
jnp,pt
popa
or
inc
sub
ds
push
dec
arpl
push
push
adc
popf
cmp
mov
mov
add
es
xchg
push
cmp
push
mov
popa
and
rcr
rclb
fists
hlt
ljmp
sub
adc
cmp
sub
ret
pusha
out
pushf
jp
push
pop
sub
mov
cmp
pop
ficomps
cmp
int3
cmp
dec
por
jno
cmpsb
add
dec
cwtl
mov
cli
ficoms
addb
cs
jmp
xchg
sub
jg
xchg
out
iret
adc
frstor
push
mulb
frstor
fcomps
cmp
jp
mov
inc
lret
pop
dec
hlt
and
loopne
cmp
push
ret
add
rcl
dec
icebp
fmull
jle
push
scas
mov
test
xor
sahf
xor
and
inc
out
dec
adc
dec
and
mov
or
xlat
cmp
cmp
sar
in
aam
mov
je
mov
jecxz
test
lret
push
shrl
and
stos
ss
js
xor
jne
ja
enter
mov
test
shl
push
xor
int3
and
lcall
cli
inc
hlt
sub
mov
pop
dec
int
push
inc
shrl
lret
in
ficompl
sbb
push
scas
xor
icebp
in
or
aaa
mov
repnz
shl
mov
outsb
jno
in
bound
aam
js
mov
cmp
pop
lahf
out
lods
sahf
sahf
orb
mov
dec
jo
add
adc
sub
mov
fstpl
push
mov
movsb
inc
out
daa
test
mov
aas
lret
fldpi
xor
mov
and
dec
repnz
mov
or
or
movsl
loope
cmpsb
test
andb
bound
adc
repnz
in
jmp
xchg
xor
lods
inc
mov
fcmovu
ret
addr16
pop
cmpsl
add
into
jbe
sub
sbb
fildl
or
mov
jge
lret
push
pop
add
xor
or
mov
dec
popa
or
das
and
push
xor
cs
mov
sbb
xchg
mov
sbb
add
pop
aaa
shrl
insl
pop
into
addr16
xlat
sbb
movsl
jne
scas
lahf
stos
and
xor
sub
mov
movsb
dec
sbb
cmp
dec
and
pushf
sarb
pop
arpl
loop
jo
mov
dec
rorl
jle
loop
sti
or
pop
jecxz
not
mov
rorl
testb
pop
cmp
negb
jmp
xor
sub
and
mov
das
ret
add
mov
insl
cli
inc
sub
out
push
mov
lahf
test
xchg
pop
lea
cwtl
cltd
repnz
dec
mov
xor
out
xchg
and
adc
sub
sbb
sbb
movsl
sbb
inc
dec
sub
into
add
mov
dec
inc
repz
test
lret
jo
repz
imul
add
jo
push
leave
ds
mov
shll
stc
sbb
push
cmp
icebp
jnp
push
inc
pop
add
adc
mov
mov
push
test
gs
adc
mov
xor
cmp
and
lret
push
dec
jl
sub
xchg
aas
xor
dec
jmp
repz
je
shlb
lcall
push
aam
andl
and
xor
aad
jmp
shrl
push
and
lea
fsubrl
pop
sbb
ljmp
cld
pop
es
inc
push
xchg
cmc
pop
jae
hlt
mov
shl
push
sbb
pop
movsl
or
mov
ret
and
in
test
cmpsb
or
in
sub
int
jl
and
jmp
pop
xchg
in
ja
ret
or
into
data16
jo
ljmp
mov
repnz
push
xchg
cmp
lods
stos
cmp
insl
std
pop
insb
or
ja
push
pop
imul
sub
xchg
mov
xor
imul
cmp
shrl
ret
pop
icebp
and
push
jp
mov
in
mov
into
test
iret
gs
adcl
cmp
daa
ja
dec
lods
cmp
sbb
pop
and
out
dec
enter
sub
stc
inc
mov
push
test
imul
or
out
sarl
lea
js
cwtl
movsl
pusha
les
xchg
inc
mov
and
jno
addr16
sub
or
int
and
out
les
rclb
xor
push
pop
mov
inc
push
add
outsl
or
enter
lods
add
xor
xchg
repz
stc
pop
xchg
mov
add
pop
rcrl
add
mov
xor
jl
push
jle
mov
mov
push
sbbb
and
push
pop
addr16
mov
cmpsb
add
and
cmp
stc
and
movsb
sub
pop
adc
xor
cmp
cmp
stos
repnz
adc
aaa
pop
add
push
mov
cltd
repnz
sub
lret
mov
aad
mov
cmp
scas
daa
lret
mov
sbb
lret
loope
dec
xor
push
lods
dec
ror
mov
test
scas
and
pop
dec
sti
pop
dec
cmp
push
and
btc
mov
pushl
mov
test
mov
push
mov
cmc
dec
leave
fwait
aas
nop
or
lock
add
sub
syscall
mov
mov
xor
stos
xchg
sbb
push
aad
xor
clc
outsl
jl
sbb
lret
mov
pop
or
sti
imul
cld
pop
ds
cmp
add
bound
aas
pop
mov
pop
jno
jae
out
pusha
jae
cmp
mov
paddb
repnz
dec
ja
sub
add
pop
pop
inc
fcompl
and
inc
syscall
or
pop
add
xor
jp
mov
std
adc
inc
jnp
iret
pop
xchg
inc
cwtl
cmp
arpl
mov
sub
test
int
aas
mov
ret
push
push
insl
mov
jno
pop
mov
push
ret
aas
cltd
sub
pop
loope
add
mov
push
leave
push
lds
repz
sbb
xchg
mov
movsb
pop
mov
lods
addr16
out
sub
dec
ror
add
adc
sti
rol
faddl
lods
idivb
add
mov
fisttps
inc
inc
lods
xor
insb
jno
mov
iret
xor
cmp
add
xchg
iret
jnp
stos
stos
popa
in
sti
hlt
inc
je
jns
in
mov
js
cmp
or
inc
adc
loop
cmp
add
adc
jmp
jnp
adc
in
ss
fdivrs
add
and
int3
fnsave
stos
iret
cld
push
imul
out
call
mov
sub
gs
lea
test
test
fwait
loop
dec
outsl
mov
sub
fcompl
dec
lds
aam
addb
jns
pop
jns
jo
int
andl
pop
push
test
and
stos
stos
or
sub
sbb
xor
cs
and
and
ret
imul
gs
mov
loope
xor
mov
inc
jbe
dec
inc
add
and
jp
cli
sub
mov
mov
subl
jae
outsl
loope
dec
movsl
jo
jb
push
mov
fmull
repz
imul
push
fs
mov
jle
int
ret
ret
mov
pop
popf
inc
js
inc
scas
sbb
sbb
popf
inc
mov
xchg
adc
mov
inc
movsl
xchg
cmp
sbb
jle
adc
adc
stc
xchg
sti
dec
sub
icebp
and
adc
call
push
fstl
cmc
mov
loop
mov
mov
mov
cld
jp
push
pop
sbb
cmp
arpl
mov
xchg
ret
data16
push
inc
jge
iret
pop
in
adc
jo
cli
fidivl
ljmp
imul
leave
and
pop
test
or
and
test
sahf
inc
sub
test
clc
mov
push
stos
mov
popf
imul
xchg
sbb
and
aas
loop
popf
out
jne
cmpsb
dec
sarl
leave
lahf
cli
test
out
cmpsb
mulb
push
adc
dec
and
mov
sahf
jbe
pushf
and
sti
in
out
cwtl
xchg
test
cwtl
cmpl
cmp
push
in
jae
aas
les
xchg
dec
sbb
sbb
dec
mov
cmp
out
in
arpl
fstpl
mov
test
adc
xor
pop
xor
scas
pusha
in
mov
jmp
leave
es
inc
lods
or
sarl
mov
or
add
popf
cwtl
stc
xor
sbbl
push
sbb
dec
pop
scas
sub
les
call
in
push
icebp
sbb
cmp
ds
and
dec
sub
fadds
popa
fildll
xchg
sbb
repnz
and
aaa
scas
iret
mov
idivl
inc
fmul
dec
addb
cmpl
push
add
jge
pushl
sub
lods
push
push
test
popa
imul
lea
movsl
adc
idivl
sti
addr16
mov
sbb
mov
jnp
push
adc
hlt
push
push
pop
sbb
ret
mov
push
mov
scas
sub
cmp
and
pop
mov
fcomi
sub
movsl
lret
pushf
pushf
shll
jb
fbstp
and
jns
mov
dec
mov
sbb
shrl
test
cmp
lods
into
fwait
adc
les
jg
cltd
push
loope
adc
fnstcw
cmc
push
mov
loop
xchg
les
cli
sub
push
push
xchg
andb
sahf
jle
int
jb
and
aam
sub
add
lock
push
pop
sub
test
out
in
clc
lods
mov
mov
cmpsl
xchg
lret
add
or
or
cmp
pop
mov
cmp
jp
dec
push
and
loopne
mov
cmc
sbb
imul
xor
rclb
mul
cld
in
adc
mov
dec
mov
fwait
sbb
xchg
mov
aaa
cltd
cmp
xchg
shll
xlat
or
dec
shl
push
es
mov
mov
xor
push
stc
xchg
movsb
fimuls
or
adc
and
fsubrl
nopl
sbb
sbb
sahf
mov
pop
out
push
cli
mov
adc
aas
adc
mov
flds
adc
in
cld
out
mov
add
shrb
fisubl
jnp
je
out
mov
pop
in
jg
cmp
stos
sti
pop
jb
sbb
jmp
xorl
add
push
into
sbb
mov
mov
lret
mov
xchg
test
popf
mov
rcrl
push
mov
clc
out
pop
xlat
loopne
pop
dec
mov
lds
outsl
lret
or
das
push
inc
xor
xchg
ret
or
out
xchg
pop
mov
lahf
in
repz
sub
fmull
data16
jp
jle,pn
scas
pop
mov
test
fldcw
add
and
lret
cwtl
mov
sub
insl
pusha
loop
fistpl
dec
jnp
xor
pop
xchg
cmpsl
dec
mov
sub
fisttpll
mov
es
outsb
push
mov
mov
add
xchg
or
fidivs
jmp
xchg
in
fmul
mov
ret
dec
or
test
in
xor
pop
add
fst
pop
add
adc
sbb
rol
mov
fcomp
jmp
push
outsb
cmp
and
dec
pop
xor
or
scas
and
ds
mov
imul
and
lahf
ja
dec
jg
push
mov
xor
test
test
sahf
nop
in
mov
add
fs
and
lcall
sub
mov
pop
jmp
lods
sbb
and
test
test
cmp
cmp
or
mov
adc
xchg
cli
loop
jmp
cs
pop
mov
push
icebp
jl
push
in
sbb
aas
loope
mov
add
jp
cli
inc
dec
movsl
pop
add
ss
fs
mov
dec
cli
insl
pusha
xchg
cmp
adc
xor
fisttpl
dec
lea
test
or
mov
pop
orb
mov
pop
ds
xchg
jle
iret
in
add
xchg
sbb
mulb
jg
rcll
loop
mov
into
test
dec
or
cmp
mov
add
and
pop
test
vphaddwq
adc
lock
add
fnstsw
mov
jg
bnd
push
loopne
adc
nop
daa
pop
std
in
clc
mov
pop
je
nop/reserved
pop
loope
push
mov
push
mov
jle
adc
push
sbbb
out
pop
pop
mov
push
test
mov
insb
mov
scas
sub
loopne
dec
insl
pop
adc
inc
lock
mov
adc
or
xchg
inc
push
mov
clc
mov
test
jecxz
cmp
clc
sub
xor
pop
sbb
mov
out
mov
push
aaa
mov
popf
stos
xchg
sub
int
push
push
xchg
xchg
fidivl
ja
nop
xor
mov
pusha
leave
xchg
lock
rclb
popf
add
into
ss
movsl
mov
adc
imul
popa
mov
ret
lea
imul
mov
aaa
pushf
jb
push
addb
mov
imul
loope
mov
inc
les
push
mov
data16
repnz
sub
pop
test
mov
fsubrs
mov
jle
or
shll
xor
push
sbb
jo
jo
sbb
add
xor
mov
scas
xchg
mov
in
sti
in
cld
or
xchg
mov
fs
inc
decb
push
mov
and
and
mov
mov
pop
arpl
clc
pop
cwtl
jp
mov
xlat
sbb
call
movsl
xor
aad
jecxz
lret
sahf
pmaxsw
ret
daa
lds
sarb
lret
xchg
sarb
mov
mov
mov
mov
dec
lcall
mov
pushl
cmp
mov
cmp
or
xchg
mov
adc
in
jl
jb
inc
cmp
pusha
add
jb
bound
call
mov
and
es
jae
cld
xchg
imul
add
loopne
push
push
push
cli
pop
sub
xchg
or
leave
pusha
ljmp
out
outsl
sbb
inc
insl
aam
movsb
mov
pop
ret
push
aad
test
jb
imul
daa
dec
stc
inc
push
mov
fwait
nop
jb
add
scas
into
sbb
xchg
stc
xchg
add
xchg
mov
leave
sub
inc
jo
bound
int
push
lea
enter
out
in
xchg
cmp
cmpb
mov
pop
and
sbbb
or
aas
bound
or
pop
shlb
int
lret
push
loop
sub
adc
xor
into
sub
or
clc
nop
xchg
rclb
mov
lret
push
pop
xchg
lock
pop
mov
out
sub
mov
in
data16
and
daa
mov
imul
nop
cmpsb
mov
jne
popf
sub
mov
and
pop
cwtl
data16
leavew
sub
pop
add
sbb
outsl
add
push
lods
xchg
cmp
repnz
sub
lds
lret
sbb
jnp
in
xor
cmpb
sahf
out
rclb
or
arpl
neg
inc
push
mov
push
into
inc
cld
mov
xor
cmc
mov
leave
lret
mov
sub
fidivs
dec
ror
daa
pusha
stos
mull
push
inc
sbb
inc
xchg
push
cli
pusha
into
fistps
insl
push
jbe
lods
mov
enter
mov
jmp
mov
outsb
pop
pop
scas
or
push
roll
shrd
in
or
adc
sbb
mov
cmc
rolb
nop
mov
xchg
sub
push
inc
fnstenv
xchg
xlat
fstps
push
xor
inc
add
lret
adc
mov
jge
cmp
adc
dec
inc
dec
fldenv
aas
in
movsl
inc
xchg
je
cli
pop
pop
dec
fnstcw
cwtl
std
shlb
clc
xor
shll
sbb
xchg
push
cmp
loopne
mov
test
sub
cmp
push
pushf
sub
xchg
xlat
neg
insb
adc
mov
xchg
jns
adc
dec
dec
test
ficoms
jae
adc
out
lahf
das
stos
push
shll
sub
pop
fidivl
adc
dec
movsl
and
popa
aaa
stos
icebp
and
mulb
xor
adc
scas
sbb
lahf
hlt
mov
ret
int
pop
hlt
mov
mov
push
addr16
scas
dec
das
das
mov
mov
std
xchg
mov
xchg
stc
fistpll
mov
jnp
sti
xchg
inc
rolb
pop
add
sub
xor
loop
enter
or
mov
adc
xchg
mov
inc
mov
rcrb
inc
inc
sub
add
mov
jnp
pop
inc
shrb
int3
pop
push
adc
repz
loop
test
or
or
or
jmp
sub
or
aaa
push
cmp
mov
and
rolb
and
movsl
stos
mov
aad
test
pop
rcrb
pop
mov
js
mov
movsl
xor
sbb
or
outsl
jns
aam
lods
add
ja
out
test
outsl
sbb
sahf
es
push
xor
insl
divb
test
dec
xor
jno
adc
jo
push
pop
jno
scas
sub
sbb
dec
test
mov
xor
cmp
cmp
jl
sahf
cmp
xor
push
or
cmp
notb
icebp
cpuid
in
mov
fisubrl
add
pop
pop
ror
xchg
mov
sub
cs
scas
and
rorl
dec
fcmovbe
dec
jmp
pop
mov
push
cmp
cmp
pop
push
sbb
pop
mov
cld
and
add
mov
pop
xchg
ds
inc
sbb
adc
pop
lahf
inc
sub
or
shlb
faddl
in
and
loopne
imul
sbb
cmpsl
sbb
movsl
icebp
xor
pusha
xor
jecxz
mov
mov
push
mov
js
dec
aad
push
fwait
fs
lsl
jns
out
pop
xor
jge
mov
adc
mov
sub
sti
js
sbb
fimull
loopne
movsl
out
jp
xor
addr16
test
pop
inc
sub
add
fbld
xor
mov
push
mov
sbb
aas
mov
sub
or
repnz
xor
aam
into
jmp
faddl
in
mov
jle
cmc
and
js
inc
test
mov
xchg
adc
jbe
insl
jbe
dec
notb
dec
xchg
jecxz
mov
or
loope
mov
push
je
mov
xchg
mov
outsl
inc
xchg
outsl
adc
and
cli
xor
movups
or
add
cmp
mov
jne
pop
pushf
mov
jmp
test
stos
cmp
pop
jge
xorb
pusha
out
jecxz
popa
or
push
repnz
popa
jbe
movsl
scas
and
jle
mov
mov
lret
mov
aam
xchg
mov
dec
xchg
xchg
les
push
xchg
dec
inc
ja
cmp
lahf
daa
lcall
roll
lret
nop
inc
repnz
xchg
adc
ficomps
nop
mov
and
es
int3
sub
pusha
aaa
sub
rorb
std
push
jnp
in
cmp
pop
add
and
es
fisubrs
push
jge
mov
pop
add
mov
push
sti
jns
lods
jmp
jg
pop
cli
hlt
pop
sbb
addl
xchg
or
or
loop
jl
pop
adc
push
int3
pusha
std
insl
mov
pushf
gs
mov
fdiv
addl
in
mov
stos
sbb
gs
test
mov
pop
sar
dec
arpl
stos
adcb
repnz
imul
xor
and
push
push
cld
jg
jbe
ret
cmp
jnp
xor
idivl
push
aad
stos
mov
xor
lret
dec
jle
cs
jmp
dec
cmc
ret
fcoms
sbb
or
push
insl
adc
lret
jl
mov
mov
sub
addr16
dec
mov
jmp
pushf
fnsave
out
sub
popf
mov
orb
mov
in
sub
push
and
push
inc
stos
ljmp
repz
mov
ss
imul
xchg
add
cmp
and
xchg
mulb
divl
cmp
and
std
adc
xor
icebp
shll
adc
xor
mov
mov
or
mov
or
add
push
xor
and
lret
sub
dec
int
sub
ret
fildl
mov
into
cs
arpl
aam
inc
push
jg
push
pop
dec
jne
xor
scas
lock
negb
arpl
leave
in
mov
and
insb
push
shl
xlat
or
xchg
sarb
inc
adc
dec
mov
inc
sub
pop
ret
add
test
call
pop
mov
mov
xchg
outsl
test
dec
je
jae
fisubrs
stos
jg
mov
je
popf
and
gs
fadd
cmpsb
out
pop
mov
dec
int
clc
mov
sahf
adc
jae
mov
xchg
pop
bound
lret
add
ss
mov
adc
mov
mov
inc
mov
les
stc
sub
je
pop
out
mov
scas
mov
dec
add
movsl
movsb
je
jne
pop
decl
push
fmul
sub
lret
out
ret
jle
shlb
or
movsl
pop
icebp
in
jle
cld
inc
mov
out
xlat
popf
fildl
lcall
into
jmp
jecxz
aas
loope
xchg
lods
data16
push
jg
sbb
jp
mov
pop
adc
fcom
popf
sti
daa
or
push
mov
inc
xchg
push
lret
cltd
mov
fisubrs
aam
push
dec
ret
dec
jg
js
push
jmp
mov
add
xchg
and
xlat
stos
fisubrl
enter
mov
or
mov
pop
std
into
and
sbb
sub
sub
jl
shll
dec
popf
and
pop
movsb
popf
dec
imul
or
outsl
bound
loope
add
out
lods
sahf
loope
pop
les
jecxz
sbb
dec
cmp
call
loop
js
testl
push
fnstenv
outsl
push
and
es
cmc
xchg
into
mov
pop
cmp
ja
jecxz
cld
mov
xchg
fidivrs
inc
xchg
pop
jl
test
mov
into
mov
and
fdivrp
mov
into
inc
mov
or
cmpsb
pop
mov
sub
sbb
and
jge
push
icebp
mov
aad
sub
xor
fwait
dec
pop
mov
loopne
lea
push
ret
mov
add
mov
int3
arpl
aam
pmuludq
movsl
sti
pop
mov
mov
jl
addl
jle
mov
cmp
test
lods
enter
pop
sbb
es
xorl
shrb
cmpb
or
movsl
cmc
pushf
fisubl
mov
dec
pop
jecxz
ret
movl
dec
inc
int
into
mov
repnz
jbe
add
rorl
mov
ret
cmp
sysenter
test
xor
xchg
pop
jbe
xor
and
mov
push
mov
add
test
idiv
test
ja
pop
jbe
pop
cmp
repnz
incl
adc
daa
clc
push
add
fwait
addr16
adcb
xchg
aad
push
xchg
jae
mov
cmp
testl
xchg
stc
movsb
fs
pop
icebp
pop
adc
out
je
addb
adc
dec
out
xor
mov
int
sbb
test
dec
dec
ss
test
mov
xlat
jecxz
out
je
xchg
into
outsl
jns
or
inc
xor
dec
test
jecxz
push
jmp
push
and
aam
push
mov
pop
xchg
sahf
push
push
mov
je,pn
les
xchg
push
mov
and
in
dec
loop
rcll
or
fld
ficoml
push
sbb
popf
repz
lods
xchg
cmc
arpl
add
and
cmp
call
pop
es
lds
add
ret
pushl
sub
in
sahf
jno
mov
or
ret
es
jno
jge
mov
icebp
das
mov
add
movsb
popf
ficoml
mov
icebp
mov
cmpsb
jecxz
int3
push
out
or
pop
std
or
dec
in
clc
pop
or
inc
mov
test
leave
pusha
incb
xor
pop
adc
jg
and
xor
cltd
jns
int3
lds
icebp
fmuls
jecxz
ret
pop
sbb
repnz
push
dec
mov
dec
xchg
cmp
in
dec
push
sbb
mov
inc
pusha
or
mov
scas
aaa
test
ret
cmpsl
out
roll
stc
xchg
mov
or
mov
aas
xchg
mov
mov
ret
dec
call
aad
vpsubsb
xor
in
mov
cmpsl
push
clc
lods
nop
mov
imul
cltd
push
and
mov
sbb
sbb
loopne
outsl
cli
mov
cmp
push
cmpsl
mov
xor
les
xchg
mov
add
xor
or
out
mov
xor
mov
arpl
xchg
test
and
lods
mov
shrl
into
push
loop
fcmove
mov
xor
imul
jge
xchg
dec
inc
rol
mov
hlt
in
lcall
mov
pop
jmp
loop
decb
xchg
cmp
xor
gs
das
xchg
repnz
popf
dec
insl
stos
je
mov
je
or
inc
lret
icebp
loopne
in
mov
in
jge
mov
fnstcw
in
add
mov
insb
add
rorb
adc
add
xor
inc
jp
es
jbe
popa
mov
and
test
ljmp
imul
out
cmpsl
push
shll
or
rorl
lock
or
xchg
pusha
xchg
xor
aaa
cmp
or
inc
iret
xchg
movsb
mov
push
dec
dec
jo
call
mov
mov
dec
pop
lea
mov
ret
adc
out
mov
push
xlat
fs
jno
sub
xor
adc
test
roll
fisubrs
nopl
pop
inc
cmc
rorb
mov
dec
push
ds
adc
aaa
loopne
stc
jle
xchg
sahf
sbb
outsb
ja
cmc
insl
or
push
jmp
in
cmc
pusha
push
inc
push
mov
out
std
in
jno
pop
fcmovne
pop
push
inc
sar
fadd
outsl
fdivrs
mov
movsl
out
lods
call
divb
popf
jb
movsb
mov
sbb
inc
int3
add
lahf
push
int
in
push
fildll
inc
add
popf
scas
orb
xor
test
filds
cmp
sti
push
push
jg
jp
mov
inc
pop
xchg
imul
fcompl
inc
xor
lcall
dec
scas
push
push
repnz
aas
xorb
inc
adc
jo
aad
sub
fisttpl
ret
dec
mov
ret
lahf
mov
imul
stc
stc
mov
lret
int3
xor
repnz
jp
mov
sarl
adc
add
pop
sbb
push
inc
push
test
lock
sub
mov
jl
cmp
jp
int3
add
test
test
add
jbe
dec
cwtl
sub
dec
pop
push
or
enter
iret
lret
mov
sub
and
push
inc
ljmp
cmp
sub
pop
add
fcmovnbe
jg
daa
lods
adc
sti
sbb
orb
and
xchg
repz
inc
decb
mov
xor
mov
and
aaa
sub
hlt
les
mul
scas
hlt
fidivs
mov
rorl
or
subb
std
mov
arpl
xchg
shr
hlt
shlb
testl
jge
loopne
pop
ja
sub
adc
movsb
jnp
or
stos
mov
adc
data16
push
dec
jp
and
push
mov
sub
xchg
stos
stos
sub
pop
in
xchg
loope
cmpsl
nop
insl
ljmp
lds
andb
rcrl
popl
or
push
imul
in
add
or
jp
cwtl
xor
out
lea
loop,pt
mov
loop
hlt
push
push
push
call
mov
inc
mov
test
cld
adc
inc
cmp
add
dec
mov
sbb
cmpsb
imul
sbb
add
xchg
out
lods
addr16
sub
jg
cmp
mov
arpl
out
fcmove
mov
or
cwtl
movsb
cmp
sti
sar
mov
lock
xchg
mov
cmp
mov
fcmovnb
push
andl
push
add
inc
mov
xor
push
mov
or
lods
ret
mov
mov
add
dec
test
mov
aaa
inc
inc
mov
das
mov
clc
xor
rcl
test
imul
popf
js
repz
push
jmp
in
jle
jg
jns
xchg
sahf
mov
loopne
adc
mov
outsl
bound
push
add
adc
fnstsw
out
lods
mov
pop
jne
rol
xor
daa
cmp
cmp
xor
sub
test
invd
loop
mov
add
fs
lods
out
jg
and
adc
int3
movq
sbb
cmp
cmp
or
or
and
xor
adc
gs
call
pusha
sbb
mov
popf
push
fdivl
sub
dec
leave
mov
push
mov
jp
dec
pusha
je
pop
test
leave
arpl
mov
imul
rorb
in
xchg
call
dec
lret
ss
sti
mov
xchg
negb
subb
xor
loop
pop
mov
xchg
cmpsb
inc
sub
cmp
add
aad
cmp
pop
jo
inc
sub
add
pop
and
dec
mov
in
insb
sub
cs
push
pop
and
xor
sbb
fistpll
cmp
and
inc
mov
test
push
test
mov
xchg
pop
dec
lea
outsb
mov
mov
and
xchg
mov
pop
dec
divb
jge
filds
push
mov
addr16
inc
jbe
jmp
jns,pn
scas
push
addr16
dec
and
popl
and
adc
adc
pop
icebp
mov
sbb
and
push
dec
stc
orl
cmp
mov
lds
mov
loope
pop
jmp
aaa
pop
sbb
sub
mov
pop
lods
push
jno
cmpsl
loope
loopne
lods
adc
mov
insb
mov
in
xor
pop
inc
sub
in
add
mov
stc
movl
mov
or
inc
std
jge
cli
loop
enter
jns
stc
sbb
fcompl
loopne
xchg
addr16
frstor
mov
jp
imulb
scas
mov
outsl
mov
dec
ja
ror
ja
push
das
xchg
imul
scas
repz
push
add
daa
mov
xchg
mov
add
in
mov
xchg
and
inc
push
sbb
movl
out
fldenv
lcall
inc
xchg
push
dec
in
lret
test
xchg
mov
and
lods
in
add
xlat
dec
mov
call
xchg
inc
xor
cmovge
xchg
ja
clc
mov
adc
pcmpeqw
lret
push
dec
popa
and
push
aam
pop
mov
jno
int
gs
cmpsl
lods
shlb
insb
and
cmc
out
xchg
rorb
imul
xor
lods
dec
lea
stc
mov
shlb
add
dec
inc
popa
arpl
fwait
shl
jl
adc
nop
push
xchg
cwtl
fnsave
fistl
sbb
dec
in
cs
adc
cltd
aas
jnp
push
in
cltd
sarb
cwtl
add
arpl
pop
ds
xchg
icebp
sbb
or
je
mov
push
cwtl
sbb
in
or
dec
lcall
hlt
roll
ficompl
in
and
adc
ret
inc
add
mov
aas
pop
inc
jmp
rorb
repnz
pop
sbb
add
dec
xor
movsl
jge
mov
sarl
imul
sar
xchg
pop
inc
inc
mov
push
nop
cmc
push
push
jno
cmp
insb
cmp
dec
ret
arpl
cmpsb
xchg
movsl
mov
sub
cmp
or
push
rclb
cmpsl
lock
hlt
pop
add
popf
xchg
pop
aaa
leave
adc
xchg
xlat
insl
adcb
in
inc
in
hlt
cmpsb
xor
rorb
insb
cmp
shlb
adc
into
jl
cmpsb
repnz
jbe
bound
rcrl
ds
pop
jbe
add
xor
fld
push
daa
mov
popf
jp
shll
fstpt
jne
and
mov
pop
sub
js
bound
inc
or
leave
inc
int
push
mov
xchg
push
sub
repz
sbb
mov
mov
mov
jle
mov
ljmp
push
jl
test
adc
cmc
pop
fs
xor
mov
pushf
dec
repz
xorb
mov
iret
mov
dec
rorl
cmc
dec
cmp
jmp
sbb
adc
xorl
repnz
xchg
jp
xor
cli
inc
scas
xor
dec
enter
leave
sub
inc
popf
adc
call
imul
in
mov
dec
push
jnp,pn
ret
push
lock
imul
xlat
popa
mov
lea
push
mov
ljmp
xor
leave
cmp
enter
lret
mov
mov
fsubs
icebp
out
rcll
xor
xchg
outsb
rol
or
je
in
pushf
pusha
ljmp
test
addl
mov
pop
dec
outsb
ds
or
cwtl
cld
dec
lock
cmp
arpl
je
add
inc
mov
das
pop
mov
sub
lods
les
cmp
push
jle
cmp
cmc
xor
jnp
daa
inc
xor
push
repz
cld
xor
mov
imul
cmp
out
jo
or
int
arpl
mov
decb
mov
xchg
sub
push
popa
data16
adc
or
pop
xchg
hlt
mov
mov
pop
les
jns
fnstenv
adc
ret
mov
out
push
scas
ds
in
repnz
flds
sbb
test
xor
lahf
test
fadd
loopne
xchg
aaa
int
pop
and
ja
push
test
repz
lea
pop
fcmovb
lret
shrl
mov
aad
mov
mov
fmull
into
inc
push
cmp
ja
inc
mov
mov
xchg
ljmp
das
xchg
cmp
stos
push
push
adc
mov
xchg
xchg
sub
lods
jg
outsb
loop
outsb
push
jmp
mov
adc
sbb
std
cmc
sub
ljmp
cwtl
or
popa
stos
add
xchg
mov
adc
mov
xor
and
lods
jl
lods
mov
int
ret
out
out
lcall
movsl
and
lea
insl
dec
push
notb
mov
sbb
xchg
mov
pop
es
aas
or
inc
daa
push
and
addb
dec
jb
mov
shlb
xor
stos
mov
adc
int3
outsb
xor
aas
mov
mov
adc
icebp
add
jns
xchg
leave
mov
gs
pop
inc
stos
ja
movsl
nop
sub
and
sbb
jecxz
push
popf
lahf
dec
jnp
test
xor
cmp
or
int
mov
mov
cmp
in
mov
fistpll
jbe
stc
lcall
jae
popf
andl
stc
insb
jae
je
cwtl
movsb
test
or
pop
jge
and
clc
movsb
in
xchg
jmp
inc
mov
arpl
xor
add
rcll
fs
stc
repnz
jmp
pop
bound
pop
sub
xor
das
push
in
xchg
adc
lahf
sub
loop
jae
cmp
pop
pop
jnp
jae
pop
dec
mov
add
mov
and
mov
mov
jo
mov
arpl
pop
mov
mov
mov
ss
sbb
outsl
pop
mov
xor
add
pushf
xchg
iret
ljmp
fcmovu
mov
jnp
sbb
cmpsl
divl
sarb
mov
add
and
pop
sbb
sub
iret
stos
test
insb
cli
data16
fnsave
aas
cmc
cwtl
or
or
sub
out
lods
cwtl
pxor
sarb
hlt
and
mov
mov
divl
jp
leave
out
stc
daa
dec
adc
add
push
sub
das
scas
cmp
fimull
scas
ret
lret
jo
cmp
leave
or
inc
loop
imul
aad
mov
inc
gs
jnp
jle
dec
pushf
idiv
xchg
jbe
add
xchg
cmp
in
add
std
jecxz
arpl
loope
mov
fiaddl
jl
int3
test
jg
adc
lea
jb
in
daa
scas
jns
shll
jp
mov
arpl
adc
sub
loop
mov
sbb
pop
adc
icebp
insl
jns
sub
cltd
fadds
adc
jae
mov
pushf
lret
pop
aaa
arpl
movsb
mov
fiaddl
insl
pop
inc
xor
in
data16
mov
mov
cmp
shlb
insl
sahf
jae
fisttpll
fwait
shr
sub
push
add
movsb
jl
or
dec
out
nop
data16
sti
mov
lock
outsl
jo
ds
push
push
adc
pop
loop
hlt
inc
lds
out
xchg
mov
fwait
sub
pop
fldl
pushf
and
insl
lcall
xchg
push
or
push
rol
cmc
jae
nop
das
iret
mov
lahf
add
mov
xchg
adc
jg
sub
pop
xor
into
lret
inc
push
insl
adc
cli
adcb
push
loopne
ja
mov
mov
sub
popf
xor
or
pop
fadds
or
imul
int3
mov
mov
inc
scas
lods
rorb
enter
push
push
arpl
or
ret
dec
es
pop
inc
pop
mov
xchg
push
push
cmp
lods
ret
jno
lahf
and
lret
imul
push
cmp
inc
push
out
stc
int3
xchg
cmp
adc
in
mov
loopne
pop
xchg
mov
and
repz
hlt
or
adc
bnd
mov
rol
out
mov
jge
in
lds
pop
mov
xchg
jecxz
lock
je
call
jnp
loop
jmp
inc
xchg
test
cmpsl
mov
fbld
or
mov
mov
mov
repnz
cmp
and
rorl
popf
xchg
adc
xchg
push
mov
mov
es
mov
aad
mov
lret
jns
pop
cmp
aad
js
loope
jbe
das
fsubl
push
inc
add
adc
jo
imul
out
jnp
jnp
test
mov
movsl
jecxz
dec
addr16
popa
cmp
icebp
cld
mov
xor
cmc
add
mov
pop
js
push
je
jmp
sti
xchg
cmpsl
or
lds
lret
insb
sub
addr16
es
pop
push
stos
aaa
jmp
in
aam
mov
adc
mov
enter
dec
xorb
outsb
mov
pop
scas
pop
addr16
push
xor
pusha
in
lret
in
sub
shr
inc
push
mov
sarb
rorb
or
mov
jl
bnd
in
lret
or
decl
push
add
inc
jecxz
inc
push
mov
shlb
jecxz
popa
mov
fisubl
mov
movsb
out
jno
lcall
cli
fnstsw
push
std
mov
loope
into
pushf
fisubs
out
mov
int
jbe
sub
xor
mov
add
cmp
dec
adc
cmpsl
in
cld
add
test
cmpw
inc
aam
xor
pop
mov
jb
xchg
out
jnp
loop
dec
cli
fwait
adc
int
add
outsl
push
lcall
cmpsb
mov
xchg
mov
insb
fmul
xchg
ds
adc
mov
push
cmp
ja
pop
cltd
pop
loope
bound
aad
and
pop
cmpb
mov
mov
movsb
roll
ljmp
pop
dec
gs
fwait
sti
cli
push
aam
dec
out
movsl
je
mov
mov
imul
sahf
stc
cmovns
cmpsb
add
out
dec
std
add
stc
mov
stos
xor
pop
jo
dec
shlb
mov
and
cmp
mov
sbb
mov
pushf
push
lahf
inc
loopne
js
mov
mov
in
mov
push
and
test
xchg
outsb
mov
jb
and
out
xor
push
mov
shlb
xor
lcall
xor
add
mov
out
mov
ret
xor
push
mov
jae
insl
cmp
xchg
xchg
adc
loopne
dec
sbb
lret
mov
in
jmp
xor
decb
xchg
xor
int3
sub
hlt
mov
mov
and
ljmp
cmp
cltd
gs
jecxz
movsb
lret
mov
pop
sahf
sub
jo
out
pop
leave
jne
pop
xchg
les
xlat
into
das
push
cmc
push
imul
cltd
and
fs
sub
in
in
imull
mov
rcll
das
lret
imul
cwtd
xchg
jo
adc
testb
adc
dec
repz
loop
lahf
cmp
push
push
aas
int3
pop
pop
dec
les
jo
lret
std
mov
and
mov
lgdtl
xchg
leave
orl
xchg
dec
pop
sbb
push
arpl
std
loope
xchg
lar
and
inc
das
push
cmp
ljmp
or
je
je
ret
aad
add
push
cmp
pop
insb
negl
lds
lcall
outsb
aam
sahf
push
mov
loop
jl
push
dec
mov
mov
lea
pop
pop
jne
adc
mov
and
mov
test
sbb
pushf
fs
repz
dec
std
imul
push
sbb
sbb
scas
fisttpl
mov
sbb
int3
inc
add
cmc
xor
test
add
lret
jle
push
popa
daa
push
mov
push
mov
es
fimull
lods
pop
xchg
mov
lret
adc
pop
das
or
jae
jne
bound
mov
repnz
cmp
popf
pop
add
shl
mov
mov
stc
into
or
fistpl
stc
mov
insl
push
lock
or
in
sti
xor
lea
scas
dec
out
inc
stc
lret
stos
mov
mov
mov
pop
scas
pushf
aam
arpl
jg
xchg
inc
aaa
lahf
je
andl
lret
inc
inc
jle
mov
add
notb
pop
jns
and
mov
jne
shll
inc
popa
dec
shr
pop
popf
mov
mov
dec
cli
inc
push
cmp
pusha
lds
or
andl
popf
lret
pop
xchg
jp
insl
and
pop
or
mov
or
test
cmp
jmp
xor
lds
jb
ret
cltd
adc
adc
jecxz
fsub
bound
insb
sub
andb
inc
popf
dec
adc
mov
push
or
mov
stc
mov
xor
or
mov
sbb
jg
pop
adc
lock
adc
add
es
mov
push
xchg
pushf
lods
dec
inc
fmuls
andb
dec
mov
dec
xor
pop
adc
xchg
adcb
or
or
xchg
sbb
movsl
clc
cmpsb
shll
aaa
push
test
dec
repnz
cmp
sti
xchg
sbb
mov
fs
pusha
in
pop
push
leave
inc
out
fisttps
jns
test
cmp
mov
add
negl
push
fsubrs
scas
icebp
test
dec
orl
call
lea
repnz
popf
add
rcrl
aad
std
cmpsb
insl
out
sbb
sub
jae
adc
mov
pop
imul
cmp
int3
ret
scas
mov
add
jno
out
push
scas
cwtl
dec
or
or
pop
jo
dec
push
out
rcl
cmp
insb
popf
inc
jns
pop
sahf
jge
cli
sub
adc
adc
out
aad
in
or
push
outsb
ljmp
cltd
insl
test
adc
jnp
loopne
cmp
subb
dec
stos
adc
ja
popf
scas
in
orl
call
jne
icebp
jmp
or
xchg
cmp
inc
add
mov
xchg
leave
and
mov
adc
jae
jp
movsb
dec
or
repz
jmp
std
jge
in
mov
les
add
into
mov
pop
hlt
mov
adc
loop
mov
pcmpeqd
adc
outsb
jecxz
xchg
movsl
mov
sub
sbb
xor
aam
ljmp
jo
dec
das
rcr
push
xlat
or
je
mov
mov
jp
push
xor
mov
les
icebp
ret
mov
and
dec
out
ret
cmp
sub
jb
enter
fisubl
sarl
xor
out
add
stos
jo
mov
xor
cmpsl
adc
into
xchg
mov
sbb
or
imulb
rdmsr
out
imul
enter
aad
fldpi
mov
rolb
mov
jo
aad
imul
or
js
cld
jo
dec
stos
sub
or
ja
in
cmc
inc
loope
cmpsl
and
mov
mov
stos
in
dec
scas
add
dec
sub
dec
enter
je
sub
jbe
pop
sbb
out
xor
jbe
sbb
or
dec
subl
or
daa
mov
inc
stos
cmpsl
arpl
xchg
in
push
and
leave
aaa
je
sbb
mov
cs
inc
jl
scas
fisttps
into
dec
jecxz
movsb
xor
js
cld
mov
inc
xlat
cmpl
mov
pop
inc
mov
cs
lahf
push
cwtl
and
jmp
push
mov
scas
mov
idivl
cmp
or
fstpt
shrb
jge
rorb
push
movsb
and
or
cmpsb
jns
add
test
in
js
in
out
and
sbb
incl
outsl
jle
add
xor
jnp
dec
mov
push
mov
test
mov
jecxz
mov
sbb
xchg
jae
xchg
cmp
sub
ret
js
jp
mov
adc
sahf
jle
inc
adc
xchg
sub
pop
sbb
aad
inc
inc
xlat
jecxz
adc
inc
orb
push
pop
fisttpl
popf
inc
jns
outsb
mov
movsl
stos
xchg
in
rorl
lret
addl
call
flds
fnstsw
jge
cmpsl
mov
imul
jmp
add
ret
push
cld
add
in
rclb
mov
ss
aas
push
or
and
jo
add
sbb
or
addb
xchg
mov
popf
jg
mov
sub
jp
movsl
dec
sti
pop
ss
aas
test
and
or
mov
stos
shlb
in
xor
hlt
jg
xor
and
mov
sbb
push
mov
sahf
test
stos
out
push
mov
repnz
cmp
or
pop
mov
pushl
mov
dec
jmp
ss
test
lods
jmp
sub
cwtl
or
xor
cmc
adc
adc
int
ret
add
bound
call
sub
pop
sub
fs
imull
xor
sub
sahf
sub
ja
dec
sarb
mov
int3
mulb
add
fistpll
loop
rolb
push
test
mov
and
in
int
dec
nop
lds
xchg
iret
adc
jns
mov
incb
inc
pop
scas
jmp
ror
inc
xor
jge
adc
ds
dec
fucomp
cmpb
lret
out
repnz
cmpsl
dec
pop
jp
inc
xchg
cmp
lock
fldenv
nop
or
mov
jne
mov
cli
lret
test
dec
dec
out
cmp
xchg
out
pop
divl
test
iret
ficoms
pop
stos
sar
mov
test
adc
add
in
shll
xorl
shr
cwtl
addr16
adc
out
das
dec
sub
cmp
pop
loop
lds
xchg
ljmp
mov
insb
ja
and
or
scas
mov
out
outsb
xchg
mov
lcall
xchg
nop
pop
inc
sahf
shlb
push
ret
movsb
fcoms
xchg
rol
inc
fnstenv
popa
lret
out
ds
xchg
push
arpl
shrb
jle
jbe
push
add
jbe
fidivs
mov
cltd
mov
add
stc
pushf
mov
adc
lret
in
hlt
jnp
pop
pusha
inc
lods
mov
adc
xor
cmp
mov
movsb
mov
mov
aaa
cmp
and
leave
xor
leave
bound
dec
js
clc
xchg
movsb
icebp
sub
jb
inc
push
dec
push
mov
xchg
movsb
sub
jno
fcmovne
loopne
int
mov
fimull
mov
shlb
mov
incb
sbb
or
mov
ds
jmp
daa
out
aad
jecxz
aam
pop
add
sub
push
add
rclb
es
mov
jbe
popf
add
call
mov
js
pop
ficoms
inc
mov
pop
pop
jge
outsb
addr16
mov
fcmovne
or
mov
loop
sbb
jns
adc
pop
int
lret
movsl
pushf
es
je
push
push
cmpsb
mov
rcrb
jle
adc
xchg
bound
int3
arpl
xchg
mov
and
fwait
clc
add
inc
cmp
out
mov
loop
in
mov
in
call
stos
jb
in
xor
lret
outsl
test
and
loop
sub
and
lea
in
movsl
push
leave
adcl
cmc
dec
mov
dec
fbld
cmp
push
sbb
cmpsb
sarb
and
mov
mov
jne
dec
sub
mov
jecxz
shr
dec
imul
mov
inc
pusha
loope
xor
insb
mov
sbb
adc
mov
mov
cmp
or
fcoml
jmp
mov
cltd
insl
xchg
cmp
add
xchg
sub
lcall
or
mov
test
mov
divb
icebp
sti
push
movsb
sbb
cmp
jo
lahf
imul
xchg
in
cltd
cld
add
out
pop
insb
fwait
lcall
cmc
and
das
jg
sbb
or
es
or
mov
xor
iret
movsb
push
mov
push
mov
mov
test
es
pop
inc
push
je
mov
cmp
mov
test
ja
fbld
mov
enter
out
sahf
cld
loop
pop
xchg
mov
mov
or
add
xor
test
sbb
jle
lret
pop
aam
shl
add
mov
or
notl
pop
mov
pop
mov
jns
aaa
arpl
sub
loope
sbb
scas
sti
in
ds
push
insb
ret
lahf
cmpsl
nop
sub
testb
push
imul
popaw
hlt
xor
jp
inc
mov
sbb
pop
hlt
push
gs
sbb
arpl
rolb
sbb
movsl
or
mov
test
jmp
xor
jle
packssdw
push
add
test
mov
inc
lds
adc
sbb
fs
push
xchg
xor
inc
and
loope
pop
xchg
xchg
ret
cmp
mov
mov
jg
adc
jle
mov
adc
fisttps
xchg
scas
pop
pop
and
push
mov
or
ljmp
sbb
inc
inc
fs
push
and
cmp
stos
mov
mov
test
or
scas
xor
shll
lods
aad
inc
dec
jbe
iret
cmp
push
je
gs
cltd
clc
pop
jp
xchg
xlat
fldln2
sbb
inc
cmpsb
rol
insb
mov
and
add
jle
out
xchg
mov
xor
nop
pusha
jl
stos
imul
popa
mov
pop
dec
popa
lahf
cmpsl
scas
iret
inc
gs
jmp
repz
sbb
fmull
scas
loop
push
jmp
adc
xchg
das
jne
xor
push
into
cld
inc
mull
scas
xchg
je
popf
int
adc
pop
fsave
movsb
outsb
pop
cli
out
and
pop
mov
shlb
jns
push
subb
xchg
inc
leave
cmp
cltd
cmp
call
insl
xor
insb
pop
mov
iret
lds
loop
jno
add
cmp
jnp
scas
in
stos
mov
cmp
xor
hlt
adc
xchg
sub
sbb
outsl
pop
mov
ja
into
enter
jns
dec
sub
lret
sub
or
and
push
adc
jg
mov
add
inc
sbb
mov
xchg
es
fisubs
subb
xor
mov
mov
jmp
jg
xchg
fnstcw
fucomip
aaa
aam
movsb
push
mov
neg
sti
jecxz
push
xor
ret
and
jae
jecxz
push
test
int3
dec
pop
xchg
enter
popa
pop
push
cmp
pusha
repz
mov
mov
js
pusha
cmp
iret
or
mov
in
pop
sbb
adc
scas
mov
push
push
jno
pop
aad
cmc
gs
insl
arpl
hlt
mov
inc
inc
fcomps
pop
mov
aam
mov
into
pop
cmp
cwtd
and
pop
mov
xchg
ret
insl
testl
mov
jb
adc
xor
in
xor
nop
and
fwait
dec
push
xor
jmp
mov
mov
mov
in
stos
add
in
cwtl
inc
xor
shld
sbb
jno
mov
ljmp
jecxz
ret
and
cmp
stos
out
int
cwtl
add
jp
add
add
fs
fidivl
repz
sub
dec
fwait
adc
lcall
movsl
cli
push
xchg
and
adc
and
adc
or
out
xlat
pop
ds
sbb
lods
xchg
test
sub
pop
jbe
mov
push
aad
adc
imul
leave
sbb
pop
inc
jle
or
dec
test
mov
mov
mov
out
jnp
and
xchg
pop
dec
imul
dec
fdivr
pop
push
fsubl
mov
and
iret
inc
setnp
test
jbe
dec
call
push
jnp
out
pop
ret
sahf
cwtl
and
lahf
mov
push
mov
lock
in
sar
mov
dec
pcmpgtb
out
adcb
insb
fidivs
loope
ljmp
adc
sbbb
lahf
loopne
xchg
leave
cmp
sti
test
or
clc
test
adc
aam
dec
xchg
nop
mov
pop
shll
fadds
outsl
stos
dec
cmp
sub
xchg
into
jbe
cmp
inc
sbb
dec
shrb
mov
rolb
add
movsb
push
xchg
lock
mov
or
xor
lods
aaa
and
inc
mov
and
cs
cmp
sbbb
add
fcompl
jg
push
es
xor
mov
stos
loopne
aam
jg
lcall
xchg
sub
call
in
inc
push
jmp
popf
test
add
aam
mov
test
sti
or
xchg
imul
push
sub
loopne
sahf
push
imul
imul
push
test
lcall
cmp
cmp
or
aad
jl
faddp
notb
push
daa
nop
and
push
lcall
shll
shl
cli
mov
push
imull
in
adc
aaa
mov
xchg
sbb
jns
hlt
cmpb
sub
jecxz
call
outsb
xor
es
xchg
pop
addr16
sbb
sub
fmuls
arpl
icebp
mov
xlat
sti
cmp
dec
aas
ljmp
in
pop
inc
out
cmp
dec
and
ds
mov
and
orl
pop
cld
inc
dec
sti
or
inc
hlt
stos
into
inc
sti
add
jno
mov
loop
test
xor
orb
mov
or
push
xor
out
neg
pop
push
jmp
dec
dec
mov
in
xor
pop
mov
loope
repz
push
xchg
std
enter
mov
xchg
mov
lahf
orl
ret
jns
dec
ret
inc
dec
addr16
sbb
dec
dec
mov
adcl
lret
mov
push
rol
lcall
mov
dec
sbb
push
mov
inc
scas
cwtl
cli
in
js
or
inc
xchg
lret
and
dec
insb
xor
dec
xchg
push
mov
fistl
rcrb
pop
cmpsb
adc
jmp
jne
lds
cld
lahf
xchg
push
mov
sub
mov
sub
loopne
xchg
je
adc
fsts
dec
cmpsb
js
mov
insl
data16
shl
cs
pusha
fisubrs
addl
enter
icebp
cmp
jmp
or
mov
ficoml
fdivrs
and
xchg
addr16
cmp
dec
int3
stos
sbb
hlt
mov
fnstcw
sbb
fwait
std
mov
xchg
and
cmpl
es
loop
lds
jae
sub
mov
std
daa
push
scas
lds
mov
lahf
sbbb
int3
mov
test
mov
jne
testb
jmp
or
fistps
test
inc
lret
pop
aad
push
sbb
in
pop
or
rorl
icebp
out
pushf
idivl
in
xor
cli
bound
into
pop
adc
push
jae
es
dec
lods
sbb
cmc
es
repnz
lods
jo
mov
sub
cmpsl
push
icebp
and
arpl
inc
add
adc
pop
sbb
ficomps
test
dec
jae
lods
jmp
push
xchg
or
sub
dec
cmp
or
pop
mov
mov
inc
cltd
jl
pop
repz
clc
fidivl
cli
fisubl
mov
or
lea
xchg
cmp
lcall
jne
mov
mov
int3
jl
or
sahf
mov
dec
or
cmp
outsl
xorl
inc
add
sti
xor
lret
ds
cmp
add
cmpsl
adc
sub
pop
sbb
xor
dec
jbe
cmp
mov
repnz
jl
sbb
lds
push
or
adc
push
add
fsts
sbb
jmp
arpl
fadds
fcomps
dec
push
and
lcall
movsb
jge
outsl
scas
push
mov
filds
sbb
or
fs
add
xchg
cs
mov
cld
push
mov
inc
mov
and
aad
dec
sbb
sub
adc
mov
or
xor
pop
pop
lds
cmp
sbb
icebp
testb
cmpsb
std
push
aaa
call
lds
or
clc
inc
xchg
in
mul
inc
in
sub
cltd
add
gs
mov
mov
xor
stos
stos
and
inc
icebp
mov
dec
xchg
jae
or
fwait
jno
sub
es
frstpm(287
adc
xor
ja
repz
shlb
ljmp
inc
pop
das
dec
add
pop
xchg
push
push
and
lcall
jl
fiadds
xchg
add
stc
xor
cwtl
in
lcall
adc
pop
lods
test
scas
repz
sub
mov
enter
imull
pusha
mov
push
sbb
mov
dec
mov
loope
rcl
imul
xor
scas
lcall
in
xor
iret
add
lods
jge
nop
in
lret
es
sub
cmp
adc
add
ja
cs
mov
jnp
sti
sbbl
insl
mov
cmpsl
xchg
pop
sbb
jae
mov
rcr
xor
stos
xchg
call
sti
inc
mov
sbb
sub
mov
sbb
in
mov
adc
mov
pop
mov
sbb
lahf
in
loop
push
lods
in
sbb
fdivrs
dec
bound
int3
ret
push
and
xchg
and
out
mov
fdivp
mov
cmpb
inc
mov
stos
sarb
xchg
lods
push
arpl
ret
lock
mov
pop
fsubrl
cmp
ljmp
aaa
outsb
xchg
addb
and
jp
add
xor
sbb
lahf
daa
jae
inc
cmp
stos
movb
inc
cs
sub
jo
rcrl
add
dec
or
loop
insb
pop
in
idivl
xor
inc
xor
pop
push
jo
inc
adc
jns
mov
cmc
and
xchg
xchg
push
lahf
int3
imul
add
mov
lret
mov
movsb
cmp
cwtd
fcoms
cmc
mov
push
sbb
stc
test
jae
or
movsl
ljmp
sub
leave
mov
push
daa
push
add
es
xchg
add
cwtl
push
scas
and
or
cmp
stos
test
pop
out
adc
iret
or
int3
push
dec
mov
adc
mov
adc
mov
jle
add
sub
mov
cld
mov
nop
rorb
cmp
cs
stos
adc
mov
push
mov
sbb
jo
cmc
mov
pop
imul
ljmp
xchg
or
and
clc
inc
nop
adc
stos
xor
pop
mov
push
jmp
stos
lock
dec
outsl
adc
sub
aam
mov
stos
xor
mov
ljmp
jl
cmc
hlt
andl
negb
push
test
mov
mov
cmp
mov
lods
and
das
xchg
sbbb
mov
sbb
rorb
or
loopne
cmp
fists
ja
les
sbb
jne
shlb
xchg
fnstcw
dec
aad
arpl
sub
or
jns
jle
mov
stc
mov
adc
lods
xor
and
add
cmp
sbb
lret
xor
jb
lods
test
push
ja
push
and
cmpsl
call
test
lds
inc
js
fsubrl
rorl
adc
imul
dec
mov
add
mov
mov
inc
pusha
xchg
mov
and
and
mov
xchg
mov
cmpb
dec
mov
fnsave
nop
sub
mov
loope
leave
cmc
out
jae
cmp
cld
sbbb
stos
add
in
test
jns
lret
mov
push
adc
push
cmp
ds
mov
sub
inc
repnz
xchg
movnti
int3
jge
enter
incb
ljmp
jmp
cltd
ss
pop
xorl
mov
inc
andb
dec
mov
pop
outsb
popaw
xor
sub
cltd
mov
push
and
mov
adc
in
cli
int3
popa
ljmp
or
mov
mov
jl
add
test
pop
cmp
in
xchg
adc
fnstsw
imul
sbb
lret
shlb
pop
push
push
push
int
aas
lcall
jmp
lret
jno
ret
add
and
int
push
outsb
inc
call
push
aad
repz
jno
out
push
aas
cmpb
or
mov
or
aam
leave
inc
call
fnstcw
pop
jg
out
stos
int
stos
adc
mov
add
test
pop
and
test
cmp
stc
stos
cs
loop
dec
fwait
test
lcall
dec
addr16
aam
sbbl
repz
ret
je
scas
hlt
dec
push
sbb
sub
cmpsb
andb
mov
imul
xlat
inc
cmp
insl
push
shll
imul
push
add
or
lock
iret
fisubl
adc
push
ss
mov
xchg
xlat
clc
or
fsts
movsb
sbb
je
out
xchg
pop
popa
mov
jle
shll
xor
shrd
add
push
popa
jnp
les
pusha
and
mov
mov
mov
ret
nop
dec
sbb
xor
xor
cwtl
int
scas
jle
mov
xchg
jmp
xchg
jmp
int
add
or
sbb
jg
das
mov
jmp
mov
insb
sbb
test
inc
mov
jo
mov
lock
into
or
jmp
pop
pop
lea
pop
xor
sub
rcr
xor
inc
sbb
inc
push
mov
push
int3
out
out
xor
bound
movsl
cmp
or
out
xor
jno
mov
add
adc
push
ret
dec
lret
repz
addl
pop
int3
ljmp
or
add
inc
ljmp
xlat
pop
inc
and
mov
fwait
dec
addl
in
sti
inc
jnp
pop
cmp
and
loop
stc
out
pop
push
int
cli
cmpsb
aas
or
loope
push
pop
loope
xor
or
jnp
mov
inc
fstl
movsb
add
push
aad
out
push
add
outsb
adc
cwtl
push
fs
cltd
inc
and
sub
test
ss
cmc
les
fstpt
mov
xchg
cs
insb
data16
mov
rorl
pop
lret
addr16
sub
inc
insl
lea
xlat
adc
dec
lret
or
jecxz
adc
stos
xchg
and
push
mov
repz
scas
pop
fildl
lret
rolb
inc
out
fistl
xlat
addb
inc
mov
les
push
cmp
fcoms
daa
imul
adc
pop
sub
es
pop
sub
out
push
cs
inc
mov
pop
dec
lods
lods
cltd
add
sbb
in
cs
xchg
imull
aaa
lahf
hlt
out
adc
xor
mov
loope
dec
in
add
xor
sbb
pop
add
leave
pop
aam
mov
ficompl
lcall
test
divl
cmp
ja
inc
mov
sub
xor
cmpsb
into
cltd
test
mov
fdivr
cmp
or
mov
mov
jno
jns
mov
fmulp
adc
into
out
clc
cmp
add
fisubrl
or
mov
xchg
lds
and
movsb
loop
cmp
ss
pop
nop
shlb
dec
in
cmp
cmp
pop
in
mov
and
sbb
scas
sbb
xor
mov
mov
faddl
inc
sti
lock
and
scas
imul
adc
dec
cld
lret
mov
xor
test
mov
lods
addl
bound
decl
ss
fwait
push
push
mov
cli
sbb
xor
mov
dec
ja
repnz
jmp
add
pop
mov
push
pop
sbb
sbb
fdivrs
sub
mov
adc
sbb
mov
adc
pop
loope
cmp
add
cmp
outsb
shll
push
pop
scas
les
mov
nop
sub
fcomi
call
push
dec
xor
adc
or
sub
fcmovnb
sbb
add
sbb
incb
jbe
jmp
jno
iret
ljmp
push
cmp
cmp
shlb
mov
fwait
aaa
push
mov
mov
or
push
lods
rsqrtps
das
into
stos
pop
aas
dec
jmp
sahf
mov
mov
jmp
inc
jmp
cmp
pop
fcoms
stos
fcomps
lock
mov
fsub
add
jmp
cmpsb
pop
sti
mov
hlt
mov
dec
sbbl
mov
lds
xor
je
or
in
cld
lret
sbb
push
stc
cmp
inc
jp
daa
hlt
xor
cmp
cli
ljmp
int3
push
into
test
or
ficompl
shlb
jecxz
movsl
fistps
mov
scas
lods
mov
lcall
jge
out
rclb
sbb
xchg
and
xor
pusha
sahf
jnp,pt
aam
jne
lcall
dec
out
sub
subl
mov
pop
scas
jno
add
push
dec
frstor
and
dec
cmpsl
push
aad
mov
repz
xchg
adc
cmpsl
fistps
pop
push
aaa
rcrl
mov
insl
xor
sbb
or
sbb
das
std
dec
jp
pop
push
fucomip
xchg
adc
cltd
out
gs
je
in
adc
pushf
pop
jnp
adc
pop
mov
push
in
popf
fsts
mov
dec
dec
int
inc
mov
out
aas
dec
or
lods
stos
xchg
sub
add
inc
loope
testl
xchg
and
push
js
mov
jmp
pop
xlat
adc
mov
pop
mov
xchg
fsubs
cwtl
cs
mov
mov
mov
dec
sbbl
out
dec
out
adc
sbb
sub
and
stos
push
aas
or
cld
mov
dec
pop
cmc
pushf
add
js
shl
je
roll
and
inc
fistps
jmp
and
pop
iret
les
or
push
fs
cmp
insb
pop
sub
mov
int3
loope
or
add
in
sub
and
mov
loopne
inc
pop
push
mov
xchg
sar
fldenv
clc
aaa
leave
out
push
or
mov
push
gs
mov
fcom
out
mov
pop
sub
cmp
movsb
dec
shll
push
push
aam
outsl
repz
idivb
push
add
jae
sti
mov
pmullw
or
adc
fwait
leave
xchg
dec
in
dec
and
pop
cmp
dec
add
cmp
lods
test
add
loop
pop
mov
sbb
and
pop
shlb
sub
imul
xor
das
lcall
jno
nop
and
push
xchg
pop
push
push
shll
rcrl
test
lock
xlat
pop
inc
aas
adc
pushf
push
xor
int
push
pop
mov
lret
push
faddl
or
jns
sbb
sub
in
nop
xchg
dec
adcb
addb
jae
gs
out
pop
lea
je
push
push
pop
mov
fdivrs
xchg
jne
inc
xor
push
cmpsl
call
cmp
mov
mov
pop
aas
stc
sbb
dec
mov
push
iret
loop
jl
int3
xlat
push
adc
insl
ljmp
cli
stos
cli
xchg
pushf
jg
dec
mov
repz
cmp
imulb
mov
mov
stos
fsubp
lods
dec
repz
jmp
cld
fisubrl
aad
ja
lods
mov
jae
stc
shlb
int
loopne
adc
or
orb
mov
sbb
dec
fnstenv
sbbb
adc
sub
enter
ss
rcrb
adc
std
or
movsl
std
mov
xor
mov
cmp
xchg
cmpsl
push
push
outsl
test
scas
inc
pop
jmp
mov
push
test
subb
sub
inc
leave
adc
add
movd
in
cli
xchg
inc
mov
push
movsb
jge
push
jmp
ss
fs
hlt
les
mov
or
movsl
aaa
loopne
or
aam
push
aad
test
imul
adc
and
xor
fisttps
out
cmp
mov
dec
dec
mov
adc
arpl
pop
dec
jb
scas
xor
data16
and
or
int
iret
push
addb
shlb
es
adc
push
frstor
jge
in
mov
or
xchg
jbe
fisubs
fdivrs
and
sbb
negl
xor
cmp
push
stos
and
decl
ds
into
dec
mov
inc
gs
push
dec
or
gs
outsb
xorb
data16
push
jecxz
pop
subl
cwtl
test
loopne
clc
enter
mov
shll
xchg
jmp
imul
push
xchg
cmpsb
and
insl
pop
add
scas
inc
cmp
test
xor
ret
orb
mov
stos
sti
inc
out
jnp
cmp
pop
cmpsb
adc
cli
fldl2t
sti
gs
inc
cmp
pusha
pop
cmp
adc
cmpl
mov
iret
fs
and
stc
imul
cli
mov
mov
mov
dec
mov
pusha
pop
add
or
xchg
add
movsb
imul
out
push
lods
inc
pop
dec
jecxz
scas
mov
std
mov
push
mov
pop
mov
mov
cmpsb
mov
xlat
push
adc
xchg
lahf
dec
push
cmpsl
jg
lock
scas
xor
cld
sub
mov
sub
or
sub
sar
sahf
loope
push
into
jmp
ss
pusha
jns
xor
stc
xor
lcall
push
in
sub
fidivrl
add
nop
loopne
jle
arpl
movl
jp
jno
push
loope
adc
xchg
cli
flds
or
repnz
or
xchg
ret
pop
jp
mov
inc
and
pop
jecxz
inc
ss
pop
sbb
iret
xchg
cs
inc
mov
popa
cmp
movsb
dec
cwtl
adc
mov
and
iret
subb
jp
adc
pop
cwtl
jne
xor
loopne
sbb
and
jne
xchg
pushf
jge
dec
scas
mov
xor
pop
pop
pop
call
scas
jb
mov
repz
sbb
shll
mov
push
mov
lock
int
and
dec
push
or
stc
jae
rolb
in
push
inc
hlt
rorb
aaa
pop
lods
xchg
mov
cmp
imul
lea
movsl
cs
movsb
aam
pop
cmpsl
dec
stos
xchg
dec
hlt
aaa
xchg
push
fdivl
dec
loopne
mov
add
cs
jnp
pop
icebp
inc
lods
sub
loop
dec
inc
jno
sar
jne
lret
inc
ja
fdivrp
je
pop
fs
jae
sub
dec
cmpsb
movsl
sub
outsb
movsl
xchg
mov
movzbl
mov
cld
loope
dec
dec
xor
dec
adc
std
jge
lcall
mov
jo
leave
cwtl
sbb
mov
push
lea
les
das
movsl
cmpsb
xchg
or
dec
enter
ret
lods
xor
jmp
js
add
les
cmp
pop
pop
bound
xor
or
jmp
cmc
jp
popf
fildll
mov
cmp
test
sbb
cmp
lea
xchg
and
scas
arpl
aas
ss
stc
mov
mov
test
aad
rcrl
rclb
icebp
pusha
push
add
mov
test
iret
fnstsw
mov
stc
int
xchg
cltd
sub
inc
shrl
add
mov
pushf
mov
clc
fldenv
inc
into
lcall
inc
aaa
lds
pusha
cmpl
lahf
add
sub
js
loop
mov
dec
pop
sti
fldenv
xor
sti
pop
scas
fdiv
sub
cmp
pop
in
jnp
lret
push
mov
jge
mov
xchg
xchg
adc
sub
or
sub
jbe
mov
addr16
stos
andb
push
and
js
inc
or
fisubl
or
and
in
add
dec
add
xchg
push
mov
push
lret
push
cwtl
xlat
bound
add
sub
sbb
mov
inc
insl
adc
or
pop
in
xor
xchg
out
jg
xor
cmp
jle
fmuls
mov
jae
cmp
pop
mov
arpl
sbb
sub
popf
dec
and
gs
jmp
jmp
adc
push
jmp
ds
sahf
add
jl
jb
mov
xor
clc
xchg
sub
mov
icebp
xchg
addr16
dec
or
decb
add
rcl
pop
sub
sbb
jns
add
mov
loop
repz
dec
sarl
mov
movsl
mov
loopne
push
outsl
stos
out
pop
dec
aad
mov
aam
shll
jge
add
push
mov
icebp
inc
and
mov
insl
sbb
dec
mov
aaa
incl
sub
fistps
loope
push
data16
movsl
aaa
jl
mov
mov
push
sbb
pop
das
inc
jecxz
xchg
in
dec
aas
xor
jle
sub
adc
mov
push
sub
jno
cli
xchg
mov
mov
into
fbstp
sub
adc
dec
or
ror
push
jl
jp
jbe
mov
mov
cs
cli
getsec
and
test
or
cmpsb
aaa
int3
push
mov
fwait
mov
aam
rorb
loopne
sbb
xchg
fbstp
pop
in
xchg
cmp
and
loopne
xor
std
cmp
cmp
das
pusha
scas
movsb
testb
fwait
cmp
xchg
xor
cmc
dec
add
mov
push
dec
mov
adc
sbb
cmp
pop
jmp
and
xor
fmull
mov
jg
out
hlt
sub
nop
aas
push
popf
dec
cmp
sub
inc
adc
mov
movsl
inc
push
mov
and
xor
ja
and
outsb
add
inc
in
push
sub
inc
xchg
mov
out
sbb
xor
lret
and
sub
or
xchg
negb
repz
fsubl
jne
pushf
loope
pop
imul
add
mov
push
cmp
adc
dec
xor
js
cmp
ds
roll
out
mov
stos
and
jo
imul
test
andl
push
push
lahf
mov
sbb
repz
push
arpl
icebp
or
rcrl
sbb
jnp
shlb
movsl
loope
icebp
add
push
inc
mov
lcall
jns
dec
shl
jo
mov
sub
pop
xor
les
fwait
inc
mov
int3
lds
lods
shl
mov
cwtl
mov
xor
outsb
mulb
mov
pop
jmp
fldln2
insl
inc
sub
xchg
out
lea
dec
loopne
cmpsb
jl
sbb
mov
sbb
iret
pusha
sbb
pop
shlb
sub
daa
cmc
pop
rol
xchg
test
xchg
enter
in
or
in
imul
mov
xor
mov
out
jo
dec
fwait
out
inc
mull
fstpl
jnp
pop
dec
xchg
sarl
or
sarl
dec
mov
jb
add
sbb
pop
jmp
adc
adc
jl
adc
xor
pushf
adc
mov
inc
bound
jo
pop
flds
out
imul
mov
inc
mov
test
ss
lret
and
jl
push
cld
jns
add
aam
mov
or
push
stc
sbb
push
fisubl
fmuls
and
jns
add
inc
lahf
int
fwait
les
xor
cmp
pushf
xor
or
inc
cmp
out
push
sub
and
ret
sbb
outsl
pop
int3
lahf
push
mov
repz
lcall
xor
movsb
mov
mov
cmpsl
inc
jl
inc
pop
jecxz
lret
inc
int3
xlat
add
jne
nop
cmpsb
xchg
sbb
ret
push
aaa
adc
iret
xor
mov
push
nop
dec
fisttpl
pop
std
sbb
popf
push
cld
lret
cwtl
sub
js
ja
popl
mov
arpl
xlat
jge
xor
adc
mov
out
adc
and
or
je
add
sub
lcall
sbb
stc
dec
push
xchg
cmp
xlat
jle
repz
sbb
loopne
mov
push
mov
fchs
push
aas
cld
inc
xor
sbb
sub
fs
pop
and
es
push
arpl
mov
add
mov
sub
aam
cmp
sbb
xchg
or
push
jne
out
mov
mov
jmp
scas
xchg
or
add
mov
xlat
icebp
bound
inc
sbb
pop
das
add
xchg
or
xchg
unpckhps
nop
cld
and
cmp
cmpsb
sbb
mov
mov
cmpsl
pop
xor
lock
pop
add
inc
mov
out
mov
pop
icebp
ss
iret
jle
push
or
repz
jnp
repz
in
in
out
cmp
sti
cmp
mov
cld
cmp
shrb
dec
mov
pop
xchg
mov
mov
ficompl
push
lahf
mov
fldl
jmp
jg
mov
jl
xchg
cs
mov
xchg
adc
test
inc
in
sub
scas
icebp
aaa
pop
enter
cmp
sbb
stc
and
pop
imul
jl
mov
sahf
jno
and
lcall
dec
pushf
sti
sub
mov
ljmp
mov
lcall
cmpl
push
ror
rorb
mov
push
cmpsl
js
xor
insb
mov
adc
cmp
jns
adc
das
cmpsl
xchg
imul
sbb
xor
popl
mov
hlt
cmc
xor
jb
add
cmp
shr
jmp
inc
popl
xchg
popa
dec
and
xchg
pushf
xchg
sub
xchg
lock
mov
shlb
cmp
int3
lods
imul
jmp
jno
test
iret
out
daa
xor
add
mov
sahf
mov
jae
out
push
mov
or
incb
mov
mov
fldt
xchg
push
popf
cmc
or
loop
push
enter
lods
jae
cmc
mov
leave
sub
mov
jecxz
movl
jno
xorb
lods
addr16
mov
cmp
cmpsl
adc
ret
in
mov
lods
xchg
cmp
lea
lret
rcll
mov
hlt
or
jno
pushw
pop
pop
sub
fwait
jl
adc
mov
pop
cli
mov
dec
push
add
lods
and
adc
int
out
pusha
js
cmp
ljmp
sub
cwtl
or
push
and
mov
or
dec
test
jno
subl
or
mov
push
and
movsl
xor
ficoml
inc
mov
jb
jae
dec
cmpsb
add
inc
dec
pop
jb
fwait
in
add
outsl
or
stos
rorl
les
jb
mov
mov
sub
enter
lret
push
icebp
in
mov
or
adc
or
pop
mov
lods
jns
dec
imul
jmp
cmc
int3
mov
out
stos
je
in
add
cmp
fs
lahf
movzwl
sub
cmp
push
cmpsb
jl
rorl
mov
jge
and
inc
movaps
aas
mov
jns
or
repnz
add
mov
and
jl
xchg
add
sub
mov
mov
lea
xor
lret
out
cmp
cmpsb
stos
int3
lahf
inc
repz
movsb
add
shlb
cmpsl
inc
mov
jmp
pop
orb
xchg
push
hlt
pop
lret
sub
jle
test
pop
adc
xchg
nop
fcoms
scas
lods
xor
mov
sbb
or
leave
xor
xchg
mov
push
je
adc
dec
cs
push
ficoml
out
je
addr16
pop
cmp
or
mov
push
in
in
sub
pusha
loope
sbbl
enter
add
loopne
xchg
jle
or
nop
repnz
ret
jge
mov
inc
pop
fistpll
pop
mov
jbe
adcb
sbb
fs
std
in
rclb
and
popa
pop
add
add
pusha
lahf
cmp
mov
cmpb
int3
pop
dec
icebp
nop
pop
dec
or
cs
ret
inc
sbb
scas
shlb
xchg
loop
outsb
insl
cmpl
sub
dec
arpl
dec
mov
ret
hlt
in
dec
repnz
and
cmp
in
mov
xor
xchg
push
test
or
xor
or
mov
icebp
mov
icebp
pop
jp
movsl
cmpl
loope
rcll
xchg
clc
stc
lret
mov
xor
jne
ret
inc
push
pushf
int
sbb
push
cmpsl
and
pop
test
push
or
jp
cmc
xor
push
out
es
repnz
ljmp
roll
out
hlt
nop
jns
mov
sti
push
sbb
mov
push
mov
push
negl
inc
jo
icebp
scas
or
mov
in
enter
or
dec
sbb
pop
mov
outsb
repnz
mov
xor
imul
pop
or
out
push
stc
jmp
pop
fisubrs
xchg
out
fldenv
xchg
pop
mov
adc
leave
and
iret
sar
push
enter
mov
stc
fs
lods
fneni(8087
sub
addr16
mov
mov
sbb
rcl
cld
data16
ficompl
xlat
cmpsl
inc
lods
pop
inc
sahf
imul
jmp
rcrl
loope
mov
int3
lcall
or
adc
loope
pop
mov
xchg
adc
test
pop
sub
std
cli
movsb
push
cmpsl
inc
test
xor
xchg
fwait
lret
js
fimull
lcall
sub
les
lock
add
pushf
call
repnz
inc
mov
xor
test
mov
mov
jb
jb
mov
andl
and
mov
mov
xchg
divb
out
mov
or
leave
imul
inc
sbb
aad
push
push
shrl
mov
pop
enter
mov
mov
push
roll
mov
jecxz
xchg
push
xchg
adc
mov
insl
jae
xlat
cmp
xchg
mov
cmp
insl
stos
fwait
inc
lahf
sahf
lcall
push
mov
inc
in
mov
mov
cmp
sub
push
xchg
mov
sbb
les
jmp
cs
loop
adc
push
subb
out
push
lcall
jecxz
jg
or
fldl
and
or
dec
repz
mov
cmc
ret
cmpsl
pop
test
loop
dec
cmp
add
adc
push
lds
aas
movsl
mov
repz
lods
mov
mov
call
push
scas
sbb
stc
lock
push
pop
sbb
addr16
aas
jecxz
in
mov
rorb
pop
mov
pop
inc
fistpl
xlat
sbb
jno
mov
daa
mov
insb
mov
out
sbb
mov
cs
cmp
imull
ss
dec
add
mov
pop
mov
aam
clc
dec
or
dec
mov
xorl
add
loope
or
push
fmuls
mov
pusha
imul
lahf
xor
test
cltd
pop
adc
jp,pt
push
lret
lods
std
inc
adcb
test
gs
das
nop
loopne
sarl
aaa
mov
shr
mov
jge
stc
movb
push
ljmp
lods
adc
mov
and
lock
ret
mov
scas
iret
mov
xchg
sti
mov
pop
inc
mov
dec
daa
aad
loope
es
xchg
cmp
sbb
and
ljmp
mov
test
jo
pop
mov
popa
shrl
iret
loopne
sbb
rcrb
out
jmp
ds
test
stos
sbb
dec
stc
sbb
adc
into
out
dec
insl
adc
and
cmp
mov
push
mov
mov
loope
jb
jge
stc
and
andl
stos
jge,pt
imul
test
inc
mov
pushf
clc
add
fcomps
cltd
pop
nop
shlb
add
pushf
mov
in
cmp
xchg
idivb
cmp
mov
cmp
test
mov
dec
cmc
or
sti
and
pushf
cld
fimull
xor
cwtl
sbb
mov
xor
sbb
mov
stos
lods
dec
sahf
cli
sti
sahf
and
into
sbbb
int
sub
scas
cmp
mov
and
and
scas
adc
cmp
scas
outsl
imul
sub
les
lret
int3
iret
ret
xor
leave
pop
je
jae
mov
mov
pop
js
out
loopne
out
mov
push
sub
lret
inc
mov
cmpsl
ja
xor
inc
cltd
dec
push
pop
pop
sbb
adcb
pop
pop
or
jns
repz
inc
sub
nop
pop
sub
mov
xchg
lea
xchg
imul
add
mov
ss
xchg
push
fidivl
add
push
push
adc
mov
idiv
imul
lock
loope
push
pop
pop
jns
cmp
sbb
lds
sub
into
push
xor
in
test
and
xchg
ret
pusha
mov
sbb
stc
loope
imul
jnp
add
sub
adc
add
bndldx
fwait
sbb
mov
sub
aam
insl
mov
cmp
mov
ret
push
arpl
fwait
adc
sarl
shr
sub
out
and
lcall
scas
dec
shlb
popf
in
push
mov
mov
push
xchg
pop
or
xchg
inc
xchg
repnz
das
add
push
or
imul
sub
xchg
push
mov
cmp
movsb
lret
mov
mov
lahf
cld
push
and
push
jmp
pushf
cmp
lret
xor
push
xor
sti
fadd
aaa
mov
and
pop
mov
or
mov
scas
loop
lea
add
leave
sahf
rol
das
in
fsubrs
int
dec
lret
ret
rcrb
leave
inc
outsb
sbb
sbb
push
stos
or
out
dec
dec
imul
sub
pop
add
cmp
xor
scas
cmc
mov
loop
call
rcrl
mov
mov
sbb
jg
and
cmp
fistpl
push
xchg
or
mov
bound
ljmp
push
cld
mov
js
les
sub
test
jmp
divb
cmp
xchg
fistpll
aad
in
testl
pop
cmc
nop
jo
sbb
hlt
mov
loopne
sbb
test
jg
add
adcb
js
shrb
pop
push
in
sub
sub
sbb
pop
or
and
out
add
pop
fiaddl
adc
mov
aaa
or
mov
sbb
aaa
jmp
outsl
jb
sub
sub
sbbl
push
mov
add
icebp
out
jno
dec
and
jp
in
sub
out
dec
movsb
push
shlb
stos
pop
inc
jo
in
loop
xchg
fs
mov
push
cmp
aad
adc
jns
xor
pop
je
push
shr
idivl
loopne
loopne
daa
dec
mov
jge
xchg
aad
xor
cwtl
xor
repnz
out
cmp
dec
fwait
insb
ljmp
fs
imul
cwtl
mov
xchg
jle
nopl
xchg
sbb
ss
sub
dec
cs
jae
test
lcall
push
lock
div
add
jecxz
jg
inc
lds
lret
mov
xchg
scas
jecxz
sysenter
fcompl
test
scas
lcall
lods
int3
pop
and
into
pop
clc
or
jae
cmc
ss
cmc
imulb
test
mov
mov
inc
dec
sub
ret
daa
jl
adc
popl
dec
mov
mov
fdivrs
jecxz
push
jne
jnp
xchg
inc
loop
sub
jnp
je
pop
sbb
orl
rcr
cmp
sub
pushf
test
dec
jns
mov
mov
aaa
jmp
mov
leave
imul
addb
mov
arpl
mov
cmp
loop
popa
or
pop
fildll
xchg
and
insb
dec
inc
or
cmpsb
inc
outsl
or
cmpsb
add
into
mov
mov
scas
mov
sub
cmp
pop
int3
cld
and
cmp
insb
inc
flds
cmp
lret
push
cs
shrl
add
fildll
and
xchg
insb
xchg
lcall
pop
mov
inc
push
std
movsl
jbe
mov
jnp
ret
cmp
repnz
js
inc
mov
test
cli
loop
sbb
mov
jno
or
notb
lret
jp
or
cmc
push
fldt
jne
mov
fsubs
mov
cmc
inc
mov
imul
shlb
mov
jg
mov
cltd
jmp
mov
xchg
mov
mov
in
popf
daa
mov
je
dec
add
xchg
cmpsl
or
mov
out
and
jle
inc
loope
stos
lods
out
repz
mov
cli
sub
dec
lret
jge
jae
imul
pop
mov
stos
repz
cmp
push
sub
ret
aam
or
test
push
out
lods
and
lret
cld
inc
adc
mov
data16
jl
jle
dec
out
jno
lea
fadds
sbb
xchg
pop
in
repz
loopne
sahf
pop
rcl
dec
mov
and
push
sbb
pop
pop
gs
jae
xlat
push
mov
mov
dec
jo
lret
mov
sbb
push
testb
hlt
xlat
add
ds
inc
xor
ficoms
in
mov
push
xor
xchg
mov
jns
xor
push
leave
mov
sub
mov
xor
les
cli
mov
mov
mov
push
movsl
js
or
aas
icebp
repz
fistps
outsb
jecxz
sahf
push
lods
fimuls
out
unpckhps
inc
ret
and
pop
cwtl
mov
cli
mov
lret
xchg
push
in
and
xchg
mov
xchg
sarb
sub
mov
sub
xchg
lcall
adc
rcll
fmul
mov
push
jl
mov
mov
andb
decb
pusha
fcoml
mov
add
xorb
push
mov
out
adc
test
adc
daa
mov
cmc
pusha
cmp
xchg
jl
dec
pop
scas
ljmp
nop
pop
mov
pop
inc
pop
sub
add
daa
cmp
inc
push
push
pusha
cwtl
fmul
adc
xlat
popf
cltd
fnstcw
hlt
mov
or
pop
sub
pusha
fisubrl
nop
push
inc
mov
nop
xor
fnstcw
jle
add
incb
mov
ret
or
test
mov
mov
mov
int3
or
push
arpl
mov
or
enter
xor
push
in
add
mov
adc
js
xchg
jne
lret
and
jle
loopne
fbstp
add
nop
jle
sub
jle
pop
cmp
sbb
in
pop
mov
mov
loope
js
movsb
inc
jnp
jmp
and
fdivrs
hlt
lcall
je
xor
pusha
pop
insl
insl
fwait
push
or
push
mov
cmp
sbb
pop
pop
int
lret
xchg
and
mov
inc
sub
sbb
fbld
or
cmpsl
movsl
and
fsubl
dec
ja
outsb
mov
ja
pusha
shlb
cld
testb
bound
movsb
dec
bound
jae
push
mov
inc
sub
push
lds
xchg
cmpsl
int3
xchg
out
fwait
add
mov
sub
mov
sbb
jo
es
push
or
cmp
leave
xchg
push
ss
ficoml
and
cmp
sbb
jae
mov
jo
es
inc
jp
push
mov
jg
sub
cmp
mov
adc
int
jnp
jno
jmp
fsubl
ss
mov
orl
jno
push
push
stos
sub
adc
cmc
es
stos
push
adc
sub
mov
jmp
xor
ss
adc
loop
xchg
and
ljmp
push
popa
jl
mov
sub
mov
dec
and
int3
icebp
into
cmp
cmpsl
and
lock
adc
xchg
cld
mov
jne
aas
cmp
push
addr16
mov
mov
jo
sbb
clc
add
loope
or
imul
insb
jb
inc
orb
into
rcl
and
cmp
lret
jo,pn
rorl
leave
iret
add
loopne
ljmp
cmpsl
cmp
cmc
jbe
fs
lds
out
loop
push
call
movsl
lahf
and
sub
cmp
pop
ss
push
rcr
xchg
incb
and
ret
push
data16
sbb
orl
and
inc
jno
pop
jae
loope
push
in
ret
cmc
insl
movsw
push
insl
mov
scas
sbb
push
dec
mov
into
dec
rol
add
dec
out
or
js
addr16
lret
sub
cmp
xchg
arpl
inc
inc
sbb
mov
rcrb
cmp
stc
xchg
aas
xchg
xor
adc
pop
mov
inc
cmp
and
shll
jb
inc
adc
add
jp
in
in
roll
ss
and
jp
hlt
iret
in
int
ret
test
test
xchg
popa
test
scas
pushf
icebp
sbb
mov
sbb
push
xchg
test
lret
popa
enter
xor
mov
mov
cmp
mov
int
movsl
in
imul
push
push
xor
loopne
ja
pop
adc
mov
subb
xor
lahf
xchg
inc
insb
dec
xor
jnp
inc
cli
andl
add
pop
out
sbb
inc
dec
int
cmp
arpl
cmp
cmc
rcrl
xchg
pop
fsubrl
mov
mov
mov
lea
cld
shll
jb
loope
cmp
xor
pop
mov
mov
ds
je
mov
pop
xorl
inc
pop
add
ficoms
add
rol
call
ret
ss
fwait
xchg
iret
jb
add
clc
push
fwait
mov
pop
sub
jnp
adc
dec
mov
dec
dec
xchg
sahf
das
loope
lahf
popf
test
cmpsl
addb
cmpsb
fbld
data16
and
push
lcall
inc
or
push
popf
jp
xor
inc
mov
je
cmp
mov
jp,pt
sub
xchg
dec
aam
push
cmc
cli
inc
sahf
jns
int
xor
lds
cmp
mov
outsl
push
mov
jmp
mov
and
fidivrs
jp
fwait
or
sbbl
mov
push
stos
cwtl
pushf
jb
sub
dec
insb
js
push
insl
xchg
or
jp
imul
std
repnz
mov
arpl
test
xchg
push
inc
push
push
ljmp
sub
fs
add
jge
ljmp
mov
in
sbb
and
iret
add
cmp
jmp
push
pop
inc
or
mov
aam
dec
push
mov
mov
sub
xchg
inc
cmp
cmpsb
xor
loop
mov
addr16
test
sbb
and
aaa
and
insb
out
push
push
inc
dec
inc
inc
sahf
mov
les
xchg
out
fisttpl
rcrb
mov
or
cltd
std
mov
jns
inc
insl
lea
inc
stos
mov
mov
cmpsl
cmc
pop
dec
sbb
cli
fldt
xchg
jns
mov
adc
imul
cld
stos
rolb
sub
and
jbe
pop
xchg
mov
loop
mov
sbb
add
or
mov
mov
sub
sub
sub
xor
testl
fcoml
mov
pop
push
cmp
lea
jmp
xchg
cltd
cmp
pop
in
ror
mov
jle
call
and
fwait
lcall
mov
out
mov
sti
cwtl
add
cmp
loopne
mov
dec
iret
jmp
les
dec
cmp
and
or
and
and
insl
inc
leave
cmp
pop
outsl
aam
das
js
jo
inc
out
movsl
adc
xchg
mov
and
dec
add
xchg
test
lds
cwtl
mov
rcrb
decb
aam
xor
sbb
es
xchg
cmp
lea
repz
mov
test
cli
xlat
push
int3
test
ja
mov
inc
pop
ss
int
fistps
sarl
cmpsb
das
mov
andl
leave
mov
rorl
roll
mov
sbb
jmp
sub
flds
ss
xor
int3
fiadds
add
mov
xor
rol
call
scas
push
pop
mov
dec
mov
loope
push
add
xor
lods
jnp
mov
cmc
ljmp
inc
lahf
pushf
call
push
cmpb
sti
jp
out
aas
iret
jmp
lcall
xchg
mov
cmp
dec
bswap
dec
insl
lret
lods
lret
pop
mov
cmp
mov
loope
outsl
mov
push
andb
mov
rorl
xor
cmp
or
pop
leave
je
cmp
cmp
cmp
lds
push
mov
cmpsb
lea
enter
jno
sbb
in
popa
je
adc
daa
dec
cltd
mov
mov
xchg
lds
and
data16
fdiv
std
in
pop
push
or
inc
sub
push
lret
inc
enter
pop
xchg
dec
pop
scas
sbb
jl
lret
lret
mov
lds
ret
jp
into
jmp
push
mov
sub
push
mov
aam
loop
mov
je
hlt
jb
sbb
pop
sub
test
dec
ror
ret
cs
aad
popa
mov
xor
lahf
mov
dec
xchg
jns
jne
repnz
push
iret
rorl
pop
sbb
xchg
lahf
push
fwait
mov
shl
push
fnsave
or
cs
fimull
jns
mov
dec
add
ss
xor
xadd
cmp
inc
mov
mov
aaa
enter
lret
jo
mov
enter
sbb
bound
pusha
clc
sbb
push
add
add
popa
out
cli
scas
lcall
adc
stc
shlb
mov
dec
push
xor
mov
pop
fucomi
mov
mov
inc
push
stc
pop
push
dec
lret
imul
imul
lods
and
loopne
aas
mov
test
bound
jnp
out
adc
sbb
mov
inc
mov
cld
and
cltd
mov
je
ds
pop
lahf
dec
pop
imul
mov
push
or
shl
mov
push
mov
xor
fmuls
push
mov
cmp
shl
popa
leave
mov
jno
push
push
loop
mov
dec
test
lods
daa
mov
adc
daa
leave
xchg
cld
jne
loop
dec
movsl
xlat
add
daa
or
xchg
arpl
movsl
mov
pop
lcall
lcall
add
ds
sahf
leave
lods
fsubs
andl
or
mov
cmpsl
test
aad
sub
and
pop
fwait
lahf
and
mov
mov
jns
stos
mov
push
lods
xor
mov
or
cltd
mov
or
cmpsl
pusha
mov
jae
arpl
dec
xor
fisubs
dec
mov
hlt
shlb
in
cmp
mov
inc
movsb
je
jns
movsl
fwait
mov
je
enter
or
enter
jno
jecxz
pop
adc
loopne
pop
cmp
cli
and
notb
daa
cltd
jnp
jle
js
decl
mov
sub
dec
dec
lods
aas
pop
hlt
stc
pop
or
cld
addb
mov
outsb
mov
mov
or
xchg
mov
pop
mov
xor
mov
dec
sahf
inc
fiadds
scas
ffree
pop
mov
mov
bsf
push
ljmp
int
and
push
popf
jne
negb
sbb
fisttpl
roll
adc
icebp
pop
pop
shll
sbb
or
cmpsb
inc
mov
cmpsb
dec
or
xchg
repnz
xorl
sub
ret
adc
sub
push
hlt
sbb
or
flds
fwait
mov
das
call
out
out
sbb
rolb
dec
and
and
inc
jns
mov
mov
lahf
xor
dec
sub
imul
jb
xor
call
sbb
pop
int
popf
jecxz
aam
cmpsl
sbb
subb
xchg
sbb
adc
shr
test
clc
sarl
repnz
push
divb
mov
mov
push
dec
xchg
sbb
sub
enter
lcall
addb
lods
daa
xor
xor
and
xchg
jnp
in
mov
or
in
xor
mov
mov
push
fimuls
sbb
and
cs
jne
pop
fdiv
jne
flds
xlat
out
lcall
nop
cmpsl
out
cmp
in
stos
jl
xlat
mov
arpl
imul
cld
mov
scas
or
push
cmc
daa
cltd
sbb
mov
push
out
cwtl
xor
xchg
ja
sti
enter
and
pop
in
imulb
mov
daa
dec
pop
sub
cmp
movsb
fmul
and
xchg
adc
dec
popf
ret
pop
dec
mov
xchg
xor
mov
out
fisttpll
lods
push
fxam
pusha
std
mov
jecxz
push
js
cmp
js
pop
cwtl
xor
ljmp
out
xchg
pop
aad
or
into
mov
mov
add
adc
cltd
mov
cmp
lcall
stos
mov
imul
andb
dec
leave
xor
cs
jae
lahf
and
jp
xchg
jb
inc
adc
and
mov
cmp
adc
jle
mov
inc
xchg
sub
inc
jge
adc
stc
adc
sarl
popa
adc
nop
outsb
mov
push
ret
mov
cmp
mov
fs
push
inc
jge
rclb
std
das
push
out
ljmp
xlat
sbb
addr16
ss
inc
jl
mulb
jnp
js
mov
into
das
mov
ret
jecxz
jno
mov
cmp
mov
pop
jb
ljmp
xor
bnd
loopne
jne
sbb
in
rolb
mov
push
loope
push
rcr
aad
xlat
bound
cmc
mov
xchg
mov
das
pop
das
fwait
dec
mov
jae
cli
out
xor
inc
aad
dec
test
sbb
pushf
es
or
push
adcl
loopne
jge
fwait
test
scas
enter
pop
add
pop
jg
pop
in
mov
popf
ret
out
push
dec
insl
paddd
push
imul
pop
sub
inc
or
inc
add
test
stc
cmp
imul
subb
inc
xchg
jno
xchg
cmp
cmp
xchg
scas
cmpsl
cmp
add
arpl
jp
insl
adc
into
dec
sahf
repnz
jl
pop
xchg
and
xchg
jmp
sub
dec
and
test
or
rcl
pop
jge
dec
add
fdivr
aam
adc
sti
xchg
inc
mov
lcall
sbb
lret
mov
mov
push
shl
gs
jecxz
jbe
incl
mov
jge
out
cmpsb
dec
mov
aad
dec
xchg
pop
jnp
in
push
addb
xchg
pop
inc
xchg
test
scas
mov
mov
arpl
and
fmul
ljmp
movsb
pop
fwait
cmp
ret
loop
test
data16
add
in
lods
je
mov
xor
in
xchg
pusha
loope
aaa
add
push
mov
mov
shl
rol
inc
xchg
outsl
pop
pop
ljmp
mov
mov
cs
add
push
push
pop
shlb
jle
or
mov
aam
push
sarb
movl
lock
or
cli
jg
mov
fwait
add
lret
movsb
cmp
push
inc
push
cmp
out
test
repz
popa
adc
push
cmp
jae,pn
adc
ret
mov
inc
mov
xor
cltd
fstpl
jae
mov
rcrb
xor
and
mov
mov
cmp
scas
in
push
mov
push
or
or
and
mov
push
cmpsl
xchg
cmp
mov
push
ret
repnz
gs
das
pop
mov
rcr
sub
neg
je
dec
lea
pusha
mov
test
push
mov
jo
iret
jns
jae
xor
fldt
xchg
popa
test
std
jne
popf
cmp
mov
les
lret
sub
dec
jl
pop
mov
xor
cmpsb
into
sub
aas
cmp
scas
adc
pusha
ret
dec
inc
mov
push
roll
mov
pop
test
add
sub
ret
mov
xor
aaa
mov
lret
sbb
stc
ret
sbb
push
add
xor
sub
cmc
jne
fstp
out
int
xchg
mov
lcall
sbb
xchg
push
xchg
push
xchg
movsb
and
dec
lret
mov
jb
pop
push
jecxz
sub
jmp
sbb
dec
mov
mov
stc
lahf
pop
push
mov
jae
xchg
cld
sbb
push
mov
jp
out
dec
test
sbbl
incb
and
imul
mov
and
cmp
inc
dec
mov
fdivl
aaa
sub
cmp
lods
popa
ret
jmp
xlat
cmpb
or
sub
push
pop
repz
sub
mov
push
mov
hlt
xor
sub
out
pop
sbb
repz
daa
cld
mov
mov
fcoms
les
arpl
jecxz
xchg
cmp
xchg
cmp
test
adc
arpl
loopne
cmp
cmp
outsb
mov
and
movb
stos
hlt
lock
aam
mov
in
jo
inc
add
sub
or
push
pop
sbb
popf
cmp
cmpsl
pop
mov
fwait
insl
jmp
cld
dec
call
fisubl
inc
xor
orl
mov
int
pop
add
aad
ret
jns
pop
bound
xor
mov
dec
mov
insl
fildl
fcompl
lock
jbe
push
aam
ss
pop
add
sub
or
test
cmp
aad
xchg
jge
add
push
ss
decb
xchg
pop
loop
filds
imul
mov
xlat
mov
les
jo
cmc
shll
xor
xor
adc
incb
movsl
imul
mov
mov
fs
xchg
or
mov
leave
add
jnp
imul
mov
loop
push
and
or
out
lock
repnz
std
fadd
rcrb
or
xor
imul
mov
inc
pop
aad
call
and
ja
mov
call
xor
mov
mov
popf
mov
cltd
mov
add
push
push
icebp
lret
and
js
adc
add
call
movsl
dec
sbb
fstps
dec
mov
addb
pop
mov
push
mov
ds
out
fildll
dec
pushl
lock
rcrb
add
add
je
mov
jno
enter
adc
push
and
dec
pusha
negb
out
mov
pop
cli
out
jecxz
push
xor
jmp
push
mov
mov
jmp
lds
dec
movsb
and
xor
shl
jmp
imul
xor
js
rol
lahf
sbb
push
mov
aad
cmp
icebp
pop
mov
add
jo
or
cltd
mov
aad
and
jl
stos
sub
hlt
jne
sub
and
push
sub
mov
fmull
jne
or
clc
andb
fadds
out
mov
add
sbb
jmp
xor
sbb
addr16
mov
and
cmpsb
jb
sti
jp
sar
pushf
movsb
xor
outsl
mov
and
jno
out
stos
shrb
sbb
insb
jl
sbb
sub
mov
xchg
and
enter
imul
cmp
aas
fwait
test
inc
mov
and
jge
xor
iret
repz
jl
out
data16
ret
mov
loop
cmp
jle
cmp
popa
dec
inc
inc
jnp
jb
int3
outsl
jbe
inc
add
jmp
add
pop
js
and
sbb
cmp
scas
inc
loop
out
in
xor
jae
jmp
mov
jl
inc
sub
ret
and
add
mov
pusha
cltd
jae
jle
orl
inc
xchg
sbb
fistps
xchg
jp
pop
mov
push
add
or
addb
loopne
inc
cmp
xor
movsb
mov
xor
fsubrl
int
mov
sbb
pop
adc
push
dec
inc
push
and
pop
mov
mov
add
aam
cmpsb
je
mov
stos
int3
lahf
or
add
xor
pop
sub
mov
pop
sub
jecxz
inc
cmp
loop
scas
lods
ljmp
mov
ljmp
dec
dec
xchg
insl
sbb
xchg
pop
int
in
lcall
mov
xchg
mov
xchg
add
sub
sbb
cmpsl
fisubl
cmpb
in
cmp
ja
sbb
lret
shlb
stos
jge
int3
lods
movsb
fucomip
xor
pop
pop
and
lea
sarl
mov
inc
xor
in
add
mov
rcr
push
sub
pop
jle
pop
jmp
scas
or
idivl
xchg
enter
push
nop
les
lods
pop
mov
ret
pusha
icebp
cwtl
or
leave
enter
add
sbb
jl
lods
mov
jl
pushf
jns
popa
pop
stc
sbb
test
mov
stos
xchg
mov
sbb
add
mov
dec
les
pop
add
sub
std
mov
sar
gs
fcom
push
dec
lahf
adc
pusha
vphsubbw
adc
ljmp
mov
aaa
or
paddusb
xor
or
sub
add
xchg
testl
stc
pushf
mov
imul
push
xchg
push
jp
bound
pop
cwtl
cs
push
cltd
and
in
and
cwtl
bound
fxch
repz
outsb
mov
jne
jns
imul
xchg
das
push
mov
push
in
ja
ret
inc
push
call
lret
inc
sarl
pop
add
nop
rolb
ret
xchg
xchg
and
in
aam
push
andb
loope
sub
cmp
shl
mov
inc
mov
mov
mov
in
scas
inc
push
popa
add
mov
ja
repz
xchg
cs
or
and
fidivs
fmuls
mov
call
repz
pop
and
lock
mov
pop
push
xor
push
sahf
js
pushf
sub
gs
cmp
push
mov
inc
dec
imul
icebp
in
mov
jp
mov
xchg
sbb
mov
jne
stos
add
mov
jmp
mov
mov
frstor
loope
sbb
js
dec
xchg
enter
dec
cmovle
test
jg
lret
lock
inc
push
mov
adc
sti
xchg
fstpl
out
in
sbb
mov
imul
jns
inc
or
xchg
mov
lret
mov
inc
mov
cmc
fiaddl
pop
pop
push
movsb
pop
lret
fnstenv
jecxz
push
loope
sbb
mov
sub
sbb
js
subb
pop
js
pop
jle
pop
xor
fcomp
fwait
cwtl
loop
in
push
dec
push
int3
ret
mov
push
in
pop
and
lods
pop
nop
imul
push
lods
inc
cmp
push
cld
jle
aaa
fimull
hlt
std
outsb
mov
icebp
movsb
loop
bound
pop
pusha
mov
push
cs
into
xchg
stos
push
in
push
out
push
jns
cwtl
mov
sub
fs
or
sbb
dec
jae
jp
push
add
cmc
push
loopne
notb
jbe
into
fbld
loopne
cmp
test
jle
rolb
subb
jl
lods
adc
or
and
push
mov
or
adc
dec
test
insl
lret
shlb
xor
pop
daa
shrl
adc
xor
mov
fcmove
cli
inc
test
sbb
icebp
test
inc
push
lds
xchg
stc
mov
nop
xor
test
dec
xchg
clc
ret
fisubl
insl
and
mov
mov
pop
insl
mov
sbb
push
sbb
mov
lods
jp
sub
subl
or
fsubrs
rolb
fadds
popa
sbb
std
push
sub
jne
mov
dec
and
sahf
loop
test
mov
pusha
test
cmpsb
int3
clc
push
insl
jle
mov
ljmp
xor
fisttpll
add
sbb
jae
pop
fadd
add
inc
popf
mov
arpl
jge
push
cltd
lahf
cmp
dec
cmp
into
xchg
cli
mov
push
popa
stos
xor
out
and
pop
lret
cmp
sbb
testb
cmp
dec
dec
mov
xor
inc
push
cs
negl
lahf
rcll
and
mov
gs
dec
test
fldt
int3
dec
xchg
push
ror
jle
lret
cmp
clc
mov
mov
daa
jne
mov
mull
cld
mov
and
or
test
lret
subb
or
lods
and
roll
les
movsb
mov
pusha
mov
lock
pop
jl
pushf
adc
icebp
push
push
into
and
mov
pop
push
decb
or
add
cmp
out
sbb
and
push
mov
loope
xchg
movsl
sar
das
pop
push
jne
loope
aam
gs
or
das
mov
cmp
push
cmpsb
daa
lea
out
mov
pop
hlt
sbb
outsl
mov
push
fisubs
jne
mov
adc
loope
cwtl
adc
test
pop
sti
mov
js
sbb
lcall
pmaxsw
adc
enter
popf
inc
jl
test
lods
or
inc
in
add
push
ret
adc
sahf
mov
into
shlb
nop
test
mov
and
ret
mov
out
fcmove
xchg
fidivrl
gs
xchg
add
cwtl
jno
and
rcr
xor
dec
xchg
push
mov
push
sbb
in
jns
mov
lret
inc
lods
inc
xchg
bound
mov
outsb
adc
outsb
loop
sub
cmp
shll
and
inc
sbb
mov
fs
mov
push
or
cmp
lahf
adc
lea
movaps
pop
pop
lahf
or
lahf
scas
and
daa
mov
loope
outsl
inc
aad
cli
out
pop
mov
pop
mov
push
fcmovne
dec
or
testb
mov
pop
orb
jge
add
add
lods
sbb
ja
mov
push
leave
sbb
imul
adc
sbb
aaa
inc
pop
jl
outsl
mov
pushf
sarl
and
lods
sbb
enter
gs
xor
mov
cmpsl
fisttpll
fnstenv
popf
in
fs
pop
and
out
cmp
add
xchg
decl
loopne
pop
push
icebp
out
movsl
jbe
xchg
dec
mov
fcmovnu
cmpsl
jle
cltd
and
jno
scas
jmp
lock
cmp
jmp
jmp
add
xchg
fldenv
rcrw
dec
inc
inc
shr
lret
jecxz
xorb
jg
and
ja
jno
lock
inc
sub
cmp
scas
pop
sub
andl
stos
xor
adc
push
cmp
pop
notl
in
xor
fisubrl
mov
mov
ret
xor
jp
push
adc
iret
loop
in
adc
fmuls
scas
pop
ljmp
or
xchg
push
jge
mov
push
add
mov
pop
jae
loopne
daa
movb
imul
xor
shl
mov
fstpt
mov
shll
adc
lcall
hlt
push
pop
inc
sub
ss
mov
fadd
fidivrs
fsubs
test
int
out
sti
out
data16
test
cli
popf
lods
dec
push
fmul
in
addr16
mov
fwait
push
xor
mov
pusha
add
adc
inc
push
push
xchg
aad
aad
stc
jl
push
sub
and
push
fsub
mov
or
int
sub
cmp
mov
aaa
xchg
inc
popf
pop
sub
stc
rcrb
mov
mov
notl
cltd
sub
in
aaa
xorl
lret
mov
mov
lret
dec
rorb
fnstenv
adc
push
mov
xor
popf
mov
test
push
sub
cmpb
push
push
lea
je
sbb
imul
and
adc
jae
mov
in
jne
push
xor
std
clc
ja
add
sub
xor
js
pusha
inc
cltd
cmpsb
xchg
xchg
dec
cli
cmpsl
stc
dec
mov
fs
jl
cmc
adc
rol
cltd
shl
sub
adc
ficompl
out
sbb
cltd
movsb
push
sub
fnstcw
ds
mov
push
push
cmp
rcrb
cmpsb
cwtl
push
inc
call
mov
sbbl
and
test
or
or
xchg
and
adc
inc
or
fiadds
jbe
sbb
dec
inc
ret
xchg
push
iret
in
jb
jnp
mov
push
fists
pop
mov
pop
dec
lea
push
adc
fbld
lock
fld
es
dec
jne
mov
out
pusha
cmpsl
test
sub
lret
and
stos
rcl
mov
mov
push
lea
cltd
sahf
pop
repz
lahf
imul
iret
xchg
movb
rorb
dec
stc
popf
sahf
nop
ret
push
sti
es
lcall
outsb
test
iret
andb
loope
int3
inc
outsl
cltd
cmp
sbbb
cmp
scas
jbe
pop
mov
jbe
adc
cmp
cmpsl
fst
xchg
pop
aad
into
sbb
lods
sub
adc
pop
push
adcb
mov
mov
jbe
sbb
int3
ss
jl
stc
mov
sbb
xchg
rcrb
ja
xchg
cmpsb
pop
mov
adcl
inc
inc
dec
or
jmp
call
mov
in
aas
cmp
shlb
pop
cmpb
xor
out
into
aad
adc
adc
cmc
cld
loopne
pop
cmp
fildl
push
xchg
hlt
mov
push
arpl
mov
mov
inc
fwait
adc
mov
xchg
pop
and
aad
fnstcw
aas
push
and
shrb
fdivp
jae
and
loope
cmpsb
ss
push
sub
test
cmpsl
fisttpll
mov
gs
call
adcl
in
jge
or
adc
inc
leave
jg
sti
add
aaa
pushf
pop
sbb
mov
xor
stos
inc
scas
pop
jp
lods
sarl
xchg
mov
int3
xor
inc
or
push
cmp
jno
jno
or
mov
and
fst
ret
fstpt
mov
push
jne
cmp
sbb
push
xor
add
stos
lahf
inc
push
xchg
loope
push
rcrl
push
sbb
push
ja
mov
mov
xchg
ljmp
call
mov
push
rcrl
jno
fcomp
fidivrs
xchg
inc
ret
aaa
jae
and
dec
bound
sbb
jo
pop
sbb
rorb
push
aas
mov
jbe
movsl
ret
out
pop
jno
imul
jp
fiaddl
in
out
movsb
or
cmp
in
ja
jmp
push
push
mov
sub
js
sub
pop
jp
pushf
stos
push
jno
push
mov
xchg
ret
fiaddl
ljmp
scas
mov
or
mov
xchg
mov
int3
pusha
pop
cmp
inc
add
das
cmp
jbe
lret
and
insl
insb
addl
rcrl
mov
repz
test
xchg
pop
sub
iret
ficomps
addr16
dec
in
or
mov
scas
lea
jg
mov
repz
repz
lahf
jno
das
jno
jecxz
add
mov
push
fildll
cmp
pop
xchg
test
sub
cmp
xorb
sub
iret
lret
xor
pop
and
inc
jl
loop
movl
inc
in
sbb
mov
lcall
pop
inc
pop
jecxz
cmp
sbb
xchg
hlt
mov
fwait
imul
inc
fistpl
sbb
fistl
sbb
cmp
mov
push
sub
scas
aad
mov
jmp
inc
lods
fadd
loop
pusha
rolb
lods
pop
popf
lods
mov
fisubl
mov
adc
aaa
lods
and
and
sbbb
and
bound
mov
xchg
dec
jbe
jp
jle
lods
aaa
ja
mov
xchg
dec
add
aaa
pop
inc
daa
in
cmp
das
les
or
enter
xchg
loope
das
mov
xchg
testb
divb
jp
out
orb
icebp
pop
jmp
data16
add
or
push
adc
fadds
in
cmp
jb
daa
cmp
cwtl
pop
mov
xchg
ror
cld
fmul
xchg
dec
repz
test
test
inc
cmpl
adcb
mov
cwtl
cmp
adc
push
je
fildl
pop
lret
or
xlat
stos
add
mov
or
outsl
dec
add
and
ret
xchg
push
jns
lcall
in
mov
push
cli
loopne
sub
pop
js
mov
cmc
outsb
popa
dec
shr
inc
test
jnp
push
out
icebp
divb
in
adc
mov
loopne
and
ja
mov
mov
int
std
sub
movsb
inc
daa
stc
arpl
push
adc
pop
lds
sub
xchg
pop
ret
mov
cld
cmp
test
sti
loopne
pop
add
lret
mov
aam
jb
add
clc
cmpsb
jmp
int
sub
testb
push
and
mov
icebp
pop
or
cmp
fistps
movsb
arpl
mov
fs
mov
mov
pop
push
and
sahf
pop
add
and
sub
sbb
cmpsl
arpl
aas
lcall
repnz
inc
in
mov
jmp
out
orl
mov
push
cwtl
adc
in
fidivs
inc
int3
sbbb
mov
popa
add
out
xchg
addl
ds
pop
shll
adc
mov
xchg
mov
push
xor
pusha
movsl
fldl
add
or
fucomip
sub
fimull
loope
int
sbb
pop
sub
push
mov
push
pop
add
into
pop
loopne
and
mov
mov
push
in
pop
movsb
xchg
push
xchg
pop
lea
push
inc
cmp
daa
lret
xor
inc
sub
cmp
in
adc
inc
mov
xchg
sahf
and
xor
add
jne
mov
dec
and
mov
dec
in
cltd
jnp
ret
pop
adc
mov
addb
aad
sub
aas
stos
fwait
cltd
sbb
adc
jbe
dec
pop
or
scas
xlat
shll
xor
inc
mov
arpl
pusha
adcb
sub
mov
cmpsl
push
pusha
jp
pop
ds
clc
mov
movsb
rorl
in
or
call
dec
jecxz
sbb
and
push
jl
loop
jb
jl
fs
pop
lahf
adc
out
aad
and
inc
aas
out
lcall
aaa
out
mov
aas
sbb
loope
or
lahf
dec
aaa
sub
cmp
stos
mov
je
test
and
push
cmp
shlb
pop
sub
lahf
inc
fstpl
aam
mov
cmc
or
pop
bound
es
cmpsb
xchg
add
clc
leave
popf
jns
push
push
mov
xchg
mull
cli
sbb
jmp
adc
or
xor
jbe
je
in
pop
and
dec
dec
rolb
xor
sub
imul
adc
xchg
out
push
cld
push
imul
lea
dec
clts
mov
imull
sbb
push
adc
adc
test
pop
pop
jp
leave
ret
cli
sub
imul
inc
push
mov
jge
adc
loopne
lods
leave
pop
test
sarb
jne
leave
aam
sbb
jo
les
in
sarb
adc
and
loop
xor
add
mov
fs
push
in
ds
sti
mov
je
xchg
pop
pop
enter
arpl
js
aad
lds
jae
lret
jbe
mov
ret
ljmp
mov
pop
shl
sub
pop
xor
pusha
std
test
inc
pop
inc
call
inc
shl
jae
xor
cmpsl
lods
dec
call
jecxz
or
cmp
popa
gs
sahf
xchg
sbb
add
es
jo
stc
pop
in
insl
es
pop
pop
or
icebp
xorb
pushf
mov
push
pop
push
xchg
aad
aam
test
int3
inc
or
aas
popf
pop
pop
pop
sbb
js
repz
pop
sub
sahf
xchg
test
pop
xchg
xor
xor
ret
pop
mov
or
aam
mov
lds
outsb
mov
lds
divl
in
mov
nop
push
fsubp
leave
aas
int3
xchg
mov
jbe
inc
adc
jg
lret
repz
cli
xchg
xlat
aam
cs
xor
jno
pop
jae
sub
clc
sub
push
icebp
rorl
fisubl
or
mov
orl
sub
orl
xor
out
lock
or
call
xchg
insl
pop
arpl
jae
cmp
hlt
popf
jp
xchg
int3
sub
ss
add
cmpsl
out
adc
jno
xor
dec
jb
daa
jge
dec
inc
cmp
in
mov
xor
fstl
leave
into
cmc
xchg
gs
or
je
lods
ds
push
movsb
sub
aaa
stc
xor
sbb
pop
lret
xor
mov
push
lcall
xchg
das
jae
scas
jnp
aad
cwtl
push
fiadds
ljmp
sub
mov
push
scas
push
test
daa
fisttpll
out
ljmp
pop
and
mov
hlt
lahf
gs
mov
cmc
call
orl
roll
or
jp
js
xlat
loopne
mov
inc
or
xor
add
dec
lock
mov
jecxz
sahf
cmc
sbb
popa
insl
std
test
in
xchg
pop
cs
inc
sub
dec
sub
sbb
mov
pop
xor
add
push
push
movsb
sbb
mov
cld
pop
mov
pusha
aaa
add
jecxz
pop
inc
mov
movsbl
add
sbb
dec
mov
cltd
mov
pop
mov
inc
mov
je
push
enter
cmp
aaa
fcompl
sbb
gs
fisttpll
and
test
mov
xor
in
clc
dec
gs
mov
inc
inc
es
xchg
lock
ja
outsl
scas
sbb
testl
adc
scas
movb
adc
jp
outsb
testl
push
andl
mov
sbb
outsl
shrl
jle
adc
jp
cmc
xlat
jbe
cld
jle
aad
pop
jp
push
gs
dec
sub
xchg
test
ss
or
leave
call
xchg
cli
dec
loopne
std
sub
subb
push
or
cmc
rcrl
aaa
push
mov
or
dec
mov
xor
pop
ja
xor
sbb
xlat
pop
loope
test
imul
fsubl
and
js
cmp
or
or
inc
pop
jnp
push
sbb
in
cmc
js
xchg
xor
jae
jno
jg
jle
xchg
loop
stc
addb
dec
out
shrl
movsb
xor
fldenv
stc
pop
shrb
inc
and
imul
lret
movsb
mov
imul
mov
insb
xchg
jecxz,pn
pop
fwait
insl
stos
inc
push
lea
dec
or
fbstp
pusha
xchg
lea
jbe
mov
xlat
lock
inc
jbe
push
pop
std
xchg
es
push
ret
fldcw
negl
push
pop
shrl
sub
push
push
loope
frstor
fs
lock
nop
cmp
cmp
scas
mov
sub
stos
or
inc
cmpsl
jmp
mov
dec
ret
xor
imul
mov
inc
out
mov
fmull
shl
cmp
mov
push
jbe
cmpb
sbb
mov
mov
nop
ds
jl
cmp
dec
pop
xlat
push
out
sbb
inc
daa
push
sub
pusha
push
sbb
shll
int3
add
push
xchg
jno
aad
xchg
in
in
mov
push
inc
add
inc
pop
mov
xchg
jecxz
cld
dec
adc
lahf
and
inc
ljmp
xchg
sub
inc
mov
mov
cmpsb
pop
out
add
sbb
adc
cwtl
jg
insl
mov
xor
mov
rol
outsb
adc
xchg
sar
in
jle
fadd
shll
mov
pop
lods
je
xor
fnstsw
fldcw
test
sahf
cmpb
mov
mov
and
shll
shrl
cmovp
jne
mov
pushf
cld
in
setno
pushf
leave
jmp
mov
inc
cmp
rcl
push
lret
insl
mov
mov
out
call
mov
sbb
popf
dec
or
insb
jg
in
repz
stos
sub
stos
dec
push
shll
mov
push
push
fs
test
and
mov
mov
outsl
jmp
test
cmc
ret
xor
pushf
fdivs
mov
mov
xor
mov
and
ds
imul
mov
pop
cli
inc
and
xorb
fistl
or
das
lea
adc
fisttpll
aaa
push
mov
hlt
add
or
pop
lahf
rol
out
mov
pop
adc
loopne
sahf
fildl
jg
pop
outsb
add
pop
or
hlt
mov
sub
cmp
inc
lea
xchg
test
dec
jbe
fs
into
or
mov
test
adc
iret
clc
nop
loopne
sbb
pop
stos
xor
sub
sbb
sub
loopne
lea
dec
jmp
jbe
scas
adcl
sub
add
cs
out
mov
out
loopne
stos
mov
jge
out
inc
shrl
hlt
inc
xor
gs
aas
lcall
add
adc
mov
orl
fldenv
adc
iret
mov
xchg
jecxz
leave
movsb
cmc
ficompl
add
and
dec
cmp
cmpsl
shlb
sub
into
punpcklbw
es
inc
xchg
int3
mov
je
push
cmp
xchg
mov
repnz
pop
ljmp
shrl
adc
test
std
add
inc
in
std
pop
sbb
mov
pop
fdivr
xchg
sub
mov
sbb
cltd
jmp
push
test
jbe
adc
int3
mov
push
gs
mov
fisubrl
mov
repz
pop
pop
sbb
stos
xchg
into
xor
pop
push
mov
aam
jne
leave
in
clc
adc
pop
push
fdivrs
stc
mov
pop
push
cmpb
xchg
lahf
dec
sbb
mov
lret
mov
imul
push
pop
xlat
cwtl
mov
ret
test
push
loopne
jecxz
insl
push
mov
in
xchg
cmpsb
gs
xor
inc
and
cmp
jns
sub
cmp
icebp
cmovb
stos
aam
fbld
jg
push
popf
mov
mov
xor
push
dec
scas
out
stos
sub
mov
fidivrs
shrb
insl
mov
hlt
inc
jne
mov
scas
cmpsl
pop
and
xchg
mov
xorb
rcr
movsb
repz
pushf
inc
sbb
fdivr
cmpsb
rcll
dec
pop
pusha
movsl
mov
xchg
je
mov
mov
adc
lock
je
push
add
or
pop
push
scas
xor
pop
push
movsl
pop
decb
into
stos
sbb
mov
bound
test
mov
jmp
cmpsw
pop
popaw
pop
lret
and
dec
pop
lock
pop
sub
arpl
sahf
add
lea
out
data16
xchg
jbe
cmpsl
repz
or
lock
inc
pop
jle
stos
test
pop
ret
ljmp
jae
pop
mov
xchg
xchg
out
push
js
xor
packuswb
enter
xor
jnp
mov
xchg
xor
xchg
inc
mov
and
jge
imul
aad
mov
loopne
negl
mov
mov
add
cmp
or
or
mov
ret
xorl
add
mov
cmc
and
jns
repz
inc
mov
gs
mov
stos
push
lret
mov
sub
jo
icebp
push
cmp
pop
popa
jo
and
pusha
and
sbb
bound
cmpsl
jp
jecxz
xor
cmp
dec
mov
push
inc
lahf
mov
jbe
push
sub
fstpl
lock
mov
cmc
pop
dec
push
insb
mov
lcall
push
cmp
mov
lods
sub
xor
movsb
outsl
sar
xchg
out
push
rorb
nop
dec
outsl
lock
mov
out
leave
or
ss
xor
cmp
xor
out
jmp
push
mov
xor
pop
imul
loope
in
loop,pn
inc
sub
xorb
fcomp
in
inc
aad
mov
fiaddl
in
aam
jp
ljmp
in
push
mov
xor
test
jno
mov
test
push
lret
push
jmp
out
mov
ret
xchg
pusha
aas
xchg
pop
jle
jg
jl
jge
push
faddp
clc
cwtl
jae
fsubs
aam
mov
adc
jne
pop
mov
sub
lds
pusha
mov
cmp
xchg
mov
inc
push
inc
inc
fidivrs
mov
stos
push
inc
jg
xchg
test
aad
adc
pop
pop
push
sub
jbe
sub
dec
push
sub
sbb
ljmp
lret
mov
mov
add
jecxz
ficoms
cmp
or
fisubs
push
hlt
in
popf
cmpsl
shrb
ret
rcrb
pop
dec
stc
mov
icebp
sbb
enter
icebp
or
aas
test
insl
mov
pop
out
push
repz
jns
into
cli
repnz
fstl
lods
mov
jbe
xchg
stc
or
das
dec
add
mov
inc
psubsw
decb
addr16
arpl
mov
aam
push
sbb
filds
daa
out
das
cmc
add
pusha
fdivrl
mov
into
mov
inc
fistpl
mov
xchg
xor
es
mov
jae
sub
js
btc
mov
mov
xchg
xor
xor
inc
mov
int
jmp
clc
fdivrs
and
insb
add
rcr
adc
or
pop
es
mov
loopne
test
enter
cld
stc
scas
dec
adc
into
clc
inc
leave
xchg
push
stos
cmp
clc
iret
add
pop
push
dec
push
lret
aaa
lcall
adc
xor
fisubl
call
shll
cmp
outsb
mov
test
lcall
cmp
lahf
or
ss
jg
jae
insb
add
lds
test
cmp
jb
movl
push
push
jnp
repz
imul
mov
push
sub
scas
hlt
push
test
loopne
hlt
pop
push
aaa
xchg
mov
cmp
test
cmp
das
repz
lea
andb
xor
sahf
mov
fists
hlt
xor
xchg
jbe
cwtl
decb
add
imul
xchg
pushf
ja
inc
push
test
sub
push
js
pop
scas
adc
sbb
test
xchg
mov
hlt
push
dec
out
scas
out
jb
lret
push
rorb
mov
cmp
mov
movl
jns
sub
popf
fimuls
aas
js
mov
shrl
shl
fdivrl
mov
out
gs
loopne
pop
inc
pop
inc
add
jns
fbstp
stos
test
dec
mov
xchg
jmp
cwtl
and
adc
add
adcb
xchg
mov
add
pop
test
push
or
xor
scas
test
sti
cs
movsl
test
pop
sub
sub
pop
xlat
xchg
adc
jae
dec
pop
mov
inc
mov
movsl
xchg
pop
xchg
mov
fs
fisubrs
inc
or
or
mov
sti
xchg
hlt
cmp
les
addb
mov
popf
std
ljmp
push
or
out
imul
xor
cwtl
in
jge
cmpsl
pop
loop
jge
addr16
and
or
fs
testl
sar
lea
inc
adc
mov
mov
das
sbb
jae
das
imul
or
adc
cltd
popf
push
lret
jmp
in
mov
mul
mov
jge
movsl
out
cmpb
jg
push
arpl
mov
dec
cmp
leave
mov
dec
nop
push
mov
mov
sub
aaa
sbb
test
or
cld
in
xor
add
mov
pop
push
aam
adc
xlat
sbb
dec
loop
decb
test
push
inc
lock
inc
into
fimull
fnstcw
in
andb
add
fwait
xchg
sub
jb
loopne
popa
push
ds
dec
ds
outsl
insl
testb
test
add
and
mov
cmp
sbb
sahf
aas
addb
fsubp
enter
stos
inc
inc
jle
sub
lods
cltd
dec
pop
add
cmc
push
jmp
jb
loopne
mov
mov
pop
mov
rolb
sahf
inc
lahf
lods
negb
add
or
xchg
jno
inc
fs
es
int3
sub
cmpsl
ror
mov
leave
or
cmp
mov
mov
xchg
adc
ret
xor
mov
fs
sbb
cmp
lahf
mov
mov
mov
lea
mov
js
xchg
imul
aas
xchg
push
js
jo
loope
and
enter
lret
aaa
mov
lods
jmp
pop
mov
pop
insl
test
lea
sbb
cmp
and
pop
adc
in
mov
gs
adc
sub
ljmp
stos
incl
lea
bound
imul
cmpb
sti
clc
fists
leave
xchg
mov
lods
mov
sbb
out
lock
xlat
mov
xchg
cwtl
cs
fimuls
in
pop
sub
cmp
jno
imul
pop
dec
inc
dec
sarl
cmp
outsb
dec
inc
mov
jb
out
insb
lahf
in
push
dec
mov
xor
stos
ret
jbe
shll
js
jle
pushf
inc
mov
iret
jge
ja
lock
jnp
pop
stos
cli
movsl
xchg
mov
adc
mov
lock
sub
jmp
add
es
mov
push
mov
mov
pop
loopne
sub
ret
mov
adc
jl
lcall
mov
psubq
xor
mov
test
fimull
sub
mov
mov
adc
dec
rorl
lods
xchg
xor
xchg
dec
jne
jns
mov
mov
and
mov
mov
les
dec
lods
adc
movsb
imul
shl
add
push
sub
js
imul
leave
jge
hlt
lods
rorl
stos
mov
test
inc
arpl
mov
sub
movsl
xlat
add
mov
add
mov
fucomp
sbb
cmp
ja
add
inc
pop
or
xor
inc
js
mov
xchg
jno
mov
sbb
mov
lods
xor
loop
addr16
shrl
mov
mov
mov
lds
gs
push
mov
movsb
adc
rorb
jmp
pop
shlb
adc
cmp
jge
lock
test
sub
mov
jg
cwtl
push
jge
xchg
outsl
cmpsl
into
pop
add
pop
jbe
decb
scas
test
jge
fistpl
xor
addb
pmuludq
pop
mov
push
gs
bnd
cmp
dec
push
xor
xchg
stos
out
rorb
pop
pop
xorl
jb
cwtl
adc
movsb
nop
addr16
jno
mov
cmpsb
push
out
fnsetpm(287
enter
repnz
out
lea
push
push
adcl
scas
leave
jns
inc
xchg
stos
movl
pop
pop
pop
sarb
dec
gs
or
push
orl
jge
jbe
pop
repz
cs
inc
sbb
fnstcw
inc
push
lea
in
jns,pn
call
mov
and
jno
jmp
sahf
sbb
inc
in
cltd
cld
mov
lods
dec
and
lcall
cmp
mov
adc
movsb
js
roll
mov
mov
out
cmp
cmp
stos
movsb
inc
lods
xor
xor
lret
xchg
cmp
pop
dec
and
pop
ja
int3
leave
push
fstpt
pop
shll
testl
aaa
repnz
add
jl
scas
nop
adc
jne
mov
adc
push
movsl
loope
sub
jge
sub
dec
clc
lock
adc
xchg
xchg
cmpsb
mov
jno
lret
inc
mov
jge
lock
clc
cmp
clc
inc
sti
testl
int3
pop
rorb
lods
xchg
or
or
inc
mov
cmp
add
jge
jae
mov
mov
fimull
inc
cltd
in
into
popf
rolb
lds
mov
aam
mov
lret
mov
and
xchg
jmp
push
mov
jmp
pop
gs
int
cmp
sbb
sahf
lea
addr16
pusha
add
push
mov
push
mov
in
aad
sahf
lcall
jae
sti
fs
or
xchg
cmp
xor
icebp
jge
cmpsb
push
repnz
mov
and
into
sbb
xchg
iret
test
mov
mov
cmp
jge
xchg
inc
adcl
test
andl
test
mov
fbld
pop
add
sub
negl
push
push
dec
dec
cmp
cmp
daa
adc
jge
cmp
aad
into
neg
and
push
and
xor
adc
out
mov
ret
dec
fildll
sti
add
xchg
lds
rolb
aad
es
push
or
push
push
push
mov
daa
hlt
fsubr
xchg
push
xchg
and
mov
xchg
imul
mov
mov
movsb
xor
leave
fnstcw
gs
mov
pop
ljmp
subb
shlb
lds
mov
jg
repz
and
cmpsl
pop
sub
xor
or
stc
xchg
repz
jbe
lea
int3
sahf
push
js
xchg
and
outsb
dec
aas
mov
cmp
jbe
call
movl
rcl
in
mov
insl
or
lret
inc
frstor
add
and
sub
adc
lods
fs
js
cli
jo
xor
or
out
cmpsl
add
mov
cmp
insl
rclb
loopne
mov
sub
cmp
lock
out
ror
mov
dec
and
daa
out
xchg
pop
jno
dec
push
add
adc
pop
mov
popa
push
xor
xor
rep
test
xlat
mov
std
cli
pop
dec
mov
lock
adc
inc
inc
mov
out
xor
mov
mov
cli
mov
dec
jae
ljmp
lea
insl
push
add
xor
popf
push
xchg
mov
aad
mov
xchg
cmp
imul
stc
push
or
ss
idivb
stos
cmp
mov
and
mov
notb
inc
std
rorb
movsl
sub
stc
xchg
xor
les
in
jmp
enter
cmpsl
jbe,pt
test
dec
inc
cmp
mov
adc
out
lods
ja
lret
add
sbb
pop
filds
popf
dec
stos
imul
push
cld
cmp
mov
insl
ds
push
fs
ja
jmp
inc
outsl
scas
repnz
test
adc
dec
push
dec
movsb
cmpsl
sahf
int
xchg
xor
je
cwtl
mov
mov
push
insl
aam
adc
test
dec
add
fistpll
aad
jecxz
pop
arpl
sub
lret
xchg
push
movsb
js
xchg
cmp
jp
mov
and
and
lock
call
fsubs
push
outsl
sbb
and
mov
repnz
mov
cmpl
mov
sub
mov
imul
shll
or
sub
stos
add
pusha
mov
or
int
cwtl
cmp
aam
sub
or
stc
push
addr16
mov
xor
push
dec
neg
popf
cmpsb
loope
test
rorb
rcll
adc
xor
sbb
aad
stc
insl
mov
outsb
imul
dec
imul
mov
out
fsubrl
mov
xor
in
push
pop
mov
cltd
xchg
addl
mov
dec
pop
cmp
xchg
mov
dec
das
es
sub
or
and
gs
bnd
and
fiadds
clc
mov
xchg
add
lahf
movsl
inc
or
lcall
pop
cmp
loope
add
cmpsb
push
in
xchg
sub
pusha
sub
inc
mov
and
stos
jmp
bound
xchg
dec
pop
sbb
or
js
icebp
jg
outsb
xchg
clc
push
xor
jmp
stos
imull
sub
mov
push
pop
xchg
mov
insb
out
pushf
pop
cmp
pop
aaa
lea
inc
fsts
or
mov
in
push
in
inc
push
addr16
inc
xor
scas
fdivp
gs
cmp
inc
stos
add
mov
sbb
xchg
fidivrl
les
push
int3
mov
jl
out
pop
and
mov
xchg
xchg
and
pop
push
imul
ret
lret
lahf
jge
dec
xchg
rolb
cmp
mov
fsts
jbe
cmp
cli
and
push
mov
jg
push
xor
or
out
mov
adcl
popa
fistpll
loop
sub
movsl
ljmp
je
push
push
insb
mov
pop
xor
stos
xor
pop
jbe
jb
insl
sbbb
inc
inc
xor
pop
cmp
inc
lods
fldcw
outsb
int3
or
xlat
shrb
jae
orb
stc
movsl
and
mov
fisttpl
loopne
ftst
popa
ljmp
push
aas
ljmp
out
es
push
mov
jg
das
mov
cwtl
rcrb
mov
add
sbb
cwtl
push
jo
cmc
cmp
rorb
cltd
xor
sbb
mov
mov
sar
insb
in
out
inc
pop
xor
roll
xchg
mov
mov
cmp
das
fidivs
xchg
outsl
dec
inc
call
xchg
xor
out
test
jge
or
in
mov
push
and
adc
push
stc
mov
mov
mov
orl
leave
jle
or
dec
mov
add
jecxz
add
repz
outsb
fsubrl
aad
ljmp
mov
iret
aas
sbb
movl
xchg
popa
sbb
and
andl
pop
mov
jg
lods
dec
pop
jbe
scas
or
pop
pop
sbb
jns
jp
and
dec
cmp
lea
decl
pop
dec
mov
insb
data16
add
cwtl
ljmp
add
mov
fbld
cwtl
int3
inc
lds
std
mov
movsl
cld
int
cmp
xor
pusha
xor
scas
mov
lods
push
int
push
pushf
mov
jle
add
jg
push
loop,pn
push
ret
int
pop
mov
add
lea
pop
bswap
xchg
ja
out
push
dec
leave
es
sete
mov
aad
addr16
clc
lds
orb
mov
jmp
and
mov
dec
mov
jle
cmp
pop
fsubl
xchg
stos
add
outsl
mov
cmp
and
cmpsb
subl
adc
cld
jge
stos
mov
sub
jle
out
mov
mov
xor
add
movsb
xchg
xchg
mov
js
and
cwtl
mov
inc
mov
imul
cmc
aam
push
sarb
jae
add
loop
shrb
mov
add
xchg
mov
mov
xchg
ja
xchg
dec
mov
jne,pt
dec
pop
cmpsb
cmp
jp
insl
imull
inc
dec
add
sbb
loop
jns
push
mov
push
ss
std
out
cmp
jnp
and
dec
push
mov
xchg
cmp
pusha
aad
insl
sahf
arpl
mov
test
xchg
dec
outsb
and
jb
lods
xchg
pop
mov
and
data16
out
inc
lock
cs
dec
loope
push
es
push
insl
lods
mov
dec
outsl
jp
cmp
push
xchg
int
lods
add
out
adc
jge
xchg
jecxz
inc
mov
xchg
fmull
pop
cmc
fst
test
into
outsb
or
xlat
jp
pop
in
jecxz
test
aas
aas
fmull
pop
mov
cwtl
leave
mov
shufps
sahf
push
ret
sub
bound
mov
push
dec
int
aad
mov
sub
sbb
dec
push
shlb
mov
add
mov
and
in
xor
ljmp
mov
rorl
outsb
adcb
add
rorw
sbb
adc
dec
cwtl
inc
cwtl
dec
mov
test
push
movsl
or
inc
dec
dec
cmpsb
insb
push
mov
cmc
sub
push
xor
or
sub
pushf
mov
call
cmp
push
add
sub
cmc
test
add
leave
xchg
adc
inc
popa
shrl
jnp
mov
mov
pop
fiadds
fwait
sbb
sbb
adc
scas
das
add
and
and
js
adc
mov
pusha
sbb
jge
aad
lock
das
or
ss
or
and
push
leave
loopne
gs
add
addr16
mov
iret
outsb
faddl
lahf
lods
xchg
outsb
xor
pop
sbb
sti
sbb
adc
lret
rcrl
stos
inc
add
mov
test
sti
fildll
imul
js
bound
popf
inc
and
cmp
btr
mov
out
adc
jp
std
sahf
add
cmp
jnp
mov
dec
std
xchg
fcompl
cs
ret
push
inc
xor
lret
mov
jecxz
push
data16
ja
leave
bound
fwait
jno
out
cmc
mov
dec
or
push
divb
repz
leave
xor
sbb
push
inc
mov
adc
push
aas
test
cmp
add
sbb
insb
insl
cmp
mov
pop
mov
push
leave
gs
push
std
nop
ljmp
pop
mov
jmp
ret
sti
inc
jl
or
xchg
mov
fistps
mov
xor
jp
fisttps
mov
sbb
repnz
mov
dec
subb
rorl
sbb
div
popf
fdivs
jne
push
jp
sub
stc
pop
lods
ja
pop
jecxz
mov
je
nop
and
iret
xchg
xchg
fistpll
int
dec
test
es
dec
inc
sbb
jnp
adc
insb
xchg
cmp
push
popa
subl
loopne
loopne
xor
pop
aas
xchg
mov
xchg
ret
mov
out
and
mov
cmp
dec
mov
xor
fmull
inc
xchg
xor
xor
test
xor
inc
fcomps
repz
fs
fisttpl
pop
push
shll
inc
push
dec
cmp
repnz
push
jge
xchg
dec
push
sarb
dec
arpl
inc
push
push
out
ss
cld
xchg
mov
shl
mov
pop
xchg
mov
in
stos
mov
inc
ret
iret
out
and
push
cmp
das
arpl
cmpsl
int
out
pushf
xorl
aad
les
push
sbb
lods
adc
inc
sbb
sub
pop
int3
mov
sahf
dec
inc
in
pop
stos
loope
push
icebp
shlb
loop
leave
std
out
xlat
mov
es
outsl
fcomip
cmp
cmp
add
fdivrl
sbb
lcall
dec
mov
movsl
add
sub
push
inc
jae
push
cmp
push
push
dec
subb
mov
pop
xor
cli
sar
push
lret
outsl
leave
out
push
pop
aam
dec
movsl
das
cld
mov
sub
mov
divb
push
pop
fwait
jecxz
imul
in
pop
sbb
add
xor
jnp
testl
roll
sub
inc
pop
js
mov
frstor
lret
mov
mov
gs
push
mov
scas
fisubrl
and
mov
mov
lea
or
mov
stc
and
icebp
xor
jb
test
and
outsl
inc
mov
sti
cwtl
and
adc
xchg
fildll
nop
fisubrl
or
and
or
ljmp
pop
jmp
lcall
sbb
pop
mov
cltd
pop
mov
and
sub
outsl
faddp
cs
ja
lock
mov
push
cmp
cmp
aam
push
mov
pop
push
adc
adc
in
lock
inc
mov
dec
addr16
inc
push
sti
cmc
jecxz
pop
jns
das
sarl
push
popa
out
push
xchg
push
fisttpll
xchg
ret
nop
push
xchg
out
shrl
sub
inc
aam
scas
stos
les
adc
sbb
push
in
sbb
mov
mov
push
outsb
lods
clc
aad
sarl
hlt
sub
test
inc
dec
loopne
iret
mov
cmp
mov
add
mov
push
popa
rcl
xor
mov
outsb
data16
push
je
mov
fisubrl
xchg
push
pop
jnp
xchg
test
mov
cwtl
jbe
jno
push
jnp
scas
cmpsb
in
inc
add
push
xchg
fsubl
test
fisubl
dec
mov
adc
xlat
fs
mov
jnp
pop
loop
lcall
jo
mov
stos
xor
push
push
or
mov
hlt
jl
mov
jp
ret
cmp
sbb
and
and
sbb
outsl
ss
jecxz
xor
mov
mov
outsb
cmpb
add
sub
pop
dec
mov
es
mov
ret
add
adc
dec
push
gs
lods
ss
das
movsl
jp
mov
out
test
xchg
movsl
mov
bound
nop
in
xchg
mov
popf
repnz
test
xchg
clc
jns
out
push
fsubl
push
pop
out
addr16
sbb
orb
add
adc
push
mov
push
movsl
xor
daa
stc
outsl
mov
into
std
pusha
punpckhwd
sbb
xlat
and
sbb
adc
clc
sbb
orl
push
cwtl
lock
cltd
bswap
cmp
les
or
testl
xor
xchg
imul
repnz
or
rclb
mov
push
movsl
aad
test
lods
outsl
inc
sub
insl
dec
xlat
push
shrl
imul
stos
shll
inc
clc
mov
pop
or
sbb
in
sbb
sbb
hlt
sbb
incb
scas
movsl
es
adc
cmpsl
imul
xchg
push
xor
push
add
dec
test
cmp
jbe
inc
js
add
xor
or
mov
aas
jmp
icebp
insb
push
cwtl
andl
addb
data16
ljmp
ficompl
fwait
jne
jae
push
jecxz
data16
repnz
xchg
mov
gs
sub
sbb
inc
adc
lods
movsl
mov
in
lahf
push
mull
das
mov
mov
lods
loopne
cmp
cmp
insl
jp
fnstcw
mov
js
adc
fcomps
repz
or
cwtl
nop
jo
push
pop
cld
lcall
bound
fcomp
insl
sub
push
xchg
and
cmp
cmp
fisttpl
sub
mov
fimull
add
mov
mov
inc
int
add
pop
mov
test
sarl
xchg
dec
lods
hlt
movzwl
js
inc
arpl
movsb
jle
mov
xchg
out
dec
orl
and
es
pushf
rclb
fcoms
cmpsl
xor
mov
lods
add
mov
fcmove
call
push
movsb
jae
dec
fisttpll
jl
nop
stos
sbb
sbbb
fisubrl
inc
imul
xchg
mov
aam
mov
inc
lock
cmpsl
inc
aad
mov
addr16
std
jbe
inc
test
or
or
in
jbe
fstl
ret
mov
mov
fwait
and
cmp
inc
popf
test
into
sbb
dec
jge
pop
push
fs
xchg
jno
fisttpll
leave
jbe
or
lea
sbb
xchg
push
cs
mov
jl
cmp
dec
sub
cld
mov
inc
std
jb
fldcw
mov
sbb
movsb
xlat
aam
rcrb
sbbb
int3
cmpsl
idivb
popa
push
jl
pop
xchg
dec
les
cli
fnstenv
inc
dec
ja
lret
mov
fs
rclb
pop
enter
loop
dec
dec
jp
jg
inc
fildl
cs
push
pop
dec
and
out
or
sti
insb
test
rol
out
std
loopne
das
aam
push
das
std
mov
loop
mov
sbb
loopne
and
pop
cs
dec
xor
sti
mov
jae
mov
jmp
or
popa
cmp
loope
dec
dec
loopne
push
mov
into
mov
inc
data16
jecxz
stos
xchg
popa
mov
pop
xor
push
and
loopne
pop
movsl
adc
stc
je
pop
cmp
call
add
sbb
sahf
out
in
push
adc
mov
adcb
in
xchg
or
inc
scas
xor
xchg
push
mov
sbb
mov
add
mov
push
mov
inc
dec
js
hlt
xlat
adc
int
mov
in
mov
pop
in
adc
pop
sbb
sbb
out
xchg
jo
add
cmpsb
neg
test
insl
adc
lret
cmp
icebp
xor
dec
fidivs
cld
mov
dec
fldl
stos
cmpl
imul
push
inc
sub
clc
and
das
fildll
jo
sbb
xorl
lds
imull
mov
repz
inc
aad
inc
call
out
mov
xor
xor
jecxz
sbb
lods
lcall
jp
jg
fildl
adc
jns
mov
subl
adc
pop
adc
push
or
sbb
mov
sub
adc
dec
pop
mov
out
cmpsb
dec
xor
testb
mov
fsubrl
sahf
pop
or
icebp
inc
or
jno
sbb
or
mov
cltd
je
lahf
pusha
cmp
fimull
jae
mov
cld
lahf
sub
cmp
fmuls
into
push
pushf
push
push
sarb
nop
mov
mov
push
addl
pushf
mov
jecxz
jne
inc
fwait
hlt
inc
out
pop
call
push
bound
movl
pop
jmp
and
mov
stos
lods
insb
inc
inc
insl
ret
dec
scas
cmc
and
dec
imul
inc
adc
inc
pop
cld
xor
arpl
test
mov
out
cmp
lahf
into
in
stos
test
jp
daa
fidivrs
xchg
pop
xor
xchg
dec
call
cmp
dec
ret
mov
lcall
mov
popf
jbe
sbb
push
imul
sub
jg
xchg
push
xor
cmp
push
in
or
mov
addr16
sub
insb
sbb
pop
fs
sbb
jae
pop
jmp
imul
jecxz
cmpsl
adc
arpl
and
test
mov
jo
mov
outsb
imul
in
test
test
enter
fmuls
add
mov
jne
shrl
aas
js
imul
test
sbb
adc
inc
pop
push
in
aaa
adc
cmp
sbb
fstp
pop
or
shll
pop
cmp
enter
add
jbe
call
push
push
int3
add
push
stc
fmull
jge
jns
add
inc
xor
push
sbb
jae
push
push
data16
lcall
cmpsl
das
add
leave
shlb
out
aam
lds
ret
rorb
mov
jle
mov
shlb
xor
out
arpl
pushf
loop
xor
and
pushf
inc
cli
push
mov
nop
add
dec
movsl
mov
cmpsb
fnsave
jmp
ret
clc
lods
mov
adc
jmp
jmp
arpl
sbb
je
mov
dec
mov
xchg
lea
jp
inc
pop
pushf
mov
xchg
mov
dec
sti
pop
je
out
jnp
frstor
fildl
mov
je
stos
aas
loop
outsl
sbb
sbb
add
das
addr16
cmp
pop
pop
cmp
jns
stos
mov
sub
cmp
mov
addr16
add
cmp
lret
sbb
xchg
push
cvtdq2ps
in
pop
lahf
inc
sub
test
push
inc
mov
and
add
jp
jle
lahf
inc
decb
cmpl
or
push
jae
scas
call
xchg
adc
dec
fcoms
dec
loope
popl
mov
je
test
dec
mov
in
fsubr
jns
fdivs
jo
sarb
push
push
fidivrs
dec
sti
jp
ret
or
mov
insb
sbb
cmp
mov
aam
mov
inc
sahf
inc
enter
rcrb
daa
icebp
inc
xor
and
sar
adc
sbb
test
pop
mov
xchg
mov
pop
add
int
mov
pop
pushf
sub
insl
out
aas
sbb
lea
idiv
cmp
sbb
fistpl
clc
pop
fsts
pop
cmc
add
inc
test
mov
mov
inc
xchg
sbb
or
mov
pop
xchg
dec
cli
cmp
inc
dec
repnz
xchg
clc
cmp
repz
mov
dec
imul
jae
nop
xchg
sti
stos
mov
fs
dec
fcompl
cmpsb
pop
pushf
mov
jge
mov
addr16
jmp
cmpsl
xlat
aas
sbb
mov
xor
js
sbb
lret
inc
sbb
push
inc
sub
lahf
sbb
sbb
mov
fwait
sbb
xchg
sbb
out
cmp
push
mov
and
add
mov
push
nop
dec
fsts
mul
les
add
scas
pop
dec
xor
popa
fdivrl
mov
xchg
fcompl
mov
push
mov
cmpsl
out
in
push
xor
push
mov
xchg
adc
jae
xchg
decl
add
loop
sbb
add
mov
or
call
mov
dec
mov
push
rorb
and
pop
pop
xchg
fld
cmp
int
in
inc
cmc
xor
dec
fdivrl
rorb
stos
lock
bound
or
fs
mov
jecxz
sub
push
test
push
sbb
mov
push
inc
sub
jl
and
into
repnz
nop
out
ja
ret
mov
jo
pop
pop
sbb
sub
sbb
pop
shll
incb
push
shlb
xchg
pop
or
or
and
out
jmp
pushf
stos
loop
xor
or
mov
sub
mull
jg
test
push
scas
fisubrs
ret
xorl
add
xchg
mov
leave
daa
pushf
push
mov
xchg
mov
xchg
xchg
jge
mov
repz
xchg
jp
loopne
push
jbe
sbb
scas
push
orl
mov
and
push
iret
lahf
jno
mov
sbbl
push
push
out
xchg
jge
int3
mov
add
sbb
insb
int
sub
nop
ret
mov
adcl
jae
fisubl
xor
outsl
adc
popf
addr16
mov
cmp
xlat
and
cmc
jle
lahf
fstpt
icebp
sahf
or
adc
scas
aas
mov
lret
sub
push
push
pushf
or
mov
pusha
xchg
or
test
pop
ror
ljmp
cld
pop
mov
adc
leave
jb
cltd
dec
sarl
mov
fisubrl
push
cmp
pushf
cwtl
push
call
cmp
dec
jno
xor
stos
mov
fdivl
sahf
nop
and
fsts
and
mov
iret
fs
cmp
jnp
lret
xor
pushf
aaa
rolb
ljmp
mov
jecxz
adc
negl
dec
sbb
mov
push
xlat
neg
mov
fmul
les
imul
xor
ficompl
fsubs
cs
ljmp
test
test
arpl
mov
fldl2t
test
out
mov
xchg
popf
stos
dec
sbb
sarb
pop
inc
jo
pusha
or
adc
mov
inc
sub
cmp
pop
arpl
xor
push
ret
outsl
repnz
or
hlt
pop
push
xchg
pop
mov
fildl
jae
stc
sbb
dec
cmp
xor
xchg
imul
xor
imul
or
push
bound
callw
in
adc
fsub
ljmp
xlat
xor
push
mov
jp
fsubl
icebp
out
syscall
or
xchg
add
xor
icebp
fwait
adc
mov
inc
rcr
scas
xchg
push
loop
mov
iret
mov
popa
jbe
pop
sahf
jnp
lock
test
mov
lret
ja
out
daa
xchg
push
insl
cltd
jne
sbb
ja
out
push
inc
out
pusha
pop
lret
xchg
int
xchg
and
mov
ljmp
cs
pushf
cli
fisubl
mov
out
add
sbb
fs
cwtl
outsb
addr16
push
test
lods
cltd
jg
mov
and
sbb
lds
push
sub
ffree
jae
xlat
inc
lret
adc
testl
jge
cmpsl
and
or
jmp
hlt
adc
add
jge
hlt
xchg
inc
push
outsb
sub
ret
sub
outsb
cli
mov
sbb
and
rcrb
mov
cmp
add
repz
mov
insb
lods
popf
inc
cmp
outsb
and
jno
pusha
ret
inc
or
xchg
xor
dec
dec
sub
xor
fcmovnb
ljmp
mov
cli
jl
int
mov
push
pusha
std
or
push
rol
lret
pop
and
dec
inc
mov
mov
sbb
mov
push
jb
fldl
and
rcll
fwait
and
mov
xchg
jnp
enter
leave
push
add
push
scas
xor
in
ret
inc
mov
cmpw
adc
and
or
sarb
loope
cmp
vcvtps2pd
in
aas
cmp
mov
mov
mov
notl
aad
cwtl
sbb
aas
xor
jl
pop
in
cmc
add
mov
mov
pop
mov
dec
daa
push
js
outsl
add
ss
jecxz
rcrb
in
cmpsl
cmp
inc
cmpsl
aaa
ss
loop
rorb
sub
jbe
dec
rcrb
outsb
mov
cltd
xchg
aam
push
pop
and
pop
cmp
mov
push
push
les
fdivs
sbb
adc
stos
jae
cwtl
in
mov
repz
jp
xor
sarl
or
mov
push
pop
adc
inc
xchg
adc
sahf
and
ficomps
inc
mov
sub
and
imul
mov
test
scas
in
mov
xor
lea
pop
xchg
jge
testl
and
hlt
push
aam
pop
in
or
imul
imul
sbb
int
cwtl
rcrl
cs
nop
ret
sti
and
shlb
adcl
movsl
popf
push
xor
hlt
loop
outsb
dec
pusha
in
leave
or
push
sbb
jmp
mov
xor
out
mov
sbb
pusha
jbe,pn
out
loopne
mov
xchg
insl
testl
mov
mov
fistps
and
stos
inc
jle
sbb
insl
adc
out
call
iret
sbb
lret
es
sub
push
mov
mov
das
lcall
mov
aam
jno
mov
and
and
mov
lock
int3
pop
sub
push
andb
xchg
mov
data16
add
mov
or
mov
out
mov
jnp
dec
mov
jne
jle
or
in
add
fcoms
test
popa
popa
mov
and
in
sbb
out
mov
xor
jge
jl
hlt
cmpsb
mov
sub
das
orl
insl
insb
aam
push
movsl
pop
jbe
frstor
add
cwtl
mov
sarb
adc
inc
pop
xchg
dec
sbb
nop
pop
cmp
test
and
cmpsb
adc
stos
aaa
jne
jge
cmpsb
push
mov
aas
jecxz
lahf
or
iret
loop
dec
jle
jp
ss
lea
js
jnp
adc
adc
mov
adc
push
xchg
push
ret
call
ret
adc
or
imul
loope
mov
add
sub
je
test
sbb
lret
mov
mov
sub
inc
mov
je
dec
imul
fwait
es
mov
int
lds
push
arpl
pop
push
mov
jo
mov
in
mov
mov
insb
loopne
std
lock
inc
in
xor
mov
push
xchg
mov
sub
jecxz
andb
fists
sbb
enter
and
nop
sbb
jle
repnz
idivl
or
dec
lods
pop
jle
imul
rorb
test
sbbl
iret
out
sbb
mov
mov
inc
xchg
adc
lea
pop
cmp
inc
cmpsb
mov
bound
shl
and
cltd
daa
mov
hlt
subb
in
insl
bound
aaa
lcall
mov
daa
add
stos
jbe
cmp
push
fcmovnb
ret
push
lahf
xchg
push
ljmp
aam
dec
dec
je
inc
scas
mov
pop
and
enter
test
pop
xor
lcall
xchg
arpl
and
add
pop
sbb
int
inc
or
in
pop
or
movsb
icebp
scas
adc
sbb
adc
dec
push
lea
movsl
rorl
add
pop
xchg
mov
inc
fsubrl
pop
test
cmpsb
lock
movsb
mov
jnp
add
and
jecxz
lahf
xchg
ret
mov
addr16
xor
inc
xorl
pop
shlb
mov
in
pop
outsb
cs
and
int
pushf
jecxz
jne
pop
cld
popa
pop
jge
cmp
cltd
aam
mov
pop
mov
cmpsl
xor
repnz
imul
lcall
push
mov
adc
mov
std
divb
inc
lahf
sti
mov
call
sub
dec
aas
and
ficoms
sbb
adcb
andl
add
cmp
pop
fdivrs
sbb
nop
enter
adc
xchg
fdivrp
inc
mov
subb
jmp
jmp
and
xchg
dec
push
ss
sub
sub
lods
pop
orl
jne
idivb
out
mov
cld
movsl
addr16
data16
mov
mov
clc
and
loopne
mov
jo
push
mov
loop
pop
xor
js
or
mov
fsubs
outsb
mov
inc
jmp
jbe
sub
fists
lret
hlt
mov
shrl
pushf
inc
enter
jno
dec
mov
sbb
and
dec
and
and
in
movsl
xchg
cmp
mov
mov
pop
sbb
cli
ret
push
inc
adc
xlat
xor
xor
clc
push
lahf
inc
sub
test
and
add
rcrl
sub
jecxz
in
or
test
loop
pop
dec
and
sub
ret
test
mov
mov
inc
sbb
movsb
cs
dec
adc
inc
xchg
xchg
mov
out
jp
cmp
jg
or
dec
lds
jmp
jnp
pusha
xlat
push
sub
loop
xchg
mov
cli
rcrb
gs
std
fistpl
jle
jp
sub
movsl
xchg
das
sub
into
aaa
dec
cmp
fildl
frstor
out
jg
and
ja
sbb
clc
insb
out
out
add
outsl
dec
sti
sub
or
shl
dec
xchg
mov
mov
stos
lret
sbb
and
clc
nop
pop
xchg
mov
lcall
repnz
je
shrl
jmp
adc
jmp
sub
inc
movl
inc
dec
sbb
xchg
mov
push
pop
test
rep
inc
ret
test
cmp
fcompl
mov
orb
popa
mov
in
movsb
sarb
dec
cld
or
sbb
cmovs
ret
sbb
shlb
sbb
movsb
push
xchg
jmp
cmp
out
jae
pop
ret
sbb
xchg
add
rol
mov
sbb
cli
fsts
push
fsubs
fsubrs
mov
ds
mov
push
shl
add
orb
mov
sub
inc
testl
ljmp
mov
push
cmpsl
mov
addr16
jmp
xlat
cmp
dec
mov
es
stos
js
int
pop
sub
cmpsl
xor
insl
push
imul
adc
xor
jmp
fsubs
ficompl
test
lret
jae
or
arpl
popf
aas
sbb
outsl
dec
and
lock
adc
mov
and
push
pop
pop
mov
out
test
xor
lahf
sub
mov
nop
inc
mov
in
adc
jecxz
mov
lcall
daa
lret
aam
sahf
push
adc
fs
push
ja
mov
and
fxch
inc
mov
aaa
sub
cli
sub
icebp
testl
loopne
iret
sarb
mov
mov
iret
mov
insb
mov
pop
cmp
out
pop
sub
inc
dec
lock
and
cs
jecxz
or
mov
mov
xor
pop
lret
mov
jmp
daa
add
and
fbld
in
arpl
rol
dec
sbb
ss
and
add
xor
jle
out
xchg
and
ja
sbb
repnz
mov
and
call
inc
js
sub
adc
addr16
cmpsl
inc
mov
outsl
jo
daa
jg
data16
mov
out
loop
cld
xor
mov
lods
jae
sbb
ja
roll
jne
pushl
mov
loop
ja
lret
mov
in
dec
aam
or
pusha
mov
out
push
andb
sbb
lds
fistpll
leave
mov
mov
mov
loope
add
orl
or
popa
ja
notl
xlat
leave
call
test
pop
cmp
xchg
jnp
in
push
xchg
leave
nop
add
xchg
bswap
adc
inc
jo
sbb
sub
mov
or
outsb
scas
loop
add
imul
in
or
imul
and
cmpsb
lds
mov
push
and
xchg
mov
lcall
stos
pop
das
xlat
cs
pop
xlat
fwait
sub
imul
test
mov
in
mov
xchg
mov
fdivrs
icebp
loopne
test
testl
sti
loop
int3
and
xor
xor
push
shll
popf
jno
pushf
xor
stos
cmp
push
push
mov
lods
xorl
mov
mov
cmp
xor
xchg
jmp
mov
sub
pop
adc
or
and
sti
bound
mov
repnz
pop
push
loop
ficoms
lods
mov
pop
dec
adc
cmp
cmpl
das
inc
test
push
jge
sub
mov
xchg
rcr
iret
adc
and
fildll
mov
sarb
add
xlat
cmc
inc
and
add
mov
sub
or
insb
adc
hlt
mov
aam
incb
pop
add
jne
cmp
or
or
sub
out
jg
sbb
sarl
iret
shl
loopne
jge
rcrl
ljmp
rorl
repz
dec
aaa
jo
mov
or
into
or
cmp
mov
hlt
ret
out
xchg
movb
add
lds
cmpsb
test
add
mov
nop
outsb
mov
test
in
jg
cwtl
test
or
mov
dec
cld
mov
cmp
jecxz
mov
adc
or
xchg
fsub
dec
sbb
push
jl
leave
xlat
aas
and
sarl
pop
clc
std
xor
out
int3
push
enter
add
imul
imulb
sbb
add
frstor
ljmp
and
mov
cmpsl
push
lods
aaa
add
das
adc
push
jne
repnz
push
cs
dec
aaa
adcl
inc
ljmp
add
mov
inc
stc
mov
push
mov
scas
adc
pop
es
dec
xchg
aas
jae
scas
and
imulb
xchg
inc
movb
stos
ds
cmp
fisubrs
mov
sarl
xor
sub
lahf
xchg
les
in
jmp
aas
repnz
mov
movzwl
pop
test
xchg
xchg
mov
jmp
mov
lahf
cwtl
dec
inc
pop
lods
sub
pop
enter
jne
push
jnp
out
lahf
scas
inc
jmp
in
cs
pop
aas
sub
clc
lds
jae
fdivl
rolb
testb
xchg
addb
push
popf
pop
cmpsb
sbb
call
shrb
pushf
mov
or
xor
sub
sbb
int
enter
xchg
lcall
lea
ret
mov
add
inc
mov
or
cmp
aad
push
movsl
lcall
xor
mov
mov
xchg
inc
ret
test
cld
call
pop
jnp
test
lods
fbld
addr16
inc
mov
popf
cmp
arpl
or
and
fildl
push
and
out
adc
mov
pusha
cmp
pop
icebp
pop
sbb
icebp
pop
das
sub
sbb
add
ret
mov
sub
push
out
in
sbb
scas
cld
and
cmc
popf
mov
inc
dec
mov
roll
pop
and
mov
inc
cs
sub
in
mov
popa
pushf
ds
add
lret
icebp
xor
push
rol
jg
sbb
jae
mov
mov
sub
es
adc
leave
jp
aam
jbe
in
jae
test
cmp
loopne
inc
out
xchg
cltd
shrb
inc
mulb
fldt
pop
bound
jmp
xchg
inc
add
sarb
cmp
stc
inc
sahf
in
shl
dec
into
or
sub
or
pop
in
sub
push
int
inc
inc
cld
mov
cli
xchg
out
jns
mov
popa
cld
outsl
and
aad
adc
loop
dec
push
fxch
jecxz
pusha
cmp
loope
shlb
pushf
mov
inc
xchg
hlt
mov
flds
xor
jecxz
cmpsb
jle
ret
or
insl
stos
in
jecxz
rcrl
dec
or
popa
stos
mul
ss
dec
sti
push
js
rclb
mov
sbb
mov
xorl
push
mov
or
and
cmp
mov
pop
adc
shl
pop
movsb
sti
lret
or
mov
mov
xor
or
lret
or
fs
mov
fst
les
mov
addb
mov
push
mov
jb
scas
xor
fnstsw
shlb
pusha
mov
sbb
repnz
pop
sbb
jo
in
dec
pop
jne
pop
lea
ljmp
add
or
inc
pop
mov
sbb
adc
sbb
paddsb
das
inc
jmp
inc
cwtl
lret
test
cmp
push
dec
pop
repnz
daa
xor
pop
ret
aam
jge
and
adc
cmp
mov
mov
jnp
sbb
test
inc
adc
mov
mov
fistl
sub
jbe
xorl
xchg
jecxz
in
cmp
aad
out
mov
add
sbb
inc
sti
adc
pop
and
jge
pop
push
and
pop
dec
arpl
in
add
lahf
mov
sbb
sub
sahf
mov
fwait
mov
mov
sub
fnstsw
add
cmp
lea
hlt
sub
jns
cli
push
xchg
stc
mov
inc
cmp
mov
or
leave
pop
ja
lods
xor
inc
pop
cmp
dec
cmp
and
xor
bound
mov
jle
jl
xor
popl
mov
add
pop
and
loope
dec
add
xor
test
lods
loop
add
jno
ss
pop
repnz
push
lock
fs
push
dec
xchg
je
cmc
stc
das
mov
pop
sbb
or
push
out
aad
rcl
fldlg2
data16
aam
leave
sbb
rcl
inc
je
push
add
pop
mov
cli
jae
ds
push
sbb
pop
ret
mov
loop
jle
jmp
aam
push
push
sub
cltd
test
jle
pop
inc
in
jns
insl
fdivrl
fcomps
imul
inc
rcrl
sub
jmp
jge
push
xor
pop
adc
icebp
jne
and
mov
jno
fs
push
sbb
mov
push
adc
jne
jecxz
shll
mov
xor
xchg
and
repz
out
loope
mov
jge
sbb
pcmpgtd
inc
loope
out
dec
xlat
xchg
stos
gs
dec
cltd
sbb
stos
xchg
sbb
adc
addl
imul
das
out
lcall
ud2
out
idivl
jge
dec
and
call
adc
sbb
scas
jle
cs
mov
jmp
test
xor
lret
mov
xchg
lds
inc
sti
push
in
sub
mov
cmp
lods
int3
not
loope
jnp
stos
loop
and
neg
dec
mov
test
scas
enter
mov
mov
fisubs
frstor
fildl
add
roll
mov
aam
sqrtps
outsl
cmp
andl
pop
jo
xchg
iret
adc
mov
jo
je
js
int3
roll
push
test
out
add
lds
mov
popf
add
jl
jns
cmp
ja
js
add
and
ret
mov
adc
and
stos
hlt
jl
daa
or
jb
int
testb
xlat
jne
ja
inc
lahf
mov
or
sti
adcb
scas
into
mov
mov
mov
lcall
mov
sarb
cmp
insl
mov
popa
push
push
ret
adc
shll
mov
pushf
cmp
test
sbbl
ret
std
sub
jp
rorl
add
pushf
xchg
push
lods
testl
stos
pop
imul
aaa
mov
dec
subb
lret
in
push
lret
out
ret
cmc
jo
insb
nop
dec
decb
dec
test
ret
sti
lahf
pop
sub
and
push
push
cmp
insb
adc
sub
test
imul
sbb
sbb
iret
jns
lock
dec
out
adc
fdiv
pop
sub
inc
pushf
pop
mov
mov
sahf
mov
dec
push
or
int3
mov
inc
cli
jecxz
xor
push
imul
loopne
mov
cltd
fdivs
add
stos
mov
push
sahf
lea
out
pop
sub
adc
mov
pop
out
adc
add
stos
int3
sti
loop
or
aaa
daa
fldcw
jb
xchg
cmp
xchg
lds
ja
pushf
cs
cwtl
movsl
xchg
ja
xchg
js
xchg
rcr
and
je
mov
mov
js
shlb
adc
pop
notl
mov
icebp
jp
sti
fwait
dec
push
push
aad
inc
pusha
lcall
cmp
push
adc
mov
mov
xchg
mov
jle
push
movsl
xorb
in
sub
lods
mov
cmp
mov
xor
pop
loope
adc
movsl
pop
loop
jae
mov
mov
popf
gs
add
stos
sbb
repz
and
cld
sbb
idivl
inc
xlat
adc
push
cltd
jecxz
mov
mov
jb
in
ret
inc
adc
out
xor
daa
rorl
mov
call
cmpsl
mov
pop
xchg
dec
or
cwtl
xor
lods
sbb
inc
pop
lret
or
shrl
rclb
cmpsl
lods
js
loope
stc
popa
outsb
push
jmp
push
mov
subl
lea
xor
dec
popa
imul
ss
xor
push
jecxz,pn
das
jg
imul
jnp
and
mov
mov
add
insl
adc
or
or
jno
sbb
add
and
pop
and
jnp
addr16
inc
mov
mov
push
lret
dec
xor
cltd
mov
pop
xor
lret
mov
and
mov
aas
outsb
adc
fs
iret
pop
in
lret
sti
sub
cmp
add
shll
cmpsb
scas
jmp
sti
add
add
push
xchg
out
sbb
fs
mov
xchg
xchg
mov
push
or
into
fs
jl
lret
mov
cmp
loopne
stos
shr
adc
ret
mov
xchg
ljmp
inc
xchg
fisttps
jmp
idivb
sub
shrb
dec
add
mov
cwtl
and
dec
mov
into
inc
test
add
mov
sub
ret
lret
incl
jecxz
sbb
inc
or
push
int3
sbb
bound
dec
pop
aam
adc
cmp
mov
movsl
mov
inc
scas
daa
mov
ss
ret
sbb
xor
lods
data16
xchg
sub
ret
pop
sbb
sub
push
dec
cltd
cli
push
jle
mov
aas
insb
add
sti
lahf
addr16
sti
cld
loopne
mov
aad
out
xor
add
shll
repz
mov
cltd
push
adcl
push
xchg
dec
in
aaa
pop
xchg
jg
aam
adc
sti
xor
mov
inc
mov
imul
dec
xor
fcmovu
xor
add
pop
lret
pushf
cmp
cmp
loopne
add
out
or
sbb
clc
ss
cltd
push
lret
ret
cmp
inc
out
clc
pop
xor
fnstsw
out
mov
fldl
add
or
or
lahf
stc
imul
icebp
pop
aaa
mov
aad
dec
jmp
push
cmp
mov
clc
pop
lahf
fmuls
dec
pop
lods
rcrl
inc
hlt
call
xchg
add
mov
add
ret
pop
mov
shll
add
call
lods
sub
bound
pop
or
jl
imul
out
or
lock
push
jl
dec
dec
xor
call
loope
or
push
add
pushf
mov
das
addl
jb
dec
push
loope
into
cmpl
mov
ret
cmp
lcall
ljmp
popa
jle
popa
test
les
dec
out
inc
cmc
cmp
push
cmp
in
sub
mov
sbb
mov
shll
in
sub
inc
add
scas
dec
pop
dec
sub
addr16
scas
mov
xor
xor
and
adc
adc
add
adc
fidivs
daa
int3
leave
stc
push
insb
or
jno
into
jbe
ret
sbb
int
jecxz
push
jle
adcl
pusha
adc
or
or
ss
xor
fdivrs
push
pushf
mov
mull
xchg
sub
adc
sbb
inc
mov
add
cmp
cmp
or
dec
lds
in
cmp
inc
inc
mov
push
xor
shlb
or
xchg
shld
clc
sbb
or
scas
adc
add
sbb
pop
cmp
xor
push
push
rorl
leave
jmp
dec
shrl
fisubl
loope
adc
adc
and
lret
mov
mov
es
jg
inc
mov
fs
icebp
into
mov
daa
scas
imul
cmpsl
loop
iret
mov
dec
aad
sbb
jge
enter
push
jecxz
sub
push
pop
push
xlat
xchg
xor
dec
rorb
cwtl
fidivl
insw
lret
push
jbe
rorb
inc
lret
add
sbb
sbb
sahf
loope
iret
cli
jb
lcall
icebp
lret
addb
push
jle
clc
push
dec
sub
stc
cwtl
cwtl
cltd
cli
xchg
sbb
pop
movsl
jnp
inc
bound
popa
mov
rcl
cmp
sti
inc
incb
icebp
xchg
pop
popf
inc
push
scas
cmpsl
lods
mov
addr16
xchg
jne
test
stc
stos
xchg
mov
stos
cli
ss
add
test
out
clc
loop
in
dec
add
adc
xor
sbb
insb
add
mov
pop
into
jecxz
and
in
scas
movsl
rorl
jmp
or
fwait
dec
mov
add
xchg
add
sti
sub
jno
daa
mov
add
mov
pusha
js
test
cwtl
push
es
xor
dec
xor
ret
pop
pop
arpl
imul
enter
idivl
test
mov
and
movsl
dec
test
cmp
mov
xor
sub
sub
pop
jl
nop
mov
xchg
outsl
dec
and
enter
cmc
out
sbb
popf
mov
mov
icebp
and
add
into
push
ja
outsb
add
mov
ficompl
std
push
pop
sbbl
or
xor
data16
push
xchg
dec
xchg
sub
mov
mov
xchg
pminsw
lock
out
mov
mov
nop
jge
jge
repnz
push
mov
sahf
sbb
pop
out
cmp
testb
out
push
mov
xchg
or
xor
pop
jl
xor
lahf
inc
xchg
mov
jg
adc
in
mov
inc
test
mov
pop
repz
xchg
call
xchg
xchg
dec
jbe
daa
push
push
xor
mov
daa
std
push
mov
inc
mov
mov
lock
imul
pop
add
cs
jecxz
mov
popf
jle
xchg
jb
add
jo
jno
divb
add
mov
loopne
bnd
repnz
xchg
ja
or
jl
mov
or
hlt
in
fisubs
fmuls
cld
push
insb
repnz
ja
mov
hlt
xchg
pusha
push
jmp
lock
cmpsb
popf
xchg
mulb
jmp
in
xchg
aad
and
scas
mov
or
int3
pop
sbb
jg
jg
insb
jmp
adc
jecxz
loopne
loopne
xchg
xor
jno
mov
inc
sbb
xchg
lods
stc
xor
jp
mov
pop
fnstenv
jg
dec
push
xchg
jmp
jecxz
push
inc
loopne
pop
xchg
cwtl
arpl
fildl
rcr
push
inc
pop
push
pop
lds
test
mov
or
sbb
add
lahf
inc
jecxz
js
sti
stc
cmp
lea
inc
xor
mov
xor
fmul
mov
gs
xlat
inc
mov
push
sbb
pop
js
loopne
popa
test
mov
icebp
inc
and
dec
mov
push
push
or
test
rclb
repnz
add
loopne
xchg
mov
mov
divl
mov
xor
lcall
cmpsb
pop
xor
orl
fs
jne
into
cltd
nop
rcrl
pop
mov
lret
cmp
cmpsl
sbb
sbb
icebp
dec
jg
sbb
push
cltd
adc
loop
push
loope
dec
insl
mov
dec
dec
ficoms
adc
outsl
sub
fwait
dec
inc
adc
xchg
andl
rcrb
cmp
push
inc
pop
inc
sub
xor
mov
lret
cwtl
sub
cmp
inc
dec
gs
push
adc
fwait
pop
fcmovne
xchg
sub
lret
movsb
shrb
jbe
cvttps2pi
adc
mov
lahf
sar
das
dec
mov
adc
test
ljmp
push
xor
sub
cld
cs
leave
movsl
fcoml
ljmp
dec
push
out
push
in
sub
push
sti
mov
cmp
stos
fucomp
mov
jno
and
shlb
adc
mov
mov
and
sbb
jo
mov
dec
sbb
out
or
out
mov
enter
gs
fwait
xchg
jno
lods
xor
testb
int
mov
movsl
mov
and
loope
into
lcall
and
lcall
xchg
fistl
xor
decb
push
popa
adc
out
and
or
mov
add
or
dec
dec
inc
imul
loope
mov
adcl
sbb
mov
push
shll
inc
pusha
xor
test
movsb
push
sbb
int
adc
jbe
jbe
les
or
ficompl
jl
mov
xchg
xor
scas
insb
cmp
push
cmpxchg
lcall
jo
or
or
sahf
fst
jb,pn
arpl
dec
ds
add
sbb
je
int
or
mov
in
push
je
xchg
call
andl
xchg
fcoml
pop
hlt
iret
sub
xor
enter
fwait
xor
and
jo
cmp
cmp
ret
pop
jl
dec
mov
jb
imul
clc
cli
adc
iret
jo
or
iret
cmpsb
out
and
pop
mov
outsl
and
mov
int
xchg
das
ljmp
loop
icebp
inc
xor
jbe
into
repnz
dec
sub
jl
imul
pop
popa
sbb
lods
addr16
pop
mov
lea
jge
dec
scas
ja
fs
jo
pop
mov
mov
adc
sbb
fstl
cli
pop
cmp
stos
sti
outsl
outsl
clc
inc
sbb
adc
mov
adc
lcall
push
xchg
mov
sub
aaa
int3
jno
lds
ljmp
or
mov
gs
mov
xor
repz
dec
add
xchg
jmp
sbb
dec
nop
xchg
aam
das
cltd
test
xchg
mov
insl
add
mov
mov
orb
shll
repnz
xchg
or
orl
arpl
fsubs
jae
dec
incb
cld
negl
sbb
xlat
jb
popf
push
pop
pop
jle
cmp
movsl
pop
mov
test
repnz
dec
andl
out
ret
inc
fldl2e
push
add
movsb
mov
lret
add
dec
xor
stc
jbe
dec
test
orl
lods
or
cmp
or
mov
mov
aas
movsb
push
or
enter
xchg
aam
es
mov
subb
cmpsl
jmp
sti
xchg
repz
rol
jnp
jb
xchg
cmpsl
inc
xchg
add
in
enter
enter
aaa
inc
outsl
mov
cmpsb
dec
push
xor
sub
daa
lds
test
sbb
mov
push
fstpt
cmp
adc
mov
mov
add
pop
or
je
sbb
or
out
bnd
jmp
pop
hlt
pushl
inc
lcall
in
mov
mov
fidivl
js
xchg
sbb
sub
sbb
mov
xor
mov
pushf
inc
xor
push
add
sbb
pusha
ljmp
pop
push
sbb
or
cmp
dec
cmp
mov
push
sbb
nop
mov
xchg
jp
inc
sti
test
push
decb
or
lea
iret
mov
rcrl
adc
mov
js
pop
mov
adc
cmp
add
fsubrl
jne
sar
add
pop
call
jno
mov
cmp
lock
test
pop
idiv
jns
in
xchg
xchg
out
bound
pushf
test
xor
push
icebp
or
pop
fdivl
or
and
clc
mov
mov
ljmp
or
jae
in
sub
inc
push
dec
push
clc
pop
repz
fisubrs
and
ret
jg
pop
xchg
fs
dec
and
push
enter
adcb
imul
xor
xor
subb
add
out
scas
jbe
and
sub
push
stos
pop
pop
adc
int3
pop
or
adc
push
nop
cmp
or
adc
cmpsb
mov
dec
push
adc
sbbb
das
insb
loope
fxch
in
mov
jae
pop
imul
and
xor
inc
fmull
xchg
push
cmp
jne
adc
aam
inc
cmpsb
stc
xchg
add
das
or
out
jne
test
xor
inc
lds
nop
lock
adc
test
lcall
xchg
scas
outsb
mov
outsl
add
jbe
cmc
jbe
sbb
adc
shll
ds
or
xor
sbb
jecxz
leave
and
ja
mov
je
cmpb
mov
cmp
mov
adc
loope
add
inc
idivl
shr
and
mov
nop
jp
movsl
jo
xchg
sub
jbe
adc
loope
fisubs
aaa
test
sarb
loopne
mov
xlat
out
jo
inc
push
adc
icebp
xchg
push
mov
dec
and
xchg
insl
mov
lods
or
psubsw
in
jae
jb
cmpsl
sbb
inc
add
and
mov
add
insb
mov
out
sub
leave
scas
mov
mov
clc
push
adc
in
movsb
inc
jg
push
mov
jle
daa
mov
movsl
loopne
ds
addr16
jne
je
and
xchg
scas
lret
inc
gs
aaa
lahf
push
lds
test
mov
fwait
test
adc
dec
mov
imul
ffree
mov
sbb
addr16
decl
inc
push
xor
sub
ss
stc
xor
add
aas
pop
sbb
mov
ljmp
test
ficompl
inc
sahf
mov
xchg
cmpb
call
pop
enter
mov
push
pop
mov
xchg
inc
faddp
jo
sbb
je
out
push
push
stc
pop
push
shll
mov
or
fistpl
xchg
ss
and
dec
and
jne
enter
dec
movsb
pop
push
mov
loopne
lds
int
pop
mov
jecxz
sub
scas
add
jnp
out
imul
add
gs
push
push
stos
xchg
cmc
and
test
jle
je
adc
insb
mov
cmpsl
ror
or
xor
fldt
imul
mov
mov
mov
gs
outsl
sbb
lret
shrl
push
adc
inc
cmp
xor
xor
cmp
in
add
sbb
sbb
test
out
add
js
xor
in
icebp
aam
inc
push
pop
push
ret
leave
and
pop
aad
sub
fwait
cmp
leave
fcoml
fidivrs
push
push
fimuls
lret
int3
shr
movsb
fwait
movsb
imull
es
aam
in
fnstcw
rcrl
repz
inc
sub
negb
mov
cmp
sub
lods
andl
out
sbb
xchg
out
cmp
cld
outsl
arpl
adc
mov
ret
addb
mov
iret
jmp
add
mov
lahf
cmp
ret
popa
aam
cmp
repnz
lahf
inc
adc
dec
push
add
mov
dec
adc
dec
jl
ret
imul
cld
dec
mul
cmpsb
outsb
aaa
ficomps
and
mov
roll
add
mov
and
mov
add
adc
xchg
cmpsl
aaa
fwait
xor
push
stc
add
mov
push
subb
cmc
push
out
test
jl
lds
jmp
or
cwtl
and
mov
jnp
sarl
adc
sub
das
inc
mov
xor
jmp
scas
xchg
loope,pt
push
outsl
andl
push
je
add
cmp
xor
mov
fnstcw
xor
add
movb
and
jae
mov
push
inc
pop
xchg
or
stc
das
insb
cli
lcall
hlt
fcomps
and
fst
lret
jl
pop
dec
jg
rcll
js
pop
mov
ret
mov
jno
aad
js
inc
add
and
mov
dec
fcmovne
push
aad
fbstp
lcall
pusha
std
xchg
xchg
pop
inc
stos
pusha
lret
int
andl
arpl
aas
adc
jle
jno
dec
lahf
mov
add
test
sbb
pop
inc
out
jp
out
mov
pop
jg
mov
bound
stc
push
and
insb
fst
ljmp
lret
jmp
imul
lods
ds
pop
dec
mov
mov
lods
sar
inc
xchg
nop
rol
dec
iret
xlat
addr16
aad
inc
sahf
and
or
sub
jnp
adc
cmp
icebp
leave
mov
std
add
or
hlt
sub
leave
jo
or
aas
push
dec
enter
push
fdivrl
rorl
stos
rolb
and
js
es
negl
mov
iret
test
hlt
mov
repnz
push
pop
and
push
js
iret
out
fdivrs
xor
aad
dec
push
out
cmpsb
and
push
cmp
call
xor
nop
mov
mov
adc
int3
and
pop
outsl
les
jbe
sub
pop
mov
mov
ret
lahf
and
ljmp
jmp
cmp
dec
scas
mov
fcmovne
cmpsb
cmc
test
sti
adc
ficoml
lds
nop
cmp
andb
out
sbb
xchg
imul
xchg
pop
jbe
or
jno
outsl
inc
pop
cli
mov
daa
ret
imul
xor
loope
negb
jne
mov
lods
adc
cli
popf
test
andl
ret
mov
pusha
das
jae
inc
or
pop
adc
jp
scas
jecxz
fdivrs
sbb
fwait
mov
xor
adc
ljmp
popa
movsl
xor
dec
sub
push
inc
ret
cmp
pop
mov
mov
sahf
lods
jl
icebp
pop
nop
clc
daa
dec
adc
fadds
push
lcall
scas
push
pop
push
out
aad
repnz
jae
lret
int3
inc
negl
mov
mov
out
mov
out
mov
out
dec
cmpsl
ret
mov
cmp
pop
dec
pushf
jno
cmpsl
iret
icebp
jnp
fdivr
adc
stos
inc
pop
xor
xor
mov
push
inc
cli
sub
sbb
cli
cmp
movq
gs
iret
jl
xorb
mov
add
mov
test
cli
mov
leave
jo
push
push
fsubl
mov
testl
out
xchg
push
call
enter
pop
lahf
sub
or
fwait
xlat
cmp
xor
outsb
adc
pushf
jle
stc
sbb
hlt
divl
scas
in
mov
lods
enter
mov
in
gs
test
sahf
add
sbb
adc
pop
cli
lods
or
xor
adc
out
xor
gs
into
repz
jp
pop
fisubl
jle
lods
movsl
adc
push
sahf
and
ja
loope
and
xchg
push
lock
cwtl
outsl
push
add
and
ljmp
cmpsb
xchg
jecxz
jg
loop
ret
inc
mov
pop
test
sbb
and
or
cmpsb
jo
cmp
sub
xor
inc
jne
fdivrl
push
lods
sbb
sub
mov
cmp
leave
lods
add
cmp
add
cmpsb
pop
xchg
inc
and
stos
or
popf
xor
test
daa
pusha
adc
fidivrs
sub
lods
sbb
mov
dec
pop
test
cmpsl
std
stc
idivb
adc
push
fcoml
sub
xorb
lahf
lcall
adc
mov
lret
neg
sarb
aad
xchg
dec
mov
test
cmp
aas
ljmp
bound
pop
fcmovb
icebp
aas
pop
mov
sbb
js
jbe
aas
xor
pop
aaa
jle
nop
rcl
gs
adc
lds
insl
and
mov
dec
lret
jne
sahf
cmp
inc
cmovno
ficompl
pop
cmp
fildll
std
push
jno
stos
std
pop
repnz
xchg
imul
adc
aas
stos
pop
pop
iret
mov
out
addr16
aas
cmp
mov
mov
stc
pop
out
ficoml
and
xchg
mov
shrb
cmpsb
sub
mov
inc
xchg
dec
scas
jae
fldt
or
push
scas
aas
add
xor
or
lock
jo
cltd
shll
scas
or
jl
add
cwtl
subb
cmp
lea
mov
xlat
out
test
mov
push
dec
mov
cmp
lock
bound
sub
xor
int3
dec
cli
ljmp
andb
pop
jae
mov
or
mov
mov
aas
mov
or
pop
negb
dec
mov
lods
xchg
inc
mov
fldl
notl
sbb
clc
loop
enter
insl
aas
mov
testl
jo
and
sub
sub
dec
std
xchg
int
cltd
pop
mov
call
jnp
in
test
inc
test
inc
adc
lahf
add
mov
les
inc
int
ja
xchg
inc
xchg
fisttpll
enter
sahf
cmp
push
dec
movsl
es
les
mov
cmp
addr16
into
cmp
int
push
int3
cltd
or
into
adc
inc
sub
jno
icebp
faddp
insb
mov
xlat
dec
mov
adc
sbb
cwtl
mov
mov
cmp
mov
mov
sbb
decb
mov
std
push
out
loope
into
aaa
arpl
jb
xlat
sub
stos
mov
adc
lds
loopne
idivb
push
enter
test
inc
adc
sub
int3
fstp
sbb
or
sti
aam
cmp
data16
xchg
imull
not
fmul
dec
mov
sub
sbb
outsl
js
or
sbb
mov
xlat
stc
mov
in
dec
inc
lahf
cmp
and
loopne
adc
popf
or
jmp
pop
dec
imul
in
mov
es
dec
les
out
jecxz
pop
int
stos
jmp
out
adc
lods
notb
popf
and
add
mov
push
xchg
push
pop
into
fidivrl
push
pop
mov
mov
sbb
out
sbb
insb
lods
pop
jo
dec
fmulp
add
cmpsl
dec
out
cmp
cmp
pop
int3
jmp
cmovns
and
mov
lods
jp
sbb
push
pop
pop
test
jle
popa
ja
sti
aam
mov
pushf
ja
mov
xchg
pop
in
mov
dec
fs
mov
pop
mov
test
lret
fsts
mov
daa
cmp
sub
lock
rclb
xor
sti
fisubrs
pushf
mov
bound
arpl
mov
movsl
call
pop
jl
out
addr16
cmpsl
xchg
xor
sbb
mov
dec
lret
add
pop
pop
enter
mov
rcll
mov
mov
push
and
stos
mov
scas
dec
push
xchg
outsb
pop
lcall
lcall
inc
add
add
xchg
jno
mov
mov
lcall
and
jmp
out
adc
cmp
jge
mov
mov
hlt
add
repz
adc
sub
jecxz
rclb
leave
xchg
sahf
ds
in
cmpsb
sarl
lret
and
ja
push
jp
mov
push
inc
mov
xchg
sbb
cmp
mov
jmp
jg
xchg
dec
fwait
mov
test
xchg
and
mov
pushl
cld
inc
cmp
insl
aas
xchg
fwait
shlb
loope
jmp
jo
cmpsb
es
fs
mov
int3
addr16
sbb
xchg
adc
mov
cltd
jo
mov
or
fstpt
mov
and
cmpsb
push
jo
jb
lea
movsb
jbe
add
and
sarl
or
fcoms
movl
jecxz
scas
lods
push
push
jmp
jnp
jmp
and
mov
adcl
rorb
sub
mov
gs
mov
jg
pusha
nop
or
adc
fs
xchg
sarl
testl
xor
xchg
xor
push
movsb
loop
xchg
lret
and
and
pop
or
lret
loope
push
or
fcompl
jge
mov
sahf
test
pusha
jns
adc
negl
movsb
push
or
stos
add
push
int3
loop
push
sbb
out
push
jno
mov
rorb
pop
mov
mov
shrb
add
add
mov
mov
jns
mov
fidivl
push
push
das
adc
and
jl
lret
sarb
int
cmp
mov
fs
in
aas
cmpsb
jmp
insl
mov
fidivs
mov
push
xor
and
add
mov
int3
shll
sbb
and
comiss
or
lods
imul
push
xor
mov
lds
dec
frstor
lcall
cs
xchg
xchg
leave
xchg
push
pushl
pop
loopne
int
test
inc
adc
repz
xor
mov
pop
pop
fdecstp
xchg
xlat
push
cmp
mov
jno
cli
inc
stos
mov
call
icebp
les
push
inc
pop
inc
xchg
aaa
shlb
cli
rcrb
cmpsb
mov
push
push
xor
push
or
mov
jae
xchg
imul
sub
in
sub
lds
stc
enter
inc
sub
xlat
add
loopne
ret
shll
sub
sub
pushl
lods
ds
cmpl
insl
push
pop
sbb
and
lret
mov
cld
stc
mov
std
cmp
or
test
fdivrp
call
ljmp
pop
sbb
cmp
test
loope
mov
into
jmp
and
jecxz
imul
cltd
adc
mov
out
add
stos
cs
jno
mov
shrb
xor
jns
inc
cwtl
fldenv
mov
imul
xlat
xlat
stos
scas
sbb
mov
jo
xchg
mov
fcmovnu
mov
jb
and
xchg
dec
jno
int
inc
pop
xchg
out
jle
adc
std
mov
jecxz
jne
loope
sub
mov
inc
inc
mov
mov
mov
out
mov
cld
dec
pusha
sbbb
add
adc
aas
and
mov
out
sub
mov
add
addl
mov
leave
les
sub
out
jae,pn
shll
mov
ret
scas
sbb
ds
andb
jb
aas
fstps
add
jb
test
push
or
scas
xchg
jg
push
inc
cmp
lcall
lods
testw
std
ret
inc
push
pop
ud2
cli
cmc
lds
popf
adc
imul
scas
sub
cltd
mov
leave
pop
mov
cmp
jl
cmp
sbb
xchg
or
jp
enter
add
sbb
pop
outsb
xor
cltd
push
rcll
or
mov
cmp
inc
cwtl
cmpl
insl
arpl
orl
shrb
arpl
mov
xchg
lods
fsubrp
lods
sub
and
test
jecxz
lahf
into
jl
xchg
sbb
insb
inc
aam
xor
daa
sbb
sub
mov
insl
test
cltd
repnz
fnstcw
scas
cmp
fucomip
and
lret
rcr
cmpsl
inc
loope
mov
lods
mov
mov
stos
lcall
push
in
iret
movsb
lods
cmpsl
int
dec
jb
out
mov
cmp
fldl
or
out
outsl
cli
cmp
fcompl
out
fldenv
sti
push
add
imul
in
movb
mov
les
push
dec
cmp
xchg
lea
aaa
test
push
cmp
popa
mov
fbstp
aaa
mov
into
es
sub
out
adc
push
push
fdivrp
ret
insb
fs
lods
psubd
or
add
mov
lcall
out
rorl
daa
mov
popa
and
push
stos
iret
add
lock
jmp
push
sarb
test
js
test
xor
neg
push
push
std
push
aad
mov
mov
xlat
cld
pop
dec
dec
stos
xchg
sahf
adc
test
jmp
mov
xchg
mov
mov
mov
cmpsl
shl
lcall
add
clc
cmp
insb
out
mov
fsubl
cmp
dec
inc
pop
js
cmp
lods
test
std
xchg
inc
mov
dec
dec
fcmovnb
mov
stc
xor
pop
movsl
jge
mov
rclb
mull
mov
mov
call
or
pcmpgtb
dec
jnp
or
mov
loop
int
dec
sbb
arpl
in
fnstsw
adc
push
ret
and
insl
and
and
aas
clc
cmp
xor
xor
and
stc
cmp
add
or
cmpsb
repnz
fs
jmp
lock
add
out
mov
dec
pushf
pop
cld
jl
fdivs
clc
test
pop
lret
mov
push
jmp
inc
lret
out
jae
push
jge
jmp
clc
mov
or
int
fwait
stc
leave
mov
mov
sbb
mov
call
mov
negl
push
fsub
mov
and
into
jo
scas
es
icebp
das
sub
lret
xor
add
movsl
imul
add
add
movsb
sti
dec
xor
mov
jo
dec
jbe
jbe
sub
lcall
sti
push
stc
pusha
xchg
in
jnp
dec
and
push
fxch
sbb
ret
push
inc
mov
cmp
stos
fcoml
in
nop
jmp
addr16
dec
jns
aaa
idivl
inc
sub
icebp
jmp
jl
movsb
in
rcrb
adc
lods
mov
repnz
jb
ret
sahf
dec
fisttps
imul
mov
lret
mov
mov
in
mov
push
ficoms
pushf
je
push
in
sbb
push
push
movsl
frstor
lods
test
and
dec
xlat
call
xchg
in
push
insl
flds
rol
out
cmp
inc
xchg
jp
test
mov
pop
cs
ss
lret
pushf
jb
lret
jno
jne
test
rcll
das
jno
mov
idivl
jmp
insb
movsb
and
leave
sti
adc
or
divb
cmpl
out
mov
adc
xor
lahf
dec
dec
xchg
out
sti
push
or
nop
push
cmpsb
add
orl
ja
fistpl
in
nop
jecxz
ret
mov
inc
std
jno
test
cmp
icebp
jmp
rclb
push
fstl
orl
adc
das
mov
popa
or
jecxz
repz
fildl
cmp
fstl
movsb
pop
leave
andl
push
sub
mov
lea
lret
js
lds
loope
addr16
dec
je
or
out
mov
mov
mov
in
sbb
pop
mov
dec
sbb
jp
mov
lds
sbb
mov
and
mov
movsb
les
dec
mov
lea
and
rcrb
mov
cmp
mov
mov
imul
mov
mov
es
add
or
scas
cltd
and
je
push
scas
xchg
sahf
mov
jle
cld
pop
js
mov
ret
or
es
mov
idiv
xchg
xchg
inc
dec
mov
insl
push
sti
jp
ja
pop
push
push
jno
xchg
push
pop
mov
imul
push
adc
jmp
out
test
mov
jne
xorb
cmpsl
stos
jmp
xor
and
mov
test
mov
dec
push
cmpsl
cmp
orps
sbb
outsb
push
rcrl
movsb
xlat
gs
jge
xchg
and
dec
test
movsl
pop
adc
sbb
jno
pop
jl
stc
sbb
ja
sbb
imul
jg
and
adc
push
mov
mov
clc
cwtl
mov
xor
shl
call
cmc
pop
jae
push
jl
jecxz
pop
addl
ret
sbbl
xchg
pop
mov
loopne
xor
xchg
xor
jmp
data16
rclb
mov
mov
outsl
dec
jp
mov
sub
cs
lock
or
cmpsl
ficomps
jmp
js
mov
mov
faddp
rolb
jno
mov
ret
xchg
push
subb
cmp
nop
imul
pop
cld
pusha
rcrl
gs
mov
arpl
mov
push
cmpsb
movsb
mov
push
in
cmp
pusha
leave
jg
lock
stos
push
lods
inc
and
out
cmpsl
scas
jnp
sub
ror
in
dec
lret
pop
insb
dec
xchg
mov
mov
arpl
pushf
repz
push
jg
fldt
mov
sbb
pusha
das
or
pop
movsl
aad
lods
push
add
lods
aaa
popf
nop
clc
scas
lea
jnp
in
xor
mov
loopne
iret
push
push
adc
or
xor
lret
mov
out
test
ret
push
xchg
and
pushf
outsl
xor
mov
inc
pop
movsl
cs
adc
leave
xor
loopne
jle
pushf
ud0
out
js
ljmp
and
hlt
mov
repz
xor
jg
inc
push
data16
lahf
aas
mov
dec
sbb
or
sbb
or
fstpt
pop
clc
mov
shrl
jae
out
outsb
sbb
sub
inc
call
mov
dec
arpl
mov
inc
lret
push
mov
jl
add
in
out
fcmovnu
jmp
jle
lcall
xchg
sub
add
aaa
out
jne
stos
cmp
or
cmc
mov
test
xchg
add
cmp
pop
ja
and
je
shlb
sti
repz
gs
add
sub
sti
mov
je
outsl
sbb
test
jne
mov
loope
cmpsl
sti
and
mov
mov
insb
cmc
mov
daa
jle
into
jo
and
cs
mov
repz
pop
mov
sbb
jne
dec
popf
lea
lcall
or
jge
stos
xlat
adc
cmp
cltd
fsubrs
xchg
popf
stos
fs
repnz
add
mov
nop
jbe
jle
push
addl
mov
jl
mov
iret
adc
mov
icebp
xchg
insl
aaa
ret
jp
in
xchg
repz
out
or
push
not
mov
mov
push
push
cli
cmp
sub
hlt
cltd
enter
xchg
lds
subb
adc
pushf
lret
pop
stos
inc
fwait
sbb
gs
cmpsb
ja
xchg
cwtl
pushf
ds
in
mov
sub
mov
daa
ret
sbbb
popa
aas
subb
sub
inc
add
int3
mov
push
jb
arpl
out
cmp
insl
cmpl
add
push
loop
shrb
and
inc
popf
cmp
mov
inc
lock
lds
int
sarb
add
jbe
jle
mov
mov
divl
stos
shll
ficoms
movsl
push
push
mov
seto
inc
clc
inc
push
das
jne
lock
or
dec
mov
jp
add
adc
data16
fldcw
add
pusha
js
mov
or
ss
dec
push
rorl
mov
repnz
pop
cwtl
or
jge
cmpsb
push
aaa
pop
in
add
out
xor
inc
pusha
clc
pop
je
push
das
dec
mov
out
sub
pop
pop
sub
clc
mov
jo
inc
cmc
sub
sbbl
js
mov
jp
add
sbb
inc
dec
ja
xor
std
sarb
or
in
jo
add
roll
xor
or
lds
cmp
in
fwait
int3
addb
cli
mov
repz
rorb
push
dec
lock
jnp
adc
std
bound
jo
adc
dec
dec
push
arpl
mov
popf
cmp
jl
out
insl
or
cmp
roll
testb
rorb
sub
shrl
rcr
testl
or
or
out
jne
pop
repnz
or
mov
punpckhbw
test
push
fucom
mov
add
jl
enter
or
rorb
dec
push
inc
cli
sbb
scas
mov
jecxz
test
push
stc
imul
enter
and
into
pusha
inc
adc
pusha
shlb
fsubr
mov
mov
insb
push
clc
insl
repnz
nop
icebp
mov
roll
stc
pop
rcll
jbe
sar
bound
shrb
sbb
stos
jp
ret
jecxz
cmpsl
mov
pop
sarl
cmp
adc
icebp
sub
sar
fisttpll
nop
inc
js
popf
test
mov
lcall
in
jl
jnp
call
mov
mov
in
loopne
mov
pop
cltd
push
xor
xchg
lods
in
adc
nop
test
nop
bnd
fstpl
or
sbb
mov
fwait
xor
cli
mov
cltd
mov
std
jo
ja
jge
andl
int3
adc
loopne
rol
sarb
cs
xchg
adc
pop
jae
dec
mov
xchg
fwait
rorb
adc
and
cmpb
std
pop
dec
cmpsb
jae
pop
mov
jbe
test
cmp
sub
jmp
mov
jmp
xchg
test
movsb
out
lret
sbb
jp
lods
jno
fldenv
sbb
pop
jb
add
cli
push
hlt
pop
mov
xlat
adc
xchg
sbb
cmp
inc
jp
mov
or
and
or
sti
outsl
lods
xchg
pop
jle
cmc
je
das
movsl
int3
lahf
pop
ret
push
mov
cmp
popa
ds
jae
add
sub
jmp
imul
ret
add
sti
pop
aam
icebp
pop
pop
dec
iret
cmp
jb
jne
mov
fistpl
filds
jecxz
ljmp
jge
ficomps
jno
ret
pop
and
jns
test
sub
mov
xchg
sbb
sahf
mov
sub
cmpsb
cmc
xchg
mov
popf
insl
clc
mov
dec
cmpl
outsb
aaa
mov
ret
inc
fwait
inc
shlb
or
leave
pop
es
jle
adc
inc
dec
test
fs
sti
xchg
jp
dec
mov
incb
push
test
das
in
sub
iret
int3
fldenv
fdivrs
pop
lea
jg
fwait
mov
cmpsl
mov
dec
or
int
adc
sbb
adc
mov
fmull
cmp
and
test
push
cmpsl
mov
outsb
mov
and
cmpsl
add
and
sub
mov
subb
scas
dec
add
mov
stos
nop
or
dec
or
inc
loopne
and
jnp
sbb
bound
cli
dec
aaa
dec
mov
mov
addr16
xor
mov
push
enter
fadd
negl
lret
test
or
mov
add
jbe
cmpsb
rcrb
add
in
xor
mov
push
pop
ficoml
scas
push
adc
test
push
mov
loopne
adc
xor
adc
pop
mov
xor
push
shl
daa
inc
mov
inc
lods
repz
aam
popf
sub
fwait
sub
jp
pop
sti
or
xchg
pop
aas
xchg
lcall
and
add
lret
jl
lods
inc
add
mov
inc
jl
mov
mov
das
or
sbb
and
aam
xchg
in
mov
fisubl
add
ret
xor
pop
fnstenv
jno
xor
mov
outsl
cs
xorl
insl
negl
int
pop
dec
inc
mov
lahf
cwtl
sbb
sub
dec
mov
jno
faddl
in
out
mul
sub
push
sbb
mov
out
push
mov
inc
in
push
xchg
mov
xchg
in
cmp
insl
popa
push
out
and
add
pusha
xchg
dec
mov
jbe
je
jecxz
sub
cmp
push
stos
add
les
cmp
fs
lock
popf
cmp
pop
or
sub
push
xor
mov
adc
ss
scas
cmp
adc
dec
iret
aad
into
mov
imul
push
ss
pop
push
dec
mov
xchg
or
loopne
in
adc
cld
fadds
jnp
inc
rclb
lret
mov
fadd
mov
xor
sbbl
fwait
and
jbe
gs
mov
cltd
xorb
inc
movsl
xchg
lock
ret
push
fucom
popa
test
fs
lods
mov
stos
dec
jp
xchg
stc
insb
loopne
add
std
movsl
mov
adc
and
xchg
movsl
dec
dec
loope
adc
sbb
fwait
mulb
lods
outsl
mov
xchg
sahf
movl
lret
pusha
and
xchg
mov
jp
pop
sub
xchg
mov
xor
sbb
insb
pop
lret
outsl
push
sbb
add
cmpsl
es
in
adc
vmovsd
daa
repnz
jno
es
ja
ret
repz
aaa
mov
sbb
push
lods
lods
lock
loop
and
test
fiadds
cmp
and
fsubs
ja
dec
jne,pt
cmp
push
dec
sub
daa
and
fs
push
ljmp
jne
out
jle
je
cltd
movsl
addr16
loope
mov
sahf
pop
test
inc
adc
cmp
pop
sar
es
pop
sbb
mov
mov
or
inc
aas
cltd
mov
mov
xor
inc
lcall
cmpsb
cmp
aam
xor
rcrb
sbb
outsl
inc
sub
loop
sbb
sbb
adc
mov
or
xor
mov
lock
sbb
fdiv
push
inc
pop
rcrl
inc
dec
push
mov
dec
out
mov
leave
fcmovu
in
notl
out
sub
push
inc
iret
inc
cmp
mov
imul
maxps
jmp
dec
or
xchg
out
mov
lods
enter
mov
mov
inc
cmpsl
and
lret
jo
sub
popa
sahf
push
shlb
jns
test
rol
ja
repnz
cld
or
inc
xchg
test
sub
fsts
repnz
jns
cmp
and
xor
jle
fcmovne
mov
in
sub
cmp
jnp
insl
inc
cmc
test
sbb
data16
je
test
xchg
out
sub
add
mov
mov
fdivl
mov
js
jns
jle
out
xchg
sub
push
out
test
sub
ret
push
or
mov
cmp
cmpl
mov
lods
fidivl
sbb
ret
sbb
mov
pop
lods
jmp
fmul
xchg
jbe
aam
dec
add
fs
outsl
ficoms
sub
jne
out
mov
lock
loop
jae
xchg
mov
pop
mov
mov
xlat
push
sahf
inc
int
cmp
push
mov
push
jbe
outsb
aad
in
repz
out
scas
sti
dec
sub
loope
aas
out
je
push
stos
inc
inc
cmpsl
fiadds
push
paddsb
or
push
sbb
inc
sar
pop
push
out
ds
xchg
sbbl
cwtl
ret
js
sbb
dec
stos
sbb
cmpsb
insb
xchg
std
lods
and
test
sbb
jbe
insb
dec
sub
lods
shl
loopne
mov
loope
mov
and
jmp
push
jae
ret
adc
pop
jmp
imulb
out
jmp
test
mov
or
add
shlb
aaa
mov
jmp
negl
mov
mov
cmpl
rorb
dec
push
es
sub
sbb
and
push
or
pop
orl
xchg
push
cmp
jnp
into
mov
fs
shrl
loope
in
das
dec
in
into
data16
mov
pop
dec
in
or
jbe
add
pop
das
lea
mov
fs
fcmovnbe
dec
mov
mov
repz
xor
jns
shl
pop
xchg
cmp
pop
push
jl
cltd
push
pusha
pop
xchg
in
adc
int
faddl
inc
cmp
mov
dec
decb
dec
xchg
push
sub
in
adc
jne
addb
pop
xchg
les
mov
repnz
sbb
mov
dec
pop
mov
pop
lahf
jecxz
jg
sub
cmp
push
es
ss
mov
pop
sbb
mov
add
xor
sahf
enter
cs
lods
sbb
xchg
inc
stc
xor
es
mov
notl
xorb
mov
jno
sbb
jne
fwait
stos
add
xchg
mov
or
push
xchg
mov
in
push
imulb
and
leave
mov
xor
or
inc
pop
adc
fs
popf
bound
fldt
jns
adc
xor
loop
add
ror
pushf
mov
enter
pusha
orb
hlt
or
sub
jne
lea
dec
inc
push
sub
popf
dec
or
enter
shlb
out
pop
arpl
dec
out
cltd
loop
sbb
adc
mov
add
pushf
aas
fidivs
jmp
mov
negl
test
stc
adc
mov
dec
lds
push
mov
std
fwait
cmc
notl
pushf
mov
xlat
call
or
lret
arpl
pop
lret
mov
mov
jo
push
hlt
cwtl
ss
loop
xor
aad
ja
hlt
mov
notl
jo
enter
dec
fisubl
outsb
xor
mov
inc
dec
in
push
stos
ret
or
loop
int3
pop
dec
in
pop
and
mov
fadds
cmp
out
ficoml
cmp
stc
insb
or
fisubl
test
cmc
adc
mov
or
sbbb
sbb
mov
insb
cmc
ret
mov
mov
adcl
fisttps
xchg
mov
std
mov
inc
iret
sbb
inc
xor
fwait
sbb
xlat
in
push
xchg
jl
mov
mov
jae
stc
xor
cmp
dec
adcl
jno
add
aad
test
mov
xchg
jl
mov
mov
push
push
jle
repz
mov
out
aad
and
and
jmp
cli
cmc
and
bound
rorb
jnp
mov
mov
lahf
int3
cmpsb
fsubp
mov
inc
push
iret
pop
sub
in
add
daa
hlt
aaa
pop
popa
orb
jecxz
mov
sbb
pop
test
pop
mov
dec
out
dec
sbb
pop
jg
mov
and
sub
add
imul
movsb
add
test
pusha
add
std
or
dec
cltd
and
mov
push
dec
and
jmp
xchg
or
mov
out
stos
fcoms
mov
and
lcall
pop
mov
dec
and
pushl
add
lock
ficoml
ljmp
mov
or
and
mov
popa
stos
test
mov
out
pop
mov
dec
int
and
stos
inc
dec
push
cwtl
cmpsl
ret
daa
jecxz
sub
push
call
cmp
das
push
or
inc
dec
push
xchg
adc
inc
jne
mov
shll
fcmovne
or
mov
mov
stc
mov
push
or
cltd
stos
mov
and
jne
std
fimull
cmp
xor
out
sbb
not
stos
mov
mov
and
push
iret
hlt
aam
ja
xchg
mov
stc
inc
push
pop
push
jle
in
repz
clc
push
xorl
cmp
mov
pop
out
ja
dec
xchg
cmp
xor
inc
cld
mov
mov
pop
ja
xor
fdivl
enter
mov
sbb
pop
jge
clc
sbb
xor
aam
xchg
mov
test
push
out
hlt
stos
pop
cmp
ds
das
roll
leave
fistl
inc
fmul
xor
or
cmpsl
or
in
into
adc
xchg
pop
pop
ja
cmc
or
adc
lret
mov
sub
fdivrp
cmpb
adc
testb
scas
add
lea
inc
inc
cmp
jbe
mov
ret
adc
or
mov
or
testb
movsl
pop
dec
adc
fildll
dec
imul
pop
addr16
movntps
mov
outsb
or
sbb
push
addr16
push
sahf
xchg
pop
inc
dec
xchg
jmp
push
ss
inc
push
ljmp
imul
sbb
push
inc
les
pop
xor
leave
add
push
das
xlat
inc
loop
xchg
ja
sbb
jno
cmp
mov
sub
je
fisubrl
sub
adc
dec
push
xchg
and
leave
scas
pop
inc
fidivl
fstpl
jp
fmuls
xlat
in
dec
lret
jecxz
pop
aam
filds
adc
stc
xchg
es
js
sub
mov
cs
xchg
call
hlt
cmp
mov
xor
data16
call
and
in
xchg
icebp
addr16
or
jg
fcoms
cmp
sbb
sbbb
cmp
jns
ret
or
adc
dec
inc
fmuls
mov
xlat
js
dec
jecxz
loop
mov
insb
loop
test
inc
or
je
xor
add
sti
jl
hlt
mov
std
lock
mov
cmc
cltd
jle
je
repz
fistps
push
jp
sbb
int3
xchg
jne
repnz
dec
inc
dec
push
ja
aaa
or
jo
leave
es
enter
or
cmp
dec
sahf
cmpsb
andb
jmp
rclb
push
mov
pushl
in
inc
pop
out
jle
hlt
jnp
aaa
jge
mov
adc
pop
mov
adc
jmp
test
sbb
mov
test
lret
xor
pinsrw
ret
pop
xor
adc
add
shlb
push
mov
jbe
jae
lds
jg
bound
pop
ffree
cltd
in
or
in
into
gs
push
jecxz
cmp
cs
std
stos
lock
push
stc
addr16
popa
sbb
jecxz
js
fcomip
and
sbb
or
dec
sbb
add
add
mov
pop
into
push
rcrb
fs
sub
pusha
enter
mov
das
sbb
push
scas
cmc
lret
addb
not
repnz
cmp
jp
or
std
cmpsb
jl
add
lods
lret
test
ljmp
loop
sbb
jmp
jns
out
stos
es
xor
and
mov
mov
xchg
dec
mov
adc
cmp
dec
int3
das
dec
out
leave
sub
add
pop
les
ret
or
xchg
inc
xchg
mov
fs
sbb
pop
out
push
jns
cmpsl
loopne
or
pop
es
mov
mov
dec
add
in
push
or
push
mov
add
mov
cmpsb
lock
inc
push
cmpsb
or
jg
neg
loopne
cmc
test
iret
jnp
es
add
push
jno
ljmp
ret
cmp
lock
sbb
insb
aaa
xchg
call
cld
idivl
mov
movsb
cmp
imulb
pop
pop
mov
outsb
xor
pushf
out
or
test
punpckhbw
pop
xchg
xchg
lds
test
leave
sarl
lods
repz
sub
push
mov
dec
or
pusha
push
enter
mov
aas
pop
xor
sbb
mov
daa
add
jne
xor
mov
jp
neg
loope
mov
xchg
pop
lahf
inc
addb
push
out
push
lcall
mov
jle
inc
cmp
pop
inc
pop
xor
inc
addr16
fimull
pushw
xlat
push
jo
dec
mov
dec
jno
mov
out
lcall
mov
cmp
imul
mov
jae
aaa
add
jae
mov
out
das
daa
imul
and
adc
dec
in
adc
movsl
popa
or
jbe
jmp
lods
dec
in
aad
jns
aam
ja
or
push
das
add
lock
jmp
mov
scas
gs
jge
and
test
aad
add
in
lods
xchg
mov
adc
sub
dec
lods
sahf
xchg
js
and
jl
or
shl
sbb
mov
lahf
mov
push
sbb
push
and
stos
push
adc
cmp
fmuls
fmuls
mov
mov
push
mov
pushf
mov
jne
and
fwait
inc
test
mov
mov
xor
leave
loope
pusha
jecxz
cli
imul
in
int3
jb
out
ds
test
enter
movb
fbld
push
cltd
or
mov
aas
les
cmc
mov
jne
inc
enter
mov
or
mov
jno
fisubrl
idiv
cmp
cmp
pop
xor
adc
js
jecxz
lods
sahf
jns
sub
cmpxchg
outsl
fwait
test
xor
dec
adc
negl
push
adc
scas
in
sbb
sub
inc
cltd
mov
xor
mov
outsl
mov
test
push
stos
and
add
orb
dec
jo
mov
add
sbb
in
scas
imul
and
inc
in
adc
js
imul
int3
jmp
mov
mov
mov
dec
adc
lret
scas
push
xor
sbb
mov
adc
dec
out
dec
adc
fsts
das
scas
std
and
mov
pop
inc
inc
js
lret
mov
push
subb
push
ds
test
cmpsl
rcrb
adc
jb
sbb
pusha
dec
mov
popf
inc
dec
js
push
xchg
andl
add
dec
xor
dec
inc
jge
lods
jg
out
cmp
into
ja
data16
and
sbb
push
adc
xchg
jnp
cmp
popa
inc
repnz
add
lea
mov
pop
stos
adc
mov
ffreep
int
mul
mov
mov
inc
xor
mov
insl
push
mov
inc
icebp
cmpsl
cmpl
nop
lcall
adc
insl
ss
pop
mov
ljmp
and
int3
movsl
fdiv
loop
xor
or
and
lods
mov
mov
cli
or
and
lea
xchg
cmpsl
jmp
jle
xchg
mov
out
dec
add
or
jecxz
jo
sbb
pushw
int
fnstcw
loopne
cmp
or
test
enter
stos
sar
out
add
pop
push
inc
mov
pop
mov
out
mov
cmpsb
pcmpeqb
inc
ds
and
insb
fsubr
jo
test
xchg
std
add
pop
xchg
xor
sbb
sub
adc
in
shrl
add
orl
mov
aaa
adc
insl
in
add
mov
pop
cmp
gs
cwtl
and
in
outsl
gs
insb
sub
fmuls
pop
xor
sub
stos
loope,pt
lret
push
frstor
and
pop
jp
aam
jb
inc
notl
dec
je
in
or
mov
bound
cli
jbe
ja
and
mov
pop
mov
mov
mov
insl
add
insb
sti
aaa
repz
into
cwtl
adcb
or
push
testl
dec
in
and
sub
cmp
into
adc
hlt
shlb
sub
in
jno
xor
or
cmova
dec
sub
into
jno
mov
inc
adc
stos
xor
push
push
out
push
loopne
sbb
mov
inc
int3
out
ds
nop
inc
idivl
movb
pop
sbb
pushf
add
aam
inc
inc
adcb
sub
cmp
fs
ret
pop
or
push
inc
adc
fcoml
and
lret
xor
sbb
cmp
test
jmp
test
clc
mov
scas
cli
jns
inc
or
pop
loopne
sti
lret
in
cld
jb
test
aam
sti
mov
push
mov
popf
adc
dec
mov
xor
mov
adc
aam
pusha
nop
dec
fucom
cmpsb
and
dec
repz
push
out
sub
jecxz
cld
xlat
aam
int3
jb
pop
int3
add
inc
xor
lcall
mov
pop
shlb
and
push
push
lea
inc
ljmp
ret
or
and
xor
cmp
xor
mov
imul
dec
mov
dec
fadds
adc
call
mov
mov
push
neg
pop
enter
shrb
mov
and
mov
cmc
icebp
xor
lods
inc
cwtl
xor
and
pop
xchg
sub
push
push
ljmp
sub
gs
cmp
fsts
cmp
xlat
jne
ret
mov
and
jp
scas
dec
aas
out
ss
jg
jp
ja
shrb
pop
cltd
scas
inc
adc
cmpsl
daa
repnz
cmpsb
leave
or
mov
lret
pop
pop
mov
mov
jp
mov
insl
push
cwtl
aad
xchg
adc
fs
les
xor
lock
mov
jle
add
les
xchg
cltd
stos
loope
and
adc
dec
outsl
lock
jbe
je
xor
inc
movsl
mov
xor
xor
sbb
mov
xchg
repnz
shrb
dec
and
mov
clc
ja
pushf
mov
insb
mov
and
pop
int3
cmp
into
inc
lahf
sbb
jno
sub
loopne
or
mov
addr16
inc
push
pop
adc
and
pop
repnz
je
rcl
pop
push
fdivl
cmp
xchg
fidivl
ljmp
mov
or
js
repnz
dec
push
dec
dec
int3
fnstenv
adc
subb
jmp
and
enter
es
scas
test
jecxz
iret
add
and
into
pop
fisubrs
jo
mov
push
ja
imul
jno
jnp
jno
push
adc
ja
in
add
pop
jl
pusha
pop
fisttpl
sbb
test
cmp
clc
divl
scas
jns
pop
lock
lahf
add
pminsw
mov
add
aas
repnz
add
push
mov
jg
addr16
ja
jmp
dec
cltd
cmp
dec
sti
sub
jecxz
lahf
bndldx
aaa
mov
push
sub
and
rorb
sub
ja
mov
and
xor
dec
daa
rcl
adc
inc
jo
iret
lock
xorl
insb
mov
dec
shrb
cltd
mov
cmp
test
bound
lods
adcb
sbb
and
dec
cltd
addb
push
stc
stos
or
loopne
sbb
sub
out
test
into
xor
push
and
out
adc
push
push
notl
dec
lret
jne
pop
dec
inc
std
das
test
mov
into
ljmp
jmp
movsl
xor
or
xchg
and
xchg
int3
cmpsl
out
inc
pusha
inc
and
loop
pop
aam
aad
insl
loop
into
cld
push
cmp
cmp
mov
xchg
dec
xchg
in
iret
cmp
push
mov
mov
sti
sbb
mov
push
cmp
mov
in
mov
xchg
mov
jmp
cltd
les
movsl
xchg
pop
push
scas
and
adc
inc
xor
dec
and
sbb
mov
lret
imul
xchg
sbb
cmc
aad
je
push
and
jmp
pusha
dec
add
call
in
adc
movsl
scas
lds
mov
push
out
int
mov
cmp
mov
jecxz
push
and
cmp
sbb
jne
inc
addr16
pusha
push
or
cmp
mov
mov
inc
ss
jno
sbb
mov
push
imul
rclb
inc
or
arpl
or
push
rclb
pop
and
lcall
or
or
gs
call
xor
xor
test
push
mov
dec
lods
push
aas
les
or
gs
adc
int
adcb
or
movsb
lahf
adc
or
stc
insb
dec
fmull
mov
jo
idivl
loopne
bound
imul
and
jecxz
std
add
mov
xchg
xchg
push
dec
xchg
or
mov
push
cltd
cmpb
mov
ret
ss
mov
mov
inc
adc
arpl
rcr
cwtl
cmovae
inc
popa
movsl
fwait
xchg
mov
mov
push
test
shll
repz
aad
xor
add
divb
popa
pop
cmp
pusha
push
aad
leave
test
mov
add
adc
xchg
out
mov
add
sub
or
mov
lcall
inc
negb
jnp
lahf
loope
xor
jbe
das
pushf
mov
push
fnstcw
push
inc
mov
mov
xor
in
sbb
pop
sub
jbe
lds
mov
nop
mov
xor
idivl
push
repnz
or
sbbb
inc
ret
jge
inc
add
push
xorl
xor
cmp
imul
in
xchg
out
or
add
int
sub
push
arpl
gs
sarb
in
mov
lds
in
pop
mov
and
pushf
push
jp
hlt
bound
jle
imul
inc
push
dec
pop
popa
imul
test
sbb
lahf
inc
push
jmp
pop
stos
xchg
gs
mov
or
aad
addr16
mov
inc
or
in
fidivl
addr16
mov
ficoms
daa
sti
lock
das
sub
test
das
ljmp
inc
bound
pop
mov
fnstcw
dec
lods
aam
jbe
shll
mov
movsl
fwait
popf
ror
mov
cmp
fimuls
cmpsl
clc
cmc
repnz
out
loope
aad
add
pop
stos
jnp
sbb
jmp
inc
pop
cwtl
jns
jbe
xlat
lret
fildll
xchg
inc
sbb
adc
xchg
cmp
repnz
dec
and
loop
mov
and
lods
jmp
mov
sub
ds
rcll
aad
test
enter
ret
stos
popf
pop
outsl
leave
add
enter
xchg
push
mov
push
mov
mov
test
dec
out
imul
add
lods
sbb
popl
sbb
jnp
mov
lahf
imul
mov
mov
stc
hlt
jle
jmp
xchg
ret
addr16
scas
sbb
add
add
mov
lods
dec
dec
clc
test
or
mov
pop
cwtl
add
test
dec
dec
jmp
test
inc
mov
sbb
mov
sub
jno
sub
push
dec
pop
push
imul
jmp
jmp
adc
push
cltd
mov
aam
jp
jae
push
nop
cmp
push
xor
mov
in
jle
shlb
mov
sub
repz
push
mov
mov
sub
and
movsl
gs
sub
sub
jge
sbb
and
sarb
std
dec
xchg
xchg
orl
inc
jmp
fstps
rcrb
imul
cltd
shll
addl
push
arpl
fmuls
push
adc
and
push
fstpt
sub
dec
add
mov
aas
aaa
xor
mov
gs
jnp
push
pop
push
aad
add
aad
pop
sarl
pop
xchg
icebp
imul
cld
add
jmp
add
dec
fwait
dec
inc
mov
repz
add
push
xchg
mov
jbe
in
sbb
loope
ret
jmp
dec
mov
mov
push
cmp
sbb
icebp
inc
lret
xchg
jno
and
cmp
jbe
jmp
je
cmp
in
or
sub
in
sbb
popa
pop
pop
fcoml
and
das
ss
inc
pop
or
dec
adc
fxch
sub
jnp
stc
or
cmp
jnp
adc
sbb
add
lcall
sub
xchg
scas
mov
push
cmpsl
or
xchg
mov
stos
inc
inc
and
and
movsl
shll
mov
sbb
cltd
fsubrl
or
lock
lock
mulb
stc
negb
mov
pop
insl
xchg
pop
nop
outsb
dec
jl
arpl
inc
int3
push
dec
jne
xor
dec
int
mov
lret
jecxz
jle
dec
cmp
mov
dec
mov
fisubl
in
cmc
jns
icebp
lods
int3
repnz
in
cltd
jle
jb
mov
and
test
mov
xor
pusha
enter
neg
shlb
movsl
cmc
int3
imul
sub
fwait
jae
mov
jle
xchg
loopne
mov
adc
outsb
sub
mov
loopne
popa
lcall
jge
jno
rcrl
testb
push
in
jno
fidivrl
jl
sbb
addb
mov
js
and
out
in
jle
outsb
inc
out
mov
or
negl
mov
rcll
aas
aam
loope
sbb
push
xor
imull
xor
insb
movb
jb
cmp
pop
pop
inc
mov
loope
pop
sub
dec
xlat
inc
loop
add
cwtl
mov
cltd
cld
mov
incb
xor
mov
decl
popa
and
bound
dec
mov
and
leave
push
rcl
jo
pop
push
sbb
dec
push
call
daa
inc
cltd
mov
and
push
adc
jae
jge
repz
push
pop
nop
add
mov
sub
call
in
adc
call
scas
mov
nop
sbb
dec
dec
repnz
xchg
faddp
popf
loope
jnp
pop
cmp
insl
and
adc
jbe
sub
sarb
mov
in
imulb
sahf
mov
pop
inc
dec
xchg
cmp
mov
sbb
jl
mov
dec
push
add
add
dec
into
fnstcw
lahf
sub
sbb
pop
push
insl
mov
lret
add
pop
mov
idivl
loopne
push
push
insb
or
adc
sbb
repz
lods
movups
aam
jp
jge
mov
mov
push
sti
push
add
add
inc
or
mov
sbb
mov
and
lock
ja
mov
jb
pop
dec
shr
lods
push
xchg
and
push
cmp
sub
and
pop
xchg
test
shlb
subb
inc
test
pop
jle
jns
sbb
push
inc
cmp
test
outsb
sbb
dec
sbb
xor
and
arpl
add
subb
sub
jne
jp
ja
call
mov
lret
scas
pop
jb
notb
mov
dec
push
stos
xor
cmp
xor
imul
adc
mov
loope
push
dec
and
or
xor
jecxz
pushf
insl
ljmp
call
fnsave
push
pop
xchg
and
adc
sub
in
dec
and
dec
cmc
cli
movsl
cmp
pop
pop
rolb
inc
pop
ja
sti
push
xchg
pushf
sub
imul
sub
pushl
push
mov
inc
mov
in
jae
xchg
push
sti
mov
clc
loop
pop
xchg
adc
inc
mov
or
xchg
sub
cmp
jge
mov
mov
jmp
stos
xchg
cmp
out
outsl
xchg
jl
jmp
bound
xor
pop
sub
mov
mov
lods
int
jns
cmp
push
jle
aad
cmp
not
in
adc
sahf
and
repnz
ficomps
arpl
and
jo
fcomi
xchg
push
add
xchg
pop
mov
sub
enter
call
shrl
cmpsl
aad
jno
mov
loop
mov
mov
xchg
xor
jmp
testb
in
clc
popa
jg
je
and
dec
pusha
push
imul
fsubl
add
inc
adc
adc
iret
fiaddl
sbb
pop
mov
sbb
icebp
pop
rcrl
movsl
jp
int
xor
clc
mov
xchg
jnp
into
imul
icebp
ss
push
xchg
adc
aad
xlat
jb
pop
into
jmp
push
insl
out
dec
mov
and
mov
mov
insl
imul
loop
and
sub
push
push
xchg
and
fidivl
sbb
leave
inc
ja
xchg
pop
les
sahf
jbe
add
xorl
pushf
adc
loope
and
cltd
out
cld
mov
jb
pushf
jmp
out
fs
sarl
ret
mov
fs
or
push
in
sti
sub
in
fldenv
mov
sbb
andb
cld
mov
out
adc
loope
test
cli
call
cmp
mov
adc
shr
mov
sub
in
inc
test
lods
hlt
xchg
stos
mov
inc
shll
mov
pop
stc
in
scas
mov
and
cld
aam
repnz
jmp
inc
bswap
mov
imul
setb
lahf
clc
outsl
or
fildll
mov
inc
mov
dec
mov
pushf
arpl
xor
mov
cmpsb
das
adc
mov
mov
jmp
push
sub
and
inc
push
cs
jl
iret
mov
int
and
xchg
cmpsl
jp
mov
sub
adc
test
repnz
cld
mov
mov
push
mov
sti
inc
adc
pop
lea
mulb
lods
mov
add
dec
fnstcw
and
jbe
cli
xor
nop
mov
jns
or
test
cmp
pop
outsl
and
sub
mov
or
leave
xor
and
push
or
inc
or
mov
cmp
xor
shll
and
pop
fisttps
xchg
stos
outsl
sti
stc
jle
jg
add
fwait
lock
and
inc
in
cli
add
add
xchg
int
mov
lds
enter
or
push
sbb
xlat
out
xchg
mov
test
aam
cmpsl
jae
addr16
xlat
popa
jb
cmp
pop
rolb
mov
mov
sbb
mov
dec
push
into
daa
inc
push
loopne
push
imul
sbb
mov
push
sub
sbb
sub
iret
jmp
leave
sbb
xor
adc
dec
push
add
lahf
fldenv
push
test
and
cmc
dec
xor
sbb
sti
loopne
jo
sbb
push
adc
mov
dec
fldcw
nop
pop
or
pop
shl
outsb
pushf
pop
adc
out
mov
in
and
push
add
repnz
push
sbb
xchg
xchg
test
inc
mov
jo
add
sbb
repz
mov
sbbb
mov
sbb
adc
ficoml
outsb
outsb
pop
rolb
sbb
push
and
push
es
mov
pop
add
outsl
add
repnz
lock
and
shrb
mov
loope
dec
cmp
sti
addr16
and
mov
inc
pushf
push
les
cltd
cmc
dec
xor
out
pop
dec
test
sbb
push
adc
jmp
cld
adc
pop
gs
loopne
push
addr16
lcall
dec
push
fstpt
jne
mov
cltd
adc
mov
jge
push
repnz
lds
or
jp
in
fadd
jl
and
pop
bound
jl
insb
sbb
lds
fisubl
xchg
dec
enter
mov
sbb
or
test
cld
sub
mov
push
cs
cmc
and
out
push
sub
ja
mov
out
hlt
das
cmp
cwtl
cmp
ficoml
jb
movsb
sub
data16
adc
mov
dec
arpl
mov
xchg
sbb
jecxz
xor
pop
fcomps
dec
mov
push
push
fists
cvttps2pi
xchg
lock
repz
aam
add
int3
cwtl
pushf
jmp
push
jae
loopne
btr
outsl
jno
sbb
imul
test
cmp
and
push
ljmp
dec
xor
fwait
dec
xchg
lret
xor
xchg
into
dec
inc
xchg
aad
or
jmp
loopne
pop
mov
jl
inc
mov
adc
push
daa
orb
jle
gs
mov
add
mov
enter
or
adc
call
mov
scas
fimuls
sbb
jge
pop
pusha
and
test
or
pop
into
or
out
scas
pop
repz
mov
or
dec
testb
xor
dec
mov
ret
push
leave
mov
mov
lahf
sub
leave
pushf
shlb
mov
int
jno
mov
push
lods
xor
and
cmp
or
xlat
pop
mov
fistpl
inc
pop
mov
lcall
inc
out
ror
aas
cwtl
xchg
data16
jo
lods
xchg
mov
inc
gs
jg
stc
lcall
loop
cmp
stos
add
xchg
imul
or
shlb
cmc
hlt
out
inc
xchg
movl
xor
setg
pop
int3
fwait
pusha
adcb
jb,pt
repz
pop
daa
sti
dec
sub
mov
scas
das
ret
testl
rcrb
adc
addr16
ds
xor
mov
popa
push
cltd
lea
in
mov
int3
leave
cmpsb
push
in
js
into
jmp
stos
out
ss
sahf
xchg
xchg
mov
xchg
ret
iret
test
pcmpeqb
and
push
push
lods
pop
jns
cwtl
xchg
repnz
or
xchg
ds
enter
push
push
adc
lock
test
mov
cmp
mov
jno
xor
outsl
std
lret
xor
inc
les
mov
mov
or
das
call
rcrl
add
sbb
adc
rcrb
push
in
scas
cmp
sub
cmc
repz
popf
popf
push
ds
cld
imul
add
test
add
mov
lock
daa
jmp
push
test
mov
xor
in
jg
inc
lahf
call
es
jecxz
rorl
dec
aad
notb
lcall
xor
pop
cmp
sti
not
dec
push
lret
ljmp
jno
push
imul
add
xor
xlat
pop
jnp
xor
inc
xchg
shll
dec
addr16
negb
cltd
vorps
fwait
aad
mov
and
test
mov
dec
in
jecxz
xchg
rcll
fs
pop
lret
pop
int
in
icebp
jne
mov
fstpl
dec
sub
adcl
aas
outsb
imul
das
scas
adc
into
das
xor
cs
mov
mov
jle
and
test
cmp
in
sub
mov
scas
pop
sub
mov
jecxz
lret
push
xchg
mov
pop
lods
in
popa
jge
imul
and
lods
cmp
sub
jg
mov
dec
aad
xchg
sub
push
cltd
mov
xchg
out
and
test
push
xchg
fstpt
jo
es
popa
pop
xor
cmc
stos
test
rcr
inc
icebp
or
mov
sarb
add
push
and
jae
inc
push
pop
andl
frstor
push
in
loopne
cmpb
cld
push
inc
fs
scas
lcall
ret
xchg
ret
test
insl
jp
icebp
push
inc
cmpsl
js
ja
push
and
mov
push
sti
and
outsb
lret
fsubrp
mov
xchg
cmp
cmp
es
aad
cli
mov
in
mov
xor
or
xor
mov
popa
ds
mov
mov
hlt
inc
lcall
icebp
or
imul
sub
out
push
es
lods
and
into
inc
adc
mov
std
inc
push
fcoms
push
jmp
push
add
xor
iret
or
fldenv
dec
movsl
insb
dec
inc
dec
dec
mov
pop
pop
jns
add
popf
push
xor
outsl
pop
lock
arpl
popf
adc
push
loopne
pop
dec
inc
test
cmc
cmpsl
xchg
iret
xor
pop
pop
cmpsl
cld
pop
fldcw
cmp
pop
inc
pushl
sti
mov
ds
shlb
test
add
xchg
jg,pt
or
frstor
aaa
dec
test
push
jg
scas
imulb
mov
pop
test
dec
pop
add
jp
xchg
ljmp
inc
mov
mov
mov
jns
mov
cmpsb
and
mov
xor
pushf
lds
js,pt
lret
cmp
sub
jmp
icebp
jle
mov
outsb
xor
inc
inc
insl
push
adc
out
jae
push
sbb
scas
outsl
lcall
pushf
push
adc
mov
mov
fcmovbe
pop
in
shll
jg
sbb
mov
mov
jne
and
adc
fsubl
fnstsw
pop
dec
push
jno
cmpsb
cmp
sarl
clc
hlt
in
repz
lods
sbb
in
push
xor
stc
pop
and
int3
mov
test
dec
and
lds
mov
cmp
imul
sub
lds
fisubrs
popf
je
adc
frstor
test
sub
pop
cmp
lcall
movsb
xor
and
imul
imul
jbe
pop
stos
or
das
lds
jae
mov
fidivs
push
loope
jne,pn
push
jno
loopne
jb
mov
jno
inc
sub
and
andb
adc
add
shll
pushf
pop
push
sbb
jg
jmp
rcrb
ss
jle
sbb
mul
aam
jno
int3
mov
fisttpll
mov
popf
xchg
lock
mov
inc
out
sahf
lds
fcmovbe
adc
adc
mov
jmp
push
xchg
stos
mov
xchg
cmp
sbb
mov
xor
call
push
jnp,pt
mov
rcrb
sbb
ja
lods
pop
jp
stos
dec
lret
aas
movsl
dec
loop
pop
out
xchg
aam
lcall
mov
es
push
cmpsb
and
cmp
inc
push
push
adcb
or
scas
dec
mov
testb
cmpl
mov
lret
fnsave
mov
arpl
adc
rorb
fimull
and
test
icebp
fwait
push
addr16
cmp
xchg
cmpsb
int3
mov
or
inc
cmpsl
stos
cmp
mov
ret
das
iret
sti
pop
jno
mov
sbb
mov
loopne
mov
loop
add
popa
and
and
pop
mov
xorl
out
popa
jge
and
sarb
cwtl
int3
push
jp
in
cs
jmp
and
out
ljmp
stos
and
mov
repz
mov
ror
jnp
dec
or
sbbb
pop
mov
lods
adc
mov
stos
lret
mov
pop
clc
jb
inc
stc
inc
bound
popa
xchg
cmpsb
js
sti
mov
rcrl
mov
mov
scas
mov
xchg
jmp
std
jg
mov
pushf
andl
test
movsb
arpl
jmp
lcall
mov
mov
dec
add
je
add
xchg
shll
mov
sbb
pop
cli
in
and
sti
test
adc
aad
jo
xchg
in
mov
jns
orl
jno
xchg
xchg
repz
xor
divb
leave
add
into
in
movsb
iret
outsb
xlat
add
fwait
lods
xchg
sbb
sub
int3
ret
push
rcll
mov
std
sbb
and
pop
arpl
cwtl
negl
pop
add
scas
dec
adc
jmp
test
jecxz
loopne
cli
mov
mov
sub
lock
in
rcr
mov
inc
fdivrp
mov
lcall
cmp
xchg
cmp
aam
xchg
outsb
fwait
rsqrtps
pop
sbb
dec
loope
std
js
aas
xor
pop
cwtl
mov
xchg
movsb
nop
imul
lahf
aaa
fnstsw
lret
movsl
pop
add
jo
ljmp
out
xor
adc
pop
and
mov
pop
test
insb
in
push
mov
or
fwait
mov
icebp
stos
sub
jmp
subl
call
addr16
jle
cmp
sahf
aam
cmp
mov
cmpsb
xchg
mov
mov
lcall
push
sbb
jle
adc
push
cmp
xor
cmp
push
out
insl
push
or
cld
mov
push
and
int
xchg
inc
mov
xor
iret
pop
jnp
inc
jge
xlat
pop
dec
add
in
pop
cmp
into
adc
xor
cmp
pop
pop
and
roll
into
nop
leave
test
pop
lahf
out
or
xor
xchg
mov
mov
inc
fisubrl
mov
outsl
lock
sub
stos
lret
mov
add
push
cmpsl
mov
testl
lock
xor
adc
dec
dec
sub
push
sahf
push
and
cli
test
jg
out
adc
push
out
fmul
pop
cltd
adc
jns
mov
daa
mov
pop
cmp
dec
test
sbb
movsl
mov
mov
fstps
pop
loopne
shlb
std
and
nop
and
and
inc
insb
xchg
sub
pop
or
add
mov
cld
lcall
movsl
lds
lret
loop
daa
aas
repnz
adcl
pop
aam
loope
lods
add
adc
dec
push
pop
sbb
mov
repnz
push
insl
testl
and
fbstp
inc
mov
fldl
aaa
scas
sbbl
lahf
mov
mov
mul
js
sbbb
sbb
jb
orl
cmp
dec
mov
xor
push
xor
pop
mov
cmp
shrb
dec
push
or
mov
shrb
sub
enter
mov
fidivs
arpl
ljmp
pop
clc
xor
mov
or
scas
sub
lcall
jb
sbb
push
mov
xchg
and
mov
cmpsb
push
dec
lret
cmp
mov
rcrl
cmc
and
sub
xchg
xchg
js
mov
xchg
push
rolb
test
xchg
pop
cmp
mov
pop
outsl
fs
push
inc
ds
jmp
lds
push
add
nop
lret
aam
fnstsw
mov
frstor
int
mov
or
push
mov
hlt
lea
ss
inc
jecxz
pop
mov
cli
ljmp
sub
iret
push
repz
lea
cmp
in
dec
mov
xor
lcall
inc
roll
call
push
in
enter
shll
rolb
es
jge
mov
cmp
add
mov
and
je
out
add
imul
or
or
adc
pushf
pop
mov
loopne
pop
jmp
inc
xor
jmp
and
stc
popf
testl
or
xchg
pop
sub
stc
lock
push
clc
xchg
bound
iret
daa
mov
jl
xor
les
arpl
shlb
pop
data16
push
mov
jns
adc
pushl
pop
xor
mov
mov
pop
pop
fadds
sub
add
incb
popa
sub
and
inc
sbbl
and
daa
mov
mov
dec
cmp
xchg
jae
and
inc
insl
imul
addr16
int
jne
stos
mov
push
pop
push
inc
cmp
mov
sets
inc
fldl
lahf
ficompl
fs
mov
loope
inc
push
bound
push
inc
push
outsl
cmp
cli
out
std
push
data16
iret
adc
aas
mov
rcl
lahf
push
out
xor
lcall
sahf
aad
pop
jl
sub
dec
push
mov
jecxz
mov
jmp
xchg
std
mov
cmp
test
mov
pop
mov
push
mov
fstp
pop
insl
jmp
in
cs
test
fs
je
jp
sub
push
test
cmpsl
push
mov
loopne
pop
dec
pop
jl
lods
mov
loop
dec
dec
pop
push
and
jp
test
cs
pushf
xor
dec
xlat
shll
and
sub
xchg
push
pop
add
mov
paddb
mov
add
xchg
fisttpll
cmpsb
das
mov
cmp
xchg
dec
movsb
xor
and
sbb
or
and
adc
push
je
lcall
test
mov
outsl
dec
cmp
subl
lahf
insl
movsl
les
scas
mov
dec
in
test
test
sub
cmp
mov
push
lret
leave
mov
lock
cli
push
mov
in
xor
sub
push
xchg
mov
cmp
imul
pop
mov
aaa
add
scas
pop
mov
sbb
inc
xchg
mov
push
cmp
stos
rcr
adc
in
outsb
xchg
scas
cld
mov
punpcklwd
jmp
jg
xchg
push
iret
fs
inc
aam
fsubr
arpl
add
in
mov
ja
jge
pop
daa
hlt
iret
add
into
cmp
xor
push
ds
fistl
push
iret
add
data16
ljmp
mov
in
imul
stos
pop
enter
sub
or
cmc
adc
inc
add
pop
mov
push
sbb
into
jno
cmp
fsubl
push
les
arpl
jp
rcll
inc
adc
push
jmp
nop
call
aad
scas
fldl
cltd
sbb
das
mov
lds
and
lcall
lret
ljmp
jno
fstl
cld
sarl
mov
mov
jp
xor
jge
js
pusha
and
dec
sbb
jecxz
xor
lahf
jg
jae
in
and
inc
repz
rclb
sub
sub
mov
fstl
and
xchg
pop
arpl
shlb
lret
cmp
repnz
jmp
sub
les
adc
sbb
cmc
movsl
ds
mov
and
sbb
lds
push
push
inc
push
bound
pop
pop
cmpb
and
xchg
add
iret
xor
push
fdivr
stos
jo
sbb
ljmp
jmp
adc
jnp
ds
mov
mov
adc
or
mov
int
mov
adc
nop
testb
xor
loopne,pt
and
fldl2e
sbb
test
les
stos
sarl
sub
jb
dec
lahf
sub
mov
nop
lcall
dec
pop
jl
jbe
xor
repnz
xlat
je
dec
inc
add
gs
inc
xorb
scas
sbb
inc
jge
bound
push
adc
sti
gs
stc
jne
pop
mov
andb
rorl
test
mov
add
cmp
div
sub
push
jno
pop
ss
ss
jns
mov
xchg
lcall
movsl
mov
cs
in
xor
fcompl
inc
xchg
int
dec
jg
jg
lcall
out
dec
shr
adc
popa
and
xor
outsl
sub
fnsave
test
and
stos
in
adc
pop
fs
mov
int3
imul
stos
push
mov
sub
leave
push
dec
sub
pop
adc
ret
mov
loope
mov
andl
repz
loopne
cld
cmpsb
aad
and
xchg
or
out
rclb
add
arpl
or
mov
cmpsl
push
sub
ret
fcmovnb
int
outsl
jbe
mov
add
inc
sti
pop
movsl
js
inc
or
xchg
aam
mov
and
push
xchg
pop
das
in
or
push
loope
xor
cmc
lock
inc
dec
scas
testb
out
test
mov
sub
add
in
and
xchg
fdivl
sbb
test
jne
sub
inc
ljmp
mov
fidivs
mov
repnz
mov
xor
cli
ret
jge
push
jb
inc
imul
fisttpl
cs
fs
mov
push
pop
hlt
sbb
inc
add
imul
out
aaa
pop
movsb
data16
lock
jle
mov
cwtl
cmp
fs
dec
data16
xor
jecxz
fsts
clc
jge
fldenv
leave
sbb
cli
push
jae
pop
adc
arpl
xor
pop
mov
mov
in
and
aad
imul
dec
imul
gs
aad
jg
xor
loop
mov
leave
mov
xor
cld
mov
jmp
rcrb
push
in
je
outsl
ljmp
mov
test
test
mov
sti
rol
push
jo
jo
mov
outsl
shld
mov
lcall
in
sbb
movsl
mov
pushl
push
adc
xlat
mov
stos
push
nop
and
push
pop
add
mov
sti
hlt
jmp
jno
xor
mov
scas
push
adc
inc
jp
aas
mov
hlt
push
mov
dec
mov
sub
sub
inc
daa
fistps
fimull
jne
pop
mov
jns
push
mov
add
inc
dec
cs
out
out
movl
sub
test
cwtl
shrb
filds
cwtl
xor
ss
loopne
repz
hlt
jle
sub
scas
shll
dec
in
das
loope
adc
ljmp
setp
sahf
arpl
pop
mov
jo
lcall
cmc
dec
test
xor
out
adc
jl
mov
sbb
daa
ds
sbbl
arpl
and
or
sbb
jo
jge
aam
pop
dec
push
fisttpll
pop
scas
je
push
xchg
out
inc
lods
enter
add
shll
xor
scas
test
jne
ljmp
iret
cmp
insb
mov
and
jge
repz
nop
iret
mov
fsubrs
and
out
test
icebp
adc
testb
stos
call
test
jmp
mov
sbb
idivb
jg
enter
cmp
push
int
cmp
xchg
jne
rcl
mov
call
pusha
scas
aas
mov
jg
andb
push
rorl
test
fs
lahf
cld
xchg
ret
inc
push
bnd
mov
mov
jb
add
mov
scas
cmp
xchg
aas
lods
call
stos
jb
jge,pn
mov
bound
push
push
inc
dec
push
push
xchg
xchg
adc
inc
jge
cmp
ret
arpl
pop
xchg
mov
stos
cli
ss
mov
mov
flds
cli
lods
and
rolb
push
movsb
inc
nop
and
dec
or
jle
xchg
jg
fidivrl
add
push
mov
test
fists
shr
into
ret
dec
lgdtl
push
sahf
in
jnp
sbb
rcll
xchg
push
dec
and
enter
xor
inc
add
and
gs
pop
inc
inc
mov
adc
push
inc
sti
test
sub
xor
iret
push
xchg
push
gs
fsubr
or
and
out
and
out
or
stos
push
xchg
mov
sub
xchg
adcl
dec
into
add
pop
inc
ffreep
sub
mov
imul
and
inc
mov
dec
mov
jp
pop
repz
sbb
shlb
pop
sub
adc
fstpt
dec
sub
xchg
lret
dec
push
inc
insb
out
inc
dec
outsl
add
cli
mov
fdivrp
stos
out
popa
lcall
or
lods
mov
inc
xor
repz
or
stos
push
jbe
cwtl
cmpsl
dec
into
in
jle
xchg
inc
mov
adc
loopne
sbb
mov
cli
out
scas
mov
mov
loopne
outsb
jmp
or
repz
or
sub
je
jge
push
cld
imul
fsubl
inc
xor
aas
inc
or
push
and
sub
adc
cmp
je
fwait
ja
xchg
call
mov
repnz
loopne
jmp
or
dec
pusha
dec
dec
vsubpd
pop
aad
fnstsw
or
pop
cmpsl
mov
ljmp
lods
loop
jle
jp
icebp
popa
cmp
pop
fimull
mov
fwait
outsl
adcb
cmc
into
lea
push
pop
sub
inc
push
or
jl
sub
or
enter
clc
push
outsl
jns
add
mov
loope
sub
lret
gs
into
adc
daa
iret
aam
shlb
mov
add
or
push
in
xchg
cmp
lds
sar
lock
fadds
add
jne
xor
orl
add
sbb
les
or
xor
shr
test
xchg
je
stos
xor
lcall
pop
add
jae
loop
das
ss
roll
dec
cmpsl
aam
mov
pop
popa
cmp
out
cmp
pop
je
ret
fdivl
dec
push
sbb
cli
cltd
movb
push
mov
jae
sub
mov
int
les
sub
out
push
adc
inc
imul
or
sub
mov
cld
mov
dec
mov
popf
mov
mov
push
in
dec
sub
adc
fdivrl
lods
pop
sub
sub
push
xor
shl
dec
and
sti
push
rcll
dec
lret
dec
xor
or
pop
mov
cmc
cmp
mov
repz
xor
repnz
js
adc
sub
mov
dec
xchg
ss
ret
ficoms
lds
xchg
mov
mov
mov
xchg
fiaddl
outsl
jg
push
mov
jbe
and
mov
cmpsb
int3
cmp
dec
jbe
cmpsl
out
mov
movsb
rolb
dec
or
sub
lods
sbb
sub
mov
cmpsl
pinsrw
pusha
adc
jne
idiv
test
rolb
cmp
adc
les
pop
cmpsl
arpl
ljmp
sub
shl
in
outsb
lock
in
mov
lock
add
movsl
scas
xchg
add
push
push
test
les
lods
xor
ret
adc
xchg
xor
lcall
pop
or
sub
cmp
sub
mov
test
pop
call
sub
jecxz
mov
out
gs
mov
push
bound
cmpsb
aas
sbb
xchg
test
scas
shr
fadd
xchg
test
int3
test
shl
mov
mov
jne
ret
and
mov
jne
cs
xor
loopne
repnz
mov
mov
push
fstl
inc
lret
adc
imul
mov
outsb
ja
int3
into
adc
xchg
or
and
jle
aas
out
lcall
pushf
xchg
jecxz
push
mov
xorb
cld
hlt
cltd
pop
dec
cld
sbb
and
dec
aad
pop
mov
xchg
imul
jle
mov
mov
jns
push
or
push
jbe
insl
add
addr16
add
add
lods
cmp
xchg
cmpb
xchg
hlt
pop
iret
out
mov
fistps
cmp
ret
shlb
mov
cwtl
das
flds
and
and
or
sub
sbb
adc
les
call
push
cmpsl
adc
insl
xor
xchg
jecxz
mov
enter
cmp
inc
cld
cmpsl
sub
push
mov
out
jg
das
out
sub
jge
push
jl
sub
scas
jnp
sub
add
mov
cld
sbb
lods
shl
adc
mov
jo
jecxz
push
sbb
push
mov
gs
adc
hlt
sbb
test
repnz
jp
repz
push
jo
xor
inc
ror
bound
mov
out
dec
fdivrs
lock
ficomps
cli
es
clc
dec
gs
and
sub
je
push
mov
push
arpl
movsb
add
add
jbe
loope
sbb
imul
pop
pop
sahf
and
movsl
xor
cmp
cmovs
scas
sub
mov
repz
dec
pusha
push
ja
pop
out
push
add
out
hlt
sbb
out
pop
mov
mov
repz
das
jbe
inc
insb
scas
cmp
imul
imul
xor
push
out
push
xchg
cmp
test
ret
xor
arpl
xchg
cmp
adc
mov
cmp
inc
ljmp
mull
test
adc
xchg
out
mov
jl
xor
nop
mov
jnp
mov
scas
pop
ds
sti
push
inc
sub
ret
push
adc
mov
sbb
je
movb
std
mov
andb
daa
aam
xchg
or
and
or
aas
loop
mov
sbb
mov
mov
mov
repnz
dec
pop
mov
loop
test
outsl
xor
jg
and
xchg
pop
sahf
jns
push
fldcw
ret
out
cli
cmp
push
nop
test
dec
je
enter
cld
bound
idiv
in
jl
jo
aam
ficomps
xchg
ljmp
push
mov
sbb
movups
sbb
sub
iret
ror
daa
push
jmp
cmp
and
repz
lods
enter
cmp
pop
mov
push
call
push
adc
cmp
mov
test
jns
jg
xchg
movsb
sbb
jmp
out
ss
push
bound
addr16
loop
add
cmpsl
push
call
lret
lret
and
out
sub
push
cs
inc
push
int3
pop
test
cmp
mov
lds
repz
sarl
cmc
imul
pop
jmp
mov
mov
stos
mov
cwtl
rclb
mov
add
xchg
or
cmc
adc
inc
pop
addl
shll
xchg
and
jae
sub
je
pop
std
lods
or
fdivl
dec
mov
or
dec
cwtl
mov
push
stos
fidivs
or
mov
testb
cwtl
dec
jge
stos
loopne
jnp
jne
pop
in
jl
dec
dec
jge
xor
add
cmp
sbb
orl
adc
add
sahf
pushf
in
mov
mull
push
and
pop
in
insl
je
sbb
xchg
pusha
mov
sub
aad
movsb
xchg
fs
push
adc
jns
mov
sbb
pop
incb
andl
pop
lods
mov
inc
int3
out
sub
cltd
cmpb
out
pop
out
in
sbb
sbb
je
sbb
add
pop
mov
movsl
inc
or
daa
mov
aas
out
push
xchg
out
repnz
xor
stc
icebp
jnp
fwait
push
pop
jmp
fnstsw
jmp
mov
arpl
pop
mov
fistpl
jge
jb
popa
xchg
jecxz
pop
je
call
mov
push
arpl
lea
lods
out
cmpsl
addr16
push
fstl
addl
lock
xchg
cmpl
add
std
inc
and
push
mov
stos
xor
repz
and
subps
rcrb
imul
mov
mov
mov
xor
je
movsb
or
adc
data16
lods
cmp
js
and
les
shrl
mov
jmp
stos
sbb
repz
or
js
scas
out
and
push
cli
filds
mov
dec
cltd
jge
xor
add
imul
mov
aas
inc
mov
sbb
es
cmp
xor
and
mov
xchg
repnz
jb
pop
lahf
ss
outsb
cli
in
sti
jge
aam
pop
pop
lahf
add
pop
sub
mov
into
lods
movsb
dec
fwait
test
xchg
mov
xor
mov
pop
frstor
imul
adc
movsb
jbe
mov
dec
dec
inc
add
shr
add
rorl
add
cmp
int3
mov
and
shlb
cmp
fcmovnb
fstps
xlat
lds
pop
fistl
push
sbb
mov
adc
xchg
clc
jp
je
fldl
test
cmp
jp
bound
mov
out
mov
bound
ret
mov
mov
sbb
loope
or
pop
arpl
inc
ret
int
sub
int3
pop
or
push
aam
sahf
stos
clc
mov
mov
les
jb
addr16
popa
fimull
dec
out
mov
xor
int3
movsb
sub
mov
out
mov
es
mov
enter
loopne
push
popf
cmp
mov
movsb
les
fidivs
sbb
pop
mov
inc
inc
lock
adc
aaa
jge
inc
sarl
sbb
push
mov
or
or
ja
sbb
stos
movsb
jnp
sbb
add
clc
or
fwait
xorb
imul
cmc
int
xor
mov
repnz
and
xor
add
or
cli
jae
mov
sbb
mov
sbb
and
std
popa
adc
push
lock
lret
mov
into
testb
addr16
mov
outsb
aas
cmp
mov
xchg
out
xchg
in
lahf
pop
cmp
hlt
push
fnsave
bound
sbb
loopne
dec
into
jmp
std
sub
lea
sbb
mov
inc
adc
test
enter
cmp
xchg
lahf
rcrb
mov
fisubs
sub
nop
outsb
fsub
pop
lret
sarl
pop
jno
add
add
popf
adc
xor
dec
fisttpll
or
movsl
mov
pop
xlat
add
outsb
add
jb
pop
dec
push
sub
fs
call
movsb
jecxz
mulb
dec
or
jl
push
mov
sub
xchg
push
pushf
cmp
xchg
cmpl
mov
iret
jge
xchg
push
ds
cwtl
push
nop
in
inc
cmp
sbb
movsl
mov
jns
xor
inc
subl
rcll
mov
xchg
sbb
leave
dec
dec
addl
es
sub
jg
dec
int3
dec
andl
movsb
jno
cmp
jge
test
cmp
add
test
addr16
cs
ss
sahf
xchg
xlat
mov
xlat
mov
xor
sbb
mov
sbb
push
mov
into
push
scas
ds
jge
jge
lock
jb
xchg
sbbb
pop
test
and
xor
xchg
lret
mov
enter
xor
cmc
xor
fs
dec
sti
faddl
icebp
enter
mov
les
cmp
insl
in
icebp
sahf
jmp
mov
aam
ss
scas
lds
mov
and
jo
fbstp
xchg
in
mov
pop
mov
mov
jb
ds
mov
lds
rcrb
push
jo
and
mov
cli
pop
in
mov
outsl
add
add
pop
sbbl
outsb
stos
dec
cmpsb
test
dec
adc
mov
lcall
dec
jl
and
cld
jno
mov
mov
sti
jl
xor
push
stc
insb
stos
mov
insb
arpl
cmp
jns
push
jb
lods
adc
das
add
adc
int3
pop
mov
cli
xchg
cmp
pop
pop
jmp
push
addb
jg
inc
fistl
dec
sub
pop
lea
lret
push
mov
add
xchg
lret
lea
in
inc
imul
xor
lahf
sbb
pop
cwtl
pushf
rcr
fdiv
mov
movsb
ss
mov
push
push
and
fisubrs
push
lret
cld
fs
inc
sbb
lahf
mov
jmp
jle
movl
adc
bound
arpl
or
mov
mov
outsb
push
sbb
sar
xor
jg
repz
fucomip
sbb
and
rorl
pop
jmp
cltd
mov
mov
test
fsubl
cmovo
or
or
in
adc
insl
pop
pushf
jmp
in
ret
pop
or
cmp
ss
jmp
and
jle
ss
mov
int3
sub
iret
imul
sti
pusha
imul
push
mov
dec
mov
add
push
xor
std
in
int
nop
and
push
inc
jge
int
repnz
imul
inc
andb
fiaddl
add
sbb
nop
pop
push
cmp
push
das
ror
or
jb
mov
mov
ret
leave
pop
pop
inc
into
fs
aam
pop
ja
clc
push
testl
ljmp
cmp
adc
enter
aad
xor
push
out
push
sub
fs
ja
ja
jl
pop
or
cmp
cs
sbb
clc
jg
jmp
les
xchg
rclb
cltd
ja
sub
sub
dec
jbe
and
sub
rorl
inc
movsb
insb
add
sub
rcr
lods
neg
xchg
mov
cltd
jle
hlt
cmp
jl
pop
xor
jb
cltd
loopne
jp
pop
repnz
lret
ret
dec
sub
addr16
cmpps
aam
cs
push
push
adc
out
ret
push
roll
jmp
pop
sbbb
cmpsl
mov
jmp
stos
jge
leave
jo
sub
test
push
inc
lret
or
jo
mov
lds
inc
mov
mov
or
insb
lea
pop
inc
xchg
rolb
mov
stc
add
add
loopew
xor
jl
jecxz
bound
imul
push
inc
and
call
and
jecxz
push
fucomip
in
lock
inc
lds
lock
rcl
aad
xlat
cmp
mov
dec
mov
in
xchg
jg
es
sub
xor
sbb
xor
sbb
fisubs
clc
das
subb
shll
ret
sbbb
sbb
lods
jge
loope
in
rcrl
pop
adcb
inc
cmpl
pusha
pop
jmp
sbb
inc
jg
dec
xor
lds
ja
je
rol
mov
dec
mov
mov
cli
jno
lds
xchg
inc
pop
cmc
dec
jl
outsb
adcb
jmp
inc
inc
in
pushf
cmp
or
movsb
or
or
sub
xor
repnz
lcall
fidivrs
xchg
data16
xchg
sbb
ss
cmp
and
dec
ret
add
cmp
add
out
int3
inc
pop
xchg
or
mov
add
pop
sub
nop
fisubrl
dec
xlat
sarl
in
mov
xchg
pushf
cmpsb
and
dec
outsb
xor
dec
aad
pop
cwtl
sub
and
das
ds
bound
lock
adc
popa
ljmp
inc
inc
xchg
jmp
dec
cmc
fdivs
cmc
in
test
mov
mov
arpl
leave
pop
adc
adc
xor
into
add
aad
les
jo
inc
movb
ficoms
fsub
shrb
cmp
jle
cwtl
push
sub
cmpsl
lds
in
mov
or
notl
jp
mov
adc
dec
scas
pop
fwait
mov
jg
addl
xchg
sub
stos
lods
cmp
pop
jge
add
les
and
daa
dec
hlt
sbb
sbb
push
or
cmp
jbe
divl
push
and
xchg
pop
adc
mov
jae
neg
pop
cli
pop
dec
mov
pop
jmp
jle
jle
stos
lods
and
rcrl
or
outsl
repnz
pop
in
push
stos
pop
pushf
push
lods
enter
pop
in
enter
out
enter
mov
leave
shl
lret
mov
jnp
mov
icebp
insb
bound
aas
inc
stos
out
xchg
dec
lret
leave
jae
inc
cli
cmpl
dec
and
push
insb
fs
adc
mov
add
jle
push
mov
adc
mov
sarl
jae
adc
pop
sarl
aam
mov
mov
testl
cld
loope
stc
mov
je
daa
loope
scas
es
dec
sbb
lcall
mov
add
pushf
popa
int
pusha
in
aaa
shl
fs
mov
ret
sub
cs
cmp
sbb
and
movsb
js
imul
or
jns
nop
lret
mov
enter
inc
loopne
call
mov
cmp
cmc
cmp
jl
nop
or
jnp
mov
in
fdivrl
movsb
dec
sbb
insl
pushf
add
ret
adc
stos
aam
mov
or
push
xchg
cmpl
notl
xchg
pushf
or
sbb
sub
lret
sbb
divb
dec
add
femms
bnd
ljmp
or
aaa
addr16
les
push
mov
pop
iret
push
movsl
lret
out
pop
mov
pusha
push
dec
lock
pusha
push
xchg
lahf
int
loop
dec
and
push
test
and
xchg
lret
movsl
add
xchg
cmp
loope
cmp
pop
push
jae
leave
adc
pop
xchg
dec
loopne
fdivrl
popf
dec
jle
push
scas
lods
imul
jge
jecxz
js
push
xlat
and
adc
mov
jmp
ror
cwtl
lock
int
mov
sbb
sub
repz
shl
stos
sahf
mov
sub
lds
cmp
shrl
mov
or
hlt
loope
pop
test
xor
xchg
inc
inc
lret
les
scas
xlat
add
jne
sbb
es
cltd
mov
mov
arpl
hlt
jg
mov
cmp
mov
stos
pop
add
mov
xchg
and
addr16
push
es
sbb
ja
jne
das
mov
ja
in
shll
mov
dec
push
idivb
repnz
std
inc
mov
stos
ficomps
dec
cli
and
and
aaa
out
ds
adc
cwtl
sub
imul
push
mov
mulb
stos
dec
mov
or
mov
ss
mov
arpl
pop
addr16
gs
pop
es
mov
int
dec
shll
into
test
mov
lret
xorl
mov
lahf
jg
jb
into
push
cmp
jnp
inc
lret
test
xchg
out
sub
mov
pop
xchg
aaa
jae
mov
frstor
jo
mov
arpl
lcall
xchg
out
cmpl
sti
inc
mulb
mov
loopne
lea
mov
add
imul
xchg
push
adc
sahf
cmp
scas
mov
pop
hlt
mov
movsb
mov
ret
jns
iret
ficompl
shll
add
mov
mov
sbb
and
lea
sub
sti
fcompl
push
dec
adc
adc
mov
cmp
shll
dec
mov
adc
in
ja
cmp
icebp
mov
inc
xchg
xlat
push
xor
mov
dec
xorb
mov
push
xor
cmp
pop
scas
jnp
adc
or
or
bound
xchg
adcl
and
push
and
add
ss
mov
dec
call
lock
sbb
out
push
leave
int3
and
iret
inc
rclb
lret
adc
pop
jae
pop
or
loopne
xorl
fisubl
inc
pusha
iret
arpl
call
adc
jbe
lcall
add
and
and
cli
leave
add
cli
push
or
sub
lret
ds
mov
ljmp
icebp
xlat
insl
push
sub
decl
out
outsb
sub
mov
inc
js
lret
pushf
pop
imul
adc
call
fnstcw
add
cmp
mov
mov
rcrb
add
sub
addr16
movd
add
stos
pusha
gs
mov
mov
stos
pushf
mov
sahf
sub
jae
dec
addb
sbb
push
std
xor
jno
bound
fstl
outsl
mov
xchg
inc
int3
cmp
into
pop
and
js
push
subl
popa
mov
jns
ret
xchg
inc
test
mov
pop
and
pop
dec
xor
dec
inc
mov
xchg
fists
loopne
mov
xchg
sub
xor
iret
adc
sar
and
lret
test
inc
mov
cmpsl
rcll
shlb
sub
push
lahf
daa
ret
inc
mov
xor
jmp
adc
cli
shlb
push
sbb
push
mov
mov
jo
cmp
and
dec
xchg
or
jno
je
rcl
push
and
push
and
testb
inc
ret
dec
mov
cmp
mov
je
adc
hlt
mov
and
jmp
jmp
dec
inc
mov
mov
outsb
nop
mov
sbb
mov
outsb
loope
into
push
inc
mov
add
inc
scas
aad
mov
cmp
pushw
aas
push
push
xlat
xorl
lret
fdivr
les
sub
mov
dec
fdivl
pushf
dec
repnz
mov
xchg
cmp
sub
sbb
mov
leave
mov
iret
or
int3
dec
imul
pusha
xor
xchg
lock
pop
push
inc
out
sub
mov
xchg
sbb
repz
repnz
or
in
cmc
add
lret
add
sub
cwtl
fadds
pop
int
adc
mov
loope
sub
cli
adc
jp
mov
jns
cmpsb
outsb
mov
add
lcall
lds
add
sub
push
cwtl
dec
data16
cmp
insl
cltd
mov
sub
sub
ret
mov
loope
xchg
fdivs
dec
aad
mov
imul
aaa
clc
adc
add
jmp
dec
inc
scas
pop
dec
push
sbb
cltd
lahf
icebp
aaa
int3
jae
ret
fidivrl
or
mov
test
lret
stc
push
mov
ret
inc
ror
fisubl
lcall
ret
testl
lods
and
dec
push
out
jo
pop
std
into
shrb
xlat
xchg
mov
mov
dec
dec
mov
cmp
xor
jae
clc
xchg
scas
outsb
dec
mov
xor
pop
pop
mov
rcll
ret
pop
outsb
and
mov
mov
mov
int
push
sub
outsl
pusha
cmp
ja
insl
sub
jnp
mov
xchg
or
push
jbe
push
push
adc
imul
jmp
xor
aas
mov
adc
call
dec
or
pushf
mov
cmp
int3
dec
xchg
repnz
add
inc
cmpsl
ss
push
das
ficoml
xchg
jno
ret
out
cmp
adc
enter
pop
iret
and
popa
sub
mov
loope
ds
cmp
xor
cmpsl
sbb
sub
mov
adc
add
das
movsl
jg
cmp
mov
orb
pause
jp
movsl
sahf
nop
iret
fsubrp
mov
jns
or
lods
mov
sbb
push
fisttpl
add
mov
push
loop
cwtl
das
leave
out
xorl
dec
xchg
cmp
adc
push
xchg
pusha
cli
xchg
adc
test
icebp
sti
mov
test
push
jle
push
popf
and
xchg
push
sahf
outsb
fnstsw
addr16
lock
inc
nop
das
inc
xchg
test
frstor
rclb
sub
jnp
aas
fs
jmp
insl
lock
push
mov
mov
movsl
in
lret
xlat
inc
pop
jge
push
arpl
mov
cmp
and
lods
push
sahf
jbe
jb
xor
fwait
mov
dec
dec
imul
sti
movsl
inc
icebp
xor
or
stc
pop
add
sbb
cwtl
cmp
fdivr
ja
fidivrl
mov
cmp
mov
int
adc
mov
pushf
and
shlb
test
and
pop
mov
and
or
andb
sub
test
cld
cwtl
lret
mov
xchg
jp
cli
cmc
scas
jno
aam
mov
movsb
sub
pusha
dec
mov
jecxz
jl
lods
mov
and
xchg
je
mov
das
pushf
adcb
out
mov
jb
stos
dec
in
out
cmc
scas
hlt
dec
scas
in
fdivrs
insb
sbb
mov
jne
mov
mov
ljmp
fwait
push
and
roll
mov
xchg
lret
pushl
jb
hlt
push
sub
rclb
sarl
and
add
cmp
int
test
push
adc
pop
pop
pop
ss
lret
jns
negl
and
or
loope
in
adcl
mov
sbb
cmpsl
imul
push
sub
mov
xchg
dec
stos
adc
pop
pop
aas
dec
sub
sbb
lret
or
xchg
movl
dec
jno
mov
clc
outsl
iret
imulb
fcmovnu
sbb
loope
fucomi
pop
andl
push
ret
sbb
in
cwtl
mov
push
stos
jo
inc
std
mov
mov
pushf
mov
ffreep
mov
je
xchg
push
fisttpll
inc
rorb
lods
or
testb
cmpsl
dec
fmuls
xchg
ds
mov
pop
jb
and
xchg
pusha
dec
addl
out
mov
out
mov
inc
push
cmp
ja
leave
aam
arpl
cmp
outsb
jl
xchg
xchg
repnz
std
push
out
roll
fstp
jo
push
mov
loop
sbb
dec
add
mov
test
frstor
xchg
jmp
outsl
sahf
inc
fiaddl
fisttpl
or
mov
dec
jmp
jp
and
and
mov
dec
sbb
movsb
mov
inc
lret
lret
cmpb
push
lcall
push
dec
stos
cmp
xchg
cmp
sub
push
test
aad
imul
cs
stos
nop
sub
aam
fdivrs
and
push
xor
xlat
jle
jo
lcall
lock
out
mov
imul
xor
adc
jle
and
aad
add
add
lds
add
jecxz
xor
sub
pop
inc
pop
nop
mov
jp
push
mov
lea
xchg
and
pop
dec
jno
inc
push
mov
cld
or
xor
fists
xchg
call
or
jecxz
add
stos
lcall
in
in
mov
push
pop
cli
dec
jb
cwtl
int
in
iret
aas
add
mov
clc
and
shll
lea
aam
jae
std
jbe
cld
jae
adc
xor
lahf
lret
int3
jo
je
mov
push
leave
neg
mov
call
sbb
dec
add
mov
inc
dec
dec
mov
mov
xor
add
icebp
push
ljmp
pop
div
imul
sarl
lret
scas
out
lods
iret
in
add
inc
xchg
pusha
popf
sub
arpl
dec
jmp
mov
mov
fisubrs
push
dec
rcr
pop
ja
test
pop
and
xor
inc
pop
mov
dec
mov
push
jle
dec
xchg
repnz
mov
mulb
decl
into
hlt
ja
adc
mov
in
cmpl
jp
ljmp
jb
fimuls
mov
mov
add
or
pop
stos
cltd
in
ret
ret
loop
sbb
lock
dec
inc
mov
mov
test
fldl
and
arpl
xchg
mov
adc
jb
dec
mov
ds
adc
cmp
jne
in
xor
out
sti
test
aad
mov
add
push
fsubr
push
in
std
and
les
test
push
sub
out
aad
movsl
sub
cmp
fdivs
pop
into
ffree
mov
and
sbb
adc
pop
pop
into
sbb
add
push
insb
stos
xor
jl
sub
negl
enter
xor
scas
int
pop
or
ret
in
loope
mov
aam
pop
lcall
mov
aam
adc
and
pop
push
adc
out
and
inc
ret
pop
adc
push
jp
jg,pt
out
stc
mov
mov
into
popa
call
push
inc
xchg
cli
cli
ljmp
add
mov
xor
xor
scas
jl
js
inc
js
rcll
xor
push
lret
stos
push
ja
je
dec
test
les
imul
inc
mov
aas
sbb
or
xchg
daa
sub
cmc
inc
scas
xchg
jmp
adc
xchg
arpl
jo
mov
push
inc
lods
ljmp
leave
pop
lds
out
mov
jge
inc
inc
aad
nop
inc
sbb
jns,pt
fisttpl
xchg
jg
pusha
lcall
adc
mov
push
cmp
adc
shrb
xor
push
pop
pop
mov
mov
add
ljmp
pop
addr16
adc
adc
outsl
bswap
fistpl
jnp
sub
mov
mov
insb
sbb
pop
rcr
out
jb
and
xor
in
imul
and
sbb
mov
lahf
fdiv
daa
mov
mov
pop
shrb
push
push
mov
xlat
dec
cmp
add
clc
mov
cwtl
xchg
inc
mov
mov
mov
mov
icebp
leave
and
pushf
mov
cltd
dec
xchg
xchg
dec
inc
inc
dec
adcb
mov
add
cld
xlat
or
loop
test
push
ja
sbb
dec
and
sahf
in
arpl
xchg
shll
pop
clc
pop
xlat
cmp
jne
pop
les
push
jns
aaa
pop
movsb
lds
test
inc
push
sarl
or
mov
dec
adc
jbe
subl
popa
cmp
test
cli
push
mov
adcl
sbb
push
mov
mov
mov
pusha
leave
push
lods
jne
cld
fistpl
bndstx
cs
std
lods
gs
cmp
test
gs
and
leave
mov
mov
stc
iret
sbb
or
add
jmp
pop
jo
sub
pop
pushf
and
adc
js
dec
dec
lret
nop
sub
out
sti
fstl
sub
pop
cmc
pop
pop
xor
jno
mov
push
mov
ja
mov
push
fwait
push
arpl
mov
or
push
test
test
out
add
push
jg
int
xor
aas
mov
addr16
xor
cmp
shlb
test
add
push
pop
pushf
repnz
xchg
dec
jp
and
call
testb
sarl
jae
fimuls
lods
cmp
jnp
je
loop
fsubl
in
sbb
cmpb
int3
jp
cli
push
push
icebp
imul
les
or
mov
push
inc
xchg
jle
mov
jns
faddp
insl
mov
test
push
lcall
das
setae
bound
pop
sbb
stos
jne
pop
ss
xor
lret
out
mov
in
divb
cltd
mov
sbb
inc
and
pop
test
ss
cmp
cmp
jl
icebp
add
jge
jecxz
mov
or
loop
lahf
pop
outsb
mov
cmp
in
das
in
outsb
xchg
shl
out
jg
insl
movsb
pop
cmp
sub
stos
insb
push
add
jle
fmul
jne
xor
rorb
xchg
and
das
clc
push
insl
pop
lea
ret
mov
inc
outsl
enter
sbb
in
cmc
fs
cwtl
mov
sbb
jnp
scas
pop
icebp
ljmp
das
lret
or
cmp
outsl
ja
mov
or
jl
addr16
mov
insb
out
leave
mov
hlt
xor
xor
inc
hlt
popa
loopew
pusha
push
scas
dec
scas
xor
push
mov
fs
push
fildl
cltd
test
pop
xor
add
mov
stos
mov
cmpsl
push
je
cmp
push
mov
out
cli
sub
fistps
push
jne
xor
or
aas
jo
add
xor
lods
xor
dec
xchg
in
inc
xchg
mov
adc
fs
xor
ret
scas
fwait
and
sarb
int3
add
pop
ret
sti
xchg
and
push
ljmp
bnd
or
jno
out
push
stc
aas
push
stc
push
cmpsl
stc
and
xor
inc
arpl
fimull
sbb
sbb
or
sub
jns
and
pop
popa
add
loop
fs
sub
into
test
and
out
test
in
addb
shll
cmpsb
mov
mov
sahf
fcmovb
int3
pop
aaa
movsl
adc
iret
push
inc
aam
cmp
mov
sub
or
sub
popw
mov
imul
adc
xchg
test
cmpsl
sub
fsubs
pop
xchg
shl
mov
int3
xchg
sbb
sbb
add
or
mov
loopne
push
pushf
in
and
stc
dec
mov
sbb
dec
add
cli
mov
sbb
mov
js
ret
and
push
jecxz
call
sbb
cmpl
sbb
dec
lahf
mov
fwait
insl
mov
std
aaa
lods
add
test
push
cmp
ret
sahf
test
fs
cmp
aas
out
adc
jmp
sbb
cmpsl
push
add
scas
test
adc
in
outsb
mov
ret
xchg
cmpsl
popf
lods
scas
pop
sbb
and
mov
xchg
loope
xor
sbb
xchg
aam
sub
daa
or
mov
mov
xchg
jae
pusha
inc
test
cmc
in
iret
or
push
lea
mov
mov
stos
adc
or
inc
fsts
sub
sub
or
popa
ljmp
gs
or
les
jmp
clc
jmp
jl
and
rcrb
lret
fistps
fmuls
and
popa
stos
loope
jne
jb
idivb
ss
dec
test
dec
rclb
mov
arpl
shlb
xor
out
repz
gs
mov
vsqrtss
sub
test
sub
fiadds
push
cmpsl
jl
hlt
lahf
jmp
ror
xlat
ret
add
fnstenv
addr16
insb
cli
or
cmp
sti
ret
push
out
push
push
and
pop
xchg
jbe
popa
ret
mov
pop
jp
cmp
int3
out
jp
sahf
xor
shrb
push
push
sbb
pop
xor
push
pop
xor
mov
push
adc
stos
pop
sub
rcr
stos
push
dec
mov
inc
dec
xor
stc
lahf
test
dec
loopne
pop
popa
in
mov
lret
adc
mov
jp
std
test
add
xorb
push
adc
push
lods
scas
or
jne
mov
movsl
shll
xchg
mov
and
mov
lcall
insl
mov
mov
das
ss
jecxz
scas
lret
out
cmp
into
push
pop
arpl
dec
shll
ret
daa
fbstp
jg
push
mov
daa
inc
mov
shl
cmp
mov
jecxz
pusha
nop
adc
xor
and
fbld
lock
mov
or
mov
pusha
dec
xor
adc
add
call
out
adc
ds
or
push
lods
mov
in
movsl
pop
mov
aaa
fdiv
sbb
mov
rolb
js
addr16
jo
jnp
push
int3
mov
xor
pop
fdivp
xor
sti
clc
ja
orl
sub
inc
iret
enter
sbb
xchg
or
popf
cmp
adcb
pushf
popf
jo
test
sbb
dec
mov
pop
add
jge
mov
inc
leave
mov
add
pop
mov
and
xor
lds
jbe
jl
int3
mov
aad
or
adc
push
jle
or
jae
mov
enter
jo
sub
mov
add
neg
insl
sub
or
call
mov
and
fisubrs
lods
mov
cmp
es
test
mov
test
repnz
sub
dec
push
inc
insl
sti
jns
mov
lea
pop
mov
dec
mov
xchg
les
mov
bndldx
mov
ss
adc
out
imulb
out
pop
test
xor
scas
leave
xor
les
jmp
pop
mov
fwait
xchg
add
mov
sbb
loopne
loopne
in
es
sahf
or
ja
movsb
pop
jle
add
sbb
dec
adc
pop
cmp
in
mov
and
adc
sub
mov
jo
shrb
add
pop
add
sub
xor
sub
enter
rsqrtps
or
mov
dec
fcomp
xor
mov
nop
dec
dec
jno
jg
mov
xchg
popa
flds
push
sub
sub
inc
into
lret
mov
cmp
cltd
cmp
cld
rolb
stos
ret
or
add
in
mov
push
call
dec
ljmp
inc
pop
loopne
sbb
jmp
push
mov
sbb
popf
repnz
jnp
jp
lret
mov
sahf
lcall
outsb
cmpsb
ljmp
cmc
aaa
lret
es
bound
sbb
test
std
fwait
push
and
inc
dec
dec
adc
jne
stc
sub
daa
mov
cli
data16
mov
int3
adc
call
insl
les
mov
movsb
pop
mov
push
adc
pop
adc
orb
jecxz
xchg
inc
aam
inc
push
or
movsl
test
push
mov
fldt
ret
jno
xchg
adc
jecxz
sub
sbbb
xchg
xchg
mov
out
xor
icebp
push
push
push
fs
pop
xchg
adc
add
xchg
cmp
jbe
inc
imul
xorb
add
jmp
pop
xor
cmc
add
cmp
stos
insb
push
dec
fucom
inc
iret
mov
and
fs
push
mov
cmp
inc
arpl
dec
push
sbb
loop
adc
loop
dec
repnz
sub
loope
jmp
test
ret
or
adc
aas
pop
jmp
mov
adc
fsubrs
fmuls
icebp
adc
movsb
dec
test
adc
sub
dec
and
movsl
ror
xor
mov
lcall
icebp
xchg
fidivrl
dec
call
das
das
mov
xchg
and
fcomps
sbb
jo
jnp
test
sub
popf
fists
xchg
push
jnp
in
jo
daa
clc
xchg
cmp
pop
daa
dec
mov
mov
push
lret
fisttps
stos
ljmp
inc
daa
xchg
sbbb
jg
inc
test
xor
shl
cld
add
dec
push
stos
push
faddl
enter
push
scas
in
loopne
xorb
fsubrp
subb
scas
mov
mov
add
adc
call
push
lahf
movsb
mov
inc
add
push
and
pop
sub
out
testl
aad
popa
mov
jno
ret
scas
gs
loopne
mov
and
mov
xchg
sbb
shll
std
aaa
mov
push
cltd
push
push
push
hlt
and
ds
nop
mov
adc
adc
sub
dec
aas
push
cltd
sub
mov
dec
and
or
int
mov
insb
repz
xchg
adc
xchg
lea
xchg
and
scas
adc
mov
inc
js
pop
clc
aad
mov
xchg
pushl
mov
lahf
ljmp
sti
cld
int
daa
les
jne
aaa
outsl
cs
popa
sub
xchg
test
shrl
cmp
inc
pop
fldt
mov
fdivrs
jg
dec
clc
mov
adc
ds
mov
adc
and
movnti
hlt
pop
sbb
out
push
mov
push
pop
jmp
in
pusha
jmp
xchg
xchg
cmp
arpl
dec
xor
test
adc
sbb
fnstsw
sbb
hlt
pop
lods
push
jb
int
mov
je
push
mov
mov
lock
xchg
mov
xor
mov
divb
xchg
mul
lds
cmpsb
adc
mov
sahf
iret
adc
sarb
inc
push
mov
sbb
cmp
ret
inc
add
mov
mov
or
loop
pop
cmp
sbb
add
les
jo
cmp
pop
lods
adc
pop
and
popf
decb
nop
adc
call
dec
mov
xchg
inc
cwtl
nop
add
and
jl
add
insb
divl
push
sbb
in
sub
iret
or
imul
cmp
pop
or
adc
clc
mov
test
or
jmp
pusha
cmp
adc
out
mov
faddl
jmp
rolb
add
sbb
sbb
sbb
arpl
lcall
mov
mov
stc
cmpsb
mov
push
jo
jle
add
jg
jb
ret
aad
inc
movsl
xor
js
jp
inc
test
test
imul
push
das
jbe
or
aaa
rolb
jmp
sbb
pop
out
cs
fdivrl
cmp
push
aad
lods
in
jo
repnz
lods
imul
sti
mov
enter
movsb
and
stc
inc
ds
enter
xor
lds
push
data16
pop
mov
stc
mov
enter
dec
fwait
dec
xchg
ljmp
lods
loop
scas
jns
jle,pt
xor
cmp
push
push
adc
test
mov
insb
and
aad
imul
or
jp
mov
fwait
xchg
negb
xchg
or
pop
dec
jns
cmp
adc
jb
dec
popa
jmp
sbb
stos
and
push
into
in
xor
insl
push
jge
pop
ret
mov
pop
sbb
cli
adcl
test
into
dec
lods
xchg
loopne
es
and
sub
fdiv
testl
lahf
add
clc
jnp
add
mov
fisttps
in
jno
sarl
jmp
jo
dec
jecxz
adc
xor
xchg
pop
rcl
mov
mov
mov
xchg
insl
pop
mov
outsl
lods
nop
hlt
or
mov
mov
inc
xorb
mov
in
stc
orl
or
mov
mov
mov
dec
out
cmpsb
decb
cmp
test
gs
pushf
in
pop
dec
mov
push
iret
fimull
movsl
push
dec
add
or
sahf
cmp
mov
jmp
fs
ljmp
inc
add
pop
push
mov
pop
cmp
mov
fwait
xor
gs
outsl
mov
cmpsl
in
add
scas
les
jle
or
insl
mov
push
js
add
in
and
cmp
mov
and
mov
xor
mov
jle
andb
stc
leave
add
jno
inc
adc
and
cmpsb
cs
or
mov
push
lcall
xchg
inc
xor
ret
outsl
repnz
jg
add
or
or
and
adc
push
cs
icebp
cmpsb
ja
aad
xor
jnp
icebp
fcoml
stos
stc
inc
cmp
inc
inc
es
sbb
xchg
xor
mov
fucomip
push
jnp
inc
adcb
pop
push
mov
jge
shlb
mov
inc
cmpsl
mov
ret
and
inc
out
popf
sub
jmp
aad
jae
fucom
and
mov
jg
movsb
repz
aaa
int3
aam
fidivs
test
xchg
add
sbbb
movsl
out
add
jmp
cld
push
sub
pop
je
pop
cmp
in
jb
push
inc
mov
cli
test
lea
and
imul
push
adc
mov
lock
sub
orb
out
sub
xchg
fldt
shlb
lds
or
loopne
mov
loop
xor
arpl
pop
std
add
insb
aaa
scas
xchg
and
iret
sub
mov
in
mov
ret
inc
not
call
fists
adcl
push
lods
push
call
mov
jo
pop
xchg
xchg
fiaddl
aam
loope
shrd
dec
dec
jg
roll
js
enter
test
shrb
popf
inc
and
sbb
popf
stc
cmp
iret
mov
mov
pop
cmp
xor
int
push
xchg
leave
addr16
and
pusha
repz
inc
or
mov
incl
or
inc
inc
test
repz
xchg
pop
sti
add
cmp
popa
repz
sbb
pushf
pushf
icebp
inc
inc
pushf
xor
imul
inc
fmuls
xchg
movsl
rorl
pop
dec
decb
lcall
repz
fmul
inc
lcall
push
bound
sbb
mov
inc
daa
xchg
jb
add
pop
mov
insl
pushf
xor
test
out
push
adc
lret
mov
jp
in
out
dec
jl
mov
mov
xchg
insl
cmp
mov
dec
lret
xor
sub
arpl
mov
cmc
mov
pop
jecxz
adc
loope
lock
pop
daa
dec
mov
mov
test
sti
add
lcall
js
gs
test
cmp
fistps
mov
fiaddl
pop
arpl
sbb
nop
pop
cmp
push
dec
sbb
jge
pop
arpl
xchg
or
aas
aad
imul
ss
mov
aas
in
sub
mov
and
lods
outsl
pop
sub
loop,pn
cmp
inc
pop
xchg
sahf
loop
aam
jecxz
sub
or
xlat
cmp
testl
dec
fwait
es
jg
mov
push
push
ja
lock
cwtl
arpl
aam
jmp
mov
adc
mov
push
dec
sti
lahf
pop
andl
sbb
sub
push
sub
addr16
mov
inc
fists
repz
sbb
adc
movsl
xor
sbb
test
or
push
sbb
dec
jmp
mov
add
push
pusha
popf
jle
push
aad
out
dec
movsb
fadd
cmp
push
mov
cwtl
in
fnstcw
ret
mov
adcb
adc
cs
or
in
adc
lcall
add
sbb
or
mov
addr16
xchg
sub
push
xor
adc
sbb
dec
push
dec
jbe
repnz
gs
push
in
fisttpl
mov
std
sub
test
sbb
aam
mov
xchg
push
dec
aam
hlt
into
ja
dec
xchg
sub
ss
pop
dec
mov
shll
mov
add
cmp
shr
cltd
adc
push
sub
jo
ja
pop
lcall
push
ds
out
xor
and
lret
test
jb
out
push
xor
js
aaa
pop
stos
mov
push
sub
cmp
mov
adc
xor
imul
dec
add
lods
add
ljmp
sti
mov
clc
jo
push
test
dec
arpl
icebp
test
sub
cmp
das
mov
and
mov
push
mov
or
fists
push
test
call
cmpsb
mov
fs
mov
cmp
fcmovnbe
fldcw
dec
jecxz
out
ror
mulb
jne
aaa
dec
xor
xchg
jne
pop
or
sbb
mov
mov
mov
cmpsl
loop
imul
insl
sbb
in
scas
jg
or
xor
out
leave
sarl
test
mov
test
jmp
mov
mov
fstpl
add
arpl
stc
idivb
aas
mov
sbb
jmp
fwait
call
pop
xchg
out
mov
pop
test
aas
test
mov
faddp
repz
test
push
leave
pop
mov
lret
adc
lahf
cmpsb
sub
xor
adc
std
pop
cld
cmc
push
add
sahf
out
insb
cmp
pop
retw
xor
data16
imul
mov
rcr
dec
sti
mov
xor
xchg
xor
sub
jnp
sub
lret
sbb
pop
out
xor
out
std
in
clc
out
pop
fadd
sbb
rcrb
mov
jmp
es
pop
pop
movsl
lock
jg
in
xor
insb
das
lock
pusha
mov
lcall
call
mov
push
jbe
int3
dec
pop
sbb
cmp
mov
je
leave
push
add
lcall
sbbb
mov
mov
xchg
adc
pop
mov
ret
loope
shll
mov
fyl2x
shlb
cs
or
stc
inc
les
loope
jl
out
push
js
or
lret
test
inc
xchg
inc
aad
mov
ljmp
xor
jmpw
mov
punpckhwd
icebp
cmpsl
imul
push
xchg
push
icebp
sub
cs
fistpl
sub
cmp
ret
aam
stos
addl
pop
mov
enter
mov
pop
xchg
scas
dec
mov
mov
hlt
xchg
cmp
adc
push
test
xchg
xchg
js
sti
push
ljmp
es
jp
js
mov
pop
dec
mov
ret
mov
or
ljmp
jo
and
sti
mov
out
sub
and
xchg
aaa
aam
aad
dec
insb
pop
scas
push
pop
ds
cmp
fisttpll
repz
push
jbe
popa
or
cmp
and
dec
fistpl
dec
dec
push
pop
pop
sbb
adc
jo
xor
and
int3
mov
cli
loop
hlt
xchg
jno
jno
insb
ret
cmp
in
or
push
lock
arpl
inc
scas
mov
leave
inc
mov
loope
and
cmp
inc
mov
scas
sti
xchg
adc
jne
add
aad
pop
cmp
inc
jg
jecxz
outsb
roll
sti
js
xchg
mov
cmp
cmp
inc
add
aad
sub
push
sbb
cmpsb
inc
mov
sbb
test
push
pop
imul
push
push
int
pop
mov
imul
adc
dec
xchg
outsb
push
sub
pusha
push
mov
and
jae
rorb
push
and
mov
leave
dec
mov
lahf
dec
addr16
or
ljmp
aaa
xor
scas
sub
and
jle
xchg
out
cmpsl
test
cmc
pop
dec
adc
adc
xor
mov
and
outsb
pop
cmpl
pop
xchg
in
test
sarb
enter
xchg
add
and
stos
cwtl
dec
xchg
and
jge
in
dec
and
pushf
divl
adc
notl
xchg
cltd
arpl
push
or
outsb
adc
inc
imul
or
sbb
stos
mov
scas
mov
lods
cld
jecxz
test
xor
or
adc
aaa
xchg
or
cs
push
jno
push
cltd
cmc
jne
lds
ljmp
stos
fiadds
enter
sbb
hlt
adc
cmp
int3
or
adc
les
arpl
mov
xchg
repz
push
out
push
sbb
popa
sbb
andnps
imull
and
jnp
sbb
cmp
jmp
push
pop
test
jle
sbb
and
xor
nop
xor
sub
push
addr16
sti
inc
push
sbb
adc
and
jp,pn
loopne
lds
pop
cmpsl
or
jmp
push
js
sub
cmc
pusha
lsl
add
popf
sub
pusha
outsl
insl
fsubrs
jno
mov
adc
into
loope
in
xchg
dec
aad
ds
push
adc
cmp
test
out
lods
adc
js
scas
leave
js
cltd
sahf
sbb
dec
insb
jmp
inc
insl
arpl
inc
ret
imul
adc
xchg
adc
out
sub
loopne
jge
mov
dec
stos
sub
clc
fiadds
jecxz
in
lds
jo
movsb
imul
in
pop
ss
xchg
inc
xor
out
pop
pusha
xchg
mov
into
cmpsb
mov
and
aaa
or
mov
or
jg
xchg
nop
jnp
or
jo
pop
sbb
and
pop
mov
cmc
jo
in
les
repz
jae
cs
jg
cmp
aaa
and
insl
jmp
fwait
xchg
pusha
addr16
stos
and
mov
sbb
addr16
into
stos
lea
jbe
jae
lock
lods
insl
xchg
jne
pushf
repnz
in
push
adc
push
pop
lahf
in
dec
fisubrs
sub
cmpsb
jno
jns
add
loopne
inc
mov
daa
inc
and
fsincos
push
push
adc
rol
adc
xchg
and
mov
mov
orb
stc
js
jp
mov
jl
jbe
push
jbe
js
sbbl
nop
pop
push
ljmp
notl
push
push
or
std
and
hlt
add
popa
xchg
pop
lea
mov
xchg
push
les
or
into
xchg
adc
or
and
cmpsl
movl
test
jae,pt
jbe
mov
aam
adc
inc
push
and
mov
sub
mov
nop
jmp
ljmp
cmpl
and
rcll
pop
mov
mov
ljmp
mov
mov
sarb
push
lods
out
sub
cltd
xchg
ljmp
into
shlb
gs
sbb
cwtl
mov
in
sbb
and
in
cmp
shlb
mov
cmpsb
and
xchg
daa
mov
insl
sub
cmp
jne
aas
jb
xchg
mov
mov
adc
sbb
lret
jge
fwait
inc
lods
sub
mov
mov
xchg
mov
fidivl
mov
or
sbb
inc
mov
lret
hlt
push
mov
xlat
lret
addr16
mov
add
sub
sarb
mov
dec
fdivrs
shl
in
pop
mov
inc
gs
adc
mov
movsl
fisttpll
pmulhuw
inc
gs
xchg
outsb
cmp
mov
int3
inc
add
ja
ret
sbbl
into
mov
arpl
nop
ret
shrl
dec
ja
mov
fisttps
popf
and
mov
mov
push
arpl
add
lret
dec
lds
pop
ss
faddl
xchg
int3
jecxz
sbb
enter
fldcw
addb
pushf
ds
mov
dec
push
and
not
arpl
dec
or
and
int3
call
data16
sarb
dec
lods
or
in
jp
inc
push
daa
fsubrs
push
inc
fcoms
stc
sub
inc
add
and
lcall
jae
fcomi
cmp
xchg
jae
sub
fistpl
mov
pop
sbb
shll
js
jnp
test
dec
jge
fs
mov
sbb
add
push
jne
push
out
mov
jge
xor
std
lods
sbb
call
in
mov
into
pop
in
add
xor
xor
out
or
pop
dec
mov
int
inc
outsl
dec
sbb
mov
std
sahf
or
cmp
scas
shl
push
dec
add
movsb
outsb
add
stos
out
inc
jo
sub
xor
imul
ror
and
leave
in
sbb
or
cld
pushf
lcall
popa
cltd
inc
lret
nop
enter
push
push
lock
or
sbb
shll
add
cltd
jp
sbbb
rorl
ret
sarl
fcmovnbe
notl
adc
lea
xlat
aad
push
mov
into
fst
adc
decb
jl
inc
loope
ret
and
ret
push
test
jge
sahf
into
mov
add
popa
fcmove
std
mov
lds
jnp
adc
adc
stc
dec
xor
mov
jno
nop
insw
and
loope
clc
leave
sub
fsts
and
mov
lods
out
pop
mulb
push
mov
sahf
pushf
add
sub
mov
aas
jae
scas
add
incl
fdivrl
das
jge
fildl
lods
jg
enter
xchg
arpl
and
lret
loope
gs
lods
jle
inc
lret
daa
jbe
rolb
adc
lret
imul
xchg
push
or
xor
gs
popa
xor
cwtl
mov
fimuls
rcrb
mov
popa
loop
daa
lret
or
sub
subl
push
shl
pop
and
xchg
aaa
cmpl
add
cs
cmp
xchg
aaa
sbb
push
fwait
push
rcrl
and
into
cltd
inc
movsl
push
cli
jmp
and
adcl
pop
insl
scas
rcrb
test
les
push
cmp
test
mov
cli
pop
into
mov
iret
outsl
cmpb
jg
cltd
popa
dec
mov
repz
inc
std
dec
pushf
enter
xchg
shrl
push
in
xchg
dec
cld
mov
fst
popa
mov
outsb
xor
and
mov
adc
icebp
mov
sahf
jmp
stc
lods
rolb
sahf
jae
mov
loopne
adc
mov
push
nopl
ret
fs
out
or
jns
fldl
push
insb
insl
lods
push
xor
subl
scas
scas
into
pop
push
test
jne
push
or
das
mov
mov
dec
xlat
cmp
in
adcb
jmp
test
into
pop
sub
mov
out
je
xor
out
xchg
lods
or
mov
mov
clc
in
jo
out
sbb
xlat
mov
aam
or
xchg
sbb
divb
push
add
in
dec
repz
imulb
aad
mov
imul
cmp
push
dec
push
or
add
jg
cmpb
add
cltd
sub
cmp
loopne
pop
or
std
cmpsb
ret
add
jnp
jo
jp
cmc
cli
lods
popa
and
push
movsl
mov
ja
cltd
inc
sti
aad
or
aad
out
pop
dec
pop
hlt
js
mov
pop
pushf
xor
imul
dec
adc
adc
push
jns
roll
cmp
mov
and
data16
pop
daa
adcb
adc
adc
enter
ja
lds
int
pop
fbld
pop
pusha
mov
and
jl
adc
jecxz
xchg
fdiv
fistpll
jmp
xchg
negb
out
out
pop
jl
movsb
pop
jmp
cmp
adc
pushf
inc
push
jmp
aaa
xchg
icebp
mov
ficomps
stc
jbe
cmp
lcall
xor
push
xchg
data16
dec
pop
mov
mov
ss
sub
test
mov
mov
push
pop
push
pop
xor
jl
dec
mov
mov
in
sahf
sti
into
mov
inc
and
xor
popa
jae
data16
insb
aas
add
sbb
cli
jl
mov
xor
into
insb
lret
rcll
sub
mov
xchg
cmp
das
pop
stos
sti
adc
insb
fcomps
mov
pop
insl
sub
ret
push
mov
pushf
fwait
dec
out
cmp
ss
popa
push
and
shll
mov
jo
iret
jge
in
lea
jnp
fwait
push
mov
fists
data16
mov
lds
out
mov
jg
add
addr16
repnz
lea
iret
jae
xchg
cmpl
pop
cmc
out
push
sub
ljmp
xchg
sti
jne
and
rolb
aaa
fisubrl
xchg
dec
imul
lods
pop
sbb
sti
sbbb
xchg
shl
xchg
loopne
inc
dec
mov
mov
jbe
cmc
test
add
sbb
jmp
test
stos
sub
mov
bound
cmp
les
jecxz
xor
enter
dec
mov
in
mov
out
and
mov
mov
sub
movsl
mov
cmpsb
inc
jne
or
cld
add
stos
es
or
cli
fsubl
pop
push
mov
aam
jg
xchg
cmp
lea
fisubrs
fstl
std
cmp
cltd
enter
adc
into
jp
enter
mov
stc
xlat
jnp
rcrl
int3
mov
pop
aas
arpl
cmpsl
jns
ret
pop
inc
rcrl
push
pop
rolb
das
pop
cmpsb
lock
mov
push
sbb
jmp
arpl
jmp
hlt
push
jns
adc
cmpb
hlt
mov
and
aas
inc
cmpsb
push
jne
xchg
adc
je
insb
jl
dec
xor
cs
das
sbb
arpl
inc
sahf
dec
sub
ss
ljmp
ss
scas
arpl
pop
mov
sub
es
dec
cltd
add
push
fstps
adc
dec
mov
pop
lock
scas
mov
icebp
mov
sbb
sub
xchg
aas
pop
sbb
out
jo
sub
cmp
sub
jmp
pop
test
lods
cld
cmp
pop
mov
pop
mov
jbe
inc
push
cmc
mov
cmp
cmp
sti
jae
lea
or
jne
hlt
shll
popa
ret
mov
loopne
rolb
lret
jne
popf
enter
xchg
and
mov
adc
mov
and
mov
mov
int
test
sbb
jae
and
pop
jp
js
roll
mov
push
call
jle
stos
xchg
test
push
data16
inc
push
arpl
std
mov
scas
subb
mov
inc
jmp
jno
stos
mov
call
shl
sbb
jnp
pop
jne
inc
push
pusha
sub
mov
insb
arpl
add
pop
in
cmp
lea
lds
ret
fildl
pushf
dec
cmp
cmp
mov
pop
pop
jmp
xchg
insb
dec
mov
cmp
mov
push
push
sub
pushf
leave
test
add
stc
inc
test
or
out
stc
jns
mov
xor
sub
sbb
pop
leave
lods
push
in
fadds
popf
std
push
inc
xchg
int3
iret
and
mov
cwtl
push
inc
in
pop
adc
out
fiadds
fstpt
mov
jmp
pop
mov
loope
pop
cmpsb
ljmp
xchg
dec
xor
push
pop
push
mov
inc
lods
cmpsb
aaa
or
push
mov
pop
lods
aam
call
sub
jl
cmp
fildl
daa
mov
mov
leave
and
test
sub
fisubl
and
cltd
lea
sbb
push
jno
jmp
cmp
mov
stos
xchg
stos
leave
das
sbb
rol
cmp
addr16
cmp
push
and
es
insl
add
in
movsb
pop
rolb
jae
stos
sbb
pop
pop
lahf
lret
add
cmp
or
mov
push
inc
insb
pop
jl
mov
aas
popf
add
arpl
xchg
xor
mov
sub
add
inc
movsl
mov
xor
push
xor
ret
or
iret
loopne
push
fidivl
pop
pop
pusha
xchg
daa
imul
scas
adc
aas
gs
clc
test
mov
mov
mov
out
fnclex
inc
and
adc
rcr
fadds
aad
int3
cmp
and
lea
jmp
arpl
pusha
loopne
aas
hlt
or
imul
call
outsb
movsl
adc
push
inc
or
out
cmpsl
or
push
and
addb
mov
adc
jmp
fadd
arpl
add
dec
mov
mov
push
xor
adc
cmp
cs
sti
mov
jmp
stc
rcr
add
xchg
jns
scas
fdiv
roll
insb
xchg
sub
cmp
fildll
xor
add
das
mov
repnz
sub
test
ds
mov
stc
push
sub
sub
jge
mov
jp
inc
je
inc
insl
mov
push
mov
lods
outsl
nop
test
jb
movsl
adc
sub
into
and
mov
mov
mov
scas
ret
fwait
repz
sbb
push
dec
mov
adc
inc
push
dec
add
adc
ja
jp
scas
fcompl
and
push
stc
shr
lret
test
bound
addb
pushf
ja
mov
jmp
or
lods
mov
jecxz
stos
jg
xchg
mov
sub
sbb
std
out
outsb
sub
dec
in
out
push
sbb
mov
dec
out
xlat
test
dec
int
cs
or
or
std
ja
jb
or
sti
jle
cmpsb
push
xor
pop
sarl
mov
test
xor
push
bound
adc
sub
mov
or
mov
icebp
sub
mov
imul
jecxz
cltd
call
in
aas
jmp
mov
fwait
xchg
rol
cmp
pop
aas
into
sbb
cmp
sbb
loopne
outsl
add
ud2
add
and
insb
mov
pushw
ds
push
add
rclb
or
aas
shl
xchg
jg
ret
xchg
js
mov
cmp
dec
imul
cmp
mov
or
out
mov
fisttps
lahf
dec
test
gs
outsb
or
and
fisubrs
add
push
loop
pop
inc
outsl
lock
aad
add
xchg
lahf
jmp
xchg
sbb
mov
lahf
fnsave
push
dec
xor
push
inc
cmp
mov
sub
repz
movsb
jno
cltd
xchg
mov
push
or
cmp
shll
xchg
sbb
add
out
dec
aad
xor
outsl
int
les
add
pop
cld
je
rcrl
xchg
inc
jle
call
daa
std
rcrb
loope
out
cmpsl
shll
cltd
and
sub
sub
imul
fdiv
sbb
orb
mov
into
jp
ret
xchg
clc
imul
lods
fidivs
push
cmp
mov
movsb
addr16
push
aas
sub
cmp
cmpb
cmpsl
fistl
push
ljmp
jge
cltd
add
cld
popf
cli
push
adc
subl
xor
xchg
xchg
out
mov
xchg
xchg
cmp
dec
add
popa
xchg
shrl
les
scas
outsl
add
mov
outsl
xlat
xchg
lock
and
cmp
or
repnz
mov
popa
xor
push
mov
jge
mov
scas
repnz
add
or
scas
sub
in
ret
call
sub
mov
pushl
dec
cmp
add
testb
or
mov
push
mov
sahf
jae
in
call
adc
mov
leave
pusha
xchg
and
pop
mov
lea
push
ja
pop
push
fcmovu
mov
aas
or
mov
jno
mov
lahf
xor
push
adc
aas
fdivp
sub
mov
add
mov
jle
pop
stos
ss
push
jbe
mov
shll
lret
push
mov
and
push
xor
dec
xchg
lock
mov
loopne
cmpsl
push
rcr
mov
and
sbb
mov
xor
cltd
push
cmp
sub
pop
add
lods
inc
cmpl
orl
sub
push
insl
push
sbb
testb
icebp
pop
rorl
mov
xor
lcallw
add
mov
dec
ret
cmp
inc
pop
loopne
in
cs
push
dec
shll
push
push
and
pop
neg
imul
and
and
cs
pop
xor
pop
adc
jg
push
pusha
test
xchg
sbb
jno
loopne
daa
popa
inc
rorb
stos
mov
mov
add
xchg
test
pop
pop
inc
push
stos
call
inc
not
ss
mov
int
out
das
lcall
andps
daa
xchg
add
adc
pushf
dec
test
inc
push
dec
out
mov
mov
pop
add
stos
addr16
lds
cmc
out
jae
mov
inc
sbb
jmp
ss
shlb
pushf
push
adc
test
sub
pushf
mov
outsb
scas
test
mov
pushf
shll
data16
pop
loopne
adcl
popf
gs
jb
mov
jb
adc
imul
imul
lds
cli
mov
sbb
test
mov
mov
mulb
and
enter
inc
adc
ljmp
add
lea
cmpsb
shrl
add
cmp
xchg
lcall
cmp
cmp
jae
repnz
std
cmp
dec
aad
add
imul
pop
mov
inc
pop
loop
xor
jmp
cmpsl
test
outsb
lods
cmp
add
mulb
int
fsubrl
push
xor
andb
xor
sti
push
pusha
lret
dec
adc
cmp
or
lea
mov
fs
loop
movsb
js
daa
std
mov
xchg
jo
pop
xchg
dec
lock
and
inc
loopne
negl
or
mov
shlb
push
jnp
gs
push
xchg
adc
int3
faddl
pop
inc
jne
ljmp
fisubs
adc
arpl
mov
xor
in
int
dec
shrb
dec
arpl
ja
xchg
cmpsb
nop
inc
test
mov
mov
ja
call
xchg
es
pushf
mov
pop
adc
ljmp
xchg
pop
and
push
xchg
cld
insb
inc
daa
jns
stc
or
xor
cltd
out
in
shlb
fstl
mov
fcompl
fstps
pop
add
xchg
push
cmp
inc
push
cmp
adc
negl
mov
or
mov
aas
or
inc
xchg
jno
xchg
push
push
out
repnz
or
adc
or
imul
sub
sti
ljmp
xor
add
sbb
stos
mov
push
xchg
mov
mov
dec
mov
xchg
popa
sbb
sti
mov
testl
push
xor
inc
xorl
lock
sub
scas
in
adc
pop
xchg
push
bound
addl
jg
jle
sub
sahf
shll
push
in
fldl
push
or
xchg
rcrb
sbb
dec
adc
mov
imul
mov
pop
push
push
lret
lock
xor
push
cli
mov
into
andb
bound
out
shll
aas
addr16
test
loop
or
insb
les
lret
ret
jno
dec
cmp
and
sub
jle
in
sbb
addr16
or
mov
mov
mov
pop
ficomps
movsb
mov
jp
cmpsb
jae
push
es
pop
std
dec
mov
lods
xor
mov
xchg
imul
and
repz
mov
loope
imul
push
xchg
pop
push
or
add
xchg
ret
in
jmp
das
flds
in
push
mov
leave
mov
shrb
in
mov
mov
push
mov
in
jne
sub
lret
or
bound
mov
push
out
sbb
add
iret
jg
adc
movsb
pop
and
cmp
bound
mov
rorb
or
in
in
addb
loope
cmc
pop
pop
sbb
xor
xchg
adc
jmp
into
dec
sti
cli
imul
imul
scas
or
lea
bound
orb
add
dec
sbb
xor
rolb
cmpsl
xchg
jbe
shlb
cmp
sbb
scas
dec
sub
inc
or
mov
push
rcrb
in
mov
push
xchg
les
shrb
add
inc
pop
sbb
in
cmovge
jns
or
push
pop
es
sub
jmp
lahf
xchg
subl
mov
orb
gs
xchg
pop
add
jae
sbb
pop
fsubr
add
ror
sub
and
test
xchg
pop
jp
js
jmp
fndisi(8087
aad
adc
xchg
mov
and
xor
push
sub
test
xorb
push
hlt
lcall
ss
movl
jecxz
adc
repz
sbb
cmp
jg
cmpsb
insl
ss
jne
jnp
jo
mov
enter
push
xlat
out
xchg
lock
lea
and
sub
clc
adc
mov
loope
rcrl
addb
mov
insb
mov
out
shlb
adc
xchg
push
stc
nop
adc
lahf
fs
ror
sbb
insb
cwtl
sbb
cwtl
mov
and
decb
jge
xchg
pop
sti
sbb
mov
xor
inc
pushf
stos
stos
jmp
ds
add
adc
aad
push
je
jbe
jge
call
xor
pushf
ret
lcall
dec
add
outsb
sub
xor
xor
add
push
inc
cmpsb
cwtl
dec
xor
mov
jle
mov
out
jp
mov
loope
mov
pop
arpl
loopne
and
es
push
repnz
ss
dec
rclb
lds
imulb
jge
enter
cltd
mov
or
jle
stc
add
and
mov
sub
in
iret
in
inc
mov
add
mov
mov
cltd
sub
jne
inc
inc
pop
cmp
ret
fs
mov
push
mov
inc
xor
insl
dec
jae
fbstp
dec
cld
lret
jge
mov
mulb
repnz
and
aas
mov
or
aas
xlat
jmp
orl
cmc
push
adc
test
and
cmp
ljmp
cmp
imul
adc
loope
adc
fistpl
mov
mov
mov
in
je
xchg
cmp
cs
and
rcrl
notb
sub
sub
mov
jns
ret
mov
cmp
stc
sbb
sbb
stos
mov
adcb
mov
jne
scas
fstp
mov
loop
fiaddl
cld
testl
ficoml
inc
inc
das
push
jl
jecxz
clc
movsb
nop
lods
add
cld
mov
aaa
and
aas
jge
add
dec
das
sbb
sbb
leave
cmp
mov
rclb
mov
test
xor
mov
mov
fs
sbb
mov
mov
xchg
mov
lcall
rcr
rcr
sahf
insl
sbb
xchg
sbb
fcoml
jbe
das
jns
ss
add
lods
dec
loopne
repz
jg
and
mov
les
mov
js
push
lods
in
add
lds
mov
push
pop
repnz
sub
insb
lret
loop
mov
dec
hlt
scas
sar
cwtl
movb
dec
inc
mov
push
sar
mov
test
xor
xlat
adc
pop
add
mov
dec
cmpb
sti
rclb
lods
stos
inc
adc
fsubs
stos
cwtl
shrl
rolb
or
ret
jne
test
xor
lock
dec
pushf
mov
shrb
jbe
mov
divb
sbb
fwait
ret
lret
add
imul
jg
push
daa
cwtl
jle
jo
push
cmp
lahf
sub
int
bound
cmpsb
cmp
adcl
jbe
xchg
clc
movsl
push
mov
jae
or
hlt
cmp
jmp
repnz
push
dec
mov
aam
jmp
test
jbe
mov
rorb
sti
sbb
pop
add
incl
mov
insl
mov
push
dec
rorl
ret
mov
sbb
inc
gs
mov
inc
mov
inc
pop
mov
ret
mov
movsl
sbb
in
xchg
loope
and
sub
clc
testl
sbb
sbb
cmpb
int
stos
cmp
fwait
js
sahf
pop
pusha
cmp
icebp
sub
xchg
outsb
stos
test
jno
out
mov
mov
xor
and
add
jecxz
xchg
outsl
imul
loop
inc
out
in
les
addr16
xchg
jne
jo
test
loopne
inc
stos
lret
sub
adc
adc
mov
cmpsb
data16
inc
lret
jb
daa
in
dec
dec
fwait
add
xchg
xchg
xor
mov
mov
shrb
fsub
mov
xchg
jb
test
fidivrl
inc
popf
gs
push
jmp
pop
pushf
mov
sbb
fmuls
xchg
std
cli
inc
mov
xor
imul
movsb
hlt
cmp
jecxz
call
push
mov
push
clc
daa
daa
jge
popf
aaa
sub
aam
push
mov
in
lods
mov
or
cmc
jl
in
mov
push
movsl
fimuls
mov
add
shl
sbb
or
mov
mov
pushf
int
call
mov
mov
pop
add
lods
pop
jno
sub
jae
xchg
adc
data16
mov
push
jne
cmc
cmp
pop
shlb
movsb
adc
stos
out
ror
imul
in
push
lea
mov
into
sbb
mov
add
cmp
test
pusha
dec
jne
push
jecxz
jae
adc
hlt
push
adc
dec
add
or
clc
in
jno
fists
stos
cmpsl
sbbl
mov
test
adc
lea
and
mov
lcall
sahf
leave
jg
adc
dec
hlt
ror
cli
sbb
jno
test
mov
mov
mov
xchg
int3
imul
lahf
inc
loop
xor
mov
sub
sbb
loopne
fwait
hlt
fsubp
ret
push
popf
jbe
rorb
scas
rorb
cltd
es
dec
scas
int
pop
test
aas
push
int
push
sbb
sub
test
imul
mov
jnp
jle
divl
bound
push
and
repnz
dec
pop
iret
in
inc
sub
xor
and
das
push
xchg
mov
push
xor
and
les
jno
mov
jle
cmp
imul
mov
mov
xor
fucom
xchg
icebp
in
je
int
mov
aam
inc
cwtl
arpl
jno
xchg
loope
pop
pop
dec
push
leave
jg
mov
or
adc
outsl
jbe
int
jp
sarb
inc
sbb
or
nop
aas
mov
sbb
jg
sahf
jl
sub
adc
and
shll
lea
adc
aas
addr16
inc
mov
mov
cmp
push
jo
aaa
push
jne
test
stc
pop
push
push
xchg
clc
subl
inc
nop
mov
jno
mov
add
test
adc
mov
jo
and
pop
cmp
in
lret
and
mov
cli
in
cmp
push
xchg
lds
hlt
jle
nop
inc
xor
scas
sbb
xlat
mov
add
add
mov
imulb
lods
in
push
and
fdivl
jge
out
cmp
pop
xor
inc
insw
icebp
enter
sti
lds
cmpsb
lret
cmp
dec
inc
lret
mov
dec
loopne
mov
js
std
xchg
mov
jns
je
rcll
outsl
adc
aad
int
sub
insb
xor
cld
xchg
dec
add
or
iret
popf
push
adc
movsb
sbb
push
push
loope
and
add
out
sbb
jecxz
inc
fs
sub
shl
das
push
popa
cmp
jecxz
xchg
and
xchg
adc
pusha
jl
pop
inc
xchg
inc
call
cmp
and
or
loopne
xor
data16
les
popa
push
int3
mov
pop
dec
xor
mov
adc
mov
lahf
inc
mov
out
push
dec
mov
ss
cltd
cmp
lret
push
out
hlt
sbb
sbb
xor
es
scas
mov
in
jbe
jae
or
cmp
cmp
scas
sahf
mov
sbb
jmp
mov
rolb
pop
jp
and
loopne
sahf
lea
dec
mov
std
repnz
xchg
xchg
test
cmp
push
mov
shr
jge
cmpsb
push
dec
icebp
inc
jg
cmpsl
inc
add
inc
push
jle
mov
ljmp
ds
adc
add
jge
mov
idivb
je
rcl
add
lret
fwait
jae
push
xchg
enter
lahf
imul
arpl
cmp
out
mov
mov
int
divb
jo
dec
mov
sub
add
inc
jle
add
mov
xor
xchg
subb
into
test
leave
out
sbb
in
and
pop
mov
sub
fidivrs
add
lret
xor
fisubs
sbb
mov
hlt
cmc
sbb
sub
add
adc
mov
jae
push
lret
pusha
fsubs
adc
shrl
fsubp
sbb
sbb
add
cld
mov
mov
outsb
leave
push
pop
lods
push
jne
sub
mov
pop
idivb
mov
shrb
daa
rcl
mov
cmpxchg
shll
in
xor
mov
mov
sbb
mov
push
outsl
arpl
fisttps
test
mov
jmp
data16
push
xchg
cs
les
lods
sub
cmp
out
pop
pop
flds
cmp
xchg
mov
in
fdivr
push
shl
push
push
mov
das
loop
or
and
pop
inc
push
adc
cmp
das
pushaw
add
pop
cmp
push
or
in
cmp
sub
mov
pop
aam
ss
add
inc
push
lods
push
sub
leave
cwtl
push
inc
add
add
mov
sub
into
sub
mov
rclb
mov
jo
inc
cld
cwtl
adc
cmp
sub
mov
push
nop
outsb
or
xor
mov
add
jae
js
dec
into
dec
cmpsl
cmc
push
adcb
outsl
in
mov
test
mov
jle,pt
addr16
xchg
stc
jle,pt
outsl
gs
xor
push
mov
stos
mov
das
iret
dec
mov
mov
add
mov
in
dec
shlb
dec
mov
xchg
enter
clc
lds
fstps
icebp
inc
dec
mov
fcompl
inc
xchg
test
or
xchg
pushf
pop
mov
xchg
divl
mov
rcr
testb
jmp
popf
fisubl
xchg
sti
mov
sarl
imul
mov
mov
mov
out
push
sti
jl
pop
mov
mov
negl
sti
cs
inc
xchg
leave
dec
sahf
enter
cwtl
xor
in
sarl
inc
int3
sub
xchg
out
or
das
push
arpl
arpl
inc
sbb
add
push
jecxz
and
test
outsl
jle
mov
add
xor
sbb
cld
inc
lcall
and
mov
popf
pop
mov
loop
cmc
lcall
mov
mov
enter
icebp
pop
leave
fsubrl
mul
leave
popa
icebp
fcmovnbe
mov
pop
or
inc
lret
aad
fs
xor
xchg
xchg
fucomip
lret
push
mov
cli
xchg
jae
pop
rcrl
ret
cmp
push
sub
xor
mov
bound
mov
dec
jbe
pop
xchg
jno
pop
insl
mov
enter
add
cmpsb
xchg
inc
das
loopne
sub
sbb
adc
sbb
sub
lds
cli
sbb
rcr
enter
jg
xchg
dec
in
test
jl
xchg
fwait
test
dec
cmc
loope
inc
xor
jl
push
inc
pop
dec
sbb
mov
stos
pop
jnp
dec
dec
lcall
xchg
inc
addr16
addr16
adcl
pop
into
adc
jns
mov
cmp
xor
mov
cltd
jb
mov
xchg
sub
mov
sub
cmp
sub
sbb
lock
sbb
das
mov
test
mov
sbb
mov
xor
ljmp
push
fstpt
fwait
xchg
mov
fisttpll
xchg
push
fs
lock
xlat
insl
fistpll
push
rcll
cli
xor
xchg
mov
inc
sbb
xor
ret
fstp
cmpsb
fbstp
xor
jnp
fsubs
subl
jmp
jecxz
mov
lahf
cld
xchg
and
sub
xor
ljmp
xlat
lock
and
in
mov
dec
arpl
add
mov
jbe
mov
jle
dec
pop
push
loopne
fldenv
push
and
mov
leave
leave
or
dec
ds
push
movsl
fstp
dec
xchg
xor
ljmp
jg
add
xchg
std
push
pop
dec
jle
daa
out
jnp
mov
int
jge
in
xchg
sti
jp
test
popa
hlt
xlat
fdivrs
push
out
outsl
jae
adc
xchg
push
cs
out
fwait
xchg
add
and
adc
mov
aas
dec
ror
xor
hlt
sahf
adc
and
add
cmpsl
imul
hlt
aam
push
test
xchg
mov
mov
pop
pop
lret
or
push
out
rorb
sub
sbb
adc
lret
fs
cmp
or
gs
cmp
dec
dec
data16
add
outsl
test
xor
adc
es
sub
int3
pop
cs
dec
out
aaa
fbstp
dec
lock
xchg
pop
mov
mov
jge
dec
ret
push
cltd
pop
sbbb
lods
dec
push
or
lret
lods
ffreep
fldcw
movsl
out
gs
xchg
jge
dec
sahf
arpl
mov
or
ret
jo
iret
inc
ficomps
cmp
cmp
mov
jp
lods
jo
push
mov
lret
bound
dec
mov
les
cltd
mov
lret
jge
dec
push
push
les
sub
in
cmc
lods
fwait
clc
lds
mov
roll
sub
cmp
je
and
cmp
mov
pop
push
ret
push
repz
mov
mov
sub
je
mov
sbb
xor
popf
add
test
cmp
sbb
jns
popf
insb
pop
add
stc
lock
mov
int
gs
xchg
sub
mov
jp
xchg
cmpsb
mov
call
sbb
lret
cmp
movsl
and
and
xlat
adc
scas
lcall
fisttpll
inc
dec
push
ret
std
mov
sbb
in
mov
push
inc
sysexit
outsl
repz
iret
lret
push
js
pop
push
iret
aam
push
push
or
push
test
clc
add
sub
inc
imul
dec
stos
xchg
test
inc
and
cmp
dec
rcll
cs
add
pop
and
jnp
test
mov
and
push
mov
aam
pusha
stos
shl
data16
or
cs
lahf
inc
xor
push
sbb
les
sub
sti
cmpsl
out
xor
jle
add
aaa
lret
push
sub
rcrl
stc
jle
sahf
inc
xor
les
dec
push
and
adc
push
jecxz
cld
xor
fdivp
shr
out
dec
add
add
out
rolb
cmp
adc
insb
sub
xchg
bound
mov
sub
jo
xchg
mov
lcall
sbbl
icebp
pushf
jb
rolb
push
jo
pop
iret
and
mov
mov
outsb
mov
or
adc
push
pop
notl
and
mov
sbb
jno
cmp
nop
into
lods
adc
mov
rorb
xor
ljmp
xlat
sbb
in
test
mov
pop
leave
fwait
test
mov
pop
cmpsl
push
popa
call
fucomp
dec
fldcw
dec
xorb
sbb
pop
notb
push
ss
scas
data16
push
push
into
ljmp
xlat
xor
mov
mov
mov
rcrb
jb
and
sub
cltd
lea
and
sahf
pusha
ret
int
mov
fstps
nop
shrl
ja
mov
stos
sub
jo
mov
iret
insb
xchg
sub
std
or
dec
scas
mov
dec
push
leave
fdiv
push
add
pop
cmp
mov
adc
push
lret
js
orb
cmpb
inc
dec
sub
loopne
in
inc
mov
jns
dec
insl
push
je
lock
sub
mov
jmp
mov
adc
fs
repnz
pop
xchg
movsb
in
int
je
dec
or
les
sbbb
add
fidivl
shrl
dec
bound
lret
aam
jmp
inc
push
fs
cltd
outsb
fsubrl
std
cld
ret
jb
lock
outsl
or
mov
xchg
jmp
sub
movsb
push
jne
jbe
cmp
sti
aaa
lahf
pop
pop
dec
fnsave
inc
shrl
pop
sbb
jne
jle
xor
sbb
push
rcr
sbb
dec
test
push
cmpb
or
stc
inc
jno
xchg
test
xor
mov
shrb
mov
and
orl
sti
xchg
pop
pop
push
fmul
lret
xchg
leave
mov
stc
das
fistpl
aas
push
mov
outsl
enter
adc
dec
das
aaa
test
dec
lahf
enter
or
fistpll
call
adc
adc
xchg
imul
push
and
pop
inc
fbstp
pop
jbe
aad
mov
xor
int3
sub
scas
sti
mov
pushf
fneni(8087
bound
ret
cli
roll
inc
jle
or
lea
sbb
sbb
repz
aam
mov
dec
shr
into
dec
pop
out
into
test
std
push
out
sbb
in
test
ss
xchg
inc
mov
inc
add
jae
push
inc
bound
popf
and
sti
ret
pop
lcall
pop
push
sbb
jne
addr16
test
testb
popf
inc
inc
cwtl
test
add
mov
mov
and
push
ret
fisttps
sub
lock
fstpl
sbb
je
je
pushf
stos
divb
inc
cs
mov
lcall
mov
int3
bound
xchg
adc
cmpsl
jo
daa
shll
lret
js
push
pop
dec
inc
fcomps
sti
iret
repz
adc
add
mov
and
loopne
into
jge
negb
xchg
or
cltd
repnz
mov
aam
xchg
fldt
subb
and
sahf
rorl
idivl
fisttpl
inc
in
loope
dec
dec
int
push
sar
push
cltd
inc
xchg
jecxz
scas
scas
mov
pop
ret
push
sub
es
std
scas
inc
add
sbb
cmp
imul
movsb
in
or
mov
dec
inc
adc
mov
cmp
stos
out
push
movsb
bound
loop
sub
sbb
pop
xchg
in
sete
andb
dec
popa
pop
mov
lret
mov
sbb
jo
mov
push
cs
cmpsb
xor
sub
cwtl
jmp
ret
int
rcrl
out
mov
adc
or
sbb
aad
enter
add
jl
jge
jp
add
cmpsb
out
scas
dec
les
cmp
fdivl
mov
lret
push
popf
call
mov
dec
sar
cmpb
mov
fidivrl
and
loopne
mov
ret
pusha
mov
mov
jecxz
jle
ffree
sub
xlat
and
popf
adc
out
sbb
and
sbb
imull
xor
cmc
xor
inc
dec
pop
dec
mov
mov
cmp
cmpsb
sub
mov
pop
pop
int3
adc
lods
adc
xchg
sub
inc
cmp
outsl
mov
cmc
test
pop
leavew
jmp
pop
mov
sub
sbb
stos
scas
int3
ljmp
stos
in
mov
xchg
pop
jp
lahf
add
in
or
jne
cmp
int3
cmc
pop
outsl
fs
mov
cmpb
int
xchg
dec
push
mov
mov
push
xorl
pop
adc
cmp
ds
inc
stos
sbb
movsl
fwait
and
adc
push
mov
jbe
lods
inc
mov
dec
sbb
mov
mov
imul
test
mov
iret
dec
pop
jae
movb
adc
ljmp
jns
mov
or
cli
pop
shll
xchg
pushf
xchg
popa
or
loop
jo
mov
jnp
add
int
test
dec
int
and
xlat
pushf
fildll
bound
mov
push
hlt
mov
iret
loope
push
cwtl
cmpsl
mov
psllw
test
ffreep
mov
bnd
mov
jecxz
cmp
in
jbe
xor
fistps
sarb
icebp
inc
int
cld
push
in
daa
fwait
push
movsb
dec
rolb
stc
xor
jecxz
shll
add
data16
nop
mov
cmpsl
repnz
sti
dec
jnp
out
add
mov
xchg
mov
lods
and
pushf
mov
daa
inc
sbb
jp
add
xor
fwait
pop
cmp
cltd
jge
pushf
sbb
mov
pop
lret
cmp
xor
jmp
mov
cld
std
pop
add
dec
push
xor
ror
lock
test
or
and
scas
roll
jnp
push
shll
dec
ret
out
hlt
mov
iret
call
movsb
pop
daa
mov
xor
lock
push
cld
push
aas
imul
inc
sbb
pusha
push
out
icebp
ret
push
mov
scas
lds
repz
mov
ficoml
sti
hlt
or
xchg
jnp
insb
adc
sub
enter
dec
xor
std
xor
rcll
adc
movl
jge
std
fsts
fld
out
sahf
mov
sub
push
adc
inc
sbb
or
test
repz
daa
sbb
or
mov
cmp
sbb
xor
push
out
pop
cwtl
xchg
nop
cmc
xor
in
ss
cmpsl
xor
and
out
lret
mov
inc
xor
dec
cmp
pop
dec
cli
inc
jae
dec
test
aas
mov
or
outsl
mov
fucom
push
inc
mov
jne
lahf
mov
mov
testl
loopne
sub
or
push
mov
je
or
aaa
pop
out
mov
jo
and
jnp
neg
push
lcall
sub
movsl
lcall
dec
pop
hlt
loope
out
cltd
jecxz
mov
jbe
out
jbe
nop
js
scas
es
push
insl
push
mov
adc
adc
mov
test
testl
sbb
fcomps
cs
in
dec
mov
jp
dec
or
das
scas
inc
ss
sbb
scas
mov
test
inc
fdivrs
push
xor
cmpsb
xchg
push
leave
in
ror
popf
or
pop
loop
out
jp
ja
xor
loope
lds
xor
inc
jb
cmpsb
dec
sahf
aam
out
cltd
xor
mov
cmp
ret
sbb
jo
gs
cmp
stos
movsl
repz
addr16
xor
push
mov
mov
pop
movb
mov
mov
xlat
xchg
adc
push
sar
jle
jmp
imul
cwtl
fimuls
aad
sbb
sbb
cmp
jecxz
inc
imul
ror
adc
ficomps
jae
cmpb
sub
or
jecxz
faddp
mov
push
xor
inc
sbb
xchg
roll
cli
imul
fucomp
add
push
cmc
fbstp
adcl
xchg
fidivrl
test
movsl
fsts
cmp
xlat
inc
or
add
and
xchg
pop
in
lahf
roll
sbbb
es
xlat
pop
pop
jns
xor
loopne
mov
jmp
nop
fidivl
hlt
test
dec
addb
lods
fisttpl
mov
mov
mov
pop
into
or
insb
je
js
movsb
jnp
pop
mov
pop
in
and
dec
sub
arpl
popa
cs
sub
dec
push
jo
sub
pop
sti
mov
shr
addr16
xor
mov
push
lock
pop
notl
test
inc
shll
or
mov
add
sbbb
dec
lret
adc
rolb
cmp
cmc
pop
inc
pop
ret
imul
ds
mov
outsl
pop
mov
xor
xchg
aaa
inc
lea
mov
loope
adc
test
jp
out
xor
mov
fsubr
mov
pop
push
push
popa
daa
scas
pushf
xchg
in
inc
xor
fwait
lahf
bnd
ss
fs
icebp
out
sbb
jmp
mov
mulb
sbb
gs
icebp
les
dec
fwait
and
jae
ficoml
push
rorl
xchg
cmpb
daa
test
test
cmpl
notb
jge
jp
divl
sub
xorb
mov
dec
out
xchg
jle
andb
add
sbb
mov
or
in
mov
stos
jl
and
mov
inc
jae
hlt
loop
xchg
out
sbb
pop
imul
mov
call
rcrl
enter
mov
bound
ja
push
jno
out
repz
jnp
repz
pushf
fnstenv
insb
js,pn
mov
aad
sbbl
std
int
sbb
imul
or
xchg
push
cmpsl
inc
lods
or
mov
testl
scas
pop
aam
jno
lods
mov
sbb
shl
std
dec
xchg
out
sub
fcmovne
loopne
mov
jo
dec
add
mov
and
lret
pusha
inc
jecxz
dec
ret
mov
and
lock
inc
cmp
sahf
dec
inc
push
das
jmp
icebp
dec
pop
jbe
mov
pusha
sub
movsl
rolb
std
mov
fdivs
sbb
int3
int
mov
xchg
jno
insl
adc
std
xchg
out
jno
nop
cmc
inc
jg
je
int3
xchg
rcrb
xchg
repnz
mov
cmp
push
gs
cmp
pop
xchg
inc
jecxz
ljmp
movsb
sbb
mov
cli
cs
or
sub
inc
and
divb
std
outsl
lret
jo
mov
mov
imul
and
push
jmp
push
sbb
jecxz
inc
mov
test
push
mov
sahf
idivb
cmp
lock
jo
shlb
fstpt
ficompl
loopne
cmp
cld
mov
push
je
sti
adc
cmc
xor
popa
aad
shll
je
addb
jg
cmp
movsl
les
jo
mov
iret
mov
out
pop
push
push
sti
faddl
jl
adcl
sbb
mov
adc
mov
insb
es
insl
inc
repz
mulb
popa
xor
or
ljmp
enter
aam
sub
iret
cld
pop
push
xor
cmpsl
pop
loope
and
jg
push
pop
cmp
mov
bound
xor
popa
aas
cmc
mov
pop
mov
mov
je
mov
int
test
cmpsb
push
loopne
sub
ds
gs
mov
and
add
mov
jp
test
arpl
fsubrs
adc
dec
add
and
inc
xor
sub
loopne
ss
jae
je
lock
sub
mov
inc
add
das
mov
pushl
mov
push
pop
loopne
aaa
aad
mov
jmp
and
es
enter
stos
aam
loopne
and
xchg
xor
add
xorb
jnp
movsb
ret
in
push
mov
shlb
addl
in
and
rclb
sub
imul
inc
adc
jg
aam
and
and
arpl
jp
and
mov
jge
in
mov
clc
and
jne
ss
xchg
ror
test
loope
mov
cmp
xor
or
inc
imulb
invlpg
jno
lock
clc
sub
std
inc
sbb
in
enter
jmp
push
push
lods
adc
in
test
mov
movsl
sti
and
pop
std
inc
push
inc
sub
stc
xlat
mov
sub
decb
aas
jns
mov
adc
aam
notb
mov
rcrl
add
mov
xchg
inc
idiv
hlt
jnp
xchg
jmp
insb
in
roll
push
cmp
jp
stos
or
cmp
pop
jbe
aaa
jne
out
fiaddl
adc
data16
sub
dec
icebp
pop
or
mov
xchg
or
pop
xchg
aaa
adc
cmp
jg
out
and
inc
xchg
sbb
pop
jl
push
enter
pop
push
jns
sbb
xchg
sub
jo
fisttps
sarb
jecxz
popl
inc
mov
xlat
clc
xchg
push
sub
pop
cmp
mov
mov
sahf
rorb
push
mov
fwait
or
adc
mov
and
sbb
ds
data16
sbb
inc
inc
cmp
scas
test
cld
jge
mov
mov
into
sti
mov
aam
jle
sub
movsl
aaa
in
adc
push
adc
push
pop
sub
sub
mov
sbb
popl
les
fidivrl
inc
scas
dec
aam
xchg
fistpll
loopne
fnstcw
std
lret
frstor
mov
jl
lret
or
jp
fists
xor
lods
mov
mov
test
test
adc
pusha
jl
push
adc
push
int3
mov
pop
fwait
sbb
sub
aaa
or
inc
dec
adc
icebp
mov
jl
aaa
cmp
push
out
sub
repz
pop
icebp
push
stos
pop
jae
jge
xlat
push
daa
mov
mov
jnp
pop
test
xlat
add
cltd
inc
call
mov
shl
imul
add
aam
lret
pop
mov
inc
sbb
fwait
ljmp
mov
inc
bound
mov
mov
sbb
scas
rclb
aaa
mov
and
cmp
out
aas
lahf
scas
negl
add
fcomps
cmp
mov
dec
addb
jecxz
jg
lods
jge
call
adc
mov
in
adc
cld
fists
fwait
push
outsb
scas
mov
mov
jle
add
jbe
dec
dec
sti
movsl
jbe
push
rorl
fmuls
push
jle
dec
rcll
add
test
insl
inc
cwtl
out
inc
enterw
out
cmpsb
pop
mov
and
adc
add
pop
push
jnp
xor
or
fcomip
daa
or
pop
in
aad
aad
arpl
inc
cmp
test
cmp
jge
ss
icebp
addb
pop
and
into
sub
outsb
adcb
sbbb
cmp
lahf
outsl
mov
jmp
push
shll
das
fldl
inc
aam
into
or
ret
pop
sbb
test
addr16
add
mov
xchg
and
xor
in
jg
pushaw
cltd
sbb
popf
jg
out
inc
lds
jmp
push
push
cs
pushf
inc
shll
pushf
loop
movsl
repz
cmp
repnz
sub
sahf
pop
loop
sbb
and
mov
sbb
fisubrs
repz
pop
and
xor
stos
cmpsb
out
cs
jg
nop
mov
aad
xchg
jl
add
jp
movsl
sbb
or
repnz
mov
xchg
push
loopne
subb
sbb
mov
test
lds
pop
icebp
dec
negb
js
cli
fs
outsb
mov
lock
mov
rorb
adc
nop
fwait
iret
fnstsw
imul
mov
jno
rol
in
inc
dec
push
dec
stos
ljmp
scas
cld
cld
adc
addl
mov
ja
dec
das
popw
jb
clc
dec
repnz
test
lret
movsb
or
jae
dec
es
cmpsb
sbb
mov
leave
ljmp
or
int
sahf
test
std
fs
xchg
in
dec
loope
inc
cmp
mov
in
in
lods
cmp
cmc
lods
loope,pt
addr16
xchg
or
inc
in
pop
mov
mov
jae
mov
mov
and
shr
dec
jo
pop
lea
iret
mov
bound
pop
idivl
dec
cmp
xor
ds
mov
lret
sbb
adc
cmc
inc
test
hlt
popa
popl
lods
leave
cwtl
jns
in
adc
data16
push
adc
cld
stc
push
les
dec
inc
js
inc
hlt
xor
in
aaa
mov
dec
testl
cmp
bound
ds
push
sub
mov
pop
pushf
push
cmp
mov
jle
sbb
cmp
cmp
loop
pop
shll
loope
jg
or
int
andl
adc
cmp
loopne
fcoml
sbb
add
rcll
push
mov
sbb
jno
lcall
sahf
psubd
jnp
cld
jns
sub
loope
cmp
mov
clc
test
rol
inc
test
xchg
pop
sbbb
or
lret
out
mov
ret
outsb
loope
hlt
sub
ds
icebp
jmp
adc
jle
dec
add
or
lock
jmp
roll
stos
shlb
sahf
sub
xor
inc
add
cmp
int3
ss
xor
insb
push
mov
mov
ficoms
adc
sar
aad
fcoms
into
cmp
mov
xchg
lods
xchg
call
call
adc
xor
aas
cwtl
je
adc
ss
cmc
mov
mov
test
add
sub
cmpsl
fsubs
imul
ljmp
lret
jae
out
sbb
jge
push
jmp
jmp
jo
add
push
loope
out
jmp
in
mov
in
sub
fildll
loop
nop
push
rcll
int3
loope
sbb
inc
movsl
dec
add
loop
mov
in
sti
xchg
cmp
xchg
out
xchg
xchg
pushf
minps
or
push
std
test
addb
adc
popa
jb
into
into
mov
cmpsl
fstl
insb
loope
ret
and
testb
dec
fistpl
popa
pop
sub
dec
cmp
push
repz
fnstenv
adc
scas
sti
outsb
adc
cmp
js
ficomps
int3
mov
aas
dec
int3
pop
mov
test
lret
add
jle
loope
xchg
test
repnz
int3
sahf
push
push
mov
adc
mov
scas
or
mov
mov
or
mov
ret
sti
jb
mov
jns
outsb
lahf
roll
shll
mov
adc
daa
js
cmpb
arpl
pop
mov
movsl
adc
ret
bound
xchg
pop
sbbl
push
mov
cmp
cmp
in
fisttpl
js
mov
pop
sbb
pusha
popa
dec
loop
mov
inc
fcompl
repz
xlat
sbb
jae
orl
xchg
es
std
ja
shlb
pushf
sub
mov
scas
or
iret
adc
fwait
add
in
insl
dec
push
mov
lret
jmp
adcl
bound
scas
cli
loopne
stos
and
adc
adc
lods
lahf
lock
fnsave
cmpsl
mov
cmpb
aas
jle
cmpsl
sub
lahf
dec
in
mov
mov
rcrl
dec
mov
clc
sub
mov
dec
xchg
pop
in
loope
push
pop
dec
cmc
aad
fcmovu
and
in
push
sbb
daa
fucomp
ja
push
jle
gs
iret
mov
inc
imul
push
jns
aad
jne
mov
push
jo
adc
out
in
pop
fwait
bound
pop
mov
xchg
int3
and
and
mov
pop
data16
push
jbe
pop
jb
test
or
cs
enter
jnp
movsb
jmp
adc
dec
push
out
inc
push
xor
xchg
out
sub
or
sbb
aas
ret
push
cs
xchg
shl
lret
imul
and
or
inc
jno
cmp
cmc
icebp
inc
data16
or
mov
pop
bound
xchg
mov
call
es
pusha
loop
stc
inc
push
daa
add
push
loope
push
push
lcall
mov
cmp
xchg
outsb
xchg
hlt
jb
imul
lahf
inc
lret
or
jp
sbb
lods
sub
repnz
fisubl
or
sti
dec
sub
xchg
inc
pushf
fs
push
pop
mov
adc
xor
push
mov
inc
pop
mov
dec
lock
push
push
in
add
cmp
aad
iret
push
mov
arpl
testb
imul
xlat
sub
ja
push
insl
stos
or
inc
and
jne
mov
in
and
iret
cltd
clc
cmp
jp
mov
xor
repnz
and
mov
lods
popf
sbb
pop
and
test
push
fmul
pop
xor
mov
aas
imul
f2xm1
inc
or
aaa
mov
dec
mov
aad
fiadds
fidivrs
rolb
adc
aad
xor
lret
bound
push
push
scas
dec
xor
cmp
and
daa
dec
out
out
mov
scas
jge
pop
lods
shrb
popf
pusha
das
jns
lret
mov
bound
adc
jp
sub
pop
adc
decl
push
mov
xchg
mov
mov
jae
add
ret
or
hlt
rcrb
js
mov
sub
jge
jno
test
rclb
cmp
in
je
pop
hlt
in
adc
sub
or
jo
push
add
movb
jg
push
and
lret
mov
in
inc
lock
xor
jo
or
rcrb
pop
push
mov
dec
pushf
cltd
in
cltd
ljmp
push
xchg
mov
test
pop
and
lret
jecxz
push
xor
xor
add
add
je
add
pop
fwait
inc
pushf
push
pop
outsl
pop
pop
fistl
das
js
push
inc
sbb
and
push
stos
sbb
mov
or
pop
sbb
cmp
stc
je
sbb
cli
sub
jg
cli
jno
pop
cwtl
repz
cmp
stos
jp
jmp
inc
jbe
and
outsb
mov
movsb
loop
pop
jo
cmp
fnstenv
mov
jno
xchg
into
mov
and
push
mov
stc
mov
pop
sbb
jmp
mov
in
popf
jbe
dec
push
adc
adc
mov
ds
in
popa
mov
in
addr16
je
and
arpl
mov
xor
leave
aaa
cmp
inc
sub
test
je
lret
lock
dec
and
mov
fcompl
push
pop
push
sarb
mov
push
cmpsl
scas
das
enter
xor
jmp
mov
pop
mov
sbb
or
iret
test
rcrl
addr16
dec
ror
mov
cmp
sub
adc
pop
mov
mov
dec
cmp
inc
in
sbb
pop
icebp
add
dec
cwtl
mov
dec
mov
pop
xchg
mov
add
mov
xchg
push
pop
es
push
test
lea
mov
aaa
jnp
imul
pop
cmc
repz
inc
fsubl
out
inc
movsb
mov
xor
lds
das
out
popa
lret
mov
cmp
sahf
and
push
mov
nop
test
mov
mov
filds
mov
aas
js
ljmp
inc
dec
jb
mov
xor
fildl
ljmp
mov
jb
and
push
loop
scas
cltd
xchg
mov
add
xchg
or
fwait
and
adc
daa
ret
sub
xor
cmp
push
fistps
es
in
std
jno
faddl
xor
mov
out
jl
inc
pop
fwait
mov
scas
jns
dec
sub
scas
in
outsb
sub
jg
jbe
lds
inc
ficompl
jmp
dec
mov
push
lret
sbb
jo
mov
shll
lods
push
in
bound
std
mov
inc
jecxz
ss
test
mov
mov
dec
add
inc
fbstp
push
adc
in
mov
xchg
into
enter
pop
pop
shlb
inc
lock
xlat
jg
adc
inc
sub
push
test
lcall
sti
adc
cmp
adcl
mov
stos
cltd
mov
filds
sub
xchg
pusha
fnsave
sti
xchg
xor
lret
in
cmc
xchg
xor
pop
jnp
repz
xchg
push
push
test
dec
call
pop
or
daa
bound
add
add
mov
mov
call
push
sub
sub
mov
pop
mov
cmc
cmpsb
xor
adc
mov
mov
xorb
mov
lea
inc
sbb
cli
test
jle
shr
out
mov
pop
sub
aaa
lret
mov
mov
repnz
xchg
and
insl
xchg
cltd
cmp
sub
lret
lock
mov
fndisi(8087
jns
sbb
push
sti
in
adc
outsb
ja
push
xchg
outsb
cwtl
push
insl
mov
jne
sub
pop
cltd
pop
je
jmp
sub
in
iret
cmp
mov
jp
test
nop
dec
cmpsl
cmp
mov
movsb
sbb
adc
fwait
into
jmp
or
add
pop
add
or
pop
mov
pop
sbb
int3
push
xor
jo
lods
lds
adc
data16
mov
hlt
jns
rcrb
notb
test
jl
adc
ret
mov
pushf
xchg
mov
imul
ja
repnz
xor
stos
lods
stos
arpl
jmp
daa
pop
or
add
sbb
xchg
or
sub
repnz
push
pmuludq
mov
sub
les
mov
cs
adc
cmpsl
data16
lret
pop
fistps
add
hlt
test
repz
jg
pop
or
ljmp
and
into
cmp
mov
stos
cwtl
add
pop
add
and
repz
cmpb
xchg
cmp
shr
shl
xor
int
std
int
ljmp
rolb
mov
lods
movsb
jle
jno
test
jl
adc
call
cmp
aaa
sub
jne
fildl
pop
sbb
dec
andb
xor
sbb
pop
inc
adc
mov
push
lret
sub
xchg
arpl
subl
fisttpll
lret
xor
clc
out
dec
adc
outsl
sbb
mov
jle
push
loope
loope
pop
push
and
mov
xchg
into
leave
lahf
sbbl
cwtl
mov
leave
jmp
inc
shr
xor
mov
sub
fcompl
mov
insl
xchg
pusha
ss
repnz
mov
lea
imul
inc
mov
stc
xorb
test
addr16
fmuls
jp
lods
add
lahf
loope
mov
jecxz
sub
sub
jo
sbb
push
ret
decl
data16
jae
xor
push
and
xor
psadbw
loop
jbe
data16
shll
out
cli
sahf
in
sbb
push
mov
cld
push
ret
scas
imul
hlt
imul
cmpsb
dec
lret
pusha
in
inc
fsubrs
mov
pushf
pop
out
int3
lds
lahf
mov
jbe
outsb
jo
je
mov
mov
outsb
sbb
stos
or
xorb
out
jae
pop
or
pop
cs
mov
pop
out
shrl
insl
sub
xor
xchg
arpl
aad
sub
dec
add
push
inc
jp
or
sub
mov
shll
lea
pop
in
jno
rol
call
bound
push
add
das
jmp
pop
loope
pushf
jmp
inc
cmp
pop
add
fs
xchg
adc
fsts
lods
adc
mov
cmp
mov
jle
imul
mov
in
cltd
sbb
sbb
imul
mov
or
xor
ja
iret
xor
sbbb
mov
lea
outsl
mov
sti
rclb
and
sahf
call
faddl
dec
insl
add
cs
ret
int
aam
cltd
xor
aaa
dec
outsb
pop
outsl
mov
cmc
lock
pop
outsl
or
sbb
and
fdivrs
adc
decb
imul
cwtl
inc
into
push
push
mov
sub
shrb
adcb
rorb
jg
cmp
dec
mov
sub
in
push
xor
cmpsb
fisubrs
xchg
pop
push
fisttpll
jb
loopne
add
sbb
add
into
jp
aas
das
dec
lea
jbe
cmp
xchg
repnz
jnp
repz
mov
fiadds
xchg
jp
fnsave
fdivrs
mov
sub
lods
cli
insb
adc
incl
jne
push
into
test
jg
jl
mov
inc
addr16
push
mov
add
sub
xor
lcall
xchg
sarb
movsb
push
xchg
sbb
inc
sarb
mov
rorb
add
cmpsb
andl
int
jmp
cld
iret
ds
mov
and
outsb
dec
loop
xchg
imul
fidivl
shr
gs
and
pusha
cld
pushf
movsl
fisubrs
out
adc
or
int3
mov
into
fmull
push
xchg
inc
or
hlt
cmp
cmp
add
push
mov
repnz
pop
xchg
iret
mov
or
and
fimuls
cwtl
cmp
pushf
cs
jp
rcrl
sbb
jle
add
fs
dec
push
push
shrl
xor
rcll
sub
mov
or
sbb
movsl
jns
fld
rcrl
cmpsb
popf
push
fimull
clc
ja
cltd
sbb
push
fwait
pop
enter
dec
in
cmp
int3
push
jae
cwtl
es
push
rcl
inc
jne
jecxz
int
loop
or
sbb
aas
or
push
into
pop
xor
into
out
cld
aad
hlt
inc
lods
push
mov
mov
cmpl
cltd
add
je
insl
pop
jnp
mov
fldenv
xchg
and
cmp
mov
lods
jl
test
and
mov
mov
mov
sbb
daa
ja
shll
and
and
push
adc
stc
mov
in
rclb
pop
inc
inc
std
mov
push
and
hlt
xchg
xchg
mov
push
test
vsqrtpd
add
fs
inc
sub
out
subb
push
or
hlt
jmp
pop
mov
loop
xor
push
frstor
xchg
daa
aas
xchg
xchg
popa
pushf
mov
movsl
stc
lock
iret
sub
imul
out
jo
stc
xchg
add
sbb
inc
je
ja
xor
flds
in
mov
jmp
pop
push
popa
add
mov
call
sbb
int
movsl
sub
dec
inc
xlat
imul
pop
mov
mov
out
xor
jb
lcall
sbb
sbb
rcrb
popa
scas
jns
fs
jns
push
mov
pusha
sub
test
and
mov
or
pop
movsb
jmp
push
test
jno
mov
repz
fwait
xchg
jno
xchg
into
lcall
adc
inc
scas
out
inc
push
ret
cli
scas
inc
shrb
outsl
jno
rol
bound
cmp
xor
sahf
xor
lds
jb
sahf
jb
pop
sub
outsb
frstor
adc
or
clc
mov
sub
xor
inc
pop
pop
pusha
sbbl
in
cwtl
xor
xor
push
jae
stos
in
loope
shll
repnz
test
fisttpl
jle
adc
add
data16
jg
adc
andl
lds
pop
inc
mov
fs
inc
jecxz
out
iret
outsb
and
ja
mov
test
and
int3
adc
add
loope
cs
scas
push
cmp
mov
xor
rorl
xchg
and
repnz
xor
pop
pop
push
or
out
push
std
sbb
mov
clc
test
stc
mov
mov
dec
inc
ret
cmp
inc
aad
outsl
jp
add
scas
add
aas
ja
sub
shrl
iret
int
sub
push
orl
into
int3
fisubrs
adc
mov
mov
fwait
lahf
pop
mov
das
test
push
xor
mul
arpl
test
scas
test
rcrl
pusha
pop
in
and
pop
xchg
adc
sbb
fwait
mov
mov
sub
pop
pushf
loope
or
mov
repnz
dec
mov
call
mov
push
cltd
mov
mov
aam
and
mov
xchg
test
mov
mov
dec
jae
xchg
inc
or
arpl
int3
rcr
stos
jnp
mov
adc
sub
je
mov
xor
mov
sub
imul
test
nop
movsl
cmc
push
pop
std
lock
xor
push
repnz
mov
iret
add
insb
jmp
mov
cmpsl
adc
into
jne
mov
add
rcl
or
lods
push
test
xchg
sarl
int
xchg
jb
lahf
fwait
xchg
sub
lods
jmp
inc
imul
sbb
lret
fadds
mov
push
lret
jmp
push
icebp
mov
ds
ja
fisubs
push
cmp
cli
push
mov
into
adcb
iret
insb
mov
dec
jle
inc
daa
push
push
mov
dec
jge
and
mov
rcrb
xor
cmpsl
mov
in
xchg
add
mov
and
inc
test
mov
mov
jne
fists
stos
fisttps
mov
xor
cmpsl
pop
aam
push
sbb
lahf
pop
xchg
cmc
mov
adc
mov
arpl
imul
shlb
aad
mov
pop
sub
sbb
inc
inc
push
push
scas
scas
jnp
mov
daa
loopne
sub
xchg
ds
fs
mov
rcrl
jnp
and
std
movb
fs
fdivrl
adc
lea
icebp
nop
pop
inc
pop
xchg
arpl
add
inc
xchg
push
cmp
mov
cmpsb
pop
push
or
aaa
or
roll
push
mov
lods
and
out
lcall
pop
in
sub
mov
mov
adc
das
pop
dec
pop
loop
aam
lret
daa
lret
pop
pop
push
testb
or
ret
adc
aad
daa
fiaddl
xchg
jne
inc
jle
inc
mov
lods
dec
mov
sbb
inc
cltd
cwtl
repz
test
int3
dec
repnz
mov
mov
sbbl
and
mov
jmp
push
loope
mov
mov
cmp
jnp
bound
sarl
cwtl
cmpsl
push
cmp
mov
mov
cmpsb
loope
xor
loope
push
adc
cltd
cld
adc
push
pop
js
fnstenv
rol
dec
roll
xchg
dec
jb
mov
fwait
fwait
mov
div
push
rorl
pop
cs
imul
popa
lock
inc
sbb
stos
pop
cmpsl
xor
adc
fisubrl
inc
ror
je
sbb
adc
cmp
scas
insb
xchg
mov
jb
inc
test
jbe
jnp
ljmp
test
sar
xchg
xchg
outsb
daa
xchg
and
in
jp
lahf
cmp
mov
stc
pop
rol
push
mov
jmp
jl
xchg
xlat
cmc
test
inc
movsl
mov
pop
aam
mov
push
xchg
lock
jb
stos
mov
inc
cli
sbb
ret
pop
test
mov
pop
inc
sti
mov
push
loope
xor
fwait
xchg
xlat
icebp
mov
or
xchg
testl
cmpsb
or
stc
and
fnstsw
dec
stos
xor
pop
or
ja
mov
negb
lret
inc
mov
sub
jl
cmp
push
jge
or
mov
rcl
push
hlt
mov
xlat
mov
xor
adc
mov
dec
lret
inc
xor
push
test
fsubrs
outsl
jb
in
rorl
add
rorl
sub
imull
xlat
sub
ljmp
fdivl
ror
cmp
ss
xchg
jp
xlat
std
into
js
repnz
in
dec
jg
insb
lahf
or
fs
std
pop
shrl
push
and
lds
cs
push
ret
xchg
xor
pop
lret
pop
cmp
add
mov
dec
bound
push
sarl
out
dec
mov
mov
cmp
cwtl
arpl
ss
xchg
add
lret
dec
or
inc
sub
sub
adc
push
cld
dec
aam
jnp
or
test
jnp
ret
lods
mov
mov
xor
je
mov
les
jbe
fmull
push
ret
or
cmp
and
mov
imul
gs
dec
int
movsb
out
or
paddsb
lahf
les
xor
sbb
fcomp
in
test
jg
in
inc
test
pop
popa
movsb
fucomip
mov
sahf
or
sbb
pop
dec
repnz
out
nopl
push
xchg
xchg
push
movsl
jmp
mov
inc
cmpsl
add
jbe
out
lods
test
sbb
lods
sub
and
xchg
push
sbb
push
adc
pop
adc
sub
adc
add
movsl
cmp
sbb
push
rcll
sub
push
sarl
sub
or
fmul
push
push
lret
inc
mov
jno
ret
mov
loope
push
sahf
cmp
jnp
sahf
cmp
sbb
leave
mov
in
adc
xlat
dec
push
arpl
fs
sub
scas
push
js
jle
mov
fwait
in
xor
push
aam
pusha
cmp
xchg
dec
flds
cli
inc
xlat
sbb
mov
mov
cmp
xlat
aad
add
in
sbb
cmpsl
ds
cmp
mov
imul
ret
xchg
call
dec
mov
fmull
dec
inc
xor
fisttpl
fistpll
das
call
cmp
inc
or
jp
xchg
sbb
push
xlat
mov
sub
pop
inc
std
adc
int3
jnp
test
test
or
inc
xchg
cmpsb
add
mov
pop
mov
push
sarl
inc
ret
daa
cmp
inc
in
hlt
add
and
pop
sub
mov
pop
sbb
push
xchg
jno
add
outsb
jno,pt
addb
das
test
push
and
jb
adc
cld
lret
inc
sub
pop
xor
fisttpl
mov
popf
jne
loope
repnz
hlt
pop
xor
popl
and
arpl
add
fdivrl
aad
sbb
lock
xchg
lret
das
cmp
incb
inc
dec
jno
jbe
xor
aam
and
cmp
jo
fildl
mov
je
sbb
mov
cmp
adc
ret
sub
leave
cli
xchg
adc
fstpl
call
dec
inc
lahf
jb
xchg
mov
fs
xchg
mov
mov
pusha
inc
dec
loope
push
mov
cs
and
push
add
and
jno
push
mov
xor
xchg
ffreep
mov
scas
aaa
addr16
shrb
and
xchg
or
je
inc
mov
or
or
ja
push
in
popa
ss
lret
shl
mov
xor
gs
arpl
subb
iret
out
std
insl
mov
test
mov
fidivrs
dec
push
es
mov
or
jmp
dec
iret
push
push
pop
xor
mov
inc
popa
xchg
pop
jnp
xchg
jns
adc
jo
rclb
iret
cmpsb
pop
cmp
mov
mov
ljmp
or
mov
popa
cmpsb
fisttpl
xor
jge
xor
adc
mov
mov
ljmp
out
iret
rclb
dec
cmpsl
dec
mov
add
adc
fimull
outsl
movups
cmp
mov
inc
adc
fadds
mov
mov
pop
xor
out
pop
push
jno
mov
lea
frstor
and
xchg
sti
repz
adc
icebp
into
cmpsl
stos
popa
inc
incb
push
dec
rclb
xchg
inc
sub
cli
cmpsb
mov
jecxz
sub
in
insb
sbb
cmp
sbb
mulb
popf
push
scas
ljmp
inc
fldt
push
nop
cltd
test
nop
sar
out
fsub
int
sbb
movsb
popa
inc
dec
inc
call
lea
mov
filds
scas
lock
clc
sbb
adc
setg
mov
aaa
ret
or
lods
xchg
push
clc
loope
aam
cmpsl
inc
mov
push
bound
lods
push
dec
jmp
push
mov
add
dec
pop
and
sbb
cmc
sub
pushf
sub
and
mov
xor
movsl
addl
ja
cmpb
or
pop
sti
inc
xor
add
into
sahf
cmpb
repz
sbbb
mov
scas
xchg
sbb
xchg
addr16
fistpl
sub
sarl
jg
loop
cmp
cmpl
inc
mov
movsb
xchg
pop
dec
loop
cmp
sahf
inc
imul
mov
add
cmp
outsl
sub
xchg
lods
or
in
jns
sbb
in
mov
dec
test
in
sub
jge
dec
jns
mov
xchg
dec
fs
imul
rcll
sbb
adcl
ficoml
mov
jle
cmp
mov
inc
add
xchg
jp
xchg
xchg
in
dec
mov
and
mov
cltd
in
push
div
pop
enter
inc
lret
xchg
flds
fstp
test
push
mov
cmp
test
xchg
rep
shlb
mov
imul
repz
shll
ja
nop
push
mov
xor
add
lcall
dec
movsl
pusha
lret
imul
push
and
xor
aas
out
dec
cltd
sti
inc
faddl
fs
das
pusha
in
daa
mov
cmp
shll
clc
add
xor
fs
jle
iret
jo
push
xor
cli
bound
mov
pushf
jecxz
cmp
stos
pop
in
fcomps
ret
jle
inc
xchg
lret
ret
lret
mov
int
jmp
imul
addl
xchg
stos
outsl
rclb
push
movsb
lea
xchg
jp
pop
js
jb
sub
hlt
sbb
inc
pop
mov
mov
popa
push
test
xlat
add
imul
pop
pop
and
mov
adc
jbe
movsl
scas
jne,pt
cmp
fwait
loop
pop
lcall
xor
jbe
xor
jmp
orl
sub
push
sbb
cltd
sbb
dec
lahf
add
xlat
es
in
hlt
jle
xlat
dec
pop
scas
mov
dec
aad
cmpsl
bound
loopne
xchg
iret
mov
adc
pop
pop
cli
scas
stos
fucomip
lahf
shld
es
lea
push
icebp
je
testb
ret
enter
rcrl
sub
and
adc
insl
out
ret
in
pop
and
cmpsb
mov
test
add
jp
jl
popa
or
or
stc
push
mov
sahf
inc
mov
pop
mov
jg
iret
add
enter
push
inc
inc
mov
pusha
adc
fnstcw
int
js
sbb
hlt
inc
rorb
jo
xor
dec
imul
sarb
arpl
in
xchg
mov
out
and
adc
dec
cltd
aam
mov
cmp
pusha
mov
arpl
sub
pop
jnp
dec
arpl
test
and
push
mov
dec
gs
sbb
adc
jae
pop
fcomp
daa
scas
test
inc
lods
outsl
xbegin
cmp
sbbl
add
xchg
fmul
nop
pop
ds
outsl
pop
repnz
mov
mov
add
lea
cltd
enter
and
mov
mov
imul
ret
cmp
leave
jb
jge
out
or
mov
ja
lret
rcrl
je
mov
sbb
cmpsl
sbb
and
lcall
addr16
dec
xchg
xchg
loop
mov
aaa
xchg
stc
inc
stc
cli
and
xchg
xor
adc
subl
mov
mov
adc
cmc
sub
mov
test
dec
push
push
mov
pop
push
addr16
adcb
add
sbbb
fdivrs
in
lahf
arpl
out
push
arpl
sub
jns
and
push
cmpsb
inc
shlb
mov
orl
pop
xor
push
mov
xor
call
mov
cmp
out
adc
js
rcll
cmp
cmp
jle
loopne
and
fcomps
mov
stos
xchg
jbe
jns
pop
jg
mov
sub
scas
int
add
jg
mov
aam
cld
xchg
scas
push
dec
leave
jge
js
xor
insl
add
pop
push
pop
in
imul
cwtl
dec
cli
mov
push
push
xlat
mov
and
out
mov
cwtl
adc
outsb
icebp
sub
aad
popa
ds
out
fists
add
out
push
xchg
fisubl
add
pop
pop
cmp
xchg
jno
fiaddl
aad
cmp
add
insl
test
ja
fstpt
aad
jl
or
adc
pop
mov
pop
push
inc
and
or
ret
inc
incb
mov
in
mov
shlb
imul
mov
iret
or
and
addb
jno
push
bnd
jmp
mov
fisubl
dec
push
xchg
cmp
dec
mov
jge
push
enter
push
subb
sbb
inc
xchg
fsubs
je
mov
dec
movsb
outsl
hlt
stos
and
or
movsl
xchg
outsb
aaa
mov
mov
xor
loop
mov
mov
pop
jge
loop
push
test
or
xchg
roll
test
adc
in
rorb
jno
jmp
dec
outsb
lcall
xor
sub
mov
dec
mov
loope
xchg
mov
ja
push
shll
cwtl
inc
cmpsl
mov
mov
push
inc
pop
ret
add
xchg
out
adc
or
dec
mov
gs
cli
cmp
popf
test
jg
mov
imul
jl
icebp
sub
and
xchg
xorl
push
mov
ret
sub
cmpsl
ja
cltd
or
out
inc
pop
jmp
xor
pushf
cmp
lret
add
and
inc
mov
lds
adc
mov
add
mov
mov
adc
sti
adc
push
ja
pop
lcall
pop
cs
mull
rcrl
push
jbe
cmp
lahf
and
add
mov
ja
mov
mov
mov
insl
sbb
xchg
cmc
ss
mov
ret
movsb
push
loope
movsb
iret
or
fisttpll
adc
xchg
mov
shr
cmp
add
xor
hlt
inc
das
fidivl
cmc
pop
sbb
jmp
test
das
notl
cmpsl
add
int
pop
jmp
or
std
repnz
jns
mov
push
out
roll
sysenter
jecxz
popl
jno
adc
push
cmp
pop
inc
js
fisttpl
or
jo
sbb
sbb
fisubl
mov
cmp
adc
lock
dec
cmp
sarl
or
or
test
push
leave
xchg
out
testb
mov
sbb
push
movsb
inc
xchg
popa
add
gs
push
loop
xchg
insb
mov
pop
js
xchg
fisubrl
aas
adc
pop
xor
jbe
xorb
icebp
xor
mov
mov
xchg
push
popl
sbb
nop
jl
push
jge
inc
inc
not
inc
cmp
dec
mov
lret
sbb
dec
xor
push
mov
mov
lods
xor
es
mov
and
mov
insb
mov
jb
push
je
pop
ljmp
int
rep
xchg
loope
jl
movsb
shrb
push
cmp
sub
and
icebp
mov
movaps
aas
gs
pop
xchg
cmp
lcall
fmuls
xor
rcr
fnstenv
add
adc
dec
fmull
add
cmp
insb
out
sarl
xor
push
loopne
test
add
mov
ds
mov
inc
inc
idivb
jo
int
xorb
and
ss
fildll
aad
loop
or
daa
pop
out
add
jo
pop
push
sbb
sub
loope
aam
test
mov
aad
ret
sub
mov
stc
pop
cwtl
adc
pop
mov
xor
mov
dec
or
fisubrs
inc
test
mov
pop
sbbl
push
and
setle
aam
mov
ficompl
mov
je
mov
push
jns
sahf
sbb
mov
sbb
xor
sub
adc
cltd
add
lock
ds
ret
mov
inc
std
xor
adc
mov
adc
icebp
jmp
add
mov
arpl
adc
cmp
ret
testb
mov
jge
xchg
sub
xlat
inc
xorl
inc
les
hlt
ljmp
push
cmp
inc
lcall
mov
jae
cmp
jg
out
scas
mov
xor
aam
mov
sahf
inc
dec
mull
inc
pop
cld
mov
inc
test
outsb
jmp
fxch
mov
imul
push
cmpsb
mov
xor
call
cmpsb
jo
cmpsb
call
add
mov
xchg
lcall
mov
dec
mov
inc
cmp
popf
xchg
xlat
pop
loope
add
insb
fistl
cwtl
cmp
add
mov
add
cli
shr
loop
jle
push
mov
jae
or
cmp
push
sub
iret
mov
adc
push
add
mov
rcrb
insl
sti
lret
or
dec
mov
fndisi(8087
lret
pop
mov
or
setp
mov
dec
adc
hlt
dec
ffree
fnsave
cmpsb
das
sub
dec
pop
mov
loope
stos
rorl
push
push
push
mov
addr16
sub
adc
lret
cmpsb
cwtl
dec
xor
mov
ret
mov
and
push
stos
mov
or
sub
add
cmpsl
in
xor
loope
sub
repnz
scas
iret
mov
xor
sbb
sub
daa
mov
cltd
mov
repnz
push
nop
pop
retw
cmp
push
mov
sbb
xor
movsl
fdivrl
out
lret
lods
cltd
lcall
mov
pop
xchg
js
out
jp
ficompl
mov
stos
imul
mov
fnsave
lea
inc
dec
outsl
aaa
sbb
sub
mov
adc
cmp
fnstcw
xor
fwait
xchg
mov
imul
cmp
and
int
jb
or
hlt
mov
mov
in
test
mov
xchg
cli
subl
dec
sti
push
mov
test
lods
iret
dec
push
es
cmp
mov
pop
pusha
cli
shr
adc
test
push
test
jne
in
pop
xor
aaa
stos
or
rep
push
out
test
or
movsl
mov
jno
cltd
sbb
insl
outsb
fadd
movsb
insb
push
mov
divl
dec
and
or
and
outsb
insl
pop
cmp
add
scas
push
xor
sbb
into
push
cmp
mov
mov
mov
decl
pusha
xor
mov
sbb
aaa
mov
ds
jmp
mov
mov
out
lret
dec
aam
ljmp
pop
pop
popa
dec
cmp
mov
sub
or
mov
lea
testb
shll
xor
inc
mov
scas
hlt
gs
add
xchg
and
leave
push
imul
pop
sti
fs
fdivl
push
jl
add
pop
push
mov
sub
sbb
xor
or
dec
pop
push
sub
and
sarl
aam
into
daa
mov
into
xchg
sub
pop
pusha
xor
sbb
in
sub
shlb
int3
push
push
mov
inc
push
call
pop
negl
mov
cmpsb
cmp
dec
push
rolb
pop
xlat
mov
lock
repnz
into
aad
lahf
sub
es
lret
xchg
je
add
and
daa
out
mov
clc
bound
cmp
xchg
sub
notb
lcall
and
mov
or
sub
imul
bnd
adc
sbb
mov
fists
jne
fwait
sub
cmpsb
add
inc
sub
xor
mov
mov
pop
sbb
sub
hlt
mov
cmp
jecxz
mov
lods
add
mov
xlat
daa
stc
add
idivb
jecxz
or
loop
mov
dec
pop
movsl
mov
push
pop
sbb
push
xchg
sti
mov
jae
int
sbb
ds
mov
mov
push
test
push
pop
inc
dec
inc
sahf
popa
frstor
or
xor
inc
dec
or
fildll
fdivrs
out
jmp
leave
jmp
xchg
fcoml
mov
dec
fidivl
int3
sbb
popf
sbb
cmp
adc
xor
dec
in
test
jae
xor
std
dec
idivb
test
pop
enter
add
sar
push
mov
inc
mov
arpl
cli
lret
lods
leave
negl
insl
xor
icebp
movsb
int
mov
and
in
data16
addr16
adc
pop
sub
and
ss
mov
sub
hlt
out
jmp
lods
lds
cmp
lret
loopne
lahf
lret
repz
dec
push
stos
xor
jecxz
pushf
ret
cmp
jbe
or
shrb
outsb
testl
in
stc
bound
repz
or
mov
jge
or
or
outsl
and
dec
or
pop
test
test
push
jns
loop
and
push
or
lret
imul
lock
xor
dec
sub
jmp
mov
pop
xor
movsb
pop
hlt
xor
stc
pop
nop
cmpsb
adc
movsb
lcall
sarb
mov
xchg
scas
xchg
or
dec
jg
ja
add
push
sub
xor
aad
adc
jge
inc
mov
rorl
repz
lock
push
jb
aas
icebp
popf
loope
add
fmulp
iret
add
jge
adc
into
pop
mov
dec
jb
stos
decb
addr16
jle
rcl
xor
mov
or
or
jecxz
and
push
test
cld
push
popf
inc
jle
inc
push
cmp
enter
fsubrs
int3
lret
fimull
mov
repnz
mov
fisttpll
dec
ljmp
inc
mov
popf
cmp
imul
jno
inc
test
stos
mov
movsl
pushf
sbb
cmpsb
subw
lods
or
sub
sub
les
mov
ror
xor
cld
jne
int
mov
and
cmpsb
icebp
lahf
mov
sub
out
xchg
xlat
cmp
mov
mov
or
push
cmpl
dec
jge
loop
xlat
dec
xchg
lock
add
das
jl
notl
rcrb
push
cltd
in
xor
icebp
sub
daa
clc
inc
test
imul
xorb
mov
daa
int
xchg
xor
shlb
jl
lcall
mov
jno
scas
mov
pusha
cltd
pop
push
jae
aaa
cli
mov
push
lods
js
lods
and
mov
jne
push
cmpxchg
inc
lret
aam
orb
xchg
cld
or
cmp
cmp
xchg
lahf
push
cmp
cwtl
xor
icebp
daa
xchg
or
int
add
ret
and
shlb
push
pop
movb
xlat
in
pop
sbb
ss
sarl
jns
add
pop
orl
xchg
sub
adc
jno
dec
mov
xchg
bound
nop
outsl
testb
sub
imul
scas
sbb
add
jae
std
sub
scas
inc
mov
dec
sbb
mov
adc
and
jae
jbe
ja
loopne
roll
ret
mov
mov
dec
cmp
ljmp
adc
adc
mov
sbb
inc
push
and
loop
jmp
cmc
mov
enter
and
les
and
xchg
insl
jp
adc
aaa
cmp
cmp
das
inc
jecxz
jp
jecxz
cmc
and
outsb
mov
sbb
xor
outsl
addr16
add
out
fcompl
cmp
fwait
mov
loopne
lea
mov
test
inc
pop
mov
cmp
push
sbb
xchg
mov
into
ret
dec
jns
negb
popf
loopne
shr
es
inc
push
out
arpl
pop
inc
mov
jbe
inc
sub
ret
popf
push
std
mov
popa
or
ss
push
into
cmpl
loope
push
or
xchg
je
mov
jle
hlt
and
mov
mov
icebp
mov
push
add
mov
pop
sahf
sub
sbb
mov
or
insl
jle
outsb
mov
mov
dec
pop
mov
and
inc
inc
lea
clc
rclb
jbe
xor
movsl
outsb
cwtl
pop
xchg
shrl
imul
icebp
daa
stos
das
or
out
push
mov
dec
loopne
insl
adc
pop
jg
and
fwait
out
mov
inc
mov
imul
testl
scas
ljmp
adc
test
shlb
sub
lea
jno
fildll
bound
into
out
jecxz
test
mov
data16
roll
out
jmp
in
test
cmp
loope
lahf
movsl
cs
jne
fwait
mov
pop
dec
leave
sub
insb
inc
mov
loop
hlt
in
test
jo
inc
xchg
xchg
out
xor
inc
push
arpl
cmp
int
or
sti
push
dec
pop
push
push
out
ret
or
and
adc
xchg
push
lds
xchg
out
xchg
sahf
inc
cmp
scas
cmp
fstp
sub
pmaxsw
int
lods
fsubp
adc
sahf
arpl
in
popf
inc
imul
adc
push
sbb
lret
aaa
std
int3
call
xchg
stos
ja
push
enter
mov
inc
jmp
pop
lcall
jle
lods
scas
mov
ds
popa
add
pop
int3
adc
sub
jo
outsl
test
jle
fwait
pusha
int3
lods
std
adc
out
mov
xchg
or
pusha
dec
sub
lahf
pop
sub
xchg
icebp
sub
or
aad
sbb
jle
jnp
and
pop
shlb
cmc
dec
and
aad
sub
ss
fildll
push
pop
xor
loope
fdivs
adc
cmc
cld
sahf
je
inc
call
inc
jno
scas
inc
sub
lods
xor
cmc
push
in
jbe
cmp
inc
dec
dec
cmp
loopne
into
enter
sbb
call
pop
pop
add
mov
and
push
aad
mov
sbb
popf
and
mov
test
mov
stos
sub
sub
add
test
das
mov
sub
mov
jno
pop
fucomp
jmp
xor
cmp
and
mov
iret
fmuls
push
xchg
ljmp
push
pop
dec
cmpsl
cwtl
mov
iret
xor
jl
in
loope
in
pop
js
or
mov
push
in
fildl
push
mov
xchg
addr16
rol
cmpl
inc
insb
mov
stos
jp
xchg
rcrb
xor
pop
mov
stos
inc
jbe
xor
xor
movsb
test
pop
or
xchg
and
pop
mov
jbe
shl
push
and
aaa
lret
mov
ror
inc
adc
push
jl
xorb
enter
clc
inc
push
cmpsb
dec
cmpsl
pop
jecxz
jo
jle
jnp
adcl
xchg
mov
add
and
xor
inc
xchg
mov
cmc
adc
enter
lea
rclb
pushf
mov
test
imul
addr16
push
popa
loope
aam
jl
inc
xchg
jbe
mov
icebp
divb
cltd
mov
data16
lock
fildll
cltd
sbb
ljmp
and
in
es
aad
stos
or
xchg
lock
js
and
dec
xchg
popa
out
jg
adc
pusha
outsb
test
dec
test
inc
or
xchg
mov
sub
cmpsl
and
mov
movsl
adc
or
jle
cmp
sub
pushf
push
inc
fnstenv
mov
sbb
cmpsl
dec
mov
clc
mov
lds
add
sub
cmp
daa
test
lds
jno
out
mov
sarb
xor
call
xchg
cmp
shll
mov
sahf
ret
jecxz
xchg
dec
or
outsl
pop
pop
pusha
push
cmp
jle
dec
lahf
outsl
and
jecxz
mov
call
inc
stos
lock
cmpsl
jns
mov
nop
mov
mov
inc
push
jp
adc
test
sub
testl
cmp
jp
dec
add
repnz
mov
js
mov
add
push
and
push
fdivrs
icebp
rcl
outsb
dec
leave
addr16
addr16
inc
add
pusha
hlt
push
pop
xor
ja
outsl
mov
sbb
push
addr16
push
cmp
imul
xor
decb
dec
push
xchg
mov
fs
insb
sti
pusha
shll
mov
jne
and
sbb
cmpsl
mov
sub
adc
in
pop
jmp
push
in
sbb
jle
jmp
gs
inc
mov
inc
inc
mov
ret
sbb
je
and
mov
std
sub
pop
or
inc
mov
stos
popl
jns
cltd
cwtl
mov
and
lds
lahf
jmp
jb
aad
outsb
loop
jl
jnp
adc
pop
cmp
lret
jo
sub
mov
cltd
sahf
mov
insb
mov
sbb
jb
jnp
and
adcl
push
jmp
into
loop
in
test
xor
mov
cld
inc
inc
filds
andl
in
cmp
andl
jo
lcall
inc
bound
mov
das
sub
sarl
icebp
add
add
sub
out
cmpsl
lods
pushf
jne
jp
inc
push
inc
pop
push
lea
push
imul
add
xchg
int3
and
lret
outsb
hlt
mov
sub
mov
rcrb
in
and
xchg
push
ss
xor
test
sub
sbb
popa
clc
sbb
rcll
lock
mov
shld
adc
mov
xor
inc
xchg
xor
lret
test
cmpsb
mov
pop
jge
jmp
mov
shl
mov
mov
dec
inc
and
mov
scas
push
add
adc
dec
sahf
out
movsl
mov
pop
arpl
push
xchg
pop
lcall
pop
and
stos
mov
addl
sub
dec
adc
std
std
sub
insl
jb
fmulp
sbb
xor
cmp
ret
fs
faddl
lcall
add
add
leave
sahf
cmp
out
pop
xchg
or
mov
xchg
and
fmuls
jno
mov
dec
shll
dec
pushf
ljmp
adc
sub
out
in
jnp
or
pop
mov
loopne
cmp
andl
out
fwait
mov
arpl
mov
outsb
repz
stc
cmp
hlt
xchg
popf
int3
fsubrs
cmp
insl
inc
movsb
movsb
dec
js
inc
jp
scas
mov
mov
cmp
push
sub
ret
and
outsb
push
jbe
jg
loop
fdivrl
add
cmp
cli
jae
js
pop
adc
xchg
mov
gs
mov
mov
lock
jns
and
les
test
xor
sub
lret
sbb
mov
fidivs
pop
jnp
insl
cli
jmp
ret
out
add
popf
lahf
mov
pushf
outsl
idiv
cmpsb
lcall
or
sbb
sbb
subb
aaa
adc
cmpsb
ret
mov
jns
aad
nop
pop
adc
enter
popf
gs
pop
or
jecxz
rcrl
clc
sbb
add
or
sti
xchg
xor
adc
cmp
inc
sub
aam
int
xchg
ljmp
jo
and
stos
dec
pushf
sub
lahf
ficompl
pop
ror
inc
sti
add
mov
aas
lods
stos
int
out
out
lret
roll
decl
cwtl
xor
or
iret
in
cmp
leave
out
xchg
adc
aaa
jnp
inc
insl
adc
pop
or
mov
cmp
repnz
xlat
je
loope
xor
pop
push
and
lcall
mov
outsb
inc
fs
mov
xor
cmp
push
jne
cld
sahf
int3
fidivrs
mov
into
mov
jmp
lods
push
outsl
enter
mov
cwtl
push
in
rolb
xor
mov
sahf
push
mov
and
cmp
imul
jb
testb
mov
faddp
insb
sbb
inc
push
xor
or
lock
mov
mov
adc
insb
adc
mov
arpl
push
insl
sub
popl
aam
mov
sbb
sbb
imul
sub
push
pop
and
push
pop
sahf
cmp
mov
pop
mov
shlb
cmp
int3
mov
cld
inc
adc
scas
out
lock
rcr
inc
ret
add
lods
fcmovbe
sub
sub
mov
pop
sub
stos
push
fadd
fbstp
cli
xlat
cmpsl
pop
arpl
movsb
xchg
push
fisubrl
xor
aaa
adc
out
fisttpll
daa
pop
cltd
cli
mov
lock
loopne
mov
or
pop
fimuls
out
scas
fwait
xor
dec
sbb
mov
push
add
pop
mov
pop
jp
in
mov
enter
repnz
aad
pop
sbbl
les
movsb
mov
xorb
sub
ret
jp
mov
mov
ja
pop
xorb
pop
loope
and
cmp
stos
es
or
sbb
sub
daa
inc
push
cwtl
pop
xor
shlb
xor
push
push
daa
daa
mov
rorb
fst
mov
mov
mov
cmpsb
rcr
fldl
add
or
inc
pusha
add
push
je
push
inc
mov
rcrl
lea
push
xchg
jmp
aam
inc
push
shlb
and
das
inc
dec
sahf
scas
cs
sbb
fwait
in
jne
emms
arpl
and
pop
lahf
inc
dec
hlt
imul
and
xor
adc
mov
push
xchg
shlb
push
lea
imul
stc
cmc
ret
test
outsl
jns
pop
and
jae
xlat
dec
daa
into
shr
jb
adc
xchg
imul
test
and
sahf
movsl
lds
cmp
test
cmpsb
dec
daa
addr16
inc
arpl
sti
mov
mov
scas
jb
aaa
lcall
cmp
pop
xchg
shrl
shrb
cmpb
mov
xchg
pop
add
cmp
rclb
incb
cmp
sbb
adc
aas
mov
mov
addr16
xchg
fnstcw
in
in
cwtl
mov
enter
jbe
xchg
sbb
mov
or
cmp
push
or
insb
or
dec
and
or
jno
push
adc
adc
sbb
xlat
pop
pop
mov
cli
jg
dec
dec
fldt
lock
dec
push
mov
adc
xor
mov
outsb
sub
mov
insl
fnsave
cmc
or
ljmp
inc
cmpsb
jmp
cmp
sub
inc
pop
clc
adc
sbb
aad
test
cltd
push
rclb
inc
out
setle
cmpxchg
xchg
cmpsb
cwtl
shr
cmpsl
or
jbe
dec
lock
fwait
sub
stc
jo
xor
outsl
add
pushl
imul
mov
push
mov
cld
xchg
mov
pop
mov
jecxz
js
arpl
dec
leave
mov
mov
xor
je
mov
nop
lret
jmp
or
xlat
scas
inc
js
repz
aad
pop
shll
loopne
xor
shll
cmp
mov
mov
mov
mov
adc
sbb
push
scas
mov
sarl
fisttpl
es
jno
rep
xchg
cwtl
imul
loopne
push
popa
mov
pop
mov
pop
cmpb
adc
jge
rcr
mov
not
xchg
popa
pushl
das
push
lods
or
dec
ja
dec
jg
mov
push
dec
ja
movsb
test
fistl
inc
movsl
das
loope
test
daa
xor
sub
xchg
xchg
or
arpl
daa
and
adc
cli
ret
xchg
sbb
cmp
aam
popa
test
jo
out
cltd
call
adc
je
cmpsl
or
or
decl
cmp
in
insb
dec
mov
dec
test
outsl
scas
add
jle
push
push
push
ret
je
js
add
dec
dec
test
lcall
int3
mov
jmp
aaa
adc
cli
cmovb
das
roll
lds
add
mov
inc
mov
nop
icebp
jcxz
clc
push
mov
and
cld
mov
inc
adcb
add
out
scas
pushf
sbb
lds
outsl
dec
push
xchg
mov
out
outsb
and
cld
xor
cld
mov
aad
shll
cld
push
out
rcrl
call
push
mov
aam
push
mulb
arpl
push
ret
out
xchg
call
lock
ss
ljmp
add
repnz
cli
jns
cwtl
mov
push
icebp
sarl
mov
mov
xchg
hlt
cld
pop
loop
push
popf
int
scas
dec
xchg
xorb
mov
pop
xchg
sbb
xchg
sbb
mov
out
inc
jmp
mov
cld
cmpb
pusha
mov
imul
cli
mov
test
push
xor
lret
out
add
test
mov
in
push
fstl
add
mov
test
into
in
jl
outsb
aam
add
adcl
cmpl
mov
je
cmp
shll
fs
insb
imul
push
into
or
lods
lds
lea
mov
jno
mov
ret
and
lods
inc
xchg
outsb
out
test
mov
mov
dec
push
push
orb
mov
rcr
pop
aad
in
and
sbb
sub
push
ret
push
pushf
xchg
inc
mov
pushl
lea
cmp
push
push
fnstsw
loope
leave
mov
mov
loopne
xor
push
es
fsubl
retw
push
push
rcrb
pop
mov
xchg
sub
cli
xor
xchg
xorb
bnd
ret
leave
cwtl
jg
xchg
loope
addl
pop
idivb
push
mov
test
shll
insl
enter
addr16
cmp
stos
adc
or
adc
jb
push
aaa
or
popf
cmpsb
aaa
adc
pop
bound
rclb
and
mov
xor
insl
sub
into
shl
adc
or
stc
lock
adc
push
jl
iret
push
test
mov
out
je
mov
mov
test
jmp
addr16
adc
or
jae
jae
int
das
data16
push
loope
sub
mov
inc
cwtl
push
daa
push
cmc
movsl
addb
mov
jne
lea
push
adc
sbb
sub
popa
jne
stc
xor
jle
es
xchg
cmp
movsb
pop
pop
adc
loop
sbb
xchg
pop
out
fldcw
sub
in
xchg
int
imul
or
mov
mov
shrb
ljmp
pop
imul
outsl
xor
jl
pop
stos
dec
cmp
inc
out
or
cmpsl
shrl
jle
fdivr
cmp
cmp
sbb
fs
ret
lods
mov
pop
push
and
inc
sbb
fiaddl
jecxz
out
mov
inc
rolb
inc
fldt
sbb
andb
cli
outsl
mov
sahf
hlt
aas
int
ficompl
xchg
push
xor
xor
fs
testl
into
in
insb
roll
dec
xchg
jb
push
mov
test
icebp
sbb
iret
ret
mov
adc
or
lock
mov
sub
xchg
mov
mov
js
gs
xorl
dec
mov
loopne
push
call
rcrb
and
rcl
outsl
mov
in
mov
xor
hlt
inc
xor
fcompl
int
pushf
mov
adc
test
movlps
iret
ja
push
enter
in
cmp
mov
sbb
inc
pop
aam
jne
shll
xchg
push
inc
cmp
jmp
sbbb
sahf
mov
ljmp
notl
fnsave
ret
pop
fsubl
adc
dec
test
inc
fldl
pop
aad
mov
popa
inc
push
mov
pop
jp
cmp
pop
add
es
sbbl
dec
lret
out
push
aas
aam
mov
cs
je
sahf
inc
jg
add
and
mov
pop
and
rorl
fwait
sbb
jg
orb
bswap
fld1
aaa
push
pusha
cmp
add
mov
dec
add
inc
out
adc
mov
jb
lods
add
mov
sbb
jp
loopne
mov
enter
or
iret
dec
mov
js
xor
imul
icebp
inc
dec
jns
push
test
adc
pop
loope
pop
out
push
ret
mov
movsl
xor
in
mov
js
shl
daa
sub
sbbl
std
mov
add
cmp
and
bnd
pop
xlat
outsl
popf
sbb
push
xor
ja
repnz
xchg
add
andb
das
sarb
popa
les
dec
sub
jecxz
repz
sahf
fcomip
aam
jo
fldl
jns
xchg
outsl
gs
fdivrs
enter
jno
je
repz
jge
and
fs
fcomps
andb
mov
loopne
add
into
inc
add
or
cmpl
cmpl
ret
jnp
inc
ret
test
sub
in
out
and
fisttps
lcall
mov
subb
sbb
call
mov
cmpsb
xchg
jle
pop
fwait
rcrb
cmp
in
rorb
cli
xchg
cmp
adc
ljmp
xchg
pop
inc
mov
cwtl
es
fisubl
cmp
sarb
adc
cs
lret
cs
and
pop
ja
orb
mov
cmp
dec
dec
mov
movsl
hlt
cmp
int
cmp
negb
xchg
xor
lret
xchg
insb
dec
fcoml
jno
out
mov
in
push
cmp
call
inc
xchg
pop
outsb
jne
pop
jo
jg
and
jo
xor
mov
out
push
jns
adc
xchg
jg
mov
loope
pop
int3
repz
iret
or
mov
and
cmpsb
fidivl
idivl
mov
mov
mov
pop
popf
testl
stos
je
sub
lods
enter
test
in
or
xchg
mov
mov
hlt
cmp
in
shlb
or
lret
cmp
andl
cmc
sub
movb
stc
inc
mov
xor
push
jns
fisubl
or
mov
push
fwait
mov
psrad
mov
shll
add
jge
inc
out
leave
cmpsb
mov
mov
cli
mov
loop
pushf
ljmp
das
mov
add
sub
je
cmc
les
jne
sub
fwait
dec
xchg
divb
add
js
scas
dec
les
sbb
dec
ficompl
mov
adc
call
sub
adc
cli
lcall
sarl
stc
sbb
into
imul
dec
dec
ror
mov
loop
mov
rorb
add
sub
jp
sub
mov
pop
adc
and
lock
ret
push
mov
xchg
shll
push
lock
addr16
push
jne
xor
fcmovnu
lds
add
pop
cwtl
out
lret
sub
mov
push
or
mov
push
cmc
inc
mov
cmp
push
mov
xlat
fsubl
mov
mov
mov
adc
xor
scas
lock
into
iret
jp
jmp
sti
add
pop
les
filds
push
mov
cmpsl
shrl
xor
add
lahf
es
push
push
sub
ret
push
adc
jnp
pop
arpl
sbb
cld
mov
sbb
sbb
or
xor
jnp
cmp
lahf
mov
addb
xor
iret
xchg
lcall
dec
inc
push
enter
sub
mov
scas
aaa
adc
sarl
cmp
pop
push
aaa
aaa
adc
lock
jae
cmp
dec
fldt
pop
adc
dec
dec
lds
xchg
push
jbe
repz
hlt
repz
das
mov
add
pusha
imul
cwtl
ds
jne
add
jb
aaa
outsb
pop
ret
rol
hlt
or
ds
aad
xor
enter
std
cmpsl
pop
jo
mov
pop
movsb
out
lea
out
adc
aaa
xchg
jmp
xchg
push
data16
lods
rcrl
push
cmp
xchg
xchg
adc
lods
test
rcrl
or
push
xor
xchg
shrl
lret
cmp
sbb
cmp
and
adc
stos
movb
outsl
mov
add
adc
xchg
pop
outsl
pop
aaa
cmpsl
lahf
out
inc
pop
rol
inc
loop
ja
shl
cmp
in
pop
rcrb
xor
icebp
in
jb
nop
adc
jnp
or
sbb
cld
push
xor
dec
inc
dec
jns
arpl
or
push
mov
push
adc
push
jae
das
sub
xchg
repnz
pop
mov
pop
hlt
lea
adc
out
fisubrs
rcll
call
jmp
lea
ret
mov
sub
rorl
dec
je
in
mov
jg
scas
call
push
out
mov
ret
jle
dec
jne
dec
jbe,pt
jp
add
push
outsb
data16
jo
jmp
adc
addl
sub
mov
outsb
cwtl
test
fcomps
lods
pop
das
push
dec
repnz
cmpsb
adc
lock
mov
or
push
mov
jno
arpl
and
xor
xor
add
inc
iret
and
push
cmp
jg
mov
aam
cltd
jae
sub
aas
or
pop
sbb
popf
int
jo
inc
xor
inc
jns
rolb
fists
bound
test
jp
jno
mov
pop
repnz
mov
adc
add
rcrb
mov
cltd
out
or
stos
sbb
repz
cmp
jne
scas
mov
cwtl
xchg
cmpsl
mov
mov
xor
maskmovq
out
adc
lea
jne
xchg
cwtl
mov
out
mov
stos
mov
pop
dec
adc
cli
add
shl
sbb
sbbb
in
mov
mov
addl
mov
xchg
mov
lahf
insl
and
movsl
mov
xchg
and
mov
cmp
test
test
xchg
arpl
lret
mov
cld
pop
dec
xlat
aad
cmp
scas
jmp
pop
push
xchg
mov
loop
jbe
sub
pushf
nop
call
adc
arpl
orb
push
dec
mov
dec
push
lods
insl
in
bound
hlt
lret
nop
push
mov
into
xor
jg
xor
dec
popa
adc
or
decl
fidivrs
push
scas
inc
dec
hlt
xchg
rolb
lods
mov
cmp
mov
fucomip
std
jae
mov
int3
dec
lret
add
xchg
add
dec
ds
dec
pop
out
je
fistps
cmp
test
push
les
or
jo
popa
outsl
sub
gs
pop
adc
adc
cmp
dec
push
mov
jno
into
arpl
pusha
fmul
test
mov
mov
pop
repz
inc
daa
lea
mov
iret
add
loopne
cmp
push
fildl
sti
loope
movsb
xchg
fwait
inc
or
fisubrs
ss
dec
rolb
and
or
fsubr
sub
cltd
das
jae
mov
movsl
cmpsl
push
dec
bound
cmp
clc
movl
jge
testb
lds
or
inc
std
jnp
repz
js
mov
cld
aam
ds
movsb
mov
jns
fsubrp
imul
adc
fsub
stos
lea
loope
mov
jecxz
adc
xchg
mov
jecxz
sbb
and
sbb
negl
xorb
push
lods
loope
mov
inc
cmp
cwtl
mov
push
sbb
repz
adc
ror
movsb
jmp
sub
out
dec
pop
push
or
mov
dec
push
cmpsl
and
repz
aaa
in
shll
jecxz
call
int3
adc
icebp
cwtl
in
add
aas
fwait
inc
cmovo
push
cmpsl
jnp
jg
gs
cwtl
cmp
dec
xchg
in
mov
add
loop
loopne
popf
inc
std
add
jne
mov
shll
xor
sbb
icebp
cld
adc
inc
or
ret
ljmp
mov
push
sub
fistpl
fcomps
pop
mov
push
cmp
stos
fldcw
in
aaa
mov
jecxz
sbb
fcomps
cltd
lock
add
inc
mov
imul
scas
enter
xor
int3
popa
mov
lcall
pushl
cmp
inc
xchg
lock
xchg
cmp
popf
loopne
inc
pop
mov
ficompl
cmpsb
repnz
hlt
adc
leave
cmp
jecxz
out
jecxz
scas
mov
stos
and
inc
in
and
pop
js
shll
dec
push
cmp
aas
repz
mov
add
cmpsl
in
mul
mov
jbe
adc
mov
fiaddl
scas
clc
loopne
nop
sbb
push
ror
ds
scas
dec
out
push
pop
xor
jmp
jb
adc
gs
mov
lods
das
stos
cld
xchg
psubq
mov
clc
add
int3
mov
jp
mov
jns
cmc
push
xlat
ret
movsb
mov
ja
pushf
adc
cmp
mov
js
loopne
add
jo
rcrl
rolb
or
cli
mov
frstor
dec
pop
gs
es
add
lret
jmp
sub
inc
fxrstor
sbb
xchg
adc
jmp
inc
ljmp
das
in
addr16
int3
pop
mov
inc
icebp
cwtl
mov
mov
push
in
push
and
fs
mov
dec
add
xor
dec
addr16
or
sbb
sar
icebp
enter
aad
mov
stos
mov
aam
out
mov
stc
hlt
xor
sub
mov
sub
dec
call
ljmp
xchg
pop
fnstsw
scas
mov
cs
or
push
or
ffreep
cltd
mov
jnp
gs
arpl
or
test
test
nop
mov
mov
leave
xchg
dec
cmc
arpl
call
out
arpl
leave
aaa
sbb
fnsave
insl
xlat
jb
adc
fistl
arpl
cmpsb
mov
sbb
mov
mul
pop
add
jne,pn
test
sub
stos
mov
adc
mov
lcall
jnp
xchg
mov
add
mov
fs
enter
jecxz
push
fsubl
cli
imul
pushf
aad
ss
decb
je
lods
xor
bound
xchg
sub
pop
gs
mov
loopne
dec
jg
stc
mov
rcll
cli
xchg
in
dec
or
push
and
mov
int3
outsl
aam
aad
test
adc
xor
cmpsl
ljmp
or
sti
xchg
pop
in
aad
cld
sub
jmp
movsb
cmp
ljmp
mulb
ret
scas
pop
imul
add
addr16
jbe
ds
jae
adc
lods
mov
fdivr
pop
fdiv
jecxz
ljmp
xchg
in
jae
je
pop
cmc
pusha
mov
test
cmpsb
test
ja
divb
jmp
mov
pushf
adc
pop
into
in
incl
xchg
adc
dec
nop
and
loope
out
dec
sbb
out
fisubrl
adc
adc
jnp
sbb
cld
jb
repz
adc
ret
pop
push
pushf
addr16
ss
mov
das
rcr
aad
jae
mov
dec
jl
loop
sbbb
insb
insl
sub
push
jmp
pop
mov
cmp
ds
jp
mov
call
push
jmp
lods
jmp
jp
into
fimuls
scas
xor
mov
inc
shl
jb
pusha
mov
dec
xor
aas
out
gs
sub
imul
lds
sub
movsl
and
jne
push
adc
mov
data16
mov
push
xchg
in
into
cmp
push
out
dec
jne
pop
dec
or
aad
inc
mov
xchg
and
sahf
cmp
enter
testl
mov
jp
sub
rclb
lret
ja
cltd
mov
and
in
or
enter
cmc
mov
pop
dec
negl
push
mov
jmp
mov
push
dec
pop
call
popf
stos
pusha
xchg
mov
lods
mov
sbb
cmp
out
pushf
and
sub
mov
pop
xchg
sbb
clc
ljmp
lcall
push
ret
sbb
adc
fsubl
lahf
icebp
in
aad
data16
pop
dec
xor
lods
sbb
out
xor
fnstsw
and
pop
pop
mov
mov
sub
mov
psllw
inc
mov
jb
adc
or
mov
inc
sbb
add
xlat
lods
cltd
repz
stos
pushf
sub
add
jge
movsl
add
imul
test
adc
xor
daa
in
mov
cmp
push
movsb
mov
dec
jg
jl
dec
repnz
cmp
mov
adc
jns
arpl
inc
xchg
adc
clc
fsubrs
fldz
push
mov
or
cltd
cmp
xor
fwait
bnd
lods
lock
gs
je
cwtl
bound
jmp
sbb
nop
ficompl
lods
jns
mov
adc
or
aam
inc
or
and
mov
int
jecxz
pop
xchg
call
inc
test
ret
push
in
jnp
or
test
insl
and
ljmp
in
dec
fwait
pop
mov
int
add
mov
cmp
popl
loope,pn
imulb
sub
xchg
and
xchg
xchg
pop
data16
jle
icebp
fistpll
cmp
sbb
mov
out
lods
push
fadds
or
jmp
rolb
fmuls
mov
sbb
popl
xor
sarb
mov
mov
xor
inc
repnz
xchg
push
ret
lret
sti
pop
js
jmp
test
dec
jmp
pop
lcall
lea
mov
movsl
or
shrl
sbb
jno
mov
and
arpl
fiaddl
into
js
aad
cmp
stc
xor
hlt
popf
sbb
cmpsb
and
mov
mov
cltd
inc
mov
push
lea
push
pop
mov
pop
push
adc
inc
push
jbe
or
dec
loop
jecxz
xchg
sub
or
xchg
push
add
jns
cmc
loop
adc
jae
add
push
jg
adc
lods
add
xchg
roll
lahf
imul
sub
inc
lret
jp
inc
ffreep
mov
cmp
jnp
and
pusha
push
mov
bound
cld
xchg
pop
xchg
fnstcw
pop
sbb
outsb
addb
xorl
or
test
push
mov
mov
jle
mov
jne
leave
ljmp
cs
loopne
insl
xchg
js
xor
xor
dec
call
cwtl
and
sub
adc
sub
lock
push
push
mov
push
imul
xchg
out
scas
scas
jno
sub
cmpsl
jmp
in
fdivrs
pop
fcoms
dec
sub
cwtl
push
es
pop
in
loopne
jp
fsubrl
les
xchg
adc
loopne,pt
push
adc
xor
dec
add
leave
or
repz
repz
scas
sub
shll
insl
pop
inc
icebp
dec
mov
sbb
imul
insl
mov
dec
cwtl
sbb
add
xchg
xor
cmp
mov
and
movsb
xchg
test
ret
js
mov
sbb
dec
mov
pop
inc
frstor
sbb
add
add
pop
in
out
and
sub
iret
insl
jl
cmp
in
loope
mov
mov
cmp
xor
pop
addl
sarb
pop
inc
lods
cmc
xchg
add
movsb
mov
sub
and
movsb
jae
and
xor
stos
sbb
and
repz
pop
filds
mov
or
int
cld
sub
out
xor
je
or
xor
cmc
pop
push
mov
mov
lods
mov
mov
es
push
sub
pop
sbb
fwait
add
das
nop
mov
imull
jo
inc
push
fistps
shlb
mov
arpl
xchg
fidivrs
jb
hlt
sbb
js
push
mov
ret
jp
xor
stc
lods
into
loop
iret
mov
cmp
fwait
into
cmp
adcb
xor
ja
mov
xor
lahf
shr
cmp
movsb
mov
sbb
aam
sbbb
pop
pop
mov
jns
clc
int
fcoms
ljmp
jno
sti
push
cmp
insl
stos
pop
pop
in
ds
fcomps
push
lods
xor
mov
bound
cltd
pop
pushf
push
and
sub
stc
lret
add
out
mov
lret
incb
mov
push
out
call
mov
mov
pop
scas
ss
leave
scas
adc
inc
dec
mov
data16
fildl
cld
lahf
mov
xchg
dec
mov
stos
sti
jo
mov
imul
mov
inc
mov
mov
inc
jbe
lret
das
cmp
jb
add
out
or
rcrl
rorl
shlb
mov
and
add
test
cmpsb
out
popa
sete
hlt
sub
jl
mov
pop
dec
push
cmp
mov
mov
pop
xor
mov
popa
inc
adc
cmc
sub
dec
addr16
push
push
and
add
je
andl
aas
data16
add
cmp
rol
mov
mov
mov
jo
jl
sub
pop
push
mov
ret
jae
cmpsb
add
aas
mov
scas
movsb
mov
jns
cmp
xchg
rcll
je
cmp
xchg
push
fwait
dec
or
adc
sub
sbb
dec
push
out
push
cltd
mov
sti
xor
dec
rcrb
int3
shl
sbb
cmp
loopne
mov
lahf
fwait
cmp
mov
insb
dec
repnz
leave
movsl
test
jbe
into
xor
inc
jmp
jb
and
sbbb
clc
inc
sub
loopne
aam
inc
pop
xchg
ret
fs
hlt
mov
rorl
push
scas
jne
xchg
xchg
leave
filds
and
mov
daa
je
aam
sub
mov
cld
cmp
cmc
mov
pop
pop
pop
jmp
fmulp
ret
arpl
or
punpcklbw
outsl
nop
sub
lock
loop
repz
test
or
mov
mov
pop
xor
mov
push
out
pop
add
call
xor
shrb
addb
aaa
rorb
pop
fincstp
and
faddl
repnz
mov
and
cmp
sbb
outsb
xchg
in
and
xchg
arpl
jae
dec
sbb
pop
test
jno
sub
adc
inc
jo
ss
jns
stc
push
gs
hlt
ret
pushf
and
mov
pusha
cwtl
pushl
jb
lods
enter
roll
pop
push
sbb
es
add
je
add
stos
mov
push
ret
lret
testb
rol
mov
mov
rcr
adc
mov
dec
add
in
mov
add
fidivrs
insl
push
sub
jmp
cld
fstps
enter
iret
add
mov
lods
xor
ret
ficomps
adc
in
add
fs
fcmovne
pusha
ja
fsubl
mov
cmp
xchg
jbe
jne
insb
xchg
mov
mov
mov
xchg
or
mov
add
cmp
push
mov
pop
in
pop
mov
xor
pop
add
call
arpl
cmc
sahf
mov
add
rolb
xor
sbb
repnz
pop
call
popa
or
or
mov
inc
jb
inc
sub
insb
loope
pusha
loopne
xor
mov
and
pop
or
cmc
fnstenv
subl
xor
inc
pop
or
xor
cmpsb
leave
or
mov
mov
ret
scas
or
mov
sub
ss
sahf
inc
xor
and
ror
sbbl
ljmp
dec
mov
xor
sbb
into
ficoms
pusha
fnsave
xchg
jo
xor
std
jmp
sbb
dec
fwait
jns
fwait
pop
pop
mov
sub
out
fs
nop
out
xchg
add
xor
push
mov
push
jmp
mov
lcall
je
aad
imul
cltd
and
inc
aad
pushf
inc
hlt
or
dec
add
stc
fmuls
loope
ficompl
aaa
lahf
push
adc
fcoms
add
mov
pop
in
mov
sbb
gs
outsl
aaa
cmpsl
fists
ret
mov
btc
lret
adc
xor
outsl
ficomps
fxch
push
inc
imul
lea
loope
div
mov
push
ss
sbb
and
or
cwtl
jbe
sub
pop
mov
andl
jl
out
mov
dec
stos
push
sbb
xchg
mov
and
xchg
dec
out
icebp
hlt
pop
ret
adc
daa
mov
sar
movsb
jo
sarb
dec
test
adc
mov
mov
and
vcvtss2si
push
sub
jne
mov
mov
addr16
shlb
daa
mov
add
push
pop
int3
xchg
sarb
push
mov
addl
movsb
and
inc
xchg
iret
jb
dec
cmc
mov
movsl
fisubs
xchg
ds
adc
push
mov
add
cmp
arpl
scas
mov
aas
mov
mov
cmp
inc
pop
je
pop
inc
jl
and
jb
mov
cli
dec
jle
rorl
xchg
jns
movsb
sub
orl
in
adc
int3
lcall
cltd
push
and
or
or
xchg
xchg
data16
das
mov
adc
sub
add
ret
in
sti
mov
xor
jb
sbb
xor
shlb
push
dec
rorl
mov
test
popf
pop
insb
js
cmp
ss
adc
cmp
mulb
test
push
pop
adc
mov
sti
xor
pushf
or
cwtl
dec
xchg
sub
testl
dec
lea
push
mov
adc
or
test
dec
pop
sarb
fwait
out
dec
lds
lret
scas
fwait
orb
cmpsb
stos
pop
outsb
and
popa
or
aad
pushf
xchg
mov
xchg
xchg
pop
loopne
js
out
push
mov
in
mov
movsl
fists
stos
or
iret
call
cmp
pop
and
xor
inc
sbbb
push
ret
fiadds
add
cmpl
mov
setg
inc
push
clc
in
sub
xchg
jb
mov
and
mov
sqrtps
clc
pop
sub
repz
add
and
push
sub
sbb
mov
mov
add
lods
stos
ja
cmc
sarl
out
aam
fwait
insb
decl
cwtl
cmpsb
mov
xor
push
mov
popa
rclb
mov
ja
mov
add
imul
cmpsl
fisubrl
outsb
stc
cmc
jne
xchg
decl
jecxz
cmpsb
xchg
mov
sbb
pop
sahf
and
mov
mov
mov
test
dec
xor
idiv
jg
xchg
adc
das
sbb
ss
sub
repz
sub
dec
and
sub
lcall
lea
and
push
and
hlt
mov
sbb
sub
push
dec
xor
jb
sbbb
cmc
xchg
dec
add
clc
pop
xor
int
xor
jmp
dec
orl
add
xchg
sbb
mov
dec
xchg
add
pop
mulb
and
mov
movsb
mov
arpl
pop
inc
repz
sbb
imul
sub
adc
popa
cld
out
jg
das
dec
xor
or
inc
pop
sbb
cwtl
adc
add
scas
jge
in
call
xchg
cltd
mov
lea
mov
adc
pop
das
mov
pop
insl
push
cltd
xchg
and
xchg
push
inc
leave
test
jl
adc
scas
adc
xchg
xor
ja
push
lret
dec
out
sbb
or
test
fwait
test
stc
js
imul
lret
and
sahf
js
jnp
insl
mov
mov
in
int3
adc
bound
repnz
fdivrs
inc
cmpsl
or
cwtl
out
jne
mov
cld
sub
or
outsl
mov
sub
add
std
js
in
xor
inc
test
sarl
mov
jo
cmp
and
xchg
push
or
pop
sub
mov
mov
sahf
push
or
iret
imul
sbb
mov
pop
ljmp
sub
scas
and
mov
sbb
or
ret
neg
roll
mov
pop
dec
jnp
pop
enter
lcall
jmp
push
out
mov
and
popa
jl
adc
stos
pop
sti
pop
loopne
sub
cmp
aaa
shll
bound
sbb
xor
pop
mov
push
or
sbb
arpl
pop
hlt
jmp
or
mov
push
ja
ffreep
aad
adc
sub
adc
mov
inc
je
add
fildll
fs
imul
push
aaa
push
sbb
mov
and
dec
inc
adc
jp
mov
push
sbb
jl
ds
push
xorl
adc
nop
in
iret
xchg
pop
lret
aad
lahf
inc
out
hlt
test
jge
pop
cmp
lcall
loop
loope
lcall
add
xchg
sbb
hlt
xchg
or
sub
xor
jns
je
dec
dec
cmpb
sbb
in
fs
movsb
clc
mov
push
scas
mov
pop
in
cs
cli
pop
cltd
dec
aam
lock
cmp
loope
and
outsb
popf
out
pop
lret
add
cs
and
out
addb
cmp
shr
stos
pop
sbb
mov
repz
hlt
outsb
pop
adc
into
decb
push
movsb
push
test
movsb
pop
or
ja
sahf
leave
flds
inc
push
shlb
mov
lock
mov
test
gs
jns
cltd
push
or
pop
test
stos
lret
lcall
mov
mov
ficompl
test
xchg
lret
sahf
and
ljmp
pop
rcll
mov
pop
nopl
repnz
dec
or
add
mov
out
in
imul
scas
arpl
mov
inc
std
fistps
sbb
inc
adc
cmp
js,pt
out
lock
xchg
mov
in
and
mov
jmp
mov
cwtl
testl
mov
pop
iret
mov
cmp
outsb
mov
sbb
jmp
push
aaa
mov
xor
std
fs
jnp
pop
mov
out
sbb
in
sbb
jae
lcall
jno
sub
in
std
mov
jo
pop
pop
push
loopne
fdivs
pop
sub
insb
push
dec
les
inc
imul
push
mov
dec
ljmp
add
or
sub
scas
xchg
lret
mov
test
xorl
jb
cmpsb
std
mov
pop
jae
aam
hlt
std
sbb
push
daa
adc
lcall
or
sub
test
mov
xor
ror
mov
pop
pop
mov
imul
cli
push
jp
lret
xchg
iret
mov
jle
mov
add
xor
lcall
mov
inc
aam
notl
insb
mov
call
sbb
jge
ja
dec
in
mov
adc
sbb
xchg
cmc
test
lret
in
pop
inc
ret
and
repnz
xlat
xchg
movsb
and
subb
mov
mov
out
andb
inc
loope
cmc
mov
inc
xor
lret
sbb
dec
mov
call
out
outsl
pop
cmpsl
cmp
jp
scas
insl
jae
push
inc
push
fmull
inc
arpl
add
loope
push
fimull
test
pop
shl
punpckhdq
inc
movsb
cs
inc
xor
cld
xor
mov
sub
std
aaa
push
repnz
mov
mov
int3
jp
jp
daa
or
xor
in
clc
and
mov
bound
data16
aam
in
adc
int
push
push
mov
pop
xor
push
loop
push
jmp
pop
xor
mov
fucomip
in
sub
push
mov
push
and
mov
mov
mov
cmp
nop
loopne
jg
in
jecxz
pop
inc
stc
and
int3
jl
inc
jnp
dec
fsub
jbe
ss
xor
into
rcl
and
push
sub
xchg
pop
popw
pop
jne
js
xor
sbb
push
add
push
pop
or
imul
pop
stos
add
ss
js
mov
dec
call
movsb
adc
insl
xchg
xor
mov
mov
jp
mov
out
jbe
outsb
aam
xchg
hlt
and
int3
test
lods
xchg
mov
data16
in
push
test
adc
mov
cmp
sub
mov
lahf
insl
sub
out
dec
jo
xor
ja
mov
lods
fcmovbe
inc
hlt
cmpsb
jno
sub
fdivl
xchg
lds
sub
cltd
push
dec
lea
testb
faddp
nop
push
outsl
fstpl
clc
xchg
addl
pop
mov
ss
aad
mov
adc
adc
mov
rorl
insb
xchg
dec
pop
sub
bt
gs
add
cmpsl
pop
cmc
inc
loop
ss
insl
stos
das
push
inc
mov
pop
mov
out
rolb
hlt
subl
gs
movsb
scas
addr16
mov
xchg
cmc
mov
and
test
sbb
or
push
out
roll
aam
ret
xchg
cmpsl
mov
aaa
jmp
nop
cmp
popf
iret
adc
imul
aas
cmpb
pusha
lods
stos
push
cmpb
js
xor
into
out
inc
in
jne
xlat
ret
add
add
ret
js
in
pop
mov
ljmp
orb
jae
push
push
dec
nop
ret
mov
or
cmp
cltd
ds
xchg
leave
lahf
cmp
xor
or
mov
mov
in
cmp
dec
cmp
and
bound
std
lahf
mov
les
cmpb
es
test
xchg
fsts
add
mov
les
add
cmc
dec
cmpsb
or
cmpsb
cmp
sub
push
out
push
pop
aad
outsb
mov
sub
cmp
cs
cmp
loop
xchg
sub
mov
xchg
int
fstpt
jecxz
xor
mov
movsb
and
fs
or
mov
adc
sti
jp
enter
iret
icebp
add
stc
call
shrl
repz
adc
inc
dec
inc
adc
out
add
subb
ja
lret
push
ss
jmp
out
jge
ret
mov
ljmp
pop
cltd
ret
in
cmpsl
dec
jae
push
rcrl
shlb
add
repz
xchg
add
push
out
fwait
mov
and
mov
mov
jle
sbb
mov
sub
lret
test
cmp
hlt
push
pminsw
and
mov
popa
in
call
inc
xchg
and
cmp
mov
stos
xor
iret
add
repnz
lods
xor
fists
and
mov
cmp
cld
add
pop
aam
sub
dec
pop
lcall
mov
dec
int3
imul
clc
xor
jne
sub
pop
movd
and
jns
mov
rclb
push
rep
pop
xor
sub
dec
jbe
cmp
scas
add
sbb
cltd
leave
add
inc
ljmp
jl
jecxz
and
dec
sbb
sbb
pop
push
and
cmp
outsl
movsb
lds
mov
test
inc
mov
xor
lahf
movsl
jb
pusha
gs
dec
cmpsl
mov
pmuludq
mov
inc
jns
popf
inc
inc
xchg
jecxz
scas
pushf
xchg
adc
fisttps
push
jae
adc
and
jne
or
pop
out
imul
mov
xor
test
sahf
mov
push
cltd
es
test
pop
jecxz
sub
arpl
sub
pop
test
pop
pop
fiadds
sbb
jmp
inc
mov
sub
call
add
bound
xchg
inc
imul
inc
fcomp
jne
cmp
xor
jg
lock
lcall
pop
imul
es
and
lcall
jmp
xchg
xchg
nop
fistpl
aam
pop
push
xor
sub
mov
or
sbb
outsb
push
xchg
test
cmpsl
jno
ds
fstl
sbb
imul
leave
pop
add
jb
lahf
mov
fsub
pushl
xchg
popa
cmpsb
mov
jle
add
sbb
inc
test
xchg
ds
rcrb
pusha
mov
cwtl
sub
les
mov
je
cmpsb
sbb
xchg
push
add
clc
and
jecxz
cmc
test
rcrb
push
xchg
add
leave
jl
jge
in
adc
jns
mov
fimuls
or
pop
or
cmc
fisubs
out
jae
fildl
mov
test
sub
js
and
push
lret
jno
dec
pop
repz
ficomps
fsubs
sbb
in
mov
rcl
cwtl
or
mov
and
loopne
adc
dec
sbb
lret
int3
adc
movsb
negb
subb
cs
jbe
sub
cmp
add
sbb
data16
in
push
fwait
cli
cwtl
into
push
mov
fcmovnu
hlt
inc
xchg
divl
pop
or
popa
or
xchg
lods
pop
int
xchg
popf
inc
lret
inc
cwtl
fisttpll
mov
xor
jge
stc
xchg
sub
cmpsb
mul
ret
lea
xchg
test
jecxz
cmpsb
rcrb
add
sti
pop
push
lahf
subl
xchg
shll
aaa
iret
push
push
mov
idivb
daa
subb
gs
xchg
sbb
jge
or
inc
shr
in
leave
ss
in
adc
enter
ljmp
mov
mov
push
fnsave
and
std
and
jno
push
mov
or
jecxz
loop
sub
fsubrl
jb
dec
jge
stc
ficompl
push
sub
mov
add
or
mov
imul
jle
pop
into
inc
nop
sbb
inc
in
mov
mov
sub
sub
lods
xchg
stc
jbe
std
and
cmc
adc
lods
inc
lret
stos
pop
or
cli
xor
lret
out
mov
idivl
adc
inc
test
dec
lret
push
push
popf
sub
adc
bswap
adc
outsl
pop
jb
into
shr
aad
pop
jnp
sbb
loope
xlat
sbb
and
rclb
pop
bound
in
sub
mov
push
outsl
xchg
aas
pop
enter
sbb
pop
mov
xor
leave
pop
inc
frstor
jb
add
add
and
xchg
dec
in
cmp
inc
push
ret
push
stos
adc
adc
scas
dec
fldenv
test
cs
je
jp
jno
aam
scas
pop
and
jmp
inc
push
xchg
or
int3
fwait
add
jecxz
int
pop
xchg
xchg
xchg
cltd
dec
out
mov
push
ret
jb
mov
arpl
faddl
adc
inc
mov
pusha
mov
adc
ss
bound
out
pop
inc
shl
fxch
xchg
cmp
pop
mov
or
repnz
xchg
loopne,pn
aad
push
cwtl
loop
push
inc
out
stos
mov
frstor
in
push
nop
jp
out
mov
js
xor
test
ja
mov
out
lret
test
call
pop
rcrl
and
cltd
and
std
mov
xor
loop
insb
loope
std
jmp
push
xor
or
push
dec
dec
ss
mov
in
es
push
loopne
enter
ds
adcl
adc
enter
outsl
jecxz
inc
je
jge
dec
pop
sbb
inc
into
iret
loop
jmp
cld
push
jg
jno
stos
push
pop
jg
and
inc
and
repnz
pop
cmp
mov
in
stc
js
mov
insb
sbb
xorl
jmp
xchg
scas
push
mov
xchg
fs
adc
mov
sbb
int
mov
push
jne
sub
dec
loop
shrb
pop
xchg
dec
mov
pop
dec
fwait
and
sbb
jl
dec
pop
jae
jnp
mov
fcoml
push
mov
fldl
push
and
mov
rolb
cli
cmc
push
push
push
xor
shrl
nop
add
psadbw
xor
dec
mov
lods
rclb
sub
dec
movsl
jp
aaa
aam
mov
cwtl
xor
mov
aam
inc
sub
pop
xchg
xor
push
popf
add
sub
ss
jle
cltd
pop
mov
pushl
sbb
inc
mov
outsb
jecxz
push
dec
add
jecxz
test
ljmp
push
xor
xchg
pushf
push
pop
fsubs
icebp
std
repnz
sbb
push
je
xor
adc
stos
dec
ja
push
ret
mov
sarb
pop
and
mov
push
pop
mov
stc
adc
or
mov
xchg
fstpt
push
dec
mov
push
fldcw
cmp
divb
mov
xchg
pop
cmp
out
pop
jecxz
fistpll
dec
jge
mov
jns
daa
sbb
pop
xchg
jns
mov
faddl
dec
mov
cmp
jmp
das
das
aam
xlat
orb
sbb
pop
in
out
test
fistpl
push
leave
mov
push
lret
xchg
loope
frstor
cmp
lret
out
cwtl
sahf
mov
cld
lret
imull
cmp
adc
or
int
movsb
arpl
imull
in
cmp
or
lods
mov
adc
mov
pop
lcall
pop
test
sbb
jno
or
out
push
ret
cs
fnstsw
ror
daa
std
test
mov
jle
jge
insb
mov
inc
ret
adc
rolb
inc
push
repnz
shll
mov
ja
rcll
and
mov
adcb
and
mov
leave
adc
inc
xor
or
pop
xor
lods
sub
cmp
addr16
or
int
xchg
int3
or
lret
cmp
aam
cmp
data16
inc
pop
shll
adc
push
or
mov
mov
punpckhbw
mov
rolb
test
pop
dec
notl
sbb
mov
pop
in
add
lds
or
xor
xchg
test
rcr
rcr
jecxz
mov
push
dec
jbe
dec
mov
dec
pop
sti
jns
jns
mov
push
dec
lahf
int3
sbb
sub
inc
pop
sub
repz
testb
jl
int
pusha
mov
jb
mov
and
ljmp
ds
mov
fldt
lea
pop
pop
lret
mov
pop
inc
add
mulb
into
dec
ljmp
adc
adc
fdivr
xchg
std
mov
cmp
or
mov
and
jg
pop
cmc
push
in
out
lret
adc
dec
pop
xchg
fs
sahf
ret
xchg
scas
push
adc
jg
jne
dec
loope
and
dec
out
add
cmp
movsl
cmp
jne,pn
xor
aas
stc
mov
cmp
add
pushf
jle
test
or
cmp
pop
xor
mov
lret
sbb
sub
inc
fistps
sub
xchg
ret
add
push
jne
and
ss
les
cld
popf
pop
mov
or
imul
sbb
int
cmpsb
lea
cmpl
out
cltd
pop
pop
dec
jnp
std
jp
lods
out
movsl
pop
mov
or
test
inc
int
gs
fs
xor
inc
lock
dec
jo
idiv
out
mov
daa
pop
jl
enter
mov
into
mov
ret
mov
sbbb
sbb
lahf
mov
push
stc
inc
jbe
popf
mov
enter
rorb
mov
test
aas
pop
das
dec
cltd
dec
mov
push
stos
push
push
in
jp
data16
jecxz
mov
mov
mov
out
pop
or
dec
mov
movsb
xor
push
pop
ja
mov
mov
pop
add
mov
jg
or
stos
call
mov
incb
dec
ret
iret
loopne
test
test
or
mov
and
mov
mov
xchg
cli
outsl
and
mov
cmp
xchg
pop
mov
ror
outsl
roll
mov
xorl
sub
inc
hlt
stos
pop
std
loopne
jge
jge
repz
pop
js
push
out
ret
mov
roll
jbe
push
mov
add
inc
inc
jae
inc
notl
adc
jmp
pop
fistl
leave
in
sti
adc
sbb
stos
fisubrl
rcll
aaa
jno
jl
fsubl
push
and
jg
sub
xor
popf
and
ret
lea
mov
loop
inc
cld
cmpsb
rorl
sub
ss
pop
fwait
lret
sbb
fldcw
sub
pop
shrb
call
stos
push
stos
pop
mov
pop
test
dec
cs
loope
lret
arpl
adc
or
sarb
dec
fbld
mov
and
imul
cmp
mov
cwtl
lahf
sbb
aaa
pop
aad
test
inc
aaa
mov
inc
and
mov
sub
aaa
push
or
das
mov
mov
js
sbb
out
mov
sbb
dec
add
inc
ret
jo
das
cmpsb
dec
outsb
mov
movsb
push
lock
mov
ja
pop
jne
adc
jno
pop
bnd
testl
lock
cmpsl
jmp
orb
sub
shlb
sub
inc
sbb
xchg
mov
cmp
imul
pop
inc
aas
pop
or
mov
inc
shl
pop
fdivrp
xorl
in
ret
xchg
mov
or
insb
mov
adc
push
add
data16
fdivs
arpl
leave
out
add
std
bound
cmp
or
out
clc
sarb
inc
dec
addr16
into
frstor
mov
lds
hlt
mov
adc
or
in
test
in
push
or
stos
mov
in
fstpl
fsubr
jle
dec
mov
jns
aad
and
rcll
adc
fnstcw
test
push
loop
mov
leave
ljmp
call
mov
sbb
or
dec
testl
cmp
ja
cmp
test
call
pop
mov
pusha
rcrb
inc
rcll
stos
subl
flds
cwtl
jno
dec
pop
sub
or
scas
and
pop
mov
rol
adc
lods
jne
arpl
push
ret
mov
arpl
inc
scas
add
cwtl
mov
stc
mov
mov
xlat
or
add
ret
inc
pushf
aas
xchg
fldcw
cmp
cli
out
out
xchg
mov
inc
inc
das
setnp
loope
out
mov
mov
lock
insl
add
sub
call
mov
xor
push
ss
push
cmc
mov
sub
and
ja
lret
hlt
jp
or
mov
rcrl
cmp
scas
sub
push
xor
mov
adcb
or
cmp
leave
mov
loop
jno
mov
das
das
shlb
cltd
and
lea
cmc
xchg
xor
push
pop
cmp
cmpsl
mov
sub
push
into
maxps
enter
sbb
xchg
xor
pop
dec
rcll
push
xor
jp
mov
adc
loope
gs
jae
repnz
je
imul
imul
cmp
mov
push
sbb
inc
addr16
fs
sub
pushf
jecxz
repz
xchg
scas
lret
mov
daa
sbb
mov
add
cltd
mov
rorl
call
popa
push
test
lret
out
idivl
pushf
jge
sti
mov
or
fistpl
shll
push
test
into
sahf
cmpsb
add
xor
fwait
test
xchg
out
out
sub
repnz
divb
shrl
push
inc
xlat
mov
xchg
cmpsl
sbb
mov
ja
aaa
add
in
stc
pushl
shl
add
jb
lcall
jae
pop
insl
xchg
xchg
or
lret
loop
jl
push
jp
jl
inc
out
jecxz
bnd
lahf
fists
sbb
test
outsl
mov
sbb
mov
nop
jns
inc
in
sbb
iret
imul
loop
dec
into
imul
sbb
out
rorl
in
ja
cmc
clc
pop
cli
cmp
mov
aas
stc
mov
mov
roll
mov
rorl
outsl
jo
mov
jns
arpl
pop
sub
into
push
sbb
test
ja
clc
cmp
shll
push
pop
pop
xor
lret
cmp
push
roll
pop
sub
jge
mov
inc
sub
out
jp
lret
push
orl
mov
punpcklwd
or
cli
jle
aad
mov
inc
mov
push
aas
mov
shrl
js
loop
mov
sbb
inc
lcall
test
ud1
aas
in
lods
mov
cmp
adc
xchg
test
les
incb
repnz
not
repz
fimuls
mov
mov
lcall
cmp
mov
xchg
ret
xchg
jmp
fcompl
dec
stos
into
pop
and
test
pop
out
pop
out
cld
pop
daa
iret
mov
arpl
sbb
jecxz
xchg
mov
cmp
movsl
nop
cmpsb
in
imul
jecxz
fdivrs
flds
pop
jb
repz
enter
jl
dec
insb
shrb
enter
xor
sbbb
rcr
cmpsb
jbe
mov
cmp
gs
sti
test
in
push
cmpsl
testl
cltd
das
xchg
cmc
insl
adc
mov
mov
sub
mov
jmp
pop
cli
xor
xor
aas
call
fisttpll
inc
shll
xchg
repz
mov
or
mov
popa
mov
mov
fs
cmp
jns
adc
or
movsb
stos
ja
xchg
jne
jecxz
mov
xchg
movsl
xchg
shlb
pop
pusha
sub
xchg
dec
dec
mov
xor
lea
iret
adc
inc
out
mov
int
or
out
or
inc
cmpsl
push
repz
sub
stos
test
jp
adc
push
movsl
pusha
cld
rcrb
jb
addb
pop
out
jp
fisubs
aaa
das
pop
enter
pop
add
sub
data16
jns
fldenv
inc
nop
jl
loopne
sti
aaa
xchg
mov
mov
xor
int
mov
shrb
repnz
sbb
mov
xchg
adc
fcomps
pop
sbb
or
mov
insb
inc
xchg
add
lahf
dec
imul
mov
orl
lret
inc
and
in
scas
lods
roll
das
inc
xchg
leave
cmp
das
popl
sbb
xor
lds
mov
out
fidivrs
mov
fwait
repz
sbb
mov
imul
adc
ds
jle
popf
pop
insb
cmp
push
ja
popf
mov
fcmovnbe
sbb
clc
fucomi
repnz
insb
mov
mov
sarl
sub
cld
jne
mov
xor
dec
ss
subb
ss
repz
cmp
lahf
and
jmp
in
stos
clc
insb
push
subb
xchg
push
enter
push
dec
movsl
mov
xchg
mov
mov
insb
jecxz
xchg
lods
pop
adc
sbbl
xor
sahf
jno
jmp
sbb
rcll
fdivrp
popf
mov
insb
fwait
and
cmp
gs
shll
and
dec
sbb
insb
ret
sub
aaa
aas
jno
xor
orb
mov
add
mov
scas
sub
xor
inc
fidivrl
insb
cmc
popf
sti
popa
loope
andl
in
push
jno
ss
or
mov
mov
adc
sbb
je
es
pop
inc
xor
xchg
and
xchg
pop
faddl
stos
jecxz
dec
insb
mov
or
ja
rorl
jmp
sbb
adc
push
or
xchg
imulb
lea
sub
sbb
pushf
dec
repz
hlt
add
stos
jne
lcall
mov
jmp
dec
subb
sbb
add
orb
xchg
pop
cmc
rolb
or
ds
push
lahf
fstpt
mov
fdivs
stc
fdivl
cmp
mov
leave
pop
stos
inc
sbb
movsb
sti
cmp
or
push
ret
popa
push
data16
inc
stos
lock
nop
sub
jl
int3
shrl
mov
mov
adc
mov
pop
cld
and
jno
xor
fs
sbb
std
mov
xchg
movsb
inc
test
xor
dec
jae
mov
lds
aas
aam
fisubrs
sub
and
mov
mov
and
mov
test
jle
jbe
and
jb
xor
dec
test
popa
xor
inc
jbe
jge
mov
rol
sbb
sub
aam
push
rcrb
les
dec
add
cltd
out
insl
inc
imul
adc
pop
inc
and
arpl
int3
mov
add
xchg
in
je
mov
xor
mov
imul
imul
jae
popf
flds
xor
sahf
shlb
or
ss
inc
sub
js
push
adc
loope
movl
insl
cmp
xchg
ja
lahf
xlat
enter
pop
jmp
xlat
inc
inc
jp
ret
shrb
stos
and
lcall
adc
out
xchg
addr16
lret
imul
mov
mov
mov
add
out
push
cmp
lea
in
push
push
and
mov
ds
adc
sub
das
sub
cmp
stos
dec
jge
and
cmp
mov
pop
in
adc
inc
cmp
adc
dec
pushf
add
iret
nop
mov
aaa
xor
out
push
jecxz
test
sbb
fdivrp
outsl
push
loop
mov
imul
lret
xchg
loopne
in
movsb
clc
push
xlat
pop
in
test
mov
leave
stc
lods
mov
push
subb
or
or
scas
push
lock
dec
pushf
test
xor
test
movsb
mov
mov
cmpsb
jmp
call
data16
shrb
adc
sahf
mov
inc
incl
cmp
fadd
faddl
push
cli
mov
or
cmp
out
adc
mov
clc
mov
xor
filds
jb
lret
outsb
loopne
lock
jecxz
cwtl
push
sub
shll
and
in
fs
push
bound
imul
loope
add
fdivrs
and
les
add
icebp
outsb
stos
lret
cltd
repz
mov
rcll
dec
lock
sub
push
cmp
add
in
pusha
jno
sbb
rol
cli
jb
in
dec
loopne
sti
push
stos
mov
int3
and
mov
fimuls
sbb
aad
sbb
mov
shrl
into
sbb
push
fs
jg
lahf
sbb
push
out
sub
std
mov
inc
cmp
loope
ret
cmp
and
xchg
push
pop
sub
call
and
xchg
push
loope
jnp
fs
aad
cld
and
cmpsl
jg
daa
jnp
cmpsb
dec
push
xchg
dec
dec
and
xor
sbb
data16
aad
add
dec
cld
dec
addps
lahf
testl
andb
jno
repz
mov
mov
sahf
xchg
es
sbb
lea
add
je
xchg
inc
ret
mov
jecxz
in
push
dec
jmp
outsl
mov
pop
push
xor
mov
sbb
jne
insl
jb
fs
xchg
xor
cmp
adc
and
ds
jb
and
loope
arpl
inc
cli
cmp
adc
rcl
jae
inc
leave
jp
les
fs
xor
cmc
movsl
rcrl
int
sahf
arpl
aam
fsubs
add
idivl
test
sub
jle
movsb
enter
xor
mov
shrl
ds
inc
shr
shl
scas
jecxz
adc
or
dec
outsb
into
mov
mov
pop
arpl
sub
mov
js
leave
dec
jge
pop
push
mov
jmp
add
fisttpll
dec
mov
pop
sbb
arpl
out
ret
and
fwait
test
sub
and
or
add
mov
repnz
rorb
fildl
jecxz
dec
pop
das
cmp
mov
sbb
xlat
jb
cmpsb
adc
pop
xorb
jo
cmpsl
and
pop
fwait
or
push
movsl
mov
scas
jle
adc
lock
in
add
dec
adc
adc
repnz
repnz
inc
fldcw
pusha
sbb
and
in
nop
lods
sbb
pop
lcall
scas
dec
cmpsb
adc
cmp
push
mov
call
xchg
dec
and
jle
dec
pop
inc
movsb
add
sbb
test
xchg
stc
cltd
xchg
sbb
mov
cmpl
inc
jecxz
lahf
iret
cmpsl
mov
pop
lret
mov
cmpsl
into
das
popf
inc
push
dec
dec
cs
push
js
pop
dec
clc
shlb
repnz
sbb
scas
jmp
jb
inc
sub
adcb
pop
xchg
rclb
out
repnz
scas
sbb
jp
xchg
push
push
std
std
repz
adcl
sub
lds
test
and
mov
decb
or
cmpb
push
cwtl
cs
icebp
adc
inc
dec
jge
add
jae
shrl
xlat
cmp
xor
or
outsb
test
sti
enter
cmpb
stc
les
fwait
aaa
or
xor
shrl
cmp
dec
pusha
pop
jno
outsb
pop
cmp
push
cmpsl
ret
jp
add
div
scas
jns
mov
mov
rclb
cld
cwtl
xor
sbb
cmp
pop
xchg
pusha
in
shll
shrl
or
jl
sub
sbbb
out
shrl
popa
pop
pop
inc
jmp
or
sub
jo
push
mov
sbb
cmp
lahf
movsb
push
cmp
jns
leave
jno
inc
mov
sbb
cwtl
stos
pusha
in
jne
mov
repnz
std
jl
and
out
push
sub
mov
test
test
rcrl
push
int
test
push
enter
xlat
or
setns
adc
bound
jnp
test
sahf
sbb
adc
or
test
adc
xchg
pop
insl
push
mov
push
aaa
sahf
mov
arpl
fcom
into
ret
xchg
pop
leave
ja
xchg
dec
fimuls
out
dec
and
pusha
enter
int
cmp
fisubrl
call
das
out
adc
push
cltd
mov
jnp
scas
stos
icebp
clc
cmp
sahf
xor
ljmp
mov
popa
ja
mov
andb
jge
pop
add
hlt
hlt
adc
pop
pusha
enter
imul
push
sahf
xchg
in
ret
stos
in
bound
inc
sub
pop
and
sbb
pushf
lret
sub
std
push
and
sub
subl
lods
sbb
pop
loope
jnp
sub
mov
xor
daa
rol
outsb
pusha
pop
or
fistl
enter
mov
movl
cli
push
dec
jno
imul
test
outsb
iret
repz
fs
movsb
scas
fcmovbe
inc
mov
nop
test
roll
xchg
mov
dec
data16
mov
ss
loop
and
movsb
lock
out
mov
sti
cmp
cmp
mov
lahf
and
mull
sub
jb,pt
movmskps
cmp
mov
pop
xchg
rcrl
or
dec
or
movsl
xchg
test
ds
add
cld
lock
repz
mov
popa
mov
inc
xchg
sub
jb
jbe
in
pop
daa
subb
add
fs
ret
lret
aas
dec
into
dec
sbb
jle
fwait
loop
daa
jle
out
cmp
les
sbb
aad
xchg
adc
push
aas
sbb
cmp
rorl
testl
or
je
inc
push
xor
xchg
cmp
outsl
stc
xchg
ss
lods
push
aam
adc
add
repz
addl
add
pop
cmp
mov
mov
dec
xchg
stc
inc
sub
sbb
push
in
popf
in
in
ret
ss
sbb
ret
in
ret
and
out
inc
adc
mov
mov
fiaddl
aaa
lods
jg
repnz
add
jno
mov
pop
mov
or
loopne
lds
shlb
lahf
mov
rorb
in
jl
jne
ds
xchg
mov
jns
bound
divb
mov
fwait
add
push
addr16
mov
jbe
lret
test
pop
shlb
sub
out
aaa
addr16
inc
outsb
icebp
xchg
clc
dec
and
cmp
xorb
lds
outsb
shrl
loope
in
ret
mov
pop
fmuls
jmp
jno
or
add
rep
add
stc
mov
nop
out
nop
sahf
push
fimull
movsl
out
inc
imul
push
dec
dec
pushf
rcrb
mov
mov
push
jae
insb
push
int3
and
stc
jp
pusha
mov
push
mov
sbb
or
cmc
pop
mov
push
in
adc
fsubp
ret
ljmp
add
pop
push
rorl
test
ret
pop
test
sub
jne
movsl
cmp
das
popa
push
push
pop
xchg
xor
or
daa
movsb
ljmp
imul
mov
mov
lcall
cmp
outsb
cltd
add
push
pop
xor
pop
shrl
in
mov
jb
push
jl
shl
imul
scas
sbb
push
sub
andb
lea
inc
out
and
loopne
gs
jae
push
and
dec
mull
scas
out
pop
mov
pop
or
and
out
std
push
sahf
icebp
das
sbb
sbb
dec
cmp
orb
mov
decb
ljmp
outsl
or
sbb
clc
or
test
call
cwtl
mov
cmc
mov
mov
data16
push
stos
jnp
movsl
es
jle
xchg
xlat
mov
pusha
mov
scas
icebp
xor
mov
in
in
mov
jp
insl
out
lret
shll
inc
and
add
aam
pop
out
or
cmpsb
mov
int3
fnsave
cmp
out
jmp
mov
sub
movsb
add
lret
cmp
jnp
xor
ds
dec
aad
jle
repz
fcoms
addb
loope
xchg
or
xchg
mov
inc
or
push
daa
inc
adc
and
or
sub
mov
add
push
test
or
ja
adc
fdivr
mov
cltd
icebp
mov
sbb
call
mov
inc
sub
ret
mov
adc
ret
mov
xchg
lea
imul
mov
mov
ret
mov
mov
ret
jmp
stc
mov
jne
jg
ja
push
mov
outsl
cmp
subb
fidivrl
pushf
cmpsl
xchg
sub
or
lcall
out
arpl
dec
lods
mov
or
sub
movsl
mov
sub
mov
iret
repz
popa
lahf
pop
xchg
lret
pop
xor
sbbb
or
int
pop
into
mov
push
add
fwait
mov
mov
adc
cwtl
js
pushf
push
push
xchg
jge
and
pop
scas
fsubs
loop
ss
or
and
cmpsb
mov
pop
mov
shrl
rorl
lods
aas
cltd
bound
cmp
rcr
or
dec
mov
push
insl
sarl
daa
sbb
adc
insb
push
mov
testl
outsb
test
mov
xor
mov
fwait
out
enter
test
daa
cmpsl
fstp
mov
mov
or
movsb
imul
sub
pop
sub
out
mov
xchg
xchg
cmp
js
out
push
dec
hlt
adc
push
mov
xchg
mov
jecxz
mov
push
fldt
ss
xor
push
jne
cmpsl
or
mov
xor
adc
jmp
mov
cmova
js
lods
subb
add
xor
jbe
or
xchg
jns
int3
icebp
pop
mov
js
stos
shr
mov
inc
mov
lahf
pop
pop
call
fidivs
or
cmpsl
or
scas
jecxz
mov
cli
shrb
xor
fwait
and
inc
push
sbb
mov
mov
jmp
xchg
add
adc
lock
inc
or
push
jg
in
gs
into
push
inc
pop
je
stos
push
xchg
adc
push
int3
rorb
stc
icebp
arpl
jmp
jbe
pop
lret
test
test
in
sub
lock
lea
adc
sbb
je
mov
mov
or
mov
fwait
mov
jp
mov
mov
pop
leave
std
mov
les
aaa
cmp
rcl
mov
jle
sahf
out
mov
jge
leave
jno
xchg
push
pop
cmp
pop
or
mov
ds
pop
dec
pop
rcrl
jno
test
pushf
pop
jo
pop
add
hlt
test
push
out
adc
adc
dec
pusha
or
jl
pop
mov
stos
dec
ds
test
dec
jo
aam
pusha
popa
dec
cmp
mov
icebp
push
jecxz
sub
lcall
dec
dec
cld
jp
iret
imul
outsb
stos
push
adc
sub
ljmp
push
jecxz
js
daa
mulb
mov
inc
std
gs
ss
cmpl
das
and
pushl
inc
hlt
mov
fstpl
in
cmp
test
push
decb
lock
or
inc
loopne
pop
mov
mov
adc
sub
shlb
mov
leave
push
mov
cld
mov
loop
repnz
mov
adc
insb
mov
mul
jle
or
jae
cmp
lret
jne
mov
sub
aaa
out
jns
dec
xchg
lds
cmp
iret
jmp
std
out
outsb
arpl
push
dec
xchg
leave
sub
xchg
dec
pop
pop
sub
pop
mov
call
cmp
dec
ss
inc
pop
cmp
stc
das
ljmp
js
stos
push
jne
push
dec
aas
stos
jp
shll
add
jns
enter
test
xchg
lcall
popf
adc
add
jl
add
enter
pop
mov
insl
sbb
out
xchg
cs
aad
mov
mov
stc
adc
test
and
and
int
xor
dec
and
sbb
insb
add
insb
dec
mov
jmp
sahf
pop
push
imul
insb
lods
sub
xlat
subl
imul
les
and
and
and
test
cmc
push
push
mov
jnp
roll
fstpl
in
in
ja
sarl
mov
ret
and
es
xor
fnstcw
mov
inc
dec
and
jg
cli
loopne
je
lea
fcmovnb
pop
push
in
pop
or
mov
cli
lret
out
add
inc
jno
sub
cmc
imulb
jnp
out
insl
cmpsb
xor
dec
push
and
push
roll
jo
lret
xchg
int3
sub
ljmp
fisubrs
mov
fwait
and
jb
popl
loope
dec
loop
adc
xchg
dec
idivl
scas
ljmp
sbb
imul
paddusw
mov
push
adc
stc
loope
jbe
out
add
pop
xchg
imul
pop
sbb
jbe
call
lahf
test
push
push
and
das
mov
push
xlat
xchg
test
mov
scas
or
negl
lret
add
mov
mov
inc
pushfw
cli
push
mov
push
es
bnd
pushf
js
imul
jno
mov
inc
lret
jb
fldcw
fildll
fxch
inc
mov
xchg
test
or
push
pop
push
cmp
adc
push
out
or
into
jno
sbb
mov
add
mov
xchg
sbb
hlt
fildll
arpl
clc
sub
mov
sahf
fidivrl
shll
mov
fidivrl
push
mov
mov
push
es
adc
inc
popa
xchg
and
loop
adc
idiv
into
mov
jns
xchg
mov
shll
pop
mov
out
test
lcall
es
cmp
cmp
lcall
in
adcl
mov
jb
pop
mov
push
scas
xchg
cltd
dec
push
mov
rcll
aas
fmuls
sarl
mov
mov
mov
inc
cmp
dec
out
pop
jl
push
mov
lods
push
iret
insb
jl
mov
stos
dec
xchg
mov
lcall
insl
ret
pop
movsb
mov
les
rclb
aas
gs
jmp
aas
add
and
xchg
ret
sub
data16
loopne
bound
rcl
or
jmp
jmp
test
xchg
test
test
pop
and
addr16
mov
mov
inc
daa
mov
or
aas
mov
dec
aam
mov
dec
pushf
gs
jg
sbb
push
xor
dec
in
jecxz
push
movsb
xor
mov
xchg
hlt
mov
mov
out
cmpl
sbb
fdivl
dec
cmp
loope
in
jnp
inc
sbb
mov
cli
arpl
mov
icebp
out
lds
scas
sbb
pop
cmp
fbld
adc
sub
testb
repnz
xchg
incl
aaa
mov
jle
sbb
fs
xchg
loop
fsubrl
ljmp
ss
xlat
push
or
nop
iret
pop
and
imul
push
sbb
add
add
fisubrs
adc
dec
jae
xchg
add
mov
insb
hlt
xchg
inc
xor
mov
push
xorl
pop
stos
dec
cmp
xchg
mov
jno
pop
mov
cmc
xchg
adcl
adc
pusha
pop
xchg
adc
inc
mov
sub
cmpl
int
sub
mov
movsb
or
pop
pop
rolb
mov
add
mov
outsl
adc
bound
inc
push
or
bound
mov
aad
jle
adc
xor
stos
movw
add
jnp
mov
mov
push
jecxz
xor
shlb
or
in
insl
inc
out
or
andl
fldcw
std
dec
sti
sub
outsb
jecxz
mov
cmp
dec
xor
roll
fnstsw
out
jb
sti
daa
inc
inc
or
pop
nop
sti
mov
aam
inc
imul
hlt
mov
movsl
sub
jo
cmc
sub
loope
pushf
outsl
inc
lea
flds
push
xchg
out
lret
dec
push
iret
sbb
inc
cmp
sbbl
mov
mov
ds
mov
leave
in
adc
mov
adc
xor
lea
enter
cmp
out
dec
or
push
cmp
mov
fwait
paddd
clc
movsb
ds
movsb
mov
hlt
adc
push
int
xchg
mov
pop
push
movsb
and
insb
dec
push
subl
data16
add
jno
cmp
lahf
out
clc
sbb
inc
negb
mov
inc
fadds
test
sbb
mov
mov
out
loopne
je
add
loopne
icebp
ss
add
lcall
inc
adc
mov
fistl
inc
fucomp
jb
sbb
jmp
jno
fldcw
jbe
sub
pop
or
pop
jp
or
dec
push
loop
aam
mov
shl
data16
xlat
cmp
jne
pop
ss
mov
or
xchg
cmpsb
outsl
or
fsts
xchg
ret
push
mov
push
nop
jl,pt
dec
xchg
push
out
mov
and
inc
pusha
pcmpgtw
adc
xor
sub
push
inc
xor
sub
mov
lret
call
xchg
xchg
sub
pop
add
mov
sub
and
mov
incl
ficomps
idivb
lea
out
jl
in
scas
add
fstp
les
adc
jmp
or
or
cltd
icebp
pop
mov
vmovaps
xchg
data16
jge
lahf
jecxz
or
je
pop
jmp
xor
stc
push
sbb
jbe
sti
mov
pushf
jo
ja
jg
ret
lea
mov
ja
ja
fistl
inc
sti
negb
push
mov
or
xchg
and
sbb
addb
lea
ljmp
cmp
movsb
cltd
cmp
and
add
or
pop
or
in
jmp
pop
dec
fildll
add
xor
or
movsl
xor
mov
frstor
jmp
dec
sbb
lahf
lea
ja
cli
xchg
cmp
lock
stc
xchg
das
mov
in
mov
add
sarl
dec
lock
sbb
jnp
mov
ficoms
or
xor
call
inc
mov
gs
lret
ss
push
jb
xor
movsl
int3
in
cmpb
adc
xor
daa
pushl
pop
xlat
and
flds
and
dec
out
inc
push
ss
pop
push
mov
sti
subb
xchg
cmp
mov
pop
add
rcrb
mov
mov
and
jl
dec
les
loopne
lods
jno
scas
dec
xor
mov
mov
je
in
lods
aad
jno
dec
neg
inc
dec
xchg
fs
es
cs
insl
lds
cmpsb
pop
sbb
cmp
mov
das
pop
mov
insb
sub
push
std
enter
fimuls
pop
stos
mov
xor
adc
push
mov
enter
sbb
loopne
out
test
lods
outsl
cmpsb
cmpsb
mov
push
mov
xor
fdiv
fdivr
inc
pusha
test
xchg
cld
stc
push
stos
add
fwait
mov
push
pushf
rorb
dec
dec
movsb
ffree
sbbb
std
daa
das
orl
lcall
mov
jno
cld
std
push
pusha
or
jp
jns
jno
outsl
pop
dec
pop
sub
into
mov
pop
fldl
movsb
adc
movsl
dec
inc
out
mov
xchg
adc
testb
rolb
dec
in
ficoms
negb
push
xchg
inc
xchg
cwtl
jl
insl
test
daa
stos
int3
dec
mov
push
in
sub
or
into
mov
fldcw
lods
xchg
call
out
xchg
jge
cmp
cs
sbb
dec
fcoml
lea
mov
aad
xchg
rclb
push
pop
cmp
repz
addr16
addr16
mov
sbb
mov
xlat
es
lods
stc
xchg
mov
into
outsl
out
mov
outsb
inc
loop
inc
and
mov
add
arpl
cmp
xchg
das
ficoml
stc
rcll
addr16
adc
imul
out
je
cmpsb
cmpl
insl
icebp
or
test
dec
jae
mov
nop
pop
cmp
push
jge
or
dec
roll
pop
call
mov
lock
cltd
inc
leave
pop
test
xor
mov
adc
jne
inc
in
test
pushf
push
push
icebp
sbb
push
mov
imul
cld
cmc
fisubl
and
out
flds
popa
fwait
xchg
push
cld
push
and
lds
test
fsub
mov
inc
mov
mov
adc
mov
in
mov
dec
adc
and
jns
pop
mov
xor
push
sub
cltd
cltd
jno
lret
pop
push
lret
pop
mov
div
movsb
orb
mov
cmp
aad
jae
or
dec
mov
xchg
popf
fdivl
cmp
push
jbe
dec
xchg
lret
cmpb
int3
daa
pop
ljmp
jmp
fs
enter
jle
cmp
mov
sti
jbe
xchg
lret
mov
cmc
repz
sub
or
push
shll
lret
sbb
cmc
enter
fs
mov
ret
xlat
pop
push
stos
or
push
add
push
lds
subb
fs
push
sahf
push
xchg
gs
mov
adc
adc
mov
sbb
and
lret
repnz
xor
cli
dec
insl
add
fistpl
les
xor
dec
mov
inc
sbb
inc
mov
sub
shll
in
jae
push
ret
jmp
popf
add
addr16
or
daa
mov
fidivl
lea
hlt
fwait
mov
push
or
xorl
fidivrl
jp
andl
ja
ffree
or
sbb
and
and
es
xchg
movsl
push
cs
fldt
push
cwtl
out
js
push
cmp
add
push
adc
faddp
cmp
incl
mov
insb
or
subl
sbb
adc
adc
cld
dec
sbb
sbb
mov
stos
add
rolb
int3
repnz
incl
in
or
fwait
pop
inc
mov
sub
aas
ljmp
out
daa
ss
int
in
mov
xchg
xchg
iret
lcall
fistl
loop
sbb
inc
test
subl
sub
ds
hlt
lahf
inc
sbb
addr16
icebp
adc
and
mov
ja
xor
push
bound
sarl
fnstsw
jecxz
ficoml
sahf
outsl
addr16
nop
aaa
iret
xor
sub
xchg
jnp
jne
mov
imul
dec
mov
inc
and
popa
pop
sbb
aaa
add
cltd
js
fs
push
push
aaa
scas
shl
push
call
les
icebp
shl
pop
sub
push
inc
add
out
subl
std
ret
popa
out
xchg
addr16
int
cwtl
int
xchg
jo
in
lcall
das
adc
dec
fidivrs
cmp
mov
adc
ret
xchg
push
fists
dec
cmc
in
aas
xor
xchg
xor
pop
mov
inc
loop
fstpt
daa
jle
addr16
rcll
cld
push
lods
and
adc
ret
imul
sbb
push
xchg
pop
cmp
movsl
stos
jns
jne
pop
sbb
lcall
or
and
loop
or
jne
mov
pop
xchg
mov
mov
out
adc
push
lahf
mov
pop
aaa
jmp
push
into
test
hlt
rclw
xor
lahf
popa
xchg
add
sbb
stos
xchg
adc
cmpsb
pop
sbb
xchg
mov
jmp
iret
pop
pop
imul
push
in
in
jle
sti
cs
adc
jne
je
adc
or
call
mov
pusha
pop
cld
addr16
cli
fcmovnb
jb
adc
insl
cmp
mov
dec
dec
neg
or
mov
lret
sbb
or
push
mov
adc
jmp
out
or
push
mov
mov
scas
fcoms
outsl
shr
pop
adc
mov
pushf
jnp
jecxz
xchg
push
pop
pop
ja
insl
push
into
fdivrl
movsb
cld
lds
pop
and
hlt
mov
into
ret
in
xor
outsl
jmp
and
int3
adc
mov
sahf
adc
xor
mov
addl
movsl
and
lock
movsl
mov
cld
lret
jb
ja
jnp
sbbl
call
push
adc
ret
ret
or
mov
mov
aas
ss
cmpsl
mov
repz
dec
ja
push
mov
lret
aam
xchg
clc
add
or
jmp
call
or
loop
push
test
addr16
fcmovu
mov
stos
mov
aad
xchg
test
inc
mov
cmc
das
dec
sti
adc
cmp
xor
xor
sarb
jmp
arpl
adcl
outsb
inc
das
leave
cmpsl
or
dec
movsb
pushf
jo
inc
pop
shrb
rcll
test
inc
sbb
bound
sar
mov
fwait
xchg
mov
inc
sub
cmp
pop
cmp
scas
mov
ljmp
icebp
in
jno
int
daa
push
imul
sbbl
andb
scas
mov
mov
fnsave
idivb
ja
rorb
hlt
std
adc
cmp
popf
push
mov
mov
mov
sub
les
les
ss
xchg
mov
mov
andps
mov
cmpsb
add
mov
nop
xchg
ficoms
bound
ror
mov
sbb
repz
jge,pn
leave
out
lret
aam
loopne
xchg
xchg
mov
and
stc
not
inc
pop
in
xor
xchg
mov
adc
jmp
int
cmp
inc
insb
rcll
arpl
ret
scas
jno
aaa
add
sub
int3
pop
mov
lds
fsub
lahf
inc
pop
dec
sub
mov
jb
call
test
in
and
cmp
loopne
xor
pop
push
jne
xchg
xchg
push
add
cmp
out
adc
dec
js
leave
lcall
or
pop
arpl
mulb
or
scas
adc
mov
dec
mov
sub
push
add
outsl
jl
cmc
out
psubsb
filds
mov
aad
loopne
or
xchg
imul
in
stos
or
xor
int
push
dec
in
aad
roll
js
inc
enter
cmp
adc
in
lods
and
dec
sub
mov
loope
fidivrl
into
xchg
lret
jo
std
xchg
dec
scas
outsl
testl
push
xor
inc
clc
xor
mov
push
xchg
xchg
mov
inc
outsb
mov
cmp
cmp
xlat
pushf
jl
add
and
lret
cld
sub
pop
fisttpll
xor
test
push
mov
mov
shl
add
in
inc
idivl
cmp
fstl
pop
and
outsl
xorb
xor
inc
and
lcall
outsb
mov
mov
or
jp
jecxz
ss
adc
cmp
push
inc
pop
arpl
lods
imul
sbb
pusha
sahf
pop
push
or
fisubrl
fucomp
and
ret
push
pop
jecxz
or
pop
out
fidivs
fmul
scas
pop
icebp
add
addr16
xchg
pop
jmp
ficomps
sub
int3
psubb
lsl
cmc
dec
cmp
mov
hlt
ret
ljmp
pushf
pushf
notl
fistps
mov
mov
xlat
push
pop
mov
push
aad
dec
pop
and
sub
mov
ljmp
filds
rcrl
roll
clc
or
mov
mov
mov
fwait
in
xlat
sub
cmp
or
rcll
fnstsw
lds
pusha
insb
fidivrs
xchg
jge
shr
jl
std
cmpsl
incl
test
ja
cltd
and
xchg
push
jge
lods
repz
test
cmp
fstpl
jge
jo
loope
mov
fmull
xchg
lcall
ljmp
add
inc
lods
stos
mov
jg
ljmp
shlb
push
fdivs
dec
shll
mov
push
es
or
push
lcall
data16
pop
xor
sahf
idivl
inc
aas
and
and
mov
xchg
sub
lcall
xor
iret
pop
aas
mov
push
xor
shll
lea
stc
repnz
adc
cmc
scas
add
push
rorl
pop
stc
jle
pop
cmp
lret
jmp
inc
adc
xor
data16
mov
repnz
push
dec
lret
test
pop
add
jg
push
sub
or
mov
out
xor
or
shr
inc
add
fadds
dec
dec
cmc
jno
dec
add
aad
pop
and
cmp
pusha
repnz
outsb
push
cmp
and
sub
jnp
mov
lcall
lods
frstor
addr16
scas
pop
jl
shlb
xor
pop
aas
ficompl
push
xlat
in
mov
mov
push
xor
pop
jo
aas
loopne
push
push
cmp
jle
fnstcw
mov
mov
jae
inc
fwait
jmp
jmp
shl
cwtl
shl
adc
mov
scas
stos
lret
pop
lret
mov
mov
mov
add
test
lock
cltd
push
and
cld
or
inc
das
repnz
dec
out
loopne
popf
push
push
in
incb
jno
push
sub
movsl
adc
cmc
lods
mov
inc
in
push
dec
push
push
js
mov
xor
mov
loop
mov
xchg
aas
mov
xor
lock
pusha
rorb
out
mov
cmp
test
daa
fstp
mov
ret
pop
test
sub
bound
xor
insl
pushf
sbb
pop
in
and
push
cs
sub
movsb
push
rol
push
xor
int3
sub
cmpsb
sub
mov
movl
mov
jl
adc
popf
in
addr16
idivl
and
push
outsb
xor
add
leave
add
inc
cmp
add
mov
mov
or
lret
dec
cmpsb
out
and
pop
push
mov
pop
push
enter
and
xchg
pop
push
aad
dec
outsb
lcall
mov
insb
cld
sarl
sub
pop
lock
dec
push
push
out
outsb
in
mov
push
xchg
lahf
push
addb
push
pop
push
and
cli
jmp
push
loope
int
xchg
clc
push
or
aas
push
imul
push
push
in
push
jae
pop
cmp
cmp
jg
mov
cmovbe
and
call
mov
inc
insb
in
mov
push
inc
fsubr
cmc
in
cmp
sbb
loop
jnp
adc
cmp
cmp
inc
pop
lods
add
push
fstpt
mov
mov
ret
xchg
mov
test
dec
xor
mov
insb
orl
sti
dec
in
jecxz
lods
ds
push
xchg
push
xor
sbb
negb
loope
push
jle
out
shl
inc
ljmp
lcall
js
add
xchg
stos
out
movb
test
lea
frstor
xor
ss
insb
lods
pop
xor
sub
jmp
fidivrs
mov
inc
cmp
ljmp
dec
add
icebp
or
subl
das
std
scas
movsb
clc
jmp
add
rcr
outsb
mov
push
data16
jle
sub
repnz
inc
xchg
rorb
mov
bound
push
std
adc
mov
in
xlat
rorb
xchg
les
shll
mov
xchg
jle
mov
mov
imul
and
jmp
mov
push
mov
push
mov
imull
add
dec
in
xor
ret
int3
rorl
ljmp
lcall
das
cltd
add
mov
xorb
xchg
lods
cwtl
pop
sub
pop
lods
jno
sbb
ja
xchg
sti
mov
mov
pop
movsw
and
ficoms
mov
xchg
sub
push
xor
jbe
lds
xchg
inc
add
aad
fidivrs
cmp
aam
add
sbb
pop
rolb
xchg
insl
inc
xor
pop
out
push
xor
data16
and
lcall
push
into
xchg
fs
dec
scas
and
lcall
popf
dec
pushl
inc
leave
fs
dec
xor
data16
add
sub
dec
push
js
in
pop
out
xor
adc
xchg
shll
jbe
mov
sti
sbb
cwtl
inc
les
in
add
fmull
pusha
sbb
pop
shll
and
cli
cwtl
icebp
push
in
mov
pop
scas
cmpsb
dec
nop
ljmp
pop
out
mov
enter
lods
sbb
adc
in
xor
cld
sub
xor
out
scas
push
out
inc
out
fdiv
pop
enter
cltd
jle
mov
and
cmpsb
icebp
popa
out
notb
enter
pop
jecxz
sbb
mov
or
roll
fcmove
sub
fs
add
fcmovnu
adc
mov
jge
mov
mov
nop
dec
xor
mov
mov
mov
sbb
cmp
mov
sti
stos
movsl
iret
xchg
out
lds
in
out
jns
mov
adcl
ljmp
cmc
sbb
ljmp
mov
aam
sahf
scas
nop
jno
mov
mov
and
push
or
or
jns
pusha
out
fs
sub
insl
ljmpw
rcrb
xor
loope
push
gs
adc
mov
mov
or
mov
push
push
add
subl
es
movsl
cmp
add
lods
out
lahf
popa
cmp
test
dec
mov
jle
add
adc
ljmp
dec
ret
push
xor
sub
in
dec
bound
cmovp
xchg
popf
xor
or
cmp
add
jno
push
jge
or
sub
jmp
shrl
shrb
lods
and
cmp
rcrl
dec
cmp
xor
lods
mov
sub
sub
push
dec
adc
ret
xchg
ja
pop
cmc
jmp
aad
mov
push
outsl
ret
push
push
js
gs
inc
add
dec
fs
push
aaa
out
es
or
push
ljmp
cmpsl
mov
sbb
in
jg
sbb
fistps
or
fwait
mov
add
popf
popa
adcb
and
dec
adc
ja
mov
lods
sbb
mov
adc
lret
leave
cmpsb
jmp
add
mov
pop
jne
imul
push
xorb
pop
cmp
insl
les
mov
dec
inc
or
pop
arpl
xor
fdiv
loop
xchg
jge
orl
fstp
and
inc
cltd
gs
mov
and
fsubrs
sub
jne
and
inc
into
or
lcall
ret
popf
or
daa
cmpsl
jg
mov
add
and
in
and
inc
xchg
mov
dec
sbb
incb
cs
ds
jne
iret
sub
xchg
or
leave
sub
mov
rorb
and
jmp
xchg
das
fwait
ret
fcoms
pushf
stc
bound
mov
jo
or
iret
inc
cmpsl
inc
ss
push
mov
fidivrl
in
xchg
js
rorb
xor
lahf
cld
aaa
hlt
mov
mov
add
fdivrl
popa
xchg
mov
addr16
push
mov
les
lret
shrb
lcall
enter
sub
jb
gs
push
and
push
xchg
shll
fisubrs
fwait
loope
mov
xchg
cltd
fildl
insl
or
mov
jo
bound
dec
fwait
int
inc
xchg
bound
mov
or
jmp
lret
pop
out
nop
lock
mov
cwtl
fs
mov
push
jne
rcl
push
pop
sub
lea
xchg
pop
inc
scas
dec
cmp
out
in
pop
rorl
mov
cltd
xchg
hlt
pop
pusha
fwait
std
out
out
mov
inc
out
scas
mov
xchg
in
das
add
xchg
mov
cwtl
cmp
jno
pop
movsl
js
xchg
out
orb
push
rcrl
mov
inc
fidivrs
push
das
mov
cmp
adc
push
cmp
xchg
and
ret
mov
ret
cmc
pop
mov
dec
outsl
stos
fiaddl
xrelease
or
fsubrs
adc
int
adc
jo,pt
sub
pop
add
push
repz
push
imul
jecxz
inc
subb
push
mov
cltd
std
dec
fchs
stos
sub
cwtl
jns
dec
push
rorb
adc
mov
pop
mov
mov
outsl
ret
or
or
mov
adc
pusha
movl
lcall
sbb
xor
push
xlat
dec
ss
mov
xchg
mov
mov
mov
inc
adc
xor
aad
cmp
inc
lock
mov
mov
outsl
push
shlb
mov
and
cmp
pushf
pop
cmpsb
push
pop
hlt
aaa
inc
data16
loope
inc
ror
adc
lock
stos
sbb
shrl
and
push
fs
popf
mov
or
mov
andb
sbb
push
jg
or
cltd
inc
pop
into
xlat
dec
xchg
rcll
push
inc
mov
movsl
in
sti
push
in
iret
and
insb
pop
and
mov
leave
jl
popf
fstl
inc
je
xchg
mov
push
sub
push
pop
ret
mov
mov
mov
adc
imul
adc
imul
rcl
imul
fisubrl
jg
mov
sbbl
jnp
in
out
cmpl
ret
rep
xor
fdivr
jp
bound
test
stc
shlb
cli
adc
lods
push
lret
stos
imul
inc
inc
lahf
insl
dec
mov
xchg
call
sub
es
or
lahf
sub
or
xor
jp
mov
cmp
or
pop
inc
fstps
sbb
icebp
aad
enter
push
out
push
pusha
fstp
or
xchg
fcmovne
or
mov
bound
mov
lret
test
pop
xor
mov
icebp
jo
mov
mov
stc
and
ljmp
adc
popa
lock
or
orl
in
dec
xor
add
and
cltd
out
or
aaa
lds
cltd
dec
rolb
inc
sbb
int
dec
scas
ja
pop
mov
scas
in
popf
mov
mov
clc
pop
inc
mov
out
push
push
test
loopne
fistps
ljmp
pop
rclb
aad
push
jno
or
jb
xchg
scas
in
enter
lret
mov
jmp
xchg
push
movsl
pop
dec
leave
es
pop
shlb
shl
loop
es
pop
loope
popa
push
repz
and
push
ja
jl
dec
aam
mov
push
and
test
dec
stc
out
cmp
ljmp
fstps
subl
shl
outsl
and
jle
xchg
xchg
movsb
inc
push
mov
and
mov
into
and
lea
out
sbb
in
mov
fwait
pop
jns
cmp
jns
std
negl
gs
lahf
add
push
xlat
add
lret
insl
mov
jno
and
push
cmp
inc
sbbb
cs
call
inc
repnz
add
pop
sbb
out
inc
pop
loop
xchg
repz
inc
inc
pop
and
fwait
xlat
loope
push
ret
addr16
hlt
sub
xchg
xor
mov
adc
cmp
sub
pop
gs
cmp
and
aas
mov
jge
pop
adc
outsb
cwtl
arpl
cmp
in
jle
pop
push
cltd
movsb
or
daa
jbe
and
mov
sti
sub
ftst
and
add
jne
push
cwtl
in
div
push
sub
mov
test
test
fsub
into
mov
in
outsb
jno
pop
lea
fst
xor
test
shll
sbb
and
popl
or
push
test
popf
xorl
and
into
daa
or
sub
sub
ret
xor
aas
pusha
test
add
aad
out
aad
mov
xor
in
add
aad
es
fdiv
xchg
lea
jmp
popf
inc
adc
mov
and
je
push
aam
mov
push
adc
adc
aad
pusha
mov
cld
mov
jl
push
inc
cwtl
outsl
cli
add
mov
jbe
addr16
mov
and
mov
pushf
xchg
lret
iret
arpl
iret
mov
aam
enter
ds
daa
cmp
in
in
sub
dec
push
mov
loopne
dec
inc
stc
inc
ljmp
sbb
aad
xor
lcall
push
jns
shll
bound
cmp
xor
lock
lock
loopne
mov
mov
add
icebp
dec
mov
xor
notl
dec
mov
mov
or
pop
jb
push
test
mov
sub
popa
les
out
xchg
jg
mov
push
cli
add
and
adc
cltd
bound
inc
int
sub
in
push
sbb
cvtps2pi
sbb
push
sbb
push
mov
sahf
inc
and
popf
push
cmp
mov
fsubrs
in
nop
arpl
es
push
mov
popf
std
mov
inc
pusha
adc
shrb
dec
rcrl
push
fistpll
sub
loopne
sub
adc
add
adc
xchg
inc
cld
mov
xchg
cmpsl
arpl
aam
pop
xor
std
fwait
push
scas
xchg
movsl
push
sbb
push
xchg
pop
xor
mov
daa
ss
test
iret
adc
shrl
orl
repz
xor
enter
xor
das
stos
pusha
fildl
cmp
insb
cld
cmp
enter
xchg
mov
stc
insl
xchg
imul
aaa
loop
xchg
imul
xchg
jne
xchg
xor
insl
xchg
lock
sar
lret
push
aaa
lcall
push
in
xor
xchg
jbe
cs
pop
add
xchg
test
cmp
or
movsl
lock
cmp
ret
cmpsl
xchg
mov
sub
jg
adc
adc
leave
add
mov
cs
push
jl
xor
mov
enter
inc
out
xlat
pop
dec
pop
dec
and
cld
mov
mov
xor
movsl
xchg
mov
dec
or
adc
xor
stos
andl
dec
cltd
cld
sahf
jnp
shlb
cs
stc
inc
repnz
xor
jl
adc
roll
xchg
and
sub
cmp
icebp
adc
jnp
xchg
mov
iret
rol
aaa
mov
sub
ljmp
sub
ret
dec
mov
xchg
adc
hlt
and
test
je
sbb
mov
mov
jg
pop
pop
out
ret
outsl
popa
sbb
aam
addr16
xchg
mov
pusha
xor
or
adc
int3
xchg
push
jno
mov
cltd
xor
mov
test
ja
int3
or
xchg
pop
mov
mov
pop
aam
js
push
fimuls
push
xor
mov
mov
cwtl
sub
adc
push
and
call
lcall
adc
iret
aaa
cmp
insl
mov
insl
push
or
hlt
sbb
xchg
jmp
ret
mov
in
xchg
ret
adc
lock
xor
adc
scas
gs
push
aaa
jmp
mov
mov
cltd
dec
xchg
in
jne
gs
pop
xchg
jo
sub
daa
add
jmp
xchg
mov
jno
ja
shll
pop
push
xor
mov
incb
cld
cmp
xor
push
add
inc
fmul
add
cld
outsb
adc
jge
fs
mov
call
add
cmova
push
mov
mov
pop
jo
cli
mov
shll
or
out
adc
mov
es
pop
xchg
mov
arpl
push
movsl
ficoms
stos
dec
or
outsb
add
mov
cmpsl
pop
pop
sbb
enter
xor
data16
push
and
arpl
sub
or
insl
andb
dec
sub
xchg
clc
outsb
loopne
push
cmp
lahf
mov
push
cmc
xor
clc
inc
xchg
push
add
xlat
mov
int3
shrb
jnp
push
mov
sti
ja
roll
ljmp
in
js
out
sbb
ljmp
push
jp
out
pop
mov
out
lods
mov
pop
sahf
push
ss
jge
pusha
push
push
out
test
xchg
loop
mov
pop
addb
leave
arpl
and
pop
dec
inc
mov
loopne
lret
jae
fcoml
imul
xor
out
inc
xchg
add
bound
movsb
sti
xchg
cmp
mov
mov
mov
adc
cld
scas
imul
ret
das
pop
negl
mov
stos
jbe
mov
pop
cwtl
push
dec
cmp
cmpsl
test
mov
lods
lock
adc
mov
inc
fmull
test
jge
xor
mov
sub
add
scas
in
push
cld
call
movsb
push
dec
ja
dec
and
fwait
es
mov
or
negb
mull
in
and
sbb
adc
or
sahf
jns
cmp
inc
or
ffree
dec
iret
mov
int
mov
pop
sbb
fdivrs
out
imul
ljmp
push
xchg
pop
mov
repnz
popa
push
rcll
daa
mov
inc
push
sbb
es
aad
xor
mov
ret
sti
aaa
mov
mov
js
cli
xchg
sarl
xchg
mov
inc
lods
loope
aaa
mov
mov
and
in
ja
aaa
js
sub
js
and
push
aam
outsl
shlb
adc
mov
push
ja
or
and
sub
mov
rorb
jb
jnp
sub
inc
gs
xchg
jae
dec
mov
or
push
pop
adc
lret
sbb
ret
std
mov
pop
jp
outsb
inc
aad
or
adcb
pop
jno
and
jbe
add
xchg
fistl
xchg
dec
mov
stos
mov
cmp
push
sbb
xor
out
xchg
roll
cli
mov
nop
inc
sub
out
ret
mov
pop
inc
mov
mov
dec
mov
std
sahf
fstpl
pop
push
pop
inc
out
cmp
cmp
aad
lahf
push
daa
mov
das
std
jae
cmp
aad
dec
dec
mov
add
pusha
ljmp
mov
adc
push
pusha
xchg
mov
push
cmpl
pop
stc
mov
jnp
aas
add
out
sub
adc
lods
push
and
sbb
fldl
mov
adc
neg
mov
xor
aad
dec
es
ret
pop
cwtl
jnp
sahf
fisttpll
adc
stc
cmc
jns
sub
ds
lahf
out
lods
jno
xor
fdivrp
cmp
sub
jmp
arpl
es
mov
xchg
sbb
aaa
inc
repz
add
pop
sbb
dec
enter
mov
jp
dec
cmp
iret
in
cld
call
xlat
orl
es
pop
hlt
fldl2t
scas
mov
mov
mov
dec
ljmp
fwait
lretw
enter
mov
lea
fucomi
and
push
pop
lcall
call
mull
es
dec
mov
push
fldenv
rcll
and
cmp
lds
clc
xor
outsl
icebp
mov
sahf
or
xchg
mov
sti
or
mov
test
cmpsl
das
data16
push
orl
push
add
lds
sub
into
pop
es
loope
imul
inc
xchg
xlat
ja
pop
inc
dec
cmp
test
insb
mov
dec
sub
in
aaa
inc
aad
and
sbb
sbb
ficompl
mov
sti
cmp
adc
pop
sub
cmp
push
cli
ud2
mov
and
cli
or
pop
and
or
or
cmp
repnz
das
mov
push
add
pop
add
push
xor
outsl
or
adc
enter
fiadds
cltd
les
or
ror
xchg
test
push
sub
mov
sbb
dec
cmp
or
lret
or
int
push
mov
jns
dec
test
divb
mov
fsubrl
orb
sub
shlb
pop
push
gs
fdivs
into
sub
xor
out
in
sub
and
in
ret
cli
mov
push
sub
int3
xchg
push
add
push
jp
mov
data16
jp
mov
sub
dec
aam
fld
les
jle
mov
mov
into
adc
fs
aad
xchg
iret
pop
gs
das
ret
jae
add
mov
dec
popf
cmpsl
and
sub
sti
xchg
aad
cs
gs
fsubl
cld
cmpsl
jbe
or
fcoms
cltd
nop
fs
push
in
icebp
adc
jecxz
jg
jbe
adc
sahf
xor
jg
adc
in
pop
or
inc
fs
rolb
and
cwtl
aad
sub
dec
mov
xchg
inc
dec
pop
add
or
sub
lds
xchg
addb
mov
ss
out
decb
into
aaa
mov
cmp
out
xor
jbe
sbb
fdivl
test
mov
mov
cmpsl
cwtl
int3
mov
mov
leave
scas
rcll
movsb
inc
cmp
das
mov
inc
fadds
test
dec
mov
int3
adc
lahf
jnp
add
add
mov
in
jne
addl
sbb
repz
jecxz
shll
arpl
insb
mov
out
outsb
pushf
adc
mov
imul
cltd
stos
lret
int
into
lea
xchg
mov
sarl
roll
and
cmc
jns
jo
clc
in
std
sbb
loopne
adc
popa
xchg
add
sahf
push
adc
mov
repz
enter
es
iret
loopne
bound
dec
mov
fcoms
pusha
adc
ret
out
sbb
xlat
cmpsb
cmp
outsb
nop
cs
movsb
fnstsw
test
or
inc
pop
mov
jno
idivl
icebp
sbb
inc
xchg
shll
icebp
mov
xchg
pop
mov
or
jmp
sub
ret
loop
repnz
adc
aam
in
pop
adc
xor
mov
out
dec
jb
fbstp
adc
sbb
addr16
ficomps
mov
or
mov
push
dec
lahf
cld
fcoms
xor
and
mov
sbb
mov
cs
les
or
xchg
mov
in
pusha
xorb
rorb
or
jp
lret
pop
dec
dec
jge
xor
aad
fdivrs
rorb
and
mov
jne
pop
ja
sub
add
or
pop
and
cwtl
and
mov
sub
add
fcmovne
cmp
int3
cs
fnstenv
sbb
mov
int
mov
pop
and
and
mov
mov
jl
and
fcoml
jmp
lahf
cmpsb
xor
je
call
ljmp
mov
jecxz
mov
popf
pop
iret
add
adc
dec
jp
es
je
cmp
xor
imul
mov
fdivrl
adc
xor
in
mov
and
std
out
mov
shl
inc
jmp
call
sub
les
jecxz
adc
data16
mov
inc
push
popa
push
ret
stc
add
jmp
jbe
ss
call
push
mov
xchg
jmp
pop
add
mov
cltd
mov
lods
mov
push
mov
cmc
ficoms
lods
or
and
jp
jg
push
dec
and
rclb
ds
test
and
out
js
mov
jmp
mov
or
in
daa
fcmovb
xchg
mov
jne
or
and
das
push
push
xlat
mov
mov
into
cmp
shll
pop
or
pop
pop
xchg
lods
std
repnz
add
mov
fs
jns
rcll
movsl
pop
sbb
mov
push
xchg
jb
pop
ss
jecxz
inc
pop
mov
adc
xchg
sbbb
dec
mov
sub
adc
cmpsl
push
insl
sahf
in
in
add
lea
popf
xlat
xchg
mov
mov
add
inc
push
sbb
dec
or
pop
outsl
push
fs
ljmp
cmp
jb
xchg
mov
jb
or
push
pop
sbb
push
or
mov
fimuls
adcb
pusha
leave
or
sbb
jbe
sub
popf
or
int3
jnp
mov
jne
push
ljmp
pop
pop
mov
jge
cmp
xor
test
movsl
test
add
ret
ja
pop
jne
sub
call
mov
push
mov
sub
lea
das
jne
cs
sub
inc
mov
xor
shrb
cmp
out
enter
lods
and
xor
adc
cmp
xlat
stos
add
push
imul
mov
pusha
xlat
mov
jnp
negb
mov
sbb
push
int
add
aas
mov
into
aad
dec
or
loopne
adc
js
pop
iret
std
inc
mov
call
dec
sub
sub
lods
cmp
in
nop
iret
pop
mov
mov
adc
icebp
adc
and
popa
jo
cmp
add
pop
cs
mov
das
mov
sbb
sub
lret
lds
mov
ja
pop
pop
stc
xor
or
popa
or
out
mov
cmp
cmp
add
loope
lret
fstpt
dec
scas
push
hlt
and
sbb
mov
inc
mov
jnp
pop
aas
in
jbe
jnp
inc
sub
jns
ret
xchg
xor
dec
jo
lock
lods
pop
pop
test
imul
sub
into
ficompl
or
xor
out
cld
mov
movsl
mov
ss
sbb
movsb
dec
cli
sarb
mov
xor
outsb
mov
dec
jle
or
out
sub
ficoms
ss
in
pop
ljmp
inc
insl
lods
xor
adc
inc
lods
mov
jg
shrl
sbb
mov
test
xor
xlat
rcpps
mov
jge
adc
and
sahf
test
sub
jae
scas
test
js
add
popf
outsb
mov
sarl
add
sub
out
jo
int3
push
bound
xor
lds
aaa
jns
inc
js
pop
in
out
in
int3
xchg
jg
mov
push
rcll
push
nop
pop
mov
stos
aad
sub
mov
adc
ljmp
push
xchg
xchg
add
repnz
enter
xchg
clc
dec
test
inc
in
jmp
xchg
movsb
cld
mov
jne
cmp
lcall
push
sbb
cmp
mov
or
jge
lea
mov
aam
mov
inc
dec
outsl
in
pop
push
dec
ja
scas
and
dec
movl
lea
mov
in
dec
insl
lcall
inc
hlt
and
das
adc
push
xor
mov
scas
loop
lret
int
shlb
sub
mov
mov
mov
ljmp
scas
mov
cmp
aad
adc
inc
or
lahf
sarb
mov
fisubrl
daa
scas
and
frstor
mov
pop
jl
adc
jno
sub
leave
lcall
push
scas
scas
int
xchg
jnp
and
addr16
adc
xchg
shl
shll
pop
das
orb
xlat
neg
xchg
jmp
sbb
scas
sub
cli
add
and
mov
imul
out
int
clc
jecxz
mov
lahf
cmc
inc
jmp
mov
mov
xor
andb
push
ficoml
dec
cmp
sub
aaa
pop
cmp
push
fwait
sbb
stc
mov
out
cmp
cmp
mov
push
mov
rcll
out
xor
add
mov
mov
adc
jnp
dec
aaa
aad
push
pop
mov
call
ja
push
mov
cmpsl
sarl
cld
sub
inc
jmp
addr16
mov
adc
mov
jg
imul
outsb
jp
mov
int
icebp
in
or
mov
cmp
push
mov
ja
sub
lahf
jge
push
jae
movsl
loope
jge
fs
adc
jle
aad
xchg
pop
insl
xor
push
es
adc
pop
sbb
xlat
imul
mov
cmpsl
inc
fiadds
das
lret
pop
sbb
ret
mov
fnstenv
mov
adc
repnz
lret
pop
push
es
jno
sarl
jecxz
sbbb
sub
inc
inc
sub
addr16
stos
jge
popa
lods
or
jmp
iret
movsl
sub
cltd
inc
pop
xchg
shrb
inc
imul
and
leave
cmp
sbb
xlat
aam
dec
jp
pop
xor
std
rcr
or
sbb
int3
icebp
xchg
mov
cmp
and
mov
lds
sub
mov
push
pop
rclb
mov
adc
shlb
jb
xor
sbb
out
sbb
fs
mov
sbb
sub
arpl
fadds
cmovne
insl
cld
cld
mov
ror
jp
pop
js
subb
mov
fisubrl
jno
mov
or
pop
sbb
mov
testb
hlt
xchg
stos
cmp
int
cwtl
test
dec
std
pop
or
or
negl
and
test
or
sub
mov
shlb
sub
subb
enter
es
aaa
dec
insl
push
mov
in
sub
testl
std
iret
lret
xchg
xchg
adc
imulb
or
push
jmp
xchg
lods
and
into
push
sbb
lcall
out
imul
in
pop
dec
xchg
xor
outsl
jmp
insl
push
and
in
and
pop
mov
cwtl
insb
das
das
add
jge
pop
mov
sbb
jae
sbb
jmp
pop
mov
add
icebp
push
dec
dec
pop
mov
jmp
and
cli
adc
aas
lret
cmp
addr16
test
gs
fstp
xchg
pop
sar
aas
lods
aas
test
imul
sbb
mov
movsb
jno
xor
add
data16
lret
in
mov
jnp
mov
add
or
xchg
inc
lret
or
xchg
cmp
fisubrl
mov
adc
sti
or
lret
in
fwait
push
inc
sub
mov
or
mov
pop
dec
pop
push
pop
dec
lcall
das
sub
push
fnstenv
imul
sbb
cmpsl
or
jmp
out
fiadds
sub
data16
popf
mov
push
jns
inc
fstpt
aad
and
icebp
outsb
out
lret
icebp
mov
js
call
mov
xchg
xchg
cmp
xchg
xorb
mov
push
punpckhwd
xor
and
xchg
test
outsb
movsl
add
cmp
jne
bswap
jbe
dec
sti
test
div
cmp
in
mov
add
nop
nop
push
mov
mov
xchg
stc
xor
or
fsubrl
jbe
das
mov
or
jae
enter
add
push
test
add
aad
fbstp
cmp
ja
and
inc
insb
dec
test
pop
pop
aam
lret
add
popf
mov
out
idivb
pop
sub
jle
fisttpll
cltd
mov
aas
mov
popa
jno
jno
pop
lahf
add
mov
negb
mov
xchg
std
in
or
insb
push
jb
inc
enter
daa
pop
xchg
outsb
xor
loopne
pop
inc
pop
cmpsl
inc
aam
pop
sub
xchg
jo
bswap
bound
stos
cmp
push
dec
repz
dec
movsb
hlt
ficoml
popf
rorb
call
les
jmp
ds
add
fwait
mov
insl
mov
jb
mov
jnp
jae
xlat
notb
scas
pop
mov
cmp
roll
and
pop
add
sahf
stos
inc
xchg
inc
data16
sbb
es
imul
sbbl
cwtl
xchg
rcl
js
clc
lret
into
insl
ljmp
xchg
jae
push
fcomps
dec
notl
kmovb
cmpsl
jmp
sbb
sub
mov
xchg
dec
lods
mov
imul
sti
lods
or
insb
pop
out
lods
test
std
adc
add
dec
int3
xor
arpl
scas
cli
push
imul
in
dec
mov
gs
cmp
movsb
push
fistpll
adc
jbe
fiadds
adc
mov
dec
cmp
xor
nop
cmp
inc
ss
sti
cmc
fs
es
popf
mov
cmpsb
test
pushf
sbb
addr16
cwtl
loopne
push
inc
mov
mov
mov
or
jns
jb
subb
clc
mov
mov
push
js
orb
sahf
mov
test
inc
aam
data16
scas
scas
pop
sahf
push
mov
lea
dec
dec
mov
or
adc
iret
jge
faddl
ljmp
push
push
clc
add
movsb
xor
cmp
fcoml
push
fsub
std
or
les
lret
xor
jp
dec
push
push
ret
jne
lret
les
jb
sbb
jbe
dec
dec
mov
pop
pushf
sub
and
cld
add
cld
push
mov
adc
mov
in
cmp
pop
sub
lret
lahf
in
stos
or
sub
repz
xor
cmp
inc
enter
dec
movsl
add
mov
repnz
les
arpl
push
mov
add
push
mov
fmul
sub
aad
lret
subl
insl
andl
add
out
mov
xchg
adc
or
aaa
subb
push
dec
imul
out
ljmp
popf
ds
jmp
jne
test
sub
lea
ret
loope
xor
adc
lds
cmp
cmp
mov
mulb
adc
dec
pop
push
sbb
int
jle
adc
in
inc
inc
inc
jne
nop
xor
adc
xchg
ret
ret
adc
or
in
lods
adc
xor
nop
jne
or
xor
jge
or
jmp
mov
fnstsw
sub
arpl
add
nop
les
dec
pop
outsb
xlat
cmp
jbe
dec
cmp
fisttpll
sub
mov
dec
psubw
push
loopne
or
pop
pusha
icebp
cmc
fwait
andl
and
out
jp
inc
mov
rorb
call
add
movsl
pop
out
xorl
and
jg
mov
movsb
cs
pop
xchg
dec
aaa
pop
insb
ret
lock
jbe
fcomps
scas
aas
int
push
pop
mov
ret
iret
mov
jno
filds
and
rcrb
sub
cwtl
push
push
repz
sbb
filds
adcb
add
sbb
jmp
clc
dec
cs
repz
pop
inc
xchg
inc
int3
sti
dec
dec
enter
cmp
mov
jbe
mov
pop
adc
mov
mov
scas
test
lods
repz
sbb
and
xlat
push
aas
add
and
test
dec
fucom
es
call
stos
pusha
adc
pop
adc
jb
aas
adc
movl
cli
sbb
sbb
lret
pusha
adc
mov
lds
in
push
jge
rol
xorb
insb
jl
icebp
lds
xor
jne
add
add
inc
and
lock
mov
xor
cs
in
pop
test
mov
test
data16
lods
mov
data16
fimuls
or
repnz
or
xchg
jno
mov
mov
pusha
pop
add
mov
inc
pop
shrb
cmp
mov
shr
fnsave
or
loope
pop
jge
pop
in
xchg
cmpl
insl
and
in
fnstenv
push
add
insl
mov
jmp
cld
pop
push
add
out
insb
dec
out
test
lcall
pop
ds
mov
inc
outsb
ret
adc
insb
int3
adc
dec
cmp
divb
adc
dec
outsl
pop
aam
mov
jno
rcl
test
cli
sub
pop
in
loopne
or
cmpsb
push
movsb
add
ljmp
jb
mov
popa
shlb
out
std
scas
lcall
xor
sarb
fidivs
out
mov
insb
scas
and
mov
mov
pop
int
cmpb
inc
out
mov
push
in
ljmp
inc
and
cmpsb
push
hlt
inc
sbb
sub
cmp
sub
lods
addr16
gs
or
xchg
and
cmp
je
je
stc
or
addr16
loope
std
jb
lods
pop
pop
add
xchg
fimuls
iret
sbb
cmp
mov
adc
dec
js
out
jge
mov
xchg
jle
dec
mov
push
dec
sub
mov
daa
fldl
cmpb
xchg
xchg
mov
mov
xor
sbb
aaa
testl
lea
dec
mov
dec
les
nop
mulb
popa
cmp
repnz
out
ds
sub
lcall
test
jno
mov
test
xor
idivb
mov
xchg
adc
xchg
iret
push
popa
add
test
push
xchg
push
mov
imul
sti
mov
inc
js
inc
mov
mov
mov
ret
or
movsl
inc
sub
dec
push
pop
cmp
cmc
int3
cwtl
lds
iret
and
sub
or
jge
and
imul
pop
push
xchg
xchg
and
cli
dec
inc
xor
xor
imul
jbe
arpl
aam
cwtl
push
test
jle
jg
iret
push
or
mov
cmp
jmp
cwtl
loopne
iret
adc
cmp
fwait
jae
mov
push
inc
int3
pop
in
movsb
adc
add
or
inc
aad
or
mov
mov
in
jbe
cmc
test
fiadds
rcl
adc
sbb
repz
inc
clc
mul
and
pusha
pusha
adc
xchg
xchg
push
cmpsl
lea
cmc
out
fincstp
leave
push
imul
cmp
mov
mov
lock
push
test
out
ss
mov
push
inc
pop
dec
mov
ja
stos
es
sub
movsb
mov
cltd
stos
mov
lahf
or
cli
jb
shlb
mov
pop
mov
ret
xor
shrl
fadds
jle
loop
jnp
call
sahf
pop
outsb
lock
add
lret
dec
or
hlt
loopne
pop
push
dec
bound
xchg
inc
test
xchg
adc
sbb
sbb
sbb
sbb
push
jnp
jge
push
or
cwtl
push
adc
add
fdivr
nop
xor
fs
xor
scas
xchg
pop
pusha
jl
add
inc
xor
hlt
fwait
xchg
fistps
test
outsb
add
pushf
push
nop
decb
cld
mov
sbb
nop
call
mov
ficoms
adc
loop
mov
je
nop
lds
aas
outsb
cmp
pop
test
dec
pushf
aas
adc
int
dec
cmpsb
pusha
adc
int
mov
inc
adc
bound
out
jp
mov
aas
daa
mov
js
sub
push
dec
movsl
mov
cmpsl
dec
jo
out
stos
scas
mov
mov
leave
mov
rolb
sub
sbb
fwait
mov
mov
popf
imul
daa
pop
das
scas
cmpb
outsb
cmp
pop
mov
test
sbb
shlb
xor
xchg
jno
push
fldenv
mov
pop
push
scas
inc
stc
mov
adc
mov
outsl
xchg
subb
in
mov
fneni(8087
inc
out
outsl
and
fisubs
mov
inc
xor
cmp
sub
fidivrl
arpl
xchg
pop
sbb
mov
outsb
xchg
or
ret
int3
jb
push
pop
inc
leave
shrb
jge
cmp
adc
out
insl
call
cmpsb
scas
fistl
inc
fnstcw
bound
dec
lret
sbbl
jecxz
adc
mov
jb
add
outsb
mov
test
sub
sti
sbb
mov
mov
sbb
ret
out
mov
fisubl
mov
cmc
jp
pusha
xor
add
shlb
js
mov
mov
lods
aas
push
dec
adc
aam
int
cpuid
iret
ficomps
pop
fs
cmpl
inc
sub
fistpll
out
loopne
pop
out
daa
pop
sbb
cs
adc
mov
mov
fidivl
in
test
add
cmp
xor
cli
sbb
and
mov
testb
out
sbb
aad
sbb
icebp
push
aad
sub
xchg
dec
sbb
jle
sub
or
jns
jecxz
bound
push
or
icebp
subl
add
loop
test
outsl
addl
jnp
cmc
je
mov
test
jnp
adc
mov
enter
pcmpgtd
adc
gs
fs
fisubl
ja
icebp
ret
push
xchg
cmp
jne
int
xchg
jno
inc
lea
in
mov
mov
sbb
insb
das
mov
xchg
rcrl
or
jns
jnp
mov
aas
fcoml
std
jns
cmp
sub
cli
pusha
and
cwtl
cmp
push
xchg
and
fnstcw
and
xchg
sbb
das
je
inc
xchg
repz
sahf
lret
aaa
push
add
rolb
cmp
in
xor
jp
sbb
xchg
aad
fiadds
sbb
cmp
dec
adc
lea
enter
ja
aas
add
add
imul
pop
testb
scas
xchg
jcxz
mov
push
adc
fcoms
mov
imul
push
xor
sub
pop
mov
outsb
cli
mov
mov
rolb
mov
das
enter
mov
scas
fisubl
test
jl
and
cmp
ror
shl
lahf
jb
dec
dec
loopew
pop
testb
push
push
fistps
ficoml
mov
jmp
in
out
push
dec
test
lds
or
aaa
xchg
movsl
dec
test
inc
popf
xchg
mov
jae
mov
pop
mov
xchg
and
test
mov
mov
pushf
aad
andb
or
push
or
in
xor
pop
pop
inc
jle
fsts
cmp
push
inc
adc
pop
in
cmp
pusha
movsb
leave
fildl
stc
cmpsb
xor
and
ret
je
cmp
sbb
int
shlb
sbb
jl
and
out
push
push
lods
scas
jge
sub
xchg
ja
cmpsl
jbe
ret
dec
icebp
cmpsl
adc
rclb
aam
jmp
rcrb
in
mov
repnz
cmc
sbb
push
cli
insl
pusha
stc
dec
and
pop
push
movsl
dec
cli
mov
xor
rcll
mov
cmp
lock
es
pop
dec
imul
sub
les
into
or
es
pop
out
cli
mov
scas
sarl
rorl
jno
sub
adc
sti
les
sub
clc
sub
xor
inc
mov
jg
out
mov
aaa
fsubrl
pop
lods
or
lds
add
sbb
xor
mov
add
sbb
jecxz
jo
in
jnp
sbb
xchg
cmpb
cld
xchg
cmpsl
pop
mov
pop
jns
icebp
mov
mov
sahf
push
add
jne
sbb
add
dec
cltd
adc
jb
mov
dec
xor
rcrb
out
rcrb
lahf
or
adc
test
adc
xorb
sarl
jl
and
jnp
inc
insb
test
je
cmp
jb
cmp
loopne
jmp
addr16
lods
xchg
movzbl
sub
sub
sub
cwtl
adc
sbb
popa
mov
mov
stos
or
or
test
fisttpll
jmp
or
dec
cmp
jnp
push
aam
insb
push
adc
mov
fldl
sub
stos
es
xchg
mov
mov
icebp
push
loop
dec
dec
les
pop
mov
jae
cs
dec
add
lods
ret
fsubrl
fs
push
insl
mov
xor
fs
pop
sbb
icebp
roll
and
sub
into
out
jbe
loope
outsl
loope
dec
and
popl
int3
mov
push
cs
sbb
ja
movsb
xor
xor
mov
sti
dec
pop
pop
xchg
mov
mov
mov
adc
std
push
push
dec
mov
mov
jne
test
mov
lret
test
mov
arpl
dec
jmp
jl
movsl
and
jecxz
pop
adc
xchg
jl
mov
stc
jo
fwait
xchg
insl
mov
or
jge
loop
rcr
jg
push
add
clc
clc
shll
call
jecxz
and
jge
into
push
stos
fnstenv
dec
inc
ja
mov
in
shlb
jmp
lods
or
mov
or
push
push
or
cmp
out
leave
push
movb
pop
mov
rol
push
sbb
enter
jmp
push
push
sub
inc
cmpsb
sbb
jb
subl
daa
loopne
pop
and
aas
clc
or
movsl
inc
fidivl
je
ljmp
mov
rol
cmp
sub
les
div
or
push
call
into
xchg
push
into
xchg
lods
bswap
push
sarb
nop
adc
and
xlat
inc
scas
mov
mov
loop
arpl
sub
sub
add
or
push
or
fcmovb
fwait
push
sbb
cli
jmp
cwtl
jle
sub
xor
out
add
push
jmp
add
cmpsb
enter
and
adc
insl
sbb
mov
push
out
lods
into
push
int
cmp
mov
mov
pusha
lds
das
mov
mov
scas
cmp
push
jo
or
push
mov
addr16
lock
loopne
dec
mov
mov
leave
lods
mov
stos
inc
shll
ja
pop
fidivl
inc
mov
es
cmp
add
test
movb
mov
pop
scas
add
in
dec
add
mov
enter
lock
push
mov
push
mov
and
out
adc
sub
mov
pop
outsb
imul
cmp
iret
repz
or
popf
sbb
cmc
pop
dec
cmp
xchg
cmp
xor
jp
sub
enter
add
and
leave
sbb
cmp
aam
push
xor
mov
arpl
jmp
bound
sti
push
loop
test
push
ret
xchg
ss
idivl
xchg
mov
dec
inc
cld
lret
aas
cmp
fwait
or
leave
frstor
inc
popa
loope
fdivl
adc
cmp
xchg
insb
pop
aad
cmp
push
in
push
mov
jge
sub
out
shlb
lret
das
loope
xchg
mov
lods
inc
mov
push
adc
mov
test
and
bound
push
cs
je
or
add
add
jns
mov
movsl
cli
fsubrl
pop
mov
pop
dec
outsl
jns
fcomps
fldl
pop
xchg
mov
mov
test
fwait
bound
mov
sarb
push
inc
cmp
jge
inc
adcb
xorl
sub
push
mov
mov
mov
pop
xchg
shl
repnz
repz
push
mov
lahf
xchg
adc
ror
pop
sbb
push
xchg
inc
movsl
pop
adc
ret
and
or
shlb
fdivs
mov
mov
insb
cmp
sub
pop
rcr
push
loope
and
ljmp
sti
adc
mov
xor
and
push
inc
adc
jo
fs
test
xchg
push
arpl
xchg
mov
stos
push
int
inc
ljmp
data16
sahf
leave
mov
push
mov
pop
rcrb
mov
mov
shrb
std
lds
push
repnz
mov
mov
push
sub
jae
mov
lcall
test
cmpsl
and
enter
sarb
clc
push
jo
clc
push
pop
fld
in
hlt
ds
adc
dec
jl
cs
jb
xlat
and
aam
xor
rcll
push
dec
mov
mov
add
sub
aas
pop
sbb
outsb
and
or
mov
and
out
incb
push
arpl
fistl
or
and
rorl
mov
jl
sbb
pop
ret
aas
pop
pop
cltd
in
pop
pop
test
incb
sub
cmp
sub
inc
aad
jmp
ret
fdivp
ret
pop
push
das
jnp
inc
test
jmp
imul
xchg
mov
pusha
jns
int
jmp
iret
mov
daa
sub
int3
je
mov
std
lret
mov
sub
sub
les
jmp
mov
movsb
stc
xchg
shll
adc
jno,pt
bound
xchg
jg
inc
in
sub
ds
or
push
push
dec
jp
hlt
es
xchg
iret
gs
mov
movsb
movsb
jle
loope
pop
ja
dec
popa
xchg
and
bound
xchg
add
daa
pushf
es
jmp
dec
pop
enter
cmpsl
hlt
enter
sbb
pop
add
or
addl
xor
and
mov
scas
inc
pop
das
into
insl
mov
pop
push
mull
dec
fidivs
push
enter
push
test
sahf
mov
mov
repz
xchg
aas
pop
les
ret
bound
pusha
mov
lret
in
rcr
mov
ljmp
push
mov
jp
xchg
imul
jae
pop
jg
mov
loop
ret
pop
dec
xchg
push
orl
aad
jns
mov
mov
xchg
xor
lea
sub
enter
dec
aam
insb
mov
pop
sbb
mov
gs
test
shrb
pop
clc
adc
fsubrl
test
ret
pop
mov
lret
xchg
mov
cli
daa
in
mov
mov
fidivs
cmp
lea
mov
das
aas
into
xor
movsb
pop
pop
push
outsb
out
add
pop
dec
xchg
jmp
and
cmpsb
iret
ljmp
test
testl
int3
into
ss
sub
lock
mov
gs
cli
add
mov
repnz
cld
dec
stos
xchg
icebp
stc
push
jmp
push
pop
jle
lahf
mov
jbe
stos
mov
into
call
push
dec
push
lods
inc
daa
jno
jecxz
pusha
jnp
out
push
push
lds
faddp
xchg
jmp
lret
adc
mov
xlat
bound
cs
out
add
bound
mov
jb
loopne
sub
jns
push
les
mov
rcrb
cmp
daa
shll
mov
pop
scas
mov
mov
or
outsl
xor
add
cmpsl
adc
inc
adc
stos
jne
cmp
into
jno
mov
sbb
enter
std
push
insl
mov
mov
ds
adcb
rol
insb
mov
inc
popa
xchg
in
pusha
movsb
dec
pop
xorl
insl
jg
out
xor
imul
dec
out
lcall
scas
push
xor
dec
push
add
ja
icebp
pop
jmp
test
sbb
push
sarb
mov
mov
add
shr
std
push
mov
pop
int
sahf
sbb
mov
xor
pop
xor
push
fbstp
fistpl
push
pop
dec
fmuls
ret
push
addr16
iret
mov
insl
fiaddl
adc
push
cmp
adc
clc
and
mov
pop
add
mov
xor
arpl
test
mov
sbb
mov
jbe
sahf
lods
pop
shll
add
mov
sub
cs
addr16
fstpt
andb
jne
sub
imul
jb
sbb
lahf
in
movsb
jmp
and
cld
or
shl
push
pop
mov
add
inc
push
out
pusha
push
inc
pusha
or
jp
mov
dec
inc
rcrb
jns
adcb
int
cmp
adc
sbb
dec
push
loop
fcoml
add
push
mov
std
or
inc
sub
movsl
mov
mov
xor
outsl
push
jl
test
fld
je
mov
mov
and
push
or
das
shr
add
jo
imul
cmp
push
leave
test
mov
in
inc
test
loop
push
inc
mov
cmc
out
xor
lahf
inc
mov
sti
stc
mov
xor
dec
jl
cmp
fisttpl
repz
dec
or
cwtl
aaa
adc
sub
lret
sub
pop
idivb
shlb
bound
scas
dec
ficoml
mov
call
inc
xchg
pop
jb
dec
dec
orl
xlat
rcl
xchg
stc
pop
out
jb
stc
rcll
xor
ljmp
mov
sub
push
push
xchg
in
int3
rolb
daa
int
mov
andl
mov
pop
repz
test
sub
jno
cmp
xor
push
leave
push
push
ljmp
aam
loopne
pop
lcall
push
or
addb
xchg
outsb
test
iret
mov
sbb
pop
pop
mov
jle
mov
test
mov
dec
dec
xchg
pavgb
sub
das
jno
pop
mov
and
xor
xchg
pop
jge
pop
dec
pop
fcmovu
pop
repnz
nop
jne
or
xor
dec
or
inc
mov
sub
movsl
mov
cmp
icebp
fisttpl
or
jge
movsb
mov
pop
or
pop
mov
and
cmpsl
das
adcl
xchg
lret
rorb
or
insb
aad
pop
push
mov
rclb
sbb
ja
jae
cmp
mov
mov
mov
lret
in
dec
std
xor
jns
or
sbb
cmp
insb
addb
sbb
rcr
dec
cmc
push
mov
pop
sub
subl
adc
xor
test
pushl
jno
lcall
xorl
sbb
mov
lret
xchg
cmp
or
xor
push
xchg
jle
push
lahf
js
push
and
push
dec
fcomi
sbb
mov
and
add
lods
lret
cmp
mov
in
push
jecxz
imul
iret
ss
mov
xchg
gs
sti
popa
sub
dec
out
mov
pop
mov
ss
pop
sub
dec
dec
push
xchg
mov
jp
sbb
lea
inc
cmp
jae
jmp
push
xchg
mov
cmc
leave
xchg
and
out
pop
adc
loop
mov
xchg
cltd
push
push
lret
loop
cli
jnp
add
mov
jbe
daa
mov
and
sbb
add
mov
jmp
divb
shll
push
aad
ret
sub
arpl
sti
mov
push
scas
jmp
jg
add
cmc
pop
push
fmulp
aam
int3
imul
loope
inc
mov
fcomps
xchg
cmpsb
push
mov
test
idivl
or
lods
scas
adc
or
fwait
in
imul
pop
lock
mov
and
test
adc
mov
aad
cmpsb
sub
int3
jbe
push
cmp
in
cmp
outsl
pop
popa
add
rol
imul
repz
or
rorb
lea
aas
sti
es
push
push
jo
pop
inc
into
arpl
xor
jg
repnz
mov
inc
push
push
mov
xchg
movsb
xchg
push
ja
dec
and
sbb
mov
wrmsr
lret
jg
cmpsl
js
outsb
aad
mov
icebp
push
jle
mov
push
push
mov
stos
insb
adc
out
mov
mov
mov
std
test
mov
push
in
sub
push
les
mov
inc
es
xor
sub
subb
mov
xchg
es
mov
pop
cltd
sbb
jo
es
repz
lea
pop
xlat
push
jne
repz
mov
pop
in
stos
scas
idiv
mov
jae
jecxz
fnsave
shll
dec
mov
in
lock
fimuls
int3
push
ja
mov
mov
ret
push
les
into
jmp
addr16
les
and
inc
add
jne
mov
rep
dec
mov
test
lock
js
pop
sbb
xchg
stos
fdiv
sub
enter
fidivl
sub
jo
hlt
mov
icebp
xchg
je
movsl
rcll
xor
cs
adc
xchg
in
test
imul
and
test
into
mov
mov
dec
sahf
pop
pop
mov
mov
sub
pop
dec
inc
mov
rorb
sub
sbb
or
push
mov
add
aas
or
inc
add
sbb
mov
sbb
cmp
add
and
mov
inc
sub
call
pusha
fs
fildl
in
leave
fcmove
xchg
stos
jp
cmpsl
insl
psubusw
cmp
call
mov
in
stc
xchg
or
ljmp
sbb
mov
mov
sbb
lret
push
dec
inc
daa
mov
cli
arpl
aas
and
mov
mov
pusha
iret
cltd
and
daa
inc
ss
aad
outsl
adc
sub
dec
mov
push
jb
mov
push
or
add
dec
xchg
dec
pop
popf
into
or
sub
mov
loop
lods
adc
cwtl
xor
dec
mov
xor
jnp
dec
and
rolb
jmp
inc
jnp
inc
pop
pop
push
ljmp
sarb
sub
call
xor
dec
out
out
testl
iret
pop
test
add
cwtl
outsb
or
imul
sbb
dec
jbe
stos
mov
mov
repz
in
imul
clc
test
inc
dec
cld
adc
setl
add
mov
lods
push
sti
icebp
popa
cwtl
xchg
cmp
scas
imul
push
pop
or
mov
sbb
mov
cltd
push
hlt
std
or
xlat
test
je
icebp
adc
dec
xchg
jg
bound
ret
push
add
je
es
xor
push
aas
mov
pop
popf
dec
leave
push
dec
mov
mov
shlb
cmc
xor
cmp
je
cmp
andl
lea
mov
int3
lods
aam
push
adc
ss
inc
sarb
jns
insb
xchg
das
pop
scas
sub
add
xor
rorb
faddl
cmp
les
loop
filds
out
test
mov
cmc
dec
inc
data16
aaa
xchg
or
mov
out
push
jo
sub
xor
push
lcall
mov
inc
std
je
test
push
push
sbb
xor
push
xlat
pop
jl
mov
bound
fwait
push
addr16
in
out
cltd
jae
push
adc
add
incb
cmpsb
cli
jle
insb
or
mov
pusha
ja
mov
dec
enter
cmp
push
dec
mov
and
outsb
in
jbe
popa
lret
push
pop
enter
shl
mov
dec
dec
mov
pop
cs
mov
add
xor
enter
sbb
stc
and
xchg
jmp
cmc
sbb
adcb
loope
fstpl
sahf
pop
lcall
jnp
ja
mov
into
popf
adc
adc
xor
or
mov
pop
or
inc
fists
add
mov
das
arpl
mov
insl
test
mov
aad
lahf
fmuls
push
xchg
jno
stc
jp
daa
mov
ds
xor
notb
xor
push
cmc
arpl
sub
mov
push
or
icebp
xchg
ret
lret
mov
out
lock
and
cmp
int
xchg
inc
push
dec
jo
sub
mov
pop
dec
xor
out
rorl
rcll
or
ja
xchg
adc
jnp
mov
mov
fwait
shl
lret
and
test
enter
out
bound
mov
jmp
mov
dec
add
je
xor
mov
cmpsl
mov
test
push
scas
int3
mov
lret
xchg
ljmp
xor
cli
scas
pop
mov
rclb
js
stos
mov
loop
mov
cmpsb
pop
xchg
outsl
gs
sub
pop
lods
inc
lea
arpl
arpl
sub
cmp
adc
push
imul
mov
out
cs
in
loopne
test
xsavec
push
mov
cltd
stc
xchg
fldt
movsb
mov
mov
dec
test
mul
adc
pusha
sub
dec
xchg
testl
insb
add
neg
cmpsl
sub
scas
andb
push
stos
pop
lods
add
sub
xchg
nop/reserved
sub
sbb
cmp
xchg
sahf
pop
aam
mov
ss
push
shrb
ficomps
push
ret
in
repz
xchg
test
pop
sti
dec
cli
sub
push
fcompl
fisubl
and
pop
adc
jne
and
pop
xchg
push
fisubrl
leave
ret
adc
sbb
cli
sub
or
mov
xor
sub
notl
or
xor
scas
repnz
mov
movsb
and
jne
adc
jge
imul
sub
adc
add
jb
mov
sahf
shrb
add
ja
and
lock
push
sbbb
repnz
not
int
push
fisubrs
out
cmp
cltd
mov
and
mov
adc
pop
call
aas
sarb
and
mov
jnp
dec
sub
xchg
loop
aam
xor
scas
and
xchg
cmp
bound
mov
or
bound
loop
push
cmp
in
ja
jge
imul
or
adc
das
scas
lods
repnz
inc
sub
push
jecxz
icebp
aas
jb
sbb
cmpb
shrl
rolb
and
mov
mov
mov
adc
sbb
xchg
and
dec
lock
dec
sbb
lds
and
add
xchg
les
mov
push
mov
xchg
push
mov
sbb
cmc
dec
sub
or
or
sub
test
mov
pop
ret
lea
dec
sub
pushf
xchg
pop
out
jg
fildl
cs
aam
push
mov
mov
sarl
scas
mov
push
cmp
push
cmp
jle
icebp
test
sub
push
in
xchg
daa
mov
decl
adc
imul
lods
paddsw
mov
testb
or
iret
scas
movb
jo
mov
mov
adc
pop
or
xor
xor
dec
push
pop
pop
ret
sbb
shlb
hlt
mov
sbb
pop
orl
and
shrb
mov
pusha
aad
sahf
and
mov
xchg
lret
cmp
add
fwait
pop
lret
mov
mov
mov
dec
mov
fstpl
mov
push
and
lret
mov
hlt
and
test
mov
rorl
jge
insl
movsl
loope
jbe
jae
insb
xor
mov
mov
dec
fsub
jmp
mov
nop
sbb
xchg
adc
cld
nop
dec
push
adc
sbb
adc
xor
insl
dec
dec
testl
mov
repz
adc
rcrl
jbe
cwtl
pusha
loopne
in
hlt
call
lods
xchg
insb
xlat
fmuls
inc
push
mov
sub
and
shlb
les
loop
test
mov
movsb
adc
outsb
test
push
mov
mov
mov
dec
sbb
aas
lock
sub
ret
movsb
adcl
es
jno
sbb
sub
jp
aas
or
imulb
add
dec
sar
add
imul
push
jb
push
sbb
sbb
jo
aam
mov
movsl
addb
dec
aaa
js
insb
ret
mov
shlb
jmp
inc
rorb
fnstsw
ds
repnz
push
je
fisttpl
and
mov
xor
dec
or
and
popf
imul
scas
jecxz
loop
xchg
and
fwait
xchg
scas
sub
out
call
jne
test
scas
je
sub
jl
es
and
inc
mov
adc
lods
int
xlat
js
jl
movsl
push
pop
sbb
dec
dec
sahf
call
jns
ret
jg
jne
inc
xlat
or
mov
sub
mov
test
mov
dec
shr
sldt
mov
fcmovnbe
and
sub
loop
testl
push
aam
call
xorl
cli
sub
fs
add
adc
inc
mov
mov
es
dec
jmp
lods
je
lcall
sbb
xor
js
add
xchg
cmp
pusha
shrl
xchg
fbld
loopne
cmp
sub
aad
adc
inc
mov
dec
shl
dec
jae
sbb
mov
lods
rorb
and
cmc
push
cmc
out
jl
mov
jp
pushl
dec
sbb
mov
data16
inc
jp
roll
dec
dec
imull
jne
push
inc
test
dec
lcall
mov
adc
decb
mov
outsl
pop
js
or
lea
daa
pusha
inc
sbb
gs
xor
dec
ljmp
mov
sub
bound
dec
sub
cmp
das
mov
icebp
flds
jecxz
jge,pt
loope
call
push
fadds
push
dec
sub
pop
popf
sti
add
push
stc
mov
cltd
loop
mov
cwtl
repnz
push
cmp
jo
pop
jbe
mov
mov
insl
push
lods
jp
mov
cmp
dec
faddl
mov
pop
and
inc
jge
mov
stc
pop
cwtl
adc
repz
xorb
or
fwait
notl
sub
inc
cmp
push
mov
xor
mov
iret
dec
pop
out
lds
mov
mov
out
fdivp
call
aam
sbb
das
xchg
mov
gs
and
insl
sub
mov
mov
mov
adc
mov
mov
mov
pop
int3
xor
mov
cmc
js
inc
aas
or
mov
shll
addb
pop
push
mov
bnd
jg
adc
dec
fdivrl
inc
or
pop
jmp
xchg
push
notb
fadds
fdivl
mov
popf
sbb
fucomi
notl
sarb
daa
mov
xchg
hlt
mov
pavgw
adc
sub
xor
jmp
stos
or
jg
rolb
cmp
dec
jno
pop
xor
inc
lret
repz
push
sti
cmpsl
ss
ljmp
daa
popa
pusha
ja
xor
nop
xchg
gs
push
lods
in
js
dec
mov
cmpsb
cwtl
incb
mov
jo
loope
shrl
repnz
scas
inc
scas
lret
in
inc
push
int
cmp
rcll
sub
loopne
cld
gs
pop
lods
scas
stos
mov
mov
inc
sub
push
push
push
jns
mov
int
insl
int3
cmc
pop
test
lahf
cmp
imul
pop
push
mov
cmpsl
mov
loop
cmpsb
sarb
sub
test
mov
in
and
ret
mulw
in
dec
xchg
mov
cmp
jnp
cmp
xor
sbb
icebp
outsl
ret
push
xchg
xor
push
das
imul
stos
mov
sub
jmp
dec
subl
cmp
shrl
enter
cmpsl
aaa
inc
scas
and
daa
add
out
fldt
pusha
iret
xchg
sahf
push
dec
loope
les
push
mov
push
jecxz
hlt
lds
push
call
mov
adc
ds
lds
ret
bound
in
testb
sbb
aad
sub
mov
xchg
xchg
ret
push
les
shrl
stc
push
push
aad
ror
mov
stos
cld
push
cmp
adc
add
pop
subb
test
mov
push
inc
das
stc
ret
daa
mov
xchg
movsb
and
jl
cmpsl
cli
testl
int3
stc
dec
pop
pushf
inc
mov
jb
add
ret
outsb
enter
mov
jbe
test
xchg
cld
mov
xchg
repnz
dec
push
rcr
rorl
popf
jecxz
data16
pop
in
lret
adc
out
stos
dec
int3
lret
push
xchg
xor
lahf
pop
push
inc
fsubr
test
inc
mov
pusha
das
dec
cmp
cmp
pop
or
popf
and
adc
dec
or
add
loopne
in
sbb
add
cltd
call
push
xchg
fsubl
imul
sbb
cmp
ret
lea
cli
mov
in
cmp
cli
leave
cmp
imul
movsl
push
or
jl
lret
mov
jecxz
cltd
jnp
aam
pushf
dec
bound
mov
and
inc
sub
sub
xor
cmp
divl
aad
dec
cmp
sahf
in
bound
dec
and
jecxz
movsl
loopne
adc
xor
rcl
popf
jp
cmpsl
loopne
pushf
mov
xchg
add
enter
popa
imul
add
cs
push
dec
dec
mov
push
mov
dec
repz
xchg
xlat
cmp
cmp
outsb
push
shll
mov
aad
sbb
popl
outsl
aad
fidivrl
pop
jmp
dec
sbb
xchg
push
ficompl
inc
fmulp
test
and
data16
mov
xchg
xor
mov
adc
das
pop
out
cwtl
or
jle
loope,pt
subl
pushf
int
mov
jp
jns
lahf
enter
sub
icebp
jecxz
push
int3
ret
enter
or
xor
dec
sbbb
push
push
mov
in
hlt
adc
in
xchg
sti
repnz
movmskps
push
js
add
push
aam
sbb
mov
out
sub
sub
je
pop
lahf
sti
cmp
rorl
jecxz
shrb
jge
add
inc
xor
inc
shrl
cmp
aam
sbb
aas
cli
pop
popl
add
jo
fs
add
out
mov
stos
ror
outsb
popa
pop
xchg
xchg
popf
adc
mov
imul
or
in
out
pop
mov
dec
testl
aas
decb
xchg
ja
stos
inc
xchg
xor
mov
push
fsubs
jmp
add
sub
std
sbb
xor
jmp
or
xchg
and
pop
in
inc
mov
jmp
mov
test
xor
pop
jno
mov
pop
dec
xlat
push
pop
ja
test
movsl
pop
sti
sbb
nop
sahf
sbb
and
test
insb
sarl
and
in
add
arpl
shll
js,pn
and
push
add
xchg
push
in
mov
popa
pop
icebp
jo
and
rcrl
iret
lret
lcall
cmp
popa
ss
fsts
push
dec
pop
sbb
pushf
je
add
dec
adc
mov
je
aam
ljmp
jge
and
mov
sub
call
rcll
movsb
lret
not
cmp
sub
subl
push
inc
in
cmp
mov
std
and
and
repnz
cmp
sbb
jae
cmp
pusha
js
mov
insb
push
lods
pop
fstpl
ja
clc
fsubrl
dec
sbb
cmp
aaa
daa
shrl
xchg
sub
add
jns
inc
push
dec
cmp
mov
mov
pop
bound
pop
mov
mov
mov
adc
bnd
test
ret
cltd
jmp
or
sub
les
cwtl
jb
inc
jle
pop
or
jmp
sbb
cwtl
mov
pop
scas
push
mov
inc
sub
push
lret
xchg
xchg
fs
cld
enter
loopne
fnstsw
cmp
pop
mov
push
jbe
add
mov
dec
mov
add
push
sbb
bound
sub
xor
jl
repz
dec
in
sbb
and
in
mov
pushf
call
outsb
movsl
sbb
testb
outsb
xor
leave
mov
jp
movsl
jle
ret
movsl
jnp
hlt
dec
adc
enter
outsl
cmpsl
cli
and
xchg
xor
out
xor
adc
lods
or
fcomi
mov
loopne
scas
xchg
std
and
mov
cs
dec
decl
push
into
stos
outsb
xor
arpl
movsl
and
mov
outsb
push
push
pop
add
cld
jne
sarb
iret
popa
iret
sub
or
dec
icebp
pop
stc
loope
inc
test
arpl
cmpsl
fistl
call
mov
dec
in
ljmp
sti
dec
xchg
adc
add
cltd
jecxz
out
xor
or
mov
adc
push
mov
xchg
jp
jb
test
ljmp
or
pop
dec
notb
lahf
inc
xor
mov
jno
jl
sbbb
xchg
jge
xchg
mov
rorl
clc
mov
pop
dec
xor
dec
and
in
add
aaa
inc
xchg
sahf
sahf
pop
cmp
sbb
in
dec
cmp
pushf
in
inc
into
int3
mov
xchg
mov
cltd
push
sub
jae
outsb
xor
sub
xchg
les
inc
dec
outsl
sti
push
jb
outsl
shrb
loop
xchg
jg,pt
or
cwtl
cmp
or
mov
into
mov
cmp
mov
rcll
in
mov
xor
pushf
sbb
xchg
insl
mov
sahf
add
fidivrl
inc
sbb
cltd
adc
mov
jns
inc
lock
cmp
dec
loopne
test
mov
test
std
nop
mov
sbb
sub
lods
lcall
xchg
mov
js
pop
xchg
inc
aad
lahf
roll
insl
mov
clc
sbb
jne
jl
fs
mov
mov
movsl
xchg
mov
incb
mov
repz
mov
xor
cmp
or
add
cmpsl
jmp
xchg
or
lods
mov
push
mov
mov
push
fnsave
mov
in
or
adc
fisubrs
aas
movsl
in
outsl
mov
pop
jo
lret
xchg
or
xor
xor
daa
andb
leave
pop
jmp
mov
push
shll
xor
loop
iret
loop
outsl
mov
and
lods
cmc
and
and
dec
mov
push
mov
stc
and
and
negl
xor
ror
jae
fcomp
pusha
shrl
or
out
out
std
das
clc
sbb
idivl
jo
inc
loope
jae
xor
inc
cmp
cmp
mov
jno
subb
mov
das
ret
hlt
mov
sbb
out
sub
gs
das
mov
cmp
push
mov
sahf
sub
jge
test
notb
xchg
add
shr
in
jp
lods
daa
ret
out
mov
roll
pop
int3
and
popa
sbb
xchg
test
jbe
lods
sbb
push
mov
and
jmp
xchg
pop
in
lods
stos
adc
subb
mov
pop
sbb
fs
cmc
cld
jg
jno
push
std
dec
sbb
push
push
inc
outsb
jecxz
mov
mov
push
add
daa
add
movsl
cmp
in
rcrb
dec
xchg
test
gs
sub
nop
cmp
je
mov
into
xchg
mov
das
pushf
dec
inc
cmpsb
jbe
call
outsl
sahf
jb
das
sarl
ret
or
and
cmp
xchg
xchg
push
int3
clc
lock
jp
push
xor
mov
cmc
iret
loop
dec
dec
outsb
cli
repnz
or
mov
iret
sbb
inc
cmpsb
bound
mov
cmc
pop
add
sub
outsb
mov
fisubs
or
mov
dec
inc
mov
gs
cmp
or
insb
fs
test
mov
into
and
push
mov
inc
pusha
push
out
les
in
stc
fdiv
out
pusha
push
out
in
mov
je
cmp
ds
push
pop
scas
pop
mov
or
test
jmp
dec
scas
mov
or
and
pop
pop
imul
or
jg
pushf
push
lods
mov
inc
inc
mov
or
rorb
inc
int
or
clc
mov
insl
push
iret
out
dec
xchg
xor
jmp
movsl
and
dec
pop
icebp
imull
jp
fisttpll
xchg
push
mov
popf
cmp
jp
cli
add
repz
pushf
movsb
test
test
pop
jecxz
in
cmp
xor
inc
push
mov
or
sti
into
loope
stc
ss
add
jnp
icebp
adc
push
push
sub
or
mov
dec
xor
xor
adc
adc
fwait
iret
loopne
mov
jmp
shlb
cmpsl
sbb
rorb
popa
int3
scas
js
hlt
mov
mov
xchg
jg
scas
jmp
xchg
cmp
push
sub
lods
pop
cwtl
inc
pusha
lds
jno
lcall
push
sub
push
mov
mov
xchg
mov
hlt
and
cmpsb
pop
mov
lods
out
sbb
mov
inc
mov
fcmove
add
gs
nop
and
cmp
mov
push
std
mov
push
mov
out
test
and
mov
cmpsb
jle
adc
sti
cmpsl
sbb
sti
scas
or
jle
stc
jae
shrb
dec
cld
fimuls
pop
lods
shlb
dec
cmpsb
iret
push
stos
add
mov
or
sub
mov
mov
xchg
adcl
push
in
push
adc
addl
pop
cmp
inc
or
pop
cld
xor
sbb
mov
mov
inc
in
push
cltd
jecxz
pop
int
sbb
sbb
xchg
mov
pop
and
out
lret
lea
inc
fs
sub
sbb
ljmp
cmp
lret
inc
lds
or
cmp
inc
je
dec
jmp
cs
cwtl
clc
mov
xchg
repnz
inc
fdivrl
pushf
mov
and
fxch
push
ds
mov
jns
hlt
xor
shlb
push
js
xor
shlb
fnstenv
adc
mov
or
mov
inc
xor
sbb
push
cmc
in
imul
les
fistps
jo
sbb
out
pop
cmp
sub
mov
mov
clc
cmp
stos
sbb
add
in
cmc
scas
imul
jae
ret
cmpsb
inc
pop
jp
bound
cmc
mov
adc
les
xchg
shll
inc
and
jns
test
and
hlt
pop
adc
mov
lds
insl
push
stos
xor
dec
imul
insl
xchg
jp
xor
add
mov
shll
mov
dec
into
jmp
stc
mov
in
pop
mov
sahf
or
mov
lret
and
jle
xor
add
jge
pop
mov
pop
hlt
dec
aad
lret
pop
neg
or
das
cmp
mov
loop
loopne
nop
inc
cld
sahf
das
lock
mov
jb
shll
xchg
repz
jg
roll
inc
sbb
stos
mov
sar
mov
sub
test
inc
dec
insb
lret
or
sub
jne
pusha
add
and
push
imul
mov
in
sub
push
pop
pusha
cltd
out
add
insl
sahf
xchg
fdivs
inc
pop
in
enter
xchg
aaa
pop
mov
in
inc
inc
aas
sbb
jbe
xchg
decb
loopne
push
popf
movsl
sbb
movsl
in
sahf
cld
lahf
stos
push
jp
adc
fdiv
addr16
ret
sbb
push
ljmp
mov
mov
out
imull
pop
out
aas
mov
sbb
or
das
add
sub
xchg
aam
mov
call
adcb
mov
es
gs
jo
jbe
jbe
call
in
les
push
mov
jg
xor
push
movsl
and
push
push
and
or
mov
cmp
adc
mov
pop
ror
inc
mov
inc
lock
jns
int3
jp
mov
or
rcrb
sbb
xchg
std
adc
xor
popa
jge
adc
das
or
xlat
jo
in
mov
in
js
and
movsl
add
ffreep
sbb
mov
and
in
popf
jl
xchg
loop
data16
std
popf
aam
arpl
vmovsd
adc
lods
cld
sbb
repnz
fldl
jge
nop
jmp
xor
rcrb
insl
loope
mov
add
loope
out
subl
insl
inc
stos
jge
add
mov
xorb
call
add
ss
stc
cmp
shl
mov
repnz
mov
lods
inc
sbb
xchg
aas
sub
mov
bound
pushl
sbb
xor
pop
movsl
ljmp
sub
and
jae
pop
fcmovu
mov
sbb
lods
push
pop
lea
pop
les
xchg
mov
inc
xorl
jg
repz
dec
rorb
sbb
fcomp
out
ljmp
cltd
mov
pop
je
jmp
mov
mov
adc
lock
pop
sbb
xor
hlt
arpl
call
lea
or
dec
mov
or
aad
pop
ja
sahf
repz
pop
mov
jmp
loop
jp
jg
xchg
jp
dec
xor
mov
cmp
xchg
cmp
push
pop
mov
jae
fidivs
or
and
or
popf
cmp
test
and
fsub
inc
push
test
and
pop
mov
pop
pop
or
les
adc
cs
mov
out
mov
or
jo
xchg
ret
pop
push
fisttpl
scas
orl
lea
sti
into
pop
jmp
sub
fcmovnbe
xor
cmp
into
iret
imul
push
pop
inc
mov
pop
inc
add
add
cmp
clc
dec
mov
mov
mov
test
jp
enter
in
or
mov
fcmove
icebp
push
ret
dec
ljmp
gs
adc
mov
ret
arpl
xor
sub
std
jne
jp
xor
xchg
or
jb
jecxz
or
cmpsl
add
adc
ret
outsb
pop
daa
and
lret
xchg
xor
inc
push
sbb
dec
insb
sbb
out
cli
mov
add
addl
xor
cld
ret
mov
jecxz
filds
dec
fstps
test
cltd
add
in
pop
xor
mov
push
jl
gs
ficoml
push
es
into
shlb
sbb
enter
adc
xchg
addr16
mov
mov
into
cmp
push
cli
jle
cmp
mov
xor
fidivrl
sbb
imul
mov
push
out
into
push
enter
mov
in
fstpl
scas
out
fstl
xchg
jb
sbb
mov
cmpxchg
add
and
add
fdivrl
xorb
dec
arpl
adcl
mov
fcoml
jge
out
xor
jo
cmpsl
cmp
das
test
test
mov
out
and
cmpsb
dec
int3
or
std
jmp
push
xor
into
inc
nop
jno
pop
pop
ficoms
lret
dec
inc
jmp
repz
movsl
jb
shll
iret
jnp
sub
push
cli
lods
lret
push
mov
popf
adc
push
shll
mov
leave
stc
incb
dec
and
dec
xorl
ficoms
mov
repnz
cltd
movsl
and
lods
dec
fwait
sbb
jb
popa
scas
hlt
jnp
loop
mov
mov
out
rorl
inc
stc
mov
fcoml
outsb
addl
call
lahf
scas
fstps
sarl
es
cltd
or
je
outsl
jg
aam
stos
pop
in
ja
icebp
lahf
lret
mov
push
iret
xor
dec
or
fimull
sbb
add
ret
push
icebp
cmp
int3
dec
aaa
test
sub
stos
cld
mov
outsb
pop
xor
adc
dec
push
cmp
mov
or
push
js
test
mov
mov
sbb
jno
push
or
xchg
push
jg
mov
outsl
or
fcmovnu
jae
jbe
inc
in
sbb
and
or
mov
popf
jb
add
mov
inc
add
inc
inc
inc
mov
ja
xlat
sub
mov
subb
inc
adc
jnp
adc
add
orb
pop
sub
jmp
inc
dec
insl
in
push
pop
das
stos
push
cmp
rcr
adc
je
scas
lods
ret
popa
pop
mov
mov
push
lret
mov
add
cmc
test
cmp
xchg
in
xchg
dec
dec
outsb
pop
pusha
cmpsb
in
push
sub
lcall
mov
std
inc
pop
push
xchg
lods
dec
adc
jmp
push
rcrb
iret
sub
rol
fists
sub
push
or
inc
test
lret
cld
add
mov
aad
push
inc
adc
or
cmpsl
jo
mov
filds
dec
mov
fstp
rcrl
pusha
jp
pop
fldcw
leave
notb
sub
xchg
filds
test
addr16
mov
mov
jle
adc
push
add
dec
xor
mov
inc
inc
es
inc
fcmovnu
rcl
or
dec
cmp
lds
lock
call
arpl
mov
push
jmp
imul
jb
int3
push
out
int3
xchg
fiaddl
push
arpl
xchg
lret
push
ja
sbb
je
pop
and
fstl
test
or
jp
imul
xor
andb
jnp
adc
xchg
js
push
push
lret
pop
cmp
int3
insb
jle
pop
jo
insb
jo
packuswb
call
pushl
pop
and
mov
les
push
insb
mov
aaa
pushf
les
xchg
inc
xchg
fmull
int3
xchg
stos
mov
cmp
jge
ljmp
sbb
scas
rol
adc
mov
aaa
xor
das
jo
sub
dec
cmpsl
jno
xlat
scas
inc
add
mulb
test
mov
icebp
add
jmp
mov
mov
jbe
xchg
dec
jmp
cwtl
push
icebp
push
mov
cmc
flds
lcall
stc
jne
dec
xchg
adc
push
and
cwtl
adcl
jmp
fidivs
fcomp
daa
test
add
dec
sub
ljmp
mov
push
xor
movsl
jge
push
stos
inc
mov
enter
mov
dec
cmp
and
insb
adc
hlt
mov
cmp
fwait
inc
pushw
popf
mov
data16
dec
fdiv
shll
lahf
jo
cmc
mov
xor
js
bound
and
cmp
sbb
loop
inc
rcrb
push
pop
xchg
adc
movsl
fcoml
cmp
cmp
sub
cmp
mov
cmp
and
nop
es
in
xchg
cmpsb
subl
pop
mov
add
mov
aaa
mov
mov
mov
push
rclb
call
and
mov
mov
popa
mov
xchg
sbb
push
repnz
or
outsl
shr
mov
cmp
mov
cmpsb
dec
or
or
lock
inc
or
sahf
mov
pop
xor
aas
cmp
xchg
pop
and
les
sbb
xchg
fimull
jmp
xchg
or
mov
push
xlat
aam
pop
mov
ja
sub
ss
mov
jg
aam
pushf
insl
and
hlt
adc
jne
and
lods
and
and
jl
sbb
mov
fsubrl
lods
sub
mov
stc
sti
sahf
push
jl
add
jns
dec
jnp
xchg
jae
and
mov
fstps
shlb
les
andb
lcall
ss
mov
mov
and
adc
push
sti
repz
inc
imul
mov
adc
add
sahf
push
call
es
sbb
cmpsb
pushf
gs
lcall
in
ret
pop
mov
mov
xchg
mov
out
xor
test
out
enter
mov
sub
xchg
rcrb
inc
mov
xchg
rclb
and
jl
insb
jae
imul
out
pop
pop
xchg
pmuludq
mov
nop
jb
loop
sub
in
pop
mov
pusha
js
loope
icebp
lea
ljmp
aaa
repnz
lea
xlat
jmp
addr16
jb
xchg
inc
and
mov
outsl
dec
fmull
bnd
repz
arpl
fistpll
jp
jg
aam
mov
data16
adc
mov
int3
sub
add
data16
mov
cmp
cltd
push
inc
aaa
or
sbbb
mov
mov
push
ljmp
nop
cmp
and
lock
in
push
cvtdq2ps
jecxz
sbb
xor
rcll
xlat
add
push
add
push
insl
jno
xor
data16
adc
push
cmpsl
cmp
pop
inc
sbb
jo
negb
into
sub
inc
dec
xchg
mov
cld
mov
push
dec
mov
ljmp
push
icebp
jo
pop
sub
dec
inc
roll
fcoml
js
push
fists
movsl
fwait
aas
push
ja
aaa
push
dec
sahf
push
into
pushf
stc
repz
decb
data16
adcb
inc
orb
pop
shll
in
sbb
in
add
push
push
jo
cmp
inc
enter
in
mov
add
pusha
mov
push
pop
dec
lret
xor
adc
in
sbb
es
pop
xor
std
pushf
ret
stc
fwait
xor
aaa
ss
fs
rcl
jmp
movsb
xor
arpl
xchg
jle
test
mov
jecxz
popa
pop
inc
dec
lar
inc
rcrb
ret
inc
aaa
cmpsl
push
sub
ja
jbe
pop
mov
xchg
push
in
shl
sub
mov
mov
push
inc
test
mov
les
and
sbb
stos
out
xor
lcall
cmp
repnz
inc
addb
push
mov
lea
mov
jg
incb
mov
pushf
jecxz
inc
lahf
jge
mov
cwtl
mov
add
dec
outsl
jl
lods
inc
fsqrt
aam
negb
fdivrp
mov
push
mov
out
ud1
loopne
mov
or
jno
mov
out
aaa
arpl
jbe
ror
push
pop
das
pop
push
add
or
imul
pop
mov
jge
cmp
mov
inc
lds
scas
inc
mov
mov
adc
lock
sbb
jo
xor
rorb
mov
ret
cwtl
lea
add
fs
imul
jae
jg
xorl
lret
xchg
jae
pop
fsubs
mov
shll
cmp
aas
inc
push
sahf
pushf
loop
stc
sbb
adc
inc
in
loopne
push
in
cs
and
inc
adc
xor
and
adc
push
inc
jno
push
jo
jb
add
inc
push
cs
sbb
and
inc
cmpsb
xchg
xor
mov
nop
lcall
cld
in
mov
xchg
arpl
mov
push
arpl
adc
mov
es
pop
jle
sbb
cltd
cmp
cmp
out
push
enter
lahf
adc
add
dec
inc
jl
xor
ret
lock
push
pop
cmpsl
add
and
add
mov
mov
xchg
push
cmp
push
sub
or
mov
std
addb
mov
mov
mov
pushf
lcall
pop
test
flds
mov
int3
mov
inc
nop
and
or
dec
sbb
xchg
add
cmp
bound
js
push
push
cmp
aaa
pushf
mov
lods
adc
dec
pop
or
loopne
mov
pop
push
cmp
aas
adc
cli
mov
int
jns
cmp
cmp
xor
xchg
add
push
dec
inc
inc
js
mov
mov
aaa
and
xor
pop
sahf
lea
cmp
jmp
arpl
xor
subb
or
sahf
mulps
fsubp
int
inc
sub
and
dec
dec
lret
sbb
mov
icebp
movsb
or
out
cltd
cli
popa
arpl
mov
pop
add
fwait
outsl
jmp
jl
inc
and
cltd
int
out
cmpsl
fmuls
or
arpl
inc
loopne
or
sti
inc
lea
dec
xchg
pop
fldt
in
and
xchg
cli
inc
xchg
mov
nop
sub
dec
push
stos
xchg
cmp
sub
xchg
mov
push
push
rcl
pushl
shrl
and
ret
sti
mov
js
push
xlat
pop
cmp
xor
cmpsb
cs
push
adc
inc
ljmp
ret
mov
inc
ja
fstl
mov
dec
in
dec
mov
ljmp
les
sarl
in
mov
add
nop
cltd
jp
cli
jmp
insl
jl
sub
dec
in
stos
adc
mov
sub
or
ss
xor
orl
xor
sbb
test
aas
dec
dec
sub
sahf
push
scas
gs
repnz
retw
scas
mov
pop
mull
cmp
clc
mov
mov
bound
mov
push
nop
fs
add
aas
jns
jnp
mov
icebp
or
inc
out
lds
iret
popa
or
fwait
sbb
mov
xchg
cmp
or
sub
int3
cs
push
dec
js
das
xor
imul
mov
cs
sub
rorl
adc
ret
push
mov
shrl
xor
pop
adc
xchg
dec
int
add
imul
es
inc
fistps
push
mov
pop
cli
adc
movsbl
subb
and
and
mov
gs
xor
adc
dec
rclb
cmp
mov
rclb
ret
lret
ss
aas
rorb
mov
xchg
xchg
inc
xchg
mov
xchg
rol
idiv
cmp
pop
push
adc
ret
jmp
pop
add
movsb
int3
fistpl
mov
out
xor
je
nop
cmp
mov
pop
ja
scas
lock
loope
aaa
lock
and
xor
movsl
dec
jl
lods
insl
insl
cmc
mov
rclb
mov
xor
sbbb
or
jno
cmpsl
loope
pop
mov
mov
adc
sub
mov
mov
add
jno
in
pop
cmp
into
mov
mov
lods
mov
lods
test
in
dec
cmp
lods
xlat
cmp
popf
cmpsl
mov
cmp
cltd
push
or
cmp
pop
adc
xchg
adc
cwtl
stos
or
fsubp
insb
jmp
push
xor
les
test
sbbl
jle
loope
jbe
sub
mov
popf
mov
popf
jns
xlat
pop
or
insb
add
rol
pop
jge
and
es
and
sti
sbb
or
pop
jle
ss
sub
outsb
call
and
inc
or
and
shlb
adc
mov
mov
data16
cltd
add
js
out
jno,pn
mov
mov
mov
lahf
or
fsubrs
in
sbb
cltd
lret
sbb
push
ja
aam
push
cmpsl
inc
cmp
scas
lahf
fstpl
mov
imul
ss
inc
std
addr16
popa
movsl
jb
and
daa
popf
pop
pop
add
mov
sub
dec
pop
lcall
add
and
or
and
jl
stc
rcrl
pop
mov
mov
pop
popa
cmc
xchg
mov
inc
dec
pusha
test
cwtl
data16
div
jg
test
rcrl
mov
mov
push
inc
aaa
sar
mov
sbb
ficoml
popa
in
inc
or
popa
lds
fsubrp
dec
dec
mov
insb
cli
fcmovne
cvtps2pi
data16
mov
cli
cld
jnp
inc
and
aad
adc
or
shrl
mov
cmpsb
jmp
mov
pushf
movsb
icebp
mov
cmc
int
ret
xchg
testb
or
lods
cld
mov
shlb
lahf
out
push
mov
orl
in
mov
shll
int3
in
arpl
xchg
cmp
sub
pop
fisubl
mov
xor
movb
stc
push
dec
in
popa
jae
and
in
stos
aam
dec
sub
jp
push
shrb
fs
xchg
int3
fnstcw
mov
pop
xor
mov
pop
jnp
dec
loope
adc
mov
xchg
push
scas
sbb
repz
mov
sub
xor
lahf
jns
lea
jb
ret
mov
push
xchg
insl
bnd
shr
mov
sub
cmp
imul
xor
pop
incb
je
test
jns
ss
nop
cmpsb
jl
sbb
iret
xchg
and
push
cmpsb
rorl
push
aam
aaa
jns
std
mov
pop
push
mov
lea
mov
je
popf
movsl
sub
sar
mov
jb
push
sti
jg
xor
or
or
ds
and
pop
repz
cs
and
in
mov
mov
sarb
add
jbe
aam
es
aaa
add
add
imul
add
rcrl
jb
shl
and
ret
pop
into
dec
aad
ljmp
gs
adc
fdivs
and
hlt
or
dec
arpl
fstl
inc
jbe
adcl
out
add
lods
xchg
movl
push
push
pusha
out
sub
rorl
xorl
xor
loope
insl
out
fcomp
mov
out
adc
rclb
call
jl
sub
xchg
jmp
adc
push
lret
xor
lods
rcrl
mov
push
sbb
fstps
xor
cs
mov
rolw
mov
xor
mov
aas
daa
ss
pushf
adc
push
adc
mov
inc
fstpt
int
outsb
and
lods
cmp
sahf
xor
sbb
fdivs
pusha
mov
xor
push
test
lods
inc
repnz
push
cmpsl
pusha
push
push
or
int
push
out
mov
fisubs
adc
sub
out
lahf
mov
cmpsb
mov
in
mov
cli
enter
sub
es
les
out
add
or
int3
jae
in
ret
push
dec
lret
push
leave
dec
outsl
loop
loop
and
sub
pop
sub
xor
outsb
jl
or
movsl
rorb
test
fistps
arpl
lahf
or
xchg
mov
loop
jge
push
adc
mov
sub
sti
mov
decl
ja
mov
xor
and
test
mov
xchg
xor
push
xor
cwtl
inc
sub
mov
sbb
cwtl
mov
arpl
scas
in
inc
jp,pn
sti
jge
xchg
call
repnz
add
and
mov
push
push
jecxz
push
mov
fs
outsl
fstpt
mov
mov
leave
fidivrl
mov
push
fwait
sbb
and
shr
sub
inc
or
pop
pop
popf
xchg
push
fcomip
jl
and
add
test
xor
daa
out
neg
rcll
xchg
repnz
imul
fxch
pop
mov
xor
xchg
pushf
dec
repnz
cwtl
jp
and
decb
sub
inc
es
jp
test
ret
mov
or
push
fcoms
pop
cmpsb
mov
jns
mov
pusha
into
mov
mov
subl
ljmp
hlt
cltd
xchg
sti
mov
fmuls
fcompl
and
and
cmp
jl
add
nop
icebp
fstps
or
dec
fildll
daa
inc
mov
inc
push
or
fldenv
sub
push
nop
mov
cmp
pop
inc
cmp
scas
sar
lcall
cmc
jg
sti
xchg
fwait
ds
xchg
sbb
pop
shlb
inc
pop
mov
adcb
jmp
or
adc
fstp
les
xor
int
repz
clc
js
popf
sbb
mov
test
jns
jns
out
pop
add
inc
push
jns
mov
jle
push
test
pop
adc
mov
es
adc
nop
add
fisubl
insb
je
adc
mov
ds
ja
aad
xor
lahf
stos
shrl
jae
and
dec
mov
inc
mov
adc
sbb
push
fwait
sub
push
push
jl
push
pop
push
pop
mov
in
jb
fistl
xor
mov
pop
cmp
mov
lds
push
stos
sti
scas
pop
mov
test
fisttpl
rclb
xchg
xchg
lcall
mov
mov
and
add
jb
add
popa
outsl
rorb
fsubr
test
pop
jmp
fcom
aam
notl
or
test
push
daa
stc
add
jmp
ficoml
call
mov
sub
xchg
sub
into
into
push
jmp
cs
scas
mov
dec
fsts
addr16
lret
sub
mov
pusha
fstps
inc
aas
stos
or
outsl
push
js
mov
cmp
sbbb
shll
insb
adcb
xchg
mov
mov
sbb
add
xor
push
pop
rolb
pop
jp
sbb
cmpsb
jecxz
cmpsl
stos
mov
mov
movsb
jp
cmp
cmp
mov
scas
jmp
cmp
jl
push
arpl
mov
fsts
inc
daa
shll
push
or
loop
es
and
in
jmp
cmc
cwtl
jge
cltd
int3
cmpsb
sbb
arpl
cmp
mov
rorb
xchg
pop
cld
xor
mov
ja
cld
dec
push
mov
add
and
mov
push
xchg
xchg
mov
aas
sbb
pop
mov
mov
and
out
cli
push
or
lds
adc
in
xchg
sub
jns
arpl
lods
push
fstpt
adc
jle
and
xor
jno
addr16
aam
xlat
xchg
xchg
lcall
sub
mov
mov
fildll
adc
rcrb
mov
aas
ret
mov
inc
pop
xor
cmpsl
lret
dec
inc
push
jne
jmp
fisubs
jne
push
xchg
loopne
cmp
in
add
mov
hlt
or
jo
xor
call
stos
or
stos
mov
lods
out
std
inc
je
dec
or
leave
movsl
pop
pop
sbb
lret
rorl
lods
pop
add
jp,pn
jae
movsl
xor
and
pop
mov
push
in
lcall
cmc
bnd
jo
loopne
xchg
test
lods
and
inc
in
push
test
pushf
xor
adc
ficompl
inc
bound
filds
mov
lahf
jge
into
mov
jno
cmp
inc
mov
insb
pop
loope
mov
fnstenv
loope
sub
std
inc
mov
inc
and
aad
push
mov
ret
add
push
push
cmp
push
sub
dec
das
inc
sar
mov
inc
hlt
cmpsb
mov
cmpl
push
sub
sbb
rorb
and
or
and
xchg
xchg
add
fldt
repz
gs
adc
pop
and
loope
push
mov
les
sbb
and
cmp
pop
cmp
xor
adc
cmpl
test
inc
xchg
dec
adc
pop
out
in
mov
pop
fidivs
divl
push
dec
pop
cmp
out
xchg
scas
or
sub
xchg
inc
mov
xchg
or
adc
fidivrl
mov
cmc
nop
or
popa
jle
ficomps
sbb
dec
pop
inc
in
xchg
push
adc
inc
jle
xchg
mov
call
sbb
in
or
outsb
inc
cld
pop
iret
inc
dec
sbb
push
adc
dec
or
or
jle
and
mov
daa
cmpsl
adc
icebp
push
mov
jge
es
outsl
push
xor
mov
push
inc
and
adc
sbb
fwait
jns
out
mov
int3
aam
jg
xchg
cmp
mov
cltd
cmp
adc
push
sub
adc
push
sub
adc
cmpsb
push
add
in
test
out
loopne
and
filds
daa
shll
mov
jns
jo
mov
add
in
adcl
or
pop
cwtl
adc
push
fcomip
jge
dec
jb
in
mov
add
xor
popf
out
lret
aaa
arpl
rcrl
mov
adc
cs
or
andb
fistps
mov
add
movsb
repnz
lahf
jmp
jle
sub
mov
cmpb
jecxz
stos
xchg
pop
test
sarl
jo
sbb
les
mov
mov
push
ret
mov
push
iret
rcl
jge
daa
inc
loope
scas
inc
ss
loopne
and
cmp
mov
fisttpl
adc
push
xor
and
xor
in
fcoms
dec
loopne
pop
out
mov
stos
mov
mov
mov
aas
xor
jle
int
xor
push
les
mov
jns
or
loop
shll
mov
shl
xor
xor
aam
inc
mov
jns
adc
push
adc
imul
add
mov
lods
add
cmp
push
sub
decl
jge
add
mov
xchg
out
out
scas
mov
jle
movsb
fcmovnu
mov
jp
xor
and
testb
sbb
mov
add
loopne
mov
inc
jo
inc
mov
lods
ljmp
mov
es
xor
cmpsl
lods
sbb
and
push
into
dec
xor
stc
mov
sub
faddl
jne
push
xor
jno
addl
add
rorb
jecxz
xor
adc
adc
aam
dec
mov
jb
sbb
xchg
xor
or
je
jmp
xchg
jge
sub
jg
pop
fistpl
pop
push
sub
jp
ljmp
xchg
mov
movsw
clc
or
xlat
xchg
pop
es
xchg
pop
inc
cmpsb
fidivs
movsb
popf
enter
stc
inc
inc
dec
push
dec
cltd
ret
jg
inc
mov
test
fwait
out
pop
idiv
fdivrl
mov
iret
imul
mov
sub
lods
add
test
int3
push
jg
cli
mov
add
push
pushf
push
add
iret
sbb
or
mov
in
lret
jmp
sbb
ljmp
mov
pop
filds
adc
aas
mull
or
push
mov
idivl
or
ficomps
das
jge
adc
mov
jmp
xchg
test
and
inc
rorb
mov
and
mov
dec
enter
or
xchg
out
and
test
cmp
dec
lods
lcall
pushf
rcrb
lods
xchg
push
iret
sbb
negl
data16
int
xchg
sti
cmp
dec
and
cmc
and
and
scas
xchg
push
clc
mov
pop
inc
push
dec
push
add
push
stc
pop
pop
sbb
in
add
cmp
inc
notl
mov
adc
xor
mov
jge
mov
int
clc
add
sbb
and
pop
pop
aas
mov
mov
dec
pop
rep
pop
ds
int3
ss
cmpsl
fists
jg
outsb
gs
out
aaa
pop
pop
xor
push
or
push
jno
out
push
lds
xchg
and
mov
aam
xorl
mov
add
arpl
sbb
sub
and
xchg
sub
pop
jbe
cmpsl
cmp
adc
aaa
dec
movsl
mov
adcl
mov
jl
push
mov
sbb
inc
or
cmp
xchg
push
dec
sub
pop
push
and
push
or
xchg
xchg
sub
enter
cld
pop
xor
dec
ficoms
jae
in
inc
cmp
jmp
sub
mov
sbbb
lahf
xor
ja
sbb
imul
mov
mov
subl
and
lcall
or
adc
inc
xchg
pop
mov
mov
sti
aas
data16
rolb
cmpsl
mov
test
mov
scas
mov
adc
loop
add
ljmp
add
jle
pop
ret
sub
insl
cmp
sub
jns
test
push
into
out
in
scas
xchg
mov
ss
jp
mov
movsl
or
jecxz,pn
iret
add
mov
sub
dec
and
jns
dec
adc
jb
mov
cmp
repnz
es
iret
adc
xor
or
or
push
fwait
cmp
out
dec
push
ds
xchg
pop
push
jne
int3
dec
push
roll
xchg
xchg
pop
shll
call
mov
outsl
xchg
mov
hlt
add
sahf
pop
dec
repnz
ret
sti
in
cld
cli
test
iret
ret
sbb
push
mov
arpl
arpl
decb
push
test
adc
mov
pushf
repnz
fdiv
xchg
ja
mov
jp
mov
jns
sarb
sbb
lret
cwtl
into
cmp
mov
dec
fadd
mov
jle,pt
cmp
mov
sbb
loope
daa
mov
repz
and
xorb
mov
mov
icebp
lcall
loope
push
push
or
pop
or
inc
popf
inc
lea
testl
out
push
mov
mov
enter
mov
fsubr
sub
test
and
mov
add
jmp
sbb
insb
xor
aas
xchg
mov
nop
std
push
hlt
jge
xor
xor
loop
stc
mov
leave
fs
add
mov
jae
sti
xchg
pop
jecxz
lods
add
mov
adc
pop
sbb
adc
sbb
pop
sti
push
jae
xor
pop
or
xchg
lods
sbb
popa
movsl
xchg
sub
repz
xor
xchg
jno
mov
jge
cmp
jno
test
repnz
jnp
in
sub
call
cli
and
movsb
aas
fwait
xchg
mov
fistpl
mov
das
add
inc
addl
xchg
fists
std
add
stc
rcll
popf
jo
sub
cmpsl
pop
dec
push
inc
xor
out
mov
mov
rcrl
nop
mov
sahf
or
test
test
add
dec
cs
mov
pop
sahf
arpl
or
adc
jmp
and
inc
fistps
shrb
je
mov
sti
sbb
jl
inc
enter
mov
daa
and
pop
sub
xor
mov
sbb
ret
inc
mov
loopne
mov
divl
test
jecxz
int3
xor
cli
xchg
cmp
push
ja
sarl
mov
adc
xor
cmp
out
lds
ret
push
sub
es
xor
aad
rolb
stos
ja
pop
mov
push
mov
cld
orb
add
int
stos
aaa
out
xlat
jne
mov
mov
inc
test
push
adc
push
into
adc
and
outsb
jns
test
adc
clc
inc
std
jl
aam
es
add
mov
lods
cltd
das
jns
xchg
xor
lock
inc
mov
sub
dec
in
cmp
addr16
fildl
mov
dec
addb
int
cmp
rcrl
repnz
cmpl
aaa
dec
incl
sub
aas
mov
jle
xor
fwait
push
icebp
stos
mov
xchg
rcll
push
mov
popf
dec
pop
movsb
lcall
xchg
push
dec
sbb
mov
xorl
popa
adc
inc
dec
mov
sarl
sbb
and
or
mov
movsl
cmp
fistpll
loopne
jg
inc
shlb
xchg
mov
sbb
pop
out
dec
inc
pop
jnp
in
push
push
adc
jge
jno
jmp
sbb
call
xchg
jno
std
dec
movzbl
and
imul
sbb
jns,pt
add
adc
mov
mov
cmp
push
mov
enter
mov
fdivs
js
mov
lret
movsb
pop
fs
push
pop
dec
xor
insl
adc
xchg
sbb
inc
sbb
xlat
sbb
fimull
fnstcw
adc
push
scas
push
cmc
loope
fistl
les
mov
inc
movsl
insb
and
ds
divb
outsb
fsubrl
xor
in
pop
loopne
sbb
lea
enter
pop
sub
or
in
push
ret
mov
add
filds
popf
fdivrs
data16
ja
cli
mov
dec
mov
push
and
roll
and
push
or
test
fdivrp
fs
out
mov
inc
popa
das
ret
lsl
rcr
pop
out
mov
lret
int3
cwtl
and
adc
rcrb
push
adc
inc
inc
xor
sti
mov
xchg
dec
xchg
adc
and
aam
popf
bound
sub
andl
fsubl
or
std
ja
andl
xchg
rcll
xor
repnz
iret
ret
and
cmp
insb
dec
jg
rol
jo
enter
or
or
inc
popf
aad
repnz
cmp
iret
jno
cmpsl
int
xor
inc
adc
out
rorl
in
pop
inc
sub
jmp
movsb
mov
aad
xchg
cmpsl
cli
cltd
adc
xchg
test
les
inc
lock
jbe
dec
adc
pushf
cwtl
repnz
icebp
jnp
and
out
ds
into
jg
and
xchg
mov
push
popa
shll
ss
test
adc
sbb
pop
stos
ljmp
enter
and
lret
mov
adc
mov
pushl
stos
cmc
xchg
xor
mov
sub
test
add
icebp
in
jmp
add
fwait
outsb
cmp
in
xor
int3
push
xor
scas
movsl
pop
jbe
aaa
in
adc
pop
pop
loopne
aas
ja
unpckhps
int3
pop
mul
sub
rcl
insb
mov
inc
and
aad
ss
cmc
clc
movsl
cmpb
push
das
shrl
jo
jl
fst
insb
or
mov
test
xor
sub
stos
xor
add
daa
int
pop
fsubl
jmp
mov
dec
xor
cmpsb
outsl
or
popf
cld
lods
push
fists
mov
xchg
jo
iret
jbe
incl
mov
cltd
add
in
inc
mov
pop
sub
pop
mov
orl
mov
imul
sbb
sbb
sbb
addr16
fld
xchg
cwtl
lock
addb
jle
pushf
add
sahf
or
jge
cmc
nop
sbb
outsl
adc
insb
outsl
jle
loopne
sub
mov
mov
fidivs
jo
and
jno
pop
xor
icebp
add
cli
scas
sub
fimuls
jno
and
jo
jmp
mov
push
call
cli
mov
aad
mov
add
adc
fwait
push
lea
jecxz
inc
das
pop
sbb
push
pushf
in
sbb
or
xlat
xchg
hlt
mov
dec
out
mov
push
dec
or
push
adc
test
test
sbb
pop
insb
je
xchg
and
inc
cmp
pop
pop
cmp
pop
int
mov
mov
lods
pushl
dec
jmp
nop
pop
pop
sbb
sbb
dec
nop
xlat
repnz
popa
mov
mov
loop
es
push
mov
aas
mov
mov
pop
push
cmp
out
js
add
and
stos
and
inc
push
jne
lcall
ret
aas
nop
jecxz
popf
cmp
add
rcrl
ds
mov
and
push
pusha
xor
js
xchg
call
inc
repnz
je
dec
pop
gs
dec
mov
cmpsl
arpl
pushf
jmp
lea
mov
cmp
and
mov
fcomip
mov
push
sbbl
xor
add
and
pop
cmp
jl
push
mov
pop
lahf
repnz
cmpsl
repnz
mov
out
fwait
rcl
arpl
adc
or
jge
xor
jl
push
sbb
mov
xchg
pop
cmp
lret
rorb
lahf
gs
or
pop
dec
xchg
dec
pop
xchg
sub
adc
pop
or
test
cmpsl
lods
mov
push
insl
sbb
dec
int3
push
sub
push
jns
cltd
dec
jo
xchg
lret
popf
out
add
and
in
pop
mov
cs
add
addr16
rclb
push
cmp
into
fsubrl
js
and
aam
fs
mov
rcrb
push
call
or
inc
pop
add
and
notl
mov
in
leave
jecxz
js
ja
xchg
aas
pop
xchg
dec
in
mov
cmc
inc
jmp
push
cmp
rcrb
roll
adc
scas
pop
rcl
lds
xacquire
cmp
movsl
push
sub
clc
arpl
pop
lea
or
or
xorl
mov
xchg
mov
shl
mov
aas
outsb
adc
pop
lret
sub
and
cwtl
movsl
inc
sti
jne
cmc
cwtl
push
jle
mov
decb
mov
jnp
jmp
xchg
pop
nop
push
mov
add
mov
xchg
mov
adc
xchg
ljmp
rcll
mov
or
sbb
push
jno
mov
nop
insl
andl
nop
pop
gs
dec
adc
arpl
and
dec
jp
addr16
daa
mov
mov
mov
movsl
enter
shll
dec
or
mov
push
dec
out
mov
dec
sub
push
ja
jecxz
dec
fsubs
test
and
inc
push
and
lret
fdivrs
jb
pop
test
add
add
les
hlt
shrl
mov
jmp
aad
xor
sbb
push
jmp
pop
iret
push
mov
negl
hlt
pause
sar
stos
jecxz
add
mov
mov
and
add
mov
lret
jmp
lods
loopne
xchg
push
jmp
sub
mov
xor
jb
xchg
cmpsl
fwait
addr16
clc
push
sbb
jecxz
cmp
fisubrl
ret
pop
xchg
jge
gs
add
jle
negb
jbe
inc
scas
cmp
dec
inc
shlb
lsl
sub
out
add
sub
aam
push
insb
or
xor
mov
lock
cmp
xor
test
sbb
iret
sub
lcall
mov
push
shrl
sub
pop
iret
add
shr
mov
jl
aaa
add
adc
inc
xor
inc
xchg
fists
test
sbb
dec
mov
call
push
scas
jae
jo
stos
sahf
cmp
les
lds
gs
dec
push
inc
inc
rcr
addr16
loopne
loop
push
add
or
cmc
inc
pop
pop
hlt
push
sbb
shr
push
movsl
xchg
scas
out
dec
inc
dec
sbb
fildl
ds
test
add
cwtl
jecxz
sub
xlat
push
jp
mov
sbb
cmp
mov
int3
cmp
neg
pop
sub
loop
mov
test
dec
leave
lods
cli
movsb
mov
hlt
add
jmp
mov
test
xor
arpl
jl
mov
enter
mov
pop
jle
dec
jne
es
push
sbb
sbb
out
out
inc
js
mov
data16
push
jae
xor
leave
xchg
pop
loop
jnp
sbb
pop
call
cli
sub
cmp
xor
xor
lret
and
adc
std
jmp
push
sbbb
jb
push
fistl
aam
push
xor
es
sti
shlb
testb
sbbl
push
push
xchg
imul
dec
jo
sub
pavgb
clc
xchg
push
sahf
adc
jnp
xlat
push
rcll
loop
push
add
aas
xchg
mov
jno
fxam
mov
xchg
and
fwait
rol
repz
sub
dec
imul
imul
sub
jl
sbb
ds
gs
mov
fmull
std
mov
push
fdivl
fstps
mov
outsl
jp
enter
aad
shll
nop
jne
rcrb
mov
xlat
xchg
je
cmp
jnp
jl
cmc
xchg
mov
or
popa
mov
subl
inc
push
and
sbb
and
jne
pop
adc
inc
daa
out
jo
fwait
imul
mov
outsb
sahf
xor
imul
inc
cmp
and
or
lret
push
into
mov
mov
push
lea
xchg
je
add
repnz
nop
aaa
lret
jo
call
hlt
dec
cmpsl
xor
fiadds
sub
add
jbe
scas
loopne
out
call
inc
push
cwtl
cmp
or
push
fbstp
add
fldt
mov
sub
pop
xchg
pop
bound
xchg
inc
out
repnz
dec
mov
pop
xchg
sbb
int
fisttps
mov
out
mov
mov
xchg
mov
cmpsb
sbb
mov
ficoms
popw
testb
imul
push
mov
adc
inc
pop
xor
cmpsl
adc
repz
jle
outsl
mov
mov
and
insb
pop
push
adc
or
lcall
enter
mov
lods
push
pop
fnstsw
aam
lcall
mov
pop
dec
mov
add
or
mov
push
mov
mov
punpckldq
mov
fcomps
adc
icebp
sti
jae
scas
aas
xchg
jp
shl
enter
xchg
mov
mov
int
adc
inc
jae
xor
xchg
mov
in
in
jae
xchg
aaa
pop
inc
ljmp
xchg
mov
daa
pop
cmp
fistps
adc
fcompl
stc
ret
js
push
xchg
inc
je
fimuls
mov
pop
pusha
int
xor
mov
outsl
dec
sub
les
lods
ret
out
xor
orl
xchg
mov
inc
and
pop
xor
xchg
es
shrl
popf
addr16
scas
dec
jmp
popa
das
movsl
xor
mov
sbb
leave
out
rclb
clc
and
out
movsb
mov
add
mov
pop
add
jl
pop
sbb
sbb
cltd
in
mov
ds
dec
or
ljmp
cmpsl
iret
testl
lret
imul
and
or
inc
or
loopne
mov
daa
add
sub
pop
sahf
imul
stc
pop
dec
or
shll
cmp
cld
sub
loop
lcall
sub
loope
or
cmp
fidivrl
inc
cld
adc
lret
call
ds
js
jae
nop
adc
push
movsl
cmp
pushf
jle
xchg
jmp
push
pop
mov
and
xchg
xchg
cmpsb
fdivl
sbb
pop
inc
push
repnz
push
mov
lock
xchg
or
mov
mov
into
icebp
jge
mov
mov
mov
dec
jne
adc
sub
ret
shlb
lds
sub
je
mov
cmpsb
pop
xchg
pushf
movsl
ret
fs
arpl
lea
mov
mov
repz
mov
je
push
adc
jl
or
inc
mov
cmpsl
dec
xchg
lds
test
rolb
mov
dec
ret
jge
mov
and
adc
jb
aam
es
test
push
leave
cli
pop
hlt
cli
add
dec
mov
in
mov
outsl
mov
jns
lods
iret
stos
push
addr16
pop
sti
inc
inc
repz
mov
adc
push
jg
out
mov
js
mov
inc
test
movsl
andb
cmp
pop
push
xchg
mov
mov
jecxz
and
stos
push
sub
sbb
xchg
cld
decb
pushf
push
mov
movsb
mov
mov
pop
sbb
std
push
leave
mov
adc
jmp
shll
das
into
lods
enter
jno
or
inc
insl
fcmovb
push
lea
add
cli
scas
popf
and
stc
jg
cmp
sbb
push
lods
fnstenv
xchg
jnp
pusha
orl
movsb
mov
push
add
leave
sub
fsts
andl
sahf
jo
repnz
dec
pop
fisttpll
mov
add
add
rcll
in
cmp
dec
adc
imul
jp
mov
sbb
test
push
std
lcall
jns
ljmp
insb
mov
fadds
les
daa
idivl
cltd
or
jle
pop
sub
pop
sarl
adc
jbe
lds
mov
and
xchg
xor
cltd
xchg
xchg
testb
mov
push
push
sub
cmp
jnp
cmove
jmp
mov
dec
je
cli
std
imul
ret
and
out
and
ljmp
lret
nop
pusha
sub
sbb
sbb
pop
into
lds
mov
cmp
aad
jmp
mov
push
push
or
jmp
and
fsubrl
in
pop
jns
push
rclb
mov
push
cmp
js
loope
imul
or
or
jb
lea
repnz
or
push
testl
xchg
jl
xchg
mov
sbb
push
cmp
ret
ds
pmulhw
sti
jno
or
fcomip
arpl
jae
hlt
add
scas
jle
into
mov
test
jle
pusha
xchg
sbb
test
jno
stos
inc
mov
cmpsb
movsl
push
in
mov
mov
push
icebp
or
call
in
push
add
push
sti
xchg
fldcw
adc
and
push
rcrb
jmp
xlat
mov
adc
cltd
inc
inc
sub
sbbl
push
testl
sub
adcb
xchg
lret
aaa
fdiv
push
xchg
loop
in
and
insb
dec
js
test
adc
push
and
jne
pushf
add
ljmp
cmp
mov
int3
imul
lods
dec
fwait
xor
mov
sahf
mov
imul
in
push
pop
scas
roll
inc
or
push
cmp
pop
fisubrl
mov
sbb
mov
and
aam
sub
clc
dec
cwtl
bound
mov
sub
or
out
pop
std
dec
clc
pop
dec
stos
cwtl
mov
cmp
mov
insl
pop
mov
xchg
cmp
test
movsb
test
cli
in
int3
push
push
lods
and
subl
jecxz
lret
popl
adcl
sub
sbb
mov
push
or
jb
aam
add
ret
dec
aaa
adc
pop
addr16
subl
mov
jmp
xor
mov
sbb
and
inc
lods
xchg
fcmovb
mov
and
test
adc
cmp
push
dec
out
rolb
mov
lcall
pop
mov
mov
dec
sbb
xchg
pop
sbb
insb
pop
cmp
mov
add
out
push
xchg
adcl
dec
xchg
mov
push
sbb
cltd
shr
sarl
and
ret
idivl
push
lret
insl
mov
inc
fs
cs
sbb
out
inc
inc
or
mov
in
nop
test
mov
leave
test
pop
add
movsl
xchg
ljmp
and
cwtl
imul
cmp
std
add
inc
push
daa
clc
out
idivb
or
fnstsw
push
mov
je
push
hlt
stos
fwait
mov
push
xlat
in
or
iret
cmpl
aas
insl
cwtl
and
mov
arpl
xchg
dec
pop
or
jnp
cmp
movl
dec
sub
cmp
or
subb
outsl
stos
je
mov
adc
cs
rcll
jp
or
mov
mov
je
dec
in
pop
push
std
dec
sub
test
icebp
adc
ja
mov
mov
out
sub
pop
popf
test
daa
data16
shlb
mov
and
stos
jp
mov
aad
sahf
xchg
std
jns
in
cmp
jge
and
cli
xadd
mov
nop
outsb
and
xchg
imul
movsl
lods
mov
stos
or
adc
push
xchg
inc
pop
mov
sbb
insb
push
repz
mov
decb
sub
sbb
adc
mov
mov
mov
cld
pop
adc
repnz
jbe
dec
bound
push
sti
jmp
lea
inc
fimull
xor
push
adc
out
push
xchg
pop
push
loopne
sbb
aas
push
shlb
icebp
or
sbb
aam
repz
cmpsb
inc
arpl
lds
test
loope
les
push
cmp
out
mov
jge
push
outsl
cmp
and
adc
ljmp
inc
push
pop
push
dec
ja
test
sahf
push
lock
xchg
mov
enter
sub
gs
add
mov
jge
aam
outsl
gs
idivb
mov
xor
decl
xchg
dec
aas
fmul
jmp
adc
por
pop
or
repnz
lds
dec
out
icebp
insb
or
and
xchg
shlb
cmp
sub
xchg
int3
ljmp
jl
shl
mov
inc
outsb
lcall
test
scas
mov
push
xor
jg
cmp
cmp
pop
jle
xchg
jno
mov
orl
pushl
jo
mov
add
lcall
ret
inc
stos
das
and
add
aam
imul
sub
jno
lea
xchg
dec
loop
mov
xor
mov
ficoms
out
lret
ja
mov
pop
aas
and
aaa
repz
movl
cld
loop
shl
dec
aam
nop
jmp
scas
cmpsb
flds
mov
loope
pop
push
lahf
xchg
inc
inc
sbb
pop
pop
cmp
pop
pop
jecxz
mov
and
sub
hlt
ljmp
negb
xchg
scas
call
jle
mov
xchg
fdivl
rcl
cmp
jns
jecxz
cmp
movsb
jecxz
jnp
jbe
push
jns
popa
mov
shl
jae
fidivrl
adc
std
push
jno
mov
and
push
adc
mov
andb
xor
pop
ret
sbbl
and
js
and
pop
vaddss
sub
lret
inc
sub
lret
or
mov
lods
ss
nop
and
jmp
dec
mov
movsl
add
loope
add
xchg
jecxz
nop
hlt
jecxz
push
imul
aas
inc
and
sub
ja
mov
add
sbb
lods
pop
mov
cmc
push
mov
mov
jae
dec
cltd
fs
dec
add
cs
push
or
add
inc
cmc
fs
and
mov
scas
int
push
inc
decb
cmp
and
pop
jge
retw
ret
mov
push
std
inc
das
xlat
lret
jp
gs
mov
int3
inc
daa
loope
inc
into
shrb
cmp
and
adc
inc
enter
rcll
ljmp
icebp
push
mov
xchg
andb
add
popa
popa
pushf
mov
or
pop
xor
xchg
pop
fcomp
shll
movsb
inc
pop
and
cmp
lock
in
js
ds
out
sarl
in
sbb
dec
outsb
jne
test
iret
add
inc
cmp
jb
sbb
fcoms
add
sbb
jle
sbb
xchg
sbb
mov
pop
sti
aad
loope
cmp
cld
stos
mov
pop
add
mov
int3
pop
xchg
push
mov
stc
xlat
int
sub
mov
push
fcmovnbe
test
cmc
cmpsb
in
cmp
mov
out
xchg
out
hlt
pop
mov
mov
dec
pop
xor
in
sbb
fs
mov
shrb
or
jo
ret
push
pop
out
and
int3
dec
inc
andb
adc
loopne
nop
and
into
push
fmuls
ja
or
mov
and
pusha
jbe
mov
inc
enter
outsb
sbb
jge
push
add
jmp
jns
mov
add
xchg
push
pop
lock
adc
fimull
pop
adc
cli
push
jo
push
cmp
adc
mov
pop
dec
jno
loope
jnp
adc
test
dec
push
push
pop
notl
popf
sbb
jp
and
repz
xchg
mov
shl
jle
lock
pop
int
add
sub
sbb
jno
push
jae
push
lahf
inc
pop
in
fldcw
sarb
pop
test
mov
or
cltd
pop
popf
dec
aas
xor
out
and
inc
das
sarb
lret
call
pop
pop
mov
or
loopne
adc
lods
dec
dec
push
hlt
fldenv
mov
push
vmwrite
push
xchg
cmpsb
call
jmp
mov
js
sub
dec
movsb
in
mov
push
hlt
xchg
lahf
cmpsb
push
xor
fldl
add
add
and
inc
sbb
fstpt
aam
dec
adc
pop
in
xor
mulb
push
shlb
popa
and
xor
popf
jno
sub
lods
aas
cmp
fisttpl
stos
adc
addb
add
sahf
push
jne
pop
andl
xchg
adc
jle
push
mov
push
lret
hlt
xlat
sbb
or
and
sbb
or
lods
or
adc
add
inc
mov
push
sub
dec
lea
and
fcmovnbe
bound
movsl
mov
jns
pop
lods
lds
add
loope
or
mov
repz
addb
pushf
aam
or
xor
jb
adc
pusha
sub
ja
daa
pop
pop
xor
adc
sub
add
and
imul
inc
mov
mov
popf
xor
out
dec
push
mov
xchg
push
mov
imul
lahf
in
inc
pop
add
xlat
cmpsb
xor
lret
mov
adc
add
push
inc
ds
in
sub
jae
aad
dec
adc
dec
lds
cmp
lds
orb
arpl
out
inc
outsl
xor
roll
or
mov
cs
lret
mov
and
cli
inc
dec
fdivl
or
arpl
push
test
xor
lret
add
sbb
inc
dec
lret
out
out
leave
shrl
jno
mov
icebp
hlt
mov
push
in
testl
dec
lds
and
pop
jle
xlat
mov
fdiv
insl
daa
xor
adc
dec
add
stos
out
xorb
stos
frstor
mov
pusha
dec
xchg
mov
test
sub
sbb
stos
test
loope
push
lods
inc
pop
insb
iret
jno
enter
mov
sub
rcll
xor
lock
clc
je
pop
icebp
movb
mov
dec
into
sbb
out
shlw
stos
inc
decl
shlb
imul
sbb
dec
popa
loopne
inc
icebp
mov
js
adc
mov
jo
xchg
pop
repz
jle
stc
jecxz
lcall
jno
cmp
movsb
out
shll
xor
xchg
add
adc
sbb
imul
test
icebp
jnp
sub
cli
sahf
leave
add
imul
insl
mov
outsb
in
push
xor
push
adc
ret
and
mov
or
mov
mov
ret
out
imul
outsl
sbb
mov
fsubr
add
icebp
jae
sti
lahf
jno
mov
repz
sub
scas
and
inc
ljmp
mov
stc
or
fsubl
jmp
lds
dec
into
push
inc
inc
jg
or
and
cmp
mov
pop
bound
add
mov
push
pop
push
adc
lret
pop
push
incl
or
mov
fldt
xor
push
shlb
pop
mov
cmp
enter
add
xchg
mov
dec
test
das
push
stc
push
cs
xor
push
rcll
mov
roll
xlat
and
hlt
mov
mov
lock
pusha
lods
jecxz
es
inc
daa
inc
fsubs
dec
sub
cmp
inc
jae
inc
pop
xor
int
mov
jbe
mov
loop
or
mov
xchg
jae
outsl
mov
add
incl
icebp
push
mov
lret
aam
push
xlat
outsl
icebp
and
rorl
call
or
and
sbb
dec
xchg
jmp
popa
sub
mov
js
add
outsl
or
or
cmc
std
and
bound
add
push
popa
jle
xor
or
insb
add
inc
mov
imull
push
lahf
int3
test
test
movsb
adc
lods
xchg
mov
jbe
jo
hlt
xor
push
test
jns
push
dec
inc
dec
outsl
push
jno
rcll
sbb
mov
mov
imull
pop
inc
xor
adc
cli
and
stos
inc
sub
popa
stos
or
movsl
insl
fmul
dec
sub
aad
or
inc
xor
cmp
into
lcall
call
in
outsl
jo
imul
shll
pop
shlb
lcall
sbb
int
das
add
daa
sub
and
xchg
in
je
push
aam
xor
imul
and
push
push
push
test
cmp
dec
xor
clc
pop
mov
xor
sbb
int3
mov
sub
and
outsl
dec
mov
or
int
adc
cmpb
mov
and
cmovo
pop
in
push
mov
sub
leave
in
lret
inc
jne
cmp
ret
scas
lret
aam
fcoml
xor
cmp
daa
push
push
rol
mov
cmp
adc
mov
jp
mov
sub
test
adc
bnd
mov
add
or
add
repz
jbe
ret
ret
out
js
movsb
lret
jge
push
and
ja
cmp
push
cmpsl
jo
inc
dec
lahf
fs
in
es
mov
dec
outsl
pushf
lods
xor
aaa
daa
mov
sbb
jb
inc
fwait
mov
cmp
sbb
cmpsl
lea
jae
push
mov
sub
push
push
push
loopne
xor
into
push
mov
mov
sti
add
lcall
leave
rclb
movsb
mov
stc
mov
cmp
nop
cmp
sbb
cmp
xchg
xchg
aas
dec
loop
test
pusha
add
in
stos
ret
addl
jl
xor
sub
sbb
adc
dec
and
and
jl
imul
push
xor
sub
clc
xchg
jnp
ds
add
clc
sub
sub
sub
dec
or
arpl
xchg
fs
pop
xchg
inc
cmpsl
add
cld
addb
pop
sbb
lock
bound
xor
fiaddl
push
jns,pt
xor
fildll
mov
repnz
lret
adc
jl
negl
dec
subl
add
das
jg
fildll
ja
int3
xor
add
insl
in
or
push
fwait
ror
inc
xchg
bound
add
dec
aas
mov
and
inc
out
lds
daa
xor
ja
incl
dec
ds
ss
and
cmp
cltd
or
or
push
mov
sub
aaa
pusha
fcmovb
lods
int3
les
push
xor
cmp
je
ret
repz
idivl
ja
jb
shr
rcrl
pop
and
jecxz
fwait
mov
jge,pt
jbe
push
or
xor
push
xchg
cmp
jmp
loope
inc
pop
out
pusha
jp
loop
cmp
dec
dec
cmpsb
test
movsb
cmp
out
xor
loop
rcrb
cmpsb
pop
dec
cmp
cmp
stos
lea
nop
lods
push
push
fs
add
popa
xchg
cltd
je
ret
fwait
adc
dec
jns
lods
mov
ja
xlat
xchg
js
jbe
ret
and
dec
scas
fisttps
push
add
xor
fisubrl
out
jbe
inc
pushl
or
jmp
add
mov
adc
sbb
aad
sti
mov
in
test
adc
pop
popa
adc
ss
cmp
in
xor
stos
cmpl
and
dec
outsl
imul
iret
lock
mov
xchg
jmp
or
inc
adc
inc
jno
xor
roll
push
xor
and
mov
cmpsl
and
lahf
mov
rcrb
xor
sbb
sbb
int
push
push
jecxz
dec
dec
inc
add
push
inc
jl
iret
sbb
and
js
cwtl
bound
pop
adc
cmp
add
jg
mov
mov
sub
movsl
outsl
cld
push
jg
xchg
cmp
leave
leave
and
xchg
test
mov
cmpsl
jg
xor
out
in
jmp
jl
jne
jle
jecxz
push
pushf
shrb
sub
stos
iret
sbb
popf
fs
pop
inc
dec
xor
daa
add
xlat
sbb
adc
or
iret
cli
cmpsb
or
sub
mov
sub
mov
lods
xor
sub
sahf
push
adc
dec
out
pop
mov
push
insb
push
int
shlb
lret
cmp
cld
lea
sub
into
inc
push
adc
ljmp
xor
add
test
inc
subl
das
filds
aas
outsl
int
nop
inc
mov
das
sub
sbb
push
cli
jge
subl
sub
mov
inc
cmpb
jns
mov
or
xchg
push
sbb
scas
test
iret
cltd
mov
in
test
leave
scas
lods
lret
sbb
out
mov
pushf
add
lods
ficompl
mov
rolb
xchg
in
mov
add
scas
mov
roll
jge
popa
xor
push
and
inc
lds
dec
push
jns
mov
push
out
fsubl
add
inc
cli
cld
outsl
cmp
jo
in
mov
stc
sub
jbe
popa
adc
adc
and
addr16
ljmp
sbb
pop
pop
pushf
sub
sar
movsl
or
cmp
and
stos
dec
mov
in
fidivrl
lods
mov
cmp
cmp
fcomps
cltd
mov
cmp
cwtl
add
sbb
test
ds
dec
jmp
mov
hlt
mov
dec
push
inc
xor
inc
aas
inc
je
cmp
mov
dec
xor
jno
roll
xchg
push
push
xchg
cmpsb
ds
push
sbb
jae
xor
xor
xor
lea
adc
imul
mov
xor
jb
shl
pop
out
aad
gs
fnsetpm(287
sub
fdivrl
jge
rcl
jo
or
inc
mov
pop
into
fwait
jae
ljmp
jle
cmc
in
lahf
sub
sarl
mov
movsb
xor
and
push
or
mulb
adc
cwtl
or
and
sar
or
or
mov
out
xor
stc
loopne
xor
daa
mov
mov
ret
jl
mov
sbb
mov
push
dec
lds
mov
push
rcr
mov
or
lods
jmp
push
cwtl
out
mov
or
stos
adc
add
stos
mov
pop
out
rorl
cltd
rolb
mov
mov
adc
sub
bswap
mov
or
cmp
adc
divl
jo
mov
cmp
into
pusha
repz
mov
xor
dec
sub
dec
and
pop
pop
jmp
clc
repnz
cld
dec
and
ret
out
jp
lret
rorb
mulb
roll
push
push
aas
jg
daa
clc
popa
pop
mov
jo
fld
sbb
xchg
mov
lods
inc
pop
xor
xchg
leave
xchg
stc
add
es
aam
xchg
clc
push
dec
fiadds
enter
mov
or
pop
fidivrl
fld
data16
add
sbb
test
movsl
adc
push
lret
jno
out
xor
icebp
pop
dec
adcb
jne
scas
ja
jb
aad
aas
roll
dec
mov
outsb
jl
ljmp
push
cmpl
mov
leave
daa
and
popa
inc
dec
lods
sbb
or
lahf
mov
call
std
mov
dec
cmp
ret
lcall
addr16
repnz
push
fcoms
lea
movsb
cld
mov
and
cmp
or
stc
mov
fs
fnstsw
mov
pop
sbb
xor
mov
aad
cmp
dec
lret
mov
inc
iret
pop
sbb
push
das
cmp
shrb
push
mov
icebp
mov
insb
xchg
sbb
shl
stc
add
push
xor
es
fwait
repnz
hlt
sbb
lea
roll
xchg
mov
adc
xor
push
dec
cmp
fisttpl
loopne
ss
movsb
mov
mov
sub
cmp
mov
ficoms
outsl
xchg
sbb
pushf
cs
cmpsl
stos
and
jns
mov
ror
fxch
mov
testl
mov
mov
add
lret
jmp
fwait
push
daa
ljmp
mov
in
imul
push
mov
add
cmp
adc
push
popf
push
enter
push
aam
xor
push
mulb
jmp
mov
fisubrs
sub
les
mov
dec
xchg
jno
xor
repnz
xchg
mov
pop
add
scas
rcrl
and
negl
push
sarl
dec
call
fistpl
fstpl
and
leave
cli
jl
das
jp
test
out
push
mov
add
xchg
add
popf
out
outsb
imul
mov
test
jecxz
mov
ja
and
das
dec
rcrb
movsl
dec
pop
adc
xchg
mov
aam
pop
sub
std
fbld
cmp
iret
jns
cmpsl
hlt
cmp
out
arpl
fnsave
sbb
ret
mov
pusha
hlt
outsb
sbb
dec
stc
inc
adc
loop
pusha
mov
lcall
imul
jno
add
cli
popa
mov
aam
pop
jno
xor
push
fs
push
sub
or
btc
popa
mov
or
push
sub
jecxz
ja
in
add
xor
push
popa
insb
inc
cwtl
aaa
gs
sub
icebp
jecxz
es
sub
add
xor
pop
jbe
lret
pop
cmp
clc
push
adc
lret
cmp
cli
arpl
inc
cmp
jne
pop
inc
test
out
scas
fwait
add
push
loop
out
mov
nop
imul
lods
jge
in
ds
aam
cmp
lods
sbb
lret
fnstsw
fidivrl
mov
jbe
sub
xor
into
scas
ror
adc
lds
xorl
movsb
es
fsub
pop
pop
outsl
mov
or
jbe
xchg
lretw
dec
mov
ja
aaa
lret
mov
mov
or
lea
push
iret
repz
daa
int
xor
in
in
in
add
mov
push
sbbb
pop
cmp
sub
in
push
mov
mov
ffree
dec
jns
xor
lods
popa
sub
in
jl
inc
jg
inc
adc
repz
je
inc
pop
push
ljmp
and
inc
insb
mov
xchg
sahf
push
and
jnp
loope
sub
int
or
in
aam
popf
sti
xor
mov
mov
je
int
inc
sub
cld
fcmovu
jnp
dec
push
negb
int
add
pushf
movsb
stc
adc
jo
pop
adc
aaa
rorl
jb
add
pusha
ja
andl
test
into
push
inc
dec
shll
in
pop
jbe
ftst
fdivs
int3
in
xor
stos
add
rorb
or
mov
repz
cmp
into
lret
xor
pop
fsubrl
mov
push
xchg
inc
test
gs
jbe
shll
lds
add
jne
xchg
xchg
das
sub
cmc
jmp
icebp
pop
sbb
insl
test
je
jp
in
xchg
mov
add
push
test
sub
leave
mov
insb
adc
xor
enter
in
sub
daa
stos
out
es
dec
sbb
mov
cmp
xchg
inc
adc
hlt
lahf
cmpsb
mov
aam
movsl
add
mov
arpl
mov
push
out
mov
imul
xor
and
cli
daa
lea
mov
push
jne
fistl
mov
scas
push
push
push
dec
mov
mov
test
push
pop
ret
xor
add
jp
lods
nop
and
push
clc
out
fisttps
jo
loope
ljmp
and
mov
add
jbe
xor
mov
or
push
loop
cld
sub
js
xchg
inc
lods
cmp
push
outsb
sub
repz
cwtl
dec
leave
addr16
notb
sarb
shlb
sub
test
cmpsb
mov
movsl
and
aaa
dec
dec
mov
mov
enter
add
outsl
jecxz
je
fwait
mov
pop
jmp
subb
jle
lds
enter
sahf
pand
imul
mov
add
das
jge
or
add
add
pop
mov
push
into
fsts
data16
data16
mov
in
sub
jo
setns
nop
daa
imul
xor
movsb
cltd
lret
imul
xor
cmp
inc
lahf
stc
pushf
adc
and
dec
jmp
add
adc
cmp
pop
in
mov
int3
rclb
xor
mov
pop
xchg
sar
fisubrl
inc
cwtl
aaa
xlat
into
xchg
test
jp
aaa
das
mov
mov
xchg
fs
rolb
mov
pushw
and
or
insl
insl
jle
pop
fisubs
lods
add
push
xchg
xchg
xchg
fbstp
icebp
push
fcmove
jbe
mov
shlb
adc
sahf
add
sub
xchg
adc
cmpsb
adc
pop
clc
popf
mov
mov
sub
rolb
cmp
cmc
dec
scas
xchg
mov
bound
inc
daa
leave
aas
pop
mov
mov
xor
pop
scas
mov
sbb
lret
popa
and
mov
arpl
inc
leave
fisubrl
in
movsl
lods
popf
mov
ja
stos
mov
fisubrl
xlat
xor
movsl
les
sub
dec
andb
and
push
hlt
in
lret
enter
and
and
lahf
cltd
mov
addr16
pusha
lods
jg
add
in
addr16
fsubl
dec
out
jg
xchg
jno
push
inc
lods
lcall
push
inc
jmp
sub
xor
mov
cli
out
xor
jne
pop
add
jne
push
pop
ja
mov
fimull
rcr
cld
hlt
sbb
sub
jmp
jbe
add
mov
mov
das
test
int
in
jge
cmp
ret
mov
fsubr
hlt
add
jecxz
cmp
jbe
cmp
mov
xchg
mov
popa
pop
and
sbb
mov
pushf
fstps
clc
jnp
xor
gs
sbb
popa
scas
das
jmp
or
cltd
pop
iret
xchg
hlt
sbb
ret
int3
in
fwait
add
mov
xchg
arpl
out
add
push
or
sub
mov
outsb
testb
xor
jae
shrl
mov
loopne
stos
and
sbb
inc
jge
add
aaa
rclb
jo
icebp
jge
leave
cmp
mov
xchg
dec
mov
lds
inc
cs
enter
call
test
fistpl
hlt
dec
mov
mov
fs
pop
mov
adc
fisttpll
adc
insb
mov
pushf
mov
mov
xchg
adc
sub
cmp
fisttpl
sahf
adc
xor
xchg
les
lods
or
inc
inc
sub
mov
movsb
mov
in
xlat
in
mov
mov
inc
mov
addr16
mov
xor
pop
cmp
xchg
fistpl
cmpsl
jnp
adc
addr16
fistpll
mov
jp
cwtl
push
cmp
shl
movsb
dec
xchg
jmp
mov
or
mov
sub
sti
dec
lcall
cmpsb
pusha
outsb
mov
pushfw
sub
stos
adc
jg
ljmp
add
addr16
pop
mov
cmp
inc
push
cmpsl
mov
in
sti
push
ds
int
pop
sub
xchg
rcll
test
mov
cs
fdiv
pushf
jge
fnstsw
and
xor
sub
xchg
mov
xchg
adc
cwtl
es
in
sahf
jp
pop
xchg
jp
std
loope
cld
add
sbb
mov
xor
js
mov
cmp
mov
imul
ret
add
dec
xchg
subb
fdivrp
xchg
xchg
ret
inc
jne
cmpl
mov
xor
dec
mov
mov
sbb
push
lcall
fldenv
cmpsl
nop
dec
mov
sysexit
pop
jo
and
je
mov
adc
mov
jne
data16
shll
loope
sbb
mov
out
fldl
jmp
hlt
xchg
jno
fcoml
mov
pop
scas
jmp
sbb
fdivrs
jne
cld
into
imul
dec
xlat
xchg
test
data16
cmp
inc
pop
test
add
shrb
jcxz
or
add
incl
repz
cmp
jns
or
das
inc
scas
mov
cmp
pop
ret
xchg
cmc
xchg
pushf
in
shll
cmc
popf
lods
hlt
adc
ss
punpckldq
hlt
pusha
jecxz
xor
in
pop
sbb
pop
inc
xor
les
add
pushf
addb
pop
divb
mov
test
shl
mov
and
dec
loope
movsb
inc
out
push
push
dec
sbb
inc
adc
jl
loop
addr16
sub
lea
adcl
out
dec
push
pop
out
sub
insl
sahf
les
add
loopne
push
ret
lods
jbe
test
mov
fwait
push
mov
ljmp
jae
hlt
pop
jo
sbb
adc
adc
jecxz
mov
push
adc
lods
sub
cmpsl
iret
subb
mov
ret
subl
popf
js
sbb
mov
lds
loope
xor
sbb
mov
js
sub
sub
inc
cmp
push
sti
lret
sub
dec
scas
icebp
dec
and
push
iret
xlat
dec
sahf
shl
inc
push
outsb
aas
pop
into
mov
lcall
lret
lods
dec
adc
mov
inc
jmp
push
stos
jne
xor
decb
arpl
adc
jmp
loope
push
inc
divl
stos
add
and
sub
gs
fwait
add
jp
sub
jno
adc
jnp
aaa
jl
push
std
lods
movl
xor
xchg
enter
push
add
xchg
adc
out
js
jl
inc
inc
iret
cs
inc
and
dec
fstl
xor
in
push
and
jg
mov
cmp
cmp
push
scas
loope
into
and
mov
mov
xor
lods
ja
test
mov
dec
pop
cld
lods
std
in
adc
adc
or
shl
test
dec
pusha
jmp
mov
mov
lahf
inc
add
mov
adc
sti
lods
repnz
icebp
sbb
xchg
xor
jbe
imul
mov
adc
add
hlt
and
into
ljmp
mov
insl
enter
adc
cmp
mov
jl
fcompl
dec
jae
test
jp
push
xchg
inc
push
lea
xlat
lods
push
mov
or
aam
lcall
ljmp
lcall
cmp
lock
and
jp
int3
push
lds
push
imul
add
add
jns
inc
add
scas
pop
out
push
inc
jns
sub
aam
and
test
sbb
add
and
leave
adcb
loope
movl
xchg
xchg
adc
in
notb
lret
in
dec
insb
test
and
jno
fdiv
imul
push
and
xchg
mov
sti
mov
mov
lahf
inc
jae
iret
jmp
into
es
popf
xor
xor
shll
in
push
pop
push
inc
test
jbe
xor
cmpsb
icebp
xchg
jle
in
aas
sti
fisubl
or
icebp
sub
mov
and
xor
pop
fcoml
jecxz
lods
xor
dec
push
stos
scas
push
jo
fldenv
xor
mov
movsl
mov
cld
adc
inc
adc
cmpb
sbb
arpl
cmp
xchg
mov
repz
and
or
and
adc
stc
xor
pop
insl
aas
cmpsl
mov
jo
mov
les
xor
ds
xor
xchg
pop
cmp
sub
out
mov
cmp
jno
or
pop
insl
iret
in
vpmaxub
pop
leave
ret
lds
adc
add
movsb
mov
push
adc
jne
iret
es
arpl
inc
into
out
rorl
push
push
push
sbb
mov
pusha
sub
loope
dec
adc
push
repz
shl
inc
jp
inc
pop
xor
fisttpl
xchg
lock
xor
inc
fldcw
push
jle
jbe
jnp
pop
mov
pop
dec
pusha
dec
mov
add
daa
inc
mov
loope
cwtl
pop
cmp
ja
out
push
and
cmp
push
fwait
sahf
pusha
hlt
ficoms
shl
jno
dec
and
inc
mull
arpl
mov
xor
jns,pn
ds
jle
mov
cwtl
jno
pop
jg
or
and
inc
cmc
lahf
jmp
mov
jnp
and
int
ficomps
push
mov
daa
inc
repz
movsb
sbb
xor
ss
iret
repnz
pusha
cld
push
clc
cmp
xchg
sbb
les
and
and
movsl
fcom
stc
cmpsb
loop
imul
test
and
sbb
mov
cmpsb
sbb
xchg
push
int3
lock
pusha
fs
lods
cmpsl
mov
js
or
dec
int3
mov
leave
cwtl
outsb
pop
pop
data16
lds
mov
jmp
insl
push
sysexit
ret
push
test
loope
push
jg
push
out
sub
and
mov
push
popf
lea
add
xchg
dec
in
xorl
jne
lock
sarb
lds
or
out
js
xor
jmp
rorb
aaa
sub
jmp
add
xor
pop
and
jl
sub
cmpsl
dec
mov
sub
sbb
jo
jno
pop
mov
jno
mov
mov
push
adc
mov
push
jno
loope
inc
xchg
shl
push
push
clc
xor
cmp
inc
mov
pushf
push
ret
pop
lock
adc
mov
ret
js
xor
enter
jb
ds
adc
dec
divb
popa
dec
jle
xor
pop
jbe
cmovbe
mov
dec
cmc
xor
pusha
repnz
pusha
stos
sub
insb
mov
push
mov
or
push
repz
cltd
push
mov
pop
xor
adc
push
enter
popf
sbb
mov
pop
push
in
enter
mov
xor
xor
mov
es
lock
movb
outsb
pop
push
xchg
movsb
adc
enter
mov
sbb
adc
sbb
into
into
inc
cmp
sbbl
clc
aaa
ljmp
enter
mov
stos
mov
movsb
xorb
push
fisubs
mov
or
int3
lahf
sbb
mov
ficoml
xor
jns
or
pop
push
out
mov
rcl
adcl
leave
adc
out
test
sbb
pop
sub
mov
add
cwtl
fmul
popl
loop
xor
sbb
sub
pop
lock
mov
mov
int3
cmp
es
jo
les
xchg
mov
push
data16
inc
or
mov
or
sub
jp
xor
push
fmuls
gs
ss
stos
cmp
mov
out
aas
xchg
mov
lcall
mov
xor
xchg
iret
subb
popf
xchg
inc
xchg
fs
cmpl
push
jle
cs
pop
js
icebp
shl
daa
mov
push
aaa
out
andl
test
mov
stc
out
jge,pt
jnp
xchg
arpl
mov
int
sub
sub
cwtl
dec
int3
sub
add
add
jne
or
push
and
sub
subl
mov
std
shrl
add
addr16
hlt
lds
dec
js
inc
sub
lret
sbbb
imul
xorb
add
lds
jns
mov
rclb
mov
outsl
in
cmp
stos
stos
mov
mov
pop
mov
xlat
xorb
or
push
cmc
cwtl
jae
pop
jp
dec
bound
gs
flds
adc
arpl
loop
jg
mov
stos
in
push
rolb
bound
test
dec
out
test
jge
enter
repz
rcll
xchg
cmp
jae
or
loopne
jne
pop
addr16
sub
jmp
rcrl
mov
jae
insb
or
pusha
sub
loop
push
shll
mov
mov
shrl
je
jbe
push
ret
es
pop
test
xlat
shlb
repnz
xchg
test
add
fldenv
popf
xor
adc
or
xlat
fwait
jge
ret
test
sti
cs
std
lods
jge
aam
sbb
loop
inc
into
enter
push
jmp
loope
cmpsb
test
lds
push
cli
pop
dec
mov
rcl
negb
in
push
test
sti
pop
push
jae
jecxz
xlat
dec
lret
rorb
push
data16
pop
inc
or
push
ja
mov
mov
hlt
jmp
dec
mov
pop
rcrb
dec
sub
mov
insl
push
push
insb
dec
sahf
cld
mov
sub
mov
push
inc
xor
push
inc
pop
notb
mov
je
jecxz
sarb
xor
xor
adc
jbe
xchg
addr16
imul
mov
mov
add
sub
mov
aaa
jmp
arpl
mov
dec
shrb
xor
addl
jnp
jl,pt
adc
jns
mov
sti
mov
into
clc
add
adc
mov
addr16
mov
sarb
hlt
js
int
mov
xor
rcrl
dec
cmp
ficoms
popf
fildl
ljmp
rorb
out
jp
inc
pop
jns
mov
scas
mov
aam
cmc
decl
inc
cltd
nop
test
scas
pop
mov
mov
mov
mov
jge
loope
push
aaa
dec
or
daa
jbe
repz
clc
jae
inc
enter
imull
push
xchg
and
jmp
fisubrs
mov
mov
mov
pop
gs
std
ja
ljmp
cmp
fst
rorb
call
pop
mov
clc
adc
add
lcall
dec
sbb
popa
sbb
adc
pop
pop
dec
ss
cmpl
cmp
cltd
test
loopne
out
mov
push
in
lea
les
adcb
dec
fidivrl
scas
dec
jg
lahf
pop
in
out
jbe
cmc
inc
sub
and
mov
dec
aad
or
mov
cmp
lods
mov
std
out
sbbb
inc
fldl
cwtl
hlt
inc
orb
push
cmp
mov
mov
xor
sub
xchg
fmull
cli
adc
cmp
jle
or
ljmp
cmp
je
nop
sarb
std
insb
lret
xor
jns
sbb
and
mov
sub
mov
pushf
outsl
and
dec
sbb
stc
push
inc
inc
mov
dec
movsb
mov
adc
ja
in
adc
mov
mov
pop
outsb
nop
andl
loope
std
jg
add
popa
inc
loop
mov
addr16
adc
lahf
jbe
sbb
fcomps
cmp
push
xorl
xchg
iret
pop
out
pusha
push
mov
jae
loopne
jp
clc
daa
outsb
pop
outsb
push
xor
push
sub
dec
stc
call
sbb
mov
xchg
pop
pop
pop
mov
mov
aaa
jns
xor
cli
fs
mov
adcb
mov
and
test
and
aad
jbe
fs
xchg
pop
mov
push
mov
xor
cli
ja
inc
stc
inc
xor
mov
mov
shr
add
call
xchg
std
jns
mov
popa
xor
push
lret
in
jp
pop
cs
mov
mov
jo
arpl
lds
scas
loopne
mov
add
fstps
neg
jo
inc
sbb
shlb
inc
les
add
pushf
es
add
inc
shrb
outsb
shrb
pop
lret
sub
scas
cmp
subb
inc
mov
mov
pop
sub
gs
sub
jecxz
sub
fimuls
mov
int3
dec
xchg
push
int3
in
fdivrs
cltd
cltd
or
mov
out
ret
bound
and
xchg
cs
or
cmp
scas
lret
adc
das
mov
cmp
adc
bnd
pop
pop
push
sbb
xorl
cwtl
pop
mov
dec
outsl
jno
push
mov
flds
stc
and
lahf
sarb
jp
add
pop
jle
push
fisttpll
xor
aad
imul
sbb
push
adc
lds
loop
cltd
sbb
cld
data16
or
inc
in
inc
hlt
xchg
pop
movsl
mov
loopne
fstpl
jle
xor
out
cmpsl
push
cmp
jb
push
pushf
mov
jge
cmp
or
fimull
mov
sub
aam
add
shr
or
add
icebp
and
out
or
cld
test
out
imul
aaa
xchg
mov
push
push
lods
aas
cmp
mov
out
loopne
inc
outsb
inc
mov
fbstp
pop
push
dec
mov
sub
xchg
into
cmpl
bound
stos
add
push
enter
mov
leave
stos
test
fistps
test
jb
push
mov
mov
notb
inc
aad
clc
mov
jns
add
das
xor
das
ret
push
lods
pop
in
loop
ja
jb
aas
sub
xchg
mov
mov
adc
insl
pusha
xchg
xlat
test
bound
pusha
aaa
cli
jo
call
pop
or
rcll
mov
xor
outsb
ljmp
icebp
outsb
or
inc
cmc
xor
dec
pop
mov
jg
aam
xor
pushf
jg
dec
lahf
lret
je
inc
inc
insl
push
or
push
pushf
leave
cmpsl
in
pop
add
push
jno
mov
add
repz
jmp
int
enter
jl
testb
aam
cld
dec
jg
push
push
cmp
outsb
mov
push
cwtl
in
lcall
mov
sbb
int3
jmp
adcb
or
cmp
ss
pusha
fisubrs
push
jno
adc
call
lds
roll
imul
aam
lahf
je
mov
lods
pop
fmuls
cmp
sub
push
lahf
sbbl
mov
lods
cmpl
insl
push
push
cmp
enter
dec
sub
sbb
jl
sub
repz
add
ja
or
testb
popa
sbb
ret
dec
mov
push
stos
pop
and
lea
mov
cmpsl
ficoms
arpl
jne
dec
adc
sbb
lret
xor
sbb
lcall
test
fisubrl
popf
push
inc
and
sarb
xchg
xchg
dec
int3
lods
sti
lea
jmp
mov
dec
sbb
mov
mov
aad
fldenv
sub
nop
leave
ret
in
jnp
mov
adc
fadds
shr
fstpt
cmp
inc
push
dec
pop
mov
mov
rol
bound
add
xchg
inc
das
das
fisubl
xor
int3
pushl
inc
popf
sbb
fmul
incb
out
sbb
pop
xor
cmpsb
add
pop
aam
and
gs
lahf
dec
inc
aad
xchg
imul
xor
cmp
pop
gs
fldenv
nop
push
rcrl
fdivr
ljmp
xor
test
mov
in
cltd
push
pusha
xlat
pop
rclb
jnp
imul
lret
loopne
inc
sbbl
in
dec
mov
dec
xorl
xor
mov
pop
scas
or
call
inc
roll
xor
frstor
add
gs
movsb
outsb
daa
and
cmp
cmp
pop
stos
mov
xor
push
push
fistl
xchg
lods
mov
mov
filds
and
ret
and
add
adc
xchg
cmp
and
ljmp
jle
mov
outsl
add
inc
mov
or
add
ljmp
bound
dec
movsl
fldenv
dec
mov
lock
inc
sub
inc
adc
das
sbb
xchg
imul
jmp
les
out
jge
and
mov
push
or
out
adc
mov
lods
xchg
mov
mov
lcall
inc
dec
xor
in
pop
adc
push
pop
cmc
shll
fildl
xor
cltd
fcomi
sbb
adc
dec
fdivr
nop
mov
inc
in
xchg
fildl
loopne
out
pop
add
push
out
loop
popa
xor
push
imul
cmp
pop
gs
sti
sub
out
and
fstpt
mov
add
iret
aad
and
orl
mov
test
dec
cwtl
xor
aad
cmpsl
add
test
imul
dec
add
push
in
icebp
orl
lahf
lock
in
ret
int3
cltd
mov
and
pop
dec
xor
mov
ja
bnd
lret
cwtl
jmp
jae
loopne
fiadds
or
sbb
pushf
arpl
jae
and
lcall
mov
xor
es
outsb
loopne
out
iret
and
mov
cwtl
or
sbb
adc
mov
dec
pop
mov
mov
fistpl
stc
shlb
adc
jg
xor
xorb
inc
imul
inc
xor
lahf
cmp
rcrb
rolb
jns
push
insl
dec
inc
mov
sub
stos
fiadds
push
or
push
fstpl
out
sub
in
jno
cltd
aad
fcoml
idivb
outsl
subb
mov
pop
call
cli
sub
dec
aaa
xchg
dec
sahf
jle
pop
mov
push
pop
dec
xchg
mov
out
aam
push
sbb
xchg
lret
sahf
popf
xlat
xor
data16
and
mov
jmp
mov
jle
sahf
mov
fdiv
or
or
xor
out
and
mov
jae
jle
in
lds
mov
mov
pop
jno
jns
mov
or
fnstenv
test
aas
mov
push
inc
jecxz
je
or
pop
out
daa
test
movsb
insl
in
cmp
aad
mov
sbb
in
lock
cld
mov
pop
or
xor
jbe
jecxz
scas
outsl
test
clc
add
jmp
fs
aam
stos
mov
pop
outsb
mov
andb
mov
cmpb
jno
divl
mov
adc
popf
adc
pop
xchg
fs
icebp
push
jge
icebp
mov
sahf
xor
mov
dec
xchg
les
sti
ljmp
xchg
add
iret
inc
hlt
jge
arpl
ss
aad
shlb
orb
loopne
jge
adc
pop
xchg
popa
xorb
imul
sahf
int3
test
lods
inc
or
or
pop
cmp
fwait
mov
mov
test
push
cli
cmp
xor
xchg
stc
adc
ret
jg
mov
scas
mov
xorb
data16
cmpsb
addl
push
xlat
fdivl
and
jge
fwait
arpl
movsb
std
lret
fs
jmp
cmpsb
stos
fcomip
fs
mov
dec
or
mov
ret
dec
xor
daa
jb
mov
sub
mov
sti
mov
icebp
or
pusha
add
bound
cmp
fstcw
sub
inc
bound
lock
jae
xlat
xchg
sub
outsl
mov
out
add
sbb
ss
push
stos
dec
loop
test
lret
xor
mov
push
cmp
jae
push
mov
sbb
lea
notb
mov
pop
mov
sub
movhps
fldl2e
clc
in
lahf
out
push
loopew
push
cwtl
not
pop
cmp
add
mov
xor
push
inc
movsl
shlb
mov
jp
xor
addl
sub
add
cs
pushf
add
dec
adc
mov
push
js
cmpb
and
add
test
cmpb
jecxz
sti
sar
ja
movsl
mov
fldenv
mov
stos
mov
and
lea
push
inc
movsl
inc
push
imul
mov
mov
movsl
pop
adc
jmp
fldt
scas
mov
or
ret
jb
inc
and
lea
sbb
jl
aam
pop
popa
jecxz
insw
lahf
sbb
inc
ss
mov
adc
popf
stos
out
xchg
sbb
ss
mov
xor
cmp
pusha
pop
stc
or
push
aam
fadd
scas
push
scas
mov
pusha
or
sub
lcall
arpl
mov
add
sbb
mov
stc
jmp
cmp
jne
mov
push
mov
pop
mov
imul
push
push
adc
arpl
adc
mov
fisubrs
pop
mov
mov
push
jl
aas
les
shrb
mov
add
xchg
push
out
sbb
dec
pushf
ret
cwtl
std
pop
pop
pop
mov
pop
pop
xchg
shll
cltd
jbe
test
stos
fbld
mov
movsb
cmc
jnp
adc
adc
imul
stc
add
icebp
or
mov
push
jne
push
into
stos
cmpsb
jno
stos
add
xor
sbb
test
fistpl
push
push
cmp
jnp
fbld
pusha
lock
fildl
xor
and
ljmp
sub
push
gs
mov
pop
mov
mov
aam
sbb
add
nop
cmpsl
xchg
sahf
sub
loop
pop
adc
jo
mov
push
sub
pop
push
sbb
mov
add
sti
xchg
adc
sub
xor
fbld
popa
je
jmp
popf
insl
int3
push
shrb
cmpsl
mov
sbb
jno
hlt
jo
icebp
cltd
call
out
stc
pop
in
mov
cmp
pop
mov
iret
outsb
mov
hlt
cld
mov
call
adc
jb
imul
fimuls
sbbl
inc
int
out
push
fistpll
xor
mov
test
cmc
adc
test
ret
xchg
iret
das
lds
pop
dec
in
shll
add
stos
adc
sbb
jl
outsl
int3
pusha
loopne
sub
mov
andl
int3
outsb
add
out
fistl
ret
sub
sbb
fnstsw
mov
adc
cwtl
xor
mov
and
sub
dec
scas
and
jle
mov
jns
xor
aam
fcompl
scas
mov
dec
dec
ret
adc
mov
cmp
out
inc
jle
pop
aam
stos
cmp
mov
or
push
cmp
scas
bound
mov
push
add
sbb
pop
mov
xchg
cli
push
mov
mov
xor
add
aas
mov
mov
dec
cltd
cmc
iret
ret
popf
xchg
lock
sbb
cs
xor
loope
dec
or
dec
cmp
sub
mov
lret
inc
pushf
int
adc
sub
adc
iret
or
add
pop
push
movsb
jmp
movsl
jge
testl
loop
adc
mov
arpl
mov
jle
int3
xchg
into
mov
testl
dec
test
scas
fldenv
int3
inc
loopne
jp
push
sbbb
arpl
add
mov
sbb
push
push
scas
lds
aad
adc
iret
or
stc
pop
xchg
mov
push
hlt
dec
mov
iret
xchg
in
xchg
in
sbb
xchg
outsl
or
or
jecxz
push
inc
push
or
ss
movl
test
std
out
jno
cli
pop
mov
add
dec
adc
sahf
mov
popa
cmpsl
sub
insl
jns
mov
mov
les
or
cmp
test
push
xchg
scas
mov
and
call
pop
push
jo
mov
sub
sbb
sbb
iret
dec
or
add
push
lods
xor
push
mov
call
push
xchg
insb
jo
mov
dec
arpl
lahf
repnz
jbe
pop
and
adcl
mov
outsl
mov
mov
sbbb
int
push
mov
out
rcl
rclb
shll
int
cmp
testl
adc
mov
out
dec
and
or
fldcw
in
cltd
loope
xchg
sahf
mov
cwtl
sarb
mov
inc
mov
add
movsb
ss
jb
loope
jno
arpl
aaa
rcrb
jg
int3
jbe
sbb
xor
and
lea
xor
and
aad
cmpsl
ret
xchg
cld
call
out
cmpl
inc
pop
js
xchg
in
lock
sbb
fnstenv
pop
push
and
sbb
out
lcall
sub
adc
fmul
add
test
sub
jle
popl
adc
fisubrl
js
dec
ljmp
lret
lret
notb
cld
sub
jb
jo
jg
roll
jl
out
inc
pop
mov
xlat
mov
pop
clc
sbb
insl
cltd
lea
jnp
out
dec
cmp
cmpsb
or
lods
insb
sub
push
cmp
pop
inc
jp
mov
or
push
xor
dec
mov
sbb
sbb
jg
cwtl
lcall
mov
aaa
iret
mov
ss
iret
push
push
mov
mov
or
lea
or
pop
aaa
cmp
mov
pop
fldt
jns
hlt
mov
ss
add
mov
sub
fsubp
cmpb
adc
fiadds
jge,pt
inc
ret
ljmp
ror
cmp
rorb
jmp
jg
xchg
push
out
inc
dec
or
call
cmp
inc
push
cltd
lods
pop
mov
psllq
mov
fildll
repz
pop
scas
sbb
mov
fldl
pop
push
fcmovu
jmpw
dec
mov
aas
lock
fsts
and
popf
add
jae
and
outsl
fdivr
pop
push
or
mov
xchg
lds
xchg
aas
push
stos
cwtl
mov
loope
iret
jb
cltd
lret
ljmp
jns
repz
fwait
inc
and
dec
loope
cmpl
xlat
push
int3
lds
stos
cli
cmp
scas
subb
rolb
adc
daa
add
gs
jno
adc
movsl
push
mov
dec
jb
cmpsb
cmp
or
add
adc
xchg
jmp
or
lea
ret
cmpsb
xchg
fldl
cmpsl
cmpsw
xor
outsl
lret
rcl
rcrb
jecxz
adc
imul
push
adc
ficoms
inc
push
fldcw
mov
sbb
xchg
push
int3
test
cmpsb
popf
test
cmp
ret
or
mov
pop
adc
rcr
lods
rcll
dec
push
push
push
push
fimuls
or
xlat
mov
mov
mov
stos
push
in
mov
or
adc
push
arpl
ret
shl
clc
lods
and
or
insb
mov
inc
jge
mov
push
stos
push
mov
dec
pop
push
dec
fbld
xchg
rcrb
lahf
xor
sub
hlt
and
fisubrs
repnz
xor
scas
jle
pop
push
jo
das
insb
fld
and
lret
jmp
mov
push
repz
sub
or
aam
aad
rcrb
scas
mov
rcll
movsl
lods
xchg
push
adc
jmp
and
pop
call
push
popf
stc
fcompl
icebp
hlt
mov
adcl
inc
out
mov
pop
cmpsb
and
sbb
push
mov
lock
jmp
and
pop
fmull
scas
loope
ja
push
inc
pop
xchg
movsl
out
dec
mov
add
sub
mov
js
je
inc
jns
xchg
inc
icebp
and
subl
cmp
mov
or
cld
lock
dec
ljmp
mov
std
jae
xchg
pushf
loope
inc
xor
mov
mov
push
dec
lret
and
dec
jne
add
xchg
repz
or
push
insb
mov
out
dec
imul
or
xchg
cli
mov
mov
sbb
and
pop
pop
call
adc
inc
cmc
leave
xor
pop
outsl
outsl
adc
cmp
dec
push
mulb
jecxz
data16
insl
sub
hlt
cmp
rorl
bound
inc
outsb
lahf
and
cwtl
lock
les
loope
lret
jo
xchg
rcrl
dec
hlt
pop
rcl
mov
push
scas
test
jge
fdivr
and
inc
jg
popa
scas
into
xchg
and
xlat
push
sub
outsl
mov
xor
out
mov
mov
pop
hlt
das
clc
mov
aas
rcl
inc
push
sub
lcall
pop
inc
xchg
and
int3
bound
jae
pop
jno
xchg
xchg
pop
mov
adcb
mov
xor
adc
sti
and
dec
mov
cltd
aam
sub
int3
xchg
xchg
mov
add
addb
jno
adc
mov
pop
mov
push
ds
insb
and
cmpsb
xchg
add
andb
push
dec
xor
jp
inc
xchg
jne
in
inc
add
stos
xchg
loopne
sahf
std
cmp
push
mov
mov
sbb
inc
loope
xor
scas
popf
lcall
fcmovne
mov
sarb
jne
jne
inc
xor
jne
cmpsl
cli
adc
scas
mov
inc
sbb
sub
inc
stos
hlt
push
ljmp
pop
lahf
pop
cmpsb
addr16
xchg
push
inc
jg
loop
jl
xlat
jecxz
mov
pcmpgtb
es
js
inc
and
paddq
cmc
stc
xchg
jmp
out
cli
xchg
sbb
push
das
xor
stos
xor
adcb
lahf
pop
dec
aas
push
rcl
mov
xor
lcall
lods
sbb
lcall
xchg
ficompl
jo
sbb
sarb
inc
nop
mov
ss
in
sub
jge
jecxz
scas
pop
cmp
mov
and
sub
pop
push
test
out
rorb
fs
aam
jnp
mov
leave
ret
imul
out
mov
call
cwtl
xchg
les
sarl
cmp
popa
pop
stc
push
out
and
push
lcall
xor
mov
test
shrd
inc
dec
mov
out
adc
ds
or
mov
fcoml
or
mov
jnp
mov
add
push
sub
in
pop
aad
cs
enter
aaa
mov
daa
mov
push
inc
gs
cltd
ret
ljmp
xchg
jge
or
movsl
lret
mov
inc
pop
mov
clc
and
cmp
testl
fsubrs
pop
push
xchg
je
dec
mov
xchg
mov
or
xchg
fnstsw
inc
inc
cmp
adc
and
bound
in
pop
dec
loope
push
fs
xchg
add
add
movsb
test
test
mov
mov
xchg
sbb
fildll
xchg
clc
daa
lods
sub
sub
cmp
cmc
call
mov
loop
clc
bound
clc
sub
cmpsb
cltd
es
ljmp
xorb
pop
mov
lods
sub
movups
in
xchg
shll
and
cmpsl
mov
mov
enter
and
xchg
cmpsl
inc
insb
nop
xchg
and
in
sbb
jp
es
push
arpl
cmpsl
xchg
nop
push
cmp
xorl
jbe
icebp
roll
out
mov
daa
das
lahf
pushf
mov
cltd
insl
into
test
fstl
je
cmpsl
repnz
dec
call
sub
nop
shll
test
std
push
sub
jne,pt
js
repnz
pop
xorl
lcall
insb
scas
xor
cmp
mov
pop
adc
cmpsl
jp
push
ljmp
call
and
adc
enter
fldcw
cmc
or
mov
nop
nop
adc
dec
push
mov
shll
mov
sub
xor
repz
sarb
out
cmp
and
xor
mov
pushf
jge
in
dec
insl
jmp
dec
xchg
sbb
call
mov
pop
movsl
sbb
pusha
dec
dec
mov
sbb
push
lret
or
jae
push
in
sbb
fidivl
mov
cmp
push
out
je
negl
out
add
sub
jno
add
rol
inc
enter
inc
gs
jne
jne
mov
enter
xor
xchg
jle
xchg
leave
and
iret
inc
bound
scas
push
xor
lods
repz
adcl
stos
sbb
xor
xchg
inc
cwtl
xchg
adc
push
in
jae
lcall
xlat
call
cmp
lahf
xchg
dec
pushw
mov
repz
popf
push
std
jecxz
test
xlat
test
push
push
pop
notl
cmpsb
mov
inc
dec
push
push
cmp
pop
loope
lock
or
add
mov
jle
sbb
iret
or
aas
dec
and
mov
mov
dec
lods
ja
jmp
dec
sub
adc
repz
in
mov
fucomi
push
inc
js
lea
ss
xor
rcrb
je
xlat
push
in
aam
sbb
mov
mov
je
push
add
adc
sbb
scas
je
addr16
orb
mov
push
mov
out
xor
sub
fstl
cmc
int3
pop
inc
jle
ss
push
sahf
xchg
xor
int3
xor
jge
repz
outsb
in
in
shlb
dec
invd
mov
push
out
aaa
push
mov
mov
inc
cli
cwtl
push
aas
bound
lds
arpl
aaa
repz
out
popa
cmpb
add
repz
std
mov
bound
pushf
ljmp
mov
pop
add
movsb
stos
mov
cmc
cmp
jnp
outsb
hlt
hlt
fldln2
inc
pop
out
or
fcoml
movsb
push
rcll
sub
mov
fcoms
stos
and
add
jno
int
stos
xor
setnp
jge
inc
in
adc
bound
sub
xchg
gs
cmc
sub
lods
jmp
lods
mov
mov
dec
add
lods
and
ss
test
scas
lcall
mov
push
xor
mov
push
cli
insb
jmp
inc
pcmpgtb
mov
sbb
xchg
nop
adc
lds
or
push
shll
lods
or
les
pop
je
mov
insb
in
scas
sbb
dec
inc
dec
jg
in
cmp
jp
out
mov
cmpsb
negb
gs
popf
cwtl
inc
adc
bound
dec
fisttpll
negb
push
sti
xor
cltd
sbb
jg
inc
repnz
and
mov
or
push
popf
or
out
std
and
jnp
cwtl
sbb
mov
jb
cs
mov
pop
jns
repz
pop
lods
xchg
mov
in
clc
les
sbb
aam
clc
jo
jno
xchg
in
cmp
mov
mov
jp
jb
and
xchg
mov
jg
pop
ss
leave
pop
pop
cltd
sub
mov
outsl
aam
sbb
cmp
mov
aas
loop
mov
mov
dec
test
inc
or
out
jns
mov
lret
fs
sbb
lock
jo
je
stos
into
jg
repnz
or
lcall
xor
xor
jns
rcrl
inc
inc
in
div
in
jae
insl
pop
loopne
loope
dec
cmp
addb
inc
and
mov
cld
xor
clc
cmpsb
fxam
mov
es
aas
jp
push
rolb
int
je
popf
out
insb
outsl
push
sub
insb
imul
out
pop
js
ret
mov
sub
test
pop
cmp
sub
pop
adc
lret
les
loopne
fs
loope
insb
imul
add
mov
shll
bound
jo
int
js
je
push
cwtl
imul
mov
lods
xor
iret
add
aam
push
mov
jnp,pn
sbb
mov
pop
push
repz
adc
cltd
push
out
andb
jne
xchg
xchg
push
std
sarl
mov
lret
inc
xchg
jmp
dec
jo
or
sysenter
sub
out
mov
push
mov
xor
sub
push
test
xchg
jl
mov
fs
mov
jne
dec
not
jns
movsl
repz
and
push
enter
incl
mov
push
scas
bound
mov
ss
in
gs
jp
add
arpl
out
rcr
sub
test
mov
push
enter
xchg
sbb
hlt
sbb
in
jecxz
nop
jae
cmp
stos
or
pop
nop
mov
imul
fsubl
pop
mov
daa
pop
mov
cmp
in
inc
jne
mov
jno
sub
sub
xor
addr16
adc
xchg
out
push
xchg
hlt
xor
sbb
pop
xchg
jo
lods
cltd
cwtl
mov
cmp
outsl
mov
insl
daa
dec
or
test
push
lock
pop
cmpsb
fsubrs
fcoml
and
jbe
jbe
lods
adc
hlt
js
mov
out
sarl
xchg
aaa
push
inc
mov
mov
inc
movsb
ficoms
fadds
mov
jge
push
inc
inc
out
dec
in
mov
mov
fiadds
push
shll
stos
enter
lds
mov
dec
push
aaa
mov
pop
loop
das
lret
pushf
and
rcrl
in
movl
in
mov
xor
push
popf
aam
xchg
loop
shlb
loopne
gs
fcoml
addr16
push
push
sub
aas
lock
mov
in
sahf
pop
inc
popf
loop
cli
push
fstl
test
jns
fistps
lret
fldl
push
mov
mov
cmc
dec
jns
fwait
stos
mov
dec
mov
xor
es
rorb
cmpsb
je
jecxz
mov
xor
das
call
xor
inc
outsb
and
sub
jbe
and
mulb
sub
pop
stos
push
or
push
fstp
out
ret
adc
xchg
add
mov
pop
and
fsin
fstpl
sbb
mov
in
rcrl
add
cmc
inc
and
int3
cmc
imul
shr
dec
dec
add
jp
sbb
pop
adc
aaa
or
xchg
lcall
enter
mov
cltd
lds
outsl
pusha
hlt
js
and
shlb
gs
ljmp
sti
sbb
int3
fstpl
pop
data16
mov
cmc
inc
jl
mov
pop
sub
mov
lcall
fimuls
mov
arpl
loop
xor
cmc
lret
enter
sbb
or
pop
push
xchg
insl
mov
aas
lahf
mov
ljmp
sub
inc
jns
jo
add
lret
rorb
sbb
pusha
pop
test
mov
imull
pop
in
add
fsubrs
push
push
insb
add
cltd
les
lods
pushf
jmp
mov
lahf
xor
mov
rorl
fistpll
xchg
mov
inc
xchg
mov
imull
in
std
mov
cmpsl
mov
mov
jecxz
mov
outsl
push
pop
or
gs
mov
test
and
fidivs
lds
jns
shrl
xchg
ret
jp
sar
sti
dec
mov
jbe
jnp
dec
popa
movsb
dec
js
xchg
loop
push
sahf
adc
push
mov
pop
les
cmp
push
dec
pop
sub
cmc
out
pop
add
adc
into
dec
lods
repz
adc
jmp
dec
pop
pushl
hlt
lahf
and
aas
subb
es
push
or
xor
pop
add
mov
stc
outsl
scas
pop
rcr
sbb
fwait
and
les
test
xor
cmpsb
xlat
adc
sbb
fimull
xor
push
dec
mov
popf
xor
xor
les
ret
icebp
lret
jns
test
ret
push
ret
pop
push
lcall
out
ficoms
aam
push
jecxz
inc
cmpl
in
xchg
mov
ret
das
outsb
cs
fldt
lea
into
mov
add
pop
ja
adc
jo
lret
sub
in
dec
lahf
mov
lds
sub
pop
adc
dec
mov
std
or
pop
jo
rolb
cltd
sbb
pop
stc
mov
pop
aam
daa
notb
lcall
inc
xor
xor
insb
ss
mov
pop
lcall
gs
xchg
sub
in
xchg
push
inc
dec
add
outsl
xchg
mov
in
aas
add
test
sbb
lods
xor
pop
dec
xchg
push
movsl
jmp
in
imul
dec
add
jae
mov
je
fisubrl
lock
jb
ret
jmp
pop
pop
fptan
popf
jge
inc
les
imul
pop
popa
dec
aam
iret
loopne
arpl
push
add
nop
or
cld
idivl
pop
inc
xor
mov
hlt
mov
insb
mov
mov
cmp
cld
push
mov
mov
adc
cmc
mov
pop
comiss
xchg
test
cmpsl
mov
int3
rorl
add
jne
sub
push
stc
xchg
jle
cmc
scas
jecxz
push
insb
outsl
mov
or
mov
mov
mov
sub
lcall
mov
sbb
adc
das
adc
shll
xchg
mov
cmp
xor
in
outsl
outsl
xchg
jmp
jo
inc
add
sub
js
lcall
stc
adc
mov
mov
pop
stos
xchg
subb
jb
fldcw
add
cmp
dec
mov
pop
jbe
das
dec
push
sub
rorl
or
or
mov
sub
cmp
push
pop
std
cmp
push
aas
mov
jb
idivl
das
and
daa
cld
cmp
xor
out
sti
fiaddl
lret
sbb
loopne
popf
mov
push
in
out
or
sbb
inc
out
lea
xchg
xchg
std
shll
mov
std
jecxz
sub
mov
xlat
xor
dec
sar
fstl
arpl
mov
cmpb
sbb
mov
adc
pop
js
push
mov
test
call
pop
nop
jo
shrl
push
push
int
icebp
push
imul
add
inc
dec
sbb
push
out
bound
pop
add
lods
aas
pop
xor
loop
mov
fwait
jo
and
imul
jno
cwtl
mov
cmp
loop
and
aam
js
or
ljmp
jnp
fadds
fs
sub
clc
cmp
test
rolb
into
inc
leave
push
pop
imul
int3
inc
sbb
pop
mov
dec
cmp
test
add
push
pop
fwait
aas
sbb
push
arpl
and
mov
xlat
xchg
sahf
ds
aam
int3
pushf
in
add
mov
push
lret
xor
fiadds
ja
sub
push
adc
mov
sub
and
arpl
sti
stc
xchg
movsb
inc
jl
jnp
adc
xor
add
insl
push
inc
js
pushf
shrl
inc
les
jae
mov
dec
lret
int3
push
xchg
dec
xchg
enter
mov
xchg
sahf
push
dec
pop
neg
pop
out
inc
pusha
sub
testb
and
std
mov
xor
inc
or
push
aaa
mov
jno
lret
cld
jmp
or
jnp
lret
and
pop
ss
lds
and
mov
inc
mov
add
mov
pop
jns
aad
push
mov
mov
fbld
movsl
mov
fnsave
inc
loop
xor
xchg
add
cmp
int
decl
mov
mov
dec
xor
and
inc
lcall
jl
mov
mov
xchg
in
fstl
sub
jge
sbb
adc
shll
cmp
jge
pop
cmp
test
repnz
and
pop
xlat
push
push
lea
mov
fcomps
lret
int3
movl
mov
sub
fildl
test
xchg
mov
add
push
int3
cwtl
mov
pop
cmp
sbb
fisttpll
adc
fisubs
jne
mov
pop
ret
mov
xchg
cltd
hlt
mov
stos
icebp
xor
icebp
xchg
or
add
and
ret
movsl
mov
mov
adc
popf
jnp
mov
in
mov
dec
loop
lods
add
insb
pop
dec
rorb
push
cltd
jle
jae
mov
test
cld
or
cwtl
aas
decb
repnz
jnp
outsl
fwait
and
dec
mov
rcll
sbb
xchg
ja
stos
pop
js
jnp
inc
mov
and
mov
push
mov
add
loopne
rol
outsl
into
movlps
subl
out
push
xchg
movsl
inc
rorl
lock
out
inc
sbb
jmp
into
mov
aad
inc
sub
inc
fcompl
jmp
sub
push
dec
sub
mov
pop
and
fisubl
lods
or
je
jbe
int3
sub
arpl
in
into
pop
xchg
aaa
leave
stos
repnz
mov
mov
pop
jns
sub
mov
call
lds
addb
push
loopne
movsl
inc
pop
lcall
cs
push
js,pt
cwtl
popa
loopne
mov
push
push
dec
and
push
dec
ljmp
xchg
push
xchg
mov
ret
aaa
stc
xor
outsl
mov
pop
add
mov
and
xlat
std
pushf
or
in
pop
repz
cli
sub
push
mov
arpl
sub
mov
insb
imul
lock
pop
imul
cli
pusha
sbb
pop
data16
push
mov
dec
mov
jge
push
mov
inc
xchg
iret
xchg
in
cmp
sbb
xor
and
lcall
sub
test
or
and
mov
or
push
jmp
repz
cli
stos
aam
mov
mov
cmp
loopne
mov
test
fmul
push
push
dec
aad
xchg
repnz
dec
push
cmc
imul
in
lret
cli
sub
into
cltd
lcall
mov
pop
lret
int3
push
jl
outsb
push
mov
lock
xor
sbb
lea
ja
xchg
dec
push
or
in
nop
pop
xor
out
insb
mov
and
js
mov
pop
jb
pop
jb
sbb
rorl
jno
xchg
sub
jbe
das
pop
inc
mov
adcl
mov
lret
out
jno
fmuls
mov
xchg
scas
xchg
xchg
sbb
fstps
lds
arpl
int3
pop
cmp
mov
inc
mov
sub
lods
sub
fs
cmp
xchg
fmulp
push
jo
repnz
les
loopne
mov
inc
mov
adc
xor
les
and
add
sahf
std
ds
mov
fsubr
mov
or
inc
mov
and
lret
sub
add
sbb
cmp
lcall
xor
pop
int3
sub
push
cmp
neg
aas
inc
leave
js
loopne
dec
pop
call
xchg
pop
dec
xchg
mov
push
dec
jbe
ret
iret
rorl
rclb
mov
rol
nop
jle
xor
clc
lds
jo
lcall
sbb
cmpb
test
ret
push
and
sarl
cmpsl
mov
lods
sub
loope
jp
lcall
les
inc
and
jnp
and
cmpsb
movsb
fcompl
fnsave
xlat
test
bound
push
outsl
ss
enter
fldcw
sub
xor
mov
fistps
das
sti
das
inc
push
or
mov
iret
dec
rcl
push
mov
dec
out
inc
sti
popf
xchg
movb
xor
push
push
imul
repz
frstor
dec
add
mov
pop
or
jp
dec
mov
cmc
jne
stos
add
xchg
and
scas
out
xchg
pop
ja
bound
push
xchg
mov
xor
jb
rorb
shll
fisttps
outsl
flds
imul
std
sbb
add
insl
xchg
xchg
lods
cmpsb
add
inc
dec
push
sbb
mov
mov
inc
jmp
fnstcw
scas
xor
adc
es
pop
ficompl
in
jl
sub
sub
outsb
pop
lahf
xchg
test
aas
clc
ret
jge
dec
xchg
dec
push
in
stos
add
scas
mov
push
mov
mov
loop
addr16
ja
sub
jnp
loopne
push
bound
pop
jae
insb
ja
std
cmp
aas
test
jae
das
inc
sub
shll
push
inc
mov
fdivrl
jecxz
add
and
push
test
lds
daa
test
and
ret
cmp
ret
fnstsw
and
and
add
jge
arpl
cmp
leave
cwtl
or
push
int
dec
clc
push
dec
lock
jns
ljmp
ja
jno
mov
lea
mov
imul
sub
dec
in
dec
stos
out
lds
cmp
inc
pop
out
mov
mov
std
stos
or
pop
incl
lcall
add
pop
or
jmp
dec
rclb
push
cmp
movsb
mov
sbb
jp
sbb
lock
push
test
sbb
pop
fstpt
jp
mov
push
push
adc
jl
mov
sub
cmc
cmpsb
push
in
addb
push
test
dec
std
iret
mov
leave
adc
stc
mov
fmull
ficoms
insb
and
pop
mov
dec
xor
lret
jmp
ret
jmp
mov
pusha
xchg
out
fistps
ljmp
aam
movsb
aad
mov
dec
aad
sbb
stc
nop
mov
gs
dec
inc
insb
xchg
cmpsl
jle
lods
cmc
cmp
sahf
shll
mov
or
jmp
fstpl
lcall
xor
dec
adc
xchg
aaa
dec
addb
or
xor
push
adc
sub
sahf
mov
jge
cmpsl
push
pop
inc
addr16
mov
sbb
add
aad
lret
pop
cmp
mov
les
jl
sbb
sti
pop
cmp
push
xor
jge
hlt
shlb
in
out
pusha
jle
stos
mov
or
xchg
adcl
nop
nop
int
pusha
cmpxchg
cmc
mov
cmp
es
popf
les
cmp
sub
mov
adc
mul
idivb
ja
jmp
loop
shll
xchg
xlat
dec
outsl
pushf
iret
loope
aam
mov
fs
mov
xor
mov
pop
stc
or
in
push
adc
xchg
cmp
jne
mov
mov
sbb
push
mov
jne
add
ljmp
sub
inc
dec
mov
fs
js
pop
jmp
cmpsl
or
fisubrl
pushf
mov
sbb
xor
mov
aaa
or
mov
pop
cmp
dec
stos
pop
mov
inc
imul
arpl
adc
xchg
xchg
loopne
in
add
cmp
sbbb
xorl
das
sub
pop
imul
in
out
push
stc
push
aam
ficompl
aas
inc
mov
pushf
mov
cli
jp
pop
pop
loop
ja
mov
pop
jo
and
inc
je
rclb
sahf
daa
mov
pop
or
loopne
aad
insb
push
pop
cmp
mov
test
mov
xor
push
pop
mov
fisttpl
cli
lods
imul
aad
orl
sub
fimull
add
mov
pop
adc
and
gs
mov
filds
mov
das
imul
xor
imul
add
pop
sarb
sub
sahf
mov
jg
movzwl
push
jo
and
fisttps
cmp
pop
or
and
jecxz
sahf
out
inc
fldcw
pop
jp
dec
add
cmpsl
fsubs
pop
fmuls
mov
ljmp
outsl
jno
stc
cmpsl
cmp
das
icebp
jp
adc
mov
xor
or
dec
add
pop
movsl
js
call
xchg
cmp
cmp
out
push
fadds
nop
or
push
and
addr16
sarb
pop
mov
std
mov
cmp
leave
jae
subl
mov
loope
popa
sti
push
xor
xor
inc
mov
ja
cltd
mov
push
xlat
call
cld
pop
int
loop
lahf
push
jl
xchg
push
mov
ret
ljmp
cltd
gs
dec
fwait
sub
jp
mov
hlt
out
aam
lret
mov
aam
cmp
xchg
jp
lcall
mov
test
lret
aaa
xor
xchg
inc
hlt
cmp
testb
mov
inc
mov
lret
mov
add
pop
pop
idivl
sbb
pusha
cs
xchg
dec
pop
in
aaa
fwait
test
push
lds
sub
mov
into
es
lock
cs
push
imul
sub
mov
fistps
xchg
ret
sbbb
shl
jmp
fnstenv
add
fisubrs
shl
lods
insl
ficomps
clc
fcomps
mov
mov
cmp
sub
push
or
fimull
inc
movsl
jo
pop
aad
and
xchg
ss
mov
cwtl
xor
cld
icebp
aad
data16
out
inc
gs
xor
add
push
test
mov
call
fildll
adc
xchg
add
adc
pop
adc
out
adc
mov
das
gs
leave
cmp
cmp
sbb
lret
or
dec
rcrl
or
xorl
mov
in
and
or
pop
fsubrl
push
js
addl
icebp
inc
mov
rcll
mov
and
out
mov
pop
xor
std
notb
push
int3
out
and
and
add
add
push
jmp
rol
in
lahf
jge
sub
movsb
jns
pop
mov
mov
fstpt
inc
sbb
xor
imul
mov
out
sbb
mov
cmpsb
enter
inc
cmp
ret
dec
dec
das
pop
addr16
cmp
enter
sbbb
in
add
mov
mov
adc
or
jmp
xor
mov
pusha
pop
mov
imul
test
fidivs
lods
inc
sbb
mov
jecxz
clc
dec
or
pop
shl
outsb
lcall
cmpsl
mov
movsl
loop
adc
adc
das
aas
mov
popa
adc
mov
mov
xchg
mov
lret
js
dec
out
mov
es
jbe
cmc
in
lret
gs
bound
inc
push
aaa
fs
outsb
iret
icebp
mov
les
push
dec
or
into
mov
stos
imul
in
push
add
inc
int
sub
data16
dec
mov
jmp
iret
push
orb
pop
dec
mov
sbb
xor
jl
stos
jo
push
sub
ss
imul
sti
test
and
shll
mov
sbb
sub
mov
dec
xchg
imul
bound
or
cmp
ret
je
seta
incl
incb
lods
fwait
mov
enter
mov
jl
repnz
jle
das
inc
sbb
lock
or
subb
repz
mov
movsb
outsl
pop
sbb
and
leave
mov
push
adc
sub
pop
inc
shll
jbe
aad
mov
shr
mov
mov
jecxz
cmp
repnz
repz
and
xor
xor
pop
mov
shlb
daa
xor
pop
pop
mov
xlat
arpl
sbbl
out
push
and
mov
outsb
jmp
rclb
pop
js
stos
pop
push
inc
out
fistl
xchg
sti
pop
xchg
mov
aam
test
rcll
xor
jbe
cmp
jns
sub
cs
inc
sbb
ret
pop
mov
jbe
mov
mov
xchg
push
jle
push
cmp
mov
out
icebp
cli
jbe
das
mov
adc
cli
adc
inc
jno
fisubrs
sbb
jp
iret
dec
fucomp
leave
stos
and
add
enter
rorb
or
in
jp
adcb
jns
call
fwait
popf
sbb
shl
xor
push
inc
das
call
push
xlat
movsl
mov
jno
insl
iret
push
std
lahf
lret
int
in
xchg
jge
add
push
les
lahf
sbb
sbb
cmp
mov
sbb
push
sarb
bound
imul
ret
aam
inc
lret
or
xlat
aaa
sbb
push
inc
inc
lds
pusha
push
sub
lcall
pop
xor
fistl
data16
faddp
jno
lock
or
xchg
lcall
fimuls
xchg
loopne
jns
inc
insb
jae
bound
je
enter
mov
xor
bound
xchg
xchg
lock
out
out
out
add
jg
insl
mov
push
rcrb
stos
gs
push
jo
out
cmp
movl
push
mov
bound
lret
in
sub
jmp
fldt
mov
mov
cmpsl
mov
aaa
mov
vcvtsi2sdl
nop
mov
pop
pop
cmpsl
test
in
shll
mov
dec
in
cmp
inc
and
xchg
int
iret
add
loop
lcall
cld
mov
sbb
sbb
push
sub
mov
sub
sub
or
movsb
add
jp
imul
mov
mov
ss
xor
xchg
clc
fwait
arpl
outsb
adc
and
sbb
xchg
and
or
add
dec
dec
leave
and
movsl
inc
int3
or
add
add
in
fmul
inc
xchg
xchg
sub
ficompl
pop
or
cmp
mov
dec
xchg
movsl
mov
aad
mov
bnd
or
jg
sarb
push
cmp
add
xchg
fs
repnz
filds
icebp
leave
int
push
mov
lods
jge
daa
iret
inc
int
sub
xchg
das
xchg
pop
cltd
mov
in
and
ljmp
outsl
jg
cld
xor
jo
test
outsb
pop
xchg
stc
jb
adc
inc
or
jl
test
dec
sub
arpl
jp
dec
cmp
mov
aad
data16
dec
dec
jno
lcall
add
and
pop
cmp
inc
addr16
shrl
and
adc
lret
popf
rol
pop
and
jbe
cmp
mov
adc
out
loope
dec
test
mov
sahf
std
cmp
and
jns
or
xchg
mov
out
js
gs
and
pop
push
insl
sahf
ljmp
lahf
out
ds
jmp
dec
xor
pusha
lahf
sbb
in
cmpsb
xor
add
out
cmpsb
sarb
cwtl
pop
fwait
es
pop
cld
lods
pusha
in
jp
push
adc
fdivl
imul
data16
lret
xchg
xchg
cmp
mov
test
loope
add
sub
jns
push
dec
cmp
xchg
in
jmp
jmp
push
xchg
dec
ds
es
cmp
add
outsl
sub
inc
stos
fbld
out
cli
pop
stc
rcl
cmp
sub
jge
jnp
adc
cltd
xor
xor
jns
movsl
frstor
inc
cld
fs
fcompl
cld
gs
mov
jl
in
test
mov
lods
sub
xchg
xchg
fisttps
jns
mov
mov
fadd
cli
test
or
push
repnz
loope
pop
cmp
testb
inc
flds
or
out
push
mov
popa
int3
or
add
pop
punpckldq
xchg
pop
jne
mov
adc
add
adc
xchg
imul
xor
imul
dec
adc
aad
push
dec
jg
lret
test
hlt
mov
mov
aam
mov
inc
sarl
sub
xchg
mov
in
pop
das
adc
pusha
cmp
xchg
fdivrs
inc
test
xchg
mov
mov
call
popf
pop
jecxz
dec
jmp
popf
adc
repnz
jmp
and
lock
mov
mov
dec
cli
cli
mov
loopne
icebp
fldl
push
mov
push
mov
jb
jp
mov
pop
lahf
ss
push
pop
or
test
in
fxch
pushf
bound
and
adc
mov
pusha
cli
int3
in
jns
inc
loopne
cmp
xor
pop
fwait
xchg
sarb
dec
leave
jb
jg
jnp
std
enter
rcrb
imul
dec
out
mov
or
incl
xlat
dec
fiadds
mov
adc
leave
jns
stc
push
icebp
inc
cmpsb
sbb
pop
or
leave
idivb
lock
cmpsb
cmp
pop
call
stc
in
push
xlat
clc
in
push
scas
inc
dec
cmp
dec
sub
add
mov
int
and
mov
stos
mov
in
sbb
pop
test
xor
push
mov
sub
mov
xor
in
pushf
cmp
mov
adc
add
or
fidivrs
pop
out
mov
sbbb
fmuls
mov
rcll
push
out
stc
sbb
xor
shrb
outsb
imul
out
lahf
or
int3
mov
and
push
cmc
cmp
mov
lcall
movsl
scas
xchg
fs
mov
cmpsb
daa
in
mov
mov
or
daa
sti
js
arpl
mov
rclb
stos
xchg
adc
xchg
xchg
sub
data16
pop
mov
add
es
insl
or
rorl
lahf
lret
mov
xor
rclb
sub
mov
sti
dec
push
sub
out
cs
cwtl
inc
nop
cmpsb
jne
pop
iret
fwait
or
dec
inc
aas
decb
pop
mov
xor
scas
test
or
cmp
or
mov
lock
push
jmp
jae
pop
out
stc
xlat
inc
inc
shll
cmpb
jp
fs
pop
outsb
inc
xor
cwtl
or
xor
sbb
rclb
push
jno
adc
xchg
hlt
jle
sub
push
addr16
cmpsb
mov
mov
jg
pop
mov
js
aam
ret
add
dec
mov
dec
sub
inc
xor
stc
mov
push
jno
jbe
lods
pusha
insb
in
sbb
cltd
arpl
in
adc
pop
mov
mov
jb
dec
push
loope
fs
outsb
mov
sub
stc
push
pop
ljmp
lcall
shr
add
out
rolb
pop
fdivrp
add
xor
pop
in
cwtl
sub
pop
ret
mov
les
cwtl
jns
push
ja
cmp
xor
jg
repnz
jne
frstor
test
cmp
push
sbbb
or
es
daa
xchg
lahf
jbe
subl
jge
pop
pop
test
daa
sarl
pop
push
test
inc
jae
lcall
mov
add
in
pusha
aad
loope
popf
rcr
adc
int
adc
out
cwtl
mov
int
inc
test
mov
sbb
push
in
pop
xchg
out
dec
and
push
cld
mov
sub
pop
addr16
sbb
jl
mov
xor
aad
in
insb
mov
mulb
push
mov
xchg
nop
xor
sbb
pop
clc
aas
leave
std
and
fildll
repnz
pushl
mov
orl
in
fdivl
loope
jbe
movsl
or
xor
inc
incb
and
inc
push
xchg
fdivp
cmp
xchg
dec
icebp
out
andb
mov
insl
dec
icebp
pop
gs
std
dec
mov
lock
mov
lock
lahf
and
adc
adc
mov
scas
ret
sub
call
ss
fwait
lahf
stos
loopne
mov
jnp
xor
push
daa
pop
push
pop
fnstcw
push
call
jle
mov
iret
pop
mov
sbb
sbb
sbb
ja
jnp
push
add
adc
stc
adc
xchg
adc
popa
fsubrl
into
out
pop
repnz
mov
pop
insb
arpl
adc
mov
out
pop
inc
or
idiv
nop
lods
mov
lret
aam
leave
add
jecxz
test
pop
dec
sub
insb
js
cmc
mov
lea
xchg
inc
cmc
push
fistpl
xor
mov
fistl
cmp
out
orl
jl
cmp
or
cli
cmp
add
jmp
pop
stc
aam
cmc
mov
pop
sbb
lods
jne
movsb
out
nop
fbstp
mov
and
dec
adc
xchg
jo
adc
jg
mov
cmp
mov
adc
mov
dec
and
mov
lahf
adc
lea
in
pop
sti
pop
inc
pop
xchg
hlt
enter
popa
mov
loope
iret
in
std
cmp
into
je
das
fwait
inc
pop
test
sub
loop
sbb
std
push
test
dec
sarl
mov
cmp
fadds
repnz
inc
shrb
fidivrl
mov
jle
or
mov
pusha
test
dec
mov
push
bound
ds
hlt
pop
xchg
lahf
push
lea
cli
inc
addl
and
jae
lds
mov
imul
push
fldl
gs
cmp
fcompl
scas
push
in
ja
mov
jne
movsb
and
jo
mov
or
push
ljmp
xchg
loopne
push
jb
pusha
iret
lret
mov
bndldx
xchg
sbb
in
sub
pop
mov
aam
dec
xor
pushf
fwait
add
add
je
test
loop
cmp
lahf
mov
mov
mov
into
out
jmp
adc
in
aaa
cmpl
iret
jne
lea
rclb
xor
pop
sahf
mov
inc
dec
xchg
pop
lds
ret
loope
stos
push
pop
pop
mov
jle
les
push
dec
loope
mov
mov
lret
ds
outsb
test
mov
je
cli
scas
cld
or
jbe
int
pop
mov
and
dec
sub
mov
sub
adc
sub
or
mov
or
repnz
cld
xor
popf
mulb
aas
cli
movsb
leave
or
out
dec
dec
pop
mov
into
sahf
and
push
loopne
sbb
icebp
sub
dec
ss
push
add
mov
jg
mov
jp
rcrb
lods
sub
lds
xor
movsl
nop
mov
fmulp
rorl
mov
mov
add
aam
sbb
js
adc
mov
pop
cmp
and
mov
fdiv
add
ficoms
mov
dec
jecxz
sub
insb
mov
add
sarb
pop
push
out
data16
fs
push
or
js
enter
pusha
mov
fnstcw
xchg
icebp
testb
aam
loope
dec
pop
testb
push
pop
and
cld
lret
bound
ds
scas
adc
ds
pop
add
movsl
ljmp
je
psubd
dec
mov
je
jne
pusha
adc
dec
loope
dec
push
adc
jp
mov
inc
paddw
or
jae
fcoms
aaa
lods
cli
pop
or
pusha
popa
sbb
enter
call
nop
jge
out
cltd
mov
scas
mov
push
or
mov
pop
push
outsl
insb
add
test
mov
aaa
push
pusha
and
mov
test
movlps
mov
rcrl
adc
je
arpl
or
ret
cmpb
push
pop
xlat
adc
out
and
dec
lods
pop
aam
add
pop
cmp
jmp
xchg
fstps
or
ljmp
rcr
call
mov
int
xchg
push
fs
es
sub
dec
andl
stos
push
xchg
std
leave
mov
lock
test
adc
cmc
mov
add
lcall
inc
aad
adc
xchg
int
and
cmp
pop
jl
sbb
subl
pop
adc
in
les
xor
sti
dec
or
cmp
or
push
mov
push
shrl
mov
mov
mov
mov
push
ret
and
mov
xchg
outsb
shll
pop
sahf
pop
insb
add
insl
add
mov
notb
add
jmp
inc
mov
mov
cmc
scas
sub
les
aas
push
mov
cs
and
dec
cmp
add
mov
sbb
call
loope
lret
stc
int
inc
cmpsl
add
pop
mov
inc
pusha
sbb
nop
int
clc
cmpsl
sahf
dec
xor
push
in
out
push
mov
sub
xor
scas
and
imul
pop
test
push
mov
xchg
hlt
xor
mov
rolb
call
rcrb
xor
add
jnp
cmp
xchg
imul
pop
mov
ss
lcall
ret
push
mov
dec
adc
hlt
jmp
or
inc
xchg
mov
aad
lret
testb
mov
les
adc
dec
lock
fs
xchg
cmp
jnp
xor
fsts
inc
jno
xor
imul
mov
xchg
mov
ficomps
mov
sbb
push
hlt
gs
in
or
insl
push
and
cmp
mov
xchg
or
add
cmp
mov
or
fcomps
sbb
dec
pop
jmp
jp
js
stc
repnz
call
adc
lahf
test
cwtl
test
into
cmp
sbb
jne
pop
xchg
push
mov
xchg
mov
les
js
lret
mov
test
mov
push
sahf
jns
sub
mov
sar
and
cld
sbb
cld
pop
mov
lcall
aam
adc
sbb
mov
adc
fmul
dec
cmp
insl
or
cmp
popa
mov
int3
test
repz
js
pop
mov
pop
dec
adc
xchg
scas
inc
pop
push
mov
mov
lahf
xor
in
push
adcl
cltd
cmp
arpl
mov
add
inc
and
push
sbb
test
sbb
pop
mov
lock
iret
inc
mov
pop
cmc
inc
bound
cmp
mov
scas
imul
mov
mov
in
push
lods
mov
cmpb
or
add
xchg
jbe
je
vrcpss
mov
repz
xchg
push
xchg
pop
or
dec
cwtl
jb
jge
fsubr
rol
lahf
aad
int
or
jg
push
hlt
lea
out
fnstenv
dec
in
ja
leave
cmp
mov
cwtl
popf
ret
jno
adc
dec
pop
mov
jg
push
dec
jge
mov
sub
addr16
addb
sbb
mov
aam
adc
jp
sbb
arpl
hlt
in
sbb
lods
enter
add
inc
pop
adc
mov
cld
pop
outsb
aas
filds
jp
decb
mov
dec
cmovno
xchg
lar
jbe
lret
pop
xchg
push
add
int
icebp
sarl
mov
xor
mov
and
jnp
imul
aaa
out
mov
test
movsl
mov
push
pop
clc
adc
jo
or
call
ret
add
jl,pn
jae
jp
clc
push
sbb
xor
lods
pop
sbb
call
in
xchg
pop
lock
fs
imul
add
fidivl
shrl
inc
js
dec
pop
ficoms
pusha
out
sub
ror
sbb
or
out
aaa
jno
pop
mov
xchg
sub
mov
pop
test
dec
pop
shlb
or
enter
and
pop
cmp
push
dec
sub
mov
lds
xchg
push
js
sbb
or
push
jl
pop
mov
icebp
and
jbe
leave
inc
mov
sbb
shr
push
call
mov
and
xor
jae
test
arpl
push
inc
dec
adc
cmp
sti
test
outsl
cmp
dec
add
out
and
or
fs
sub
pop
pusha
dec
mov
addr16
push
and
test
test
mov
push
rcl
sbb
mov
add
cmp
inc
std
jno
xchg
fwait
call
mov
dec
adc
sub
jae
in
mov
je
xlat
out
lock
jp
pop
insb
mov
test
adc
pop
das
imul
arpl
jmp
movsb
cwtl
gs
inc
lahf
inc
notb
push
mov
sub
stos
push
cwtl
insb
mov
out
sbb
sbb
push
adc
mov
inc
add
scas
repz
xchg
jmp
mov
xchg
movb
repnz
lret
adc
sbb
scas
arpl
xchg
push
in
adcb
std
dec
mov
and
mov
dec
loopne
shll
dec
sarl
lcall
dec
test
xor
mov
outsl
stc
mov
sub
leave
ss
or
fisttps
sub
mov
out
cld
insb
insb
js
icebp
mov
pop
push
std
xchg
cld
inc
jmp
divb
clc
sbb
dec
cmp
js
jmp
sub
inc
mov
jle
pop
scas
and
mov
test
dec
lods
stos
out
or
add
outsb
fsubrs
imul
pusha
or
ficomps
mov
and
sub
mov
ret
cmc
jecxz
push
lcall
mov
push
test
and
lods
dec
insl
in
cs
sub
pop
out
mov
push
dec
adc
imul
ret
xor
pop
dec
jb
call
xchg
cmp
mov
xchg
stos
mov
mov
and
aaa
ds
xchg
nop
fstpt
jmp
ja
mov
cltd
ljmp
push
cmp
pop
cmpsl
fisttpll
das
push
in
loopne,pn
push
test
push
xor
push
or
hlt
out
mov
pop
ret
jb
lea
mov
hlt
cmp
ljmp
popa
pop
leave
xchg
jb
aas
jmp
mov
sub
movsb
xor
cmpsl
lret
xor
adc
push
add
push
push
mov
inc
sub
or
push
repnz
xor
addr16
sahf
lods
arpl
dec
clc
mov
cli
mov
outsl
dec
or
or
mov
xchg
mov
push
notb
push
divl
mov
cmp
inc
outsl
or
push
ret
rcl
xchg
clc
dec
mov
jo
in
test
pop
sbb
orb
ds
aad
xchg
in
repnz
imul
test
push
mov
jo
fiaddl
outsb
push
enter
or
andb
rcrb
adc
repnz
mov
jg
loop
push
arpl
out
push
sub
push
lds
repnz
mov
pop
hlt
gs
xor
xorl
jbe
add
pop
xchg
mov
jmp
sbb
and
mov
popf
pop
sub
mov
mov
divb
test
ja
cmp
je
sbbl
pop
or
test
push
subb
aad
push
pop
mov
cmpsl
mov
xor
out
jmp
fwait
in
jecxz
in
decl
inc
lcall
mov
aam
xor
mov
mov
ds
sbb
orb
ss
and
dec
jp
in
es
pop
sbb
xchg
insl
xlat
push
imul
ror
enter
mov
inc
scas
into
call
inc
cmc
xchg
pop
mov
inc
adc
inc
aaa
cwtl
and
xchg
push
cmp
add
xor
inc
dec
jae
mov
mov
in
sub
std
dec
mov
cmp
pop
das
mov
jno
or
mov
sbb
mov
push
jnp
loop
mov
test
dec
and
mov
dec
sahf
int3
arpl
adc
dec
inc
sbb
jne
pop
xchg
mov
leave
dec
sarb
mov
out
scas
enter
fsubl
xor
ror
push
in
lahf
xchg
shlb
add
fnstenv
sbb
mulb
xchg
or
jnp
mov
orl
inc
xchg
stos
popf
int
xchg
sub
mov
in
sti
xchg
and
ficoml
xor
adcb
stos
push
lock
lds
repnz
test
pop
mov
outsl
iret
xlat
lock
xor
or
pop
aam
jae
fcoms
fwait
push
cltd
xor
fstl
test
aas
mov
in
add
imul
das
xchg
daa
mov
push
mov
retw
mov
imul
jo
loope
mov
aas
test
ja
mov
jb
jg
outsl
iret
inc
nop
mov
outsl
or
or
in
xor
xchg
add
jbe
test
stos
adc
mov
leave
jmp
dec
sub
sub
ja
cltd
xor
imul
xchg
mov
inc
add
pop
or
cs
or
and
sbb
imul
xor
push
test
fisubl
enter
inc
jb
cltd
repz
test
addr16
clc
arpl
xchg
scas
xchg
jo
or
sahf
mov
adcl
popf
stos
add
cmp
gs
xchg
pusha
imul
dec
adc
push
mov
cmp
insl
add
mov
shr
and
inc
mov
pop
pop
push
pop
or
and
push
movsl
or
pop
mov
test
test
rcll
xor
divl
jbe
lods
fwait
and
imul
inc
mov
mov
call
dec
push
xchg
aam
arpl
adc
mov
inc
mov
add
aad
in
outsb
jae
sub
push
movb
mov
out
lret
les
fisttps
jle
pop
hlt
push
rolb
jle
mov
or
pop
or
push
mov
xchg
push
pop
xor
leave
lahf
xor
aas
jle
mov
fcoms
inc
cmp
push
lcall
popf
popa
enter
adc
inc
or
xor
pop
pop
in
into
mov
xchg
stc
adcl
jbe
pop
inc
push
testb
sti
jmp
loop
push
xchg
jno
ficomps
fwait
outsb
xor
stc
and
lahf
mov
jb
jp
fimuls
jae
push
mov
cmp
in
aam
adc
xchg
jmp
mov
mov
cmc
and
dec
bound
mov
push
pop
movsl
negl
lds
sti
push
mov
lret
sub
push
push
icebp
mov
shlb
dec
adc
shrl
mov
lds
into
inc
insl
enter
or
inc
fbstp
add
pop
arpl
ds
dec
xchg
es
inc
cltd
sbb
out
insb
scas
ds
mov
mov
xor
push
mov
arpl
pop
jb
filds
inc
sarb
add
xlat
int
addl
lods
neg
mov
jl
cmpsl
fists
mov
in
das
or
or
sahf
mov
mov
in
aam
or
and
daa
js
xchg
cmc
aad
cmc
flds
push
add
lret
dec
inc
jnp
mov
roll
and
push
pop
pop
lahf
in
in
xor
add
gs
push
out
mov
xor
fwait
cli
dec
test
mov
xchg
add
push
loope
mov
fcoml
mov
push
fisubrs
dec
dec
repz
xlat
enter
dec
add
pop
sbb
ret
rcrb
xchg
clc
pop
jno
inc
test
push
push
or
sub
sbb
les
insl
sbb
gs
ja
inc
and
mov
mov
mov
sbbb
inc
xchg
inc
lods
das
push
lock
andl
lock
adc
xor
mov
push
clc
xchg
movsl
movsb
adc
std
cmp
es
push
and
scas
pop
mov
and
and
adc
xchg
enter
das
dec
cmp
dec
popf
mov
jl
jns
call
popa
mov
pop
push
fcomp
jbe
inc
push
mov
jmp
sub
and
jmp
fs
dec
mov
jg
mov
insb
shr
fwait
pop
out
imul
imulb
out
out
adc
aaa
outsl
push
mov
sti
xchg
pop
adc
sbb
sub
inc
cmp
hlt
mov
adc
sub
inc
fwait
insl
out
movsb
push
aaa
sub
clc
dec
sub
out
add
iret
js
lock
daa
xchg
pop
and
add
mov
xchg
out
aam
mov
fildl
xchg
dec
mov
hlt
jge
ret
shll
sub
ljmp
sub
xor
jg
lret
data16
push
scas
and
xor
mov
inc
fs
sub
mov
xor
dec
mov
push
lcall
xor
push
out
or
test
ja
mov
daa
mov
pop
andl
inc
mov
xchg
clc
imul
iret
push
jo
lret
lods
dec
and
fwait
ret
fsubrl
push
mov
icebp
pop
sub
in
into
out
inc
fwait
jne
add
dec
outsb
popa
add
cwtl
mov
cld
add
imul
mov
in
or
lret
or
mov
and
cli
jp
jge
insb
daa
xchg
adc
jl
dec
mov
or
ljmp
mov
ret
jg
sbb
mov
les
dec
test
xor
adc
das
frstor
dec
shll
sbb
jle
jmp
lahf
push
adc
cmc
test
loopne
dec
mov
pop
xorb
xchg
sarl
stos
movsl
jecxz
adc
pop
insl
push
add
faddl
push
shlb
pop
and
insl
outsl
jmp
fmulp
hlt
sbb
jmp
lods
lahf
call
sub
leave
imul
insb
mov
jmp
cwtl
and
cmp
divb
fidivs
jne
fcomi
in
pop
jmp
stos
and
mov
mov
das
out
cwtl
adc
ret
cmp
popa
fdivrs
push
or
mov
hlt
sbb
lods
pop
mov
rolb
in
or
xchg
pop
and
into
test
pop
fildll
inc
mov
js
jp
lcall
xchg
push
aad
aaa
sbb
xor
or
adc
push
test
mov
in
int3
cmp
ret
pop
push
sbb
daa
jne
out
pop
popf
icebp
orl
jp
adc
mov
test
mov
or
test
sahf
mov
iret
add
xchg
push
cld
ds
sbb
mov
adc
cmp
mov
sub
jnp
pop
sbb
test
adc
fwait
dec
je
ss
test
push
inc
or
leave
inc
inc
cmp
ljmp
mov
ror
push
jmp
pop
mov
jb
cmp
sbb
add
clc
shl
pop
hlt
mul
mov
sbb
mov
das
xchg
fisubrl
xchg
or
xchg
ja
out
add
jne
xchg
sbb
lcall
in
or
push
push
pop
call
adc
cmpsl
inc
xchg
sbb
ret
enter
mov
push
mov
orl
mov
dec
fnstsw
fs
repz
sti
movsl
scas
stos
push
lods
enter
inc
inc
andb
arpl
daa
outsl
insl
arpl
lret
jne
es
stos
lret
sub
inc
add
push
out
iret
mov
lds
mov
daa
cld
jae
loopne
inc
mov
jae
push
dec
cwtl
jmp
sbb
jo
test
mov
jne
jmp
sub
loopne
push
jb
orl
push
sarb
cmp
mov
dec
pop
shrl
mov
push
push
or
dec
mov
mov
aam
jae
lock
test
cld
and
add
push
inc
and
fdivrs
sub
mov
into
sub
lock
lods
xchg
and
lods
add
das
pmulhuw
repz
bound
adc
repnz
sub
add
mov
mov
in
add
and
ss
setnp
inc
mov
xchg
push
add
addr16
add
out
xor
xor
xchg
adc
cmp
pop
bound
in
les
arpl
jge
jl
mov
sbb
sub
movsl
sub
lahf
dec
fwait
jl
jmp
je
mov
dec
subl
mov
scas
dec
and
loop
add
cld
xlat
xlat
push
push
insb
mov
jne
dec
andb
mov
and
out
lods
test
xor
and
pop
push
arpl
lcall
lahf
jecxz
push
int
and
sbb
das
add
xchg
ljmp
cwtl
jecxz
cwtl
loope
fisubrs
out
mov
fs
js
sub
dec
add
mov
cmpl
outsb
push
lods
ret
dec
nop
fmuls
or
bound
out
decl
fs
popa
mov
push
repz
lcall
ret
dec
dec
and
mov
push
popl
push
xchg
inc
sub
push
inc
inc
ds
rclb
pop
sub
ja
sbb
out
adc
shrb
nop
mov
das
add
or
sub
dec
mov
aam
pusha
sub
scas
xorl
inc
pop
jo
pusha
lods
adc
nop
cmpsb
cmp
and
push
ds
jb
movsb
outsl
adc
pop
sub
sbb
fstp
aad
pushl
pusha
mov
push
cwtl
aad
jae
add
jmp
repnz
ficoms
mov
dec
inc
rol
push
cmc
cmpsl
xor
jmp
push
repnz
movsb
sbb
insl
pusha
insl
xchg
add
out
mov
arpl
jecxz
lods
outsb
loope
xlat
sti
cmp
test
out
push
loope
mov
fstl
xor
test
mov
dec
popf
fdivrl
mov
push
data16
xor
fstpt
dec
jge
jbe
movsb
imul
sbb
adc
enter
jmp
fs
mov
or
pop
into
dec
popf
or
pushaw
cltd
shrb
decl
or
ljmp
pop
pop
test
in
nop
xchg
imulb
je
shrl
dec
push
loop
jae
or
mov
mov
cmp
and
adc
repz
push
mov
jge
test
divl
cs
cwtl
mov
mov
out
insl
popf
jae
or
jg
jbe
xor
notb
lahf
cmp
inc
aas
inc
repz
mov
inc
repz
adc
sarl
fs
cmp
dec
in
sub
mov
xor
xchg
cmc
cli
mov
ljmp
or
sbb
cmp
or
inc
and
pop
or
lret
sub
mov
nop
pop
sub
fsts
lahf
jbe
add
dec
adc
iret
pop
pop
xor
push
and
ss
shlb
push
aam
imul
test
mov
mov
out
or
sub
push
or
shll
xor
out
data16
pop
fistl
es
ja
mov
cwtl
mov
dec
pop
mov
dec
mov
das
lock
out
xchg
pop
adc
push
sbb
fadd
push
inc
jge
clc
out
sbbb
xchg
cmp
ss
movsb
das
inc
mov
cltd
dec
stc
ss
popa
loope
inc
mov
movsl
adcl
and
aad
or
into
shll
inc
out
loopne
mov
jo
xor
enter
cld
shll
inc
rorb
movsl
mov
mov
push
movsb
and
lods
repnz
iret
push
and
jbe
das
movl
packssdw
sbb
ljmp
push
or
pop
xchg
add
mov
ds
or
inc
lahf
lret
mov
cltd
add
pushf
or
inc
sbb
test
sub
lea
sarb
in
push
pop
test
lock
lret
incb
pop
lahf
xchg
dec
cld
jo
add
fs
inc
lahf
and
mov
ficoms
inc
adc
push
dec
or
or
cltd
push
popf
fnsave
xor
repnz
shll
data16
in
out
repnz
mov
cmp
and
cmp
adc
push
fisubl
sarb
xchg
lock
imul
cmpsb
je
cli
xchg
jp
dec
mov
movsl
ret
lods
lret
pop
push
inc
repnz
movsl
jno
inc
mov
arpl
mov
das
mov
sub
xchg
pop
div
insb
push
xor
in
mov
xchg
es
dec
mov
insb
xor
sub
add
js
insb
sub
dec
sbb
mov
jl
in
and
stc
repz
sahf
or
jns
fsubl
lcall
int
stos
sbb
cmpsb
pop
clc
out
pop
mov
mov
loopne
outsb
cli
sub
subb
xor
sbb
rolb
sbb
ror
dec
loopne
sbb
sub
std
cmp
sbb
je
sbb
xchg
sti
nop
or
repnz
cmpsb
mov
popf
shl
dec
xchg
ja
test
imul
sbb
push
adc
test
cmp
jg
iret
scas
mov
pop
into
mov
scas
fildll
in
cltd
aaa
ret
shll
jle
mov
adc
xchg
jmp
jmp
movsl
ds
xor
stos
dec
iret
inc
xchg
xchg
add
push
in
sub
ret
jmp
icebp
xchg
mov
out
fistl
jl
mov
insl
call
sbb
pushf
push
pop
pop
push
add
decb
xor
fldcw
mov
push
repz
dec
leave
xor
sar
jno
popa
les
sbb
loopne
inc
jle
mov
dec
lret
out
pushf
mov
js
pop
pop
insb
daa
xchg
enter
popa
or
sbb
loopne
xor
adc
dec
enter
pusha
test
orb
js
sti
jbe
pop
lret
push
pop
pop
cmpsl
shlb
insb
inc
test
mov
inc
jg
and
lods
sbb
int3
dec
and
mov
push
pop
cmp
iret
sbb
pop
xor
xchg
clc
rorl
pop
cmp
push
add
imul
xchg
into
sahf
push
in
shlb
call
mov
mov
ret
add
sub
mov
mov
iret
mov
call
jae
mov
cs
fildll
inc
mov
ljmp
dec
pop
lahf
les
pop
movsb
sbb
dec
push
and
mov
mov
push
leave
insb
adc
dec
jge
mov
pop
xchg
aam
mov
std
jb
ljmp
mov
jmp
xchg
cmpsb
jo
fcoml
loope
xchg
sti
jmp
mov
ss
insb
pushf
ja
pop
divl
ljmp
push
scas
pop
pop
lahf
cld
cmp
and
mov
shl
jg
gs
sub
inc
hlt
add
sarb
push
cmp
repz
or
jecxz
icebp
icebp
push
jno
call
and
jo
pop
cltd
rolb
jle
mov
xchg
adc
pop
inc
xchg
cmpsl
xchg
fldl
scas
stos
iret
mov
into
sbb
mov
jecxz
dec
dec
cld
cmp
lcall
in
or
mov
dec
push
cmp
out
test
add
mov
dec
sub
jmp
std
dec
jae
cmc
shrb
and
mov
cmp
add
shrl
and
push
pop
mov
je
lcall
out
mov
insb
int3
push
mov
push
mov
mov
and
push
xor
cmc
cmp
inc
hlt
dec
inc
repz
int3
add
jp
cmp
cli
subl
add
in
enter
or
lock
mov
xchg
pop
pop
cmp
xor
mov
subl
dec
mov
add
mov
loop
jecxz
inc
push
orl
outsl
outsb
dec
std
ja
pop
jne
mov
push
dec
dec
inc
xchg
js
orl
mov
outsb
test
loope
lods
adc
imul
test
pop
inc
lcall
lret
ja
jb
mov
jae
or
xlat
test
xor
scas
cmp
inc
mov
repz
lcall
sbb
dec
aaa
mov
int3
cmp
lods
dec
jb
mov
jl
fs
or
mov
pushf
jbe
inc
pop
cs
daa
inc
mov
push
outsl
jns
dec
cmp
mulb
and
push
pop
aas
clc
in
or
xchg
jo
push
xor
mov
lods
jg
pop
in
fnstcw
popf
fsubr
cmp
xchg
pop
pop
sbb
xchg
jno
jne
sahf
les
aaa
inc
mov
lods
enter
in
ljmp
fadd
add
and
imul
inc
pop
movsb
xchg
cld
inc
add
shrl
clc
mov
xorl
inc
mov
in
sub
mov
stos
mov
popf
dec
adc
into
ljmp
out
movsb
dec
xor
adc
push
lret
pop
push
mov
test
jae
test
leave
jle
and
aaa
inc
jmp
movsb
enter
dec
test
mov
xor
add
jns
mov
mov
mov
test
dec
dec
insl
xorl
mov
call
adc
call
jnp
mov
mov
pop
and
es
das
mov
jae
push
cwtl
fwait
ljmp
inc
mov
xor
nop
jae
incl
xchg
cmpl
pop
test
push
mov
movsb
mov
in
mov
pop
dec
je
mov
mov
cmc
xchg
add
pop
lock
sbb
movsb
xchg
jl,pn
setbe
or
pop
mov
stc
sbb
inc
data16
lret
jns
fiaddl
lret
sub
or
pop
adc
notb
mov
adc
jbe
sub
xchg
fdivrl
out
pop
jecxz
xchg
cltd
xor
bound
push
ds
push
pop
dec
sbbb
daa
mov
sbb
dec
mov
mov
jecxz
cmp
pop
mov
es
jge
xchg
in
out
pop
loopne
mov
stc
xchg
fmuls
push
ret
repz
clc
shld
adc
mov
add
mov
call
scas
sub
lahf
mov
jg
jno
xchg
mov
or
pop
cltd
push
jnp
in
lods
sbb
and
imul
vdivsd
or
sub
pop
cmp
ficomps
popf
into
lods
xorb
loop
adc
sub
insb
push
adc
mov
push
out
movsl
arpl
and
mov
jns
xchg
inc
out
and
mov
incl
cmp
lods
scas
or
sbb
popf
ret
sub
mov
imul
bound
das
jmp
in
push
cmc
adc
push
cli
mov
out
int3
xchg
inc
pop
xchg
popf
mov
ljmp
cmp
in
push
and
xor
dec
pop
cmp
popf
pop
or
sarl
ljmp
jmp
fmuls
ss
test
jmp
inc
mov
add
cli
jp
mov
in
xchg
and
dec
add
aad
fcomps
and
aaa
push
das
fs
xor
std
xchg
adc
pop
loop
push
mov
jle
sbb
add
cltd
jp
stos
xchg
in
adc
push
or
adc
sub
test
sub
mov
pop
pop
int3
mov
loopne
add
push
cmp
faddl
fisubl
cmp
mov
push
orb
pop
test
push
adc
hlt
cmp
push
test
sbb
pop
daa
subl
imul
push
aaa
rorb
mov
call
jle
add
js
cltd
jle
jge
and
xor
push
mov
push
lahf
insb
mov
outsb
mov
inc
shll
sub
add
xlat
fdivr
push
arpl
repz
jg
outsb
jb
mov
clc
adc
cld
cmp
jl
ja
cmpsl
xor
cmp
lcall
stos
push
sahf
jl
pop
sub
mov
data16
push
jp
or
scas
push
push
jp
add
insb
scas
push
jne
jmp
imul
add
mov
or
js
push
inc
mov
loopne
sub
insb
je
popf
mov
outsl
nop
lret
hlt
or
das
and
subl
push
adc
xor
pusha
add
or
nop
mov
cmc
test
movsb
or
and
adc
mov
cmp
pop
push
scas
rclb
pushf
stos
out
lds
mov
lds
cmpsb
data16
jb
insb
lock
cwtl
lret
cmp
add
pop
out
dec
jle
mov
push
sub
sti
fidivrs
pop
mov
fmul
or
rorl
idivb
repnz
repnz
pop
popw
push
into
push
dec
xchg
inc
loop
mov
lcall
mov
cli
inc
adc
adc
jl
repnz
xchg
hlt
sub
or
cmp
mov
cmp
inc
cmc
fiadds
or
add
insl
scas
push
push
and
sub
inc
pop
std
mov
dec
aad
ret
mov
es
pop
push
sub
setno
jmp
push
mov
fsubrp
push
lods
mov
test
rclb
mov
pop
fstps
jge
lret
inc
or
cmc
out
or
lds
pop
rolb
lock
in
sub
fcmovbe
push
int3
out
fildll
xchg
pop
inc
sti
xor
in
ja
clc
cs
push
cwtl
sbb
adc
mov
stc
inc
xchg
and
aas
mov
mov
addr16
fs
jg
or
or
cmp
mov
push
pop
scas
cmpsl
pop
jmp
xchg
xchg
push
sbb
or
dec
jnp
hlt
dec
jg
pop
push
jl
mull
or
ret
jle
pop
dec
es
stc
mov
push
xchg
js
leave
popa
shl
cmp
loop
loope
andb
inc
movsl
push
pusha
in
insl
ret
imul
sbb
adc
rcrl
insl
and
mov
mov
cmp
pop
arpl
pop
loope
jl
mov
jg
add
mov
shrb
inc
sub
mov
jle
lock
adc
add
cmp
leave
pusha
inc
jg
pusha
adc
add
mov
out
adc
cmp
inc
cmp
sahf
sbb
fcomps
and
mov
push
addr16
aad
fwait
in
mov
push
add
sahf
cwtl
movsb
pop
push
cmpsb
aad
cli
cmp
cmp
add
test
jbe
lods
or
inc
jle
jecxz
xchg
clc
or
in
iret
cmp
or
outsb
imul
jle
ds
xor
lds
cld
inc
inc
jne,pn
das
cmpsl
aad
lods
mov
aas
or
jl
jo
xchg
cltd
ljmp
jp
rcr
push
mov
push
sub
cmp
jmp
sub
mov
scas
or
imul
cmp
and
adc
test
outsl
sbb
jno
lret
dec
aad
rorb
mov
cmp
pushf
mov
inc
div
icebp
xchg
jnp
sbb
inc
mov
lods
cmp
add
and
sub
push
fadds
jmp
test
dec
sub
cmpsb
dec
pop
jp
sbb
fs
xchg
insb
dec
add
leave
mov
push
out
je
pusha
lea
cmp
lods
cli
stc
and
sbb
jmp
cmp
call
xchg
inc
cli
clc
jne
push
mov
cmpsb
into
fimull
es
out
adc
je
mov
pop
mov
mov
orl
mov
add
mov
jo
sarl
jnp
push
mov
dec
dec
xchg
loop
pop
scas
pop
xchg
mov
into
mov
pop
adc
sti
dec
lods
loopne
inc
push
out
das
aaa
clc
jo
push
xor
ret
pop
inc
jb
lods
jbe
mov
sbb
sbb
scas
shrb
sub
add
sbb
fadds
or
add
add
sti
jb
imul
and
fmulp
cmp
daa
cmp
jg
push
mov
enter
xchg
int
jne
sub
outsl
or
jp
aad
cmpl
test
ret
add
leave
mov
sbb
popa
jl
stos
sbb
add
fnstsw
insl
pop
jg
pop
push
ljmp
xor
jp
ret
lcall
nop
imul
out
mov
push
int3
es
out
push
jp
mov
xchg
test
or
daa
jp
add
jbe
clc
pop
int3
mov
insl
cs
inc
popa
mov
movsb
mov
push
cld
mov
loopne
add
mov
jge
outsl
push
xlat
jp
jae
jo
xchg
mov
sbb
mov
mov
sbb
lret
inc
adc
add
jecxz
imul
sub
rcrb
ljmp
dec
test
lock
pop
push
call
fwait
inc
cmp
loope
mov
pop
icebp
push
adc
adc
xor
sbb
sbb
mov
jge
cmp
outsl
cmpsl
push
push
jge
fidivs
xchg
addr16
xchg
jmp
adc
cmpsb
jo
push
ds
inc
andb
and
aad
or
rolb
pop
repnz
xchg
or
xorl
icebp
pop
jno
or
mov
imul
leave
rclb
push
hlt
stos
lcall
pop
std
sbb
aas
cwtl
sub
sarb
hlt
ss
mov
sbb
cmp
movsb
pop
ljmp
fsubrl
insl
sahf
jo
xchg
xlat
xor
sbb
jae
test
mov
test
clc
out
push
mov
xor
lret
std
loopne
pop
cmp
dec
sbb
adc
pop
idivb
in
lret
jns
lcall
adcb
sub
adc
push
dec
dec
xchg
lahf
sti
push
add
rolb
jecxz
int
push
push
push
push
adc
push
dec
test
cli
lret
jbe
fwait
push
push
inc
jge
imul
cmp
aad
inc
js
popf
lahf
call
push
or
ficoml
ja
inc
ret
stos
mov
pop
sbb
fs
sahf
or
pop
into
mov
and
or
cmp
js
inc
pop
fsubrl
clc
leave
cmpsl
aam
xor
jge
pop
mov
into
loop
push
adc
js
mov
enter
fistps
sub
sbb
add
mov
add
push
iret
inc
repnz
jp
fsubr
inc
sahf
dec
mov
sbb
sub
dec
sahf
and
xchg
push
out
loope
or
add
loop
inc
mov
and
decb
mov
or
cmp
out
cmc
insb
mov
rol
sub
inc
jbe
or
jecxz
mov
rcrl
mov
add
bound
clc
faddp
fdivs
ficompl
pop
das
or
loopne
das
inc
xor
sub
outsl
stos
int
in
mov
and
aam
lahf
push
dec
repz
or
imul
js
mov
in
addr16
sbb
add
rolb
in
je
mov
xor
and
fiaddl
cmpsb
or
in
in
and
std
jge
mov
stos
and
adc
roll
out
insl
mov
fldcw
mov
pushf
add
repnz
adc
push
aam
and
dec
jbe
dec
mov
push
in
test
daa
add
jnp
repnz
and
xchg
cmp
xchg
sub
push
push
cltd
jo
lcall
dec
mov
xchg
popa
xor
test
aad
sub
cmp
and
jg
ficoms
jge
aaa
or
es
test
adc
jge
dec
xor
shrb
test
xchg
cmp
scas
jo
push
fldl2t
sub
lahf
pop
jo
in
ljmp
repz
imul
sbb
je
push
insb
mov
repz
loopne
rcrl
inc
xchg
leave
lods
jl
mov
je
mov
sub
mov
or
int
sub
jbe
push
cmpb
add
icebp
pop
lock
ficompl
lcall
inc
jg
ret
jmp
aam
push
arpl
rol
push
fimull
ret
es
sbb
mov
arpl
pop
xor
xor
popf
in
orb
out
and
or
add
and
scas
inc
jne
fcomi
ljmp
lods
mov
je
jmp
lret
cmp
mov
fld1
lds
into
out
add
mov
push
add
adc
jmp
lock
and
rcrl
mov
test
lret
mov
push
incb
sub
or
mull
add
in
or
pusha
push
push
fbstp
mov
sbb
dec
inc
push
adc
pop
xchg
jge
or
xchg
push
rol
xchg
cmp
scas
xchg
repnz
xchg
out
popa
push
ficomps
imul
xor
xacquire
pop
jbe
enter
xchg
or
outsb
bound
in
fcos
insl
or
xchg
mov
ret
dec
test
xor
adc
ja
cmp
repnz
aam
pop
xlat
call
inc
scas
test
mov
mov
and
pop
lcall
test
and
fildll
jae
scas
push
repz
ret
adcb
cmc
movsl
mov
mov
sub
sbb
into
iret
adc
mov
mov
sub
pop
icebp
sbb
jne
cmp
test
or
xchg
cmpsl
mov
xchg
mov
and
adc
add
addr16
xor
xchg
sbb
test
outsb
mov
dec
mov
sub
push
pop
cmpsb
lret
adc
mov
shrl
pop
lods
xor
sub
inc
arpl
repz
jp
or
jge
or
outsb
xor
stos
das
push
aam
ja
add
enter
lahf
xchg
add
sub
add
and
xchg
cmp
cltd
addb
cmp
xorb
fwait
xor
mov
jno
xchg
fstpt
js
mov
pop
adc
test
repnz
mov
pop
dec
rcrb
xorb
xchg
push
mov
pop
loope
ret
inc
adc
jne
push
sarb
fsubrp
jne
shl
add
xor
push
and
sbb
add
sarb
cmp
loopne
sub
mov
stos
mov
push
mov
jle
xchg
mov
cltd
aam
jb
cmp
jns
lret
xor
mov
push
lret
int3
int
ds
or
in
in
or
fyl2xp1
pop
shrl
mov
mov
cmc
arpl
sub
jae
stos
jb
xor
push
or
enter
cmc
mov
xchg
mov
outsl
add
stos
mov
ss
stos
gs
aam
pop
stos
jno
xor
fs
push
std
shrb
shrl
and
cli
add
sub
sub
sub
or
test
das
ret
cmp
jge
sbb
xchg
pop
dec
sub
ja
xchg
sub
dec
hlt
movsb
cmp
push
dec
mov
cmpsb
sub
sbb
leave
pop
fs
xchg
cmp
adc
imul
pop
cmc
bound
ja
dec
xchg
mov
filds
xlat
cltd
bound
jne
je
push
mov
mov
leave
and
dec
iret
lcall
fdiv
push
mov
or
mov
imulw
or
lock
mov
movsl
or
pop
xor
test
fwait
imul
or
mov
push
movb
int3
sbb
pop
add
and
ds
cs
sbb
inc
ljmp
int
mov
inc
xchg
dec
je
fidivl
out
cmpsb
scas
xchg
lcall
movsb
mov
pop
mov
mov
mov
inc
jbe
jne
pop
scas
dec
mov
add
out
fbld
lods
pusha
xorl
cmp
mov
mov
call
push
mov
and
lds
push
inc
fsubs
push
hlt
push
clc
jmp
sub
stos
mov
or
inc
mov
fucomp
lock
orb
orl
push
xchg
or
jl
iret
ret
cltd
sbb
adcl
ficoms
sub
insl
inc
push
cmp
push
int
dec
repnz
adc
jbe
fs
jbe
push
mov
popf
fs
mov
sub
mov
jle
shll
ljmp
sbb
and
mov
jmp
out
outsb
ja
cltd
push
clc
in
fsubrl
cmpl
adc
outsb
jb
cmp
jb
ret
and
or
mov
inc
xlat
jecxz
push
pop
aad
jge
inc
sbb
shrb
mov
test
imul
mov
xor
movsl
ss
jp
lret
adc
pushf
rcrl
int
rolb
icebp
push
call
lods
xlat
ljmp
mov
jo
push
lods
push
sub
andb
cwtl
mov
xor
shlb
movsl
cwtl
bound
aam
test
ljmp
mov
ja
push
cmpsb
in
repnz
pusha
adc
scas
in
jg
bound
mov
fwait
dec
or
xor
test
and
mul
sub
mov
call
popl
mov
inc
xor
or
mov
aad
je
icebp
jbe
cld
insb
jo
sahf
xchg
or
jp
pushf
add
xor
pop
mov
sub
jno
ljmp
jo
and
push
jb
inc
js
mov
rcll
dec
bound
leave
stos
jecxz
mov
xchg
and
push
xchg
int
inc
in
cmpsb
xchg
sub
xor
xor
jge
lods
push
aam
mov
in
xor
rcl
xor
mov
out
fldt
cmpsl
pushf
sbb
aaa
xchg
test
popf
subb
shrb
loope,pt
or
lds
movsl
adc
nop
xlat
scas
mov
fwait
add
xor
sar
and
test
mov
fwait
cmp
lock
push
iret
in
ss
pop
push
jp
ret
int3
sub
or
mov
jns
bound
push
xor
add
add
int3
inc
mov
shl
dec
dec
mov
daa
mov
cwtl
jb
rorb
pop
addr16
rcll
sbb
addl
push
into
adc
or
mov
cmp
mov
xchg
jge
pop
or
push
add
test
lret
movsb
jl
sarb
pop
mulb
jne
rclb
or
or
cmp
adc
pop
sbb
stos
aas
cld
sbb
aad
repnz
xor
jmp
iret
cwtl
mov
mov
xor
int
cwtl
mov
push
jp
pop
xor
add
ja
ja
dec
stos
pushf
das
std
ret
adc
adc
jb
mov
imul
xlat
lock
fwait
adc
sahf
cld
jbe
aaa
add
mov
popa
xchg
ljmp
aaa
lcall
int
fs
rcll
enter
pop
outsb
mov
add
jle
sbb
mov
sub
mov
pop
sub
cli
insb
insl
ret
ds
sti
shlb
jge
enter
xchg
push
adc
outsl
xor
jecxz
jns
popf
push
pop
xchg
in
push
lods
pop
imul
outsl
lods
ss
dec
popf
stc
and
jae
mov
dec
out
arpl
or
stos
and
push
xor
sbb
pop
and
xchg
pusha
xchg
add
fidivl
push
ret
popf
cmpsl
cmp
int
cmpsl
xor
repnz
dec
and
jmp
mov
mov
sbb
xor
bound
inc
adc
mov
adc
adc
repz
push
sub
scas
bound
mov
inc
mov
cmpsl
jecxz
cmp
jg
lods
push
xchg
cmp
adc
adc
cmp
mov
mov
xchg
pop
push
fisttpl
xchg
testb
adc
js
push
mov
jns
inc
cmp
jecxz
clc
es
pop
dec
jbe
gs
pop
sub
flds
jge
ds
cs
inc
pop
xchg
xchg
mov
push
xchg
mov
dec
das
xchg
adc
dec
xlat
inc
mov
andl
jno
lahf
add
test
xor
dec
lock
in
cltd
lock
xor
mov
sub
xor
or
out
lds
dec
test
sarb
xor
jae
mov
rorb
jnp
fwait
add
pop
jmp
shr
into
add
jmp
cs
jnp
mov
cmc
add
lods
pop
aas
mov
add
mov
mov
xlat
pop
inc
xor
adcb
inc
les
in
ficompl
inc
flds
inc
int3
mov
in
inc
jnp
fwait
lds
roll
lods
xchg
iret
shl
pop
mov
xor
stos
adc
sub
pop
lods
add
jmp
jge
xchg
rcll
fwait
call
cmp
mov
jl
cmp
mov
out
xlat
dec
ret
pusha
or
inc
fnstenv
aad
daa
push
pop
add
or
cmp
sbb
loope
cmpsb
and
jl
sub
xchg
xchg
xor
push
cmp
fcomps
jmp
cmp
jl
cmc
loopne
xchg
mov
pop
mov
add
dec
in
int3
bound
mov
inc
ds
out
insb
sti
mov
push
fwait
jb
in
add
test
mov
push
insb
jne
push
add
int
xorb
lock
mov
out
adc
sub
add
xchg
cltd
shl
mov
mov
sti
jp
aad
or
outsl
mov
pushf
idivl
pop
xchg
lret
imul
imul
imul
loopne
mov
shl
cs
and
xchg
fs
pop
sarb
in
in
xchg
jmp
ret
inc
call
data16
and
ja
lret
pop
sbb
mov
xlat
adc
mov
movsb
jnp
mov
ss
mov
insl
bound
or
add
jge
movsb
lock
add
into
out
push
rorb
sbb
xchg
daa
jb
xchg
pop
out
pop
movsb
lahf
adc
movsl
ret
test
aas
sub
lods
inc
sub
ficompl
insl
lds
cmp
push
cmpl
dec
sbb
jge
pop
aad
pushf
xor
mov
adc
fadds
jle
movsl
dec
mov
push
bound
lahf
call
int3
arpl
ljmp
cmpsl
push
popa
int
and
cltd
je
xchg
add
mov
test
incb
insl
dec
xor
add
and
icebp
rclb
cmp
and
mov
adc
decl
and
aaa
iret
push
xchg
inc
rol
in
loope
popa
ucomiss
jno
sub
mov
adc
aad
pop
inc
aad
nop
daa
and
hlt
cmpsb
fisubl
push
mov
mov
into
jno
add
inc
negb
adc
mov
out
mov
clc
xchg
mov
adcb
cld
sub
scas
scas
sub
mov
jb
mov
pop
cld
adc
mov
les
mov
pushl
scas
aaa
movsb
gs
or
outsb
push
lret
sti
add
mov
rclb
inc
popf
mov
imul
pushf
mov
jb
stos
lret
xchg
mov
and
lcall
popa
lcall
xor
mov
stos
pop
dec
sub
add
ror
sbb
addb
popa
mov
add
fidivl
inc
mov
and
and
lcall
daa
out
jp
insl
xor
fwait
inc
push
sbb
scas
call
push
icebp
fwait
daa
negb
jmp
out
pop
enter
aam
mov
add
lahf
ret
movsb
dec
incl
mov
xchg
mov
push
enter
data16
jmp
bound
xchg
fiadds
iret
outsb
mov
mov
push
jnp
jne
mov
add
cmp
popa
pop
cltd
pop
mov
cld
mov
fs
jmp
and
gs
xchg
fsubrl
cmpl
sub
rclb
into
fs
xor
test
leave
les
les
dec
rcll
pop
cwtl
mov
loop
cld
cs
mov
pop
in
jle
lock
xchg
push
jle
jge
rcrb
and
jp
xor
lods
and
addr16
and
lock
sub
xor
fucomi
out
dec
push
xchg
stos
pop
mov
pop
lods
cltd
sbb
jne
push
subl
gs
aas
add
into
leave
addr16
mov
insl
and
hlt
loope
mov
jnp
cltd
jno
pop
inc
push
cmp
decb
xor
xchg
fs
pop
mov
jl
add
insb
xchg
xchg
sub
jmp
sub
nop
xchg
inc
int3
and
in
sub
stos
in
jnp
add
mov
negl
jmp
aas
jne
xchg
aam
addr16
test
mov
jne
push
pop
lret
jbe
mov
addr16
sbb
shrl
sbb
test
pop
push
decl
dec
pop
add
xor
jbe
xlat
aas
push
fiadds
xchg
dec
and
adc
fmul
push
or
xor
or
mov
sub
sub
ljmp
xchg
push
sbbb
bound
add
jmp
push
jbe
jne
jno
aam
aad
inc
jge
out
scas
repz
arpl
push
or
test
jb
and
sbb
pop
lods
fs
repnz
sar
or
push
rorb
xchg
lahf
jge
aaa
imul
jns
outsl
test
push
inc
ss
push
out
dec
xchg
push
mov
lret
cli
fwait
scas
popa
push
js
jne
repz
mov
enter
cmpsl
adc
shll
xchg
and
orb
outsb
xor
test
cmpsl
pusha
leave
das
cltd
cmp
or
lock
mov
mov
sbb
ss
cmpsb
jnp
mov
push
leave
outsl
ja
stos
xchg
in
and
js
iret
lea
or
test
mov
mov
loope
dec
pop
out
fsts
dec
ret
fwait
rclb
xor
xor
mov
xchg
jmp
nop
sub
ds
jmp
shrb
pop
push
push
insl
adc
bound
push
hlt
mov
out
and
aas
push
mul
ljmp
out
xchg
dec
adcb
test
mov
push
push
fwait
rclb
adcl
push
jb
cmp
xor
mov
daa
cli
dec
repz
sbb
adcl
cld
scas
incl
xor
fs
aad
xchg
cmpsl
mov
shrb
clc
mov
dec
lret
loope
shl
cmc
shl
js
mov
jg
push
aam
in
add
ret
xchg
cwtl
mov
out
and
or
lock
adc
dec
mov
je
call
inc
mov
xor
out
in
ret
jge
leave
ret
in
mov
cmp
add
out
out
pop
xor
adc
add
rcl
inc
inc
push
jbe
fiaddl
jbe
aas
movsb
loope
or
int3
xlat
loop
ret
add
icebp
push
inc
nop
xor
sbb
loopne
orb
in
mov
pop
test
pop
dec
adcb
outsb
das
aam
arpl
push
sub
and
jecxz
ja
test
outsb
aam
cmc
mov
xorl
mov
push
dec
sbb
mov
fwait
mov
jno
add
hlt
sbb
loop
rcll
out
sbb
inc
lds
add
mov
aas
test
pop
test
stos
int3
xor
gs
bound
mov
pop
inc
push
popa
mov
roll
in
in
in
sub
or
jg
ds
movsl
or
sub
jae
mov
and
xchg
add
aad
ret
and
push
cmp
lods
cli
inc
push
loopne
aas
adc
scas
outsb
push
in
cmc
pop
mov
pop
loope
sub
push
imul
dec
fsubs
xchg
xor
clc
push
xchg
inc
lock
leave
test
movsl
xchg
inc
nop
cli
sbb
les
arpl
sub
mov
fcmovnbe
and
pop
leave
mov
push
mov
xor
fldl
out
gs
test
les
cmp
mov
andb
sbb
add
cld
outsb
jne
inc
addr16
test
jge
or
loop
shlb
adc
cmpsb
test
cmp
leave
pop
repz
mov
lahf
in
xorl
xor
imul
lahf
adcb
add
iret
xchg
sbb
arpl
add
lcall
mov
fnsave
jp
jge
ror
pop
dec
or
xchg
out
mov
flds
jg
cmp
adc
push
mov
js
mov
dec
shll
jo
leave
mov
jg
lahf
out
test
mov
hlt
push
fisubs
cmp
xor
imul
out
loop
adc
xor
pop
mov
aaa
aaa
or
popf
in
dec
or
xchg
xchg
xchg
aad
pop
mov
cltd
loope
mov
orb
repz
call
sub
dec
xor
mov
cmp
ret
popf
shlb
fcoml
or
push
nop
aad
jne
leave
jns
mov
inc
cmpsl
mov
cmp
shll
dec
pop
adc
ljmp
sub
mov
inc
scas
psubusb
xchg
sub
data16
and
jle
lret
loopne
or
inc
push
repnz
or
fcomi
and
les
shr
xlat
out
xor
and
mov
shl
cmp
xor
xor
mov
add
mov
pop
dec
push
das
pop
inc
mov
pop
jle
jg
pop
pop
push
lcall
lock
adc
sub
aad
cmp
rclb
int
jb
cld
fistpll
mov
mov
les
outsb
pop
inc
setnp
add
icebp
inc
mov
jle
movsl
fmull
idiv
sbb
push
lock
out
mov
sarb
sbb
fsubl
push
iret
aaa
and
cli
cwtl
and
inc
jmp
lcall
test
mov
mov
nop
push
sbb
mov
unpckhps
popa
roll
add
push
daa
movsl
sub
and
add
inc
lret
push
xchg
dec
imul
mov
shrl
cmp
jbe
inc
mov
pop
push
mov
sbb
stos
icebp
insb
mov
mov
ja
clc
push
into
scas
mov
imul
sbb
icebp
inc
mov
push
add
mov
cmc
dec
bnd
dec
sbb
jg
sbb
cmp
jecxz
or
or
jb
mov
inc
mov
popf
mov
xor
mov
aas
push
movsl
mov
fdivp
les
xchg
cwtl
mov
xchg
jg
in
call
dec
call
in
stc
cmpsl
leavew
jne
jmp
in
cs
ss
sbb
inc
jmp
jns
mov
out
scas
or
xor
xor
push
shrb
push
lea
js
or
adc
clc
jno
sbb
loopne
push
stos
xor
adc
rcrl
xchg
mov
dec
ljmp
fidivrl
aas
ljmp
rorl
adc
lock
and
mov
insl
mov
outsb
dec
sub
std
pushf
push
mov
rcll
icebp
xor
fdivs
pop
stos
and
repz
inc
push
add
repz
in
sbb
ret
xchg
inc
inc
int
mov
std
cltd
jb
cmp
lahf
sbb
jno
mov
cld
das
outsl
cmp
xchg
int3
aam
in
jne
insl
test
xor
dec
jle
aam
mov
mov
sub
adc
insl
nop
pop
sbb
popf
or
loope
mov
mov
cmp
and
addr16
pop
ficompl
add
ret
fsubrs
shl
inc
pop
stos
cmp
xchg
js
xchg
cmp
lret
cmp
addl
icebp
shrl
testb
arpl
add
insl
xchg
popa
sub
jne
lret
mov
loop
addr16
invlpg
cmp
inc
cmp
mov
repnz
sub
ror
or
and
addr16
scas
mov
nop
insl
xchg
repz
int3
cmp
dec
xor
pop
push
lret
pushf
in
inc
or
mov
fildl
inc
sub
inc
test
sbb
mov
fdivr
mov
cmp
push
sub
inc
jl
or
clc
call
jbe
sahf
imul
rcr
sub
mov
out
out
dec
repz
push
dec
mov
mov
aaa
xchg
mov
and
adc
les
repz
mov
in
push
loopne
aam
cmp
cmp
test
pop
clc
xlat
mov
fstpl
pusha
fcmovnbe
xor
mov
jns
lret
insl
sub
push
daa
sahf
pop
loop
pop
push
pop
push
lret
addb
jge
mov
imul
add
cmpsb
fbld
cwtl
xchg
xchg
sbb
int
imul
sar
inc
push
in
jae
in
jne
adc
in
imul
xchg
aad
or
int3
inc
sub
dec
shrl
dec
loopne
push
pusha
in
movsl
xchg
xor
jo
or
sbb
popf
xchg
popf
enter
jl
mov
stos
or
mov
or
mov
jmp
mov
xchg
int3
push
pushw
cmp
incl
push
bswap
inc
loop
aad
pushf
stos
or
or
or
mov
ret
loop
mov
mov
xchg
jmp
hlt
mov
int
sbb
and
shrb
inc
xchg
leave
stos
test
sub
and
jb
push
jp
iret
in
mov
daa
mov
ret
xlat
pop
aaa
push
fcomp
mov
idivl
push
pop
pop
adc
insl
in
or
mov
aaa
shrw
mov
loope
aas
in
jbe
mov
fcmovbe
dec
loope
cmp
xor
out
ret
or
pop
mov
add
jg
aam
add
adc
imul
lcall
inc
or
outsl
cltd
orl
rcrl
lock
xchg
jnp
test
adc
xchg
inc
ret
jns
sub
sub
mov
jmp
push
adc
repnz
sbb
pop
call
inc
cmp
add
imul
xlat
imul
repz
aam
inc
enter
sub
inc
cmpb
and
loope
jo
inc
mov
lea
and
add
lret
dec
and
sbb
adc
ds
fld
adc
push
adc
pop
mov
cli
sti
stc
out
jmp
push
xchg
in
aad
push
icebp
lahf
add
cmp
push
hlt
repnz
cmp
shr
sub
iret
sub
adc
out
outsb
add
arpl
shlb
int
jae
sbb
jmp
fildll
in
inc
push
pop
sbb
add
test
lods
xor
sub
repnz
sub
mov
ret
aas
pop
dec
jne
push
adc
addr16
pop
cmpsl
iret
cmp
movsl
rorb
pusha
call
orb
lahf
pop
out
mov
mov
into
je
jne
movsb
jp
pop
mov
out
fnstenv
fisubrl
pop
subb
xor
dec
cmp
sub
push
cmp
jecxz
in
jmp
inc
repz
pop
ds
mov
mov
ljmp
repz
int
fs
pusha
xor
loope
loopne
cmp
xor
jl
in
aaa
jnp
pop
pop
add
xor
cltd
gs
pop
mov
cmpsb
dec
adcl
out
add
pop
pusha
adc
sub
xor
subl
dec
push
push
jns
stos
cltd
in
mov
add
hlt
fwait
and
imul
jl
in
pop
and
loopne
xchg
pop
les
xchg
leave
insb
pop
mov
das
stc
fsubp
pop
push
or
adc
inc
push
adc
cmpsb
dec
dec
jae
lcall
jb
popf
pushf
lds
stc
dec
out
call
mov
pop
aas
add
shlb
pop
push
addr16
aaa
ds
movsb
call
in
mov
inc
sub
std
pop
jne
aad
loopne
sti
insl
stos
jo
data16
and
xor
lea
mov
int
jne
in
in
mov
stos
sub
cmp
cmp
or
mov
inc
pop
mov
enter
bound
jns
test
sarb
sub
mov
sub
popa
fcmove
sub
and
mov
cmp
pop
pop
roll
test
xchg
and
scas
scas
dec
cltd
sbb
mov
xor
mov
dec
xchg
or
cmp
push
cmp
lds
adc
sub
mov
mov
rcrb
out
std
ds
out
mov
popa
push
dec
cmpsl
jmp
sub
push
mov
mov
andl
adc
idiv
push
cli
pcmpgtw
sbb
je
add
lea
mov
mov
and
sub
pop
gs
idivl
xchg
cmc
cmpb
inc
data16
ljmp
pop
pushf
and
out
mov
adc
push
rcrl
leave
sarb
loopne
filds
xor
stc
addr16
jp
push
les
pop
mov
jns
sahf
jge
jnp
push
shl
mov
jmp
jae
jbe
insb
mov
stos
mov
or
rcrl
push
and
je
fisubs
inc
xor
shl
sub
dec
mov
or
pop
sti
scas
push
and
out
leave
xor
mov
xlat
pop
lods
and
push
fcmovnbe
lret
das
mov
stos
cmp
add
loopne
inc
and
jl
jecxz
push
sarl
or
hlt
ja
clc
push
cld
lods
pushf
xor
mov
sarl
pushf
push
add
push
or
push
outsl
lods
insl
push
ds
in
inc
aas
test
lods
inc
fildll
xor
stc
or
jle
addb
std
cwtl
sahf
movsl
mov
push
dec
xor
sbb
cs
rcr
mov
mov
or
dec
pop
lahf
pop
lea
repnz
cmp
or
jno
movsb
inc
pop
push
mov
lret
ja
insb
pop
add
cltd
shlb
sar
xchg
outsl
adc
pop
insl
stos
stos
aam
xchg
or
fwait
xchg
pop
data16
sbb
shr
mov
lahf
push
lret
mov
jle
arpl
mov
sbb
inc
dec
lock
sbb
shlb
sbb
insl
xor
jecxz
sbb
iret
js
add
int
or
push
cmp
xchg
cs
addr16
lret
inc
cmp
and
aam
add
pop
mov
mov
sti
mov
enter
cmpl
rorl
negb
orl
lods
add
int
inc
call
iret
adc
lock
jg
pop
dec
negb
mov
push
fwait
xchg
cld
inc
inc
adc
cmp
rolb
das
loop
or
sub
cli
fidivrl
fwait
ror
es
loope
out
inc
xchg
xor
jmp
lea
lcall
pop
mov
mov
add
pop
les
loop
sub
pop
xchg
jne
std
dec
aas
out
lahf
cmpsb
loopne
mov
xlat
jnp
inc
inc
mov
xor
mov
mov
fs
mov
lahf
data16
dec
mov
lss
mov
adc
lcall
stos
xlat
nop
jl
inc
push
outsb
movsl
adcb
sbb
push
push
push
arpl
xchg
mov
push
inc
push
ds
sti
lods
pop
xorl
loop
stos
lock
adc
or
mov
push
aam
dec
dec
sbb
cld
testb
je
xor
xlat
testb
test
inc
mov
imul
daa
add
rcl
jbe
imul
hlt
xchg
or
mov
push
jmp
sahf
or
test
enter
stc
or
cli
mov
lret
je
adc
into
push
clc
or
jnp
sbb
fmulp
test
rorl
or
adc
test
sarb
imul
mov
ficompl
jnp
pop
xchg
fyl2xp1
jnp
paddb
popf
loopne
sbb
psrlw
cmp
inc
in
xchg
cmpsl
adc
push
gs
aam
cs
or
shll
js
push
imul
xchg
lods
push
pop
and
mov
pop
les
movsb
xor
and
daa
cmpsb
pop
bound
jle
or
movsl
test
or
pop
dec
cmp
cmp
xor
rclb
out
xor
out
cwtl
and
inc
cmp
push
add
sti
shr
jmp
dec
adcl
popl
fisttps
in
jle
pop
mov
nop
push
dec
test
push
mov
pop
in
out
cmpsb
stc
movsl
fwait
sti
cmp
stos
mov
or
fisubrl
and
add
outsl
adc
mov
sub
adc
test
inc
cmp
mov
mov
scas
dec
mov
xchg
sbb
in
xor
adc
rorl
xlat
xchg
jbe
movsl
add
fisubl
dec
cltd
ret
iret
enter
adc
or
dec
addl
jg
xor
daa
sahf
xchg
jne
sbb
stos
std
push
jns
cmc
or
mov
xlat
cld
push
fiaddl
mov
mov
daa
or
mov
hlt
and
jbe
mov
sbbl
xlat
jno
mov
jmp
int3
fwait
dec
cmpsl
adc
add
test
hlt
mov
mov
add
shll
mov
pusha
xor
mov
clc
push
cld
movsb
mov
out
es
cmc
cmp
psubusw
fs
push
ljmp
sbb
pop
lds
pop
xchg
cltd
xor
push
lret
je
lods
cmp
jp
and
cmp
cmp
dec
and
pusha
test
test
dec
pop
fimull
cmp
xchg
aam
mov
cmp
popf
pop
aad
insb
pusha
xor
bound
imul
pusha
mov
dec
data16
stos
push
adc
fs
or
sub
leave
aam
pushf
or
ret
in
int
xchg
scas
fmuls
mov
push
loop
or
cmp
dec
sub
mov
test
push
scas
scas
xor
push
push
and
and
lods
adc
icebp
jge
cs
inc
cli
mov
push
ja
int3
cmp
stos
insl
cmp
mov
cmp
in
dec
xchg
in
fwait
xchg
out
or
js
cltd
popf
loopne
adc
loopne
mov
jo
add
shrl
push
xchg
pop
jge
xlat
movsl
mov
adc
lods
jne
aam
ror
in
jle
add
ficompl
into
dec
call
enter
repnz
test
mov
loopne
lret
jl
mov
das
mov
xchg
in
mov
sbb
cltd
iret
imul
cmpsb
lods
fnstenv
loop
cmpb
pop
pop
lds
mov
js
or
ficompl
std
push
mov
imul
movl
and
fs
dec
adc
in
pop
outsb
mov
mov
cmpl
insb
dec
test
add
sub
lcall
insb
stos
pop
push
adc
add
xor
xlat
mov
mov
cltd
in
adc
dec
ljmp
mov
and
fnsave
push
push
imul
sub
mov
aaa
xchg
mov
and
adc
lods
idivl
je
call
and
ret
push
cmp
mov
cmp
lret
das
rcr
mov
sub
sub
mov
into
pop
and
aad
mov
pop
jnp
mov
sub
imul
incl
cld
test
add
movsl
mov
fs
push
sarb
xchg
sbb
and
dec
or
mov
lods
out
aad
mov
cmp
inc
in
sbb
inc
mov
test
xlat
mov
inc
add
push
xchg
ss
shrb
inc
xchg
mov
pop
shrl
stos
loopne
int3
jmp
mov
stos
xor
adc
fstps
xchg
mov
dec
test
jecxz
les
addr16
cwtl
fcompl
into
movsb
sbb
movsl
stc
pusha
fwait
mov
ret
xor
clc
and
stc
xchg
sahf
cmp
mov
movsb
jmp
out
dec
in
mov
jb
fs
xor
mov
ret
aaa
aas
cli
negb
aad
loop
into
negb
int
notl
lret
in
mov
jmp
dec
cmp
and
fsubrl
mov
dec
ret
push
xchg
and
sbb
push
ja
add
xor
adc
pusha
xchg
pop
lea
sahf
mov
or
dec
loop
aas
xor
pop
mov
into
lcall
pop
insl
cmpsl
adc
xor
ds
mov
mov
pop
popa
movsl
jae
cwtl
pcmpeqb
movsb
sbb
das
divl
and
repz
xor
and
xlat
cmp
mov
xchg
fldenv
push
and
xchg
pop
and
int
iret
xor
dec
xchg
stc
std
pop
add
jp
hlt
push
mov
or
push
pop
push
test
sbb
dec
xorb
inc
cmp
push
or
pusha
mov
lods
mov
iret
test
in
sbb
mov
dec
mov
cmpsb
pop
rcl
outsb
xor
add
mov
jne
das
fxch
out
mov
mov
xchg
add
adc
imul
xlat
cmpsb
in
lods
shl
dec
es
xchg
aaa
pop
ljmp
daa
mov
ja
nop
sub
sbb
push
push
aas
cli
and
in
jnp
sbb
fsubs
and
mov
mov
jbe
cmp
sub
in
adc
cli
ds
sbb
mov
cmp
pop
stc
inc
xor
or
ret
stos
sarl
icebp
inc
adc
mov
mov
or
pop
mov
sub
sbb
pushf
call
mov
mov
test
inc
shlb
outsl
xchg
clc
int
popf
jns
lcall
xor
out
add
mov
mov
rcll
mov
push
hlt
and
sbb
hlt
shrl
movsb
fnstsw
and
xchg
addr16
mov
imul
xor
inc
loop
insb
pop
dec
cmpsb
mov
ret
adc
cmp
and
andb
shll
cmpsb
std
mulb
pop
xchg
jge
pop
push
ds
inc
in
shl
rclb
frstor
mov
fidivrl
es
push
push
xchg
mov
jns
or
pop
push
aas
pop
fs
cmp
push
pop
bound
sti
stos
mov
nop
sub
or
or
das
add
out
push
push
adc
jns
imul
sub
clc
fldl
cmc
jo
xchg
cltd
cmc
push
adcl
inc
and
jns
sti
ret
mov
subb
rcrb
popa
fimuls
movsl
pop
xchg
lods
shlb
lds
rclb
out
inc
fs
inc
imul
fildl
xchg
dec
stos
jne
movsl
xor
sub
enter
pop
sub
push
aad
pop
cmpsl
or
data16
mov
push
and
xchg
pusha
stc
sub
fcmovnb
neg
out
jno
add
push
sbb
fidivrs
mov
rcr
aam
push
outsb
mov
daa
fnstenv
and
in
gs
andl
jl
adc
loope
fdivrl
sbb
jo
cmpl
cld
mull
in
pop
pop
aaa
clc
cmp
lds
xchg
xor
mov
dec
jno
cltd
jl
rcll
fmulp
adc
pop
pop
push
and
pop
xchg
push
mov
outsb
in
jg
add
loope
popf
adc
push
inc
decb
push
insl
mov
mov
jle
test
add
push
pushf
adc
inc
dec
stos
mov
rorb
and
sub
inc
mov
push
pop
push
pop
push
dec
jge
adc
pop
xchg
pop
jl
into
xor
pop
outsl
mov
cmp
cmc
insl
lret
xor
and
pop
test
lcall
aaa
scas
pop
ret
push
jg
and
jl
mov
in
mov
inc
iret
pop
mov
mov
js
mov
pop
pushf
adc
push
ret
in
bound
xchg
pop
mov
notb
rolb
mov
ja
subl
ficoms
sbb
jmp
mov
adc
outsb
mov
jae
repz
pop
jp
les
push
out
cmp
pop
ljmp
subb
push
and
out
inc
xchg
jg
mov
in
js
cs
mov
or
cmp
sahf
loope
dec
aaa
lret
and
and
sub
pop
call
fnsave
adc
popa
es
add
lods
aaa
out
pushf
mov
and
in
mov
hlt
jae
xor
xor
negl
xchg
test
mov
sbb
push
mov
movsl
mov
lcall
dec
and
or
mov
das
cld
and
push
xor
fnstenv
jne
xlat
jecxz
cli
nop
mov
and
andl
out
lcall
xlat
js
mov
pop
sub
dec
popa
and
dec
outsb
xchg
pop
push
cmp
inc
mov
shr
stos
lcall
je
and
jno
jl
aam
mov
loope
jb
fucomp
pop
pusha
lods
std
bound
add
dec
sar
and
push
ja
add
inc
or
inc
test
daa
sahf
mov
stos
jecxz
mov
cmp
gs
jp
les
sbb
int3
stc
ljmp
loop
lods
sbb
das
pop
jns
in
push
push
pop
mov
sub
notl
shl
xlat
jo
stc
jbe
xchg
xchg
and
xchg
sub
mov
mov
dec
xlat
imul
push
xor
inc
fwait
idivb
xchg
inc
fdivrp
mov
cmp
mov
mov
or
inc
sbb
iret
daa
pop
emms
jns
mov
xchg
pushf
sub
jle
call
add
xor
lds
mov
stos
lcall
jno
rep
je
gs
out
rcl
cmp
scas
into
inc
xlat
push
cwtl
jae
dec
in
add
test
lret
ret
push
out
jmp
iret
ds
stos
es
pop
nop
add
ficoml
mov
mov
lea
pop
clc
and
sub
mov
scas
mov
mov
mov
adc
cwtl
shll
or
inc
and
nop
mov
jne
movsb
push
mov
and
shrb
jno
ficompl
cs
or
mov
out
mov
push
sti
in
xchg
pop
inc
pop
insb
subb
push
mov
xor
dec
pop
xchg
lret
mov
lods
out
ret
jg
sub
jle
addr16
dec
inc
enter
rol
adc
cmpsb
rorl
jns
push
int
mov
jne
addr16
xchg
mov
pop
cmp
test
mov
jae
orl
out
push
jge
cmp
adc
mov
lret
aaa
xchg
sbbb
js
stc
push
mov
shll
cmp
mov
cmp
sub
cmp
in
cld
add
lds
call
add
mov
xor
mov
ja
mov
in
movsl
jae
sti
and
lahf
inc
push
add
sub
cld
sbb
scas
mov
xchg
repz
popa
push
movsl
data16
pop
or
mov
addr16
stos
insb
lods
inc
mov
sbb
xchg
lods
or
pop
inc
jecxz
sti
cmp
rclb
cmpsb
push
push
cmc
aam
or
cltd
loope
enter
sub
fldenv
scas
xor
jns
mov
movsb
push
jp
ljmp
scas
inc
dec
out
in
hlt
or
mov
lods
outsb
cmp
xor
lods
push
mov
add
mov
scas
not
repnz
pusha
dec
push
repz
add
aam
dec
aam
stos
pop
or
or
mov
out
les
lock
ret
adc
jp
xchg
inc
jns
xchg
jl
int
inc
leave
adc
jae
fldcw
movsl
cmc
cmpsl
push
push
inc
je
or
notl
pop
jnp
clc
jae
mov
les
movsl
jbe
jne
cmovg
inc
test
and
lea
mov
pop
scas
loop
cmp
jb
ret
repz
mov
xchg
je
dec
out
mov
cmpsl
push
loopne
fsubrl
mov
sub
sub
dec
fmull
pop
sbb
mov
jl
mov
mov
xchg
mov
in
push
push
or
rcrb
jbe
xor
imul
and
in
mov
test
sub
pop
out
xchg
popf
pop
mov
pop
repz
inc
ss
mov
fwait
push
mull
scas
loope
xchg
sbb
cmpl
jo
or
jl
inc
ss
pop
shr
xlat
test
ret
divl
enter
sbb
lea
xor
sbb
inc
std
mov
push
xor
out
repnz
sbb
cmpsl
dec
aaa
mov
xchg
jns
outsb
sbb
push
adc
push
push
or
imul
aad
movsb
test
movsl
mov
cmp
jge
and
pop
cli
adc
call
mov
mov
xor
pop
divb
and
jns
int3
push
mov
subl
scas
lods
rcrl
ja
rcrb
nop
add
add
testl
or
ret
pop
sbb
xor
shll
outsl
ror
mov
lock
mov
cld
xor
xchg
or
xchg
ret
icebp
dec
push
stos
clc
pop
xlat
subb
lret
xor
idiv
or
scas
lea
xor
jp
fs
pushf
xlat
sub
mov
adc
sbb
icebp
mov
loope
adc
mov
sbb
xor
jbe
test
mov
mov
lock
add
movl
and
lods
loopne
add
mov
lea
lahf
shr
into
icebp
pushl
mov
jmp
sub
push
add
test
xchg
out
push
mov
mov
movsb
dec
mov
dec
pop
aam
adc
jl
fldenv
adc
ss
stos
out
cmpsb
je
fadds
cli
outsl
stc
push
mov
and
cmp
pop
std
ds
fucomip
pop
js
data16
movsb
rol
stc
icebp
repnz
outsb
or
or
inc
gs
shl
sbb
cs
outsb
addr16
cltd
sbbl
fnstsw
aas
inc
pop
xchg
out
pushf
xor
mov
jp
test
lahf
out
movsb
mov
dec
cmp
sub
adc
dec
jne
cwtl
scas
ds
mov
cltd
mov
int3
pop
pushf
dec
mov
pusha
fwait
gs
xor
mov
push
cmp
jae
in
leave
out
lea
mov
sub
lods
test
dec
arpl
mov
movsl
dec
adc
inc
imul
mov
and
adc
push
jbe
sub
or
xchg
pushf
jmp
jne
xlat
lret
mov
lds
sbb
inc
es
mov
rcll
jmp
test
inc
stos
and
cld
lret
test
repz
push
xor
pop
cmp
aaa
adc
add
or
sub
clc
out
inc
test
popf
stos
ja
insb
loopne
and
adc
adc
popl
xlat
outsl
jno
insb
pop
mov
sti
xchg
andl
mov
mov
mov
xor
push
push
fsubrl
mov
int3
xor
negl
xor
imul
xchg
mov
jmp
fimull
adc
adc
or
pop
idivl
icebp
pop
fcoml
fstpl
mov
mov
and
into
cmp
jno
imul
mov
lcall
pop
imul
lcall
iret
stc
pop
fadds
scas
mov
xchg
divl
je
imul
jle
and
leave
dec
and
aam
aaa
fcmovne
insb
mov
cmpsb
gs
outsb
pop
loop
jle
fisubrs
hlt
les
push
pop
out
inc
gs
jl
cmp
add
inc
inc
pop
xor
inc
mov
arpl
dec
mov
xlat
test
std
andb
lock
insb
xchg
adc
shll
enter
cmp
cmp
jns
es
cmp
mov
into
and
sub
sub
cmpsb
scas
daa
and
adc
je
ret
in
fmull
loop
fisttps
pop
hlt
mov
mov
insl
hlt
mov
lahf
dec
lahf
pop
mov
jns
ss
adc
imul
fidivrl
shl
inc
ret
aam
pop
popa
inc
aaa
outsl
sbb
in
frstor
stos
sbb
in
insb
lret
jmp
xchg
add
imul
nop
ss
or
dec
lock
arpl
xor
xchg
mov
push
pop
loop
shl
inc
or
shlb
inc
cmpsl
pop
es
adc
inc
clc
in
test
inc
mov
adc
and
cmpl
lret
mov
adc
push
push
mov
test
xorl
adc
lcall
cmpsb
xlat
jo
push
mov
sbb
mov
xchg
dec
test
test
ss
mov
int3
xchg
dec
negl
and
outsl
mov
adc
ja
xchg
arpl
pop
in
push
fisttpl
xor
cs
fsubs
sub
mov
dec
mov
enter
ret
or
mov
mov
loop
add
les
cltd
cmp
cmp
jns
xor
fdiv
bnd
lea
pop
or
loop
decb
push
add
test
or
add
xor
mov
bound
outsb
xchg
add
and
or
xchg
and
movsb
or
push
stos
in
mov
ja
pop
xchg
in
in
adc
andb
cmpsb
aaa
push
fidivl
fcoms
out
push
or
push
pop
std
lcall
xchg
ss
pop
xchg
jmp
jge
mov
jecxz
loopne
push
int
xchg
mov
or
add
popa
repnz
ljmp
pushfw
adc
pop
mov
push
xor
mov
mov
daa
push
xchg
cld
mov
jne
jle
bound
enter
aaa
fsubr
add
dec
loop
xor
or
pop
int3
arpl
push
sarb
jbe
mov
mov
decb
push
fsubrl
or
out
ret
es
cmp
xchg
mov
std
sub
orl
jae
inc
mov
jnp
ljmp
adc
stos
scas
or
xchg
mov
dec
movsl
inc
sarl
das
shrl
jle
pop
mov
push
mov
jbe
mov
inc
jge
clc
iret
and
out
fdivr
mov
adc
xchg
in
or
cmp
shll
xor
xlat
je
pop
adc
push
shlb
ds
add
sbb
pop
aad
in
sbb
mov
sub
and
gs
or
stc
movsb
xchg
adc
mov
push
xchg
test
push
stos
inc
mov
std
inc
mov
rcll
lret
sbb
pop
stos
out
ret
mov
jl
mov
mov
cmp
xchg
add
push
sbb
and
lods
mov
xchg
das
jg
cmp
outsl
je
xor
ljmp
mov
ljmp
shlb
es
into
lret
ficompl
test
gs
inc
mov
fisttps
fucomp
das
and
out
filds
mov
in
dec
bound
ljmp
pop
mov
test
stos
fisttps
xor
imul
lds
adc
in
negl
fcoml
jb
or
outsb
sbbb
sbb
jle
inc
xchg
mov
ficomps
cmpsl
push
dec
mov
sbb
cmp
inc
js
ret
xor
imul
xchg
fdivl
mov
stc
in
pop
push
aaa
and
pop
dec
mov
ja
or
les
pusha
inc
inc
fdivl
and
dec
rcll
lret
jg
pusha
xchg
sub
lock
mov
and
pusha
icebp
adc
pop
insb
rcrl
and
sbb
lds
cwtl
addl
test
hlt
imul
insl
repnz
dec
lret
sbb
shll
and
pushf
push
mov
push
lcall
mov
push
pusha
aam
ljmp
in
sub
out
push
jno
add
inc
push
add
test
push
jmp
cmpsl
cmp
mov
mov
popa
adc
aad
in
and
mov
jb
mov
rcrl
clc
inc
int
std
fisubrs
xor
movsb
in
cmp
movsl
add
stc
or
out
aad
negl
pop
mov
mov
hlt
sbb
jno
cmp
int
jg
jle
cmp
jns
pushf
int
int3
scas
mov
idivl
xchg
repz
add
loop
in
pop
repz
popa
and
xorb
inc
add
imul
cmc
or
enter
fisubs
pop
gs
adc
push
sub
push
fwait
pushw
cmpsb
enter
mov
imul
sub
cmpsl
loopne
fcmovne
xor
mov
add
pop
fiadds
dec
mov
push
rcr
cmp
mov
xchg
xor
jmp
in
mov
dec
in
loopne
jae
jae
aaa
jmp
xor
gs
inc
mov
pop
les
in
xor
mov
fistl
cmp
cwtl
pxor
and
mov
hlt
repz
popa
or
xlat
push
gs
mov
in
mov
mov
pop
dec
cltd
fwait
cmp
insb
mov
mov
sahf
ss
mov
sbb
xchg
push
ss
mov
loop
dec
push
andl
inc
daa
gs
push
mov
int3
sub
xchg
pop
gs
xor
inc
into
mov
xorl
add
xchg
xchg
outsl
loopew
insl
movsb
add
xor
mov
push
faddl
pop
leave
jno
mov
jmp
lds
insl
sub
xor
xor
push
mov
jge
les
fstpl
push
mov
push
lcall
and
mov
pushf
mov
cwtl
ljmp
dec
adc
icebp
sub
adc
lcall
or
sbb
or
lahf
inc
and
jbe
inc
jmp
repnz
push
push
xchg
xor
into
push
sub
cltd
dec
xchg
daa
sub
lods
cltd
divl
test
lock
rcll
insl
sub
mov
and
mov
adc
test
jl
lcall
bnd
minps
cmpb
stc
mov
in
clc
push
jns
aas
test
jmp
inc
pop
out
cld
inc
xchg
pop
dec
add
loop
and
cmp
nop
mov
fnstcw
xchg
xchg
inc
sbb
dec
pop
lret
nop
adcb
insl
mov
or
xchg
xchg
mov
cmpsb
jbe
stos
out
icebp
lcall
bound
xor
jno
sub
sub
movb
xchg
bnd
lods
xchg
pop
push
lret
cmp
sbb
icebp
imul
xchg
cmpsl
sub
icebp
push
cmpsb
xchg
adc
loop
cmp
sahf
test
test
divb
dec
inc
stos
adc
jae
and
or
jp
imul
adc
push
addr16
rcr
andl
mov
mov
dec
push
int
shld
mov
nop
mov
gs
aas
outsl
loop
add
lcall
pop
lods
jmp
push
mov
mov
rolb
push
sbb
leave
push
mov
ja
push
hlt
pop
fildl
mov
es
jno
pop
xchg
jmp
imul
mov
inc
push
jns
xor
xlat
out
movsl
movsl
sub
and
dec
stos
shl
push
xchg
cmp
mov
lds
cmp
xchg
or
shlb
ret
lretw
orb
inc
aas
push
sub
jns
adc
mov
daa
jecxz
es
sahf
adc
inc
ret
stos
in
xor
addl
lea
mov
aam
stos
sub
fldcw
test
cltd
cmpsl
jno
adc
xor
outsb
pop
outsb
pop
sub
and
dec
enter
dec
jg
push
adc
jne
jecxz
jecxz
jb
pop
shrb
ds
repnz
dec
jnp
test
daa
dec
lods
ret
add
jl
mov
in
jg
inc
stos
cmpb
cmp
insl
aam
mov
or
rorl
jnp
data16
in
pop
jecxz
sahf
int
idivl
push
jle
sub
push
sti
mov
fidivl
out
ljmp
pop
das
pusha
adc
stos
pushf
rorb
nop
cmpsl
lods
loope
sub
push
pop
and
test
sbb
dec
aas
mov
mov
ret
repnz
sub
push
xchg
and
xchg
int3
pop
mov
cltd
push
movsb
leave
sbb
je
and
adc
scas
hlt
lret
sub
repz
out
and
mov
cmpsb
pop
in
sbb
dec
xor
cmp
rcl
sbb
xchg
xor
xor
sbb
mov
add
push
sahf
or
xchg
es
ja
cmp
mov
pop
jbe
jl
test
stos
fiaddl
mov
js
dec
adcb
push
mov
adc
je
dec
jle
pop
sarb
push
mov
ljmp
sub
adc
jp
out
cmp
xor
ljmp
xchg
fiaddl
fsubs
mov
mov
xor
xor
mov
dec
js
xlat
fs
ret
enter
mov
sub
cmp
pop
rolb
sbb
out
xlat
jb
mov
sbb
aad
sub
xor
jns
jp
dec
xchg
sbb
fcmovne
pusha
fdivr
push
jns
sub
pop
aas
ret
dec
jno
mov
pop
inc
dec
orb
testb
cli
xchg
pop
and
cmpsb
or
inc
inc
je
xchg
loop
pop
mov
pop
aaa
xchg
cmc
xchg
jmp
cmp
dec
mov
insb
rcrb
cmp
add
adc
in
dec
cmc
mov
mov
ret
push
sub
mov
or
xor
mov
cmp
push
in
int3
mov
leave
sub
data16
cmp
adc
mov
add
inc
dec
or
mov
xor
xor
gs
ret
jbe
mov
mov
xchg
sub
insb
dec
add
fnop
iret
in
outsl
xor
xor
jmp
popf
loop
adc
mov
adc
cmp
sarl
call
add
mov
push
ss
lea
cli
shrl
xchg
aas
lods
push
cli
andb
add
lret
adc
xchg
ret
xchg
leave
inc
mov
cmp
push
cmp
mov
mov
arpl
jnp
mov
aad
dec
pop
fisubl
cli
sbb
inc
orb
sub
leave
jo
stos
scas
mov
sub
sbb
or
mov
dec
push
and
xlat
ds
loopne
sbbb
sub
int3
xchg
scas
mov
insl
shrl
call
fldl
jp
ljmp
leave
adc
cmpsb
inc
scas
push
mov
sub
add
icebp
pop
xchg
mov
in
nop
add
cwtl
into
adc
adcl
jbe
in
les
in
js
and
icebp
ret
or
sbb
test
lock
mov
sub
or
adc
shl
mov
in
jae
cmc
xor
jnp
jnp
mov
xor
loope
jl
or
stc
or
cmpb
cmp
iret
pop
push
push
inc
dec
mov
sub
andl
cld
mov
push
cmpsl
mov
and
rcrl
test
dec
push
adc
shlb
ja
imulb
lods
popf
loope
pop
mov
or
sbb
popf
mov
repz
std
lahf
xor
xor
pushf
fwait
push
pushf
push
adc
cmp
stos
push
pop
pop
sub
sti
adc
fimuls
ror
xchg
pop
and
push
push
aaa
push
inc
xchg
add
push
lcall
lock
mov
ss
inc
jae
cmp
mov
pop
ja
mov
mov
pop
jno
inc
adc
cmp
push
out
fiaddl
in
in
aaa
test
mov
in
sub
jp
mov
subb
test
mov
inc
imull
mov
pop
sbb
jg
push
negb
inc
js
fstpl
les
stos
mov
xor
in
int3
in
xor
adc
jl
int
rcl
cmpsb
fmuls
aam
aaa
pop
aas
mov
stos
jmp
lock
nop
add
mov
jge
mov
mov
pop
mov
add
ret
lods
test
mov
xchg
mov
adc
cli
sub
pop
sub
das
sub
mov
dec
arpl
or
jp
jl
stc
cmpsl
add
xchg
ss
mov
in
gs
nop
cmpsb
jge
pop
push
xor
and
ds
int3
inc
idivb
in
clc
enter
mov
and
mov
inc
gs
repnz
sbb
dec
mov
fstps
popa
inc
adc
inc
lcall
int3
rcl
inc
stos
loop
daa
cwtl
dec
aam
ret
mov
cmc
fcomip
rcrb
aam
xchg
stos
imul
xor
not
sbb
jmp
sarl
int3
ds
xchg
fwait
mov
cmpsl
or
mov
pusha
aaa
pop
loop
ljmp
ret
movsb
lods
adc
cwtl
loope
ds
pop
scas
inc
fs
mov
jno
xor
mov
or
ss
icebp
xchg
xchg
pop
into
pop
fdivl
dec
mov
shrb
clc
cmp
lahf
mov
pop
stos
inc
mov
mov
mov
and
adc
sub
sbb
adc
stos
mov
add
mov
stos
cmp
xor
push
jnp
outsl
sub
out
sbb
bound
movsb
outsb
push
enter
xchg
adc
arpl
cs
push
aas
into
daa
dec
xchg
pop
lea
jmp
cmp
cmp
test
leave
xor
cmp
fsubr
sti
sti
hlt
push
adc
dec
popa
push
xor
rorb
sub
cmpsl
jae
fcoml
pop
sbb
and
jbe
pusha
add
js
stos
pop
add
cmp
xor
in
ret
mov
jle
pop
and
push
popa
mov
shlb
jbe
mov
adc
orl
xor
pop
imul
mov
sbb
inc
inc
lahf
push
inc
cmpsl
jge
aaa
cltd
popf
scas
jnp
aad
adc
fisttpll
jl
pop
les
mov
loop
jp
sbb
dec
in
cmpsb
pop
mov
je
inc
dec
and
dec
movsb
pushf
add
inc
test
pushf
push
mov
jnp
cli
and
sub
xchg
mov
xchg
ret
imull
or
fwait
mov
and
mov
push
jg
and
ret
adc
dec
bound
inc
add
mov
or
push
cmp
cmpsl
xor
xor
cltd
and
inc
out
jmp
adc
sbb
out
xor
jae
and
aam
cmp
mov
cld
mov
cmp
xchg
call
mov
mov
popf
sbb
aam
lods
mov
decl
add
and
push
dec
mov
cmp
popa
xlat
inc
mov
mov
shrb
push
lret
lret
push
sub
aam
lret
mov
sub
mov
lock
sti
xchg
movsb
stos
mov
out
fidivs
sub
orb
out
mov
sub
ljmp
jae
mov
pop
jo
call
jno
pop
arpl
inc
stc
xlat
movsl
pop
and
and
add
repz
dec
mul
xchg
stos
jmp
adc
addl
fs
xchg
cmpsl
and
dec
scas
xchg
cmp
sarb
push
sahf
enter
mov
cwtl
xchg
fwait
in
std
xor
push
cmp
xor
and
inc
xchg
dec
out
ljmp
in
ret
test
or
jecxz
repz
into
xor
out
push
enter
push
lret
adc
inc
cmpsb
sub
add
mov
jmp
sub
mov
sbb
aam
enter
and
add
leave
xchg
enter
xor
mov
xor
jl
cmp
inc
push
fisttpll
jo
stc
ds
push
pushf
or
cmpsl
xchg
xor
je
fsubrs
test
dec
das
and
add
cmp
inc
lea
sub
inc
mov
sbb
cli
cs
mov
mov
fisttpll
lret
lods
lea
lea
jne
jbe
push
int3
ret
add
jp
fnstenv
in
mov
jae
sbb
sbb
lds
sbb
xlat
mull
and
lcall
popa
les
cmp
enter
call
cmpsb
adc
mov
scas
movsl
inc
mov
out
pop
pop
adc
gs
inc
pop
pop
and
push
testl
es
loopne
push
insb
nop
aam
mov
add
mov
imul
rorl
push
aaa
cmpsb
add
xor
inc
jo
movsl
or
add
and
int
fsubl
je
cltd
ret
sarb
call
icebp
out
adc
adc
dec
clc
adc
xchg
shl
xchg
cmpsb
push
cmp
mov
mov
pop
mov
ret
in
out
data16
dec
je
or
mov
xor
and
sbb
push
loopne
std
ja
pop
lret
xchg
stos
repnz
sbb
jp
cmp
scas
mov
push
ljmp
mov
add
ljmp
icebp
sbb
mov
int
push
pop
gs
dec
add
push
push
add
fisttpl
sub
cmp
mov
jb
loop
iret
jmp
xchg
sbb
and
data16
add
lahf
leave
icebp
jo
imul
idiv
pop
test
in
and
add
fwait
inc
cs
inc
mov
push
jmp
addr16
jge
scas
sub
sbb
arpl
sub
int
out
les
rclb
push
jbe
lahf
test
add
add
xor
mov
arpl
cmp
sbb
imul
cltd
insl
pop
sub
mov
xchg
ret
inc
adc
dec
inc
in
js
js
add
push
repnz
xchg
push
in
rorl
in
fbstp
xchg
and
repnz
js
push
jl
inc
aaa
mov
ret
fiaddl
repnz
sub
mov
sbb
xor
push
add
hlt
push
xchg
xor
enter
jle
mov
pushf
addb
nop
in
shlb
ficoml
and
arpl
bound
xchg
cmpsb
imul
aad
sarb
mov
inc
enter
and
dec
cmp
inc
and
push
test
fwait
test
pop
sub
arpl
adc
test
std
xor
sub
hlt
int
adc
out
leave
dec
cmp
std
arpl
push
popf
cld
jnp
wbinvd
mov
inc
inc
jbe
xchg
jo
lret
sub
inc
mov
andl
xchg
jno
mov
and
fwait
or
sub
jne
pushw
adc
fldenv
popa
xchg
dec
fdivrs
or
cld
frstor
pop
mov
pop
adcl
fs
mov
and
adc
je
outsb
nop
outsl
sbb
int
scas
cmp
aad
inc
icebp
je
add
dec
loope
jns
nop
insl
pop
rcrl
adc
roll
repnz
js
scas
jp
xor
ficoms
dec
sub
imul
nop
adc
fdivl
sub
sbb
imulb
mov
fldenv
sbb
xchg
sahf
xchg
sahf
inc
jbe
mov
cmp
pop
pop
jnp
daa
pop
aaa
std
xorl
dec
fistpll
in
shl
adc
push
les
cmp
scas
mov
movsb
in
jmp
cltd
cmp
enter
test
or
stos
cltd
sbb
and
fs
clc
xor
sub
and
pop
cmc
jne
out
push
ja
jns
and
jecxz
pop
enter
ficoms
inc
shlb
fnsave
inc
arpl
cmp
add
pop
inc
or
dec
sbb
xchg
mov
sbb
mov
std
outsb
xchg
filds
mov
jae
in
fwait
test
adc
jl
dec
outsb
leave
jb
inc
jb
das
pop
lods
pop
mov
leave
push
xor
fcomp
sarl
cs
loope
in
jp
cli
daa
push
repnz
cmp
and
leave
mov
xchg
sub
roll
leave
call
call
ret
flds
add
push
and
es
xchg
mov
ljmp
adc
xor
imul
mov
std
shrl
xchg
in
pop
call
sub
je
fsubrs
cmpsb
mov
pop
les
sbb
insl
pop
das
jg
dec
testb
adc
push
sub
mov
sbb
jmp
aam
add
push
mov
fnstcw
in
subb
inc
nop
add
cmp
aad
or
lret
push
push
inc
shl
push
lock
xor
cmp
ss
fsubrl
out
push
and
fmull
adc
call
movsb
fisttpll
hlt
cwtl
dec
pop
pop
movsl
mov
mov
arpl
lods
icebp
and
jns
fimull
imul
pop
inc
jb
jae
rorb
cmpsl
outsb
jb
inc
or
xchg
cmp
repz
sbb
mov
in
stc
out
psubsb
rcrl
clc
fists
jl
nop
mov
lods
aam
bound
dec
enter
push
in
mov
arpl
pop
fisubrs
sbb
and
jmp
mov
mov
pop
out
roll
push
push
mov
mov
cmpl
push
enter
repz
outsl
ret
sahf
divb
cmp
xor
jne
mov
imul
repnz
test
sub
sub
sbb
push
jnp
leave
aas
repnz
stc
cmp
mov
push
jbe
in
ljmp
insb
mov
dec
popa
popf
xor
dec
add
lea
xchg
pop
mov
xor
test
lods
xorb
jecxz
and
lcall
stc
mov
lcall
lds
out
pushf
aaa
les
push
mov
push
aam
cmp
inc
test
push
jge
mov
stos
adc
in
pop
fists
cmp
fwait
pop
or
inc
and
push
xchg
sbb
sbb
push
lds
dec
mov
sub
dec
jecxz
cmpb
sbb
dec
push
jne
ret
xor
cltd
sub
pop
pusha
fs
ret
add
sbb
xchg
mov
mov
xchg
pop
lods
mov
lea
pop
into
jge
sub
inc
stos
imull
insl
mov
js
push
cs
pop
and
dec
xchg
jle
jb
adc
inc
es
mov
adc
iret
jp
test
xorb
push
push
fs
mov
dec
xchg
mov
addl
lcall
inc
adc
mov
or
inc
pop
sti
hlt
adc
add
scas
pop
cmp
call
jg
cs
sbb
std
pop
mov
ret
js
ret
xchg
sub
push
jns
mov
cmp
xchg
pop
sahf
frstor
cs
and
mov
dec
stos
xor
mov
mov
repnz
in
mov
and
ljmp
push
pop
cmc
nop
cmp
sbb
sbb
jo
and
cmc
cmp
and
mov
leave
call
scas
cmp
dec
aad
dec
mov
xchg
out
push
adc
add
or
arpl
jb
shl
sbb
push
mov
dec
mov
daa
sub
xchg
push
ja
je
cld
mov
push
fbstp
sub
out
call
jnp
xorl
dec
dec
jl
sub
xchg
and
fs
sbb
call
dec
jmp
rcll
fcomps
push
pop
sbb
xchg
sbb
nop
dec
xchg
jno
into
aam
les
cmp
add
pop
mov
cmp
add
test
test
fsubp
outsb
lock
shrl
fs
dec
xchg
jg
xor
rclb
das
es
adc
jns
fisubrl
xchg
outsb
daa
ret
sub
mov
adc
push
mov
fdivr
mov
out
inc
ret
cmp
cs
inc
movsb
jno
mov
insb
jb
mov
dec
popa
adc
pop
je
pusha
add
jb
mov
mov
dec
sub
cmpsb
mov
mov
dec
decb
push
dec
jb
push
cmpsb
xchg
xor
cli
fs
mov
mov
xor
and
mov
pop
or
fisubs
shrl
lea
ljmp
rolb
sub
imul
shll
mov
shl
push
cltd
jno
or
push
sub
test
test
push
mov
mov
repnz
ja
xchg
and
sub
lock
xor
and
adc
movsl
cmc
mov
jbe
sub
push
sahf
fisubs
repnz
sahf
in
stos
add
add
inc
xor
stos
or
movsl
std
inc
jge
xchg
cmp
punpckhdq
xchg
aaa
cltd
sbb
les
mov
call
fisubrl
out
out
xchg
or
clc
loop
add
imul
lret
lods
insl
dec
pop
mov
jnp
push
sub
test
hlt
shrb
mov
cmc
xchg
std
neg
sbb
out
mov
sbb
sbb
ja
fldl
dec
iret
loope
jne
or
xor
cwtl
fdivl
cmpsl
sysret
pop
in
or
imul
xchg
iret
cmpsb
mov
das
lahf
je
ljmp
rep
out
jecxz
pop
sub
aas
mov
sub
or
mov
mov
popa
adcb
sub
mov
jle
mov
les
pop
cs
andl
sbb
push
loope
add
sub
dec
mov
mov
inc
pop
cwtl
mull
insl
lret
jge
and
jecxz
xchg
mov
xchg
divl
rolb
pop
packsswb
pop
clc
out
lock
je
cmpsb
setne
jmp
aad
hlt
in
lock
adc
mov
ss
inc
fs
mov
pop
das
lcall
cmpl
lea
cs
mov
ret
pop
mov
inc
xchg
sub
out
sbb
mov
lods
mov
xchg
int3
sbb
mov
and
or
xor
pop
loope
sub
xor
mov
imul
adc
mov
fiadds
inc
andl
insl
lahf
push
xorl
push
call
fcompl
lods
aas
mov
and
mov
je
filds
inc
mov
cmp
mov
fildll
cld
subb
sub
filds
mov
mov
mov
mov
jno
dec
xor
mov
jp
add
cmc
divb
xchg
add
movzbl
les
in
ss
sub
repz
gs
mov
sbb
xor
push
sbb
dec
cmp
daa
pushl
lock
xor
mov
cmpsb
mov
adc
jg
std
pop
dec
cltd
stc
repz
stos
lcall
push
mov
add
mov
push
xchg
mov
loop
loopne
orl
dec
sbbb
test
cmp
inc
xor
and
add
jge
add
imul
jg
fstpl
leave
add
push
jne
in
mov
shrl
jle
push
dec
out
mov
sub
ficomps
fisubrl
cmp
lret
or
aad
jo
adc
mov
cmp
loop
sub
test
je
cmpsb
test
push
jg
sub
jo
push
mov
outsb
aad
xor
iret
in
and
popa
xchg
mov
stc
push
cmpsl
icebp
jecxz
jno
mov
addb
or
fistl
or
pop
ret
add
iret
ja
fistps
sub
lahf
or
popl
es
pop
cmp
mov
xchg
leave
icebp
test
xorl
xor
and
cs
popa
pop
test
ficomps
mov
jle
sbb
add
mov
adc
test
sub
sbb
imul
xor
xchg
pop
jnp
sbb
aad
data16
test
cltd
inc
lcall
jns
mov
mov
push
fcomps
jge
add
sub
mov
adc
and
adc
jmp
xor
jmp
or
insl
dec
hlt
xchg
adc
rorb
cli
fistpl
mov
cmpl
push
or
xor
aad
jae
inc
xchg
jns
sbb
mov
sbb
xor
adc
or
ds
imul
stos
out
xchg
mov
jge
dec
add
imul
dec
int3
pop
xor
pushl
pushl
xchg
mov
popf
mov
xchg
jae
test
pop
jns
into
out
jnp
dec
sti
arpl
mov
out
pop
movsb
fcmovb
imul
push
push
sub
xor
aam
in
lahf
clc
inc
insl
sti
movsl
jb
in
stos
mov
pushf
jns
xor
xchg
mov
insb
int3
fs
pop
mov
sub
sub
adc
or
xchg
jmp
ljmp
test
and
xchg
push
loopne
mov
pop
push
jle
mov
pop
add
aaa
jnp
ret
cld
ja
pop
pop
mov
mov
push
ficoms
pop
test
scas
push
mov
mov
into
fcoml
sub
mov
sub
jp
mov
dec
int3
mov
aam
mov
sub
xor
sti
mov
push
js
lods
xor
scas
sbb
outsb
out
inc
gs
xor
mov
and
lret
adc
insb
mov
fmul
sbb
mov
sbb
mov
mov
imul
xor
in
adcb
jmp
pushf
popa
fidivl
lock
into
mov
imul
or
mov
movsl
push
cld
jae
bswap
xchg
sbbl
loopne
push
push
xor
jae
add
sbb
ja
stos
lea
xchg
xchg
sub
mov
arpl
xchg
cmp
cmc
aad
cmp
in
mov
cmpb
and
ljmp
jmp
sub
and
pop
jmp
rcll
les
push
sbb
pushf
movsl
xchg
cmpsb
roll
jp
mov
cmp
push
push
xor
cmp
into
jecxz
mov
cmp
out
xor
ret
pop
sahf
mov
or
push
insl
enter
enter
jo
outsl
inc
xchg
jae
push
dec
int3
lods
pop
jle
rcl
xor
dec
inc
mov
fdivl
ja
jne
sbb
mov
lahf
inc
int
jnp
add
pop
inc
iret
addr16
mov
mov
pop
test
mov
inc
and
sub
enter
mov
inc
andl
xor
and
lret
or
mov
bound
mov
add
pop
add
adc
pop
inc
scas
fcoms
and
mov
xchg
mov
push
int3
in
fnstcw
sbb
inc
movsl
int
sub
lret
sahf
mov
fildl
and
aas
pop
xchg
leave
imul
adc
and
cwtl
nop
xchg
sub
cmp
mov
jb
sti
mov
arpl
mov
pop
inc
xchg
add
cmpl
mov
pop
dec
add
and
stos
xor
lahf
adcb
stc
mov
sub
mov
lret
push
jb
loopne
sub
mov
lret
fsubl
repz
loope
icebp
pop
in
in
ficoml
add
push
inc
fiadds
cltd
xchg
inc
fsubrs
push
xchg
insl
bound
jne
xchg
nop
popa
inc
push
popa
aaa
jge
incb
gs
mov
dec
push
jl
js
dec
js
mov
rolb
popf
cmp
cmp
jns
and
and
out
movsl
fisubrl
or
adc
in
cld
or
push
xor
pop
push
fadds
iret
cmpsl
or
push
pop
iret
jb
divl
nop
in
push
inc
xchg
mov
dec
mov
add
lcall
scas
mov
scas
add
add
popa
mov
gs
test
fs
sub
xchg
ljmp
in
cmp
push
bound
sub
ds
mov
negb
cltd
sbb
mov
aas
push
or
roll
dec
sbb
inc
sub
cld
cwtl
into
shlb
or
movsl
xchg
bound
jbe
sahf
sbb
or
mov
sub
shll
push
jge
sub
enter
ljmp
mov
add
cmp
xchg
outsb
mov
in
mov
fwait
shrb
loop
ret
sar
insl
add
add
sbb
mov
push
movsb
aas
pushf
jb
push
loopne
aam
imul
repz
adc
bound
jecxz
xor
adc
test
mov
and
inc
sbb
mov
cmp
incb
inc
add
cli
lds
mov
sub
scas
mov
add
aad
adc
sbb
cld
sarl
lods
fists
inc
jnp
inc
stos
add
inc
cli
mov
cmc
inc
xorb
xchg
bound
sbb
lcall
test
xchg
mov
loop
adc
cmp
cmc
add
push
mov
push
push
xor
mov
inc
push
mov
fwait
xchg
icebp
or
mov
imul
notl
rcl
mov
pop
mov
mov
push
jmp
dec
cmp
push
pop
cmp
or
xlat
les
adc
add
mov
addr16
inc
lcall
test
pop
fcomi
lods
mov
icebp
add
pop
mov
or
jmp
leave
adc
aaa
xor
mov
outsb
mov
dec
sub
push
cltd
ret
adc
gs
jge
movsb
add
je
or
bound
test
cmp
aad
fstl
push
xchg
test
xor
sbb
mov
fimull
jae
loopew
push
jb
dec
pop
add
push
pusha
adc
xchg
insb
loope
addb
cmp
xchg
xchg
sar
mov
sub
sub
adc
inc
add
sub
dec
je
jbe
rcrb
mov
aaa
mov
negl
lret
lahf
mov
lcall
imul
ret
cmc
jl
mov
lret
jb
cmp
mov
xor
jne
jb
mov
mov
into
push
aaa
popa
mov
push
test
loope
inc
mov
or
push
mov
jge
enter
dec
add
lcall
pusha
cmpsb
sbb
push
cli
movsl
mov
jecxz
lods
xor
clc
push
mov
cmp
xchg
hlt
out
fmull
js
jnp
fs
fwait
cmp
rcrl
cmp
xchg
into
imul
push
mov
cmp
inc
movsb
sbb
stos
jbe
mov
clc
pop
lods
cmp
xchg
cmp
stc
mov
mov
daa
insl
pop
aas
xchg
push
shll
mov
ljmp
pop
push
add
rclb
mov
cld
xor
fiadds
or
insl
or
xchg
xor
orl
sbb
out
cli
sti
aad
cmc
leave
leave
xchg
or
imul
or
stos
loop
mov
push
mov
stos
push
xchg
jp
loope
subb
jbe
xor
mov
push
mov
andl
push
cmp
fistpll
stos
shrl
sbb
lea
dec
into
xchg
andl
or
push
leave
add
mov
and
xchg
pop
sbb
mov
jbe
jmp
sbb
jb
sbb
ret
push
in
out
outsb
adc
and
xor
mov
lods
jo
decb
mov
jmp
fmulp
mov
jmp
fwait
cli
cmp
and
in
shrb
stos
and
test
lret
mov
leave
and
cmp
aas
stos
inc
jnp
push
mov
test
xchg
xchg
sahf
fstps
add
push
mov
xchg
rcrl
cmp
mov
loopne
ret
mov
and
int
int3
js
cmp
or
fstl
sbb
imul
cmp
pop
loope
das
jae
cmpsw
add
mov
iret
es
leave
mov
push
cmpsb
cli
std
test
add
mov
movsl
pop
pop
ja
xchg
pop
out
jle
adc
xor
xchg
xchg
lods
repnz
xchg
push
push
inc
adc
add
or
dec
imul
dec
xor
jge
lock
bound
imul
mov
cmp
jcxz
outsb
call
mov
jp
jne
push
add
dec
pop
xchg
mov
fsubs
jmp
mov
cmc
inc
dec
push
sti
xchg
dec
sub
xor
push
rclb
sub
xorb
ja
shrb
out
push
push
test
rcl
mov
mov
loope
mov
add
mov
jl
popl
adc
out
jnp
sub
push
jo
int3
enter
mov
daa
mov
pop
and
mov
daa
lret
leave
fisttpll
fiadds
fwait
sub
popa
scas
les
add
push
ret
xor
push
xor
scas
nop
dec
xchg
xchg
push
in
inc
arpl
and
inc
lea
push
loope,pn
xor
sahf
cmp
enter
js
lods
lods
lret
inc
add
adc
je
test
subl
xchg
pop
repz
aas
fwait
adc
aam
mov
mov
jle
and
movsb
pop
imul
xor
dec
add
mov
pushf
lcall
sbb
cmpsb
push
inc
mov
jno
inc
and
andb
cli
xor
fimuls
aas
mov
stos
jno
fcmovb
xchg
rol
mov
into
mov
in
sub
ret
ror
mov
cld
jle
cwtl
jg
cs
cli
push
mov
jno
shr
jno
add
mov
xchg
testl
inc
subb
and
mov
fptan
pop
inc
lock
jne
pop
movsl
push
or
pop
dec
and
inc
jo
xchg
imul
fstpl
dec
rol
and
sub
mov
imul
dec
and
xchg
adc
dec
and
data16
ja
orl
lock
pop
fisubrs
xchg
das
jmp
sub
in
cmp
js
pop
data16
sub
pop
ljmp
or
data16
jle
fwait
sub
pop
mov
pop
arpl
int
sti
bound
xchg
sub
sub
hlt
sub
outsl
xchg
fnstsw
jbe
cmp
movsb
mov
xor
pop
iret
pop
std
cmp
mov
and
push
aam
and
je
data16
aad
mov
sub
inc
mov
add
push
addr16
insb
rorb
test
loope
fnstenv
pusha
adcb
dec
jnp
sub
add
sub
xchg
or
xchg
sarb
fcoms
mov
and
xchg
dec
ja
and
loopne
out
and
mov
push
xlat
xchg
mov
cmpsl
jae
cmp
outsl
insl
fidivl
jl
cld
push
push
mov
mov
jbe
push
push
xlat
movsb
and
lret
leave
push
ret
jae
push
lds
sbb
arpl
lea
xor
leave
mov
repnz
inc
dec
jne
hlt
cltd
jl
movsl
rol
pop
xor
mov
dec
js
adc
sub
fistpll
mov
lock
jecxz
xchg
flds
xor
push
cmpsl
mov
pop
outsl
sbb
je
or
rorl
xchg
xor
loope
mov
adc
mov
ret
inc
push
cmc
test
adc
lods
mov
mov
add
lret
or
and
out
mull
scas
mov
sbb
sbb
icebp
mov
jg
pop
shrl
movsb
icebp
mov
ds
stos
sbb
in
inc
push
divb
aad
testl
lods
fldt
cld
xchg
sti
sahf
movsb
out
into
fsubl
add
adc
cmpsb
pop
xchg
xor
inc
andl
or
dec
and
cmp
pop
push
pop
and
rorb
into
lods
orl
test
jns
dec
sbb
loopne
mov
inc
xor
xor
add
scas
cmpsl
xchg
jecxz
daa
lret
stos
add
mov
mov
repz
in
inc
xchg
test
ss
push
bnd
lea
mov
push
pop
shlb
xchg
mov
xor
add
pop
into
mov
mov
aas
mov
cmp
mov
mov
fsts
adc
inc
scas
and
xchg
mov
adc
adc
cld
jmp
cmp
mov
jae
sbb
cli
mulb
jp
mov
test
mov
push
lcall
rorb
jnp
les
fwait
push
xor
lock
and
aad
popf
in
mov
es
iret
cli
jbe
pop
in
jmp
mov
les
int3
testl
or
lods
mov
jbe
push
shll
xor
movsb
sub
push
out
push
mov
jbe
fistpl
and
or
xchg
imul
mov
sub
inc
dec
adc
fadd
adc
out
mov
and
lods
or
lcall
int3
cli
or
push
sbbl
ja
enter
xchg
push
shlb
jp
test
mov
sub
sbb
pushf
ja
mov
add
adc
ret
into
hlt
sbb
in
sub
sbb
pushf
pop
roll
sbbl
stos
stc
cld
pop
outsb
jecxz
adc
in
out
sub
xchg
fs
mov
jb
fidivl
add
sbb
fs
lods
mov
mov
sub
xor
adcb
add
ss
out
outsb
jecxz
imul
mov
iret
cmc
lock
mov
pop
fisttpl
jne
xchg
xchg
sub
pop
or
dec
mov
xlat
xchg
mov
ds
mov
xchg
mov
add
sbb
and
test
stos
mov
push
leave
fwait
mov
inc
and
in
js
shr
push
adc
roll
sti
cmp
push
xchg
arpl
inc
lods
dec
inc
in
push
mov
sbb
sbb
aad
sbb
ret
sahf
shl
mov
pop
pop
jno
icebp
mov
shll
fcompl
std
xor
andb
mov
dec
arpl
lret
fcompl
ror
xor
cmp
pop
in
mov
mov
jecxz
shl
aad
mov
cmpsl
mov
rclb
or
dec
jne
dec
mov
stos
lret
daa
xchg
jl
fucomp
push
and
xor
lret
adc
loopne
dec
dec
cmp
fnstenv
filds
add
sbb
adc
push
dec
repnz
in
les
xor
lods
or
sub
xchg
and
pop
enter
in
std
or
pop
jns
ret
mov
pop
mov
push
xor
cmp
pop
lret
dec
and
sar
call
inc
dec
sti
mov
lret
mov
dec
into
addr16
mull
sub
cmp
out
jne
mov
loopne
push
push
pop
push
pop
add
push
cmp
add
dec
cwtl
sub
out
mov
rcl
gs
add
fidivs
mov
cmp
bound
shll
or
inc
sub
clc
cmp
xor
in
sbb
dec
push
int3
sahf
jns
mov
jnp
popf
and
lret
movsb
dec
daa
rcll
fucom
or
enter
jge
add
lret
popa
std
mov
lahf
stos
add
jnp
sbb
stc
sub
repz
jl
inc
sub
jmp
das
mov
push
loopne
mov
xchg
test
sub
or
iret
imul
sbb
mov
fnstenv
or
scas
ficomps
frstor
icebp
and
sub
pop
inc
cmp
pop
stc
sub
mov
push
fstpl
cmpsl
insb
scas
xchg
pop
or
sub
and
in
jbe
icebp
mov
subb
mov
sub
or
adc
ljmp
xchg
imul
sbb
shrl
clc
scas
mov
mov
or
adc
gs
or
inc
gs
fstpl
std
sub
push
cmp
mov
push
lock
mov
jns
jne
cltd
dec
lds
adcl
je
lods
lcall
cmc
scas
or
sbb
xchg
ljmp
je
sbb
dec
in
jnp
movsl
sbb
cmpsl
xor
roll
add
outsb
inc
lock
movsb
dec
pop
fidivrs
xor
cmpsb
roll
into
negb
in
scas
dec
mov
adc
lahf
lods
pop
jge
or
fdivs
adc
mov
cmp
aad
sbb
xor
shr
push
jle
inc
outsl
and
mov
pusha
inc
js
or
aad
in
nop
repz
fiadds
jecxz
pmaxsw
mov
pop
imul
out
sub
sbbl
sub
out
fisubs
stos
xchg
dec
enter
push
dec
stos
pop
push
out
cmpsb
pop
pop
scas
int
insl
movsl
xor
insb
cmp
mov
aaa
inc
and
adc
and
mov
push
clc
inc
ret
inc
and
repnz
scas
lret
aas
xchg
sbb
dec
mov
xchg
mov
cs
loope
jge
jbe
jae
xchg
adc
inc
or
cs
movsb
stos
ror
filds
call
pop
push
add
loop
dec
mov
mov
inc
jne
adc
pop
adc
icebp
jbe
xlat
mov
xchg
mov
nop
pop
sbb
jle
mov
loopne
xor
inc
xchg
add
mov
xor
out
cld
dec
mov
ljmp
outsb
test
outsb
movsl
repnz
out
push
adc
out
or
and
in
scas
enter
xor
outsl
sub
ja
push
mov
dec
lret
mov
push
mov
push
scas
inc
movsl
sar
enter
repnz
inc
jns
out
ret
pop
cmpsb
jp
xchg
rclb
lahf
and
xchg
fldl
inc
repnz
enter
jmp
repz
xchg
stc
mov
inc
js
or
xchg
sahf
pop
popa
repz
mov
fiaddl
repz
out
shll
xor
sub
fidivrl
dec
or
cmc
jbe
leave
push
xchg
hlt
mov
xchg
pop
ljmp
mov
sub
mov
jp
fistpl
arpl
stos
mov
test
movsl
add
adc
mov
inc
call
mov
int3
pop
repnz
add
push
mov
std
sbb
and
mov
inc
adc
cli
lods
movsb
mov
inc
mov
mov
inc
sub
dec
js
sub
test
sti
movsb
loope
fcoms
fs
insb
stos
mov
adc
push
pop
jns
in
and
cmp
lods
xor
xchg
push
pop
inc
scas
in
andb
mov
test
push
mov
fimull
outsl
jp
fistps
jp
xchg
shlb
pop
sahf
into
push
jns
pushf
inc
jp
fsubrl
mov
xchg
xor
popa
insb
pop
lods
sub
jmp
sbb
mov
fnstenv
inc
jbe
gs
dec
sbb
cmp
lea
cwtl
cmp
loop
mov
cmp
jmp
push
pushf
pop
daa
aam
int
sbb
push
pop
xlat
subl
fmuls
imul
bound
sub
addr16
adc
mov
adc
xchg
mov
push
and
mov
inc
out
inc
adc
leave
or
sub
std
pop
sbb
add
cld
test
inc
lret
imul
mov
fwait
addr16
cmpsb
lea
add
sbb
mov
popf
int
loop
out
jmp
shr
pop
into
adc
dec
aam
jnp
push
jle
push
jb
mov
pusha
outsb
jbe
add
imul
push
cs
mov
or
lahf
or
pusha
dec
mov
out
icebp
call
mov
out
mov
pop
int3
sbb
inc
add
fildl
adc
mov
add
ss
les
in
dec
fwait
out
sbb
cmp
pop
adc
jnp
adc
dec
xchg
imul
divl
popa
jge
decl
mov
mov
flds
push
push
icebp
outsl
ret
lock
jge
pause
pop
outsl
sbb
pop
mov
stos
mov
notb
loopne
out
popf
push
dec
call
inc
es
jmp
int3
lds
cld
jmp
jnp
pushf
int3
fdivrp
push
stos
mov
mov
push
dec
rorb
push
je
test
pop
push
cmp
outsl
jno
xor
push
dec
ljmp
jno
inc
insl
dec
dec
cwtl
in
mov
fcomip
cltd
xor
ljmp
sbb
popa
xchg
popf
idiv
pop
jle
mov
mov
faddl
orps
sbb
jae
cmp
fimuls
sbb
cmpsb
cwtl
das
sub
pop
mov
jl
lods
pop
lret
xchg
fsubrp
cmp
push
rolb
sbb
xor
xor
hlt
sub
outsb
jmp
mov
push
jnp
rolb
add
cltd
inc
dec
sti
repnz
pop
cmpsl
dec
cmp
cli
aaa
lret
and
dec
in
stos
jbe
xchg
push
xor
sahf
mov
xchg
jmp
xchg
xchg
dec
jb
loope
inc
shrl
dec
pop
lock
sub
sti
ja
sbb
loopne
push
and
outsl
jns
sbb
sahf
sti
scas
mov
mov
addr16
cmc
daa
in
cli
iret
push
xor
jg
mov
mov
in
mov
movsl
xchg
inc
aad
stos
sbb
mov
mov
imul
jmp
dec
mov
push
outsb
inc
inc
xlat
dec
mov
rorl
push
or
adc
enter
add
dec
adc
jp
shlb
jb
mov
in
jge
lock
push
xchg
adc
jae
in
jecxz
adc
popf
repnz
ljmp
dec
fcomps
je
mov
xor
js
out
daa
fildll
lods
in
insl
jmp
push
inc
mov
add
in
leave
and
lahf
insl
push
xor
push
aas
dec
jns
pushf
lods
mov
or
negb
outsl
jne
ds
inc
mov
add
add
and
mov
cmp
mov
mov
inc
add
lods
and
imul
jp
lods
and
repz
xor
lahf
dec
push
mov
int
xchg
lahf
sub
push
mov
mov
arpl
xchg
jae
pop
mov
scas
push
inc
jp
lods
add
ds
pop
and
xchg
pusha
imul
mov
jae
xor
fcomp
pop
out
jns
xlat
clc
test
int3
rclb
pusha
mov
outsl
pop
mov
pusha
lcall
icebp
mov
pusha
shll
inc
out
adc
mov
cmpsb
ret
mov
fdivrl
out
aam
rol
mov
adc
sub
sub
add
push
sar
loope
and
sbb
sub
and
loopne
insb
mov
inc
shlb
xor
adc
adcb
cmp
mov
pop
adc
mov
mov
or
push
addl
icebp
push
jle
adc
xchg
dec
inc
fwait
push
pop
jle
pop
mov
jp
mov
jns
push
loopne
cmpl
hlt
arpl
adc
xchg
mov
add
rcrl
loope
mov
cmc
into
pop
fisttpl
repnz
mov
test
out
cwtl
jmp
sub
and
lds
jmp
jmp
ret
bound
sbb
subl
mov
adc
cmpsl
mov
es
out
nop
sub
jns
pop
sbb
out
push
mov
dec
jnp
icebp
sbb
and
int3
int
loop
ret
mov
sub
test
push
lods
lock
ds
xor
insl
dec
cmpsb
xchg
je
mov
or
push
mov
push
movsb
jecxz
clc
int3
sub
sbb
cmp
push
lret
mov
push
add
push
pushl
das
sbb
mov
aam
pop
xor
mov
faddp
out
and
repz
rorl
jmp
out
cmp
dec
add
mov
fs
jb
pop
int
xchg
dec
pop
cs
dec
std
in
lods
jne
pop
scas
add
fs
enter
cmp
fildll
jp
cli
pop
movsl
cmpsl
mov
push
mov
dec
xchg
cmpb
inc
mov
dec
insl
movsb
push
test
aad
rcrl
jae
jmp
adc
pop
popf
out
add
cmpsb
je
add
outsl
cmp
fbld
dec
or
insl
mov
xor
imul
into
ret
pop
and
jb
adc
aam
cwtl
outsb
lret
mov
cmp
jbe
lods
adc
mov
movsb
inc
es
cmp
xchg
mov
inc
orb
subl
adc
cmp
je
mov
sub
into
pop
dec
outsb
cs
xchg
jmp
cmc
or
leave
test
je
mov
into
sbb
mov
push
jnp
jne
in
fwait
lods
or
or
not
xchg
jle
lret
cltd
lret
cmp
mov
packsswb
cwtl
mov
inc
imul
or
sbb
and
lret
inc
sbb
pushf
jnp
and
mov
aaa
sbb
inc
jnp
rcl
dec
or
cmpb
push
insb
sarl
loope
hlt
and
inc
dec
mov
jae
in
cmc
ljmp
xor
add
lret
mov
ja
push
and
jg
sbb
xor
cmpl
xchg
mov
test
mov
xchg
lahf
cmp
or
stos
xor
pop
inc
dec
cmpsl
jbe
call
push
test
sub
pop
dec
adc
jne
push
pop
sbb
fcoms
push
mov
mov
sub
mov
mov
imul
test
dec
jle
inc
rcrl
in
mov
sar
and
fisttpll
jp
sub
push
sahf
xlat
out
inc
lcall
ds
iret
mov
jmp
xchg
jnp
push
xor
xor
bound
xor
and
lret
loop
push
xor
adc
mov
xlat
mov
mov
xchg
sbb
aaa
mov
push
mov
or
stos
ret
ljmp
sub
xchg
test
mulb
mov
cli
cmp
mov
and
push
out
loope
inc
dec
xor
or
test
int3
mov
push
pop
push
jno
mov
mov
repz
dec
adc
mov
out
sahf
push
jnp
xchg
and
adc
fisubl
adc
add
leave
cmp
call
or
lret
or
subl
out
and
and
adc
xchg
mov
mov
push
or
movsb
jno
dec
push
and
push
sahf
push
jg
mov
jl
mov
sahf
std
pop
cmp
ds
cmpsb
pop
out
and
in
jl
jbe
in
adc
hlt
mov
push
loope
orb
hlt
jns
es
repz
jmp
bound
mov
nop
inc
jecxz
rcrb
sub
ljmp
cltd
int
cwtl
and
xor
lret
push
jge
repz
mov
lea
jmp
cmp
mov
fcmovbe
xchg
xor
lods
adc
les
into
loopne
sahf
loopne
hlt
in
sbb
inc
inc
or
ss
dec
fimuls
out
jns
dec
push
outsb
inc
mov
pushf
insb
dec
loop
cltd
loopne
es
adc
push
sti
sbb
std
cmp
pop
bound
js
std
xchg
or
mov
mov
adc
and
clc
mov
into
adc
std
stos
lds
jnp
xor
jmp
call
in
imul
fsts
add
enter
pushf
mov
xor
push
push
xor
mov
in
cmp
rorl
lds
cltd
scas
inc
jle
ffree
imul
xor
ficompl
imul
sbb
popa
jl
dec
pop
idivl
add
cmpsb
mov
push
jno
xor
pusha
into
setp
sub
pop
push
mov
int3
stos
or
ret
and
inc
loop
pop
fsts
faddl
pop
or
arpl
inc
xor
mov
js
xor
inc
out
leave
jo
out
push
lret
movb
rcll
cmpsb
and
sub
and
sbb
iret
fs
clc
xlat
popl
xchg
std
dec
jg
pop
addl
jg
scas
pop
mov
test
mov
lock
xor
mov
std
testl
fs
aam
sbb
dec
leave
hlt
hlt
cmp
mov
loope
loop
and
dec
or
cltd
inc
jl
hlt
push
inc
add
jo
mov
pop
add
jne
mov
xchg
mov
adc
fbld
push
sbb
icebp
sbb
aad
mov
sub
push
cld
dec
int
fnstcw
imul
loopnew
addb
adc
push
and
cmp
sub
das
pop
or
cld
sub
jne
fisubrl
fsubp
out
fs
cld
int3
mov
ror
scas
negb
mov
push
pop
jge
nop
in
pushf
mov
stos
or
call
push
stos
loopne
test
xor
inc
push
jns
sti
pop
dec
sbb
push
aad
aas
inc
dec
adc
jo
push
and
dec
test
dec
sub
test
adc
daa
push
lahf
inc
lods
scas
or
lcall
pop
fcomps
popa
aad
dec
icebp
mov
sbb
shrl
adc
lcall
push
xchg
les
add
es
jmp
rcr
stc
jl
cs
repnz
fwait
ret
js
sbb
stos
in
lcall
lods
adc
mov
rorb
jbe
xchg
cvtpi2ps
dec
pop
sti
jno
in
push
mov
xchg
xor
paddusw
clc
xor
ss
popa
sub
orb
pop
adc
mov
mov
cmp
movsl
fisttps
pop
lea
mov
mov
stos
ficoms
xchg
xlat
mov
ss
lahf
lods
xchg
pop
cltd
dec
cwtl
or
push
push
fdivrs
add
lods
sbb
hlt
adc
mov
push
cmp
out
pop
pop
in
fldenv
repnz
adc
stc
sbb
cwtl
fists
jns
outsl
mov
push
shl
loopne
push
sub
push
decl
mov
test
dec
out
scas
aas
pop
rcrb
pop
testl
sbb
cltd
or
cmpsl
xchg
pop
pop
xchg
hlt
sbbl
mov
push
sbb
or
mov
and
loop
inc
inc
test
shlb
sbb
nop
xor
incl
ret
ljmp
ret
cmp
dec
mov
cmp
mov
dec
or
sub
sbb
dec
adc
inc
mov
add
ds
mov
xlat
xchg
pushf
lret
mov
test
es
mov
pushf
and
insl
cld
cli
sub
xor
rcll
int
and
mov
jg
test
mov
sub
xor
test
xor
mov
pusha
adc
push
in
mov
xchg
pop
scas
aas
cmp
mov
mov
cmp
xor
test
mov
das
pusha
stos
fimull
and
out
inc
adc
add
pop
dec
cltd
lcall
xchg
or
push
outsl
pop
mov
shrb
or
xor
add
sub
rol
add
or
push
mov
or
paddusb
xor
cmp
pop
adc
cs
es
mov
jg
pop
xchg
mov
adc
adc
xlat
nop
jo
fildl
mov
pop
jnp
inc
movsl
shrb
and
or
loopne
lock
shlb
leave
cld
cmp
lahf
pop
loop
or
sbb
pop
jnp
pop
into
push
cld
rclb
xor
pop
jecxz
mov
cs
mov
les
or
mov
lock
jns
int
mov
popa
and
dec
mov
test
loop
lods
clc
cmp
mov
sbbl
mov
dec
push
decb
mov
push
in
push
sbb
mov
cmp
mov
push
stc
mov
push
xchg
jl
addr16
fisubrl
fisttpl
jge
std
orl
mov
test
sbb
pop
rorl
hlt
inc
jnp
adc
xor
sbb
mov
or
lahf
add
cs
sub
mov
xchg
xchg
sub
jb
jl
out
mov
fs
sub
mov
hlt
cmc
lods
pop
fwait
push
test
fiadds
data16
in
lahf
lcall
data16
test
call
jne
jge
and
adc
xlat
inc
dec
stos
inc
inc
jbe
popf
add
shll
in
dec
shll
sbb
push
inc
mov
mov
push
xchg
add
lcall
rolb
xor
out
sar
push
test
das
dec
fs
xor
xchg
fs
pop
mov
push
xchg
inc
aam
jne
add
cs
xchg
xchg
adc
jl
inc
xchg
ficomps
scas
pop
jl
push
cltd
inc
test
mov
lcall
fistl
adc
xor
test
cmp
aad
sub
cmp
ret
mov
mov
add
add
add
fimuls
xchg
cwtl
sbb
xchg
dec
and
cmpb
shlb
js
jp
pop
repnz
in
jo
outsb
fists
and
ds
dec
mov
mov
rorl
mov
add
lods
fisubrs
jecxz
inc
cmp
sbb
lea
pop
ret
cmp
out
sbb
inc
decb
dec
mov
popl
mov
jno
inc
xor
adc
out
fidivrl
add
scas
mov
int3
jecxz
mov
push
dec
inc
fiaddl
mov
add
in
sarl
das
jne
xlat
ja
pop
ja
lea
sti
popf
push
xchg
mov
int3
stos
cmp
das
xor
xor
push
icebp
lcall
pop
fnstenv
andl
lcall
icebp
insl
add
mov
daa
jmp
inc
arpl
mov
dec
adc
pusha
flds
decb
xor
enter
jmp
or
adc
andl
pop
mov
ret
mov
xchg
inc
cmp
mov
mov
jne
sbb
add
push
out
adc
jne
mov
test
adc
test
push
mov
iret
xor
mov
xor
hlt
lahf
negb
cmpsb
aad
dec
push
jnp
push
pop
popa
jle
jg
dec
insb
jge
pusha
cmp
popa
xchg
repnz
push
jmp
addr16
push
xor
cmc
jnp
push
icebp
fstl
push
mov
les
in
xchg
adc
mov
in
xor
int3
and
xor
out
scas
call
jb
pop
cmpsb
insb
in
inc
mov
and
lret
pop
imul
shrb
push
or
pop
gs
jns
fcoml
sbb
xor
int3
jg
add
xor
sbb
mov
testl
sarb
adc
and
pop
arpl
jbe
xchg
fcoml
mov
mov
and
jmp
inc
idiv
andl
and
mov
lods
lret
repz
jg
or
lret
sub
adc
dec
ret
int
jb
and
outsl
xor
rcll
sbb
call
jge
or
loopne
push
sub
loope
idivb
mov
and
je
pop
stc
mov
ss
mov
fwait
adcl
jno
std
xor
inc
jne
add
inc
mov
bound
bound
inc
push
lret
ljmp
hlt
lods
jle
into
xor
and
bound
repnz
pushf
adc
repnz
popf
adc
pop
inc
inc
ss
scas
fcmove
cmpsl
ljmp
pusha
cmpsl
jnp
jl
sbb
dec
mov
ret
inc
xchg
daa
mov
jge
fwait
scas
nop
xor
lds
sub
cmp
push
loopne
push
ss
dec
sbb
sub
push
sar
in
inc
loope
gs
fnstenv
dec
mov
int3
push
xchg
jl
cmpsl
dec
outsl
ds
ret
mov
stos
and
leave
or
sbb
cmp
or
sub
leave
fiaddl
cmp
insb
cmpsb
int
out
sub
mov
mov
insb
imul
dec
sub
jns
push
cmpsb
mov
pop
arpl
stos
mov
fdivr
dec
xor
ret
push
dec
inc
add
fstpl
ret
call
sub
jecxz
std
lock
sahf
push
pop
push
inc
std
and
jmp
out
enter
sti
scas
mov
popa
push
cmpsl
ror
test
loopne
outsb
or
xor
sahf
mov
cs
cmp
int
push
sub
popf
cld
sbb
xor
jae
mov
ja
stos
mov
leave
inc
jae
inc
mov
mov
push
jnp
jmp
icebp
mov
mov
push
int3
ss
enter
mov
sti
pop
mov
and
dec
sbb
loop
ret
shr
ficoml
mov
leave
inc
cmp
or
imul
pop
int
or
push
inc
inc
sbb
dec
aad
or
mov
mov
pop
into
int
xor
xor
shlb
cld
insb
adc
push
pop
inc
cmp
or
cmp
mov
loop
mov
add
mov
ret
in
jnp
fwait
test
or
adc
aas
xchg
and
cmp
pop
push
dec
test
movsl
xorb
test
ljmp
outsb
push
insb
fiaddl
lods
jne
add
out
xchg
dec
js
jae
int
mov
dec
movsl
fcmovu
jge
fidivs
add
xchg
dec
push
jl
sbb
cld
sbb
xchg
sub
data16
dec
je
scas
add
dec
imul
sti
cld
inc
fimuls
shrb
addr16
lret
aad
mov
fistps
lods
sbb
lret
jmp
imul
cmc
fsub
push
add
add
pop
ljmp
pop
mov
inc
mov
popa
sbb
mov
sub
pop
lds
jne
shlb
icebp
sub
push
test
sahf
iret
repz
sbb
lret
pop
mov
jg
into
mov
out
mov
fdiv
cmp
test
push
bnd
inc
mov
repnz
jne
xchg
lret
ficoms
gs
outsb
xor
xor
jae
int
mov
xchg
sbb
dec
and
xchg
cmc
pop
dec
inc
repnz
pushf
jb
repz
mov
repz
lea
jno
mov
arpl
mov
insb
dec
pop
in
in
jmp
fdivr
push
mov
ret
add
and
out
pop
loope
hlt
xorl
sarl
push
data16
or
mov
rcll
addr16
into
aam
adc
imul
cmp
scas
cwtl
sbb
xchg
jae
dec
sub
pop
adc
mov
pop
fldt
imul
adc
push
adc
sbb
in
loope
call
mov
dec
mov
xor
pop
jg
out
push
push
out
lret
fidivl
adc
xor
mov
shrb
cli
hlt
mov
cld
sub
lds
sbb
sbb
out
mov
mov
orl
js
jl
ret
lret
mov
add
add
pop
cmpl
dec
neg
jae
mov
mov
add
mov
clc
xchg
scas
mov
outsb
and
ret
cmp
pop
fsub
or
push
loop
inc
add
sbbl
and
and
adc
push
xchg
inc
pop
lock
loop
shr
xchg
not
loop
ss
add
adc
in
push
lock
sub
ret
pop
leave
mov
push
cmp
cmp
insb
cmp
fiaddl
sbb
nop
cmp
mov
shrl
xchg
dec
outsl
pop
cmp
inc
mov
mov
sbbb
clc
rcrl
dec
cmp
outsl
xor
das
outsb
mov
xchg
jecxz
fiadds
call
test
shlb
lahf
hlt
pop
mov
jo
hlt
jge
inc
pop
movsl
jmp
mov
and
lret
jae
xchg
mov
mov
push
aas
or
pop
xor
xor
fwait
xor
jno
testb
xor
mov
hlt
xor
pop
sub
imul
pushf
adc
test
jp
sub
loopne
mov
cmp
out
or
dec
aam
shll
jo
mov
fsubr
dec
push
cmpsb
ljmp
es
push
dec
loop
cld
fidivrl
push
imul
mov
add
cltd
inc
into
repnz
in
jp
clc
add
jl
pop
sbb
cmp
fildl
ljmp
rcrb
mov
dec
xor
jbe
cli
adc
repnz
sahf
or
daa
rcll
push
sub
xlat
out
notb
mov
into
xorb
rcrb
filds
test
cltd
jp
std
sbb
xlat
mov
imull
movsb
or
fidivrs
pop
mov
add
mov
inc
cld
stc
inc
out
jmp
pop
les
jno
lret
mov
mov
jg
test
jmp
jbe
sub
repnz
cwtl
mov
minps
sbb
lret
mov
ss
inc
ljmp
push
frstor
fwait
ljmp
or
mov
xorl
push
in
mov
jne
push
imul
xchg
mov
int
dec
xlat
sti
mov
sbb
les
pushf
cmpsb
sub
sbb
lahf
lods
or
aas
sarl
mov
mov
sub
or
cmp
jp
mov
sbb
out
push
int3
push
iret
sbbb
dec
insb
cltd
inc
sub
outsl
rol
in
jge
cmp
insb
adc
loopne
xor
stos
ja
jecxz
cmp
add
jmp
xchg
ret
add
jns
sbb
pop
inc
fs
std
stos
fildll
adc
in
int3
popf
mov
in
add
lret
mov
inc
gs
std
cld
cmp
or
test
ljmp
cli
pop
in
mov
ja
scas
and
xor
mov
inc
movsl
and
dec
out
ds
out
xchg
cs
sub
pop
outsb
lods
jb
daa
ljmp
and
scas
into
ja
or
push
fldl
inc
dec
fwait
jns
leave
adc
push
or
mov
outsl
sub
lahf
add
in
inc
push
cmpsl
test
in
mov
push
insl
test
adc
dec
lret
fs
pop
cld
add
and
mov
xchg
repnz
adc
sarl
fmuls
cmp
and
push
add
or
sbb
jae
int
call
and
mov
js
jle
cmp
aam
pop
imul
icebp
pop
inc
mov
dec
mov
dec
dec
cmc
inc
fcoms
enter
mov
xor
lock
addr16
mov
ja
inc
adc
lods
or
dec
mov
mov
imul
dec
andb
mov
sub
scas
or
daa
aad
mov
sarl
add
loop
ds
cltd
pop
push
fwait
sub
mov
or
pop
xor
out
mov
lret
pop
inc
jae
sbb
gs
daa
mov
xchg
pop
xlat
push
pop
test
scas
mov
mov
sub
imul
in
bound
push
jae
jne
incl
sbb
test
sarb
xchg
addr16
ret
aam
int
aad
xchg
data16
jbe
mov
mov
mov
or
jge
or
sub
push
pop
pop
xchg
cmp
mov
fadds
lahf
push
mov
aaa
jge
and
lds
adc
adc
cmp
lahf
xor
arpl
and
scas
inc
push
loope
rolb
push
jmp
imul
pop
ja
xor
movsl
popf
xchg
xor
jne
lcall
es
add
inc
movsl
movsb
cwtl
sar
rolb
incb
mov
xor
stos
jecxz
cs
mov
pmaxsw
das
xchg
fmul
inc
pop
or
imulb
mov
ror
xlat
and
stc
test
jb
icebp
xchg
and
call
jge
lds
hlt
jge
repz
cmp
bnd
ret
cmp
xchg
cmc
sti
hlt
addr16
and
jae
mov
jmp
xor
push
aaa
sub
cmp
roll
data16
xchg
cmc
cld
mulb
addr16
dec
dec
mov
cld
xchg
loop
leave
sbb
stos
and
leave
mov
xchg
cmpsl
test
and
mov
sbb
push
lret
or
out
and
mov
sub
mov
fcompl
cs
out
push
bound
lret
add
out
test
xor
xchg
push
mov
and
test
dec
cmp
dec
int
imull
pop
push
mov
dec
outsb
in
loope
and
add
in
cmc
test
dec
jmp
jbe
cmc
mov
fiaddl
jmp
jb
inc
adc
fmull
mov
push
mov
mov
jno
dec
ds
pop
aam
pop
ss
mov
bound
push
mov
nop
cs
adcl
xor
enter
sub
rclb
sub
out
repnz
fsubrs
inc
scas
mov
cmc
into
cld
mov
ds
pop
cmp
test
adc
adc
lock
aad
cwtl
pop
xlat
xor
or
loop
in
and
or
pop
lock
sahf
ror
mov
cwtl
xchg
dec
ljmp
mov
mov
int3
jp
in
lcall
loopew
jo
or
or
cli
dec
push
test
jp
cmpsl
mov
inc
int
popa
push
adc
add
jl
rcrb
int
ficompl
sahf
adc
sub
lcall
cmpsb
sbb
shll
pop
adc
xor
inc
enter
sbb
jmp
fs
inc
js
cmpsb
mov
adc
adcl
xor
sbbl
push
pusha
scas
fidivrl
int3
sub
sub
fwait
sub
inc
nop
xchg
aad
and
cmc
mov
or
ss
xchg
mov
mov
push
data16
scas
push
and
mov
repz
mov
pusha
mov
push
stos
sahf
out
inc
mov
aaa
sbb
jne
mov
pusha
pusha
dec
mov
jnp
adc
dec
xor
mov
pop
rcl
dec
mov
sbb
sub
ss
jo
lds
lds
stos
and
cmc
fadds
out
movsb
shrl
and
por
xor
sbb
xor
sub
jae
or
clc
int
arpl
rcll
cmp
jmp
into
push
enter
mov
mov
xorl
mov
das
jle
and
std
xchg
dec
xor
jp
neg
mov
daa
inc
xor
inc
fld
mov
cld
les
cs
lcall
mov
cli
pop
mov
loopne
xchg
mov
sub
pop
hlt
jmp
inc
into
cs
fsin
push
cmpb
and
rcl
xor
jbe
add
push
lea
lret
lahf
xchg
jbe,pn
push
push
adc
xchg
add
xchg
mov
mov
xor
add
cmp
xchg
popa
adc
push
rorl
fstps
adc
movsb
adc
imul
ds
xor
inc
mov
clc
notb
xor
pop
lods
sbb
out
and
cmpsl
pop
adc
push
cmp
aam
xchg
cltd
test
aaa
jb
orl
or
bound
xchg
mov
mov
test
cli
and
push
ljmp
jmp
into
into
fimull
pop
add
rcrl
stc
dec
lret
sbb
push
mov
xor
mov
fs
jle
jbe
jl
insl
roll
bound
movsb
in
mulb
popa
packssdw
sub
int3
xor
xor
push
cwtl
movb
frstor
out
and
push
jge
loope
fiaddl
in
stos
lock
imul
push
aaa
xor
jg
iret
push
cld
xchg
ljmp
imul
xchg
lret
cli
push
xor
sub
xchg
and
loop
push
pop
lock
ljmp
sbb
sub
outsl
lret
dec
int3
adc
test
test
out
or
pop
push
jmp
aad
dec
pop
in
xor
stos
mov
sahf
sbb
sarb
call
xlat
pop
push
inc
jno
dec
mov
out
cs
push
cmp
cld
or
fdivp
shrb
sbb
enter
cltd
test
ret
ljmp
arpl
lds
push
cli
mov
inc
add
les
add
sarl
dec
xlat
inc
in
sbbb
fbld
xchg
mov
hlt
lea
or
sub
jmp
stc
inc
fwait
jno
mov
mov
cltd
daa
icebp
mov
sub
pop
loope
sub
pop
out
leave
pop
jno
mov
add
push
pop
scas
hlt
int
int
pop
xchg
mov
mov
andl
and
sbb
cltd
xchg
and
fldenv
mov
xchg
ret
mov
shl
sbb
hlt
mov
stc
movsb
inc
out
add
imul
dec
pushf
xchg
popa
test
out
test
add
hlt
inc
subl
xor
sub
push
js
into
in
push
ss
mov
sub
in
lea
add
aaa
jne
mov
outsl
mov
adc
les
aad
pop
jge
daa
ss
ret
add
fnstsw
sub
inc
sbb
and
fdivrp
stos
fnsave
and
mov
cmp
pop
imul
insb
shrb
les
ud1
push
pushf
xor
pop
fdivrl
std
and
mov
mov
cwtl
lahf
xchg
cwtl
in
insl
jo
sub
mov
sbb
test
lcall
and
jge
scas
in
dec
adc
dec
push
sub
into
mov
test
jne
add
scas
mov
pop
mov
test
fadd
xlat
orb
push
mov
sub
mov
mov
jle
mov
cmp
sub
loopne
iret
inc
or
pop
inc
sti
lock
adc
push
std
push
lock
inc
mov
dec
in
xor
mov
fwait
push
push
enter
cmc
jl
adc
or
push
hlt
sub
push
nop
sbb
lahf
fs
pop
test
clc
sti
test
int3
dec
xor
and
scas
and
cli
and
inc
mov
call
jle
dec
aam
sarl
xor
les
dec
adc
or
fistpl
sbb
mov
popa
jl
dec
adc
jl
add
mov
jne
scas
pop
stos
pusha
stos
jmp
pop
mov
cmpsb
addr16
lret
push
or
in
dec
mov
sbb
fstps
push
cs
aad
mov
in
jg
enter
xor
out
and
dec
dec
aaa
jno
mov
shll
mov
mov
mov
stos
and
out
mov
pop
pop
cs
mov
sbb
imul
xor
and
push
into
push
imul
movsb
negl
cmp
cmpsb
in
sub
imul
xor
jno
or
mov
and
loop
pop
imulb
xor
cmc
xchg
cwtl
jns
fwait
bound
lret
and
sbb
fistl
rorb
lahf
int3
cmc
xor
push
pop
sti
ja
dec
icebp
js
fsubs
loope
xor
popa
gs
xchg
mov
push
push
das
or
mov
mov
mov
addr16
les
or
js
xlat
bound
push
mov
data16
adc
xchg
inc
test
jp
call
call
iret
fadds
mov
inc
jnp
js
sar
push
xor
mov
roll
cmpsb
outsb
inc
cmp
or
test
lods
inc
push
clc
push
sti
inc
push
push
rcl
in
mov
mov
mov
cmpsl
arpl
imul
xchg
pusha
mov
cmp
jno
mov
popf
fistpl
aaa
sub
pop
repnz
into
xchg
clc
sti
hlt
xor
sub
push
jbe
mov
cmp
cmp
lret
lods
pop
mov
cmp
in
mov
fwait
lods
adc
mov
adc
enter
mov
cmp
pop
aad
mov
inc
and
testl
lea
lods
test
mov
pop
std
xor
std
repz
dec
notl
mov
aas
pop
xchg
mov
ret
test
push
xor
popf
ds
lea
sub
int
cmpsl
loop
out
adc
cmp
push
adc
jecxz
mull
pop
pop
lret
jo
xor
or
cmpsb
rcrb
hlt
sbb
jle
lret
repnz
ds
mov
int
ss
mov
aaa
add
out
lods
out
inc
mov
sub
jbe
rcrb
push
inc
or
sub
ljmp
rolb
dec
lret
jnp
cld
or
leave
sbb
shrl
mov
add
xchg
adc
xchg
imulb
inc
gs
ror
loopne
mov
xor
adc
es
sub
ret
cmp
jmp
lea
push
pop
pop
push
icebp
xor
scas
clc
pop
add
push
test
ds
aas
movsb
xor
push
add
pop
not
push
add
fsubl
sbb
mov
test
pmuludq
sbb
iret
fsubrl
inc
adc
jns
out
or
and
ret
sti
jne
and
sti
aas
dec
out
mov
cmp
js
push
mov
xor
fs
fstpl
and
push
push
popa
xchg
mov
mov
push
ficompl
adc
xor
fcmovbe
popf
addb
nop
jae
idivl
popa
or
adc
mov
cmp
repnz
lock
push
sbb
in
adc
pop
bound
outsb
in
add
sub
xchg
jns
pop
cmc
lods
cs
inc
test
negb
jb
cltd
pop
jbe
movsl
mov
pop
popa
movl
lahf
mov
jl
lods
mov
xchg
lea
lods
addr16
popa
fnsave
add
jl
shlb
popa
daa
adc
xchg
jo
xor
dec
lods
scas
jecxz
cmpsb
scas
cltd
pop
mov
push
push
dec
clc
mov
jo
jb
test
mov
rcr
call
pusha
cwtl
pop
mov
ja
int
and
rcl
mov
insl
inc
sub
mov
add
jno
ds
pop
pop
pop
call
add
test
pop
sahf
push
jge
dec
and
faddl
icebp
xchg
inc
cmpsb
push
xor
movsl
xor
ds
xor
gs
les
into
and
jae
dec
jns
pusha
bnd
lret
scas
push
pop
adc
cmpsb
mov
jns
or
and
ja
mov
mov
cmp
mov
sbb
xchg
lret
shrl
add
mov
xor
int
cs
dec
mov
cmp
dec
pop
test
xor
xlat
adc
pop
or
push
cmpsb
dec
rol
sub
inc
inc
jne
mov
iret
mov
shll
addr16
adc
pop
sbb
lods
or
in
adc
mov
into
mov
cmp
pop
mov
test
jae
xchg
xchg
push
cmp
cwtl
xchg
mov
lcall
sub
imul
cltd
and
mov
pop
mov
push
push
pop
cmp
mov
push
push
jne
sub
sahf
mov
jp
insl
xorb
pusha
dec
fidivrs
jb
je
inc
pop
pusha
mov
movsb
lods
mov
mov
outsb
jne
jmp
inc
sub
add
dec
xor
or
sub
ret
jns
and
or
mov
xchg
pop
and
jp,pt
add
pop
imul
repnz
xor
dec
dec
into
fidivs
xchg
repnz
dec
inc
mov
sbb
sbb
shlb
jb
or
add
and
adc
dec
mov
sub
aaa
push
fcomip
or
fimull
fmull
sbb
push
popa
jecxz
imul
inc
out
lret
idivl
inc
jg
sub
sbb
mov
sarl
sub
sub
cmp
push
bound
int3
lods
bnd
ret
test
and
xchg
mov
lea
popf
inc
test
lcall
movsb
pop
mov
imul
sbb
mov
lds
jl
jge
cwtl
out
jbe
or
adc
mov
flds
sub
or
stos
cli
test
fisubl
xor
sbb
dec
adc
push
cmp
cmp
in
pop
jo
jnp
cmpb
xchg
push
push
jge
das
xchg
xchg
mov
and
cmpsb
and
cmpsb
aas
rcll
xchg
mov
cmpsl
mov
cmp
mov
addr16
nop
movsl
adc
xchg
push
xor
inc
mov
int3
mov
mov
lea
inc
movsw
popf
out
xchg
inc
repnz
cmp
add
inc
addr16
fistps
bswap
jae
out
cmc
imul
cmp
adc
sub
in
in
sub
sti
dec
rol
pop
and
or
cli
adc
inc
sbb
mov
adc
mov
adc
dec
icebp
stc
adc
mov
sbb
sub
sbb
mov
mov
repz
push
imul
jle
xor
cli
push
clc
and
mov
add
aam
push
mov
daa
into
in
jb
and
movsb
lea
gs
call
xlat
sub
cwtl
je
pop
push
loope
out
pop
and
adc
mov
outsb
fisttpll
adcl
fmuls
push
xor
mov
je
cmpsb
fnstenv
push
test
rorl
lcall
or
jl
xchg
dec
inc
adc
daa
cli
inc
iret
bound
rcll
int
pop
std
rorb
push
add
mov
std
adc
mov
or
clc
in
and
push
aad
mov
dec
mov
lahf
mov
adc
jecxz
jmp
dec
lock
sbb
sbb
push
icebp
aaa
cli
aam
add
inc
mov
cmpsb
fwait
in
cs
mov
dec
sbb
adc
pop
cmp
leave
mov
pop
das
xchg
ds
jno
enter
push
cmpsl
or
cli
inc
cmpsb
fneni(8087
sbb
out
pop
jbe
add
adc
gs
ds
pop
hlt
mov
mov
paddusw
add
les
mov
mov
sub
cmp
mov
pop
mov
dec
mov
imul
sub
aaa
mov
fidivrl
add
iret
mov
or
add
test
fcomi
in
lret
ja
push
mov
mov
dec
cmp
inc
mov
cld
orb
dec
faddl
call
and
mov
push
pop
or
adc
and
mov
cmp
mov
ffree
jae
xor
mov
lods
jae
add
imul
sarb
push
stc
cmc
inc
lock
and
ds
jne
or
movsb
jbe
cmpsl
xchg
daa
or
daa
in
xchg
dec
mov
cmp
cmpsl
imul
fidivl
js
jecxz
mov
scas
pop
pop
add
in
nop
pop
adc
popf
jbe
xchg
xor
out
dec
arpl
andl
or
jp
push
test
lds
jmp
push
in
dec
call
and
sub
sbb
jns
incb
jae
and
add
fwait
lock
push
int3
sub
cmp
sbbb
nop
aaa
mov
enter
pop
dec
ficomps
and
mov
push
add
cmpsl
mov
jbe
fcmove
jne
iret
xorb
insb
xchg
scas
jp
xor
pop
psrad
ljmp
push
cmc
ret
dec
mov
pusha
sub
and
js
add
repnz
mov
int
pop
xor
adc
cmp
rorl
add
iret
add
mov
jge
cmp
movsb
fsubl
ljmp
sbb
in
mov
cmpl
movsb
mov
jecxz
add
out
cld
mov
and
cmpb
mov
inc
mov
aas
push
les
subb
outsl
std
data16
mov
xchg
int3
xor
mov
test
test
mov
std
jbe
lock
nop
call
and
xlat
out
daa
das
cld
in
xor
sbb
je
dec
xchg
icebp
lcall
adc
push
add
insb
lret
jns
xchg
js
cmp
mov
pusha
addr16
cmp
cmc
adc
int
dec
into
int
sbb
cmp
xchg
or
sub
hlt
xor
sti
pop
jno
inc
loopne
int3
leave
pop
and
cmp
ds
push
cmpsl
inc
into
daa
fisubs
in
mov
data16
shl
mov
imul
push
push
push
jb
adc
sub
push
stos
outsb
jbe
cmp
add
fsubrs
rorl
xchg
jnp
xchg
sbb
mov
xchg
jo
stos
divb
xchg
mov
das
aaa
popf
mov
daa
popf
adc
inc
or
mov
jl
test
cmp
xor
shlb
jg
es
mov
push
ss
les
push
ljmp
or
lret
adc
and
or
add
mov
mov
dec
add
adc
je
shr
lock
push
outsb
pop
pop
inc
mov
js,pt
bound
adc
xchg
mov
pusha
lret
sub
sub
fists
add
nop
jle
dec
inc
sub
cmp
pop
jl
cmp
mov
aad
xchg
xchg
dec
cmp
lret
mov
addr16
mov
cs
fdivr
insl
imul
std
test
mov
faddl
adc
sbb
mov
jo
add
das
cmp
mov
ja
test
mov
imul
gs
rcrb
mov
mov
pop
mov
sbb
dec
add
pusha
mov
jne
push
popa
jmp
sbb
pusha
rcll
xchg
negb
test
sahf
in
xor
loop
dec
scas
sub
cwtl
cmp
fidivrs
dec
and
sub
cld
mov
sbb
int3
scas
test
or
sub
mov
mov
mov
add
shlb
stos
arpl
sub
xchg
push
or
cmp
mov
xor
mov
movsl
cmp
xchg
xchg
aas
les
mov
popf
loop
test
xchg
jb
mov
add
mov
sub
imul
mov
int
sbb
pop
jns
push
mov
hlt
dec
mov
test
lock
jno
pusha
repz
mov
daa
lock
sub
repz
cld
loopne
dec
dec
nop
push
inc
cmc
push
stos
jmp
int3
xor
fldl
xor
cwtl
sub
nop
fs
iret
imul
xor
les
fcomps
iret
jae
cmpsb
jmp
fwait
inc
jno
rorb
pop
insl
xor
fnstenv
mov
mov
jle
cmp
push
js
mov
push
jns
sbb
jl
movsb
add
xchg
lret
mov
inc
pop
data16
out
in
addr16
divl
adc
xchg
push
ds
jl
add
movsb
adc
js
xor
imul
adc
scas
xor
adc
or
clc
push
jnp
mov
pop
aas
out
xor
rolb
in
popa
jbe
out
fisttps
aas
sbb
sub
mov
sbbl
out
hlt
lahf
aad
rclb
adc
sbb
jl
and
push
pop
mov
gs
mov
or
xor
mov
xor
cmp
mov
rcrb
daa
add
sbb
dec
xor
push
lahf
into
sub
pusha
repnz
fwait
out
xchg
jne
or
and
test
jp
cmp
scas
cmp
jecxz
sub
lret
pop
and
push
adc
ret
mov
cmp
adc
push
lcall
push
aaa
divl
mov
add
pusha
sub
outsl
add
mov
addr16
cmovb
fwait
mov
and
or
mov
or
xchg
jle
cs
xor
push
popa
loop
aad
pop
pushf
dec
stos
adc
xchg
aaa
mov
xor
out
pop
mov
vmovaps
testb
popa
loope
hlt
mov
inc
mov
pop
pop
inc
leave
loopne
pop
ss
push
push
dec
pop
jecxz
outsb
xchg
xchg
cld
shrb
out
cmp
enter
cmp
pop
xchg
in
add
and
xchg
mov
fwait
repz
add
imul
rclb
lods
cmp
mov
add
sbb
repz
mov
mov
lds
fnstcw
or
cmc
cmc
or
imul
and
insl
push
lret
ret
movsb
cmpsb
or
out
inc
lea
ss
xor
push
xor
stc
sbb
mov
arpl
mov
mov
imul
fs
inc
xlat
jg
mov
lds
outsb
aam
cld
fnstsw
lods
out
test
inc
jae
lock
sub
pop
or
out
dec
in
inc
sbb
jmp
cmp
or
and
or
lods
xlat
pop
xchg
sub
mov
xchg
add
fxch
test
push
pop
in
pop
aaa
push
jecxz
out
aam
sub
adc
push
out
arpl
cli
and
into
sub
lret
or
push
xchg
and
push
ret
adc
mov
lret
push
push
sub
jb
or
addr16
clc
leave
imul
pop
xchg
mov
add
xor
cmp
adc
js
mov
adc
outsl
sbb
mov
sbb
jae
mov
cmp
leave
jg
or
cmpsl
insb
iret
movsl
outsl
inc
cld
jnp,pt
cmpsb
inc
cmpsl
loope
mov
daa
iret
mov
repz
and
jp
jns
std
cwtl
or
lods
or
sub
cltd
mov
lods
ret
adc
es
or
in
adc
cltd
sbb
leave
inc
loope
mov
mov
fcomip
es
popf
cli
push
jg
dec
test
jo
test
add
or
das
loop
in
fimull
ss
faddl
mov
mov
icebp
push
sub
filds
outsl
sbb
adc
iret
das
fstpt
inc
in
pop
lahf
stos
xchg
pop
or
add
paddsw
inc
add
xlat
cmp
xchg
cmc
or
or
adc
jns
rclb
jnp
into
jg
dec
cltd
decb
mov
nop
shll
dec
xor
and
jne
mov
test
pop
repnz
loopne
loopne
pushf
jecxz
and
jg
pop
xchg
push
jmp
sub
lds
mov
out
into
int3
mov
pop
mov
or
inc
cmp
cmpsb
loope
xchg
xchg
rcrl
fsubr
shrb
and
cmpsb
bound
bound
adc
ja
mov
nop
adc
icebp
push
push
jno
insl
gs
push
jnp
pushf
and
test
push
and
mov
icebp
js
cli
xor
push
inc
fnstenv
push
call
neg
push
cmpsl
imul
inc
in
xchg
std
dec
inc
js
fwait
aad
inc
lods
stos
xor
out
out
or
cmp
int3
mov
lods
pop
jo
add
sbb
cmpsb
icebp
lcall
add
rcl
cs
incl
sbb
popa
and
or
gs
loop
cmp
push
cmpb
cmp
inc
pop
xchg
dec
cmc
lahf
loopne
js
or
inc
xchg
dec
dec
outsb
or
stos
lods
xchg
repz
loope
adc
insb
data16
mov
sub
dec
dec
lret
mov
lahf
xchg
push
test
dec
leave
jmp
out
imul
dec
test
rcll
dec
lds
add
aas
jp
pop
push
stos
popf
ljmp
mov
sbb
push
sbb
add
adc
rcrl
or
and
inc
lret
xor
jbe
push
xor
sub
and
mov
mov
cld
add
mov
adcl
push
pop
inc
xchg
mov
repnz
jb
arpl
das
fwait
mov
loope
push
jmp
fs
cmp
adc
sub
push
sbb
jl
mov
fs
jbe
andb
cmpsl
lret
std
xchg
clc
pop
outsl
movl
mov
xchg
jno
test
xor
shrb
mov
or
stc
cmp
cmp
loope
xchg
xchg
frstor
call
repnz
adc
push
xchg
jnp
adc
outsb
sbb
out
xor
popa
jge
imul
aad
push
clc
mov
out
jmp
mov
adc
mov
in
ja
fcoms
pop
insb
clc
push
jbe
aas
adc
xor
lods
add
mov
mov
fdiv
or
inc
mov
xchg
cmp
loopne
bnd
pop
movsb
mov
sti
pop
gs
push
push
and
adc
inc
test
add
jno
mov
add
mov
inc
pop
jp
xor
push
add
fdivl
decb
inc
or
dec
testl
mov
ud1
filds
imull
icebp
dec
fstps
dec
clc
add
sub
imul
sbb
fs
movsb
dec
push
inc
mov
rcrl
ja
out
mov
scas
ljmp
xlat
aas
mov
fimull
lods
dec
pop
pop
add
dec
inc
xor
or
sbb
test
push
add
sub
or
in
or
cld
leave
mov
daa
hlt
mov
or
rclb
fisubs
cmpsl
push
int
sbb
or
add
add
jns
jp
jb
out
hlt
push
dec
jbe
sub
cmp
lods
pop
jns
xchg
rcll
test
out
loope
or
push
mov
xor
inc
xchg
push
shr
mov
jb
enter
and
jmp
mov
jecxz
aad
hlt
cli
faddp
dec
repz
xchg
outsl
movsl
ficomps
cld
loopne
testl
cwtl
or
movsl
rcl
popf
add
pop
and
cwtl
aas
in
cmp
mov
in
cmp
out
mov
aas
in
adc
sub
xchg
in
mov
out
inc
cmc
sbb
mov
ja
pop
lret
jno
cmp
je
xchg
jecxz
sbb
dec
jbe
and
pushf
ljmp
push
add
test
jns
mov
dec
push
add
mov
cs
aaa
lcall
out
xchg
push
je
sub
std
xor
loopne
jnp
movsl
xor
call
aas
call
gs
sar
fmul
cmp
sbb
mov
nop
and
pop
lcall
loopne
mov
roll
popa
inc
sbb
sahf
and
popf
test
ja
nop
inc
xor
cmp
mov
push
cmp
fildl
mov
lods
out
mov
outsb
movsl
cltd
pusha
jb
iret
pop
fistps
fs
cmc
ret
or
iret
and
scas
test
xchg
jnp
out
add
js
inc
mov
jbe
dec
xlat
mov
pop
cmpb
std
enter
xchg
addb
mov
in
mov
jmp
popa
cmpsb
fcomps
lock
jb
adc
rclb
pop
mov
pop
jnp
scas
xor
out
lret
fdivrl
rol
aad
roll
outsl
push
or
and
adc
addr16
add
pop
mov
push
mov
mov
lret
inc
les
in
cmc
and
pop
or
lods
mov
and
and
xchg
lcall
movsb
negb
outsb
mov
xchg
into
mov
popa
xchg
pop
push
jg
xchg
arpl
movsb
mov
sub
push
push
repnz
inc
mov
mov
inc
jmp
jg
jecxz
cmp
jmp
ffreep
dec
daa
push
sub
adc
mov
dec
mov
mov
mov
subb
clc
dec
jge
clc
and
fstpt
popf
iret
adc
inc
popa
push
sub
jbe
aaa
stos
xor
cmp
and
or
fwait
push
cmpsl
in
pop
and
dec
adc
ret
cmc
int3
and
in
jb
xchg
mov
shrb
ret
dec
das
sbbl
xchg
cs
xor
mov
fwait
inc
adc
arpl
jb
xor
push
add
cmp
jns
cld
dec
xor
jae
out
xchg
stos
cmp
push
and
in
insl
hlt
jl
inc
insb
pop
or
sbb
call
xchg
cmpb
outsl
lret
xchg
xor
in
cmp
ds
mov
std
loopne
mov
lea
inc
add
lcall
add
push
or
loop
sub
sub
mov
js
mov
stc
inc
cmpsb
adc
dec
fldt
mov
fcoms
mov
dec
add
pushf
pushf
scas
enter
xor
sbb
xchg
pop
sbb
adc
cld
add
sbb
push
sub
sbb
repnz
jle
ja
repnz
jecxz
les
jno
aaa
xchg
sub
push
loop
dec
sbb
inc
and
cmp
push
inc
sbb
mov
ret
popa
push
xchg
inc
dec
ficoms
out
lock
cmp
scas
pusha
sbb
dec
in
jae
sub
iret
mov
xlat
push
dec
fadd
push
jmp
adc
call
call
lcall
or
mov
sub
lret
mov
dec
xchg
dec
and
dec
push
enter
std
pop
pop
in
push
or
bound
jmp
daa
xor
into
popa
fdivl
jbe
mov
lret
mov
push
sbb
cli
fwait
inc
jns
cltd
adc
insb
sbb
jae
mov
mov
sub
in
cltd
mov
stos
add
jmp
lods
sbb
push
into
int3
and
loop
aam
mov
fstp
mov
hlt
pop
notl
in
dec
or
ljmp
sahf
xor
in
lock
mov
in
ds
enter
inc
xchg
mov
movsb
mov
sahf
push
cmc
imul
lods
enter
mov
and
sub
rorb
cmp
fs
pop
dec
adc
repnz
pop
out
inc
jae
sub
cmc
out
sub
enter
push
stos
inc
jbe
xlat
jg
mov
loopne
sub
fnstcw
nop
repz
rol
fstps
stc
cmpsb
cli
mov
int
pusha
cmpsl
or
mov
in
data16
arpl
xor
imul
mov
pop
dec
or
xchg
mov
daa
jecxz
dec
shll
add
dec
xor
mov
mov
in
pop
push
xchg
inc
jno
push
out
gs
call
jmp
push
rcrl
stos
je
push
push
sub
repz
or
jl
lea
cmpl
pop
cmp
sub
jne
sbb
push
insl
push
mov
cmp
loop
cltd
mov
mov
sbb
ljmp
cmp
loop
jecxz
in
or
mov
sub
fists
dec
repnz
inc
loopne
testb
or
icebp
fwait
outsl
jp
push
stos
pop
jmp
iret
or
test
inc
or
dec
pop
lds
adc
adc
loopne
sbb
enter
ja
leave
int3
cmp
xor
mov
pop
mov
fbstp
pop
xchg
mov
mull
jbe
pop
xchg
cmp
dec
test
test
cli
es
push
inc
or
push
sbb
outsb
fsubl
and
clc
push
or
dec
xchg
scas
push
movsl
or
push
stos
mov
push
and
mov
mov
mov
push
push
enter
cwtl
adc
cmp
sbb
adcb
sbb
pusha
and
enter
or
dec
push
insl
jmp
nop
out
and
mov
cmp
fdecstp
mov
jno
je
dec
movsb
pushf
bndldx
and
cmpb
and
fmull
mov
inc
sbb
imul
rcrl
lcall
out
pop
and
sub
lret
sbb
fcmovb
cmpsb
push
ljmp
mov
xor
and
xor
cmpsl
scas
fwait
inc
lahf
int3
inc
repnz
rcrb
hlt
insl
xchg
leave
or
mov
enter
jmp
jmp
add
shll
add
xchg
clc
js
fnstcw
cmpl
sub
orl
inc
stc
and
mov
jnp
ss
pop
cmp
add
jo
clc
mov
cli
aaa
mov
mov
je
xorl
add
push
pop
imul
jp
inc
cli
pop
sbb
lds
repnz
into
cld
jne
or
jne
lcall
imul
les
out
sbb
sub
cmpl
adc
lds
adc
stc
jo
push
fcoms
cmp
cmc
mov
sbb
push
and
fsubs
sub
rclb
pop
outsl
adc
clc
mov
fdivrs
lret
jns
lods
mov
push
mov
repz
pop
mov
cmp
push
adc
lahf
xor
ret
add
test
popf
or
js
out
lahf
adc
arpl
imul
ds
pop
aas
pusha
shrb
cli
mov
testb
push
dec
rorl
xchg
sbb
scas
cmp
das
clc
and
dec
outsl
lock
add
fistps
or
cmp
push
mov
mov
or
ret
rclb
out
dec
sahf
test
mov
or
bts
xchg
push
je
dec
loopne
jp
sbb
or
call
das
shrb
stos
call
mov
xchg
in
xor
outsl
push
mov
inc
cmp
clc
cmp
dec
int3
sub
stos
pop
lea
cmpsl
je
or
cmc
mov
sarb
jle
jmp
push
push
out
daa
cmpsb
movb
test
mov
gs
push
rcll
adcb
and
sub
or
dec
stos
push
jbe
push
in
sbb
hlt
xchg
mov
scas
sub
lcall
jmp
aad
out
mov
test
xchg
adc
loope
sub
pop
push
das
mov
popa
cmp
xorb
cmpsb
mov
mov
adc
test
dec
mov
sbb
popf
push
lock
test
test
mov
mov
add
pusha
or
aas
repz
sub
iret
lock
mov
scas
xchg
std
cmp
fucomi
inc
adc
inc
add
mov
cmp
into
repz
stc
int
ss
adc
adc
js
jmp
inc
lea
push
pop
mov
mov
jg
pop
into
icebp
mov
repz
jo
pop
xor
std
mov
mov
add
pop
jl
in
sbb
stc
dec
mov
movsb
mov
push
loopne
dec
orl
enter
push
sbb
rcll
sarl
enter
or
sarb
stc
stos
lahf
push
jb
jmp
fimull
mov
daa
stos
shll
mov
popa
movsb
or
movsl
in
sbb
pop
lret
sahf
std
lds
and
or
in
jg
daa
pop
xor
insl
mov
out
push
clc
and
sbb
imul
jp
mov
lods
arpl
in
sub
cmpsb
into
test
psllw
mov
push
shl
sub
rorl
fs
add
bound
jnp
jae
aad
jmp
imul
ss
jo
jge
jo
sbb
xor
push
lret
mov
sbb
fnstenv
fistps
lcall
add
and
push
jmp
mov
inc
rorl
mov
and
inc
sub
fs
shll
test
out
filds
jo
cmp
mov
sbb
lds
pop
popa
cmp
cmpsb
pop
mov
cli
xchg
out
pop
gs
pop
lcall
jle
in
inc
mov
std
addl
adc
jne
xor
mov
and
outsb
or
adc
dec
sub
or
xchg
sahf
dec
mov
aas
cli
inc
sub
push
hlt
mov
sub
mov
dec
popa
cwtl
sbb
inc
inc
hlt
dec
in
pop
ret
push
xchg
aaa
cwtl
cmpsb
and
mov
lret
insl
add
mov
cmpl
add
movsb
mov
decb
mov
xor
dec
and
push
push
xchg
les
lret
adc
jae
sbb
idiv
cmp
es
fs
sbb
mov
and
pop
xchg
adc
popl
or
sbb
pop
dec
inc
sti
clc
lds
cmp
notl
hlt
or
lret
pop
aaa
mov
cwtl
mov
lea
jo
ret
jmp
js
dec
jnp
sbb
and
pop
push
loope
shl
cmp
or
mov
sbb
bound
push
repz
das
adc
push
lcall
jecxz
psraw
js
cmp
add
iret
adc
popa
and
rclb
out
data16
gs
xor
and
fwait
js
clc
inc
std
ds
lea
shlb
aas
sbb
out
xchg
out
test
dec
dec
push
rclb
icebp
xor
adc
pushf
lret
jmp
pusha
and
pop
daa
pop
push
sbb
repz
dec
notb
incl
jne
ds
mov
cmp
aam
xchg
int
xchg
mov
mov
sbb
daa
dec
mov
and
movsl
mov
sbb
arpl
dec
push
mov
outsb
rcrl
add
push
cmpsl
adc
mov
ss
push
scas
dec
das
lahf
mov
test
and
jns
push
xor
jnp
push
es
xchg
dec
enter
xchg
inc
sbb
movsl
adc
clc
push
jbe
sti
imul
imul
mov
imulb
jo
clc
mov
and
dec
sub
jle
insl
mov
stc
andb
shrb
push
mov
jne
mov
jle
movsl
inc
adc
sub
test
sub
dec
mov
add
hlt
test
push
jle
sub
sbb
fcompl
clc
pop
dec
sbb
js
leave
js
and
xor
jo
sbb
mov
lods
dec
cmp
xlat
mov
cwtl
mov
into
pusha
scas
push
mov
lods
imul
fsubrl
nop
shrb
ss
inc
push
stos
mov
cmp
or
nop
jbe
aas
adc
jg
lret
movsl
sbb
cmc
cmovs
ret
add
lods
push
jle
cmp
nop
xlat
mov
outsl
pop
scas
xor
jb
mov
pushf
sbb
mov
sbb
cltd
in
push
movsl
mov
cmp
mov
dec
pop
mov
call
dec
or
pushf
pushf
and
loope
or
push
xchg
dec
fwait
xchg
out
mov
repnz
mov
adc
sub
loopne
loopne
mov
shl
add
or
jb
sub
and
aad
shlb
xor
cmpsb
inc
out
lret
cmp
add
jle
inc
out
inc
mov
imul
xor
sahf
lods
xor
and
mov
int
fidivrl
xchg
jmp
xchg
out
cltd
ret
fstpl
mov
jb
xor
or
cmp
out
sbb
shll
xchg
nop
push
sbb
int
movswl
adc
push
adc
xorb
test
sbb
adc
pop
dec
frstor
jae
cmp
ss
aam
inc
jns,pt
push
jle
icebp
pusha
add
mov
mov
ljmp
sbb
in
xor
jmp
jae
lods
jle
clts
push
ret
hlt
inc
inc
repz
push
ds
outsb
push
ja
cltd
dec
dec
inc
cwtl
les
dec
inc
push
pop
pop
jmp
add
cmpsb
and
dec
push
loop
sti
cli
pop
cmp
or
push
std
sub
icebp
in
stos
test
std
fmul
inc
xlat
loop
mov
sub
push
out
push
lcall
mov
dec
xor
fisttpll
fstl
pop
icebp
push
imul
cmp
jge
jo
orl
notb
and
pop
lods
out
xorb
sahf
jmp
addr16
jae
mov
mov
dec
xchg
repz
and
mov
das
and
lret
aad
lret
inc
popf
sbb
mov
sbb
mov
stc
test
inc
mov
jp
xor
add
nop
push
pop
xchg
dec
xor
in
stos
adcl
fistpll
lcall
adc
fs
xor
pop
iret
mov
adc
fwait
ljmp
in
rol
notb
push
and
cli
fnstsw
scas
cmpsl
or
popa
cltd
add
dec
cmp
xchg
sarb
add
mov
rcr
outsl
xor
test
ficoml
sub
mov
add
ja
test
aaa
fiadds
mov
in
xchg
gs
or
xchg
cmpsb
jp
shll
out
mov
xor
cmpsl
iret
ljmp
rcrl
daa
mov
addr16
test
mov
jbe
scas
mov
popa
cmc
add
jnp
btc
adc
mov
scas
cmpsl
push
jbe
or
fnstenv
mov
xchg
ret
popa
jge
imul
into
std
loopne
leave
push
sbb
sub
push
mov
sbb
aas
jge
aam
lock
inc
ss
cmp
enter
sar
popf
mov
lcall
es
dec
stos
jb
or
std
sbb
repnz
sbb
adc
pop
out
cmp
mov
iret
pop
daa
lret
scas
out
insl
and
fcmovb
or
orb
cmpsl
xlat
inc
sbb
or
and
aas
mov
sub
rolb
jns
mov
xchg
cwtl
adc
and
imulb
inc
fld
or
test
call
adc
loopne
movsl
xchg
xor
jl
movsb
cld
int3
int3
pop
jl
sub
pop
fs
shrb
rcrb
icebp
es
loope
rol
dec
add
push
outsl
jle
scas
dec
xlat
jmp
inc
andb
push
leave
sub
push
das
push
lods
cwtl
jne
cmp
jle
arpl
pusha
shlb
jnp
pop
sbb
aam
inc
fldl
cmpsb
or
pusha
jg
daa
push
push
mov
loopne
pushl
lock
jbe
push
fwait
adc
sahf
xchg
push
lea
xor
jmp
fimull
or
jb
fwait
push
test
fistpll
mov
repz
out
fisubl
push
loope
and
orl
add
xchg
mov
add
xchg
xchg
mov
andl
or
test
xor
xchg
jnp
add
out
in
aad
pop
popa
jl
adc
push
pop
push
sub
mov
pop
sub
cmc
or
xchg
or
into
mov
dec
jle
mov
inc
adc
out
xchg
imul
mov
sbb
inc
mov
rcll
sub
bnd
out
sub
mov
push
xlat
int
pop
imul
int3
xchg
jo
and
mov
adc
pop
aad
adc
xor
test
sbb
adc
jecxz
pop
stos
ljmp
lock
sar
sub
cmp
repnz
pop
cmpsb
jl
fcmovnb
dec
das
stos
push
inc
fdivl
and
xor
pop
sub
push
adc
jp
push
movl
xor
mov
out
mov
andb
or
jae
test
pop
mov
sbb
loope
add
or
les
dec
and
nop
subl
jnp
and
lret
dec
jp
loope
push
scas
cs
adc
push
movsb
imul
stc
xchg
mov
jmp
mov
pop
data16
xorb
mov
popa
pop
cmp
jmp
loopne
jo
and
inc
int
aad
sti
cld
mov
sub
mov
sub
add
insb
push
push
add
sarl
xor
jmp
mov
xor
sbb
fdivr
or
lea
mov
fwait
les
sbb
push
dec
repnz
outsl
stc
push
adcb
lahf
mov
xrelease
mov
mov
sbb
insb
push
mov
jnp
jge
fistpll
push
cmp
sbb
test
mov
dec
dec
adc
cli
fadd
in
hlt
jle
dec
jnp
pop
dec
sbb
loopne
jge
rorl
shll
daa
adc
clc
inc
push
add
jae
mov
jg
popf
lods
addr16
sahf
mov
addb
or
mov
push
mov
mov
adc
fdecstp
push
lahf
je
push
push
nop
cmc
jle
push
enter
jl
or
dec
stos
sbb
add
xchg
sbb
dec
xor
outsb
cmp
adc
push
xchg
in
or
sti
cmp
mov
dec
fs
xlat
outsl
xor
and
ss
pushf
nop
push
mov
mov
jne
mov
sbb
fbstp
push
xchg
sub
movsl
push
xchg
mov
push
ljmp
mul
adc
sbb
cli
jno
ds
xor
fwait
inc
xchg
stc
in
inc
test
adc
add
insb
leave
int
mov
sub
addr16
std
jno
mov
shrl
arpl
xor
pop
les
mov
push
pop
arpl
arpl
add
cmpsl
fld
call
inc
dec
test
jae
mov
clc
movsl
movsl
inc
movsb
mov
lret
jmp
xchg
or
test
cmp
fnstsw
add
rclb
add
shl
mov
xchg
xchg
xchg
jae
xor
jge
adc
jae
push
add
orb
int3
push
jge
mov
sbb
cmp
and
adc
lahf
mov
js
les
jo
bndstx
outsb
aas
add
mov
dec
pop
dec
loop
jb
pop
fucom
jle
add
xlat
cmp
hlt
jge
jbe
jle
xchg
add
mov
jno
mov
pop
roll
or
dec
or
push
push
cld
int
stc
cmp
cld
mov
loopne
jg
lahf
fisttpll
mov
or
shrb
or
test
das
dec
popa
sub
add
popf
jne
push
lahf
outsl
push
js
push
mov
pop
pop
imulb
ror
frstor
mov
pop
dec
cld
cs
xchg
leave
in
scas
stos
and
mov
test
mov
rcll
cs
pushf
xchg
paddusb
xchg
cmpsb
push
mov
cmp
imul
insl
ja
mov
dec
dec
push
adc
xlat
xchg
jns
mov
pushf
adc
xor
ret
mov
scas
xchg
sub
jl
pop
mov
xchg
or
xor
hlt
add
jne
jmp
or
aaa
sbb
mov
add
popf
xchg
cmp
nop
in
mov
dec
add
xchg
loop
cmp
sbb
clc
dec
push
dec
push
test
jge
mov
xor
fs
out
xor
stos
dec
jo
movsb
pop
daa
add
test
bound
jb
dec
jbe
mov
jb
xchg
and
notb
fbstp
pop
adc
in
ss
mov
mov
loopne
jns
push
cwtl
adc
insl
test
jg
push
push
rclb
push
hlt
ljmp
mov
negl
dec
dec
dec
movhps
lret
subb
mov
dec
push
fstpt
outsb
sub
lds
adc
adc
aaa
sub
mov
rolb
xor
jg
sahf
xchg
adc
mov
push
xchg
sbb
dec
fs
or
mull
push
xor
adc
addb
ss
test
or
fcom
cmp
ja
xor
movsb
mov
ret
mov
hlt
addr16
loop
popf
cmpsl
add
jmp
sbbb
pop
pop
xor
xchg
jl
pop
push
jle
push
hlt
loop
dec
std
lcall
aas
push
dec
inc
mov
add
sub
push
int
fldcw
loopne
push
sub
xchg
fcomps
repz
or
lahf
cmc
sbb
and
jge
gs
mov
sub
adc
inc
fdivrl
mov
xor
mov
sti
pop
lods
cmp
shlb
das
sbb
push
aad
imull
call
or
loopne
cmpsl
dec
inc
iret
mov
fwait
dec
mov
test
cld
push
push
roll
mov
adc
jle
dec
aaa
dec
jnp
inc
ja
in
fimuls
cmpsl
lcall
mov
imul
and
dec
lods
stos
jo
inc
mov
xor
inc
push
cmp
dec
outsl
cltd
jg
xor
outsl
push
dec
cmp
mov
cmp
inc
aaa
repz
out
mov
push
cmp
push
or
pop
ds
jmp
cmpsl
stos
dec
fldcw
jg
fidivrl
jge
inc
lret
adc
jno
mov
sub
pop
lock
shll
mov
pop
push
rol
push
inc
lret
into
mov
bound
push
adc
negl
push
add
inc
out
lods
cs
sbb
push
push
out
push
andb
lea
sbb
mov
loope
jae
inc
sbbl
or
fistps
gs
stos
adc
fnsave
jns
mov
std
inc
sbb
sbb
iret
push
pop
outsb
mov
or
mov
test
pop
mov
ljmp
jno
inc
push
jl
xlat
mov
in
adc
mov
adc
es
mov
fldcw
mov
mov
mov
mov
in
test
arpl
test
repnz
cli
push
fdivs
add
dec
std
outsb
mov
lds
rorb
pop
sub
adc
mov
xor
cmp
insb
out
imul
adc
xchg
jbe
xchg
adc
pop
insl
test
inc
sti
pushf
leave
xor
xor
lahf
xchg
fs
fildl
push
mov
fistpll
mov
mov
in
out
jp
jmp
popa
adcl
negb
mov
and
or
pop
insb
jb
push
cli
psllq
jbe
das
mov
xchg
add
adc
movsl
cli
lods
int3
daa
cmpsl
xchg
and
addr16
adc
dec
js
mov
fmull
mov
clc
sub
rclb
xor
dec
cmpl
fidivrs
jecxz
ds
ss
add
popl
dec
mov
xor
sbb
mov
cmp
sub
jno
add
fisubrl
shrl
inc
loope
adc
lock
sbb
xor
sahf
pushf
js
jp
ds
mov
push
das
fisubl
dec
test
out
push
inc
jp
pop
xchg
cs
inc
sub
js
mov
pop
push
dec
jle
mov
xor
push
mov
xor
inc
ficompl
cmpsb
inc
mov
iret
stos
fdivp
in
mov
dec
xchg
xor
push
or
or
ret
jecxz
mov
stc
and
pop
ror
sbb
pop
loop
cmp
ss
sbb
push
int
push
push
jne
subb
mov
cwtl
push
jo
adc
push
push
jo
jae
cmp
pop
push
cmc
sub
push
xor
nop
add
sub
sub
jb
push
clc
push
mov
add
popa
notb
fmul
andl
int3
lods
pop
jg
call
lea
adcl
mov
jb
pop
out
sbb
es
xchg
inc
ja
cmp
mov
dec
fcoms
leave
rcll
mov
dec
fistpl
rcrl
xor
mov
loopne
pop
fs
rcll
lret
jg
in
cmpsb
jb
nop
jbe
mov
aaa
add
lock
insb
add
xchg
xchg
pusha
jl
xor
iret
xor
jae
sbb
xor
mov
mov
pop
outsl
out
add
pop
jl
add
cmpsb
mov
mov
lret
sbb
mov
adc
inc
pop
mov
and
ret
push
xlat
nop
mov
pushf
inc
mov
in
cmp
dec
mov
scas
add
stos
cltd
push
push
imul
mov
inc
aaa
lret
jne
movsb
mov
push
mov
rclb
mov
mov
pop
mov
add
push
int3
xchg
xor
into
test
jle
add
add
sub
repz
push
xor
pop
daa
add
shr
and
cmpsl
ret
pop
push
lahf
xchg
xchg
sbb
in
jae
cmpsl
inc
cs
jo
jge
push
lahf
mov
or
jne
add
mov
jnp
dec
xor
pop
decb
dec
repz
fisubs
in
js
mov
cltd
jae
aaa
dec
mov
xor
pop
push
and
sti
mov
pop
or
cs
imul
push
out
loope
push
dec
mov
sbb
xchg
test
pushf
hlt
mov
xor
inc
pop
pop
sub
jl
sub
fisubrl
setns
mov
xor
jp
jge
ds
inc
out
hlt
test
mov
mov
sub
scas
fucom
mov
inc
push
dec
or
or
sub
push
xchg
pop
mov
cmp
cmp
mov
sbb
aad
or
les
mov
sub
rorb
push
mov
js
jno
pop
jo
inc
ret
repz
mov
aaa
pop
fistl
stc
ja
and
movsb
pop
jl
dec
jbe
dec
add
push
and
outsb
xor
xchg
jl
lret
push
stos
mov
cmpsl
or
push
pop
pop
test
aaa
mov
iret
movsb
and
in
aad
mov
pushf
fwait
jae
repnz
enter
xchg
divl
sbbb
push
mov
lahf
pushf
sbb
add
pop
popf
fs
pop
jmp
pop
scas
test
ja
pushf
ljmp
sub
enter
pop
cltd
rclb
mov
enter
jmp
push
push
cmp
adc
mov
add
iret
dec
mov
test
insl
ss
into
jle
icebp
lock
inc
pop
cmp
in
fsubrs
pop
mov
das
subb
test
add
loopne
or
rolb
mov
xchg
hlt
fisubl
add
mov
popf
xor
setae
inc
jbe
out
jnp
dec
fiaddl
xchg
jge
outsb
daa
xchg
mov
jb
ficompl
movsl
int3
or
or
sub
test
movsb
rcll
lea
outsb
mov
pop
enter
stos
mov
inc
insl
cwtl
mov
sub
ret
in
push
cmp
sbb
test
rol
add
aam
jb
leave
add
into
dec
adc
clc
arpl
lahf
ret
adc
mov
aas
and
cltd
sbb
push
aas
addb
mov
das
loopne
jnp
mov
add
fucomip
or
adc
xchg
pop
xor
stc
in
hlt
cli
or
add
mov
mov
imul
mov
test
in
push
test
pop
sub
das
pop
xchg
insl
push
into
fimull
xlat
popa
loop
outsb
out
xchg
sbb
movsb
cli
add
shl
popf
inc
orb
aaa
pop
ds
jno
in
xchg
rol
mov
jb
mov
pop
adc
lahf
jno
xorl
xchg
data16
lods
cwtl
add
sbb
jno
pop
out
mov
repnz
jno,pn
sbb
pop
push
and
loopne
pop
mov
inc
cli
movsl
sub
mov
mov
dec
popa
xchg
mov
fwait
mov
pop
shll
pop
adcb
stc
mov
cltd
jg
repz
mov
cli
xchg
cwtl
mov
xlat
pop
fs
sub
mov
mov
jns
mov
xor
mov
add
mov
mov
leave
subb
mov
movl
subb
pop
dec
icebp
lcall
imul
jg
shl
sbb
mov
incb
imul
mov
icebp
push
les
aaa
sub
out
dec
testb
and
scas
mov
pop
pop
push
shll
mov
andb
add
fisttps
mov
add
adc
adc
lock
out
dec
pop
add
addr16
rorb
out
cmp
mov
mov
stc
push
or
pop
sub
pop
packssdw
ljmp
pop
xor
addb
pop
movsl
cmp
call
fiaddl
jae
xor
or
sbb
push
repnz
jb
nop
mov
std
test
scas
ds
adc
jp
out
gs
out
pop
xchg
sbb
jmp
jo
ds
xorl
dec
cmp
and
jmp
repnz
in
inc
cld
popw
sub
imul
xchg
cltd
filds
cmpsl
xor
and
xor
mov
cmc
outsb
mov
pop
insb
mov
fsubrs
xchg
pop
or
lock
out
sbbl
aaa
cmpsb
pop
xor
dec
and
mov
inc
inc
mov
xchg
or
push
xchg
mov
cwtl
sub
xor
or
dec
and
std
in
dec
outsl
push
cmp
imul
mov
adc
push
in
ret
cmp
dec
test
scas
push
cld
inc
repnz
das
pop
and
in
or
movsb
sub
fwait
xchg
cmc
fimull
jne
outsl
jmp
push
lock
popf
mov
jae
sub
mov
mov
repz
pushf
mov
mov
insl
jnp
sub
addb
dec
enter
push
push
aaa
enter
add
or
add
mov
sbb
cltd
lods
cmp
cmpsl
cmpsl
shll
rclb
jae
addl
jl
test
or
hlt
aaa
sub
arpl
xchg
das
in
jnp
pop
fstl
pop
pop
cmp
lret
out
pop
xor
ret
mov
data16
ljmp
jl
hlt
fstps
dec
lock
mov
push
pop
xor
mov
rorl
mov
pusha
sub
out
stos
pusha
test
pop
out
lcall
cmp
mov
mov
or
sub
shrl
aam
push
ret
cltd
pushl
mov
cmp
pop
inc
pushf
test
mov
jnp
sub
aaa
cld
mov
xchg
jne
sub
mov
ljmp
movsl
mov
imull
jle
in
xchg
data16
mov
pop
mov
push
icebp
sub
mov
fcmovnu
mov
lds
data16
dec
ja
outsb
add
jg
push
mov
or
add
jmp
mov
inc
fdivl
adc
cmc
data16
negb
mov
outsl
dec
enter
fidivl
sbbl
push
je
xchg
or
mov
lea
dec
lret
push
cmpsb
fisubl
adc
adc
xchg
mov
gs
fldenv
xchg
dec
addr16
hlt
iret
mov
cmovg
and
outsb
xchg
pusha
mov
addr16
inc
loop
mov
push
fnstcw
pop
dec
and
fdiv
pop
jne
adc
les
pop
add
rol
pop
mov
add
cwtl
and
mov
mov
push
outsl
es
stos
xor
dec
jae
bnd
popf
pop
repnz
mov
add
lret
pop
sbb
add
imul
sub
js
sbb
scas
push
inc
xor
ret
dec
rclb
cmp
mov
and
lock
sub
data16
pushf
cmpsb
fs
mov
popf
ret
clc
sti
xor
push
fistl
cmp
call
loop
pop
pop
xlat
nop
mov
adc
pop
jl
adc
ss
xchg
lods
ljmp
arpl
sub
dec
dec
pop
lods
pop
push
inc
xlat
sub
push
push
in
xor
mov
jle
nop
popf
clc
ss
jnp
cmc
mov
call
dec
cs
repz
pop
and
cmp
jp
jle
pop
repnz
mov
adc
dec
and
pusha
icebp
orl
jae
test
xchg
xchg
incb
push
sub
mov
in
inc
std
cmp
popf
cmp
inc
les
mov
lock
and
pop
mov
xor
or
mov
das
pop
cmpsl
out
jns
sti
or
xchg
and
push
add
fstp
ret
aam
pusha
pop
pushf
add
push
inc
fists
mov
mov
add
aad
mov
jmp
rcrb
and
push
pushf
and
ds
lret
xor
inc
lret
and
ss
fninit
subb
gs
imul
mov
sti
call
adc
fiadds
xor
or
pushf
mov
jl
leave
loop
sahf
jno
jg
icebp
mov
mov
pop
daa
pop
mov
test
or
jb
jne
ret
inc
sub
and
mov
xlat
or
ficoml
inc
pop
add
pop
clc
out
xchg
cmp
pop
or
inc
add
loopne
adc
lret
mov
xor
out
jmp
and
call
imul
out
sub
ss
pop
fidivrl
jle
inc
pop
xchg
mov
xor
mov
mov
xlat
or
push
push
cmp
dec
frstor
in
lods
sub
or
fs
repz
inc
jae
ret
xchg
aaa
add
push
xchg
leave
call
pushf
inc
ss
lret
jl
push
imul
and
loop
or
sub
arpl
mov
dec
jne
mov
adcb
mov
cmpsl
daa
sahf
lret
adc
adc
inc
cli
adc
outsb
and
sbb
scas
loopne
fstl
js
lods
xorps
inc
test
cmc
in
sub
cmp
mov
pop
pop
xchg
outsb
adc
arpl
in
mov
pop
setnp
or
cmp
pop
js
mov
js
adc
inc
jne
andb
hlt
orl
test
insl
sub
and
test
pop
push
movsb
sub
out
lret
inc
pop
inc
hlt
mov
jo
ljmp
or
cmp
xorl
adc
out
jne
ficoml
inc
pusha
cwtl
movsl
loopne
adc
mov
imul
rcll
inc
mov
cmc
mov
mov
stos
clc
xchg
shlb
call
xlat
test
sbb
repnz
ficompl
test
jmp
mov
insl
fnstcw
daa
arpl
and
ja
xchg
das
sbbl
popa
dec
in
insb
adc
xchg
lcall
pop
jge
cltd
sub
hlt
outsl
sbb
or
jecxz
mov
call
aad
fdivrl
dec
xor
sub
popa
aas
lock
decl
jg
jmp
xchg
dec
mov
xchg
outsb
loop
add
loope
add
scas
fldt
xchg
fstps
icebp
mov
in
addr16
mov
out
dec
fimull
xchg
cmp
int3
pushf
lods
pop
gs
push
and
repnz
jge
flds
sub
mov
sbb
lds
das
cmp
lcall
jbe
xchg
dec
bound
xor
mov
cli
mov
out
rcl
data16
adc
mov
mov
push
setle
lea
mul
xlat
sub
xorb
sti
enter
xchg
push
jno
mov
mov
mov
pop
add
xchg
test
inc
loope
dec
pop
mov
mov
xchg
imul
cwtl
js
sub
jl
cmc
xchg
add
and
dec
lret
and
mov
jp
punpckhdq
jbe
movsb
sbb
mov
add
mov
sahf
jnp
int
insl
mov
push
pop
out
out
and
inc
inc
jp
scas
dec
xchg
inc
cltd
in
ja
push
cltd
outsb
mov
xchg
outsb
shlb
sub
jnp
or
pop
pop
rorl
and
fldt
lahf
outsl
sti
and
dec
and
mov
ds
repz
push
mov
not
sub
enter
jno
and
movb
sub
movsb
pusha
cmp
sbb
arpl
sarb
aas
bound
cmc
inc
xor
ret
fsubrs
iret
out
inc
push
push
or
aas
movsb
pop
jle
and
sbb
jae
sub
data16
sub
add
cmp
or
pop
add
jg
jg
adcb
stc
xchg
jge
imul
adc
pushf
mov
xchg
fwait
fs
xor
rolb
add
push
movsb
mov
and
pop
xchg
popf
mov
and
repz
sub
xlat
js
js
jle
andb
mov
inc
sbb
out
jae
sbb
ss
jmp
fnstenv
jbe
push
xor
push
jbe
cmp
aas
stc
ret
pop
js
jbe
cmc
or
pop
xor
and
movsb
es
int
fs
inc
push
mov
out
syscall
mov
sysexit
add
inc
mov
dec
or
aam
aad
cmp
outsb
sub
xchg
mov
fcompl
lds
pop
ljmp
in
data16
jge
imul
stc
mov
ret
fsubrp
push
push
pop
mov
lret
mov
loop
mov
push
adc
sub
sbb
das
jnp
fnstcw
sub
data16
push
xor
dec
imul
iret
rol
mov
sbb
jp
add
and
mov
jo
jo
and
mov
sbbl
aas
mov
les
sbb
mov
pushf
mov
out
xchg
sub
outsl
inc
movsl
les
jb
repnz
pop
cmp
mov
jl
inc
adc
push
push
jo
add
shll
das
pop
or
imul
clc
and
inc
mov
cmp
ret
adc
pop
shlb
fsubl
xchg
cwtl
pushf
cltd
or
ret
pop
or
add
mov
dec
mov
ds
fsubrs
and
jle
test
fst
jne
cltd
xor
cs
fisubrs
out
outsb
or
dec
nop
push
out
lret
jns
cs
sub
imul
xor
leave
cmp
push
jno
pop
enter
rolb
adc
mov
dec
sahf
pusha
lcall
inc
sbb
inc
pusha
in
aam
cmp
std
addb
sbb
push
je
int
cltd
sahf
out
mov
out
insb
in
dec
test
ja
ljmp
jmp
lds
in
xchg
jl
mov
lea
je
mov
sbb
ljmp
cmpsl
std
inc
andb
aad
test
jo
shl
dec
xor
out
mov
inc
mov
mov
aas
sbb
push
xchg
js
xlat
jl
jo
xchg
fmulp
cltd
ret
rorb
or
loopne
dec
inc
das
xlat
mov
rcl
push
divb
test
imul
push
jns
out
xchg
sub
jl
scas
fmull
ja
je
or
inc
jns
dec
push
inc
jbe
pop
out
in
ret
insl
stc
dec
mov
push
cltd
inc
cs
and
lods
out
mov
pop
shrb
frstor
jno
popa
mov
rcrl
bound
cmp
imul
inc
or
mov
pop
and
hlt
xor
in
xchg
aam
cwtl
clc
pop
push
xchg
mov
jle
cwtl
pop
jecxz
scas
sbb
int
outsb
mov
mov
aas
mov
and
roll
rol
ret
fcomps
mov
jb
gs
and
cmp
cmp
jbe
pop
fwait
dec
lock
xchg
arpl
arpl
and
aad
lods
adc
bound
pop
dec
sub
pop
out
ja
dec
stos
out
xchg
pop
nop
cmpsl
sar
mov
inc
push
mov
push
ljmp
sbb
push
sahf
mov
sbb
into
sbb
mov
cmpsb
dec
push
stos
ds
in
push
add
cmpsb
mov
aam
mov
cmp
inc
or
movl
fs
mov
addl
mov
mov
or
mov
leave
inc
test
xor
inc
in
jle
or
dec
push
stos
cmp
push
adc
pop
adc
lret
sbb
dec
insl
call
mov
sbbl
adc
or
xchg
roll
mov
stos
dec
dec
mov
push
ljmp
mov
jne
fcoms
xchg
arpl
cmpsb
aaa
jmp
xchg
call
negb
push
jmp
fnstsw
dec
inc
stos
std
push
and
popf
jae
fcomps
jmp
xchg
stos
stc
nop
push
inc
pusha
hlt
int
popf
sub
push
subb
jg
call
iret
pop
pop
add
cmp
mov
jg
std
cmp
inc
clc
adc
out
call
jnp
ss
push
not
divl
xchg
lock
push
mov
icebp
lret
push
mov
out
in
cli
pop
mov
loop
in
and
leave
fcompl
cli
ucomiss
or
lea
sti
aaa
imul
hlt
lcall
out
loopne
push
and
mov
push
int
cs
lret
mov
fdivl
mov
lock
xchg
or
pop
cwtl
jno
fs
mov
jnp
daa
push
and
pop
jge
shll
lods
sub
movl
xchg
fxtract
adc
jge
int3
mov
ss
popa
roll
leave
mov
lret
jg
adc
push
leave
push
movl
movsl
jle
shll
dec
daa
sarl
mov
mov
cmp
push
cld
dec
jle
add
test
lock
pop
adc
inc
fs
mov
inc
popa
push
adc
imulb
xor
repz
nop
lock
gs
movsl
cld
jp
aam
insl
or
repz
imul
sbb
push
sub
bound
outsb
inc
jle
sbb
imul
cmpsl
or
loop
aaa
arpl
scas
ss
addb
add
cmpsb
dec
mov
je
sbb
ja
mov
and
addr16
sahf
pop
inc
sahf
dec
idiv
pop
loopne
lret
mov
mov
sub
sub
and
ret
aaa
mov
insb
cmpsb
cmp
mov
and
ret
fmul
cmpsb
mov
out
lds
lahf
cmp
lret
gs
jecxz
out
pusha
lahf
inc
repz
stos
dec
push
push
popf
loope
nop
pop
xor
and
mov
lahf
scas
fstpt
mov
jl
mov
pusha
push
xor
out
insb
insb
adc
jle
scas
in
adc
sarl
dec
add
repnz
cmc
mov
and
aad
addl
push
rcrl
adc
or
std
push
ret
push
fsub
lcall
cmp
fstpt
lcall
xchg
xor
loop,pt
sarb
xor
repz
inc
pop
loope
not
in
inc
iret
push
out
std
sbb
int
inc
mov
cmpsb
das
jne
mov
sbb
or
jle
inc
nop
movsb
dec
cmp
cmp
and
cltd
or
sbb
addr16
sbb
cmp
int
bound
lret
fdiv
add
jp
pop
pop
inc
add
rorw
das
pop
pop
fildl
and
clc
ret
push
xor
in
out
mov
in
fcmovu
insl
pop
repz
xor
in
mov
jne
lock
shlb
repz
cld
in
inc
test
ja
in
test
push
lret
mov
jl
add
push
icebp
mov
and
mov
dec
cmpb
pop
xchg
add
xchg
xlat
call
cmp
stc
adc
hlt
and
ror
mov
adc
aas
push
fbstp
pop
mov
mov
outsb
imul
hlt
lea
push
inc
dec
scas
sbb
shlb
mov
or
fidivl
fimuls
fimull
mov
dec
in
push
push
mov
and
movb
or
mov
leave
sub
pop
sub
sub
cmp
fmull
pusha
pop
in
imul
ds
mov
daa
push
mov
push
and
mov
scas
lahf
iret
outsl
jg
or
stos
std
adc
inc
arpl
mov
fs
out
sub
das
mov
dec
adc
add
cld
popa
xchg
insl
fwait
sti
sub
daa
out
aad
push
sbb
inc
inc
sub
loope
add
cmp
pop
scas
sub
jp
pop
pop
dec
push
inc
cmp
ljmp
outsb
hlt
mov
movsl
inc
scas
ret
mov
lds
cld
dec
add
or
dec
imul
adc
dec
jl
gs
fwait
jbe
cmpsl
and
or
adc
adc
and
sub
push
clc
pop
xor
push
cmp
jmp
dec
into
fcmove
jae
fstps
mov
dec
or
rorl
rorl
jg
leave
jbe
cli
add
add
ret
add
inc
cmpsl
add
lock
sti
lds
mov
push
fstl
add
pushf
ljmp
stos
pop
scas
dec
pop
pop
pop
jle
push
fisubl
test
ds
jo
xchg
lds
or
xchg
add
divl
pextrw
outsl
fidivrs
ffree
lret
hlt
pop
adc
mov
decb
sub
je
dec
mov
adc
popf
std
mov
xchg
sbb
xor
pop
jp
and
dec
inc
push
adc
loopne
test
sub
cld
cltd
push
loope
fs
arpl
scas
sub
cmp
lret
outsb
fadd
jb
jae
fsub
xor
or
fcmovu
outsb
cmp
push
inc
pop
xchg
das
push
mov
popf
bound
lods
enter
insl
lret
fildll
pop
dec
pop
sub
cli
jno
and
mov
cmp
js
stc
and
sub
and
int3
xor
jmp
pop
jb
jle
loope
jo
cmp
push
xchg
jnp
mov
inc
sub
xchg
enter
aas
into
fisttpll
mov
mov
outsb
outsl
nop
dec
pop
clc
ret
mov
dec
fdivr
pop
imul
xchg
jae
scas
icebp
cmp
dec
push
xor
xchg
mov
mov
lods
sbb
out
in
repz
xlat
inc
sbb
repnz
push
xlat
or
ffreep
push
or
xchg
test
test
je
push
ret
adc
fisubl
cmp
ljmp
mov
loopne
adc
cli
lahf
lcall
or
add
add
cmp
inc
and
repz
pop
lret
sub
popf
into
rorb
std
or
repnz
pop
lods
jae
test
repnz
rorl
ja
push
pop
cltd
push
mov
cli
mov
dec
cmp
adc
fisubl
pop
shll
shlb
push
fildl
and
sbb
loop
inc
lods
jge
add
mov
xchg
mov
add
jo
cmp
push
lahf
rclb
sub
arpl
cs
fucom
jns
int
popa
lods
push
sbb
mov
xlat
dec
adc
adc
enter
push
lcall
pop
rcrl
mov
and
notl
or
jae
test
push
orb
sbb
jmp
mov
cmpb
add
imul
test
out
mov
push
aas
scas
es
aas
pop
fdivl
test
std
push
or
lock
dec
iret
test
cltd
cmp
test
data16
movsl
mov
push
std
fisubrl
jo
insb
xchg
in
jns
arpl
push
jge
and
jge
js
xchg
push
mov
jns
lea
lods
xorl
mov
nop
notl
cmp
leave
lret
js
cs
xchg
imul
fdiv
mov
jg
test
shrl
xor
inc
mov
enter
or
pop
shr
add
popa
insb
mov
pop
cs
push
pop
repnz
int
je
push
test
out
shll
ret
and
push
jle
add
or
mov
sbb
sub
dec
push
negb
mov
cmp
popa
push
mov
mov
mov
pop
aaa
int3
jecxz
or
pushf
inc
nop
inc
inc
sti
push
jns
pop
test
mov
jno
xchg
or
xor
in
lods
sbb
xor
popa
fnsave
mov
call
pop
and
cli
cmp
es
mov
fisttpll
call
adc
mov
mov
xor
mov
in
movsl
mov
xchg
adc
jg
jb
gs
cmp
mov
dec
dec
and
mov
adc
das
stos
adc
sub
fnstenv
pop
xchg
xchg
les
mov
xor
xor
and
out
jle
mov
daa
inc
imul
mov
lret
xchg
mov
pop
pop
dec
arpl
scas
pushf
sbb
mov
inc
lcall
cmp
xlat
push
rcr
xchg
mov
and
jp
pop
pop
mov
scas
or
and
nop
cmp
aad
sbb
mov
popa
pop
insb
pushf
adc
leave
into
sbb
cmp
in
add
adc
stc
divb
aaa
inc
aam
mov
xchg
outsb
mov
and
adc
mov
sti
mov
adc
dec
jbe
ss
in
sub
cs
aam
lcall
xchg
pop
loopne
in
clc
inc
add
sbb
addr16
jnp
and
roll
fcoml
mov
mov
xchg
mov
adc
cmp
into
push
rorl
push
mov
hlt
sub
rcrl
cltd
int3
dec
xchg
dec
lods
into
xchg
sbb
add
inc
pusha
roll
cli
jnp
pop
call
push
lcallw
fdivs
push
loop
mov
pop
mov
pop
stos
mov
cmpsb
scas
sub
sbbl
cs
loope
loop
mov
ja
insl
dec
sbb
push
jo
xlat
mov
or
loopne
shrd
cmp
insl
ljmp
addr16
jmp
inc
push
or
aam
inc
mov
adc
jno
dec
std
or
dec
sub
fmul
fucomi
in
add
cmp
iret
cld
mov
or
inc
mov
and
fldenv
movsb
dec
push
popf
push
shrl
cli
and
xchg
jg
mov
imul
add
aas
fsubrs
stos
cli
addr16
je
and
add
mov
xchg
arpl
or
cmpsb
xor
mov
ja
inc
or
jle
and
das
mov
sarb
mov
out
outsl
mov
and
lods
ret
sahf
fdivl
std
leave
cmp
dec
aam
sbb
push
push
shrb
push
test
adcb
sbb
fistps
popf
sahf
cmp
mov
dec
mov
inc
ds
pop
inc
lahf
pop
mov
cmp
hlt
pop
and
scas
out
jae
xor
imul
mov
fistl
jg
jl
xor
mov
cmp
enter
sub
xchg
mov
jp
jae
mov
jp
pop
mov
cmovb
lds
call
or
mov
aam
test
into
int3
xor
dec
adc
leave
adc
ss
pop
jp
cmp
lcall
daa
push
add
jmp
inc
jle
push
filds
mov
push
mov
movsb
jp
push
xchg
fwait
cmp
mov
cmp
mov
push
sbb
out
cmpsl
xlat
popa
shrl
iret
orb
lea
inc
cmp
imul
or
pop
jmp
sbb
pop
pop
es
sub
loop
stc
aas
push
into
add
sub
dec
add
int
mov
pop
das
stos
subb
fcmovb
xor
insl
pop
pop
lds
jo
out
add
jmp
mov
sahf
sti
test
icebp
das
xchg
mov
lret
test
xchg
push
aam
push
jb,pt
cld
cmp
push
imul
sub
jno
popa
pop
xchg
mov
mov
xchg
xor
push
ss
ficoms
lock
out
jo
mov
mov
sub
stc
pop
fsubp
mov
pop
push
lcall
sarb
push
sbb
int
popa
movsl
xlat
dec
cmpsl
add
xchg
sbb
jecxz
mov
fdivr
outsl
mov
fcoms
jbe
loop
loop
fcoms
imul
jp
and
mov
dec
inc
data16
mov
xor
in
jle
and
mov
dec
fwait
push
lock
insl
mov
cmp
movsl
dec
mov
mov
test
add
pushf
ret
push
shrl
lock
push
xchg
sbb
jo
dec
lcall
push
stos
aad
push
xchg
push
out
cmp
cs
hlt
mov
mov
sbb
xchg
pop
inc
sti
sbbb
icebp
rolb
jmp
add
repnz
pop
aaa
fsub
stos
int
int
mov
bound
and
add
inc
repz
inc
lret
dec
push
fstpl
cmc
mov
loop
push
fwait
xor
les
pop
pop
mov
jnp
sbbb
mov
push
mov
sbb
iret
xchg
mov
pop
jae
pop
loopnew
mov
pop
pop
sub
jg
inc
fnstsw
out
mov
add
lret
in
bound
out
mov
hlt
add
lea
push
ds
fwait
dec
leave
insb
addl
push
jns
cmp
or
pop
cmpsl
imul
nop
xchg
inc
cmp
mov
dec
pop
mov
lret
cltd
cmpb
in
and
cmp
dec
mov
jle
fisubs
inc
inc
jno
movsb
sbb
mov
stos
or
ret
mov
mov
lret
filds
popf
pop
sub
cli
add
xor
mov
stos
mov
les
jge
lahf
les
imul
jmp
outsl
cwtl
lcall
cmp
and
mov
ret
insl
pusha
cmp
fwait
cmc
pusha
data16
sub
aad
add
xor
mov
pop
xor
inc
sub
aam
je
pop
fwait
mov
rorb
out
mov
sbb
int3
cmp
lock
mov
mov
out
mov
int3
xor
jnp
cwtl
movsl
and
ret
push
gs
jnp
mov
fsubr
loopne
and
jb
pushf
enter
pop
cmc
imul
push
aas
je
int3
sbb
sbb
jb
leave
clc
rolb
cmp
inc
sarl
push
and
fs
mov
fists
adc
jmp
sub
push
mov
loopne
repz
and
stos
inc
jge
pop
sub
fcomip
fldl
fmuls
jg
cli
pop
jecxz
pusha
xor
or
jmp
sbb
int
adc
push
add
or
call
and
ljmp
cmp
int3
cmp
xchg
sbb
shlb
mov
add
fsubl
sti
mov
outsb
das
or
loope
inc
xchg
cwtl
and
add
movsb
mul
sbb
jl
jnp
fisttpll
xor
dec
mov
cmpsb
aaa
pop
sub
gs
xchg
pop
stc
shll
xchg
unpcklps
adc
mov
jno
imul
push
inc
sbb
lcall
out
xchg
pop
daa
pusha
add
in
pop
fbstp
mulb
out
mov
fwait
gs
or
sahf
gs
mov
in
shr
jb
out
gs
loop
insl
jb
cwtl
jecxz
dec
out
mov
fcompp
inc
dec
push
cli
test
test
shll
rorb
into
cmc
loop
pop
outsb
pushf
xor
scas
push
imul
and
push
adc
jno
push
adc
sub
push
aaa
cmp
shl
dec
sub
sub
incl
jl
mov
pop
bound
pop
jmp
test
inc
repnz
into
and
xchg
call
pop
push
call
and
sbb
loopne
sbb
rorb
subb
es
sub
push
imul
test
aaa
sbb
dec
lret
nop
sbb
sbb
movsl
js
inc
mov
test
sahf
pop
aad
stos
test
andb
es
jecxz
ret
inc
mov
stos
nop
adc
in
stos
lret
mov
push
jp
mov
inc
dec
cltd
xor
push
or
pusha
insb
cmpsl
int3
jl
repz
and
je
movsl
cmp
mov
loope
push
shrb
mov
sub
mov
fstps
or
aad
mov
inc
scas
xlat
ss
lods
xor
mov
sbb
dec
jge
xor
imul
bound
sbb
sbb
cmp
lods
es
cld
dec
inc
fwait
adcl
stos
pop
or
outsl
mov
or
repnz
adc
idivb
push
adc
mov
adc
xchg
roll
push
fmull
and
hlt
iret
je
testb
sahf
mov
rorl
xor
cld
in
pop
call
xor
adc
pop
scas
out
or
out
jns
fadds
lea
insb
pusha
cli
aad
cli
inc
inc
stos
pop
jo
mov
sbb
loope
xor
mov
leave
add
pop
or
push
test
dec
push
dec
fistpl
jmp
inc
shufps
mov
sub
insb
test
jp
int
repz
mov
gs
je
scas
push
dec
push
into
repz
movsb
lock
add
sbb
add
push
hlt
sub
nop
ss
sbb
aaa
or
imulb
mov
push
adc
or
aad
dec
push
stc
xchg
fs
iret
cmp
rcll
lret
inc
and
xchg
scas
jecxz
xlat
or
push
jns
cltd
push
dec
mov
ljmp
xor
inc
push
push
inc
cmpsb
arpl
ljmp
sbb
lret
push
orl
jns
jmp
fwait
jecxz
lds
cmc
loop
or
int3
or
insl
addb
push
and
push
lret
push
in
add
out
mov
or
out
repz
gs
mov
test
loope
jo
outsl
adc
jg
pop
xchg
fbstp
and
and
fwait
pop
mov
cmp
les
cmpsl
inc
movl
testl
dec
aad
mov
lcall
repz
push
arpl
lahf
ficoml
aaa
mov
scas
mov
ds
mov
sbb
imul
adc
xchg
out
nop
cmp
cld
cmp
fnstcw
jp
sbb
pushf
jae
aad
ljmp
cmp
and
and
add
ret
out
push
fscale
lds
insb
sbb
test
leave
aad
sbb
cld
gs
cld
or
lds
sub
sub
dec
mov
shlb
insb
fstpl
xor
mov
cmp
loopne
cmp
add
push
sbb
dec
aam
ffreep
stos
xchg
mov
sbb
and
add
xchg
cmp
hlt
xor
ror
pop
dec
push
push
xor
pop
cmp
mov
xchg
stc
imul
pop
int3
push
mov
add
mov
mov
cmp
xor
cmp
lock
and
and
jb
push
fs
xchg
cmc
out
mov
repz
ficomps
pop
push
lods
fmul
js
sbb
mov
adc
jmp
sbb
dec
mov
js
mov
xor
push
xlat
cmp
push
dec
addr16
push
test
inc
push
repnz
outsl
push
pop
fwait
std
cmc
out
addb
and
rcr
jb
imul
shrl
or
push
xchg
jae
mov
lcall
mov
je
and
cmp
or
sub
pop
es
rclb
icebp
xchg
popa
xor
lea
sub
push
inc
jno
pop
push
jbe
rol
cmc
enter
jo
mov
jo
repz
popa
test
test
inc
mov
pop
mov
and
iret
and
bound
jle
xor
xchg
testb
dec
cmp
pushf
xchg
or
jle
movsl
mov
or
mov
movsl
aas
hlt
push
mov
lahf
popf
pop
aaa
mov
xchg
ss
dec
jne
insb
inc
mov
gs
add
xchg
jo
push
mov
ss
mov
call
pop
lds
and
mov
add
add
push
and
outsl
or
movsb
imul
pop
jnp
cmpsl
ret
das
rcrl
fistpl
adc
imul
inc
jbe
sub
inc
pop
mov
mov
int
lds
rorl
cmc
sub
shll
adc
xor
fdiv
push
mov
jle
call
repnz
push
idivl
fdiv
cmp
stos
pop
jge
push
cmp
pop
and
pop
push
push
push
mov
adc
test
adc
popf
add
xchg
mov
cmp
pop
fwait
cs
sub
jae
testb
out
repnz
mov
or
rclb
les
mov
cmpsl
shrl
adc
inc
popf
icebp
inc
inc
push
sbbl
mov
or
fldenv
loopne
sbb
test
xchg
pop
lods
shufps
mov
rorb
cmp
iret
push
lods
test
pusha
pop
xchg
out
mov
pushl
or
popa
divb
xchg
dec
fcmovb
popa
and
lsl
xchg
imul
dec
or
js
mov
xchg
rclb
andb
fs
jp
sub
cli
movsb
cmc
movsl
fdivl
int3
adc
or
aam
add
or
clc
xchg
mov
mov
sbb
jge
nop
jmp
lret
inc
into
fimuls
shrl
movsb
xchg
xor
int3
sbb
fcompl
xor
xor
repz
lahf
fildll
xchg
addr16
lahf
sub
data16
fadds
mov
shl
mov
idivb
loopne
xlat
lcall
cmp
lods
nop
jle
ss
inc
inc
jno
cld
leave
jnp
xor
xor
lock
and
and
outsb
lods
sti
adc
mov
aaa
or
adc
push
adc
fldl
add
xchg
loopne
add
clc
lock
bound
in
cmp
and
add
dec
pop
sbbl
push
rorb
or
movb
inc
test
mov
xlat
jmp
ffreep
out
jge
or
sahf
adc
iret
mov
jle
sarb
pop
in
lahf
rcll
stc
jo
rcll
mov
adc
dec
push
and
cmpsl
pop
jmp
nop
mov
arpl
faddp
jae
test
and
mov
sbb
roll
rolb
aam
daa
dec
adc
inc
jl
mov
mov
mov
or
icebp
cmp
add
test
bound
test
enter
popa
sub
push
pop
inc
mul
sbb
inc
push
ret
rorb
xchg
hlt
mov
cmp
aam
stc
push
push
in
dec
dec
lock
and
enter
dec
rclb
ljmp
ljmp
hlt
pop
sti
call
mov
sub
dec
xchg
addr16
aas
ja
das
push
xchg
lret
sub
js
sahf
ljmp
push
dec
pop
nop
inc
push
sbb
mov
outsl
cwtl
insb
pop
gs
ficomps
jns
cs
pop
pop
add
insb
arpl
cmp
nop
cmp
jne
lock
jns
sbb
das
mov
mov
mov
inc
cld
int
out
test
loop
into
jns
mov
xor
int
stos
push
dec
repnz
dec
push
lret
es
cmp
jle
sbb
mov
push
rclb
cmp
imul
ds
jno
hlt
int
ja
fnsave
mov
pop
mov
jnp
outsl
xlat
dec
cmpsl
push
cmp
sub
stos
fimuls
mov
sbb
pop
xor
ds
insb
jo
jmp
movsb
dec
push
fisttps
push
and
dec
bound
bound
and
jnp
sbb
in
loopne
xabort
xchg
mov
cmpsb
cmp
mov
jg
push
pop
hlt
sub
pop
lahf
lea
or
lock
and
sti
dec
mov
out
leave
out
sbb
xchg
push
lcall
pop
js
push
rolb
sbb
loop
or
test
fidivs
div
pop
rclb
mov
loop
fs
mov
mov
lods
mov
test
test
and
mov
dec
xchg
pusha
xchg
pop
xchg
mov
stos
push
out
addr16
or
das
arpl
int
leave
vmulss
jle
or
add
mov
mov
cmpl
push
ss
fwait
shlb
lods
push
out
xchg
xchg
popa
mov
jmp
mov
call
inc
das
adc
es
adc
sarl
push
mov
ss
inc
cwtl
pop
sub
scas
xchg
mov
into
adc
je
sar
fdivp
inc
test
cmpsb
fcoms
sub
into
cmpsl
inc
and
in
pop
aam
mov
fs
shrl
loopne
dec
push
add
insl
dec
in
rcll
fcmovne
scas
inc
test
popf
jge
and
rclb
sub
sub
pop
pop
push
xor
aam
addb
pop
xor
les
and
lret
add
jecxz
lret
jo
cmp
adc
xchg
adc
pop
cld
dec
xor
mov
and
cmc
clc
adc
jns
dec
adc
ja
inc
in
ss
mov
cwtl
cli
dec
mov
hlt
leave
sub
ljmp
in
stos
fs
mov
xor
xchg
mov
repz
and
xor
scas
sbb
xor
add
jb
xlat
cmp
loop
mov
ja
or
cltd
out
add
sbb
ds
jmp
fadd
mov
addr16
add
mov
jecxz
pusha
xchg
aaa
fisubl
outsl
mov
cltd
jo
lea
test
mov
bound
mov
jle
fbstp
test
jae
push
pop
xchg
mov
lret
ss
lea
sub
fisubl
jb
add
xchg
enter
sahf
or
nop
scas
inc
adc
lret
push
out
pop
rol
test
cmpsl
push
add
out
js
pop
add
mov
push
mov
push
mov
movsl
insl
rcr
lods
outsl
jae
icebp
sahf
ljmp
cmp
push
mov
xor
cmp
sub
stos
sbb
inc
xchg
pop
shl
fnstcw
loopne
test
or
hlt
pop
dec
outsb
fs
adc
pop
das
and
mov
xorb
mov
jl
push
pop
pop
loop
xor
xchg
push
mov
mov
inc
xchg
sbb
push
test
xchg
out
stos
jbe
mov
iret
das
dec
enter
mov
std
mov
mov
shll
jp
dec
xchg
push
insl
jge
in
mov
xchg
imul
jmp
push
sub
popf
mov
xchg
xchg
jns
cmp
adc
inc
out
loopne
rcrb
or
xchg
jmp
jo,pt
inc
pop
hlt
cmp
js
inc
mov
xor
and
popf
iret
movsl
idivb
sbb
ret
dec
stos
jnp
fistpl
repz
push
lods
sub
mov
jmp
addr16
jl
pusha
pop
loope
js
cltd
jbe
in
pop
mov
out
pop
xor
cmc
test
hlt
xchg
dec
push
mov
xchg
mov
cmp
in
sub
sbb
mov
and
roll
lahf
shll
jae
aad
call
adc
outsl
es
xor
mov
pop
sbb
movsb
mov
jecxz
mov
adc
mov
xchg
dec
fbld
push
jl
lahf
loop
push
into
clc
fisttpl
pop
insb
mov
jno
adc
fcomi
cmc
aaa
pop
jge
jnp
adc
stos
jo
push
and
or
add
les
add
inc
pop
dec
enter
sub
pop
fdivl
sub
rorb
xor
xchg
jo
shll
nop
ja
push
aas
jo
ja
dec
jo
andl
outsb
ret
mov
cmp
mov
pop
gs
movsl
out
cmp
imul
sub
sub
mov
mov
in
dec
push
sbb
fisubs
mov
pop
pop
ja
lahf
pop
pop
dec
insb
stos
or
jno
jne
das
sbb
test
mov
push
mov
in
movsl
pusha
cmpsl
lret
dec
mov
nop
int
movsb
imul
repz
mov
xlat
lods
insb
cld
ret
dec
xor
filds
mov
cmp
push
dec
fs
dec
into
push
popa
testb
mov
xor
dec
cmc
cli
sub
mov
aad
push
rolb
leave
mov
add
fucomi
mov
fldl
rorb
dec
sbb
out
mov
fistps
lods
push
cmp
nop
pop
ss
addl
pusha
in
movl
sti
or
xchg
ficompl
add
test
mov
push
into
sahf
mov
push
sub
daa
repnz
in
fwait
orb
test
fidivl
jns
xor
test
jp
pop
aad
push
ret
in
pop
out
mov
out
imul
inc
cmp
mov
das
aas
mov
jmp
pop
out
push
cltd
lret
mov
sbb
lock
dec
add
xor
pop
xchg
je
and
je
xchg
push
fwait
add
mov
lret
mov
int3
adc
xchg
sti
xchg
pop
sbb
aam
sahf
jmp
push
push
pop
popl
cltd
and
cmpl
in
daa
imul
std
test
hlt
rcll
adc
mov
cmp
push
dec
fildll
add
sub
push
sub
mov
insb
into
dec
inc
adc
test
push
inc
push
or
push
incl
cmc
jno
bound
stos
ja
sarl
mov
pop
test
hlt
shrb
incb
idivl
shll
pop
cld
sbb
or
fildll
adcl
cmp
jne
jae
lret
popf
rcrl
shll
push
xchg
push
in
repz
cmpl
test
adc
sub
cmp
daa
push
add
cmpsb
test
xor
sub
ret
iret
lods
push
mov
icebp
xchg
out
sbb
ret
mov
push
push
adc
test
sub
dec
mov
cmp
test
cmc
clc
lock
mov
jecxz
and
imul
leave
in
daa
jecxz
or
mov
pop
or
lcall
inc
add
mov
dec
adc
das
ret
sub
xor
ret
dec
cwtl
stos
movsl
jl
cwtl
pop
and
stos
pop
jmp
push
jmp
imul
sub
pop
mov
std
inc
xchg
pop
sbb
dec
rorb
dec
push
xchg
jnp
je
and
lods
std
or
push
out
add
dec
cltd
int3
pop
inc
int
xchg
cld
sahf
shr
push
and
lods
push
jb
subl
aad
pop
repnz
pusha
pop
push
iret
jnp
jl
push
in
fidivrs
popf
popa
jae
jg
push
xchg
add
pop
adc
cld
adcb
les
fdivs
test
jl
pop
add
lcall
lods
mov
lcall
cmc
stos
mov
sbb
push
in
and
inc
popf
adcb
and
mov
cmp
inc
mov
stos
testl
pop
pop
outsb
cmp
rep
pop
cld
sbb
sub
in
mov
and
sub
call
sarl
pop
repnz
sbb
mov
js
int
add
xor
xor
jae
std
outsb
shrb
jg
repz
rclb
not
add
std
ficoms
pop
mov
and
pusha
call
ret
sysexit
fidivrl
jg
repnz
mov
out
vpackuswb
inc
fldcw
xor
mov
jae
cli
fdivr
mov
sbb
or
adc
outsb
jnp
jbe
test
sub
push
cmc
jno
sbb
fsubrs
out
sarl
stc
insb
repz
gs
jge
lds
cmp
push
mov
jmp
ss
bound
loop
leave
fildll
sar
notb
push
jne
daa
jg
imull
fildl
xor
dec
cmp
mov
mov
mov
mov
pop
sbb
and
jbe
cli
inc
and
xor
mov
test
js
stos
outsl
addr16
lcall
fisubrl
xor
lahf
cmc
jge
dec
cmpsl
pop
jbe
mov
in
sub
mov
ret
or
ss
jno
add
pop
popf
push
sbb
dec
lret
mov
icebp
cwtl
pop
sub
adc
enter
jno
arpl
and
inc
sub
cmp
sbb
fcoml
xlat
jne
or
roll
mov
push
xchg
xchg
fwait
rorb
xor
sbb
mov
test
lret
cmpsl
test
mov
call
scas
dec
in
inc
das
movsl
idivl
out
inc
iret
jmp
fstpt
aaa
js
push
jmp
xchg
adc
mov
ds
and
andl
push
adc
addr16
ret
repz
xor
xor
rcrl
fiaddl
ljmpw
cmp
jo
inc
call
icebp
test
into
xchg
mov
je
jecxz
adc
aas
imul
test
outsb
inc
jnp
push
aaa
outsb
pop
mov
out
jb
xchg
clc
pop
jecxz
pop
and
icebp
mov
push
mov
mov
cld
jge
mov
dec
faddl
mov
inc
sub
fisttpl
xchg
cmp
cmp
pop
jmp
test
popa
loope
inc
xlat
inc
rclb
jl
popa
mov
adc
mov
cmp
push
add
adc
sbb
outsl
mov
sub
pop
push
cmc
fidivrl
outsb
pop
pop
scas
aad
aad
push
xchg
jae
sbb
sbb
jle
ret
vmread
subl
das
and
dec
pop
fistl
test
imul
fists
mov
pop
sbb
outsl
outsb
xchg
adc
loop
mov
or
insl
push
xor
sti
jecxz
cld
aad
jbe
mov
rcrl
insl
in
dec
xor
pop
mov
cmp
cmp
adc
stos
pop
orb
pop
cmp
pop
pushf
inc
stc
pop
into
push
stos
sub
movsl
ficoms
push
lahf
lea
into
add
jnp
popa
in
and
push
daa
mov
mov
sti
lods
lret
or
xchg
dec
aam
data16
ret
divb
sbb
mov
xlat
gs
adc
clc
push
iret
sub
mov
test
cs
sbb
addb
in
psraw
sbb
test
dec
jmp
dec
mov
fdivp
sbb
sub
xchg
adc
add
imul
cmp
pusha
nop
cmp
addr16
jmp
pusha
sbb
dec
pop
scas
pop
aad
jecxz
sub
and
push
icebp
lahf
jge
inc
jno
mov
mov
sbb
and
jns
mov
add
shr
call
mov
outsl
sti
add
inc
stos
dec
decb
adc
mov
sbb
mov
mov
or
rorb
aam
jecxz
pop
imul
in
lret
inc
pop
pop
stos
lds
sahf
jle
jecxz
mov
rcll
fisubrl
hlt
mov
xor
cwtl
ds
shll
xor
or
fs
jl
jno
push
test
and
inc
xor
arpl
aas
imul
add
push
das
ds
insl
inc
inc
repz
and
mov
or
jp
popa
call
xor
sahf
loopne
orl
mov
push
sbb
inc
bound
mov
fstp
dec
adc
stos
fists
mov
ret
cmp
cltd
pop
push
in
push
cwtl
call
call
adc
cmpsb
sub
jns
outsb
adc
test
inc
dec
mov
das
push
mov
dec
lret
sub
add
xchg
jle
add
mov
push
mov
cmp
movsl
mov
mov
sahf
sub
arpl
cmp
rcr
scas
call
test
inc
out
cltd
in
jge
dec
into
jmp
fldcw
and
xchg
dec
xchg
test
sahf
mov
sub
or
and
fbstp
push
out
push
sbb
push
pop
frstor
bound
push
xchg
out
stos
imulb
iret
bound
imul
gs
fldt
iret
addl
outsb
mov
xor
dec
pop
inc
in
adc
or
cld
sub
cmp
push
or
push
pop
sub
jg
mov
jo
fidivs
mov
xchg
jne
push
push
xchg
or
ds
sbb
hlt
popf
mov
loope
cmpsl
pop
push
pop
lahf
fcmovu
jb
adc
pusha
jecxz
iret
xor
xor
ret
push
jno
in
jge
push
add
mov
lcall
inc
add
das
insb
xchg
jecxz
jne
subl
call
lock
sbb
lret
pop
mov
and
mov
test
loopne
pop
cmp
mov
push
pop
add
leave
rorl
mov
mov
fs
fsubrs
mov
loope
cmpl
lret
insb
dec
mov
pusha
sub
or
sbb
dec
adc
jmp
push
lcall
out
addr16
inc
sbb
mov
bnd
mov
sub
mov
inc
mov
xchg
scas
push
jnp
shlb
cwtl
jecxz
shrb
mov
xor
adc
pop
push
bound
popa
push
mov
dec
or
push
dec
aad
outsb
imull
insl
mov
lret
sbb
bound
mov
out
sbb
or
mov
out
sbb
push
in
loope
or
push
ret
jns
pop
test
jg
out
xchg
mov
std
jg
inc
mov
jne
xchg
out
push
loop
adc
jns
lea
sub
fnstsw
mov
stos
xchg
jb
rorb
mov
mov
rorl
and
pop
aas
pop
and
mov
aaa
sti
xor
or
sarb
rol
jmp
xor
cmp
daa
shlb
cmc
pop
mov
jp
test
dec
sbb
iret
fisubrs
add
aad
fldcw
inc
inc
mov
inc
sub
sarl
loop
jb
stos
add
xor
leave
inc
in
mov
cltd
cmp
nop
sti
aad
rolb
xchg
jg
cli
fnstenv
outsl
mov
je
lds
addr16
stos
push
pop
andnps
movsb
icebp
inc
push
and
xchg
add
lahf
dec
popf
cmp
les
js
into
sub
add
cmp
cltd
dec
cltd
push
sbb
call
mov
divb
mov
scas
sbb
hlt
gs
shrl
dec
and
or
sbb
data16
call
ret
mov
push
xchg
inc
dec
mov
out
mov
jb
sar
fadd
pop
fs
lock
ja
mov
arpl
mov
scas
jg
lds
popa
push
mov
mov
aad
nop
push
sub
adc
cltd
push
mov
pusha
ss
xor
pop
addr16
mov
cmp
cmp
push
lret
ja
es
mov
stc
out
xor
out
jl
adc
inc
adc
xchg
pop
jne
and
fwait
pusha
mov
test
pop
in
ret
ret
clc
push
imul
dec
push
stc
fldl
in
jge
add
cmp
adc
cwtl
mov
lds
and
adc
push
cmp
lahf
fsubrs
rcll
lcall
dec
push
stos
leave
std
adc
jecxz
lock
nop
sub
ret
inc
outsl
inc
jle
mov
and
mov
cmp
or
inc
enter
cltd
inc
test
stc
mov
sbb
mov
mov
mov
push
mov
arpl
mov
mov
aad
iret
pop
push
fmuls
dec
loop
nop
js
mov
push
jns
dec
mov
inc
imul
pop
mov
outsl
loop
inc
mov
xchg
test
insb
ljmp
inc
inc
out
jns
sbb
mov
clc
pop
sub
fisubrl
shl
pop
sbb
mov
daa
imul
pop
ret
xlat
out
jbe
xor
pop
pop
and
xor
mov
xor
iret
fistps
in
push
cmc
mov
xor
pop
xor
imul
addr16
cmp
movsb
repz
jg
push
scas
andl
gs
pop
daa
pop
test
cmpsb
and
les
push
je
rcr
bound
ret
jae
fcoms
mov
inc
mov
and
mov
sub
shrl
lods
inc
sti
adc
lcall
push
lods
adc
inc
inc
testl
pop
aaa
repz
pop
inc
sub
push
clc
xchg
lds
leave
inc
sbb
xchg
iret
jmp
mov
sbb
mov
nop
js
jns
imul
push
cmp
ret
xchg
mov
push
sarb
lods
mov
dec
imul
or
lea
int3
add
popa
pop
fimuls
cmp
repnz
sbb
negl
stc
mov
xchg
push
cmp
mov
xlat
int
decb
aaa
sahf
push
fisttpll
and
mov
xchg
mov
mov
inc
add
mov
pop
mov
sahf
outsl
sbb
cmc
sub
sbb
dec
dec
sbb
push
ret
push
rep
cmp
std
icebp
mov
dec
test
int3
sub
inc
jb
lods
jno
inc
icebp
repnz
push
cmpsl
dec
imul
inc
jp
pop
ljmp
lea
sub
repz
inc
test
inc
sbb
push
lock
insl
mov
out
hlt
mov
ljmp
pop
mov
sbb
inc
jg
rolb
ret
pop
mov
add
lea
xorl
mov
dec
sahf
insl
pop
jle
sub
pop
arpl
inc
cmp
ds
pusha
lock
inc
xchg
jnp
sti
out
jl
cmp
sub
dec
jb
sub
test
ja
push
xor
pop
in
add
mov
mov
jbe
lcall
out
loope
sbb
shrl
xchg
push
add
mov
pusha
inc
mov
push
or
sub
pop
movsb
mov
mov
sbb
scas
rsqrtps
and
aam
adc
xchg
dec
mov
cmp
jo
inc
and
push
sub
gs
scas
flds
sbb
rcrb
jmp
dec
lock
pop
lods
mov
loop
inc
mov
sub
ljmp
xchg
shrl
aas
add
sub
cmp
inc
push
aaa
jnp
in
loopne
mov
inc
push
and
leave
jp
add
or
dec
push
jb
insl
push
xchg
clc
xchg
pop
adc
cmpsl
std
incl
mov
imul
inc
imul
nop
mov
in
xchg
idiv
adc
push
or
jne
test
outsl
xchg
es
cmp
and
pop
cmc
sub
hlt
into
retw
pop
mov
cmp
divl
sbb
sbb
rorl
out
int3
imul
pop
jno
cmp
pop
sub
sbb
add
je
mov
rclb
loopne
dec
hlt
sbb
mov
xchg
adcb
jae
movsl
add
faddl
js
push
es
mov
cld
je
pop
inc
mov
jg
fadd
ret
mov
lcall
pop
xchg
adc
add
imul
xor
xchg
vpcomb
cmp
mov
xchg
pop
stos
ret
fcomps
mov
movsb
negl
mov
inc
and
sbbl
stos
fisubrl
dec
jmp
inc
dec
mov
dec
mov
mov
aad
pop
sub
push
insl
adc
lret
pushf
mov
push
repnz
ret
orl
add
jnp
outsb
push
rorl
and
pop
ror
into
rcll
jne
push
popa
mov
xor
sbb
cmp
imul
inc
push
push
imul
orb
mov
stc
cs
bound
mul
in
xchg
mull
inc
outsb
jmp
ljmp
cli
or
push
add
pop
dec
mov
adc
push
lds
stos
push
add
ljmp
sbb
or
lds
push
or
js
imul
movsb
loop
into
ret
insl
sbb
je
pushf
xor
add
pop
shll
inc
lret
add
and
dec
xchg
ret
cld
pusha
add
xchg
or
fildll
ja
mov
mov
and
mov
jb
cmp
sbb
jle
mov
test
and
imul
xor
xchg
into
lods
aaa
gs
push
sub
iretw
sbb
mov
lock
mov
frstor
test
and
or
addr16
outsw
jle
pop
push
out
addl
cmp
xchg
arpl
std
push
jno
or
seto
mov
stos
adc
nop
cmp
aas
aad
mov
cmp
fcoms
mov
popa
pop
gs
pop
lds
subb
or
pop
jmp
les
cltd
mov
add
dec
enter
mov
int3
iret
adc
sti
dec
cs
in
test
jge
int
fstps
jg
cltd
shll
ss
je
cwtl
mov
cli
sahf
fstps
mov
mov
inc
sub
leave
arpl
mov
mov
fidivrl
pop
mov
leave
mov
stc
je
sbb
test
pushf
jge
push
sahf
movsl
sti
loop
or
add
sub
mov
ret
push
loopne
xor
or
pop
iret
mov
push
fwait
cmp
pop
dec
adc
ror
push
sbb
push
mov
jae
enter
push
inc
shlb
inc
in
mov
mov
enter
cmpsb
fwait
in
dec
scas
inc
add
out
xlat
mov
enter
out
mov
sar
or
jmp
fisubs
gs
rcrl
mov
adc
or
dec
sub
pop
dec
mov
outsb
jmp
dec
xor
sub
test
in
mov
loope
shl
sahf
ret
fiaddl
cmp
pushf
arpl
iret
jle
mov
cmp
movsl
daa
call
mov
jmp
mov
ljmp
jecxz
mov
lret
jp
bound
stos
ret
jb
mov
incb
cmp
adcb
cmp
xor
pop
cmp
js
or
jecxz
adc
dec
lea
insl
sub
aad
cs
ljmp
jmp
sbb
outsb
jno
adcb
inc
or
fldcw
xchg
addr16
lahf
ljmp
call
push
mov
inc
popa
inc
push
push
call
adc
mov
adc
repz
xchg
subl
xorl
add
test
ja
push
loope
sub
sub
jle
aas
sbb
inc
push
out
inc
xchg
scas
push
stos
loopne
mov
adc
shll
lret
cmp
mov
xchg
mov
jmp
bound
shrl
mov
xor
and
stos
sub
scas
fcmovnu
dec
cmpsl
dec
xor
loopne
inc
scas
cmpb
ret
bound
insl
mov
mov
movsb
and
std
and
jp
shr
sbbb
sbb
test
out
out
jmp
scas
outsl
daa
aam
cmp
inc
mov
and
adc
mov
sarl
popf
push
ret
mov
and
movsb
mov
lcall
dec
arpl
stos
jae
jns
lret
sbb
mov
cmc
cmpsb
loope
outsb
xchg
roll
rcrl
pop
sbb
mov
out
mov
fs
xchg
subl
les
sahf
pop
xchg
sbb
xchg
rcrb
mov
jecxz
hlt
push
mov
mov
and
test
cmp
mul
mov
lcall
or
xchg
ljmp
iret
cmp
and
movsb
outsb
repnz
cmp
cs
push
push
lea
cwtl
hlt
daa
gs
ljmp
push
lret
xchg
jo
pop
jno
out
out
fists
pop
or
jbe
or
inc
jo,pt
in
pop
inc
sub
lret
shlb
jle
pop
adc
mov
ljmp
sbb
adc
inc
mov
xchg
xlat
jb
data16
push
cmp
adc
dec
bound
mov
cmpsb
inc
cmp
ret
sub
push
stos
popa
cld
ficompl
cmp
fistpl
and
mov
negl
mov
or
pop
jb
pop
pop
xor
push
in
fdivr
clc
xchg
adc
imul
mov
xor
mov
loopne
sbb
dec
loope
hlt
int
sar
dec
cltd
pop
roll
sub
stc
outsl
adc
ds
icebp
nop
shrb
dec
lea
jo
jge
pusha
cmc
clc
xchg
jns
push
and
and
sbb
sbb
cmp
jmp
cs
call
movsl
lods
jg
insb
lret
adc
scas
into
subl
jns
gs
mov
mov
pop
into
fwait
das
mov
addr16
pusha
mov
lds
jo
in
dec
sahf
mov
jmp
movb
fidivrs
cwtl
add
pop
push
add
inc
inc
jecxz
sub
push
push
mov
fs
push
cmc
jmp
xor
in
outsb
cmp
stc
lret
push
into
out
dec
dec
jecxz
jle
cmp
mov
and
loope
dec
pop
movsl
daa
decb
mov
and
loope
mov
fistpl
mov
daa
mov
iret
cwtl
xor
in
jo
dec
out
and
pop
xchg
scas
popa
out
jo
mov
in
popa
add
sub
loop
or
ret
fwait
pushf
inc
outsl
xor
push
lods
xor
add
mov
sub
in
push
test
xchg
pop
or
je
push
sub
xor
inc
mov
insb
dec
loopne
dec
mov
adc
mov
dec
cmp
pop
and
jae
popa
xor
fistpl
stc
jbe
insl
sbb
push
pop
xor
xchg
pop
fwait
ds
push
cmpsl
clc
dec
or
jne
in
dec
ficoms
fidivrl
push
cs
mov
sbb
ss
inc
sbb
jl
mov
adc
jmp
jmp
or
jecxz
xor
je
ret
rcrb
push
lock
xchg
mov
aaa
mov
outsb
add
pop
das
in
sbb
lea
sub
push
fwait
cwtl
ss
push
out
pop
in
sub
jo
das
mov
mov
xchg
popf
sbb
jno
jl
mov
pop
push
loop
adc
popa
jge
das
xor
mov
cmp
dec
ja
test
xchg
mov
cmp
fwait
cmp
xor
push
fwait
cmpsl
adc
jo
addr16
outsl
imull
sub
lahf
push
or
call
cmc
pop
das
push
cmp
cmpsb
cmp
nop
fistpl
cmp
or
lock
push
pop
divb
rcrb
push
leave
out
pop
sub
nop
dec
sbb
outsl
or
jns
iret
cmp
xchg
dec
or
stos
mov
xor
mov
push
cmp
cmp
xor
mov
pop
adc
add
sub
popa
pop
or
mov
lock
popf
dec
pop
ret
in
adc
jno
in
or
lret
jno
pop
mov
pop
negb
mov
popa
lret
mov
jge,pt
cltd
in
mov
stc
jno,pt
lahf
imul
cmp
addr16
dec
mov
clc
das
and
aad
lahf
push
sub
xor
stc
or
std
out
mov
inc
jl
das
loopne
mov
push
cmp
aaa
and
loop
or
ss
sub
js
jbe
lret
dec
mov
push
fadds
lret
or
push
xor
push
lock
roll
aad
mov
cli
shlb
addl
jp
frstor
shll
popa
lods
adc
add
cmp
jmp
mov
mov
mov
mov
imul
inc
inc
shll
jp
mov
add
pop
cmp
inc
aam
aam
jg
xor
cmp
xor
outsb
jmp
and
mov
lret
xchg
bswap
mov
push
sbb
mov
inc
sbb
push
mov
mov
clc
int3
mov
mov
sub
das
sbb
jl
adc
xchg
arpl
sub
xchg
les
clc
call
cld
xchg
rorl
push
idivb
shr
addb
mov
sub
js
cmp
ds
iret
aam
adc
and
xchg
xchg
movsl
mov
inc
push
add
fcmove
adc
pop
mov
js
movsl
add
xorl
push
mov
xlat
sub
push
inc
xchg
jle
int
xor
pop
mov
call
cmpsl
dec
filds
sub
arpl
xchg
add
les
pop
into
or
insb
fsubrl
or
sub
fwait
fs
mov
pop
jnp
cmp
mov
fadds
inc
jl
ds
inc
imul
mov
lods
out
lahf
dec
jmp
jbe
in
repz
fimull
or
xchg
xchg
es
add
movsb
and
iret
repz
inc
jns
adc
mov
shlb
stos
xchg
cmpsb
sbb
hlt
push
xchg
nop
mov
mov
push
lret
shll
adc
mov
mov
mov
and
insl
nop
cmp
sub
leave
and
aad
cmp
test
inc
popa
push
push
inc
dec
jb
add
imul
inc
scas
loope
jmp
mov
in
and
enter
and
sbb
lret
test
rcr
inc
cmpsl
xorb
fldenv
fnstsw
inc
jo
xchg
push
fwait
enter
les
mov
dec
ret
sbbb
sbb
in
pop
mov
outsl
cwtl
ljmp
sub
xor
test
insb
cli
mov
jecxz
add
cmp
jg
pop
mov
mov
or
push
add
mov
xchg
ret
mov
and
loopne
bound
inc
inc
fcoml
jecxz
xchg
cli
ds
jecxz
xlat
fsts
adc
cmp
add
nop
movsb
pop
aad
xchg
cmp
aam
mov
hlt
jns
outsl
lock
ja
int
inc
push
ret
xchg
arpl
out
lock
bound
jno
iret
mov
andl
inc
adc
mov
int
sub
adc
fs
sub
or
jbe
fsubrs
jo
xor
mov
mov
xor
ja
ret
scas
push
fnstenv
popl
push
mov
cmpsl
and
idivl
pop
cld
scas
inc
xchg
xor
push
xor
xchg
inc
in
ds
idivl
xchg
orb
arpl
mov
test
mov
cmp
lcall
scas
push
dec
push
popa
loop
cwtl
gs
lds
pop
mov
adc
adc
fldl
mov
jecxz
mov
xchg
in
aam
or
ds
pushl
pop
add
push
pop
shrl
nop
jnp
hlt
or
in
mov
mov
insb
add
fimull
sub
jl
sub
cs
icebp
push
es
jbe
xchg
jmp
icebp
fwait
divl
push
mov
loop
sbb
inc
mov
cmp
cmp
ret
loopne
pop
out
sbb
popa
mov
jecxz
push
pop
push
xchg
fmul
or
mov
add
pusha
mov
mov
nop
mov
xor
mov
pusha
xchg
sub
movsl
fiadds
lds
dec
std
int3
jns
pop
ljmp
iret
das
and
daa
insb
mov
popl
mov
int
mov
int3
ds
movl
loopne
cwtl
cmp
in
ret
add
movsb
fs
jmp
out
cs
xor
mov
roll
lea
xchg
add
insl
sar
repz
clc
add
lret
ds
jnp
dec
pop
dec
test
mov
mov
and
scas
sub
outsl
rol
mov
sti
fwait
insb
sahf
push
and
in
and
dec
lods
inc
mov
call
movl
ja
mov
mov
pop
cmp
xor
dec
addr16
cmp
idivb
out
dec
xor
bound
sub
adc
xchg
ljmp
bound
sbb
and
jae
aaa
scas
sbb
dec
add
aas
stos
mov
push
imulb
add
dec
dec
sbbl
cmp
pop
into
pop
outsl
in
xchg
push
mov
loop
test
addl
fists
pop
sub
mov
push
leave
or
test
sar
mov
ds
jp
hlt
mov
mov
lret
outsl
jmp
mov
adc
daa
roll
cmp
xor
mov
fwait
push
test
sbb
sbb
das
loop
cmp
divl
je
jno
add
cmp
pop
add
clc
jl
orb
in
cmp
jge
ja
jge
add
rorb
xchg
fldcw
arpl
xchg
int3
push
sub
aas
rorb
mov
adc
add
stos
repnz
adc
jecxz
pop
ret
into
leave
mov
sbb
sub
lret
push
add
sub
mov
imul
jns
mov
dec
mov
pop
mov
xor
sub
test
movsb
mov
push
popf
push
pop
dec
fcoms
filds
push
sbb
mov
push
mov
and
pop
jnp
subb
fdivrl
out
xor
lods
sub
and
cmp
cld
xchg
pop
fnstcw
mov
inc
add
dec
pop
in
jns
stc
inc
clc
adc
mov
cmp
out
cmp
pop
ss
data16
in
lds
mov
ds
adc
and
jmp
ds
ljmp
incl
pushf
jnp
movsb
mov
aad
adc
cld
add
outsb
pop
dec
pop
in
ret
ret
lret
and
and
lock
push
fildll
xor
shll
cmpsb
or
int3
iret
enter
icebp
jecxz
sbb
fcoml
lods
fucomip
adc
cmpsl
stos
sbb
mov
and
pusha
mov
mov
fs
subl
xor
mov
jno
sub
mov
push
shrb
mov
jmp
cmc
lret
addb
mov
jp
lret
sbb
lock
and
fs
mov
lods
scas
pop
movsl
fmull
add
mov
cld
mov
inc
push
lods
dec
dec
jnp
and
mov
and
gs
cmpsb
sbb
mov
sub
cmp
xor
and
or
lods
push
lods
lods
popf
sbb
and
add
dec
fimuls
add
jp
ljmp
pop
cmp
loop
filds
jecxz
rcll
jns
dec
hlt
test
jo
cmc
push
jno
mov
daa
test
das
sbb
fistps
call
lock
and
mov
mov
pop
push
test
lods
cmp
jmp
xchg
test
in
push
std
es
push
iret
xor
sbb
daa
scas
call
in
xchg
xchg
cmp
adc
decb
in
popf
clc
and
jl
inc
insb
sub
movsl
cld
and
jl
mov
cli
push
pop
movsb
cmp
xchg
in
fwait
xchg
out
dec
jne
xchg
mov
mov
inc
sti
aam
sub
aaa
sahf
mov
repz
inc
push
sub
cmc
mov
jb
out
jle
jmp
fstpt
stc
dec
rolb
insb
mov
pop
lcall
jecxz
test
dec
xchg
inc
popa
cltd
dec
sbb
shrb
rcrl
ret
push
rcl
add
adc
test
stos
insl
cld
les
aad
dec
mov
outsl
stos
and
adc
pop
push
ds
xchg
fidivl
sbbb
push
and
xor
pop
cmp
lods
jg
xchg
pop
sub
adc
xchg
pop
push
mov
xchg
jmp
sub
mov
inc
ja
fcoml
xchg
and
jbe
add
sub
test
aas
mov
add
popf
nop
nop
mov
xchg
mov
jae
movsb
push
cmp
cld
pushf
enter
inc
test
push
mov
xchg
or
fcmovb
and
mov
dec
cltd
inc
out
stos
inc
jg
xchg
cs
shrb
xchg
add
out
movsl
xor
popf
stos
imul
std
ret
outsb
push
sbb
jmp
xlat
popa
mov
adc
loop
out
xchg
aas
add
stos
sub
cmp
clc
bound
inc
jnp
mov
test
xchg
wbinvd
shrl
jne
les
fwait
or
mov
lcall
and
outsb
mov
adc
push
stc
mov
cwtl
fisubs
lret
dec
cld
mov
adc
imulb
sub
imul
adc
aaa
and
sarb
and
in
xor
in
mov
sub
dec
lret
xchg
pop
in
mov
arpl
xor
xchg
dec
mov
je
loopne
push
mulb
pop
enter
xor
std
and
es
inc
mov
adc
mov
popa
xor
sbb
fimull
add
scas
xchg
mov
pusha
or
adc
mov
add
js
loop
cs
test
sub
xor
pop
and
xor
test
pop
dec
mov
fs
ja
and
popf
mov
mov
sbb
sarb
jae
xor
inc
shlb
cmp
pusha
outsl
dec
mov
and
hlt
in
inc
inc
jecxz
inc
in
pop
in
imul
ret
adc
and
icebp
cs
mov
mov
xor
push
enter
and
pop
jmp
jecxz
lods
gs
lods
ss
mov
out
adc
test
jmp
mov
sub
pushf
stos
mov
push
popa
lcall
mov
mov
loope
loope
jns
fcompp
push
cmpsl
jmp
dec
mov
add
xchg
adc
lret
int3
adc
pop
loopne
fdivrp
mov
sbb
xchg
test
lret
dec
dec
sub
call
mov
pop
inc
mov
mov
jmp
push
inc
loop
or
xchg
xchg
cmp
and
jmp
jecxz
test
fwait
pop
sbb
adc
arpl
cmpsl
add
xor
xor
xchg
ret
xchg
addr16
push
shr
sarl
lret
jp
jno
jnp
scas
jb
cmp
sub
or
mov
pushf
adc
insb
hlt
hlt
in
ret
push
ret
pusha
or
sbb
inc
mov
sbb
adc
xchg
call
mov
dec
inc
jbe
shll
sub
jns
es
rclb
jae
repz
jne
idiv
push
clc
aaa
sahf
mov
xchg
pop
sbb
lahf
push
shl
pop
mov
sub
dec
mov
sub
mov
data16
filds
or
std
repnz
fidivrs
push
mov
sub
mov
mov
pushf
lods
mov
dec
jo
mov
mov
mov
lret
pop
rorb
jne
sti
and
sbb
jl
sbb
shl
mov
mov
mov
insl
pop
mov
xchg
xchg
inc
fldl
leave
ljmp
mov
sub
mov
outsb
shlb
repz
pop
jmp
inc
dec
and
sti
push
imul
mov
push
inc
push
inc
loopne
sbb
testb
adc
insb
ror
outsb
xchg
or
xor
int3
xchg
xor
sahf
out
push
pop
fcompl
out
xchg
or
sbb
xchg
je
in
mov
imul
or
test
sub
sbb
std
jp
mov
or
out
imul
push
notl
cmpsl
in
sahf
xchg
test
enter
mov
jo
push
cmc
mov
push
hlt
pop
and
movsb
xchg
push
dec
aad
mov
push
inc
test
sub
jbe
jle
or
dec
lds
pusha
pop
lods
mov
mov
adc
mov
notl
mov
out
aaa
adc
and
inc
lahf
add
and
pop
ret
jmp
mov
fwait
or
add
add
push
bound
or
xorb
cli
pop
fwait
pop
shrl
popa
or
dec
sub
jne
jp
fnsave
sub
leave
mov
in
push
lret
jl
aaa
loopne
mov
sbb
subl
pop
lahf
pop
xor
and
cli
dec
fwait
insb
ret
mov
sbb
fs
out
fxch
or
and
cmp
roll
fisttpl
pop
rcll
mov
mov
adc
dec
inc
sub
mov
or
pushf
xchg
jmp
mov
xchg
xchg
pop
jg
jmp
mov
in
pop
fs
filds
arpl
or
aaa
stos
adcl
cld
jne
cld
fs
mov
adc
sub
inc
mov
or
inc
and
imul
adcb
sbb
rcrb
pop
and
fs
xchg
les
js
clc
dec
inc
inc
or
fmulp
addl
loope
lods
std
ret
inc
adcb
cwtl
hlt
inc
push
mov
push
xchg
dec
lds
sbb
mov
dec
xchg
sbb
adc
aas
pop
je
rcl
dec
lahf
sub
push
push
push
pop
sbb
imul
nop
imul
dec
and
cmpsb
push
fwait
or
jnp
pop
mov
ficomps
dec
xlat
jmp
test
into
or
aad
cmp
cmpsl
adc
lret
xor
xor
sarb
mov
xor
or
cmp
mov
scas
inc
rcl
inc
test
out
shlb
and
nop
xor
fs
jnp
popa
sub
add
sahf
in
or
call
test
xchg
loop
jne
pop
add
xchg
mov
mov
mov
adc
mul
jnp
pop
lock
sub
adc
jl
sarl
fidivrl
push
inc
add
or
hlt
push
cmpsl
xchg
or
push
mov
call
test
jne
jge
jae
mov
push
js
daa
adc
notb
daa
nop
add
es
dec
adc
mov
xor
or
ret
sub
add
filds
xor
sbb
adc
in
and
out
sub
mov
cmp
cwtl
jge
xchg
push
jmp
push
cmp
mov
jnp
push
mov
pop
cmp
inc
repnz
imul
lock
mov
xlat
pop
xchg
mov
dec
orl
out
arpl
jbe
loope
xchg
adc
dec
cwtl
push
popf
loope
and
xor
stos
subb
mov
sarl
aaa
xor
xor
pusha
push
movsl
dec
push
mov
jo
int
out
out
push
jo
or
int
insb
or
hlt
sub
mov
add
pop
addl
es
js
pop
sbb
add
sub
popa
testl
cmp
shl
inc
pop
jge
iret
sbb
loop
enter
mov
lock
clc
add
cmp
pop
fldenv
insb
out
jno
leave
incb
jge
fnsave
rclb
lea
push
cmp
push
mov
xor
cmc
pop
inc
cmp
cmp
push
adc
mov
loopne
ror
shrl
or
jmp
jle
cmp
or
mov
loope,pt
mov
popa
ss
push
sahf
sbb
inc
popf
ret
aas
pop
clc
mov
shll
popl
sti
cmp
add
jle
movsl
insl
xor
xchg
sbb
xor
ss
xchg
xchg
add
push
mov
loopne
pusha
mov
ljmp
xchg
mov
out
outsb
test
jbe
mov
js
or
or
ljmp
aad
mov
stos
ljmp
mov
pop
cwtl
dec
push
lods
andl
dec
adc
sti
jecxz
jl
cmp
adc
push
jno
leave
or
andl
fnstsw
xchg
sub
xchg
ja
loopne
xor
dec
mov
jnp
cmp
dec
cmp
xor
push
les
aad
hlt
inc
inc
fsts
ss
loop
jae
adc
and
adc
mov
and
out
pop
cmp
sub
mov
pop
fprem1
out
nop
les
push
outsb
std
ret
inc
dec
scas
add
in
dec
xchg
popf
add
inc
mov
xchg
or
dec
xorl
push
cmp
ret
icebp
push
xor
test
fisubrl
inc
in
shlb
es
pop
fnstsw
stos
addb
sbb
sbb
cltd
and
mov
xchg
adc
add
add
or
fcomps
or
cmp
jle
push
sarl
or
inc
pop
jns
inc
push
fsubs
call
or
filds
sbb
cmc
lock
jp
movsl
mov
rorb
adc
loopne
mov
xorb
cmc
mov
iret
mov
push
jns
adc
add
xchg
pop
xchg
or
jl
lods
cs
test
lods
loopne
hlt
rcl
ret
bound
jp
ljmp
push
clc
pop
or
inc
dec
outsl
das
aas
cmpb
cmpsl
cmp
jo
inc
pushf
xchg
cmpsb
mov
lahf
and
mov
add
inc
loop
sbb
mov
push
sub
outsb
push
jno
stc
out
aaa
sub
mov
arpl
xchg
jb
xchg
fdivrl
call
popa
cmc
repnz
and
push
dec
xchg
and
push
add
aam
adc
and
mov
mov
mov
aam
cwtl
xchg
into
sbb
sbb
xchg
and
push
fs
mov
sbb
scas
ficoms
fsubl
mov
lret
inc
sub
je
call
inc
sahf
pop
dec
shrb
sub
push
sub
mov
addr16
in
das
shll
adc
jo
sahf
adc
sarb
loop
jne
lahf
call
mov
pop
inc
idivb
cmp
addr16
or
push
popf
add
push
dec
mov
push
jno
inc
fwait
jl
clc
cmp
js
out
cs
js
dec
testb
cs
add
insl
dec
repnz
aad
lcall
and
insb
xchg
xor
imul
lea
cmpsl
test
les
and
inc
out
cmp
shl
xlat
shll
cmp
lret
xchg
fstpt
insl
sbb
push
xchg
daa
subl
push
sbbb
inc
cwtl
inc
push
mov
inc
stos
in
in
xor
push
push
push
push
adc
popf
nop
mov
push
and
dec
ljmp
scas
mov
ja
and
inc
mov
pusha
popf
xor
sub
cmpsl
push
or
xchg
pop
lock
cltd
mov
sub
sbb
push
push
test
and
stos
fcompl
cltd
mov
sbb
cmpsl
mov
cmpsb
aam
test
lret
pusha
push
pushf
mov
mov
push
push
in
or
ftst
rorb
jns
aam
xor
xor
mov
inc
add
xchg
push
jb
loope
cmp
lods
subl
pusha
orb
xor
adc
pop
pusha
xchg
fcmove
lds
mov
and
movsb
mov
fisubl
inc
sbb
leave
ja
pop
cli
jbe
mov
in
mov
pop
arpl
test
push
adc
fimull
daa
cmc
inc
pop
fidivrs
sub
outsl
adc
mov
inc
mov
aas
int
pop
icebp
sbb
push
repz
lea
mov
rorl
mov
test
daa
cmp
lds
test
push
psrad
adc
mov
sub
mov
inc
test
filds
nop
cmpsl
sbb
xchg
and
or
xchg
push
test
cmpsb
mov
mov
sarb
lods
loopne
add
dec
and
dec
hlt
repnz
ret
pop
push
testl
sbb
mov
in
jle
mov
add
pop
inc
dec
and
or
out
in
mov
push
inc
rorb
inc
and
add
sub
and
add
int
pop
sbb
cs
cltd
pop
lds
pop
push
sub
jl
xor
loop
inc
mov
lods
mov
xchg
push
imul
frstor
jnp
xchg
jp
out
aad
or
lret
pop
call
rolb
pop
movsb
ljmp
sub
jo
mov
xchg
mov
addl
pop
mov
xchg
add
push
pop
movsl
je
mov
and
iret
shll
lret
sbb
addr16
xchg
pop
decl
mov
push
js
mov
mov
addr16
jo
xchg
or
jne
mov
lods
gs
stos
test
xchg
dec
fstps
and
jnp
jnp
rcl
or
cld
xor
push
outsl
fmuls
inc
pop
int
pop
mov
icebp
lret
xor
cmp
loop
leave
mov
adc
cmpsl
repnz
fsubl
push
and
cwtl
loope
ret
cmp
push
ja
add
pop
mov
sahf
add
scas
inc
fsubs
xchg
fwait
dec
add
mov
mov
xor
and
jp
or
xlat
lods
mov
mov
pop
fs
in
leave
ficoml
insl
lea
inc
out
ret
or
dec
hlt
vmovlps
adc
pop
out
or
pop
ret
loop
jnp
test
sub
iret
xor
cmpsl
ss
mov
jns
adc
hlt
fscale
push
xchg
fs
dec
leave
inc
pop
lret
pop
hlt
cltd
mov
xor
or
decl
fdivl
lret
sti
daa
out
adcb
bound
ffreep
mov
pop
out
cwtl
add
adcb
xor
xchg
sub
sbb
pop
mov
mov
pop
xchg
and
xchg
mov
int3
or
mov
rolb
pop
fdivl
stc
leave
pop
loopne
adc
es
mov
fs
aaa
rol
cmp
jmp
push
push
sub
scas
adc
jae
mov
mov
xor
inc
dec
imul
push
popf
mov
or
or
mov
outsb
ljmp
pushf
add
into
cltd
jb
sub
out
mov
and
pop
jo
ja
and
mov
cmp
punpckhdq
cmc
cmp
dec
nop
jp
mov
pop
mov
js
sub
jge
inc
mov
push
jns
popf
fadds
imul
loope
add
mov
daa
xchg
addr16
movsl
or
push
pushf
adc
es
inc
jb
dec
int3
pop
lods
pop
xlat
in
xchg
sub
inc
cmpsb
inc
outsb
sbb
sbb
inc
lods
adc
add
jb
dec
push
cltd
sub
and
into
inc
xor
subl
xor
hlt
inc
outsb
or
loope
clc
sbb
fadds
jno
scas
fldt
sub
fisttpl
push
pop
add
jg
sub
insb
insb
mov
pop
filds
sub
shrl
xorb
and
push
adc
adc
addb
lahf
loopne
sub
adc
int3
lret
mov
out
adc
and
mov
fldpi
in
in
sbb
ljmp
mov
and
cmp
cmpsb
or
stc
out
xor
pop
and
clc
out
lret
xor
jne
push
das
jae
fildll
stos
xchg
or
movsl
jbe
push
rep
mov
xchg
out
cmp
and
mov
adc
push
jae
in
inc
aas
cmp
dec
bndldx
dec
mov
adc
inc
lret
test
aad
pushf
and
mov
data16
push
mov
dec
rcrl
mov
cmc
imul
outsl
sub
mov
pop
pop
inc
hlt
inc
lret
push
test
stos
inc
mov
nop
and
push
push
mov
nop
les
pop
mov
xchg
loopne
lods
mov
test
les
dec
mov
lods
cmpsb
in
lcall
jnp
loop
test
mov
adc
sub
jbe
dec
push
cmp
adc
and
in
push
std
ja
stos
dec
icebp
xlat
js
mov
and
jae
pop
sub
mov
in
mov
imul
push
js
fcoms
xor
mov
mov
mov
push
pop
fadd
call
xor
pop
test
fcmovnbe
insl
lret
lcall
or
inc
jno
cmp
rcrb
dec
add
cmp
jge
popf
cs
adc
inc
insb
or
pop
pop
and
jp
xbegin
repnz
xchg
jmp
cwtl
fistps
mov
sub
test
ficoml
shll
cld
sbb
xchg
sub
stos
sbb
ljmp
jo
mov
inc
jno
dec
fdivl
add
js
push
dec
cmp
rolb
imul
int3
pushf
ja
test
pop
mov
test
lea
enter
aas
mov
dec
sub
and
loopne
mov
jmp
lock
clc
sbb
xchg
int3
pop
jecxz
and
cmp
sbb
jo
and
insl
inc
jp
dec
dec
shrb
mov
dec
inc
fnstenv
outsl
adc
and
repnz
rcll
mov
mov
inc
mov
adc
scas
mov
stos
fadds
adc
aad
xor
movsb
inc
cmp
idiv
push
dec
loope
dec
stos
fistpll
int
fidivl
push
mov
lea
cmp
scas
cld
sbb
cwtl
fstpt
and
js
out
test
sti
test
jmp
bound
jecxz
int
inc
mov
fstpl
lret
sbb
jbe
jno
jp
sbb
clc
decl
and
outsl
jl
aaa
sbb
pop
sub
popf
xor
outsl
addr16
push
pop
and
loopne
push
mov
in
mov
test
xor
xor
cwtl
decl
aaa
lods
push
popf
sbb
xchg
push
loope
aas
dec
dec
xchg
push
xor
inc
adc
sti
test
cs
jl
in
xlat
and
lods
outsb
jne
inc
jp
pop
mov
aas
mov
xor
xchg
test
lods
jne,pn
outsb
mov
sti
adc
xchg
lret
aam
fists
out
gs
and
xchg
test
jbe
stc
xchg
ja
loope
sbb
push
push
mov
xchg
xchg
in
dec
arpl
in
mov
dec
sbb
cmp
jbe
push
es
mov
out
dec
ja
or
pop
je
nop
sbb
out
stos
push
push
inc
inc
mov
mov
lock
sub
jg
ficomps
aad
adc
movsb
loopne
adc
xor
int3
les
mov
add
inc
scas
mov
mul
sbb
mov
out
jp
in
inc
cmc
scas
sbb
shrb
or
scas
ds
cs
scas
lret
and
xchg
std
pop
jnp,pn
cs
push
inc
cmc
adc
adc
adc
dec
adc
lea
sbb
add
cltd
xor
stos
cltd
or
jb
jmp
cmpsb
jbe
ret
sub
pop
cs
into
outsb
das
sub
cwtl
out
popa
xor
adc
xchg
cmp
imul
rcll
ret
mov
es
enter
mov
stos
stos
cltd
inc
outsl
incl
in
stc
int3
jb
mov
cmp
cmp
ljmp
mov
sbb
sub
xor
mov
popf
rclb
mov
jb
nop
mov
sbb
pusha
ljmp
xchg
out
sbb
add
mov
jecxz
addr16
mov
test
in
mov
cmp
xchg
mov
cltd
cmc
loop
cmp
jo
pop
arpl
mov
xor
mov
inc
jl
bound
movhps
and
and
cmp
scas
repnz
lret
filds
mov
jbe
clc
pop
add
out
imul
xchg
xor
mov
popf
add
ret
add
push
dec
cmpb
cmp
xchg
cmp
icebp
arpl
shlb
ja
mov
mov
into
shrb
xchg
jle
movsl
xchg
push
dec
push
insl
dec
xor
adc
adc
int
outsb
and
ret
aaa
ljmp
sbb
push
sbbb
imul
sub
lcall
bswap
lods
dec
pop
or
cli
sbb
push
cmp
gs
mov
cmp
std
notl
and
pop
dec
mov
push
iret
andl
inc
cmp
mov
pop
lods
outsb
test
into
in
stos
int3
testb
stos
jge
cmc
in
push
ds
jbe
push
jmp
cmp
adc
push
push
cmp
add
out
pop
jmp
addr16
and
mov
xchg
xor
aas
pop
jge
dec
xchg
jae
in
mov
adc
xchg
repz
aam
aas
movl
aad
xchg
push
pop
bound
and
gs
fisttpll
stc
and
call
icebp
int3
icebp
cli
xchg
clc
sub
and
push
lahf
cltd
enter
pop
mov
pop
lret
fsubrp
aas
inc
fnstenv
ret
mov
xor
rolb
or
pushf
aad
arpl
out
xchg
xor
push
mov
dec
lret
mov
fwait
push
rcl
fs
jmp
enter
ret
inc
fcmovb
adc
shrl
mov
shlb
push
pop
cmp
xorb
outsb
jno
sbb
pop
dec
mov
movsb
jge
add
int
ficoml
mov
push
lods
xchg
lods
inc
pop
dec
add
add
divl
xorl
rcl
or
in
call
outsb
mov
pop
xor
jbe
adc
faddp
in
mov
insb
xchg
stos
in
inc
push
adcl
xchg
in
adc
fstl
pushf
fldenv
in
mov
mov
mov
icebp
mov
sbb
sbb
in
loopne
or
test
add
jmp
add
cmp
sbb
xchg
push
vmread
mov
sub
push
mov
pusha
popa
ljmp
cmpsl
or
imul
sbb
mov
mov
jle
sbb
movsb
push
cmp
roll
adc
mov
jecxz
nop
neg
cwtl
divl
cmpsb
out
mov
sarl
xchg
xchg
cmpsb
push
pop
shll
sbb
mov
lret
in
dec
mov
push
test
out
adc
xchg
mov
inc
pop
lods
fsubrs
inc
addr16
pop
jle
pop
fadd
fcmovne
mov
mov
in
cli
and
adc
sahf
cmp
xor
std
xchg
jg
push
test
pop
push
stos
stc
push
shl
dec
mov
repz
mov
mov
ljmp
pop
push
enter
mov
xchg
push
nop
inc
add
inc
inc
mov
aad
sub
mov
mov
mov
arpl
mov
push
mov
mov
shrb
sub
jle
sub
and
repnz
mov
gs
and
push
push
xchg
lahf
sbb
mov
xor
jg
dec
or
lock
jb
test
gs
push
out
push
cmc
add
leave
xorl
hlt
jae
or
pop
repz
sub
int
faddp
and
pop
pop
sbb
sbb
inc
lret
jne
cltd
lods
loop
ds
jbe
data16
icebp
lret
stos
aas
mov
jb
sbb
addr16
sub
andl
movsb
lods
sub
lea
cmpsl
push
es
shl
adc
fucomp
jle
daa
std
adc
xchg
mov
pop
add
add
in
icebp
push
add
cmpsl
and
xchg
int
loop
fsub
add
xor
popa
lds
in
hlt
aam
insl
mov
adc
dec
test
scas
xor
mov
ljmp
xchg
scas
xlat
ret
xchg
xchg
outsb
ds
add
outsb
or
mov
addr16
and
cs
mov
jl
cmpsb
sbb
repz
into
mov
stos
or
gs
add
nop
sub
cmc
or
js
add
push
fwait
and
pop
js
movsb
sti
shll
push
call
mov
sarl
fs
popf
imul
and
or
cmc
or
arpl
pushf
cmp
in
outsl
popa
cmpsb
cmp
ds
gs
loopne
cs
pop
xchg
inc
jp
lret
jecxz
and
pop
fnstenv
icebp
testb
in
repz
mov
movsl
mov
mov
inc
mov
rclb
xchg
adc
leave
in
lret
dec
add
jb
dec
rcll
or
cmp
or
fistl
add
mov
mov
lods
sbb
mov
repz
mov
les
xchg
jmp
es
pusha
jae
xor
ror
add
pop
dec
or
add
sbb
xchg
data16
cltd
or
jnp
push
pop
inc
cmp
enter
mov
mov
pop
scas
xchg
sar
mov
push
add
mov
xor
scas
xchg
mov
pop
pop
pop
push
push
cmpsl
xchg
sbb
test
sub
jge
fimull
gs
jecxz
sti
sbb
movb
adc
out
test
jae
xchg
add
or
mov
pop
test
or
sbb
push
test
lret
push
xchg
cmc
fldcw
inc
sti
sub
sub
mov
push
mov
test
es
push
cs
push
push
loopne
jle
popa
scas
sbbb
dec
mov
inc
out
clc
enter
and
imul
ss
fsubs
jae
jp
sub
lret
cmc
movsb
jno
mov
jle
push
test
stc
ficoml
fsubl
je
std
lock
out
lock
fs
packssdw
inc
xchg
ret
xchg
hlt
sbb
pop
inc
mov
test
jb
popf
or
or
dec
push
lret
pusha
pop
das
das
dec
mov
imull
fadd
mov
pop
lret
cld
mov
adc
loop
gs
ljmp
sub
mov
jge
push
dec
xor
fsubs
xchg
add
add
sahf
adc
push
test
loop
std
and
push
loope
nop
fsub
push
subl
imul
mov
add
sub
push
xchg
jb
cmp
dec
gs
sti
mov
jmp
jg
add
sbb
mov
cld
in
aas
add
lea
iret
repz
ficoms
add
sub
ja
jae
sbb
leave
mov
add
or
nop
adc
sti
jge
mov
mov
icebp
xchg
mov
cmp
jo
push
fistl
xor
adc
loope
jp
mov
jl
mov
adc
pop
loopne
push
mov
pop
andl
bound
inc
xchg
bound
xchg
outsb
sub
sarl
out
and
fidivs
sti
inc
das
mov
jmp
in
icebp
or
xchg
inc
cmp
mov
iret
cmc
addb
xor
push
push
xor
insl
fwait
sbbb
mov
std
cmp
out
xor
test
pop
xor
add
stos
cs
sbb
push
sub
or
hlt
jb
mov
pop
dec
cltd
sbb
orl
stos
cmc
mov
out
int3
js
mov
mov
xor
test
arpl
cli
mov
jns
sbb
adc
add
jg
cmp
addr16
das
dec
std
icebp
jns
nop
nop
mov
data16
adc
add
xchg
lahf
mov
pushf
add
push
lods
icebp
or
mov
jle
pop
outsb
jle
mov
stc
push
and
in
test
jmp
call
sub
dec
mov
push
jne
pop
test
cmpsb
sbb
repz
xchg
push
jbe
or
mov
sub
push
sti
rclb
adc
mov
push
jbe
add
shll
pop
xchg
and
xchg
insl
std
outsl
fimull
pushf
sbb
inc
inc
aad
movsl
xchg
test
xchg
mov
scas
inc
add
out
mov
mov
es
cmc
outsb
xchg
sahf
sub
sbbb
xchg
xor
lahf
cmc
mov
push
pop
inc
insl
inc
imulb
pop
mov
aam
sub
fcomps
pop
jo
inc
pop
or
mov
aad
mov
aaa
cmc
adc
push
mov
jno
paddusw
mov
insb
add
xchg
test
les
push
jg
jno
das
mov
sub
popf
xchg
test
ret
cmc
shufps
test
dec
jp
hlt
jle
push
loop
push
cmp
cmp
mov
mov
aam
mov
or
dec
pushf
xchg
sbb
repnz
sbb
and
inc
pop
mov
mov
aad
adc
push
mov
lods
sub
sub
testb
daa
cs
jb
sahf
jl
popa
or
idiv
ret
push
mov
inc
out
stos
push
popa
jo
out
jae
push
jo
mov
mov
or
loope
mov
fs
or
imul
sbb
imul
repnz
push
cmpsl
lods
adc
sbb
push
jo
andb
inc
enter
sbb
pop
jle
ss
cmp
in
xor
jbe
mov
push
xor
stos
fstpt
sub
outsl
mov
add
push
into
je
mov
xchg
out
xor
adc
jbe
xor
aad
sbb
sub
pop
sti
xlat
and
ficompl
lahf
mov
lcall
daa
xchg
and
jb
inc
rclb
test
js
inc
fildl
sub
mov
or
jnp
lds
ljmp
and
mov
test
sti
inc
outsl
nop
dec
push
add
out
stc
dec
sbb
dec
das
dec
mov
addr16
and
xchg
lret
js
loopne
inc
fs
jnp
or
xchg
fidivrl
sar
xchg
push
mov
push
dec
adc
addl
shrb
aam
fisubrs
inc
fisttps
leave
and
cmpsb
sbb
mov
in
lahf
xorl
sbb
mov
mov
xchg
gs
xchg
repnz
rorb
mov
gs
xchg
popw
or
xchg
enter
addr16
insb
dec
pop
das
rorl
mov
mov
jg
xlat
nop
nop
cwtl
int3
inc
fsubrl
mov
xor
loop
cli
sbb
jbe
in
lods
mov
push
xchg
insb
and
js
mov
ja
fcmovnbe
mov
jne
out
fstpt
cmpsl
cld
and
fdivrl
loope
sub
inc
int
xor
cmp
lods
sbb
and
dec
adc
sarl
popa
add
decl
lock
mov
call
jge
mov
push
js
dec
add
cmp
xor
lahf
mov
mov
jns
movsl
clc
pop
in
adc
stos
insl
lcall
push
lret
or
pushf
sti
add
les
jp
pop
dec
pusha
mov
ret
cmpsb
jg
xchg
fmul
mov
movsb
pop
ficoms
mov
lock
fisubrl
sub
stc
ss
cmpsl
aaa
add
enter
scas
dec
popa
gs
mov
call
pushf
scas
dec
xchg
pop
or
mov
sub
imul
shll
fwait
sub
js
pop
mov
cmp
push
xchg
lea
cli
int3
fwait
pop
addr16
jnp
lea
std
nop
iret
rcrl
cmp
shlb
in
cmp
jl
and
sbb
cld
fldt
cmpsb
mov
jl
cmp
push
pop
sbb
in
mov
adcl
jmp
push
mov
xchg
jl
mov
xchg
int3
push
je
cmp
shl
push
jnp
or
les
mov
repnz
sbb
xchg
or
icebp
test
push
and
add
push
mov
or
and
arpl
mov
xchg
icebp
lahf
or
mov
adc
cmp
push
sbb
nop
jmp
xchg
pusha
mov
test
scas
xchg
into
adc
mov
sub
mov
cld
push
movsb
or
movsb
int
rolb
or
mov
mov
ret
mov
mov
pop
fiaddl
push
cmp
shrb
dec
adc
mov
out
add
sbb
idivb
mov
and
andl
imul
push
xor
adc
cmc
movsb
mov
cmpb
adc
cmpl
mov
sbb
xchg
xchg
dec
xor
xchg
std
mov
or
lahf
mov
lcall
jne
dec
inc
pop
adc
aaa
or
or
jle
call
push
mov
inc
arpl
xor
in
mov
bound
mov
rcrb
lcall
mov
cmp
xchg
mov
xchg
sub
cmpsb
mov
cltd
push
fistps
push
mov
pushf
pop
js
cmp
xor
dec
inc
stos
je
mull
cmp
jmp
sahf
dec
sbb
dec
dec
bound
jp
in
add
or
arpl
mov
jp
out
addr16
and
sti
les
dec
xlat
sub
mov
pop
inc
sahf
iret
xchg
jnp
inc
repz
jb
cwtl
dec
stos
test
stc
sbb
ret
push
mov
inc
xor
sbb
je
out
addr16
xchg
mov
in
imul
enter
cwtl
pushf
jecxz
fistpl
and
jmp
out
leave
in
and
cmpsl
adc
loop
push
push
jecxz
fwait
out
pop
sub
cmp
sbb
or
sahf
cmc
pop
sarl
fs
test
xchg
inc
mov
cs
mov
in
clc
inc
mov
xor
cmp
std
xor
or
pop
push
jb
imul
ret
inc
sub
xlat
dec
mov
mov
fs
aaa
das
jnp
jp
xchg
sarb
aas
adc
jl
pop
ret
and
inc
adc
rorl
repz
scas
adc
cld
xchg
mov
jns
dec
pop
jp
jmp
fdivrp
in
mov
in
or
test
loopne
jnp
in
mov
and
mov
outsb
scas
pop
mov
adc
cltd
push
repz
insb
notl
jae
sbb
jmp
push
cwtl
leave
pop
lock
mov
daa
and
decl
data16
imul
jge
insl
movsb
adcb
repnz
in
enter
aam
push
cmp
or
fistpll
stc
fdivl
xor
inc
inc
jg
ds
cli
aaa
inc
sti
cli
push
cmpb
pop
push
or
xor
add
fsubs
and
scas
mov
mov
inc
andb
inc
push
leave
adc
int3
and
mov
into
inc
movsb
xlat
mov
ret
xlat
sbb
xor
test
inc
or
fldcw
clc
dec
cmpsl
xor
pop
lock
jnp
or
push
push
cmpsb
inc
mov
sbb
jae
add
cmp
imul
mov
insb
mov
loopne
pop
xchg
push
movsb
dec
push
push
mov
sarl
movsb
bound
in
jae
outsl
cmp
das
add
or
pop
mov
lcall
fld
xor
xchg
divl
pop
inc
cmc
data16
sti
test
lcall
repnz
movsl
stc
mov
hlt
out
mov
das
dec
dec
imul
popa
gs
push
int3
or
sarb
pop
lret
gs
sub
call
sbb
or
mov
sub
cmc
scas
adc
and
dec
jecxz
fcmovbe
or
aaa
popf
insb
es
add
rorb
andb
or
or
and
xchg
insb
leave
arpl
dec
loop
insl
shrl
pusha
shll
lret
add
add
mov
pop
das
nop
push
dec
jb
cmpsl
lret
jge
mov
lock
push
dec
pop
jge
pop
aad
adc
xchg
sub
adc
aaa
add
pop
dec
mov
jp
adc
xor
shl
imull
push
push
cmp
add
cmp
mov
cmpsb
sub
add
pop
testl
mov
sub
mov
lock
outsb
cmp
bound
push
mov
inc
out
ds
mov
cmp
js
data16
int
mov
in
in
cmpsl
adc
int
mov
pop
dec
sub
imul
push
stc
or
xchg
pop
sub
roll
sub
mov
pop
jb
into
arpl
cmp
jne
stc
ret
xchg
cmp
adc
mov
push
inc
aam
aam
inc
mov
xchg
shll
inc
push
inc
pop
repnz
loope
pop
inc
xchg
adc
and
lret
loope
into
adc
shrl
mov
sub
enter
sbb
sbb
jne
std
inc
jns
jecxz
fsts
mov
addr16
jmp
test
add
aaa
mov
fiaddl
mov
out
scas
enter
cmp
inc
and
and
test
jnp
in
or
push
mov
sbb
repnz
out
cmp
adcb
fistps
push
xor
and
stc
stos
aas
mov
mov
in
jbe
std
je
lret
and
or
pop
mov
rcl
rorl
adc
fdivrp
mov
push
lret
xor
xchg
inc
push
bswap
and
pop
js
imull
mov
mov
inc
xor
imul
push
cmpsb
mov
aad
cs
popa
cmpsl
adc
out
aad
dec
ds
and
cli
jecxz
ljmp
pop
mov
hlt
lods
out
cmpsb
loop
int3
jo
lret
pop
jnp
push
mov
not
fistpl
adc
inc
jno
or
pop
enter
push
negb
outsl
stos
cmp
flds
dec
ror
leave
or
pop
incb
outsl
and
sub
out
movsl
gs
and
enter
jge
sub
lds
ljmp
jne
mov
mov
clc
das
or
and
mov
or
or
fldz
cmp
or
pop
insb
daa
jnp
repnz
or
ror
dec
repz
fs
mov
out
inc
cmp
adc
pop
aam
imul
sbb
loop
vpsllq
cmp
sbb
xchg
sbb
addb
adc
jmp
sub
sbb
ds
sub
mov
jmp
push
jnp
cltd
xchg
sub
cmpsb
and
mov
clc
bound
inc
or
sarb
gs
mov
xchg
jecxz
gs
push
and
mul
mov
es
fsubrp
cli
dec
add
mov
loopne
xchg
repz
sbb
fsts
jns
into
mov
or
fwait
pop
sbb
sbb
mov
aam
mov
pop
movsb
xchg
lock
shl
loop
mov
ljmp
or
lcall
xor
xchg
add
sti
and
rolb
xchg
jmp
lret
push
dec
jne
jge
sub
cmp
adc
xchg
in
jle
mov
adc
push
pop
inc
dec
lea
xor
lcall
mov
pop
pop
jns
push
stos
ljmp
mov
int
hlt
in
outsb
xor
inc
aas
mov
add
sub
inc
js
inc
mov
xchg
push
inc
jbe
dec
mov
cmp
xor
sub
in
test
sarl
sub
jle
lret
daa
leave
push
ret
or
jle
ror
and
es
loopne
jle
subl
pop
cltd
sar
aaa
scas
push
jmp
int
push
test
loope
xor
ja
jo
mov
pop
sub
test
adc
jne
adc
shll
jp
cwtl
fs
inc
addr16
cmc
arpl
mov
aam
lret
cmp
inc
pop
aad
push
adc
lret
fisubl
xor
cltd
xchg
add
popa
lahf
xor
outsb
and
sbb
xchg
jbe
jmp
out
stos
ljmp
add
dec
vunpckhps
std
mov
cmp
xchg
pop
cmpsb
push
lahf
sub
sar
pop
test
scas
in
push
out
outsb
fdivrs
adc
js
xchg
hlt
cmp
ficompl
push
cmp
sti
sbb
fnstcw
jne
push
stos
movsl
leave
push
lea
push
push
jmp
out
iret
pop
dec
push
loop
jne
add
xchg
pop
imul
sti
sbb
sub
push
or
sbb
ljmp
or
jbe
iret
je
fdivrs
arpl
mov
inc
fsubrs
ret
or
sbb
iret
or
push
jae
push
inc
push
lret
add
cmc
and
aad
or
frstor
and
push
pusha
mov
xchg
xor
dec
lods
inc
je
popa
dec
lahf
push
das
xchg
roll
enter
inc
popf
mov
lret
jo
dec
sbb
in
inc
pop
jnp
mov
sub
int3
fistpll
sub
sub
xchg
lcall
dec
fs
sub
mov
xchg
inc
push
xchg
sbb
decl
sub
inc
dec
bound
imul
add
test
adc
sbb
and
lods
sub
ffree
add
arpl
and
pop
jge
js
and
test
insb
aas
in
imul
cli
stos
loopne
in
mov
inc
cmp
incl
mov
xor
sub
cli
sbb
cmp
lock
push
sub
jno
outsl
mov
cmp
jno
xchg
inc
cmp
xor
adc
add
pop
jnp
loop
insb
mulb
jl
inc
popf
and
pop
rcl
rorl
xor
hlt
call
lahf
pop
mov
xchg
xorb
cli
mov
ret
scas
or
mov
add
pop
cmp
int3
mov
repz
pop
test
sti
pop
pop
sahf
test
sub
aad
cwtl
mov
cmp
and
jle
stos
mov
ret
scas
outsl
out
aaa
scas
pop
adc
or
jp
ss
or
sub
ret
dec
mov
pop
mov
or
xchg
push
jnp
sub
mov
ljmp
mov
jae
mov
adc
js
pop
push
stos
adc
inc
push
mov
push
popa
jle
push
inc
je
iret
inc
jns
fs
aad
imul
insb
lods
cmp
lret
dec
or
pop
dec
out
or
scas
sbb
xlat
push
lcall
push
lahf
outsb
filds
sbb
xchg
dec
es
push
pushf
and
mov
mov
mov
insl
inc
lock
jg
jecxz
popa
call
mov
xor
dec
outsl
cmpsl
in
push
add
sub
adc
xchg
incb
mov
cltd
fsubrs
rorl
pop
test
notb
ficomps
or
sbb
jecxz
lods
dec
insl
sbbb
repnz
cmp
inc
loop
xchg
dec
mov
fs
subb
xchg
test
idivb
inc
adcb
imul
fdecstp
mov
push
mov
test
pop
sarb
jg
and
or
adc
and
stc
or
mov
or
jb
out
scas
adc
pop
ret
in
outsl
into
gs
push
jl
jge
sbb
or
xor
xor
pop
in
inc
lret
cmp
loopne
dec
push
ds
jb
sti
push
or
jne
cmp
loope
dec
dec
pop
rcll
roll
repz
or
lret
test
push
fwait
xlat
xchg
dec
pop
inc
mov
push
scas
add
inc
jnp
sti
fst
pop
xchg
mov
xchg
stc
je
or
xor
add
push
push
cmp
jmp
mov
push
aad
mov
cltd
push
pop
ret
xor
fisttpll
and
jmp
or
mov
jns
sub
fistl
stos
adc
jae
in
pop
push
mov
fistpl
jecxz
jo
dec
cmpb
mov
in
jl
movsl
dec
cmc
repz
das
loop
mov
sbb
mov
repz
push
fwait
lock
mov
xor
cltd
in
cmpsl
adc
and
dec
imul
mov
xchg
cmp
js
sub
in
imul
inc
mov
xor
push
xchg
lock
adc
sub
arpl
ret
fcompl
les
movsb
jp
aad
jl
and
mov
pop
orb
mov
hlt
test
rcll
xchg
cli
dec
ficoml
mov
sbb
adc
scas
popa
jge
adc
and
iret
xchg
or
pop
mov
lahf
inc
cmp
adc
push
fstpl
push
das
pop
and
popf
daa
dec
jg
test
and
jo
push
cld
repnz
mov
shlb
mov
aaa
adc
inc
jp
mull
int3
aad
sbb
gs
filds
cld
and
popf
scas
xchg
cwtl
cmp
mov
mov
pop
psllq
fisubrl
cli
jge
jb
inc
mov
jmp
mov
xchg
adcb
int3
mov
sbb
xchg
les
xchg
les
clc
xor
or
shlb
cwtl
movsl
push
xor
nop
int3
pop
faddl
add
xor
push
sub
lahf
scas
and
sbb
mov
mov
or
pop
or
pushf
inc
add
cmp
and
fstp
push
pop
popf
and
nop
add
out
dec
cmp
cmp
out
cmpsl
jbe
rcrl
fnstenv
jbe
add
aas
pushf
dec
into
gs
add
js
jbe
xchg
pusha
push
test
xchg
stc
xlat
xorl
mov
push
std
rcrl
adc
pushf
mov
mov
scas
add
aas
or
aaa
pop
add
scas
inc
bound
test
std
inc
inc
jecxz
mov
xchg
mov
push
push
cwtl
pop
inc
mov
cmpsl
jnp
aam
dec
incl
test
int3
cs
leave
rcrb
dec
stc
pusha
or
fstpt
add
xchg
or
aas
push
cmpsl
push
popl
mov
arpl
and
jg
aam
nop
or
cmp
inc
inc
dec
jb
into
in
dec
ds
push
insl
adcl
xchg
mov
loopne
call
pop
jb
call
mov
aam
ror
fs
sbb
xor
lds
rcrb
fildll
jno
xchg
jp
sbb
push
mov
popa
rcrb
adc
adc
loopne
inc
jae
and
push
push
sbb
pop
or
jle
xchg
ss
sbb
inc
mov
inc
mov
xchg
je
mov
xor
push
divb
sub
mov
cmpsb
cmp
and
dec
test
es
fs
pusha
mov
movsl
pop
xor
push
pushf
xor
sarb
lcall
pop
mov
popf
mov
popf
mov
mov
mov
fadd
mov
inc
mov
pop
xchg
aad
stc
cwtl
xchg
and
add
aas
pop
cs
mov
cmp
out
cli
xchg
insl
int3
pusha
test
xor
add
xor
insl
dec
dec
adc
sub
imul
mov
sbb
cmpsl
and
jb
lods
subb
ja
sbb
and
pop
cmpsl
push
mov
in
xchg
into
aam
add
mov
mov
mov
pop
in
sbb
scas
lret
or
test
gs
es
cltd
push
test
xrelease
mov
push
clc
sub
sub
lods
and
out
mov
or
out
and
andb
push
ficoms
mov
daa
inc
push
xchg
push
addl
clts
cmp
and
mov
inc
jg
dec
fucom
pushf
out
jge
aad
cltd
lahf
dec
and
push
mov
mov
out
sbb
push
jge
dec
out
popa
aad
sub
xlat
xlat
mov
negl
sbb
in
lahf
std
popf
ret
inc
mov
pop
jnp
sbb
sub
pop
xchg
mov
subl
mov
xchg
clc
inc
mov
add
mov
push
jg
fcomp
bound
sbb
add
cwtl
mov
dec
mov
jo
add
notl
shrl
js
push
sbb
stos
and
pop
push
sti
xchg
mov
rcrl
sub
leave
xchg
sbb
and
mov
std
insb
jbe
insb
sti
rcrb
loopne
loop
dec
sahf
sub
scas
lds
add
fisttpll
add
loopne
pop
lock
xor
and
lret
pop
and
into
sub
inc
sub
xchg
test
movsb
pop
jbe
sub
xor
shrl
std
test
and
stos
xor
push
or
insb
jae
inc
jl
sbb
popf
test
outsl
jne
loopne
adc
push
in
pop
xchg
adc
inc
shll
inc
sbb
mov
sbb
cmp
push
rcrb
jge
xchg
dec
cwtl
stos
add
push
fwait
push
dec
add
mov
cmp
cmp
pop
cmp
in
add
and
mov
jns
movsl
clc
inc
pop
je
test
dec
cmp
das
dec
test
dec
cltd
mov
jg
aad
pop
xacquire
jl
pop
push
repz
notb
mov
sbb
cmp
mov
xchg
push
loop
ret
pop
mov
insl
xor
jmp
push
mov
inc
fwait
pop
hlt
jns
sbbl
mov
xchg
cmpsb
cmpsb
aam
fsubl
push
daa
out
sbb
jg
insl
je
repnz
rcrb
mov
jno
loop
out
cmp
mov
fldl
mov
xchg
xchg
jmp
js
hlt
imul
xchg
lret
jecxz
stc
jb
and
xor
ljmp
lock
adc
jne
mov
inc
mov
std
lods
sub
jle
and
or
jbe
fstp
mov
popf
jmp
daa
mov
xchg
ret
jmp
out
repz
mov
push
add
not
sub
mov
idivl
mov
adc
sub
test
add
arpl
or
je
jmp
push
pop
jb
cmp
inc
jo
mov
xor
movsb
mov
aad
mov
adc
dec
jmp
mov
sub
outsb
sub
outsl
dec
in
mov
and
test
inc
dec
dec
popa
adc
xlat
pop
push
jbe
lods
pop
mov
jecxz
cwtl
adc
fcoml
rclb
inc
inc
mov
mov
lcall
fsub
cltd
insl
jge
gs
mov
iret
fwait
insb
jecxz
push
shl
inc
add
add
jg
add
sbb
pop
fwait
aaa
ffree
sbb
das
ror
shlb
cmpsb
clc
popf
dec
sti
push
popa
sbb
fwait
subb
mov
arpl
mov
sub
aam
inc
sbb
out
test
xchg
inc
jp
aad
pusha
int3
or
cmp
jo
or
xor
cmp
sti
push
test
adc
mov
push
mov
xchg
mov
arpl
push
add
push
aam
fucom
sub
and
movsb
and
mov
out
cmp
pop
and
insl
push
pop
lea
lcall
or
cmpsb
shll
dec
ret
mov
xlat
jle
mov
xchg
jg
cwtl
jge
mov
int3
lods
popf
inc
imul
adc
sbb
nop
leave
rcrb
fistps
cld
clc
jmp
adc
fdivrl
lds
nop
fwait
popa
mov
ret
sub
insb
or
pop
cmp
lret
sub
imul
iret
movsb
lret
loopne
fcmovnu
addl
dec
cmc
sbb
sub
je
adc
add
sub
and
cli
bswap
mov
mov
loop
inc
jl
repz
gs
and
mov
xor
sbb
pop
dec
push
sbb
hlt
dec
pushl
xor
ret
dec
fimull
cmp
mov
mov
mov
sbb
test
mov
loop
in
aas
mov
xchg
push
pop
mov
leave
sbb
mov
sbb
adc
stos
scas
fisttpll
jbe
mov
paddusb
lahf
xchg
xchg
xor
mov
dec
bound
pop
mov
dec
popa
icebp
scas
pop
popl
add
push
cmpsb
dec
mov
popa
pop
sti
loope
scas
sub
pop
bound
and
gs
cmpb
aad
pop
xchg
xchg
and
lea
iret
xchg
into
push
inc
jne
mov
filds
push
push
adc
testl
jge
test
ret
in
pop
push
call
mov
stc
xchg
sub
pop
dec
inc
ljmp
mov
bound
jl
nop
insl
in
inc
loop
aas
jne
xor
cltd
dec
pushf
add
movsb
push
mov
orb
insl
inc
and
add
mov
xor
mov
xor
rcr
fistps
cmp
xchg
mov
mov
fwait
movsb
mov
pushf
or
jne
in
xchg
and
in
sahf
in
mov
je
test
stc
push
mov
push
gs
dec
push
dec
mov
scas
sbb
or
insl
fisubl
data16
shlb
dec
in
in
xor
jecxz
xor
dec
ss
add
mov
sub
pop
test
pop
loop
push
repz
inc
cmp
and
data16
or
pushf
fldcw
sbb
jg
lock
push
loop
dec
mov
rorl
movups
and
fbld
adc
stos
lods
das
out
and
pusha
pushf
rcl
cmpsl
jg
popa
sub
mov
mov
mov
push
movsb
lcall
aaa
inc
sub
xlat
leave
cmc
cmpb
push
repnz
data16
dec
ret
ljmp
sahf
mov
sbb
les
cmc
out
rolb
loop
loopne
fildll
mov
mov
fimuls
and
or
imul
jnp
mov
enter
mov
addr16
dec
mov
cwtl
pop
movsl
dec
test
fsts
js
pop
iret
mov
pop
cmp
sub
insb
mov
pop
mov
imul
in
cmp
das
xchg
push
jge
mov
test
es
push
repnz
push
fmuls
std
sub
pop
iret
mov
sub
jae
pop
xchg
into
add
mov
push
out
sbb
jmp
xchg
xchg
ljmp
cs
cmpsl
add
test
test
push
dec
lods
ret
pop
lock
cmp
dec
add
lret
lds
cmpsb
mov
adc
adc
mov
mov
imul
sbb
sbb
leave
dec
int
sbb
dec
outsl
cli
icebp
stc
mov
sbb
inc
jl
sub
and
mov
jmp
stos
shll
dec
loopne
insl
sahf
out
imul
cmp
data16
pop
mov
rcll
add
or
dec
xor
adc
popa
mov
icebp
int3
mov
cmp
jecxz
dec
adc
sub
gs
push
and
movsb
jne
mov
mov
cmc
jl
iret
call
mov
out
inc
insl
ret
sbb
insb
push
or
mov
jecxz
sbb
divl
fiaddl
orb
popa
inc
rcll
sahf
sub
fs
gs
loope
divl
loope
jnp
mov
mov
cmp
push
inc
icebp
les
jle
movsb
test
lcall
aas
fwait
push
mov
xchg
push
adc
lock
mov
push
bound
mov
pmaddwd
push
fbld
pop
jo
gs
jbe
int
mov
fsubrl
mov
rcll
and
and
mov
mov
clc
cmp
sbb
out
or
scas
int
aas
add
sub
push
frstor
cmpsl
jbe
dec
filds
fdiv
and
xorl
mov
push
jns
adc
ljmp
jg
out
mov
mov
cmp
sbb
mov
pusha
mov
fistl
jbe
and
pop
inc
xchg
mov
mov
mov
movsl
sub
in
push
mov
push
lcall
adc
movsl
lods
mov
lret
ret
xor
mov
cld
fmul
push
push
jmp
jbe
pop
mov
jl
lds
mov
xor
or
xor
std
sub
xchg
xchg
mov
xor
and
xchg
movsb
dec
cmp
pushf
mov
mov
out
clc
test
and
jne
sarb
push
or
movsl
in
je
aaa
pop
popf
push
jmp
xchg
out
sub
js
mov
sub
jp
in
mov
push
sub
xor
push
jge
pop
and
sbb
inc
xor
sbbb
imul
inc
xchg
idiv
xchg
nop
adc
mov
jns
jle
sub
cld
jo
cli
adc
pusha
push
aad
sti
out
subb
sub
inc
std
mov
imul
mov
aaa
call
mov
movb
dec
and
xchg
into
push
rorl
movb
shlb
mov
xchg
inc
mov
nop
pop
loope
imull
cmp
mov
and
add
sub
add
push
mov
addr16
in
mov
xchg
jnp
leave
jmp
mov
mov
mov
jne
push
xchg
and
aaa
leave
xchg
movsl
sbb
ja
mov
add
aam
cs
test
ss
jmp
lock
lods
or
out
fisubl
jae
pop
pop
repnz
jo
dec
outsl
or
add
data16
or
dec
dec
ret
jle
mov
stc
mov
dec
xor
mov
lds
or
or
pushl
enter
push
sub
push
xchg
xchg
and
lea
out
sbb
or
movsl
inc
xchg
popf
rclb
lds
fwait
cwtl
mov
pop
es
inc
into
mov
call
xchg
cmp
sbb
cmc
insb
rcrb
std
dec
cmpsb
and
paddq
es
add
popf
push
and
add
mov
adc
comiss
int3
in
push
pusha
jne
xor
sub
stc
inc
hlt
mov
push
jmp
xchg
xchg
lds
cwtl
and
sarl
mov
sub
and
gs
ja
fnstsw
cmpsl
mov
or
jge
xor
cmpsb
mov
push
ficoms
lods
testb
sub
sarl
out
adc
fidivs
movq
push
cmpsl
test
mov
orl
xchg
adc
mov
jl
xchg
adc
xchg
mov
stos
sub
xor
xor
cmp
ret
push
adc
aas
and
cmpsl
dec
out
sbb
jp
test
xchg
dec
dec
aaa
cltd
add
sbb
js
dec
sti
stc
clc
inc
cwtl
mov
popf
call
mov
or
xor
mov
ds
out
lods
in
les
mov
shlb
int
cmc
movsb
xlat
xlat
iret
cwtl
pop
call
xlat
mov
xor
gs
addr16
push
pop
ret
imul
adc
scas
jo
sub
cltd
sbb
mov
fwait
cmp
dec
ja
mov
cmp
xchg
out
mov
outsb
loop
call
js
out
dec
repz
adc
or
dec
int
stos
pop
pusha
insb
dec
int
scas
xchg
aad
scas
cmc
fwait
sarl
aaa
xchg
insl
dec
ljmp
jg
mov
sub
mov
repnz
aaa
in
sbb
leave
pop
cwtl
sbb
loop
add
dec
cmp
sahf
lret
movntq
jl
or
xor
push
inc
cmc
push
add
push
inc
jb
mov
mov
jmp
in
xchg
push
xlat
xchg
ret
fs
cmp
test
and
sub
dec
aaa
rolb
pusha
jns
and
push
mov
lret
pop
loope
stos
cmp
call
test
idivl
outsb
mov
push
sub
cmc
and
cmc
dec
test
in
test
call
out
jg
inc
lods
loope
outsb
push
push
adc
mov
mov
dec
outsb
bound
cmpb
aad
int
popa
mov
sahf
rcrb
es
inc
push
and
or
cld
enter
aas
add
lahf
mov
mov
dec
or
jno
jo
push
pushf
sub
int
lahf
jecxz
inc
mov
add
cmp
xor
mov
sub
jl
pop
pop
jne
cmp
bnd
add
movsb
lret
adc
jp
push
xchg
pop
mov
frstor
mov
dec
pusha
cmpsb
xchg
test
loop
test
leave
cmp
xlat
jl
pop
push
repnz
mov
jae
adc
adc
lret
es
jl
pop
jne
adc
outsb
pop
sbb
mov
rcr
mov
out
stc
cmp
cmpsb
fildll
add
push
adc
out
or
fdivl
fisubrl
inc
dec
jecxz
sub
mov
cmp
ljmp
mov
xlat
jb
xor
je
in
inc
inc
or
cmc
cmpsb
add
lcall
nop
push
leave
pop
or
aaa
push
mov
xchg
push
xlat
jbe
push
jbe
lods
jp
mov
orb
sbb
enter
jnp
aas
cmp
and
mov
and
icebp
aam
testb
lods
and
jo
sub
mov
sub
mov
lahf
mov
push
rolb
xchg
mov
aas
sarl
jns
mov
or
aas
arpl
fisttps
es
mov
pop
jg
push
icebp
push
into
jge
stc
xchg
movsl
lahf
ds
and
adc
or
in
ds
dec
idivl
push
inc
mov
mov
sub
rol
bound
pusha
insl
imul
out
push
cmp
das
or
and
aaa
push
adc
repz
rcrl
jle
lods
ret
jmp
adc
andl
xor
test
sti
loope
in
lock
adc
mov
xor
out
cmpsl
repnz
call
test
std
movsl
scas
jb
mov
sbb
xor
jo
and
push
inc
dec
mov
rcr
aad
aam
xchg
popf
outsb
pop
push
adc
sub
pop
inc
ljmp
cmc
mov
into
jb
push
or
scas
pop
les
imul
js
aas
jbe
and
xchg
sub
scas
out
xchg
adc
sub
jnp
inc
out
xchg
cmp
jne
mov
cmp
inc
cli
mov
addb
lcall
pop
data16
shrl
sub
insb
rolb
inc
cmp
ret
mov
lods
test
mov
inc
adc
sbb
mov
les
pop
sbb
mov
iret
mov
nop
fsubrs
mov
xor
clc
daa
and
int3
sbb
pop
cmp
dec
or
xor
mov
dec
lcall
mov
bound
aad
loop
cli
pop
cmpsb
xchg
fwait
sbbb
nop
sbb
or
andb
or
ret
xchg
enter
xchg
lods
mov
dec
push
sub
inc
out
lock
xchg
dec
pop
repz
xchg
pushf
or
sbb
vhsubps
mov
inc
xchg
orb
cvttps2pi
iret
insl
cmp
or
mov
xchg
lods
cmp
fidivs
dec
insl
int
jnp
cmc
jle
ja
popf
movsb
insb
pop
fbstp
inc
adc
iret
pop
fidivs
fistpll
jns
xor
jecxz
sarl
adc
or
xchg
xchg
repnz
xor
pusha
out
mov
mov
sub
repz
push
lret
push
lds
or
adc
dec
sub
stos
das
scas
adc
dec
mov
xor
inc
divb
mov
into
lock
daa
cmp
mov
shll
mov
mov
mov
push
adc
in
scas
outsb
aam
cmp
lods
outsb
shlb
ljmp
ja
fnstenv
in
push
adc
out
daa
dec
out
push
or
xchg
lcall
push
std
je
out
xchg
jno
and
pop
data16
push
stc
adc
pop
hlt
gs
mov
or
and
jb
inc
inc
cli
inc
pop
gs
test
cmp
mov
ss
lock
aad
jge
les
sti
or
cmp
aad
gs
rolb
sbb
xor
and
mov
xor
es
sti
jne
dec
repnz
or
fists
sbb
cmp
sub
xor
leave
rolb
pop
stc
aad
popf
cmpsl
jge
testl
jl
loopne
inc
push
popf
mov
or
dec
das
inc
xchg
sbb
lcall
push
inc
popf
cld
adc
loop
cmpsb
push
insb
inc
decl
addb
push
mov
cmpsl
add
sub
js
insl
ljmp
and
mov
or
outsb
lock
jo
lret
outsl
cmp
fwait
adc
sbb
cmpsl
inc
sbb
cld
std
cmp
and
or
loop
pop
xchg
push
push
int
fldcw
stos
in
push
sub
mov
sti
pop
test
stos
push
sub
pop
mov
jns
sub
popa
xchg
push
jle
test
xchg
clc
scas
sbb
jp
mov
or
and
sbb
add
loop
js
sti
mov
mov
inc
out
pop
sub
jno
in
or
adcl
push
mov
outsl
sti
rcll
mov
jno
lods
rorl
fwait
xchg
sub
xchg
xchg
sub
mov
fs
fistl
push
cmp
and
clc
scas
jecxz
les
aad
dec
mov
sub
inc
mov
ja
push
jmp
jecxz
jp
cs
jmp
sbb
inc
pop
pop
js
shrl
and
insb
repnz
sub
data16
inc
ucomiss
rcl
adc
add
mov
pop
pop
ja
jnp
out
jmp
sbb
sub
sub
sbb
test
adc
mov
inc
jecxz
dec
pop
pop
insl
cltd
addr16
scas
sbb
adc
mov
inc
inc
inc
mov
cmp
frstor
jge
xor
pop
orb
sbb
shll
int
enter
sbb
cmp
in
push
xchg
inc
push
pop
push
lds
add
jb
sbb
mov
push
inc
or
lods
push
pop
mov
cmp
inc
data16
jmp
aaa
push
cwtl
les
icebp
loope
push
pop
dec
adc
rcll
pop
into
test
cmp
mov
clc
xchg
xchg
and
or
mov
cmpsb
sub
sbb
pushf
rcl
and
scas
pop
xlat
xchg
and
sti
inc
and
or
dec
jne
imul
mov
gs
shrl
add
or
sub
push
divl
rcrl
xor
scas
add
xchg
lahf
mov
pandn
mov
push
jo
ret
jl
add
loope
mov
pushf
fmull
cmp
push
out
out
xor
mov
jne
xchg
sbb
nop
mov
bound
xchg
jo
sbb
push
push
dec
aas
cmp
mov
xchg
xlat
sbb
sub
mov
add
sub
adc
jne
push
lods
pop
leave
adc
mov
cmp
jge
xchg
cltd
lcall
gs
xchg
aam
lcall
mov
cli
fisubl
sub
dec
mov
jecxz
bound
mov
fcoms
stc
push
jae
jns
je
cwtl
dec
jp
inc
fdivrl
inc
je
mov
sub
cltd
shrb
outsb
sbb
lds
xchg
pop
insb
sub
sahf
sub
push
clc
clc
lods
push
or
mov
inc
dec
rclb
aam
add
in
mov
jbe
inc
mov
mov
mov
and
xorl
sbb
arpl
repz
je
sub
pusha
in
je
dec
mov
into
in
add
cmp
shrl
push
fwait
mov
les
insl
xor
adc
addr16
jmp
dec
push
ljmp
add
mov
push
hlt
adc
inc
adc
push
mov
and
cmp
cmp
cmpsb
addr16
enter
movsb
inc
adc
cmpsl
ret
clc
ret
push
push
mov
rcr
hlt
mov
sti
scas
adc
sbb
sub
jae
fnstcw
sahf
xchg
xchg
sti
data16
sti
sbb
cmp
popa
dec
pop
imul
das
or
sahf
sahf
sahf
sbb
ljmp
ja
mov
xor
jb
cwtl
nop
aam
fbld
cmp
ja
dec
xchg
mov
arpl
mov
push
sub
or
pop
adc
enter
mov
or
loope
lds
out
or
sbb
and
pop
arpl
jbe
mov
push
pop
mov
mov
leave
xor
fmull
or
sahf
out
unpcklps
xchg
cmpl
fidivrl
leave
push
mov
push
pop
push
outsl
or
add
das
xchg
aaa
test
cmp
push
out
rcrb
dec
pop
imull
into
inc
lret
pushf
add
lock
test
add
insl
mov
addr16
and
and
sub
sub
push
jo
inc
push
leave
cmp
jg
inc
dec
mov
ljmp
inc
cmpsl
sbb
pop
or
jae
sbb
adc
push
xor
mov
int3
push
push
and
mov
cmp
xor
push
adc
mov
inc
jmp
cs
sbb
pop
inc
sbb
cli
pusha
pop
jg
xchg
frstor
lret
xchg
sbb
mov
pop
sbb
outsl
jecxz
loopne
lret
scas
mov
ljmp
pop
lea
add
sahf
or
call
xchg
add
or
inc
pop
negb
scas
sub
pop
jl
popa
dec
sbb
les
mov
and
popa
mov
andl
mov
sbb
xor
fisttpl
js
mov
nop
test
leave
sbb
aas
adc
sbb
lahf
fcmove
sbb
cmc
ss
gs
sub
aam
and
mov
push
std
push
lcall
adc
sbb
pop
in
xchg
data16
ja
xchg
movsb
out
pop
xchg
inc
popf
in
ds
outsl
test
add
or
inc
mov
data16
adc
ret
xlat
xor
movb
push
hlt
xchg
mov
or
xor
pop
outsb
in
xchg
pop
ja
cld
sub
stc
add
xor
and
dec
cmpsb
adc
out
test
jmp
cltd
fildll
mov
out
mov
cmpl
sbb
or
pop
arpl
mov
imul
out
arpl
dec
adc
mov
xlat
mov
mov
inc
push
es
xor
sub
arpl
sub
outsb
cmpsb
push
je
leave
and
and
xchg
add
push
mov
push
jmp
in
rep
cmp
imul
int3
outsb
imul
aas
test
in
mov
sbb
mov
pop
mull
in
adc
or
fsubrl
jo
iret
insb
insb
popf
dec
int3
std
mov
xchg
test
lcall
dec
loopne
idivl
mov
push
jl
lahf
hlt
test
or
call
aaa
lods
in
jle
inc
mov
mov
lods
fs
add
push
mov
xchg
push
scas
aam
push
push
sbb
in
jle
mov
xchg
ret
push
pop
cmp
nop
mov
pop
xchg
loop
ret
insl
add
pop
jno
inc
jg
jmp
xchg
and
or
ficoms
or
aam
inc
scas
test
dec
int
int
sub
xor
sbb
add
pusha
and
pushf
sub
bound
mov
imul
or
push
dec
sbb
fwait
xchg
shlb
jae
test
mov
jno
add
dec
push
test
xchg
bound
push
out
mov
lods
stc
add
pop
cwtl
mov
fsubrs
push
adc
push
cmpl
daa
push
aam
mov
scas
push
mov
adc
outsb
out
pop
xchg
add
sbb
inc
adc
adcb
lods
jnp
in
imul
adc
mov
mov
xor
jle
and
mov
dec
cmc
jg
cltd
push
jae
ds
jle
xchg
mov
adc
sub
iret
and
mov
iret
sub
inc
shrb
test
stc
pop
lcall
icebp
lods
sub
in
push
inc
mov
mov
loope
gs
icebp
mov
add
jp
sub
ja
movl
lret
fmull
addr16
in
les
sub
cld
cmp
lock
mov
mov
lods
sbb
fwait
jne
sahf
sub
mov
int
ficoms
adc
lods
stc
ret
nop
negb
jb
loopne
mov
aad
xchg
imul
shrb
in
icebp
adc
xchg
scas
cmp
fstl
add
mov
dec
sbb
jb
xor
aam
dec
int
sub
push
cmpsb
lea
mov
xchg
inc
jno
jl
mov
hlt
leave
pop
mov
fcompl
mov
add
dec
and
push
xor
xchg
xchg
divl
and
or
aas
cmp
fnstenv
clc
imul
lcall
emms
mov
sbb
push
mov
cwtl
out
pop
nop
in
pop
xor
ds
shl
mov
sub
cld
mov
mov
stos
std
adc
daa
shll
sub
insl
test
jp
jle
sti
sbb
inc
dec
les
jno
popf
imul
shll
and
and
adc
je
and
stos
stc
push
inc
stos
push
imul
inc
jecxz
mov
ret
sub
ror
imul
addl
dec
pushf
xlat
push
insb
mov
sti
std
jge
arpl
add
add
lds
out
arpl
cmpsl
or
lret
mov
mov
loopne
out
push
sbb
cmpsl
sti
xor
fdivs
dec
mov
stc
adc
aaa
push
outsb
push
movsl
outsb
enter
sub
sahf
lcall
bound
pcmpgtb
or
sub
cmpsb
icebp
rcrb
rcr
sbb
jno
test
jnp
inc
mov
push
repnz
mov
outsl
dec
mov
mov
inc
xchg
lret
add
divl
push
push
test
lret
enter
inc
or
or
mov
sbb
pop
cmpsl
fldl2t
mov
fldcw
inc
pop
pop
icebp
adc
in
cmpsb
stos
mov
stos
add
sub
push
insb
cmpsb
and
sub
mov
pushf
xor
mov
xor
push
mov
stos
xchg
add
cmc
rorb
jecxz
dec
out
add
out
and
inc
int3
insb
fimuls
push
mov
in
imul
mov
xchg
xlat
pop
sub
int
mov
mov
jb
jg
cmpsb
mov
das
cld
sar
add
adc
fnstsw
xchg
push
push
addr16
andl
mov
jo
mov
hlt
shlb
repz
dec
ljmp
mov
adc
shrb
mov
and
lahf
iret
std
dec
dec
fs
inc
mov
shl
mov
imul
imul
nop
in
sub
push
rdpmc
hlt
aad
lcall
lods
aaa
mov
test
lcall
shl
xchg
sti
mov
mov
lods
inc
call
loop
mov
pusha
mov
arpl
sub
cmp
and
xchg
not
xchg
and
mov
adc
and
in
or
shrl
cmp
das
push
xor
dec
jecxz
bnd
sbb
pop
mov
repnz
nop
enter
lods
push
xor
and
shll
and
xchg
cmp
sbb
arpl
inc
jle
adc
sub
out
jae
inc
mov
nop
rcrb
inc
cmp
aaa
mov
int
pop
daa
add
jbe,pn
dec
es
push
sar
out
stos
cmpsl
enter
mov
add
dec
inc
stos
in
into
out
mov
flds
xor
jb
lcall
push
cmc
orl
stos
int3
push
pop
push
nop
push
hlt
stos
or
insl
adc
call
jp
inc
mov
pop
in
inc
imul
divl
arpl
cmp
stos
push
sub
xchg
call
pop
in
cwtl
pop
scas
push
fisttpll
push
test
addb
loop
xchg
sbb
inc
jns
cld
ljmp
dec
mov
jle
dec
mov
sub
repz
cmp
cmc
insl
pop
mov
movsl
mov
xchg
jno
adc
out
enter
inc
push
dec
xor
test
les
xlat
repz
outsl
imul
pop
rolb
mov
inc
outsb
loope
divb
xlat
mov
clts
in
sub
adc
outsb
orl
out
test
mov
mov
jmp
mov
mov
adc
daa
push
push
xor
stos
inc
mov
mov
int
dec
inc
addl
and
mov
sti
sbb
xor
push
jbe
cmpsb
pusha
jmp
xlat
mov
mov
add
pop
nop
inc
push
inc
mov
adc
or
fs
inc
lea
pop
mov
jle
lahf
cmc
or
mov
fists
push
mov
pop
pop
mov
cmp
out
test
movsb
add
enter
daa
sbb
sbb
fbld
fxch
mov
dec
xchg
call
ss
sub
and
repnz
daa
movsl
pop
mov
int3
gs
bound
repz
lea
outsb
mov
sbb
mov
cmp
mov
pop
mov
xchg
push
pop
sbb
cs
lret
mov
jg
sbb
es
popf
inc
notl
lods
pop
fs
in
or
dec
lods
dec
pop
mov
repnz
out
aaa
xchg
aad
lea
movl
pop
int
and
dec
jb
aas
mov
lea
fwait
shrb
mov
mov
jp
or
sbb
or
repz
xor
mov
xorl
xchg
jb
mov
loopne
dec
xlat
pop
nop
add
cmp
push
jg
mov
stos
lret
dec
test
mov
jecxz
repz
mov
pop
sbb
mov
pop
add
test
mov
rcl
loope
sub
mov
mov
cmp
js
ljmp
xor
movsb
mov
inc
adc
loope
mov
fnstenv
cmpsb
push
xchg
out
std
int
cwtl
jge
nop
ljmp
lods
add
movsl
sbb
andl
sbb
cld
pop
outsb
jne
fwait
and
das
loope
fwait
sbb
cmp
sbb
jnp
pop
stc
cmpl
std
in
sbb
out
or
cmpl
mov
xchg
adc
mov
dec
roll
xchg
sub
out
adc
jno
pop
xchg
in
cwtl
inc
inc
mov
sub
cmp
sub
mov
flds
cmpsb
rclb
iret
dec
mov
ss
jl
and
rcl
mov
cmp
test
jnp
and
push
sub
aam
adc
jae
mov
or
sub
repz
cmpsl
xchg
icebp
scas
nop
shlb
flds
inc
shrb
lea
sbb
jno
js
sub
xchg
mov
popf
mov
xor
outsl
jle
mov
pop
pop
jb
stc
iret
dec
fistl
lods
add
push
aas
ljmp
leave
std
lods
xchg
std
jno
into
adc
mov
cli
loop
fistl
in
push
testl
pop
je
jbe
dec
xchg
cld
and
xchg
inc
out
and
jns
sar
mov
and
push
pop
dec
fidivl
pusha
out
cld
mov
pop
fisttps
cltd
cmp
test
iret
je
cmpsb
mov
push
repz
xchg
movsb
jmp
ja
inc
cltd
ds
jmp
idivl
add
xor
aad
popa
adc
cwtl
je
sub
jns
or
pop
ds
movsl
stos
out
inc
sti
mov
into
jno
cltd
dec
aam
aas
push
xor
dec
stc
nop
add
or
cmp
lahf
addr16
push
push
or
cwtl
sub
pop
ljmp
inc
iret
orb
fcmovbe
in
cwtl
xchg
lret
sbb
push
stos
push
mov
push
jecxz
in
adc
sahf
push
fldenv
sub
in
repz
mov
in
clc
ljmp
xchg
pusha
lods
cmp
jne
mov
fists
xor
adc
pop
aas
xlat
clc
xchg
cmp
loope
rcrl
pop
xchg
or
insl
arpl
sbb
sti
push
test
into
ret
mov
sbb
fstps
push
pop
shrd
cmp
cmpsb
sbb
repz
sub
shl
lock
push
fs
xchg
mov
enter
jmp
repz
icebp
mov
xor
pop
lahf
repz
ljmp
lret
fadd
in
add
jl
ret
cmpsb
popa
mov
jae
push
out
pop
jge
loope
xor
jbe
mov
popl
daa
adc
lea
dec
loopne
inc
and
popf
add
push
fsubrs
dec
fwait
jp
loope
pop
loop
test
cwtl
jns
dec
cmpsb
pushf
andl
mov
adc
sbb
movb
dec
pop
inc
mov
or
mov
mov
ja
test
roll
cmp
daa
mov
addr16
xchg
aaa
shll
fiaddl
mov
xchg
stc
hlt
pop
jbe
ss
subb
int
jg
test
out
insl
andnps
adc
add
mov
gs
push
push
dec
sti
jns
fwait
mov
cs
rcll
leave
iret
aaa
jge
push
sbbl
sti
pop
int
add
ljmp
pop
test
sbb
enter
cmpsl
cld
and
push
or
nop
add
cli
sub
mov
xchg
cli
data16
rcl
pop
iret
jns
sbb
imul
pop
dec
lret
incl
dec
fs
ljmp
or
nop
mov
jg
cmp
adc
inc
inc
idivb
negb
sub
sbb
pop
clc
int3
es
sahf
mulb
jp
enter
mov
sub
addl
int
ret
mov
mov
enter
xchg
pop
mov
shlb
push
enter
sub
aad
ds
nop
adc
pop
in
push
call
jns
jle
rolb
or
data16
pushf
sbb
jno
dec
dec
xchg
fcoml
aad
mov
pushf
das
push
imul
bswap
cs
ds
test
cmp
sbb
out
lret
imul
repz
adc
mov
sbb
xchg
lahf
adcb
cwtl
ffree
dec
cmp
add
das
xor
jle
dec
and
cmc
dec
js
das
lods
shlb
mov
in
cwtl
icebp
dec
cmp
add
sub
mov
rorb
xchg
bound
sub
pop
dec
xchg
and
lods
loope
into
cld
cs
lcall
sarl
mov
bound
mov
incl
xchg
inc
in
push
out
loopne
cli
je
or
imul
xchg
mov
add
rorl
imul
push
iret
dec
inc
cmp
lcall
and
movsb
xor
add
push
mov
sub
xchg
lods
jno
mov
loop
inc
xchg
mov
cmp
lods
in
inc
cmp
mov
rcll
add
cmp
add
adc
adc
mov
testl
inc
jle
push
loope
shlb
pop
lahf
shll
sbb
fsubr
fdivp
bound
or
ret
inc
cmp
lret
and
int
and
outsb
gs
call
push
arpl
dec
or
adc
icebp
cs
and
inc
lea
fdivs
test
rcrl
mov
fcomps
popf
aaa
cltd
xor
add
popf
dec
push
dec
or
inc
and
fdivrs
sahf
jb
push
and
ss
or
add
or
mull
xor
xorb
adc
sub
imul
lds
and
adc
lret
cmpsb
xchg
xlat
cmpsl
mov
and
jns
pop
sti
les
bswap
pop
repz
insl
xor
mov
cs
mov
push
cmp
xchg
mov
push
jae
xchg
pcmpeqb
or
sub
mov
mov
lds
xchg
push
ret
pop
cld
jo
out
add
inc
inc
and
xchg
roll
into
cmpl
dec
or
data16
inc
dec
stc
lds
cli
in
sbb
shlb
aad
xlat
add
fimuls
jmp
mov
dec
dec
ja
mov
mov
dec
mov
aad
cmp
je
aas
push
inc
and
stos
inc
or
pop
inc
xchg
mov
addl
lcall
mov
gs
cmp
dec
jmp
inc
lock
movsb
sbb
cmpsb
popa
ss
push
mov
shlb
dec
sbb
pop
cmp
adc
ja
add
push
mov
out
sub
insl
sbbb
jne
dec
cld
sbb
cmpsl
xor
pop
mov
jmp
push
cmc
leave
push
pusha
sub
je
push
mov
mov
mov
push
out
stc
adc
mov
adc
fsts
xor
pop
pop
or
cs
call
push
sub
lock
cmp
fnstsw
mov
push
mov
xor
clc
lahf
filds
mov
xor
dec
popf
pop
insl
dec
and
aad
pop
imul
outsl
and
int
arpl
cs
pop
push
loopne
pop
into
loop
mov
int3
pop
into
sub
mov
cmc
enter
scas
xlat
mov
jb
stos
cmc
lcall
dec
test
mov
imul
pop
sub
jnp
mov
jnp
leave
and
xor
or
fidivrl
out
xchg
adc
lcall
xchg
pop
xchg
or
leave
mov
subb
ss
inc
repz
dec
daa
stos
push
cwtl
subl
and
xor
pop
xchg
and
roll
lahf
pushf
lret
fwait
cmp
repz
mov
cmpsb
mov
bound
lret
xchg
mov
divb
lcall
sbb
push
xchg
mov
or
ds
mov
mov
mov
scas
pop
pop
ret
cvttps2pi
pop
mov
mov
fadds
inc
fucomi
dec
cwtl
dec
cmp
xor
popf
push
cmp
or
dec
mov
lea
mov
add
scas
icebp
xlat
add
adc
jns
adc
movsb
mov
and
out
mov
fdivrl
adc
fiadds
pop
inc
test
mov
stos
fprem
ret
mov
sti
adc
pop
push
loopne
aam
jl
inc
into
pop
push
lds
adc
repnz
mov
xchg
sbb
repnz
cmp
imul
adc
call
mov
inc
mov
cmp
mov
int3
dec
cmpsb
inc
mov
mov
sbb
dec
inc
ret
mov
out
mov
xchg
jno,pt
cmp
in
jmp
xor
xor
decl
and
rcll
lds
fwait
push
ds
add
in
imul
xor
adc
fsub
mull
mov
cmp
dec
mov
popf
mov
es
xchg
or
cmc
cmpsb
xchg
in
out
std
dec
push
xchg
add
jp
xor
pop
add
loopne
xlat
pop
xchg
nop
andb
xor
inc
into
mov
addl
pop
push
mov
push
xchg
cmp
lock
gs
mov
xchg
sar
xchg
dec
daa
dec
inc
mov
mov
cs
outsb
out
cli
mov
push
jne
dec
icebp
flds
mov
pop
mov
xorb
cmpsl
test
mov
adc
xchg
test
and
pushf
call
int
mov
or
jg
sti
push
mov
dec
xbegin
jecxz
add
iret
rolb
sbb
dec
mov
scas
fs
ds
mov
mov
pop
mov
pop
pop
adc
std
xor
leave
outsl
adc
push
inc
adc
sbb
iret
add
in
and
or
bound
sub
stc
mov
add
xchg
pop
clc
movsb
add
cmp
jae
cmpsb
mov
lret
sbb
push
rcr
rorl
adc
mov
loop
pop
mov
mov
lock
fwait
push
movsb
addr16
push
movsl
popf
xor
cmp
hlt
push
shrl
es
sbb
add
sti
cmp
sbb
adc
jmp
test
pop
lods
in
out
cmp
popa
sbb
xchg
push
push
lods
inc
sbb
mov
outsb
shrb
sbb
cmp
pop
into
nop
pop
test
sbb
stc
or
mov
mov
inc
sub
jp
jne
jge
pushf
cmp
fsts
insl
push
andl
es
mov
xlat
fildl
fwait
mulb
loopne
mov
pop
push
je
mulb
aas
or
fdivl
mov
in
push
inc
push
inc
cmpsl
adc
inc
sahf
cmpb
pop
mov
shrl
sbb
sti
cltd
xchg
mov
dec
or
sub
sub
and
xor
sbb
aaa
mull
or
push
cmpsl
out
add
lods
and
cmp
das
das
jg
out
push
jp
inc
jne
cmp
inc
xchg
std
cmp
call
mov
roll
cmp
mov
in
cwtl
ja
push
push
inc
out
fisubrl
gs
jp
inc
pop
fwait
out
mov
fs
loope
in
xor
lods
jns
jge
cli
roll
pop
insb
pop
fwait
cmp
fcomps
xor
rorb
jno
repnz
out
mov
cmp
sbb
inc
xor
lahf
dec
sub
add
jg
mov
adc
mov
dec
mov
dec
imul
mov
mov
jns
cli
jg
out
and
jmp
movsb
out
jae
sub
pop
mov
sub
inc
popf
sbb
outsl
mov
push
jge
into
dec
stos
add
mov
int
repz
in
std
xor
test
into
mov
lcall
leave
jno
aaa
cmp
call
pushf
jb
dec
dec
mov
je
xor
loopne
inc
andl
sub
std
lahf
dec
ret
pop
lods
mov
inc
lods
sbb
add
lods
mov
mov
pop
sub
sub
sbb
xchg
mov
jmp
adc
push
mov
out
lods
stos
adc
loop
scas
pop
jmp
js
mov
shrb
add
cmp
scas
aam
mov
xchg
or
xor
test
cli
jb
inc
xor
or
stc
add
adc
or
inc
shlb
aad
iret
add
jae
decb
dec
aad
jb
fldl
into
mov
mov
pop
outsb
or
or
adcl
mov
and
jge
inc
inc
sbb
cmp
sub
enter
ss
xor
outsl
add
cmp
sbb
xor
bound
inc
mov
popa
cwtl
test
dec
testl
sub
jl
mov
push
xchg
les
push
stos
int3
movb
les
xchg
rcll
add
test
enter
push
int
shr
test
shll
fistpl
xorl
mov
mov
lea
je
sbb
lds
sysenter
mov
in
shl
fwait
cld
cld
loope
mov
pop
stc
dec
mov
pop
mov
out
add
push
cmp
les
pusha
pop
jmp
jle
ja
mov
inc
and
loope
hlt
insl
shll
jb
dec
pop
mov
pushl
leave
filds
or
out
fisubrs
int
pop
push
mov
popf
dec
ffree
cltd
mov
mov
xor
xchg
movsb
addl
dec
mov
lods
pop
lahf
js
aas
imul
sahf
sub
out
jo
jecxz
cwtl
out
insl
sbb
mov
sbb
sub
lcall
jp
mul
lods
or
std
xchg
dec
pop
nop
mov
or
lock
jno
sub
mov
daa
pop
push
clc
cld
lods
cmpb
push
adc
and
bound
bound
sbb
jo
push
sarl
call
test
xor
xchg
mov
adc
sbb
in
into
inc
addr16
loopne
aas
fdivrl
and
pop
mov
pop
mov
sahf
sub
out
lods
lods
push
jns
gs
cmp
fwait
inc
das
iret
cld
je
mov
out
mov
int3
jecxz
negl
add
cmp
xchg
or
shrb
xchg
test
in
scas
adc
faddl
mov
gs
popa
out
mov
pop
add
lret
arpl
lds
cwtl
mov
mov
sub
lret
aad
in
mov
shl
into
rcrl
sub
xor
arpl
dec
repz
xor
out
pop
or
add
mov
sbb
lods
insb
fbld
out
xchg
inc
lods
cmp
in
sbb
and
sbb
popa
lahf
fwait
lcall
lods
cwtl
push
hlt
int
test
jb
cmp
and
imul
inc
arpl
outsb
cli
add
and
popa
pop
notl
stos
sub
inc
lods
inc
inc
lret
cmp
mov
flds
data16
popa
xchg
das
adc
jnp
movsl
mov
xchg
jae
out
mov
inc
cmp
push
out
cmpsb
sub
pop
pushf
cmpb
or
inc
sub
push
leave
mov
ss
mov
dec
push
out
sbb
das
xchg
inc
repz
xchg
cmpsb
sbb
xchg
sbb
push
or
out
jne
daa
mov
sarl
push
mov
adc
cs
fbstp
dec
popf
cmp
repnz
out
xor
ljmp
jmp
mov
les
lret
aad
push
mov
inc
mov
fidivs
or
xchg
jmp
shl
iret
mov
loope
aas
aaa
out
aam
add
cmpsl
adc
out
xor
scas
xchg
sbb
and
jg
stos
test
pop
and
mov
sti
xor
mov
push
test
xchg
jb
dec
mov
lret
cmpsl
data16
or
mov
mov
adc
loop
cmpl
dec
enter
mov
lcall
mov
lea
lock
insb
sbb
adc
outsb
xchg
movsb
fdivs
pop
out
rcll
lds
bound
pop
jg
and
sbb
sub
fwait
test
inc
cmc
ds
test
rdpmc
addr16
dec
shlb
rorb
es
rcll
pusha
mov
out
pop
rcrl
lock
sbb
sbb
adc
rclb
bound
or
dec
shlb
lret
std
push
inc
inc
xchg
in
arpl
lret
shll
cli
xor
movsb
push
mov
test
sahf
mov
int3
aam
push
push
inc
daa
lahf
je
repz
loope
ja
jnp
add
inc
sub
mov
add
ss
mov
out
clc
mov
pop
mov
and
adc
push
cwtl
pop
scas
xor
mov
loopne
mov
out
jbe
jb
or
lea
fildl
mov
shlb
das
dec
push
add
and
in
je
inc
xor
cmp
pop
cld
js
fmuls
mov
enter
mov
int
imul
pop
mov
cltd
aam
testl
mov
mov
xchg
push
ret
push
xor
push
xor
cmp
faddp
pop
inc
lret
mov
lea
ss
dec
int3
rclb
les
sbb
dec
fisubrl
loopne
mov
jne
stc
push
mov
in
sbb
mov
xchg
add
enter
adc
inc
add
gs
jae
outsb
and
sbb
mov
dec
sub
mov
lahf
je
add
xor
insl
andps
mov
nop
xchg
shl
mov
xchg
pusha
adc
jo
cmc
shrb
lods
std
xchg
ret
pop
mov
pop
push
and
clc
sub
add
rcr
pop
adc
sbb
dec
dec
or
mov
dec
mov
jne
push
clc
inc
xchg
jmp
push
out
xor
xor
jne
xlat
mov
int
dec
cmp
mulb
cmp
loop
or
pop
xchg
mov
add
add
jle
cmp
movl
repz
pop
lods
sarl
clc
mov
inc
popa
add
lods
inc
into
mov
insb
xchg
test
xchg
mov
nop
sbb
dec
cmpsl
pusha
sub
paddusw
or
test
push
ret
jle
push
das
push
push
mov
jmp
add
out
imulb
sub
inc
sbb
ror
jl
inc
sub
scas
push
cmpsb
add
shlb
mov
idivl
gs
cmpl
ret
stc
mov
leave
ds
ja
jecxz
lds
mov
aas
inc
sbb
add
loope
or
dec
shlb
push
insl
push
mov
push
xchg
xor
inc
rolb
pop
add
dec
push
adc
fnstcw
push
jae
jb
lret
add
jge
cmp
cmp
js
loopne
adc
or
popa
dec
das
pop
loope
arpl
jg
and
sub
pop
mov
xor
and
xor
sub
cltd
dec
inc
cmp
out
popf
ja
pop
in
scas
push
dec
pop
xchg
push
jns
leave
setno
inc
jge
in
in
fldt
dec
cmp
das
in
in
cmpsl
ret
push
push
es
sahf
and
ja
stos
add
mov
icebp
inc
xchg
ljmp
ret
and
mov
lahf
aad
popf
and
push
test
ds
xor
inc
out
jnp
and
xchg
das
out
sarl
cmp
xchg
stos
rcr
sbb
ret
xor
add
or
xchg
cs
sub
jae
mov
adc
hlt
push
push
pushf
hlt
outsb
in
mov
jg
mov
lcall
mov
pop
mov
mov
and
mov
xchg
pop
or
pop
push
pop
cmp
push
pop
pop
add
xorl
and
rorl
ljmp
adc
inc
adc
shr
sub
addr16
sahf
jmp
inc
push
stos
das
xor
in
xor
push
cld
es
mov
loope
ret
and
lahf
cmpsb
lea
insb
dec
jb
inc
movsb
jnp
jge
ret
rclb
insb
and
jnp
pop
fcoms
sub
in
add
outsb
es
cld
lds
push
adcl
sbbl
cmp
sbb
outsb
adc
mov
shll
and
cmpsb
adcl
xlat
int3
pusha
jb
xchg
dec
test
std
xchg
jnp
movsl
insb
push
xchg
cld
mov
jb
insb
push
es
add
lahf
faddl
cmpsb
rclb
fmuls
mov
sub
sahf
int3
outsb
adc
dec
push
mov
xor
push
jge
sbb
cltd
ret
lret
insb
push
add
jmp
lcall
ja
add
push
cmp
xor
sub
xchg
rcll
insl
mov
push
pop
xchg
cmp
push
out
or
push
jp
mov
ficomps
pop
lcall
inc
les
cmpsl
and
add
jle
jmp
pmaxsw
pushf
scas
lods
je
pop
leave
in
retw
adc
and
repnz
dec
fsubrl
mov
xor
adc
in
in
clc
imul
decb
fmull
push
lahf
data16
rolb
cmpsb
mov
or
movsb
mov
pop
ljmp
shrl
inc
dec
cmp
sti
subl
dec
ret
call
adc
jmp
add
adc
pop
and
push
add
pop
dec
fs
pop
scas
iret
mov
rcll
pop
hlt
mov
sbb
pushf
ja
ds
fsubl
mov
fmulp
add
shll
aad
xorl
dec
shlb
rcl
iret
mov
hlt
es
adc
dec
inc
xchg
or
adc
pop
sbbl
mov
idiv
push
fcoms
pusha
dec
xor
cmp
fs
cmp
jne
push
pushf
adcb
jmp
pop
add
jmp
mov
push
pop
push
dec
lret
inc
push
insl
pop
ljmp
adc
sbb
jns
xor
fnstsw
jae
pop
ret
int3
stos
in
xor
test
in
hlt
inc
loop
jno
dec
fwait
sbb
pusha
sub
js
fdivs
mov
dec
pop
mov
lret
cmp
jnp
sbb
mov
xchg
addr16
jg
cmpb
rol
sbb
imul
push
out
js
lods
cwtl
sbb
insb
imul
cmp
mov
pop
test
xchg
mov
outsb
repnz
adc
pop
pop
and
jno
lods
shl
pop
cmp
fs
stos
push
dec
lds
mov
cmp
push
inc
data16
jl
fwait
test
pandn
hlt
sub
push
sbb
loopne
adc
in
dec
dec
push
cmp
or
ret
ja
lods
cltd
daa
pop
adc
jge,pt
lret
shlb
mov
je
out
ret
popf
popf
or
mov
adc
test
and
pop
push
sub
mov
mov
into
dec
mov
and
fucomp
scas
xchg
lret
xchg
jb
inc
add
mov
arpl
jno
jle
inc
cmp
hlt
sbb
inc
lret
lds
mov
and
mov
imul
fdivrs
mov
les
rorb
shr
mov
push
out
mov
jecxz
and
cmpsb
sub
pop
mov
cltd
jge
mov
or
xor
jp
and
leave
inc
mov
dec
add
push
dec
les
lock
outsl
cltd
stos
and
andps
fsubrs
xchg
loop
jecxz
mov
imul
shr
lods
stos
mov
mov
xchg
mov
in
sbb
jne
mov
test
sbb
insl
int3
mov
fldt
faddl
and
xchg
adc
mov
push
sub
dec
jl
add
leave
sub
push
xchg
mov
jl
pop
nop
je
lds
pop
test
xchg
or
sbb
repz
je
lahf
jg
inc
cld
xchg
jle
lret
sub
lcall
aam
out
mov
mov
cmp
repz
xchg
testb
rcl
add
test
xchg
and
cli
sbb
mov
loope
lea
mov
lcall
mov
pop
sbb
push
rolb
pop
jp
adc
rcrl
xchg
push
leave
cmpsb
jns
xor
cltd
icebp
push
sub
incl
je
adcb
sub
jns
out
mov
shrl
xor
test
mov
std
pop
pop
mov
loop
dec
into
or
andb
movsb
ss
jmp
je
jns
enter
call
add
sbb
test
dec
xchg
push
ret
mov
stc
cli
les
in
movsl
pop
sbb
push
bnd
sub
push
sti
mov
cmovbe
add
into
cmp
add
mov
pop
out
mov
lds
aaa
gs
push
lods
sbb
jmp
sbb
sarl
pop
les
fists
push
shll
sbb
shl
aam
loopne
push
push
mov
in
repnz
jnp
jmp
jge
fcomip
jl
xchg
dec
adc
fwait
sbb
pop
xchg
jb
test
mov
iret
xchg
pushf
sub
xchg
insb
jnp
cmpsl
pop
in
neg
mov
rcl
enter
outsl
in
xchg
and
sti
or
jno
mov
or
jno
enter
sar
mov
inc
sub
dec
cld
sub
pop
jne
mov
jl
popa
arpl
insb
call
in
inc
cmpsl
pop
mov
sbb
jl
dec
into
jp
orl
and
repz
subb
into
mov
push
out
xchg
sub
push
jmp
sub
out
roll
and
mov
ret
mov
add
lcall
inc
popf
rcr
cld
clc
push
loop
sti
adc
out
mov
iret
outsl
pop
lret
roll
and
cs
call
xchg
dec
jb
xchg
xchg
xchg
cmp
in
loop
jge
xor
xchg
or
hlt
lcall
leave
jne
xchg
scas
jnp
sahf
jnp
add
lret
jg
xor
mov
pop
dec
sub
loopne
les
fnstenv
sbb
jg
jns
push
aas
or
popf
jmp
cld
inc
loop
push
cmp
pop
jns
xor
fisttps
test
mov
stc
jmp
dec
mov
lret
clc
pmulhuw
add
enter
in
nop
cmp
lods
leave
cwtl
frstor
push
sub
push
cmp
or
iret
lret
addr16
stc
loope
ds
icebp
leave
std
cli
cmp
cmp
push
ss
das
lea
insb
dec
adc
outsb
aas
xchg
sbb
scas
insb
xor
stos
hlt
out
hlt
mov
push
adc
test
jne
bound
jo
lahf
dec
cmp
dec
xor
jmp
test
pop
je
addl
push
addr16
mov
paddusw
mov
ds
jb
or
jp
test
mov
call
repnz
stos
lds
push
pop
cmpb
xor
add
and
mov
divb
jle
outsb
inc
mov
mov
sbb
sub
xchg
pusha
hlt
add
je
cmc
stc
add
adc
dec
lret
push
cmc
add
add
bound
fcoms
xchg
test
dec
rorb
and
jbe
aam
pop
push
test
pop
dec
repnz
xor
fcmovne
pop
xchg
scas
adc
xchg
sub
lea
pop
mov
out
push
inc
ja
cs
sub
dec
mov
mov
mov
lock
out
add
arpl
pop
pop
lods
scas
jbe
mov
mov
inc
add
cwtl
push
and
mov
popa
or
inc
xchg
lock
pop
testl
inc
scas
std
lods
mov
orb
rol
jns
popf
arpl
mov
mov
mov
pop
xchg
lcall
xchg
ds
lods
xor
rclb
mov
adc
jno
iret
dec
adc
cwtl
into
jmp
jbe
or
daa
test
out
outsl
and
jecxz
xchg
xor
fwait
repnz
add
sbb
jnp
pop
push
stos
je
mov
add
jp
iret
outsb
out
stos
jp
pop
ret
adc
enter
enter
xchg
jb
push
pop
xor
sahf
mov
imul
pop
stos
aam
mov
dec
insb
call
data16
adc
xchg
jnp
mov
jbe
bound
out
inc
cmp
loope
popf
xor
push
adc
loope
insb
aam
fwait
outsb
stos
scas
xchg
or
ja
mov
dec
stos
int3
test
xor
jo
repnz
clc
addl
cwtl
inc
movsb
lods
in
pop
shlb
mov
orb
sbb
inc
and
leave
cmp
cs
idivl
enter
jge
gs
sbb
loop
xor
jne
out
sarb
jl
frstor
mov
js
push
stos
pop
mov
push
xor
rcrl
mov
cld
loop
mov
mov
lds
or
pop
icebp
jb
push
movsl
xchg
jge
mov
cmp
pop
sub
bound
sub
cmp
jle
sub
int
imul
dec
flds
jl
push
push
push
mov
inc
cmpb
fdivs
lahf
fcompl
inc
ds
jp
cmp
xor
je
add
push
les
arpl
jp
lahf
in
scas
mov
pop
testb
push
outsl
push
jno
aam
xlat
lock
dec
sbb
sbbl
xor
push
and
es
into
push
ficompl
repnz
jnp
cmpsl
push
fildl
dec
dec
jbe
lret
insb
inc
es
push
cmp
cmpsb
fnstsw
mov
sarb
push
cmp
popa
xor
xchg
push
fadd
sub
rolb
jb
cmp
xchg
jmp
test
insb
hlt
cmpsl
push
push
pushf
lcall
rcr
xchg
adc
cmp
ret
in
pusha
cmpsb
inc
adc
xor
lods
jecxz
in
in
xchg
std
sub
mov
or
into
mov
mov
pop
insl
sbbl
adc
inc
jmp
inc
add
pop
scas
ret
cmp
inc
fcoms
in
or
and
push
out
call
push
rolb
sub
scas
cld
std
cmp
outsb
push
incl
adc
mov
cmp
cltd
inc
jo
aas
jne
test
in
rorb
sbb
or
arpl
lret
inc
mov
leave
mov
aaa
xor
lods
mov
and
and
cs
or
lret
sbb
lret
push
inc
and
inc
fisubrs
xor
push
mov
xor
je
inc
jo
dec
sub
cwtl
mov
call
mov
fdivs
outsl
push
xor
cmpsb
inc
aaa
jno
push
loope
popf
repz
repnz
cmp
ds
mov
pusha
inc
test
jo
mov
test
cwtl
fidivs
stos
xchg
sahf
in
jbe
test
rcrb
mov
ja
jnp
pop
nop
pop
arpl
es
mov
mov
in
pusha
pop
jb
test
pusha
icebp
mov
push
push
mov
movsb
pop
jns
adc
mov
cld
or
sub
adc
lods
or
nop
add
negl
jb
dec
mov
add
push
fildl
sub
enter
jo
xor
xchg
das
pop
jb
adc
pop
in
fistpl
hlt
aas
jmp
sub
rclb
lcall
int
fs
mov
push
out
insl
mov
sub
lret
clc
xor
leave
outsl
call
adc
sub
je
nop
push
dec
clc
lahf
pop
sbb
or
in
addb
mov
cmp
outsl
mov
adc
lods
pop
xchg
repz
ds
pop
fdivl
repnz
push
push
push
imul
movsb
sbb
sahf
xchg
mov
and
push
push
lea
das
dec
pop
das
mov
sbb
lods
add
xor
lock
in
pusha
rorb
in
mov
ja
rorb
std
add
pop
jns
cltd
or
xorb
cmp
cmp
stos
push
dec
xchg
imulb
daa
aas
inc
mov
mov
pop
stos
pop
les
jge
addl
jp
cmp
int3
les
test
sub
sarb
cli
stc
xchg
lea
dec
pop
and
cmp
lret
je
call
sub
out
xchg
xor
stos
pushf
cmp
mov
sahf
push
xor
and
lods
push
add
pushf
cld
jne
add
xor
test
dec
cmc
orb
and
or
jmp
call
mov
dec
jnp
js
insl
mov
jmp
int3
add
sti
jg
popf
cwtl
mov
or
stc
push
mov
int3
push
jmp
aad
or
mov
out
sub
aas
fidivs
and
push
fcoml
imul
xchg
insb
ret
inc
push
xchg
cmp
scas
lahf
xor
xchg
adc
lret
jae
std
mov
in
popf
repz
shl
shrl
jae
mov
decl
aam
push
adc
add
ret
jnp
pop
xor
adc
push
call
cli
sub
cld
jo
les
xor
and
push
dec
xchg
aaa
insl
xchg
movsl
and
xor
int3
pushf
push
push
sti
add
lds
icebp
sub
cld
mov
add
cmp
pop
xor
mov
jnp
das
mov
sbbb
in
int3
lret
pusha
inc
sub
dec
fimuls
and
and
test
jmp
mov
jae
or
jno
xchg
jo
icebp
call
or
das
fdivrl
inc
loope
inc
cltd
dec
or
xor
mov
inc
es
mov
dec
ss
test
andb
adc
aas
push
insl
sbb
and
scas
dec
cmp
sub
add
dec
scas
cltd
inc
pop
adc
int
lods
dec
fdivrl
mov
mov
and
es
xchg
sub
insb
pop
and
test
and
mov
lea
out
loopne
push
pop
mov
inc
sarl
sub
outsb
in
cli
fwait
mov
dec
mov
inc
mov
out
rorb
ss
in
test
push
loopne
imul
xchg
pop
lds
mov
popa
ljmp
dec
addr16
sub
mov
rcll
loope
lret
out
adc
sub
inc
in
loop
jle
cmpsb
rcrl
jecxz
gs
nop
movsb
sbb
cmp
rorb
scas
cmp
bound
xchg
fistpll
jge
shrb
sub
mov
addr16
xchg
and
fs
ja
shlb
mov
in
popf
pop
pop
subb
mov
das
cmpsl
movsb
mulb
out
das
stc
dec
lcall
jmp
xchg
clc
jmp
mov
push
rcr
scas
adc
ss
imul
call
push
test
sbb
mov
pop
movsb
mov
popa
popf
mov
push
repnz
fsts
and
stc
mov
outsb
fldcw
add
sarl
dec
mov
mov
pusha
cmp
add
lods
jp
mov
dec
ss
sbb
push
into
jecxz
movsb
je,pt
movsl
cmp
jo
inc
in
inc
lret
mov
push
adc
push
jnp
cli
adc
inc
push
shlb
clc
imul
xor
pop
inc
mov
jg
loop
xor
and
sahf
rcll
pop
divl
hlt
les
and
inc
mov
mov
push
cmp
mov
shr
movsl
push
jne
mov
cltd
fdivrs
aas
sar
insl
in
cmp
mov
scas
mov
popa
loope
fsubrs
rol
add
stos
xlat
jnp
repnz
mov
inc
xchg
pop
int3
or
mov
push
sbbl
adc
ja
push
sub
in
jo
rcl
out
mov
sbbb
lea
dec
in
out
in
call
jb
aam
adc
lcall
dec
incb
push
jg
popf
movb
xchg
or
subl
incb
cmp
enter
sbb
mov
jmp
call
jne
jg
fcom
in
inc
xor
fcoml
dec
das
das
test
hlt
pop
inc
mov
repz
dec
mov
mov
enter
adc
jns
clc
xor
enter
popf
mov
or
add
xchg
out
push
jl
mov
leave
dec
xchg
mov
mov
outsl
mov
rcrb
imul
mov
cmc
out
sub
in
and
mov
xor
mov
cltd
psrlw
mov
hlt
pusha
lock
in
mov
imul
adc
ret
int
pop
aas
imul
out
popa
xor
in
je
xchg
out
pop
jp
or
sar
mov
sbb
mov
call
ret
lock
es
insb
flds
filds
stc
xchg
loopne
subb
jb
xor
add
in
jmp
es
pusha
je
xor
xchg
outsl
hlt
jbe
xchg
imul
test
mov
clc
inc
push
loop
aaa
jo
addl
ljmp
fs
add
or
fs
mov
lret
xor
push
nop
cmp
pop
pop
xor
pop
sub
mov
push
sub
enter
and
sbb
inc
in
xchg
std
mov
psrlq
jae
xor
mov
ljmp
mov
gs
sub
push
sub
enter
sbb
sbb
push
jbe
push
in
fbld
mov
or
ss
out
hlt
faddl
mov
imul
cwtl
pushf
insl
aam
mov
fistpl
fcmovnb
repz
in
test
push
adc
dec
mov
sti
xor
mov
rcrb
popf
aaa
or
push
std
pop
cmp
jae
shr
sbb
idivb
lock
shrl
cmp
rcr
sub
insl
dec
mov
aam
iret
repnz
js
fisubrs
scas
sub
push
sahf
or
ljmp
mov
mov
negl
mov
xchg
nop
icebp
shlb
test
xor
cmp
xor
pop
decl
gs
bound
stos
fistl
inc
sub
insb
sbbb
pop
dec
mov
mov
mov
sub
mov
clc
adc
mov
hlt
cmp
mov
pop
stc
xchg
xchg
fcomps
jl
or
lods
ja
ret
mov
dec
repnz
sbb
mov
mov
dec
mov
jge
movsb
or
mov
mov
jae
gs
xchg
dec
lock
mov
mov
fcmovne
jmp
lret
ss
ss
ret
sub
out
test
mov
pop
pop
lahf
mov
push
dec
or
insb
xchg
out
fistpl
or
hlt
stc
fidivl
sbb
repz
movsb
mov
xchg
inc
mov
dec
mov
push
sbb
xchg
lret
rclb
sub
mov
imul
pop
repnz
lock
dec
pop
jb
xchg
in
and
dec
jae
repnz
inc
int
int3
mov
loopne
xor
arpl
mov
xor
jge
jl
add
mov
cmpsb
jnp
mov
cmp
push
test
mov
lea
mov
xchg
rclb
fs
ror
or
push
mov
int
mov
mov
pop
jb
lea
jg
outsb
or
into
mov
out
andb
sbb
push
or
jns
daa
fidivl
push
push
sub
fistpl
sub
adc
jno
inc
call
dec
xchg
xor
xchg
sti
sub
lds
add
or
inc
cmp
pop
mov
sahf
and
dec
adc
adc
and
lahf
mov
fs
in
push
sbb
fimuls
outsb
push
push
test
dec
xchg
jnp
dec
xor
add
push
sub
pop
ds
outsb
mov
inc
pop
dec
jg
dec
mov
mov
in
rol
es
mov
cli
push
mov
push
lea
sbb
pop
push
mov
out
pop
icebp
aas
je
shll
sub
sub
pop
push
gs
mov
loopne
push
fiadds
adc
or
mov
mov
push
mov
jmp
mov
ds
xchg
inc
in
sahf
frstor
je
push
jnp
cld
sbb
rep
xlat
mov
addr16
in
sub
sub
dec
repnz
shll
sbb
shrd
fists
repz
xor
pop
ss
dec
jg
xor
cmp
je
dec
ljmp
sub
jae
cmpsb
sub
lret
movsl
out
sbb
sbb
rcrl
ret
push
mov
stc
shl
add
push
loop
loope
dec
lcall
das
test
dec
daa
mov
les
in
push
in
hlt
xor
stos
add
mov
push
sub
cmp
in
adc
roll
adc
mov
pop
jecxz
jns
test
fldl
xchg
jle
or
dec
mov
add
adc
xchg
and
xor
jl
mov
dec
mov
lea
push
sti
sub
mov
jae
add
dec
jmp
jae
test
pop
cmp
aam
mov
lock
mov
aad
fistpll
mov
out
jmp
mov
xor
add
int
fwait
daa
ficoms
stc
sbb
stos
bound
test
outsb
pop
mov
xchg
xchg
jbe
dec
pop
and
lret
fists
fcmovb
mov
jne
test
loopne
or
adc
or
cmp
std
mov
out
and
mov
push
bnd
xchg
dec
mov
mulb
sahf
mov
xor
lcall
insl
xchg
mov
sbb
or
movsb
mov
xor
push
ret
xorl
lock
sahf
pushf
in
test
adc
cmpb
add
je
push
dec
js
xlat
imul
push
cmp
sub
loopne
decb
or
les
fisubrl
andb
adc
jge
loope
daa
cmp
cld
leave
adc
push
dec
mov
sub
js
rcrb
inc
push
sub
dec
or
dec
jl
fsubs
int
loop
xchg
sti
insl
mov
inc
add
es
ficoms
mov
out
fstpt
iret
push
sbb
or
mov
mov
pop
cmpl
insb
xlat
mov
mov
aam
cwtl
push
cwtl
mov
mov
inc
mov
dec
sbb
lret
lea
ds
xchg
cmc
cli
adc
push
pop
pop
sub
sahf
data16
cwtl
mov
das
xchg
lahf
fcompl
mov
cmp
push
add
mov
dec
add
dec
pop
pushf
aad
insl
sub
fs
icebp
je
and
lret
mov
xlat
out
clc
jge
mov
cmpsb
xor
cld
push
je
scas
sbb
sub
dec
int
lret
adc
ds
mov
cwtl
mov
push
cmpsb
sub
imul
int
mov
push
pop
cmp
mov
out
lods
sub
add
int3
pushf
jae
xchg
xor
adc
fwait
add
mov
cmpsl
cmp
clc
dec
jno
inc
popa
mov
mov
dec
mov
stc
scas
sti
je
filds
int
sbb
cs
mov
mov
lret
xor
mov
dec
xor
arpl
adc
aas
in
outsb
dec
inc
call
int
les
xchg
popa
mov
sub
cld
popf
int
arpl
pop
dec
loope
add
fcompl
add
js
pop
inc
lcall
and
in
ja
pop
dec
hlt
inc
faddl
shlb
fisubrl
movsb
jmp
ss
pop
mov
sub
mov
inc
pop
xlat
adc
clc
inc
faddl
mov
inc
je
or
and
fldcw
cmpb
jmp
insl
iret
pop
rcrb
cmp
daa
push
fmuls
pop
xchg
sub
pop
mov
out
or
es
rcrb
inc
jp
xor
data16
roll
sub
add
jmp
mov
in
mov
pop
outsb
jmp
xor
xchg
inc
pop
ja
clc
jecxz
push
dec
mov
movsb
lcall
subl
or
outsb
push
mov
stos
add
subl
sub
cmp
mov
fistl
dec
popa
sbb
and
in
std
sti
push
icebp
xchg
xchg
push
ret
mov
inc
int
xor
add
push
push
orl
pop
mov
lods
jge
pop
test
fistpl
pop
fwait
psubusw
fwait
aaa
sub
mov
sbb
out
jmp
jb
add
js
jo
add
leave
cmc
mov
rcll
add
daa
sub
pop
push
data16
mov
and
pop
add
mov
bound
mov
push
xor
xor
outsl
or
scas
test
jmp
adc
pop
fs
xor
stos
jle
sub
and
mov
loop
xchg
test
loop
enter
dec
inc
pop
pop
dec
mov
jl
cmp
xchg
cmp
push
iret
loopne
lods
int3
aad
or
cmp
jge
cmp
adc
and
fldt
add
pusha
imul
enter
insb
popf
and
xchg
inc
jge
add
mov
popf
les
ss
jle
mov
popf
test
mov
push
dec
fxch
dec
xchg
jp
out
ret
or
xlat
ret
roll
jl
sbb
sbb
aas
or
xchg
sub
mov
dec
adc
cltd
imul
add
sbb
pop
aam
adc
loop
addr16
and
sub
lds
pop
or
jo
pop
loop
sub
sti
push
mov
rorl
das
jge
add
aaa
cmp
inc
ljmp
in
inc
sub
lods
push
ffree
add
movsl
mov
xor
sbb
outsl
imul
adc
add
int3
lcall
pop
aaa
cwtl
pop
in
inc
imul
outsl
rol
dec
add
test
pop
pusha
ficompl
subl
mov
push
xor
xchg
or
jne
cli
nop
int
xchg
outsl
pushf
push
jle
mov
scas
into
fsin
add
mov
adc
cmp
xchg
sbb
pop
cmp
sbb
cmpsb
jmp
pop
in
mov
lods
pusha
pop
mov
sbb
mov
popf
sti
push
inc
sub
jns
push
adc
lods
int3
push
adc
mov
in
dec
daa
adc
stos
int
mov
jo
lea
nop
mov
xchg
pusha
push
aas
cmp
into
bswap
cmp
adc
aaa
sar
dec
lock
jnp
rcrb
sbb
xor
xchg
mov
push
lods
jns
enter
scas
fwait
sub
mov
enter
lret
add
sub
aaa
xor
xchg
lret
dec
dec
lret
data16
loopne
repnz
jg
dec
stos
sub
inc
lods
xchg
mov
push
sub
lds
sub
adc
daa
cwtl
fdivrl
andb
pop
pop
js
mov
fwait
dec
daa
xor
leave
xor
shll
cmpsb
push
add
imul
mov
push
push
cs
inc
sahf
sbb
mov
insl
xchg
daa
leave
inc
and
xor
jg
popa
outsl
jmp
adc
pop
out
or
ret
push
jb
inc
add
push
stos
pop
xchg
lods
call
push
sahf
mov
scas
cmovl
mov
pushf
mov
and
loop
mov
push
add
mov
sub
pop
popf
push
fidivrl
xor
jmp
sub
mov
cwtl
out
pop
mov
mov
mov
sahf
mull
in
sahf
sub
outsb
inc
andl
add
pop
push
mov
push
sub
adc
or
add
xor
testb
dec
and
push
fcmovnu
push
outsb
xor
lcall
loop
in
sub
daa
in
mov
fildll
pop
inc
decb
fs
frstpm(287
jmp
mov
test
out
insl
aad
sbb
push
push
or
add
std
pop
fldt
add
fwait
jb
or
rolb
dec
cmc
cld
popa
ret
jae
jns
sub
jg
jns
fs
shrb
ja
cmp
sbbl
popf
lcall
pop
loope
fdivs
cmc
sbb
ret
test
sarl
mov
pop
icebp
test
adc
in
mov
xor
inc
icebp
aas
mov
pop
push
insl
stos
sti
leave
outsb
xor
adc
mov
xchg
push
jecxz
add
out
repz
push
cmp
insb
ror
pop
mov
sbb
xchg
imul
stos
cld
mov
dec
mov
mov
cmp
push
out
sub
jne
sub
pop
loop
scas
push
sub
movb
rcr
leave
stc
mov
fsubl
filds
das
xor
inc
cmp
shlb
mov
sbb
int3
xchg
and
aaa
adc
addl
sahf
movsl
xlat
les
xchg
jb
pop
cld
mov
inc
daa
lcall
xor
jge
gs
icebp
mov
andb
add
pop
add
insl
test
hlt
push
add
inc
incl
xchg
pop
mov
pop
fdivrl
data16
stos
lock
push
popa
hlt
xchg
xor
in
jl
das
cmpsl
insb
inc
xchg
add
movsb
sbb
push
dec
jp
pop
popf
mov
shll
sbb
cmp
iret
loopne
popf
mov
cmp
test
ljmp
jg
inc
outsb
loop
stos
inc
insb
jo
shl
cli
iret
cmp
call
mov
lret
js
shll
stc
xor
ret
scas
jno
jle
mov
es
cmp
mov
mov
inc
mov
adcl
adc
repz
insb
and
stos
cs
pop
xchg
rcr
lret
sub
pop
push
bound
jns
in
mov
insb
scas
jne
jge
ljmp
mov
scas
repz
cmc
int3
stos
cwtl
sub
enter
int3
xchg
sub
pop
cmpsb
jnp
jmp
notl
jns
stos
mov
into
pop
sbb
movsl
push
outsb
add
pop
mov
arpl
pop
inc
jo
cs
inc
rcrb
inc
andb
jnp
adc
mov
orb
out
add
scas
xchg
jbe
imul
push
xor
mov
leave
add
jb
sahf
loopne
cmp
nop
mov
test
or
push
mov
mov
lret
or
pop
pop
les
das
xchg
ljmp
pop
rclb
jl
jp
jnp
adc
in
fidivs
mov
pushf
pop
cld
mov
mov
fimull
cwtl
xchg
mov
dec
or
or
pop
cmpsb
icebp
insb
sbb
vpunpckldq
dec
movaps
sub
mov
add
push
test
jmp
rorl
and
mov
mov
mov
rclb
add
sbb
test
loope
inc
mov
lods
xor
ss
dec
mov
out
lret
inc
sbb
mov
mov
pop
or
mull
loopne
sub
sub
pop
add
movsl
jecxz
std
fsubrp
js
mov
out
fmuls
lea
ljmp
sarl
jecxz
mov
add
mov
push
fisubrl
and
imul
jl
push
jno
or
xchg
mov
mov
and
sub
fistl
adc
mov
mov
popa
mov
inc
mov
lock
cmp
ret
jle
mov
lea
outsl
or
add
push
daa
xchg
adc
adc
dec
xor
xchg
test
jmp
cmp
pop
stos
jae
push
sbb
clc
mov
cltd
daa
aam
add
pop
inc
mov
xchg
nop
push
ret
test
repnz
cmovns
or
mov
jle
popa
in
ficompl
in
stos
imul
arpl
push
test
adc
mov
adc
adc
test
xadd
inc
lret
xchg
xchg
std
add
and
dec
cmp
movsl
in
mov
adc
mov
mov
cmp
jl
cs
subl
mov
or
inc
rolb
pop
mov
push
out
sbb
pop
nop
pop
shrw
out
mov
cmp
call
nop
adc
dec
test
dec
and
add
push
lret
out
sub
adc
aam
xchg
sbb
dec
lods
imul
sti
cmpsl
jle
or
dec
xor
lahf
leave
inc
dec
pop
std
cld
jp
int
dec
mov
mov
lock
scas
mov
xchg
inc
lret
add
aaa
dec
pop
add
js
cmp
dec
and
and
push
mov
popf
cmp
enter
dec
jmp
clc
mov
ss
pop
movsl
jne
jmp
dec
test
aas
into
jo
call
mov
push
pop
xchg
lea
mov
add
cwtl
inc
bound
pop
stc
test
popf
jo
shlb
mov
xchg
pop
push
scas
and
mov
jecxz
jecxz
cmpsb
sub
das
cmpsb
and
fimuls
sbb
inc
cltd
clc
sub
or
insb
dec
xchg
jp
fincstp
adc
sti
call
pop
fistps
mov
lret
adcl
scas
push
leave
mov
out
movl
das
ret
cmpb
jno
les
loopne
stc
decl
test
fmulp
mov
insl
cmp
pusha
cltd
inc
push
mov
sahf
imul
mov
aad
and
pop
repnz
jb
int3
fwait
rclb
test
loopne
pop
stc
stos
outsb
sub
pop
mov
ss
jne
scas
mov
mov
inc
adcb
pop
and
icebp
lds
imul
into
sub
jge
pop
call
or
addb
push
push
cmpsl
outsl
in
out
mov
add
pop
mov
andl
test
dec
mov
lock
and
fisttps
mov
inc
or
sbb
ds
xor
mov
fcmovnbe
jmp
inc
in
mov
mov
jns
adc
aaa
pop
pop
push
ret
jnp
aaa
dec
std
imul
mov
add
fwait
adc
insl
xchg
jb
enter
jmp
and
mov
jo
cmp
int
mov
pop
jnp
in
sub
dec
pop
lods
ds
repz
and
popf
cmp
mov
jle
movsl
add
scas
sahf
push
mov
pop
ds
sbb
xor
and
loope
jl
inc
push
mov
loop
lea
jnp
adc
xchg
mov
mov
fwait
jecxz
loope
adcl
add
pop
xor
shrl
aaa
dec
pop
inc
push
mov
das
mov
pop
es
xchg
xchg
sbb
cld
cmpsl
jns
icebp
add
int
and
in
and
nop
pop
stos
sbb
push
lds
cmp
js
aam
and
cmpsl
xor
mov
push
adc
scas
mov
xor
add
dec
push
cmp
pop
int3
icebp
jmp
jns
imull
xchg
fs
cmp
mov
js
adc
movsb
cmpsb
cmp
mov
out
mov
mov
and
shlb
aad
xchg
or
aaa
jge
xor
add
bnd
sbb
aaa
xor
push
pop
aaa
xchg
push
repz
aas
and
mov
daa
es
aad
jp
pusha
rcrb
lods
mov
pop
stos
repnz
xor
jmp
scas
mov
xchg
jl
notl
cli
es
xchg
lods
lret
mov
test
test
insb
push
movsl
mov
inc
int3
loope
inc
lods
cmp
or
imul
xchg
das
imul
mov
push
lea
sti
jle
push
cmc
in
popf
aam
mov
cli
shr
add
sbb
and
pop
out
cmp
loope
jge
enter
dec
mov
fstpl
outsb
movsl
std
or
adc
sar
loop
ja
pop
xorb
icebp
sarl
ja
ljmp
pop
sti
nop
jle
es
xchg
cmp
sub
inc
fdivrl
je
jg
pusha
imul
dec
xchg
movsl
sub
adc
mov
dec
movsl
adc
xchg
nop
jnp
dec
clc
push
jno
jmp
pop
xor
jbe
sub
lock
pop
mov
movsb
incb
fisubrl
lahf
ja
scas
xchg
out
adc
clc
ret
jmp
in
xchg
out
mov
shrl
jle
call
push
decb
mov
xchg
cmp
out
mov
jns
popa
mov
sub
pop
pop
lcall
add
out
fiadds
cmc
cli
xchg
js
pushaw
pop
rcl
sbb
inc
add
mov
jbe
aaa
ds
or
rcl
pusha
adc
mov
push
les
rcr
push
jne
sub
int3
stc
rcll
push
add
in
movsl
push
push
daa
test
mov
mov
jmp
and
jge
add
movsb
fdivl
rcrb
dec
sbb
xchg
pop
sbb
rclb
and
les
xor
mov
test
int3
in
inc
mov
push
call
rcll
add
incl
mov
pop
mov
push
pop
push
sbb
mov
rclb
fsubr
mov
dec
inc
sbb
pop
xchg
fimuls
jbe
xchg
test
push
cld
in
or
xchg
in
pop
frstor
pop
imul
inc
fistl
adc
cmpsb
dec
cld
sbb
or
mov
aas
std
jno
syscall
lahf
icebp
push
or
mov
sbb
mov
iret
icebp
jp
rdmsr
mov
adc
jge
add
push
or
out
inc
cli
dec
push
clc
xor
lock
jge
shlb
mov
sarb
ficoml
dec
iret
lret
inc
cld
testl
pop
dec
mov
setbe
test
lahf
fwait
les
xor
scas
roll
push
mov
insb
aam
cmp
repnz
jle
mov
sbb
outsl
lahf
sub
adc
ret
mov
mov
mov
mov
int
push
mov
cmpsl
cmp
les
jle
hlt
push
icebp
pushf
cmp
loop
xchg
dec
or
dec
hlt
adc
add
ljmp
xchg
pop
xchg
or
sub
stos
cmp
ja
stos
dec
jae
adc
sbb
jmp
sub
ja
cmpsb
fimull
cmp
ljmp
cmp
xor
bound
pop
in
mov
test
aad
aam
lods
call
dec
out
adc
and
addr16
les
je
dec
test
push
subb
ja
test
xchg
test
inc
cmp
inc
add
dec
jmp
movsb
jecxz
js
in
jae
ljmp
mov
dec
mov
inc
xchg
sar
cmp
sub
xor
cmpsb
mov
aam
cwtl
mov
inc
mov
lods
jns
aad
xor
mov
addr16
in
pop
cmp
push
jae
jb
xchg
mov
aad
outsb
mov
scas
push
xchg
jno
popf
testb
mov
or
mov
loopne
lods
pusha
and
scas
sarl
pop
lods
jl
imull
jp
jne
ds
mov
dec
aam
mov
dec
jecxz
orl
xchg
jb
arpl
mov
push
divl
add
stos
out
mov
xor
xchg
cmpl
pop
dec
std
xchg
sarl
sub
mov
pop
clc
cmp
inc
jge
dec
dec
pop
gs
loope
fidivrs
popa
cltd
inc
pop
aaa
pop
sbb
push
pop
popa
lods
jbe
inc
push
push
out
xchg
test
lcall
push
js
xchg
cmp
outsb
std
push
cmp
mov
loop
sub
ljmp
int
inc
and
xchg
push
repnz
and
mov
cmp
fldenv
sbb
rorl
sbb
leave
mov
movb
push
jp
cmp
and
jecxz
add
xchg
fnsave
xchg
out
mov
lcall
loopne
mov
daa
out
fsubrp
aad
stos
das
rcrl
mov
xor
or
adc
lret
cmpsl
popa
mov
dec
pop
mov
fimuls
imul
mov
add
or
fiadds
pop
loopne
lods
in
cmp
sub
pop
and
callw
mov
push
and
shr
sbb
cmp
andb
daa
or
mov
test
std
ljmp
xchg
jg
in
imul
pop
idiv
repnz
adc
xchg
mov
mov
movb
inc
add
pushl
pop
int
int
xor
subb
sub
cmp
xchg
and
aaa
xchg
pop
xchg
xor
push
or
cmp
push
inc
fdivrp
aas
pop
or
xor
gs
jge
insb
jns
sahf
std
dec
push
mov
dec
clc
mov
bound
int
out
mov
cltd
aaa
and
test
mov
test
or
cmpsb
in
fdivrl
mov
jno,pt
jle
sub
push
xlat
ret
and
ja
lret
fcoms
lds
pushf
aad
ja
test
jecxz
ss
jne
jns
dec
fisubrs
push
pop
shll
xchg
add
pushf
sbb
ret
mov
adc
or
xchg
push
shlb
test
mov
data16
pop
and
jnp
addr16
popa
jl
repz
js
lea
mov
or
push
jle
fistpl
mov
push
jnp
inc
add
gs
sub
mov
js
push
rorb
imul
dec
int3
pop
push
insl
stos
inc
repnz
jle
outsl
mov
mov
inc
shl
lock
test
imul
push
xor
cmp
pop
inc
shlb
faddp
cmp
pop
orl
cld
jns
repnz
pop
inc
mov
jg
aad
js
pop
cmp
pusha
call
ret
dec
jo
dec
jmp
lret
in
stc
popf
pop
rorb
pop
nop
or
shlb
inc
sbb
in
pop
xchg
adcl
jge
nop
in
shrl
mov
and
sbb
push
cmc
movsb
imul
int3
inc
and
dec
dec
add
mov
leave
sbb
mov
push
and
out
cmp
inc
pop
outsl
mov
or
mov
mov
les
leave
clc
mov
xchg
shlb
mov
jns
iret
pusha
rcrb
or
divb
enter
jo
pop
xlat
mov
pusha
bound
inc
xchg
xor
mov
cmp
mov
sbb
push
ja
imul
dec
or
jecxz
dec
mov
aam
inc
aaa
xor
loopne
jbe
cmp
xchg
add
in
outsl
iret
adc
mov
pop
sti
lds
push
mov
or
ja
add
scas
and
xor
mov
or
pop
sub
pop
xor
lods
lock
xchg
ret
sub
bound
leave
cwtl
jg
jmp
inc
pop
mov
or
gs
test
push
mov
inc
fmul
sbb
mov
es
mov
mov
rclb
adc
fstpl
sub
add
fisttpl
adc
es
mov
stos
and
cmpl
dec
mov
shll
adc
sbb
dec
in
dec
fcomip
cmc
push
push
test
cmc
rclb
adc
cltd
pop
lods
push
add
ds
scas
je
add
mov
pushf
iret
mov
out
jnp
nop
imul
fldl
sahf
mov
push
aaa
cwtl
dec
aas
pop
xlat
adc
mov
scas
rorb
mov
jno
inc
cmpsb
int3
call
int3
lret
push
pushf
sub
jg
out
xchg
stos
sbb
xchg
xchg
mov
addr16
roll
mov
pop
push
inc
xchg
pop
sbb
js
loope
scas
test
fildl
pop
out
fldcw
xchg
mov
push
loop
inc
and
cmc
dec
psubq
fucom
test
mov
aad
inc
sub
push
mov
pop
jb
mov
cmp
ret
in
test
add
mov
loop
lods
push
stc
or
add
imull
xchg
aaa
jnp
js
pop
xor
pusha
mov
cmp
or
or
jecxz,pn
push
dec
int
mov
push
mov
or
mov
lcall
sbbb
enter
sbb
sbb
pop
cmp
imul
or
cld
lea
mov
mov
test
movsl
scas
pop
das
mov
insl
adc
mov
mov
xchg
inc
adc
rorb
ljmp
pop
adc
out
dec
sub
scas
daa
sub
xchg
arpl
jmp
push
ljmp
cmpsb
enter
in
add
dec
and
incb
cltd
aas
mov
add
es
pusha
xchg
iret
xor
imull
sbb
mov
in
sub
add
sub
mov
andl
sbbb
dec
insb
leave
insl
les
sbb
xchg
adc
fbld
scas
xor
hlt
push
lret
inc
mov
fidivrs
or
notl
pop
inc
cld
and
lcall
iret
mov
inc
aam
mov
test
rolb
mov
inc
in
mov
arpl
adc
pop
add
aad
cmp
dec
jno
fdivl
and
lret
fcomps
pop
std
inc
jbe
gs
mov
jg
xor
or
in
xchg
jo
mov
fsubrp
mov
movsb
mov
out
into
sub
ss
iret
jecxz
ja
and
shlb
xchg
stos
out
pop
adc
mov
ss
adc
xor
loopne
cmp
fimull
mov
and
add
or
mov
jmp
mov
jno
jge
scas
outsl
and
iret
mov
jnp
cwtl
fwait
xchg
sbb
xor
and
adcl
mov
adc
sar
enter
or
jl
or
dec
mov
sub
call
pop
xor
dec
or
popa
xchg
out
xchg
cmp
lahf
mov
xor
jnp
lret
ss
lods
mov
cs
cld
ss
data16
dec
sub
mov
cmpl
xchg
lcall
sbb
addb
add
or
dec
push
lahf
test
jno
mov
test
or
fucomip
dec
xor
jle
dec
clc
inc
test
jno
rcl
add
das
push
popf
lret
mov
in
enter
mov
popf
jecxz
arpl
add
imul
ret
scas
jmp
add
mov
push
test
mov
out
adc
pop
and
mov
add
mov
in
mov
xlat
and
xor
xchg
out
inc
jo
idiv
daa
mov
cmpl
aas
xor
scas
mov
mov
test
and
inc
cmpsb
sub
cmc
lcall
pop
xlat
lahf
mov
add
scas
ljmp
fldcw
push
fidivl
mov
stc
dec
sub
adc
lahf
add
lds
or
mov
cltd
cmp
dec
pop
in
xchg
addl
fcomp
cwtl
mov
imul
je
cwtl
jnp
iret
jmp
daa
sbb
sbb
mov
mov
or
aam
and
mov
outsl
mov
orl
xchg
dec
insb
or
cmp
sub
aad
shlb
mov
push
enter
lods
xor
in
push
inc
decl
sub
shr
push
push
mov
cmp
cmp
mov
mov
xchg
nop
mov
add
add
inc
pop
sbb
cmpsb
or
sbb
cmp
push
inc
enter
mov
inc
lcall
les
shl
dec
fildll
enter
clc
sbb
sub
shlb
jb
mov
lock
xor
inc
xlat
das
movsb
pushw
mov
mov
mov
inc
cmp
int
pop
xchg
nop
repnz
xor
out
repz
roll
jl
lret
mov
sub
mov
je
out
cmp
xor
pop
icebp
mov
jle
dec
adc
lds
xchg
and
push
cmpsl
inc
or
scas
cwtl
jl
mov
pop
gs
inc
push
rclb
and
mov
into
shlb
call
mov
xor
jg
aad
aas
out
test
outsl
popa
mov
jle
xor
adc
and
xor
adc
sub
scas
cli
test
les
push
adc
cmp
mov
jbe
ss
adc
xchg
add
adc
packuswb
mov
or
jl
js
shll
out
data16
xchg
cwtl
mov
sbb
jns
mov
js
aas
inc
jmp
in
movsl
dec
fbld
pop
sti
or
aam
mov
scas
sbb
int
insb
fistl
cmc
xchg
mov
icebp
test
aaa
bound
aad
xchg
sub
in
lret
pop
push
pop
pop
lahf
mov
sub
jp
or
out
ret
mov
call
sbb
mov
pushf
imul
lods
mov
and
and
jae
cvtps2pd
jmp
xor
inc
pusha
mov
fwait
mov
or
lods
mov
stos
mov
dec
cs
in
stc
test
xchg
orl
mov
ss
adc
mov
pop
sahf
inc
push
incb
sahf
inc
push
jne
into
mov
xor
xor
orl
nop
mov
cmc
in
rclb
mov
lods
hlt
jnp
add
sub
test
pushf
cmc
dec
cmpsl
test
aad
addr16
stos
xor
popf
stc
jle
sub
pop
or
lcall
test
push
dec
pop
and
in
cltd
in
add
mov
push
cld
daa
mov
cmp
xchg
sbbb
dec
stos
pop
inc
jno
or
mov
out
add
shl
hlt
and
or
cmc
mov
aad
push
bswap
xor
push
je
das
daa
push
mov
xchg
outsl
adc
mov
loopne
mov
adc
mov
fwait
stc
pop
cwtl
call
ljmp
push
add
pop
pop
or
push
add
sbb
outsb
fnsave
xchg
and
mov
addl
int3
xchg
imul
mov
sahf
loopne
mov
stc
adc
dec
jno
adc
dec
xor
sub
cmp
addl
insl
jne
cld
shll
aaa
adc
pop
mov
dec
adc
jmp
jge
divl
or
mov
jbe
std
pop
sbbb
mov
lret
jo
fwait
jle
cmpsb
sub
popf
fstps
jo
xchg
fidivl
push
sbb
push
adc
not
xchg
arpl
addr16
fiadds
mov
mov
cmovo
and
repnz
sti
cmp
add
lods
and
repz
jne
mov
roll
iret
ds
jge
loop
or
movsl
pop
fxch
pop
test
add
fs
push
mov
loopne
cltd
fnstenv
jge
outsb
mov
cmp
hlt
or
fdivr
xchg
hlt
or
jg
add
repnz
xor
shlb
xchg
cmp
mov
std
push
or
xchg
int3
inc
insb
stos
pop
mov
jmp
xor
aaa
adc
xor
cld
adc
mov
sbb
mull
mov
xor
push
pop
insl
fbstp
and
ljmp
cmp
sbb
mov
mov
inc
dec
in
std
push
or
or
insb
xor
in
movsl
push
stos
sub
je
outsb
push
fsts
test
mov
sarl
mov
xchg
mov
clc
xor
sub
jne
in
adc
xchg
loop
push
sub
hlt
inc
mov
andb
adcb
cltd
call
jnp
add
popf
xor
jmp
cmp
mov
mov
nop
jo
sti
push
push
sub
enter
inc
add
and
inc
fwait
mov
cmp
cltd
call
mov
mov
mov
sub
mov
fs
inc
pop
fwait
cmpsl
mov
add
out
jl
cld
repz
pushf
lock
repz
loop
outsl
xchg
inc
jmp
ds
or
lcall
mov
test
iret
mov
arpl
out
mov
int3
jno
xor
dec
pop
nop
loop
pop
repnz
adc
mov
je
loop
or
mov
bound
dec
lods
push
xchg
mov
mov
add
scas
xchg
loopne
adc
out
and
push
dec
mov
cmpsl
jmp
pop
mov
add
addl
sahf
mov
jo
mov
ds
sbb
clc
ss
cmp
enter
adc
sbb
shlb
jns
sbb
mov
sub
xchg
sub
adc
call
add
enter
fwait
xchg
subb
xor
andl
mov
push
push
add
sub
inc
loop
les
mov
mov
shlb
sub
mov
cmc
fimull
insl
mov
sub
aad
cmp
popa
jno
dec
fldl
sarl
mov
push
push
adc
push
inc
sbb
sub
insb
aam
out
int3
adc
dec
mov
pop
mov
push
ffreep
test
jne
xor
pop
ret
cmp
mov
cmp
mov
sbbb
int
hlt
jg
mov
xor
test
fisubl
insl
lock
fimull
sarl
sub
hlt
fadd
ret
jo,pn
mov
pop
sub
pop
push
ja
or
es
and
and
fiadds
or
bound
jae
cltd
insb
push
sbb
insl
jmp
pop
adc
adc
clc
push
dec
dec
movsb
sti
jns
sub
cmpsb
leave
dec
add
fstps
and
push
js
imul
mov
aad
push
cld
jne
mov
sbb
xor
mov
cld
data16
les
mov
push
loopne
mov
roll
push
sub
hlt
push
fadds
xor
mov
mov
xor
push
sti
pop
repz
jnp
pop
adc
test
into
dec
std
roll
cmp
jb
sub
adc
arpl
idiv
jb
push
pop
cltd
inc
cltd
hlt
test
and
ret
mov
add
loopne
mov
divl
inc
add
clc
sub
add
aas
xchg
inc
stos
stos
adc
je
and
rclb
lcall
shll
pop
scas
xchg
lcall
mov
int
inc
cwtl
popf
dec
pop
cmpsb
or
dec
sbb
aas
out
das
cmp
dec
loop
xchg
lret
mov
cwtl
fistpl
test
loopne
jnp
das
ret
sbb
out
popf
and
jge
cld
scas
cmp
orb
jnp
nop
lret
pop
cmp
inc
test
jnp
xor
nop
lods
xchg
lods
je
popa
out
mov
add
shrl
add
insb
xchg
pop
inc
sbb
xchg
and
push
in
lea
jg
pop
stos
enter
sarb
sub
add
fs
push
xor
lods
shrl
add
loop
clc
fs
mov
bound
enter
cs
sbb
cld
mov
mov
in
xor
mov
fstps
insb
lret
fidivs
mov
int
inc
aaa
pop
bound
mov
popf
dec
popw
mov
cs
and
add
push
cmp
pushf
aaa
push
mov
cwtl
fisubrs
ret
adc
out
add
fs
jns
cmpsl
lahf
fs
and
adc
rcrl
mov
mov
mov
pop
or
sbb
sbb
push
pop
mov
inc
jne
cmp
adc
cmp
mov
fwait
mov
and
lock
sub
orl
or
imul
xor
pop
rorb
cmp
push
push
mov
mov
repnz
dec
jge,pt
rcll
ret
call
jne
cld
xchg
mov
movsl
xchg
jp
rcrb
pop
pop
xchg
cmpsb
in
xchg
insl
pop
push
cmpsb
adc
int
mov
mov
adc
jp
cmp
in
ljmp
jg
dec
std
dec
mov
idivl
pop
dec
push
bound
dec
cld
cltd
movsl
cltd
insb
js
xchg
xchg
jae
jbe
cli
das
jno
xchg
loope
cmp
sahf
dec
stc
jbe
jmp
cmpb
mov
icebp
movsl
push
call
cmp
sub
je
cwtl
fbstp
pop
dec
outsl
cmp
cmp
jecxz
test
stos
cmp
push
mov
and
arpl
andl
loopne
das
or
dec
adc
fisubrs
outsb
cmp
repz
arpl
scas
jg
mov
pop
or
enter
pusha
cmovo
cli
xchg
testl
pushf
repnz
pop
dec
int
mov
xchg
sahf
rolb
add
addr16
pop
inc
in
and
hlt
adc
sbb
mov
cmp
sub
cld
mov
outsl
pop
pop
jnp
mov
xchg
std
insl
mov
test
xchg
lret
adc
or
mov
mov
xor
cld
pop
cmp
das
pop
jge
pop
shll
and
jl
inc
icebp
shlb
push
add
cmp
lret
nop
dec
loop
xchg
ljmp
add
mov
fdivr
leave
or
xor
shll
mov
push
and
add
push
adc
and
cmp
fadds
inc
sub
in
adc
lea
sub
xor
ret
daa
test
cmp
adc
mov
icebp
mov
dec
repz
push
sub
js
mov
bound
rolb
jae
xchg
adc
mov
jae
imul
ja
orb
inc
and
push
xor
stos
dec
mov
les
adc
cmpsb
pop
pop
and
divb
xor
and
cmpsb
xchg
sub
cmpsb
lea
bound
pusha
push
je
inc
imul
cmp
ss
testl
loop
xor
xchg
mov
dec
pop
jno
adc
test
fistpll
imul
call
sub
out
or
lock
sub
cld
jp
fcoms
addl
loope
cmp
in
lret
dec
xchg
inc
sub
cmpsb
xor
jnp
lret
rorl
lock
mov
rcrl
ret
repz
xchg
mov
or
adc
or
into
inc
pop
sub
cmpl
fldcw
pop
fbld
and
aam
shr
mov
rcrb
js
mov
rcl
mov
xchg
fnsave
xor
outsl
mov
ds
sub
pop
repnz
push
ret
int3
shrl
and
sbb
or
jg
roll
rcrb
mov
iret
movsl
cld
sahf
in
add
jnp
jmp
add
xchg
enter
frstor
pop
in
push
insb
lret
jnp
dec
add
jne
dec
aam
dec
ja
jns
ret
pop
idiv
pop
xor
xchg
sub
lock
add
das
lds
ss
mov
xchg
mov
sbb
jg
jmp
sbb
int3
insb
fnstenv
jno
fsubl
std
shll
sbb
jge
and
stos
mov
xchg
sahf
shrl
xchg
repnz
dec
or
int3
mov
add
add
arpl
arpl
mov
inc
in
hlt
mov
add
icebp
push
aaa
xor
mov
lret
neg
xchg
mov
xchg
and
stos
pop
push
fs
scas
stos
sbb
mov
jmp
divl
imulb
out
dec
fcomps
sbb
lods
mov
mov
mulb
xor
cltd
popa
or
pop
jmp
cwtl
pop
scas
loop
bnd
pop
push
pop
xlat
lea
sub
jge
mov
and
jbe
js
popa
stc
in
ds
add
lcall
es
sarl
sbb
shl
lcall
push
mov
das
xchg
aas
lcall
outsl
push
gs
mov
lret
lock
jae
adc
sti
mov
inc
les
fmul
in
xchg
jns
shlb
popf
jmp
mov
cltd
insl
mov
das
icebp
sub
popf
sub
add
xchg
inc
mov
jl
or
ret
ljmp
dec
nop
es
pop
add
dec
call
icebp
fcmove
and
test
jp
mov
fstp
add
mov
sub
lahf
pop
xlat
xchg
lds
fstp
cmp
cmpsb
jnp
ret
ret
jecxz
push
dec
jnp
aam
jb
aaa
cli
push
out
jns
pushf
data16
pop
push
mov
sbb
stos
adcl
cmp
pop
orb
ret
shl
adc
out
addr16
xlat
negb
dec
mov
roll
xor
cwtl
push
daa
sub
mov
xor
inc
inc
mov
inc
hlt
cmp
stc
rcrb
in
sub
lock
imul
cmp
test
push
and
inc
mov
loope
scas
xchg
out
inc
outsb
pop
jb
and
xor
push
inc
xor
das
cmp
lahf
pop
imul
sbb
jmp
and
mov
cwtl
jnp
push
mov
test
jbe
aas
xchg
jg
test
xchg
jecxz
mov
inc
or
jle
or
repnz
and
xchg
xor
mov
or
pop
out
fnstsw
sbb
out
lock
mov
test
dec
mov
fimull
mov
call
scas
cld
add
inc
iret
decl
ss
rcrb
and
mov
in
mov
lret
xor
xchg
in
pop
xchg
shlb
fcompp
aad
jno
xchg
idivl
into
fcomip
inc
lds
mov
inc
fidivrl
out
adc
cvtdq2ps
dec
push
add
inc
add
inc
fidivs
adc
push
aad
out
aad
inc
pop
jmp
jg
enter
lret
mov
negb
pop
push
dec
push
sub
pop
mov
mov
xor
pop
ja
xchg
and
xchg
aam
scas
shll
xor
or
pop
lock
xchg
cmc
lahf
push
mov
push
mov
std
push
xchg
adcl
insl
push
xchg
mov
cmp
xor
xchg
fsubs
jno
cmp
fisttpll
cld
sarb
ja
inc
sub
push
jae
in
and
lock
jp
sbb
cmpsb
mov
jle
or
gs
xchg
or
leave
xor
outsl
xchg
xorb
jle
adc
xor
mov
jl
aam
xlat
sbb
cmp
mov
add
xorl
lods
jp
dec
pop
enter
jmp
sbb
push
push
cmp
add
sub
stc
mov
out
or
dec
xchg
pop
movsl
pop
out
add
cld
stos
jo
and
mov
jbe
jbe
imul
rcl
gs
dec
stos
inc
addb
in
inc
lcall
aam
add
cmp
mov
add
mov
idivl
lock
or
int3
push
pop
or
pop
mov
mov
ss
cmp
addr16
lahf
jp
cmpsb
movsb
int3
ljmp
pop
mov
shll
push
sbb
or
and
or
jne
addb
pop
lret
xchg
outsl
and
dec
lret
aas
pop
inc
mov
fmul
or
insl
mov
cmpsb
lds
adc
sahf
lcall
mov
cmp
cmp
rorb
xchg
push
cltd
out
mov
pop
int
imul
or
movsl
loop
lahf
test
fs
pushf
jg
sub
add
pop
dec
lods
mov
test
lea
mov
cmpsl
arpl
popf
push
cmpsl
mov
mov
push
fsubrl
test
insb
das
gs
stc
in
mov
and
movl
push
ja
push
dec
jmp
dec
imul
je
andb
hlt
lahf
lret
sahf
sbb
pop
or
repnz
jl
popf
mov
push
inc
adcl
stc
xor
add
lock
icebp
sub
push
mov
jbe
inc
std
in
in
icebp
sub
inc
push
cmp
enter
fldl
call
xchg
and
imul
rcrb
ret
and
inc
xor
push
or
insl
or
mov
and
xor
mov
rorb
xor
adc
repz
subb
cmpsl
adc
cltd
jmp
inc
andl
ret
inc
fmuls
int3
cld
std
popf
or
xlat
add
cltd
mov
mov
sbb
imul
iret
mov
pop
jl
mov
rcr
mov
adc
test
xchg
je
std
pop
mov
fwait
or
add
pop
sub
fdiv
push
and
lret
iret
repz
fdivl
dec
mov
or
inc
xchg
adc
pop
addps
adc
mov
xchg
xor
sub
stc
loop
lods
mov
cmpsl
js
cmc
jbe
subw
cmp
xchg
pop
push
lcall
das
daa
push
jns
push
sbb
or
sbb
xor
inc
mov
leave
movsl
rcrl
add
or
fildll
clc
jnp
inc
dec
repnz
call
fs
inc
or
dec
shr
pop
loopne
fnstsw
leave
or
or
jg
mov
push
mov
jno
lods
enter
dec
mov
mov
jl
nop
cmp
mov
mov
cmc
and
ret
push
sbb
data16
xor
and
fwait
nop
xchg
jg
shll
jo
add
scas
movsl
push
bnd
add
xor
aaa
dec
xor
insb
ss
jg
add
inc
mov
cmp
test
sub
cmpsl
aaa
and
xchg
adc
xchg
mov
pop
hlt
sub
aas
lock
push
test
adc
icebp
inc
test
repz
mov
xor
in
xor
popf
add
sbb
filds
xlat
xchg
loop
in
not
xor
inc
jecxz
mov
jge
in
out
pushf
and
pop
push
mov
push
adc
mov
push
inc
and
or
adc
push
rcll
mov
xor
inc
test
sti
call
shrl
push
or
xchg
shl
jl
mov
add
out
mov
popa
pop
adc
in
add
in
fisttps
ffree
fiaddl
xlat
dec
lcall
cld
xorl
imul
out
sub
push
or
cmpsb
stos
jb
iret
aam
mov
leave
sbb
and
add
test
stc
mov
lea
int3
dec
bound
es
pop
mov
pop
sbbl
sbb
ljmp
adcb
xlat
out
xchg
mov
add
or
das
inc
mov
cwtl
xor
icebp
aad
lret
stc
adc
pop
dec
xchg
mov
or
cli
pop
cwtl
add
jb
xor
hlt
outsb
dec
ja
in
pop
fmul
xchg
adc
sub
pop
sub
xchg
adc
shlb
dec
lcall
jae
mov
stos
notb
js
add
push
sub
push
out
xor
loop
mov
mov
jmp
inc
mov
popa
pop
loopne
shll
add
mov
ss
jp
in
out
ret
xor
cmp
je
loopne
enter
add
fwait
cmp
or
in
out
lret
scas
lods
sti
gs
lahf
push
es
adc
into
mov
aad
add
and
jl
out
mov
cmp
lret
popf
cmp
cmp
push
dec
push
pop
jne
xor
testl
pop
lcall
sahf
sahf
sti
pop
imul
push
stos
rcrl
dec
sbb
push
xor
jle
les
subl
xchg
inc
inc
sti
je
or
call
into
mov
mov
pop
and
repz
cltd
nop
cld
es
div
cmpb
dec
push
mov
cmp
sarl
push
scas
in
cwtl
push
xor
ljmp
and
mov
push
repnz
sbb
call
or
push
push
pop
sbb
sbb
and
push
push
push
loop
mov
aam
dec
movsl
dec
mov
push
mov
and
dec
call
pop
adc
mov
mov
ljmp
movsb
xchg
paddw
lods
add
ror
ret
pop
mov
dec
sub
or
mov
jp
pop
jne
jae
push
push
sub
mov
mov
mov
dec
mov
mov
cmc
idiv
hlt
daa
mov
mov
dec
call
vcvtdq2ps
cwtl
jmp
fmul
mov
sub
rolb
movsl
cmpsl
pop
div
loope
jno
jb
xchg
add
add
pop
popa
in
ds
jo
lods
aam
jecxz
push
dec
adc
and
lods
cld
test
ds
push
inc
cmp
push
inc
decb
pusha
test
dec
cs
lcall
mulb
jle
push
adc
inc
jo
push
dec
push
push
jnp
stos
jno
xor
xor
and
ds
push
out
sbb
aam
mov
pop
stc
xchg
or
xchg
iret
xchg
push
cmp
ds
add
xchg
push
mov
rolb
xorb
pop
and
pop
loop
jo
sub
pop
mov
mov
jnp
negl
mov
cld
sub
mov
mov
mov
divb
add
or
xchg
shl
pop
test
or
fcompl
in
ret
adc
push
xor
test
je
adc
sub
push
mov
ficomps
data16
inc
sbb
ficoml
pop
test
sub
loopne
daa
inc
int
mov
stos
aaa
pop
movsl
je
daa
das
push
and
mov
fwait
incl
jmp
pop
rcr
sahf
xchg
sub
sub
jno
pop
mov
rcrl
xchg
lods
aam
sahf
cmp
cmp
shll
push
fwait
andb
push
push
mov
adc
test
cmp
mov
sub
jp
push
pop
push
lret
sbb
mov
pushf
les
fcom
adc
inc
jl
cmpsl
movsl
negb
xchg
sbb
mov
ljmp
xor
fs
movsl
pop
sbb
push
in
insl
sub
pop
mov
sub
push
jle
popf
bound
popf
shll
lods
icebp
mov
adc
jmp
push
dec
jecxz
and
subl
in
cltd
pop
addl
xor
insl
add
pop
lahf
xor
or
jl
add
sub
insb
mov
xor
cltd
insb
in
mov
cli
dec
repz
jbe
sub
lods
push
aaa
outsl
mov
xlat
aas
pop
jl
add
xchg
mov
and
outsb
jg
dec
js
inc
enter
and
in
sub
add
imul
dec
sub
add
aad
rolb
sbb
push
jne
xchg
add
ja,pn
lcall
mov
push
mov
or
call
sbb
fcoml
mov
nop
data16
mov
sbb
xorl
repz
cmp
daa
cltd
jno
out
sbb
dec
adc
inc
testb
arpl
ret
cs
cld
cld
loope
iret
enter
addb
loop
insl
nop
sbb
lods
out
jne
les
adc
unpcklps
data16
ds
lea
mov
mov
std
inc
mov
inc
cmp
xor
or
pusha
leave
icebp
inc
sub
lock
dec
lea
and
sbb
sti
xorb
aad
fidivs
xchg
cmp
daa
xor
sarb
lretw
mov
adc
or
or
sub
xchg
cld
leave
add
cmp
cmp
loopne
inc
enter
stos
adc
xor
rcl
inc
andl
imulb
cmp
fwait
sub
pop
inc
int3
repnz
int3
ja
sbb
push
mov
adc
add
in
pushf
stos
stos
push
jecxz
and
gs
out
or
jne
cmpsb
ret
and
jge
cmp
xor
mov
adc
mov
shl
inc
arpl
cmp
adcl
rclb
scas
lahf
mov
fldt
lea
or
inc
xlat
dec
jmp
popa
inc
mov
loopne
stc
xor
pop
xor
test
rcll
jl
movq
fwait
vmread
inc
cltd
pop
and
and
loope
adc
repnz
pop
xchg
dec
rcrl
test
daa
in
out
xor
movsl
push
mov
les
cmp
out
loope
lcall
pop
dec
mov
dec
mov
jge
mov
mov
jmp
cmp
mov
sub
stos
mov
out
sub
lods
repz
into
sbb
daa
add
icebp
pop
mov
push
loop
pop
lret
and
jno
pusha
pushl
js
in
push
fcmovnu
add
dec
push
jg
push
dec
add
scas
adc
cmp
jnp
xchg
sbb
ljmp
aaa
inc
lods
jl
lcall
cmp
dec
adcl
cmp
sbb
mov
fisubs
addl
sbb
inc
cmp
pusha
in
insb
icebp
cmp
lock
arpl
cmc
mov
add
fbstp
cmp
cmp
pop
int3
mov
fsubs
xor
push
lret
pop
insb
mov
jns
loopne
xor
dec
maxps
das
pop
mov
gs
mov
or
shl
int3
aas
shlb
outsb
addr16
xchg
sti
stc
test
pminsw
mov
lea
sbb
repnz
pop
cmc
enter
daa
sbb
inc
push
mov
pushf
in
pop
lret
inc
adc
bound
movb
inc
fldl
sbb
sub
hlt
cmp
xchg
scas
adc
or
mov
sahf
add
dec
cwtl
rep
ret
addr16
mov
nop
out
push
mov
bound
popf
fsubr
jns
clc
mov
mov
dec
sti
xor
mov
add
test
stc
cwtl
rclb
mov
out
mov
lea
addr16
popf
out
std
cmp
movsl
and
scas
xchg
lock
fucomip
movsl
cmp
sub
or
mov
xor
insb
jb
sub
fisubs
add
lds
or
shll
lcall
xchg
add
scas
cmpsb
aad
push
lcall
aas
out
sub
mov
mul
fsubr
and
jmp
jge
mov
pop
mov
pop
xchg
xchg
loopne
outsb
dec
jb
sub
and
aam
inc
and
jecxz
sub
jg
lahf
mov
lret
das
lret
lods
loope
jmp
mov
sbb
movsb
xchg
pop
loope
test
add
bound
jg
cltd
mov
test
jp
js
and
pop
sarb
xchg
aam
jmp
and
or
cmp
cmp
mov
pop
aaa
dec
mov
mov
test
add
push
rorb
push
das
sbb
sub
jno
push
sub
aaa
add
add
aaa
or
inc
pop
cmp
leave
stos
dec
push
les
imul
lea
shlb
ffreep
insl
and
xor
nop
je
xchg
jg
jmp
and
sbbb
mov
ja
mov
jno
fnsetpm(287
cmp
cmp
jl
or
inc
inc
insb
dec
fsts
push
xchg
loopne
pop
jo
pop
push
mov
pop
je
xchg
mov
dec
xlat
bsr
cmp
std
sbb
popf
cmp
es
clc
or
leave
inc
mov
insb
add
pop
fiadds
inc
mov
dec
add
into
iret
inc
icebp
mov
push
repnz
xor
mov
fwait
mov
repz
scas
fldt
mov
inc
jo
mov
das
sub
inc
and
ljmp
cmc
sbb
cmp
adc
mov
jne
les
lock
mov
fists
insb
fstps
nop
pop
xchg
xchg
outsb
or
imul
lret
ja
fbstp
cld
lock
or
outsl
inc
xlat
sub
push
les
cmp
dec
mov
loopne
sti
insl
roll
out
jae
sub
in
cmp
sbb
pop
ret
rcrb
mov
pop
mov
xchg
jge
xchg
and
sub
inc
inc
fs
add
nop
arpl
out
int
ss
adc
sbb
cmp
mov
push
push
push
add
ret
into
in
dec
or
jno
sti
push
add
or
aaa
lcall
adc
push
push
or
xchg
lea
xor
xchg
fcmovnbe
jne
hlt
inc
loopne
mov
insl
jl
lret
clc
stos
stos
xchg
imul
aam
in
clc
cld
dec
ljmp
and
out
xor
rorb
lock
sbb
mov
cli
jae
push
sbb
cmp
lcall
mov
mov
sub
loope
inc
lods
ds
inc
mov
inc
cmp
outsb
push
pop
inc
add
mov
sub
insb
scas
mov
lret
bound
add
jecxz
push
or
dec
inc
jp
mov
mov
sub
out
pop
jae
mov
aam
pop
aad
in
sbb
inc
xchg
in
outsb
or
outsb
fsubl
inc
mov
sub
sti
cmp
pop
out
cmp
add
lods
mov
ret
lods
fisubl
xor
mov
subb
pop
jle
sbb
lret
sub
sub
pop
mulb
das
cwtl
hlt
loope
and
add
jge
shll
mov
cmp
inc
aas
lahf
scas
pop
mov
lea
aad
fimuls
adc
mov
jo
leave
sub
sub
xchg
fs
mov
mov
fdivrp
gs
push
add
push
cmp
or
and
in
imul
mov
adcl
pop
or
in
pushf
xor
mov
ret
mov
sti
outsb
dec
lea
sbb
scas
pop
sbb
xchg
mov
push
or
shl
jmp
nop
mov
push
dec
inc
jg
rorl
mov
push
nop
xorb
loop
ficoml
mov
jmp
dec
mov
mov
test
lret
mov
cs
roll
hlt
nop
xor
fldcw
inc
jge
lcall
push
jns
imul
sub
or
and
xchg
cmpsb
add
or
aaa
fcomps
push
sti
adc
lds
jge
pop
push
insl
and
fidivl
sub
jne
stc
shrl
repz
dec
test
xor
mov
pushf
push
pop
adc
cli
xchg
inc
fsubs
out
sbb
mov
call
pop
jge
jp
jmp
ret
cwtl
pop
mov
push
scas
jo
loopne
dec
push
pop
mov
insb
adc
clc
popf
inc
fidivs
loopne
outsl
sbb
fidivs
mov
or
aad
inc
xlat
xchg
add
icebp
sbb
add
inc
les
test
and
push
xlat
or
push
mov
jb
dec
fwait
bound
and
jp
mov
cmpsb
jmp
mov
cmp
push
inc
dec
sarb
pop
pop
jg
xchg
fcom
cmp
xchg
sbb
jl
mov
sahf
popf
loopne
push
out
scas
inc
in
pop
pop
mov
mov
xor
sbb
mov
cmp
mov
test
cs
dec
popf
push
mov
sub
xchg
mov
sbb
test
out
xor
call
lcall
rorb
adc
cmp
xlat
xor
inc
xor
mov
push
out
cmp
mov
mov
scas
pop
test
sub
cmpsl
cwtl
adc
jl
xor
cwtl
mov
cmp
in
dec
xchg
dec
mov
xchg
jno
stos
stos
mov
lock
xor
sarb
adc
insb
cmp
rolb
ja
cwtl
add
frstor
andb
xor
add
adc
xchg
shrb
aas
lods
push
mov
jo
lret
mov
or
cld
lret
and
push
imul
test
mov
or
adc
add
sub
insb
sub
add
mov
xchg
adc
cmc
pop
sahf
add
pop
insl
fs
push
out
or
jmp
mov
nop
dec
dec
xor
into
pop
loope
sub
pop
fs
arpl
inc
xorl
std
test
add
xor
inc
jo
xchg
inc
mov
pop
pop
addl
fimuls
mul
rorl
xor
xor
cmp
push
or
shlb
in
and
pop
mov
dec
rorb
jl
jecxz
push
dec
adc
xchg
and
rcr
ret
cmpsl
stos
call
xor
mov
mov
leave
in
inc
xchg
xchg
xchg
lret
or
xorb
cmpsl
sbb
cmpb
lds
inc
stos
sbb
fnstcw
pusha
ret
movb
rclb
cmp
cwtl
aam
xchg
adc
sub
sub
insb
leave
push
lret
out
xchg
xor
and
mov
jo
push
push
sub
push
clc
lods
mov
dec
pop
ret
push
mov
cmp
cmpsb
daa
daa
add
pop
mov
xor
fnstcw
add
mov
cmp
xchg
fs
popa
mov
test
push
movsb
or
lcall
xor
push
push
dec
nop
movsb
adc
aaa
mov
jno
push
imul
leave
imul
mov
mov
and
ret
push
sbb
add
add
sbb
js
mov
xchg
stc
adc
daa
enter
cmpxchg
sbb
cli
rorb
dec
sub
mov
int3
lock
outsl
sub
sub
dec
dec
pop
mulb
sbbl
push
jmp
std
ss
mov
es
lret
in
sub
aaa
icebp
icebp
pop
lahf
aaa
mov
nop
outsl
dec
xor
call
and
dec
orb
push
int
pop
adcl
js
sbb
dec
xor
pop
sbb
cld
xchg
lret
dec
insb
xchg
aaa
adc
es
xor
cmp
stos
inc
aam
or
mov
and
shr
daa
aad
scas
pusha
insl
ja
push
or
jno
add
mov
jl
popf
or
xor
loopne
imul
cmp
jno
popl
add
ljmp
inc
jae
mov
mov
mov
or
mov
cmp
sbbl
cmpb
inc
fiaddl
iret
into
jg
sbb
int
ljmp
es
lods
sahf
notb
and
jp
pop
and
add
aas
sub
xor
jecxz
rol
mov
xor
mov
fsubp
ljmp
mov
mov
adcb
rcrb
xchg
fsubl
loopne
ja
mov
mov
ret
jl
insb
pop
mov
xor
notb
fwait
xchg
fldpi
hlt
fisubrl
lods
frstor
xchg
js
inc
fwait
xchg
das
sub
loop
fcomip
lret
or
xchg
loopne
xchg
and
insb
andl
fnstcw
cmpsl
insl
cmp
xchg
xchg
sbb
pop
lods
jle
cmpsb
adc
mov
repnz
out
mov
mov
paddsw
arpl
rcl
lahf
jg
jecxz
mov
ret
ljmp
orl
es
scas
add
inc
sbb
and
aas
pusha
add
and
int3
mov
test
cmp
jecxz
xor
test
xor
xchg
mov
mov
dec
dec
bound
add
lock
nop
lret
loop
mov
dec
or
clc
lock
push
lea
mov
fisubrl
pushf
cmp
fmull
mov
dec
lea
mov
lea
rcl
add
mov
inc
aas
cwtl
jg
fmuls
mov
mov
popa
inc
sub
ds
movsb
sahf
mov
vpunpckldq
dec
rolb
into
cmp
xor
inc
movd
push
jmp
pop
dec
push
mov
mov
hlt
jns
int
in
movsb
dec
scas
sub
add
popf
repnz
pop
testl
sub
repnz
popa
out
out
jb
lcall
aas
bound
jno
sub
mov
scas
push
xor
popf
rcll
push
out
and
adc
out
jge
enter
adc
jo
push
sbb
fbld
cmpsb
insb
addr16
mov
inc
loope
dec
out
cltd
sub
cltd
nop
sub
loope
cmp
cmpsb
cmc
pusha
push
push
pop
cmpb
mov
ljmp
enter
jb
jne
into
push
xor
jge
adc
ret
scas
insb
sub
dec
inc
repnz
mov
inc
xchg
jne
push
jmp
mov
movsb
fiaddl
aam
jl
sbb
xchg
testl
imul
jno
popa
loop
movsb
push
fs
mov
nop
test
fs
mov
cli
push
lahf
xlat
mov
aaa
push
xchg
in
adc
test
ja
div
mull
jbe
dec
and
pop
add
adc
mov
fsubs
jbe
dec
lret
data16
xchg
xor
das
push
sub
shll
push
movsb
xor
mov
cmp
cmpsl
mov
gs
std
lea
aad
push
les
stos
fsub
int
data16
je
nop
mov
jnp
popa
fsub
in
sbb
fadd
sbb
mov
cmp
or
push
add
jbe
aaa
mov
out
sub
hlt
loop
test
push
mov
inc
pop
jmp
in
faddl
and
mov
inc
pop
jl
mov
int3
inc
lods
xchg
fistl
adc
xchg
xchg
xor
rol
mov
adc
mov
jno
aad
jecxz
cmpsl
and
das
insb
jbe
and
sbb
or
rclb
mov
cld
jmp
pusha
lea
xchg
clc
cmpl
adcl
xor
pop
cmpb
push
negl
mov
cmp
out
lret
sbb
outsb
push
out
sbb
sub
adc
xchg
mov
sbb
mov
outsl
stc
xchg
jmp
jae
jne
inc
mov
mulb
jmp
mov
in
lret
dec
sbb
mov
mov
dec
add
sbb
lret
lods
stos
cmp
pop
jb
dec
inc
jge
xor
push
rclb
push
fs
fnstcw
test
aaa
stos
dec
mov
pop
rcrl
imul
cmpsb
sub
push
inc
jne
cmp
testb
popf
mov
loopne
jge
stc
mov
and
aas
div
or
int3
cs
lds
mov
movl
rol
inc
outsl
xchg
push
iret
pop
out
lock
xchg
dec
lahf
mov
dec
stc
insb
outsl
pusha
lahf
push
ds
jge
jmp
repz
pop
setb
fxam
sub
insl
cli
testb
jecxz
enter
addr16
dec
mov
and
dec
pushf
jnp
push
dec
not
outsb
xchg
out
call
cmp
cs
outsb
mov
movsb
idiv
popw
mov
sub
push
or
dec
scas
push
jbe
rolb
xor
aad
cmpsb
adc
std
scas
xchg
idiv
add
xchg
push
jb
dec
mov
xchg
pop
hlt
jmp
sbbb
mov
nop
inc
scas
mov
jbe
push
in
fadds
in
add
cmp
add
jecxz
stc
stos
loopne
add
xchg
mov
mov
push
mov
xchg
pop
adc
sub
loop
xor
and
fsubrs
fdivrp
mov
test
fsubs
lret
jb
or
xchg
mov
or
cwtl
mov
repnz
xchg
jg
sub
in
and
popf
dec
xor
out
rorb
gs
pop
negb
xchg
xor
dec
std
inc
xchg
cmp
mov
jb
ret
sub
cmp
add
repz
pusha
test
adc
push
jb
jle
aad
loope
cmp
repz
sbb
push
sahf
jle
xchg
adc
movb
test
lods
pushf
sub
mov
push
jbe
in
and
lods
cltd
or
xor
aam
and
adc
jne
and
xchg
xchg
loopne
out
mov
leave
or
sti
nop
xchg
notb
add
cli
out
lcall
lods
push
xchg
sbb
sti
jne
testl
push
cmp
call
push
stos
jo
fistpll
or
scas
sbb
shlb
or
xor
jbe
dec
adc
sub
or
lods
cwtl
push
jg
sub
push
enter
lcall
js
sbb
or
fimuls
push
inc
mov
mov
sti
xlat
gs
sub
repnz
adc
and
shl
addr16
lahf
pushf
xchg
pushf
std
lret
fidivl
mov
gs
repz
lock
and
lock
je
jnp
or
pop
lds
lock
xorb
jns
test
adc
test
sbb
cmpsb
fsts
sbb
mov
ret
in
pop
mov
cs
jg
fistps
mov
mov
xor
loopne
inc
mov
pop
rcr
mov
sub
lea
lcall
es
xor
test
pop
and
out
and
pop
aam
movsb
dec
mov
rorl
les
jnp
int
adc
pop
rol
mov
cmp
cmpsb
push
std
shlb
je
addb
lcall
scas
push
xor
xchg
div
xor
push
and
or
mov
mov
imul
sub
stc
cmovs
fdiv
pop
gs
push
roll
push
lret
stc
xorb
sub
inc
dec
mov
or
loope
lds
scas
ljmp
sub
inc
mov
xchg
imull
std
jo
mov
ret
mov
mov
cld
push
lods
dec
jge
xor
xchg
icebp
int3
shlb
insb
and
xchg
out
ret
clc
aas
mov
pushf
out
jl
inc
sbb
lcall
sub
loope
ss
sub
test
mov
sub
repz
cmp
test
rcl
into
imul
mov
dec
rcr
aas
push
jmp
popf
lcall
stc
mov
ret
je
mov
pop
and
pushf
icebp
sahf
jl
rcr
data16
mov
mov
add
inc
mov
sub
dec
dec
loopne
jg
icebp
and
dec
inc
shll
cmp
adc
outsl
pop
pop
mov
fwait
adc
mov
roll
add
cwtl
insl
and
test
ds
sbb
push
in
xor
mov
movsb
pusha
test
mov
sbb
adc
or
es
outsb
inc
sahf
das
sbb
or
jns
sub
push
test
and
sbb
gs
data16
test
jo
pop
or
mov
popf
inc
sahf
lods
aam
mov
lods
ljmp
test
int3
cmp
mov
push
aad
fisubl
or
push
lcall
inc
add
xchg
inc
adc
or
pmulhw
scas
xor
stos
sahf
shr
or
sarl
xchg
xor
test
gs
lods
xor
test
inc
fadds
stos
icebp
dec
sbb
inc
pushf
fcmovb
insl
lods
call
adc
dec
loope
add
and
mov
push
int3
xor
pop
lods
dec
cmp
and
mov
cmpsl
fmull
flds
push
std
inc
sbb
inc
mov
loopne
mov
cld
and
je
inc
jne
sub
inc
lret
fisttpll
xor
cld
inc
sub
dec
xchg
test
xchg
ret
dec
loopne
shl
xchg
out
or
jmp
adcb
xchg
cmp
mov
into
jmp
xor
jb
mov
cli
pop
dec
jno
mov
imul
sbb
jbe
int
cli
cmp
xchg
sub
sbb
and
ret
adc
mov
or
clc
add
or
shlb
rorb
and
push
mov
lods
fs
call
push
jmp
daa
xchg
xorl
rorb
cmpsb
and
dec
mov
xor
cmp
xor
iret
and
cltd
and
pushf
mov
jbe
jnp
imul
ficompl
shl
lret
sbb
push
ja
sub
test
rcr
inc
adc
add
je
scas
movsl
testl
pushf
cmpsl
mov
ds
xchg
inc
jns
ffree
sbb
scas
repnz
adc
jnp
or
lods
sahf
cmp
mov
sbb
ds
fs
push
cmp
ror
pop
mov
cmp
xchg
dec
xor
fmuls
test
push
add
pusha
imul
inc
popf
or
aaa
mov
cmp
imul
repnz
sub
fcompl
cmp
aam
sbb
mov
in
xchg
dec
inc
and
icebp
or
lcall
movsl
push
or
jg
test
or
repnz
into
mov
repnz
adcl
mov
cmpsl
setne
or
dec
arpl
test
jb
rolb
push
and
sbb
popf
das
lods
leave
xchg
pop
callw
xchg
sbb
pop
rol
scas
jmp
loopne
imul
insl
xchg
outsb
push
and
dec
and
push
mov
popf
jl
sti
lret
or
cmc
pop
push
data16
sub
ficompl
out
sahf
mov
call
push
inc
fists
mov
dec
push
js
loopne
sub
lods
mov
cld
repz
and
cmp
aas
jnp
outsl
shr
loopne
int
aad
imul
add
mov
mov
shll
ljmp
inc
aas
std
mov
stc
sbb
xchg
or
mov
mov
jmp
mov
data16
jmp
cs
sahf
xchg
in
cwtl
pop
dec
les
scas
jmp
xchg
or
xor
test
cmp
jg
mov
xchg
pop
or
out
mov
inc
mov
xchg
movsl
dec
lods
cmp
mov
rorl
fwait
xchg
pop
dec
fsubrs
cwtl
stc
or
jmp
mov
ret
nop
out
mulb
dec
aam
addr16
loop
jmp
or
push
xor
pusha
jae
dec
popf
enter
jns
and
shl
xor
pop
inc
pop
sbb
add
dec
arpl
cmp
es
ljmp
sub
xchg
mov
or
dec
cli
rcll
adc
insl
or
mov
dec
xor
mov
and
dec
jge
push
xchg
decl
stc
dec
pop
xor
mov
cmp
mov
push
dec
and
movsb
add
xchg
out
lcall
loope
cmpsb
aaa
cwtl
cmp
imul
push
lcall
adc
sbb
add
aam
nop
pop
ret
and
pop
push
add
pushf
in
and
mov
sahf
or
add
xchg
mov
fistpll
repz
mov
push
in
aam
fs
mov
cmpsb
int
imul
xchg
dec
hlt
xor
or
shrl
adc
cmp
push
repnz
sub
mov
xchg
imull
neg
shl
icebp
jp
inc
mov
ret
addr16
sub
ja
aam
push
mov
ss
xor
xor
ljmp
cmpsl
dec
xchg
pop
xchg
je
jg
pop
mov
in
cld
xchg
mov
daa
mov
sub
and
push
and
negl
sbb
sub
pop
jecxz
or
nop
pop
inc
enter
inc
test
nop
loope
pop
repz
xchg
insl
ds
cmc
jbe
jg
insb
or
sub
pop
jo
push
xor
and
mov
fsub
cld
cmp
aam
addr16
dec
lds
lret
mov
inc
test
add
leave
pop
sub
mov
xchg
jle
ja
or
lds
or
imul
leave
inc
xor
xchg
sbb
rcll
mov
cs
cmp
addl
ja
aam
fiaddl
rol
mov
inc
mov
push
sbbl
add
adcl
testl
movsl
pop
jne
test
xchg
fistps
std
data16
fists
pop
mov
mov
sub
sbb
mov
push
subb
sub
sbb
das
movsb
push
sti
sbbl
add
xor
push
and
insb
fisubl
imul
enter
int3
mov
sti
inc
push
mov
test
pop
xchg
iret
push
adc
cmp
mov
nop
outsb
popa
cmc
es
lcall
scas
xchg
mov
xchg
cltd
pushf
mov
push
xchg
jbe
mov
dec
inc
movl
mov
pop
dec
idiv
int
aam
in
lods
inc
adc
in
ret
lret
mov
pop
addr16
mov
je
loope
out
in
gs
jnp
repnz
lods
xchg
int3
lods
test
testb
sbb
push
inc
mov
imulb
imull
sar
daa
pop
xlat
fildl
jno
push
fisubrs
stos
dec
enter
pop
pushf
and
xchg
xchg
sub
xorb
test
pushf
cmp
mov
mov
add
inc
test
mov
outsl
shlb
mov
cli
pop
fs
inc
imul
adc
and
cs
mov
xchg
sbb
enter
and
cmp
fsubrs
xlat
iret
mov
xchg
adc
mov
xor
jmp
push
call
dec
fwait
in
sub
sub
fxch
dec
ret
cltd
xor
jge
xchg
ret
push
adc
inc
jecxz
fmul
stos
adc
xor
and
jg
sub
mov
fisttpl
xchg
popa
jmp
rcl
add
lods
cld
dec
es
mov
mov
xchg
adc
les
lock
loop
pop
scas
jg
stos
sub
lahf
clc
jno
lods
fiaddl
movsb
scas
pop
or
inc
outsl
xor
sub
into
std
fisttpl
sbb
sbb
cmp
cs
adc
mov
mov
popa
frstor
xchg
lcall
dec
dec
push
mov
outsb
adc
imul
or
mov
lock
cli
dec
mov
das
lods
pop
jl
loop
mov
jle
add
adc
pop
lods
cmp
xor
lock
and
aas
mov
mov
mov
ficompl
xchg
mov
inc
mov
inc
push
mov
rclb
sub
stos
dec
add
insl
pop
and
mov
or
loopne
cmp
inc
add
call
test
lds
push
xor
les
push
hlt
roll
shrl
mov
sub
adc
sbb
dec
mov
sbb
xchg
or
lahf
sbb
leavew
cld
and
pop
mov
je
test
sub
ljmp
leave
cwtl
push
repnz
xor
inc
gs
jmp
inc
jo
push
lret
shlb
cmpsb
fistps
cs
sub
es
push
push
pop
sbb
rorl
cmp
aad
in
mov
adc
rorl
and
push
lods
dec
jge
cwtl
pop
xchg
mov
lahf
arpl
sbb
loop
orl
jl
lret
cmp
rcll
push
inc
pop
push
dec
imul
inc
aas
scas
dec
imul
lret
inc
jmp
pop
movsl
mov
out
jg
and
mov
mov
aam
push
out
mov
add
inc
stos
pop
rcll
jl
pop
push
xor
mov
push
iret
jge
add
nop
scas
fs
xchg
dec
dec
push
loop
rolb
adcb
in
cmp
rorl
and
sarb
icebp
out
insb
arpl
popa
jo
lods
adc
mov
out
add
adc
aas
dec
xchg
lds
mov
inc
mov
scas
inc
mov
sbb
clc
jnp
nop
xor
mov
lods
cld
push
push
xchg
in
adc
jge
jne
ds
mov
jmp
fldl
pop
faddp
js
mov
lret
or
mov
jnp,pn
cli
lock
or
iret
scas
subb
xchg
mov
popf
andl
fstl
jnp
mov
stos
mov
mov
mov
cs
sub
filds
cli
fwait
stc
aad
sbb
pop
cli
mov
je
pushf
lret
popf
fcmovnu
fnstsw
add
pop
pop
inc
fisubrl
icebp
fcmovnu
ret
imul
inc
mov
adc
int3
sahf
xor
sbb
cmovno
pop
pop
push
rorb
sbb
fistpl
sbb
inc
sbb
test
mov
lods
scas
imul
cmc
mov
mov
dec
jmp
mov
add
push
mov
adc
xchg
jb
je
test
push
cmpsb
popf
in
scas
movsb
pop
fucomp
jecxz
adc
sbb
mov
inc
test
das
cmp
jg
and
iret
mov
ja
push
sti
clc
lds
mov
addr16
xor
mov
stos
push
aas
and
xchg
pop
lods
lods
inc
imul
test
or
mov
inc
push
dec
out
ret
dec
push
out
andnps
insl
add
out
or
mov
xor
push
psubw
fsubrs
and
inc
xor
shrl
bnd
adc
cli
inc
leave
xchg
lahf
js
and
pop
inc
sbb
mov
lcall
out
mov
ja
mov
dec
movsb
inc
or
hlt
jbe
fcoms
jae
mov
loop
mov
push
in
pop
add
cmc
ja
mov
dec
insb
aaa
stos
imul
xchg
push
mov
loop
jnp
push
push
sbb
cmc
inc
jl
sbb
call
add
lds
and
cmp
movsb
jp
cmpsl
push
and
jo
ficoml
push
hlt
shlb
pop
test
mov
cmpsl
xor
into
adc
pop
cwtl
mov
mov
jg
dec
arpl
mov
push
push
jns
mov
aaa
imul
int3
repnz
gs
pop
dec
arpl
pop
rep
mov
aad
loope
ljmp
imul
dec
imul
sbb
roll
ljmp
in
dec
sub
mov
sub
and
cltd
loopne
cs
fisubrl
mov
insb
cmp
stos
or
xor
sbbb
js
xor
lahf
dec
scas
xchg
jecxz
mov
popa
xchg
sbb
or
and
jp
jnp
sbb
leave
xchg
gs
inc
pop
pop
mov
pop
cmp
xor
out
mov
pop
sbb
or
push
sbb
jb
into
mov
insl
dec
push
cmpsb
lret
scas
lret
and
ret
dec
sub
nop
and
push
push
ret
in
test
mov
jb
cltd
add
xchg
in
es
aad
gs
fwait
cli
jle
fisttpl
fisubrl
lods
movsb
pop
stos
lahf
cmpsl
repz
or
or
jl
pop
fwait
add
icebp
movsl
out
jmp
xchg
in
or
cmp
push
lahf
jbe
mov
leave
mov
nop
iret
scas
push
lcall
ja
jb
lahf
xchg
jb
sbb
mov
mov
lock
push
loope
ss
loop
ss
int
push
mov
mov
leave
push
add
adc
mov
adc
stos
mov
les
jp
out
mov
mov
dec
cmp
mov
xchg
popf
dec
add
and
xor
jle
or
gs
xchg
add
dec
cmp
testl
mov
stos
and
loope
movsl
andb
ljmp
bound
movsb
je
div
nop
enter
dec
add
out
popf
or
jbe
mov
dec
adc
push
addr16
mov
push
mov
xchg
loop
ffreep
popa
xlat
and
add
add
lods
fbld
inc
jl
shll
xchg
jl
add
push
ret
int3
dec
cmp
xor
jp
cli
rcrb
mov
js
jecxz
loop
and
xchg
mov
xor
clc
inc
inc
mov
mov
pop
into
fmuls
push
into
pop
lret
sbb
cwtl
cmpsl
dec
scas
clc
xor
xchg
lea
dec
cmpsb
sbb
cld
out
pop
movsl
push
out
adc
shll
cmp
ss
cmp
and
cmc
adc
das
rcrl
xchg
fmuls
mov
mov
mov
orl
repnz
or
mov
push
sbb
sbb
iret
mov
mov
sub
lds
popa
les
shlb
xchg
insl
push
or
mov
out
add
in
xor
sbb
movsl
cmp
into
test
rclb
into
adc
push
pop
sbb
loopne
jae
mov
jb
pop
clc
push
das
subb
jmp
stos
pop
shll
mov
push
jmp
test
jmp
adc
call
add
or
loopne
push
ja
movsb
cs
cmpsl
fsubrl
jl
gs
movsb
sub
mov
add
add
or
cmp
dec
add
adc
pop
in
fcomps
notb
enter
pop
add
or
clc
pop
lahf
xor
dec
mov
test
lret
jmp
hlt
loope
xchg
pop
aaa
dec
outsb
jge
fs
xchg
push
mov
adc
movsb
add
inc
add
scas
inc
daa
pop
pop
adc
and
call
push
ret
lods
sti
btc
dec
test
mov
push
in
scas
daa
sti
test
cmp
mov
stc
xchg
out
icebp
xor
xchg
inc
xchg
enter
ss
insl
inc
mov
dec
int
push
lock
cmp
push
cmpsl
bnd
jo
sub
or
or
adc
lods
pop
or
enter
and
cmp
pop
sub
sbb
int3
jl
push
add
xchg
test
add
mov
sahf
fstpl
in
push
shl
jbe
mov
sbb
pushf
cmp
cmp
mov
and
xchg
jne
mov
inc
lods
or
jae
ss
scas
test
rolb
xchg
addb
or
or
gs
movsl
jl
push
adc
inc
xlat
xchg
sub
out
jge
pop
cmp
out
je
sarb
and
cltd
outsl
xchg
push
std
out
push
data16
adc
mov
lea
xor
jb
arpl
in
jae
cld
or
mov
lods
mov
xchg
movsl
test
pop
cmp
hlt
cli
cmp
or
or
js
inc
lods
jb
daa
pop
gs
cmp
adc
cmp
loop
roll
loopne
xchg
call
sar
cwtl
dec
lcall
or
adc
xor
mov
push
pop
fwait
ret
xchg
daa
sbb
test
cmp
es
adc
bound
and
dec
cmp
andb
pop
lock
mov
jo
insb
mov
popa
lds
dec
add
sbb
xchg
jns
in
pop
jmp
adcl
in
in
add
outsl
and
inc
xor
lret
dec
jnp
sti
xor
aad
fists
ficoml
test
in
push
xlat
mov
loope
add
inc
and
popa
fdivp
leave
sarb
inc
sub
sbb
push
sarl
xorb
es
push
pusha
repnz
jle
sahf
jns
imul
xor
sbb
or
sub
stos
ds
gs
mov
imul
dec
mov
dec
and
jl
cmp
fcmovnb
push
lret
iret
test
xchg
cli
or
lods
dec
or
test
out
repz
pop
sub
dec
sbb
cltd
jne
movsb
jb
and
in
sbb
pop
mov
int
hlt
roll
cs
inc
pop
mov
adc
sub
fistpll
pop
lods
jl
enter
cmc
js
mov
out
sbb
addr16
cmp
scas
dec
inc
lahf
inc
push
subb
dec
addr16
xor
das
xchg
pop
and
clc
cmpl
movsl
or
call
iret
mov
mov
push
fs
mov
mov
negb
inc
lcall
mov
int
lock
inc
and
in
scas
inc
and
into
dec
sub
lahf
push
jo
lea
loope
inc
xchg
push
leave
pop
and
mov
in
cmp
push
or
dec
push
loope
mov
sub
rcrb
add
test
fbld
jbe
inc
adc
loope
adc
cmp
jb
pushf
sub
sbb
dec
mov
cmp
mov
out
adc
mov
or
sbb
xor
sub
add
fsub
ret
jnp
add
push
lock
mov
daa
cmp
mov
test
std
mov
cmp
mov
push
jbe
icebp
cld
and
mov
fnstcw
std
cmp
or
popa
adc
les
xor
add
and
popa
call
lahf
inc
repnz
pop
test
cltd
gs
cmp
icebp
loope
insl
mov
sub
fnstenv
out
fnstsw
pushf
movsb
dec
out
mov
pop
mov
jl
mov
mov
fs
aaa
ret
pop
xchg
adc
movsl
mov
fisubl
mov
sub
js,pn
dec
iret
mov
aaa
inc
push
in
lock
cmp
add
aad
insl
xchg
cmp
push
nop
push
push
repz
push
loope
inc
shrl
stos
stos
jmp
mov
sbb
adc
fwait
insb
outsl
push
int3
fldcw
sbb
loop
and
add
lods
dec
in
jns
lret
out
loopne
add
lret
xchg
jbe
jge
notl
loopne
pop
loopne
sbb
test
sub
mov
pop
dec
xor
push
stos
rcll
jmp
mov
pop
mov
mov
mov
ror
out
shrb
aas
rorl
mulb
xchg
testb
ja
push
or
repnz
mov
in
mov
jno
jp
roll
pop
leavew
jmp
jno
cmp
push
inc
xor
lock
xchg
mov
dec
sbb
pop
sbb
fmull
cmp
add
and
pushf
pop
andb
jo
lret
xchg
mov
and
dec
stos
pusha
xchg
xor
in
sbb
lea
or
imul
xchg
ret
mov
xor
cmc
inc
aam
stc
jmp
scas
or
sbb
icebp
scas
sub
sbb
xchg
lock
add
sub
xchg
mov
add
pop
imul
arpl
sub
pushf
test
arpl
repz
push
sarb
lret
arpl
pop
sbb
mov
loope
testb
lcall
mov
xchg
xchg
xchg
js
mov
dec
icebp
in
cwtl
cld
sbb
repnz
popa
xchg
push
push
xchg
jmp
ret
sarl
sti
jno
adc
orl
leave
cmpsb
fwait
inc
xchg
push
adc
inc
pop
ja
std
fwait
stc
in
fistps
lret
ja
out
sub
into
push
push
and
inc
mov
stc
dec
xchg
push
fnsave
adc
push
out
xchg
fiaddl
and
in
cmpsl
push
mov
ljmp
clc
scas
in
xchg
out
push
es
fstps
push
adc
dec
adc
or
jge
jmp
test
out
push
push
fdivrs
stc
in
push
aas
hlt
and
idiv
inc
cwtl
and
stos
stos
jae
push
and
js
adc
mov
pop
inc
dec
push
mov
fldcw
push
xchg
clc
dec
pop
and
je
ret
xor
call
jp
adc
jae
jl
or
pop
stc
dec
mov
pushf
in
cwtl
mov
movsb
pop
mov
pop
mov
sbb
push
sub
push
out
jl
mov
in
fdivrs
sbb
in
js
mov
ret
xor
rclb
and
sub
dec
jmp
arpl
and
cmp
mov
testl
shrl
or
fstl
mov
inc
and
imul
loop
mov
mov
mov
push
mov
cmp
cmpsl
cmp
cmp
in
fsts
push
loopne
jg
and
add
repnz
iret
lea
adc
pop
jno
pop
sbb
dec
test
mov
stos
std
stos
push
out
dec
repz
outsb
inc
enter
push
test
cmpsb
mov
push
xor
lret
jle
mov
shll
andb
popf
lods
cmpsb
repnz
sar
ret
dec
outsl
and
jns
lcall
pop
ss
sub
fnsave
mov
rorb
call
cmp
lods
pop
lret
loope
les
ds
in
push
mov
imul
mov
sub
cld
xor
xchg
repnz
je
int
rcl
test
sub
add
adc
or
push
and
inc
dec
arpl
jp
push
cmp
jl
or
inc
or
or
pop
mov
mov
inc
ss
iret
xchg
aam
xor
push
ds
xor
nop
stos
push
mov
jl
ja
and
mov
dec
mov
out
lods
dec
add
aad
repnz
pop
cmp
test
arpl
push
mov
mov
je
nop
and
dec
xchg
mov
sahf
mov
jno
hlt
xor
clc
cmp
lods
jne
lods
mov
frstor
dec
cmp
movsb
stc
repnz
loop
inc
test
std
mov
es
std
mov
pop
cmp
xor
lods
cmp
dec
dec
mov
add
jnp
je
enter
cmp
cli
nop
pushf
enter
adc
cmp
adc
stos
test
mull
bndstx
mov
hlt
cmpsl
sbb
out
xor
xor
call
dec
add
mov
push
loopne
and
lret
push
clc
shl
jmp
adc
mov
repnz
lds
dec
insb
adc
sbb
cmp
clc
outsl
or
dec
inc
sti
int3
sub
mov
rcrl
mov
mov
dec
lea
push
xchg
in
jmp
pushf
cltd
mov
jb
inc
negb
in
sbb
fnstcw
mov
mov
fwait
mov
leave
or
or
and
inc
rorl
mov
fldcw
or
mov
sbb
push
push
xchg
sbb
sbb
jecxz
pushf
movsl
pop
dec
call
outsl
jne
push
fmuls
jl
jp
cwtl
jae
push
mov
ds
int
call
mov
in
pop
loopne
cs
test
inc
push
scas
in
xor
and
adc
push
jge
into
jmp
shll
push
mov
stc
add
pop
cmp
repz
jle
mov
adc
fwait
popa
mov
xor
incb
cld
clc
mov
lret
ljmp
subb
insb
add
div
addr16
jne
daa
push
lods
int
cli
sbb
xor
das
lcall
in
inc
dec
aaa
cs
dec
test
outsb
cwtl
mov
decb
mov
and
ljmpw
cli
cmp
sbb
lds
fcomip
xor
test
pop
cmpsl
jmp
xchg
lahf
mov
aaa
mov
loop
sbb
sub
fcmovnb
movsb
shll
mov
mov
test
pop
mov
or
add
xorb
sub
pop
les
mov
push
jl
xchg
cmpsb
insl
push
sahf
mov
cmp
or
popa
push
ljmp
test
cmp
inc
inc
sbb
loope
lret
mov
fucomip
arpl
dec
shl
daa
inc
fildl
sub
je
loop
or
add
cwtl
aam
mull
pushf
pop
insb
lahf
pop
ret
lods
dec
ret
jg
cmp
cmp
mov
xor
xchg
sbb
lcall
fildll
lcall
popa
mov
xor
les
inc
and
out
push
imul
shlb
aam
push
lcall
repz
push
or
sbb
push
outsb
pusha
in
imul
js
cmpsb
outsb
xchg
daa
test
imul
flds
rcrb
mov
push
jecxz
ss
xor
pop
push
mov
int3
xchg
ds
in
ljmp
lret
clc
ljmp
test
push
fucomip
enter
xchg
xchg
ja
sbb
enter
ds
sbb
fnstenv
insl
add
leave
rolb
rcl
lock
dec
sahf
and
pop
mov
jns
mov
fildll
xchg
jae
shr
icebp
cmp
in
jge
mov
lods
clc
adc
pusha
idiv
jne
mov
inc
and
subl
sti
sbb
inc
into
jae
loope
lahf
stos
mov
cmp
adc
sub
add
cmp
test
gs
mov
ljmp
jp
mov
mov
sub
data16
movsl
inc
ficomps
sbb
pop
rcrb
mov
mov
ret
mov
and
jecxz
clc
test
cmp
and
mov
sbb
das
xlat
cmp
movb
mov
jg
or
int
popf
dec
dec
pop
push
cmp
sbb
dec
cli
jnp
es
jb
mov
lahf
lcall
pop
loope
insb
cli
mov
dec
pop
or
sbb
es
or
sbb
lock
sub
js
cmp
stc
inc
stos
dec
test
adc
icebp
pop
cld
mov
std
adc
fcomip
out
mov
dec
xor
and
pushf
adc
xchg
xchg
mov
mov
shlb
jg
js
xor
enter
sub
lods
sbb
sub
sub
std
jae
cmp
pop
inc
test
bound
push
pop
popa
in
out
loope
cmpsl
pop
loope
push
popa
dec
js
sbb
cmp
add
cmp
inc
sub
mov
xorb
fs
xlat
jle
call
stos
insb
dec
mov
push
jmp
ljmp
pusha
mov
out
imul
movsb
pop
out
popf
add
mov
ja
mov
sub
xlat
popf
push
xor
clc
icebp
dec
cmp
jns
movsb
xchg
into
xchg
cmp
lock
iret
out
icebp
xchg
jl
jnp
js
mov
mov
mov
mov
push
inc
xchg
lea
out
movl
lcall
push
push
outsl
sub
and
addr16
jnp
adc
and
cli
jg
mov
mov
rorl
push
pop
cmp
push
jle
cwtl
jae
aas
mov
sbb
add
pop
leave
cmpsl
pop
mov
jg
sti
mov
fimull
out
insb
cmpsl
sub
call
push
fwait
imul
int3
fildl
cmpsl
dec
inc
cmpsb
loopne
arpl
jne
out
into
stos
mov
dec
test
mov
iret
mov
jl
cli
lahf
iret
sti
mov
mov
or
sbb
jmp
xchg
loope
gs
sbb
sub
pushl
hlt
inc
mov
sub
jle
mov
add
sub
mov
jl
or
ja
rcl
fisubl
adc
and
mov
cmp
push
int3
movsl
in
mov
push
pop
pop
test
roll
push
lea
loope
repz
xchg
mov
add
into
pushf
adc
nop
xchg
adc
mov
add
sti
lret
sbb
and
mov
lcall
arpl
sbb
xor
mov
jno
dec
mov
push
lock
and
sbb
fisttpl
popf
test
enter
sbb
pop
sub
pop
popl
scas
xchg
adc
sbb
shld
loope
into
sbb
mov
xchg
push
and
push
ret
pop
pop
dec
adc
mov
sub
or
fwait
xchg
push
lcall
sti
xlat
fs
pop
push
sub
or
jo
pop
sarl
and
popf
dec
dec
cmp
imul
xchg
and
add
int3
sub
test
lods
sbb
jmp
xorl
outsl
fadds
xor
negb
push
mov
add
pcmpgtd
inc
dec
xchg
mov
push
stc
inc
push
xlat
pushf
push
xchg
inc
lcall
add
lock
adc
add
cld
mov
sub
or
sbb
dec
lods
vxorps
mov
test
subl
sub
lock
test
add
test
cs
and
xlat
add
or
push
icebp
pop
jmp
neg
inc
test
in
jmp
or
dec
lods
mov
or
xchg
xor
xchg
xchg
jns
lahf
jb
pop
inc
dec
pop
and
loope
test
sbb
cmp
cli
mov
or
icebp
mov
loop
lods
ret
add
inc
btc
aam
ja
and
add
jns
outsb
push
push
adc
sub
sub
mov
sarb
push
xchg
bnd
test
fistpll
arpl
loop
insb
push
xor
jno
adc
stc
xor
adc
adc
addr16
rclb
xchg
push
lret
inc
lock
sti
aaa
xor
dec
fs
cmp
mov
cli
mov
adcb
mov
adc
and
and
es
add
sbb
mov
cmp
inc
outsb
or
xor
sbb
das
sti
dec
mov
push
sub
mov
out
mov
push
xor
inc
jle
imul
or
pause
push
mov
inc
inc
push
pushf
test
sub
dec
jno
out
push
movzwl
pop
xchg
mov
sub
dec
scas
shrl
int
push
fcmovu
jecxz
rolb
add
xchg
test
test
loop
pop
xchg
outsl
cmp
fisttpl
test
fsubs
movsl
and
and
dec
ljmp
sub
mov
sub
popl
sub
mov
fwait
cmc
fistpll
sbb
pop
xor
ffreep
call
stos
in
sub
pop
call
ret
movsl
out
cmpsb
pop
xchg
inc
dec
gs
pop
loopne
clc
xchg
jg
and
jno
loop
popf
xchg
sub
mov
push
inc
dec
iret
jbe
jge
cld
push
icebp
fldt
pop
fistpll
xor
ret
push
arpl
shlb
jl
jp
fldt
nop
mov
arpl
mov
test
pop
hlt
mov
adc
xlat
les
js
or
les
aas
mov
rclb
lret
into
xchg
test
sub
or
clc
add
mov
sahf
jmp
xlat
fldpi
movsl
rorl
or
sub
mov
call
mov
cmp
je
test
test
mov
fmull
mov
pop
dec
in
mov
mov
hlt
sbb
push
inc
lods
ret
add
xor
dec
jns
aas
pushf
test
in
mov
sub
jge
dec
pop
lcall
adc
fdivs
inc
fcmovb
adc
gs
fwait
adc
rol
push
jno
lods
scas
xchg
push
dec
xor
dec
iret
ds
jl
cmpsl
rorb
cmp
outsl
sub
outsb
jge
mov
into
adc
shl
mov
and
mov
mov
push
cmp
daa
pop
jecxz
aaa
daa
add
xchg
sbb
daa
cwtl
into
test
outsb
mov
jge
dec
outsl
or
ror
js
and
cmpsb
xorl
loopne
pop
arpl
je,pn
add
pop
xchg
mov
stos
sbb
adc
int3
mov
mov
cwtl
idiv
leave
jne
sbb
lret
in
and
mov
fistps
fdivs
and
add
push
cmp
outsb
movl
jb
xor
and
xchg
cmpsl
pushf
cmpl
dec
data16
and
adc
aas
xchg
into
pop
sub
push
fcmove
aam
ljmp
sub
test
xchg
loope
imul
add
push
sahf
es
lahf
push
sub
jns
mov
iret
xchg
js
inc
or
imul
movsl
push
jnp
ja
and
lahf
adc
or
sbb
mov
push
ljmp
and
neg
rcll
test
shlb
add
or
add
xchg
lahf
push
sti
gs
shl
pop
and
and
aaa
jnp,pn
dec
inc
into
push
and
jg
push
add
xchg
adc
insb
clc
sbbl
fldt
in
jle
jb
dec
sub
mov
rclb
sub
dec
ficoml
or
push
insl
dec
push
fst
mov
and
xor
and
std
mov
es
adc
rorb
and
ss
pop
sahf
cmpsb
add
in
fucomip
and
jmp
mov
xchg
inc
jge
in
insl
loope
ficompl
pop
mov
adc
mov
add
sub
sub
mov
cmpb
pusha
dec
sbb
mov
repnz
es
inc
loop
test
mov
sub
arpl
pushf
mov
prefetch
or
and
sub
pop
inc
out
mov
pop
daa
add
cmp
xchg
pop
cmp
fmull
aad
fsubp
jmp
ret
mov
sbb
jg
fimull
pop
lahf
sub
pop
adc
lcall
popa
popa
fbld
lret
mov
and
mov
leave
fucom
jecxz
shrl
repnz
iret
lods
mov
addr16
sti
mov
xchg
or
repnz
or
aas
sub
pop
les
dec
jmp
inc
sub
mov
add
nop
gs
pop
stos
popf
push
pop
and
xchg
aad
mov
push
insl
mov
inc
sbb
out
subb
test
jno
shlb
fwait
pop
adc
lcall
adc
addr16
aam
add
inc
fs
je
mov
ficoms
stos
mov
aam
out
mov
xor
outsl
pop
shr
call
adc
push
cld
push
data16
ds
mov
stos
out
xor
faddl
mov
sti
cmpb
add
mov
lock
loope
or
out
stc
bnd
cmpsb
inc
insl
dec
mov
jmp
scas
or
and
sbb
jmp
adc
loopne
loop
or
jle
ljmp
movl
xor
fwait
push
call
lods
lods
js
xor
std
cmp
cwtl
mov
cmp
stc
je
loope
xor
xchg
jae
loopne
push
inc
in
cmp
lea
jle
ja
jno
jmp
insl
mov
pop
dec
and
cmc
paddd
lds
aam
pop
in
sub
outsb
lods
mov
push
nop
divb
xlat
push
jae
addr16
movsl
mov
xchg
lods
jl
sub
sbb
sbb
xchg
insb
and
stos
xor
shrl
mov
clc
dec
push
sbb
enter
pushf
out
out
mov
lock
test
xchg
int3
or
dec
sub
push
out
and
repnz
mov
mov
inc
imul
sbbl
arpl
add
xchg
shlb
fnsave
shrb
mov
hlt
out
cs
jg
dec
mov
loope
clc
insb
insl
or
jcxz
sbb
or
roll
push
nop
jb
hlt
imul
mov
cltd
and
loopne
inc
cmpsl
and
sbb
test
stos
push
mov
mov
lock
testl
pop
rorl
bound
ja
in
add
pop
es
sub
ljmp
lahf
xchg
sub
imul
jno
es
pop
xchg
or
push
xor
scas
loop
stos
and
repnz
or
adc
pop
and
sub
faddl
mov
cs
push
cmc
out
adc
adc
mov
pop
popa
clc
jmp
or
fidivs
dec
call
pop
popa
scas
inc
ja
or
sbb
repnz
and
xor
adc
pop
pushf
sti
pop
pop
ret
cmpsl
mov
mov
fxch
jmp
sar
loopne
pop
jbe
sbb
lock
push
cld
ds
aad
xchg
bound
mov
pusha
iret
call
sub
or
das
pop
sub
mov
and
add
aad
dec
mov
nop
add
xor
adc
pusha
out
mov
jnp
mov
sarl
aaa
jge
sbb
cs
lods
shrl
mov
in
xor
adc
fdiv
jg
roll
jae
adc
xchg
jl
in
inc
inc
fmuls
mov
es
dec
insl
cmp
sti
in
mov
push
xchg
mov
lods
sbb
popa
mov
pop
test
push
loop
xor
push
mov
push
rolb
fistpl
lahf
fcmovb
fdivs
pop
mov
xchg
call
mov
mov
test
sarb
fs
xchg
stos
xchg
cmp
add
cwtl
push
sub
cmp
xchg
mov
and
out
call
cmp
inc
cmp
adc
movsb
lahf
aas
or
movsl
int3
sbb
cmp
popa
in
roll
fsts
fwait
adc
nop
cmp
loope
gs
add
ja
lea
and
mov
dec
test
ja
mov
jg
out
cmp
and
cwtl
push
fsubrs
lret
xor
xor
popf
nop
xchg
mov
cmp
popf
out
cmp
or
mov
lds
lcall
js
std
popf
xor
dec
cmpsb
inc
loope
clc
cs
loope
dec
les
cmpsl
xchg
inc
xchg
cmp
push
xorb
sbb
mov
aam
push
sub
xchg
xor
pop
jo
add
adc
movsb
add
add
dec
loop
lods
jae
xor
jecxz
clc
outsb
mov
fisubrl
loop
cmp
xchg
insb
adc
sbb
fcmovbe
ror
imul
jp
js
data16
jb
sbb
cmc
mov
scas
fs
push
inc
mov
cmc
and
pop
mov
pop
in
jg
or
mov
scas
dec
stc
das
mov
and
cmp
incb
popf
or
mov
xor
and
std
fistpl
iret
cmp
lcall
movsl
jle
in
cmp
mov
fsubr
adc
and
mov
adc
pop
scas
mov
inc
push
add
mov
xchg
push
xchg
test
imul
test
les
sbb
jnp
adc
dec
mov
movsl
int3
js
mov
sar
sbb
adc
or
jge
cli
pop
jbe
inc
mov
loopne
dec
push
and
push
test
or
add
sarb
out
mov
nop
push
ret
mov
and
lds
in
fisubrs
pop
pop
pop
mov
xlat
mov
nop
lcall
js
test
add
stc
addr16
adc
movsb
and
cmc
out
cmp
mov
adc
mov
and
mov
xor
jmp
inc
gs
ds
and
rcrb
in
adc
xlat
mov
stos
mov
mov
dec
int
loopne
insl
in
out
in
popf
into
jno
and
dec
add
and
mov
mov
sub
sahf
sbb
jae
sub
cmp
mov
loopne
xchg
imul
cmp
data16
ret
pop
loopne
sbb
xchg
lods
std
xchg
mov
mov
inc
mov
cli
mov
sbb
mov
pop
pop
cmpsb
push
adc
adc
push
xor
rcl
sarb
subl
popf
pop
fwait
sub
sbb
jnp
sbb
mov
push
jae
fwait
test
cmp
mov
dec
fwait
repz
mov
out
pop
add
mov
xchg
jns
ficoms
fdivs
jno
out
test
repnz
add
inc
cmp
loop
test
mov
pop
arpl
loop
sbb
inc
add
inc
rolb
aad
add
jge
bound
pop
lock
jge
pop
aaa
sub
lret
sbb
movsl
inc
mov
pop
addl
jne
dec
hlt
inc
and
int
in
pop
push
adc
push
loope
push
jne
into
call
mov
test
faddl
dec
sbb
mov
repnz
out
sub
fiadds
mov
test
mov
test
adc
orb
daa
lods
imul
shll
aaa
jnp
out
ljmp
jns
jl
rcll
loope
lods
jne
sbb
xor
xor
ret
ja
push
cmpsb
test
fnclex
mov
cli
aaa
outsl
lock
adc
mov
adc
push
inc
pop
and
loope
addb
inc
or
push
push
fldl
push
jmp
mov
fildl
gs
das
dec
cmp
and
mov
pushf
mov
inc
daa
mov
push
add
mov
xchg
dec
mov
pop
aad
add
in
dec
hlt
push
cmp
xorb
or
imul
in
fnsave
fdiv
jne
push
mov
cmpl
mov
std
shl
and
xchg
and
out
mov
rolb
mov
ret
je
out
mov
enter
sub
xor
and
ja
mov
int
loopne
jnp
inc
rol
dec
daa
scas
jb
jecxz
pop
or
inc
push
xor
sbb
jno
xor
mov
inc
add
scas
jg
and
mov
sub
mov
adc
sbb
lds
test
jp
jl
repnz
jnp
scas
xchg
adc
rclb
push
cmp
push
pop
cmc
xor
cmp
nop
cltd
das
xor
ret
out
mov
mov
stos
fstpt
sub
mov
push
inc
pshufw
outsl
mov
sti
xor
lret
mov
jmp
and
add
and
jns
xor
imul
inc
sarl
sti
out
icebp
hlt
push
push
std
jmp
xlat
rolb
pop
pop
inc
and
sbb
cli
nop
clc
jb
mov
gs
test
mov
sahf
je
in
or
inc
dec
xlat
sbb
adc
popa
push
pop
test
mov
sub
movsl
in
xlat
mull
es
out
add
aas
or
jecxz
jo
push
sahf
int3
pop
dec
mov
je
repz
inc
aam
outsl
outsb
imul
mov
xor
jns
inc
lahf
imul
cld
xor
aaa
test
and
dec
fimull
rorl
sub
xchg
cmp
push
in
pusha
movsb
loop
lcall
movsl
imul
test
out
and
xlat
add
in
movsl
or
ret
and
add
adc
mov
push
enter
in
js
fs
mov
nop
jae
pop
mov
ss
cmp
pop
shrl
call
mov
push
cmp
add
xchg
cmpsl
or
and
movsb
fstpl
jmp
dec
shl
das
xchg
lcall
mov
pusha
loop
jae
lret
pop
dec
jg
or
pop
clc
ja
call
stos
incb
push
sub
ss
cmp
int
jnp
sub
jl
insb
cmp
std
gs
pop
sbb
ljmp
cwtl
lea
ficoml
adc
pushf
sbb
pop
iretw
rcrl
sbb
clc
jne
mov
pusha
mov
out
pop
dec
push
test
adcb
hlt
loope
pop
popa
ljmp
aas
xor
lds
jge
push
into
pop
lret
ja
add
movb
xchg
dec
imul
or
inc
out
xlat
sbb
pop
sarl
lahf
dec
cmp
loopne
cli
jae
leave
dec
roll
test
inc
sarb
stos
es
filds
add
mov
dec
adc
dec
adcl
or
into
push
sbb
mov
add
and
adc
ret
ljmp
mov
insl
ret
push
cmpsb
jns
ficoml
loop
dec
push
xor
xchg
sub
test
jno
mov
sti
out
cmp
and
sbb
push
nop
mov
mov
out
lods
dec
ja
pop
dec
lcall
jo
inc
rcl
mov
xor
xchg
xor
or
cli
fldl2e
pushl
xchg
negl
mov
mov
jl
jl
cmp
cli
js
stos
out
adc
push
or
lcall
push
stos
lret
mov
sub
lea
outsb
sbb
gs
fbstp
fstpt
or
add
mov
ret
or
pop
xchg
add
push
cli
test
test
lcall
cmp
adc
pop
pop
inc
xor
mov
mov
mov
repnz
testb
daa
jne
pusha
and
test
in
cmp
push
lret
mov
cmpsl
jl
pop
pop
das
aas
inc
jb
adc
pop
adc
push
dec
gs
lcall
mov
or
ja
fs
push
bnd
cwtl
dec
jns
gs
dec
pop
xlat
adc
cmpsb
xchg
jae
fs
dec
mov
adc
adc
fdiv
mov
loope
pop
mov
adc
into
pop
mov
jae
inc
movsb
shl
xor
in
adc
daa
and
mov
jbe
in
mov
sub
lret
add
addb
fs
int
stc
mov
je
out
pop
lret
add
dec
mov
pop
sahf
loop
cmp
fcompl
jae
loopne
push
test
arpl
es
mov
and
sahf
andnps
sbb
fildl
movsl
adc
push
sarb
outsl
aaa
add
ljmp
jg
sub
mov
push
mov
pushf
add
mov
add
mov
inc
das
loope
or
jno
enter
or
inc
rorb
test
das
push
cmc
inc
lcall
jnp
xchg
lret
call
pushf
iret
lods
inc
in
inc
ss
cli
shrl
adc
sarb
or
cmpsb
adc
mov
into
repnz
out
mov
jae
cmpsb
les
add
sbb
pop
mov
test
hlt
add
lods
outsl
inc
mov
lret
push
cmp
pop
pop
xchg
mov
xor
dec
push
addb
stc
pop
stos
push
sub
pop
adc
or
adc
repnz
sbb
cs
fwait
jecxz
daa
and
fldcw
inc
inc
or
adc
outsb
rcrb
sub
into
add
mov
xchg
inc
push
inc
xlat
popa
cmpl
push
inc
add
inc
pop
incl
cmc
pmulhuw
and
dec
notl
push
and
mov
insl
pop
push
or
xor
add
cmpsb
xchg
jle
notb
out
jg
inc
pop
dec
xor
pop
sti
fnstenv
subl
dec
inc
sti
pop
jl
adc
jl
jns
popf
xchg
xor
aas
aam
jo
adc
inc
inc
xchg
jmp
push
mov
cmpsb
cwtl
in
xchg
push
sub
arpl
adc
idivb
std
pop
je
mov
arpl
mov
and
int
jp
leave
push
xchg
mov
add
in
pop
mov
pop
inc
push
int
ret
cmpsl
aad
fwait
inc
shrb
xor
xchg
arpl
popf
and
jecxz
je
fnstsw
or
push
mov
sub
arpl
mov
fcomps
pop
cmc
out
jp
sub
cltd
out
xor
pop
scas
lods
out
out
addr16
inc
mov
inc
sbb
sub
dec
repnz
dec
sub
out
push
icebp
add
jb
leave
mov
cmp
aaa
mov
adc
xchg
in
push
sti
add
je
jg
in
fistl
call
pop
fcomp
or
add
out
ds
push
lret
sub
push
and
fstpl
loope
fistl
inc
dec
ret
int3
out
push
sub
fistpll
out
cwtl
sub
fadd
mov
popa
mov
mov
jbe
dec
mov
xor
gs
inc
inc
insl
flds
and
add
shlb
sub
xlat
adc
repnz
cmp
mov
ret
ds
div
or
mov
jb
in
test
inc
inc
bound
leave
cmp
clc
inc
enter
dec
clc
push
cs
mov
pop
rcll
ret
pop
or
out
out
call
or
push
xchg
mov
std
out
mov
pop
push
fcmovbe
ret
or
sbb
arpl
scas
cmp
scas
inc
and
push
jno
pop
pop
out
sub
sub
mov
gs
push
daa
cmp
enter
in
ja
and
cmp
fnstenv
sbb
inc
insb
pop
fisubl
xor
jg
imul
call
popa
sbb
dec
adc
push
in
fisttpll
hlt
inc
cld
and
lcall
mov
sub
xchg
outsl
push
out
and
imul
dec
dec
shrb
pop
adc
adc
lock
insl
stos
xor
and
sbb
aas
pusha
enter
lods
add
lds
nop
sbb
into
and
fldpi
lret
add
sub
cmp
sahf
mov
gs
shll
orl
add
test
fwait
add
cli
add
cmpsl
mov
and
mov
adc
sbb
xchg
leave
iret
stos
ret
jmp
pmulhw
inc
xor
add
inc
lds
stc
pushf
call
scas
xor
enter
arpl
test
sbb
test
rorb
add
in
xchg
jge
out
cli
stos
xchg
xor
sub
cmp
hlt
cmp
call
loopne
mov
sub
mov
xor
popa
loopne
or
int3
nop
int3
sarl
and
pop
daa
testb
mov
inc
sbb
jge
push
mov
sbb
aaa
pop
pop
aaa
lea
aaa
mov
add
ja
movsl
imul
and
lods
dec
mov
mov
ret
jno
push
enter
je
lret
xchg
sub
mov
sbb
mov
movsl
sbb
pop
or
adc
or
ret
fimull
cmc
ljmp
jb
pop
repz
adc
sbb
shlb
pusha
pop
hlt
dec
call
jb
dec
imul
inc
loop
dec
imull
hlt
xlat
mov
mov
loope
sbb
out
xor
add
adc
negl
subb
add
and
pop
hlt
inc
je
xorl
sarb
ja
inc
push
jns
out
mov
pop
push
sbb
mov
jo
test
fistpl
or
fwait
jb
dec
add
inc
jne
jmp
or
jbe
fistps
test
data16
add
and
fcompl
js
add
adc
jno
add
jbe
in
stos
out
mov
ret
lock
pusha
in
outsb
in
mov
or
ss
stc
das
scas
jns
lea
cmp
outsl
addl
rclb
add
xchg
xchg
mov
lcall
inc
push
aaa
or
popa
sbb
aad
jp
adc
cmp
ficoml
xchg
and
daa
dec
in
fsub
imul
int
mov
mov
test
outsl
cwtl
imulb
add
movntq
jbe
mov
pop
inc
or
stc
aas
loope
lods
std
je
sbb
sti
pushl
mov
test
sahf
sbb
sub
jecxz,pt
or
add
or
and
lods
or
call
in
adcb
loop
je
addr16
inc
arpl
sbb
sub
jb
mov
stos
mov
icebp
pushf
adcb
scas
mov
movsb
inc
xchg
pop
or
leave
and
sub
repnz
xchg
lds
lret
push
pop
ret
call
pop
fimuls
jmp
and
hlt
clc
mov
test
das
pand
int
repnz
mov
inc
push
aad
add
arpl
or
mov
dec
loopne
jg
fdiv
inc
jb
mov
xor
xchg
fs
out
imul
jmp
pusha
push
push
pop
aas
push
inc
int3
mov
sbb
or
mov
mov
fsubrs
out
mov
outsb
in
in
adcl
popf
adc
pop
adc
xor
dec
andb
and
mov
fiaddl
pop
in
push
mov
movsb
and
sub
lea
adc
ss
lea
mov
into
imul
leave
ret
or
mov
mov
mov
adc
pusha
push
add
sti
scas
lret
push
aam
je
mov
sbb
popf
push
movsl
mov
and
or
sbbb
sbb
inc
push
inc
inc
xor
push
xchg
ret
je
jno
push
jo
add
mov
mov
sbb
bound
addb
fs
and
into
jne
cwtl
and
outsl
lret
xchg
mov
add
inc
push
sbb
test
xor
sbb
mov
adc
xchg
outsl
pushl
jge
mov
push
mov
test
ds
inc
out
lcall
divb
xchg
sbb
aad
jbe
push
out
xchg
add
pop
aas
xchg
dec
insb
int
sbb
cmpb
subl
lret
xor
in
inc
rcl
cmp
clc
fsubl
stc
pop
aad
mov
jl
mov
js
mov
loopne
fcmove
shrb
dec
xlat
jae
pushf
mov
sub
cltd
lock
xlat
gs
mov
jecxz
jae
outsl
aaa
or
sbb
add
ljmp
pusha
lret
movsb
pop
mov
inc
notl
test
ret
sti
sub
mov
popa
cmpsl
xor
out
mov
outsl
sahf
mov
mov
xchg
push
arpl
in
push
push
cmpb
in
loope
xchg
sbb
mov
mov
adc
insb
rol
xlat
inc
shlb
leave
pusha
mov
repnz
cld
movsl
roll
adc
cmpsl
dec
scas
jmp
inc
insb
std
cmpsb
pop
xor
adc
popf
dec
and
lret
into
imul
mov
mov
jbe
cmp
cmp
jecxz
aam
fcmovnb
in
mov
dec
mov
or
add
or
mov
std
sbb
push
lea
cltd
in
dec
inc
jbe
iret
cs
push
inc
jg
test
push
mov
and
jne
xchg
ret
cltd
imul
pop
fwait
jae
ljmp
jnp
cli
pop
ja
mov
jle
repnz
pop
imul
cmp
icebp
cmc
pushf
icebp
mov
arpl
aad
pop
jl
jmp
xchg
mov
rcl
add
ljmp
ja
add
push
stc
out
or
je
cmpsl
clc
dec
add
xchg
xchg
inc
mov
sbb
fdivrs
mov
arpl
arpl
and
cli
jp
and
shl
push
mov
add
popf
hlt
aam
add
cmc
stos
mov
out
and
xchg
fwait
pop
loopne
arpl
lods
xor
push
jl
out
xchg
imul
jbe
insb
and
ljmp
cltd
sbb
sub
fwait
gs
out
push
push
daa
mov
dec
xor
cmp
fdivs
hlt
test
xchg
cmp
out
testb
outsb
enter
imul
push
and
push
rolb
push
pop
mov
imul
int3
cli
jp
call
xor
stos
mov
add
lods
ss
imul
rorb
mov
cmp
push
jl
xor
or
jns
and
push
and
dec
xor
dec
rcr
imul
xor
or
pop
lock
fnstenv
leave
sbb
icebp
iret
pusha
and
in
icebp
into
or
out
jae
f2xm1
scas
rcr
push
rcr
sub
addr16
xor
mov
ss
rolb
out
cmpxchg
mov
mov
in
mov
fucom
mulb
jne
lea
fstl
sbb
ffreep
mov
cmpsl
into
pop
je
fcomps
nop
mov
in
dec
lret
or
add
in
inc
xchg
mov
dec
pop
movsb
lret
pop
and
mov
loop
cmp
mov
inc
and
push
adc
sti
test
mov
mov
dec
outsb
pop
es
jg
dec
pop
shlb
clc
mov
adc
pop
jo
std
sbb
test
movsb
cmpl
das
dec
push
arpl
stc
mov
push
dec
mov
add
icebp
aam
ja
daa
cmpsl
fldenv
mov
ret
pop
jge
jnp
cs
push
movb
xchg
mov
jne
xor
scas
ja
xor
loope
pop
mov
iret
pop
push
adc
jmp
mov
push
xlat
test
fcmovu
dec
cmp
mov
fsubrs
xchg
xor
push
dec
test
ja
mov
orb
mulb
lods
sbb
icebp
or
test
pop
pop
jmp
imul
xor
adc
mov
rcrl
std
test
shlb
push
daa
add
jl
repnz
shrl
adc
addr16
lock
clc
inc
dec
jmp
adc
and
mov
sbb
sahf
add
test
cmp
cmp
clc
sbb
jecxz
aad
clc
pop
in
jb
daa
jns
add
sub
and
add
mov
pusha
inc
sub
ss
movsl
add
cmpl
popf
sbb
enter
in
rcll
ja
inc
lahf
add
jg
stos
lods
out
dec
or
out
jg
pop
mov
jle
cmp
adc
pop
jnp
aam
outsb
jle
test
imul
cmc
stc
and
rcrb
je
cli
cmp
inc
add
icebp
dec
hlt
push
shr
add
mov
xchg
dec
push
cmp
xchg
fs
sahf
popa
aam
aaa
xchg
sbb
push
adc
stc
imul
adc
mov
in
lret
push
shl
inc
jge
jg
jg
popa
xor
mov
nop
sub
arpl
popl
sbbb
fidivs
pop
jg
shll
test
sub
sub
rcrb
movsb
lds
repz
push
stc
mov
gs
enter
scas
mov
das
test
or
insb
and
inc
and
mov
les
dec
pop
mov
shll
iret
inc
push
insb
lret
std
and
xchg
push
sub
fcmovne
xchg
mov
add
or
xor
outsb
push
and
popf
or
or
mov
mov
call
data16
stos
movsl
jle
fidivrl
mov
nop
adc
or
subl
aas
adc
mov
lret
shrb
sbbl
mov
sub
rol
ret
xchg
jae
in
fpatan
mov
push
cmpsb
and
mov
lock
fisttpl
pop
xchg
push
jecxz
jle
adc
xchg
pushl
ret
outsl
xchg
mov
in
push
mov
lret
sbb
int
stc
icebp
xchg
stos
addl
icebp
cmp
std
or
std
dec
push
jo
and
imul
xchg
ljmp
inc
out
mov
sub
sub
loope
dec
mov
or
mov
stos
mov
jns
adcb
ds
jbe
ljmp
cmp
sbb
fs
sbb
subb
jecxz
pop
subl
add
xchg
lret
mov
sub
hlt
mov
push
mov
jmp
hlt
loop
cmpsb
loopne
xlat
es
dec
dec
jnp
lds
xchg
dec
pop
or
inc
clc
jbe
vmovdqu
push
jnp
fdiv
negb
push
add
and
fbstp
inc
test
jmp
ret
insb
xchg
pop
mov
sahf
incb
fdivl
rclb
mov
ret
xchg
mov
mov
inc
push
adc
sbb
mov
js
mov
repnz
in
or
inc
xlat
mov
push
or
cld
add
in
int3
in
push
mov
mov
and
jb
mov
lret
repnz
shll
ficoms
mov
mov
sti
mov
pop
addb
sub
outsb
mov
scas
popl
pop
nopl
push
inc
dec
pop
add
int3
pop
mov
rorl
mov
lcall
out
or
ja
imulb
jno
rcl
sahf
adc
fidivl
std
popa
sbb
sub
push
and
imul
cwtl
sub
sbb
mov
je
dec
enter
dec
xchg
out
es
dec
mov
aas
fs
lahf
movsl
adc
lea
movsl
sub
and
xlat
in
js
les
test
gs
cmp
testl
adc
sbb
sar
sti
cmp
inc
mov
push
sbb
add
fidivrl
shlb
out
push
sub
jmp
mov
and
mov
mov
add
iret
jmp
mov
sbb
pop
push
mov
add
mov
jo
jg
push
loopne
jns
jl
mov
addr16
adc
mov
push
push
into
sub
loopne
insl
mov
jne
sbb
push
sub
xchg
mov
gs
div
aas
popa
clc
xchg
aad
inc
lods
and
imul
dec
mov
sbb
icebp
adc
cmc
sub
cmc
inc
aas
mov
mov
ror
gs
pop
dec
sub
mov
lret
adc
lcall
lcall
add
inc
movl
les
arpl
add
pop
aaa
cmp
int
add
jl
out
loopne
push
arpl
leave
mov
inc
fstpt
sbbl
in
test
aas
mov
pop
inc
loop
mov
lea
mov
jge
in
fs
sbb
test
sub
lock
cmp
bound
jbe
daa
lds
test
or
shlb
xorb
test
mov
je
add
sbb
test
enter
ljmp
xor
adc
sbb
inc
je
sbbl
pop
jae
and
dec
das
and
lds
int3
add
jb
cmp
pop
incl
jb
mov
mov
cmpsb
hlt
or
iret
arpl
and
aas
loop
xor
and
pop
adc
lods
and
loope
ljmp
ja
shll
fcmovnu
push
adc
jmp
repnz
imul
or
mov
insl
out
add
sahf
cmpl
loop
int
jae
or
inc
sub
jnp
or
sahf
sub
ja
dec
mov
inc
cmp
jno
sub
jmp
mov
sahf
pop
shlb
xchg
dec
cmp
cmpsb
in
pusha
mov
addb
or
data16
and
sbb
pop
push
or
add
cmpb
inc
out
jo
dec
mov
jge
js
jg
jnp
daa
sbb
repz
mov
dec
inc
out
fwait
sub
mov
leave
ljmp
mov
sbb
pop
dec
stos
outsl
fadds
mov
add
mov
aad
jno
adc
xchg
mov
shr
pop
cmp
out
sbb
cld
into
jecxz
dec
cwtl
std
adc
je
icebp
cmp
sbb
ss
fldl
cmp
in
push
pop
jae
or
pop
rorb
lahf
pop
push
fidivl
negl
popf
add
test
cs
repnz
push
xchg
or
lret
stc
hlt
aaa
lods
sbb
cmp
daa
push
lahf
cwtl
ja
bound
loop
jge
mov
or
shl
xor
rcrb
jno
pusha
or
jmp
add
inc
mov
movl
jle
add
stc
push
jecxz
mov
xchg
sbb
je
pop
mov
in
in
fsubrp
push
insb
inc
call
movsb
jno
sub
movsl
fiadds
add
add
clc
sbb
mov
pop
cmp
cltd
in
cmpsb
enter
hlt
repnz
dec
sbb
xchg
inc
bound
cmpsb
dec
lods
and
pop
out
or
ja
cmp
int3
je
bound
or
xchg
mov
push
xchg
cmp
pop
mov
sub
imul
xchg
addr16
aam
mov
test
jae
js
lods
push
and
loopne
push
lock
push
push
jb
mov
mov
sbbb
movsl
jg
jbe
mov
aaa
stc
mov
mov
jb
mov
shrb
out
mov
add
pop
cwtl
xor
call
dec
xor
lret
pop
xchg
iret
shll
cwtl
jno
dec
push
pop
stos
mov
lret
dec
aaa
push
push
or
xchg
xor
mov
inc
js
call
neg
add
or
mov
inc
fwait
dec
stos
jno
mov
lahf
call
aam
xchg
es
push
pop
pop
inc
test
cmc
ret
inc
hlt
jge
aam
or
adc
ret
pand
push
inc
test
jne
and
sbb
mov
dec
adc
js
mov
js
scas
mov
xchg
in
lock
rcrb
aaa
shlb
pushf
in
and
ljmp
jge
enter
xor
jp
mov
cmp
cld
jge
outsl
mov
xchg
fwait
mov
mov
std
jle
pop
sbb
sub
cmpsl
add
jl
pop
sub
or
mov
leave
mov
mov
push
mov
mov
ds
outsl
test
xchg
dec
dec
inc
sarl
in
popa
out
xchg
mov
jl
mov
adc
and
jp
cld
es
xor
mov
mov
in
sahf
comiss
aad
dec
jae
popa
daa
test
xchg
ljmp
push
jl
test
sub
inc
mov
xacquire
idivl
adc
fs
iret
inc
std
jl
loop
movl
fdivrs
jbe
imul
mov
sub
call
sub
sarl
push
xor
mov
sbb
jp
adc
popa
mov
outsl
int3
mov
add
and
jbe
jle
lods
test
xlat
dec
xchg
mov
inc
push
adc
cltd
push
lret
adcb
in
cmpb
test
dec
sub
popf
clc
sbb
mov
mov
jmp
stc
mov
xor
adc
scas
out
rcl
ja,pn
jg
iret
rcrl
push
pop
jne
xorl
inc
add
subl
fwait
sahf
xchg
jbe
cld
scas
mov
mov
mov
je
adc
cld
dec
gs
mov
push
clc
ss
ss
out
fstl
sub
lods
xchg
nop
mov
inc
arpl
aaa
push
ss
jns
jb
dec
cmp
xchg
iret
sbb
rorl
movsl
or
ret
lret
push
ds
jmp
dec
stos
xor
dec
pop
inc
xchg
mov
jl
scas
push
cltd
clc
iret
xchg
mov
xchg
std
out
add
dec
mov
lahf
test
xchg
and
rorb
loope
mov
push
scas
lods
fstpl
scas
outsb
fwait
mov
inc
xor
js
rorb
cmp
xchg
outsl
je
lds
or
pop
mov
jnp
jns
mov
mov
into
dec
and
ret
scas
jno
and
repz
push
pushf
mov
xacquire
rclb
dec
movsb
xor
aam
sub
mov
add
mov
nop
aaa
cmp
jmp
out
dec
nop
outsl
inc
ljmp
push
add
or
pop
imul
xor
iret
fwait
xchg
jge
xlat
jb
fs
pop
inc
cmpb
std
out
mov
cmp
test
mov
test
add
adc
in
data16
dec
data16
pop
les
and
outsl
mov
pop
cmpsb
push
aas
or
cltd
dec
scas
pop
out
jbe
filds
lret
adc
dec
lea
push
das
movsl
test
cmpsl
mov
cmp
pop
inc
scas
bnd
nop
out
sarl
mov
cmp
dec
hlt
shl
mov
jo
pusha
inc
out
ljmp
test
mov
testl
testb
not
call
inc
mov
mov
inc
xor
daa
push
hlt
sti
pusha
pop
int3
mov
in
push
inc
and
test
mov
add
test
jno
mov
mov
xchg
pop
xchg
xchg
fbld
orl
sub
pop
pop
mov
sbb
dec
hlt
mov
in
add
sbb
sahf
pusha
popa
and
pop
push
mov
xchg
mov
cmc
jae
push
testb
shl
int3
xlat
ds
inc
pop
int
mov
mov
sub
scas
mov
bound
ds
loopne
xchg
dec
xchg
data16
addr16
mov
sar
fs
jg
cs
xchg
push
sbb
movsl
in
pop
xchg
xor
fiaddl
push
repz
repz
bound
xor
lea
cmp
test
sahf
push
ret
and
jb
adc
call
lods
pushf
and
aaa
pop
add
push
fst
or
shlb
insl
inc
mov
std
jns
jb
lods
xor
push
pop
xor
ret
std
jmp
xchg
inc
aaa
cltd
push
or
dec
repz
fmull
flds
popa
push
dec
shll
fnstsw
jbe
call
mov
push
fcmove
int3
aam
fs
lods
add
js
xchg
ret
xchg
fs
adc
mov
cmpsb
into
mov
sbb
cmp
test
lods
add
mov
fldcw
and
in
mov
and
mov
pop
jge
in
xchg
mov
cmp
outsb
icebp
pop
adc
jo
inc
cmp
jbe
push
and
jg
jns
push
xorl
enter
cli
cmp
je
ljmp
adc
xchg
sti
inc
mov
pop
xchg
xor
lods
fsubrp
outsb
jb
stos
popa
fsubrl
rclb
clc
arpl
mov
add
decl
out
lcall
loop
daa
loopne
sub
divl
fiaddl
lahf
jb
inc
add
ja
and
inc
inc
pushf
or
fdivs
adc
es
xor
pusha
ret
aam
out
bound
aas
fnstcw
xchg
cltd
sahf
jecxz
das
stos
aaa
loope
push
in
pop
pushf
test
push
mov
jbe
in
jge
lea
adc
in
jmp
push
mov
data16
push
cs
sbb
xlat
andb
sbb
in
fs
dec
pop
xchg
bound
pop
mov
iret
dec
enter
xchg
or
push
adc
daa
mov
pop
mov
popf
adc
dec
rorl
icebp
xor
imulb
outsl
hlt
pop
dec
and
mov
bound
fucomip
pop
push
mov
mov
adc
xor
pop
pop
cmpsb
sbb
xchg
cmp
outsl
push
js
lods
mov
fisubrl
pushf
push
xor
sub
pop
lds
rolb
clc
stos
out
sbbl
jl
int
dec
lea
and
dec
fstps
push
or
rep
xchg
in
xchg
sub
fiadds
dec
xor
out
icebp
add
push
rclb
add
or
push
sbb
nop
mov
ret
ja
xor
loope
or
jmp
xchg
mov
jecxz
jmp
out
loopne
push
fdivr
rdmsr
loope
ja
test
loop
push
or
mov
or
cmp
js
jne
ss
mov
ss
push
inc
inc
popl
in
aas
push
sti
sub
popa
mulps
mov
add
pop
and
jg
cltd
bound
fistpl
mov
repz
mov
lods
lea
imul
in
mov
jmp
and
dec
sbb
and
out
flds
pushf
addr16
fistps
xchg
daa
push
icebp
addb
sbb
ss
or
iret
xchg
dec
xor
adcb
in
push
ds
outsl
push
or
or
sub
movsl
or
orl
xchg
cmpsl
popf
or
repz
sbb
pushw
arpl
jnp
xchg
imul
inc
sub
adc
ss
in
mov
xchg
sub
inc
xchg
ja
fldcw
into
andb
adc
sahf
mov
xlat
jbe
push
fisubrs
add
pop
add
shll
jae
out
popf
inc
and
rolb
sub
jl
add
out
mov
repnz
adc
cmpsb
mov
pop
jle
or
insb
xor
sub
pop
pop
jb
mov
cmp
cmp
shlb
jnp
and
lds
cli
aaa
pop
or
lcall
jecxz
mov
mov
leave
andl
popa
xor
mov
adc
leave
adc
cmpsb
lods
ror
mov
sbb
xchg
scas
imull
hlt
cli
cmpsl
lret
sub
sahf
push
jle
repnz
inc
aad
out
mov
cmpsb
xchg
or
imul
mov
cmp
bound
mov
inc
jbe
cli
sub
aas
lock
out
out
lahf
jecxz
hlt
mov
test
jae
add
dec
pop
sbbb
cmpsb
je
push
leave
es
push
or
mov
popf
and
push
jecxz
sbbb
jecxz
pop
in
cmpsl
and
sbb
fwait
imul
mov
fs
cmpb
dec
inc
add
fs
dec
sub
mov
test
push
xor
sbb
mov
mov
in
out
push
loopne
insb
jecxz
cmpsb
cli
inc
mov
dec
dec
mov
std
sub
into
ret
ja
xorb
jno
imul
xlat
or
mov
mov
arpl
cmp
xchg
dec
mov
insb
fstps
inc
mov
ss
dec
push
add
lods
das
dec
sub
dec
sub
leave
je
mov
push
pop
out
lcall
add
std
inc
xchg
test
imul
inc
int
nop
lahf
xlat
stos
xchg
insl
mov
stc
mov
pop
mov
mov
xchg
or
loop
mov
sbbl
scas
sbb
daa
sbb
xchg
xchg
in
fldcw
mov
es
mov
mov
fidivs
int3
jmp
roll
outsl
jo
push
cmp
hlt
ret
lret
and
inc
sub
fnstcw
dec
into
jo
in
mov
jnp
mov
fucomi
push
in
xchg
cwtl
sbb
mov
pop
or
push
addr16
cld
test
arpl
xchg
inc
fildl
dec
scas
mov
in
mov
xor
xlat
cmp
repz
add
sub
jmp
in
sub
push
cmpsl
sarb
push
orl
sub
jb
xchg
sbb
jmp
arpl
jo
fbld
mov
or
add
push
pop
pushf
shlb
insb
loop
mov
scas
mov
leave
nop
inc
cmpsb
jae
xor
adcl
aam
movsl
cld
int
push
or
pop
stos
mov
scas
and
and
dec
divl
xchg
xlat
outsb
addr16
out
outsl
enter
push
inc
sub
or
fstp
inc
sub
sub
ss
out
inc
les
jl
daa
push
fisubl
jmp
pop
xchg
pop
cmp
push
push
dec
adcb
jbe
imul
nop
push
stos
movsb
xor
add
pushf
dec
inc
stc
stos
outsb
jne
cmp
pop
fidivrl
pop
aad
scas
push
movsb
inc
aam
xor
jle
inc
sbb
arpl
imul
rcr
and
out
inc
fstps
mov
xor
inc
mov
and
push
rol
cld
rorl
adc
xchg
pop
or
add
xchg
cwtl
jo
ret
loope
inc
or
sahf
fidivrl
outsb
pop
push
mov
xor
jl
push
lret
sbbl
js
test
xor
cmpsb
into
shrl
sbb
cmp
lcall
repz
jl
pop
lea
ds
inc
pop
in
cmp
pusha
jmp
and
or
lods
mov
mov
ja
cli
adc
sub
xchg
mov
lods
cwtl
push
fstps
xchg
sbb
loopne
cmp
fsubr
je
sbb
repz
add
bound
push
mov
inc
pop
add
pushf
sti
cmp
hlt
push
add
add
arpl
push
pop
xchg
rorl
mov
ret
push
or
sub
fisttpll
lea
sahf
pop
cmp
rcll
mov
dec
arpl
adc
or
fiadds
mov
rcrb
bound
aam
dec
jle
xlat
jmp
test
pop
adcl
mov
mov
inc
inc
das
push
ljmp
bound
or
xchg
add
mov
and
or
test
inc
int3
dec
ret
rcl
cmp
and
push
add
leave
loopne
or
ds
fsubl
inc
push
dec
sbb
std
movsb
ret
xchg
dec
loope
in
lcall
mov
jne
inc
jge
jns
inc
cmpsl
xchg
pop
adc
mov
add
xchg
cmp
cmp
test
xor
test
inc
and
mov
push
add
and
movsl
leave
pop
dec
jge
sub
and
rcl
lds
pushf
fsub
fs
mov
lods
dec
out
aaa
jmp
adc
cmpl
sbb
jae
orb
out
push
lds
aaa
or
xor
inc
out
inc
aaa
add
and
negb
das
push
rcrb
cltd
sti
sub
inc
outsl
cmc
cwtl
ror
repz
xlat
xorb
bound
jno
or
mov
mov
pop
push
dec
fldl
jecxz
gs
mov
push
mov
mov
sub
and
sbb
imul
scas
or
add
pop
fwait
into
sub
js
adc
xchg
popf
pop
stos
mov
and
or
out
call
pop
mov
adc
pop
imul
cli
repnz
push
call
loope
psubb
shll
adc
in
dec
das
add
mov
sub
aad
cmp
mov
cli
in
push
and
cmpsl
outsb
cmp
faddl
out
mov
aaa
shrb
pop
pusha
sahf
adc
ljmp
lahf
jle
ret
push
xor
fbstp
and
pop
cmp
sub
stos
cs
shr
push
dec
adc
insl
sub
idivb
dec
insl
cs
mov
fldl2t
xor
pop
xchg
mov
ss
push
sahf
iret
icebp
sarl
sar
sub
mov
bound
xchg
hlt
xor
test
aam
ljmp
clc
sub
inc
push
mov
mov
dec
xor
in
fists
lret
add
jae
lret
sub
inc
mov
mov
dec
ret
test
mov
xor
pop
inc
cmp
shlb
xor
scas
out
inc
push
pop
shlb
fistpl
cmp
sar
xor
dec
pop
jg
lock
gs
outsl
and
cmpsb
lods
subl
push
mov
out
pop
push
outsl
mov
lea
xchg
jmp
pop
push
loopne
ds
cs
mov
add
mov
dec
pop
mov
mov
cmp
jno
mov
in
jae
scas
and
or
fisubrl
in
adc
lock
mov
ljmp
cwtl
out
pushf
les
push
ja
mov
and
popa
scas
or
push
in
pushf
les
jo
xor
rol
push
mov
out
xchg
mov
jmp
mov
add
divb
rolb
and
and
jl
inc
or
cmp
addr16
out
fmull
jo
data16
or
mov
cld
dec
inc
mov
push
mov
cmpsb
jecxz
mov
pop
dec
add
lret
sar
std
and
sbb
mov
cmp
dec
push
xor
rorl
mov
jns
stos
fcomps
dec
dec
ret
pushl
pop
in
push
sub
push
mov
jno
sbb
or
mov
push
and
or
pop
inc
or
repz
adc
lea
ds
xor
or
sbb
cmp
pop
cli
cld
or
dec
adc
jnp
push
dec
push
test
cltd
jbe
jge
out
pop
dec
test
inc
mov
cld
mov
push
jns
scas
test
sti
or
scas
jne
cmpsb
and
lods
loope
sbb
ficoml
xchg
insb
mov
in
mov
cmp
jae
std
and
sbb
xor
and
in
in
aad
jnp
mov
lcall
out
mov
sub
stos
cmc
cmpsb
sub
frstor
jecxz
das
push
sbb
dec
rolb
add
outsl
inc
arpl
rcl
jb
clc
repnz
shll
lahf
cpuid
adc
outsl
movsl
test
inc
jg
dec
inc
push
push
movsl
jb
push
mov
mov
mov
sbb
dec
sbb
mov
fldl
in
jmp
repnz
push
enter
mov
inc
xor
mov
insb
nop
adc
xchg
xor
movsl
jg
mov
mov
scas
aas
call
xchg
cmp
dec
ret
hlt
clc
fld
jmp
xchg
add
lret
mov
dec
adc
cmp
stc
ror
pop
cmp
or
jns
das
or
jmp
dec
sbb
int
loop
mov
mov
test
rorl
sbb
cmp
sbbb
rcl
lret
or
adc
out
dec
and
inc
clc
cmpsb
xchg
ljmp
xor
daa
lea
loop
mov
fadd
jg
dec
adc
je
iret
xchg
sahf
mov
push
lcall
imul
dec
and
rolb
jno
out
loopne
test
popa
ss
add
and
xchg
fnstenv
push
adc
pop
sub
dec
xor
and
and
pusha
in
jmp
add
xchg
leave
inc
nop
popaw
cwtl
popa
andl
dec
clc
push
adc
mov
xchg
out
inc
or
out
sbb
lods
pop
cld
testl
xor
enter
loope
shll
cmp
xor
mov
sub
mov
push
cltd
pop
in
imul
pop
es
pop
xor
ljmp
jno
jo
fdivrl
enter
push
dec
push
dec
jmp
ja
add
and
fs
les
int
jbe
inc
or
iret
ret
sbb
push
scas
add
cmpb
and
addps
notl
mov
and
add
jmp
jne
pop
mov
push
pop
or
movsl
jno
ja
pop
out
ja
jns
xor
outsb
loop
push
jo
cmpsb
mov
push
nop
popa
shll
lahf
and
dec
lret
pushf
push
imul
addb
cmp
aad
mov
insl
xor
repnz
js
cmp
sbb
stos
das
xchg
mov
dec
or
std
xor
faddl
mov
aam
cmp
insl
xchg
out
push
inc
inc
pop
and
push
aas
pop
xor
mov
push
xlat
test
imul
or
and
and
sub
xchg
stos
xor
stos
fcomps
xor
pop
popa
xchg
fsubrl
jp
rcll
nop
lea
jge
dec
and
xor
hlt
sbb
xchg
and
repz
dec
and
mov
loop
and
pop
push
inc
popf
jg
imul
or
push
and
leave
sub
fisttpll
add
ja
push
or
mov
mov
sahf
fs
push
and
lcall
addr16
jp
andl
mov
add
and
pop
mov
jne
adc
rcr
fistl
jge
jg
jns
movsl
pop
xchg
imul
rcrb
subb
inc
fnstsw
xlat
int
iret
push
pop
sbb
xchg
outsb
jno
fwait
cwtl
sbb
add
lods
pop
imul
movsb
fcoms
xor
adc
cvtpi2ps
std
push
mov
shl
outsl
mov
loopne
out
and
movb
or
xor
mov
inc
mov
fbstp
add
cmp
jl
aam
cmc
pop
frstor
xchg
movsb
pop
xor
outsl
pop
scas
dec
out
cltd
movsb
push
inc
pop
mov
ret
mov
or
repz
aaa
out
dec
rolb
mov
jg
hlt
inc
inc
and
jne
push
inc
cmc
test
out
mov
cmp
testb
mov
push
test
out
test
jmp
hlt
xlat
lds
fnsave
mov
shlb
fidivrs
rorl
int3
dec
clc
pop
xchg
pushf
lods
jle
addr16
xor
dec
cmpsb
pop
sbb
lea
in
mov
lods
fstpl
adc
sub
jae
xorb
cmp
push
push
push
leave
repnz
scas
out
xchg
pop
jo
push
stos
add
add
out
js
popa
pop
dec
jne
or
sub
sbb
add
arpl
hlt
enter
add
cmpsl
xor
and
add
adc
sub
sarb
add
shrl
inc
popf
mov
arpl
dec
xor
dec
lret
stos
lahf
inc
fstpt
test
push
jbe
data16
cmp
jne
mov
dec
jnp
cmovns
jae
les
mov
push
movsl
leave
out
cmc
int
mov
ss
es
mov
push
sbb
fists
stos
xor
xor
gs
mov
loopne
or
arpl
fimull
repz
cmp
mov
lahf
aam
lahf
repz
out
cmpsl
ss
xor
lahf
or
andb
push
repz
test
push
mov
fucomip
jae
mov
mov
dec
pusha
xor
or
push
lcall
mov
jno
push
fnsave
mov
or
imul
adc
imul
bound
gs
cmp
aad
mov
dec
in
out
es
and
loop
sbb
xor
inc
rorb
movsb
adc
mov
jne
mov
push
mov
lods
pushf
bound
push
dec
cmp
aaa
xchg
aam
mov
cmpb
inc
test
pop
add
add
mov
dec
inc
gs
mov
add
jnp
arpl
pop
mov
xor
loope
jg
inc
ret
movsl
addr16
sub
xor
inc
inc
mov
push
push
sarl
int3
sbb
mov
or
jmp
mov
jnp
fs
cwtl
enter
aas
mov
dec
popw
jl
cwtl
push
mov
xchg
mov
inc
mov
or
orb
orb
mov
shrb
jo
add
mov
in
adc
pop
popf
loopne
sahf
xor
cmp
mov
mov
nop
test
xchg
add
repnz
push
xor
mov
scas
fsts
push
call
gs
das
xchg
lock
lods
test
loopne
push
mov
imul
ja
cltd
cmp
xchg
jnp
dec
into
cs
mov
xchg
in
pop
and
sarl
lock
roll
add
dec
mov
and
mov
iret
xor
out
xor
or
daa
test
hlt
add
loop
add
and
inc
sub
push
and
and
push
stc
ret
push
rorl
push
adc
pusha
dec
cmp
push
testl
call
xchg
mov
jmp
scas
xchg
les
lock
popf
in
mov
ja
push
cltd
repnz
mov
mov
add
dec
movsb
fsubrl
loop
es
loop
or
inc
ret
mov
jb
sbb
imul
stc
out
insb
outsl
ljmp
daa
shl
jge
stc
cmp
bound
ret
or
into
shl
sbb
mov
xchg
imul
outsl
out
jge
xor
scas
dec
shl
jne
xor
cmpsl
rcl
in
lea
daa
arpl
push
lods
jge
dec
scas
mov
les
and
ficompl
movsl
push
stos
filds
adc
bound
mov
clc
mov
andb
addr16
shlb
fwait
mov
xchg
mov
cltd
mov
cmpsl
mov
fucom
cmp
xor
mov
xrelease
and
mov
ljmp
dec
nop
or
cmp
data16
lock
dec
inc
clc
xchg
call
inc
jnp
lret
cmp
lahf
push
pop
ja
sub
sbb
mov
dec
sti
pop
inc
dec
dec
dec
pop
mov
pop
mov
jmp
sar
mov
rorb
arpl
sbb
cld
mov
loop
adc
rcr
push
jmp
add
loope
jne
jle
sub
cld
lock
inc
in
popa
or
loop
imul
jbe
popf
int3
xor
dec
add
and
leave
dec
mov
arpl
cmpsl
push
pop
inc
xor
sbb
mov
xor
mov
cmp
jo
cmp
out
leave
test
xchg
lods
and
icebp
mov
push
outsl
fisubs
mov
ja
aaa
pop
mov
ret
fldln2
xchg
sbb
stos
stos
movsb
mov
addl
push
adc
cmp
jbe
inc
xor
cs
mov
jnp
cmp
push
inc
cltd
stos
imull
jb
mov
pop
fnstenv
icebp
sarb
clc
lea
sub
icebp
mov
stos
inc
out
outsb
dec
icebp
stos
mov
jno
jb
ds
ja
les
cld
pushl
lcall
xchg
pop
pushf
mov
fwait
je
xor
lods
dec
repz
cltd
mov
loop
pop
in
lea
adc
inc
je
aas
mov
cmp
cld
aam
test
or
js
lods
cmpxchg
mov
push
test
push
mov
sbb
push
out
push
lret
pusha
cli
pop
sti
out
cmp
pop
loopne
scas
paddsw
push
cmc
andb
test
bound
add
cmc
add
jnp
fisubs
xchg
je
mov
or
sbb
test
bound
sbb
push
xor
popf
adc
sub
scas
imul
cli
rclb
iret
add
test
aaa
movsl
mov
into
cs
jo
rclb
jecxz
ss
pop
sbb
jne
addl
jl
lret
ljmp
lock
mov
inc
das
push
stc
ficoml
in
bound
sti
xlat
aam
leave
out
out
jg
fnsave
mov
ja
pop
mov
adc
xor
fwait
ljmp
dec
push
pusha
adcb
bound
push
cwtl
push
test
add
int
sbb
std
push
dec
dec
rcrl
imul
sarl
xor
xchg
xchg
add
ds
hlt
jl
cmp
js
add
les
jno
shll
inc
cmc
mov
pop
mov
jge
fldl
aad
pop
push
dec
andl
xor
ljmp
arpl
xor
sub
mov
ss
mov
fsubr
insl
xor
sbb
mov
rclb
dec
decb
xchg
aaa
dec
jne
pop
cmp
and
xchg
fs
fsubl
mov
rol
xchg
mov
repnz
div
add
ljmp
sub
jne
xor
lret
push
mov
xlat
push
xchg
dec
lods
cs
loope
sti
mov
or
cmp
mov
addr16
fistpll
push
dec
mov
wbinvd
call
in
stc
mov
pop
test
adc
insb
jbe
shlb
push
ret
test
mov
xor
cltd
mov
fwait
jne
and
das
jo
sub
pop
sub
repnz
aad
daa
hlt
frstor
test
jecxz
sbb
pop
pop
add
cmpsb
xor
cmp
push
dec
mov
aaa
xor
mov
leave
mov
and
sbb
cld
repz
ret
xorb
mov
stos
sbb
pop
lret
ret
jnp
sbb
jae
js
dec
fwait
lds
in
fldenv
mov
pop
xor
jno
ret
inc
xchg
out
or
test
mov
mov
pop
int
daa
push
pop
test
push
cli
pop
jg
test
cmp
sbb
rcrl
cmp
out
mov
and
in
xchg
mov
jp
sub
scas
out
scas
fcomps
hlt
pushl
jle
sti
xor
pop
dec
mov
pop
mov
jp
mov
jns
dec
add
lds
lcall
cmp
inc
fidivl
sti
aad
out
mov
push
jae
mov
cmp
cmp
pushf
push
dec
sub
sub
adc
bound
ret
lret
xchg
cmpsl
pusha
sub
pop
xchg
xor
inc
mov
adc
inc
sbb
jo
cmpsl
mov
cs
cs
call
xchg
aaa
mov
and
inc
fldenv
clc
sbb
aaa
shl
push
mov
add
mov
jmp
cmp
jne
jns
ljmp
js
dec
insl
cmpxchg
mov
cmc
inc
in
xor
arpl
shlb
xchg
movsb
push
cwtl
push
inc
sahf
inc
cmpsb
inc
bound
or
enter
stc
lods
scas
add
sub
cmp
lret
fstl
inc
or
jne
add
dec
ds
xchg
push
fstpl
inc
jp
stos
pusha
mov
sub
inc
neg
out
jmp
test
dec
pop
mov
or
dec
xlat
inc
mov
push
and
and
xlat
xchg
fsubs
sahf
loopne
xchg
sbb
push
aam
mov
int3
push
push
loope
loopne
mov
mov
into
dec
in
loop
pop
xor
sub
adc
lret
sbb
fimuls
js
scas
shlb
cli
adc
lret
xor
jecxz
jge
es
adc
add
pushf
mulb
xchg
xchg
inc
ret
mov
sub
in
add
xor
adc
ljmp
div
test
andb
mov
stos
fimull
negl
mov
lock
repnz
lock
sbb
and
icebp
xchg
pop
out
mov
push
cli
jae
mov
mov
das
insl
fs
add
pop
repnz
pusha
stos
aaa
xlat
mov
sbb
divb
es
repz
and
adc
dec
insb
lcall
or
jb
repz
mov
sbb
int
call
push
cltd
cli
daa
test
adc
ja
cmp
pop
xor
mov
leave
ret
test
popf
push
out
call
rclb
in
jae
cltd
fildll
or
lea
jmp
or
sub
lcall
xchg
jae
xchg
fwait
loop
repnz
push
xchg
pop
mov
lret
jmp
mov
daa
scas
push
testb
les
inc
jb
in
test
leave
cmp
insb
cmp
lahf
dec
test
arpl
and
push
std
add
fucomp
imul
cld
lds
lcall
rorl
sbbb
sti
lea
cmpsb
pop
std
lret
aad
pushf
repnz
test
sahf
gs
fldcw
or
or
cli
test
jns
jo
gs
jae
sub
mov
rorl
int
in
mov
push
pop
sub
daa
cmp
sub
mov
dec
mov
xchg
cmp
in
loop
inc
sbb
shrl
push
inc
pop
mov
jg
cli
int
imul
mov
fs
xlat
mov
xorl
out
sbb
adc
xor
repnz
mov
out
pushf
into
jp
xchg
pop
sbb
sbbl
jns
inc
icebp
mov
les
sbb
lret
addr16
rcr
and
and
add
xchg
mov
push
pop
movsb
pop
xchg
xor
mov
dec
mov
cmp
xor
sbb
adc
pop
pop
pop
push
enter
hlt
enter
mov
add
sbb
or
adc
adc
repz
jo
push
aas
jae
inc
push
cmp
rorl
push
jle
sbb
push
sbb
not
pushf
rorb
and
sbb
sarl
dec
leave
pop
push
xchg
sbb
pop
mov
xchg
pop
notl
insb
iret
xchg
xor
mov
and
jnp
jne
dec
sub
sbbl
out
sbbl
cmp
movsb
mov
dec
loop
dec
xor
ror
xchg
stc
pop
loop
int3
sbb
je
push
loopne
test
adc
bound
pop
lret
fstps
pop
rcr
mov
cs
fildll
arpl
fcompl
xor
sar
jae
repz
mov
rcl
jge
out
pop
sub
ja
pop
mov
jb
mov
push
jl
and
ljmp
enter
add
cwtl
xchg
ds
inc
cli
cmp
jnp
pop
lret
jb
xchg
dec
mov
push
sahf
mov
pop
mov
enter
icebp
std
xor
je
push
push
lods
mov
mov
stos
cmpsb
add
add
in
jbe
mov
aam
add
and
popf
inc
mov
adc
cmp
insb
xchg
jmp
sbb
daa
dec
sub
ds
adc
mov
mov
lea
push
lods
push
jne
mov
xor
push
jo
icebp
pop
scas
jb
es
xchg
xchg
adcl
inc
cmpsl
pop
jnp
jge
xchg
call
mov
fidivrs
into
fwait
sub
pop
jae
dec
push
sbb
and
movsl
popf
sahf
inc
dec
pop
lods
mov
sbbl
out
inc
pop
inc
cld
loop
icebp
or
in
lret
sahf
rcll
adc
icebp
int
dec
or
into
add
outsb
xlat
xor
push
cmpsl
dec
repz
inc
sub
or
fmuls
ljmp
jnp
push
dec
inc
pusha
xchg
dec
stos
mov
mov
nop
push
popf
and
dec
inc
lds
arpl
or
push
popf
adc
pop
or
imull
cli
outsb
jne
push
xchg
dec
pop
lahf
inc
add
add
pushf
rolb
idivl
jae
dec
int3
rorl
mov
rorl
mov
shrd
pop
inc
xor
je
popa
ss
or
add
xor
divb
cmp
lods
mov
pslld
shll
or
xchg
je
push
or
fiadds
int3
into
push
and
mov
popa
lcall
in
outsb
clc
daa
leave
arpl
dec
pop
sysret
ss
add
test
pop
mov
bound
aam
int3
and
cwtl
jmp
xor
int
jg
rorl
sub
shll
lcall
lahf
mov
fcmovu
mov
lret
xchg
jo
ss
add
fldl
and
push
and
xor
out
add
int
inc
push
mov
test
dec
insb
aad
call
lods
inc
inc
arpl
lds
sbb
mov
or
cld
cmpsl
dec
fisubl
mov
cmpsb
push
out
dec
sbb
pop
dec
cli
sbb
pushf
xchg
push
jo
dec
fs
lea
mov
cmc
aad
dec
repz
add
push
push
push
repz
xchg
pusha
mov
cmp
or
jae
push
dec
xchg
sub
std
shlb
ret
pop
sub
push
sbb
dec
dec
jl
dec
int3
xor
lods
sub
xchg
ror
sub
sbbb
xor
mov
push
cmc
mov
sbb
xchg
movzwl
cwtl
enter
jecxz
out
add
cmp
cmpsb
sbb
sbb
scas
ja
inc
push
insl
and
jae
jecxz
mov
add
movsb
mov
clc
adc
clc
sti
push
clc
or
jecxz
shll
mov
lock
xor
lods
fstl
adc
pop
aad
jge
imull
fcmovu
cmpsb
out
pop
js
ds
push
cmp
ds
add
sarl
add
cmc
daa
sub
cmpsb
js
add
xor
cli
cmp
pop
sbbb
dec
mov
mov
inc
sub
sbb
mov
jmp
mov
jle
mov
imul
and
dec
dec
cmp
xchg
dec
inc
fsubs
ret
divl
inc
add
xor
push
sbb
fwait
jno
push
aad
adc
fisttpll
pop
fwait
push
push
jbe
js
jge
cltd
shrl
lahf
les
jge
mov
pop
int3
fstl
cs
std
sub
call
outsb
xor
adc
xchg
lods
mov
sbb
leave
push
xor
mov
mov
jecxz
je
pop
sub
cs
fs
scas
sub
adcb
adc
ret
mov
popa
call
pusha
add
lds
and
add
in
xor
cmpsb
lahf
mov
rcrb
loopne
fnsave
or
es
mov
push
nop
adc
add
ret
or
ret
gs
loopne
popa
inc
imul
int
xchg
cmpsb
fidivl
notl
out
cmpsb
ds
add
adc
int
fs
mov
pop
push
mov
xor
mov
dec
mov
or
sbb
scas
xor
rol
or
pop
rcr
mov
adc
test
mov
movsb
or
stos
repnz
xchg
jmp
in
mov
and
and
hlt
push
jge
jecxz
aaa
loopne
movsl
lret
popf
xchg
es
outsb
mov
fists
mov
cltd
lret
stos
dec
and
ds
xor
and
inc
in
rorl
popf
arpl
mov
push
scas
jns
pop
neg
nop
test
push
icebp
adc
mov
pop
push
in
inc
xchg
push
in
inc
dec
xor
std
sahf
popa
sub
popa
cwtl
xor
push
mov
lret
popf
rcrb
jecxz
dec
inc
test
scas
adc
mov
mov
push
jnp
dec
int
cli
shl
out
sub
call
pop
out
sti
int3
push
arpl
imul
fcomip
stc
iret
add
int
lcall
xor
out
mov
sub
stc
les
filds
jno
enter
xchg
stos
addr16
ss
lds
fs
and
jmp
into
xchg
popf
pop
test
fdivrl
inc
out
sbb
loop
mov
xchg
jecxz
jnp
lock
pop
ficompl
jmp
push
mov
sub
stc
mov
add
pop
mov
subl
xchg
cmovl
cwtl
cmp
fistpll
xor
jno
std
repz
insb
out
jp
movsl
sub
dec
fldenv
cmp
test
dec
and
das
push
addl
or
push
outsl
fcmovbe
mov
es
nopl
popa
xchg
dec
jge
jae
cmp
sbb
sahf
sbb
inc
push
sbb
scas
sbb
scas
adc
jmp
out
mov
add
inc
outsb
ja
or
das
mov
sbb
pop
mov
push
aas
clc
adc
leave
jle
in
stc
aaa
into
xor
dec
jg
addl
pop
xchg
leave
sub
and
xor
sub
or
fcompl
test
cmp
stos
dec
inc
xchg
fstp
inc
or
xor
jge
pop
fadd
xor
clc
mov
and
inc
push
mov
push
sub
fidivl
lods
mov
mov
jge
xchg
pop
xlat
das
mov
xchg
dec
mov
adc
push
fldl
rorl
in
cli
fcmovu
jns
sbb
inc
pop
rcll
popf
and
cltd
lock
test
and
fiaddl
mov
sbb
jge
push
in
lds
push
iret
fstps
dec
movsl
cmpsb
push
or
add
and
fidivrl
clc
test
dec
shl
adc
pop
push
incl
imul
ja
jo
dec
inc
xor
insl
fistpll
jo
outsb
cmp
mov
subl
inc
fidivrl
sbb
mov
dec
mov
fucomp
clc
ja
in
roll
mov
mov
inc
stos
repnz
sub
int3
xchg
sub
mov
lock
icebp
jmp
pop
jl
inc
shl
sbb
and
mov
fs
add
pop
fimull
pop
maxps
andl
add
cli
popa
fstps
or
lcall
cmc
mov
cmpsl
lret
shll
pop
aam
add
stc
fcoms
loop
lods
lds
in
jecxz
cs
pop
scas
pop
cmp
sub
cltd
dec
cmp
or
lcallw
ror
je
std
or
out
pop
jb
xor
into
lods
mov
lcall
clc
lods
mov
pop
sbb
je
xor
add
jae
xor
push
insb
lea
mov
fdivrl
add
and
or
adc
lods
add
ja
nop
rcrl
fs
pop
clc
loopne
cmp
sbb
js
xchg
sbb
inc
sahf
stos
mov
push
in
shlb
or
sbb
aas
pop
fwait
cs
push
xor
or
xchg
push
dec
rorb
and
pop
cs
adc
or
xchg
sarl
sub
imul
inc
inc
jno
pop
movsb
movsl
mov
in
mov
and
pop
call
cmpsl
ficoms
in
inc
sbb
cmp
and
cmpsl
ss
or
rcrb
adc
in
xor
jno
addb
gs
xor
stc
fdivrs
sub
or
cmp
add
ret
pop
ret
lret
jp
ficoms
xchg
and
minps
mov
out
mov
jge
rol
jne
jae
push
mov
xchg
fldt
ljmp
cltd
xchg
lock
add
pop
mov
jno
enter
outsl
sbb
test
ja
and
adc
into
shrl
mov
and
or
add
add
mov
out
pop
arpl
bound
mov
lret
or
lret
out
das
test
lds
pop
xor
xchg
and
test
jae
inc
dec
jmp
xchg
out
cmc
ja
pop
dec
or
int
xor
push
aas
movsb
xchg
rclb
aad
cmp
cli
fadd
stos
mov
daa
xchg
imul
xlat
jae
repz
push
pop
loop
cmc
dec
ret
pop
jne
sub
shr
push
cmp
int
pop
mov
fstpl
dec
add
add
in
adc
cs
addr16
movsl
lea
mov
add
mov
cmpsb
bound
inc
or
enter
scas
jne
lods
or
add
call
xor
frstor
addr16
es
insl
faddp
xlat
js
sarl
xchg
inc
push
ret
dec
inc
adc
pop
movsb
cmpsl
mov
imul
xchg
nop
mov
fnstenv
mov
xchg
and
inc
mov
fwait
iret
aaa
mov
pop
lret
roll
sbb
scas
dec
nop
and
ret
loopne
icebp
fwait
inc
pushf
orb
xorl
add
cmp
fstl
mov
aad
inc
sti
mov
cmp
pop
push
xor
out
dec
mov
jmp
js
jne
ss
mov
icebp
jo
add
rcrb
ss
and
or
in
rorl
xchg
xchg
xchg
test
xor
push
popa
mov
sbbb
add
imul
and
pusha
cmp
inc
mov
jmp
xchg
sti
or
pop
mov
adc
jne
sbb
dec
or
das
adc
scas
add
lea
testb
cmp
adc
push
cmp
mov
xor
push
xchg
jmp
and
stos
push
lea
jmp
loopne
lcall
in
jmp
leave
jecxz
popf
pop
mov
mov
daa
xchg
lods
lea
cmp
adc
insl
xchg
cmp
push
test
push
lret
xchg
sub
in
sub
in
je
jo
sub
imul
pop
imul
jmp
inc
jns
bound
cli
push
data16
mov
xor
mov
fldcw
popa
cli
repz
das
fisubrs
dec
mov
sub
adc
pop
mov
dec
push
lock
test
dec
xchg
push
sbb
test
lea
pop
cltd
ficompl
mov
lds
lds
and
lock
mov
out
pop
push
not
mov
mov
or
hlt
and
imul
cmpsl
pusha
and
mov
aas
out
shr
test
or
shll
and
xchg
cwtl
out
adc
mov
push
xchg
push
adc
cmp
cmpsl
sub
pop
ss
ja
mov
push
dec
sbb
mov
into
mov
sbb
add
lea
xlat
mov
xor
adc
sahf
sbbb
popf
nop
mov
jbe
aam
cmpl
inc
ss
movsl
xor
dec
cmpsl
roll
scas
sbb
mov
aaa
and
xchg
test
push
ss
dec
stos
das
mov
scas
outsb
add
test
mov
les
call
mov
mov
xchg
aaa
ss
mov
sbb
adc
fstl
sbb
cwtl
pushf
daa
in
and
std
scas
repz
btc
lea
out
push
icebp
push
fstl
stos
push
mov
xor
fs
addr16
fstpt
pop
inc
nop
add
jns
test
adc
xor
jmp
cmp
pop
repz
lahf
std
pop
mov
mov
mov
lock
mov
cmpl
cmpsb
add
shl
aas
xchg
call
mov
ficoml
jae
movsl
decb
xor
jne
shr
mov
lret
xor
sub
inc
out
pop
pop
jb
pop
jbe
lret
sbb
adc
loope
push
movsl
lret
push
cmp
jecxz
ret
loopne
sbb
call
mov
mov
sub
iret
jg
ja
insl
addl
jg
jno
aas
outsb
push
scas
mov
lret
mov
xor
outsb
mov
push
jg
aam
jecxz
dec
ret
mov
add
sub
pop
aaa
stc
push
lahf
mov
je
test
mov
outsb
sub
je
and
lock
mov
cmp
in
xchg
xchg
roll
xchg
jmp
xchg
enter
mov
adc
push
or
inc
fs
mov
mov
test
xchg
add
sub
sti
xchg
jbe
hlt
dec
sahf
clc
xchg
sti
ljmp
sbb
and
loop
or
sbb
cltd
cmp
xchg
xor
push
mov
cli
daa
add
in
cmp
sbb
pcmpeqd
fsubr
imul
dec
adc
das
jne
push
push
mov
mov
xchg
fistpl
mov
mov
sbb
pop
or
pop
cld
aas
sub
push
div
nop
or
mov
bound
nop
mov
sbb
jo
cli
das
out
push
jmp
sub
or
mov
or
jb
mov
lods
inc
sub
mov
dec
pusha
xor
int3
push
mov
sub
or
dec
nop
lock
xchg
dec
inc
je
cmp
mov
or
lret
jno
mov
icebp
or
in
cmpsb
or
mov
aas
popf
inc
xor
cmp
xchg
arpl
fmuls
ljmp
data16
out
cmp
addr16
xchg
das
sbb
mov
adc
mov
inc
pop
xor
xor
push
sub
mov
sbb
mov
pop
push
and
pop
push
xchg
std
jne
loopne
jb
testb
mov
add
addr16
pop
mov
jge
mov
jg
pop
scas
push
inc
inc
ja
stos
popf
aaa
rol
outsl
mov
xlat
scas
scas
cmp
jp
dec
ret
inc
popf
cmc
and
pop
jae
hlt
ljmp
and
dec
mov
gs
xor
mov
scas
sub
sbb
xchg
inc
ss
lcall
sbb
cwtl
mov
xorl
ret
sbb
mull
adc
mov
es
push
pop
and
les
pop
xchg
mov
xlat
and
js
inc
inc
idivb
sub
mov
cmc
pop
rorl
mov
out
or
enter
cmp
mov
sbb
xchg
mov
jle
fwait
ret
roll
rclb
dec
dec
lret
iret
stc
ror
ljmp
mov
gs
mov
dec
icebp
jo
add
mov
mov
inc
lahf
push
sahf
sbb
mov
test
ds
or
fimuls
hlt
arpl
xor
cmpsl
mov
std
je
cld
pop
cmp
and
icebp
fs
push
imul
push
cmpl
scas
adc
adc
adc
sarb
mov
and
imul
int3
out
and
push
mov
out
outsl
rcll
cmp
or
xor
imul
jecxz
cltd
and
sahf
mov
cld
pop
sahf
mov
pop
lret
test
push
push
call
jo
fldcw
test
arpl
loop
lea
das
rclb
ss
mov
push
sbb
movsl
jnp
xchg
adcl
inc
aaa
repz
test
cwtl
cwtl
pop
xchg
in
adc
pop
shlb
cmc
inc
mov
aad
pop
mov
dec
push
mov
pop
test
lods
xor
repnz
and
inc
movb
movsl
mov
jmp
stc
xor
xor
xchg
pop
inc
rorl
das
add
cmp
pop
popa
les
xchg
addr16
ja
or
sarb
add
push
mov
popa
xlat
out
xchg
lods
xchg
jne
dec
sbb
fisttpll
xlat
insb
sub
adc
out
adc
inc
sbb
mov
or
sbb
imul
xchg
mov
aam
mov
xchg
or
scas
insb
mov
call
cwtl
mov
insb
mov
jg
push
sbb
out
imul
add
add
mov
xchg
test
and
repz
mov
jne
xor
loop
mov
ret
sbb
out
or
pop
dec
rcl
or
mov
add
push
add
or
cmpsb
fdivp
cmp
xchg
dec
es
pop
jns
imul
mov
ss
dec
and
and
sbb
aaa
sub
xchg
cmp
pop
js
and
dec
mov
jns
push
mov
sbb
sti
fsqrt
in
add
addr16
sbb
mov
ja
add
test
insl
fdivs
cli
jo
movsl
dec
push
fs
jbe
sbb
cs
inc
xlat
xor
or
rorl
imull
popf
and
enter
popf
adc
lods
jp
mov
push
cmp
mov
nop
xchg
fwait
stc
mov
sub
or
mov
xor
mov
sbb
fiadds
mov
push
arpl
push
dec
jne
imul
icebp
pop
lret
lds
dec
insl
out
fsub
mov
or
les
and
dec
icebp
mov
jae
dec
sbb
outsb
xchg
xor
pop
fimuls
outsb
mov
pop
call
lcall
mov
cmp
pushl
dec
or
mov
xchg
mov
mov
pop
sbb
aam
jb
push
scas
jle
xor
cmc
imul
jne
xchg
call
mov
cmp
and
dec
sbb
push
mov
testl
dec
dec
xor
out
pop
sub
pop
into
icebp
addb
mov
sar
push
lods
mov
shr
push
mov
xchg
ds
mov
test
mov
cli
push
data16
xlat
leave
xor
fidivs
data16
scas
ljmp
mov
inc
je
andl
push
inc
clc
xchg
loopne
mov
data16
lods
inc
mov
inc
das
lea
mov
pop
mov
lods
push
mov
mov
test
test
push
pop
scas
jp,pn
fcompl
push
xchg
in
jno
loop
cltd
lea
mov
call
pop
lret
es
pop
pop
inc
loopne
push
cli
push
cmpl
xlat
jmp
scas
movsl
movsl
pop
pop
mov
loopne
ds
into
push
xchg
sub
cmp
push
xchg
pop
dec
in
pop
mov
enter
mov
insl
rclb
pop
mov
mov
sbb
mov
lods
xchg
jnp
sub
shrb
gs
int
mov
dec
outsb
icebp
mov
jle
decb
out
push
dec
movsl
fstpt
adc
pop
adc
bound
push
mov
aam
push
fsubl
lret
sti
push
prefetch
or
dec
or
ja
inc
mov
add
repnz
xchg
adc
loopne
push
mov
pop
lret
inc
cmp
inc
and
pop
cli
inc
and
sub
ret
jae
popa
scas
std
int3
jge
and
pop
test
jmp
inc
xchg
ja
shl
jl
mov
out
sbb
addr16
mov
xor
dec
dec
sub
and
and
popf
shr
jbe
mov
mov
add
adc
das
ja
inc
insl
out
outsl
pop
mov
push
inc
notb
xor
aaa
xor
push
pop
pop
std
and
ret
ficoml
aas
bound
cli
and
ja
lods
and
pop
cmp
sbb
and
or
mov
bound
std
andl
cmp
rolb
loopne
fiadds
mov
dec
and
sbb
and
loopne
call
icebp
stos
lahf
lock
std
jnp
inc
and
dec
pop
mov
push
mov
out
jge
jle
clc
mov
xor
inc
pop
repnz
scas
punpcklbw
pop
adc
movsb
rcrb
pusha
sub
cmpsl
mov
xchg
cli
out
jbe
ss
lea
push
dec
dec
xchg
mov
fiadds
xor
jno
fimull
or
cmc
sti
pushf
decb
lock
lods
dec
arpl
push
or
js
xor
sub
mov
test
ficoms
into
jg
mov
sbb
in
cmpb
stc
div
cwtl
lods
repnz
shr
dec
pusha
mov
cmpsl
sbbl
xlat
rcr
xchg
into
dec
sti
inc
push
sbb
popa
rcrl
dec
dec
mov
sbb
in
jmp
stc
or
in
mov
cmp
jbe
sbb
sbb
data16
push
sahf
pop
xor
subb
mov
jbe
out
call
test
mov
mov
pop
das
insl
and
ja
xor
push
sub
dec
cmp
cmp
aaa
adc
sbb
jbe
popf
sub
es
inc
xchg
pop
xchg
xchg
pop
leave
mov
std
loopne
pop
shl
subl
aaa
lods
sub
dec
ret
mov
andb
xchg
pop
and
popf
jno
stc
mov
xchg
mov
push
push
sahf
lahf
gs
dec
dec
mov
dec
jmp
in
out
cli
aas
out
jmp
add
cld
mov
fcmovne
ss
xor
jp
out
fwait
je
test
into
push
lret
test
outsl
push
xchg
hlt
test
imul
outsb
ficoms
push
pop
movsl
jl
or
pop
out
pop
mov
mov
aaa
movsl
testb
jge
adc
add
or
fdivs
ret
and
add
add
imul
mov
aam
xchg
mov
xchg
rcrb
jne
sub
xchg
push
mov
bnd
and
inc
insl
pop
xchg
mov
xchg
push
incl
rorb
xchg
shll
mov
push
inc
inc
dec
ja
cmpsl
xchg
xchg
sbb
add
rcrl
inc
pop
das
lds
xchg
mov
mov
stos
rorl
mov
and
cmp
xchg
xor
xlat
or
dec
jno
imul
fdivrs
mov
adc
pop
sbb
xchg
sub
and
mov
inc
add
idivl
xchg
jno
pop
xchg
dec
aad
and
dec
xor
jnp
ds
mov
pop
data16
outsb
cmp
leave
es
cmp
jmp
mov
ss
ljmp
fwait
xlat
subl
es
popf
lods
lret
mov
sub
notl
movsl
adc
sub
add
subl
jbe
xor
push
sub
push
add
lods
movsb
dec
inc
cmp
pop
xchg
fwait
jmp
arpl
jge
out
adc
aad
mov
test
fwait
hlt
mov
shll
inc
sbbb
stc
cld
ss
and
stos
jb
mov
out
jb
mov
adc
inc
dec
adcb
and
pusha
jns
in
push
outsb
jo
ja
xchg
cmp
mov
std
add
push
xor
and
inc
jne
adc
cmp
cltd
pop
dec
je
xchg
cmp
sbb
rol
sub
icebp
sub
push
clc
mov
push
rolb
xchg
mov
test
jbe
mov
mov
mov
pop
out
add
jb
mov
sub
sbb
rorl
inc
lcall
mov
fs
or
in
sbb
xorb
aad
jg
push
mov
in
cwtl
dec
scas
adc
mov
stos
stos
pop
sbb
xor
aam
sbb
mov
lds
push
sbb
xchg
add
test
push
pusha
sub
cmp
aad
je
inc
je
out
popf
sti
inc
out
add
jne
inc
lret
push
xchg
pop
jbe
jge
add
sbb
fcmove
repz
enter
mov
popa
inc
fisttpll
lock
xchg
aaa
mov
add
pop
jnp
addl
push
pop
insb
subl
out
lods
sub
adc
add
mov
sbb
imul
mov
and
test
pop
mov
jne
xor
stos
ret
sbb
cmpsb
xchg
sti
ret
addr16
xchg
adc
nop
cmpsl
mov
mov
int3
adc
loop
fcmovnb
mov
sub
clc
mov
shrl
mov
jmp
frstor
cltd
es
cli
jnp
sbb
es
mov
xchg
fdivl
movsl
fwait
pop
stos
adc
out
add
fwait
outsb
jne
test
mov
jo
rclb
out
inc
or
sub
lea
dec
inc
or
jb
lods
pop
xor
int
xor
loop
fisubl
pop
sbb
push
fcmovb
test
cmp
int3
andl
addl
fistpll
mov
pop
jge
mov
inc
cmp
mov
mov
adc
clc
insl
je
sarb
dec
fwait
dec
imul
std
arpl
mov
mov
das
mov
les
ljmp
cmp
std
lahf
sahf
ss
pop
mov
out
push
leave
and
scas
mov
js
mov
adc
sub
ds
add
in
stos
mov
jno
fidivl
repz
sub
mov
jbe
lcall
ficoml
scas
in
sti
and
mov
aas
mov
mov
les
mov
sbb
jle
cwtl
mov
ja
add
sbb
jecxz
mov
jle
xchg
aas
mov
sub
popf
arpl
int3
or
xchg
xchg
cmp
mov
jae
adc
jno
inc
andb
lret
xchg
cld
aas
rcll
sti
mov
pusha
pushf
dec
or
dec
sub
xchg
repz
xchg
jecxz
mov
mov
lcall
int3
xchg
aad
jge
adc
shrl
mov
pop
cmp
add
jge
das
rcr
jnp
aam
int3
fs
mov
inc
pop
test
or
add
sub
lock
mov
das
sahf
sub
stc
ss
aaa
loope
decl
jle
xchg
ja
int
xchg
inc
std
sub
xchg
add
jp
icebp
adc
lcall
ret
ds
ffree
aam
or
jmp
xor
jbe
shlb
out
pop
imul
mov
add
and
lods
fildl
inc
std
mov
and
xor
enter
cmp
sub
mov
sbb
mov
or
ret
inc
mov
mov
push
sub
push
arpl
mov
mov
sub
jecxz
inc
dec
es
shlb
pop
push
scas
scas
repz
std
bound
movsl
xchg
call
out
notl
fldenv
mul
sbb
xlat
in
aaa
sahf
xchg
in
push
arpl
and
outsb
dec
or
outsl
movsl
fidivs
movsb
jge
out
mov
repz
push
sub
test
cmp
add
sbb
xor
scas
mov
inc
dec
xor
adc
movsb
inc
inc
xchg
add
jmp
xchg
fadd
mov
adcb
inc
icebp
lods
mov
inc
push
cwtl
das
arpl
movq
popf
push
mov
cmp
aaa
icebp
aas
xlat
mov
and
ljmp
mov
test
jae
jmp
addr16
cmp
sarb
ja
aam
mov
xor
ret
xchg
mov
mov
sbb
jae
pop
add
out
rcrb
xor
pop
add
mov
add
ret
inc
ja
out
es
out
xor
int3
cmpsl
sti
fdiv
adc
leave
aaa
jle
fwait
in
jmp
jo
mov
stc
inc
push
and
ss
push
rorl
jne
fucomip
enter
cli
mov
in
icebp
inc
iret
mov
cmpsb
or
sahf
stos
fs
add
sub
push
add
and
sbb
mov
push
std
push
das
jecxz
mov
mov
ljmp
ljmp
mov
cmc
cmove
inc
lods
jbe
mov
js
ss
bound
xchg
push
jns
mov
aam
ja
or
jecxz
iret
aas
mov
sbb
lahf
mov
mov
imul
mov
movsl
pop
inc
enter
out
jl
in
arpl
sub
insl
jp
inc
cmpsl
dec
pop
jmp
pusha
popa
sbb
sub
jecxz
and
dec
test
notb
movsb
mov
arpl
push
rorl
adcb
iret
add
lcall
leave
sbb
lea
xor
push
aaa
dec
in
xor
pop
dec
push
call
test
cmp
mov
bound
push
dec
sub
mov
fisttpll
adc
clc
push
fldenv
loopne
cmpsb
clc
cld
leave
inc
lcall
dec
fs
or
divb
lods
movups
hlt
sti
inc
int
push
fiaddl
push
mov
and
mov
sbb
mov
cmp
cmp
push
sub
mov
ljmp
jne
lods
out
mov
adc
push
aad
xchg
incb
pusha
fldenv
mov
sbb
mov
jl
jmp
clc
das
or
sarb
rorl
bound
sarb
cs
lea
push
cmp
pop
imul
sub
es
push
ss
pop
push
xor
cmpsb
aaa
int
and
lea
add
notl
push
jnp
xor
add
sbb
mov
sbb
pushf
ret
in
int3
lcall
enter
dec
lods
sub
jmp
movsb
xchg
sbb
fwait
call
add
cmp
shr
sub
sbb
cltd
mov
push
loop
cltd
mov
mov
xor
lock
movsl
int
mov
fsubrs
adc
testb
dec
scas
sub
ja
arpl
shrb
sbb
pop
scas
pcmpeqb
insl
mov
mov
in
sub
pop
sbb
cmpsl
stos
mov
roll
pop
xchg
push
sub
scas
cmp
pop
pop
cmp
std
mov
rcll
jo
push
cmc
popf
dec
jbe
sub
and
in
and
sub
push
test
scas
jbe
jmp
xchg
sub
add
jo
ss
pop
pusha
test
push
jae
pop
shlb
in
sbb
mov
cmp
fisttpl
mov
push
loop
push
aad
cmp
or
fldcw
enter
add
cs
mov
mov
mov
cwtl
adc
push
or
inc
xlat
push
outsl
mov
addr16
pop
sub
adc
out
jnp
mov
xor
cwtl
or
xchg
notb
decl
push
lock
insb
sbb
mov
push
int3
sbb
subl
push
lahf
pop
jmp
addr16
push
shl
ja
ret
rep
xchg
leave
lods
mov
push
fs
loope
xor
mov
pop
dec
ljmp
loop
mov
mov
jmp
in
push
sti
lahf
in
jmp
insl
insb
lods
outsl
inc
mov
in
adc
test
sub
pop
jns
incb
adc
aam
mov
dec
inc
mov
hlt
adc
mov
imul
adcl
mov
test
mov
mov
bound
push
mov
push
out
jno
mov
mov
sbb
das
in
jae
stc
xchg
jp
fcoml
adc
mov
in
push
mov
fidivs
or
aaa
cwtl
incl
mov
mov
pop
int
sbb
pop
mov
rorl
cmp
push
add
gs
rolb
mov
adc
xchg
jae
icebp
pop
movsl
repz
inc
and
pop
bound
inc
ret
pop
push
in
sbb
sub
dec
shll
add
dec
cmp
ret
inc
js
sub
sahf
add
jno
fcmove
aam
adc
cmp
gs
hlt
cli
stc
into
popa
in
divl
aas
xchg
in
mov
enter
sbb
jno
and
mov
sbbb
sbb
push
aas
jb
test
jbe
rorl
out
stc
ljmp
sbb
test
out
mov
xchg
sub
rcr
xlat
leave
jle
xor
jbe
dec
inc
lods
push
mov
out
loopne
jg
adc
add
js
sbb
ret
stc
leave
cmpb
clc
loope
hlt
xchg
aam
sub
mov
icebp
icebp
mov
stos
sub
test
pop
outsl
sbb
pop
jge
fnstcw
and
or
inc
test
int
pop
cltd
test
sti
cmp
mov
repnz
pop
mov
je
add
cs
test
mov
pop
ja
push
ret
and
xchg
inc
jg
cmp
loopne
inc
push
inc
jmp
push
push
and
jle
ljmp
cmp
imul
lret
pop
dec
aas
ljmp
cmp
adc
mov
jne
mov
nop
int3
mov
dec
inc
es
lock
inc
jne
sub
test
add
into
pop
add
repz
adc
mov
cs
pop
aas
and
mov
xchg
add
xor
popf
jmp
cmc
cmpsb
sub
orb
mov
lahf
idivb
push
fwait
in
mov
push
rolb
jl
int
pop
out
xchg
repz
and
daa
mov
repz
loopne
sub
mov
ficoml
pushf
mov
cmpsb
lret
fsubl
xor
mov
lret
loop
mov
das
pop
jno
loop
push
pop
adc
lcall
or
xchg
sub
mov
or
or
jmp
inc
mov
push
jl
orl
mov
enter
and
inc
sbbl
outsl
jmp
mov
jmp
or
mov
fdivl
sub
sbb
xchg
into
ljmp
fldl
cld
mov
frndint
stos
pop
pmulhuw
jae
movsb
andl
fidivl
ror
stc
and
repnz
nop
dec
mov
xor
and
push
fdivp
cmc
adc
test
dec
cwtl
dec
and
repnz
cmpsb
out
es
adc
adc
les
xchg
push
mov
push
das
jae
aad
sub
and
insl
cmpsl
les
jnp
lahf
sar
cmp
and
pushf
cs
xor
into
sbb
leave
lock
cmpsb
js
dec
and
dec
dec
repnz
mov
repnz
cs
fimuls
cmc
xchg
push
aas
cltd
fidivl
jp
push
mull
pop
jne
pusha
inc
sbb
loope
aam
push
xchg
das
jecxz
scas
mov
shlb
mov
jecxz
xchg
push
mull
adc
push
push
notb
rorb
es
ja
mov
push
cmp
gs
iret
hlt
or
fsts
jnp
iret
lret
mov
xchg
and
dec
rcrb
dec
xchg
inc
sti
in
and
addb
cli
mov
mov
orl
mov
sub
ds
cmp
cli
sbb
repz
and
fxch
mov
inc
out
int
jecxz
test
cmpsb
fld
stos
lods
scas
test
hlt
pop
int3
or
push
adc
dec
shrb
adc
sub
ja
out
call
or
scas
push
add
imul
jb
sub
std
clc
jmp
mov
das
and
loope
fists
je
rol
inc
xor
mul
xchg
int
adc
insb
ss
js
add
dec
call
xchg
in
pusha
push
jle
or
xor
push
inc
push
push
xchg
push
icebp
out
mov
pop
adc
aaa
xor
out
fs
lahf
jmp
adc
andb
dec
xlat
dec
xchg
push
dec
lds
stc
xchg
mov
mov
sub
test
jne
imul
xchg
cld
pushf
pop
inc
sub
clc
or
push
jmp
cmp
loopne
sar
in
stos
lock
pop
test
dec
popf
subl
jae
mov
test
jbe
iret
cmp
mov
cmpsb
xor
mov
mov
sbb
das
cmpb
or
ljmp
fidivs
mov
fdivl
cltd
sti
jne
dec
cmpsb
mov
mov
jmp
insb
inc
inc
pop
lods
jbe
dec
cmp
es
scas
push
jae
sbb
dec
add
clc
sbb
popa
jmp
inc
testb
mov
jl
sub
inc
dec
ds
push
out
mov
cmp
or
mov
in
icebp
fimuls
and
pop
mov
xchg
dec
mov
or
mov
testl
ds
out
mov
pop
sbb
pop
push
cwtl
arpl
adc
jbe
push
bsr
cmp
pop
ds
or
push
inc
lcall
out
dec
pushl
movsb
repz
add
int3
sbb
push
ret
xchg
imul
xchg
fs
sarb
or
imul
mov
jl
mov
faddl
and
lahf
popa
lock
push
jne
mov
mov
cltd
jnp
mov
test
adc
shll
enter
movsb
sub
dec
cltd
shrb
sti
test
divb
pop
mov
cmpsl
adc
sub
push
outsl
add
shrb
add
cwtl
sub
pushf
popa
outsl
mov
xor
jbe
push
dec
jl
sbb
daa
out
cmp
xchg
subl
and
xor
push
cmp
pop
mov
stc
ds
fscale
push
or
adc
cltd
sbb
popf
xchg
pop
and
lretw
fs
mov
arpl
mov
add
sbb
pusha
stos
sub
jl
add
ret
jmp
loope
xorl
int
adc
jg
stos
mov
addr16
arpl
je
jmp
incl
rcr
pop
ds
xlat
rorb
mov
pop
pop
xor
pop
cld
ss
pop
fists
sbbl
jp
daa
jb
mov
sub
xchg
sub
movsb
stos
popf
aaa
std
mov
push
xor
pop
mov
jmp
push
lahf
pop
pop
push
fcoml
repnz
outsb
pop
dec
dec
mov
sub
mov
int
inc
jae
popa
pop
les
and
sbb
bound
push
inc
test
pushf
sub
fisubs
jnp
imul
cmp
push
xchg
aaa
iret
cwtl
add
daa
dec
or
daa
jmp
dec
pop
push
xor
mull
stos
lods
lods
sbb
mov
iret
call
ds
test
adc
jae
pop
jge
and
stc
mov
mov
cmpsl
roll
mov
jno
dec
pop
xchg
inc
arpl
mov
adc
add
fnstcw
leave
adc
int
fidivl
test
mov
lea
mov
test
sub
out
das
jns
arpl
push
push
xchg
stc
movsb
dec
pop
jo
xchg
popf
es
pop
cmp
pop
and
loop
ror
inc
int
cmpsb
imul
bound
lods
cli
pop
lcall
adc
testl
sub
jp
push
and
aas
out
fstpt
push
fidivl
aas
push
mov
jp
aad
sub
jbe
mov
adc
add
xchg
xchg
sbb
mov
das
mov
mov
mov
ret
xchg
out
in
fwait
clc
fwait
xchg
xchg
mov
and
scas
jmp
shlb
jge
add
xchg
sbb
filds
popa
mov
notl
cmp
fdivrs
push
orl
adc
lcall
test
clc
jge
inc
sub
aas
decb
push
push
je
cmovno
enter
jecxz
fstps
sbb
or
das
stos
dec
imul
jecxz
push
call
ret
sub
mov
mov
aaa
sbb
dec
jb
jno
dec
cmp
adc
arpl
mov
lret
add
mov
cmpsl
stos
lcall
js
pusha
test
jle
mov
or
inc
movsb
or
adc
jp
adcb
scas
sahf
adc
push
imul
rorb
sub
cmp
mov
jbe
cmp
pop
jg
xchg
jl
nop
fadds
jg
cmp
push
js
dec
fnstenv
add
or
out
mov
xor
fistpl
push
sahf
notb
push
lock
xchg
xchg
outsl
mov
jbe
xchg
in
out
dec
mov
cltd
fnstcw
or
and
test
jae
push
mov
and
lret
call
or
int3
je
or
mov
cltd
or
mov
sub
inc
rol
sbb
test
stos
push
outsl
mov
shrl
faddl
push
pop
clc
mov
push
and
test
lds
inc
loop
inc
xor
mov
fwait
xchg
aas
in
jo
adc
inc
pop
push
push
loop
lcall
ficompl
fsubs
xchg
shlb
push
dec
cmp
mov
jns
push
imul
jbe
lods
dec
adc
in
lods
outsb
jnp
sti
cmp
ret
add
rcrl
repz
sbb
shl
dec
mov
adc
loopne
dec
out
mov
xchg
jp
add
mov
fldt
scas
mov
push
inc
addr16
lcall
pop
mov
xor
push
and
pop
clc
cld
jmp
fsubr
mov
aad
ret
das
scas
sub
mov
mov
and
jl
sub
mov
xchg
add
in
add
rcr
mov
push
outsb
cmp
mov
dec
cmp
sbb
pusha
loope
lea
dec
mov
gs
xor
xor
out
stos
dec
or
add
outsb
and
ljmp
insb
mov
add
scas
jle
pop
jnp
xchg
aad
lock
pop
pop
out
enter
stc
adc
leave
dec
imul
xchg
ja
lds
in
scas
sbb
das
lcall
inc
adc
in
insl
push
imul
out
scas
cwtl
std
mov
enter
outsl
icebp
leave
sbb
jp
btr
push
int
mov
aas
addr16
mov
popa
sub
dec
test
and
push
rol
mov
xchg
shll
test
roll
mov
lcall
xchg
mov
dec
pop
icebp
mov
shrl
sahf
ret
or
xor
lds
jb
leave
lods
pop
aam
leave
clc
es
and
xor
ljmp
scas
ja
and
ret
jge
xchg
push
sti
icebp
pop
ja
mov
stc
xchg
cmp
jb
aaa
leave
lods
mov
dec
andl
lahf
xor
pop
fisttpl
iret
outsl
adc
push
insb
inc
jecxz
pop
shll
mov
in
sub
lods
scas
dec
scas
insl
mov
dec
dec
mov
sbb
mov
call
lahf
call
mov
push
mov
jnp
sti
add
cmp
or
pop
sbb
mov
xchg
dec
sbb
push
and
or
mov
xchg
fadd
in
adc
dec
cmp
gs
into
jns
mov
and
fwait
stc
xchg
or
icebp
sub
paddb
push
mov
pop
cld
push
pop
in
lea
adc
jbe
pop
and
dec
cmpsl
cmp
mov
stos
jecxz
inc
xlat
lret
xchg
hlt
xchg
mov
clc
and
adc
pop
addr16
mov
cmp
mov
enter
add
xor
cwtl
xor
dec
lret
inc
xchg
out
inc
jb
outsl
adc
and
outsb
and
fnstenv
mov
lock
mov
mov
call
stos
push
out
mov
mov
xor
fnsave
adc
sbb
sbb
aam
ficompl
jecxz
jle
xor
cwtl
loope
add
clc
adc
jne
roll
mov
sarl
fs
xchg
or
bound
adc
sbb
leave
in
push
and
jecxz
filds
mov
mov
loope
inc
out
lds
jns
cmpsl
push
cmp
popa
adc
dec
ljmp
cmp
into
loopne
or
clc
adc
jae
stos
cmp
pop
bound
clc
jecxz
dec
or
pop
xor
fidivrs
ret
call
bound
in
pop
lret
or
mov
add
mov
push
push
dec
mov
jmp
mov
xchg
jae
insl
xchg
mov
enter
ss
adc
dec
mov
adc
stos
es
mov
movsb
mov
pop
ss
dec
clc
cmc
popf
scas
out
sub
mov
sbb
lods
andl
adc
and
mov
jb
aam
cltd
enter
shrl
push
stc
and
jle
andb
lcall
add
rorb
movsb
bound
adc
inc
push
call
ss
jmp
lret
mov
sbb
add
lss
cmp
add
shrb
jae
inc
pop
dec
js
xor
cmpsl
xor
fs
cmp
mov
daa
cmc
lcall
mov
sti
add
lahf
xor
clc
rclb
ret
cmpsl
mov
xchg
inc
call
mov
sti
insb
loope
cmpsl
imul
pushf
aam
call
aad
mov
xchg
in
cli
mov
das
lock
das
inc
jge
mov
xor
sbb
pop
xlat
mov
fcoms
mov
add
mov
xor
jp
idivb
test
or
jb
loope
fildll
insb
pop
mov
jb
dec
jne
cmp
fs
pop
cmp
testl
daa
jg
test
ds
lret
popa
or
lods
or
imul
out
dec
cwtl
das
push
cmpb
mov
and
or
subl
pop
pop
inc
sbb
fidivrs
mov
outsb
aas
jle
pop
push
jg
popf
sbb
mov
push
mov
xor
xchg
cmc
jge
mov
pop
inc
xor
pop
ss
cld
popa
js
inc
or
jmp
ljmp
pop
cmp
cmp
cmpsl
push
sub
ds
lret
fimull
adc
cmc
cmp
sbb
dec
rcrl
or
adc
mov
jo
leave
sbb
aaa
cli
mov
add
inc
push
mov
rcr
rcrl
movsb
sub
cmp
pop
sbb
aas
sbb
jae
push
pop
inc
into
lcall
and
mov
dec
push
pusha
mov
pop
sbb
out
xlat
dec
fnsave
dec
jmp
adc
jl
pop
inc
lods
or
cmp
mov
sub
shl
ja
jae
dec
jae
dec
in
mov
mov
xchg
xchg
std
out
mov
dec
imul
xor
inc
xor
fwait
xchg
mov
adc
lcall
sub
mov
xchg
shll
shll
mov
insb
sub
cmp
fwait
jp
and
jne
scas
xlat
jno
and
pop
hlt
test
mov
inc
dec
mov
add
vmovsd
xchg
pop
rolb
jl
jl
sub
pop
cmp
adc
ret
add
int
das
int
dec
or
adc
or
xchg
adc
sbb
ds
pop
push
pop
das
mov
mov
pop
in
leave
jb
enter
cli
clc
inc
lahf
mov
mov
ret
adc
call
lahf
jo
ret
ret
pop
xchg
cmp
aaa
cmpsb
pushf
push
dec
das
mov
adc
or
and
loope
aam
cmp
jo
pushf
loope
daa
sub
jp
hlt
clc
lret
add
in
popf
sarl
cmp
pushf
movsb
push
sarb
mov
sbb
test
add
stos
scas
dec
push
adc
or
jb
lret
xorl
es
aam
add
sbb
mov
out
ljmp
aam
jge
dec
sub
mov
push
jle
sbb
nop
test
adc
push
jo
or
jno
push
and
push
push
and
test
in
mov
xor
inc
hlt
mov
adcb
movsb
mov
jge
sbb
sti
repnz
mov
inc
jnp
xor
mov
xchg
add
aaa
mov
xorl
ret
aam
mov
test
xchg
cwtl
test
inc
ja
test
xchg
inc
xchg
jb
in
mov
out
popf
and
jmp
cmp
inc
roll
arpl
test
sbb
jbe
sub
add
mov
pusha
dec
sbb
and
xlat
jl
dec
jp
fsubl
mov
out
addr16
xchg
popf
cmpb
sub
mov
inc
sbb
mov
inc
xchg
movsb
stos
movsl
fildll
xchg
into
push
out
sbb
lods
or
dec
stc
cmp
cld
cs
iret
js
xor
loope
cmp
mov
or
cld
cmc
cli
pop
inc
cmp
dec
cwtl
outsl
fs
dec
arpl
in
in
or
or
test
test
lds
movsb
jnp
mov
jne
cmp
dec
or
jmp
dec
sub
cmc
and
jl
xchg
subl
iret
xchg
in
inc
mov
in
into
jg
add
roll
mov
pop
nop
inc
add
sbb
mov
call
jmp
mov
popf
stos
adc
xchg
inc
andb
or
xor
fsubrl
popf
int
mov
in
lock
mov
idivb
dec
add
mov
dec
mov
push
cmpsb
in
mov
aaa
xor
adc
imul
mov
pop
je
or
xchg
scas
mov
in
mov
mov
or
sahf
popa
push
push
sahf
sub
adc
repz
fldcw
xchg
push
sbb
mov
nop
push
sti
inc
outsb
or
lret
push
mov
enter
sub
rcr
ljmp
movsb
es
fnstcw
pop
jmp
outsb
lea
xchg
mov
loop
pop
push
add
repnz
lock
cmpb
sub
sub
test
in
loop
imul
fimuls
adc
rcrb
rorb
mov
adcb
nop
pop
mov
or
cli
push
sahf
js
movb
negb
movsb
adc
add
jb
rcll
inc
mov
test
aam
popf
mov
adc
cltd
push
jae
fcomps
or
lret
sti
sub
cld
or
dec
stos
add
dec
les
inc
std
fcomp
xor
and
mov
lret
cs
fdivl
xlat
cmp
cmp
iret
dec
shrb
inc
jae
add
mov
insb
into
jl
xor
out
add
push
jb
repz
sub
fstp
push
sub
inc
iret
mov
cmp
jne
adc
mov
out
xor
out
jg
mov
pop
sbb
loope
test
mov
pop
xchg
push
out
push
push
sarl
sub
int3
loopne
fsubl
shlb
jnp
jo
insl
insb
pop
adc
ret
jne
push
or
or
in
je
pop
loope
loop
sub
mov
lock
fwait
mov
jge
lret
das
cmpsb
ret
movsl
xlat
iret
cltd
mov
xor
fwait
and
fcmovbe
adc
xchg
in
sti
jecxz
lods
inc
loope
movsb
push
inc
imul
or
out
sahf
or
add
adc
repnz
xor
inc
and
ficoml
fmuls
iret
fiadds
pop
pop
repz
ret
call
mov
push
lret
or
push
sub
arpl
and
inc
faddp
stos
and
ss
cmpsl
jne
cmovge
and
daa
clc
iret
ss
mov
mov
fists
sub
push
sbb
jge
push
jno
insb
xchg
xchg
cmp
mov
cmp
push
xor
push
jno,pn
popl
mov
mov
jmp
xor
push
cwtl
imul
repz
shll
leave
fwait
adc
sbb
xor
adc
cmp
das
dec
aas
aad
and
ja
ss
and
pop
aam
add
xchg
or
lret
sub
movb
out
xchg
adc
in
jg
lret
fdivrl
push
cmp
into
aaa
daa
sahf
pop
es
jae
sbb
and
add
xchg
pop
sbb
cmp
or
jnp
cld
mov
pop
int
ja
sub
push
stc
jge
push
hlt
sbb
pop
sbb
sub
or
fildll
dec
xor
aas
inc
and
push
cmpsb
aas
fcoml
inc
iret
inc
insb
jb
jo
add
dec
std
sbb
push
cmpb
mov
mov
stos
push
xorb
mov
and
pop
dec
out
je
pushf
and
mov
dec
jge
icebp
mov
lahf
push
lock
mov
and
dec
mov
fstpl
cmc
stc
or
dec
and
shrb
sub
inc
lahf
imul
ja,pt
int
sbb
test
pop
add
movsl
jbe
jne
loop
mov
cmpl
cmp
clc
or
sub
sar
idivb
out
movl
cmpsl
mov
jle
daa
adc
stos
or
and
mov
popa
and
pop
push
pushf
sub
sbb
insb
xor
jmp
addl
iret
popf
icebp
mov
add
cmp
sub
cmp
cmc
mov
inc
or
ficomps
stos
aad
push
test
dec
mov
movsb
call
outsb
inc
push
repnz
out
jne
test
push
sbb
scas
dec
je
loope
pusha
repz
test
cmp
repz
sbb
push
gs
je
pop
push
movsl
ret
int
cmp
std
xchg
xor
or
inc
mov
add
icebp
insl
mov
mov
movsl
test
pop
inc
sub
cmp
je
sbb
cmpsb
rorl
lea
jo
or
fsubl
movsl
fwait
jns
scas
movsl
loope
inc
xchg
fmulp
or
inc
mov
fs
jl
loopne
negb
stc
add
adc
jl
mov
mov
sbb
sub
mov
xchg
clc
iret
add
or
movsb
in
call
and
xchg
in
add
push
roll
les
adcl
add
sub
in
xor
enter
sti
pop
cmp
mov
cmpsl
aas
add
lods
notl
add
inc
pop
xchg
popf
sub
bound
sbb
sbb
jl
out
aas
jle
pop
cmpsb
dec
nop
xlat
arpl
mov
jns
xchg
enter
or
jb
ret
xchg
int
test
loopne
lcall
enter
cwtl
test
push
xor
fs
daa
inc
xchg
fstp
mov
ljmp
sub
stos
mov
xor
cmp
jmp
nop
add
push
lods
xchg
lock
lcall
mov
cmp
adc
cmp
push
fisttps
adc
xchg
in
nop
pop
cwtl
mov
xchg
dec
jecxz
or
or
push
push
ret
xchg
lcall
insl
into
out
cmp
out
xchg
outsb
cli
cmc
and
sub
sbb
push
call
pop
add
loope
test
jbe
xchg
movsl
insl
pushf
mov
sub
out
jnp
testb
test
int3
xchg
jbe
and
pop
mov
or
mov
rcrl
btc
mov
push
mov
sbb
pop
push
in
and
add
std
jnp
icebp
jmp
sbb
xor
add
dec
lods
mov
xchg
mov
pop
and
sbb
mov
inc
jp
jno
add
adc
les
inc
subl
jp
rcll
inc
inc
movsb
adc
mov
dec
pop
movsb
rclb
push
imul
addr16
std
mov
cmp
gs
and
fcoms
cmp
lods
and
stc
dec
test
test
lods
std
pop
insl
cmp
lock
iret
mov
hlt
enter
adc
inc
stos
mov
test
sub
int
dec
pop
imul
loopne
mov
or
mov
xchg
fldcw
jno
adc
loop
dec
dec
push
pop
stos
sbbb
enter
scas
mov
or
int
sysenter
arpl
dec
shrl
inc
xchg
gs
repz
or
imul
xchg
mov
stos
and
lret
stos
insl
dec
outsb
stos
cwtl
test
dec
cmp
cld
dec
cmpsl
int3
and
jge
out
cli
js
xchg
xor
adc
xlat
pop
mov
lds
push
dec
das
imull
ret
jge
aaa
mulb
js
push
repnz
popf
test
and
std
add
or
or
scas
sti
mov
and
cmp
jle
or
outsl
mov
mov
dec
cmpsl
sbb
iret
clc
ja
dec
fstpl
pop
incl
push
pop
fs
xor
mov
mov
pop
cmp
xchg
gs
jl
add
sbb
pop
or
xchg
mov
popl
add
mov
jmp
push
cmp
mov
xor
sbb
pop
mov
cld
out
outsl
test
lock
jmp
leave
lret
or
pop
dec
xchg
mov
repz
jecxz
daa
daa
fcoms
ljmp
in
iret
adc
js
push
mov
and
shlb
ja
inc
and
sbb
aam
push
cmpsb
popa
in
lods
scas
pop
clc
mov
push
test
add
and
xchg
xor
das
cmp
out
mov
add
adc
mov
sub
mov
mov
xor
dec
xchg
sbb
leave
push
insl
fbstp
lods
and
and
sub
int
aaa
sbb
mov
fadds
pop
jge
neg
cld
int
or
xchg
cmp
xchg
inc
aaa
outsl
xor
sub
into
repz
outsl
dec
mov
lcall
pushf
or
mov
cmp
hlt
rcrl
repnz
pop
fdivl
mov
js
inc
push
lods
sub
cltd
popf
pop
loopne
sbb
cli
jmp
scas
push
fldl
outsl
jl
dec
mov
addr16
pop
dec
enter
xor
mov
adc
out
fwait
mov
repz
mov
mov
fsts
mov
or
dec
push
push
out
mov
popa
negb
mov
or
jecxz
jnp
or
addr16
cld
pop
movsl
and
cwtl
fimuls
sahf
sub
push
and
cmp
cltd
cwtl
dec
loop
sbb
fs
popf
sub
decb
push
cwtl
add
pop
fstp
loope
pop
js
mov
jne
fs
iret
imul
push
outsl
cmpsl
sub
lds
enter
subb
push
mov
pop
add
fdivrl
jae
dec
dec
push
add
fincstp
mov
sbb
dec
jmp
or
or
pop
inc
int3
xor
jl
mov
shl
sub
sar
mul
cmc
sbb
jle
jns
push
call
popf
lret
adc
xchg
inc
push
mov
lods
repnz
out
cld
xchg
dec
aam
stc
cmpsl
xor
push
adc
mov
xchg
push
push
loop
es
inc
mov
out
add
cmp
movsl
test
fwait
aam
jbe
fistpll
incb
mov
sbb
repnz
adc
add
out
mov
lcall
lods
lret
push
lret
nop
jg
jno
das
outsl
mov
add
addr16
aas
jge
sahf
inc
lea
xchg
jp
sbb
fstl
outsb
inc
loope
xor
imul
aam
dec
in
pop
repnz
loope
repz
and
lock
pushf
or
inc
les
js
cmpsl
xor
js
stos
dec
pop
mov
sbb
pop
push
mov
and
div
insb
stos
and
mov
or
out
in
leave
dec
mov
cltd
lds
dec
mov
into
nop
fcoms
js
mov
test
ret
jg
ja
pop
cmc
insb
jmp
jb
or
sbb
adc
iret
rol
repnz
mov
shll
jo
dec
test
adc
mov
ss
and
sbb
pop
cwtl
fsubrs
mov
mov
repz
sti
or
mov
pop
fisubl
sbb
jge
push
nop
cmp
shll
movntps
jae
test
push
aas
and
jbe
aaa
dec
sub
xor
loop
movsb
dec
outsb
jge
cmpsl
mov
fptan
fsubs
movsb
pop
loope
jb
jle
cltd
divl
mov
sbb
jg
add
sbb
sarl
jo
dec
or
xchg
addr16
pop
lahf
mov
fbstp
and
and
fisubrs
pop
rcll
dec
popa
pop
jnp
jno
sbb
mov
sti
stos
nop
cli
dec
popl
leave
jns
cld
nop
sarl
mov
mov
test
mov
out
outsl
adc
fisubs
fwait
mov
pusha
adc
xchg
movsl
or
adc
enter
lret
mov
push
dec
add
nop
mov
and
jo
or
add
fstpl
jne
notl
movsl
or
pop
hlt
pop
dec
add
adcb
imul
sti
adc
pop
iret
xchg
sub
outsl
sub
xor
cmpsb
dec
xchg
loop
sbb
in
cmp
or
out
and
push
xorb
xor
pop
mov
xor
pusha
pusha
pusha
push
fwait
stc
into
dec
movsl
jp
test
inc
mov
out
xchg
xchg
test
sbb
mov
into
outsb
out
push
fisttps
insb
je
pop
sub
lds
fisttps
fnstenv
lahf
sub
adc
cmp
xchg
jmp
test
shlb
cmp
test
out
mov
pop
cmpsb
or
out
subl
iret
sbb
xlat
dec
notb
icebp
xor
imul
mov
icebp
or
dec
incl
adc
add
and
test
ds
ret
jne
adc
jb
mov
mov
lods
lds
fistps
push
sbb
les
fidivl
cwtl
test
gs
mov
push
xor
xor
push
bnd
inc
aaa
std
sbb
push
push
add
mov
inc
xor
imul
lock
fcmovnbe
and
adc
ret
cmp
inc
jb
jg
shrl
cmpsb
sub
mov
je
hlt
les
inc
mov
push
ror
scas
push
adc
pop
sub
lret
fldl
jmp
ror
stos
mov
jmp
mov
xor
push
cwtl
jne
push
insl
pushl
imul
mov
inc
outsb
inc
xlat
mov
lock
inc
call
es
pop
stc
xor
imul
test
add
cli
movsl
ljmp
cwtl
mov
test
xor
and
pop
cs
xor
cmc
inc
adc
lret
cld
sbb
lods
jb
icebp
es
mov
sub
aad
xchg
movsb
pop
sub
int3
sbb
xor
out
push
lret
xor
jae
push
dec
mov
inc
clc
test
jae
mov
loop
adc
mov
sbb
mov
sub
int3
xchg
sahf
mov
xchg
or
adc
gs
or
pop
xchg
adc
sub
arpl
cmp
dec
adc
jg
pop
das
adc
mov
or
cwtl
add
iret
push
push
push
in
sub
inc
and
rcr
jo
test
sti
cmp
or
pop
mov
sbb
dec
popa
adc
repnz
cld
xchg
sbb
movsb
jg
and
rclb
add
ret
xorb
arpl
cmp
lahf
mov
xlat
lods
sbb
jmp
pop
cmp
mov
lahf
mov
outsl
and
cmpsl
dec
jns
pop
sub
add
jle
and
cs
jg
lahf
xor
or
es
pop
jl
sahf
cmpsl
xchg
jnp
inc
fidivl
jns
or
test
frstpm(287
mov
lret
jno
mov
cmp
mov
fdivrl
xchg
jbe
cmpsb
mov
imul
bnd
fs
xchg
jecxz
das
mov
icebp
adc
add
jecxz
outsb
fimull
sar
sbbb
js
jmp
ds
test
sbb
aas
scas
shll
cmpsl
sarb
inc
ja
sbb
cmp
push
dec
mov
test
xor
push
mov
lahf
xor
xchg
loop
nop
lods
inc
test
and
sub
push
hlt
inc
ds
fisttpl
xor
push
inc
or
sub
outsb
mov
cmp
sub
lods
adc
xor
mov
std
mov
lret
jns
bound
cmpsl
into
push
lret
sub
xchg
insl
call
cmp
pop
mov
clc
adc
popf
push
mov
int
mov
daa
jns
jne
lret
mov
frstor
inc
pop
mov
rclb
ror
rorb
je
mulb
pop
outsl
xor
fcompl
pop
lret
repnz
xlat
adcb
lods
jg
js
cmp
mov
inc
or
push
shlb
sahf
push
pop
inc
shll
les
jg
cmp
mov
and
xor
jmp
xchg
pop
pop
sar
push
cmpsb
mov
sub
data16
and
icebp
push
and
add
xchg
outsl
cmc
or
lahf
mov
add
stc
adc
insb
pushf
xchg
ljmp
dec
out
pop
fbstp
cmp
push
and
shl
push
in
cmp
mov
not
loope
in
jnp
test
cmc
pop
cmp
jne
pop
je
dec
test
dec
pusha
fidivrs
sub
xchg
test
adc
jbe
insl
cmpsl
xchg
sub
lds
add
pop
jg
jp
movsl
cmp
lahf
cld
push
pop
pushf
lds
filds
adc
jmp
pop
fidivrs
fbstp
pop
xchg
dec
outsl
sti
mov
jbe
and
in
mov
adc
mov
stos
fistpl
mov
es
or
je
mov
fsubr
pop
dec
sahf
adc
xor
xchg
fstps
nopl
cmp
lret
xor
lods
nop
or
xchg
mov
popl
stc
and
jle
les
int
xor
lahf
add
and
or
inc
movsl
mov
and
dec
rorl
cmp
mov
inc
andl
add
popf
insb
fldenv
pusha
mov
or
dec
xchg
xchg
jne
test
rorl
and
mov
xor
pop
arpl
out
pop
inc
dec
ffreep
xchg
idivb
loop
pop
push
xchg
and
pop
adc
jl
ret
fwait
int
add
xor
lock
scas
and
xchg
fstpt
and
cwtl
enter
inc
test
fcom
stos
sbb
adc
sbbl
xor
into
mov
cmp
pop
jns
movsb
or
mov
data16
aas
jge
cmp
enter
adc
inc
ret
lods
lcall
pop
cmpsb
xchg
xlat
aaa
and
lock
and
push
sub
fbld
fs
mov
decb
mov
add
enter
in
or
aam
xchg
xchg
jge
jg
movsl
out
cs
arpl
jg
mov
int3
fists
sub
mov
cli
out
sub
mov
cli
adc
adc
or
lods
loope
inc
and
int
js
daa
mov
lock
mov
xor
mov
mov
xor
imulb
push
jmp
outsb
inc
adc
mov
jl
xor
arpl
mov
xlat
or
dec
in
movsl
or
leave
into
mov
outsb
adc
in
pusha
shll
aam
insl
mov
jne
add
push
pop
sub
jb
ja
fadd
inc
out
dec
icebp
sub
xchg
jmp
push
inc
adc
rolb
jg
rclb
or
cmp
rcr
shll
pop
or
loop
jmp
cmp
lea
or
xorb
pop
imul
lahf
xchg
ficompl
inc
adc
xor
andl
cmp
cld
xchg
mov
cs
push
stc
adc
push
pusha
xor
adc
add
xor
jl
imull
pop
int3
stc
loop
pop
es
gs
sub
jmp
gs
pop
jnp
push
pop
mov
adc
jmp
std
xchg
adc
lods
fs
scas
stos
popa
lahf
push
pusha
jns
clc
adc
ret
or
lds
and
or
imul
adc
jns
stc
popf
pop
ss
mov
cld
mov
out
addr16
mov
push
shrl
pop
sub
push
sbbb
cmp
inc
jge
shr
mov
xor
xchg
inc
adc
addr16
pushl
ja
aas
cld
mov
cld
cmp
cmc
das
inc
scas
es
test
inc
ja
adc
xchg
push
add
sti
add
pop
subb
push
xor
int
dec
popa
dec
stos
inc
iret
arpl
out
stos
jmp
mov
ja
fnstcw
ja
lock
adc
push
lock
cltd
xchg
mov
in
call
mov
pushf
divb
pop
xor
dec
pushf
mov
mov
jle
cmp
and
push
into
jecxz
push
repz
enter
repz
fisubrl
xor
addr16
in
bound
push
mov
dec
dec
pop
fdivrl
rcr
test
in
cwtl
pop
imul
dec
or
mov
ret
testb
pop
outsb
and
aam
xchg
xor
fdivrs
cmp
pop
inc
fsubs
pushf
inc
push
mov
fs
pop
out
in
int
mov
outsl
sub
and
jno
mov
jge
clc
jno
ss
inc
test
jae
lahf
testl
aaa
push
mov
inc
pop
or
or
or
mov
mov
pop
push
add
push
add
mov
pop
push
neg
fildl
add
cmp
test
mov
nop
jbe
addl
notb
xchg
daa
cmp
sbbl
ret
clc
sub
mov
in
scas
add
jbe
mov
add
ror
ret
push
scas
pop
call
repz
mov
push
pop
and
xchg
movsl
cwtl
cmp
dec
adc
pop
add
add
xchg
sub
lods
shll
clc
sbb
int3
pushf
pop
loop
lcall
aas
and
or
dec
call
and
cli
cmpsb
jg
xor
dec
ljmp
dec
push
cld
xchg
push
ds
xchg
push
fidivrs
pop
sbb
ss
rclb
in
pop
jbe
sbb
fiaddl
ja
cmp
cmp
xchg
inc
cmp
shll
into
stos
or
test
loope
lret
dec
out
mov
out
xchg
ljmp
or
lret
sub
cmc
lods
nop
cmp
ret
dec
xchg
out
sub
mov
int
lret
cli
jne
test
mov
popf
jns
sbb
sbb
pushf
sbb
and
mov
int3
in
test
sbb
outsl
test
rcll
out
test
leave
jle
addb
addr16
adc
pop
ret
cmp
xchg
test
mov
and
lea
fsubl
adc
or
jle
lock
lds
jecxz
cmc
add
add
cwtl
in
mov
iret
ret
jl
les
mov
scas
push
rolb
inc
aad
sbb
jbe
int
pop
xchg
inc
rcl
icebp
cmp
in
xchg
les
sbb
adc
sbb
cmpsb
cmpsl
pop
setge
xchg
insl
add
ss
pop
xchg
loope
push
mov
cmpsb
fmul
mov
aad
cmp
sub
inc
mov
test
daa
outsb
sub
xor
dec
ret
enter
sti
push
mov
xchg
rolb
push
jmp
test
shl
outsl
mov
sar
lea
jne
xchg
xchg
sbb
sub
adc
call
xchg
adc
out
out
call
add
mov
push
popf
xor
mov
js
into
repz
dec
ret
mov
xchg
mov
fildll
sbb
cld
mov
jno
mov
lahf
int
enter
out
push
xchg
add
push
test
or
xchg
loopne
add
sbb
out
mov
cmp
dec
jmp
xlat
lods
shrb
sbb
fistpl
sbb
insb
movsl
mov
mov
sarl
sti
lahf
filds
mov
jne
inc
sbb
pop
inc
xchg
inc
lea
xchg
and
push
push
mov
inc
mov
xchg
xchg
cmpsb
imul
and
inc
into
ljmp
fists
lock
sbb
lock
daa
jmp
xchg
mov
je
loope
mov
push
insl
sti
in
pop
out
adc
or
mov
ficompl
lock
dec
and
push
xchg
insl
stos
mov
mov
fs
js
inc
fsubrl
les
ja
dec
lcall
jmp
leave
sbb
dec
add
cmp
push
push
xchg
add
jle
add
mov
fidivs
sti
cmp
sarb
jl
fdivrl
inc
mov
fidivl
movsb
sbb
daa
orb
clc
test
dec
sub
inc
adc
xlat
lret
bound
mov
cmp
xor
mov
into
std
cmc
inc
pop
push
xchg
push
xchg
mov
jecxz
add
mov
jae
movsl
or
sub
xor
jbe
or
je
imul
xor
notl
push
lods
jmp
mov
xorb
sbb
mov
xlat
shrb
xor
xor
mov
adc
pop
pop
pop
sbb
jmp
cmp
mov
adc
dec
pop
push
arpl
out
cmp
sbb
nop
int
jne
std
loope
pop
cmpsb
leave
push
mov
xchg
shrb
pushf
pop
cmpsb
xor
push
mov
iret
mov
mov
pushf
push
enter
lahf
adc
cs
and
repnz
mov
shl
outsb
cltd
or
add
int3
mov
add
leave
xor
fmuls
movsb
push
inc
sbb
test
icebp
inc
jl
out
or
jmp
out
mov
xorl
lds
stos
sub
out
ret
mov
mov
lods
jg
popf
roll
fwait
aad
pop
imulb
mov
loop
xor
movsb
and
repz
xchg
xchg
sub
jge
pop
bound
rcr
ret
lret
dec
idivb
test
jg
sbb
ret
xor
mov
iret
test
mov
push
cmp
icebp
hlt
push
mov
cmp
mov
clc
test
sub
cmp
pusha
jae
jl
xchg
add
push
mov
xchg
pop
inc
pop
adc
mov
or
test
xchg
inc
in
ds
fsubrs
adc
imul
adc
jmp
nop
add
sbb
push
sub
cmpsb
in
fistpl
iret
mov
popa
int
testl
xor
daa
ja
jg
daa
mov
divl
sub
iret
or
cmpsb
lock
bswap
mul
fistl
adc
and
mov
dec
ds
icebp
cmp
aad
lret
cltd
mov
dec
jno
sbb
icebp
aad
adc
loope
nop
cmp
std
ret
jne
out
sbb
jo
ja
or
ljmp
mov
mov
dec
sub
sbb
xor
or
cmp
mov
test
xchg
hlt
xchg
pop
jge
jo
mov
xor
aas
and
bound
adc
stc
dec
pop
movsb
in
addr16
shlb
mov
mov
arpl
popa
mov
imul
clc
jmp
lahf
loop
call
jae
jle
pushf
mov
xor
pop
push
and
jae
leave
fnstsw
or
js
pop
sub
pushf
mov
ss
pusha
das
mov
divl
add
push
dec
sbb
mov
dec
push
cwtl
inc
lock
ret
ss
shll
add
nop
lea
sarl
inc
and
in
gs
add
je
jne
dec
data16
jno
mov
dec
adc
fisttpll
jno
jg
dec
cwtl
jecxz
imul
xchg
pop
fcomps
or
mov
sti
fimull
stos
arpl
dec
arpl
lret
push
imul
xchg
mull
mov
xchg
mov
dec
pop
movsl
or
mov
adc
mov
jns
cmp
pop
cmp
adc
cmp
psrlq
adc
repnz
xchg
fs
popa
add
icebp
pop
imul
nop
loope
mov
js
dec
aad
mov
fisttps
xor
or
push
jne
xchg
cmp
out
jnp
sub
lea
fmull
add
and
adc
push
lods
ljmp
push
daa
sub
cmp
clc
xchg
or
dec
inc
aaa
xchg
insb
xor
stos
call
push
or
outsl
stc
out
fistpll
and
dec
das
out
mov
jl
mov
adc
lock
cwtl
addl
dec
jne
adc
and
sub
inc
add
mov
icebp
add
mov
in
xchg
jge
and
inc
or
add
outsb
fadds
jb
clc
test
pop
lret
shl
cmp
lret
or
gs
add
loope
inc
dec
scas
aaa
lret
in
push
push
mov
mov
pop
pop
push
mov
jno
lock
push
dec
shl
inc
dec
aaa
ret
mov
sub
cmp
addb
xchg
inc
jbe
mov
fidivrl
loop
mov
add
adc
ret
ss
dec
inc
pop
test
lock
rclb
xor
scas
test
sbb
xor
ja
mov
jbe
je
push
xchg
cli
loopne
repnz
push
icebp
stos
loopne
lahf
jnp
outsb
cmpsl
leave
stos
mov
andnps
iret
adc
daa
inc
mov
adc
adc
sarb
lcall
pop
out
jb
jo
sbb
push
mov
push
and
imulb
rcll
fiaddl
out
mov
iret
subps
or
lret
in
inc
inc
test
outsl
xchg
pop
out
or
cmp
mov
out
lock
popf
push
data16
sub
das
in
icebp
addr16
jo
mov
lea
ss
enter
pop
dec
mov
js
cmpsl
pop
mov
push
ljmp
fdiv
mov
pop
ret
cld
adc
icebp
inc
outsb
adc
rcrl
inc
stos
je
lock
or
pop
das
push
iret
mov
inc
xchg
test
std
xchg
call
cli
orl
in
sbb
pop
pop
cs
adc
mov
add
shll
enter
mov
lret
push
xchg
mov
cmp
enter
xchg
jns,pn
sub
lods
std
imul
movsl
mov
xor
scas
js
outsb
jge
sub
int
mov
je
xor
pop
jge
mov
imul
cmpsl
out
iret
ret
loopne
cmc
ljmp
mov
mov
outsl
adc
imul
xchg
leave
rclb
sbb
and
movsl
and
jbe
repz
add
mov
call
movsb
jo
jo
pop
or
inc
mov
hlt
popa
pushf
jns
pop
dec
fnstsw
push
mov
push
cs
lods
imul
xchg
sub
mov
xor
rcl
mov
imul
mov
jnp
rep
in
dec
out
enter
push
movsb
pop
or
pop
dec
mov
rolb
das
int3
dec
adc
push
lret
add
cltd
loop
and
or
mov
cld
mov
cld
fadds
pop
jg
idivb
sub
adc
mov
out
inc
cmpsl
imull
mov
test
jb
adcb
notb
fidivrl
cmp
adc
stc
xchg
jns
inc
lods
mov
sub
push
fwait
cli
shl
das
sti
mov
fistl
loopw
dec
orl
push
aas
aad
fs
xor
push
nop
push
mov
pop
inc
jg
push
sub
popa
jecxz
cmp
cmp
lea
sub
loope
fmul
stos
fwait
mov
bound
pop
mov
test
cmp
call
sbb
xchg
sub
outsb
pop
push
in
jge
nop
push
ds
cmc
popf
adc
add
clts
cld
xor
lods
sub
push
test
jg
lea
mov
mov
dec
out
and
add
clc
cmp
loopne
loop
push
dec
and
inc
out
dec
xor
loop
dec
xor
les
push
cmp
adc
and
call
lahf
mov
pusha
test
out
adc
cmp
cmp
jbe
std
shr
ljmp
lahf
mov
std
in
popa
adc
fnstenv
pop
or
sbb
sub
sbb
xchg
add
inc
out
mov
pop
add
fdivrs
pop
sbb
sbb
xorl
lahf
dec
mov
ds
stos
mov
inc
out
adc
mov
aaa
add
movsl
cld
mov
push
cmp
pop
add
outsb
mov
sbb
mov
push
sbb
inc
adc
cmp
inc
stos
movsl
jp
mov
jns
mov
fcoms
fdivrs
fisubrs
popa
repz
std
add
testl
jbe
cwtl
outsl
sbb
mov
je
cmp
push
outsl
jae
jge
xchg
fistps
cmpsl
and
push
imul
push
push
mov
lret
stc
popf
cmp
aaa
jnp
daa
and
add
out
mov
pop
inc
xor
push
data16
out
int3
js
jge
mov
jno
cmp
jae
pushl
xor
into
pop
outsb
sub
sbbl
stos
arpl
mov
rcrb
xor
testl
xchg
xchg
xlat
and
or
inc
jle
cmp
insb
test
sbbb
ja
sub
push
pop
xchg
xchg
adc
adc
push
dec
loop
or
lods
test
rcl
loopne
aam
inc
jne
mov
mov
dec
rep
xchg
stc
jo
lock
lret
jle
sbb
push
repnz
jae
iret
shr
xlat
inc
xlat
les
pushf
and
sub
add
enter
pop
push
jns
lret
jg
outsl
jmp
and
add
data16
mov
daa
insb
orl
and
jmp
in
fadds
dec
lret
mov
lods
divb
in
jle
inc
jae
stos
pusha
insl
pop
sar
or
stos
arpl
jge
inc
pop
das
test
cmp
mov
shlb
xchg
xchg
test
out
and
ljmp
insl
xor
cmp
mov
mov
sar
insb
cmp
mov
jg
mov
cmpb
jbe
std
adc
add
pop
or
cli
arpl
test
add
test
and
fdivs
sbbb
test
test
inc
xor
sub
sub
xchg
pop
xor
jle
jge
mov
sub
cmp
sub
sbb
xlat
dec
or
fdivl
sub
jns
std
aad
jne
inc
push
inc
xchg
cmp
xorl
sub
mov
jl
adc
lock
mov
or
gs
out
pop
inc
std
cmp
aaa
out
fnsave
popa
push
inc
cld
mov
or
mov
and
out
cld
cltd
add
les
sahf
sub
adc
and
push
hlt
fidivs
jle
shrl
adc
lea
mov
pop
shrl
xchg
shrb
cmc
or
push
pop
out
lds
test
popf
lret
lret
fsin
arpl
bound
cmp
or
adc
mov
mov
js
push
jb
xchg
enter
pushf
sarl
and
pop
insl
xor
cmp
into
mov
mov
test
es
outsl
push
arpl
push
aad
hlt
iret
mov
data16
in
movsb
sub
insl
fwait
test
ljmp
inc
hlt
mov
repz
jg
iret
add
lea
adc
pop
outsl
arpl
sbb
rolb
ret
imul
xchg
out
repz
test
pop
mov
je
inc
outsb
lahf
addr16
xor
add
nop
jmp
mov
adc
insb
mul
adc
push
mov
inc
pusha
rcrb
loop
mov
es
test
aad
in
movsb
cwtl
stos
jecxz
sbb
pop
adc
or
leave
sub
jnp
fildl
sahf
sbb
xor
stc
cmpb
mov
dec
lods
cmp
decl
pop
push
mov
sahf
lock
jno
push
xchg
adc
cmp
cmc
aad
mov
scas
in
jae
pop
cmp
clc
std
cmp
stos
push
sbb
jno
mov
push
fisubs
enter
cmp
mull
dec
sbb
add
push
mov
je
mov
add
fsubrl
jp
test
ja
adc
cs
pop
or
sbb
cltd
mov
pop
in
pushf
mov
cmp
ret
and
inc
and
add
and
pop
mov
inc
jge
repnz
jmp
lods
pop
xchg
icebp
aad
pop
neg
dec
push
xchg
jl
dec
and
xchg
out
data16
movntps
pop
sbb
mov
add
out
sub
movsl
dec
xor
in
pushl
loope
mov
mov
cmc
or
xchg
fadds
push
inc
sub
dec
jbe
inc
adc
mov
add
fldcw
push
lods
outsb
cwtl
xor
loop
mov
inc
jno
pop
add
orb
cmp
xchg
xchg
in
ror
xchg
or
inc
test
jmp
sub
add
jns
xchg
gs
scas
int
add
call
push
shrb
mov
stos
rclb
ret
lcall
iret
mov
cmp
insb
mov
jae
ret
pop
out
bound
mov
and
pop
mov
mov
cmp
je
lahf
inc
or
loopne
cmp
inc
mov
xchg
adc
mov
scas
cwtl
imul
cmp
cmp
subb
fdivl
fnstcw
sub
adc
faddl
inc
xor
stos
in
xchg
arpl
popa
xlat
repnz
inc
push
jb
das
repz
pushf
dec
sbb
sti
scas
mov
xchg
xor
push
imul
inc
mov
test
icebp
and
sub
or
in
sub
and
stos
dec
pop
daa
out
mov
push
dec
stos
out
jmp
pop
jnp
loop
mov
insl
sbb
mov
sub
push
mov
enter
or
lcall
sbb
cmp
pop
imul
hlt
and
cwtl
test
outsb
xor
pop
aad
xchg
lock
xchg
negl
adc
jg
push
mov
cld
jne
fiaddl
ss
add
inc
sarl
stos
add
push
pop
mov
add
imul
fwait
out
or
mov
test
arpl
loope
outsl
push
adc
loope
fbstp
enter
pinsrw
neg
cmovbe
sbbl
lea
xchg
xchg
repnz
push
mov
icebp
notl
cli
js
jno
stc
xchg
outsb
mov
out
lock
mov
out
mov
jno
mov
repz
ja
push
orb
push
enter
out
adc
xchg
dec
out
xchg
pusha
in
mov
push
stc
loop
add
iret
ja
enter
data16
or
mov
mov
popf
fucomp
push
fs
adc
fisttps
int3
inc
dec
mov
ret
adc
sbb
cmp
lds
or
cmpl
pushf
xor
mov
mov
pushf
cmp
and
fldcw
out
or
inc
push
jge
fcomip
das
std
sti
pop
pop
mov
movb
push
pusha
dec
dec
arpl
xchg
push
lock
cwtl
xor
xchg
scas
movsl
inc
dec
xchg
loopne
inc
mov
pop
imulb
stos
adc
cmpsb
push
inc
sbb
into
adc
or
mov
adc
and
dec
and
cwtl
icebp
mov
inc
or
outsl
pop
cmp
jge
pushf
lea
xchg
mov
lods
cli
or
fwait
lret
inc
nop
dec
sub
out
fcomi
lcall
sub
shrb
clc
aad
dec
shlb
push
dec
xlat
inc
sbb
adc
push
jecxz
mov
cmpsl
pop
movsl
inc
gs
and
loopne
imul
cmc
xchg
lcall
pop
jp
inc
pop
pop
push
pop
test
sbb
or
mov
xchg
sub
adc
jp
mov
inc
ret
sarl
data16
testl
or
into
sbb
lods
xchg
jnp
jg
fdivrs
mov
and
addr16
push
mov
ret
arpl
daa
jb
shlb
or
gs
in
fbld
sahf
arpl
adc
insl
rorl
mov
sub
mov
fbld
inc
or
xchg
jb
cmp
or
and
mov
scas
or
jae
dec
cltd
inc
mov
jle
inc
in
pop
mov
ljmp
add
xchg
dec
jns
shlb
jmp
fs
dec
test
addb
xor
inc
testl
push
aas
stc
les
test
fcmovnb
js
daa
inc
xchg
cli
mov
fildl
mov
jbe
ja
inc
jo
inc
add
insb
jb
dec
mov
cmpsb
orl
lock
adc
les
orb
out
js
outsl
dec
lea
shlb
inc
pop
lret
sbb
sub
jl
incb
xchg
mov
popl
cmpsl
shll
lret
aas
xchg
into
daa
cltd
int3
in
dec
fisttpl
pop
jnp
shll
jecxz
sahf
andl
enter
xchg
xchg
pop
fisubrs
pusha
inc
pop
pop
mov
stc
mov
sub
or
push
dec
mov
in
shlb
fbld
push
mov
pop
clc
in
jnp
mov
popf
inc
push
aas
xchg
inc
push
aaa
xor
push
fistpl
mov
cmp
or
push
pop
cld
data16
ret
sbb
stos
int3
jno
cli
sysexit
cli
sub
jo
test
jge
in
xchg
aam
imul
scas
int3
xlat
out
and
or
lods
mov
leave
test
bswap
lahf
sub
jne
test
xor
add
out
cmp
test
popf
or
ficoml
insl
adc
lret
adc
push
cmp
jae
xlat
popf
mov
lds
dec
dec
fcoms
mov
outsl
rorb
mull
jmp
dec
pop
sti
mov
aad
or
or
dec
iret
insb
adc
movsl
mov
xchg
loop
xchg
daa
loope
bnd
sbb
pushf
or
out
cmpsb
jae
mov
cmp
push
sbb
mov
dec
fnstenv
shrb
mov
cltd
ds
gs
xor
andl
mov
lahf
mov
mov
movsb
imul
or
pushw
mov
loopne
sub
scas
sub
ret
lea
jne
mov
push
dec
inc
xchg
inc
add
bound
mov
mov
push
add
mov
push
ret
lods
scas
les
fistps
mov
cltd
cmp
outsl
xchg
loop
insb
pop
adc
pop
sbb
add
ffreep
ret
out
jle
bound
sbbb
pop
stc
fwait
sti
popf
cwtl
movsl
js
leave
les
cmp
fnstenv
adc
push
ja
push
push
into
cmpsb
mov
test
adc
ss
xchg
sub
ret
mov
push
xor
pop
addr16
xchg
popa
jmp
adc
adc
xchg
in
jns
dec
pop
add
out
dec
bound
pop
test
jmp
andb
mov
ss
inc
je
iret
push
mov
pop
sahf
cmp
lahf
popa
adc
sbb
cld
sub
leave
mov
mov
push
jl
lret
add
sarb
dec
cmpl
push
ja
popf
sarl
jg
sub
dec
cmp
pop
sbbl
push
fwait
mov
cmp
pop
xor
xorl
ret
or
adc
sbb
jb
lds
sub
dec
cmc
inc
jg
movsb
sbb
xchg
popa
lret
and
js
adc
pop
cmp
xchg
mov
fwait
scas
or
mov
mov
mov
and
fists
sub
xor
sbb
sbb
lahf
ficoms
pop
push
es
imul
dec
xor
fdivr
sub
jl
stc
sub
adc
cltd
loopne
stos
pop
add
cmp
jno
lea
out
add
mov
aaa
repnz
mov
test
cli
jns
xchg
inc
push
movsb
xor
loopne
adc
mov
ret
push
xchg
repnz
add
cli
fldt
movsl
or
add
and
into
icebp
sbb
xchg
jmp
ljmp
aaa
xor
xor
dec
push
daa
mov
lea
push
icebp
cli
outsb
bound
sub
add
lds
sbb
jb
pop
or
dec
xchg
mov
lret
and
jno
push
insl
shll
shlb
int3
push
mov
xchg
mov
aad
aaa
push
pop
mov
cltd
inc
lahf
ret
std
pop
sbbl
imul
outsb
stos
mov
pop
dec
daa
push
and
adc
sub
fwait
sbb
scas
mov
out
into
push
stc
mov
lea
push
std
jbe
xchg
xor
dec
mov
pop
sub
push
pop
jne
jmp
dec
sbb
cmp
lock
and
nop
test
das
inc
push
sub
dec
adc
mov
jle
add
lods
imul
pop
mov
aam
xchg
add
mov
fmuls
mov
lods
add
adc
add
sbb
loope
jge
cmc
ljmp
mov
xor
stc
fsubrp
inc
pusha
pop
call
addr16
fwait
add
pop
xchg
mov
xchg
bound
xchg
cmpsb
dec
shlb
jnp
je
popa
hlt
cld
rcr
das
adc
sbb
and
fwait
push
and
lret
xchg
dec
jnp
lcall
xchg
test
push
test
push
stos
xchg
int
mov
adc
movsl
fisttpll
popa
sub
mov
push
inc
push
out
loop
daa
test
les
inc
xor
jnp
mov
or
aas
pop
out
out
ds
dec
sub
sbb
data16
iret
stos
pop
sahf
jg
xor
repnz
mov
mov
shll
mov
and
push
and
dec
dec
or
data16
jnp
icebp
aas
imul
rcll
out
mov
imul
subl
lahf
push
inc
popw
outsb
jp
xchg
movsl
pop
mov
gs
jae
fisubrs
inc
cmc
push
into
in
xchg
test
stos
dec
les
adc
dec
adc
mov
hlt
or
or
jno
pop
push
mov
or
xor
enter
add
int
xor
sub
dec
push
cmpsl
push
mov
cmpsb
adc
fwait
inc
ret
pushf
aaa
pop
jo
inc
mov
xchg
fistl
fwait
and
xor
cmc
aaa
adc
pop
fs
mov
div
mov
scas
cmp
fmuls
dec
imul
ficomps
mov
dec
sahf
jmp
jb
sbb
mov
pop
sub
pop
push
mov
fildl
pop
test
js
dec
adc
mov
icebp
dec
dec
insl
xor
push
push
inc
call
sub
imul
mov
rorb
scas
stos
cmp
mov
repz
int
pop
insl
push
jmp
pop
mull
lods
jnp
xchg
outsl
mov
clc
mov
imul
test
mov
add
and
addb
adc
cmp
push
sbb
loop
mov
or
inc
mov
fisubrl
add
lods
int3
movb
dec
xorl
inc
mov
cli
cmp
jmp
mov
insb
xor
xchg
psllw
pop
mov
out
call
out
repz
xor
cmc
xor
and
mov
xchg
pop
add
icebp
fcoms
cmp
orl
mov
fstpt
int3
mov
push
mov
int
dec
in
jl
stos
popf
icebp
xor
loop
push
enter
jnp
repnz
inc
xor
popf
inc
aaa
es
jl
xor
rorl
lret
fsubrl
mov
subb
mov
ret
pop
test
jns
add
mov
jge
xor
adc
scas
push
scas
testb
and
sub
inc
inc
pusha
rcl
pop
cmp
xchg
pop
cs
scas
jns
inc
dec
xchg
xor
lcall
push
dec
fnsave
jp
or
push
lcall
jo
fistpl
test
lods
stc
push
jl
fidivs
add
add
pop
lds
pusha
cmpsl
adcb
xchg
ret
pop
setl
repnz
out
ret
pusha
stc
iret
lahf
xchg
jmp
cmc
jns
mov
lret
rol
dec
jne
mov
push
push
cmc
out
imul
or
pushf
cld
dec
xchg
aad
stos
add
pop
and
je
cmpsb
push
jecxz
jecxz
adc
les
loopne
rorb
mov
testl
push
xor
ret
jecxz
mull
pushf
and
xor
and
push
dec
mov
movsl
inc
cltd
add
sub
pop
xchg
test
cli
and
mov
insb
stos
dec
adcb
sub
dec
mov
inc
mov
cmp
inc
push
xor
or
adc
xor
fsubr
sub
or
cltd
shr
mov
ret
lcall
lcall
push
sub
xchg
lea
inc
pushf
sbb
mov
jecxz
xor
push
xchg
dec
aam
inc
inc
xorb
aaa
movb
adc
pop
mov
mov
mov
repz
fmull
rcl
jne
sti
inc
lea
dec
jno
cltd
cmp
mov
mov
mov
fimuls
xchg
adc
negb
dec
adc
pop
in
and
mov
jb
in
in
or
loop
in
mov
adc
fidivl
orl
adc
push
and
stc
push
shll
rcrl
imul
scas
sbb
lds
jno
mov
xor
cmpsb
jnp
loopne
outsb
es
lcall
scas
pop
xchg
xchg
sti
shlb
jae
pop
pop
push
mov
popf
in
imul
push
into
mov
inc
or
adc
cltd
and
jge
cli
out
cmpsl
cmp
pop
js
xchg
ss
pop
stc
xchg
test
mov
aad
mov
jmp
pop
loope
out
nop
xrelease
jge
test
push
inc
call
inc
cmpsb
stos
jp
push
test
jp
ljmp
push
loop
adc
add
jge
std
repnz
pop
out
orl
ja
rclb
or
jb
jge
sub
lret
add
xchg
in
adc
xchg
testl
inc
xchg
xchg
jp
ret
push
xchg
xchg
hlt
fldt
jp
popa
fcoml
lret
popf
jae
pop
inc
jnp
test
mov
in
mov
xor
imul
jl
adc
adc
ds
push
out
or
dec
out
lock
fistl
mov
xchg
arpl
mov
sub
shrl
pop
repnz
inc
divb
mov
ss
mov
pop
dec
cs
js
or
inc
and
xchg
and
mov
adc
inc
mov
repnz
xchg
inc
out
movsb
test
cwtl
ret
lret
pop
mov
icebp
fsubr
and
mov
cmp
leave
mov
stc
xchg
outsb
ss
lret
cli
sub
std
popw
adc
pop
jg
jl
scas
mov
js
idivb
testb
and
xor
ljmp
add
xor
mov
imul
lea
cmp
shrl
dec
jne
lds
cwtl
and
sub
jb
lods
pop
loopne
vunpckhps
ret
jmp
fcomps
shll
xor
mov
jecxz
sbb
mov
imul
mov
rorb
xchg
lret
mov
je
loopne
dec
cmp
xor
ljmp
cmpsl
lea
dec
adc
cmp
jnp
xor
outsb
test
jo
inc
mov
shlb
dec
jnp
sarb
mov
jb
jbe
fcomi
jp
xchg
aas
mov
jmp
push
dec
test
stos
aas
add
push
js
rclb
add
into
mov
mov
js
cmp
imul
mulb
cmp
mov
enter
jge
sub
xor
add
lcall
mov
movsb
sub
dec
je
jbe
lret
xchg
rorb
cmpsb
fidivl
xlat
pavgb
fnstcw
and
pop
xorb
xor
scas
jb
cmp
pop
pop
out
test
fcmovnu
sbb
xchg
inc
in
aas
lds
lret
int3
outsb
movsb
cmpl
ljmp
iret
idivl
cmp
mov
xor
fwait
push
jo
xchg
push
inc
in
xchg
jle
call
xchg
hlt
mov
decl
idivl
inc
fildl
gs
aas
xor
or
subl
loop
hlt
pop
std
push
mov
mov
subb
nop
mov
mov
mov
mulb
mov
outsb
or
add
mov
jo
stc
loope
mov
mov
lds
int
cmp
and
mov
rcll
aad
mov
fdivrs
push
cltd
adc
sbb
or
pop
pop
jae
jmp
in
push
mov
pop
fnstenv
out
lods
je
cmp
and
adc
aad
xor
xchg
fsubrs
add
pop
iret
jmp
jmp
std
mov
pop
insb
pop
xor
loope
outsl
int3
emms
mov
mov
sti
nop
mov
mov
mov
mov
pusha
aad
dec
ja
daa
pop
jp
lods
fdivrl
hlt
shrb
aaa
mov
aad
mov
insb
pop
jp
daa
push
pop
sub
test
outsb
mov
js
pusha
or
push
scas
out
mov
nop
push
stc
push
sbb
xor
stc
and
mov
loopne
sbb
clc
xorb
push
cli
mov
inc
in
stos
rolb
popa
sub
rcrb
fildll
adc
iret
int3
jo
cmpsb
jo
pop
push
popa
pop
inc
sbb
lahf
dec
push
out
cld
jae
push
mov
shll
mov
lret
inc
sub
fcomp
sbb
cmp
pusha
dec
push
pushl
dec
jo
out
in
jae
cwtl
push
adc
mov
stc
adc
sbb
xchg
xchg
xlat
cld
adc
and
mov
mov
mov
jl
cmp
test
in
xchg
pop
pushf
xorb
or
lock
push
xlat
and
js
adc
ret
cmp
movsb
mov
xchg
cs
and
and
fadds
pop
inc
pop
dec
sbb
ljmp
pop
add
cmpsb
lret
or
insl
dec
fyl2x
xlat
jbe
std
jbe
mov
js
out
aad
scas
into
fdivrs
testb
sub
cltd
sbb
negb
cmp
frstor
into
pop
and
adc
mov
pushf
das
push
inc
imul
std
inc
sti
mov
cld
inc
fadd
inc
push
push
fisubrs
test
les
mov
add
pop
in
aam
insl
cwtl
fs
movsb
jge
ja
fbld
xor
sub
mov
mov
xor
dec
inc
shrb
je
xchg
push
and
daa
or
sbb
gs
xchg
dec
nop
add
or
inc
pop
addr16
pushf
mov
sbb
push
insb
mov
xor
insb
mov
les
inc
mov
sub
and
cltd
sbb
repz
divb
ds
adc
stos
push
loopne
movsl
adc
nop
mov
jmp
fwait
leave
sahf
xchg
mov
subb
jp
mov
pushf
push
xchg
in
lock
neg
insl
adc
lea
movsl
lock
mov
add
cmp
jae
mov
es
add
or
add
sub
movsl
out
imul
fwait
data16
stc
into
cld
and
mov
jne
mov
jp
mov
in
lods
out
je
mov
mov
test
ja
fdivr
decb
mov
sbbl
mov
cmp
insb
push
loope
popa
sbb
cmpsl
insl
mov
rolb
pop
aas
ds
dec
dec
pop
test
mov
fs
jecxz
icebp
xchg
jecxz
divb
add
es
es
mov
sbb
mov
xchg
and
jae
scas
aad
sbb
inc
jo
aad
xchg
mov
adc
add
jle
dec
push
xchg
xor
test
gs
mov
jbe
cmpsb
or
mov
push
lds
das
adc
xor
xor
mov
leave
or
mov
scas
push
mov
lret
pop
jecxz
repz
or
test
and
clc
push
jp
lods
in
ret
push
lods
mov
ret
lret
aam
loopne
aas
in
pop
hlt
cld
inc
jne
outsl
stos
and
outsl
lds
or
cwtl
fsubrp
iret
ja
xlat
stos
loope
adc
shrb
add
lea
shl
nop
sub
xchg
movsl
push
or
popf
or
mov
shrl
lcall
cmp
push
pop
lret
stos
dec
stc
imul
xchg
jp
mov
in
je
and
mov
and
push
push
pop
jle
loop
push
or
daa
in
cli
mov
mull
inc
dec
pop
mov
mov
xor
int3
pop
out
rcl
mov
leave
add
inc
sbb
jae
jecxz
int
clc
addl
imul
and
test
push
imul
mov
mov
inc
ret
aas
cmp
push
dec
mov
and
inc
mov
shll
stc
popf
pop
lods
mov
fnstcw
pop
xchg
push
enter
jbe
cmp
push
sub
xchg
lods
ficomps
add
decl
gs
sub
rorl
adc
ret
insl
lods
mov
hlt
sub
push
add
std
pop
out
aas
dec
sub
cmp
mov
jno
push
ret
xor
add
xchg
ss
push
xor
push
fcomi
sbb
pop
pop
fwait
and
lcall
or
mov
inc
aad
mov
xor
sar
lret
das
daa
jae
out
sbb
ficomps
and
or
mov
sar
sub
pop
inc
sbb
mov
jae
lds
and
mov
xchg
xor
jmp
mov
lea
stc
lods
cmp
into
mov
into
mov
andl
out
adc
mov
xchg
int
ljmp
cmp
cmc
movsl
adc
mov
out
push
outsb
jnp
movsl
arpl
mov
cmpb
nop
in
xor
into
cmpsb
cmp
loope
movsb
mov
ds
and
pop
iret
lods
int3
popf
ret
mov
repnz
test
mov
mov
push
cmpsb
and
sub
fldt
mov
repz
push
pop
adc
cmp
dec
lock
test
lahf
xlat
lods
jg
stos
movsb
lock
mov
outsb
les
cltd
int3
repz
cmpsl
jge
jne
mov
loopne
jle
cmp
out
xchg
imul
cwtl
adc
and
push
out
and
xor
stc
sahf
repz
in
sbb
cmp
rolb
sbb
insl
dec
adc
pop
ljmp
fisubs
pop
cmp
mov
mov
fcomps
push
test
inc
or
frstor
dec
add
add
pop
jb
pop
jo
jl
fsubrl
insb
sub
in
jge
lret
loop
jno
sbb
mov
cmp
jbe
ljmp
aam
sarl
imul
cmc
dec
jmp
inc
lret
aas
int
pop
ror
notl
andb
push
sub
cmp
adc
and
xchg
dec
xlat
add
pop
dec
leave
cmp
push
inc
dec
ret
jp
or
mov
inc
das
xor
fcmove
mov
popa
mov
xchg
adc
add
xchg
out
mov
push
rclb
inc
movsb
scas
nop
dec
fidivrl
arpl
shlb
scas
loop
pushf
fisubl
mov
ret
out
mov
inc
inc
outsb
out
iret
into
cmp
jl
mov
jo
pop
shll
xchg
mov
mov
add
pusha
cli
mov
mov
addl
mov
push
popf
adc
inc
xchg
and
and
inc
mov
jbe
xchg
push
test
mov
and
and
aas
and
ret
jno
pop
cmc
mov
fildl
mov
jmp
jo
mov
nop
ja
faddl
push
aam
mov
inc
pop
nop
xor
test
inc
dec
aad
adc
mov
jno
imulb
loope
pop
popa
ret
jp
sub
or
std
mov
lea
out
inc
stos
addr16
pop
negl
cmp
pop
adc
mov
xchg
iret
sub
pop
push
xchg
or
and
push
stc
jnp
sti
rclb
enter
jmp
mov
leave
mov
enter
in
mov
sub
sbb
jno
fdivrs
and
sarb
je
xchg
mov
jae
lock
add
andl
dec
in
pop
jo
cmc
jo
int
fwait
nop
testl
test
mov
cmpsb
dec
xchg
imul
jo
les
fcoms
inc
shl
inc
jecxz
adc
xor
mov
inc
lret
xchg
clc
repnz
mov
in
xorl
lret
lcall
fistl
sbb
into
addb
jl
fsubrs
je
pop
hlt
jl
xor
adc
out
jno
rclb
mov
dec
jnp
call
movsb
sarl
ficompl
push
sub
jp
sbb
jge
hlt
and
cmp
mov
inc
xor
bound
dec
scas
mov
lcall
xor
jmp
andl
ret
leave
pop
inc
mov
adcb
out
andb
push
fildl
jnp
scas
es
xor
adcl
fmulp
and
pop
in
sahf
addb
sbb
cmp
push
jb
in
xor
dec
cmp
mov
gs
popf
out
cmp
mov
pop
mov
sbb
test
sbb
mov
cmp
cltd
sahf
iret
in
repz
inc
mov
cld
dec
push
push
out
pop
dec
pop
jbe
jnp
jnp
std
dec
mov
lcall
sbb
stc
xchg
dec
lods
push
adc
jb
ret
and
add
outsb
pop
or
push
xchg
stos
fs
cmc
lds
push
adc
dec
and
repz
insb
jns
jns
orl
loope
hlt
or
jo
add
xlat
ds
addr16
pop
and
sarb
sarl
push
mov
test
dec
lods
cmp
pusha
lret
shll
add
xchg
mov
idivl
das
push
jno
call
pop
xchg
mov
loop
adc
out
shl
or
test
inc
jmp
je
jb
or
sub
xchg
call
inc
data16
je
in
xchg
xchg
test
or
xchg
popa
adcb
push
and
mov
sub
or
jge
sbb
in
pop
popf
inc
pop
int3
rcr
cwtl
xchg
dec
test
cmp
lods
sub
fsqrt
nop
jnp
dec
mov
sbb
xor
jns
inc
cld
fwait
dec
fistpl
rol
clc
mov
mov
cmp
repnz
adc
cmc
jbe
sbb
adc
and
test
mov
jmp
repz
jecxz
not
add
push
pop
mov
fwait
jno
cli
test
lea
cmp
add
lods
fs
lret
clc
or
or
or
sbb
mov
cmp
and
jmp
scas
lock
loope
outsl
enter
enter
cmp
cld
xchg
out
xor
out
inc
mov
pop
icebp
pushf
icebp
in
insl
stos
mov
test
cmc
xor
shlb
mov
cmp
xchg
cmp
mov
out
or
push
add
fldenv
xor
mov
adc
mov
cmpsl
out
mov
and
repz
fnstcw
lods
lds
popa
or
shll
adc
sbb
mov
jbe
and
ja
pusha
jl
fisubs
xorl
imul
push
stc
xchg
inc
shrb
or
sar
aam
rep
or
adc
push
sbb
test
or
mov
sub
jo
and
push
xor
fildl
shlb
ja
cwtl
lret
sbb
adc
inc
cmpsb
hlt
sbb
stos
push
insl
cltd
xchg
dec
inc
xor
xor
mov
inc
hlt
test
mov
push
push
or
or
or
orb
scas
xor
mov
xor
sbb
outsb
nop
push
or
or
jnp
roll
jle
or
mov
mov
enter
fsts
sub
inc
inc
outsb
sbb
pushf
cmp
mov
mov
sarl
arpl
out
and
nop
int
push
xchg
test
std
mov
sbb
push
leave
mov
mov
xchg
fsubrl
jno
jmp
inc
int
mov
mov
mov
push
push
scas
inc
sub
mov
lahf
sbb
sbb
jp
mov
aaa
mov
mov
sub
lock
je
xchg
mov
dec
sar
ficoml
sbb
mov
push
enter
scas
inc
aad
decb
mov
push
sub
ss
xchg
out
addb
sbb
cli
xchg
push
aad
lods
lea
arpl
aam
into
xor
and
mov
ja
stos
imul
cmp
clc
mov
sub
push
inc
and
push
jg
mov
movsl
jno
lret
mov
aam
inc
mov
mov
inc
dec
dec
push
jmp
push
clc
shll
inc
push
xor
fs
and
daa
fs
push
mov
outsb
mov
push
int3
pop
jnp
fstpl
sub
adc
sbb
jno
stc
mov
addb
mov
pop
stos
dec
adc
inc
adc
cmpsb
ss
ret
ljmp
xchg
lods
xchg
xorb
movl
xor
mov
lods
cmpb
insb
out
aas
fildll
adc
enter
mov
mov
in
adc
cmp
push
cmpsb
jg
jns
repz
enter
insb
arpl
in
ret
aam
cli
clc
or
jle
dec
inc
loop
psubusw
addl
lahf
test
mov
je
push
jae
ljmp
jne
test
sub
nop
in
cltd
cmp
mov
sbb
inc
frstor
or
or
push
movsl
dec
pop
repnz
jge
xor
jnp
xchg
fwait
push
das
pusha
aas
mov
mov
inc
out
test
sub
loope
sbb
sbb
dec
pop
mov
nopl
push
add
sub
lods
sbb
jb
adc
stos
add
pop
paddusw
adcl
xchg
mov
mov
cmp
cmpl
fldcw
xor
es
cmp
cld
sbb
xor
push
test
icebp
or
call
cmpsl
jmp
xorb
mov
stos
mov
mov
adc
push
imulb
lods
iret
fistl
sub
pusha
pop
push
xchg
sbb
sbb
cmp
lods
and
adcl
pop
insl
jecxz
imul
xchg
fnstsw
xor
xor
sahf
sub
push
rclb
add
jne
lahf
sbb
adc
fimuls
sbb
sub
mov
addr16
std
push
repz
and
outsb
lcall
dec
in
mov
push
outsl
sbb
push
aaa
cmp
icebp
loope
xchg
push
les
fdiv
adc
push
xchg
pusha
lods
or
fstpt
xor
in
fstl
or
inc
std
xor
outsb
dec
stos
stos
mov
out
pop
mov
cltd
dec
lret
pop
and
xchg
lock
sbb
call
dec
int3
xor
cmp
out
adc
sti
jmp
fcomps
cmc
add
outsb
lahf
push
mov
icebp
lods
mov
lds
xlat
lock
xor
pop
clc
mov
fstl
and
sbb
aaa
test
clc
jno
and
lcall
int
aaa
sbb
pop
cltd
sbb
sbb
test
aam
shll
xchg
pushf
adc
mov
nop
add
cmpsl
sub
and
in
cmpsb
push
xor
pop
inc
pop
jb
stc
mov
mov
lcall
jbe
pop
and
shll
arpl
jo
ficomps
sbb
test
fbld
dec
out
mov
aas
xlat
add
pop
add
push
test
adc
lret
daa
push
fwait
inc
shll
sarl
aaa
leave
mov
push
xor
pop
mov
fwait
data16
addr16
es
pop
in
ret
clc
inc
fdivl
cmp
push
jo
mov
aaa
sbb
cmp
repz
or
mov
test
sub
or
ds
pop
lock
jae
mov
shr
sub
xchg
loope
adc
lds
cmp
and
ja
ds
les
jns
mov
das
or
cmp
fildl
bound
lcall
pusha
leave
in
imul
test
inc
xor
lock
ss
mov
dec
sub
mov
in
mov
and
dec
or
bound
loopne
add
aam
jno
ljmp
mov
jg
loop
pop
sbb
xchg
incb
out
inc
cld
adc
cmp
pushl
cmp
sti
dec
lret
xor
out
ret
movl
jb
sbb
ret
mov
mov
inc
in
inc
pop
jmp
xchg
and
jbe
clc
scas
or
cmp
sahf
or
lret
in
jp
inc
xor
cld
or
inc
inc
mov
dec
outsb
pop
aam
xor
icebp
add
repz
xchg
sar
push
cltd
jbe
test
out
into
stc
jecxz
lcall
jno
jl
xchg
xlat
test
add
or
repz
xchg
test
lock
jno
stc
add
add
lret
ss
rcrl
popa
adc
push
mov
out
cmp
or
and
sbb
clc
mov
push
in
mov
cmp
lret
mov
int
xchg
bound
repz
cwtl
daa
fildll
movsl
lret
and
jo
inc
pop
shlb
xchg
push
mov
xlat
imul
ljmp
jge
sarl
out
nop
jg
jge
dec
popa
pop
pop
lret
ds
rolb
fmul
jle
in
cmp
xchg
scas
jns
aam
fld1
jl
sub
mov
push
sub
rorb
popa
outsb
cmpsl
pop
inc
out
push
cmp
inc
ret
pop
mov
movsb
movsb
inc
daa
push
pushf
out
stos
jl
adc
mov
mov
out
lret
xor
lods
jecxz
xchg
fisttps
hlt
jne
pop
dec
mov
int
repz
jns,pn
inc
dec
imul
addr16
push
shrb
sbb
or
sahf
sub
arpl
pusha
push
in
inc
xchg
xlat
push
mov
cmpsl
cmp
mov
dec
fucom
jnp
andl
inc
jno
and
loope
test
mov
icebp
cmp
jp
inc
mov
repz
adc
fmull
dec
test
cltd
and
mov
dec
arpl
mov
push
adc
ljmp
mov
movsb
in
nop
hlt
sti
sub
mov
xchg
pusha
sbb
mov
nop
pop
scas
cs
jbe
outsl
fistpl
in
test
xchg
arpl
cmpsl
loope
pop
mov
js
loopne
dec
adc
sar
xor
adc
dec
pop
or
sub
add
push
lds
push
insb
inc
push
les
dec
leave
jne
pop
dec
jle
insb
lret
and
jle
inc
ja
cmp
mov
dec
ds
dec
cld
dec
lds
js
sbb
mov
jg
jp
cmp
rcrl
aas
add
sbb
movsl
shr
sbb
aaa
jg
fcoml
xlat
cmp
pop
shrb
pop
xchg
jne
add
insl
fimuls
fld
add
test
adc
jg
pop
imul
and
sbb
inc
out
test
imul
movsl
loope
lcall
add
add
jle
cltd
loope,pn
xor
mov
cmpsb
aas
cmc
lds
xchg
push
adc
lock
jo
movsw
mov
faddp
lods
mov
inc
shll
pusha
adc
pop
add
mov
cwtl
ret
pushf
dec
push
lods
cltd
addl
fidivrs
xchg
sub
or
insb
lods
mov
xchg
test
pop
std
cmp
mov
mov
ret
mov
jg
js
ret
push
add
dec
pop
xchg
in
nop
jo
pop
fmuls
mov
mov
xor
sbb
mov
je
xchg
pop
jmp
cli
dec
clc
push
xor
leave
insb
push
arpl
jmp
das
adc
js
push
jmp
pushf
inc
call
lods
or
or
aam
mov
incb
test
mov
mov
dec
dec
xchg
cmp
out
imul
inc
or
out
dec
shrb
daa
pop
jp
and
repz
or
repnz
jmp
outsb
cmpsl
lods
je
xchg
dec
xchg
popa
push
inc
loop
jg
mov
inc
xchg
inc
fwait
mov
push
sbb
es
insl
inc
stos
push
cmp
mov
sub
push
mov
sub
mov
push
call
push
pop
jl
cmp
and
data16
test
pop
inc
je
jnp
pop
je
push
mov
jecxz
scas
shlb
call
outsl
sbb
cmp
xor
xor
sub
sahf
cltd
stc
rcll
loopne
in
inc
cmp
loope
sub
cmp
and
les
xor
xchg
mov
push
jbe
ljmp
lods
insl
sar
inc
and
cmp
inc
outsb
pop
mov
and
dec
mov
rorb
lock
jno
shll
inc
mov
inc
jmp
mov
fistpl
or
je
mov
ss
icebp
mov
mov
into
ret
add
mov
or
xchg
xor
jb
das
fnsave
jne
mov
dec
dec
add
orb
inc
inc
sub
sti
push
mull
ss
lretw
inc
cmp
dec
xor
shrl
inc
or
dec
das
cmp
ljmp
aam
mov
rclb
cs
jne
mov
cltd
mov
and
fisubl
adc
jns
xor
xchg
lea
sahf
scas
lods
aas
jmp
addr16
inc
cwtl
out
inc
and
dec
pushf
sbb
mov
xchg
inc
lret
fisubrs
gs
mov
pop
insb
lahf
loop
inc
movsl
dec
loopne
insl
idivl
mov
dec
lock
mov
test
inc
jae
adc
das
out
popf
add
clc
stc
push
xor
xor
jno
insb
sub
cmp
dec
stc
fcoml
je
shl
js
push
mov
fidivl
in
frstor
push
or
bound
test
cmp
mov
xchg
outsb
pop
in
cmp
mov
push
xchg
scas
xchg
testl
adc
push
sahf
imul
out
test
add
push
loopne
ljmp
mov
repnz
cs
cmp
mov
cltd
or
and
rcrb
pusha
fs
in
jmp
and
xchg
hlt
stc
fsubs
sbb
push
andb
ficompl
ss
jnp
jmp
imul
pop
or
popa
cmp
jno
sub
jp
mov
add
repz
aas
out
and
outsb
and
mov
gs
shll
mov
xchg
adc
pop
and
loop
sub
scas
xchg
dec
sti
push
int3
sbb
pop
adc
dec
insb
adc
fisubl
jb
cs
movsl
pop
cltd
sub
dec
cmpsl
xor
mov
test
mov
mov
popa
mov
scas
xchg
push
inc
inc
dec
fsts
or
push
lods
adcb
mov
mov
push
sbbb
jo
cmp
loop
shl
xlat
pop
into
cmp
popf
mov
arpl
cmpsl
add
xchg
movsl
mov
leave
pop
stos
push
push
sub
mov
lretw
sub
jnp
add
xchg
fstl
clc
sub
mov
mov
hlt
out
test
push
out
popf
loope
xlat
pushf
sahf
lods
adc
dec
das
gs
aad
aad
add
dec
popa
test
push
test
adc
or
ret
popf
and
aad
ret
add
sub
and
repnz
cltd
sarl
adcb
lods
cmp
push
imul
xor
lret
adc
clc
add
mov
cwtl
inc
sub
pop
mov
sbb
out
adc
xorb
in
clc
mov
mov
fdivs
mov
adc
pop
out
mov
pop
into
es
insl
lods
or
andb
ret
ret
push
idivb
dec
push
les
inc
jo
jns
jae
xor
adc
inc
xchg
imul
sub
push
push
shr
cli
ret
mov
mov
in
into
xchg
dec
fistl
insl
adc
out
inc
aaa
dec
mov
mov
ret
xchg
and
add
cs
loopne
pop
pop
lods
xchg
inc
add
ljmp
mov
ja
aad
lds
rorl
mov
cmp
sarb
push
dec
jg
lods
dec
push
int3
inc
xchg
and
pop
mov
mov
das
jmp
xor
sbb
mov
jne
or
sbb
aas
inc
jl
test
fisubrl
sti
sarb
mov
mov
mov
ds
sub
arpl
adc
pusha
cmp
mov
idivl
jg
push
adc
mov
add
dec
fidivrl
adc
dec
mov
inc
mov
rol
in
xchg
mov
divl
dec
dec
int3
xchg
cmp
inc
xchg
pop
or
test
or
push
and
cld
and
addr16
cwtl
in
sub
cmp
dec
dec
xor
lret
inc
sarb
sub
out
xor
incb
sti
pop
lahf
repnz
jns
sbb
clc
js
sbb
shrl
movsb
lret
aaa
inc
into
jecxz
ds
mov
cltd
fwait
lods
movsl
push
fs
sbb
and
arpl
cwtl
inc
xor
push
sbb
dec
add
outsb
in
lock
sbb
fbstp
mov
pop
xor
xor
mul
arpl
movsb
xor
aas
sbb
jmp
jp
jecxz
icebp
hlt
mov
les
jp
lcall
sarb
popf
and
fbld
in
movsl
incl
fnstcw
dec
rcl
imul
mul
mov
jns
dec
sti
push
add
les
daa
shrl
cmc
subl
jle
push
stos
mov
push
repnz
das
jl
imul
cwtl
mov
xchg
in
test
je
mov
mov
xchg
inc
mov
xlat
cmp
pop
or
cltd
je
test
lods
and
roll
or
lret
gs
orb
mov
or
jg
outsl
cld
add
pop
add
sbb
sbb
ret
insl
cmpsb
jecxz
inc
outsl
mov
mov
stc
xchg
test
gs
aam
jmp
nop
cmp
push
inc
mov
inc
xchg
sub
add
mov
testl
xchg
mov
or
add
dec
xchg
jne
mov
testb
cmpsb
andb
xchg
xor
cmp
stos
adc
sbb
jmp
xchg
and
jl
xchg
leave
jno
or
lods
scas
jle
mov
sbb
inc
imul
in
daa
dec
adc
sahf
mov
aam
sti
aaa
push
mov
ret
push
pushf
mov
mov
test
sub
cltd
cmp
mov
and
mov
inc
repz
inc
mov
jmp
push
hlt
std
cmp
fptan
mov
xchg
insl
jle
stos
mov
in
mov
sbb
jbe
sub
test
movsl
push
sub
cmp
lea
sub
lods
add
loopne
jg
mov
movsb
lahf
int3
lods
add
sub
ja
lock
mov
icebp
cld
mov
stos
mov
jae
mov
jle
dec
mov
cld
or
or
int
mov
push
push
xor
aam
insb
mov
daa
bound
cltd
adc
pop
jno
loopne
clc
pop
scas
adc
pop
mov
imul
cmp
pop
test
icebp
or
lcall
fwait
xchg
jl
imul
xor
stc
repnz
fstl
inc
scas
lea
cld
in
mov
neg
popf
adcb
out
or
push
jno
and
cmp
mov
mov
jnp
in
cmp
int
addr16
fstpt
jbe
dec
mov
pop
mov
lds
cmc
jmp
neg
jae
inc
aaa
movsl
xlat
out
stc
aas
and
cmc
xchg
les
cs
inc
sub
jg
jmp
mov
fxtract
adc
adcb
cmp
xchg
xchg
dec
fld
fidivrs
inc
cmpl
sbb
xchg
lahf
jmp
stos
and
push
fcmovb
mov
sbb
lret
out
ss
lret
loope
xchg
sub
movsb
inc
lods
pop
out
shll
adc
jno
and
adc
jp
mov
cmp
popa
mov
lds
xchg
repz
mov
ljmp
int3
dec
loopne
adc
insb
or
jbe
jne
in
push
adc
xchg
push
or
add
or
xchg
and
add
adc
pushf
popl
cs
ret
mov
repnz
cs
xor
cltd
xchg
or
xchg
add
push
push
js
ja
xchg
mov
jecxz
inc
mov
loopne
les
scas
cmp
xor
and
cltd
outsb
cmc
jp
add
fwait
pop
cmp
jne
into
cltd
addl
sbb
mov
out
daa
sub
test
xchg
xchg
add
pop
jae
push
data16
mov
mov
loopne
jl
hlt
fildll
jns
pusha
stos
sbb
mov
jne
mov
pop
push
es
aam
jns
gs
ret
insb
inc
dec
sbb
push
fsub
fistpl
andb
mov
mov
and
push
mov
cmp
sub
cs
sub
xor
bndstx
shrl
sub
mov
xor
mov
push
xorb
pop
dec
cmpsl
lds
sub
jge
mov
shr
insl
cmp
jo
test
out
mov
inc
mov
mov
jl
int
sbb
xchg
sub
fisttpll
xchg
fldcw
pusha
cld
push
jge
adc
bound
les
sbb
hlt
mov
addr16
add
cmp
int
add
xchg
sub
inc
ret
mov
xchg
sbb
cld
aaa
sbb
arpl
inc
sbb
test
add
jnp
pusha
jmp
xchg
add
push
lds
sahf
push
jge
jg
aaa
pop
sbb
das
rol
pop
push
jl
mov
shr
mov
bswap
mov
fcmovnb
ret
push
cmpsb
jbe
das
test
cmp
int
inc
arpl
mov
jmp
xchg
hlt
xchg
inc
dec
sbb
in
pop
int
xor
adc
insb
cmpsb
mov
cmp
aam
imul
push
sarl
scas
inc
out
or
inc
push
aaa
hlt
stos
xchg
aas
scas
test
xor
jge
int3
sbb
arpl
pop
cmp
js
stc
mov
pcmpgtb
cwtl
xchg
fisubrl
ljmp
xor
stos
popf
out
daa
fs
out
push
sbb
les
mov
movsl
or
or
xchg
lcall
sbb
ret
mov
je
adc
popa
mov
pop
aaa
fildll
xchg
or
xchg
mov
mov
test
fstl
pop
sub
xchg
je
dec
jge
dec
int
into
dec
loop
aaa
or
lcall
jb
outsl
ds
lea
lcall
cld
jae
jne
rclb
std
lods
push
or
push
out
je
dec
sbb
popa
adc
pop
popf
sub
push
push
enter
das
mov
iret
addr16
adc
loope
xchg
jnp
xor
or
shlb
aaa
movsl
sbb
sbb
loop
gs
jnp
push
lock
lock
mov
ss
test
and
mov
out
outsb
aam
or
or
addr16
jno
cwtl
mov
sub
int3
and
xchg
or
test
in
out
cs
shrl
pop
int3
mov
xchg
cld
cmp
inc
js
test
add
cmp
fwait
and
cmp
in
add
enter
loope
lods
arpl
push
scas
sahf
int
in
out
scas
cmp
or
jne
push
loop
cmp
adc
std
mov
pusha
jno
pop
bound
pop
add
mov
insb
cmpsl
test
insb
insl
shrl
jecxz
movsb
xchg
sbb
dec
mov
jo
fwait
push
or
push
push
sub
out
enter
aam
outsl
push
pop
xlat
push
add
xor
mov
xchg
xchg
sub
push
dec
inc
inc
fdivr
mov
push
sub
in
xchg
incb
mov
xor
xor
call
add
sbb
cmp
sub
fnstcw
mov
mov
inc
lods
jge
sbb
push
mov
mov
into
aam
xchg
inc
test
out
pop
adc
mov
clc
mov
adc
mov
inc
test
xor
and
lock
inc
int3
lock
insl
es
sub
sti
inc
dec
mov
and
out
lock
cmp
test
sbb
pop
mov
mov
stc
inc
ss
icebp
test
in
adc
mov
enter
ss
sbb
cmp
jle
dec
cmp
mov
cmp
stos
push
out
push
out
pushf
cmp
jle
adc
notb
scas
add
sub
int
push
xchg
out
mov
xor
mov
xorl
fbld
cmc
bound
jns
lods
cwtl
ljmp
addl
jo
mov
outsb
xchg
scas
xlat
inc
and
inc
xchg
xor
and
lods
cli
xor
dec
test
lods
lock
fsubrl
data16
cmp
out
insl
jns
jecxz
mov
jne
mov
and
leave
pop
cltd
mov
mov
sbb
cmp
and
xacquire
push
mov
jp
xchg
inc
sti
test
scas
mov
inc
dec
sub
lret
mov
gs
dec
jns
fwait
cmpsl
movsl
jmp
les
jecxz
sbb
dec
inc
mov
shl
mull
and
in
call
push
lret
cmp
mov
cmpsb
cmp
and
decl
lds
push
sti
lret
loopne
cmc
leave
sub
test
push
xor
subl
fwait
fs
jmp
popa
mov
andb
pop
and
lahf
scas
mov
popa
sbb
insl
sub
stos
fisttps
xchg
rol
mov
pop
icebp
flds
pop
jno
fwait
fwait
data16
sbb
aam
enter
daa
sub
and
mov
sbb
ret
icebp
mov
sbb
ficoms
iret
lcall
pop
or
cltd
mov
inc
xor
mov
test
aas
pop
mov
inc
fwait
icebp
dec
sbb
add
dec
adc
xlat
jno
ss
enter
dec
rclb
leave
ret
out
insb
xchg
imul
lcall
mov
movsl
rorb
jg
enter
sub
mov
pop
data16
sbb
inc
jmp
xchg
clc
test
mov
rclb
pop
cmpsl
or
push
mov
and
jno
jnp
mulb
dec
rcrl
mov
pop
std
jae
push
add
cmp
push
mov
xlat
xor
outsb
mov
inc
jmp
enter
mov
les
sbb
and
loop
pop
dec
js
fwait
popa
cmp
xchg
xchg
xchg
into
pop
inc
mov
mov
pop
sub
fldcw
adc
rorb
js
mov
sub
cs
adc
sub
sub
cli
loope
pop
cwtl
sub
push
dec
fisubrs
daa
mov
or
pop
mov
xchg
adc
lock
or
and
outsl
std
jle
ja
sub
ljmp
adc
sbb
mov
mov
push
inc
repnz
lcall
data16
lcall
inc
int
in
stos
daa
push
push
sub
shrl
rcl
inc
mov
and
sub
xchg
fnsave
push
pop
jb
xlat
or
adc
push
lea
and
bnd
les
pop
int3
add
mov
dec
scas
decl
dec
and
xor
cs
les
test
mov
or
add
xor
add
lret
mov
fidivrs
mov
cltd
mov
push
mov
mulb
pop
pop
clc
jbe
jnp
ficoms
mov
data16
cmpsb
mov
adc
adc
lret
fidivl
inc
out
pop
dec
dec
xlat
adc
addr16
lock
inc
add
pop
dec
bound
xchg
test
int3
mov
shr
das
push
cmp
shl
cs
jnp
cwtl
pop
sub
movl
pop
fisttpll
paddusw
xchg
into
fistps
jae
js
test
lea
pop
inc
shl
movsb
cmpsb
cmp
cmp
sbb
jmp
ror
filds
inc
bnd
jno
insl
pop
out
xchg
ljmp
mov
orb
das
push
sub
inc
jbe
dec
es
cmc
mov
in
mov
inc
add
lods
out
aam
mov
stos
mov
aam
pushl
pop
scas
mov
xor
fmuls
xchg
enter
adc
nop
mov
xchg
add
int3
test
sbb
cld
pushf
push
mov
adc
push
fninit
pop
jae
sub
nop
scas
xor
lret
inc
cmp
test
jecxz
xor
outsb
cmp
mov
sbb
fwait
sub
xchg
mov
push
std
pop
mov
cli
int3
push
dec
mov
imul
pop
aad
sub
fsts
dec
sar
popf
std
mov
bound
ja
pusha
dec
mov
dec
xor
rcll
addb
push
jae
into
jo
test
pop
jo
push
movsl
and
xorl
jne
js
cmpsl
cmp
add
lcall
iret
rorb
arpl
mov
sub
lock
hlt
xlat
mov
mov
add
pop
dec
or
es
lahf
fucomi
mov
ds
or
ret
call
hlt
sub
and
stos
xlat
cmp
and
mov
xchg
pop
xchg
xor
dec
cmp
push
pop
mov
sarl
mov
dec
ss
push
lds
inc
inc
xor
push
xlat
pop
inc
enter
mov
xor
jge
nop
jge
mov
push
int
mov
stos
lods
xor
dec
cmpsb
add
enter
shll
pusha
loope
sub
jg
dec
push
push
popf
popa
xchg
das
and
pop
mov
incl
push
xchg
rorl
movsl
pop
lahf
out
cltd
shlb
and
or
les
je
hlt
out
or
jg
daa
xchg
cmp
pop
pop
xchg
jmp
inc
jns
outsb
xchg
jbe
or
loopne
pop
daa
lds
dec
jmp
pop
std
push
dec
cmp
ss
scas
cmp
sti
adc
testb
dec
outsb
or
jae,pt
mov
test
and
int3
in
cmp
jle
sub
mov
xchg
bound
notb
imul
sbb
in
test
daa
inc
shl
push
xor
aas
jae
xor
repnz
das
sbb
mov
adc
xchg
pop
push
sbb
push
xor
and
fisubl
subb
dec
ss
call
lcall
mov
int3
push
imul
nop
adc
fwait
pop
faddl
adc
cmpl
scas
frndint
xchg
sahf
loope
adc
add
and
sbb
pop
sub
jle
cmp
outsl
fadd
repz
xchg
call
hlt
pop
pop
mov
jmp
dec
cltd
in
lahf
imul
adc
jmp
mov
scas
and
dec
out
or
xchg
inc
cmp
lahf
test
xor
jns
adc
loope
cmpsl
xchg
outsl
xor
in
fwait
mov
cmp
push
mov
pushl
and
xchg
sbb
fiaddl
push
stos
adc
pop
mov
out
or
jmp
jmp
fdivp
mov
scas
cmp
fiaddl
sbb
cs
test
jae
pop
pop
mov
loopne
je
fisttpll
sbb
mov
addr16
mov
jns
test
inc
pushf
dec
or
in
or
fisttpl
xchg
pop
sub
adc
mov
adcl
inc
cmpsl
fucomip
jle
dec
sub
cld
sbb
adc
incl
sbb
std
mov
in
xchg
mov
xor
sbb
stos
mov
mov
inc
aaa
insb
xor
xchg
push
fiadds
into
inc
rolb
jmp
insl
mov
in
pop
cltd
out
sbb
out
adc
jmp
inc
aas
dec
fwait
push
xchg
pop
push
xchg
jmp
pop
add
call
sub
std
and
jbe
and
add
jecxz
jno
rcrb
inc
sbb
imul
flds
mov
adc
mov
nop
adc
xor
cltd
aad
mov
loop
push
dec
movsb
or
jns
bound
xchg
stc
xor
shrl
and
mov
inc
inc
sub
js
repnz
outsb
rcrl
mov
outsb
ja
arpl
xchg
fadds
cmpsb
pop
addb
out
mov
popa
data16
add
dec
pop
add
mov
int
cmpsl
mov
or
or
fsubr
jb
in
push
pop
xchg
in
pop
xchg
ljmp
jl
aas
orl
test
mov
lds
daa
subb
dec
sti
repnz
outsl
jle
sbb
dec
cmp
aam
es
shlb
negb
mov
sbb
mov
fchs
in
movsl
mov
leave
sti
or
jle
je
in
and
mov
mov
lcall
in
outsb
inc
add
inc
push
xor
jle
pop
stos
mov
dec
push
sub
adc
imul
stc
hlt
and
push
loop
mov
fwait
sbb
jo
xchg
lahf
xlat
jge
pop
or
sub
sbb
mov
xchg
cmp
bound
hlt
xor
cltd
xor
pop
jg
fistl
popa
pop
pop
cmp
mov
jae
cmp
lock
jae
and
pop
sub
insl
dec
cmpsb
push
xor
les
sbb
shld
imul
lods
mov
nop
imul
sarl
adcb
pop
jae
adc
cmp
sbb
lahf
lock
ret
pop
mov
stos
pushf
jmp
xchg
adc
fcomps
jne
push
cmpsl
scas
or
jl
add
pusha
test
loopne
mov
mov
cli
sbb
cmpsb
mov
dec
sub
mov
pushf
mov
sub
and
imul
push
cs
repz
hlt
mov
insl
pushf
shll
fisttpl
dec
cmpps
add
js
jmp
clc
inc
jp
adc
mov
ljmp
xchg
jle
fstps
cmpsl
mov
jb
icebp
rcrb
lcall
cmp
or
jmp
movsl
xchg
sbb
or
pusha
xor
roll
lds
mov
mov
and
inc
cmp
adcb
clc
push
mov
xor
fstp
addl
std
adc
push
stc
fmull
nop
mov
addr16
cmp
jbe,pt
fildll
ja
mov
jnp
xchg
inc
loope
int
cltd
ret
push
cltd
shl
mov
leave
iret
popa
vucomiss
aam
jnp
adc
dec
mov
push
cmp
xbegin
iret
insb
or
cld
in
mov
mov
mov
inc
scas
fiadds
outsb
inc
inc
in
pop
xchg
xor
sub
aam
sub
or
popf
jae
or
xchg
pop
loopne
cmp
push
and
push
sbb
and
sti
sarb
insb
or
push
bound
mov
sub
sub
rolb
mov
iret
ljmp
lods
xchg
mov
aam
and
or
add
mov
vmovups
jno
cmp
dec
xor
fs
cmp
xor
jo
popf
repnz
sbb
stc
sti
adc
and
iret
in
xor
mov
sahf
mov
pop
das
jne
jnp
inc
out
dec
mov
push
mov
mov
stc
in
jp
add
inc
push
call
add
gs
aas
ficomps
dec
mov
imul
dec
test
dec
stos
sbb
sbb
lcall
pop
jnp
loop
mov
sbb
fsubrl
lds
out
jb
or
clc
test
mov
mov
mov
jmp
cmp
loope
sti
loop
jbe
mov
jl
jns
es
xor
and
xchg
dec
hlt
test
fistps
or
dec
xchg
mov
in
jge
ja
stos
aam
scas
xchg
adc
cmp
or
xchg
cmp
or
cmpsl
movsl
jmp
mov
sbb
push
outsl
pusha
mov
fimull
popf
das
sarb
pop
mov
sub
add
inc
mov
fwait
sub
lods
cmpsb
jnp
inc
mov
inc
jecxz
loopne
fwait
mov
leave
fs
es
cmpsb
mov
out
or
sti
mov
pop
xchg
cmp
lods
jnp
shlb
adc
push
xchg
xchg
pop
aam
orb
cli
mov
adc
push
mov
or
dec
xchg
mov
cwtl
sbb
mov
sub
mov
add
adc
pusha
xlat
mov
insb
fstpl
rolb
pop
push
lock
xchg
xchg
sti
aaa
jo
pop
mov
jns
lods
mov
push
push
sbb
lods
pusha
inc
aam
vpsrad
nop
mov
xor
and
test
xchg
inc
pushf
pop
jge
push
lahf
insb
push
mov
lret
aam
or
lret
mov
mov
mov
pop
scas
mov
in
jp
push
mull
mov
jmp
mov
or
inc
push
fs
outsb
psubsb
pop
rcr
lods
xchg
int3
insl
add
or
sbb
rorb
push
mov
sbb
mov
inc
push
stc
push
push
mov
mov
notb
cmpsl
jmp
mov
out
stc
int
xchg
cmp
lret
pop
leave
lret
jl
dec
ljmp
dec
pop
and
aas
jb
out
dec
lock
outsl
ficoms
inc
jae
cmp
scas
mov
cmpsb
out
sbb
jae
testl
mov
cli
sbb
pop
in
sub
inc
push
imul
dec
js
add
imul
repnz
mov
movsl
xchg
or
adc
aas
jo
inc
ljmp
pop
inc
and
sub
push
add
mov
repz
mov
and
mov
or
push
les
test
mov
push
jbe
sub
lods
xchg
cmp
sub
jl
push
xchg
push
bound
outsb
in
mov
or
fldl
or
push
in
daa
insb
test
jg
mov
push
notl
stc
mov
fistpl
pop
inc
jge
add
pop
rorl
femms
inc
xchg
div
pop
ret
inc
cmpb
adcl
aaa
in
add
pusha
jg
jb
mov
adc
and
xchg
popa
sub
ljmp
scas
xchg
ret
das
mov
pop
in
lcall
ret
xchg
mov
mov
in
insl
adc
adc
pop
dec
insl
adc
fmull
loop
pop
cld
add
pop
jo
mov
jae
aaa
or
adc
mov
xor
adc
fmul
repnz
xchg
cmp
lea
push
add
xor
xchg
or
xchg
iret
pusha
mov
adc
sub
jns
stos
mov
mov
shrb
fs
mov
shll
js
push
inc
cmp
cltd
or
inc
andl
or
adc
mov
cld
fisubrl
push
shrb
mov
pop
xchg
mov
mov
aaa
dec
test
pop
fsts
out
cs
adc
out
dec
inc
lods
jno
sbb
aas
std
int3
push
dec
mov
rorb
fimuls
pop
iret
fstps
mov
sub
pusha
stos
cltd
push
jae
xchg
popa
push
jp
dec
pop
mov
imul
lods
or
cmc
or
les
inc
jbe
mov
mov
xor
xchg
enter
in
ret
test
jb
adc
pop
jmp
call
mov
and
push
pop
shr
pop
imul
jae
hlt
mov
hlt
fimuls
cld
or
xchg
lea
negl
hlt
es
lock
stos
iret
or
cmp
pop
mov
mov
cmc
adc
cmpsl
add
imul
mov
flds
dec
mov
fpatan
jbe
mov
dec
stos
lret
movsb
jle
lds
mov
mov
mov
cmp
push
inc
mov
lea
mov
fists
inc
add
or
cmp
ror
nop
fsubs
insl
xor
xchg
dec
sbb
js
iret
mov
xabort
pop
movsl
adc
wrmsr
or
jnp
punpcklbw
scas
lods
insl
lret
sub
mov
ror
fdivrs
sbb
xchg
cmp
dec
js
stos
mov
jg
test
les
in
inc
das
or
pop
xor
outsl
cmp
ficoms
jge
push
mov
mov
mov
popa
adc
int3
bound
out
add
dec
jne
insb
mov
outsl
call
or
aam
aas
cmc
gs
xchg
pop
mov
movsb
jge
add
mov
mov
scas
stc
ficompl
jge
bound
lea
sbb
cmp
xchg
dec
xor
daa
pusha
inc
jb
xchg
repz
adc
addr16
dec
push
sti
pushf
popa
mov
mov
cmp
enter
leave
cmp
sub
jb
leave
test
jb
xchg
dec
push
arpl
ret
call
ljmp
imul
out
xchg
js
icebp
xchg
xor
jnp
dec
sub
mov
pusha
test
sub
xlat
movsl
int
test
and
icebp
insb
gs
push
inc
cmpsl
rcrl
imull
rcll
push
dec
jle
mov
addl
dec
mov
push
lds
push
loope
mov
andl
lret
fisubs
or
mov
push
outsl
pop
mov
arpl
ja
dec
xchg
adc
and
pop
mov
pop
ret
adc
mov
das
rcll
mov
sar
inc
movsl
lahf
or
pushf
fsubrs
inc
cmp
out
sbb
adc
fs
out
pop
mov
outsl
cmpsl
pop
mov
das
xchg
mov
aad
jecxz
cmp
lea
inc
cmp
lahf
add
push
scas
fadds
bswap
xor
outsb
xor
in
icebp
andb
mov
leave
push
inc
repnz
sbb
mov
pop
test
add
je
clc
fmuls
cmp
cs
jmp
jl
push
mov
cli
stc
das
out
push
pop
or
add
adc
push
aas
xor
loopne
pop
scas
icebp
pop
pop
in
dec
xorl
lret
test
in
cli
aas
mov
push
out
adc
cwtl
add
push
cli
sub
jp
push
or
pop
aas
pop
popf
inc
mov
fnstcw
mov
push
dec
sarl
or
or
adcb
inc
and
xor
sti
jnp
fstl
mov
and
std
push
adc
inc
fistl
mov
ret
or
pop
ja
mov
mov
mov
push
mov
stos
aaa
fimull
cmp
rcrb
dec
sub
pop
dec
mov
imul
test
test
repz
inc
xchg
int
sbb
pusha
std
sbb
xor
je
outsl
cli
inc
inc
mov
or
fwait
sbbb
cmp
dec
fucomi
shufps
pusha
dec
bound
mov
push
insb
jno
repz
xor
mov
xchg
pop
push
inc
out
jne,pn
test
das
icebp
mov
sbb
cmp
sysret
xchg
lock
shll
lcall
mov
push
loopne
arpl
mov
ljmp
test
mov
in
clc
mov
pop
dec
push
push
adc
mov
aas
pop
mov
sub
mov
cmp
gs
mov
mov
xchg
mov
sbb
mov
cmp
addr16
popf
stos
sbb
xor
pop
add
xor
push
xlat
scas
push
dec
cmpsl
mov
inc
mov
pop
and
test
mov
shl
stos
adc
adc
cmp
insl
push
and
and
sub
fsubl
and
aaa
in
pop
dec
mov
in
push
sbb
sarl
test
cmp
dec
rclb
jecxz
and
lcall
adc
fwait
mov
cmc
outsl
fcomip
jns
repz
xor
adc
inc
je
movsl
sub
adc
pop
cwtl
rol
xor
into
inc
ss
sub
cwtl
fisttpl
in
sbb
clc
mov
enter
cmp
mov
fs
cmpsl
std
sarb
and
nop
lods
mov
inc
sar
mov
js
shlb
dec
stc
inc
sbb
xchg
leave
jge
jbe
pop
sbb
sub
adc
fwait
aad
jae
dec
loop
adc
xchg
push
xchg
mov
mov
cmpsb
mov
scas
mov
xchg
xchg
lret
pop
shrl
test
inc
mov
and
push
inc
mul
inc
pusha
in
sub
in
in
xchg
in
pusha
sub
scas
mov
int
rol
pop
push
aaa
mov
stc
int
jb
ljmp
icebp
inc
jecxz
xchg
add
popf
mov
push
sub
dec
loopne
cmp
xor
popa
and
add
fimuls
lea
lock
gs
and
nop
negl
push
lods
mov
rcrb
outsl
adc
pop
dec
sbb
jl
sti
stc
push
scas
lret
loope
icebp
cmp
push
fwait
and
xchg
fcomp
into
lret
pop
xor
ss
aad
call
fdivs
adc
inc
mov
adc
fcoms
sbb
sbb
movsb
jo
loop
pop
mov
xlat
dec
test
cmp
push
push
xor
add
mov
push
dec
fsubs
dec
dec
mov
or
adc
lods
sbb
test
or
pop
fwait
add
popf
adc
jp
adc
stos
ljmp
stos
inc
jecxz
outsb
movsb
lods
push
or
cmp
cmp
add
xor
test
ret
testb
es
mov
pop
mov
and
bound
pushf
cmc
add
pop
lock
sub
mov
and
into
pop
xlat
imul
jns
popa
int3
ds
aam
pop
movsb
repnz
sub
jnp
dec
pop
in
lcall
jbe
fdivrs
std
aas
sbb
adc
leave
adc
dec
mov
xor
fsubrs
sbb
inc
and
jg
jb
jecxz
arpl
jecxz
loopne
dec
leave
pop
mov
jno
add
jae,pn
xchg
repz
mov
mov
insl
cmpsb
loop
pop
mov
test
es
jb
and
add
orl
leave
shlb
fsubs
aaa
nop
add
in
or
popf
repz
dec
into
push
clc
in
imul
or
testl
cmp
cmpsl
push
adc
aam
lret
jecxz
push
cmpsl
jnp
dec
rcl
cmpsb
aam
or
dec
out
inc
in
scas
sub
mov
inc
loop
ss
and
mov
pop
nop
cld
xchg
xor
and
pop
dec
xor
cmpl
jp
mov
ljmp
push
in
inc
movsb
cltd
ficompl
repz
jecxz
imul
and
outsb
xor
icebp
xchg
out
scas
shlb
in
xchg
and
or
push
inc
push
daa
and
lret
xchg
imul
inc
jae
mov
mov
cmp
outsb
je
mov
fistpl
shl
mov
ds
push
sbb
repz
cli
and
inc
int3
mov
sbb
nop
icebp
jns
dec
jnp
mov
shlb
sbb
out
dec
mov
sarb
les
pop
mov
sub
lahf
push
lret
adc
jns
inc
xchg
add
or
pop
in
xchg
lret
dec
xchg
xchg
xchg
iret
sbb
repnz
add
hlt
outsl
add
mov
into
loope
add
cmpsb
mov
pop
cmpsl
inc
mov
cli
mov
mov
mov
adc
mov
ds
outsl
das
or
add
pop
divb
push
neg
xchg
in
sub
aaa
mov
popa
push
test
rol
push
dec
cld
add
jmp
and
subl
add
out
in
mov
mov
outsb
repz
out
or
xor
push
adc
jne
in
xor
and
aam
hlt
sub
adc
imulb
mov
ret
clc
imul
inc
adc
aad
rol
lea
fwait
outsb
mov
js
dec
out
loope
cmc
dec
jl
lds
sub
xchg
movsb
push
leave
jge
cmp
pusha
dec
ds
call
orb
xor
mov
fistl
std
mov
and
shrb
cmpsl
jl,pn
pop
xor
mov
xchg
popf
mov
add
sbb
rclb
int3
cs
push
std
xchg
sbb
jb
push
inc
xor
cmp
call
mov
mov
push
int3
je
xchg
shll
bound
stos
pop
and
push
adcb
dec
sbb
xchg
enter
adc
mov
shll
loope
add
idivl
and
xchg
repnz
push
std
mov
push
pop
dec
adc
lcall
stos
jge
jl
or
jno
gs
test
aaa
xor
xor
fimuls
mov
sbb
mov
out
pop
pop
insl
lock
movsb
daa
dec
sbb
aas
xorl
jmp
std
fildl
aaa
sub
fiaddl
sbb
popa
sub
mov
in
clc
lea
or
push
sub
rorl
mov
lret
cltd
fdivl
mov
or
and
pop
dec
lods
jne
pmaxsw
jp
fdivr
jmp
arpl
shrb
xchg
or
jb
sub
jmp
sti
add
mov
dec
cs
jle
sub
ljmp
add
sbb
jecxz
adc
mov
lret
adc
es
jmp
jb
es
lea
sbb
fsub
std
xchg
cmp
movsb
add
sbb
shll
ret
dec
fcoml
xor
push
xchg
xchg
sbb
push
aaa
sub
mov
cmpsl
mov
mov
mov
rcll
xor
out
mov
test
daa
popa
cmp
sub
mov
inc
add
pop
daa
loop
jle
int3
fisubrs
cwtl
stc
adc
jns
cmp
mov
jb
inc
leave
ret
pusha
sbb
arpl
ret
adc
scas
dec
pop
rorb
test
stos
call
xchg
hlt
mov
lds
cli
in
call
es
adcb
push
mov
sub
imul
inc
mov
dec
test
sub
mov
aaa
lcall
pop
inc
rorb
dec
lret
stos
mov
cs
fidivs
push
mov
leave
push
imul
sti
xor
xchg
mov
add
idiv
rorl
stc
das
or
mov
push
mov
je
scas
xchg
orb
nop
sbb
mov
leave
scas
and
rcl
js
stc
adc
jmp
adc
cmpsb
inc
jo
int3
or
ljmp
xchg
fistpll
xor
push
hlt
mov
bound
loope
addl
pop
je
fdivl
rcrl
inc
in
inc
cltd
roll
xor
jbe
xchg
sarb
andb
ret
lea
int3
mov
mov
dec
mov
loope
fstl
dec
sbb
imul
dec
or
push
lds
sbb
in
mov
add
repnz
mov
sarb
mov
mov
lods
xor
out
cmp
mov
sub
repz
mov
dec
xor
std
dec
mov
dec
test
cmp
js
fdivrl
rolb
cmp
xor
bound
jae
gs
negb
mov
xor
dec
jae
popf
call
data16
and
and
cmp
xlat
cs
and
dec
dec
or
xor
xor
xchg
lods
subl
test
mov
loop
mov
sub
push
cmp
mov
pop
mov
and
xchg
sarb
or
aam
scas
nop
ds
test
mov
mov
sbb
aad
jne
int
dec
pop
inc
call
scas
jle
loope
and
push
fdivrp
fadd
in
or
jae
mov
adc
leave
stos
sti
push
faddl
push
sahf
cmc
inc
test
cmp
addb
mov
mov
push
movswl
out
adc
test
xor
ret
inc
popa
jno
jmp
jp,pt
and
jns
inc
push
test
mov
lds
mov
sbb
test
mov
cmpsb
xor
add
and
cli
adc
lahf
mov
sbb
lret
mov
mov
and
xor
ljmp
insl
cmp
and
cwtl
xchg
rclb
bound
mov
jnp
mov
sub
inc
cltd
das
add
lret
shl
cli
data16
sti
jp
clc
mov
les
fistl
fdivs
mov
lahf
jnp
nop
cwtl
jl
adc
and
shrb
outsb
shl
xor
fcompl
mov
pop
xor
mov
lret
je
lods
fld
out
fsubp
add
clc
fimull
push
jge
loop
cmp
mov
pop
push
cmpsl
jecxz
and
fwait
rcrl
lahf
cli
es
outsb
insl
dec
jo
push
add
ja
arpl
stos
cmp
test
movsb
repz
pop
xchg
mov
xchg
push
jge
mov
xor
js
out
push
test
clc
or
sub
push
push
xor
popf
and
cmp
or
in
and
xchg
jo
and
add
push
sbb
dec
sbb
push
loope
sti
jle
test
cmpsl
cltd
rol
jb
dec
dec
mov
sbb
or
jmp
fdivrl
mov
in
inc
push
jge
outsb
rorb
jo
test
or
stos
nop
mov
mov
or
jae
adc
icebp
cld
and
outsb
adc
sti
and
jmp
mov
mul
mov
xchg
popf
icebp
cmp
outsb
sahf
push
sub
gs
adc
or
dec
cmp
mov
dec
add
stos
xchg
mov
cmpsl
jge
xor
shl
mov
incl
and
xlat
aaa
and
out
mov
hlt
ljmp
push
inc
in
xchg
lret
push
cmp
pop
inc
loope
mov
add
cmp
cmc
test
lds
aad
mov
jne
mov
sbb
cmpsl
jmp
mov
push
insl
fiadds
sbb
mov
pushf
lcall
jge
and
std
and
xchg
idiv
cld
test
stos
fsubrs
bound
cmp
ds
or
int3
dec
sahf
pop
sbb
addr16
fsub
cltd
enter
push
jmp
jge
fucompp
sbb
loope
sahf
jbe
lret
fsin
popa
arpl
filds
jo
imul
push
ret
stc
xchg
jbe
ljmp
shr
xchg
or
test
insb
or
mov
sti
push
fidivrs
mov
fcomip
sbb
pushf
pop
mov
ljmp
mov
mov
sysret
idivl
ror
mov
inc
jbe
xlat
stos
je
aad
jb
sub
jns
in
or
fyl2x
push
in
add
dec
stos
mov
pop
push
mov
std
jle
mov
cmp
and
lods
push
clc
mov
dec
push
jo
fldcw
pop
cmc
xor
aas
nop
movsb
cltd
pop
or
dec
sub
arpl
pusha
push
adc
sahf
pop
popa
xchg
pusha
dec
mov
dec
xchg
sbb
fidivl
shll
gs
mov
or
fwait
das
xchg
sbb
std
and
lods
lea
adc
xchg
jbe
notl
xchg
jge
lret
imul
fcoms
out
aas
lcall
sbb
bound
lods
test
out
mov
fildll
dec
jmp
loopne
pop
jns
and
and
sbb
jecxz
push
test
add
cmpsl
pop
shr
mov
mov
pop
ss
cmp
pop
or
in
mov
loopne
jbe
dec
loop
cld
xchg
xor
cmp
or
cltd
dec
aaa
jmp
cmp
lcall
aam
idivb
add
lret
mov
adc
inc
rolb
cmp
dec
adc
mov
and
xchg
inc
pmulhw
sbb
adc
int
mov
pop
in
push
mov
or
pop
stos
mov
mov
mov
mov
push
aas
fdivrl
int
lods
mov
movsl
sbb
lods
ljmp
or
dec
xor
call
inc
inc
hlt
cmpsl
cmp
cmpsb
loop,pn
insb
repnz
cmpsl
pop
dec
ss
test
push
push
jle
mov
cmp
out
addr16
xchg
fidivrs
js
dec
ds
sub
jnp
ja
movsl
jnp
arpl
mov
jmp
lret
ficoms
cmp
loope
rcl
push
inc
cltd
lds
scas
fidivrl
inc
icebp
or
cmc
aas
dec
add
xchg
icebp
cli
pop
idiv
test
sub
push
jge
push
aad
mov
xor
loope
outsb
fistps
add
push
mov
js
adc
inc
lcall
mov
xor
inc
and
enter
das
pop
lods
pop
mov
mov
mov
xchg
sub
cltd
xchg
les
sbb
fld
scas
aaa
pop
aad
mov
xor
int
sbb
and
call
push
ficoml
dec
cmp
leave
xor
cs
add
inc
std
mov
ja
das
cmp
out
dec
test
push
lcall
jp
stos
aam
jge
scas
scas
mov
or
arpl
les
insl
sub
mov
lods
inc
inc
lods
repnz
mov
ret
gs
xchg
fstps
dec
xlat
xor
test
pop
outsl
jge
jae
sbb
dec
into
stos
inc
sbb
outsb
cwtl
cmp
cmp
jb
out
mov
pop
cmp
sub
push
jb
cmpsl
xor
xor
jp
jnp
rcll
dec
cld
out
add
es
pcmpeqd
lods
cmp
adc
sub
out
pop
or
xor
mov
sar
inc
push
push
push
int
jbe
mov
xor
mov
mov
pusha
pop
dec
mov
fstpt
rol
ja
add
jge
in
inc
add
jb
pushf
in
pop
add
and
xchg
jmp
pop
mov
out
lcall
mov
xchg
push
pop
dec
pop
xchg
mov
add
xor
jle
sbb
imul
pop
inc
jnp
or
adc
adc
and
loopne
outsl
pop
pushf
or
inc
mov
push
or
icebp
xchg
sti
or
aam
in
ret
ljmp
repnz
fadds
adc
call
into
cld
dec
adc
push
pop
out
insb
lcall
aaa
and
stc
jl
fildll
dec
out
push
imulb
mov
fnstenv
scas
es
sub
test
aas
mov
dec
cmpsb
push
out
test
cmp
les
mov
xor
imul
sbb
pop
addr16
test
sub
xchg
iret
pop
mov
xchg
mov
or
or
push
inc
popa
imul
hlt
sub
mov
lret
push
inc
aad
jecxz
mov
subl
idivl
bound
lods
ret
loopne
mov
cmp
mov
jae
out
andb
mov
cmp
mov
add
test
mov
jne
sbb
pop
mov
xchg
rclb
enter
pop
jb
mov
inc
rcrb
fmull
jnp
push
cmp
and
shl
cmc
ljmp
repnz
sahf
xor
andl
xchg
dec
sub
mov
adc
ljmp
cmpsl
push
in
shrl
jb
addr16
jecxz
daa
rcrb
aam
sbb
jmp
movl
int
or
inc
outsb
inc
pop
cmpsb
mov
inc
or
es
and
stc
push
push
lea
push
enter
fcmove
imul
add
cld
cmpsl
and
fsubrl
add
mov
clc
mov
test
or
mov
pusha
ret
les
jnp
sub
cwtl
mov
fistl
push
imul
test
fistps
arpl
adc
arpl
mov
fnstenv
test
movsb
jecxz
test
push
pop
push
dec
cmpsl
orb
sbb
outsb
mov
lds
adc
adc
out
iret
and
adc
je
negl
lods
inc
sub
jecxz
hlt
cmp
scas
daa
dec
popa
cli
lret
xchg
imul
fwait
ret
push
mov
fildll
sbb
cmpsl
mov
call
stos
lds
rcl
mov
mov
addr16
lcall
push
jge
popf
cmp
xor
dec
pop
mov
clc
sbb
push
ret
and
pop
outsl
fcoml
aaa
cld
aaa
xchg
arpl
sub
popf
push
hlt
ja
loope
or
fbld
xchg
sbb
pushf
add
subl
sar
shll
test
jno
movsl
in
scas
mov
lds
jno
adc
inc
shlb
cmp
push
cld
repz
cmc
dec
stc
jb
jmp
mov
push
dec
inc
xlat
es
and
inc
inc
icebp
mov
data16
jo
rorl
pop
shll
mov
mov
lcall
cli
lea
mov
inc
ja
arpl
dec
cmp
mov
and
and
nop
movsl
cli
push
lods
pusha
out
mov
leave
mov
lret
insb
ficoms
mov
fistpl
sbb
cmp
push
packssdw
movsb
inc
dec
sarb
rcrb
and
cmp
cmc
sbb
test
pushf
outsl
cmp
cli
sub
loop
repz
sbbl
dec
jno
dec
mov
or
jecxz
lret
test
adc
mov
mull
sbb
jge
mov
or
ret
or
pop
mov
jae
jle
out
add
push
pop
and
jecxz
into
xchg
iret
or
mov
pop
jne
outsl
hlt
xor
js
pusha
push
or
sub
and
jns
stos
pop
int3
push
or
sbb
cmp
loopne
sahf
outsl
pushf
cld
jmp
and
fcmovnu
in
shll
je
dec
fwait
lahf
mov
mov
or
pop
push
aas
jle
inc
and
rolb
imul
cmp
fiadds
adc
fdiv
leave
add
or
jg
fs
mov
cmc
inc
imul
ss
jo
fisttpll
inc
pop
sub
sbb
mov
fiadds
repz
sbb
sub
push
pop
cmc
mov
shl
test
in
and
and
mov
and
mov
outsb
ja
fwait
adc
addr16
lods
ret
mov
imul
push
cmp
sub
adc
fistpl
sub
mov
and
fisubrs
xlat
dec
inc
ja
stos
jb
cmp
scas
mov
out
adc
popa
inc
add
in
xlat
add
icebp
and
mov
aaa
es
adc
fs
mov
push
mov
cmp
cwtl
int
push
iret
int
cld
or
out
mov
and
mov
sahf
enter
push
mov
cmpsb
in
add
lret
push
je
mov
jle
test
rclb
mov
leave
lds
aam
cmp
das
sub
rorb
outsl
leave
adc
js
popa
adc
scas
dec
pusha
or
dec
pop
mov
clc
cltd
insl
push
ss
mov
jnp
movsb
popf
testl
sbb
aad
inc
cmpl
loopne
adcl
shrl
imul
mov
jle
mov
dec
jno
out
cli
dec
popf
push
lret
xchg
mov
or
test
and
jmp
dec
hlt
ss
xor
cmpsl
jno
pmaddwd
inc
rcr
loopne
xchg
xor
lock
push
add
dec
inc
fnstsw
lahf
push
inc
stos
sub
popf
and
les
inc
cmpsb
jbe
cmpsl
adc
sbb
into
addl
add
cwtl
out
jb
jl
jge
in
push
cmp
xchg
js
mov
adc
int
outsl
mov
jge
rcll
test
jp
lock
imul
ret
loop
jo
or
add
sub
repz
movsb
arpl
fdivs
mov
mov
icebp
jae
cmc
sbb
popf
dec
dec
push
dec
fwait
mov
test
inc
adc
fstpl
push
hlt
ljmp
bound
call
cltd
cmp
xchg
cwtl
pop
sbb
test
fwait
xchg
sbb
aas
cmp
sub
jl
mov
xor
xchg
xchg
jp
icebp
dec
sarl
and
or
push
mov
and
adc
fsubl
sub
push
mov
lret
ret
nop
sar
mov
mov
push
addr16
xor
pop
sub
xchg
cmpl
cli
mov
shl
and
and
rcrb
iret
fdivrp
and
add
pop
mov
cmp
rorb
sbb
shr
dec
ret
sub
lods
mov
in
cmp
sub
lds
cmp
xor
mov
push
stos
pushf
lea
cld
push
sub
scas
lss
sub
arpl
jbe
sbb
mov
xor
jno
mov
and
test
mov
fs
scas
jge
fcompl
cli
xor
cmp
stc
add
insb
dec
ret
cmp
sti
or
or
ds
pop
out
fsubp
std
insb
dec
mov
add
gs
ljmp
mov
std
xchg
sbb
mov
add
mov
lret
rcll
arpl
aas
in
sub
lods
xchg
cs
aam
ljmp
jp
mov
aas
xor
inc
test
in
pop
outsb
daa
lods
pop
inc
jne
jo
mov
int
dec
sbb
cmp
out
and
adc
xor
jae
mov
addr16
fcmovb
mov
inc
clc
xchg
cwtl
cwtl
aad
mov
lcall
in
jne
and
popf
sub
pop
pop
fistps
inc
push
add
sbb
cmc
xchg
jl
mov
xor
aaa
inc
pop
bound
or
inc
dec
jle
and
ds
lock
sub
mov
iret
je
or
js
jg
nop
mov
jl
mov
and
lahf
dec
sub
sub
arpl
cmpsl
mov
mov
cmp
imul
dec
sbb
fisubs
or
push
ret
lret
out
cmp
or
or
mov
xor
cmp
pop
sub
movsl
and
popa
jmp
mov
scas
add
dec
fisubs
rep
sbbl
xor
xchg
test
pop
aad
jno
cs
iret
out
roll
aam
xor
add
push
mov
xchg
stos
out
mov
push
lret
shll
roll
fdivl
aad
cmc
orb
into
daa
or
fwait
adc
daa
inc
jnp
scas
repz
data16
loopne
jecxz
insl
fmulp
mov
pusha
leave
into
andl
xchg
add
ljmp
shl
and
mov
xchg
outsl
mov
dec
pop
out
dec
sub
psubusw
or
pusha
rclb
jecxz
pop
xchg
dec
jns
dec
lds
movsb
sbb
add
sbb
add
and
gs
lret
leave
lret
inc
mov
mov
icebp
inc
test
cmp
icebp
les
test
dec
push
dec
cwtl
xor
stos
sub
add
cwtl
add
sbb
jecxz
add
rcr
imul
in
mov
jne
es
mov
leave
sub
inc
stos
push
es
pushf
jns
and
fsts
sbb
lea
push
mov
sbb
add
xor
sbb
push
mov
mov
arpl
fcmove
cmpl
push
or
pop
pop
inc
pop
daa
dec
jp
and
push
xlat
push
jge
rolb
and
add
movsb
jo
mov
ja
mov
cmp
push
xchg
xor
pop
mov
or
outsb
popa
mov
and
and
mov
jnp
icebp
cli
jmp
push
fisubs
bound
popa
and
pop
pop
push
sub
inc
mov
sbb
jmp
clc
xlat
test
mov
fnstenv
push
dec
lods
push
aam
inc
ljmp
jge
and
mov
sbb
les
orl
data16
and
mov
out
jmp
inc
inc
and
das
shl
add
xchg
adc
cmp
jns
leave
or
ja
fnsave
mov
mov
out
xlat
mov
scas
lret
arpl
test
aaa
addr16
rorb
mov
dec
outsl
pop
in
push
and
jbe
push
dec
icebp
xlat
mov
jmp
push
cli
cltd
mov
fldt
pusha
stos
and
adc
add
cmp
push
pop
mov
jge
pop
or
push
psubsw
push
jmp
xchg
cmp
cmpsl
add
outsb
insb
push
mov
jns
xchg
gs
mov
pop
mov
adc
in
clc
mov
nop
add
push
add
push
outsb
lods
mov
cmpsb
pop
mov
inc
push
mov
cmp
mov
aam
inc
pop
addr16
xor
push
fnsave
cmpsl
lds
push
and
cmpsl
jbe
and
cwtl
bound
mov
xor
mov
lret
jnp
mov
leave
adc
xchg
iret
pushl
push
sti
in
push
ss
push
in
push
jno
cmp
sub
icebp
inc
mov
lahf
pop
cmp
mov
mov
fidivs
pop
mov
mov
mov
inc
pop
rorb
ret
mov
push
iret
out
pop
and
std
sbb
mov
xor
fistps
mov
xor
movsb
into
push
cmpsb
movsl
adc
jnp
lret
dec
xchg
xchg
push
sbb
or
leave
ljmp
addl
push
and
out
imul
jl
xor
and
out
lahf
inc
movnti
test
cmc
out
outsb
add
ljmp
paddsb
jge
jae
push
daa
cmpsl
es
add
cmp
xchg
stc
out
jp
outsl
add
or
sub
repnz
bound
popf
adcl
rcl
xchg
test
ret
enter
sbb
aas
mov
dec
mov
es
dec
insb
mov
jno
cmp
test
dec
sahf
lret
sub
mov
cli
out
pop
mov
in
dec
adc
or
push
fwait
test
test
mov
xchg
outsl
imul
xchg
insl
dec
mov
pop
into
sub
inc
xor
cli
mov
ja
jle
push
xor
call
out
jg
loopne,pn
xchg
push
jo
and
xchg
xchg
sbb
out
adc
sbb
gs
jl
fwait
in
rorb
cmp
inc
loope
test
mov
xchg
pop
fmulp
pop
or
addb
fdivs
lds
lcall
js
outsl
jp
cwtl
nop
sub
out
data16
push
jne
ss
push
pop
push
push
mov
addb
xchg
mov
cmp
xrstor
in
in
fsubr
notb
fcomp
pushf
out
xchg
jae
xor
sbbl
ds
adc
mov
ja
pop
loope
fcoms
imul
lret
cmpsb
push
pop
sbb
rcll
call
inc
daa
xchg
jo
clc
scas
outsl
loop
pusha
dec
pop
or
mov
or
lds
xchg
popf
aas
adc
sbb
pop
and
pop
stos
dec
hlt
sub
sbb
js
mov
mov
fists
jbe
test
jns
pushf
or
push
pushf
stos
sti
push
sti
outsb
mov
shrl
sub
ja
clc
inc
fldl
test
out
jg
shlb
mov
popf
lcall
sahf
add
dec
or
push
adc
repnz
pop
pop
pop
lds
movsb
fisttps
sub
push
jnp
outsl
dec
xor
sbb
fsubrl
or
pusha
jae
cs
shl
or
jne
and
cld
call
jnp
xlat
push
mov
sbbb
fwait
pop
jle
js
lret
movsl
dec
fcompl
mov
inc
or
or
and
pop
push
nop
add
adc
cld
aas
aam
xor
lcall
bound
xor
js
cmp
jp
outsb
push
ja
idiv
jne
test
cmp
pop
pop
or
cmp
fcmovb
push
and
jo
add
int3
ds
adc
in
out
mov
into
mov
cmp
mov
inc
pushf
and
pop
adc
xor
mov
rcll
into
call
js
popf
push
mov
mov
mov
iret
mov
jo
mov
mov
or
nop
fadds
sbb
jb
and
or
mov
insl
mov
repnz
outsl
fiadds
mov
mov
movsb
inc
in
iret
shr
repnz
les
cmpsb
movsl
xor
in
enter
and
push
jbe
xchg
jne
jl
jmp
enter
pop
push
cltd
and
push
lcall
cmp
sbb
sbb
int3
mov
or
mov
fwait
out
mov
mov
xchg
fistl
insl
mov
mov
cmpsb
xor
scas
sub
roll
xor
addl
inc
cs
out
xor
jno
jmp
jge
stos
and
in
ret
out
outsb
cltd
cs
lret
movsl
sub
insb
stc
cmp
xchg
cmpsb
pop
addl
bound
pop
sbb
cmp
mov
push
pop
push
iret
out
mov
sbb
cltd
dec
xchg
pusha
xor
ja
and
push
add
xorb
mov
inc
int
mov
jbe
popa
mov
mov
int3
sbbl
clc
aam
push
xor
or
lcall
clc
pop
ret
in
je
jp
repz
jno
pop
jle
sti
or
pop
sbb
das
scas
out
sub
orl
inc
sbb
add
mov
sbb
rolb
sar
sub
sub
aas
adc
and
stos
addb
push
push
mov
and
data16
mov
imul
dec
sbb
jne
js
adc
adc
inc
adc
push
loope
push
dec
loope
lcall
pop
mov
or
xor
inc
mov
mov
xlat
pop
cs
sub
dec
mov
push
hlt
pop
xchg
std
push
movb
rcrl
rcl
fistl
repnz
ret
xor
xorl
jne
aam
dec
popf
xlat
das
dec
xchg
pusha
fdivl
add
outsb
lcall
cwtl
sbb
add
int
imul
jo
dec
jo
mov
mov
ja
push
in
and
jl
sarl
out
rorl
and
shrb
out
aad
mov
fldcw
out
push
ljmp
roll
mov
and
test
les
or
xchg
sub
add
adc
mov
or
mov
jo
mov
inc
xchg
inc
mov
fs
out
cmc
dec
outsl
imul
sarb
sbb
pop
xlat
into
xchg
stos
xchg
mov
stos
or
inc
insb
in
add
int
cmp
mov
shrl
pop
mov
rcl
in
push
lods
adc
mov
fsubrl
pop
cmp
sti
sub
leave
add
in
pop
ss
iret
pop
jne
xchg
mov
inc
in
arpl
jne
lret
mov
daa
fstpl
in
lret
add
push
icebp
insb
mov
lods
faddl
js
shl
jae
xor
nop
loop
and
sbb
add
orl
pop
in
outsl
dec
or
add
stos
pop
inc
fsts
scas
lret
sub
outsb
mov
ljmp
je
push
jbe
adc
jecxz
dec
ss
test
les
cmp
hlt
push
cmc
std
imul
inc
jns
mov
lods
repnz
mov
cmpsl
dec
imull
js
fld
out
dec
lds
icebp
fwait
mov
loop
sbb
aaa
incb
jnp
push
inc
xchg
and
dec
shll
xchg
pop
cs
in
hlt
hlt
jns
test
dec
movd
rclb
rclb
inc
cmp
jge
jno
cltd
push
movsl
inc
cld
mov
cli
push
dec
push
in
arpl
cld
insl
jmp
sub
mov
dec
cmp
pop
push
sub
push
inc
or
cmp
cmp
inc
inc
pushf
jecxz
fistpll
loope
sahf
push
cmp
int3
mov
sbb
sbb
push
sbb
lock
push
mov
pop
or
hlt
xor
shll
mov
ret
mov
mov
dec
mov
stos
and
nop
sbb
push
andl
in
leave
mov
dec
dec
push
cmp
cld
test
pop
mov
lret
pop
jns
sbb
repnz
in
pop
lods
fwait
mov
cmp
fsubrl
pushf
stc
pop
inc
jge
mov
mov
add
lock
ret
mov
sub
or
xor
mov
jb
mov
lret
mov
sub
add
jb
cmp
out
lods
int
aad
dec
xchg
nop
mov
rep
out
adc
push
dec
jmp
pop
or
or
push
jnp
enter
dec
mov
mov
xchg
outsb
and
out
jo
je
push
es
cli
int
pop
inc
and
sbb
push
incl
mov
mov
cltd
in
push
fsts
out
js
aad
call
cmp
clc
inc
icebp
jb
inc
lods
imul
xchg
xlat
fs
xor
aad
fwait
mov
hlt
lret
fwait
or
in
sub
repnz
sub
cmp
test
xor
xor
or
idivl
icebp
mov
push
cmpsl
fstl
push
lds
or
adc
sbb
mov
orl
ljmp
loopne
imul
jge
enter
ret
mov
cmp
lcall
xor
cmpsl
pop
sub
pop
ret
xchg
xor
cmp
or
cmp
cmpsb
inc
ret
pop
pop
inc
adc
loope
ljmp
mov
addr16
call
pop
mov
pop
add
push
jns
frstor
cmp
lret
dec
movsl
mov
jno
out
dec
fnsave
add
test
add
pusha
jne
leave
dec
cmp
je
int3
dec
dec
imul
mov
cmpsl
xlat
jae
xchg
shrb
mov
jle
cld
push
push
mov
es
ljmp
sbb
and
or
repnz
xlat
dec
and
push
or
push
dec
pop
mov
dec
adc
mov
iret
ret
sbb
jbe
xchg
lock
insl
andb
pop
inc
add
and
cli
jnp
jne
lods
sbb
jge
cltd
loop
jl
mov
popaw
scas
adc
pushf
cmp
ja
adc
adc
push
mov
mov
ljmp
push
insb
mov
enter
xchg
inc
xchg
dec
dec
sti
and
aad
ret
test
loopne
movd
adc
inc
dec
mov
add
push
sbb
addr16
bound
rclb
test
xor
adc
push
push
inc
pop
std
add
push
sbb
jmp
mov
scas
jo
inc
es
fildl
daa
and
add
dec
xchg
sti
in
mov
jae
andl
add
in
adc
or
pop
movsl
arpl
dec
mov
sub
sahf
nop
jmp
push
add
popf
pop
inc
xchg
sbb
out
xchg
in
mov
dec
in
xchg
add
cs
addl
cs
test
lahf
pop
stos
mov
or
loope
test
xlat
jb
stc
ror
cmp
outsl
jmp
and
dec
xchg
fldl
rcrb
dec
mov
out
pop
ljmp
xor
mov
adc
cs
inc
or
inc
out
sbb
push
xchg
jp
stc
push
xlat
leave
fldt
sbb
push
mov
or
dec
adc
cmp
stos
xchg
mov
adc
out
incb
dec
inc
neg
ljmp
sub
bound
mov
sbb
dec
pop
aas
push
dec
mov
and
test
aam
adc
push
jbe
fcmovbe
mov
push
push
adc
out
add
jo
idivl
add
adc
lahf
ficoml
shl
aaa
mov
in
pop
cmpsl
jl
enter
xchg
push
or
adc
jmp
ds
or
roll
test
gs
popa
leave
outsl
outsl
lods
lock
add
cmpb
loop
mov
push
cmp
movb
xchg
push
bnd
and
and
mov
sbb
mov
adc
pop
ja
sbb
jbe
rorb
adc
mov
sbb
aad
mov
jb
lods
add
jl
rclb
and
xchg
icebp
sub
mov
cmp
xchg
jp
cld
shl
push
addr16
xchg
adc
les
push
and
mov
inc
pop
scas
sahf
popf
stc
std
jmp
pop
out
cli
fldt
push
data16
lock
shr
in
mov
push
mov
add
xor
out
aam
jnp
mov
cli
js
sub
jbe
add
jbe
jge
cmc
sbb
ficoml
pop
les
les
ret
cmpb
or
push
mov
jmp
mov
in
xor
lret
xor
jb
xchg
out
sub
add
test
mov
sub
jmp
mov
sub
push
xchg
adc
addr16
jg
test
syscall
xor
mov
cltd
in
jno
cs
cld
pop
mov
js
loope
das
push
push
fldl
lcall
fdivl
add
ss
psrlq
lea
sbb
push
mov
add
dec
arpl
push
add
in
cmp
lds
cmp
cmp
xor
aaa
fidivs
inc
cmp
or
out
pop
fs
or
pop
jg
popf
mov
js
fildll
dec
ret
mov
lahf
pop
lods
mov
js
inc
movsl
ja
rcl
pop
mov
pusha
xchg
add
pushl
pushf
mov
out
jp
loopne
push
nop
cltd
js
enter
pop
jne
sub
outsl
call
xchg
shll
ret
sbb
cltd
dec
dec
cmpsl
es
adc
into
and
and
hlt
cli
enter
in
jmp
in
xor
mov
mov
push
pop
add
or
dec
daa
jp
scas
fwait
daa
cmc
rep
das
push
inc
pop
int3
scas
mov
xchg
aam
dec
hlt
push
jge
push
mov
in
stc
stos
jl
or
stos
jle
cmc
test
ja
mov
cmpb
xchg
idivl
push
push
mov
xor
xchg
int3
stos
test
adc
mov
adc
fidivrs
js
ljmp
sbb
into
sbb
int3
lods
jae
loope
insl
lret
pusha
jb
or
mov
lods
mov
jne
mov
push
pop
adc
cmp
repz
ret
lcall
adc
je
popa
push
inc
fbstp
jnp
xlat
insb
sbb
dec
fcoms
mov
mov
or
adc
sbb
push
xchg
ret
imul
cmp
fnstcw
cmp
js
jmp
adc
fxch
mov
sub
or
shr
xor
cmp
pop
outsl
xchg
adcl
inc
popa
sub
mov
cmp
mov
sbb
sarb
jae
inc
pop
xor
xor
adc
push
cli
lock
add
xchg
imul
scas
push
mov
in
sti
xchg
loope
cmpsl
push
ds
or
out
fwait
lds
mov
and
mov
xor
aas
inc
or
jo
inc
jg
in
dec
xchg
xor
jp
push
lret
mov
loopne
test
xchg
cmp
add
faddl
nop
jns
mov
je
cmpsl
test
mov
push
test
mov
mov
or
mov
inc
pop
stos
cmpsl
jns
movsl
mov
pop
popa
pushl
pop
sub
push
repz
adc
std
test
push
pushf
dec
in
xor
add
sbb
shr
or
xchg
xor
andl
fildll
orb
shr
imul
sbb
outsb
mov
out
jns
test
cmp
and
ja
adc
popf
out
xor
push
call
cmp
xchg
addb
cs
sub
testb
icebp
mov
dec
push
rcrb
mov
xor
or
push
add
jecxz
shrl
xor
cli
scas
imul
jnp
push
sar
jns
sti
stos
aam
mov
outsl
fsubp
xor
push
iret
push
sti
dec
pop
xchg
and
jo
add
mov
dec
popf
fnstcw
push
call
and
sub
mov
adc
sub
push
je
iret
mov
mov
lds
xchg
test
xchg
nop
xor
xor
scas
pushf
xchg
dec
shll
rorl
xor
jnp
ret
and
imul
adc
mov
xor
rcl
push
mov
push
and
je
std
inc
cwtl
jae
fidivrl
sub
dec
adc
movb
sbb
jmp
pushf
loope
xor
inc
adc
ja
jmp
lock
mov
test
xor
dec
loope
rcrl
sti
mov
pop
lock
mov
scas
faddl
jno
leave
sbb
stos
rcrl
or
sub
jle
jb
ja
mov
test
out
mov
pop
stos
dec
sub
test
je
adc
or
shl
cmpsl
inc
pop
xor
xchg
sbb
in
mov
or
das
and
push
xor
icebp
mov
jge
mov
stos
in
rep
test
fisttps
pop
call
inc
clc
shlb
jb
cmp
pop
push
mov
push
mulb
pop
test
dec
push
pop
sbb
xchg
add
dec
inc
dec
dec
sub
inc
sub
pop
push
jbe
addb
mov
xchg
dec
je
gs
mov
push
or
pop
cld
add
leave
mov
cs
adc
add
roll
hlt
mov
iret
loopew
lea
adc
shrb
xchg
sub
daa
adc
lcall
lods
notb
pop
popf
lods
pop
cmp
rcll
mov
stos
dec
cmpsl
cmp
mov
xchg
std
adc
pushf
push
out
js
add
sarb
inc
inc
adc
stos
call
lcall
push
dec
movsb
jno
dec
mov
outsl
mov
mov
push
and
xchg
ror
clc
fildll
scas
inc
hlt
cmp
sbb
fldt
stos
clc
lcall
test
bound
fistps
and
mov
ret
mov
fcoml
xor
shlb
iret
insb
enter
fs
sbb
sahf
push
scas
sbb
cmp
rolb
sarb
fsts
sbb
imul
stos
dec
jecxz
add
push
movsb
dec
cmp
lods
push
into
cmpsb
dec
cmp
pop
sbb
mov
push
shll
mov
je
xchg
pop
idiv
xchg
imul
ljmp
lcall
xor
data16
fwait
out
push
pop
lahf
push
mov
sbb
push
mov
push
ret
les
mov
fildll
cs
std
sub
xchg
negl
test
les
pop
inc
jecxz
gs
jbe
jns
dec
pop
xchg
push
sub
cmp
nop
pusha
mov
pusha
enter
xchg
jbe
push
jbe
push
jo
mov
ja
stos
stos
xlat
lret
jbe
cmp
and
pop
lods
in
mov
stc
fwait
repnz
jle
lods
movsl
lock
dec
subb
pop
jnp
adcb
and
scas
dec
push
mov
pop
jb
enter
in
inc
rclb
mov
ret
dec
jb
inc
xlat
shll
jle
sub
ret
push
mov
cmpsl
mov
add
sbb
imul
icebp
xor
lds
adc
inc
pop
pushf
inc
orl
mov
mov
cmc
ds
dec
mov
lea
scas
out
imul
sbb
std
lods
mov
ret
scas
mov
jge
sub
rorl
js
inc
xchg
mov
imul
mov
pop
adc
and
and
popa
xor
cmp
jle
divb
add
out
jle
adcb
int3
lods
lds
in
xchg
cmp
push
push
mov
sub
mov
jle
imul
pop
mov
cli
rclb
pop
or
push
filds
inc
xchg
sbb
push
sti
adc
sub
leave
adc
stos
test
add
jae
das
lods
sub
aaa
sbb
jl
mov
gs
push
ret
repz
leave
mov
xchg
addb
cltd
insb
mov
in
mov
into
lret
rclb
lds
test
lock
leave
cli
enter
xchg
insl
cs
xchg
cmc
in
sub
aam
aas
lea
xchg
add
test
rcrb
mov
dec
sbb
mov
lods
sti
mov
fs
aam
stos
mov
fnstcw
pop
dec
aas
and
out
outsl
jo
xor
and
push
inc
shr
xchg
jno
clc
testb
sub
jle
mov
aas
je
lea
push
dec
mov
cs
sbb
std
add
int
stc
xor
xor
sarb
xor
lret
shll
out
outsb
mov
popl
sub
aam
fwait
xor
push
ret
adc
addl
test
cmp
popa
add
xchg
out
aaa
movsl
movsb
cmp
adc
and
dec
push
fcoml
inc
cli
je
mov
test
sub
fimull
lods
jns
xchg
test
popf
add
push
fwait
mov
adcb
inc
test
cmp
lahf
les
adc
hlt
xchg
cli
addl
fists
andb
ret
roll
jnp
scas
sbb
mov
fyl2xp1
out
aad
out
inc
jecxz
add
test
pop
adc
sti
cmp
fsubl
and
stos
mov
int3
push
sub
sub
sahf
add
imul
pop
xor
jecxz
idivb
push
pop
lds
leave
nop
das
shll
or
imul
inc
pop
adc
movsl
lret
popa
inc
mov
jp
jns
push
sub
repz
push
jno
inc
dec
arpl
int
repnz
sbb
lret
call
push
cltd
dec
fnstcw
inc
rcrb
pusha
scas
ja
in
mov
mov
arpl
popa
add
adc
push
ss
cs
xor
and
add
stos
mov
icebp
mov
int3
jo
jo
lcall
push
in
adc
sub
divb
or
scas
fsub
sbb
push
lds
pushf
xchg
mov
cmp
jns
cmp
cs
xchg
jle
xorl
or
or
ja
mov
fsubr
push
dec
jmp
addl
mov
push
out
push
mov
mov
or
xchg
movsl
lods
mov
mov
mov
mov
pushf
arpl
lock
pop
les
adc
or
inc
dec
xor
jae
add
pop
pusha
xchg
test
push
test
mov
jge
add
xchg
cmp
call
in
movsb
jmp
fnstcw
stc
mov
sub
mov
add
call
cmp
icebp
call
push
xchg
adc
movsb
dec
aas
into
cmpsb
ds
dec
into
mov
push
imul
cmpsb
lea
sub
cli
cs
cltd
out
mov
leave
lods
pop
stc
push
stos
mov
inc
out
mov
or
jmp
rol
or
or
outsl
int3
jge
mov
call
mov
push
add
cwtl
test
and
dec
xor
cli
push
faddl
stc
test
aam
cs
jbe
xchg
mov
icebp
adc
adc
ret
push
loopne
xor
sahf
imul
fidivrl
jbe
loop
leave
clc
cmp
cli
jl
pop
pop
arpl
mov
imul
jbe
jg,pn
js
mov
xor
imul
mov
push
push
movsl
icebp
mov
rclb
cmp
ja
jmp
lahf
push
insb
pop
mov
cli
fimull
xor
fldt
xchg
adc
testl
jns
adc
aam
in
or
inc
xchg
cmp
mov
sub
push
xchg
movsb
sub
cmpsb
dec
cmp
sahf
sub
fnstenv
mov
stos
xor
xor
bound
stc
and
in
xor
add
aaa
outsb
enter
or
mov
cmp
pop
mov
ret
jne
insl
adc
ret
xchg
pushf
lds
sti
out
mov
lds
add
pop
jbe
mov
sbb
dec
scas
insl
or
pop
lret
pop
jns
jo
daa
stc
xchg
cld
xor
jo
shr
in
pusha
sbb
lcall
cmp
into
mov
hlt
inc
shrb
inc
jle
ret
jp
add
push
ja
sbb
pop
mov
filds
test
and
xchg
stos
addr16
push
push
lret
add
or
arpl
add
jl
push
test
rcrl
call
jnp
negb
xchg
xchg
and
mov
in
sbb
aaa
test
popa
xchg
lea
int
imul
mov
fsts
fnstsw
xchg
popf
aad
xor
cmc
iret
cld
jns
mov
cltd
mov
aas
pop
loope
sti
and
fcmovb
enter
jmp
jecxz
in
jno
icebp
sbb
stos
push
push
mov
enter
push
sahf
out
int3
jg
lret
outsl
ret
mov
adc
fistl
jecxz
inc
sub
movsl
out
xchg
iret
orb
pop
xchg
rolb
dec
jge
xchg
adc
roll
test
and
jne
cwtl
jecxz
mov
hlt
mov
or
les
adc
sahf
inc
jmp
add
sub
mov
xchg
mov
adc
mov
fs
loopne
pop
rcrl
je
ds
mov
scas
pop
pop
into
jge
mov
and
pop
jns
jl
jns
pop
imul
inc
sahf
jnp
sbb
push
frstor
popf
outsb
cltd
xchg
pop
push
xor
lahf
test
push
dec
popa
jbe
cld
add
inc
dec
int3
add
daa
scas
out
push
movsb
fiadds
lods
pop
inc
testb
add
push
dec
and
add
fnstsw
lea
test
add
mov
mov
or
in
stos
cs
cli
dec
fildl
hlt
aas
rcll
push
xchg
lds
enter
pusha
imul
mov
in
sbb
inc
add
jmp
sbb
lahf
xor
in
ja
daa
lret
sahf
loope
mov
hlt
fistpl
clc
mov
xchg
adc
iret
pop
cmpsl
cmpsb
ja
repz
xor
sub
dec
dec
mov
sahf
or
fildll
rorl
out
stc
stos
inc
mov
insl
dec
cmp
lcall
fadds
mov
mov
icebp
rorl
sahf
mov
or
mov
popf
test
cmp
sar
push
test
sbb
fmull
mov
xchg
xor
lret
sub
sbb
ret
adc
sbb
std
fwait
mov
mov
jl
cmp
test
cmp
jle
mov
inc
in
mov
sti
jae
pop
cmp
or
xchg
ds
cmp
adc
imul
pop
pop
jecxz
dec
sub
jne
adc
popa
and
push
gs
in
xlat
sub
sub
stc
jns
cmpsl
lcall
sub
xor
aad
ror
push
mov
sahf
xchg
pop
inc
sti
shlb
ljmp
push
push
xlat
pop
xchg
out
push
loopne
leave
jge
popf
jno
inc
xchg
or
pop
mov
subl
add
mov
in
inc
jo
inc
jno
xchg
sbb
inc
dec
mov
sub
fcomip
mov
addb
cmp
repnz
leave
in
xchg
bound
stc
add
mov
inc
inc
pop
and
pop
pop
pop
mov
loope
das
mov
cmp
sub
and
insl
mov
jae
jl
dec
sbb
cwtl
ja
sub
iret
lahf
mov
in
fisubs
push
fiadds
lods
sbb
mov
mov
push
cmp
adc
cmp
push
mov
mov
dec
aad
or
sub
inc
pop
enter
push
adc
mov
lods
sub
repnz
inc
pop
push
es
fistps
push
or
sti
js
enter
bound
arpl
sbb
fstl
hlt
jg
lret
or
jp
pop
dec
fiadds
adc
aad
loope
jbe
arpl
or
rol
fldenv
and
sub
lahf
mov
mov
cmp
shrl
xor
xchg
adc
dec
roll
push
cmc
sbb
xlat
test
out
nop
pop
ds
sbb
xchg
sbb
out
and
sbb
loope
pop
mov
push
imul
lcall
mov
sbb
push
inc
xchg
push
cs
lahf
cli
loope
push
mov
mov
and
jecxz
rclb
mov
xor
sbb
test
rcl
inc
push
push
mov
popf
jge
repnz
fnsave
mov
pop
fmull
ss
adcb
push
fldt
fldt
lods
mov
ss
jo
and
test
or
ficompl
and
xchg
pop
roll
mov
push
lahf
sbb
fsubrs
movsl
imul
popf
mov
xor
inc
jle
jecxz,pn
sbb
or
sub
and
ret
fbld
icebp
mov
lcall
jle
pop
adc
or
aas
pop
call
repnz
inc
add
add
aad
dec
mov
lods
xchg
nop
scas
das
mov
push
aad
pushf
jecxz
push
push
in
push
adc
push
sub
incb
imul
inc
dec
int3
mov
or
adc
outsl
stos
mov
test
addr16
cwtl
pop
into
in
jb
subb
mov
push
xchg
mov
jl
push
dec
lock
loope
mov
xchg
cmp
repnz
push
lods
leave
shl
lods
mov
sti
mov
xlat
repz
mov
mov
in
je
insl
cmpsl
sbb
stos
xor
xor
neg
dec
addr16
outsl
xlat
push
and
popf
ss
outsl
or
sti
repz
inc
add
test
xchg
std
sub
jb
jno
sub
pop
notb
sub
arpl
leave
out
mov
lea
xor
out
xor
inc
sbb
dec
xor
xchg
sub
inc
rol
mov
ds
and
push
arpl
jb
bound
cli
sbb
fcmovne
jle
pop
pop
pop
test
mov
aas
mov
pop
pop
mov
and
xor
psrad
and
mov
xlat
sub
or
xchg
into
dec
shll
pop
xor
imul
repz
jne
and
negb
push
and
fdivrl
xor
xor
add
xor
inc
sub
and
sete
pop
xchg
sbb
xchg
or
idivl
xor
rcr
flds
sbb
gs
inc
push
in
sbb
and
fsubrl
shll
jno
adc
ds
lods
push
fisttps
jae
leave
andl
stos
jmp
pop
xchg
out
cli
sbb
fdivp
adc
lahf
sbbb
push
mov
mov
imul
fstl
sub
movsl
out
xorl
inc
and
jecxz
pop
xor
aas
cmp
aam
xchg
fnstenv
xor
out
fdivrs
in
mov
insl
pop
inc
shll
aas
push
push
cli
xchg
stc
add
jmp
bound
imul
add
dec
mov
aam
pxor
xlat
adc
jecxz
movsl
and
les
int3
xor
into
lcall
gs
jg
repz
mov
enter
fbstp
xchg
inc
fcompl
add
cmp
je
outsb
and
and
andl
sahf
mov
fimull
outsb
and
fisttps
inc
jb
push
push
or
mov
push
pop
xor
jmp
jl
mov
int3
sub
adc
mov
dec
sbb
xchg
jo
cwtl
sub
fmull
mov
mov
sahf
inc
pop
mov
xor
pop
jp
lahf
xchg
nop
xchg
insb
jb
push
push
lds
xchg
nop
pop
fdiv
pop
push
stos
push
test
adc
call
push
jnp
cmp
bnd
push
add
hlt
xchg
cmpb
add
lods
push
and
insl
es
xchg
loop
xor
add
lret
stc
cmp
xchg
bound
mov
out
push
jnp
add
dec
flds
imul
mov
leave
enter
push
sti
mull
or
les
and
pop
jecxz
cmove
lock
into
pop
inc
mov
cmp
and
mov
out
dec
pop
dec
in
shrl
push
jb
aas
xor
xor
pop
jno
mov
movlps
fs
and
xchg
fdivrp
in
fldenv
cmp
pop
je
faddl
and
imul
sbb
loopne
adc
jne
ja
lea
or
fmull
rcll
jb
xchg
je
fimuls
repz
icebp
outsb
xchg
addr16
icebp
adc
ljmp
mov
test
icebp
add
inc
pop
mov
add
test
gs
nop
aaa
add
or
outsl
push
xchg
repz
lods
cmpb
jg
lret
adc
lods
mul
shrb
inc
and
cltd
mov
rorb
fidivrs
cmpsb
pop
ffree
movsb
pop
nop
popf
mov
jl
cs
movsl
clc
lds
mov
pushl
jecxz
adc
test
cmc
adc
xor
or
or
imul
or
cld
push
es
push
jle
mov
aam
jmp
and
xchg
push
inc
jae
mov
mov
pop
or
mov
mov
stos
cmp
out
dec
mov
shll
inc
add
add
in
adc
test
aaa
and
sbb
addl
mov
into
addr16
flds
pop
loop
sub
mov
inc
repnz
aas
popf
jmp
loopne
ret
push
push
inc
or
xor
pop
int3
aam
and
and
sub
jae
add
mov
pop
fistps
adc
pop
das
frstor
fisubs
and
pop
nop
dec
in
aaa
adc
sti
xor
lret
es
xchg
mov
testb
nop
orl
int3
sub
xchg
sub
ljmp
sub
cmp
pop
std
std
xchg
jl
lds
out
inc
xchg
pusha
xchg
and
mov
mov
sub
scas
pop
int3
cmp
and
mov
or
cmp
adc
out
add
jle
mov
xor
dec
aaa
or
push
pop
lods
movsb
sub
inc
add
rorb
addb
or
gs
mov
lcall
xor
lret
iret
sbb
in
cltd
leave
push
lods
inc
fwait
xlat
and
or
mov
repz
insb
addr16
push
and
xor
mov
jg
mov
scas
aad
adc
fists
arpl
roll
and
xchg
fidivl
sbb
sub
jecxz
xor
das
mov
push
es
pop
xchg
sbb
and
mov
repnz
aad
ljmp
pop
mov
sub
js
movsb
lods
xchg
push
mov
test
mov
sarl
adc
out
gs
call
out
xchg
sti
bnd
or
mov
faddl
pop
clc
xor
dec
cmpsl
bnd
sbb
sbb
pop
xchg
shrb
filds
cmp
js
and
add
lret
or
mov
pop
leave
xor
push
add
ljmp
pop
push
fimuls
arpl
in
stos
jbe
std
lods
mov
popf
xchg
add
push
out
mov
rcrb
adc
push
ficomps
mov
mov
inc
mov
cmp
popf
pushl
xorl
dec
inc
and
xor
sbb
loop
jg
out
and
hlt
and
js
pop
jns
cmpb
push
inc
cltd
mov
jnp
or
inc
cmp
aad
mov
add
mov
mov
or
dec
sub
jl
lcall
mov
mov
sti
fwait
stos
xor
in
pop
das
insl
in
push
xor
out
inc
iret
mov
inc
es
out
and
fs
in
mov
sti
lods
and
icebp
lea
mov
fidivrs
jns
popa
iret
mov
mov
pusha
insb
xchg
sti
mov
stos
or
test
in
add
pop
stc
xchg
and
mov
push
push
bound
fsubs
leave
test
sbbb
in
adc
sbb
sbb
bound
or
nop
jae
stc
ja
sub
lret
sbb
notl
mov
pop
and
inc
imul
cmp
lods
mov
cwtl
sub
andb
push
cmpsb
leave
push
aaa
notl
repz
gs
pop
push
mov
mov
in
jle
inc
xor
xchg
add
add
push
punpcklwd
push
test
loop
test
jne
int3
xor
lods
lock
ljmp
xchg
sub
xchg
lahf
push
dec
mov
sub
jle
int
jmp
pop
xor
mov
daa
fcmovnu
mov
inc
ja
mov
cmp
fwait
cli
pop
jbe
test
push
sbb
mov
push
ss
sub
xor
test
xor
test
pop
test
xchg
sub
sub
add
cltd
xor
mov
mov
jo
lahf
lahf
sbb
pop
inc
call
add
fidivrs
xchg
sub
loopne
jb
mov
enter
mov
fwait
rorl
adc
jne
ljmp
std
mov
cmp
sub
adc
xlat
cld
mov
cmp
mov
std
mov
arpl
mov
in
jl
inc
cmp
add
dec
or
hlt
xchg
scas
out
jo
mov
add
or
shl
outsb
les
fsubs
pop
xchg
dec
lcall
pop
push
bound
out
movb
xchg
lods
les
dec
sub
dec
call
aam
popf
mov
xlat
xchg
pop
inc
out
fldl2t
and
addr16
scas
repz
arpl
gs
sbbb
push
sbb
pop
add
pop
lcall
and
shrl
jmp
leave
mov
roll
int
xchg
repz
cmpsl
pop
popa
pop
pop
mov
loope
mov
cmp
pop
sarl
add
shrb
mov
cmp
ss
outsb
fisubrl
dec
xor
or
int3
sbb
fwait
mov
push
mov
sbb
xchg
adc
dec
push
cmp
ss
stos
sbb
fsubs
push
jno
and
ret
lea
push
mov
pop
mov
jbe
xchg
adc
vpsrlq
pop
rorl
shr
stos
pop
insl
cld
mov
xorl
gs
and
jo
push
or
push
mov
in
xchg
adc
or
adc
adc
push
lds
test
dec
sarl
jnp
push
int
or
inc
inc
inc
sub
js
fisubs
loopne
in
call
mov
in
sbb
inc
loopne
push
rcr
pop
mov
and
jbe
mov
xor
out
lret
dec
mov
insl
call
push
into
fstpl
std
iret
mov
sub
jle
and
ficoml
lock
aad
and
outsl
ffree
icebp
enter
mov
out
sbb
pop
insl
negl
mov
push
js
aam
scas
loope
lds
mov
or
dec
add
loopne
sbb
xchg
divb
scas
xchg
movsb
sub
jp
sbbl
data16
cld
xor
mov
push
pop
add
bnd
cmp
inc
jecxz
xchg
mov
jmp
iret
cmp
push
pop
fisubl
leave
jno
xor
stc
xchg
inc
out
mov
gs
andb
adc
int
stc
adc
adc
aam
sub
sbbl
test
push
sahf
repnz
hlt
mov
mov
sbb
jl
loope
pop
int3
or
and
or
out
nop
xchg
mov
fidivrs
ja
jo
pop
loopne
mov
and
xchg
xor
jle
mov
cli
or
mov
test
das
bound
jbe
and
subb
mov
xchg
insb
mov
shrb
shrl
push
inc
xlat
scas
push
xor
movsl
iret
mov
dec
outsl
loope
jbe
jno
add
pop
xor
enter
lods
fwait
pop
cld
hlt
xchg
inc
dec
jb
js
mov
pop
fisubrs
hlt
fwait
xchg
mov
in
pop
shll
lock
or
insl
add
pusha
inc
int3
xor
gs
cmovne
sub
cmpsl
dec
fmulp
shrb
cmp
jnp
das
adc
jbe
int
dec
arpl
push
fwait
scas
lea
insl
pop
mov
adc
jo
out
mov
xor
xchg
enter
xchg
test
cmp
push
add
icebp
gs
je
push
dec
cwtl
adc
or
negb
fst
xor
mov
ret
mov
xchg
xchg
mov
not
aam
mov
xchg
fucomip
add
movsl
and
pushf
mov
add
or
fisttpl
std
lock
mov
xchg
xlat
push
mov
insl
mov
or
cmp
andl
mov
mov
xchg
inc
out
inc
and
stos
dec
or
enter
or
test
sbb
jae
test
test
mov
into
out
bound
sub
sbb
xor
xchg
sub
into
adc
lcall
mov
lret
stc
cs
lea
repnz
loope
adc
add
jnp
lcall
mov
jl
lea
test
add
push
sub
mov
lcall
mov
ret
lods
nop
out
cmp
mov
js
mov
sub
neg
fmull
aaa
cli
int3
add
rcll
test
dec
xchg
and
cmc
fistpl
imul
cmp
sub
test
hlt
out
loope
pushf
jmp
lahf
xchg
adc
cmp
dec
test
dec
int3
sub
mov
inc
out
dec
push
mov
ficompl
out
mov
xor
in
scas
add
cmpsl
mov
popa
mov
mov
fisttpl
or
dec
insl
mov
fwait
add
xlat
and
or
mov
int3
xchg
mov
inc
notl
pop
pop
inc
push
sbb
sbbl
enter
xchg
jae
cmp
cmpsb
jns
or
dec
fadd
xchg
cmp
xlat
xor
mov
pop
xchg
or
mov
add
lea
cmp
js
sbb
mov
pusha
xor
xchg
enter
mov
adc
jns
stc
mov
add
pop
mov
xchg
in
cmp
addl
mov
and
adc
xchg
cmpsb
dec
xchg
sub
add
inc
cld
inc
orb
sbb
mov
in
dec
in
call
mov
bound
mov
xchg
cmpsl
mov
mov
push
mov
sbb
sti
sbb
xchg
stos
push
jnp,pt
and
mov
pop
shl
aam
ja
inc
addr16
int
xchg
jo
cwtl
push
mov
adc
dec
and
xor
cmp
inc
sub
sahf
pop
mov
scas
test
shr
push
jne
in
xlat
adc
idivl
cmp
in
lds
and
out
pop
pop
jbe
lea
and
pop
lds
mov
or
in
and
cwtl
arpl
shr
ficoml
outsl
dec
xchg
mov
xchg
sarl
xchg
mov
jl
out
rorl
add
dec
imul
mov
dec
mov
jnp
call
adc
mov
adc
fisttpll
repz
inc
mov
cmpsb
push
jo
push
inc
and
int
push
dec
push
or
fsubl
sbb
inc
ret
int3
xchg
or
enter
cmp
ret
mov
cmp
mov
jp
xor
mov
and
add
cltd
mov
pop
inc
les
ficoml
lods
out
scas
push
ja
lods
inc
arpl
mov
orb
jmp
pop
and
lock
shll
stc
jl
rcll
sub
bound
or
ss
add
inc
test
jbe
hlt
mov
in
shll
cmp
sub
xchg
mov
xor
xchg
pop
imul
push
scas
pop
dec
pop
repz
in
icebp
filds
xor
mov
lds
mov
mov
sahf
mov
mov
lret
pop
mov
sub
fmull
into
roll
scas
mov
sub
leave
dec
shlb
test
xor
jae
pop
clc
not
push
aas
into
fisubrs
aaa
jne
pushf
push
cli
nop
shl
or
mov
cmp
inc
push
out
push
push
push
fwait
int3
jne
daa
pushf
mov
mov
js
xor
and
pop
testl
xchg
stos
dec
add
push
pusha
cmp
cltd
jo
jae
dec
notb
int
inc
je
fsts
repz
sti
cmp
xor
adc
or
add
lea
mov
movsl
les
xlat
scas
pop
cld
jmp
cmpsb
stos
or
addr16
xchg
push
xchg
xor
arpl
out
ljmp
cmpb
insl
and
pushl
pop
fs
mov
fs
ja,pt
mov
scas
mov
bound
mov
mov
xor
pushf
pop
les
pop
xchg
push
dec
cld
sub
ss
jns
xchg
setge
jle
jns
mov
aas
shl
xchg
mov
out
ret
jle
pop
ja
mov
mov
xchg
add
cli
shl
pop
and
ficoml
mov
mov
daa
test
lahf
ficomps
enter
pop
aas
insl
pop
xchg
or
and
popa
loope
outsb
push
fs
stc
sub
dec
imul
adc
imul
mov
xor
push
sub
pop
jmp
in
inc
test
call
inc
dec
popf
sbb
and
lock
mov
dec
or
or
frstor
inc
lds
daa
call
or
mov
or
and
bound
adc
and
mov
mov
hlt
jg
mov
adc
mov
xor
cmc
or
enter
jecxz
inc
adc
inc
and
pop
sub
out
outsb
jle
int
pop
dec
or
scas
dec
arpl
mov
hlt
adc
mov
mov
mov
xchg
cli
lock
inc
mov
jmp
sub
or
inc
cli
fsts
ja
push
ja
data16
xchg
pop
xchg
pushf
hlt
stc
mov
or
out
adc
stos
sahf
ss
cmpsl
es
cmpsl
or
adc
lret
and
repz
jecxz
mov
pusha
data16
inc
cld
in
sub
mov
cmp
imul
dec
es
or
mov
dec
shll
repnz
loope
aam
mov
mov
shrl
mov
fisttpll
jle
xchg
lea
aad
in
mov
sub
into
mov
xchg
aam
aas
loope
xchg
leave
fwait
add
out
inc
aam
pop
sarl
cli
addr16
xchg
or
nop
jg
out
es
sarb
inc
stos
ficomps
jae
mov
mov
fwait
and
push
in
dec
imul
jnp
xor
insb
js
jmp
or
ret
dec
cmpsb
and
popf
sbb
xor
mov
mov
push
sbb
jae
jle
mov
outsl
filds
jnp
jne
into
push
jge
inc
les
add
mov
or
xor
mov
mov
push
outsb
sahf
xor
mov
addr16
mov
ret
sub
dec
pushf
push
in
lea
xchg
ds
in
pushf
lahf
xor
stc
mov
xchg
jle
in
sub
xchg
and
push
mov
stc
fists
mov
outsb
dec
push
fcmovb
and
cmp
aam
movsl
dec
pop
or
movsb
push
jns
cmp
aam
mov
sbb
fiadds
push
or
fadd
test
mov
std
lahf
push
xor
outsl
adc
repz
lret
xchg
stc
ja
gs
testl
pop
and
ljmp
jl
fcomps
iret
sub
pop
pop
aaa
mov
lahf
std
adc
cld
cs
std
pop
inc
push
and
dec
xchg
jmp
jns
repz
sbb
xchg
add
mov
push
adc
push
popf
inc
xor
cld
sub
mov
gs
popl
mov
cmp
inc
fnsave
ss
mov
mov
push
fsubrp
je
sti
jnp
rorl
out
mov
fwait
mov
inc
ret
mov
and
out
popf
jg
aad
cmc
xor
sarb
mov
lcall
and
dec
push
loope
loop
decl
and
push
orb
and
xorl
outsl
push
adc
add
out
icebp
movl
stos
adcb
fisubs
pop
push
inc
enter
loope
scas
repnz
and
leave
mov
pop
mov
aas
push
push
mov
das
movsb
cwtl
out
cmpsb
inc
dec
fsts
xchg
cmp
push
scas
jecxz
pop
xor
cmpsb
xor
pop
enter
daa
arpl
aaa
adc
xchg
bound
xlat
divb
push
xchg
and
lcall
fucomp
xorb
and
mov
xor
and
pop
sbb
mov
inc
mov
sub
or
xor
push
cmp
aad
xchg
clc
data16
loop
out
lock
fndisi(8087
ja
out
popa
andb
shll
sbb
es
cld
pop
adc
icebp
ja
lods
rorb
imull
es
mov
daa
fisttps
pop
stos
scas
mov
std
cli
sbb
jmp
mov
int
sti
roll
pop
data16
jo
fisttpl
sub
xor
dec
push
sbb
jge
movl
pop
lods
cmpb
lret
xor
in
add
insb
fisubrl
mov
popf
movsb
cs
adc
movsb
adc
mov
aaa
pop
inc
orl
shrb
test
leave
clc
out
or
mov
ret
add
xor
fisubs
mov
jnp
inc
shlb
push
mov
dec
bound
sub
mov
or
adc
js
cmp
test
insl
in
mov
ljmp
mov
inc
test
xor
xor
movsl
inc
xchg
pusha
and
push
jge
aam
and
mov
xor
dec
inc
ja
or
sub
sti
push
and
loope
and
mov
test
or
xchg
mov
inc
and
push
dec
push
ret
mov
cltd
xor
insb
std
xchg
add
jb
divl
push
push
lods
in
sbb
ds
mov
out
mov
mov
insb
sbb
inc
test
jg
fs
pop
and
jno
pop
dec
mov
xor
pop
rcll
int
cmp
mov
push
into
mov
rolb
jbe
xchg
push
dec
cmc
inc
int
and
mov
push
imul
in
jo
mov
mov
mov
mov
add
out
jle
add
xorb
cmp
pop
add
repnz
pop
sbb
clc
mov
call
dec
xchg
bound
je
int3
adc
call
clc
in
lods
aaa
add
sbb
in
popf
psrld
repnz
add
fidivrs
sub
insl
adc
enter
fadds
and
or
inc
icebp
mov
jmp
btr
loope
scas
mov
push
call
pop
in
jno
jne
sahf
push
out
lods
jge
inc
mov
cwtl
cwtl
jno
adc
jns
pop
rorb
lods
xor
je
add
aad
jae
inc
loope
rolb
cmp
pop
push
fisubrs
test
adc
mov
pusha
cmpsb
cmp
jne
lea
mov
inc
pusha
xchg
pop
push
fldl
movsb
lea
sti
fsts
lods
jecxz
mov
and
nop
rclb
test
outsb
mov
bound
xor
out
sbb
cwtl
imul
leave
fimull
dec
incl
inc
into
lods
cmp
cli
popa
mov
lds
mov
adc
mov
push
adc
or
rcrl
pop
arpl
stc
leave
add
or
insb
fnstenv
or
int3
lea
jbe
repz
mov
adc
or
mov
in
popf
push
cmp
iret
enter
cli
xor
and
push
adc
movsl
ss
movsb
dec
sbb
pop
push
and
or
popf
lret
pop
push
fidivrl
xlat
pop
outsl
iret
lea
add
inc
pop
sub
mov
mov
mov
push
mov
popl
sub
lcall
inc
outsb
mov
add
xchg
cli
mov
add
fidivrs
push
xor
fimuls
cs
into
xchg
add
mov
mov
dec
popa
call
mov
bound
mov
pop
popa
dec
push
dec
mov
bound
dec
insb
dec
popf
mov
inc
test
call
pop
cli
cmp
mov
sbb
jp
xor
jb
mov
mov
clc
cmp
mov
inc
in
push
rcll
push
add
sti
cmp
push
fdiv
iretw
out
mov
cmovs
sub
sub
mov
dec
cmpsl
xchg
fs
jns
iret
pushf
push
dec
mov
lods
in
fstl
js
sbb
cmp
push
or
cmpsl
int3
insl
jns
sub
es
adc
fistl
je
js
aaa
mov
adc
jae
test
clc
outsb
enter
subl
enter
adcl
rcrl
dec
xchg
pcmpgtd
rcll
sbb
sub
mov
jae
shrb
fdivrp
pop
cltd
or
std
lahf
adc
xor
dec
mov
testl
inc
mov
sub
mov
faddl
ljmp
insb
out
hlt
xlat
cmp
mov
fwait
test
data16
cmp
sub
jae
sbb
push
xchg
outsb
daa
das
push
lcall
jl
and
testl
sahf
xor
out
iret
dec
jb
pop
and
push
not
sarl
mov
xor
ljmp
push
int3
pop
int3
and
adc
dec
mov
mov
addr16
mov
and
pop
push
cmp
in
push
push
and
xor
mov
int3
cmpb
mov
ss
push
clc
addr16
jle
inc
xchg
out
jp
or
sub
addb
mov
jmp
test
scas
xor
cmp
push
rcll
cmp
pop
cmp
and
inc
xor
ret
sbb
in
lds
xchg
fstps
fiaddl
mov
sti
outsb
push
mov
stos
xchg
shll
pop
mov
sub
and
pop
adcl
inc
mov
inc
push
jo
cmp
ds
test
pop
test
dec
enter
pop
jg
mov
mov
fdivrs
jno
xchg
addl
fldt
out
clc
ja
add
notb
hlt
fwait
sbb
sub
mov
outsb
pusha
mov
push
icebp
test
dec
inc
mov
dec
cs
push
mov
nop
dec
and
pop
adcl
xchg
mov
sub
out
test
mov
xchg
jb
test
jp
xchg
pop
aas
mov
leave
fsubr
push
or
lret
pop
pop
mov
add
int
popa
mov
sbb
push
mul
jecxz
nop
adc
pop
sahf
mov
mov
push
call
mov
adc
xchg
cmp
jp
xor
arpl
push
mov
outsb
push
movsb
mov
jl
loopne
stc
das
call
jmp
jl
pusha
sbb
mov
mov
sbb
data16
push
mov
or
sbb
mov
push
add
scas
and
mov
xchg
push
push
jg
dec
mul
mov
xchg
loopne
sub
jo
or
mov
dec
int3
pop
cmp
jg
or
shll
in
inc
out
in
dec
or
adc
mov
and
inc
add
lahf
loopne
push
in
adc
add
and
out
mov
adc
sbb
scas
rorb
xor
scas
int
fildll
pop
decb
mov
xorb
jnp
loop
mov
mov
mov
out
sub
and
data16
mov
into
mov
lahf
mov
fwait
lret
inc
mov
ret
inc
cmp
mov
add
cmpsl
push
and
pushf
dec
sbb
in
push
adc
popf
inc
cmp
outsb
xor
loope
mov
dec
xor
pop
jecxz
and
loope
not
mov
mov
imul
mov
sub
push
sub
adc
mov
sbb
fs
cmpsb
xor
ss
mov
cmc
je
jg
adc
cmp
sbb
js
lds
gs
mov
or
loop
mov
mov
lahf
dec
pop
dec
dec
test
ss
in
inc
xchg
mov
xchg
das
loop
ret
pusha
xchg
loope
out
scas
sub
cs
jns
sbb
lds
dec
xchg
pop
cmc
xchg
rcrl
jp
lock
or
imull
sub
cli
int
adc
mov
cmpsl
mov
xchg
ja
sbb
sub
data16
jecxz
jns
inc
scas
xor
or
call
push
adc
inc
and
daa
sub
jno
clc
push
pop
sbb
repnz
lods
xor
push
cwtl
icebp
sahf
cwtl
xchg
in
xchg
xor
sbb
mov
and
pop
mov
mov
das
jne
int3
scas
or
sub
push
jae
mov
push
inc
push
push
sbb
xor
pop
lcall
fwait
add
lods
into
leave
or
cld
mov
push
out
fsubs
mov
into
pop
jle
iret
pop
fstpl
mov
pusha
lahf
jno
cmpl
hlt
xchg
inc
lea
jns
adc
enter
test
or
fnstenv
aas
and
ljmp
pushf
jns
push
rolb
sub
jo
push
jp
xchg
clc
inc
mov
lods
or
shrb
notb
push
call
test
xchg
test
lds
hlt
push
push
pop
jl
mov
xor
dec
faddl
jmp
iret
jno
add
jno
mov
repz
and
push
into
xchg
fnstsw
subb
or
inc
stos
dec
out
loopne
jl
adc
pop
xchg
add
out
data16
add
xor
cmp
sbb
jmp
out
and
jns
scas
jae
imul
enter
loopne
or
insl
lcall
lret
mov
and
jo
sub
dec
mov
sub
fstp
sub
dec
mov
addr16
insl
mov
orb
xchg
mov
push
popf
sbb
imulb
xchg
mov
sbb
les
sub
xor
insl
fisubrl
jecxz
pop
push
and
add
mov
mov
pop
or
ss
jae
fcoml
adc
rolb
cltd
ja
push
push
adc
lea
inc
int
ss
mov
add
fstl
ret
and
mov
xchg
scas
xchg
jmp
repnz
add
fildll
mov
adc
xchg
test
sbb
cmp
push
sub
out
sub
mov
js
dec
pusha
daa
aas
stc
sbb
into
ja
imul
push
sub
aas
nop
jl
fstps
cmpsb
ljmp
incl
and
mov
xchg
push
or
sub
ss
sbb
xchg
icebp
data16
sahf
cld
fnclex
push
aad
inc
xor
repnz
xlat
push
bound
fcmovne
lret
fists
js
adc
lret
lret
pushf
add
xlat
xor
inc
loope
aas
div
mov
sahf
sub
fwait
mov
mov
lret
dec
repz
jne
cmpsl
bound
nop
push
loopne
jo
jle
jb,pn
and
pop
leave
and
inc
insl
push
imul
mov
mov
andl
add
rorl
mov
jne
mov
push
aad
push
mov
fnstcw
fimull
das
jmp
je
cs
xor
mov
mov
dec
lods
mov
mov
imul
xchg
dec
pop
jnp
insb
cmp
cmp
shlb
or
xor
sbb
push
sbb
les
dec
xchg
outsl
cmp
loope
mov
xchg
xchg
cmc
jnp
sub
icebp
mov
add
les
rcll
push
push
and
hlt
pop
xchg
je
stos
loopne
out
pop
dec
adc
bound
adc
pop
lea
jg
dec
in
incb
mov
fs
dec
shr
cmc
jae,pt
xchg
js
pop
mov
repnz
push
cli
fidivrl
or
mov
in
adc
and
xor
loopne
mov
fbld
imull
rcrb
push
adc
sub
jge
fistpll
mov
fdivrl
loopne
or
mov
cmc
inc
out
dec
mov
mov
pop
outsb
fstpl
test
cmp
push
loop
dec
mov
mov
fstp
popf
mov
pushf
aad
in
sbb
enter
inc
movsb
lods
sbb
enter
mov
or
jmp
test
ja
nop
mov
mov
xor
test
add
jmp
sub
rorb
adc
popa
jl
push
adc
inc
popf
into
int3
mov
clc
test
jecxz
in
in
push
cmp
movsb
inc
cltd
add
sub
cld
aam
mov
into
iret
sub
lahf
aaa
and
test
mov
push
jo
loopne
test
shll
lods
repnz
mov
add
outsb
scas
cmp
or
adc
cwtl
int3
mov
mov
outsl
pop
and
jmp
mov
sbb
jae
adc
mov
rcrl
jg
xchg
pop
inc
inc
push
jns
popa
mov
subb
lea
sbb
aaa
inc
jne
sub
sub
stos
xor
int
push
int3
jo
jne
adc
xchg
push
and
or
xor
jmp
push
push
mov
or
sbb
jne
int3
adc
in
lahf
inc
mov
mov
adc
mov
xchg
cmp
pop
test
sub
inc
cli
in
xchg
les
pushf
sbb
stc
rcrl
fstps
mov
jmp
aaa
iret
icebp
cld
les
arpl
inc
lahf
negl
xor
and
stos
lret
popa
lahf
aad
push
std
addb
movl
jae
mov
inc
adc
push
mov
xchg
or
in
repnz
pop
adc
sbb
ror
repz
sub
and
mov
je
sub
fists
dec
mov
push
jl
sbb
cs
jnp
test
mov
pusha
jne
aam
adc
xchg
push
mov
inc
pusha
dec
pop
push
sub
into
out
sar
cmc
jmp
xchg
xor
mov
pop
jae
push
xchg
and
pop
add
popa
sbb
out
fwait
out
out
sub
ss
mov
mov
pop
fucomp
std
icebp
ljmp
jns
and
push
ficomps
cs
movsl
or
loope
je
sbb
mov
add
cmpsb
push
sbb
cmpsl
enter
ds
jo
scas
ljmp
jb
cwtl
or
ljmp
les
ljmp
sbb
loope
push
jle
sbb
pusha
dec
out
std
enter
loope
pop
js
je
arpl
scas
add
rorl
imul
inc
jb
push
or
push
je
popa
int3
mov
test
cs
std
jp
jae
call
xor
mov
inc
stos
cli
push
mov
movsb
fstps
mov
sahf
push
jl
and
faddl
mov
out
aad
xchg
dec
push
prefetchnta
jle
sub
sbb
out
push
add
sbb
mov
in
daa
and
dec
gs
stos
jo
push
xor
mov
aad
lods
lret
or
cmp
mov
daa
jecxz
cli
mov
inc
cmp
repz
stc
fstl
xor
pushf
or
mov
lods
sahf
sti
mov
ljmp
cltd
jno
and
lea
mov
imul
das
cmp
push
cmp
mov
or
arpl
xchg
mov
jbe
and
and
clc
or
and
sub
sub
and
sub
or
cmp
test
sbb
pushw
loope
and
pop
fldt
mov
and
loop
xchg
popa
or
and
and
cs
clc
fildll
add
jecxz
loop
pop
lret
ja
insl
push
xchg
sbb
jle
imul
sbb
xor
mov
arpl
inc
lret
shlb
jge
pop
jge
xor
jns
dec
orl
das
sbb
or
cltd
flds
aad
js
icebp
in
outsl
add
xchg
push
ret
sub
ljmp
mov
nop
sbb
mov
dec
mov
sahf
lahf
lret
repz
xor
mov
scas
sti
arpl
das
mov
inc
adcb
ud1
dec
jnp
and
js
xchg
jae
gs
movsb
xor
mov
test
jnp
and
mov
scas
in
cwtl
movsb
inc
cmpsb
jbe
or
not
pop
inc
pop
and
aas
and
imul
loop
pop
iret
pop
sbb
addr16
add
inc
xlat
push
cmc
adc
test
inc
adc
nop
push
pop
outsl
loopne
mov
sbb
int
loopne
mov
or
divb
fwait
mov
int3
xor
adc
lret
cwtl
pop
cltd
cwtl
rcl
mov
and
es
insb
ds
cmc
push
outsb
andb
stc
lahf
iret
out
sbb
out
call
in
cwtl
rorb
jbe
loopne
ret
or
mov
fisttpl
pop
leave
movsl
mov
into
cld
mov
lret
stos
pop
aam
roll
cs
mov
int3
pop
pop
loope
mov
mov
out
push
add
push
roll
out
lret
cmp
fdivs
mov
add
dec
pop
pop
mov
in
mov
std
inc
dec
mov
mov
lea
xchg
outsl
insb
iret
mov
push
mov
shlb
cmp
sahf
lods
adc
sub
xchg
leave
adc
add
push
je
cmovns
lock
xchg
roll
xchg
cmp
aaa
fsts
imul
out
fwait
inc
fmuls
ror
add
stc
daa
adc
aam
sub
fcoml
sub
nop
aaa
das
add
jmp
cmp
cmp
mov
ret
andb
hlt
shrl
push
outsl
fcompl
das
push
mov
addb
jmp
adc
outsl
adc
out
pop
mov
fst
adc
xor
adcl
mov
lods
push
popa
fnstcw
xor
pop
inc
jmp
dec
decl
jbe
push
movsl
jg
aam
loopne
ds
inc
pop
push
outsb
pop
js
pop
mov
test
aad
imul
xchg
cmpsw
ret
idivb
fdivrs
xor
leave
inc
roll
push
add
inc
sti
loope
push
lret
lock
test
ss
mov
stos
add
sbb
icebp
mov
mov
mov
ret
clc
pop
out
dec
push
repnz
mov
mov
xchg
xor
add
fbstp
pop
les
pop
add
outsb
and
sub
xor
pop
dec
mov
rclb
push
inc
mov
imul
cs
cld
loopne
mov
in
iret
fidivl
out
sbb
lret
pop
int3
push
jno
bound
dec
inc
fistl
xchg
ljmp
sub
call
rcll
add
and
stos
in
pop
mov
cmp
daa
or
stos
mov
icebp
adc
dec
and
fs
cmp
inc
jno
rcrl
hlt
stos
push
addr16
dec
cmp
jbe,pt
sub
push
sub
xchg
jae
jno
mov
mov
out
push
std
mov
pop
ret
jo
push
cmp
adc
js
dec
fildll
dec
push
mov
push
push
mov
push
add
mov
xor
fcompp
xor
fimull
das
iret
mov
xchg
sbb
fcompl
pop
rcll
adc
jp
mov
inc
fistl
pop
arpl
push
out
cmc
sub
cmp
pusha
test
outsb
dec
lds
mov
xchg
xor
es
sbb
int3
jmp
call
fimuls
arpl
pop
cmpsl
push
push
xchg
int3
xor
arpl
std
aad
movsl
cmp
or
lret
push
aam
subl
aaa
cld
mov
sub
jns
mov
pusha
fcmovnu
clc
or
out
mov
fistps
inc
adc
jno
mov
cmp
inc
ret
mov
cltd
loope
push
in
stc
in
jge
jbe
cwtl
sbb
sahf
jp
push
inc
pop
jae
sub
mov
add
nop
ljmp
add
pop
sbb
adc
mov
xlat
and
adc
std
cmp
mov
shr
outsl
bound
psubsb
dec
xchg
dec
test
cltd
dec
movsb
es
das
sbb
out
cmp
add
mov
orb
jae
ja
mov
leave
mov
mov
pusha
pop
icebp
push
mov
arpl
sbb
xchg
test
adc
int
xchg
pop
lcall
jle
mov
xchg
jns
xchg
out
jl
lret
in
call
fbld
sub
popa
jb
mov
hlt
push
jne
sbb
test
nop
cld
nop
repz
push
inc
mov
dec
xchg
push
sahf
lret
repnz
cmpsl
mov
jbe
pushf
inc
insb
out
in
xchg
lds
adc
jns
push
mov
inc
fstps
into
je
das
dec
xorb
sbb
movsb
or
jecxz
sub
cwtl
cwtl
ja
pop
xchg
mov
cmc
lret
xor
mov
jle
add
test
dec
xorl
insb
loope
pushf
xor
sahf
jno
cmp
sub
and
cmpsb
ss
cmc
sub
or
gs
aaa
out
test
mov
sti
test
push
insl
or
mov
and
cwtl
pop
mov
jnp
and
and
in
mov
sbb
jno
in
mov
or
mov
add
int3
dec
pop
mov
in
pop
pop
push
mov
rolb
pop
scas
or
mov
jns
mov
sub
pop
mov
push
mov
mov
or
ds
jecxz
and
inc
push
les
add
push
xor
fisttps
jmp
fmuls
stc
or
cmp
in
clc
jmp
ret
adc
cmp
push
mov
sub
jecxz
cmpsl
aam
mov
mov
sub
addr16
bound
push
mov
lds
jb
push
in
push
fcomip
xchg
pop
insb
push
adc
roll
push
dec
mov
and
mov
sbb
out
arpl
xor
dec
pop
mov
lea
xorl
mov
cmpsb
mov
in
inc
jns
sub
mov
movsb
mov
lods
xor
stos
push
jo
or
and
daa
mov
es
jp
jmp
stos
mov
xchg
or
pop
adc
loop
lret
lret
out
cltd
pushf
sub
fmul
mov
iret
fimuls
cmp
pop
mov
push
mov
mov
xchg
lods
cwtl
lds
push
mov
ret
test
jb
cmp
popa
mov
or
xchg
add
xchg
cmpsl
repnz
dec
sbb
ds
sub
scas
pop
scas
push
xchg
xlat
jbe
out
ror
xor
cli
pushf
vprotq
sbb
sbb
repz
cmc
decl
xchg
jecxz
notb
aad
nop
rcll
sub
rcrl
xor
lods
sbb
movsb
inc
ds
dec
mov
test
sub
cs
sub
mov
sbb
popf
xchg
pop
mov
ret
daa
ja
pop
sbb
sbb
pop
ret
inc
pop
jb
mov
pop
insl
dec
xchg
nop
int3
xchg
inc
loopne
stos
pop
loope
jbe,pn
into
sub
lods
jns
jle
leave
ret
rclb
in
sbb
jp
stos
pop
mov
pop
xor
cmpb
mov
mov
orb
insl
sbb
outsl
and
dec
mov
std
outsb
inc
dec
clc
push
pop
cmp
movd
pop
out
or
dec
adc
ljmp
or
aaa
cmp
cmpsb
popf
test
movsb
cmp
mov
sbb
pop
mov
push
xor
push
cltd
pushf
and
adc
movsb
jb
mov
aam
test
mov
push
xor
adc
hlt
push
jl
repz
cli
xchg
mov
adc
addb
jmp
adc
mov
sbb
decl
aad
mov
dec
imul
or
repz
push
addr16
add
inc
xor
xchg
adc
xchg
movsb
jmp
dec
jbe
pop
fadd
cmp
xchg
sbb
pop
cmpsb
stc
and
rolb
or
cld
fsub
loop
inc
rol
and
xor
mov
addb
xchg
xchg
push
int
pushf
mov
les
xor
add
mov
jne
and
lahf
push
mov
jge
jmp
sub
gs
adc
in
sub
or
repnz
cmp
adc
and
jno
mul
sbb
cmp
rcrl
pop
es
out
mov
adc
popf
xchg
mov
int3
mov
jae
hlt
loope
insb
fcmovbe
pop
out
cltd
rcrl
mov
fcmovnbe
push
outsl
dec
cli
lds
fimull
rorb
sbb
leave
sub
mov
xor
orl
xchg
mov
imul
pusha
stc
push
int
mov
inc
aad
mov
and
dec
cmpsb
shrb
out
popf
push
mov
add
cmp
dec
or
ljmp
jne
sbb
push
dec
lods
outsb
inc
add
in
ljmp
pop
push
pop
cmpsb
ljmp
push
mov
das
popl
mov
push
orb
nop
xchg
ljmp
in
cmc
cld
add
cwtl
std
mov
in
mov
mov
pop
adc
scas
out
sub
jmp
cmp
sbb
mov
out
data16
cmp
inc
movsl
xchg
aas
insl
enter
mov
shl
int3
sahf
push
pop
xchg
xchg
add
and
xchg
inc
call
sti
imulb
cs
scas
lret
call
aaa
lds
push
cli
aas
testb
enter
xchg
les
lret
cmpsl
xor
mov
shll
jge
cmpsl
out
fildl
lahf
movsb
cwtl
pop
jo
lds
into
sub
inc
inc
mov
sub
mov
pop
cli
inc
jle
mov
ja
aad
xchg
pop
cmp
movsb
mov
out
sbb
xor
jae
lcall
sub
mov
mov
mov
add
aas
movsl
mov
outsb
add
dec
push
and
mov
cmc
mov
test
es
dec
mov
adc
into
enter
or
cmpsl
negl
movsb
cli
sub
jle
fsubs
jge
sub
xchg
lahf
int3
insl
ljmp
js
mov
cs
lds
sbb
or
shl
dec
js
xchg
mov
pop
push
dec
loopne
fisttpl
add
pop
gs
popf
cwtl
inc
sub
sbb
pop
imul
jmp
fs
jle
bound
cmpsb
jne
adc
mov
xor
jg
and
inc
push
and
and
dec
mov
dec
add
inc
pop
mov
inc
jmp
movsb
pushf
sbb
hlt
xlat
jno
dec
sbb
ficompl
popa
mov
into
cmp
pop
jno
xchg
repz
xchg
adc
dec
lret
pushf
push
pushf
or
cmp
mov
or
sahf
or
add
xchg
iret
inc
sub
loopne
dec
in
popf
ret
cmc
gs
pop
stos
cs
add
test
shll
call
inc
xchg
pusha
jne
orl
movsl
xchg
push
adc
in
retw
bound
jecxz
xor
mov
xor
dec
nopl
mov
add
push
cmc
and
movsb
in
in
leave
sub
fnstsw
outsl
mov
pop
cli
push
repnz
adc
jns
mov
fdiv
mov
lahf
out
sbbb
jo
dec
cltd
inc
fidivs
cmpsl
add
jle
cmp
mov
adc
cmp
std
sbb
std
dec
mov
push
fstp
iret
xchg
out
xor
call
jb
pop
les
mov
outsb
out
mov
cmc
aaa
xchg
mov
inc
es
movsl
xor
aaa
dec
push
sub
dec
scas
mov
sub
aam
pop
dec
fwait
imul
and
jle
adc
paddq
mov
xor
sahf
push
rolb
xor
andb
pop
mov
pop
mov
push
mov
xor
decl
cmp
test
sbb
lods
aam
mov
mov
adcb
push
je
outsb
bound
sahf
clc
push
xchg
out
stos
repz
in
shll
jae
lds
jb
mov
adc
rclb
pop
pushf
adc
fbstp
lods
scas
and
shll
scas
sub
mov
cli
cmpl
mov
mov
sbbb
sub
inc
mov
dec
jno,pn
sahf
rcrl
mov
mov
mov
pop
fbstp
negb
cmp
cmpsl
imul
fs
movsl
outsl
dec
repz
inc
andb
add
add
inc
inc
inc
clc
fdivrs
push
pop
push
shrb
call
xchg
into
loop
or
dec
shlb
lret
or
lock
push
xor
xor
push
ret
sub
in
ljmp
outsl
mov
pop
xor
add
xchg
popa
fidivl
add
or
inc
pop
mov
jg
or
fwait
ja
push
mov
inc
lock
call
push
mov
loop
add
pop
imul
std
push
inc
add
xor
mov
aad
jae
test
cmp
push
pushf
clc
imul
js
out
jns
pop
mov
cmp
test
and
push
dec
aam
mov
clc
test
xor
jle
arpl
mov
cmp
xor
xchg
dec
mov
sbb
or
out
outsl
push
dec
xchg
or
scas
pop
or
xchg
or
aam
pop
icebp
jne
pop
push
insl
enter
lds
and
xor
leave
shlb
ljmp
xchg
and
bound
test
mov
pop
lea
aas
je
jge
out
fistpl
mov
mov
fisubrl
xchg
rolb
cmp
loop
mov
out
or
jle
popf
popa
lock
fdivr
subb
dec
stos
pop
or
leave
push
push
fidivl
mov
mov
add
add
push
stc
lods
rolb
sub
paddd
xor
adc
into
pop
or
call
dec
sarb
imul
cmovne
and
test
divb
cmp
xor
push
test
sbb
lcall
cmp
push
mov
clc
jp
shll
push
push
movsb
mov
scas
clc
push
push
insl
pop
fwait
lock
mov
pop
outsb
rclb
xlat
stc
jmp
push
xor
pop
and
mov
push
push
push
add
sbb
or
or
movsl
xor
dec
xchg
inc
or
fs
xor
xor
aam
es
jb
ja
sbb
pop
daa
in
xor
adcb
mov
and
xlat
test
cmp
cltd
inc
mov
pop
sub
movsl
xchg
cld
shll
and
jle
stos
int3
sbb
add
arpl
lret
pop
lret
xchg
push
add
or
add
out
push
sub
std
dec
inc
adc
sbb
dec
inc
daa
xor
imul
mov
add
orl
mov
data16
addr16
push
out
sub
into
mov
jae
insl
pusha
push
jne
adc
es
sub
add
je
xor
andl
pusha
add
leave
lock
sub
pop
dec
iret
mov
popf
dec
cmp
xchg
jo
stc
mov
les
pop
add
jno
jle
int
dec
mov
mov
sti
or
in
jp
dec
xchg
shll
out
jno
push
push
hlt
mov
pushf
sbb
fcomp
jl
cwtl
pop
mov
std
lahf
fdivr
shl
mov
fwait
add
gs
dec
or
push
or
fsubr
adc
test
mov
jns
add
mov
jp
cmp
ja
dec
jno
add
inc
lods
add
inc
push
xlat
add
push
insb
mov
inc
sbb
push
adc
jg
inc
lret
xor
cli
jecxz
lock
loopne
pop
jne
outsb
jg
aam
lods
aad
fwait
push
pop
dec
push
nop
push
jne
out
fwait
clc
adc
pop
je
iret
cltd
push
dec
push
test
std
mov
lds
dec
sub
push
mov
mov
push
push
js
inc
aas
sbb
jle
sub
sub
mov
mov
jge
and
orb
or
mov
jp
movsb
sub
lds
in
push
in
mov
jecxz
ss
fs
add
test
or
mov
pop
jno
mov
aas
jmp
sub
pop
push
repz
test
push
jle
sbb
mov
inc
mov
loope
push
enter
pop
stc
xor
xor
cli
xchg
push
aam
stc
fildll
hlt
add
addl
mov
ljmp
mov
mov
adc
mov
xchg
push
inc
mov
arpl
test
mov
add
nop
cmpsl
xchg
lahf
and
push
xchg
sub
mov
clc
daa
pop
xor
sahf
sbb
ljmp
jne
sub
movb
xorl
and
xchg
ja
jmp
int3
int
dec
imul
mov
outsl
ljmp
sahf
inc
insl
in
mov
scas
das
push
in
loop
daa
daa
jmp
jmp
repnz
pop
xor
lods
and
stos
int3
xchg
add
imul
bound
mov
pop
cmc
xchg
xchg
inc
and
scas
outsb
xchg
adc
mov
xchg
push
fimull
cmp
ja
addr16
iret
xchg
jecxz
loop
aad
repnz
testl
gs
in
loopne
mov
int
sub
loopne
cmp
ret
or
push
std
adc
mov
add
and
push
enter
insl
in
cmp
aam
loop
dec
or
ret
aam
xchg
lret
test
gs
jmp
pop
push
arpl
outsl
xorl
lods
cmp
inc
push
and
pop
jo
or
iret
ds
or
in
mov
cmp
movsl
fs
inc
xchg
sbb
out
or
int
lods
mov
pop
notl
sbb
jo
and
mov
nop
aam
aaa
sub
mov
jmp
loop
popf
jns
inc
and
das
pop
pop
mov
lret
or
sbbl
cmp
and
xor
push
out
add
out
cli
into
push
pop
push
jmp
imul
pop
es
pop
cltd
in
sub
sub
sbb
xlat
pop
pop
aas
sets
xchg
jg
and
out
rolb
aam
sbb
push
dec
pop
addr16
jo
test
ret
mov
cmpsl
sub
rcr
sbb
popf
mov
int
jo
stos
inc
pop
jns
idivl
jp
pop
dec
add
int3
out
outsl
add
mov
insl
clc
fstl
cmp
mov
mov
xorl
jne
xor
inc
or
cltd
or
mov
mov
addr16
jmp
fxch
icebp
fsubr
fcoml
pushf
popa
cld
out
cmpsl
xor
bound
add
and
gs
pop
pop
mov
jl
aas
es
cmc
xchg
push
adc
adc
repnz
mov
pop
lea
sti
mov
xchg
mov
mov
fldcw
in
sub
add
dec
adc
xchg
cli
mov
js
cs
sbb
rolb
adc
cmc
sahf
pop
jb
ja
xchg
imul
insb
notb
ret
or
ret
inc
out
daa
xor
loop
mov
jge
pop
ja
test
dec
jl
test
sub
sub
ror
lret
iret
sahf
icebp
fdivl
loop
push
push
adc
stos
int3
push
cmpsl
in
ror
cmpsl
outsl
cmp
rcll
xchg
jmp
xor
or
test
xchg
and
call
mov
iret
orl
and
in
mov
pop
and
fucom
mov
push
sbb
les
idivl
or
gs
and
dec
dec
pop
mov
mov
cltd
mov
jnp
mov
orb
fisttpl
repz
sub
stos
das
inc
fcomps
add
pop
and
xor
cmpsl
shll
jo
jp
pop
push
push
movsb
adc
mov
out
adcl
dec
out
inc
and
mov
test
test
jle
sub
in
ljmp
inc
mov
jne
or
outsb
daa
gs
and
sub
mov
add
mov
cmp
out
sbb
popa
jmp
xor
popf
jmp
add
mov
mov
das
cmp
pop
cmp
call
fcmove
mov
mov
insl
sub
sbb
inc
mov
mov
rolb
sbb
sub
and
aas
push
cmp
aaa
mov
mov
xchg
mov
pop
pop
jl
fadds
fadds
jo
cld
inc
push
les
icebp
outsl
jmp
insl
cmpsb
push
mov
or
xchg
or
cmp
and
push
mov
scas
inc
pushf
fucom
shrd
rcll
xor
inc
push
addr16
nop
pop
into
insl
or
popf
sarb
inc
xchg
mov
fcmovnb
fistps
sub
cmp
shll
cmp
cmpb
nop
inc
mov
fcomip
xchg
pop
adc
dec
hlt
jle
xor
jg
xchg
push
xchg
pop
inc
pop
jp
push
mov
push
in
sarl
stc
or
adc
xor
pusha
sub
rorb
test
nop
add
sub
inc
ficomps
cwtl
imul
in
stos
in
dec
movsb
sbb
jno
jle
sbb
lock
mov
pop
adc
std
or
inc
xor
jp
sub
push
clc
dec
mov
and
and
test
sbbl
or
adc
icebp
dec
lahf
sti
jne
jmp
sbb
or
adc
adc
mov
push
dec
stos
inc
pop
call
lret
movsl
gs
icebp
add
lods
pop
shll
push
mov
gs
jo
sbb
lcall
sub
pop
jnp
sbb
jge
or
jl
mov
push
inc
aas
mov
ret
mov
fs
test
aad
push
arpl
test
lahf
fbld
inc
cmp
jecxz
push
cmp
pop
push
push
push
enter
xchg
ljmp
test
fwait
lock
sub
sar
ror
int3
add
adc
fs
or
aaa
popa
sahf
or
or
lds
pop
outsl
test
or
lock
cmc
sub
add
fcomps
repnz
call
pop
mov
sub
sti
xor
aam
dec
pop
in
arpl
cmp
imul
mov
out
dec
imul
fsub
cmpl
lods
dec
mov
sub
lea
cwtl
out
lods
sub
dec
loope
bound
daa
movsl
mov
into
jecxz
push
js
xorb
jg
and
lods
orl
sahf
incb
push
sbb
ljmp
sar
inc
pop
sti
test
push
jbe
movsl
pop
lret
cld
mov
fsub
xchg
dec
push
mul
or
insb
jo
sbb
icebp
filds
sub
fcomps
lock
pusha
adc
das
leave
mov
jb
shr
jno
push
pop
dec
mov
test
movsb
out
jae
addr16
mov
push
repz
aam
add
cli
push
jae
in
push
xchg
push
or
adc
mov
enter
push
test
lahf
mov
fst
jne
les
jmp
mov
xor
pop
cli
std
inc
int3
aas
xchg
cmpsl
adc
bound
pop
ret
out
je
mov
jnp
adc
loope
sbb
sub
mov
push
mov
push
jg
pop
in
push
rcll
aam
stc
xor
jae
xorb
fdivr
imulb
std
pop
mov
scas
dec
fsubrs
and
cwtl
stos
and
jmp
std
cltd
repnz
jp
adcb
pop
xor
pusha
sbb
xor
mov
push
and
lahf
or
xor
dec
adc
es
stos
and
cmc
fadds
repnz
sbb
mov
dec
push
inc
insl
scas
pushf
adc
jns
in
lds
adc
cltd
pop
repnz
pop
push
sbb
addr16
cmp
adc
lcall
lods
dec
hlt
xor
scas
vmaxsd
push
cwtl
push
sub
aad
push
cmp
adc
adc
cli
cmc
fsubs
pop
inc
mov
addb
push
mov
sub
cmp
jmp
inc
dec
jb
es
jno
cmp
mov
xacquire
test
lock
cltd
sbb
jmp
andb
int3
add
dec
movsl
out
sub
das
int
cmp
pop
pop
in
pop
out
dec
lret
dec
push
cmpb
outsb
mov
aaa
cmp
fidivrs
xor
sbb
mov
movsl
jb
sub
pusha
cli
test
sbb
adc
jle
pop
mov
test
in
jl
jb
sbb
sbb
pop
jne
push
mov
lods
push
pop
cld
cmp
cmpsb
test
and
ret
mov
jno
cwtl
idiv
and
pop
cld
pop
add
ljmp
in
ljmp
imul
es
daa
add
or
mov
mov
fstps
sbb
cwtl
out
leave
rcl
aas
sub
sbb
mov
inc
xchg
repnz
addr16
sub
and
fnstcw
and
xchg
enter
jecxz
cmp
nop
orl
subb
sti
popf
jge
inc
scas
pop
adc
in
xor
push
loop
adc
mov
xchg
in
jne
add
aas
and
mov
xchg
xchg
out
les
fstps
jbe
inc
push
push
imul
test
mov
xor
test
and
push
inc
repz
ds
jno
or
xor
enter
test
test
mov
dec
bts
jecxz
scas
and
leave
xchg
and
orb
jp
pop
push
jge
in
fs
jo
xchg
mov
inc
mov
je
xchg
cmp
xor
dec
test
fdivrl
add
je
pop
jle
enter
and
stos
test
adc
xor
jbe
gs
mov
or
mov
test
and
and
clc
mov
das
cmpb
mov
xchg
orl
jbe
add
pop
adc
mov
psubusw
lsl
mov
xor
js
fdivrs
xor
push
xchg
adc
jbe
adc
popf
out
pusha
pop
loopne
jno
test
sub
mov
mov
cmovg
and
or
mov
xchg
shlb
jo
mov
inc
xchg
push
popa
sub
push
andl
iret
xchg
test
xchg
pusha
pop
ljmp
sbb
test
cs
ss
pop
clc
jnp
outsl
cmpsl
and
xchg
jg
push
test
jmp
stos
jo
or
push
ss
inc
cmp
xchg
inc
jae
inc
xchg
mov
fs
push
fwait
mov
push
jae,pn
sbbl
mov
dec
fcmove
xor
jne
jp
jns
xchg
push
mov
sbbl
sbb
fs
push
in
push
and
cmp
movsb
mov
cmp
xchg
orl
into
dec
scas
mov
mov
adc
jmp
dec
pop
movsl
jecxz
lock
shrb
fwait
or
aad
mov
sub
popa
push
adc
or
mov
xchg
nop
aaa
pop
aas
fcmovnu
xchg
jno
fcmovb
lcall
push
and
sbb
or
sbb
lahf
pop
in
outsb
out
push
je
ds
dec
mov
push
mov
pop
lret
sub
or
add
dec
jl
sub
xor
pop
repz
inc
loop
mov
push
or
in
cmp
sbb
leave
push
sbb
sub
divb
mov
scas
pusha
shl
loop
and
xchg
scas
or
lods
and
cwtl
mov
pop
jmp
xchg
fcmove
inc
jmp
pop
mov
xchg
rep
iret
dec
insb
fstpt
aad
add
xchg
pushf
std
mov
jecxz
lret
das
push
das
bswap
adc
cmp
xor
and
xor
push
inc
xlat
pop
xchg
sbb
jno
cld
js
adc
loope
mov
xchg
jnp
push
negb
dec
inc
sub
das
inc
bound
das
loope
hlt
test
loopne
int
ret
xchg
cmpsb
and
inc
ss
sub
xor
lret
jo
faddl
les
mov
push
pop
mov
sahf
fwait
and
inc
xor
loopne
outsl
js
mov
loop
dec
imul
and
mov
cli
xchg
sub
xchg
in
mov
ja
xlat
insl
ret
out
pop
push
insl
aam
shl
mov
push
adc
jae
xor
leave
add
mov
jle
jno
scas
mov
in
mov
loopne
sti
sub
mov
mov
sub
adc
jecxz
jg
adc
je
fs
xor
sub
stc
sbb
sti
xchg
sub
test
ret
iret
in
dec
dec
data16
mov
es
push
loop
add
lret
push
adc
jmp
out
repz
repz
push
cmpsl
mov
jne
add
xchg
fwait
mov
sbb
lods
lret
pop
mov
jo
lret
pushl
insb
lods
xlat
sbb
fistl
dec
mov
fstpt
call
jne
pop
shlb
or
testl
scas
stos
cmp
inc
and
mov
insb
adc
and
and
in
and
push
jmp
sbb
adc
int3
stc
push
in
js
inc
movsl
xor
cmp
imul
xlat
aas
adc
fsubr
adc
mov
mov
sub
cmpsl
loop
mov
fisubrs
push
lea
mov
jecxz
movsb
ret
scas
ret
call
mov
sub
pop
push
sbb
insl
dec
and
and
and
sbb
repz
aas
adc
fistpll
push
jne
push
shl
ret
or
popf
xor
mov
subb
dec
out
rcrl
scas
cli
icebp
cmp
pop
jmp
jl
out
sbbb
mov
rcrb
test
xchg
outsl
enter
jo
imul
add
shl
push
push
in
out
lret
fldenv
std
pop
pop
enter
fiaddl
and
mov
xor
and
add
dec
sub
sbb
fwait
jne
test
enter
aad
cmc
or
add
xchg
icebp
dec
std
insb
shl
jae
in
pop
push
stos
mov
aaa
push
or
pushf
xor
cltd
in
adc
addl
cmp
repz
inc
nop
jg
mov
pop
and
scas
jg
lahf
push
or
popf
jle
pop
cmp
clc
sub
fs
dec
cmp
push
add
xor
mov
cmp
fmuls
sub
mov
loop
pushf
cli
add
testb
sbb
inc
cmpsb
xchg
and
movsb
add
ja
mov
mov
lods
lods
xor
and
scas
jbe
notb
mov
push
jle
push
lds
push
ss
jne
mov
push
call
lea
loopne
inc
sub
arpl
sbbb
outsl
cmp
pop
fisttpl
nop
stos
stc
movsb
into
out
xor
jle
adc
mulb
dec
sbb
sbb
inc
les
jnp
cli
loope
xor
xchg
in
inc
in
pop
int
int
add
or
xor
sub
popf
and
inc
lock
repnz
shlw
inc
mov
addr16
lock
push
xchg
jae
cmpb
insb
push
addr16
gs
out
sub
pop
push
test
lret
leave
pop
insl
cld
sbb
and
outsb
je
mov
dec
dec
add
cmp
xor
sub
dec
xlat
loopne
test
adc
jg
out
rsm
test
cs
jg
pop
add
inc
or
mov
int
cli
cwtl
inc
sbb
inc
pop
mov
mov
jge
fldcw
adc
jo
mov
inc
fisubl
push
insl
inc
mov
jo
inc
sti
pusha
loope
inc
push
mov
xor
mov
outsb
pop
icebp
lret
enter
jmp
in
mov
gs
xchg
pop
rorl
test
mov
push
cmp
sbb
imul
mov
mov
lock
sbb
adc
ds
pop
gs
push
add
imul
and
push
inc
pop
push
out
sbb
xchg
jns
aas
out
pop
aaa
mov
sbb
imul
insb
daa
fcmovb
push
fcmovu
inc
cmp
jl
pop
sti
ret
lock
inc
xchg
dec
movsl
mov
lret
or
lret
imul
mov
jb
jbe
inc
or
pop
push
or
adc
cli
jecxz
test
out
sarb
rcll
jge
adc
ret
fldl
mov
mov
leavew
int
xor
jae
fisttpl
jl
adc
mov
hlt
and
sar
std
sub
inc
sub
pop
bnd
xchg
mov
mov
mov
cwtl
pop
leave
or
push
xchg
lret
inc
scas
stos
in
movsb
mov
popf
push
and
jns
fistpll
ret
xchg
xchg
jo
and
shl
xor
mov
jg
test
inc
mov
cmpsb
add
movsb
add
jno
mov
jo
pop
test
push
inc
or
in
jb
mov
sub
and
mov
mov
mov
idivb
mov
movsb
ja
xor
cmp
push
jle
repnz
shrl
push
push
sbb
sub
in
lahf
test
sbbb
cmc
out
jmp
je
mov
lahf
cmpsl
mov
dec
mov
ret
insl
xor
cmp
jmp
mov
in
add
imul
insb
sub
xchg
test
fninit
push
and
imul
sbb
jns
mov
mov
inc
popl
ret
lods
xchg
mov
or
inc
hlt
sbb
daa
dec
popa
jno
sbb
jbe
rcll
push
in
push
ss
xchg
outsl
es
and
shrl
lea
hlt
pop
push
and
add
jno
push
outsl
jmp
inc
sbbl
pop
push
dec
xchg
aaa
jb
jns
sahf
xlat
sub
gs
push
std
mov
sbb
out
pop
dec
mov
adc
add
mov
sub
and
mov
test
outsb
add
ret
mov
shr
jo
push
mov
mov
add
fsubs
and
movsb
subb
jb
dec
call
mov
mov
jno
cmp
or
xor
mov
xor
and
pop
fisubl
popf
cmp
ror
repz
sbb
jo
bound
add
push
cmpl
lret
cmp
dec
inc
sbb
fsubl
xchg
jnp
sti
inc
fdivrp
js
adc
push
test
or
sub
sbb
cmp
mov
push
push
xchg
sti
mov
cmc
adc
insb
out
and
repz
push
in
jbe
jnp
mov
cmp
les
sub
shll
in
sarl
js
decl
xchg
lea
out
rcrb
mov
fistpl
fsts
cmp
notl
pop
aad
insb
cs
mov
mov
js
jo
incb
pop
sub
std
ret
mov
push
xchg
adc
out
cmp
stos
call
mov
xor
xlat
pushf
xor
stos
pop
insl
ret
or
adc
insb
fisttpl
scas
jl
inc
test
lret
dec
xchg
push
jp
adcb
add
mov
jb
jo
sbb
sub
pop
sbb
jne
in
add
bndldx
test
in
cmp
jns
fildl
sbb
mov
jno
adc
and
add
sub
sub
sub
iret
dec
push
mov
rcrb
inc
cmp
push
xor
pop
out
faddl
shll
push
push
dec
jecxz
push
pop
rolb
ja
xchg
pop
pop
pop
mov
lods
jno
lock
and
pushf
divb
sub
or
jne
jp
pusha
repz
cli
push
pushf
std
sbb
imul
pop
data16
test
sub
cmp
adc
out
dec
push
mov
jecxz
mov
shlb
fdiv
xchg
xchg
loopne
mov
fsubrl
add
movsb
mov
sub
iret
nop
xchg
sbb
cmpsl
mulb
and
adc
sar
and
mull
lahf
mov
js
aad
ficoms
jns
jmp
jo
jns
jmp
mov
add
inc
jae
dec
adc
movsl
ljmp
jle
mov
icebp
cld
clc
sti
stc
push
jo
xchg
shll
insb
and
push
push
sbb
cmp
and
movsb
lock
test
sub
into
xchg
test
jl
movsb
jo
aad
jne
lret
fcmovnu
jae
sarb
push
inc
hlt
fcmovb
xchg
add
leave
std
js
lea
mov
xchg
push
xchg
or
in
lock
ljmp
jbe
test
mov
cmp
mov
shll
imul
lcall
pop
sbb
jl
scas
jecxz
out
mov
mov
into
push
std
leave
sub
mov
jo
mov
pop
test
lods
popa
loop
pop
xor
fwait
add
frstor
lds
jne
dec
out
jl
loop
std
mov
inc
enter
inc
mov
mov
repnz
fsubrl
outsb
fs
add
add
and
sbb
xor
fcompl
je
adc
pop
add
push
xchg
push
xor
fwait
add
inc
enter
ljmp
scas
inc
add
push
ljmp
jns
icebp
loopne
fcmovb
int
add
xor
cli
test
outsl
mov
mov
fdivs
loopne
fisubrs
test
jae
lahf
xchg
sbb
mov
or
daa
jb
jg
inc
in
scas
mov
dec
pop
mov
sahf
mov
cmp
add
mov
fcoml
lcall
jge
fistpll
out
pop
cld
cli
cs
jbe
rcll
mov
dec
pop
sub
mov
bound
fdivs
ficoms
out
and
and
fmull
fisttps
movsb
sbb
dec
mov
movsl
insl
cwtl
mov
add
aam
lahf
sbb
push
xchg
sub
cs
push
pop
mov
push
or
jp
mov
movsb
adcb
daa
jne
insl
sub
push
scas
shlb
ljmp
out
push
dec
shll
mov
mov
insl
ss
test
daa
jne
or
aam
pop
sub
fbld
push
adcl
ss
jns
and
cmp
ds
mov
push
inc
lahf
xor
push
repz
dec
lret
test
push
push
mov
movsl
test
cmp
sbb
call
pop
add
inc
jne
push
mov
dec
mov
sub
outsl
rcl
int3
sub
imul
push
add
xchg
push
adc
ret
dec
mov
mov
ret
mov
inc
mov
lods
dec
scas
dec
cmovo
sub
cs
and
and
cmp
lods
rcll
and
jecxz
aam
popf
movsl
pop
pop
mov
adcl
fcompl
inc
adc
cli
lahf
mov
pop
mov
test
pop
aam
pusha
es
jno
lahf
push
jne
rolb
dec
icebp
push
jne
sti
or
popf
lods
jp
rcll
sub
xchg
adc
or
or
mov
jae
sub
rorb
add
lret
mov
xlat
icebp
int3
xor
dec
push
jne
ret
lds
pusha
push
imul
jmp
es
and
movsl
jecxz
or
mov
mov
push
sub
dec
in
rclb
jmp
hlt
sbb
inc
sbb
ljmp
jbe
popa
aad
mov
rcl
mov
dec
fwait
idivl
xchg
mov
enter
sti
mov
pop
cmc
lret
fwait
decl
out
pusha
stos
nop
aad
sti
jbe
addb
or
mov
out
fidivs
out
cld
and
inc
les
fisttpll
test
inc
mov
test
into
cmp
sub
xlat
sbb
inc
xchg
fcmove
mov
in
lock
dec
lds
sbb
mov
stc
dec
rcrl
fbstp
push
adc
push
daa
sbb
jmp
loop
dec
push
and
jno
dec
int
and
cmp
aaa
stos
mov
or
jbe
fldenv
fs
jnp
xor
jl
lcall
pop
jo
outsl
sbb
ret
mov
rcrb
and
ret
add
cmp
jnp
arpl
pop
mov
js
stc
in
pop
xor
xorb
call
arpl
or
push
das
xchg
xchg
mov
je
adc
inc
xor
fstp
sarl
and
hlt
jg
or
inc
inc
pop
movsl
outsl
mov
sbb
mov
fcoml
add
mov
mov
cltd
jecxz
add
push
aaa
arpl
test
insb
cmc
or
mov
aad
roll
adc
dec
fldcw
jns
out
cmp
pop
stc
scas
pop
mov
cmp
into
out
mov
mov
sub
leave
sub
inc
push
push
mov
mov
and
out
loop
orl
cmpsb
js
popa
push
lods
rorb
jle
pusha
mov
xchg
das
lcall
xchg
test
std
leave
scas
rorl
clc
xchg
hlt
xchg
in
xlat
ror
push
xchg
iret
mov
mov
pop
mov
push
mov
jl
sbb
vunpcklps
mov
pushf
stos
push
pop
mov
outsb
xchg
mov
and
adc
jl
nop
jns
inc
in
jl
jg
mov
jnp
xorl
out
or
and
jnp
mov
arpl
ffree
shlb
mov
lock
add
icebp
mov
dec
call
imul
out
popf
jg
sbb
mov
fwait
ret
jno
or
cmp
push
or
inc
jle
out
ja
outsl
cmp
mov
fs
lahf
fdivl
xchg
pop
mov
ret
adc
mov
inc
adc
xor
mov
imul
and
xchg
scas
sbb
test
stos
enter
scas
stos
jle
out
inc
cmp
xlat
xchg
sub
jge
shlb
fisubl
mov
inc
jle
cmp
popf
cmp
mov
jno
cmp
ja
stos
sub
xlat
inc
lret
jno
jl
cmc
out
pusha
daa
mov
test
adc
inc
sti
pop
mov
and
mov
in
push
add
pop
xchg
das
sub
add
push
and
addr16
gs
repnz
push
inc
mov
mov
pop
add
push
pop
mov
adc
in
hlt
xrelease
mov
cwtl
outsl
hlt
mov
hlt
pop
ja
loop
jnp
mov
pop
imul
imull
mov
inc
pop
and
stc
repz
sub
test
xchg
mov
sub
gs
adc
sub
inc
inc
out
push
pop
adc
movsb
shlb
cmc
or
loope
lea
mov
stos
and
fcomps
ficoms
adc
push
inc
insl
cld
js
add
fcmovnu
xor
mov
pop
ss
xlat
mov
xor
xchg
es
scas
rclb
test
lret
and
add
jns
sbb
cmpsl
xor
jmp
cmp
sahf
add
lahf
or
add
notl
stc
loope
adcb
dec
pusha
jo
jp
mov
cld
in
roll
sub
push
aas
and
or
and
sub
adc
sub
leave
lret
cmpsb
popa
lcall
mov
push
xorl
sbb
ss
and
jb
jp
out
repz
adc
or
mov
pop
sub
cmpsl
mov
iret
insl
test
outsb
fcoms
icebp
mov
jmp
cld
mov
add
mov
les
dec
lods
aad
aam
mov
shrl
inc
scas
sbb
adc
jo
sbb
lods
das
jnp
push
add
imul
jecxz
mov
fs
mov
stc
mov
jno
pop
and
incl
inc
cmp
sbb
mov
cmpsl
pop
out
roll
ss
mov
repnz
ljmp
xlat
xchg
movsl
dec
jecxz
stc
lea
addl
shl
lret
cmp
scas
out
sbbl
aad
sub
lret
inc
je
test
pop
loopne
pop
cmpsb
fisttpl
lods
sbb
clc
dec
shll
int3
add
pop
fcoml
cli
mov
rorl
call
cmp
dec
icebp
push
adc
fiaddl
push
dec
fsubl
mov
mov
aas
fs
ja
fistps
getsec
popa
test
outsb
push
repnz
mov
imul
xor
test
dec
ss
int3
mov
punpckhwd
push
fs
addr16
sbbb
loope
adc
mov
ret
adcb
insl
ret
adc
sub
popa
pop
pop
cmp
ret
cs
add
cmp
loop
insl
add
adc
sub
inc
fldcw
mov
sub
fisubrl
popf
mov
inc
inc
mov
cmpl
xlat
push
jae
pop
mov
pop
push
jle
lcall
sbb
call
ljmp
jae
mov
outsb
insb
outsl
pushf
cmp
lret
xchg
cmp
xchg
icebp
ret
addr16
mov
adc
inc
rol
pop
push
gs
in
pop
cmp
test
shl
test
hlt
mov
lcall
adcl
or
or
rclb
or
pop
pop
mov
or
pop
mov
pop
addr16
insb
fldenv
cwtl
cmp
repz
jecxz
or
lret
loopne
cmpsl
js
pushf
sub
mov
aaa
or
test
out
add
out
ss
mov
scas
outsb
jle
mov
icebp
clc
adcl
stc
push
imull
cmp
xchg
push
gs
call
add
dec
test
mov
pop
sbb
rcrb
movsl
inc
mov
enter
sub
lods
cmpsl
xor
call
sbb
cmp
xchg
aaa
pop
cwtl
leave
idivb
push
add
add
sarl
outsl
xor
pop
std
bndstx
cmp
fcompl
dec
add
cmpsl
or
xor
stc
push
jg
ret
outsl
icebp
lock
cld
push
sbb
in
sub
mov
jns
adc
jge
xorb
sbb
jmp
in
adc
pop
sbb
xchg
imul
or
bound
lock
sub
stc
std
add
out
pop
out
loope
pop
cmc
stos
mov
adcb
popa
pop
push
insb
or
aaa
sahf
imul
xchg
or
xchg
icebp
dec
dec
and
repz
jge
mov
js
fidivrs
idivb
pop
xor
xchg
sbb
lock
dec
xchg
call
ret
imul
push
jae
stos
and
xor
repz
test
mov
push
mov
xor
xor
push
xchg
xchg
cmp
jo
icebp
mov
daa
cmc
mov
scas
xor
popf
ss
inc
lods
xchg
pop
mov
inc
xor
sub
inc
cmp
inc
cld
insb
pop
cli
and
stc
in
mov
pop
dec
lea
je
cld
or
mov
mov
jne
addl
dec
mov
xor
pop
stos
jno
jne
clc
int
insl
out
inc
ret
and
cwtl
aas
xor
rorl
into
lods
lret
xchg
aam
inc
xchg
ror
mov
ret
jns
mov
fidivrs
jae
push
push
mov
cmc
add
mov
push
sub
pop
rcrl
imul
xchg
loopne
or
jecxz
stos
insb
push
and
scas
rol
or
in
inc
push
mov
pop
shlb
in
sub
and
mov
push
mov
hlt
outsb
xchg
mov
outsb
lret
in
xorb
in
jle
mov
mov
jo
test
repnz
mov
aad
fstp
sub
icebp
xor
add
adc
or
leave
xchg
aam
mov
orl
or
xchg
je
cmp
fdivrl
push
sar
nop
lods
sub
stos
insl
and
mov
lock
push
mov
fsubl
push
push
and
pop
mov
pop
xchg
loopne
lret
mov
aam
ss
notw
jns
push
mulb
mov
aaa
sbb
sarb
lret
fs
lods
sbb
jns
jmp
jl
lahf
pop
lret
jl
roll
jbe
mov
push
dec
mov
in
in
dec
mov
push
int
xlat
mov
mov
mov
push
sub
jae
cmp
push
ds
popf
out
aas
xor
test
insb
or
ret
movsl
jbe
mov
inc
push
dec
mov
inc
mov
inc
les
in
scas
out
int3
mov
ja
lods
xchg
mov
or
loopne
scas
dec
mov
add
scas
enter
xchg
jo
inc
jmp
push
fmull
xchg
lock
icebp
ret
jb
jle
sub
test
cltd
cmp
mov
scas
sub
sub
mov
data16
insb
fcoml
inc
insb
test
jnp
fldenv
scas
xchg
xchg
cmp
test
outsb
pushf
test
lea
std
ret
push
push
dec
mov
popa
jnp
paddw
jl
cmp
pop
aaa
das
pop
or
lcall
or
jecxz
orl
mov
pushf
inc
push
inc
scas
pushf
mov
sub
or
mov
fistpll
sbb
fcomps
pop
rorb
lods
xchg
mov
inc
mov
movsl
int
mov
push
adc
arpl
pop
stos
stos
xchg
mov
dec
lret
push
or
lds
hlt
xchg
mov
std
aam
pop
sbb
sub
sbb
xor
fistpll
xor
push
xchg
sti
mov
dec
leave
fnstsw
test
imul
aad
push
mov
mov
pop
jo
loop
popf
xchg
xlat
push
mov
cmp
jle
or
adc
mov
cmp
in
or
sbb
mov
aad
mov
shl
xchg
jae
sbb
into
jne
test
jae
dec
mov
dec
mov
loope
sarb
loopne
hlt
daa
out
ljmp
int3
jo
mov
insb
std
daa
add
jb
pop
cld
and
adcb
and
jbe
fmuls
fldenv
lret
jl
leave
inc
mov
or
movl
out
icebp
xchg
ret
shlb
imul
lock
arpl
mov
mov
popa
adc
pop
mov
pop
cmpsl
mov
or
iret
push
cmc
les
shlb
pop
xor
and
ss
int3
jnp
mov
sbb
aaa
fnstsw
test
cmpsb
movsb
fmull
sarb
pop
rorb
in
jmp
lret
mov
fdivrs
ljmp
jge
xor
dec
mov
sbb
lcall
ret
repz
mov
je
inc
and
aaa
push
cmp
jle
dec
loopne
nop
insl
popa
mov
sbb
sbb
cmpsb
or
mov
fnstenv
xchg
jmp
jb
test
mov
sub
mov
rclb
dec
pop
inc
sbb
and
jle
push
adc
sbbb
insb
popa
sub
enter
push
inc
sub
xor
pushf
nop
cs
mov
adc
dec
inc
shll
lret
cli
jo
loope
je
mov
fs
jle
lods
mov
xchg
lods
adc
push
mov
ret
fsubrs
call
xor
xchg
cmpsb
inc
fucom
repz
clc
adc
iret
test
popf
jnp
mov
add
int3
or
jmp
inc
outsl
sbb
jnp
pop
mov
push
or
push
push
jle
inc
loopne
shl
mov
sbb
into
and
inc
clc
mov
inc
in
inc
idivb
insl
jecxz
pop
fbstp
ja
jge
mov
arpl
pop
xchg
arpl
dec
mov
hlt
sbb
clc
shlb
xchg
xchg
jne
sbb
mov
notl
add
dec
lretw
dec
sub
or
test
loop
popl
xchg
mov
repz
cmp
lcall
jb
xlat
fcomi
jge
les
loop
out
popf
and
inc
popf
push
inc
cmc
cmp
daa
jge
lret
sbb
aaa
fidivrs
mov
into
push
mov
cmpsb
dec
sub
pusha
jle
mov
mov
jl
sub
sub
subl
in
mov
pop
test
stos
xchg
dec
sti
inc
adc
aam
cld
leave
and
or
or
mov
jmp
push
sbb
push
pop
lret
sbb
inc
in
or
arpl
cmp
fstps
in
shll
addb
mov
cs
popa
jns
inc
gs
sete
mov
adc
iret
dec
dec
and
sqrtps
cmp
cmp
dec
xchg
lds
repz
aam
mov
and
ja
jnp
push
cmp
adcl
lret
in
aam
sbb
jge
mov
pop
outsl
mov
mov
dec
dec
sbb
mov
dec
mov
add
mov
jno
lret
stos
pop
and
repz
lods
push
xchg
or
inc
sbb
pushf
js
push
mov
add
xchg
adc
push
cmp
mov
cmp
add
lahf
iret
imul
mov
imul
adc
lea
das
jmp
and
pop
test
jmp
loop
adcb
pop
and
dec
mov
mov
push
test
and
imul
mov
jecxz
lods
sbb
jno
call
js
inc
mov
sbb
mov
mov
and
push
cltd
or
icebp
cmpb
inc
xchg
pop
lock
ss
scas
add
ret
sub
mov
push
clc
fistpl
and
into
hlt
add
imul
aam
and
rol
shll
out
movsb
fisubl
insl
push
in
push
stos
cmpsl
popa
out
sub
inc
jl
pop
lret
ficoms
xchg
cmp
int3
sbb
fmulp
sub
test
cmc
pop
mov
inc
mov
mov
movsl
sbb
mov
aaa
xchg
push
iret
leave
icebp
mov
push
jae
and
filds
cltd
js
lock
xchg
iret
dec
cmpsb
mov
incl
jnp
or
ret
outsl
cmp
push
dec
aas
pop
cmpsl
in
scas
pop
and
push
imul
int
adc
fcompl
mov
add
sahf
aam
jl
add
cmc
xor
sub
lahf
mov
mov
jmp
sub
lods
add
inc
inc
mov
pop
inc
mov
cmp
int3
repz
sbbb
xchg
aad
data16
les
push
and
iret
cmc
mov
sti
sub
dec
mov
sub
in
adc
ja
mov
mov
subl
fldenv
movb
xor
lahf
mov
into
xor
pop
inc
add
push
adc
rolb
lret
ljmp
cmp
dec
xor
add
inc
adc
jne
outsl
and
loop
inc
add
aam
push
inc
push
aad
std
and
movsl
mov
add
out
int3
movsb
xor
xchg
stc
mov
dec
cltd
push
push
popa
jmp
xchg
mov
push
cli
cmc
push
or
pop
sub
adc
cmp
jae
sub
cmp
or
xchg
mov
rclb
and
clc
stc
push
lods
xchg
shll
adc
xchg
sbb
gs
pop
shl
andl
rcl
stos
lock
stos
data16
cmc
sbbl
pop
in
adc
repnz
xchg
loopne
add
imul
jno
leave
hlt
ds
nop
jns
movsl
fistpl
jg
cmp
push
pop
xchg
test
push
or
in
xchg
push
stc
lret
leave
cmp
lret
pop
aas
ss
dec
enter
jo
xchg
add
add
das
push
pop
inc
bndldx
cmp
nop
movsl
mov
stc
popl
xchg
iret
je
out
xchg
nop
sbb
mov
pop
int
pop
mov
movsb
or
and
cwtl
into
xchg
push
cli
loop
test
loopne
push
inc
push
out
mov
add
jb
ljmp
xor
stos
mov
fisttpl
pop
pop
add
popa
xor
adc
or
pop
sbb
dec
xor
push
test
inc
add
test
fisubs
out
test
addr16
repz
mov
rcrl
adc
scas
adc
ja
xchg
inc
push
notl
or
out
mov
xor
shlb
subl
mov
lcall
bound
aam
pushf
push
call
stc
daa
mov
lcall
jne
mov
mov
push
or
mov
cmc
test
xor
jne
jnp
clc
ds
leave
inc
lods
push
pop
xor
push
jmp
mov
adc
push
mov
sub
stos
pushf
cltd
jnp
test
mov
ja
add
cltd
push
inc
pop
lret
jmp
cli
lea
cmp
cmp
sub
nop
jg
xchg
and
pusha
lock
inc
and
popa
or
mov
std
jl
pop
lret
mov
cld
movsb
sbb
testb
scas
orl
inc
or
push
jle
mov
aas
fwait
sub
scas
nop
sahf
js
xchg
mov
add
dec
mov
repnz
enter
test
mov
cmp
fmuls
add
lea
xchg
push
jg
movsl
into
scas
movsl
adc
cmp
ljmp
jmp
outsl
test
adc
mov
jle
mov
pop
stc
or
repz
xchg
pop
fcmovnu
stc
and
xchg
add
in
ss
fistl
ja
gs
notl
js
cwtl
sbb
sahf
lret
and
pop
ss
cli
xor
jb
popf
pop
jns
jo
fldt
insb
mov
xor
in
cli
sti
dec
mov
lds
inc
and
dec
push
mov
leave
mov
sub
jne
mov
adc
aaa
inc
push
mov
jns
and
daa
sbb
clc
fldt
loope
dec
jno
and
out
in
pop
sub
mov
adc
outsb
jo
mov
test
inc
stos
xchg
fwait
das
repz
idivl
repz
sbb
out
mov
imul
ss
fdivl
dec
and
pop
sbb
fisubrs
bnd
inc
or
adcb
fisubl
shll
inc
mov
xor
pop
lahf
mov
mov
dec
or
repz
pop
dec
sbb
pop
jns
out
inc
inc
cmp
pop
fidivs
aas
adc
bswap
adc
aas
sub
and
mov
or
sbb
cwtl
stos
mov
jg
inc
test
outsb
lock
cs
jo
push
nop
lods
fsubs
mov
jmp
dec
mov
dec
fiadds
xchg
mov
repz
adc
sub
adc
mov
jnp
mov
or
cmpsl
insl
das
adc
out
arpl
add
pop
jb
jnp
loopne
sahf
loope
lcall
xchg
add
movsb
jno
push
das
add
xorb
data16
mov
cmp
mov
xor
imul
mov
pop
adc
dec
add
sub
xchg
movsb
int3
add
xor
clc
inc
cltd
mov
imul
xor
jg
sub
test
ljmp
lret
xlat
lock
pop
shll
data16
push
ror
or
cmp
lods
fnstenv
imul
inc
pop
outsl
adc
push
sub
insb
jg
mov
mov
stos
test
imul
jmp
xchg
and
stos
cmpsb
or
xchg
push
pop
xchg
pop
fdivs
pop
and
je
rcl
test
scas
dec
or
sbb
cmp
pop
add
scas
jecxz
adc
pop
and
or
xchg
add
ret
jmp
push
cmp
shlb
rcll
pop
cmc
out
mov
out
mov
mov
mov
data16
mov
pop
into
sahf
dec
xor
je
aaa
push
sarb
pop
cwtl
stos
std
ror
out
dec
add
addr16
add
xor
jbe
gs
jb
jno
scas
clc
mov
in
sub
adc
rcl
mov
call
lods
xor
ror
add
lcall
sahf
aas
je,pt
mov
fidivl
hlt
lcall
push
jecxz
in
int
arpl
mov
cmpsl
add
lea
imul
mov
roll
test
int
mov
dec
dec
adc
loope
stos
decl
and
roll
dec
cld
hlt
mov
outsb
sub
vpinsrw
push
je
xor
scas
and
or
lock
in
pop
adc
or
test
push
cmc
xchg
repz
jmp
ds
loope
ret
push
or
call
scas
xchg
dec
pop
pop
xor
xorb
mov
ret
icebp
pop
lea
cs
dec
push
js
inc
jle
mov
push
mov
mov
outsb
test
gs
xor
xor
jge
cmpsb
stos
add
mov
repz
push
scas
xorl
pop
dec
shlb
and
popa
aam
pop
repnz
cmp
and
mov
icebp
push
mov
negb
ret
in
inc
ljmp
jnp
or
pop
xchg
push
roll
xlat
mov
push
pusha
cmc
push
arpl
test
outsl
pushf
dec
in
subl
jbe
repnz
and
pop
xor
mov
mov
test
inc
aas
enter
int
out
ficompl
dec
inc
jns
scas
fistpll
test
imull
arpl
fwait
and
xchg
cmp
mov
xchg
call
mov
aam
in
popf
shr
push
fnstcw
sti
jle
and
movsb
fs
xchg
aaa
xor
iret
cmp
ret
xor
push
or
fwait
sbb
imul
dec
cmpsb
push
fmuls
xor
jmp
repz
das
mov
xorl
testw
mov
adc
sahf
inc
ss
push
leave
or
adc
shlb
mov
jae
sub
cmp
pop
xchg
mov
push
lret
jecxz
jno
mov
movsb
xchg
or
push
xchg
popf
cmpsb
dec
push
sub
outsb
les
mov
pushf
push
jg
popa
jb
push
loop
das
lods
sub
mov
push
lar
dec
sbb
and
jmp
inc
jp
aam
out
cmc
dec
mov
add
das
mov
xchg
xchg
xchg
in
ds
jl
inc
cmpsb
or
loop
add
push
shl
sub
fsubs
push
lcall
xchg
inc
mov
mov
or
jb
in
mov
and
jmp
xor
sub
sarl
adc
push
or
cmp
cwtl
adc
enter
inc
fcomps
repnz
jne
pusha
sub
js
add
mov
cmc
lret
and
int3
lods
enter
cmp
or
inc
sbb
dec
mov
clc
jle
dec
cmp
xchg
xchg
push
test
cmp
or
dec
jb
sbb
sbb
lods
mov
push
add
fwait
loope
mov
mov
stos
in
stos
aas
insb
cmp
cmpsl
out
leave
pop
adc
fstl
andl
mov
xor
les
ss
imul
sub
jl
adc
adc
lret
sbbl
sbb
movsb
in
push
dec
mov
or
push
xor
stos
fiaddl
mov
cld
pslld
cld
mov
push
xorl
nop
jecxz
xchg
jg
cmp
addr16
addr16
out
mov
pop
lahf
jb
pop
nop
push
add
test
mov
insb
xchg
fldcw
pop
dec
adc
sub
cmp
mov
sbb
sahf
out
andb
jae
cmp
adcl
xlat
and
sub
pop
cld
int
dec
add
sub
rorb
cli
sbb
sbb
je
cmp
cmp
loopne
cli
inc
out
xchg
sti
or
sub
bound
testb
push
add
insl
inc
sub
mov
and
icebp
enter
stc
xchg
rcrl
jmp
xchg
mov
out
mov
arpl
loop
xchg
fs
stos
xor
inc
add
cli
and
sbb
repz
and
xchg
fsts
fidivrl
cmp
daa
adc
mov
mov
test
pusha
jl
aaa
xorl
pop
in
xchg
in
addl
adcb
ja
or
sbb
movsl
divb
pop
sbb
jle
push
roll
jg
mov
mov
je
arpl
xor
xor
outsl
xchg
jle
mov
call
lret
insb
mov
jae
mov
je
push
int
pusha
lock
mov
inc
sub
out
es
stc
rol
shll
inc
leave
sub
rorl
insb
outsb
out
cmpsb
sub
dec
fwait
cli
clc
xor
out
and
or
cmp
mov
in
cld
add
mov
cmp
iret
jae
pop
jno
sub
fistpll
xchg
add
leave
stos
add
pop
hlt
pop
cmp
in
cmp
sbb
inc
loope
insb
push
rol
lods
in
push
and
ficoms
xorl
jmp
test
dec
mov
imul
sub
or
cmp
dec
enter
test
sub
pop
cmp
in
sbb
cmp
mov
adc
mov
mov
adc
fstpt
das
jns
sbb
mov
xchg
loop
jle
add
pop
test
scas
outsl
dec
push
xchg
cmp
mov
arpl
and
jnp
push
je
mov
mov
cmp
out
enter
fldl
push
mov
leave
shr
xor
jo
and
mov
test
lahf
nop
add
sahf
add
mov
loop
xor
iret
int
add
xor
push
in
dec
std
inc
mov
call
mov
mov
pop
or
sbb
push
rolb
mov
jns
mov
or
int3
daa
or
stos
outsl
sub
pushl
imul
jg
aaa
xor
out
sbb
or
divb
add
xchg
imull
roll
dec
aaa
mov
and
mov
inc
ficomps
dec
mov
xchg
andb
or
enter
pop
cmpsl
sub
stc
mov
mov
nop
icebp
into
pop
popa
and
fcoms
xchg
xor
out
cmpsl
arpl
xor
lds
jo
xchg
sbb
cmp
cmpsl
jp
arpl
int
adc
push
lret
cmp
add
imul
xor
jle
movsl
jnp
cmpsb
adc
pop
jo
adc
jae
push
imul
mov
jge
lcall
into
stc
enter
push
cmc
add
jae
inc
pop
and
push
or
mov
movsb
daa
ret
mov
insb
nop
rorb
add
in
add
push
mov
scas
leave
mov
cltd
push
mov
dec
decb
xorb
xor
arpl
mulb
sub
stc
scas
sbb
add
and
lahf
ficomps
ud2
mov
repnz
scas
cmp
cmp
loope
pop
or
add
jbe
lcall
jbe
mov
and
leave
inc
pop
cmp
cltd
and
inc
out
pusha
insb
xor
pop
js
mov
stos
pop
rcl
stc
xor
cmpsl
popa
cmpl
adc
popa
out
sarl
fimuls
xor
aaa
push
push
movl
cs
inc
lea
mov
push
arpl
out
xchg
aam
push
in
push
jl
add
dec
push
in
out
adc
flds
arpl
jb
es
dec
mov
ljmp
insb
fldcw
sbb
gs
sub
sub
stos
mov
mov
sub
inc
mov
lret
iret
insb
std
xchg
mov
inc
mov
fisubrl
or
and
fsubrl
xchg
mov
in
adc
lea
loopne
xchg
jle
cwtl
cli
jnp
lods
mov
and
push
xchg
mov
je
xchg
pop
jle
mov
pop
aas
incl
cmp
nop
jo
mov
sub
sub
pop
imulb
out
in
mov
pop
sub
and
out
jmp
outsl
pop
test
dec
pop
scas
push
push
std
leave
pop
aam
dec
out
sbb
and
addr16
int3
ljmp
mov
or
add
dec
scas
xor
mov
cmp
inc
mov
imul
cmp
jge
mov
sbb
pop
xor
cld
out
cltd
imul
scas
scas
xor
dec
addl
test
inc
into
test
fisttpl
cmpsb
mov
xchg
orb
fs
inc
outsb
mov
adc
fst
in
fs
mov
movsl
push
mov
mov
pop
lret
pop
push
pop
cmp
outsb
out
ljmp
push
adc
repnz
push
pushl
adc
les
popa
push
jno
cs
sbb
mov
dec
push
lods
push
mov
lods
mov
out
aas
mov
icebp
lock
mov
xor
jecxz
push
call
pushf
out
mov
mov
jge
dec
out
adc
mov
gs
movsb
jne
sub
imul
mov
sbb
dec
mov
dec
icebp
call
mov
jecxz
pusha
stc
leave
lods
cmc
xchg
xchg
in
fmull
mov
dec
fimuls
dec
push
xchg
cmp
xchg
push
jns
ret
shrb
mov
mov
push
jno
pop
inc
mov
mov
in
cli
xchg
test
stos
pop
pushf
out
movsl
sub
insl
and
push
cmp
ja
mov
pop
add
ja
in
sub
mov
int
jecxz
sbb
stos
adc
inc
cltd
fmull
pop
mov
insb
mov
gs
inc
insb
incl
mov
shlb
lods
cmp
pop
insb
insb
outsb
cltd
inc
push
mov
js
mov
outsl
push
pop
daa
lds
cmc
shrb
rcrl
jnp
sub
je
imul
enter
aaa
inc
fmull
push
loop
imul
imul
jl
stc
sbb
in
pop
cmp
lcall
push
xlat
sti
xchg
cli
idivl
jle
push
lea
inc
ret
cli
leave
mov
add
jb
and
jns
xor
jne
xchg
xor
pop
insb
fdivr
cmp
inc
inc
pop
lret
enter
mov
cmp
test
fdivs
jno
pop
dec
imul
bound
cmp
pop
rcl
notb
cwtl
daa
inc
scas
data16
jg
cltd
or
ret
lret
mov
jmp
inc
sub
sahf
xchg
mov
push
jle
sbb
hlt
jb
fdivrs
std
push
mov
pop
dec
and
movsl
cli
out
call
in
cmpsb
mov
pop
xchg
fisubrl
jns
cli
mov
inc
pop
lds
xchg
inc
aas
aam
sbb
mov
test
pop
dec
push
test
mov
dec
xchg
rorl
dec
mov
test
repnz
push
mov
sub
popl
jecxz
pop
sbb
adc
int
fistl
mov
xchg
mov
clc
cmp
out
in
out
dec
pop
jp
sub
aam
jle
inc
mov
lar
rcll
add
scas
scas
mov
xchg
std
adc
mov
pop
jg
cmpsl
jecxz
ret
jmp
aad
ftst
add
mov
fldl
mov
jmp
adc
es
test
mov
pop
dec
cwtl
outsb
cmpsl
and
xchg
fstpt
push
enter
mov
mov
aam
or
repnz
sbb
lods
xor
loope
cmp
cld
or
lea
inc
jae
or
push
clc
mov
cwtl
dec
mov
movsb
lods
shrl
cmp
dec
nop
dec
push
fsincos
mov
mov
imul
jb
fs
cmp
mov
and
sub
pop
js
cmp
dec
mov
mov
inc
movsb
aas
mov
push
xor
push
les
cmp
push
and
sbb
test
pop
mov
sub
cltd
mov
daa
insl
mov
dec
scas
stos
int3
movsl
xchg
jae
icebp
dec
xor
mov
adc
sbb
cs
dec
sub
mov
sbb
mov
test
mov
dec
add
xchg
pushf
sarb
xor
in
cmp
rcrl
xor
cmp
mov
sub
mov
pop
mov
pusha
dec
pop
xor
xchg
iret
pop
mov
push
pop
jl
jmp
and
sub
and
sub
push
inc
jecxz
push
dec
jo
pop
lret
cmp
into
vmread
les
sub
adc
leave
out
mov
pop
cmp
or
outsb
les
lock
aad
clc
pusha
jb
and
scas
cs
push
out
loop
and
inc
sub
adc
mov
data16
sub
dec
mov
rcr
out
pushf
xor
dec
lret
pushf
jle
sbb
sbb
pop
mov
ss
dec
fbstp
imulb
pop
inc
data16
dec
push
mov
pop
mov
lret
inc
jl
sarl
pop
sbb
mov
sub
mov
iret
pop
subb
nop
imul
xor
sbb
or
xor
inc
pop
xchg
mov
jnp
xor
push
mov
test
rol
and
adc
inc
sub
jnp
xorl
loope
in
mov
jae
push
push
add
sub
movsl
sub
inc
rclb
rorb
sbb
stos
addr16
cmp
fwait
sarl
pop
jge
xchg
sbbl
dec
xchg
repz
popl
out
pop
loop
xor
mov
jo
dec
xor
stos
ficoml
loopne
not
outsb
pusha
bndldx
or
lods
mov
jae
and
xor
mov
mov
rcll
mov
enter
push
icebp
mov
pop
mov
imul
mov
scas
or
mov
xor
jno
pop
add
cmp
das
subb
inc
or
movsb
mov
jnp
jns
xchg
lock
fcmovnbe
test
adc
pop
aam
dec
mov
test
push
scas
and
sub
nop
movsb
mov
movsb
iret
shll
add
cld
pop
bound
leave
sti
xorb
pop
push
lods
push
sbb
mov
mov
ss
adc
mov
call
imul
add
test
mov
stos
or
popa
inc
or
sbb
adc
adc
cmp
out
ss
int
adc
fstpt
or
jnp
in
bound
lret
inc
jnp
cmp
incl
enter
lret
jb
icebp
push
popa
inc
ret
int3
mov
and
std
dec
out
jb
jmp
mov
daa
xchg
adc
outsb
fwait
inc
sub
lret
mov
xchg
and
mov
push
ret
inc
mov
andb
cmp
xchg
xor
stc
rorl
fnstenv
mov
fnsave
call
ret
arpl
rorl
add
xchg
shll
std
clc
sbb
shrb
fwait
adc
mov
out
mov
lock
aam
mov
js
icebp
lock
xor
iret
cmc
xor
sbb
xor
mov
fdivrl
mov
aas
idivl
push
pusha
pop
mov
dec
push
dec
mul
mov
cmp
pushf
push
jmp
in
ficomps
mov
jle
clc
nop
xchg
mov
inc
aas
sbb
sbb
cmp
inc
xor
lcall
sbb
pop
and
add
or
and
lock
fsubs
and
jbe
lock
cmp
pop
jno
test
out
test
pop
movsb
jl
push
or
mov
sub
or
mov
sbb
fs
xlat
xor
mov
or
xor
mov
jne
pop
mull
xchg
aas
stos
fstpl
sbb
aam
mov
jno
sub
push
add
fdivrs
pusha
nop
call
add
cltd
iret
dec
dec
je
jb
push
loop
mov
shll
data16
addb
test
and
mov
int
ljmp
orl
mov
loop
mov
jg
xchg
int
sub
xor
jne
push
pop
sub
test
sbb
mov
fstpt
mov
fsubrs
int3
dec
and
test
test
mov
lret
mov
mov
cmp
adc
xor
jp
jecxz
dec
mov
fwait
adc
mov
xchg
enter
subb
cmp
pop
cmp
add
add
add
aad
shlb
sub
ficoml
lock
insl
fs
push
inc
lcall
cmc
ljmp
mov
mov
in
pop
popf
pop
jle
lods
stc
iret
add
mov
cli
cld
or
and
cltd
repnz
ret
sbb
xor
sahf
outsl
inc
mov
inc
dec
fisttpll
xchg
mov
movsl
jp
mov
stos
or
outsb
in
out
cltd
and
push
add
xchg
in
ficoml
in
mov
sub
jns
pushf
fnstcw
push
sbb
leave
fadd
ficomps
mov
mov
jmp
push
or
in
pop
pop
mov
push
ret
add
popf
inc
xchg
mov
inc
xchg
addr16
loop
xchg
cli
jecxz
xchg
jg
jg
push
fmull
cmp
pop
jae
push
fsubrs
add
popa
fimull
fists
fwait
dec
adc
push
test
pop
in
lds
jl
fucomip
in
icebp
sub
mov
shll
xor
es
aam
ret
mov
push
xor
xchg
sbb
enter
fisubrl
les
lea
inc
jg
aaa
push
add
sub
jne
in
daa
mov
or
lods
dec
mov
mov
loopne
shrb
clc
fdivs
pop
xchg
shl
mov
inc
outsb
aaa
jg
lret
sub
add
mov
out
cmp
adc
pop
ljmp
popa
out
insb
inc
push
scas
orb
pop
jmp
sbb
iret
adc
jmp
or
cmp
fists
mov
mov
movsl
push
inc
popa
jae
lcall
out
fcomps
jge
pop
neg
mov
out
sbb
jnp
cmpsb
dec
movsl
lods
je
lea
add
out
pop
out
xor
push
call
aam
mov
or
sbb
xlat
mov
cmpsl
jnp
inc
and
outsb
push
dec
lods
in
or
cmp
sbb
mov
fidivrs
rorl
std
out
repnz
scas
jnp
pop
sahf
enter
mov
sub
ja
mov
mov
xor
pop
jnp
and
push
xchg
dec
cmp
dec
inc
xor
int
mov
call
loop
sti
jae
mov
loope
xchg
sbb
mov
inc
xor
pusha
stos
divb
jns
in
jb
inc
ljmp
ljmp
pop
pop
dec
jp
cmp
repz
clc
push
or
ficoml
testl
shld
fwait
cmc
clc
insb
roll
jo
stos
cmp
dec
popa
or
adc
mov
fdivrp
idivl
pop
cmpsb
add
inc
push
cmc
incb
mov
jecxz
loop
dec
lea
cmpsl
dec
mov
cmp
pop
scas
sbb
xchg
sbb
cmp
mov
add
cmp
call
and
jl
push
test
and
inc
and
nop
popf
faddp
mov
xchg
inc
or
pushf
add
pop
fadds
inc
andb
adc
aam
shl
adc
xor
push
mov
inc
jl
lds
xchg
jae
add
sbb
adc
cmp
add
ds
mov
fidivrs
dec
bound
mov
pop
add
loopne
cli
pushf
or
pop
sub
pushf
mov
pop
mov
cwtl
mov
out
fisttpl
test
add
sbbl
imul
mov
out
scas
xchg
mov
shll
inc
int3
push
gs
mov
fwait
popa
leave
xor
mov
dec
call
jno
shlb
popa
lret
xor
or
or
xchg
xor
lods
adc
cmc
mov
fucomp
xchg
mov
inc
pop
outsb
jle
jno
cmp
sbbb
fists
shll
cmp
popl
in
into
fistps
mov
or
mov
xor
or
push
pop
or
insl
push
jl
xchg
out
jl
es
push
out
stos
mov
movsl
or
stos
push
loope
sbb
cltd
fstps
jns
or
dec
sub
shll
data16
outsl
or
rorl
cmp
xor
sbb
pop
dec
xchg
test
fsts
stc
sub
push
or
mov
add
pop
xchg
stos
nop
pop
push
aaa
and
sbb
les
add
mov
mov
out
fsubl
ljmp
mov
adc
xor
jo
mov
push
call
movsl
push
mov
aaa
int
lcall
dec
orl
push
push
outsb
pop
loope
mov
stos
loopne
fiadds
push
sub
and
lahf
rorl
call
imul
inc
sbb
lock
repz
lds
ljmp
jmp
sarb
inc
or
outsb
mov
pop
loop
loopne
mov
adc
inc
movsb
mov
dec
dec
jl
lds
pushf
xchg
mov
gs
cmp
sub
mov
mov
adc
add
lahf
cmp
pop
pop
mov
dec
pusha
iret
scas
sarl
add
lret
pusha
leave
pop
popa
lahf
test
test
dec
loope
fiadds
les
ret
int3
fildll
iret
jnp
cmpsl
mov
and
mov
xor
push
cmp
outsb
movb
xlat
lds
test
and
push
pmullw
popl
scas
cltd
lret
fnstcw
adc
imul
mov
aad
add
cmp
sub
out
and
xchg
pop
pop
xchg
dec
xor
mov
cmpb
aad
mov
push
cltd
rorl
es
stos
leave
call
sbb
add
test
rcrb
repz
pop
dec
adc
lea
rcrb
fucomip
ret
test
sbb
mov
adc
xchg
rcrb
mov
xchg
ss
xor
or
js
inc
outsl
mov
leave
lret
push
add
stc
loop
leave
sub
adc
in
adcl
mov
mov
adc
push
lcall
xchg
pushf
xchg
jne
xor
sub
fwait
xchg
out
test
icebp
pusha
mov
push
cmpsb
and
and
aas
divl
daa
scas
ds
mov
jns
rep
dec
push
sti
add
adc
call
mov
scas
xchg
xor
sub
xchg
rorl
in
xor
or
fwait
rorl
mov
in
pop
popa
arpl
cmp
daa
sub
iret
std
cmp
test
mov
push
adc
loope
ret
push
movsl
iret
mov
imull
ja
mov
dec
dec
cmp
bt
add
ficoml
xchg
sbb
mov
adc
sar
sbb
add
mov
popa
add
and
and
push
sbb
inc
aas
mov
scas
jl
mov
lret
movsb
fnsave
cmp
mov
in
addl
mov
or
je
fcmovbe
insb
je
lret
xchg
stos
inc
mov
movsl
push
xlat
mov
mov
or
loop
or
ss
pop
shll
xor
or
aas
mov
inc
pop
sti
arpl
xor
imul
adc
jno
mov
adc
xor
loopne
push
test
cld
push
lahf
mov
pusha
and
mov
cltd
mov
pop
push
xchg
cmp
mov
loopne
stc
scas
mov
jge
xchg
arpl
jns
adc
out
test
jge
sbb
icebp
add
mov
push
repnz
xchg
jle
sbb
insl
mov
fisubrs
pushf
mov
fwait
push
frstor
sub
mov
push
jp
js
scas
into
pop
or
pusha
xor
and
sbb
scas
mov
mov
sbb
pushf
push
sub
sub
mov
dec
or
cmpsb
jmp
imul
lcall
out
xor
loop
lock
xchg
jecxz
rol
ljmp
test
mov
mov
pop
sbb
add
push
adc
stc
mov
mov
fucomip
aam
mov
int3
pop
pop
mov
jge
loope
inc
insb
mov
cmp
jnp
aam
mov
jmp
adc
mov
sti
jmp
inc
and
push
bound
mov
out
push
mov
das
lcall
pop
push
out
cli
das
adc
adc
iret
shrl
hlt
pop
lahf
loope
js
or
aas
test
lret
sbb
add
repnz
mov
rcl
in
push
push
and
sub
lea
pop
mov
lea
cmp
cmpsl
mov
fs
xchg
ja
test
xor
cli
xchg
outsb
jp
pop
aas
cmp
dec
popa
shlb
inc
iret
int
bound
outsl
pop
push
adc
inc
cmp
or
push
or
push
aad
mov
sub
xchg
jp
pop
inc
pop
movl
cmp
aam
mov
mov
clc
cld
dec
out
mov
push
dec
add
mov
pop
faddl
sub
fcoml
ret
push
cmp
and
test
je
outsb
inc
jno
fsubs
pop
aaa
mov
out
mov
jg
dec
cmp
fadds
cmp
push
int
repnz
mov
pop
fisttpll
imul
cmpsl
and
shrb
les
mov
cmp
inc
xor
repnz
mov
and
mov
xor
mov
inc
xor
cmp
or
mov
cmpsb
xor
or
mov
es
fsubl
mov
loopne
push
test
lods
jge
xchg
mov
xchg
mov
push
lods
jnp
bnd
lods
cmp
push
xchg
add
mov
jbe
ficoms
mov
sbb
pop
insb
mov
iret
outsb
adc
jb
sub
notb
xchg
push
adc
and
sub
mov
adc
jp
jo
scas
jl
scas
mov
pusha
arpl
push
sbb
sbb
sti
pop
das
push
inc
and
or
sub
lcall
or
xor
inc
push
or
jb
dec
lea
aaa
push
rolb
jge
popa
add
rorl
adc
mov
xchg
add
rcrl
mov
roll
fs
repnz
out
push
shrb
jbe
ss
and
and
xchg
sbb
flds
xor
fcompl
push
or
jl
xchg
insb
or
mov
das
test
mov
jae
cltd
andb
cmp
pop
sbb
xchg
push
mov
cmp
dec
or
inc
xor
push
xchg
xchg
pop
xchg
cmc
pop
adc
pop
jle
pop
or
mov
mov
mov
adcb
jp
mov
rolb
mov
cmc
cmpsb
stos
push
and
adc
pop
mov
xchg
push
cmpsb
inc
push
cwtl
mov
sub
push
aas
jp
mov
ja
fiadds
sbb
lods
test
subl
not
mov
out
insb
cmp
fldl2t
mov
dec
xor
xor
dec
sub
and
cmc
je
imul
shlb
das
bound
outsl
stos
pusha
xchg
mov
jnp
fnstenv
push
inc
jmp
push
ds
cmp
xor
rcll
dec
loope
fildl
cmp
mov
fisubrs
call
sbbb
call
ret
sbb
push
insb
or
add
enter
jge
cmp
add
das
pop
hlt
scas
dec
pusha
fstl
xchg
into
cmp
mov
dec
insb
cmpsl
and
push
rcll
dec
in
fidivrl
mov
cmp
ficoml
jae
out
add
sbb
pop
daa
insl
cmp
fdivrs
pop
xchg
jno
nop
lods
or
or
cmp
mov
pop
scas
mov
fsubl
fdivrl
or
mov
or
and
lahf
in
ret
jbe
dec
mov
inc
pop
mov
idivl
int3
cmp
fdivrl
dec
pusha
cmp
jmp
data16
rorl
repnz
inc
fcompl
pop
jae
out
and
jle
hlt
test
leave
mov
arpl
push
mov
push
and
xchg
gs
out
add
adc
shr
xchg
lret
mov
adc
push
or
sub
ret
push
mov
into
jmp
adc
sbbb
mov
rorb
sub
cmp
outsl
xor
insl
repz
adc
xchg
lcall
loop
push
pop
jge
rcl
fadd
iret
mov
bound
outsb
lret
fwait
sti
cmp
stos
jg
out
push
addr16
fmuls
sub
adc
es
and
mov
jp
lods
outsb
loope
jl
and
xlat
outsl
cmpsb
mov
icebp
sti
movsl
sbb
mov
mov
fdivrl
lahf
jl
fbld
jbe
dec
xchg
les
jo
in
adc
fdivl
fcoms
adc
stos
mov
cmova
push
dec
iret
xor
mov
pop
dec
es
pop
or
xor
pop
lock
xor
in
jecxz
add
fildl
mov
scas
aas
scas
das
adc
xor
repnz
sahf
arpl
or
sbb
fs
dec
arpl
or
dec
addb
lcall
in
mov
add
dec
sbb
push
dec
mov
out
fistps
sarb
dec
aam
xchg
cmp
cwtl
sahf
adc
cmpsb
outsl
arpl
dec
xchg
mov
or
cmp
cld
dec
scas
adc
or
jb
dec
cmp
adc
xor
dec
shl
clc
dec
or
or
mov
stc
xchg
adc
cmpsb
inc
mov
mov
mov
push
sub
jge
xchg
and
push
mov
out
shlb
add
pop
jmp
push
xchg
sbb
and
jle
mov
dec
or
repnz
in
rolb
mov
pop
cmp
xor
push
sahf
cmp
in
jmp
xor
inc
mov
sbb
jg
popf
mov
fimull
xchg
mov
sub
fldt
sub
mov
iret
mov
das
xchg
dec
repnz
mov
add
fsts
lds
rcrb
xchg
mov
cld
aad
pop
sub
mov
mov
sub
fxch
or
dec
out
jne
enter
mov
add
sbb
jne
jmp
cmpsb
push
lahf
xchg
mov
ds
cmp
cmpsl
loop
std
insb
cmp
arpl
xchg
movsl
cmp
lods
fwait
mov
push
sub
fdiv
cltd
shrl
mov
ds
dec
in
mull
or
mov
push
xlat
clc
out
fxch
push
dec
adc
arpl
xchg
repnz
mov
les
mov
scas
xchg
lods
loope
lods
mov
sub
or
pushf
incl
and
mov
push
stos
daa
stc
mov
adc
xchg
xor
mov
cs
pop
fcompl
stc
lods
mov
lcall
dec
jns
pop
loop
imul
xchg
jb
dec
jo
notl
addr16
or
jmp
push
xchg
push
sarl
rcrl
xchg
or
xchg
sub
and
xor
xor
nop
in
and
xchg
inc
or
repnz
push
xor
mov
lock
gs
fdivs
jb
dec
mov
cld
mov
jmp
push
loop
or
addr16
pop
jmp
xchg
inc
imul
lds
jne
jle
sub
or
mov
pop
xchg
and
pop
xchg
inc
fisubrs
das
xchg
or
push
add
daa
adc
mov
adc
mov
mov
ljmp
divw
sbb
fdivl
stc
mov
test
je
je
adcb
lods
outsb
pop
clc
pop
mov
xchg
push
pop
outsb
addr16
adc
xor
or
scas
add
cltd
mov
popa
inc
out
test
icebp
aam
pop
aad
cli
movsl
in
shlb
jmp
test
jl
jns
cmp
iret
sub
pop
mov
and
mov
push
mov
push
in
mov
xchg
push
test
sub
mov
add
ret
and
outsb
mov
mov
ss
scas
pop
pop
mov
fcmovu
cmp
mov
imul
mov
jl
push
mov
sbb
jns
sbb
inc
mov
push
inc
or
sbb
mov
mov
ljmp
subl
nop
scas
jmp
adcl
xor
test
and
js
pop
jae
mov
sar
rclb
push
xor
outsb
icebp
clc
pop
inc
xchg
aaa
hlt
rclb
insl
mov
cmp
jg
in
loope
push
rorl
fidivrs
inc
je
mov
add
and
pop
xor
cltd
push
dec
add
popf
sbb
mov
iret
sahf
fldl
mov
cmp
mov
pop
insl
mov
jmp
xchg
mov
int3
xlat
dec
iret
sub
in
jg
pop
test
subl
adc
xor
xchg
sub
adc
jno
fbld
ret
and
cmpsb
pop
data16
jno
mov
popa
data16
negb
sahf
or
ret
jle
into
mov
jp
push
sub
insb
filds
sub
add
xchg
xor
out
icebp
mov
gs
ret
jmp
inc
xlat
popf
lods
mov
nop
sub
xor
ss
push
cmc
sti
lahf
es
sub
mov
sub
int3
mov
xor
cli
fldt
arpl
pop
mov
lret
mov
in
insl
enter
cmpsb
out
jno
fiadds
rcr
add
mov
sbb
and
fcompl
outsl
jge
mov
test
int
cli
dec
insl
lret
and
stos
fs
fidivrl
mov
popa
jne
pop
dec
int
pop
jp,pt
mov
or
les
aas
shll
xchg
xchg
or
sub
or
es
add
mov
and
jnp
cmp
sub
fwait
je
inc
les
fildll
push
ss
xchg
clc
mov
stos
mov
repnz
sbb
shrl
movsl
out
test
add
add
xor
arpl
mov
mov
jp
mov
shrb
rcrl
shll
inc
push
sarl
movsb
je
out
loop
movsb
fs
jg
xchg
in
rep
sub
push
jb
xorb
nop
mov
aas
ja
push
fnstsw
push
mov
push
or
stc
pop
inc
jbe
inc
pop
push
es
out
jo
test
sbb
data16
call
scas
test
push
mov
cmpsl
jo
lock
adc
outsl
stc
xchg
or
mov
gs
add
into
sahf
dec
mov
sbb
shll
pop
es
fcmovnu
int3
mov
mov
lcall
mov
fnstsw
clc
push
int3
mov
scas
aad
adc
add
pop
test
lods
jge
add
scas
mov
xchg
dec
xchg
dec
call
adc
jnp
mov
inc
push
sbb
loop
mov
sub
mov
mov
push
pusha
add
pop
insl
aam
xlat
mov
mov
shlb
pop
sbb
lret
jl
arpl
pop
flds
adc
int3
sub
arpl
mov
out
fsubrl
cwtl
in
dec
xor
arpl
jo
cli
in
add
shl
sbb
inc
outsl
clc
push
in
push
adc
push
les
jecxz
xchg
in
pop
je
insb
pop
inc
in
mov
sbb
inc
leave
cltd
gs
cmp
and
mov
ret
jl
cmp
jg
andb
xor
je
hlt
sbb
test
cmpsl
jmp
movsl
leave
sub
push
dec
jnp
out
xchg
iret
pop
jle
in
inc
adc
mov
adc
lds
pop
and
sub
xchg
mov
mov
in
jle
ret
lahf
lea
adc
cmpb
or
jecxz
cwtl
andb
and
mov
jg
pop
push
icebp
mov
addb
xchg
aas
dec
mov
push
sahf
lcall
sub
iret
jle
repnz
addb
lock
add
dec
push
aaa
sbb
inc
sbb
mov
outsb
pushf
orb
inc
insb
inc
subb
cs
xchg
add
xor
pop
or
inc
cltd
loopne
xor
in
sbb
push
scas
jbe
fsubr
out
dec
repnz
mov
dec
or
sub
outsl
jp
je
xchg
test
insl
mov
cmpsb
fs
push
push
mov
or
xor
mov
xlat
add
push
xor
sti
clc
inc
add
pushf
xchg
adc
insb
test
in
jecxz
shrl
int
aam
int3
xor
xchg
mov
mov
scas
jecxz
and
roll
fdivl
incb
jo
mov
jae
xor
cmp
xchg
jo
int3
or
sub
adc
scas
rcrl
lcall
push
pop
cli
dec
loope
into
and
xchg
mov
push
fstpt
jmp
cmp
push
aas
cli
std
or
pop
pop
mov
jmp
cmp
xchg
cmp
adc
shll
scas
mov
adc
fistpl
add
jg
pop
popa
mov
aad
pushf
push
ja
adc
int3
xor
stos
cmp
adc
jae
cmpsb
outsl
arpl
cwtl
adc
push
popa
ljmp
cmp
cmc
aam
xchg
aaa
xor
iret
mov
mov
hlt
adc
xor
add
or
fisubs
fsub
sub
shll
sbb
inc
int3
insb
xadd
outsl
mov
movsl
pop
or
inc
rcll
xor
inc
icebp
rclb
xchg
loopne
jb
pusha
ss
lcall
repz
mov
in
mov
outsb
or
mov
ljmp
hlt
xchg
cltd
adc
daa
fs
push
adc
lea
mov
adc
jbe
dec
sub
push
ds
mov
std
outsl
push
and
push
outsb
cmp
inc
push
adc
stc
jle,pn
outsb
lret
iret
push
mov
bound
lcall
in
mov
inc
xchg
loope
popf
repz
ficoms
idivb
adc
sarb
incb
es
imul
idiv
dec
push
fsubrs
movsl
dec
jg
sti
jbe
sub
and
insb
and
fldcw
movsl
sbb
fnstcw
mov
xchg
addb
add
aas
mov
cmp
imul
or
mov
test
mov
adc
rolb
cwtl
js
xchg
daa
test
mov
sbb
imulb
mov
cs
stc
mov
out
inc
repnz
int
sbb
inc
xchg
jo
cmp
jp
nop
mov
rcrb
add
push
mov
cmp
adc
cmp
shrb
sti
inc
dec
mov
mov
push
cmp
dec
testl
sub
dec
sub
mov
leave
ret
mov
std
push
mov
aam
lcall
lahf
mov
xchg
stc
arpl
hlt
mov
add
inc
lret
mov
out
xchg
testb
push
jbe
iret
stos
out
jge
dec
jns
loop
fdivrl
mov
xor
dec
aam
das
inc
sub
jo
mov
push
loop
test
sahf
adc
fidivrl
into
push
fidivrs
xchg
push
out
testb
outsb
into
fwait
xchg
inc
pop
jecxz
fidivrs
enter
dec
jg
es
inc
sti
jp
xlat
xchg
pop
inc
fldt
gs
add
ljmp
add
ja
test
out
add
dec
push
push
dec
xchg
pop
fsub
in
push
xor
movsb
out
push
dec
lcall
inc
sub
inc
pop
das
in
lcall
sbb
inc
mov
es
jge
jp
bound
mov
and
pop
pop
push
sub
cli
sbb
nop
pop
inc
int3
loope
and
mov
xor
cltd
xchg
xchg
and
lock
loope
lods
mov
mov
fstpt
and
out
int3
mov
outsl
outsb
dec
icebp
je
xchg
mov
cmpsl
lock
int3
roll
rcrb
mov
icebp
mov
sbb
unpckhps
rclb
gs
mov
shld
sarb
push
mov
shlb
divb
jge
outsl
test
xchg
sbb
shrb
outsl
cmp
lahf
inc
push
icebp
rorb
xchg
mov
xacquire
or
and
ja
lods
scas
aaa
aas
sbb
loopne
or
rolb
inc
push
adc
std
int
out
ds
xor
shlb
gs
xchg
add
dec
dec
pop
mov
int3
sbb
jnp
dec
and
jle
xchg
mov
sub
inc
in
or
sub
inc
js
fimull
add
leave
sbb
divl
out
or
mov
js
lret
dec
aad
mov
push
or
lea
mov
pop
sbb
xchg
adc
cs
sbb
mov
stos
gs
popa
xor
in
jecxz
mov
dec
dec
movsl
xchg
repnz
js
lock
xor
add
js
dec
sarb
mov
mov
jno
inc
mov
ja
pop
fmull
jmp
outsb
std
cld
lcall
add
jae
inc
jmp
mov
call
sub
imul
push
ss
gs
ret
mov
xchg
adc
hlt
and
add
ficomps
in
ss
mov
in
or
pop
rcrb
mov
xchg
into
stos
in
xchg
test
mov
cmp
fucomp
and
mov
push
mov
enter
pushf
xor
adc
xchg
fldl
sub
jmp
popf
int3
sti
pop
in
stos
mov
jb
dec
shlb
das
xchg
xchg
push
test
jecxz
xor
and
add
dec
icebp
xlat
sub
cmp
mov
divb
lock
xchg
and
insl
push
xor
dec
rol
stc
rorb
jecxz
mov
insl
cmp
out
jbe
pushf
or
cmc
sbb
aaa
mov
mov
or
inc
test
xchg
inc
xchg
dec
sub
and
cmpsl
cwtl
push
js
enter
pop
push
sbb
js,pn
cmc
and
push
jge
outsb
popa
xchg
or
push
push
shll
inc
movsl
imul
test
inc
fwait
pop
adc
rolb
rcll
push
lret
push
cltd
stos
dec
cwtl
add
int3
test
and
das
push
adc
pop
iret
push
xchg
sbb
xchg
test
hlt
repz
push
add
adc
mov
sbb
dec
pop
hlt
or
out
int3
jl
mov
jo
push
pop
loope
pop
stc
div
cltd
in
sub
or
sub
es
pop
sub
dec
stos
xchg
fdivrl
fistpl
xor
mov
jnp
push
das
cli
mov
je
mov
pop
lcall
lods
in
sub
push
pop
xlat
test
jb
scas
repnz
lock
sbb
ja
mov
xor
push
add
arpl
jno
cmpb
stos
sbb
xor
aam
mov
jno
push
lcall
xchg
adc
push
xchg
dec
fcom
bound
lock
in
js
add
pop
xor
sub
mov
dec
push
scas
and
dec
setb
psrlw
mov
xor
ds
and
mov
inc
dec
packssdw
adc
xchg
scas
int3
ror
inc
inc
fcompl
pop
jge
sti
iret
mov
mov
clc
lret
test
fstcw
mov
movsb
xchg
fldcw
cmp
lds
or
fs
lret
addr16
xor
push
sahf
xchg
cmpsb
push
loope
pop
rol
rcll
push
sbb
cmp
jge
insb
cmp
pop
inc
mov
verr
adc
lds
lahf
lock
movsb
lea
arpl
cmp
popf
aaa
or
test
shlb
out
shrb
mov
clc
ja
les
xlat
jo
inc
lea
test
mov
xlat
popa
lea
add
adc
ret
fwait
xorb
popa
sub
scas
jno
push
jp
fdivr
or
les
faddl
lds
inc
in
sub
stos
xchg
xor
inc
mov
and
aad
cmpl
xor
xchg
aaa
or
xchg
clc
loope
loope
pop
fs
jle
mov
out
cmpsb
xor
sbb
iret
call
lea
mov
clc
adc
das
enter
pop
mov
push
and
ds
jp
out
into
outsb
pop
push
daa
in
push
sti
cmc
dec
imul
xchg
gs
or
cmp
jmp
jb
mov
mov
mov
jne
mov
iret
loopne
std
dec
mov
pop
and
mov
sub
and
in
fbld
mov
add
mov
cmp
or
lods
inc
pop
sbb
ss
lods
daa
add
imul
jns
and
shlb
pop
mov
stos
cmpl
pop
int
pop
pop
clc
lods
cltd
push
or
outsl
clc
inc
adc
out
adc
adcl
xchg
sbb
xchg
in
ret
pop
and
data16
out
into
mov
aam
out
push
adcb
or
jb
pop
repnz
popf
adc
in
cmp
std
add
or
fwait
aaa
jl
cli
ljmp
mov
in
cmp
jb
cmpb
inc
push
out
pop
jbe
xor
shlb
xor
pop
sub
push
sub
movsl
lds
lret
add
loope
fiaddl
pop
out
sbb
sub
stos
lods
xlat
dec
fnstcw
ret
shll
out
test
dec
mov
jge
clc
imul
test
pop
subl
movb
popa
ss
gs
or
cmp
or
js
movsb
or
insl
jnp
fbld
dec
inc
je
inc
sarl
fildl
cwtl
push
sbb
iret
inc
jne
sbb
adcb
test
push
xor
dec
out
dec
sti
jmp
cld
add
lahf
sub
dec
in
lds
rorb
fisttpll
mov
xor
mull
out
add
mov
push
test
testb
mov
sbb
out
xchg
inc
fnstenv
leave
pop
inc
addb
and
jmp
loopne
and
jle
popf
ror
pop
lret
xchg
mov
inc
les
leave
repnz
dec
mov
cmpsl
jge,pn
xor
shr
js
loop
adcb
cld
xchg
mov
mov
movsl
xchg
push
ret
in
inc
int3
nop
inc
mov
jns
add
or
nop
sub
push
xor
loopne
shll
daa
aam
sbb
inc
imul
outsb
jno
sub
enter
pop
lea
lret
aad
inc
fwait
cltd
enter
icebp
dec
push
and
mov
and
push
push
cmpsl
mov
divl
mov
scas
and
js
adc
leave
jb
jecxz
mov
loop
or
jecxz
testb
jae
lods
neg
popf
pop
daa
dec
out
and
ficomps
out
les
pop
mov
or
mov
js
jnp
out
cmpsb
cli
notb
xor
sti
fstpt
idivl
mov
sub
shrl
mov
dec
insb
or
add
pop
pop
mov
inc
push
lret
outsb
data16
frstor
jl
in
mov
inc
imul
lcall
fistps
or
ds
mov
loopne
cli
cmpsb
flds
jns
dec
aas
adc
mov
call
dec
inc
icebp
ret
ret
jp
inc
mov
lret
fisubl
sub
cmpsb
daa
dec
cmp
cmp
cmp
pushf
jecxz
or
dec
push
adc
shll
push
shlb
pop
out
outsl
add
fsubrl
mov
insb
cltd
jle
pop
sub
and
aaa
dec
sbb
add
cltd
sahf
fadds
pop
cli
iret
enter
sbb
pop
or
popa
adc
outsb
add
add
sub
mov
sbb
mov
nop
push
mov
or
adc
je
pushf
bound
push
jge
cs
fbld
adc
mov
and
jnp
push
xchg
add
mov
pop
adc
push
loope
pop
cmp
jg
cmp
in
shll
cmp
adc
xor
pop
ret
lahf
rolb
pop
and
or
cmp
in
fimuls
clc
lea
sub
fnsave
jmp
sbb
push
in
es
inc
or
ffreep
sahf
pop
cmp
aas
out
loope
mov
mov
adc
pop
cmp
or
cli
ret
clc
fdivr
enter
push
testb
jb
jb
xchg
mov
cmp
pusha
push
mov
cmpsb
int3
test
jns
sub
jno
dec
mov
das
pop
inc
adc
lret
movl
dec
mov
insb
adc
xorl
shlb
mov
stos
jge
in
mov
mov
bound
or
xor
inc
das
scas
xor
mov
jp
das
and
mov
add
scas
outsb
dec
xlat
cmp
movsb
ja
scas
add
mov
sub
repnz
and
sahf
into
mov
into
mov
push
xchg
mov
ds
shlb
outsb
mov
mov
xchg
adc
inc
cmp
push
sub
scas
mov
jnp
and
xchg
daa
lods
loope
rolb
sbb
push
jae
out
inc
push
popa
sub
test
dec
dec
xchg
cmp
mov
lahf
idivl
xorb
mov
in
or
loope
mov
fsubrs
shlb
das
hlt
add
into
outsl
xchg
cvttps2pi
into
hlt
sar
xchg
test
pop
ud2
fcoml
or
mov
out
shlb
xor
dec
mov
sub
loopne
leave
jns
sbb
add
js,pt
out
in
lret
fxam
fstpl
jecxz
addr16
lret
sbb
imul
cmc
fcoms
sbb
mov
scas
xor
dec
lahf
sub
ljmp
pop
fisttps
lods
data16
mov
pop
jb
cmpsl
ror
adc
mov
sub
fdivrp
dec
fsubs
lcall
inc
adc
lods
je
sbb
int
into
mov
rcl
stos
faddl
test
and
test
sub
mov
je
mov
cli
lods
pop
es
mov
push
loopne
test
loop
test
xchg
and
insb
into
out
or
fcoml
xor
dec
jmp
or
ret
rol
bound
add
cmpsl
sub
push
mov
fistpll
cmc
pop
leave
sarl
out
test
hlt
lret
inc
in
pmaddwd
mov
pop
mov
popaw
dec
xchg
adcl
into
jnp
dec
inc
movsb
enter
xor
pop
cmpsb
mov
addb
mov
dec
and
insl
stos
sub
rorl
int
mov
mov
mov
pop
pop
and
sbb
mov
cmp
mov
sub
fwait
xchg
int
imul
push
cmp
pusha
adc
outsl
pop
test
push
and
and
cmpsb
fdivl
mov
test
fs
fiaddl
icebp
out
jns
xor
mov
add
and
and
imul
scas
cmc
pushf
xor
mov
adc
adc
leave
es
mov
lret
incb
shl
adc
and
imul
xchg
mov
inc
scas
loopne
fisttps
sbb
pop
xrelease
and
dec
pop
dec
mov
mov
das
pop
and
mov
lods
subb
add
inc
or
push
jl
aad
and
lock
inc
fstpl
and
test
mov
pop
jecxz
lock
cld
in
scas
sbb
sbb
nop
push
push
jne,pt
daa
mov
jne
add
mov
mov
pop
js
jb
or
dec
int3
aam
ror
repz
jne
lahf
nop
out
aam
imul
xor
aad
test
jnp
repz
push
hlt
xchg
mov
sti
xchg
loop
rorb
jge
xchg
sbb
jge
and
mov
adc
pop
pop
frstor
jp
mov
aad
pop
sahf
rolb
aaa
or
mov
popf
add
popa
imul
shll
cmpsb
or
pop
mov
mov
adc
lahf
in
rol
adc
xchg
adc
mov
inc
inc
push
aas
jle
iret
mov
gs
fcmovbe
mov
add
adc
mov
ljmp
pop
scas
jmp
push
cmp
adc
aaa
jmp
mov
daa
stc
mov
leave
shr
mov
in
xchg
push
testb
fs
cmp
test
aaa
xchg
xchg
fisubrs
dec
cli
jle
jle
dec
ret
iret
ja
mov
pop
add
mov
mov
fidivrs
pop
push
rcll
pop
sbb
jecxz
sub
inc
cli
sub
adc
sarl
insl
dec
aaa
cmp
sahf
mov
push
push
ljmp
jns
inc
sub
pop
sub
cli
add
jmp
inc
xchg
sti
mov
adc
mov
repz
push
loopne
jo
js
push
mov
insb
mov
inc
or
fadd
data16
adc
ficoms
movsl
inc
nop
push
mov
out
xchg
push
jmp
bound
das
adcb
out
or
xchg
or
orl
cmc
or
add
sbb
pushf
jle
jns
inc
call
xchg
push
test
xor
dec
adc
push
cmc
faddp
pop
aad
xchg
pop
mov
jge
out
add
inc
popf
sti
in
test
dec
popf
adc
movsb
dec
inc
push
add
dec
repz
in
fdivrl
xor
roll
cmp
and
dec
adc
jl
xor
or
cmp
repz
inc
jle
jmp
push
test
imul
push
adc
dec
mov
dec
pop
aam
dec
jmp
adc
psubb
out
nop
xchg
fsubrl
mov
xlat
sar
repnz
or
cli
cmp
or
dec
and
movsb
call
jb
sbb
bound
dec
rol
cs
mov
mov
mov
popa
push
mov
or
inc
dec
jle
xchg
into
jbe
mov
cmpsb
fxch
jo
mov
lds
nop
lahf
cmp
popa
imul
cmp
mov
add
pop
int
lcall
lret
sub
pop
push
icebp
das
adc
dec
or
pop
fisubs
icebp
xchg
adc
out
pop
cmpsb
ss
and
dec
loopne
mov
push
movsl
pop
jae
cli
and
push
pop
fs
orl
or
outsl
xchg
xor
iret
push
dec
popa
lods
pop
adc
insb
imul
popa
lahf
mov
xor
dec
mull
popa
jnp
ljmp
jb
aas
rorb
adc
mov
out
sahf
dec
rcll
mov
jbe
test
dec
js
jmp
push
int3
mov
aad
scas
ss
adc
sub
fiaddl
push
addr16
aaa
jbe
cmpsb
sbb
leave
add
mov
jae
jne
inc
cmp
adc
pop
fdivl
stc
pop
popa
xchg
mov
stos
push
nop
add
cmp
fstps
std
addr16
mov
pop
lret
and
sti
rcll
les
cmc
mov
cld
test
and
outsb
pushf
dec
xor
and
xchg
lds
push
add
cli
xchg
cmp
pop
lods
addr16
pop
xlat
lea
add
dec
enter
inc
and
int
in
pushf
fwait
dec
cmp
mov
ds
shrl
sbb
jmp
pop
je
inc
das
and
jno
pop
xor
pop
inc
cmp
out
xchg
jno
cwtl
and
rol
push
neg
push
pop
xchg
cs
mov
cmc
sbb
scas
add
mov
insl
inc
ror
inc
cmpsl
pop
shrl
pushf
push
ja
popa
xchg
lock
in
mov
xchg
rolb
mov
pop
add
adc
xchg
out
fwait
pusha
and
in
movsb
rcrb
cmp
rcrl
lods
test
fs
inc
xchg
hlt
int
aam
mov
ja
ljmp
outsb
jo
ja
fbld
xor
jb
imul
mov
imul
dec
cld
bound
mov
sbb
lahf
aas
mulb
iret
inc
cmp
aaa
test
pop
pop
xor
or
insb
ss
mov
mov
mov
fcos
mov
push
sbb
or
mov
repz
mov
loope
or
push
addb
inc
mov
jp
mov
add
fdivl
mov
jmp
mov
and
fldl
push
push
mov
pop
cmpsb
shlb
sarb
rorl
ret
or
sti
dec
ljmp
push
aas
xchg
popa
aas
mov
shlb
xchg
cmpsl
mov
xchg
sbb
sbb
push
mov
icebp
mov
call
sub
push
xchg
aad
adc
xchg
in
sbb
rcrl
dec
hlt
cmc
jg
mov
mov
cmpsl
es
mov
imul
out
in
je
mov
cmpsb
jg
sbb
xor
dec
js
or
cmc
mov
pop
jecxz
mov
xchg
mov
cmp
ror
xchg
mov
mov
mov
inc
xchg
jnp
xor
shll
ret
cli
cs
push
shrl
adc
fildl
cltd
leave
add
push
push
mov
push
inc
jle
push
pop
jle
lock
push
cli
test
or
imul
pop
dec
adc
xor
aas
nop
and
adc
fsts
lock
daa
inc
push
outsl
mov
mov
xchg
cmp
jge
leave
stos
push
test
fwait
mov
push
out
nop
jo
xor
push
push
dec
add
mov
or
movsb
xor
inc
cmp
pop
lcall
call
dec
mov
les
inc
std
cmpsl
add
jle
mov
nop
pop
lods
clc
cs
add
cbtw
xor
inc
push
add
cs
cmpsb
sub
mov
sbb
and
pop
packsswb
ja
repz
xor
sbbb
sub
mov
dec
pop
das
rol
or
outsb
dec
dec
xor
push
dec
xor
orb
lcall
pop
xlat
loope
in
and
sbb
test
jbe
scas
call
outsb
cmpsl
mov
icebp
je
dec
lea
icebp
out
add
shlb
adc
fstl
xor
sub
sbb
data16
stos
pop
in
dec
lret
or
roll
adc
addb
outsl
xchg
frndint
mov
mov
repnz
mov
add
sbb
cltd
sub
mov
push
lods
and
sbb
add
mov
pop
or
roll
arpl
sub
or
xchg
cmp
scas
xor
or
mov
inc
xchg
mov
dec
dec
aas
mov
sahf
sub
mov
add
shr
aad
cmc
fsubrl
mov
pop
mov
and
sarl
adc
xor
jg
insb
loop
lock
leave
je
push
leave
fsin
outsb
out
jge
mov
testb
mov
pushf
and
loopne
movsb
cmp
inc
pop
shlb
mov
stos
mov
cmpb
push
push
or
mov
add
hlt
sahf
insl
inc
jbe
jp
xor
in
pop
notl
int
fldt
sbb
jb
lahf
pusha
push
test
xor
mov
xor
movsl
aas
test
cld
sbb
add
loopne
jne
xchg
scas
in
inc
jne
pop
add
push
inc
adc
lcall
mov
dec
xchg
punpckldq
xor
stos
push
andb
pop
pop
mov
mov
dec
daa
mov
push
pop
std
es
leave
subb
jg
rorb
add
add
add
jo
dec
hlt
std
loopne
outsl
ficoms
pusha
sbb
js
xchg
and
dec
dec
nop
xlat
and
mov
fucomi
pop
mov
lahf
insl
push
xchg
mov
xor
pop
in
pop
mov
xchg
jno
inc
xchg
sbb
jns
rolb
loop
or
movsl
jmp
addb
mov
divl
mov
cmc
sub
jae
xchg
mov
lea
push
xchg
cwtl
lock
jecxz
aas
mov
add
jno
pop
xchg
shll
cmp
push
ret
lahf
mull
divl
sti
lock
shlb
aaa
cmpsb
xor
mov
fs
in
add
mov
dec
lahf
xchg
inc
cmc
cmp
mov
sub
clc
cmpsb
lods
or
ss
leave
push
jmp
pop
jg
dec
jae
cmp
mov
dec
lcall
stos
rcr
fbstp
or
mov
adc
outsl
push
js
push
sbb
ret
mov
aam
jbe
jmp
inc
jmp
cmp
add
push
add
dec
or
imul
and
lock
pop
adc
or
mov
or
pusha
sub
xchg
test
lock
mov
scas
mov
jo
push
or
in
xchg
outsb
mov
add
stos
fcoms
pushf
jb
mov
movsl
inc
push
add
mov
sub
mov
mov
mov
stc
xor
inc
repz
xor
imul
cmp
nop
addb
outsb
call
sti
movsl
dec
lret
aas
mov
in
push
mov
aad
hlt
pop
adc
movsl
test
jmp
jno
xchg
popf
sahf
jmp
cmp
fisttpl
cwtl
jno
mov
mov
sub
pop
add
sahf
or
test
push
ret
lds
call
dec
in
cmp
dec
mov
movsb
dec
pop
stos
les
dec
xchg
repz
mov
int
jb
stos
js
mov
popf
in
jo
xchg
stc
xchg
mov
pop
movsl
cmpsl
pop
push
mov
pop
shlb
popa
inc
enter
xchg
jg
and
stc
out
addb
jp
cli
dec
lahf
fnsave
sub
out
jmp
add
mov
cmpsl
fidivrs
lea
jae
xor
fdivp
leave
push
mov
dec
test
xor
inc
adc
sub
add
mov
mov
sti
js
mov
pop
adc
push
ds
xorb
cwtl
mov
xlat
pop
mov
mov
add
clc
push
pop
repnz
jno
decb
pop
test
mov
add
loope
xor
sbb
adc
mov
sti
push
or
pop
mov
lcall
cmp
cld
xor
mov
mov
mov
and
push
test
jb
mov
add
push
jp,pt
fbld
sahf
fs
sbb
std
daa
adc
cwtl
mov
xchg
fstpl
sbb
insb
xchg
call
cltd
addr16
ret
mov
test
or
gs
stc
insb
xor
sbb
and
jmp
inc
push
jno
sbb
and
xchg
es
jp
push
jne
sahf
push
shll
cltd
inc
push
xchg
sub
popf
inc
lods
jg
and
in
or
jecxz
fmuls
mov
jg
insl
lret
mulb
push
cs
aaa
nop
in
mov
loope
popa
jl
mov
and
cmp
pusha
pop
pop
adc
mov
bswap
scas
xor
std
bound
fdiv
pop
cmp
into
daa
or
out
or
xor
or
sahf
fcompl
push
int
ss
cwtl
jnp
stc
mov
sbb
xor
pop
pop
sub
aas
mov
cwtl
push
das
test
test
cli
lock
lahf
jle
nop
dec
shl
jmp
rep
clc
dec
sti
aam
xlat
lcall
mov
mov
cltd
pop
scas
jnp
sbb
mov
mov
int
ss
sub
mov
and
div
pushf
jmp
cmp
mov
or
lret
add
into
repnz
push
jmp
scas
fidivs
push
testb
mov
scas
push
ljmp
push
mov
icebp
outsl
pop
push
daa
and
repz
stos
mov
leave
and
mov
push
add
mov
mov
cmp
cmp
push
lahf
pop
sbb
fs
inc
add
pop
and
sahf
jge
sub
pop
pop
imul
xor
mov
ret
xchg
jmp
stc
mov
pop
adc
into
cmp
shrb
xor
push
mov
fwait
xchg
in
iret
adc
sbb
and
jae
push
cmp
cmp
add
inc
xor
cmpb
adc
inc
adc
add
out
fistl
lret
mov
dec
out
sti
popf
push
mov
jl
fwait
int
and
mov
rol
cmp
or
movsl
add
lds
fisubrs
adc
push
lock
dec
cli
cmp
mov
push
inc
loop
sahf
or
jl
cltd
adc
cmc
xchg
in
pushf
push
xor
xchg
jmp
jns,pn
stos
add
jmp
mov
xchg
or
add
or
iret
sub
mov
sbb
aas
add
inc
dec
rorl
jne
push
lcall
les
or
mov
jno
mov
cld
push
dec
xchg
lcall
sbb
andl
daa
adc
out
xor
scas
mov
xchg
jae
and
cwtl
enter
pop
push
loope
jo
std
push
ret
out
jmp
loop
jbe
dec
inc
test
cmpsb
bswap
adc
loope
loope
push
pop
cmpsb
sbb
lret
leave
fstl
pop
bound
mov
adc
movsb
and
bound
cmp
pushf
hlt
push
mov
fs
sub
les
movb
push
idivl
xchg
push
in
xor
xchg
push
or
or
cmpsb
xchg
jmp
jbe
mov
mov
popf
in
lret
sar
jb
jmp
sbb
dec
mov
repnz
xor
pop
lret
test
iret
fwait
sub
cmp
or
or
pop
push
scas
es
loopne
neg
push
arpl
fildl
lods
adc
dec
xor
das
mov
in
dec
loope
dec
cmp
mul
dec
dec
jnp
fcoms
jae
arpl
daa
inc
out
pop
mov
rcrl
pop
push
adc
sbb
sti
mov
pop
mov
pop
pop
push
sub
in
xchg
dec
jb
jns
xchg
adc
and
ljmp
into
int
movsl
dec
xchg
push
aam
inc
sub
mov
lret
dec
dec
icebp
out
sarl
xorb
mov
sahf
das
and
xchg
pop
fidivl
stos
xchg
les
in
jae
xchg
mov
jne
fcoml
shlb
sub
test
repz
les
movsl
sbb
dec
imul
and
rcll
adc
mov
andb
jae
inc
int3
test
outsl
xchg
fs
mov
mov
pop
aas
mov
pop
scas
movsb
shlb
aaa
jns,pn
adc
repz
insb
mov
mov
jbe
cli
xor
int3
cld
and
mov
shrl
jp
cmp
or
aam
scas
pop
jle
or
mov
adc
mov
insb
aas
pusha
stos
sti
push
and
inc
and
out
clc
inc
sub
scas
xchg
jmp
hlt
inc
mov
inc
pop
mov
pusha
jno
inc
loopne
ret
jae
pop
inc
sarb
mov
mov
cmp
loop
movsb
xor
xor
dec
mov
push
shlb
daa
and
in
pusha
adc
push
inc
jmp
jg
sbb
push
jns
jge
sbb
or
sarl
adc
ja
and
out
xchg
and
mov
sub
mov
nop
mov
imul
aad
popf
push
sti
lock
mov
lods
add
leave
adc
rcll
mov
mov
pop
mulb
std
xor
mov
mov
sbb
je
fldl
stos
jle
xchg
jb
sbb
ror
add
add
in
mov
xlat
cmpsb
cmovns
mov
jmp
imul
add
movl
cwtl
xchg
inc
push
sub
or
or
in
insb
lds
push
sbb
xlat
add
cmp
jns
xor
out
pop
idivl
es
pop
mov
mov
fstpt
pusha
or
dec
je
sub
inc
and
inc
sbb
das
cmc
mov
pusha
aaa
mov
jecxz
mov
insl
mov
and
sbb
in
fwait
adc
push
mov
push
je
sbb
or
xchg
int
rcrl
cmpsl
ret
mov
mov
push
mov
or
xchg
aaa
jl
mov
xor
dec
mov
mov
pop
fstpt
fnstenv
cld
imul
pop
add
xchg
inc
fdivp
stos
lea
loopne
lea
aaa
pusha
xchg
lcall
ljmp
sbb
jns
push
xchg
lods
cmp
mov
enter
cmp
jecxz
xchg
pushf
scas
inc
pop
pop
adc
leave
mov
out
dec
cld
in
add
imul
inc
xchg
clc
add
insb
cwtl
push
addr16
imulb
pusha
out
mov
push
mov
jb
xor
and
pushf
mov
mov
vpshab
xor
cmp
sbb
or
jl
int3
ret
adc
inc
scas
jl
cmpsl
xchg
bound
std
hlt
and
push
mov
pop
repz
jl
xchg
or
cwtl
cmpl
out
stos
loope
or
pop
or
or
dec
xor
stos
insl
push
push
push
dec
sub
das
sub
aas
jno
notl
jp
push
mov
inc
ret
stc
leave
jne
leave
out
mov
mov
add
repz
call
notl
mov
aaa
fidivrs
addr16
sub
sbb
xor
arpl
mov
sbb
adc
mul
adc
mov
mov
rorl
pop
xor
mov
mov
lahf
sbb
notl
xor
mov
clc
lds
ds
ja
sub
xor
outsl
fstpt
and
in
mov
dec
adc
ffree
mov
pop
mov
mov
into
pusha
decb
aaa
test
icebp
mov
push
xlat
mov
pop
shll
les
mov
or
ja
andb
loop
rorb
lret
adc
jb
pop
subl
fisubl
ficomps
or
addr16
dec
das
dec
mov
ret
mov
nop
outsb
call
mov
loop
xchg
pop
in
mov
in
fnstcw
sub
add
or
push
pop
shlb
mov
int
xlat
cltd
bound
mov
push
lods
fs
or
aam
jp
pop
pop
outsl
dec
ds
mov
leave
mov
arpl
insl
movsl
ret
or
enter
imul
push
arpl
fwait
popf
ss
mov
pop
dec
inc
push
popf
push
nop
nop
ljmp
jne
jne
dec
or
mov
repnz
inc
loope
xor
inc
add
in
or
addr16
cs
xorb
mov
and
and
cmc
stos
jbe
dec
sub
push
pop
addr16
push
je
sbb
and
xchg
jae
in
xor
pop
adc
js
es
jg
iret
testl
dec
outsl
push
mov
int
sbb
scas
mov
rol
mov
sbb
mov
pop
test
push
lock
loopne
mov
cmp
xchg
icebp
dec
in
inc
iret
iret
sbb
dec
lret
inc
lods
jg
jp
je
jmp
or
insb
jne
mov
ror
inc
pop
cmp
pop
notb
mov
ds
or
or
xor
insl
ficoml
nop
inc
shrl
xchg
test
movsl
mov
shl
push
int3
xor
mov
ja
cmpxchg
aas
lret
jne
adc
mov
and
pop
jp
addl
in
push
int
inc
stc
in
mov
hlt
inc
push
mov
mov
aas
mov
daa
aaa
leave
pusha
call
int
loopne
add
daa
xor
pop
lods
sbb
sbb
mov
mov
mov
push
mov
sbb
out
inc
lock
popl
es
cmp
sbb
adc
aam
fs
je
pop
les
inc
inc
add
aaa
dec
cmpsl
cmp
movsb
scas
mov
mov
dec
cwtl
push
cli
es
xor
xor
repnz
imul
cld
push
dec
cmpsl
hlt
lahf
pop
sbb
repnz
inc
jg
test
fs
icebp
ljmp
in
bound
hlt
outsl
pop
insb
fsubl
in
lods
icebp
add
jle
add
xlat
leave
ja
fstl
pop
ljmp
jecxz
dec
imul
xchg
xor
jp
jae
shl
loop
jb
test
mov
outsb
cmp
inc
add
testl
in
xor
movsb
out
mov
sbb
sbb
push
cmp
xchg
sub
mov
insb
mov
jle
mov
xor
out
dec
mov
mov
add
out
dec
shrb
mov
inc
xor
cvtpi2ps
mov
jno
jnp
and
bnd
or
nop
adc
inc
addr16
jne
leave
xor
add
xor
adc
iret
mov
or
inc
pusha
jbe
dec
cltd
jno
xorl
dec
outsl
ret
arpl
popa
lods
jb
outsl
mov
adc
pop
test
lcall
cmp
adc
cmp
outsl
pop
ds
cmp
andb
ljmp
mov
inc
insl
in
xchg
cmp
sbb
jb
xchg
cld
add
jl
arpl
jl
or
or
jbe
and
inc
jg
shl
shrb
ljmp
iret
add
mov
loop
imul
xlat
dec
and
jmp
jae
scas
cmp
cmp
nop
call
inc
cli
movsb
rclb
call
sarl
jp
lds
adc
sbb
inc
lock
and
cltd
test
jae
jne
xorb
sti
push
jbe
jg
je
insb
push
inc
fwait
xchg
fs
cmp
mov
mov
xchg
fisubrl
aas
push
scas
iret
cwtl
out
fstpt
mov
sbb
out
and
mov
bound
inc
shl
in
inc
pushf
sub
jge
add
jmp
fwait
ret
js
test
cmp
cmpsb
mov
xor
std
push
adc
cmp
jecxz
dec
inc
inc
subb
dec
cmp
pop
inc
nop
adc
sbb
sub
enter
insb
lcall
shll
test
iret
xchg
pop
loop
xchg
sbb
jbe
push
pushf
mov
je
mov
mov
movsb
jnp
adc
inc
xor
imul
adc
and
and
pop
stos
and
jbe
dec
adc
enter
call
test
xchg
xchg
cmpsb
jno
shrb
insb
call
test
and
cmp
sbb
loope
inc
cmp
sub
sbb
pop
jmp
outsl
loop
and
mov
mov
lods
pop
aam
in
push
outsb
xchg
and
movsl
push
cmp
or
outsb
outsl
rorb
xor
movsb
cld
and
adc
repz
in
and
push
mov
mov
inc
int3
and
mov
ja
push
cli
popf
lea
lret
loope
lahf
or
push
aam
add
and
popf
sub
jecxz
int3
iret
mov
mov
andb
inc
aad
imul
mov
insb
and
mov
lea
inc
jl
addr16
add
lahf
rolb
add
andl
ds
xor
inc
lods
add
hlt
outsb
xor
das
mov
test
jno
shlb
push
mov
shl
dec
pop
loopne
stos
mov
addr16
push
mov
shr
les
pop
int
adcl
xor
addl
mov
sub
popa
push
push
inc
lods
out
ret
sub
stos
aas
adc
lea
je
pop
mov
or
pop
pop
repnz
push
sbbl
and
leave
cwtl
push
sbb
mov
xor
push
sub
jg
mov
mov
mov
jl
add
stos
and
mov
dec
sub
imul
adc
std
jns
adc
xor
and
jne
shrl
test
and
aas
stos
nop
cmp
mov
aas
push
fisttps
add
cmp
adc
hlt
jecxz
xor
xor
jp
push
nop
gs
cli
and
out
test
push
in
jmp
and
dec
sub
or
outsb
clc
loop
popa
mov
ficoms
fistl
loopne
sar
cmp
adc
out
add
push
daa
xor
jge
bnd
jle
ja
mov
iret
ljmp
pushf
xor
aad
xor
pop
test
adc
test
ljmp
sti
dec
lret
leave
fucomp
or
cmp
cs
enter
add
js
shrl
add
push
push
pop
popl
ret
mov
xchg
push
in
in
adc
hlt
dec
pop
adc
stc
lds
bound
mov
lock
mov
faddp
sub
xor
lds
sbb
push
leave
in
dec
cwtl
lds
stos
aas
cmp
gs
test
int
aaa
mov
mov
fistpl
push
sbb
push
mov
kxnorw
dec
add
test
lds
mov
mov
lea
dec
push
ret
cmp
jne
xor
push
out
sub
mov
mov
cld
lahf
inc
aaa
and
repz
jno,pt
addl
bound
enter
pop
repz
mov
mov
loope
int3
jge
jmp
xor
dec
stc
hlt
and
pusha
sub
jecxz
outsl
xchg
jo
les
test
sub
sub
fcmovb
in
mov
clc
ljmp
xlat
sub
pop
sbb
movsl
mov
clc
push
cs
and
jl
sub
das
xor
sub
mov
xchg
frstpm(287
iret
jno
dec
sub
jbe
std
xor
add
push
sbb
mov
push
push
lds
jne
mov
std
outsb
gs
xchg
inc
mov
inc
rcll
pop
insb
mov
pop
mov
mov
in
lahf
and
dec
adcb
xchg
rcrb
cmp
std
xchg
mov
dec
std
sub
test
mov
pop
sub
lahf
orl
ret
sbb
mov
inc
rcrb
push
icebp
jmp
xchg
jl
stc
dec
outsl
adc
xchg
jbe
fmull
hlt
mov
mov
clc
movsl
mov
mov
add
sub
loopne
pushf
jp
jmp
dec
xlat
shrb
push
cmp
sbb
loope
xchg
out
into
xchg
popf
pop
lret
loopne
aad
mov
cmp
inc
sbb
mov
xor
inc
scas
jl
ret
insl
lock
fs
pushl
imul
lcall
and
mov
in
dec
lock
insb
xchg
stc
adc
mov
pop
in
fnstcw
out
mov
sub
xor
sbb
inc
push
lea
jb
rclb
or
jmp
loope
or
pop
xchg
xchg
inc
ds
cmp
push
and
sub
push
pop
push
mov
movl
and
clc
xor
inc
fnstcw
pop
inc
lcall
cmc
jmp
fisttpll
push
mov
neg
in
jg
adc
rcll
push
das
ds
outsb
sbb
aad
xorl
dec
sbb
stos
daa
mov
cs
das
stos
sub
add
mov
push
adc
jmp
fwait
mov
js
lahf
inc
movsl
cmp
jecxz
lods
jle
cmp
shrb
inc
jmp
pop
cmpsb
mov
enter
std
jno
test
in
and
je
and
push
xor
xchg
ja
xlat
cmp
jecxz
lret
push
outsb
push
fnstcw
push
jle
int
repz
movsl
pusha
xchg
jne
into
insb
addr16
stos
test
les
in
xchg
outsb
int3
cmp
pop
mov
lea
cmpsb
popa
fwait
sbb
lret
out
inc
mov
sahf
add
ljmp
shr
sub
lcall
mov
test
fucomip
ds
push
outsl
ds
inc
fmull
enter
lcall
and
mov
daa
sahf
xchg
sub
out
mov
stc
push
sub
dec
scas
out
fldenv
addb
fs
imul
jae
out
jns
repnz
xor
mov
and
mov
les
mov
cmpsb
in
sbb
enter
scas
cwtl
lods
arpl
pop
jmp
dec
cmc
xchg
and
sub
stos
insb
xor
cmpsl
iret
shlb
sar
jecxz
sbb
cltd
lret
lahf
pandn
pop
ret
xchg
and
xchg
jbe
pop
xchg
leave
jbe
dec
nop
rol
repnz
js
add
lcall
roll
sti
xor
add
mov
lock
test
pop
jb
sub
aam
scas
or
aaa
mov
push
push
shll
ljmp
aas
cld
pushf
push
fdivs
mov
xchg
push
jo
movsb
pop
stos
sarb
cs
addr16
xchg
jnp,pt
sbb
jae
in
xor
je
pop
xchg
outsb
fiaddl
jmp
icebp
popa
xchg
sbb
pop
mov
hlt
incl
jmp
mov
jo
ret
jg
sbb
and
jp
pop
and
fsubrp
enter
adc
dec
jge
lea
js
nop
cmpsl
ljmp
stos
jle
cs
pop
cmpsl
daa
mov
scas
ljmp
not
push
jle
imull
jns
mov
jb
inc
mov
stc
iret
push
dec
or
data16
mov
test
cmp
cmp
jle
cltd
idivl
loopne
popf
push
lcall
sahf
xchg
xor
rcrb
sub
cmp
sbb
xchg
pop
lcall
dec
add
sub
push
in
mov
loope
jle
cli
cmp
insl
loop
push
pop
mov
adc
pop
fidivrl
cmp
mov
dec
and
push
les
movsb
sbb
nop
out
pop
xor
cmp
mov
into
mov
sar
std
int3
outsl
pop
or
jecxz
xor
push
in
mov
inc
xchg
push
push
sbb
mov
jle
pop
aas
ja
add
adc
xchg
dec
sub
pop
in
insl
sti
pop
fnstenv
xor
pop
jle
cmp
push
inc
imul
xor
arpl
cmp
popa
aad
xor
lcall
adc
movsb
mov
xor
adc
mov
mov
inc
lret
xorb
dec
adc
addb
data16
gs
sti
or
movsb
adc
and
inc
and
js
int3
jae
aam
push
and
jmp
jnp
jle
or
insl
adc
stc
test
or
pop
mov
iret
pop
inc
psubd
ret
add
fdiv
je
repz
mov
push
aaa
push
cs
loopne
mov
std
cmp
js
mulps
xchg
mov
mov
jb
jmp
add
das
fdivrs
mov
and
sub
aas
clc
lds
out
xchg
ja
cwtl
mov
pusha
int3
xor
lcall
jno
mulb
xchg
nop
sahf
pop
sub
push
mov
push
jl
xchg
call
scas
inc
nop
sub
mov
or
and
lea
decb
ss
and
cmp
test
mov
mov
cmp
lods
xor
xchg
div
inc
pop
movsl
cwtl
arpl
adc
and
sbb
dec
mov
mov
jge
sub
int
stos
int
and
clc
pushf
pop
in
sub
pop
mov
xchg
rclb
dec
mov
cmp
pop
out
outsb
dec
mov
in
lret
cwtl
ljmp
dec
push
sub
and
test
cmp
jecxz
aas
icebp
in
mov
xchg
pop
xor
pop
mov
jp
mov
fldenv
push
jb
std
testl
mov
push
or
imul
jmp
xchg
movsb
xor
add
ret
gs
imul
lcall
repnz
aad
cltd
inc
rol
pop
scas
repz
xor
mov
out
andl
ljmp
xchg
push
xchg
mov
sbb
shll
or
mov
xchg
popa
xlat
jno
je
mulb
jnp
jbe
xor
lods
outsb
dec
insl
nop
les
scas
das
pop
js
jae
in
mov
sbb
ja
test
gs
loopne
push
or
pop
pop
inc
fxch
out
rcll
inc
enter
mov
cs
es
es
fsts
out
fucomip
sub
ret
jle
adc
popl
dec
popf
dec
and
popf
sbb
add
pop
mov
das
popa
pop
inc
adc
gs
or
inc
mov
inc
fsts
lods
sub
filds
jns
xchg
mov
movsl
cmc
xchg
pop
lds
push
xchg
mov
cmp
jno
hlt
leave
stos
xchg
sbbl
cmp
iret
cli
sub
mov
cmpsl
clc
xor
loop
nop
test
xor
icebp
movsl
jle
les
cwtl
sub
xchg
push
xor
mov
je
ljmp
insb
insb
or
ljmp
cmp
sbb
xchg
or
repz
je
dec
dec
hlt
mov
repz
mov
jg
mov
push
xchg
subl
leave
jg
pop
testl
sti
sbb
popa
jb
cli
xchg
lret
jl
daa
lret
cmp
lret
xchg
rorl
push
cs
das
or
xor
test
add
and
pop
cmp
in
clc
in
lcall
mov
or
call
pop
push
xchg
and
sbb
sbb
hlt
cld
outsb
lcall
push
push
cmpsl
sub
fisubl
out
mov
lea
push
mov
popf
adc
pop
pop
sbbb
aad
popa
arpl
pushf
add
dec
cmpsl
dec
jb
inc
int3
xor
ljmp
mov
arpl
scas
mov
cmp
mulb
rclb
ja
std
arpl
push
cli
xor
into
inc
mov
xchg
add
pand
scas
xlat
sbb
add
imul
imul
in
stos
inc
inc
sub
cs
insl
jle
test
sub
leave
ds
fwait
xchg
mov
jmp
xchg
clc
pushl
cmp
sub
cli
xchg
jb
jp
cs
rcl
xchg
je
std
add
test
sub
pop
jge
fidivl
outsb
aaa
xchg
cmp
orl
pop
mov
arpl
insb
cli
and
lds
mov
mov
mov
mov
sbb
mov
mov
sub
cs
xchg
pop
out
mov
add
popf
push
cmp
imul
lahf
lret
add
pusha
jae
inc
in
sarl
orl
push
loopne
dec
cmc
ficomps
or
mov
mov
sar
push
jl
pushf
out
aaa
cltd
ss
mov
sub
out
addr16
mov
adc
popa
sti
xchg
push
jae
in
or
in
inc
and
int
daa
bound
ljmp
arpl
outsl
out
or
call
in
leave
xor
adc
jb
shlb
lcall
test
data16
shll
push
add
out
jecxz
sub
cmp
in
or
mov
push
aad
lods
cmpl
leave
inc
jno
cmp
sub
sub
arpl
das
insl
fists
out
sub
push
or
movsl
pop
add
adc
mov
fcoms
pop
les
xor
cltd
sub
jne
fs
mov
hlt
movsl
iret
das
je
cmc
sub
or
jmp
pop
enter
sbb
push
xchg
xchg
nop
inc
rcrb
cmp
jbe
test
and
dec
lods
dec
ror
add
cmp
pop
int3
movsl
dec
add
shlb
shrl
jns
pop
or
cmp
mov
roll
lds
or
stos
pop
test
and
cli
shl
mov
popa
ficoms
push
jmp
scas
or
add
mov
push
fadd
push
xor
shll
rorb
cmpsb
push
js
outsl
adc
add
dec
pop
jl
xor
in
repnz
imull
je
bswap
mov
daa
shl
cmp
xor
lods
jecxz
mov
xchg
ret
shlb
sbb
call
in
sub
cltd
jg
lods
mov
push
push
cwtl
mov
dec
push
cmp
addl
push
pop
fs
jp
sti
fdivs
inc
movsl
test
lock
aad
dec
cmp
dec
cmpsl
jle
in
sub
cli
mov
dec
lds
push
pop
aad
movsb
cmp
lock
xchg
jne
fwait
lods
add
in
mov
test
sti
out
aas
sbb
enter
push
repz
add
xor
insb
xchg
or
xchg
cmp
in
xor
mov
repnz
ljmp
mov
adc
xchg
mov
sub
sub
mov
sbb
push
cmp
out
xor
fs
xchg
mov
sbbb
mov
cmpsl
stc
push
cwtl
and
jl
push
fmulp
sub
outsb
mov
ret
mov
sbb
mov
mov
adc
inc
addr16
aam
sub
or
jecxz
lret
cli
mul
mov
in
jge
sbb
aaa
les
lahf
jae
stc
jg
and
in
loop
jp
movsl
or
cmpsb
lods
les
mov
rcl
addr16
aad
inc
std
adc
xor
xor
xchg
dec
stos
mov
ds
lods
push
xchg
imul
sbb
in
xrelease
jbe
cs
xchg
dec
dec
push
sarl
scas
inc
pop
cli
subb
and
pop
jb
sbb
fnsetpm(287
lahf
outsb
dec
sti
cmpl
js
rorl
jo
xor
arpl
mov
scas
xor
jl
test
out
push
aas
sbb
testb
sahf
outsb
outsb
push
pop
xlat
outsl
scas
cli
rolb
cwtl
addr16
jl
leave
sbbl
int
fnstsw
mov
adc
dec
push
mov
push
pop
int
cmpsb
aaa
daa
ds
mov
dec
hlt
inc
dec
dec
loopne
adc
add
decl
fcompl
sbb
mov
adc
in
xchg
or
iret
mov
sarl
hlt
xlat
jl
xor
shlb
push
mov
xor
test
pop
fistps
inc
lret
sbb
and
push
or
mov
rol
adcl
fnsetpm(287
sarb
adc
int3
pusha
mov
dec
cmp
ret
jno
pop
in
cmpl
ds
subl
dec
xchg
push
ret
rcrb
imul
loop
stos
in
mov
cmpsb
adc
pop
or
pusha
clc
mov
cmp
pop
sbb
mov
popa
pop
dec
pop
push
ja
jbe,pn
sbb
cmp
dec
fisubrl
sub
in
push
and
jne
imul
bound
ss
mov
pushf
adc
ja
mov
jbe
popf
ss
clc
push
ljmp
pop
fmulp
pushl
inc
fsubr
jecxz
xchg
das
fcmovbe
fs
test
stc
xchg
imul
xchg
mov
lcall
sbb
xchg
pop
loop
in
mov
inc
fbstp
add
cmpsb
mov
aas
add
aas
inc
out
pusha
inc
mov
notb
sub
push
lret
sub
and
mov
push
push
xor
inc
xchg
imul
pop
cwtl
rorb
sbb
es
lret
loopne
test
push
ja
clc
rep
adc
jmp
stc
dec
jmp
push
jo
cmp
in
daa
movsb
pop
jg
int
xchg
scas
test
clc
push
lods
pop
jae
dec
call
enter
les
fiaddl
js
js
mov
inc
add
int3
stos
movsb
fsubrp
sbb
not
dec
sub
add
pop
mov
xchg
cmpsb
dec
jnp
daa
test
cmp
mull
jns
inc
push
ljmp
cmc
lcall
rorl
cmpsl
cmp
cmpb
addr16
movsb
sub
std
push
xchg
mov
pop
stos
xor
dec
outsb
out
fldt
cmc
jne
mov
inc
xchg
mov
notb
jae,pn
lret
hlt
push
adc
outsb
jle
stos
ficomps
adc
jecxz
dec
jae
icebp
subb
imul
sub
pushf
loop
dec
mov
push
enter
cmp
jecxz
mov
rcrl
adc
ds
leave
sar
adc
cmp
adc
jbe
xchg
and
add
addr16
fdivl
inc
or
inc
lret
cmp
scas
lret
not
pop
stc
jp
cli
cmp
leave
sub
insl
cmp
sbb
repz
adc
push
je
add
and
sbb
sub
push
inc
cmovo
jp
mov
push
pop
dec
xchg
lcall
cmp
mov
jle
mov
sti
flds
jge
out
lods
push
andb
in
aaa
sub
pop
or
les
popl
xor
outsl
add
sbb
jno
in
mov
and
xchg
movsb
loop
rep
jns
jmp
push
out
imul
xchg
mov
xorl
outsb
adc
dec
pop
inc
aad
push
sbbl
jns
in
arpl
sub
repz
and
xchg
adc
sub
add
pop
sbb
test
das
es
jno
mov
pop
xchg
sub
xor
lret
push
aad
sub
js
bound
jg
or
dec
mov
sahf
pop
mov
idiv
dec
pop
sbb
insl
mov
push
jb
mov
pop
vorps
cs
imul
pusha
mov
stc
aam
pushf
mov
push
popa
sub
jg
mov
testl
dec
pop
and
pop
push
add
stos
leave
int
icebp
int
push
pushf
and
dec
and
stos
push
mov
mov
jle
mov
inc
xchg
lods
mov
shrl
in
movsb
in
sbb
rcrl
push
xor
imul
cmp
mov
cmpsb
jne
pop
push
xchg
lcall
add
inc
into
xchg
push
stc
out
sbb
and
push
push
sahf
pop
pop
outsb
inc
mov
or
lret
imull
mov
sbb
push
addr16
adc
cmp
shll
daa
add
xorb
roll
add
jg
imul
scas
cmp
rcrb
or
cmc
mov
ljmp
idivl
and
fwait
repnz
push
sbb
aaa
insl
clc
div
pop
shll
xchg
mov
adc
xlat
nop
adc
cmp
movsb
ret
cld
and
imul
imul
sbb
shl
pushf
lds
in
test
mov
or
inc
adc
lods
sub
pop
and
or
or
stos
jb
pushf
in
jns
lret
mov
mov
cmc
idiv
nop
mov
ret
cmpsb
jns
inc
inc
jne
cmp
test
sub
adc
xlat
mov
pop
in
sahf
add
sub
dec
loop
fwait
or
cmc
lahf
aaa
mov
mov
mov
inc
int
jae
inc
xor
shll
adcl
es
aad
test
mov
ret
add
std
fwait
mov
fnsave
lahf
mov
fcomp
push
leave
xor
repnz
lahf
repz
adcl
mov
ds
mov
adc
dec
adc
aam
out
xor
clc
les
jecxz
lods
jmp
iret
insb
fidivrl
sub
mov
stos
sbb
jb
mov
mov
cltd
cs
hlt
mov
mov
pop
mov
jns
ret
xor
push
xchg
aam
js
dec
add
jns
mov
popf
aas
test
jge
outsl
test
mov
inc
pop
or
sti
cmpl
inc
push
cmp
inc
inc
push
ret
test
ljmp
insb
pop
sarl
lods
sarb
xor
gs
pop
pop
pushw
into
xor
test
les
sahf
pop
inc
scas
into
lret
jl
jmp
and
inc
jbe
xor
pushf
xchg
add
xor
fisttpll
cmc
adc
loop
push
or
push
jmp
loop
cmpsl
fs
outsb
rclb
fisttps
mov
lods
in
js
ret
scas
pusha
xor
jecxz
imul
sbb
fwait
dec
ret
ss
fisubs
xchg
sarl
pop
pusha
sub
xor
es
sub
in
lcall
push
stos
inc
inc
jo
inc
or
xchg
out
add
cmp
dec
aad
ds
ss
inc
call
test
xor
pop
in
jg
mov
or
xchg
into
movsl
dec
push
inc
sub
test
cwtl
inc
cmp
add
or
jae
loope
iret
sbb
inc
shlb
adc
clc
hlt
sahf
add
xor
test
mov
test
fsubl
mov
pop
or
fisttpll
mov
data16
out
imul
fsubs
pop
scas
lret
add
loope
xchg
es
retw
jg
rol
pop
push
and
mov
leave
dec
pop
test
inc
adc
lock
outsb
push
xchg
fildl
cmp
mov
pop
and
adc
divl
out
mov
lods
pop
jns
movsb
lret
mov
pop
cmp
adc
jmp
scas
and
repz
stc
mov
and
push
jnp
shll
bnd
mov
and
xor
scas
mov
adc
push
jmp
jge
dec
pop
sub
pushf
ja
sbb
fs
lret
scas
push
ret
nop
pop
ja
data16
or
fsts
sbb
dec
jns
xor
in
in
fadds
fnstenv
dec
inc
mov
sbb
cmp
je
add
ljmp
jns
lahf
nop
cld
dec
mov
lret
jb
mov
dec
cmpsb
inc
fsub
push
mov
inc
inc
push
or
or
sahf
inc
jp
ja
gs
add
mov
push
cld
int
popl
mov
loop
mov
notb
pop
stos
lods
pusha
sbb
and
xor
int3
fldl
cli
cmp
or
in
and
dec
xor
gs
mov
xor
shrb
jnp
or
out
mov
sub
cmpsb
ds
aam
nop
mov
fistl
in
sub
sarb
cmp
inc
aaa
xchg
loope
ljmp
fcomi
test
rcrb
push
mov
les
mov
inc
daa
cwtl
jno
adc
ret
sub
sti
imul
mov
int3
mov
out
les
test
ljmp
dec
popa
int
push
jmp
pusha
or
or
and
dec
cmp
movsl
cmp
sub
sub
xchg
fisubl
sbb
xchg
outsl
aas
testb
subl
loopne
jae
xor
notb
test
je
mov
xor
add
xor
xchg
lret
idiv
adc
fucomi
insb
add
daa
inc
aas
sbb
jbe
mov
sbb
lds
imul
daa
testl
or
je
push
sub
out
insb
cmpsb
aaa
pop
pop
and
pop
andb
in
cld
pusha
sbb
notl
cs
jae
or
push
sbb
sub
sarl
and
stos
xor
or
xor
das
stos
sbb
jne
notb
push
stos
insl
nop
lcall
mov
sub
pop
pop
or
mov
sub
push
ds
xor
insb
mov
dec
inc
or
jbe
rcrb
add
fnstcw
mov
test
pop
mov
cmp
sub
cmc
roll
sbbb
cmpsb
mov
or
dec
out
jb
adcl
test
fidivrs
ds
cltd
dec
jge
sub
std
and
out
mov
fcoms
sti
xchg
push
adc
dec
loop
mov
and
stos
loop
pop
xchg
pop
pushf
cmpsb
loope
bound
add
inc
dec
adc
lock
mov
jmp
jp
xor
inc
inc
or
push
add
or
aam
cli
mov
inc
dec
adc
subl
mov
setno
mov
sbb
lods
rcll
jge
push
repz
lret
fs
jns
jmp
cmp
jle
inc
pop
cmpsl
and
es
cmp
stos
into
test
jns
add
push
mov
sar
jns
lds
jne
add
aas
sub
xor
sub
andb
lds
es
les
insb
and
sbb
add
bound
roll
cli
adc
loopne
cmp
sbb
sub
add
inc
add
push
pop
mov
ds
es
lahf
mov
adc
adc
add
add
loop
icebp
cmp
in
and
sub
out
scas
push
jns
aaa
or
aaa
xchg
clc
mov
ret
cmp
or
lock
pop
out
mov
mov
int
shrl
add
nop
add
shl
mov
out
std
in
push
inc
or
push
push
cmp
add
repnz
pushl
fsubr
pop
add
movsb
or
inc
xchg
inc
inc
mov
mov
js
sub
loopne
xchg
mov
cltd
in
add
xlat
xor
rcrb
dec
dec
fdivp
inc
push
pop
mov
push
push
sub
mov
lock
jecxz
in
pop
or
popf
jmp
scas
or
sti
in
xchg
dec
xorl
or
mov
stos
mov
push
outsl
jne
dec
mov
and
xchg
dec
xchg
jnp
mov
hlt
cmpsb
shrl
into
adc
repnz
test
pop
xchg
clc
mov
cmp
mov
std
cwtl
shl
sbb
jle
mov
lock
lds
ret
xor
xchg
mov
and
fmull
and
shrb
pusha
fisubl
in
cs
sti
push
rclb
cmp
sbb
mov
mov
xlat
arpl
mov
arpl
pop
addr16
in
xor
mov
mov
mov
mov
push
mov
pop
js
clc
jae
add
mov
insb
jnp
mov
or
xbegin
dec
fs
stc
xor
fsubl
negl
cmp
dec
fmuls
xor
adcb
dec
xrstors
mov
jb
mov
sahf
scas
dec
xchg
jmp
mov
push
clc
mov
dec
lcall
mull
xor
cmp
mov
aas
into
leave
xchg
pop
mov
or
push
sub
add
gs
mov
cmp
cmp
icebp
mov
xchg
push
bnd
add
mov
testb
adc
sub
cmpsb
rcll
imul
mov
adc
xor
out
scas
mov
insb
xchg
lea
jp
sbb
cmp
push
and
data16
rcl
inc
sub
daa
add
notb
and
imul
pop
jbe
pop
xor
sbb
popf
rcrb
out
jg
add
std
jge
adc
lret
jmp
repnz
mov
adc
add
xlat
push
fcompl
jge
hlt
adc
jo
jnp
jae
incb
orl
adc
test
sub
cld
es
xchg
mov
push
mov
or
sbb
pop
pop
xchg
mov
lret
sbb
test
ss
mov
mov
add
shl
mov
mov
dec
cmp
incb
mov
dec
lret
xchg
call
cli
dec
mov
sub
push
mov
testb
data16
mov
es
and
aam
sbb
mov
aad
cmp
stos
cli
insl
jns
xor
cltd
lods
js
into
mov
add
pop
dec
mov
mov
add
aad
or
mov
pop
in
jge
aas
movsl
pop
fidivl
scas
pop
int3
add
dec
cmc
sub
dec
cmpsb
shll
push
into
icebp
adc
jo
inc
and
jns
aas
pop
adc
add
unpcklps
out
add
jmp
pushf
dec
push
pop
adc
pop
xchg
dec
out
jnp
insb
cmp
push
mov
adc
loope
or
mov
in
test
fdivrs
ljmp
mov
add
mov
outsb
and
pusha
fs
aas
les
xchg
fwait
aas
push
jb
push
xor
pop
or
lahf
arpl
in
xor
loope
dec
fsts
dec
sti
lret
push
dec
fisubrl
arpl
sub
hlt
fimull
xchg
mov
test
aas
pop
imul
adc
movsb
dec
push
dec
mov
pop
push
leave
sbb
test
dec
or
popf
gs
sbb
pop
push
int3
sbb
imul
ljmp
ret
out
cmpl
jl
cltd
xlat
xor
outsl
mov
icebp
sub
mov
dec
pop
rolb
es
inc
fsubl
ss
cmp
sti
mov
cmp
and
cmpsl
fisttpl
mov
sub
and
cmp
inc
neg
xor
push
sub
inc
mov
stc
pop
mov
xor
popf
outsl
sbb
scas
inc
std
ret
scas
lods
movsl
cmpsb
mov
movsb
xor
subb
out
aaa
and
daa
out
mov
mov
xor
hlt
dec
inc
jbe
aad
idivl
ja
inc
adc
dec
jae
stos
xchg
aaa
mov
adc
ja
pop
sti
movsb
aaa
lcall
jg
sub
stc
push
ds
es
aas
inc
dec
push
and
xor
sbb
ja
scas
mov
in
popf
xor
cmp
sbb
cmp
or
ret
scas
ret
ret
les
mov
jle
adc
inc
cwtl
push
xchg
popa
adc
xor
sub
insb
adcl
enter
sbb
xchg
fcoml
push
loopne
pop
shrb
xchg
scas
sbb
mov
dec
cmp
fs
push
lock
adc
pushl
dec
sti
mov
jp
aaa
adc
jecxz
mov
cwtl
sbb
negl
inc
aas
xchg
mov
in
arpl
and
lock
cmp
out
dec
or
insl
subb
jb
dec
sub
xor
adc
push
push
rcll
inc
inc
jnp
cltd
mov
rclb
icebp
in
mov
inc
sahf
xorb
jle
add
into
gs
jnp
es
sbb
push
insl
sub
xchg
imul
xor
call
jnp
push
in
icebp
xchg
sub
in
loop
jae
scas
add
insl
mov
and
test
cld
cmpsl
aaa
out
and
and
push
sar
add
add
pushf
xchg
bound
repz
push
dec
scas
cmp
aam
dec
cmc
xor
idivl
in
sahf
addr16
jmp
gs
xchg
dec
test
inc
loop
ret
pop
stc
and
in
stos
jmp
push
scas
hlt
sub
inc
pop
jge
add
push
cmp
pusha
inc
sub
rorl
test
mov
mov
das
lret
xor
mov
mov
push
mov
fcompl
cmp
dec
push
test
xchg
decl
call
stos
sub
in
stos
fcmovb
mov
dec
rcl
inc
iret
ja
mov
mov
dec
jmp
shll
jbe
stc
or
xchg
adc
dec
xchg
or
push
pop
cmpsl
inc
inc
mov
dec
xchg
cli
lods
xchg
xchg
and
sub
jne
das
scas
dec
sbb
sbb
fbstp
mov
subl
cmpsb
xorb
jnp
push
pop
lods
mov
mov
xchg
roll
lret
push
adc
fidivs
pushf
sbb
sub
cmpb
call
dec
adc
push
sbb
add
stc
jbe
stos
jp
pop
les
repz
lahf
orl
clc
aaa
std
mov
fisttpll
cwtl
hlt
dec
push
push
lock
cmp
mov
adc
jp
fidivrl
lock
jo
pop
lret
ja
sub
push
fsubrl
mov
inc
inc
data16
rolb
das
lea
xor
fmuls
jle
stos
test
push
xchg
dec
inc
jbe
fistl
stos
mov
push
mov
cld
or
pop
cmp
cwtl
out
aam
dec
mov
leave
cmp
mov
pop
enter
loope
pop
adc
inc
or
aaa
sub
push
les
mov
xor
pop
inc
inc
mov
sbbl
dec
pop
jno
xchg
icebp
inc
fidivs
mov
fs
mov
jbe
jae
mov
lcall
mov
test
repnz
mov
aas
test
call
adc
add
daa
ffree
sbb
incb
mov
fcoms
mov
jg
and
lea
mov
sbb
mov
fcomp
jnp
cmp
movsb
mov
repnz
bound
roll
imul
fcoms
cmc
xchg
daa
ja
pusha
inc
add
mov
jg
mov
add
or
dec
push
call
push
popf
das
xor
mov
sbb
push
xchg
xor
sbb
push
adcb
inc
bsf
std
into
scas
pop
ftst
dec
orb
roll
in
scas
fucomi
mov
xchg
lret
cli
sbb
sbb
cmp
mov
jmpw
mov
dec
dec
ret
mov
outsb
mov
push
das
sub
lods
xchg
push
sbb
mov
xor
adc
cli
inc
cs
std
ja
fcmovnb
push
adc
lods
jbe
mov
jmp
fwait
adc
push
loop
les
clc
add
fstpl
fs
lods
pop
jge
int3
rcrl
test
out
cmp
fstpl
xor
rcl
fwait
jns
outsb
xor
xor
cmp
xor
jns
out
pop
xchg
aas
dec
not
inc
cmp
cmc
mov
jmp
mov
rcpps
repz
popa
jno
call
sub
mov
mov
repnz
mov
jl
enter
cmpsb
imul
popf
inc
adcl
sub
dec
lret
pop
das
xchg
pop
or
push
inc
mov
lds
pop
mov
call
pop
aaa
iret
push
sub
xchg
sub
ret
mov
test
cmp
xor
cwtl
test
xor
int3
std
adc
ret
js
je
mov
adc
pop
fidivl
push
lret
mov
mov
mov
daa
mov
dec
sub
jb
push
mov
inc
iret
jle
dec
push
mov
push
out
pop
mov
imul
fisubrs
push
cmpsb
xor
out
sub
add
jae
xchg
das
jno
arpl
les
fcmove
repnz
push
jle
test
and
dec
imul
into
lods
testl
mov
cld
push
fs
fimuls
push
mov
or
ret
xor
pop
loopne
cwtl
cmp
jg
aaa
lcall
mov
cld
mov
pop
jns
lahf
dec
push
fisttpll
stos
push
xchg
jnp
pop
sbb
jge
inc
sar
cmpsl
js
sub
dec
xor
dec
fiadds
or
fbld
pop
xchg
hlt
mov
fbstp
ljmp
ret
cmp
dec
xchg
out
jne
aas
xor
cwtl
enter
arpl
adc
push
jge
js
fwait
addb
adc
outsl
les
xor
repz
mov
les
dec
mov
sbb
aas
jp
adc
mov
mov
xor
push
xor
mov
mov
cmp
into
inc
popa
cmpsl
sbb
xchg
pop
jmp
fwait
jmp
mov
sbb
inc
mov
rcrb
add
adc
mov
int3
cs
pop
test
clc
mov
iret
out
sarl
pop
fwait
ds
stc
push
sti
fadds
cmp
xor
scas
popa
fdivr
and
jb
es
cmp
dec
iret
cli
mov
jle
xor
mov
pop
sbb
push
sbb
loope
jmp
add
test
mov
out
stos
dec
xchg
jns
outsl
clc
mov
fstpl
xchg
cmc
fstps
icebp
cs
and
add
pop
dec
or
jo
mov
mov
ret
fwait
add
xchg
cmpsb
call
adc
xor
fidivl
cmp
cwtl
sub
or
mov
fwait
jl
and
inc
dec
cs
test
in
adc
repnz
fs
sub
xchg
in
jbe
pop
cmp
sub
ss
sub
push
mov
mov
stc
fwait
lret
call
mov
es
xchg
sub
call
add
pop
sub
xchg
repz
mov
sub
xchg
inc
or
std
gs
and
aaa
cmp
dec
test
iret
fs
xor
dec
cmp
stos
xchg
cltd
push
inc
nop
cltd
xchg
inc
jo
and
push
nop
or
adc
inc
mov
jle
dec
sbb
movsb
sub
sti
iret
dec
gs
cmp
inc
sbb
es
int
or
call
mov
rorl
cmp
ret
inc
mov
mov
inc
adc
test
les
inc
xor
call
out
in
loope
cmpb
test
add
pop
movl
push
push
adc
mov
aaa
shll
popa
fimuls
and
mov
cmp
sbb
pusha
xor
imull
jle
aaa
out
inc
pop
cmp
ja
mov
xchg
int3
loop
rcll
adc
xchg
adc
add
mov
jnp
outsl
xor
ret
mov
gs
push
test
enter
pop
jae
lcall
loopne
pop
cltd
test
and
ds
xor
aad
add
mov
pmovmskb
rcl
xchg
out
dec
mov
push
aas
scas
sarb
xor
inc
fstpl
dec
dec
cmpsb
xlat
cmp
insb
cwtl
test
xchg
adc
into
mov
cmpsb
jmp
push
out
cwtl
xor
dec
iret
xchg
das
rcll
into
mov
dec
cmp
push
and
scas
jb
push
inc
push
adc
repnz
push
jecxz
sbb
ret
std
js
push
sbb
inc
ds
xchg
mov
add
lods
ja
notl
push
cmp
and
mov
xchg
sbb
stos
mov
std
mov
jle
dec
test
inc
inc
stos
xor
shrl
pop
sbb
jb
xchg
shl
xor
jbe
rclb
xchg
or
sbb
sysenter
dec
push
push
addl
pop
movsl
jecxz
nop
push
or
dec
imul
xchg
pop
inc
mov
aas
fsubs
pushf
pusha
mov
jecxz
cmpsb
loop
pop
or
xor
popa
loop
int
shll
pop
mov
mov
jb
out
xor
jle
ss
test
je
das
mov
fldcw
cmp
sarl
mov
xchg
xlat
mov
jae
outsl
fisttpl
ret
lods
inc
push
out
xorl
insl
sub
mov
cmp
cmp
adc
push
or
pusha
cmp
std
pop
js
stc
nop
das
or
ret
mov
daa
cmpsb
adc
fcomps
push
mov
pop
movsb
or
movsl
movsb
fstpt
cmp
jecxz
testl
fwait
fwait
xlat
push
insl
adc
mov
adc
ss
aaa
mov
push
jmp
lret
push
and
cmpsl
repz
xchg
jge
cmpl
add
fistpll
cli
andb
jg
mov
jbe
jge
xor
lock
lods
mov
jnp
push
call
xor
mov
mov
pop
ffreep
lret
add
xor
inc
ja
rcll
scas
jno
dec
mov
xor
decl
nop
fadd
dec
fiadds
cs
mov
adc
enter
cmpsl
in
mov
cwtl
ja
pop
inc
xchg
or
and
arpl
jb
sub
xchg
xchg
popa
sbb
stos
mov
inc
push
jnp
out
sub
js
insb
test
lea
push
sub
push
cmp
insl
add
iret
sbb
loopne
cmp
sub
cmp
into
pusha
aam
clc
fdivrs
out
je
in
jnp
mov
rcl
xor
scas
imul
add
or
jge
mull
outsb
xor
aaa
xor
insl
or
xchg
add
outsl
and
fbld
jo
xchg
fcoml
out
add
pop
pop
dec
jo
fcomps
aam
inc
in
dec
push
add
pop
outsl
lds
popw
fstl
sbb
and
cmp
jb
jge
cmc
test
rorl
and
not
movsb
lcall
fwait
arpl
addb
jg
push
cli
aad
in
pop
adc
cmp
xchg
xor
sub
jb
pop
xor
leave
jnp
test
scas
mov
fadds
or
mov
aam
cmovno
pop
mov
ret
fiadds
imul
mov
inc
cli
jle
nop
push
mov
addr16
cwtl
mov
aaa
into
in
sub
adc
movb
and
dec
mov
lods
mov
stc
mov
fucom
out
test
jo
enter
nop
sub
pusha
pop
lock
push
scas
lea
ljmp
jne
inc
push
lret
cmp
out
xchg
mov
out
and
ror
adc
movsl
xchg
cmp
outsl
icebp
inc
xchg
push
lock
jo
loope
ds
xor
sbb
jno
adc
xchg
call
push
add
mov
stc
popa
jne
jge
lods
xchg
inc
enter
int
cltd
test
loop
push
ljmp
repnz
sub
jnp
jo
mov
xor
jne
popf
cli
cmp
xchg
in
add
jge
cmpsb
sahf
mov
fsubr
aad
lahf
xchg
adc
ja
test
jp
jl
popf
add
fdivl
ret
jle
mov
insl
rol
cmp
jg
bound
sbb
jp
out
push
repnz
mov
scas
aam
fistps
xor
mov
rcll
inc
enter
lds
arpl
jnp
mov
cmpsl
inc
fisubrs
divb
and
stos
repnz
add
pop
pop
mov
mov
or
cs
lcall
and
xchg
xor
mov
dec
les
add
loopne
xchg
filds
cwtl
fildll
lret
xchg
xchg
adc
xchg
cmp
cli
sbb
or
xchg
ret
stos
subb
sahf
mov
sub
shlb
inc
mov
lds
mov
stos
add
faddl
sbb
and
icebp
stos
aas
sub
stos
test
cmc
scas
jbe
add
mov
pusha
jae
movsl
xor
enter
scas
add
fdivl
or
push
test
inc
jnp
pop
add
imul
fimuls
int3
fdivs
mov
jnp
call
sbb
xor
mov
hlt
leave
test
mov
jnp
jb
sbb
out
movsb
sbb
push
mov
jno
inc
inc
xchg
call
roll
inc
movq
call
add
out
outsl
sti
mov
inc
mov
popf
add
mov
cmpl
cmp
cwtl
or
sub
push
pop
or
roll
dec
ljmp
out
xor
sub
sbb
xor
mov
mov
mov
jmp
jo
mov
sahf
iret
dec
dec
or
mov
enter
add
out
cmpsb
arpl
dec
sbb
int3
jl
pop
mov
mov
stc
pop
call
jg
xor
out
lcall
cld
pop
leave
jo
sub
push
lods
xchg
clc
push
cltd
sub
ficoml
mov
pop
or
mov
and
addr16
gs
push
fnstenv
mov
or
ss
fs
cmp
mov
nop
cmpb
sahf
pop
xlat
cmc
insl
mov
pusha
faddl
jno
orb
cmpsb
arpl
pop
mov
sahf
push
nop
or
int
cmpsl
mov
sahf
sbb
jnp
sub
out
push
sahf
std
jno
ds
sbb
aam
scas
inc
cltd
in
orb
fwait
inc
outsl
fistpll
rolb
stos
mov
popf
pushf
inc
cmp
fistpll
scas
xchg
out
and
shll
mov
int
pop
dec
or
mov
mov
mov
inc
mov
iret
cmovns
scas
jp
push
mov
repz
push
add
jmp
cmp
subb
mov
push
mov
out
jmp
imul
adc
inc
sub
jg
push
add
std
xchg
fcmovbe
test
test
stos
and
dec
push
fucomp
fwait
arpl
lock
pop
push
popf
js
rcrl
mov
cmp
jne
mov
repz
adc
inc
or
stos
push
sub
mov
in
sub
jae
std
aas
jae
subb
or
aam
inc
or
aaa
outsl
xchg
jmp
lahf
or
sbb
in
jge
sahf
xor
or
test
mov
enter
imul
adc
xchg
xor
dec
lods
inc
imul
xchg
xlat
jecxz
sbb
jmp
jmp
jge
mov
xchg
inc
int3
jne
pusha
cltd
movsl
adc
add
xchg
addl
jns
aad
ds
rcl
inc
xchg
pusha
in
or
xchg
aam
sub
push
jle
lea
and
clc
or
or
and
dec
jb
les
adc
adc
inc
arpl
mov
shll
mov
xchg
jns
dec
stos
jnp
mov
and
lock
xchg
lcall
lcall
sbb
or
push
push
jg
popl
es
enter
flds
mov
add
insb
clc
rcrl
and
fmul
shr
jle
pop
iret
mov
lret
in
ficoml
mov
pop
xor
pop
cmp
dec
test
sub
dec
dec
clc
add
ret
call
std
xchg
aad
ficomps
mov
or
cmp
xor
arpl
jmp
inc
mov
adc
scas
scas
out
sbb
rcrl
les
cmp
stos
adc
lahf
sbb
push
sub
aad
sub
sar
jecxz
sahf
hlt
dec
lea
push
arpl
mov
cmc
dec
fnstsw
aas
ret
icebp
xor
lret
fimull
orb
add
add
mov
lods
fwait
push
xlat
or
mov
and
and
loop
fcomps
orl
jg
jnp
loop
push
add
xor
into
or
ja
cs
cmp
add
jg
and
adc
xchg
push
sub
sbb
xchg
lods
sub
in
push
add
lret
cmpsb
jns
mov
es
int
mov
lcall
and
les
hlt
lcall
mov
mov
fs
mov
cmpsl
into
aad
fisttps
sbb
std
mov
pusha
mov
inc
adc
inc
dec
fstpt
lahf
incl
mov
mov
push
mov
test
lock
aad
imul
mov
nop
mov
xor
insl
inc
or
sti
test
mov
mov
inc
fsub
add
les
mov
into
push
xlat
lds
ret
inc
decl
add
cmp
xor
out
bound
daa
pop
enter
sbb
out
push
int3
adc
jno
jmp
repz
xlat
in
mov
fwait
mov
pusha
repz
test
mov
pop
lock
lret
out
stc
mov
mov
test
das
mov
repnz
dec
in
dec
arpl
push
pop
rorb
and
or
int
bound
test
sti
add
lods
iret
sub
mov
jne
fidivrl
out
adc
fistps
cld
es
imul
scas
add
dec
inc
sub
insb
aad
test
ja
xlat
xchg
and
jne
inc
scas
fimull
push
jnp
pop
sbb
mov
or
mov
jp
lds
or
leave
and
iret
jle
jmp
adc
in
es
shlb
push
push
in
shll
or
mov
in
rorb
mov
out
mov
fdivl
dec
jo
mov
out
and
add
and
loope
fldcw
jmp
mov
lret
shll
sbb
notb
add
cmp
movsl
in
shll
or
test
je
mov
sub
push
lods
aas
sub
push
push
push
and
push
or
sub
jg
out
adc
xor
pop
in
movsb
pop
jno
cltd
loopne
fwait
adc
sbb
js
mov
es
cmp
or
ret
dec
rorb
or
mov
jo
jg
and
pop
into
aad
pop
push
aaa
push
out
arpl
sbb
shrl
inc
bound
fisubrs
pop
insb
xchg
mov
sbb
mov
insb
xchg
jl
jns
xchg
mov
adc
lret
mov
or
fildl
std
xor
sub
push
cmp
and
jecxz
jns
popa
stos
adc
sub
ja
pusha
mov
mov
push
jge
or
insb
cmp
and
mov
xor
movsb
lret
xor
mov
and
popf
bound
xor
inc
or
push
ret
add
add
dec
arpl
push
push
loop
out
in
mov
imul
and
repnz
sbb
pop
push
xchg
ljmp
in
and
mov
add
pop
push
in
fs
pop
ficoms
jle
jecxz
insl
push
dec
mov
and
jl
sub
pop
cs
push
jns
enter
test
push
aam
fiadds
and
sub
aam
or
insb
mov
loopne
aas
movsb
movsl
cmp
int
push
mov
andb
mov
outsb
bound
push
sbb
sub
jno
push
pusha
and
sbb
int
movsb
arpl
mov
push
aam
scas
sub
xor
jge
mov
xchg
xchg
add
mov
cmp
popa
xchg
lahf
movsb
inc
xchg
xor
or
adc
jbe
loope
std
in
jmp
shlb
pop
fldcw
mov
shr
aad
andb
add
jge
addb
and
scas
ret
push
loope
mov
adcl
dec
jp
sub
call
or
pop
push
sbbl
rcrl
or
imul
test
arpl
push
cwtl
mov
adcb
pop
call
sti
aam
mov
pop
movsl
movsl
mov
sbb
mov
sub
cmp
dec
adc
push
mov
les
or
or
movsb
pop
ja
shlb
test
daa
pop
mov
jbe
mov
mov
insb
jnp
push
popf
pusha
adc
clc
xchg
aam
adc
sbb
dec
cmpsl
mov
adc
shrb
mov
pop
pop
xchg
loope
pop
loope
aaa
mov
xchg
xlat
lcall
jns
enter
mov
test
adc
sub
cmp
test
mov
hlt
loop
in
out
mov
mov
inc
gs
pusha
sub
push
inc
cli
jg
clc
fmull
push
dec
insl
sbb
ljmp
out
xchg
push
nop
cmc
xor
cmpsb
xor
mov
mov
pop
push
loope
jae
inc
les
mov
adcb
pop
xchg
cmc
sbb
or
in
pusha
mov
lret
or
std
xchg
and
int3
pop
mov
out
insb
outsl
mov
cmpsl
movsl
pop
outsb
out
cli
jne
daa
xchg
mov
or
cs
outsl
ret
pop
add
jmp
les
insl
fildll
dec
scas
jnp
test
out
sbb
daa
inc
add
jge
xchg
push
fmul
and
dec
bound
enter
arpl
and
add
cs
jne
add
jbe
sub
mov
jnp
push
sbb
lret
movb
sahf
ret
lcall
movsb
aad
xor
jmp
pop
mov
cmp
sub
add
call
mov
std
dec
addr16
repnz
xchg
add
sti
cmpsb
pop
repz
shrl
aas
fistps
push
adc
loope
mov
push
in
push
jmp
pop
mov
cli
cmp
insb
popf
mov
icebp
movsb
inc
mov
aad
test
or
jp
cmp
cs
xlat
inc
popf
mov
cmp
fwait
fwait
pop
inc
int3
mov
xlat
addr16
loopne
test
adc
fstpt
cmpsb
mov
push
inc
sub
adc
adc
pushf
je
adc
mov
int
cmp
lcall
mov
fcomp
adc
addl
sbb
and
jge
stc
pop
xor
cmp
aad
mov
jl
rclb
dec
popf
cli
or
clc
nop
push
int3
shrb
les
loopne
adcb
fcoms
sub
xchg
xchg
hlt
loopne
imul
bound
and
mov
lahf
jecxz
jns
pop
sub
scas
jp
scas
movsb
inc
ret
into
adc
cmp
and
jecxz
xor
inc
movsl
dec
into
popf
imulb
xor
jne
lcall
mov
bound
imul
test
push
mov
push
jne
jne
jl
mov
push
lret
mov
pushf
push
dec
xor
mov
lea
xchg
cmpsl
or
mov
and
sub
in
dec
sti
xor
js
test
notb
inc
cwtl
mov
and
lahf
mov
data16
adc
sub
and
push
sub
add
cmp
lahf
repnz
xchg
clc
xlat
fistpl
xor
insl
sbb
jp
movsl
addr16
mov
cmc
mov
xchg
dec
cmpsl
popa
int3
ret
push
pusha
sub
loopne
push
xorps
sti
mov
xchg
dec
xchg
mov
xor
ds
popa
iret
cmp
test
dec
in
test
xor
pusha
loop
pop
adc
push
cmpsb
pusha
adc
xor
jg
sti
pop
inc
adc
les
daa
shlb
mov
sub
mov
jle
mov
sahf
adc
and
sub
decb
mov
mov
insb
jno
xchg
iret
mov
stos
jae
ljmp
loopne
or
int3
sti
and
cmpsb
sbb
add
stos
sub
mov
outsb
imulb
add
jl
in
jae
mov
enter
xchg
ffreep
xchg
fnstenv
lahf
iret
add
pop
ljmp
cli
xchg
sub
out
cltd
ret
test
dec
dec
mov
test
sub
shrl
add
sbb
pushf
into
or
mov
xchg
lret
gs
push
popf
xor
add
xlat
fcmovb
lock
mov
dec
scas
movsb
fnsave
mov
xchg
dec
call
xlat
leave
mov
cmovnp
sub
adc
and
out
stc
leave
roll
mov
daa
mov
xchg
subl
test
cmpsl
mov
sub
inc
dec
bswap
sub
cmp
dec
loopne
push
adc
lcall
mov
je
or
testb
shrl
mov
push
jp
pop
out
jnp
js
lea
into
sub
cmc
aas
mov
lret
cli
mov
mov
dec
lcall
mov
mov
inc
int3
dec
mov
adc
sub
in
and
hlt
stos
sub
sti
xchg
test
stos
xor
dec
sbb
adc
orl
xchg
push
mov
test
into
xchg
and
cltd
xlat
dec
dec
cltd
jnp
push
sarb
xor
sub
adcb
mov
dec
movsl
mov
fcoml
dec
movsb
aam
cwtl
outsl
cwtl
outsb
loopne
and
cmp
pop
jns
pop
js
jmp
loope
mov
dec
sahf
lret
mov
lret
mov
and
out
jle
fiaddl
jo
push
test
mov
lcall
movlps
jmp
xor
aad
cs
cmp
pop
xchg
mov
push
push
sub
push
repz
out
lahf
push
xor
xchg
mov
ds
imul
lcall
clc
mov
add
mov
push
lcall
inc
push
cmpsb
ret
test
arpl
inc
icebp
sbb
movsb
pop
lret
add
sub
cli
ja
cmp
mov
aaa
cmp
xchg
in
pop
test
dec
int
mov
sbb
mov
aad
jnp
dec
mov
mov
add
dec
loope
pop
dec
dec
mov
loope
mov
sub
add
push
inc
mov
lahf
add
in
or
call
push
push
std
es
ret
xchg
xchg
subb
outsb
xchg
decb
sbb
cltd
les
shrb
je
and
inc
out
je
xchg
icebp
mov
cmp
cmp
push
mov
outsl
ret
mov
xchg
sbb
dec
xchg
jno
inc
dec
scas
sar
cmp
push
sbb
mov
pop
mov
push
xchg
push
dec
push
leave
imul
jnp
xchg
repnz
pop
pusha
jae
movsb
repnz
mov
adc
aad
inc
add
js
dec
xor
das
imul
or
cmp
cmc
push
sbbl
fbld
cmpsb
xchg
into
icebp
pop
cmp
jge
fldt
scas
call
jns
sub
ss
aad
out
xor
roll
or
lods
fstpl
popf
jo
andb
cmp
aam
inc
adc
loop
dec
fs
ret
lds
mov
xchg
inc
aam
xchg
adc
xchg
pop
push
movsl
pushf
adc
int
outsl
jecxz,pt
pop
pop
and
dec
das
dec
cltd
xchg
mov
or
jp
loope
cmp
inc
sbb
in
jmp
ficoms
les
imul
cmp
test
dec
in
mov
bound
clc
test
arpl
jb
aad
mov
cld
push
test
cmpsb
ret
cmp
fwait
or
stos
sarb
sarb
test
sub
mov
lret
pop
outsb
or
or
and
or
dec
mov
or
ds
xor
mov
jle
push
and
and
add
inc
and
jnp
cwtl
jmp
push
sbb
cmp
cmp
ds
inc
insb
fstps
add
push
hlt
shlb
outsl
jge
mov
push
addl
test
insb
add
inc
mov
cmp
mov
adc
les
aam
cltd
pop
jl
rcrl
add
sub
test
jbe
addr16
cmp
cmp
mov
dec
adc
int
dec
mov
sahf
adc
pop
sub
stos
pop
xor
cmc
loopne
mov
test
mov
and
xor
ss
mov
sti
sub
cmp
roll
js
lods
add
cmp
jo
mov
xchg
xor
pop
lea
mov
xor
sub
and
push
ret
jb
push
xchg
mov
xchg
dec
xchg
sbb
aam
imulb
jp
xchg
inc
pop
cld
push
xchg
jae
push
adc
and
ficoms
int3
loop
sahf
ret
inc
xor
ss
push
add
imul
adc
aam
pop
mov
mov
jmp
xor
or
movsl
pushf
dec
movsl
push
inc
in
xlat
push
cmpsl
pushf
push
sbb
mov
dec
outsl
into
xchg
int3
nop
or
pop
xchg
js
fsts
test
movb
ljmp
fsubr
and
adc
fs
clc
in
dec
adc
adc
mov
jbe
cmp
fisubl
pop
sbb
inc
mov
mov
add
clc
pop
int3
sub
jbe
lods
stos
es
mov
mov
xchg
das
pusha
test
xorl
sbb
sbbb
xchg
cli
dec
loope
stos
or
out
out
dec
jbe
push
sti
fsts
push
dec
xchg
add
ja
push
mov
test
xchg
pop
pop
add
cmpl
es
adc
jo
fabs
jno
shl
cmpsl
or
idiv
pop
rol
or
xchg
jg
loopne
lret
push
mov
pop
test
sub
rcrb
push
popf
xor
cmp
call
shrd
cmpsl
sbb
xchg
sub
sbb
test
push
rorb
pop
je
push
mov
lods
in
sti
leave
inc
push
sub
out
cmpsb
and
jne
repnz
mov
or
call
jle
mov
mov
sub
mov
or
inc
stos
mov
jnp
add
lods
js
add
sahf
ror
dec
bound
mov
push
lds
ror
outsl
mov
mov
movsb
jo
jns
cmp
sub
inc
pusha
jge
lods
shll
mov
xorb
add
cltd
shr
and
in
sbb
repz
fstpl
lret
inc
xchg
lods
lret
je
sbb
decb
mov
pop
div
sar
bound
pop
rol
lods
int3
gs
les
stc
dec
xorb
popa
mov
pushf
sbbl
xchg
xchg
ss
mov
fwait
mov
push
push
pop
andb
inc
sbb
or
lock
mov
push
and
inc
or
sub
mov
hlt
imul
mov
xchg
imul
or
call
jmpw
inc
add
popf
xor
jbe
push
sub
mov
dec
jle
lock
mov
jge
aad
sub
cmp
cmc
jmp
mov
aam
and
jb
das
lret
scas
xchg
inc
mov
nop
out
dec
loop
fcomps
ret
and
inc
or
rorb
and
sub
dec
xor
sub
pop
jns
mov
call
xchg
lods
add
imul
or
popa
mov
dec
negb
cvtps2pi
push
mov
push
loope
cmp
aad
insb
adc
xchg
inc
repz
adc
loop
and
mov
je
in
mov
lods
insl
and
push
or
or
out
setno
loop
in
mov
in
adc
jg
inc
in
int
adc
nop
clc
rclb
mov
lret
jne
hlt
mov
mov
sbb
and
dec
fmul
inc
imul
inc
jbe
sbb
cmpb
and
js
and
cwtl
xor
pushf
pushf
inc
fsts
fs
nop
push
addr16
jge
mov
in
push
stos
mov
inc
adc
pushf
outsb
call
stos
scas
push
in
push
jb
outsb
ds
push
add
rorl
push
in
std
gs
jg
popf
sbb
sub
jne
add
movsl
arpl
scas
loopne
ds
shll
into
add
mov
int
outsl
andb
leave
ficoms
js
sub
ljmp
jmp
xchg
addr16
adc
addr16
jg
inc
dec
fmull
icebp
data16
ja
sti
lods
movsl
pop
mov
imul
sub
sub
push
int3
fiaddl
test
inc
pop
jae
jnp
xor
inc
pop
loopne
stc
test
in
adc
mov
jl
mov
pushf
mov
scas
or
mov
out
insl
pop
push
or
icebp
mov
imul
pop
dec
push
cmp
stos
gs
cld
push
imul
mov
imul
adc
jp
aas
sub
pop
dec
sbb
jne
jg
inc
push
push
pop
in
pushf
vmovmskps
xchg
repz
cmc
cld
jo
inc
pop
mov
cli
mov
enter
push
fld
mov
inc
stos
dec
sbbl
in
mov
shlb
mov
fnstsw
or
aaa
push
and
mov
jmp
dec
mov
push
stos
test
jbe
jo
out
jno
jl
and
jecxz
push
out
paddq
xor
inc
icebp
push
sub
in
inc
inc
push
jns
data16
push
fsubrl
pop
push
loope
xchg
jbe
add
ret
dec
in
mov
jb
test
push
xlat
pop
xchg
jp
flds
hlt
lcall
mov
xor
cltd
lcall
pop
sbb
shll
clc
lods
push
sub
pop
pop
int
mov
mov
and
mov
jle
sub
adc
xor
cmc
xchg
xchg
test
out
pop
int
daa
pop
pop
popa
int
and
cmpsb
inc
je
mov
hlt
iret
shlb
mov
fcom
push
sub
push
int
das
testl
jl
push
mov
leave
sahf
cli
dec
jmp
movsl
fisubrs
int
jne
ret
push
mov
movsb
arpl
dec
aaa
int
add
cmp
dec
sub
and
mov
sub
push
jp
push
loopne
dec
or
push
stos
icebp
mov
cs
js
jge
pop
sbb
xchg
icebp
push
mov
xchg
push
js
xchg
jl
jle
popf
orl
dec
fnstsw
ljmp
mov
das
xchg
push
xchg
mov
ficoml
mov
cmp
or
repnz
out
jae
nop
mov
clc
fnstsw
push
inc
or
out
arpl
scas
addb
jno
out
mov
lods
cmc
das
or
cs
lahf
daa
fadds
ss
mov
addl
insb
pop
adc
movsb
inc
mov
pop
mov
pop
aaa
mov
mov
mov
ret
pop
paddb
inc
pop
leave
xchg
aaa
inc
pop
add
jl
in
sub
in
inc
repz
cmp
mov
sbb
sbb
jbe
inc
xchg
imul
iret
incl
xor
into
mov
adc
daa
mov
xor
scas
je
in
in
sbb
stc
out
and
pop
cwtl
out
in
xchg
xor
mov
pop
decl
jne
jmp
aam
sbb
xor
sub
push
shll
inc
ret
pop
jp
jbe
jb
sub
sbb
mov
das
icebp
push
test
outsb
pusha
cmp
push
adc
add
stos
or
jg
insl
or
in
icebp
in
jge
mov
xorb
push
lods
pop
xor
jns
adc
shlb
in
sub
sub
jns
mov
sti
in
shll
dec
cwtl
xchg
popf
xor
mov
push
xchg
jp
mov
inc
mov
into
ljmp
shll
sub
test
inc
mov
sbb
xchg
jb
int
rcll
pusha
mov
and
xchg
or
xchg
inc
out
inc
cmp
aad
push
xor
or
in
cmc
dec
add
xor
jle
or
lret
outsl
and
push
mov
divl
scas
inc
inc
jnp
es
mov
sbb
xchg
std
or
js
push
xlat
adc
add
jg
pop
jmp
les
movsl
clc
mov
jecxz
push
sbb
sbb
pop
daa
xlat
or
jbe
cli
imul
scas
jmp
adc
popa
outsb
je
sbb
fsubrl
sub
dec
sub
aas
leave
scas
inc
add
adc
jno
imul
rcll
arpl
call
cmpsb
movsb
shll
fstps
push
inc
push
int
mov
mov
adc
and
fdivrl
push
jne
popa
push
pusha
insb
das
mov
in
pop
xchg
enter
sub
in
xlat
sbb
pop
and
jle
rcrl
and
cltd
cmp
or
mov
push
push
out
cli
xor
mov
dec
jmp
sub
pusha
test
sbb
and
call
mov
cmpsb
outsl
pop
mov
imul
mov
in
mov
fists
imul
xor
push
push
dec
cltd
ds
push
fwait
sbb
xor
pop
mov
dec
into
fmull
add
out
enter
fwait
xchg
jl
mov
repnz
cmpsb
sub
jae
jp
push
mov
clc
or
negl
aas
sti
sbb
jne
add
lods
adc
inc
cmp
call
lods
out
sbb
sbb
sbb
lods
pop
sub
cmc
lea
mov
cmp
add
loope
inc
sbb
jge
push
scas
hlt
and
repz
in
ret
and
out
stc
addr16
ljmp
mov
xchg
pop
fidivl
inc
aaa
icebp
dec
push
int3
fwait
or
rorb
sub
jle
es
fisttpl
mov
adc
in
insl
jb
pop
xchg
nop
push
dec
in
sub
cmpsb
loopne
mov
and
dec
cld
rorl
mov
pop
adc
movsl
fdivl
sahf
inc
pop
inc
or
test
and
sarb
sbb
pusha
add
lcall
mov
cmp
shr
jl
or
jbe
or
outsb
or
xor
sbb
and
dec
fldt
fiadds
mov
lock
lods
and
inc
add
push
sbb
sub
cmpsb
push
push
mov
add
inc
out
int
les
call
dec
sub
xchg
ret
imulb
std
push
push
jbe
and
jle
popf
pop
subb
hlt
jae
lods
dec
movsl
and
sbb
cmc
popf
fdivl
adc
jbe
push
pop
fwait
daa
xor
mov
cs
push
push
cs
jecxz
ja
inc
bt
inc
int3
lea
roll
out
imul
sbb
loop
gs
mov
fs
sbb
out
iret
incb
test
push
mov
bound
xor
loope
fldcw
push
sub
or
pop
jbe
mov
or
add
sub
aaa
int3
lds
lea
cmp
mov
sbb
pop
push
lods
mov
out
sbb
xlat
mov
je
xor
cmp
mov
lcall
sbb
jno
dec
ja
inc
imul
inc
jmp
fmuls
popf
daa
mov
hlt
roll
popf
repz
scas
shrl
fistpl
cmp
cmpsb
sub
xlat
inc
or
dec
sti
insb
ja
dec
xorl
xor
mov
pop
in
xchg
sub
and
sbb
out
pop
fwait
scas
mov
sbb
cmc
sti
in
pushf
in
add
arpl
cmc
or
les
jne
lods
dec
sub
sub
adc
aad
imul
or
bnd
jp
rcpps
in
movb
sub
or
lea
push
mov
xchg
ret
xor
dec
iret
test
mov
fdivl
sub
int
std
gs
outsl
imul
and
call
mov
mov
jae
ljmp
movsl
in
insb
xchg
dec
je
shl
xchg
mov
cli
jb
adc
inc
mov
lods
flds
sbb
xlat
cmp
sub
popa
cmp
insl
vpsllw
mov
clc
and
push
call
das
inc
or
pop
mov
mov
pop
orl
fcmovu
mov
pushf
inc
in
cmpl
ret
fsubp
push
mov
xor
xor
je
xor
sbb
mov
push
insb
push
addr16
mov
xchg
cwtl
or
arpl
into
or
mov
mov
adc
xor
insl
pop
jecxz
add
ds
lret
loope
mov
xchg
adc
aam
lret
js
cltd
push
sub
dec
int3
push
mov
xchg
pop
int3
mov
add
arpl
push
jp
fcomp
fnsave
fistl
inc
test
insb
jp
mov
pop
fcom
sbb
add
insl
repz
cli
icebp
scas
divl
lods
sub
adc
jne
fimull
std
or
scas
sbb
jecxz
insl
test
cmc
add
push
pop
filds
ljmp
xor
and
cs
and
sti
fidivrl
aas
sahf
jmp
fstl
fwait
add
cmp
bound
push
pop
pop
es
push
js
inc
mov
fimuls
bnd
cmpsb
dec
or
mov
lret
xchg
movsb
inc
add
jbe
push
inc
in
push
call
jns
mov
stos
jp
cwtl
jle
repnz
dec
dec
test
movsl
and
xlat
xchg
or
mov
fstps
cmp
movsb
mov
mov
cmc
adc
xchg
mov
mov
jbe
lods
leave
sub
nop
inc
pushf
addr16
int
fisubrs
mov
std
movsl
lret
pop
std
add
add
cmp
pushf
dec
outsl
or
adc
frstor
pop
popf
ficompl
movntps
inc
lods
sub
jne
sbb
pop
jnp
push
mov
popf
cli
add
jae
repz
jne
fisubl
arpl
jnp
pop
das
add
dec
mov
push
shll
mov
push
push
xchg
ret
jecxz
xor
out
add
mov
adc
inc
sub
lret
or
pop
fwait
dec
leave
sub
pusha
sahf
cmp
cmp
rcrb
pushl
call
adc
add
nop
into
push
fstpt
jecxz
fisubs
xchg
cmp
dec
push
in
mov
sub
cmp
lods
sub
sahf
fnstsw
out
adc
adc
inc
sbb
imul
testb
adc
int3
pop
icebp
rorb
cli
dec
aam
xchg
scas
add
punpckhwd
int3
mov
pop
in
mov
xor
mov
inc
mov
in
aam
fwait
pushf
xor
imul
int3
outsb
popa
pop
mov
mov
xchg
cmpsb
pushw
jge
sbb
dec
sbb
aas
xchg
hlt
das
pop
dec
js
das
jge
cmp
xchg
mov
pop
movsb
xor
and
lods
lods
xchg
nop
test
mov
inc
ss
stos
cli
ror
mov
jb
pop
xor
add
pop
in
dec
fcoml
cltd
popl
into
call
cwtl
dec
in
subl
adc
cmp
call
fildl
pop
ss
dec
push
cwtl
sub
enter
cmp
fists
xchg
mov
int3
gs
stc
and
dec
mov
xor
das
call
stos
sub
loope
inc
dec
sub
stos
orl
lock
js
mov
psrlq
inc
push
shlb
mov
frstor
xchg
int3
dec
dec
bound
dec
into
add
xor
mov
mov
inc
int3
cld
dec
or
pop
cmp
push
jg
push
loopne
stc
repz
rcll
sbb
dec
fcmovnb
incb
push
push
ret
lock
dec
xor
pop
mov
arpl
adc
xchg
xlat
or
xor
jmp
mov
mov
enter
add
and
iret
mov
jg
jle
dec
cmp
mov
data16
fwait
or
add
arpl
inc
not
dec
in
andb
in
cmpsb
popa
mov
sub
sub
rolb
test
cmpb
dec
in
inc
sbbl
pop
xchg
mov
test
lods
les
xchg
js
fs
jg
xchg
lret
lock
outsl
popa
fsubr
and
cmp
mov
mov
mov
cmp
push
cltd
loopne
imulb
jl,pt
jle
mov
addb
or
inc
jae
mov
inc
stos
jo
cmp
inc
dec
sub
adc
fidivl
in
cltd
xor
insl
lods
inc
mov
test
dec
inc
cmpsb
jae
pop
test
xor
inc
insl
lahf
fnsave
mov
adc
sub
test
mov
sbb
rol
cli
mov
xor
aaa
inc
ret
mov
imull
cmpsl
and
cli
daa
xor
pusha
lea
adc
xchg
cwtl
sbb
cmpsb
sub
arpl
cmpsl
aam
sub
push
aam
ficompl
cmp
scas
add
sub
paddq
add
imul
jmp
outsl
ds
repz
cltd
push
ror
sbb
xchg
cld
pop
sub
pop
out
leave
push
outsb
outsl
bound
cltd
and
push
cmpsl
out
push
jmp
mov
xchg
in
inc
xchg
and
jnp
mov
xchg
ljmp
mov
jno
es
mov
jb
add
adc
inc
pop
mov
sti
out
sbb
xchg
das
jp
jnp
push
mov
dec
inc
aaa
jecxz
nop
adc
movq
out
into
add
mov
mov
popw
sbb
enter
ret
and
mov
shl
cltd
cmp
xchg
mov
icebp
xchg
xchg
xchg
fcmovne
lods
jl
insl
mov
outsl
or
sbb
cld
divl
fwait
inc
mov
ret
mov
adcb
fbstp
xor
call
notb
dec
add
or
outsl
jae
iret
scas
mov
or
mov
cmpsb
inc
shl
popa
xchg
cmp
xlat
cmpsl
sbb
mov
jmp
jecxz
inc
ror
push
jmp
mov
dec
insb
cmc
sbb
mov
out
mov
add
xchg
movsb
add
and
push
mov
xchg
push
negb
out
xor
inc
mov
mov
outsb
pop
dec
mov
loop
in
incb
cmc
aam
xor
leave
int3
insb
xchg
jne
inc
or
imul
xor
in
sbb
pop
cmp
add
dec
lret
leave
mov
xor
and
sahf
roll
sbb
cs
lret
adc
push
push
pop
sub
outsl
sub
pop
lods
mov
in
loope
and
pop
add
push
inc
mov
js
fisttps
inc
test
xor
sub
lcall
in
in
mov
into
cmpsb
test
mov
adc
aad
sub
daa
dec
das
mov
dec
ja
mov
dec
int
ljmp
push
xor
xchg
cli
mov
mov
and
es
mov
mov
das
imul
sub
ficomps
dec
daa
ret
inc
adcl
sbb
mov
enter
test
mov
or
push
mov
test
jle
xchg
out
or
jo
inc
movsl
pop
push
cmp
pusha
adc
and
in
andl
subl
int3
leave
rcl
jmp
inc
aam
push
mov
adc
cltd
add
pushf
outsl
mov
je
adc
or
imul
les
cmpsb
mov
mov
jno
movsb
push
mov
push
cs
mov
sbb
mov
and
insl
xchg
leave
pop
sbb
aam
sbb
out
adc
jno
ret
pop
test
mov
mov
mov
rsm
ds
movsl
outsb
mov
add
orl
push
lahf
ljmp
sbb
imul
dec
xchg
or
test
clc
sub
pop
lret
mov
dec
and
fisubl
sub
xorl
pop
dec
aaa
aaa
adc
ret
je
cltd
inc
mov
dec
addr16
sub
fsubs
in
and
incb
shl
xor
xchg
lret
mov
gs
lret
pop
movsl
push
scas
iret
sbb
xchg
stc
push
mov
jnp
loop
out
fldenv
mov
cmp
mov
leave
cmp
in
mov
push
lret
add
and
inc
and
add
pop
lods
out
shlb
fstpl
sub
jl
rcrl
lret
cmp
aaa
cmpsb
adcb
incl
js
jns
test
mov
notl
pushf
mov
movsl
je
and
and
xor
outsl
imul
push
in
popa
sbb
sarl
lahf
scas
sar
mov
fistps
test
mov
repz
ret
popa
adc
sbb
mov
add
dec
lea
cltd
dec
ljmp
xchg
setge
cmpsl
or
dec
ds
push
popa
mov
in
fwait
push
add
das
jnp
jle
scas
scas
lods
clc
inc
mov
lahf
int
test
addr16
cli
in
inc
mov
fcmovnb
xchg
mov
xor
push
out
pop
adc
sub
fistpll
and
xchg
roll
aad
ljmp
mov
jo
adc
cmpsw
inc
pushf
or
jno
movsl
cmpsb
ja
sbb
jne
aaa
cmp
daa
lea
xchg
imul
dec
dec
sahf
fwait
mov
sbb
or
es
sbb
mov
lods
adc
add
in
lret
cli
mov
and
es
int3
inc
dec
or
mov
clc
fdivr
movsl
test
scas
mov
insb
dec
subl
sub
cmp
dec
cmp
gs
dec
push
ljmp
adc
lods
sahf
imul
mov
push
repz
or
push
jle
dec
out
jns
out
push
add
scas
or
cmpsb
ret
xor
push
addr16
ret
rolb
out
stos
xchg
sti
pop
xchg
dec
pop
stos
sbb
inc
loopne
pop
jg
ja
fcomp
inc
in
mov
jmp
adc
sti
sbbl
arpl
cmp
cmpsl
jmp
arpl
sub
mov
lret
jns
push
pop
mov
mov
cmp
adc
sarl
ffreep
pop
shl
rorb
mov
out
jp
dec
jecxz
sbb
inc
subb
mov
fadds
int3
shll
cmpl
mov
stos
mov
add
decl
mov
pop
dec
inc
sbb
jo
lret
mov
movsl
outsl
mov
push
xchg
mov
es
pop
call
or
xchg
jmp
test
inc
andb
clc
mov
movsb
shll
sub
mov
pusha
push
mov
fsubrs
fadds
and
pop
xchg
ror
loop
sub
clc
sub
dec
aam
mov
push
push
dec
cld
dec
mov
pop
popa
jl
sbb
jge
xor
jmp
in
fwait
movsl
cmpsl
faddl
push
les
pushf
pop
xor
sbb
mov
hlt
int3
stos
inc
daa
fnstsw
or
stos
and
sbb
sti
iret
int3
ss
cld
and
fcompl
pushf
inc
cli
inc
loope
inc
inc
outsl
jmp
xor
inc
sbb
fs
cltd
outsb
mov
add
cmp
cmp
pop
leave
cmpsb
fbstp
into
cmpsb
mov
xor
mov
xchg
sub
sub
ror
aad
arpl
adc
lret
imul
popf
dec
aam
shl
ud0
inc
sti
dec
pop
push
jnp
mov
push
repz
lcall
gs
inc
and
sahf
inc
sub
fs
test
cmpl
imul
not
movl
jnp
sub
fimuls
push
pushf
or
rclb
add
dec
xchg
fmuls
roll
jle
roll
inc
pusha
aas
rolw
mulb
push
push
dec
sub
int
mov
and
pop
add
mov
mov
mov
pop
xlat
shlb
adc
xchg
in
fwait
andl
sbb
mov
cld
jl
sahf
inc
sbb
mov
rclb
mov
incl
mov
pop
addr16
popf
xchg
push
je
ret
sti
xchg
pop
jge
mov
cwtl
pop
jbe
std
xor
pop
loope
or
loop
and
in
inc
adc
out
hlt
out
jae
push
mov
pop
pop
xor
stc
xchg
fdivrp
adc
es
mov
dec
clc
xlat
mov
fcoml
mov
pop
insb
jl
pop
add
sub
jecxz
inc
ja
xchg
bound
dec
paddq
mov
stos
push
add
and
out
subl
mov
jae
mov
fildll
push
push
add
arpl
push
add
push
je
xor
loopne
scas
test
fsubrl
xor
in
popa
mov
test
pop
outsb
pop
data16
xor
pop
mov
mov
mov
cmp
icebp
jne,pt
pop
mov
fcmovbe
stos
call
mov
pop
xchg
push
mov
shr
nop
sbb
inc
aaa
pop
or
sar
cmp
inc
in
xlat
jl
lock
sti
and
or
lret
mov
stc
fsubp
cmpsl
sbb
stc
les
out
insl
push
out
mov
push
fstl
push
jle
imul
sahf
push
mov
into
imul
fisttpll
adc
in
dec
cmc
mov
std
fwait
jno
addr16
das
fidivs
decb
les
mov
sub
dec
jb
xor
sbb
lret
mov
repz
in
pushf
sub
loop
pop
xchg
inc
loopne
outsl
inc
fnsave
jb
imul
jl
das
dec
xchg
and
mov
inc
cwtl
add
pop
lea
sub
pop
movsl
cltd
pop
jns
add
cmc
mov
xlat
dec
push
out
xor
mov
adc
mov
or
inc
ret
in
mov
push
inc
dec
push
sahf
pop
repnz
std
and
pop
inc
or
adc
test
cwtl
ss
xchg
fld
mov
sbb
push
inc
aaa
int
lahf
lret
and
popa
fcoml
orl
mov
in
scas
das
aas
jne
insb
add
cmpsl
arpl
adc
outsl
cltd
xchg
dec
and
nop
push
filds
cmpsl
cmpsl
dec
mov
dec
mov
lahf
cwtl
dec
daa
mov
dec
stos
mov
xchg
and
jle
std
loopne
dec
dec
dec
mov
sub
mov
arpl
pushf
xchg
insb
imul
sti
jbe
int3
add
popa
mov
shll
mull
mov
test
xor
jno
mov
cmp
negl
shrl
push
lahf
xor
push
insb
xchg
sbb
cmp
add
cmpsl
popf
into
pop
cmpsb
add
jne
pop
out
cmp
mov
notb
fwait
inc
jge
xchg
mov
inc
or
cmpsl
adc
jp
aaa
scas
sbb
out
out
ss
jecxz
pop
push
jg
mov
bound
movsl
repnz
repnz
xchg
jmp
mov
loope
sbb
xchg
popa
scas
ja
testl
out
fcmovnb
xchg
jae
xchg
adc
sub
nop
lds
mov
jnp
sahf
movsl
mov
bound
push
fadds
mov
mov
jnp
jl
jge
adc
or
nop
stc
out
pop
movsb
int
mov
lret
or
pop
mov
pop
fistpll
movsl
int
jp
xor
arpl
repnz
lods
adc
push
lret
xchg
js
mov
insl
xchg
mov
xchg
loope
add
loop
popf
test
addl
jg
sahf
push
fcoms
adc
inc
cwtl
imul
stos
pop
add
mov
inc
jnp
xchg
ds
jbe
ljmp
sub
mov
in
imull
cmc
pusha
mov
xchg
fstl
dec
ds
repnz
xchg
sarb
jbe
xor
xchg
jmp
fidivrs
jbe
andl
fcmovb
pushf
imul
enter
lret
das
mov
mov
cwtl
jb
inc
or
dec
fidivrs
mov
lret
cmpsb
rorl
cmp
jl
mov
jo
stos
fbld
sub
push
sbb
data16
int
loop
call
or
scas
outsb
pop
call
cli
pop
pusha
loope
cmp
cmp
push
push
leave
pop
cltd
inc
repz
or
jmp
shll
lcall
test
mov
cmp
scas
ja
out
cmp
and
or
pop
andb
and
mov
pop
int3
inc
in
lods
movsb
sub
loop
sqrtps
mov
xchg
or
int
xchg
cwtl
out
cmp
jle
dec
inc
mov
dec
pop
cmp
cmp
and
js
push
fbstp
dec
pop
nop
shll
scas
add
outsb
int3
cld
cmp
lods
cmp
cld
mov
mov
outsl
test
xchg
fcomip
dec
loope
aas
mov
sahf
mov
fisubl
out
add
cmp
out
shrl
data16
xchg
sub
inc
jbe
scas
lret
mov
sbb
mov
ret
cmpsl
out
fcos
xlat
cs
fwait
push
fstps
mov
xchg
les
into
mov
mov
sub
orl
adc
cli
rcl
and
in
lcall
and
push
push
inc
and
aam
insb
shl
aam
test
dec
dec
cmp
stc
xor
sbbb
sbb
and
xchg
das
rcrl
xor
dec
int3
fisttpll
mull
mov
sbb
push
adc
mov
test
xchg
roll
mov
js
mov
pop
mov
icebp
pop
mov
jae
cmp
call
ss
das
or
mov
int3
nop
arpl
xchg
movsb
xchg
sbb
and
movsb
dec
mov
jb
ret
xchg
enter
xchg
lods
push
mov
mov
xor
sbb
mov
or
jg
nop
popa
loopne
or
jno
xor
pop
sub
mov
mov
gs
xchg
add
jb
sub
pop
loope
mov
arpl
and
arpl
cmpsl
ja
addr16
jno
ds
stos
enter
and
call
push
pop
and
nop
lock
call
cmpl
stos
pushf
rcr
jmp
jmp
xchg
ja
jle
repz
cmp
sub
sub
shrl
push
inc
cmc
and
mov
popf
es
add
cmp
xchg
pop
gs
push
rcll
mov
insl
inc
andb
xchg
dec
popa
lahf
jecxz
stos
jae
shlb
ljmp
lock
mov
push
sub
insl
jl
pop
iret
pop
cmp
or
xchg
pop
mov
inc
push
bound
test
jnp
pop
xchg
xor
lret
mov
mov
je
popa
pop
xchg
pop
outsb
leave
aad
mov
outsb
push
outsl
jne
inc
mov
jmp
xor
adc
xorb
mov
add
loopne
into
lcall
sbb
jno
mov
push
lret
push
inc
fists
xchg
or
adc
push
jecxz
xchg
push
dec
ja
dec
movb
xchg
dec
jne
dec
mov
pop
ss
sub
lock
cmc
daa
rolb
or
daa
pop
or
cmc
and
mov
adc
or
mov
cmp
outsl
mov
imul
add
pop
or
lahf
loop
xchg
repnz
dec
scas
mov
jg
jecxz
xchg
mov
cmpl
idivb
xchg
mov
xor
aam
loope
lahf
cmp
mov
scas
fstl
jecxz
daa
stos
enter
aaa
hlt
ret
fbld
jecxz
mov
ret
rcrl
and
push
cmp
mov
cmp
mov
adc
adc
outsb
cmp
or
push
sbb
cmp
jb
pop
and
jg
push
cmp
inc
jle
std
push
cmpb
inc
out
mov
fwait
data16
xlat
jbe
mov
pop
hlt
sbb
loopne
jle
mov
bound
mov
cmpl
sbb
scas
adc
sub
inc
repnz
sti
push
mov
fs
arpl
sbb
sbb
inc
cmp
incb
push
fisttpl
js
stos
clc
bound
xor
push
sub
mov
xchg
add
cmp
mov
cmp
out
adc
test
mov
and
cwtl
lods
pop
jae
rcll
or
inc
mov
dec
mov
xchg
cwtl
sbb
fcoms
pop
nop
or
mov
xor
out
jae
mov
jmp
jle
xor
lods
lcall
push
fcmove
or
pop
in
jmp
into
mov
mov
pop
pushl
cmp
js
in
pop
and
js
insb
jecxz
dec
push
adc
push
xor
outsb
and
xor
ljmp
add
lahf
push
cwtl
movsl
push
sbb
test
gs
bound
ja
jne
dec
sbb
sbb
cmp
ret
inc
xchg
push
mov
iret
or
or
call
and
je
aad
pop
dec
repz
ds
pop
icebp
iret
sbb
push
test
pop
insl
adc
mov
fs
push
mov
fdivs
cltd
xor
ljmp
push
das
xor
outsb
aaa
repnz
mov
in
loope
aam
in
or
pop
sub
ss
pop
xor
jnp
push
mov
jo
mov
in
add
aaa
jo
push
jb
dec
loopne
sbb
dec
test
push
add
imul
in
mov
pop
lret
and
cmc
adc
out
fadds
loop
adc
xor
adc
out
dec
inc
repnz
push
cmpsb
rcr
sub
movsb
push
xchg
arpl
push
test
and
jp
repnz
movsb
scas
xchg
leave
jne
pop
push
add
sbb
call
sbb
pop
arpl
in
lret
sub
sub
adc
dec
inc
fsubr
sbb
in
xor
fisubrl
popf
mov
mov
scas
mov
sbb
iret
or
mov
popf
add
dec
pop
jo
pop
bound
jb
rcr
mov
xor
imul
push
sti
xchg
and
xchg
push
push
jecxz
sbb
mov
stos
out
xor
stos
and
test
dec
int
cmp
mov
lea
adc
fcomps
xchg
add
xchg
jge
xor
or
add
into
inc
inc
mov
xlat
cld
push
popf
adc
sub
rclb
outsb
in
aas
sub
mov
mov
cmp
add
in
xchg
or
mov
mov
sub
in
inc
sub
lods
loop
loop
xor
rcll
dec
loop
lods
adc
pop
jmp
xor
lods
add
fisubs
xor
ljmp
rcll
stos
insl
push
or
inc
xlat
movsb
lret
xchg
popf
sub
dec
pop
arpl
pop
das
rcrl
cmc
pop
movsb
mov
add
xchg
iret
xchg
inc
inc
xchg
rcll
cmp
mov
clc
les
mov
dec
stos
pop
jb
jb
push
popa
aas
adc
push
fcomip
add
pop
ret
adc
add
in
xlat
inc
mov
fnstsw
sar
rolw
into
jb
lcall
popf
mov
sbb
bound
cli
xor
cs
sbb
cmp
addr16
sub
dec
into
popa
and
sbb
mov
daa
cld
je
in
inc
pop
dec
mov
sarl
jno
out
test
inc
mov
mov
imul
sbb
dec
clc
pop
fcomip
in
out
mov
mov
mov
sub
inc
xlat
test
mov
or
xor
std
fisubs
mov
idivb
jo
mov
add
add
test
xchg
jb
or
outsb
std
sbb
cmp
es
lahf
in
aaa
loopne
stos
or
cmp
aaa
inc
mov
sahf
add
popa
test
int3
in
adc
imul
mov
mov
or
fidivl
js
push
pushf
sub
les
imul
rorb
jns
mov
test
aad
dec
xchg
mov
into
adc
mov
mov
in
cmp
stos
add
jno
sub
inc
sti
hlt
sub
xchg
dec
adc
adc
or
fisubs
icebp
in
or
dec
sbb
iret
add
inc
pop
call
mov
popf
shll
outsl
ds
mov
in
hlt
iret
mov
mov
dec
in
js
sbb
scas
sub
aad
sti
push
xchg
cmp
scas
rcrb
mov
cwtl
daa
adc
fsubrs
pop
mov
xchg
movsb
push
vzeroall
cmp
pusha
adc
xchg
mov
inc
cmp
xor
loopne
test
dec
dec
or
aaa
mov
sahf
sub
stos
xor
xchg
cmc
fcoml
shlb
push
clc
xchg
add
cmpsl
xor
psllq
mov
stos
daa
mov
xchg
in
les
lods
jo
imul
andl
xlat
ret
mov
shll
push
add
fisubrl
ljmp
jle
adc
mov
icebp
clc
lock
push
add
jae
pop
push
push
rcrb
insb
sti
stos
sub
lods
insb
out
sub
mov
mov
inc
cmovbe
xor
shlb
xchg
ss
xchg
call
sbb
aas
test
fimull
xor
sub
sub
xlat
test
mov
dec
imul
add
out
imul
or
mov
in
mov
mov
dec
outsb
sbb
inc
rclb
ljmp
mov
xor
or
das
sub
icebp
add
inc
mov
movsl
in
fdivrl
mov
gs
and
mov
cmp
xor
mov
scas
fidivl
insl
push
ret
mov
push
push
and
cmpsl
mov
pop
xlat
roll
mov
dec
aam
pop
cwtl
les
inc
popf
addr16
mov
pop
jnp
loopne
push
mov
subl
out
in
ret
in
testl
in
pop
andb
testb
sub
add
xor
sldt
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
