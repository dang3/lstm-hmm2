xchg
and
test
int
inc
xchg
test
sahf
pusha
loopne
faddl
dec
adc
adc
mov
aam
xchg
mov
mov
jl
jl
mov
je
dec
fcoml
aaa
xchg
or
popf
push
je
or
sbb
notl
xchg
push
fstpl
loopne
adc
stc
inc
push
mov
imul
xchg
jo
cli
stos
popa
adc
sbb
push
lahf
mov
add
mov
dec
jo
lahf
add
cmpl
aam
push
dec
sub
mov
jae
int
mov
sbb
jge
dec
inc
gs
mov
fcoms
popa
sub
push
sbb
add
mov
push
lea
inc
fsubrl
insb
and
cmp
mov
sbb
mov
test
into
dec
aad
add
adc
fstl
mov
or
lods
mov
xor
pop
fildll
popf
pop
mov
xchg
loopne
fwait
dec
scas
add
mov
add
jmp
es
xchg
lret
pop
xchg
dec
outsl
dec
xchg
pop
insb
cmc
push
mov
fisttpll
jb
faddp
in
xchg
sub
mov
lea
add
and
adc
add
daa
jo
adc
insb
xchg
mov
pop
push
xchg
dec
sbbl
sbb
cmp
sub
nop
push
mov
sbb
data16
cmp
test
fcoml
push
enter
sub
mov
fnsave
outsl
push
mov
mov
jb
test
sub
inc
icebp
insb
imul
lods
push
je
mov
pushf
nop
iret
popf
sbb
incb
push
das
mov
rclb
jmp
sbb
lahf
push
mov
mov
and
loop
movb
dec
mov
dec
fdivrs
fstpt
int3
aaa
jmp
jb
pop
jle
movsb
pop
mov
or
pop
push
add
adc
cmp
pop
adc
mov
add
adc
mov
or
pop
push
std
scas
dec
jg
inc
cmp
int3
sahf
sbb
jb
push
or
in
cmp
jge
fsts
mov
push
or
mov
add
rcrl
or
fcoms
add
test
push
xor
mov
dec
int3
xchg
jb
pop
out
dec
mov
dec
fwait
adc
cmp
and
int
or
aaa
inc
fcmovnbe
jge
mov
pop
cltd
out
mov
das
dec
fsubl
adc
add
mov
adc
sbb
and
inc
mov
mov
add
inc
xchg
aaa
dec
mov
mov
mov
adcb
in
jno
adc
cltd
nop
inc
enter
ss
adc
xchg
stos
aaa
sahf
adc
sub
shll
call
lds
lret
adc
sub
mov
sbbb
fcmovnu
sub
repz
mov
inc
jmp
adc
test
mov
lods
add
es
cmp
int
popf
cmp
std
cmp
mov
jns
xor
dec
lods
icebp
js
lahf
test
mov
ja
xchg
js
xchg
inc
call
nopl
enter
pop
xlat
xchg
dec
lret
mov
mov
test
sub
pusha
call
cwtl
mov
out
add
jl
adc
xchg
mov
cwtl
mov
scas
jb
icebp
push
xlat
sahf
xchg
push
decl
sub
pushf
lods
jl
shl
sahf
mov
sbb
mov
jbe
pop
das
mov
cmp
sub
push
sbb
push
testl
nop
mov
int3
push
pop
sub
stos
pop
testl
lea
push
in
xor
stos
ret
xchg
add
fstpl
jno
leave
xchg
rcr
xchg
xchg
ficoml
xchg
xchg
mov
decb
lods
jl
sub
xchg
icebp
out
xchg
dec
inc
sub
sahf
js
and
jl
push
jnp
fstpl
loope
cmp
enter
ret
nop
jne
pushf
dec
sbb
dec
sub
jecxz
cs
insb
jae
in
out
es
mov
and
popf
scas
nop
in
ljmp
cmp
mov
jae
aas
stc
jno
sbb
xchg
add
jmp
mov
cwtl
pop
mov
add
data16
jbe
xchg
xor
mov
mov
into
addr16
gs
out
in
lret
sbb
jecxz
imul
aam
jl
push
push
sub
push
dec
sub
adc
pop
jp
stos
iret
cmc
xor
pushf
shlb
sbb
mov
mov
cmp
xchg
push
or
cltd
aad
nop
popa
cwtl
sub
push
xchg
sub
testl
jo
inc
rol
sbb
std
rolb
fwait
or
and
cmp
int3
dec
test
add
insb
sub
mov
popf
nop
aam
pop
decb
pushf
add
dec
in
jmp
into
lret
add
mov
pop
adcl
lahf
ljmp
pusha
dec
std
sub
inc
call
and
inc
into
cmp
xorb
add
inc
lds
fsts
mov
sahf
jecxz,pn
pop
pop
xchg
push
mov
pop
imulb
mov
movsl
adc
xchg
add
fists
out
in
popf
cltd
dec
mov
and
mov
bswap
lds
lds
in
lcall
mov
add
pop
out
outsl
fidivrs
sbb
rcr
mov
shll
mov
nop
add
xchg
shrl
and
mov
nop
sbb
scas
daa
sti
nop
and
in
mov
pop
cmc
roll
cwtl
jno
xor
data16
xchg
and
mov
adc
or
data16
lgs
xchg
loop
and
fistl
jo
out
loop
es
int3
push
iret
add
or
shrl
fwait
mov
ficompl
jge
addb
or
pop
arpl
mov
cwtl
add
xchg
adc
shll
cs
rcll
or
dec
sub
xchg
fdivr
gs
divb
push
testl
jns
repz
nop
mov
sbb
testl
mov
pop
jp
rcll
popf
fcompl
daa
imul
dec
int3
les
repnz
popf
rol
int
rol
cltd
loope
cwtl
add
lods
xchg
cmc
popf
out
negb
mov
fcompl
out
mov
call
pop
xchg
mov
test
sbb
adc
test
and
test
mov
int
xor
pop
sub
mov
pop
or
xchg
movsb
dec
or
lss
push
lods
adcl
shlb
daa
addr16
dec
xor
mov
mov
incl
hlt
fbld
dec
mov
inc
mov
xlat
push
lods
mov
add
xchg
mov
sahf
sub
popf
jg
xor
pushf
mov
mov
and
pushf
push
orb
jle
xchg
sub
pop
iret
inc
je
jnp
jns
pop
int3
call
test
xchg
js
in
push
xchg
dec
mov
cmp
gs
sub
test
std
adc
xchg
xorb
pop
int3
push
sbb
mov
or
jl
es
cmc
pop
popf
int3
nopl
jb
pop
push
xchg
rol
mov
orl
sub
pushf
repnz
xor
mov
sarl
inc
adc
adc
push
ss
shll
in
fiadds
jecxz
ds
loope
repnz
pop
sub
das
rol
xlat
mov
roll
mov
adc
lret
adc
xchg
mov
mov
lret
mov
xchg
cltd
or
lret
lds
stc
and
das
jle
sbb
pop
lret
push
sahf
addr16
pop
push
imul
sub
lods
sub
nop
int
int3
inc
pop
dec
sahf
dec
sub
mov
xchg
lahf
mov
sar
leave
test
mov
adc
mov
pop
push
sarl
lahf
mov
inc
jno
sub
mov
push
jl
leave
rorl
mov
jmp
mov
aas
xor
nop
and
lahf
leave
mulb
add
xchg
or
pop
pusha
or
mov
add
jno
ss
aad
loopne
inc
xchg
adc
cmp
or
aaa
or
test
sbb
dec
push
mov
loope
shll
dec
roll
xchg
fstpl
inc
jl
xor
and
xchg
shll
int
lock
sbb
push
fstpl
xor
sub
cmp
sbbb
sub
adc
inc
les
outsl
sub
lret
jl
xchg
aam
sete
jo
push
push
add
cmpsl
les
dec
dec
xchg
dec
push
and
aam
pop
loop
in
or
pop
sub
pop
sub
lret
and
sub
aad
lock
lcall
lret
xchg
movsb
aad
popa
out
mov
popf
lret
gs
icebp
mov
push
mov
clc
bound
mov
fistpl
in
fiaddl
pop
adc
dec
sbb
stos
dec
incl
es
lahf
mov
mov
rclb
xchg
mov
cmp
jne
cli
or
je
lret
mov
mov
sub
pop
in
xorl
sbb
add
fnstenv
mov
add
or
insb
xor
sarl
and
sarl
cmp
mov
aas
xchg
sbb
fisubrs
test
xchg
push
rcrl
test
hlt
lods
adc
imul
or
dec
add
adc
dec
ffreep
int
lock
ret
or
sub
adc
add
test
mov
jb
in
cwtl
push
daa
popf
mov
std
pop
mov
add
sti
aam
sub
cld
in
cmc
repz
pusha
std
scas
cmpsl
in
out
push
push
enter
jns
imul
sti
icebp
fdivrs
pop
aam
ljmp
outsb
ret
test
fmuls
aas
xchg
jmp
jmp
jo
hlt
sbb
out
mov
sub
cld
insb
xchg
ret
les
repnz
pop
add
mov
jge
shll
sub
shrl
stos
ret
insb
adc
pop
jg
pop
ror
and
enter
push
dec
in
mov
add
add
test
hlt
xor
shlb
and
notb
enter
sbb
sbb
push
inc
js
mov
add
das
out
loop
fmulp
fsubl
jnp
repz
pop
shrb
ljmp
and
daa
out
add
aam
jge
loopne
jl
sub
xor
insl
xor
shr
and
mov
cmp
inc
pop
jae
ficoms
cmp
addb
ficoml
and
sub
xor
and
cltd
sub
pop
xor
mov
mov
sub
cli
xor
mov
fwait
xchg
bound
mov
and
int
xor
and
dec
aad
sub
jbe
in
lods
lock
adc
pop
repnz
xor
jmp
sbb
fsubrs
pop
add
inc
fs
loope
lahf
and
push
pop
cld
lahf
aaa
cs
mov
adc
rclb
je
rcll
dec
xor
out
mov
je
adc
in
fsubl
ds
stos
fstl
into
pop
loope
pop
add
xchg
push
or
cmp
cltd
ds
lea
hlt
fdivrl
loop
sub
xchg
mov
mov
xlat
inc
cltd
sub
js
hlt
pop
out
xchg
mov
or
dec
cmp
call
cltd
push
dec
adc
cli
inc
fdiv
loop
jmp
lods
jnp
int
add
in
std
pop
mov
icebp
lods
pop
cmp
stos
sahf
sahf
push
je
fwait
xor
push
or
cmc
fisttpl
bndstx
loope
dec
xor
sub
arpl
insl
rcrl
in
jmp
int
outsl
hlt
adc
push
leave
inc
fdivl
js
push
cld
js
addr16
cmpb
mov
test
fimuls
repz
jae
rcrl
adc
stos
and
pop
jb
jno
mov
jge
push
sub
and
and
pushf
aad
sarb
or
js
jb
insb
push
and
sub
gs
jo
adc
pop
loopne
push
dec
jecxz
popa
ds
addr16
int3
xchg
hlt
imul
nop
jae
xor
or
jge
jae
sbb
sbb
ja
dec
dec
sub
ret
push
ret
push
xchg
adc
sub
mov
and
adc
subps
idivb
sub
push
loopne
pusha
es
jno
bnd
in
xor
mov
pop
pop
scas
push
or
dec
jb
jmp
or
or
loope
inc
or
stos
pop
ljmp
lahf
inc
rcll
loop
jbe
xor
decl
push
mov
push
jno
push
pop
mov
and
or
inc
les
dec
les
in
mov
add
outsl
mov
inc
mov
xor
cmpsl
adc
push
aas
xchg
leave
aas
push
sahf
js
xchg
push
mov
add
stos
ja
lret
es
and
and
add
jno
push
and
leave
insb
mov
bound
push
cmpsl
inc
and
mov
pop
test
xlat
dec
dec
cmp
add
paddq
lret
dec
insb
incl
jmp
sbb
xor
inc
les
outsl
lock
adc
xchg
dec
mov
test
xchg
xchg
inc
arpl
hlt
fsubrl
test
insl
push
push
stos
movsl
xchg
dec
lock
xchg
fildll
in
push
cs
movsl
ret
out
dec
movsb
es
mov
aam
fisubs
jge
inc
pushf
in
pop
faddl
mov
pushf
ds
fdiv
xor
sub
lds
mov
lods
jl
inc
enter
inc
mov
rcrl
shlb
shll
pop
into
cwtl
dec
cmp
hlt
subl
daa
push
fwait
and
mov
mov
dec
faddp
fs
cmp
lahf
aaa
jo
gs
jge
sub
dec
loopne
or
xchg
sub
pop
or
cwtl
xchg
sub
xchg
cld
cmp
fwait
ret
cmp
dec
adcl
cltd
int3
jb
repz
repz
mov
shr
cli
test
mov
jnp
mov
add
in
push
pop
lock
and
inc
cltd
fdivrs
push
mov
es
out
push
sbb
dec
mov
mov
add
jb
test
xchg
in
lahf
push
pushf
xchg
loopne
nop
cmpsb
mov
pop
xchg
mov
jb
mov
cmp
int
adc
int3
cmp
test
popf
xor
mov
pusha
and
dec
cwtl
insl
pop
mov
test
es
sahf
faddl
daa
scas
sarl
adc
push
jmp
clc
adc
scas
repz
sub
jl
cld
jbe
clc
shrb
cli
hlt
xor
repz
loop
orb
or
pushf
dec
fs
shll
out
shlb
inc
pop
fisubrl
push
fildll
jle
mov
mov
dec
jb
testb
push
jl
fld
sub
lods
bound
mov
mov
or
sub
das
lods
mov
push
xor
xor
decl
fidivrl
sub
push
mov
push
lahf
mov
js
lret
push
je
xor
jnp
xchg
pop
clc
push
insl
lahf
mov
pop
insb
rcrb
nop
insb
mov
xchg
mov
push
add
add
add
out
test
push
push
test
aad
push
aaa
in
pushl
nop
add
rolb
push
shrl
into
mov
enter
cld
nop
rcl
lret
mov
mov
lods
jmp
push
fsubp
jmp
fsubl
bound
mov
push
fdivl
pop
call
cmp
ja
pusha
sbb
mov
lods
movsb
leave
xchg
insb
cmpsb
iret
and
shll
cmc
mov
inc
mov
cwtl
sti
xchg
adc
sbb
mov
or
int3
jl
ljmp
in
sub
bound
lock
lock
loop
push
sahf
and
add
mov
cwtl
outsl
mov
pop
aam
js
aam
popa
xchg
leave
int3
fdivl
xchg
push
cmpsb
iret
mov
mov
fcompl
add
pusha
adc
arpl
imul
std
lods
ret
push
popf
pop
or
inc
adc
fidivl
adc
mov
jge
mov
adc
mov
dec
pop
mov
fs
shrl
jo
xchg
mov
mov
scas
sub
sub
xchg
ficompl
mov
cs
faddl
mov
test
jecxz
fsubrl
loop
or
or
xchg
idivl
mov
pop
push
or
cli
xlat
lret
dec
add
push
shl
cmp
test
rcrb
in
insb
adc
or
jb
out
mov
nop
mov
adc
mull
mov
sbb
xor
jge
xchg
push
xor
inc
mov
daa
add
xlat
mov
andb
stos
lcall
adc
test
adc
mov
in
jns
dec
sbb
jmp
dec
jmp
push
jmp
lods
adc
pop
fmuls
je
adc
daa
and
repz
inc
insb
or
mov
push
rclb
ret
rclb
or
outsb
jmp
sub
lahf
jmp
sbbl
lret
lahf
sub
xor
xchg
iret
push
xlat
ftst
dec
push
xor
ret
loop
lds
ja
shrl
sub
pop
pop
out
lret
xor
add
js
in
pop
lds
and
mov
jae
xor
xchg
ret
dec
ret
cmp
in
cmp
es
ret
fiadds
mov
lcall
mov
shr
or
adc
inc
pop
add
or
test
outsl
push
jnp
daa
popf
or
clc
les
pop
dec
mov
lret
mov
test
push
add
push
inc
cs
roll
pop
pop
aad
cwtl
dec
push
jge
sub
pop
clc
repz
xor
sbb
jp
add
pop
sub
adc
and
in
adc
test
jae
loop
adc
rclb
notb
jg
cli
rcrb
push
fcmovne
cli
lds
push
jl
lahf
inc
dec
test
xchg
pop
call
jmp
add
int3
in
dec
adc
xlat
lret
lods
xchg
dec
inc
loope
and
movsb
jmp
dec
mov
inc
cs
xor
cmp
mov
sbb
dec
mov
movsl
lahf
push
sub
into
pop
sub
or
mov
pop
dec
bound
fst
test
mov
cmp
stc
sbb
je
push
loop
arpl
pop
out
lret
mov
add
xor
sub
jae
shrl
adc
hlt
adcb
push
jmp
inc
les
lock
js
push
bound
dec
pop
aad
scas
psrld
sbb
mov
enter
ss
daa
adc
xorl
add
cmp
imul
mov
lods
lahf
inc
test
cltd
dec
xor
sub
fisubrl
push
in
cmp
in
cmp
adc
dec
in
xor
sub
out
lds
mov
xor
dec
sarl
adc
mov
xchg
jp
icebp
fimull
sbb
adc
test
cld
fildl
in
jecxz,pt
mov
cmp
mov
test
adc
push
sub
test
xor
lret
icebp
outsl
aas
iret
pop
mov
mov
mov
cmpsl
psubsb
cwtl
aaa
cmp
jle
cmc
int3
mov
fbstp
in
in
push
pop
inc
std
add
jno
pushl
test
cmp
xchg
xchg
testb
mov
mov
mov
out
lods
scas
movsb
mov
mov
pushf
inc
data16
lds
pop
fcmovbe
or
ja
xchg
popl
mov
and
mov
mov
fiadds
int3
cltd
lret
push
nop
mov
push
ja
dec
mov
dec
out
int3
iret
pop
add
aam
inc
je
sti
pusha
sbb
adc
push
jle
fildl
int
nop
int
lahf
xor
pop
cmp
and
inc
rclb
xchg
fsubrl
fisttpl
pop
sbb
push
idivl
jo
pop
cltd
xor
inc
jb
or
dec
fs
xchg
jl
aad
push
dec
call
fisubrl
sarl
dec
das
pop
subb
aam
sbb
mov
cmp
jns
inc
add
andb
flds
push
dec
inc
dec
lods
popa
or
pop
call
mov
les
mov
cmp
push
rorb
xchg
ljmp
xlat
stc
cmp
repz
test
mov
inc
mov
or
mov
jae
scas
ja
push
xor
push
testb
fsub
je
outsl
inc
sahf
rolb
shll
xor
add
mov
mov
int3
jno
mov
subb
nop
sbb
es
jge
xchg
jo
frstor
adc
dec
xor
push
adc
cs
mov
xlat
mov
mov
mov
ss
push
and
scas
xlat
cmc
scas
test
and
and
dec
mov
inc
addb
mov
icebp
insl
and
add
mov
mov
mov
flds
test
sbb
cmpsb
cmc
dec
xlat
mov
mov
ss
jl
sbb
xchg
push
xor
mov
sarb
jle
popf
imul
dec
adcl
xor
push
add
fwait
cwtl
movsl
into
mov
push
mov
jmp
cmpsl
test
pop
in
cmp
mov
ret
jecxz
mov
popa
adc
push
call
loope
adc
les
dec
scas
test
dec
ss
sbb
xor
cwtl
sub
mov
jp
out
shl
xor
add
shlb
imul
adc
lret
xor
shrl
mov
pop
rorb
iret
movsb
icebp
out
das
push
add
roll
xlat
cmp
mov
sub
ja,pt
and
push
jp
dec
fimuls
fmuls
lahf
and
mov
xchg
pop
addr16
mov
pop
cmp
xor
or
iret
popf
or
adc
jge
adc
push
push
rolb
jle
pop
icebp
aad
dec
or
add
mov
pop
lahf
lahf
cld
cld
roll
je
push
testb
sahf
ret
xchg
fstl
ss
in
test
cmp
inc
dec
inc
arpl
in
mov
and
xchg
lods
lods
not
mov
jae
or
mov
xchg
setle
loope
aas
imull
pop
sti
mov
ja
fwait
xchg
jne
std
leave
fcmovne
sbb
push
jp
scas
enter
add
pop
fmuls
enter
add
pop
cmc
jmp
adc
lret
sub
pushf
cld
les
jle
loop
and
andl
outsl
leave
decl
movl
sub
mov
repz
repz
and
test
push
xchg
loope
sbb
test
loopne
xchg
or
movsb
adc
loope
or
or
mov
js
es
in
call
cwtl
cli
lods
sub
lcall
cwtl
cmp
mov
sbb
pop
push
je
gs
jno
xchg
das
push
xchg
and
pop
dec
das
lret
sbbl
cwtl
pop
xchg
imul
xlat
xchg
add
cld
cmp
xchg
fildl
or
stc
call
mov
xchg
add
data16
add
or
out
add
jge
dec
scas
sbb
andl
inc
dec
mov
lcall
jb
loop
cmp
or
int3
or
sbb
pop
pop
or
or
pop
and
test
jae
cmp
xchg
mov
cmp
in
push
cmp
cmpsb
popf
xchg
jecxz
aad
cwtl
fisubrl
and
sbb
js
std
add
iret
popf
dec
sbb
insl
cmp
mov
insb
pusha
dec
lea
and
jns
jb
dec
pushf
xor
xchg
add
pop
dec
push
sub
jle
mov
lods
repnz
loop
sbb
dec
adc
xor
xor
push
fs
ret
inc
shl
mov
mov
mov
mov
adc
mov
adc
sbbl
dec
daa
mov
cmp
nop
fcoms
jbe
adc
into
jne
push
or
stc
add
inc
cmp
jle
fsubr
adc
pop
push
xor
fcompl
popa
js
adc
int3
das
enter
pop
ljmp
xchg
xor
daa
mov
adc
loope
subb
jo
popf
xchg
imul
sti
add
jp
lock
dec
mov
in
pmulhw
xchg
xchg
push
mov
sbb
sbb
xchg
inc
pop
fimull
nop
mov
fwait
sbb
enter
and
adc
test
xor
push
shlb
outsb
cmc
mov
sarl
push
mov
call
pop
jl
gs
dec
les
enter
icebp
shr
xchg
mov
xchg
dec
xorb
mov
fcompl
sub
stc
aas
jb
and
mov
xchg
jb
lods
mov
xlat
call
les
mov
dec
imul
mov
aam
pop
dec
mov
enter
and
jnp
popa
and
mov
sbb
add
enter
mov
cmp
aad
adc
sub
test
call
int
movsb
pop
adc
sbb
cmpb
sbb
fmull
adc
popa
mov
jbe
mov
add
aaa
xor
lcall
mov
rcrb
das
and
jbe
jg
clc
add
lcall
leave
jp
je
sbb
fucom
jno
fneni(8087
sub
pop
dec
in
repz
add
sbb
or
pop
push
mov
rep
in
into
pop
mov
lock
xchg
jl
leave
fwait
mov
pushf
insb
je
add
and
popa
negb
adc
shl
test
or
aaa
fdivs
fnsave
cmp
test
icebp
push
mov
aaa
insb
add
xlat
bswap
ret
lock
pop
lods
push
and
adc
xor
jae
mov
cmp
pop
pop
inc
outsl
mov
test
cwtl
and
in
mov
adc
rorl
dec
inc
lret
sbb
sarl
sub
cld
fstpl
push
or
and
pop
xchg
pop
int3
mov
rorb
rcrl
adc
in
stos
int
pushf
hlt
std
fsubl
xchg
mov
push
cmp
jle
mov
out
jae
repnz
clc
ljmp
inc
aaa
rcrl
and
pop
rclb
test
das
jno
xor
addr16
inc
imul
pop
faddp
shrl
pop
mov
jecxz
jns
iret
ja
xchg
mov
inc
cli
mov
movsl
in
jb
addr16
mov
adc
mov
scas
sbb
and
leave
jnp
and
mov
inc
jg
popa
cmpsl
dec
pusha
xchg
into
mov
add
outsb
repz
test
xlat
std
and
sahf
leave
xor
xlat
into
mov
xchg
enter
jo
ret
loope
and
fs
sbb
loopne
dec
xchg
xor
xchg
bnd
push
xchg
into
push
sub
mov
or
insb
dec
xchg
test
lock
dec
neg
inc
mov
call
lret
mov
cmp
push
sub
jmp
push
repnz
test
ror
xor
push
sbb
movl
ljmp
xchg
cltd
imul
push
pop
int3
cli
push
ja
call
pop
movb
xor
arpl
outsl
sahf
into
jge
xchg
pop
je
pop
cmp
jne
aam
lds
cmp
mov
out
test
aad
inc
mov
mov
lret
cli
les
imul
mov
jns
push
movsb
jnp
mov
pushf
add
sub
cmp
sub
dec
cmp
iret
mov
adc
ret
loop
xchg
cmpsb
add
inc
jno
cmpsb
add
adc
hlt
inc
pop
sbb
inc
jp
jb
jecxz
sbbb
jl
mov
in
sub
and
outsl
pop
ret
adc
jae
cli
movsl
push
pop
lret
dec
ficompl
adc
xor
mov
pop
xchg
sub
sbb
mov
jmp
or
jbe
into
enter
or
dec
xchg
lods
or
adc
inc
cld
js
stc
xlat
or
insb
aam
fidivl
mov
sub
xadd
xor
jg
ret
insl
sbb
push
and
ret
ret
fstpt
adc
jno
mov
sub
adc
cmp
or
pop
shrl
aas
pop
jl
scas
cmp
dec
movsb
or
or
loopne
mov
test
sub
push
xor
shlb
shlb
js
cmpsl
mov
lret
iret
push
sarb
xchg
pop
adc
and
cmc
push
test
ja
shlb
inc
cld
cmp
or
add
out
xorl
sbb
xchg
lret
push
and
pop
add
xor
cmp
or
loope
pop
into
test
mov
fisttpll
fcmovnb
fistpl
and
add
mov
lea
inc
nop
and
subb
aam
lcall
sbb
leave
mov
icebp
cmp
decb
xchg
inc
mov
popa
lock
out
popl
xchg
leave
flds
xchg
out
je
in
sti
pop
sbb
stos
mov
fucomi
in
jne
jle
mov
mov
stc
mov
insl
mov
nop
cmpsl
aam
les
add
jmp
xchg
inc
pushf
fcoml
ljmp
shr
inc
fstl
sub
inc
sbb
cs
dec
sub
std
xor
push
scas
xchg
pusha
push
enter
or
jl
push
dec
mov
pop
popa
adc
mov
js
and
ljmp
push
push
aaa
outsb
xchg
or
xchg
xor
ljmp
lea
rorl
mov
add
shll
pop
xchg
xor
int
adc
xor
xchg
lret
dec
hlt
xor
test
loope
sbb
mov
push
inc
iret
sbb
int3
cmp
xchg
aam
mov
xchg
andb
scas
sub
jae
mov
int
xor
ds
out
stos
jb
cmpsb
cmpsl
jge
or
adc
mov
and
xchg
push
sbb
inc
or
dec
lahf
daa
ds
repnz
jmp
inc
lret
or
outsl
cltd
stos
insb
mov
pop
sbb
insb
aaa
ret
cmp
pusha
mov
and
aam
add
jb
add
add
add
mov
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
movb
sub
mov
popa
jmp
and
mov
xor
and
mov
sbb
cwtl
dec
es
leave
in
js
pop
das
pop
mov
xchg
enter
jmp
mov
sbb
mov
dec
push
ss
and
mov
inc
ja
fs
jmp
mov
sbb
cwtl
dec
es
enter
mov
mov
cld
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
scas
sbb
mov
fsub
add
or
cmp
cmp
ljmp
imul
jae
cld
scas
aaa
xor
jo
fistps
std
jo
gs
jae
popa
jb
inc
jo
cmpsl
js
adc
scas
mov
mov
test
out
imul
std
cld
inc
xchg
ret
xchg
adc
ja
push
outsl
data16
popa
gs
inc
daa
insl
jo
outsb
jns
push
out
fs
je
push
scas
and
mov
loope
mov
xchg
jne
lahf
inc
sbb
pop
cs
je
aam
fsubl
mov
fs
in
add
aam
call
in
fwait
aaa
add
mov
mov
push
test
mov
je
mov
in
pop
mov
jo
and
mov
inc
xor
mov
cmp
or
and
aad
jmp
rclb
or
add
out
rcrb
mov
mov
fcmovb
inc
fcomps
or
push
inc
mov
cmpl
mov
incb
ret
adc
loope
fsubl
mov
inc
add
jb
shlb
lea
mov
sub
test
mov
inc
or
ret
mov
adc
mov
push
jecxz
test
jne
mov
mov
mov
rcl
out
or
scas
ret
inc
inc
xchg
dec
xor
push
inc
shll
mov
shl
scas
in
out
inc
push
cld
dec
jmp
add
in
andb
idivl
or
or
jg
clc
xchg
lock
push
hlt
adc
shll
add
shl
add
lret
add
xor
mov
cmp
jb
or
cmp
jmp
aas
adc
mov
or
or
cli
ret
jne
popa
adc
inc
jb
xchg
inc
ja
and
adc
pop
lock
in
hlt
cmpl
jb
jbe
movsl
xor
cmp
push
cld
jb
or
mov
jo
cld
mov
cmova
jne
mov
mov
sub
mov
adc
or
gs
mov
jmp
mov
sbb
std
mov
jmp
xchg
fs
inc
cmp
or
push
mov
add
bound
pop
sub
sarb
adc
mov
das
arpl
adc
cmp
jbe
adc
push
cmp
cmp
xor
cs
orl
nop
inc
inc
rolb
mov
test
inc
sub
push
mov
xorl
roll
aas
ja
or
xor
mov
jle
inc
inc
aas
inc
test
les
add
adc
stos
pop
test
adc
out
pop
subb
xor
orl
push
popa
ljmp
mov
push
dec
jl
repz
inc
imul
and
shrl
xchg
dec
pop
cwtl
add
cli
bound
addr16
fcmovb
mov
and
add
lcall
inc
das
pinsrw
movsb
pop
or
fucomi
sbb
popa
add
mov
add
rcr
mov
jle
sbb
or
les
mov
and
inc
int3
or
and
push
les
xchg
pusha
push
in
xchg
jp
enter
loopne
jmp
sub
inc
xor
jmp
xchg
push
popa
scas
cmpsb
pop
cs
push
inc
add
mov
sbb
pop
fadds
xchg
jb
or
inc
addr16
inc
add
mov
lcall
adc
add
and
pop
loopne
and
cmp
enter
sub
test
fwait
xchg
andb
inc
loopne
adc
mov
iret
cmp
ja
pop
gs
xchg
add
ljmp
mov
pop
pop
nop
sarb
ljmp
notb
add
inc
xor
add
sbb
push
out
xchg
ljmp
add
or
xchg
dec
push
daa
ljmp
sub
xchg
imul
add
add
mov
je
cmp
js
jae
lds
aam
add
std
xor
xor
sub
pop
adc
jecxz
sub
aas
negb
xor
sub
repz
jo
outsl
mov
adc
adcb
adcb
or
add
sahf
mov
mov
andb
std
lret
inc
setns
jmp
outsb
jmp
push
inc
jle
jae
xor
popa
sbb
push
mov
iret
cmp
and
cmpsb
and
or
orb
or
cmp
test
call
add
mov
push
in
test
xor
and
inc
sub
add
inc
and
cmc
rcr
xorl
mov
mov
daa
add
dec
xor
out
sub
mov
mov
xor
push
sub
test
add
mov
dec
xor
lock
leave
jo
add
daa
add
jle
inc
sbb
pop
xchg
fdivrs
dec
mov
mov
xlat
sub
pop
dec
aad
sbb
test
mov
pop
cmp
pop
aaa
mull
mov
stc
fwait
pop
sbbb
aad
and
push
sub
aas
lock
test
jg
and
add
pop
lock
sub
and
push
adc
mov
adc
fimuls
pop
sbb
add
loopne
fcoml
jl
test
push
sub
movsb
sti
in
fs
xor
cwtl
jae,pn
sbb
js
popa
and
xor
dec
pop
out
mov
mov
pop
jno
jecxz
out
testb
jge
sbb
push
ss
adc
push
sub
orb
sbb
or
lret
add
mov
dec
jg
insl
cltd
mov
add
aas
inc
adc
cli
pop
jnp
sbb
and
cld
xchg
mov
adc
aaa
mov
fdivrl
mov
push
dec
fldl
rorl
add
mov
inc
sbb
jle
dec
or
test
mov
pop
shr
movsl
push
cmp
clc
xchg
cmp
xor
lock
inc
and
js
add
or
lret
fwait
cld
add
stos
inc
jns
icebp
inc
add
in
sbb
and
call
cmp
pop
add
stos
add
push
jmp
mov
mov
cmp
inc
outsb
pop
lret
test
ficomps
pop
leave
xchg
mov
add
cmpsl
insb
push
lods
xchg
add
sarb
insl
cwtl
jns
data16
cmp
in
ljmp
add
hlt
lods
xor
sub
mov
push
pushf
sbb
push
and
sbb
pop
mov
mov
dec
pop
cli
sub
add
jbe
sub
in
add
sti
imul
sbb
add
sbb
inc
jbe
aad
stc
sub
cmp
imul
pop
ss
and
cmp
nop
jne
jo
xor
push
xchg
pusha
cmp
pop
and
inc
add
mov
add
xor
jbe
ret
and
add
fldcw
adc
dec
hlt
xor
push
xor
in
pop
pop
iret
adc
aam
jge
dec
test
jecxz
add
sbbl
adc
sub
mov
push
mov
bound
or
jl
nop
sub
mov
shll
sbb
add
lcall
orb
xchg
out
and
nop
add
inc
nop
and
lock
cmpsb
and
jle
sbb
repz
sahf
xlat
stc
sbb
xor
and
in
add
jbe
cld
call
test
mull
inc
movsl
and
loope
mov
lds
cwtl
mov
out
xchg
pop
cmp
lds
es
cmp
movsl
and
xchg
pop
or
xchg
incb
add
and
pop
into
cmp
ja
sub
lcall
jmp
jle
push
pop
or
inc
repz
loop
sub
add
mov
std
sbb
shlb
jg
cltd
add
mov
inc
inc
add
mov
mov
into
adc
roll
mov
inc
pop
andb
jp
pop
add
pusha
or
sahf
mov
jae
push
xor
in
popa
cltd
dec
out
mov
push
xor
push
adc
add
int3
shlb
sbb
in
ljmp
mov
pop
mov
mov
push
pop
add
xchg
jge
mov
adcb
inc
add
out
adc
cld
dec
or
jmp
fs
inc
mov
icebp
shlb
xor
xor
xor
mov
data16
in
nop
mov
scas
popa
add
dec
push
mov
add
js
mov
dec
ret
adc
mov
nop
mov
or
ret
push
cmp
data16
pop
int
pusha
mov
sub
enter
dec
inc
stc
and
push
loop
out
andb
fistpll
cmp
sub
in
xor
adc
stc
andl
mov
mov
or
inc
cmp
cmpsl
sbb
xor
sbb
ret
or
pop
dec
notb
fmuls
mov
xor
mov
sti
lahf
sahf
push
loope
xchg
add
cmc
sbb
mov
cwtl
adc
xlat
pop
mov
mov
and
sti
jg
or
sub
xor
or
mov
add
loopne
jns
pop
sbb
movsb
ja
ljmp
and
out
mov
ds
sbb
clc
sbb
sub
insl
pop
jo
xchg
pop
pop
pop
mov
mov
out
lcall
or
add
js
lahf
movl
insb
aaa
imul
in
imul
lock
les
rol
or
jns
lret
jne
and
sbb
pop
in
stc
pop
cltd
xor
aad
sbb
js
fisttpll
outsl
or
push
pop
nop
or
idivb
mov
add
mov
aaa
add
mov
pop
mov
notb
sub
inc
lock
ret
pusha
xchg
xchg
pop
test
inc
lret
sbb
jle
push
or
xor
fildl
and
sti
add
inc
orl
and
in
xorb
mov
mov
pop
inc
cmc
rclb
out
mov
inc
call
adc
pusha
int3
stos
daa
arpl
xor
shll
xchg
mov
nop
add
movsl
imul
in
test
pop
fsubrs
inc
cmp
mov
pop
in
sub
mov
xchg
add
sbb
mov
or
adc
xchg
add
clc
jg
or
add
push
orb
mov
mov
int
imul
stc
inc
nop
imul
xchg
and
jno
adc
jge
add
andb
xchg
sbb
into
mov
inc
js
adc
mov
test
jg
in
mov
jp
add
mov
dec
fwait
and
cmp
roll
icebp
in
mov
gs
mov
cld
sub
mov
shll
mov
roll
stc
sbb
add
je
jge
shll
mov
xor
and
fidivs
xchg
sub
ja
pusha
pusha
mov
fldl
push
cmp
mov
push
inc
test
stos
or
or
es
sbb
stos
or
pop
sbb
cwtl
jns
scas
push
adc
mov
push
mov
or
and
mov
inc
out
in
push
icebp
mov
arpl
shlb
aas
sbb
test
addr16
add
fldcw
add
imul
and
int3
or
mov
xor
sub
and
push
dec
int
pop
and
iret
push
sarl
mov
sub
add
lea
xchg
xchg
ficoml
fwait
in
std
add
adc
ret
add
inc
out
mov
test
push
or
out
loopne
xorb
mov
lock
mov
leave
xlat
inc
hlt
subb
mov
push
inc
aad
xchg
add
push
mov
lds
enter
cmc
inc
clc
dec
xlat
pop
cltd
dec
leave
and
icebp
add
and
pop
imul
rclb
add
lahf
repz
cs
sahf
inc
push
xchg
or
ret
popf
and
jne
hlt
pop
add
test
xor
cld
push
pop
push
and
add
lds
outsb
mov
dec
dec
int
xor
xchg
mov
xor
and
add
dec
les
mov
xchg
mov
push
inc
push
shl
dec
out
add
popf
cmp
insb
test
cmp
push
fsts
ficompl
add
pop
push
pop
xchg
fistl
roll
mov
sub
sbb
pop
sahf
test
inc
sbb
inc
aam
inc
pop
add
sarl
popf
cmp
and
inc
xchg
nop
aaa
fmuls
mov
repnz
dec
xchg
loop
inc
or
cmp
pop
and
stos
cld
pop
add
push
in
pop
icebp
xchg
mov
jbe
imul
xorb
jg
loopne
jo
rcrb
test
mov
clc
jp
sahf
or
sbb
outsb
inc
lds
xchg
hlt
push
dec
mov
iret
xchg
cld
test
lock
sub
xor
movsl
inc
fldcw
pushf
xchg
loope
aas
dec
int
push
adc
mov
mov
and
fiadds
iret
jecxz,pt
mov
pushf
xchg
out
repnz
add
mov
clc
jge
add
xor
mov
pop
xlat
add
inc
icebp
or
cmp
add
lods
xor
lock
aad
mov
ds
xchg
lds
fadds
pusha
and
pop
loopne
inc
add
stos
add
mov
dec
add
push
pop
rcr
adc
and
and
push
popa
enter
inc
andb
addb
add
sahf
arpl
roll
push
inc
rolb
mov
mov
mov
pop
sbb
testb
adc
dec
shll
xor
mov
pop
or
push
and
xor
test
jns
shl
repnz
imul
mov
jns
cmp
sub
das
in
add
xor
push
subb
dec
cwtl
int
js
dec
and
jnp
sbb
insl
sub
sbb
outsl
mov
cmp
shll
xor
push
aad
hlt
or
pusha
pushf
lods
adc
or
and
mov
mov
add
loopne
sbb
pop
aas
lods
dec
push
imul
push
aas
inc
add
jnp
dec
lock
inc
jb
sbb
and
xor
nop
call
add
or
sbb
cmpsb
call
lods
xor
adc
xor
sub
imul
jge
roll
popl
jb
notb
inc
rcrb
cwtl
clc
sti
cwtl
orl
push
and
aad
loop
hlt
insb
add
xorb
and
mov
call
js
xabort
add
notb
jnp
pop
push
cmc
sbb
jp
into
test
call
rcrb
add
movsl
adcl
lea
pop
movsb
adc
test
scas
adc
mov
push
adc
xor
out
movsl
aas
adc
mov
imull
sbb
cwtl
call
loopne
inc
or
ds
leave
pushf
repz
mov
cld
test
decb
and
inc
fnstsw
sub
je
bound
shrl
fisttpl
push
xor
test
dec
test
inc
jl
push
aas
es
mov
stos
mov
das
jnp
mov
lds
and
add
fcomps
sbb
pusha
mov
add
xor
sbb
aas
int3
jbe
test
mov
cs
movsl
adc
cmpb
std
cmp
lds
and
fnstsw
nop
mov
int3
stos
cmp
lret
sbb
add
push
loop
add
adc
push
scas
inc
xchg
or
lret
sbb
push
ret
xor
pusha
or
sbb
test
shlb
adc
xor
and
into
cmp
and
xchg
fstpt
in
lcall
adcl
lods
add
lock
jp
jge
std
sbb
mov
mov
mov
add
es
fistl
jp
lods
ja
fldl
inc
test
mov
adc
dec
dec
sub
pop
push
xchg
sbb
mov
lret
call
sub
sub
stos
pop
movsl
shlb
and
jnp
inc
mov
push
add
pop
repnz
mov
jo
dec
test
and
pushf
hlt
adc
lahf
jo
lock
ret
push
call
add
push
mov
pusha
and
push
int
sbb
into
mov
add
adc
xchg
jne
cmp
cmp
mov
int3
push
leave
adc
mov
adc
push
lods
adc
mov
adc
sbb
int
dec
pop
clc
ds
xchg
leave
mov
pop
xchg
dec
push
inc
or
sub
xlat
es
enter
add
icebp
pusha
movsl
enter
insl
mov
jo
outsl
inc
push
push
pop
xlat
jnp
jmp
xchg
mov
lock
fcompl
sbb
and
add
divl
popa
adc
imul
push
xor
adc
subl
addr16
jb
and
sub
mov
pop
pop
outsl
shll
or
aam
clc
je
sbb
fs
xchg
ret
pusha
sbb
mov
andb
inc
add
inc
cmc
fimuls
call
pushf
pop
or
push
lock
hlt
adc
and
adc
hlt
les
and
xchg
adc
and
rolb
dec
jge
pop
cmpsl
into
cld
push
sub
rolb
faddl
inc
mov
mov
cwtl
faddl
movsb
jg
pop
das
mov
pusha
inc
sbb
out
adc
xchg
repz
jne
test
fcoms
js
nop
jno
sbb
mov
jbe
or
pusha
add
xchg
jne
je
push
iret
mov
icebp
and
xlat
test
dec
repnz
mov
outsb
mov
inc
add
sub
mov
rorl
cld
enter
fsubl
mov
xchg
int3
enter
push
out
jmp
xorb
repz
lock
add
push
loopne
dec
iret
xchg
xor
aam
or
addr16
jno
mov
icebp
outsl
aam
xchg
adc
push
pop
mov
das
dec
shl
xchg
movsb
add
mov
repnz
loopne
add
xorl
sbb
sbb
test
popa
push
aas
int3
dec
xor
aas
inc
sbb
jne
clc
or
push
sub
dec
push
jns
mov
loopne
push
ds
adc
inc
add
adc
mov
mov
adc
repz
sbb
es
mov
inc
shrb
or
lahf
mov
sbb
ds
push
out
xor
adc
adc
loop
push
and
mov
add
ss
push
push
inc
add
jns
sti
int3
call
mov
mov
bnd
pop
mov
clc
add
push
mov
add
test
movsb
pop
inc
fcom
fcmovne
popa
dec
cwtl
int3
sub
pop
stos
xchg
push
js
in
sub
decb
xor
fwait
test
cmovae
test
loop
int
push
mov
aad
addb
push
dec
and
lods
mov
enter
xor
lahf
pop
je
adc
mov
cs
xchg
mov
cmp
aaa
lds
pop
push
jecxz
pusha
lock
int
ss
and
jae
jmp
and
adc
aas
mull
jbe
sub
stos
add
stos
lods
jg
push
insl
mov
push
mov
cmpsl
ja
add
fcompl
into
lods
cmc
add
jp
or
gs
add
pop
fdivrl
jl
and
addl
fistpll
mov
add
jmp
sbb
lods
push
push
fdivrp
das
mov
mov
add
cmp
mov
jbe
nop
cmp
push
push
js
movsb
test
jno
call
into
jbe
adc
and
push
cmc
addr16
pop
add
dec
or
call
sub
xchg
fstl
push
jmp
sbb
and
sahf
cmpsl
subps
sti
inc
arpl
mov
xor
mov
int3
inc
jg
adc
dec
mov
push
movsb
mov
add
mov
notb
rolb
lods
clc
and
lds
cli
rdtsc
insl
data16
dec
or
mov
sti
push
dec
or
push
imul
pop
jecxz
xchg
dec
aad
inc
mov
pop
fimull
xchg
cwtl
imul
adc
or
call
insb
fwait
xchg
add
xor
or
push
fsubrp
stc
rorb
push
add
pop
push
lahf
repnz
pop
dec
cwtl
cmp
dec
cmpsb
add
sub
add
nop
lock
sbb
loop
sub
and
movsl
call
xlat
call
lds
adcl
mov
and
roll
cmp
aas
out
orl
dec
push
add
jo
and
decl
loope
es
and
sarb
jge
dec
inc
and
xchg
add
jp
rolb
pop
dec
push
cmp
pop
jae
add
push
mov
jge
xchg
pop
or
or
fmull
cwtl
add
dec
lahf
fbstp
icebp
sbb
lcall
mov
or
jo
gs
fcom
mov
sub
cmpsb
adc
out
test
cmc
ja
mov
pop
push
inc
lock
lahf
shlb
pop
xor
mov
repnz
cmp
and
mov
rolb
psubb
shl
dec
mov
jne
and
lret
dec
clc
jb
add
mov
test
mov
cmp
xor
cwtl
dec
cli
roll
pop
add
pop
ret
fcoml
mov
or
sbb
jb
ja
push
inc
dec
and
dec
and
popa
sbb
aas
cmp
mov
xchg
xlat
add
movsb
sub
in
mov
test
pop
mov
or
inc
mov
dec
mov
mov
and
mov
mull
sub
jnp
xor
adc
jo
add
fwait
ret
dec
loop
push
pop
or
mov
add
lahf
jge
or
sbb
lock
movsl
or
cmp
jae
mov
add
xchg
cmp
fdivr
xor
cmp
mov
xchg
push
xchg
jae
bnd
lds
mov
into
stos
mov
test
cmp
pcmpgtd
push
addb
inc
and
arpl
scas
xor
cmp
jb
push
fiaddl
shlb
call
mov
je
and
mov
inc
mov
movsb
test
lods
lds
mov
add
fildll
cwtl
and
jns
movsl
push
test
and
jp
mov
jns
test
sbb
sub
lret
sbb
sbb
inc
adc
sub
leave
out
add
fstpl
enter
adc
adc
repnz
mov
xchg
cli
inc
test
or
add
or
mov
cli
adc
add
das
sbb
push
jp
repnz
sbb
jae
cmp
sbb
js
aas
push
cld
xchg
ret
pop
mov
rolb
add
popa
push
jno
sub
push
sbb
and
mov
lahf
popf
ret
jns
inc
jl
cmpsb
adcb
xor
subl
xchg
sub
mov
and
mov
stc
add
push
addr16
movsb
adcb
stos
js
scas
mov
imul
cmp
cmpsl
xlat
jg
ret
jmp
dec
dec
fdiv
movsb
int3
imul
stc
arpl
shr
addr16
insb
leave
mov
into
mov
jle
inc
pop
dec
pcmpeqw
nop
sbb
adcl
lret
pop
xor
out
fldl
push
mov
shlb
mov
sbb
stos
test
std
in
pop
leave
dec
call
cmpsl
nop
enter
aad
pusha
ret
in
or
and
js
cltd
in
or
adc
cmp
iret
inc
lock
add
push
pushf
jne
mov
mov
scas
dec
cmp
aas
stos
dec
pop
les
xchg
push
aas
inc
cmp
movsb
cli
or
cwtl
fdiv
cwtl
aam
xchg
bound
rcl
add
call
repz
xchg
add
jns
lea
movsb
sbb
imul
pop
push
das
pop
rclb
sbbb
test
or
cmc
setno
mov
imul
pusha
adc
adc
xchg
stos
std
in
add
int3
fs
dec
clc
pushf
add
aas
nop
xor
mov
sbb
icebp
xor
ja
popf
sbb
js
ret
imul
stos
jge
mov
and
sbb
and
push
int
sbb
js
jp
adc
decl
dec
enter
imul
shr
adc
fsubs
jno
lret
int
push
ret
push
sarl
fiaddl
hlt
cmpsl
jae
bnd
fsts
decb
push
sbbb
xchg
sbb
mov
sbb
mov
pusha
xchg
jg
fldt
int3
and
fwait
add
inc
add
inc
or
mov
pop
adc
outsb
int3
and
or
add
es
mov
jg
and
mov
mov
sahf
push
dec
out
arpl
mov
stos
nop
in
js
jnp
out
in
movsl
rolb
std
data16
into
bound
test
cld
orb
ljmp
movsb
rolb
ds
jp
cmp
sbb
orb
adc
hlt
adc
sub
xchg
rcrb
mov
test
mov
sbb
les
repz
rcll
mov
push
in
mov
bound
inc
sub
xor
or
enter
push
fs
je
mov
dec
lahf
sub
lret
xor
jo
add
cmp
add
cmpsl
addl
or
hlt
into
mov
push
xlat
push
bound
enter
add
mov
jns
push
lock
cmpsl
je,pt
pop
inc
mov
lahf
mov
into
mov
sbb
outsl
jo
cmp
fdivl
subb
and
or
mov
or
rolb
sbb
push
or
mov
jp
mov
push
filds
or
xorb
and
call
sarb
jl
orb
add
mov
sbb
sti
das
inc
iret
xchg
lea
stos
jg
fcompl
cmp
or
clc
lods
mov
dec
ret
inc
stos
push
movsb
push
sbb
enter
and
hlt
call
in
add
aas
push
dec
fwait
push
pushf
adc
xchg
or
addl
push
std
out
int3
pusha
jp
and
ss
shlb
cmpsb
xchg
push
addr16
or
lods
into
outsb
and
fmulp
and
sub
dec
add
or
push
ljmp
mov
mov
push
jl
add
sbb
clc
lods
aam
jnp
mov
jne
sahf
jmp
inc
repnz
add
test
push
push
das
aam
mov
push
sbb
and
adc
clc
add
fwait
into
ss
lea
lret
out
popa
adc
pop
jge
mov
jne
mov
enter
jmp
push
divl
arpl
ja
dec
loopne
sub
fwait
cld
and
and
inc
mov
psubsb
pop
orl
sarb
sbb
jo
inc
imul
pop
adc
add
sbb
add
xor
xchg
jb
and
or
lret
adc
hlt
pop
mov
inc
and
in
cmp
pop
les
xchg
cld
add
cmp
mov
adc
cmp
jmp
pusha
jae
fadds
jo
adc
adc
xor
mov
dec
mov
push
inc
or
sbb
adc
mov
shrb
push
add
and
loope
xchg
mov
xchg
je
jmp
push
add
xor
push
xchg
fsubs
rol
push
js
ficoml
ret
xor
pop
sub
bound
scas
xor
stos
sub
jb
push
mov
mov
xchg
xor
subl
push
jp
cmp
pop
mov
mov
jp
mov
or
sbbb
out
mov
ja
and
sarl
sbb
inc
fdivrs
and
lret
dec
es
jbe
pop
inc
imul
sub
mov
mov
pop
adc
jecxz
adc
add
adc
cld
les
lret
nop
adc
mov
push
nop
adc
incb
int
mov
pop
add
pusha
fidivrl
loope
mov
inc
mov
add
lret
pop
daa
aam
push
jg
add
and
pop
pushf
or
adc
adc
mov
mov
push
add
inc
mov
and
stos
sub
jl
adc
and
add
ds
icebp
mov
addl
shlb
sub
and
shrl
pmulhuw
jne
test
cmp
push
dec
jbe
mov
sbb
mov
fsubp
dec
add
cld
xchg
mov
ja
mov
dec
inc
imul
add
daa
mov
inc
mov
add
xor
cs
cmp
sahf
into
jae
movsl
mov
adcb
das
xchg
ret
inc
pusha
in
fdivl
shld
leave
cld
jno
add
adc
inc
idivl
or
test
adc
repnz
cs
lods
loopne
mov
pop
jo
xor
sbb
dec
adc
adc
je
jo
sarl
gs
loope
jnp
nop
dec
and
stos
insl
icebp
das
test
xchg
insb
xchg
sbb
cltd
sbb
inc
js
add
jo
sub
dec
and
dec
add
dec
push
loopne
pop
dec
rep
cmp
jnp
add
loop
add
popa
stc
ja
movsb
movsl
pop
std
dec
lret
fmull
sbb
or
scas
mov
stos
aad
dec
cwtl
or
sar
outsl
je
push
xchg
jns
or
mov
jl
or
add
shlb
adc
jno
mov
out
lret
add
mov
add
sbb
nop
push
push
insb
sub
jl
push
push
nop
dec
aas
lahf
sbb
add
dec
xor
movsb
fs
mov
inc
cmpb
xchg
addr16
movsb
mov
mov
mov
xor
push
mov
dec
mov
aas
addb
push
movsb
shl
pop
add
ds
jp
add
add
test
call
icebp
imul
or
mov
push
inc
inc
scas
in
icebp
pushf
add
inc
js
jno
dec
enter
aas
in
nop
add
mov
jg
lods
movsl
ds
pop
push
outsl
inc
jl
or
push
xchg
dec
shlb
clc
out
cmpsl
loopne
pop
push
pop
je
in
out
push
push
dec
xlat
xchg
jb
int3
xor
or
dec
sub
rcll
adc
jns
lret
jl
xorb
mov
pop
outsl
or
enter
jle
stos
stos
pop
pop
push
pusha
mov
loop
add
fcompl
dec
add
sarb
lods
add
and
pop
xor
mov
push
call
add
xor
pop
mov
pop
rorb
sub
mov
pop
rcrb
inc
cmpsb
lods
aas
add
fsubp
sub
dec
nop
nop
lock
testl
sahf
cli
add
adc
stos
ljmp
adc
cli
pop
or
dec
test
or
push
inc
add
es
scas
lds
cmp
push
stc
and
adc
mov
test
inc
mov
in
xchg
test
mov
jg
test
icebp
xchg
mov
mov
inc
lea
dec
aam
call
call
stos
stos
or
sub
aaa
dec
fwait
pop
ror
ror
shrb
icebp
or
jnp
dec
and
jo
add
roll
loope
icebp
outsl
push
mov
xchg
fldt
addb
jo
and
and
ljmp
or
add
xchg
out
clc
mov
aam
cltd
mov
cmp
add
in
add
inc
hlt
aam
mov
sub
cld
mov
addr16
and
lock
and
add
inc
je
xor
push
xchg
pushf
pop
fildll
and
ja
stos
lock
add
clc
sub
cmp
cmp
fmuls
push
out
loopne
pushf
addb
sbb
and
aad
enter
add
push
jo
pusha
icebp
cwtl
push
sub
inc
les
add
addr16
adc
js
push
lcall
in
pop
xchg
jg
mov
out
dec
mov
adc
dec
pushf
test
xchg
xor
inc
xor
leave
cli
or
wbinvd
push
mov
movsb
add
dec
jl
adc
cwtl
mov
imul
lock
outsl
das
js
mov
push
divb
repnz
add
jnp
fsubs
ret
call
cwtl
fmul
xor
xor
lods
adc
hlt
add
inc
fs
lock
xlat
mov
in
shlb
ficomps
dec
fs
pop
fistpll
les
jb
fstps
cld
cmp
jp
test
pop
cwtl
add
test
call
and
mov
sbb
push
xorl
stos
xchg
ror
pusha
mov
loop
dec
sbb
je
loopne
mov
sbb
faddl
bound
nop
insl
fcmovbe
pop
dec
adc
pushl
inc
stos
push
push
ja
loope
push
sub
call
or
in
into
lods
nop
addb
add
mov
int3
fbld
cmp
xchg
push
and
xor
add
mov
and
mov
and
into
call
cmp
pushf
mov
add
mov
pop
movsb
in
dec
in
adc
adc
in
mov
add
rorb
add
daa
lret
xchg
lods
inc
mov
or
aam
jae
rolb
andl
punpckldq
xchg
jae
sub
call
lds
movsb
cmpb
sbb
add
pop
jo
xor
adc
imul
cmpsb
sbb
adc
lods
pop
or
outsl
test
jp
mov
icebp
sbb
test
add
negb
hlt
icebp
out
pop
ret
and
into
outsb
sub
js
test
mov
imul
lds
ljmp
cmp
mov
cltd
jecxz
sub
jp
cmp
or
push
sub
pop
jns
sbb
pop
cmp
or
adc
inc
out
sbb
sbb
dec
mov
dec
ss
icebp
fnstcw
jg
xor
das
lods
and
sub
andl
es
cmp
inc
popw
mov
mov
roll
loope
fwait
and
mov
scas
pusha
jp
push
push
xchg
pushf
xchg
in
out
cmp
cmpsl
fwait
dec
lahf
jo
sbb
mov
jbe
movsb
dec
mov
nop
push
inc
sbb
aam
or
imul
int3
sub
pop
adc
jge
inc
mov
adc
lods
test
jnp
flds
in
push
xchg
pop
mov
les
jne
pop
pop
mov
pop
js
adc
mov
fidivrs
add
call
sub
inc
sbb
dec
cs
mov
adc
call
xchg
add
push
dec
clc
dec
cs
push
lods
addb
dec
dec
push
and
adc
movsl
adc
xorb
into
cmpsb
fs
scas
rcrl
repz
cmp
mov
cld
leave
jg
clc
and
jp
xor
dec
add
call
imul
add
icebp
aam
call
push
pop
xadd
mov
addb
fwait
inc
inc
lods
insb
mov
and
or
adc
negb
orl
jecxz
stc
ja
std
movsl
icebp
jg
nop
pop
dec
js
or
into
add
jmp
push
xchg
pop
mov
insb
rorl
adcb
pusha
xor
out
pop
jns
mov
scas
inc
sub
cs
and
negl
mov
dec
mov
cmp
dec
pop
fs
and
rcl
xor
adc
and
leave
inc
pop
mov
shlb
repnz
sbb
js
jae
nop
add
stos
enter
lret
int
xorb
pop
std
and
call
adc
popl
in
sti
mov
test
js
sbb
or
and
les
xorb
lods
lahf
sbb
xchg
hlt
or
sub
push
js
mov
movsb
add
orb
jo
push
cwtl
lea
sarb
popl
adc
shl
test
jmp
inc
test
in
pop
rclb
adc
cld
hlt
inc
mov
cmp
out
cmp
idivb
imull
mov
mov
enter
shl
pop
pop
out
jo
push
inc
mov
outsl
or
sbbl
in
xchg
lret
dec
mov
inc
ja
xor
or
rorb
cmp
dec
pop
imul
das
fwait
je
loopne
cli
jns
sbb
xchg
mov
adc
orb
cs
add
ja
pushf
aas
or
sub
xor
and
aam
inc
add
adc
jb
lock
mov
xchg
movsb
push
adc
xchg
mov
movsl
dec
sbb
in
test
test
add
scas
jp
nop
or
cmp
addb
iret
out
loopne
loopne
add
dec
stos
or
daa
sbb
adc
xchg
out
adc
or
int3
pusha
and
mov
decb
cmp
lret
shrb
add
mov
xor
sti
add
in
lcall
xor
adc
inc
cmp
dec
mov
enter
inc
add
add
and
mov
lret
sbb
mov
sbbb
loope
jb
clc
ja
jecxz
shrl
faddl
jp
xchg
push
sti
fildll
mov
movsb
push
jnp
aam
push
sub
jge
in
jg
sub
sbb
stos
cmp
add
mov
pusha
aas
lock
lods
ds
jo
shlb
add
out
mov
shrl
push
movsl
xor
inc
es
and
out
add
inc
xchg
outsl
adc
push
imul
or
adc
in
pusha
push
mov
int3
out
add
dec
pop
insl
mov
hlt
je
mov
add
push
std
sub
xchg
js
stc
inc
enter
or
sahf
fistpl
inc
pop
add
rcrb
cmpsb
adc
and
rorl
cmp
jnp
push
jmp
inc
clc
test
mov
and
outsb
cmp
leave
rcrb
int3
popa
lret
pusha
cli
jno
jg
push
add
push
xchg
add
das
aad
dec
jo
icebp
cmp
pop
add
in
fdivr
pop
int
cmp
add
into
jne
and
mov
sbb
es
jmp
les
pusha
dec
or
or
mov
push
mov
cmp
dec
xchg
or
dec
scas
lods
sbb
es
test
leave
and
daa
mov
cltd
add
stos
adc
cmp
mov
leave
loop
cmp
fdivrl
sbb
jnp
notl
add
mov
push
es
adcb
fcompl
clc
mov
nop
mov
std
sahf
push
jl
sidtl
cmpb
jb
add
or
and
xor
mov
movsb
pop
fnop
mov
sarb
push
loopne
add
rorb
dec
or
loopne
ret
add
or
ja
jmp
pushf
cmp
lock
add
dec
mov
cld
les
loop
add
pop
push
lods
mov
out
sbb
cmp
fsubr
inc
push
push
adc
int3
pop
loope
cmp
inc
rcl
jle
push
dec
inc
or
lock
add
mov
push
push
aam
mov
test
nop
xchg
jo
cwtl
scas
adcb
mov
pusha
cmpsl
xchg
sub
mov
mov
mov
push
cwtl
pop
add
aaa
stc
ja
imul
aam
loope
repnz
aaa
push
loopne
dec
hlt
loope
push
pusha
mov
rcrb
scas
or
test
add
jl
xor
mov
leave
jg
mov
inc
dec
pop
xor
lods
push
mov
sbb
gs
sub
and
jmp
idivl
rorl
push
sbbb
ljmp
fs
dec
cmp
and
loop
xor
lret
sub
adc
or
cmpsl
push
aam
es
dec
loopne
mov
dec
loopne
xchg
addr16
cmpb
jnp
jge
and
orl
mov
mov
sub
add
icebp
hlt
push
fs
andb
dec
xchg
mov
add
pop
add
jnp
and
cmp
rolb
cmp
cmp
mov
add
xor
test
inc
cmpsl
jb
sbb
js
and
shlb
sti
mov
int3
pop
inc
sbb
dec
pop
mov
and
sarl
lcall
enter
add
and
repz
lea
dec
loope
xchg
iret
into
push
cmp
push
int
and
mov
inc
or
mov
sbbb
testl
scas
jp
pop
inc
jnp
push
rorb
lods
add
popf
xchg
mov
dec
push
movsb
dec
add
jge
clc
push
aad
jns
add
push
fsubs
add
fidivl
xor
test
inc
stos
mov
addr16
xor
xchg
lds
pushaw
out
mov
sub
rolb
mov
rcl
faddl
jno
add
nop
jnp
sub
push
pop
test
hlt
adc
shll
pop
scas
dec
int3
pop
inc
mov
inc
scas
cli
mov
dec
jnp
add
cmp
enter
add
lods
mov
rorb
or
and
add
in
lcall
jecxz
dec
mov
lods
cmpsl
dec
js
lods
cmp
and
jns
add
or
xor
mov
xor
fisubrs
jg
xor
inc
sti
outsb
pushf
mov
cmpsl
mov
jne
xor
and
cld
daa
push
js
and
int
nop
roll
and
inc
loopne
jle
and
sarb
insb
jl
xor
adc
loope
pop
stc
lock
daa
js
mov
dec
dec
loope
imul
mov
and
xor
je
pop
cmp
jl
vmovss
aad
lods
adc
imulb
jbe
int3
mov
addr16
sub
test
push
push
movsb
xchg
aas
xor
and
mov
icebp
out
add
push
shlb
ds
mov
loopne
lods
adcb
pop
jp
pop
sbb
scas
pop
mov
xlat
mulps
js
mov
add
cmpsb
scas
add
ds
iret
or
das
imul
mov
jae
std
rcrl
xchg
sbb
stos
cmp
sub
iret
fnstenv
add
ret
sbb
repz
pop
outsb
and
mov
jge
adc
xchg
sub
cs
dec
xchg
xor
mov
pop
xchg
mov
loop
negb
push
and
stos
jno
rcl
xor
js
rorb
adc
mov
mov
xchg
inc
jnp
xlat
push
hlt
pop
xchg
out
mov
mov
cmp
loopne
sub
sbb
adc
leave
adc
adc
out
push
add
push
pusha
std
sarl
jnp
pop
negl
mov
icebp
cmp
or
js,pn
sbb
iret
cmp
into
mov
icebp
je
xor
popa
fs
test
jb
xor
in
adc
scas
xchg
add
sbb
mov
push
xchg
jo
or
push
hlt
sbb
mov
shrb
mov
fisttps
enter
sub
mov
jnp
xchg
cld
dec
hlt
cmp
je
adc
dec
je
daa
pusha
cmp
lock
scas
and
or
sbb
push
loope
enter
xor
add
mov
adc
ljmp
pushf
sub
addb
inc
les
jbe
insl
clc
adc
sbb
les
into
incb
jne
lds
and
pop
xor
mov
push
arpl
xor
xor
or
pop
jmp
es
subl
add
cwtl
or
leave
aam
test
xor
or
fdivrs
insl
xchg
mov
cltd
lods
or
inc
out
adc
faddl
xchg
inc
lret
cld
inc
imul
insl
movsb
nop
mov
es
adc
test
pop
and
xor
aaa
inc
insb
xor
dec
jns
sub
notl
adc
sbb
and
dec
push
andb
push
jno
adc
in
or
mov
test
in
adc
pop
andl
and
push
or
inc
adc
dec
les
mov
mov
add
mov
cltd
xor
add
jno
and
add
xor
sbb
adc
stos
adc
or
flds
inc
inc
sub
xchg
and
push
mov
jne
or
sub
push
mov
dec
inc
test
lret
in
add
sub
les
scas
xchg
and
mov
mov
andl
mov
jae
push
mov
pop
inc
jo
mov
add
push
or
mov
push
adc
or
lahf
dec
mov
add
adc
or
lods
add
adc
xor
addr16
cmp
fmuls
push
aad
or
popa
fsubrp
cmp
scas
push
out
js
sub
ficoms
je
adc
sbb
push
lods
ret
repz
cmpsb
mov
push
dec
xor
mov
add
icebp
rolb
lds
pop
add
xchg
xor
jo
cmp
sub
nop
loopne
pop
cmp
xchg
daa
je
mov
push
xor
jg
mov
cmpb
push
jge
dec
scas
fdivp
mov
mov
mov
jb
and
add
mov
lods
popf
fldenv
dec
add
adcb
clc
xor
in
ret
pop
stc
mov
hlt
cld
fnstenv
sbb
jl
add
std
lcall
mov
sbb
adc
cmp
or
lods
push
out
out
loopne
in
std
mov
imul
js
lods
dec
lret
call
mov
int3
mov
pop
mov
test
mov
xor
pop
pop
and
xchg
sub
fs
in
jo
xchg
mov
add
fsts
les
cmp
mov
outsl
cmp
push
sub
pop
aad
test
rorb
and
push
add
push
lds
pop
mov
js
xor
push
loop
test
inc
js
cvtps2pi
stos
test
cld
sbb
or
jle
sbb
adcl
shl
push
in
add
push
mov
add
in
fsub
mov
or
xchg
add
stos
xchg
fisttpl
into
sbb
faddl
cwtl
jge
cmp
addl
fmull
adc
add
mov
int3
call
pop
decb
add
pop
and
dec
xchg
and
sub
add
mov
or
push
adc
or
addb
sahf
addr16
testl
adc
clc
pop
push
xor
push
cmc
adc
loop
inc
push
cmp
xor
jg
jnp
xchg
rolb
push
ret
pop
cmpsb
hlt
adc
sub
cmpsb
or
push
inc
adc
sbb
and
add
dec
leave
mov
scas
test
mov
mov
xchg
fcmovne
push
cmpb
lods
mov
sahf
push
shlb
dec
lds
js
mov
mov
call
movsb
push
das
fisubrs
pop
test
enter
push
mov
sbb
inc
and
call
lret
adc
dec
pop
cmp
insb
push
leave
dec
jg
sbb
mov
mul
btr
pop
sub
mov
sub
pop
mov
pop
cs
scas
and
into
push
inc
in
outsb
mov
mov
cmp
xor
mov
jp
add
jns
mov
movsb
sarl
add
leave
js
mov
cwtl
mov
inc
adcl
scas
cmpl
adc
pop
repz
and
ret
jg
jnp
hlt
or
adc
test
mov
pusha
scas
rorb
in
fmuls
mov
std
xor
clc
rol
cld
sbb
sbb
mov
mov
pop
and
pop
stc
jb
sub
mov
xchg
jb
mov
xor
sbb
int3
fiadds
or
lods
xlat
mov
pusha
jne
inc
test
and
inc
jle
int3
in
pusha
xor
mov
xor
push
lret
inc
mov
pop
movsb
call
add
push
shrb
mov
push
cmp
jnp
sub
and
dec
adc
adc
loopne
xchg
push
xor
mov
lret
test
mov
mov
call
scas
pop
shlb
fs
pop
dec
int
outsb
add
call
adc
mov
xor
lahf
cmpb
sbb
mov
ss
subl
repnz
pushf
xor
nop
lods
mov
mov
and
add
jne
dec
cld
ds
pop
movsl
inc
rorl
and
dec
jmp
je
js
add
pop
repz
and
insl
xor
sbb
outsl
ds
jecxz
dec
inc
pushf
dec
int3
push
or
insl
inc
add
add
nop
rol
push
lods
outsl
or
or
push
cwtl
rolb
pop
js
add
sub
leave
mov
sub
in
inc
or
push
inc
xchg
inc
add
push
push
mov
cli
push
mov
add
or
and
jp
mov
nop
lods
sbb
dec
nop
cmp
inc
les
push
sbb
jae
pop
fwait
push
add
insl
test
or
cmp
leave
arpl
cwtl
cli
add
mov
jl
or
xchg
hlt
pop
loop
jbe
jp
or
lret
jge
icebp
fcomip
adcl
out
and
add
mov
sahf
jbe
stc
lds
or
jp
add
push
in
fdivrl
or
and
push
shlb
cmpsl
sbb
andb
sbb
int3
andl
sub
das
stos
call
pop
addl
pop
mov
pusha
in
andb
adc
push
adc
adc
loopne
adc
add
adc
mov
and
loopne
push
push
lret
or
or
adc
jecxz
adc
and
and
add
sti
jle
popf
rolb
xor
mov
enter
jb
insb
push
pop
and
jbe
lods
push
aaa
jae
jo
stos
xchg
push
push
adc
xchg
mov
lock
inc
xor
sbb
mov
xchg
data16
jge
pop
sbb
and
fsubrs
xchg
addr16
stc
lret
jl
mov
int
mov
hlt
sub
mov
call
mov
and
lds
add
mov
adc
cs
sub
mov
rcrl
sub
and
add
mov
mov
outsl
loope
imul
aam
mov
jmp
out
enter
inc
adc
cmp
or
int
pop
pop
sbb
rcll
push
sub
push
enter
mov
scas
sub
les
jb
push
lods
imul
das
inc
mov
sbb
hlt
enter
nop
sub
add
pop
push
sub
call
sub
push
sub
push
xchg
push
movsb
pushf
push
sbb
push
in
sbb
mov
loopne
fs
out
aas
mov
pop
cmp
jmp
xor
pusha
mov
inc
mov
add
jns
sub
fmuls
test
movsb
inc
cmc
cltd
clc
xchg
sbb
pop
mov
rcll
xor
movsb
cltd
aas
add
leave
sbbb
add
in
stc
jg
aam
dec
mov
rclb
ljmp
jbe
add
push
adc
rolb
dec
fsubs
pop
jecxz
cs
fbstp
leave
add
fiadds
test
cmp
dec
and
xchg
and
and
sub
or
fs
add
jns
hlt
in
or
dec
pusha
and
xchg
dec
sti
mov
jge
pop
fisubrl
mov
outsb
sbb
test
lods
mov
test
push
dec
lcall
es
and
pop
xchg
aam
fs
and
dec
inc
mov
sbb
stos
lock
pop
sbb
in
jbe
add
or
mov
icebp
mov
cmp
add
xor
cld
cmp
cmp
arpl
iret
mov
dec
push
test
push
adcb
clc
dec
push
mov
or
fstpt
lret
cmp
adc
push
test
movsl
jno
adc
test
mov
add
movsl
pushf
aad
sbb
mov
add
lds
xchg
into
add
aaa
sbb
sub
ror
aas
ret
add
fildll
inc
fmull
dec
add
fcomps
mov
je
aam
xchg
movsb
out
add
repnz
lock
inc
jge
int3
shrb
loop
mov
adc
cmp
xor
sbb
dec
stc
mov
push
iret
test
int3
faddl
mov
pop
xchg
lock
in
call
mov
test
dec
cmpsl
sub
pushf
cmp
add
jge
test
movsb
ja
negb
scas
xor
add
stos
adc
xorb
xchg
mov
pop
rorb
sub
test
lret
gs
cmp
pusha
pop
push
add
push
mov
fs
aaa
add
add
mov
rcrb
rorb
out
sub
lock
dec
and
xchg
inc
mov
movsb
aam
adc
mov
enter
push
lret
jne
ds
sbb
pop
push
shrb
shrl
push
in
pop
inc
push
jmp
loopne
sbb
dec
xchg
clc
shlb
jo
ljmp
or
stos
add
clc
push
push
mov
sbb
push
in
dec
or
adcb
int3
or
adcl
add
xchg
pop
into
dec
shl
ds
add
mov
adc
std
push
add
pop
mov
imul
lahf
int3
and
cmp
mov
pusha
cmp
jnp
aas
iret
adc
std
add
pop
adc
enter
xchg
dec
jnp
adc
int
mov
mov
pop
incb
cmp
std
xor
mov
push
jmp
into
movsl
sbb
or
mov
or
movsb
jne
mov
dec
nop
adc
cmp
xchg
pop
pop
mov
movhps
or
pop
leave
jle
pop
aam
int3
cmp
or
jp
out
add
test
loope
add
jo
add
or
ljmp
xchg
std
cmp
sbb
jns
jmp
and
push
and
dec
popf
mov
mov
sbb
jp
inc
clc
test
andb
pop
or
ret
test
test
mov
or
test
daa
push
add
xor
sub
hlt
sahf
jge
cmp
add
repnz
std
add
sbb
jecxz
xchg
xchg
subb
int3
cli
fld
push
dec
ret
push
in
mov
test
mov
sbb
inc
mov
dec
loop
nop
fs
lahf
sub
popa
sbb
addr16
je
jl
xchg
into
insb
add
add
out
loopne
scas
dec
lds
pop
cmp
dec
xchg
call
pop
push
xor
and
push
int3
dec
mov
dec
cmp
addb
jae
push
fidivrl
in
enter
cld
adc
jo
ja
or
out
iret
pushf
add
or
push
add
xor
shrb
call
push
xor
adc
add
jmp
and
pop
es
mov
cmpb
mov
add
adc
sti
pop
roll
mov
stc
push
lea
or
or
or
std
sbb
lock
loopne
pop
inc
sbb
icebp
sub
sbb
jg
pop
or
loop
mov
add
and
push
scas
mov
cmpsl
jl
mov
mov
stc
rclb
movsb
lock
push
lock
outsb
mov
mov
or
mov
mov
enter
push
mov
inc
jecxz
fidivrl
call
dec
test
cmp
mov
lock
dec
test
aam
dec
orb
jp
cmp
jl
add
ds
add
xchg
xor
mov
das
add
adc
in
sarb
ffreep
dec
lods
and
jb
in
and
mov
xor
test
je
mov
add
icebp
xchg
sub
lds
add
xor
fistps
stos
inc
sbb
pop
dec
and
cwtl
jl
sbbb
xchg
test
pop
pushf
test
or
std
ret
push
jg
lock
dec
cld
arpl
add
vcvtps2pd
aad
shll
clc
loop
pusha
or
pop
pop
movsb
add
dec
pop
jno
imul
sbbb
xchg
add
push
mov
or
and
loopne
stos
sarb
mull
inc
and
outsl
xchg
aam
add
jno
or
orl
int
adc
and
sub
push
jo
fdivrl
and
push
fisttps
leave
cmp
test
in
incl
cmc
sbb
push
adc
xor
cs
lods
iret
call
mov
xor
or
jp
adc
jbe
jmp
ja
mov
int3
add
inc
ds
in
dec
aam
add
xor
push
mov
out
or
in
loopne
add
shlb
mov
mov
aam
lret
loop
and
loopne
add
outsl
sahf
dec
or
test
and
lods
call
pushf
add
mov
pusha
cmp
or
mov
repz
and
or
mov
subl
rcr
cmpsb
pop
addb
lods
mov
ret
add
jb
aam
jbe
add
mov
dec
pop
aaa
add
lcall
push
add
call
cmc
add
mov
or
mov
push
nop
mov
aam
scas
cmp
pop
orb
dec
ret
ss
loop
fmul
push
ds
mov
lret
leave
pop
and
aad
dec
lock
and
add
inc
mov
adc
sbb
xchg
cmp
adc
into
movsl
jbe
mov
jmp
sbb
dec
out
add
int3
sti
sbb
add
dec
or
xlat
push
mov
imul
lock
cwtl
fcomps
lret
add
mov
xchg
test
aad
es
js
add
int3
add
out
cmc
xor
sub
xor
cmp
imul
cli
nop
fs
mov
adc
mov
inc
add
mov
push
xor
movsb
pop
push
lahf
js
or
inc
inc
pusha
xor
jno
push
add
mov
mov
mov
sbb
mov
and
fmull
int3
aam
mov
test
jne
jg
sbb
add
pop
mov
and
pop
push
push
popf
xor
les
mov
cwtl
cs
push
std
dec
sbb
mov
dec
es
aam
xchg
call
aas
cmp
int3
ja
sarb
push
call
sub
add
stos
jg
fcompl
pop
les
sbb
mov
add
push
std
add
xor
cmp
repz
push
iret
pop
repnz
mov
in
test
push
int3
lods
jne
out
jl
cmc
or
fwait
mov
ljmp
push
fistpll
or
lcall
jno
or
adcb
mov
lret
int3
adcb
js
xor
and
fdivr
add
hlt
xchg
jbe
add
jno
lock
sbb
mov
cmp
repz
add
mov
inc
sbb
popf
add
jl
sub
idivl
jg
jae
enter
and
inc
sbb
cld
xor
adc
mov
or
pushf
jno
loopne
js
in
push
std
add
outsl
add
movsl
call
mov
add
js
and
sbb
call
sub
jp
adc
jbe
adc
test
repnz
sub
loope
xor
dec
aas
subb
aaa
fsubp
add
shll
popa
jp
dec
push
dec
cmp
add
cmp
pop
cmp
push
hlt
sbbl
mov
and
xor
and
add
pushl
aam
rcrl
cmpsb
repnz
inc
add
clc
out
aam
push
inc
mov
or
movsb
adc
clc
xor
mov
jo
movsb
sbb
ficoms
lret
push
icebp
stc
mov
fadds
ss
xchg
stos
push
jo
mov
std
xchg
cmp
sbb
push
adc
cmpsl
movsb
or
push
fiadds
and
pop
pushf
or
leave
jo
xchg
sub
mov
icebp
addr16
lods
rolb
fcomps
pop
nop
mov
push
add
insl
pop
fsubs
adc
popf
sub
shl
mov
outsb
mov
loope
push
addb
repz
jo
test
int3
sbb
orb
pop
out
insl
loopne
push
push
roll
dec
roll
je
jne
and
xor
movsl
xor
dec
mov
or
pop
add
mov
lahf
or
sbb
adc
imul
mov
punpckhwd
add
jae
inc
xor
and
stos
inc
pop
int3
adc
cld
pushf
add
mov
jne
xchg
pop
add
mov
lods
dec
dec
ret
push
aas
test
stos
xlat
lods
mov
jo
sbb
xchg
cmp
cmpsl
inc
xchg
or
or
or
rcll
enter
popf
es
sub
cmp
into
outsl
xor
sbb
or
rolb
jle
add
xchg
pop
std
add
call
xchg
push
inc
outsl
pop
mov
add
repz
outsb
add
popf
pop
dec
cld
mov
sbb
add
and
jmp
addr16
mov
cwtl
dec
push
roll
adc
test
xchg
add
leave
mov
pop
add
aaa
mov
sub
or
pop
les
and
lods
addr16
leave
push
hlt
lock
mov
pushf
pusha
push
movsl
sbb
pop
mov
jb
inc
add
jp,pt
movsl
sbb
pop
hlt
mov
add
jns
jno
loope
sahf
hlt
add
movsb
inc
fcoms
inc
loopne
dec
dec
shlb
mov
clc
jl
or
adc
lcall
scas
add
cli
or
std
xor
test
and
pop
nop
int
push
pop
rcrb
push
push
adc
sbb
mov
adc
jae
lcall
sub
jns
push
inc
test
daa
sub
loope
mov
aaa
dec
fadds
mov
jo
rol
jecxz
in
sbb
pushf
xorb
sub
xor
add
xchg
jl
xor
and
cmp
push
repnz
pusha
pusha
rcl
inc
mov
jnp
cltd
xor
outsb
add
clc
xor
pop
cwtl
mov
adc
adc
out
pop
sarb
sbb
aaa
lods
inc
dec
outsb
leave
xor
push
mov
fcoml
cmpsl
into
push
add
lods
sub
das
loop
sbb
pusha
mov
rclb
or
inc
xchg
sbb
inc
sbb
test
add
stos
call
cmp
add
hlt
xlat
mov
cwtl
sub
or
sbb
popa
push
pop
jmp
in
lret
ret
movsb
lcall
jmp
loop
pop
enter
aam
pop
mov
add
adc
fs
daa
mov
adc
and
mov
jb
add
call
push
cmpsl
loopne
add
push
dec
in
cmc
sbb
into
movsl
mov
or
mov
mov
mov
add
jns
push
dec
lret
xchg
xchg
xor
rolb
mov
cmpsl
call
test
pusha
xchg
test
add
and
scas
call
xchg
in
xlat
hlt
and
xor
jb
inc
rolb
jns
adc
rorl
loop
scas
dec
pusha
aam
mov
xchg
clc
jge
or
mov
dec
loop
adc
test
call
sbb
imul
lods
cmp
stos
mov
aam
jg
add
jno
or
dec
js
dec
mov
loopne
inc
add
xorb
test
push
jns
leave
pop
mov
sub
lcall
fbld
cmp
mov
int3
cmp
les
pop
test
enter
xchg
imul
test
inc
insb
stos
jl
push
jge
sbb
rcll
js
mov
sbb
or
int3
aam
cmp
add
jns
xor
sub
pop
test
lock
insb
popf
push
adcb
mov
outsb
xchg
push
push
jge
imul
add
rol
loop
sbb
mov
hlt
clc
push
and
fsubl
adc
mov
dec
loopne
push
hlt
adc
ficomps
xchg
mov
or
and
push
jmp
adc
push
shr
push
pushl
or
push
dec
mov
mov
cmc
stos
cmp
rolb
mov
fisubrs
xchg
xor
pop
cmpsb
loope
push
adc
mov
in
es
orb
outsb
mov
adc
loopne
int
jle
add
pop
std
xor
repnz
xchg
lret
mov
sarb
popa
mov
in
pop
mov
or
inc
rolb
inc
scas
loope
int3
pusha
push
xchg
pop
in
sub
add
test
movsb
sbb
insl
test
nop
dec
in
rcl
jb
xor
mov
sbb
push
mov
pop
xchg
jmp
dec
fistpll
in
and
inc
and
js
or
insb
leave
orl
xor
jge
jns
clc
dec
test
cwtl
dec
push
xor
cwtl
js
cmp
or
adc
mov
clc
aas
and
or
push
ftst
xchg
xchg
add
cld
lds
in
and
and
mov
cwtl
repz
stos
jl
xor
negl
lret
xor
xorb
mov
aam
mov
push
or
jne
pop
shlb
push
xchg
adc
lock
xor
dec
push
sub
nop
scas
mov
push
ljmp
mov
mov
loopne
fcoms
inc
push
adc
push
cmpb
add
sbb
movsb
cli
cmp
daa
mov
xlat
mov
mov
xor
and
and
and
shlb
jge
hlt
addb
pop
sbb
addl
xchg
mov
pop
jl
push
cmp
hlt
adc
orb
test
sub
and
out
push
mov
test
cmp
or
add
add
rcr
jno
adc
mov
cmp
sbb
and
nop
lret
dec
mov
pop
loop
in
sub
dec
mov
loopne
jne
and
mov
movsb
push
sbb
and
nop
adc
add
addr16
fidivrs
pop
je
and
int3
sbb
xor
mov
daa
pop
ret
or
mov
add
sub
scas
adc
insb
mov
iret
add
rorb
jecxz
insb
add
xor
add
rcr
shl
in
aaa
jge
xrelease
inc
cld
cwtl
jg
push
shll
adc
lahf
xorb
in
repz
ds
bound
loope
je
dec
sub
dec
or
out
insl
mov
xor
repnz
push
dec
xchg
xchg
or
jp
sbb
pop
adc
loopne
jp
or
sbb
cmp
dec
movsb
mov
test
or
scas
adc
fmul
dec
test
loopne
movsb
pop
fnstcw
popf
adc
std
add
out
xchg
nop
push
dec
add
mov
movsl
call
mov
jo
adc
add
jl
pushf
mov
dec
ret
adc
lods
and
mov
fdivp
js
push
push
or
adc
cmovl
ret
push
pop
sbb
imul
jo
xchg
jge,pn
fildl
je
add
ret
cmpsl
sub
pop
mov
mov
lods
lahf
orb
push
enter
push
movsb
scas
mov
cwtl
cmp
outsl
les
adc
pmullw
out
add
loop
fs
jp
pop
add
cmpsb
gs
cli
add
add
subb
lock
ljmp
sub
je
bswap
incb
jg
lods
mov
loop
imul
ret
lret
adc
adc
xor
pop
leave
or
xorl
add
incb
pop
scas
rorb
sbb
push
sbb
das
hlt
and
add
xchg
cmpsl
loop
outsl
xorl
iret
call
cmpb
data16
mov
add
pop
test
or
sub
push
and
js
add
jl
adc
cli
xchg
cwtl
jno
subl
ja
loop
xor
jb
loope
orl
and
sbb
push
add
les
rcll
scas
andl
jecxz
add
fistps
cs
inc
jecxz
aad
adc
jg
or
pop
test
js
mov
popa
pop
jae
add
and
ret
cmovs
or
add
mov
push
dec
or
add
mov
aad
test
adc
push
mov
add
lcall
jl
int
gs
mov
ljmp
je
repnz
dec
adc
push
or
sub
jnp
or
sbb
lds
add
test
testb
sub
adc
xorl
jmp
add
rsm
xchg
in
and
mov
sbb
push
push
ror
add
lods
adc
xchg
insb
add
in
or
roll
inc
imul
ds
in
xor
add
aam
out
cmp
cs
pop
add
and
sbb
popa
loopne
adc
lock
stos
and
cmp
dec
push
pop
shlb
jecxz
inc
and
mov
jg
stos
and
loop
dec
sbb
stc
mov
mov
cmp
js
jno
mov
leave
fadds
orl
push
add
adc
jmp
scas
fwait
pop
movsb
mov
sub
cmp
sbb
adc
test
insb
clc
cmp
dec
and
jmp
add
fldl
add
ret
cmp
push
xor
dec
pusha
and
lock
xor
adc
jg
into
sbb
insb
and
or
mov
or
add
lods
and
xor
jne
adc
push
add
dec
repz
sahf
test
js
and
jb
adc
inc
cwtl
loope
test
inc
xor
sbb
fisubrs
pop
and
je
add
mov
and
mov
mov
daa
and
add
mov
or
test
xor
cmpb
in
icebp
and
outsb
xor
mov
insb
test
xor
in
add
enter
data16
mov
adc
ret
shll
mov
sbb
lret
xlat
dec
test
or
cmpsl
clc
pop
push
inc
fidivs
sahf
cmpb
adc
sub
mov
fcmovu
std
into
ljmp
mov
fcmovnb
bound
aas
mov
fucomp
inc
xor
cmpsb
xor
xor
adc
int
ss
lock
pop
sub
push
mov
mov
dec
add
inc
sub
jge
push
mov
or
inc
and
movsb
xchg
ljmp
test
cmp
adc
popa
mov
aaa
xor
lock
mov
fsubl
nop
and
cmpsl
lock
mov
dec
or
test
jae
fs
stos
cmp
add
popl
sbb
ds
mov
hlt
mov
fadds
fs
adcb
subb
js
and
repnz
push
add
sbb
test
dec
cmc
cmp
inc
rorb
fs
imul
pushf
sbb
dec
mov
add
ds
xorl
aas
pop
aad
cld
xchg
jle
test
mov
jo
iret
in
daa
add
cmpsb
or
test
loope
mov
xchg
add
jp
sbb
and
pop
and
mov
imull
rorb
xor
mov
incl
jo
fcoms
jae
xor
and
nop
addl
cmp
add
aam
mov
sbb
and
mov
fcomps
jecxz
push
mov
jo
cmp
dec
test
or
mov
and
push
xor
testb
and
test
or
lods
lds
pop
es
or
inc
mov
sbb
push
cmpsb
pop
test
push
int3
jns
push
cmp
fmull
pop
mov
jl
andb
sti
das
jb
cmpsb
imul
stc
addl
test
cmp
les
sub
xor
fimull
cli
and
pop
xor
add
pusha
inc
jmp
nop
jo
jle
dec
adc
mov
or
fs
cltd
push
sbb
in
popf
ret
push
add
lods
pop
jle
int3
test
in
ret
push
sub
enter
sbb
add
daa
cld
leave
addb
dec
lods
mov
data16
mov
pushf
test
dec
mov
add
nop
loopne
and
sahf
mov
aas
mov
enter
es
repz
xchg
int3
xchg
push
inc
mov
incb
lock
add
lret
cwtl
pop
adc
clc
and
and
inc
aam
cwtl
fmull
lea
cltd
ljmp
enter
mov
push
fsubs
mov
sarb
test
or
test
pop
push
inc
or
mov
gs
outsl
mov
insb
add
repnz
add
iret
push
add
loop
mov
shr
shll
mov
jecxz
xor
and
incl
jb
dec
sub
pop
in
or
in
xor
xor
test
xlat
test
jno
js
or
adc
mov
in
and
repz
shl
add
xchg
xchg
les
pop
push
ret
cwtl
mov
outsl
out
pusha
push
repnz
rclb
add
mov
jb
add
in
sub
repz
mov
pop
or
adc
ja
add
inc
pop
nop
aam
test
mov
lock
dec
inc
xor
push
packssdw
popa
std
js
adc
jns
pop
mov
icebp
add
nop
xor
loope
pop
mov
push
stc
lods
addb
stos
sub
push
jmp
pop
and
push
inc
push
sub
cmpsl
outsb
cmp
js
loopne
js
nop
adc
call
stos
xor
mov
mov
add
imul
mov
xchg
inc
or
cmpsl
jp
pop
jnp
xlat
lock
imul
mov
lcall
movsl
add
nop
cmpsl
mov
orl
pop
clc
repnz
jne
mov
adc
and
sub
xchg
ja
inc
arpl
scas
push
call
loope
movsl
inc
lods
insb
push
fs
add
in
lock
add
mov
shr
imul
xchg
xlat
shlb
insb
mov
sbb
loopne
add
sbb
stc
mov
out
mov
sbb
pop
sbb
icebp
add
jecxz
xor
push
push
mov
xor
dec
cmp
pushf
add
movsl
test
arpl
dec
add
mov
jo
pop
inc
or
mov
nop
add
int
mov
into
xor
adc
fadds
das
pop
add
test
arpl
js
mov
sub
pusha
cmp
call
sbb
daa
sti
xlat
loopne
enter
lods
cld
add
push
repz
sahf
roll
xor
stos
pop
out
adc
cwtl
add
jge
lret
loope
sbb
pop
add
inc
add
push
out
xchg
or
adc
pop
mov
fs
inc
or
jmp
adc
push
xor
loopne
in
test
in
mov
add
push
jb
xor
js
rolb
and
jp
adc
ret
xchg
add
mov
fsubs
dec
loope
lea
scas
sbb
sbb
xor
dec
push
mov
pop
add
mov
nop
hlt
loop
out
fcom
xchg
shll
cmpsl
hlt
xor
pop
loope
nop
fcomps
or
xchg
int3
cmp
sub
pusha
inc
sub
repz
xor
sbb
or
xlat
aas
dec
jge
lods
fs
pop
fiaddl
push
inc
addr16
and
movsl
sub
js
jbe
push
mov
mov
cs
aad
inc
cwtl
in
andb
ss
jnp
or
mov
test
mov
test
and
sub
into
fwait
cwtl
shll
in
nop
and
fsubs
pop
mov
inc
nop
cmp
dec
fcoms
mov
out
jl
push
decb
ss
and
loop
mov
push
mov
cmp
shl
loop
pop
sbb
sub
inc
lock
and
insb
mov
pusha
or
pop
add
movhps
fdecstp
dec
jnp
mov
pusha
jecxz
or
into
cmp
leave
and
mov
cld
and
push
lret
inc
cli
mov
mov
mov
fsubs
push
or
fstpt
cs
es
into
js
stos
test
cli
xchg
inc
add
mov
push
xor
xchg
js
adc
push
mov
xchg
ret
shr
rcll
std
push
xor
mov
outsl
and
fsubs
imul
sbb
sub
cmpsl
sbb
test
imul
shll
and
adc
mov
test
adc
mov
jae
test
and
clc
sbb
ret
sub
enter
xor
lods
lods
add
stos
fisubl
xor
xor
cmp
mov
hlt
incl
rcll
dec
sub
icebp
nop
add
mov
dec
dec
lods
push
lds
daa
sbb
and
push
fildl
xchg
insb
lcall
sub
pop
jno
add
imul
das
or
sbb
and
in
cs
inc
es
pusha
sbb
test
mov
js
push
out
lods
shr
sub
movsl
pusha
ss
andb
xor
jle
sub
add
lods
adc
mov
cmc
adc
push
loope
inc
add
cmp
xor
push
add
in
add
mov
xchg
jmp
mov
push
in
scas
pop
add
cmpsl
aaa
jne
js
cmp
add
ret
cmp
inc
xorl
mov
sti
and
add
stc
cld
test
add
mov
xor
mov
shlb
ja
jge
clc
add
push
jl
mov
mov
mov
in
xchg
fadd
push
fcmovu
lock
and
test
clc
pop
push
roll
cmpsl
xchg
inc
push
in
subb
cli
les
push
sbbl
mov
mov
in
int
and
outsb
add
shlb
cltd
sub
ret
xchg
test
adcl
mov
mov
push
pushf
xchg
arpl
rolb
das
mov
sub
mov
and
add
xchg
call
adc
aaa
sbbl
cmpb
stos
cwtl
lock
nop
push
xor
push
shr
mov
cmpb
jg
or
gs
cmp
loope
movaps
mov
outsl
test
mov
inc
loop
xor
fwait
jl
in
ret
shlb
xchg
add
xchg
push
mov
add
test
dec
push
outsb
adc
mov
jge
cwtl
mov
sbb
loop
je
pusha
ret
mov
test
inc
sarb
lcall
mov
subl
ljmp
pop
ds
scas
add
popa
mov
push
mov
xchg
js
faddl
sub
fsubr
sub
or
xor
lret
jo
add
dec
mov
imul
jnp
add
aaa
ljmp
fcmovnbe
fwait
sbb
adc
rorb
or
mov
cmp
hlt
cli
leave
add
cwtl
pusha
push
sbb
cmp
adc
call
mov
fstpt
mov
xor
and
xor
mov
pop
jo
mov
js
jmp
cmp
test
xor
adc
subl
in
dec
sub
pop
loope
mov
jl
test
mov
xor
jmp
movsb
nop
test
cmp
rcr
test
jg
icebp
fisttps
xorb
xlat
jns
cmpl
aaa
and
mov
cmpsl
loop
je
testl
adcl
shrl
sub
add
fwait
dec
idivb
dec
jmp
xor
xchg
and
or
cmpsl
inc
rcrl
adc
test
add
fsubrl
mov
add
push
pop
xchg
cld
add
xor
in
xor
loop
jl
xor
mov
rclb
shr
jo
lock
mov
mov
xor
and
jle
aad
test
xor
cmp
or
lret
mov
sarb
dec
mov
or
int3
loop
push
add
in
lcall
test
mov
mov
inc
inc
xchg
sub
repz
adc
adc
mov
and
inc
mov
nop
adcl
loop
and
and
addl
fimuls
loope
mov
daa
add
sub
ret
jnp
push
push
popa
clc
int3
mov
orl
dec
add
aaa
mov
pop
mov
mov
add
and
sub
cwtl
mov
faddl
cmp
bound
xchg
push
and
xchg
in
cmp
jno
lea
test
mov
loopne
test
pop
inc
add
pop
sub
clc
or
push
jge
add
sbb
jno
cmp
add
mov
push
xchg
ret
scas
sbb
enter
xor
add
sub
fcompl
dec
add
push
fldt
mov
in
mov
sbb
add
incl
or
test
add
frstor
add
rclb
lds
adc
push
add
pop
dec
push
sbb
push
mov
add
push
or
jmp
mov
add
xor
jmp
mov
add
pop
push
in
add
ret
mov
push
push
xorl
mov
jmp
sbb
mov
loop
rcrb
add
inc
push
mov
sar
push
ljmp
ja
cmc
popa
and
decl
in
or
sub
jmp
je
repz
insb
adc
or
pop
incb
xor
in
lock
jmp
cmp
adc
mov
jo
adc
pop
and
jnp
lret
popf
ljmp
sub
stos
lea
mov
shll
aas
js
or
sub
out
lds
and
stos
xor
mov
repnz
cwtl
sbb
orl
mov
mov
cmp
fiadds
test
aas
jle
data16
inc
shll
mov
lock
xchg
stc
lea
xor
jp
push
or
xorl
push
mov
popa
xchg
or
add
mov
fsts
shlb
dec
test
jnp
xor
mov
lea
rol
negb
out
or
and
rorb
sub
data16
out
xor
in
rcrl
mov
inc
ja
aas
into
idivl
pop
loopne
iret
sub
jmp
cmpsb
xchg
xchg
cmpb
inc
sbb
push
push
cmc
inc
and
testl
stos
dec
daa
sub
pop
push
into
pop
negl
adc
push
xchg
popa
add
stc
scas
adc
aad
jb
test
add
add
add
addl
add
fists
test
or
int3
add
add
jmp
pop
push
in
nop
or
add
or
xor
pop
test
test
out
sbb
orb
into
cmp
cltd
xlat
mov
cmp
and
fstpt
movsb
mul
rcr
xor
push
outsb
decb
add
push
sub
or
aad
cmp
or
in
adcb
push
pop
rorl
pop
pop
and
jmp
nop
rorl
adc
or
popa
sbb
and
jbe
frstor
iret
fnsave
or
lret
add
pop
scas
pop
add
dec
jmp
cmc
out
cwtl
adc
fnstenv
out
push
xchg
out
test
or
add
dec
sbb
add
push
fbld
adc
sub
popa
sbb
jl
pop
rcll
inc
cmp
pop
sub
nop
sub
repnz
es
pop
shll
outsl
sti
mov
push
rcrb
cmp
push
xchg
imul
push
or
or
pop
mov
idivl
dec
mov
sbb
or
out
loopne
pusha
es
mov
xchg
or
adc
test
dec
xchg
adc
in
arpl
jne
dec
bound
xchg
pop
mov
mov
ret
leave
rolb
or
xor
scas
mov
pop
movzbw
adc
ficompl
pushl
pop
stos
imulb
pop
dec
testl
ds
xor
mov
pop
mov
jmp
mov
lret
push
or
sbb
sahf
addr16
xchg
push
and
fildl
out
mov
mov
neg
xor
cmpxchg
jns
sarb
js
or
lea
push
pop
lcall
repnz
movsl
adc
sar
mov
jnp
mov
mov
inc
adc
cltd
sarb
ds
popa
cmp
sub
pop
xlat
hlt
inc
pusha
dec
mov
dec
pop
adc
in
lds
cmp
repnz
cwtl
inc
shl
rcll
and
ret
pop
loope
xchg
inc
dec
inc
or
pop
add
mov
pop
jg
mov
ss
scas
cmp
mov
cld
movsl
pop
ret
mov
dec
mov
inc
or
or
pop
xchg
push
mov
jmp
es
addr16
fcoms
mov
inc
pop
jle
iret
mov
mov
cs
add
add
clc
dec
mov
ret
add
icebp
cs
pop
aaa
and
mov
dec
lods
xor
dec
imul
xchg
pusha
push
jmp
jbe
dec
pop
dec
pop
inc
push
ss
push
mov
test
jge
pop
cwtl
push
cmp
and
stos
in
dec
frstor
mov
pop
push
mov
and
pop
inc
add
fsubrs
leave
add
addr16
jmp
inc
add
and
in
and
add
or
int
xor
sbb
sbb
cmp
adc
xor
adc
insl
rorb
add
movsb
pop
adc
loopne
and
adc
mov
xorb
push
mov
sub
sub
adc
add
push
subb
cmp
enter
lret
jge
push
add
push
inc
ljmp
lret
ss
push
jb
inc
data16
add
mov
pop
xchg
add
sbb
mov
frstor
sbb
sbb
mul
push
cmp
hlt
cltd
dec
mov
neg
xchg
jmp
test
and
sbb
ret
adc
xchg
jl
and
add
mov
jnp
push
pop
adc
jo
xchg
push
pusha
scas
je
or
jmp
mov
es
push
and
out
jns
loopne
push
add
pop
sub
xor
push
or
fs
dec
push
mov
adcl
repnz
pop
pop
adc
stc
dec
fcoms
pop
xchg
and
adc
roll
xor
jp
popa
mov
push
and
jb
adc
lar
inc
dec
pop
gs
or
aaa
dec
pop
or
and
pop
negb
or
push
cmpsl
mov
or
add
jno
sub
sub
lock
pop
dec
notl
pop
ficoml
push
pop
pop
or
out
int3
sub
push
mov
je
add
mov
xchg
andb
mov
sub
adc
or
out
jns
jmp
negl
add
lock
xor
cmc
add
xorb
cwtl
aaa
or
or
jge
dec
in
lea
mov
xchg
pop
or
or
xchg
in
adc
lret
and
push
add
xor
add
fs
cs
pop
adc
int
mov
lret
ljmp
cli
sub
push
push
sbb
and
pop
push
push
pop
fs
pop
lea
inc
imul
or
aas
cli
mov
add
inc
shr
sarb
mov
mov
je
pop
xchg
add
push
inc
mov
sbb
add
in
and
les
push
or
bnd
not
add
shrb
mov
jge
dec
cli
xchg
sub
sbb
push
pop
and
loope
das
and
insb
nop
es
and
mov
xor
orl
jmp
out
arpl
jb
out
or
xor
stos
jge
sub
ljmp
out
les
insl
jo
mov
inc
in
sarl
add
and
and
adc
pop
pop
sar
pop
jo
ljmp
lret
movsb
or
xorl
fdivp
shrl
cli
push
xor
inc
pop
ret
es
data16
push
push
pusha
add
lret
pop
sub
pop
cmp
xor
popl
mov
or
cmp
stos
sbb
push
lods
jno
rol
add
mov
and
stc
sahf
pop
and
push
push
adc
pop
movb
shrl
add
jo
inc
rorl
mov
push
dec
test
repz
sbb
sub
pop
cmpsb
or
add
push
or
pop
sbb
mov
addr16
fldcw
add
popa
jns
inc
repnz
pop
xor
dec
add
inc
or
je
aas
xor
in
cmp
xorb
cli
jns
das
mov
pop
fs
mov
mov
inc
push
cmp
xor
mov
jns
mov
dec
or
pop
add
mov
imul
out
push
in
dec
out
push
push
shll
jmp
sbb
and
je
mov
add
mov
or
sub
jmp
xor
sarb
adc
movsb
jb
popa
push
add
stos
jmp
xchg
push
push
mov
sti
fldcw
subb
sub
test
ss
mov
notb
shl
les
cltd
cmpsb
xchg
add
cmp
bsf
pop
inc
sub
or
push
fcom
adc
push
call
pop
or
inc
pop
notl
ljmp
adc
or
jmp
xor
lret
add
adcb
imul
jl
cmp
add
sub
cmpsl
add
pop
mov
js
aaa
inc
mov
xor
stos
jns
repnz
movsb
fldenv
jmp
ss
cltd
jo
orl
xor
daa
je
daa
dec
add
or
pop
mov
add
or
sub
addr16
ds
lock
je
sbb
call
sub
mov
dec
pusha
or
int3
aam
stc
sub
cmp
sbb
popa
adc
sub
pop
not
shl
inc
loope
pop
cmp
xorl
int3
loop
mov
aaa
sub
mov
pop
jbe
pop
add
mov
xor
pop
push
movb
fistl
sub
jl
jmp
jo
rolb
mov
dec
ljmp
pop
shr
neg
jno
daa
sbb
pushf
push
sahf
ds
jne
sbb
pop
sub
add
pop
mov
jmp
xor
add
rorb
jp
or
push
mov
je
and
movsb
xchg
add
repz
mov
pop
xor
add
xor
arpl
jbe
ds
mov
and
popa
inc
add
rol
sub
lret
sub
idiv
mov
cmpb
mov
sbb
rclb
push
push
fdivrl
inc
add
loopne
add
clc
jge
iret
mov
pushf
jmp
stos
leave
movsb
addr16
out
adc
sub
xchg
xor
lock
push
jp
es
addb
dec
testl
pop
jmp
cmpsl
loope
add
or
pop
add
pop
push
push
pop
adc
or
sub
push
popa
cwtl
mov
sbb
inc
pop
xor
dec
mov
loop
je
xor
add
mov
or
sbb
icebp
add
pop
add
mov
rolb
xchg
ficoms
push
jecxz
inc
cmp
or
fiaddl
or
push
xor
mov
push
add
cmp
shr
push
gs
mov
xor
cld
fbstp
jbe
dec
adc
cs
mov
jge
adc
cwtl
jmp
xor
hlt
xchg
xor
xor
or
sub
popf
test
push
aad
xchg
loopne
cld
mov
insb
xor
sub
inc
mov
test
jmp
push
mov
mov
ret
push
add
lahf
pop
test
pop
retw
dec
sbb
enter
mov
outsb
popf
mov
xor
mov
cli
sbb
push
mov
daa
mov
add
xchg
jno
icebp
roll
sbb
sub
mov
dec
xchg
test
rclb
outsl
std
add
cmp
xlat
jmp
add
sub
and
xchg
addr16
sub
jmp
scas
mov
adc
pop
add
aaa
jmp
cmpb
lret
jl
push
jmp
iret
test
adc
nop
cmp
xchg
dec
xor
ficoml
in
mov
sub
mov
inc
pop
sbb
std
jno
mov
or
out
xchg
rol
fists
pop
cmpl
jp
sub
fldl
loope
or
dec
cmp
int3
lcall
out
push
or
mov
cli
pop
and
inc
es
or
pop
jecxz
shl
jne
sub
dec
push
mov
jae
fucomi
or
popf
iret
gs
pop
jns
bswap
imulb
pop
sub
cmp
add
push
gs
cs
dec
shrl
sub
shlb
out
sub
dec
sbb
roll
fstps
jmp
pop
or
and
repnz
and
push
dec
sub
mov
dec
ret
subb
sarl
repz
pop
pop
xor
jmp
sub
add
or
jmp
or
rorl
lcall
fsubrs
sub
clc
sbb
add
leave
cmp
in
cmp
push
push
xor
mov
pop
xor
jmp
xor
lret
jo
mov
mov
aam
cs
mov
movsb
lret
pop
sub
ret
mov
stos
nop
icebp
dec
cmp
dec
shl
bnd
cs
mov
ds
inc
add
insb
ret
cmp
pop
add
loope
adc
dec
add
subb
jb
sbb
sub
aaa
dec
inc
test
push
aad
xor
fcmovb
push
mov
mov
sub
add
stos
sub
outsl
shll
inc
and
cmpsl
dec
int
fisubrl
cltd
sub
shl
pushl
test
mov
mov
lds
jb
or
inc
and
jp
test
cmp
aas
inc
mov
inc
add
incb
shlb
nop
add
insb
inc
rorb
lret
call
inc
jns
cmpsb
mov
push
scas
or
push
dec
repz
dec
cmp
mov
push
or
push
adc
js
inc
add
xor
push
jmp
add
pop
sub
sub
ret
sbb
pop
xchg
mov
rcrl
mov
lret
sub
adcl
and
inc
dec
sub
sbb
rcrl
sub
xchg
push
mov
and
ret
in
test
inc
movsb
jg
pop
pop
push
dec
add
cmp
and
into
push
add
pusha
pop
enter
into
push
in
push
adc
out
add
loop
jmp
ret
xor
rorl
jmp
int3
pushf
or
push
lret
fucomp
inc
jmp
add
sub
xor
repz
lds
cmpsb
cmp
push
lret
jmp
xor
cmc
mov
adc
inc
mov
lret
cmpsl
cmpsl
push
aaa
stc
rcrl
je
scas
jmp
outsb
addr16
ja
adc
adc
mov
push
aaa
jne
adc
dec
cmpsb
pop
add
dec
in
inc
sub
imul
adc
sti
sbb
push
inc
inc
jmp
jnp
in
ss
mov
add
ret
mov
lahf
jge
imul
scas
cmp
mov
nop
test
inc
push
mov
adc
push
mov
pop
testb
xchg
sub
and
or
jmp
loope
push
lock
push
pop
pop
shr
fidivrl
in
or
mov
push
push
push
into
popf
cmpl
ss
pop
xor
push
les
stos
inc
add
shl
inc
mov
jp
ror
dec
sbb
xorb
cmp
popf
jmp
adc
inc
enter
add
jl
push
pusha
inc
loopne
add
sbb
mov
rcrl
rcr
loopne
loop
adc
xchg
dec
hlt
add
adc
cli
dec
mov
fs
cmpb
ret
or
pop
push
stos
adc
lret
in
xchg
xchg
mov
lock
dec
mov
mov
roll
push
and
xor
out
add
jo
sbb
sub
test
dec
adc
mov
cmpb
lds
fisttps
mov
out
test
mov
or
xor
adc
not
jmp
into
pop
js
push
shr
ss
aas
mov
imul
sub
push
sub
pusha
push
sub
incb
sti
stos
jg
push
mov
shll
cs
mov
je
add
outsb
sub
add
sbb
pop
dec
or
daa
nop
in
ss
or
cltd
mov
cld
pop
leave
push
int3
outsl
mov
lret
jb
mov
push
roll
pop
or
filds
add
nop
push
push
repnz
mov
xor
orl
aaa
rorl
mov
arpl
xor
add
mov
or
inc
mul
pusha
add
fs
xor
mov
inc
inc
adc
idiv
dec
pop
addr16
or
dec
pop
mov
mov
or
fisubrl
aas
fwait
subl
shlb
or
pusha
add
or
or
sub
cs
mov
popa
movzbl
das
pop
push
lret
push
loopne
pusha
mov
jmp
mov
imul
mov
xchg
pop
pusha
push
and
or
adc
out
repnz
out
mov
mov
pop
cld
fucomi
xchg
xorb
pop
fs
push
lods
in
push
pop
hlt
jmp
rcrl
sbb
idivl
adc
add
aas
push
or
and
es
mov
jo
add
outsl
dec
jbe
mov
mov
adc
aaa
lcall
xchg
inc
push
addr16
mov
cmp
jbe
enter
call
inc
lods
mov
inc
xor
sub
jmp
cs
xchg
cmpsl
pop
test
mov
dec
insl
or
adc
sub
mov
pop
dec
cmpsb
ljmp
adc
lods
lret
push
or
shr
shl
dec
in
jno
shrb
imul
popf
stos
js
fadd
out
or
inc
xchg
leave
add
cmp
mov
pop
push
push
and
adc
adc
fistpl
or
sub
pop
mov
mov
xchg
add
clc
sub
push
pop
cmp
jmp
xchg
addl
xlat
sub
cmp
dec
gs
pop
push
outsb
add
ret
sub
jecxz
enter
mov
push
push
sbb
add
sub
mov
mov
sub
cli
repnz
pusha
pop
adcb
rclb
aad
addl
cltd
push
jg
and
push
and
jbe
dec
inc
andl
push
jmp
mov
dec
ret
push
push
adc
push
mov
pop
add
imul
sub
mov
mov
ror
push
lds
xorb
nop
hlt
and
cmpsb
adc
add
addr16
outsb
sbb
sub
neg
add
add
jecxz
je
add
aad
inc
and
mov
or
data16
xor
mov
jbe
es
lock
repz
sub
out
lcall
sub
iret
inc
cmc
sub
and
pop
in
dec
into
mov
popa
sub
jmp
and
xchg
test
or
add
xor
int
xor
sub
dec
and
into
es
pusha
out
imul
pop
or
xor
sbb
test
push
mov
pop
inc
xor
cmpsl
dec
sub
and
jb
stos
daa
bsr
cwtl
ror
jns
push
add
jne
mov
inc
jge
sub
mov
sub
sub
shr
mov
pop
rsqrtps
and
aaa
inc
mov
push
inc
sbb
xchg
or
xor
bound
loope
jmp
nop
pop
mov
add
repnz
addl
inc
jmp
mov
push
pop
jo
int
shr
sbb
xor
pop
ljmp
jmp
pop
jno
repz
adc
je
test
cmc
mov
fs
std
pop
enter
repnz
xlat
pop
shl
add
les
insl
or
std
pop
push
out
and
pop
xchg
adc
lds
add
sub
repz
gs
int3
dec
int
out
pop
loop
jns
pop
mov
and
and
pop
push
push
pop
test
push
shlb
pusha
xchg
xor
je
scas
add
push
js
mov
dec
and
adc
add
fnstsw
xor
mov
pop
sbb
or
mov
addb
pop
and
addl
jl
leave
add
pop
mov
cmp
imul
mov
pusha
mov
add
sub
loop
lret
push
mov
loope
cld
cmc
push
aas
neg
mov
jmp
loopne
loop
mov
add
lds
push
or
stc
sbb
pop
xlat
cmpsl
inc
hlt
xor
es
jo
cmpsl
das
pusha
test
inc
jl
mov
loopne
push
fisubs
sbb
inc
rcrb
xor
loop
das
add
js
cli
movsb
cmp
lcall
jle
call
jns
ret
add
stos
push
repnz
inc
es
orb
into
lea
mov
inc
adcb
call
xor
sbb
imul
in
adc
mov
or
mov
hlt
pop
inc
les
sbb
ret
jmp
dec
dec
add
cmp
pop
jmp
xor
mov
inc
es
inc
push
add
and
dec
cmp
and
or
ljmp
push
iret
adc
aas
add
pop
inc
cld
xchg
cmp
push
mov
gs
gs
invd
pop
das
iret
or
xor
adc
rol
jmp
jl
cmpsb
sub
je
je
xchg
push
cli
push
mov
mov
or
inc
clc
dec
or
ljmp
jmp
mov
pop
add
sbb
xor
aad
cmp
and
push
sahf
or
inc
pop
pop
add
cwtl
push
add
es
mov
mov
add
sbbb
cli
ds
jns
cmp
xor
dec
movsb
xchg
out
iret
les
xchg
xchg
add
fcompl
pop
sub
lock
pop
xor
or
cwtl
into
pusha
int
je
test
rolb
xchg
cmpsb
es
mov
daa
pop
mov
or
out
xor
inc
pop
out
mov
pop
les
test
sbb
jo
shlb
fsubs
push
xor
fsts
pop
fs
pop
cmpb
mov
ret
je
fs
mov
mov
or
or
lock
jb
adc
inc
or
xchg
jns
mov
push
or
ds
jb
cmp
push
addb
cld
rorb
loope
cli
lret
push
adc
dec
dec
pushf
adc
addr16
push
jmp
xor
inc
hlt
cmp
fs
or
js
stc
sbb
push
or
mov
test
xchg
int3
push
push
lcall
add
iret
inc
and
fistl
push
sub
je
inc
mov
cs
loop
push
dec
test
repnz
add
xchg
leave
addb
sbb
add
push
jo
sub
push
or
add
pop
rorb
clc
cli
mov
mov
lods
int
out
push
cmp
inc
std
out
push
inc
mov
cmp
movsb
aam
loop
add
add
pop
rol
les
dec
or
and
aad
pop
mov
and
or
cltd
inc
loopne
and
inc
pop
and
into
sub
pop
push
movsl
out
bound
push
and
sub
arpl
dec
rcrl
adc
addb
scas
add
and
pop
imul
negb
cmc
sub
push
pop
inc
ret
fisubrs
or
add
push
pop
jae
dec
es
pop
sub
data16
outsb
or
adc
fstps
xlat
add
pop
data16
mov
into
sub
lahf
mov
push
out
mov
and
in
cmp
mov
dec
sub
xorl
xchg
fucomp
and
xchg
mov
jae
sub
or
ljmp
dec
push
es
ret
push
test
add
dec
lret
cmc
sbb
jmp
insl
out
and
sahf
insb
shl
inc
add
add
call
push
icebp
jmp
roll
adc
adc
test
orl
lds
cmp
xchg
data16
mov
jnp
or
pop
outsl
xor
in
push
gs
or
dec
push
je
xchg
test
dec
or
addl
mov
jmp
sub
push
dec
rcl
mov
mov
int3
mov
das
inc
testb
or
rclb
rcll
xor
pop
jno
cmp
adc
or
push
add
jnp
pop
fidivrl
add
test
jmp
ud2
not
mov
push
adc
adc
psubsw
cmp
mov
push
popa
das
cmp
addps
add
or
xchg
dec
push
sarl
and
sub
push
adc
sub
or
cmpsl
lcall
mov
jne
mov
sub
dec
leave
xor
lcall
inc
or
icebp
mov
mov
sub
in
xchg
fbld
sbb
in
imul
mov
xor
mov
fmul
adc
jp
add
xchg
pop
pop
sti
dec
fldenv
or
cmp
dec
pop
mov
dec
sub
push
fstps
xor
mov
add
xor
fnstenv
inc
xchg
xchg
int
mov
add
pop
and
lds
gs
shrl
and
inc
adc
add
or
add
movsl
repnz
cmc
lock
dec
test
mov
stc
inc
ret
cmp
mov
loopne
pop
outsl
add
mov
mov
les
call
pop
jmp
mov
roll
les
cmp
inc
enter
dec
and
mov
loope
scas
add
xor
or
push
lret
and
in
iret
or
lods
xor
push
ljmp
jb
adc
rolb
cmp
shl
sbb
je
cmp
fcmovu
mov
add
iret
fnstsw
les
out
mov
xor
jge
andb
adcl
cmpsb
xor
add
push
adc
jae
add
mov
fdivs
jmp
mov
pop
daa
mov
adc
ret
xlat
cmp
cmc
jle
push
pusha
cmp
or
imul
mov
aam
cmpsb
mov
test
loopne
jecxz
dec
mov
pop
movsl
dec
shrb
in
rcll
push
add
pop
fiadds
pop
xor
addl
jl
out
mov
cmp
out
jle
int
cltd
adcb
push
int
cmp
push
push
sub
daa
sub
mov
inc
test
add
outsb
or
mov
icebp
pop
add
aaa
cmp
jl
and
dec
pop
das
sub
mov
sarb
inc
jmp
mov
daa
push
adc
popa
into
jge
xchg
dec
out
push
les
test
sub
adc
imul
out
add
xchg
and
sub
xchg
mov
aas
push
in
in
xchg
mov
sbb
or
cs
pop
nop
imul
call
inc
add
rcrl
and
ret
pop
adc
addr16
xchg
adc
and
xor
je
dec
and
or
notl
out
lods
mov
dec
pop
add
xchg
repnz
dec
pop
shrb
add
push
add
jmp
mov
das
enter
dec
inc
sub
sub
mov
xchg
sbb
mov
xchg
shll
mov
mov
adc
push
or
or
or
lret
xor
loopne
fsubrs
dec
jle
dec
les
add
mov
rcrb
cmpsl
clc
xchg
sub
xchg
leave
enter
ret
push
inc
pop
movsl
mov
inc
mov
rcll
and
loopne
push
mov
fs
dec
jnp
icebp
pop
xchg
ja
pusha
push
jmp
sbb
pop
jae
push
xchg
ss
jne
stc
dec
pop
or
sub
xlat
or
inc
xchg
pop
fs
mov
sub
je
xchg
add
loope
nop
loopne
push
cmp
sbb
in
cltd
jb
fbstp
lock
leave
sbb
cmpl
pop
sub
or
mov
fsubl
push
jne
jns
clc
xchg
orl
in
call
sub
scas
jmp
push
push
mov
xchg
into
pop
inc
cmc
cwtl
pop
loop
cwtl
xor
repnz
push
adc
sub
cmp
inc
or
pop
pusha
rclb
hlt
bound
fcoml
movsl
add
enter
mov
or
fsubr
inc
dec
in
aam
ret
mov
out
mov
int3
mov
sahf
or
sti
dec
xor
sub
mov
mov
daa
pop
mov
rolb
dec
push
mov
inc
clc
inc
dec
cmpsl
mov
push
pop
mov
fisubrs
mov
pusha
add
mov
fsts
push
jno
push
pop
into
or
mov
or
push
push
loop
push
sbb
lds
mov
jmp
xchg
in
int3
pop
push
or
add
mov
movsl
sub
flds
es
mov
neg
sar
loop
fistl
rorb
xchg
int3
pusha
push
sbb
cmpl
leave
jbe
mov
loope
sub
in
xchg
pop
mov
enter
xor
mov
xor
and
mov
mov
inc
iret
mov
es
push
pop
adc
pusha
pop
int3
dec
fildl
jl
stos
xor
inc
adcb
jmp
call
add
add
or
dec
pop
dec
adc
push
sarl
add
mov
cmpsb
movsb
and
js
add
push
xchg
adc
out
loope
testb
inc
es
mov
and
add
or
repnz
xchg
loop
aad
xchg
lods
adc
sbb
or
cmp
rcr
inc
sub
jno
test
mov
push
pop
push
loopne
pop
nop
mov
movsl
jb
and
scas
adc
sub
in
mov
xchg
push
sar
ljmp
dec
adc
mov
insl
push
cltd
sub
dec
and
fdivp
adc
or
cmp
aaa
cmp
sbb
adc
std
data16
add
nop
add
jmp
lds
les
mulb
xchg
add
insl
mov
loope
jle
or
je
stos
stos
sar
movsb
jo
jp
icebp
sbb
ret
mov
or
inc
add
mov
pop
repz
mov
add
push
lock
or
pop
push
push
push
outsb
add
sub
in
daa
inc
xchg
pusha
movsl
imul
xchg
not
lods
cmp
push
movsb
les
push
jmp
or
inc
stos
test
push
repz
mov
and
and
sbb
addl
sahf
mov
push
xchg
insb
gs
je
inc
leave
mov
shr
jae
cwtl
or
push
inc
mov
and
add
ret
xor
test
add
inc
inc
popf
test
xchg
shl
sbb
rcll
jno
inc
sbb
sub
aad
insb
jmp
fildl
or
into
out
or
leave
adc
mov
faddl
and
shl
pusha
inc
or
rcrl
stc
push
push
loopne
adc
popa
sub
test
xor
and
cs
add
in
sub
int3
popf
lcall
pop
pop
inc
xorb
mov
add
lds
les
mov
xor
cmpsl
pop
sub
xor
aaa
mov
lock
adc
adc
pop
lds
cwtl
sbb
lods
or
dec
pop
loope
cmp
pop
lret
mov
mov
sti
and
push
or
pusha
inc
aam
aas
movsb
pop
xchg
fdiv
mov
divb
call
add
xor
rolb
mov
sub
adc
add
pop
test
mov
nop
sub
mov
mov
add
fldenv
mov
xor
jmp
ljmp
cli
insb
loop
xchg
shll
test
ret
rorl
pop
stc
jb
ret
xchg
movsl
stos
mov
push
out
mov
dec
xor
add
add
mov
iret
mov
pop
in
jecxz
loop
xorl
out
sbb
xor
int3
add
es
daa
insb
mov
adc
and
ljmp
scas
dec
jns
push
fs
sbb
shl
push
and
in
outsl
dec
cmp
mov
pop
mov
push
incb
push
cs
mov
dec
stos
add
cmp
rcr
rorb
add
or
ss
nop
push
or
adc
jl
fisttpll
jecxz
leave
or
mov
inc
mov
pusha
mov
dec
sub
movsb
adc
cmp
ficomps
clc
imul
js
inc
scas
pop
enter
dec
out
fisubs
lock
jmp
mov
inc
addl
cmp
jb
aas
pushf
jbe
inc
lret
pop
inc
adc
dec
xor
iret
loopne
rcll
pusha
push
or
jb
xor
add
int3
and
ficoml
add
pop
mov
or
add
pop
mov
sub
adc
and
jecxz
sub
and
push
outsb
imul
push
push
sub
notb
arpl
mov
fcomps
sete
pop
std
insl
inc
xor
dec
push
mov
pop
data16
nop
inc
or
sbb
test
cmp
fwait
ja
fldcw
push
ss
jns
fdivs
mov
rorl
shl
test
add
or
jmp
lret
in
repz
xor
jecxz
stos
jmp
xor
icebp
mov
sub
jne
pop
push
rcrl
es
pusha
mov
push
push
decl
mov
mov
lret
mov
or
leave
or
mov
test
and
dec
lcall
mov
nop
pop
loope
mov
sub
shl
mov
cmpb
and
daa
sbb
jp
mov
push
test
inc
fiadds
cmp
pusha
dec
out
or
int3
sar
push
imul
cwtl
add
repnz
pop
jmp
mov
test
ret
push
adc
repnz
xchg
sub
stos
mov
pop
push
push
push
clc
push
add
fimuls
fcompl
lret
jle
pop
roll
in
push
xchg
push
mov
loop
dec
movsl
and
xor
lahf
jg
add
andl
ss
mov
push
add
dec
push
jb
sub
jo
out
movhps
push
jne
repnz
inc
ret
popa
push
xchg
pusha
jge
lahf
lcall
add
add
adc
jne
add
xor
and
out
mov
jo
cmp
pop
rcrb
push
cmp
dec
ds
push
pop
jmp
pop
mov
jbe
and
cmp
jmp
aam
push
sub
cmp
add
data16
bnd
jno
ss
or
add
push
pop
and
inc
fwait
sbb
lods
xchg
xchg
inc
push
xor
or
incb
lret
add
cmp
adc
cmp
lds
sub
pop
pop
sub
popf
insb
push
arpl
insb
and
jno
jno
adc
mov
popf
push
sbb
aas
loope
or
loopne
xchg
adc
mov
xchg
fstpl
stc
cmpb
or
cmp
adc
sub
scas
and
add
mov
movb
into
xor
jmp
mov
xchg
fwait
pushf
pop
imul
push
adc
cmpsb
cltd
mov
mov
sub
outsb
ret
pop
or
push
lds
mov
inc
loopne
push
int3
mov
add
add
adc
mov
mov
jbe
add
mul
mov
cmc
pop
inc
mov
ss
sub
fs
test
invd
pop
sub
rorl
test
das
pusha
leave
mov
fnstsw
mov
cmp
adc
xorl
rcrl
push
push
mov
pop
push
lcall
or
push
add
fnstcw
std
jmp
push
ds
push
cmpsl
add
push
addb
xor
sbb
sar
insl
pop
es
faddl
push
adc
add
lret
repnz
adc
jg
pop
psraw
fs
shr
insl
sub
xchg
inc
and
imul
imul
test
jge
sbb
jmp
incb
pushw
in
cwtl
pop
mov
or
lret
add
out
jo
notb
adc
pop
mov
inc
push
in
sub
push
and
adc
movsl
pop
pushf
cmp
dec
out
test
mov
or
out
cmpsl
les
data16
cmp
pusha
mov
fxtract
and
cmp
sbb
mov
lds
add
pop
cmp
aam
stos
pusha
popa
adc
xchg
add
adc
mov
je
mov
int3
add
pusha
pusha
psraw
fs
sbb
aaa
mov
ret
inc
scas
xor
adc
jae
mov
test
pop
push
scas
add
in
mov
sbb
adc
jmp
loope
jp
ljmp
pop
out
sub
inc
add
sbb
jmp
mov
outsb
pop
pop
sub
cmp
sbb
shlb
movsl
ret
and
pop
sbbl
mov
shl
loop
pop
addl
cmp
and
pop
jmp
push
xchg
xor
fcmovne
jmp
cli
inc
pop
daa
shrl
in
pop
scas
sub
hlt
adc
sub
mov
subb
inc
sub
inc
xor
lret
hlt
cs
mov
push
addb
add
not
jmp
pop
test
adcb
ret
or
inc
add
jmp
pop
xor
pusha
rorb
push
cmpsb
push
and
adc
cmp
xchg
ja
xchg
rcll
jmp
out
sub
jl
and
push
mov
inc
sub
cwtl
loope
push
movsl
aam
loopne
hlt
mov
mov
push
cmp
jnp
cmp
lret
push
cltd
fs
data16
or
mov
cmp
out
xchg
jl
loop
push
push
dec
push
mov
fwait
cli
cmp
adc
cwtl
or
addr16
pusha
pop
jg
or
inc
test
lret
push
and
mov
or
into
pop
sub
mov
inc
mov
or
sbb
icebp
jnp
xchg
or
insb
mov
js
and
or
push
sub
xor
or
cmpsl
icebp
xchg
pop
push
lret
adc
stos
inc
lock
int3
dec
xchg
jo
jmp
xchg
out
pop
inc
mov
xchg
stos
sub
jnp
push
in
mov
sub
pop
js
addb
fdiv
pop
xchg
popf
je
out
rorb
shl
notl
mov
mov
mov
pop
aas
and
adc
push
sub
enter
or
loopne
ret
pop
or
aam
pop
call
pop
cltd
push
sub
pop
add
sahf
popa
xlat
xchg
adc
cmpsl
inc
dec
test
add
inc
xor
xor
ja
and
shlb
nop
xor
sbb
jns,pn
aas
adc
out
test
lret
rcr
add
imul
loopne
push
or
lcall
xchg
enter
mov
or
scas
or
add
dec
xchg
inc
inc
cmpsb
loopne
jl
sub
pop
pusha
jecxz
mov
push
push
mov
not
add
xor
jbe
daa
jmp
xchg
test
inc
adc
ret
pop
bound
repz
or
inc
out
xchg
adc
ds
pop
daa
pop
mov
xchg
movsb
dec
addl
sti
pusha
sbb
ja
sbb
flds
sbbl
jle
pop
rorl
daa
in
add
iret
pop
add
scas
bound
pushf
dec
pop
push
dec
pop
bound
adc
and
cli
stos
sbb
orl
lret
int
adc
jmp
dec
adc
fisttps
int
in
stos
mov
outsb
in
mov
pusha
outsl
stos
je
and
andl
mov
ljmp
jae
es
adc
or
int3
ss
mov
jae
adcb
cmc
inc
ret
inc
imul
and
jmp
adc
push
lcall
jb
push
xchg
ja
pop
push
push
aas
sub
sub
fs
cltd
sub
sbb
popa
mov
cmp
lds
adc
sub
inc
or
insb
roll
xor
pop
or
sub
mov
sub
repz
xor
sbb
mov
and
daa
arpl
dec
arpl
push
add
and
mov
pop
xor
shll
mov
jne
cmp
insl
jmp
jbe
xor
fsubrs
repnz
push
xor
loopne
and
xchg
and
addl
push
scas
out
lds
and
xchg
and
fnstcw
sub
push
push
xchg
insb
or
cs
outsb
dec
xor
pop
out
jmp
xchg
xor
add
out
push
xor
mov
xlat
mov
dec
orb
push
and
imull
sub
and
or
inc
xchg
and
and
mov
add
fisubrs
jb
into
cmp
roll
mov
inc
pusha
stos
sti
xchg
dec
inc
add
syscall
push
sbb
dec
test
fcoml
pop
stos
popf
inc
sti
adc
push
and
into
cmp
rcll
testb
ret
add
gs
shrl
dec
dec
xchg
dec
loop
out
add
int3
jmp
dec
pop
es
sbb
sbb
push
shrb
cmp
dec
or
aam
add
sbb
inc
or
adc
rcl
xchg
push
inc
cmp
fldl
in
pop
jle
shrl
int
aam
out
dec
jg
adc
dec
lret
jg
jmp
cmp
xor
pop
push
pop
bndldx
mov
or
mov
arpl
pop
aas
int
leave
jp
sbb
inc
sub
inc
jle
loope
fadd
cmp
add
jmp
xchg
rorb
test
in
out
loopne
mov
and
cli
dec
inc
fists
lods
adc
mov
cmp
pop
sti
xchg
or
add
shrl
cmpb
bnd
sarb
sub
add
mov
loope
jo
or
jbe
and
test
pop
sub
add
push
add
test
push
addr16
push
mov
pop
lds
mov
xor
adc
adc
jns
sbbl
lret
and
es
and
mov
add
add
jns
orl
cld
leave
xlat
mov
xor
push
jge
cmp
test
jno
sub
push
push
jno
inc
mov
pushf
xchg
les
scas
adc
jnp
fmuls
xor
mov
jmp
ret
push
xor
mov
cmc
xchg
ret
insl
rolb
imul
adc
mov
add
ljmp
das
or
int3
neg
push
push
mov
call
loope
and
xor
and
pop
pop
add
mov
inc
sub
bound
adc
out
or
ss
cs
or
pop
and
inc
xchg
dec
mov
mov
sbb
push
add
and
pop
dec
inc
test
xchg
or
add
outsb
mov
out
js
or
mov
and
dec
outsl
push
inc
inc
and
cmp
mov
pop
push
mov
lret
dec
fs
addb
es
jns
dec
xchg
adc
inc
mov
jge
shlb
aad
push
add
xor
inc
adc
jbe
mov
jmp
and
sti
pop
add
jbe
cmp
push
pop
push
push
inc
dec
cmp
pop
cld
push
or
adc
inc
ret
jl
jae
xchg
pushf
xor
and
sahf
cs
cmp
sub
mov
xchg
sub
mov
push
sub
cmp
lcall
bound
jmp
push
leave
add
movl
mov
adc
xchg
daa
fwait
pop
mov
and
pop
inc
imul
push
out
push
add
sub
dec
add
jnp
in
popa
inc
std
lods
les
mov
mov
dec
ficomps
or
fisttpl
in
or
fstps
nop
jnp
and
dec
stos
jl
mov
sub
mov
popa
fdivrl
lret
push
frstor
dec
in
sub
mov
hlt
or
fcmovnb
shlb
pop
pop
popf
push
mov
testb
mov
dec
daa
jmp
and
adc
sub
cmp
es
jb
out
sbb
clc
ds
push
lret
inc
mov
mov
loop
ds
pop
mulb
adc
call
xorb
pop
ret
pop
push
adc
aam
and
nopl
inc
hlt
mov
push
in
pop
in
mulb
dec
inc
popf
adc
call
leave
push
mov
push
push
jmp
lods
add
fsin
mov
lea
add
inc
sub
mov
test
fs
pop
fsubrs
inc
bound
push
push
mov
jno
pop
mov
sub
inc
lret
pop
out
and
test
loop
mov
or
andb
movsl
pop
xor
jmp
cwtl
sahf
pop
add
sbb
icebp
jmp
cmc
je
jns
add
or
dec
rolb
lret
add
test
jns
mov
xchg
push
sbb
push
jmp
loop
jecxz
stos
pop
idivl
adc
imul
push
test
leave
cmpsl
add
mov
and
mov
mov
add
xor
jg
cmp
push
mov
test
push
cltd
andl
dec
mov
lret
loop
iret
sbb
repz
rcr
jge,pn
sbb
call
mov
faddl
int
jbe
and
push
ffree
or
sub
loopne
addr16
xchg
inc
dec
pop
fs
out
push
subb
xchg
mov
ljmp
inc
leave
subb
jp
fdivrl
or
aaa
sbb
pop
jl
sub
mov
daa
mov
mov
add
popf
mov
out
sbb
icebp
or
repnz
scas
lret
das
add
ss
movsb
add
pusha
adc
xlat
daa
lods
sub
add
lds
scas
mov
loop
inc
add
mov
cmp
mov
mov
xchg
fs
mov
xchg
mov
sbb
push
push
rcrl
mov
jge
sub
push
jmp
xchg
test
add
mov
mov
in
ret
mov
cmpsb
adc
add
aam
daa
jmp
pop
nop
adc
jmp
scas
xor
pop
fcoms
aad
enter
push
jl
and
adc
sub
daa
and
pop
sub
jp
pusha
xor
mov
arpl
or
pop
and
cwtl
add
mov
movd
xor
ljmp
aad
fimull
cmp
pop
ds
dec
mov
add
jae
adc
push
test
in
pop
inc
or
not
pop
and
mov
in
jg
jb
mov
and
dec
add
and
int3
hlt
and
pop
shll
shlb
cmp
scas
xchg
lds
subb
and
daa
fstps
and
cs
jbe
ret
push
add
ds
and
gs
push
sub
pusha
jne
loop
imul
jmp
xor
sbb
add
dec
mov
pop
sub
ds
mov
and
xor
out
xor
add
hlt
loope
xchg
pop
push
call
popf
or
fwait
push
fsubs
lret
dec
push
es
shl
in
add
mov
rcrb
idiv
push
aas
mov
add
icebp
test
add
sub
pop
icebp
and
ja
jg
inc
and
lret
jno
mov
aam
inc
sub
xor
jb
loop
and
or
pop
add
pop
leave
inc
or
cli
leave
push
bound
imul
sub
xor
leave
js
rorb
cmp
aas
sbb
or
movsbl
dec
ds
jmp
sbb
cmp
add
push
stos
pop
ret
lret
test
inc
mov
mov
or
nop
cmp
ljmp
xchg
jmp
add
inc
hlt
jge
xor
xchg
notb
jb
and
rcrl
daa
pop
not
and
add
icebp
in
pop
xor
push
mov
push
dec
cmpsl
add
outsl
sbb
cmp
add
and
pop
ret
xchg
dec
ret
xchg
movl
lds
cld
push
lahf
sbb
es
pushf
aas
jb
or
xor
push
mov
push
jmp
std
pop
add
mov
imul
pop
repnz
mov
xchg
fmuls
das
inc
push
add
pop
add
adc
ds
js
adc
not
add
add
xchg
cmp
sbbb
lret
outsl
jmp
pop
mov
push
flds
imul
mov
cmp
pop
ret
inc
xchg
xchg
popa
ficoml
pop
popl
dec
sub
jle
loop
jo
xor
jae
insb
jae
leave
aaa
push
pop
xchg
mov
xchg
sub
icebp
add
sbb
incb
dec
push
fidivs
mov
fstpt
insb
dec
adcb
dec
pushf
dec
inc
sub
mov
fnstcw
cmp
push
pop
leave
sbbb
outsl
sbb
repnz
xor
in
jmp
cwtl
and
mov
adc
inc
out
ljmp
aaa
insl
and
pusha
roll
sub
dec
js
addb
jle
sbb
jns
ljmp
sub
leave
inc
fists
mov
repnz
dec
xlat
xchg
sbb
das
push
shll
sbb
imul
aas
cmp
sbb
push
or
mov
xor
lret
and
or
popa
jae
shr
inc
ja
or
fdivrs
je
add
imul
sbb
sub
aaa
cmp
sbb
xchg
cmpsl
scas
mov
jecxz
xlat
dec
inc
xor
roll
cltd
or
and
adc
pop
outsl
add
mov
push
sub
jg
cmp
loopne
insl
xor
pop
or
and
adc
add
cmp
mov
jmp
push
push
or
je
push
inc
jp
jge
xchg
jno
sahf
and
dec
fcomps
mov
push
mov
cmp
sub
and
push
or
cwtl
dec
push
lock
roll
movsl
cmpb
call
lret
pop
pop
shl
pop
xor
inc
jmp
loopne
push
adc
sub
mov
adcb
jp
push
inc
js
adc
shl
sub
pop
sub
or
test
call
rolb
sahf
add
stc
adc
mov
and
pusha
pop
shlb
add
and
inc
xor
xchg
add
push
push
mov
add
aaa
in
int3
icebp
leave
aas
nop
loopne
mulb
out
fmuls
xchg
xor
aad
lods
mov
pop
jecxz
xchg
sub
popa
sub
pop
cmp
push
adc
push
mov
test
xchg
jle
xchg
adc
sbb
dec
stos
nop
mov
pop
roll
cmc
xor
pop
sub
push
out
lods
stc
pushf
insl
or
or
inc
jmp
and
adc
add
inc
sub
adc
pop
mov
shr
pusha
push
movsb
repnz
add
pop
inc
loopne
jne
cli
lea
sbb
adc
xsaveopt
jmp
shl
and
inc
inc
jge
insl
sub
sbb
push
mov
int
add
xchg
ja
jp
sbb
or
jle
mov
popf
cmp
jns
lahf
jo
test
test
mov
mov
pop
jmp
add
sub
cmpsb
xor
mov
mov
stos
xlat
in
in
outsb
sub
mov
dec
aad
add
lret
iret
outsl
adc
push
js
leave
hlt
xchg
cld
sub
sub
imulb
push
push
jl
cmp
mov
popf
or
stos
mov
fdivs
push
fbstp
clc
sub
sub
test
or
push
pop
in
aas
stos
ds
jecxz
mov
leave
jns
out
loope
push
sub
pop
pop
pop
or
in
or
pop
push
aas
scas
cmp
mov
jbe
sub
lret
negl
out
and
test
out
es
sbb
adcb
add
cs
fisubrs
sub
pop
pop
xchg
adc
cwtl
inc
inc
add
sub
or
cmp
stos
cmc
lock
lods
sub
add
mov
mov
or
push
or
cmpsb
jg
mov
adc
inc
sbb
int3
mov
xchg
rcrl
add
sbb
and
cli
push
mov
notb
inc
ret
sahf
bound
xor
repz
icebp
loopne
jmp
shrl
sub
test
lcall
sbb
dec
xor
xchg
lret
dec
dec
sbb
sbb
data16
jns
sub
mov
add
bnd
aad
adc
push
les
lea
leave
aad
rolb
and
rorl
inc
les
lock
or
lock
pop
xor
push
xchg
inc
repz
mov
in
push
mov
add
push
pop
or
clc
test
int3
dec
daa
push
inc
les
lock
pop
hlt
xchg
push
push
push
jmp
pop
shrb
add
ljmp
mov
jne
mov
push
jmp
pop
daa
or
call
jae
roll
xchg
fnstcw
add
sbb
pop
adc
stos
cmp
push
pop
mov
dec
lds
add
fs
outsl
push
add
xchg
push
xor
and
aam
push
movsl
in
ds
les
pop
mov
push
and
jb
mov
shl
adc
sub
xchg
jl
je
aaa
add
movsl
dec
jmp
in
xor
mov
sub
jp
lds
xchg
push
sbb
pusha
add
fcomps
fnstcw
aaa
inc
push
call
das
and
dec
shlb
jmp
pop
mov
clc
cmp
dec
mov
or
ret
push
lea
stos
push
push
jmp
int3
pop
out
cltd
pop
add
sub
movsb
sbb
scas
adc
add
jmp
icebp
adc
in
lods
jle
movsl
fstps
test
enter
xchg
outsb
xor
movsl
imul
sbb
mov
jo
stos
mov
xchg
xor
lcall
js
lods
push
xchg
or
sub
or
jb
dec
add
ret
outsb
add
xor
lret
roll
call
outsl
test
xchg
test
fisubs
scas
testl
cltd
popf
cli
xchg
and
ret
jmp
xchg
rol
iret
int
cmpl
dec
pop
cmp
pop
xchg
sbbl
scas
mov
sbb
in
cmpsb
inc
rclb
out
daa
add
cltd
dec
sub
or
loop
fsubl
xchg
aaa
inc
mov
mov
add
push
sub
pop
stc
inc
pop
lret
jmp
js
std
les
mov
xorb
shll
add
pop
sbb
inc
loope
add
imul
cs
mov
push
div
jno
xor
inc
cltd
jmp
add
leave
dec
rcll
je
xchg
out
fucomip
das
stos
push
mov
adc
mov
cmpsb
xor
cld
jno
dec
inc
sub
inc
mov
add
iret
push
xchg
dec
outsl
jmp
and
jp
pushf
cli
adc
neg
mov
lds
inc
mov
xor
add
not
or
jmp
pop
pop
mov
adc
cmp
cld
dec
das
das
pop
in
adc
adc
lahf
es
mov
lds
mov
sti
or
bound
ret
inc
or
push
jns
sahf
sub
mov
lahf
popa
pop
pop
in
mov
bound
je
pop
jle
cmp
rorl
push
mov
adc
mul
and
push
xor
sbb
or
add
inc
fisubrl
rolb
add
jl
xor
insl
add
and
dec
xor
cltd
cmp
push
push
loope
xor
mov
inc
das
pop
jl
repnz
adc
popa
pop
pop
jbe
push
or
rorb
dec
ficomps
dec
jp
mov
fldt
jl
and
add
jno
incl
lock
push
mov
push
sbb
mov
stc
lock
mov
leave
or
mov
mov
es
adc
sub
test
insb
daa
xchg
mov
stos
adc
sbbl
bound
mov
imul
gs
inc
xor
sub
jne
dec
mov
jecxz
daa
pop
xchg
arpl
push
insl
add
inc
int3
add
jmp
sahf
sub
push
scas
fwait
mov
jno
out
mov
movsb
imul
push
das
pop
sti
mov
push
push
add
cld
add
jmp
les
push
fmull
or
lret
or
pusha
dec
add
fstpl
mov
push
rcr
movsb
cmp
cmpsb
sbb
mov
push
add
stos
xchg
jmp
lods
sub
test
or
push
iret
shrb
dec
fs
and
dec
pop
stos
imul
sbb
sbb
or
add
sub
sub
cmp
add
pop
negl
mov
mov
pop
das
mov
bnd
lods
call
ds
jg
pop
in
in
orl
shlb
std
test
pop
xor
ljmp
mov
sahf
jecxz
mov
add
add
jle
xchg
and
push
clc
xor
mov
or
inc
inc
dec
bnd
dec
sbb
sahf
or
fstps
add
shr
jo
add
mov
movsl
orl
loop
adc
ret
or
repnz
pop
aam
pop
das
jmp
insb
pop
subl
push
or
neg
pop
adc
imul
push
push
in
or
in
test
movsl
int
sbb
stos
jg
mov
rorb
and
dec
xor
pop
stos
cwtl
jle
pop
inc
stos
push
adc
pop
fdivl
dec
mov
lahf
xchg
mov
shlb
or
jmp
inc
push
call
fs
leave
push
add
rol
add
mov
insl
lahf
or
jmp
in
mov
or
dec
cmpsl
inc
hlt
lret
in
add
int3
push
sub
sub
dec
mov
jae
adc
push
out
cmp
add
mov
push
shr
xchg
in
clc
jns
mov
mov
ljmp
jp
jo
filds
loop
clc
jl
inc
push
push
lock
pop
hlt
inc
mov
mov
dec
outsb
loop
mov
push
and
add
pusha
or
ret
mov
push
icebp
jns
dec
movsb
cltd
adc
repz
add
xor
jnp
repnz
push
insb
or
pop
fmul
push
popa
mov
dec
jl
cmp
or
or
or
lods
pop
test
cli
jns
roll
add
les
adc
lods
subl
xor
push
and
pop
sbb
adc
adc
jbe
jae
cmpsl
mov
rcl
mov
xor
cmpsb
xor
test
xor
add
jne
mov
ja
push
or
fucompp
push
add
fisubs
sub
icebp
loope
push
jmp
loope
ja
into
xor
add
pop
inc
daa
pop
or
je
add
mov
push
jae
andl
jecxz
daa
xchg
add
pop
xor
dec
cmc
pop
loopne
push
mov
lock
dec
inc
sbb
ja
xchg
repnz
out
cltd
aas
fldt
sub
add
pop
subl
lcall
repnz
mov
push
add
sub
icebp
inc
das
xor
das
push
pop
bound
cmpsb
les
fcomp
or
addr16
push
out
adc
or
add
popa
inc
or
rorl
shrb
lret
leave
pop
pop
mov
rclb
add
cld
mov
push
sbb
ret
cmpsl
adcb
or
sar
ret
dec
jge
mov
bound
xchg
push
inc
loopne
dec
shlb
xor
sbb
cltd
repz
jmp
js,pn
jno
jg
pop
push
je
push
jecxz
jle
push
push
mov
cmp
cmp
xor
jg
jnp
sti
jecxz
jo
inc
sbb
push
mov
mov
imull
cmp
lahf
lods
mov
cld
test
in
push
sbb
mov
cmp
arpl
ret
in
xchg
sub
les
mov
push
in
aad
jmp
dec
push
push
inc
push
mov
sbb
scas
dec
in
xor
mov
push
movsb
adc
add
xchg
dec
loope
xchg
ret
popl
repz
xchg
push
loope
mov
jl
cmp
lea
neg
adc
add
nop
lret
outsb
dec
popa
mov
and
aam
pop
or
or
js
cwtl
inc
nop
repnz
xor
cli
dec
lock
ret
adc
je
add
incl
std
cmp
inc
add
jmp
adc
add
rcrb
icebp
jmp
not
add
call
popa
jl
scas
jecxz
outsl
xchg
ret
cmpsb
fwait
iret
dec
push
mov
dec
mov
emms
in
add
add
sbb
addl
pop
xor
das
pop
jl
movsl
hlt
cli
jo
sub
out
jnp
mov
push
cmpsl
movsl
mov
rclb
out
gs
inc
pop
aas
cmpsl
push
push
xlat
jno
jg
wrmsr
cmp
push
mov
pop
and
mov
mov
adc
jmp
mov
adc
mov
pop
lret
decb
std
push
push
andb
mov
loopne
add
adc
xor
pushf
mov
icebp
jnp
or
adc
xchg
outsl
mov
dec
sub
cmp
inc
in
es
cmp
push
push
adc
sub
dec
repnz
inc
daa
push
xor
jbe
adc
aas
or
jmp
or
adc
add
add
test
leave
add
insl
pushf
dec
add
mov
leave
xor
dec
pop
push
or
adc
imul
fildl
jo
addb
shrb
insb
jle
stc
add
push
clc
mov
repz
pop
aas
inc
push
inc
sub
mov
aam
cli
push
int3
mov
jno
sbb
adc
in
fdivrl
out
mov
std
jg
pop
pop
mov
mov
and
push
push
pop
sub
faddp
lahf
orb
dec
hlt
dec
cvtdq2ps
push
jmp
xor
icebp
or
int
pop
dec
sub
adc
mov
mov
bound
loope
aam
divl
push
push
lret
and
hlt
jo
pop
push
mov
or
jmp
mov
ret
dec
ljmp
and
push
pop
sbb
adc
loop
sbb
push
push
dec
push
mov
test
pop
pop
int
das
movl
fpatan
mov
enter
sub
sub
inc
arpl
fdivr
je
arpl
aam
test
push
mov
pop
sbb
push
push
push
pusha
xchg
push
ljmp
subb
aam
incw
and
imul
and
jg,pt
sub
add
testb
nop
int
jmp
adc
and
xor
sub
jnp
and
and
sub
data16
cltd
xchg
icebp
std
mov
pop
push
and
add
sbb
or
dec
pusha
xchg
sti
lds
inc
xor
jg
xchg
aam
decl
lods
xor
push
shl
outsl
mov
push
pop
jmp
ljmp
add
ss
push
add
xor
sub
int
cmp
dec
add
cmpsb
daa
stos
push
jmp
test
push
push
mov
mov
jp
add
das
inc
sub
scas
pop
andl
or
rolb
in
call
rcll
insb
or
adc
cmp
mov
loop
push
fdivp
jg
jle
pop
sbbb
pop
dec
push
ror
or
sub
sub
sub
nop
pop
dec
jae
ja
mov
addb
fildl
jo
push
sub
ds
push
pop
xacquire
push
xchg
mov
and
push
sbb
or
jns
cld
ljmp
mov
add
xor
arpl
push
sub
notl
imul
jmp
pop
jae
or
cmc
pushf
and
stc
imul
push
add
and
nop
mov
js
jns
fistpl
cmp
test
inc
lods
lahf
xorl
mov
shl
mov
addr16
ja
pop
loop
mov
or
push
call
mov
cmp
loopne
push
jmp
fwait
or
sub
xchg
shll
mov
popa
test
pop
mov
jge
mov
pop
mov
add
mov
xor
fistpll
xchg
or
mov
jne
cmp
jnp
xor
or
shll
xor
data16
cmp
ret
xchg
ss
inc
jne
jp
bound
das
jmp
adc
cli
pusha
push
and
mov
add
and
jl
or
mov
aad
orl
adc
add
pop
jg
cld
push
mov
lods
cmp
cld
fwait
or
dec
xorb
shll
in
arpl
adc
cmp
mov
test
sbb
cli
push
xchg
dec
arpl
inc
mov
lds
stos
inc
loope
loopne
jbe
xchg
in
js
nop
negb
xor
add
push
ja
ds
enter
hlt
sti
push
xchg
sbb
jo
inc
sub
add
pusha
cli
pop
push
call
das
sbbl
sbb
jno
pop
adc
in
or
mov
pop
pop
and
outsl
xchg
rclb
lds
aas
adc
in
cld
mov
add
add
mov
cld
sbbl
arpl
push
gs
pop
mov
cmc
add
cmp
sub
xor
nop
add
scas
fistl
jmp
sub
pop
popf
mov
cmpsb
or
mov
or
mov
fmul
sahf
pop
sub
mov
add
cmp
cmp
mov
popa
cmp
js
sbb
pop
sub
inc
mov
loope
adc
and
add
adc
negl
sub
not
dec
or
xchg
sbb
test
dec
rcll
cmp
add
rolb
iret
lods
jae
pop
mov
jl
mov
adc
icebp
aaa
pop
adc
pop
shr
inc
in
push
and
jecxz
pop
ljmp
inc
dec
leave
or
jmp
sub
adc
imul
sub
or
sbb
mov
das
add
dec
mov
mov
daa
or
jmp
dec
addr16
push
mov
pop
in
cmpsl
test
enter
aad
xchg
add
ret
sub
sub
sub
shlb
add
jmp
dec
mov
in
xor
jmp
roll
imul
push
inc
imul
imul
sub
repnz
mov
leave
push
mov
cwtl
mov
icebp
inc
inc
push
inc
repnz
rorl
repnz
mov
dec
sub
fadd
cmp
out
mov
pop
call
inc
clc
fsub
bound
pop
popa
jge
not
add
mov
or
subb
sbb
lcall
das
pop
hlt
cmc
gs
xor
inc
push
pop
inc
jmp
inc
jns
addl
fwait
cmp
repnz
bound
sub
xchg
jmp
clc
add
dec
pop
or
sub
fdivrs
fsubs
xor
pop
push
popa
lods
push
icebp
jmp
stos
sub
jmp
negl
jns
sti
cmp
lret
movsb
subb
adcb
mov
adc
addr16
pop
mov
fldcw
daa
ds
fwait
out
or
and
xor
mov
pop
sub
flds
push
xchg
jmp
push
push
jb
xor
xchg
push
sti
add
jne
sarb
inc
push
pop
sbb
aas
mov
cld
pop
mov
cs
push
movsb
cmc
setae
inc
imul
sarb
dec
push
push
sbb
aad
push
or
add
sbb
sbb
cs
cmp
dec
mov
jne
and
inc
mov
add
cmp
adc
lock
xor
pop
pop
add
into
add
mov
add
pushl
ret
push
jp
or
pop
adc
sub
add
add
jae
js
mov
sbb
adc
leave
mov
icebp
enterw
cmc
outsl
neg
jnp
loopne
xchg
and
inc
test
mov
je
add
orb
nop
andb
mov
cmc
lcall
pop
repnz
add
push
test
lret
ja
or
and
dec
fmul
xchg
sbb
or
movsb
or
dec
jmp
dec
or
cmp
test
pop
lock
dec
mov
add
xor
jmp
sub
adc
movsl
or
and
pop
pop
decb
int
notb
hlt
mov
dec
or
jb
pop
pop
mov
lahf
jnp
cmp
cmp
cmp
imul
jbe
repnz
repnz
js
mov
movsl
mov
xor
int3
mov
xor
push
aad
inc
and
and
cmp
fdivp
lock
push
cld
mov
fs
add
pop
mov
add
aas
pop
mov
inc
in
inc
cmp
mov
push
xchg
cmp
push
sbb
sbb
cmpsl
daa
in
fldl
push
lahf
mov
leave
clc
sbb
test
cltd
inc
ja
loopne
or
ret
idivb
leave
jge
mov
mov
inc
popf
lds
sub
fs
shl
sub
jmp
inc
pop
dec
mov
mov
popa
fldl2t
pop
enter
pop
decb
xor
push
shll
add
push
add
cld
mov
jg
dec
jge
insb
pop
and
xor
or
push
push
pop
push
mov
xor
pusha
sub
add
jg
filds
mov
js
inc
nop
roll
add
lcall
sub
call
and
jno
imul
lds
fdivrs
jecxz
sub
mov
dec
jno
ds
push
add
mov
mov
pop
adc
jns
adc
test
sbb
jnp
mov
dec
pushf
jno
push
cmp
mov
or
test
js
mov
ds
rcll
inc
add
cmpsl
sub
mov
adc
push
or
sub
mov
cs
js
pop
or
vpaddsw
mov
dec
dec
mov
std
adc
mov
cmp
push
push
mov
pop
jl
adc
push
daa
pop
das
loope
xor
push
fidivs
subl
and
push
or
fildll
pop
pusha
popa
cmpsb
leave
and
add
in
cmp
mov
dec
push
xchg
test
or
adc
les
jne
adc
add
in
push
inc
test
push
add
xor
fsubrs
mov
out
daa
ljmp
stos
push
in
mov
lods
cmp
sub
shr
sbb
gs
inc
ds
jmp
rolb
sub
push
in
orb
fsubr
or
mov
pop
stc
mov
push
pop
xchg
xor
or
sub
cmp
jne
mov
int
lods
repnz
jle
movsb
subb
add
dec
pop
push
xor
pop
not
xchg
inc
aad
or
jmp
push
ds
mov
rcll
lods
jns
cmp
adc
je
daa
dec
in
lock
or
nop
pop
jg
cmc
jp
xchg
inc
cmp
addr16
mov
push
jle
sbb
pusha
adc
aas
popa
pusha
push
pop
cmp
pop
stos
in
push
and
scas
adc
sub
add
xor
mov
sub
adcb
dec
adc
hlt
hlt
rcr
dec
and
cmpsl
pop
adc
scas
pusha
inc
jmp
shrl
fsubr
push
outsl
xor
xchg
cmp
adc
mov
mov
shlb
loope
repnz
cmc
ljmp
push
push
push
fists
ljmp
gs
pop
inc
sub
and
push
andb
js
push
cmp
lock
jno
and
add
push
sub
call
out
imul
dec
inc
leave
pop
inc
mov
call
mov
les
add
stos
mov
pcmpeqd
test
mov
imul
mov
adc
lods
add
fiadds
sti
xchg
xchg
dec
xchg
lock
inc
jmp
pop
push
aas
jae
or
push
std
push
push
inc
mov
mov
fwait
xor
outsl
daa
es
adc
jmp
add
or
push
or
cmpsb
adc
pop
xor
inc
stos
fidivrl
push
inc
in
pusha
add
inc
mov
push
fnstcw
out
loopne
aas
cmp
xchg
xor
aam
enter
dec
xlat
push
or
pop
test
fcoml
jecxz
daa
pop
mov
fistps
mov
in
jns
sbb
sub
sbb
and
pop
loope
or
jg
dec
lods
nop
sti
adc
psrld
jmp
and
mov
scas
fldenv
std
sbbb
mov
rclb
out
neg
ljmp
sub
pop
jp
cmpsb
push
mov
idivb
repz
xchg
lock
adc
jg
mov
sub
imul
jmp
pop
lea
and
outsb
mov
push
mov
scas
xchg
int3
sub
cld
mov
or
lods
mov
pop
stos
int3
add
jecxz
js
or
or
sarl
test
inc
clc
dec
add
sub
pop
sti
sub
xchg
push
stc
or
inc
pop
mov
or
add
and
jp
push
jne
and
add
loope
fmull
add
es
cmp
call
enter
dec
fimuls
jbe
insl
pop
orl
out
push
xchg
test
and
outsb
out
push
sub
mov
mov
and
inc
enter
adc
outsb
mov
ret
pop
mov
sbb
cmpsb
imul
mov
cmp
das
push
dec
push
dec
pop
jne
fsubs
dec
jb
inc
jmp
and
push
mov
add
mov
mov
subb
push
ud2
jmp
mov
mov
ret
daa
inc
nop
cli
push
fcoml
add
ljmp
rcrb
jmp
add
cmp
dec
jo
jbe
clc
movsb
mov
ss
mov
in
jbe
jmp
jo
and
leave
xor
jne
xor
nop
jne
and
mov
cmpsb
scas
cltd
call
cli
enter
lds
aas
sbb
hlt
sbb
jae
cltd
scas
gs
sbbb
aas
and
sbb
fnsave
pop
stc
push
dec
jg
mov
sti
mov
mov
pop
dec
mov
test
jecxz
and
loop
push
es
adc
mov
and
pop
cld
jb
inc
push
pusha
fwait
sbb
jmp
and
push
sbb
and
inc
fsubrl
sub
add
dec
add
sub
cltd
mov
cmp
or
rclb
adc
cli
fs
movsl
xor
jne
jge
dec
inc
and
pop
push
add
jmp
sbbl
cs
dec
pop
sbb
fists
xchg
push
or
push
inc
mov
xchg
rcll
mov
enter
and
aam
and
fs
ja
scas
push
xchg
adc
out
add
or
cwtl
add
mov
lods
xchg
loop
xchg
mov
in
cmp
add
inc
add
push
mov
add
movsb
pop
int
add
arpl
int
add
ss
dec
inc
repnz
xor
and
std
mov
bound
add
mov
jae
cli
dec
mov
and
dec
and
add
js
xor
xchg
clc
addr16
push
and
mov
sub
stos
shlb
or
cmp
iret
ud2
pop
sub
aam
shrl
dec
mov
jae
dec
xor
xchg
pusha
mull
pop
add
add
xor
jb
mov
xor
or
push
inc
insl
ret
xor
add
lock
add
cmp
push
lods
pop
test
adc
call
or
xor
jb
pop
jmp
pop
loope
inc
bound
dec
sub
sub
add
sub
je
out
inc
data16
jmp
js
jnp
div
dec
or
shlb
adc
jns
sti
add
and
fwait
mov
jle
push
shrl
lahf
pop
dec
sbb
push
rolb
je
in
nop
ds
xchg
jecxz
sbb
int3
sbb
dec
mov
dec
icebp
pop
mov
adc
dec
pop
xor
pop
mov
sub
push
jo
js
jno
hlt
jge
cmp
sub
iret
adc
mov
sub
clc
pushf
clc
add
loop
cwtl
and
jns
push
or
jns
cmp
test
jmp
cmpsb
jl
mov
shl
inc
mov
mov
bound
or
lcall
or
mov
push
xchg
jno
pusha
pop
lret
xchg
sarb
pop
cwtl
movsl
dec
or
add
and
in
sbb
dec
jne
add
imul
pop
lods
add
int
cmp
dec
xchg
test
loopne
adc
out
out
arpl
push
faddp
out
int
lds
loopne
sub
rcl
add
sub
push
jmp
push
andb
rorb
add
adc
add
xchg
into
cmpl
inc
jmp
push
add
insb
mov
in
mov
cmp
repnz
push
fnstsw
push
imul
xor
jbe
jae
mov
call
repz
pop
rcrb
lods
movsb
xchg
add
lret
scas
mov
pusha
jge
ret
and
fldl
pop
add
push
jmp
fildll
fidivrs
adc
jge
xor
sub
sub
mov
jno
sub
xrelease
daa
cmp
ja
sub
mov
cmc
dec
lods
mov
cmp
add
shll
add
daa
add
stos
ljmp
push
jmp
dec
add
or
or
push
jle
into
iret
cs
jbe
je
jmp
cmp
xchg
push
sub
pop
mov
sub
inc
push
in
sub
inc
sarb
mov
pop
jmp
ret
xor
aas
sbb
pop
pop
add
sub
inc
xchg
jp
dec
shlb
inc
jns
test
add
mov
pop
mov
push
jge
mov
inc
cmpsl
xlat
ret
or
sub
cmp
ret
push
lods
shrl
lret
add
sub
jb
icebp
addb
mov
push
shrl
jg
test
adc
fimull
or
fdivrl
mov
addr16
dec
jl
or
scas
inc
pop
jo
sub
sahf
xchg
adc
adc
stos
sbb
lods
add
sarl
cmp
mov
cmpsl
and
push
push
in
imull
mulb
jle
leave
dec
dec
addl
xor
int3
shl
ret
push
jmp
iret
push
adc
aad
mov
cli
pop
aad
call
shl
cwtl
mov
or
in
mov
jmp
mov
call
inc
aaa
sub
sub
adc
adc
push
rcrb
not
pop
bound
cmp
loopne
repnz
sbb
out
mov
cmpb
xchg
ret
test
in
add
push
roll
fld
out
add
xlat
lret
or
xchg
out
push
cli
mov
inc
push
ret
call
sbb
cmp
jg
cs
add
jno
or
insl
rorl
sub
and
into
push
into
add
shr
imul
push
cmpsb
popf
test
pop
pushf
or
push
push
test
loop
idivb
mov
mov
test
mov
inc
pushf
mov
inc
out
mov
loope
nop
add
mov
loopne
and
into
out
xor
mov
adc
int
fidivrs
mov
cmovb
clc
aam
add
pop
dec
mov
push
mov
xor
push
mov
and
mov
xchg
pop
and
or
dec
pop
loopne
not
add
lds
arpl
loope
jle
int
dec
je
mov
and
fsubl
dec
pop
mov
and
or
push
mov
or
dec
mov
pop
imulb
movsb
mov
inc
cli
sbb
push
bound
shr
shl
or
push
ret
fiadds
xor
xchg
repnz
jmp
lcall
sub
test
lret
pop
pop
push
and
js
sbb
sub
aas
add
push
cs
pushf
add
mov
and
dec
pop
test
dec
xor
dec
stos
mov
or
and
sbb
dec
aaa
sub
insb
and
fcomp
add
and
push
push
push
jbe
add
and
push
leave
jo
or
and
dec
add
push
jae
add
shll
out
mov
xlat
xchg
adc
add
in
fwait
addb
mov
ret
mov
add
add
push
enter
mov
xor
jl
sbb
lock
pushf
mov
cmpb
adc
adc
shrb
adc
outsl
jg
dec
mov
repz
je
decb
xchg
xchg
mov
lods
out
xorb
gs
mov
jmp
ja
dec
and
cmp
fldenv
and
insl
fdivl
and
fistpl
xor
jnp
mov
inc
ret
add
inc
in
sub
jle
cmp
mov
or
arpl
jns
imul
scas
pop
mov
bound
mov
and
into
adc
pop
sti
mov
jmp
imul
inc
sub
sbb
dec
add
fisubs
mov
outsb
dec
aaa
icebp
ss
and
daa
adc
int
les
test
je
testl
lea
jle
push
xlat
movsb
push
adc
xor
mov
push
push
sub
and
pop
and
daa
cmp
sbb
adc
stos
push
ret
lock
push
xchg
xchg
js
sbb
test
jecxz
mov
aas
test
dec
stos
mov
jl
and
pop
dec
das
mov
in
cmp
imul
inc
push
adc
test
cltd
mov
push
push
push
bound
lret
adc
sbb
sbb
dec
aad
outsl
adc
mov
stc
jae
cmp
pop
fldenv
adc
rol
jo
andb
pushf
xchg
mov
add
test
add
cwtl
pop
dec
adc
hlt
ljmp
dec
jl
orps
or
dec
int3
mov
test
jbe
jb
pop
and
and
sti
cs
filds
jne
int3
cwtl
int3
fisttpll
sbb
mov
je
mov
jle
addr16
add
nop
cmp
or
push
xor
lock
dec
pop
mov
sbb
jno
jne
and
and
add
sub
or
and
adc
enter
daa
cmp
dec
loope
icebp
dec
xor
jl
std
in
jnp
push
sub
pop
and
adc
inc
movsl
dec
add
mov
or
sti
fs
xchg
xor
repz
cs
sbb
add
rcrl
dec
adc
push
push
mov
cmc
jns
in
insl
or
enter
loop
pop
or
bound
sub
decb
clc
push
leave
jmp
data16
daa
std
mov
dec
gs
pop
int3
fisubrl
dec
test
dec
mov
shll
ret
mov
orb
insl
stc
in
adc
je
add
jge
test
mov
int
pop
and
push
loopne
xor
dec
mov
fisubs
shrl
call
push
hlt
sub
push
add
jo
push
insl
add
jnp
push
push
pop
ljmp
out
jg
enter
xchg
mov
nop
fcmovnb
inc
stos
push
or
rcrl
jp
xchg
shll
add
adc
xchg
mov
dec
add
sub
or
test
insb
loopne
or
repz
xor
mov
push
dec
mov
sbb
dec
clc
nop
insb
dec
aas
rcrl
mov
cmp
hlt
or
sub
add
fistl
add
lret
jmp
cs
icebp
aaa
mov
movl
out
pop
or
std
aaa
or
outsl
jmp
add
pop
dec
in
and
adc
inc
int
pushw
test
scas
sub
push
shrl
loop
cmp
inc
aam
in
adc
pminsw
mov
cmp
add
outsl
repz
add
push
adc
ss
aad
adc
insb
add
sbbb
sub
cmp
sub
es
dec
mov
add
push
add
jbe
cmp
int3
daa
or
jo
xchg
lods
lods
lret
int
push
mov
pop
push
pop
mov
xor
sub
mov
xor
add
adc
xor
in
stos
or
cmp
data16
push
jmp
lods
push
and
pop
xchg
and
into
xchg
inc
adc
or
pusha
test
pop
mov
push
scas
pop
dec
or
icebp
push
inc
dec
xchg
xor
insl
and
pop
inc
es
rol
fmulp
fisubrl
ss
inc
stc
shl
notb
cmp
flds
jle
les
pavgw
xor
pop
pop
or
adc
je
in
xchg
fldenv
bound
xor
shl
push
ljmp
in
push
clc
in
insb
mov
pop
dec
punpcklbw
jmp
loop
xchg
addr16
adc
sarl
jne
into
xor
or
stc
and
jecxz
mov
xchg
into
icebp
cmp
jnp
cmpsl
pop
push
push
int3
out
mov
daa
ds
xor
es
or
fdivr
push
push
in
mov
xor
sahf
add
repz
mov
int3
ja
call
push
sbb
and
call
push
das
sub
mov
int3
push
push
push
mov
cmp
insl
inc
inc
and
in
dec
rcll
push
jmp
push
xchg
test
jnp
in
adc
mov
jecxz
ss
outsl
cmpsl
sub
add
add
mov
pop
or
icebp
jp
and
pop
sbb
mov
add
shl
sub
cmp
outsl
add
add
test
inc
rcll
add
pop
jnp
push
dec
mov
int
sub
adc
pop
repz
push
mov
pushf
cmp
pop
lock
nop
lds
jg
loope
lock
fisttpl
lods
repnz
lock
pop
mov
adc
adc
add
push
push
daa
push
cmp
mov
cmpl
bound
pop
add
imul
sub
icebp
gs
out
and
pop
ja
icebp
push
les
add
mov
pop
shr
add
pop
sti
sarb
jns
and
add
sub
add
fiadds
pop
lds
push
dec
mov
adc
cmp
sub
xchg
and
enter
push
adc
add
mov
mov
adc
mov
lahf
pop
movsb
mov
shrl
adc
cmp
inc
jmpw
cmp
jecxz
loopne
dec
adc
fwait
pusha
sbb
xor
fists
push
jo
mov
lods
cld
mov
or
and
cmp
sub
add
and
imul
sub
pop
pop
rep
sbbl
and
dec
ljmp
leave
dec
stos
adc
sbbl
inc
fldenv
fs
cmp
mov
or
out
ret
cwtl
pusha
or
xor
xchg
leave
and
sahf
and
jae
push
sub
imul
dec
pop
dec
scas
mov
jne
inc
mov
js
dec
inc
outsb
imul
push
pop
dec
push
pop
xor
add
add
jmp
inc
mov
push
push
inc
add
sbb
pop
or
ds
in
add
adc
enter
jg
push
test
pop
ss
aas
das
and
leave
pop
repnz
or
or
pop
pop
push
dec
sbb
mov
jg
test
lcall
lret
push
xlat
call
jp
fucomp
xor
cmp
test
aas
push
negl
add
pop
or
shll
out
and
sbb
mov
adc
pop
push
mov
mov
push
cmp
push
mov
sub
pop
push
cs
adc
xchg
or
push
sub
jae
or
or
sbb
or
sbbb
inc
push
push
pop
pop
out
xor
push
add
dec
lret
pop
push
push
sub
scas
sub
int
push
sbb
sarb
mov
in
inc
jno
cmp
in
dec
enter
jecxz
lds
push
mov
test
out
ljmp
mov
xor
pop
cltd
add
pop
mov
cmp
jg
sbb
add
and
pop
push
mov
hlt
rcl
add
pop
stos
add
adc
movsb
mov
jns
or
jecxz
subl
add
out
sbb
jbe
scas
dec
pop
jbe
mov
xlat
xchg
dec
jge
insl
mov
jnp
jbe
shl
jg
lods
mov
dec
xchg
jnp
mov
mull
repz
stos
or
gs
dec
pop
mov
and
test
leave
popf
sbb
fs
js
or
addb
mov
jp
popa
fsubs
jmp
mov
xor
lret
lret
inc
sbb
das
insl
push
lock
xor
and
aam
or
shll
sub
fcom
mov
pop
pop
jle
imul
xchg
mov
imul
mov
push
lods
push
mov
repnz
adc
lret
sbb
std
and
in
or
std
mov
std
xor
push
push
pop
dec
pop
mov
in
mov
test
pop
leave
fcomps
in
add
mov
or
inc
and
jge
ja
mov
or
push
sbb
add
sub
mov
std
ljmp
sub
jnp
and
fcomps
lahf
dec
add
ljmp
xchg
inc
adc
js
repnz
inc
leave
mov
add
lock
and
jae
push
adc
es
mul
pop
adc
add
jmp
subl
mov
xchg
pop
jo
adc
repz
xchg
dec
das
push
or
mov
rolb
dec
or
lock
and
and
adcl
xchg
scas
imul
pusha
mov
add
ds
adc
repnz
test
pop
ljmp
push
add
cwtl
outsb
push
adc
and
mov
xor
xchg
clc
adc
jmp
mov
addb
inc
rcr
arpl
xchg
or
stc
jecxz
icebp
add
cmc
push
cmp
cmp
jno
pop
sbb
lds
mov
dec
push
leave
dec
sub
or
push
data16
pushf
inc
pop
sti
pop
out
and
push
mov
leave
pushf
hlt
fsubrl
dec
insb
sub
and
add
inc
xchg
inc
and
adc
cltd
sub
and
push
lahf
addb
xor
roll
xor
repnz
and
sub
ds
outsl
and
push
inc
xchg
sbb
add
mov
repnz
mov
xchg
iret
mov
dec
inc
aas
xor
test
jge
or
add
xchg
imul
push
mov
cmpl
mov
sub
xor
cmpsl
js
lret
inc
or
adc
fcomp
loope
fidivs
cmp
lret
push
loop
pop
loopne
pusha
mov
mov
fldt
cwtl
push
cmp
add
add
gs
pop
scas
notb
xor
jbe
add
cmc
or
out
addr16
bound
jns
rcr
in
test
and
xor
sahf
aam
xchg
std
jo
ret
ds
popa
and
lds
add
jmp
cmp
jb
and
jnp
data16
cmp
pop
dec
ret
inc
pop
and
dec
add
es
add
enter
xchg
or
mov
ret
enter
daa
push
jp
xchg
clc
aad
or
or
xor
push
pop
sti
pop
daa
in
mov
addr16
mov
and
push
data16
clc
sub
outsl
cmp
clc
loop
imull
rcrb
enter
lcall
js
popf
outsb
in
xchg
popf
out
ret
sbb
in
sub
add
add
jg
pop
mov
adc
cld
sbb
neg
adc
insl
movsl
sbb
or
mov
jno
mov
push
fsts
jns
jmp
rcr
cli
mov
inc
push
int
testb
jge
les
add
out
inc
inc
bound
push
test
mov
sbb
adc
jbe
cmp
cmp
out
jmp
xor
cmpsl
scas
mov
fstps
sub
sub
dec
ljmp
jmp
loop
out
jl
adc
jmp
lret
add
out
xchg
or
jmp
add
dec
push
es
push
mov
pop
pop
adc
aaa
test
popf
push
push
nop
adc
pop
inc
dec
mov
push
in
dec
push
mov
push
dec
stos
jbe
je
mov
and
dec
cwtl
pop
and
dec
jae
adc
push
mov
repz
dec
out
xor
push
test
out
daa
jle
xchg
jnp
push
or
fildl
sub
sub
or
lret
cmpb
mov
negb
mov
push
jmp
xchg
xor
add
clc
pop
scas
or
push
pop
inc
dec
in
xlat
xchg
fwait
xchg
leave
loop
das
shrl
int3
aam
push
push
das
pop
mov
filds
or
jmp
test
push
xor
ljmp
lret
int3
jge
xchg
xchg
push
push
movsb
outsl
cmp
push
and
sub
sub
add
daa
ficomps
dec
dec
pop
jae
jmp
jmp
cmc
or
pop
add
lock
mov
sub
jmp
mov
adc
ja
add
pop
jmp
lods
cld
rorb
fs
adc
int
jnp
jl
xchg
sbb
mov
loope
inc
es
and
push
je
sub
js
xchg
ja
cmp
dec
inc
nop
dec
pop
dec
xchg
jp
cmp
xchg
push
inc
insb
outsb
sbb
mov
inc
or
push
cld
idivl
pop
inc
add
jb
clc
and
cmp
mov
clc
div
jmp
sub
sub
xchg
ffreep
cmp
mov
les
dec
movb
pop
rclb
push
jnp
aam
pop
or
xchg
lods
lret
mov
cmp
dec
or
xor
mov
xchg
dec
or
je
adc
js
daa
popf
lock
test
sahf
push
data16
in
imul
stos
mov
xchg
mov
xor
cld
arpl
inc
rcrl
add
sub
sub
addr16
adc
pushf
cmp
dec
and
out
int
aam
pop
add
fs
jmp
dec
and
dec
or
dec
leave
lock
and
and
add
cmp
jns
and
test
push
dec
inc
push
stos
mov
cmp
add
hlt
cmp
pop
add
inc
add
clc
push
sbb
push
push
push
push
mov
dec
aam
push
pop
ja
or
cmpsb
scas
mov
pop
add
enter
out
xchg
push
cli
jo
jmp
add
adc
cmpl
sbb
add
dec
ljmp
push
inc
jp
ret
dec
push
stc
and
pop
mov
jg
cmp
xlat
adc
pop
popl
sub
fdivs
adc
mov
ret
push
enter
push
push
in
and
in
gs
add
sub
jo
and
fstp
leave
test
mov
sub
mov
push
fadds
jmp
idiv
test
push
les
mov
addl
dec
cld
or
imul
pop
push
das
jp
mov
push
in
daa
xchg
adc
push
add
xchg
icebp
and
lret
mov
or
test
mov
jge
mov
jb
pop
mov
push
ja
shrb
push
and
mov
push
ja
movsl
jne
lods
add
jl
cmp
pushf
adc
xchg
pop
mov
sub
fcompl
add
call
mov
subl
inc
or
sub
jo
push
mov
cmp
mov
loopne
cmpl
das
and
add
stc
sub
aas
out
push
mov
ret
push
xchg
fisttpl
scas
cmp
cmp
inc
hlt
movsl
pop
nop
sub
pop
sahf
sub
decl
jge
and
popf
cltd
dec
sub
nop
neg
push
mov
xor
fldl
addr16
mov
xor
jmp
pop
push
jae
mov
jns
shrl
cmp
lret
out
loope
pop
test
inc
mov
cmp
repnz
mov
jae
shr
lock
rcrb
push
shrd
dec
pop
orl
adc
jle
mov
out
push
lods
and
add
push
and
in
pop
lret
inc
es
cmpb
repz
add
das
jmp
inc
cmp
jne
jmp
pop
mov
popa
mov
mov
push
mov
shrb
jg
test
push
xor
incl
std
sbb
gs
mov
cmp
shll
xor
and
insl
mov
jbe
cmp
xchg
je
cmp
inc
shrb
inc
xor
push
mov
inc
and
mov
call
mov
push
inc
mov
fbld
mov
adc
and
xchg
scas
pop
ret
out
and
jmp
xchg
mov
or
test
rcl
mov
or
dec
xor
adcb
add
into
mov
push
adc
and
push
xor
xchg
cld
sbb
add
idivb
push
cmp
fs
mov
cmpb
and
inc
shl
add
push
or
xor
xor
das
push
jl
xor
inc
xchg
sarb
xchg
mov
cmc
rcll
sub
fcompl
fwait
sbb
xchg
xor
cld
mov
push
mov
dec
jmp
and
adc
add
jg
sbb
cwtl
out
pop
cmpsb
inc
dec
bound
mov
cmp
mov
push
mov
cmp
jp
jge
push
filds
and
jmp
rclb
and
push
pop
in
pop
dec
sub
mov
xchg
repz
pop
in
sahf
loope
scas
jnp
mov
add
lods
lahf
fdivrs
test
jo
loope
pop
add
inc
in
pop
pop
sbb
cmp
mov
add
push
mov
aad
scas
scas
mov
xor
xchg
cmpsl
inc
mov
test
cmc
in
dec
add
push
add
inc
sti
or
adc
testl
std
add
add
mov
jmp
xor
push
add
pop
inc
sbb
jmp
inc
xor
outsl
mov
or
xchg
imul
pop
xchg
stos
add
pop
movsl
clc
shlb
cmp
xor
mov
out
cmp
mov
cs
and
or
push
xor
cmp
inc
xchg
gs
out
pop
xchg
cmpsl
loopne
shll
jmp
sarl
inc
dec
jmp
add
out
add
divl
mov
push
rorb
lock
or
adc
adc
or
loopne
dec
dec
rcl
push
and
pop
and
adc
pop
or
xor
mov
dec
or
rolb
mulb
loope
push
fstl
sti
and
add
divb
push
sub
and
das
hlt
sbb
lock
add
inc
fs
push
outsl
cmp
jo
mov
xor
inc
dec
sub
add
out
pop
inc
sub
jmp
out
mov
cmp
pop
pop
arpl
aas
fwait
sti
pop
push
push
stc
fnstsw
jo
dec
mov
pop
push
xor
add
adc
jb
ficoml
mov
hlt
dec
out
and
jg
daa
test
fs
pop
or
jmp
mov
fdivs
out
fstpl
add
cmp
notl
or
inc
imul
iret
inc
jecxz
cwtl
stos
push
pop
inc
in
inc
cmp
dec
shlb
loopne
add
dec
push
scas
cmp
inc
jmp
jnp
dec
std
mov
rcrb
mov
jns
movsl
cld
cmp
mov
mov
repnz
jl
adc
and
pop
pop
movsb
adc
mov
lds
mov
mov
sub
cwtl
cltd
rclb
dec
loope
sub
and
xorl
out
arpl
aaa
pop
jp
and
and
sub
in
add
scas
push
pop
popa
sub
jecxz
add
jmp
int
sub
adc
shlb
subl
insb
and
cmc
push
or
enter
or
int3
cmpsl
test
call
cld
xor
sbb
lods
inc
cmp
mov
push
push
add
call
rcrb
mov
cs
sub
push
sub
and
cmc
inc
and
push
jne
icebp
cld
lods
idivl
fldl
and
bound
iret
in
dec
outsb
add
mov
outsb
sbb
jle
insb
push
xorl
sarb
jo
imul
sbb
mov
adc
xchg
dec
hlt
push
jns
test
ret
incb
sub
cmp
mov
pusha
lds
dec
imul
into
cli
push
sub
mov
push
sub
js
jmp
ja
enter
mov
jmp
xchg
pusha
pop
push
enter
pop
xor
lret
xchg
xchg
test
pop
les
sbb
imull
add
mov
sub
mov
daa
jmp
inc
addb
mov
test
sub
rcll
add
into
icebp
add
push
xor
cs
mov
cli
sar
adc
push
dec
xchg
pop
mov
push
mov
adc
push
cmp
movsb
mov
test
cli
jmp
les
imull
std
in
pop
ja
push
or
ret
dec
fwait
aaa
scas
ljmp
adc
in
pop
lahf
repz
imul
icebp
das
push
or
push
push
pop
pusha
jb
adc
push
adc
inc
adc
dec
jle
nop
stos
or
jle
sbb
sub
shlb
lods
idivl
push
push
fisubs
mov
dec
jmp
jno
pop
or
daa
add
mov
shll
mov
or
into
push
push
sbb
inc
push
outsl
pop
pop
mov
jmp
jnp
test
sub
stc
jmp
mov
or
addl
shr
leave
out
lahf
adc
icebp
pop
ret
loop
pop
adc
mov
push
sub
sbb
in
push
icebp
inc
and
mov
sahf
push
pop
pop
and
add
int3
mov
shl
repz
push
add
data16
inc
fistpll
cwtl
xor
and
shll
movd
or
sub
pop
sti
add
movsb
popa
sbb
xchg
mov
sbb
orb
and
pop
test
mov
rclb
cwtl
shlb
ret
stc
adc
add
or
add
pop
sub
mov
push
dec
lahf
out
dec
mov
or
cmp
dec
add
push
jecxz
and
ss
mov
cmp
in
pop
ljmp
jo
push
in
rorl
je
call
mov
xchg
mov
dec
scas
popa
push
jne
sub
hlt
sub
repz
popa
and
add
inc
movsl
sbb
add
push
pop
xchg
sub
mov
stc
imul
aaa
outsb
inc
aam
or
fiaddl
xor
mov
or
or
and
repnz
cmovp
enter
inc
jne
inc
sub
cmp
lahf
and
dec
dec
sbb
in
mov
fidivl
out
adc
daa
leave
sbb
pop
daa
cmp
pushf
pop
adc
int3
mov
call
aaa
and
loope
sub
repnz
loope
into
xlat
and
pop
cmp
das
mov
xor
dec
imul
jmp
out
lahf
repz
jg
adc
jnp
mov
add
and
jbe
popf
jno
or
movsb
mov
xchg
xchg
mov
lcall
xor
hlt
outsl
loopne
nop
jmp
repnz
pop
adc
cli
pop
pop
mov
repz
pop
push
adc
pusha
ds
pop
pop
cmp
and
je
lea
sbb
adc
aad
cmp
xor
mov
jl
ret
mov
cltd
mov
cmp
cmp
dec
add
mov
mov
leave
nop
stos
add
pop
test
inc
incb
jb
sub
and
inc
pop
mov
dec
adc
push
mov
jmp
xchg
sbb
adc
jmp
or
pop
addl
jg
push
sbb
push
movsb
into
scas
sahf
and
dec
mov
add
mov
cmp
scas
lock
pop
in
adc
jne
enter
add
out
and
add
subb
pop
xchg
xchg
add
sub
ljmp
daa
dec
pop
mov
lret
fisubrs
jle
add
add
ds
inc
call
addr16
icebp
jl
jmp
nop
lds
pop
mov
add
ljmp
jno
mov
rcrb
pop
fisttpll
dec
inc
sub
or
fcomip
fstpt
ds
jno
and
fsubl
mov
shll
or
loop
fimuls
ror
addb
cmp
push
sub
fsts
insb
scas
jl
mov
movsl
add
cmp
jl
mov
mov
mov
mov
nop
lcall
xor
imul
dec
cltd
or
popf
lcall
inc
ret
addr16
nop
dec
xchg
and
sbb
bound
fs
and
pop
lods
loopne
sub
add
loop
push
repnz
sub
mov
pop
orb
ret
or
in
in
out
adc
pop
and
call
pop
faddp
inc
insb
fs
sub
inc
sbb
adc
cwtl
cmp
inc
ds
sub
mov
pushf
push
sub
xchg
jle
mov
xorb
push
add
lret
dec
and
hlt
jb
sbb
add
das
pop
jbe
insb
inc
call
mov
das
jae
test
adc
loope
push
xchg
xlat
cltd
ljmp
xchg
mov
xchg
xor
in
sti
or
nop
push
pop
push
adc
daa
push
fldt
push
push
mov
insb
es
cmpsl
fistl
dec
lret
jecxz
cli
popa
insl
popa
xor
andb
int3
not
pop
sub
or
pop
push
xchg
inc
lahf
cwtl
cs
mov
cmpl
loope
fwait
add
sbb
insb
push
loope
and
pop
pop
push
aas
add
add
push
shrb
clc
popf
pop
lea
xor
mov
cmpb
mov
adc
xchg
cmp
and
mov
scas
icebp
sub
std
or
pusha
inc
fnstsw
xor
xabort
js
push
push
test
xchg
adc
ret
push
jne
add
js
in
push
add
cmpsb
jmp
popa
lock
pusha
mov
call
mov
fs
outsl
dec
inc
cld
xor
push
add
test
mov
ret
or
push
pop
js
cmpb
arpl
jmp
dec
dec
dec
pushf
jne
dec
test
sub
hlt
enter
xchg
lock
add
fisubrs
dec
mov
mov
and
mov
into
adc
push
xchg
lcall
or
mov
pop
pop
jmp
test
pop
and
cli
jge
pusha
mov
bound
std
sbb
xchg
xor
push
enter
mov
add
mov
push
or
scas
shlb
and
xor
push
loopne
fisubrl
jp
xor
je
bound
cld
sbb
mov
jp
sub
test
mov
cmp
jmp
dec
jns
add
sub
and
push
dec
push
mov
jge
inc
xor
cli
push
add
scas
push
jle
shr
pop
xor
test
adc
cli
push
adc
adc
or
fnsave
xchg
andl
bound
pop
pop
out
xchg
sub
or
daa
loope
jno
gs
out
pushw
mov
xchg
push
push
mov
jb
int
inc
xor
xorb
cmp
test
add
shlb
ret
dec
or
mov
das
push
es
inc
adc
push
iret
sbb
adc
push
pop
mov
mov
sub
mov
rcr
and
xor
aas
add
shlb
int3
or
dec
push
add
pop
mov
cmp
pushf
jmp
out
jb
or
pop
xor
cmp
dec
fwait
add
and
jmp
pop
mov
mov
fs
bound
inc
jae
stc
sub
mov
mov
and
pusha
inc
dec
insl
shrb
cli
ret
roll
or
lods
add
jmp
ds
push
jmp
inc
jle
outsl
and
sub
test
push
xchg
mov
and
pop
push
cmp
mov
push
adc
and
dec
inc
jmp
xor
pop
push
repz
subl
adc
add
sarb
mov
xchg
test
lea
fisubrl
xor
cltd
js
dec
push
mov
mov
mov
fwait
daa
mov
inc
mov
in
pop
xchg
rorb
sbb
dec
or
push
mov
adc
shrb
jmp
pop
add
in
xlat
cltd
rcll
mov
push
jns
pop
and
inc
and
not
mov
and
cmpsl
or
sbb
add
out
push
iret
in
pop
mov
scas
lcall
add
inc
xor
mov
push
adc
jmp
xchg
int3
add
arpl
pop
jmp
mov
adc
out
inc
or
mov
and
imul
test
cmpsl
lea
pop
push
iret
mov
pop
jo
jge
je
jno
push
adc
xchg
jp
add
add
xor
repnz
mov
aam
push
shlb
jge
add
mov
inc
pop
add
jl
mov
in
fdivl
mov
pop
pop
js
test
inc
cmc
andl
jle
lock
shrb
mov
dec
mov
xchg
or
mov
mov
pop
pop
dec
inc
jmp
mov
rclb
ljmp
adc
inc
mov
or
xchg
fisubrs
adc
pop
test
lret
and
mov
pusha
jo
jmp
data16
cmp
icebp
lret
out
jg
pop
xchg
popa
scas
rclb
ret
mov
scas
push
dec
adc
pop
aas
mov
movsl
scas
mov
mov
test
push
xlat
mov
adc
pop
and
pop
dec
pop
stc
xor
push
cmc
xchg
add
pop
cltd
add
je
das
mov
ret
push
dec
jle
add
lods
pushf
push
cmpsb
pusha
lods
outsb
or
xchg
mov
les
roll
jns
add
dec
pop
stos
rolb
imul
mov
sub
sbb
sbb
or
and
scas
inc
adc
call
ds
icebp
ficomps
jo
xchg
mov
call
mov
pop
cld
xchg
pop
sub
lods
cld
fs
push
pusha
dec
cmp
shll
jp
xchg
inc
or
jmp
mov
loope
or
mov
es
arpl
cwtl
sbb
jl
loope
or
mov
cltd
push
aas
daa
lret
and
xor
gs
xchg
dec
iret
pushf
lods
adcb
jecxz
sbb
pop
push
inc
inc
mov
out
cmp
jo
push
mov
push
push
push
stos
jbe
pop
imul
sarl
inc
push
push
in
daa
pop
push
andb
push
lahf
or
orb
in
in
lock
loop
dec
cmpsb
mov
mov
jbe
jb
sub
add
fnsave
adc
inc
rcrl
sbb
pop
icebp
xor
dec
push
add
inc
loop
dec
or
mov
xor
jmp
clc
xor
or
jmp
or
pop
in
cmp
mulb
fsubr
lods
cmp
add
mov
int
or
subl
shr
in
sbb
loope
jmp
popf
push
mov
and
cmp
pop
mov
adc
outsb
imul
xchg
dec
xchg
jnp
scas
and
rolb
add
cwtl
daa
das
lcall
mov
jmp
xlat
adc
push
mov
add
jmp
leave
add
cld
jmp
aas
jmp
mov
fstl
or
push
mov
xchg
pop
cli
and
push
jge
es
sub
add
pop
push
add
jmp
jmp
lock
outsb
stos
sbb
mov
aas
push
adc
inc
add
loope
dec
out
lret
xchg
mov
js
mov
lds
and
lock
mov
mov
sub
aaa
std
mov
lods
cli
bound
push
dec
lret
xchg
daa
push
dec
sbb
and
adc
mov
popa
jg
pop
pop
cmp
cmp
mov
jecxz
sub
lods
push
add
xor
ficompl
ret
or
mov
xchg
pop
xor
mov
aaa
mov
push
push
aaa
ds
xor
leave
ja
add
fdivrs
or
and
js
subb
lds
add
and
jo
das
adc
jp
xor
push
cmp
arpl
lea
pop
insl
and
mov
add
popa
inc
sbb
aas
test
sbb
test
or
jne
add
pop
adc
out
dec
push
shll
dec
xor
pop
xor
pop
enter
fstpl
cs
orl
imul
pop
sub
scas
lcall
jns
mov
mov
mov
in
mov
pushw
and
mov
loope
cltd
add
xor
or
mov
xor
pop
push
dec
pop
inc
and
int
jae
mov
mov
inc
push
into
xlat
push
xchg
add
xchg
mov
pop
and
or
or
xchg
outsb
ror
je
cmp
push
lds
rcl
rcrb
push
test
popf
lock
notb
imul
pushf
lcall
push
sub
xchg
mov
loope
jp
mov
out
popf
xor
jne
inc
subb
int3
add
shl
push
mov
mov
push
cli
outsl
xor
push
call
inc
xor
imul
shlb
subb
or
add
push
pop
mov
pop
jne
push
cmpsl
push
lds
adc
cmpsb
out
add
outsl
outsb
dec
out
cmpl
rcll
jge
inc
cld
cmp
popf
hlt
cli
popa
jecxz
and
out
dec
stos
sub
jmp
xor
inc
pop
push
sbb
out
xchg
loop
sub
mov
stc
sti
ds
jg
jbe
sub
loope
fiaddl
and
sbb
inc
jl
push
inc
cwtl
fcoms
test
mov
add
icebp
out
xor
stos
inc
insl
push
add
or
adc
mov
fs
les
pop
sarb
movb
push
push
mov
dec
in
cwtl
pusha
sub
test
xchg
add
push
mov
or
pop
xchg
pop
mov
bound
testb
pusha
pop
sbb
sub
and
jge
jg
or
jge
jle
rcrl
js
adc
fldt
jo
add
pusha
les
mov
mov
adcb
jecxz
mov
push
adc
stos
emms
jns
fs
pop
lods
insb
jl
xor
sub
gs
fs
cmc
push
ret
push
or
cmp
pop
sbb
dec
inc
add
adc
and
push
sub
xor
cmpsl
jbe
jo
cmp
test
div
int3
fwait
nop
mov
push
das
pop
xchg
cli
jecxz
cwtl
push
popa
jae
inc
ret
clc
ljmp
mov
ret
incl
out
loop
push
add
daa
sbbl
leave
xor
push
mov
cmc
adc
push
in
test
cmp
lcall
add
or
add
sbb
xchg
jne
push
icebp
repz
xor
push
or
inc
ja
sbb
sbb
add
scas
cmp
filds
jl
and
iret
idivb
bound
or
stos
lea
clc
dec
roll
inc
aaa
cmp
push
mov
pop
mov
aam
aas
cmp
pop
ret
inc
fldl
leave
es
inc
xor
fnstcw
xchg
pop
orl
sbb
les
or
mov
push
or
jmp
xchg
cmp
clc
xchg
cmp
pop
inc
mov
inc
cmp
mov
and
jno
rclb
pop
js
add
or
lcall
xchg
xchg
sub
leave
adc
scas
lds
inc
and
add
lret
or
push
pop
mov
insb
pop
movsb
lock
push
lds
sbb
rcr
adc
pop
mov
or
pop
pop
mov
and
add
mov
inc
loope
jnp
sbb
insl
int3
sub
das
add
mov
jg
inc
rcll
lret
and
rcrl
xchg
movsb
data16
stos
subl
jae
or
or
fsubrl
jmp
and
std
mov
fdivrs
lods
lret
push
lods
sub
ljmp
dec
pop
mov
test
jge
xlat
das
sub
push
jmp
frndint
addl
loop
or
jb
adc
repz
jl
jb
movsb
sub
or
inc
pop
jmp
adc
pop
shl
popa
cwtl
jp
and
ja
in
push
jnp
rorb
loopne
mov
add
cmp
jmp
out
pop
jno
imul
adc
mov
or
jmp
out
sbb
shlb
add
pop
in
dec
adcl
mov
adc
insb
hlt
std
add
sub
add
cmp
dec
inc
or
push
sub
imul
inc
jne
fidivs
out
inc
mov
cmp
rorl
jae
and
or
lahf
dec
jmp
cli
mov
clc
fmuls
pop
adc
loope
fldcw
jnp
daa
pop
push
popa
orl
jno
jl
pop
sub
pop
push
in
pop
jno
or
mov
inc
iret
fbld
in
mov
stc
pop
pop
mull
mov
jmp
xor
dec
lods
dec
adc
repnz
gs
push
es
push
ret
push
mov
stos
lahf
fadd
daa
jmp
call
daa
jl
sub
lock
xor
das
nop
rcrl
pop
jns
out
and
add
addl
sbb
sbb
lahf
lret
push
filds
pushf
cmp
or
mov
push
xor
daa
pop
fimull
add
xor
jmp
stos
xchg
dec
rorb
add
aad
or
inc
dec
add
pop
neg
xadd
add
aam
add
and
jmp
fcomp
stos
mov
in
outsb
mov
jle
mov
test
scas
scas
mov
out
xor
leave
ret
jbe
mov
and
xor
pop
inc
fists
push
and
ljmp
mov
push
push
mov
stc
xor
xchg
in
mov
dec
or
add
add
rorl
or
sub
inc
push
sbb
or
lock
mov
inc
mov
and
jmp
cmpsb
lret
imul
adc
test
stos
xor
sti
idivb
rcl
push
cltd
fisubrs
hlt
cmc
lods
insb
cmp
in
lcall
jge
loopne
add
sub
jle
xchg
xchg
mov
xor
lret
loope
aam
adc
or
push
jbe
sbb
or
bound
lret
repz
fs
mov
daa
adc
stos
dec
add
mov
movsl
rorl
add
mov
into
shl
xchg
in
ret
adc
xchg
mov
dec
sahf
add
mov
fstpl
int
mov
xchg
jno
pusha
jno
xorb
ret
dec
lock
push
cli
push
mov
and
jmp
stos
or
test
mov
sub
fisttpll
popf
add
jmp
mov
xor
sbbb
testb
mov
lods
dec
aad
sub
xor
pop
or
add
lret
adc
stos
and
sbb
adc
pop
jg
and
in
sbb
jnp
push
dec
leave
test
cs
and
into
cmp
testb
xchg
jmp
aas
mov
sbb
push
dec
out
pop
fsub
fsubrs
dec
je
adc
jb
xor
xchg
xchg
inc
in
aad
pop
movsb
jne
xorb
push
fs
mov
mov
lock
pop
lahf
call
sub
cmpl
jmp
js
xor
cltd
and
dec
nop
dec
dec
cmp
outsb
push
lods
cmp
ja
fisubrs
push
shlb
adc
or
mov
cs
ffreep
dec
faddl
pop
mov
xchg
and
rcrl
popf
jbe
lcall
mov
jp
cld
ret
lahf
mov
mov
xchg
arpl
adc
fsubrs
test
cwtl
mov
mov
dec
and
out
test
ret
or
and
mov
cld
and
fnstcw
hlt
dec
mov
jo
mov
mov
adc
sti
xlat
cmpsl
movsl
dec
nop
fcoms
pop
imul
es
lods
pop
call
das
pop
into
mov
inc
ret
mov
push
xchg
xor
jbe
sbb
adc
subb
jne
push
push
pop
pop
push
movsb
inc
std
add
jo
int
and
push
fidivl
daa
sti
dec
adc
inc
xor
dec
pop
mov
inc
sub
sbb
jb
bound
lret
push
pop
dec
sub
mov
push
xchg
cmp
aaa
push
lcall
pop
and
dec
std
out
mov
fucom
aam
mov
xor
push
sahf
subl
or
add
sub
xchg
insb
mov
sub
or
adc
mov
leave
push
sub
in
inc
lock
mov
dec
inc
cmp
pop
xor
movsb
inc
int
push
popf
inc
jnp
aaa
test
test
cmp
mov
lret
adc
pop
add
shll
ja
pop
inc
orl
xchg
inc
dec
push
test
xchg
xor
dec
push
loop
mov
inc
dec
sub
mov
mov
pusha
xchg
mov
mov
sub
inc
add
pop
loope
in
push
sbb
ljmp
inc
pop
push
iret
inc
jl
mov
mov
sub
fucom
push
insb
mov
mov
shlb
inc
fdivs
lock
dec
out
or
mov
mov
fbld
or
or
and
xchg
add
sub
loopne
push
sub
push
pop
cmp
sbb
pop
mov
scas
lret
push
lahf
mov
push
xchg
in
and
pop
in
mov
sub
shll
jg
in
jmp
xchg
adc
int3
mov
add
add
add
jne
pop
or
xchg
mov
sub
adc
dec
in
jb
sbbb
or
outsb
mov
push
push
lret
cmc
pop
pusha
jb
subb
mov
imul
or
divb
rcl
xor
or
daa
pop
rcr
mov
push
rcrb
subb
mov
daa
add
inc
sub
out
rolb
icebp
cmp
xchg
sbb
lock
sbb
sahf
ljmp
addb
add
sub
cltd
test
cmpsb
hlt
daa
stc
cwtl
shlb
sbb
jb
inc
fcoms
add
fwait
or
jmp
ljmp
mov
es
push
push
inc
mov
fstpl
push
jbe
add
mov
xchg
and
push
js
add
or
test
out
adc
cmp
jmp
into
hlt
push
lret
cmp
lock
movsb
outsb
jbe
stos
les
scas
repz
and
jmp
sub
mov
inc
shlb
pop
aad
inc
scas
roll
add
pop
inc
or
inc
in
adc
out
maskmovq
testl
sbb
shrb
or
jnp
mov
jne
mov
fisubrl
lds
and
adc
scas
cmp
dec
push
scas
fidivrs
xor
cwtl
and
and
jne
mov
popa
ds
jne
xor
sub
inc
and
or
mov
pop
scas
add
repz
clc
xchg
push
and
or
psrlq
lcall
cmp
jp
push
out
into
sub
fadd
push
mov
mov
aad
js
and
sub
fmull
cmp
sahf
or
inc
or
sub
push
repnz
fisttpl
inc
inc
cmp
xchg
cmp
or
outsb
movsl
pop
add
or
rorl
mov
test
xor
or
pop
sub
pop
pop
lret
or
push
pop
ss
pop
addr16
cmpsb
xor
aad
inc
call
add
cmp
icebp
sbb
mov
mov
cld
movsl
fldl
out
movsl
fdivl
jmp
mov
pop
sbb
adc
clc
sub
dec
fnstsw
adc
pusha
shrl
push
fdivl
incl
mov
xchg
pusha
cmp
push
mov
divl
pushl
fimuls
mov
lock
jmp
mulb
pop
pop
sub
sub
ljmp
gs
mov
test
jp
orb
xor
push
insb
mov
jmp
outsl
push
jmp
lcall
mov
sub
add
jmp
push
add
fnstenv
xor
xor
or
mov
pusha
adc
sbb
pop
add
push
loop
pop
xchg
mov
repz
push
out
ret
push
add
jno
xlat
add
out
rol
adc
clc
loop
mov
rolb
sbb
out
std
fucomip
lods
cmp
dec
cld
xchg
push
shrl
xchg
mov
aas
bnd
cmp
not
mov
cmpsl
dec
mov
cmp
push
lret
adc
jmp
lods
jp
scas
and
jle
add
xlat
sub
cmpsb
ret
cmp
jno
sub
xor
cmp
cwtl
pop
and
enter
push
js
and
lahf
dec
push
xor
inc
cmp
pop
pop
push
imul
cmp
push
add
addr16
pop
call
in
mov
aas
std
sbb
jne
int3
inc
repz
pop
pop
inc
nop
cli
gs
addr16
and
or
dec
imul
or
add
push
fnstenv
pop
aad
mov
or
mov
lods
andb
das
sub
pop
sbb
jmp
xorl
pop
push
add
add
shl
cwtl
inc
inc
mov
dec
in
pop
jo
fsubrs
jns
loopne
movsl
fdivrp
mov
pop
fsubs
xor
arpl
add
imul
push
and
ds
sbb
inc
or
mov
adc
data16
imul
pop
jmp
das
ret
xor
rcr
les
inc
adc
push
pop
cmp
in
loope,pn
or
mov
mov
ljmp
rol
cmc
pop
and
jp
sahf
popf
mov
push
mov
push
loopne
rclb
push
outsb
pop
fdivs
sbb
mov
push
adc
sbb
arpl
push
enter
or
inc
push
jns
dec
jge
cs
sti
adc
sub
cmpsb
popa
adc
enter
and
xchg
push
xor
and
jne
nop
ret
pop
pop
push
insb
outsb
das
xor
jbe
pusha
ret
sub
add
jmp
cld
inc
push
fs
mov
cmp
ljmp
cmpsb
adc
push
pushf
xchg
sub
inc
ror
or
fistl
xchg
add
pop
push
leave
jl
les
inc
pop
mov
mov
cltd
daa
jmp
adc
aaa
mov
and
out
data16
or
es
pminsw
scas
push
fs
ljmp
push
das
or
xlat
andb
jb
xchg
pop
mov
adcl
mov
pusha
xchg
cmp
loope
and
mov
in
push
cmc
pop
add
add
sub
adc
mov
or
jbe
push
sahf
scas
pop
movsb
pop
mov
dec
mov
shrb
add
mov
repnz
insb
xchg
mov
xor
inc
jmp
testb
pop
fs
pop
pop
stos
inc
fbstp
lea
xor
dec
and
dec
inc
mov
or
push
inc
test
jo
cwtl
inc
cmp
lock
cltd
pop
mov
mov
jne
xchg
xchg
sub
jg
cmp
inc
dec
pop
sbb
mov
icebp
cmp
call
or
push
push
pop
jmp
aad
adc
xchg
neg
xchg
loop
orb
out
jmp
mov
push
add
adc
add
push
test
push
cwtl
in
or
or
mov
in
sbbl
inc
mov
addl
jmp
or
stos
pop
xchg
jne
outsb
mov
pop
nop
rcll
sahf
dec
mov
push
push
mov
int
pusha
or
daa
mov
jnp
sbb
xor
pop
sub
cmp
sub
test
xor
stc
mov
dec
pop
xchg
xchg
pop
cwtl
add
mov
std
je
pop
in
push
hlt
inc
sbbb
inc
lret
or
and
addr16
or
xchg
shll
int3
lock
imull
and
lret
lock
mov
jae
cmovns
out
mov
jnp
add
in
fwait
cmp
xorb
mov
add
or
inc
push
mov
and
fdivrs
inc
or
add
add
cld
outsl
inc
aas
das
movsl
repz
inc
pop
or
aas
mov
dec
les
shlb
xlat
sbb
xchg
lock
mov
mov
pop
lods
push
mov
movsb
sar
sub
movzwl
xchg
out
cld
fs
adc
inc
push
jne
out
sub
dec
imul
jge
mov
dec
dec
les
clc
or
jmp
add
das
jl
repz
lods
sti
sbbl
popf
test
in
sbb
pop
test
mov
pop
pop
sbb
xchg
mov
daa
push
sub
dec
sub
icebp
leave
jl
es
ror
les
jle
mov
xchg
mov
mov
push
push
jmp
xor
out
sub
les
pop
xchg
cmpsl
push
adc
adc
dec
popf
fchs
andb
sbb
push
outsb
sbbb
call
add
push
xchg
mov
shlb
cmpsl
pop
and
push
mov
or
xor
xchg
sar
outsl
add
addb
dec
test
jmp
push
fsubrs
adc
sbb
sub
add
adc
clc
sub
adc
je
into
push
add
sbb
sti
imul
pop
add
int
fists
push
std
int3
xchg
shrb
scas
popa
dec
mov
enter
hlt
cltd
pop
imul
cmp
fcoms
sub
enter
iret
call
stos
clc
inc
sbb
inc
xchg
mov
dec
test
jns
xchg
sbb
pop
and
in
es
cli
add
mov
xchg
sub
or
cs
mov
dec
clc
sbb
test
in
add
loopne
add
push
fwait
les
out
xchg
xchg
fisubrl
shrl
xor
inc
out
xor
fisttps
push
push
test
xor
rcrl
xorl
pop
jnp
pushf
mov
inc
cmp
sub
les
filds
pop
loop
rcrl
rclb
das
pop
fld
popf
push
fisubrl
cmpsl
dec
dec
inc
jo
inc
aad
xchg
data16
and
outsb
or
and
and
push
leave
or
aaa
push
in
xor
cs
push
sub
nop
adc
scas
sbb
push
mov
xchg
out
or
mov
jmp
in
xlat
lods
in
icebp
push
cmp
cmp
xor
iret
mov
and
dec
xchg
add
push
lcall
pop
fisubrs
xchg
or
shrb
mov
add
sub
test
mov
pushf
push
mov
adc
xor
inc
pop
inc
pop
std
mov
dec
and
nop
enter
bound
int3
dec
xchg
pop
inc
lfs
rcl
inc
or
add
cli
cmp
rol
sub
push
mov
push
mov
sar
or
fs
cwtl
rclb
adc
push
not
dec
mov
shlb
sbb
rol
sahf
call
test
mov
push
inc
nop
add
and
arpl
jmp
pop
inc
movsl
notl
pop
mov
xchg
repz
xrelease
sub
pop
push
mov
and
pop
or
xor
cs
cmp
mov
hlt
out
push
lods
scas
popf
imul
mov
xchg
sub
imul
iret
or
das
push
dec
inc
mov
pop
shlb
cli
sub
daa
cli
mull
cld
addb
cs
inc
sub
test
adc
sbb
jl
jmp
ficompl
ret
mov
lds
loopne
add
dec
jbe
es
aas
cmpsb
data16
cmp
fcompl
idivb
mov
fmuls
xchg
aam
lret
push
repnz
cmp
idivb
ljmp
push
mov
add
jbe
pop
push
mov
sub
pop
add
mov
mov
mov
lods
and
icebp
push
adc
push
stos
aaa
mov
jg
jne
push
pop
push
jmp
mov
mov
lock
lea
cmp
pop
jno
add
push
dec
fsubr
push
sbb
adc
or
fildl
push
fists
dec
inc
in
adc
ja
clc
push
pusha
jmp
fs
sub
pop
jo
jbe
adc
mov
mov
jne
cmp
inc
jb
fnstenv
mov
sahf
imul
add
jl
jmp
pop
sub
mov
clc
lods
adc
das
mov
dec
or
add
mov
jbe
push
xchg
pop
ljmp
push
repz
add
jecxz
shr
xlat
shlb
sahf
push
jmp
sub
mov
mov
mov
push
mov
repnz
pop
cmp
xchg
mov
pop
pop
jno
xor
mov
rolb
xor
dec
test
jl
mov
pop
or
add
movsl
pop
in
inc
scas
nop
js
rcrb
fucom
mov
out
in
subl
lret
arpl
sti
push
pusha
sub
or
pop
or
scas
push
jle
pop
pop
jns
inc
in
stc
pop
cmp
or
jno
add
cmp
sbb
xor
mov
pop
adc
push
xor
jmp
push
sub
inc
adc
scas
sub
cwtl
cmp
inc
pop
push
mov
pop
sub
cmp
cmp
add
inc
aad
add
sbb
sbb
or
adc
neg
and
sub
and
jp
add
insb
ret
and
fidivrl
dec
pop
jb
pushw
mov
jle
mov
or
push
mov
idivl
fs
sub
sub
sti
inc
jp
xchg
out
mov
xchg
xor
mov
test
gs
in
fidivrs
or
imul
adc
jge
daa
pop
mov
jno
negb
cwtl
dec
hlt
insb
pop
dec
cltd
repnz
pop
add
pop
and
sti
mov
cld
stos
and
lods
dec
or
pop
xchg
not
lods
or
jnp
and
sbb
mov
movsl
inc
dec
jle
pop
adc
xchg
add
cmp
or
das
scas
fnsave
lea
inc
adc
pop
jl
test
or
cmp
leave
outsb
lock
push
cmpb
dec
xor
add
add
imul
mov
push
push
repnz
aas
add
pop
cmp
orb
or
push
push
push
xor
aam
sbb
imul
sub
jmp
dec
mov
sub
cwtl
in
pop
push
mov
dec
testb
sub
jmp
sbb
ret
ljmp
ja
push
mov
test
mov
mull
push
mov
push
pop
out
lds
mov
adc
jl
icebp
std
push
or
negb
jp
test
sub
neg
cs
or
sub
push
or
test
orps
clc
lcall
pop
jle
inc
notb
xor
fnsave
in
or
mov
lahf
sti
and
sarb
pop
pop
xor
cld
xchg
or
jbe
lret
mov
dec
es
jmp
sahf
enter
ror
jmp
into
pop
sti
xchg
call
rolb
icebp
sub
imul
jnp
jg
xchg
push
pusha
adcb
shll
mov
or
add
xor
xchg
mov
jae
jge
sbb
push
and
or
xchg
repnz
out
aaa
icebp
add
sub
pop
cmpsb
pop
hlt
mov
push
imul
aas
rcrb
mov
adcl
dec
sub
imul
fsubrl
sarl
sub
movsl
je
outsl
dec
test
sub
cmp
adc
inc
lock
aam
and
pop
mov
loope
test
repnz
jge
dec
outsb
cwtl
push
pop
adc
push
dec
shr
out
adc
xchg
lods
sbb
lea
pop
sbb
repnz
inc
jge
sub
cmp
es
dec
rorl
push
pop
mov
xchg
das
neg
cmpsl
jg
and
inc
aad
jp
repnz
repnz
mov
insl
in
dec
sbb
pop
xchg
loop
popf
jns
daa
fcoml
insb
mov
dec
mov
jmp
lret
inc
xchg
pop
inc
out
aam
call
adc
add
shr
pop
arpl
leave
leave
jmp
sub
pop
decb
movsl
fnsave
movsl
sbb
orb
repz
adc
mov
and
inc
mov
std
test
popf
rcrl
in
mov
mov
or
pop
mov
andl
adc
push
in
push
jmp
and
inc
jg
je
add
push
insl
jmp
inc
push
xchg
loopne
dec
rcrl
imul
push
inc
es
data16
in
es
sahf
sub
and
call
push
pop
sbb
iret
add
inc
xchg
not
push
push
pop
pop
jmp
add
or
adc
xchg
nop
adc
shrb
aas
xor
adc
inc
mov
and
pop
dec
testl
es
sti
mov
sbb
push
loop
cli
mov
mov
and
sbb
insl
arpl
lahf
inc
pop
push
cld
cmp
sub
enter
mov
xchg
mov
and
popf
inc
sbb
jmp
sbbb
repz
in
call
push
mov
sub
and
inc
mov
loopne
mov
dec
add
jo
mov
dec
incb
insb
push
xor
adc
jno
pop
or
pop
push
push
lods
add
or
nop
pop
xchg
xchg
lods
xor
push
mov
sub
or
rorl
jmp
add
xchg
call
outsl
addb
arpl
inc
cmp
pop
rcrb
sub
jmp
das
lock
mov
lock
sub
stos
fadd
push
mov
gs
sqrtps
pop
addb
bound
fcoml
sub
sub
add
nop
adc
pop
mov
mov
or
call
outsl
lea
in
pop
addb
or
sbb
adc
dec
ret
sub
jb
lahf
push
cmpsl
dec
jbe
addr16
dec
sbb
or
mov
mov
pop
fidivl
dec
dec
stc
fisubl
fmull
sub
lock
dec
sub
icebp
ficoml
mov
pop
pushl
push
mov
lods
xchg
mov
sbb
mov
into
cmpb
add
add
pusha
sbbb
nop
and
add
add
add
push
mov
mov
add
out
sarb
or
jne
ja
inc
std
jne
add
shll
es
sti
jmp
mov
push
enter
and
pop
push
cmp
mov
add
push
outsl
sub
rorb
and
add
xor
pop
adc
repnz
aam
ret
lock
xchg
je
push
mov
sbb
pop
scas
xchg
imul
hlt
data16
mov
pop
jmp
pop
call
xchg
repz
fidivl
les
in
jnp
pop
jnp
cmp
icebp
aam
subb
pop
jnp
sub
inc
pusha
shl
clc
in
out
sbbb
mov
xchg
adc
xchg
inc
pusha
sub
jo
sub
adc
daa
iret
arpl
sbb
or
pop
push
fnstenv
add
aas
push
add
add
out
xchg
add
outsb
dec
jmp
roll
mov
stc
rcrb
bound
rclb
jae
testb
mov
add
sub
cld
push
or
mov
fistpl
xchg
and
cmp
repz
pop
cmp
sahf
xlat
pop
out
add
mov
movsb
mov
adc
xor
xor
xor
daa
adc
out
mov
and
jecxz
pop
add
sbb
orl
sahf
scas
push
add
fstps
out
daa
and
addl
test
mov
out
mov
xor
pop
push
mov
not
test
xlat
and
jle
hlt
sub
repz
adc
out
jae
jo
lahf
mov
inc
mov
mov
pop
jmp
lods
popa
push
aas
cwtl
stos
jge
add
push
mov
add
jns
xor
ljmp
mov
imul
not
and
add
inc
and
mov
bound
xor
scas
orl
jl
or
data16
push
xor
pop
mov
std
in
pop
mov
fcmovnbe
push
jle
pop
mov
das
add
lods
js
aad
inc
addr16
xor
push
rclb
xor
mov
pusha
sbb
xchg
xchg
not
or
adc
dec
movsb
dec
movsb
shll
cmp
sbb
cmp
jp
sub
lcall
adc
push
pop
gs
rol
cmp
sbb
jmp
add
rcrl
imul
out
jle
jmp
jns
lods
js
or
fimuls
sbb
xchg
idivb
imul
js
rorl
jg
popf
jl
imul
adc
sub
inc
push
adc
mov
add
mov
pusha
mov
jnp
lret
jecxz
lods
test
fs
and
xchg
adc
mov
dec
jmp
jle
out
cwtl
add
daa
cwtl
arpl
mov
pop
add
sub
jne
or
imull
push
test
jbe
and
push
lcall
mov
sub
mov
and
add
mov
aam
dec
or
int3
pop
adc
cmp
aas
mov
rcr
pop
push
sbb
dec
mov
bound
lock
sub
pop
push
xchg
mov
fdivs
or
int3
imul
cltd
mov
rorl
enter
sbb
xchg
adc
push
adc
and
negl
xchg
mov
es
cmp
xlat
and
add
cmp
xchg
and
jnp
and
and
push
imul
test
shl
daa
adc
pop
xchg
test
add
mov
inc
std
push
mov
rorl
dec
or
jg
pushf
xchg
js
fwait
inc
mov
or
cmpsb
add
andb
roll
cltd
sbb
repnz
int3
adcb
jle
xor
jb,pt
sub
out
hlt
inc
clc
imul
xor
add
in
inc
inc
mov
call
test
mov
outsl
repz
cmc
xchg
add
call
mov
add
jmp
dec
movsl
or
test
aaa
outsl
add
sub
adc
mov
jns
dec
je
ja
add
popf
rorl
or
adc
sti
mov
cwtl
or
jmp
xor
lods
fbstp
ljmp
jge
mov
sub
pop
add
push
subl
es
sbb
repnz
and
aas
cs
loop
or
std
cmp
inc
and
loop
sarb
out
inc
pusha
push
add
ret
jmp
imul
sbb
jg
add
addr16
test
jmp
xchg
xchg
adc
sti
cmc
out
jnp
cmp
jmp
cmpsl
jae
sbb
fsubs
loopne
push
adc
pop
mov
inc
test
fistl
jbe
gs
push
jp
add
and
push
loopne
xor
nop
fs
out
arpl
mov
adc
adc
dec
movsb
jo
push
fs
inc
daa
dec
add
clc
mov
stos
adc
mov
jmp
push
scas
es
inc
jmp
add
iret
push
arpl
jnp
cmp
or
jb
inc
es
loope
insb
and
pop
mov
mov
sbb
inc
xchg
cmp
imulb
sub
jle
jmp
add
inc
not
scas
jae
pop
add
sub
add
jmp
dec
jp
mov
push
inc
adc
int
mov
mov
stos
and
pop
push
ds
in
dec
pushf
xchg
push
mov
imul
jbe
jge
mov
sub
hlt
inc
or
notb
imul
ja
push
fildl
lret
dec
or
mov
std
and
or
jge
fmul
call
adc
popa
mov
pop
or
cmp
fsubrl
ret
adc
jno
pop
das
and
jbe
or
popa
xor
pop
sub
lds
ljmp
cmpsl
call
inc
and
and
cmp
inc
xor
cwtl
xorb
sbbb
mov
sti
dec
cmp
test
mov
mov
jmp
and
or
inc
stc
imul
and
cmpsl
xchg
cltd
int
adc
sbb
pop
mov
jnp
das
push
inc
cli
and
psubsw
dec
ljmp
or
hlt
ret
xlat
cmp
dec
sub
sahf
dec
dec
jno
popa
dec
push
stos
or
pop
adc
dec
cmp
loope
cmp
pop
cmp
bound
sbb
orb
pop
loopne
jmp
cs
or
inc
mov
mov
pop
push
fstl
je
movsl
mov
mov
pop
mov
in
dec
popf
icebp
std
add
rcrb
and
ja
cmpsb
jb
add
hlt
jae
or
add
hlt
mov
inc
sub
dec
push
sub
sbb
sbb
sbb
cs
mov
sbb
dec
sub
cli
nop
mov
and
and
sahf
notl
dec
jmp
push
xchg
add
sub
push
pop
sub
jmp
add
pop
imul
pop
or
pop
das
add
mov
add
add
pop
mov
push
add
loope
or
rorb
add
jmp
ja
insb
cltd
adcb
repnz
mov
jbe
in
mov
scas
mov
mov
jmp
sti
das
jge
pop
mov
cltd
or
inc
repz
pop
arpl
mov
lret
push
jae
das
pop
pop
loopne
mov
jg
push
mov
jl
adc
mov
sbb
mov
inc
jb
add
cwtl
insl
mov
mov
sbb
dec
and
or
jns
or
stc
add
push
mul
jns
outsl
add
loop
jo
jge
mov
push
push
sub
sub
pushf
mov
scas
fimull
xor
jmp
fstpt
mov
mov
lea
mov
sti
aam
pop
movsl
out
inc
jmp
xlat
subb
xlat
push
cmp
dec
jno
js
cs
add
repnz
adc
push
sti
xchg
mov
adc
addl
repz
xchg
adc
decl
daa
lds
sbb
dec
push
cld
je
jmp
syscall
mov
in
ret
shlb
sub
jmp
push
adc
rclb
jl
xor
jae
and
adc
sub
repz
push
cmp
ficompl
rcrb
ret
cld
js
xchg
sub
or
mov
jle
pop
jl
sbb
cmp
fwait
adc
lret
fsubr
push
cltd
dec
cmp
sub
dec
lds
loop
inc
out
dec
pop
and
icebp
inc
popa
jmp
push
shll
add
dec
test
scas
lret
ss
ret
jae
inc
nop
xchg
inc
sbb
push
scas
fisubrl
cli
loopne
ret
rol
repnz
gs
pop
pop
loop
test
mov
mov
push
dec
mov
lds
repz
mov
movsb
adc
xor
cmp
out
push
in
inc
sub
fcoms
rorb
xor
adc
or
add
dec
mov
adc
sbb
mov
and
clc
inc
daa
dec
push
xchg
inc
out
add
fsubrs
pop
xchg
cld
mull
jmp
dec
push
fmul
fmull
pop
add
call
or
cmpl
inc
mov
cmc
insb
in
jg
and
mov
push
lock
xchg
push
stc
test
fcoms
push
outsl
pop
sub
pop
lds
jmp
or
enter
ljmp
scas
xor
sbb
ljmp
ffreep
jg
das
fs
movsl
cli
popl
mov
add
xlat
call
out
aaa
shr
dec
jmp
push
xchg
push
add
out
gs
cmp
js
mov
clc
cmpb
add
cmp
fwait
lret
test
call
pop
mov
or
mov
push
xchg
add
jno
enter
int
sub
adc
dec
push
push
adc
in
adc
arpl
jnp
roll
jmp
push
stos
pop
cwtl
adc
cmp
mov
sbb
pop
mov
pop
add
into
sub
cmpsb
push
andl
push
movsl
loop
cmp
sbb
jmp
into
pop
cmpl
mov
or
or
popa
mov
inc
adc
cli
dec
dec
adc
sbb
dec
sar
and
rcrb
mov
and
sbb
xor
ret
cmp
repz
out
mov
add
daa
sti
jb
adc
xchg
xor
sub
outsl
orl
clc
add
test
or
push
xor
mov
movb
add
ret
push
sbbb
std
dec
cmp
mov
cltd
mov
negb
xchg
pop
ror
jmp
jnp
inc
pop
lock
and
mov
and
inc
fimuls
pop
gs
adcb
lods
bound
and
mov
pop
mov
jns
daa
sub
lcall
int
push
gs
leave
mov
call
xchg
cmpsb
das
or
inc
and
push
add
mov
leave
enter
pop
sub
inc
fnstsw
leave
adcb
cwtl
stc
mov
xor
in
stos
cltd
push
jmp
lcall
mov
ret
loopne
or
push
xchg
mov
jmp
bound
jl
adc
neg
decb
and
add
imul
in
mov
inc
or
sbb
add
jns
pop
not
dec
sti
popf
in
sbbl
or
cmp
repz
pop
sub
jbe
mov
scas
pop
push
mov
pushf
xor
add
leave
lret
mov
adc
mov
pop
mov
cmpsl
repz
adc
outsb
add
out
dec
dec
rorl
mov
loopne
cmpb
or
lods
daa
mov
in
out
inc
hlt
xor
out
rcll
js
dec
fdivl
icebp
sub
lds
mov
or
cmp
pop
push
sub
jmp
mov
dec
mov
out
push
jb
rcrl
fdivrl
sarl
cmp
leave
stos
xor
fwait
daa
pop
insl
sarl
add
enter
bound
addb
sub
movd
inc
sti
add
addr16
mov
add
int3
fucomi
mov
test
push
push
pop
test
push
inc
push
stos
call
sbb
xchg
call
pop
add
or
pop
pop
add
xor
pop
sub
cmpsl
cmp
cmp
movsb
adc
xor
rorb
sub
daa
mov
push
mov
loope
and
mov
jb
imul
pop
pop
fcomps
shl
or
in
dec
stc
je
add
aas
fildl
out
mov
cmp
dec
jne
adc
loope
push
pop
push
fs
fisubrs
adc
test
cmp
inc
cmpb
adc
out
jno
mov
cmc
imul
push
or
or
jmp
xchg
mov
and
sbb
pop
xor
pop
xor
or
cmp
jmp
je
or
rcll
mov
call
out
frstor
inc
out
frstor
mov
push
out
sub
dec
fldl
sarl
xor
daa
pop
sub
mov
cwtl
mov
mov
test
pop
pop
sahf
inc
lcall
out
sub
or
mov
jmp
mov
sub
jg
jmp
or
lock
jmp
aaa
mov
nop
sbb
and
and
inc
xchg
je
xor
pop
xchg
or
sbb
cmpsb
mov
jno
mov
jmp
and
mov
xlat
add
sub
add
mov
add
pop
cmp
dec
and
dec
mov
mov
sbb
or
add
cmpsl
stos
and
nop
jmp
into
jb
mov
aam
inc
aas
cmp
sub
xchg
push
ret
rol
fs
dec
sub
sub
scas
and
outsl
push
rorl
sub
lds
pop
pop
mov
outsb
ss
jo
aam
dec
jno
daa
xchg
popa
sbb
test
sub
rolb
mov
add
push
add
imul
sbb
sbb
adc
enter
gs
mov
outsb
out
push
inc
mov
and
je
push
test
inc
orb
xchg
mov
and
push
and
fadds
and
inc
cmc
and
dec
imul
stos
mulb
and
xor
add
mov
divb
cmp
sub
add
mov
das
lock
cmp
jp
lods
and
jnp
sbb
jno
cwtl
add
push
jne
movsb
sub
jl
xor
or
dec
and
lods
and
mov
in
push
mov
pop
icebp
push
or
lods
cltd
pop
jmp
push
and
outsb
cld
ljmp
pop
outsb
imull
xchg
lock
cmp
xor
or
pop
jb
adc
mov
outsb
fldcw
mov
fisttps
mov
dec
dec
or
and
daa
mov
shr
loopne
xor
xor
pop
stos
mov
mov
inc
popa
sub
enter
add
ret
cmc
inc
subb
mov
or
aas
loope
dec
xchg
jnp
pop
mov
push
les
and
cmp
ret
movsl
mov
loop
xchg
pop
leave
add
nop
or
xor
lods
jo
push
lods
cmpl
je
push
push
jmp
sub
push
dec
movsb
dec
pop
add
jl
daa
sahf
and
jecxz
aad
add
or
add
test
cmpb
xor
xor
sti
out
mov
cmpsl
shrb
jle
sub
das
push
ffree
mov
hlt
mov
push
arpl
cs
mov
push
adc
rep
or
sbb
pop
mov
inc
jmp
sub
cld
popaw
cmc
sbb
add
scas
jl
shll
repnz
inc
out
add
pop
pop
loop
add
sarl
jmp
ffree
sub
pop
sarl
lret
mov
mov
mov
inc
sub
test
or
xor
lea
aad
lods
mov
push
and
rcrb
xor
inc
out
fsubl
lahf
andb
push
push
pop
rcl
daa
inc
test
pusha
add
mov
pop
push
add
insl
mov
dec
mov
cmc
mov
loopne
shlb
fs
pop
or
push
pop
pop
add
or
aad
mov
jo
push
xchg
push
dec
or
jbe
add
jb
push
xchg
xchg
or
xlat
and
sub
out
inc
push
push
lret
mov
test
iret
ja
xchg
dec
pop
mov
push
sub
mov
loope
jmp
repnz
jge
fsincos
insb
inc
push
mov
mov
xchg
ret
adc
xchg
out
inc
xchg
or
lahf
les
mov
lret
push
pop
jbe
imul
mov
repz
stos
popa
jmp
decb
push
pop
vpshufd
adc
or
inc
repnz
ret
add
inc
icebp
inc
sbb
or
decb
add
xor
push
ds
push
mov
shrb
scas
jo
sbb
sub
loopne
xor
xchg
call
ffree
fsubrl
hlt
xchg
fstps
std
mov
sbb
cld
fld
in
out
jnp
cmp
mov
sti
iret
inc
jmp
out
xor
sbb
imul
cmc
mov
notb
jmp
sub
adcb
pop
push
mov
pop
add
xor
addb
and
mov
push
in
xchg
or
push
divb
add
sub
xchg
jbe
pop
rsqrtps
mov
xor
xor
mov
mov
pop
push
xchg
pop
and
add
or
shrl
or
add
cmp
hlt
push
mov
and
daa
mov
lds
or
repnz
cmovno
into
fs
sbb
mov
pop
ret
ljmp
push
pop
shlb
dec
cmp
test
add
xor
sub
shrl
in
jo
cltd
stc
movsb
and
mov
jne
xlat
add
jno
cltd
push
out
lahf
shll
jmp
push
lds
ret
hlt
adc
sub
add
enter
pop
mov
sbb
inc
aaa
mov
xchg
or
jmp
dec
fildll
cmpsb
adc
outsl
sbb
pop
cmpsl
out
cs
je
repnz
call
data16
rclb
or
push
aad
icebp
imul
inc
and
or
inc
aaa
add
mulb
or
insl
dec
xor
or
inc
push
pushf
out
ret
add
xlat
mov
stos
lds
clc
or
fisttps
data16
mov
add
jno
outsl
daa
ss
pop
nop
or
cmp
push
add
push
inc
adc
lods
xchg
push
addb
movsl
jl
mov
stc
push
das
sti
mull
and
subl
mov
mov
push
push
jno
or
fimull
sub
aam
test
mov
adc
or
scas
in
sbb
ret
mov
out
shrb
arpl
xor
rorl
jnp
add
xchg
in
lods
or
and
jmp
adc
xor
cs
mov
pop
int3
leave
call
jns
sub
pop
jmp
push
push
push
sbb
mov
mov
dec
movsl
cs
shl
dec
xchg
iret
sub
xor
sub
ljmp
insb
outsl
lahf
lea
sbb
xchg
std
movhps
xor
mov
jmp
mov
cli
and
and
pop
clc
lcall
and
mov
adc
cs
push
inc
ficomps
testb
daa
sbb
popa
push
mov
data16
or
pop
mov
test
cmp
in
aas
pushf
movsb
inc
sbb
in
lock
pop
aam
mov
in
mov
js
cld
push
sub
pop
scas
inc
pop
cltd
jmp
aaa
pop
icebp
add
stos
movsb
mov
jbe
add
jbe
dec
cmp
cmpl
xor
xrelease
add
push
and
mov
push
call
lahf
xchg
mov
push
pop
jl
fs
sbb
or
pop
xchg
call
lret
leave
xor
js
jno
repnz
pushf
push
jne
fildl
or
add
dec
scas
loopne
aas
hlt
jmp
into
or
stos
push
mov
mov
dec
lods
cwtl
push
push
dec
push
dec
andb
xor
xchg
iret
ret
push
dec
flds
f2xm1
sub
inc
sbb
inc
or
inc
jp
push
xchg
adc
lea
aam
push
lock
mov
jmp
inc
mov
test
add
ret
push
and
push
popa
jg
ljmp
movsb
popf
pop
jns
sub
or
add
pop
add
pop
add
enter
dec
jbe
cmp
rcrb
inc
and
icebp
mov
daa
xor
dec
jle
sub
cmp
test
add
rorb
aam
adc
and
jge
sti
fdivrs
or
sbb
push
sbb
ds
mov
inc
into
bound
imul
fiadds
mov
xor
cmp
push
sti
push
pop
xor
jns
push
push
adc
add
mov
xorb
int
mov
idivl
daa
and
dec
dec
pop
pop
pushf
into
dec
shl
mov
mov
push
mov
ret
sub
pop
push
pop
hlt
in
dec
iret
jle,pt
in
outsb
jmp
xlat
addr16
adc
mov
dec
xchg
mov
jae
leave
jg
int
daa
dec
orl
pushf
mov
call
adc
mov
pop
pushl
jo
lahf
aam
sub
dec
mov
das
mov
or
and
cmp
adc
pop
xchg
idivb
jbe
mov
jl
and
sbb
test
cmp
mov
mov
pop
add
imul
adc
inc
push
sbb
push
adc
cmp
pop
mov
aam
fld
sub
ja
jp
mov
xor
negl
in
mov
sbb
mov
mov
sub
jne
add
mov
cmp
stos
or
sbb
mov
das
push
test
pop
loopne
movsb
xor
scas
pop
xchg
dec
xor
int
cmpsl
mov
xchg
or
rolb
loop
adc
aam
scas
adc
mov
scas
test
adc
mov
pop
shrl
lcall
inc
in
sub
dec
andl
in
jne
dec
out
lea
popa
sti
ljmp
push
add
xchg
movsb
mov
inc
rolb
sbb
div
imul
add
sbb
mov
sbb
fs
stos
das
fisttpll
stos
js
push
push
out
xor
movl
ffreep
iret
in
pop
outsb
jns
and
movsb
xchg
sub
sub
push
mov
test
pop
shlb
jmp
cmpl
mov
adc
div
dec
notb
adc
add
add
mov
and
cs
pushf
lods
mov
adc
jbe
clc
dec
jge
mov
pop
clc
sbb
xchg
cwtl
cmp
mov
or
cltd
sbb
out
sub
lahf
dec
or
jmp
pop
mov
cli
into
decb
popa
sarb
mov
shrl
enter
ja
daa
call
xchg
rorb
push
add
int
jecxz
call
cli
clc
jp
lahf
sub
mov
dec
test
jg
fimull
push
or
and
test
push
les
mov
std
mov
mov
add
aaa
or
push
shl
not
or
xchg
pop
iret
ficoml
sub
xor
inc
lods
inc
fcompl
neg
ret
pop
in
or
dec
std
push
inc
pop
out
jb
and
jg
jns
xchg
push
mov
mov
push
mov
xchg
mov
in
dec
xchg
inc
andb
xchg
and
pop
aam
and
pop
cmpsb
inc
arpl
mov
mov
mov
loope
movsb
mov
sbb
dec
ljmp
pop
dec
push
call
pop
jo
mov
jmp
pop
mov
xchg
push
mov
sub
sub
add
daa
shrl
or
mov
icebp
pop
jne
mov
push
adc
fsts
jmp
rorb
inc
jmp
cwtl
push
jno
je
or
cmpsb
xchg
add
xor
pop
add
pop
push
mov
adc
sub
jmp
fidivl
and
mov
scas
testb
aaa
fldenv
xor
insb
inc
sti
inc
ljmp
inc
stos
mov
xor
cwtl
pop
stos
fadd
add
jle
rcrb
push
pop
shll
cmp
rcrl
push
sub
push
xor
arpl
ret
or
jmp
jecxz
addr16
sub
mov
data16
pop
call
mov
das
lahf
mov
sub
jmp
xchg
pop
pop
or
fisttpll
les
sahf
repnz
jae
loopne
and
insb
mov
cmp
out
arpl
or
jns
daa
dec
shrl
dec
test
orb
add
rorb
or
loop
pop
insb
add
lahf
add
adc
adc
call
pop
xchg
sbb
int3
push
cmp
or
xchg
ja
dec
push
stc
lret
inc
lds
dec
shlb
repnz
ljmp
test
sub
mov
push
mov
jno
pop
add
int3
xchg
cmc
push
clc
jge
dec
add
stos
cmp
adc
mov
jg
add
sub
sub
or
and
outsl
fadds
fildl
sub
jmp
mov
xchg
int3
into
mov
lret
adc
push
test
pop
mov
xor
inc
call
subl
add
loope
pusha
pop
call
cwtl
jg
push
and
add
outsl
jmp
xor
jecxz
jmp
sub
clc
adc
pusha
pop
in
push
mov
ret
ja
mov
loope
daa
fistpl
and
sub
arpl
xchg
pop
loop
ret
bound
out
aad
scas
cltd
lret
jo
jns
shll
xchg
and
jecxz
xor
ret
fiadds
sub
jmp
and
popa
mov
mov
std
xchg
pop
dec
pop
scas
and
mov
jle
cs
lret
mov
sub
add
and
add
hlt
mov
mov
shl
jge
pop
not
loope
pop
das
in
cmp
jecxz
stc
pop
out
xchg
pop
call
pop
push
shrb
pop
popf
in
clc
or
push
cmc
cwtl
sub
mov
mov
mov
scas
xor
jmp
sub
xchg
movsl
shr
inc
jns
dec
stos
or
rol
idiv
jg
pop
mov
push
push
jo
ret
mov
dec
pop
or
iret
test
imul
xchg
jmp
movsl
or
mov
dec
jns
pop
xor
mov
ja
pop
or
ret
push
in
lods
lods
adc
sub
push
pop
jp
dec
or
js
mov
cmp
or
adc
orl
or
jmp
cmp
cmp
lock
lret
or
push
insl
popa
xchg
lods
shll
popa
push
or
sbb
shlb
gs
stc
cmc
pop
sub
andl
mov
shlb
jbe
mov
loope
add
ffreep
nop
aam
pop
mov
fmull
mov
dec
je
adc
mov
push
jp
icebp
dec
movsb
scas
jbe
sarb
sub
imul
les
fcomps
out
xchg
sub
add
es
lret
push
mov
pop
sub
mov
popf
in
inc
sub
cmpsl
or
jmp
add
adc
jmp
xchg
pop
idiv
subl
dec
push
jmp
mov
pop
and
fld
pusha
popf
pop
sbb
mov
push
push
enter
cmp
stos
repz
jmp
mov
jnp
add
popa
and
push
mov
lock
and
jge
pop
and
or
arpl
test
jp
push
mov
repz
addl
aas
imul
fincstp
addr16
jb
outsl
inc
inc
mov
jae
js
scas
jg
shr
gs
shl
sub
jmp
cli
pop
mov
or
nop
jge
mov
outsb
mov
lds
ret
push
mov
mov
push
movsl
xor
pop
adc
cli
xchg
testl
cli
sub
icebp
sub
lahf
pop
jg
inc
add
scas
loop
nop
in
lea
push
shr
and
sbb
or
adc
outsb
and
jl
inc
test
idiv
push
mov
or
inc
and
ja
mov
pop
and
pop
mov
and
repz
cmp
jle
inc
out
cmp
or
data16
push
inc
fidivl
inc
jle
add
out
inc
rolb
add
out
jno
pop
shrl
iret
pop
jns
push
sbb
mov
jl
jmp
pop
jp
sbb
dec
dec
inc
int3
ds
popf
js
xchg
into
lock
or
ja
mov
flds
into
jp
jge
das
daa
ficomps
mov
mov
and
mov
fists
add
push
adc
shlb
push
mov
stc
pop
mov
ficoms
cmp
inc
mov
cmp
inc
stos
adc
xchg
fld
ret
jge
inc
dec
jmp
add
cmp
push
int3
adc
sbbb
clc
push
push
insb
jns
and
or
jmp
lret
or
in
repz
test
ret
mov
add
add
lret
bound
rorl
outsl
ret
jg
or
sub
jmp
xchg
xor
and
mov
in
das
addr16
dec
add
adc
xchg
add
shrl
dec
rol
lret
and
neg
pop
lret
fisttpll
adc
mov
mov
cmp
inc
aam
add
shrb
js
mov
js
sub
fs
in
insl
shll
cli
inc
inc
or
int
aad
mov
pop
pop
lods
shll
adcl
mov
mov
outsl
sub
pop
or
loope
pop
dec
push
mov
cs
add
and
stc
mov
test
xchg
insb
cltd
jo
sub
outsb
in
ret
bswap
mov
lea
ja
or
and
or
cmp
lahf
test
lock
adc
lahf
repnz
les
cmp
dec
inc
mov
mov
mov
jne
es
add
fnsave
inc
mov
stos
in
rorb
scas
ftst
adc
xchg
ret
mov
xchg
add
pop
sbbb
and
pop
sub
ljmp
push
mov
call
in
add
dec
test
bnd
std
ret
je
jl
cltd
adc
fists
inc
mov
stos
xor
stos
sub
ss
cmp
cli
xchg
stc
scas
xlat
add
sub
jmp
arpl
pop
cld
push
mov
push
imul
negb
cmpsl
js
adc
aad
out
sub
or
add
cld
jb
or
pusha
les
and
arpl
add
cmc
sbb
in
mov
xchg
or
add
pop
clc
dec
cli
xor
add
ret
add
into
add
sbb
dec
or
rclb
sbb
xor
std
and
sbb
je
or
inc
subb
in
subb
or
inc
hlt
les
push
fs
cmp
fwait
add
std
or
mov
inc
loop
arpl
or
inc
adc
cmp
inc
adc
adc
and
jno
imul
dec
into
sub
or
xchg
or
and
cld
data16
sub
in
pop
and
test
or
sub
or
fisttps
pop
mov
jo
xor
inc
adc
lea
lds
cmp
enter
dec
loopne
adcl
cmc
test
mov
mov
les
fcomps
ja
sbb
jo
test
adc
faddl
jmp
mov
or
mov
pop
stc
sbb
sbb
jns
push
sbb
adc
push
icebp
fmull
lods
call
mov
sub
mov
dec
and
add
add
inc
imul
fimuls
jmp
add
add
cmc
or
adc
xor
rcl
xor
xchg
and
ja
fnstcw
xor
nop
and
and
cmovge
and
arpl
xor
adc
dec
adc
push
xor
jno
int
pusha
dec
xor
push
iret
insl
pushf
adc
jno
in
decl
clc
jecxz
imul
xor
add
mov
push
mov
mov
nop
stc
je
lods
cld
xor
or
mov
leave
add
cld
call
out
xor
push
mov
cmp
dec
enter
add
sbb
mov
add
inc
dec
or
jne
mov
add
add
xor
rolb
sub
mov
and
dec
scas
inc
dec
in
cmp
xchg
mov
push
jmp
call
aad
push
jmp
loopne
adc
clc
pop
mov
add
pop
dec
cwtl
in
push
push
data16
pop
das
test
jg
or
push
imul
xchg
lds
push
cli
mov
sub
jle
jmp
mov
push
jns
jle
xchg
add
adc
jo
bound
xchg
stos
sbb
into
clc
stc
pop
xor
sarb
hlt
sbb
xchg
and
inc
push
sub
sbb
fcmovnbe
pushl
or
mov
movsl
pop
fs
xchg
pusha
rcrl
or
pop
test
bound
test
inc
pop
pop
lret
rcrb
cmp
or
inc
pop
aaa
push
add
mov
push
mov
leave
call
push
mov
enter
nop
and
sub
mov
repz
pop
pop
sub
ret
jmp
or
adc
jp
call
cmpsl
lret
fisttpll
or
movsb
repz
add
faddl
xlat
or
mov
leave
and
dec
adc
cmpsb
sub
cmp
ljmp
xchg
cwtl
or
push
add
pop
inc
jmp
mov
push
and
aad
sub
mov
std
inc
cmp
sub
xor
cmp
dec
outsb
stos
mov
jb
pop
or
adc
dec
push
nop
xchg
push
cmp
mov
and
pop
aad
mov
sbb
pop
sub
pop
pop
loop
insl
andb
push
push
pop
mov
add
in
popf
nop
hlt
push
inc
mov
pop
sub
roll
add
dec
mov
dec
dec
kmovw
dec
or
in
mov
loopne
mov
xchg
adc
mov
shrl
add
loopne
or
adc
gs
xor
lock
leave
pop
movsb
pop
pop
mov
stos
add
and
addl
pop
mov
pop
sbb
jmp
pop
push
pop
pop
and
jp
add
and
pop
dec
inc
out
fadds
sbb
push
xor
xor
decb
inc
out
inc
ret
xor
mov
iret
push
jmp
icebp
pop
dec
cwtl
mov
daa
mov
lds
push
das
rcll
les
imul
pop
in
jmp
mov
adc
or
cld
std
adc
inc
dec
addl
add
lock
pop
cmp
repnz
adc
dec
dec
sub
mov
push
subb
cmp
addl
or
or
push
cmc
pushf
sub
push
push
pop
fsubs
int
mov
inc
sbb
xchg
popf
imul
lds
and
nop
cmp
push
push
jns
dec
ljmp
jl
les
nop
mov
ds
push
test
lock
fsubrp
push
lds
in
ljmp
movsb
psrld
sub
mov
xchg
jb
scas
xchg
sbb
push
xlat
loop
sub
std
pop
loope
cli
mov
xchg
rorl
fwait
and
adc
cmp
pop
fst
adc
jmp
mov
dec
mov
pop
es
inc
adc
fwait
mov
jmp
or
testl
pushl
pop
jl
arpl
adc
ja
push
int
pop
pop
xor
or
jg
mov
mov
mov
dec
test
pop
shll
xchg
ja
pop
mov
addr16
and
int3
and
add
adc
xor
aas
push
es
dec
cmp
xor
dec
lret
jge
adc
out
mov
mov
lock
push
aam
or
or
ja
outsl
das
inc
outsb
sahf
xadd
mov
rclb
mov
xlat
das
pop
add
pop
or
ljmp
or
les
outsb
test
xor
rcrb
dec
mov
rorb
ret
insb
sbb
mov
in
xor
stos
inc
and
popa
arpl
or
negl
popa
jb
add
frstor
mov
adc
mov
loopne
pop
ret
imul
sbb
xchg
add
addl
pop
cmp
notl
add
and
and
xor
jno
adc
add
mov
push
ds
inc
lds
ret
mov
or
nop
and
add
or
sub
pop
jmp
push
sbb
pop
and
or
push
sub
push
xor
fwait
inc
sub
cmpsl
bound
pop
cli
mov
outsl
push
sub
push
outsl
xor
rcll
push
push
mov
ret
jae
outsb
or
and
lods
cmpsb
cmp
push
mov
adc
daa
filds
rorb
or
out
lea
jno
mov
stc
rcrb
dec
clc
dec
mov
add
stos
mov
mov
subb
pop
inc
lock
enter
add
or
or
inc
pop
arpl
int3
cli
mov
daa
push
ret
orb
in
aas
hlt
loope
ss
add
adc
lods
cmp
mov
fs
cmpsb
mov
mov
lock
add
loop
pop
cld
sbb
sbb
mov
sarl
cmp
adc
and
or
pop
pop
jo
pop
ss
add
stos
push
xchg
push
and
lock
add
or
and
sbb
push
sti
add
fwait
inc
jne
rorb
test
sub
add
addr16
jmp
js
sub
pop
push
cmpsb
cmp
push
pushf
push
mov
push
imul
dec
jo
daa
repz
fmull
jmp
out
cs
dec
push
or
pop
add
and
jle
test
lods
xchg
cld
pop
out
adc
cmp
xor
cmpsl
jg
fs
pop
push
jecxz
fdivrl
and
pop
add
adc
or
add
or
mov
sub
fwait
aas
mov
test
pop
xor
mov
stc
rcrb
or
push
and
jns
popa
jmp
or
rolb
push
jb
push
popf
jle
iret
lds
inc
xlat
lret
sarl
aas
ret
or
adc
repz
jne
dec
mov
add
xchg
or
or
sbb
cmc
xchg
mov
mov
pop
sub
mov
enter
sbbl
and
push
xlat
jbe
or
xor
add
pop
sbb
or
xchg
add
mov
push
jmp
ds
add
sub
pop
dec
push
or
adc
jle
inc
cmc
jmp
and
ja
and
and
jmp
es
push
cmc
add
fsubp
jne
and
dec
jb
xchg
nop
jmp
cld
pop
mov
stc
mov
jae
dec
cld
shl
add
xor
stos
push
fcmove
or
adc
pop
adc
pop
add
data16
cmp
dec
pop
pop
add
add
out
cwtl
out
push
push
sub
xor
cs
andb
adc
movsb
xchg
mov
pop
call
pop
and
dec
ds
lahf
subb
sub
lods
daa
inc
pop
xor
icebp
inc
adc
std
jp
pusha
pop
inc
ja
std
or
dec
arpl
sbb
mov
rol
mov
add
inc
dec
xchg
sbb
stc
pusha
pop
and
clc
mov
xor
lds
mov
rorl
mov
xor
rcrl
inc
push
inc
fucomip
sahf
lock
push
test
adc
test
cmpsl
loop
sbbb
imulb
xor
pop
and
jmp
add
les
aaa
hlt
xchg
fstpl
das
sub
leave
fimull
push
push
call
dec
ja
dec
pop
ja
pop
xchg
lret
not
or
gs
pop
jl
mov
cmp
insl
pop
or
cmc
mov
pop
add
shl
ret
or
mov
in
cmc
or
pop
rorl
into
adc
and
xor
pop
repnz
jge
xchg
sahf
jo
dec
and
jl
jmp
in
outsl
fdivr
push
mov
jle
pop
or
sub
pop
mov
sub
sti
or
cwtl
xchg
push
inc
add
inc
pop
mov
stos
fs
and
into
push
push
in
pop
ja
cmp
call
fwait
inc
mov
popa
sahf
call
daa
in
dec
lds
scas
test
popf
push
sbb
sub
push
dec
mov
inc
leave
jne
in
jmp
pusha
insl
dec
in
repnz
sbb
in
aas
pusha
popa
or
std
stc
fistpl
dec
or
xchg
cld
stos
lahf
add
cmp
icebp
aad
lret
lcall
sti
popw
pop
scas
call
mov
popa
cwtl
fwait
adcl
shr
adc
cmp
xorl
test
jo
mov
neg
shlb
pop
jl
add
jmp
xor
cli
icebp
sub
daa
inc
push
sarl
add
and
jmp
mov
popa
cltd
mov
icebp
adc
dec
mov
xchg
inc
push
dec
pop
pop
call
xor
lods
cmp
fsubs
sub
jl
outsb
cmp
sbb
or
or
add
jmp
or
xor
sbb
lods
lcall
daa
xor
sbb
pop
sub
loope
mov
add
dec
push
je
subl
std
loop
and
scas
pop
push
nop
incl
subl
shll
push
movsb
loope
mov
or
mov
add
sub
jno
gs
and
push
test
out
sub
pop
call
mov
push
push
sar
pop
repnz
pop
mov
nop
loope
or
pop
int
jp
or
cwtl
inc
fsincos
lcall
add
dec
inc
pop
pop
xor
in
xorb
mov
push
ret
sub
jge
dec
mov
fdivrs
cmp
and
push
outsb
sub
or
in
cld
stc
add
push
or
adcl
sbb
ret
jo
add
jmp
out
mov
xor
xchg
and
ret
push
lret
jmp
test
add
loop
cmp
cmpsl
jecxz
mov
rolb
jmp
in
mov
pop
mov
cmp
jg
fs
lods
icebp
lret
movsl
pop
test
cmp
and
mov
mov
add
lods
jecxz
testl
fs
repnz
enter
or
jge
sub
push
add
push
adc
mov
dec
add
adc
jmpw
jge
nop
xor
mov
sub
pop
dec
push
test
lods
mov
add
or
int3
rcrb
movsl
xor
xor
sub
fcmovb
pop
xchg
lea
cmpb
cmp
jmp
jge
push
pop
les
jmp
ljmp
jne
pop
shlb
incb
stc
mov
sbb
scas
loope
xor
clc
sub
xor
imul
jne
push
pop
xor
cmpb
xor
cwtl
jmp
out
mov
add
movsb
cmp
inc
lds
adc
imul
cli
and
insb
add
cli
mov
pop
add
pop
jmp
dec
sub
pop
jmp
lods
ret
or
add
xchg
cli
mov
sub
not
pop
jle
shl
loop
lods
insb
sub
mov
mov
js
mov
add
nop
add
into
or
mov
clc
lds
sub
in
pop
cs
add
imul
mov
jbe
pop
std
fldlg2
dec
mov
or
push
jmp
sbb
xor
pop
jno
and
cmp
push
out
jbe
xor
xorl
adc
fwait
cmp
nop
dec
mov
mov
sarb
adc
enter
add
sub
mov
pop
add
out
or
loop
cmc
dec
fcoml
jmp
inc
scas
in
dec
add
clc
push
hlt
sbb
fcoms
cwtl
idivl
inc
jmp
push
cli
mov
icebp
sub
loopne
das
mov
adc
pusha
xchg
lods
je
cwtl
cltd
add
sti
pop
sub
add
fs
jmp
xchg
out
add
movsl
push
mov
jle
sub
add
add
int
mov
out
mov
mov
imull
out
loopne
pop
rolb
add
add
xor
push
mul
mulb
loopne
gs
fists
notb
mov
shlb
add
pop
or
repnz
repz
inc
js
push
xchg
not
outsb
xchg
push
loope
and
pop
sub
jge
decl
test
dec
lahf
pop
add
shrd
and
inc
cli
cmc
out
aas
sbb
push
push
daa
out
add
shr
adc
adc
loop
add
jl
shlb
into
in
shrl
ss
push
push
inc
xor
pop
mov
sub
lcall
insb
loopne
xchg
jo
add
imull
pop
mov
adc
test
or
aaa
fcompl
push
das
in
cwtl
lea
call
mov
imul
out
cmp
xor
sub
clc
imul
adc
in
jmp
insl
and
cmp
mov
xchg
or
lahf
pop
mov
or
out
adc
pop
por
call
and
loop
pop
lds
rcrb
push
jge
aaa
fstps
test
dec
dec
jns
int3
adc
fidivrl
push
in
xor
dec
inc
push
dec
jl
dec
or
sbb
xchg
or
rcll
mov
sub
add
das
inc
mov
and
mov
xchg
adc
popf
inc
cmp
aad
push
sbb
or
pop
push
ret
or
in
inc
shlb
sub
add
int
add
xchg
repnz
or
and
inc
jmp
je
test
cmp
jmp
ret
inc
sub
push
ret
in
adc
insb
mov
mov
inc
push
and
xor
and
test
mov
cmp
xchg
fadds
jb
cmc
in
mov
inc
sub
loopne
sbb
sbb
lcall
push
fistpl
or
pop
shll
lock
test
jmp
and
or
jmp
sarb
imul
mov
bound
add
stos
shl
add
sbb
xor
or
push
push
jmp
cmpsb
and
pop
std
push
es
cli
test
cmp
repnz
dec
int3
or
insb
mov
into
jne
lret
sbb
rcll
filds
jno
nop
aad
pop
pop
dec
mov
mov
repz
jne
in
lcall
fdivp
inc
mov
jne
shlb
adc
dec
inc
push
pusha
cmp
sub
push
pop
sbb
xor
addr16
and
add
scas
movl
cmp
pop
sub
and
mov
fists
xchg
mov
pop
pop
div
pusha
pusha
rcrb
sub
pop
jl
pop
jmp
in
jl
sub
ret
or
test
fstpl
inc
add
mov
dec
mov
fs
push
aaa
bound
sub
into
mov
pop
aad
jmp
ljmp
sbb
test
cmp
mov
xor
rorb
mov
int3
movsb
out
or
sbb
jnp
add
shlb
xlat
decb
pusha
dec
std
jmp
faddl
jge
hlt
in
mov
pop
adc
shrb
dec
jecxz
push
sub
and
sub
pusha
sub
sbb
rcrl
shll
lock
sbb
push
ret
xor
iret
sbb
sbbb
in
inc
clc
lea
sbb
push
sub
out
dec
pusha
xor
lods
dec
adc
pop
aad
rclb
add
test
mov
cs
cs
adc
mov
subb
faddl
mov
stos
or
das
mov
pop
jo
shl
rcll
fsubrs
fs
lret
sbb
pop
xchg
push
and
cmpsl
pop
cmp
adc
add
or
xor
mov
insl
cmp
popa
enter
sbb
jg
add
loop
jge
insb
xor
sbb
push
shlb
jmp
jns
xor
or
ss
test
push
mov
mov
add
xchg
outsb
adcl
sub
test
stos
push
pop
daa
and
btr
cmp
xlat
mov
ja
out
add
aaa
jg
mov
add
mov
mov
sub
loope
push
xor
out
dec
movsb
aad
sarb
pop
xchg
add
dec
test
into
jmp
xchg
cs
repz
dec
in
cmc
repnz
das
cli
fwait
mov
pop
shll
das
jbe
dec
xor
fnstsw
xchg
fimull
or
shlb
adc
mov
sub
push
add
jne
mov
jecxz
rcrb
inc
pop
lcall
add
xor
orb
movsb
xor
cmp
insl
pusha
push
dec
outsb
jo
arpl
jmp
jecxz
add
in
jmp
mov
cli
or
inc
test
dec
daa
mov
pop
inc
mov
jge
cltd
roll
mov
jge
or
jne
mov
lods
mov
repz
cli
jb
adc
movsb
add
pop
push
outsl
dec
decl
aas
fsts
sbb
in
rcll
mov
fdivs
dec
xor
int
jnp
sbb
pop
decb
fwait
add
jmp
push
push
or
pop
push
jmp
pop
outsb
clc
cld
pop
adc
aas
loop
xchg
xchg
lret
push
pop
jmp
pop
out
sbb
dec
scas
and
dec
mov
jo
xchg
push
call
pop
mov
and
mov
je
dec
in
jmp
pop
fbstp
stc
xchg
mov
lar
pop
bound
jge
jg
push
iret
lock
inc
sub
and
pop
into
push
jmp
xchg
push
jne
test
lret
adcb
mov
sahf
jg
shll
sub
xor
adc
ret
adc
add
add
mov
mov
jno
pop
aad
loope
pushl
in
jl
cmp
or
icebp
sahf
sub
push
aad
in
sbb
jns
add
adc
scas
cmp
or
iret
inc
dec
orb
aad
inc
jmp
mov
gs
jmp
iret
and
push
addb
and
jmp
test
sub
and
pop
loopne
jmp
movb
add
push
aam
push
and
sbb
pop
adc
out
push
fdivl
push
xor
bound
dec
pop
pop
mov
inc
loope
lret
je
push
pop
in
popa
jmp
lock
sub
or
jmp
or
fmuls
andb
jp
push
dec
repz
push
movsb
sbb
ja
mov
adc
stos
loopne
or
add
or
adc
sti
dec
mov
jns
inc
inc
push
cmp
subb
ret
iret
das
dec
mov
pop
inc
jmp
test
fidivrs
or
sbb
out
pop
xor
addr16
add
and
aas
cmp
and
xchg
hlt
add
adc
sub
push
push
out
ds
arpl
push
jnp
mov
cmp
mov
push
lcall
dec
xchg
dec
or
orl
sbb
fsqrt
and
bound
popa
imul
pop
pop
dec
cli
sbb
xor
cwtl
fiaddl
cs
scas
out
sahf
fldenv
fstp
lock
jp
push
pop
add
fisubs
jb
ss
add
and
sub
sub
sti
pop
dec
jl
fists
inc
or
cmpsl
aad
mov
stos
push
pop
andl
out
xor
popf
dec
pop
mov
inc
push
mov
inc
adc
xchg
sbb
push
stc
dec
inc
insb
loope
ss
dec
pusha
scas
push
aas
mov
mov
sarb
push
shl
add
or
inc
js
jno
lahf
pop
in
bound
std
lcall
add
pop
pop
mov
add
jmp
jecxz
insb
and
adc
sti
imul
ds
adc
shrb
pop
adc
xor
adc
sub
and
das
sbb
in
xchg
push
call
sbb
jl
add
int3
cwtl
mov
and
insl
dec
ret
repnz
pop
or
pop
add
jmp
and
pop
push
mov
rcl
sahf
add
add
fistps
or
sbb
push
or
inc
nop
outsl
push
test
in
or
fldl
mov
adc
mov
rclb
mov
mov
sub
fcompl
cmp
add
loopne
xor
add
pop
or
mov
pusha
stos
and
sbb
inc
pop
adc
adc
ljmp
cli
mov
sbb
xor
or
cwtl
dec
pusha
iret
sub
aas
mov
mov
out
fiadds
jl
test
movsl
decl
test
adc
les
mov
nop
jge
insb
pop
shrb
scas
xor
test
lret
inc
dec
mov
inc
call
fmull
aam
add
int3
int3
das
iret
or
and
mov
cmpsl
jne
or
mov
addr16
push
jl
jp
push
inc
imul
push
pop
outsb
sahf
sub
pop
gs
pop
pop
add
dec
pop
push
push
pop
cld
divl
repz
xlat
push
or
std
jle
add
xchg
je
push
jnp
test
pop
cli
add
xchg
pop
add
or
test
sub
bnd
inc
pop
ret
mov
aad
lds
pushl
test
jb
xchg
pop
adc
shr
adc
or
xor
cwtl
cmp
arpl
int
mov
pop
inc
or
sub
jg
ja
pop
jl
push
test
mov
out
xchg
mov
push
push
add
movsb
dec
lret
ja
in
sbb
test
pusha
popf
add
sub
lods
and
xor
aad
int
push
js
jmp
xorb
mov
jmp
lahf
jo
inc
pop
ret
cmc
ror
or
cld
aam
sub
inc
aam
jmp
scas
cmpsl
sub
push
pop
sub
je
or
jle
jmp
adc
pop
psadbw
push
xchg
mov
imul
or
pop
and
and
jns
pop
inc
add
mov
push
sbb
call
mov
push
faddl
xlat
adc
or
push
pop
pop
cmp
mov
mov
cmc
xchg
push
arpl
into
sbb
outsb
adc
mov
out
cmpsl
pushf
orl
shrb
movsl
clc
pop
mov
flds
std
lahf
pop
out
mov
out
inc
inc
testl
dec
adc
andl
pop
mov
leave
push
mov
fucomp
fwait
je
pop
mov
inc
stos
cmpsb
and
pop
imul
add
test
lret
dec
pop
adcl
add
jecxz
xorb
arpl
outsl
xorb
pop
or
es
pop
addl
adc
jae
xchg
mov
imul
fiadds
jge
ret
clc
xor
daa
dec
inc
adcb
sub
jmp
inc
pop
and
ret
frstor
push
and
mov
jb
pop
call
or
clc
nop
popf
js
and
xchg
repnz
pop
mov
test
fldcw
add
inc
ljmp
push
cs
mov
add
loope
sbb
in
loop
je
sbb
mov
lock
push
mov
aaa
cmp
push
pop
jmp
inc
out
fldcw
jecxz
orb
pop
cwtl
xor
enter
movsl
adc
cmp
cmp
mov
sarl
pop
daa
notl
enter
jns
xchg
shll
out
add
loope
jge
and
mov
sbb
les
je
mov
pop
push
jb
inc
roll
int
loopne
inc
decl
or
and
xor
pop
push
mov
pop
inc
lods
and
push
notl
xchg
jmp
test
inc
xor
inc
jl
dec
adc
mov
inc
fstpt
arpl
enter
mov
repnz
and
mov
cld
rol
out
cmc
aad
inc
pop
es
inc
pop
cmpb
das
mov
mov
adc
mov
repnz
aaa
and
jmp
adc
scas
push
faddp
and
cwtl
loope
jecxz
or
xchg
xchg
or
ret
popf
fnstsw
notl
lds
movsb
icebp
mov
fmuls
xchg
movsl
mov
xor
repnz
jmp
push
inc
mov
mov
mov
inc
stos
nop
inc
stc
pop
and
push
mov
push
sbb
inc
nop
and
jle
cmp
jge
or
add
and
aad
sub
or
nop
xor
mov
ret
mov
mov
daa
call
lahf
add
js
push
xchg
and
mov
clc
pop
inc
rorb
mov
lcall
push
out
lds
movb
mov
or
mov
sub
pop
push
or
jle
xchg
stos
testb
mov
jmp
das
sti
adc
pop
mov
pop
push
pushw
xchg
pop
push
fs
subb
sub
pop
jmp
js
outsb
adc
mov
sbb
in
mov
gs
xchg
popf
xchg
das
jmp
or
xlat
pop
mov
imul
stos
ss
das
jmp
xchg
xchg
mov
add
adc
mov
mov
pop
mov
jg
push
cmpsb
mov
add
int3
cmp
scas
cmp
cmp
cmp
cmpsb
filds
out
mov
pop
push
out
mov
inc
sub
push
or
jno
jns
imul
js
rorb
or
imul
jmp
sahf
or
nop
adc
push
jns
lods
notb
sbb
jae
cli
addb
adc
jb
addl
cmp
or
add
aaa
jge
pop
jmp
mov
repnz
ja
mov
lds
lret
stc
cs
add
sbb
aad
add
jmp
push
or
mov
xchg
adc
jmp
inc
ljmp
icebp
notb
icebp
sub
xor
neg
dec
in
jae
mov
xor
lret
add
pop
cmp
jmp
push
stos
inc
pop
or
insb
mov
repnz
lds
sbb
cwtl
cmp
lahf
lahf
mov
inc
inc
jmp
subb
in
leave
dec
scas
add
add
mov
sub
lds
or
add
rcrb
test
and
adc
adc
repnz
out
mov
add
pop
xor
stc
jne
repz
or
int
push
out
dec
sbb
repz
les
fmuls
fmull
inc
call
call
mov
xlat
jp
adc
repnz
cs
jl
imul
mov
cmp
push
lea
mov
pop
mov
imul
iret
and
pop
ljmp
push
shlb
ret
mov
push
push
mov
daa
sub
aam
rclb
iret
js
sbb
mov
stos
xchg
jbe
pop
cmp
add
fstl
add
movsb
dec
lret
cmp
or
js
xchg
insb
cmpsb
inc
adc
ret
adc
and
xchg
pop
insb
or
ja
and
add
pop
cwtl
push
sub
inc
loop
popa
cmp
add
int3
pop
add
in
push
pop
push
add
push
adc
cmp
adc
jnp
cwtl
dec
or
pusha
cmp
cmpsl
mov
xchg
jge
arpl
dec
inc
sahf
dec
outsb
pop
icebp
cmp
ret
sub
pop
test
push
mov
sbb
mov
jmp
xchg
fistpll
xchg
sub
xchg
ret
icebp
leave
mov
lds
jae
pop
in
mov
mov
gs
mov
xorb
sub
insb
leave
test
scas
frstor
ret
movb
jb
fisubrl
adc
test
and
xchg
push
add
xor
jns
int3
add
sub
pop
jae
dec
iret
jecxz
mov
or
fdivrs
fldenv
fimuls
mov
sbb
mov
movsl
mov
sub
sub
mov
adc
or
mov
mov
xor
fnsave
pop
inc
pusha
dec
sub
dec
jmp
lods
push
add
jo
adc
mov
into
or
into
add
ret
lret
and
mov
push
mov
ja
icebp
ljmp
lret
shl
pop
cwtl
popf
into
imul
or
sub
lock
mov
lods
xorps
lcall
push
xchg
jmp
lcall
mov
ljmp
push
out
aam
cmp
js
les
pop
push
ret
sub
imul
mov
fsubr
xchg
nop
lahf
pop
shr
push
test
in
mov
test
lahf
ror
xor
pop
lahf
repz
xchg
and
and
and
inc
lret
fisttpll
push
push
push
dec
ror
or
mov
ret
loop
movsl
inc
scas
xor
leave
shr
inc
not
xchg
pop
pop
ja
or
jmp
jb
das
xor
push
popf
dec
push
clc
add
sub
sub
adc
inc
add
cmc
jno
jg
sbb
mov
cmc
test
pop
mov
sbb
jmp
movsb
sub
out
or
pop
outsb
pop
bound
push
cmpsl
cmp
mov
jnp
lock
sbb
mov
data16
xor
inc
xchg
dec
or
adc
sbb
std
mov
xor
mov
mov
adc
and
psubusw
mov
cmpsb
out
mov
or
push
jmp
clc
push
xchg
xor
leave
std
and
clc
hlt
and
push
lock
pusha
xchg
dec
les
mov
sub
jns
push
push
faddl
out
push
mov
lods
sahf
adc
or
gs
movsb
sub
subl
je
sub
mov
inc
or
mov
push
enter
mov
fsubl
ljmp
lods
add
mov
sti
das
out
xor
daa
int
cs
inc
loope
loop
sbb
cli
bound
and
push
inc
cmp
int3
push
hlt
rcrl
rorl
add
pop
sbbb
jb
add
loope
push
sbb
push
jo
lahf
jbe
jbe
adc
mov
mov
mov
add
jge
add
xchg
cmpsb
sbb
mov
mov
call
inc
les
out
insb
or
call
lds
lods
sbb
push
jmp
movsb
stc
shlb
jl
mov
cltd
sti
and
jnp
sbbb
in
jbe
mov
negl
icebp
outsb
mov
push
jne
mov
jg
jecxz
xchg
orb
jae
push
or
in
mov
mov
mov
cs
push
pusha
dec
mov
adc
add
add
mov
inc
or
adc
pop
cmp
push
or
push
lods
xchg
xchg
lret
fs
subb
addb
add
inc
sti
pop
add
wrmsr
in
daa
pop
sub
jmp
ficoms
sbb
sub
test
xor
inc
mov
inc
shlb
xchg
pop
jnp
xor
sub
xor
je
call
or
sub
lock
jb
mov
add
jno
mov
popa
xor
pop
int3
in
add
ljmp
ss
push
pushf
or
faddl
xchg
int
add
roll
inc
adcb
js
inc
ret
pop
loopne
mov
test
push
xor
in
xorb
and
int
and
jo
mov
push
push
movsb
test
cmpsl
jle
adc
xor
xchg
pop
inc
fstpt
cmc
add
and
mov
test
adc
jecxz
and
call
das
ljmp
jmp
clc
mov
popf
and
shll
and
or
adc
addr16
xor
icebp
dec
pop
js
mov
or
jecxz
orb
lock
test
add
pop
adc
popf
in
addl
mov
pop
mov
mov
pop
rolb
mov
mov
jae
xchg
pop
enter
cs
ret
test
out
shl
pop
cmp
jmp
inc
mov
in
movsl
rol
cwtl
into
fwait
jae
js
filds
inc
add
mov
sub
orb
pop
call
ljmp
ds
fmuls
rorb
jge
lods
cmp
bound
dec
dec
jmp
dec
add
outsl
push
inc
popf
std
sahf
jb
dec
sar
pop
cmpl
dec
adc
insl
arpl
dec
mov
and
mov
jmp
pop
enter
push
dec
ljmp
clc
dec
mov
pop
popf
push
outsl
loop
xchg
mov
mov
mov
push
push
mov
push
hlt
shrb
or
popf
pop
cmp
int
out
xor
pop
fisttpll
add
or
out
jae
pop
mov
xchg
shll
xor
pop
add
pop
xchg
jae
push
in
icebp
ss
adc
push
pop
add
adc
rclb
jl
in
add
dec
sbb
scas
ljmp
xchg
inc
mov
pop
outsl
xchg
gs
stos
mov
push
dec
out
sub
push
in
jb
mov
addl
mov
inc
adcb
sub
adc
stos
push
dec
leave
ja
xor
jl
sub
or
repnz
push
pop
jb
sub
mov
push
ret
lret
push
pop
push
mov
inc
cmc
pop
cli
mov
xchg
aad
repz
push
lcall
imul
pop
xchg
mov
fcos
or
hlt
cmpsl
aas
dec
mov
xor
add
xchg
in
std
push
xor
sarb
inc
sbb
iret
cltd
xor
adc
adc
mov
xor
jmp
mov
dec
or
pop
loope
fwait
sbb
xor
test
js
push
out
movsl
cmovno
push
sub
xchg
dec
jnp
inc
add
fadds
or
popf
int3
mov
xor
in
xchg
mov
push
push
mov
enter
adc
sbb
fistl
out
bound
push
notl
popa
mov
or
push
pop
sar
and
pop
sub
mov
or
notb
sub
jp
jmp
shll
adc
ret
dec
out
cmp
or
cmpsb
sub
push
push
cmpsl
int3
pop
jae
scas
jle
adc
add
sti
scas
popf
in
jle
fsts
xchg
decb
test
push
movsl
pop
lahf
xchg
push
mov
sub
sub
js
pop
int3
sbb
pop
and
cmc
or
jbe
jae
mov
or
xor
orb
test
xchg
in
stos
or
orb
pop
push
pop
cltd
ss
or
sub
test
les
xor
imul
add
idiv
sbb
cltd
test
js
sub
movsl
mov
cmp
push
mov
aad
das
add
add
or
push
loop
jno
sbb
xor
or
jo
pop
add
push
jmp
mov
cmpsb
lret
dec
or
jmp
dec
xchg
adc
stos
xchg
push
add
mov
sub
in
cmp
adc
fdivrl
dec
mov
insb
add
dec
or
jmp
mov
jge
mov
inc
jb
nop
popf
or
adc
ficoml
mov
cld
pop
or
sbb
push
pop
data16
sub
adc
shlb
cld
jle
hlt
sbb
scas
lahf
and
adc
cmp
sbb
dec
mov
add
test
stc
jno
add
and
jmp
int
jp
mov
mov
push
inc
xor
push
pop
add
mov
push
test
ret
pop
leave
jne
test
and
jae
das
jmp
call
xor
in
fnstenv
xor
push
dec
mov
cmp
dec
pop
loope,pt
cs
jb
adc
add
push
dec
and
stos
dec
out
or
xor
pop
push
sbb
add
sbb
pop
lock
pop
jmp
std
sahf
dec
sbb
inc
leave
dec
loope
cmp
inc
ljmp
imul
lcall
repz
push
jge
lea
call
sbb
push
xor
lea
aas
fnstsw
cmpsl
push
cs
cmp
clc
rcrb
pop
int3
and
idivb
subb
push
xor
imul
and
popa
addl
adc
sti
daa
mov
sub
loopne
push
push
push
daa
cmp
daa
pop
stc
mov
jno
inc
jmp
adc
fnstsw
cld
movl
add
jge
push
sub
sbb
adc
xchg
or
roll
enter
xlat
js
sbb
push
sub
les
imul
inc
shlb
push
fdiv
mov
sbb
cmpsl
or
leave
es
aad
xchg
jns
xor
pop
roll
aam
lds
insb
stos
data16
xor
pusha
pop
adc
inc
push
jno
sub
sbb
jmp
pop
inc
sub
sub
mov
jns
daa
mov
arpl
lock
shr
add
pop
adc
shll
adc
adc
out
jns
dec
in
testl
andb
sub
das
scas
test
inc
mov
ljmp
sbb
inc
inc
loope
xchg
cmp
outsb
jno
cltd
push
push
pop
loope
and
jecxz
mov
repz
push
mov
les
pop
movsb
mov
je
add
cwtl
stos
invd
adc
scas
add
rorl
imull
js
mov
pusha
lcall
pop
pop
cmp
jne
push
adc
mov
add
int
and
mov
out
pop
mov
mov
in
inc
add
cmp
test
sub
cwtl
jp
popf
push
or
cmp
ja
mov
bound
lahf
cmp
push
in
leave
or
dec
add
push
aas
inc
xchg
addr16
jo
jmpw
mov
push
fs
shlb
inc
xchg
shrl
lods
sbb
inc
lds
jle,pn
pop
das
in
iret
test
xchg
xorb
icebp
sub
loop
xchg
or
insl
in
adc
ljmp
xor
mov
xchg
insl
sub
mov
ljmp
or
sub
ret
mov
je
popa
lret
lret
sub
jne
jmp
add
push
inc
cmpl
push
call
ja
gs
push
add
mov
fs
repz
push
pop
and
stc
rcrl
adc
add
or
loope
push
cmp
in
add
push
sbb
mov
dec
jp
or
jo
adc
out
cmp
rcrl
into
cmpsl
add
psubsw
xchg
jne
daa
xor
in
mov
fwait
mov
test
jl
mov
popf
sub
mov
nop
insl
mov
mov
pop
stos
inc
mov
xor
jmp
into
lret
in
aas
mov
rcrl
subb
push
cmpl
pushf
rcrb
test
cmc
push
xchg
xor
or
lret
shl
push
lret
xchg
addb
jo
in
or
lret
xchg
dec
pusha
jmp
xchg
add
in
mov
pop
movsb
jl
pop
fsubr
xor
adcb
pop
adc
add
push
lods
add
or
pop
or
add
rorb
and
sahf
push
daa
mov
push
aas
mov
popf
fcoms
push
or
movsb
pop
xor
hlt
shll
sahf
test
or
loopne
fadds
pop
mov
and
push
inc
xchg
stos
push
fxch
movsb
pop
roll
mov
lods
sarb
cli
loopne
add
daa
ss
insb
ffree
ret
xchg
sbb
stos
dec
inc
dec
outsb
rolb
inc
cmp
jl
call
inc
out
clc
push
dec
repnz
add
sti
xchg
jl
ja
std
lds
add
sbb
dec
ljmp
mov
lock
aaa
xchg
out
pop
mov
dec
or
and
aam
mov
cs
mov
mov
mull
cmp
jp
jnp
popf
int3
jge
inc
jecxz
aad
xchg
stc
jl
fildll
test
xor
inc
push
cmp
sub
inc
dec
push
repnz
cmp
cld
ljmp
testb
adc
sahf
add
cli
aas
dec
rcrl
pop
jmp
pop
or
sub
imul
sti
cmp
push
xchg
sub
fldt
lock
daa
jmp
pop
call
mov
sub
xchg
cmpsl
or
xlat
add
xor
push
mov
jmp
mov
xchg
popf
out
cmpb
push
adc
fmull
push
arpl
sub
mov
jbe
lret
jle
das
mov
test
adcb
or
out
pop
cmp
cmp
sbb
repz
repnz
sbbl
mov
mov
in
outsl
ds
test
int
sub
jle
jns
push
lods
add
sub
in
xchg
mov
add
loop
cmc
push
xor
pusha
mov
push
jmp
mov
les
out
push
and
pop
jmp
rol
fldenv
jge
jecxz
push
or
or
xor
mov
nop
xor
sub
jle
adc
or
jmp
inc
int
hlt
insl
mov
inc
out
add
movsb
int
sti
cli
jne
xor
and
jae
push
data16
std
dec
test
ljmp
mov
adc
cmp
jbe
clc
mov
xor
cmp
std
dec
add
ret
adcb
sbb
sub
addb
stc
pop
lds
xchg
xchg
icebp
stos
cmp
add
pop
mov
ficomps
in
sub
mov
fs
jp
push
addb
jns
pop
pop
cmp
mov
insl
dec
push
es
mov
mov
or
or
adc
aam
push
mov
fisubl
add
push
xlat
push
sbbb
call
dec
lea
pop
sub
popa
popa
sarl
jmp
and
adc
clc
inc
dec
incb
push
test
or
pop
jmp
mov
in
adc
xor
xor
mov
or
imul
add
cli
testb
jne
gs
adcl
icebp
ror
pop
daa
pop
and
and
push
fcoms
dec
cmpsl
adc
fcomp
sub
sbb
dec
rorb
jno
jmp
push
mov
test
push
pop
daa
mov
inc
repnz
push
mul
sub
repz
fidivrl
add
push
test
pop
scas
sbbb
pop
pop
mov
pop
xor
clc
adc
pop
fcmovbe
insb
mov
sarl
stc
mov
jmp
movsb
sbb
inc
pop
mov
push
add
in
test
push
cli
xor
mov
and
push
sub
stos
add
pop
orb
int3
and
add
or
pop
addl
push
push
mov
mov
inc
jno
scas
shlb
adc
div
dec
push
mov
or
out
push
mov
or
fwait
into
std
push
add
pop
pusha
or
jnp
mov
cli
js
add
loop
int3
push
xor
and
jmp
or
pop
xor
mov
jp
sar
push
jnp
add
add
jmp
movsb
sub
cmp
fnstcw
rol
jmp
pop
testb
add
sub
andl
insl
cmp
inc
mov
dec
push
lret
dec
pop
mov
cmp
dec
bound
outsl
cmp
repnz
inc
faddl
jmp
and
addl
pop
sub
mov
lods
add
push
repz
pop
ret
in
addb
cli
mov
xchg
and
pushf
roll
filds
jnp
mov
test
movsl
rol
pop
cmp
out
in
jp
mov
sbb
or
push
lods
pop
shl
add
inc
xor
pop
lea
push
fmul
mov
add
test
pop
mov
loop
xchg
dec
jo
inc
mov
jns
add
push
add
pusha
scas
testb
clc
jecxz
xchg
cmp
jno
roll
cmp
push
popa
add
inc
mov
fidivrs
insl
xor
xor
jmp
mov
inc
enter
xchg
jecxz
nop
jbe
and
sti
pop
mov
fiadds
adc
out
mov
dec
push
arpl
and
in
repnz
push
adc
in
out
je
mov
rclb
inc
shrl
adc
push
pusha
dec
cwtl
mov
sarl
arpl
pop
push
sub
pop
gs
sbb
lret
sub
cs
mov
adc
fsubrl
mov
in
sbb
xchg
jnp,pn
inc
imul
jnp
jno
adc
mov
inc
loopne
lahf
adc
divb
jo
xchg
xchg
pusha
and
xchg
push
add
and
mov
adc
pop
cli
mov
and
fsubrp
pop
adc
sahf
xor
loopne
sub
adcl
sub
iret
pop
adc
test
mov
xor
pop
sbb
shrb
flds
insb
aas
mov
add
xor
jg
pop
push
nop
out
dec
cs
push
xchg
push
les
stc
xor
sub
fcompl
mov
jmp
or
out
and
repz
and
mov
add
lret
js
xchg
add
jmp
cli
add
push
push
push
dec
pop
jmp
loope
daa
cld
dec
push
and
adc
or
and
push
push
or
jmp
adc
fwait
test
push
loopne
jbe
adc
jnp
lret
in
arpl
pop
add
movsl
add
push
mov
jmp
or
loop
out
fsubl
push
sbb
xchg
arpl
test
cld
mov
sbb
mov
push
loopne
icebp
add
and
pop
xor
cmp
nop
pop
push
cwtl
test
lea
popf
jecxz
inc
add
push
sarl
nop
mov
loope
movsb
xor
adc
push
sbb
lret
jns
loop
test
aas
jl
push
add
fs
loop
mov
roll
outsl
add
inc
inc
jmp
test
imul
and
push
and
xor
loop
gs
outsl
movsb
pop
rcll
shlb
xor
sub
jecxz
popa
adc
mov
fisttps
adc
dec
sbb
push
jnp
ds
lea
hlt
int3
jmp
cmp
stos
xor
sub
jbe
add
adc
cmp
out
mov
mov
mov
sub
fisttps
mov
mov
adc
mov
inc
aaa
pop
sbb
imul
cltd
push
jne
nop
fsubs
lods
pushf
push
js
sbb
lods
pop
into
stos
push
jmp
add
cmp
outsl
loopne
rolb
add
jnp
addl
ret
push
jmp
pop
lahf
sub
pop
xor
nop
or
and
push
dec
add
jmp
in
int3
push
jne
je
and
arpl
jge
dec
je
inc
or
daa
sbb
stos
mov
adc
out
or
imul
movsbl
lcall
add
inc
and
or
out
mov
dec
test
mov
cld
lret
insb
pop
sahf
or
xchg
and
inc
das
or
aam
repz
and
jp
jmp
fdivrl
outsb
cmp
bnd
subb
adc
loope
leave
jb
or
cwtl
icebp
aas
add
rclb
cld
xchg
push
mov
add
je
testl
and
or
dec
mov
icebp
lahf
push
repnz
lret
sub
xchg
lds
imul
pusha
push
loop
push
xlat
les
cmpl
jl
das
pop
sbb
aad
mov
jne
push
lock
add
add
out
cs
or
std
mov
push
mov
shl
pusha
dec
rolb
cwtl
pop
mov
aam
mov
mov
pop
fstps
push
and
mov
insb
in
or
in
sbb
push
mov
std
cmp
mov
cmc
sbb
xor
cld
jle
jg
ret
push
push
ret
jmp
mov
fildll
sbb
push
sbb
pusha
xor
das
pop
cmc
inc
or
outsl
sub
fisubs
jle
jp
fistl
inc
and
xchg
aam
pushf
add
sbb
adc
in
pop
icebp
ljmp
mov
jle
ret
roll
jnp
lock
pop
jmp
pop
xchg
sti
push
ds
xchg
inc
ficompl
bound
movl
js
pop
ds
sbb
test
or
test
mov
adc
mov
loop
rcrl
pop
jae
clc
adc
add
mov
and
ret
sbb
inc
jp
adc
fwait
lods
test
and
mov
mov
ret
add
sarb
jo
adc
fmull
mov
call
dec
ss
jmp
rorl
pop
sbb
xchg
add
sub
call
jmp
mul
in
push
push
add
push
pop
insl
adc
lret
inc
out
ja
mov
sbb
xchg
dec
loopne
mov
je
xlat
add
pop
jne
loope
scas
fists
cmp
jl
mov
psllw
xor
cs
mov
sub
inc
cli
mov
test
mov
cmp
pop
icebp
stc
pop
pop
pop
adc
push
add
ljmp
adc
daa
out
fdivr
push
lock
cmp
jno
jp
outsb
add
sub
cmp
xorl
aas
int
in
imul
lock
lods
or
jecxz
mov
add
push
sub
xchg
mov
push
pop
out
loop
sbb
push
les
xor
adc
pushf
push
xchg
mov
cmc
ds
pop
cmp
icebp
sbb
mov
cmp
in
push
or
aas
ss
sub
inc
mov
js
inc
adc
adc
mov
rolb
out
and
add
jne
sub
or
sti
xlat
push
decl
insb
stos
push
iret
inc
notl
loopne
dec
mov
sub
das
jmp
inc
push
sub
ficomps
lahf
lods
cs
inc
xchg
lods
enter
je
imul
adc
lret
loope
add
sbbb
inc
adc
rcrl
mov
ret
data16
push
data16
push
lahf
fisubrs
mov
dec
jmp
mov
js
lock
pusha
xchg
adc
add
push
pop
xchg
cmp
aam
pushf
fninit
mov
mov
int
pop
bound
mov
aad
fisubl
in
mov
and
pop
out
dec
push
pushl
neg
add
push
xchg
inc
and
aam
or
pop
testl
leave
sbb
out
xor
fstpt
mov
xor
push
cmpsl
jge
gs
mov
clc
jb
sub
dec
popa
jmp
and
add
push
push
faddl
push
mov
mov
cltd
cmp
inc
xchg
pusha
or
adc
rorl
repz
test
sub
leave
arpl
movsb
out
test
or
fwait
add
inc
test
and
mov
add
je
jmp
pop
and
lret
or
cmp
cs
es
and
popf
inc
push
xlat
inc
xor
sub
sub
push
push
pop
outsb
cltd
or
cmp
pop
pop
push
mov
pop
daa
push
push
jmp
lret
mov
in
jg
decb
mov
incb
in
push
pop
mov
dec
js
or
mov
push
jb
andl
push
stc
pop
sbb
inc
sbb
vpsllw
ret
imul
xchg
int3
mov
or
adc
or
shr
insb
roll
add
and
jb
or
ret
lds
ja,pt
pop
push
jmp
jmp
fsubrs
and
sbb
repnz
push
sub
push
xorb
jecxz
mov
and
jg
xchg
mov
cmp
decl
cld
aaa
inc
dec
data16
popf
fdivs
cmp
pop
mov
xor
cmc
pop
lods
icebp
mov
mov
sub
lds
mov
and
das
adc
sub
add
push
sbb
dec
cwtl
adc
out
sarl
lods
stos
lock
mov
jae
pop
subl
cmp
pushf
mov
gs
in
sbb
mov
js
data16
stos
lods
jnp
pop
cmp
pop
push
mov
inc
pop
xor
lods
lods
pop
repz
data16
mov
idivl
mov
sub
cltd
rolb
gs
push
mov
cmp
jne
push
xor
into
pop
test
pop
mov
jns
fucomip
sbb
push
sar
stos
xchg
mov
iret
lock
les
adc
sub
notl
dec
test
int3
or
bnd
arpl
mov
sub
notb
inc
ljmp
push
repnz
fsubrs
outsl
push
pop
push
sti
or
or
pop
out
sarb
lret
mov
push
hlt
dec
add
rcll
mov
lods
outsl
sarl
addr16
inc
jle
loope
inc
xor
aaa
inc
fbstp
adc
dec
jnp
cmp
jg
dec
not
popa
fsub
lods
cmp
jno
cmp
push
cmp
add
adc
or
or
fists
add
idivl
and
mov
and
fnsave
ljmp
test
ljmp
mov
or
push
or
add
popa
aas
lock
xchg
sbb
cld
inc
cmp
movsl
das
jle
ljmp
mov
stc
cmp
lock
push
jp
rorl
pop
jnp
jo
or
pop
pop
push
shrl
and
jmp
aas
ljmp
add
lahf
sub
data16
mov
insb
sbb
push
dec
in
xor
and
pop
in
xchg
out
or
lock
pop
push
lds
icebp
nop
ljmp
jg
dec
aas
xchg
jl
pop
and
pop
cld
insl
dec
xchg
aas
inc
jns
clc
add
lea
lret
dec
or
out
mov
adc
sbb
pop
mov
mov
pop
push
jmp
cmp
jg
aam
jae
dec
jb
sbb
xsavec
sbb
inc
xorl
jmp
inc
mov
mov
test
mov
push
inc
sbb
add
movd
push
shll
xor
das
cmpl
add
pop
adc
mov
movsb
clc
idiv
xchg
sbb
cwtl
jbe
mov
xchg
pop
pop
mov
xor
fdiv
pop
cmp
shl
insb
jae
ja
cmc
pop
sub
mov
addl
push
loope,pn
cmp
mov
xchg
or
jle
push
bound
cld
imul
insb
mov
nop
push
in
ja
ss
movsb
js
xchg
fiaddl
xchg
test
inc
insl
push
mov
popa
push
jle
ret
jl
pop
pop
pop
mov
lret
push
jmp
fistpl
xor
inc
push
test
xchg
fcoms
jno
xor
fnstenv
les
adc
push
xor
pop
cld
sub
or
xchg
std
mov
fbstp
ret
pushaw
daa
imul
cmp
adc
lock
jnp
inc
jmp
out
push
adc
sub
adc
inc
loope
push
cld
dec
adc
int3
pop
add
or
jp
push
rolb
mov
out
adc
dec
ljmp
fsubl
ffreep
enter
dec
loope
imul
pop
call
mov
add
pop
jle
mov
pop
lretw
movb
add
jg
incb
mov
add
mov
out
xchg
cld
shll
pop
mov
sbb
jmp
push
xor
shrl
mov
dec
in
sbb
rorl
sbb
pop
dec
fldl
ja
cli
sbb
mov
out
cwtl
pop
in
repnz
add
js
stos
sub
js
out
dec
or
add
ljmp
repnz
cmp
imul
add
dec
mov
add
push
mov
dec
jb
dec
adc
div
inc
xchg
xor
inc
inc
jns
dec
aam
inc
mov
jo
pop
push
cmc
mov
out
int
mov
sbb
xchg
xchg
adc
mov
push
in
ret
stos
fdivrp
pop
or
cmp
lock
test
or
movsb
dec
popa
sbb
cmp
out
cmp
xchg
adc
int3
add
cmc
ss
sub
add
pop
lcall
bound
xor
jne
pushf
xchg
je
add
cmpsl
push
repz
pushl
add
cmp
add
xor
popa
jle
scas
fnsave
in
xchg
repz
enter
add
rclb
mov
cwtl
sbb
sub
ss
ljmp
call
aas
mov
cmc
jo
das
mov
sub
jecxz
xchg
cli
mov
inc
xchg
ljmp
fcompl
imulb
mov
in
ljmp
sbb
or
or
mov
std
sti
iret
ret
xchg
call
cmpl
sub
outsl
in
jb
inc
lods
pop
add
rol
pop
cwtl
or
sahf
inc
std
mov
jp
add
mov
mov
xor
inc
popa
outsb
lcall
and
andl
stc
add
add
inc
lea
stos
dec
mov
dec
scas
sti
leave
push
pusha
inc
loopne
xorb
mov
push
scas
mov
daa
test
jnp
lret
mov
aas
jmp
int
push
insb
and
or
mov
adc
jmp
push
out
lods
divl
and
popa
adc
leave
movsl
push
pop
dec
int
xchg
mov
sub
int
into
mov
iret
or
outsl
and
in
and
aaa
dec
sub
dec
fwait
cmc
arpl
jmp
jo
push
pop
in
or
sbb
das
aad
inc
or
outsb
in
add
sub
add
xlat
outsb
jns
fsts
or
mov
adc
dec
sbbl
and
mov
hlt
jb
es
dec
mov
jmp
xchg
out
shlb
sbb
sub
test
cs
enter
rcll
imull
mov
sub
push
loop
xchg
and
mov
jp
imul
int
loope
adc
adc
jmp
das
jmp
loopne
push
rcr
dec
in
testl
icebp
stos
addb
mov
adc
ja
test
fmul
pop
push
pop
push
clc
in
xor
mov
ja
sub
mov
lahf
dec
cmp
pop
pop
xor
mov
out
out
sbb
ror
pop
loop
xlat
mov
lds
mov
inc
insl
adc
loope
test
mov
push
inc
imul
and
xchg
sbb
add
mov
ficoml
loope
or
pop
test
popf
xor
inc
pop
push
fistpll
out
es
sub
xor
xchg
sti
pop
fdivr
pop
mov
jmp
sub
pop
mov
fsubrl
xchg
out
and
sbb
test
insl
inc
aam
adc
add
inc
imulb
and
stos
push
decl
push
pop
xchg
push
sub
icebp
push
icebp
cmp
xor
push
stc
dec
pop
or
push
mov
mov
pop
repnz
jmp
push
in
xor
cmp
push
dec
jmp
jg
add
xchg
fldenv
fs
cmp
arpl
adc
xor
hlt
cmpsb
outsb
icebp
or
add
movsb
lret
repz
mov
ja
dec
inc
sti
ret
add
jo
dec
mov
mov
xchg
aaa
and
add
jge
mov
or
adc
outsl
aam
or
pusha
std
jno
leave
dec
push
mov
push
jmp
mov
push
mov
leave
sarl
decl
add
popa
repz
ss
scas
out
adc
sahf
sbb
adc
mov
lods
or
mov
nop
mov
xor
loop
sub
jecxz
cmpsl
arpl
fdivs
inc
loope
jmp
cmpsb
loopne
jg
add
push
cli
fsubrl
mov
sbbl
cmpb
xchg
divl
push
jmp
adc
sbb
cmpsl
jle
xor
and
movsl
sbb
pop
jecxz
mov
xor
pop
pop
jle
adc
mov
adc
stos
addb
popf
lret
or
jae
addr16
add
inc
lds
xor
sti
sub
push
ret
jmp
sarb
sbb
mov
mov
push
adc
outsb
gs
jo
mov
jmp
lret
push
or
std
movsl
cmp
cltd
or
and
mov
mov
in
xchg
mov
std
pop
xlat
fwait
sbb
loope
shrl
dec
push
sub
cltd
mov
push
or
das
aam
mov
jo
out
cltd
add
and
adc
adc
and
cwtl
das
push
pusha
inc
xor
stos
inc
gs
cmp
inc
sbb
lods
ret
adcb
cmp
jbe
fbstp
outsb
inc
pop
pop
je
pusha
and
pop
dec
or
inc
neg
sub
sub
jns
adc
fdivl
xor
jne
aam
int
push
mov
rcl
rcll
inc
xchg
push
iret
pusha
dec
js
insb
mov
das
jmp
push
shufps
sub
sub
xchg
in
mov
mov
leave
std
mov
clc
out
sub
and
mov
ss
sti
adc
lret
fisubrs
sahf
lock
adc
xchg
adc
es
hlt
xchg
rclb
xlat
or
shl
jmp
in
fnstenv
insb
enter
xchg
or
into
push
rcrb
idivl
adc
cmp
std
imul
inc
nop
jne
ds
cwtl
adc
icebp
pop
pop
imul
push
xchg
xchg
rclb
shll
adc
loope
adc
outsl
or
lds
cmpsl
ficoms
xchg
push
cltd
mov
add
popa
jbe
or
jb
cmp
jmp
dec
clc
cwtl
in
push
pop
sub
mov
add
mov
push
mov
sub
add
pop
xor
cmp
jg
iret
inc
pop
and
test
vmovdqa
call
mov
jg
jmp
and
loop
pop
add
adc
popa
push
add
or
sub
into
jo
adcl
sub
inc
lcall
jmp
cmp
pop
cwtl
out
dec
leave
ljmp
jle
jmp
xor
and
mov
pop
out
iret
sti
adc
popf
push
push
and
adc
cmpsb
xor
add
push
ret
push
add
or
aas
jmp
xchg
or
in
ret
inc
inc
dec
fs
mov
mov
adc
push
nop
sub
sbbb
adc
out
add
or
and
sbb
stos
jl
add
daa
mov
out
fidivl
and
xchg
xorl
or
xor
push
stc
adc
shll
out
add
out
lea
inc
out
cltd
pop
bound
decb
test
jmp
das
pop
mov
scas
or
adcb
jmp
sub
add
test
popa
aaa
addl
test
jecxz
xchg
cltd
test
inc
push
dec
push
rcrb
and
adcb
jmp
mov
jns
push
icebp
pushf
outsl
in
pop
push
cmp
jecxz
dec
mov
push
xor
pop
mov
jle
sbb
jmp
sub
sbb
shl
pop
insl
mov
fsubrl
loop
repnz
xchg
push
xchg
je
mov
pop
lods
popa
xor
imul
push
inc
mov
add
std
xor
mov
pop
das
lret
or
lahf
pop
test
mov
jle
sarb
mov
push
push
repnz
push
xchg
in
mov
pop
dec
shll
xor
sbb
mov
sbb
subl
push
int3
lds
std
add
scas
shr
dec
xor
out
xchg
push
pusha
mov
pop
dec
add
jae
aas
nop
popa
mov
jnp
movl
pop
xchg
test
push
popf
pop
movsl
mov
jo
pop
pop
sub
inc
dec
dec
loopne
arpl
subl
jp
xchg
popa
arpl
in
xor
aas
sti
xchg
jo
sbb
jg
outsb
xor
filds
dec
sub
sbb
movsl
ljmp
repnz
js
mov
xor
in
adc
fadds
seto
lcall
lds
call
pop
push
jmp
cmp
testl
aas
orl
dec
mov
cmpl
xor
fbstp
dec
test
push
pop
int3
pop
add
cmp
xchg
or
fcoml
mov
insl
mov
pop
add
and
adc
or
xor
xchg
les
sub
pop
pop
dec
pop
push
jnp
adc
mov
andb
stos
mov
fiaddl
es
xor
pop
jno
outsl
xor
or
iret
data16
pop
add
pusha
movsl
lret
hlt
push
cli
out
les
xor
je
xlat
cwtl
jo
lcall
or
cld
lods
loop
jp
jae
jno
dec
jb
push
out
jmp
inc
and
xor
rcrl
cli
and
cmp
jns
es
dec
stos
add
lock
test
in
push
mov
pop
push
push
inc
push
push
pop
shr
mov
or
add
leave
sbb
scas
add
dec
into
outsl
xchg
das
push
push
or
xor
fldcw
in
pop
jl
jb
mov
push
xor
sbb
push
js
clc
push
dec
dec
addl
mov
std
clc
pop
dec
ljmp
xchg
orb
xchg
sub
dec
movsb
pusha
jg
or
sub
add
aas
sub
jmp
jle
sub
pusha
dec
adc
push
add
push
sbb
push
push
js
and
insl
xorb
dec
ret
cmp
ds
pop
mov
add
add
repnz
add
divb
pop
addb
mov
sub
mov
mov
insb
daa
cmp
sti
mov
ja
xchg
push
inc
js
mov
sbbb
in
and
xor
ret
xor
jge
sub
push
push
fldenv
pop
jmp
add
pop
inc
inc
mov
xchg
pop
or
add
xchg
push
dec
pop
bound
and
sub
ret
fs
movsl
or
roll
xor
and
push
add
jg
add
mov
adc
push
cmp
inc
outsl
pop
fneni(8087
in
addr16
lahf
pusha
adc
lea
mov
xlat
sahf
in
mov
daa
xlat
dec
push
mov
mov
xchg
mov
xorb
mov
xchg
daa
das
jmp
xchg
xchg
test
cmp
ret
push
mov
jg
out
jae
or
pop
mov
inc
aaa
loop
add
lock
jo
cmpsl
aad
ret
mov
and
iret
pop
test
aam
fucompp
shlb
mov
jmp
pop
add
mov
add
dec
clc
cmpsb
arpl
imull
cltd
dec
idivb
sbb
sub
mov
or
push
fsubr
mov
push
cld
push
or
jmp
sbb
les
js
icebp
mov
add
and
loop
addb
add
ret
mov
add
mov
movsl
fwait
nop
dec
fadds
sub
cmp
or
xor
jae
cmpsl
out
enter
mov
pop
xchg
lods
ret
mov
xlat
cmp
je
cli
adc
and
inc
leave
std
data16
xor
pusha
inc
mov
mov
jo
or
imul
pop
pop
add
jmp
adc
cld
dec
call
stc
dec
call
ret
loop
and
daa
cwtl
push
adc
jge
sahf
add
mov
and
jge
xchg
push
fs
mov
das
pop
jb
inc
neg
lret
cs
dec
stos
pop
inc
xor
pop
xor
ficoml
sahf
inc
jp
jle
inc
sbb
pop
push
sub
aam
lods
movsb
pusha
or
sbb
jmp
movsb
and
sub
sub
vcomisd
shlb
add
ds
mov
xor
mov
loop
xorb
insb
xchg
jns
xorl
lret
and
xor
add
pop
dec
jmp
sbb
mov
mov
cmovns
mov
scas
jne
je
pop
jmp
out
pop
fdivs
xchg
out
mov
ret
pop
scas
call
cmpsb
push
cmc
stos
outsl
dec
shll
jl
inc
sub
es
cmp
sub
cmc
push
lds
sub
xor
inc
fadds
pop
push
xor
adc
pop
test
roll
push
sbb
in
or
insb
and
xor
add
ret
cs
adc
pop
xlat
dec
xor
push
pop
jle
insb
or
or
inc
cld
push
dec
push
jo
push
jmp
test
cmc
movsb
and
sti
push
xchg
jns
dec
mov
dec
fs
or
test
les
sub
mov
fldl
icebp
scas
icebp
stc
pusha
jle
dec
xchg
cmp
sahf
fnstsw
in
add
test
dec
int
cli
cmp
out
add
in
jl
cmp
inc
cmp
pop
jnp
or
aam
push
pusha
pop
mov
mov
jmp
fsub
add
or
push
jl
xor
shr
push
mov
push
xchg
xchg
cwtl
mov
lret
pop
subl
or
idivl
or
out
outsl
or
loope
cmpsb
or
add
stos
pop
loopne
shll
and
mov
jg
sbb
cmpsl
addb
in
pop
push
jmp
push
dec
dec
add
aaa
push
ficoms
adc
pop
cmc
inc
std
sbb
xchg
mul
xor
ja
ret
hlt
movsb
imul
in
sbb
outsl
mov
in
enter
mov
out
insl
xchg
or
gs
or
in
xor
mov
jg
cmp
xchg
mov
add
lock
dec
pop
and
out
pop
arpl
icebp
and
jnp
repnz
xor
sub
add
sub
mov
iret
push
adc
inc
xchg
cli
les
and
sbb
ljmp
mov
add
jmp
sbb
mov
mov
pop
and
inc
movsb
lods
lret
mov
stos
mov
push
mov
fs
in
ffreep
add
pop
push
or
das
pop
pop
push
xor
loop
stos
mov
mov
rcll
fimull
mov
sti
sub
loop
fldl
stos
jmp
in
jnp
add
push
mov
imul
not
lds
repnz
add
jmp
lds
out
jno
push
dec
and
jle
insb
adcl
std
mov
push
adc
repnz
clc
das
fsub
cmc
aas
das
xor
dec
push
mov
pusha
sbb
lods
cmpl
mov
sub
in
iret
push
sub
call
pusha
jne
es
cmc
jno
jmp
xchg
cli
xchg
loope
push
pop
les
cs
push
xorl
rorl
jns
inc
jmp
push
sub
mov
and
iret
sbb
add
push
les
xchg
stc
shll
out
xchg
add
ret
js
mov
sbb
and
mov
mov
jle
not
popa
mov
sbb
enter
mov
insl
daa
pop
xchg
xchg
dec
in
lds
mov
dec
pop
fisttpll
adc
test
sbb
or
dec
push
sbb
dec
sbb
xlat
add
ss
cmp
xchg
jle
lcall
dec
loopne
push
pop
fbstp
pop
mov
mov
jo
jl
test
or
repnz
adc
mov
cmp
fisttpl
cmc
cs
adc
dec
xchg
jns
mov
out
jge
xor
pop
shrl
mov
jg
jns
add
xor
dec
inc
movsl
xchg
xchg
jne
stos
pop
loop
in
aas
or
cmp
nop
pop
lods
jg
and
sbb
dec
hlt
or
adc
pop
xor
dec
out
xorb
push
lock
test
jnp
inc
add
imul
lea
movsb
xor
add
jecxz
cwtl
adc
inc
iret
pusha
push
adc
mov
sbb
enter
pop
filds
cltd
shll
cmpsl
sub
dec
loop
add
cmp
popf
mov
rolb
shl
stos
popf
pop
aaa
addb
xchg
repnz
jge
sbb
in
cmpsb
wrmsr
adc
dec
sar
mov
mov
add
in
bound
rcrb
add
push
mov
sbb
xchg
add
mov
pop
popa
sbb
sub
stc
jmp
mov
js
jle
ljmp
fidivs
pusha
sub
cmp
lahf
sub
or
sbb
mov
dec
out
int3
push
push
out
sub
sarl
ja
inc
mov
pop
aam
in
mov
inc
push
js
xor
jb
xchg
fisubrs
clc
xchg
test
mov
xchg
pop
mov
push
movsl
pop
mov
and
inc
pop
xchg
jno
jae
push
or
cmpsb
hlt
stc
xor
sbb
sub
cmp
jmp
xor
xor
cmpb
outsb
push
clc
ds
leave
stos
jo
pop
iret
inc
int
mov
mov
std
mov
test
ljmp
das
jne
add
in
add
jmp
jmp
outsb
push
jnp
pop
or
add
inc
movsl
and
in
mov
mov
or
aam
rorb
lret
dec
and
cmpl
out
cmp
gs
xorb
mov
push
daa
arpl
shll
out
popa
std
xchg
or
xchg
lock
cwtl
scas
xor
xlat
cmpb
or
jmp
pop
mov
stos
testb
xor
bound
mov
lea
test
mov
jno
lret
add
shll
daa
push
inc
ficompl
cmpsb
jmp
add
mov
sbb
add
cmp
jae
dec
push
out
loop
and
xchg
pop
lock
adc
cwtl
xlat
or
dec
or
sub
popf
loopne
mov
pop
in
push
push
mov
or
mov
sbbl
or
loopne
out
fnstsw
sbb
dec
int3
add
or
popa
insb
jmp
sub
or
cwtl
bound
sti
daa
loop
sbbb
into
lods
xchg
loop
fistps
mov
push
inc
xchg
pop
sub
and
out
and
or
mov
add
clc
mov
and
inc
scas
cmp
add
lea
movsl
add
mov
inc
scas
icebp
rclb
popa
mov
or
mov
or
iret
ss
mov
xchg
subb
push
cwtl
test
lods
shlb
push
repz
xchg
dec
adc
mov
test
loop
dec
mov
imulb
add
fs
push
js
dec
push
in
jae
sti
scas
add
bound
xlat
cmp
mov
jle
adc
out
shr
and
ds
inc
les
loop
ds
leave
sbb
cwtl
sbb
push
jge
inc
cmp
adc
fs
movsb
loope
adc
push
push
loopne
push
aaa
rclb
in
enter
adc
add
cltd
imul
or
movups
sar
outsl
xor
loope
add
jns
mov
or
mov
dec
dec
or
jmp
test
ret
ret
jne
jmp
test
mov
and
test
adc
not
hlt
or
adc
insb
mov
lods
pop
cmp
or
xchg
sti
cltd
ret
icebp
hlt
bnd
imul
icebp
mov
mov
addl
inc
sub
inc
fmull
or
jle
jmp
inc
jns
push
add
fs
mov
fs
jbe
popf
icebp
dec
leave
mov
mov
or
or
rcrb
lcall
sbb
cs
dec
mov
pop
and
mov
inc
mov
sbb
and
pusha
sbb
shlb
dec
or
dec
aas
xchg
add
imul
ret
dec
das
pmullw
lret
push
xor
in
dec
and
pop
lahf
sti
xlat
inc
in
mov
pop
shll
push
js
and
pop
pop
pop
sar
pushf
int
or
lods
iret
jno
push
jmp
and
popa
je
aam
xlat
jecxz
lods
push
sbbb
orb
call
clc
rclb
jge
push
mov
sub
mov
sub
je
mov
inc
or
xchg
push
sub
xchg
dec
cmp
imul
and
jl
lret
filds
or
gs
test
or
loop
rorl
rcrl
dec
mov
inc
jmp
mov
mov
mov
sub
gs
mov
clc
lret
jno
sbb
xlat
cmp
orb
xchg
push
stos
sub
cmpb
adc
xchg
std
add
lret
movsl
adc
repz
sub
pop
inc
add
dec
int
cs
subb
out
mov
ret
pop
leave
stc
into
add
and
push
inc
testl
stc
xor
movhps
out
jmp
dec
popa
es
ret
or
cmc
inc
aas
lea
jnp
insl
xchg
in
daa
mov
hlt
jae
pop
test
add
xor
jmp
and
scas
testl
xchg
addl
dec
cmp
lock
roll
sbb
or
inc
cltd
test
adc
xchg
cs
arpl
dec
ja
pop
push
mov
mov
inc
sub
and
inc
lret
xor
in
xchg
lret
pop
lods
cmp
push
dec
dec
mov
push
subb
adc
imul
xchg
add
push
scas
ret
add
mov
arpl
ret
cmp
mov
xor
fimuls
lock
jno
mov
add
rcl
stc
sub
fiadds
lds
xor
cli
jns
cs
popa
sub
xchg
lods
mov
lea
flds
sub
js
pop
loope
stos
cmp
push
push
jmp
mov
out
lret
xor
or
pop
xchg
or
mov
test
inc
lods
add
mov
push
adc
fcoml
icebp
jmp
pop
jae
divl
dec
mov
sub
inc
xchg
xorb
mov
and
int
rcl
rcll
lock
gs
jle
daa
pop
pop
in
xor
test
pusha
push
and
imul
jne
sbb
adc
mov
cs
out
test
sub
ljmp
out
pushf
sub
pop
jge
pop
mov
fstpl
jb
adc
inc
add
aad
ficomps
jnp
or
push
adc
sar
lret
cmp
repnz
xchg
inc
or
cwtl
orb
xchg
inc
xor
fsubr
cmp
inc
ss
andb
fstps
icebp
inc
loop
inc
les
aaa
pop
push
push
push
jmp
imul
or
jae
ret
sub
fucomip
daa
adc
hlt
mov
adc
and
xor
cs
sahf
fs
ds
cmp
das
jl
rolb
in
ljmp
iret
shlb
popf
sti
jne
cmp
sbb
cmp
addr16
xchg
sbb
mov
xchg
loop
test
sbb
test
popf
add
cmpsl
mov
ret
or
ja
call
and
mov
mov
aas
dec
push
jnp
add
cmp
or
pop
das
sbb
js
jle
pop
addr16
xchg
jp
xor
jmp
push
mov
enter
cmp
mov
xchg
cmpsl
ret
dec
and
fdivrl
popf
mov
out
xchg
scas
mov
xor
add
ljmp
sbb
pop
lahf
xor
adc
fidivl
pusha
adc
mov
mov
nop
in
loop
mov
sub
std
cmp
sbb
ss
mov
into
lock
int3
nop
mov
lret
popl
mov
adc
mov
dec
test
jbe
call
cmp
or
stc
pop
sbb
cmp
das
push
or
inc
add
add
jmp
enter
dec
outsb
pop
and
push
mov
push
adc
push
jmp
xchg
or
jnp
out
or
inc
mov
or
arpl
clc
fidivrl
out
mov
movsl
jo
or
add
mov
ret
sbbb
out
fistpll
mov
and
dec
push
mov
adc
or
int
push
xchg
or
aad
adc
inc
lret
or
es
sub
mov
push
notb
and
add
sahf
jmp
cwtl
xchg
inc
mov
push
imul
xorl
lcall
add
push
push
mov
xchg
inc
cs
repz
push
cmp
gs
jns
inc
pushl
pop
lds
mov
stos
mov
jl
lds
mov
shl
sub
xchg
clc
sbb
cmp
cmp
orb
or
ljmp
mov
mov
ror
cmp
push
fs
push
mov
mov
pop
test
es
ljmp
add
pushf
sahf
loope
js
pop
loopne
lods
jns
dec
push
scas
mov
imul
pop
mov
mov
jb
sarb
ret
cld
jmp
jne
jnp
sbb
idivb
int3
aaa
and
adc
fsts
mov
mov
push
and
stos
mov
popf
mov
pop
inc
mov
ja
xor
sahf
mov
cmc
das
popa
and
or
test
arpl
nop
cmpsb
dec
push
or
add
sub
fwait
dec
aaa
in
mov
orb
add
out
mov
xchg
jp
daa
sub
std
adc
loope
adc
inc
add
jl
jae
lret
ret
bound
push
dec
fld
mov
or
inc
or
out
mov
inc
push
mov
jecxz
mov
pusha
outsb
or
in
or
pushf
mov
cmp
adc
rcrb
add
repz
push
sub
add
and
push
jns
das
pop
push
sub
add
xor
jo
cli
cld
xor
xchg
dec
mov
mul
fimuls
or
mov
ljmp
adcl
push
out
adc
dec
mov
xchg
icebp
call
pop
imul
sub
mov
loop
push
push
xor
insb
in
push
les
xor
jecxz
dec
mov
movb
push
xchg
sti
xchg
das
das
test
add
bound
jbe
repnz
xor
add
mov
and
loopne
sbb
rolb
sub
jmp
out
push
and
pop
adc
jns
push
shlb
jns
lret
xchg
loop
inc
sbb
es
sub
mov
push
jns
dec
andl
mov
cmp
inc
pop
sub
gs
sub
ret
jne
inc
xor
add
cli
popa
add
enter
push
jmp
push
int
scas
jno
or
repz
xor
add
orb
mov
push
pusha
cwtl
inc
rolb
push
and
call
mov
cltd
dec
mov
repz
mov
popf
roll
jg
push
cli
push
orb
adcl
add
add
ffreep
hlt
xor
jns
cli
push
scas
inc
inc
ret
add
dec
jecxz
cmpsb
and
mov
mov
in
push
mov
jbe
jmp
and
push
sarl
push
dec
ret
cmc
cmp
aas
into
cmpsb
mov
and
pop
les
bound
push
add
add
sbb
loop
mov
xor
out
fcomps
dec
adc
ja
mov
add
add
push
push
mov
xor
push
push
push
test
in
add
sub
cmp
mov
mov
adc
bnd
mov
xchg
push
sub
pop
pop
pop
push
push
shl
inc
addl
mov
or
clc
push
push
sahf
mov
lea
sbb
pop
mov
cld
lods
pusha
or
add
cwtl
call
push
shl
push
add
push
push
jmp
pop
mov
xchg
shll
jmp
inc
cmp
fildll
or
ficoms
push
lock
add
push
loop
ficoml
jle
dec
dec
test
shll
add
xor
aas
rcrl
mov
add
rcrl
or
and
jmp
xchg
out
sub
pop
dec
ret
mov
in
mov
popa
test
xor
add
and
add
adc
ss
sub
shrb
rcr
clc
pop
lock
jno
mov
xor
pop
and
insb
or
cmp
xchg
divb
jg
pop
ds
xor
pop
or
out
std
lea
inc
mov
dec
mov
call
adc
cltd
mov
lret
pop
fldl
test
pop
test
rol
arpl
sbb
push
data16
jbe
cmp
ljmp
push
test
or
adc
cmc
or
xor
int3
adc
jae
add
mov
xchg
inc
stos
scas
jns
rclb
pop
pop
out
and
lret
xchg
fistpl
mov
pop
jno
or
jge
push
xchg
mov
add
lods
out
mov
add
pushf
cmp
lcall
mov
push
sub
pop
push
mov
pusha
push
fcmovne
push
jno
data16
mull
mov
inc
add
jbe
pop
imul
and
dec
inc
xchg
stc
lmsw
cmp
inc
xor
add
repz
in
shr
cli
popf
ret
int3
fsts
aad
mov
mov
pusha
pop
je
cli
addl
or
or
and
sbb
jnp
fimull
leave
leave
mov
call
jg
adc
jmp
sbb
jge
das
les
cld
sub
pop
bound
inc
ret
fsubrl
std
icebp
or
popa
hlt
bound
ret
push
add
das
es
ret
je
pop
sarb
ljmp
stos
add
or
lret
jno
push
pop
or
repz
push
jl
je
test
decl
push
and
adc
neg
scas
mov
scas
mov
out
sub
pop
roll
loopne
and
addr16
mov
xchg
loopne
xchg
add
pop
add
pop
ret
adc
or
inc
pop
inc
pop
pop
cmp
jp
jg
rep
das
pop
lret
mov
add
inc
adc
sub
mov
sbb
add
repz
pop
shlb
popf
jl
outsl
xchg
movswl
dec
mov
enter
inc
roll
shl
xchg
lret
pop
ficoms
pop
inc
in
cmp
lahf
daa
mov
lock
xchg
mov
mov
outsl
loopne
loope
js
fsubl
xorb
add
not
mov
adc
push
test
push
cli
xchg
lcall
and
scas
fdivs
test
repnz
leave
push
push
gs
or
arpl
outsl
ret
mov
and
sbb
sti
and
pop
xchg
add
cmpsb
icebp
movsb
test
sub
lcall
testl
cmp
popf
gs
pop
xor
shrl
push
inc
fldt
inc
or
sub
mov
add
sub
mov
jp
cltd
outsb
in
pushf
mov
xchg
mov
inc
lret
lods
dec
in
ret
mov
in
nop
xchg
xlat
mov
push
loopne
add
gs
lods
mov
xchg
scas
jo
mov
mov
ljmp
jb
adc
push
mov
stos
orl
push
or
adc
xchg
les
xchg
sub
stos
dec
or
nop
jle
pop
adcb
in
jp
push
in
push
jb
jmp
mov
add
mov
repz
int3
and
test
nop
enter
xor
rcrl
shr
sub
imul
and
pop
orb
jg
out
mov
adc
mull
shr
cld
and
jge
mov
and
pop
pop
cmpsb
call
adc
ljmp
xchg
add
and
insb
sub
les
pop
xchg
div
pop
icebp
or
mov
inc
arpl
pop
or
push
pop
jne
add
daa
push
ljmp
fs
xor
hlt
test
xor
and
add
mov
shll
nopl
leave
sbb
ret
xor
cmp
dec
and
mov
push
push
mov
sub
mov
lret
pop
rcll
test
inc
jno
in
popf
xchg
rcrl
lock
imul
mov
out
mov
jp
jnp
in
mov
dec
or
shlb
js
inc
xor
mov
mov
ds
xchg
daa
pop
pop
inc
sbb
dec
mov
jg
push
cmp
sti
or
adc
pop
mov
fisubrl
sub
addr16
imul
je
mov
cltd
xor
popa
int3
mov
dec
push
jmp
or
inc
pop
mov
jo
jno
lods
cmp
pushf
and
mov
ljmp
sbb
je
pop
or
or
ja
cltd
mov
xchg
pop
in
jno
insl
outsb
mov
xor
pop
lods
les
dec
push
pop
mov
sbb
adc
ljmp
or
scas
test
outsb
add
rorb
inc
sub
pop
movsl
pop
xor
hlt
mov
pop
xor
dec
leave
ds
jmp
nop
das
faddl
sbb
fwait
aaa
pop
pop
xchg
pusha
push
push
lahf
cmp
ficoml
push
sti
xor
xor
fdivrl
push
mov
mov
mov
mov
or
sbb
push
push
aaa
icebp
data16
dec
mov
into
add
in
aad
lea
pop
mull
sub
in
pop
pop
pop
or
divl
leave
pop
dec
loopne
outsb
addb
pop
add
push
mov
adc
xchg
testl
lcall
add
leave
mov
jae
aaa
push
shl
xor
je
out
and
shll
loop
xor
xor
xchg
mov
call
push
mov
adc
aam
pop
xchg
je
inc
and
add
cmp
stos
iret
cs
cmp
enter
push
jp
inc
aad
xor
dec
push
out
lods
jp
sub
xchg
sbb
sub
je
xor
test
add
rorb
and
xor
sbb
jmp
loope
adcb
mov
mov
test
or
jp
adc
pop
sahf
cmp
scas
hlt
xchg
outsl
lods
pop
cmp
and
jno
or
testl
pop
xor
mov
mov
mov
push
jmp
or
enter
dec
shrb
leave
push
ret
pop
cmp
push
adc
cld
sub
add
push
sub
dec
add
dec
insb
jmp
stc
dec
call
cmp
cmp
push
xor
or
dec
out
jbe
mov
fidivrl
add
push
daa
imul
inc
cmp
je
mov
xbegin
in
lcall
mov
mov
lock
popa
pop
stc
and
mov
inc
ds
adc
mov
push
cmp
mov
test
or
imul
js
cmp
in
int
cmp
push
push
xor
mov
lock
mulb
xchg
cld
xchg
jo
mov
dec
mov
repnz
hlt
sub
xchg
mov
cmpb
rol
orb
fdivrl
xor
orl
xor
jp
sub
dec
dec
imul
push
inc
lea
jnp
jmp
in
dec
dec
les
jmp
jne
pop
loopne
addr16
cwtl
sub
xlat
incb
sub
pop
sub
sub
mov
mov
adc
sub
ljmp
in
add
inc
and
loopne
and
inc
mov
add
cli
and
jp
add
push
sub
jl
mov
jge
adc
or
ror
mov
fs
cmp
add
jg
push
dec
pop
and
add
xor
xor
jmp
pop
stos
sub
dec
dec
inc
int3
loope
test
mov
sbb
adc
test
mov
pop
cld
adc
jmp
icebp
xchg
adc
sarl
mov
pop
and
adc
inc
lock
rcrl
add
dec
ret
ja
pop
loopne
or
mov
pushf
call
push
rclb
test
push
cmp
jo
test
dec
or
out
xor
push
sti
sub
cmp
push
push
inc
scas
or
into
mov
negb
ret
in
js
cli
out
cmp
pop
movsb
ret
xor
push
stos
mov
and
mov
cltd
pop
ljmp
test
and
or
adc
arpl
xchg
dec
pop
sti
sub
outsl
jl
xchg
jno
mov
insl
jp
or
push
jae
insb
ds
sub
inc
xor
dec
xor
fnstcw
inc
pop
cmp
mov
xor
xchg
xchg
jl
xorb
jbe
add
sub
xor
cmp
or
pop
sbb
filds
add
and
push
add
add
das
mov
adc
roll
pop
xchg
jg
movsb
mov
stc
arpl
in
mov
cmp
push
pop
in
jg
data16
push
adc
inc
pusha
imul
out
popf
adc
adc
jbe
imul
es
pop
xrelease
jbe
ja
adc
mov
and
inc
rcrl
cmp
fadd
sbb
jmp
jo
add
push
lds
aad
pusha
les
adc
xchg
pop
adcb
enter
or
push
test
dec
jmp
and
sbb
push
jg
paddsw
cld
inc
in
add
inc
sbb
jle
xchg
adc
add
push
mov
xorb
imul
sub
sbb
data16
sbb
jo
dec
les
sbb
leave
rorl
fsts
sub
ret
int3
jmp
jg
xchg
mov
jle
push
or
out
xchg
incl
cmp
add
jb,pn
sub
xchg
mov
dec
jg
mov
lods
lods
jl
and
sarb
enter
in
add
dec
mov
cmpb
lods
pop
push
ficoml
out
add
push
xchg
in
inc
mov
subl
add
enter
gs
xor
flds
ret
add
dec
xor
add
jmp
xchg
sbb
rolb
sbb
enter
pusha
lock
pop
and
inc
pop
jno
or
fucomp
jo
sbb
push
mov
push
rclb
adc
imul
cmp
adc
pop
mov
sub
es
js
xchg
leave
jg
and
pusha
mov
mov
xlat
push
addl
mov
pop
adc
std
jge
mov
lds
cmp
xchg
les
out
pop
inc
xor
jle
mov
pop
je
mov
add
fcmovnu
add
dec
clc
push
pop
sub
sbb
jecxz
cmp
jo
dec
repnz
fstl
add
inc
pop
sar
stc
aas
mov
and
and
jno
add
sub
push
mov
roll
in
push
repnz
stos
loope
cmp
adc
pop
pop
test
dec
arpl
mov
add
pop
sub
sub
cmp
jne
xchg
dec
sub
loop
arpl
mov
int3
sub
jl
pop
jb
lahf
adc
jnp
mov
inc
jb
pop
sbb
dec
add
jmp
daa
stos
fs
sahf
add
pop
pop
mov
cs
push
sbb
dec
std
add
fs
arpl
out
xchg
adc
inc
rol
pop
mov
lahf
add
inc
lock
mov
sbb
pushf
xchg
jmp
repz
and
pop
jns
xor
push
push
dec
sub
pop
aaa
or
repz
or
inc
int
mov
in
or
outsb
push
insl
sub
add
or
and
vmovsldup
mov
inc
loop
loope
mov
adc
loope
cmp
outsb
nop
inc
or
jl
sti
mov
mov
aaa
testl
ss
out
jecxz
lret
addl
aad
out
adcb
sub
or
jg
mov
out
xchg
sti
mov
mov
xchg
mov
xchg
mov
adc
and
popl
push
push
cmp
fisttps
dec
jmp
lret
and
pop
and
or
mov
inc
dec
inc
add
adc
adc
add
cs
cltd
imul
das
add
xor
adc
mov
cmp
icebp
pop
fs
lock
mov
jne
out
cmp
cld
and
inc
sub
mov
das
xchg
pop
mov
mov
imul
jmp
push
adc
mov
in
movsb
mov
mov
jge
subl
inc
mov
inc
dec
xchg
add
rcr
sbb
sbb
push
punpckhbw
sub
add
sahf
cmc
or
decb
or
xchg
pop
rorl
out
push
jae
nop
jo
hlt
inc
and
ja
add
idivl
dec
pop
imulb
adc
mov
inc
aas
add
dec
pushf
and
gs
add
jno
loop
jl
enter
cmp
dec
mov
sti
bnd
dec
jbe
sub
inc
rcl
arpl
xchg
push
add
xchg
out
jno
in
divl
pop
and
rcrb
adc
and
pop
rorl
cmpsl
dec
ss
and
push
sub
pop
out
lods
ds
adc
push
push
subb
rcrl
adc
mov
jo
js
and
xlat
xor
and
cmp
leave
mov
inc
pusha
mov
lcall
add
test
push
in
fsub
out
das
add
lret
shr
inc
pop
mov
sub
fisttpll
rcrb
mov
imull
mov
pop
outsl
xorl
cmp
into
push
inc
ljmp
pop
push
xchg
or
jmp
insl
lahf
mov
clc
dec
aad
lahf
hlt
adc
jecxz
or
or
loope
leave
dec
movsb
push
ja
jp
lret
add
mov
mov
push
xor
test
daa
mov
bound
shll
repnz
dec
test
lds
aas
jmp
jg
mov
imul
popf
sbbb
out
cwtl
repnz
aas
xor
sub
scas
cmpb
dec
cmc
push
mov
les
push
jmp
sahf
aaa
add
mov
xchg
sbb
and
sbb
loopne
xchg
jno
decb
cld
jmp
jmp
add
in
divb
xchg
pop
data16
cmpb
push
mov
push
or
movsl
lods
push
xchg
and
and
sub
loopne
clc
out
popf
daa
in
sub
mov
out
mov
minps
mov
cmp
in
adc
insl
imul
inc
mov
mov
daa
inc
push
jl
inc
push
pop
jle
pop
mov
mov
addr16
je
push
addl
mov
push
cmp
pop
out
cmpsl
cli
jbe
xor
mov
and
inc
push
mov
cmp
in
cmp
add
mov
scas
adc
mov
adcb
push
xor
mov
jle
mov
fistl
jmp
out
fs
fldz
repz
shrl
sub
arpl
cld
mov
push
ficoms
sbb
dec
mov
pop
push
imulb
jmp
mov
inc
mov
je
xchg
push
insb
sub
inc
or
jns
add
fiaddl
cs
xchg
pop
out
mov
push
pop
mov
sub
les
in
add
ds
inc
add
xor
lret
dec
push
sbb
out
push
pusha
lret
xor
dec
jmp
jp
sub
clc
int
inc
mov
faddl
mov
dec
cmp
in
cmp
jbe
loop
push
push
push
xor
jg
idivl
cmp
push
dec
cli
lds
stc
clc
int
mov
jbe
outsl
jb
dec
cld
mov
in
sbb
jge
xor
dec
ret
or
jnp
mov
push
movsb
imul
cmp
dec
and
push
add
pop
outsb
jbe
dec
mov
lahf
dec
dec
pop
jns
jbe
lret
jg
pop
das
and
inc
xor
pop
imul
or
inc
add
cmp
mov
and
push
pop
add
dec
je
sub
int3
out
sbb
das
sub
xor
leave
xchg
or
ja
push
mov
aad
scas
lock
push
and
mov
js
adc
movsl
sub
mov
sub
pop
jp
mov
jl
data16
icebp
mov
lock
movsb
xchg
dec
adc
mov
stos
mov
jnp
stos
out
mov
push
mov
push
or
adc
pop
cmpsl
scas
push
imul
mov
and
out
repz
rcrb
mov
add
imul
dec
mov
jmp
pop
fsubr
xchg
mov
dec
push
push
cli
ja
bound
mov
push
or
inc
xor
shr
test
sub
daa
cmp
ret
or
dec
mov
cmp
xor
jo
das
neg
js
and
std
dec
xor
and
add
pop
les
xorb
outsl
push
mov
push
into
xor
or
inc
sub
pusha
add
pop
jo
je
leave
mov
jmp
mov
pop
dec
mov
adc
arpl
adc
jecxz
mov
aaa
imul
mov
repz
xor
sahf
inc
pop
mov
adc
aam
bound
and
sarl
lods
pop
jb
sbb
inc
cmp
cmp
cmpsl
popf
jnp
pop
ljmp
sbb
test
pop
test
jnp
jg
inc
and
xor
sbb
and
cmpsl
xor
jmp
lahf
cli
mov
cli
and
jge
popa
mov
mov
aas
or
out
leave
pcmpeqw
gs
stc
das
jg
sub
add
sub
inc
add
insb
stos
cmp
sub
jle
sub
cmp
mov
xchg
lahf
jo
icebp
xchg
aas
out
jns
daa
push
xchg
or
scas
sbb
dec
mov
jle
adc
mov
lds
clc
rolb
mov
lcall
movsl
aad
clc
cwtl
mov
xchg
xchg
mov
inc
inc
and
cmp
sub
icebp
add
push
stos
jno
subb
ret
dec
lods
add
loop
adc
imul
in
mov
pusha
or
outsb
pop
iret
not
pop
mov
adc
in
in
add
pop
mov
pop
sub
mov
adc
jle
add
sbb
push
jg
pop
mov
or
nop
add
dec
sub
call
gs
sbb
pusha
psrad
and
dec
scas
xor
jmp
push
mov
push
xor
xchg
xorb
xor
inc
mov
repz
inc
jnp
aam
popf
adc
pusha
sti
jae
and
ret
ret
sub
loop
push
push
ss
sub
inc
popf
jl
dec
add
mov
sbb
or
jnp
add
cmpsb
arpl
or
jno
dec
fcom
inc
push
or
mov
add
ds
dec
lahf
adc
popf
jmp
adc
pop
xchg
bound
mov
cmp
aaa
mov
aad
adcb
dec
cmp
in
add
add
push
add
fcmovb
xlat
push
or
pop
lock
xchg
mov
push
mov
cwtl
jb
arpl
leave
es
pop
mov
jge
jns
mov
pop
push
idivb
inc
jo
jno
sub
aas
ficoms
sub
outsb
lahf
jne
jne
fmulp
push
into
gs
movsl
mov
repz
cld
in
pop
fs
push
in
out
dec
and
xor
repz
pop
fidivrs
mov
out
sbb
into
mov
adc
pusha
and
xchg
rorb
mov
call
dec
inc
repz
movsb
imulb
xor
push
addb
cmpsl
imul
mov
or
pop
adc
jp
add
sub
test
test
add
push
insl
pusha
lods
mov
neg
xchg
inc
aad
xchg
inc
jo
and
adc
in
inc
mov
add
decl
pusha
sbb
pop
jo
orl
adc
push
hlt
std
jo
mov
cli
lds
mov
outsl
aad
adc
jg
ss
push
sub
inc
jl
or
xor
lret
push
pop
inc
push
jmp
out
xchg
cmp
ret
rcr
lret
add
movsl
sub
out
std
or
cmp
outsl
or
idivb
pop
jae
push
mov
lret
lcall
std
fcomi
nop
js
out
sub
jns
scas
adc
and
dec
rcrl
aaa
xor
mov
mov
inc
mov
jmp
adc
or
ret
ljmp
sbb
rorb
pop
inc
and
fsubr
mov
mov
dec
xorl
push
movsb
call
xchg
gs
mov
mov
push
out
xchg
add
mov
rorb
js
imul
xchg
mov
add
pop
add
xchg
pop
sbbb
pop
jg
dec
push
sti
cwtl
jb
stc
outsb
lods
cmp
mov
sub
popa
dec
call
sbb
sub
add
fdivrs
adc
or
xchg
call
jne
jle
or
pop
icebp
xchg
lods
xchg
push
add
push
pop
xor
xchg
push
iret
cltd
cmp
jp
push
adc
inc
xor
test
add
jl
jmp
les
push
div
jl
cmp
movsl
ret
xor
and
xchg
inc
loop
push
xor
mov
out
jb
subb
pop
leave
pop
push
ljmp
jecxz
into
push
adc
cmpsl
inc
xchg
mov
cwtl
rcrl
or
shr
adc
fisttpl
mov
push
push
jmp
and
mov
das
xchg
mov
or
dec
stos
es
cmp
and
xor
add
mov
cmpsl
cmpb
mov
jns
test
jmp
inc
add
in
test
add
pop
cs
cmp
lcall
add
or
jb
rcll
adcb
sub
repz
addr16
jbe
lods
rolb
gs
mov
adc
popf
mov
dec
cmpsl
xor
jmp
test
scas
cld
lret
lret
xor
out
bound
inc
sub
test
popf
push
jmp
mov
sub
jecxz
mov
xchg
cbtw
adc
addr16
or
imul
pop
loop
mov
and
int
jmp
mov
jle
jl
adcl
cld
xor
call
mov
jmp
and
adc
dec
call
or
jmp
add
cmp
xchg
iret
ret
arpl
pop
inc
xchg
jmp
pause
mov
or
add
neg
and
inc
pusha
int
and
adc
jmp
lods
test
test
cmp
pop
sbb
sti
cmpsb
inc
or
loopne
jno
pop
push
jle
and
out
pop
mov
imulb
sub
push
sub
pop
iret
adc
adc
mov
nop
xchg
inc
in
testl
lret
adc
push
lods
hlt
imul
mov
loope
or
pusha
sbb
jo
mulb
add
incb
mov
pop
clc
loope
add
add
cld
test
fs
xor
ja
pushf
imulb
stos
cmpsb
push
add
loopne
jae
mov
shl
addb
push
sbb
pop
pop
xchg
mov
add
pop
mov
sahf
push
inc
and
ss
or
jns
push
or
cmp
dec
mov
mov
in
dec
das
adc
bound
push
mov
xchg
push
andb
lret
or
and
push
jae
pop
dec
mov
jp
pop
fcmovnu
ljmp
mov
outsl
mov
rclb
push
aam
bound
dec
xlat
into
pop
imul
jno
add
xchg
or
aaa
inc
add
add
insb
dec
das
xchg
add
icebp
push
jmp
push
mov
jae
mov
add
and
push
rclb
sbb
hlt
sub
nop
test
pop
sti
jge
xor
shlb
insl
imul
adc
and
and
mov
xchg
pop
sbb
mov
adc
dec
cld
xchg
add
pop
shl
inc
push
fldenv
or
dec
rcr
rcrl
addr16
push
push
lock
push
mov
fisttpl
repz
inc
repnz
dec
imulb
shlb
subb
fs
in
in
push
repz
mov
sbb
adc
and
aaa
and
test
mov
push
nop
push
icebp
inc
adc
popf
push
es
lret
scas
dec
fsub
dec
pop
jg
jbe
and
out
and
pop
ljmp
xor
jbe
gs
adc
das
push
in
cmp
cwtl
or
dec
daa
stc
cmp
jns
sti
test
incl
mov
or
or
sarb
pop
stc
inc
rcrl
fwait
sub
push
push
cli
sub
pop
hlt
adc
push
sub
gs
mov
fildll
out
push
js
jl
fwait
mov
pop
daa
xchg
mov
cmpb
add
arpl
jecxz
scas
sbb
loopne
and
cmp
or
mov
add
cltd
testb
popf
mov
and
dec
stos
cmp
dec
pop
mov
outsb
test
sbb
aas
jno,pt
adc
pop
scas
test
icebp
and
movsl
cmp
and
push
xchg
jmp
xorb
hlt
fimuls
jmp
cmp
add
lods
dec
hlt
testb
cmp
dec
cld
adc
and
mov
pop
js
pop
pop
repnz
xor
adc
add
jp
add
pushf
sub
cmp
popa
pushf
sarb
mov
xchg
mulb
and
push
test
push
mov
or
mov
stc
mov
mov
xchg
imul
adc
cmp
and
test
lret
mov
pop
fs
add
xchg
jae
adc
jmp
mov
mov
mov
adc
iret
add
insb
mov
lret
mov
or
mov
or
pushf
lahf
or
push
jns
cmpb
dec
pop
sub
mov
mov
ja
ljmp
aad
add
rcr
aas
mul
mov
sbb
or
adc
nop
loopne
lea
cli
mov
int3
jae
sbb
jmp
inc
loop
popf
js
addl
dec
push
lahf
mov
sbb
mov
push
mov
and
into
pop
fistpll
xor
add
and
scas
rolb
idivl
push
lods
or
out
push
adc
sbb
inc
push
out
add
dec
ds
fsubr
xorb
cmp
inc
sub
add
lock
aaa
dec
push
add
lock
xor
cmpsl
push
pop
or
or
add
push
mov
inc
leave
push
add
push
jae
jmp
outsl
fiaddl
hlt
mov
pop
add
cmp
lods
and
sahf
stos
push
add
and
adc
xchg
or
sub
mov
xlat
xchg
loopne
add
pop
add
push
push
jmp
mov
pop
mov
mov
andb
lea
add
xorb
or
loopne
icebp
jno
pop
int3
mov
lahf
arpl
cltd
ficoms
mov
fnstcw
pop
xchg
mov
sbb
mov
cwtl
out
nop
xchg
adc
nop
sbb
add
sti
out
loop
push
sbb
es
test
pop
push
jno
aaa
out
or
mov
cmp
cld
add
mov
inc
mov
xchg
sub
and
xor
arpl
sar
or
stos
pop
sbb
pop
sahf
and
or
daa
or
addr16
lods
lds
xlat
mov
jo
pop
arpl
or
jg
pop
pushf
fs
sub
std
imul
jp
mov
mov
inc
stos
imul
add
cli
shlb
jae
nop
ja
das
in
clc
add
cli
loope
int
into
std
xor
xor
add
sti
out
loop
adc
adc
adc
add
out
aas
xor
dec
ljmp
adc
adc
divl
add
jle
fst
inc
mov
iret
dec
js
or
push
or
sbb
insl
leave
push
and
es
enter
pop
cmp
sbb
sbb
cmp
sub
adc
mov
mov
xor
pushf
add
sti
leave
fnstsw
xchg
roll
push
pushf
cmc
pusha
pop
and
sub
std
fsub
add
pop
orb
xchg
data16
sbb
dec
mov
int
cld
lock
fincstp
loop
push
shr
and
pop
xchg
mov
imul
pop
lretw
or
push
scas
push
add
fs
push
mov
xor
addb
mov
mov
outsl
test
jg
inc
add
repz
rcrb
clc
ljmp
xchg
orb
jo
xor
inc
push
inc
int
dec
or
dec
addl
sub
xor
std
lock
or
jp
cli
cltd
jle
and
mov
or
xchg
sbb
push
sbb
pop
adc
out
inc
push
int3
push
dec
add
scas
sub
clc
ss
and
push
lock
add
mov
sti
xor
sbb
pop
test
push
jmp
ds
fiadds
pop
pop
sub
sbb
sbb
daa
aad
fdivrl
pop
cwtl
jb
mov
je
mov
out
push
cld
stos
sub
mov
daa
xchg
decl
mov
adc
push
mov
sub
mov
pop
push
inc
ds
pop
xor
sub
pop
popf
lds
sub
inc
sub
popa
shr
popa
test
pop
repz
sub
stos
pushl
xor
pop
add
pop
stos
push
addl
jecxz
in
xchg
mov
in
xchg
cmp
mov
mov
pop
leave
loope
out
pop
mov
add
les
fstpl
leave
in
cmp
push
dec
mov
adcl
fcomps
pop
in
inc
or
aad
mov
add
out
fsts
push
shr
imul
cwtl
rclb
js
dec
cmp
jmp
stc
pop
int
jmp
mov
int3
fisttps
mov
dec
adcb
test
lock
js
pop
xor
fdivrl
scas
pop
iret
out
add
inc
push
ljmp
adc
decb
jp
xchg
push
mull
cmpsb
inc
repnz
add
out
jmp
les
test
fistpl
cmpsl
mov
and
imul
xor
cmp
rcrl
out
jne
sub
aam
add
inc
mov
mov
pop
repnz
add
iret
mov
and
xlat
inc
adc
jo
pop
xchg
dec
sti
test
out
or
jnp
pop
inc
out
add
jecxz
fcmovnu
stos
call
add
or
repnz
xor
mov
mov
cli
sub
lds
add
lret
inc
fdiv
pop
setno
aam
mov
inc
push
and
or
cltd
mov
mov
xchg
push
aad
mov
cmc
in
push
add
in
das
jns
hlt
cmp
std
pushf
mov
dec
push
adc
pop
popa
mov
xor
pop
sbbl
lock
out
adc
dec
test
mov
popa
in
out
cs
adc
pop
or
mov
roll
jae
or
sbbb
sub
mov
push
pop
cld
mov
faddl
xor
sub
call
in
negb
mov
push
ficomps
add
adc
and
cmp
shl
jp
std
push
cmp
xor
mov
arpl
popa
ret
lret
aad
and
aad
pop
gs
jb
dec
jmp
fldt
inc
mov
or
mov
mov
daa
add
not
inc
andb
enter
xor
jge
fistpl
sub
pop
jnp
mov
adc
int
sub
cmc
jns
add
rcrb
ret
pop
data16
loope
mov
or
jnp
daa
lods
pop
hlt
inc
push
pop
pop
xchg
inc
imul
test
mov
mov
adc
hlt
mov
outsb
jmp
lcall
pop
jo
jge
jmp
inc
pop
out
gs
add
ljmp
call
inc
xchg
int3
add
pop
or
jmp
and
mov
add
mov
nop
push
pop
pop
add
sahf
push
mov
push
jne
cli
lcall
pop
push
pop
jns
push
negl
mov
faddl
sub
add
out
mov
jp
cwtl
popf
dec
daa
dec
xor
lcall
add
mov
dec
aad
stos
pop
out
and
sub
and
je
sbb
inc
scas
push
xor
and
cmp
lcall
push
xor
ret
pop
xchg
test
xchg
mov
mov
adc
dec
addl
sbb
xchg
and
sbb
or
mov
inc
rclb
ja
or
mov
ffree
test
out
das
shll
fbld
out
dec
xchg
aas
add
or
pop
pop
incb
data16
adc
add
inc
stos
adc
dec
add
add
push
les
incb
jmp
xor
adc
ds
sarb
push
or
test
jne
aad
repnz
pop
call
push
or
adc
add
jmp
xchg
mov
stos
cmp
push
push
fcmovb
ljmp
das
dec
and
jae
sub
cld
out
mov
mov
fs
push
sbbb
sbb
cli
sahf
push
inc
adc
and
test
pop
lods
jb
pop
jmp
stos
xchg
fcomps
dec
ss
pop
add
imul
js
addb
push
dec
add
xchg
push
dec
sub
mov
sbb
bound
push
xor
mov
adc
cmp
mov
xor
xchg
out
in
adc
sub
push
mov
mov
and
pop
pusha
push
xor
jb
rorl
ljmp
mov
jmp
mov
and
mov
sub
bound
mov
sbb
loopne
fwait
mov
ret
mov
pusha
inc
in
inc
push
jle
leave
sbbb
xchg
adc
dec
lea
dec
mov
or
cmp
sub
xor
inc
sub
sub
cmp
stos
jnp
and
sub
out
sbb
jnp
xor
jle
xlat
imul
adc
pop
dec
loop
out
stos
and
sarl
add
pop
iret
add
mov
add
push
adc
loop
jle
iret
push
jmp
rclb
add
push
or
outsl
pop
es
push
aam
add
xchg
pop
incl
push
mov
push
jns
xchg
dec
jge
or
inc
les
adc
loope
icebp
adc
mov
jl
pop
add
jne
and
nop
mov
jbe
mov
inc
cmp
pop
das
push
xor
inc
push
add
or
jmp
or
adc
xor
jle
fidivrl
out
loope
pushf
dec
xchg
enter
das
andb
lcall
mov
sbbb
mov
or
push
loop
jge
push
dec
ret
sbb
out
xchg
aas
and
xor
ret
test
mov
imul
xchg
stos
push
cmp
push
decb
fsubs
add
out
mov
push
ds
inc
test
imul
out
imulb
dec
les
or
push
pop
jmp
rcll
fstpt
test
xlat
mov
push
testb
pop
negb
xor
enter
mov
jle
outsb
test
shll
test
pop
cmp
lods
jo
push
ficoml
daa
pop
rcll
inc
cli
stos
push
std
or
or
jae
push
cs
aam
fs
mov
or
sbbb
push
cmc
test
cmp
int3
lret
and
es
jo
popf
aam
daa
jo
mov
jnp
cmp
loopne
mov
push
dec
jecxz
ds
icebp
dec
or
dec
xlat
sub
loop
sbb
in
jge
test
mov
or
aam
add
mov
test
aad
and
lods
movsl
xchg
push
cmp
push
ds
test
in
dec
dec
stos
cmp
add
ljmp
stos
lock
gs
outsl
inc
ret
push
cmp
out
rorb
bnd
mov
cmpsl
inc
dec
push
jbe
xchg
lea
cmp
dec
fnstsw
jmp
das
mov
inc
inc
fisubl
cwtl
push
and
sarb
sbb
jns
xchg
cmpsb
mov
mov
int3
fxch
bound
jne
sarb
insb
pop
or
jmp
push
scas
shrb
mov
pop
cld
iret
pop
mov
add
jmp
pop
fdivrl
mov
mov
pop
jmp
mov
xchg
cli
inc
add
push
mov
es
mov
jg
add
add
mov
sbb
pushf
ja
pop
pop
ret
mov
sub
sub
add
inc
not
ret
adc
push
aam
movsb
ret
push
sub
mov
cwtl
mov
rcrb
jp
inc
call
pop
lret
jmp
mov
mov
xor
addr16
test
pop
dec
push
out
aam
fld1
out
mov
int3
cli
mov
inc
lcall
inc
and
nop
xchg
pop
jmp
sbb
jb
add
sub
stc
test
sbb
iret
sar
mov
add
or
adc
mov
mov
dec
sub
pop
rcl
rol
sbb
push
dec
or
add
add
push
addl
xchg
cwtl
add
and
imul
or
add
stc
push
pop
mov
aaa
cmpl
and
hlt
lock
fisubrs
cli
pop
and
pop
lret
lock
pop
push
jmp
push
cmpb
pop
cmc
aad
or
adc
das
fsubrl
sub
push
sbb
shlb
pop
ret
xor
xchg
fistps
mov
repnz
lcall
pop
sub
dec
cmpsl
and
and
jp
sub
mov
inc
incl
jnp
rolb
dec
or
jmp
rolb
pop
jbe
into
imul
cmpsb
jno
jp
xor
pop
xchg
ret
mov
jmp
and
mov
repz
mov
xor
push
mov
and
orb
adc
mov
mov
jmp
push
cmp
mov
adc
fistpl
test
xchg
lods
adc
cld
xor
lret
dec
adcl
and
nop
adc
push
jge
rcrl
mov
std
jmp
cmp
pop
insb
fs
data16
movsl
inc
incb
shl
xorl
add
fcmovnb
mov
adc
pop
add
rcll
jmp
mov
sub
adc
cwtl
dec
cli
sub
je
pop
mov
jp
aad
or
fldcw
dec
push
outsl
inc
mov
adc
adc
in
add
das
test
aam
xor
mov
jg
arpl
subl
xor
xor
sbb
int
das
test
stos
outsl
enter
or
jle
stos
lcall
aaa
and
jnp
pop
ret
sarb
or
ljmp
cmpsb
xchg
shlb
add
fucomi
iret
jns
outsb
xchg
or
add
xchg
xchg
sbb
imul
push
mov
es
or
inc
shl
inc
adc
push
pop
shl
add
nop
not
in
cmpb
ficompl
ret
dec
pop
mov
dec
dec
cmp
xor
jb
mulb
and
loopne
dec
adc
sbb
sub
mov
sub
daa
push
in
stos
mov
and
stc
and
movsb
inc
push
jo
xchg
push
mov
push
popa
adc
pop
adc
pop
subl
sub
pop
adc
outsl
cs
pop
ret
or
addr16
movsl
rolb
popf
mov
xor
inc
shl
push
add
dec
fisttps
add
pop
pop
popa
repnz
and
ret
pop
adc
out
push
sub
push
mov
not
push
ds
pushf
repnz
cmp
pop
cld
lea
push
push
pop
movsb
std
mov
adc
pop
xor
jl
jmp
or
incl
push
clc
mov
adc
insl
pop
ds
and
js
jnp
adc
and
dec
es
shll
in
jle,pn
aas
das
shlb
sub
and
xor
dec
ret
aaa
pop
or
icebp
add
jns
outsl
loope
xchg
pop
xor
jno
mov
subb
push
push
mov
add
xchg
push
movsb
rcrb
ja
int
or
js
xchg
ret
icebp
lcall
sarl
fadds
test
sbb
sbb
into
loope
mov
ja
push
ret
sbb
and
xor
aaa
mov
cmpsl
das
jbe
jp
int
data16
mov
sbb
movsl
test
mov
inc
pop
cmc
dec
addr16
xlat
test
dec
xchg
and
mov
adc
sub
push
add
push
jge
imul
sbb
in
cli
loopne
addl
fwait
aas
fcmovbe
jge
popa
fists
cmc
daa
pop
fs
fstpl
and
int
and
xor
or
mov
dec
scas
add
into
cmp
cmp
mov
stc
outsl
jle
popa
xor
popa
jge
or
addr16
jmp
pop
les
add
push
leave
jge
lods
push
mov
bound
lcall
or
jg
sahf
cmp
inc
mov
call
adc
push
lds
pop
cmc
lret
dec
wrmsr
in
scas
out
push
adc
rcrl
inc
test
sub
outsl
push
push
add
adc
push
mov
cmp
aaa
imul
jno
sub
xchg
in
sub
addr16
mov
roll
sahf
bound
xor
mov
adc
mov
jae
lret
push
mov
int
cli
out
add
rolb
jecxz
push
ret
add
pop
subb
bound
pop
rol
jno
xchg
pop
clc
ljmp
lods
mov
cmp
or
jecxz
cltd
lret
pusha
divl
cmc
adc
testb
and
xchg
xchg
mov
add
xor
je
pop
ret
cmpl
in
xlat
pop
xchg
dec
pop
push
cmpb
rcll
loope
jnp
xor
mov
pop
inc
add
jmp
sub
sahf
fsubr
or
popl
push
jmp
movsb
pop
add
mov
mov
fisubrl
sbb
icebp
cmp
pop
and
int3
xchg
and
mov
test
pop
pop
scas
call
xchg
jmp
lea
into
inc
outsl
icebp
add
fiadds
inc
or
push
jb
sub
fildll
sub
add
mov
lret
add
cmpl
push
lcall
push
jmp
ljmp
pop
sub
sbb
adc
repnz
mov
add
sahf
dec
nop
xor
scas
jne
mov
xchg
repz
push
popf
xchg
pop
mov
xchg
mov
fs
dec
ret
add
sahf
mov
mov
adcb
aad
pop
je
arpl
fsubs
mov
push
sbb
sbb
ja
rorl
inc
and
fldl
dec
xchg
push
paddsb
jl
or
add
cltd
outsb
and
inc
mov
clc
int3
dec
pop
test
lock
push
lcall
mov
sub
adc
shll
sbb
adc
shl
pop
loope
xor
cmc
jne
lods
sub
mov
inc
jnp
aad
mov
lock
add
lahf
adc
pop
adc
mov
mov
pop
push
jmp
inc
mov
mov
add
and
or
aas
mov
fisttps
add
mov
lds
xchg
inc
pop
jmp
repnz
add
nop
dec
cltd
std
push
in
jno
pop
push
and
or
xor
les
adc
dec
sub
mov
lret
insb
or
mov
inc
lock
pop
es
outsb
das
rorb
cmc
mov
fwait
pop
sub
push
and
jnp
dec
dec
fildll
inc
mov
xchg
les
pop
pop
imul
push
mov
add
dec
sarb
fildl
jns
push
es
sbb
cs
mov
sbb
shrl
and
push
sub
adc
adc
lret
pop
pop
dec
outsl
ja
dec
out
ret
mov
cmc
inc
pop
add
add
loop
fistl
mov
std
dec
je
in
sbb
adc
shlb
mov
sub
add
and
mov
push
leave
push
mov
push
xor
rol
rcl
xorl
test
mov
sti
pop
out
pop
sbb
push
enter
push
out
adcb
scas
sbb
stc
add
cmp
cli
out
and
std
adc
push
pop
dec
cmp
sbbb
sub
pop
cmp
add
bound
popa
aaa
shrl
clc
xorb
outsl
or
push
dec
sub
xor
xor
jge
inc
jno
or
add
or
push
enter
cmp
stos
add
stc
lahf
out
out
dec
fs
cmp
or
sub
or
mov
pop
div
jno
call
ja
dec
icebp
mov
inc
pop
cmc
lahf
pop
js
push
adc
mov
push
jmp
faddl
pop
sbb
push
iret
mov
push
subb
sub
sub
add
xor
pop
cmp
andb
mov
cmp
rorl
dec
cmp
mov
push
pop
and
jb
jge
mov
dec
aad
xchg
enter
pop
xchg
or
cltd
xor
cld
jnp
sahf
and
sub
adc
jge
xlat
test
push
mov
mov
shl
push
ret
add
jmp
in
insb
test
cmp
pop
mov
scas
jecxz
push
stos
lock
jecxz
ds
subl
mov
cmp
inc
jmp
pop
add
pop
outsl
std
cmp
pop
bnd
out
push
mov
addr16
outsb
or
push
adc
pop
shll
enter
dec
je
jmp
xor
adc
rcll
mov
lret
ja
lcall
mov
sub
add
and
cs
mov
push
mov
push
sbb
sarl
sub
das
jmp
pop
cld
dec
push
ljmp
das
aaa
in
mov
mov
ffreep
arpl
cli
and
popa
lea
lock
push
inc
je
in
fisubs
sub
adc
jg
and
jns
in
jmp
fadd
dec
push
mov
sbb
addr16
sub
rorl
sub
lret
inc
icebp
xor
outsl
loop
leave
mov
in
loopne
outsb
dec
dec
cmpsb
mov
pop
mov
cmp
ret
scas
pop
lds
inc
cmp
mov
int
loopne
add
es
mov
xor
cmp
mov
sub
xchg
jmp
jmp
jne
and
dec
pop
inc
mulb
stos
cltd
aam
leave
push
mov
sbb
push
std
xor
rorl
pop
ss
add
adc
pop
push
sbb
sub
or
push
mov
adc
jge
xor
call
pop
inc
inc
adc
or
outsb
pop
jno
bound
or
jnp
inc
stos
or
sahf
int
cmpsl
jg
sbb
std
xchg
push
adc
sti
cmp
add
sub
and
jne
push
fwait
xor
sub
push
mov
mov
jne
xchg
lods
sahf
pop
or
or
lret
out
movsl
and
cmp
mov
cwtl
imul
and
push
dec
jle
incb
es
xlat
fiadds
movsb
sbb
jmp
mov
pop
inc
cmp
insb
jmp
das
iret
insl
scas
pop
adc
pop
int3
arpl
push
cmpsb
dec
or
in
imul
hlt
mov
push
xchg
cmp
mov
sub
repz
lock
js
mov
ja
lret
cmpsl
sarb
add
ss
arpl
dec
jmp
js
lock
adc
fstp
daa
das
call
and
aam
cvtps2pi
xchg
fisttpll
mov
inc
daa
stc
cltd
loopne
add
js
leave
push
push
mov
mov
ljmp
mov
shr
add
jecxz
or
aam
xchg
push
cli
repz
cmpsb
mov
dec
fdivs
jg
aas
or
push
ret
mov
enter
into
sub
jge
adc
pop
cmpsb
es
cmp
add
inc
jns
fldl
xor
push
dec
push
add
mov
jp
loopne
out
mov
push
xlat
adc
std
jae
dec
arpl
nop
fsubr
xlat
mov
repz
je
jnp
or
xor
jb
dec
roll
or
sub
jg
push
loope
add
cld
inc
or
stos
jmp
or
dec
xchg
inc
lock
sbb
pop
sub
or
hlt
mov
mov
jmp
daa
push
mov
nop
mov
mov
xchg
add
out
jno
push
jl
or
add
repz
ret
push
mov
movsb
stc
cmpsb
push
xchg
mov
iret
out
sahf
daa
pop
filds
cmc
dec
and
movsb
out
jns
pop
lret
popf
clc
pop
mov
jbe
imul
adc
push
rorl
and
xlat
pop
mov
orb
mov
ret
mov
dec
xor
ficoms
sahf
les
inc
daa
push
push
mov
sub
or
mov
and
shr
bound
cmpb
push
shll
pop
push
or
and
pusha
add
jl
xchg
mov
movsb
sbb
sbb
into
pop
sbb
add
pop
pop
mov
mov
mov
dec
pop
fnstenv
jle,pn
mov
out
lock
ja
push
push
adc
aad
sbb
out
scas
mov
movsl
adc
mov
mov
xchg
aas
add
rclb
lret
add
hlt
push
movb
bnd
mov
or
leave
pop
jnp
adc
mov
mov
cmp
push
es
pop
mov
jmp
imul
loop
jo
dec
or
pop
xor
sbbb
push
xchg
mov
push
mov
sub
popf
and
enter
movsl
pusha
mov
jae
dec
dec
jns
movsb
pop
arpl
xor
pop
push
adc
dec
icebp
and
mov
lahf
ficompl
adc
shr
cwtl
mov
call
pop
loop
clc
and
and
dec
daa
xor
mov
and
ret
pop
inc
rcrl
lods
icebp
and
mov
arpl
push
pop
sbb
out
xchg
pop
mov
sub
mov
mov
sbb
in
add
negl
scas
or
std
mov
test
mov
mov
imul
bound
sub
popa
push
aas
das
dec
int3
lcall
inc
movsb
jno
dec
pop
sub
frstor
adc
pop
stos
pusha
test
pushf
outsl
and
or
scas
popa
mov
cmpsl
lcall
push
inc
pop
imul
cmc
lahf
inc
lret
jg
scas
sbb
or
or
call
xchg
arpl
mov
dec
jnp
xor
in
mov
or
aas
push
jmp
int
icebp
fldenv
or
cmp
lock
xchg
ss
adc
mov
xor
mov
pop
inc
fistl
or
andb
push
pop
push
mov
mov
add
scas
jecxz
or
addr16
mov
jne
sar
push
fstpl
pusha
call
sub
rolb
push
xor
int3
xorl
sub
sbb
test
icebp
cmpsl
nop
cli
sub
test
movsl
and
adc
icebp
popf
iret
cmp
add
rcrb
jno
mov
mov
fucomip
pop
scas
cld
sbb
adc
sahf
jmp
cmpsb
js
or
push
sbb
push
ljmp
out
jle
xor
inc
cmp
cmp
bound
aas
and
xchg
xchg
roll
push
arpl
inc
rcrl
scas
ret
mov
cmp
jnp
pop
mov
ds
sub
dec
inc
push
enter
add
stc
mov
and
dec
popf
pop
mov
and
and
xchg
jmp
loopne
push
outsb
cs
adc
popf
loopne
lds
pusha
jl
add
cmp
jp
aad
mov
gs
inc
mov
jl
hlt
in
dec
es
psrad
dec
push
int3
mov
out
aaa
cmp
enter
orl
sbb
out
jns
loopne
jmp
loop
mov
insl
fiaddl
dec
sti
pop
or
psadbw
xlat
add
jl
and
orb
xchg
js
or
or
jl
inc
ja
mov
xor
in
push
rorb
ret
push
pusha
and
add
or
xchg
dec
jmp
cmp
stc
in
sbb
mov
and
rcrl
lock
or
push
int
lea
jbe
clc
jge
aam
mov
mov
dec
pop
mulb
bound
aad
jecxz
daa
icebp
pop
add
lods
into
push
mov
xlat
push
fiaddl
dec
or
push
adc
lds
out
add
lret
cmp
ja
ja
and
jns
mov
std
mov
sbb
push
xchg
dec
inc
inc
xlat
icebp
pop
cmpsl
and
adc
roll
pop
jmp
stos
cmp
stc
cs
inc
and
push
xchg
or
xor
out
push
push
add
or
push
mov
popa
jmp
pop
in
lret
lcall
push
jp
inc
arpl
add
inc
or
push
mov
push
jg
sub
lock
cmp
not
add
lea
js
add
test
mov
or
test
push
sub
inc
or
push
push
push
outsb
cld
add
sti
adc
popa
test
stos
and
out
cvtps2pi
pusha
iret
call
or
and
insb
lcall
pop
sub
daa
jmp
sub
mov
lret
ds
test
push
cmp
outsb
aas
mov
add
pop
je
jge
test
adc
fs
mov
subb
push
push
fwait
adc
fsts
xor
xchg
jg
cs
sub
cmp
adc
es
sub
popa
push
xor
fiaddl
mov
fnstenv
jno
lahf
pusha
lret
xor
jne
or
mov
int
xchg
and
push
mov
xchg
xor
gs
insb
dec
adc
add
push
dec
push
or
cs
xchg
sahf
mov
das
cli
gs
pop
and
movsb
pop
xor
xchg
js
cmp
mov
pop
adc
inc
out
mov
popf
mov
jecxz
jno
pop
rorb
lock
idiv
sbb
out
xor
arpl
dec
sub
and
movsb
dec
ja
sub
movsb
cmp
aad
dec
or
pop
insb
test
lods
pop
jmp
xor
sbb
cs
pop
push
fsubl
popa
cmp
push
pop
fucomp
xchg
hlt
mov
test
pop
pop
outsl
les
add
iret
mov
lock
aaa
or
sahf
xchg
ljmp
les
in
push
mov
adc
scas
insb
adc
cmp
cli
or
xor
add
dec
add
sub
mov
das
push
adcb
jg
adc
lea
push
imulb
add
ficompl
push
push
or
add
lahf
push
das
ret
sahf
xchg
roll
sub
sub
clc
mov
ret
sub
sbbb
jp
sub
or
push
mov
dec
jle
subl
dec
add
inc
clc
cmp
in
out
adcb
lds
push
aad
or
push
pop
or
xor
jo
pop
xchg
clc
adc
sub
out
and
std
pop
sub
andl
or
leave
stc
mov
cmpsl
pop
insb
adc
add
cli
pop
inc
push
add
xor
xchg
test
push
sub
push
mov
add
gs
test
ret
dec
popa
or
adc
mov
or
add
mov
mov
jmp
xor
ja
loop
outsb
add
sti
and
js
in
test
sub
sarb
jns
pop
dec
or
or
jne
push
inc
cmp
daa
jmp
pop
mov
and
push
push
xorl
xor
rcrl
adc
mov
ret
js
or
xor
std
sub
mov
pop
jg
aaa
push
shlb
push
mov
mov
inc
dec
jns
inc
mull
cld
and
cld
mov
daa
cmp
push
sub
pop
out
and
imul
sahf
cmp
pop
jmp
or
xchg
in
imul
pop
pop
mov
leave
rolb
jnp
dec
fwait
lcall
xlat
sbbl
add
into
add
fidivrl
mov
and
push
and
mov
dec
add
nop
call
cmp
fsubs
ret
ss
mov
lret
das
cltd
test
outsb
sti
fcomps
not
shr
inc
nop
insl
or
cmp
pop
jns
bound
in
add
ss
ljmp
and
dec
jle
clc
pusha
bound
mov
xchg
push
lea
fimull
cli
pop
push
xchg
push
xor
add
xchg
mov
dec
bound
inc
pop
pop
rol
sub
cmp
inc
mov
imul
xlat
popf
xchg
fstpl
lock
fadd
pusha
es
mov
ds
popa
iret
pop
jmp
push
adc
ret
aam
movsb
lock
xor
sarl
inc
or
sahf
pusha
aad
hlt
test
testb
inc
fwait
jg
std
mov
add
xor
out
ljmp
insl
add
xor
fildll
and
mov
xor
pop
cmp
ds
push
ja
mov
push
dec
ds
lret
loope
sub
jne
fs
ror
inc
cmp
push
repz
jno,pn
lods
xor
pop
push
int
sub
xchg
or
out
or
pushl
push
rcr
es
aas
pop
imul
repnz
int
inc
rcl
sub
leave
testb
pop
pop
fdivrs
sbb
movsl
ja
cmp
std
mov
stos
sub
inc
or
mov
add
xchg
sub
imul
leave
push
or
ja
or
jg
ljmp
cs
xchg
ds
pop
jmp
cli
lret
push
push
cmp
jmp
call
das
movsb
das
cltd
bound
mov
icebp
cmp
sbb
shr
dec
repz
xchg
data16
inc
arpl
rolb
mov
inc
adc
mov
xor
add
jg
shr
push
push
iret
cmp
add
call
mov
es
jge
sub
sti
and
push
pop
add
repnz
jns
add
ret
add
jecxz
mov
call
or
and
xchg
push
adc
xor
cmp
cmp
div
cmp
pop
push
mov
aas
xor
orb
leave
push
pop
jb
push
push
pushf
mov
push
inc
mov
sbb
subl
testl
push
xchg
dec
xchg
mov
jbe
cmc
mov
das
jmp
adcb
in
sbb
imul
pop
and
scas
sub
and
sub
push
inc
and
call
addb
lea
pop
imul
or
mov
loope
inc
xchg
jmp
or
adc
test
mov
xchg
repnz
jmp
in
push
call
pop
insb
jno
bound
pop
mov
and
sub
cmp
push
jg
roll
in
pop
pop
hlt
rclb
scas
sub
ja
pop
call
call
pop
pop
arpl
adc
xchg
pop
jo
sub
in
jmp
jno
int3
add
in
push
mov
xchg
push
dec
aad
xchg
mov
adc
add
or
testb
sbb
jp
int
push
and
lahf
in
sub
dec
rorb
inc
mov
jmp
shlb
mov
scas
dec
push
mov
jnp
rolb
and
mov
ret
les
cli
fadd
sub
inc
jmp
jo
add
add
push
pusha
adc
stos
mov
sub
addr16
mov
shrb
or
addr16
and
xchg
lods
std
or
loop
fmuls
pop
inc
and
cmp
loope
mov
pop
js
roll
and
adc
cmp
sbb
filds
mov
fldl
sub
add
idivl
in
jl
add
rclb
add
dec
add
ljmp
add
decb
xor
arpl
xor
pop
jmp
mov
adc
scas
leave
xchg
push
mov
push
popa
in
jnp
adcl
sub
add
push
stos
fwait
bound
dec
decl
sbb
popa
push
pusha
ljmp
sub
xchg
pop
icebp
lret
inc
mov
sbb
or
mov
add
cli
pop
test
lods
mov
inc
jbe
xor
jmp
pop
mov
in
fiaddl
nop
dec
in
testb
jbe
sub
out
ucomiss
gs
mov
hlt
inc
jmp
inc
fnstenv
mov
scas
popf
scas
jno
add
sbb
add
pop
lods
rcll
dec
fldcw
push
movsl
dec
mov
jmp
inc
cmp
pop
outsb
add
add
hlt
mov
add
in
or
jp
test
mov
cmp
mov
dec
repnz
pop
mov
mov
xchg
add
cmpsb
jmp
xchg
mov
jl
fs
dec
add
inc
adc
incb
lcall
dec
and
sub
sub
dec
and
pusha
fldenv
pop
adc
ljmp
inc
add
in
cli
das
leave
scas
rcr
inc
sub
popa
pop
enter
rcrl
dec
adc
imul
xchg
je
pop
dec
imul
lahf
and
aas
and
mov
out
mov
aas
push
sbb
lret
cmpsb
sub
dec
popf
jnp
and
cmp
addb
mov
jo
mov
adc
loopne
mov
and
push
or
mov
adc
inc
add
out
arpl
out
mov
jmp
cmp
lods
cmp
inc
pop
and
pusha
jo
xor
lret
cltd
mov
inc
push
cmpsb
cld
push
sub
or
daa
sub
and
ret
sbb
add
movsl
and
cs
jne
out
mov
adc
fsubs
nop
scas
mov
xchg
mov
add
mov
jmp
addr16
push
fs
sbb
cmc
add
aad
lret
shr
or
cli
push
lcall
daa
imul
pusha
or
sub
adc
adc
cmp
lods
sbb
dec
add
std
cmpsb
add
inc
jae
xorb
cmp
or
jge
cmp
dec
push
or
or
mov
inc
inc
jb
pop
xchg
shlb
dec
sti
pop
inc
enter
push
push
lret
or
dec
int
into
test
pop
pop
mov
sub
adc
or
pop
loopne
add
mov
gs
fldenv
das
das
cld
out
fistpll
adc
sub
cmp
push
pop
xor
jmp
jo
jmp
dec
xor
nop
add
sbb
mov
mov
cmp
jle
mov
leave
std
cmp
or
sub
mov
xchg
jge
pop
xchg
push
pop
and
stos
add
lret
mov
push
fildll
adc
enter
rcr
dec
ljmp
push
pusha
mov
mov
xor
inc
xor
pop
and
mov
cmp
push
mov
push
add
and
sbb
idivl
add
sub
sbb
setg
or
and
inc
rolb
xlat
aaa
jne
mov
cld
push
push
pop
or
mov
pop
fsubrs
cwtl
fildl
pop
ja
jae
icebp
fnsave
sbb
dec
sub
shr
add
daa
sbb
daa
or
pop
mov
fdivrl
fimull
cmp
call
pop
push
or
pop
fidivs
adc
and
mov
cmp
repnz
leave
je
xor
sbb
scas
repnz
jno
adc
xor
sbb
or
popf
pop
sbb
jmp
dec
push
dec
iret
inc
lret
daa
mov
stos
mov
lret
outsb
mov
ret
lods
jmp
scas
sub
ja
add
pop
xor
and
sbb
repnz
jbe
shrb
mov
pop
mov
fisubrl
mov
jne
mov
push
fildll
inc
jns
and
push
cmpsl
sbb
ret
cltd
cmp
jl
jle
or
jo
cmp
adc
xor
jmp
inc
push
ljmp
xor
cmp
mov
jg
jo
call
orb
aad
arpl
out
dec
mov
and
pop
inc
inc
xchg
cmp
push
jg
and
mov
jmp
or
sub
imul
rclb
jmp
scas
lret
mov
not
ljmp
cmp
rol
push
shlb
push
dec
jae
rclb
adc
jno
mov
enter
push
cltd
inc
outsb
or
cli
xor
push
popf
stos
ficoml
dec
mov
xchg
push
pusha
xor
je
sub
inc
add
and
sub
jle
fs
sbb
cld
push
xor
fldt
inc
push
les
add
mov
lock
mov
xchg
js
xchg
adc
test
jns
inc
mov
gs
pop
jge
repz
sub
stos
pop
jns
stos
cmpl
add
jge
mov
mov
add
aam
dec
jmp
jno
icebp
movsb
mov
orb
xor
dec
sub
mov
jmp
cmc
xor
add
ret
pop
or
jne
fs
pushf
or
movl
in
adc
mov
sub
add
jmp
leave
into
rclb
sub
fwait
jmp
mov
sub
insb
sbb
push
xchg
add
xchg
jbe
pusha
sub
push
movb
repz
jmp
inc
xor
lret
xlat
add
aas
rolb
cltd
or
fisttpll
and
lcall
sbbb
es
testl
fdivp
jo
shr
out
ljmp
lcall
or
jge
cltd
mov
mov
cli
retw
pop
repz
and
pop
add
add
add
imul
pop
pop
scas
sub
es
imul
aaa
or
fstps
xor
push
mov
mov
and
jmp
lahf
popa
add
clc
and
repnz
lcall
lods
lahf
pop
pushf
push
push
mov
inc
xchg
imul
std
aam
or
mov
jecxz
repnz
scas
sub
add
mov
and
inc
mov
mov
rcrb
and
mov
les
inc
or
rcrl
nop
std
xchg
xor
fcomps
pop
xchg
not
cmpsl
or
cltd
mov
inc
cmp
dec
adc
iret
push
outsb
pop
stc
add
testl
dec
mov
and
cmpsb
orb
add
ljmp
add
sti
or
imul
sub
push
xchg
stc
dec
arpl
cmp
or
orb
cmp
cwtl
fildll
lret
jb
pop
pop
sub
adc
jbe
faddl
mov
icebp
testl
pop
fdivrl
das
test
ret
and
fstp
jle
pop
stos
jmp
int
sub
es
dec
mov
sarb
fsubrl
popf
aad
cmp
jae
sbb
or
cld
cmpsb
sbb
mov
and
lret
mov
pop
enter
test
idivb
testl
sub
mov
inc
add
and
aas
mov
or
imull
jp
sbb
sbb
jp
cmp
loopne
cltd
das
cmp
jnp
pop
push
add
imul
sbb
popf
xlat
mov
sbb
inc
test
shl
outsl
xor
lret
push
adc
and
mov
jecxz
lds
lods
add
pop
loopne
jecxz
ss
gs
cmp
and
add
fbstp
data16
mov
dec
push
add
and
add
jno
scas
pop
jne
cmp
dec
adc
add
mov
nop
lcall
test
adc
rcl
push
mov
sub
mov
mov
mov
ss
sti
mov
push
sub
cld
pop
je
and
sbb
pop
pop
pop
imul
out
jp
xchg
roll
sbb
gs
inc
sti
loopne
xchg
imul
inc
pusha
sub
cmp
or
fisttpll
pop
pop
add
cmp
out
xor
mov
push
jnp
mov
and
jmp
lds
outsb
mov
adc
jno
xchg
mov
orl
inc
shll
add
cmp
sbb
es
sar
ds
pop
push
mov
outsl
divb
inc
or
fildll
cmc
push
pop
lret
cmc
xchg
and
add
xor
dec
inc
push
push
inc
lcall
test
or
mov
roll
loop
into
lds
mov
pop
cmp
xchg
mov
jl
cmp
call
popf
bound
stos
mov
pop
pop
push
fcomps
push
inc
dec
test
in
ja
aam
add
push
pop
stc
out
inc
cmp
lods
das
add
inc
and
cs
inc
or
test
pop
out
cwtl
inc
cwtl
adc
dec
es
add
adc
test
or
push
in
in
adc
gs
shl
mov
lcall
pop
movsl
dec
in
sbb
dec
push
jno
sti
mov
out
sub
test
mov
loopne
movsl
addl
sbb
and
pop
arpl
mov
sub
jp
xchg
clc
xchg
in
mov
lods
movsb
add
jle
sbb
pop
xor
sbb
pusha
mov
daa
sbb
je
pop
inc
adc
mov
scas
cmpsb
pusha
out
add
clc
mov
sub
dec
ret
lea
jbe
bound
inc
adc
mov
sbbl
mov
pop
xor
push
fstpt
cmp
movsb
mov
xor
add
mov
inc
leave
pop
cmp
push
arpl
fadds
pop
pop
loopne
out
cmpsl
mov
arpl
mov
nop
jae
in
add
mov
add
fnstsw
jnp
rolb
in
cmpsl
repz
outsl
lahf
push
shll
add
mov
nop
repnz
popf
cmp
jne
xchg
stc
arpl
imul
or
aam
pop
or
jno
jmp
repz
sbb
nop
mov
nop
rcrb
popf
dec
pusha
in
adc
cmp
push
cwtl
or
test
fimuls
call
decb
xchg
lcall
push
out
sbb
and
dec
inc
pop
xlat
dec
adc
push
or
add
and
pop
push
pop
mov
jg
pop
test
pop
aam
pop
lds
test
and
push
arpl
pop
pushl
pop
aas
test
inc
inc
add
mov
ret
mov
imul
dec
push
push
cmp
aad
ljmp
pop
or
jmp
pop
cmp
jno
add
pop
jmp
xchg
cmp
pop
lahf
jle
dec
test
xlat
orb
add
dec
repz
push
int3
add
xor
sub
loopne
ficoml
push
not
in
add
cmpsl
icebp
inc
adc
divl
icebp
add
mov
cmp
inc
lds
pop
pop
das
nop
lds
add
and
scas
sub
pop
shrb
xor
push
push
add
mov
fldl2t
xor
aam
daa
and
pop
daa
divl
cmc
daa
xor
or
mov
lods
gs
aam
fstp
jnp
sbb
mov
popa
and
or
jno
or
adc
popf
shrb
fld
push
push
jne
sbb
dec
sub
pop
jge
inc
mov
sbb
add
push
lahf
adc
shrl
lret
test
jg
inc
test
xchg
inc
sarb
fs
iret
daa
jge
popa
dec
fnstenv
inc
push
das
jmp
or
add
and
xorl
pop
dec
scas
mov
cltd
xor
adc
and
adc
mov
out
jge
push
loop
sub
push
mov
mov
int
mov
pop
inc
stos
mov
pop
lcall
test
stc
pop
sub
pop
jne
fmuls
ficomps
jmp
mov
add
jp
cli
push
scas
sbb
imul
inc
das
jp
cld
mov
jno
lds
stos
push
push
mov
pmulhuw
inc
and
mov
add
push
fsubrs
push
mov
loopne
pop
pop
in
lea
add
adc
cmc
add
and
xchg
mov
aas
cli
or
pop
sub
pop
or
adc
push
adc
cmp
pusha
adc
cmc
dec
pop
inc
das
push
fildl
call
std
js
nop
xchg
push
imul
dec
in
movsb
dec
push
mov
pop
dec
pop
pop
insb
xchg
add
xchg
sub
roll
adc
neg
add
pop
jmp
loopne
mov
mov
cmp
pop
sbb
call
clc
jp
sub
dec
pop
xor
sarl
or
and
add
mov
enter
std
ljmp
imul
sub
ret
and
rcrb
adc
add
shll
mov
xchg
pop
aas
loop
ss
cmp
out
sub
push
adc
pop
pop
shll
and
and
test
fidivrs
inc
movsb
out
push
ds
mov
dec
sti
inc
xlat
add
int
in
cs
pop
dec
pop
xor
push
mov
roll
movsb
add
inc
inc
dec
push
push
mov
add
movsb
xor
push
inc
dec
jo
sub
push
pop
pop
dec
ja
insb
inc
scas
or
mov
stc
stos
sbb
stos
and
pop
bound
xchg
sub
sub
sti
rcl
jb
push
and
adc
mov
push
mov
or
or
xor
add
or
inc
cmp
xchg
pop
xchg
shll
mov
lret
not
or
and
or
loop
mov
mov
push
jae
xchg
or
add
fists
inc
or
or
adc
pop
add
fdiv
jecxz
or
pusha
or
push
or
or
iret
test
lea
ljmp
into
or
outsb
iret
xchg
inc
adc
jbe
jbe
daa
notb
jmp
xchg
mov
and
daa
test
les
add
lock
push
push
or
or
and
or
push
add
stos
dec
mov
je
aas
mov
adc
and
sbb
aad
push
adc
add
daa
out
sar
pop
pop
test
test
daa
pop
imul
lods
sub
jmp
notb
pop
cli
push
add
sbb
test
notl
loope
lea
mov
pop
hlt
fs
lahf
xlat
push
clc
stos
outsb
inc
ljmp
push
jg
fildl
repnz
les
push
push
jmp
repnz
je
fnstenv
add
sub
adc
add
mov
add
clc
cltd
xchg
push
mov
adc
push
inc
mov
sti
mov
push
adc
push
push
and
test
repz
shll
jbe
int3
xchg
aas
inc
push
mov
push
jg
in
pop
push
push
imul
pop
in
test
imull
je
cmp
out
iret
xor
sbbb
xor
pop
sti
bswap
sub
xor
in
test
pop
or
jmp
out
iret
repz
pop
cmp
add
rol
insb
inc
and
xor
in
jmp
mov
push
fs
icebp
jecxz
pop
dec
add
dec
push
mov
popa
je
cmp
sub
mov
imul
sbb
pop
insb
or
pop
or
push
inc
adc
xchg
pop
dec
out
sbb
sbb
mov
inc
jnp
or
mov
dec
mov
dec
lcall
add
jnp
add
mov
movsb
xor
or
push
ret
adc
xchg
inc
pushf
sahf
add
stos
pop
pop
test
pop
or
push
push
fmull
sub
and
or
jae
mov
inc
and
push
mov
out
add
gs
lods
fildl
into
in
es
popa
mov
lret
inc
mov
roll
out
not
jg
aam
pop
rcl
aaa
test
and
dec
xchg
push
test
sbbl
popa
mov
je
hlt
hlt
pop
add
shlb
mov
imul
lret
adcb
add
insl
dec
push
repnz
cmc
pusha
clc
icebp
and
aad
add
pop
push
dec
xor
mov
movsl
lret
add
jnp
dec
inc
and
insb
call
mov
fdivrp
das
xchg
hlt
mov
jg
cltd
pop
insl
jp
mov
in
cmc
sub
push
mov
lods
lods
loopne
cmc
mov
or
xor
push
cmp
xchg
pop
iret
pop
pop
inc
loope
js
push
push
into
xor
in
add
cmp
pop
push
lods
int3
bound
mov
xorb
push
jmp
dec
add
lock
mov
js
adc
mov
icebp
pop
add
call
gs
sub
push
add
mov
xor
or
out
es
and
iret
scas
shl
sub
adc
call
repz
das
sub
xor
pop
xor
hlt
dec
xor
xor
add
jne
dec
add
ret
push
incb
jns
in
mov
jle
add
repz
aad
adc
or
scas
inc
add
and
lea
dec
mov
mov
pop
loopne
jo
jl
pop
pop
sub
cld
vpmacswd
jmp
imul
pop
xor
sub
jb
pop
dec
loop
push
push
push
lods
or
or
sub
sub
mov
xchg
pop
icebp
loope
push
repnz
jmp
inc
out
add
ret
cli
shrl
lods
adc
pop
cmp
and
jbe
out
sub
mov
adc
out
sub
sahf
cs
in
inc
push
push
and
mov
repnz
pop
jmp
icebp
cwtl
es
loop
jg
pop
imul
mov
or
mov
ss
xchg
fstps
pop
daa
test
push
movl
add
dec
int3
add
shr
ja
jle
mov
xchg
insb
loopne
cmpb
outsb
xchg
xchg
das
push
mov
lods
and
addb
push
hlt
das
pusha
hlt
dec
out
and
popa
push
or
dec
insl
mov
pop
sbb
push
test
push
repnz
mov
testw
push
clc
pop
rcll
cmp
shl
push
push
and
mov
ljmp
xor
dec
jge
add
shl
xor
jmp
int
int3
ljmp
dec
xor
ljmp
push
adc
arpl
pop
pop
sub
pop
add
es
lods
push
xor
mov
and
leave
pop
pop
or
and
aaa
cli
inc
jp
cmp
rolb
fadds
xor
je
out
adc
orb
hlt
adc
jmp
add
xor
pop
xor
fs
and
stos
jns
add
inc
mov
or
push
add
or
adc
add
mov
add
mov
inc
inc
js
sub
jle
pop
adcb
cmp
mov
mov
pop
popa
push
push
nop
ret
nop
mov
xchg
pop
movswl
in
sub
add
inc
add
mov
xchg
lock
dec
rorl
out
pop
mov
pusha
mov
add
sbb
mov
mov
jns
mul
shrb
scas
loop
lret
fs
xor
sbb
fldcw
adc
push
les
xchg
mov
and
fimuls
push
out
push
popl
out
scas
mov
sub
mov
aam
les
mov
push
sbb
xor
add
xor
popa
ret
mov
imul
add
pop
mov
movsb
fprem1
push
adc
stos
mov
and
scas
movsb
push
and
lods
xor
aad
adc
cmp
add
loop
stos
inc
push
xchg
insb
mov
push
pop
adc
movsb
clc
pop
les
stc
stos
loop
aam
sahf
rcrl
aad
push
pop
mov
push
lock
jecxz
mov
add
out
mov
imulb
adc
popf
xor
inc
add
test
addr16
add
cmp
jg
jnp
xchg
clc
leave
or
insl
das
dec
mov
push
scas
subl
ljmp
jbe
add
mov
pusha
jb
add
lods
std
faddl
outsb
inc
and
cwtl
jbe
pop
pop
adc
aas
pop
mov
push
adc
ljmp
jns
scas
add
incl
mov
xchg
push
sub
jmp
pop
loope
js
pop
push
inc
jecxz
repz
popf
pop
scas
mov
out
sbb
mov
xchg
call
cmp
std
jmp
mov
scas
test
jne
push
cld
push
pop
bound
rolb
jne
cwtl
adc
mov
adc
dec
xchg
pop
add
or
adc
push
mov
add
in
dec
mov
minps
or
das
cmp
pushf
int
dec
mov
cmpsb
sbb
xlat
and
xchg
sti
ja
je
test
out
in
jmp
das
scas
adc
movsb
bound
lret
pop
inc
xor
es
or
sub
add
call
mov
dec
mov
lods
adc
pop
jle
scas
or
adc
add
sub
jmp
ds
test
test
sbb
inc
adc
loop
imul
xchg
dec
std
add
mov
stos
cld
rorl
or
pop
clc
je
inc
sbb
js
out
setp
push
mov
fisubrl
cmp
cmp
mov
cwtl
add
cli
in
fists
fists
sbb
add
notb
push
jbe
dec
shl
pcmpeqb
sub
xor
lock
mov
xchg
imul
mov
andl
dec
push
or
fs
or
push
sbb
add
xchg
adc
sub
xor
sub
and
xchg
mov
inc
or
xor
nop
and
adc
xchg
iret
mov
in
add
or
pop
add
jmp
lods
add
addb
leave
in
jl
dec
mov
insb
cli
add
out
lcall
jo
call
gs
xchg
insl
adcb
push
dec
sbb
ficoml
inc
mov
sub
dec
test
pop
add
inc
jo
sbb
add
push
jg
lcall
fs
ret
push
in
mov
addl
jge
push
lock
mov
std
jae
scas
add
fldt
dec
jmp
fs
leave
cmc
lds
lret
inc
sub
pop
ficompl
out
push
lds
rcrb
ret
shr
inc
pop
fidivrs
sbb
pop
mov
mov
jnp
mov
in
cmp
ja
sahf
lahf
push
mov
jg
or
insb
ret
mov
jg
mov
ds
mov
lret
xlat
pop
scas
lock
mov
lea
cmpsb
add
imul
es
ljmp
add
bound
xor
pop
pop
mov
add
jb
jmp
stos
adc
cli
and
subl
mov
xor
test
lock
scas
loopne
lods
test
pop
and
std
dec
movsl
out
mov
scas
push
repz
mov
cmc
fs
mov
ds
sub
mov
sub
pusha
sub
dec
jg
push
pop
add
mov
jmp
sti
jno
das
stos
add
in
add
or
and
jbe
push
cwtl
cmp
pop
pop
dec
mov
push
mov
bound
pop
and
repnz
pop
int
adc
mov
pop
lods
cwtl
movsb
mov
pop
mov
lret
add
push
jle
fsubr
mov
xchg
add
negb
scas
jno
out
mov
psubusw
add
std
add
sub
jne
mov
inc
sbb
adcl
int3
lds
cwtl
inc
and
pop
mov
mov
scas
cmp
xchg
and
ss
mov
leave
lock
xchg
sarb
mov
mov
mov
mov
or
mov
jmp
push
jg
mov
imul
pop
in
clc
loope
mov
mov
mov
cmp
sbb
mov
out
or
scas
fstps
in
inc
push
sub
ds
sbbb
xchg
jp
mov
js
mov
mov
js
adc
ret
adc
xor
adc
add
ljmp
stc
push
and
mov
ret
lods
shlb
and
divl
push
je
in
stos
or
add
adc
sub
lock
sbb
dec
bound
inc
or
pop
inc
mov
pop
loope
icebp
arpl
or
cwtl
sub
loope
cmpsl
sub
test
out
enter
out
rolb
pop
add
push
mov
in
repnz
lahf
lods
fsubr
mov
mov
imul
cli
xchg
aaa
sub
sbbb
daa
not
jg
mov
push
inc
pusha
icebp
adc
mov
leave
paddsb
sbb
pop
and
mov
push
mov
fstl
in
pop
xchg
ja
mov
xor
dec
jno
push
test
pop
in
in
mov
imul
imul
mov
cmp
negb
mov
sub
dec
cmpsl
jo
pop
pop
movsb
pop
and
jecxz
fs
dec
push
mov
push
pop
jle
mov
sbb
add
push
or
xor
sub
cltd
pop
mov
hlt
jbe
dec
dec
mov
dec
ret
nop
add
cmp
arpl
les
adcb
shll
loop
push
jle
sbb
bound
add
xor
mov
add
jnp
mov
pop
xchg
notl
adc
mov
mov
mov
push
push
inc
test
rcrb
jae
inc
cmp
xorb
xchg
enter
or
cli
dec
test
repnz
cs
dec
imul
adc
xor
jmp
mov
cmc
push
mov
out
rcr
push
stos
mov
push
or
mov
mov
in
mov
push
or
stos
mov
dec
dec
xor
and
mov
sub
cmp
sub
inc
daa
sub
call
addl
add
push
fcmovu
dec
mov
dec
lcall
cmpsb
bound
in
mov
and
mov
dec
bound
dec
outsb
and
jb
scas
inc
rolb
js
add
stos
mov
mov
fistpl
jmp
cmp
pop
sub
cmp
fcomip
sbb
mov
xchg
not
push
push
pop
or
int3
dec
fisubs
loope
les
pop
loope
imul
xor
mov
bnd
jnp
or
mov
data16
jne
and
insl
movsb
jno
dec
inc
mov
ret
hlt
cmp
mov
pop
ror
mov
add
pop
outsl
sbb
cli
fwait
clc
xlat
lahf
pop
push
lds
mov
lock
aam
and
repnz
mov
push
add
popa
mov
jg
leave
dec
jmp
push
mov
sub
xchg
add
leave
call
mov
outsb
adcl
imul
sub
orb
inc
fs
dec
dec
incb
adc
mov
add
jnp
xor
es
outsb
xor
xchg
inc
lea
push
popf
pop
push
pop
repnz
cltd
xor
cli
sbb
ss
sub
out
mov
int3
leave
daa
xorb
xor
stos
or
cmpsl
or
push
sub
or
neg
mov
jecxz
faddp
add
xchg
ds
and
xorb
jno
ret
les
loopne
int
push
mov
xchg
loop
cmc
or
xor
mov
test
mov
outsl
movsl
stc
cmp
jmp
dec
mov
add
icebp
data16
ds
cwtl
test
stos
cmc
fadd
or
sbb
push
or
cltd
nop
or
les
out
repnz
add
sub
jmp
stc
add
adc
adc
mov
pop
or
inc
das
mov
or
pushl
icebp
mov
arpl
insl
pop
adc
mov
and
xor
mov
mov
xchg
arpl
stos
xor
jmp
aad
aad
pusha
pop
daa
jne
and
jmp
stos
in
out
in
loope
sub
mov
dec
aaa
push
add
pusha
inc
sbb
add
shl
jle
pusha
js
inc
es
nop
xchg
or
push
int
pop
sub
subb
pop
cmc
cli
cmp
inc
shll
jge
cmp
into
scas
frstor
hlt
add
cmc
stos
mov
or
adc
cs
pop
ss
das
jg
xchg
ficoml
outsb
cltd
addl
daa
icebp
rcr
cmp
push
pop
jge
aaa
xchg
push
add
insb
xor
or
inc
enter
add
jne
push
add
dec
or
push
in
sub
faddl
popf
rcrb
pop
mov
loop
xchg
xor
jle
stos
repz
mov
pop
inc
orl
enter
aas
mov
out
and
dec
sar
cs
mov
sub
mov
in
jmp
fildl
add
add
inc
pop
sti
mov
add
std
jb
jmp
dec
fcoms
xchg
and
into
daa
pop
sbb
push
mov
jo
fcomps
leave
push
adc
push
add
outsb
fimuls
jo
daa
xchg
bound
pop
add
outsb
sti
sysret
pop
mov
stos
bound
or
mov
ja
ret
nop
jns
push
cwtl
xchg
add
mov
jmp
push
movsl
cld
jle
jg
mov
mov
scas
sbbb
not
in
sub
pop
out
mov
inc
es
das
add
mov
movsb
xchg
repz
mov
or
out
in
push
pop
cmc
jp
jle,pt
fsub
mov
jge
aam
add
and
mov
adc
xchg
mov
push
insb
cmp
push
add
push
int3
cmp
adc
sbb
push
lods
lods
sbb
and
xor
pop
aad
test
bnd
data16
sub
jle
xrstor
gs
test
ljmp
mov
ss
sub
mov
push
push
pushw
popa
sub
xor
push
push
mov
or
imul
push
pop
call
out
sub
movsb
test
scas
cltd
ret
cmp
mov
jg
inc
popl
pop
clc
jmp
jb
imul
add
or
mov
pop
in
loop
movb
sub
push
ds
inc
mov
push
addr16
jno
out
jno
cltd
add
jmp
xor
jno
rclb
sub
push
pusha
ficompl
pushf
xchg
stc
adc
pop
loopne
arpl
ja
fdivp
jne
mov
mov
jno
subb
or
icebp
push
aas
adc
dec
into
mov
cs
pop
add
sti
imul
add
scas
movq
cmpsl
mov
jnp
out
loopne
iret
and
gs
ljmp
mov
add
sub
call
jmp
ljmp
int
mov
mov
jmp
push
flds
push
push
addr16
in
push
rclb
pop
pop
loopne
or
addr16
mov
sti
cmc
stos
jecxz
dec
mov
adc
or
or
neg
or
icebp
xor
push
xor
fdivrp
neg
push
mov
and
lret
mov
cmp
bound
aam
inc
hlt
sub
lods
pop
and
ret
loope
push
test
inc
les
jae
and
pusha
push
jg
sub
pop
push
or
jmp
or
jle
dec
fnstcw
push
icebp
xchg
or
ret
popa
jp
orb
ss
aad
lret
push
mov
scas
adc
add
add
loop
aaa
xchg
ficoml
mov
adc
pop
aad
out
sub
jp
and
push
mov
push
pusha
or
sub
bound
mov
cmpsl
jg
clc
and
out
jbe
daa
jae
xchg
int3
jge
je
stos
aam
pop
jae
pop
imul
repz
inc
mov
sbb
rorl
add
add
or
ss
cli
mov
or
sarb
repnz
cmp
push
mov
popf
jno
shll
jl
shrb
jmp
popf
bound
leave
fiaddl
mov
jns
lret
or
fldl
fisttpl
dec
xor
inc
test
inc
cmc
icebp
xchg
push
repz
fidivs
adcb
out
pop
xchg
std
add
std
aas
add
mov
pop
sahf
xorb
mov
mov
pop
mov
jnp
cs
aad
inc
sub
or
jmp
mov
clc
dec
xchg
add
dec
addb
inc
ret
call
mov
add
clc
mov
pusha
push
push
pop
pop
push
push
adcb
lcall
push
add
addl
ja
lock
sub
test
loopne
mov
repnz
or
jg
inc
push
push
or
inc
mov
inc
push
and
pop
data16
repnz
xlat
sarl
mov
push
xchg
hlt
sbb
or
fmuls
mov
sub
jl
mov
adc
fwait
or
rorb
mov
rcl
lock
out
adc
push
js
dec
shl
inc
ss
lock
push
inc
rol
ds
add
orb
or
fbstp
pop
outsl
mov
inc
das
add
lock
test
add
inc
fldt
push
push
adc
push
int3
test
add
jp
xor
adc
pop
lods
mov
outsl
orb
xchg
cwtl
repz
pop
xchg
rorb
or
bound
and
cmpl
add
loopne
and
inc
adc
push
push
lret
dec
sub
call
and
mov
jg
fidivs
sbb
ss
sub
or
jmp
popf
incl
pushf
mov
or
std
ret
fistl
xchg
push
out
gs
jmp
ja
pop
add
js
sbb
push
das
shl
fdivs
jp
daa
inc
outsb
mov
mov
mov
ja
pop
add
and
pop
pop
mov
insl
push
call
frstor
out
aad
or
jbe
sub
cmp
mov
add
loop
lahf
or
lds
cmpsb
jmp
xor
negb
out
jbe
pop
orb
stc
aas
negb
jmp
into
adc
jbe
inc
fisubrs
cmp
jmp
pusha
push
fildll
out
test
int3
dec
test
aaa
cwtl
inc
lods
lock
cmp
cmp
sbb
shrb
notb
sub
fimuls
addb
mov
pop
lods
jp
sub
cld
dec
lret
loop
xor
jmp
and
lods
push
fimuls
xchg
jg
cmp
inc
push
fidivs
js
mov
adc
inc
jl
and
jnp
dec
incb
inc
sub
sub
call
mov
jb
in
das
mov
adc
push
jle
push
and
push
fidivrl
daa
ss
int3
pop
jmp
clc
push
shlb
xor
fsts
and
adcb
pop
add
mov
lock
mov
add
pop
add
fldenv
mov
xor
call
add
js
dec
push
pop
add
dec
repz
popf
xor
dec
arpl
ljmp
mov
cmp
bound
lock
sub
jae
push
jmpw
xchg
out
inc
cwtl
mov
mov
pop
pop
clc
sbb
push
mov
stc
pop
adc
inc
add
insb
imul
push
pusha
mov
nop
ret
repnz
fdivrl
daa
int3
cltd
and
lods
sahf
addr16
xchg
in
cmp
add
aad
repz
xor
or
jmp
add
cmp
pop
fdivrs
rcl
mov
push
lahf
inc
arpl
scas
bound
popf
push
sub
aad
dec
push
push
leave
imul
xor
mov
jns
mul
xchg
mov
jne
cmp
mov
sub
sti
arpl
xor
mov
push
and
jno
or
in
fsts
cmp
xorl
call
loopne
dec
or
cmp
rclb
loopne,pn
sbb
sbb
lds
rcrb
and
pop
add
adc
lcall
pop
das
lahf
push
pop
cld
xor
subb
adc
cs
mov
sbb
sbb
idivl
jne
incl
jmp
sub
sbb
lods
mov
in
aad
adc
or
xchg
inc
sbb
pop
andl
js
lcall
mov
adc
fs
add
test
or
and
push
dec
dec
mov
mov
jmp
cltd
es
arpl
or
dec
or
add
xchg
push
shrb
lahf
lds
and
jg
loopne,pt
jecxz
pop
stos
dec
orb
xorb
cltd
rolb
out
pop
adc
les
add
sub
xchg
add
add
outsl
sbb
push
xchg
das
pop
xchg
les
js
mov
sub
inc
imul
mov
clc
inc
aad
nop
loopne
test
bound
cmp
cwtl
jge
lret
cpuid
push
jecxz
fs
sbb
loopne
sub
add
push
mov
xorb
nop
fisttpll
jnp
out
js
cmc
inc
pushf
pusha
test
clc
cmp
ficomps
insl
cmpsl
push
enter
shrl
push
push
mov
add
jno
add
subb
cwtl
xor
sbb
xor
loopne
adc
dec
enter
mov
rep
and
cld
cwtl
xchg
xor
add
in
cmp
ret
or
pop
jns
subb
cs
aas
jno
inc
inc
adc
or
sub
inc
xorl
adc
stc
sbb
pop
dec
xor
and
imul
fs
mov
out
shr
mov
rclb
adc
dec
mov
pop
fs
cltd
popa
xor
xor
mov
jmp
mov
dec
mov
int
ret
push
push
clc
aas
sar
mov
ljmp
sbb
icebp
ret
bound
fcmovbe
mov
pop
xor
inc
movsb
jno
sub
pop
pop
pushf
jae
pop
push
neg
inc
out
inc
mov
mov
adc
not
sub
or
add
push
or
jo
ficoms
add
add
fcoms
add
adc
andb
pop
mov
mov
xchg
sarb
and
add
pop
fildll
cmp
mov
push
jmp
int
mov
xchg
cmp
add
push
mov
cwtl
mov
not
add
mov
sub
dec
adc
test
shr
add
divl
imul
push
repnz
rorl
push
movsb
push
enter
pop
xor
or
sahf
sub
test
adc
dec
push
push
xchg
fsub
ds
and
je
mov
xchg
xor
xchg
push
inc
fidivrs
addr16
lret
testl
insl
mov
cmp
and
iret
test
loopne
or
jmp
add
adc
dec
mov
repnz
aam
repnz
testb
int3
add
dec
add
repz
andl
xchg
lea
negb
sti
sub
and
fidivl
sub
cld
rclb
pop
xchg
daa
pop
movsb
dec
adc
adc
mov
jne
add
sarl
sbb
popa
int3
jo
pop
xchg
scas
les
stc
push
repnz
mov
push
in
jns
gs
les
and
sbb
and
mov
pop
adc
ret
dec
insb
and
test
pop
add
sub
sub
addr16
out
loope
inc
movsb
jg
mov
adc
or
dec
pop
dec
push
or
push
shll
aaa
rcrl
adc
mov
push
jmp
fsts
negb
bnd
pop
sahf
jns
in
cmc
das
sti
dec
add
hlt
test
and
jp
fildll
pop
xlat
ret
pop
cmp
fdivl
fidivrs
orl
dec
lret
lods
incl
inc
subb
hlt
out
mov
add
mov
dec
mull
cli
icebp
lods
scas
aam
xchg
fcoms
jmp
push
cmp
jnp
aaa
cs
mov
cs
push
enter
repnz
out
gs
jbe
addb
jae
hlt
arpl
fadds
bnd
jmp
jecxz
mov
mov
xor
insl
or
add
fiadds
mov
dec
xor
shlb
adc
hlt
jmp
mov
push
testb
add
ret
pusha
xor
pop
sbb
or
pop
adc
fs
pop
mov
add
add
push
ja
cli
push
dec
add
add
mov
fcomip
xchg
jb
hlt
pop
dec
add
mov
das
mov
mov
mov
mul
jo
adc
pop
jns
push
imul
adc
fwait
loopne
push
push
sbb
fs
ret
rol
mov
and
pop
int3
das
test
loopne
mov
sbb
mov
leave
xor
js
push
dec
adc
mov
mov
mov
xor
lds
jns
pop
popf
dec
add
push
or
xor
xchg
not
out
mov
inc
dec
add
push
inc
add
aas
sahf
adc
jg
lret
xlat
push
mov
and
pusha
sti
adc
arpl
push
je
fdivs
roll
push
fidivs
test
mov
movsl
aad
in
sub
pop
xor
in
ret
or
ljmp
dec
clc
es
inc
ret
roll
cmp
pop
xor
ds
cmp
pop
push
stos
inc
xchg
push
mov
sub
push
pop
sub
add
andl
ret
adc
nop
int3
add
sbb
dec
and
xlat
pop
xchg
jns
lcall
stc
in
std
out
shrb
les
in
dec
mov
push
ret
pop
scas
xchg
mov
push
cmc
lds
or
adc
xor
mov
push
mov
add
sub
xchg
xchg
mov
mov
dec
data16
push
sub
dec
dec
addr16
test
out
mov
mov
pop
out
adc
pop
nop
or
push
movsb
mov
test
in
inc
push
imul
lcall
lret
jmp
add
add
sub
lret
cmc
dec
pop
xchg
sub
jno
es
or
pushf
adc
push
or
mov
sbb
dec
aad
sub
mov
dec
add
mov
stc
adc
push
outsb
in
adc
pop
shl
in
jo
hlt
or
add
cmp
mov
sti
pop
add
lds
cmp
iret
shlb
loope
or
cld
adc
adc
sub
push
dec
or
push
push
test
outsl
inc
jns
push
mov
movsb
pop
pop
cs
xor
adc
aam
nop
rclb
inc
jne
xor
jl
adc
bound
push
je
scas
daa
sub
mov
push
push
lahf
dec
gs
das
int
mov
aad
push
enter
sub
nop
jae
mov
rcll
dec
push
jmp
or
pop
push
jmp
inc
ret
stc
outsb
sarb
push
arpl
pop
mov
pop
ljmp
loop
cmc
arpl
cwtl
xchg
mov
jo
add
fiaddl
pop
stos
test
mov
mov
pusha
in
lcall
mov
push
add
push
fnsave
cmp
xor
pop
cmpsb
ds
add
vmovapd
inc
push
jp
pop
dec
jb
stos
xchg
or
or
iret
loope
adc
fsubl
mov
in
inc
add
xor
inc
test
ffreep
mov
sub
jae
mov
cmp
push
push
cmc
mov
jge
inc
sub
data16
cmp
push
jmp
cmp
mov
mov
xchg
sbb
in
xor
push
mov
inc
rorb
loop
add
jge
add
ret
mov
push
and
in
rolb
or
dec
xor
pop
les
incb
out
and
sbb
icebp
mov
add
in
iret
pop
xchg
sub
dec
push
movsl
pop
subl
mov
push
fisubrl
mov
shlb
and
mov
inc
int3
out
loop
cvtpi2ps
std
movsb
clc
or
pusha
inc
sbb
pop
gs
sub
adc
dec
add
cwtl
mov
mov
sbb
addr16
pop
or
sbb
and
jnp
sbb
xchg
das
mov
int3
cmp
out
subb
mov
xor
hlt
or
xor
imul
movsl
hlt
mov
roll
inc
pop
xchg
and
call
fdivl
imul
xchg
sub
xchg
inc
shrb
out
test
jmp
mov
mov
ret
or
repz
pop
je
pop
sub
dec
or
cwtl
punpckhbw
pusha
pop
jnp
xchg
js
push
sub
and
xlat
add
cmp
jle
cmp
fldcw
jmp
pop
mov
ret
push
add
enter
jg
scas
pop
pop
pop
xchg
and
pop
xchg
not
ret
sub
scas
push
add
mov
adc
add
imul
outsl
add
call
ljmp
pop
jnp
sub
fsub
aaa
arpl
lret
or
add
or
das
pop
xlat
jb
sub
inc
scas
jp
sahf
or
or
pop
shr
xchg
rolb
dec
mov
cmp
push
ljmp
push
movsb
subb
dec
lods
add
or
push
pop
pop
dec
sub
inc
into
cltd
lock
push
and
std
inc
xchg
xchg
es
test
xor
xlat
scas
loop
lahf
mov
or
sub
xchg
jg
movlhps
incb
pop
fisubl
add
pop
xchg
jp
es
andb
leave
xchg
pop
cmc
push
out
cmc
mov
jb
and
sub
js
push
sti
and
cld
xchg
pop
lahf
adc
rorb
mov
addr16
shlb
mov
cwtl
cld
jbe
xlat
ljmp
in
pusha
sub
outsl
or
and
or
adc
push
push
int3
sbbl
add
xor
mov
test
push
data16
fdiv
sub
inc
push
sahf
pop
or
push
or
or
sbb
jle
pop
aad
xlat
cmp
stc
xor
jno
cld
ds
fadd
pop
ljmp
notl
test
or
fucom
call
and
nop
scas
mov
adc
or
iret
cmp
mov
and
shrl
dec
sub
xor
fldcw
pop
shl
dec
push
cld
xchg
dec
loop
lcall
inc
pusha
fbstp
sub
hlt
fimuls
mov
mov
add
jmp
adc
lcall
xchg
inc
add
dec
mov
enter
mov
nop
sub
fadds
jbe
popf
orl
sub
add
mov
sbb
xorb
outsl
or
cld
and
sarb
daa
lret
fprem
and
sbb
sub
repz
push
jp
pop
int
ja,pn
fisttpll
jb
testb
out
jge
movsl
orl
and
mov
push
orb
or
push
mov
sbb
mov
push
stc
sub
xchg
lea
inc
cmp
push
ja
das
push
test
add
and
mov
xchg
cmp
pop
push
arpl
aaa
clc
ret
test
daa
push
dec
add
lods
add
jmp
add
push
pop
sbb
cld
cmp
out
in
dec
lods
mov
mov
pop
pop
cmp
fsubs
aam
addl
jb
jns
inc
and
push
ja
jl
and
xor
mov
dec
push
push
or
pop
push
testb
in
mov
js
les
pop
shll
or
sbb
cwtl
pop
add
jnp
inc
popa
mov
lock
dec
pop
loop
les
test
fimuls
rcrb
sbb
je
cmp
add
lods
cs
mov
ret
inc
jbe
push
fimull
cld
je
pop
push
push
jge
cmp
cli
add
pop
inc
aam
sub
mov
pop
dec
mov
and
loopne
xor
shlb
lcall
push
nop
cli
faddl
sub
sub
mov
cltd
cmp
rclb
out
xchg
stos
cwtl
add
ja
sub
ret
push
inc
xor
push
bound
cli
jb
mov
daa
jmp
adc
mov
lret
push
iret
sub
gs
mov
jne
jmp
jp
sub
xlat
sahf
fwait
add
icebp
jmp
sbb
mov
jbe
arpl
sub
pop
movsl
add
sub
clc
lret
stos
dec
je
pop
ds
jecxz
push
ja
testl
pop
adcb
clc
daa
pop
jg
and
push
push
mov
loop
rclb
jg
and
ds
sti
add
mov
xor
pop
cmp
call
push
popa
push
jmp
mov
xorl
jb
jbe
push
jnp
cwtl
das
js
ss
adc
mov
aas
jp
das
push
cs
fisubrl
lods
sbb
aas
pop
int3
call
imul
jo
mov
jmp
cmp
sbb
pusha
push
add
bound
push
orl
mov
psrld
xor
lret
xlat
cwtl
and
enter
pop
inc
mov
add
add
leave
aad
jnp
pop
pop
pop
cs
inc
adc
lahf
stc
pushf
adc
push
adc
adc
std
mov
rcrb
lahf
out
sub
lret
faddl
jp
jno
ljmp
jo
sbb
sub
lahf
inc
sub
les
or
sub
jmp
xor
in
add
cli
dec
xor
push
mov
fs
xor
push
jmp
adc
repz
movsb
cmp
lods
test
rol
pop
xchg
cmpb
inc
mov
jnp
add
inc
or
push
or
popa
gs
repz
fimull
scas
test
lret
jge
inc
push
push
jle
or
imul
rcll
out
mov
rclb
loop
or
aam
addl
cmp
mov
ficoms
nop
inc
cli
cmp
push
decb
cld
loope
in
cmp
gs
push
cmp
or
roll
jb
iret
jg
mov
mov
adc
pop
stos
add
insl
pushf
push
mov
aad
in
sti
xchg
fcmovnu
add
jmp
lds
jns
jne
add
cmp
loopne
inc
pop
mov
mov
jp
xchg
adc
loopne
push
push
pop
pop
xor
lds
mov
pop
lock
push
iret
push
and
pushf
fs
push
add
dec
add
inc
bound
sbb
jmp
adc
das
cmp
push
pop
loope
adc
into
orl
and
jne
sti
sub
xchg
add
inc
mov
mov
out
jg
cltd
mov
sbb
and
dec
dec
mov
or
or
dec
mov
sahf
fsts
mov
mov
inc
enter
cmp
repz
nop
icebp
fs
repnz
xchg
stc
add
lret
adc
es
add
ret
xor
jno
adc
ret
or
fistpll
in
xor
movsb
add
out
out
sbb
pop
dec
mov
cmpsb
inc
cmpsl
loop
sahf
test
cs
mov
add
jg
sbbb
cmp
cmp
lcall
fcoms
ljmp
mov
sub
push
dec
add
scas
cmp
pop
xchg
xchg
test
cmp
add
inc
inc
push
push
xor
jecxz
inc
popl
xor
pop
or
inc
test
inc
out
in
das
sub
inc
shr
loopne
push
add
int3
ja
imul
pushf
cltd
in
jmp
out
movsb
push
loope
mov
fbstp
outsl
iret
push
shr
into
add
add
jo
mov
gs
xchg
addr16
out
dec
sub
push
shl
sbb
out
mov
test
xchg
and
or
fadd
lds
mov
cmp
fld
mov
inc
stos
jecxz
ret
fadd
mov
sbb
inc
jmp
jns
pop
mov
jmp
es
xchg
sarl
and
aas
push
inc
fidivrs
dec
cwtl
ljmp
and
repnz
insl
stos
mov
shrb
jmp
lods
test
jmp
aaa
insb
mov
out
add
les
fmuls
and
pop
add
pop
lret
mov
inc
mov
push
jne
pop
mov
pop
sahf
mov
xor
cmp
outsl
adc
jne
mov
dec
xchg
inc
lods
inc
test
add
push
push
push
and
lret
pop
std
inc
or
cld
imul
add
int
jmp
loop
inc
xchg
lcall
cmpsb
fcoml
mov
stc
and
mov
mov
rorl
mov
lcall
jge
jl
add
jg
js
fisubl
mov
xor
push
cmp
loope
pop
add
and
mov
sub
fs
js
pop
or
gs
mull
push
fiadds
or
xor
arpl
mov
gs
inc
dec
scas
frndint
and
add
push
ret
fldenv
xchg
in
sub
xor
push
push
andl
inc
sub
dec
push
mov
aad
or
decl
mov
mov
xor
jle
pop
scas
lods
mov
loopne
testb
push
lods
mov
loope
cmp
jmp
mov
or
rcrl
call
push
bound
adc
or
shrl
dec
je
inc
std
adc
loopne
loope
int3
or
xchg
mov
pop
ljmp
dec
dec
adc
jecxz
cmpsl
or
or
bswap
mov
jp
daa
popl
pop
mov
xor
jb
clc
sub
aam
out
int
cli
loope
clc
cmp
pop
mov
sub
mov
cmpsl
mov
inc
dec
scas
into
dec
enter
xchg
pop
in
adc
add
lock
lret
push
sub
mov
add
jbe
add
sbb
mov
pop
dec
mov
loop
repnz
imul
pop
xchg
loop
test
dec
jg
dec
mov
dec
or
rcr
decl
dec
push
aad
push
aas
add
cmpsb
push
push
add
dec
lods
mov
pop
sub
je
dec
jg
push
orl
xchg
leave
clc
sbbb
not
mov
in
inc
ret
fisttpll
add
push
sarb
add
repnz
adc
dec
cmp
mov
push
gs
add
insb
mov
out
mov
test
in
jl,pn
mov
sbb
sub
and
mov
rcrb
jl
mov
enter
mov
adc
shr
dec
cmp
test
shlb
popa
mov
ds
jmp
aad
out
sub
add
dec
or
hlt
scas
mov
mov
mov
inc
push
push
xchg
loope
jnp
loop
and
mov
adc
push
addl
or
std
iret
bound
sub
inc
xor
sub
sbb
jmp
lcall
cli
rcrb
xchg
roll
push
mov
das
add
jae
adc
test
jno
insl
cld
inc
dec
adc
add
push
jecxz
icebp
cmp
lock
push
hlt
stos
inc
cmp
inc
arpl
mov
subb
or
or
pop
pop
push
enter
cwtl
or
adc
je
stos
inc
sub
mov
or
jbe
mov
add
cmp
jo
pop
dec
cltd
add
jmp
cmp
cmpsl
or
adc
mov
add
call
or
shrb
push
sub
xor
xchg
and
push
das
sub
adc
mov
dec
test
mov
daa
xor
jg
pop
ds
clc
mov
inc
push
jmp
mov
call
sbb
js
rcrl
jae
loop
orb
push
inc
call
daa
faddl
push
repz
xlat
push
jmp
mov
sbb
lcall
pusha
adc
in
sub
setle
ljmp
int
int3
movsl
scas
in
scas
iret
imul
cld
fadd
testl
stos
xchg
xlat
pop
mov
fcomps
jge
out
dec
enter
les
pop
dec
roll
hlt
subl
adc
bound
push
jne
add
xchg
cli
jnp
add
dec
jno
adc
cmc
dec
lcall
movsl
aad
cmp
inc
or
push
std
insb
cmp
neg
cwtl
xchg
add
pop
and
daa
pusha
bound
addr16
enter
sub
lret
push
sub
addb
cmpsl
enter
or
xchg
mov
xor
push
ret
je
xchg
jb
add
js
mov
cwtl
jae
loope
fcomi
dec
cmc
add
call
in
pop
test
add
add
xchg
mov
jb
xchg
in
test
push
and
ret
add
pop
add
push
xchg
adc
insl
sub
push
notl
ljmp
push
cmp
pop
mov
pop
push
arpl
cmp
push
inc
jo
push
mov
insb
mov
push
or
mov
faddl
inc
add
push
faddp
daa
inc
sub
das
outsl
sbb
inc
jmp
in
mov
adcb
shr
or
sub
pop
cmpsw
push
out
add
push
push
mov
or
lock
jb
gs
jae
jmp
rorb
add
jne
add
pop
out
and
insb
add
and
cmpsl
inc
add
adc
cmp
inc
add
repz
sahf
xor
sub
pop
test
jo
pop
test
inc
shll
ljmp
xchg
lahf
subb
fcompl
and
pusha
inc
mov
mov
call
ret
daa
imul
push
jmp
fcoml
leave
adc
rolb
jmp
rcrl
inc
mov
aam
pusha
pop
adc
adc
loopne
imulb
inc
pop
cmp
dec
jg
or
or
jp
outsl
and
out
or
inc
jb
sub
push
sbb
dec
mov
enter
jecxz
or
pop
mov
jmp
pop
nop
add
push
addr16
adc
cmp
mov
mov
pop
xchg
mov
push
jne
adcb
inc
fisubrl
aas
arpl
decl
mov
cs
imul
lods
aas
mov
sahf
dec
mov
movsl
sub
daa
adc
into
pop
jb
mov
push
jmp
xlat
sbb
lahf
je
jae
jmp
add
push
subb
push
cmpsl
cwtl
jge
fsubrl
pop
dec
mov
push
jl
inc
leave
out
or
lret
test
lcall
ljmp
aas
mov
push
lcall
fbld
mov
push
call
or
jae
jl
and
call
push
add
repz
add
das
inc
xor
add
jmp
call
insb
add
pop
push
leave
xchg
or
sbb
cmp
adc
push
adc
fmuls
jnp
leave
in
add
push
cmpsb
iret
bound
addl
dec
pusha
imul
repnz
cmp
pop
popf
imul
gs
enter
inc
cmc
ljmp
daa
in
jno
lahf
sarl
xchg
in
aas
adc
scas
leave
scas
in
xor
push
cmc
and
inc
in
jno
jne
in
and
push
inc
add
pop
jmp
stos
mov
or
jmp
push
dec
mov
sahf
pop
push
pop
into
lock
inc
adc
pop
cmp
fwait
pop
pop
popf
push
nop
cld
rolb
jecxz
jb
add
lods
adc
xchg
jbe
arpl
dec
dec
add
not
add
in
lods
jo
sub
sbb
push
out
cld
cmp
in
adc
mov
js
pop
xchg
out
rorb
iret
daa
decl
pmullw
daa
inc
sub
out
in
ret
mov
popf
push
mov
lock
daa
out
sbbl
or
sub
out
fsubs
jbe
dec
sub
stc
ss
add
xchg
aam
cmp
lds
fiadds
lods
jbe
je
lret
add
fs
push
jmp
dec
push
push
or
mov
loop
cmp
and
mov
lea
call
xchg
aad
jns
push
jno
dec
cltd
ret
pop
nop
lcall
pop
idiv
inc
pop
xor
js
daa
ds
and
filds
pop
dec
jb
push
fmull
in
movq
call
daa
sub
cmp
xchg
mov
adc
incl
xor
inc
pop
dec
sub
and
and
bound
inc
push
jecxz
test
sub
cli
xchg
xchg
cld
aad
mov
fmull
int3
enter
pop
and
sbb
jmp
fdecstp
scas
jbe
push
mov
mov
pop
mov
pop
xchg
xor
mov
orb
nop
jae
or
add
fisttps
jno
add
and
adc
ja
out
test
cmc
icebp
adc
push
push
mov
add
imulb
pop
lock
and
xor
add
or
cli
jle
popa
push
or
adc
jb
add
mov
out
and
mov
outsl
in
push
in
jno
and
xor
sbb
push
xlat
rolb
sub
and
or
xor
pop
je
add
mov
hlt
jl
xchg
rcrl
aam
andl
mov
repnz
cmp
fsubs
or
sbb
add
mov
mov
sbb
mov
xor
jb
pop
ror
mov
pop
clc
add
inc
fs
sbb
test
das
mov
xor
and
jb
int
loope
arpl
dec
add
test
pop
nop
sub
in
add
data16
add
dec
push
lret
adc
pop
add
daa
jne
dec
add
nop
jge
add
xchg
pop
add
in
jne
push
sub
mov
mov
adc
btr
cmpsl
dec
stc
pop
add
in
hlt
dec
aad
mov
mov
push
inc
call
cltd
je
data16
mov
in
sbb
pop
pop
rorl
incl
int3
cltd
fbld
add
sbbl
push
add
sbb
int
or
or
psadbw
nopl
lds
inc
push
repnz
jnp,pn
aaa
imul
leave
test
sub
ret
js
out
loope
add
cs
pop
jo
push
std
cmp
inc
mov
mov
xor
cmpsb
adcl
dec
das
outsl
mov
cs
cmpsl
sbb
fbld
pop
adc
pushf
and
test
lret
jbe
add
stos
cs
cmp
hlt
test
fisttpl
outsl
iret
rclb
add
add
sti
sbb
js
sub
push
ljmp
imul
das
or
lret
add
orb
lret
in
sbb
clc
jg
imul
icebp
shl
dec
in
and
mov
cmp
iret
add
mov
adc
pop
addl
rcll
sbb
and
xchg
push
xchg
inc
mov
xchg
jnp
stos
lcall
icebp
inc
add
adc
cmp
add
dec
mov
mov
adc
test
push
cmp
js
cmp
sbb
stc
ret
mov
jns
in
xchg
inc
pop
stos
xor
xor
adc
aam
push
and
inc
sub
sbb
call
fsubl
add
mov
je
adc
in
sbb
mov
scas
pop
add
fwait
mov
dec
jg
fsubrl
jecxz
sbb
call
dec
int3
movsl
dec
scas
inc
add
cwtl
icebp
and
not
pushl
lods
push
bound
mov
add
jno
pop
jb
add
and
or
adc
enter
icebp
lcall
das
out
add
insb
stos
xchg
push
add
mov
add
mov
push
adc
push
xor
sub
adc
loope
mov
jge
adc
add
decl
daa
aam
je
or
clc
xchg
inc
and
rcr
push
rolb
test
mov
into
add
pop
fmul
cwtl
add
ja
fcoms
rorb
test
adc
sbbb
std
call
movsl
lods
pop
cmp
sbb
xchg
jl
gs
lods
enter
inc
dec
sti
cmp
addb
sub
dec
lods
jnp
add
dec
cmp
or
les
add
icebp
stos
sub
jp
jmp
dec
iret
dec
fs
add
aad
out
adc
sub
mov
or
add
pop
push
js
les
jbe
outsl
icebp
inc
push
add
pop
jns
xor
pusha
xor
fsubs
add
clc
xor
adc
and
push
pop
nop
imul
std
insl
sbb
cmpl
jge
mov
push
dec
daa
jl
pcmpeqw
xor
add
das
data16
addr16
sbb
movsl
add
sar
in
pop
js
add
imulb
mov
aaa
pop
inc
mov
inc
stc
popa
insb
fmuls
int
pusha
int
cmp
out
inc
cmp
bsf
push
adc
inc
mov
jmp
pop
sar
dec
idivb
push
fs
fstpl
sub
out
add
mov
loope
mov
repnz
arpl
add
mov
jmp
adcb
int
sti
cmovg
jp
and
cmpsl
xor
pop
jge
cmc
xchg
pusha
xor
add
sti
adc
jns,pt
lret
add
push
dec
cld
subl
add
inc
mov
cmp
add
jl
push
cmp
and
sti
data16
push
mov
out
mov
inc
cmp
xchg
push
mov
data16
cmp
push
dec
pushf
in
pop
int
std
mov
inc
pop
dec
in
add
frstor
ja
aas
push
aad
imul
mov
mov
add
shl
notl
std
incb
xor
lret
js
jbe
mov
pop
dec
js
sub
xor
in
aam
addr16
jb
sbb
in
jmp
pop
dec
cmpsl
loop
cli
add
int
les
roll
test
jp
add
mov
popa
pushf
cmp
add
jns
pop
mov
ds
repz
sbb
out
pop
inc
sub
lods
add
sub
clc
add
imul
adc
jle
add
cmp
rorl
or
out
mov
jl
fisttpll
fmulp
xchg
rol
pop
jne
lods
arpl
lods
test
or
inc
aam
stc
add
roll
push
scas
inc
xchg
andb
cmp
push
mov
cmc
jbe
add
and
add
pop
out
out
dec
inc
aam
in
pop
fsubrl
in
shlb
add
dec
inc
cmc
adc
jnp
add
jmp
mov
adc
test
xchg
push
jne
out
add
adc
pop
andb
pop
xchg
pop
add
add
enter
pushf
or
adc
push
push
jge
iret
xchg
icebp
int3
mov
add
or
add
call
dec
call
aam
jne
pop
add
das
pop
adc
js
loopne
dec
arpl
pop
mov
scas
push
jb
dec
daa
xorl
ja
movsl
pop
ret
loopne
nop
lahf
add
pop
push
fnstsw
adc
scas
or
loop
jle,pt
add
xor
scas
pusha
mov
push
mov
cmp
andl
dec
jp
fs
in
push
leave
loopne
aam
das
add
rcrl
sub
nop
sbb
outsb
mov
add
sbb
aaa
cltd
add
cmpsb
divb
jge
push
lds
in
cmp
xchg
aas
add
inc
xor
dec
push
iret
add
adc
ljmp
sbb
sub
inc
pop
ret
data16
pushf
add
xor
iret
or
sbb
rolb
and
arpl
mov
mov
loopne
iret
das
add
push
sahf
push
fsubl
mov
cwtl
cmp
xor
movsb
jne
pop
mov
dec
mov
inc
leave
cmc
hlt
inc
jle
cmp
fld1
jo
sub
pop
pop
pop
jnp
sub
in
jecxz
call
sbb
sub
aam
fs
or
stos
repnz
adc
xchg
adc
cmp
addl
pop
lock
inc
int
repnz
push
add
jo
call
addr16
cmp
pushf
gs
aaa
cli
add
stc
add
popf
cwtl
add
outsl
mov
xchg
push
test
sbb
jnp
cld
xchg
push
xor
add
lahf
adc
pop
xor
sbb
sbb
jnp
add
aad
inc
pop
loope
add
out
xor
enter
add
jae
or
adc
testb
jo
lret
int3
xor
std
pop
roll
loopne
and
xor
push
pop
push
stc
adc
add
and
xchg
mov
in
imul
mov
aaa
mov
add
call
lahf
xor
push
add
cmp
stos
int3
test
add
sub
xchg
mov
add
add
add
push
addb
lods
jp,pt
ja
pop
incb
test
cmp
add
jg
adc
fcmovne
inc
mov
leave
fnstenv
inc
push
in
pop
sub
adc
notb
pop
push
mov
popa
jo
outsb
sbb
push
and
mov
dec
sti
or
jno
add
and
outsl
stc
test
pop
add
movsl
mov
mov
into
fwait
sub
or
xor
inc
add
nop
xor
xorl
movups
mov
add
cmp
lcall
jge
or
sbb
mov
add
push
dec
push
std
pusha
jne
mov
outsl
movaps
andb
inc
call
sar
dec
inc
cld
rorb
push
subl
insl
loopne
add
mov
mov
fwait
and
sbb
sarl
jne
out
dec
lods
pop
loopne
aam
fs
add
dec
cmp
inc
add
test
lods
xor
add
pop
jno
inc
jge
push
add
mov
push
and
inc
out
popa
xor
add
dec
jns
dec
lock
lds
loop
jno
fsubl
mov
mov
shlb
adc
mov
add
pmaxub
xchg
dec
mov
xor
scas
dec
mov
mov
or
adc
int3
inc
mov
xor
inc
pop
or
not
sub
fdivr
xor
out
add
in
pushf
add
push
int
shlb
scas
dec
mov
add
popf
push
jno
rcll
rcr
nop
lock
nop
inc
stos
push
add
xchg
xor
sti
loop
aas
call
cltd
add
or
jg
in
jge
pusha
dec
mov
lret
jnp
loop
cltd
add
mov
cmp
ret
call
pop
ljmp
es
mov
jo
dec
jg
sub
add
add
lods
mov
sub
mov
data16
in
cs
sahf
add
out
push
pop
add
cld
icebp
cmc
or
inc
mov
push
insb
xchg
rcrl
push
ret
xchg
ds
adc
outsl
sub
push
xchg
add
jecxz
insl
test
add
fwait
sbb
add
and
es
mov
call
psubsw
movl
repz
jge
jo
mov
mov
pusha
shll
jnp
addl
aas
or
mov
or
jle
out
ds
push
int
and
xor
or
and
mov
dec
movsl
mov
add
jnp
mov
cmp
cltd
rol
cmp
xchg
les
lds
sarb
pop
add
int3
add
rolb
dec
inc
call
add
repz
inc
jo
add
insl
mov
add
inc
cmpsl
das
or
enter
and
cmp
rolb
shld
pop
mov
push
loop
daa
inc
nop
xor
lahf
movsb
movl
mov
bound
stos
imul
push
dec
pop
mov
add
jle
inc
fucomip
add
mov
cwtl
shll
fsub
outsb
inc
out
mov
mov
jp
add
lahf
insb
mov
add
xchg
jle
cld
jg
in
xor
das
cmpsb
cmpsl
lret
daa
fwait
movsb
add
bound
jg
adc
pop
sbb
xlat
push
sub
mov
test
rcr
mov
dec
mov
dec
test
pop
sub
and
scas
testl
cmc
clc
hlt
cmpsb
pop
pop
aas
shll
inc
sarb
mov
jecxz
mov
add
xchg
pop
cmp
cmp
test
jge
add
sub
lret
jmp
xchg
jp
add
rcrl
imul
sbb
and
psubsb
fndisi(8087
es
arpl
cmp
fnstsw
mov
mov
add
sbb
cwtl
xor
imul
mov
mov
fcompl
std
mov
das
or
jmp
add
push
add
cmp
and
sub
incl
popa
mov
mov
add
lret
adc
shrb
lret
pop
pop
loopne
xchg
orl
arpl
pop
xchg
mov
hlt
inc
mov
daa
jno
jge
insb
aad
add
loopne
push
pusha
fcomps
or
fucomip
push
cwtl
dec
fsubrl
scas
add
add
ss
jae
nop
fs
add
mov
mov
pop
dec
js
and
add
test
inc
hlt
add
pop
mov
fsubr
cmp
andb
xor
sub
sbb
loope
dec
jbe
bound
add
push
and
xor
push
pop
lds
dec
xchg
mov
ljmp
call
xchg
loopne
pop
testl
ja
movsb
pop
pop
add
push
inc
test
jae
popf
sbb
jl
dec
inc
cli
lock
xor
mov
push
add
sbb
jae
mov
lea
jne
push
aaa
xchg
cmp
testl
mov
imul
push
fisubl
push
lock
lock
add
in
dec
pop
dec
pop
in
mov
test
aaa
icebp
cltd
xor
sub
shlb
inc
sarb
movsb
pop
push
mov
jns
nop
and
int3
or
ret
cmp
xor
dec
jle
pusha
dec
xor
sub
aam
jg
addl
inc
mov
or
mov
fcompl
cvtps2pi
inc
scas
and
adc
pop
fnstcw
mov
add
xor
sub
add
in
stc
add
and
mov
dec
dec
clc
mov
sahf
sbb
xchg
add
mov
jo
jbe
fs
andb
xchg
jbe
pusha
cmp
das
mov
push
jb
movd
adc
or
adc
andl
pop
loope
lock
jmp
sub
add
hlt
lods
sbb
fimuls
xor
mov
loop
nop
jne
nop
das
aas
mov
mov
js
fiaddl
fwait
xchg
inc
cmp
add
fcompl
call
out
arpl
outsl
lahf
and
les
dec
adc
ja
push
xchg
sbb
adc
add
movsl
call
sbb
push
mov
stos
add
pop
mov
pop
add
pushf
out
mov
fldt
adc
add
or
inc
dec
jns
mov
sarb
pusha
mov
push
ja
add
xor
in
cld
and
add
or
xchg
pop
lret
jbe
add
mov
inc
pop
sub
cmc
adc
or
fidivl
rep
mov
adc
xchg
inc
loopne
mov
jmp
pop
xor
inc
and
mov
adc
xchg
mov
cmpl
push
shll
inc
enter
jp
rclb
popa
push
inc
insl
inc
stos
inc
push
lods
or
sbb
dec
shlb
les
mov
negl
sub
cltd
xchg
outsb
add
dec
into
inc
out
and
pushf
adcb
dec
sbb
fstl
cmp
pop
add
shll
push
in
mov
push
fbstp
addl
adc
mov
repnz
xor
inc
sti
add
pop
outsb
lahf
mov
mov
sahf
adc
add
sub
loopne
push
cmp
mov
jae
ret
sahf
inc
orl
pop
and
push
push
sahf
sbb
movsb
popf
sub
icebp
je
push
jo
add
fwait
adc
push
push
inc
inc
insb
test
ret
mov
and
or
push
xchg
adc
hlt
or
ret
push
and
jmp
push
sub
add
mov
js
ds
sbb
or
jecxz
or
dec
adc
sub
orb
popa
xor
add
mov
mov
push
add
cmpsl
in
adc
pop
dec
ficomps
push
and
jmp
mov
popa
dec
mov
mov
jnp
add
add
pusha
mov
cs
or
les
hlt
or
cld
xchg
inc
add
adc
in
jp,pn
data16
or
add
mov
add
mov
adc
jo
push
les
adc
jo
sbb
sbb
sub
mov
push
in
dec
or
push
aas
jle
pop
hlt
inc
add
sti
cltd
stos
in
xchg
aam
sbb
test
leave
dec
pop
lock
or
int
mov
push
je
inc
test
add
and
rol
sbb
xor
pushf
mulb
js
xchg
xorb
add
out
fld
and
mov
push
push
pop
arpl
roll
clc
cld
adc
and
loop
add
sub
lock
xor
in
adc
mov
mov
fdivrl
lahf
stc
xor
add
test
insl
aad
cltd
popa
jmp
js
dec
sbb
pushf
mov
outsb
dec
call
or
jo
xor
dec
adc
jmp
add
push
pop
pop
leave
push
or
mov
jecxz
icebp
add
inc
sti
dec
push
arpl
es
mov
or
mov
test
sub
out
out
add
out
jmp
jecxz
xor
popl
xor
xchg
push
pop
int
loopne
push
dec
sar
adc
mov
cmp
pusha
and
push
sub
push
inc
not
dec
mov
filds
sbb
nop
adc
aam
fimull
jl
push
and
push
insl
test
mov
xchg
lret
add
lods
xor
int3
call
fwait
or
insb
int3
outsb
sub
decb
cli
subb
jl
dec
mov
test
jl
add
jecxz
aam
pop
pop
xchg
shrb
and
add
mov
cmp
mov
shr
test
pop
jg
out
add
mov
mov
push
test
push
add
inc
pusha
sahf
mov
and
mov
adc
cli
sub
fildll
cmp
aas
or
in
andb
shlb
xchg
inc
or
stos
test
dec
cmp
clc
pop
jns
leave
pop
mov
jmp
mov
cmp
adc
lods
add
mov
ljmp
das
xor
rorb
inc
push
pusha
add
hlt
out
add
out
sub
mov
xor
pop
addb
loope
stc
call
xor
jmp
jo
sbb
and
cs
dec
ret
repz
andb
inc
movsb
add
dec
xchg
push
or
mov
and
and
and
sub
inc
sub
mov
adcl
xor
xchg
mov
dec
add
dec
xor
lret
adc
outsb
in
ret
dec
aam
test
and
and
mov
pop
loope
or
clc
ja
and
incl
and
mov
xor
insl
add
xchg
sub
push
fidivrl
and
mov
data16
mov
jns
sbb
mov
fs
add
es
mov
xchg
xor
cmp
inc
add
js
cmpsb
add
jne
jmp
inc
push
push
add
cli
xchg
add
adc
iret
nop
mov
pop
cld
and
add
pop
sbb
and
add
sub
cmp
and
loop
dec
fimuls
pop
add
bound
das
fwait
or
mov
test
mov
out
mov
mov
xchg
push
or
clc
push
popa
loope
add
lcall
xor
in
push
cmc
add
pushf
mov
xor
dec
cmp
aaa
adc
and
loopne
pusha
and
add
and
or
or
mov
lods
add
sbb
pop
lret
dec
mov
mov
loop
ret
rcrl
add
sub
bound
fsubl
test
daa
sti
dec
sub
clc
aam
and
test
cmc
pusha
sub
push
cli
ljmp
loopne
ljmp
xchg
pop
daa
cs
cmpsb
mov
hlt
ret
popf
addl
dec
sbb
cmp
in
push
dec
jns
aam
and
inc
push
popf
add
sub
dec
fs
add
stos
iret
movsl
insl
sbb
cmp
cmp
sbb
js
stos
andb
push
aas
pop
and
sub
sbb
fstpt
call
sub
pop
xor
mov
add
mov
jp
rcrb
mov
stos
sbb
adc
dec
cmp
or
mov
add
cmpsl
js
push
loop
xchg
mov
leave
shll
enter
push
fadds
iret
test
dec
sbb
and
lods
aad
shll
mov
cmp
add
int
cmp
pop
push
cmp
sbb
pop
add
jo
clc
mov
mov
in
add
repz
pop
insl
jns
or
sti
jne
mov
dec
inc
cld
clc
leave
insl
push
adc
adc
xor
es
lods
xor
and
dec
sub
jecxz
adc
and
jmp
add
cmp
pop
sub
in
jmp
push
jne
lds
lcall
mov
and
jp
add
hlt
rcrb
lods
mov
cli
int3
xchg
add
subb
inc
pop
add
jp
mov
sbb
aam
lds
in
loope
ds
rorb
and
lcall
mov
pop
cmp
push
jp
mov
add
push
lahf
pop
dec
fdivs
mov
add
mov
sbb
xchg
dec
hlt
and
adc
lods
or
bound
loope
mov
add
cmpsb
pusha
lds
fidivrl
out
scas
adc
test
or
rorb
call
add
shr
lock
nop
cmp
rorb
sbb
icebp
clc
add
in
cmc
ret
dec
or
push
jmp
sub
cli
add
testb
aad
or
push
out
or
fisttpl
xchg
cmp
repz
je
sbb
or
pop
xor
mov
rcl
or
rorl
repz
add
pop
dec
sti
or
jmp
sub
or
cmc
sub
push
xor
adc
add
push
aad
nop
dec
pop
add
mov
sub
xor
aaa
add
or
popa
and
aam
pusha
add
jo
mov
ficompl
adc
sub
jge
sbb
or
inc
mov
test
sti
insl
mov
mov
ret
inc
clc
sarb
call
sbb
dec
jecxz
adc
aam
pop
and
lahf
ja
out
cmp
add
das
mov
xchg
loope
movl
mov
jl,pt
cmp
mov
adc
add
add
mov
or
or
or
into
sarb
add
mov
pushf
lret
mov
aaa
lcall
fmull
loop
pop
cmp
add
mov
mov
adc
mov
enter
or
sti
mov
clc
adc
adc
pop
orb
pop
pop
inc
mov
ret
jmp
adc
in
jmp
fs
cwtl
jno
nop
pop
inc
sub
push
dec
fcomp
dec
mov
pop
cmp
loopne
jle
fs
jge
pop
push
inc
sub
dec
loopne
or
xorb
mov
or
bound
jp
mov
or
jnp
dec
mov
adc
popf
dec
push
or
bound
xorb
or
xchg
dec
shl
call
test
or
cmp
imul
inc
sub
inc
cwtl
test
xchg
mov
push
mov
fiaddl
insl
adc
xor
popa
aad
push
adc
test
adc
jo
dec
test
adcl
dec
dec
pop
mov
test
fnstenv
xor
jbe
dec
pusha
push
adc
stc
mov
jae
nop
js
out
inc
flds
inc
fmull
cmp
sbb
rcrb
jo
xor
pushf
inc
mov
cmp
dec
mov
call
shlb
fs
inc
mov
add
xchg
roll
xor
cmp
sbb
neg
add
cmp
add
repnz
or
pushf
popa
mov
jae
test
xor
orl
cmc
jg
push
addb
imulb
add
sahf
and
add
xor
pop
outsb
pop
pop
pop
ja
mov
or
aaa
add
sete
js
add
adc
outsb
mov
movsb
or
stos
jns
addl
daa
push
pop
popl
xor
jle
popf
xchg
cmp
add
dec
mov
idivb
movsl
sub
xchg
popa
mov
sub
cli
push
pop
pop
xor
ss
icebp
or
sub
inc
pop
pop
es
adc
sbbb
enter
mov
shrl
cmp
sub
rolb
pusha
cmp
push
sti
add
mov
jle
ret
and
ds
cs
pop
sbb
jp
pop
jno
pusha
and
inc
sub
lea
pushf
push
sarb
sbb
jo
mov
xor
cli
dec
mov
psubusw
ror
subb
ret
sub
popa
loope
sub
xor
add
dec
cwtl
jae
jl
arpl
mov
mov
nop
and
add
sar
and
movq
xor
mov
mov
xorb
in
pop
xchg
fcoms
adc
jbe
lea
jno
les
inc
sub
loope
and
into
inc
mov
pop
cmp
sarb
neg
xlat
call
mov
push
int3
in
push
dec
add
sub
sub
push
sarl
stos
add
lret
mov
std
lahf
jae
mov
leave
pop
mov
insb
movsb
ljmp
add
cmp
pop
pusha
mov
pop
vgetmantps
loopne
xchg
xchg
inc
dec
in
flds
fisttps
sub
mov
fs
into
xchg
and
enter
ja
xchg
and
fildll
or
sbb
or
ret
out
bound
pop
sub
out
inc
add
cmp
mov
in
sbb
sarb
fidivrs
or
testl
fs
pushf
adc
inc
pop
mov
addb
imul
fadd
add
add
mov
popf
sub
repnz
loopne
add
dec
and
or
faddl
pop
movb
aad
cmp
das
mov
push
mov
push
loope
pop
mov
inc
mov
sbb
or
cmp
add
arpl
loop
pop
repnz
fwait
sahf
inc
ffreep
int3
sbb
add
or
test
inc
push
mov
mov
jmp
js
xor
mov
add
xchg
out
or
dec
mov
fsubp
mov
into
and
xchg
add
or
and
sbb
es
cmp
lret
mov
jo
add
iret
mov
sbb
dec
cld
std
fdivrl
xor
into
sub
xchg
testl
and
mov
dec
push
xchg
fwait
ret
or
push
stos
inc
pusha
adc
pop
dec
sbb
inc
movsb
inc
cmp
fwait
jg
idivb
bound
aad
jne
cli
outsb
insb
add
jo
or
add
xorl
aas
add
mov
shrb
cs
cli
rolb
mov
pusha
mov
xchg
out
es
loope
jg
jno
les
pushl
rolb
pop
add
clc
cmpb
cmc
jbe
jge
jle
jp
andb
out
add
fwait
dec
sbb
loop
out
in
iret
add
cs
fdivl
jp
lret
push
jnp
lods
lock
add
loop
add
push
pop
andb
jp
test
sbb
xchg
mov
add
aas
add
xchg
sub
arpl
stos
jge
in
push
sub
sub
add
std
and
sbb
clc
and
movsl
add
mov
outsb
mov
mov
adc
jecxz
jg
dec
add
and
xor
xchg
xlat
pushf
icebp
push
push
add
jge
xchg
cmc
lds
test
adc
mov
sub
sbb
inc
outsb
lock
adc
mov
movsb
aam
setl
pop
mov
adc
test
xor
add
xor
or
inc
or
loopne
push
add
lret
test
mov
push
dec
shlb
xor
inc
test
jbe
adc
mov
aaa
push
sbb
or
sub
add
in
sub
imul
ret
aas
lock
pusha
add
loope
xchg
int
push
inc
pop
adc
or
and
adc
add
dec
lea
mov
push
push
add
daa
subl
jnp
jo
add
shrl
test
adc
or
inc
xchg
mov
insl
bound
nop
add
and
cmpsl
lret
sbb
call
shrb
add
dec
mov
stos
xor
movsl
and
data16
ret
lret
cmp
adc
or
loope
lret
in
cli
xor
loop
add
adc
movsl
or
and
inc
call
leave
jo
inc
and
xchg
adc
clc
les
push
sbbb
mov
or
pusha
inc
sbb
or
adc
pushl
dec
sub
add
loope
scas
xchg
jo
sti
sbbb
aas
repz
add
lret
cmp
out
jge
sbb
push
sahf
sbb
mov
pop
xor
adc
cmp
and
xchg
aad
jae
mov
inc
dec
loopne
rcrl
pop
rcrl
inc
fildl
add
fiadds
in
rol
mov
idiv
lock
inc
ds
or
aad
das
orl
cli
filds
sub
adc
push
xor
sahf
pop
sub
fistl
cmc
and
pop
loopne
std
fcmovbe
cmp
cmp
cmp
adc
pop
sbb
into
dec
aaa
test
or
pop
ret
sahf
into
call
aad
es
or
sbb
hlt
xchg
or
jmp
or
pop
and
cmc
sbbl
faddl
sbb
addb
or
cmp
lock
or
jmp
add
test
cs
icebp
or
repz
pop
call
incb
shl
out
sbb
rcrb
add
faddl
out
aad
jle
mov
mov
jp
dec
dec
add
jns
lock
insl
mov
fmull
mov
repz
pop
cmpsl
lahf
mov
xor
js
call
sarb
mov
jg
addr16
fdivr
subb
inc
or
add
xor
mov
dec
fmull
sbb
xor
add
cwtl
insl
fiadds
pop
xchg
dec
loop
xchg
fdivs
inc
pop
push
add
fidivrs
push
outsl
pushf
adc
mov
or
shlb
xchg
lret
inc
adcb
push
sahf
mov
add
or
xor
cmpb
rorb
ja
nop
jns
cmpb
js
sbb
xlat
pop
notb
ret
xor
adc
mov
add
pop
loop
pop
sbb
and
xchg
and
subl
cmc
in
lcall
dec
sbb
scas
sbb
push
pop
ror
cs
sub
pop
pusha
frstor
das
or
jp
in
pop
or
cmc
aad
test
stos
out
lock
xlat
sbb
loopne
push
cmp
or
xor
jge
lahf
fs
lods
cld
lods
xchg
jecxz
add
fdiv
sbb
aas
xor
fists
push
rcr
sub
mov
mov
lds
mov
xchg
and
lds
and
push
adc
les
or
mov
adc
dec
adc
or
adcl
cmpsl
cli
sub
pop
enter
stos
adc
or
insb
ficompl
loope
push
out
add
mov
mov
mov
push
lret
or
fsubl
pop
dec
inc
xlat
addb
das
rolb
push
add
jmp
lock
loope
ret
out
adc
jecxz
or
stc
ds
loop
adc
movsb
cmp
in
cmc
aaa
adc
mov
inc
shl
mov
fwait
add
push
cmpsl
or
daa
adc
push
cwtl
test
aas
cmp
test
es
adc
in
sub
test
vmlaunch
dec
xor
fidivrs
lods
adc
jle
sub
daa
movsb
xchg
dec
adc
lret
or
sahf
xor
mov
ds
dec
clc
in
sub
ds
sub
sti
xchg
adc
cmpsb
adc
or
or
mov
push
out
xchg
and
sahf
mov
inc
out
sub
movsb
adc
or
adc
or
dec
or
and
loopne
jno
or
in
sub
push
fnstsw
add
sub
ror
and
push
mov
mov
lea
or
sub
dec
leave
lock
orb
mov
mov
js
data16
loopne
adc
add
lcall
mov
cld
cmp
rcll
sbb
and
and
mov
sub
jecxz
dec
testl
xorb
add
mov
ret
out
push
cli
out
jae
cmp
in
add
test
xchg
inc
out
jo
aas
push
addb
push
rcrl
pop
xor
in
pop
sbb
sahf
sbb
and
addl
adc
je
sbb
loop
or
xchg
lcall
or
add
in
xor
stos
xchg
orps
add
in
lret
jns
pusha
hlt
add
cli
mov
filds
stc
jne
pop
push
in
clc
jo
mov
pop
mov
int
enter
add
sub
fadds
shll
popf
inc
add
sub
cmp
mov
mov
and
push
add
es
fsubrs
push
mov
sub
lock
xor
fstpt
xor
add
stos
mov
aaa
add
dec
jge
outsl
push
add
sub
add
add
pop
dec
mov
shr
leave
or
roll
stos
std
pop
loopne
jl
int3
jl
push
lods
or
add
notb
fcomps
xor
add
addr16
pop
push
arpl
add
mov
scas
add
dec
sub
adc
insl
popf
jno
roll
clc
fnstsw
fsubs
xchg
inc
jno
add
jmp
imulb
xor
mov
inc
scas
addr16
in
stos
inc
mov
and
pop
xor
dec
push
add
outsl
xchg
xchg
test
aam
dec
add
lock
shll
fidivl
add
xlat
es
mov
pushf
mov
or
and
dec
lock
xor
push
mov
or
mov
dec
sbbl
test
inc
ds
aam
or
push
inc
ja
push
jo
mov
mov
inc
sub
std
inc
add
push
emms
sbb
mov
add
sub
addl
jno
es
xchg
and
xchg
loop
lods
cmp
xor
imul
into
fstl
push
test
movl
add
jp
mov
mov
fisubs
shrb
add
lret
push
add
add
jno
popf
sbb
gs
add
mov
add
push
rclb
call
sub
iret
or
jns
mov
pushf
or
adc
xchg
jp
add
popa
sub
call
sahf
push
xor
add
cmpb
push
je
push
or
cwtl
orl
fstpl
push
popf
lret
cld
xchg
and
xchg
ja
sub
cld
cwtl
sarb
add
lods
outsl
adc
xchg
sub
cmp
rolb
fcmove
adcl
cli
xor
and
rcll
add
push
ljmp
dec
xor
add
arpl
lret
imul
mov
jmp
xlat
shrl
push
aas
or
add
cmp
xor
xchg
xor
mov
and
inc
xchg
in
pop
xor
insb
sbb
mov
xor
mov
xchg
and
dec
jl
push
cmp
imul
pop
neg
sub
push
xor
mov
sub
push
mov
subl
push
add
shll
add
dec
test
mov
and
aas
xor
insb
jns
xorb
add
dec
add
add
ljmp
fs
add
cltd
std
fadds
and
shl
jb
jae
pop
ds
out
fildl
and
jnp
add
cmovnp
add
cmc
pop
aam
cmp
iret
movsb
sbb
mov
stos
sbb
xchg
add
xchg
out
scas
inc
and
invlpg
xchg
inc
sbbl
mov
sub
std
js
jnp,pt
mov
shlb
das
cmp
fistps
pop
dec
push
repnz
adc
pop
cld
dec
test
pusha
rorb
push
out
push
adc
pop
pushf
leave
or
pop
sub
mov
xchg
movsb
add
lods
push
adc
clc
and
mov
inc
outsb
test
mov
push
adc
push
sahf
or
add
pop
lods
sub
mov
sub
xor
and
aad
xchg
and
mov
jo
rclb
sbb
mov
jo
aam
test
cld
fcmovnbe
adc
call
es
pop
mov
jle
add
popf
out
sbb
mov
mov
dec
xor
pop
nop
mov
mov
xchg
jecxz
push
fs
sub
add
push
hlt
jle
add
pop
dec
jmp
or
into
xchg
and
xchg
dec
orl
push
lret
ret
push
test
xchg
scas
xor
fcomps
mov
scas
xor
daa
or
sbb
hlt
cwtl
pop
movsl
popf
adc
sub
sub
mov
sub
jle
push
mov
ja
cwtl
aas
mov
sub
add
pop
cmp
mov
imul
xlat
add
sub
rcl
sbb
cmpsl
add
imulb
sub
test
mov
mov
pop
or
xor
pop
lahf
pop
jnp
add
adc
test
add
bound
xor
add
int
adc
cltd
fadds
mov
inc
xor
arpl
int
sbb
cld
xchg
lock
xlat
sbb
ds
jb
sbb
inc
push
push
adc
test
sub
and
outsl
dec
mov
shrb
and
stc
loopne
das
inc
jl
mov
add
popa
and
inc
in
jmp
fs
push
scas
sbb
push
jg
movsb
dec
scas
sub
cmpsl
test
outsl
pop
xor
fildl
mov
shr
arpl
xor
jae
fs
mov
sbb
int3
mov
pushf
xor
mov
mov
xchg
cltd
sbbb
sub
sbbl
fnstsw
adc
imul
fmul
mov
lret
adc
adcb
pop
filds
leave
pushf
rorb
xor
push
jns
ret
sbbl
jns
mov
int3
dec
inc
pop
adc
into
movl
hlt
nop
add
pop
fists
cmp
lds
test
test
roll
repnz
pop
cld
jmp
adc
add
fistpll
push
shrb
aad
jo
jle
inc
xchg
add
in
lret
and
roll
shrb
xchg
js
popa
add
or
pushf
add
enter
lds
aaa
and
xchg
nop
xlat
inc
cmc
xchg
loopne
dec
adc
lods
sarb
add
mov
es
mov
add
outsb
fdivrs
cmpl
lods
insl
movsb
cmp
xchg
pop
push
adc
xchg
xchg
inc
in
or
mov
movsl
enter
mov
cmp
cmp
scas
or
or
xor
scas
cltd
add
sbbl
adc
out
out
xor
mov
in
adc
jmp
sbb
sysenter
adc
nop
inc
sbb
push
mov
sub
lods
add
je
jae
mov
add
mov
adc
cli
fwait
or
or
mov
aaa
add
mov
xchg
pop
adc
inc
xchg
lea
push
pop
dec
sbb
xchg
pusha
jp
sahf
sbb
inc
lods
add
cmp
fcompl
and
test
lret
imul
sahf
es
inc
rorb
mov
push
dec
add
jo
mov
inc
fsubrl
sub
andl
sbb
add
push
xchg
cltd
flds
fistpll
loopne
clc
sub
cmp
ljmp
aas
loope
aam
in
orb
xor
ftst
xor
sub
mov
pushf
test
in
sub
dec
push
push
gs
lock
dec
insb
inc
mov
mov
insb
jo
int
out
mov
icebp
mov
mov
dec
mov
cmc
insb
aam
inc
insl
in
mov
scas
push
pop
or
mov
mov
push
push
sub
push
cmp
xchg
fsubs
test
rcll
lret
mov
adc
xchg
sbb
lret
cmp
add
adc
push
icebp
jge
inc
jnp
pop
ds
pop
test
add
insl
pop
fildll
andb
lfence
dec
xchg
and
pop
xchg
sbb
push
pusha
in
jns
adc
mov
mov
xor
sbb
aas
cld
out
jge
rcrl
add
aas
mov
or
outsb
inc
mov
add
xchg
cmpsl
addl
repz
pop
xorl
add
sub
test
int3
pusha
add
lods
inc
sti
add
pop
add
int3
add
add
cmp
xor
js
pop
andb
jb
sahf
lret
add
int3
pop
add
mov
rolb
push
bound
add
sub
in
mov
mov
xchg
mov
dec
enter
adc
insl
push
movsb
push
inc
pop
inc
lahf
jns
pop
xchg
cmp
or
out
push
sbb
jne
clc
cmp
cmpsb
testb
or
jne
or
into
fdivr
xchg
add
or
sbb
push
jne
xor
push
lock
xchg
imul
inc
in
or
pop
inc
fucomi
or
daa
sub
les
add
mov
xor
inc
dec
dec
cmp
pop
cmpb
outsl
xchg
mov
stc
adc
popf
in
xchg
pusha
and
jl
movsl
xchg
add
mov
push
fs
lret
out
xchg
aad
inc
cmp
add
mov
cmp
mov
add
add
ficomps
push
mov
dec
mov
clc
mov
sub
xor
or
ja
movsb
cwtl
aam
lds
jl
xor
push
mov
or
outsb
scas
inc
das
popf
adc
mov
fdiv
and
out
int3
rcl
and
adc
sbb
mov
cmpsb
mov
push
and
lcall
sub
adcl
add
mov
aas
mulps
inc
lret
xor
sbb
xor
pop
mov
les
inc
xchg
shl
rcr
xlat
in
call
insb
mov
ret
shr
sbb
xchg
aad
or
inc
mov
je
push
jp
add
inc
ljmp
mov
cld
fbstp
cmp
mov
add
cmp
lds
mov
dec
mov
fimuls
sub
fildll
xchg
pusha
add
or
add
sub
xlat
andl
pop
pusha
add
cltd
inc
lock
ja
dec
xor
in
js
dec
inc
xor
sbb
fisttps
jns
sub
inc
inc
popa
adc
fadds
loopne
shlb
mov
test
adc
or
pushf
mov
test
dec
iret
lret
add
and
pop
je
cmp
insl
and
or
adc
dec
movsb
pop
rcll
mov
push
test
sub
lods
pushf
push
cmp
cmp
add
and
in
inc
fsubl
mov
cltd
lea
xchg
imul
mov
mov
sbb
xchg
cmp
mov
stos
lcall
or
xor
dec
add
mov
sbb
mov
sbb
push
loope
and
push
int3
and
push
xchg
mov
sahf
mov
jg
add
aaa
movb
imul
icebp
add
imul
cmovno
inc
and
or
pop
mov
or
xchg
or
aam
insb
or
xor
insl
inc
mov
pop
in
xchg
cmp
faddl
add
adc
or
pop
xchg
jl
lods
rorl
add
mov
aaa
enter
pop
mov
and
lret
dec
add
repnz
in
cmp
cmpb
inc
or
and
mov
daa
fs
or
lret
add
add
mov
mov
inc
inc
movsb
adcb
inc
loope
sub
lcall
xor
out
daa
xor
and
xchg
pusha
dec
pop
out
loop
int
in
and
sarl
sbb
leave
inc
popa
pop
xor
cmp
push
ret
out
shll
fdivrl
test
xchg
add
roll
adc
mov
cmp
fsubrs
jmp
call
and
jns
dec
sub
add
adc
jmp
and
and
inc
rol
add
mov
push
add
stos
imul
stc
hlt
add
js
pavgw
mov
mov
inc
push
jle
insb
add
jae
in
xchg
pop
push
roll
add
pop
jmp
adc
in
xor
mov
insb
sbb
or
sar
dec
das
shr
ss
dec
lock
cmpsl
adc
mov
jnp
add
div
inc
icebp
or
jl
dec
or
pop
stc
cwtl
les
cmpsb
out
popa
in
add
outsl
mov
sbb
adc
sbb
popa
das
lahf
mov
pop
xor
dec
mov
je
pop
jmp
mov
push
shrb
pop
sub
dec
xchg
xchg
fcompl
hlt
sub
call
dec
rcrb
clc
int3
add
adcl
js
xchg
je
mov
js
mov
xor
cmp
je
mov
lcall
pushf
add
and
sbb
pop
adc
mov
movsb
int3
adc
lods
lock
ficomps
jge
add
push
repz
sahf
ret
mov
icebp
adc
mov
xchg
out
lock
mov
and
fs
jge
mov
sbb
and
mov
int3
je
add
fsubr
adcl
sub
lods
mov
cmc
jecxz
pop
inc
xchg
hlt
test
or
adc
or
mov
inc
xor
xlat
add
inc
mov
jo
movl
hlt
dec
mov
nop
orb
loopne
adc
lods
xchg
and
scas
jbe
pop
jg
mov
mov
les
sbb
sbb
rcrl
cli
cld
loop
mov
cmp
decb
add
fsub
sbb
pusha
pop
xor
inc
mov
sub
cmpsl
push
mov
clc
inc
add
clc
sbbl
lock
dec
rol
rolb
aas
pop
movsl
iret
out
cmp
ret
xor
inc
and
fistpll
or
fimuls
popa
aaa
add
aam
loope
aas
das
aaa
pusha
jo
dec
push
lods
mov
push
mov
lods
jne
or
xor
les
dec
cmp
mov
mov
out
cmp
cmp
pop
lods
push
lods
xchg
push
hlt
dec
jae
dec
adc
push
loope
xchg
xchg
inc
and
sbb
dec
adc
xlat
fidivrl
mov
das
pushf
push
dec
mov
test
mov
or
nop
lock
dec
loopne
cmp
jae
inc
and
add
or
dec
mov
dec
jne
lods
push
addb
loopne
mov
pop
or
xor
cltd
adc
or
mov
loope
mov
lret
mov
cmp
sbb
les
dec
push
xchg
pop
mov
int
arpl
mov
push
pushf
daa
dec
push
shr
adc
sub
mov
cld
add
aas
lcall
pop
xchg
jae
fstl
jo
add
sub
imul
or
frstpm(287
in
mov
inc
mov
shlb
mov
cltd
mov
cmpsl
adc
push
out
dec
jp
fsubrs
lock
mov
push
xchg
mov
pop
mov
cld
jns
cltd
je
sub
paddq
mov
loopne
and
aad
icebp
push
push
push
and
and
popf
int
or
gs
or
jnp
test
out
aas
push
aam
mov
js
or
and
iret
push
lods
push
adc
lret
outsl
and
add
adc
fsubrl
mov
pushf
or
ja
dec
pop
insb
pop
add
pushf
mov
xor
orl
push
popf
nop
pop
orb
add
stos
sub
mov
out
adc
sahf
xor
insb
add
dec
daa
xor
cwtl
jp
adc
andl
push
imul
repz
inc
and
lahf
cltd
aam
and
mov
and
push
jno
scas
dec
scas
js
sbb
xchg
add
push
push
inc
loopne
hlt
cli
orb
sbb
dec
pop
cmp
inc
popa
pop
add
ja
xor
shlb
xchg
das
stos
or
inc
hlt
xchg
xchg
enter
test
sbb
int3
mov
insb
add
ret
scas
jnp
or
movsb
in
rcrl
push
and
nop
jge,pt
dec
and
out
pop
pop
shlb
mov
pop
sbb
out
sbb
into
xor
xchg
jnp
test
jl
lock
cld
ret
and
add
xor
int3
movsb
push
dec
je
test
lret
pop
sub
pop
or
test
insb
les
ret
fnstsw
mov
cmp
add
in
mov
mov
daa
xor
adc
mov
in
cwtl
dec
sub
or
andb
adc
int3
call
fistpll
cwtl
or
cltd
cmp
cltd
lahf
push
fcoml
mov
cmp
lods
push
jnp
inc
jne
sbbw
mov
add
in
andl
pop
mov
out
and
cmp
int3
sub
mov
push
or
push
nop
lock
push
xor
xor
in
mov
add
negb
mov
mov
and
jbe
test
sbb
push
dec
pusha
xor
xchg
xor
or
test
inc
push
loop
addr16
test
scas
clc
push
hlt
call
in
xchg
jecxz
push
mov
mov
cwtl
hlt
pop
test
int3
xor
xchg
cmp
nop
inc
push
std
jmp
mov
or
addr16
cmp
add
mov
jno
jl
in
inc
pop
rclb
lret
rclb
xchg
add
adc
hlt
mov
and
or
push
outsb
cmp
scas
inc
movsb
cmp
adcl
clc
movsl
inc
cmc
loope
loopne
xchg
cmpsl
mov
push
or
push
shlb
and
ret
push
pop
xchg
add
push
loope
or
push
cvttps2pi
lock
adc
mov
je
adc
test
cmp
lock
push
add
and
lahf
push
rcrl
jmp
lret
jno
or
sub
test
cwtl
sbb
dec
ror
outsb
je
orb
sar
rol
lock
xor
cwtl
leave
testl
orl
andb
out
push
sbb
xor
hlt
or
out
in
cmp
aam
or
clc
sub
pop
cmp
push
imul
or
je
imul
push
add
add
out
idivb
add
adc
and
clc
in
enter
sbb
mov
sub
idivl
dec
mov
and
test
cwtl
clc
pusha
mov
int
cld
rcrl
mov
add
push
or
add
test
jb
mov
xor
js
xchg
int
outsl
aas
push
dec
clc
cwtl
das
pushf
out
add
scas
addr16
push
les
into
mov
in
aam
xchg
push
cmpsl
outsb
je
mov
and
pop
int3
xor
cmp
rolb
lock
xchg
push
flds
xchg
push
dec
or
jo
cmp
je
jae
frstor
add
ss
push
mov
les
push
test
pop
loopne
adc
shrl
cli
mov
lods
dec
mov
in
dec
jo
inc
scas
insl
add
into
mov
in
shlb
xor
pop
mov
sbb
push
fdivl
es
roll
mov
jne
xchg
jl
data16
or
fistl
sub
dec
mov
lods
adc
mov
add
push
outsl
testb
and
push
out
or
mov
fsubrl
add
lcall
cmpsb
ret
mov
rcl
push
push
add
push
jbe
jp
frstpm(287
add
sub
push
jge
mov
cmpl
ja
or
sub
lods
arpl
cmp
dec
cmp
pushf
add
repnz
add
add
push
lahf
sbb
or
mov
das
aas
int
test
xchg
lcall
or
push
inc
mov
sub
add
cmpsb
mov
or
call
jno
les
stos
inc
loopne
push
dec
jns
cmp
rol
or
dec
mov
or
cmp
adc
jl
arpl
add
sbbl
push
ss
in
cltd
jb
loopne
jle
sbb
js
js
movb
cmp
ret
ljmp
shrl
sbb
add
in
filds
mov
insb
add
and
idiv
push
pop
test
icebp
and
je
pop
pop
rcrb
out
aas
add
cld
enter
xorl
faddl
call
mov
push
mov
inc
lods
and
pop
hlt
test
es
add
bound
xor
adc
adc
push
mov
dec
popf
or
test
lahf
adc
inc
mov
es
cmpsl
xchg
pop
xchg
cmp
rclb
xchg
mull
add
fdivl
das
lods
xchg
fs
adc
call
and
sbb
gs
add
addr16
rolb
push
mov
cmp
push
sub
repnz
adc
adc
adc
fsubl
scas
cs
lret
jo
lods
or
mov
sahf
adc
adc
adc
add
mov
lahf
dec
js
mov
pusha
rorl
mov
and
aas
mov
fdivl
mov
inc
scas
xor
add
mov
xchg
pop
add
sbb
dec
pop
sub
pusha
push
sub
sub
popa
add
hlt
mov
mov
clc
cmp
pushf
lods
aam
or
aaa
in
in
in
adc
call
cld
adc
out
mov
pop
fmul
sbb
xor
dec
outsb
mov
dec
cltd
in
add
fidivl
lock
add
add
fsubr
jns
fcmovu
xchg
je
test
stos
adc
jno
mov
sbb
gs
popa
sub
ret
or
xchg
or
sub
mov
fs
fwait
repnz
in
dec
and
pusha
sbb
daa
cmp
xchg
cmp
push
add
jl
icebp
js
in
and
lock
lock
cld
in
pop
lret
shrl
mov
sub
jl
mov
jns
or
hlt
test
in
cltd
in
mov
sbb
adc
mov
aam
mov
aaa
repz
cmp
lret
fwait
sbbb
sub
push
lock
daa
cmp
adc
rolb
xor
orl
mov
das
div
ds
shll
dec
and
add
push
addb
xchg
shlb
cmpb
ds
aaa
sub
pusha
push
pop
mov
test
pop
lret
and
lods
xor
sub
sbb
xor
xchg
jle
data16
xor
and
pop
sub
in
push
or
mov
sbbl
xor
add
push
lret
lods
add
jns
cmp
xchg
cmpsb
in
les
mov
sub
xor
mov
pop
and
jno
mov
lret
jnp
mov
adc
inc
rolb
and
insb
fistl
repz
dec
cmpsb
jl
iret
hlt
xchg
dec
or
lds
sub
sub
inc
jo
lock
jmp
inc
xor
pop
clc
les
xchg
sub
or
jns
adc
cld
shll
sbb
das
sbb
dec
mov
rolb
dec
xchg
mov
dec
push
lret
mov
pusha
clc
fisttpll
mov
je
push
add
mov
sub
sahf
mov
add
pop
add
ljmp
mov
popa
fdivs
hlt
clc
sub
lods
mov
xchg
shrb
ja
shlb
lret
fsubl
mov
mov
dec
add
push
pop
int
dec
int3
roll
mov
mov
sarl
lds
add
sahf
add
lret
push
jb
pushf
jno
sbb
test
popa
add
sbb
cs
and
dec
dec
and
sahf
mov
ja
push
dec
mov
push
cld
stc
mov
push
mov
xchg
mov
jnp
in
mov
dec
pop
mov
pop
xchg
mov
add
imul
dec
fnstcw
xchg
cwtl
scas
aas
sub
shlb
xor
add
jbe
cmp
sbb
adcl
lods
inc
cmp
sub
arpl
mov
clc
lcall
push
out
mov
fninit
pushf
dec
cmp
inc
in
mov
or
cmpl
sub
mov
add
scas
addr16
mov
test
cmp
sbb
dec
and
stc
jo
push
jne
pusha
cld
xchg
mov
mov
cmp
pop
cld
push
cwtl
dec
mull
in
or
aas
sbb
dec
and
fmull
int3
cmpsl
insb
push
sbb
mov
ret
repz
xchg
dec
cld
cmpl
mov
add
stos
and
fs
mov
mov
xor
jl
popf
xchg
xor
mov
mov
adc
sub
imul
test
movsb
aad
into
xor
sar
add
fsub
dec
orl
loop
cmp
pop
cmp
xchg
jle
fisubl
in
pop
popa
and
movsl
push
mov
out
push
xlat
fdivrl
jne
or
ljmp
imul
lea
mov
filds
mov
mov
cld
cs
pop
jge
add
add
dec
sbb
aas
imulb
adc
repnz
rclb
push
adc
cmp
sahf
jne
jge
xor
cmp
jl
adc
das
xchg
xchg
add
xlat
sbb
test
notb
fidivs
or
adc
inc
dec
arpl
shll
sbb
out
ret
loopne
faddl
add
cmp
or
dec
fists
adc
push
adc
push
add
xor
std
add
sbbl
jb
pop
xor
call
in
adc
popa
mov
jge
sub
mov
add
fisubl
jo
pop
out
pusha
push
hlt
dec
arpl
mov
add
mov
pop
ja
add
mov
fcomps
lret
mov
rcr
imul
add
mov
dec
or
push
test
test
in
repnz
sbb
mov
mov
add
gs
lret
fsubs
sbb
add
cmc
call
add
fisubs
push
add
jbe
mov
lcall
pop
rolb
and
pop
mov
jo
cltd
sbb
lock
mov
push
lret
mov
cmp
sub
outsb
jno
fstpt
add
out
std
mov
xor
cmp
popa
adc
pop
mov
sbbb
fists
lret
popa
loope
bound
dec
jp
cld
lds
jns
xchg
int
pop
cmpsl
rolb
add
or
dec
jge
push
mov
xor
aaa
cmp
test
add
arpl
mov
daa
pop
stos
add
pusha
out
sbbl
or
mov
mov
popa
ret
dec
shlb
addl
add
pop
pop
stc
add
inc
mov
hlt
fisttps
mov
sbb
xchg
push
xchg
and
add
mov
push
jno
or
pop
call
sbb
sub
ds
dec
adc
mov
pop
sbb
subb
movsb
pop
sub
addr16
mov
jl
int
loopne
cmp
ljmp
mov
or
adc
call
adc
inc
fdivs
mov
cs
and
and
sbb
push
push
push
js
imul
in
pop
mov
js
sbbb
add
jno
xchg
out
and
add
test
leave
testb
mov
cmp
pushf
xchg
mov
add
jnp
scas
inc
pop
aam
mov
cmp
sub
mov
cmpsb
add
mov
hlt
ret
stos
xorb
fistl
push
xchg
daa
and
gs
int3
pop
in
push
push
jl
jmp
jo
imul
adc
dec
pop
xor
inc
sbb
adc
mov
lahf
xchg
outsb
add
push
jle
ret
enter
push
lds
push
cld
xorl
add
mov
mov
bswap
mov
and
inc
pop
push
mov
fsubrs
sub
xor
lock
jge
das
mov
pop
test
adc
add
xchg
or
inc
adcb
leave
cmc
xchg
enter
cld
mov
movsl
ror
rcrb
push
xor
dec
test
repz
mov
outsl
xor
add
subl
push
cmovl
ror
decl
je
inc
in
adc
add
scas
imul
adc
popa
push
hlt
loop
cld
cmpsb
ret
and
or
mov
andb
pop
jmp
sbbl
add
xlat
hlt
mov
adc
lds
or
xor
inc
roll
addl
sbb
xchg
std
subb
jns
push
dec
test
inc
movsb
and
jno
mov
loopne
inc
into
jo
mov
test
dec
add
imul
mov
repnz
dec
mov
popf
and
mov
or
sbb
jbe
inc
out
repnz
pop
push
insb
jg
adc
hlt
push
int3
add
push
repnz
add
mov
adc
xorb
mov
shrd
dec
adc
dec
xchg
pusha
jmp
xchg
int3
or
lock
xor
dec
or
add
aam
xchg
jmp
jo
or
sub
pop
and
and
dec
repz
jns
pushf
cmp
loop
inc
mov
pusha
mov
inc
xor
or
or
adc
filds
cld
and
repz
lds
jns
pusha
push
iret
js
mov
aam
pop
or
ja
adc
xor
lock
add
mov
pop
jle
dec
inc
adc
mov
in
test
ret
jne
or
xchg
xchg
outsl
cmpsl
xchg
sbb
iret
push
mov
lods
and
mov
add
xchg
mov
sbb
das
ds
push
je
sub
jmp
inc
push
popa
pop
inc
xlat
cltd
dec
es
mov
cwtl
enter
ud1
dec
sahf
rolb
movsb
xor
cmpsl
add
sbb
jle
adc
mov
adc
aaa
add
push
pop
push
popa
repnz
arpl
sub
dec
lods
fwait
or
mov
jbe
dec
pop
sti
sub
xchg
mov
xchg
fbstp
cmpb
in
outsb
out
cli
outsl
cmp
dec
pop
or
ret
iret
aas
cmpsl
imul
adc
fs
jae
push
ds
mov
jb
jmp
push
xor
sub
nop
and
inc
xor
dec
roll
adc
in
push
dec
pop
pop
mov
xor
shl
sub
dec
inc
subl
and
aad
inc
jl
outsl
pusha
test
jp
pop
adc
push
cwtl
insb
fwait
push
add
inc
das
fldcw
lahf
mov
imul
push
es
cmpsl
adc
add
dec
push
out
dec
mul
mov
adcl
fnstcw
or
sbb
rolb
xlat
rorl
dec
lret
inc
mov
dec
lock
or
es
rorb
cli
icebp
jne
fwait
movsb
sbb
movsb
and
lahf
mov
push
adc
xchg
insb
jns
clc
dec
fcom
repnz
push
dec
sbb
inc
add
jmp
std
enter
and
popa
fidivs
jo
xor
xchg
stos
dec
outsb
and
xorl
add
out
jg
cltd
add
cld
sub
or
add
jo
in
push
pop
push
cmpsb
sbbl
jo
and
inc
mov
add
and
rorl
xchg
mov
sbbb
inc
adc
jo
flds
mov
test
push
xchg
cmp
add
mov
rolb
xchg
cwtl
xchg
sbb
push
and
lds
lods
sbb
xor
int3
adcl
cli
arpl
mov
dec
push
sub
or
or
mov
and
test
outsb
lds
add
in
jns
mov
mov
ret
imul
pop
xor
aad
jns
lods
js
sbb
bound
testl
int3
adc
mov
jo
add
test
sbb
fistps
adc
in
jo
xchg
hlt
add
cmpb
adc
xchg
arpl
fwait
clc
cmpsb
xlat
sub
test
pusha
push
add
popa
and
adc
clc
jg
js
xchg
inc
jle
icebp
mov
xor
pop
ret
or
cmc
push
mov
push
movsl
rcll
inc
mov
out
add
sbb
ret
or
and
fidivrs
jl
sub
xor
insb
subb
xchg
jg
pop
cld
push
jg
fildl
call
adc
add
mov
cmc
repnz
and
jmp
add
and
mov
shlb
sbb
rsqrtps
sub
mov
jp
outsl
popa
loop
add
jns
and
mov
inc
sbb
add
cmpb
es
push
mov
add
iret
or
add
hlt
cmpsb
xchg
jbe
push
dec
cmp
jb
sub
dec
mov
pop
cli
test
lcall
sbb
jo
cmpl
daa
or
pop
xchg
xor
mov
xchg
lcall
clc
add
mov
dec
in
sbb
add
add
ret
and
cmpsl
sbb
cmp
dec
mov
pusha
fnsave
push
inc
rclb
out
push
cmp
xor
lds
xchg
fs
xchg
pop
push
pop
out
inc
aam
enter
mov
inc
sub
lods
cwtl
xchg
jl
push
add
and
and
add
xor
in
test
push
orl
sbb
movl
jle
loop
call
pop
loope
dec
bound
cltd
and
fisubl
inc
faddl
mov
mov
xchg
lock
inc
add
jge
pushf
sub
mov
daa
movsb
or
rcr
insb
add
inc
in
gs
xor
aas
push
or
jne
in
push
and
dec
pushf
nop
and
cmpsl
mov
push
mov
dec
mov
add
mov
movsl
xor
cmp
outsb
mov
jmp
leave
sub
fsubrp
enter
cmp
outsb
je
xchg
mov
mov
and
pop
test
xlat
xchg
cmpsl
dec
setb
jnp
push
adc
nop
gs
add
es
inc
or
out
xchg
aam
mov
mov
cmp
sub
imul
mov
fsts
push
add
popf
push
add
adcb
shll
lods
xchg
out
sar
dec
jg
adc
jo
shrl
sbb
imul
js
mov
aas
xchg
pop
cmp
push
insl
add
int3
nop
loopne
repz
fstpl
cs
pop
mov
ds
xor
addb
pop
pop
testb
pop
in
repz
orl
push
pop
sbb
jg
dec
pushf
pusha
dec
in
add
cmpsb
push
mov
mov
clc
adcb
in
dec
movsl
clc
pop
inc
call
sarb
roll
popf
push
xor
jno
cmp
test
pop
fmull
push
in
lock
and
lret
mov
loopne
and
ret
popf
or
cwtl
add
pushf
adc
xor
cmpsl
stc
nop
cld
and
pop
push
sub
cmp
cwtl
push
or
mov
mov
sbb
sbb
pushf
adc
call
stc
imul
out
inc
push
dec
lds
mov
push
icebp
aad
xchg
addr16
lret
mov
push
loop
mov
xor
popf
popa
ret
into
adc
jo
fs
cmpsl
and
or
mov
dec
dec
or
xchg
outsb
sbb
jne
push
jmp
add
bound
andb
push
and
scas
push
and
das
cmp
jg
dec
clc
and
xor
rorb
inc
mov
pop
adc
add
jl
repnz
pop
int3
punpckhdq
fcoml
xchg
xlat
ret
hlt
cmpsb
dec
lcall
shll
push
and
sahf
imul
dec
imul
lock
int
jae
ret
imul
mov
cmpsb
add
subb
xor
and
add
iret
movsb
cld
dec
cltd
test
test
cli
and
sub
sbb
add
je
out
cltd
mov
or
jg
add
ja
jecxz
push
sub
fs
mov
lods
xor
push
xadd
mov
add
pusha
lods
and
jo
cwtl
fmull
mov
lods
mov
mov
jne
enter
test
dec
adc
adc
aad
push
sbb
flds
inc
mov
add
sbb
sub
cwtl
push
sbb
out
add
lods
cmc
push
cmpb
pop
mov
mov
pusha
pushf
ljmp
xor
and
mov
pushf
js
sahf
cmp
mov
add
push
cld
es
clc
xchg
jno
sub
adc
das
ret
push
xchg
xor
adc
sub
movb
dec
xchg
and
xor
fldenv
js
xchg
cwtl
xchg
ret
iret
inc
pop
mov
mov
and
pushf
hlt
call
jo
sahf
into
call
ret
clc
pop
addl
hlt
fstps
xor
xlat
inc
push
add
outsl
test
fisttps
icebp
pop
sbb
shr
or
sub
rcrb
in
cltd
repz
pusha
lods
mov
mov
xchg
imul
test
out
mov
stos
pusha
mov
inc
or
bound
xchg
gs
push
jnp
test
sbb
mov
xor
nop
rclb
add
jns
lods
mov
adc
jo
enter
or
data16
clc
shll
and
add
adc
dec
jo
xor
subl
cwtl
les
add
cmpl
xchg
movl
icebp
shll
cmc
mov
sahf
add
pop
subb
js
pop
jnp
add
and
cli
dec
add
leave
movsl
out
fsubrl
jne
andl
jo
add
xor
nop
mov
push
sbb
rcrb
inc
movsl
loope
adc
movsb
or
popa
sub
shr
dec
lret
int3
in
incl
call
outsb
dec
and
int3
mov
adc
inc
insb
xor
scas
jle
or
xchg
imul
add
mov
mov
inc
outsb
in
hlt
movsl
sbb
mov
ror
rclb
cmp
sbb
pop
or
addb
aam
out
shlb
pop
and
cmpsl
pop
fildl
inc
fadds
jno
daa
inc
mov
fcoms
repz
pop
cmpsl
sbb
xor
repz
add
mov
or
fdivs
sub
or
adc
add
xchg
xor
pushf
movsb
shlb
pushf
mov
sti
xchg
adc
mov
add
mov
cltd
mov
stos
adc
aam
int3
cltd
notl
or
outsl
mov
rclb
lret
add
repz
mov
push
sbb
out
or
cmpsl
add
pop
sti
and
or
push
push
das
inc
rolb
dec
add
or
pop
xor
leave
sbb
fs
mov
xchg
xchg
sub
loope
xorl
es
mov
addb
push
pop
inc
aam
icebp
cmp
or
addr16
add
les
loope
sub
ja
adc
in
add
mov
cmp
pop
lret
push
xor
rolb
push
test
outsb
mov
lods
shll
int
push
dec
lock
adc
add
and
fwait
dec
movl
mov
dec
jg
outsl
hlt
js
push
and
sahf
mov
or
leave
and
lods
insb
rcrb
shrl
int3
inc
mov
imul
adc
jp
inc
cmp
add
xchg
aad
stos
outsb
rcrl
das
add
inc
dec
jecxz
hlt
adc
sbb
jb
sub
jecxz
cld
ficoms
push
in
dec
xchg
sti
bound
dec
mov
sbb
sub
xchg
fistps
push
add
movsb
test
rolb
je
and
dec
nop
pop
push
xchg
dec
mov
mov
or
movsl
xchg
adc
jo
je
sahf
hlt
rcrb
push
add
test
stos
lock
test
aas
sub
dec
or
insb
fsubrp
fs
xchg
pop
lcall
mov
pop
jno
int3
push
jecxz
hlt
push
mov
call
push
add
cmp
xorl
add
dec
jecxz
and
ja
in
fadd
and
jg
jp
fstpt
dec
in
add
nop
fstps
xchg
and
xor
xor
enter
test
outsl
push
jne
repz
cmp
pop
adc
mov
test
adc
and
pop
shlb
mov
dec
add
xchg
sub
sahf
add
call
and
push
fs
mov
or
sahf
movsb
ret
jle
inc
and
test
or
cmp
popf
out
cs
mov
push
sub
cmp
insb
adc
add
inc
insb
imul
inc
mov
test
mov
ja
or
push
test
insb
cwtl
inc
pop
add
roll
outsb
in
fs
sbb
xor
and
push
shll
pushw
repz
sub
fsubl
inc
push
pushf
add
sbb
mov
ret
cmp
aam
xor
fsubrp
dec
es
rolb
pushf
repnz
ret
push
cmp
pushf
pushf
cmp
cli
cmp
movsb
add
loopne
daa
xchg
dec
pop
arpl
dec
flds
push
add
sub
stos
test
cmc
push
pop
dec
jle
add
outsl
pop
sbb
enter
push
pop
icebp
push
pop
sub
inc
jnp
push
push
in
scas
popf
testb
push
les
sub
push
and
push
cmpsl
sub
mov
cmpsb
stos
cmp
sbb
mov
pop
lock
lock
divb
loop
cwtl
sbbb
lret
arpl
ficompl
daa
mov
cltd
sbb
subb
and
cwtl
mov
sub
push
xor
add
adc
in
cld
loopne
and
stc
jbe
ret
pop
adc
outsl
adc
sbb
jne
add
bound
test
loop
dec
sub
test
jo
cltd
movsl
hlt
push
sub
pop
fiaddl
enter
mov
int3
gs
fcmovb
lock
and
lea
lds
xor
push
xor
and
pushf
daa
lcall
test
shrl
mov
sbb
mov
mov
out
dec
cwtl
sub
adc
add
or
insl
sub
repz
jo
mov
mov
push
iret
leave
inc
sub
shl
nop
mov
lods
xor
adc
xchg
xchg
dec
cmp
add
rclb
lret
jle
adc
jp
mov
pop
adcb
pop
xchg
and
mov
and
test
cmc
pop
push
call
call
xchg
repnz
add
dec
cmpb
sub
and
int3
dec
div
or
fsubp
xchg
in
pop
jp
dec
mov
adc
or
dec
mov
xor
adc
pop
mov
lcall
pop
inc
popa
ret
rcll
xchg
clc
in
out
clc
xchg
push
cmpsb
popf
sbb
pusha
and
mov
out
pop
not
clc
ja
scas
mov
lds
or
pop
pusha
lret
inc
jns
ret
inc
pusha
pop
ja
cli
mov
xchg
cmp
add
sub
pop
push
push
push
movsb
lods
inc
and
shl
dec
loopne
imul
movsl
jge
and
pop
les
call
adc
loop
ljmp
pop
gs
sarb
fs
cwtl
sub
xchg
out
shll
lock
popf
cli
data16
xchg
inc
loope
cmp
cmpsb
test
ret
mov
fsubrs
loop
sti
sub
enter
lcall
test
xchg
cmp
cmp
out
xor
lahf
sub
push
pop
inc
xor
and
mov
xchg
std
lcall
add
mov
std
outsb
nop
dec
test
lock
lds
mov
mov
divl
or
pop
repz
push
lret
cmp
or
xchg
or
inc
xor
add
lock
jo
add
jns
push
ret
dec
xchg
pop
xchg
and
jg
or
insb
dec
inc
mov
pop
cltd
mov
or
ss
sbb
adc
add
jo
cmp
add
or
aad
test
inc
and
imul
cld
xor
leave
push
cwtl
insb
or
sub
imul
enter
dec
int3
dec
push
sbb
in
mov
mov
inc
outsl
push
enter
mov
lcall
xchg
push
mov
jbe
push
shll
xchg
add
push
sar
push
cmpsl
nop
cmp
inc
test
lods
sbb
call
rcll
ljmp
lock
lock
mov
sbb
popf
push
pop
adc
test
test
nop
xor
xchg
mov
push
jg
jp
movsb
ja
mov
aas
xor
cmp
adc
jo
jle
mov
jnp
add
in
rclb
push
sub
ret
push
jns
mov
mov
les
ljmp
fisubrl
int
aam
adc
mov
sbb
xor
ror
aas
xor
lds
push
jo
sahf
or
fdivrs
cmp
in
test
or
rolb
jl
xor
cwtl
xchg
and
sub
mov
fstl
add
pusha
loop
push
test
adc
push
in
or
fs
sbb
xchg
cmpsl
adc
hlt
sub
call
push
cwtl
and
fsubp
stc
pop
enter
js
ja
js
sub
aad
sub
add
shr
push
sahf
mov
inc
jp
repnz
test
lret
mov
outsl
dec
jle
clc
push
das
push
pop
xchg
js
hlt
test
arpl
cld
push
mov
daa
mov
das
iret
fs
and
add
sahf
xor
ret
mov
pusha
bound
lds
sub
fcoml
sbb
lock
push
lea
jle
adcb
ficomps
push
adc
cmp
sub
sub
mov
adc
dec
mov
jp
adc
pop
xor
gs
loopne
xchg
sub
push
ds
or
testl
sbb
pusha
push
xchg
int3
add
inc
jns
ret
add
imul
dec
xchg
outsl
das
mov
test
pushf
jl
push
dec
fs
inc
les
mov
push
mov
imulb
pop
push
mov
js
add
data16
ja
pushf
push
rcrl
addr16
and
popa
mov
xor
gs
xor
test
pop
adc
push
dec
jo
cwtl
lret
repnz
jne
xchg
mull
dec
testb
fs
jo
repz
adc
adc
call
es
aad
daa
jmp
and
jle
dec
pop
es
push
xchg
pusha
cmp
mov
addr16
add
sbb
pop
pop
sbb
sahf
rolb
dec
repz
insl
sarb
gs
and
js
dec
movsl
call
inc
cmp
xor
imul
dec
sub
add
ror
adcb
xor
shll
fs
and
sbb
lods
shll
sub
push
cmp
jnp
xchg
xor
mov
xor
cs
rclb
dec
repz
je
inc
inc
adc
jl
add
jnp
fsub
or
mov
push
repz
xchg
jecxz
mov
mov
cmp
add
inc
popa
mov
je
imul
mov
adc
ret
push
add
push
mov
daa
dec
js
bound
push
pop
insb
sbb
adc
loope
lahf
xor
mov
popa
xchg
pusha
insb
call
pop
and
pop
lcall
inc
icebp
push
pop
adc
imul
and
cmp
add
fwait
mov
cld
sbb
mov
cltd
dec
jo
add
test
movsl
mov
pop
xor
inc
mov
lahf
sahf
xor
mov
and
loopne
sbb
xchg
add
xorl
mov
nop
popf
sub
cmp
xchg
fisubl
mov
mov
in
scas
loope
sbb
dec
hlt
ja
mov
xor
pop
mov
insl
lsl
xchg
bound
push
adc
aaa
sub
or
xchg
aaa
dec
iret
jl
pop
orb
test
sub
nop
in
das
insb
xchg
fs
add
add
pusha
add
mov
mov
xor
jl
pushf
bound
in
imul
ror
ret
adc
cmp
push
int3
jo
or
leave
js
push
je
ror
and
jne
fstpl
sbb
leave
cld
cmp
xchg
cld
mov
outsl
sahf
clc
je
xor
inc
les
test
push
xchg
mov
inc
lods
cmp
imul
add
fwait
cmp
jmp
iret
ret
mov
mov
jp
and
cmp
sub
loopne
shll
and
jbe
testb
sub
clc
inc
test
lods
push
cmp
outsl
add
and
lret
insb
cmp
xor
rolb
adc
dec
inc
neg
daa
adcb
pop
add
add
push
xchg
pop
cmp
add
dec
les
pop
int
mov
loopne
adc
outsl
in
mov
pop
mov
lock
sub
data16
or
and
shlb
mov
mov
outsl
js,pn
out
pop
jecxz
js
pop
adc
repnz
inc
retw
cmp
fnstsw
les
mov
lahf
mov
in
fcomip
outsb
mov
sub
or
ds
xor
fdivs
dec
sbb
repnz
jp
add
in
movsb
addl
mov
inc
ja
aaa
in
lock
dec
outsl
js
stos
adc
adc
push
dec
and
adc
sub
or
or
enter
lret
jne
jns
inc
adc
imul
mov
bound
aaa
and
push
or
fdiv
adc
ds
inc
aaa
push
cwtl
mov
ds
jle
cld
ja
fcmovnb
adc
imul
fdivl
jnp
add
lret
push
adc
mov
inc
aam
mov
jo
das
sub
jb
negl
mov
cmp
in
adc
cmp
or
imul
jo
popa
inc
mov
sbb
dec
call
push
mov
jae
movsl
sbb
addl
inc
sbb
and
je
mov
scas
xchg
cmp
xchg
pop
sub
je
xchg
lods
sub
add
mov
lods
sbb
jnp
cmp
pop
iret
sub
add
cltd
inc
add
sbb
add
mov
addr16
jmp
xor
cmp
jno
lcall
leave
ja
xorb
mov
add
mov
pushf
sbbl
adcl
loop
enter
add
sti
mov
test
sub
xlat
js
mov
in
add
xchg
push
pop
enter
cmpsb
icebp
pop
dec
xor
pop
mov
push
loopne
xchg
and
lea
add
jae
test
in
dec
push
pusha
ret
out
inc
test
and
add
sbb
icebp
jg,pn
ret
shlb
clc
insb
sbb
stc
pusha
das
mov
stc
mov
in
cli
adc
enter
xor
jo
mov
out
sub
push
sub
loope
rolb
and
sbb
hlt
int
stos
fadds
xorl
pop
inc
les
lret
mov
and
dec
inc
push
out
aas
mov
xchg
shll
fs
test
cwtl
inc
push
sbb
push
mov
inc
inc
add
mov
add
int3
xchg
push
mov
push
push
repnz
add
xor
je
movsb
mov
mov
and
hlt
xchg
add
stos
mov
inc
sub
enter
outsb
lret
adc
xchg
add
mov
jmp
or
movsl
int
imul
dec
in
pop
xchg
pop
adcb
cmp
test
sbb
add
outsb
sub
xor
out
push
fistpll
repz
sub
adc
std
movsb
inc
test
mov
xor
jbe
outsl
inc
nop
lods
add
mov
sub
movsl
push
xor
out
pop
inc
int
es
adc
incl
jns
mov
or
rorl
jmp
leave
out
mov
sub
lret
lcall
push
sbb
dec
jbe
sub
inc
adcl
jmp
shlb
mov
and
sub
adc
test
aas
push
xor
push
cltd
bound
jg
pop
inc
cmpsl
std
stc
popa
mov
sub
mov
leave
mov
cmp
imul
mov
addr16
ret
sbb
sarb
mov
sub
jp
adc
out
pop
xor
mov
bound
es
fwait
cltd
sbb
cmp
mov
lds
adc
add
xchg
insl
imul
and
push
xchg
imul
int
mov
cs
xor
xchg
inc
bsr
outsb
insl
outsl
movsb
dec
mov
and
repz
mov
sub
lret
hlt
js
outsb
xchg
add
ss
adc
xor
inc
dec
jo
cmp
lods
add
loop
jo
les
xor
mov
push
dec
and
mov
add
testl
leave
out
adc
xor
sets
shll
push
aas
xlat
cmp
imul
in
dec
addb
inc
imul
fdivrl
and
mov
dec
add
int
mull
pusha
lock
jp
pop
out
add
sbb
xchg
or
sahf
xor
ja
xor
mov
aaa
sub
and
mov
test
aad
dec
out
add
xchg
and
push
sub
dec
inc
sti
adc
inc
in
inc
sub
clc
and
mov
arpl
push
dec
fs
rcr
xchg
mov
inc
into
and
aam
pop
fisttpl
ficomps
cmp
dec
ss
xor
adc
orb
outsb
pop
hlt
fucom
enter
or
je
adc
hlt
cmp
enter
lds
ds
popf
or
filds
push
xor
sub
inc
mov
mov
mov
or
cmp
cmc
mull
sub
rcrb
out
cmp
in
cmc
mov
lcall
cwtl
sub
fcoml
and
enter
cmp
jp
and
or
mov
sub
ja
aas
out
xor
xchg
nop
int
xor
idivb
mov
mov
daa
jecxz
mov
das
lods
dec
lods
or
and
sbb
sbb
je
dec
inc
sub
int
jnp
in
rclb
sbb
insl
ret
xor
icebp
sbb
loope
dec
nop
mov
mov
aaa
push
aas
and
add
mov
xor
ret
add
mov
or
hlt
divl
cmp
push
mov
mov
and
aaa
cmp
sub
xor
xchg
shlb
aad
or
aaa
stos
mov
jp,pn
mov
ja
outsb
dec
mov
andl
mov
dec
gs
push
jp
sti
dec
cld
dec
lret
push
cmp
mov
push
push
insl
je
int3
call
movsl
js
jg
push
adc
repnz
es
inc
out
fsubrs
adc
cmp
mov
movsl
mov
or
aas
sbbl
and
mov
leave
call
addl
xlat
gs
or
sbb
lret
inc
mov
cmp
shlb
mov
pushf
fwait
aam
mov
jmp
mov
xchg
ljmp
in
jl
imulb
mov
cmp
sub
addb
jno
sub
sarl
es
push
or
xor
scas
daa
xchg
pop
mov
ljmp
pop
inc
movsl
adc
lcall
ret
push
rorb
xor
or
in
xor
xor
and
pop
xchg
dec
jno
push
ds
add
xor
gs
nop
ficoms
inc
xchg
dec
cmp
int
test
and
add
out
xchg
sub
adc
or
repnz
test
imul
pop
xor
daa
add
dec
pop
add
mov
mov
push
xchg
fnstenv
popa
int3
pop
stos
push
inc
cli
out
shr
scas
mov
js
outsl
pop
imul
xchg
dec
pop
pop
xlat
imul
sub
movsb
repnz
jge
or
sub
jae
push
cld
jae
pop
mov
sti
and
pop
mov
sbb
mov
pop
and
inc
xlat
push
test
nop
in
daa
mov
adc
movsb
cs
cmpps
jg
xchg
lds
mov
and
mov
jmp
or
or
push
pop
push
xchg
cmp
inc
dec
dec
mov
or
leave
inc
jge
add
rcrl
pop
daa
xchg
or
rcll
lret
or
loop
add
mov
in
repz
jb
inc
mov
or
push
cmpb
ret
notl
test
imul
add
cmpsb
ja
addl
hlt
cmpsl
lds
ret
cmp
lret
in
or
mov
adc
push
xor
and
and
sub
push
mov
inc
mov
jmp
adc
negb
shll
push
push
lcall
mov
push
insl
xor
dec
push
dec
imull
mov
arpl
or
and
out
inc
xor
adc
mov
movsl
sub
cmp
mov
cmp
imul
dec
push
mov
or
mov
fst
mov
mov
mov
lret
add
xor
fldcw
xchg
sti
fiaddl
dec
cmpsb
scas
mov
cmpsb
pop
mov
aam
mov
xor
and
jge
popl
pop
outsl
push
bound
bound
push
push
aaa
das
xchg
lahf
nop
leave
push
subl
fadds
ret
rcll
push
iret
mov
push
cmp
push
js
into
adc
iret
mov
scas
mov
jb
xor
cmpsl
mov
pop
out
xchg
sub
cs
add
das
cmp
cltd
lods
imul
mov
and
and
inc
shll
ss
adc
jne
mov
pop
daa
push
fsts
mov
nop
mov
lahf
jae
les
or
ljmp
mov
adc
dec
inc
in
sbb
xor
mov
mov
sub
outsb
jl
dec
rclb
push
cmp
xor
xor
js
cmp
dec
mov
sbb
lret
push
push
inc
fucomi
pop
sub
popa
fdivs
xchg
mov
add
xor
inc
mov
pop
xchg
inc
dec
insl
ja
dec
fwait
inc
test
rclb
mov
je
das
imul
lahf
push
push
lea
inc
dec
xchg
sbb
xchg
jno
push
sub
das
xchg
pop
rorl
cmp
aaa
push
xor
push
push
std
dec
mulb
and
imul
add
inc
mov
sub
mov
or
iret
aaa
notb
push
dec
enter
lmsw
jge
std
inc
push
rclb
movsl
lret
fs
mov
lret
adc
sub
push
icebp
jnp
or
in
dec
loope
ljmp
shr
es
sub
repnz
rcrb
or
xchg
fdivrs
clc
fcoms
lock
out
das
and
fists
jp
dec
mov
in
cld
sbb
andl
xlat
dec
inc
popf
inc
sbb
aad
cltd
xchg
cmpsl
cmp
int
das
pop
dec
push
test
fxtract
nop
outsb
fisttpll
inc
jbe
idiv
inc
dec
sub
mov
in
ficomps
lods
rclb
jno
cli
js
pmaxsw
sub
sbb
pop
sbb
rcrl
pop
xchg
cld
pop
inc
int3
insl
lods
out
test
mov
dec
fwait
or
adc
sbb
and
mov
cs
xor
in
lds
push
push
rclb
or
out
mov
cmp
arpl
mov
mov
adc
rorb
stos
stos
add
pushf
cmp
fidivs
mov
jecxz
pop
inc
push
cmc
push
repnz
pusha
inc
pushf
push
jmp
shr
rorb
fadds
xchg
clc
mov
lahf
data16
loop
dec
xchg
stos
jns
pusha
jmp
mov
arpl
ffree
sbb
jne
fidivl
shl
cmpsl
xor
xor
push
inc
cmp
mov
and
cmc
scas
and
mov
fucomip
xchg
push
iret
or
push
leave
mov
dec
insl
push
lahf
or
push
inc
pop
mov
push
fstl
sub
je
mov
lock
shl
shlb
jp
or
outsb
mov
cmp
xchg
shlb
mov
sub
push
mov
nop
inc
mov
hlt
inc
xor
outsb
fnstsw
fucomi
repnz
sarl
hlt
or
sbb
inc
iret
pcmpgtw
push
push
sbb
enter
lods
or
inc
cltd
leave
punpckhwd
fs
cmp
add
push
dec
adc
lahf
andl
in
or
ret
arpl
je
mov
dec
fs
push
dec
sbb
in
push
mov
sbb
xchg
and
fdivrs
adc
dec
into
xchg
or
jmp
rorb
cs
stos
cmp
sub
insb
mov
mull
mov
js
xorl
inc
sbb
mov
aad
sub
insb
xchg
std
or
mov
shlb
dec
sti
lret
adc
mov
xchg
dec
or
lcall
out
and
out
pop
add
push
xchg
sahf
das
sbb
push
mov
addb
sbb
je
sbb
dec
mov
jge
and
in
daa
cwtl
mov
mov
jge
xor
adc
mov
rcr
push
je
add
mov
divl
les
test
rorl
dec
xor
sub
sarb
int
insb
and
dec
test
pusha
movsb
push
pop
or
sbb
in
mov
sahf
adc
sub
sub
push
shlb
aad
jno
jl
mov
xlat
sti
push
pop
push
cltd
in
sahf
fstp
lret
imul
push
pop
mov
outsb
les
je
divl
pop
arpl
sbb
mov
scas
and
jp
popa
inc
into
sub
out
iret
lods
adc
xchg
xchg
mov
insl
dec
rclb
jnp
in
icebp
sbb
and
and
mov
aam
js
or
pushf
push
and
enter
or
mov
mov
cmp
mov
mov
sub
adc
adc
pop
adc
rorb
push
jnp
jae
insb
add
jp
dec
fdivl
xor
push
mov
mov
sub
add
sub
nop
push
dec
mov
js
int3
xchg
dec
mov
bnd
out
leave
ret
vpmadd52luq
and
push
in
pop
or
push
fldcw
adc
sub
add
xor
fldcw
adc
ret
push
les
ficoml
rcr
sub
cwtl
outsl
xchg
sbb
mov
out
xchg
inc
xchg
stos
xchg
jp
xor
inc
ror
xchg
scas
dec
insl
mov
xchg
sahf
jb
fimull
in
stos
pop
adc
or
jns
out
push
push
and
inc
sub
inc
jnp
sbb
sbb
xchg
mov
cmpsb
push
imul
jmp
ret
stc
sub
inc
dec
push
stos
pop
xchg
mov
mov
adc
cwtl
lahf
pushf
mov
pop
outsl
and
lcall
and
and
dec
bound
sub
sbb
scas
outsl
inc
mov
cmpl
jne
scas
aas
inc
add
mov
rorb
cmpsl
xchg
lahf
dec
stos
push
dec
add
xor
das
imul
push
mov
cmpl
or
aam
pop
nop
idivb
mov
add
cltd
shrb
je
out
adc
int3
push
sbbb
repnz
mov
rol
jnp
cmp
loope
shll
out
decb
add
xchg
inc
dec
ret
fisttpll
mov
repz
mov
std
cs
ret
ss
push
iret
mov
sbb
mov
test
pop
and
stos
imul
js
and
add
fld
cmp
xchg
pop
push
jb
push
cmp
cmp
adc
cmovg
int3
sbb
in
mov
or
testl
out
sbb
xchg
into
or
sub
xor
mov
lcall
iret
add
mov
adc
add
mov
xchg
inc
mov
push
dec
push
loopne
xchg
inc
clc
mov
pop
jl
adc
cmp
imul
push
aam
or
ja
aas
xchg
inc
xlat
imul
jl
fmulp
repnz
jle
add
xlat
and
stc
imul
pop
sub
and
pop
sbb
or
outsl
cmpl
jns
cli
cld
bound
or
int
sub
cmpsb
loopne
cmp
inc
mov
es
dec
pop
adc
xchg
sub
fnstenv
and
adc
xchg
mov
out
xor
xchg
mov
les
cmc
cmpb
dec
or
incl
testb
adc
mov
data16
dec
cmp
daa
pop
jl
arpl
mov
aaa
mov
or
mov
fwait
jecxz
pop
imul
loopne
shrb
jp
jne
andb
movsb
mov
jne
sub
jne
movsb
sub
outsl
xchg
loope
pop
imul
adc
int
dec
and
popl
leave
pop
imul
cmp
shrl
in
dec
mov
push
sar
sub
subl
xchg
dec
out
lret
pop
subl
in
insl
jecxz,pn
ljmp
cmpsb
imul
in
cli
and
mov
push
adc
ljmp
and
popf
gs
nop
mov
push
push
mov
cmp
and
mov
or
xorl
lret
outsl
ficompl
out
or
out
xchg
adc
repz
xor
sti
lahf
inc
cmc
mov
sbb
inc
pop
pusha
xchg
mov
dec
shll
jge
insl
fdivp
xchg
leave
dec
adc
push
jle
hlt
mov
les
adc
in
jmp
and
mov
sbb
push
stc
or
or
test
sub
adc
cmp
mov
enter
fs
push
and
inc
mov
add
mov
fcompl
xchg
mov
and
adc
inc
add
inc
push
mov
cmp
pop
dec
jo
arpl
ss
cmp
les
jle
das
and
xchg
adc
aad
jb
mov
sub
or
loopne
inc
mov
inc
add
push
stc
xchg
lret
adc
lea
or
xchg
and
fs
in
sbb
add
mov
bound
std
mov
mov
xchg
inc
and
inc
ljmp
sub
pop
enter
xor
sti
jo
push
sti
inc
jmp
sti
push
adc
pop
out
adc
jle
jle
pop
pop
test
outsl
sub
sub
ljmp
dec
dec
mov
std
sbb
xchg
add
xchg
adc
pop
loop
pushf
sbb
jnp
push
push
pop
inc
adc
cmp
push
cmp
jg
jg
pop
pop
pop
push
cmp
sub
cmp
pop
cmpsl
pop
out
pop
cmovbe
sbb
add
sbb
jecxz
push
push
cmp
inc
jo
incb
test
push
pop
cmpsl
outsl
inc
push
jno
cmp
sbb
push
aam
pop
outsl
push
pop
out
push
aam
jl
loope
dec
jle
xor
bound
xor
cs
out
mul
sub
rolb
push
pop
push
sbb
xor
pop
pusha
jnp
jg
pusha
js
jno
in
lcall
mov
in
mov
pop
jno
imul
xor
sarl
add
sbb
inc
sbb
sub
jae
mov
hlt
movsl
stc
mov
and
jnp
in
orl
cmpsl
mov
mov
inc
mov
sbb
push
push
mov
in
frstor
lcall
mov
int
add
aas
arpl
mov
sub
rcrl
adc
mov
adc
jl
and
inc
and
inc
xchg
xchg
inc
add
lret
xor
cmpsl
push
icebp
mov
pop
jge
jnp
popa
or
push
into
pop
addr16
push
pop
push
aaa
jge
ja
mov
jno
or
adc
or
addr16
js
faddl
sbb
jae
js
mov
inc
nop
je
sbb
outsb
cwtl
xor
pop
jns
leave
xor
les
andb
es
ja
push
jg
les
fidivs
repz
inc
shrl
push
push
pop
push
pushf
jno
and
in
lock
xchg
outsl
sbbl
dec
cmp
loopne
push
pop
inc
cli
jge
inc
inc
pop
fdivs
js
push
jl
push
push
in
je
xor
addl
add
cmp
cmp
cmp
add
or
push
sub
mov
mov
or
push
call
xor
and
cwtl
add
cwtl
sbb
jecxz
aam
fldl
and
sub
pop
cmp
or
jge
pusha
inc
push
or
nop
dec
or
xchg
cmp
cltd
add
pavgw
rorb
lods
jae
or
cltd
sbb
add
sbb
pop
add
or
sbb
push
mov
dec
pop
dec
lock
mov
scas
cmp
orb
or
leave
loop
add
pushf
jbe
js
jp
sbb
or
sub
sub
pop
or
mov
test
int3
xchg
push
jb
je
jbe
sbb
pop
and
jbe
push
add
dec
inc
movsb
addr16
mov
sbb
or
jg
pop
mov
push
dec
push
xchg
shlb
xchg
pop
mov
icebp
add
fiadds
sbb
jnp
xchg
cmp
cmp
jo
popa
or
pop
sbb
mov
lahf
lock
std
lahf
jecxz
rolb
dec
add
hlt
push
fisttps
mov
mov
mov
lods
pusha
testl
aaa
dec
xor
sub
popa
cld
or
sub
stc
or
mov
pop
adc
adc
push
push
gs
pop
lds
inc
in
push
movsl
insl
cli
cmovns
popf
lret
pop
and
sbb
mov
adc
add
dec
idivl
and
jo
por
jp
out
jl
inc
js
pop
xchg
data16
push
aam
mov
movb
add
clc
sbb
shll
jl
ss
loop
call
add
movsb
sub
mov
sub
mov
and
pop
in
adc
fldcw
xor
or
adc
push
jmp
js
push
sub
and
dec
jb
jecxz
xchg
cltd
test
xor
jl
dec
daa
popa
mov
add
shrl
mov
jge
in
mov
cld
jmp
sub
mov
jl
or
and
js
cmp
mov
fmuls
jo
fidivrs
sub
pop
xor
fsubr
sub
or
repnz
push
adc
cwtl
sub
mov
js
jl
jae
cmp
fcompl
mov
fisttps
ret
ffree
adcb
sub
push
decl
mov
sbb
sub
ret
and
cmp
mov
mov
mov
mov
xor
and
push
lods
cld
shrl
popa
incb
fwait
xor
dec
dec
cs
insb
std
imul
and
in
xchg
xor
or
xchg
and
insb
faddl
aam
mov
lock
push
xchg
daa
gs
addr16
popa
out
adc
hlt
shrb
dec
add
sbb
jge
roll
adc
cld
mov
push
js
pop
and
push
add
jns
jge
test
fiaddl
inc
test
std
push
sbb
enter
fs
addl
es
xor
mov
add
mov
call
daa
or
mov
fnstenv
add
fs
adc
xor
mov
xchg
mov
adc
xchg
fiadds
mov
scas
pop
or
fdivr
test
jno
ljmp
or
fcoms
and
in
cwtl
xor
fs
outsl
add
cmpsb
aas
xor
enter
daa
sbb
sub
shrl
and
fstpl
sbb
fcmovu
popa
mov
shlb
or
imul
clc
popa
fdivs
cli
sub
dec
ja
push
clc
aad
testl
ffree
lock
sbb
pop
lret
shl
ss
pop
adc
xchg
pop
aas
xor
xchg
and
push
fdivrl
xchg
dec
push
adc
jle
sbb
jp
insb
outsl
cmpsb
in
add
or
xorl
mov
mov
andb
and
inc
arpl
push
popa
sbb
xor
aad
inc
mov
inc
dec
popl
adc
mov
xor
push
nop
mov
pushf
pop
and
add
cltd
jb
and
subb
sahf
and
xchg
shlb
loopne
fistl
xchg
dec
imul
inc
dec
repnz
add
fbld
daa
sbb
ret
and
insb
push
push
dec
rcr
or
lock
cmp
dec
std
xchg
inc
pop
in
fmull
pmaxsw
adc
sub
xor
inc
insl
addr16
in
lret
movb
sub
stc
and
mov
sbb
sbb
inc
add
adc
aaa
sahf
add
lret
pop
xlat
jle
inc
pop
lock
jo
push
xchg
stos
dec
lret
dec
add
xchg
arpl
and
fdivl
inc
ljmp
movsl
movsb
pop
sbb
and
cmp
add
xchg
lahf
addl
jno
jmp
ljmp
inc
lods
pop
rclb
gs
push
mov
movb
scas
dec
insl
int3
gs
and
cwtl
push
push
and
lock
adc
mov
jno
jne
fisttpll
in
mov
mov
sahf
iret
push
shrb
fdivrs
pop
add
push
ret
sbb
ljmp
push
and
sbb
xor
cltd
adc
lods
mov
iret
inc
xchg
fs
scas
fisubrl
xchg
stc
into
dec
in
and
outsb
sbb
dec
or
test
dec
subl
jae
std
enter
nop
dec
test
add
mov
jg
stc
mov
sub
out
and
and
push
rorl
addr16
shlb
data16
mov
mov
loop
insb
in
out
push
out
aas
jnp
jg
push
sbb
or
lret
push
push
or
roll
inc
push
sbb
outsl
push
out
and
push
inc
jbe
add
pop
mov
xchg
jno
xorb
pop
or
sub
lock
nop
push
push
ret
es
aam
loop
inc
push
inc
into
call
sub
or
sub
arpl
sbb
jno
pop
out
out
sbb
scas
inc
adc
ret
icebp
fcomps
sahf
mov
in
mov
mov
add
cmp
aaa
or
and
stc
fisubrs
dec
enter
arpl
sbb
add
mov
or
pusha
pop
xchg
xchg
jbe
mov
sub
pop
js
int3
adc
inc
inc
jb
add
shl
mov
icebp
pop
stc
and
adc
in
or
pop
loop
mov
ds
sub
xchg
cmp
data16
xlat
push
sub
into
sub
or
add
stos
ja
cld
inc
mov
or
sti
fnstenv
sbb
cmp
xchg
bound
repnz
clc
out
push
gs
fldl
les
xor
and
popa
xchg
bound
mov
out
cwtl
pop
arpl
cwtl
mov
adc
daa
sub
jb
popa
cmp
dec
bound
addl
push
idivl
xchg
scas
xlat
aaa
call
mov
outsb
int3
insb
arpl
negl
cs
lcall
jns
xchg
clc
shrl
and
push
sub
imul
pop
rol
rorb
push
repnz
pusha
nop
fcmovnb
lret
arpl
enter
and
repnz
sub
xchg
or
fdivs
push
fsubrl
adc
or
and
sub
ret
sub
subl
pop
aad
cmp
outsb
shll
sti
dec
cmp
xchg
fstl
imul
add
jl
and
psubb
movsb
icebp
mov
adc
arpl
add
add
or
adc
push
ffreep
adc
sbb
mov
push
sub
xchg
dec
arpl
push
dec
cmp
fsincos
mov
outsb
push
inc
pop
frstor
xor
cs
and
dec
mov
inc
mov
fldenv
jle
or
jp
daa
xor
enter
mov
les
into
lods
insl
dec
sbb
ds
loope
rcrl
fidivrs
mov
test
inc
test
lret
cmp
rorb
pop
jb
sbb
in
and
pop
outsb
ja
or
mov
inc
psubd
sahf
dec
mov
mov
adc
pop
lds
mov
jp
ds
inc
popf
pop
cmp
pop
pusha
or
fimull
in
push
sahf
sub
ret
pop
adc
or
hlt
sidtl
mov
cmp
ret
outsb
sub
outsl
int
mov
jo
mov
xchg
and
rol
mov
nop
or
ss
arpl
mov
outsb
push
xor
jns
sbb
leave
mov
xchg
loop
pusha
dec
xor
data16
pop
jmp
popf
sbb
mov
in
fldenv
mov
push
push
in
movsl
cmpsl
clc
xorb
repz
js
ljmp
inc
push
sub
xchg
cmp
cmc
xor
enter
inc
ljmp
add
xor
pop
push
ret
lret
adc
push
pop
or
xor
fsts
or
and
insl
mov
dec
inc
fbstp
dec
or
aaa
jbe
jae
mov
movb
cmp
push
mov
sub
popa
sbb
ja
adc
xchg
aas
ss
or
and
sbb
pop
jmp
inc
les
cmp
fbstp
loop
push
push
sbb
xchg
adc
addl
int3
adc
sub
lea
ret
dec
inc
xchg
push
cmp
sbb
push
cmp
aam
cld
xor
fsubl
adc
into
sbb
pop
or
xor
bound
lcall
into
jnp
xchg
adc
mov
jno
cltd
or
xchg
jl
xor
int3
inc
rcl
mov
ljmp
mov
popa
sbb
cld
adc
mov
and
xchg
cs
cmpsb
push
push
ja
leave
cs
addr16
subb
mov
xchg
or
mov
ret
scas
lock
fdivl
fistps
bound
ret
scas
jnp
mov
je
rcll
push
mov
jbe
adc
mov
ficompl
rorl
aam
xchg
dec
mov
cmp
mov
and
xchg
xchg
pcmpgtw
xchg
mov
out
ds
or
fsubrs
insl
out
add
sub
loopne
adc
xor
and
or
push
lds
add
add
pop
mov
push
les
adc
ss
add
repnz
ds
and
mov
pop
out
jo
outsb
cmp
clc
push
aas
jl
mov
jge,pt
clc
or
adc
or
pop
jno
jbe
inc
push
add
cmp
adc
mov
add
out
cmp
sbb
pop
sti
fs
std
fsubs
pop
int3
in
les
push
mov
shlb
clc
jl
test
and
jns
xchg
test
stos
stc
or
cmc
out
xchg
cmp
imul
shrb
divl
insb
cmp
mov
imul
test
dec
or
out
xor
push
cld
mov
cmp
cmp
mov
outsl
cmp
adc
mov
fs
scas
fnstcw
imul
ss
cmp
scas
fsubs
mov
jp
movd
int
sbb
sub
adc
pop
push
sub
bound
jno
sub
dec
mov
das
jbe
sti
xchg
jg
aad
push
and
icebp
fisttpll
stos
pop
push
or
jbe
pop
add
xchg
inc
or
push
ficompl
loop
hlt
ret
jns
or
sahf
daa
add
fwait
adc
out
lea
xlat
inc
mov
pmaddwd
ds
lret
stc
dec
clc
mov
in
hlt
outsl
sub
out
imul
xor
es
dec
cmp
ret
mov
push
imul
and
iret
inc
mov
adc
xchg
inc
sbb
sub
push
fldl
and
xchg
fiaddl
mov
ret
lret
xor
xchg
or
mov
loop
adc
insb
aaa
scas
cmp
lds
push
adc
mov
sbb
sbb
inc
mov
push
sub
in
sub
inc
pushf
inc
and
test
inc
sti
ret
sub
test
inc
cltd
add
scas
test
es
je
mov
shll
pop
cs
ljmp
mov
aad
scas
dec
adc
inc
xor
ljmp
fs
cwtl
lcall
cli
aas
push
leave
fldenv
int3
push
mov
cmp
cmp
pop
xchg
daa
fstl
rol
mov
adc
mulb
mov
test
or
mulb
imul
les
outsl
xor
push
mov
mov
test
pop
in
fcoml
adc
add
lcall
xlat
and
xlat
xor
les
dec
sub
push
rclb
mov
mov
fistl
or
data16
int
adc
and
pop
mov
lret
push
push
add
mov
fprem1
or
xor
add
mov
ss
in
data16
icebp
negb
adc
movsl
dec
inc
imul
daa
adc
adc
pop
dec
in
loop
enter
sti
dec
aas
fsubrp
in
inc
stos
pop
ljmp
pop
xor
es
mov
add
loop
bound
leave
data16
pop
dec
outsb
xor
je
in
rcl
movsb
inc
test
sbb
inc
popf
fsubs
xchg
in
adc
sahf
push
pop
sbbb
cmp
pop
jb
loopne
add
divb
jae
pop
dec
cli
dec
cmp
pop
push
xrelease
add
scas
movl
enter
testb
into
cs
mov
fnsetpm(287
out
mov
aad
push
orb
movsb
leave
cmp
fwait
cs
inc
arpl
pop
in
or
inc
punpckhbw
scas
push
cwtl
stos
scas
mov
pop
sub
pushf
xchg
pop
jecxz
xchg
mov
inc
out
or
sub
adc
pop
and
out
repz
jbe
ss
jl
lcall
aad
dec
and
daa
add
sub
popl
xor
clc
loop
pop
add
cmpsb
and
mov
pop
fistpl
in
lret
pushf
andl
dec
push
sub
addl
inc
stc
push
mov
out
push
fsubrl
xor
imul
leave
fisubs
movsl
int
push
push
push
testl
xor
fldenv
xorl
ret
js
and
cmp
push
mov
ret
out
and
fucomi
pop
sbb
add
shrl
push
icebp
insl
clc
insb
negl
or
stos
orb
adc
je
mov
adc
adc
in
push
cmp
rcl
faddl
xchg
adc
adc
lock
testl
xchg
xlat
je
test
xchg
jno
lcall
lods
or
cwtl
and
pop
xlat
in
js
and
inc
por
mov
mov
aad
pop
sub
andb
jecxz
aam
fnstenv
in
sbb
cmp
mov
xor
adc
out
push
insl
outsb
mull
addr16
mov
dec
inc
in
adc
fbstp
pop
push
movsb
adc
and
outsl
test
cmp
mov
std
push
fidivl
mov
mov
dec
iret
ret
cld
cli
and
ret
dec
fcoml
adc
jne
aam
inc
insb
add
das
mov
or
ret
es
test
xchg
add
xor
jns
pusha
or
cmp
aam
int3
nop
xchg
dec
lret
ja,pn
xor
xchg
inc
imul
hlt
enter
adc
xor
negb
and
xlat
jns
or
out
adc
fstpl
outsb
xor
pop
clc
pop
cld
popf
sbb
mov
ss
out
push
pop
xor
xor
mull
push
test
fistpl
adc
mov
and
cmp
jp
add
cmp
imul
mov
mov
jl
xchg
cltd
push
xchg
jae
pop
adc
jno
movsb
adc
mov
mov
clc
dec
push
icebp
fdivrp
seto
jnp
pop
data16
and
dec
xchg
or
lcall
mov
lds
repnz
mov
sub
pop
mov
mov
adc
call
enter
shlb
fstpl
movsb
aam
sbb
movsl
aas
test
out
mov
inc
jmp
movsl
dec
xchg
mov
popa
aas
adc
into
fisubrs
jecxz
push
ret
pop
lea
ja
cwtl
dec
lcall
stos
and
xchg
outsl
ret
mov
xor
inc
bound
adc
test
push
rolb
mov
into
inc
push
jne
push
and
setp
enter
adc
jb
push
or
loop
and
dec
sti
dec
push
xor
outsl
data16
xor
jecxz
daa
fldt
shl
push
loop
aad
fdivrs
or
cmp
ret
xlat
sub
pop
movsl
pop
xchg
int3
jle
mov
mov
inc
dec
int3
fisubrs
or
inc
int
push
xchg
fidivrs
mov
andl
divb
mov
arpl
fs
dec
enter
push
and
or
fisttpll
cmc
adc
xchg
xor
rclb
repnz
push
mov
jecxz
or
push
call
xor
jl
cmp
fisubrs
mov
dec
jbe
jmp
enter
in
sub
dec
push
sbbl
pop
push
mov
cmp
cs
lea
in
adc
adc
push
addr16
push
push
inc
shl
outsb
test
repz
push
ret
pop
pop
shll
jmp
bound
es
scas
mov
insb
mov
adc
clc
push
scas
addl
mov
push
pop
xchg
repnz
data16
stos
xchg
mov
and
sub
insb
push
xchg
mov
push
xor
inc
jg
push
cmp
dec
adc
and
in
adc
mov
inc
fcomps
popa
inc
outsb
push
lods
push
lret
dec
pop
dec
sahf
sti
push
arpl
jge
in
mov
int3
gs
xor
test
xchg
sbb
lret
test
pop
mov
sub
shrl
push
dec
sub
xchg
mov
dec
push
xor
dec
rcrl
mov
out
mov
fstl
mov
sbb
into
leave
sbb
mov
clc
fiaddl
outsb
and
fstpt
jno
shll
xchg
add
aaa
sub
xor
cs
inc
sbb
push
adc
jecxz
fwait
lahf
fcomip
cmpsl
mov
mov
les
addb
sub
pop
inc
sub
mov
loopne
jmp
mov
punpckhbw
leave
jo
mov
lds
dec
pusha
out
push
jbe
leave
sub
mov
repnz
adc
inc
sub
and
mov
xchg
and
in
ds
xchg
mov
pop
push
rcrb
xor
push
push
sti
push
mov
push
decb
pop
aas
pop
dec
and
mov
push
les
movsb
out
mul
adc
fmull
add
movsl
add
divb
push
pop
iret
inc
adc
cld
data16
mov
aas
and
push
cmpsb
pop
push
shlb
scas
inc
insl
ss
movsl
adc
xlat
pop
lea
mov
mov
push
cmc
jge
in
dec
and
imul
dec
test
pop
hlt
push
and
call
jge
dec
sbb
fstpl
test
stos
rcll
cmc
add
popa
ret
push
push
and
int
or
ss
or
outsb
xor
lds
pop
repz
push
sbb
or
enter
adc
mov
inc
lret
sahf
stos
data16
flds
mov
dec
lods
sub
mov
ds
shlb
push
cmp
mov
push
shrl
push
mov
cs
xchg
xchg
into
mov
jno
into
adc
mov
and
dec
mov
mov
push
and
and
outsb
dec
imul
mov
lret
testl
xchg
add
lret
arpl
insl
inc
inc
rcr
fisttpl
inc
push
mov
sub
or
cli
mov
mov
ds
xor
and
pop
shrl
mov
les
testb
ss
nop
dec
sub
mov
xchg
mov
sub
pop
xor
rcrl
dec
mov
inc
frstor
xchg
xor
push
jle
xlat
test
sbb
adc
ja
or
nop
or
je
jbe
jo
jb
lahf
add
pushf
mov
fs
fidivrs
enter
adc
push
cmpsl
pop
fs
or
jbe
push
hlt
push
inc
pop
pop
adc
in
out
jns
or
ja
je
arpl
pop
inc
ret
inc
jns
out
out
ljmp
push
pop
jnp
in
push
arpl
adc
fstps
cmp
fidivrl
jnp
and
insb
jle
jle
dec
insb
std
jle
cmp
fcoml
mov
aam
outsb
inc
push
mov
jg
dec
pop
jns
ret
pop
adc
or
insb
jbe
jge
push
xor
pop
bound
jne
test
push
pop
insb
fadd
xor
cmp
cmp
call
js
jmp
das
mov
movhps
mov
cmp
add
orb
mov
push
pop
and
mov
shll
rcrb
jns
add
xor
or
inc
roll
inc
lods
pop
out
or
pop
call
pusha
lock
popa
ds
add
daa
mov
jmp
add
test
pop
cmp
js
std
popa
mov
sbb
mov
xor
dec
mov
pop
clc
ffreep
iret
mov
sub
cwtl
or
jne
mov
and
loop
add
sub
std
test
cltd
add
dec
adc
jne
inc
add
cmp
sbb
dec
mov
imul
mov
and
das
test
mov
adc
scas
iret
and
push
jmp
test
jp
mov
repz
pop
es
shll
jge
or
mov
cmp
les
call
adcb
cmpsl
xchg
in
cmp
xchg
lock
push
or
and
test
sub
adc
mov
pop
cld
pop
xor
inc
dec
add
pusha
lock
je
add
sub
das
sub
sbb
mov
lcall
xlat
xor
xchg
mov
pop
nop
cmp
jmp
fsubrs
cmovle
mov
rorb
inc
imul
mov
xor
xchg
aad
jnp
and
or
add
and
test
add
mov
daa
xor
inc
mov
sbb
xchg
or
stos
int3
adc
outsb
push
jno
out
xor
gs
xchg
ret
mov
inc
in
add
sbb
adc
mov
aas
add
adc
aad
cltd
cwtl
add
mov
je
cmp
lret
out
cli
mov
cmpsl
add
add
adc
mov
int3
in
psubb
mov
adc
add
movsl
cltd
int
adc
xor
xchg
xlat
movsb
xor
out
push
ds
xchg
leave
inc
sub
add
jo
cmp
call
adc
push
adcb
add
pusha
push
push
int3
cli
mov
mov
ret
push
mov
push
fadds
mov
test
scas
or
fcmovnb
sub
into
pop
xlat
push
mov
in
cmpb
and
sub
jno
jg
sbb
pop
inc
xchg
fildl
out
cwtl
mov
pusha
or
dec
daa
dec
fbstp
jae
adc
mov
inc
sarl
and
adc
rclb
inc
int3
push
mov
loopne
arpl
or
push
add
add
inc
call
call
cld
test
lcall
imul
aad
je
or
adc
lret
aas
pop
dec
add
or
mov
dec
les
pop
les
pop
arpl
hlt
cmpsb
mov
and
pop
sbb
cmp
test
ficompl
mov
sub
js
sahf
adcb
lcall
imulb
xor
or
push
lods
fisttpll
andb
popf
sub
or
or
in
lahf
jle
and
je
mov
or
sub
sbb
inc
jg
cli
mov
lret
push
push
and
sbb
and
rcrb
cmp
or
add
fwait
add
insl
pushf
lock
stos
or
jmp
add
or
jge
jle
jg
andb
adcb
xchg
mov
xchg
imul
inc
insl
outsb
mov
jo
cs
lods
add
divl
and
test
addl
mov
jl
daa
les
push
and
int
cwtl
or
daa
inc
adc
push
into
jl
inc
es
lock
adc
nop
add
arpl
sarb
and
jmp
lods
mov
mov
and
mov
xchg
jmp
call
push
aad
cmovbe
or
adc
das
add
mov
xchg
sbb
mov
adc
test
sbb
stos
or
pop
xchg
mov
sbb
sti
and
jo
push
sub
clc
out
add
xchg
sub
jp
in
cmp
push
loope
dec
mov
sahf
mov
xor
ror
adc
jmp
add
ret
lret
cltd
xchg
fimull
pushf
xor
leave
call
xor
mov
cmpsl
xor
iret
insb
test
cmp
xor
xor
int3
adc
xor
and
lahf
jae
add
jl
enter
mov
fisubs
shll
sub
inc
adc
add
iret
or
ret
xor
fsubrs
inc
pop
xor
cwtl
call
or
add
clc
stos
inc
out
rcll
dec
jmp
mov
mov
or
or
mov
movsl
xchg
xlat
subb
in
adc
mov
cltd
int3
addr16
nop
add
xchg
int
bound
data16
adc
popa
and
shrl
sub
movsb
outsl
xor
add
mov
xorl
jle
test
xchg
add
hlt
in
jp
stos
sar
in
add
shlb
inc
arpl
cmc
add
ja
lret
sbb
rcl
push
inc
insl
push
loopne
jb
dec
inc
movsb
add
test
je
pop
push
or
rcrb
lods
out
pusha
pop
adc
or
in
imul
pop
fprem1
dec
push
xchg
lods
cld
in
and
test
sub
push
movsb
push
push
inc
mov
jg
sub
sbb
xchg
in
sahf
push
xorb
push
inc
jecxz
jecxz
sub
je
insb
test
and
pop
pop
inc
jnp
je
sbb
dec
subl
xor
out
sbb
outsl
xor
pusha
push
sub
jecxz
lcall
and
pop
push
fadds
or
cld
std
clc
fldl
jge
jns
jnp
dec
or
imul
jg
lret
adc
movsb
xor
movsl
mov
jae
cmp
xor
popa
dec
dec
stos
pop
add
addr16
lock
xor
aaa
gs
sbb
dec
dec
lcall
push
inc
std
lret
adc
and
test
pop
mov
test
sub
decb
push
xor
mov
or
push
cmpsl
or
inc
lds
loop
jno
inc
xchg
and
push
fmul
test
orb
inc
andb
ret
bswap
lock
jne
ret
lea
dec
sub
fisubl
insb
mov
fs
and
test
add
and
and
lods
or
push
add
mov
pop
inc
xor
sub
out
mov
lcall
les
test
mov
xchg
push
or
jl
sub
shlb
adc
adc
insb
xchg
dec
lds
gs
mov
testl
in
mov
mov
rorb
enter
and
xchg
cli
mov
popf
xor
fnstcw
sub
mov
add
xchg
frstor
jl
pop
in
movsb
mov
ljmp
mov
lcall
mov
mov
movsl
cli
in
pop
lahf
xor
ret
rolb
loop
sbb
add
lret
aaa
sbb
in
xor
jl
xchg
sbb
iret
pusha
xlat
sub
or
fstps
scas
sbb
lods
in
fcmovnbe
arpl
in
popa
push
xor
pcmpgtw
loopne
sub
push
fistpll
jl,pt
rclb
je
movsl
adc
inc
andb
pop
rorb
test
in
sub
daa
fcoms
cs
mov
stos
inc
and
cvttps2pi
cltd
fmull
movsb
lret
rolb
xor
add
sbb
fstpt
popf
loop
add
enter
movb
or
jl
xchg
ffreep
fs
aam
xor
in
adc
fimull
gs
xchg
sbb
or
xor
mov
pop
xor
and
mov
fstl
or
shl
test
movsb
flds
popf
cld
add
fisttpll
or
les
add
shlb
jo
xlat
cwtl
cld
or
mov
xchg
lock
les
popl
mov
xchg
repz
mov
ret
xor
in
or
ret
xor
clc
xchg
cmpsl
mov
aam
loopne
fstps
jge
movsl
clc
cmp
shll
pusha
pop
lcall
addr16
cmp
xchg
sbb
dec
sahf
sbb
jmp
lret
aad
fwait
mov
mov
sub
out
mov
lret
jno
add
ss
cwtl
add
fdivrl
popl
and
in
fisttpl
loop
xchg
in
ficoml
xchg
shlb
mov
cwtl
fwait
jl
xor
xchg
iret
lahf
jge
fisubl
and
movsl
dec
sub
cmp
xlat
addb
jl
pop
sysenter
xchg
rorb
xor
xor
xchg
sbb
xor
in
ret
lret
jg
test
sbb
mov
pop
sti
enter
mov
push
out
add
rorb
aad
pop
fs
cmp
out
mov
mov
adc
sar
pop
mov
mov
pop
mov
clc
in
fldcw
push
cltd
xor
adc
enter
sbb
aad
push
dec
xor
ret
mov
cwtl
or
or
xchg
call
mov
lock
add
or
pusha
mov
jmp
in
sbb
jl
cmp
hlt
push
xchg
movsl
movsl
xor
push
cmp
das
mov
rcll
aas
aad
sub
mov
movsl
xchg
push
sbb
and
popf
inc
insb
sbb
movsb
nop
call
mov
xchg
or
notl
fsts
inc
mov
sub
je
push
dec
xchg
sbb
cmpsb
add
movsb
sahf
nop
andb
pushf
xlat
push
aaa
leave
call
or
mov
jmp
dec
fimull
pop
add
jecxz
fmuls
test
out
rcr
je
test
inc
pusha
xor
mov
xorb
add
ljmp
js
xor
shrb
fwait
add
enter
cltd
pop
xchg
xor
sub
sub
fsubrl
mov
inc
in
test
nop
inc
push
ss
dec
gs
add
nop
and
in
push
movsb
xor
rclb
aad
mov
mov
mov
ficomps
mov
xchg
call
add
lret
or
and
mov
add
fwait
and
cmp
cmp
xor
jle
mov
or
adcb
out
fbld
mov
add
mov
lods
and
pop
fdivs
icebp
cld
cmpsl
adc
jl
add
js
test
push
jg
shll
arpl
xchg
add
adc
pushf
ret
jle
sbb
push
mov
iret
xchg
add
mov
ret
push
lock
cmp
push
xor
lods
mov
test
mov
xorl
ficoml
xchg
mov
hlt
loope
add
fbstp
push
add
jle
movsb
js
jmp
cld
mov
in
xchg
arpl
jae
aam
xchg
add
in
int
cmp
outsb
xchg
lds
or
sub
push
inc
loop
xchg
insl
push
push
rorb
pop
loopne
bound
mov
clc
mov
push
int3
push
out
sub
inc
pusha
adc
jno
aas
jae
and
push
or
inc
inc
fmuls
out
mov
xchg
add
loopne
in
inc
inc
adc
jmp
sbb
ret
sbb
imul
jle
fincstp
adc
sbb
jno
xchg
lret
jnp
sarl
cmpsb
or
imul
add
imul
std
push
or
add
inc
imul
add
or
and
punpcklbw
dec
add
sahf
das
mov
cmp
pop
push
cld
xchg
leave
pop
jns
add
xchg
sti
sbb
fimuls
test
adc
sbb
cli
and
sbb
test
rorl
or
aam
pop
add
push
ret
or
movsb
test
jecxz
cmp
push
nop
js
or
outsl
xor
push
inc
mov
jle
call
dec
push
mov
dec
and
outsl
jno
mov
xchg
push
cmpsb
js
sbb
cs
xor
jnp
shrb
or
in
jo
pop
das
rorl
lods
call
loop
inc
sbb
mov
cmc
push
pop
and
es
cmp
ret
xor
popf
mov
dec
pop
pop
adc
loop
loope
rol
mov
sub
lahf
sub
addb
cmp
sar
rorb
ljmp
jne
jnp
add
lret
add
jle
xchg
adc
dec
push
xchg
aas
jb
fdivs
cli
andb
std
aas
mov
or
mov
test
push
or
push
adc
sbb
pop
inc
sub
sarb
fisttps
and
pusha
jne
inc
push
in
jae
loope,pn
or
mov
inc
or
add
cmp
sub
or
subb
inc
jns
add
in
sub
and
inc
insb
add
jl
jmp
enter
or
pusha
xchg
or
test
or
jle
xchg
adc
hlt
js
hlt
nop
rolb
loope
or
xor
jmp
jge
adc
lock
scas
mov
pop
hlt
mov
push
and
push
aas
dec
pop
adc
nop
add
jo
mov
enter
push
jnp
add
fsubl
xor
ret
movsb
js
mov
and
xor
add
in
add
popa
pusha
or
xor
pop
nop
insb
and
daa
jb
popf
nop
push
xchg
insb
or
subb
add
bound
in
or
imul
in
jne
pshufw
insb
or
mov
imul
loopne
add
fucomi
pop
add
outsl
pop
and
adc
arpl
mov
sbb
pop
lret
jmp
pop
pop
ret
and
leave
in
mov
jg
xor
push
mov
mov
pusha
add
pop
xor
addr16
aam
xor
or
daa
repz
mov
imul
jb
mov
movsl
daa
and
dec
adc
loopne
pop
push
enter
nop
loopne
pusha
and
rorb
pop
pop
inc
mov
inc
pop
jae
sbbb
mov
or
jg
jae
and
add
addb
mov
clc
test
nop
lods
in
fldcw
push
mov
push
or
jbe
push
or
jge
jae
int
pop
movsb
add
mov
pushf
push
xor
or
imul
dec
pushf
add
fldl
mov
mov
pop
xor
fwait
aam
xchg
sbb
sbb
and
cmp
gs
pusha
mov
or
add
clc
xlat
das
shlb
jno
push
test
xchg
cmpl
pop
add
lods
icebp
mov
lret
sbb
pop
dec
inc
and
dec
push
je
xor
xor
add
test
jge
pop
xchg
addr16
lcall
decb
mov
call
out
jl
lods
mov
dec
mov
fs
test
add
or
in
std
rolb
push
movsb
or
in
and
add
sbb
test
pop
setl
subb
imul
aam
mov
aas
sub
and
cli
aas
fcoml
out
cmp
out
cmc
pop
xor
and
mov
js
jbe
dec
or
adcb
adc
jp
into
mov
insl
add
dec
jge
sbb
pop
or
mov
cmc
or
or
popf
out
pop
sti
outsl
xlat
xor
je
and
dec
lods
call
xchg
cld
push
sar
stos
leave
test
enter
cmc
xchg
fwait
dec
push
push
pop
or
addl
add
jp
sub
enter
mov
jo
lds
or
adcb
pop
lock
nop
mov
mov
repnz
mov
dec
xchg
mov
jl
cmp
add
int3
mov
or
je
mov
add
lds
mov
mov
xor
xor
xor
faddl
rolb
cwtl
add
imul
mov
mov
lea
jae
and
cmp
xor
push
cmpsl
push
add
add
daa
and
stc
test
mov
sbb
adc
mov
in
sub
and
xor
cmc
sub
fcoms
cltd
push
pop
aad
jl
sub
mov
or
dec
cmp
hlt
cld
aas
aas
xor
xor
and
repz
or
scas
imul
sub
and
jle
loopne
sbb
mov
ret
xchg
adc
xchg
mov
sub
nop
mov
dec
jo
sbb
push
xchg
jno
sbb
popa
pop
insb
jo
jns
and
orl
xor
into
pop
jg
cli
mov
or
sub
incb
clc
aas
cmp
dec
pop
add
mov
mov
sar
pop
mov
xor
cmp
mov
data16
cwtl
movsl
sub
divl
ljmp
lahf
addr16
inc
das
test
call
lock
out
mov
jg
dec
gs
xorb
out
sti
cmp
jg
xor
shll
lods
sub
aam
fistpl
fwait
add
sub
aam
shlb
ror
cmp
mov
js
das
cmc
movsl
and
pop
add
repnz
incl
repz
add
insb
mov
cmp
rol
jp
fwait
sub
call
lods
mov
jb
push
mov
hlt
ja
push
sbb
sub
cli
jb
add
xor
mov
pop
inc
mov
cmp
xchg
add
cmpsb
repz
adc
jno
dec
xchg
add
int
mov
cmp
inc
push
les
sub
cs
push
adc
mov
out
inc
pusha
and
pusha
mov
rclb
add
mov
sbb
adc
in
jg
lods
es
push
push
mov
fwait
subb
popa
das
inc
xchg
xlat
sub
movsl
mov
and
add
jno
arpl
jge
inc
mov
adc
les
push
xchg
js
in
or
sbb
add
pop
rclb
dec
mov
clc
or
push
push
lock
rcrb
push
jno
cltd
repz
and
cld
or
mov
gs
adc
and
add
pop
sbb
ficomps
inc
movsl
es
pop
loopne
icebp
dec
rorl
mov
inc
lods
dec
sub
das
outsl
lock
cld
inc
in
aas
and
pop
xlat
mov
xchg
cmpsl
or
xor
pusha
and
jne
mov
repnz
nop
or
mov
enter
jge
xor
ds
mov
inc
inc
shlb
mov
adc
and
add
fs
and
fmuls
dec
cmp
andb
aam
sub
filds
mov
and
mov
and
mov
movl
int
gs
rorl
movl
pusha
andl
leave
movswl
add
je
add
xchg
xlat
hlt
lea
mov
dec
fiadds
jl
jns
adcl
shl
dec
pop
daa
gs
mov
aaa
adc
or
pop
add
cmp
dec
adc
dec
jo
lahf
lods
in
adc
xor
fs
pop
push
push
mov
pop
cmp
imul
cs
addl
icebp
jecxz
sbb
movsl
insb
insl
add
pop
add
ds
nop
xchg
inc
dec
adc
outsl
sbb
push
lock
daa
cmpsb
cld
nop
xchg
sbb
inc
pusha
or
dec
add
add
jl
jne
dec
sbb
sar
xor
xor
imul
mov
loop
cmp
inc
adc
xor
adc
xchg
test
lods
add
addr16
cmpsl
push
roll
in
mov
mov
lcall
jbe
mov
pushf
or
add
lods
xor
jmp
dec
adc
xor
mov
dec
push
and
and
mov
xor
cmpsl
add
xor
or
iret
push
sete
lods
jl
popf
inc
loopne
or
lock
js
xor
or
test
sbb
add
or
nop
dec
push
and
ret
test
jnp
int3
mov
daa
nop
fwait
dec
leave
cmp
rolb
pushf
add
xchg
hlt
dec
movl
aas
and
cmp
xlat
xchg
test
cmc
adc
test
dec
lds
add
mov
sub
jae
lahf
pop
jne
stos
mov
xor
jns
push
jo
in
repnz
sahf
mov
adc
clc
pop
pusha
orb
cmc
das
outsb
lds
and
inc
pushf
mov
mov
das
jae,pn
mov
mov
ljmp
add
adc
iret
xor
inc
push
daa
sbb
xchg
lahf
add
testb
mov
andb
cltd
adc
subl
fadds
xchg
add
adc
and
add
fldenv
xchg
cmpb
mov
xchg
xor
lret
xor
lahf
xor
dec
js
inc
push
idivb
xor
mov
jnp
add
jg
xchg
imul
icebp
imul
shlb
mov
sbb
mov
loope
ret
or
les
aas
mov
dec
sbb
add
add
inc
sbb
pushf
pop
add
mov
fsubs
or
insb
sub
add
cmp
lds
lahf
mov
xor
cmp
and
sbb
ds
mov
inc
fdiv
pop
lds
mov
lods
or
imul
ja
addb
mov
mov
add
fdivr
pop
sbb
test
or
icebp
pop
and
je
and
add
loop
mov
push
arpl
inc
fsubl
sarb
pusha
jnp
movl
out
sub
add
test
in
outsb
mov
jl
addr16
adc
or
shll
orb
dec
daa
xchg
add
test
incl
sbb
jecxz
loopne
jg
xchg
xchg
pusha
stc
loopne
jb
adc
rolb
sahf
cmp
jns
imul
inc
rorl
lock
add
les
xor
fisttpll
xchg
stos
lods
mov
jmp
lods
sub
inc
repnz
lock
jns
pusha
mov
cmp
icebp
xor
stos
loop
jl
repz
ret
add
xchg
fmul
adc
push
mov
das
and
or
adc
add
jae
jns
lods
add
inc
sti
pop
hlt
into
outsb
js
gs
out
pusha
mov
inc
mov
jmp
jo
test
adc
pop
ficompl
xor
movb
hlt
mov
enter
or
pop
jmp
or
stos
sbbb
mov
sbb
inc
mov
test
in
add
subb
adc
or
xor
cmpsb
cmp
movsl
sbb
add
outsl
imul
data16
pop
popf
mov
pop
or
or
icebp
rorb
sub
or
int3
pop
jne
mov
imul
pop
pop
inc
xchg
add
in
nop
fwait
cmp
mov
fnstenv
test
and
pop
adc
push
push
int3
push
mov
rolb
pusha
pop
push
mov
push
xor
jmp
pop
lods
push
sbb
xchg
loope
push
inc
in
pusha
and
incl
mov
out
and
inc
dec
mov
push
das
loopne
add
cmpsl
pop
inc
mov
test
mov
imul
enter
cmc
shlb
sarb
sbb
popf
mov
push
push
add
mov
mov
scas
in
mov
int
push
repz
cld
test
and
dec
jns
adc
mov
jne
int3
js
sub
ret
mov
inc
sbb
and
pop
pop
add
mov
mov
icebp
cltd
adcb
cmp
pusha
mov
push
push
xor
rcrl
mov
inc
mov
adc
cld
and
cmp
add
jae
xchg
push
enter
pop
aaa
pop
push
loopne
and
subb
mov
je
inc
mov
les
mov
pop
pop
insl
mov
cmp
jl
jae
and
pop
sub
inc
aam
mov
inc
add
or
cmp
fstl
mov
movsb
sub
and
faddl
repnz
dec
icebp
xor
es
rolb
faddl
xchg
js
jmp
lods
cmpsb
cmp
pusha
lds
mov
sub
mov
cmpl
int3
adc
mov
icebp
mov
scas
fadds
loop
outsl
clc
pop
in
pop
call
or
push
adc
add
and
pushf
call
nop
or
imul
or
leave
xchg
setl
ret
sbbb
rcrb
add
dec
aam
dec
push
dec
icebp
and
and
pop
insl
adc
dec
mov
aad
adc
add
cmpsl
jbe
ds
insb
les
cmp
les
mov
sbb
into
in
repz
push
daa
je
std
push
nop
add
adcb
or
dec
dec
adc
pusha
add
xor
ja
lds
push
stc
test
xchg
xor
stc
adc
arpl
push
inc
pop
inc
call
jo
gs
inc
xchg
dec
xor
mov
aas
jno
mov
out
in
inc
pop
mov
rorl
int3
stc
lret
sub
popa
bound
in
insb
orl
sbb
adc
cmpsl
mov
dec
addr16
xchg
pusha
pop
mov
add
fadds
loope
xor
jl
adc
cmp
push
xor
sbbb
adc
insb
int
and
sub
in
pop
xor
fdivl
mov
cmpb
dec
mov
vmovlps
jns
sub
add
or
je
jns
inc
inc
aad
mov
addb
push
mov
pop
roll
jmp
xor
jnp
adc
push
and
test
inc
fucom
pusha
xor
push
xor
cltd
or
btr
in
sysret
mov
add
std
test
aas
aam
mov
and
adc
adc
test
clc
mov
sbb
lods
inc
insb
mov
mull
mov
pop
jnp
jne
adc
lahf
add
mov
in
add
fistps
xor
pushf
jns
daa
stc
dec
add
test
ljmp
adc
mov
outsl
sbb
add
ja
and
sbbl
rcrl
sub
or
addb
push
jbe
mov
inc
mov
mov
lea
or
lock
outsl
jb
popa
je
or
mov
ds
dec
mov
lea
push
mov
lcall
xchg
mov
jbe
les
movb
dec
sbb
add
mov
fsubrs
rcll
push
add
sbb
je
push
mov
adc
cmp
push
call
cmp
add
inc
cwtl
or
inc
push
xor
add
xlat
xchg
imul
sbb
jno
inc
mov
add
setne
xor
or
add
js
push
and
test
pusha
inc
paddsb
mov
or
and
adc
outsb
push
popa
pop
ret
enter
inc
sbb
add
subps
mov
int
ret
add
loopne
cmc
in
enter
mov
mov
jns
adc
push
test
and
lds
cmc
add
push
shr
stos
dec
adc
jns
pop
cli
mov
xor
cmc
out
mov
jg
jmp
cwtl
stc
adc
test
add
movswl
sub
push
xor
adc
adc
je
push
popa
push
xor
test
add
nop
xor
inc
pop
mov
mov
mov
add
bound
aas
mov
mov
mov
stc
push
cwtl
push
sub
xor
inc
std
mov
mov
rolb
and
cmp
inc
pop
dec
push
xor
pop
ret
in
inc
jl
inc
push
ret
dec
cmp
adc
mov
sub
dec
lds
adc
pop
jmp
out
mov
dec
mov
jbe
dec
fnstenv
cld
push
xor
push
sbb
mov
pop
ret
mov
inc
push
ret
xor
cmp
orl
pusha
mov
xlat
popa
mov
push
rorb
popf
sub
sub
mov
pop
mov
addl
cmp
sbb
pusha
inc
subb
and
hlt
test
fs
mov
and
movb
pusha
mov
pusha
or
popa
sub
cmp
mov
rcr
add
insl
sub
push
mov
xor
jge
adc
and
or
and
pop
fs
fs
mov
inc
push
ret
jb
mov
inc
out
jmp
mulb
cmp
sbb
mov
pop
sarb
sub
sbb
in
movb
cmp
pop
sarl
push
jp
sub
add
jmp
movsl
and
fcoms
pop
ret
in
inc
pop
and
add
ret
insb
xchg
scas
cmp
aad
pop
sbb
inc
int
xor
xorl
int
dec
in
xor
mov
dec
int3
stc
or
push
stc
cmpsb
addb
mov
sar
add
mov
call
ficoms
xchg
and
pop
mov
dec
ror
sbb
jp
test
sbb
inc
inc
rorb
push
mov
or
xor
jmp
push
add
mov
xor
mov
adc
out
adc
push
xchg
xor
mov
cmc
adc
and
add
push
stc
cmc
add
xor
enter
mov
lds
cmp
loopne
add
xor
dec
jnp
xchg
adc
adc
dec
js
adc
daa
or
iret
es
push
enter
push
or
pop
and
lods
adc
dec
and
sbb
out
push
dec
mov
mov
fnstenv
inc
ss
arpl
subl
js
test
orb
cmp
adc
add
jmp
or
movsb
xor
dec
pusha
add
addr16
lea
push
pop
popa
push
cli
mov
jg
or
clc
nop
push
jle
or
and
xchg
call
adc
arpl
dec
add
or
addr16
sti
negb
cld
xor
push
fimull
and
shll
mov
mov
jno
add
lea
or
sbb
cmp
cmp
cmpb
push
push
or
pusha
mov
and
lods
add
out
adc
push
or
add
sbb
out
adc
test
adc
stc
outsb
es
pop
loope
shrl
inc
out
mov
in
pop
nop
push
and
sub
mov
cmc
push
shlb
cmpsb
add
mov
adc
test
add
mov
loop
aas
nop
fdivrs
rcrb
adc
adc
data16
sub
add
dec
das
aad
lea
cwtl
in
test
push
dec
loopne
movsl
test
in
xchg
ss
add
lea
push
cmp
jbe
nop
mov
dec
mov
mov
out
and
pop
call
iret
push
imul
les
in
das
jae
aaa
or
data16
mov
adc
mov
rorb
mov
pop
imul
sub
xchg
cwtl
adc
es
push
in
push
adc
lret
ret
pop
push
xlat
cs
jns
les
push
pusha
sahf
pusha
sbb
loop
add
je
inc
lds
jl
adc
and
lods
sub
sub
sub
rcrl
pop
fs
subl
lret
inc
sub
addl
outsl
fistpll
test
xor
push
cmp
pop
add
loop
mov
mov
daa
call
rcll
mov
fisttps
adc
loop
sbb
or
pusha
call
xchg
sarb
popf
sbb
jg
mov
adc
mov
mov
in
xor
cmp
clc
pop
mov
dec
mov
lahf
add
pop
mov
mov
jae
mov
mov
les
out
xor
sbb
xor
je
sbb
outsl
adc
sbb
push
dec
cwtl
adc
into
pop
pusha
jo
mov
push
cld
xor
xchg
and
sbb
jmp
or
adc
jp
stos
push
add
leave
cltd
push
int
dec
sub
xchg
xor
xlat
and
lds
mov
or
jno
cmp
add
sbb
mov
xor
shlb
sbb
jbe
ret
imul
fs
mov
inc
loopne
std
add
mov
js
int3
rcrl
xchg
and
mov
add
ds
cmpb
or
pop
pop
pop
call
mov
add
out
add
fadd
pop
unpckhps
or
es
addl
sti
xchg
xor
inc
xor
movsb
and
int
movsb
push
pop
lock
lea
mov
xor
sub
pop
xor
in
or
cmc
out
add
loopne
add
test
or
add
push
mov
push
mov
or
jne
xor
rcll
cltd
mov
popa
pop
orb
arpl
bound
or
loopne
call
fmuls
std
repz
dec
push
push
out
leave
jne
icebp
push
pop
inc
push
arpl
sbb
mov
subb
sahf
ret
jle
fptan
fstps
sbb
andl
or
stc
sbb
addb
fldl
ss
push
and
es
push
push
test
push
cltd
shl
pop
dec
shrb
int3
dec
jb
and
mov
sub
sbb
in
inc
push
jmp
push
and
ret
pop
ud0
dec
dec
in
push
aad
leave
out
and
sub
mov
stos
into
lods
adc
xchg
adc
add
xchg
add
in
and
cmp
or
loop
lods
add
popf
mov
rclb
xor
pusha
mov
negb
loopne
jle
add
in
fisubs
sub
pop
clc
pop
push
and
in
shl
das
adc
add
call
cmpsb
repnz
and
push
push
adc
xor
xchg
shlb
push
sub
mov
mov
mov
inc
sub
inc
pusha
loope
mov
cltd
push
fidivrl
inc
and
rclb
mov
push
subb
ror
add
sahf
cli
lock
ss
or
mov
push
jo
bound
imul
mov
pop
pop
mov
pop
push
mov
pop
in
xchg
daa
add
lret
cmp
sbb
sub
les
mov
push
cwtl
and
pop
add
or
sbb
les
xor
das
push
sub
jb
mov
xor
mov
xchg
jge
rorb
cwtl
inc
adc
pusha
or
xor
pop
stos
add
mov
orb
add
aas
add
inc
pop
or
sbb
ror
sub
add
fs
mov
movl
imul
push
pop
insb
jle
and
or
or
ret
std
inc
arpl
lods
mov
inc
adc
push
push
add
leave
add
pop
inc
mov
popl
jbe
add
sub
mov
push
add
xor
push
sbb
inc
push
mov
stos
mulb
mov
movb
jp
adc
pusha
jmp
dec
fldcw
cmp
rolb
stc
xchg
iret
sbbl
pop
mov
aad
aaa
loope
xor
mov
lock
in
push
adcl
pop
dec
cld
fldl
loope
pop
or
lds
xor
pusha
mov
mov
mov
roll
jmp
mov
add
add
out
jmp
loop
jns
or
inc
lret
push
loope
imul
add
xor
aam
aad
sbb
add
inc
and
pop
cmp
insl
lret
mov
add
xor
mov
mov
and
into
cwtl
mov
shlb
rorb
pop
fnstcw
add
roll
test
in
dec
and
push
or
pop
add
outsb
add
mov
test
add
xchg
sbb
inc
push
or
test
sbb
mov
cs
sub
lods
sbb
push
bound
lock
push
dec
push
loopne
mov
lret
dec
jge
mov
testl
jne
inc
push
fldt
dec
shrb
orl
xchg
xorb
and
push
pop
push
sub
cwtl
in
inc
dec
or
outsb
popf
cmp
mov
mov
adc
add
xor
mov
sub
test
inc
push
andb
push
or
adc
cmp
rolb
gs
outsl
xor
mov
mov
pop
add
pop
pop
adc
fsubs
lret
cmpsl
jp
hlt
out
sub
push
push
inc
push
or
sbb
pushl
lahf
lods
adc
dec
inc
push
push
pop
sub
fs
lahf
and
or
sub
mov
jge,pn
adc
or
sub
cmc
adc
push
push
ret
addr16
out
out
sub
sbb
xor
add
xchg
std
xor
pop
push
jno
add
xorb
add
xor
or
or
pusha
pop
inc
aas
pop
mov
insl
add
in
and
add
fisubs
mov
fsubl
add
lret
arpl
sbbl
sub
fs
jmp
lret
test
pop
sub
xor
push
jl
cmp
adc
loopne
mov
xor
dec
push
and
movl
adc
xor
pop
xor
loopne
sbbb
cmpsl
dec
outsl
mov
and
or
dec
cmc
sbb
jp
pop
out
push
and
xchg
je
push
addl
and
add
or
xchg
jge
ljmp
push
jne
rcrl
cmp
pusha
aad
and
xchg
and
mov
mov
out
mov
mov
mov
jno
sub
sbb
push
add
and
aas
mov
pop
xchg
and
xchg
ss
mov
rolb
movsl
pop
out
inc
sbb
leave
or
push
fsts
jnp
fiadds
adc
sti
jge
jno
mov
push
and
pop
cmp
cmp
xchg
loopne
dec
jge
mov
xchg
or
outsl
les
rcrl
sbb
add
stos
add
add
fldenv
add
add
push
in
inc
daa
or
jno
push
or
xor
cmp
pop
add
fmul
and
push
clc
cmp
sub
aaa
aas
pop
xchg
or
cmp
add
sbb
dec
add
inc
ds
or
inc
mov
push
adc
iret
inc
mov
mov
stos
mov
push
pop
mov
pop
xor
cld
paddd
sub
rclb
mov
xorb
idiv
nop
inc
dec
jno
pop
sub
pop
add
mov
jns
add
shlb
sub
popa
ss
pop
ficompl
jns
sbb
xchg
push
imul
repz
inc
xor
push
pop
pop
or
mov
xor
push
sbb
sub
fdivl
add
push
adc
lret
push
dec
adc
lods
sbb
enter
xchg
cmp
inc
js
gs
imul
outsb
retw
popa
mov
or
jae
sub
arpl
sbb
clc
ljmp
icebp
ja
jb
adc
lahf
insb
pop
jo
mov
xor
sbb
sbb
fsubs
jae
out
push
ds
jns
jne
or
sub
xorb
push
sbb
in
jmp
imul
jo
test
insb
imul
sub
and
push
fbld
and
call
movsb
pcmpgtb
push
push
mov
push
jb
call
cmp
repz
cmp
repnz
mov
pop
jb
in
sbb
cmp
pop
cmp
mov
and
fcomps
and
jge
adc
xlat
inc
pop
movsl
gs
push
insl
and
inc
inc
xor
fildl
xchg
int3
lods
out
xchg
ljmp
filds
xchg
loop
sbb
adc
jmp
adc
inc
cmp
sub
add
lea
add
push
out
outsl
jmp
push
xor
inc
push
ret
aam
add
xor
or
inc
push
xor
adc
ret
dec
sub
rcll
mov
fstpt
test
enter
cmp
test
dec
fdivrl
or
int
inc
or
or
xchg
and
nop
fcmovne
xlat
test
dec
rcrl
imul
and
bound
repz
sbb
out
or
fwait
or
or
pusha
sub
jno
mul
popf
cmp
popa
ret
dec
out
sbb
testb
rorl
and
jmp
mov
mov
pop
xchg
loop
and
fidivrl
sbb
mov
cmp
xchg
push
and
xchg
and
iret
outsl
add
mov
and
or
inc
sub
push
mov
xor
or
aas
inc
addr16
jno
in
add
and
iret
push
add
add
inc
pop
add
dec
push
inc
shll
cld
or
add
xchg
or
jo
inc
adc
mov
lret
and
ret
dec
test
dec
das
jbe
push
int3
das
mov
out
cwtl
lds
pop
push
push
sbb
dec
and
xor
add
mov
or
ds
xor
mov
mov
mov
adc
lods
mov
enter
inc
ror
stos
or
lahf
pop
adc
dec
or
in
and
fstl
adc
mov
push
jp
inc
jmp
aas
ret
pop
pop
test
push
push
outsb
push
xor
jns
push
lods
sbb
roll
inc
aaa
mov
mov
call
pop
pop
inc
pusha
xor
in
or
lods
ljmp
out
fsubrs
aam
jp
dec
and
test
and
fs
pop
mov
jmp
pop
mov
add
fwait
mov
dec
adc
cmp
inc
mov
xchg
xor
mov
pusha
jb
jp
mov
test
push
jb
add
enter
jb
ljmp
dec
sub
adc
sub
or
sub
sub
add
rol
nop
sbb
addr16
pop
push
pop
aaa
add
mov
adc
push
popf
and
movsb
ljmp
xor
mov
mov
jns
cmp
pusha
jnp
in
add
movswl
add
mov
push
mov
xchg
jns
cltd
cmp
dec
mov
push
mov
fsubrs
mov
shl
addr16
icebp
testb
jp
pusha
sub
ljmp
xchg
fistpll
cmp
rorl
or
clc
nop
in
mov
push
push
add
lea
fisttpl
dec
cmp
call
loopne
sub
loopne
lahf
inc
mov
dec
mov
outsl
dec
out
xchg
add
or
adc
mov
adc
testl
mov
mov
sbb
mov
repz
sub
ret
cwtl
dec
push
cmp
movsb
scas
push
or
mov
imul
xor
pop
cmp
movsl
out
mov
shlb
outsb
or
xchg
dec
and
dec
push
jg
jecxz
repnz
test
shll
and
add
rorb
sbb
cs
mov
je
lret
scas
pop
scas
push
and
pop
ljmp
or
xlat
sbb
or
and
mov
jle
mov
pop
icebp
ret
push
pop
mov
add
test
mov
sarb
int3
mov
or
cmpsb
inc
jle
movsl
push
xchg
add
sbb
call
outsl
rcll
mov
ljmp
or
xor
pop
mov
mov
mov
out
sub
inc
lock
mov
adc
leave
cld
add
jecxz
outsl
imul
call
sar
push
bswap
or
mov
lds
sbb
ljmp
cltd
sbb
cmp
dec
mov
cwtl
loopne
sbb
mov
and
pop
adc
xor
xchg
and
add
scas
jne
outsb
lock
fsts
xor
ds
in
add
test
mov
lock
jo
add
sbb
cmp
push
lock
xchg
or
sbb
cmpsl
mov
add
je
mov
cli
jne
adc
iret
cld
sbb
inc
pop
and
add
cld
xor
pusha
push
je
jge
arpl
bswap
cld
adc
or
out
iret
or
lret
sbbb
mov
jmp
sbb
inc
mov
sub
add
divl
and
sbb
pop
dec
and
popa
pop
inc
adc
mov
and
cld
ds
lock
pop
sbb
sbb
ljmp
xchg
or
lods
sti
add
aas
pop
add
mov
mov
ljmp
shlb
pop
sbb
dec
in
jns
or
fwait
arpl
cmp
out
push
xchg
cli
pause
test
add
sbb
jl
pop
adc
push
mov
pop
xor
loope
in
loopne
mov
add
jl
je
jb
lods
sub
mov
insl
bswap
cld
pop
enter
inc
and
add
ficompl
dec
sar
fs
call
aam
in
test
lret
add
xchg
inc
rcll
outsb
mov
adcb
adc
out
mov
lds
frndint
sbb
or
inc
outsb
leave
dec
scas
rclb
cmp
push
xor
mov
dec
cld
or
mov
cmp
clc
and
leave
rcrb
xor
mov
mov
ljmp
mov
in
add
popa
sub
shrl
cmp
enter
movsl
int3
ss
daa
and
sub
sbb
int
cli
add
gs
xor
icebp
testl
loopne
in
sub
out
subb
pusha
clc
mov
cli
cmp
int3
daa
pop
out
dec
int3
enter
sarb
push
enter
push
or
out
data16
movsl
test
pop
add
cs
mov
mov
gs
je
mov
cld
in
pop
mov
dec
sub
xchg
scas
iret
or
sub
addr16
and
imul
add
mov
cmc
xor
pop
int
adc
push
mov
push
movsl
cwtl
lahf
cwtl
jle
or
xor
mov
adc
fimuls
inc
push
add
popa
rcl
call
cmp
test
repz
bound
mov
sbb
dec
iret
cmp
arpl
add
call
sahf
and
mov
cltd
push
nop
repz
cmp
imul
ret
mov
push
sub
cwtl
adc
add
sarb
jae
and
sbb
insb
mov
push
mov
jp
dec
or
adc
stc
add
and
add
xchg
jecxz
dec
int
dec
clc
mov
mov
fistpl
pop
mov
incl
add
cs
inc
fs
ret
ljmp
jmp
pop
jne
repnz
dec
or
add
out
loopne
gs
xor
jl
jge
out
and
ss
cli
test
and
jle
jno
imul
andb
pop
mov
xor
arpl
mov
je
popl
xor
loopne
ret
int
mov
fiadds
adc
jp
sub
push
dec
xorl
add
mov
cmpb
xorb
xchg
or
bnd
mov
cmpsb
lock
rcrb
or
aas
iret
add
jno
xchg
std
sahf
xor
jmp
sbb
icebp
push
fbstp
mov
les
xchg
add
mov
dec
loope
loope
xor
and
test
mov
lahf
sub
xchg
or
mov
popf
jo
dec
stos
sbb
jmp
stos
push
aam
sbbb
fs
push
pop
xchg
or
jbe
into
movsl
lods
jns
loop
mov
mov
mov
std
pavgb
or
sub
inc
jbe
mov
jnp
jbe
daa
cwtl
add
test
or
inc
sub
inc
jl
inc
xchg
cltd
test
sub
inc
xor
cmpsb
mov
or
add
repnz
mov
outsb
inc
add
outsl
test
imul
hlt
xor
inc
push
std
int
add
cmpsl
adc
jo
inc
mov
shlb
dec
bnd
pop
bound
rolb
andps
push
loopne,pn
cli
xor
mov
aam
or
and
adc
lret
in
bound
jne
inc
roll
xorl
pusha
lahf
adc
push
leave
repz
sbb
addr16
das
add
jmp
rcr
jno
sub
enter
dec
notl
jmp
jb
in
sti
add
lea
add
mov
shrb
les
dec
xlat
lock
rolb
and
mov
add
mov
mov
add
sub
fldl
out
in
lahf
mov
fbstp
pop
ds
test
pop
cltd
lods
inc
jne
out
ret
sbb
or
add
mov
cmpsl
cmp
push
insb
pop
inc
outsb
fsubs
mov
dec
cmp
in
lock
cmp
mov
ret
mov
jl
mov
fdivl
loopne
xorb
sub
fildl
pop
insl
sub
adc
jg
and
push
adc
imul
lods
push
filds
hlt
clc
adc
xchg
mov
jge
push
mov
lock
mov
push
add
sub
dec
jp
inc
mov
xor
fwait
add
mov
movsb
flds
pop
mov
fisubrs
loope
jg
cwtl
je
sbbl
add
mov
xor
loop
jb
add
shl
push
clc
pop
cmp
js
stc
xlat
fiadds
shll
adc
sub
add
ror
adc
sub
pop
lret
divl
sub
push
jecxz
movsl
sbb
fistpll
xorb
repnz
scas
add
push
and
fs
ror
nop
arpl
cmp
cmpb
cmp
lcall
shll
cs
sub
inc
or
mov
dec
outsl
jp
leave
lahf
xor
xor
movsb
popa
adc
aas
push
add
imul
sbb
adc
fnstenv
movsl
sti
adc
andb
loopne
mov
rclb
sub
jo
add
mov
xchg
or
and
xor
cmp
cmp
mov
dec
fcompl
pop
xor
pop
add
or
sbb
shlb
jno
add
imul
cmpl
into
lahf
add
in
inc
jns
mov
clc
das
and
add
mov
mov
xchg
hlt
addr16
cmp
and
lods
cmpsb
aas
mov
jbe
fiadds
scas
jno
mov
mov
jo
sub
lcall
outsb
add
subb
cli
mov
je
scas
xor
stc
cmp
add
jg
xor
popa
mov
sub
rolb
pusha
mov
cltd
xlat
popa
str
sbb
sub
in
daa
mov
in
mov
add
xchg
inc
fisttpll
stc
pop
jno
js
dec
sbb
add
jmp
push
cmp
or
and
add
add
js
xchg
xlat
and
pop
xchg
in
adc
loopne
jbe
mov
pop
inc
adc
orb
aam
fbstp
mov
add
xor
dec
into
addl
cmp
or
dec
fistps
in
xor
dec
mov
add
jg
in
in
mov
dec
xchg
cs
or
mov
sbb
mov
arpl
subb
adc
xor
cltd
mov
test
sbb
push
into
jb
adc
mov
les
mov
outsl
cld
pop
or
mov
popa
xchg
mov
lods
inc
add
mov
push
xor
mov
sub
adc
pop
adc
pop
cmpsl
add
lods
add
adc
add
shr
call
xlat
mov
mov
add
adc
cmp
fadds
mov
lret
fildl
cmpsb
add
les
mull
arpl
bound
std
or
inc
mov
or
cmp
jge
ret
and
mov
push
adc
sarb
imul
push
fst
dec
shlb
xchg
mov
sub
cld
loope
add
pop
iret
divb
arpl
scas
mov
cmc
xchg
pop
sbb
movsb
fucomi
dec
enter
xchg
mov
pop
add
jecxz
and
pop
mov
push
aam
sbb
outsl
popf
push
adc
cmpb
pop
jno
stos
add
xchg
sbb
idiv
jmp
jecxz
outsb
ret
push
push
add
push
xor
mov
xchg
add
rorb
inc
cmpsb
jo
and
stc
xor
sub
inc
std
adc
pop
xchg
loopne
icebp
pop
sub
pop
hlt
add
enter
mov
or
loopne
clc
push
inc
add
call
cmp
inc
sbb
cmpb
mov
sbb
xchg
je
movsb
lods
dec
shr
sbb
adc
int
and
cmc
push
push
add
cmpb
push
bound
add
mulb
dec
inc
js
iret
into
pop
frstor
fsub
add
ds
mov
rolb
push
das
mov
sbb
add
stos
inc
lock
repz
xor
std
jb
or
push
cmp
in
add
lods
mov
push
cltd
fisubl
pop
scas
xchg
lret
faddl
jmp
rol
mov
jnp,pt
insl
cmp
jle
and
jns
pop
ss
adcl
mov
test
fdivs
mov
cld
sbb
jo
repz
push
mov
pop
lock
inc
xchg
std
js
or
enter
rcrb
mov
and
xor
jle
sbb
add
cmp
cmp
push
bound
push
xchg
push
dec
ljmp
mov
jne
lret
add
pushf
cmc
pop
addr16
mov
loope
in
xor
ret
aaa
popf
movsb
push
ja
addl
jge
stos
push
out
add
imul
mov
nop
jae
pop
xchg
sub
in
add
cld
imul
icebp
jg
mov
fwait
in
cmp
fisubrs
or
mov
or
test
sub
add
pop
ljmp
or
mov
hlt
lods
ret
xor
dec
out
add
aad
or
push
ss
lcall
add
mov
pop
mov
sub
push
xchg
pushf
rolb
mov
aam
sbb
jg
icebp
sub
xor
repnz
inc
xchg
nop
fcoml
cmpl
and
xor
loop
dec
je
jmp
ljmp
lods
std
pushf
je
add
in
mov
adc
cmp
pop
in
cmpsl
sti
xchg
mov
ret
gs
xlat
and
pusha
add
into
lret
pop
mov
mov
js
arpl
and
loop
rcrb
out
xlat
test
outsb
jp
cld
lock
hlt
and
loope
sub
pusha
add
mov
pop
in
or
das
fscale
imul
push
movsl
push
test
out
push
pushl
rcrb
jne
mov
push
enter
ret
adc
cmp
mov
gs
add
pop
popa
and
jb
int
jl
test
add
mov
cmpsl
jg
les
cmp
pop
add
scas
ja
mov
popa
mov
pusha
cmpsb
inc
jge
add
addr16
ret
push
push
imul
jae
cmp
sbb
setp
sub
inc
inc
mov
cwtl
fadds
add
dec
pop
in
mov
and
mov
cs
or
add
jo
pop
outsb
add
je
inc
fcompl
add
fwait
popf
outsb
add
cmp
add
lods
enter
shrb
test
addl
jo
ret
cmp
pop
fnsave
add
stc
das
jno
mov
popa
or
sub
dec
insl
fldl
ss
ljmp
std
pusha
xchg
inc
mov
add
ljmp
cmc
add
insl
js
xor
pop
add
xor
pop
sbb
cmpsl
lock
add
das
sti
sbb
mov
add
push
sbb
mov
dec
fcomip
pop
sarb
add
sub
mov
dec
inc
test
cmp
sbb
shl
push
fimuls
sub
xlat
cmp
mov
sub
xchg
cmc
stos
dec
ret
lods
add
add
or
and
ja
nop
inc
and
icebp
mov
sbb
js
enter
mov
mov
dec
xchg
and
leave
movsb
rcll
cmp
jg
negl
and
xchg
pop
sbb
inc
enter
cmp
je
add
inc
pushf
sub
add
jle
push
add
scas
jp
ja
pop
add
and
aas
pusha
ljmp
stc
jae
aaa
push
add
outsl
mov
orl
jnp
dec
cld
stc
rolb
outsl
cmp
cmovae
xor
cli
pop
hlt
jmp
add
mov
insl
adc
push
mov
divb
pop
mov
adc
or
adc
and
mov
arpl
add
add
rclb
add
cld
sahf
icebp
jmp
outsb
popa
jnp
pop
pop
ret
loope
ja
cltd
hlt
xchg
adc
mov
add
xchg
repnz
imul
or
lea
ret
and
fcoms
xchg
inc
ljmp
mov
adc
inc
pop
xor
test
stc
pop
sub
cli
push
cld
or
push
or
fdivrl
sbb
daa
fbstp
mov
mov
add
push
push
pop
out
dec
push
inc
add
or
mov
add
iret
add
sub
add
scas
jbe
lret
dec
add
lods
clc
or
data16
fcomps
loop
add
lahf
repz
aaa
push
xor
imul
or
ljmp
jmp
cwtl
adc
testb
mov
popf
cmc
sbb
lock
sub
cmp
dec
pop
stc
in
mov
add
mov
jecxz
pop
push
loopne
cld
stos
add
repz
jno
inc
pusha
dec
sbb
cwtl
test
dec
lock
test
and
call
mov
push
inc
fisttpll
ret
add
cld
pop
iret
push
in
add
sub
mov
inc
xor
add
jmp
cmp
mov
xchg
jo
hlt
push
mov
xchg
decl
jge
add
fsubrp
add
jmp
dec
leave
stos
sbb
clc
sarl
push
loop
cmp
mov
js
mov
sub
pop
addb
add
into
xchg
rorb
or
dec
cmp
jmp
add
adc
daa
add
inc
repz
lret
loopne
cmp
add
sub
jmp
mov
cmp
fisttpl
inc
add
fwait
clc
popa
test
xchg
int3
fstps
add
jle
or
pusha
out
aaa
adc
pop
call
mov
shlb
stos
lock
add
movsb
adc
add
and
and
popf
and
cwtl
repz
sbb
and
add
in
mov
jmp
je
sub
lods
rolb
mov
jns
pop
leave
add
int3
lods
fldt
xchg
pop
add
into
out
pop
push
out
add
adc
push
add
outsl
sbb
pop
adc
add
jmp
aad
leave
mov
jg
mov
jbe
incl
jae
popf
xor
or
pop
cltd
fstps
and
aas
popa
lods
add
int3
sti
or
and
daa
inc
jl
rcrb
cmp
fnstsw
out
incl
shlb
out
lahf
ljmp
pop
pop
in
xor
nop
sub
jle
fsubr
xchg
jmp
cwtl
sti
add
jo
popa
adc
add
pop
lret
je
add
fadds
fmulp
test
xor
inc
subl
lret
aas
inc
add
bound
add
pop
enter
jecxz
add
add
out
and
outsl
psubq
pushf
cmpsb
mov
sbb
push
or
jns
xor
enter
sbb
mov
pop
add
cmp
push
inc
cli
call
jge
sub
lods
fistps
fxch
add
jge
lcall
add
inc
enter
push
std
scas
dec
add
cmp
test
shrb
out
mov
ds
xor
notb
mov
mov
and
out
dec
lock
push
loop
clc
push
fists
add
loope
add
mov
mov
adc
add
push
aam
rorb
repz
mov
fwait
inc
jle
add
bnd
das
sbbb
nop
std
test
and
add
jp
hlt
xchg
scas
ja
test
pop
pop
insb
nop
jae
inc
mov
mov
test
dec
shr
mov
add
insl
add
add
cmpsl
pop
out
je
xor
cld
adc
movsl
add
subl
andb
lea
shr
dec
xor
enter
adc
cmp
pop
rolb
nop
mov
xor
lea
mov
cmp
jmp
jle
push
xor
xor
pop
inc
mov
xchg
cmc
add
sti
mov
dec
or
movsl
stos
nop
cmp
into
add
lea
or
add
inc
cmc
mov
ficomps
test
cmp
add
lds
xchg
ljmp
or
push
out
add
ret
inc
in
je
sub
mov
rorl
jae
and
jbe
cmovb
and
test
test
add
enter
stos
ds
sub
lods
mov
pop
pop
in
xchg
pop
push
mull
js
add
pop
fcmove
sbb
ja
in
fwait
cmp
addr16
add
mov
pop
outsb
jg
and
jp
add
cmp
mov
stos
dec
scas
les
inc
add
scas
inc
stos
push
fimuls
dec
mov
pop
dec
ror
mov
inc
inc
xor
ficoms
mov
mov
add
fisubl
jb
push
add
cmc
test
ss
pop
xchg
bnd
add
push
sbb
or
lcall
add
std
push
add
es
hlt
inc
push
in
sbbb
rcr
xor
dec
das
push
jge
mov
pop
cwtl
cmp
popf
add
mov
add
lcall
add
insb
gs
cwtl
ret
aas
ljmp
push
loop
scas
je
fstl
cmp
addb
add
cli
call
sahf
movsb
lds
in
scas
pusha
std
and
bound
jg
jbe
mov
fiadds
xor
cmp
cmc
and
sbb
test
cmpsl
fdivl
fiadds
mov
sub
in
push
add
jmp
xor
imul
cmpsb
or
into
pop
enter
sbb
lock
movsb
sarl
cwtl
iret
incl
addr16
inc
push
cmpsb
aam
jo
and
sbb
adc
addb
ret
or
xor
out
loopne
mov
add
dec
sbb
and
lods
pop
or
sub
cmp
pop
cmp
sbbl
mov
add
inc
in
fucomp
rolb
push
pop
fisubl
add
sbb
mov
lds
pop
cli
dec
xchg
fadd
gs
or
int3
mov
sub
shlb
mov
ficomps
inc
icebp
dec
sub
and
popf
cld
add
add
lret
jg
add
xor
jb
push
popf
xor
arpl
adc
ds
rorb
inc
in
jmp
lods
cmc
nop
loope
popf
je
outsl
add
mov
imul
mov
andb
jne
or
dec
flds
enter
xchg
pop
add
pushf
jns
in
or
lret
roll
iret
pop
mov
add
xchg
pop
fcomp
fnstcw
add
pop
in
sub
jecxz
testb
mov
inc
hlt
mov
pushf
insl
mov
imul
cmp
test
xchg
sbb
stc
fnstsw
add
test
xorb
add
scas
add
jnp
and
in
mov
pusha
jecxz
mov
pusha
xchg
gs
mov
push
or
mov
mov
sbb
push
ss
popf
inc
dec
push
dec
add
pop
mov
sbb
rclb
out
pop
mov
adc
sub
pop
pop
mov
scas
test
sbb
add
pop
sub
lea
inc
add
cmp
add
adc
jnp
arpl
jecxz
mov
in
gs
mov
arpl
ljmp
enter
outsb
out
xor
lea
jns
dec
pop
mov
aas
push
scas
sub
lods
mov
mov
xor
jmp
shlb
adc
lock
jae
add
ss
imul
pop
out
paddsw
andl
mov
shr
cmp
cmpsl
ds
in
stc
das
or
fcmovnu
or
sbb
in
enter
cli
fistpll
dec
cmp
add
scas
lock
xchg
adc
jmp
fs
sub
dec
hlt
icebp
repz
mov
add
lods
mov
loop
mov
cmp
add
sub
test
pusha
clc
jle
lahf
int3
inc
mov
out
sub
jg
dec
and
mov
ljmp
and
jno
xchg
pop
lock
add
inc
roll
add
xchg
nop
push
jbe
arpl
xchg
inc
jb
nop
pop
mov
add
fs
xor
mov
pop
in
arpl
add
xchg
xchg
pop
add
je
jbe
xor
ret
dec
mov
sbb
enter
fsubr
lea
mov
lret
mov
xor
jle
ja,pt
test
pop
addr16
sbbl
daa
call
sahf
sub
xchg
clc
lahf
fbld
xor
cmpsb
insl
push
jo
fstps
cwtl
ljmp
andb
setle
out
xor
lods
mov
add
fwait
cmpsl
ret
cmp
lods
sbb
or
fsubrs
movsl
dec
dec
fwait
jne
pop
add
dec
jb
dec
adc
mov
mov
daa
add
in
xor
loope
sub
ljmp
out
adc
add
ret
mov
lods
jne
add
daa
and
ret
test
movl
js
mov
ljmp
inc
sub
test
addr16
xchg
adc
das
and
or
jns
roll
stc
dec
and
and
adc
sahf
inc
cmp
lock
mov
mov
pushf
inc
push
pop
test
mov
inc
push
dec
test
ret
dec
and
test
and
push
out
adc
adc
mov
or
adc
ret
mov
or
add
inc
push
iret
es
ficoml
add
shlb
dec
jo
dec
pmulhw
and
test
dec
int
inc
mov
mov
or
subb
insb
cmp
and
pop
dec
add
sub
jb
adc
imull
add
add
std
repz
pusha
ret
push
pop
fdivr
jle
add
jnp
mov
sarb
addb
sbb
aaa
add
leave
cmp
movsl
inc
or
shl
test
mov
jge
push
xchg
roll
movsb
bound
inc
shrb
pop
push
cmp
add
jo
je
add
shlb
inc
jae
add
test
sub
add
and
dec
scas
adc
iret
xor
cltd
pop
jnp
out
int
mov
add
sub
hlt
popa
xchg
mov
mov
cmp
dec
dec
lds
mov
add
pop
push
movb
stos
sbb
xor
je
add
push
push
aam
xchg
incl
and
mov
mov
int3
cmpsl
aaa
pop
dec
imul
and
sti
fdivrs
and
sarb
pop
dec
push
cld
loopne
push
test
cltd
push
lea
cmp
pop
loope
cwtl
sbb
push
cld
les
or
ret
andb
adc
std
and
xorl
addb
jnp
xor
int3
push
test
stos
mov
hlt
inc
add
or
sbb
xor
cli
lds
jne
into
add
push
pop
mov
pop
xchg
add
nop
add
out
add
hlt
aam
mov
insb
dec
add
stc
or
and
lods
loop
push
cmp
ja
sbb
mov
sbb
sbb
inc
mov
test
in
add
mov
pop
mov
arpl
xorb
inc
outsl
pop
imull
add
imul
add
mov
and
jge
mov
push
pop
int
add
pop
jp
fiaddl
add
loopne
clc
push
ret
outsb
dec
rolb
adc
adcb
jl
lcall
lret
cmp
jle
push
add
push
pop
faddl
xchg
test
push
jl
xor
aaa
cli
outsl
stos
adcb
dec
mul
xchg
les
cmp
pop
mov
aas
sahf
cld
adc
mov
add
sub
cmp
cmpsl
pop
pop
mov
lcallw
es
pop
add
clc
jbe
in
jb
cmp
xor
mov
add
fadds
sarl
push
cmpb
test
jne
push
ret
sbb
sbbb
jno
push
mov
pop
arpl
test
fadds
out
mov
lcall
mov
lods
sbb
mov
add
pop
lods
mull
fcompl
sti
and
andb
mov
add
loopne
clc
cltd
mov
mov
outsb
sub
add
push
or
pushf
jb
mov
adc
inc
clc
add
jmp
jo
out
add
sub
jp
push
xlat
xor
inc
jo
or
sub
pop
mov
pop
mov
cmp
inc
adc
in
test
mov
sub
ret
lea
daa
psubd
sub
pusha
pushf
cwtl
sbb
imul
add
sbb
das
ret
leave
pop
mov
push
shl
adc
adc
xchg
int3
sub
or
andb
in
dec
sbb
or
loopne
repnz
ss
add
lds
fcomps
pop
mov
mov
and
iret
pop
add
xor
aaa
adc
jl
jmp
jnp
jg
mov
fs
add
aam
push
mov
adcb
insb
mov
add
inc
xchg
push
push
jae
add
cmpsb
push
in
das
les
enter
adc
inc
sbb
cmp
mov
les
dec
in
pop
add
arpl
mov
mov
stos
push
hlt
or
mov
dec
int3
mov
test
pop
xorb
in
jbe
cmp
fmulp
icebp
mov
repnz
jns
imul
pusha
add
push
jle
dec
xor
push
add
mov
mov
add
outsl
movl
sub
cmpsl
mov
pop
fcompl
mov
orl
lock
add
inc
scas
iret
out
add
stos
cmc
clc
fadds
pop
insl
pop
add
call
cmp
subl
int3
jecxz
add
and
out
fimull
push
ss
xor
mov
fs
sub
pop
jo
add
aas
adc
leave
inc
inc
icebp
stos
push
jg
mov
sub
das
or
clc
mov
sarb
add
jb
imul
je
xchg
cmp
fs
add
testb
mov
xor
dec
adcb
add
call
pop
pop
push
pop
pop
xchg
sub
mov
negl
add
add
xchg
push
lock
imul
cmpsb
sub
add
ror
dec
push
inc
mov
cli
inc
push
aad
inc
jo
jb
maxps
enter
or
nop
es
dec
jge
push
stos
in
popf
add
and
addr16
arpl
push
xor
xchg
data16
or
xor
pop
lea
cld
jecxz
add
mov
in
std
or
add
add
xchg
lods
pop
xchg
pop
adc
mov
dec
add
loop
sarl
lahf
jg
inc
or
into
add
cltd
lods
or
jmp
mov
faddl
popl
mov
cmp
mov
aaa
jb
add
mov
in
and
insl
pop
lcall
pushf
nop
ret
cli
mov
subl
sub
add
mov
rolb
repnz
mov
pop
sbbl
pop
or
inc
add
jbe
pop
cmp
sti
loope
orb
test
imul
push
add
inc
loopne
sub
test
repz
pop
xor
mov
movsb
lret
or
jb
in
fs
ret
add
xchg
cld
mov
push
xor
cli
mov
sbb
lods
cmp
mov
xchg
not
dec
mov
xchg
clc
loopne
ficoms
mov
daa
popa
pusha
mov
pop
pop
lock
popf
ret
aaa
in
cmpb
sbb
pop
pop
data16
out
icebp
xlat
mov
mov
outsb
mov
mov
jmp
add
in
std
xchg
fiaddl
lea
int
and
add
pop
repz
into
rcrb
or
and
jbe
jle
or
inc
mov
lods
add
call
ds
add
lahf
jp
ffreep
add
std
sbb
inc
out
pushf
xchg
repnz
or
add
iret
stc
call
bound
push
fiaddl
fcomps
add
and
pop
out
popa
loopne
and
lods
add
xchg
jno
fiadds
cmpsl
gs
cmp
inc
and
shlb
loopne
movsb
movsl
fsubrl
sbb
jae
mov
and
mov
dec
lods
shrb
add
mov
mov
sbb
pop
in
rclb
xlat
jnp
add
loopne
repnz
out
mov
arpl
or
movsl
fs
push
mov
or
inc
pop
adc
lret
adc
cli
out
add
ret
mov
push
js
fs
test
cli
add
mov
dec
add
lods
rolb
mov
adcl
pop
iret
std
push
dec
push
je
cmp
call
jl
emms
outsb
adc
and
jle
mov
lea
inc
jl
stos
sub
std
jp
loopne
xor
xor
imul
push
add
ret
jns
lldt
cmp
dec
mov
pop
stos
rcll
clc
and
aam
fldl
sbbb
add
into
mov
pop
lret
cli
adc
test
sub
sub
sbb
shlb
lock
pop
leave
add
push
shrb
jle
jmp
fldenv
and
ss
ret
rol
cmp
cmp
sbb
rolb
inc
mov
in
add
and
add
mov
arpl
or
loopne
lock
mov
mov
repnz
roll
pop
jbe
mov
sub
mov
add
out
add
mov
add
outsl
push
sub
mov
add
shrb
psubsw
loopne
xchg
cmp
fstl
shlb
or
stos
subb
dec
or
or
stos
loopne
dec
psubw
in
mov
and
or
out
sbb
hlt
fmull
iret
mov
repnz
mov
jns
inc
negb
xchg
mov
sub
or
cmp
add
and
adc
mov
test
and
pop
jne
add
rclb
push
add
shll
inc
add
push
mov
repz
repnz
add
xor
mov
lods
mov
aaa
pop
imul
inc
mov
loop
add
das
inc
sbb
cli
adc
and
inc
jo
lahf
cmpsb
dec
cwtl
push
dec
xor
add
sbb
jecxz
cmp
pop
loope
push
push
mov
insl
push
add
mov
add
cmp
sbb
add
addl
add
call
adc
jae
xor
add
in
out
sbb
add
ret
shlb
add
xlat
cmp
jmp
xchg
and
mov
pop
imul
loope
pop
cli
add
iret
cmc
dec
dec
add
add
or
nop
cmp
lock
loopne
shl
and
fdivrp
ret
flds
adc
imul
sub
in
pmullw
push
push
mov
mov
enter
xchg
xor
mov
outsb
add
mov
dec
out
add
pusha
cmc
pop
rolb
sahf
shl
xor
lret
sub
cmp
sti
faddl
mov
insb
inc
es
add
fmuls
pop
lds
jecxz
cld
jno
push
cmp
mov
jge
mov
add
or
fwait
add
hlt
in
aas
mov
sti
jmp
icebp
daa
mov
add
rclb
orb
push
dec
pop
jl
xchg
xlat
adc
cwtl
pop
push
aad
arpl
rolb
jbe
push
pop
mov
mov
push
and
lea
add
mov
call
scas
cli
shl
xlat
mov
push
pop
xchg
rorb
out
mov
pop
sbb
stc
aam
dec
add
out
pusha
jecxz,pn
jbe
or
xor
add
imul
adcl
push
xor
lock
pop
out
add
orl
adc
test
clc
sbb
sbb
dec
cmp
mov
mov
pop
inc
inc
in
mov
jno
cmp
or
scas
aam
loopne
jle
xor
xchg
add
popf
mov
xor
out
cmp
add
or
push
push
outsb
int3
test
mov
stos
lock
lea
mov
jb
or
sub
pop
repnz
jbe
je
mov
push
shll
sbb
nop
in
mov
cld
inc
ss
push
xchg
daa
mov
xor
sbb
scas
clc
cmp
xlat
xor
jbe
int3
out
mov
jp
push
and
pop
cwtl
push
mov
call
loopne
push
or
mov
sbb
or
mov
repnz
cmp
cmp
test
loope
in
push
lret
mov
pushf
mov
add
out
or
xor
add
jl
imul
push
int
push
add
call
or
xlat
xchg
add
aas
jno
add
xorl
jbe
and
sub
mov
mov
hlt
aas
in
sbb
xchg
repnz
mov
js
pop
mov
or
pop
add
ja
push
mov
add
mov
int3
cwtl
inc
pusha
aas
lret
cwtl
sub
jnp
add
push
addl
bound
scas
cmpb
push
pop
add
pop
into
cmp
cltd
movsb
add
add
aam
pop
cmp
xchg
cwtl
pop
cmp
sti
mov
mov
jne
imul
scas
jne
add
push
lods
mov
dec
mov
ljmp
sub
fwait
pop
pop
jno
add
xor
dec
jle
sub
jmp
daa
pop
add
xchg
pop
add
aaa
sub
lds
cmp
cmp
xor
mov
push
gs
outsb
pusha
add
loop
mov
ss
xor
cvtps2pi
adc
incl
and
fcoms
cmp
test
add
lcall
add
into
rol
imull
add
fadds
push
aad
add
cmp
rolb
cmp
xlat
lds
pushf
and
mov
movb
daa
pop
rcrb
jp
scas
add
mov
lea
orb
sub
and
in
add
out
repnz
push
jb
fildl
inc
add
add
or
cld
add
hlt
repz
sbb
pop
iret
stc
mov
lret
popf
cld
jbe
arpl
js
add
out
sub
and
lods
add
iret
divb
test
cli
jb
inc
adc
imul
xchg
outsl
cmp
add
fistpl
add
insl
repz
and
inc
outsb
adcb
fwait
js
or
add
adc
sub
insb
shll
cmp
add
fistpl
add
jl
je
sbb
xorb
aas
cmp
mov
mov
sbb
fcoml
mov
dec
movsb
sbb
lret
fwait
les
inc
cmp
pop
out
jne
roll
add
adcl
xchg
cmp
add
aas
or
les
xchg
ljmp
adc
nop
js
or
xchg
jns
lods
repnz
cwtl
shr
cmpsl
add
adc
xchg
jp
jo
mov
insl
inc
fildl
add
adc
stos
add
aaa
bound
ja
sbb
xchg
push
inc
in
push
jno
and
ds
dec
xor
add
xchg
xorb
testb
cli
add
pop
add
aaa
add
jae
rolb
movsb
push
mov
cmp
mov
or
nop
cmpsl
push
movsl
sbb
lret
lahf
in
xchg
cmp
int3
add
daa
ja
imul
add
repz
aaa
cwtl
in
es
hlt
add
add
shr
pusha
dec
cs
nop
adcb
jp
mov
loopne
int3
mov
or
mov
inc
clc
rol
add
adc
ds
insl
loope
cli
in
dec
adc
rolb
jmp
sbb
movsl
repnz
pop
push
sbb
into
clc
loopne
dec
sub
cwtl
hlt
push
sbb
cmp
inc
js
add
les
popa
and
sbbl
sub
rcr
dec
mov
sub
movsb
aam
lods
ret
add
aad
fsts
into
repnz
add
push
cmpsb
ret
repz
nop
mov
xor
add
mov
add
cld
and
call
sbb
shl
jno
jmp
push
cmp
mov
lcall
je
sub
outsb
dec
loope
inc
jbe
inc
fdivr
add
push
cmp
mov
ret
mov
rol
pop
test
mov
sub
stos
adc
movsl
rclb
test
movsb
add
xor
cmp
xchg
pop
sub
or
jo
sahf
or
mov
movsl
mov
test
or
xchg
das
shrb
add
xchg
cld
lret
inc
mov
or
outsb
sbbl
sti
mov
repz
mov
mov
cltd
fmuls
rclb
mov
sbb
sti
jbe
loope
cmc
add
enter
xchg
xchg
inc
lret
sub
cmovo
repnz
mov
or
dec
dec
je
adc
lret
sub
mov
pusha
add
fildll
mov
or
shrb
mov
mov
pop
or
adc
aam
int3
cmp
repnz
bound
outsl
adc
dec
xchg
add
ficompl
lods
jnp
xchg
pop
adc
loopne
call
cmp
mov
inc
iret
addb
arpl
inc
mov
js
aad
or
fildl
in
mov
pop
add
ret
inc
repz
dec
mov
push
add
imul
jo
xor
push
cwtl
jno
add
lea
cmp
out
sbb
sub
mov
add
mov
scas
mov
sbbb
pop
pop
push
aad
out
push
fucom
xchg
call
stos
in
mov
icebp
jo
outsl
aas
lea
aaa
xor
jle
jg
cmp
push
je
add
popa
add
decb
clc
mov
out
add
mov
arpl
bound
add
and
loope
fisubrs
cwtl
add
jns
push
stos
mov
push
cld
mov
or
mov
add
sbb
pop
aad
pop
and
adc
or
add
movsb
sbb
sbbb
movsl
add
daa
add
xor
je
or
cmp
jmp
add
xchg
xor
sti
in
dec
add
fstl
lods
mov
push
cmp
pop
ficoml
or
xor
inc
movsb
sub
mov
adc
xchg
pushf
add
jnp
clc
daa
cmpsl
sti
inc
out
shlb
dec
jg
incl
push
sub
mov
cmpsb
push
movsl
or
add
cmp
mov
fwait
pop
dec
or
lret
add
jns
aas
sbb
call
add
and
or
les
sub
inc
not
popa
repnz
mov
in
fdiv
mov
or
mov
ja
dec
bound
cmp
pop
add
daa
mov
int3
dec
push
orb
pop
ficoms
sub
clc
mov
add
cld
addl
mov
mov
jbe
lret
lldt
xchg
test
out
ja
add
xchg
or
xor
cmp
mov
test
inc
outsb
adc
lods
and
addb
sub
out
test
data16
add
aad
add
add
cmp
sbb
daa
xor
add
test
add
xor
jo
push
inc
cmc
enter
nop
jnp
sbb
loop
inc
sbb
add
push
push
addb
das
push
mov
add
inc
xor
push
jle
or
cmc
rcrb
and
pop
cmp
mov
and
rcll
and
add
pop
push
int3
mov
sub
jnp
pop
adc
pop
insb
out
inc
cmpsl
rorb
sub
xchg
jmp
adc
aas
add
cmc
rclb
mov
adc
mov
push
mov
pop
sldt
sbb
sbb
pop
mov
push
in
mov
sub
cli
out
add
mov
pop
flds
jge
push
roll
dec
push
mov
inc
aad
arpl
and
mov
cmp
repz
cltd
mov
stc
inc
pop
mov
jno
or
mov
sar
aas
fnstenv
pusha
nop
pop
mov
xor
jne
fsubp
imul
cmpsb
sub
add
aam
bound
dec
lods
add
xchg
lahf
mov
xchg
push
mov
push
rcr
push
imul
add
push
scas
in
lock
pusha
add
sbbl
es
push
cmpsl
enter
sub
push
inc
lcall
inc
mov
je
sub
cs
es
jl
sub
dec
ret
wrmsr
lds
mov
lahf
mov
pop
mov
add
mov
sarb
add
and
outsl
shlb
addl
sub
push
pop
addb
add
loop
aam
test
jno
nop
ficoml
outsb
add
xor
clc
jo
xor
pop
push
add
mov
and
xchg
sbb
dec
cmp
adc
incl
xchg
sub
sar
mov
mov
icebp
xchg
xchg
data16
pop
iret
mov
fildl
aas
add
popf
xorb
inc
lds
sarb
adc
jne
cmc
add
jno
aam
std
pop
mov
rcll
cli
or
call
sbb
fwait
shrl
sub
inc
add
aaa
push
out
pop
add
lcall
pusha
mov
lret
loopne
add
fstl
ja
test
sub
daa
jbe
test
sarb
out
add
pop
repnz
mov
and
push
add
cmp
dec
push
jmp
mov
mov
add
scas
xchg
or
push
mov
and
je
add
iret
push
pop
add
cmpsb
jge
dec
bound
or
cmp
sub
add
and
xor
je
in
call
repnz
inc
sub
jg
in
dec
add
pop
mov
daa
mov
loop
scas
pusha
cmpsl
lret
lds
lea
and
sbb
mov
das
je
add
jae
jecxz
xchg
xchg
rcll
and
mov
call
mov
repz
icebp
dec
ds
mov
sbb
rclb
insl
inc
sahf
lock
add
sbb
add
sub
jno
add
xor
pusha
aam
add
and
adc
sub
rorb
sarl
in
jecxz
add
scas
cltd
add
xrelease
push
sar
xchg
fmuls
inc
jge
call
push
cmp
mov
adc
ret
insb
lods
jns
rorl
dec
pop
sbb
xor
mov
loope
bound
adc
icebp
add
out
mov
mov
or
xor
add
scas
je
sub
dec
add
mov
or
aas
add
out
jl
out
mov
mov
imul
int3
stos
adc
clc
jle
cmovs
inc
adc
cmp
push
pop
fnstcw
push
addr16
or
ljmp
xchg
int3
hlt
es
mov
icebp
cwtl
lods
jae
stos
loopne
inc
fs
mulb
aad
jp
push
inc
cmp
inc
push
xor
sub
xchg
add
xchg
or
inc
insl
lcall
addr16
sti
rcrl
adc
add
repz
xor
xlat
jp
sub
fildll
xchg
inc
pushf
adcb
sahf
cmp
mov
inc
and
pusha
mov
add
cli
push
cmpsl
sbb
push
push
les
pop
or
fcoml
push
imul
add
ficompl
add
lods
aad
es
push
pusha
and
jns
int
inc
or
push
js
orb
dec
push
insl
loopne
push
and
mov
mov
js
ror
outsl
add
mov
out
add
dec
xchg
adc
add
in
cmp
mov
aad
loop
lods
sti
lea
add
pop
sub
xchg
fiadds
sub
sarl
add
push
lahf
enter
xchg
add
sub
add
inc
in
adc
fistpl
add
xor
cwtl
xchg
add
adc
pusha
or
add
add
hlt
adc
insl
divb
cmp
add
stos
cld
loop
sbb
lods
fcomip
vcvtsd2ss
rcr
js
add
push
sub
mov
mov
fstl
mov
inc
mov
jbe
xor
and
mov
aaa
cmp
jo
je
push
cmpl
sub
ja
mov
and
xor
or
sub
lock
push
icebp
insb
push
add
fdiv
loopne
cld
add
mov
sub
test
vpshaw
cvttps2pi
and
adc
insl
nop
movsb
dec
and
mov
mov
jb
pop
push
loopnew
push
mov
add
add
sbb
and
adc
jae
xlat
test
aaa
inc
adc
aam
mov
test
cmc
xchg
pop
mov
jo
leave
pop
inc
mov
prefetch
cli
cmp
inc
pop
xchg
std
sahf
cmp
lock
push
add
pop
sbb
add
jecxz
mov
add
or
int3
insb
dec
add
mov
sub
lds
and
pop
and
jbe
or
call
into
push
cmp
or
stos
xorb
push
lcall
in
xchg
in
stos
or
push
add
inc
and
loop
jge
add
jle
xchg
ss
add
adc
jl
xrelease
push
add
dec
mov
jb
faddl
or
sub
or
add
pop
sbb
jb
push
adc
mov
les
mov
ret
mov
xor
mov
pop
adc
insb
loop
hlt
fldl
cmp
imul
test
and
leave
jmp
mov
mov
lock
add
dec
test
subl
jo
or
mov
popf
scas
sub
sub
cmp
into
cmp
sub
pop
xchg
rol
pop
js
mov
add
xor
sbb
add
sbb
mov
loopne
jmp
leave
dec
hlt
rorb
shlb
roll
mov
fdivs
add
out
sub
imul
mov
test
in
add
xor
in
add
or
clc
repz
and
dec
leave
lods
mov
sahf
add
push
and
shr
add
xchg
adc
pop
xchg
test
cmp
push
aad
and
sub
xor
pop
cmpb
push
notb
les
imul
ljmp
dec
sbb
lock
xchg
add
mov
addb
sbb
rcll
ja
inc
inc
std
loopne
bound
inc
xchg
and
gs
ljmp
adc
cmp
pop
lcall
xchg
mov
pop
push
lock
sbb
rorl
add
out
scas
subb
arpl
hlt
jb
add
mov
inc
repz
fidivrs
gs
adc
jg
lcall
add
add
data16
int3
sub
mov
push
mov
lock
nop
fs
add
xchg
pop
lods
xchg
mov
add
adc
jg
dec
or
add
cmp
scas
lods
out
fcmovnbe
cmp
mov
xchg
fstps
sbb
shrl
sub
outsb
xchg
add
xchg
mov
shll
add
xchg
decb
lock
repnz
insb
in
dec
shr
stos
jb
fs
pop
ret
dec
or
negl
mov
or
sub
jmp
mov
jg
mov
inc
lods
insb
push
les
cwtl
stos
pusha
mull
add
inc
add
outsl
push
mov
mov
scas
call
shlb
aad
pop
dec
out
fmull
push
add
push
call
sbb
stc
add
mov
push
and
add
sbb
mov
jae
add
cmp
mov
jg
mov
fsubrs
add
repz
lahf
lock
pop
insl
js
add
sub
sbb
dec
and
cmp
insl
sub
xchg
jbe
xor
mov
add
mov
adc
test
lods
loop
pushf
les
and
test
cli
loope
decl
popa
aad
mov
data16
add
mov
add
ret
pop
push
popf
invlpg
xlat
mov
in
xor
cwtl
push
int
idiv
scas
fildll
fstl
mov
sub
or
rcl
mov
mov
add
jnp
jne
push
jle,pt
enter
mov
lret
sub
dec
dec
pop
xchg
add
xchg
or
push
mov
pop
loopne
mov
push
mov
and
repz
cmp
testb
xchg
ret
lcallw
ja
movb
gs
repz
cli
shrb
jo
add
cld
sbb
add
or
pop
jge
stos
xor
pop
in
aam
movsl
xchg
xorb
lahf
dec
add
sbb
ja
add
lcall
mov
in
cmp
sbb
inc
pusha
repnz
les
shl
jb
and
push
loopne
loopne
add
xchg
mov
pop
inc
dec
sarb
push
hlt
lahf
out
je
add
jp
mov
es
or
mov
cmc
outsb
or
sub
cltd
test
xlat
hlt
push
lods
inc
mov
xor
xor
xchg
dec
cwtl
out
pushf
pop
inc
mov
call
aas
xchg
out
and
add
inc
ret
sahf
mov
in
push
or
fcoml
nop
inc
sbb
and
lea
dec
mov
lcall
in
or
imul
add
fnstsw
xchg
xchg
sbb
loope
mov
lea
and
movsl
xor
je
add
in
xorl
add
and
leave
add
test
push
cmp
mov
ds
inc
sahf
enter
dec
xchg
push
adc
add
mov
sub
cmp
xchg
aam
dec
ss
lods
xor
leave
xor
cld
add
data16
outsb
loop
inc
add
ficomps
push
cmpsl
in
pop
add
out
adc
iret
dec
daa
fiaddl
das
shrl
sub
int3
inc
js
add
stos
push
leave
mov
jne
mov
movsb
add
shl
aas
bound
arpl
xor
xorb
cwtl
mov
sbbl
fcmove
sub
sbb
cmp
cmp
ret
sbb
xlat
andb
test
or
xor
insb
stc
test
cmp
lds
xor
movsl
and
roll
cs
fidivs
cmovns
into
lea
mov
or
mov
and
and
pusha
popa
lcall
test
pusha
jo
push
mov
or
cmp
sub
xor
add
pop
je
jns
xchg
in
cmp
mov
repz
xor
loopne
ret
mov
push
loop
ss
test
mov
loope
add
xchg
push
mov
and
hlt
and
sub
inc
sbb
add
add
repz
mov
sub
dec
mov
push
add
jae
dec
das
adc
lock
xchg
orl
add
dec
xchg
push
inc
add
or
gs
insb
pop
pop
pop
or
rolb
push
mov
movsb
add
leave
and
adc
fiaddl
sub
iretw
dec
pusha
movb
adcb
inc
mov
add
test
or
repnz
in
mov
push
add
jne
out
pop
push
push
or
jb
pop
add
dec
push
into
xor
add
cmp
cmp
sub
ror
pop
lahf
pop
mov
push
out
fdiv
pop
add
aas
mov
push
ror
mov
movsb
fs
mov
push
or
xchg
popf
cld
cmp
or
fdivrl
lock
insb
nop
mov
sub
mov
ret
stos
ror
cmp
and
add
lahf
and
inc
fisubrl
sahf
adc
xchg
mov
mov
jmp
dec
add
clc
je
push
pushf
cltd
lods
leave
stos
lahf
sub
arpl
rol
mov
adc
ds
in
mov
xor
mov
sbb
testb
add
add
in
add
mov
lods
adc
dec
stc
jb
add
mov
sar
pop
fcoms
pop
cmp
add
shlb
cmp
mov
add
add
out
jae
xchg
lahf
dec
mov
xor
gs
loopne
fwait
add
xchg
stos
es
dec
jp
lock
pop
sub
outsl
mov
add
lock
jg
lcall
jbe
add
in
pop
es
flds
push
out
enter
or
and
add
pop
clc
cltd
insb
stos
call
mov
insl
inc
push
cmp
mov
pop
scas
sbb
pop
adc
lret
fs
cmpb
in
mov
addb
pop
jae
xor
popa
cltd
xorb
faddl
int
sar
xchg
add
repnz
es
inc
addl
cmp
pushf
pop
and
call
and
or
or
pop
adc
fucomip
lods
and
dec
xchg
adcb
add
add
cwtl
nop
inc
add
add
cmpl
xor
jnp
lock
cmp
add
mov
adc
sbb
test
iret
fcoms
ret
sub
aas
lds
or
pop
xor
rolb
sub
ds
xor
les
add
in
add
test
push
stos
cmp
adc
adc
clc
add
cmc
and
xorb
add
push
sbb
pop
sti
add
and
and
pop
rolb
add
rorb
imul
xchg
push
and
popf
add
or
mov
or
dec
add
xchg
dec
sub
in
inc
cmp
out
pop
xchg
bswap
pop
js
and
xor
mov
jo
add
out
lods
or
push
xor
pop
js
jg
sub
rclb
sbb
fs
es
cmpb
in
das
dec
mov
jle
mov
lcall
pusha
or
das
push
rolb
jmp
in
inc
ds
and
adc
push
cmp
or
push
outsl
pushf
das
add
fists
rol
xchg
dec
ljmp
add
mov
add
dec
sbb
outsl
push
or
add
test
hlt
jmp
push
jle
fmull
negl
xchg
dec
sub
xchg
fs
ret
mov
in
inc
jno
mov
adc
xchg
add
lock
xorl
adc
pusha
in
clc
xor
testl
add
stos
cmpsl
popa
pusha
push
addr16
test
jge
add
out
jecxz
rorb
sbb
dec
or
in
mov
ret
push
stos
dec
loope
sub
test
mov
jbe
clc
push
add
jne
xor
add
jge
aaa
mov
mov
mov
sarb
pop
cmp
iret
push
sbb
leave
mov
and
test
dec
stos
sahf
mov
pop
adc
dec
push
test
ret
sarb
pop
add
dec
fcom
xchg
lret
sarl
and
pop
lea
pop
addl
xor
cmp
sub
enter
sti
repz
imul
outsl
nop
fiaddl
mov
mov
cmc
jns
add
sbb
out
faddl
dec
jb
push
push
mov
pop
xchg
add
insl
adc
sbb
adc
push
sbb
mov
test
addb
pop
ds
int
adc
pop
stos
rolb
movsb
arpl
ror
cmp
or
outsb
fbld
sub
shll
inc
in
mov
rcrb
mov
lret
push
sbb
xorb
sbbl
pop
and
sbb
xor
jmp
iret
lods
cli
cld
addr16
int
xchg
pusha
sarb
add
sbb
and
pop
fists
std
jbe
negl
push
bound
lcall
shrb
jle
jg
shll
dec
add
imul
fcoml
push
nop
inc
dec
lods
xlat
test
add
pop
sahf
rcll
jnp
cmp
mov
test
call
xchg
mov
mov
push
add
repnz
lret
iret
insb
mov
add
bound
insl
inc
popf
dec
mov
mov
movsl
dec
and
add
jmp
pop
ja
sbb
cmp
xchg
filds
aaa
and
rcr
sbb
mov
add
aam
mov
rclb
lock
insl
add
sbbb
and
add
sbb
jnp
pop
dec
mov
push
sbb
xchg
add
lds
xchg
xchg
stos
xchg
arpl
mov
notl
stc
std
and
mov
pop
add
xor
popf
adc
mov
rcrl
jns
pop
xorb
outsl
clc
sbb
lock
test
pop
mov
pop
xor
es
or
loop
lods
add
and
mov
mov
in
xlat
jbe
add
inc
test
les
test
push
aad
or
dec
clc
jae
lret
add
int3
pop
add
mov
pop
loope
cld
push
and
fmull
add
pop
test
push
add
xchg
mov
inc
inc
cld
xchg
mov
sub
mov
fmuls
add
add
jne
out
mov
jecxz
xlat
sub
into
cmp
push
sbbb
pop
pop
cmp
xor
fwait
lea
pop
jno
es
add
test
out
jl
loope
cmpps
cmp
adc
fucomip
cmpsb
loop
sti
les
and
ret
lds
xchg
shl
shl
add
push
dec
xchg
jae
stos
repnz
add
js
sti
sbb
pushf
das
mov
push
lret
xor
outsl
push
push
mov
push
add
jno
ret
cli
sub
push
xor
sub
or
jl
jmp
push
mov
jecxz
inc
mov
fstps
add
push
out
push
mov
adc
fstl
mov
dec
mov
popa
sub
cld
pop
pop
jmp
shll
xlat
sbb
jns
xchg
ja
aad
fs
add
and
xchg
sub
lock
add
sbb
int3
pusha
ljmp
in
jo
fisubrs
repnz
jmp
push
pusha
sub
imul
bound
pop
cmp
add
daa
out
js
jo
add
fnstsw
mov
xor
add
adc
push
call
adc
cli
shl
add
cmp
pop
pushaw
rclb
popf
push
xchg
jb
xchg
push
roll
sbb
roll
push
fisubrl
add
add
pop
mov
pop
sub
push
mov
mov
pusha
adc
mov
add
pop
cmpb
lock
and
fs
js
sub
add
es
jl
push
add
or
insb
sub
adc
pop
iret
and
and
xor
lods
adc
xor
jg
test
inc
imul
sbb
rclb
ss
dec
add
les
add
insl
dec
or
cli
add
stc
xchg
add
and
inc
add
dec
inc
test
sub
popf
push
in
and
les
clc
pusha
or
adc
mov
in
xchg
rorl
data16
mov
mov
je
xchg
mov
lods
jp
inc
gs
fwait
invlpg
mov
xchg
jecxz
pop
and
xor
jne
cmpsb
nop
mov
adc
mov
imul
lret
shlb
jge
cltd
inc
sub
add
mov
rolb
pop
jno
jo
cld
sub
inc
lods
iret
mov
cmp
mov
sbb
scas
aas
clc
cltd
out
pop
inc
call
cmp
add
adc
lock
add
sbb
adc
xchg
add
popa
ss
push
add
add
outsb
loope
jae
in
je
dec
lea
data16
pop
add
imul
test
add
jmp
lahf
dec
jle
in
aas
dec
imul
sahf
dec
or
adc
aam
pop
fs
dec
xor
mov
xchg
rorb
dec
aaa
adc
xor
jecxz
push
inc
mov
test
pushf
mov
pusha
dec
push
sub
int3
mov
out
lret
add
std
stos
lcall
loope
and
sti
and
inc
jno
or
add
shr
xor
jp
lds
out
pushf
mov
call
xor
enter
cltd
push
xchg
adc
add
push
sub
adc
push
mov
rcl
add
mov
incb
and
nop
cwtl
inc
test
outsl
nop
and
push
sub
or
mov
dec
cmp
lcall
sbb
clc
inc
cmp
jo
add
ljmp
loop
std
push
pusha
xor
or
xlat
mov
mov
test
mov
aam
and
push
fcmovnb
mov
add
icebp
sub
push
shlb
push
jne
add
sbb
inc
pop
popa
sbb
movsb
iret
cmp
xor
and
out
cmc
repz
add
dec
xchg
in
pop
xchg
ret
mov
mov
jl
and
or
jo
pusha
jle
mov
aad
lret
adc
jg
scas
aam
add
or
jb
stos
orb
add
and
ds
inc
add
push
adc
in
add
mov
cmpsb
xchg
js
ljmp
sub
jo
rorb
mov
add
and
jmp
hlt
les
jae
jmp
cld
xor
scas
xchg
loopne
iret
push
or
jo
jmp
push
stos
pop
mov
or
add
push
bnd
mov
js
mov
pop
adc
add
sbb
xchg
xchg
inc
xor
mov
movaps
jmp
sub
das
mov
mov
sti
add
int
dec
adc
dec
or
sbb
adc
mov
incb
outsl
loopne
cmpsl
jb
add
add
rcr
enter
xchg
fwait
int
out
mov
sbb
adc
loope
push
add
pusha
cmc
jmp
add
shlb
add
push
mov
or
pop
insl
xchg
clc
insb
cmp
xchg
xchg
movsb
sbb
mov
dec
popa
lock
add
cmpsl
bound
add
fisubs
adc
mov
in
insl
ds
add
shr
dec
out
sub
add
or
stos
add
mov
scas
icebp
jle
lcall
testl
addb
mov
mov
addl
incb
movsl
xor
fwait
inc
and
mov
sahf
pop
cmp
jbe
pusha
or
mov
mov
ljmp
dec
push
cmc
xor
mov
imul
pop
loope
and
xchg
std
xlat
sub
push
pop
dec
sbb
ror
mov
or
iret
mov
dec
test
add
lret
popf
adc
cli
mov
dec
mov
iret
loopne
sub
nop
inc
rcr
sbb
xchg
dec
stos
mul
lock
ret
add
daa
lds
add
fdivs
mov
adc
jae
outsl
add
cmp
js
imul
add
stos
out
inc
pop
les
or
out
lcall
popa
into
dec
lahf
add
mov
pop
lret
add
imul
stos
iret
stos
pop
jge
js
pushf
push
lea
loope
add
outsb
subl
pop
mov
lods
pop
inc
in
orb
cli
xchg
dec
hlt
or
divl
rorb
push
fsubrs
je
shrb
sub
mov
adc
push
scas
loope
movb
bound
testb
xchg
xor
sahf
or
addr16
and
daa
pop
js
cmpsl
xchg
cmp
sub
nop
jle
imul
test
add
mov
cltd
loop
dec
and
or
movsl
add
ret
call
push
int3
add
cmpsl
dec
mulb
sub
add
daa
lods
pop
aaa
add
stos
mov
jp
cmpsl
dec
pop
rclb
mov
sbb
mov
or
ljmp
jns
xchg
aam
mov
push
mov
add
pusha
leave
push
add
fnstsw
call
inc
mov
rcl
add
dec
sub
jmp
stos
inc
adc
xchg
jl
cmp
add
sbb
cmpsb
in
add
daa
idivb
test
xor
cmpsl
stos
push
mov
sbb
cld
inc
mov
lcall
mov
jg
fwait
or
nop
mov
and
and
mov
lods
lcallw
jnp
pop
shl
fildl
xor
orb
add
cmp
fistpll
out
add
pop
test
ret
add
fstl
pop
gs
xor
push
jb
sub
hlt
sbb
mov
add
int3
or
sarb
rolb
hlt
jmp
psadbw
pop
sbb
xor
push
adc
pop
and
incb
lods
sbb
fbld
stos
push
add
mov
mov
add
sub
or
xor
mov
add
loop
cmpsl
add
cmove
push
scas
inc
add
icebp
jg
add
in
mov
push
int
addb
into
add
mov
or
dec
sbb
notb
xchg
lcall
xorb
xor
xor
test
adc
jg
in
pusha
mov
adc
mov
ror
repnz
add
jl
sub
add
sub
xchg
add
into
adc
ret
ss
cmpb
cmp
adc
and
aad
dec
jg
xor
add
mov
jl
cmp
lret
stos
sub
fildl
pop
loope
inc
dec
cmpsl
bswap
push
add
popa
lcall
xor
or
aaa
or
lahf
mov
pop
mov
xor
add
psubd
jmp
inc
mov
cmpsl
cmp
xor
lds
push
add
or
lea
fucomi
fs
add
daa
mov
sbb
enter
popa
inc
or
jl
nop
dec
in
add
fs
jno
les
fstpl
add
push
add
cli
add
or
jnp
testl
inc
mov
incb
hlt
xchg
sub
inc
clc
mov
loope
inc
adcl
subl
xor
lock
push
lret
movsb
adc
jae
pusha
add
pop
mov
add
adc
idivl
ret
mov
call
pop
mov
or
fistpll
or
pop
pushf
sbbb
cmp
enter
jae
sbb
adc
inc
push
add
shll
add
lock
stos
popf
aas
push
lret
rorb
jne
jo
nop
cmp
fadds
xor
clc
fisttps
inc
and
inc
notb
cmp
mov
sub
loope
pushf
jle
enter
dec
inc
sar
das
push
dec
push
dec
shrb
add
pusha
das
js
orl
mov
mov
movsl
imulb
loop
add
icebp
mov
imul
mov
ret
and
js
xlat
rcrb
dec
icebp
scas
push
pop
xchg
inc
faddl
mov
nop
or
pop
push
insb
push
mov
inc
in
push
inc
cmp
dec
inc
sub
testb
pop
mov
adc
jo
jg
dec
dec
loop
sub
add
cmp
push
lret
adc
add
sahf
pop
or
dec
arpl
add
push
push
jo
add
jl
lcall
adc
bound
or
jae
mov
js
mov
mov
xor
test
mov
ret
sbbl
inc
hlt
mov
adc
mov
or
xor
push
mov
sub
push
jle
imul
dec
shrl
sbb
inc
jg
inc
pushf
lods
add
xor
dec
loop
sbb
lcall
xchg
das
mov
arpl
movsb
or
imul
sbbb
lods
xlat
add
daa
lds
mov
push
jl
dec
rorl
jnp
mov
hlt
repz
add
imul
sti
clc
sbb
mov
add
lret
int3
sub
mov
jp
sbb
push
enter
lahf
in
test
mov
push
aam
loopne
adc
add
cmp
add
xor
jns
arpl
push
mov
mov
or
add
arpl
dec
push
ficoms
mov
sbb
adc
push
in
push
inc
sub
pop
cmpsl
call
and
mov
into
shlb
pusha
mov
pop
inc
sub
sub
pop
inc
xchg
stos
add
int
lods
lcall
lock
sub
sbb
scas
lret
rcrb
and
test
xlat
nop
out
js
or
add
arpl
inc
mov
dec
or
push
jmp
in
loopne
adc
adcb
jb
sarb
mov
xlat
inc
hlt
add
loope
testl
subb
mov
or
test
dec
add
dec
pop
fistpll
xchg
pop
and
pop
rorb
jo
sbb
cmp
push
adc
cltd
adc
int3
mov
outsb
outsl
lahf
add
in
int
xchg
and
addr16
mov
clc
lcall
rcrb
test
addr16
jge
cltd
push
pop
shl
fdivrs
add
pop
xchg
gs
xor
and
pop
cs
ror
sub
jae
inc
mov
xchg
xchg
sbb
clc
imul
xorb
int3
sbb
sbb
push
loopne
jno
mov
cmpsl
or
movsb
ljmp
add
leave
sub
test
shlb
fdiv
jnp
and
add
test
cmp
mov
jp
dec
arpl
and
jae
add
lds
das
push
sub
jp
add
xchg
jl
dec
sbb
push
popf
loopne
push
jno
pop
add
jp
mov
jle
add
xchg
push
subb
push
int
add
inc
out
add
jmp
adc
add
xlat
in
dec
movsb
and
cld
add
xor
add
xchg
pop
divb
test
sbb
add
fists
inc
adc
add
dec
and
andb
pop
inc
cmp
shlb
or
insl
push
cmpsb
leave
inc
mov
fsubs
data16
dec
fildll
out
jbe
inc
push
flds
mov
xchg
ljmp
and
lcall
call
adc
cmp
dec
mov
movsb
nop
rorl
loop
sub
test
outsl
sar
sbb
sbb
push
nop
out
mov
add
test
mov
or
leave
adc
in
icebp
rcrb
mov
mov
fisubs
in
aaa
add
punpckhwd
lds
dec
adc
inc
cwtl
fisttps
xor
lret
dec
add
cwtl
dec
pop
jo
add
sbb
sub
fistpl
sbb
rcr
insl
add
fbstp
or
dec
or
mov
fmul
push
add
mov
sub
add
outsl
arpl
mov
mov
sub
insb
and
mov
lods
nop
jl
push
inc
int3
xor
das
aam
pop
mov
test
in
in
and
cmp
adc
jnp
and
sbb
je
jne
add
inc
and
and
xor
ss
out
mov
push
cmp
push
clc
pop
jae
mov
dec
push
mov
scas
inc
dec
adc
fldl
in
popf
aad
js
cmp
dec
sbb
adc
les
test
jg
mov
enter
add
pop
inc
cmpsb
sarl
push
push
hlt
fsts
cmp
mov
decl
test
icebp
push
xor
test
mov
mov
xchg
ret
jo
test
cmp
add
jl
ss
je
pop
cltd
add
imul
add
fdivrl
movsb
add
jae
push
sbbl
add
fcoml
xchg
dec
or
pop
jno
xor
sub
add
pushf
test
icebp
in
cmc
xorb
jno,pt
add
mov
jnp
popa
lret
mov
mov
dec
mov
pop
int
xor
into
mov
sbb
dec
sbb
test
inc
shlb
mov
int3
icebp
pop
mov
and
and
scas
addb
jbe
daa
cmpsl
xor
push
bound
cwtl
xchg
pop
dec
scas
cmp
aas
sarb
or
or
shlb
inc
pop
adc
mov
and
gs
dec
add
mov
mov
pop
loopne
adc
cmp
js
push
mov
cmp
mov
jne
mov
xorb
mov
dec
mov
add
mov
imul
jno
xchg
jl
jl
add
rorl
lods
or
or
fiadds
pop
mov
xor
and
push
icebp
cs
aam
in
jo
mov
sbb
xor
mov
xchg
call
mov
inc
mov
add
jnp
mov
pushf
xor
stc
jmp
add
es
shlb
repz
incl
mov
lea
mov
or
mov
mov
repnz
add
int3
mov
sbb
fdivs
out
and
invd
insb
fldenv
aam
add
mov
idivb
jl
mov
add
out
add
fwait
pop
add
dec
stos
mov
push
mov
sub
call
call
cltd
fmuls
aam
add
sub
xor
add
fmulp
sti
jp
xchg
in
xor
add
je
jl
test
pop
cld
fimull
cmpsl
push
scas
shll
enter
inc
movsb
sub
arpl
jae
pop
jno
add
ficoml
cli
lods
xchg
pop
dec
rclb
lcall
fdivl
cmpsb
inc
rcl
loopne
sub
loopne
cmc
repz
jbe
sarl
jg
decl
adc
add
daa
jo,pn
sbb
xchg
or
xor
ja
sbb
loopne
push
lods
lahf
dec
add
lods
xchg
inc
or
scas
xchg
inc
sbb
mov
push
mov
xchg
in
scas
adc
mov
fldcw
aad
in
fwait
jp
mov
pop
fidivrl
push
push
rclb
sub
jle
das
das
sbb
mov
lods
pop
popa
or
sbb
fs
push
out
data16
and
add
sbb
divb
test
je
add
sub
jns
test
cwtl
dec
push
pop
or
jb
js
add
cmp
jne
sub
int3
mov
add
into
fsub
dec
dec
addl
test
sub
inc
add
cmp
and
sub
in
test
jl
shr
insb
jmp
test
cmp
shlb
fcmovnbe
and
ss
dec
adc
enter
sub
lret
add
pop
int3
xor
dec
add
sub
push
jg
pop
xor
les
jmp
scas
add
cltd
add
pushf
sub
mov
repnz
fisubl
subb
xlat
in
insl
or
lcall
sub
lds
push
xchg
imul
ficoml
xor
inc
mov
pop
test
mov
add
cli
es
cmpsl
add
repnz
imul
out
cmp
popf
cmp
ucomiss
int3
jnp
add
ficoml
mov
pop
movl
mov
xor
and
aaa
mov
mov
daa
cmp
imul
insb
mov
add
loop
jnp
and
sub
add
add
les
push
xorps
sub
adc
dec
add
xor
sbb
mov
sbb
xchg
pop
inc
ficoms
add
lret
push
call
cmp
test
mov
adc
daa
test
adc
dec
cmp
lods
es
cmpsl
mov
mov
ficoms
mov
pop
push
sub
push
lret
aaa
push
mov
push
subl
in
jge
sub
fldt
clc
push
add
aad
add
cmp
mov
add
xor
xchg
adc
insl
pop
ds
icebp
test
imul
sahf
add
loop
mov
leave
roll
lds
sarl
hlt
fwait
adc
cmpsl
out
jno
jg
hlt
loop
rolb
adc
or
icebp
dec
inc
add
adcl
lods
jb
ficompl
sbb
rcrl
add
xor
jb
jno
rclb
xchg
add
sti
cs
xchg
push
lock
jb
pop
xchg
ds
cmp
movsb
test
test
in
lods
add
add
inc
push
pop
sub
mov
mov
div
aas
je
subl
mov
flds
pushf
cmp
out
rcl
testb
mov
push
js
mov
push
ret
mov
shl
mov
fcmovu
jne
add
jg
cmc
shrb
pusha
andb
sti
push
cmp
stc
cld
les
rcrb
movsb
push
cvttps2pi
jp
mov
nop
popa
outsl
jecxz
pminub
fs
sbb
mov
lea
pop
test
insb
add
cmp
jmp
loopne
inc
flds
ljmp
sub
mov
cwtl
imul
jp
push
dec
xor
popa
dec
add
jmp
in
jo
lods
mov
xchg
pop
cmpsb
xor
mov
test
cmpsl
cli
sub
mulb
fmull
insl
je
mov
jmp
add
push
add
leave
push
pop
pop
sbb
sub
jp
add
rcll
push
test
jno
movsl
cmp
aaa
lock
cmp
sub
lock
xchg
pop
cmpsb
and
or
push
mov
adc
add
shlb
xor
sub
xor
add
out
shrl
mov
repnz
xchg
in
jge
cmp
cmp
lret
lahf
dec
add
cld
aaa
cmp
int
adc
pop
add
cmp
and
pop
pusha
imul
pop
xchg
sbb
outsl
xchg
inc
repnz
or
jecxz
dec
add
mov
out
xchg
xor
mov
nop
call
fstpt
inc
push
pushf
adc
cmp
cmp
movb
dec
cmp
roll
adc
sbb
inc
arpl
loopne
pop
and
ret
cmp
lret
cwtl
sarl
xchg
mov
add
mov
lcall
sub
das
cli
adc
dec
lods
mov
mov
pop
mov
rcrl
sti
ret
imul
xor
loop
and
push
jnp
inc
add
fcoms
movsb
data16
add
shll
add
xchg
sub
icebp
sub
xor
jb
daa
pusha
sbb
cmp
add
jle
out
pop
push
or
mov
xchg
stos
in
add
dec
lahf
out
jecxz
add
sbb
sub
addb
or
cmp
push
stos
push
and
dec
add
pop
xchg
jle
sbb
aaa
and
add
movsb
icebp
xor
pop
mov
cmpsb
repnz
jae
or
push
ja
int3
fisttpl
incl
and
fnstenv
lidtl
inc
push
in
dec
pop
dec
ljmp
mov
mov
nop
cmp
mov
add
lds
jle
pop
ficompl
lret
aad
testl
mov
orl
add
inc
into
push
jle
popa
frstor
jmp
cli
lcall
xchg
sbb
mov
dec
jno
js
add
sub
addr16
adc
add
jbe
lods
mov
cmc
or
add
push
dec
insb
sbb
lock
adc
inc
inc
and
or
pop
push
fnstenv
mov
in
or
iret
fiaddl
hlt
push
rcrl
pop
inc
xor
push
jne
mov
jl
into
ret
jns
add
xchg
adc
push
mov
insb
add
jbe
xor
mov
jle
xor
arpl
add
clc
out
test
dec
add
fsub
popa
mov
xchg
mull
lock
ds
cmpsb
xlat
loope
ror
jo
popa
add
add
or
orb
adc
push
cmpsb
adc
loop
scas
lds
add
packuswb
mov
jb
add
jno
push
hlt
add
xor
pop
add
jp
add
inc
and
cmpsl
mov
pop
dec
daa
ss
shlb
iret
loopne
xor
pusha
pusha
jp
in
jg
pop
inc
mov
inc
add
push
loope
in
xor
cmp
stc
aas
or
sbb
xchg
ss
hlt
pavgb
fdiv
fstpl
and
pop
pop
mov
movsl
push
jne
notl
pop
and
inc
cmc
cmp
mov
push
mov
ror
mov
pop
shlb
pop
push
or
or
adc
add
dec
mov
pop
push
sbb
mov
pop
cmpsl
sbb
cmp
or
popa
mulb
xor
add
inc
push
rorb
cmp
sbb
inc
pop
add
pop
jecxz
sbb
push
and
lods
fidivs
or
pushf
pusha
insb
arpl
xchg
mov
jg
jo
cmp
sbb
pusha
daa
cmp
dec
xor
mov
cli
pop
arpl
in
push
shlb
inc
stos
outsl
adc
dec
and
or
sbb
inc
jo
pshufw
xchg
test
test
push
rcrb
jl
sub
add
cmpsl
xor
rol
mov
or
adc
in
nop
sbb
add
jmp
fldenv
jne
cmp
add
mov
out
jno
loopne
pop
add
mov
pop
adc
add
mov
inc
and
sbb
enter
add
jo
out
or
inc
fwait
push
repnz
push
add
pop
das
inc
cmp
lock
xor
add
pop
push
jp
mov
add
rolb
add
cmp
sub
popf
add
mov
call
push
les
rclb
inc
sbb
jp
pop
jo
mov
lret
add
adc
adc
addb
clc
and
popa
ljmp
ja
jb
add
cmc
xor
in
sub
outsl
cltd
in
and
and
add
inc
xor
add
add
inc
adc
das
add
pop
daa
mov
pop
pop
lret
sahf
dec
nop
lods
cmp
mov
adc
pop
int3
xor
lret
sbb
jns
dec
xchg
inc
add
sub
dec
movsl
inc
or
mov
add
scas
or
ss
inc
xor
test
sub
mov
fsubrl
cmp
pop
sbb
inc
push
inc
cmp
mov
add
mov
cld
loopne
loopne
adc
and
pop
bound
add
sahf
dec
and
dec
aaa
add
aad
add
adc
fsubs
lret
sub
add
sti
imul
and
push
rolb
addr16
cmp
cwtl
fdivl
fwait
cs
inc
add
jnp
cmp
sub
filds
cmp
xchg
mov
outsl
int3
icebp
push
das
cmp
dec
lahf
and
test
loop
mov
stos
adc
lds
jb
add
xor
lahf
or
inc
xlat
in
sub
jo
pushf
add
sub
adc
add
sti
ss
dec
loope
push
in
mov
inc
add
shlb
mov
push
mull
xchg
iret
sub
push
inc
int
fstpl
jb
stos
mov
jl
inc
mov
push
mov
jmp
sub
push
pop
test
hlt
movsl
data16
aad
pop
call
push
or
nopl
pop
fsts
and
out
loop
add
lret
ret
rcrb
orb
out
add
push
sbb
and
mov
shr
enter
dec
push
cli
cwtl
icebp
in
call
sbb
cmp
add
xchg
push
push
je
js
outsl
jmp
emms
sbbb
dec
repz
cmp
add
cmpsl
dec
ficoms
dec
jne
cmp
sbb
xor
hlt
sub
testb
or
inc
nop
les
xchg
jle
and
add
lds
fs
cmp
push
pop
jne
inc
and
loopne
mov
shlb
cmp
stc
sub
pusha
enter
push
aas
or
or
add
xor
push
jae
ljmp
adc
lods
retw
test
mov
sbb
pop
mov
mov
add
pop
in
dec
push
push
loope
inc
cmp
mov
xchg
adc
test
sub
jo
clc
mov
rcll
aas
scas
out
cmp
or
test
xchg
inc
rcrb
enter
push
addr16
adc
out
orb
jecxz
sbb
cmc
jne
push
mov
add
cmp
rorl
lret
out
cmp
lcall
fwait
xchg
xlat
sbb
mov
aam
add
in
and
jp
out
cmpl
or
mov
shlb
push
iret
sbb
and
mov
aaa
pusha
mov
mov
inc
xor
xchg
xchg
shr
js
add
loop
dec
hlt
sti
pop
aam
fldt
mov
lods
pop
lods
add
mov
pushf
sti
jne
jae
add
mov
jbe
mulb
or
sbbl
mov
pop
cld
mov
mov
push
loope
sbb
dec
mov
aam
push
pop
push
movsb
call
subb
lods
call
push
xchg
cmp
jecxz
push
mov
push
js
push
les
pop
aaa
push
push
test
rolb
aaa
or
test
xor
xchg
lods
add
push
jmp
aad
inc
sub
js
leave
das
out
cmpl
jmp
dec
je
ja
pusha
sub
pop
test
sahf
loop
sbb
andb
jl
adc
icebp
pop
aad
mov
mov
add
jecxz
pop
jle
dec
enter
xor
aam
dec
call
ja
push
inc
mov
and
rorb
daa
jge
mull
adcb
or
add
call
or
and
nop
pop
xor
add
sbb
call
outsl
mov
add
cmc
sub
sbb
pusha
jno
jle
add
jbe
cmp
mov
cmp
pop
bound
cmpsl
repz
clc
jnp
cld
subb
jmp
mov
add
cmp
shll
xor
shlb
pushf
and
push
or
insl
xor
fimuls
push
mov
mov
push
lods
mov
call
test
mov
adc
add
sub
push
jle
mov
scas
push
sbb
and
stos
mov
mov
aaa
inc
xor
mov
mov
ds
repz
push
aas
mov
insl
hlt
adc
xchg
lds
push
push
add
cmp
push
rcrb
push
aam
mov
int
cmpb
sahf
js
add
ds
mov
lret
aad
inc
in
xor
and
rcll
sub
shlb
jne
add
in
out
inc
aam
lds
arpl
popa
scas
rcll
jno
and
call
rolb
push
out
pusha
lods
or
popa
pop
mov
cmp
sahf
mov
aad
dec
sub
jle
add
or
push
jp
jb
add
test
or
subl
add
pop
jbe
lahf
xchg
xor
cmp
add
sarl
cmp
pop
popa
in
mov
dec
test
lds
aaa
push
push
mov
aaa
movsb
adc
in
add
push
sub
cs
test
jnp
stos
sbb
lods
pusha
shll
sub
out
jo
leave
add
pop
mov
push
sbb
dec
int
mov
dec
rep
or
cmc
clc
or
or
xchg
mov
iret
lods
mov
inc
mov
push
jl
cmpsb
lods
mov
cmp
ret
add
test
or
lahf
cmp
or
testb
lock
jbe
mov
rolb
mov
cld
mov
ljmp
add
xchg
push
or
insl
pop
xor
adc
or
push
mov
mov
push
and
adc
push
pop
inc
int3
mov
pop
mov
sub
or
lret
sub
adc
fcoml
stos
repnz
mov
hlt
adc
rolb
aam
int
mov
mov
adc
ja
rcrl
js
setl
ja
lock
push
sub
cld
push
ret
mov
clc
insl
push
insb
faddl
ds
pushf
jecxz
inc
sub
dec
add
loop
dec
mov
and
mov
mov
insb
lahf
inc
mov
fs
rorl
int
rolb
push
mov
in
adc
add
jecxz
cmp
popa
lret
sub
inc
inc
jno
lret
add
inc
lods
fdivl
dec
and
mov
inc
sub
dec
jmp
mov
lahf
test
js
ret
data16
into
addb
inc
push
lret
dec
lret
mov
insl
stos
xor
ret
xlat
sub
repnz
sbb
and
xchg
hlt
cmp
test
fmull
cvtpi2ps
push
in
push
lock
sub
lods
or
fcoml
mov
int
or
xor
dec
lods
adc
stc
or
pop
cmpsb
rol
push
push
dec
mov
loopne
lret
aaa
cmp
and
push
stos
or
call
and
fistl
or
add
lods
xor
or
add
jo
mov
mov
leave
push
out
mov
fstpl
out
dec
popf
mov
out
scas
loope
and
xor
in
mov
or
or
pusha
in
pusha
lea
add
jmp
movsb
lret
mov
add
pushf
insb
or
loope
push
test
mov
and
jns
pusha
or
insl
inc
mov
sbb
orb
lock
sbb
loop
mov
out
inc
in
xor
fs
or
sbbb
lock
sbb
pop
daa
inc
inc
loopne
mov
xor
pop
adc
hlt
dec
mov
cltd
bound
fnstcw
cwtl
es
add
je
push
mov
stos
mov
lahf
pop
xor
xchg
mov
rol
rclb
add
cld
sub
dec
fmuls
imull
xchg
dec
xor
cltd
sub
xor
pop
sbb
cld
aas
enter
dec
fucom
xchg
adc
faddl
and
jo,pn
lods
xchg
mov
dec
inc
sahf
test
fisttpll
nop
adc
jecxz
test
mov
stc
nop
add
inc
push
xor
shll
add
or
jmp
push
mov
in
fwait
jg
cmove
outsb
cli
and
dec
iret
xor
sti
xor
cmpsl
mov
xor
and
and
sub
push
add
lock
into
mov
loopne
repz
rclb
mov
pop
cwtl
gs
jecxz
sbb
aad
scas
insl
inc
and
std
adc
mov
mov
data16
int
xorl
mov
inc
pop
rclb
and
jbe
push
in
shrl
mov
mov
add
mov
push
pop
push
dec
in
and
test
iret
xchg
pop
mov
or
outsl
push
xor
push
dec
mov
mov
out
insb
mov
add
jle
pop
lahf
cmp
or
bound
mov
xor
lcall
and
xchg
mov
int
sub
add
add
lds
loopne
mov
add
pop
lods
adc
and
push
lret
add
cli
add
lea
aad
push
cmp
inc
push
add
push
add
cmpsb
xor
mov
int3
shlb
pop
cltd
push
push
push
sbb
int3
cld
xchg
lods
fldt
stc
fdivs
push
jl
jo
aad
fs
and
xchg
stc
add
pop
mov
dec
sbb
push
repnz
arpl
jmp
or
dec
aad
cwtl
adc
aas
cli
jne
mov
add
inc
mov
and
sub
jae
xchg
test
repz
push
dec
cmp
rol
dec
push
inc
scas
and
add
inc
shl
mov
lock
xchg
dec
sbb
sbb
and
aas
lcall
mov
push
ror
inc
push
cmpsl
pusha
js
mov
mov
and
push
push
sub
jb
in
jne
xlat
shrb
icebp
cmp
js
testb
leave
ja
rdmsr
or
jno
adc
stos
decl
cltd
insl
sub
insl
cld
mov
mov
es
aad
and
push
repz
dec
rolb
iret
jnp
or
dec
popf
add
or
inc
cmp
dec
sbb
xor
adcl
jae
xor
jne
test
js
or
sbb
adc
jns
sbb
out
clc
add
dec
xlat
add
xor
push
inc
dec
lcall
in
pop
aas
or
mov
xchg
pop
pushf
test
sbb
dec
into
pop
add
cld
jb
mov
fwait
les
enter
push
out
lea
xchg
inc
xorl
inc
mov
rolb
das
ret
xorb
shrb
imul
bound
jno
cmp
inc
ljmp
lock
push
sarb
add
or
push
clc
cmp
ja
sub
add
adc
mov
xchg
aas
pop
aas
and
pop
call
cli
or
xor
add
fldenv
cmp
pop
or
add
xchg
movl
orb
stc
push
sub
or
add
mov
cwtl
jb
movsb
test
ja
stos
inc
test
cmp
jnp
push
or
insl
push
mov
add
movsb
or
hlt
lock
mov
shr
sbb
out
sbb
dec
mov
add
movsb
dec
repnz
xor
sub
cmp
test
sbb
jmp
fbld
jb
dec
sbb
roll
ss
std
xor
or
and
add
test
mov
stos
lds
lods
sub
pop
fsubl
add
cmpsl
push
cmp
cwtl
dec
inc
repz
xchg
je
adc
clc
jmp
test
mov
je
das
iret
jb
jle
xchg
in
or
push
xchg
or
lods
hlt
mov
push
and
adc
in
inc
lods
fdivl
and
jp
or
jmp
scas
or
xor
loope
and
mov
xor
sbb
adc
xorb
sub
addl
stc
jne
aad
es
fs
bound
add
dec
xchg
mov
mov
int3
jl
in
adc
push
ficoms
rep
lret
js
ljmp
andl
cmpsb
dec
test
pop
sbb
imul
sbb
mov
add
xchg
aad
xor
dec
cmpl
flds
sub
outsl
nop
ds
insl
adc
jg
inc
lock
leave
mov
add
pop
daa
mov
fldcw
add
fmul
js
push
and
add
inc
fcom
pop
jns
sbb
or
repnz
xor
push
adcb
insl
fwait
jb
enter
call
add
add
iret
divl
add
inc
mov
imul
and
jnp
stos
ss
push
cwtl
pop
insb
addb
xor
pushf
push
lret
int3
enter
cmpsb
scas
rcrl
sbb
mov
lds
dec
outsl
mov
and
adc
cmp
mov
adc
or
add
xchg
jns
fadds
mov
js
push
push
push
call
xorb
imulb
cmpsl
xor
sbb
jb
filds
xor
loop
jg
add
imul
arpl
dec
or
shll
je
add
cmp
sub
fisttpll
pop
flds
loop
out
sub
and
lds
add
dec
outsl
mov
scas
adc
cmpsb
add
dec
clc
jge
sub
les
aas
ret
inc
mov
mov
adc
mov
mov
xor
jl
xor
push
pop
pop
pop
pop
push
adc
mov
je
fiadds
adc
xchg
xor
or
adc
push
hlt
and
inc
cmc
clc
mov
iret
fxch
pop
ljmp
pop
mov
call
in
mov
inc
mov
aad
out
lds
mov
pop
pop
into
jb
mov
xor
and
xor
adc
mov
addr16
add
pop
lret
dec
push
sub
insl
mov
ret
xchg
repnz
jg
pop
ret
jge
fldcw
or
mov
add
sbb
sbb
pop
jl
add
mov
loopne
push
stos
fiaddl
std
test
xchg
cmp
fimuls
aam
dec
mov
inc
and
xchg
add
sti
push
push
mov
stos
adc
jno
add
mov
das
xchg
add
out
rolb
add
sbb
addl
push
sahf
outsb
xchg
punpcklbw
sbb
or
and
jecxz
in
out
dec
sbb
cmc
mov
jbe
xchg
popa
loopne
arpl
cmpsl
fldz
mov
nop
orb
rorl
dec
pop
test
add
filds
loope
fldl
rcr
cmp
xor
outsl
nop
xor
mov
mov
adc
cwtl
adc
fimuls
add
jecxz
mov
pop
xchg
xchg
lock
cli
leave
out
jns
sbb
add
xor
inc
iret
sub
push
lcall
and
lahf
lods
or
push
adc
jb
dec
enter
or
fnstcw
inc
dec
xor
push
dec
push
cvtpi2ps
jbe
add
jbe
add
push
clc
cmp
cmp
inc
idivb
shr
add
inc
fwait
jge
xchg
and
fnstenv
dec
dec
dec
inc
movsb
lret
jo
subps
push
jl
imul
aad
adc
mov
out
ljmp
cli
push
jecxz
cwtl
loopne
aas
add
push
cmpsl
dec
jge
data16
nop
add
test
pop
repz
pop
cld
test
jo
dec
dec
test
ret
inc
and
ss
sbb
jb
daa
popa
aam
add
jbe
lret
idivb
or
dec
fs
mov
je
mov
mov
cmp
imul
clc
add
mov
mov
sub
psubsb
test
mov
mov
subb
dec
sbb
clc
and
jp
loope
mov
inc
in
dec
sub
jmp
fs
or
mov
pop
negl
aas
add
push
mov
adc
push
or
adc
push
lock
adc
sbb
test
add
push
pop
nop
and
pop
leave
jnp
mov
shlb
sahf
dec
dec
dec
je
and
and
and
or
push
and
dec
call
test
popf
sahf
nop
bound
sbb
or
pusha
mov
mov
shlb
add
cmp
lret
inc
rorl
xorb
push
and
or
aam
fdiv
mov
or
push
pusha
test
or
int3
cmpsb
pop
jecxz
bound
into
out
stc
mov
pushf
call
repz
shlb
mov
jb
fidivl
ja
or
mov
popa
sub
jns
and
in
cmpsb
push
test
cwtl
popa
lcall
push
clc
ss
call
mov
repnz
add
ds
push
insb
or
out
add
jg
sub
jne
aad
mov
add
lea
les
and
mov
and
cltd
push
mov
xchg
imul
nop
dec
jnp
jns
test
cld
or
clc
and
add
jns
pop
call
inc
or
push
pusha
insb
and
push
and
test
jb
inc
push
or
bound
cwtl
add
lret
mov
pop
insb
ja
ds
and
and
dec
push
rclb
insl
sub
dec
xor
add
inc
fs
xchg
clc
add
aam
add
mov
xor
fadd
adc
lods
push
add
sub
insl
stos
mov
lods
les
xchg
sub
in
orb
inc
adc
ds
adc
sbb
imul
mov
inc
cmp
jmp
sbb
jne
add
fld
nop
ret
out
sbb
js
loope
dec
pop
je
cmp
call
iret
stc
out
add
roll
add
call
sub
mov
xlat
repz
sub
enter
and
or
push
pop
inc
fidivs
jecxz
add
sahf
cmp
jl
add
js
mov
mov
jl
cmp
push
jo
xor
mov
dec
scas
inc
mov
cwtl
xchg
add
dec
loope
cld
cmp
push
loopne
inc
mov
or
jo
daa
test
inc
sub
rclb
push
cmp
pusha
sarb
shll
jecxz
loope
ret
sbb
ja
xor
jle
pop
add
inc
or
int
add
mov
test
jo
testl
xchg
and
push
or
xor
popf
jo
add
xchg
stos
ficoml
inc
and
andb
sub
inc
fsubl
rorb
rcl
divb
push
loopne
into
adc
push
adc
sbb
or
loope
outsl
jae
mov
xor
xor
xchg
js
loopne
nop
mov
or
push
or
int
pop
idivl
lock
test
sbb
and
sahf
push
sub
mov
xchg
sub
push
add
pop
iret
cltd
xor
dec
scas
dec
pop
add
in
aas
inc
xchg
push
sbb
cs
mov
add
mov
mov
or
push
xchg
cmp
xor
xchg
movl
popa
adc
push
pop
mov
stos
inc
push
fs
pop
pop
sbbb
dec
lahf
test
roll
push
pop
ds
xchg
inc
add
jmp
pop
add
ss
push
mov
mov
push
mov
lcall
adc
sahf
and
add
xchg
sub
testb
inc
push
inc
dec
adc
push
cmp
sbb
sbb
repnz
rdmsr
das
push
push
xor
inc
inc
or
cld
lock
movsl
testl
hlt
inc
sbb
pop
in
jns
pop
std
inc
je
cmp
out
icebp
cld
dec
sbb
pop
xchg
xor
push
and
test
pop
jecxz
push
imul
pop
push
push
add
lds
je
pusha
sbb
inc
dec
mov
add
das
mov
push
jg
mov
cld
in
shll
test
test
sbb
jg
pop
add
sub
or
sbb
std
mov
mov
in
in
pop
lock
out
xrelease
pop
add
pop
jns
and
jb
int3
or
and
add
ret
stos
or
mov
mov
imul
subb
mov
pop
mov
and
inc
push
and
pop
push
add
push
rolb
arpl
lock
pusha
rorb
pop
and
inc
inc
test
jmp
cld
push
mov
in
push
jns
sbb
aas
dec
or
push
push
xchg
adc
cmp
test
add
pop
loop
mov
and
adc
mov
xorb
ret
addl
xchg
movsb
cmp
shl
ss
imul
pop
mov
push
push
lret
jns
sbbl
xor
adc
adc
add
addr16
hlt
jae
or
jbe
pop
jmp
dec
dec
sub
xorl
shll
mov
inc
xchg
pshufw
je
js
dec
loope
add
inc
and
inc
int3
or
and
add
add
lret
and
call
test
cwtl
xchg
cmp
sub
sbb
test
push
ret
sub
push
ret
incl
sbbb
and
cltd
cmp
xchg
xor
std
inc
popl
adc
out
add
rcrb
push
mov
push
xchg
push
pusha
cmc
mov
outsb
lret
or
mov
popa
mov
and
inc
or
adc
xor
sub
xchg
inc
dec
xchg
push
add
stos
pop
loope
jae
lods
add
movsl
lea
sbb
movsb
in
add
jmp
out
add
fs
mov
lods
repnz
adc
sarb
mov
js
pop
or
adc
sbb
mov
arpl
push
dec
mov
push
jp
mov
loopne
sbb
test
inc
les
and
adc
add
nop
jg
push
inc
pop
add
pop
ret
mov
and
add
xor
add
or
jb
aad
xchg
and
mulb
test
inc
jmp
adc
push
add
dec
out
pop
incl
adc
pop
mov
sub
cltd
in
add
test
add
negl
gs
xchg
or
fimull
add
mov
into
icebp
adcl
sub
and
stos
stos
sbb
mov
enter
loop
xchg
and
lret
mov
pop
dec
pop
inc
sahf
add
adc
jo
jo
lret
push
fadds
int
push
add
and
inc
add
push
or
sbb
or
test
sbb
or
aad
cmp
leave
sahf
add
inc
mov
add
ds
stos
or
mov
jp
mov
push
or
or
mov
rdtsc
mov
add
adc
sbb
cmc
add
fwait
add
inc
add
sbb
notb
jae
and
adcb
test
jmp
inc
add
push
mov
outsl
movsb
dec
fldl
mov
or
push
jns
sbb
add
adc
dec
dec
and
lea
mov
repnz
xorb
addl
add
imul
and
clc
ret
mov
and
cli
lret
pop
and
sbbl
xlat
mov
pusha
push
repnz
dec
mov
pop
rorb
and
aad
add
shl
andb
in
pop
fldenv
mov
les
pop
clc
rorb
repnz
jp
fsub
lods
add
mov
adc
into
or
push
mov
cmpl
fcmovbe
adcb
ja
pop
inc
xchg
in
mov
add
int
call
pop
jno
arpl
rolb
pop
xchg
xor
mov
and
das
cmp
imul
xchg
pop
clc
arpl
fnsave
cwtl
push
nop
flds
pusha
pop
mov
test
mov
sub
stos
shlb
and
mov
insb
lret
fdivr
push
mov
adc
dec
dec
pop
lods
dec
pop
or
out
icebp
mov
dec
test
fildl
in
mov
push
arpl
fsub
pop
cmp
inc
inc
mov
sbb
inc
xor
cld
loope
jae
mov
xor
lret
and
push
movsb
dec
cmpb
fcmovnbe
or
inc
ficoml
sbb
pop
cmp
dec
scas
push
loopne
add
shlb
pop
cmpsb
mov
psrlq
out
push
and
jae
insl
mov
mov
es
sarb
loope
push
fldenv
or
lcall
pop
cmp
sbb
xorl
mov
jp
inc
movsb
jb
or
je
jnp
das
mov
push
xor
jns
push
mov
lods
loope
lock
pop
add
cmp
xor
pop
add
es
pop
and
dec
inc
xor
pop
adc
ja
push
mov
mov
insb
xor
push
loopne
lds
jno
adc
imul
mov
mov
cmpb
sbb
jl
shlb
dec
push
inc
and
or
aad
inc
cmp
rolb
dec
cmp
ret
mov
les
add
dec
rcrb
cmp
xor
or
xor
push
ret
fsub
push
addb
add
add
xor
ljmp
xchg
loopne
or
or
mov
dec
add
pop
mov
sbb
out
dec
leave
in
in
pop
cmp
mov
mov
sub
arpl
mov
jnp
pop
gs
imul
in
push
add
mov
int3
sub
add
movsb
inc
ficoms
stos
ret
xchg
loopne
fs
adc
adc
inc
push
nop
lret
xchg
iret
and
gs
jo
cmp
mov
add
pop
inc
jb
jmp
push
test
stc
push
add
fcoml
stos
movsb
xor
mov
ret
and
stos
cmp
sbb
in
fucom
mov
test
mov
and
ret
and
sbb
adc
pop
add
andl
popf
xchg
adc
clc
test
sbb
fbld
cmpsb
xchg
das
addr16
mov
iret
add
cmp
fs
test
push
or
pop
xchg
subb
cmpsl
shlb
popa
add
push
pusha
xor
pop
js
sbb
inc
scas
xor
add
outsl
and
mov
insb
lahf
inc
cmp
pop
add
aaa
cwtl
and
sbb
ret
jns
add
ficompl
cmp
cmp
xchg
pop
dec
jb
mov
or
add
cmp
cwtl
cmp
push
xor
inc
adcb
inc
mov
pop
jp
js
insb
xchg
lret
sarl
lds
add
xchg
js
add
pop
inc
je
daa
movd
sbb
pop
mov
xlat
push
mov
jmp
sbb
jae
inc
xchg
aad
add
inc
inc
jne
and
and
jge
sub
or
mov
gs
jns
test
mov
jae
test
mov
in
pop
and
inc
pop
and
ret
and
lret
add
jecxz
mov
mov
mov
add
loope
jbe
gs
or
mov
std
punpcklwd
addr16
mov
mov
cmpsb
dec
jb
scas
fdiv
jno
cmc
and
lods
mov
mov
xor
jl,pn
notl
aad
ret
mov
add
push
adc
inc
fidivrl
rorb
mov
in
shld
sbb
xor
mov
xchg
add
aad
xchg
sahf
add
loopne
push
jg
pusha
jns
mov
fcomp
sarb
jo
add
pop
ja
xchg
xchg
xchg
in
dec
add
cmpsl
clc
rclb
add
gs
repz
add
andl
inc
pop
cmp
push
ja
bound
dec
clc
add
sbb
add
fisubrl
fcomps
dec
jne
cmp
sbb
inc
jns
add
cltd
push
xchg
sub
negl
ss
aas
inc
add
pop
push
mov
movb
cmp
shlb
push
add
aas
inc
mov
int3
add
ret
mov
cwtl
add
leave
xchg
and
xor
jge
addb
loop
jae
add
jnp
fcmovu
cli
das
in
and
jb
add
and
push
clc
clc
scas
sbb
addl
add
daa
fwait
push
sub
push
std
add
sbb
jno
add
mov
pushf
daa
scas
mov
push
dec
cmp
scas
mov
add
fiaddl
lea
xor
loopne
shlb
mov
mov
sbb
dec
addr16
mov
pop
inc
cmpsl
test
mov
xchg
or
test
jo
dec
jae
or
mov
jl
add
rorb
xor
add
sarl
inc
stos
xchg
in
sub
inc
iret
andb
nop
and
adc
movsl
add
pop
arpl
sbb
ljmp
push
pop
cld
xchg
or
dec
dec
outsl
sbbl
mov
add
mov
in
add
sub
pop
add
aaa
add
adc
pop
push
lahf
inc
mov
in
je
push
mov
sbb
frstor
cli
push
jae
sarl
out
mov
pop
mov
imul
stos
or
mov
addr16
rcrl
mov
add
cmpsl
add
mov
sti
hlt
adc
dec
leave
or
mov
stos
push
add
jo
rcr
sbb
push
xor
faddl
je
mov
andl
add
outsb
xor
add
and
enter
filds
hlt
loop
jge
mov
add
pop
cmp
imul
cmpsb
ret
add
add
loop
dec
push
jo
dec
out
inc
mov
jmp
mov
xchg
ss
jge
mov
add
cli
addl
in
or
sub
inc
sbb
mov
add
sub
bound
sbb
mov
lret
call
xor
fnsave
xchg
loope
loopne
push
mov
fcoml
lods
and
or
test
outsl
add
pop
inc
mov
xor
jb
mov
dec
into
imul
mov
push
mov
jecxz
stos
xchg
mov
push
aaa
jno
or
in
sarl
sbbb
add
push
jbe
add
push
jp
sbb
xchg
rcll
cltd
pop
adc
pop
dec
inc
pushf
jle
add
in
sbb
popa
and
popl
cmp
pushf
sbb
loopne
mov
outsb
pop
add
mov
and
sub
add
add
mov
xor
xorb
mov
push
add
fld
mov
pop
pusha
xor
add
mov
or
aaa
jnp
repz
in
es
sbb
inc
setnp
dec
xor
mov
push
cmp
test
pop
outsb
hlt
add
inc
mov
orb
sub
jnp
pop
mov
adc
pop
xchg
or
cwtl
xor
nop
mov
fldenv
pop
mov
imul
add
loope
lcall
fisttpll
andb
sbb
and
jmp
dec
insb
call
jbe
and
arpl
addr16
jmp
push
les
in
jne
movsl
fimuls
outsl
xchg
push
pushf
or
mov
mov
popf
add
sbb
pusha
pop
test
subb
leave
push
pop
mov
lods
xchg
add
push
cli
sahf
sub
mov
push
xor
sbb
pusha
or
add
fstl
push
cmp
les
dec
loope
lock
inc
xor
popf
adc
jge
cli
xchg
loop
sub
or
fwait
inc
mov
mov
lret
add
in
add
insb
inc
stc
xor
and
dec
jecxz
cmpsl
jne
rolb
add
lret
enter
and
jno
daa
push
call
xchg
add
cmpsl
int
inc
add
sub
sub
cwtl
add
adc
js
dec
xor
shlb
test
sbb
sub
mov
cmpb
enter
pusha
out
push
int
add
pop
sahf
adc
iret
aaa
xchg
push
cmpl
out
jnp
xchg
add
or
stos
mov
add
inc
outsl
push
fmull
pop
push
or
popf
inc
pop
sbb
out
mov
adcl
jmp
lods
mov
imul
mov
dec
push
andb
jge
add
out
cmp
cmp
xor
push
cld
aas
das
cmp
mov
fdivrs
adc
loopne
pop
sbb
sub
xchg
aam
inc
fimuls
xchg
fadds
jge
imul
and
fninit
xchg
mov
and
into
andb
adc
orl
call
add
sbb
jmp
lcall
out
aam
jecxz
inc
ret
add
dec
andl
mov
lock
and
inc
nop
push
add
ss
push
add
push
inc
or
adc
mov
mov
mov
mov
sbb
adc
bswap
add
add
divb
dec
jb
mov
inc
jo
mov
lahf
xor
dec
dec
dec
or
ja
jo
mov
fstl
pop
xlat
jg
xor
mov
jns
xor
in
jno
add
dec
scas
iret
adc
xor
cmp
sbb
mov
mov
movsl
pop
jae
add
sbb
sub
faddl
mov
inc
pop
jnp
out
add
push
lods
imul
inc
pop
cltd
add
test
add
fisubl
dec
mov
add
inc
fcmovne
inc
fcmovb
test
test
sbb
andl
sub
lret
cld
push
add
and
adc
mov
mov
cmp
ficomps
cli
dec
or
fists
fstl
out
and
add
mov
lds
dec
pop
test
inc
xchg
lods
jge
pusha
push
pop
inc
in
lds
mov
imul
addr16
cmp
dec
testl
js
fistps
lods
adc
js
pop
pop
loop
inc
sub
les
mov
jno
pop
mov
jnp
add
dec
pop
push
push
mov
inc
pop
xor
aad
in
lret
ret
pop
pop
int
inc
pop
sar
mov
add
inc
out
aas
and
pop
loope
xor
and
insb
add
sbb
sbb
and
addl
add
outsb
sahf
cmp
jge
jmp
loop
add
testl
mov
mov
arpl
xor
push
sbb
test
outsb
mov
test
mov
mov
pop
mull
lea
jns
inc
rcll
shll
lods
add
daa
scas
inc
push
jmp
sti
ja
add
xor
cmp
mov
mov
ud1
fldenv
inc
cmpsb
ror
out
lods
xchg
pop
popf
dec
push
mov
jnp
aas
pop
inc
add
fstpl
cmp
sbb
inc
inc
xor
in
jb
flds
xchg
mov
dec
inc
iret
and
mull
jo
cmp
ja
and
andb
inc
mov
and
xchg
out
pop
pusha
jo
test
movsl
sbb
mov
lods
sbb
pop
dec
aam
push
jge
jmp
pop
mov
in
shlb
pusha
fiaddl
out
notl
fnstsw
call
cltd
mov
cmpsb
cli
shll
push
xor
mov
adc
push
sbbb
ficomps
jecxz
sarb
in
xchg
imul
popf
scas
insb
jmp
out
mov
jl
cmp
dec
iret
mov
sub
xorb
mov
cmp
jmp
jbe
es
add
add
or
std
bound
add
adc
sbb
pop
ds
ss
pop
stos
in
add
xchg
adc
add
jns
jle
data16
pop
hlt
sub
mov
pop
pop
xor
lahf
dec
das
cmp
add
jmp
mov
jnp
lret
stos
fistps
inc
dec
pop
scas
enter
std
xor
out
xchg
mov
and
in
arpl
outsb
hlt
xorb
sti
add
mov
or
mov
outsl
jae
cmp
add
xchg
test
enter
mov
jb
fnstenv
jae
pushf
mov
push
loope
add
je
or
popf
mov
jbe
add
cltd
pop
ret
sbbl
mov
add
dec
dec
sub
sbb
jno,pt
cmp
lea
call
das
xor
dec
push
pop
sub
sbb
pop
out
mov
sbbl
or
icebp
push
lock
add
mov
fdivr
mov
aaa
loope,pt
cmpb
pop
xor
sarb
popa
addl
or
rclb
hlt
jno
push
les
fcoms
push
inc
xchg
rolb
mov
stos
adc
inc
fiadds
sbb
pop
push
add
je
adc
push
mov
and
cld
sbb
shlb
andb
dec
test
xchg
imul
insb
cli
xchg
testl
xor
hlt
in
add
sar
scas
push
mov
pop
adc
insl
pusha
test
clc
fsub
jmp
popf
pop
pop
ljmp
stos
ss
int
call
imul
fildl
call
outsb
xor
shl
pop
inc
inc
test
jbe
fbld
add
mov
int3
fucom
pop
add
lods
shrb
das
rcrb
aam
adc
test
stos
xchg
cmp
aad
ror
mov
add
gs
mov
push
push
xchg
dec
aaa
dec
xchg
ror
ja
xchg
pop
xor
clc
stc
das
sub
add
xchg
out
aas
sahf
add
out
popf
aam
pusha
add
pusha
push
sbb
orl
rorl
push
cli
add
add
and
add
fcomps
jb
push
add
push
mov
lock
push
lock
in
je
add
jp
mov
cmp
test
add
jbe
adc
jne
lret
movsb
into
cmpl
add
push
subl
dec
jne
stc
js
xlat
inc
add
mov
inc
addb
inc
dec
push
pop
leave
jmp
pusha
dec
pop
push
dec
bound
inc
add
and
iret
push
jbe
pop
dec
stos
lret
push
rorl
pop
lret
mov
pop
and
aam
xchg
hlt
jns
jp
inc
movntps
aas
cmp
fsub
add
or
in
jle
lock
rcrb
fxch
jge
xchg
dec
xchg
add
jno
and
cmpsb
insb
mov
add
hlt
repnz
mov
ljmp
xchg
jo
das
nop
pop
add
inc
cmpsb
push
sbb
add
jg
dec
ret
stos
mov
int
ret
push
scas
ficoms
mov
jne
sbb
mov
add
mov
pop
add
fistpl
fsubrp
jo
cmp
push
adc
pushf
mov
inc
fstps
jle
cwtl
add
arpl
inc
fistps
push
mov
or
adc
push
push
mov
mov
sbb
popf
push
into
inc
movsl
sub
xor
add
stos
pop
pop
sub
or
inc
add
enter
pop
popf
addb
and
lahf
add
adc
adc
xchg
pop
psubusb
dec
decb
pop
add
push
arpl
fucom
int
pop
push
inc
mov
or
pusha
or
enter
mov
fsub
in
add
add
out
jmp
lock
insl
test
push
outsl
cmpl
wrmsr
jl
add
mov
test
jbe
add
and
fcomps
add
rclb
sbb
testb
cmp
decb
mov
cmp
ss
sub
inc
mov
out
inc
arpl
decb
hlt
dec
pop
lds
in
dec
cmpb
cmp
xor
fimuls
sub
sbb
and
sub
jo
bound
push
pushw
mov
out
cmp
sub
and
adc
add
cmp
loopne
scas
imul
sbb
adc
sub
jne
add
push
inc
out
aam
lods
ja
je
hlt
rorl
loopne
push
test
call
lret
push
pusha
jg
repnz
add
ret
cmpl
lock
add
mov
inc
pop
ret
add
cmp
arpl
mov
add
int
iret
add
sub
andb
push
mov
sbb
imul
jno
andb
int3
add
les
adc
push
push
pop
push
jl
mov
cmp
clc
pop
sbb
jecxz
iret
add
xchg
mov
cmpsl
jnp
cmpsb
call
lret
js
cs
icebp
cmp
loopne
or
fistl
je
xor
sbb
movsl
dec
outsb
add
arpl
push
gs
add
call
sbb
sub
sbb
mov
and
or
add
push
xchg
inc
jno
or
dec
jns
test
sub
shl
in
mov
cmp
js
out
mov
and
movsb
cmp
mov
mov
ss
add
rcrl
and
sbb
lcall
add
mov
add
push
test
mov
add
sbb
pop
xor
xor
add
pop
insl
in
movsb
xor
lret
add
or
mov
mov
pusha
mov
fcoml
adc
push
xchg
call
mov
add
sbb
sbb
inc
aam
in
and
fucom
out
test
ret
into
mov
add
add
ds
adc
cmp
loope
inc
cld
add
mov
xor
je
pushf
nop
scas
clc
arpl
out
andl
ficompl
rolb
scas
sub
dec
add
les
add
mov
pop
adc
push
or
aas
cmp
xchg
inc
fsubs
cltd
sub
xor
mov
rcll
cmp
mov
lock
sbb
outsl
xor
lods
pop
pop
std
dec
add
dec
lock
int3
or
rclb
sbb
xchg
rcll
ret
outsl
add
xchg
xchg
insb
add
pop
insl
dec
add
push
pinsrw
test
ret
test
dec
cltd
icebp
pusha
sbb
add
sub
jno
mov
add
jo
add
mov
pop
xchg
insl
popa
shlb
sub
push
xor
bound
lcall
xor
pusha
inc
and
or
sub
lock
xchg
jmp
es
test
add
in
inc
cld
rorl
add
fwait
push
inc
mov
aam
shlb
adc
push
add
leave
and
lock
add
cmp
jnp
sbb
daa
sub
xor
add
cmp
adc
mov
add
jnp
push
call
test
lret
cli
nop
pop
inc
iret
cmp
fs
ds
lret
cld
adc
dec
jne
cltd
mov
icebp
add
and
test
add
jnp
xor
clc
and
mov
jmp
jge
rcll
mov
xor
mov
mov
scas
adc
xorl
sbbb
out
mov
mov
cltd
mov
shll
loopne
cmp
inc
ljmp
inc
mov
xor
in
lret
andb
sub
addr16
aas
mov
es
popf
and
cwtl
pop
add
pop
cli
imul
or
testb
xchg
fcomps
daa
sub
jl
loop
inc
orb
pop
add
xchg
nop
sub
mov
inc
jp
inc
add
push
negl
sub
pusha
add
stos
xor
arpl
xchg
adc
popa
pop
addl
mov
in
mov
push
cwtl
ss
out
or
mov
inc
mov
mov
sub
subb
mov
fiadds
add
lods
cltd
mov
loopne
mov
add
xchg
mov
add
outsb
js
test
int
add
and
pop
add
dec
int3
sbb
fcmovnbe
inc
in
xchg
sarl
sbb
add
js
cmp
add
inc
pop
lods
xchg
aaa
jg
add
mov
mov
insl
les
jp
jnp
adc
xchg
sbbb
xor
push
mov
scas
mov
push
add
in
aam
jg
mov
xchg
add
xor
ss
lods
add
dec
pusha
add
loopne
xlat
adc
add
xchg
xchg
test
aad
sbb
jmp
rcrl
push
mov
xor
push
add
add
dec
add
mov
and
arpl
push
mov
leave
shld
sbb
lea
jns
mov
mov
push
inc
addr16
roll
push
sub
mov
cmp
xchg
stc
xor
test
loope
sub
fimull
sbb
mov
ljmp
add
clc
pop
and
pop
pop
dec
inc
mov
lods
push
js
ret
bswap
mov
inc
mov
mov
or
inc
cwtl
loopne
pop
adc
iret
lock
mov
mov
cmp
add
cmp
mov
and
or
add
adc
fdivr
dec
or
add
push
jmp
adc
repnz
mov
push
and
mov
mov
sahf
pusha
in
outsb
jnp
add
mov
xor
shl
mov
push
fisttpl
mov
aas
in
sahf
mov
sbb
push
mov
pop
out
add
cli
adc
lret
test
enter
mov
add
mov
dec
and
mov
jo
mov
mov
push
and
add
test
xor
mov
es
leave
xchg
sbb
nop
loope
add
xchg
cli
inc
xlat
out
mov
idivl
sub
and
jae
es
pop
pop
dec
xor
adc
mov
xor
mov
and
push
enter
scas
sub
hlt
clc
into
add
cmp
sbb
jns
pop
adc
jle
cld
les
push
xchg
add
xchg
leave
nop
icebp
fistl
test
jns
loopw
mov
ret
inc
xor
jmp
lea
inc
lds
push
inc
popf
cmpsl
test
arpl
jb
adc
stos
or
xor
add
jnp
dec
mov
sbb
adc
pop
mov
xchg
ffreep
jo
outsl
mov
add
pop
stos
lahf
es
pop
cmpsb
movsb
sbb
jp
add
push
pop
push
or
out
sbb
testl
movsl
out
movsb
adc
or
xor
xchg
sahf
inc
xor
les
dec
js
cmpsb
or
or
das
dec
mov
fisttpll
sbb
mov
push
inc
js
push
xor
mov
fwait
inc
dec
cmpsb
mov
push
hlt
arpl
fnsave
mov
pop
xchg
push
adcb
add
adc
inc
push
mov
pusha
cmp
sbb
push
ret
loop
lds
nop
jp
scas
insl
mov
outsb
add
les
jp
pusha
or
xchg
out
sbb
test
loopne
repnz
or
outsb
arpl
adc
jge
fs
dec
add
inc
mov
in
adc
sbb
mov
adc
test
and
jns
add
testb
je
cmp
jnp
cvtps2pd
mov
call
aaa
arpl
xchg
pusha
sub
scas
mov
pop
push
or
ficoms
aas
xor
xchg
xor
leave
bound
pop
stc
jl
dec
dec
and
ss
dec
pop
aad
cwtl
pop
adc
iret
adc
sbb
sti
and
pop
mov
dec
pushf
xchg
mov
push
mov
cmc
insb
fnsave
pop
mov
out
scas
mov
fldl
mov
cmpsb
bnd
sub
push
pop
xchg
add
lahf
dec
xchg
xchg
xor
mov
test
mov
insl
lods
mov
sbb
imull
and
mov
push
jmp
faddl
cmpsb
cld
add
xor
das
daa
pop
insb
sub
push
adc
cmp
push
add
push
aas
add
inc
sub
pop
nop
sbb
daa
sbb
inc
test
ret
out
xchg
mov
leave
add
add
scas
pop
cmp
ret
sub
or
fildl
mov
adc
loopne
shll
dec
xchg
shlb
jl
cmp
jmp
pop
inc
adc
sbb
push
add
and
add
jg
adc
shlb
sub
or
icebp
adc
mov
aas
jnp
or
pop
fcoms
icebp
add
jle
mov
mov
sbb
outsb
and
adc
out
jg
lock
xchg
scas
adc
insb
sbb
mov
repz
push
pop
or
and
icebp
das
inc
mov
cltd
ljmp
xchg
aas
jle
rcll
and
shll
call
cmp
xchg
mov
pop
xor
jo
dec
out
das
dec
sbb
adc
mov
sub
fwait
jl
adc
xchg
pop
mov
aaa
stos
je
in
or
int
mov
aad
xchg
push
hlt
cli
and
add
xchg
fwait
mov
sbb
sub
andb
add
mov
out
or
aam
jl
andb
in
fisttpll
scas
and
pushf
cmp
insb
movl
mov
loope
dec
gs
add
inc
lock
mov
or
mov
fstpl
jo
mov
push
sub
jo
inc
jle
add
rclb
out
je
andb
lods
mov
pushf
nop
add
xchg
pop
push
fnstenv
sub
out
dec
inc
faddl
cld
sbb
mov
mov
mov
cmp
push
les
test
and
or
dec
dec
push
add
iret
mov
and
cmp
xor
and
cli
xor
dec
inc
xchg
jno
loopne
add
sbb
pop
xchg
je
push
add
out
pop
xchg
bound
and
adc
xor
adc
ja
xor
pop
out
sub
dec
test
pop
sbbl
or
je
push
scas
out
add
adc
sbb
jae
rcrb
sbb
test
pop
mov
xor
mov
and
xorl
insb
outsb
jne
js
dec
ficoms
push
cmpb
mov
popf
cmp
mov
dec
sub
add
push
stos
jne
sbb
test
test
in
cvtps2pi
push
push
inc
cli
pop
pop
cwtl
adc
or
jg
cmp
adc
enter
xor
pop
mov
push
test
and
cmp
push
out
and
cmpsl
scas
mov
cmp
add
negl
ret
push
mov
test
add
rcrl
aaa
pop
add
stos
mov
lods
adc
mov
arpl
sbb
mov
cwtl
lea
lcall
mov
sub
or
adc
scas
mov
xor
std
add
sbb
es
daa
mov
dec
fs
popf
les
or
xchg
jmp
inc
sub
rclb
mov
xor
mov
jmp
mov
dec
ja
cwtl
cli
cmp
jo
adc
xor
test
dec
add
push
dec
pop
push
mov
inc
popa
inc
je
add
and
imul
cmp
sbbb
mov
addl
pcmpgtb
fwait
and
xchg
jne
pop
cmp
add
cmp
rorl
inc
mov
stos
mov
cmc
loope
mov
cmpsb
movl
int3
test
lcall
mov
mov
movsb
xchg
ja
jl
jbe
sbb
jle
xchg
faddl
sub
add
sbb
inc
and
aam
aam
sub
jnp
pushf
movsb
mov
test
mov
xchg
and
leave
sbb
mov
arpl
hlt
hlt
nop
or
add
push
or
mov
xchg
mov
insl
mov
xchg
call
cmpsb
lret
dec
xor
clc
dec
das
push
pop
in
push
xchg
jno
mov
sbb
mov
or
mov
mov
and
xchg
rolb
enter
inc
mov
fildl
mov
pop
js
and
push
les
adc
mov
push
sbb
lock
mov
movsb
add
cld
mov
sbb
xor
adc
and
hlt
das
loop
xchg
inc
insb
add
inc
movsl
sub
mov
sbb
or
xchg
hlt
sbb
test
inc
adc
mov
xor
out
mov
inc
stos
loopne
xchg
les
imul
inc
mov
xchg
aam
push
sub
xor
ds
add
stc
mov
test
std
jp
arpl
lea
xchg
negl
and
call
xchg
inc
call
mov
cmpsb
ret
mov
add
sub
addb
sar
cmp
add
push
sub
inc
dec
nop
mov
mov
and
rclb
add
imul
loopne
mov
out
fnstcw
test
test
ljmp
xchg
mov
add
jmp
rol
pop
cld
xchg
movsb
push
fwait
cmp
add
leave
mov
jp
dec
imul
add
lret
add
add
adc
sub
and
mov
aam
fistpll
mov
xchg
mov
test
sub
inc
cltd
jge
xchg
insb
rorl
in
xor
xchg
mov
jbe
or
push
push
les
lods
and
stos
enter
jbe
es
nop
add
or
mov
sbb
mov
sbb
imul
xor
jl
jb
rcrb
sub
jl
pop
movsl
inc
mov
push
inc
test
test
xchg
pop
mulps
jge
cmpsb
lea
mov
add
adc
rcrb
pop
and
fwait
or
mov
cmp
jl
pushf
lahf
mov
js
das
gs
out
jge
arpl
pop
pusha
mov
add
rolb
sbb
fnstcw
sbb
fdivs
je
imul
aad
fcmovnb
loop
insl
mov
mov
pusha
jne
mov
iret
mov
xchg
js
add
and
clc
out
dec
add
cmpsl
adc
rorl
sbb
cmp
ljmp
mov
loope
dec
pusha
mov
inc
mov
add
xor
andb
add
dec
int
pop
add
or
xor
in
and
xchg
inc
sbb
inc
psrlq
cmp
or
stos
xor
cmpsb
jno
mov
add
sbb
loopne
in
adc
inc
and
jbe
cmp
sbb
sub
nop
pushf
cmp
dec
fdivrl
or
rclb
shlb
shrb
adc
xchg
pop
sarb
test
mov
push
adcb
jno
or
inc
push
sbb
aas
shll
mov
mov
daa
or
mov
push
out
adc
or
test
jg
cmpsb
orl
inc
enter
inc
jg
sub
xchg
mov
decb
cmp
sbb
and
push
add
mov
test
popa
mov
nop
out
xor
pop
and
add
mov
add
shl
inc
arpl
cs
and
inc
cmp
mov
adcl
in
loopnew
iret
shll
and
jle
test
inc
lods
jge
pop
and
add
jbe
pop
cmp
inc
pushf
enter
pop
les
lock
jg
mov
stos
mov
jmp
jge
xchg
leave
into
outsb
lcall
cs
dec
add
cmp
dec
mov
and
test
adc
das
ds
test
enter
cwtl
sarb
inc
xchg
xchg
les
outsb
cwtl
pop
or
pop
sbb
add
test
mov
jp
xchg
pusha
inc
adc
or
cwtl
or
mov
push
add
lock
call
push
add
pop
in
jmp
insb
dec
hlt
push
sub
mov
mov
and
shrb
sbbb
sub
fbld
dec
shlb
sbb
or
cmp
add
mov
jp
addr16
es
or
sub
jae
push
cmc
fidivl
sbb
cmpsb
mov
addb
xlat
jle
out
inc
mov
call
add
mov
pop
je
cmp
pushf
add
mull
push
sub
mov
js
xchg
loopne
inc
and
in
ret
call
add
jnp
sti
out
mov
dec
jmp
jne
jnp
shll
mov
cmpsb
add
int3
push
testl
rolb
dec
or
bound
sbb
insl
loope
lock
cltd
mov
inc
add
jne
mov
fbld
fadds
aaa
sub
cmp
inc
je
pop
add
jne
adc
sub
icebp
push
js
xchg
scas
jbe
sub
xchg
das
icebp
nop
push
jmp
out
adc
or
loop
rolb
xchg
lock
sbb
adc
lahf
daa
sub
mov
add
dec
cmp
sub
mov
jg
negb
leave
or
pop
push
sarb
xchg
adc
sahf
mov
sub
inc
xor
dec
pop
or
daa
test
int
pop
les
adc
jp
movsb
mov
jno
sbb
pop
std
adc
or
test
jno
arpl
testl
mov
add
xor
jp
in
sbb
mov
test
pop
in
mov
mov
adc
mov
pop
sub
sub
push
out
lods
mov
and
fsubl
adc
lea
inc
cld
mov
in
loopne
js
and
ss
and
in
jmp
jne
insb
add
cmp
arpl
outsb
adc
clc
sub
cmp
and
add
daa
dec
inc
xchg
adc
and
cmpsb
push
popf
sbb
inc
mov
nop
cmp
add
cs
xchg
and
push
out
popa
ret
xor
sub
cmp
lcall
mov
xchg
add
inc
and
mulb
das
fists
addl
imul
sub
pop
rolb
or
negb
frstor
jo
cwtl
in
roll
push
sbb
sub
js
nop
pusha
hlt
mov
lds
aaa
jb
push
push
loopne
mov
xor
add
sbb
idivb
inc
jno
mov
add
cmp
pushw
or
flds
aam
loopne
mov
cld
pop
jbe
test
inc
cltd
addb
or
adc
lahf
pop
inc
sahf
lods
jg
das
popa
loopne
inc
hlt
pop
pop
cwtl
dec
or
imull
jecxz
stos
jle
mov
mov
push
sub
loopne
xchg
adc
cwtl
add
icebp
add
cmpb
pop
aam
sahf
add
lds
add
pop
push
or
sbbb
rcr
movsl
push
adc
cltd
push
sarl
sbb
and
add
cmp
mov
xor
inc
sbb
inc
inc
add
out
mov
lock
or
mov
push
enter
lods
adc
mov
test
lds
pop
xchg
cmp
bound
js
pop
call
push
pop
dec
xchg
nop
inc
inc
js
dec
cld
push
cld
xor
jl
mov
or
ss
rolb
fs
sub
cmp
sub
lea
lods
aam
jl
push
rolb
mov
stos
out
cwtl
mov
xchg
jnp
jge
pop
dec
push
jae
sahf
xchg
adc
je
adc
mov
mov
scas
das
pop
adcb
mov
pcmpgtd
sbb
mov
insl
add
pop
sbb
pop
inc
mov
jg
push
push
push
movsb
pop
xlat
shr
mov
sbb
mov
movb
hlt
loopne
fadds
xchg
call
cmp
stos
sub
xchg
leave
inc
js
roll
and
int
mov
sub
pop
push
or
fmul
ja
movb
cmp
xor
loopne
add
sbb
jae
adc
jno
sub
add
fs
add
fisubrs
jl
loope
sarb
gs
mov
lfs
cmpb
daa
adc
pop
mov
inc
cmpsb
aam
cmp
daa
push
add
insl
roll
jnp
clc
lret
lock
xor
add
addr16
adc
aam
mov
inc
sbb
add
stos
mov
sbb
test
pop
das
cmpsb
mov
scas
aam
sbbl
adc
shrb
daa
fsts
xor
inc
jo
push
sub
in
adc
add
mov
test
shlb
cmp
lods
mov
xor
push
outsb
xor
pop
fbld
stos
add
aas
push
mov
sub
rcrl
mov
dec
pop
cmp
and
add
or
call
xchg
xor
cli
rorb
mov
push
shlb
inc
push
xchg
ret
pop
repnz
les
je
mov
jge
andl
daa
mov
and
xchg
ljmp
test
push
mov
ja
sti
dec
pop
jbe
mov
pop
stos
ret
call
mov
pop
pop
outsb
fs
mov
jmp
out
pop
add
jbe
sbb
cmpsb
repnz
ja
xlat
rorl
jmp
pusha
orl
mov
cs
in
push
or
movsb
jo
and
xor
stos
out
push
gs
mov
cmp
sbb
fidivs
jp
jo
mov
insb
push
adc
enter
fdiv
and
fidivs
pop
add
inc
btc
rdpmc
add
call
ja
xor
cmp
inc
sub
inc
add
mov
cmpl
das
movsb
add
mov
testb
outsl
mov
cmp
pusha
clc
fstpt
xchg
push
cmp
jne
and
jp
and
mov
ror
push
jo
adc
xchg
enter
push
lds
idivl
push
jae
mov
das
adc
or
add
subl
add
push
sbb
in
repz
inc
testb
testl
or
stos
aam
pop
cltd
shrb
jb
fsubrs
and
cwtl
dec
in
sbb
pop
sub
out
push
dec
mov
sub
push
je
push
mov
mov
pop
mov
aas
mov
cwtl
adc
rol
daa
xor
xchg
je
and
push
mov
sub
push
dec
ss
sbb
mov
pop
pop
jle
mov
sbb
and
mov
xchg
pusha
lods
test
mov
pushl
mov
repnz
pop
test
inc
cld
jge
call
or
mov
xchg
or
sub
cmp
addb
dec
xor
popf
pushf
adc
andb
adc
jp
fs
xchg
aaa
jmp
ljmp
xor
pushf
inc
fldcw
pushf
decl
pop
mov
shrl
add
lods
mov
jb
jp
icebp
addl
adc
sub
mov
pop
punpcklbw
adc
pop
out
jmp
inc
jbe
mov
mov
daa
lret
stos
pop
mov
push
push
sub
lock
cmp
daa
mov
mov
push
and
lods
mov
or
and
lea
cmpsb
mov
jbe
jecxz
mov
sbb
nop
ss
or
xor
movsb
das
dec
lock
xor
and
add
xor
gs
out
out
and
pop
pusha
daa
loope
pop
daa
andl
mov
mov
sub
adc
sub
es
jno
faddl
xchg
pop
xlat
jo
ss
mov
es
xchg
popa
imul
syscall
dec
cmp
mov
cmp
shll
shll
jl
inc
mov
fidivs
cmp
adc
sub
mov
fsubrl
push
adc
mov
test
dec
mov
test
loop
mov
sub
mov
ja
loope
shrb
xchg
adc
lods
mov
add
mov
sbbb
or
out
mov
nop
mov
mov
cmp
sub
fisubl
mov
nop
cltd
sbb
popa
adc
and
movsl
push
add
in
mov
sbb
and
sbbb
push
ficoms
cmpsb
lret
push
cld
in
sub
repz
jle
test
add
xor
cmp
add
add
mov
in
or
mov
inc
push
ds
lahf
outsb
cmovnp
sbb
mov
inc
jnp
cmp
test
lcall
jo
and
push
xchg
adc
inc
and
cmp
arpl
negl
mov
xchg
pop
add
test
or
cmp
orb
or
mov
repnz
xor
push
pop
pushf
repz
cmp
popa
hlt
aaa
adc
mov
pop
jp
lods
sub
mov
pop
sbb
mov
enter
outsb
and
test
loop
jns
inc
mov
and
mov
sbb
adc
and
add
mov
lods
jb
movsl
dec
aad
call
cmp
push
or
fiadds
mov
add
adc
enter
jns
and
out
and
mov
mov
and
sub
add
mov
xchg
mov
xchg
inc
pop
sbb
je
cmp
ja
sub
inc
cmp
andl
dec
xor
out
fistpl
in
pop
push
dec
pop
out
in
aam
or
pop
leave
sub
movsb
push
mov
scas
int3
add
xchg
pop
push
xchg
xor
andb
jno
inc
out
inc
add
es
mov
adc
and
ret
mov
mov
add
sub
inc
xchg
mov
in
addb
in
xor
push
pop
push
add
imul
enter
dec
fldl
mov
cmpl
inc
mov
clc
mov
mov
or
mov
icebp
push
mov
jo
mov
outsl
mov
addl
sbb
pop
in
js
mov
push
stos
xchg
inc
jnp
sbb
shrb
add
xorb
inc
cmp
loopne
adc
mov
add
push
pop
xchg
sub
inc
xor
mov
xchg
xchg
sarl
ja
add
jo
dec
scas
lret
dec
les
data16
clc
push
sub
in
pusha
fscale
in
ja
add
movswl
push
loope
in
subb
add
enter
pop
add
in
into
pop
into
mov
dec
shlb
inc
mov
fdivrl
les
xlat
xchg
sarl
movsl
dec
movl
and
lret
xchg
test
insl
add
mov
jg
add
dec
add
and
jbe
xchg
fsubl
pop
mov
js
xchg
imul
rclb
xor
cli
and
lods
insl
rol
jae
jne
pushf
or
inc
xor
add
push
add
xchg
jmp
out
popl
lahf
xchg
loope
inc
sub
mov
or
mov
lods
movsb
in
inc
add
mov
sahf
aam
add
inc
pusha
xchg
push
or
xchg
movsb
in
popa
push
mov
lcall
cmp
pop
fs
add
fistps
add
repnz
dec
daa
sub
into
sub
dec
shlb
clc
jbe
push
out
push
mov
ja
lret
adc
push
mov
or
jg
loope
popa
sub
cmpb
mov
ss
mov
test
sbb
cli
stos
adc
jne
lahf
inc
cmp
push
add
jmp
mov
push
rorb
mov
in
adc
int3
cmp
xor
notb
negb
xor
enter
cmpl
adc
lods
aam
mov
and
rolb
out
and
or
or
mov
test
xorl
nop
insb
cltd
cmp
push
xchg
add
out
outsb
jns
push
inc
scas
sub
or
sbbl
js
fidivrs
dec
loopne
out
cmp
fs
loopne
mov
pusha
cmp
fucomp
loope
pusha
inc
pusha
add
adc
int3
xchg
push
outsb
add
cmpl
jno
jns
sbb
add
repnz
cmc
cmp
jne
add
fimull
dec
das
enter
jno
adcb
push
add
and
jl
aad
and
dec
fsubrs
fwait
cmp
inc
xlat
inc
or
sub
mov
mov
cmp
roll
mov
movsl
mov
pusha
push
nop
cmovae
arpl
rolb
push
rcrb
imul
jg
call
mov
jnp
push
inc
pop
add
pop
inc
adc
nop
inc
add
add
adc
into
es
add
out
ret
and
add
sub
sbb
dec
inc
or
rcrb
je
in
jno
ds
add
scas
adc
mov
mov
mov
jbe
ds
jo
aad
jb
and
dec
push
loop
dec
repnz
xchg
adc
pusha
sub
sbb
add
in
scas
cmc
ret
xor
push
mov
mov
jbe
fs
cmc
push
xor
call
addb
mov
sbb
add
mov
cwtl
and
push
add
xchg
mov
pop
add
jb
lds
lcall
lret
pusha
sbb
leave
and
or
xchg
fidivrs
xchg
and
imul
les
gs
sub
movsb
hlt
xchg
add
mov
orb
mov
in
mov
test
xchg
add
or
jle
loopne
mov
add
insb
and
sub
xchg
sub
mov
dec
jae
dec
lds
ss
jns
fcomi
popa
sti
add
jg
out
icebp
loopne
inc
or
inc
jne
add
cwtl
xor
enter
dec
bnd
enter
cmp
enter
xchg
push
add
lods
mov
fs
push
inc
push
icebp
clc
sbb
mov
loopne
xor
xchg
sbb
sub
push
call
das
dec
test
mov
aam
push
shlb
in
mov
ds
mov
arpl
mov
outsl
mov
push
add
je
mov
sbb
push
and
das
loopne
insl
push
pusha
add
out
push
xchg
xor
jnp
loope
adc
add
gs
adc
fs
rorb
ficoms
je
repz
les
pop
add
repz
mov
push
sahf
dec
or
xchg
push
repnz
out
jb
in
iret
lods
push
daa
movsb
aad
dec
rolb
or
ret
sbb
add
inc
mov
push
push
roll
add
pop
inc
jg
and
aad
lds
in
pusha
jae
pusha
adc
adc
sbb
lods
or
cmp
js
add
lock
std
jle
test
xchg
lret
jns
add
and
pop
mov
add
insl
dec
test
sbb
f2xm1
xor
dec
sbb
es
js
adc
xor
sbb
nop
out
jp
cmp
mov
les
jmp
decl
push
cltd
xor
cld
lret
mov
outsb
adc
daa
adc
loope
nopl
mov
insb
je
and
push
les
or
xchg
iret
add
mov
sahf
inc
cmpsb
pcmpgtw
inc
jo
mov
jnp
mov
lods
mov
inc
repnz
cmc
add
xor
test
hlt
mov
enter
mov
rcr
roll
or
xor
add
ds
mov
clc
and
fisttps
push
push
jbe
dec
and
mov
call
das
int3
adc
ror
mov
cmp
and
cmpsl
jno
shll
add
cmp
and
pop
das
shlb
sbb
pop
xchg
inc
adc
pop
cmc
sbb
sub
sub
sbb
insl
repz
sub
mov
push
dec
rclb
dec
repz
mov
and
xchg
add
das
sbb
lret
or
xchg
out
ret
cli
cwtl
mov
imul
xchg
arpl
loopne
and
pushf
add
test
scas
lret
sbb
cmp
xchg
adcl
cmp
lock
es
pop
das
les
add
xchg
jl
adc
mov
in
mov
add
and
mov
xchg
cmp
subb
pop
mov
pop
inc
inc
aas
ja
into
icebp
xchg
pop
mov
add
es
rclb
out
icebp
je
dec
andl
jae
aam
call
cli
cli
rorb
mov
repnz
lods
sbbb
mov
cwtl
dec
mov
jns
sbb
mov
add
popa
in
or
sub
nop
mov
sahf
sbbb
sbb
mov
xchg
xchg
subl
pop
fbld
or
or
cmpb
mov
adc
mov
add
adcb
mov
cmc
ret
adc
pop
mov
mov
or
push
or
sub
inc
fneni(8087
bound
sbb
jecxz
clc
scas
mov
sbb
sub
add
push
leave
movsw
mov
or
out
sub
shlb
les
and
loopne
loope
cmpsb
adc
xchg
jns
xchg
mov
stos
outsb
test
popl
lods
xor
pusha
mov
popl
ja
movsb
cmp
lock
insl
bound
push
cmc
pop
dec
jle
testl
leave
xor
sub
insb
adc
rcrw
repz
pop
clc
loope
add
rclb
xchg
dec
stos
sarb
push
push
mov
sahf
fs
cmp
mov
inc
cmpsl
loopne
cmp
fsubrs
or
add
stos
jno
and
mov
movsb
sub
mov
int3
mulb
inc
lret
gs
cltd
jo,pt
jmp
cmp
test
es
and
sub
data16
lock
in
es
icebp
adc
sub
push
fisubs
sbb
add
ret
cld
cmc
xchg
or
and
jns
sbb
cmp
mov
and
add
inc
adc
test
and
push
popa
add
mov
or
cmp
ja
add
sbb
out
js
std
sub
das
les
xor
and
pop
push
mov
movsb
je
pop
adcb
outsb
cltd
loop
mov
or
es
or
lods
mov
add
jle
clc
sti
hlt
push
xor
sbb
call
jle
or
hlt
andl
in
jbe
int3
and
cmp
data16
enter
stos
sub
pusha
jb
cmpsb
mov
inc
stos
inc
pop
in
movsl
rclb
aaa
std
dec
es
outsl
aas
loope
pop
or
mov
or
ret
cmp
daa
add
repnz
xchg
push
dec
xchg
call
mov
call
jg
xor
or
cld
stos
jo
mov
or
mov
xchg
aam
dec
ljmp
cltd
and
ds
lahf
add
arpl
jo
push
gs
into
sub
in
cmp
xchg
sbb
shll
sbb
movsl
jnp
jecxz
adc
or
aad
nop
cld
fcom
pop
mov
push
add
and
xor
and
inc
out
cwtl
push
xor
add
sti
out
out
hlt
mov
add
sbb
jb
or
lea
adc
pushf
faddl
out
loope
xor
call
outsb
arpl
sbb
dec
push
fmuls
ficoml
cwtl
adc
add
out
lods
out
insb
mov
stc
int
push
out
test
cmp
push
shlb
cmpsl
pusha
repnz
sete
ret
loope
fs
hlt
shlb
xchg
ja
fmuls
aaa
or
popa
lock
push
test
xor
pop
inc
inc
cs
pop
add
test
add
testb
rclb
in
jno
pop
adc
add
jl
aam
lret
fistps
out
mov
clc
ds
lock
andl
add
loop
outsl
mov
push
sub
cmpl
mov
insl
adc
jae
jno
pop
or
add
in
ret
sub
or
and
movsb
popf
fcomi
cmp
cltd
dec
in
enter
in
mov
inc
mov
push
icebp
mov
add
pusha
out
pop
movsb
ficompl
xor
dec
sub
add
mov
adc
scas
cs
or
insb
and
das
pop
or
jecxz
sbb
pop
enter
xchg
nop
jle
popf
repnz
orl
ljmp
arpl
in
mov
push
fisttps
sub
jl
in
mov
sub
rolb
imul
stos
inc
push
sub
xchg
xchg
or
cmpsb
xor
ret
mov
add
push
arpl
add
outsb
loope
and
cmpsb
jecxz
clc
xchg
sub
aam
push
rcrl
das
in
mov
bound
iret
add
pop
jecxz
in
test
lods
fbld
xor
das
or
mov
adc
insl
sbb
lcall
leave
jae
xor
fistpl
andb
and
xchg
lret
stos
mov
testl
orl
push
testl
in
and
inc
inc
xchg
add
jge
es
inc
insb
and
faddp
adc
add
dec
mov
jge
les
inc
inc
jl
rol
xchg
inc
mov
mov
sti
sbb
push
add
rorb
xchg
cmc
int3
sub
movsb
adc
cs
addb
dec
and
pop
mov
fstl
mov
adc
mov
push
scas
and
sub
pop
add
mov
add
xchg
and
add
hlt
dec
in
add
pop
movsl
lahf
notl
xchg
shlb
fistpl
xchg
add
shrb
and
pop
mov
adc
shll
push
add
in
xchg
pop
add
punpcklwd
mov
insb
lcall
es
sbb
and
imul
mov
scas
call
sub
add
aaa
add
cmp
mov
insb
add
dec
sub
push
imul
push
jbe
add
xchg
add
lds
pusha
dec
scas
fisubrs
add
xor
add
xlat
pop
cmp
sub
fisubrl
psubd
repnz
pop
in
arpl
lcall
cmpsb
sarb
sbb
xchg
repnz
lret
add
and
add
and
pushw
mov
scas
push
in
add
call
fst
add
shll
cltd
adc
aad
add
inc
add
push
int3
jno
gs
mov
mov
add
test
mov
add
outsl
and
push
add
dec
mov
add
jb
pusha
jb
add
sbb
jns
xor
mov
xchg
inc
aas
mov
fsubl
add
hlt
lcall
sbb
jp
add
jle
push
addb
outsb
imul
test
je
and
cmp
and
popf
loop
xchg
xor
aam
pop
xor
mov
jmp
out
dec
sbb
xchg
testl
and
dec
adc
xor
ljmp
mov
fiadds
lahf
ficompl
or
imul
add
data16
or
dec
insb
sub
daa
addr16
ds
add
lcall
xchg
xor
mov
pop
nop
cmc
adc
lock
inc
xor
pusha
cmp
push
stos
xchg
mov
and
add
jnp
rorb
sahf
in
daa
lahf
add
lret
xchg
imul
dec
mov
xorb
push
sahf
loopne
add
ljmp
mov
add
pop
add
lock
movb
les
mov
int3
add
add
jp
push
lahf
ret
in
loopne
fdivrp
pusha
cmp
lret
cmp
sub
fs
jecxz
rolb
add
out
jmp
mov
jae
or
cmp
lcall
sbb
and
int3
ja
out
add
gs
add
adc
mov
sbb
add
or
adc
mov
test
push
rorb
bound
add
xlat
insb
sub
pushf
and
add
call
roll
les
pop
stos
pop
lahf
and
in
int
or
add
comiss
fldt
push
faddl
mov
sbb
adc
rclb
add
test
popf
sub
pop
lock
push
dec
movsl
jecxz
in
dec
push
add
adc
fldl
mov
jno
and
cmpsl
push
dec
pop
pop
pusha
mov
and
scas
or
push
dec
pusha
enter
jp
dec
outsb
shrl
int3
arpl
les
filds
cmp
sub
sbb
mov
lods
and
es
sub
sub
mov
loopne
fnstenv
mov
in
adcb
xor
ret
or
cmp
rolb
ds
sbb
and
movsb
mov
mov
mov
jno
mov
in
xor
jnp
stc
xor
jb
clc
cmp
in
jl
push
dec
cwtl
in
cmpsb
loope
std
pop
add
mov
lods
push
ljmp
mov
add
je
aam
imul
outsb
sub
xor
in
sbb
lods
mov
out
lahf
push
jmp
mov
loopne
xor
push
push
test
cmp
ds
nop
and
mov
rclb
add
dec
stos
icebp
cli
cmp
out
push
xor
pop
xor
pop
fldcw
data16
movsl
add
insl
dec
jo
add
daa
mov
nop
dec
add
push
cltd
int
repz
add
push
or
xchg
mov
mov
mov
call
sub
or
jg
in
dec
pop
and
pop
hlt
jne
in
add
lods
aad
call
adc
xor
mov
aam
ss
add
jp
mov
lea
cmp
popf
xchg
add
sti
add
add
adc
add
idivb
xchg
dec
or
fisttpll
arpl
mov
or
roll
xchg
dec
sub
adc
icebp
sbb
inc
mov
lea
pop
add
sub
pop
push
dec
add
push
xchg
and
rolb
mov
es
xchg
push
repz
adc
adc
sub
mov
cmp
cmp
dec
int
cmc
add
push
clc
xchg
mov
data16
int
jp
cltd
add
pop
mov
sub
sbb
lods
inc
jle
xchg
add
and
mov
movl
insb
push
aad
cld
cwtl
pop
bound
add
arpl
loopne
shrb
add
xchg
mov
in
fcmovnu
lock
jae
and
mov
add
inc
stos
pop
add
xor
add
fldl
out
cmp
inc
cmp
push
pop
sbb
xchg
addl
lcall
xchg
mov
adc
icebp
and
fistpl
push
les
stc
add
into
cld
nop
sub
jo
add
pusha
xchg
adc
sbb
imul
pop
push
or
mov
dec
lahf
inc
add
inc
out
cmpsl
push
sbb
add
test
std
jp
add
xchg
mov
fbstp
sub
std
movsl
flds
inc
jnp
dec
mov
cmpsl
inc
add
jp
sti
in
mov
int
mov
add
cmp
std
lds
test
int
adc
dec
iret
inc
jnp
adc
pop
cwtl
add
mov
sbb
lods
clc
data16
mov
cmp
lahf
scas
pop
arpl
xor
rclb
adc
dec
add
sti
fildl
add
pop
jp
out
or
sbb
cmp
add
jo
cmp
or
in
rsqrtps
dec
jae
lock
loope
and
push
add
stos
add
cmpb
push
into
int
sbb
mov
gs
insl
cs
jne
cmp
pushf
adc
lret
cwtl
jnp
xor
roll
xchg
orb
add
rcpps
or
push
and
jg
call
dec
add
inc
jmp
ret
lods
test
gs
inc
or
xor
add
push
mov
iret
loopne
adc
je
fdivp
inc
imul
lds
out
add
add
sub
mov
jbe
outsl
or
mov
enter
inc
arpl
jns
lods
lret
jge
jg
push
push
lahf
dec
bound
jno
shlb
mov
pop
add
mov
adc
test
dec
add
add
xor
jle
clc
sti
cli
mov
xchg
out
pop
int
adc
jo
ds
add
rclb
popl
ret
int
pusha
and
add
leave
sub
movsb
push
adc
mov
add
and
stos
hlt
or
mov
popa
int3
and
enter
lods
mov
add
jae
outsb
js
adc
mov
xchg
fcoml
jp
mov
add
mov
adcl
cwtl
loop
mov
nop
cmpsl
jno
and
add
or
scas
rorl
xchg
aas
mov
cmc
cltd
shll
inc
in
add
dec
add
pop
jecxz
adc
or
cmpb
pop
std
lock
cmpsb
sbb
pop
xrelease
rorl
enter
xchg
pop
fucomp
and
fiadds
lret
lock
push
leave
mov
sub
sbb
lcall
cmp
xlat
adc
lds
dec
add
bound
add
xlat
pop
loopne
fbld
jno
cmpsl
cmp
rolb
sahf
push
mov
xor
test
adc
jae
add
pop
out
outsl
mov
loope
stos
pusha
add
sbb
sbbb
fwait
in
rcrl
or
std
pop
cmpsl
add
inc
mov
sub
ror
aam
in
nop
pop
and
aas
outsl
cmp
xchg
shll
add
cmp
add
adc
mov
push
enter
test
stos
rclb
push
movsl
clc
pop
add
or
cmp
mov
add
push
sbb
add
scas
dec
or
jl
jge
pop
ret
inc
sbb
jl
add
mov
sar
ret
sbb
add
add
push
mov
test
in
xchg
lahf
outsb
iret
push
rcll
mov
rcr
cld
push
insl
call
shlb
jg
mov
sbb
add
sub
sbb
jg
add
lods
dec
pop
sahf
fs
or
or
or
pop
dec
daa
xor
out
cmp
idivl
fwait
add
icebp
mov
cwtl
push
enter
jmp
adc
jg
mov
add
ret
shll
dec
push
insb
loopne
add
dec
fcmovbe
test
movsb
cld
jb
ljmp
insl
clc
mov
repnz
mov
and
adc
test
mov
pop
jg
clc
in
icebp
sbb
push
out
or
lods
in
and
mov
add
push
clc
cli
push
cwtl
sub
movsb
ficompl
call
xchg
pusha
jo
daa
xor
sub
repz
test
jno
cmp
xorb
jge
and
icebp
ss
sub
inc
sbbb
xor
std
pop
add
jl
call
jns
xlat
sbb
jne
xor
push
mov
hlt
mov
inc
aam
mull
push
xor
xchg
mov
adc
scas
popf
mov
push
shrl
outsb
jge
inc
int3
jl
push
stc
icebp
sub
and
mov
lahf
mov
or
xor
cld
pop
pusha
and
adc
add
xor
fisttpll
mov
lcall
fisttpl
jle
test
addb
in
xchg
int3
pop
xor
dec
mov
and
or
mov
icebp
icebp
sbb
jecxz
scas
jo
adc
mov
sbb
sbb
add
mov
sarb
and
or
es
test
pop
dec
and
mov
mov
ja
mov
imul
lret
repnz
nop
das
push
imul
sbb
out
repnz
shlb
mov
lock
mov
xchg
push
roll
and
add
lcall
mov
and
pop
js
hlt
ficomps
scas
mov
jno
clc
movsb
adc
and
ret
and
xchg
fiaddl
clc
scas
xchg
mov
mov
seto
adc
cmp
popa
jb
sub
movsb
and
add
inc
inc
fidivs
or
mov
popa
scas
in
xchg
or
dec
je
or
fmuls
xchg
rcl
jbe
xor
push
xor
adc
scas
add
dec
push
xor
or
and
scas
push
enter
push
jns
mov
stos
pop
ret
fdivr
inc
xchg
add
mov
outsl
mov
bound
or
outsl
fcompl
mov
lods
popf
js
push
scas
jnp
xor
adc
jle
adcb
xor
ss
and
lar
pop
jnp
lret
out
sub
and
sbb
orl
add
jle
mov
sbb
andb
call
add
jns
ja
jmp
pop
int
mov
mov
inc
xor
mov
mov
lahf
in
lds
add
pop
cli
addl
mov
and
inc
mov
dec
dec
push
adcl
stc
ret
pop
add
add
lock
sbb
arpl
xchg
dec
faddl
rclb
mov
aad
movl
push
sbb
lock
fildl
and
popf
sbb
iret
xchg
dec
cmp
push
fsubr
fcomps
inc
loopne
dec
push
push
push
xor
repnz
sti
loopne
push
outsb
pushf
add
mov
popa
jmp
add
loope
nop
iret
mov
fcoml
jne
movsb
addb
inc
lahf
stc
add
sub
ret
xor
enter
mov
sbb
cld
stc
subb
inc
jbe
adc
push
push
fidivs
adc
mov
add
out
xor
subb
insl
les
inc
or
push
mov
push
mov
gs
push
or
xor
jmp
or
add
lcall
mov
inc
mov
push
lock
jmp
orb
xlat
sub
cmp
pop
or
in
push
pop
cmc
inc
sbbl
mov
add
push
or
and
in
xor
add
or
fdivrs
sub
imul
pop
aaa
addr16
mov
mov
add
inc
call
adc
mov
xor
cmp
mov
ret
rclb
call
pop
or
cli
mov
mul
push
push
xchg
cli
sub
fmuls
repnz
insb
and
clc
mov
pop
add
xor
add
int
xlat
andb
nop
call
adc
in
adc
push
jb
andl
mov
pop
cmp
xchg
push
shrl
lods
cmp
and
jno
pusha
sub
data16
pusha
mov
cli
test
add
test
push
adcb
mov
xchg
call
cmpsb
xor
push
lock
sbb
xchg
push
pop
or
imull
xor
shlb
stos
dec
ljmp
addb
leave
mov
in
sub
enter
lcall
rclb
mov
fdivrs
or
sbb
scas
add
push
add
sti
movl
fwait
xor
aam
add
xor
je
or
andl
cwtl
test
test
cmpsl
cmpsl
mov
daa
pop
popa
mov
incl
dec
mov
bound
pop
jnp
adc
push
mov
mov
popa
stos
cwtl
andb
or
inc
sbbl
ficomps
and
repz
adc
icebp
pop
pop
mov
stos
xor
call
lret
rorb
dec
add
inc
sub
aam
push
add
testb
imul
mov
in
popa
fldt
cltd
out
cmp
or
xchg
pop
inc
mov
pop
push
arpl
jnp
sbb
lahf
dec
and
mov
ds
xchg
mov
mov
push
pusha
insl
xor
loopne
xor
cmc
cmp
or
xor
mov
sti
jmp
push
push
mov
xor
arpl
shlb
cltd
popf
mov
add
lea
xor
stc
ret
and
or
or
out
push
add
sahf
and
jecxz
mov
cmp
push
adc
push
inc
adc
adc
mov
fldcw
sub
sub
ja
sbb
jge,pn
push
push
lock
and
or
testb
push
jecxz
js
sbbl
ss
or
push
paddw
push
adc
cmp
ja
jl
inc
pusha
pushl
cwtl
adc
mov
mov
push
jmp
fiadds
dec
adc
mov
jns
pop
cltd
mov
sbb
mov
jge
jo
repz
and
and
popa
mov
frstor
sbb
xor
loopne
dec
add
sub
nop
cltd
dec
push
xor
cmpsb
xchg
xchg
push
add
clc
out
andl
xchg
or
push
dec
insl
mov
cmp
pop
adc
fwait
jae
jbe
sbbl
sub
mov
adc
mov
dec
orl
or
rorb
inc
cltd
fadds
dec
loop
nop
or
cmc
add
adc
test
test
aad
retw
add
int3
mov
or
fdivs
jo
xchg
addl
pop
add
popa
and
popf
sub
cmc
mov
sarl
or
ret
std
sti
loope
hlt
das
in
cmp
pop
cmpl
test
adc
inc
adc
dec
add
imul
xchg
testb
ja
inc
and
lcall
push
dec
test
pop
dec
mov
ja
sbbl
cmp
aas
dec
dec
fwait
add
xor
add
mov
and
dec
outsb
ljmp
sbb
andl
scas
mov
mov
xchg
scas
cmp
je
and
mov
add
mov
test
loopne
mov
cmp
inc
sub
cmpsl
add
xchg
push
add
jae
add
nop
in
roll
cld
js
inc
cmc
popf
mov
hlt
push
outsl
adc
lcall
mov
pop
xchg
sbb
in
xchg
or
cmp
add
lret
dec
jo
out
cmp
add
cs
or
jo
jno
rcrl
mov
inc
adc
jno
xchg
fnsave
add
shl
aad
push
pushf
mov
rorl
test
daa
sub
xor
loope
push
dec
push
ds
and
xchg
les
hlt
popa
addl
mov
repnz
out
cmp
into
stos
mov
jmp
add
les
rcrb
scas
out
mov
cmp
sahf
imul
fs
mov
daa
pushl
sbbb
lock
int
or
sbb
xor
outsl
mov
mov
push
pop
sbb
push
jmp
popf
rolb
push
scas
repnz
mov
sbb
mov
jle
add
mov
or
push
or
and
fcompl
daa
pop
xchg
iret
sbb
addb
add
inc
mov
jge
pop
addl
movsl
ja
dec
loope
sbb
lcall
cld
jl
push
add
jbe
mov
add
fnsave
call
shrb
dec
and
adc
push
and
sub
inc
sti
pop
push
jmp
jno
cli
sub
jbe
std
mov
adc
cmp
in
das
pop
push
fs
or
in
add
lock
add
lds
or
dec
pop
stos
enter
test
inc
ret
fstpt
out
cmp
repz
add
bound
xchg
adc
lcall
clc
jmp
je
add
mov
mov
and
clc
dec
cmp
mov
jae
cli
popl
sbb
movl
orl
add
or
insb
push
dec
xchg
push
idivb
push
mov
dec
shll
fistl
pop
inc
sbb
lret
xorb
cld
bound
nop
push
test
mov
jmp
je
dec
das
call
or
xor
push
jle
jl
mov
fldcw
loopne
add
scas
std
cmp
mov
add
pushf
sub
sahf
mov
and
mov
pop
sbb
decl
jg
push
sbb
cmp
pop
sub
cmp
push
add
pop
pusha
in
div
cwtl
jae
adc
cwtl
mov
add
sbb
dec
jb
inc
mov
pop
mov
cmp
xor
cmp
cwtl
add
fsubrs
sub
add
out
push
hlt
add
pop
rcrl
and
lret
or
lret
int3
dec
mov
call
pop
pop
jne
shr
or
dec
outsb
cld
add
repnz
je
push
mov
cmpsl
lahf
test
pop
cmpsb
add
adc
add
ret
sbb
sub
inc
or
add
cmp
mov
mov
add
cmp
or
rol
mov
ss
je
fsubrl
and
push
je
adc
xchg
lcall
xor
test
inc
and
movsb
enter
imull
aaa
into
add
pop
rdtsc
jmp
ja
cmp
pop
sbb
push
pushf
mov
mov
mov
aad
sti
inc
scas
xchg
repz
sub
add
mov
pusha
ret
fs
cltd
jmp
xor
out
pop
cmpsb
insl
addb
mov
xchg
push
inc
add
dec
idivb
or
pusha
adc
lea
add
xchg
push
gs
xor
out
popa
fs
dec
mov
inc
aaa
testb
xlat
dec
sbb
cmc
sub
ret
pushf
dec
sbb
xor
rep
push
push
pop
ret
push
pop
push
push
daa
lret
and
test
inc
sub
pop
and
aas
pop
xchg
pop
sbb
xchg
lock
mov
adc
popa
pushw
inc
cmp
adc
in
xchg
test
mov
jae
mov
fwait
pop
js
add
mov
fildl
repnz
outsl
into
sub
push
add
aas
test
sbbl
imull
nop
add
mov
mov
sbbb
mov
ljmp
movsl
or
cmp
pop
rcrb
inc
push
leave
pop
out
xchg
js
adc
sbb
xor
outsb
data16
mov
add
ljmp
jle
cmp
ss
jmp
add
inc
pop
sbb
test
call
sub
jns
add
mov
arpl
sub
movl
loopne
out
in
push
dec
aaa
rcrb
jmp
push
xchg
aam
daa
cmp
fsubrs
pop
add
mov
sahf
sbb
lret
movsb
xor
aaa
outsb
pop
sbb
mov
pop
lcall
add
cmpsl
xchg
add
outsb
add
or
shlb
cmpsb
jmp
cmpsl
lods
aam
xchg
roll
xchg
pop
arpl
mov
pop
fs
mov
stos
sub
cltd
pop
sbbb
or
aam
lret
xchg
nop
push
js
sbb
popf
imul
pop
icebp
push
dec
inc
stos
inc
mov
std
adc
aas
leave
addl
cmp
jle
pusha
inc
repnz
xor
divps
outsl
sahf
mov
sbb
xchg
cmp
sbb
ret
pop
inc
mov
xchg
orb
fcoms
and
pop
popa
sub
or
push
pop
mov
sbb
sub
lods
xchg
push
and
adc
mov
jmp
cmova
mov
mov
add
add
mov
inc
sbb
dec
or
push
mov
aad
fistps
adc
mov
add
outsl
fildll
adc
xchg
sub
adc
lret
outsl
mov
xchg
outsb
inc
add
pop
mov
or
inc
sahf
pop
ds
pop
cmp
hlt
mov
push
mov
push
cmp
xlat
mov
dec
sub
xchg
fdivrl
mulb
sbb
pop
and
xchg
xchg
shll
adc
push
xchg
mov
dec
lock
add
push
or
das
pop
fisttpl
and
sbb
mov
push
shr
cmpsl
adc
call
xchg
and
push
subl
adc
cmp
and
add
inc
sub
xchg
add
int3
sbb
mov
jg
push
cld
xchg
outsb
es
push
sbbl
pop
sub
ret
push
xchg
fmull
add
frstor
inc
push
sub
popa
push
test
xchg
inc
rol
or
std
and
xor
and
mov
orb
cwtl
test
popf
mov
mov
cmp
jge
sbb
or
mov
daa
inc
scas
add
pushf
push
call
call
add
cltd
or
int3
sar
jo
loope
push
insb
adc
loopne
pop
pushf
xchg
sub
subl
inc
pusha
lea
mov
jns
sub
push
jb
mov
xchg
mov
add
jg
and
add
mov
inc
push
sbb
sub
xchg
cmc
xor
push
shlb
pop
mov
and
add
leave
out
add
push
out
dec
loope
xor
js
cli
dec
push
lea
adc
adc
pop
leave
mov
test
push
mov
jg
push
outsl
add
jle
mov
add
cld
push
andb
pop
cwtl
loope
add
jmp
jp
add
cmp
push
loope
pop
test
cmc
fwait
sbb
mov
inc
mov
xor
mov
xchg
roll
jle
fcoml
adc
lea
add
adc
in
call
ds
nop
movsl
adc
arpl
pop
or
orl
out
sbb
add
sbb
or
xorl
inc
ficompl
sbb
push
in
into
cwtl
out
push
pop
nop
cltd
addb
xchg
fildl
xchg
in
shrb
mov
adc
scas
cmc
in
cmp
decl
ror
inc
pusha
xchg
sub
repz
pop
js
jns
mov
add
dec
mov
sub
ret
test
mov
sub
push
sub
xchg
inc
insl
dec
ficoml
aad
sub
cwtl
sub
push
push
and
shr
sbb
repz
mov
cld
loopne
push
xor
test
dec
or
testb
je
sbb
and
cmp
xchg
testl
cmc
mov
orb
shll
iret
add
adc
jo
test
push
sub
mov
pop
nop
call
hlt
iret
sbb
pop
inc
movsb
jno
stc
add
jb
mov
push
sbbb
jbe
adcl
pop
xchg
popf
setg
outsb
mov
popa
jo
mov
test
push
popa
mov
pop
dec
and
addb
adc
xor
adc
sub
adc
xchg
mov
das
mov
mull
cs
lret
xchg
sub
pop
xor
hlt
lahf
sbb
jmp
xchg
add
add
in
lock
es
and
sub
in
pop
popa
jmp
movl
pop
dec
xchg
movsb
movsb
ja
adc
cmpl
test
mov
inc
cmp
sub
and
pop
adc
out
loopne
lret
sldt
loope
and
mov
jge
jns,pt
std
cmp
xchg
mov
std
add
xchg
mov
inc
js
fnstcw
sbbl
add
rcrl
sahf
addr16
or
sub
jmp
sahf
push
sub
test
pop
sti
push
pusha
mov
jne
jmp
and
mov
and
mov
adc
mov
cmp
jo
stc
cli
lods
out
push
jnp
xor
pop
cwtl
pop
dec
sbb
push
stos
mov
testb
add
mov
mov
xor
scas
lods
pop
cld
rcrl
xchg
or
repnz
pop
push
outsb
cmpsb
add
add
cmc
ja
and
lock
pop
aaa
sahf
bound
lret
and
or
popa
lret
inc
adc
lods
jmp
pusha
adc
jne
xor
icebp
pusha
add
in
pop
and
imull
and
pop
push
pop
xabort
popa
pop
mov
jo
pop
xchg
pop
mov
jmp
cltd
pusha
xchg
cmpsl
movsb
rorb
jg
jge
les
or
imul
fadds
mov
cmp
out
and
jb
sub
roll
adc
adc
test
push
rcl
push
inc
enter
cmc
xor
pop
insl
dec
sbb
aaa
cmc
or
xchg
inc
or
sahf
cli
movsb
lahf
sub
stc
sub
adc
jge
dec
mov
cmpsb
outsb
push
arpl
mov
jg
or
neg
push
int
nop
add
lods
rcrb
add
lods
pop
loop
loopne
add
xchg
clc
mov
sub
jnp
jo
add
mov
outsl
mov
les
jae
xchg
clc
push
mov
push
cld
xchg
sbb
jmp
repz
pusha
into
pop
adc
je
add
movswl
jns
jge
add
cmp
addl
or
and
scas
pusha
and
dec
popa
out
dec
and
leave
in
mov
jmp
repz
xchg
push
pop
pop
out
loopne
sarl
rdmsr
xchg
sub
adc
mov
add
push
push
and
movsl
jmp
add
xchg
popf
cmpsl
cmp
rcrl
pop
mov
push
mov
add
sahf
lock
xor
add
imul
pop
adc
movl
add
sbb
cmp
test
push
insl
or
jns
xor
popf
sbb
inc
ss
or
mov
sub
xorb
fisubl
shrb
movsb
andl
add
mov
les
rcll
xor
push
loope
aaa
push
xchg
imull
outsb
push
add
ja
shl
divb
push
dec
add
and
or
sbb
fidivrs
nop
scas
outsl
push
pop
mov
fwait
add
popf
adc
mov
cltd
fcmovnu
sbbb
call
add
and
add
add
mov
rcrl
and
inc
and
fs
les
jo
dec
scas
nop
add
dec
lea
loope
in
push
mov
jno
adc
add
cmp
push
jg
mov
xor
xlat
fadds
mov
data16
fimuls
ret
mov
out
or
test
push
ret
xchg
push
nop
psubq
in
in
add
out
dec
sbb
pusha
insb
sbb
jmp
xor
add
xchg
insl
neg
mov
cwtl
push
and
inc
lds
data16
clc
fsubrl
add
sbb
push
push
jno
pop
pop
popa
nop
out
loop
sub
xor
jl
jl
sbb
mov
mov
sub
addb
cwtl
xchg
add
stc
mov
jnp
cmp
rol
push
cld
popa
aam
pop
ficompl
pop
outsl
xchg
add
cmpb
pop
lock
mov
nop
or
xchg
icebp
repz
mov
cmp
jae
adc
xorl
adc
mov
cmova
loopne
test
dec
pop
xchg
pop
test
adc
cwtl
test
dec
aas
add
mov
lods
in
mov
pop
scas
jp
add
jmp
popf
mov
add
out
ss
in
xor
or
push
addl
lods
pop
inc
sbb
into
aaa
jge
inc
shll
jno
shrl
rclb
icebp
mov
dec
or
or
adc
arpl
sub
ficoms
loopne
test
testb
scas
imul
repz
fdivrs
mov
js
mov
movb
lods
jnp
jne
mov
mov
rep
int3
pop
cmp
mov
pop
adc
int
push
pop
add
cmpb
insb
push
cmp
push
jno
add
inc
mov
jne
cmp
rclb
icebp
adcb
adc
insl
cli
mul
mov
clc
insb
cmc
mov
or
ss
add
orb
es
add
lods
jae
inc
dec
cmp
and
roll
xorb
shrl
lret
lods
sbb
jns
fmull
pop
out
pop
push
mov
mov
mov
aaa
dec
pusha
inc
add
sti
das
cmc
popa
adc
lods
cmp
ror
dec
lea
addr16
clc
lods
mov
sub
pop
loope
or
scas
sbb
test
lret
mov
dec
add
and
jmp
pusha
sbb
cld
test
fwait
popa
mov
mov
inc
cli
or
cmp
out
aaa
xchg
test
push
mov
xor
in
jno
fimull
outsl
cmp
pop
daa
add
imul
loopne
inc
daa
jno
shll
push
sbb
sub
out
leave
pop
sahf
stc
test
add
mov
loope
ret
cmp
add
add
dec
loope
addr16
mov
dec
adc
cld
sbb
push
and
adc
ret
push
push
nop
movzwl
es
movsb
fiadds
dec
in
cmp
push
pop
push
pop
pop
cmp
add
or
shlb
inc
es
mov
repnz
adc
pushf
mov
aad
cld
mov
fwait
jg
pop
inc
adc
pusha
cs
xor
inc
jg
pop
andb
mov
nop
xchg
shrb
add
aam
pop
int
rclb
sbb
scas
in
add
shll
int
fdivl
add
mul
fcoms
addl
lock
mov
stc
adc
add
inc
loopne
xchg
cltd
mov
pop
test
dec
push
mov
daa
mov
inc
push
pop
mov
dec
inc
cmpl
xchg
pop
jnp
add
fucompp
dec
mov
loop
fsub
xchg
iret
rolb
ds
push
dec
rcr
mov
push
test
das
mov
sbb
cmpsb
lcall
push
rclw
pusha
mov
imul
repnz
mul
mov
jae
inc
xor
pop
test
sbb
push
dec
addr16
add
mov
loopne
sbb
pop
jbe
add
test
mov
or
pop
fisttpll
mov
xchg
fstpt
mov
jmp
mov
repz
adc
sbb
in
add
out
fs
jp
xchg
or
add
add
or
test
inc
out
mov
xor
push
icebp
idivl
xor
adc
mov
xor
sub
fucom
outsl
push
or
dec
xchg
fbstp
sub
mov
jns
lds
mov
jecxz
mov
add
or
sbb
insl
in
subl
scas
sbb
outsb
or
push
jl
jae
sub
jno
jg
out
inc
ja
mov
pop
lea
mov
push
or
adc
inc
data16
add
mov
jecxz
push
mov
push
repz
pop
cltd
push
and
mov
push
push
in
cmc
das
and
add
mov
jecxz
ret
pop
jle
shrb
lods
sub
pop
popf
stc
jmp
iret
fwait
outsl
test
sub
les
dec
cmp
sub
dec
sub
fisttpl
leave
jle
jg
dec
xor
add
repnz
cli
mov
subb
shll
adc
adc
push
jb
aam
imul
or
out
cmp
aaa
add
mov
and
lret
ljmp
push
and
xchg
in
add
std
orb
jge
pop
aam
sbb
jbe
fdiv
popl
clc
lods
fldenv
std
daa
adc
mov
lds
aaa
in
jp
movsb
push
pushf
add
mov
es
mov
adc
sub
pop
pop
xchg
and
and
repz
inc
lds
mov
enter
repz
or
cmp
mov
test
stos
incb
add
mov
mov
pop
mov
or
lcall
pop
add
lods
je
and
add
daa
fstpt
cmpsb
dec
seto
inc
stc
subb
mov
test
daa
je
cmp
pushf
loop
add
mov
aas
mov
add
mov
popf
cmp
leave
xlat
adc
add
fwait
cmp
nop
dec
pop
lret
sbb
sub
mov
xchg
lods
mov
jae
add
test
outsl
mov
int
push
sub
mov
sub
add
cs
inc
cltd
ds
push
popf
sub
jbe
cmp
test
add
ja
bound
lcall
addb
lods
inc
adc
jbe
add
sbb
pop
bound
stos
xor
hlt
xchg
std
xchg
repnz
cmc
or
mov
mov
adc
aam
pusha
mov
insl
add
dec
cmc
mov
add
ljmp
mov
pop
push
inc
add
mov
icebp
rclb
sub
rcrb
xlat
push
add
lea
and
push
pop
dec
inc
lcall
je
mov
sbb
and
dec
int
sub
test
rorl
out
or
mov
in
pusha
adc
pusha
xchg
adc
mov
in
dec
leave
mov
xchg
add
pop
add
sub
popa
shr
lahf
dec
ja
fisubs
mov
jae
sub
jno
sbb
and
cmpsb
and
cltd
adc
mov
mul
scas
push
mov
xchg
adc
mov
test
outsl
mov
add
and
jne
push
adc
pop
lock
add
adc
test
sub
rcrl
pusha
les
dec
fdivrl
or
jb
ss
dec
add
clc
subb
das
adc
icebp
dec
pop
and
jp
popf
dec
lods
inc
jmp
dec
roll
test
push
pusha
mov
and
inc
adc
fadds
fldl
and
rclb
jle
mov
add
gs
pop
out
lahf
test
icebp
xor
ds
mov
into
out
imul
mov
inc
testl
mov
cmp
das
je
das
aad
and
xchg
push
clc
pop
daa
inc
bound
push
adc
add
pusha
test
in
jecxz
pop
roll
daa
sub
fstpt
imul
daa
stc
mov
shr
arpl
mov
movsl
lods
inc
xchg
mov
int
jp
jne
outsb
mov
clc
fistps
les
mov
pop
fdiv
pop
popf
aaa
mov
dec
cmp
dec
lea
outsb
outsl
add
in
cltd
mov
push
push
push
mov
pop
inc
loope
test
xlat
hlt
xor
cli
push
popf
outsl
jns
scas
mov
out
fstpt
and
pop
push
jnp
sub
cld
mov
lahf
aaa
jg
mov
xchg
jl
ret
repnz
int
jo
sub
dec
test
dec
cmp
or
outsl
pop
or
fimuls
sar
add
lea
mov
pop
and
xor
mov
cmpsl
fimull
std
mov
dec
xor
scas
add
shlb
lret
pop
nop
sti
push
mov
std
je
pusha
xchg
sub
mov
pop
push
mov
dec
jmp
mov
pop
inc
sbb
roll
add
gs
loope
scas
call
sub
cmp
mov
xchg
addr16
stos
fwait
add
mov
shll
pop
nop
and
mov
sbb
mov
std
rorb
shll
in
fbld
idivl
sbb
dec
out
push
mov
mov
imul
sahf
adcb
pop
roll
in
mov
mov
xchg
push
adc
mov
lea
in
neg
add
xor
andl
pop
mov
adc
rep
dec
cmp
arpl
sbbb
add
scas
cmc
pop
sbb
sbb
inc
add
pusha
in
lret
push
xor
mov
inc
mov
xchg
cmp
push
sub
out
dec
ss
mov
in
sbb
ljmp
dec
push
cmp
adc
fsub
sub
mov
hlt
push
lret
sbb
mov
and
gs
mov
pop
lock
testl
mov
xor
subl
add
lea
sahf
add
mov
mov
call
xchg
add
xrelease
xchg
mov
xchg
xor
fisubs
fstps
xchg
add
push
lds
cmpsb
loope
into
loopne
stc
dec
push
dec
js
mov
mov
aam
into
scas
adc
add
gs
sbb
push
push
cmp
xchg
fimuls
test
xor
dec
les
sbb
popf
lea
ja
insl
rolb
jg
pop
or
xchg
mov
or
in
add
insl
ret
mov
sbb
and
and
xchg
pusha
push
int3
add
mov
xchg
sarb
movl
pop
dec
popa
outsb
insl
dec
test
cmp
popa
popf
jmp
rcr
iret
cmpsl
fwait
cs
mov
add
xlat
aad
mov
popa
idivb
push
mov
lret
add
mov
jle
in
mov
clc
in
roll
push
jp
mov
inc
pop
add
aam
jno
jo
jge
sbb
daa
mov
ror
pop
ffree
pop
sub
pop
aas
cmp
cmpsb
adc
clc
rolb
mov
int3
adc
pop
push
fisubs
lret
je
mov
pushf
aas
adc
xor
add
cmpl
aaa
stc
add
in
and
insl
or
icebp
add
xchg
movsb
sub
adc
dec
cli
subb
jmp
lods
sbb
mov
push
mov
push
add
cmpsl
repz
pop
jl
add
mov
cs
fsubrp
pop
push
add
in
rorb
popf
sub
or
dec
xchg
jae
add
pop
mov
data16
mov
and
mov
or
pop
and
inc
sbb
icebp
cmp
mov
cld
ljmp
add
out
dec
mov
stos
mov
movsl
mov
or
inc
test
add
mov
repz
dec
stc
inc
andb
movsl
mov
addps
shrl
jp
sti
std
jo
xlat
sbb
adc
and
nop
mov
push
repnz
dec
or
xchg
pop
stc
add
cs
loope
nop
cmp
push
or
icebp
push
in
mov
mov
faddl
cld
jmp
pop
and
mov
pop
adc
cli
pop
outsl
and
fldl
test
mov
or
xchg
push
cmc
add
xchg
fdivs
int
xchg
divl
ja
mov
and
push
cmovle
mov
xor
rcr
mov
pop
xorb
cmp
and
mov
inc
xor
out
outsb
adc
imul
and
dec
enter
out
pop
rcr
lods
addb
or
add
rcrl
into
test
lahf
dec
mov
add
ret
rorl
xor
and
icebp
sub
xlat
mov
dec
clc
xor
es
cmp
xor
xorl
popa
sbb
xor
in
fiaddl
pop
pusha
shl
and
mov
cmp
xchg
into
adc
les
sub
imul
or
popf
insl
pop
jne
fwait
jl
inc
rolb
fmuls
mov
xor
or
sub
decb
sbb
fs
pop
xor
push
movsl
fidivrl
out
loopne
lds
inc
repz
push
cltd
loopne
or
ret
sub
mov
cld
sub
mov
movswl
shrb
test
inc
adc
sub
test
dec
ret
inc
mov
pop
ret
xchg
jae
lds
or
inc
ret
or
insb
icebp
mov
sub
les
dec
leave
sbb
lods
dec
inc
jg
call
jo
fistl
mov
shl
jmp
std
aas
cwtl
pusha
mov
pop
mov
push
jbe
fcomp
pop
add
pop
enter
mov
add
insl
jae
dec
inc
and
enter
in
add
addb
ffree
pop
pop
mov
pop
push
jae
jb
mov
xor
popa
xchg
sbb
cs
add
xorb
gs
push
rcll
pop
adc
add
rclb
insb
gs
rorb
or
mov
pop
cld
adc
push
fisubs
mov
pop
fisubrs
out
mov
icebp
rol
and
outsb
movsl
add
inc
lret
mov
xor
jne
pusha
hlt
iret
cwtl
pop
jns
repz
fidivrs
add
cmp
dec
mov
mov
mov
add
test
imul
and
subb
push
in
aas
lret
orl
mov
push
enter
adc
add
pop
sub
cwtl
or
movb
fs
aad
mov
and
stos
repz
arpl
push
les
in
es
jnp
mov
jno
xchg
sub
pop
mov
jl
sbb
mov
test
out
orl
push
int3
add
in
cltd
push
es
lock
push
add
clc
push
ja
push
es
add
out
sub
insl
and
das
add
jle
orb
jmp
xchg
lahf
sar
mov
cwtl
mov
dec
add
dec
mov
jg
push
or
imul
leave
or
test
inc
test
jecxz
add
out
push
jnp
popl
dec
gs
and
mov
inc
std
pop
call
pop
and
cli
or
mov
jle
clc
stos
dec
xchg
push
lods
mov
jmp
add
shll
push
lea
cs
lret
xor
adc
xchg
adc
mov
je
rclb
jns
xor
pushf
add
mov
jbe
push
cmp
add
cmpl
mov
or
stos
adc
adc
xor
dec
or
pop
test
inc
add
mov
push
movsl
and
in
pusha
ds
sub
xchg
pop
dec
mov
add
lahf
out
or
xchg
je
xor
stos
mov
popf
add
adc
sub
add
pop
mov
xlat
jle
faddl
loop
push
adc
jno
xchg
add
mov
xor
pop
push
xor
xchg
pushl
pop
daa
dec
mov
xchg
mov
cmp
pop
addb
sahf
xor
cmc
cmpsb
lret
loop
loopne
int3
fs
add
js
inc
push
lea
outsl
xchg
add
in
mov
inc
pop
gs
rclb
imul
mov
cwtl
push
popa
ss
sbb
ljmp
jo
cmp
xchg
lret
aaa
lock
movsl
rol
add
mov
pop
cmp
or
push
jle
jno
cmpsb
frstor
test
sub
pop
arpl
mov
or
mov
test
lock
xchg
mov
pop
add
jmp
mov
stos
jns
or
ljmp
add
xor
out
mov
es
inc
push
leave
or
pop
nop
jmp
dec
mov
and
adc
jno,pn
add
mov
xchg
int3
in
jno
add
or
or
adc
fwait
adc
lds
mov
cs
nop
movups
jbe
mov
push
dec
jg
dec
jmp
dec
stc
add
push
jl
lcall
cmp
dec
dec
or
stc
or
fiadds
and
inc
into
push
pop
pop
mov
cmp
sbb
jge
and
mov
inc
inc
pusha
and
jl
sub
icebp
mov
mov
fiadds
imulb
cmp
add
sbb
inc
add
aam
nop
mov
dec
add
xchg
insb
pop
push
out
fisubrl
xor
adc
push
das
ret
mov
test
add
sbb
adc
add
inc
leave
pop
sbb
out
xchg
or
mov
mov
leave
push
mov
adc
sub
mov
xchg
dec
xor
inc
adc
addb
rolb
mov
pop
dec
test
jbe
das
and
mov
pop
mov
add
lahf
das
fstps
jb
dec
xor
imul
mov
dec
mov
aam
push
addb
jo
int3
add
push
sub
inc
loopne
or
inc
adc
add
lret
jne
orb
and
dec
insb
pop
or
cmc
cmpb
test
test
mov
inc
xchg
add
cwtl
repnz
dec
dec
movsb
ret
dec
addb
xlat
aas
cvtpi2ps
arpl
dec
fldcw
cmp
sbb
les
int
adc
popf
and
mov
mov
mov
or
add
mov
repnz
cmp
sub
pusha
xchg
sti
call
nop
and
ss
add
fidivrl
xor
dec
dec
andb
add
jl
mov
popa
mov
sub
aam
inc
inc
adc
repnz
push
xor
test
iret
shlb
lret
roll
sbbb
add
test
andb
out
mov
sbb
or
pop
das
and
push
push
mov
mov
cmc
sub
imul
cmp
inc
loopne
dec
out
xchg
mov
mov
in
push
push
mov
push
adc
fisubs
cmp
xor
dec
push
roll
mov
xchg
aad
add
les
inc
fisttpl
and
jmp
or
lret
jbe
loopne
fsubs
cs
sub
ret
lock
pop
and
daa
rorb
inc
sub
cltd
cli
adc
lcall
popf
pop
sbb
mov
rcrb
inc
rcll
aas
add
mov
pusha
jo
push
repz
cmp
leave
adc
lea
adc
js
push
push
and
inc
mov
mov
cld
icebp
rcrb
mov
and
dec
dec
pop
or
stos
das
lret
lock
adc
push
add
mov
push
in
popf
cmc
push
cmp
and
mov
insb
add
inc
mov
jae
or
mov
xchg
pop
jg
pop
movsb
pop
dec
in
dec
push
inc
loope
fiadds
cmp
mov
aad
and
xor
fidivl
ss
in
incl
xor
push
mov
push
push
imul
jae
sub
adc
mov
adc
cmp
add
mov
mov
adc
mov
fists
lret
dec
push
or
mov
icebp
test
mov
add
fsubs
mov
test
mov
jg
stos
inc
pop
ret
cmp
imul
shll
push
jmp
in
outsb
sub
pop
cli
inc
add
sbb
add
jmp
loopne
push
adc
xchg
jno
imul
scas
outsb
je
sub
sahf
sub
cwtl
out
cmp
mov
push
es
sub
test
mov
and
loop
jne
shl
lods
jnp
divl
jl
dec
xor
dec
xlat
or
cwtl
cmp
movsl
imul
cwtl
mov
cwtl
jg
or
call
pop
lods
mov
clc
add
mov
ljmp
out
or
xchg
loopne
jb
pop
shlb
add
dec
jae
xor
mov
add
in
stos
cmp
pop
pop
arpl
push
add
subb
dec
iret
adc
cs
jae
ljmp
mov
mov
icebp
add
adcb
ret
sti
dec
nop
xchg
sbb
sbb
inc
roll
cmp
dec
xlat
mov
jmp
jbe
movsb
inc
and
push
mov
xchg
push
ljmp
pop
int
adc
xlat
add
xor
sub
jle
hlt
and
cmp
add
enter
add
push
es
adc
add
xor
sbb
cld
xchg
inc
adc
into
jecxz
pop
xor
mov
push
adc
aad
lcall
inc
jns
mov
sub
mov
jmp
jle
xor
push
pop
int3
aaa
xchg
scas
jp
rorb
sahf
jae
inc
out
or
xchg
cmp
xchg
les
cld
adc
push
pop
shl
fbstp
lds
aas
sub
adc
dec
rol
adc
lahf
jl
je
or
popa
add
push
cmp
mov
inc
add
mov
dec
out
pop
rcr
pop
mov
cmp
push
mov
pop
adcb
pusha
mov
dec
mov
xor
cmp
sub
xorb
cmp
repz
lret
popf
sbb
mov
popa
jns
call
cwtl
sahf
sbb
rcrl
aad
jnp
push
lods
lret
inc
sbb
push
popa
pop
dec
pop
or
shlb
femms
dec
inc
ljmp
add
mov
stos
test
cs
xchg
or
test
lahf
sbb
movsl
hlt
xchg
stos
std
adc
adc
dec
jb
or
adc
loope
push
ret
sub
or
arpl
jno
cmp
or
lods
dec
pop
mov
dec
pop
xchg
mov
shlb
jecxz
dec
mov
xor
and
fstpl
loope
and
mov
push
test
movsl
outsb
cmp
scas
test
and
fldenv
push
push
add
test
sbb
xor
adc
pop
xor
push
ret
cld
ss
push
push
sbb
cld
and
add
insl
jne
fadds
jb
push
subl
sbbl
mov
jmp
adc
xor
ss
ret
les
dec
mov
dec
mov
sbbl
fsubrl
add
or
and
sahf
or
pop
adc
iret
xorb
sbb
daa
cmp
cltd
sub
sbb
mov
mov
pop
dec
jg
adc
aad
sub
ds
call
xor
ss
mov
pushf
adc
call
outsl
clc
fld
jle
filds
jmp
jno
add
imul
push
adc
cmp
and
pusha
sti
ret
or
dec
andb
xchg
loope
inc
dec
add
xchg
cmp
and
pusha
push
add
push
dec
mov
adc
xor
jo
sbb
push
test
ret
fwait
sbb
roll
movsb
test
daa
sti
mov
jmp
das
cltd
lcall
shl
test
inc
and
add
fldt
xchg
lcall
aad
and
and
lock
sbb
aam
jmp
lahf
mov
push
adc
ret
unpcklps
in
mov
test
es
ret
lods
inc
xchg
cltd
daa
dec
aam
adc
scas
sarb
call
call
dec
icebp
add
loopne
and
jns
mov
inc
and
lds
movb
adc
and
and
cld
adc
or
es
push
mov
dec
cmp
sbb
mov
push
xchg
mov
mov
xor
loop
xchg
bound
into
adc
adc
inc
mov
or
add
inc
adc
sbb
das
add
lea
inc
lods
inc
into
and
stos
enter
add
inc
adc
push
add
clc
adc
in
mov
push
je
cmpsb
add
aas
mov
in
sbb
ljmp
imul
cmp
mov
xchg
leave
test
cmp
sub
jmp
mov
dec
inc
adc
inc
sbbb
inc
adc
dec
test
rol
inc
xchg
cmp
mov
jge
ljmp
mov
dec
add
push
bound
xchg
cmp
add
xor
cmp
mov
flds
add
cli
mov
push
stc
and
fildll
or
jnp
and
xor
int
stos
and
ss
push
mov
push
enter
adc
sbb
pop
or
outsb
add
addl
mov
add
shrb
and
test
cmpsl
sarb
addr16
inc
sbb
mov
decl
and
shll
clc
adc
sub
mov
pop
or
sti
jns
mov
andb
xchg
shlb
aad
and
push
insl
lret
inc
add
jecxz
test
adc
test
sbb
test
and
sbb
sahf
mov
sti
add
xlat
lock
lods
cltd
pop
or
cmpsl
jb
popf
push
adc
std
push
mov
loop
mov
insb
adc
dec
add
adc
mov
mov
add
add
sbb
add
push
mov
and
xchg
mov
mov
pop
cli
das
dec
dec
add
jno
out
inc
push
jns
fbld
das
imul
cmp
call
fimull
in
pop
in
pusha
sahf
pop
sbb
cld
hlt
inc
xor
mov
lods
int
test
mov
pop
ljmp
pop
ljmp
jl
mov
hlt
pop
lods
shll
adc
enter
lods
test
cs
lret
test
movsl
jo
mov
imul
mov
lcall
xor
xor
sbb
sbb
add
addl
mov
imul
add
mov
in
add
jne
dec
int
cmp
imul
pop
insb
jnp
xchg
mov
mov
shlb
out
aam
pop
cld
jne
or
or
dec
lods
jae
cwtl
cwtl
jmp
jmp
popa
and
out
cmp
sbb
adc
loopne
sbb
dec
add
inc
sbb
sub
mov
xor
mov
xchg
cwtl
jle
nop
and
add
xor
adc
lahf
test
inc
mov
shll
loope
xchg
pop
je
pop
mov
adc
lahf
add
mov
into
pop
mov
xor
sbb
bound
cli
mov
fadds
jo
adc
fwait
popf
dec
xchg
add
pop
inc
popa
xor
imul
add
popa
rcrb
jno
test
mov
adc
push
push
add
adc
roll
sbb
cs
add
repz
fisttps
outsb
daa
fadd
add
pusha
sub
jmp
adc
adc
sub
lret
add
adc
nop
std
dec
shl
in
add
cmpsb
mov
jne
shlb
adc
jge
jno
push
lods
mov
loope
call
test
call
pop
xchg
into
jae
cltd
fcom
sbb
dec
stos
mov
es
arpl
adc
outsl
add
movsl
ss
mov
xor
cmpsb
lock
repnz
cmpsb
xchg
xchg
inc
aaa
jmp
jmp
arpl
sbb
aas
xor
popa
mov
dec
inc
mov
inc
sbb
xor
in
jae
sub
add
stc
jo
repz
leave
adc
and
ret
inc
fs
and
adc
icebp
add
in
std
mov
jp
lds
hlt
sbb
fstpt
enter
push
or
mov
and
or
xchg
and
iret
sub
jnp
and
add
adc
clc
xchg
data16
push
mov
lock
sub
cwtl
aas
inc
insb
add
movsl
cli
shr
sahf
xor
out
mov
sbb
add
push
icebp
xor
jmp
mov
add
xor
movsb
loop
push
or
adcb
add
inc
mov
xor
or
pushf
loop
xor
ds
dec
cmp
out
push
xchg
aam
push
dec
adc
push
add
pusha
add
je
std
or
ja
xchg
pop
dec
stos
outsl
mov
push
ret
or
push
insb
mov
scas
ss
int3
inc
add
mov
mov
xor
jnp
push
arpl
inc
push
addl
and
in
test
push
inc
arpl
cmp
les
cmp
dec
fistpl
or
sbb
push
add
mov
in
out
mov
in
stos
and
adc
add
mov
xchg
mov
xor
sbb
push
aaa
xchg
inc
sbb
add
lock
in
adc
push
lods
in
adc
sub
or
lahf
push
out
xor
lret
dec
dec
in
add
or
jmp
push
mov
js
roll
add
and
fcmovb
in
popa
pop
jno
dec
fsubs
pop
pusha
aaa
daa
xor
adc
jmp
and
mov
push
adc
jb
cwtl
add
notl
mov
arpl
inc
fsts
or
fcomps
xor
cmp
loopne
andb
sahf
sbbb
sub
repz
lock
xchg
adc
mov
loop
xor
pop
adc
orl
pop
ja
sub
jle
mov
add
mov
subl
aaa
push
sbb
in
xor
rcrb
mov
jmp
cltd
sub
ss
movsb
aam
xchg
or
in
in
popa
dec
jno
lods
dec
xorb
ret
imul
cmp
sbb
dec
pop
test
xor
out
aad
mov
cwtl
add
nop
inc
pushf
cltd
xor
xlat
mov
push
sbb
mov
or
mov
pusha
xor
fisubl
xor
jg
add
mov
add
rol
enter
xchg
mov
xor
and
push
rorb
cmpsl
jmp
nop
add
xchg
movb
pop
push
rolb
push
lahf
dec
hlt
iret
add
test
dec
mov
cltd
pop
pop
movsl
sub
push
pop
inc
fadds
adc
dec
addl
cs
fdivr
scas
addb
adc
loop
js
nop
nop
and
adc
add
push
subb
mov
mov
jo
or
add
lods
mov
movsl
sub
add
mov
xor
mov
andb
or
or
sub
push
in
pop
movsb
inc
and
mov
cwtl
mov
int3
mov
je
and
mov
clc
or
jne
pushf
push
shrl
aam
or
mov
lret
add
adc
mov
sub
pop
popa
mov
or
or
iret
xchg
sbb
jg
add
sbb
lcall
sbb
ret
addb
or
cmpsb
fnstenv
adc
rolb
pop
mov
dec
hlt
into
inc
mov
negb
lock
pop
lret
js
jo
cltd
out
mov
int3
sbb
mov
mov
sub
add
mov
add
ljmp
pop
jp
imul
or
popf
add
jle
pop
add
incb
inc
cmp
mov
out
mov
push
cmp
outsb
das
inc
fildl
or
inc
cmc
add
jge
notb
gs
test
jnp
xchg
mov
lea
add
enter
cmc
aas
lock
call
add
push
pop
lock
scas
repnz
lahf
pusha
inc
mov
cmp
dec
inc
xorb
subb
addr16
mov
sbb
adc
pop
push
or
fidivl
xchg
test
or
adc
loopne
or
std
aaa
hlt
stc
mov
jge
popa
jg
add
lahf
nop
xor
inc
aas
fs
mov
lds
pusha
fistpl
adc
push
enter
xchg
sub
or
xorl
mov
xor
cs
pop
push
out
scas
inc
shlb
mov
mov
add
jno
and
adc
mov
cmpsb
rorb
rcl
add
cmp
call
xchg
aam
dec
cmp
add
mov
aam
adc
andb
imul
or
mov
mov
adc
pop
xchg
sbb
mov
pop
imul
push
push
jle
pop
aam
cmpsl
push
mov
sbb
sbb
test
clc
out
mov
rcll
xor
pop
leave
stc
loopne
aaa
dec
sahf
sbb
ljmp
leave
inc
ret
sbb
aas
call
jp
xor
pop
js
mov
add
mov
inc
imul
sub
rolb
xchg
xlat
idivb
add
outsb
sub
sbb
push
cmp
testl
mov
test
pop
and
mov
sarb
in
add
dec
dec
push
jb
adcb
fstpt
cmp
sbb
fdivl
das
sbb
pushl
decl
shlb
dec
stos
push
xchg
scas
push
clc
fwait
add
cwtl
adc
add
cwtl
jo
mov
mov
enter
fadds
imul
stc
inc
jecxz
mov
sub
adc
mov
arpl
add
xchg
in
cmp
mov
add
jb
testl
adc
cltd
mov
jno
es
lock
xorb
es
dec
aam
add
in
test
push
js
dec
cmp
mov
aad
inc
icebp
mov
lods
xor
add
shrb
int3
inc
ss
jmp
fadd
mov
incb
sar
test
mov
pop
outsl
or
orb
test
scas
inc
cltd
xor
in
inc
or
fidivl
adc
jg
cwtl
adc
xchg
jbe
lahf
adc
adc
or
popf
push
dec
xor
pop
add
dec
sbb
pop
es
add
xchg
bound
push
fiadds
inc
push
sahf
js
pop
test
adc
hlt
mov
pop
ds
out
test
lret
add
imul
rcll
or
mov
aaa
adc
mov
insl
fiadds
in
xchg
mov
ror
add
add
xchg
sbb
mov
pushf
cli
sub
daa
mov
push
sub
adc
jge
into
rcl
aam
pushf
xor
call
pop
pop
cmc
push
in
daa
or
add
inc
or
push
lods
dec
hlt
push
mov
sbb
push
jmp
xor
mov
xor
hlt
in
pusha
lret
and
aad
testb
add
mov
cwtl
call
push
pop
jno
test
xor
out
mov
cmpsb
jb
jle
sub
test
push
int3
jne
sahf
sub
and
jnp
or
rcll
jne
or
in
mov
cmp
stos
and
dec
fiaddl
lea
hlt
clc
clc
jne
sub
shll
inc
jnp
sbb
sub
lods
xchg
in
mov
and
fcomps
sub
nop
add
dec
jne
xchg
das
or
pop
popf
sub
shlb
aam
inc
mov
dec
lds
push
movsb
test
mov
push
and
hlt
jmp
ss
pusha
mov
repnz
cli
jle
loope
add
into
inc
jo
or
add
mov
stos
xchg
or
out
insl
cmp
out
cmpsb
sbb
pop
cltd
shll
mov
fwait
or
fsts
mov
sti
and
jecxz
push
add
test
aas
loop
jmp
jb
pop
lods
inc
and
int3
inc
dec
jnp
sub
add
add
rolb
out
xor
jbe
das
mov
hlt
xlat
imul
add
jnp
cmpsl
nop
insl
xor
adc
mov
lods
iret
sar
ret
dec
rolb
cld
mov
mov
arpl
adc
and
les
pusha
cmp
dec
pop
popa
loop
jle
push
push
ljmp
hlt
pusha
adc
xor
push
les
xor
jecxz
push
mov
adc
hlt
adc
fistps
and
rolb
xlat
jecxz
cld
adc
dec
inc
movsb
mov
andb
out
adc
inc
cmc
jno
add
inc
jno
sti
subb
inc
arpl
push
movsb
push
dec
shrl
clc
daa
pop
sarl
jbe
call
add
daa
int
mov
sar
in
mov
mov
mov
jmp
xor
nop
rorl
test
lret
adc
cld
scas
jo
dec
jg
jl
lods
mov
lahf
hlt
push
movsb
fs
mov
mov
or
mov
pop
inc
stc
push
jne
jmp
bound
imul
pop
jno
js
in
push
repnz
mov
aaa
mov
and
xchg
loopne
mov
mov
lods
shl
or
leave
ror
pop
clc
lret
mov
or
xchg
mov
cs
or
sub
and
and
push
add
pusha
pop
out
pop
jl
or
pop
jo
imul
andb
xor
into
in
jecxz
test
bound
pushf
loop
btc
sub
add
call
cltd
es
negl
push
sub
xor
mov
jl
out
aad
and
add
jnp
add
adc
push
add
and
icebp
push
xor
iret
jns
in
cli
aam
add
sbb
loop
aam
sbb
pop
xor
and
add
jo
ret
fsubl
jne
xor
int
pop
push
lock
inc
adc
fbld
dec
nop
aam
dec
sar
sbb
xchg
adc
lods
cmp
mov
test
stos
test
jbe
inc
and
and
sub
mov
adc
loop
and
lods
mov
push
outsb
nop
jne
adc
lods
mov
dec
hlt
or
addl
into
fistpl
popa
mov
mov
rorb
scas
cs
or
fsubs
xchg
pop
cmp
pop
mov
fnstenv
xchg
js
pop
mov
iret
pop
ss
and
cmp
decl
ret
jmp
pop
push
mov
push
test
cmp
cwtl
rcrb
mov
mov
shll
add
nop
add
cwtl
dec
fmuls
dec
cltd
pop
je
shlb
push
push
add
mov
nop
jnp
mov
add
shrl
jb
xor
sahf
pop
fs
mov
or
sbb
je
fidivrl
loope
sbb
pop
insl
mov
jle
stc
subl
add
dec
into
lahf
mov
inc
add
shlb
stos
push
adc
cmp
push
add
jmp
scas
outsl
add
cltd
sub
mov
mov
pop
gs
hlt
jae
inc
dec
addl
hlt
cmp
inc
dec
ds
aam
mov
xor
addb
mov
jno
add
popf
push
bnd
mov
jg
add
or
cltd
cmp
xchg
mov
add
cmp
ret
cmpb
nop
xor
sbb
add
mov
nop
push
mov
lea
and
mov
mov
add
xchg
sbbl
rclb
inc
mov
into
cmp
cmp
add
subl
clc
inc
pop
dec
xchg
add
aad
pop
inc
push
ret
adc
fwait
arpl
jns
add
mov
pushf
loope
hlt
or
or
mov
pop
das
movsb
mov
or
dec
or
rcl
sti
adcl
mov
rorb
and
add
mov
into
es
cld
daa
mov
inc
pushf
and
jo
and
nop
fcomi
pop
sbbb
cmp
jb
jbe
jp
dec
cmpsb
addl
xor
dec
cwtl
fs
add
enter
dec
mov
clc
ficomps
push
pop
outsb
scas
add
push
ret
adc
mov
call
mov
xor
pushf
xor
into
mov
sub
sub
mov
and
adc
lds
or
cmp
adc
rorl
mov
mov
add
xor
test
push
scas
sbb
out
xor
mov
cmp
push
pop
pop
mov
add
push
mov
mov
mov
cmpsb
rcll
dec
mov
lfs
jnp
iret
mov
iret
rcl
fldcw
popf
add
pusha
and
sbb
pop
clc
fwait
jo
loop
or
movb
lock
popf
int3
inc
js
loop
xchg
add
rclb
mov
pop
lds
pusha
sub
mov
jge
inc
pop
pop
lock
sbb
jmp
ljmp
pop
popf
mov
inc
add
mov
xchg
aas
push
insb
fcmovnbe
sbbb
mov
lods
test
pop
pop
or
ja
or
mov
adc
inc
pop
lret
fmull
mov
fldenv
js
call
sbb
mov
in
mov
or
push
repnz
push
popa
xor
cld
adcb
scas
push
pusha
pusha
push
mov
push
mov
fdivrs
add
or
mov
mov
aas
mov
fs
mov
and
call
les
mov
loop
xor
add
negl
das
xor
push
dec
dec
stos
mov
sarl
clc
jo
sbb
cmp
test
imul
stos
loop
xor
int
sbb
add
mov
dec
pop
inc
dec
pop
sbb
push
scas
mov
loope
iret
mov
add
xor
imul
jl
pop
enter
lahf
cwtl
hlt
push
push
add
ret
or
imul
fs
out
mov
cld
stc
shll
aam
or
repnz
rcrl
sarl
scas
xchg
add
jne
negl
or
sub
aaa
jae
stc
shll
mov
or
into
mov
adc
and
inc
add
adc
mov
jne
imul
rorb
jb
mov
scas
cwtl
mov
loope
nop
inc
jmp
cmp
xor
popf
test
pop
outsb
sub
jno
xchg
adc
and
stc
push
push
xchg
push
pop
add
je
xor
jno
mov
jae
mov
xchg
scas
arpl
gs
in
mov
dec
cmp
cmp
sbb
adc
loope
mov
rclb
shlb
pop
or
scas
call
imul
jmp
push
lahf
aaa
mov
add
fists
faddl
push
jp
jmp
mov
add
cmp
js
rcll
divb
fiaddl
lods
rolb
xlat
mov
xchg
cmpsb
addb
mov
scas
leave
cltd
sub
int
sarb
add
mov
shlb
cmpsl
add
iret
xor
int3
subb
cmp
sub
fs
pop
mull
ss
add
add
fisttps
or
mov
mov
test
sub
jl
mov
gs
adc
orl
lock
jmp
pop
cmpsb
dec
xchg
ret
into
xchg
mov
sub
data16
ret
inc
aam
hlt
int3
add
inc
sbb
andb
divb
sysret
insb
push
mov
nop
pop
gs
adc
sub
xor
mov
lock
jae
aaa
testl
arpl
aam
jl
add
movq
or
test
sbb
rolb
pop
popa
out
les
nop
fadds
or
push
movsb
inc
popf
pusha
in
jnp
hlt
lahf
add
popa
into
out
mov
xor
stc
sti
inc
in
push
ret
inc
dec
jmp
push
add
bound
mov
test
cld
cmp
adc
ret
pop
sbb
pop
mov
xor
fs
rolb
add
pop
aaa
in
fmuls
and
adc
push
push
sub
pop
addr16
push
and
repnz
pop
dec
pop
leave
test
or
add
mov
dec
push
mov
fnsave
sub
jp
test
test
mov
sahf
and
lcall
cmpsl
faddp
add
cmpl
enter
push
dec
rcrb
push
mov
fmul
loopne
fwait
mov
shlb
sbb
dec
repnz
ljmp
inc
sbb
in
mov
shrl
popa
cmp
and
rorb
mov
loop
test
adc
add
jmp
xor
adc
shl
mov
xchg
pop
cwtl
call
add
fists
add
xchg
loop
repnz
xor
icebp
daa
lahf
dec
gs
in
out
mov
roll
jns
iret
jmp
inc
hlt
or
fstpt
dec
inc
jae
xor
adc
int3
jp
mov
dec
inc
insb
ja
xchg
dec
sub
bnd
push
inc
push
add
lcall
dec
mov
in
pop
xchg
or
adc
inc
xor
lock
xchg
int
shrb
sbbl
fwait
jmp
mov
sahf
hlt
pmaddwd
sub
test
ja
notb
loopne
pop
jnp
dec
pop
add
hlt
add
je
movsl
aad
je,pn
in
movsb
lods
mov
nop
or
sub
mov
or
mov
leave
xor
daa
jno
mov
adc
adc
andl
jmp
push
ljmp
nop
add
cmp
lret
push
mov
add
xlat
mov
mov
in
sarb
aaa
lock
lea
pop
dec
fmuls
aaa
out
add
pop
mov
sbb
add
sbb
clc
jmp
movsb
or
popa
sub
sbb
push
daa
cld
dec
popf
ljmp
faddl
dec
pop
popl
sub
mov
adc
outsl
and
jne
jl
data16
sahf
insl
pop
jp
dec
leave
jns
add
rcr
test
sub
mov
aam
add
les
push
lods
mov
jnp
pushf
sbb
outsb
adc
mov
ret
pop
scas
repnz
xchg
and
ret
inc
add
jecxz
cmp
push
sbb
cmp
insl
mov
call
push
jne
mov
outsb
mov
add
andl
adc
jb
sarb
lret
shll
mov
jg
movsb
add
jl
dec
shll
fbld
nop
rcrb
add
iret
sbb
cmpsl
mov
hlt
xor
cld
push
xor
adc
pop
and
and
inc
mov
push
bnd
cmp
pop
and
add
das
jne
cmpsb
push
add
xor
lret
mov
jns
int
sub
lret
das
xor
mov
je
mov
xorb
pop
insl
mov
dec
pop
aam
bound
cld
mov
es
jl
mov
scas
gs
mov
mov
fistpl
mov
sbb
dec
jnp
out
fs
pusha
push
cmp
insb
or
add
pushf
test
jg
jb
pusha
push
sub
cld
call
imul
sub
cltd
or
mov
adc
lods
jp
adc
cmp
decb
add
outsl
pop
pop
arpl
xor
mov
lds
sub
mov
jp
aas
dec
shrb
sub
rcr
cmp
and
imul
cltd
xor
cmp
pop
fs
or
jns
or
xchg
and
mov
push
sti
fucom
cli
les
jbe
cmp
daa
add
pop
shlb
jae
nop
lcall
mov
rolb
mov
outsb
push
pusha
push
inc
inc
push
and
xchg
aad
push
xchg
jbe
mov
adc
popf
fmuls
imul
lahf
hlt
sbb
or
add
call
outsl
or
and
xlat
cltd
stos
bound
test
scas
pop
xchg
fs
ret
mov
dec
inc
add
or
xchg
fs
xor
loop
scas
inc
lea
bound
test
in
fisttps
mov
jnp
add
mov
sbb
test
call
sub
subb
pop
xor
imul
push
movsb
add
push
adc
sti
add
xlat
xor
int
rorb
aas
mov
cld
xor
xchg
cmpsl
sbb
sub
mov
lret
ror
mov
fdivrl
adc
icebp
adcb
jg
mov
faddl
jbe
inc
xor
mov
sub
xor
data16
dec
inc
pop
adc
mov
cmp
jmp
std
aas
inc
pop
bound
fsubl
mov
xor
int3
and
dec
push
fmuls
jo
or
xor
add
dec
dec
hlt
adc
sub
or
ret
orb
fidivrl
lods
xor
aad
int
add
xchg
cli
mov
adc
inc
mov
jo
loopne
add
inc
add
cltd
sub
jecxz
aam
dec
push
xor
call
aam
and
fdivrl
push
fmull
jle
fwait
dec
and
inc
jg
or
mov
pop
mov
add
or
adc
es
rcll
cmp
in
mov
cltd
sub
cmp
dec
inc
lods
sub
fs
add
xor
cmc
pop
nop
clc
lea
cwtl
push
jnp
jge
xor
and
add
push
out
add
or
cltd
sub
dec
add
xor
arpl
nop
jno
lret
pop
loopne
pop
xor
add
push
mov
add
add
jns
xor
test
mov
nop
add
mov
pusha
ret
mov
sub
orb
mov
mov
adc
and
sahf
loopne
loopne
cmc
sub
daa
cltd
ja
and
adc
icebp
mov
xchg
push
leave
addb
ficoms
inc
movsb
dec
sbb
push
mov
or
fs
shr
test
add
sub
pop
inc
add
pop
sub
dec
mov
shlb
adc
in
stc
pushf
fldcw
or
clc
ret
mov
push
jg
jbe
clc
xor
cmp
mov
imul
fmulp
dec
mov
mov
jno
pop
jp
adc
cmpsl
call
aam
mov
loopne
and
cmc
je,pt
pop
inc
incb
sahf
xchg
push
cmp
popa
int3
imul
adc
outsb
mov
rol
xchg
add
jae
add
fistps
mov
push
lcall
jno
sbb
push
add
arpl
xor
cs
xor
dec
xor
repz
lods
sbb
sbb
je
add
gs
push
mov
jecxz
mov
mov
dec
mov
pop
cmpsb
inc
dec
loop
xor
xor
clc
popf
sbb
adc
icebp
pop
xor
add
std
lods
inc
mov
cmp
mov
jo
arpl
sub
sbb
sbb
shll
xchg
mov
movsb
int3
outsb
xchg
pop
lret
jle
fmuls
mov
addr16
rorb
mov
test
or
sbb
sbb
pop
hlt
test
lret
add
imul
arpl
pop
insl
lods
shlb
pop
mov
in
in
xchg
or
test
dec
add
in
sbb
hlt
cmp
jmp
shll
lock
bound
push
push
sbb
js
movsl
cmp
dec
push
dec
pop
iret
test
and
stc
std
add
xchg
fimull
xchg
dec
add
pop
add
adc
fimull
jno
pop
push
jl
addb
mov
ret
jle
push
stos
push
add
and
std
iret
jmp
ja
sub
mov
cmpsb
clc
or
fcomp
sbb
add
xchg
in
adc
mov
pop
cmp
mov
repnz
fiaddl
es
jg
loopne
pushf
pushf
and
cltd
xor
mov
ja
lock
jg
mov
enter
add
adc
lret
pop
mov
test
add
add
insb
mov
or
add
push
mov
adc
sbbb
mov
pop
xlat
mov
int3
inc
mov
xchg
ficompl
das
dec
push
lret
sbb
sti
iret
loope
lock
cs
je
dec
mov
xorb
outsl
shrb
mov
mov
std
rcl
mov
fcmovnu
je
sub
arpl
xchg
push
lcall
and
movsl
popa
pushf
leave
jo
jbe
fs
out
inc
insb
stc
mov
sbb
nop
mov
add
push
into
mov
add
adc
test
and
testb
in
in
add
pop
test
or
add
mov
cmc
jb
pushf
add
in
arpl
mov
lahf
mov
or
xchg
mov
sbb
loope
adcl
sub
pop
or
mov
mov
xor
mov
jno
adc
sbb
pop
add
push
jl
dec
sbb
jbe
enter
enter
sbb
pop
loope
loop
dec
pop
or
pop
inc
mov
and
or
pop
add
lods
enter
cmp
loope
sub
xor
or
push
adc
fcompl
lock
jle
sbb
sub
push
adc
sbb
mov
aaa
sub
imul
xchg
rcll
jp
daa
mov
lahf
adc
fwait
add
xchg
mulb
fadd
cmc
jle
jmp
mov
mov
out
or
loop
outsl
add
mov
add
lcall
int
dec
aad
daa
inc
dec
or
dec
adc
pop
jle
pop
adcl
push
add
adc
js
enter
nop
or
pop
jmp
push
xor
and
rcll
addr16
outsb
das
movsb
and
decl
sbbb
mov
loope
xor
sub
das
add
mov
push
xor
test
cmp
fmull
cmp
dec
or
insb
jge
icebp
mov
jne
iret
in
xchg
movsl
sub
pop
inc
jmp
xchg
data16
outsb
pop
lret
add
insb
xchg
les
aaa
pusha
sbb
dec
fdivrl
lahf
clc
mov
fld
mov
into
aam
add
aad
sub
add
push
repz
adc
sbb
imul
out
loopne
stos
and
pop
mov
mov
push
mov
repz
push
or
dec
fwait
lods
adc
add
inc
push
sub
imul
sbbb
sti
xor
mov
ljmp
jecxz
adc
negb
dec
pop
jl
in
mov
je
lods
sub
mov
arpl
inc
fwait
jg
cmp
sbb
addw
adc
inc
call
stos
imul
dec
pop
pop
sti
sbb
xor
pop
scas
sbb
jo
bound
mov
push
sahf
mov
loopne
ds
add
sub
imul
scas
inc
adc
pop
pop
test
in
jno
ficomps
jg
pusha
cmp
push
pop
das
mov
data16
imul
adc
es
lds
dec
mov
pop
data16
sti
and
push
inc
cltd
cs
sbbb
ret
js
push
add
pushl
lret
inc
pusha
ja
out
add
mov
insl
pushf
das
xchg
sub
xor
push
je
fidivl
fwait
add
push
xchg
mov
sbb
out
shrb
or
daa
pop
shrl
xchg
flds
pop
fdivrl
ljmp
xor
dec
scas
jl
hlt
insl
and
and
out
jnp
push
or
or
xor
sub
je
je
aam
lock
gs
cmpsl
mov
cmp
and
fldenv
mov
repz
pusha
adc
xlat
and
adc
adc
pop
iret
fcom
inc
xchg
arpl
shlb
aam
cli
movsb
in
shll
mov
call
iret
add
inc
in
adc
add
jbe
xchg
add
xlat
jb
mov
mov
pop
dec
adc
mov
push
add
cltd
daa
push
and
pop
clc
shll
fsubrp
das
jne
imul
cltd
pop
testl
push
push
loopne
mov
or
xor
cli
xor
mov
dec
hlt
mov
pop
out
mov
xor
push
mov
xorb
cmp
in
addl
out
pushf
add
pop
jae
push
mov
int
sar
mov
shlb
xlat
or
mov
cltd
int3
or
popf
pop
jne
mov
mov
add
and
fsubl
or
test
cmp
mov
inc
js
add
into
popf
adc
sbb
jp
pop
nop
sbb
lds
popf
cmp
lock
lret
cmp
sti
rolb
push
mov
add
cmp
adc
xchg
xchg
cli
test
add
shrb
push
add
push
cmc
adc
fdiv
xchg
pop
fcoms
cld
hlt
add
cmp
sub
out
fists
rolb
add
scas
inc
mov
stos
in
mov
cmp
mov
sub
les
cmc
lahf
cmp
pop
lods
add
jbe
pusha
data16
xor
mov
cmp
fwait
int
lock
cmp
fwait
xchg
add
pop
fiadds
adc
sbb
xchg
mov
data16
add
hlt
sbb
or
popa
pop
jle
inc
or
add
sbbl
inc
test
or
fiadds
clc
mov
cmpb
and
xchg
push
add
in
in
ds
stos
lret
cmp
sub
cwtl
mov
or
addb
fcoml
shl
fs
in
dec
cmp
add
and
sbbl
aam
cld
mov
cmp
mov
sbbb
loop
add
jb
xor
pusha
dec
pop
imul
iret
subb
mov
mov
fnstcw
dec
dec
daa
xor
les
xchg
and
insl
arpl
loopne
xlat
test
cmpsl
add
xchg
mov
mov
test
subb
or
add
cltd
or
xchg
ret
mov
xchg
loop
cmpsl
xchg
cmp
pop
test
in
sahf
call
pop
movsb
test
inc
sub
jb
dec
pop
ret
pop
adc
mov
add
andb
clc
mov
add
inc
dec
push
das
dec
orl
inc
push
mov
lock
push
fmull
fidivrl
or
fucomp
or
decb
pop
jno
nop
push
ss
add
sub
es
cmc
adc
cmovs
mov
out
push
sbb
div
adc
hlt
daa
rorl
stc
cmpb
inc
and
cmp
push
stos
mov
je
subb
push
cmp
testb
push
stos
pop
test
popf
pop
dec
mov
mov
out
clc
or
jle
add
dec
jo
mov
push
pop
or
cmp
mov
aad
sub
in
inc
or
add
pop
fldenv
cmp
push
mov
add
mov
pop
pop
repz
in
cltd
inc
icebp
sbb
pop
sahf
outsb
popa
lods
imul
xchg
loope
fdiv
cmpsl
xor
das
jle
add
cmp
idiv
rorb
lahf
aaa
sbb
inc
clc
add
fstps
push
shll
xor
sbbb
cwtl
sar
rolb
fwait
inc
mov
xchg
cld
xchg
adc
scas
data16
mov
push
push
outsl
nop
cmp
and
add
jg
call
jle
mov
add
or
jl
inc
es
and
push
adc
mov
aaa
lea
mov
mov
xor
cmpl
fs
mov
pop
or
mov
fnstcw
sbb
cmp
das
or
inc
in
or
mov
cmp
and
dec
out
fsub
dec
push
jecxz
push
xlat
jb
repnz
loopne
jbe
pop
inc
add
jecxz
and
pop
mov
outsb
cmp
roll
out
cli
ljmp
ret
call
mov
pusha
xchg
push
rcrl
arpl
jo
scas
out
xor
fidivs
pop
jnp
addb
xchg
fldt
dec
or
jg
icebp
sbb
cmpsl
push
and
shll
xchg
cmp
cwtl
inc
in
push
subb
xor
call
push
push
jo
or
mov
sbb
outsl
dec
pop
popf
adc
test
push
add
mov
filds
xor
jecxz
pop
dec
adc
pusha
or
test
xchg
icebp
movsb
or
inc
orb
inc
pop
movb
lds
imul
jl
mov
clc
ficomps
in
call
add
cmp
push
clc
push
sub
xor
cmc
aaa
out
cmp
int3
add
sub
icebp
movsb
jb
dec
add
xor
mov
test
add
ficoml
mov
add
inc
sbb
add
xor
stos
push
jns
orl
enter
pop
cmpsl
repnz
nop
lahf
xlat
cmc
pop
push
xchg
not
inc
jmp
add
loopne
lock
inc
in
cmpsb
sahf
and
add
mov
shrb
or
sbb
test
dec
es
ja
sub
pop
lock
sub
jae
push
cmp
les
inc
je
test
dec
sbb
mov
mov
cmp
pop
mov
in
pop
jno
adc
xchg
inc
dec
pop
pushf
jno
outsb
nop
insl
push
mov
and
cmc
inc
mov
cld
movsb
faddl
aas
leave
call
pop
dec
jb
sub
int
cs
or
test
daa
adc
push
add
in
rcrb
js
mov
test
daa
scas
insb
fcoms
fcmove
inc
call
add
sbb
pop
mov
orl
mov
cmp
jne
mov
das
sub
cmp
addb
sub
mov
hlt
adc
aam
or
movsl
nop
das
pop
or
in
mov
mov
xchg
lahf
cli
add
outsb
dec
mov
fdivr
scas
mov
push
xor
inc
dec
fisttpl
daa
xor
sub
test
dec
mov
mov
cmpb
xchg
or
jns
push
sub
movsl
push
pop
and
add
jbe
std
pop
lods
clc
add
fisubl
pop
fwait
pop
pop
arpl
sbb
outsb
pop
addr16
shrb
cmc
rcrb
aad
inc
pop
movl
das
push
or
sbb
iret
adc
add
rorl
shlb
lods
xor
clc
and
mov
push
sub
inc
xor
lahf
push
push
in
mov
jo
pop
mov
aam
loope
in
into
mov
std
int3
mov
jmp
js
xor
and
xor
adc
adc
gs
mov
mov
sub
and
or
adc
adc
out
mov
hlt
ret
dec
pop
inc
sahf
add
clc
add
iret
rcrb
jp
sub
mov
mov
mov
lahf
loopne
add
aam
push
mov
fadd
jnp
or
stos
jae
xor
mov
in
mov
je
jbe
ljmp
call
sbb
xchg
hlt
js
or
xor
shrl
imul
xchg
push
das
in
into
lods
xchg
outsb
dec
mov
ds
sbb
add
dec
sti
shl
push
pop
add
insl
fistl
mov
mov
add
fmull
aam
in
mov
hlt
xchg
test
and
push
jge
sbb
hlt
pop
mov
daa
and
push
ss
or
mov
ficoms
mov
out
pop
insb
mov
mov
lcall
mov
lahf
pop
enter
lods
movsb
inc
push
inc
adc
add
jle
add
hlt
ljmp
and
popf
push
stos
jo
xchg
push
addb
mov
mov
popf
sbb
fsubs
jmp
and
and
mov
and
pushf
inc
mov
and
sahf
dec
lret
cmp
push
jno
add
pop
loop
add
js
jl
mov
pop
xchg
inc
ret
cmp
bound
int3
xor
add
pop
data16
mov
fs
pop
in
insb
shr
fs
mov
and
inc
in
nop
xlat
in
lods
test
cs
sbb
xor
mov
inc
mov
or
ds
popf
dec
cmp
std
jne
add
mov
or
jle
aam
fs
es
into
lcall
mov
jae
outsb
and
rclb
mov
in
sbb
ljmp
cmpsl
call
andl
and
cmp
loopne
loopne
js
add
pop
xchg
pop
or
in
push
mov
and
cmp
enter
scas
mov
pop
addb
movsb
out
in
shll
jg
movsb
add
fidivs
pop
popf
lds
pop
call
sahf
int
js
mov
push
or
inc
test
sbbb
fnstcw
cmp
push
pop
rcrl
out
inc
pusha
dec
test
test
mov
inc
mov
adc
les
push
pop
shll
mov
push
xor
cwtl
or
rcrb
jo
sub
stos
sbb
add
push
push
hlt
cwtl
test
imul
or
or
cltd
das
outsb
cmp
mov
adcb
out
push
add
rcrb
jo
add
fstpt
jmp
push
push
jb
mov
inc
lods
mov
fsts
mov
sbb
jmp
and
hlt
shrl
add
ret
xchg
insb
shll
mov
mov
in
test
aad
xor
jne
or
nop
add
enter
sbb
pop
inc
pop
adc
sbb
in
popa
mov
cld
in
je
popf
insl
mov
sub
jp
and
sbb
push
cmpsl
out
cld
inc
fmuls
or
or
lret
pop
add
and
sub
mov
xchg
xor
test
or
adc
pop
imul
out
inc
aad
movsl
scas
add
cli
rclb
lock
xchg
cmp
jecxz
or
ficompl
outsl
push
add
push
bound
test
jo
mov
aaa
dec
add
scas
cmp
pusha
cmp
xor
nop
inc
mov
lahf
les
ljmp
jmp
adc
lds
scas
jo
mov
cli
cltd
call
enter
xor
fs
inc
loop
push
js
mov
jp
add
call
adc
push
pop
cli
adc
add
sub
push
stos
jbe
or
mov
notb
int
inc
in
bound
xor
push
popf
pop
and
cmp
mov
push
fnstcw
inc
jae
jecxz
test
test
add
jmp
mov
test
dec
dec
jl
push
jne
add
fldl
or
imul
clc
mov
pop
push
sbb
cmc
and
and
cmp
cld
sbb
cmp
popf
push
add
pop
push
imul
lock
int
add
xlat
dec
fwait
daa
mov
cltd
and
push
jo
push
call
cmpb
sarl
inc
or
and
xor
sti
add
scas
stc
jo
in
ljmp
movd
add
cmc
inc
outsb
fcomps
ljmp
add
mov
mov
rcr
cmp
dec
add
lcall
cmpsb
jb
add
js
add
out
dec
in
mov
fsubrl
cwtl
lock
or
mov
loopne
xor
sbb
fsubrs
dec
pop
rcrb
test
sub
adc
fsubs
loope
or
test
inc
dec
mov
inc
cmp
idivb
fwait
adc
dec
int
pusha
inc
cltd
sub
pusha
aad
incl
xchg
lods
pop
in
mov
jbe
je
mov
xchg
imul
jmp
dec
cs
pop
xchg
mov
fcmove
iret
in
cmp
ds
imul
adc
out
fwait
mov
inc
jp
fld
mov
mov
mov
cwtl
mov
push
or
add
pop
add
or
fidivrs
or
repnz
xor
cmpl
or
jb
push
adc
ja
pusha
add
inc
out
insb
or
sbbl
jmp
or
pop
and
das
aam
mov
fisttpl
lods
jns
arpl
add
shrb
fistpll
and
lock
imul
mov
insb
xor
and
mov
mov
pop
and
nop
sbb
jb
inc
mov
and
shlb
ficomps
es
fiaddl
inc
call
add
cmpsl
dec
insb
clc
jns
adc
aas
dec
mov
cmpl
clc
add
pop
sub
sbb
inc
rorl
stos
jbe
imul
fadds
stc
out
pop
test
sub
sub
icebp
add
lock
dec
push
mov
shlb
jb
mov
push
clc
nop
mov
mov
cmp
push
ljmp
add
imul
mov
or
fdivs
ljmp
pop
mov
and
adc
xor
mov
fistps
cld
fsubrp
int3
out
or
das
add
ret
and
mov
cs
mov
mov
xor
xchg
inc
test
shlb
mov
mov
pushf
mov
ljmp
sahf
mov
fcoml
and
and
dec
clc
fdivrs
add
test
aas
call
repnz
mov
jmp
pop
add
push
cld
pop
shlb
dec
add
mov
cmp
cmp
movsb
adc
fiadds
xor
and
mov
iret
lods
js
sub
jle
fists
push
xchg
or
loopne
hlt
adc
and
and
jl
add
clc
test
call
adc
adc
pop
outsl
inc
test
sbb
in
jle
faddl
push
adc
and
jo
daa
jnp
and
mov
adc
xchg
or
adc
add
add
sbb
loopne
push
push
mov
push
jp
enter
inc
fistpll
mov
cmp
rcrb
add
pop
mov
push
push
subb
or
cmpsb
inc
jecxz
mov
loopne
mov
xchg
mov
out
sbb
pop
xchg
std
or
aad
xlat
and
mov
int3
pop
cmp
das
push
jns
das
pop
or
push
add
xchg
adc
adc
test
dec
mov
out
sub
in
or
adc
sar
jge
jne
dec
mov
inc
bound
rorb
inc
cmpsl
jno
cmpb
je
sti
add
sbb
in
jbe
or
inc
xlat
push
movsb
mov
in
cmp
je
jecxz
mov
cmp
iret
add
inc
and
and
inc
cltd
sbb
ljmp
push
push
sbb
inc
dec
inc
outsl
fstp
cmp
movsb
dec
repnz
jmp
pusha
jbe
cmpsl
mov
mov
rcrl
in
lcall
fsqrt
cmp
or
fsubrl
mov
adc
imul
dec
jo
add
or
xlat
jb
frstor
je
mov
mov
ja
les
cmp
mov
aaa
inc
jno
lahf
inc
nop
shll
jae
rol
and
push
add
shrl
push
leave
push
js
ror
or
sub
shll
in
in
pusha
jp
pop
add
jae
pop
lods
bound
and
and
mov
push
scas
enter
inc
sbb
out
inc
hlt
in
or
das
push
and
test
test
call
push
adc
imul
or
push
lcall
adc
and
dec
mov
jecxz
aad
inc
inc
lahf
je
movsb
dec
inc
leave
pop
ds
repnz
sub
xor
test
or
clc
and
pop
mov
pusha
push
inc
iret
lahf
insb
xchg
pop
fs
roll
add
pusha
enter
mov
pusha
mov
mov
repnz
icebp
inc
loopne
popf
pop
add
inc
inc
sbb
and
ja
iret
cmp
pusha
mov
popf
adc
fadd
test
inc
lock
lcall
les
inc
insb
loope
scas
jg
js
add
cmp
cmc
cwtl
shl
ficoml
push
inc
mov
sbb
aam
pop
mov
aam
dec
fsubrs
mov
nop
stc
pop
mov
popf
push
push
sub
and
cs
imull
les
outsb
fcmovb
jns
add
xchg
mov
je
enter
bound
lods
insb
mov
add
cmp
xor
fsubrs
pop
inc
imul
jp
push
dec
or
test
roll
pop
mov
sub
sub
add
mov
ljmp
jg
arpl
jp
add
push
lock
dec
inc
ds
mov
jg
xor
rclb
scas
clc
xchg
pop
mov
mov
xchg
xchg
sub
add
push
pusha
call
dec
into
adc
addr16
xchg
stc
pusha
pop
cmpsb
pushf
loopne
add
add
test
movsl
push
adc
push
mov
cmp
mov
dec
cld
inc
jecxz
lahf
test
xor
push
data16
xlat
sbbb
mov
dec
pop
nop
enter
add
push
int
sar
inc
sbb
nop
sbb
add
jnp
mov
test
lahf
xchg
push
mov
fsubrl
aam
mov
addl
pop
or
lods
mov
adc
insb
mov
test
jp
push
mov
and
mov
xor
jge
outsb
jl
push
push
in
inc
pusha
jbe
pop
gs
add
sbb
cmpsb
cltd
xor
rorl
cwtl
jl
xchg
inc
lahf
jp
pusha
repnz
mov
jb
add
push
and
cmpsl
aam
xchg
outsl
clc
pushf
mov
xlat
cs
mov
jo
loop
mov
repnz
xchg
push
mov
insl
mov
lret
push
add
insb
adc
xchg
or
add
hlt
aam
xchg
rorl
clc
lock
test
cmpsb
addb
add
mov
xor
mov
fsubs
in
cld
xor
psubq
xor
mulb
adc
loopne
leave
jg
add
repz
mov
push
in
mov
xor
inc
lock
fadds
pushf
ljmp
das
cld
cmp
xor
inc
jno
testb
push
scas
testl
mov
fwait
pop
fiaddl
dec
xchg
arpl
mov
movsb
xchg
data16
jb
push
addl
addl
or
and
ret
lock
dec
mov
mov
and
jle
lahf
mov
mov
nop
orl
inc
mov
mov
neg
mov
hlt
jns
cmp
add
out
xchg
add
cld
pusha
mov
lret
adc
mov
daa
jp
rolb
call
jge
xchg
mov
shll
cwtl
ds
dec
loop
jg
jmp
pop
inc
adc
mov
int3
inc
shrl
mov
sub
loopne
push
test
and
sub
imul
push
mov
mov
push
push
jle
mov
lock
enter
jge
mov
mov
ja
ret
fsts
out
mov
mov
out
or
lret
mov
aaa
xchg
icebp
nop
mov
loopne
insl
cmp
sbb
jge
fdivrl
lahf
jo
notl
call
inc
in
pop
and
loopne
xor
pop
inc
add
fs
movsb
icebp
mov
mov
into
in
rolb
mov
aam
repz
xchg
and
inc
shlb
nop
and
in
or
ds
movsb
add
icebp
jle
outsb
pop
pop
push
pop
or
sub
adc
add
insb
es
xor
push
adc
fldenv
dec
adc
adc
mov
and
jae
cld
insl
popf
nop
add
inc
add
fcmovnb
imul
pushf
fidivl
jmp
out
adc
or
and
sbb
enter
addr16
sbb
jno
adc
pop
push
sbb
xchg
jg
std
or
fidivl
jb
adc
out
dec
fcompl
dec
icebp
adc
popf
add
or
shlb
pusha
test
inc
sub
push
jb
dec
faddl
cmc
shrb
hlt
cwtl
adcl
xchg
mov
inc
cli
add
add
das
sub
aad
call
inc
andl
fldenv
scas
inc
sbb
lock
inc
mov
ret
add
mov
mov
sbb
rol
loopne
enter
imul
shll
sub
lods
cld
into
out
or
in
sub
stc
inc
pop
mov
push
mov
lock
je
pop
inc
push
adcb
cmp
cwtl
pop
add
ret
je
pop
mov
pop
cmp
int
incl
push
jno
dec
mov
call
add
jno
lods
es
inc
cmpsb
adc
aam
stc
addb
mov
fidivl
sub
je
loope
adc
movsl
jg
lock
sub
add
dec
add
lock
add
jmp
push
outsl
and
cli
push
daa
fwait
incb
mov
ds
in
xor
xor
adc
jns
xor
inc
ficoml
mov
cmp
inc
pusha
add
dec
in
aam
faddl
xor
sbb
push
pop
daa
cld
sbb
jp
inc
dec
les
mov
jno
xchg
jg
cmpsl
lods
and
xchg
pushf
pop
inc
jae
fs
push
shl
sbb
inc
push
xor
in
and
cmp
or
push
add
push
push
call
pop
fisubl
mov
outsl
comiss
push
cli
mov
or
inc
es
dec
nop
daa
mov
dec
nop
mov
or
ja
mov
test
cmpl
out
movsb
fsubr
inc
cmpsb
sbb
xchg
mov
cmpb
daa
mov
adc
sbb
and
pusha
sub
mov
mov
adc
inc
test
std
cmpb
sub
mov
rorl
cwtl
dec
inc
aam
xchg
adc
mov
and
dec
adc
addr16
outsb
sbb
mov
hlt
ficomps
or
jmp
lahf
fadds
push
rclb
mov
clc
andb
aas
dec
pushf
fmull
pusha
dec
pop
stos
cs
in
dec
incb
add
sbb
cltd
sub
mov
push
and
and
ljmp
pusha
xlat
add
inc
jecxz
and
or
inc
out
dec
pop
adc
mov
faddl
or
sub
aas
out
mov
fdiv
and
and
lods
dec
xlat
mov
aaa
pop
mov
add
in
repnz
jecxz
pop
insb
sbb
mov
jb
dec
cltd
je
mov
mov
insb
in
in
or
call
jbe
imul
add
bound
das
jp
add
in
xor
adc
ret
ja
and
std
jmp
jo
jp
or
enter
push
gs
sbb
mov
add
mov
test
es
mov
pop
mov
cmpb
addr16
push
orb
pop
lds
add
cmpsl
or
add
aaa
ljmp
mov
adc
mov
imul
xor
pop
pop
insb
loop
cmp
test
aam
out
pop
jl
mov
inc
cmpsl
mov
fwait
test
fcmovnu
fmuls
adc
mov
call
sbb
lahf
or
mov
or
pop
and
cmp
adc
mov
rep
cld
push
enter
pop
popf
push
scas
aad
aaa
mov
cmp
mov
xor
cli
pop
mov
mov
lock
repnz
jmp
mov
rolb
mov
dec
loope
dec
add
mov
popa
sub
mov
mov
jo
pushf
adc
cld
or
daa
mov
xchg
inc
pextrw
or
add
cmpsb
stc
pusha
cwtl
pop
data16
dec
mov
sub
sub
mov
sub
lcall
or
cmp
shr
lods
push
add
dec
cld
add
pop
sub
jne
jmp
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
pushf
or
xchg
cli
push
add
cmc
adc
mov
mov
icebp
sub
stos
xlat
and
test
or
fistps
fldenv
pushl
add
out
pop
inc
mov
dec
cld
bound
adc
xor
movsl
jg
and
cmp
push
flds
mov
fdivl
jne
add
jmp
mov
test
xchg
xchg
or
adc
xchg
cmovs
sbb
pop
ficomps
xchg
mov
test
das
aam
aam
outsb
fistpll
icebp
push
sbb
sub
add
adc
dec
cmc
loopne
push
outsl
iret
cmpsb
into
add
mov
sub
jle
adc
lds
pop
mov
mov
mov
pushf
inc
movsl
imul
dec
push
add
inc
sahf
push
and
test
es
xor
int3
lea
push
std
push
cld
sub
cli
xchg
and
inc
orb
dec
push
and
mov
inc
test
add
add
xor
push
and
xor
mov
idiv
xor
test
repnz
mov
into
push
sub
jno
lret
aaa
cmp
aaa
repz
xchg
xor
mov
test
sbb
or
mov
push
pop
add
dec
xchg
mov
idiv
nop
inc
lret
cli
adc
nop
mov
xchg
push
pop
mov
pop
repnz
xorl
ljmp
fsubrl
daa
andb
pop
in
or
lds
mov
push
xorl
pop
sbbb
pop
lds
dec
sub
and
push
add
clc
cltd
arpl
mov
cltd
adc
sub
sbb
or
scas
add
mov
cltd
inc
fdivs
shrl
pop
mov
adc
andb
enter
lahf
cmc
xor
test
mov
push
jae
pop
cmp
ds
out
mov
test
movsl
add
loopne
in
shlb
scas
xchg
nop
neg
push
xlat
mov
inc
dec
xor
xor
add
popa
pop
fisttpl
clc
xor
cmp
adc
lea
or
and
fisttpl
push
inc
sub
repz
pop
movl
xchg
and
adc
bnd
nop
push
ja
lahf
je
dec
dec
adc
icebp
or
mov
pop
fstps
pop
jmp
jbe
daa
xlat
xor
jmp
pop
push
dec
mov
negb
dec
xchg
push
push
xchg
popa
mov
mov
jo
mov
pop
and
or
rcll
rcl
rcrl
icebp
shlb
dec
mov
inc
inc
jmp
popa
adc
in
mov
lahf
xchg
pop
aas
pop
or
outsb
sub
icebp
pusha
nop
adc
icebp
or
push
push
frstor
sub
movzwl
nop
ret
sbb
pop
imul
and
lret
jnp
pop
nop
sub
out
xor
loope
mov
pop
imul
mov
push
push
push
inc
mov
xchg
pop
std
mov
add
outsb
push
shl
movsl
inc
ja
mov
push
daa
aaa
add
sub
bound
repnz
popf
push
andb
les
push
stc
in
cld
xor
shll
mov
test
adc
cmp
aad
lods
xchg
and
xchg
iret
out
push
mov
or
icebp
xchg
ret
sbb
and
jne
ficoml
sbb
sub
add
stc
cwtl
mov
int3
inc
call
pusha
push
pop
lcall
fldcw
or
sbb
jmp
sbb
lahf
inc
lods
add
adc
ret
add
pop
adc
mov
xchg
jecxz
add
shll
nop
scas
cmpsl
outsl
pop
and
pop
popa
rorl
xchg
sub
sbb
fcmovnb
add
leave
jne
jmp
mov
xorb
movsl
cwtl
clc
and
xor
sbb
lock
inc
or
push
mov
fs
adc
jmp
out
jecxz
inc
inc
xchg
add
mov
mov
push
das
inc
lods
add
int3
lcall
inc
pop
push
push
pusha
mov
add
popa
or
cltd
push
frstor
shlb
adc
inc
xchg
push
mov
xchg
clc
mov
xor
test
pop
or
push
mov
mov
out
cmpb
dec
xchg
inc
in
sub
loope
rorl
mov
imul
add
pop
pop
or
add
mov
cmc
mov
lea
jb
mov
das
xchg
xor
pusha
jmp
decb
fstps
mov
sahf
add
enter
adc
popl
mov
inc
mov
jb
repnz
add
jg
add
jp
scas
mov
cvtdq2ps
jg
add
cmc
or
or
in
shlb
and
jle
aaa
daa
and
add
jbe
inc
mov
jmp
xorl
or
inc
and
movsl
pop
add
mov
inc
mov
mov
mov
fstps
xor
jo
pop
add
push
mov
sub
pop
jno
ds
add
arpl
stos
outsl
cmp
les
imul
cld
cmpb
add
mov
add
das
or
out
popa
mov
das
lods
xor
roll
dec
test
cmc
int
pusha
scas
add
in
fwait
pop
dec
outsb
inc
add
mov
xchg
test
add
mov
push
mov
cltd
lods
les
loop
outsb
out
adc
bound
dec
adc
fldt
xchg
mov
and
or
insl
inc
and
ret
add
or
dec
mov
sbb
adcb
lcall
les
dec
or
sub
sysret
mov
jne
pop
xor
and
mov
rcrb
dec
push
enter
mov
push
movsb
ret
fbld
loope
ficomps
lret
aad
in
push
scas
shll
xchg
int
mov
test
add
xor
push
leave
push
adc
and
and
addr16
mov
cmp
pop
pop
jno
xchg
adc
mov
push
out
les
add
sub
cmpb
stc
jo
mov
jb
jno
or
in
xchg
pusha
dec
mov
fwait
pop
jp
jo
mov
sbbb
mov
and
imul
xor
es
dec
add
imul
iret
dec
adc
arpl
fiadds
pop
sbb
ret
adc
cld
push
inc
add
movsl
mov
int
andb
sbb
push
cmp
jl
cmpb
xor
xor
jg
adc
mov
add
cli
push
rorb
push
and
subl
movsb
popa
nop
ss
shr
and
or
lret
dec
jo
test
aaa
pop
push
ja
dec
outsl
adc
cs
add
pusha
or
cld
inc
add
popa
push
aam
lods
in
or
and
je
faddl
jne
rcrl
mov
daa
push
mov
mov
xorb
lds
jo
imul
int
loopne
mov
loope
lock
jmp
mov
mov
dec
andb
lret
popf
and
jbe
mov
mov
jno
shrl
mov
scas
jg
jae
mov
mov
and
push
popa
jmp
pusha
mov
jp
add
cmc
shll
lahf
cmp
mov
dec
stos
aas
iret
add
ljmp
loop
or
xchg
repz
push
push
pusha
xchg
shrl
enter
test
pushl
and
push
adc
enter
add
stos
nop
xor
pop
mov
push
pop
es
mov
add
inc
imul
or
sarb
xor
inc
mov
stos
aas
pop
lahf
add
shrb
daa
int3
in
xchg
incl
cmp
sbb
mov
lcall
fdivrl
inc
adc
pop
pop
testl
sbb
mov
ss
adc
xor
push
cltd
cli
xchg
add
aaa
shll
sbb
xorb
fcoml
adc
jmp
jmp
arpl
inc
dec
mov
jne
pop
push
rcrb
xor
jb
pop
mov
pop
and
and
sbb
addr16
jecxz
ret
dec
sub
dec
std
and
dec
dec
mov
cld
test
cmp
add
mov
je
jne
mov
scas
mov
cs
xchg
divb
lahf
je
fcoml
fs
and
iret
add
fcmovu
xchg
dec
add
popa
push
adc
inc
sbb
ja
sarl
add
add
je
jmp
sub
inc
jecxz
mov
xchg
sbbl
in
cmp
add
dec
pop
lcall
jp
add
stos
cmp
mov
xchg
mov
xchg
push
jo
add
pop
mov
push
pop
add
push
mov
clc
data16
add
outsl
lods
fdivrl
repz
xor
xchg
add
inc
add
dec
int
and
jno
sbb
or
jo
cmpsl
add
add
dec
jo
in
dec
out
leave
sbb
test
adc
pop
frstor
push
pop
mov
cli
or
pop
movsl
int
inc
pushf
sbb
gs
enter
sahf
fists
int3
cmp
mov
sub
lods
add
dec
adcl
lret
and
scas
daa
push
and
xor
mov
and
idiv
adc
dec
add
aas
into
test
xchg
lret
xchg
shll
jno
cmpsb
lock
sti
psrlw
ret
cmp
repz
or
popf
jmp
sub
repz
mov
jg
mov
xor
mov
inc
repz
push
je
adc
cmpsl
or
call
cmp
or
shlb
mov
dec
and
fldcw
mov
fld
inc
leave
mov
mov
sarl
jle
add
dec
cmp
dec
pusha
xchg
mov
int
pop
pusha
cmpsl
xchg
cmp
aas
gs
inc
psrlw
call
into
inc
push
and
scas
add
rcr
mov
adc
dec
data16
jp
add
stc
push
lahf
sbb
lea
add
stc
adc
or
adc
shl
push
ljmp
outsl
mov
cld
rorb
or
test
cltd
jg
push
jmp
dec
ror
movswl
mov
sbb
ss
xor
cmpb
mov
add
lock
push
push
lods
adc
mov
jecxz
sti
nop
cwtl
push
lods
in
or
xchg
or
jns
dec
mov
inc
outsl
mov
xor
imul
int3
loopne
adc
jae
fcompl
adc
jns
dec
cwtl
orl
fisubl
mov
icebp
decl
fdivrl
jo
or
mov
sbb
mov
add
clc
fldcw
pop
out
sub
movsl
or
mov
xlat
xchg
pop
mov
jmp
mov
int3
orb
popf
pop
aam
mov
sub
dec
pop
outsl
loopne
and
addl
in
dec
sbb
push
fadds
lea
ds
pop
je
jl,pn
and
dec
testl
and
pop
adc
sub
addb
mov
loope
ljmp
add
and
mov
add
jae
insl
pop
mov
add
test
movswl
mov
lea
std
out
add
dec
out
sbb
call
outsb
fidivrs
sub
lods
pop
or
clc
xchg
addb
mov
push
cmp
cli
lods
enter
sub
fucom
jo
add
push
sahf
jecxz
jns
xchg
mov
cmp
add
sbb
pop
jl
adc
mov
dec
dec
push
mov
push
stc
pop
das
das
xor
jmp
jecxz
add
xor
cli
mov
pushf
mov
or
inc
mov
addb
and
fs
jle
or
mov
cmpsb
aam
cmp
cmpb
loop
push
bswap
push
call
mov
pop
sub
dec
cli
jo
dec
xor
or
adc
push
adc
sbbb
bound
out
pusha
addr16
and
ja
js
add
inc
lds
call
pop
mov
pop
jmp
jle
push
call
add
jle
mov
inc
mov
shll
jmp
shrb
mov
shrw
addb
mov
jno
sarb
icebp
add
cmp
add
ds
mov
lahf
pop
jp
mov
xor
push
and
push
mov
jmp
xor
sub
mov
inc
shll
adc
jo
pop
adc
add
or
adc
inc
jg
pop
out
fstpl
pop
mov
pop
in
and
push
pop
nop
jo
sub
notl
mov
stc
sahf
arpl
fstl
movsl
pop
adc
js
lcall
ret
push
inc
or
mov
clc
cld
popf
or
in
push
pusha
mov
ljmp
rorb
mov
fwait
pop
shrb
pusha
or
bound
lods
movl
pop
mov
inc
pop
mov
adcl
mov
xor
fs
faddl
out
int
push
jo
cmp
outsl
mov
inc
ret
sub
sub
leave
movsl
in
sbb
cmp
call
mov
adc
dec
cmp
sub
ds
jbe
andb
mov
pop
jmp
sub
and
and
and
pop
add
cmc
mov
jns
inc
pop
xor
fbld
inc
jno
fiaddl
adc
pop
jnp
add
add
push
push
call
pop
stos
jae
mov
adc
daa
pop
inc
add
fadd
mov
adc
stc
xchg
cltd
divb
and
out
push
pop
pop
push
movsl
out
decb
mov
mulb
or
or
jnp
movsl
xlat
mov
mov
dec
xchg
daa
aad
aad
enter
pop
mov
inc
add
or
adcb
mov
inc
or
jae
mov
pusha
fs
pop
lds
mov
xchg
addb
sub
or
mov
and
jne
add
jge
push
pop
cmp
out
call
xor
data16
popa
imul
hlt
and
aam
add
shrl
in
ss
lods
pushf
iret
orb
push
pop
jns
dec
test
mov
sub
fsts
and
pop
xor
jne
xchg
in
sbb
stc
insb
add
ret
pop
xlat
fs
shl
insw
jnp
mov
mov
pop
mov
dec
mov
stos
mov
push
loop
jne
adc
mov
add
jae
add
jo
std
add
dec
mov
jnp
js
or
mov
imul
outsl
in
dec
sti
xchg
shrb
out
mov
xlat
scas
enter
fbstp
dec
or
or
dec
dec
loope
es
dec
les
stos
outsb
loop
rcll
jmp
inc
lock
js
cmp
and
push
jne
mov
xchg
les
rcrb
es
sbb
imul
loopne
or
dec
shl
inc
inc
push
xchg
cmp
outsl
test
aam
ror
add
jecxz
icebp
jmp
inc
mov
fnstenv
test
xchg
xor
aam
out
out
mov
mov
test
lea
mov
add
shlb
xchg
xor
xchg
imul
popa
popa
lods
pop
pop
dec
xlat
cmc
shrl
sub
sub
scas
mov
xlat
pop
dec
jmp
pusha
pop
add
stos
lea
je
testb
cmp
jae
push
xchg
xor
mov
movsl
or
jno
xlat
sub
popa
gs
inc
sbb
sub
sbb
icebp
call
push
mov
imul
xchg
mov
fsubl
cmp
nop
addr16
inc
mov
sub
mov
fcmove
std
mov
jbe
fildll
sti
ret
lock
pop
ljmp
out
push
inc
jae
inc
test
push
mov
in
mov
xor
mov
add
das
adc
call
mov
loopne
sub
sbb
insl
adc
jecxz
add
popf
adc
lds
test
or
add
in
jge
add
jne
imul
fistl
sbb
sbb
popa
out
test
add
or
addl
add
jbe
test
popf
pop
mov
cld
insb
faddl
data16
jl
js
fstl
repz
pop
inc
rolb
pushf
dec
cmp
add
xlat
out
jl
and
cli
mov
popf
dec
add
push
mov
pop
sti
clc
mov
shl
mov
push
inc
stos
add
jns
aam
adc
adc
mov
xor
dec
lcall
jg
dec
leave
pusha
icebp
mov
loope
fistpl
call
sbb
sub
sti
lahf
xchg
xchg
and
pop
adc
into
lret
repz
and
push
mov
sbb
dec
add
adc
cli
ss
push
push
mov
dec
xor
pushf
pop
xor
ljmp
outsb
je
mov
pop
mov
xor
lcall
pop
xchg
fsubl
pusha
popa
pop
pop
xchg
and
adc
cmpl
jo
in
xor
mov
mov
pop
or
aas
or
jle
or
and
repz
mov
pop
insl
and
push
sub
and
leave
jge
or
stos
fcoml
mov
cli
rol
or
sbb
mov
repnz
test
cmp
fisubrl
and
jmp
jns
inc
pop
push
sbb
sbb
sbb
movsl
shrl
scas
int
inc
into
mov
mov
pop
mov
aaa
lahf
add
or
mov
jmp
cs
incl
aas
add
inc
mov
pop
mov
dec
mov
loope
cmp
cli
fs
ja
adc
jge
bound
cmp
repnz
nop
sub
loope
ret
inc
pop
sub
mov
stc
jnp
dec
add
popf
cltd
rcrb
outsb
fcmove
cmp
outsb
push
sbb
and
call
fsts
push
mov
add
mov
fisubrs
nop
roll
xchg
pushf
int
rol
and
pop
test
cmpsl
sbb
lahf
push
cltd
or
scas
xor
jno
faddl
rcll
xchg
cltd
sti
mov
jb,pn
stos
and
push
outsb
enter
push
and
jg
loop
fmul
add
or
push
push
push
add
cwtl
faddl
jmp
mov
xchg
fmul
pop
sub
add
mov
jl
in
mov
pushf
ret
lods
jmp
and
push
lcall
popa
or
jo
add
jne
sti
push
ja
mov
loop
and
push
mov
or
divl
sbb
inc
lea
stc
cmp
jmp
dec
mov
xor
or
insl
rorb
mov
dec
jle
mov
mov
pop
scas
xchg
in
int3
les
gs
out
dec
adc
jecxz
jno
jns
in
stc
lods
mov
cmc
pop
xor
inc
mov
clc
iret
mov
bound
pop
push
aas
call
push
fimull
data16
push
mov
mov
invd
dec
pop
adc
daa
inc
cmp
cwtl
and
jmp
pop
sbb
add
nop
int
lods
fsts
lock
sbb
pop
push
cmpsl
movsl
sub
addr16
stos
mov
out
jmp
cmpsl
xlat
and
add
inc
add
sbb
mov
popf
jno
ud1
and
xor
stc
pop
popf
jmp
daa
jmp
cld
push
out
xor
xchg
xchg
adc
push
inc
lock
and
add
mov
and
incb
or
mov
js
nop
rclb
mov
push
xor
inc
das
aam
aas
test
push
outsl
or
sbb
incb
cmc
xchg
xchg
xor
aad
popa
pusha
xor
test
arpl
add
pop
mov
mov
js
sub
movsl
clc
push
cmpl
sub
lahf
insb
jns
mov
adc
insl
xchg
cwtl
out
mov
gs
mov
pop
js
dec
dec
sub
dec
mov
mov
stc
cwtl
das
add
mov
rcll
push
jl
mov
mov
or
imul
or
mov
adc
insb
mov
dec
cs
stos
push
lds
adcb
inc
lret
push
and
cli
or
sub
dec
pop
leave
cmp
xchg
add
cmp
ficomps
ret
adc
cwtl
mov
mov
int
add
push
psrlq
jbe
rcll
popf
or
repnz
sub
add
sub
ja
sbb
cld
dec
pop
sti
jmp
or
bound
or
sub
les
mov
movsb
les
mov
daa
cmpsb
pop
repnz
lcall
xchg
repnz
xchg
add
aaa
xchg
andb
clc
pop
je
push
test
dec
mov
mov
push
xor
dec
fdivrs
xchg
andl
xor
fdivl
mov
mov
je
lahf
jmp
or
repnz
cmp
cwtl
mov
inc
cmp
rclb
scas
xor
pushf
mov
mov
ja
add
or
fcmovnb
mov
repz
inc
test
insb
lret
sbbb
mov
loopne
or
jo
ja
push
popf
push
testl
cmpsb
adc
cmp
ret
add
xchg
push
pop
nop
mov
push
orb
push
mov
or
mov
push
out
fnstcw
push
pop
xlat
pusha
dec
andb
icebp
insl
dec
sub
adc
outsb
and
adc
push
dec
cmc
int
js
push
std
inc
lock
sbb
add
insb
int
btc
loop
hlt
mov
add
cmpsb
test
mov
dec
sbbb
pusha
mov
xor
and
mov
dec
popf
xor
xor
mov
pop
cmpsb
leave
and
fistpll
movb
inc
outsl
rclb
mov
clc
out
je
dec
fchs
jmp
pusha
jle
inc
adc
mov
loop
and
pop
xchg
popa
nop
sub
xchg
dec
mov
push
aam
rolb
pop
cmp
jo
or
mov
jp
mov
fs
sub
add
rcr
orl
les
cmp
adc
test
lea
mov
dec
push
add
push
les
lds
pop
adc
idivb
imul
xchg
adc
mov
lcall
mov
push
jns
or
add
sub
out
pop
jge
lds
jne
sub
hlt
add
or
push
imul
shlb
mul
jno
aas
enter
shl
aam
enter
jne
mov
jbe
jge
cld
xor
loopne
xor
sahf
scas
push
fcomip
and
mov
sti
or
les
cmpsl
in
mov
in
dec
shr
mov
sub
mov
pop
lods
sbb
push
push
mov
and
pop
stos
pop
cmc
jno
dec
adc
call
adc
and
push
pusha
fsubrs
add
popf
push
sub
or
xor
rorl
fldcw
imul
push
pop
cmpsl
ljmp
lcall
ret
das
xchg
out
xchg
dec
adc
cmp
inc
out
xchg
adc
sbb
xchg
movswl
xchg
fwait
nop
leave
mov
xchg
push
clc
in
js
sbb
lahf
jle
bound
push
sbbb
je
jecxz
adc
xor
daa
push
push
xlat
nop
fwait
pushf
addb
push
dec
jecxz
subb
adc
sbb
pusha
inc
mov
call
push
lds
cmp
inc
sbb
bound
int3
pop
pop
mov
jne
in
outsb
fldl
mov
mov
mov
mov
popf
jno
xchg
xchg
enter
nop
fisubrl
mov
dec
lods
adc
xor
add
insb
xor
pop
sub
incb
fisubrs
add
dec
or
xchg
insl
insl
les
repz
lods
add
push
leave
insl
mov
int
out
xorb
or
cld
fiaddl
leave
int3
xchg
xchg
cwtl
imul
repnz
mov
in
pusha
stos
push
push
loop
add
pushl
imulb
and
in
arpl
scas
sbb
sti
and
cmp
xor
adc
adc
daa
dec
jns
imul
add
cwtl
inc
pop
hlt
cmp
and
fnstsw
pop
movsl
mov
adc
daa
js
test
outsb
outsl
add
sbb
push
pop
jns
add
mov
inc
xorl
add
adc
movsl
push
push
nop
push
pusha
xor
call
ftst
outsl
and
cli
mov
lds
stos
outsb
dec
ds
mov
call
mov
dec
ljmp
sub
push
js
jno
cld
outsl
pop
int
cmp
ss
add
jb
jmp
fucom
mov
ss
cmp
and
cld
push
mov
fidivl
cmp
aad
or
add
cmp
mov
popa
cmp
xor
pop
mov
add
shlb
mov
subb
das
sub
mov
lret
js
test
sub
mov
loopne
pushf
pop
add
mov
cmpsl
or
fildll
icebp
fsts
xor
adc
aam
dec
lock
ljmp
or
outsb
out
subl
hlt
sbb
ss
out
cltd
inc
xchg
xchg
lcall
ss
std
mov
xchg
outsl
pusha
js
mov
sub
fists
cmc
push
rclb
dec
add
push
stc
pop
sahf
out
mov
xchg
gs
mov
xor
cmp
push
mov
push
arpl
pop
nop
mov
cltd
scas
push
xor
xor
clc
jmp
adc
pushf
jb
push
mov
mov
fmull
jp
jmp
fdivp
inc
test
lods
imul
dec
adc
pop
ljmp
jae
fsubr
add
movsl
pop
jb
push
or
or
add
jmp
xor
mov
dec
ljmp
jmp
add
scas
lock
outsb
sub
popa
and
aas
std
adc
dec
cwtl
aam
rcrb
lcall
loopne
cwtl
pop
dec
add
or
add
mov
stc
dec
movsl
add
xchg
loope
sar
pmaddwd
push
pop
adc
mov
mov
cs
xchg
fistl
sub
lahf
cld
loope
cmp
add
lds
xor
and
xchg
add
dec
sbb
or
inc
jmp
xchg
add
and
andb
mov
out
mov
and
adc
pop
jmp
imul
inc
pop
pop
fsubrl
or
and
and
lcall
inc
gs
push
in
cmpl
in
mov
mov
insl
mov
lcall
jmp
mov
add
arpl
stos
sub
push
dec
lds
iret
jl
paddb
xor
lret
shrl
je
jecxz
aas
call
ficoml
lods
scas
cmp
push
add
insb
daa
sti
pop
frstor
fisubs
stc
mov
loope
cmp
pop
stos
mov
xor
dec
int
sub
mov
clc
xor
outsb
insb
adc
in
jns
int
cmp
divb
clc
filds
das
pcmpgtw
mov
movsb
mov
daa
add
mov
and
lahf
mul
hlt
or
cli
orb
mov
and
nop
sub
lcall
int
adcb
inc
je
xchg
xchg
dec
inc
mov
test
mov
mov
mov
pop
sbb
xor
cwtl
mov
cmp
xor
imul
push
mov
push
adc
pop
adc
sbb
push
outsl
adc
test
test
stc
cmp
addb
add
mov
or
or
pop
xor
jp
inc
cmp
dec
pop
scas
xor
shll
mov
orb
add
add
push
jle
mov
dec
mov
pop
cmp
push
mov
add
xchg
clc
test
pop
cmp
mov
enter
lcall
mov
shr
mov
mov
call
xchg
cmpsl
mov
add
cmp
pusha
mov
push
aad
stos
rorb
ret
ja
cwtl
mov
aad
pop
ljmp
xor
and
mov
ja
mov
lods
and
sbb
jg
leave
stc
fdivp
adc
dec
mov
das
cmp
jnp
shll
sbb
jecxz
mov
dec
add
pop
outsl
jge
insl
push
adc
daa
dec
lcall
pop
dec
mov
mov
pop
popf
cld
sti
loope
add
dec
fsubs
cmpsb
loope
xchg
mov
xor
xor
stos
sbbb
mov
pushl
imul
mov
je
add
push
dec
divl
add
vmwrite
shl
xor
push
mov
pop
je
pop
pusha
push
add
add
enter
or
fs
add
mov
pushf
lret
jno
push
out
push
xchg
in
ljmp
mov
adc
orl
in
popa
movsb
adc
adc
or
pop
jle
pop
jns
ljmp
jg
adc
aam
mov
sub
mov
int
sub
pop
and
mov
mov
frstor
ja
push
imul
adc
daa
popa
rcll
jo
fstpt
sti
mov
pop
sbb
inc
cmpxchg
nop
fstpt
stos
repnz
push
xchg
test
sub
pop
les
test
add
or
jp
cmp
push
cmpl
cmc
aaa
mov
stc
mov
add
mov
xchg
shll
sub
mov
inc
sub
sbb
ss
fs
nop
bound
imul
and
push
dec
pop
out
push
popf
cmp
ds
aas
repz
xchg
mov
cmp
add
xchg
adcl
dec
sub
mov
and
test
add
and
int
inc
lods
ljmp
fnsave
push
fsub
inc
mov
cli
push
or
mov
and
inc
sbb
add
popa
cmpsl
or
mov
jmp
pop
lea
outsb
sbb
andl
rcll
int
imul
cmp
adc
sub
inc
sub
and
sbb
cmp
cld
mov
pop
pop
aam
and
comiss
loope
sub
sti
xor
outsb
jb
mov
inc
out
adc
pusha
mov
mov
ja
ljmp
dec
pushf
js
push
pop
sbb
push
jge
popf
dec
add
iret
outsl
cs
xor
sub
mov
in
in
test
mov
fbld
cmp
das
fdivl
leave
sub
fiadds
pop
arpl
sub
mov
clc
push
dec
sub
or
or
or
mov
and
loop
sub
sub
cmpsl
imul
push
test
out
and
loop
xor
adc
int3
nop
sbb
mov
push
xchg
sub
sbb
jae
push
push
sbb
nop
or
stc
cwtl
sub
test
or
xor
pop
adc
aaa
adc
lock
dec
rolb
imul
add
xchg
jmp
inc
xor
das
sti
repz
add
jp
popa
sbb
sbb
stos
pusha
push
cld
movsb
inc
adc
rcr
movsl
mov
popa
sub
sti
xchg
dec
mov
add
int
push
imul
sbb
movsb
jecxz
push
das
jo
nop
sub
sub
mov
hlt
faddl
jmp
pop
pop
and
shlb
sbb
jp
jns
mov
mov
jbe
adc
pop
in
pushf
xor
xor
cmp
mov
pop
lds
mov
xorl
pop
gs
cmp
add
sbb
adc
xchg
icebp
bound
mov
xchg
popa
and
pop
ljmp
insb
sahf
mov
sbb
push
inc
gs
cld
lret
fs
sbbl
mov
pop
xor
ds
add
movsl
xor
mov
pusha
adc
xchg
test
jecxz
sub
in
mov
adc
add
shll
or
fwait
add
sahf
sbb
add
int
loope
ficoms
ja
bnd
pop
aam
imulb
jmp
sbb
loopne
and
cmpsb
push
loopne
adc
movsb
clc
mov
sbb
inc
dec
stos
mov
mov
sub
or
dec
stc
out
lods
fsubr
movsl
add
cmp
sub
cld
mov
mov
jle
xchg
dec
hlt
sbb
orb
aaa
insb
bound
add
jnp
push
stos
xchg
pusha
in
orl
out
jo
icebp
mov
fdivrs
xchg
adc
and
adc
add
mov
in
sbbb
dec
loop
and
out
cld
dec
lock
and
popf
gs
add
inc
or
dec
movsl
stc
sub
hlt
out
add
xchg
or
testb
mov
inc
jo
xor
jp
xchg
or
and
jecxz
sti
stos
add
ds
push
pop
pop
jne
mov
imul
mov
mov
lcall
mov
pop
jmp
jo
adcb
stc
mov
mov
jae
or
adc
sub
add
int3
push
jno
or
cmpsb
push
xchg
or
or
and
fdivrs
ljmp
sub
test
add
inc
jecxz
ds
mov
sub
cld
out
in
adc
pop
and
add
mov
fisubrs
pop
inc
adc
dec
rolb
push
add
daa
ds
xchg
iret
hlt
sub
mov
ficoml
and
shrb
das
mov
sbbb
testb
test
push
pushf
mov
jmp
pop
adc
insb
loop
in
sbb
mov
lods
fwait
loopne
jb
and
pop
imul
in
cld
add
mov
mov
xchg
mov
loopne
cli
and
mov
scas
xor
xchg
out
sbb
repz
cmp
inc
push
pop
mov
test
mov
cmp
cmc
outsb
and
add
test
and
pop
mov
xchg
ret
xchg
push
out
pusha
mov
sub
or
mov
xchg
add
xor
add
dec
or
mov
push
mov
add
and
out
int3
aam
mov
orb
stos
data16
int3
iret
mov
nop
cmpl
lods
adc
das
aad
sub
sbb
cmc
jp
sub
lret
aad
sbb
dec
and
sar
sub
mov
cli
insl
xorb
ret
popf
int
repz
scas
repz
jle
xchg
dec
sub
xchg
mov
add
mov
pop
xorb
sbb
jne
jl
xor
rcll
aad
mov
mov
add
data16
mov
xchg
cmpsb
sbb
sub
add
out
cbtw
pusha
dec
inc
mov
mov
add
movsb
pop
pusha
xorl
stos
mov
pushf
fadds
adc
mov
pop
jp
cmc
inc
movsl
movsb
mov
fiadds
das
sub
imul
sbb
add
dec
ljmp
cmp
ljmp
add
xchg
cli
in
jecxz
dec
mov
pop
cmpsb
fsubl
fnstenv
push
xor
aam
fcoml
dec
mov
testb
add
lea
in
jl
add
or
mov
pushl
dec
sar
or
dec
pop
scas
push
pop
adc
mov
push
xchg
neg
fwait
dec
cld
gs
inc
aam
adc
pop
pop
enter
add
ret
scas
repz
fcompl
xor
mov
enter
pop
or
cmpsl
les
in
into
shl
stos
mov
push
rcrl
mov
orl
nop
jl
sbb
es
shlb
inc
test
dec
test
nop
inc
fisubl
dec
mov
sbb
xchg
add
pop
mov
add
lock
mov
enter
mov
test
push
pop
incl
fs
sub
fiadds
test
cmp
adc
or
mov
test
mulb
jmp
cmp
add
mov
sahf
cld
fwait
add
pop
mov
adc
test
shrb
popa
jmp
rclb
add
pop
jp
and
cmp
push
mov
add
add
aaa
xor
pop
cmc
add
adc
cwtl
xchg
inc
or
pop
push
scas
push
mov
mov
pop
cmpsb
mov
lock
aam
cmp
add
sub
es
or
inc
popf
out
or
adc
mov
push
sbb
mull
pop
repz
test
jp
mov
mov
rol
xor
add
aad
into
jb
test
shll
add
mov
incb
stos
dec
push
mov
mov
outsl
test
dec
mov
cmc
xchg
dec
jb
test
push
lea
and
stos
fisubrl
pop
out
cmp
adc
xor
out
add
mov
int
imul
sub
pop
cld
leave
add
mov
enter
add
xor
pusha
in
mov
add
icebp
add
push
fistps
add
push
pop
xor
add
pop
mov
notb
stos
xchg
mov
cmp
push
cli
and
inc
les
add
mov
out
mov
and
push
xor
lods
sbb
lret
test
and
in
adc
in
or
dec
cmpsb
dec
cmpsl
in
lock
je
repnz
and
repnz
xchg
loope
sub
adc
cmp
cld
add
insl
sub
in
push
add
push
xchg
pop
dec
jns
mov
sbb
clc
push
dec
test
rol
mov
arpl
mov
lret
pop
movsb
sbb
repnz
dec
test
in
jge
mov
jae
add
pop
cmpl
outsb
shll
scas
mov
cmp
pop
mov
mov
fnstenv
dec
int3
jo
mov
cmp
lea
jae
popa
pop
dec
pop
xor
aaa
adc
sub
stos
scas
adc
mov
test
fcoml
cmpsb
push
test
jb
rorl
push
dec
shrl
sbb
mov
rcll
shl
sahf
mov
pop
nop
test
pop
mov
or
inc
icebp
jg
loopne
mov
out
ret
mov
pusha
sbbl
sbb
test
and
rcrl
push
clc
mov
dec
and
lods
or
pop
int
loopne
lahf
in
sar
jge
push
mov
jbe
mov
scas
scas
xor
test
and
lods
add
jecxz
add
cmp
xchg
faddl
mov
sbb
pusha
pop
mov
sahf
dec
pop
xchg
andl
pop
test
fsubrp
fisubs
xor
pop
fisubrl
fwait
push
push
test
adc
add
lds
mov
mov
cmpsb
push
fsts
movsl
add
sub
xchg
sbb
push
add
ljmp
loop
pop
out
pusha
sbb
inc
out
in
mov
mov
fiadds
call
in
cmpsl
mov
pop
jmp
lock
cs
insb
aas
das
fldenv
adc
sub
andb
aaa
add
pop
cmp
cld
jae
add
pop
sub
sbb
add
pop
fstps
xchg
xchg
out
aaa
sub
jecxz
dec
mov
dec
jmp
shlb
hlt
call
cli
inc
sub
dec
jns
sbb
push
cmc
pushf
das
cmp
push
cwtl
aaa
fwait
mov
jne
pop
stc
mov
and
mov
js
jmp
dec
lea
daa
scas
imul
sarl
or
add
adc
rcrl
ds
xchg
dec
icebp
push
call
pop
inc
jo
jno
inc
mov
push
faddp
pusha
cli
call
enter
cltd
mov
pushf
pushf
popf
in
test
mov
cmp
xor
inc
or
adc
push
add
cld
mov
mov
roll
leave
rcrl
in
jno
loope
addb
jne
or
arpl
and
add
xor
pop
jmp
repnz
test
adc
inc
add
push
xor
and
add
add
dec
es
fmuls
sbb
or
lahf
imul
xor
das
cmp
cld
shrl
jnp
cmpsl
jl
add
stos
outsb
lret
jb
dec
mov
push
add
daa
jno
or
sub
ja
push
jg
sbb
push
mov
sub
push
mov
aas
push
mov
adcl
stc
mov
cli
mov
dec
test
xchg
movsb
inc
sbb
jmp
aaa
xor
nop
push
imul
pusha
dec
mov
mov
sub
pusha
das
xlat
roll
xchg
add
jne
mov
or
mov
mov
mov
pop
push
les
je
rcrl
mov
jno
lds
ret
popf
mov
mov
pop
or
mov
inc
add
ds
sti
aad
lret
xchg
fisttpll
xchg
jns
push
adc
push
mov
jns
test
mov
and
mov
popa
push
push
dec
scas
stc
push
std
outsl
fs
scas
mov
mov
pusha
nop
or
popa
or
add
mov
leave
xor
mov
mov
sub
rcrb
daa
push
inc
popl
mov
lods
add
adc
sub
mov
mov
add
jnp
js
aad
lods
mov
shll
xchg
push
imul
mov
cwtl
xchg
ficoml
adc
jbe
sbb
mov
jmp
stos
xor
mov
add
popf
adc
insb
shlb
in
ja
test
mov
mov
vandnps
jmp
repz
roll
outsl
jg
int
and
adc
imul
fisttpl
inc
mov
sub
in
test
push
int
das
xor
and
add
cmpsb
dec
adc
adc
sbb
xor
sbbl
leave
testl
push
mov
sub
xchg
les
dec
aaa
jb
stos
fistl
mov
adc
pop
dec
mov
jp
pop
add
jo
into
arpl
and
push
xor
adc
add
enter
cmp
and
mov
adcb
lahf
mov
mov
rolb
out
jmp
icebp
stos
fildl
lret
mov
add
sbb
sar
mov
negb
add
and
pop
xchg
inc
xchg
pusha
out
lret
jp
ljmp
cmpb
push
xor
inc
int3
roll
sub
daa
lahf
mov
std
sub
jne
mov
pop
xchg
shl
pop
sbb
push
add
jecxz
inc
xchg
mov
xchg
nop
pop
add
add
and
not
lret
mov
pop
fbld
sub
es
mov
testl
hlt
sub
cmp
js
push
add
sub
pusha
out
push
test
add
cmpsb
xlat
test
daa
or
stos
in
pop
out
stos
add
pusha
mov
pop
lea
mov
pop
imul
lret
or
and
mov
hlt
test
pop
push
js
cli
rcrb
add
addr16
sub
and
mov
mov
xchg
sub
and
mov
push
leave
pop
pop
xor
and
int
imulb
and
mov
arpl
sbb
ja
test
dec
divb
and
inc
repnz
jno
add
pop
pop
adc
ds
sub
out
lret
aam
sub
popa
pushf
neg
add
push
scas
and
xchg
or
mov
add
pop
les
sahf
inc
sbb
jb
es
enter
lea
ds
jmp
add
ss
lock
or
je
andb
pop
mov
mov
fisttps
lret
fdivrl
sub
adc
aam
pop
jle
imul
shl
push
mov
js
jg
sbb
cld
xchg
or
mov
sub
outsb
lcall
add
cmp
sbb
adc
xchg
mov
movsl
dec
pop
xor
jae
jbe
mov
lret
dec
xchg
jnp
jb
jmp
mov
mov
and
fisubs
push
jmp
lcall
aaa
pusha
cmpsb
sub
loope
pop
lret
adc
es
mov
xor
push
mov
lea
movsb
test
out
dec
sub
xchg
adc
add
popl
or
cmc
lds
lret
sarl
xor
aaa
pop
jp
int
add
push
mov
in
stos
jge
mov
and
mov
mov
cmp
fs
stc
fsubrl
or
inc
xchg
or
lds
sub
rorl
xchg
push
mov
cmp
push
adc
cwtl
pop
inc
sar
divl
add
imul
fsubl
lret
repz
sub
pop
sbb
insb
mov
ljmp
add
in
pop
sbb
inc
pop
push
dec
sbb
jecxz
icebp
mov
dec
popa
mov
pop
outsb
adc
inc
mov
cmpsl
fiadds
add
jle
daa
pop
cld
inc
add
dec
sahf
and
rolb
and
jge
jno
mov
and
stos
cmc
in
enter
pop
push
and
cmp
add
popf
imulb
adc
cmpsl
rcl
or
hlt
testb
fsubl
adc
inc
pop
pop
imul
mov
or
add
push
mov
out
fwait
adc
xchg
aas
sarl
aaa
jmp
daa
mov
test
add
jmp
add
mov
andb
pop
je
lea
fstp
cmp
add
imul
pop
adc
mov
xor
sbb
or
push
dec
sbb
and
sub
pop
or
fidivs
inc
stos
in
add
repnz
adc
push
push
inc
in
faddl
add
add
in
jb
add
cmpsl
dec
pushf
dec
pop
into
add
aas
lock
dec
lret
and
sub
mov
sbb
cwtl
mulb
mov
ds
adc
add
leave
jns
adc
push
dec
fcompl
push
hlt
psubusw
dec
adc
movsl
addl
ljmp
adc
mov
add
shlb
or
mov
add
mov
push
xor
mov
das
cltd
and
sbb
xchg
mov
nop
cmp
push
inc
loope
inc
rcrb
cmp
sbb
mov
lea
add
cld
jne
test
addl
adc
fcom
xor
mov
mov
mov
jb
mov
in
mov
data16
mov
mov
loop
xchg
daa
popa
ret
push
sub
xor
outsb
and
sbb
sbb
mov
lds
dec
mov
mov
sbbb
jl
mov
sub
test
sub
adc
jmp
xorb
lret
cmc
mov
ret
pop
xchg
sub
pusha
ret
out
sti
pop
jne
cmc
mov
sbbb
fs
xchg
add
jae
in
es
push
jo
inc
test
ficomps
and
add
in
pushf
fsqrt
pop
cmp
xchg
sbb
or
add
addb
les
scas
mov
push
or
fcmovnb
mov
dec
scas
outsb
enter
arpl
xchg
xor
andl
adcb
arpl
out
jo
add
fisubl
les
push
cmp
cmc
ret
and
mov
mov
idiv
repz
inc
stos
mov
pop
or
add
inc
jbe
push
clc
icebp
outsl
or
push
xor
push
xor
rclb
add
rcrb
lods
mov
push
imulb
in
and
push
dec
lcall
cmp
lock
in
lcall
cmp
push
jecxz
pop
add
test
mov
loope
rol
push
dec
sbb
xor
daa
add
or
add
test
mov
dec
addr16
lods
dec
pop
xlat
jmp
inc
or
dec
jne
cmp
fsubr
es
pusha
inc
out
lock
or
pop
lcall
fcomi
fidivl
adc
sbb
stos
cmp
cld
insl
or
test
dec
les
jp
sbb
aas
jmp
ljmp
jecxz
bound
jo
mov
cltd
add
andl
divb
loop
jmp
mov
push
sub
loope
jmp
movsb
push
outsb
inc
push
popf
pop
xchg
adc
lock
pop
out
subb
daa
xor
inc
sbb
pop
mov
adc
or
mov
jbe
xchg
pop
faddl
rcll
add
push
pop
xlat
enter
add
mov
jle
push
rcrb
ljmp
pop
cltd
sbb
sarb
add
addl
mov
cmp
sub
out
sbb
xchg
xor
add
pop
add
test
aaa
sbb
repnz
sub
lods
mov
add
sub
sbb
lret
pop
dec
xor
addb
inc
inc
mov
push
out
xchg
cmpsl
mov
cmp
push
cmc
inc
jg
sbb
std
ret
sbb
and
inc
in
outsb
push
test
jl
or
das
out
shrl
add
add
aad
fwait
cmpb
push
push
fsubrs
out
dec
outsl
cmpsl
mov
lcall
or
mov
sub
aad
ss
rolb
adc
in
inc
int
xchg
loopne
stos
push
les
jg
cmc
pushf
add
xor
shl
add
movsb
mov
sarb
jbe
cld
andl
add
dec
aas
ret
add
push
jns
lcall
xchg
cmpb
xor
ds
jge
mov
xchg
and
sbb
pusha
mov
xchg
inc
push
dec
pop
and
mov
sarb
popf
xor
sub
inc
es
fidivrl
pop
pushl
ficomps
mov
and
bound
mov
cli
cmp
mov
xchg
mov
pop
add
ljmp
pop
inc
int
and
jb
pusha
inc
cld
and
or
mov
cmp
frstpm(287
sub
adc
mov
adc
js
xchg
sbb
insb
jno
push
adcb
out
inc
lods
movb
aam
lret
clc
mov
inc
and
push
sbb
jge
stc
or
jecxz
adc
testb
adc
call
call
mov
jnp
mov
push
fnstcw
or
movsl
pop
andl
aas
dec
jo
and
mov
ret
popa
jmp
mov
sti
jb
or
xorb
repz
loope
std
mov
xchg
xorb
and
add
leave
add
out
test
add
aam
sar
es
add
mov
jns
orb
imul
inc
add
lret
xor
sbb
loop
adc
les
mov
rclb
inc
enter
jne
adc
lods
pop
or
lods
mov
sub
sbb
cmpsb
cltd
mov
adc
mov
push
insl
cmpsl
add
xor
pop
test
fninit
push
cli
nop
addl
pop
xor
add
sub
xor
stc
scas
mov
lea
push
add
mov
cmp
mov
fwait
add
aad
sbb
test
imul
and
lds
insb
jne
xchg
aas
dec
jbe
mov
sbb
jg
fidivrs
add
outsb
xchg
cltd
jno
push
sbb
andb
fstl
sbb
pop
bound
sbb
ret
stos
pop
pusha
push
xchg
sub
xchg
cmc
in
mov
or
pop
sarb
mov
push
ret
icebp
push
add
jmp
imul
push
adc
or
add
aaa
mov
test
or
les
and
inc
dec
out
add
sub
dec
and
loop
push
jle
inc
fisubrs
pop
popw
stos
or
icebp
mov
imul
rcll
insl
push
pop
fbld
push
jno
xor
xchg
movntq
outsl
mov
adc
and
insl
hlt
add
loope
rclb
data16
and
outsl
pop
xorl
pop
sub
in
cwtl
push
xchg
repnz
inc
add
mov
popf
nop
adc
inc
cwtl
imul
push
add
insb
iret
loop
jae
cmp
add
inc
jle
cs
adc
jmpw
bnd
inc
scas
lea
add
mov
call
xchg
scas
sbb
jb
leave
jo
mov
pop
cmp
sarl
jmp
mov
cmpsl
in
fs
es
xchg
sti
out
imul
mov
jle
in
pusha
adcl
cmp
rclb
imul
pop
sub
aas
pushf
xor
addr16
es
int3
lahf
cmp
addb
mov
jb
dec
jmp
sbb
in
add
add
mov
add
nop
das
popa
je
jle
push
push
mov
xchg
dec
jno
pop
mov
or
movsl
jle
push
ds
sub
mov
rclb
add
xchg
mov
inc
jbe
ficompl
fistl
mov
imul
sti
adc
xor
or
xor
aad
add
xor
cmp
push
jbe
xchg
add
xchg
mov
xor
add
stos
outsl
sbb
jne
push
and
es
adc
add
lock
leave
and
jecxz
mov
loopne
loop
and
mov
lock
add
jbe
repnz
xor
add
or
adc
repnz
jns
xor
lahf
pop
es
push
push
pop
and
fwait
dec
cmc
test
and
ja
cmpb
push
mov
xor
inc
sub
or
jecxz
or
jg
cltd
test
in
aas
outsl
sub
xor
pushl
jp
dec
cs
lahf
arpl
inc
scas
in
mov
xor
push
dec
mov
sbb
jmp
xlat
sbb
or
stc
in
cs
sub
add
jns
or
xchg
xchg
loopne
mov
das
inc
sbb
pop
popa
stos
cmp
cmp
out
cmpsl
mov
fisttps
rorl
out
rclb
and
add
adc
inc
cltd
and
imul
orl
pop
insl
cld
mov
cmp
dec
adc
mov
enter
pusha
push
xchg
nop
cmp
mov
out
bound
lcall
in
lock
xchg
loop
xchg
popa
push
adc
mov
add
dec
shrb
stos
fldl
loope
cmp
cs
lahf
aaa
cmp
imul
add
daa
popa
and
dec
cmpb
pop
add
mov
daa
cli
or
scas
lea
jno
ss
shll
cmpsl
cmpl
mov
inc
fcomps
cmp
in
mov
cs
lock
add
hlt
pop
fmuls
cmp
enter
ljmp
icebp
pop
in
fisttpl
ficompl
add
leave
lret
push
mov
mov
and
mov
pop
out
adc
mov
add
jl
test
addb
out
add
xor
pop
push
mov
push
add
xchg
sbb
push
add
adc
inc
sbb
add
lods
xor
fcmovnb
dec
or
in
sbb
mov
call
push
cli
mov
flds
pop
incl
rcrb
add
and
shrl
jmp
or
pop
mov
sbb
add
jmp
mov
repz
push
jae
mov
and
imul
jns
dec
and
cmp
addb
mov
push
jno
js
push
cmp
imul
sbb
add
mov
ret
gs
push
or
sub
cmpsb
mov
mov
add
ljmp
adc
stc
or
dec
cmp
add
fldenv
mov
lahf
mov
mov
sub
mov
adc
sbb
xor
cmc
aaa
mov
cld
mov
repnz
add
dec
rol
fisubrs
bound
mov
or
in
add
add
sub
mov
pop
sbb
xchg
push
lock
and
xchg
jnp
cmpsl
inc
jnp
pop
rclb
mov
pop
movsb
or
sub
int
les
add
int3
push
fistl
adc
aas
mov
icebp
aas
andb
in
rcrl
mov
xchg
iret
dec
sbb
imulb
xor
jbe
ja
push
xor
xor
mov
dec
lock
std
lahf
inc
add
out
cmp
in
and
lahf
into
andb
daa
das
jmp
mov
dec
push
add
push
add
push
cwtl
test
movsb
stc
cltd
sub
inc
jg
pop
mov
xchg
jge
mov
pop
ds
add
or
iret
shlb
xor
push
aam
jo
cmpsb
in
add
push
xor
sub
icebp
pop
sub
jo
dec
add
in
cmpsb
hlt
loop
xchg
sub
and
subb
sub
adc
test
sbbl
add
into
sbb
dec
mov
mov
ret
mov
and
orb
pushl
push
and
xchg
aam
xor
in
test
popf
jecxz
jmp
ret
mov
add
les
test
add
pop
xor
or
test
jecxz
sub
jo
imul
mov
or
mov
push
sub
popa
in
jnp
cld
jo
mov
subb
and
and
xchg
inc
adc
push
addr16
pop
jns
pop
stc
std
lods
pop
mov
pop
add
stos
adcb
sti
cltd
int
and
ror
out
inc
mov
push
pop
mov
mov
rcrl
cmp
rorb
or
push
inc
jge
sub
mov
sbb
out
sbb
andl
inc
push
add
fidivrl
gs
stc
push
xchg
das
pop
nop
and
dec
sbb
ret
out
rcl
or
xor
xor
mov
fcoms
pop
inc
sbb
mov
popa
stos
jp
add
lds
fwait
sub
mov
jge
add
push
idiv
jl
fcoml
out
loope
scas
cs
and
ret
sub
lods
cli
dec
sub
xchg
pop
add
mov
shl
mov
stos
pop
das
pop
inc
in
adc
mov
dec
lahf
btc
gs
cs
adc
add
pop
mov
jle
pusha
mov
push
aad
fidivrs
xchg
inc
jmp
sub
jne
and
mov
stos
cmpsl
push
mov
mov
and
cld
mov
cld
ja
ret
mov
sbb
cmp
leave
cli
xchg
or
test
sub
push
mov
lcall
xor
aaa
ja
decl
cmpsb
aad
mov
sub
jo
mov
xor
cmp
cmpsl
stos
ret
aad
mov
sbb
mov
aaa
wrmsr
roll
pusha
out
in
test
dec
loop
je
hlt
inc
sub
fildll
mov
mov
mov
sub
shll
test
ret
xor
test
addb
cmc
insl
cli
imul
push
popf
mov
decb
arpl
pop
das
pushf
pop
pop
add
cmp
jmp
push
pusha
inc
imul
clc
jno
xor
pop
out
mov
mov
test
dec
cmp
add
shr
hlt
or
fs
sti
ja
jb
xorb
xor
rcll
cmpsl
in
out
adc
add
mov
inc
sub
scas
xorl
outsl
sarb
dec
add
push
mov
dec
test
mov
mov
adc
adc
mov
inc
lods
pop
rolb
add
mov
add
cmp
mov
xchg
push
push
fsubrs
push
das
dec
pop
xchg
mov
xchg
mov
sbb
add
pop
mov
or
sbb
mov
in
bound
addr16
and
pusha
add
aad
rcl
popa
incb
imul
push
test
inc
loopne
xor
add
mov
jl
adc
insl
sbb
out
pop
or
inc
pop
cltd
add
stos
negl
fwait
lret
loope
jp
xchg
and
out
test
and
dec
es
or
pop
shlb
popf
ror
add
stc
xchg
pop
cwtl
sbb
mov
ret
loopne
test
test
mov
cwtl
mov
movsb
pop
lahf
in
push
add
das
and
lea
divb
cmc
xchg
ds
or
sbb
sar
cmpsl
lret
xchg
xchg
dec
outsl
leave
fmull
mov
repz
in
jg
add
mov
clc
sahf
cmp
sub
and
xchg
test
movsb
lock
andl
les
iret
dec
dec
loope
fildll
inc
fisubs
adc
adc
add
jle
mov
pusha
aam
add
popa
icebp
jecxz
sub
test
mov
pop
push
add
adc
mov
leave
test
push
xorb
or
add
ficoms
int3
pop
sbb
xor
jmp
sbb
jno
sti
in
push
sbb
pop
mov
xchg
ljmp
int
add
sbb
pop
es
pusha
aas
lods
cmc
hlt
add
cmp
mov
movsb
jnp
sub
add
bound
inc
mov
ss
jp
push
jecxz
in
inc
sub
test
cld
pop
cmp
adc
push
stos
xchg
push
loope
jnp
push
stos
in
inc
mov
data16
fdivrl
add
leave
inc
cmp
dec
cmpsl
in
das
mov
push
sub
inc
pop
ret
aaa
out
add
xor
xchg
repnz
or
mov
sub
rcll
lea
jns
and
popf
or
mov
imul
jno
pop
xor
sub
into
mov
sti
or
aas
pop
sub
inc
aad
mov
dec
mov
xchg
scas
sub
mov
sbb
les
pop
loope
cmp
xchg
pop
les
mov
loopne
push
fistps
or
ss
lods
clc
add
push
or
sub
clc
lods
das
cmc
sbb
ret
adc
inc
in
imul
dec
adc
sbb
mov
movsl
frstor
mov
push
jmp
cmpb
jne
cld
adc
mov
xor
dec
adc
test
jle
push
je
sbb
pop
adc
or
inc
stos
jnp
add
add
cwtl
sub
test
mov
add
insl
clc
mov
or
stc
jmp
loop
fldl
arpl
stos
xor
loop
outsb
jbe
loop
andl
or
shl
loope
sub
adcb
jae
add
nop
xor
or
dec
or
jns
in
mov
popf
add
jecxz
subl
push
pop
pop
pop
scas
xor
adc
add
je
mov
dec
pop
inc
movsb
lcall
or
incb
adc
pop
mov
push
and
lcall
xchg
jge
mov
add
jae
movsl
out
pop
xadd
push
cmovnp
xlat
adc
fistl
inc
push
leave
popa
ds
push
fcoms
jnp
add
xchg
sub
inc
loope
push
testb
jnp
movsb
xchg
std
sbb
xlat
push
jne
mov
mov
mov
add
xlat
inc
adcb
rclb
cmc
cs
mov
pop
add
cmp
fsts
das
call
mov
add
xor
xchg
sub
cmp
cwtl
push
add
or
xchg
push
inc
inc
nop
sub
pop
push
aam
inc
stos
enter
in
nop
fs
out
sbb
ja
adcb
dec
jmp
sub
xchg
jge
mov
add
mov
lds
pop
or
push
mov
cltd
push
mov
or
adc
out
sti
das
xor
and
push
int
jne
les
xchg
aam
sub
movsl
jns
push
sahf
add
mov
add
jecxz
push
daa
jbe
pop
aam
sub
jb
adc
loope
jg
ljmp
dec
out
adc
mov
ja
add
pop
das
push
mov
push
jg
and
mov
dec
xlat
adc
aad
sub
aad
hlt
jae
add
mov
xor
cmpsl
inc
adc
std
or
push
sbb
xchg
divb
jg
std
adcb
add
leave
loopne
cmp
add
pushf
lock
jg
testl
xchg
mov
cmp
inc
sub
sub
cmp
rorb
adc
std
xlat
xor
mov
ret
inc
sub
fsub
mov
popa
xchg
mov
and
inc
or
cltd
test
aaa
and
mov
stos
and
mov
or
iret
ret
cld
lret
mov
dec
inc
stc
pop
test
mov
add
popa
xchg
mov
push
arpl
add
mov
pop
movsb
dec
popa
aad
mov
pop
add
mov
or
int3
sub
std
cmp
xchg
cld
out
fldt
dec
or
fistps
mov
pop
dec
jb
or
aaa
jg
mov
dec
lcall
std
dec
xchg
and
mov
cmpsl
outsl
push
scas
push
loope
or
lods
mov
pop
sub
mov
mov
or
dec
mov
mov
orb
mov
sbb
leave
cmp
sub
xlat
add
xchg
and
mov
xchg
fidivrs
dec
fcmovne
dec
testb
dec
aad
xor
adc
sbb
into
add
fpatan
mov
jnp
mov
add
sbb
stos
fadds
dec
clc
int
jp
inc
or
pop
adc
cltd
lock
mov
jno
lock
sbb
lds
daa
lds
push
mov
pusha
sbbl
add
push
dec
jo
inc
pop
jge
adc
sub
add
pop
inc
xchg
and
mov
add
or
jne
clc
and
adc
outsl
gs
pop
out
push
cwtl
psubusb
call
loope
mov
js
ret
imul
jl
mov
rclb
or
jo
push
inc
and
and
xchg
rorl
sub
inc
fwait
inc
add
addr16
mov
jp
sti
dec
pop
fidivl
adc
xchg
sub
push
int3
or
les
dec
push
add
inc
add
sub
adcl
pusha
xchg
pop
inc
xchg
jp
inc
test
iret
dec
mov
sbb
and
sub
sub
sbb
loopne
mov
scas
cld
pop
add
div
xchg
adcb
sbb
inc
push
mov
cmp
cs
test
mov
xor
leave
push
fldcw
push
stos
imulb
jg
mov
daa
add
lret
pop
outsb
cld
hlt
mov
lahf
in
adc
mov
mov
and
xchg
sub
fstl
jp
cwtl
jns
add
pop
je
and
fcmovb
cli
sbb
push
xor
fsubl
fmul
or
out
xchg
pop
add
orb
dec
test
sti
jnp
add
jne
or
or
addr16
adc
mov
negb
addr16
xchg
sti
rcr
sub
cmpsl
jp
mov
ds
mov
mov
sub
leave
fstl
test
call
imul
notl
or
movsl
inc
push
mov
cmpsl
testl
cmp
ficoml
sub
jnp
add
xlat
and
imul
jbe
divb
jmp
dec
cmc
mov
or
lea
out
jl
push
mov
daa
adc
push
adc
pop
mov
jnp
outsl
movb
adc
jmp
test
ja
std
pop
iret
add
xor
nop
ja
iret
and
mov
nop
mov
js
jae
pop
loope
mov
mov
adc
or
popa
jecxz
add
xor
cs
cli
push
insl
popa
xor
pop
adc
popf
int
pusha
sbb
aad
out
xor
jb
add
add
mov
adc
xchg
jle
shl
loopne
and
inc
enter
mov
loopne
popa
mov
loopne
mov
add
mov
sti
dec
add
lret
inc
mov
movsb
ficompl
js
popf
xchg
sbb
sub
pop
aad
test
fiadds
hlt
add
mov
bound
aad
icebp
pushf
popa
aam
jne
test
jb
rclb
movsl
jne
jecxz
cmp
mov
cli
arpl
out
jo
das
push
push
fs
imul
add
adc
push
fstps
push
popl
loopne
jnp
sbb
fwait
nop
faddl
cmp
pop
inc
pop
mov
and
adc
pop
push
test
mov
rcrl
call
popf
test
sbb
jp
inc
loop
and
cmp
je
dec
fisttpl
jp
lcall
jo
xchg
scas
js
xor
pop
push
daa
sbb
inc
sbb
dec
pop
dec
cmpsl
sub
mov
dec
test
popf
loopne
shrb
sbb
cmp
add
pop
scas
push
xchg
mov
sub
aad
cmp
add
adc
sub
shll
sti
cltd
pop
sbb
out
xor
rolb
sub
push
adc
mov
sbb
adc
in
je
add
mov
push
xor
xlat
mov
inc
add
sbb
arpl
jne
mov
jne
test
mov
mov
lea
jle
inc
inc
adc
mov
sbbb
and
mov
adc
adc
cwtl
out
sub
push
lods
insl
mov
aad
push
lahf
jbe
out
add
imul
ret
xorb
mov
add
xchg
es
xchg
int
add
cmpsb
das
loop
sbb
mov
add
fbld
dec
and
sbb
test
jmp
lea
cmc
int
imul
movl
cmp
cmpsl
push
mov
pop
or
mov
add
popa
xchg
mov
xlat
xor
jno
inc
add
sbb
icebp
ljmp
jb
sub
and
test
jg
shll
push
incb
lds
xor
and
movsl
xor
dec
in
mov
sub
push
movsb
out
xchg
jnp
inc
jmp
mov
and
ss
aaa
sub
ror
push
push
pop
push
enter
idiv
or
sub
sub
mov
mov
sbb
ljmp
adc
mov
iret
and
pop
push
add
cmc
mov
push
adc
call
cmp
sarb
sbb
dec
jno
mov
adc
rorb
hlt
mov
or
bound
jb
lret
pop
push
pop
pop
pop
pop
xlat
mov
mov
pusha
cmp
fwait
jb
sbb
dec
xchg
repnz
xchg
jmp
dec
jp
imul
cmpsl
jns
pop
xchg
ja
or
loopne
mov
xchg
adc
xor
shll
psllq
adc
mov
or
je
mov
fsubs
pop
xchg
in
xor
xchg
and
je
loop
mov
push
arpl
add
cli
inc
push
push
pop
jmp
push
adc
shll
pop
rcl
call
loopne
loop
and
cli
sbb
fldt
push
loopne
pop
and
pop
data16
cmpsb
int3
and
sbb
mov
out
call
mov
cmp
xchg
jae
in
movsl
cltd
ds
add
mov
cmpsl
mov
or
nop
out
jmp
jecxz
push
push
gs
mov
fucomi
sbbb
add
es
mov
std
data16
add
push
inc
test
daa
rcll
add
cs
sarl
int
cli
negl
xor
out
fldl
cs
jp,pn
dec
cmp
add
test
aas
add
cmp
sbb
add
inc
lcall
jo
jle
inc
add
in
ret
sub
loop
fbstp
mov
adc
xchg
popa
pop
mov
roll
jle
shrb
and
or
pop
pop
jge
ffree
cld
push
outsb
dec
dec
call
xchg
movl
shll
inc
mov
and
jmp
mov
sbb
push
cmpsl
popf
or
xchg
push
inc
dec
push
test
mov
add
es
int
cmpsl
sbb
das
pop
jecxz
ja
out
xchg
cwtl
loopne
mov
es
xchg
mov
add
test
sahf
jbe
and
insl
pop
shl
add
cmp
enter
sub
daa
push
cld
or
mov
sub
js
loope
pop
scas
mov
movsl
popf
mov
movsb
pop
add
pop
cmpsb
and
xchg
xchg
idivl
bound
rclb
xchg
repz
inc
insl
cld
fs
in
push
jae
push
enter
in
push
cld
repnz
clc
int
call
sar
ret
icebp
aam
mov
add
mov
add
mov
jecxz
sbb
fwait
ss
jne
cwtl
mov
jg
std
cmp
adc
add
lret
fistl
shll
sbb
mov
out
das
mov
mov
pop
xchg
je
aam
inc
sarb
mov
stos
push
fucomip
xor
push
adc
mov
mov
hlt
aas
xor
pushf
inc
push
cmp
psllw
pushf
pop
imul
mov
cmpb
call
xchg
bound
adc
mov
add
pop
pusha
xor
popa
mov
leave
int
sub
dec
pop
push
das
movsb
pop
js
cltd
and
nop
cmp
jmp
cmp
popa
loopne
std
xor
popa
addr16
popl
in
rcll
pop
mov
or
jo
ja
sbb
es
and
mov
cmove
aam
shrb
jns
or
jg
aam
and
add
mov
mov
xchg
stos
jb
xlat
xor
mov
je
jecxz
pop
mov
push
and
test
mov
xchg
add
inc
push
adc
cld
neg
pop
into
push
push
adc
stos
in
int3
in
xor
popf
nop
dec
and
nop
mov
insl
ficompl
in
roll
cmc
push
xor
mov
xor
sub
mov
cmp
sub
mov
test
mov
xchg
push
lahf
push
mov
imul
mov
sbb
popa
insl
outsb
cmp
imul
fisubl
xchg
sbb
pusha
cli
and
xchg
pop
mov
xchg
cmpsb
cmp
mov
jl
call
daa
movsl
mov
sub
test
lods
pusha
outsb
mov
daa
scas
cwtl
inc
lea
sub
iret
mov
sub
lock
jl
adc
or
add
fwait
rol
add
add
mul
mov
xor
and
cmp
mov
adc
test
jb
mov
jne
xor
fs
xchg
cmp
pop
cmc
dec
cli
or
lea
jl
jmp
addr16
mov
sub
dec
out
lret
mov
cmp
push
xchg
jns
dec
fisttpl
pop
ljmp
mov
das
mov
gs
add
hlt
push
push
nop
or
mov
xchg
mov
movb
cmpsb
pop
rolb
insl
mov
mov
outsl
cmp
mov
or
adc
scas
sub
popa
mov
dec
push
dec
push
or
mov
imul
leave
xchg
orb
pop
leave
lods
and
rorb
in
add
stos
jmp
call
aam
in
pop
pop
popa
push
jns
add
cltd
hlt
outsl
add
xchg
xor
adc
addb
or
ficompl
mov
jge
mov
adcl
das
ret
loope
dec
movsl
add
mov
mov
int3
xchg
jmp
adc
sbb
mov
ret
adc
mov
cli
outsb
push
adc
cld
jl
xor
sub
jo
inc
add
inc
dec
in
mov
add
scas
xchg
call
adc
and
xchg
inc
add
adc
dec
jge
sub
gs
in
fwait
shrb
dec
sub
sub
add
out
pop
out
rorb
inc
sbb
shll
rclb
movsb
mov
popf
jle
xchg
xchg
lods
popf
rcll
pop
insb
push
dec
clc
imul
imul
pop
lahf
ret
ror
mov
mov
xor
ss
bound
push
xor
mov
lods
scas
int3
cmp
insl
jp
jmp
mov
stos
lret
xchg
pop
lcall
test
and
xchg
add
pop
mov
inc
dec
je
cmpsl
sti
xor
cmp
andl
cmpsb
shll
loopne
xchg
es
cli
stc
leave
daa
imul
sbb
call
mov
aam
call
rcrl
adc
jbe
stos
test
je
cli
lcall
or
es
inc
sbb
addb
pop
or
push
pop
fiadds
jno
shlb
mov
sub
mov
orb
or
in
pop
push
inc
pusha
pop
add
pop
cmp
xchg
xor
dec
fists
push
loop
adcb
mov
pop
push
mov
push
push
movsl
jo
add
or
shrl
into
fnstenv
lods
repz
push
sbb
test
stc
dec
sbb
and
jne
cmc
adc
xchg
cli
push
int
ljmp
jno
mov
dec
jl
fwait
sbb
sbb
inc
sbb
out
js
ds
push
push
pop
in
add
pop
xchg
xor
in
addl
idivb
mov
add
js
inc
push
add
adc
test
jge
add
data16
and
fadd
or
imul
inc
pop
pop
movaps
pop
lock
cmc
xor
pop
je
aam
mov
sbb
rol
inc
mov
xor
inc
arpl
clc
mov
fidivl
bound
adc
adc
mov
add
pop
xor
xchg
ret
shl
jl
mov
dec
ja
pop
jae
addr16
clc
xor
mov
js
xor
pop
mov
addl
bound
pop
sahf
movsl
lods
and
call
nop
bound
jecxz
mov
shll
jne
xchg
arpl
sub
mov
mov
dec
jmp
movsl
nop
jo
mov
fwait
adc
subl
dec
faddl
add
adc
aam
je
mov
in
out
pop
inc
push
add
adc
mov
jp
popf
add
fstpt
ljmp
pop
adc
scas
xchg
jae
sbb
movsb
popf
sbb
add
lods
ljmp
jbe
cld
mov
incb
cltd
jecxz
imul
push
mov
cwtl
dec
dec
dec
enter
mov
outsl
popf
add
pushl
sbb
push
push
push
ficomps
pop
mov
jno
dec
cmp
popf
dec
sbb
jns
aas
sub
push
cli
dec
push
cmp
jg
add
push
push
test
xchg
cmpsl
sbb
pop
sub
mov
fstl
add
sub
loopne
rcrb
sbb
aaa
and
xlat
sbb
add
sbb
pushf
add
mov
div
out
enter
inc
xchg
ret
int
mov
add
nop
test
adc
fcoms
cli
pusha
inc
sub
lret
add
push
mov
or
adc
adc
sub
rolb
inc
test
add
bound
sub
jmp
movsl
xor
dec
dec
shrl
and
mov
insl
mov
stc
jne
dec
push
mov
pop
in
clc
pop
sub
pop
mov
jns
adc
xchg
or
and
sbb
mov
pop
jle
mov
and
icebp
lret
ret
into
dec
and
cmpsl
xchg
jne
std
inc
sti
popl
scas
insb
push
mov
push
ljmp
adc
jo
fidivs
pop
lods
cmc
imul
mov
jne
push
insb
daa
and
popa
xchg
popf
test
cmp
test
icebp
mov
pop
xchg
mov
stos
push
pop
arpl
scas
and
xor
dec
jge
pop
xor
add
cmp
adc
mov
push
xchg
call
mov
pop
shrl
shrl
add
pop
test
pop
cwtl
lods
rorl
mov
lret
dec
stc
fstl
add
push
inc
dec
cmp
or
sbb
cmp
adc
scas
and
or
movsl
sbb
cmp
add
push
pop
or
sarl
mov
push
pop
cmp
xor
pop
mov
and
mov
dec
mov
mov
adc
xor
sbb
xchg
xor
jbe
pusha
mov
mov
xor
xchg
cld
sub
fistpll
pop
add
aad
add
rcrb
xchg
cmp
sub
lds
cs
insb
mov
add
outsb
inc
add
xchg
jns
cmpsl
dec
add
in
or
xchg
adc
add
adc
dec
jbe
out
add
cmp
mov
and
or
in
testb
in
in
xchg
add
pushf
fs
pop
lods
sbb
filds
jmp
je
faddl
fdivrs
das
movsl
pop
es
popf
xchg
adc
testb
adc
jns
pop
add
sbb
or
test
dec
push
gs
or
add
dec
shr
cmp
xchg
or
push
fnsave
push
mov
lcall
insb
fcom
add
ss
fcompl
lahf
xor
xchg
enter
lcall
out
loopne
and
mov
out
mov
ja
and
stos
mov
mov
mov
mov
data16
add
mov
pop
pop
fcoms
inc
daa
pop
nop
aaa
adc
lahf
scas
repz
sbb
inc
loopne
fisttpll
adc
xor
and
adcl
sbb
add
mov
inc
xor
jl
jnp
dec
mov
or
mov
test
stc
stos
lock
iret
fwait
or
sbb
xchg
notb
daa
leave
cli
or
cli
adc
icebp
jae
mov
add
lds
xchg
xchg
sub
jecxz
dec
add
fstpl
mov
sbb
and
add
dec
push
mov
sti
out
aas
clc
lock
hlt
adc
mov
pop
pusha
call
mov
jnp
imul
scas
popa
pop
stos
add
mov
mov
cmc
push
jmp
adc
aas
lcall
insl
adc
cmpsl
push
cmp
rclb
push
push
imull
sub
ds
adc
js
xor
test
sub
sub
xchg
call
int3
or
pop
or
mov
daa
add
jle
loope
lock
xchg
fisubrs
add
xchg
sbb
pop
ja
arpl
mov
shl
sub
xor
enter
stc
mov
ja
mov
or
mov
add
push
sub
aaa
cmc
mov
mov
mov
sbb
es
push
mov
jge
mov
adc
push
sbb
nop
je
es
sbb
cmp
adc
gs
cmp
pop
push
lret
pusha
std
cmp
xor
mov
pushf
arpl
mov
loop
add
mov
sub
or
sti
cmp
cmpsb
or
mov
pop
repnz
cli
lret
xchg
push
add
popf
loopne
test
sub
push
add
adc
mov
dec
and
scas
xor
stos
jae
mov
aas
movsb
push
pusha
iret
push
sbb
dec
mov
mov
xor
add
sub
call
or
add
mov
cmp
jnp
push
cmp
sbb
sbb
mov
add
or
xchg
adc
mov
lcall
sub
or
mov
cli
js
and
adc
mov
add
aaa
incb
push
enter
cmp
xchg
or
jg
xor
pusha
pop
in
movsl
insl
adc
pop
cmc
lods
jmp
push
les
or
in
sti
and
pop
pusha
and
jae
out
and
roll
jnp
push
xchg
std
push
mov
scas
and
xchg
test
jp
add
jns
mov
pop
ss
je
jns
or
shlb
xchg
fdivp
sti
add
sbb
add
jecxz
cmp
lods
add
or
xchg
mov
pop
push
xor
dec
mov
xor
adc
daa
sub
dec
dec
push
push
or
jns
inc
arpl
popf
mov
xchg
cs
enter
dec
and
das
fisttpl
popa
xchg
cltd
and
mov
or
ljmp
dec
pop
repz
out
xchg
js
and
pop
mov
repz
subl
and
push
mov
xor
das
cmp
sub
sub
das
push
mov
inc
sbb
lods
adc
add
pop
daa
bound
mov
push
mov
pop
jecxz
cmp
int
bound
mov
jmp
in
or
push
imul
mov
and
jo
jo
adc
sub
adc
xchg
sub
fmuls
or
repz
mov
in
push
xchg
shl
mov
ret
addr16
adc
dec
pop
mov
push
cmp
sbb
inc
sbb
adc
insl
sarl
add
inc
cmp
dec
push
ret
xor
adc
adc
add
or
shll
popf
outsl
sbb
add
fs
daa
sub
jne
lea
mov
mov
test
pop
xor
nop
sahf
adc
and
jg
aam
push
cs
imul
cmpb
inc
scas
rorl
aad
xchg
mov
filds
jmp
mov
or
push
loop
pop
inc
enter
nop
or
icebp
cli
or
daa
push
dec
sbb
pop
pushf
adc
mov
cmpsl
repnz
push
sbb
or
sub
mov
push
outsl
rol
hlt
loope
add
jbe
inc
adc
mov
jg
mul
mov
cld
cwtl
aam
mov
cli
stc
iret
aaa
or
mov
test
nop
fisubs
icebp
aaa
pop
xchg
arpl
push
testb
in
add
into
and
js
inc
dec
adc
and
addl
or
insb
js
cld
lods
pusha
mov
js
stos
push
cmp
fidivrl
or
mov
add
xchg
push
adc
jnp
cltd
cwtl
ret
mov
popa
addb
lock
insl
push
lea
dec
xchg
mov
xor
mov
mov
faddp
add
or
pushw
ja
and
cwtl
add
or
pop
add
cltd
mov
sub
add
stos
add
add
add
dec
popa
int
loop
pop
aas
push
imul
ret
imul
mov
insl
fists
dec
cmp
sti
or
pop
rolb
mov
out
call
sub
fcoms
mov
xchg
pop
aas
cmc
int3
roll
adc
push
pop
adcl
rol
int
sar
add
enter
sbb
xor
sub
lods
add
jmp
mov
pop
scas
insb
cmp
cli
pusha
sbb
leave
add
push
aaa
pop
add
xchg
mov
push
xor
or
mov
aaa
insb
popf
shll
inc
add
das
push
daa
xor
fistl
lods
shrl
scas
jb
xor
shr
mov
js
xchg
icebp
or
push
loope
iret
fstps
inc
sbb
xchg
sbb
add
jge
adc
loope
add
xor
inc
mov
outsb
cmp
inc
out
mov
pusha
das
loope
fwait
mov
sbb
out
cmpb
icebp
add
ret
rcl
stc
daa
mov
jbe
push
inc
add
leave
mov
in
stos
jle
addr16
or
lcall
sbb
and
popa
popf
xchg
mov
cmp
or
push
dec
mov
sub
xchg
ja
cmp
mov
lcall
xchg
cmp
add
jb
dec
cmp
andl
pusha
nop
sbb
add
adc
xchg
xchg
lret
xor
cmp
pop
pop
stos
or
inc
push
test
push
add
mov
mov
ret
and
fcoms
xchg
or
call
dec
jo
icebp
xor
dec
pop
pusha
inc
dec
jg
rclb
inc
add
xor
out
outsb
shlb
xchg
add
jmp
add
mov
jle
daa
dec
loop
xorb
loope
and
sbb
dec
pop
or
movsl
pop
or
icebp
or
push
jecxz
jae
add
je
mov
dec
cli
add
ja
xlat
xor
mov
insb
daa
mov
and
mov
xor
or
push
jle
pop
add
ret
int3
out
ljmp
mov
or
je,pt
push
or
iret
lock
sbb
xchg
ret
dec
xchg
or
mov
push
push
out
and
loope
mov
xchg
add
ds
dec
insb
cmc
add
aam
cmc
dec
nop
mov
orb
out
fsubs
and
and
lods
sbb
add
or
sbb
mov
mov
push
cli
inc
into
add
sub
aas
dec
lahf
mov
pop
sbb
ror
inc
sbb
mov
movsb
sbb
sbb
cmp
aaa
pushf
and
or
add
rcrl
pop
push
hlt
or
icebp
test
sub
lods
jae
inc
mov
mov
add
movsl
mov
cli
sbb
aaa
cmp
adc
push
add
fsub
add
mov
shll
add
mov
sub
xchg
xlat
std
inc
lock
adc
sbb
in
out
add
icebp
add
shrl
xchg
push
ss
or
out
or
pop
jne
dec
out
mov
aad
adc
sub
dec
push
xor
lret
popf
dec
std
and
add
pop
or
das
jmp
push
add
je
mov
dec
xor
jmp
jl
int3
and
xchg
add
add
sub
repnz
aam
rolb
clc
cmp
xor
pop
jmp
sbb
add
aam
cmpsl
xchg
inc
nop
sub
mov
dec
stos
stc
call
inc
jns
add
xor
inc
mov
stos
sbb
aaa
clc
push
cmpsb
nop
add
out
xor
stos
lock
fistpl
cli
ljmp
or
mov
sahf
test
add
inc
mov
or
jle
bound
mov
mov
and
mov
mov
cmp
xor
xor
arpl
pushl
and
or
jns
lock
repnz
ds
imul
daa
test
lds
push
arpl
movb
aas
lahf
adc
sub
fsubs
shlb
dec
imulb
jp
dec
inc
mov
cmpb
push
call
xor
arpl
mov
pop
setns
rorb
pop
test
mov
int3
sub
and
push
add
add
leave
test
cmp
xchg
ficomps
movsl
xchg
insb
mov
add
outsb
dec
push
cmp
fistl
adcb
cmpsl
push
sub
js
mov
lcall
bndldx
mov
or
mov
imul
outsl
lahf
pop
into
jecxz
adc
sbb
addr16
adc
lock
sub
pusha
jno
dec
sub
xchg
jb
rep
or
add
mov
ljmp
or
lret
cmp
fwait
and
js
and
sub
roll
pop
je
pusha
mov
mov
mov
xchg
rcrl
and
mov
rolb
jo
mov
shlb
hlt
ja
fdivrl
pop
imul
jle
cmpsl
xchg
xor
pop
mov
cmp
add
shrl
mov
pop
xor
pop
es
imul
sub
add
mov
xchg
and
pop
jbe
cmpl
mov
sbb
jmp
and
push
adc
ja
pop
call
pop
jo
cmp
nop
pop
sub
or
inc
xchg
inc
pop
xor
push
xorb
mov
repnz
scas
fsts
xor
add
cmp
aas
xchg
cld
push
jle
aas
mov
test
lret
addb
sub
in
jo
iret
aam
mov
subl
cmp
or
pop
addb
cmpsl
and
xchg
jmp
outsl
call
lds
jbe
pop
outsl
fwait
or
repz
lock
pop
std
xor
add
mov
hlt
or
lods
or
cwtl
jmp
cmp
subb
inc
scas
and
subb
scas
fisubrl
cmp
or
loopne
les
jno
cwtl
fldt
mov
add
outsl
and
add
sub
js
xor
cmp
adcl
add
and
cwtl
or
and
in
sti
and
stc
aas
lcall
adc
cs
pop
push
pushf
pusha
insl
out
fcmovne
lahf
jns
sbb
adc
mov
es
movsl
add
sbb
mov
cmp
mov
sbb
push
add
aad
mov
sub
adc
test
mov
imul
aaa
jp
stos
andl
cmp
mov
and
mov
sub
inc
mov
sbb
pushf
loop
xor
add
push
mov
push
sbb
jne
or
xor
test
je
lret
sbb
scas
jnp
and
jbe
test
lods
iret
jne
push
inc
push
mov
sbb
sub
rolb
int3
pop
popf
push
mov
xchg
ret
adc
cltd
sbb
mov
cmc
int3
or
daa
push
sbb
push
push
pop
mov
sbb
add
sti
sbbb
bound
fcoms
add
push
push
nop
loopne
movb
cmc
mov
or
repnz
dec
cltd
call
jp
lret
xchg
or
jae
cmp
xor
inc
lods
mov
or
dec
shrb
data16
mov
xor
inc
xchg
mov
shlb
mov
add
into
push
push
add
cmp
hlt
aaa
xor
mov
shlb
mov
mov
mov
subl
dec
mov
outsl
js
xor
and
mov
mov
and
add
inc
mov
push
mov
mov
jp,pt
lods
mov
clc
sub
or
cwtl
pop
add
into
or
imul
lret
inc
xchg
mov
sbb
add
test
sbbl
and
loope
jo
jb
insl
lret
add
lods
es
mov
push
jo
mov
andb
call
sbb
lret
push
mov
je,pt
jb
inc
and
aas
lods
xchg
push
cmc
push
mov
cmp
out
dec
popa
inc
pop
push
xor
xor
push
and
mov
je
imul
nop
dec
push
cmp
pop
pop
add
dec
adc
inc
xchg
loopne
imul
sub
addl
jne
pop
push
iret
roll
daa
or
pop
hlt
adc
pusha
adc
mov
rclb
sub
in
in
out
mov
inc
roll
pop
mov
jno
scas
leave
pop
movsb
xchg
pop
pop
sahf
cmp
inc
or
lods
mov
out
imul
add
mov
sub
or
pop
fldenv
sbb
rolb
dec
orb
sbb
xchg
icebp
jge
into
pushf
iret
mov
flds
jnp
and
das
mov
rolb
cmp
xlat
xchg
mov
and
movsb
ja
mov
repz
int
mov
push
cli
inc
pushf
adc
loopne
add
and
ljmp
xor
pop
mov
data16
inc
jb
subb
push
sbb
jge
add
adc
lea
dec
cld
cs
sbb
pop
cmp
add
pusha
sub
jmp
xchg
add
in
add
mov
inc
dec
add
push
jno
add
add
or
gs
push
xlat
xor
push
mov
adc
jg
js
push
mov
mov
adc
adc
fstps
mov
scas
pop
mov
xor
jge
push
push
push
mov
mov
fucomi
cmp
out
add
mov
sbb
inc
mov
insb
in
and
pop
xor
adc
loop
jmp
adc
adc
sti
rorb
add
sahf
lcall
inc
xchg
cmp
mov
mov
jmp
enter
push
and
movsl
mov
mov
sub
das
inc
jb
js
movsb
mov
movsb
pop
je
xor
pop
movsl
add
xchg
fwait
shll
popf
enter
and
cmp
adc
or
nopl
xor
push
ds
xchg
fsts
jae
xor
and
sbb
jne
xchg
push
into
in
mov
repz
sbb
out
mov
or
sahf
xchg
fdivrs
stos
inc
js
out
mov
mov
lock
fwait
ret
arpl
pop
push
xor
sub
js
cmp
dec
jno
sbb
rolb
push
nop
mov
lret
xor
add
daa
mov
shl
dec
pop
mov
loop
fdivp
repz
push
clc
push
jne
cwtl
js
xchg
mov
aad
or
mov
test
or
and
mov
xor
and
dec
mov
shrb
xchg
xchg
test
idivl
push
ret
push
imul
daa
inc
test
ret
and
and
mov
mov
fwait
pop
mov
cmp
outsb
iret
add
jo
push
dec
ss
xchg
push
adc
addl
mov
jp
outsl
or
add
gs
push
push
add
cmp
add
mov
out
add
scas
mov
sbb
push
cmp
jns
iret
pop
lahf
inc
cmp
std
out
out
add
mov
mov
sarb
rorb
sub
add
xchg
andl
fwait
mov
mov
cmp
push
adc
mov
sub
xchg
ret
mov
jge
push
lods
mov
xor
adc
ds
mov
std
xor
cmp
xor
dec
shrb
dec
cs
lods
pop
xchg
jge
jle
push
mov
sbb
xor
pop
jbe
rcrb
ljmp
mov
stos
sbb
fstps
and
repz
lret
sbb
int3
cmpsl
or
test
in
sti
sbbl
inc
push
and
sti
mov
aaa
js
or
or
ficoml
rolb
cmpb
stos
inc
rcl
cltd
je
orb
stos
lret
add
icebp
xor
cmp
push
pusha
mov
rcrb
inc
pop
gs
shlb
lahf
shll
add
and
pop
jle
or
loope
in
add
add
js
andb
pop
into
add
push
gs
add
fldcw
cli
or
fimuls
ret
mov
mov
xchg
add
sahf
mov
lret
ret
xchg
fsubrl
add
adc
arpl
rorl
loopne
push
mov
xor
sbb
sub
scas
pop
test
push
add
sti
push
inc
clc
call
xor
mov
mov
popa
or
test
jns
pop
ja
or
sbb
mov
pop
sbb
mov
test
movsl
or
inc
and
dec
lea
add
pusha
ds
jb
pop
fimuls
sub
mov
push
test
sbbl
push
je
fidivs
pop
cltd
ret
mov
xchg
cmp
or
loope
testb
and
test
lds
jns
mov
enter
ror
ljmp
lods
cs
push
jg
dec
faddp
cltd
add
sub
adcl
pop
or
sahf
add
stos
inc
xchg
mov
out
or
inc
xor
dec
adc
aas
mov
inc
inc
or
test
mov
and
lods
out
add
popf
sub
fiaddl
cmp
ja
xlat
add
loop
push
add
sbb
dec
add
stos
or
add
shll
dec
je
out
xchg
pop
add
or
inc
xlat
add
enter
out
in
mov
and
adc
adc
inc
popa
clc
or
lds
es
aas
subb
pop
iret
cmp
cld
jle
in
pmaxsw
movsb
daa
xchg
or
add
scas
jae
fidivrs
cli
add
pop
or
stos
repnz
sbb
sub
je
testw
shl
jae
mov
add
fcoms
push
iret
loop
add
jle
add
mov
push
call
aas
jo
pop
adc
sar
and
add
mov
orb
fcmovbe
ret
push
hlt
cli
mov
push
mov
inc
sbb
dec
add
outsb
adc
add
pop
or
adc
gs
sti
cs
xor
scas
rclb
sub
xor
add
or
xchg
imul
adc
pop
inc
mov
stos
add
or
mov
imul
mov
adcb
dec
negb
mov
or
mov
popf
or
test
push
les
je
dec
inc
dec
mov
add
sbb
xchg
or
adcb
addb
pop
add
mov
jne
fisubl
pop
outsb
nop
dec
inc
fstp
cmpsb
sbb
mov
rolb
jg
push
pop
jns
push
in
ret
inc
sbb
lock
lea
dec
sub
pop
inc
cmpl
push
adc
xchg
add
cmp
movsl
sub
in
int3
aaa
inc
cwtl
xor
xor
stc
popf
or
test
testb
inc
jne
add
push
out
or
inc
jb
decl
add
test
sbb
mov
add
ds
add
fcoml
movsb
fdiv
push
add
xor
jmp
add
into
test
enter
or
add
jns
add
pop
in
outsb
pop
andl
js
roll
push
xlat
lock
pop
int
add
bound
repz
and
pop
and
pcmpeqd
test
shrl
add
mov
fwait
pop
daa
inc
mov
jp
add
mov
enter
lea
adc
pusha
mov
xchg
mov
adc
push
dec
cld
cmp
cwtl
sti
mov
add
mov
sub
roll
lods
add
out
or
in
scas
or
in
lods
add
rclb
jo
insb
add
adc
aad
pop
inc
push
mov
fwait
pop
sarb
mov
ja
push
loope
sub
inc
push
mov
jbe
cwtl
test
push
in
fildl
leave
jg
xchg
or
movsl
add
cmp
mov
movb
jo
lret
fs
add
jne
xor
add
dec
sub
ljmp
xchg
push
mov
xchg
cmp
mov
rol
mov
pop
arpl
je
jp
add
bound
sub
int3
mov
or
insb
popf
cli
fsubs
cmpsl
dec
lds
jp
cmp
push
push
inc
addb
mov
movsl
xchg
aaa
mov
adc
sbbb
mov
sbb
mov
movsl
cmp
mov
popa
loop
cld
mov
fistl
leave
lahf
cltd
jmp
add
jl
sub
sbb
dec
or
imul
std
js
ret
aaa
mov
xor
mov
add
pop
add
push
sbb
cmp
lea
sub
xorb
cmp
or
popf
mov
add
in
lods
stos
mov
fdivrl
stc
adc
js
push
fidivrl
sbb
imul
mov
sub
stos
or
call
testb
cld
add
repz
sarl
mov
out
fsubl
fwait
add
data16
xor
dec
pop
aaa
sti
jne
pop
ror
pushf
jb
jge,pt
adc
mov
pop
jmp
outsb
inc
pop
or
testb
jmp
icebp
mov
pusha
adc
inc
xor
jae
push
in
add
pop
and
jns
ljmp
stos
andb
pop
sbb
xchg
lds
mov
add
add
pop
inc
xchg
add
push
sahf
loopne
or
sarb
jns
xchg
mov
dec
jl
xor
lret
sbb
push
mov
insb
xchg
push
add
inc
andb
push
add
add
cmp
jo
aaa
in
xchg
mov
lds
loope
push
icebp
add
gs
jno
jg
and
pop
aaa
rcr
add
dec
lock
cmp
sti
lds
mov
pop
push
in
and
cmp
hlt
repnz
add
pop
test
fs
subb
lods
add
cmpsb
inc
push
cs
lods
cltd
mov
imull
movsl
faddl
xor
lds
add
mov
sub
dec
cltd
cwtl
add
mov
sub
adc
xor
loop
rcrb
or
repnz
pop
and
cwtl
jnp
xchg
idivb
les
test
repnz
mov
lods
add
mov
mov
sub
shlb
add
cmp
sar
fidivl
ljmp
mov
sub
sub
mov
pushf
aaa
in
cmpsl
mov
mov
pop
xor
pushf
adc
hlt
sbb
sub
xchg
enter
or
dec
pop
push
and
add
cltd
jmp
call
sbb
pop
jo
loop
or
mov
pop
mov
add
lret
xchg
iret
jns
addr16
mov
xchg
loope
fisttps
mov
std
fucompp
xor
add
inc
push
inc
push
lds
aaa
push
mov
mov
fsubrl
xlat
ret
jb
pop
or
and
sub
pop
ret
adc
sbb
or
inc
pop
sub
jp
repnz
xchg
in
fldt
psllw
add
loopne,pn
add
sub
mov
insb
call
mov
xor
jno
mov
jle
add
sub
std
aad
sahf
add
cwtl
fiadds
out
push
push
outsl
mov
ret
mov
je
in
mov
cmp
outsb
ror
addb
xchg
push
cmpsl
aad
sbb
mov
cltd
adc
add
mov
test
add
pop
push
cmp
shl
call
inc
sbb
pop
push
fadds
lret
xlat
pop
push
dec
aas
ret
pop
inc
loop
or
pusha
and
add
mov
nop
add
mov
pop
vphsubbw
jg
data16
add
xchg
jle
leave
ret
xor
sub
hlt
and
cld
dec
or
scas
xor
pusha
dec
add
add
cmpsl
lcall
in
or
sub
mov
into
xchg
cltd
add
jg
rorb
xlat
or
xchg
push
aam
pop
jl
sub
inc
lcall
and
pop
adc
inc
fs
pop
cmp
ja
fisttpl
lds
or
daa
js
pop
es
mov
add
mov
mov
cmp
pop
scas
pusha
fs
or
sub
test
popa
xchg
imull
fisttpl
cmp
sbb
leave
shll
movsb
adc
aam
scas
loopne
cmpb
and
inc
pushf
pop
or
in
mov
mov
ss
ljmp
pop
scas
inc
mov
roll
dec
xchg
dec
aad
and
xchg
xchg
sbb
clc
jne
add
mov
xchg
mov
and
mov
dec
xchg
in
addl
in
aad
pop
mov
out
test
loopne
lret
adc
data16
xor
adc
jns
scas
push
mov
out
adc
shlb
add
dec
std
aas
cmp
add
mov
jmp
mov
pusha
lods
add
pop
jge
loop
fiadds
arpl
mov
add
aas
adc
xchg
push
adc
movsl
mov
dec
lods
cmp
cld
scas
int
clc
rolb
mov
loope
popf
add
and
hlt
das
sarb
cmp
sub
addr16
std
mov
cwtl
add
push
or
fchs
xor
inc
pop
jmp
add
push
scas
mov
in
insb
ret
cmp
sub
aaa
ja
xorb
xor
add
adc
mov
add
xchg
lcall
std
and
enter
inc
cwtl
cwtl
add
fimull
inc
seto
bound
jo
outsl
mov
incb
adc
adc
pop
fstps
fistpll
faddl
cmpsb
dec
inc
cltd
mull
pop
mov
inc
out
loope
add
shlb
ror
dec
add
divb
pop
pop
cld
rcrl
sub
movsb
inc
add
lea
inc
jmp
shlb
sbb
sti
pop
iret
testl
sar
push
gs
fsubs
push
es
add
addl
cli
decb
nop
xor
or
pop
jae
add
mov
lods
push
dec
fucomp
add
adcb
in
sar
add
ss
mov
enter
aam
xor
fisttps
lcall
jno
push
in
fildll
jle
add
fnsave
jecxz
cltd
fdivr
lahf
add
mov
pushf
sarb
inc
int3
lock
sub
cs
add
repnz
fistpll
lret
mov
into
lahf
ds
leave
push
or
sub
clc
xor
notl
and
dec
out
inc
test
cs
incb
adc
add
popf
lcall
imul
stc
orb
les
add
cmc
repnz
add
aad
ret
mov
iret
cmpsb
add
arpl
fsts
add
pop
inc
xchg
rcr
testb
nop
dec
stc
jbe
lea
lds
push
fildl
popa
sbbb
xlat
push
sub
xor
or
lret
in
in
lcall
movsl
mov
sbb
imul
daa
push
jp
xlat
jmp
scas
test
repnz
mov
pop
adc
add
out
sub
mov
mov
or
call
les
fwait
sti
cmp
shll
xor
dec
jbe
lods
mov
cmpb
fwait
ljmp
fcomi
out
daa
insl
clc
push
lock
lret
or
inc
xchg
xchg
addb
bound
rcll
mov
ds
dec
push
into
jns
rorl
jmp
dec
ds
add
aad
inc
in
fiaddl
add
xchg
mov
fmull
ljmp
cmpsl
pop
aas
int
sbb
out
ret
pop
mov
jo
jns
addb
dec
mov
jae
scas
test
push
add
adc
inc
sub
nop
cltd
add
sbb
mov
cmp
add
sub
inc
adc
movsb
rorb
add
scas
mov
xor
xor
add
pop
mov
and
fildl
filds
test
mov
stc
adc
out
lahf
xchg
pop
push
add
sti
inc
adc
push
inc
or
dec
mov
jae
add
sbb
aad
sbbb
js
mov
nop
push
jae
adc
jb
add
add
cmp
fcom
jnp
push
jb
inc
add
mov
pop
push
int
dec
mov
cmpsl
inc
inc
nop
js
push
add
or
aam
leave
sbbb
out
pop
push
mov
iret
dec
je
ljmp
rorb
or
add
xorb
and
mov
adc
scas
loop
test
bound
add
dec
sbb
mov
mov
sti
xor
mov
aaa
dec
shll
mov
xor
add
je
cs
adc
add
cmp
js
xchg
push
ljmp
les
inc
adc
add
and
outsb
loop
xor
dec
add
add
bound
xchg
popf
mov
mov
sbb
push
push
and
repnz
pop
and
add
or
mov
or
xlat
push
mov
loopne
pop
mov
push
fiaddl
out
ret
sbb
mov
cmp
or
je
add
fcompl
sub
mov
ret
data16
or
lret
push
xor
dec
add
dec
inc
mov
test
add
and
fwait
inc
js
enter
inc
outsl
push
push
xchg
add
xchg
inc
loopne
adc
push
add
repnz
xor
or
add
mov
inc
lods
cld
outsb
stc
arpl
idivb
call
add
push
cli
sahf
sbb
test
inc
loop
int3
outsl
shlb
cmp
sbb
insb
pop
roll
in
xchg
jnp
ds
js
jmp
sub
mov
call
jne
pop
add
sub
pop
push
mov
rorb
addb
add
pop
sub
iret
es
orb
out
xlat
imul
outsl
sbb
adc
xor
add
std
rorl
sub
inc
push
mov
mov
adc
scas
popa
dec
jbe
push
mov
mov
lods
add
fwait
in
fildl
outsl
loopne
add
mov
xor
add
je
add
mov
or
sub
ret
add
lret
test
repnz
shll
insb
push
add
push
xor
add
cs
cmpsb
cltd
cmp
and
mov
jo
inc
xor
aas
stc
clc
inc
int
movsb
or
out
or
sub
popa
cmp
mov
cmpl
leave
sbb
adc
cmpsl
xchg
lods
ret
in
sarb
nop
hlt
adc
push
jl
not
add
xchg
add
dec
test
add
jp
sub
mov
xchg
push
add
fldcw
inc
mov
jno
or
or
js
add
mov
xchg
add
adc
add
lret
loope
pop
adc
pop
lcall
inc
push
mov
rcr
cmpsb
jmp
adc
xchg
movsb
ret
mov
jbe
dec
stos
movsl
mov
repz
add
sub
insl
rolb
inc
jno
js
leave
mov
xor
lea
or
add
add
jb
pop
ret
lods
jno
inc
mov
data16
or
add
jmp
sbb
cmp
das
ret
add
clc
add
icebp
into
jmp
jno
cmpsb
adc
cs
xor
jno
xchg
mov
mov
mov
add
mov
out
test
xchg
js
xchg
loop
and
out
add
mov
xor
xlat
pop
jo
dec
mov
stos
xor
mov
add
rol
mov
sub
dec
hlt
sbb
inc
lea
clc
inc
dec
add
mov
jmp
adc
mov
inc
xor
jns
cs
in
jnp
push
jge
add
mov
sar
xchg
pop
jbe
adc
stc
sarl
pop
and
inc
xchg
dec
xchg
mov
push
mov
dec
fsubrs
das
loopne
jecxz
test
mov
cwtl
into
cmpb
call
or
add
lret
push
dec
sbb
loope
data16
rorl
stc
mov
addr16
in
jp
add
adc
push
stos
push
xor
loope
add
dec
push
testb
cmp
cli
add
punpcklbw
sub
aas
mov
aam
adc
call
adc
sbbb
std
xchg
iret
add
in
jmp
cmp
cmpsb
ds
mov
jnp
mov
xor
clc
inc
add
adc
dec
in
adcb
push
aam
jbe
push
arpl
leave
add
scas
jecxz
add
xchg
or
fcompl
movsb
add
mov
xchg
lock
adc
test
mov
lock
pushf
js
push
adc
test
inc
lds
xchg
loopne
fldl
test
lret
and
xor
cmp
mov
jecxz
sti
in
add
outsl
add
xor
push
js
add
ret
add
jl
ss
cmp
hlt
add
insb
adc
lcall
mov
add
inc
jae
jge
add
cmp
cmp
ja
add
sbb
fdiv
cmp
or
mov
sub
xlat
cmp
lret
adc
xor
adc
in
pop
and
cld
das
mov
inc
mov
cltd
sbb
lea
add
and
xchg
pop
xor
std
es
cmc
or
clc
mov
adc
pop
mov
jne
mov
fbld
fdivrl
pop
aas
rcrl
adc
and
xchg
lods
mov
add
loopne
les
mov
jl
mov
cmp
xor
ret
mov
jno
lret
cmpsb
add
ret
fstpl
add
jecxz
in
and
cmp
add
adc
ret
cmp
movsb
inc
hlt
sbb
mov
adc
mov
in
hlt
das
add
stc
adc
call
lret
jge
add
pinsrw
mov
cmp
add
out
pop
and
mov
out
daa
stc
shll
hlt
mov
mov
fs
idiv
loope
add
adc
add
int
sbb
fbstp
hlt
leave
aad
xlat
popf
lcall
sbb
movsb
enter
dec
inc
dec
or
repnz
adc
insb
add
push
cmp
lods
jl
ret
gs
repnz
push
and
add
es
pop
jl
pusha
cli
sbb
dec
jb
stos
inc
push
gs
push
clc
add
shl
sub
popa
orl
pusha
icebp
movsl
hlt
cmp
sbb
cwtl
xlat
adc
ss
pop
push
xchg
jnp
int
imul
push
cli
push
stos
sub
pop
inc
cld
leave
push
addr16
add
dec
cs
fsubrl
add
enter
pop
outsl
xor
or
push
cmp
subl
test
dec
shll
pop
push
loopne
pop
or
lret
clc
in
pop
in
cmp
orb
mov
ja
ja
add
or
pusha
movsb
out
pop
add
ja
js
std
inc
push
mov
adc
mov
add
xchg
jmp
xchg
icebp
add
pop
sbb
add
subb
mov
push
mov
jns
mov
loopne
data16
mov
push
pop
cld
cmpsb
sub
pusha
rolb
xor
shlb
imul
add
pop
outsl
popf
sbb
mov
xchg
scas
and
iret
cmpsb
add
cwtl
dec
push
or
repnz
loope
adc
aas
cmp
add
icebp
imul
jg
addb
lods
movsl
or
xchg
add
inc
fsubs
dec
shr
push
xor
xor
stos
add
mov
mov
xchg
insb
inc
rcrl
ret
inc
loopne
mov
and
xchg
push
mov
stc
andl
mov
add
adc
lahf
pop
aad
mov
mov
dec
pop
int3
fdiv
ret
outsl
int
add
xchg
leave
sbb
lea
mov
add
xor
ret
mov
shlb
addb
push
cmp
daa
outsl
sbb
lahf
mov
in
inc
orl
mov
push
je
mov
add
cmp
rcr
adc
add
pop
test
popf
mov
rolb
jnp
push
movsb
cmpsb
push
rol
leave
lfs
rcrb
mov
sub
jnp
in
lock
xchg
test
enter
pop
adc
nop
dec
add
jge
in
fucompp
enter
imul
lret
fsubl
into
nop
cwtl
dec
js
pop
add
and
or
pop
adc
jg
mov
sub
stc
mov
inc
dec
add
mov
xor
jbe
data16
add
push
sarb
imul
pop
loope
xchg
add
and
enter
repz
add
or
out
adc
add
sahf
jg
pop
arpl
cmc
ror
add
push
loopne
sbb
sub
shrb
add
or
test
dec
dec
popa
add
jns
ret
and
push
lods
dec
lock
pop
into
fcompl
push
add
push
dec
repz
dec
andb
dec
rorb
mov
add
inc
lods
or
ljmp
je
test
mov
popl
add
testl
and
inc
sub
fcmovnb
push
add
jne
fsubr
ss
out
add
mov
push
xor
add
push
sahf
sub
movsb
sbb
add
xchg
ret
std
ss
add
loope,pt
movsl
cmp
sub
and
push
outsb
xor
adc
repnz
inc
mov
jge
js
add
add
dec
out
add
jbe
out
mov
orb
in
scas
add
jo
jp
mov
sub
ficoml
and
pop
mov
xchg
stos
mov
fiaddl
adc
out
daa
and
test
jle
ffree
js
imul
sub
add
dec
sbb
das
xchg
pusha
inc
cmp
pop
andl
dec
sbb
add
sbb
in
cld
mov
pushf
or
add
jne
stos
or
xchg
shl
cli
mov
dec
subb
pop
pop
jo
aas
aas
pop
pop
and
mov
int
inc
add
mov
in
xor
add
mov
mov
and
add
dec
jb
push
mov
lret
add
stc
int3
and
jmp
push
sbb
cmp
xor
in
scas
adc
add
aam
fstpt
lret
sub
outsb
xchg
add
or
add
imul
aam
out
or
xchg
pop
shlb
nop
loop
bound
ja
fsub
pusha
shld
jo
daa
sbb
add
lahf
out
fcoml
xchg
jecxz
cmpsb
dec
add
pop
xor
lock
in
in
pshufw
or
ss
add
pop
pushf
jb
call
mov
jnp
out
sbb
mov
and
add
cmp
inc
call
in
or
shlb
rcll
pop
lock
push
inc
in
nop
add
lret
cmp
cmp
insl
cld
negb
and
jns
add
jg
and
scas
repz
sub
sbb
xor
add
out
xchg
sub
cmpl
sahf
jle
test
mov
jne
les
pop
add
xchg
nop
cltd
sub
push
add
xchg
jl
std
cwtl
dec
sbb
sti
cmpsl
add
jae
fwait
imul
xchg
pop
imul
add
mov
push
add
cmp
mov
and
repnz
nop
jno
and
mov
adc
dec
imul
add
fistl
cmp
jae
pusha
or
scas
stos
cmp
add
mov
icebp
add
subl
pop
and
out
add
mov
frstor
mov
and
into
add
push
iret
outsl
lcall
mov
scas
xlat
pusha
ss
in
cmpsb
rclb
std
adc
push
leave
pop
xor
enter
cmp
std
add
xchg
jno
fisubs
add
stc
add
jl
xchg
add
mov
pop
js
lahf
add
repnz
dec
fcoml
pop
scas
daa
inc
js
mov
aam
mov
push
xchg
insl
hlt
add
enter
jmp
int
cmpsl
push
fcom
decb
or
rolb
jge
pusha
test
add
leave
jecxz
out
movsb
mov
sbb
mov
addb
enter
xor
pop
addb
faddp
inc
jns
push
pop
jae
add
fsub
mov
sub
add
mov
stos
je
sbb
adc
or
mov
dec
popa
andl
outsl
sub
xor
js
mov
iret
xchg
scas
fldt
sub
and
rcrb
sbb
bound
hlt
dec
sbb
ret
add
nop
ss
jne
cld
sub
add
sahf
loop
pushf
sub
sar
iret
cmp
insb
dec
shl
jnp
sbb
lahf
lret
subb
xchg
add
xor
jnp
int3
inc
bnd
cmp
xchg
push
add
aas
bound
xchg
mov
push
leave
cmpsl
xorl
fdivrp
loopne
push
andps
inc
jbe
aam
push
add
das
aad
cmp
mov
jge
dec
jns
test
int
mov
enter
cmp
xor
and
xchg
insl
mov
jp
incl
js
addl
stos
jo
and
divl
inc
inc
xorb
mov
lock
adc
sbb
jne
mov
jmp
pop
add
punpcklwd
add
imul
ror
hlt
ret
dec
clc
mov
inc
pop
out
push
ss
mov
jg
sbb
ljmp
mov
stos
fnstcw
mov
stos
fcomps
cmpsl
ret
fidivs
insl
add
lock
push
add
xlat
push
shlb
mov
jae
xor
adc
fidivs
and
loopne
push
xor
add
sbb
push
or
xchg
cmp
pop
or
cmpsb
loope
cmp
dec
subb
or
push
sub
push
dec
xor
cltd
jno
dec
clc
fdivl
ret
fidivs
xchg
and
mov
push
jno
pop
and
add
int3
sub
inc
movsl
add
adc
xor
xor
add
add
sar
add
fcom
cmp
fs
incl
pusha
xchg
xor
xchg
pop
lock
ret
aam
add
ljmp
add
mov
or
pusha
movl
push
je
sbb
jp
add
and
in
sub
and
loop
adc
jbe
mov
sbbl
ret
data16
sbbb
jge
ljmp
insb
andb
adc
sahf
dec
push
xchg
inc
sbb
push
mov
outsb
imul
push
shrl
mov
addr16
add
sub
and
jnp
jg
clts
pop
inc
xor
mov
or
and
mov
xor
xchg
push
mov
jno
stos
push
pushf
xor
pop
js
xchg
push
je
mov
pusha
and
fcoml
inc
adc
sbb
or
pop
cwtl
add
ret
cmp
push
xchg
aas
pop
fsub
ds
les
scas
sub
and
and
sbb
nop
mov
popa
pop
sbb
mov
test
push
add
adc
movb
lret
mov
dec
push
add
mov
jmp
xlat
and
and
jnp
push
loope
xor
sbb
ja
push
add
test
mov
imul
jge
inc
xchg
jle
xlat
jp
mov
lock
call
pop
xor
xchg
sti
incb
or
adc
mov
pop
pop
xchg
mov
and
mov
test
sub
sbb
loop
out
mov
xchg
pusha
xchg
dec
call
sub
xor
sahf
loopne
fmuls
adc
adc
in
add
mov
lret
or
ljmp
add
jb
in
lret
add
mov
sbb
into
mov
in
fldl
dec
sub
push
inc
sti
or
and
or
in
mov
cld
pop
cmp
xchg
int3
jle
frstor
mov
xchg
add
and
hlt
iret
or
mov
aam
movsl
jno
push
cmp
movl
cli
or
fdivl
outsb
mov
sbb
in
dec
add
repz
mov
jo
mov
stos
or
jl
add
sahf
mov
push
pop
fs
in
popa
push
add
jnp
add
sbb
cli
cltd
shrb
mov
outsl
sub
cs
mov
push
mov
stc
test
add
cmp
orb
mov
add
outsb
dec
lahf
sbb
add
ret
lods
and
adc
int3
push
loopne
sbb
inc
add
out
push
pop
mov
lock
daa
cmp
jbe
mov
dec
incl
stos
pusha
sub
add
or
or
and
hlt
mov
imul
pop
push
cmp
filds
jecxz
jne
add
dec
arpl
or
and
add
push
rcrl
push
pop
push
inc
les
cmpl
ret
iret
or
add
sbb
xor
pop
scas
jmp
loope
dec
fisttpll
hlt
dec
enter
add
xor
add
pop
pusha
inc
xchg
mov
into
lea
test
jge
lods
out
sub
or
add
and
add
pop
xchg
adc
sbb
jne
jmp
out
mov
xchg
xor
dec
or
mov
iret
in
xlat
call
push
and
mov
je
add
mov
mov
or
and
loop
sbb
test
stos
dec
repnz
add
sar
repz
add
adc
cmpsb
inc
adc
stc
or
add
add
push
cmc
sbb
fcomip
cmp
sbb
repz
adc
mov
inc
jge
sahf
cmp
test
out
mov
out
sub
fidivrl
ljmp
shlb
mov
stos
and
sahf
pop
add
pop
inc
cmp
addr16
add
jmp
xchg
add
mov
push
lock
push
loopne
cmp
inc
add
push
insb
mov
je
out
pushf
dec
pop
add
imul
and
xchg
add
and
jmp
cld
dec
mov
xor
notb
push
and
inc
cmpsl
add
xchg
add
mov
enter
xchg
inc
push
loopne
xchg
jl
mov
mov
xchg
subb
sahf
insl
add
loope
scas
sub
sti
add
rolb
mov
add
or
fldl2e
add
jb
dec
loope
aas
add
xchg
std
or
mov
scas
push
fldenv
ja
sbb
fs
adc
repnz
and
leave
lret
sahf
test
dec
jg
mov
jns
pop
sub
push
lods
repz
pop
cwtl
mov
insb
sub
fdivrs
jns
pop
mov
scas
arpl
mov
pushl
cmp
jg
int3
and
insl
inc
pop
test
pop
jb
push
das
ds
lock
lea
adc
in
data16
fistpl
sub
mov
pop
call
stos
cli
xchg
add
mov
ss
lret
call
sbb
stc
push
add
shll
shrb
and
adc
in
mov
sub
jp
ret
fwait
push
mov
xor
adc
add
or
xorb
out
in
mov
loope
ljmp
and
add
lds
add
aaa
lret
repz
shrl
test
add
mov
pusha
add
cmp
in
aam
inc
movsl
pop
xchg
and
push
jnp
lret
jns
pop
push
pop
stos
ss
call
add
push
mov
roll
jbe
cmp
inc
xchg
add
or
push
mov
sbb
push
xor
add
or
add
popa
sarb
or
jns
or
push
dec
incl
daa
sub
xor
addb
sub
addr16
aad
shlb
jp
psubusw
xor
cmp
loop
out
psrlq
mov
dec
cli
enter
andb
pushf
lret
cmp
shr
rcrb
push
jnp
mov
xchg
imul
sahf
lods
pop
lret
add
test
int3
jecxz
clc
sbb
or
js
data16
add
inc
jno
lods
or
dec
pop
dec
rolb
jg
xchg
xor
push
mov
jbe
mov
je
ret
out
out
hlt
pop
pop
cs
std
leave
hlt
fisttps
push
and
mov
lock
jne
add
lods
mov
mov
adc
repnz
xchg
mov
insb
dec
int3
call
add
sbb
push
push
jno
push
fs
cmp
cltd
insb
int3
cmp
js
fmull
pop
stos
mov
add
into
lods
xchg
loope
add
and
dec
mov
add
push
fnstsw
sub
push
push
call
sbb
das
add
jo
add
popl
add
rcrl
insl
loopne
les
jmp
fildl
dec
add
and
addr16
mov
aam
mov
adc
add
mov
inc
add
add
mov
jb
and
mov
dec
aaa
shl
ret
and
repnz
dec
pop
add
sar
adc
movsl
and
pop
pop
std
or
add
js
inc
and
or
inc
mov
movsl
pusha
popa
inc
lahf
pushf
and
les
push
in
test
xchg
xchg
fsubrl
push
cltd
xor
movsl
cwtl
sbb
inc
lahf
cmp
adc
xchg
stos
add
push
jnp
arpl
add
data16
mov
inc
jbe
aas
or
scas
and
insb
imul
lahf
es
jge
xchg
add
loop
loopne
xor
add
pop
nop
fcoml
fimuls
jmp
lret
daa
pusha
add
mov
pusha
pusha
outsb
add
enter
and
lock
jmp
add
mov
or
notl
add
cltd
iret
mov
rcrl
pop
jns
cwtl
jnp
add
nop
or
lock
lods
cmp
dec
fwait
addb
test
repnz
xchg
jp
add
xor
ljmp
inc
fldl
sbb
cmp
inc
mov
cld
add
push
data16
sarb
popa
lock
or
clc
aas
rclb
gs
add
push
pop
mov
add
andl
in
nop
insl
push
dec
mov
fisubrl
nop
mov
fs
mov
sbb
jg
sar
rorb
cld
in
push
push
ja
jnp
and
pop
xor
jmp
and
add
sbb
testl
pop
lret
adc
jo
jmp
and
std
data16
push
les
fwait
scas
push
add
aad
mov
add
fxch
pushf
jmp
sbb
and
push
mov
aad
mov
or
je
fwait
hlt
jmp
mov
push
mov
negl
mov
xchg
inc
lret
arpl
xor
dec
in
adc
aam
pop
rol
mov
and
out
les
adc
xor
aaa
lock
jno
add
stc
dec
lods
ss
xchg
pop
pusha
rcll
out
addr16
lock
loope
cld
add
adc
rclb
push
aad
nop
pop
movsb
xchg
add
js
mov
lods
jp
nop
lock
decl
insl
adc
jne
mov
jnp
adc
push
call
loope
jg
lcall
cmp
jmp
inc
sub
mov
aas
std
cmp
mov
lea
adc
jle
xor
and
sbb
cmpsb
lods
add
sub
loopne
dec
movsl
pop
add
and
add
cmp
int
test
dec
out
push
out
add
cmp
call
sub
mov
push
cltd
in
mov
xor
sti
sahf
and
mov
inc
mov
loope
xchg
inc
leave
nop
add
xchg
jns
nop
sub
adc
adc
sub
sahf
mov
xor
xchg
out
sub
sar
dec
call
in
push
loop
push
and
add
jle
mov
xor
lahf
sbb
mov
and
in
xorb
out
add
mov
pop
add
and
and
push
mov
pop
cmpb
jp
or
lret
push
add
roll
mov
gs
cwtl
add
pop
das
mov
jge
mov
or
iret
jb
cld
dec
ja
sub
les
add
and
rol
lods
add
bnd
jne
pop
jl
mov
pusha
xchg
add
scas
xchg
je
add
fwait
rcll
int
jp
shr
fdivl
incl
lret
mov
add
mov
xor
ret
and
leave
and
pop
add
sarb
mov
loopne
inc
add
push
iret
sarb
or
dec
inc
add
cmp
loopne
test
push
xchg
jae
adc
xchg
inc
adc
popa
outsl
in
loopne
ja
sbb
adc
dec
sar
std
sub
dec
dec
sbbb
add
mov
mov
roll
fsubs
cmp
dec
add
adc
stos
push
mov
gs
cwtl
inc
inc
add
pop
stos
adc
cwtl
and
sahf
inc
cmpsl
aaa
pop
xchg
cmp
xchg
xor
enter
sub
es
push
movsb
subb
loopne
stos
mov
lods
add
int3
insl
imul
sahf
icebp
inc
add
loope
jbe
lret
add
mov
dec
push
ds
add
jbe
add
idivl
pop
mov
xchg
jns
cmp
dec
ja
pop
add
jl
dec
ret
mov
adc
fnstenv
imul
pop
and
aam
ret
inc
cld
stos
cmp
ds
orl
mov
xchg
enter
add
and
add
cmp
lods
add
ret
out
iret
int3
mov
in
cmp
or
dec
rolb
add
repz
dec
aas
mov
add
xchg
push
xor
incb
mov
cmp
mov
mov
push
and
pxor
fisubrl
enter
or
lea
out
in
pusha
sti
add
dec
xor
inc
add
mov
add
mov
insl
pop
je
push
fildll
shr
xchg
add
movsl
sbb
gs
mov
xor
and
clc
xor
cld
or
pop
popw
das
ret
adc
aam
dec
cs
mov
pop
add
loopne
call
stos
into
jae
add
mov
je
fimuls
add
inc
addl
imul
pop
pop
xor
xor
push
incb
ja
mov
mull
lret
jge
fldenv
jmp
icebp
add
pop
dec
push
mov
in
adc
out
xor
jae
push
or
lods
mov
aas
pushf
add
cli
or
leave
mov
jo
lldt
int3
fsubrp
jp
pop
or
or
sbb
mov
pop
push
scas
add
addr16
les
or
and
jmp
add
xchg
mov
add
fnstsw
cld
mov
mov
clc
adc
out
mov
incb
xor
sbb
or
pushf
mov
dec
push
mov
pop
dec
pop
mov
push
data16
push
pop
scas
call
lcall
adc
or
int
jnp
adc
pop
add
cmp
repz
add
pop
sti
addr16
add
sbb
cld
inc
push
popf
jl
push
or
test
lcall
add
xchg
scas
push
js
jo,pt
popf
add
enter
xor
mov
adc
hlt
jb
add
pusha
shrb
sbb
sbb
mov
add
add
test
sbb
push
adc
sbb
add
xlat
jp
outsb
mov
loope
ja
cmp
dec
push
add
call
daa
incl
lret
int
adc
mov
ret
dec
sub
xchg
daa
scas
add
mov
add
inc
fwait
lahf
out
stc
mov
add
pop
stos
push
dec
xchg
lret
fcoml
mov
hlt
and
lods
inc
sub
pushf
int3
or
mov
loopne
bound
add
pop
mov
inc
push
add
xlat
cmpsl
mov
inc
push
imull
clc
xor
cmp
pop
mov
ss
or
inc
call
adc
sub
ja
cmp
mov
mov
add
sbb
test
aas
cmp
shr
pop
fistps
push
inc
ret
push
faddl
call
fiadds
daa
aad
out
loopne
jge
jnp
sbb
sbb
push
in
and
add
cmp
pop
movsl
xchg
cwtl
lock
pop
mov
hlt
pop
mov
cmp
sub
movsl
call
add
sbb
add
punpcklbw
push
aad
sbb
pop
push
sbb
push
pop
jns
pop
decb
sbb
lahf
testb
add
lods
add
mov
add
gs
jno
jne
add
scas
inc
inc
xorb
cmp
cs
pop
jge
adc
mov
xchg
push
add
jb
xchg
xorb
and
push
and
jbe
cmp
aam
fstpt
jnp
rolb
xchg
movsb
sbb
cmp
icebp
mov
add
shl
cmp
loope
stos
pop
dec
ret
in
mov
ds
jb
lret
jb
test
inc
iret
scas
test
sbb
lea
jb
adc
dec
or
stc
xor
cltd
cmpsb
add
xor
and
lahf
movsb
add
orb
cmp
daa
mov
sub
mov
add
ret
push
lcall
pop
mov
push
bound
add
popl
and
or
mov
sbbb
xchg
rolb
add
sub
fildl
push
add
push
cwtl
cmp
and
fiaddl
es
fwait
pop
repz
add
cmp
int3
push
add
scas
lret
out
or
js
jle
xchg
add
add
je
pop
loope
popf
punpcklbw
cmp
mov
add
test
mov
pushf
xorb
pop
cmp
mov
cwtl
das
cmp
xchg
adc
lret
inc
inc
adc
cmp
jnp
int3
pop
stos
and
or
pop
xchg
pop
inc
mov
cmp
mov
lcall
sbbb
add
sbb
adc
loope
add
ljmp
or
fstl
clc
add
lret
jae
insl
mov
jge
pusha
jnp
xchg
jp
out
fs
fistps
daa
hlt
subl
call
mov
into
fmulp
add
inc
sub
imul
add
push
and
dec
or
pusha
inc
lret
pop
movsl
shrb
lods
lret
nop
dec
sbb
xchg
je
jo
xor
adc
in
pop
cwtl
or
es
sub
andl
inc
ljmp
jb
mov
shlb
add
arpl
fcomps
add
pop
inc
and
sahf
and
xor
jp
mov
mov
in
pusha
dec
nop
xchg
mov
jg
or
cli
fimull
push
cmc
into
push
fisubs
iret
pop
jne
and
add
and
orb
lock
add
mov
xchg
lcall
jns
xlat
xchg
fs
inc
or
jb
add
sbb
cmpsb
xchg
add
mov
dec
pop
hlt
pop
mov
push
call
push
test
pop
into
sbb
nop
in
int3
jmp
imull
mov
mov
add
xchg
sbb
mov
pop
add
nop
mov
or
adcl
lock
dec
xor
add
loopne
mov
fstl
lahf
jns
leave
andb
hlt
sub
add
xchg
roll
addr16
adc
shlb
push
rorb
sbb
jmp
into
pop
rorb
pop
mov
and
add
push
inc
push
jo
add
xor
inc
cmc
daa
and
xchg
cwtl
add
cli
mov
bound
add
inc
jne
or
stos
mov
add
shl
add
xor
add
negb
mov
sbb
lret
push
cwtl
adc
lods
clc
les
jle
push
popf
add
mov
mov
add
add
inc
jmp
and
xchg
clc
jae
push
nop
shll
les
jne
call
in
jb
jmp
rolb
pop
rol
aas
mov
push
aad
xchg
push
add
add
testl
push
sti
inc
mov
fdivl
outsl
sbbb
mov
arpl
add
jo
jmp
cwtl
lea
mov
ret
xchg
bound
je
aam
repz
out
cmp
and
adc
cmp
sub
scas
sbb
inc
add
jnp
insl
sub
call
scas
xchg
daa
ret
and
add
cs
add
int3
cmp
jnp
js
clc
scas
add
idiv
mov
outsb
jno
xorb
xor
add
adc
fistps
cmpsb
loop
add
in
xchg
add
inc
fcmovne
add
push
gs
cmp
sti
or
icebp
pop
cmpb
fs
scas
ucomiss
in
loopne
xchg
and
add
into
ja
dec
mov
int3
test
push
mov
cmp
cmpsb
rcrb
scas
rolb
dec
jae
add
adc
call
add
xchg
push
pop
imul
and
addl
mov
jnp
cli
dec
add
sbb
lock
or
lods
or
je
std
nop
leave
and
test
jmp
add
int3
shll
add
ljmp
notl
lret
lods
cmp
stos
cmp
jle
in
cmp
mov
cli
ret
pop
xchg
repz
ret
shll
xchg
aam
or
push
push
ja
xor
fmuls
or
test
imul
or
int
mov
enter
testl
bound
jp
jl
add
xchg
inc
ficomps
test
lods
adc
pop
pop
nop
test
pushf
pop
add
and
icebp
arpl
ret
orl
pop
dec
fucomip
push
clc
xor
lea
add
test
rcrb
into
aaa
add
mov
xchg
std
mov
iret
enter
mov
push
or
nop
loopne
loopne
sbb
fs
xorb
adcl
data16
jg
out
in
add
sbb
jecxz
or
xor
add
js
rorl
test
es
and
add
dec
ljmp
out
inc
ret
push
xchg
mov
cli
adc
push
mov
es
pusha
pop
xchg
sub
shlb
mov
mov
or
in
cmp
add
cmp
cld
subl
mov
aas
shrl
mov
sub
mov
fxch
subb
mov
fmull
xor
sub
sub
inc
dec
dec
add
inc
jnp
jns
inc
rolb
out
sarl
or
cvttps2pi
repz
or
in
dec
pop
nop
xchg
adc
fisubs
pop
lahf
data16
loop
cmp
test
jo
rol
sub
das
jnp
cmp
push
xchg
jno
sub
push
sbb
and
lcall
out
jne
add
and
aaa
mov
push
push
inc
stos
or
inc
mov
mov
pop
repnz
pop
js
add
dec
dec
lods
mov
or
jge
dec
and
push
adc
mov
jae
pop
sti
inc
adc
xchg
xor
fs
add
scas
add
lods
mov
push
shl
test
into
inc
iret
jp
jb
dec
add
mov
xor
int3
push
and
mov
stos
push
sbb
fadds
gs
in
outsl
add
pop
mov
add
sbbl
sub
cmp
xor
push
jmp
inc
loopne
jns
cld
add
das
sahf
mov
cmp
bound
jno
iret
sub
add
test
shlb
dec
leave
cli
addl
add
cmp
clc
pop
frstor
add
mov
jno
popa
add
xchg
xchg
pop
fs
ss
sub
mov
dec
in
and
sbb
lcall
sbb
fsubs
pop
int
adc
popa
shl
inc
call
test
les
xor
add
cmp
cmc
pushf
sbb
scas
adc
int
dec
out
xor
fwait
daa
shll
add
inc
cli
addb
sub
mov
sbb
aad
inc
and
mov
popf
lods
jl
jbe
ja
xor
add
mov
mov
adc
aad
mov
dec
rcll
fwait
adcl
mov
idivl
xchg
mov
jns
jg
xorb
cmpsb
test
int3
push
sub
xor
mov
inc
lret
jns
add
mov
add
leave
sub
add
fnsave
jae
imul
push
sub
loope
push
jno
jl
gs
add
addb
fmuls
pop
cli
add
fiaddl
add
adc
cmp
add
test
repnz
es
push
loopne
xchg
iret
or
orb
movsb
add
jnp
rcrl
cmpsb
movsl
cmp
push
cmp
imul
test
pop
cmp
inc
add
mov
dec
pusha
nop
leave
js
adc
or
out
mov
notl
pop
ljmp
popa
or
ja
ds
mov
repnz
int3
sub
or
push
nop
lret
hlt
xor
and
xchg
in
shlb
shll
cmp
xchg
lods
mov
jecxz
loopne
pushf
pop
inc
lock
push
rolb
aas
or
mov
cmp
dec
xchg
ljmp
sub
sub
enter
push
mov
add
sbb
mov
addr16
aaa
or
mov
or
and
adc
mov
int3
dec
xor
je
add
xchg
adc
sub
test
lods
add
and
jg
pop
dec
dec
sbb
jb
mov
xchg
pop
aas
pop
pusha
jl
mov
mov
mov
push
add
cli
test
push
mov
bound
pop
pusha
push
cmp
adc
add
mov
mov
inc
popf
xchg
cmpb
or
sub
adc
cmp
pop
aam
lret
add
lods
xchg
rol
xor
loopne
add
mov
sbb
add
add
adc
cmpsb
xchg
sub
fbld
mov
lds
shl
xchg
add
dec
shrl
add
scas
or
xchg
cwtl
xchg
add
mov
jae
ret
std
pop
gs
pushw
add
xchg
hlt
add
testl
push
pushf
int3
push
stos
setns
and
inc
lods
leave
sub
push
mov
dec
out
idivl
pop
inc
fsubrp
lahf
jae
inc
add
adc
sti
mov
xchg
mov
inc
lods
pop
jnp
mov
clc
push
pusha
or
mov
xor
add
sbb
fwait
ror
adc
add
movsb
ss
stos
sub
out
push
cmpsb
sub
ret
std
stc
cs
orl
xchg
loope
pusha
aam
jne
es
lahf
push
in
cmpb
mov
and
cltd
popa
test
add
mov
and
jb
sti
cld
add
shrl
rcrb
xor
mov
jl
cmp
or
mov
and
adc
sub
addr16
xchg
xor
pop
and
mov
mov
leave
mov
add
popa
push
sub
pop
xchg
add
inc
test
imul
aam
imull
add
sub
jnp
femms
into
push
scas
add
stos
outsb
inc
sbb
xor
pop
sbb
test
scas
inc
popa
lahf
xor
push
add
add
mov
xchg
test
push
into
add
mov
fisttpl
fbstp
mov
cltd
das
dec
jl
test
or
sbb
test
push
xchg
or
inc
icebp
nop
xor
or
outsl
push
test
xchg
dec
cmp
push
add
cwtl
int3
push
fs
inc
test
addr16
sti
jae
inc
add
stos
push
ficoms
push
sbbl
outsl
fistps
mov
gs
adc
and
in
test
mov
std
movsl
push
insl
push
aas
inc
mov
lods
push
xor
aaa
incb
das
sbb
xor
movsb
call
jmp
jne
lods
fisubrl
flds
js
loope
xor
xchg
mov
add
xchg
adc
loop
outsb
addb
sub
push
sub
cmpl
adc
loopne
mov
outsl
pop
sbb
mov
fs
xchg
mov
push
adc
pop
fnstcw
mov
xchg
cmp
repz
or
xor
pop
and
test
inc
or
scas
or
mov
sarb
add
into
inc
gs
xor
and
push
push
ljmp
add
and
xor
mov
cld
xchg
fdivs
sbb
test
das
mov
ret
xor
cwtl
cmp
jl,pn
cmp
push
or
iret
mov
loopne
inc
add
and
sub
fcomps
out
cltd
sub
mov
daa
and
mov
push
sbb
rolb
xchg
rclb
jmp
inc
cmpl
inc
cltd
pop
inc
add
mov
jecxz
pop
rcll
cs
mov
je
shl
aas
pop
lock
rcll
jp
sbb
add
loop
adc
pop
sub
or
xchg
and
sbb
andl
xchg
or
or
lcall
orb
mov
nop
ds
xor
insl
or
or
push
das
or
add
jo
lock
inc
inc
mov
push
notl
or
mov
dec
hlt
addb
movsl
push
xchg
dec
and
push
and
mov
or
ret
adc
scas
xorb
mov
pop
inc
dec
xchg
nop
test
add
sub
jns
add
pop
rol
sbb
xor
push
cmp
sbb
and
in
mov
add
cmp
cmp
pop
shlb
push
icebp
jns
and
imul
bound
lods
jg
add
cltd
mov
into
in
inc
or
sahf
dec
dec
notl
push
push
mov
or
jl
stos
movsl
or
mov
sarl
push
js
adc
mov
cmp
jnp
fmuls
xor
call
lods
adc
scas
dec
fnstenv
push
int3
sub
add
jb
inc
orb
push
or
js
rcrb
data16
pop
sub
jge
cmpsl
inc
pusha
inc
orb
cmp
aaa
int
add
fs
inc
xor
cmc
loopne
es
lea
rorb
icebp
rcrl
pusha
test
adcb
inc
adc
pop
sub
lea
xchg
dec
clc
mov
or
cwtl
add
mov
or
and
ret
sbb
dec
cmc
test
cmp
or
test
cmp
inc
push
and
dec
test
sub
cmpl
mov
cmp
les
dec
add
movsb
xor
insb
jle
clc
sub
fiaddl
sahf
mov
sbb
xorb
ficomps
mov
pusha
mov
popa
cltd
sbb
mov
hlt
sub
idivb
mov
ret
rcr
pop
daa
cmp
test
mov
xchg
out
add
xchg
xchg
orl
divl
mov
insl
jp
xor
dec
lock
add
push
dec
mov
rolb
ret
and
test
xchg
shrb
and
inc
hlt
adcb
and
enter
daa
and
leave
mov
jl
inc
mov
sbb
rol
cmp
test
mov
ljmp
adc
fisttpl
in
xor
das
dec
dec
sahf
je
repz
mov
pop
ss
repnz
add
shll
mov
push
int
inc
ret
mov
sub
mov
les
jle
rorb
jl
or
sub
push
add
cmpsb
test
repnz
out
dec
pushf
mov
hlt
jle
nop
test
or
jns
push
aaa
xor
cmp
out
rclb
mov
ret
pop
test
enter
mov
and
add
inc
out
inc
mov
leave
or
sbb
xor
push
push
inc
sahf
xor
pop
jmp
test
pop
mov
adc
or
enter
roll
dec
stos
xor
data16
shr
dec
mov
pop
scas
lds
cwtl
nop
stos
icebp
xor
rcll
mov
fwait
adc
add
inc
dec
stos
fisttpll
ljmp
int3
sbbb
aaa
push
scas
jle
xor
imul
sbb
add
leave
fs
and
je
js
call
pop
movsl
mov
sti
mov
popl
or
cmpsl
in
ss
movsb
fscale
out
test
lret
sbb
cmp
jae
mov
and
out
mov
fldt
mov
dec
or
jmp
fnstsw
inc
xchg
xchg
add
inc
xor
dec
ret
add
mov
std
sbbl
mov
in
nop
insb
and
cmc
pop
adcl
xorl
push
dec
mov
or
sbb
and
mov
mov
push
mov
mov
pop
mov
cmc
xor
mov
dec
mov
mov
pop
lea
push
mov
and
cmp
repz
iret
mov
insb
cmp
add
es
pop
les
cmp
subb
repz
fadds
or
mull
inc
je
loopne
fwait
xor
sbb
inc
inc
je
aas
dec
mov
jo
sbb
fildl
push
orl
sbb
and
or
fwait
and
cmp
lods
jmp
mov
and
js
cld
xor
mov
jbe
movlps
xchg
mov
or
mov
and
stos
lods
and
mov
dec
call
and
adc
dec
imul
aam
push
jo
jns
int3
cmp
or
dec
repnz
loopne
insb
aam
cmp
sbb
add
sti
jnp
fs
mov
adc
fmull
inc
xchg
push
cwtl
fstps
mov
sub
sbb
xor
push
dec
xor
jo
enter
and
mov
jle
add
cmp
call
sbb
add
adc
jge
jnp
inc
xlat
aaa
jae
shlb
pop
pop
aas
add
je
xchg
dec
dec
sbb
pusha
cltd
jmp
push
dec
xchg
pusha
push
call
or
mov
in
pop
mov
cmp
dec
nop
inc
dec
enter
scas
and
js
jae
add
movsl
jmp
push
les
pop
sbbb
cmpsb
lcall
popa
add
imul
fabs
shl
fs
add
lahf
mov
mov
mov
js
adc
mov
clc
shrb
loopne
push
inc
dec
nop
divl
insb
mov
in
cmp
andb
dec
enter
popf
iret
push
or
dec
or
mov
pop
add
out
bound
dec
dec
popa
je
jno
xchg
ficompl
loop
lret
pop
and
add
mov
xchg
cmp
gs
out
mov
mov
dec
cmp
clc
stc
add
andl
add
xor
mov
pop
movsl
ds
loopne
ret
push
adc
jo
pop
and
push
mov
cmp
pop
mov
call
shl
add
sub
fdivrl
add
shrb
or
loope
sbb
mov
call
jp
or
lds
or
cmp
add
mov
xlat
mov
out
rcrl
repz
pop
mov
aaa
in
and
and
lcall
or
mov
movsl
push
ljmp
or
test
add
mov
enter
add
or
sbb
push
mov
js
imul
aam
in
pushf
mov
add
xchg
shll
fwait
cld
inc
loopne
push
inc
dec
and
mov
push
pop
orb
or
mov
add
push
sbb
add
ljmp
and
adc
in
lea
das
jb
or
mov
push
inc
add
adc
xor
add
jg
loop
pop
and
arpl
sub
or
mov
and
sti
les
sub
stc
cmpsl
mov
cwtl
lret
jecxz
shll
andb
xchg
add
mov
add
inc
add
add
mov
push
jecxz
cmc
dec
or
mov
pusha
cmp
xor
imul
xor
in
pop
sbb
movsb
out
nop
cmc
adc
sbb
pop
cmp
xor
xchg
pushf
add
mov
clc
xor
in
push
mov
sub
cmp
push
cmp
mov
addr16
adc
add
in
or
xchg
mov
fmull
fsubrs
add
popa
xchg
cmp
xor
aaa
popf
cmpsl
mov
and
divl
fsubrs
pop
or
loop
mov
adc
ror
jge
jae
arpl
and
ljmp
aam
xor
sbbb
xchg
test
cmp
and
loop
mov
pop
push
add
cmp
mov
and
cmp
cld
add
scas
adc
inc
fsts
loopne
inc
jecxz
lcall
shll
xchg
lret
and
sarl
add
loope
or
sbb
add
add
lcall
jl
adc
enter
xchg
scas
addr16
add
dec
iret
popf
arpl
sbb
dec
or
xchg
add
pushf
enter
call
shl
pusha
adc
mov
out
stc
or
sbb
fsts
add
cmpsl
and
mov
adcb
xchg
jmp
gs
add
sub
cwtl
insl
add
mov
fstpt
or
pop
cli
add
pop
les
movsb
fcmove
jle
fucomi
mov
dec
add
push
mov
jp
les
inc
sub
pusha
add
icebp
sbb
jmp
jne
je
xor
add
adc
scas
rol
jmp
xor
xchg
test
pop
cmp
sbb
jbe
adc
leave
mov
or
and
mov
cmp
icebp
xlat
sti
push
adc
push
add
ljmp
jae
in
add
jmp
push
ret
adc
repz
std
mov
mov
push
sbb
icebp
mov
into
daa
or
mov
xor
das
lret
sub
mov
inc
push
adc
scas
push
mov
scas
mov
inc
hlt
test
movsl
cmp
rclb
dec
jge
push
adc
test
add
data16
int
mov
incl
xchg
push
inc
fidivrs
add
mov
lods
sub
push
add
ret
ja
cmpsl
nop
xor
or
and
push
push
dec
adc
jp
pop
add
and
mov
adc
pusha
pop
movsl
int3
mov
cmp
pop
add
sub
out
pusha
insb
sar
cmp
adc
push
ljmp
movb
ds
push
loope
dec
aam
and
gs
pop
pop
dec
mov
dec
add
ss
sub
pop
dec
push
sub
sti
mov
daa
leave
jl
jg
xchg
push
pop
cmp
pop
mov
mov
or
int
xchg
and
mov
or
xchg
cltd
icebp
neg
paddq
fdivl
xchg
xchg
nop
jb
sub
lock
adc
std
sbb
mov
push
nop
jb
adc
or
fists
psubb
int3
inc
add
xchg
scas
add
insb
jecxz
rolb
xor
xchg
mov
imul
pop
dec
adc
pop
inc
cwtl
sbbl
pop
inc
out
rcl
aas
in
jb
push
iret
push
dec
outsl
lcall
test
insb
inc
gs
and
jmp
sub
sub
loop
pop
pushf
mov
inc
repz
sub
scas
loop
jae
mov
mov
icebp
add
in
insl
pop
movsb
add
mov
popl
popa
lods
lock
cmp
xor
test
jmp
xchg
pusha
push
jmp
add
ja
cmp
jne
fidivrs
cmp
add
xchg
jae
in
pop
add
loop
adc
add
cmc
jecxz
add
mov
je
aaa
xlat
pop
test
mov
cmp
sub
pushf
in
mov
or
sbb
sub
das
or
mov
xchg
adc
or
mov
add
mov
sahf
inc
rcrl
push
dec
lahf
shll
mov
rcrb
add
mov
xor
movsb
add
inc
pop
adc
popa
pushf
xor
fldl2e
divps
cltd
pop
fsub
jp
xchg
cmc
jmp
xchg
aam
push
xor
or
pushf
inc
pusha
and
aaa
xor
mov
mov
ret
fsubs
add
and
lea
adc
add
insl
test
rorl
daa
out
lods
sbb
nop
fistps
pushf
mov
arpl
inc
clc
mov
cmp
or
mov
aad
jecxz
sar
mov
inc
addr16
add
cmp
fiadds
xchg
hlt
pop
rol
adc
jno
add
scas
movsb
mov
inc
pop
out
dec
pop
sbb
fcmove
pop
and
add
lods
push
xchg
mov
push
shr
jo
pop
popf
xor
int3
je
fstps
xor
popf
loopne
push
shll
xor
ret
cmp
and
add
jmp
in
add
sti
mov
nop
xchg
push
mov
mov
loop
xchg
out
in
push
clc
ss
jmp
gs
flds
adc
clc
mov
loope
loopne
loopne
adc
cmp
sahf
sbb
add
in
cwtl
push
inc
pusha
lret
add
fldl
shll
add
inc
xchg
clc
negb
sbb
sub
xor
cmc
incl
pushf
mov
and
inc
jle
pop
and
and
shlb
and
push
push
adc
inc
sub
dec
incb
aam
push
cli
cmp
adc
mov
adc
ds
cmc
jnp
cmp
push
push
daa
rcrb
mov
push
test
or
fwait
mov
imul
aad
or
add
pop
outsb
in
icebp
xor
js
add
pop
scas
push
mov
cmpb
fiadds
ja
add
mov
add
mov
sbb
lods
xor
fsub
pop
fisubl
add
cmpl
mov
push
add
xor
mov
scas
xor
adc
stos
add
pop
push
fistpl
popa
mov
mov
mov
pop
mov
imul
add
mov
fisubl
jb
cmp
out
sub
add
test
outsb
fisttps
orl
add
movsl
dec
mov
cwtl
pop
xor
jno
mov
mov
lea
fiadds
jmp
fsubrl
add
mov
cmp
mov
xorb
adc
jg
cwtl
fbld
mov
dec
jp
push
mov
pop
hlt
add
jecxz
or
jmp
cmp
or
sbb
imul
add
inc
mov
sub
rclb
leave
sbb
push
jle
lret
adc
or
mov
xor
mov
jns
adc
mov
push
cmp
cwtl
push
scas
jb
in
cmc
fiaddl
cmpl
jg
add
mov
mov
cmp
les
addb
stos
call
cmp
inc
or
lret
push
add
or
pop
inc
add
mov
mov
xchg
or
cs
test
add
ret
add
jle
lahf
adc
movsl
jp
fbld
rclb
mov
mov
jbe
cmp
fdiv
push
xchg
xchg
add
in
pop
push
insb
mov
push
sbb
xchg
add
pop
sbb
notl
and
pop
mov
xor
rcl
add
sbbb
ds
in
in
lock
mov
xchg
mov
cmp
jp
shrb
nop
cmova
subb
insl
xchg
adc
out
or
es
out
call
add
cmpsl
sub
cmp
jg
test
jge
mov
cwtl
dec
add
shlb
mov
pusha
imul
inc
xchg
push
fwait
add
lret
lahf
adc
jbe
scas
sub
cmovl
and
sbb
xchg
into
pusha
lds
add
ret
lahf
js
mov
xor
sub
out
cmp
mov
xchg
sbb
push
add
es
movsb
jno
and
ret
into
out
das
add
pusha
and
in
ss
cmp
fadd
jb
pop
arpl
jnp
adc
mov
dec
lods
jl
sbb
push
cmp
sub
xchg
jo
add
loop
or
fadds
jge
sahf
lods
enter
and
pop
call
fs
or
xor
sbb
push
jg
and
pop
sub
test
mov
int
cmc
cmpsl
cld
or
push
add
sahf
sarb
loope
jo
movsb
stc
loopne
and
jb
add
bound
shlb
inc
sub
outsl
int3
jg
aam
or
into
and
rcr
insb
fiaddl
xor
cmc
out
mov
add
and
add
mov
mov
jo
nop
loop
jg
add
ret
cmovs
add
add
fmul
jo
popa
shlb
repz
ret
stc
and
aad
lods
adc
push
scas
push
xor
js
pusha
push
addr16
pop
in
lods
jecxz
add
push
or
movsl
lret
cmp
outsl
stos
push
dec
std
jae
xchg
ror
fisttpl
mov
cld
push
outsl
aaa
mov
pushf
add
add
dec
cli
hlt
push
push
adc
mov
js
call
xor
leave
mov
adc
fiadds
rol
stos
shld
mov
push
testb
stos
daa
stos
loopne
jne
scas
fsubrs
push
xor
dec
test
mov
mov
cmp
inc
std
cmp
sbbb
outsb
sbb
push
jo
clc
or
int3
jp
sti
xchg
inc
clc
sbb
add
mov
aas
fdivrs
add
lcall
pop
push
rol
inc
xchg
add
mov
int3
movsl
aad
add
add
les
adc
insb
add
push
add
cwtl
test
sbb
xor
sbb
cmp
sub
popf
mov
int3
and
lret
and
xor
pop
addr16
std
mov
add
aam
outsb
jecxz
cwtl
and
leave
mov
in
iret
inc
add
push
lcall
stos
sbb
out
pop
ljmp
adcl
shlb
rcrl
add
pop
sub
lret
xchg
dec
pop
inc
jg
dec
out
mov
iret
je
sub
je
add
lds
cli
daa
int3
call
scas
dec
push
jne
cwtl
or
xchg
pop
inc
mov
cmp
push
aaa
mov
push
cld
or
jnp
cld
fildll
paddsb
in
mov
js
pusha
addl
jp
jae
mov
adc
jl
ret
dec
inc
clc
inc
flds
scas
or
shl
imul
add
mov
ds
pop
das
and
lret
add
and
xorb
mov
jp
add
jbe
test
mov
push
or
sarl
mov
mov
or
aaa
push
push
mov
daa
insb
imul
and
or
mov
testb
daa
lahf
out
push
push
mov
js
int3
or
lods
icebp
add
ret
shrb
hlt
add
xor
out
xchg
mov
int3
ds
push
scas
push
jns
jp
sarl
cmpsb
push
inc
aad
addl
add
xorl
fdivrl
clc
sub
movl
lret
or
add
test
xchg
mov
loope
cld
mov
cmpsb
jbe
add
mov
add
imulb
test
out
xchg
push
sub
dec
add
inc
mov
clc
iret
pop
jbe
add
std
roll
jno
pop
mov
mov
mov
push
adc
in
je
mov
cmpb
sbb
add
js
test
dec
lods
adc
leave
sbb
int
jno
and
jge
popf
add
and
aas
inc
mov
aam
add
lds
add
stos
cli
clc
add
push
push
enter
in
ljmp
push
jo
cltd
add
jg
imul
movsb
xorb
ret
mov
loope
sub
das
add
mov
pop
lods
cmc
add
roll
in
cmp
rcrb
push
jno
cmp
ss
out
inc
nop
mov
popf
clc
add
pop
sub
mov
repnz
and
add
lret
leave
mov
push
sub
pop
mov
cld
sbb
add
lahf
into
js
std
das
dec
rcll
rcrb
fwait
rcll
jle
dec
lahf
das
loopne
mov
hlt
pop
add
jp
jns
add
pop
cmp
mov
cmp
rcl
and
or
xchg
mov
and
or
mov
and
push
xor
ss
in
add
pop
pop
or
add
jne
jl
nop
push
add
jmp
mov
pop
add
fbld
cmp
and
nop
fnstcw
inc
ficompl
add
mov
addl
dec
and
in
push
mov
add
adc
xchg
mov
add
add
lods
jb
add
jnp
dec
mov
xchg
add
push
jae
rorl
add
xchg
inc
or
loopne
cs
add
lods
int3
pop
out
imul
push
mov
xchg
or
sar
and
cmp
out
sbb
mov
fsubrp
or
and
rcrb
in
lcall
or
adc
pop
cmpsb
fwait
in
mov
call
orb
sbb
add
outsl
in
jmp
push
xchg
insb
push
ljmp
sub
add
add
ds
adc
scas
mov
movsl
inc
mov
xor
ljmp
push
add
clc
cmc
push
mov
roll
jmp
sbb
sbb
xor
and
pop
pop
stos
push
mov
jno
xchg
push
fadd
xchg
leave
pusha
fmuls
sbb
fwait
cmpsl
roll
lds
mov
or
add
cmp
sub
mov
pop
mov
jne
inc
aas
imul
sbb
loopne
fadds
sbb
test
adc
xor
cmp
iret
cwtl
in
mov
add
ret
jmp
sub
jns
mov
and
cmp
xchg
mov
stos
add
xchg
loop
sbbl
loop
or
movl
add
mov
cmp
ds
cmpb
sbb
andb
jmp
inc
mov
add
add
or
jnp
inc
int3
sub
leave
add
xchg
movb
fcmovnbe
lcall
ja
fnstcw
pop
add
test
leave
cmp
cwtl
mov
xchg
jo
icebp
imul
call
lahf
add
adc
inc
sub
or
sbb
in
andb
xor
jge
jg
cld
push
sbb
pop
adc
mov
pushf
pop
mov
and
sub
fsubs
movsb
add
or
pop
cltd
iret
sbb
std
incl
insl
xchg
into
sbb
jns
xchg
pop
mov
hlt
sbb
mov
add
jecxz
fnstenv
cmp
ret
mov
inc
mov
push
add
cmp
pop
rcrl
pavgw
push
or
repnz
pushf
sti
and
loope
xor
nop
jb
adc
dec
in
cwtl
mov
pop
add
inc
sbb
hlt
or
add
and
out
pop
in
add
in
xchg
cli
into
shlb
fadds
sbb
cmc
int
dec
scas
imul
mov
subb
arpl
dec
sbb
push
add
mov
xchg
sbb
mov
xlat
sub
fs
aaa
xor
out
shrl
addb
data16
iret
push
dec
push
mov
xor
sub
add
or
mov
or
test
push
and
imul
es
mov
jle
and
mov
or
rol
scas
adc
lea
mov
ds
xlat
out
leave
cli
decl
ror
pop
add
das
mov
add
jp
push
add
lcall
adc
pop
add
jae
add
add
mov
or
mov
mov
sbb
pop
sbb
loop
dec
std
ja
mov
add
out
adc
inc
lock
jno
dec
sahf
adc
nop
and
mov
inc
testb
jecxz
ja
sbb
sbb
ret
jb
loopne
push
mov
and
movd
pop
cmpsl
mov
subl
out
xchg
pop
pop
pop
ror
pushf
or
je
lahf
add
in
sarl
cmp
push
mov
push
jmp
jae
sbb
es
dec
add
ss
repz
xchg
testl
cwtl
les
dec
add
incb
pusha
or
add
push
mov
adc
mov
fld1
pop
add
stos
aad
shlb
jno
add
sub
cmp
nop
inc
cmc
adc
add
xlat
mov
fisubs
push
dec
and
or
mov
adc
adc
sbb
xor
cmp
fdivrs
add
pcmpgtw
mov
aad
mov
or
out
mov
sbb
popa
scas
fadds
imul
xchg
cmp
add
ds
sub
or
mov
or
fsubrp
lods
push
pop
lock
inc
and
cmp
jmp
add
mov
mov
sub
dec
xor
sarb
add
stos
cmp
sub
mov
add
mov
or
imul
fidivrs
popw
mov
js
mov
mov
addl
add
lahf
enter
push
inc
fmuls
out
dec
mov
add
xor
adc
add
xor
pusha
imul
in
jo
adc
add
push
add
mov
mov
out
sub
add
inc
pop
mov
test
mulb
dec
je
add
int
push
inc
mov
lret
enter
mov
cmp
pop
aas
add
lret
clc
xor
pop
pop
lahf
lret
xor
adcb
inc
clc
pslld
mov
inc
sbb
mov
jle
mov
adc
in
std
insb
push
fistpl
hlt
pushl
add
cld
out
jmp
out
aam
outsb
stc
mov
sti
je
and
jne
push
push
add
je
mov
add
jg
das
add
clc
xchg
adc
in
mov
push
out
add
and
test
push
into
je
xchg
jae
mov
popl
cmp
xor
in
hlt
lcall
mov
rcrb
pop
faddl
stos
scas
ds
cmp
mov
cli
sahf
adc
ss
shlb
imul
push
dec
push
add
mov
ja
jmp
add
jns
cwtl
xor
mov
lods
sub
test
int3
push
inc
sahf
nop
mov
shrb
bound
mov
sar
jne
jle
pop
jb
add
scas
pop
pop
rcll
gs
or
nop
jg
xchg
sub
jl
push
insb
add
sbb
std
adc
out
xor
cli
mov
cmp
and
enter
fcompl
add
repz
adc
test
mov
setg
aam
dec
add
orl
mov
pop
imul
mov
add
xchg
loop
add
mov
andl
repnz
inc
stos
fmull
jl
sbb
jne
addr16
sbbb
movl
cltd
add
test
loope
repnz
jae
lcall
cmp
roll
cmp
aaa
jae
fmul
cld
movhps
addr16
mov
sbb
adc
cli
adc
push
xchg
je
adc
das
ljmp
fwait
sbb
cmovl
pop
test
jg
cmp
or
pop
push
lret
or
dec
fcompl
push
cmp
push
outsb
cmp
hlt
mov
gs
adc
or
push
rolb
mov
push
or
lods
aam
cmc
test
popf
push
mov
pop
add
jp
inc
or
push
clc
loope
in
push
insb
and
out
adc
inc
add
add
push
add
pushf
jnp
daa
lds
inc
cmp
xlat
les
inc
add
dec
or
add
and
fnstenv
mov
fs
add
jle
sub
in
shlb
mov
dec
sarl
sub
xor
add
add
jbe
add
scas
outsb
mov
push
ret
movsl
loop
and
aad
add
test
adc
add
scas
orb
adc
xchg
pop
push
cltd
or
arpl
mov
add
push
add
push
inc
fisubs
mov
lret
outsl
mov
mov
in
push
cmp
ret
cltd
loopne
mov
xor
addr16
push
out
arpl
add
pop
in
pop
mov
pop
lret
repnz
fcomip
add
cmpsb
rcll
popf
xchg
xchg
inc
pop
push
rolb
pop
adc
add
ja
xchg
je
rol
xchg
add
iret
stc
cwtl
lea
add
jo
jae
pop
mov
adc
sub
in
add
add
lret
dec
imul
fcmovb
loop
add
adc
jcxz
push
pop
mov
cmp
out
lea
inc
mov
fadd
pusha
push
shl
add
sub
icebp
imul
out
std
push
add
jbe
inc
mov
stos
push
arpl
enter
fxch
xor
push
pusha
addb
push
out
jo
fsubrs
hlt
add
arpl
mov
mov
cmp
cmpl
mov
jae
jge
ret
adc
mov
xlat
test
je
jne
add
in
cmc
xchg
add
add
push
loopne
mov
add
test
cltd
pop
aad
addb
fwait
xchg
jbe
fistpll
dec
ds
cmp
fisubs
jno
dec
cmp
mov
je
cmc
pop
mov
push
test
push
adc
aad
enter
add
mov
roll
jp
inc
mov
ljmp
ss
cmp
dec
gs
or
jp
and
sub
sub
fiadds
push
xchg
hlt
testb
ret
test
pop
ljmp
pop
in
das
inc
loop
cmpsb
sub
pop
nop
cmp
stos
roll
lock
inc
pop
or
add
ret
dec
adc
jge
stos
mov
or
mov
and
int3
gs
jbe
cmpl
faddl
xor
adc
inc
mulb
shl
stos
and
xor
and
xchg
rol
in
cli
cmp
lock
jg
mov
add
je
mov
in
sub
adc
push
test
inc
rcrb
imul
add
or
inc
stos
add
loop
pop
movsb
jo
mov
push
cmp
sub
dec
inc
cmp
adc
dec
shll
adc
xor
pop
loope
add
bnd
push
sub
mov
jg
test
push
or
inc
in
cwtl
mov
push
xor
push
sub
jns
cmc
and
mov
jbe
sbb
shll
incb
push
imul
push
mov
add
push
xlat
adc
pop
or
fxch
mov
cwtl
test
xorl
jae
stos
sti
inc
fs
mov
push
subb
out
icebp
imul
or
les
xchg
or
mov
add
imul
dec
in
mov
push
popf
nop
int3
add
dec
xor
inc
loopne
mul
and
add
shl
jo
mov
js
ret
je
pop
outsb
sub
icebp
les
or
inc
cwtl
add
movsl
mov
add
push
ficoms
cmpsl
rcl
jmp
cmp
cli
mov
adc
push
into
mov
mov
popa
jp
push
test
movsb
adc
mov
and
mov
fcoms
push
sbb
scas
rcll
out
adc
sbb
incb
pop
sbb
mov
or
jo
rolb
dec
jnp
jle
add
inc
mov
jae
in
loopne
pusha
mov
sbb
sti
xchg
jne
push
iret
sub
xchg
pop
add
jno
test
mov
pop
mov
dec
dec
mov
or
add
ja
push
cltd
xor
sbb
push
stc
dec
lds
jmp
xchg
aas
mov
add
rorl
xchg
add
and
jg
and
push
int
sbb
and
clc
aas
pop
cmp
cmpb
xor
pusha
lea
cmpsb
cwtl
and
add
lock
push
add
inc
sbb
add
push
xor
addl
adc
gs
jecxz
dec
cld
dec
jg
mov
sbbl
pusha
scas
or
add
adc
dec
movsl
or
movsb
mov
aam
mov
lock
pop
jnp
cmp
in
leave
push
add
mov
mov
mov
cmp
xor
popf
jecxz
xchg
fadds
mov
and
sbb
jno
pop
pop
adc
pop
sub
das
jp
inc
ljmp
out
sub
or
mov
or
sub
popa
jle
in
shlb
icebp
xor
push
add
xlat
jno
pop
jp
repnz
dec
sahf
push
stc
test
add
add
push
jb
cmp
mov
call
xor
fsubl
rolb
xchg
push
pushf
mov
xorl
imul
jg
xor
bound
pop
arpl
xlat
fisubs
push
clc
add
push
sahf
jl
mov
dec
sub
mov
add
pop
jmp
dec
stos
imul
addl
add
insb
cmp
xor
xchg
add
mov
ss
movsb
add
jne
sti
mov
cmpsl
push
add
fwait
test
subl
sar
jle
mov
mov
fwait
mov
push
pusha
movl
xchg
mov
inc
and
jns
repnz
enter
add
cmp
pop
jmp
sti
clc
adc
dec
jne
arpl
push
es
fcomi
cwtl
push
push
push
daa
inc
mov
inc
add
cltd
xchg
dec
push
jnp
lods
add
adc
dec
sbb
repz
dec
int
mov
jl
mov
cld
sbb
fadds
mov
xor
rclb
mov
maxps
loopne
push
xor
aam
mov
mov
inc
repnz
add
stos
test
add
xchg
mov
or
int3
jecxz
add
jl
jle
mov
add
ljmp
test
mov
sbb
dec
add
dec
ds
xchg
std
push
lock
pop
add
out
adc
or
loopne
xchg
add
sbb
add
insb
repnz
add
filds
mov
loopne
jecxz
mov
pop
add
std
lret
pop
test
push
sub
xchg
lea
pop
leave
pop
lret
sbb
ss
ret
sarb
add
in
mov
dec
mov
test
adcb
fisubrs
or
insb
enter
inc
xor
add
ds
pop
jle
aam
cmpsl
ret
xor
xchg
bnd
test
negl
jmp
jo
lret
push
into
outsl
adc
and
add
das
add
fisttpll
sub
dec
add
mov
faddl
call
lods
mov
ds
cwtl
int3
jecxz
mov
xor
insb
ja
subb
add
add
add
pusha
repnz
mov
sbb
mov
mov
fiaddl
push
mov
adc
dec
push
cs
int
cmp
enter
fnstcw
fnsave
lods
das
cmpsl
les
fstpt
fdivs
call
mov
inc
jbe
je
int3
dec
pushf
stc
lcall
mov
ret
xor
outsl
inc
sbb
dec
dec
stos
aam
loopne
scas
xor
add
cmp
xor
xchg
decl
sbb
pusha
or
mov
scas
or
clc
das
jge
push
je
addr16
dec
fcoms
and
xor
mov
sub
sbbb
push
cmp
mov
pop
add
pop
iret
stos
pop
rclb
add
mov
lcallw
daa
mov
rolb
popa
and
xchg
cs
push
scas
int
and
test
aam
ret
lds
and
mov
jl
pop
fisubs
lods
add
and
inc
inc
lahf
shl
aaa
loop
rolb
pop
sub
cmp
fstps
jno
or
pop
and
dec
sbb
js
cmp
add
subl
pusha
mov
fs
xchg
and
arpl
add
xor
push
inc
in
inc
sub
loopne
sub
shrl
shr
loope
andb
jle
dec
hlt
add
dec
inc
and
pop
mov
mov
dec
add
pop
fmull
int
mov
pop
push
scas
add
pop
inc
dec
push
adc
lahf
add
add
mov
inc
push
faddp
out
repnz
dec
push
add
and
pminsw
add
test
add
cwtl
divl
mov
cmp
add
push
push
sub
add
repnz
negb
mov
je
mov
mov
roll
in
mov
stc
clc
ds
popa
pop
int3
bound
jb
adc
add
push
cmp
push
adc
add
in
vpaddw
fidivl
in
push
lret
inc
daa
mov
adc
sub
imul
mov
dec
and
cwtl
loope
add
push
sub
xchg
add
mov
sahf
pop
sbb
inc
push
ret
cmp
jl
or
xor
add
pop
jo
mov
clc
mov
lret
cmc
xchg
in
mov
cmp
lock
iret
cmp
fcompl
cwtl
mov
mov
add
adc
sbb
aaa
dec
pop
scas
in
add
pushf
mov
push
add
shll
add
push
lret
jo
xor
mov
jmp
push
test
inc
loop
add
jmp
mov
ja
add
addr16
xchg
push
rcl
mov
pop
or
sub
push
push
hlt
icebp
or
add
arpl
push
add
pop
sub
loop
mov
incb
idivl
les
mov
add
or
sbb
inc
out
inc
add
pop
or
add
jno
out
cmp
dec
adc
cmp
jge
mov
pop
roll
rorb
adc
add
or
popa
sub
sbb
and
fdivl
mov
test
push
xchg
adc
sbb
sbb
fdivl
sub
js
jb
mov
movsl
jne
add
imul
jo
in
xchg
call
aas
lea
push
add
sbb
shlb
mov
push
test
inc
shlb
add
cwtl
or
shrb
jge
lret
adc
jb
xlat
dec
mov
testb
pop
in
adc
loope
jmp
add
loopne
bound
in
push
ljmp
cmp
inc
mov
adc
inc
mov
arpl
add
mov
xchg
int
pusha
stos
sbb
das
pop
xor
cmp
cmp
clc
mov
or
and
out
lea
jo,pn
rolb
enter
loop
add
lahf
and
cmp
and
std
mov
add
or
fistl
pop
pop
add
je
pop
repnz
lock
dec
jmp
xor
jnp
les
lahf
jae
xor
arpl
push
xorb
xchg
xor
in
push
fstpt
and
jge
or
cmpb
stos
mov
out
inc
imul
add
ficoms
mov
cltd
cmpb
shlb
xchg
push
insb
xchg
push
add
icebp
jb
push
mov
aaa
sbb
iret
imul
push
xor
jle
inc
add
lock
sub
mov
fs
mov
xchg
add
je
or
mov
aaa
add
and
vcvttsd2si
mov
add
imul
jae
into
popa
ljmp
shrb
inc
add
orb
movsl
rolb
fnstsw
clc
mov
mov
add
lods
mov
cld
adc
add
pop
mov
mov
add
or
or
inc
push
push
mov
icebp
insb
dec
js
jbe
add
or
push
inc
add
loope
adc
into
mov
mov
out
mov
or
mov
mov
mov
loopne
cwtl
fnsave
leave
sbb
dec
outsb
inc
add
adc
mov
add
jle
push
pusha
fwait
cs
sub
cwtl
add
adc
jbe
add
sbb
and
pop
dec
outsb
jl
and
adc
out
fstps
inc
push
lret
inc
mov
cwtl
mov
das
cltd
add
nop
pop
outsl
mov
inc
xchg
dec
jb
out
cltd
cmp
pop
incl
cwtl
mov
and
add
adc
push
lods
and
and
dec
pop
add
jo
les
fnstenv
pusha
add
out
lret
mov
fnsave
add
sahf
mov
fsubl
push
push
subb
add
adc
shl
call
and
imul
add
xor
adc
pop
shl
add
mov
arpl
imul
sbb
mov
shll
daa
inc
mov
push
xor
push
nop
sub
cmp
push
mov
push
mov
mov
mov
mov
mov
xor
pop
push
push
cs
lahf
in
addb
pop
inc
aam
push
jns
fwait
jmp
xchg
es
testb
jae
stc
add
add
stos
adc
xor
ljmp
out
mov
add
ret
icebp
jae
or
sbb
stos
jbe
not
fadds
cmpsl
lock
clc
int
insb
dec
faddl
xchg
pop
cmpsb
cld
mov
js
pusha
mov
into
jmp
pushf
mov
inc
loop
or
popf
add
add
js
xchg
loopne
insb
add
mov
les
mov
mov
xor
cmp
in
add
jle
outsl
xor
inc
cmpsl
scas
jge
add
mov
enter
inc
add
lock
adc
mov
addr16
sbbb
jg
cs
pop
push
jmp
rclb
mov
into
lret
xlat
add
mov
incb
movsl
loop
jns
dec
dec
jo
inc
add
daa
mov
add
fsubl
inc
lods
inc
mov
addr16
enter
xchg
sti
mov
add
dec
xor
cmc
jg
add
gs
cmp
and
inc
jp
xchg
or
add
mov
call
sbbb
and
or
add
jmp
mov
adc
pop
int3
movsl
aad
cmp
sbbb
jle
dec
pop
push
sbb
add
ret
mov
xor
dec
lahf
lock
andb
mov
dec
movsb
int
mov
shrl
insb
cmp
jg
subb
xchg
nop
dec
pop
shlb
insl
adc
inc
ljmp
jae
fcmovu
cmpb
or
push
pusha
aas
mov
sahf
xor
adc
and
add
ret
cmp
jb
lods
add
inc
sti
lock
cmp
jne
pop
mov
sub
lea
add
es
loopne
mov
inc
test
icebp
add
xor
loopne
add
out
movsb
jmp
stos
cld
les
fadd
andl
xchg
sbb
cmpsl
call
mov
adc
in
mov
add
mov
fsub
pop
dec
insl
add
clc
dec
pop
lds
lods
xchg
push
or
mov
or
or
adc
jo
dec
xchg
in
sbb
adc
lods
add
push
je
lods
lfs
mov
ss
add
fsubrl
mov
ret
cmp
loopne
addl
insb
repnz
sub
and
and
fildll
add
sub
dec
inc
and
adc
dec
add
insl
test
add
xlat
add
xchg
insb
mov
ficoml
mov
add
push
outsb
test
or
mov
mov
add
xchg
jno
outsb
cmpsl
pop
ret
cmp
or
cld
adc
jmp
clc
lods
push
push
cmpsl
in
and
mov
add
iret
or
mov
mov
sub
jb
and
add
lcall
sbb
push
mov
pop
rcrl
lcall
mov
push
push
mov
js
add
and
into
test
add
mov
mov
xchg
dec
out
aaa
mov
pop
push
pop
jg
xlat
les
xchg
out
movsb
and
sbb
daa
or
test
and
pushf
data16
and
push
popf
in
frstor
dec
pusha
outsb
mov
ret
ljmp
xor
add
jae
sub
dec
cmp
add
push
aas
push
dec
iret
sub
lock
jg
shll
stos
lds
xchg
orl
mov
inc
je
mov
sti
scas
std
call
cmpsb
add
xchg
jns
pop
jb
pop
hlt
cmp
or
fcmovbe
lcall
faddl
aaa
testl
pop
pop
pusha
fcoms
adc
add
xor
sub
fsubrl
push
in
call
dec
mov
add
pusha
mov
pop
sub
shrl
loopne
jp
fcoml
pop
pop
add
mov
sub
cmp
push
xorb
repz
decl
and
cwtl
repnz
cmp
xchg
add
add
inc
push
inc
jno
clc
subb
clc
push
and
dec
add
jns
push
add
sub
add
ljmp
pusha
or
xchg
jp
push
and
add
bound
in
push
xor
or
pop
pop
stos
lret
fbstp
shl
imul
outsl
jecxz
jge
loopne
aam
pop
or
outsb
lcall
cltd
dec
jp
pop
movsl
pusha
nop
aas
xor
fistpl
push
jne
jnp
iret
xor
dec
add
mov
sahf
adc
mov
clc
sub
jge
ss
outsb
jne
and
sub
pop
test
out
sahf
stos
and
test
hlt
inc
sbb
outsb
scas
xlat
fadds
cwtl
mov
loopne
faddl
pop
inc
lret
cmp
ds
mov
stc
rorb
add
pop
mov
jb
add
jo
cli
movsl
add
loopne
dec
out
orb
add
cmp
and
fldl
aas
add
xchg
mov
push
scas
hlt
dec
ds
shlb
pop
sbb
nop
lcall
insb
fld
push
cli
add
dec
inc
add
push
jp
xor
xchg
shrl
idivl
fldl
mov
and
add
mov
mov
add
jne
adc
jmp
add
mov
push
hlt
movb
or
add
push
sbb
push
mov
outsl
mov
add
sbb
mull
cmpsb
popf
cmp
push
cld
inc
jmp
pop
div
add
or
bound
loop
push
adc
js
lcall
call
out
push
add
sti
inc
mov
addb
xorl
pop
pop
subb
xchg
pop
xor
lea
pop
inc
sarb
dec
addl
sub
push
xchg
daa
sub
add
in
nop
push
add
rolb
cmp
jbe
mov
mov
jmp
jne
pop
add
shlb
scas
call
hlt
or
sub
jp
jle
les
daa
fs
push
xor
aam
je
sbb
not
repz
jno
pusha
xchg
lock
insb
ja
std
lock
adc
mov
xchg
lahf
leave
inc
daa
sbb
mov
scas
pusha
std
rcrb
push
inc
out
leave
cmpb
mov
test
mov
add
mov
or
add
jnp
cmc
fdivs
pop
add
cld
inc
cli
scas
cmpsb
or
rorb
shll
lret
cmp
hlt
add
push
js
pusha
adc
popf
push
ljmp
adc
test
sbb
sbbb
test
test
sub
push
add
clc
movsb
scas
into
aad
test
out
xorl
lods
cmp
dec
dec
sbb
push
cmp
scas
stc
cld
and
dec
mov
lea
adc
shrb
verr
das
fs
jl
mov
pop
add
lock
jmp
popf
push
rolb
seta
dec
sub
jae
add
les
add
pusha
stos
adc
out
push
pop
dec
xchg
test
sub
jne
jne
add
xchg
ljmp
cmp
adc
xchg
cli
and
ss
bound
inc
shrl
aam
add
jnp
gs
shrb
add
lret
cmp
dec
std
out
sub
lahf
xchg
test
sbbb
or
pop
xor
add
add
aam
inc
inc
jne
fwait
cli
cs
mov
mov
daa
pop
fbstp
push
jnp
cmp
iret
or
xchg
dec
popa
adc
lret
xchg
fs
push
adc
ljmp
add
jae
add
push
outsl
xchg
and
jne
cmp
xor
adc
roll
mov
aas
add
sbb
in
push
xorl
je
cmp
clc
movsl
mov
sub
test
and
add
inc
mov
leave
add
imul
push
movsl
xchg
aam
jb,pt
movsb
sub
xor
rcrl
test
and
repnz
leave
icebp
cltd
out
sbb
add
push
pop
stc
js
push
push
out
and
inc
lret
jne
insl
xchg
add
xchg
incb
insb
and
test
mov
pop
pop
and
mov
xor
fscale
dec
outsb
hlt
pop
pcmpeqd
inc
iret
inc
add
xchg
pop
mov
add
fs
jp
sbb
adc
repnz
xchg
fisttps
movl
das
and
adc
mov
movsb
sub
es
pop
cmp
in
cmp
inc
sarb
popa
xchg
add
mov
sub
addb
jae
mov
subl
addb
xor
add
icebp
add
dec
stc
jmp
dec
in
pmulhuw
inc
push
sarb
sbb
loop
adc
rcrb
nop
jno
fcompl
xchg
pop
loope
repz
mov
rorb
jae
xor
add
and
push
push
push
sbbl
shl
push
adc
add
outsl
push
jecxz
in
push
aad
adc
mov
lret
jnp
iret
cltd
cmp
pop
push
mov
pop
mov
jg
test
cs
leave
sub
test
in
xor
icebp
testl
js
lock
fsubrp
xchg
pop
pop
aas
push
mov
push
inc
jge
xchg
dec
inc
mov
mov
stos
insl
mov
dec
jg
sub
add
or
mov
fs
add
jecxz
popa
icebp
mov
pop
jno
xchg
xorb
jb
loop
fwait
add
mov
push
add
in
in
mov
jge
pop
inc
push
dec
xchg
or
nop
movsb
mov
mov
orl
push
divl
xchg
add
cmp
pusha
into
sub
cs
cld
in
push
aam
leave
dec
push
ja
clc
mov
sub
mov
add
push
popa
in
jg
or
push
sbb
scas
or
inc
mov
push
xor
xlat
lea
call
clc
enter
add
push
dec
push
pop
clc
cld
xor
xor
loope
les
sbb
shrl
add
mov
cmp
mov
frstor
mov
dec
sbb
mov
js
int3
jbe
dec
push
cmp
adc
mov
cmp
xlat
stos
xorb
or
sahf
adc
adc
jecxz
add
sbb
mov
xor
jnp
and
mov
add
in
aas
add
repz
aad
sub
nop
add
adc
sbb
inc
add
xchg
ss
mov
jl
hlt
pushf
xor
arpl
mov
push
cmc
sub
or
xor
aam
and
push
clc
mov
mov
push
sub
xchg
roll
xchg
lea
add
loop
inc
add
pop
pop
enter
pop
push
cmp
mov
and
push
jns
adc
xor
mov
mov
les
xlat
cmp
mov
jge
call
cltd
lahf
xchg
inc
or
out
jb
inc
add
sbb
repnz
cmp
dec
xchg
push
imul
or
xchg
pusha
sbb
xor
push
adc
lcall
mov
lea
jl
or
ja
cmp
ds
push
sub
add
std
xlat
mull
enter
clc
sub
add
cmp
test
ds
data16
dec
lock
pop
hlt
cmp
adcb
add
xchg
cmp
adcl
pop
add
mov
jnp
mov
out
cmpb
mov
sbb
lret
cmpb
pop
or
sbb
js
cmp
and
jae
loop
sbb
mov
add
pushf
popa
and
ret
xor
push
fadds
jae
cltd
pushf
aam
jb
mov
shlb
adc
subl
mov
inc
xor
sbb
add
mov
adc
or
xchg
add
xor
xchg
add
sar
cmp
cmpsb
js
in
pop
sbbb
test
mov
hlt
into
sub
ret
bound
dec
push
sbb
mov
pusha
lret
mov
insb
pop
fimuls
fldl
orl
sub
cwtl
mov
cmpsb
mov
ja
mov
nop
sbb
mov
rorl
movsb
mov
add
sbb
push
pop
pop
movzwl
pusha
sbb
fimuls
jne
add
push
mov
cmc
bound
iret
jb
test
add
xor
dec
sti
push
idiv
imul
imul
lea
add
add
test
lahf
or
and
mov
das
xor
xchg
sub
daa
aaa
inc
sub
test
xchg
pop
push
lret
rcrb
cltd
and
int
inc
gs
xchg
in
add
mov
sbb
stos
jo,pt
add
push
insl
out
push
sbb
inc
imul
adc
adc
and
rcrl
mov
or
jb
push
xchg
and
jno
ljmp
std
mov
aaa
push
mov
in
rolb
daa
xor
mov
adc
inc
into
add
loope
mov
inc
out
xor
pop
movsl
dec
rorl
fisubs
add
and
adc
inc
lds
jo
jp
pop
lock
add
dec
pop
rclb
fdivrs
imul
ljmp
rcl
imul
jle
sbb
fcoms
add
popl
or
pop
std
movsl
and
repz
jb
adc
cmovo
test
mov
push
adc
pusha
or
loopne
mov
test
sub
mov
fimull
jmp
sub
jnp
into
or
sub
enter
and
inc
add
ret
pushf
into
add
adcl
aaa
jg
mov
inc
lret
cld
or
xor
pop
int3
xor
syscall
add
jp
cmp
mov
clc
sti
hlt
dec
bound
insb
lret
pop
pop
rcrb
add
lods
cld
mov
cmpsl
sbb
negb
jmp
ja
add
bound
mov
fdiv
mov
add
addb
pop
addr16
add
jmp
cmp
dec
add
das
mov
jno
loop
push
mov
jo
add
inc
sbb
xor
mov
cli
add
out
push
and
cmpsl
inc
in
mov
add
xorb
test
mov
mov
mov
paddw
pop
jg
xchg
out
cmc
adc
dec
jge
push
or
push
inc
xor
pop
mov
mov
dec
and
add
push
jo
sub
enter
scas
cwtl
add
jnp
jo
mov
add
sbb
add
jge
scas
add
sbb
jg
mov
jle
enter
push
and
and
aad
outsb
add
add
mov
call
movsb
add
adc
mov
inc
xchg
outsb
in
dec
inc
and
dec
movsb
cmp
inc
dec
sti
cmp
add
mov
adc
pusha
cs
dec
add
scas
mov
sbb
adc
jbe
mov
addl
cmpsb
mov
cltd
movups
out
add
into
add
test
sub
add
das
mov
out
out
push
and
pop
sub
add
fs
fcomps
inc
out
adc
ja
dec
sbb
insb
rcr
pop
push
xchg
push
pop
or
jo
xchg
popa
cmpsl
add
clc
pusha
fst
ja
repnz
cmp
test
repz
add
push
push
shrl
sbb
add
mov
xor
push
data16
dec
fimull
jmp
nop
imul
sarb
xchg
and
pop
lret
xor
push
add
mov
orb
cmp
js
dec
dec
rclb
lcall
lock
in
les
inc
inc
add
addb
daa
add
sti
pmaddwd
add
clc
and
sahf
or
push
out
cli
fadd
mov
pop
sub
add
jp
pop
or
or
je
xor
clc
add
or
pop
and
loopne
loopne
xlat
jns
adc
popf
hlt
mov
adc
add
loope
inc
inc
xchg
or
inc
pop
cld
pop
pusha
and
lods
mov
movb
fs
lea
lock
push
push
mov
flds
mov
mov
add
mov
jns
pop
push
and
add
daa
mov
lods
pop
fcmovne
hlt
xchg
popl
stc
mov
inc
clc
adc
add
ret
add
test
outsl
sbb
imul
inc
inc
jmp
stc
je
sbb
add
mov
ret
adcb
stc
adc
xchg
popa
cmp
jle
jge
xchg
hlt
jo
dec
add
rolb
push
xchg
pop
lahf
adc
jl
ret
and
or
pusha
daa
in
mov
popf
in
inc
sti
add
mov
rol
sahf
call
sub
nop
enter
add
pop
jae
call
pusha
sti
add
mov
adc
xchg
out
loopne
xor
mov
add
int3
push
add
xchg
in
mov
fadds
inc
add
lods
sub
subb
arpl
rorl
shlb
addr16
adc
int
mov
gs
and
and
mov
es
add
movsl
push
push
xchg
fcomps
sbb
push
rorb
mov
and
insb
popa
xor
adc
iret
sbb
cmp
add
popf
jb
or
mov
sub
xor
jl
cmc
in
cmpsl
cmpsb
sbb
inc
pop
pop
sub
aas
rolb
add
aas
dec
or
jg
jecxz
push
popf
sub
add
xlat
cmpsb
cld
cli
pop
incl
push
add
stos
test
insb
mov
stc
xorl
test
clc
cmc
push
and
ja
and
jb
or
and
mov
or
ret
xchg
aam
mov
les
orl
pop
fs
push
add
inc
cmc
enter
inc
je
and
mov
fidivrl
push
sub
mov
inc
sahf
add
loop
xchg
adc
mov
pop
nop
repz
adc
stos
aaa
push
lahf
bound
inc
imul
and
jo
les
jae
ljmp
daa
sbb
xor
jl
addl
pop
dec
sub
inc
fnstenv
mov
mov
adc
lcall
mov
push
imul
dec
je
test
and
push
add
sbb
clc
popa
repz
mov
addl
xchg
loope,pn
in
int3
push
fildl
mov
sti
cmp
add
pop
insl
mov
pop
add
sbb
clc
mov
neg
add
mov
dec
in
mov
test
push
mov
fnclex
adc
into
rcll
ljmp
movsb
cmp
push
xor
subl
mov
stos
pop
lea
outsl
mov
mov
fwait
jmp
pop
jmp
cmc
dec
pop
or
and
or
dec
in
sahf
push
add
outsb
int
andl
repnz
push
mov
cmp
sbb
lcall
lret
jge
jo
iret
inc
popa
add
fdivrl
add
push
xchg
cmp
or
mov
rcr
or
cli
pop
adcb
fwait
int
xor
add
xchg
adc
push
mov
les
and
loopne
jle
std
cltd
pop
pusha
jno
ficoml
mov
xor
jg
add
rorb
in
test
sub
mov
push
push
nop
jl
leave
push
add
xchg
lock
add
ret
enter
popf
stos
int
xchg
ljmp
and
add
cmp
lret
cmp
out
or
xchg
outsl
cld
dec
insb
xlat
cltd
mov
les
nop
ret
jae
add
lds
pushf
shlb
mov
or
lret
add
fisubrl
rolb
inc
test
lcall
out
sub
sbb
pop
cltd
dec
fldt
mull
das
inc
add
aam
movsl
dec
sbb
sub
outsl
mov
push
mov
push
pop
jb
mov
or
and
add
cwtl
es
rorb
out
filds
test
repnz
push
in
cwtl
shlb
dec
xor
callw
add
test
bound
out
scas
cwtl
sub
jo
jno
out
fsubrs
scas
and
mov
out
dec
mov
add
fildl
frstor
jge
jp
push
popa
pop
xchg
sbb
jae
add
sti
in
xlat
bound
jnp
cs
lret
stos
adc
mov
xchg
push
mov
test
or
jl
add
jne
popa
sbb
pop
add
out
pop
jmp
fldl
addr16
les
aaa
push
add
loop
ds
add
mov
or
jnp
jae
aas
mov
cmpl
pop
mov
test
jo
rclb
in
add
fldl
add
dec
and
or
shlb
add
in
fnstsw
repz
push
cmp
test
add
jl
mov
sti
cs
cmpl
mov
add
fld
cmp
outsb
dec
dec
rolb
mov
pop
test
aam
pop
shl
pop
and
add
sub
mov
xlat
cmpsl
test
cs
push
mov
sub
scas
push
xlat
out
jmp
adc
iret
arpl
dec
lahf
ror
xor
jle
test
xchg
cwtl
or
bound
nop
ret
sbb
xlat
stos
xchg
inc
rolb
sbb
loop
subb
jns
vsqrtss
xor
cmp
aaa
fbstp
sub
cmpl
or
fwait
push
or
fbld
add
and
ja
mov
ds
mov
test
jb
aas
lock
aas
xchg
fcomp
pushf
lcall
lret
mov
jo
xchg
push
leave
pop
cmp
push
fnsave
jmp
xor
jle
cld
mov
loopne
xor
popa
mov
scas
add
push
mov
add
xchg
repnz
xchg
ja
rclb
testl
test
cs
pop
or
add
pushf
hlt
jae
add
adc
cs
fldenv
orb
pop
sahf
add
ljmp
shl
pop
mov
rolb
rorl
add
enter
int3
xlat
mov
jecxz
dec
pop
cmp
popf
and
cld
xchg
mov
lock
lret
push
jle
sbb
outsl
sub
fisubs
pusha
xchg
jne
cwtl
and
scas
dec
cmp
cmp
sub
sub
add
insl
aaa
gs
clc
in
outsb
add
out
xchg
pop
xchg
push
dec
addb
and
negb
or
jp
or
out
dec
add
outsb
adc
lods
ljmp
mov
int3
data16
adc
sbb
fisttps
add
out
gs
jg
dec
fcoms
mov
xchg
or
jno
inc
dec
xchg
repnz
enter
mov
add
lea
loopne
pop
ud2
xchg
daa
lcall
test
sbb
sub
fisubrl
add
jecxz
xchg
popa
adc
daa
add
dec
pop
add
xlat
dec
push
push
adc
cmpb
push
stc
xchg
add
pop
xor
xor
ror
pop
add
mov
fisubrl
in
scas
aas
scas
push
subl
ffreep
cwtl
cmp
adc
mov
pop
pop
dec
mov
xchg
xchg
inc
mov
js
sti
lods
push
sub
hlt
add
mov
shrb
and
es
push
or
jp
clc
frstor
sbb
sbb
cmp
pop
cmc
jo
sub
add
into
loop
push
push
push
aad
lcall
pop
mov
xor
jbe
mov
jmp
and
push
pop
push
adc
inc
lret
aam
inc
aam
stos
es
gs
outsb
lcall
lods
mov
stos
add
or
mov
ficoml
add
add
into
jmp
enter
pop
shr
xor
fwait
or
add
mov
nop
jo
dec
add
mov
lcall
cmpsb
xchg
dec
mov
cmpsl
add
xor
push
insb
cltd
jo
push
add
xchg
sbb
xor
xchg
push
pop
aas
add
mov
jo
cmpsl
testl
mov
jge
pusha
out
mov
lret
mov
mov
sub
mov
mov
loope
sbb
mov
addr16
andb
rcrb
cmpsb
and
and
push
sti
inc
and
adc
mov
jnp
dec
inc
loopne
ja
or
and
jl
add
mov
testl
popf
jo
pop
jo
pop
pop
push
leave
in
shrl
addb
xchg
mov
mov
icebp
cmp
xor
and
dec
testb
or
add
mov
jmp
outsl
adc
out
sub
xchg
std
loope
sub
hlt
sub
adc
aad
xchg
add
imul
pusha
out
lds
es
and
or
mov
popa
popf
sbb
cmc
cmpb
add
fidivrl
in
je
add
dec
addb
push
pusha
sub
shll
sbb
pop
pop
int3
fwait
jno
test
jp
xchg
pop
mov
mov
aad
fbstp
xor
pusha
std
add
incl
mov
cmpsl
cmp
mov
in
call
pop
es
inc
add
or
inc
pop
adc
dec
inc
or
test
sub
dec
mov
mov
inc
xor
lea
iret
fcomps
seto
pop
loop
fwait
and
mov
notb
stos
mov
mov
lcall
pop
in
shrb
mov
sbb
xchg
idivl
sbb
push
mov
jge
loopne
inc
jno
add
and
pusha
int
and
addb
pop
mov
add
ficoms
aam
sbbb
mov
add
cmc
fadds
mov
mov
roll
jecxz
ja
hlt
into
and
add
xor
add
cmp
dec
sub
clc
loope
test
sbb
scas
mov
rcr
and
je
xlat
sub
pop
dec
aad
ds
rcrb
sbb
outsb
dec
rcll
xor
pop
mov
testl
cmp
pop
or
add
xchg
and
les
jl
add
sub
scas
lahf
repnz
or
mov
pop
aam
jge
fildl
scas
leave
add
sbb
jge
adc
pop
mov
cwtl
shl
add
rclb
adc
cmpsl
xor
or
int
dec
cmp
add
cmp
nop
and
and
roll
sub
mov
cwtl
xor
je
clc
lock
inc
push
dec
addb
mov
pop
out
test
loope
add
push
fwait
xor
or
inc
lea
test
add
fsubl
and
cmp
fldl
icebp
pop
movsb
daa
cmp
sahf
add
cmpsb
loope
and
dec
jb
or
insb
test
out
jnp
add
inc
dec
decl
adc
sub
adc
add
mov
sahf
xorl
mov
cld
mov
cltd
add
add
jg
xor
es
adc
inc
push
lahf
push
jnp
int
fs
insl
add
out
jmp
fimull
add
push
add
xor
les
pop
rol
pop
cld
push
pop
cmp
inc
out
cwtl
je
rcrb
pop
jge
inc
sbb
mov
push
xchg
jae
je
add
push
int
xor
ret
pop
cmp
mov
xor
out
adc
jno
add
xor
cmpsl
jg
ror
inc
fistps
push
int3
cmc
shlb
dec
in
mov
mov
aas
rolb
mov
mov
push
add
pop
mov
jne
add
cmp
and
mov
xchg
cmp
addl
adc
daa
jg
jb
pop
repnz
lahf
mov
mov
hlt
rclb
adc
mov
mov
push
bnd
push
or
add
lds
sbb
fsubr
xchg
push
fildll
push
inc
and
pop
icebp
fs
mov
add
inc
sahf
enter
pusha
jnp
push
sub
xchg
lahf
loopne
nop
mov
mov
dec
aad
add
inc
pop
dec
arpl
dec
rcrb
or
int3
addb
fisubl
xchg
subb
push
mov
loope
jb
insl
lock
add
xchg
and
cmp
pop
fcmovne
xor
lock
or
outsl
jns
add
out
pop
pop
fistl
mov
aas
jb
cmp
mov
out
ss
xchg
xchg
insb
pop
pop
add
mov
movb
mov
sub
mov
insb
adc
jb
push
aas
add
pop
push
pop
cmp
xor
push
add
call
aas
jecxz
movsl
idivl
add
js
pop
jne
aaa
add
push
pop
aas
jp
mov
add
jnp
pop
aad
or
int3
into
inc
add
nop
mov
cwtl
in
sbb
xor
add
mov
jne
shl
mov
mov
ftst
loope
xor
add
sub
ds
shrl
mov
hlt
add
inc
fnstcw
movsl
add
mov
popa
dec
test
add
mov
jae
shll
mov
pushf
pop
call
sbb
outsb
mov
add
xchg
add
ja
jb,pn
add
jmp
into
in
hlt
add
xor
scas
inc
push
pop
and
jecxz
mov
cmp
xor
xor
xorb
inc
ret
add
add
test
add
inc
ror
out
pusha
fcmovb
lret
nop
loopne
aam
ja
or
addr16
add
xor
sahf
mov
dec
dec
inc
push
jns
outsl
add
mov
es
xchg
and
lret
pop
sbb
fwait
insb
jg
or
mov
arpl
dec
push
pop
adc
sbb
add
inc
mov
jp
add
ds
push
test
sub
add
inc
call
ja
cmpxchg
orb
push
fistpl
add
mov
mov
cld
js
mov
in
dec
incb
xor
orl
inc
notb
pusha
xlat
shlb
into
popa
inc
adc
pop
pop
add
push
out
rclb
flds
mov
imul
es
dec
xorb
into
add
aas
fisttps
test
inc
jns
dec
dec
gs
fs
movsb
add
lcall
cmp
adc
pop
filds
mov
adc
cltd
mov
pop
mov
inc
cs
add
arpl
popl
inc
jns
push
sub
rcll
mov
sbb
and
lret
add
jns
mov
mov
repz
sbb
inc
pop
lcall
add
cli
sub
cmp
cmpsl
jmp
sbb
mov
fcomps
push
mov
and
test
cmp
cmpb
sbb
mov
or
call
sub
addr16
pop
sbb
arpl
jmp
add
xchg
loope
fwait
dec
mov
inc
scas
add
jo
add
in
nop
jmp
loopne
add
rolb
pop
push
mov
fdivl
xor
incb
adc
xor
lock
xor
rorl
mov
cmc
leave
sub
pushf
and
in
add
xchg
cmp
clc
cmp
cwtl
pusha
and
test
or
sub
add
decb
pop
fmul
nop
sahf
add
mov
add
lret
cmpb
pop
scas
ja
mov
shll
pop
add
add
cli
lods
dec
or
outsb
add
and
int3
jl
adc
xchg
pop
inc
pop
aas
mov
jne
fmull
and
mov
aam
xlat
cwtl
jge
and
mov
add
test
sub
xor
std
fcoml
jle
loopne
mov
aad
jne
pop
dec
mov
mov
or
pop
insl
xchg
repz
loopne
add
adc
fists
pop
rolb
mov
jmp
jo
je
xchg
add
mov
jno
out
ret
pop
xchg
mov
lods
js
insb
jbe
mov
aas
xor
scas
add
int3
cmp
push
je
pop
inc
fstpl
aad
cld
sbb
dec
cmp
mov
xor
jmp
add
add
adc
cmp
xlat
int
repz
rorl
xchg
outsl
jne
or
filds
mov
add
mov
lock
cmp
arpl
in
mov
adc
mov
pop
ljmp
mov
adcb
jae
insl
shrd
lds
push
pop
pop
push
and
shlb
inc
lea
lcall
sub
and
add
lods
call
add
and
lods
pmulhw
xor
add
xor
jge
cmp
inc
fs
insb
or
loop
clc
inc
cmpsl
push
in
fwait
mov
add
xor
add
leave
sub
in
mov
icebp
repnz
data16
cli
inc
clc
in
aam
push
testl
js
xor
cmp
in
xchg
fidivl
dec
inc
and
dec
outsb
cmp
xor
add
pop
lahf
divb
add
dec
test
inc
and
mov
and
fbld
sub
mov
or
dec
into
cltd
add
sub
adc
mov
mov
leave
idiv
in
push
js
jo
sbbb
stos
dec
add
mov
push
mov
xchg
xor
out
push
bswap
mov
loopne
ljmp
dec
lea
nop
jns
sbb
jns
psubd
cmp
inc
cmp
push
jp
bound
mov
call
popa
adc
repz
mov
add
jg
add
enter
jns
loope
pop
iret
imul
lock
loopne
lods
faddl
outsb
popf
sbb
push
sarb
mov
and
cmp
xor
out
push
cltd
pop
dec
filds
fwait
in
roll
xor
cli
jmp
add
inc
and
sub
lret
cmpsl
push
jmp
inc
dec
push
pop
or
scas
adc
cwtl
adc
in
push
fnstenv
inc
stos
into
arpl
ret
in
lods
add
mov
insl
push
adcb
fwait
mov
add
jecxz
sub
xlat
cltd
shlb
sbb
pushf
xchg
cmp
rorb
jns
jl
or
test
rcrb
mov
mov
insl
negl
divb
sarb
cli
pop
pop
add
jl
or
jns
aam
sarl
add
fsubs
js
jg
add
das
pop
add
cli
add
fmul
test
rolb
push
add
sbb
aas
mov
insl
xlat
lret
mov
pop
incl
push
dec
nop
mov
stos
pop
inc
stc
inc
iret
aad
xchg
xlat
and
inc
and
cmc
dec
add
stc
out
push
in
fildl
inc
in
in
mov
mov
jb
pop
inc
push
fldl
loope
xchg
pop
repnz
loopne
leave
add
pop
shl
mov
add
ret
cmp
jmp
or
adc
testb
shrb
hlt
jl
add
sarb
mov
add
bound
loope
push
mov
data16
and
add
das
mov
fwait
popl
popf
movsb
and
pushf
sub
add
test
cwtl
pop
int
aaa
mov
pop
insl
pop
add
xor
test
ja
push
add
pusha
sti
pop
mov
pop
test
sbb
and
xlat
add
call
out
xor
adc
sti
sub
stos
sub
aas
dec
mov
add
ret
aam
out
and
iret
ds
adcb
pop
pop
test
in
mov
jmp
adc
dec
nop
push
mov
sbb
aam
push
fmull
jbe
push
les
cmpsl
adc
push
mov
addr16
mov
scas
add
add
test
cmp
pop
js
add
test
add
pmulhuw
les
cmp
cld
aam
lds
adc
fldenv
pop
flds
imul
sbb
xor
add
mov
mov
pop
popl
loopne
xchg
in
mov
mov
add
add
sub
pop
inc
push
mov
adc
sub
add
mov
sbb
jle
xor
dec
add
xor
rcrl
jo
and
in
cmp
adc
xor
push
adc
jnp
filds
insl
push
lret
enter
sub
add
sahf
and
and
je
xchg
test
add
inc
jg
jge
cmp
pop
adc
jns
roll
das
mov
push
adc
jp
in
adc
xchg
sub
adc
mul
nop
sbb
fisttpll
add
xor
les
lods
dec
jecxz
test
cmp
sbb
iret
stos
push
add
sub
inc
add
mov
ss
pop
test
add
inc
jae
icebp
mov
sub
movsb
fisttps
je
arpl
push
fldcw
adc
mov
lods
inc
in
or
dec
jno
mov
ds
add
lds
sbb
pop
mov
add
adc
es
sbb
mov
xor
xchg
push
cmp
in
xchg
cmc
dec
insl
xchg
push
imul
out
in
cmp
sub
divb
inc
sbb
jle
xor
mov
jo
sub
add
inc
sbb
daa
int3
push
add
imul
test
jp
ja
hlt
push
add
into
stc
scas
mov
cmp
mov
add
imul
jb
mov
adc
mov
add
test
xor
add
dec
pop
push
int3
sub
dec
pusha
mov
test
sahf
add
jg
cwtl
rolb
pop
leave
dec
fdivs
movsl
dec
pop
mov
inc
sub
rcr
imul
out
xchg
push
and
outsl
pmulhuw
cmc
dec
mov
and
aad
in
inc
cmp
imul
mov
rolb
movsl
inc
and
fsubrs
jecxz
shl
add
and
repnz
mov
lock
insl
xchg
mov
and
in
mov
hlt
dec
mov
add
jae
popl
aam
dec
push
nop
inc
cmpsb
mov
test
loop
arpl
pusha
xor
popf
adc
lret
or
pop
js
cmc
in
jo
add
sub
test
into
ds
pop
andb
ret
enter
add
faddl
outsl
roll
add
add
sbb
xor
jmp
call
dec
sbb
cmp
imul
roll
dec
cltd
rcrb
mov
push
sub
mov
add
or
xor
fiaddl
rorl
lahf
out
add
sbb
cmc
aam
cld
out
rcl
pop
add
cmp
dec
add
push
mov
sbb
outsb
incl
lcall
add
movsl
mov
popa
cmp
iret
int3
popa
hlt
sbb
dec
out
inc
pushf
fcmove
nop
aas
add
mov
pop
pushf
jg
jge
por
insl
cmp
inc
cmp
xor
or
mov
and
inc
add
jb
xor
dec
mov
dec
aam
jg
loopne
and
aad
cmp
jnp
sbb
xchg
in
adc
sbb
mov
subb
cld
push
arpl
icebp
rorl
mov
xchg
mov
sahf
jecxz
xchg
scas
add
push
adc
add
mov
les
push
fs
pusha
sub
add
mov
addl
clc
cli
sub
mov
dec
into
sub
push
dec
rolb
fstpl
icebp
add
cmp
jge
xor
nop
out
nop
mov
stos
add
movsl
mov
rcrl
movsb
push
add
fcmove
jmp
mov
jp
aaa
or
or
imul
push
rcrl
push
or
and
pop
mov
lds
xor
jl
add
lret
andl
pusha
add
jecxz
push
leave
dec
fldcw
add
sub
cmp
cmpxchg
lods
loop
mov
pop
in
addb
push
jno
jge
add
push
mov
add
dec
shr
cmp
int3
je
jle
xor
imulb
stos
jge
lds
push
jbe
sbb
xchg
jo
xor
pop
lret
andl
dec
add
shll
pushf
add
ja
push
adc
cmp
inc
arpl
adc
xor
insl
push
test
loop
jmp
sub
push
or
dec
adc
or
imul
movsb
pop
dec
inc
fiaddl
or
add
inc
cwtl
outsb
mov
jge
sub
mov
xor
add
scas
add
ret
fmul
inc
addb
loope
call
mov
xor
pop
enter
jnp
add
mov
add
sub
orl
mov
je
xor
imul
je
aas
sbb
cld
sbb
repz
mov
in
into
imul
sub
or
add
adc
add
dec
add
and
push
mov
in
adc
push
insb
or
or
dec
test
fstl
pushf
sarb
push
xor
or
cmp
cmpsb
daa
stos
out
xor
or
pop
das
add
fmuls
addb
mov
fimuls
dec
xchg
jno
xlat
daa
int3
cmp
add
sbbb
add
fwait
pushf
out
mov
aas
sub
pop
pop
add
dec
pop
inc
sub
pusha
or
push
add
std
inc
sub
lret
add
mov
ljmpw
clc
mov
jmp
cmp
les
jmp
mov
addb
fimull
push
jle
sub
adcb
pop
std
xchg
stos
cmp
pusha
cmpsb
sub
pop
aad
mov
mov
cmp
inc
sbb
adc
mov
add
or
and
sub
and
pop
nop
adc
pop
stc
dec
loope
push
add
insl
in
jb
xor
decb
push
into
bound
pop
repz
sub
mov
cmpb
lea
das
adc
cmc
ss
mov
push
push
xchg
loopne
pop
aam
pop
jl
add
cs
cwtl
pushf
add
cmp
in
push
push
mov
inc
and
or
add
xchg
mov
jne
add
fsubrl
xchg
lods
adc
incb
repz
xchg
cmp
pop
fs
inc
xor
out
mov
adcl
push
xchg
call
push
jnp
mov
aam
add
jecxz
add
pop
arpl
subl
sub
rcl
fdivrs
jns
add
les
in
sbb
cwtl
push
enter
push
pop
gs
jno
aaa
inc
mov
jbe
push
jle
jecxz
movsl
fsubr
inc
adc
cmc
add
jae
sar
xchg
movsl
add
inc
pop
sub
iret
lahf
mov
les
xor
ret
cmpsb
nop
fdivl
jmp
xchg
mov
sub
cmp
inc
rclb
mov
and
gs
add
shlb
xor
adc
add
dec
rorb
sbb
mov
mov
sbbb
inc
pop
fmuls
mov
loopne
add
xchg
xor
shrb
inc
jmp
push
mov
add
push
pop
xor
add
sar
test
xchg
rcr
repz
add
add
dec
push
dec
lsl
add
pop
in
pop
adc
jmp
out
lods
add
and
add
test
out
mov
adc
mulb
pop
icebp
cltd
mov
sub
sbb
or
xchg
daa
adc
sbb
pop
scas
sbb
xchg
int
imul
pop
fwait
mov
jae
add
mov
mov
stos
int3
add
rol
fwait
out
add
sbb
insl
add
int3
es
imul
xchg
jne
add
lret
jo
xchg
in
sub
outsl
mov
stos
aas
pushf
leave
pushf
and
shlb
hlt
nop
out
add
cmp
xlat
ljmp
adc
inc
shl
inc
fiaddl
xor
xchg
fbld
xor
bound
xchg
in
shlb
add
std
xchg
movsb
cmp
push
add
jecxz
xor
loopne
jbe
add
movsl
sub
inc
sbb
dec
pop
sbb
and
fs
inc
push
icebp
jne
rolb
inc
add
cli
mov
pushf
rol
popl
mov
jne
sbb
mov
and
sbb
adc
and
xor
pop
rorb
pop
je
daa
gs
pusha
mov
movsb
sbb
int
stos
pop
loop
add
fsubs
xchg
outsb
leave
icebp
add
ss
mov
mov
call
or
mov
xor
iret
adc
pop
cld
fwait
jp
cs
and
call
adc
das
cmp
add
mov
dec
mov
rcl
sbb
jg
fiadds
add
cmpsb
adc
and
jne
orb
mov
cmpsb
mov
add
out
mov
mov
add
outsl
mov
adc
loopne
mov
cli
push
push
mov
and
jns
dec
cmp
add
and
shl
mov
push
iret
dec
les
bound
in
loopne
cwtl
sub
push
add
mov
in
jge
adc
push
jb
mov
test
scas
pop
enter
xchg
sbb
mov
mov
xchg
lds
mov
out
popa
test
in
sub
sbb
lods
cmc
or
je
lret
loop
shlb
add
mull
cmp
cmp
jbe
jo
add
push
jne
add
inc
lahf
int
cmp
clc
inc
je
into
sbb
repnz
stc
aaa
jnp
add
aas
push
fldl
incl
sbb
adc
jno
sub
push
dec
mov
jg
sbb
add
cs
jo
iret
jge
es
lea
sub
arpl
or
cmp
mov
cmpb
inc
lock
xchg
add
or
jns
mov
fisttpll
dec
cmp
nop
sub
call
test
inc
and
xchg
divl
shrl
sbbl
in
add
mov
jecxz
sbb
mov
cmp
jo
add
add
lahf
xchg
imul
subb
cmp
xor
mov
cmpsl
add
out
dec
mov
and
imul
sbb
mov
addl
repz
mov
xor
sbb
mov
negl
jnp
mov
out
fldl
lahf
sbb
idiv
imul
mov
jo
repnz
pop
push
mov
orb
cmp
mov
or
daa
jl
mov
out
fadd
lock
pusha
das
sbb
xchg
cmpsb
push
out
xchg
mov
sti
add
fs
add
popf
sub
push
dec
or
mov
addl
outsb
dec
clc
jmp
dec
mov
cmc
add
and
adc
ja
test
dec
iret
pop
sub
sarb
cmp
xor
lods
adc
out
add
adc
add
and
xchg
add
aas
pop
mov
addb
int
pushf
pop
sub
and
cmpsl
lods
insl
sbb
movsb
scas
rcll
jo
mov
sub
decl
xchg
repnz
stos
sbb
insb
cmp
adc
out
jnp
add
imul
mov
jne
push
xor
inc
in
xchg
and
enter
cwtl
adc
sti
add
jg
out
adc
call
mov
leave
xorb
xchg
jne
push
loop
add
in
cmp
jle
addr16
and
int3
xor
sbb
insl
sti
in
and
lods
add
adc
xor
push
les
lahf
loop
add
xchg
int
pop
adc
push
nop
lock
lock
sbb
loope
lret
mov
pop
adc
fwait
lock
in
icebp
push
mov
and
add
dec
scas
mov
or
push
rclb
mov
outsb
cwtl
push
add
or
xchg
mov
add
mov
fucomip
enter
jg
xchg
into
js
xchg
out
loopne
or
add
in
jl
add
xchg
aas
out
popa
sub
inc
dec
adc
push
add
loope
pop
ss
xor
fs
fsubrs
add
mov
fisttps
adc
mov
add
add
pusha
ljmp
cld
jae
testb
scas
xchg
loop
rol
fldenv
fcoms
sbb
sub
xchg
mov
sub
aas
rclb
add
jbe
jge
cmpsb
jle
enter
loopne
mov
push
fdivr
inc
pop
xor
out
xor
scas
xor
mov
jo
cli
dec
sub
in
sub
rclb
mov
inc
push
add
jbe
gs
sbb
dec
nop
cwtl
add
into
int3
fcoml
ret
xchg
add
dec
in
scas
mov
lds
add
mov
or
inc
xor
or
mov
push
or
aaa
push
and
cmp
add
dec
adc
add
push
add
cwtl
jne
pop
push
jns
js
icebp
and
cmpl
and
and
addr16
adc
add
add
loope
in
jmp
add
insl
add
cmc
jmp
imul
jl
push
out
stc
add
dec
mov
lods
add
push
cmp
push
sub
lea
mov
insl
sub
add
mov
ret
sbb
add
mov
leave
fisubl
sub
push
or
push
ss
sahf
mov
and
dec
cmp
aad
jbe
je
les
int
or
lock
add
enter
mov
xchg
fcompl
and
fbstp
sbb
add
pop
inc
shrl
mov
insl
add
mov
sub
jecxz
inc
mov
in
test
gs
xchg
ja
sbb
imul
dec
int
bound
push
inc
enter
add
cmp
mov
inc
add
sbb
call
test
jle
ss
cld
add
and
data16
xchg
pop
ds
dec
push
add
cmp
xor
enter
sub
pop
sbb
in
lods
mov
push
inc
push
xlat
inc
leave
flds
arpl
jmp
add
scas
bound
sbb
cmp
cmp
mov
cmp
jo
fimuls
repz
jb
add
jo
xorb
stos
xor
and
add
mov
les
add
aad
and
int
insl
mov
gs
add
fildl
fwait
iret
push
mov
or
cltd
fdivl
cld
mov
test
inc
push
repnz
sbb
mov
int
nop
setb
out
add
pushf
mov
clc
mov
jle
mov
rol
pop
xor
rdpmc
or
mov
fstps
scas
stos
sbb
adcb
xlat
add
shrb
adc
cmpsb
add
add
shrl
cmp
out
pushf
in
pop
pcmpeqd
ret
mov
adc
cmp
jge
sbbb
and
dec
jg
or
mov
shlb
dec
jmp
cmpsl
xor
mulb
xchg
push
ds
or
rorb
nop
mov
pusha
xchg
add
and
jecxz
add
cwtl
sub
das
lcall
cmc
xchg
push
mov
mov
mov
test
cltd
add
or
xchg
pop
push
push
das
cmp
or
dec
jmp
sarb
out
inc
ljmp
jno
add
xchg
cltd
dec
mov
add
inc
sbb
icebp
xchg
add
cld
sbb
cmp
pop
je
inc
out
inc
stos
pop
push
shl
xchg
fldl
imul
or
aam
out
mov
add
and
cmp
cmp
push
add
jmp
imul
push
push
int
cmp
and
cwtl
in
xor
push
xor
or
fcoms
dec
pusha
mov
sbb
out
ret
xchg
add
js
call
icebp
std
out
sbbb
pop
mov
andl
mov
test
add
repnz
inc
mov
scas
mov
bound
mov
pushf
pop
and
das
xchg
rcr
imul
mov
lock
rclb
or
mov
add
stos
andb
add
pop
sub
sub
scas
jb
add
out
pop
and
imul
lret
je
pop
lret
mov
add
aaa
repz
cmpsb
dec
aad
or
js
add
lcall
in
sbb
or
cmpb
or
sbb
cmp
and
mov
fwait
insl
cwtl
xor
add
xchg
add
jno
lahf
mov
add
dec
inc
cmp
xchg
std
andb
dec
ret
pusha
push
jo
xchg
add
pop
and
xor
cmpsb
and
imul
add
xchg
aas
pushf
xor
inc
sub
sub
pusha
push
popf
dec
mov
pop
out
adc
fmul
or
dec
mov
movsl
pop
gs
and
mov
ljmp
fs
in
movsb
add
rorl
mov
jne
add
int
subb
lock
test
ret
add
and
lcall
mov
rcrl
in
jp
bnd
icebp
aad
xchg
push
pextrw
ja
jae
sbb
aaa
arpl
add
rclb
add
cmp
mov
cmp
jge
sub
xchg
in
int3
mov
sub
adc
add
push
add
adc
mov
cwtl
adc
jb
loopne
mov
jl
flds
adc
pop
pusha
jge
pop
sbb
push
rol
sbb
scas
mov
xchg
mov
lods
add
sbb
insl
jmp
add
filds
jne
loop
stc
mov
inc
in
sub
jae
or
roll
push
dec
xchg
ja
dec
sbb
test
pusha
aad
out
cmp
daa
or
adc
in
out
push
scas
cmp
xchg
orb
mov
or
add
daa
loopne
lcall
in
lahf
dec
ret
sbb
jge
push
lret
jp
loope,pt
xchg
add
jne
xor
insl
loop
mov
rol
dec
pop
push
jmp
sbb
xchg
jo
and
pop
xlat
fwait
mov
nop
repz
add
and
hlt
dec
add
test
pusha
cmp
or
rcll
xchg
xorb
xchg
fbld
lock
add
pusha
xor
jecxz
leave
inc
out
add
adc
or
mov
mov
xchg
xor
push
in
inc
xor
sbb
jge
dec
ljmp
cmp
add
mov
push
pop
hlt
rolb
dec
divb
int3
sbb
cmp
dec
mov
add
ficompl
push
in
push
mov
inc
fst
or
sbb
stc
lahf
add
pop
mov
pop
pushf
dec
jno
ret
stos
adc
in
xor
mov
das
stc
fwait
pop
fsubrs
scas
or
fidivs
jg
imul
leave
sbb
notb
sarb
js
or
repz
enter
movsb
sbb
cmovnp
test
add
cs
mov
jo
mov
out
inc
inc
arpl
pop
testb
push
sbb
popf
in
aaa
add
lea
mov
mov
shl
xchg
and
sub
cmp
sbb
outsb
pop
cmp
push
add
push
in
add
sbb
das
mov
testl
je
and
into
add
in
pop
lods
aad
insl
push
cmp
pop
shl
add
stos
data16
cltd
dec
cmp
icebp
or
rol
cmpsl
lods
xor
pop
sbb
cmp
mov
or
and
ss
int
adc
mov
xor
cmpsb
add
das
mov
ja
add
lea
dec
jnp
pop
ss
ret
pop
pop
pop
mov
jecxz
mov
mov
and
dec
mov
push
pop
jl
xor
rcrb
add
jmp
lcall
in
cs
cmp
add
cmp
inc
addl
cmp
addb
out
pop
leave
add
ja
cwtl
loop
daa
jno
add
push
out
jmp
lods
sbb
xchg
inc
das
push
imul
cmpsl
push
jmp
jecxz
sbb
cmpb
icebp
push
movsl
popa
xor
mov
mov
mov
dec
add
movsb
jmp
cmpb
push
mov
push
or
jl
xchg
push
jnp
add
loop
test
nop
xchg
in
sbbl
loopne
mov
add
loope
shl
or
aas
jg
insb
orl
pop
pop
dec
xor
mov
add
push
add
jge
jp
adc
stos
xor
adc
or
mov
jo
int
and
cmpsb
mov
mull
inc
push
jno
add
lret
push
pop
das
sbb
aaa
dec
iret
sub
push
inc
popa
push
cmpsl
cltd
loopne
jle
mov
std
add
add
testb
add
and
inc
push
jp
sub
mov
cmp
lret
insl
mov
fcomps
and
adc
std
add
mov
scas
cmpsb
jae
movsl
jo
in
add
sbb
fcoms
shrl
add
in
rcrb
add
js
mov
loopne
in
sbb
or
stos
add
mov
add
adc
and
xchg
add
mov
jmp
leave
repnz
push
movsb
shr
lret
das
fiaddl
mov
push
cmp
add
sub
pop
xchg
add
push
jne
inc
adc
add
add
sub
fsubs
loopne
mov
pushf
and
add
aas
loope
inc
add
xchg
or
into
add
mov
lahf
mov
test
mov
inc
inc
aad
mov
push
xor
xor
ds
cmp
inc
mov
aaa
sbbl
std
pop
dec
mov
sub
sbb
ficoml
nop
lret
mov
enter
idivl
test
aam
cwtl
in
mov
arpl
maskmovq
idivl
roll
icebp
fdivrl
adc
mov
out
lahf
add
xlat
or
idiv
push
fwait
mov
add
fldcw
add
sbb
sub
jg
int3
movsl
sahf
les
lret
pop
jae
add
pop
xor
insb
test
pop
rol
enter
repz
jbe
loope
daa
push
add
mov
iret
add
clc
testb
sbb
test
cmp
bound
int3
and
push
pop
daa
add
lcall
push
repnz
xchg
cmp
sbb
jne
pop
pop
jecxz
movb
dec
dec
les
in
cli
lds
pop
push
addr16
rcrb
testl
sub
pop
cmc
movups
mov
iret
cmp
nop
sarb
sbb
mov
ret
fcmovnu
in
dec
sahf
cmpsb
add
mov
in
add
mov
hlt
insl
sub
dec
fildl
fisubl
push
and
je
ss
nop
mov
loopne
movsl
add
std
pushf
add
fldenv
faddl
cmp
fstpl
testb
xchg
sti
incb
paddq
loopne
pop
add
and
in
mov
add
nop
scas
jl
aad
decb
and
and
mov
add
ror
mov
fildll
jp
pop
fst
xchg
mov
and
adc
dec
popf
icebp
mov
mov
cmp
cmp
fldl
sbb
add
repnz
jg
push
fmull
mov
iret
add
and
mov
addb
jbe
fwait
aad
lds
in
or
or
es
orl
stos
cmp
and
repnz
add
in
movsb
xor
les
add
lcall
or
jno
pusha
add
and
pop
cmp
sbb
and
loop
push
mov
push
mov
sti
shl
dec
cmp
mov
push
or
std
mov
orb
mov
add
push
sarl
jl
pop
in
xor
clc
push
les
inc
outsl
add
rcll
repnz
add
push
rolb
adc
aas
sbb
stos
xchg
or
enter
mov
movsl
and
sub
filds
or
insl
js
aas
movsl
jo
xor
adc
leave
inc
int
add
shrb
add
mov
push
loopne
add
cmp
mov
sub
js
sarb
outsl
xor
mov
add
adc
or
iret
xlat
inc
enter
xorb
jge
adc
mov
rcrb
test
loopne
xchg
push
cmpsb
clc
mov
jnp
sbb
pop
add
arpl
dec
aas
sbb
popa
push
cmp
adc
dec
aad
rolb
and
cmc
sub
ret
xor
pop
pop
adc
dec
add
sub
dec
les
rolb
mov
mov
or
cmpl
pop
jae
ds
cwtl
cmpsb
and
cmp
leave
mov
jb
and
add
outsb
out
int3
dec
ret
push
ja
mov
fadd
jl
mov
pop
rcrl
fs
dec
iret
dec
sbb
in
mov
add
inc
mov
js
add
into
and
xor
xchg
rorb
push
pop
pop
ret
pop
shlb
ss
inc
and
cwtl
into
addr16
rolb
test
fsub
push
cltd
sub
sub
orb
mov
push
jns
mov
out
push
pop
jne
sbb
testb
call
jmp
adc
ret
sbbb
push
int3
fnstsw
ret
nop
sahf
push
jns
outsb
cmp
push
int
sub
xor
leave
add
mov
xchg
mov
mov
and
xor
inc
outsb
imul
in
push
loopne
add
rol
enter
jno
pcmpgtd
mov
jmp
testb
dec
cmp
in
cld
push
add
stos
sub
add
push
mov
fucomi
ret
movsl
cmpsl
negb
stc
test
push
mov
sbb
clc
add
subb
mov
add
dec
lods
jnp
pusha
movsb
xor
div
add
dec
mov
inc
pop
jmp
add
test
repnz
call
push
and
std
push
loop
cmpsb
mov
insl
outsb
mov
sarl
lret
sahf
jno
mov
lret
int
int3
xchg
hlt
cmpsb
pusha
call
scas
ret
mov
lahf
push
xchg
inc
test
in
loopne
out
decl
lock
xor
xchg
addb
pop
xchg
rcl
out
sub
aaa
add
into
push
xchg
sbb
mov
pop
lret
ja
pushl
dec
add
stc
inc
jge
lock
out
dec
out
cmp
mov
adc
sub
and
add
aaa
arpl
mov
add
ret
mov
jle
add
enter
sbb
imulb
aas
push
add
xor
test
mov
idivl
push
adcb
insb
shll
sti
jae
lahf
mov
aas
neg
mov
and
sub
fcmove
inc
cwtl
inc
cwtl
addb
test
in
imulb
and
repnz
mov
sbb
mov
lcall
push
add
scas
xchg
iret
mov
vpsllw
mov
mov
adc
bound
shrb
fcomps
add
add
mov
adc
add
dec
outsb
pop
sti
cmpsl
das
loope
sub
dec
pop
push
jb
adc
xchg
inc
jecxz
cmp
xlat
gs
push
or
adcb
pop
divl
fsubrl
pop
rol
fisubl
add
inc
cmp
mov
aas
adc
inc
mov
sub
push
cmc
scas
shrl
mov
mov
mov
lret
movsl
ds
or
sub
cwtl
push
lods
mov
xchg
cwtl
and
add
or
dec
dec
push
mov
and
addr16
js
inc
std
xchg
test
add
rcr
ja
cmp
xor
dec
enter
jae
dec
push
mov
loop
jo
addr16
or
sbb
fs
pusha
or
inc
and
push
shlb
fildl
rcrb
and
mov
pop
jne
mov
test
shl
pop
mov
add
iret
or
test
andl
adc
add
daa
sbb
stos
rorb
mov
dec
cs
pop
xlat
hlt
jbe
mov
mov
and
cmp
mov
addr16
mov
add
push
add
movq
fiaddl
ja
jns
mov
sub
pusha
rcl
add
sub
or
out
xor
or
sub
adc
dec
scas
push
enter
add
mov
add
into
fmuls
dec
icebp
mov
pop
push
pushf
xchg
rcrl
icebp
xchg
mov
lcall
mov
jo
adc
push
mov
aaa
mov
andl
pop
xchg
push
add
stos
and
sarl
jbe
cld
mov
sub
test
add
lcall
sub
test
or
ds
adc
sbb
call
and
jnp
push
int3
clc
mov
ljmp
add
add
add
jle
cltd
push
or
mov
lods
pop
add
mov
pop
jmp
in
jbe
cmp
push
push
sbb
call
jo
mov
jl
sub
and
xor
add
test
xor
pop
add
loopne
xchg
cmc
cmpsl
xchg
add
loope
mov
cmp
or
iret
or
sbb
lret
arpl
sbb
mov
popf
dec
pusha
cmpsl
nop
andb
loopne
adc
outsl
sbb
fistps
ja
and
or
pop
mov
fs
push
cmpsl
int
shl
movsl
imull
out
add
outsl
popf
das
icebp
cmp
mov
jp
incb
sub
test
je
notb
ret
adc
enter
rcl
pop
fsubrl
mov
sub
orb
andb
inc
mov
sti
jae
add
jno
add
xor
xchg
push
xchg
dec
cld
adc
inc
jb
add
mov
add
lret
pop
call
jp
cwtl
push
mov
cmc
cmp
mov
test
sub
lea
add
es
mov
roll
mov
mov
and
inc
jl
pop
add
jecxz
push
lea
add
and
pusha
out
push
cld
cmpb
call
pusha
cmp
call
inc
cmc
add
add
xor
jno
dec
mov
pop
push
lds
inc
repnz
pop
add
fnstcw
and
mov
xchg
xor
cmp
aas
pop
dec
jl
xchg
add
add
jae
fildl
cs
popf
xchg
das
mov
aas
add
xchg
inc
mov
add
out
xor
sub
enter
ret
shrb
adc
shlb
mov
les
sbb
in
lgs
nop
shlb
cmpsb
add
fwait
mov
jbe
cld
aas
mov
cmc
in
bound
xchg
jecxz
imul
or
jo
cmc
test
adc
push
dec
adc
movb
lret
data16
jo
mov
xor
jge
in
dec
pop
mov
clc
cs
nop
adc
and
movd
mov
jg
add
jo
test
outsl
or
ljmp
inc
mov
clc
pop
dec
test
mov
inc
push
test
fs
mov
mov
and
popl
inc
movd
add
adc
jno
push
add
jo
sti
ret
cmpxchg
daa
inc
push
leave
mov
out
add
jmp
scas
sti
mov
sub
mov
imul
cwtl
add
xchg
cltd
push
sarl
or
clc
cmpsb
xchg
mov
jbe
add
pop
xchg
add
bound
loop
cmc
sub
addl
mov
scas
xorl
add
dec
mov
dec
int
jl
dec
iret
cmpsb
xor
enter
mov
icebp
cmp
pop
pop
add
mov
repnz
insb
xrelease
add
inc
adc
int3
add
adc
rorb
mov
sbbb
pop
sbb
pop
int3
add
pusha
lods
sahf
add
mov
lock
out
pop
add
add
mov
push
mov
cmp
xchg
fadd
lds
scas
sbb
mov
mov
mov
jo
insl
sbb
sbb
mov
and
cwtl
add
clc
xchg
cld
stos
add
adc
sub
mov
pop
scas
cli
bound
shll
push
pop
nop
cwtl
push
push
or
push
adc
in
nop
and
test
test
cltd
jp
or
lods
lret
xor
and
push
dec
insl
das
or
sub
lret
xchg
push
lods
fimuls
addl
mov
movb
imul
xchg
xor
add
test
out
pop
xchg
es
imul
and
test
lock
stc
call
xorb
push
sub
cmp
test
mov
add
mov
das
xchg
mov
cld
lcall
scas
imul
pop
mov
xor
inc
bound
lods
out
push
pusha
in
adc
cltd
add
pop
lds
pop
mov
mov
sbb
mov
adc
cmp
add
fdivp
adc
adc
in
jns
add
add
add
add
xor
lahf
test
mov
mov
sub
add
sub
pop
cmp
lock
mov
in
or
lods
cmp
fsubrs
add
push
cmp
call
ret
rorl
add
cltd
fnsave
inc
cwtl
jb
int3
add
hlt
neg
push
add
mov
pop
imul
fwait
mov
mov
xchg
sub
into
adc
sbb
jg
xchg
mov
rclb
popf
add
dec
enter
cs
add
pop
sub
rolb
cltd
fs
ja
inc
ds
mov
adc
stos
mov
push
lods
push
fcoml
call
js
add
pop
iret
add
int
loopne
mov
add
pop
daa
movsb
dec
mull
out
and
clc
sub
test
cmp
mov
cmc
pop
add
loop
mov
orb
je
add
loopne
test
int
repnz
aad
sub
negb
enter
or
loop
mov
pop
add
cmp
les
cld
dec
push
ficoml
add
adc
adc
inc
sub
jmp
enter
push
sbb
imul
js
stos
push
inc
lcall
push
dec
add
mov
sbb
les
rolb
arpl
add
lcall
and
lea
add
cmp
dec
and
xchg
push
mov
mov
xchg
icebp
or
add
dec
lret
mov
sub
call
add
dec
cmp
loopne
movsb
add
mov
es
cwtl
jno
or
mov
add
loop
add
and
mov
and
add
cmp
dec
dec
jae
cld
xor
insb
or
and
loopne
add
fs
lret
out
adc
push
mov
xor
push
add
adc
xchg
ds
xchg
call
test
sbb
add
pop
arpl
div
push
mov
sbb
loopne
add
push
push
push
fcompl
add
stos
lret
fdivs
mov
xor
cld
mov
pop
mov
push
xchg
sbb
sub
imul
adc
mov
sbb
jmp
xor
cmp
cmp
push
out
sub
pop
addb
mov
sub
push
sbb
cmp
std
pusha
aas
and
hlt
call
in
scas
mov
jmp
cs
movlps
inc
and
sbbb
xor
test
popa
inc
testl
inc
cmpsb
jae
mov
add
leave
mov
pop
or
add
pop
fcomps
inc
das
pop
inc
xor
js
repnz
mov
mov
and
add
dec
scas
pop
jmp
ret
out
pop
inc
cmp
pop
adc
addr16
xchg
mov
push
jmp
stos
mov
add
insl
inc
push
dec
sbb
or
pop
loope
mov
ret
add
fisubrl
mov
sti
fsubp
xchg
mov
sbbb
iret
test
lods
roll
pop
xor
mov
movsb
in
add
int
addb
lea
insl
mov
inc
aas
lock
mov
lret
mov
adc
add
push
jns,pt
mov
sub
dec
add
imul
adc
sub
dec
cmc
add
mov
push
adc
push
and
fwait
scas
mov
hlt
in
mov
loopne
jo
and
shr
shll
or
int3
cmc
ljmp
test
loopne
push
jp
dec
andb
test
js
jl
or
cwtl
lock
pop
xchg
add
adc
sbb
push
je
add
dec
push
xchg
fcoml
mov
aas
jnp
push
lock
loopne
pop
scas
shrb
movsl
mov
cli
push
sub
xor
nop
add
fsubl
jecxz
sub
pop
notb
or
push
cmc
push
nop
inc
enter
das
or
aad
dec
sbb
jge
mov
pandn
dec
lret
mov
push
add
sti
push
mov
nop
div
popa
insl
mov
ret
add
jmp
sbb
mov
nop
lret
pop
or
sbb
and
les
test
add
shrl
imul
scas
xchg
repnz
push
nop
jge
lret
or
int
out
mov
cltd
xchg
sub
mov
repz
pusha
and
push
fcoml
jg
mov
xor
or
add
cmp
push
repz
mov
and
xchg
add
imul
cmp
or
dec
repnz
mov
scas
add
mov
call
jp
and
loopne
js
mov
divl
inc
test
faddl
jg
movsl
push
ja
or
mov
xchg
inc
dec
subl
cli
outsl
xor
pop
add
nop
mov
je
add
sbbb
adc
and
ret
and
sbb
or
jg
les
pop
dec
rclb
fisubs
enter
pusha
add
insl
push
movsl
dec
enter
scas
jmp
push
cld
test
loope
push
in
dec
adc
add
test
imul
test
sub
jnp
add
mov
push
dec
pusha
push
or
mov
ret
adcl
sbb
adcb
in
add
push
or
pop
cli
adc
or
sar
add
leave
jge
xor
add
mov
mov
push
fiaddl
jns
fistps
repnz
adc
or
xor
dec
ljmp
jb
add
not
jne
xor
push
dec
inc
out
jae
pusha
mov
or
and
call
ljmp
jbe
push
adc
sbb
push
imul
cmp
push
mov
addr16
sbb
dec
push
add
shll
fists
lods
add
dec
cltd
ja
dec
inc
lahf
add
pop
ret
aas
add
lock
lock
dec
xchg
jno
inc
iret
and
mov
adc
dec
push
cmp
pushf
mov
shrl
dec
aas
cld
mov
mov
push
push
arpl
rcr
push
inc
mov
cmp
in
daa
loope
adc
dec
fcoms
enter
cltd
adc
pushf
mov
mov
mov
fisttps
push
insl
jg
les
inc
cmp
push
inc
inc
cmp
inc
jo
cltd
je
add
mov
jns,pn
dec
xor
adc
cmp
bound
mov
inc
push
cmp
add
mov
mov
add
sbb
sti
lea
fisttps
pushf
insb
add
pop
adc
sbb
mov
fldl
fsts
jg
and
rcll
inc
pushf
mov
ficoms
or
iret
cmpsl
mov
adc
pusha
jl
repz
push
xor
xadd
out
in
xchg
add
mov
add
cwtl
sbbl
jbe
rolb
jle
adc
cmp
out
mov
jnp
icebp
add
xchg
sarb
pushf
add
imul
jno
fs
comiss
push
inc
repnz
dec
xchg
je
sbb
fcomp
repz
and
dec
or
mov
add
lock
dec
or
and
xor
xor
mov
andb
movsl
or
xor
mov
dec
adc
mov
testl
cli
mov
icebp
sub
int
scas
test
repz
adc
pop
dec
nop
adc
ss
sub
mov
insl
inc
fs
lock
or
mov
add
lock
into
pop
cmpsb
inc
loopne
adc
add
xor
add
cmp
pop
push
int3
jns
cld
pop
mov
sub
push
mov
pop
dec
inc
push
push
sbb
push
stos
push
add
loope
addr16
ret
test
pop
popa
pop
fdivs
lret
mov
xor
sub
xor
or
stos
pop
mov
jmp
repz
mov
imul
and
sbb
inc
cmp
pop
out
hlt
jnp
push
outsb
enter
sbb
addr16
sar
popa
outsb
mov
add
mov
inc
shlb
mov
add
popf
fstpt
js
dec
sub
lds
xchg
add
loope
stos
mov
inc
mov
push
xor
mov
cltd
inc
test
inc
cs
lret
cld
fiaddl
fcoms
mov
hlt
cmpl
imul
add
subl
jnp
test
add
es
pop
mov
xor
lret
clc
jge
add
cmp
sarl
pop
push
sbb
in
stc
inc
sub
adc
arpl
adc
add
sbb
sti
add
imul
daa
adc
cmp
mov
pop
add
push
add
cmp
pusha
cltd
push
daa
add
jae
xchg
sbb
mov
pop
js
inc
pop
imul
sbb
add
imul
xor
outsl
inc
je
sbbl
add
mov
push
loopne
or
nop
push
inc
outsb
add
add
add
inc
or
pop
mov
in
jecxz
andl
loop
addr16
push
inc
scas
push
pop
notl
xor
mov
inc
add
in
pushl
js
add
js
push
add
fstps
add
xor
dec
pop
xchg
in
add
sub
dec
pop
ja
aam
jae
xchg
out
push
add
push
jge
sbb
dec
dec
ret
inc
and
or
fsts
addb
mov
cs
mov
add
scas
jne
xor
add
lock
or
bound
mov
fdivl
inc
clc
xrelease
add
pop
insb
jmp
jne
out
inc
adc
repnz
pop
sub
mov
lods
mov
add
mov
and
cmp
ljmp
dec
and
push
fldl
mov
mov
sarb
add
add
xchg
int3
leave
mov
xor
addl
and
jmp
xor
lea
push
xchg
mov
push
jmp
bound
sbb
in
inc
sbb
jl
add
orb
cmp
push
pop
mov
add
mov
xor
inc
mov
jne
imul
ret
ja
outsl
rolb
dec
leave
add
mov
add
int
or
addb
push
add
and
push
push
ja
mov
mov
add
arpl
adc
loopne
xor
out
jb
jbe
add
jbe
and
mov
dec
daa
sbb
add
xchg
fisubrl
add
cltd
dec
test
jmp
xchg
add
adc
add
pop
pushf
lock
test
jo
mov
outsl
jle
int3
adc
shll
iret
jbe
cmp
sbbl
les
sub
ret
sbb
inc
rcrb
mov
dec
leave
push
lahf
jl
add
xchg
mov
sbb
mov
pop
repnz
mov
pushf
sbb
add
lds
dec
push
repnz
and
nop
inc
add
shlb
es
mov
add
mov
xchg
fstpl
jecxz
push
bound
loopne
pop
ficoms
dec
xchg
pushl
xor
add
arpl
inc
clc
scas
cs
sahf
cmp
out
add
in
ror
sbb
cld
je
test
jne
stc
jl
xchg
addb
pop
das
mov
int3
push
sub
imul
mov
lds
xchg
inc
scas
add
mov
fiadds
loopne
and
stos
add
call
js
aaa
out
push
sbbb
leave
cmp
or
sahf
mov
aas
sub
add
insb
notb
inc
divl
mov
mov
mov
pop
adc
roll
or
ret
xor
ja
sub
cmp
cmpsl
pop
test
push
dec
dec
ror
dec
clc
inc
xchg
and
push
jge
inc
add
add
push
mov
adc
lods
aas
mov
rcrb
xor
jae
sbb
push
sbb
dec
pop
pop
int3
lcall
dec
mov
jne
dec
xor
cmp
popa
adc
out
mov
mov
insb
add
dec
sar
loopne
add
ret
cwtl
aam
mov
mov
ljmp
dec
jne
or
loope
fnstenv
addl
add
mov
and
adcb
adc
add
sbb
popa
out
jle
add
cmpsb
sti
sarl
cs
push
and
movsb
pop
stos
sarl
repz
lret
add
mov
out
rclb
push
scas
push
xor
xor
movsl
test
sub
and
daa
and
dec
mov
or
daa
les
jge
or
nop
mov
inc
adc
jmp
xchg
mov
fstpl
xor
repz
cmp
in
xor
add
sti
in
insb
adc
dec
cmp
mov
insl
xchg
in
push
out
pop
sub
lahf
rolw
sahf
mov
jne
dec
xchg
in
sbb
dec
sti
sub
adcb
and
fmull
add
dec
push
cmp
sti
mov
into
add
cmpsb
ret
cmp
xor
pop
xchg
xlat
nop
jecxz
xor
and
add
jge
int
scas
inc
add
ds
dec
push
popf
cmpsb
and
xchg
add
jbe
int3
pop
scas
push
xchg
repnz
xor
mov
pop
cltd
jno
adc
add
imul
ret
outsb
jo
pusha
lock
mov
xchg
sbb
sub
jge
or
mov
in
jae
popf
ret
das
cmp
int
add
pop
ss
push
repz
jmp
loope
xchg
and
f2xm1
add
out
sarb
or
rep
scas
test
push
lret
das
es
outsb
stos
lock
add
push
mov
sub
dec
mov
pop
adc
sbb
push
insb
jae
cs
mov
sub
fsincos
pop
lea
sbb
mov
and
es
cmc
lahf
daa
push
paddsb
mov
mov
shlb
loopne
add
fs
cli
push
inc
mov
add
jecxz
and
loope
add
fldl
call
adc
mov
push
pop
mov
pusha
test
lcall
cltd
out
xor
rorl
adc
in
repnz
mov
insb
in
mov
adc
xchg
push
lods
int3
push
jmp
lea
incl
push
stc
out
xor
xor
jns
add
subl
aad
and
push
inc
arpl
inc
xchg
in
jae
fdivrs
cbtw
scas
stos
sbb
push
dec
ret
rorb
add
inc
test
add
sub
jo
test
sub
lock
mov
inc
and
xor
addb
jnp
pop
push
sbb
jnp
sarb
pop
in
aam
mov
repnz
div
and
and
out
mov
imul
inc
mov
je
and
in
stc
and
sub
and
scas
push
push
cmp
push
fdivl
xor
or
cli
or
daa
add
or
and
push
inc
add
pusha
shl
aaa
or
and
sbb
cmpsb
mov
sub
push
mov
std
mov
xchg
mov
xor
mov
lock
int
aaa
mov
cmc
sub
push
pop
es
sbb
xor
test
push
enter
jno
jp
add
push
sbbl
add
iret
ljmp
loop
jnp
sub
sub
adc
ljmp
in
lret
loop
add
dec
xor
pop
pusha
sahf
jl
pop
add
xchg
cmp
or
mov
pusha
js
mov
mov
jmp
test
clc
sbb
xchg
ret
jmp
jnp
inc
mov
add
lds
mov
jg
insb
cwtl
lahf
pop
xchg
add
dec
sti
stos
cmp
add
mov
xor
mov
ljmp
enter
inc
imul
jns
jg
add
push
mov
ljmp
aaa
mov
scas
add
mov
addl
jle
lods
mov
dec
push
or
cs
xor
into
fadds
mov
mov
inc
std
inc
add
dec
or
add
fnstenv
repnz
cmovbe
cwtl
test
sti
negl
ret
adc
popf
or
rcrb
inc
push
inc
pop
jnp
add
imul
clc
sub
insl
add
cli
lahf
lea
divb
mov
and
fldenv
or
filds
xchg
inc
xchg
add
or
sub
sub
int3
movb
movsl
mov
add
les
jl
ror
jne
pop
dec
cmp
jle
clc
mov
and
inc
push
popf
sub
in
and
clc
enter
adc
imul
mov
in
push
popa
jae
nop
leave
call
dec
adc
inc
shlb
loopne
push
add
or
das
xorb
xchg
xchg
bnd
sub
cmp
loop
push
inc
cmp
dec
add
call
lcall
out
add
in
loopne
mov
cwtl
clc
jbe
add
jg
cwtl
pusha
testl
andl
add
imul
add
push
cld
outsb
xchg
leave
or
mov
add
adc
jae
jecxz
mov
hlt
add
xor
jg
cmc
loope
cmp
push
cmp
aas
xchg
add
inc
popf
xchg
clc
cmp
inc
jne
lret
or
lahf
mov
and
push
add
push
jge
lods
adc
mov
shrb
loope
mov
cmp
push
jo
xor
jbe
hlt
dec
imul
xchg
inc
jnp
test
jae
xchg
inc
sub
push
test
mov
add
dec
cmpsb
insb
dec
sbb
push
xchg
cs
cld
and
cmp
mov
movsb
mov
add
mov
inc
dec
outsl
cltd
inc
cmpsl
test
xlat
sub
add
add
arpl
xchg
fdivs
bound
inc
lods
sub
and
add
dec
adc
es
cmp
sbb
bnd
add
lcall
leave
or
sub
test
mov
push
fsts
outsl
add
adc
xchg
push
pop
mov
add
dec
ret
popf
sbbb
adc
shlb
inc
movsl
add
popa
push
sahf
sbb
jecxz
jo
dec
repnz
or
pop
add
cmpsl
add
or
and
fidivrs
dec
lret
test
add
and
stos
pop
jge
add
test
jb
cmpb
mov
aam
pop
add
lods
cmpl
jg
sbb
dec
inc
jne
jecxz
xor
lods
inc
or
jb
ret
scas
adcb
add
or
add
bound
mov
outsb
cli
jne
sub
cmp
mov
gs
mov
andb
push
xchg
and
std
mov
repz
out
out
mov
into
mov
mov
fldt
sub
rcr
xlat
inc
push
outsl
and
fmul
add
adc
jmp
out
jbe
sub
ljmp
or
mov
add
rorb
aaa
mov
fstps
popf
popa
dec
adc
add
call
shll
xor
je
insl
dec
stc
add
xchg
add
mov
add
push
push
dec
sub
mov
out
sub
push
out
clc
xor
popf
rolb
into
and
jge
inc
les
cwtl
imul
adc
sub
aam
insl
cmp
loop
mov
lds
fnstsw
xchg
sbb
fisubl
jge
out
addb
je
lea
dec
xor
xor
test
pusha
call
movb
cmp
ljmp
lret
dec
or
add
push
aaa
cwtl
lock
aas
lods
mov
rcl
mov
and
ret
popa
mov
out
and
mov
sahf
push
xchg
add
adc
dec
add
es
adc
jbe
xorl
out
in
lahf
das
add
imul
clc
inc
pop
jecxz
mov
inc
lock
xchg
hlt
repnz
ficoml
stc
cld
add
xchg
out
pusha
jle
add
xchg
inc
arpl
cmp
add
mov
sbb
mov
add
push
push
int3
cmc
int
sub
jae
or
dec
push
insb
jns
dec
shl
ss
addb
xor
call
cs
loopne
jmp
adc
pop
aas
icebp
cmpsl
xorb
in
das
pop
dec
out
aas
or
or
fadds
sti
orl
push
add
aad
outsl
rorl
subl
sti
sub
jbe
add
mov
cmp
aad
xchg
fcmovnu
cmc
das
call
and
rcrb
push
lods
mov
sbb
sbbl
add
mov
shll
aas
lret
mov
pusha
addl
stos
ja
lods
mov
jecxz
push
jl
adc
add
mov
adcb
cmp
sub
push
add
sbb
ret
add
bound
les
sbb
sbb
mov
fistps
dec
inc
addb
jmp
sbb
pop
cli
in
inc
add
in
pop
sub
fadds
movsb
and
repz
mov
fcmove
ljmp
or
int3
fsubr
mov
sbb
jnp
add
test
mov
loopne
add
push
pushf
xor
xor
jp
pusha
sbb
jbe,pt
mov
jle
or
push
inc
pop
jp
scas
inc
inc
push
and
xorl
and
out
in
push
add
shrl
add
insl
sbb
test
js
sbb
jo
vmwrite
or
cwtl
add
mov
cmp
repz
inc
lock
idivb
fs
push
lahf
loop
mov
add
ret
jae
add
cwtl
pop
stc
insb
add
loope
xor
out
aam
pushf
dec
xorb
sbb
rorl
xor
or
sbb
and
sbb
sbb
add
inc
sub
add
mov
gs
stos
xchg
mov
mov
adc
cmp
push
add
adc
jle
aas
mov
subb
cmp
sub
cmp
inc
stos
out
and
mov
pop
jne
in
xor
orb
iret
jns
add
pusha
jg
adc
fldcw
add
iret
std
add
addps
add
jo
imul
int3
lds
pop
push
add
adc
add
fldt
add
xchg
in
add
xchg
ffreep
cltd
lock
data16
xchg
lret
xchg
mov
xor
arpl
pushf
sub
dec
scas
xchg
repnz
inc
add
pop
rcrb
pop
jns
add
test
push
sti
fdivs
mov
clc
add
enter
push
shrl
cmp
pusha
clc
inc
pop
sbb
lret
xor
jmp
cmp
jnp
push
aas
jae
ror
add
ret
insl
push
xchg
add
cmp
jp
out
adc
scas
add
cmpsb
outsl
push
push
or
mov
mov
mov
mov
push
cld
es
and
add
addr16
push
adc
into
mov
lods
adc
xchg
repz
add
jg
fs
push
xchg
stos
ss
adc
cmpsl
imul
aas
mov
add
dec
push
rorl
jnp
add
js
or
inc
mov
add
xor
outsl
fidivrs
and
out
adc
mov
xchg
in
rol
dec
test
jne
mov
add
cmp
mov
aam
hlt
sahf
insl
add
test
clc
loopne
add
add
pop
test
sbb
mulb
sti
and
stc
dec
sub
hlt
adc
and
add
insb
pop
enter
stos
cmp
xchg
mov
jno
jns
cwtl
inc
add
jg
outsl
test
test
insb
push
pop
fs
js
bnd
sbb
mov
flds
dec
rorl
and
xchg
add
and
xor
sbb
mov
sub
lea
je
or
jne
add
mov
cmp
imul
adc
faddl
xor
and
sub
cmp
mov
push
and
inc
inc
js
fld1
jo
jbe
mov
mov
cmp
cmpsb
dec
addr16
xchg
aam
jns
adc
pusha
pop
nop
out
popa
jmp
or
mov
jae
inc
ds
add
push
stos
movd
xlat
aad
sub
inc
scas
adc
sbb
out
sti
push
xchg
xchg
mov
add
mov
add
popf
loopne
sub
mov
sarl
cmove
pusha
inc
ficoml
mov
test
into
add
adc
mov
cwtl
jno
es
push
jno
add
scas
sarl
stos
and
fistps
pop
and
add
cmc
aad
cmp
mov
ja
xor
gs
call
xor
dec
pop
inc
xor
inc
push
inc
loopne
or
xor
push
xlat
fiaddl
mov
js
mov
pop
imull
add
push
add
lods
imul
dec
int3
fiadds
std
pop
add
negl
sbb
int
fld
add
repnz
popf
clc
outsl
sbb
inc
add
lds
and
cld
hlt
sbb
add
xchg
iret
inc
xlat
scas
idiv
loope
cmp
arpl
pop
adc
jnp
lahf
mov
add
mov
lea
outsl
clc
inc
into
adc
cs
pop
jg
add
scas
add
loope
cli
cmc
repnz
call
out
jle
or
jmp
leave
addl
xchg
lahf
nop
cmc
movsb
js
sbb
pusha
aaa
stos
add
rcrb
aam
jno
clc
cmp
scas
sub
fcoms
mov
roll
rcr
ret
sub
jo
dec
xchg
push
sbb
xorb
jle
in
std
or
push
stos
add
cmp
mov
outsl
inc
add
inc
add
loopne
repnz
add
xor
inc
push
jge
out
call
mov
testl
pop
xor
addr16
fadds
cmp
xchg
popa
ja
in
pop
daa
fbld
xor
stos
test
inc
inc
add
sbbb
adc
xlat
add
fnstenv
lods
add
maxps
and
add
fwait
jecxz
loop
adc
jae
ljmp
fwait
adc
pusha
and
add
dec
jnp
or
je
scas
cmpb
jge
mov
daa
int3
mov
pop
xchg
xchg
adc
enter
imul
mov
loope
cmp
adc
xchg
mov
fisttpll
sbb
mov
pandn
or
addb
adc
addr16
add
je
add
sbb
repnz
roll
add
setae
jbe
and
popf
sub
fisubrl
push
or
dec
cmp
sub
ljmp
mov
data16
xchg
roll
pop
xchg
jecxz
mov
icebp
jns
mov
in
cld
lods
add
les
in
pop
cli
and
add
popa
inc
movsl
mov
les
mov
xor
cmpsb
pusha
pop
push
mov
stc
leave
mov
add
push
adc
sarb
pop
pop
jg
add
jo
add
icebp
cwtl
or
fadds
sbb
inc
idivb
add
cwtl
push
push
sbb
loopne
shrl
pop
imul
stos
and
or
test
xchg
sub
xchg
sbb
mov
pushf
add
lods
adc
mov
adc
fs
addr16
xchg
cld
add
in
cs
sti
shr
jae
repz
adc
pop
xor
mov
lock
std
out
mov
scas
repz
pop
int3
sub
les
or
shlb
sarb
xor
mov
or
sbb
sti
vcvttsd2si
push
imul
jae
pop
add
cltd
sbb
push
outsb
aam
test
cmpb
lcall
jae
mov
and
jno
add
int3
dec
adc
movsl
outsb
jo
nop
icebp
rcrl
pusha
jge
std
sahf
in
push
lock
push
pop
shll
sar
pushf
jmp
adc
roll
inc
cmpsb
int3
loopne
add
inc
mov
cmp
out
lahf
fmul
scas
xor
mov
add
enter
in
shrb
iret
hlt
mov
lock
jecxz
and
cld
mov
xor
and
nop
mov
add
pushl
add
jno
test
xor
xor
sbb
into
and
cmp
add
lret
add
mov
cmp
jo
add
lea
mov
in
push
and
into
jle
add
mov
sbb
xchg
mov
shll
mov
add
jp
rolb
pop
outsl
mov
pop
subb
jae
add
xlat
repnz
mov
add
andl
test
mov
pusha
lods
mov
cld
or
jle
fdivl
lahf
insl
dec
pop
mov
enter
cmp
xchg
add
movsb
adc
sbb
xchg
cmp
and
in
inc
js
stos
and
cmp
iret
das
stc
and
push
add
xor
leave
jmp
adc
sub
adc
movsb
push
or
pop
inc
mov
mov
mov
mov
ret
add
es
arpl
add
aas
and
negb
or
add
je
mov
inc
mov
add
sbb
add
adc
jno
mull
int
inc
inc
aad
lock
and
mov
in
sbb
out
or
adc
add
inc
jmp
sub
je
add
xor
ds
xchg
mov
es
stos
mov
inc
shlb
ljmp
loope
test
cmp
mov
in
or
or
push
movsl
cmp
inc
in
nop
push
pop
into
add
pop
jge
push
sbb
movsl
incb
mul
cld
lock
les
mov
lock
hlt
or
sub
loope
mov
and
and
test
das
push
mov
inc
lds
enter
pop
gs
orb
inc
pop
call
adc
add
ljmp
inc
sbbb
cmp
sbb
test
xor
call
add
push
shll
int
xchg
dec
js
or
dec
push
sub
mov
or
push
hlt
cmp
repnz
sub
fistpl
jl
sbb
jno
addl
mov
xchg
xor
nop
fcoml
adc
arpl
mov
add
jge
or
faddl
mov
xor
sub
mov
inc
pop
adc
add
lock
adc
mov
dec
jmp
aaa
neg
imul
jne
fs
rolb
mov
iret
mov
enter
ds
loope
lds
sbb
xor
cmp
sbb
test
mov
mov
lcall
into
xlat
cmp
subb
mov
mov
jae
add
mov
and
add
ret
sub
fmull
push
stos
xorb
pusha
mov
loopne
rcrb
addl
or
jecxz
xchg
mov
mov
in
dec
mov
add
lds
add
fsubl
inc
add
arpl
testb
inc
push
adc
andl
out
sti
call
dec
or
mov
cmc
loopne
movsl
jae
dec
push
lock
jb
add
and
add
inc
cli
str
mov
sahf
add
lahf
mov
or
sub
add
insl
hlt
popf
mov
shlb
jbe
adcb
das
add
and
mov
xchg
enter
add
int3
sysret
add
sbbb
sahf
sbb
nop
cmp
push
das
test
js
popa
mov
sbb
loopne
sahf
push
push
and
adc
add
adc
lret
mov
cltd
mov
push
daa
repz
pop
dec
add
push
int3
jno
push
sub
sbb
and
push
pop
stc
add
test
cltd
lret
aad
es
xor
insl
idiv
cs
sub
cmp
xchg
or
xor
mov
leave
mov
xor
daa
imul
push
lcall
push
call
dec
xchg
ja
add
inc
shll
out
mov
fistpl
subb
sbb
pop
outsb
xor
or
cmp
inc
add
pop
lock
repnz
clc
aas
call
cmc
add
aaa
popf
out
test
push
mov
lahf
adc
xor
add
pop
les
cmpsb
repnz
ss
dec
sbb
pop
xchg
lea
ljmp
push
lcall
aad
repz
fcompl
mov
jne
jp
sbbb
cmp
pop
jecxz
or
add
inc
sub
scas
enter
mov
popa
outsb
ljmp
jecxz
test
mov
xor
fmul
in
adc
fisttpll
loopne
mov
cs
xchg
outsl
test
or
leave
aam
lds
inc
add
fsub
lret
push
add
jbe
clc
fwait
sub
add
subb
add
push
lret
aad
add
jbe
xor
mov
outsl
xchg
add
inc
sub
xchg
push
jle
add
sub
sahf
or
xor
das
stc
test
jo
lock
inc
lock
mov
inc
cmpl
inc
xor
pop
lahf
xor
push
mov
jo
add
dec
cmp
push
subb
xchg
movsb
mov
xchg
mov
add
pop
rolb
dec
cmp
addr16
push
mov
push
cwtl
cmpl
pop
inc
popf
jbe
and
or
jno
and
pushf
sub
lods
les
or
and
pop
push
pop
inc
add
sbb
nop
in
loopne
rorb
sbb
pusha
and
nop
shlb
push
dec
nop
enter
xchg
je
sub
dec
adc
rol
enter
inc
int
mov
xor
je
fmull
inc
sbb
lods
xorb
jae
xor
mov
push
mov
dec
or
outsb
mov
orb
hlt
jbe
pop
add
cmpsl
adc
repz
dec
int3
sub
or
outsb
cmpsl
cmp
loopne
push
xor
jecxz
jno
mov
repz
mov
dec
lahf
mov
das
popa
xchg
cmp
mov
test
add
daa
or
xor
sub
sbb
jno
sub
and
mov
xor
scas
and
sbb
mov
xchg
ja
and
xchg
je
lock
dec
and
in
or
das
enter
inc
cmp
adc
inc
push
enter
loop
jecxz
cmp
add
cli
mov
cmp
fmuls
jae
jnp
iret
mov
dec
and
ret
and
pushf
xor
mov
ds
lret
idivb
cmp
sti
push
pop
aad
in
xchg
xchg
int3
xor
add
fistpll
add
dec
add
icebp
aaa
mov
cmp
dec
sarl
xchg
and
aaa
pushf
sub
dec
cmpsb
lods
jmp
sub
mov
adc
stos
xchg
mov
ds
add
push
aad
cmpl
aas
cmp
cs
sbb
dec
shll
add
stc
or
lods
add
movsb
adc
mov
mov
sbb
push
ret
cs
sub
mov
and
bound
pop
or
lock
into
ds
add
shl
lahf
or
push
cmp
push
paddsw
cld
push
sub
test
push
mov
mov
sub
cltd
adc
mov
pop
add
mov
test
add
add
out
push
stos
or
dec
sbb
inc
and
cmp
nop
inc
mov
dec
icebp
pusha
cmpsb
clc
leave
repz
in
xchg
cs
xor
dec
mov
shl
orl
dec
push
pop
andl
mov
or
shrl
xlat
xchg
adc
cmp
pop
push
fwait
mov
mov
pop
push
ret
or
or
pop
hlt
push
and
cwtl
add
add
cmp
insl
pusha
sbb
jp
adc
add
sub
js
sbb
sub
adc
inc
mov
outsl
loop
xchg
pushf
and
icebp
and
jne
daa
mov
mov
pop
mov
shrb
cmp
leave
add
popa
mov
inc
in
pop
mov
lds
mov
loopne
add
add
mov
bound
fucomp
dec
xchg
xchg
or
pop
inc
in
in
push
mov
das
cmp
jl
ds
mov
int
sub
shlb
xor
popa
inc
add
push
xorb
mov
les
xor
add
fidivl
push
xchg
or
rclb
xchg
movb
mov
push
mov
or
es
or
sub
fadd
dec
cmp
data16
xchg
lret
jo
pusha
jp
cwtl
aaa
in
cmp
xchg
push
xor
cwtl
cwtl
dec
mov
push
dec
inc
call
mov
sub
pop
mov
push
adc
cmp
paddsb
jg
dec
mov
dec
pop
cmp
in
mov
or
ret
xor
lods
cmpsb
dec
adc
and
inc
lods
mov
mov
sbb
sbb
cmp
ficoms
xor
mov
sub
push
push
mov
push
je
pop
inc
cmp
adc
xchg
dec
xor
inc
xchg
clc
cld
cmp
mov
sub
mov
or
imul
xchg
js
xchg
xor
fmull
or
cmp
cmp
cs
mov
pop
int
insb
inc
ljmp
nop
pushf
cmp
cmp
jo
dec
pop
xor
popf
dec
pop
push
adc
clc
loop
xor
xchg
mov
pop
mov
or
or
js
push
inc
shl
mulb
adc
test
cmpsl
cwtl
push
int3
pop
loopne
movsb
mov
cwtl
dec
or
or
xchg
int3
adc
add
lret
adc
add
push
xchg
adc
jp
insb
mov
lds
dec
adc
dec
or
mov
mov
xchg
sbb
mov
push
xor
push
or
jno
sub
dec
cmp
mov
add
cltd
pop
dec
cmp
aam
jb
xor
dec
pop
addr16
test
inc
lds
or
movsb
stc
loop
or
out
adc
fsubs
pop
lcall
sub
mov
cmp
xchg
xor
loop
xchg
nop
xor
sub
mov
mov
mov
addr16
pop
push
mov
enter
mov
stos
adc
inc
mov
mov
push
aam
cmp
xor
out
mov
inc
dec
inc
movsb
or
mov
add
mov
or
roll
mov
jae
fwait
movsb
dec
push
jno
sbb
cmp
pop
push
insl
mov
cmc
test
js
jnp
sbbb
and
mov
lret
data16
in
pushf
xor
mov
jbe
push
mov
or
cli
adc
and
fldenv
or
movsl
ret
in
inc
dec
or
insl
adc
sbb
jo
shlb
loopne
or
test
pop
adc
pop
mov
cwtl
and
dec
jns
or
leave
ficoml
hlt
or
adc
enter
dec
adc
sahf
sub
xor
das
or
add
and
push
inc
mov
xor
adc
dec
rolb
jl
rclb
inc
adc
test
test
xchg
adc
pop
or
int
or
cmpsb
pop
sbb
pusha
insb
or
adc
dec
jmp
mov
xor
sbb
adc
dec
and
jns
push
les
js
inc
popa
enter
lcall
mov
lods
and
adc
stc
fistl
mov
pop
xchg
pusha
and
divb
xchg
nop
jbe
dec
cmp
pop
push
mov
into
add
or
push
and
mov
dec
dec
call
mov
pop
dec
shrl
inc
xchg
add
js
out
scas
iret
loopne
mov
and
stc
and
or
cmc
sub
addr16
shrb
movsb
sub
cmp
test
push
adc
dec
or
mov
jno
mov
andb
jl
xor
mov
inc
adc
cmp
dec
add
cmpsb
loop
movsb
sub
enter
cmpsb
xor
imul
cmpsl
add
or
inc
lret
loopne
add
mov
mov
fistl
mov
jbe
or
or
rorl
mov
inc
sub
pop
js
jae
js
or
daa
adcl
test
sub
cmp
lea
pushf
loopne
jecxz
jmp
or
test
jecxz
test
mov
xor
xor
cmp
inc
test
andl
or
pop
lods
and
pop
sub
sbbl
and
orb
stos
pop
jo
nop
shl
cmpsb
out
add
in
push
push
sub
inc
push
insl
sbb
icebp
pop
inc
mov
inc
xor
dec
mov
jo
pusha
sub
bound
js
mov
xchg
xchg
popa
dec
jg
mov
stos
mov
add
imul
mov
int
int3
dec
sub
sbb
xchg
rcll
pushf
xor
inc
enter
jns
and
mov
lret
or
arpl
push
mov
clc
add
test
xor
add
xor
dec
mov
inc
rolb
in
and
jns
mov
and
ficomps
cld
and
lahf
pop
jecxz
or
fisubrl
and
js
jns
cmp
add
jle
and
psubd
inc
inc
xorb
jnp
add
aad
pop
mov
aam
ret
or
dec
add
psubsb
aaa
call
icebp
mov
subb
xchg
sbb
shrb
cmp
hlt
lret
pop
inc
and
push
pop
cmp
inc
andps
aaa
imul
pop
dec
mov
pop
dec
rorb
icebp
ja
add
movsl
add
pop
rolb
das
dec
xchg
nop
inc
xor
dec
jne
cltd
sarl
xchg
jecxz
jg
cli
ret
dec
outsl
dec
daa
xchg
and
sub
movsb
mov
cmp
add
shl
jo
ret
mov
mov
fmulp
pusha
jns
shrb
fdivs
push
mov
aad
pop
enter
js
cmp
adc
nop
mov
and
inc
daa
and
jo
sub
jp
test
test
xchg
push
dec
nop
dec
sbb
jle
pop
cmp
cmp
test
add
adc
or
push
insb
add
and
add
and
inc
lock
nop
mov
mov
add
outsb
mov
nop
cmpsl
sahf
enter
and
dec
jp
mov
sbb
orb
imul
scas
fcoml
inc
cmp
mov
or
jecxz
jmp
jo
add
pushf
mov
dec
jo
xor
cwtl
push
dec
popa
test
xorb
aam
lret
and
xchg
mov
pop
dec
in
push
jle
and
push
mov
sbb
xchg
scas
inc
xchg
sub
test
pop
or
rorl
movsb
inc
or
movsl
add
out
sarb
je
outsb
sub
cmp
dec
cmp
dec
xor
add
mov
jo
pop
lods
movsb
aaa
sbb
lea
push
rolb
stc
xchg
dec
pop
add
shll
faddl
add
mov
inc
xchg
push
inc
rol
shr
add
dec
faddl
in
or
pusha
mov
test
movl
fadds
add
cmpsl
leave
cltd
mov
popf
addr16
sbb
enter
add
cltd
hlt
out
mov
adc
jecxz
sbb
add
cmc
cmpsb
pop
xchg
leave
dec
cmp
inc
ds
inc
and
or
movsb
xchg
inc
mov
or
fs
insl
rcr
mov
aam
mov
add
mov
int
pop
mov
add
outsb
dec
leave
bound
and
xor
clc
adc
xchg
lds
cmp
inc
inc
adc
push
hlt
mov
dec
inc
dec
leave
and
xor
push
cmpsl
mov
hlt
mov
test
xlat
cmpsb
inc
sub
bound
add
outsl
mov
xor
cmp
aaa
xchg
pushf
or
dec
loop
inc
adc
inc
cmp
or
adc
inc
mov
add
pop
int
bound
push
sub
sti
dec
xor
adcl
roll
sub
pop
and
clc
xchg
lock
add
into
inc
xor
enter
mov
sub
xor
cmp
outsl
jle
cmp
xor
pop
incl
leave
sub
xchg
add
andb
add
sbb
mov
or
inc
sbbb
rcll
leave
and
xchg
nop
ds
add
sbb
adc
adc
aas
andb
and
inc
pop
cli
dec
shlb
sub
mov
loope
cs
add
dec
mov
push
jns
std
and
lods
dec
xchg
cmp
sahf
test
cmp
pushf
shll
pop
pop
and
test
xor
popa
shrb
lret
jnp
in
pop
sbb
add
add
sub
jb
pop
xchg
ja
mov
add
xchg
xchg
out
fildl
rclb
cmp
pop
sti
mov
jle
fsts
xlat
fiaddl
cmc
xchg
xchg
xor
pop
cmp
sub
outsl
push
mov
add
addl
add
mov
fcomps
adc
aaa
add
dec
xchg
lock
cld
rep
mov
ficomps
add
sub
mov
or
mov
add
out
push
shlb
jns,pn
add
xchg
xchg
sarl
sahf
shll
ja
inc
and
pop
xor
xchg
mov
xchg
fistl
mov
push
mov
or
and
jle
mov
daa
or
fistl
mov
lcall
mov
push
and
aas
cs
jae
ss
push
lea
loope
sbb
es
out
push
mulb
add
jno
mov
sbb
mov
push
in
mov
fnstcw
fbstp
inc
cli
push
jp
add
out
les
xchg
addl
pop
jnp
jg
and
paddq
push
mov
inc
xorl
ret
mov
mov
add
mov
mov
fisubl
sahf
xor
mov
jne
xor
lret
aas
lock
xchg
pop
xchg
lahf
xchg
scas
shrb
mov
outsb
pop
into
inc
test
cmc
sub
insb
andl
sub
out
adc
pusha
pop
cmpsb
dec
sub
add
or
repnz
sbb
insb
pop
add
dec
add
iret
xchg
test
lea
cmpl
mov
sbb
enter
mov
pop
adc
outsl
xlat
fstpt
pop
stc
add
scas
dec
and
lcall
mov
fistps
roll
pop
xchg
insl
scas
xchg
and
and
data16
lods
lea
add
insl
movsb
mov
xchg
add
xor
jne
mov
test
pop
add
in
loope
push
aam
add
push
inc
mov
outsl
dec
cmp
hlt
mov
int
pop
fldcw
pushf
call
scas
or
mov
pop
add
and
ret
outsl
cmp
icebp
int3
xchg
out
aad
push
jg
lahf
sub
mov
aam
push
fnstenv
jbe
pop
loopne
sbbb
popa
mov
add
jecxz
ret
jno
inc
fimull
push
and
adc
loope
sbb
loop
xor
or
and
pop
add
testb
int3
xlat
enter
mov
cltd
push
dec
sbb
xchg
mov
pop
sub
add
add
arpl
aam
sbb
inc
shl
add
test
int
pushf
repz
mov
add
leave
xor
add
cmp
imul
mov
sub
paddd
add
shll
in
cmp
and
xchg
je
push
mov
push
imul
sbb
in
ja
sbb
imul
cmp
es
dec
cmp
pop
add
sbb
xchg
mov
jl
jne
lret
add
mov
stos
hlt
dec
sub
insb
pop
ljmp
cmp
push
and
xchg
ja
fsubr
lret
or
stos
outsb
sti
loopne
in
or
ret
pushf
jno
xor
repnz
push
push
scas
mov
add
lods
pop
cmpsb
addb
pop
add
cmp
sbb
inc
pop
sbb
aad
inc
repnz
mov
jnp
gs
test
add
add
xor
lahf
inc
clc
cmp
loopne
in
sub
bound
or
loopne
jmp
inc
adc
xchg
pusha
outsb
sbb
ds
sti
add
fs
in
mov
fisttpl
cld
jb
pop
push
cmc
shrb
pop
in
rolb
dec
pusha
jecxz
adc
loop
aas
cmc
dec
xorl
dec
and
nop
mov
inc
add
lcall
add
add
cld
adc
pop
addb
xchg
jno
cmc
icebp
xchg
repnz
out
jbe
test
fisubrs
push
add
add
pop
push
fdivr
imul
lret
fnstenv
aam
aad
mov
rol
and
mov
mov
jo
pop
sbb
test
in
iret
xlat
add
jno
mov
mov
xchg
sbb
rep
pusha
add
mov
add
rclb
add
and
xchg
and
test
sub
repnz
mov
add
pusha
inc
ror
icebp
movsb
add
adc
lcall
add
inc
cmp
dec
ja
add
inc
andb
jns
cmp
cmp
pop
orl
shlb
adc
pusha
add
adc
and
jp
int3
add
mov
adc
lods
roll
cltd
add
mov
xchg
clc
pop
add
xchg
cmc
lods
dec
fcoms
insb
loopne
add
xor
out
dec
xchg
jle
add
sub
push
cwtl
dec
shrl
dec
popa
mov
pop
push
rcr
cltd
push
inc
add
jmp
gs
mov
out
jo
outsl
icebp
cwtl
push
daa
outsb
idivb
rorl
dec
add
push
xchg
cltd
mov
jmp
add
lock
sahf
add
test
popf
lds
out
std
sub
mov
add
into
sbb
in
rorb
aas
cwtl
mov
fwait
mov
daa
add
jge
bound
int3
hlt
sub
cmpl
clc
jl
add
xor
jns
inc
mov
add
sbb
jg
sbb
adc
sub
fs
leave
add
addr16
mov
lahf
add
dec
nop
xchg
scas
icebp
loopne
xor
out
pop
movsb
inc
cmp
in
mov
xchg
adc
movsl
cli
pop
and
in
add
inc
pop
mov
sarb
into
cmpsl
in
xor
cmp
cwtl
aad
or
xor
xchg
and
cmp
sti
out
mov
inc
sub
out
mov
and
sbb
add
mov
out
add
lcall
push
jb
cli
push
cmp
je
nop
and
cmpsl
adc
inc
inc
add
push
les
stos
cwtl
das
xchg
cmpsb
call
push
sbb
clc
or
pop
mov
cmp
jae
add
jbe
add
insl
cmp
in
push
fistps
cmc
les
aad
stos
or
lahf
fadds
test
sub
add
int
add
adc
mov
jno
outsb
aaa
mov
push
xlat
call
test
inc
and
push
add
pop
xchg
orl
jg
js
add
add
xchg
sbb
rcrl
hlt
jnp
mov
pop
cmp
push
movsb
clc
jp
and
mov
dec
repz
jno
and
das
add
push
fiaddl
and
jge
add
and
add
inc
lock
cmp
jnp
repnz
es
repz
and
xchg
xchg
sbb
pop
or
mov
push
push
or
arpl
ret
loop
push
pop
aaa
int3
aas
roll
scas
pop
les
push
add
or
dec
adc
pop
cmp
out
mov
pusha
add
stos
pop
or
xor
es
mov
pop
sahf
mov
adc
mov
lcall
mov
pop
shll
pop
enter
sarb
sbb
rorl
lds
out
xor
aas
rep
pop
pop
push
in
add
decl
lret
pusha
add
mov
push
mov
data16
mov
insl
dec
enter
pop
fstpl
jo
cmp
xorb
sbb
cmp
jbe
add
into
sub
add
incl
dec
gs
out
mov
popf
incb
ds
insl
cmp
in
lds
jb
add
pop
aad
and
xor
sub
xchg
sbb
xor
hlt
mov
sub
push
lock
jbe
mov
and
jl
add
jb
outsl
adc
push
add
std
div
add
jo
mov
add
inc
popf
aaa
jl
addb
xchg
push
pop
jo
mov
jg
mov
test
sub
ss
out
sbb
jbe
sbb
orb
loope
fwait
push
addr16
push
xlat
insl
or
loope
movsl
pop
push
jo
push
js
dec
xor
xor
leave
add
test
ss
lods
pusha
sbb
and
test
xchg
lods
mov
jg
jne
xlat
in
out
mov
jle
push
adcl
test
add
and
stos
pusha
jns
std
les
popf
or
aam
add
jg
mov
rcrl
jecxz
add
pusha
sbb
cmpsb
pushf
jno
je
and
loop
mov
test
rol
mov
ja
addb
adc
inc
call
push
pop
insb
add
mov
sbb
or
mov
ljmp
pop
movsb
or
outsl
add
cmp
pop
pop
mov
inc
outsb
cmp
hlt
inc
rcll
cmp
or
sbb
cmp
dec
push
cltd
dec
std
jne
push
subb
mov
icebp
sbb
nop
rcrl
dec
enter
push
andl
push
testl
aas
ret
iret
outsl
add
data16
pop
aam
add
jbe
bound
mov
arpl
and
and
mov
add
or
mull
repz
popa
xor
xchg
dec
sbb
push
xchg
inc
jge
and
or
dec
je
les
pop
sahf
js
add
iret
sub
insl
cwtl
xor
push
jl
cmp
dec
js
shlb
pop
add
adc
xor
add
or
ds
addr16
jp
popa
push
inc
outsb
fwait
pop
sub
ljmp
cmp
and
divl
mov
mov
mov
pop
mov
adc
add
sbb
rol
pop
pop
orb
inc
add
pop
mov
imul
xchg
pop
ja
and
notl
test
stos
add
add
pop
cmp
pop
cmpsl
mov
rcr
test
inc
push
jbe
lahf
sahf
test
in
rcrb
sbb
rcrl
lods
mov
xor
adc
dec
sub
mov
pop
out
dec
nop
jo,pn
in
lcall
gs
add
dec
add
mov
jmp
imulb
int
sbb
aad
or
inc
or
push
xchg
imul
enter
dec
mov
punpckldq
repnz
lcall
jl
push
outsb
or
mov
mov
pop
setp
push
mov
cmp
push
addb
insb
and
add
rorl
dec
and
lret
int3
test
cltd
ljmp
pop
in
or
ret
push
loopne
popa
add
jno
sahf
fisttpll
push
test
cmp
jmp
outsb
adc
pop
mov
or
cs
push
sahf
adc
iret
fs
sub
es
inc
mov
jnp
sbb
sbb
imul
add
lods
push
pop
or
leave
adc
fdivl
pop
pusha
aas
adc
loopne
pop
inc
mov
cld
cmp
mov
daa
add
mov
and
jo
add
fcmove
cmp
sbb
xor
jne
icebp
and
add
sbb
jno
lods
sbb
dec
pop
mov
jbe
nop
pop
add
into
sarb
mov
fs
scas
cmp
and
ja
add
pop
mov
jecxz
add
clc
xchg
dec
lret
lods
jg
sahf
mov
cmpsb
aas
xor
loopne
sbb
add
popa
cli
loope
shll
rolb
test
or
xchg
sub
jne
add
mov
sbb
enter
cmp
xor
rorb
pop
push
or
frstor
mov
popa
sub
mov
push
push
cmp
xor
add
push
sti
cmp
outsb
mov
add
xchg
call
les
add
fcmovne
mulb
fdivs
mov
xlat
nop
movsb
add
imul
roll
ret
xor
enter
add
mov
sar
cld
inc
and
and
stos
or
mov
hlt
or
sbb
add
or
loopne
add
iret
and
test
and
mov
jmp
push
lock
pop
int3
add
das
call
ds
push
add
pop
mov
xchg
pop
and
cwtl
pop
or
jne
push
push
xchg
mov
and
xor
in
ficoms
xchg
jns
push
cmpsb
pop
je
lock
imul
imul
jecxz
aas
and
orb
pusha
loop
add
pop
sarb
inc
fwait
js
fbstp
xchg
stos
lock
mov
add
lahf
mov
add
repz
jmp
lds
je
push
popf
sbb
xchg
dec
jne
mov
add
xchg
push
int3
sbbb
push
add
adcl
loop
scas
cmc
dec
cld
pop
add
push
subl
jecxz
and
sbb
js
mov
in
and
and
add
aas
or
push
test
arpl
inc
out
jo
jb
push
xchg
test
stc
push
mov
movsl
jnp
xor
pusha
mov
push
ret
icebp
jns
cmp
add
fnstsw
pop
shl
mov
outsl
sete
in
stos
pop
test
lahf
add
cwtl
in
fldenv
sub
iret
es
cmp
inc
jl
lods
jo
ror
popa
add
in
add
lcall
mov
mov
fisttpll
das
sti
push
insb
out
cmp
add
enter
jp
incl
out
iret
insl
divb
movsl
xchg
lock
dec
cld
lcall
inc
call
sbb
std
scas
movsb
xor
mov
xchg
gs
add
push
and
lcall
mov
add
pop
push
nop
pop
jg
push
ljmp
les
movl
inc
test
into
push
adc
add
xor
mov
fisttpl
and
dec
lds
jecxz
int3
add
rorb
push
add
into
loope
add
arpl
mov
add
adc
dec
daa
adc
sub
xorb
sbb
or
inc
dec
adc
add
orb
mov
icebp
add
pop
push
mov
xchg
insb
pop
cmpsl
insl
inc
jne
cld
sbb
cs
xor
fmuls
push
adcb
or
mov
bound
inc
sub
stos
cmpsb
shr
add
test
pop
xchg
pop
mov
addr16
fidivrs
or
jns
iret
stos
cmc
idiv
pop
cmp
sbb
xchg
icebp
mov
test
add
cmpsb
rcll
inc
andb
ds
rol
add
xor
adc
mov
mov
mov
mov
add
inc
push
push
sbbb
xor
jmp
movsl
mov
cmpb
nop
xchg
xchg
sbb
clc
repnz
cmpsl
xor
add
in
jns
or
ret
bound
test
stos
arpl
add
cltd
dec
add
mov
dec
and
test
lcall
dec
ljmp
pop
fsubrl
xchg
push
nop
sbb
push
out
push
clc
repnz
insb
add
mov
scas
dec
add
and
add
add
mov
andb
stc
hlt
add
jns
shlb
mov
cltd
pop
popf
lea
inc
sbb
movsb
jle
xorl
aad
dec
daa
loopne
xor
cmpsb
add
sahf
fbld
jns
sub
je
addb
adc
adc
out
cmpsl
adc
sahf
lcall
scas
fistpl
roll
add
inc
dec
cmpsb
aad
adc
dec
movsb
stos
xchg
adc
dec
sub
mov
repnz
inc
jbe
cmp
shrb
imul
and
jns
add
test
std
sub
and
mov
rclb
out
pop
or
imul
js
jmp
sbb
iret
cs
jge
add
mov
das
xchg
fnstenv
inc
add
icebp
fsubs
imul
xor
pop
scas
pop
or
add
mov
dec
or
push
and
hlt
mov
test
mov
scas
add
mov
add
je
inc
xchg
dec
add
sub
pop
out
jl
add
sti
pop
adc
push
ficoml
cld
jns
sbb
xchg
icebp
shll
shrb
mov
push
call
push
rol
mov
enter
mov
roll
add
rorb
outsb
mov
sti
data16
loopne
rcrl
leave
sub
push
jl
add
inc
dec
sarl
int
pop
mov
movsb
jecxz
lea
sbb
lods
add
pop
mov
sub
pop
adc
pop
ror
inc
or
jmp
fadds
cld
add
pop
jmp
sbb
std
or
sub
test
shl
loopne
movsl
add
in
xor
sub
pop
lahf
mov
fnstenv
sub
cmp
mov
xor
data16
imull
out
in
pusha
ds
in
dec
fnsave
add
cmc
cs
in
out
rcrb
mov
mov
sub
stos
mov
pop
jb
add
lcall
add
adc
adc
push
cltd
pop
mov
xor
les
dec
in
push
popf
xchg
adc
sub
sbb
cmp
cltd
mov
inc
dec
bound
shlb
and
dec
hlt
mov
add
xchg
in
add
pop
inc
popf
cmp
sti
jno
dec
adc
push
mov
and
out
xchg
loopne
stos
push
inc
mov
or
inc
add
mov
add
cmp
mov
add
inc
cwtl
lds
fisubrs
scas
add
inc
or
jb
xor
pop
xchg
shrb
cmc
cmpsl
out
add
int
and
jbe
jecxz
xchg
fidivrl
xchg
loope
test
mov
mov
sub
pop
and
and
test
imulb
cltd
add
push
adc
sub
xchg
xor
inc
inc
mov
push
pop
das
cmp
fidivs
shl
jle
pop
add
dec
cmp
dec
outsl
cli
iret
jnp
add
inc
add
mov
cltd
sahf
sub
loop
add
bound
out
xchg
dec
or
pop
xor
adc
xchg
mov
cwtl
in
dec
add
enter
cwtl
pusha
xor
jo
add
gs
lcall
lahf
cli
mov
lds
xchg
incb
push
fwait
insb
jmp
jge
jle
and
push
int3
add
lret
in
dec
test
or
std
cltd
divl
das
inc
call
nop
in
inc
add
xchg
xchg
pop
push
in
lock
ret
adc
scas
nop
push
mov
push
repnz
ja
and
jae
or
sub
add
adc
aaa
mov
mov
pusha
movsl
inc
fwait
xchg
add
push
push
ret
pop
sbb
sub
shrl
das
lods
xor
pusha
add
pushf
mov
addl
jb
mov
clc
adc
sub
in
cmp
xchg
push
add
iret
adc
adc
mov
fdivr
hlt
test
sbb
movb
cmp
push
add
dec
sbb
or
xchg
clc
or
std
add
rolb
aad
rolb
js
push
xlat
sub
scas
add
popa
ss
shl
test
or
cmpsb
fildll
outsb
lods
fs
add
dec
add
mov
ficoml
movsl
ret
push
jne
sarb
add
push
fdivrl
adc
mov
fiadds
clc
mov
into
add
inc
jno
xor
aam
bound
push
pop
inc
aas
leave
inc
in
mov
sarb
pop
cld
cltd
jp
push
pop
pop
adcl
jge
add
rcrb
and
pop
add
dec
cmpsb
fldl
cwtl
outsl
and
inc
call
pushf
insb
pop
add
push
mov
pop
fsubrs
cmp
or
das
rorb
lods
js
lahf
outsl
cmp
push
add
mov
pop
mov
cmpsl
nop
fwait
insl
lds
adc
jns
clc
ret
jp
and
add
cmp
jmp
pop
or
hlt
andl
jp
dec
mov
sahf
test
or
and
add
cwtl
aaa
outsb
int3
or
sbb
idiv
jns
jne
add
inc
mov
add
lock
rol
add
mov
outsl
pop
loop
enter
pop
jle
addl
inc
cmpsb
or
add
aad
xchg
sub
mov
sbb
mov
mov
aas
add
daa
pop
test
adc
in
dec
lahf
jo
add
inc
leave
mov
jg
es
aam
add
jp
adc
loope
clc
cmp
adc
jl
pop
add
pusha
and
orl
sub
pop
andb
hlt
or
aaa
and
xchg
bound
dec
adc
dec
sub
mov
dec
add
and
out
xor
xor
sarb
stc
xor
pushf
in
mov
inc
jae
test
sub
add
or
lret
adc
fs
orb
xor
add
imul
push
hlt
mov
cmp
mov
mov
mov
test
cmp
mov
sub
sbb
add
adcb
insb
push
cmp
sub
mov
aad
cmp
sub
pop
pop
adc
jo
and
test
mov
sbb
popl
pusha
xchg
ret
pop
mov
pop
rcll
jmp
cltd
ja
in
push
mov
jo
sub
movsl
fs
sbb
pop
dec
pop
pop
jne
add
ds
and
lret
mov
lds
out
mov
xchg
add
push
push
pop
xchg
jecxz
dec
add
sub
lret
dec
add
int3
adc
xor
es
rcrb
inc
add
push
and
mov
add
cmp
fwait
shll
out
dec
add
in
fidivl
leave
sbb
cmp
adc
adc
and
pop
sub
std
jo
xor
or
fnsave
or
outsb
clc
ret
pushf
imul
adc
fistl
add
daa
and
add
adc
jno
dec
out
add
xchg
fnsave
sahf
lods
test
lea
or
filds
dec
inc
mov
aas
ds
std
lock
mov
out
dec
add
cmp
enter
adc
ret
loop
out
xchg
mov
in
dec
movsl
mov
cld
add
pop
jp
or
bound
les
pusha
push
push
scas
stc
sbb
pop
or
or
or
add
lcall
xor
aas
and
pop
pop
out
mov
adcb
loope
adc
sbbl
pop
cmp
inc
mov
hlt
sahf
mov
mov
fdivl
pop
add
pop
xchg
mov
sub
shll
ret
jne
add
jp
test
add
dec
mov
xchg
fcmovnb
push
mov
push
pop
roll
adcl
loopne
xor
xor
cld
fs
iret
repnz
jbe
sbb
sub
loopne
cmp
clc
push
inc
cli
lock
scas
repnz
cs
leave
popf
jl
xchg
psubusw
shrb
loopne
pop
inc
or
sub
adc
roll
and
scas
and
out
andl
jae
mov
push
mov
fs
aad
add
mov
mov
cmp
mov
stos
ror
insl
add
mov
gs
and
pop
jge
or
sub
mov
inc
jmp
xchg
fcmove
pop
add
push
sbb
sub
dec
adc
in
sti
pop
pop
rol
xchg
add
push
cld
popa
dec
add
adc
lea
arpl
sub
jb
add
lods
xor
addb
mov
js
test
pop
jno
ficoml
mov
pop
dec
bound
mov
or
jnp
add
mov
popa
fdivs
add
sbb
mov
xlat
cmc
es
ud2
jg
jle
push
cmp
jmp
xor
pop
out
mov
dec
mov
mov
jg
arpl
pushf
add
stos
cmp
lds
add
jle
mov
sbb
fs
sbb
push
daa
js
faddl
lds
sub
add
pop
adc
sbb
ja
mov
sbb
mov
in
and
jae
out
ss
stos
add
lds
pop
je
add
pop
jne
add
call
loop
push
rcrb
dec
xor
or
fldt
clc
push
and
sbb
mov
test
push
cmp
pop
stos
add
jecxz
sub
and
lret
iret
loop
das
inc
mov
sbb
fadds
data16
out
push
nop
inc
stos
push
xchg
dec
aam
cs
mov
testl
inc
xchg
movsl
jo
jnp
hlt
adc
push
insl
ja
sbb
int
idivl
cmp
aas
dec
jo
bound
movsb
addr16
cmc
add
adc
xlat
loopne
rcrl
std
cli
push
addb
add
mov
xchg
inc
mov
pop
movsl
insb
cwtl
mov
push
push
add
sub
push
and
dec
dec
aas
out
jge
sbb
cs
es
add
insb
or
mov
insl
sub
push
and
add
pop
ret
dec
ljmp
fisubl
xchg
in
jno
mov
sub
add
je
out
add
inc
cmc
in
add
aas
jne
add
sti
dec
cmp
rclb
rcrl
cmpb
xlat
inc
and
add
sub
xchg
enter
test
ficoms
add
push
xchg
lea
cwtl
xor
pop
add
lcall
xchg
dec
rcrb
inc
adc
iret
cld
or
in
inc
add
push
xchg
jo
lret
xor
push
test
adc
addl
in
mov
and
movsl
dec
out
dec
jbe
dec
out
add
out
lds
cmp
xor
cmp
sbb
add
jmp
imul
aam
add
arpl
jae
nop
pop
xchg
add
jl
mov
adc
mov
cmp
or
in
in
add
stc
imul
mov
jl
and
outsb
movsb
add
test
lock
cltd
or
bound
pop
xor
xchg
insb
stos
add
cmpsb
and
stos
push
cmp
mov
shrl
repz
scas
sbb
and
icebp
out
mov
dec
add
mov
sub
aad
push
loope
or
dec
daa
push
scas
cmpsl
clc
xchg
pop
pop
push
push
rcll
add
lahf
pop
mov
call
mov
add
fs
pop
shlb
mov
pop
add
loopne
cmpl
pop
add
push
adc
adc
in
ljmp
push
cli
mov
out
inc
add
enter
or
push
test
aam
dec
ljmp
mov
adc
sbbb
loopne
les
adc
push
negb
xchg
insb
dec
fldt
sbb
xchg
fscale
adc
adc
jmp
movsb
popa
in
fs
mov
jo
adc
dec
aam
ljmp
pop
lock
fildl
xchg
add
rcrl
enter
and
jo
mov
adcb
call
test
add
xchg
lret
pop
add
pop
mov
ja
add
mov
xchg
xorb
pusha
adc
das
inc
in
mov
add
pop
lds
enter
cmpsl
lock
mov
add
shrb
sarb
pop
out
dec
cmpb
out
das
in
xchg
mov
ljmp
mov
mov
aad
dec
push
and
add
idivl
pushf
mov
or
outsl
arpl
adc
shrl
lods
mov
hlt
inc
push
imul
push
loope
lods
jns
sarb
adcl
or
fldl
push
xchg
pop
call
pushw
out
or
add
inc
push
cmp
add
shll
pushf
add
dec
jmp
mov
std
lock
inc
lock
add
add
sahf
mov
loop
roll
imul
cwtl
jo
or
ficoms
fwait
sub
jmp
lea
or
stos
outsb
addb
ds
sbb
mov
shlb
jo
push
aad
fs
push
jae
movsb
inc
loop
scas
xchg
mov
xchg
sarl
add
and
fsubl
rolb
movsl
mov
int3
pop
add
jl
xchg
call
push
sbb
test
push
mov
and
lret
pusha
addl
aas
xchg
pop
ret
in
addb
jmp
push
jbe
dec
js
movb
xor
add
jno
pop
pop
aaa
incl
popa
popf
xlat
into
fs
mul
cwtl
out
testl
por
dec
inc
insl
jl
xor
adc
dec
adc
loop
movsb
pusha
pop
add
popf
push
sar
outsl
and
add
or
rolb
add
push
sub
xor
jnp
xchg
les
xor
xchg
add
lock
inc
rorb
inc
pop
cmovae
das
mov
int
add
push
push
lcall
dec
cmp
add
sub
std
sub
add
dec
imull
aam
outsb
int3
add
mov
out
sahf
add
enter
fsubl
push
test
xchg
mov
fisttps
jl
js
in
push
cwtl
cmp
pop
loop
inc
lods
ss
inc
cs
add
outsb
pushf
fmuls
out
dec
jne
jge
sub
icebp
xor
scas
add
aam
test
repz
add
add
je
jp
xchg
cmpsb
imul
push
ja
jae
icebp
imul
and
add
adc
adc
sti
mov
mov
xchg
xor
and
jae
xor
out
test
cmp
mov
popf
into
pop
ss
andb
loope
lock
push
pop
and
inc
push
daa
mov
or
flds
fsubrs
pop
pop
or
sub
pcmpgtw
call
pop
add
jecxz
adc
pop
movsl
cwtl
dec
add
in
and
mov
add
mov
jecxz
pop
fcoml
cli
mov
add
aaa
push
test
inc
bound
jl
dec
in
in
cmp
mov
stos
jmp
cld
push
sbb
cld
adc
mov
outsb
and
sbb
sti
pop
incl
xor
sbb
sub
addr16
cmp
andb
xchg
mov
push
dec
dec
shlb
fisubrs
adc
cmp
out
ficoml
dec
lahf
dec
sar
jle
sub
add
in
call
jbe
clc
add
cmpsl
in
xchg
add
xor
inc
mov
fsubl
adc
enter
inc
popa
sbb
js
int
or
mov
mov
inc
add
add
jle
pushf
pop
or
paddb
mov
in
jle
add
jnp
push
sbb
testl
sbb
lahf
add
insl
dec
ret
add
dec
mov
icebp
imul
lret
jo
mov
lcall
xchg
int3
repnz
pushf
sbb
lods
and
lock
xor
add
push
add
mov
xchg
xor
add
cmp
push
xor
std
mov
inc
pop
cmp
xor
in
fs
add
xchg
cld
mov
cmp
sahf
idivl
mov
icebp
scas
and
pop
add
sbb
sbb
or
rorb
push
or
mov
les
scas
and
sub
aam
mov
mov
or
mov
and
je
mov
and
add
lret
pop
fcompl
xor
push
out
mov
int3
test
mov
mov
pop
int3
nop
clc
out
lds
add
iret
jg
repz
mov
add
sti
and
or
and
mov
lea
add
inc
adc
mov
in
dec
or
hlt
aam
or
nop
cld
aas
xchg
mov
jge
cld
and
xor
ror
arpl
outsb
inc
sub
or
out
orl
call
pop
add
jbe
inc
mov
repz
sbb
sub
cmp
int3
inc
add
mov
xor
call
inc
and
lods
cmp
sub
mov
jle
pushf
xlat
insb
add
in
lock
cmp
popf
rep
jno
add
insb
lcall
rolb
and
fsubrl
pop
aad
xor
pop
add
lret
bound
sbb
pop
icebp
pop
inc
inc
je
sahf
out
nop
jmp
mov
or
sti
cmpsb
sbb
sub
sub
dec
jbe
add
pop
scas
add
xchg
outsl
dec
push
inc
xchg
out
mov
add
cmp
xchg
add
rorb
cmp
add
dec
jmp
jbe
jmp
pop
mov
jns
mov
insb
jnp
add
sti
fucom
xor
stos
mulb
into
clc
sub
cmp
inc
add
movsb
xor
and
jmp
in
shrl
dec
repz
nop
lods
and
mov
outsb
jnp
test
int3
sub
fs
js
dec
cld
add
pop
cmp
add
movsl
es
add
adc
add
mov
test
xchg
cmc
mov
stc
jge
add
jne
inc
cmpl
int
xchg
rcrl
and
sbb
pop
inc
sbb
and
movsb
cmp
xor
rolb
or
and
add
jae
icebp
mov
adc
aad
xor
mov
jae
add
enter
mov
ss
xor
dec
aaa
jp
icebp
mov
add
mov
cmp
ret
sbb
inc
nop
insb
lock
push
lcall
push
mov
and
pop
aaa
and
sub
add
jle
or
add
dec
sbb
mov
add
fldt
add
dec
push
add
xchg
filds
sub
repnz
mov
jecxz
int
mov
add
incl
ja
jl
push
sub
orl
xchg
inc
add
xchg
push
das
xor
and
sub
mov
mov
or
add
outsb
ja
dec
xor
mov
or
fisubs
cmp
lcall
push
dec
add
lea
sub
lahf
and
sub
add
js
movsl
repnz
or
in
sub
cmp
xchg
mov
leave
pop
mov
jp
dec
mov
ja
aaa
cmp
ljmp
and
outsb
add
inc
incb
sbb
shlb
loopne
rolb
das
popl
orb
and
add
push
pop
sbb
leave
inc
out
loopne
stc
add
or
cmc
jp
sbb
shrb
cmp
push
ja
cmp
in
aaa
outsl
imul
inc
gs
inc
jl
add
repnz
pop
stc
and
stos
popa
minps
adc
add
jmp
scas
sbb
cmpsl
orb
push
and
iret
outsb
add
jb
xchg
addb
jbe
push
pop
fadds
sbb
call
add
mov
or
pop
and
pop
sub
xlat
loope
add
mov
mov
and
test
cs
adc
mov
ds
and
mov
es
out
add
sbb
lret
xor
xor
add
jp
add
mov
add
jae
js
movsl
pusha
pop
pusha
pop
sbb
adcl
lahf
adcb
lock
loop
or
lds
sub
in
pop
imul
repnz
push
push
mov
xchg
and
mov
inc
icebp
test
pop
adc
icebp
scas
cmp
int
loopne
xor
mov
mov
sarb
leave
pop
and
dec
cmp
testl
call
adc
jl
add
adc
clc
xchg
pop
xor
imul
or
arpl
into
push
js
xor
and
in
and
sub
jle
mov
and
in
and
sahf
inc
int
push
adc
lds
mov
mov
in
sub
adc
rcrl
or
cmp
mov
push
stos
inc
outsb
add
jae
push
mov
sbb
add
mov
popl
rcrl
xchg
lahf
xchg
insb
add
lret
clc
pop
test
add
ret
out
cmp
jnp
sbb
add
hlt
push
xchg
adc
push
lods
aam
mov
xor
cmp
inc
out
push
orb
and
push
dec
pop
scas
outsb
xchg
std
inc
adc
notb
stc
loopne
adc
lret
pop
jb
repnz
clc
or
or
pop
sahf
cld
add
ret
add
adc
ret
dec
dec
repz
push
jno
mov
add
rcl
inc
lods
mov
in
lea
push
jl
push
movsb
insl
rep
scas
push
and
cmp
cltd
jbe
xchg
cmp
xchg
mov
mov
mov
xor
rclb
jne
pop
les
sub
push
xchg
adc
cmp
mov
dec
push
jno
jl
xchg
into
pop
ret
imulb
mov
pop
icebp
adc
mov
push
push
inc
mov
jb
fwait
xor
adc
movb
xor
pop
lock
sbb
lods
pusha
inc
movsl
mov
dec
push
cmp
dec
add
xor
adc
adc
or
adc
mov
dec
rorb
pop
sbb
imul
add
sbbl
leave
movsb
jnp
ret
bswap
shlb
mov
inc
jecxz
lret
add
test
cmp
into
fidivrl
ret
mov
cld
out
lahf
and
cmp
repz
lds
repnz
jp
add
or
enter
or
aaa
push
dec
add
xchg
add
out
jne
jmp
add
cmpsl
add
xor
lret
push
sub
inc
mov
aad
add
pop
inc
fwait
sbb
adc
into
mov
nop
data16
repz
bnd
or
lahf
clc
leave
shrb
popf
or
jae
or
aad
pop
or
add
cmp
cmp
mov
out
xchg
mov
scas
xchg
mov
popa
in
pop
add
in
xor
iret
or
js
add
lds
push
stos
mov
mov
test
into
repz
test
lea
mov
push
xor
or
nop
and
ja
xor
jg
xchg
cld
inc
int3
xor
mov
inc
and
daa
sub
sub
imul
clc
add
add
movsl
mov
fstpl
insb
push
orb
lock
push
scas
mov
push
xchg
out
or
icebp
add
cld
dec
xor
in
push
sbb
stos
cli
test
add
imul
pop
pop
sub
mov
out
stos
adc
ds
int3
test
jb
add
and
aad
pop
pop
add
ss
xchg
push
and
push
or
es
xorb
bound
push
popf
push
add
adc
and
or
in
subl
icebp
lret
adc
fs
push
xchg
mov
xor
lcall
jp
push
add
push
es
loopne
mov
sub
sub
inc
in
iret
arpl
pop
in
inc
pop
adc
int3
pop
rolb
ja
lahf
sbb
sbb
aam
lods
pop
adc
add
adc
aas
sub
add
inc
xacquire
sub
ficompl
ljmp
lcall
adc
fmulp
popa
lret
pop
mov
push
out
add
fstps
aas
xlat
push
test
and
cmp
rcl
adc
sahf
jecxz
add
mov
testl
mov
inc
jmp
jmp
sbb
lcall
addr16
jb
xor
lcall
mov
gs
leave
cli
dec
inc
xorl
mov
frstor
inc
popf
add
add
into
mov
je
lods
sarb
call
fnstenv
mov
add
int3
jne
mull
pushf
dec
ret
push
mov
out
cltd
xchg
flds
adc
cmp
cli
add
in
imul
add
jg
roll
jae
out
pop
mov
shlb
cli
cmc
pusha
js
out
cmp
insl
adc
push
xor
pushf
movsb
std
pop
leave
pop
insl
fadds
out
jl,pt
dec
xor
imul
sti
out
mov
xchg
sub
fwait
in
fmuls
xchg
mov
jo
std
mov
add
sahf
sbb
add
xlat
in
cmp
insb
cmpsl
add
imul
add
shll
adc
lds
lock
aad
mov
and
in
add
pop
shlb
scas
testb
arpl
add
loop
xchg
adc
jg
add
xor
push
out
insl
inc
aaa
lret
add
and
shll
xor
cmp
add
xor
inc
add
int3
mov
stc
clc
pusha
inc
add
mov
lods
xor
shrb
sub
insb
fucomi
add
sub
cmp
cmpsl
mov
pop
enter
jb
cmpsb
xor
mull
dec
xor
adc
cltd
and
mov
roll
push
arpl
xlat
mov
add
popf
jns,pn
lods
add
test
or
pop
outsl
roll
insl
sbbb
and
mov
and
or
cmpsb
or
pop
pushf
mov
sbb
add
inc
gs
sbb
sbb
add
into
jp
je
scas
jge
or
or
addl
push
in
lea
loop
cltd
aad
dec
mov
sub
repnz
xor
push
and
mov
pusha
outsl
shrb
add
jnp
movsb
add
xchg
or
aas
cld
adc
or
lds
mov
cmp
push
aaa
je
fstps
dec
aam
loop
jo
inc
nop
notl
add
xchg
lahf
mov
insl
addr16
popf
andb
call
xchg
mov
adcb
jmp
in
pop
enter
stos
sahf
inc
adc
cmpsb
lock
pop
movzbl
sti
imul
lea
and
mov
cld
movsl
xor
ret
add
xor
popa
cltd
stos
addr16
add
mov
iret
add
fcmovnbe
adc
stos
add
stc
jae
icebp
cmpsb
fsubrl
lds
addr16
add
xchg
inc
out
dec
add
jge
adc
loope
fdivl
jo
jno
add
mov
mov
sbb
out
pop
lret
filds
call
sbb
adc
and
cmp
mov
lock
adcb
cmp
sub
add
arpl
pop
cld
mov
add
sbb
mov
pop
mov
iret
pop
pop
or
addb
add
cmp
cmp
sbb
insb
stos
shlb
mov
mov
sub
cli
and
cmp
push
adcb
pushf
and
mov
gs
rcr
ret
dec
mov
lcall
pop
pop
lret
xchg
mov
in
push
rol
add
sbb
xor
std
xchg
mov
je
add
sub
jmp
push
rorb
lods
sti
adc
inc
insb
ljmp
pop
mov
add
lods
loopne
mov
or
jmp
add
sub
clc
jmp
jle
mov
sub
pop
lahf
add
test
add
adcl
imul
jl
adc
test
test
jno
es
add
fildl
adc
sub
enter
mov
addr16
mov
in
nop
testl
mov
stos
sbb
cmp
or
add
dec
pop
andps
jl
jo
push
sbb
push
add
bound
fcoms
pop
mov
add
and
cmp
pop
jge
and
xor
pushf
mov
adc
sti
and
cmp
aas
int3
xchg
xor
mov
sub
lods
mov
add
fnsave
inc
scas
mov
lcall
aad
lret
add
cmpsb
fldl
aaa
dec
adc
fidivl
pop
or
mov
cld
add
sub
ljmp
and
jmp
add
push
je
les
mov
jl
dec
popa
outsb
incb
jp
out
call
add
ljmp
add
call
js
pop
pop
cmpsb
jbe
jp
sbb
adc
mov
mov
mov
sub
mov
incb
add
cwtl
addl
cmp
add
dec
pop
jno
ja
add
sbb
jecxz
ja
add
dec
push
cmp
into
xorb
fildl
push
fstpl
mov
jo
xor
cmp
dec
add
testb
insb
movsl
ds
add
outsl
jne
ljmp
inc
xchg
cmpsl
xor
add
and
jae
jmp
add
loopne
dec
mov
cmp
cmc
add
idivl
add
inc
pop
or
rclb
cmp
std
add
rcr
aas
add
popl
xlat
fdivrs
sub
ror
cmp
xlat
mov
dec
sbb
testl
rorb
sub
bound
leave
dec
stos
xchg
add
push
daa
aaa
sub
loope
xlat
sub
cli
ds
jnp
ss
enter
pop
insl
mov
mov
mov
sbb
add
out
sub
xor
and
sbb
add
mov
xchg
pcmpgtd
cli
ret
mov
aas
fmull
test
cmpsl
sbb
xor
and
imul
mov
jmp
loop
out
adc
loopne
sti
in
pop
nop
add
push
mov
and
loopne
mov
out
xor
filds
mov
orl
loopne
jae
mov
mov
pop
add
add
add
into
mov
jbe
fimull
popf
bound
adc
pusha
orl
adc
scas
xchg
stc
lahf
lret
int3
dec
dec
nop
pusha
add
gs
sahf
and
mov
call
sub
xor
inc
out
add
leave
jo
mov
dec
add
and
bound
enter
inc
sub
lock
adc
mov
pop
sbb
test
leave
mov
sub
sbb
mov
or
repz
inc
stc
cmp
out
fstl
pop
lcall
clc
rorb
or
add
jnp
cmpsl
and
mov
call
out
inc
and
mov
das
adc
and
stos
test
enter
add
add
rcll
fxch
mov
cmpsl
dec
and
ret
cmp
jno
cmp
sar
mov
add
popf
push
int3
add
mov
in
addr16
cmp
add
lods
xor
out
lret
cmp
nop
out
push
sbb
cltd
push
jb
xor
imull
roll
outsb
adc
sbb
fiaddl
jg
cmp
pop
movsl
in
cs
loopne
pop
je
movb
dec
xor
cmpl
jnp
or
xabort
addl
add
in
movntq
aaa
xchg
nop
pop
mov
push
out
call
test
aam
add
or
mov
add
push
dec
ret
call
add
push
mov
sub
inc
xchg
js
add
int
pop
pop
fnstsw
jno
cmp
out
movl
sub
dec
add
jmp
gs
add
out
xor
fidivrl
and
mov
mov
clc
dec
nop
int
adc
or
mov
sbb
popf
mov
cld
imul
inc
in
lock
sbbb
ja
add
add
cmp
pop
stos
or
repz
je
jno
push
jo
ds
push
jnp
add
call
icebp
rolb
and
xchg
cmp
rolb
subb
pusha
add
pandn
stos
pop
addr16
adc
stos
add
push
mov
pop
xchg
adc
xor
lret
push
xchg
sbb
xor
lods
daa
xchg
adc
aam
dec
imul
insb
sbb
int
daa
inc
dec
push
mov
data16
ljmp
add
fs
mov
xor
movsb
popl
pop
data16
hlt
inc
push
or
mov
ret
in
pop
add
mov
cmp
adc
out
nop
push
and
mov
push
add
lret
int
bound
cmp
jns
f2xm1
cmp
stos
data16
add
jne
ss
orb
cmp
rclb
icebp
xor
jmp
inc
jno
cmpsb
inc
adc
je
add
jle
add
ss
js
addb
push
call
or
clc
pop
add
test
sbb
add
enter
js
push
test
adc
invd
mov
sub
push
and
and
cmp
repnz
xchg
rorb
xchg
sbb
add
fidivl
test
std
jle
cmp
mov
je
add
daa
push
movsb
rcrb
and
mov
xor
jl
jns
in
add
push
push
in
out
add
aad
cltd
roll
add
lcall
loopne
xor
mov
test
in
inc
lahf
jp
push
add
or
pop
fcoms
test
or
dec
movsl
and
inc
jmp
adc
ljmp
in
icebp
cmp
jecxz
jno
inc
and
pusha
add
pushf
push
clc
mov
lea
sub
adc
sti
mov
aas
test
fistl
rolb
stos
jbe
std
bnd
mov
js
daa
in
sub
mov
pop
mov
adc
les
pop
pushf
jno
mov
or
pusha
cltd
adc
add
fstpl
add
mov
ja
xor
pop
mov
rcll
cmp
xchg
adc
xor
push
fcompl
movsl
outsl
lods
jns
pop
ja
sbb
push
lcall
flds
xchg
cld
cmc
add
dec
or
int
xor
shll
fldenv
mull
adc
lret
movsb
and
xchg
push
testb
pop
rorb
cmp
fadds
jl
xor
add
shlb
sbb
mov
std
inc
push
loope
loopne
aad
dec
push
scas
bndldx
add
inc
dec
or
add
adc
adc
push
das
add
add
sbb
filds
adc
mov
fdivs
adc
jno
mov
push
dec
dec
rorb
shl
add
fidivrl
cwtl
out
add
pop
stos
ss
jmp
pop
add
pop
rorl
dec
or
xchg
push
dec
imul
dec
in
jl
mov
sbb
mov
or
sbb
int3
in
or
rcr
aas
jns
add
push
adc
push
sub
or
repnz
inc
add
mov
movsb
arpl
push
add
test
mov
cmp
insl
loopne
mov
pop
loope
cmpsb
rolb
je
add
adc
xorb
dec
jg
push
outsl
mov
sub
mov
jne
add
loope
repnz
lock
repz
cmp
push
xchg
pop
ljmp
scas
pop
inc
mov
fistps
pop
in
sbb
dec
and
arpl
jp
mov
add
adc
cmp
add
pop
sub
stc
cmp
add
jle
xchg
test
addb
push
hlt
cltd
fsubrl
jns
pusha
xchg
push
xlat
add
mov
push
add
outsb
test
cwtl
ljmp
dec
pop
add
pop
sbb
gs
push
out
pop
add
insb
and
and
cld
pop
fsubr
stc
or
test
fcmovb
icebp
inc
sub
loope
add
sahf
in
adc
and
in
dec
cmp
nop
or
test
iret
add
push
rclb
fwait
loop
jnp
and
lods
int3
cwtl
je
nop
shlb
inc
fs
sbbb
and
add
inc
jl
test
jae
or
mov
jns
sarl
add
movsb
and
sub
sbbl
mov
cwtl
add
testl
add
dec
jae
push
mov
add
and
sbb
xor
push
dec
imul
sti
add
inc
and
add
in
xor
bound
pop
fnstenv
inc
xchg
push
mov
cld
incb
ficompl
add
insl
add
fcomps
test
xlat
jecxz
fbstp
das
mov
outsl
mov
mov
cmp
sub
rorb
outsb
shll
lcall
mov
push
push
mov
rcll
shlb
stos
mov
lret
and
scas
mov
loope
add
sbb
or
sbb
xchg
xchg
lcall
mov
into
icebp
das
add
pop
or
enter
xor
and
inc
popl
mov
sub
add
idivl
push
sbb
add
cwtl
add
fadds
daa
lea
movsl
and
cmp
add
push
mov
adc
or
test
fiaddl
pop
mov
adc
push
lret
test
andb
aam
cmp
addl
or
add
test
dec
push
scas
insl
add
stc
lahf
cwtl
pushf
es
xchg
add
aaa
jo
fdivrs
xor
and
roll
sub
jnp
lcall
adc
scas
cvtps2pd
add
pop
lock
test
inc
call
add
push
inc
popa
mov
mov
add
sub
add
or
lret
addb
in
pop
rol
mov
sub
cmpsb
es
clc
mov
jp
xor
flds
jbe
stos
pop
dec
pop
jb
cltd
inc
cmc
nop
pushl
in
scas
push
test
push
stos
roll
sbb
cmp
sti
xorb
rolb
incl
dec
stc
and
loopne
push
loopne
stos
mov
xor
adc
xor
ja
ljmp
fs
shlb
sub
pop
out
sbb
add
dec
clc
in
rclb
add
iret
gs
dec
mov
xor
js
add
jmp
orl
mov
and
pop
xchg
cli
dec
es
pop
ds
push
mov
dec
out
pushl
pop
pop
and
test
jb
jne
movsl
stc
in
insl
mov
negl
fmuls
clc
mov
addl
add
push
add
fldl
mov
cmpsl
add
aaa
outsb
add
xchg
pop
aas
fucomp
ss
mov
js
mov
dec
or
cmpl
sub
test
cmp
in
in
or
sub
cmpsb
mov
adc
mov
cmp
adc
add
and
sbb
pop
push
add
addl
cmp
push
jne
xchg
cmp
add
test
test
cmp
inc
push
sar
pop
mov
int3
aas
and
or
pusha
xor
add
jle
adc
popa
jns
inc
adc
push
les
jle
inc
add
jmp
mov
in
loop
add
cmpsl
xlat
push
add
xchg
popf
add
and
push
and
stos
add
pushl
call
push
ror
aas
inc
mov
out
xor
mov
stc
stc
pop
pop
cmpsb
xchg
adc
scas
cmp
sbb
xor
adc
int3
or
cmovg
addb
mov
pop
test
out
or
cmpsb
faddl
out
sbb
rolb
mov
push
push
add
pop
std
mov
sbb
xor
imul
mov
mov
scas
adc
adc
and
push
lds
and
addb
jnp
sbb
movsb
mov
ja
fildl
scas
sbbb
pop
mov
jmp
ret
push
mov
ss
add
push
dec
aas
jl
jecxz
push
js
mov
leave
push
mov
mov
leave
add
push
inc
add
xchg
orb
shrl
mov
sbb
dec
xchg
mov
fsts
dec
movb
mov
mov
addl
cwtl
rcrb
sub
mov
adc
mov
sub
call
xlat
sub
loop
cmp
add
sub
lea
sbb
phaddw
adc
sbb
lcall
sub
call
lret
sbb
lock
mov
xchg
cmpsl
xchg
push
mov
loopne
adc
loope
adc
mov
inc
lods
ds
mov
sub
adc
pop
mov
mov
pop
lahf
enter
iret
pop
pop
scas
mov
and
cmpxchg
sub
add
add
mov
js
lods
int3
loopne
sbb
mov
mov
or
mov
pop
lcall
dec
popa
scas
call
dec
test
dec
ret
loopne
xchg
mov
mov
cmpsb
in
cwtl
sbb
sub
cwtl
pusha
mov
sub
enter
mov
mov
icebp
lods
loop
add
les
adc
scas
sub
jl
int3
add
lcall
or
nop
sub
and
ror
loop
cmp
sub
xchg
dec
fcoml
scas
dec
mov
mov
push
shlb
mov
test
sub
jb
int3
and
push
mov
mov
scas
mov
leave
push
stos
add
movsl
in
sbb
xor
enter
lret
mov
sub
shr
push
stos
int3
incb
sbb
rorl
mov
xchg
loopne
sub
jb
cmp
cmovg
adcb
mov
shl
jecxz
or
leave
sub
mov
ss
fldenv
loopne
sbb
pop
mov
movsl
and
in
or
call
aam
test
ficompl
mov
cmp
cmp
leave
adc
repz
out
xchg
xchg
lods
inc
mov
xchg
inc
xor
jns
aam
mov
ss
push
and
adcl
lret
dec
bound
sbb
dec
add
clc
push
and
cmovb
jo
mov
stc
and
inc
dec
out
xchg
jg
adc
mov
inc
insb
test
clc
xchg
dec
add
add
jae
out
cmp
add
lock
add
js
rolb
jp
add
mov
mov
mov
fdivrs
cmp
push
call
incb
add
inc
icebp
pop
and
or
xchg
fsubs
aas
in
adc
jp
push
push
push
movsl
jp
cmpsb
rolb
jne
popf
jl
push
adc
lret
in
inc
js
pop
int3
cmp
cmp
and
loopne
jns
int3
sti
add
stc
shll
dec
ss
lods
mov
jnp
lcall
inc
ljmp
xor
push
mov
pusha
jle
mov
push
adc
outsl
xor
cmp
xor
mov
xchg
push
int
movsl
sarb
push
sbb
popl
sti
popa
cmpsb
xchg
sub
sbb
xchg
rcl
jle
movsb
sbb
cmp
add
sbb
cmp
inc
test
xchg
adc
sbb
cmp
mov
sbb
orb
sbb
sbb
inc
test
aam
les
or
mov
pop
xchg
mov
xchg
and
xor
and
lds
xor
test
arpl
xor
sbb
or
adc
lret
inc
xchg
bound
test
and
cmp
adc
xor
jp
orl
cwtl
icebp
jns
ss
fs
mov
sbb
movsb
cwtl
mov
mov
jae
nop
out
sbb
xchg
enter
imul
icebp
add
add
shlb
lret
add
in
int3
add
les
ja
xor
into
mov
push
outsl
sub
and
push
xor
arpl
xor
imul
aam
push
les
xor
out
inc
cli
leave
jns
outsb
and
sbb
bound
punpcklwd
mov
int
cmp
xor
pop
int3
sub
pandn
push
outsl
loop
pusha
cmp
idiv
or
test
mov
push
pop
dec
push
cmpsb
inc
cmpsl
insl
add
aad
call
adc
lea
mov
jnp
push
inc
xchg
inc
ljmp
mov
int3
ds
lock
mov
fsub
lcall
jge
fs
adc
icebp
and
sbb
adc
and
adc
aam
inc
push
or
repz
or
push
daa
inc
sahf
xchg
push
subl
test
out
sub
loop
xor
push
shrl
push
and
fs
insb
mov
and
mov
into
dec
jae
add
xor
mov
or
sarl
sbbb
adc
lahf
inc
aam
clc
jbe
or
es
loopne
or
sub
loop
loopne
imul
and
dec
in
or
insb
pop
dec
mov
sti
frstor
jl
or
je
push
add
push
nop
int3
into
sub
xor
int3
jnp
adc
jo
cmp
add
out
mov
in
xchg
mov
add
ja
adc
push
push
movsl
and
popl
adc
jnp
scas
movsl
nop
cmp
fistl
in
inc
rorb
sub
sbb
imul
shrb
adcb
jmp
gs
int
xor
insb
cltd
mov
mov
pop
rorl
pusha
nop
mov
and
sti
adc
icebp
sbb
aam
or
test
test
dec
clc
cmp
cmc
xchg
push
pop
rcll
lods
rcll
cmpl
and
lods
rorl
subb
mov
xor
mov
in
push
mov
clc
and
stc
and
xor
cmpsl
cwtl
or
in
enter
lods
inc
scas
clc
pop
bound
leavew
fcoms
es
shr
cli
mov
pop
dec
mov
or
mov
add
dec
cwtl
cmp
dec
fmull
fistl
outsl
adcl
mov
mov
and
jmp
add
dec
test
sub
pop
movsl
fsubrs
and
and
ds
mov
andb
clc
push
fcoms
dec
je
mov
dec
mov
add
cmpsb
sar
insb
jns
sbb
inc
lods
inc
popl
hlt
adc
and
and
cmp
ja
div
jns
cltd
js
leave
mov
xor
xchg
cwtl
mov
sub
test
and
repz
adc
test
hlt
jmp
shlb
mov
or
adc
sub
inc
dec
movsb
aam
push
mov
sub
repnz
int
insb
dec
fistps
inc
xchg
aam
insb
adc
adc
pusha
jnp
jecxz
jp
jle
xor
pusha
dec
loop
test
mov
jnp
mov
shll
mov
loope
add
mov
mov
jg
sub
lock
inc
mov
mov
icebp
dec
ss
aaa
cld
mov
pop
fsubrp
pmulhw
outsb
jns
mov
adcb
cltd
dec
jmp
pop
jmp
and
jle
sbb
icebp
add
jo
mulb
mov
dec
cmp
out
xchg
jo
lcall
xchg
push
fwait
inc
dec
repz
sbb
nop
daa
movsb
xor
sarb
pop
lds
and
lahf
ror
mov
inc
outsl
xor
rolb
hlt
xchg
out
xor
fdivl
or
pop
dec
add
lods
sub
nop
inc
cs
cmp
stc
xchg
xor
xlat
and
test
stos
sub
test
lock
test
xor
ret
data16
imul
pop
movsb
push
mov
popa
or
push
mov
and
xor
and
orl
mov
in
jo
nop
or
xor
jnp,pt
pushf
pop
test
jnp
push
sbb
nop
and
movsb
call
nop
data16
mov
adc
loopne
or
fcomps
push
inc
filds
adc
jnp
inc
jp
push
and
jp
fistpll
mov
xorl
scas
mov
nop
push
xor
or
inc
push
cmp
fsubrs
and
mov
and
adc
enter
call
and
inc
test
inc
js
push
ret
mov
dec
cld
pop
mov
xchg
sbb
jbe
test
insl
xor
out
push
sub
pushf
test
movsl
pusha
xchg
test
mov
sub
adc
jl
int3
jns
popl
insb
daa
xor
inc
or
mov
adc
inc
ljmp
aas
inc
out
dec
test
subb
popf
clc
es
repz
push
xchg
mov
mov
cwtl
in
ret
pop
or
icebp
push
int3
or
data16
or
or
roll
test
inc
pushf
into
shl
les
test
dec
lahf
loopne
testl
mov
fmul
mov
inc
pop
popa
mov
test
or
inc
out
lahf
in
dec
dec
sbb
and
enter
or
mov
dec
push
les
cmpb
rcll
pusha
sub
shl
jnp
icebp
pop
sub
push
xchg
mov
push
in
adc
andb
movsl
es
inc
dec
add
xchg
ret
sti
das
lret
fadd
push
pop
push
cmpsb
aam
and
fistps
jp,pn
bound
or
sub
cli
add
mov
test
test
ret
and
mov
sbb
cmp
popa
aaa
cmc
adc
rolb
sub
je
and
sub
sub
lods
clc
sbb
sbb
adc
fs
jns
adc
lahf
push
xor
xor
and
insb
adc
imul
out
fs
xchg
leave
xchg
add
lock
jge
add
xchg
rorl
add
lcall
test
sarb
ret
cmp
adc
add
arpl
lret
insb
popa
cmp
sbb
cmp
sbb
jecxz
mov
into
cltd
or
and
jg
mov
lock
pop
adc
es
repnz
sbb
jno
adc
dec
mov
sub
sub
in
lods
jp
or
jne
inc
dec
in
imulb
outsb
lock
sbb
jns
sub
imul
sbb
push
ja
or
call
push
stc
arpl
outsb
ds
jno
into
dec
push
daa
movsb
enter
loop
mov
pushf
inc
repnz
shrb
cmc
xor
and
pushf
sbb
sub
sarb
lods
dec
pop
push
add
pop
out
ds
shll
push
pop
test
or
es
je
psllw
pop
lock
sub
xor
xchg
add
lahf
rol
cmc
adc
sub
mov
cmp
push
sbb
rolb
cli
fsubl
push
fiadds
inc
outsl
ja
xchg
add
jns
and
inc
pop
push
and
mov
ret
orb
push
jg
addb
aaa
add
nop
mov
lret
fadd
jae
xchg
pop
js
add
cmp
addb
or
adc
pop
ret
inc
into
sarb
jp
shl
addr16
rcrb
sbb
push
jg
add
jae
or
leave
push
test
xchg
add
sub
jmp
icebp
jl
cmp
stos
sbb
arpl
movsb
cmpsl
mov
jae
adc
test
xchg
push
sbb
xchg
xchg
xor
push
sbb
add
pop
push
cmp
cmpsl
mov
inc
xor
add
sbb
add
repz
sub
sbb
push
in
push
setne
xchg
adc
fldl
push
push
ds
and
sahf
lock
cmp
shrl
add
loope
cwtl
subl
incb
adc
adc
add
mov
and
in
and
and
mov
leave
mov
mov
testb
and
adc
jbe
mov
mov
jns
mov
jl
xchg
mov
outsb
enter
add
daa
mov
inc
pop
lds
sahf
push
and
add
dec
in
or
xor
jl
add
neg
roll
push
lds
add
adc
xchg
cmp
adc
mov
sbb
pop
jno
ljmp
add
inc
cmpsl
cmc
add
jle
cmp
dec
adc
cwtl
data16
xchg
add
pop
push
je
rcrb
loopne
clc
add
sbb
fdivrl
sub
scas
adc
push
jge
pop
insl
adc
add
sbb
ds
push
and
pop
fs
jne
mov
pop
and
negb
pop
adc
jg
adc
add
push
or
aaa
or
div
ret
xor
int
flds
mov
jg
fists
popa
cld
dec
inc
loopne
push
nop
adc
lock
xchg
add
jle
add
pop
push
loope
shlb
xchg
pop
mov
jmp
pop
hlt
outsb
fcmovu
and
add
push
fisttpll
add
mov
clc
push
xchg
repnz
add
ds
addb
and
pop
jns
addb
mov
jg
sub
sbb
dec
pop
mov
adc
sub
mov
push
jne
sub
push
push
out
pop
test
lahf
movsl
xadd
dec
mov
cmpsl
js
rcrb
and
dec
cmp
sub
inc
add
and
sub
imul
dec
loope
add
sub
push
int3
jg
mov
out
repnz
sbb
jge
lret
and
add
and
sub
adc
in
sbb
stos
imul
jb
popa
aam
push
xorb
addr16
dec
and
add
testl
nop
sbb
pop
add
ja
je
daa
push
mov
addb
and
cs
mov
lods
sbb
outsb
jg
add
lret
push
xor
lock
repz
aam
jle
jge
ds
push
add
pop
ret
loopne
xor
inc
jnp
outsb
std
xor
sbb
es
dec
in
pusha
add
into
or
shr
rolb
cmp
scas
adc
enter
addb
add
or
dec
jp
lret
pop
cmp
outsl
jae
nop
test
add
jg
add
pop
aaa
pop
add
mov
xchg
sbb
add
cs
cmpsl
push
jno
xchg
nop
stc
cli
incl
lods
loopne
push
pop
pop
inc
xchg
js
add
mov
cli
daa
jle
add
stos
lods
outsb
mov
push
dec
and
or
add
cmp
adcl
clc
xchg
shlb
adc
popf
es
mov
outsb
push
daa
scas
add
lahf
insb
sub
or
pushf
insl
adc
jg
dec
int
add
fsubrl
dec
cmpsl
loop
inc
pusha
fdivrs
add
jg
dec
cmp
push
dec
push
xor
push
sub
out
mov
insl
lcall
add
push
mov
add
lds
mov
movsb
mov
add
dec
stos
test
lea
ds
lock
or
jg
out
adc
push
ja
dec
jne
jmp
dec
mov
out
xchg
add
iret
add
pop
push
push
xchg
sbb
jmp
hlt
add
lret
jl
cmp
sub
test
add
xchg
aam
lahf
insl
mov
repnz
call
add
shr
icebp
dec
adc
add
fbld
sub
shlb
xchg
rcrb
dec
push
pop
pop
add
mov
loop
cmp
clc
pop
movsl
mov
sub
in
mov
inc
mov
jb
pop
mov
nop
int3
or
add
lea
inc
loope
imul
push
les
push
add
xchg
insb
jnp
shrb
test
test
dec
or
add
aam
js
add
xadd
testl
mov
stos
rcrb
shr
pop
cmc
push
xchg
add
adc
add
and
add
cwtl
imul
xchg
add
gs
mov
mov
adc
add
sbb
push
cmpsl
push
outsb
xorb
pop
push
scas
pop
arpl
subb
scas
repnz
cmc
xchg
xor
ss
iret
sbb
cmp
push
xchg
inc
nop
hlt
jo
add
pop
fists
jb
xchg
pop
mov
add
mov
es
jo
xlat
add
sub
xchg
lds
cld
mov
jecxz
loop
inc
inc
stc
cmp
cmpsl
add
stos
mov
iret
divb
cmp
incl
pop
sti
repnz
or
stc
mov
adc
pushf
into
sbb
or
or
and
add
shr
pop
jno
xor
xor
movsb
xchg
sbb
add
pop
sbb
sbb
xchg
lds
clc
pop
ljmp
pop
and
dec
push
adc
xlat
xorb
filds
test
pop
lret
adc
cmp
jns
jge
fcmovu
jecxz
cli
mov
cmp
push
call
in
ljmp
jl
daa
cmp
sub
pop
clc
mov
notb
scas
aad
xchg
fdivr
jne
add
jmp
stos
push
sbb
fadds
or
cmpsl
lods
inc
cmpsl
lock
jae
out
or
aaa
movsl
add
pushf
in
add
jg
pop
add
adc
pop
push
js
sti
cmp
mov
pushf
xchg
fsubrs
and
stos
jnp
add
xchg
mov
testb
rcl
add
dec
add
incl
fs
and
add
mov
cld
add
mov
sti
mov
mov
or
lea
and
lret
jbe
mov
push
addl
add
fldl
clc
add
adc
pop
xchg
incl
sub
inc
orl
jo
pushf
call
inc
xchg
pop
adc
lods
testl
sbb
loop
add
nop
mov
sar
out
pop
xchg
jecxz
inc
cmp
xlat
jo
mov
sahf
push
jp
fisubs
inc
aas
shll
xor
adc
xchg
insl
push
xor
or
cmp
cmp
test
push
or
xchg
mov
iret
add
sub
add
jae
movsb
add
test
mov
pop
mov
cmc
lret
lret
xor
movsb
mov
pushf
insl
repnz
mov
pop
add
mov
xchg
fdivrs
subb
adc
pop
stc
test
mov
cmpsb
fnstsw
sbb
lods
push
sarb
fimuls
xor
pause
loope
adc
sahf
jae
gs
cli
jnp
mov
ret
and
fs
in
push
std
fidivrs
rorb
pop
sbb
add
loope
pop
add
adc
in
adc
mov
lods
cmpsl
xlat
jmp
rorb
outsb
push
or
enter
pop
or
mov
cmp
add
jb
add
add
jnp
or
push
pop
add
dec
in
add
faddl
ja
push
jp
add
inc
dec
xchg
imul
or
loope
mov
rol
cs
sub
jb
sahf
pushl
mov
mov
fnstcw
sub
iret
lods
jle
add
in
shlb
or
adc
mov
jo
aad
mov
cmp
add
loopne
xor
add
push
mov
push
xor
fsubr
or
in
bound
push
pop
les
sbb
nop
add
enter
push
xchg
add
jne
inc
add
stos
rclb
lock
int3
dec
add
arpl
xor
fs
xchg
ret
or
xor
lea
das
or
outsb
lcall
test
addr16
imul
shlb
add
jp
jmp
inc
daa
and
add
das
outsl
sbb
push
jle
sti
pusha
mov
add
popa
mov
pop
dec
stos
mov
add
gs
cli
jns
popa
mov
mov
jg
data16
push
imul
xorb
insb
jge
and
mov
stc
pop
add
ds
push
add
cltd
test
xchg
rcrb
xor
pop
push
inc
pushf
jne
and
lds
xchg
inc
aam
and
xchg
cmp
jo
jmp
xor
mov
mov
mov
add
out
aad
add
les
lret
jge
inc
sub
popf
pop
inc
mov
push
xor
push
rcrb
enter
add
jns
lea
xorb
lret
push
and
jno
add
cld
sub
add
or
pop
mov
out
xchg
mov
popa
cmp
test
aad
jb
add
sti
call
push
jne
mov
lcall
and
inc
arpl
sbb
mov
mov
fdivrs
mov
aam
mov
push
adc
and
sbb
add
or
mov
or
das
into
xor
or
filds
aad
movsl
lods
sahf
inc
xchg
inc
hlt
rorb
add
pop
jmp
and
add
lret
jno
andb
xchg
push
fs
mov
loopne
push
nop
fistpl
test
rcr
and
add
adc
fcompl
fsincos
sbb
mov
hlt
dec
mov
and
add
push
ljmp
add
movsb
lahf
cli
aad
pop
push
pop
mov
xchg
mov
call
ja
out
xchg
and
ficomps
lea
sbb
ret
mov
clc
xchg
in
add
cmc
push
test
mov
add
daa
clc
jno
jg
inc
jecxz
hlt
fwait
add
cmp
jge
loopne
jl
sbb
rorl
cld
fsubs
movsb
jg
or
lea
syscall
mov
xor
enter
addb
push
lods
jl
xor
pop
add
add
ljmp
and
jne
shlb
xchg
xchg
iret
add
mov
push
add
subb
inc
lahf
test
and
cmp
xchg
mov
pop
out
pop
lods
rcll
mov
lods
shr
insb
mov
jp
scas
adc
rorl
xchg
dec
pop
push
push
add
mov
test
andb
xchg
pop
int3
aaa
test
and
sub
jl
cwtl
jle
imul
push
mov
xlat
xchg
push
sub
xorb
and
sub
pop
cmp
xchg
imul
ret
addr16
rclb
arpl
xlat
fiadds
jecxz
insb
decl
lock
sbb
lret
or
fsubs
or
add
jae
sub
inc
psubsb
into
jne
hlt
std
sbb
xor
sub
out
add
cmp
adc
add
fnstenv
mov
sub
cmp
add
mov
jmp
lods
test
add
aaa
or
mov
push
push
add
push
mov
in
sar
pop
sti
jnp
inc
mov
out
xchg
scas
pop
dec
mov
in
sub
cmpsl
pop
and
mov
data16
jnp
mov
into
push
mov
outsb
sbb
cmpsb
or
cmp
das
mov
xchg
jmp
adc
fs
mov
and
stos
rcr
inc
arpl
aad
mov
jg
jecxz
add
and
add
cltd
mov
lods
fs
out
cs
sahf
test
in
add
cmp
call
in
add
test
push
jo
push
jb
cld
mov
call
add
add
aas
add
sbb
adc
test
cmp
add
inc
insl
dec
orb
cmp
loope
or
push
mov
sub
rcl
in
mov
cwtl
pop
aad
shll
out
add
or
ds
mov
mov
nop
pusha
popf
cmp
fistl
mov
sub
test
push
lods
or
imul
dec
push
xor
mov
inc
jle
adc
add
jg
adc
pop
mov
add
cwtl
enter
add
cmpsl
push
xor
or
sub
ficoms
add
daa
shlb
xchg
mov
lret
xchg
or
in
mov
cmp
out
fsts
addr16
mov
and
sbbl
xchg
fcoml
add
iret
data16
adc
inc
dec
and
push
adc
inc
andb
dec
jae
and
sbb
sbb
pop
lock
adc
mov
or
ror
pusha
rcr
pusha
add
jae
pop
pop
fwait
inc
jo
xchg
pusha
push
inc
inc
sbb
xor
ja
jmp
push
fwait
pop
sahf
in
add
insl
in
in
mov
and
lea
out
lods
fldcw
pushf
add
cli
xor
cltd
je
add
and
insb
push
fsts
mov
and
sbb
std
popf
xor
roll
enter
jecxz
xor
les
ret
push
sbb
lods
sbb
mov
psubw
lds
nop
js
lcall
data16
scas
add
dec
aam
rcrb
push
cmpsb
mov
aad
ljmp
movsb
add
hlt
fidivrl
in
sbb
or
mull
xchg
mov
or
sbb
jl
jno
xchg
lret
xchg
sahf
push
add
mov
subb
jo
or
cwtl
push
mov
test
out
pop
ja
hlt
or
xchg
push
ret
add
and
insb
dec
bound
inc
adc
jne
or
fs
fldl
es
repz
add
or
std
mov
xchg
and
mov
cmove
fsubs
push
clc
fidivl
sbbl
pop
add
addb
adc
push
pushf
push
addl
pushf
and
xor
and
mov
mov
or
mov
lret
jmp
mov
gs
mov
add
jb
mov
add
ret
adc
loopne
push
inc
add
movsb
enter
inc
jg
jnp
sbb
cmp
or
xchg
sti
repz
push
and
in
jns
mov
jnp
add
inc
mov
jno
sarb
pop
fldl
fcoms
xchg
inc
mov
dec
add
cmpb
lea
mov
popa
mov
jmp
jecxz
xchg
mov
movsb
push
cld
mov
add
je
adc
and
xor
pusha
ret
xchg
fs
and
lods
and
inc
insb
or
cmc
dec
adc
jg
mov
stos
sub
nop
push
das
in
sbb
fsts
adc
in
ss
aam
mov
mov
inc
nop
js
mov
add
pushf
lea
add
or
mov
adcl
add
sub
or
adcb
pop
nop
mov
in
pop
sbb
shrb
mov
add
jmp
xor
test
int3
cwtl
xchg
movb
mov
shrb
add
and
fmull
sub
adc
add
lods
push
in
sbb
pushf
jae
pusha
add
lcall
imul
inc
mov
js
pop
cmp
hlt
fwait
push
in
iret
roll
and
push
pop
push
cltd
test
sub
add
imul
fisttps
sub
dec
dec
daa
push
cmp
add
stos
push
add
fwait
jae
add
daa
dec
movsl
adc
inc
add
and
neg
shll
add
ds
sahf
data16
loop
jno
cmp
aaa
jmp
andl
cmove
pusha
add
fcmovnu
add
ss
xchg
fsub
sbb
and
sub
xor
push
pop
jle
pop
mov
cmp
outsl
shlb
loopne
loope
imul
sub
xor
inc
or
lods
mov
jne
dec
pop
mov
adc
cmp
adc
sbb
push
roll
mov
add
out
outsl
mov
add
cmp
decb
jge
xor
mov
adc
inc
inc
inc
repnz
add
push
add
cmp
shlb
push
mov
dec
or
shr
xchg
in
inc
xchg
test
add
jle
lret
sar
adc
xor
add
cmc
shlb
dec
cwtl
out
lret
push
cs
lcall
mov
in
leave
dec
daa
push
push
mov
lret
push
fsubs
in
inc
and
mov
popf
jnp
mov
dec
mov
xchg
add
dec
cmpsl
aas
jp
inc
sbb
and
push
pop
push
movsl
fwait
push
add
out
push
jb
ja
rclb
add
xchg
or
sub
push
lods
push
sarb
add
jge
add
xor
xchg
out
les
es
flds
and
add
aad
cmp
adc
add
ds
jmp
jp
add
jo
arpl
into
push
adc
sbbb
push
add
pushf
fsubl
pusha
cld
jbe
dec
std
sti
cwtl
js
fsubs
and
stos
push
cmp
in
icebp
mov
std
cmp
pusha
add
pop
rcrl
mov
dec
pop
push
loopne
arpl
add
stos
or
int3
fcoms
push
call
jo
movq
iret
add
pop
fistps
je
mov
mov
shlb
popa
jo
pusha
movsb
rcll
fisubrl
xchg
cli
adc
sbb
push
xchg
dec
dec
leave
addl
or
push
int
cmp
cmp
cmp
clc
mov
sub
jge
push
icebp
insl
pop
sbb
xchg
mov
arpl
cmp
out
mov
fidivrs
movsb
add
sub
jp
test
xchg
es
icebp
loope
cmpsb
pop
or
nop
daa
ret
pusha
inc
in
roll
mov
je
jge
inc
xchg
inc
jle
cwtl
adc
add
or
add
out
inc
es
add
mov
mov
pop
pop
mov
mov
push
mov
mov
fimull
or
xchg
aam
xchg
add
adc
enter
adc
fs
lahf
imul
popf
add
xor
jno
add
mov
add
push
in
mov
stos
adc
add
clc
xchg
repz
cld
out
or
bound
mov
dec
ja
add
divb
or
lcall
xchg
sub
scas
inc
sbb
cmp
push
push
outsb
xor
jnp
mov
or
insl
mov
add
aad
xor
aas
add
mov
mov
sbb
add
pop
ljmp
add
nop
hlt
loopne
jmp
push
hlt
xor
mov
ret
pop
push
xchg
or
cld
out
add
lcall
cmp
mov
nop
scas
ret
mov
mov
and
jle
or
shlb
add
scas
add
stos
jg
add
movsl
mov
jo
mov
es
mov
push
jno
mov
add
scas
fwait
and
ss
inc
push
test
addb
mov
cmp
dec
jg
jecxz
lcall
fmuls
or
subb
xchg
mov
dec
lea
push
js
mov
pop
cwtl
enter
fistps
jo
in
cli
add
stos
mov
data16
xchg
add
mov
and
push
xchg
add
adc
add
or
popa
negb
push
xchg
add
fsts
mov
fadds
dec
mov
repz
mov
cltd
imul
fadds
sbb
add
addr16
pop
sti
jecxz
cmc
jl
add
lret
sub
fs
popf
clc
push
add
push
mov
adcb
mov
nop
pusha
jl
sub
jg
js
adc
jle
push
sbb
adc
push
lds
mov
pop
mov
inc
lock
adc
cltd
sarb
mov
inc
pusha
sub
xchg
adc
push
js
adc
mov
loope
fwait
jl
and
das
or
frstor
push
pop
push
xchg
xchg
jno
cmp
leave
add
cmc
mov
lret
add
fcompl
push
push
fists
add
enter
jns
adc
out
enter
and
xchg
cwtl
add
mov
cwtl
or
and
addr16
lret
mov
lahf
sub
jns
dec
sbbb
lret
lods
and
jo
js
aad
cmp
insl
adcb
mov
cmpsb
cmpsl
push
jnp
add
mulb
add
in
xlat
sbb
lds
rorb
sub
push
test
add
fldcw
dec
push
jp
loop
jg
outsl
cmp
ds
mov
xor
and
sub
into
cmpb
mov
add
arpl
scas
mov
dec
and
push
cli
jnp
stos
mov
sbb
shlb
jb
adc
and
jo
jbe
imul
xlat
xchg
push
mov
add
call
scas
stos
insb
pop
vpsubusb
xlat
or
or
mov
add
push
pop
clc
jecxz
mov
lds
aas
fucomi
jge
sub
cmpsl
jg
les
lods
icebp
or
sar
fdivl
jle
sbb
xchg
push
push
pop
sarb
cs
add
aam
mov
xchg
les
or
push
jecxz
xor
add
xchg
pop
cmp
add
ljmp
jp
xor
pusha
sub
mov
popa
and
mov
pop
scas
shlb
loopne
mov
testl
xchg
insb
mov
add
mov
dec
add
add
lret
add
jmp
adc
jle
jno
pop
loopne
mov
fucomp
add
and
and
push
push
mov
and
stos
mov
or
sub
int
roll
jnp
jl
daa
push
mov
je
pop
ret
jo
dec
xchg
pop
movsb
cmp
lds
int3
push
jl
or
leave
and
sahf
adc
dec
cmp
add
sub
loopne
cmp
insl
mov
adc
ficoms
adc
xor
or
sbb
das
jns
popa
mov
aam
add
and
pushf
sti
std
push
fs
mov
bound
cmpb
sub
nop
mov
cmpsl
or
add
repz
inc
outsb
add
pop
psrlq
sbb
outsl
cli
add
shlb
out
int3
xchg
or
lret
sbb
in
jmp
scas
and
aas
push
inc
xor
push
sti
mov
es
push
loopne
nop
pop
pop
je
add
inc
jbe
arpl
and
add
or
frstor
call
mov
mov
loope
and
lret
stc
pop
push
and
inc
pop
sbb
pop
in
mov
and
push
xchg
into
mov
push
fildl
xor
sbb
add
cmc
add
loope
jecxz
or
jno
pusha
mov
test
rcrb
jo
subl
gs
add
add
daa
fwait
mov
push
and
lods
aad
push
or
jnp
add
and
loope
pop
push
fcoml
add
ja
adc
out
sub
jg
add
sub
xor
out
add
es
sahf
ds
cmp
orb
jo
fdivr
negb
mov
jbe
sub
shl
cmp
xor
add
pop
lcall
inc
jae
lods
rclb
push
out
cld
add
cmc
sti
add
shl
pop
or
lock
add
loope
adc
jno
dec
push
hlt
mov
shl
push
and
sbb
or
push
fldl
hlt
call
inc
jo
pop
rclb
lods
add
dec
push
sub
push
dec
pop
xor
jns
jl
cmp
shlb
inc
mov
push
cmp
mov
dec
pop
jns
mov
push
sub
sahf
idiv
mov
pop
or
data16
cmp
mov
es
add
fnstenv
mov
cltd
ja
loopne
std
add
mov
fs
mov
sub
mov
pusha
sub
imul
mov
cmpsb
mov
cmp
add
push
movb
xchg
aas
int3
xor
sub
add
mov
sub
pop
or
add
jno
mov
inc
scas
adc
lret
sbb
fisubl
repnz
push
nop
scas
add
inc
dec
inc
scas
xlat
adc
jmp
pop
mov
jnp
adc
sbb
cmp
add
xor
mov
or
add
pop
cmp
add
scas
xchg
or
add
fcmovnbe
push
add
mov
sbb
push
mov
leave
mov
xor
insl
clc
sub
add
mov
mov
cmp
mov
push
jge
in
std
pop
mov
scas
addr16
in
add
arpl
dec
das
adc
int3
loop
push
xchg
mov
xor
pusha
shll
xor
sbb
negb
sbbb
fistl
cmp
mov
divb
popf
pop
dec
insl
add
lods
adc
sbb
lcall
and
add
mov
adc
push
enter
push
lods
jbe
pop
add
cmpsb
es
shrb
xchg
add
dec
sarl
aam
test
lahf
push
lock
in
es
push
addb
mov
push
push
andl
lahf
add
or
mov
mov
fwait
and
xchg
inc
les
or
dec
shrl
hlt
std
mov
lret
leave
xchg
sub
ja
jge
jns
lcall
mov
sbb
test
mov
add
lret
fs
mov
sbb
loopne
jp
addr16
add
sti
mov
addl
add
int3
or
shlb
shll
push
es
test
in
ds
jo
sub
adc
imul
loope
mov
xchg
mov
aam
repnz
in
push
js
xor
and
outsb
sub
mov
loope
cld
addr16
pop
mov
adc
inc
mov
movsb
inc
adc
add
mov
insb
sbbb
rcll
repz
adc
icebp
adc
add
call
add
fcoms
dec
shrb
xor
orb
xor
int3
mulb
xchg
loope
fimull
test
test
mov
and
add
test
sbb
arpl
dec
subb
dec
push
add
mov
scas
ret
out
leave
cmpsl
cmp
pop
adcb
rcr
push
xchg
out
add
sti
cmp
mov
std
fcom
pop
inc
add
sbb
add
outsl
jmp
das
arpl
add
mov
add
pop
stos
scas
jg
push
mov
dec
fsubrs
shl
mov
mov
add
mov
and
xor
call
cmc
cli
add
ds
lcall
add
and
js
stc
rcrb
pushf
cmp
pusha
rolb
incl
daa
jmp
adc
mov
dec
imul
or
mov
lock
out
push
fsqrt
fwait
lret
fs
cmpsb
add
sbb
incb
jb
ficompl
inc
xchg
cli
add
push
lds
ljmp
lods
lods
sbb
imul
shll
jmp
mov
inc
rep
aaa
xor
or
icebp
loopne
jmp
add
fisttpl
push
pop
xchg
mov
ud2
fldenv
sbb
fsubrp
cmpsl
adc
push
xor
enter
inc
xor
js
aas
sub
add
addb
test
fdivrs
shlb
pop
cwtl
push
pop
mov
cmp
stos
lock
mov
fs
lsl
mov
adc
js
loopne
pop
lods
xchg
add
shlb
cmp
jecxz
popa
pusha
and
test
xor
pushf
lock
sbb
subb
add
add
out
sarl
lock
cwtl
sbb
xor
dec
popf
mov
mov
mov
add
inc
ss
jmp
mov
imul
or
xchg
add
loopne
icebp
add
nop
sub
add
outsb
cmpsb
mov
lea
adc
idivl
pop
daa
inc
outsb
add
push
mov
int3
add
jne
in
std
pop
shrl
divb
add
mov
push
loope
in
adc
testb
cmp
xor
or
jbe
ffreep
add
add
loopne
notl
xchg
dec
scas
lock
bound
mov
inc
xchg
enter
dec
loop
cmpsl
in
mov
cmp
mov
or
inc
mov
clc
inc
push
out
test
mov
arpl
xor
lods
das
jle
loopne
cs
mov
jns
inc
cmp
push
cmpsb
ret
or
andb
test
mov
rol
hlt
mov
add
add
cmpsl
xchg
dec
pusha
sbb
mov
test
mov
jecxz
mov
imul
add
xchg
push
lcall
pop
pop
lret
mov
sbb
pop
std
fiadds
mov
jo
add
stc
jmp
orl
verw
ret
das
mov
and
adc
mov
mov
add
xchg
cmp
shrl
jae
add
lret
adc
cli
das
xor
or
add
adc
add
rolb
jmp
and
push
mov
pop
mov
fdivrl
pop
sbb
ret
in
pop
mov
add
aaa
add
mov
mov
test
pop
sbb
aam
lock
inc
in
pusha
sbb
adc
jge
jl
lods
nop
lret
push
add
mov
sbb
sub
fwait
adc
repnz
adc
notl
add
rcll
int3
daa
pop
mov
inc
movsb
aam
jb
dec
jle
mov
add
mov
movsl
fisubl
fcoml
cmp
repz
add
adc
sahf
mov
push
int
jecxz
call
pusha
sbb
mov
inc
dec
nop
repnz
pop
xor
jb
dec
decl
pop
add
adc
dec
int3
inc
pop
and
or
xchg
aad
push
pop
jb
enter
mov
ljmp
pusha
sarb
or
push
cmp
add
lret
push
incb
jg
add
xchg
jecxz
dec
lods
add
inc
xchg
inc
push
sbb
jo
inc
sub
push
pusha
mov
xor
mov
rclb
mov
pop
sub
sbb
mov
into
fiaddl
cmpsb
xor
imul
je
mov
cmp
sahf
ror
scas
lret
imul
andl
pop
pop
add
mov
lret
pop
push
in
lcall
jmp
shll
je
xor
mov
lock
xchg
dec
mov
xor
add
lock
push
and
xor
int3
jle
ljmp
push
fnsave
sub
divl
push
sbb
push
std
clc
test
jb
xor
mov
or
jecxz
out
dec
add
inc
aas
int3
add
aad
xlat
repz
add
mov
push
pop
push
sbb
add
xchg
arpl
pop
daa
test
mov
cmp
push
add
sbbl
rol
mov
nop
mov
shl
test
mov
out
flds
mov
in
xor
push
test
mov
jne
movsb
push
lods
lea
ret
test
or
push
imul
cmp
cs
dec
add
mov
jmp
mov
cmpsb
push
inc
push
dec
pusha
mov
lods
add
xchg
sbb
test
adc
xor
es
data16
lahf
lock
add
jb
sbb
add
movsb
mov
sbb
xlat
icebp
add
mov
loope
add
push
mov
leave
pop
cltd
das
lock
clc
add
jne
mov
cmc
repnz
or
and
pusha
xchg
cs
mov
xor
js
fwait
pushf
imul
add
shl
scas
psubusb
hlt
pushf
addr16
push
add
stos
fists
inc
jae
jl
addr16
add
cmpsl
inc
hlt
sarb
test
hlt
xchg
and
add
push
jle
mov
mov
int3
add
xchg
rolb
or
and
fnstcw
shlb
nop
add
cltd
mov
push
dec
and
movsb
bound
loop
lods
stos
out
xor
mov
or
fisubl
scas
movsl
adc
inc
mov
aaa
lcall
mov
pop
lods
add
lods
rorb
jb
sub
inc
bound
test
inc
cmp
movsl
sbbb
stos
push
push
popf
dec
cmpsl
in
jmp
jno
adc
pusha
je
sbb
in
or
sbb
les
movsl
sub
xchg
cld
lock
pop
mov
add
out
test
jae
jge
and
js
scas
or
mov
add
mov
mov
xor
xchg
sarl
jno
imul
push
stc
cmp
dec
inc
adc
push
nop
stos
cmp
and
outsl
push
add
adc
movl
jns
mov
xor
jnp
call
inc
cmp
and
xor
repz
lea
add
je
in
fsubs
ss
dec
aam
outsl
adc
jns
out
int3
loope
inc
roll
cmp
sub
loop
cli
adc
inc
mov
data16
gs
or
jbe
pop
sbb
mov
inc
dec
bound
inc
jae
repz
pop
dec
pop
jno
adc
add
pop
addr16
add
std
adcl
vcmpltps
inc
xchg
mov
xchg
into
jo
call
mov
sub
ret
rorl
sub
adc
gs
repz
repz
loopne
fstl
je
aas
mov
add
pop
xchg
mov
loopne,pt
push
jmp
pop
xor
mov
arpl
mov
inc
gs
sub
add
and
or
out
push
mov
xchg
mov
add
lret
fsubs
cwtl
cld
jg
inc
js
add
popf
test
pop
add
mov
popa
shrl
adc
mov
pop
xchg
iret
xchg
aad
inc
and
cmp
inc
mov
mov
sbb
test
mov
xor
nop
xchg
add
es
cwtl
dec
jns
cmp
push
xchg
jbe
mov
outsb
lods
add
push
mov
add
mov
rcr
add
popa
mov
cmp
nop
pusha
in
orl
jae
shr
add
fs
dec
loop
repnz
adc
sbb
shld
sar
sbbb
add
mov
inc
repnz
add
insl
pop
mull
jb
mov
repnz
outsb
push
cmc
add
shll
add
jbe
xor
adc
pusha
hlt
call
iret
dec
inc
lret
pop
psubusw
jp
inc
sub
mov
enter
cmp
pop
cmp
xchg
push
jo
jp
clts
xor
or
and
lahf
and
xchg
jbe
je
arpl
jno
cli
sub
mov
loop
icebp
mov
js
xor
jo
cmp
mov
sub
sbb
xchg
jae
lock
mov
mov
mov
sbb
fwait
into
lock
cmp
xchg
adcb
stos
js
or
test
leave
mov
bound
lods
inc
sbb
jg
add
fmull
daa
mov
cmp
jnp
fcomps
and
add
popf
jg
push
in
push
or
insb
xchg
cmp
dec
mov
ror
cmc
fadd
lcall
rolb
movntq
lods
push
add
lods
insb
push
xchg
mov
add
ret
es
cld
xchg
shr
add
inc
out
push
adc
jne
mov
xor
sbb
add
data16
dec
sbb
adc
inc
mov
lahf
xor
pop
loopne
add
lret
or
add
and
pop
dec
cwtl
add
rclb
loop
jnp
add
jbe
js
bound
push
in
fwait
or
lahf
lea
in
add
mov
mov
push
rolb
jbe
out
fidivrl
jmp
xor
pop
mov
mov
subb
jo
mov
loop
adcl
fidivrl
rcl
repnz
add
cltd
out
mov
nop
sub
add
inc
push
inc
test
inc
mov
inc
mov
pop
rorl
and
inc
sub
je
and
scas
fidivrl
and
mov
xchg
cli
adc
loopne
and
mov
add
fisubl
mov
xchg
add
out
imul
shll
imul
mov
add
arpl
xor
clc
pop
jne
paddsb
mov
or
push
add
mov
jb
fs
popa
mov
dec
les
sbbb
jo
jp
loop
imul
js
add
inc
push
dec
cmpsl
das
cs
pop
mov
orb
pusha
mov
add
cld
nop
iret
insl
xor
jnp
xchg
lret
repnz
push
sub
js
and
hlt
dec
adc
cld
addr16
add
xchg
ret
inc
and
arpl
or
cmpsl
sub
dec
flds
mov
and
pop
daa
push
jo
pop
pop
jp
bswap
or
inc
cmp
jbe
lds
inc
cwtl
jns
and
xor
ja
xchg
daa
sete
add
movb
add
add
fdivl
mov
or
dec
insl
add
notb
mov
push
js
pop
movsl
ja
shlb
sbb
dec
sub
lods
aam
ljmp
pop
sbb
add
lock
adc
add
xchg
fldenv
cmp
and
test
inc
add
enter
mov
cmc
inc
jecxz
jg
add
int3
sub
add
popf
dec
push
stos
xchg
in
test
pusha
mov
cltd
add
les
aad
sub
add
cmp
pop
hlt
push
or
aas
push
cld
mov
add
aad
xchg
sbb
inc
lods
sahf
inc
push
cld
test
js
enter
push
loope
hlt
dec
cmpsl
dec
xor
jns
mov
and
or
int
and
popa
cmc
test
ds
lret
mov
mov
in
dec
push
xor
repz
push
outsb
sbb
cmp
rclb
push
fstpt
add
xchg
lret
sbb
push
pop
loopne
xchg
sbb
xor
add
lret
sub
add
dec
orb
shr
jmp
arpl
add
pusha
cmp
cmp
dec
add
lret
pop
pop
cmp
jbe
jp
push
add
lret
add
cmp
cld
xchg
mov
jge
mov
mov
add
outsb
add
mov
or
add
cmpsb
lcall
jbe
in
or
cltd
ljmp
mov
and
dec
add
pop
mov
fistpll
or
jmp
in
add
pop
or
bound
pop
pop
sti
xor
add
js
sarl
inc
add
mov
mov
pusha
sar
add
and
push
add
inc
dec
cmpsb
xchg
add
js
jno
add
sub
inc
jno
daa
pop
mov
lret
fmull
adc
push
add
xor
xchg
sub
mov
pushf
inc
push
out
xor
push
sub
sub
jp
pop
jnp
bound
mov
add
add
fmulp
sti
push
add
fisubrl
push
jecxz
cmc
push
add
mov
add
fbstp
jecxz
add
loop
sbb
cmpsl
xor
add
lds
outsb
jae
lret
ljmp
mov
pop
dec
add
lds
mov
les
and
shl
jle
aas
cmp
and
fwait
insl
out
mov
mov
popf
mov
rol
mov
adc
aad
addb
imul
aad
and
push
push
jbe
adc
mov
stc
xchg
icebp
and
aaa
adc
lret
pushf
mov
mov
orb
rolb
ss
out
pusha
add
add
ret
repz
mov
pop
shrl
imul
xchg
pop
test
push
pop
lcall
mov
mov
xor
rolb
mov
je
adc
add
add
xchg
lahf
push
jg
add
das
adc
mov
inc
test
daa
xor
add
mov
add
lret
mov
into
sub
mov
mov
out
or
xor
ja
and
dec
add
dec
or
push
je
jo
data16
cltd
pop
cmp
pop
and
jbe
and
mov
cwtl
imul
adc
add
mov
rcr
sbb
ds
sub
xor
lods
dec
ret
hlt
push
add
xor
aad
mov
in
rcl
hlt
add
pop
popa
leave
mov
xchg
jl
pop
or
xor
inc
xchg
dec
dec
rdpmc
and
cmp
cmpsb
jl
lcall
inc
test
cmovo
out
and
rorl
and
repnz
xlat
sub
iret
rcl
mov
enter
pop
cli
stc
jle
pusha
movsl
sbb
out
in
lds
dec
sahf
add
rorl
sub
push
add
stc
sub
lahf
pop
fnstcw
xchg
pop
rcl
gs
add
cmp
cmp
inc
sarl
and
lock
nop
dec
jl
add
rclb
jmp
std
add
adc
and
test
subb
pop
ds
cld
lock
sbb
sbb
xorb
in
js
add
inc
lea
inc
dec
mov
dec
sbb
jge
fcmovne
mov
pop
jg
push
sarb
dec
mov
cltd
shrb
loop
decb
add
xchg
jg
sbb
lcall
mov
sub
sti
add
adc
inc
cli
sub
movsl
sbb
adc
mov
push
dec
add
ret
popa
cmp
aam
add
cmp
mov
and
rcl
arpl
into
mov
test
add
and
add
sbb
jge
out
sub
add
repz
sbb
xor
add
xchg
cmc
mov
add
nop
mulb
and
stos
lret
test
mov
add
mov
cmp
hlt
test
int3
inc
inc
loope
xchg
dec
jg
add
insl
leave
jae
stos
int
jo
xchg
lcall
adc
mov
scas
add
lret
add
sbb
push
call
test
add
insl
outsb
lcall
add
out
inc
and
jae
cmpb
sbb
pushf
fiaddl
lock
lods
mov
aas
loope
ficompl
mov
add
fcomip
jbe
inc
mov
ja
call
notb
daa
stos
insb
sub
cmp
jns
xchg
push
add
int
and
dec
add
mov
imul
sbb
lret
adc
pop
jnp
ret
cld
repnz
mov
mov
aam
sub
add
push
das
jae
shrb
xchg
mov
shll
andb
ret
movsl
xchg
xor
sub
or
ja,pt
cmp
fmull
incb
sahf
adcl
pop
cmpl
sbb
add
xchg
into
pop
sahf
jnp,pt
add
aaa
pop
pushf
add
add
mov
adc
mov
dec
add
jmp
out
in
xchg
pop
mov
xchg
dec
outsb
cmp
inc
jns
sub
push
in
fcoml
sub
xor
cmp
ret
mov
and
ds
cs
xchg
in
mov
clc
mov
adc
and
fisttpl
inc
cmpsl
sbb
cs
mov
jecxz
adc
sub
inc
jnp
bnd
ret
insb
jmp
cmp
pop
lea
test
add
insl
lods
mov
cli
aad
add
add
cld
add
loop
loopne
test
dec
fiaddl
shrb
js
and
sahf
mov
or
ds
sbb
sti
push
stc
cmp
incb
inc
mov
std
dec
xchg
xchg
add
daa
inc
out
mov
adcl
sub
in
jmp
cli
add
push
add
cmp
add
mov
adc
lcall
shl
repz
cmp
cmp
push
mov
std
lret
xor
aam
test
add
mov
push
sbb
dec
push
rcll
add
ficompl
cwtl
sub
movl
ds
add
clc
jecxz
push
mov
in
or
add
push
test
mov
jle
mov
add
jl
out
repz
or
add
test
xchg
ja
pop
push
aad
imul
popa
cmp
sub
push
or
sar
daa
mov
push
adc
xor
sti
and
add
mov
mov
int
xchg
pop
cld
fdivs
mov
int3
popa
sbb
fbld
pop
pop
add
xor
cmp
cltd
dec
int3
push
pusha
jno
push
js
xor
cmp
mov
ds
pop
mov
and
sbb
ds
jecxz
jne
cmp
jo
jbe
scas
imul
pusha
clc
cmp
mov
lds
or
js
xor
cmp
jne
add
shrb
stc
bound
mov
call
inc
jbe
mov
sbb
adc
ljmp
mov
out
lods
dec
pusha
or
cwtl
inc
add
cs
mov
add
mov
not
fwait
adc
xor
dec
cmp
dec
pop
mov
scas
add
xlat
jno
lods
shll
mov
lods
shlb
jno
and
and
inc
xchg
pusha
insl
cmp
cwtl
sbb
or
add
mov
sbb
jnp
jmp
ret
adc
xchg
jl
xchg
ds
gs
dec
adc
lea
aaa
xchg
orl
xchg
dec
in
add
mov
cmp
mov
lea
movsb
pop
fstl
das
div
or
dec
xor
outsb
inc
xchg
or
out
add
and
lea
add
mov
jb
leave
or
pop
jno
sub
pop
xchg
inc
add
or
pusha
pop
mov
push
jg
and
nop
sub
mov
jl
add
es
pop
ss
lock
xor
insl
cmc
dec
add
std
hlt
fdivl
cld
filds
scas
daa
adc
scas
and
jecxz
or
pop
sub
dec
lods
adc
and
jge
xchg
cmp
adc
pop
mov
push
xchg
lahf
pusha
es
pop
cmp
mov
sbb
ret
test
int
adc
sbb
cli
inc
icebp
mov
loope
adc
ret
popl
mov
cmpsb
fcoms
rcrb
insb
iret
or
xchg
cmpb
lds
call
pop
cs
out
add
loopne
incl
add
mov
test
repz
fildl
add
dec
ljmpw
add
dec
call
cs
and
cmp
inc
ds
add
inc
push
mov
dec
or
xor
dec
cmp
inc
add
repz
aad
add
cmpsl
loopne
push
cltd
sbb
or
xor
imul
pop
movsl
xchg
out
je
ret
xor
clc
rclb
in
adc
in
xchg
mov
inc
and
xor
mov
fwait
stos
xor
test
and
enter
mov
mov
sbb
pop
mov
hlt
sub
repnz
add
adc
jmp
mov
dec
or
push
inc
inc
test
cmc
ja
int3
test
ds
pop
fiadds
repz
add
adc
imulb
adc
cli
out
ret
add
xchg
stc
mov
lcall
add
pop
jmp
mov
adc
jmp
push
sbb
sub
xchg
idiv
arpl
dec
pop
and
lret
push
and
sysexit
jp
and
or
xor
stc
cmpsl
ret
push
sub
lret
mov
lret
xorb
int3
mov
mov
or
inc
shlb
ds
add
xchg
sahf
xor
pop
out
jb
sarl
dec
testl
addl
jb,pn
pusha
mov
inc
into
inc
ljmp
sahf
pop
sbb
push
push
outsl
and
or
mov
mov
into
arpl
pushf
cmp
xor
push
shl
rolb
cmp
xchg
imul
cmp
dec
jns
ds
in
addr16
rcrl
xor
or
std
movsl
and
jge
add
loopne
mov
xchg
mov
filds
jae
jo
ret
test
ljmp
fs
rcll
enter
or
push
or
sbb
and
pop
movsl
shrb
inc
push
push
add
out
ljmp
bound
test
xchg
add
scas
dec
rcrl
push
shr
arpl
xchg
mov
sti
inc
in
xchg
jb
aas
mov
roll
sbb
jmp
dec
add
and
sub
push
cmpsl
out
push
clc
nop
arpl
aaa
lcall
add
or
cld
sbb
xor
sub
aaa
jne
sbb
or
movsl
and
roll
push
adc
xchg
jo
push
loope
push
inc
loopne
ret
sbb
or
jb
pop
mov
mov
or
js
sub
cmp
add
mov
in
and
mov
sub
inc
addr16
popf
incl
fcmovnb
xchg
scas
std
mov
sbb
jle
inc
pop
cmp
cmp
pop
js
add
mov
sarb
aam
cwtl
shll
sarb
inc
add
addr16
fcom
inc
sbb
dec
add
mov
lock
jbe
add
in
add
cmp
xchg
jbe
add
sbb
add
stos
mov
add
mov
aaa
add
xor
jmp
sub
jle
cs
and
sub
bound
int3
add
insl
xchg
dec
shrb
out
testb
clc
data16
add
mov
and
add
jo
xchg
inc
jo
add
and
out
jmp
add
imul
xchg
mov
add
lea
pop
rcrl
in
add
inc
inc
cmp
cmp
inc
aaa
and
adc
or
mov
pop
add
mov
and
divb
pop
hlt
cmp
out
mov
aaa
mov
mov
sbb
pushf
mov
enter
shl
jne
jmp
push
or
stos
add
pop
and
xchg
test
xchg
sarb
pop
leave
mov
adc
int3
and
loope
or
into
push
adcb
inc
xchg
int
pop
es
andl
mov
push
stos
push
cs
push
jno
sub
push
insl
cmp
mov
sbb
jns
mov
test
or
int3
sbb
lcall
mov
add
aad
or
and
add
inc
ja
add
cwtl
lock
add
movsb
cmp
adc
add
test
fisubrl
sbbl
sbb
add
daa
fwait
test
inc
shl
dec
xchg
add
push
lcall
std
test
add
adc
arpl
sti
cmpl
leave
sub
add
push
and
andb
imul
jl
or
pop
cmp
sub
xor
sbb
add
or
add
add
arpl
int
mov
scas
sbb
and
xchg
or
loopne
cwtl
mov
in
mov
xchg
xchg
rep
add
mov
dec
pop
pusha
add
xchg
pop
cmp
mov
into
jmp
sub
in
loopne
mov
cmp
lea
jecxz
add
cmp
or
fists
incl
mov
test
pop
in
jae
add
popa
xchg
sub
add
inc
aam
daa
idiv
in
mov
xor
fisubl
push
adc
push
lret
outsb
dec
xor
and
jns
and
gs
sbb
out
aam
ds
je
pop
jg
loopne
or
cli
shrb
jge
mov
loopne
mov
aad
add
sbb
sbbl
push
insl
loope
jb
sub
pop
aas
andb
mov
lcall
test
jne
xor
xchg
add
test
popa
inc
jl
repnz
cmp
jno
js
push
and
mov
add
aaa
dec
cs
ss
xchg
fcoml
loopne
cwtl
pop
jmp
jne
and
test
xor
jo
test
jno
jo
movsl
mov
add
inc
jo
fs
ljmp
add
les
jle
ds
das
fcoml
mov
jbe
js
psubusw
lock
cmp
xchg
sub
add
lods
or
in
inc
fadds
jo
inc
xchg
pop
orb
scas
and
inc
xchg
and
and
cmc
test
test
leave
push
lods
cld
mov
jne
aas
addr16
add
stos
jge
pusha
push
and
jae
aad
jbe
scas
call
add
iret
and
xorb
mov
mov
mov
jge
fstl
add
fcomps
inc
icebp
and
cmc
or
jmp
in
adc
sbb
es
jns
add
rcrl
into
fsubrl
in
es
sub
dec
out
xchg
dec
xchg
jb
gs
adc
pop
mov
clc
add
push
or
pop
cmc
cld
hlt
sub
dec
clc
cmpsl
sbb
mov
dec
js,pt
pop
push
dec
sbb
ss
inc
enter
add
loope
inc
push
lds
cmp
adc
aaa
mov
cmpl
lret
rcrb
mov
fdivs
mulb
hlt
fnstsw
sbb
mov
lds
loop
adc
push
mov
sbb
hlt
cmp
pop
pop
push
dec
mov
out
xchg
add
dec
loop
inc
subl
add
cwtl
adc
and
mov
xchg
mov
lahf
mov
orb
ds
in
lcall
lds
pop
push
or
pushf
cs
push
cmp
jmp
mov
pop
rcl
int3
scas
add
jb
cltd
repnz
mov
mov
adc
push
add
cmp
in
cmp
loop
cmpsb
loopne
outsb
out
cmp
push
add
sbb
cli
inc
neg
pop
test
mov
xlat
pusha
cli
out
add
dec
mov
pop
add
cmp
mov
and
add
jmp
clc
add
push
scas
add
cmp
fld
stos
xorb
sahf
push
dec
ret
or
ss
jne
out
jl
pop
add
mov
repz
add
pop
or
add
xchg
inc
mov
cmp
jle
xchg
push
imul
jmp
sar
and
mov
mov
sbb
push
cmp
inc
lcall
aam
test
dec
xchg
testl
clc
add
inc
pop
add
cmp
rclb
xchg
and
shrb
psrad
or
inc
jae
sub
pop
inc
orl
mov
lods
ret
xor
repnz
insl
push
mov
xchg
pop
push
test
sbb
push
push
cmpl
sub
insl
pop
add
or
aas
jo
mov
add
cltd
test
xchg
pop
in
xor
adc
jle
add
in
das
insb
cwtl
fmull
add
sbb
or
bound
and
add
fisttpll
fnstenv
lret
add
pop
jns
in
orb
pop
ret
cmpb
adc
mov
mov
repz
dec
cmpb
lcall
hlt
and
mov
stos
pushf
mov
push
mov
mov
dec
out
jo
aam
cmp
dec
add
call
call
test
sbb
mov
xchg
sbb
and
add
inc
imul
out
push
mov
and
push
mov
add
xchg
adc
push
sub
jns
dec
dec
add
fwait
pop
sub
outsb
xrelease
mov
mov
dec
mov
push
leave
in
shrb
or
ljmp
add
mov
or
add
imul
aad
les
int3
popa
pop
mov
lret
bound
adc
pop
enter
add
mov
cli
add
mov
rcrb
daa
add
mov
insl
push
add
or
push
add
sbb
mov
add
push
lock
push
cs
jecxz
add
fs
incb
jns
fadd
mov
cmp
dec
jb
adc
out
pusha
push
dec
add
push
mov
add
js
ljmp
add
push
testl
in
aad
lret
add
xchg
mov
or
add
sti
sar
push
xor
js
add
adc
ljmp
add
and
jg
lret
add
fwait
mov
lahf
add
mov
sbb
roll
mov
idivl
push
ljmp
inc
es
add
popa
shll
mov
mov
push
cmp
add
dec
or
jle
pop
test
addr16
jae
add
or
mov
ja
data16
or
rorl
xlat
test
cmp
add
mov
cmp
and
add
int3
add
sbb
add
push
leave
jl
data16
dec
sti
add
sub
lret
jp
xor
in
jns
cmc
push
add
cmp
inc
pop
mov
jl
sbb
rorl
sub
add
or
dec
dec
movsl
dec
fimuls
xchg
cmp
in
cmp
add
outsb
mov
adc
push
xor
roll
and
mov
add
das
jno
xor
mov
rol
and
std
sbb
push
sub
mov
insb
xor
nop
sbbl
sbb
sub
xor
icebp
cmpsl
inc
mov
add
add
cmpsb
mov
xor
fistpl
ret
pop
rol
xchg
inc
add
test
aad
add
mov
mov
xchg
mov
dec
mov
jp
or
pop
cmc
mov
in
es
mov
pop
adc
mov
cmp
and
jb
int
cmp
dec
in
or
sub
push
mov
test
mov
push
add
push
and
loop
in
divl
lahf
jp
or
ror
sub
pushf
jbe
add
xchg
enter
cmp
and
add
adc
sub
pusha
stos
addr16
les
dec
scas
dec
outsb
or
enter
add
aaa
rorb
dec
add
test
cmpl
lcall
js
jecxz
loopne
ret
add
shlb
imul
sub
add
cmp
jae
pusha
aaa
xchg
push
jp
out
or
lock
inc
loopne
sub
movsb
sbb
and
test
fldcw
fiadds
test
pop
mov
fidivl
inc
xchg
lcall
or
xchg
sti
push
popf
push
subl
adc
stos
aad
adc
jo
fists
lods
dec
ljmp
stos
sub
jmp
add
stc
inc
fmuls
adc
out
in
data16
xor
mov
scas
mov
mov
mov
add
or
mov
lcall
lock
cmp
sub
mov
mov
lods
add
add
or
das
push
pop
pop
and
add
lods
jae
stos
aam
cmp
fs
and
pop
cmp
enter
sub
mov
xchg
xlat
jae
sti
jmp
jl
add
add
dec
imul
push
stos
add
pop
ret
fs
jbe
pop
lds
enter
shlb
popl
jb
cmpsb
rclb
stc
add
mov
bound
add
pop
push
subb
mov
gs
lahf
mov
test
or
stos
sub
xor
jg
push
cld
sub
xchg
mov
dec
mov
sub
or
sbb
sub
lahf
out
imul
loop
shlb
jns
mov
mov
fs
lret
mov
push
push
scas
rcrb
xor
loopne
in
inc
add
and
fucomip
lret
hlt
and
addr16
add
imul
mov
push
in
add
sub
add
mov
repnz
sbb
rcll
add
outsl
cs
sub
cmp
mov
inc
cli
or
rolb
mov
test
jne
inc
in
xor
sub
cmc
movsl
mov
sbb
jb
and
pop
ret
inc
stc
lret
out
repnz
cmp
dec
ficoml
jnp
in
pop
add
loopne
daa
sahf
mov
add
mov
dec
cmp
addl
add
pop
mov
ja
push
pop
nop
clc
add
add
or
lret
mov
push
dec
orl
push
push
adc
fistps
sarl
add
sub
sti
adc
push
mov
fdivs
add
mov
decb
mov
faddl
aaa
xor
xchg
sub
xlat
mov
pusha
mov
in
outsb
iret
in
loop
add
fimull
mov
ljmp
nop
scas
movsb
push
loopne
jno
pusha
and
outsb
in
add
sbb
add
imulb
add
sbb
es
aad
mov
pop
in
pop
loopne
fwait
cs
loopne
and
pusha
add
inc
jo
out
test
xor
add
jne
or
jae
dec
ja
push
sti
pop
test
add
jno
push
add
mov
fstpl
mov
test
cmp
dec
sar
inc
add
inc
xchg
add
mov
jno
xlat
pop
pop
xor
sbb
push
popf
cs
push
or
xlat
jecxz
dec
cmpsb
leave
jne
addr16
pop
add
pop
jns
scas
jnp
push
add
sbb
stos
pop
inc
pop
add
sub
add
or
call
inc
cmp
mov
pusha
icebp
mov
out
cld
or
cs
ret
movsl
or
push
xchg
stos
out
adc
add
dec
pcmpeqb
daa
movsl
scas
jnp
pop
jmp
icebp
xchg
dec
adc
jns
cmp
inc
cmc
push
and
js
shl
dec
jbe
sub
mov
iret
in
cmpsl
push
cs
cwtl
push
sbb
dec
lods
or
adc
movsl
mov
jbe
stos
je,pn
or
xlat
loopne
rcrb
mov
add
ret
push
push
jmp
add
cmpsb
jl
hlt
mulb
shll
cmp
add
push
pop
push
loope
ljmp
nop
adc
inc
add
in
fsubs
add
push
jle
pop
outsb
mov
add
inc
push
jno
shll
add
jecxz
dec
out
rolb
push
cmp
add
scas
sbb
call
push
repnz
adc
jmp
jns
add
cld
mov
lret
sub
loopne
shlb
sbb
or
adcb
add
push
das
enter
test
pop
fmull
insl
and
jp
mov
cmp
jns
scas
pop
test
icebp
jge
pop
xchg
xchg
out
push
sbb
add
movsb
js
add
dec
xchg
xor
sub
inc
adcb
stos
mov
push
push
inc
jl
jg
stos
cwtl
shl
ja
cmp
int3
outsl
outsb
or
cmp
jle
inc
daa
jb
xorl
pop
pop
js
nop
daa
add
lahf
dec
mov
push
xor
cmp
jbe
xlat
adc
mov
cmpsb
in
in
mov
repz
sub
push
xchg
dec
sbb
lahf
add
pop
or
imul
aad
adc
push
ret
int3
fs
sbb
xchg
cmp
add
aad
xchg
add
int3
pop
fcoms
add
orl
pop
adc
stos
add
test
push
into
bound
ss
jle
outsb
adc
add
adc
jo
inc
add
punpckhwd
lret
fisubrs
jecxz
or
rolb
push
pusha
ret
outsl
or
mov
xor
xorl
loopne
out
inc
add
bound
stc
repnz
js
jne
cmp
je
stos
int
inc
jns
enter
cmp
repnz
cwtl
mov
or
inc
aaa
inc
inc
cli
or
test
jne
and
jl
mov
add
and
or
mov
adc
mov
jno
and
inc
jbe
add
enter
imul
add
add
test
push
lods
aad
add
push
cmpl
lret
test
pop
loopne
movb
cmpsl
cli
add
clc
xchg
push
fisubrs
push
inc
fiadds
push
mov
fwait
cmpb
add
lcall
lahf
pop
dec
jns
adc
add
mov
cmp
in
daa
sub
iret
mov
repz
shlb
and
andb
mov
mov
loop
pop
inc
add
shlb
or
enter
call
add
xchg
and
pop
pop
aas
add
jmp
jge
sub
pusha
pop
fs
je
mov
adc
inc
pop
enter
stos
or
sbb
xor
mov
add
xchg
adc
lahf
paddq
xor
and
jnp
repz
subb
fwait
lods
pop
or
cmp
add
in
cwtl
cmp
cmp
jmp
popa
loop
pop
add
cmpsl
lea
data16
fwait
dec
add
inc
xchg
mov
aad
dec
test
int
push
add
mov
les
ss
cld
scas
dec
out
or
xchg
faddl
call
inc
std
jne
fldl
iret
sti
dec
cmp
push
xchg
insl
sar
add
xor
cs
lret
shlb
pusha
xchg
xor
or
adc
push
jne
push
fidivl
pushf
mov
cs
call
rcrl
push
mov
das
sar
jecxz
add
into
add
rep
or
xor
adc
cmp
repz
mov
push
sbb
add
scas
outsb
pop
dec
sub
roll
sub
sbb
add
rcrb
in
inc
jl
pop
cmp
push
rcrb
xlat
add
mov
es
lea
adc
fsubrl
push
clc
outsb
int3
std
sahf
out
pushf
jbe
pusha
xor
sarl
lock
mov
cmpb
clc
adc
mov
or
and
stos
je
add
mov
ret
rolb
xor
leave
cli
push
push
repnz
pop
add
or
xchg
cmovb
jo
inc
xor
popa
add
and
jle
out
dec
add
jo
jecxz
fcoms
out
add
inc
loopne
fsts
add
inc
daa
fiadds
ret
push
or
sub
cmp
outsl
and
bound
flds
sub
add
mov
sub
add
xlat
add
sub
pop
jmp
shl
and
out
fmul
mov
xchg
add
jge
pop
add
lea
pop
pop
add
mov
cmp
stc
dec
icebp
add
sbbl
xchg
sbb
hlt
pop
mov
xor
insb
jmp
pop
fmuls
in
sbb
mov
or
fldt
insl
or
cmp
adc
cmp
and
movb
loopne
mov
pop
subl
push
lret
ret
pop
jle
push
in
data16
mov
fwait
dec
pusha
and
xor
adc
in
push
dec
cld
int3
add
cmp
pop
loopne
mov
stos
inc
movsl
push
ljmp
inc
inc
jne
pop
add
mov
cmp
xor
add
mov
mov
pop
and
cltd
in
cmpsb
sahf
shlb
add
push
pop
xchg
mov
fldl2e
sbb
sarl
mov
xor
cmp
mov
out
ds
hlt
or
adc
fwait
test
jb
sbb
lds
addr16
ficoms
xchg
and
inc
xor
and
mov
jl
dec
mov
adc
inc
int3
xlat
lods
je
add
cmp
les
and
adc
es
repz
push
shrb
inc
mov
xchg
cld
mov
nop
pusha
adc
jg
sete
jnp
mov
add
ss
hlt
add
mov
mov
add
in
fsubr
adc
hlt
add
cmp
mov
sbb
pusha
cmp
shr
add
int3
repnz
cmp
incl
sti
fwait
lret
popl
sub
add
push
adc
aas
inc
fstpt
out
add
lret
fwait
pop
adc
cs
mov
movsl
or
or
mov
inc
cmc
cmp
je
xchg
adc
mov
lea
adc
push
in
add
mov
loopne
je
xor
fs
adc
stc
mov
cmp
fnstsw
and
add
in
sti
mov
mov
ret
push
data16
lret
shrb
les
cmp
push
repnz
aas
cmpsb
scas
xchg
and
push
int3
add
outsl
add
fwait
hlt
adc
cltd
inc
lock
add
mov
and
jl
rorl
add
dec
decb
fdivp
add
xchg
inc
lret
sbb
insb
pop
push
lea
push
cmp
sti
int3
test
js
lock
pop
or
pop
call
pop
and
add
int3
dec
rolb
repnz
hlt
ret
jno
stos
test
jg
sbb
mov
mov
add
imul
add
xchg
mov
js
xorb
push
pop
xor
and
out
arpl
push
pop
xchg
pop
nop
addb
daa
dec
sbb
inc
pusha
sbb
adc
mov
lock
or
xchg
idivb
cld
sbb
pop
mov
adcb
inc
enter
pusha
fcompl
jge
in
sti
or
call
jbe
add
test
fcmove
mov
sub
sahf
testl
es
sti
data16
lods
add
xlat
lahf
hlt
adcl
mov
adc
ret
jne
fwait
int
test
cmp
cwtl
mov
dec
dec
fxch
test
and
sbbb
ja
pop
sbb
adc
pop
xlat
dec
add
dec
movb
pusha
mov
push
in
cld
ja
add
or
stc
push
dec
jbe
clc
add
dec
mov
mov
sbbl
sbbb
lahf
add
imul
jno
cmp
outsl
adc
xor
mov
sbbl
push
sbb
out
push
xchg
add
enter
mov
xlat
add
or
and
imul
mov
ret
cmp
cmp
decb
or
lea
jno
testl
imul
mov
sbb
or
cmpsl
add
sbb
and
stos
xchg
add
jmp
dec
inc
int3
shlb
add
adc
adc
push
jne
ror
adcb
add
fdivp
jae
adc
jle
dec
dec
test
cmp
inc
sbb
push
mov
inc
add
sbb
mov
dec
pop
cmp
mov
add
pushf
lock
cmp
push
add
aaa
js
and
ljmp
pusha
push
push
lcall
and
jmp
stc
cmp
lock
and
sub
arpl
xchg
cmp
xchg
jg
sub
iret
nop
dec
test
les
adc
push
je
cmp
fdivrp
and
push
in
lret
pop
cmp
cmc
xchg
rorb
mov
mov
pop
iret
add
cmp
js
add
inc
jmp
jno
cmp
dec
adc
dec
lea
push
shr
lret
xor
mov
orb
push
mov
add
sbb
test
fistpll
xor
call
pop
add
das
orl
xor
xchg
pop
inc
cmc
jo
add
adc
in
lds
fs
lahf
xor
push
and
add
shlb
addr16
cmpb
faddp
test
add
pushf
mov
jns
loopne
push
mov
adc
dec
outsb
xorb
or
add
mov
inc
dec
in
cmpsl
movsl
jp
aam
dec
push
adc
call
xchg
out
mov
add
add
push
add
je
cmpb
jp
xor
lods
sbb
insl
sti
popa
bound
cltd
sbb
jb
xchg
repnz
mov
pop
in
jne
sarl
fisubrs
xchg
das
xor
clc
sbb
mov
sbb
mov
mull
fs
aam
add
add
jl
imul
lock
sbb
cmc
jae
repnz
xchg
hlt
mov
lock
add
imul
setae
repnz
pop
jge
add
dec
jae
add
inc
xchg
stc
fneni(8087
add
pop
push
sbb
rcrl
xor
aad
xchg
sbb
pushf
rolb
xor
xchg
roll
push
sbb
fisubs
mov
dec
and
xchg
add
ror
outsl
cli
out
add
xchg
sahf
mov
xchg
adc
inc
loopne
repz
xchg
out
or
mov
add
xchg
insb
mov
movsb
push
mov
das
cmp
cmp
shl
sti
idivl
cmpsl
and
pop
sahf
pusha
sbb
push
popa
clc
stos
xchg
pop
push
push
xchg
nop
dec
scas
out
lret
mov
jmp
push
nop
repnz
daa
test
outsl
bound
mov
jg
pusha
fneni(8087
cs
push
push
es
add
out
popa
add
mov
add
xchg
sbb
fnstenv
outsb
xor
lods
nop
mov
mov
fnsave
pop
movsb
xchg
and
stc
adc
cmpsl
les
push
rolb
out
jb
mov
pop
fistps
jmp
clc
lds
es
adc
sbb
jns
lock
lods
push
sub
pusha
andb
pop
hlt
cmp
cmp
movl
cmpsb
inc
add
dec
int
enter
mov
sub
add
enter
mov
lods
jp
aad
cwtl
pop
arpl
out
mov
inc
add
out
aad
dec
cwtl
xor
push
sub
out
fiaddl
nop
fadds
outsb
jecxz
sarl
cmp
jno
popa
jbe
jmp
add
clc
ficoml
div
cmp
or
inc
pop
ret
enter
jae
jle
scas
sbb
scas
in
add
and
fdivl
clc
mov
pop
movsl
in
xor
add
iret
hlt
mov
adc
add
push
xor
incl
jmp
outsl
mov
pop
jno
ret
outsb
mov
cmpsl
repz
loopne
xchg
add
xor
mov
add
mov
arpl
shll
xor
pop
add
and
jne
or
or
bound
jb
loop
add
mov
adc
stc
daa
pop
stos
repz
rorb
cmp
les
add
int3
cvttps2pi
imul
in
mov
roll
and
push
icebp
add
push
cmp
xlat
scas
jns
inc
jnp
rcl
sub
or
inc
sub
mov
mov
ror
add
sub
imul
divb
fcoml
cld
add
pop
repz
adc
stc
enter
dec
lods
cmp
cmp
jmp
jb
xchg
mov
sbb
jne
sub
std
popf
add
sbb
pop
jp
lock
adc
pop
cltd
shl
loopne
xor
add
add
call
aas
push
jb
add
and
jl
in
cmp
add
jmp
xchg
out
cwtl
jecxz
lcall
dec
loop
aas
lret
cwtl
fmuls
jbe
jecxz
lock
lods
or
leave
sti
xorb
mov
mov
imul
add
xor
in
rsqrtps
add
push
fstpt
jbe
cwtl
or
xor
add
inc
jge
addr16
jns
arpl
in
and
mov
icebp
fcmovne
add
mov
pop
jg
or
mov
add
icebp
dec
mov
push
add
into
test
aas
add
xor
mov
popf
add
movsb
sub
push
sbb
xchg
mov
shrb
in
sti
and
aad
fsubp
pop
and
dec
lods
lcall
das
rcl
jg
aam
cmp
adc
push
aas
js
dec
mov
dec
mov
sbb
sub
inc
nop
in
clc
xor
std
adc
enter
lds
fsubs
inc
mov
mov
xor
sbb
std
mov
push
repz
pop
add
jb
add
rol
lods
push
add
out
iret
fdivrs
push
scas
push
cld
sbb
and
cmpsb
pop
insl
mov
test
adc
and
shll
addb
mov
xacquire
sbb
in
cmpb
shlb
push
jno
mov
mov
cmp
jp
jns
xor
pop
add
or
add
mov
mov
and
dec
sbb
sbbl
in
das
adc
lock
aad
mov
push
daa
jb
insb
pop
sbb
pop
jno
insb
xor
mov
mov
xchg
and
outsb
dec
inc
xor
stos
fwait
pop
jnp
nop
dec
sub
lret
pop
enter
adc
sbb
sbb
nop
and
fsubrl
subl
scas
and
jmp
in
push
cmp
test
adc
dec
pushf
cs
xor
add
jmp
lcall
dec
adc
add
aaa
xor
mov
and
add
push
mov
sarb
sti
in
movsl
fidivrs
push
add
xor
cmp
mov
add
adc
jne
pop
mov
adc
shl
xor
xchg
mov
test
adc
add
and
sbb
xchg
mov
mov
xor
loop
pop
aam
lock
cmp
pusha
mov
or
repz
pusha
pushf
std
and
fmuls
push
mov
sub
pop
push
dec
cmp
xor
pop
dec
cmp
cwtl
andb
xchg
mov
pcmpgtd
gs
jb
loopne
and
filds
jae
rcrb
or
inc
xor
push
test
rcll
imul
mov
fchs
das
in
scas
loopne
xchg
or
lea
adc
add
in
add
out
xor
pushf
lods
mov
jns
popf
sahf
insl
int
fmull
inc
in
mov
cltd
mov
jne
ret
cmp
out
lods
cwtl
shlb
jbe
push
lea
pusha
cmpsl
jl
mov
add
inc
mov
sub
add
cmp
add
es
jno
xorb
xchg
cmp
or
or
sahf
ret
pop
xchg
mov
into
xlat
sub
ret
js
cmp
mov
mov
push
dec
push
movsb
pop
cmp
cmp
mov
inc
scas
push
and
dec
pop
xchg
push
mov
mov
dec
dec
jae
mull
test
xchg
xchg
mov
add
mov
and
sbb
out
lock
pop
mov
jecxz
fsubs
loopnew
xchg
add
pop
mov
pop
es
mov
add
les
jg
or
fimull
mov
adc
xchg
shr
pusha
fwait
add
out
xlat
pop
add
push
test
mov
adc
movsl
mov
xchg
mov
sub
push
add
popf
fcmovnbe
mov
add
sub
popa
mov
adc
mov
addr16
repnz
add
dec
mov
mov
imul
xchg
sub
mov
dec
lock
lods
cld
and
repz
fadds
gs
lds
insl
xor
das
cwtl
adc
push
push
roll
add
mov
add
adc
incb
dec
inc
jne
push
pop
lods
add
popf
xchg
nop
daa
pop
mov
adc
add
pusha
in
add
loope
and
aas
mov
rcrb
pushf
int
cmp
mov
add
fists
add
mov
mov
push
out
mov
movsb
shl
add
sbb
mov
mov
insl
shrl
push
rcrb
xorb
sub
ljmp
push
mov
test
and
jo
sbb
xor
mov
mov
loope
int
aam
cmp
add
dec
lahf
inc
fisubrl
sub
add
ret
in
push
ja
sbb
pop
push
repnz
push
push
nop
mov
out
int
lock
or
fwait
pushf
xor
xchg
pop
pop
add
jns
mov
movsl
add
mov
inc
add
fcomps
jmp
lock
jbe
sub
inc
rcrb
add
jnp
cld
inc
out
dec
pop
or
cli
pusha
jl
mov
sbb
or
adc
dec
adc
adc
push
out
mov
in
iret
mov
and
pusha
cmp
add
ds
dec
mov
int
jae
test
add
fimull
cmp
adc
xchg
sbb
imul
in
lock
dec
xor
mov
adc
push
and
inc
sub
sti
out
cli
fs
bound
add
icebp
add
out
xor
mov
adc
dec
cmp
xorb
mov
scas
loop
pop
xlat
repz
add
cmp
add
mov
sub
cmp
xchg
int
adc
mov
jmp
mov
or
xchg
or
cwtl
push
mov
les
dec
inc
enter
inc
push
pop
popl
in
dec
gs
out
push
adc
mov
xorb
pop
nop
dec
xchg
repz
cwtl
dec
in
out
push
push
sbb
jns
ss
fstps
ret
adc
sahf
add
mov
cli
add
aad
inc
pextrw
addr16
std
popf
shll
dec
stos
in
sub
test
test
add
mov
pop
cmp
enter
add
adc
and
cmp
jo
lock
push
mov
imul
mov
aad
movsb
ds
lods
rorb
aas
and
aas
sbb
sbb
pop
xchg
pop
and
pushf
insl
or
jge
add
cmp
in
cmp
out
popa
dec
outsl
jnp
faddl
and
jb
add
and
push
data16
push
shr
jmp
cmp
addl
add
adc
sbb
add
cmp
and
pop
add
mov
and
mov
cmp
out
sub
dec
add
pop
js
aam
add
and
jae
in
lock
popf
fcoms
lock
dec
adc
rcl
fdivrs
out
adc
mov
sub
lods
add
inc
push
add
sbb
cmp
test
xlat
clc
aam
inc
pushf
adc
xrelease
or
imul
add
lods
fadds
xor
mov
adc
dec
mov
push
dec
xchg
pop
add
cwtl
inc
fidivrl
fbstp
cmp
cmp
xorl
mov
sbb
push
jp
mov
pushf
push
loopne
sbb
mov
sub
ds
xor
and
cmp
and
add
add
lcall
sub
lock
daa
ficoms
push
or
xor
rolb
in
insb
and
or
pop
jp
aas
es
mov
mov
ljmp
mov
fidivrl
movsl
xchg
cmp
dec
adc
mov
inc
and
icebp
scas
push
mov
stc
or
out
leave
into
mov
mov
lahf
sarl
mov
mov
add
mov
dec
cmpsb
push
std
inc
stc
inc
lods
jnp
jnp
shll
ss
add
mov
xor
jnp
push
inc
out
adc
cmp
add
sub
push
clc
test
push
add
mov
sbb
push
jg
lea
dec
jnp
jmp
cmp
and
jp
sub
or
arpl
stc
lock
push
lahf
aad
jb
nop
add
mov
scas
adc
outsl
or
mov
mov
xchg
xchg
cmp
movsl
jb
sub
leave
aas
add
xchg
cmp
divb
add
gs
mov
mov
ljmp
jg
loop
add
push
shll
mov
push
mov
rorl
jmp
jmp
adc
push
add
nop
les
push
pop
dec
cmp
loopne
and
cmp
loopne
add
nop
les
inc
mov
mov
xor
adc
movsl
sbb
pusha
aam
jle
leave
add
imul
rorb
pop
test
adc
pop
dec
clc
inc
mov
pop
je
leave
xor
xchg
in
add
or
outsl
xchg
sbb
lods
mov
out
xchg
add
sub
fildl
in
xor
jo
add
mov
adc
sbb
shrb
jbe
dec
in
sub
inc
daa
and
dec
add
mov
pusha
mov
daa
paddusw
dec
lret
je
pop
and
in
inc
xchg
aas
inc
lea
fadds
mov
xor
inc
xor
or
cltd
add
xor
mov
mov
test
das
xchg
xchg
hlt
add
outsb
in
dec
mov
jae
xor
inc
add
add
add
sub
aam
add
mov
insl
jno
add
scas
rcrb
out
add
and
repz
jmp
mov
inc
cltd
and
outsl
icebp
ret
add
xor
mov
add
std
jmp
cmp
adc
dec
sub
fcmovne
out
cmp
add
mov
dec
inc
fs
into
cmp
dec
ret
insb
pop
add
nop
test
mov
add
add
sbb
jg
mov
xor
mov
enter
lahf
sbbl
out
push
add
sbb
pop
mov
add
js
inc
sub
mov
sarb
enter
orb
add
sub
push
sub
push
es
mov
lcall
adc
js
add
inc
movsl
dec
je
sbb
scas
ror
add
pop
dec
ss
je
xor
fimuls
sub
lahf
lret
js
add
fiaddl
aam
push
cld
repz
add
and
lock
lock
adc
cltd
negl
cmp
push
push
sub
fdivrs
jge
pop
ja
sub
jae
dec
pop
jmp
mov
mulb
xor
add
fiaddl
sbb
add
inc
pushf
jbe
mov
or
or
fdivs
xor
lock
xchg
cmpsl
cmp
xchg
sbb
and
mov
add
xchg
scas
daa
inc
hlt
inc
and
mov
cmp
imul
or
jl
push
dec
dec
movsl
mov
aam
incl
jg
popa
inc
sub
mov
pcmpgtd
and
dec
add
inc
xor
pop
xchg
cmp
mov
repnz
pop
inc
ja
jo
and
inc
add
cmpsl
sahf
loopne
ljmp
int
pop
mov
repnz
push
jmp
mov
jb
or
lret
mov
and
pop
clc
push
mov
adc
mov
test
add
and
fs
mov
clc
jl
add
sbb
sub
nop
notl
inc
incl
jbe
ds
loope
xchg
stos
add
dec
sub
push
add
addb
cmp
cmpsl
sub
inc
aaa
mov
ret
call
out
shll
ljmp
out
cwtl
mov
pusha
daa
push
ds
sarb
and
push
mov
adcb
mov
xor
sub
xchg
add
popf
push
adc
out
xchg
and
sbb
enter
cli
lds
add
call
repz
pushf
adc
add
add
pop
push
inc
test
sahf
lods
stos
sub
cmpsl
mov
push
add
pop
mov
or
add
sub
and
sub
and
arpl
cmp
cmp
rcrb
inc
xor
call
sbb
xor
imul
add
popf
add
pushf
add
dec
inc
loopne
inc
add
into
rclb
push
xchg
inc
pop
and
fdivl
daa
movsb
jbe
adc
add
sbb
add
cmp
sbb
inc
pop
inc
ljmp
movsl
add
jecxz
or
loope
pushf
adc
loope
stos
btr
pop
pop
and
std
bound
inc
lea
add
shrl
iret
aad
sub
stc
add
rolb
and
mov
sub
xchg
pop
add
mov
push
pop
add
pusha
in
xchg
add
das
sti
ja
mov
mov
cmp
dec
das
loope
out
outsl
shrd
inc
pop
xchg
adc
call
pop
sahf
pusha
mov
adc
loope
push
es
lods
add
loopne
lcall
fsubrs
lret
mov
bound
add
cli
cld
outsb
push
dec
les
loop
cmp
popf
dec
pop
into
nop
aas
add
sbb
test
jne
push
int3
jecxz
pop
mov
inc
push
mov
cmpsl
add
dec
mov
outsl
stos
incb
sahf
adc
pusha
inc
fnstcw
xor
insb
xchg
xlat
mov
and
call
sbb
pop
fistpl
mov
adc
cmp
cmc
subb
into
cltd
mov
pop
fsubp
sbb
and
lret
das
inc
shl
jne
add
clc
out
sti
lret
test
add
and
gs
add
mov
add
push
pop
and
xchg
mov
cld
jo
sti
rcll
push
inc
sub
and
xor
outsl
clc
repz
cli
add
mov
aas
xor
sbb
adc
loopne
push
add
xor
jl
cmp
and
push
test
negb
jg
mov
jns
xor
movsl
call
xor
hlt
sub
add
push
and
and
popf
sub
ja
add
loopne
je
fildll
adc
jle
cmp
xchg
add
movswl
aas
mov
push
jb
imul
add
aas
push
push
mov
xchg
lahf
clc
outsl
pop
xor
adc
call
lea
movsb
loopne
xchg
xor
fdivl
push
push
andb
out
rcll
mov
cmp
mov
mov
and
div
xor
mov
mov
loope
adc
and
daa
and
in
inc
adc
sub
sbb
loope
adc
mov
aas
dec
inc
mov
and
push
and
xor
xchg
and
adcl
jns
adc
ret
insl
adc
leave
cltd
mov
jns
fs
mov
cmc
mov
add
mov
fs
add
xor
out
push
push
xlat
cwtl
jno
dec
rcr
adc
jne
mov
mov
and
into
xchg
dec
popa
aad
lods
adc
mov
add
in
and
out
add
sub
add
or
adc
bound
testb
and
addr16
clc
xor
push
and
dec
hlt
sub
ja
insl
add
jbe
mov
inc
cmpsl
mov
push
je
ret
les
leave
push
mov
fs
cmp
mov
fdivrp
jecxz
movsb
add
das
push
xor
pop
dec
adc
pop
dec
jmp
add
push
sbb
bound
std
jns
shrb
orl
nop
xor
bound
test
cmp
xor
cmpb
rcrb
add
fwait
xor
bnd
ja
adc
pop
add
xlat
xchg
mov
or
into
sub
out
jmp
and
lcall
mov
add
jecxz
repz
add
adc
ja
add
push
test
xchg
inc
jns
pushf
movw
cmp
nop
dec
mov
out
insb
notl
sbb
push
pop
fsubrl
push
push
aas
push
add
mov
jo
cmpsl
add
add
rorb
jmp
inc
push
xchg
orl
insl
and
mov
sbb
mov
mov
xchg
add
lods
mov
add
mov
sbb
jle
mov
aad
mov
mov
jmp
or
das
push
aaa
in
fmul
jae
add
add
jnp
cmp
jbe
jne
rcr
hlt
mov
add
in
sub
adc
sbb
jae
leave
sub
mov
adc
jmp
rorl
into
sbb
jne
push
loope
cmp
cltd
adc
cmpb
fcmovbe
mov
add
or
leave
enter
dec
das
adc
pusha
mov
pop
cmp
out
and
add
js
add
in
pop
pushf
add
insb
jle
add
repz
daa
mov
jle
adc
mov
pop
in
popa
call
mov
push
and
fldl
pusha
or
lock
hlt
femms
sub
cmpsl
sbb
ljmp
xor
jno
mov
fisubrl
mov
fwait
loopne
add
test
push
xor
inc
int3
add
inc
inc
sub
aad
xor
dec
add
imul
repz
inc
cmp
add
sbb
loop
dec
loope
orl
push
lods
sbbb
xor
cmp
jp
inc
movsl
and
add
mov
test
in
mov
and
or
jg
test
cli
loope
mov
jae
nop
cmp
add
lret
out
call
mov
xchg
jae
push
mov
psubsb
add
enter
insl
iret
adc
or
call
cmp
xchg
sub
add
and
sarb
and
or
imul
push
in
adc
add
xchg
mov
daa
mov
xchg
add
sbbb
and
or
js
xor
adc
pushf
add
xor
dec
sub
outsb
testl
int
in
add
sbb
andl
cmpb
into
cwtl
mov
leave
insl
rclb
jg
out
fadd
ret
rcr
jmp
xchg
adc
test
adc
divb
pop
xchg
orl
out
or
add
fistps
cltd
mov
dec
add
xchg
insb
pop
xchg
in
loopne
pop
dec
add
std
aaa
add
inc
nop
add
mov
mov
xchg
add
jno
movsl
lods
stc
pop
add
rclb
add
fldenv
xchg
mov
or
das
mov
push
mov
cmpsb
cmp
test
xchg
jp
shlb
xchg
mov
add
xor
inc
push
pusha
ds
xor
jo
imulb
sub
sbb
ss
add
ja
mov
bound
cmpb
test
std
add
stos
faddl
inc
xchg
add
add
inc
push
mov
fcmovb
add
lahf
push
and
mov
mov
sbb
mov
jp
xor
js
loop
lock
roll
or
sbb
es
sbb
and
inc
cmp
sub
jle
in
into
addb
jmp
mov
add
lcall
repz
aad
mov
mov
loopne
mov
xor
mull
mov
inc
test
outsb
push
mov
cs
jge
pusha
aad
cmc
out
sbb
loope
xor
jbe
adc
push
pushf
subl
mov
int3
xor
mov
add
mov
daa
mov
lcall
inc
mov
push
sbbb
pusha
jp
jg
repz
ja
jae
jge
pop
cmp
orl
testl
dec
push
jo
ficompl
shlb
outsb
rcl
int
add
jle
cmc
xchg
sbb
out
or
mov
out
pop
inc
insb
sub
add
hlt
jmp
push
inc
xchg
inc
stc
test
xchg
scas
inc
and
mov
inc
pop
adc
enter
cmp
mov
fisubl
and
mov
fiadds
nop
and
rcll
aas
hlt
cmova
cmp
popa
roll
and
loopne
add
stos
add
mov
pop
out
add
mov
repnz
cwtl
fwait
loop
add
push
leave
movl
sub
xor
inc
lock
jl
xlat
add
stc
mov
cmp
cltd
lahf
xor
lahf
push
inc
jbe
pextrw
sbb
loop
jae
int3
clc
or
mov
cmp
jmp
insb
add
jge
and
xchg
inc
aas
and
sar
cmp
vpshuflw
sbb
lods
in
inc
push
push
jo
push
out
sub
mov
rorb
add
mov
add
out
shlb
jno
in
lea
dec
hlt
sti
lds
push
inc
pop
pop
push
lock
in
movsl
adc
sbb
sub
adcb
sbb
sbb
pop
movsb
push
push
add
cld
mov
mov
push
add
sbbb
leave
fldcw
dec
int
in
add
cmp
sub
jnp
mov
cld
data16
clc
hlt
sub
daa
pop
pusha
xor
sub
add
mov
cmp
add
jo
cmp
stc
dec
les
add
cmp
add
push
adc
inc
add
cmpsl
arpl
je
xchg
inc
jb
mov
cmc
pop
add
repz
push
addr16
adc
pop
repnz
adc
sbb
stos
mov
add
lea
add
call
iret
add
addr16
mov
fwait
std
sbb
movsl
add
aam
jl
sbb
inc
cmp
mov
and
sbb
ds
pop
pushf
mov
sbb
push
popf
add
outsl
mov
xchg
add
or
pop
mov
mov
nop
jae
flds
iret
scas
sar
xor
pop
call
adc
jo
clc
cwtl
loop
push
scas
out
adc
pop
mov
sbb
cmpsb
sbb
cli
mov
sti
xchg
jo
loopne
dec
xchg
add
aaa
loopne
nop
je
in
pop
sbb
adc
hlt
sbb
jne
or
rorl
repz
sub
mov
movsb
js
pop
push
or
push
test
int
xchg
leave
adc
je
stos
or
jo
jle
es
ret
in
push
xor
test
mov
test
dec
jnp
inc
test
push
cmp
xor
mov
mov
insb
aam
nop
adc
add
shll
data16
jo
call
enter
and
adc
pop
sub
addl
xor
add
mov
jo
jmp
popf
xchg
or
sub
pop
sub
mov
add
lcall
add
int
xor
xor
icebp
daa
mov
add
faddl
outsb
popa
mov
enter
cltd
jl
adc
add
pop
fs
fistpl
popf
add
xchg
ret
movb
add
mov
nop
add
rolb
mov
scas
js
cmpsb
pop
insb
ret
sub
add
sbb
dec
inc
lahf
pusha
pop
arpl
pop
cmp
add
cmpsb
pop
push
stos
sarb
mov
dec
icebp
call
cltd
add
sbb
sahf
cld
pop
in
pop
fnstsw
push
mov
into
cltd
loop
call
xchg
add
pop
inc
ret
pushf
daa
add
xchg
fadds
push
add
stos
xchg
stos
ret
dec
addr16
rclb
add
cmp
sub
movsl
add
dec
les
pop
fisubrs
addr16
pop
adc
int
adc
into
mov
pop
int3
add
sub
xchg
lock
loopne
mov
rcpps
cmp
scas
cmc
decl
jmp
sbb
dec
add
aam
or
fdivr
lahf
pop
mov
pop
cmpsl
lods
cs
cmp
add
lock
add
sub
out
cmc
xor
pop
mov
sub
ljmp
pop
or
cmp
cmp
decb
cs
fmul
adc
push
int
mov
fcmovu
and
xchg
or
loopne
push
add
push
inc
pop
das
sbb
arpl
sbb
into
inc
mov
push
in
jns
cmp
dec
incb
xor
loopne
and
push
rclb
int3
psubd
adc
cmp
aaa
andb
arpl
dec
sbb
dec
sbb
or
imul
mov
inc
loopne
dec
ja
aam
test
xorl
sbb
and
addb
push
mov
sbb
jnp
dec
dec
push
rdtsc
add
mov
mov
jl
pushf
inc
lods
sbb
in
pop
enter
pop
pusha
jae
sub
rolb
xor
aas
std
adc
out
fidivrs
dec
add
inc
add
sahf
pop
lods
inc
cmp
add
adc
xor
jo
add
daa
mov
jge
pop
add
pop
mov
push
shlb
push
sub
cmp
decl
mov
int
cmp
push
testl
and
sbb
add
fidivrl
dec
jnp
test
jns
ror
dec
outsl
or
sahf
into
das
cmpb
mov
or
push
mov
nop
lret
or
loop
jb
inc
and
cltd
in
add
pop
cmp
push
les
mov
mov
test
push
add
dec
sbb
mov
aam
andl
movsb
loopne
or
push
pop
fsubs
rol
mov
add
repz
lcall
cli
xchg
push
add
xchg
lock
enter
or
mov
inc
pusha
inc
cli
jno
les
push
sahf
fisttps
cmp
arpl
mov
clc
sub
stc
push
add
inc
and
add
pop
cld
pop
out
sahf
rclb
js
out
cmp
add
push
out
subb
mov
xor
in
dec
pop
mov
and
sbb
into
jge
xchg
add
bound
adc
add
js
add
sub
mov
adc
push
cmp
adc
jnp
mov
inc
mov
adc
xor
in
into
hlt
lcall
xor
testb
add
sbb
sbb
leave
and
adcb
xorb
or
add
xchg
mov
cmp
jg
lock
les
mov
mov
jno
cmp
int
popa
int3
add
fadds
xlat
in
cmp
lea
lods
aad
fwait
outsb
or
stc
jl
pop
mov
push
roll
add
cmp
add
push
push
add
cwtl
cli
inc
stos
adc
mov
repnz
cmp
fcoms
mov
mov
cmpsb
sahf
sti
xchg
xchg
sub
cwtl
pop
mov
dec
add
xor
pop
mov
mov
adc
cmp
ret
sbb
xchg
test
push
mov
xlat
fsts
addb
mov
mov
cmp
lds
dec
adc
cs
mov
je
mov
cli
add
push
int3
sub
lds
arpl
xchg
aas
loop
ret
in
leave
add
inc
test
repnz
scas
sub
lods
imulb
mov
test
into
xchg
fwait
inc
pop
dec
test
pop
fstpl
fstpt
add
sub
inc
jmp
inc
adc
lahf
pop
add
aad
pop
arpl
data16
and
rolb
jne
mov
jl
call
addr16
shlb
mov
fisttpl
enter
adc
xor
int3
dec
xchg
xor
lock
rol
xchg
lret
test
sbb
pusha
fwait
pushl
je,pn
jae
popa
cmp
stos
add
test
dec
hlt
rolb
rcr
mov
loopne
push
or
add
sbb
jo
mov
pop
icebp
push
mov
sbb
cmp
dec
or
iret
or
xor
push
rclb
stc
xchg
jnp
xor
jecxz
outsl
mov
nop
imul
dec
les
mov
cmp
pop
mov
push
sbb
in
mov
mov
pop
or
push
imul
add
inc
cmp
jge
mov
es
test
popf
xor
xlat
negb
movsb
adc
add
fcompl
icebp
jl
add
inc
push
add
pop
or
add
mov
ss
add
mov
ret
pop
jl
pop
insl
or
sbb
shlb
mov
ljmp
mov
adc
inc
loope
fbstp
mov
in
in
add
adc
std
mov
push
xor
add
or
or
cld
in
lock
mov
jno
in
and
int3
adc
add
pop
and
mov
mov
cmp
push
xchg
lret
sbb
dec
cmp
add
mov
or
das
dec
pop
sbb
jno
adc
pop
add
lret
fisttpll
mov
sbb
cmpsb
fistpll
or
and
inc
xchg
fisubl
shl
arpl
pop
mov
rorb
sub
sub
and
add
jmp
jp
xchg
scas
mov
js
aas
add
pop
or
xor
adcb
pop
scas
cmpb
push
inc
ss
xchg
mov
test
or
xchg
mov
xor
mov
stos
add
xor
sarl
lcall
pusha
add
fiadds
fwait
lds
or
mov
mov
push
xor
sbb
popf
cld
fwait
gs
add
cli
push
inc
xchg
addl
mov
pop
sbb
mov
hlt
fstp
mov
and
cmp
mov
lcall
cmpl
fidivrs
mov
test
pop
cwtl
mov
lret
adc
and
nop
xor
ret
cmp
add
lods
fdiv
inc
stos
aas
xlat
add
les
cmp
mov
cmp
inc
movsb
push
mov
and
iret
jbe
lcall
in
pop
push
insb
sbb
sysenter
pop
test
jbe
sti
and
aam
xor
jle
aad
hlt
add
sbb
inc
cwtl
stos
and
jno
add
adc
ret
cmpsb
jg
push
pop
inc
push
sub
mov
add
sti
fwait
shlb
int
sbb
cmc
out
xor
xor
sub
mov
clc
cmp
bswap
stc
lret
cld
add
outsl
mov
xchg
add
inc
cli
test
daa
xor
dec
jl
pop
push
pop
fnstcw
rclb
loope
add
add
fildl
stc
sub
clc
xchg
outsl
or
mov
movsl
fiadds
dec
inc
shrl
xchg
lea
mov
and
cmc
mov
pop
popa
xor
add
or
xor
es
pmaxsw
jge
je
test
mov
in
movsl
add
push
xchg
nop
insb
push
test
push
je
sub
dec
jl
ds
stc
mov
dec
and
pop
ja
mov
incb
daa
push
dec
xchg
cwtl
add
cmpsb
jnp
rclb
mov
call
jge
dec
xor
xor
and
in
cmc
arpl
add
and
lret
cltd
adc
lods
imul
icebp
jmp
repnz
sbb
push
pushf
mov
xor
cmpsb
es
jge
inc
outsl
test
cmpb
incl
jecxz
inc
and
fbld
xor
jno
add
mov
xor
ret
lods
sub
punpcklbw
int3
inc
loope
xor
sbb
add
xchg
and
add
test
lidtl
pusha
dec
adc
mov
mov
loop
icebp
sti
mov
lahf
pop
push
out
cmc
scas
subb
mov
xchg
lds
scas
std
dec
push
imul
mov
jns
add
xor
lea
sub
mov
rolb
add
shll
adc
in
leave
out
lods
out
add
pop
pop
cmp
jge
or
and
mov
fsubrl
bound
roll
movsb
push
fwait
xor
adc
imul
lret
dec
lea
hlt
add
push
push
and
pop
out
pop
add
xchg
pop
je
mov
cltd
sbb
out
jl
lea
cmp
outsb
iret
dec
adc
push
mov
popf
sub
pop
loopne
sahf
push
mov
lock
out
or
js
cmp
push
add
dec
cmpsl
jno
in
rolb
sub
push
orb
or
arpl
sub
sbb
in
mov
dec
call
inc
cmpsl
dec
call
nop
pop
cs
mov
pop
ds
test
shll
add
pop
dec
inc
sbb
das
sbb
rolb
into
lods
add
cmp
outsl
add
xorb
push
sub
stc
test
add
xchg
orb
adc
ds
push
orb
mov
xor
xlat
popa
mov
mov
fmul
repz
gs
push
mov
jo
cli
mov
cs
stos
cmpsl
sub
add
xchg
int
pop
sbb
repz
bound
shlb
addr16
call
push
xchg
xchg
push
xchg
mov
les
test
push
aaa
add
cltd
lret
mov
xlat
jnp
cwtl
mov
sub
add
jmp
adc
nop
shrb
jp
mov
sub
mov
dec
push
ficomps
leave
in
sbb
popa
jnp
push
icebp
lods
pop
into
adc
or
test
xor
mov
adcb
andb
aam
or
xor
add
xchg
rolb
out
xchg
mov
add
jmp
movsl
dec
sub
or
ja,pn
add
sub
adc
fmull
mov
mov
xor
inc
mov
faddp
or
sahf
xchg
push
aam
cmp
jno
pop
xor
bound
dec
scas
jb
mov
add
movsb
pop
add
loopne
out
nop
mov
add
push
scas
int
cmp
test
add
sbb
xor
sub
icebp
pop
mov
insb
das
add
lds
sti
mov
jmp
dec
enter
push
out
cmp
inc
fildl
out
aad
xor
jae
jno
or
js
adc
cld
add
sbb
sahf
dec
dec
jle
cmc
dec
out
clc
test
andb
lret
add
jp
lret
cli
mov
push
add
sbb
stos
bound
in
hlt
xor
sbb
out
andb
push
sbb
ljmp
pop
cmp
out
repz
add
sub
repnz
insb
push
and
xchg
inc
add
cltd
fimuls
cmc
push
rcrb
addb
arpl
pop
fstpt
stc
clc
test
pusha
push
andb
mov
setae
rclb
mov
add
nop
cmp
sbb
in
addb
idivb
ja
push
shr
lea
lods
mov
in
add
popa
mov
add
dec
add
dec
xchg
jmp
add
mov
xchg
xor
cld
mov
into
test
fadds
adc
or
mov
sbb
push
ret
and
pop
out
leave
push
add
je
cmp
jl
adc
dec
or
fs
push
addb
mov
inc
mov
and
call
pop
xchg
outsl
add
sub
mov
cmp
fnstcw
jmp
add
and
lds
pop
mov
ret
mov
xor
add
xor
mov
in
outsl
add
loop
shll
shrb
or
pop
pusha
cmpl
les
push
arpl
sub
pop
xchg
cmp
xchg
cld
inc
dec
add
cmp
mov
fisubrs
addr16
add
mov
cmp
dec
pop
mov
add
addb
psrad
lcall
inc
or
jge
imul
mov
push
and
in
inc
test
adc
in
xor
fcoms
add
or
popa
scas
pop
scas
xlat
ret
and
add
jns
push
push
lahf
add
jb
xor
sub
push
mov
lods
cwtl
mov
test
add
insl
push
mov
and
add
dec
add
pop
dec
adc
je
adc
stos
hlt
cld
in
adc
rolb
adc
adcl
jmp
bound
push
mov
adc
pop
sbb
jo
cwtl
sysenter
inc
push
adc
xor
sub
insl
add
inc
adc
les
add
jo
repnz
fiaddl
add
es
and
push
jp
mov
pusha
pop
pushf
in
or
cmp
mov
jae
sbb
pusha
std
shll
pop
test
cmovo
add
pop
arpl
repnz
pop
js
pop
pop
sbb
div
and
jge
add
mov
xor
pusha
adc
outsb
mov
imul
mov
enter
xlat
outsb
addr16
ret
add
or
xchg
adc
popf
mov
ret
mov
sub
push
xor
mov
fisubrs
dec
add
shll
add
and
icebp
out
add
rcrl
lea
call
out
stos
je
bnd
sub
adc
adc
fsub
lods
jmp
inc
sub
repz
sbb
sub
add
dec
mov
or
sbb
xor
pop
sbb
ja
add
adc
call
push
push
inc
mov
add
xor
adc
enter
add
test
mov
gs
shrl
xchg
cmp
sub
cmp
sbb
ret
fstps
mov
inc
or
pushf
push
aas
and
mov
movsl
add
mov
int3
push
iret
add
popf
pusha
add
aaa
sub
cli
imul
hlt
out
jp
in
pop
xor
mov
subb
nop
repz
stc
dec
in
bound
aam
mov
rolb
ss
cmc
cltd
and
popa
fldcw
aaa
les
add
pop
sbb
hlt
push
mov
xchg
xchg
loopne
repnz
inc
pop
mov
negb
add
or
or
or
and
ljmp
je
mov
pop
mov
enter
fisttpl
sub
add
mov
call
jns
jp
in
out
mov
xchg
and
out
inc
add
aam
in
lret
ja
add
enter
shlb
jns
fwait
rcrb
pop
xchg
dec
int
jg
xor
dec
add
sub
xor
aad
add
jb
and
or
das
or
arpl
sbb
pop
inc
jge
mov
setns
mov
pop
stos
jmp
rcrb
int3
ficoms
or
repnz
sbb
xor
fcom
push
nop
add
mov
int3
mov
or
add
into
xchg
scas
add
aaa
jae
call
ret
jmp
inc
shrb
add
cs
in
push
add
xor
pop
or
adc
mov
shl
mov
and
outsl
jnp
add
mov
loope
xorb
das
xchg
mov
in
adc
out
or
xor
add
fstpt
sbb
dec
aaa
movb
or
sub
leave
fldl
jp
or
jno
add
sub
cmp
imul
subb
add
and
pushf
jmp
sbb
ds
jl
int
cmpsb
add
pop
or
mov
stc
inc
insb
sbb
cmc
pop
repnz
xor
push
mov
adc
push
aam
pop
hlt
add
cmp
sub
test
pop
inc
in
fs
shrl
fidivs
insl
dec
cs
add
sahf
out
or
test
and
imul
mov
and
jbe
scas
or
jb
aaa
inc
mov
lods
in
imul
loop
js
cmp
je
jle
add
rcrb
daa
lock
lds
call
and
pop
mov
push
xchg
rcr
das
jg
push
dec
inc
sti
into
and
jb
push
aam
xchg
insb
pop
test
inc
out
dec
add
fwait
test
push
mov
or
in
pop
add
fmul
cwtl
fisttps
cs
aad
add
adc
pop
mov
insb
je
or
xchg
scas
out
loopne
repnz
xlat
add
enter
leave
add
add
cmpsl
push
int3
js
xor
sbb
mov
xor
or
jne
icebp
out
int3
cmp
cmp
in
into
pop
dec
out
aad
rclb
das
inc
je
add
arpl
fsubrl
lods
fistps
and
mov
dec
dec
cli
add
sbb
mov
in
add
xchg
mov
or
and
mov
push
adc
cmp
std
cmp
test
stos
add
dec
jg
loop
add
push
mov
add
stos
inc
jbe
mov
dec
es
add
add
add
pop
adc
push
fs
jbe
pop
rolb
int3
dec
popa
or
mov
jmp
lret
fcoml
adc
jmp
daa
out
push
mov
push
movsl
jno
pop
push
add
andl
lahf
outsl
loope
add
cmpsl
scas
test
mov
xor
add
mov
push
nop
dec
mov
sub
mov
psubusw
incb
xor
stos
cli
cmc
mov
xor
call
mov
ljmp
jns
jl
out
add
popf
fwait
sbb
loopne
inc
pop
popa
rcrb
test
add
rcll
or
add
and
js
add
jo
xor
cwtl
or
dec
jecxz
jg
insl
aam
jp
add
test
fistl
mov
shrl
cwtl
sbb
xor
rolb
cmpsl
jae
test
jns
sbb
mov
mov
cmpsl
cld
insb
add
sub
push
mov
and
call
jo
or
ret
outsl
fists
mov
add
mov
mov
imul
lahf
fwait
mov
subb
sub
push
jmp
mov
inc
enter
call
and
or
test
imul
cmp
jb
cmp
xchg
cld
cmpsb
es
and
jae
fmull
add
adc
pop
add
ss
inc
cmpb
dec
gs
pusha
sarb
add
enter
rorb
icebp
fdivp
dec
inc
xchg
test
pushf
xchg
pusha
popf
das
xchg
in
pop
daa
mov
sbb
popf
out
mov
inc
cwtl
dec
add
gs
pop
pop
push
repnz
add
addb
aaa
scas
or
dec
insb
cmp
sub
jmp
dec
xor
adcl
aad
or
test
adc
pop
sbb
dec
pop
adc
pop
cmp
mov
cmc
dec
outsb
xor
add
std
push
andl
decb
cld
pop
add
mov
cmp
fld
data16
aas
dec
xchg
add
sub
jp
push
roll
adc
lds
add
aam
mov
sbb
push
pop
fisubl
shrb
adc
pop
and
add
push
and
fidivrs
sub
add
adc
xor
pop
inc
movb
nop
xchg
pop
sub
add
stos
xchg
add
in
cwtl
adc
add
dec
mov
test
and
cmp
push
adc
adc
mov
cwtl
jle
jns
pop
jae
push
and
int3
ret
clc
push
notl
add
sbb
mov
push
subl
push
mov
fwait
xor
jge
add
fimull
lock
push
pop
xchg
dec
insl
fdivl
sbb
pop
dec
xor
test
ficoms
inc
sbb
add
push
jmp
inc
add
out
adc
add
mov
cmp
xor
outsl
stos
pop
mov
sub
pop
xor
sub
jns
inc
add
and
add
sbb
js
mov
aad
jmp
add
fsub
add
cwtl
mov
and
btc
fs
ljmp
jo
call
mov
pop
movsb
loopne
add
dec
sub
add
mov
nop
push
mov
jno
in
cmp
out
push
add
aas
sbb
add
dec
arpl
add
flds
push
fs
sub
push
repnz
push
fidivrs
lds
mov
and
and
les
fistpl
loop
roll
xchg
adc
enter
cmp
adc
notl
outsb
dec
mov
shrb
cmp
lret
repz
jns
in
outsb
add
rclb
jp
aad
xor
jg
mov
adc
cld
rorb
cmp
add
movl
cmpb
gs
add
adc
push
cmc
nop
push
mov
or
add
popf
cld
mov
xor
mov
mov
pop
lcall
jp
stos
mov
add
mov
jae
test
xor
call
mov
inc
pusha
setbe
jne
and
push
xchg
and
jp
lcall
es
adc
jns
fnstsw
xor
sbb
xor
cwtl
idivb
fdivrl
pop
enter
cs
sub
jno
sbb
xchg
xchg
mov
adc
imul
add
or
and
cltd
mov
in
cwtl
sbb
outsl
mov
mov
push
rorl
movsl
dec
scas
dec
dec
adc
outsl
loop
test
xchg
pop
pop
pop
or
or
and
and
loopne
xchg
adc
push
mov
and
jmp
mov
mov
cld
sbb
sbb
aad
cmp
add
or
call
push
popf
cmp
std
aad
fiaddl
lret
jecxz
add
sbb
jmp
out
mov
lods
fsincos
add
leave
cld
inc
sbb
add
in
pop
cltd
pop
xor
mov
dec
add
into
push
sbb
and
popa
push
or
sti
nop
cmpsb
dec
push
pop
pop
xor
pushf
clc
and
dec
sbb
push
adc
cli
sbb
sbb
cmpsb
add
or
jge
mov
jno
repnz
dec
test
outsl
push
adc
and
loope
hlt
faddp
adc
push
movsb
call
shll
sub
jnp
add
jmp
rcrb
pop
add
jl
or
shll
pop
dec
cmp
xchg
jecxz
mov
sbb
jl
leave
fdivl
add
outsb
negl
cmp
scas
dec
push
push
lock
mov
add
jb
js
mov
and
dec
mov
pusha
and
cli
xor
das
mov
andb
js
add
jg
aam
cs
lahf
add
xchg
es
into
pusha
xchg
lock
inc
or
jmp
add
sbb
add
xchg
push
mov
aas
adc
cmp
mov
fsub
jmp
adc
in
add
cmpsl
je
aam
add
and
or
mov
xlat
add
inc
clc
add
push
mov
jle
sbb
mov
sub
fadds
add
aam
lret
loopne
not
or
das
dec
adcb
lgdtl
push
mov
mov
cmp
imul
add
fidivrs
jbe
in
stc
lea
bound
xor
mov
mov
fdivrs
adc
into
movsb
outsl
addb
xor
pusha
mov
or
cmpb
dec
cld
add
xchg
les
push
mov
out
cmp
or
add
xchg
pop
xor
push
xor
xchg
xor
or
js
mov
and
lds
ret
std
inc
or
and
ret
jns
add
cmp
jno
pop
ret
outsl
add
js
add
push
cs
fidivrs
nop
adc
dec
add
push
cmc
jmp
adc
sub
add
xor
int3
xchg
push
ljmp
movsl
xchg
push
in
xor
lods
adc
dec
and
pop
jne
sub
dec
xorb
repnz
jnp
rorl
or
mov
es
bound
dec
addb
leave
add
inc
loop
adc
loope
add
pop
mov
pop
push
jno
jnp
jns
add
inc
orb
push
push
sub
inc
add
lahf
addb
dec
repnz
jbe
lods
pop
ds
sbb
jns
or
out
out
test
test
hlt
ds
leave
sti
clc
outsl
push
mov
pop
mov
inc
jg
push
jb
stos
sarb
decl
in
cs
pop
sub
inc
add
mov
adc
pop
shrb
mov
testl
les
rolb
mov
adc
dec
mov
scas
out
popf
mov
lock
mov
cmc
dec
pop
imul
or
mov
add
or
add
cwtl
or
inc
jmp
jnp
int3
or
aaa
push
fs
add
jg
js
adc
mov
insl
daa
cli
add
adc
rorl
sub
shlb
cmp
cmp
mov
or
jns
add
lods
sti
xor
pushf
or
push
in
jno
push
outsb
and
fisttpll
inc
add
add
push
and
mov
pusha
gs
mov
inc
cs
ficompl
mov
call
or
sub
aam
mov
fbstp
in
add
push
inc
ds
insl
add
add
aad
shrl
jae
adc
add
test
stc
add
loopne
lret
aaa
jl
add
dec
pusha
repz
aad
xor
lds
xchg
sub
adc
mov
adcb
js
jecxz
fildll
pop
mov
pop
inc
xchg
xchg
mov
jl
cmp
pop
push
inc
push
dec
mov
xlat
lret
ss
mov
movl
cmc
mov
stos
pop
xchg
push
movsl
or
xor
mov
fcmovu
pusha
sbb
into
or
jge
outsb
fiadds
dec
cmp
jmp
cmp
add
fmull
scas
jns
or
es
fimull
and
xchg
dec
add
aad
and
das
push
pushl
orb
sub
mov
add
cwtl
cmp
push
fadd
lods
inc
cmp
xor
mov
addl
add
and
lret
mov
fistpll
add
pop
push
cmp
mov
jmp
addr16
mov
fisttpll
xchg
lock
jb
aaa
push
cmp
nop
jnp
rcl
add
cmpsb
sbb
mov
inc
and
inc
movsl
jl
out
fisttps
ffree
push
xchg
aaa
mov
add
sbb
pop
iret
fwait
lock
loopne
sub
outsl
or
shr
xlat
and
inc
sub
jge
enter
insb
cltd
jp
add
pushf
sbb
fldenv
int
xor
ja
mov
pop
shl
push
outsb
add
or
test
loop
add
data16
inc
and
jecxz
push
std
jae
loope
sub
lock
stc
hlt
lods
push
mov
mov
inc
nop
cwtl
sub
jge
cmpb
ljmp
sub
sti
addr16
rcr
mov
fiaddl
in
pop
inc
test
xchg
or
mov
paddb
inc
rorb
sbb
test
inc
clc
mov
add
subb
rclb
mov
pop
lock
addr16
popa
add
adc
mov
out
add
cli
mov
xchg
push
orl
ret
clc
push
test
sub
stos
loop
add
and
mov
cmp
cld
adc
jle
ja
adc
cs
and
mov
in
cmpsb
jecxz
aaa
push
add
xchg
inc
xchg
adc
mov
cmp
adc
xor
jg
fistpl
jp
repnz
jo
sub
push
sbb
jl
xor
sbb
sti
mov
adc
mov
add
sbb
roll
aad
imul
or
psraw
in
sbb
inc
les
or
sub
sbb
lds
adc
add
push
xchg
and
cmp
xchg
lcall
add
loope
jne
fwait
sbb
push
aaa
lock
mov
pop
pop
stos
pop
inc
push
hlt
add
cmp
iret
add
lock
xorb
aad
xchg
dec
dec
sbb
imul
sahf
insb
add
daa
jmp
xchg
pop
popa
sub
mov
loop
mov
xor
and
xchg
inc
fldl
int3
mov
fists
mov
dec
repnz
fs
mov
pop
mov
mov
xor
sub
cmp
add
sub
fwait
pushf
test
add
ficomps
mov
mov
push
lock
fadds
and
insl
mov
cmp
dec
cmp
add
orb
pop
mov
cmpsb
nop
push
xor
inc
mov
lods
or
pop
cmc
mov
dec
and
push
andl
mov
adc
out
add
imul
xchg
in
sbb
mov
ja
mov
loop
jae
add
insb
push
ret
ffree
hlt
rorb
add
int
sub
out
aad
or
or
mov
add
xor
push
sbb
imul
adc
ficoml
in
sub
add
shll
cmp
add
test
cld
add
test
pop
xchg
mov
lock
loope
sbb
or
push
push
ja
inc
pop
or
sbb
and
add
cmp
orl
cwtl
pop
mov
push
mov
cltd
dec
out
in
cmp
and
subb
or
ds
pop
lea
test
scas
lahf
or
xor
xchg
add
xchg
xor
jbe
test
fcom
pusha
add
rol
mov
and
sub
mov
mov
add
cmpsb
mov
xor
lods
lock
scas
or
dec
dec
pop
jl
cmpsb
or
repnz
js
cmp
inc
incl
add
nop
pop
inc
fsubr
add
inc
inc
aam
push
add
xor
pop
repnz
stc
fmul
or
add
and
xchg
cmp
inc
xchg
mov
add
add
inc
imul
jle
xor
adc
and
add
outsl
fildl
mov
jno
pop
lods
shll
mov
and
icebp
pop
and
add
fldt
frstor
mov
xlat
sub
shrl
fisubrs
ffree
sub
call
pop
inc
ret
nop
pop
xlat
and
jmp
mov
dec
add
mov
cwtl
add
fidivrs
jbe
add
rcrb
jp
mov
mov
jl
arpl
or
int3
pop
sub
push
sbb
mov
dec
cmp
pop
xorb
cs
add
orb
out
mov
or
push
dec
cli
mov
push
and
sahf
lock
aad
pop
jnp
insl
das
push
clc
xchg
sbb
popf
gs
adc
fisttpll
js
add
fmuls
stos
iret
call
add
in
pop
mov
adc
adc
and
stos
pop
test
das
pop
sbb
rcll
testl
jo
cli
dec
add
inc
mov
es
clc
mov
cwtl
add
cltd
cmp
out
add
push
inc
lcall
loop
ljmp
mul
dec
jb
mov
push
aaa
jmp
xchg
pop
lret
sbb
and
es
call
or
push
rcrb
add
mov
pop
cwtl
rorl
lods
inc
cmpsl
andl
ret
sub
mov
xlat
mov
repnz
xchg
movsb
or
adc
aad
cmp
mov
fsubrs
adc
or
dec
or
cltd
notl
outsb
setg
movsl
xchg
stos
xchg
jl
inc
jo
rcrl
add
out
jge
add
push
movsl
fistl
sub
int3
xchg
sbb
xor
out
mov
dec
sbbb
adc
mov
fisubs
pop
lret
lock
cli
std
fsubrl
push
or
cld
dec
lds
outsb
ret
int
dec
add
ljmp
call
and
cmp
pop
add
cmpsl
mov
lock
jmp
cld
jmp
add
add
rcrb
jno
push
jp
sub
sbb
fisubrl
fwait
xor
call
jl
inc
imul
aas
int3
cld
inc
hlt
sti
sub
sub
push
xor
stos
cmp
and
mov
jle
or
psadbw
cli
add
mov
mov
aas
aad
leave
jmp
pop
roll
pop
push
rcrl
repnz
sub
hlt
add
or
or
xchg
add
into
cmp
js
leave
inc
ret
repz
push
and
divb
and
jp
fnstcw
mov
cmp
xor
cmp
and
sub
addr16
nop
sbbl
xor
xchg
add
push
sub
icebp
ljmp
adc
xor
mov
adc
jmp
jp
add
mov
fldl
and
shll
add
add
dec
gs
test
cltd
add
loop
add
pop
add
lahf
mov
bound
sarl
pop
test
and
mov
mov
add
and
add
hlt
mov
cs
jne
pop
dec
sub
cmc
sub
fwait
sbb
mov
fsubrl
adc
out
cmp
xchg
scas
add
adc
les
add
mov
inc
pop
sbb
fsub
popf
add
fdivl
mov
add
pop
mulb
xor
je
cmc
jg
add
dec
repz
fnstcw
daa
jmp
and
push
add
xor
callw
cmpsl
add
imul
and
jecxz
stos
pcmpgtw
add
pop
jle
add
jns
hlt
inc
add
loope
lret
xchg
inc
sub
nop
adc
fs
cli
mov
add
push
pop
mov
or
aas
jne
movsl
push
and
out
xchg
cmp
xor
lods
in
jl
fucomi
dec
dec
cld
add
mov
xchg
or
adc
xor
imul
addr16
addb
jge
repz
in
mov
push
sub
jg
or
or
mov
push
stc
mov
adc
leave
add
jns
cmc
bound
and
loop
xor
pop
add
mov
or
sub
sub
push
or
leave
cli
push
std
add
shl
or
xlat
mov
repnz
xchg
lds
enter
pop
pusha
push
push
jbe
mov
mov
out
mov
dec
mov
aam
pop
pop
mov
push
popf
ret
int3
cwtl
cwtl
add
and
lahf
jge
inc
out
cs
jp
sub
add
cmp
inc
ss
add
mov
add
out
in
cmp
popa
out
adc
lahf
aam
hlt
mov
add
hlt
jl
loop
sbb
jne
loopne
sub
pop
pop
scas
mov
cmpb
or
xchg
mov
js
add
insl
out
ret
repnz
add
pop
xchg
pop
aad
aas
loopne
jmp
mov
add
adc
xchg
sbb
test
and
add
movsb
cmp
aaa
mov
sbb
xor
mov
subl
mov
fs
inc
test
mov
js
out
adc
sbb
int3
clc
subb
outsl
add
cmp
push
call
jbe
xchg
pop
testb
test
call
lods
mov
lds
pop
mov
fstl
or
loop
cwtl
cmp
cmp
mov
dec
dec
lret
cmp
pop
pop
push
das
jmp
mov
pop
pop
imul
loopne
sti
add
movsl
shrl
out
cmpeqps
xchg
test
pop
pop
gs
or
dec
dec
leave
nop
push
inc
sub
cmp
mov
test
or
jnp
xchg
sbb
clc
shl
pop
jbe
xchg
adc
jg
sahf
out
add
movsb
dec
test
outsl
addl
ret
mov
in
push
mov
add
sub
loope
push
mov
aas
lea
fsubl
iret
xchg
arpl
adc
daa
add
xor
push
add
jnp
cmpb
add
idivb
pop
decb
cmpsl
leave
mov
add
push
mov
push
sub
nop
dec
inc
lea
in
push
sarl
popa
inc
aam
lock
jg
pop
popf
pop
ret
jns
out
in
jl
cmp
add
mov
shll
mov
pushf
pusha
jne
and
pop
inc
xor
mov
push
ds
js
arpl
imul
jae
pusha
lock
lret
iret
sbb
shrb
jo
jge
add
jo
pop
sahf
inc
add
stos
cli
jns
repnz
aaa
pop
add
add
shll
jb
add
addr16
sbb
mov
sbb
negl
add
cltd
dec
sub
in
pop
dec
dec
adc
inc
add
out
mov
movsl
mov
jno
xor
sar
xchg
mull
add
mov
xor
jg
xchg
sbb
dec
pop
test
leave
cwtl
pop
or
sub
xchg
add
int3
or
add
out
dec
aad
test
add
xor
cmp
or
test
enter
pushf
push
xchg
loopne
adc
hlt
aam
les
or
xchg
jno
sbb
cli
inc
shrb
sbb
add
testb
jbe
sar
aas
bound
add
sub
pop
cltd
fsubr
jp
and
scas
adc
add
lea
gs
int
add
cmp
cmc
call
push
xor
idiv
jmp
xor
aas
and
std
enter
btrl
iret
add
in
cmpl
push
and
outsl
sub
add
mov
xor
adc
mov
aaa
les
jae
push
mov
mov
or
xor
push
aam
arpl
lret
in
add
cmpsb
flds
inc
and
mov
ss
mov
mul
jmp
lods
add
les
add
adc
gs
lcall
icebp
call
cmp
jae
cmp
mov
mov
imulb
add
adc
add
xchg
sbb
inc
pusha
loop
cmp
xchg
push
test
loope
mov
jmp
sbb
sbb
stos
popf
ljmp
iret
inc
dec
roll
ja
cmp
jae
ds
call
rcl
andb
cwtl
mov
inc
int3
lods
dec
inc
adc
inc
add
and
sti
jg
dec
mov
sbb
adc
add
imul
jae
or
loope
cld
or
mov
loopne
test
mov
jecxz
and
adc
cld
repz
add
pop
cli
testb
sbb
das
pop
push
scas
mov
std
in
jae
fistl
js
mov
pop
mov
pusha
add
repz
je
ds
leave
and
add
mov
add
inc
mov
mov
pushf
pop
je
scas
das
pop
xor
jns
sub
fcom
push
add
jnp
jge
push
and
fsubl
cmp
inc
inc
or
mov
adc
pushf
pop
mov
rcr
or
inc
loopne
jmp
cld
sub
add
stos
pushf
xchg
inc
mov
cmp
fisubs
enter
shlb
insb
lock
sub
xor
or
add
or
mov
jno
dec
aad
pop
sldt
or
add
daa
sub
mov
fstl
inc
push
add
fiaddl
push
nop
in
sub
ss
lock
add
dec
hlt
movl
lods
lret
adc
add
jae
or
gs
jle
movsl
dec
mov
enter
mov
js
or
bound
sbb
test
and
or
notl
and
jne
int3
lods
sub
daa
lcall
mov
adc
sub
dec
xchg
xchg
aaa
data16
leave
pushf
es
and
inc
inc
in
xlat
add
lds
cltd
jl
or
insl
pop
add
stc
pop
fwait
stos
cmp
dec
pop
movl
and
cmp
xchg
divb
daa
lret
add
xor
add
push
xchg
popa
pop
add
loop
addb
mov
jecxz
cmp
stos
pop
add
xor
js
pop
sub
fadds
or
mov
clc
in
dec
std
out
add
test
out
addb
mov
xchg
adc
xor
data16
push
sbb
rorb
pop
cmp
or
addb
add
xor
ds
cmp
pop
xchg
into
roll
int3
aas
mov
add
lcall
pop
retw
rcll
fs
and
xchg
std
cmp
add
adc
xor
out
cmp
cmpb
sbb
sbb
inc
jbe
jl
dec
inc
lar
add
sbb
js
add
shrl
clc
push
fsubl
xchg
mov
xchg
push
push
pop
adc
lcall
xchg
xor
and
add
int3
sbb
jge
mov
lret
call
lock
inc
or
popa
add
loope
push
loopne
push
hlt
mov
add
outsb
or
fidivrs
imul
add
out
add
popf
rorl
add
into
mulb
add
sbb
stc
std
xchg
aad
adc
dec
xchg
jne
sub
pop
mov
jnp
in
cmpl
jbe
add
mov
sub
pop
mov
cwtl
mov
lods
mov
push
clc
sub
sub
add
adc
or
mov
inc
push
inc
or
cmc
subb
rol
adc
data16
cli
push
push
mov
add
xchg
pop
out
loop
test
pop
addb
pop
in
or
pop
and
sbb
stos
sbb
add
andb
into
aad
sbb
mov
sub
test
dec
popf
sbb
xor
pop
imul
add
sar
pusha
add
aad
push
and
aaa
add
mov
push
in
mov
mov
or
rcrb
cmp
pop
sbbl
lret
ja
add
mov
daa
add
push
clc
fists
mov
jp
add
pop
leave
ja
add
push
mov
add
inc
lods
adcb
mov
mov
out
cmpsb
ja
pusha
mov
imulw
and
or
xchg
or
ret
sbb
or
jo
mov
test
inc
mov
sbb
aam
stc
sbb
fdiv
dec
push
loopne
lret
cmc
pop
popa
sbb
rcr
inc
scas
mov
divl
push
inc
dec
adc
cmp
lods
pop
mov
loopne
sbb
jp
add
xchg
outsb
or
js
rcrb
jl
bound
clc
fidivrs
and
ja
adc
add
jae
dec
test
sub
nop
fiaddl
adc
dec
nop
repz
push
inc
adc
fildll
mov
adc
mov
sbb
mov
mov
pop
popa
mov
fdiv
ret
ss
cmpsb
sbb
test
adc
jp
test
imul
sub
jle
xor
cmp
add
mov
test
pop
pop
add
incl
cld
sub
call
fcompl
push
sub
adc
cmpb
subb
add
lods
sti
fisttps
push
xchg
sub
sub
nop
add
add
jecxz
add
mov
insb
push
adc
sbb
inc
ficoml
mov
testb
lahf
push
sub
dec
aam
fimuls
mov
add
pusha
xchg
rcrb
insb
mov
mov
nop
and
inc
jne
add
mov
xchg
movsb
or
sub
push
in
lds
andl
xchg
cwtl
jae
scas
and
mov
nop
jnp
jbe
push
lcall
add
fildll
inc
les
scas
dec
movsb
add
xlat
mov
lock
and
lret
pop
mov
loope
jmp
repz
add
jmp
mov
mov
and
mov
jb
pop
adcb
dec
add
mov
xor
int3
sbb
xlat
test
jmp
cmp
inc
xorl
loopne
mov
adc
push
out
sbb
add
xchg
sub
push
sbb
mov
and
fdivrl
in
pushf
add
fcomps
inc
cmp
cmpb
lcall
sub
cmc
add
pop
mov
sahf
cltd
loopew
and
popf
sbb
aad
cmp
imul
push
cmp
add
inc
nop
sub
sbb
scas
mov
adc
cmp
notb
add
jne
or
pop
icebp
add
and
cs
ficoml
mov
into
add
pop
xor
push
jno
sbb
pusha
mov
add
aaa
lahf
push
push
call
sub
pop
xchg
jno
cmp
cld
push
xchg
pop
add
cmpsb
dec
add
mov
out
loop
jle
add
lea
mov
pop
mov
push
jb
sbbb
adc
aaa
add
ss
push
in
add
rcrb
push
out
add
xor
fistl
in
movl
por
test
mov
aam
xchg
imul
cmp
mov
andb
dec
inc
jp
je
movb
pop
xor
jo
test
inc
out
mov
adc
mov
lret
cmp
imul
fildl
cmp
out
mov
loop
add
push
cmpb
imul
je
pop
in
add
xor
aad
and
add
adc
cmp
mov
lock
je
jne
add
loopne
add
xchg
or
pop
jnp
out
repnz
add
xchg
and
sarb
lods
mov
rol
dec
pop
mov
or
je
pop
or
pop
adc
mov
ja
pusha
clc
add
dec
pop
int
lret
inc
dec
xorl
jmp
or
push
dec
mov
dec
arpl
out
cmpsb
pop
ss
incb
push
add
lahf
jne
das
leave
mov
mov
mov
jge
in
pop
lahf
in
in
mov
jnp
cmp
add
jl
int
sbb
rolb
jg
push
orb
mov
movb
adc
hlt
jge
add
xorb
nop
cmp
mov
test
cmpl
pop
dec
test
jp
dec
sbb
out
fmuls
data16
icebp
add
sub
add
mov
out
sub
add
call
cs
jnp
hlt
cmpsb
add
adc
imul
push
mov
push
hlt
jno
nop
call
mov
aad
cmpsl
inc
scas
fistps
aam
in
hlt
jp
add
and
mov
add
ss
xchg
pop
or
add
dec
mov
sbb
loop
test
incl
jno
repnz
cld
dec
cmp
add
jecxz
data16
cmp
mul
outsb
cmp
roll
and
std
inc
aad
inc
sbb
lds
jmp
ss
orb
sub
xor
stos
lds
mov
add
outsl
xor
sbb
movsl
das
add
cwtl
push
cld
add
jno
pushf
add
inc
xchg
je
decl
xor
or
mov
movsl
cmp
mov
nop
es
lods
inc
push
add
xor
adc
cltd
cmp
cmp
pop
xchg
ds
jb
or
and
nop
pop
in
sub
test
cmpsb
ret
pmuludq
int
push
pusha
pushl
mov
inc
test
dec
xor
inc
adc
dec
outsl
inc
add
mov
gs
jnp
inc
shlb
mov
insl
add
faddp
in
outsl
pop
push
mov
int3
jp
shll
pop
rolb
scas
mull
inc
insb
popa
or
jo
add
ja
out
xor
add
and
movsb
or
lea
push
dec
pop
inc
andl
jecxz
and
push
lret
shlb
ret
hlt
xor
or
push
sub
add
fxch
aam
fists
push
xor
cmp
xor
add
pop
xchg
push
add
aaa
mov
roll
lcall
add
adc
or
mov
fdivr
jg
pop
int3
fnstsw
dec
cltd
push
mov
xor
add
test
cmp
push
scas
sub
add
shrb
push
or
mov
cmpsl
icebp
cmpsb
adc
sub
xor
cmp
cmp
add
jp
or
add
pop
mov
in
inc
in
int
add
mov
in
in
xchg
adc
addb
mov
dec
add
adc
push
enter
mov
inc
add
pop
loopne
xor
mov
mov
pop
and
sub
int3
popa
xchg
mov
add
jmp
jne,pn
aaa
pop
movl
sbb
inc
outsl
into
xchg
pop
cmp
jp
pop
xlat
lock
aad
sbb
mov
pop
inc
sub
pop
adc
jno
push
daa
xor
pop
cmp
rsqrtps
push
js
cmp
andb
mov
mov
movhps
xchg
mov
pusha
lods
andl
sbb
subl
cmpb
daa
nop
add
adc
pop
xor
jno
jnp
cwtl
inc
jmp
fcomip
xorb
dec
add
pop
fistl
add
dec
cmpsb
int
add
stos
add
push
clc
pusha
pop
and
add
js
cmp
repz
jae
sbb
ret
pusha
cmp
mov
nopl
inc
lock
dec
pusha
push
int3
shlb
xchg
cwtl
out
pop
lods
icebp
and
or
mov
add
out
and
stos
ret
xchg
outsb
call
lahf
or
repnz
mov
scas
int
add
sub
mov
cmp
sub
ljmp
stos
adc
hlt
pop
add
mov
clc
inc
or
mov
fdivs
icebp
mov
sub
jno
dec
mov
mov
add
ljmp
add
and
cmp
and
add
jns
inc
shr
pop
fistpl
inc
imul
std
sbb
adc
mov
xor
add
jecxz
sub
std
ja
and
add
pop
movsb
jo
and
scas
mov
push
cltd
ficoms
cmpsl
inc
lods
lds
enter
inc
ror
add
dec
in
and
pop
aam
inc
clc
test
sub
dec
adc
cs
cmp
pop
push
aam
movsb
adc
cmpsb
dec
mov
les
js
sbb
pop
jne
dec
add
test
iret
cmp
aam
sub
dec
sti
jmp
fcomip
fiadds
je
add
loopne
movsb
pop
es
ffree
jns
in
fwait
loope
add
andb
add
jp
lock
pop
sbb
add
mov
or
nop
push
inc
test
cmp
cmpb
mov
add
add
sub
jne
lock
hlt
or
inc
out
dec
clc
lea
mov
adc
push
test
or
or
sbb
pop
je
pusha
pop
add
add
cmpl
loopne
add
or
add
add
sahf
push
shll
push
or
jae
andb
aas
adc
mov
outsb
xor
into
imul
cmp
xor
inc
adc
fwait
push
push
sbb
out
jmp
mov
add
sub
mov
xchg
or
mov
clc
bound
sbbb
jg
jb
jbe
sub
test
std
xor
add
and
cmp
adc
xor
fwait
sub
jl
add
inc
jb
idivl
sti
addb
sbb
push
dec
mov
fimull
imul
xor
add
mov
repz
cli
or
fisttpl
mov
mov
lahf
xchg
es
or
cs
addr16
clc
inc
sub
and
arpl
adcl
lea
les
test
gs
mov
mov
pop
sbb
nop
push
jecxz
aas
jle
add
sbb
pop
test
repz
popa
push
sub
shr
stc
jg
int
pop
loop
add
mov
aam
xor
aad
xor
xchg
bound
mov
pop
cmp
xor
xchg
lcall
dec
jl
mov
cmp
dec
je
jae
xchg
xor
cmp
ss
sub
test
lahf
jecxz
loopne
or
push
xchg
cmp
or
pop
dec
add
jle
adcl
jno
jo
pop
sbb
lret
mov
mov
clc
jno
or
ja
sub
xchg
insl
lret
in
addr16
lea
mov
and
imul
cmp
data16
insb
xor
dec
lret
les
xbegin
fiadds
pusha
cli
sbb
sti
sub
or
jg
mov
aam
fwait
sbb
pop
xchg
outsl
xchg
cmpsl
aas
dec
mov
fmull
add
idivb
xchg
add
je
mov
add
aad
add
stc
imul
cli
mov
adc
mov
call
push
fists
bnd
jb
lcall
cs
inc
inc
pop
sub
or
xor
sti
cli
int
adc
pushf
rorb
test
xor
xchg
or
sub
add
call
mov
pop
sub
inc
dec
arpl
shl
push
or
outsb
mov
pop
lret
add
jns
cmc
jge
cmp
xor
sub
fwait
xor
xchg
inc
mov
in
cli
xor
sbb
arpl
cmc
add
xchg
fmull
or
scas
je
cltd
mov
hlt
stos
das
add
cmp
ret
pop
mov
xor
xor
imul
sbb
sbb
inc
pop
push
ss
test
xor
and
push
mov
lret
sub
and
add
repz
les
cmp
insb
push
fsts
pop
jl
add
pop
rolb
sub
movsl
jmp
add
cld
test
push
or
lods
sahf
sbb
or
in
call
fidivrl
aas
mov
out
jno
pop
sbb
pusha
les
or
or
xor
fdivrl
addb
loopw
or
inc
mov
adc
and
pushf
add
jbe
add
push
pop
xor
mov
mov
rcrb
jmp
xchg
arpl
inc
push
inc
dec
jl
or
inc
aas
sbb
mov
mov
mov
mov
shlb
xor
cmc
pop
ficomps
clc
ljmp
mov
lret
movsb
aas
jnp
sbb
cs
push
pop
xchg
xor
fcoml
pop
lods
jnp
enter
add
lea
in
out
sti
mov
wbinvd
in
loope
and
popf
push
hlt
testb
in
push
xchg
fldt
sbb
mov
movsb
add
ss
aad
mov
add
inc
adc
lret
shl
dec
add
dec
andb
xchg
shrb
stc
aas
fcompl
add
sub
movsb
xor
jo
addl
ficompl
xor
cmp
mov
inc
lcall
ja
clc
and
icebp
push
jmp
pop
mov
add
das
idivb
add
mov
or
push
mov
sub
push
lfs
mov
add
push
les
imul
sbb
xor
mov
mov
stos
pop
loope
pop
add
and
add
xchg
or
mov
sub
ret
mov
daa
fildll
sbb
inc
cltd
js
jae
jns
stc
pusha
add
leave
repz
or
daa
add
mov
mov
mov
insl
cmp
add
add
mov
cmp
mov
pusha
jns
testb
call
push
push
jb
stos
pop
pop
xorb
lods
clc
add
rcll
mov
push
stos
cmc
cmp
enter
add
test
mul
add
pop
or
out
and
addr16
push
push
adc
mov
lock
pop
sbb
sub
repnz
add
insl
fwait
or
xchg
roll
es
mov
shrd
outsb
add
pop
loope
add
dec
iret
stos
mov
xchg
mov
mov
add
jae
mov
cmp
lods
sub
xchg
pop
into
out
add
loope
add
cli
jnp
mov
mov
xor
in
xchg
jno
push
jg
add
sbb
xchg
jge
popa
xchg
add
andl
pushf
cmp
add
or
loope
lock
js
cmp
dec
cmc
clc
inc
hlt
jl
mov
jno
cs
add
cwtl
push
jbe
sub
stos
add
lcall
add
xchg
nop
lea
arpl
fxam
sub
adc
ret
jl
adc
dec
pcmpgtb
fdivl
shlb
dec
add
pushf
repz
xor
sbb
adc
int3
pop
cwtl
push
jae
das
mov
inc
mov
inc
add
stos
mov
pop
jg
add
push
inc
addb
pop
in
lods
add
imul
push
add
repnz
cmp
fstps
std
fwait
jne
outsb
add
lock
sub
aas
mov
bswap
xchg
push
push
add
mov
movl
add
push
das
movsb
cmp
sbb
test
add
lock
test
cmpsb
and
fldl
xchg
iret
test
cli
add
jp
xor
dec
jne
adc
lcall
mov
inc
out
add
pop
call
push
shr
ret
and
xchg
nop
fwait
mov
dec
push
pop
lock
in
int3
adc
inc
mov
adc
sub
dec
jno
mov
bound
imul
dec
incb
cmp
loop
loop
add
bound
insb
add
sbb
cmpb
xor
sub
xchg
es
jge
shlb
adc
cmp
ret
fildll
or
insl
outsl
inc
out
mov
dec
je
push
jecxz
repz
lcall
push
add
scas
shlb
add
mov
add
jg
add
pop
int3
cld
pop
aam
jns
adc
das
sub
xchg
cmp
mov
cmp
mov
mov
add
pop
adc
sbb
cmpsl
xlat
inc
push
mov
sbb
fisttps
pop
insl
addl
pushf
data16
stos
mov
push
sbb
xor
xchg
mov
xchg
xchg
shlb
sub
add
pop
mov
add
push
enter
std
loopne
dec
push
jg
rolb
fdivl
mov
add
pushf
pop
sbb
and
jl
xchg
add
sub
or
mov
mov
adc
mov
loopne
dec
add
jg
out
lock
incb
fnstsw
jp
mov
pop
xchg
push
add
mov
add
cmp
add
jmp
add
das
xchg
cmp
sub
add
or
arpl
cmp
call
add
lock
dec
add
dec
jp
inc
call
fimuls
jmp
xor
popa
fsubr
add
mov
dec
jae
add
int3
cmc
fwait
ret
shr
cmp
jecxz
int3
lods
cmp
cltd
lahf
add
ror
fsubrs
add
or
mov
loopne
add
sti
push
stos
pop
dec
add
fsubrl
and
add
aam
mov
push
adc
add
or
in
add
outsl
xor
inc
cmc
add
shrl
shlb
lods
push
mov
jecxz
push
mov
add
mov
and
leave
dec
out
add
pop
add
dec
push
bound
jp
popa
mov
pop
xchg
xchg
push
or
xor
mov
and
sub
jnp
mov
pop
test
stos
inc
shll
add
pop
lods
lds
mov
sub
adc
pshufw
jbe
adc
cmp
xor
add
and
mov
mov
iret
mov
push
mov
mov
jbe
pop
inc
scas
lods
inc
sub
ret
sahf
sub
addr16
add
lock
sub
sbb
loope
cmpsb
clts
cmp
sub
jl
ret
add
push
xor
push
insl
pop
and
fsubrs
in
cmp
mov
in
dec
dec
repz
ret
xor
xchg
and
aaa
stos
out
pop
dec
pop
mov
sub
xchg
cmp
pushfw
add
sarl
ss
push
out
mov
je
addb
adc
shll
jne
mov
jg
mov
push
and
cmp
jbe
outsb
adc
in
sbb
pop
push
mov
add
sub
in
sbb
out
cmp
int3
int
fadd
imul
stos
push
jo
mov
rorb
fidivs
sub
mov
mov
pop
clc
pop
filds
mov
test
pop
jae
leave
push
nop
popa
jl
mov
adc
mov
push
imul
pushf
dec
shl
add
inc
lds
inc
ret
inc
leave
xchg
call
jo
add
mov
sub
dec
push
pushf
add
lcall
add
or
mov
jbe
pop
xchg
pop
add
outsb
adc
test
dec
les
add
aam
js
mov
test
or
je
insb
push
hlt
xchg
jns
push
movb
and
dec
mov
jmp
push
in
xchg
mulb
cmpsl
es
push
fbstp
imul
xchg
lods
test
add
add
or
sbb
stos
xlat
add
sub
out
jbe
fildl
stc
aam
push
unpcklps
cmpl
incb
mov
aas
in
sub
add
push
jns
jecxz
xor
add
enter
push
loopne
add
mov
mov
push
and
xor
sub
inc
shlb
adc
loop
pusha
fcomps
popf
jb
ja
mov
mov
cwtl
jp
cli
jne
icebp
scas
push
cmp
xorb
roll
jo
rolb
dec
add
xor
and
daa
mov
clc
mov
dec
add
lods
mov
xchg
fdivrs
rcrb
mov
iret
fdiv
push
pusha
jo
js
pop
in
add
dec
fsubr
cld
imul
jb
test
out
push
fbstp
pop
sahf
lahf
or
jecxz
lock
add
add
add
mov
jmp
imul
punpckhdq
xor
lea
cmpsl
cmp
jmp
jle
fs
adc
mov
scas
rcrl
into
push
shl
mov
nop
mov
lret
shlb
mov
rorl
test
insb
aas
jno
lcall
popl
cld
faddp
in
mov
inc
rcrl
pop
ds
inc
cmp
add
jl
xchg
and
jp
add
inc
pop
sarb
and
lock
cli
sbb
jnp
loope
lret
xor
add
pop
stos
sbb
xchg
dec
imul
mov
sub
enter
mov
jp
lret
dec
mov
cwtl
add
lahf
mov
mov
ds
jmp
lcall
repz
mov
pop
sub
mov
jg
aaa
xchg
sub
std
push
loope
andb
adc
pop
pop
lahf
aad
mov
add
jbe
pop
add
mov
aam
xor
scas
into
push
adc
in
ret
out
call
jo,pt
push
cmpb
cltd
ret
push
add
xchg
shlb
hlt
sbb
add
dec
ret
mov
add
inc
sbb
inc
test
jo
add
inc
lahf
test
push
or
aam
into
pop
icebp
cmp
aaa
add
push
jg
test
inc
xchg
mov
sub
mov
dec
fucomp
jns
pushl
cltd
cmp
adc
add
xchg
adc
or
pop
mov
cmpb
xlat
scas
add
cwtl
ja
or
out
cmp
xchg
outsl
xchg
rorb
push
sahf
add
jmp
dec
jns
shr
jl
nop
sbb
icebp
repz
jle
dec
ja
add
lods
test
mov
adc
dec
mov
or
cmp
pop
xchg
loopne
mov
cmp
push
inc
ret
jle
fcmovnbe
pushf
pop
cld
xlat
pop
int3
mov
insb
add
jnp
cmp
inc
call
aas
fs
in
jb
mov
rclb
xchg
add
add
xor
test
insb
mov
ss
pop
sbb
add
inc
cmp
les
add
xchg
and
add
test
inc
add
dec
icebp
jbe
xor
and
jp
push
add
outsl
test
lret
dec
stc
jge
add
incl
in
mov
mov
cmp
and
adc
pop
cmp
movsl
add
rcrl
sub
mov
movsb
push
xchg
and
addb
sbb
sbb
shrl
mov
jge
clc
cmp
cli
push
add
fdivr
lock
scas
pushf
loop
xchg
or
and
andl
fldcw
popf
inc
dec
stc
iret
add
cmpsb
loope
jl
push
add
dec
mov
cli
mov
add
xor
push
fwait
rorl
pop
pushf
dec
mov
jb
add
mov
cmp
loope
inc
add
push
dec
ljmp
jbe
repnz
sbb
add
or
add
jecxz
pop
and
std
fdivl
lea
ret
dec
int3
xchg
leave
sbb
xchg
mov
add
rcr
dec
sub
jns
dec
sbb
pusha
pop
fdivrs
orl
and
add
fistpll
movb
int
mov
daa
addb
pop
push
cmc
incl
bswap
pushl
shr
mov
fmuls
sbb
add
sub
aas
push
adc
add
lret
pop
cmp
push
xlat
push
add
xchg
xor
cli
out
nop
add
lret
addl
loope
out
aam
nop
push
mov
mov
add
int3
or
cmp
push
jmp
je
lods
push
clc
cwtl
push
popa
test
cmc
test
in
mov
inc
dec
mov
add
cmp
fistps
push
js
ret
push
xor
ds
xchg
mov
std
popa
in
enter
sub
popa
mov
cmp
cmp
lds
loopne
inc
xor
adc
push
inc
insb
jo
outsb
rcrb
push
scas
gs
or
ja
add
fwait
xchg
mov
add
lcall
cmp
enter
ffreep
test
das
icebp
in
xchg
inc
ret
sub
aas
prefetch
or
ljmp
adcb
jb
mov
gs
xchg
sub
add
mov
imul
push
or
dec
nop
mov
aaa
pop
lds
inc
mov
add
push
sub
add
int
mov
mov
jb
push
add
jmpw
add
cwtl
scas
xor
ret
cmp
mov
xor
and
lods
dec
fcomps
add
fldt
test
inc
lods
push
and
xlat
sub
test
add
mov
cmp
xchg
jl
xor
sub
pop
push
mov
add
mov
jecxz
and
call
leave
add
je
lcall
in
push
lods
jo
ss
add
cltd
jnp
arpl
sub
test
add
mov
mov
cmp
mov
pop
mov
add
sbb
add
and
call
or
cmp
subb
sar
adc
cmp
mov
mov
add
lock
pushf
sarl
jge
sbb
mov
imulb
fildl
xlat
repz
or
adc
mov
test
mov
cmp
push
test
je
addb
notb
sahf
xchg
jp
jns
or
inc
cli
cwtl
pcmpgtb
cmp
dec
ss
xchg
pop
sub
out
add
and
sub
pop
shll
mov
or
mov
gs
repnz
pop
jns
add
push
mov
xchg
incb
xor
mov
mov
add
cld
push
jp
cwtl
in
add
mov
push
jne
pop
sbb
mov
pop
out
sub
pusha
sbb
lret
add
mov
insl
adc
cmpsb
aaa
sub
xchg
add
jmp
adc
je
jae
roll
inc
cmpsb
mov
and
add
rorb
push
or
dec
cld
xlat
add
mov
push
adcl
movsb
jge
stc
lock
pop
xchg
cwtl
push
or
jae
push
mov
or
call
xchg
jno
cmp
add
outsl
inc
nop
and
add
test
add
push
mov
leave
add
cmp
add
mov
add
mov
push
gs
add
mov
jb
flds
sub
mov
add
mov
pushf
mov
in
dec
add
dec
loop
and
jl
add
jbe
decb
mov
sarb
rcr
pcmpgtb
inc
notl
add
clc
mov
insb
add
aad
testl
mov
sub
sub
rclb
mov
add
xchg
ja
add
rolb
xchg
add
es
movl
scas
movsl
add
in
pop
pusha
sub
mov
dec
push
cmp
repnz
sti
sub
sub
cltd
adc
and
mov
inc
jg
pop
std
loop
add
cmc
fistpl
push
add
in
fistpll
sbb
sub
and
test
mov
push
add
outsb
sub
mov
cmp
notb
inc
lret
push
add
ja
push
cwtl
sub
adc
jmp
aam
repnz
comiss
out
lods
add
aad
loop
add
popa
adc
sahf
xchg
jmp
cmp
mov
xchg
add
cmp
push
inc
sbb
std
adc
int3
test
icebp
repz
add
push
push
mov
mov
jge
mov
and
sti
loope
xchg
test
les
adc
jle
ja
add
push
popf
push
pop
cmp
in
test
jo
add
movsb
pop
sub
aad
adc
jle
push
and
push
or
adc
mov
inc
rolb
int3
jbe
cmpb
dec
repnz
cltd
ljmp
sahf
mov
push
mov
mov
jns
pushf
add
push
add
mov
pop
mov
xor
push
shrl
dec
loopne
cld
push
roll
les
and
pushl
inc
movsb
or
call
bound
inc
nop
das
add
mov
dec
fimuls
mov
add
xchg
pusha
sub
cmpsl
push
add
call
mov
add
stos
mov
sub
dec
push
add
lret
mov
fstpt
icebp
sbb
add
pop
in
xchg
pushf
dec
add
or
jp
pop
sub
push
imul
int3
loop
dec
pop
inc
jno
xchg
andb
fs
repnz
xchg
roll
and
pop
mov
add
jecxz
sbb
cmpl
lcall
cs
fs
add
bound
sub
push
subb
jno
add
rclb
cmp
sbb
and
lahf
test
imul
lret
xchg
mov
cmp
shll
or
mov
pop
inc
push
push
divb
cltd
dec
out
dec
mov
mov
jns
cmp
and
pushf
sbb
shl
outsb
ret
pop
and
add
xchg
jg
push
out
hlt
insl
lret
add
aaa
xchg
push
push
scas
mov
jns
mov
leave
fidivrl
je
add
pop
or
loopne
clc
fwait
sti
add
adc
adc
sub
out
adc
mov
add
cmpsl
add
or
addl
pop
test
mov
cmp
xor
jle
pop
add
imul
sbbb
dec
mov
adc
test
subb
add
das
fidivl
mov
mov
icebp
adc
cmpsl
dec
pop
xchg
out
stos
push
push
add
addb
push
sub
inc
js
pop
and
dec
cmc
jae
fwait
inc
leave
cmp
js
mov
ret
pop
xchg
and
jge
shll
je
loope
repz
lods
dec
movsl
call
icebp
push
mov
add
pop
in
add
arpl
pop
testl
sbb
cmpsb
cmp
arpl
jg
jno
xor
jmp
repnz
fisubs
xor
mov
stos
sub
aas
lds
leave
je
cld
fisttpl
les
fwait
icebp
out
jge
pop
mov
or
ret
inc
out
cmpsl
hlt
cmpsb
lret
out
jecxz
mov
lods
leave
inc
roll
andl
mov
xchg
mov
xchg
jb
repz
pop
mov
add
jbe
insl
push
add
mov
pop
xchg
lock
incl
repnz
or
mov
loope
xor
out
add
leave
std
sub
lahf
out
insb
add
fcomip
lods
lods
push
mov
pop
mov
stc
pop
push
xor
xchg
shl
add
jle
cltd
out
xorl
add
clc
cwtl
mov
lds
xor
cmp
add
or
add
loop
ret
jne
xchg
adc
dec
mov
mov
jle
push
out
xchg
xor
call
mov
dec
adc
mov
insl
sub
add
jp
ret
pop
jno
movsb
clc
and
pop
shlb
lcall
in
mov
fstpl
int
pop
adc
push
cwtl
cmpsl
add
mov
fnstsw
int
sub
jns
pop
dec
lcall
push
packsswb
add
sahf
popf
ss
push
add
clc
or
or
in
mov
inc
js
or
mov
mov
clc
sbb
cmp
mov
push
test
add
cmp
aam
xchg
add
sub
push
repnz
je
add
and
cmc
int3
add
jl
mov
mov
add
or
lret
inc
inc
loop
and
xchg
inc
push
nop
jbe
and
shll
out
push
dec
into
add
gs
pop
mov
cmp
and
inc
push
lock
sub
cltd
in
pop
cmp
test
in
pop
aaa
add
sub
insb
pop
and
test
jbe
fs
roll
sbb
add
push
bound
xchg
in
or
push
xchg
and
fldl
mov
and
mov
mov
sub
xchg
nop
mov
jecxz
loop
adc
es
mov
inc
inc
int
push
icebp
push
cmp
inc
adc
xlat
add
cltd
push
icebp
cmp
sahf
mov
ljmp
fwait
out
and
xor
inc
call
or
jecxz
mov
movsl
in
out
fwait
add
addr16
cmp
mov
add
push
sbb
xchg
lock
cmc
push
test
add
sub
imul
and
dec
int
mov
cwtl
inc
inc
inc
push
pop
frndint
dec
adc
imul
adc
inc
ds
jo
ljmp
cmp
mov
or
cmpsb
adc
subb
inc
cmp
arpl
sbb
addr16
into
roll
scas
and
in
fisttpll
das
xchg
sahf
inc
loope
pop
outsl
mov
push
js
aad
sub
inc
push
sbb
loop
adcl
inc
sub
stc
mov
jbe
setle
aam
sub
inc
inc
andb
mov
sbb
enter
mov
push
cmp
call
and
xchg
gs
adc
mov
pop
sbb
pop
rol
repz
popf
or
sub
inc
fmul
push
inc
sub
sub
mov
or
push
jne
and
jg
imul
adc
addl
add
aam
or
inc
enter
ljmp
and
adcl
xor
mov
add
aam
fisubs
sbb
xchg
clc
rcrb
mov
and
adc
in
sub
subl
mov
sbb
pop
push
inc
mov
sbb
mov
sahf
insb
pop
mov
cmpsl
pop
lret
jns
sbbb
in
add
xor
push
movsl
xchg
call
aaa
addb
ja
jno
xor
pusha
xor
lock
sbb
mov
jmp
xchg
loop
jo
and
xchg
call
inc
leave
fcomp
or
and
or
push
adc
sbb
add
push
dec
inc
testb
push
pusha
mov
add
pop
andb
aam
pop
pop
popf
decb
test
test
sub
inc
and
enter
inc
sub
cld
dec
sub
pop
sub
pop
add
cmp
inc
mov
adc
push
inc
pop
out
addps
xor
mov
nop
or
add
incl
mov
sahf
cmpsl
and
sbb
add
xchg
add
lds
lock
adc
shl
inc
sub
cmp
pop
adc
mov
sub
lock
imul
iret
jno
mov
add
or
inc
popl
and
fidivs
mov
ret
mov
je
rcrl
jae
lahf
pushf
fnstenv
jae
addl
dec
hlt
mov
lret
jnp
adc
lock
nop
in
cmp
inc
cmp
je
sbb
pop
xor
add
inc
push
in
sahf
xchg
and
dec
and
out
push
popa
das
cltd
test
adc
arpl
dec
and
and
outsl
inc
sbbb
inc
mov
dec
iret
push
adc
enter
addr16
es
add
pop
lret
stc
cmp
xlat
pop
mov
sti
push
daa
mov
sbb
xor
rclb
inc
jl
lods
pop
ret
mov
mov
ret
hlt
test
add
and
add
xchg
pop
test
dec
daa
sbb
sbb
andb
data16
mov
ss
inc
int3
imul
add
inc
enter
loopne
push
jo
inc
les
cwtl
shl
adc
or
and
push
jp
repnz
lock
gs
pop
inc
and
pop
fldenv
mov
lcall
test
or
xor
loop
call
add
ljmp
sti
pop
out
aas
imul
push
shrl
addb
mov
adc
cmp
js
push
andl
adc
jp
cmp
test
mov
inc
inc
xor
dec
jmp
jbe
inc
inc
pop
sti
incb
mov
mov
cltd
pmulhw
sbb
adc
xor
lds
dec
dec
sbb
lds
mov
xchg
dec
repz
xchg
dec
and
mov
outsl
or
sbb
inc
or
dec
movsb
or
pushf
adc
inc
jno
cltd
or
mov
pop
add
mov
loopne
mov
jp
dec
fsubrs
dec
mov
or
or
stc
es
mov
push
test
lock
lods
sub
pop
add
jo
jle
inc
and
dec
inc
pop
sub
pop
or
cmp
adc
cwtl
fwait
pop
insl
and
push
add
rolb
cmp
aam
mov
pop
fcompl
jb
mov
es
add
xchg
test
subb
mov
push
es
lahf
mov
pop
outsl
inc
sbb
fwait
xor
es
lret
or
mov
shll
leave
mov
adc
rdmsr
fwait
loopne
test
adc
imul
push
inc
sub
js
sub
fsubl
in
xor
mov
dec
xchg
adc
push
cmpsb
ret
pop
es
mov
mov
add
xor
fdivs
push
sbb
add
sub
push
ret
lret
sbb
push
push
sub
popa
mov
cwtl
fs
adc
test
xor
xor
xor
or
adc
mov
cmp
in
aam
bound
mov
dec
push
movsb
imul
sti
adc
or
pop
iret
fiadds
cmp
xor
jo
aad
les
cli
adc
fcoml
jno
sahf
scas
mov
ficoms
and
rcrb
jno
fwait
iret
fstpl
xor
cmp
test
jo
cmp
and
loope
sbb
into
xor
call
cmpsb
ficoms
movsl
pop
mov
and
inc
jo
shrl
mov
enter
dec
mov
and
imul
mov
push
verw
or
insb
je
cmp
sbb
and
nop
mov
and
test
xchg
and
adc
add
out
and
dec
fcoml
stc
dec
sub
enter
dec
inc
pop
inc
xor
std
dec
mov
and
shrb
sbb
xchg
adc
dec
xor
test
test
cmp
jl
pop
dec
fstps
push
mov
out
es
mov
mov
mov
sub
inc
mov
scas
adc
sbb
pop
std
sub
and
mov
lahf
roll
mov
xor
out
jge
ljmp
mov
mov
jecxz
inc
std
cld
frstor
ja
sbb
adc
cmpsl
sbb
ficoml
xor
jl
push
sbb
in
xchg
mov
call
inc
hlt
inc
pop
into
nop
add
mov
imul
inc
pop
out
sub
lock
in
jno
lcall
in
test
inc
test
out
loopne
fs
adc
pop
mov
cmp
push
stc
insb
inc
mov
das
loopne
cmpsl
mov
rcrb
add
out
outsl
pop
shll
es
fbld
nop
repz
or
je
into
lahf
add
fnstenv
push
xor
nop
daa
stos
hlt
adc
pop
lock
pop
neg
leave
pcmpeqd
cmp
and
cmpb
or
sbb
mov
popf
jle
cmc
mov
dec
mov
mov
sbb
ja
mov
xchg
in
iret
push
loopne
pusha
les
dec
les
add
aam
testl
sti
out
dec
pop
clc
sarb
addb
fldenv
mov
adc
pushf
pop
in
mov
int3
xor
fisubrl
jge
jge
push
jle
nop
aam
jno
or
mov
adc
cmp
add
nop
jg
fdivl
rcl
adc
mov
and
add
cmp
inc
in
arpl
leave
adc
adcl
ficoml
das
add
nop
rcrb
sub
or
addb
fsubr
inc
push
pop
pop
rcrb
add
andb
pop
xor
push
pop
cmp
push
xlat
lock
cli
dec
sbb
shl
mov
mov
call
and
sub
mov
iret
or
pop
nop
fisubrl
xor
jmp
add
add
sbbb
lds
and
sub
mov
cmp
jle
icebp
xchg
jp
fwait
inc
bound
pushl
sub
adc
loopne
and
jl
add
lock
aas
inc
xor
inc
adc
xor
add
stc
jmp
pop
add
aad
xchg
mov
lret
pop
jns
enter
int
jge
in
repz
cmp
sub
mov
add
sbb
jecxz
je
add
jg
das
adcb
inc
add
cwtl
dec
add
xor
sbb
jmp
pop
mov
jnp
mov
adc
nop
pop
popf
pop
jp
sub
add
insb
push
es
shlb
push
daa
and
inc
mov
sbb
jl
addb
mov
andl
jno
out
imul
sub
cmp
pop
add
cmp
loope
push
xchg
lret
add
push
call
push
inc
sbb
ficompl
fnsave
lods
cmpb
mov
pop
das
ret
add
cmp
add
lods
je
sbb
cld
test
pop
jmp
sbb
das
add
or
xor
add
out
cmc
mov
add
clc
push
add
xchg
fmuls
mov
cwtl
shrb
or
pop
adc
add
and
mov
cmp
imul
pop
jb
das
sub
decb
dec
or
xchg
and
cli
xchg
out
insb
ficompl
nop
sub
and
arpl
xchg
mov
repnz
into
jnp
clc
mov
fadds
testb
je
dec
cmc
test
xor
add
sub
xchg
sub
inc
arpl
add
fdiv
shlb
add
sar
daa
cmp
test
add
dec
lcall
xchg
addr16
or
pop
push
jne
jno
cmp
loope
js
lahf
lock
xor
int
jb
mov
jae
mov
push
jno
add
sbb
push
sbb
xchg
out
add
ljmp
test
leave
mov
mov
inc
pop
pause
dec
imul
push
inc
sbb
push
push
xor
into
filds
mov
stos
adc
add
mov
shlb
mov
add
push
add
pop
add
xor
movb
fisubs
and
xchg
xchg
add
shlb
sbb
cld
dec
mov
icebp
mov
rorb
xor
inc
jl
xlat
loop
outsl
add
lcall
int3
xchg
and
in
sarl
fcmovb
mov
push
aaa
add
cmpsl
and
or
das
cltd
scas
mov
ja
jns
xor
bound
cmpsb
xor
js
pop
lods
rcll
jge
in
repz
daa
inc
in
shl
inc
stos
push
call
add
push
jmp
add
mov
add
leave
movsl
es
aaa
add
inc
lret
notl
nop
mov
mov
xor
jge
popa
adc
imul
idivl
inc
mov
xchg
pop
add
dec
insb
mov
mov
adc
jo
hlt
sbb
or
push
in
add
xchg
add
es
add
inc
xor
jl
xchg
add
sahf
pop
lahf
and
mov
outsb
cmp
jg
sbb
ss
xchg
jb
add
ljmp
lods
insl
jg
pop
mov
jbe
sbb
add
xchg
mov
add
dec
jmp
push
inc
fdivrl
add
std
daa
pusha
mov
sub
repz
dec
add
xchg
pop
faddl
mov
inc
xorb
mov
push
cmp
push
inc
rcll
cs
repz
xchg
dec
inc
pop
mov
mov
mov
xchg
div
punpcklwd
push
fildll
add
ds
repz
and
mov
cmp
ret
sarb
jle
leave
xorb
jp
add
inc
mov
into
pusha
sbb
add
sub
std
add
add
in
movsb
or
jecxz
push
clc
push
pop
inc
int
jae
movsb
enter
add
imul
mov
or
sbb
aam
push
sbb
ss
ret
cld
jge
in
aaa
push
ja
push
sbb
test
push
andb
rolb
and
dec
inc
add
ljmp
cmp
shl
das
add
shlb
mov
push
mov
ret
mov
inc
ljmp
cmp
mov
fstp
add
pop
mov
sub
les
into
add
fimull
push
int
xchg
aam
cmp
addb
jo
out
add
dec
mov
mov
loop
or
dec
sub
fimull
adc
test
enter
ds
push
sbb
pusha
sbbb
cmp
jp
mov
add
xor
sarl
xchg
inc
in
push
push
fistpl
jns
sbb
push
xor
clc
repnz
mov
pusha
ljmp
enter
and
inc
pop
movsl
xchg
pop
xchg
insl
js
add
dec
aad
lds
mov
out
xor
pop
scas
sti
dec
or
divb
pop
jle
cmp
cltd
add
pop
mov
sub
mov
add
sub
fildll
jae
cmc
add
add
leave
jl
call
sub
orl
sbbb
mov
dec
imul
add
negb
jmp
insl
add
sub
sbb
mov
sub
fidivl
sbb
adc
pop
mov
pop
rclb
inc
jmp
testb
cmp
cmp
mov
insl
or
add
movsl
test
add
jae
scas
or
add
jl
mov
rclb
add
or
ja
add
dec
aad
jnp
repz
add
dec
arpl
push
ret
push
or
test
ja
cmp
adc
inc
mov
cmp
add
and
cltd
dec
add
sbb
push
add
mov
jnp
add
lea
in
testb
add
mov
push
or
sbb
pop
xor
pop
jbe
sbb
in
sbb
mulb
repnz
sbb
cmp
adc
ljmp
loopne
xchg
add
in
xor
aas
sub
fwait
xor
add
andb
adc
mov
jae
iret
add
test
add
fs
icebp
pop
add
and
test
add
xor
sbb
mov
sub
and
popl
cmpl
inc
sub
adc
push
pop
ljmp
nop
jno
add
ss
aaa
inc
mov
add
pop
mov
mov
xlat
sub
repnz
in
and
cwtl
sub
cmc
cmp
add
shll
in
jmp
add
xchg
daa
pop
std
es
mov
sahf
insb
popf
dec
adcb
cmpl
pop
rclb
movsb
add
outsl
test
jns
add
mov
push
dec
in
inc
and
sub
dec
and
xchg
pop
add
adc
jmp
aad
out
pop
push
mov
inc
mov
lcall
xor
test
cmc
and
cs
sbb
shrl
xchg
movsl
outsl
dec
add
ror
rolb
cmp
push
cld
ss
cmp
cmpsl
mov
inc
add
mov
sbb
push
pop
and
out
inc
daa
pop
mov
mov
pop
mov
shrl
add
rolb
inc
push
pop
mov
outsl
add
das
jns
push
les
mov
pusha
mov
push
push
ja
lcall
dec
in
leave
push
mov
sbbl
ljmp
jle
add
test
add
xor
push
add
and
clc
addl
dec
loope
mov
sub
push
push
sbbb
addl
mov
fsubrl
cmp
outsl
and
xchg
rclb
lahf
adc
sbb
pop
ja
lods
xchg
sub
je
add
fs
sub
push
and
aas
subl
mov
sub
adcb
add
sbb
and
pop
popf
cmp
pop
jp
inc
stos
shll
add
data16
push
xor
add
adc
add
or
mov
or
fwait
add
ficomps
and
jle
pop
dec
add
enter
jge
inc
add
ss
roll
and
and
in
add
mov
pop
pop
es
in
popa
xlat
aam
cmp
or
xchg
incl
outsl
sub
jge
add
pop
mov
adc
hlt
sub
rolb
data16
add
bound
addr16
add
add
add
shrb
ja
pushf
mov
pop
cmp
sbb
push
popa
and
ds
pop
push
lea
cmp
movsl
sub
mov
inc
ret
mov
inc
add
and
push
pop
fmuls
pop
movb
and
das
loop
unpckhps
sti
jae
and
addb
adc
fidivrl
add
aam
lods
dec
lahf
addb
add
add
mov
xor
outsl
dec
sbb
mov
int
add
jg
cwtl
jle
add
xchg
hlt
fiaddl
loopne
sbb
add
pop
adcb
push
rcrl
call
cmc
or
mov
fpatan
insl
jno
jns
rol
loopne
bnd
ret
push
and
aas
pushf
cwtl
or
add
xor
pop
in
aaa
jmp
scas
inc
in
ret
sub
test
dec
fiaddl
test
loope
in
xlat
call
nop
hlt
mov
loope
adc
lahf
leave
pop
or
add
push
sbb
mov
pusha
sub
mov
inc
pop
movsl
cmpsb
les
clc
jb
jg
cli
mov
and
push
pop
mov
inc
cmp
call
stos
lods
int
xchg
cltd
or
adc
loope
hlt
jg
lock
stos
fs
sub
fcomps
push
sbb
sub
enter
inc
push
filds
jle
add
ja
fstpt
pop
or
jo
add
push
inc
fistps
add
enter
cmpsl
cs
mov
xchg
aad
add
add
pop
fsts
mov
aas
push
jns
pusha
add
dec
xor
sub
push
mov
cltd
sub
push
cwtl
jl
lahf
test
cs
inc
sahf
cmp
int
jno
cmc
andb
insl
xorl
cmp
sub
or
sbb
iret
pusha
loope
out
movsl
push
test
push
xor
push
sub
std
mov
fadds
add
cmp
sub
enter
movsb
mov
push
ret
inc
lret
or
mov
dec
xchg
call
xchg
cmp
imul
cld
bound
inc
jp,pn
jg
add
jb
mov
add
inc
arpl
cmp
loopne
ds
fchs
jns
adc
lahf
dec
mov
dec
add
sub
call
xor
cmp
mov
sub
pop
clc
inc
fisttpl
xchg
lahf
sbb
cmpsl
and
and
inc
andb
idiv
mov
pop
in
jge
sbbl
jo
mov
pop
loop
push
or
push
adc
insb
call
rorl
push
sub
jo
push
mov
loop
sti
clc
lds
out
xor
sbb
es
and
rclb
das
rolb
in
add
xchg
add
sub
mov
dec
xchg
jmp
jo
mov
pop
daa
orl
add
addb
add
pop
add
xor
mov
data16
fcom
mov
ss
lods
or
ds
inc
mov
fs
insl
add
cmp
push
push
popa
jmp
filds
push
add
bnd
int3
jmp
in
xor
filds
xor
jp
xor
push
mov
cmp
pushf
aad
loopne
sub
rol
repz
cmp
cwtl
jbe
jb
scas
cmp
divb
add
push
mov
aas
iret
jb
dec
sidtl
ja
inc
push
mov
fisubl
dec
sbb
imul
cmc
insl
movsl
or
add
loop
mulb
inc
js
jecxz
fisttpll
setp
clc
xor
enter
push
outsl
rclb
out
movzbl
aam
movsl
imul
dec
xchg
adcl
andb
or
sub
int
add
ss
leave
lock
loopne
add
mov
fwait
out
cmp
add
sbb
in
pxor
jbe
jle
add
ja
inc
es
pop
jmp
mov
pop
push
rclb
add
aam
or
mov
sarb
add
add
xchg
popa
mov
jo
sbb
scas
add
int3
jg
paddb
add
xchg
mov
nop
jbe
and
in
push
rcrb
jne
loopne
cs
sbb
or
sub
mov
sub
sbb
add
test
inc
rclb
pop
cltd
inc
mov
out
jl
pop
jo
sbb
subl
iret
push
into
fwait
and
inc
add
pop
fsubrs
dec
sti
scas
pop
pop
sub
inc
lcall
add
push
test
int3
cwtl
sub
lret
add
into
je
cmpsl
rorb
jne
or
push
movsl
mov
inc
and
shl
mov
dec
cmp
cld
arpl
mov
inc
clc
xchg
es
add
sbb
sub
fcomps
push
add
dec
out
xchg
pop
arpl
sti
mov
jle
lock
dec
push
das
jnp
repnz
add
add
sbb
notl
inc
arpl
pop
aam
add
mov
or
jae
xor
int
ss
and
out
jbe
add
mov
sub
les
jecxz
mov
clc
add
fldt
xor
and
ror
xchg
dec
pop
ja
add
imul
mov
fwait
xchg
ss
pop
push
scas
mov
push
and
add
ret
mov
cltd
xchg
push
pushf
subb
ds
call
cmp
adc
test
cs
add
mov
call
outsl
ret
jne
jle
xchg
add
and
add
push
jecxz
push
or
sub
fstpt
add
sahf
cmp
mov
into
jbe
mov
testb
insb
push
xor
mov
cmp
xchg
cwtl
dec
adc
les
ds
pop
jp
mov
scas
orl
loope
push
or
push
in
stos
cmovno
mov
pop
loopne
jb
cmpb
movsb
sti
mov
rcrl
mov
dec
inc
bnd
xchg
hlt
lea
pop
add
shrl
dec
incb
into
cmp
pop
pusha
or
loop
lret
adc
icebp
sbb
repnz
sub
add
test
jnp
mov
xchg
cmp
inc
dec
je
fbstp
cwtl
or
adc
addb
loope
jnp
outsl
pushf
add
xor
xor
pop
inc
iret
fisttps
std
out
rorl
push
lods
jae
add
data16
mov
pop
fldl
mov
and
pop
pushl
adc
lods
or
je
mov
mov
mov
ds
pmulhw
pusha
popa
sub
je
js
xor
stos
jp
add
inc
and
mov
shlb
dec
sti
jge
cld
mov
add
inc
jne
mov
in
aad
mov
or
test
pop
xchg
or
cmp
cmc
lock
sbb
or
rclb
add
add
ret
lret
mov
jge
sbb
mov
adc
aad
pop
insl
cwtl
repz
jl
mov
sbb
orb
jb
add
cmp
repz
push
cmp
cli
andb
enter
add
push
int3
mov
je
imulb
jecxz
addl
cmpsl
imul
sbbl
push
dec
mov
sbb
repz
loopne
sbb
pop
or
push
cmp
mov
jns
mov
clc
rclb
dec
sub
clc
scas
andl
jge
and
outsb
add
mull
movsb
imul
movsl
xor
and
xor
add
xchg
sub
and
adc
out
shl
xchg
nop
insb
clc
jb
sahf
add
cli
sub
xlat
cmp
and
sub
xor
jge
adc
dec
jae
in
enter
xchg
jbe
push
gs
mov
sbb
cwtl
stc
add
mov
pop
add
psrld
xchg
ret
sub
xchg
cmp
and
mov
jnp
pusha
sub
out
mov
out
das
push
cmp
push
leave
mov
outsl
call
test
lcall
loop
das
cmp
out
dec
mov
xchg
xchg
inc
int
xor
addr16
sbb
jmp
lock
cmp
jae
add
push
push
mov
in
push
xor
cli
add
push
std
sbb
popa
cmpsl
add
push
sub
pop
pop
xchg
sub
jns
add
mov
popf
jp
out
push
cmp
imul
rorl
pop
mov
ja
clc
cltd
jg
lret
out
push
add
adc
mov
pop
rcl
punpckhdq
adc
xchg
add
add
cld
aam
hlt
and
clc
icebp
dec
aas
pop
add
mov
cmp
insl
or
or
push
ret
cs
insb
loop
cwtl
enter
ss
push
sbb
ret
dec
add
sbb
les
mov
xchg
je
mov
xchg
and
or
sti
sbb
test
add
push
push
push
and
adc
add
aas
scas
inc
pop
ret
add
adc
mov
add
and
out
push
lods
push
add
and
daa
arpl
es
test
sahf
and
aam
mov
jae
and
add
fdivrp
dec
mov
inc
lret
mov
sbbb
pop
mov
dec
shll
push
in
pop
roll
bound
mov
nop
xchg
jb
dec
or
xchg
lret
call
jnp
dec
cmpsl
ret
pusha
add
movsl
mov
dec
inc
jbe,pn
imul
mov
ss
xor
jg
jo
lock
add
insb
adc
pop
ret
cwtl
js
add
cli
movsb
add
jp
out
add
inc
mov
mov
mov
icebp
inc
in
xor
shld
fmull
and
push
insb
push
jns
add
and
dec
cmp
jp
add
fadds
cmpsl
mov
or
cmp
and
or
popf
mov
sub
int3
add
sbb
xchg
push
js
pop
sbb
xor
adc
mov
addr16
xchg
add
sbb
js
xchg
add
lock
cmp
loopne
gs
cmp
mov
sbb
arpl
scas
call
push
das
std
xor
cmp
cmp
push
add
sub
jg
lods
int3
aas
add
mov
cmp
mov
incb
and
je
add
xchg
cmc
popa
pop
mov
xor
cmp
mov
lock
cmp
orb
repnz
dec
jecxz
push
or
pop
pop
mov
and
fisttpl
call
cmp
ds
jne
data16
add
sahf
stos
cmpsb
dec
std
lcall
add
mov
loop
pop
add
push
jmp
test
push
add
pop
jne
jle
add
outsl
fisttps
popa
icebp
sbb
push
out
push
stos
jge
call
adc
adcb
push
add
call
lahf
in
cli
add
fcmovnbe
mov
test
dec
lods
popa
add
aaa
shrl
xchg
jb
push
in
and
ja
inc
mov
movsb
aas
or
or
aad
mov
in
les
mov
sbb
loop
or
mov
xor
push
pusha
pusha
out
adc
jp
popf
add
test
jle
out
lcall
jge
sbb
inc
lea
leave
mov
pop
inc
cmpsb
or
xor
popa
xchg
incl
or
rol
in
adc
sub
sub
cmp
sub
mov
fistl
adc
or
ficoml
popa
lds
xor
mov
ret
out
push
jns
pop
lods
and
cmp
fsubp
rcrb
or
pop
mov
dec
aaa
scas
jne
pcmpeqd
xor
inc
ljmp
xor
sti
dec
fildll
jbe
lret
cld
mov
fiaddl
pushf
imul
adcl
call
dec
cs
add
xchg
lds
add
inc
add
push
xlat
mov
sti
or
add
test
push
addb
out
aam
jae
inc
xchg
and
rolb
fadds
add
xchg
leave
and
cmp
push
cmp
xchg
or
fisubrl
je
pushf
add
mov
clc
adcl
js
loopew
test
add
scas
loopne
mov
call
add
pop
pop
inc
mov
dec
jb
push
adc
call
btr
cmc
mov
cmp
js
adc
jnp
aam
or
add
xchg
adc
lret
ds
mov
ja
mov
sahf
inc
push
sub
sbb
add
inc
push
ficoms
je,pn
adc
jb
cwtl
test
ret
std
push
cmpsb
adc
add
adc
xor
add
dec
mov
adc
jecxz
cltd
cmp
xchg
test
push
inc
sti
imul
pcmpeqd
sarb
stos
pop
mov
push
jbe
and
push
incb
fwait
xchg
cwtl
in
mov
lcall
xchg
inc
add
iret
mov
mov
add
pop
cmp
decl
dec
add
icebp
dec
ret
sub
aad
mov
test
mov
mov
test
divb
shrl
push
add
fldcw
pop
les
lret
sar
dec
jne
sbb
ret
sbb
loopne
xchg
mov
shrb
adc
sub
mov
out
lcall
es
cmpsl
aaa
add
mov
lahf
sahf
orb
ret
inc
jmp
lahf
shr
test
filds
insl
mov
sti
mov
dec
pop
add
and
mov
cld
sarl
cmpsl
and
cmp
ss
addr16
into
out
mov
cli
cs
rcl
int3
out
add
call
pop
pop
add
push
mov
or
dec
push
aam
mov
mov
popw
sbb
fisubl
sbb
push
cmp
xchg
nop
cli
mov
adc
mov
xor
ds
subb
and
lds
or
jp
loopne
sbb
ror
and
mov
outsl
mov
cmp
call
out
movsl
and
pop
jg
lret
icebp
daa
push
inc
pop
cmp
jp
push
jo
nop
aam
add
call
push
movsb
add
fildl
aam
and
pop
add
jnp
xor
and
popa
or
add
mov
push
lea
imul
jo
xor
add
pop
inc
ret
mov
adc
mov
mov
add
add
add
or
add
push
jb
mov
fs
popa
lods
fstpl
sub
test
push
add
push
mov
lds
push
xchg
pop
xchg
incb
mov
icebp
or
or
aad
push
inc
cmp
xchg
pop
mov
add
hlt
ljmp
je
xor
repz
mov
ror
push
sahf
push
xchg
add
jl
aam
add
or
dec
divb
add
pop
stos
mov
std
lock
fs
loopne
push
insb
push
pop
push
int
pop
icebp
mov
cmp
add
shlb
enter
aaa
xor
clc
popf
hlt
add
aad
cmp
pop
ljmp
push
lret
pusha
rcrl
mov
hlt
fwait
rcrb
and
mov
fisubl
mov
cmpsb
xlat
ret
shlb
pop
loop
xchg
lods
mul
mov
imul
add
gs
arpl
add
inc
push
xor
pop
sbb
loope
mov
mov
dec
and
cwtl
push
pop
inc
push
cmp
xchg
stos
add
fnstenv
fs
add
lock
loope
sub
pop
pop
popf
inc
inc
movsl
cmpsl
add
test
fs
es
scas
cmp
imul
xor
outsb
fnstenv
loopne
add
fsubrs
sete
add
sbb
aam
xlat
cmp
movb
test
stc
cmp
dec
cltd
shll
lret
out
jne
testl
shll
rcrb
add
repnz
adc
mov
add
mov
inc
popa
xlat
and
jp,pn
sub
add
adc
in
rcrb
push
add
leave
jo
mov
inc
push
js
add
pop
shrl
cmc
mov
add
sub
roll
test
sub
jmp
hlt
cmp
push
xor
outsl
dec
add
and
mov
jg
pop
inc
and
std
outsb
pop
push
testl
jbe
xor
or
adc
mov
arpl
pop
test
lahf
mov
or
add
stos
int
jle
or
push
pop
je
and
call
popa
rclb
or
js
push
mov
jne
hlt
push
mov
je
xor
pushf
adc
sbb
imul
push
add
fisubl
popa
or
cld
ret
add
mov
movsb
xchg
into
xor
cmp
sbb
add
xor
add
inc
inc
add
pop
jmp
adc
ds
shlb
in
push
pop
inc
push
adc
scas
cwtl
jno
add
mov
ret
pop
sub
das
and
push
es
jl
data16
jmp
cmovs
mov
movsb
mov
mov
mov
pushf
mov
iret
xlat
lods
sub
sub
negl
inc
or
cmpsl
add
rorb
rcpps
pop
cmc
pop
mov
in
add
cmp
mov
mov
cld
aam
inc
lds
stos
movsb
cmpsb
xchg
sub
sahf
mov
jge
cmp
cmpb
mov
outsl
loope
fnstenv
js
dec
xchg
jmp
sub
add
in
leave
cmp
pusha
push
add
inc
flds
add
pop
xchg
nop
inc
ret
gs
fiaddl
xchg
mov
mov
insl
xchg
or
fnsave
add
ljmp
and
incb
cmc
imul
shrl
subb
adc
dec
enter
mov
mov
insb
pop
push
and
and
xchg
insl
movsb
int
in
out
add
scas
cltd
enter
std
and
adc
jns
jb
lock
inc
jno
cwtl
sti
cmpsl
add
add
shll
inc
popa
add
dec
push
add
in
in
inc
in
xchg
stos
xchg
cmp
add
out
dec
add
push
pop
fcoml
xchg
add
jp
lcall
jnp
hlt
nop
call
jmp
dec
ds
add
fs
mov
or
lcall
lods
and
rolb
fwait
add
addl
push
adc
popl
lahf
imul
js
add
ja
sti
mov
nop
repnz
cmp
mov
xor
cmp
shr
ret
inc
mov
int
in
and
or
xor
int3
test
jno
inc
inc
ss
imul
pop
xchg
jle
testb
pop
les
lcall
mov
add
push
pusha
jmp
jns
push
movsb
aam
inc
cs
pop
popa
add
test
adc
stos
add
imul
or
lea
add
xchg
ljmp
sbb
inc
cmp
pop
mov
add
outsl
and
sub
xor
mov
add
out
jno
hlt
out
pop
ss
lds
xlat
ret
mov
sbb
sahf
add
mov
jl
cmp
sbb
mov
cmp
fwait
andb
rcrl
or
mov
stc
mov
push
push
out
add
shlb
add
mov
xchg
push
in
add
and
imul
cli
mov
sbb
mov
add
add
cs
xor
inc
aaa
push
sbb
push
pop
dec
lea
lock
call
cmpsl
dec
pushf
rcl
mov
add
not
call
nop
add
xchg
clc
push
orb
daa
inc
jge
push
repnz
outsb
leave
cmpsl
xchg
es
xor
addr16
pop
jl
sub
adc
mov
or
sbb
faddl
mov
mov
add
lret
les
mov
dec
inc
pushf
sub
add
push
sbb
pop
xor
dec
or
ret
jge
es
sbb
push
adc
aam
jne
lcall
mov
and
outsl
push
push
jge
roll
add
aaa
cmpsl
int3
stos
sub
push
lods
outsb
rorb
cmp
sub
xchg
clc
xor
add
sbb
inc
ret
mov
mov
push
dec
enter
inc
jle
sbb
lods
and
pop
add
popf
jmp
jle
add
les
pusha
cmpb
mov
adc
mov
and
lods
hlt
fistps
insb
popf
inc
mov
fstl
roll
imul
shlb
adc
push
es
jl
dec
dec
inc
rcrb
push
pop
mov
fwait
mov
dec
and
jg
push
add
js
xor
push
xchg
push
hlt
frstor
jl
add
sahf
in
pop
or
sti
pop
dec
idivl
add
lods
xor
add
addb
loop
add
test
rcrb
mov
fwait
add
add
add
jp
mov
aam
adc
inc
test
dec
movsl
dec
lods
add
int3
test
add
adc
adc
inc
mov
fwait
bound
push
cwtl
and
jl
and
cmpb
inc
jecxz
xor
jp
xchg
adc
cmp
add
lret
dec
mov
pop
push
push
in
mov
push
add
sbb
jo
popa
aam
add
shl
jle
push
shrb
stos
outsb
mov
out
mov
repnz
addr16
inc
xchg
pop
add
call
inc
mov
mov
dec
rdpmc
dec
mov
jg
fsubl
pop
xor
jl
mov
or
shl
nop
add
mov
add
pop
add
add
rol
push
mov
leave
in
inc
mov
cmp
je
in
add
test
mov
sbb
in
mov
addl
test
sbb
or
lret
loopne
subb
push
dec
jns
push
dec
addr16
sbb
jne
add
mov
sub
pusha
xor
sbb
mov
jno
sbb
push
call
add
mov
cmp
ror
rolb
pop
sub
xchg
jne
sbb
sbb
ficoml
mov
and
pop
out
mov
stos
sti
filds
ret
inc
or
daa
mov
add
ficomps
loop
xchg
or
sub
pop
imulb
jecxz
scas
add
ds
add
sub
nop
jo
test
popf
mov
lcall
cmpsl
adcb
cmpsb
pop
and
add
jno
jmp
aaa
dec
jp
cmp
adc
lea
jbe
mov
out
lret
push
jle
add
pop
dec
shlb
inc
dec
jg
mov
add
mov
mov
ss
add
sbb
xor
push
and
mov
jecxz
sub
std
mov
shr
mov
or
into
jns
add
mov
rcrl
arpl
or
pop
cld
daa
rcr
xchg
add
lods
mov
push
movntps
push
pusha
nop
inc
aas
lea
sbb
jp
xor
sub
aad
add
push
insl
ret
xchg
sti
mov
loope
add
lea
mulb
and
pop
sub
test
sbb
movsb
fs
xchg
push
mov
or
loope
mov
pop
mov
add
mov
add
sbb
jle
pop
daa
cmpsl
bound
jp
stos
jno
sahf
rcrb
sub
dec
xor
cmp
pop
or
jge
jns
fcoml
out
jb
add
ljmp
add
cmp
or
add
not
mov
cld
mov
adc
mov
jo
push
add
pop
insb
mov
fmul
sbb
xchg
and
flds
sahf
mov
or
out
cmpsl
add
inc
in
mul
add
inc
xchg
add
pop
sbb
push
ret
add
add
and
enter
jns
prefetchwt1
xchg
lcall
nop
dec
add
and
sub
jne
rol
jl
inc
pop
aas
aad
test
negl
out
icebp
and
mov
xchg
lock
mov
fs
cmp
rorl
add
mov
ljmp
shlb
fistps
sahf
sbb
call
sbb
pop
icebp
add
loopne
dec
jge
lahf
xchg
add
bound
xor
dec
in
orl
mov
gs
loop
add
mov
mov
es
aaa
pusha
sub
cmp
cmpsb
and
inc
mov
ja
orl
fadd
in
add
jns
add
add
addb
sub
movsl
repnz
adc
add
cli
ror
dec
clc
lods
add
cwtl
mov
mov
add
push
fildl
inc
data16
subl
xor
int
xchg
mov
xor
je
add
into
out
pusha
push
xor
fiadds
add
es
pop
ficompl
cld
movsl
sbb
fbstp
add
mov
and
push
jmp
testb
cmp
shll
mov
imulb
and
add
sub
mov
add
in
push
cmpsb
mov
mov
sub
add
addr16
add
push
sbb
pop
push
jg
psubd
fistpll
lret
mov
std
jg
mov
and
inc
mov
add
adc
xor
and
lret
sbb
std
cmpsl
pop
xlat
mov
ficomps
jge
or
imul
pop
sub
add
sub
mov
cmp
in
dec
add
add
icebp
and
scas
cmc
push
xchg
add
xchg
push
mov
ret
add
das
inc
ja
jg
and
cwtl
add
cmpsb
and
add
jl
adc
dec
pop
loope
sub
or
add
push
dec
cltd
in
push
jl
pop
or
test
pop
cwtl
ljmp
xor
jp
or
lret
mov
xchg
mov
ret
aaa
lcall
xor
in
add
enter
add
pop
movsb
jo
push
sbb
out
inc
test
add
scas
mov
sbb
mov
stos
test
in
sbb
xchg
sub
mov
arpl
int
cmp
xchg
lret
shlb
or
out
in
sub
add
repnz
xor
add
aad
cmpsl
sarl
lret
outsb
incb
imul
rolb
xor
sbb
pop
inc
pop
or
pop
mov
mov
xchg
sbb
repnz
pop
and
out
in
add
ja
xlat
add
pop
sbb
add
popf
mov
add
scas
repz
lsl
add
jns
cmp
cmp
mov
xchg
lods
cmpsb
add
out
or
push
mov
add
repz
xchg
repnz
add
inc
outsb
test
add
lock
leave
cltd
mov
mov
pop
cmp
lahf
mov
xlat
fldl
je
test
in
pop
lea
orb
inc
fsubs
add
xchg
stc
imul
out
repnz
add
mov
movsb
add
insl
sub
shrl
push
fcompl
or
cmp
outsl
loopne
cmc
jg
and
and
incb
mov
mov
add
add
pop
test
imul
mov
dec
stos
dec
adc
lahf
pop
faddl
pop
pusha
add
add
or
mov
jg
add
aad
mov
jae
or
push
aaa
or
or
jmp
lret
pop
enter
pop
pop
fwait
pusha
lds
add
in
sbb
daa
or
shrb
ret
out
push
popf
fsubp
into
pushf
movb
fs
pop
imul
add
mov
faddl
mov
pop
in
fwait
cs
filds
and
xchg
out
fdivrs
jle
add
xchg
outsb
lds
cmpsl
mov
ficoms
lods
xchg
sbb
sub
xchg
dec
ds
in
pop
jbe
popf
rcrb
ret
adc
add
loope
add
jbe
push
push
movl
mov
stc
loope
xor
inc
loope
loopne
jns
pop
mov
add
enter
ret
sbb
repnz
clc
movsl
addr16
cmpsl
mov
jmp
ljmp
jge
add
sbb
mov
cmp
popf
mov
pop
lods
push
sbb
mov
inc
adc
clc
push
mov
mov
lock
sbb
xchg
pop
adc
mov
or
add
mov
sbb
dec
mov
and
mov
pushf
and
jne
xor
xor
inc
and
add
mov
inc
jo
in
pushf
cmp
popa
mov
mov
shlb
dec
popa
xchg
add
mov
ja
sbb
and
mov
pushf
cmp
es
shrl
push
inc
enter
push
pusha
jecxz
movsl
fcoml
inc
int3
daa
int3
pop
xchg
mov
mov
sbb
and
fdivrs
dec
xor
roll
xchg
pop
mov
es
cli
je
pusha
mulb
movsl
add
or
mov
push
and
xor
mov
pop
daa
and
jne
subb
xchg
jp
inc
xchg
push
cmp
addl
adc
cmpsb
cli
movsl
or
xlat
rorb
inc
leave
addl
repnz
mov
adc
and
es
adc
cld
cs
inc
pushf
mov
push
pop
incl
int3
sti
adc
outsb
add
aaa
dec
into
test
pop
and
sbb
jecxz
xor
repz
nop
sub
aas
fwait
adc
pop
mov
mov
adc
push
rcrb
out
in
js
pop
call
xchg
testl
mov
xchg
nop
fidivrl
add
rorb
add
jo
daa
add
mov
sbb
je
test
cmp
lret
or
inc
adc
mov
mov
ljmp
les
xchg
cmpsl
stc
sbbl
nop
cmpl
rol
cwtl
test
sub
test
cwtl
in
cmp
xor
mov
push
adc
cmp
inc
inc
fimull
add
jno,pn
je
or
inc
and
mov
movsl
and
outsl
pop
je
inc
adc
cmp
jae
xchg
pop
xchg
jl
jo
test
and
mov
xchg
sub
dec
aam
and
push
mov
xchg
test
loopne
les
add
adc
jg
and
aas
sub
add
stc
dec
test
xor
cwtl
push
sbb
mov
mov
xchg
mov
sbb
addr16
push
fstpt
push
movl
mov
fstps
lret
and
xchg
push
mov
xor
mov
inc
inc
cmp
loop
popf
rolb
xchg
pop
push
push
xchg
aad
loopne
pop
arpl
adc
mov
and
inc
iret
mov
jae
std
lea
fwait
mov
rol
sbb
xchg
jo
xor
add
inc
hlt
mov
add
subl
add
xor
insl
popf
xchg
pop
inc
cmp
movsb
inc
mov
ret
push
sub
push
rorb
adc
rol
sub
nop
enter
cmpsl
and
xchg
sub
std
inc
popa
lock
int3
add
xchg
fwait
test
xchg
cmpsb
pop
ds
and
add
lret
mov
mov
jge
sub
or
and
push
jo
mov
sbb
not
pop
or
adc
jo
ret
and
in
dec
das
inc
inc
pusha
aam
mov
pop
ljmp
shrb
in
fsub
outsl
adc
dec
repnz
pusha
pop
jns
mov
or
add
les
filds
and
xor
mov
cmpb
outsl
dec
push
ds
push
insb
adc
inc
and
mov
add
insl
lret
cmp
dec
xchg
xor
das
pop
sbb
repnz
pop
push
cs
xlat
xchg
add
xchg
fdivrs
lock
call
pop
mov
aam
pop
stos
sahf
dec
sbb
cmp
add
fisubrl
dec
sahf
rorb
lea
add
mov
mov
fadds
std
add
push
in
lock
shl
sub
adc
push
cmovb
lea
add
and
mov
cmp
outsb
add
xchg
fsubr
je
sub
or
adcb
popf
insb
mov
sub
jmp
push
adc
dec
repz
or
sub
xlat
fisubl
es
sbb
and
test
inc
jmp
outsl
movsb
sub
pop
mov
mov
dec
fisubrs
sbbl
sbb
fildll
dec
xorb
mov
sarl
hlt
jmp
mov
or
or
repnz
adc
mov
or
cmp
adc
xor
sub
add
mov
sub
xchg
adc
dec
test
sbb
inc
mov
fsubl
inc
dec
aad
shll
lret
mov
mov
or
inc
mov
adc
mov
jge
andl
hlt
dec
xor
movsb
mov
sub
lret
adc
dec
lock
sbb
or
push
xchg
sub
dec
cmp
dec
push
inc
cmp
inc
sub
jmp
adc
push
inc
pop
orb
add
popa
adc
pop
or
xor
push
or
cmp
xchg
popf
push
xor
xor
scas
add
aam
inc
js
xor
dec
aas
xor
rcll
push
lock
enter
dec
rcrb
sbb
insb
inc
lea
clc
pop
adc
roll
lcall
inc
fs
add
cmp
aam
xchg
jno
stos
je
and
flds
push
pop
fnsave
icebp
incb
push
stc
jo
mov
fcoml
sub
jne
fldcw
imul
dec
shlb
lcall
xor
pushf
jnp
mov
pop
lret
scas
or
and
pop
adc
xor
aad
sahf
xchg
jmp
cmp
mov
jnp
or
cwtl
and
fstl
cmp
sub
dec
shl
mov
pop
add
stos
mov
add
cmc
jae
jg
iret
sbb
push
sbb
push
or
add
mov
xchg
adc
and
cwtl
mov
mull
add
pop
push
nop
cs
scas
jne
xchg
popf
or
add
push
dec
data16
fsubs
mov
mov
lahf
adc
lahf
subl
call
push
enter
mov
nop
or
in
and
daa
js
jp
adc
xchg
sbb
nop
and
sbb
push
pop
mov
dec
test
pop
push
sahf
testb
sub
adcb
xchg
leave
mov
nop
int3
enter
dec
cmp
mov
sub
rolb
add
add
push
add
inc
mov
ljmp
mov
lock
inc
add
jb
movntq
out
sub
adc
cltd
sub
roll
insl
outsb
fbld
fsubr
sub
xchg
jl
adc
aad
int3
mov
int
les
push
addl
stos
mov
sbb
and
mov
add
cli
mov
and
mov
mov
std
dec
nop
lods
daa
add
add
push
or
testl
stc
mov
std
cmp
jnp
add
xchg
xchg
test
push
add
pop
lret
or
lahf
lods
out
add
inc
mov
mov
cli
ljmp
into
cld
or
pop
cmc
xchg
test
scas
repz
xor
pop
clc
sub
mov
aaa
jae
aad
add
sub
in
dec
andb
xor
mov
mov
xor
sbb
bound
mov
fwait
xorb
divb
pop
stos
int3
xchg
or
subl
popa
imul
adcl
jo
std
fucomp
push
xor
add
stc
ss
xor
lahf
add
lret
negb
add
inc
mov
in
or
pushf
test
imul
out
sbb
adc
xor
rcrl
les
push
stos
adc
int
add
fnstsw
add
or
test
int3
sbbb
push
call
leave
testl
orb
lods
fnstsw
sub
jne
cmpb
sarb
dec
add
mov
test
or
aam
pushw
push
xor
int
call
jno
adcb
cwtl
adc
push
adc
popl
test
cmp
or
push
mull
scas
adc
push
enter
xchg
fwait
das
arpl
sub
nop
in
pop
jmp
fadds
sahf
and
xchg
inc
lods
enter
fadds
mov
mov
or
out
jae
add
push
jg
mov
daa
mov
pop
int3
nop
nop
call
cmp
nop
ljmp
or
pushf
lea
mov
idivl
adc
call
jl
mov
mov
hlt
push
ss
add
pop
in
dec
mov
cld
imul
stos
ret
fmuls
xor
aad
or
add
cmp
sbbb
xchg
inc
popf
add
or
je
sbb
dec
inc
xor
out
test
add
or
cld
mov
mov
inc
icebp
and
lret
or
sbb
xchg
xor
sbb
add
repz
addr16
sbb
add
outsl
sub
or
dec
adc
dec
test
xchg
jl
add
jp
cwtl
inc
xchg
xor
cmp
pusha
add
std
cmp
adc
mov
pop
cwtl
adc
cltd
test
leave
push
xor
jne
mov
orl
push
lahf
sahf
cmp
aam
dec
clc
mov
or
ss
in
push
lods
imul
cmc
lcall
test
sub
fcoml
adc
testl
lret
inc
ret
in
adc
addr16
call
aas
shll
push
loopne
xchg
lcall
jno
sbb
dec
mov
pop
cli
mov
add
mov
xchg
cmp
inc
imul
and
lods
rol
fwait
and
loopne
cmpsl
add
in
loope
pop
stos
enter
xor
mov
dec
push
inc
loopne
inc
and
cmpsb
shl
sbb
add
ds
add
addl
cmp
jo
fucomip
into
and
stos
mov
mov
inc
pop
dec
loopne
dec
xor
lock
xor
and
fdivrp
js
jne
test
call
xor
ret
sub
push
movsb
dec
xchg
les
fwait
jg
add
insb
shlb
dec
cli
add
mov
push
adc
pusha
mov
in
adc
mov
pop
mov
lods
adc
add
lock
push
int3
ljmp
inc
loope
pop
sbb
outsl
test
stos
popa
mov
sbbb
cmp
mov
push
xchg
ret
inc
or
int3
xor
je
and
rcrb
shll
sub
cmp
push
leave
test
or
subb
out
add
and
inc
lahf
sbb
add
xor
inc
xor
pop
mov
cmp
dec
xchg
sti
idivl
andl
nop
push
not
pushf
xchg
loopne
popa
mov
test
pop
adc
mov
popa
xor
push
and
in
popa
push
sub
cmpb
mov
pushf
mov
nop
or
fxch
sahf
ljmp
sbb
out
ret
xchg
mov
add
inc
jo
dec
test
sbb
push
dec
test
insb
clc
lods
outsl
push
lds
add
bound
lods
es
push
andb
inc
inc
dec
leave
pop
test
jbe
lret
nop
inc
xchg
fs
or
pusha
xor
pop
not
fisttpll
xlat
loopne
push
mov
and
mov
sub
pusha
jns
mov
adc
nop
lods
and
inc
in
pop
mov
jns
jmp
shlb
aas
popa
pop
add
mov
add
xor
cltd
dec
push
add
push
repnz
movsb
enter
test
popf
lods
enter
or
and
xchg
mov
or
mov
gs
imul
cmpsl
pand
stos
int
roll
loop
xlat
cwtl
and
setne
stos
mov
mov
pusha
hlt
sub
repz
adc
cs
push
or
adcb
mov
fnstsw
mov
mov
ret
add
nop
insb
int
mov
call
bound
inc
xchg
adc
cmp
adcl
out
push
xchg
adc
xchg
cltd
sti
cmp
pop
add
jp
inc
sarb
stos
in
add
nop
add
mov
cwtl
or
popl
sub
xor
ret
ja
add
push
inc
sub
movsb
inc
adc
shl
imul
test
pop
xor
mov
fisttpll
into
mov
or
popa
or
push
xchg
cmp
notl
mov
fadds
push
shrb
add
push
adc
rorl
addb
push
add
sbb
cs
mov
daa
insl
insl
cmp
insb
hlt
or
or
or
call
adc
jns
add
fldl
ss
iret
sbb
fucomip
lock
add
sbb
test
sbb
test
sub
adc
xchg
or
adc
movsb
pop
jg
jbe
push
jo
mov
es
mov
or
andb
nop
in
loopne
adc
fmuls
dec
xor
orb
cmpb
adc
mov
add
push
push
mov
pop
adc
inc
or
cmp
cld
rsqrtps
lret
mov
fiadds
rcrl
push
cltd
lock
push
pop
add
inc
mov
or
xor
dec
and
sbb
repnz
pxor
pop
pop
jecxz,pt
out
mov
xchg
test
movsb
ja
and
pushf
fwait
je
adc
lret
sub
lods
fldt
xchg
mov
add
test
lret
movsb
and
aam
pop
scas
notb
loop
loope
fsubrl
nop
ss
or
cmp
in
mov
pop
shl
pusha
inc
das
inc
in
sub
insb
nop
jne
js
and
cmpsb
lods
ljmp
push
push
dec
imul
cs
xchg
movsb
clc
stos
pusha
xor
cmp
sub
mov
inc
push
popl
out
add
aas
mov
andb
or
sti
popa
dec
sub
cmp
and
dec
mov
mov
adc
sub
in
out
das
movsl
jle
daa
dec
sub
in
pusha
icebp
in
or
pop
cmp
inc
xor
pop
sbb
add
sub
jo
jo
rolb
aaa
dec
shrl
loopnew
add
mov
jns
add
add
outsl
testl
sub
out
push
mov
xchg
lea
push
mov
jnp
pop
push
add
es
cmp
xchg
shrl
cmp
jae
xor
cmp
xor
pop
adc
repnz
movsl
shlb
pmullw
pop
or
add
nop
xchg
mov
ret
and
dec
int3
mov
sub
pushf
cltd
fcoms
stos
sub
fimull
add
lret
cwtl
mov
fdivrl
mov
add
and
adc
adc
add
shlb
pop
adc
sahf
pop
mov
push
cwtl
jnp
pusha
add
sar
lea
fisubrs
inc
outsb
mov
test
sar
add
jmp
int3
out
enter
push
xchg
cwtl
push
pop
mov
pusha
sti
mov
mov
jmp
aam
mov
xor
lcall
sub
mov
or
dec
adc
mov
push
push
mov
adc
ret
xchg
jle
nop
pusha
mov
inc
test
icebp
mov
or
pop
enter
data16
add
dec
xchg
adc
adc
xchg
fsubrs
add
test
les
lahf
push
and
in
cmp
adc
cmp
add
add
or
push
std
jno
add
sub
add
iret
mov
fiadds
cmp
adc
rcrl
cltd
add
imul
int3
cmp
add
sub
push
sub
inc
test
fisttpll
out
pusha
add
insl
lds
js
add
fmull
and
lods
hlt
ja
add
adc
or
adc
add
dec
push
cmp
jae
imul
bound
add
arpl
ljmp
subl
xor
xlat
cmp
stc
ss
testb
repz
jno
mov
ret
roll
jb
mov
xchg
pop
pop
inc
cmp
cmp
int3
enter
outsl
out
loop
xor
mov
sbb
cmp
clc
mov
lods
cld
int3
xor
add
inc
scas
sti
fsubl
cltd
jae
add
daa
xlat
cmp
sub
out
sbb
push
aad
xchg
push
dec
dec
cmp
sub
fcomps
int3
add
fs
sub
fidivrs
push
sbb
int
pop
jb
push
mov
jno
loopne
dec
mov
dec
lods
daa
push
xor
push
xchg
arpl
cmp
sub
movsl
es
xchg
fcoms
out
ja
dec
in
pop
std
int
cmpsb
out
or
or
out
mov
inc
dec
loop
adc
or
mov
add
pop
pop
sub
cmp
popa
fsubr
and
xor
mov
andb
sbb
dec
dec
int3
clc
sbb
in
xchg
pop
out
les
stos
cmpsl
fs
aaa
or
pusha
daa
test
push
mov
nop
inc
movsl
testb
mov
dec
xchg
push
add
in
dec
push
test
sbb
xor
dec
sbb
ret
add
and
ret
sahf
daa
pop
xchg
xor
push
xor
mov
stos
inc
rol
ret
add
cmpsl
push
xchg
repz
dec
add
push
cmp
xchg
cmpb
sbb
dec
pop
push
mov
mov
sub
jmp
enter
inc
aam
rolb
mov
ficompl
es
das
mov
ret
movsb
sub
adc
mov
idivl
rcrl
int3
movsb
or
sti
insl
inc
lods
leave
push
int3
jnp
push
add
xchg
ret
mov
popf
pop
adc
mov
xchg
add
adc
jecxz
sbb
les
or
and
mov
add
mov
xchg
lret
jle
and
sub
out
loop
or
inc
mov
mov
ds
hlt
or
in
gs
cmpsl
les
dec
adc
mov
sbb
lcall
adc
sahf
and
xchg
ljmp
sbbb
js
mov
lock
iret
fadd
add
int
enter
xchg
lahf
pop
jo
movsb
les
sbb
and
and
mov
or
mov
or
hlt
xor
loopne
mov
push
mov
insb
jle
dec
aam
lock
lahf
mov
in
fs
sbb
orl
jg
sbb
loopne
xchg
mov
dec
add
sbb
sbb
adc
dec
aam
enter
fld
push
and
cmp
cmp
cmp
out
sub
or
hlt
xchg
jmp
gs
lahf
xor
and
hlt
gs
add
jp
mov
adc
or
sub
aam
sbb
sbb
push
mov
add
lods
xchg
sbb
sahf
push
dec
cld
sub
add
pop
jns
stos
xchg
int3
jmp
mov
les
xchg
and
inc
shlb
sbb
and
fisttpll
enter
call
js
push
xor
movsl
jno
pop
mov
aad
inc
rclb
mov
aaa
mov
or
mov
xchg
inc
sub
mov
ret
mov
xor
push
outsb
int3
cli
xcrypt-ecb
cmpsl
int3
mov
push
and
add
mov
sbb
testl
mov
add
mov
dec
mov
push
in
test
int3
pushf
mov
movsb
xor
mov
add
adc
xchg
out
popf
dec
xchg
add
addr16
push
jbe
mov
inc
or
out
dec
jmp
add
cmp
adc
sub
lods
xor
add
push
sbb
pusha
xor
sbb
call
or
mov
rorb
jp,pt
fcmovnbe
xchg
mov
add
mov
movsb
sbb
icebp
jge
sub
inc
jae
mov
add
pop
push
push
cmp
pop
cmpsb
push
fcom
rorb
bound
jmp
scas
lods
loopne
push
ja
add
pop
jle
xchg
pusha
int
dec
fisttpll
ljmp
inc
mov
hlt
xchg
scas
lods
mov
lods
inc
fs
or
sub
mov
ljmp
adc
add
jns
mov
lret
ja
loopne
inc
and
pop
mov
mov
xchg
xor
pop
xchg
or
pop
scas
out
add
cmpl
es
lcall
and
jge
call
and
xchg
pop
mov
lcall
xchg
adc
popa
cmpsb
mov
cld
js
sub
nop
aas
add
sub
mov
orl
into
mov
je
fmulp
nop
sub
xchg
dec
adc
mov
cmp
sbb
add
arpl
sub
sub
add
ret
xchg
push
dec
push
popf
icebp
sbb
mov
or
adc
lds
mov
pusha
jns
sub
add
fmul
aas
lcall
cmp
sbb
push
in
sbb
mov
insb
and
add
jmp
out
jns
add
faddl
lcall
sbbl
mov
add
sbb
mov
jns
je
dec
test
adc
in
leave
sbb
cmp
repnz
add
sub
mov
stos
scas
sbb
sbb
jl
dec
fmuls
dec
popf
into
loopne
lret
or
pop
lea
stos
pop
loope
inc
xchg
and
push
sbb
out
jg
push
in
jno
jae
jge
stos
imul
sbb
imul
xor
and
sbb
adc
daa
adc
or
add
aaa
cmpb
ficomps
divb
pand
scas
mov
ficompl
sub
and
sub
scas
push
cmpsb
mov
add
fcompl
or
es
mov
xor
and
cmp
scas
push
int3
push
push
pop
test
je
mov
mov
jno
push
aad
mov
sbb
cmp
sub
cmp
sub
jl
cs
sub
int
pop
add
dec
xor
mov
sub
mov
and
push
sarb
in
fs
mov
orb
push
sbb
mov
pop
mov
hlt
inc
jbe
cmp
pushf
adc
xchg
or
mov
mov
ja
out
xor
mov
pushf
push
xor
fisttpl
or
pop
add
xchg
sub
push
movsb
xor
add
xchg
adc
add
popa
lret
repz
xor
sahf
xchg
mov
push
push
js
enter
pop
insb
xor
int
push
adc
xchg
cwtl
in
ja
add
push
shlb
lea
dec
les
test
adc
adc
pop
or
mov
cmp
pop
imul
pushf
std
mov
pop
xchg
sub
mov
or
push
cwtl
add
pop
xor
arpl
inc
std
sbb
outsl
or
sbbb
push
add
dec
adc
mov
add
mov
cmp
aas
pop
cli
stos
xor
mov
add
cmp
cwtl
mov
pop
nop
insb
xor
mov
fistl
js
shrb
bswap
subb
inc
cmp
pop
cmpsb
dec
pop
push
insb
add
test
mov
std
hlt
pop
scas
mov
sub
cltd
test
pop
sub
iret
stos
filds
jbe
fmull
fst
lret
aam
push
xor
push
mov
iret
pop
sub
out
add
xor
push
mov
test
test
cmpb
push
fcomps
leave
add
xor
or
sub
adc
xchg
cmp
fucomp
xchg
cwtl
lods
lods
xchg
mov
cmp
mov
test
add
leave
sub
divl
popf
pop
push
js
jo
movsb
mov
push
out
dec
test
push
jl
push
add
test
adcb
std
adc
cmp
stos
les
outsb
xor
sbb
sub
mov
mov
stos
nop
pop
inc
push
sub
mov
pop
mov
and
aaa
add
sub
cli
repz
jo
add
cmp
imul
clc
mov
jp
and
add
or
das
cmp
mov
cmp
mov
cs
sbb
dec
fwait
sbb
add
enter
xor
fcomps
and
dec
adc
add
sbb
cltd
mov
adc
loopne
jle
dec
push
lock
mov
sub
inc
xchg
cmp
fdivr
testl
mov
pop
stos
out
loopne
push
jg
negb
add
cwtl
imul
dec
or
sbb
push
stc
add
xor
adc
sub
cmp
fcompl
outsl
rolb
mov
mov
das
cmp
loope
fwait
sub
cs
xor
mov
push
mov
cmp
cmp
sub
icebp
mov
pop
dec
xor
shl
inc
sub
push
push
lds
adc
adc
cmp
rolb
inc
mov
insb
mov
add
jp
ljmp
mov
dec
pushf
pop
add
jne
cwtl
add
shr
or
add
dec
les
add
and
xchg
pop
mov
add
and
dec
ret
jo
aad
xlat
add
add
loopne
out
and
pop
push
aaa
test
mov
or
add
push
fs
add
nop
ja
and
sbb
xor
cwtl
sub
cmp
nopl
cld
repz
loopne
add
movsb
adcl
hlt
cld
ds
lcall
or
es
loopne
xor
dec
les
les
frstor
lea
scas
pop
push
sbb
out
sub
test
mov
nop
lea
xor
cmp
lock
shlb
jle
inc
test
sub
je
fwait
in
xorb
mov
inc
lods
ljmp
push
mov
push
pusha
cmp
add
mov
xchg
test
aam
pop
test
das
sarb
rol
pop
jmp
push
push
lcall
and
faddl
mov
jo
sbb
imul
scas
mov
inc
movsb
mov
test
pop
nop
jge
shll
push
add
push
mov
xchg
je
dec
sub
pop
or
sbb
lcall
mov
adc
sbb
sub
jnp
mov
add
mov
loopne
add
push
xchg
lret
push
add
les
cmpsl
lcall
pop
flds
jmp
cmp
fldt
adc
jmp
xchg
add
jmp
jle
out
sub
push
cmp
test
push
sbb
cmp
sub
adc
inc
dec
stos
add
adc
cmp
or
scas
ds
pop
movsb
ja
mov
iret
test
test
je
dec
roll
mov
stos
and
mov
or
movb
cld
lods
xchg
pop
jl
jo
addl
sub
xchg
xor
sbb
mov
xchg
arpl
cld
or
shlb
xchg
stc
xchg
in
dec
xchg
push
test
add
hlt
mov
fnstenv
shll
or
nop
insb
lea
jno
xchg
mov
addr16
std
cmpb
mov
daa
dec
cmp
movlps
es
pop
or
add
ret
mov
sbb
sub
add
out
icebp
push
and
add
rolb
ljmp
inc
mov
aad
popf
push
cmpb
xor
iret
loope
jnp
mov
lods
fstl
es
push
int
andb
test
add
add
cld
jae
mov
rdmsr
aam
aaa
jno
add
js
popf
sub
pop
fimull
inc
int
ret
add
iret
movsb
outsb
inc
jbe
pop
jge
xor
add
xor
sub
fadds
adc
in
inc
repnz
dec
add
test
adc
mov
sti
push
add
push
enter
and
sub
fs
jbe
jo
mov
add
sub
scas
sbb
inc
imul
add
push
push
fwait
in
aas
fnstsw
mov
cmp
mov
adc
dec
loopne
aas
lea
adc
insb
inc
add
lock
mov
ss
inc
add
sti
mov
movb
lods
add
or
lahf
add
adc
xchg
sub
dec
loopne
ret
mov
pop
xchg
push
andb
adc
push
push
mov
lock
int3
insb
test
pop
lods
dec
dec
lea
pushf
inc
cmpsl
mov
dec
out
pop
add
aaa
pop
mov
xor
cs
mov
jae
repz
cmp
lret
stc
mov
push
daa
dec
add
popa
jbe
add
push
and
lods
in
insl
add
pop
jb
add
and
in
stos
dec
movsl
or
in
sub
pop
mov
dec
int3
fs
add
cmc
mov
or
and
adc
cmp
sbb
in
mov
lahf
mull
jg
add
test
push
les
pop
cmp
pop
mov
sub
add
add
and
and
xor
sahf
and
and
mov
fsub
and
pop
jno
inc
or
fldl
fsubr
nop
jg
push
sbb
or
cmp
mov
push
test
sub
cli
das
jl
mov
pop
mov
and
xor
in
imul
mov
xor
fs
add
jne,pn
mov
push
cmp
test
out
push
fmuls
aam
inc
cwtl
dec
mov
add
cmp
lret
xchg
jge
pop
sahf
push
enter
pop
and
in
scas
in
mov
in
ficoml
roll
cmp
cmpsb
pop
sbb
push
push
cmp
dec
or
adc
mov
push
aas
jb
push
inc
arpl
xchg
cld
sbb
add
test
adc
loop
add
or
aaa
mov
sub
stos
cmp
aam
inc
pop
and
dec
jle
mov
mov
add
cmp
rcrb
stos
in
xor
movsb
into
mov
xchg
je
mov
add
roll
jae
add
pop
mov
inc
subb
add
xchg
int
push
add
push
cmpsb
xlat
out
daa
cwtl
popl
pop
pop
jo
je
xchg
mov
stos
cmp
or
mov
je
lret
enter
xchg
dec
sahf
add
xor
adc
nop
jp
jmp
aas
mov
push
lods
or
nop
aam
enter
inc
or
mov
add
inc
and
lcall
iret
push
mov
cmp
dec
xor
pop
push
jmp
dec
add
or
aas
mov
cli
add
pop
mov
inc
xchg
aam
cs
inc
mov
add
inc
aaa
adc
cltd
dec
rolb
out
fnstsw
add
add
sub
je
mov
bound
pop
stos
push
nop
inc
ljmp
xchg
insb
sbb
lods
mov
add
jnp
popl
ret
sub
iret
jmp
or
ss
hlt
cvttps2pi
lea
rcrb
add
mov
push
lods
mov
jl
in
cmp
add
andl
fsubs
loopne
out
and
xchg
push
sarb
in
and
sub
dec
loope
pop
sub
add
pushf
add
aaa
sahf
fcoml
and
xchg
xor
push
xor
and
inc
out
mov
add
cmp
jp
shr
adc
pop
sbb
fwait
dec
loopne
sbb
clc
xor
cmpl
dec
test
cmp
subb
xchg
out
fmuls
pop
mov
addb
xor
in
or
push
pusha
dec
pop
loop
mov
insl
sbb
lret
pop
shl
mov
sub
xchg
enter
xor
test
push
mov
mov
out
cltd
mov
cmp
inc
mov
fcoms
add
repz
add
lods
dec
cmp
cld
mov
test
rclb
adc
mov
sub
add
push
dec
add
in
lea
mov
popf
mov
add
xchg
pfnacc
push
push
and
pop
sahf
sbb
cmpb
adc
test
lds
fists
sbb
loop
lea
push
xor
dec
jo
adc
fmull
cmp
mov
leave
mov
and
cmp
cmp
popa
cmc
sahf
les
mov
jbe
cld
pusha
and
inc
pusha
jns
out
imul
dec
adc
jl
adc
cmp
lahf
mov
out
fadds
or
cmpsl
or
js
inc
movsl
fsubl
mov
inc
addr16
pop
or
loopne
test
pop
jmp
xchg
mov
add
push
push
lods
subb
out
add
pop
ret
mov
sbb
xchg
xor
fsubr
insb
rolb
incb
cmpl
lods
fldl
mov
pop
or
and
add
test
shl
pusha
pop
lahf
mov
add
sarl
lret
sub
push
cli
xchg
test
xor
out
or
mov
sub
push
fs
lahf
out
test
and
dec
je
inc
lods
mov
adc
mov
add
mov
mov
and
popa
inc
jns
pop
add
sub
std
add
loopne
hlt
stos
sbb
dec
add
sti
lret
mov
push
mov
mov
dec
andb
pop
mov
xchg
jb
and
in
scas
pop
movsb
sub
jnp
sbb
fidivrl
fiadds
pop
in
adc
inc
adc
shr
sbb
popf
je
and
cmpsl
fisubrl
mov
add
mov
call
popf
test
mov
add
inc
push
jecxz
nop
dec
mov
sbb
sub
dec
ret
pushf
mov
xor
mov
sbb
cmpsl
mov
je
xor
stos
rolb
fistps
or
add
push
inc
push
pusha
cmc
fdivs
rolb
fildll
fsubl
lcall
std
fwait
dec
sahf
pop
ficoml
ret
jp
add
notl
pop
add
mov
ret
out
push
or
inc
and
mov
xchg
mov
push
push
or
filds
sub
mov
pushf
cmpsb
std
cmpl
jp
insb
dec
aaa
add
jnp
les
push
pop
xchg
jg
lcall
mov
mov
xor
aaa
clc
sbbb
sahf
test
stc
fcoml
je
fildl
test
jno
repnz
nop
lea
test
repz
xorb
inc
cmp
cs
sbb
inc
add
push
cmp
rclb
jecxz
or
sub
sarb
or
popa
mov
cmpsl
mov
dec
aam
adc
xor
push
dec
adc
inc
xchg
mov
imul
xchg
cs
inc
lock
and
sbb
dec
shrd
and
sub
or
scas
jg
fmull
add
movsb
adc
sub
and
sub
adc
mov
or
push
pop
xor
cmpsb
and
pop
rclb
sbb
inc
mov
mov
loope
push
in
es
mov
je
add
inc
lock
in
or
jb
shlb
call
popf
cmp
ljmp
or
pop
flds
sub
and
mov
testl
dec
shrb
cld
xor
xor
adc
push
mov
mov
rcrl
inc
add
pop
mov
lods
sbb
cld
inc
inc
pushf
scas
cmp
movsb
dec
and
cmp
jb
add
cmp
aaa
dec
inc
or
adc
pop
cmp
in
inc
pop
cmp
add
xchg
add
pop
mov
push
scas
mov
test
pop
push
push
jo
dec
mov
dec
lahf
cmpsl
sub
ror
xchg
jnp
add
sub
add
scas
or
cld
cmp
fildl
loopne
or
inc
pop
aad
mov
fadds
xchg
mov
mov
jecxz
sbbb
push
lods
aam
lea
add
mov
xchg
repnz
inc
in
shlb
or
dec
rolb
ret
ljmp
in
jne
xchg
mov
imul
sbb
fstl
mov
out
sub
pop
push
xchg
vmovaps
ficomps
and
add
loop
inc
xor
and
mov
inc
push
cmp
lret
add
jle
arpl
add
jmp
adc
pushf
test
gs
dec
ss
xchg
and
ret
jecxz
cwtl
xchg
xor
insb
add
movsl
and
dec
inc
add
sbb
rcll
nop
jle
stos
imul
cwtl
addb
xor
pop
sub
jge
aaa
fstl
std
xor
sbb
pop
push
or
mov
in
cmpb
dec
aad
and
push
adc
addl
pop
cmpsl
imul
stos
push
jl
mov
push
loop
imul
lea
popa
mov
mov
add
inc
push
dec
adc
out
stc
or
les
xor
nop
and
push
adc
add
cwtl
sub
adc
mov
pop
pusha
enter
add
inc
mov
inc
mov
xor
jmp
push
pop
mov
mov
adc
cld
cmp
adc
mov
push
add
mov
fldt
aam
add
adc
dec
mov
aam
out
js
dec
mov
sub
movsb
ret
rol
cmpsl
lock
into
imul
add
mov
cltd
jmp
rclb
cmp
cmp
add
fisttpll
addr16
jb
pop
sub
or
les
add
sub
cmp
cmpsl
call
mov
test
mov
andb
lock
add
enter
push
fistpl
sbb
psubsw
andl
adc
xchg
mov
bsr
mov
lds
mov
test
imulb
cmp
popf
adc
add
jne
mov
jo
ljmp
ficompl
xchg
addb
test
sbb
xchg
add
andl
adc
xor
mov
sub
mov
sbb
xchg
loope
inc
mov
das
inc
icebp
adc
fwait
call
movsl
adc
loop
pop
cmp
mov
ffree
add
sbb
adc
dec
add
cmp
cmp
sbb
popa
jle
xchg
in
unpckhps
lret
adc
and
add
inc
rcrl
jo
jle
xor
lods
inc
lahf
xor
scas
je
adc
lods
sahf
xchg
or
sub
inc
adc
les
inc
js
adc
dec
lret
xor
or
roll
pop
jge
mov
push
or
pop
cmpb
pop
xor
adc
pushf
loopne
cmp
pop
adc
insl
push
sub
dec
pop
addr16
mov
icebp
aam
leave
fs
adc
out
clc
jle
adc
cmp
jo
or
cmp
in
sub
stos
mov
dec
cmp
test
stos
sbb
or
mov
lahf
cmpl
loop
les
pop
mov
adc
in
mov
lcall
subb
inc
sbb
add
cmp
imul
out
cmp
mov
repnz
cwtl
or
push
or
test
sbb
stc
push
xorb
pop
scas
pop
iret
sub
in
add
fmull
cmp
add
das
or
push
out
or
xor
sub
pop
lods
and
mov
mov
test
sub
dec
add
cmp
add
xor
nop
add
cmp
lea
sub
xor
in
and
and
lea
adc
es
inc
jp
loop
add
or
call
popf
in
fdivr
int3
or
hlt
adc
push
mov
int
add
cmpl
adc
add
jo
sbb
std
add
mov
jno
xor
xchg
pop
adc
or
and
push
das
inc
es
and
nop
mov
dec
xor
lods
lcall
pusha
dec
jle
push
mov
sahf
adc
fwait
jb
cs
inc
mov
inc
imul
xchg
fildl
stos
scas
push
rcrl
mov
or
clc
fs
dec
popf
call
js
xchg
fmuls
sbb
cmc
or
add
xlat
leave
pop
lret
jnp
out
mov
loop
mov
adc
mov
pop
aas
sbb
in
adc
sbbb
push
xor
movsb
inc
cmp
mov
sahf
sbb
push
push
out
mov
push
in
mov
nop
idiv
mov
cmp
jge
mov
nop
loopne
add
xor
test
mov
dec
mov
cld
pusha
dec
loop
sub
or
add
dec
inc
in
add
or
adc
cmp
xor
fisttpl
or
sub
xor
call
ds
push
enter
mov
add
push
out
jmp
lods
sub
loope
mov
jns
lea
dec
das
sahf
sub
imul
sar
push
and
cmp
bound
sbbb
call
cmp
adc
rorb
cltd
adc
cmpsb
adc
lret
push
dec
xor
ud2
adc
jae
sub
dec
adc
punpcklwd
adc
imul
xchg
cmp
dec
cld
or
cltd
mov
or
xchg
mov
sbb
std
push
adc
clc
int3
dec
pop
xchg
add
fisubl
xor
add
rcrb
add
dec
cmpsl
fmul
icebp
cmp
mov
test
sbbb
push
test
inc
dec
insb
rcr
push
lock
fxch
lods
inc
enter
cmp
pop
and
mov
mov
sbb
push
adcb
fldl
add
jp
push
pop
cmp
xor
popf
sub
xor
mov
sarb
stos
ficoms
scas
mov
das
or
push
jo
incb
push
xlat
xor
cmpsb
add
mov
andl
loopne
inc
in
scas
inc
mov
and
mov
ret
push
inc
add
xchg
jle
dec
icebp
add
sbb
mov
pop
and
dec
adc
movsb
scas
sub
mov
add
push
lods
insb
loopne
mov
popaw
jmp
sbb
outsl
add
add
dec
jle
cmp
pop
cmp
subl
and
xor
sub
jmp
cmp
jno
and
cs
jne
mov
dec
add
jno
mov
aaa
in
cmpsb
pusha
xchg
stc
or
lods
das
xor
and
adc
mov
jecxz
cmp
je
mov
test
jo
out
sub
sti
js
inc
aam
inc
xchg
cmp
mov
or
mov
adc
inc
aaa
and
aam
data16
lock
sub
mov
les
subb
dec
ret
and
cmp
in
inc
lcall
mov
push
shll
mov
mov
ficomps
cltd
cmp
push
xor
push
xor
movsl
sahf
add
in
and
sti
and
dec
jbe
std
push
in
insl
mov
fdivrs
lea
jge
sbb
inc
and
pop
je
sar
call
sbb
sar
test
mov
push
or
xor
lea
xor
fidivrs
push
movsl
push
lret
lock
and
add
sbb
mov
dec
addr16
shlb
or
or
xchg
pop
pop
mov
in
stos
fiadds
sbb
mov
mov
sarl
mov
adc
ret
inc
adc
mov
inc
pop
inc
push
add
aas
ret
icebp
push
mov
orb
add
cmpsl
test
push
or
mov
aaa
adc
bound
lock
dec
fs
or
lods
sub
inc
mov
xor
pop
mov
gs
lahf
arpl
shll
sbb
sub
inc
jge
push
je
nop
imulb
mov
cs
sub
cmpsl
sbb
add
or
movsb
mov
add
xchg
repz
dec
mov
add
jbe
xor
adcb
je
dec
xchg
add
cld
xchg
outsb
pop
pop
jb
xor
imul
mov
push
outsb
push
outsl
inc
popa
aaa
pop
mov
sbb
popf
xchg
mov
dec
shrb
push
or
test
icebp
push
ret
and
mov
insl
and
arpl
out
push
rol
jmp
add
mov
mov
loop
xor
or
jns
pop
jp
scas
add
sbb
add
jb
les
mov
pop
sbb
and
mov
cmp
es
pusha
add
es
jae
sub
shll
stos
bound
dec
xchg
jecxz
ror
nop
inc
daa
and
push
jmp
push
int3
inc
dec
mov
cmp
xor
out
fnsave
mov
add
lret
xchg
data16
in
gs
xchg
in
or
aad
test
mov
stc
push
mov
les
repz
or
rclb
clc
cmp
dec
jmp
push
and
or
pop
rclb
push
icebp
xlat
std
jae
js
xor
insl
push
sbb
lock
mov
push
xchg
out
pusha
movsb
loop
cmp
dec
in
arpl
add
mov
adc
addb
xchg
or
jmp
xor
adc
add
push
imul
movsl
add
div
insb
push
loope
fcompl
pushf
sub
ret
and
inc
cmp
mov
or
add
neg
fs
pushw
xor
push
push
sub
push
mov
cs
jb
push
jle
fsubs
jl
pop
add
push
cmp
negb
loop
adc
push
ss
clc
mov
or
gs
xlat
lcall
push
ss
andl
pusha
dec
insl
push
lock
sub
sub
pop
xor
inc
sti
jnp
sub
xor
mov
out
jle
cmp
in
pop
sub
adc
out
sbb
pop
inc
sbb
clc
or
ret
or
push
sbb
aas
gs
clc
or
mov
sahf
mov
sbb
clc
mov
dec
enter
out
lcall
rolb
sub
xchg
sti
pusha
sub
mov
mov
jbe
les
ret
xchg
mov
mov
adc
add
xchg
int
cwtl
daa
adc
jno
add
add
into
shl
out
xor
adc
add
int
imul
mov
out
dec
inc
xchg
sar
xchg
mov
mov
and
sti
push
add
add
push
inc
add
cmp
sbb
notl
test
inc
popa
cwtl
mov
and
jl
pop
or
add
std
loop
push
push
and
cld
and
jle
mov
lds
scas
sub
sub
lds
add
and
push
nop
je
cmp
out
sbb
jae
sbb
inc
and
pop
cmp
xor
pop
cmpsl
rolb
sarl
pop
stc
in
jb
aas
js
ds
mov
dec
loope
ret
sbb
in
inc
shll
shrl
into
sbb
mov
or
fnsave
adc
sub
lock
cld
pop
add
movsb
leave
dec
mov
addr16
paddq
pushf
pop
pusha
adc
jb
fcoml
jmp
dec
mov
mov
and
enter
cli
fldcw
sbb
gs
xchg
adc
mov
arpl
add
inc
push
insl
or
js
pop
mov
pop
nop
push
repnz
add
into
push
repz
sub
iret
lock
pusha
fistps
sarb
dec
loop
clc
and
scas
mov
rcl
adc
jne
jno
cmp
mov
and
imul
add
arpl
mov
sbb
into
cmc
movsl
xor
aam
rolb
test
mov
sub
xor
sub
das
rcrb
sbb
div
mov
jae
addr16
lds
test
add
cmpb
pop
test
xchg
mov
mov
je
add
dec
ret
adc
adc
sub
add
xabort
sbb
sub
push
fidivrs
add
jmp
cmp
inc
sbb
mov
xor
movsb
jle,pn
dec
add
dec
not
cld
mov
nop
rol
push
add
scas
mov
lods
sarb
or
cmp
mov
sbb
add
mov
sub
sti
out
sub
dec
or
xchg
and
in
jno
add
cmp
jae
mov
dec
dec
sub
add
rcll
inc
shlb
sub
nop
dec
dec
loopne
adc
daa
fdivs
jg
sbbb
sbb
xchg
sbb
mov
adc
ljmp
xchg
dec
and
and
mov
inc
inc
xor
repnz
jmp
or
data16
cli
rolb
and
gs
push
jno
add
mov
lcall
push
sub
add
or
mov
adc
imul
das
cld
adc
aas
jl
jns
bnd
sub
aad
mov
adc
sbb
fdivs
scas
dec
aad
dec
bound
pop
pop
fdivs
mov
pop
add
inc
push
sbb
jp
sti
add
and
or
jmp
adc
jmp
jmp
cmc
jo
hlt
mov
sahf
xchg
push
mov
pop
cli
pop
push
xor
sbb
mov
les
in
dec
and
push
sub
pop
jo
in
add
into
mov
fwait
out
mov
dec
or
mov
mov
jmp
enter
mov
or
dec
mov
mov
fxch
add
push
into
mov
mov
mov
mov
sub
or
jnp
pusha
insl
adc
add
xorl
xchg
add
sti
dec
cs
fwait
sub
push
ljmp
dec
dec
add
inc
mov
rclb
aas
inc
xor
sbb
ret
pop
and
call
andb
popf
inc
sbb
jl
cmp
add
add
rcrb
out
add
push
in
and
dec
mov
sub
les
or
push
pop
jo
and
mov
cmp
adc
mov
sub
and
addr16
add
cmc
sbb
sti
and
movsb
cld
cmpb
lods
subb
add
aaa
xchg
test
or
subb
push
out
adc
mov
adc
pusha
or
xor
lock
mov
add
comiss
lock
daa
data16
aam
mov
fs
mov
pop
pusha
aad
ds
add
fucomp
jo
lods
cmp
sub
and
push
add
mov
mov
jb
jbe
shll
ss
add
lahf
jae
movb
push
jns
js
les
popf
sub
xlat
dec
pop
sbb
xchg
rcl
das
and
test
popf
sbb
ror
out
pusha
push
mov
sbb
pop
loope
jnp
jb,pt
inc
mov
js
xor
pop
push
dec
das
xchg
cmp
pop
bound
pop
xchg
mov
mov
add
sub
and
pop
ds
scas
xor
es
pop
pop
sbb
xor
jg
mov
mov
je
cld
fldt
andb
lret
pop
inc
pusha
xor
outsl
jnp
out
mov
jae
add
das
lcall
inc
rcrl
loopne
xchg
out
or
sub
cmovns
xor
and
add
add
std
or
dec
ss
and
jnp
cmp
xor
js
fwait
add
adc
dec
clc
mov
movsb
inc
mov
add
out
mov
inc
call
in
push
adc
loopne
test
add
cmp
sbb
fsubrs
jno
sbb
cmc
repz
push
mov
sub
test
js
and
cld
dec
sub
or
fnstsw
ss
inc
out
lock
inc
adc
fsubl
imul
mov
enter
hlt
pop
mov
pop
inc
shlb
jo
add
loope
adc
and
and
sub
and
adc
dec
jne
addl
add
scas
xor
pop
aam
adc
add
rorb
aad
add
enter
lahf
loop
push
mov
das
xor
jle
sbb
test
loop
cmp
xor
push
lock
test
mov
jnp
add
jnp
sub
mov
enter
sbb
in
mov
add
sti
aas
jecxz
pop
and
cs
lods
cmp
negl
inc
or
loope
lods
bound
or
mov
inc
stos
in
mov
push
je
add
dec
xchg
dec
push
std
jae
sub
push
sub
mov
cmpsl
mov
lea
and
sbb
pusha
jg
dec
xchg
icebp
mov
jmp
dec
ficoms
xor
pop
daa
sarl
add
mov
and
mov
pop
jnp
jge
adc
faddp
xchg
sub
outsb
push
and
inc
jl
xchg
daa
xchg
cwtl
adc
pop
test
je
add
xor
cmpsb
inc
push
das
add
xchg
pusha
dec
shll
pushf
mov
xchg
adc
adc
and
add
adc
daa
stos
nop
pusha
aad
add
xor
js
sbb
xor
flds
add
outsl
add
aaa
and
push
or
fs
sub
movb
mov
lds
dec
aam
inc
xchg
sahf
mov
aam
or
mov
inc
lahf
std
jp
add
add
xor
jb
jae
add
in
clc
jge
add
xchg
lret
and
sarl
je
scas
das
pop
test
dec
jae
cs
mov
enter
mov
cmp
jmp
mov
xchg
cli
dec
inc
adc
cmp
jmp
inc
and
cmc
out
insl
rcrl
call
data16
imul
or
aad
daa
andb
jg
lret
add
stos
add
arpl
pop
adc
dec
das
pusha
aaa
fldcw
dec
dec
mov
jo
add
repz
bound
aaa
inc
fimull
adc
jne
rcrl
daa
jge
sbbb
sbb
inc
dec
add
shl
fbstp
add
sti
inc
adc
inc
jp
jae
or
stc
and
bound
sahf
movb
in
ljmp
push
dec
adc
in
push
loop
mov
mov
mov
pop
ds
push
add
jne
push
jecxz
xor
orl
jnp
pusha
and
clc
add
cli
xor
jbe
jge
pop
ret
sbb
sbb
pop
arpl
add
pop
mov
add
addr16
mov
jmp
mov
enter
mov
call
inc
sarb
std
dec
sbb
add
cmp
enter
out
pop
jne
add
add
fnsave
cltd
add
xchg
dec
es
dec
adc
cmp
add
int
xor
adc
bound
dec
cmp
push
outsb
shlb
fwait
inc
dec
mov
movsl
mov
sbb
push
sbbl
add
sub
jo
cmpb
push
jp
add
lds
add
and
rcll
dec
xchg
xor
pop
add
jp
and
lds
inc
mov
add
mov
loop
cwtl
cmp
inc
mov
jl
je
fs
pop
test
add
ficoml
enter
insl
adc
mov
xchg
or
sbb
inc
pop
shlb
push
imul
pop
inc
and
cmp
int3
cwtl
rolb
xor
pop
cmpb
or
jno
and
mov
add
dec
jmp
adc
xor
cmp
add
cmp
nop
mov
addb
sbb
outsl
adc
sbb
pushf
and
inc
cltd
fbld
sub
pop
add
call
pop
pop
stc
add
popf
push
cmp
je
cli
add
jmp
sub
sub
mov
wrmsr
fldenv
jb
aas
pop
and
movsb
not
mov
pop
test
call
xchg
rorl
sub
mov
addl
mov
mov
push
pop
fists
mov
fs
add
cmpsb
or
nop
mov
mov
bound
out
push
and
out
inc
mov
rcrb
push
add
outsb
cmp
push
popf
xchg
test
fdivrs
negl
inc
push
setae
inc
xchg
cmp
das
xor
sbb
inc
lds
dec
cmpl
cmpb
leave
sti
int3
into
pcmpgtb
sbb
fisubs
xor
daa
mov
sarb
jae
add
cmp
xor
movsb
xor
cmpsl
cmpl
les
clc
pop
sbb
add
add
dec
add
sbbb
test
sbb
xor
cmp
pop
lret
movsb
and
js
inc
dec
xor
ja
xlat
test
cmp
inc
mov
add
fs
rolb
or
daa
jg
or
jbe
cs
inc
mov
sbbb
mov
out
inc
mov
adc
mov
add
pusha
stos
mov
daa
andb
sub
insl
pop
gs
and
test
cmpsl
lret
and
push
push
add
push
mov
test
xor
cltd
je
clc
sub
mov
rol
shll
cmp
test
loop
pop
cltd
add
test
push
iret
jecxz
and
lahf
rcr
and
push
cld
mov
mov
pushf
push
pop
sbbb
xchg
inc
mov
xor
add
xchg
mov
xor
xor
lock
shl
dec
adc
loopne
pop
xor
xchg
sub
or
adc
sub
adc
xlat
or
in
pop
push
dec
add
enter
dec
rolb
inc
insb
add
jnp
adc
add
cld
xor
xchg
mov
dec
pop
mov
and
mov
in
movsl
mov
xorb
lds
mov
or
xor
fs
jmp
xchg
mov
add
movsl
dec
dec
gs
loopne
mov
pushf
sub
movsb
inc
mov
dec
pop
icebp
sbb
mov
xor
into
adc
lods
cwtl
int3
insl
cmp
je
jae
sub
jo
test
insb
adcb
cmp
into
add
insl
js
and
jl
push
rclb
cmp
call
mov
cmp
mov
fs
popl
lret
mov
mov
pop
loope
push
inc
inc
fs
cmp
jbe
mov
test
add
scas
jle
lock
sub
in
sub
sbb
jle
negl
das
rorb
mov
push
ret
push
mov
and
pop
lods
mov
loope
or
cmp
xlat
and
inc
cmpsb
add
fs
fs
xchg
test
xchg
mov
cs
pop
push
dec
add
mov
dec
test
sbb
mov
pop
pop
push
mov
mov
scas
enter
jnp
sbbb
pusha
cwtl
mov
mov
fcompl
in
sbb
loop
push
cs
mov
lds
es
pop
pop
popa
adc
and
daa
and
in
add
xchg
jecxz
push
test
mov
sbb
lock
adc
ret
xchg
rclb
outsl
jge
or
cmpsl
mov
inc
mov
adc
rol
adc
pop
mov
push
inc
dec
fs
or
dec
mov
push
jbe
add
or
arpl
mov
orb
cltd
push
jbe
push
adc
jo
or
fs
pop
sub
mul
cmp
xchg
jne
outsl
out
lods
addb
aam
mov
push
lahf
dec
jge
ss
add
sti
lcall
inc
xor
xchg
adc
and
add
jmp
sbb
cli
dec
add
fcmovu
ficomps
shll
or
aaa
adc
mov
test
sbb
adc
stos
add
add
mov
rolb
fs
adc
pop
mov
or
ret
sbb
mov
sbb
push
ss
cmp
aam
xchg
add
aas
icebp
push
mov
or
push
and
inc
cmp
ret
jo
sub
jae
into
out
loop
sub
lret
jbe
int
adc
dec
mov
sbbl
scas
ljmp
ret
dec
add
jecxz
add
sbb
add
mov
je
dec
xchg
push
idivl
and
pop
insl
int
aad
mov
mov
inc
xchg
fstps
pop
dec
and
add
or
xor
cmp
loope
mov
and
cmp
push
pop
scas
lret
pop
repz
and
out
rcrb
adc
test
xorb
mov
les
inc
add
mov
push
aaa
mov
je
ficompl
jo
sub
lods
and
leave
out
cmp
cmpsl
adc
aam
test
les
movsl
jle
rorl
fwait
cmp
add
or
mov
es
das
mov
sub
adc
call
fsubrl
test
nop
test
jbe
add
push
pusha
dec
adc
gs
out
fs
movsb
inc
pop
mov
jae
inc
lock
int3
dec
push
push
and
mov
dec
pushf
dec
ret
mov
xchg
shlb
xor
loopne
ss
jbe
add
sbb
das
pop
adc
jecxz
add
imul
mov
in
fmulp
adc
fwait
and
xchg
mov
loopne,pt
mov
jae
mov
sub
imul
sbb
dec
inc
das
and
xchg
and
subb
xor
sbb
or
out
mov
pop
jg
add
mov
sub
mov
adc
lock
lock
adc
in
insb
adc
out
iret
jns
push
fstpl
inc
iret
xchg
movsb
test
enter
fidivrl
daa
inc
xchg
push
sub
mov
cltd
pusha
aam
push
sbb
outsb
loop
mov
jmp
mov
mov
mov
adc
add
lock
inc
je
ret
xor
xor
pushw
popf
idivb
mov
fstpl
sub
sbb
insb
sub
mov
xchg
mov
pop
or
or
and
inc
movsl
add
das
xchg
cmp
inc
cmp
mov
xchg
adc
loop
and
nop
test
and
arpl
pop
js
xor
fs
test
ret
add
jmp
sbb
inc
or
adc
test
jnp
xchg
dec
xchg
mov
jl
lcall
vmread
add
xor
cld
mov
cmp
pop
fs
add
cmp
lds
add
cs
add
fildll
push
mov
je
stos
jp
xor
jge
cwtl
and
test
mov
mov
sub
aas
cmp
rorb
cmpsb
jge
lahf
push
or
popa
ss
add
jle
or
std
xor
push
movsl
adcl
xor
inc
dec
iret
outsl
ss
popa
and
loop
dec
loop
push
cmp
out
shr
push
dec
xchg
jnp,pt
or
jbe
inc
dec
or
jge
shrb
iret
push
add
or
in
cmp
jmp
sub
inc
cwtl
jg
cwtl
jp
jbe
add
outsb
scas
xor
xchg
lods
in
push
pop
out
xorb
xlat
or
popa
mov
aad
pop
add
incb
js
lods
or
mov
cmp
bswap
mov
jge
ret
push
dec
nop
fs
xlat
jae
mov
sbb
add
inc
jbe
jns
sub
mov
add
ljmp
in
hlt
push
out
sbb
in
mov
and
repz
inc
push
inc
mov
shrb
imul
loop
mov
xchg
in
data16
mov
or
cmp
inc
xchg
je
mov
outsb
test
jg
add
mov
filds
sbb
mov
test
pcmpgtw
inc
mov
outsb
jb
nop
pop
sub
pop
insl
mov
xor
and
mov
sbb
mov
push
add
stos
scas
enter
jnp
add
lret
movsb
loopne
shlb
pop
add
jl
les
std
ret
fstpt
adc
or
sarl
mov
pop
add
fidivl
jns
add
cwtl
sub
nop
lods
push
call
pusha
cs
xchg
lock
xchg
cwtl
inc
adc
inc
loop
jo
cmp
andb
cmp
mov
call
daa
nop
je
push
add
and
add
fists
and
add
mov
mov
rcll
pop
ss
aas
test
leave
push
mov
and
cmp
fdivrl
jnp
inc
call
arpl
gs
xchg
sub
cmp
xor
mov
leave
lds
mov
sub
sbb
movsb
ljmp
fdivs
subb
mov
and
lret
aas
or
cmp
jmp
fwait
stos
loopne
bound
loopne
adc
arpl
sub
dec
rcrb
sub
dec
das
ljmp
adc
inc
xchg
jl
out
test
lods
mov
pop
pop
and
sbb
sbb
roll
xchg
pusha
lods
lahf
pop
adc
cmp
add
ja
jb
ror
pop
idivb
add
push
inc
imul
mov
cmp
jo
dec
add
ljmp
pop
mov
roll
aaa
mov
add
jbe
loop
push
push
push
jae
push
add
sub
cld
mov
cwtl
inc
push
mov
dec
adc
movsb
sbb
les
ja
es
dec
sbb
cs
mov
pusha
lods
das
jl
xchg
xor
fsubr
dec
mov
jp
inc
lods
rcrb
push
fs
pop
mov
and
xchg
and
test
mov
inc
jg
or
call
add
pop
and
xchg
mov
fmull
or
shrl
cmp
push
jo
aad
mov
pop
add
push
sub
pop
add
addr16
pop
xor
xor
dec
in
mull
add
subl
popa
xor
inc
mov
mov
lahf
mov
insl
orl
std
xchg
add
mov
or
add
leave
cmc
dec
sbb
xchg
sbb
cs
aam
mov
xchg
and
cld
push
imul
dec
ss
jecxz
sbb
fldt
gs
xchg
pop
popf
mov
jmp
pop
or
and
jae
cs
into
movsb
inc
and
adcl
pop
cmovo
adc
or
cltd
xlat
jmp
mov
out
inc
inc
test
push
cmp
daa
sbb
movsb
sarb
rclb
clc
mov
xchg
fwait
sub
cmp
push
fs
sbb
dec
mov
sbb
shrl
and
les
lcall
shrl
stc
shlb
negl
or
xchg
inc
pop
mov
add
dec
and
mov
call
call
push
mov
and
lcall
xchg
jb,pt
cmp
pusha
lock
push
sub
cmp
int3
addb
faddl
add
loope
ss
in
add
lret
mov
sub
cmpsb
sbb
xor
je
mov
jo
mov
arpl
jge
call
dec
sbb
lea
out
jb
pop
mov
test
repnz
add
pusha
sahf
leave
push
pop
pusha
mov
cmc
add
xor
call
ret
dec
in
mov
mov
inc
aaa
scas
mov
push
adc
pusha
jae
pop
add
fnstsw
rolb
rcll
in
imul
sub
lea
gs
addr16
mov
jae
inc
and
bound
inc
stos
loope
add
sbb
adc
call
add
hlt
rolb
and
leave
jo
out
je
pop
and
in
fisubrs
fwait
jae
popa
les
pop
lock
ret
or
out
in
sbb
in
xor
add
sbb
out
add
repz
push
jle
int3
iret
lahf
add
cmp
roll
jl
pop
sbb
adc
iret
test
adc
xchg
outsb
xor
lds
cmc
xor
roll
lock
xor
popf
sbb
jle
push
sub
sub
cmpb
loopne
or
jne
jge
push
mov
add
xor
inc
lea
dec
xchg
shr
repz
mov
mov
negb
test
xor
addr16
pop
enter
in
cmc
sbb
addl
push
add
mov
cmp
idivl
add
xchg
mov
ret
adc
shlb
jg
mov
fwait
mov
sahf
add
mov
hlt
add
xor
add
or
lcall
pop
lret
repz
mov
xchg
xor
stc
shll
mov
cmp
stos
add
test
dec
addb
or
sbb
jno
outsl
in
add
icebp
or
add
push
sbb
add
ret
shrb
inc
out
mov
mov
inc
mov
setbe
test
test
sbb
shl
ljmp
adc
add
gs
add
jns
sbb
add
or
sbbl
hlt
lea
es
mov
rcl
out
dec
scas
add
leave
testb
jno
pop
mov
cld
out
add
cmp
mov
addb
pusha
xlat
sbb
in
cmp
add
les
mov
sub
dec
sti
imul
add
outsl
sbb
add
sbb
dec
les
test
cli
movsl
jmp
cmp
mov
sub
mov
sbb
fmulp
sub
and
sub
inc
xchg
ss
int
and
push
mov
mov
dec
pop
in
add
mov
xor
xchg
movl
arpl
xchg
push
xor
add
and
mov
add
in
jbe
out
inc
add
jmp
arpl
or
pop
add
cmp
add
mov
imul
or
lds
jecxz
cmp
add
cmpsb
and
mov
xchg
add
adc
test
rorl
iret
call
lret
add
sub
sbb
or
mov
and
les
sbbb
pop
and
inc
andl
dec
add
lods
ss
iret
arpl
mov
jno
outsb
jne
mov
cwtl
xchg
or
mov
out
les
out
scas
lock
xor
jno
enter
add
or
xchg
sub
shrb
subb
pop
jae
cwtl
int3
mov
test
xchg
push
js
add
in
adc
jnp
add
out
mov
loope
add
push
imul
add
bswap
sbb
out
add
rcrb
inc
sub
std
or
and
cmpsl
jecxz
mov
inc
fwait
ljmp
dec
pop
leave
sbb
clc
dec
push
add
into
xor
pop
popa
gs
pop
fsubrp
jae
scas
mov
jb
in
adc
cmp
icebp
nop
scas
xor
ja
add
cs
in
and
jb
popa
push
loopne
js
add
iret
lret
inc
into
in
shl
push
and
add
das
push
lret
stos
mov
pusha
sbb
push
fidivrl
test
adc
fiadds
fidivrl
lea
adc
stos
mov
mov
add
sub
cs
scas
push
add
out
add
aam
verr
loopne
mov
into
nop
xor
pop
adc
in
add
mov
mov
add
inc
cli
jbe
add
sub
jo
pusha
add
loope
cmpsl
shll
xor
imul
jnp
mov
rol
sbbl
movsb
filds
insb
loope
jnp
sub
xchg
iret
pop
test
mov
clc
pop
add
mov
sub
jmp
subb
pop
mov
mov
cmc
in
lds
add
aas
rcrb
mov
mov
scas
inc
push
inc
cmp
ja
stos
cmpsl
push
pop
ret
jne
jo
or
fcomps
setno
add
cmpsl
subb
add
lds
mov
and
pop
popa
push
cmpsl
or
add
in
pop
sbb
push
int3
cli
loopne
jb
pop
outsb
jo
sub
inc
xchg
pop
add
mov
pop
pop
mov
testl
adc
les
rcll
adcl
imul
testb
call
fisubrs
cmp
push
loope
add
sub
add
les
pusha
pop
push
or
cmp
fndisi(8087
mov
addl
lret
fistps
frstor
pop
pushf
dec
inc
push
test
xor
and
daa
jbe
fildll
adc
xor
dec
int
out
sub
cmp
nop
jae
xchg
jbe
jne
out
popf
insb
cld
fimull
add
sbb
mov
sti
out
pmaxub
testb
cmpb
sub
std
fsubs
and
cli
xor
loop
jne
add
repz
leave
mov
add
ficoml
idivl
adc
add
sbb
jle
xchg
or
dec
pop
sti
mov
lock
aas
incl
xchg
sub
add
lahf
jns
xchg
add
jmp
or
and
sub
lret
outsl
shl
xchg
or
mov
or
sbb
out
add
lods
and
je
add
push
sbb
lahf
dec
mov
mov
inc
rolb
hlt
mov
dec
and
jp
jns
fiaddl
popa
mov
inc
nop
cwtl
shrb
decb
out
push
leave
add
inc
sbb
js
mov
mov
lds
xor
adcb
rolb
push
jnp
or
or
jns
adc
sahf
ds
lahf
mov
orl
or
loope
jnp
nop
mov
xor
push
movsb
int
or
xor
add
testb
xor
mov
hlt
call
aam
sbb
faddl
cmp
xchg
and
mov
cld
xor
and
add
test
lret
xor
and
mov
xlat
and
int3
js
xor
xchg
mov
stos
xor
cmp
push
jns
out
push
push
dec
add
xchg
mov
or
mov
cmp
fwait
sbbl
adc
pop
js
xor
jnp
dec
add
add
push
xchg
adc
lods
or
add
int
nop
pop
fistpll
or
or
jg
and
adc
mov
cmp
stos
jae
int3
rcll
jbe
stc
mov
xchg
push
push
jb
stos
mov
or
cmp
nop
cltd
int3
push
mov
movsb
hlt
add
sbb
ret
scas
in
add
addr16
sub
adc
ss
sar
andl
jbe
in
add
mov
push
xchg
stos
rcrb
lock
pop
xchg
jl
add
inc
mov
add
inc
pop
mov
mov
xchg
je
fcoml
sub
sbb
mov
aas
mov
outsl
sbb
or
out
test
test
cwtl
jne
and
divb
in
push
dec
mov
lea
mov
xchg
sti
add
cmpsb
pop
and
subb
jne
sbb
mov
push
popa
jo
add
in
lods
mov
jp
nop
xchg
mov
inc
pop
fcomip
stos
pop
jl
jne
std
add
int
imul
jg
inc
lock
arpl
fwait
pop
pop
test
sbb
inc
pop
xchg
mov
cmp
nop
push
dec
jg
jge
jl
stos
add
mov
add
cmp
adc
pop
lds
add
aas
lock
xchg
call
in
add
into
adc
add
mov
jp
add
int
sbb
idivb
mov
dec
clc
cld
cmp
jae
add
and
imul
int3
mov
add
popa
dec
clc
test
fdivrs
adc
test
mov
pop
jnp
pop
cmp
decb
cs
dec
add
xor
dec
push
xchg
in
xchg
pop
add
xchg
jb
fldcw
sub
lock
cwtl
pushf
aas
mov
stc
add
es
test
outsl
cmp
mov
mov
sbb
in
sbb
sub
lret
cmpsb
outsl
insl
inc
mov
mov
pop
ficoml
jne
jae
cld
add
push
scas
in
in
dec
add
adc
xchg
int
addr16
adc
mov
add
arpl
add
push
std
jb
popf
jbe
pop
adc
lldt
sbb
mov
and
std
aam
sbb
and
add
daa
outsl
loop
dec
stc
test
scas
cmpb
fs
add
gs
push
jno
and
xchg
mov
mov
cmp
aas
adcb
jl
icebp
mov
push
lods
shlb
adc
iret
and
mov
mov
mov
xchg
repz
cli
mov
or
pop
aas
pushf
mov
dec
add
std
push
clc
add
jb
sbb
outsl
add
scas
adc
add
jp
xchg
lods
add
leave
pop
xor
imul
loope
jp
ja
in
push
enter
outsl
lods
mov
and
add
repz
clc
call
pop
enter
adc
scas
nop
cmp
mov
int
lock
push
jo
xchg
nop
mov
pop
in
pop
jb
jbe
mov
data16
cmpsl
andb
js
testl
mov
mov
and
sub
in
add
mov
jl
push
popa
loope
shll
mov
aaa
faddl
add
push
jmp
rcll
xlat
sbb
daa
or
dec
add
xor
in
lcall
jnp
filds
add
push
or
mul
dec
mov
xor
icebp
sub
call
sbbb
add
xor
sbb
xchg
lock
lock
dec
push
mov
add
call
add
stos
xlat
aam
jmp
push
ret
call
xchg
cwtl
cld
data16
fistpll
les
push
pop
out
add
inc
push
cwtl
mov
adc
inc
xor
into
fcoms
add
jne
xchg
lock
pop
cwtl
cmp
shrb
pop
xchg
lds
and
mov
add
test
xchg
mov
mul
mov
cmp
push
add
addr16
cmp
in
add
xor
push
leave
fldenv
stos
lds
mov
gs
sub
mov
sahf
out
mov
decb
xchg
int
pop
outsl
nop
shlb
sub
sbb
pop
test
add
xor
or
stc
cmp
test
cmp
jge
das
dec
dec
clc
roll
shrb
movsb
mov
inc
enter
mov
mov
fstl
or
lods
push
icebp
shr
xchg
fisubs
fs
sub
cmp
xor
push
andb
jae
scas
dec
cltd
test
hlt
adc
mov
imul
push
adc
test
dec
addl
fxch
mov
push
enter
icebp
fisubl
out
add
cmp
imul
out
jae
dec
dec
fnsave
and
sub
mov
adc
call
jno
bound
mov
cmp
arpl
jle
fimuls
add
jne
shl
insb
insl
in
call
jmp
mov
popf
lods
hlt
mov
mov
xor
inc
cmpsb
add
inc
and
insb
jbe
shrl
pushf
lods
insl
andb
mov
cmp
jge
mov
and
and
adc
or
add
loopne
clc
add
or
add
roll
out
and
sbb
test
fldcw
jne
scas
mov
mov
add
xchg
scas
cltd
add
or
lds
clc
add
notl
into
pop
mov
out
mov
add
jecxz
lea
scas
test
inc
sbb
add
lcall
mov
or
in
loopne
test
hlt
xor
xchg
das
xor
add
dec
jl
push
mov
jbe
add
add
loope
rcrb
add
pop
pop
call
scas
fucomip
imulb
add
dec
xor
out
add
and
push
xchg
push
stos
scas
xor
add
fsubrl
add
mov
cwtl
push
jae
cmpl
clc
adc
nop
cmpsl
popf
out
filds
pop
fneni(8087
inc
addb
inc
clc
repz
and
pushf
xchg
pop
adc
sub
loopne
lahf
and
lret
sub
dec
ss
call
scas
test
mov
enter
mov
adcb
pop
sbb
add
dec
dec
push
shrb
inc
add
push
cmp
ds
adc
xchg
sbbb
mov
jl
pop
js
imul
mov
add
adc
clc
add
push
mov
out
add
jmp
stc
mov
shl
dec
ret
dec
mov
add
pop
idiv
xor
mov
mov
hlt
inc
jbe
cwtl
rolb
pusha
les
in
xor
mov
rolb
jg
int3
mov
int
repz
sti
add
jb
mov
lahf
lret
popa
inc
loop
and
xchg
xchg
mov
jnp
pusha
push
sub
pop
faddl
dec
cmc
mov
aaa
or
jbe
jg
mov
das
push
sub
add
movsb
clc
int
scas
mov
add
stos
fisubrs
cli
fisubl
in
jg
add
cmp
out
jp
jge
push
fisttpll
pop
or
nop
aaa
add
imul
add
loope
adc
xchg
fs
xchg
scas
xlat
cmp
mov
mov
and
push
add
or
push
mov
aad
cmpb
jecxz
add
push
cltd
cmp
jge
in
push
stos
sti
push
in
test
shlb
fsubr
add
fsubs
stos
sub
sahf
jge
loope
push
mov
repnz
into
loopne
push
sahf
in
in
pop
pop
ds
mov
inc
pop
js
add
test
into
adc
cmp
mov
inc
mov
icebp
into
lcall
mov
test
jl
or
xor
lret
or
nop
and
inc
das
sub
add
pop
out
mov
add
movsl
into
ss
push
add
xchg
add
loope
cmp
pushf
mov
sub
icebp
hlt
push
fistl
pop
ja
add
add
mov
add
sub
or
xor
loope
int3
mov
arpl
mov
xor
loop,pt
xchg
neg
loope
int
subb
xor
repz
add
and
and
inc
adc
add
jmp
push
scas
inc
and
pusha
inc
sbb
mov
xchg
sbbb
inc
pop
rcrb
push
sub
jmp
rolb
or
dec
and
pop
nop
int3
outsb
mov
cmp
inc
add
add
mov
mov
je
pusha
jnp
gs
dec
add
add
mov
in
adc
test
mov
inc
mov
sub
adc
arpl
xor
lret
adc
xor
adc
pop
add
imul
pop
stc
dec
js
iret
adc
cmc
lret
mov
sarl
test
mov
cmp
adc
adc
pop
pop
adc
cmp
xchg
nop
pusha
inc
pop
xchg
jae,pn
mov
xor
jg
and
ffree
cld
add
fidivl
jge
jns
add
shrb
xlat
xchg
inc
sarb
add
push
sub
pop
push
test
add
pop
out
mov
jne
jp
jnp
xchg
ret
sbb
jle
push
pushf
mov
xlat
adcl
mov
push
inc
clc
aam
add
test
add
lret
jecxz
push
mov
jmp
cmpsl
dec
inc
add
fs
add
push
loope
popf
ss
hlt
push
sbb
cmpb
dec
cmpsl
out
add
test
cmpsb
xor
push
pushf
fs
mov
or
adc
mov
add
outsl
imul
cmp
pop
jo
push
and
add
xor
popf
mov
repnz
sbb
inc
cli
inc
mov
pop
add
adc
ret
ret
add
pop
and
repnz
push
dec
pop
mov
xchg
int
adc
aas
add
dec
inc
sarb
add
dec
cmc
xchg
sub
push
dec
scas
fcmovne
mov
arpl
sub
add
loopne
popa
shll
out
sbb
cwtl
andb
in
pushf
inc
dec
add
push
xlat
mov
lcall
mov
pop
loopne
fisubrl
mov
das
adc
or
cmp
dec
shll
push
mov
and
mov
rorb
into
fstl
adc
xlat
jns
adc
adc
add
add
andl
sti
push
mov
mov
imulb
aas
ds
pusha
loopne
mov
sub
pop
pop
inc
or
mov
pop
add
call
add
aam
fistpll
dec
or
mov
jne
jns
lahf
sub
fs
mov
pop
mov
pop
add
mov
aaa
sub
pop
rcr
adc
es
push
rcll
and
ss
inc
fsubrs
pshufw
dec
or
mov
pop
andb
aas
push
rorb
insl
adc
push
sbb
adc
lock
jno
add
pop
out
lea
mov
and
xchg
push
inc
dec
jp
outsl
lds
mov
xor
xor
scas
dec
out
fldl2t
or
jmp
add
imul
or
orb
arpl
cmp
xor
rolb
pop
jmp
mov
sti
jl
addr16
sbb
in
jp
inc
pop
add
inc
into
ret
cmp
mov
movsl
cmp
and
mov
int3
call
movsb
mov
mov
cmpsl
cmc
pusha
rcrl
add
jmp
fidivrs
rclb
xchg
pop
jle
popl
insb
loope
clc
ret
sub
jmp
enter
push
in
jae
pop
add
sub
call
stos
jg
xchg
and
shrb
sbb
mov
jae
mov
imull
shll
dec
movsb
in
xor
inc
mov
loopne
stos
outsb
inc
fistpll
adc
lds
mov
and
add
jg
add
mov
inc
test
out
cli
negb
push
cltd
sbb
scas
xor
ds
fs
fmull
adc
fwait
scas
cld
add
add
xchg
xlat
loop
mov
mov
in
and
addl
adc
sbbb
mov
add
jne
popa
jns
or
mov
xor
fcom
or
fildll
mov
sub
or
adc
mov
add
dec
add
ja
mov
popl
es
jbe
ja
mov
xor
out
pop
mov
into
and
pop
lock
add
jg
fnstsw
pop
adc
mov
roll
jge
pop
aam
add
cmp
push
add
xor
fs
sbb
jae
ret
add
ds
add
jae
cli
lahf
add
mov
inc
mov
pop
add
lret
push
and
sbb
add
adc
mov
jmp
hlt
and
add
push
std
call
insl
sbb
mov
sub
xor
in
dec
push
xchg
mov
roll
inc
and
jp
data16
mov
shrb
hlt
mov
add
je
push
mov
mov
adc
fadds
jb
mov
or
jne
pmullw
push
fnstsw
add
test
ret
jge
and
pusha
push
dec
add
xchg
xchg
push
pop
test
pop
cmp
cs
clc
aam
add
mov
movsb
dec
add
aad
sub
test
fildll
lods
ja
dec
inc
push
cmc
cli
inc
pusha
enter
cmp
inc
popa
jl
xchg
aad
and
hlt
out
cmp
cmp
sbbl
dec
add
daa
jno
xchg
adc
add
jb
je
pop
mov
mov
or
pop
inc
push
out
stos
xor
add
add
lea
pop
xor
lock
pop
xchg
in
cwtl
sbb
mov
cmpsb
lret
addb
jne
xor
rcl
sbb
mov
out
test
or
push
cmpsb
jae
and
loopne
popa
dec
movsl
sbb
out
fsubrl
stos
int3
add
cltd
movzbl
addr16
adc
and
jae
in
cmpsl
xchg
pop
pop
add
inc
mov
sub
js
pop
xchg
mov
data16
cli
adc
push
inc
mov
popf
mov
pop
iret
fstpt
sbb
cmp
mov
mov
nop
cmp
jecxz
dec
repz
pop
sbb
mov
nop
in
ss
push
mov
cmc
fisttps
push
stos
add
cmp
sbb
nop
xor
xchg
or
jbe
add
adc
sarb
adc
rclb
inc
or
sub
lret
xor
sahf
jecxz
shl
add
rcr
xor
fistl
and
push
inc
out
mov
add
jg
outsb
jmp
xor
inc
mov
pop
pop
dec
fbstp
movsl
loop
inc
dec
add
pushf
xor
mov
cmp
and
popa
dec
out
and
es
push
test
sbb
mov
ja
inc
outsb
add
cld
movsb
xchg
pushf
mov
iret
and
lahf
loope
pop
jp
push
mov
pop
movl
mov
xor
xor
iret
unpcklps
outsl
test
add
mov
mov
test
cmp
mov
push
imul
push
xor
inc
xchg
aas
cmpsb
addb
jns
ljmp
popf
add
jne
lret
mov
movsb
je
cmp
add
dec
inc
stc
fwait
pop
mov
add
pop
scas
sbb
xchg
xor
sub
and
add
inc
fdivr
sbb
or
pop
mov
cmp
pop
sub
fldenv
jno
cmp
pop
sub
push
hlt
adc
push
jp
dec
stos
adcl
lea
es
sbb
rorb
and
xchg
sbb
mov
sbb
sbb
xlat
sar
cmp
fldcw
adc
pusha
push
mov
cmp
dec
test
addr16
sbb
dec
leave
andb
lea
or
clc
movsb
idiv
jb
fldl
pop
test
fidivrl
decb
aam
adc
add
pop
xlat
lahf
mov
cmp
inc
adc
pop
or
incl
scas
adc
push
pusha
fnstenv
rcr
mov
inc
sub
pop
and
jne
inc
int
inc
leave
lea
fiadds
pop
or
mov
pop
xchg
add
xor
aas
scas
sub
lret
test
lods
inc
mov
mov
mov
fists
sahf
aas
jl
or
inc
sub
psubd
ja
add
or
out
lock
add
dec
pop
inc
mov
xor
pushf
xor
fs
or
stos
imul
pop
lock
add
xchg
aas
jne
mov
mulb
add
mov
cwtl
sub
push
push
pusha
add
add
incl
out
push
and
add
lret
cmp
adc
and
xor
movsl
fiadds
jg
rorb
popw
mov
rcrb
xor
pop
mov
mov
cmc
add
negl
pop
rcrb
setns
jns
leave
jb
add
xchg
adc
or
lock
jno
xchg
push
mov
xchg
mov
push
add
mov
mov
push
adc
fistps
mov
add
xchg
sbbb
ljmp
lds
cmpsb
lods
pop
lock
mov
fsubl
movsb
sub
add
push
push
and
mov
cmpsl
sbb
dec
cmc
pop
mov
add
fldt
add
cld
xor
pusha
mov
xor
sbb
js
pop
pop
jno
inc
fcoml
in
addb
stc
pop
inc
xchg
gs
add
xchg
push
aas
cmpb
insl
clc
pusha
fs
je
cs
add
es
out
lods
sbb
popa
imul
ret
in
add
daa
aam
jnp
rcl
mov
push
xchg
into
sub
pop
inc
lret
push
mov
ret
gs
xor
shlb
int3
enter
lahf
cmp
pop
sti
jl
rorb
shlb
push
das
xchg
cmp
cmpsb
jo
and
jg
pushf
outsl
int3
add
enter
jo
cld
jns
add
cli
or
xchg
mov
sahf
cmove
sub
pop
out
mov
dec
testl
outsb
jb
dec
add
aas
xor
fstps
inc
and
xor
cmp
pop
add
sbb
jmp
mov
dec
mov
mov
add
out
add
ds
in
verr
pushf
repnz
add
in
scas
add
mov
xor
stc
mov
xor
add
fcmovbe
fxch
xor
dec
out
add
mov
pop
out
lcall
add
mov
addr16
cmp
insb
add
sti
rcrb
in
mov
mov
movsl
pop
lret
pop
mov
pop
es
jb
mov
add
push
inc
adc
das
cmp
add
in
xchg
gs
out
jo
add
xchg
mov
jne
add
mov
xlat
subb
xorl
fistps
ucomiss
pop
fs
push
testb
in
insb
dec
insb
adc
adc
test
sub
iret
inc
mov
xchg
add
adc
mov
or
lea
nop
push
dec
repz
in
ja
add
out
xor
jnp
pop
mov
jbe
sar
push
xlat
sbb
add
in
add
push
push
aam
aas
fsub
mov
and
sub
push
mov
pusha
stos
aas
add
adc
xchg
sbb
and
jl
sub
push
mov
sub
pop
fld
add
mov
pusha
push
mov
imul
add
sub
mov
cmpsl
and
sbb
xor
lock
das
add
inc
lods
nop
leave
out
leave
sbb
in
je
dec
pusha
andb
jmp
subb
jns
adc
mov
out
sbb
jne
cmp
jae
in
sbb
bnd
jmp
cwtl
xor
cmp
xor
or
outsl
pushf
adc
add
push
fisubl
pop
xchg
in
sbb
pusha
cmp
repnz
xchg
adc
je
push
cwtl
push
jecxz
imul
dec
divb
push
lcall
add
xlat
xor
inc
inc
cmp
jbe
add
popf
mull
pop
mov
and
cmc
jl
aas
cmp
jno
fsub
fs
mov
inc
ljmp
rolb
in
push
xor
pusha
mov
jle
test
shrl
jne
das
mov
sarl
mov
lret
ja
add
cmp
aam
push
add
test
in
sub
xchg
mov
or
das
or
mov
add
mov
mov
mov
pusha
je
mov
add
lret
mov
dec
push
imul
in
aas
ret
pop
cmp
test
orl
pop
pop
xor
int
mov
sti
dec
in
sbb
lcall
sbb
iret
fdivrl
cmp
scas
xchg
pop
push
mov
cmp
aad
push
add
mov
insl
hlt
test
jb
je
incb
jbe
xchg
mov
sar
add
add
or
push
pop
xchg
into
push
or
stc
cltd
imulb
les
or
add
add
aas
jp
orb
sarl
loop
pop
mov
xlat
pcmpeqw
xor
add
add
add
icebp
dec
xchg
je
pop
imul
cld
add
test
fldl
pop
outsl
inc
daa
sub
adc
addb
cmp
xor
in
pop
out
and
xor
popl
fwait
cmpsl
lods
push
mov
nop
inc
fstl
push
out
rolb
sbb
push
add
sub
pop
jae
add
xor
cmp
fldl
cs
mov
inc
cmc
add
mov
das
xchg
add
pusha
pop
push
jle
and
and
sbb
sbb
loopne
dec
add
jbe
fwait
movsl
lods
test
add
and
cmpsb
fldt
adc
sti
hlt
xlat
push
xor
ds
int
cmp
add
lock
add
loope
xlat
outsl
leave
mov
mov
or
pop
xchg
sbbb
mov
sarl
add
xchg
rcr
push
inc
clc
push
add
push
ret
ja
dec
mov
pop
mov
cltd
shlb
xchg
movl
je
ds
jno
dec
enter
hlt
sbb
sbb
push
mov
cli
adc
hlt
cmp
dec
dec
add
xchg
xor
or
fwait
inc
mov
test
addr16
pop
dec
add
outsl
imul
jle
add
pop
sahf
mov
push
sub
dec
pop
add
dec
setp
inc
shr
mov
push
pop
jg
adcb
cmp
add
test
push
mov
add
iret
and
pop
sahf
jne
sub
adc
cmpb
add
dec
bound
and
push
pop
xchg
add
xorl
add
fbstp
xchg
addb
push
or
inc
call
out
add
pop
punpcklbw
addl
arpl
xor
push
inc
mov
fdivrp
test
inc
add
xor
hlt
add
push
jo
sub
pop
cmpsl
popa
imul
shlb
mov
sub
shlb
movsb
mov
clc
andb
es
mov
jnp
pushf
add
mov
sbb
mov
or
jp
add
outsl
add
lcall
rorl
or
inc
int3
call
sarl
add
adc
cs
or
lds
or
xchg
lret
pop
jo
add
add
mov
adc
aad
cmp
dec
lds
adc
leave
adc
jnp
xor
mov
pop
out
mov
mov
hlt
pop
inc
sub
push
cmp
fsubrs
mov
imul
hlt
clc
push
xor
mov
fcmovnbe
lock
mov
addb
fwait
test
imul
shr
xor
aam
xchg
xchg
lock
aaa
sbb
adc
and
push
inc
jle
mov
add
iret
sbb
outsl
adc
dec
js
add
fdivs
or
je
add
or
lods
sbb
mov
sub
inc
or
xorl
cmp
test
ret
and
sub
sbb
add
fpatan
negl
int3
cld
ds
pop
jno
outsl
xor
repnz
loop
jae
fiaddl
sub
dec
out
cld
push
shrl
dec
xor
ja
inc
dec
das
and
test
mov
inc
bound
add
mov
mov
sub
mov
call
ret
nop
outsb
mov
sbb
arpl
js
aas
in
mov
sbb
push
lcall
and
add
roll
mov
loope
movsl
mov
sbb
outsb
mov
push
inc
and
sbb
mov
add
call
sub
pusha
fwait
dec
push
sbb
inc
jl
cmp
ret
sub
cltd
jg
dec
jnp
insb
sub
cwtl
add
sar
add
jle
enter
setg
mov
aas
add
stc
sub
sbb
stos
dec
scas
ljmp
fwait
rolb
fmuls
mov
movsb
add
fadd
dec
repnz
arpl
push
test
enter
ja
pop
xor
dec
add
jno
add
add
add
or
mov
xor
push
dec
jnp
add
mov
rcr
inc
xchg
sbb
mov
fmuls
mov
push
dec
cmp
or
pop
rorl
sti
cmc
popf
adcl
faddl
repz
adcb
inc
mov
xchg
adc
xor
andb
pushf
enter
sbb
push
outsb
mov
loopne
mov
test
in
fdivrp
loopne
es
dec
nop
add
jbe
hlt
xor
pusha
jecxz
jo
inc
sti
ljmp
pushf
ficoml
mov
scas
mov
xchg
and
inc
xor
mov
add
adc
aas
add
les
clc
xor
push
sub
pop
xchg
daa
sbb
mov
out
in
imul
ss
loopne
xorb
xchg
jns,pn
pop
aas
mov
mov
int3
pop
into
add
popa
outsl
movsl
jae
mov
outsb
and
xchg
xchg
add
push
add
mov
pop
mulb
test
add
ret
inc
enter
and
push
leave
movsl
addb
xchg
mov
xor
out
imul
add
push
shlb
inc
sarb
in
negl
and
cmp
loop
inc
cmc
mov
iret
mov
movsb
mov
mov
adc
inc
lock
pop
cwtl
sbb
mov
insb
sarl
mulb
or
push
add
jl
in
or
push
add
xor
add
mov
pop
add
mov
pop
jne
mov
sbbb
mov
push
push
popf
sub
pop
movsb
fimuls
mov
adc
fnstcw
sub
xlat
jo
add
xor
add
testl
and
mov
push
pop
jg
add
test
cmp
cmp
int3
and
jp
push
sub
mov
add
clc
insl
push
add
push
xor
xor
rolb
rclb
push
bnd
pop
sub
rcrb
add
xchg
repnz
insb
adc
ret
cmpsl
push
dec
mov
xchg
hlt
xchg
xlat
xor
nop
mov
jmp
pop
or
roll
mov
inc
jno
jae
cmp
imul
pop
addb
push
add
and
add
loopw
pop
fiadds
orb
add
nop
fnsave
inc
or
repnz
add
outsl
inc
adc
dec
in
mov
add
push
mov
clc
in
std
hlt
adc
add
jae
nop
inc
mov
je
add
mov
adc
mov
rcl
sub
or
and
sbb
repnz
sub
repz
xor
sbb
xchg
setno
rcrl
testb
enter
sbb
insb
mov
hlt
outsb
lock
cmp
jg
sbb
push
xor
pusha
in
and
jno
jle
popa
adc
stc
roll
insb
mov
and
xchg
adc
fmull
mov
ret
adc
cmpb
aaa
push
loopne
pop
pop
sub
pop
adc
lret
inc
pop
repz
pushl
jge
and
stc
mov
nop
lret
in
aam
pop
jne
add
roll
adc
lcall
jae
out
sbb
xor
rcll
pusha
lahf
push
jge
or
inc
mov
inc
sub
xchg
das
in
lahf
aam
ss
xchg
adc
or
cmp
outsb
js
push
int
fwait
mov
pushf
inc
push
push
out
mov
movsb
sub
add
jnp
jae
mov
jg
les
js
cmp
and
in
inc
inc
adc
cli
add
std
jmp
out
pop
ficomps
xor
adc
in
push
sub
push
xchg
dec
mov
daa
and
int
aaa
ret
sbb
xorl
cmc
sub
icebp
adc
inc
push
inc
push
mov
ljmp
cmc
cmp
jne
dec
sti
cmp
lret
push
mov
out
fmull
sbb
out
adc
inc
ljmp
fwait
jb
add
sub
stos
filds
adcl
mov
pop
xor
inc
aad
adc
pop
imull
repnz
hlt
push
loopne
add
jecxz
ret
iret
sub
out
mov
pop
pusha
in
and
je
add
arpl
adc
repnz
test
xchg
in
jbe
add
lahf
mov
mov
mov
xor
dec
loop
ss
sbb
pop
fs
xor
pop
sbb
cwtl
and
lea
leave
les
xor
cmp
mov
jg
out
or
add
daa
jno
movb
add
sahf
cmpsb
add
movsl
adc
mov
mov
out
cwtl
cltd
xchg
int3
add
hlt
adc
mov
add
xlat
mov
add
or
out
out
ss
out
repnz
and
push
adcb
dec
loope
sbb
xor
mov
ret
add
dec
insb
or
xor
xchg
jae
jg
pop
es
ljmp
mov
dec
inc
inc
jo
icebp
add
test
push
add
adc
adc
jnp
mov
cmp
cmp
add
pop
add
dec
pop
iret
pushf
and
pusha
and
or
imul
jo
add
push
subb
mov
lock
push
bnd
mov
cmp
add
xor
xor
xchg
inc
cwtl
dec
jle
in
cmpsb
add
popa
arpl
jl
out
xchg
add
and
push
lahf
adcb
pusha
dec
sbb
sub
mov
inc
scas
push
add
add
push
xor
ds
enter
inc
aaa
movsb
dec
adcl
xor
or
idivl
jmp
push
std
imul
call
les
repz
shlb
push
cmpsb
in
push
add
out
add
ret
sub
adc
pop
test
push
inc
es
aaa
jns
test
mov
stos
lret
add
movsb
fnstsw
add
test
leave
dec
pop
ret
add
inc
ret
jle
cmp
ss
popa
roll
dec
cmpsl
adc
jb
div
jecxz
iret
and
pop
jno
push
pop
shrl
addb
sub
or
jmp
in
aad
sar
add
fucomip
sub
adc
jle
les
aaa
bnd
inc
cmpb
add
xchg
fs
or
xor
sti
nop
sub
dec
enter
adc
arpl
repz
sbb
mov
push
cmp
add
mov
inc
outsl
fmull
push
clc
int3
sbb
dec
test
xchg
test
add
and
add
mov
gs
adc
add
lret
sbb
insl
xor
aam
nop
subl
jo
sahf
cmp
loopne
std
das
daa
and
pop
test
pushf
jecxz
mov
add
pop
add
pop
mov
ja
mov
test
push
xor
mov
mov
inc
in
ret
sarb
and
adc
jns
add
mov
cld
or
add
fcmovnbe
test
mov
ret
add
icebp
in
push
add
pop
push
inc
ds
ret
add
incl
insb
add
jnp
mov
ljmp
pop
xchg
or
enter
gs
les
mov
out
sbb
dec
jp
mov
in
sub
sbb
loope
insb
mov
adc
push
loop
add
mov
scas
add
jbe
popa
out
or
push
jno
loop
and
add
pminub
cmpsb
and
jbe
add
cmpsl
pushl
fs
mov
pop
add
mov
popf
or
add
pop
push
mov
mov
xchg
mov
fwait
scas
add
xlat
pop
ret
mov
cld
call
or
dec
loope
and
dec
daa
stos
xchg
sbb
stc
mov
insl
bound
jae
push
pop
int3
cld
rolb
lock
cmp
rcr
clc
adc
push
test
jns
pop
push
pop
mov
mov
enter
mov
fisubs
inc
mov
repnz
fldl
loopne
lcall
cmpsl
mov
push
jecxz
adc
xchg
jo
ret
imul
inc
into
add
shll
ljmp
cmpsb
sbb
jge
and
sub
pop
and
aad
add
pop
sahf
or
inc
in
mov
mov
test
movsl
mov
mov
mulps
mov
sahf
mov
ficomps
or
lds
es
mov
test
add
sbb
fldl
iret
jecxz
push
cmp
lods
xor
lods
pop
sarb
pop
aam
icebp
add
scas
inc
push
data16
jbe
scas
cmpsb
sbb
lock
add
bnd
cmp
lret
inc
loopne
xor
pop
dec
cwtl
sti
pop
xor
insb
push
mov
shr
push
aad
mov
loope
pop
mov
ror
mov
loopne
ss
negl
cmpsl
sub
jb
es
add
jnp
inc
aam
int3
ss
push
pop
je
jo
pusha
push
add
in
aaa
mov
push
pop
pop
or
sub
popa
cld
jbe
orl
push
loope
add
xlat
mov
fistl
jmp
jns
pop
cmp
movsl
add
xor
fiadds
cmp
repnz
mov
push
cmp
popf
lea
cmp
test
add
cmpl
add
xorl
add
mov
jl
es
add
mov
testl
lret
jle
shrb
or
add
fnsave
or
adc
out
int3
jae
push
mov
push
sbb
add
clc
stc
shll
iret
sbb
sbb
sahf
sbb
imul
cmp
sti
mov
into
or
xor
jecxz
lahf
repz
test
cli
mov
in
loopne
sbb
mov
mov
into
xchg
movsl
pop
lahf
cmp
push
add
jmp
enter
sub
scas
sub
add
xchg
mov
dec
inc
pop
or
andl
ficoms
mov
lcall
push
and
xchg
lds
push
test
jle
stc
decl
pushw
add
sbb
cmp
add
mov
cs
push
out
scas
add
or
xchg
dec
int3
jae
jae
stc
xor
adc
lret
pop
sbb
push
jp
pop
loope
filds
out
cltd
cmp
adc
adc
pop
cmp
and
push
sub
mov
leave
fsub
pusha
sbb
sub
dec
dec
add
inc
push
in
sub
or
cltd
in
xchg
sbb
sbb
xor
out
jno
adc
xor
xchg
enter
rcrb
mov
int3
mov
xorb
pusha
pop
dec
dec
in
add
test
ret
cmp
pop
or
mov
clc
or
mov
mov
push
add
xchg
mov
js
add
stos
movsl
sarb
pop
popf
add
outsl
cs
xor
cmp
add
pop
rorl
inc
inc
repnz
mov
scas
xchg
or
add
mov
jl
or
add
test
add
xor
ret
imul
out
dec
add
mov
rclb
add
inc
push
out
mov
xchg
lods
dec
loopne
test
fs
add
mov
push
les
add
xchg
es
ret
call
jge
frstor
xor
push
xor
insb
and
dec
filds
push
fwait
cmpsb
inc
cmp
lock
cmp
push
adc
in
dec
mov
js
gs
push
je
into
add
ja
loop
aad
jns
add
inc
cmpl
movsl
and
lret
test
xchg
cmp
add
dec
in
sahf
movsb
mov
fistps
mov
subb
sub
enter
repnz
push
lock
xlat
add
jb
cmp
arpl
add
and
mov
add
xchg
lds
pushf
mov
jp
xchg
dec
cmovs
add
pusha
adc
inc
xchg
cmp
mov
sbb
mov
pop
ret
popa
pop
cmpsl
push
hlt
dec
add
inc
mov
and
mov
adc
push
loopne
jae
lock
fsts
adc
mov
add
push
out
clc
shlb
mov
jmp
xchg
add
fstl
mov
psubw
cwtl
mov
add
fists
lcall
outsb
cmp
mov
cwtl
test
cmp
or
mov
test
dec
xor
jecxz
sbb
pusha
cmp
pusha
outsb
or
int
leave
cltd
and
pop
sbb
push
mov
sub
test
sete
xlat
outsl
inc
shlb
cmp
add
pushf
jle
pop
lcall
add
adc
out
fdiv
jo
xor
fistps
mov
and
into
not
or
xor
inc
cld
add
or
daa
cmc
loope
enter
xchg
pop
push
setnp
mov
test
cmpsl
into
ret
adc
int3
sub
hlt
inc
add
dec
adc
sbb
or
xor
xchg
xor
jmp
outsl
mov
push
push
xor
das
adc
sub
cmpsb
adc
addr16
add
mov
fisubrl
cmp
icebp
xor
loopne
and
sbb
add
mov
ret
lcall
enter
insb
cld
out
xchg
ja
test
sbb
lock
or
imul
lret
mov
test
xor
add
adc
lret
mov
outsl
ja
mov
sub
ljmp
cmpsb
test
add
dec
rcrb
pop
movsl
dec
add
xchg
mov
mov
fbld
push
pop
xorl
jmp
shlb
pushf
and
dec
xchg
add
or
sub
shrb
and
inc
cmpsb
add
aas
xor
mov
pop
les
popa
aaa
rorl
or
pusha
ficompl
jmp
push
popf
fbstp
cmp
pushf
add
add
or
mov
js
add
dec
scas
cmp
test
push
mov
ret
inc
xor
and
jo
push
pop
test
in
pop
mov
cli
and
scas
enter
jne
add
inc
pop
inc
cld
daa
fimuls
xor
sbb
outsl
pop
arpl
les
or
fwait
clc
jb
sbb
add
push
pop
out
mov
mov
xor
inc
and
add
faddl
mov
fisubrs
ja
aas
mov
mov
sbb
mov
sarb
enter
mov
mov
pop
in
lock
mov
aaa
xlat
ljmpw
xor
bnd
mov
pop
inc
das
and
cmc
cmpb
push
daa
stc
jae
sbb
lods
xchg
jno
sub
cli
fsts
add
loop
mov
pushf
cwtl
mov
adc
mov
scas
add
jae
push
add
mov
add
push
push
loopne
add
rolb
clc
popa
xchg
pop
jae
sbb
iret
jle
inc
sahf
cmp
jo
pop
and
add
ljmp
pop
xor
enter
lea
fbstp
mov
stc
inc
xor
clc
jle
sti
ljmp
pop
aad
repnz
jae
loope
pop
addr16
mov
pop
rclb
lea
cmp
cmp
add
sub
jge
loopne
add
in
cmpsl
jecxz
mov
adc
cmp
in
sbb
test
pop
nop
shlb
ljmp
cmp
mov
aad
stc
mov
fld
rorb
cmp
push
int3
xchg
xor
pusha
mov
adc
push
movsb
stc
mov
jmp
jb
add
gs
cltd
sub
lahf
and
rol
jnp
flds
jl
cmp
pop
orb
movsl
add
cmp
add
xor
leave
and
stos
sub
out
aaa
stos
ss
shlb
pop
lods
pusha
mov
add
xchg
cmp
mov
aam
and
iret
add
cli
jne
xchg
rcl
dec
mov
les
sbb
sbb
dec
lret
adc
cmp
and
int3
jo
jo
ret
nop
loope
adcb
inc
sub
add
add
cmp
push
lret
sbb
mov
sti
mov
add
je
mov
repnz
into
lods
mov
inc
sbb
push
add
mov
gs
jmp
arpl
out
add
jo
stos
mov
sub
loopne
jns
inc
xchg
sub
addb
mov
gs
clc
inc
das
dec
ljmp
ret
pop
cmpsl
add
bound
lock
inc
jns
xchg
out
addl
adc
push
lret
jnp
sbb
lcall
pshufw
dec
lret
add
add
add
add
mov
pop
or
lahf
mov
je
pusha
push
and
pop
push
add
shrl
add
add
or
popl
push
lret
sbb
push
pop
add
and
mov
in
out
push
sbb
iret
add
mov
jmp
push
cmp
add
stos
shll
jg
xor
das
in
popa
ds
cwtl
or
push
clc
add
lock
mov
dec
add
dec
pop
xchg
push
es
out
cld
and
add
cmpsl
mov
imul
std
add
js
fst
rclb
imul
sbb
gs
popa
or
push
cmpsb
in
pop
cmp
add
inc
and
shrb
fimull
push
pop
push
and
fstl
sub
aaa
leave
aas
mov
addr16
lods
push
add
orb
add
and
mov
add
not
fisttps
jmp
jne,pt
cs
dec
aam
add
out
mov
rcl
imul
addr16
dec
clc
sub
icebp
add
filds
fcoms
jmp
sub
push
mov
imul
mov
jmp
scas
scas
mov
lods
mov
adc
add
dec
lahf
orl
nop
jle
in
repnz
jecxz
jo
add
xchg
xor
push
push
add
fadds
pop
mov
ret
idivl
pushl
jge
add
jb
enter
adc
pop
lret
nop
jbe
mov
sbb
mov
dec
dec
lea
out
add
ror
out
popa
xchg
sub
insb
orl
add
add
mov
shll
aaa
xlat
ja
xchg
imul
or
fmuls
dec
imul
xchg
call
aam
or
cmp
inc
mov
sahf
bnd
out
adc
dec
xchg
mov
iret
shll
jae
fbstp
lods
pusha
mov
rolb
add
int
shrl
inc
sbb
filds
sbb
mov
add
arpl
mov
pop
addr16
cmpsb
clc
add
inc
loopne
cmpsl
inc
dec
cmp
add
jne
jl
xchg
clc
lahf
jns
add
pop
xchg
mov
add
inc
icebp
cwtl
mov
adc
push
add
mov
ficomps
or
sub
pushf
or
jnp
dec
add
cli
ja
inc
inc
mov
lds
push
loopne
mov
psraw
into
pusha
adc
add
lock
ljmp
add
mov
xor
call
daa
add
sub
scas
dec
mov
cs
shlb
jnp
loop
add
push
int
add
xchg
push
addb
frstor
cs
fistl
cmp
es
divl
lret
xor
add
data16
ret
out
sbb
xor
jnp
and
or
and
addb
or
movsb
inc
mov
mov
xor
adc
mov
aas
inc
repz
mov
add
imul
and
jecxz
adc
adc
add
roll
aad
add
sbb
add
mov
nop
pusha
mov
movsb
inc
popa
add
push
filds
mov
mov
mov
imulb
fiaddl
jo
das
aam
sbb
inc
add
mov
jg
out
jb
inc
repnz
out
dec
add
sbb
rcll
pop
jo
add
addl
add
fidivrl
cwtl
add
adc
push
and
je
sbb
iret
ja
push
mov
dec
inc
subb
pop
sub
daa
or
ret
std
push
in
rcl
pop
and
fists
xchg
bound
rolb
fbstp
roll
pop
add
cmpsb
in
dec
nop
out
adc
stc
rolb
cmp
iret
sub
in
lods
add
and
rcll
mov
xchg
dec
add
inc
cmc
xor
push
into
add
sbb
xchg
nop
in
dec
xor
add
fld
add
sbb
pop
jmp
xor
test
jl
mov
inc
mov
mov
inc
rol
jns
adc
movb
rorl
sub
sub
push
lcall
sahf
test
in
insb
fwait
add
fisubl
loope
outsb
dec
not
sbb
ret
cmp
insl
push
xorl
mov
cmp
cltd
or
add
outsl
sbb
push
daa
jge
add
adc
pop
jle
add
jmp
ret
adc
xor
add
pop
fidivl
dec
pushf
xor
addb
subl
add
lods
stos
outsb
fdivl
arpl
call
repnz
add
mov
mov
inc
sub
repz
mov
xor
cmp
aaa
hlt
sbb
cwtl
mov
mov
call
xor
add
push
stc
add
mov
gs
mov
mov
inc
popa
push
in
fmuls
xchg
imul
scas
mov
mov
jecxz
pop
xchg
sbb
add
sbb
out
add
cmp
in
cmpb
scas
cwtl
sub
push
jne
or
mov
inc
test
popa
loop
pop
xchg
cmp
out
pop
add
fisubl
xor
cmp
arpl
xchg
push
sbb
xchg
add
push
pop
inc
cmp
pop
add
xor
sub
xchg
js
push
add
mov
xchg
das
pop
cs
and
inc
pop
in
jle
lds
ret
or
test
std
lea
adc
dec
dec
adcb
andb
jo
into
push
add
xor
out
add
fmulp
mov
add
addb
ret
leave
add
in
iret
ljmp
cmp
roll
cmpb
mov
add
incl
insb
mov
in
scas
jne
push
add
add
aad
xor
in
aaa
cmc
push
cli
or
jb
add
test
daa
add
into
stc
xchg
xchg
mov
jle
gs
pop
push
mov
and
push
out
jb
mov
inc
adc
stc
adc
inc
sbb
aad
cli
push
mov
clc
add
and
add
ljmp
add
xor
dec
test
adc
aaa
xorl
push
dec
rcrb
test
xchg
es
add
adc
in
mov
pop
add
or
sbb
imul
cmp
mov
jno
jb
sti
or
and
add
cli
add
pop
dec
jge
jo
inc
pop
ret
xor
mov
push
jo
popf
pop
jle
dec
inc
dec
dec
add
mov
cmp
mov
fsubrs
add
pop
xor
aas
fs
fisttpl
outsb
jbe
sti
loopne
jecxz
fsub
repnz
and
scas
cmp
loopne
push
add
add
vpunpckldq
inc
out
cmp
icebp
mov
mov
test
and
cmp
addb
xchg
sub
sub
jle
pusha
and
popa
aas
fisubrs
mov
cli
imul
popl
push
jno
cmp
or
rol
and
inc
adc
adc
mov
cmp
sub
orb
sub
ss
add
pusha
sub
jmp
xchg
push
ljmp
pop
cmp
mov
add
movb
std
scas
dec
add
jae
push
sub
sub
sbb
shlb
aaa
xchg
xor
mov
std
clc
adc
or
mov
jl
pop
pusha
cmp
jae
jne
outsl
fdivrs
adc
cli
leave
sub
fwait
mov
mov
fsubrp
pusha
add
mov
repz
loop
add
cmp
icebp
popa
pop
pop
in
dec
inc
cvtdq2ps
sbb
sub
dec
add
imul
jb
xlat
inc
xchg
mov
lret
popf
cmp
ffreep
psubd
out
xchg
jge
jle
add
test
jecxz
dec
push
ja
dec
in
sbb
cmc
fdivrl
mov
movsb
pusha
pop
cmp
add
fiaddl
adc
push
inc
add
es
push
mov
rolb
enter
shl
out
add
in
cmpb
leave
pop
clc
push
ja
ljmp
add
popa
or
data16
enter
ror
push
push
jg
push
add
pusha
cmp
add
cli
jb
fcmovbe
mov
pop
loop
jo
push
clc
roll
and
stos
pop
or
cmpsb
imul
les
pop
lds
loope
fwait
shlb
and
add
ja
adc
mov
add
sub
sub
pop
pushf
in
adc
jbe
mov
cmp
add
sbb
jle
push
inc
mov
iret
pop
mov
jp
rorl
inc
jmp
mov
nop
mov
xchg
dec
mov
cmp
jo
cmpsb
es
sbb
outsl
fs
loopne
iret
mov
inc
call
leave
sbb
mov
cmp
int3
adc
xchg
push
jnp
shll
sub
in
inc
call
leave
push
fwait
push
stos
faddp
and
test
test
add
sbbb
xor
push
cmp
pusha
add
push
loop
repnz
xor
pop
loopne
add
cmp
outsb
pop
icebp
xor
dec
addb
test
movsb
mov
repnz
inc
cmpsb
aaa
mov
mov
lds
mov
sub
mov
iret
add
push
adc
add
jecxz
inc
inc
cmpsb
xor
je
add
mov
and
and
outsl
fs
xchg
pop
sub
sub
test
fidivrs
lret
or
sub
sub
js
add
sahf
cld
sub
add
jp
add
lcall
sub
push
lret
mov
xchg
stos
mov
sub
xor
loopne
mov
into
out
add
scas
push
xlat
gs
mov
nopl
negl
rcr
jmp
pop
call
in
test
inc
mov
inc
jg
stc
jmp
clc
test
cmpsl
jo
fucomi
xor
addl
fcomps
sub
rorb
dec
xor
adcl
lret
mov
fisubrs
xor
test
mov
out
cltd
mov
pop
pop
outsb
xor
imul
cmp
fsts
add
loope
sbb
pop
push
sbb
jmp
or
inc
push
icebp
fsubrs
sub
clc
pusha
pusha
cmp
sti
decl
inc
sub
cltd
adc
in
xchg
popf
and
inc
or
add
les
push
cs
cmc
inc
add
and
mov
lock
cmp
pop
add
and
mul
sbb
push
sahf
ds
pop
dec
mov
dec
mov
adc
mov
lret
sbb
mov
mov
push
xchg
jno
dec
pusha
mov
pop
and
add
and
nop
add
sbb
pop
pop
push
ljmp
xchg
mov
lret
mov
and
in
xor
cmp
jbe
adcb
inc
shlb
jb
cmpsl
fiadds
outsb
mov
dec
and
mov
imul
fsubl
imul
sahf
sti
jmp
jl
ret
dec
lock
xor
adcl
dec
andb
mov
or
jo
call
lahf
xchg
arpl
inc
mov
adc
cmpsb
movsb
jb
ret
add
cli
inc
xchg
mulb
add
shlb
rolb
popl
or
jbe
pop
jno
xor
adcb
cmp
jne
orl
xchg
rorl
int3
call
add
or
stos
sarb
sahf
add
addb
lea
pop
mov
je
xchg
mov
sbb
inc
les
pop
sub
lods
pop
mov
lahf
sbb
mov
enter
arpl
jb
loope
inc
subb
clc
fldl
in
xchg
add
push
aam
clc
mov
shlb
adc
fcomp
cmp
sahf
add
pop
sbb
cwtl
scas
inc
enter
add
imul
xacquire
subb
jne
sub
adc
jl
stc
popa
je
cmp
push
mov
mov
in
sarb
pop
or
testl
xchg
add
pop
nop
jg
cmp
add
jnp
push
push
push
js
xchg
pop
xor
pop
mov
mov
mov
icebp
aad
mov
test
cmp
pop
xchg
cmp
jp
inc
sbb
mov
cmpsl
or
js
xchg
sub
pushf
imul
sti
xchg
and
std
leave
add
mov
jbe
mov
inc
dec
sahf
add
add
pop
jg
loopne
add
mov
inc
jmp
subb
ljmp
mov
lcall
jg
add
push
mov
mov
pop
dec
inc
rclb
mov
loope
or
add
mov
or
je
adc
xchg
mov
in
cmpsl
jno
adc
mov
add
push
mov
xchg
add
in
clc
insb
dec
into
std
ljmp
dec
mov
pushf
fs
xor
adc
out
sub
pusha
adc
sub
movhps
sbb
dec
jge
sarb
cmp
add
mov
mov
cli
mov
repnz
inc
cwtl
inc
setno
push
dec
pusha
mov
clc
jne
or
imul
push
pop
or
cltd
or
icebp
lcall
fs
jp
sbb
adc
sub
lahf
add
adcl
imul
loope
sub
les
add
stc
sbb
mov
outsb
cmp
orl
adc
add
pop
orb
mov
dec
out
cltd
add
aaa
pop
movsl
jl
mov
ja
push
fstl
bound
dec
xor
test
mov
pop
je
or
jg
add
mov
lock
lret
add
xor
pusha
adcb
ret
sbb
bound
inc
mov
js,pt
andl
cli
adcb
fldcw
in
js
add
mov
sub
add
mov
nop
jle
or
ds
scas
nop
je
dec
mov
add
sub
xor
aad
xor
repz
inc
push
xchg
mov
inc
pop
jb
adc
loop
inc
add
aad
out
xlat
pusha
dec
xchg
lods
lahf
add
notl
addl
xchg
push
incl
pushf
pop
mov
xor
stos
clc
mov
popa
sub
add
ret
scas
movsl
ds
dec
popa
cmp
mov
or
adc
sbb
pop
add
aam
ret
iret
inc
popa
pusha
leave
push
icebp
loopne
pop
add
push
dec
mov
das
cmc
add
jl,pn
push
pusha
dec
fldcw
iret
mov
ret
imul
dec
sbb
dec
add
cmpsl
mov
pusha
sbb
xor
dec
fsubr
das
fucomi
sbb
cli
leave
push
outsb
and
sub
add
ss
mov
jns
popa
and
aad
popf
xor
sub
pop
pop
and
sub
push
dec
fdivr
pop
rcll
mov
dec
adc
in
jge
and
and
mov
mov
insl
mov
add
or
pusha
inc
add
clc
testl
mov
ret
mov
pusha
add
imul
jnp
xchg
bound
add
out
xlat
outsl
in
aaa
cld
cmp
pusha
cmp
cs
mov
cld
test
in
sub
enter
add
sbb
sbb
aam
popf
jge
xor
mov
in
aad
mov
inc
fldcw
jmp
out
add
iret
xor
aad
addl
test
and
pop
pop
jae
pop
add
cmpsl
add
mov
ljmp
lret
add
popf
das
ds
add
xorb
in
faddl
adc
cs
into
addl
pushf
and
int3
adc
and
sub
in
pop
insb
xchg
add
pop
xchg
inc
in
scas
fisttps
jo
test
add
dec
shl
push
mov
bound
mov
push
fdivrs
cld
subb
sbb
jbe
or
pop
lock
push
notb
cmc
insb
add
xchg
lock
int
push
and
les
in
mov
std
adcb
in
cmp
xor
sub
test
out
push
sub
out
iret
xchg
sar
mov
or
aas
sbb
bound
les
and
test
mov
sahf
movsb
mov
js
mov
fcoms
outsl
add
mul
add
mov
loopne
cmpl
xchg
and
fsubr
mov
addr16
icebp
int
and
lret
loop
cwtl
pop
jge
jle
aaa
clc
stos
movb
outsb
push
sbb
addr16
jne
add
jl
es
insb
jmp
xor
xor
subl
adc
cmp
jb
in
cmp
pop
insb
pop
cwtl
repz
out
and
pop
shl
filds
subl
or
or
fldenv
lret
add
pop
rclb
cmp
icebp
push
pop
mov
popa
aad
sti
push
test
scas
or
clc
adc
mov
jbe
mov
cmpsl
jmp
xchg
lds
pop
jmp
pop
push
in
inc
mov
xchg
xchg
mov
add
js
sti
jmp
and
xchg
addb
xor
or
mov
insb
pusha
nop
daa
ret
mov
loope
mov
and
andb
ret
pushf
mov
add
mov
mov
pavgb
pusha
mov
pop
xor
mov
add
push
cmp
jne
add
push
fistl
outsb
int3
jl
or
mov
add
xchg
sub
test
adc
ja
add
mov
mov
mov
xor
add
in
dec
wrmsr
cmpsl
add
lahf
adcb
lods
mov
inc
dec
jae
pop
add
mov
jne
or
dec
out
into
xor
dec
add
in
xchg
pusha
inc
inc
jg
testl
andb
jb
inc
pop
pop
jnp
push
cli
push
add
xchg
dec
push
inc
les
icebp
mov
js
cld
and
mov
andl
cmp
xchg
stos
sbb
movsl
shll
aas
les
insl
movsb
sub
outsl
xlat
xchg
push
lret
pop
lds
cli
pop
inc
in
into
leave
add
ja
dec
push
xchg
insb
sub
inc
daa
sar
pop
mov
and
add
jae
ss
clc
in
add
test
movsl
iret
adc
pushf
into
cwtl
push
xchg
addr16
cltd
notl
xchg
shrb
pop
bound
xchg
and
test
jge
sbb
mov
pushf
out
lock
push
pop
inc
into
ucomiss
out
fiaddl
icebp
dec
xchg
jg
ds
add
ss
ja
clc
adc
rcll
xor
popa
jecxz
in
mov
lds
or
ss
pinsrw
clc
in
out
rcrl
mov
loope
andl
lahf
xorb
scas
mov
les
aad
inc
and
stos
fcmovnb
jo
loope,pn
sub
inc
push
pop
and
inc
shll
sbb
jns
int3
hlt
xlat
orb
cmp
jae
imul
push
int
cs
sbb
mov
adc
sub
out
mov
dec
es
or
lcall
sbb
dec
add
cmpsl
jmp
addb
es
gs
pop
iret
dec
jbe,pn
add
mov
sub
pop
inc
mov
outsl
test
jbe
daa
pusha
xchg
adc
rclb
test
jmp
cmp
mov
add
scas
add
cwtl
mov
add
fsubs
mov
cld
mov
stos
loopne
add
add
in
add
pop
popa
mov
fld
add
pop
pusha
popl
xor
nop
xchg
mov
xchg
fldl
sbb
pop
dec
sub
add
xor
pop
add
xchg
push
popa
inc
bound
rcrb
repz
les
mov
add
pop
inc
jp
sub
push
push
pop
or
sbb
xor
ret
add
das
sub
add
add
ror
mov
nop
sbb
test
jo
cmc
or
imul
ds
test
dec
int3
push
sbb
jecxz
fsub
or
push
add
rclb
out
loope
shlb
jno
sbb
mov
jo
pusha
out
jno
add
lret
stos
scas
push
cs
add
pop
test
cwtl
ss
xchg
shrb
ljmp
xor
sbb
popa
shll
pop
pop
mov
repnz
dec
je
cld
or
sub
ror
sarb
cmp
insb
test
add
test
stos
shrb
daa
pop
push
lods
sarl
ficoml
push
loopne
loope
out
aad
rcrb
add
setl
imul
add
aad
dec
lock
ds
or
out
out
add
xor
pop
mov
add
pop
dec
imul
add
add
cmpsl
pusha
jo
stos
add
ret
sbb
xchg
mov
inc
adc
inc
jbe
push
jne
in
add
pop
sbb
imul
pop
or
enter
add
adc
or
popa
and
bound
add
lock
mov
ljmp
push
and
push
ret
xchg
faddl
or
cmc
stos
call
sub
outsb
adc
dec
shlb
stos
cmc
jg
rcl
dec
lods
lret
arpl
dec
mov
sbb
mov
xlat
or
mov
push
or
fnstsw
pop
mov
add
jne
sub
and
mov
pop
sub
push
out
fstp
add
pop
call
jo
insb
ret
sbb
inc
stc
incb
dec
dec
jns
cmc
and
in
out
pop
sbb
jno
dec
add
and
roll
xchg
aas
push
daa
popa
xchg
int3
inc
addr16
pop
je
or
fcomip
xor
mov
pop
and
addr16
cs
pop
dec
xchg
pop
pop
sub
jbe
pop
subb
les
rol
pushf
dec
rep
adc
test
insb
add
lret
arpl
sub
mov
cmc
lcall
lock
filds
jmp
mov
cmp
test
dec
popa
xchg
bound
fwait
cltd
shlb
sub
mov
pushf
push
adc
ljmp
fisubrl
and
adc
or
push
mov
jge
adc
hlt
shlb
dec
xor
repnz
inc
shrb
ret
xor
pop
add
cmpsb
popa
add
cmpsl
push
sub
call
mov
cmp
push
mov
cmp
icebp
jp
sahf
fisubl
and
adc
or
sarb
or
dec
mov
out
or
ljmp
adc
push
loope
outsb
adc
add
push
cmp
in
sub
roll
cmc
lret
out
out
adcb
mov
hlt
lds
out
xor
and
adc
mov
dec
adc
or
dec
jo
pop
or
mov
cmp
pop
mov
jne
nop
push
add
mov
mov
or
inc
jge
faddl
inc
mov
icebp
shll
or
bound
sbb
sub
add
int3
out
xchg
adc
scas
adc
pop
jae
dec
nop
iret
xchg
inc
dec
mov
mov
mov
mov
and
mov
cmp
std
add
jmp
mov
imul
cmc
mov
inc
add
shll
lahf
dec
or
add
xchg
pop
jb
xor
and
test
sub
cmpb
inc
lods
jae
dec
out
test
movl
into
add
dec
and
xor
and
lods
lcall
fadd
adc
mov
call
aaa
int3
add
mov
mov
mov
add
xor
xchg
push
insb
jne
adc
mov
mov
enter
mov
das
sbb
mov
cmpsl
aam
mov
pop
nop
push
or
push
fs
nop
xchg
or
sub
sbb
ds
and
sub
shl
ds
div
call
sub
lea
inc
sub
ljmp
mov
cwtl
je
xchg
add
test
out
insb
enter
mov
out
lods
add
pusha
scas
pop
test
loop
pop
lahf
push
fldcw
aam
cli
add
xor
pop
outsb
rolb
sar
dec
push
add
ja
call
int
andb
ss
add
je
lahf
lea
and
sub
add
push
popf
cli
inc
in
push
pop
dec
mov
out
jge
hlt
jecxz
in
in
lahf
out
add
outsb
je
pop
cld
adc
jnp
enter
xchg
rclb
lret
pop
dec
pop
dec
movsb
jb
sbb
ret
bound
mov
add
data16
xchg
lea
inc
int3
adc
jge
xlat
rcrb
sbb
push
rclb
loop
insl
xor
fiadds
mov
js
arpl
push
xchg
jae
subb
pop
lods
test
sub
adc
add
mov
into
scas
sub
mov
dec
aam
pushf
xor
and
or
adc
xchg
fcmovnb
pop
sbb
repz
sub
and
das
pushf
fwait
add
aas
enter
or
mov
mov
dec
cmpsl
dec
add
sti
jb
imul
jns
add
sbb
das
xchg
or
sti
lea
dec
adc
dec
and
bound
and
add
enter
xlat
or
sbb
sub
add
test
mov
add
test
fimuls
push
push
inc
mov
dec
insl
mov
jae
test
cmp
fimuls
sbb
xor
jmp
jecxz
loopne
scas
push
add
in
sbb
orb
dec
mov
cmp
sub
popa
add
fildl
lods
mov
rorl
cwtl
cmp
add
std
cli
add
adc
ljmp
add
lret
jo
xchg
pop
rcll
std
mov
cmp
xor
pop
xchg
add
pop
adc
js
add
mov
push
out
fxrstor
shrl
add
iret
ret
pop
jl
add
scas
bound
movsl
js
int
pop
decb
nop
add
mov
inc
pop
mov
push
mov
mov
outsl
sub
sbb
sub
imull
push
in
clc
leave
sub
xchg
cmpl
push
sbb
pop
jb
add
sahf
push
lahf
scas
pusha
sub
aas
mov
add
inc
into
mull
dec
data16
stos
add
cmpsl
out
fcom
sbb
pop
movsl
ds
test
sub
inc
inc
and
and
dec
dec
jg
sbb
pop
movsl
lock
mov
mov
adc
or
xor
jecxz
jl
add
std
test
add
sub
cmp
adc
cli
aas
sub
mov
orb
jmp
rcrb
pushl
cmp
aas
sbb
je
pop
cmp
ljmp
adcl
or
mov
add
fdivrl
and
and
out
push
mov
mov
add
cmp
lret
inc
or
jl
sub
lcall
jo
call
out
mov
in
push
cmp
add
es
sub
push
mov
in
jnp
mov
add
leave
test
repz
push
lods
sbb
add
mov
add
jge
inc
push
fldt
cmp
ds
and
push
cmp
dec
adc
ret
fildl
mov
adc
adc
xor
in
pushf
sbb
outsb
dec
cmpb
testb
xor
mov
add
aam
ljmp
das
sbb
mov
hlt
lock
sbb
jge
xchg
cwtl
test
mov
adc
dec
notl
push
mov
push
mov
rcrl
movsb
nop
pop
push
and
pop
gs
shll
pop
jp
dec
inc
or
out
orl
mov
cli
push
lret
stos
cmpsb
lock
xor
ljmp
cmp
cmp
je
in
jae
add
inc
sbb
dec
push
loopne
scas
adc
inc
loope
imul
subl
pop
xchg
sbb
stos
jae
xor
cli
jns
mov
sbb
cld
int
sbb
mov
std
mov
add
cmp
add
rorb
xchg
sub
or
jo
add
into
mov
jno
jo
xor
add
fisttpl
and
sub
xor
add
xor
pusha
rdmsr
push
icebp
cmp
pop
inc
or
mov
hlt
ds
testl
pop
cmp
inc
sar
jns
mov
fwait
scas
and
push
push
call
ficoms
cld
addb
daa
addr16
pop
ret
and
icebp
scas
mov
sub
loop
add
add
cs
or
cld
pop
jno
cmp
add
js
xchg
lock
sbb
fbld
in
stos
jg
add
dec
xchg
or
sbb
mov
cli
add
xor
sbb
inc
push
loopne
pusha
movsb
dec
shll
pop
mov
inc
mov
add
jg
out
add
jo
add
mov
jne
cmc
mov
ja
push
sub
lahf
pusha
sub
int3
inc
jle
xor
mov
mov
ja
add
lods
nop
sbb
je
add
inc
jecxz
xor
fidivl
rcrl
leave
mov
leave
movb
xchg
jge
jnp
cwtl
and
roll
pushl
add
add
adc
cmpsb
addr16
jp
sahf
or
jl
insl
lret
mov
jecxz
in
add
jge
sbb
divl
mov
out
mov
and
xchg
loope
push
or
mov
cmp
lods
in
sub
xchg
stos
int
les
in
imul
push
xchg
xlat
rcl
add
ret
loop
dec
rorb
in
add
cmp
frstor
xchg
arpl
sub
out
add
sub
lahf
cld
cmp
jno
add
rorl
xor
mov
inc
icebp
and
js
sub
ror
je
jne
add
mov
loopne
cmp
cmp
cld
ds
shrb
loope
cmp
or
pop
mov
stos
call
add
inc
jb
aam
aad
add
jo
pop
imul
cmpb
les
sbb
pop
push
add
ljmp
mov
pop
mov
xor
cli
insl
add
int
imul
push
push
mov
xrelease
add
std
adc
and
test
mov
push
or
xchg
ss
in
cmp
pop
pop
bound
add
hlt
lret
sbb
lcall
call
pusha
xlat
icebp
push
mov
mov
mov
jbe
fmuls
jge
sbb
xchg
lods
bound
lret
xor
add
jle
add
pop
pop
and
shlb
add
aam
popf
int
ljmp
loope
and
mov
int3
sbb
add
out
inc
add
push
mov
xor
hlt
adc
add
clc
xchg
outsl
addr16
pop
push
imul
mov
ljmp
jns
pop
mov
sub
add
loope
mov
sbb
clc
enter
dec
push
mov
fucomp
mov
shlb
add
outsl
out
loopne
clc
inc
or
lds
adc
sti
lea
push
and
cli
popa
add
arpl
stos
orb
mov
stc
aaa
adc
mov
mov
cwtl
push
ds
dec
or
popa
loopne
push
add
cmpsb
mov
or
push
xchg
lock
pop
jnp
add
gs
data16
push
fiaddl
iret
mov
and
cmp
les
outsl
jns
iret
add
dec
add
push
push
in
aas
fistps
into
dec
js
loope
add
xor
call
imul
adc
repz
into
cmp
cmp
mov
aaa
cmp
sarb
inc
add
push
in
lcall
add
fldt
add
sub
xor
xor
fs
popa
jae
add
mov
fistl
lods
xorb
add
es
fwait
add
std
mov
inc
lret
add
push
xchg
ja
ret
sarb
lahf
jno
data16
or
in
jnp
mov
lock
sub
or
test
mov
xor
mov
pop
mov
out
add
leave
popa
pop
xchg
loopne
aam
shl
andb
nop
clc
shlb
jl
nop
lods
jb
or
fcmovb
jl
addr16
mov
mov
add
jb
xor
jecxz
call
nop
cli
mov
jl
lcall
adcb
xchg
in
cltd
mov
add
fistl
push
lret
push
out
out
mov
out
add
push
pushf
arpl
and
add
push
add
pop
inc
popa
in
ret
incl
and
es
cmpsb
addl
cmp
cs
cmp
loope
out
cmp
int
clc
mov
pop
add
or
ljmp
mov
mov
sub
aaa
add
jo
xor
jbe
inc
or
ljmp
roll
add
vpackssdw
dec
push
jne
add
gs
add
jne
out
sbb
xchg
ljmp
and
sub
mov
add
xor
das
stos
or
and
lahf
repnz
cmp
fisubl
mov
jecxz
add
dec
cmp
insb
or
cld
sbb
arpl
sahf
add
fdivrl
xor
sbb
push
adc
jmp
shrb
sbb
sub
clc
jp
andl
or
cmp
sub
adc
outsb
roll
mov
pop
fistpl
adc
xchg
push
fldl
jmp
movsl
cwtl
leave
add
inc
mov
pop
ret
fcomp
ja
add
lods
xchg
mov
xchg
push
xchg
add
cmp
ss
dec
jno
and
inc
outsl
aaa
popf
push
add
jg
sub
addl
loop
loopne
sbb
jno
lds
jp
add
mov
dec
add
addb
sbb
sub
inc
pop
push
or
stc
test
stos
xchg
jnp
loop
test
mov
aaa
pop
dec
filds
stos
jae
iret
sub
sub
add
std
fadds
mov
pop
insl
push
cld
jb
neg
add
popf
fwait
or
pop
add
daa
sti
push
jno
pop
add
js
and
cmp
cmpsb
inc
or
fidivrl
xchg
adc
in
or
sahf
add
mov
dec
add
xchg
cltd
jnp
fisubrs
aad
dec
sbb
cli
in
pop
data16
and
xadd
sub
xor
pop
dec
cmp
add
sbb
lds
scas
ficoml
jp
push
gs
push
rclb
out
inc
jae
repz
mov
push
mov
addr16
pop
pop
mov
into
dec
add
adc
push
jle
jp
shrb
mov
adc
adc
mov
add
xor
pop
sbb
loopne
jp
dec
mov
add
fdivl
imul
shr
pop
pop
xor
push
or
adc
pop
mov
daa
push
fidivrs
add
xchg
jecxz
adc
push
jnp
aam
jle
add
mov
popf
and
pop
jo
gs
and
add
sub
cmp
repnz
push
inc
sub
jle
mov
cld
mov
add
mov
pop
jo
jno
jecxz
adc
cmp
in
loope
cwtl
scas
mov
pop
push
cld
xchg
or
inc
bound
xchg
xchg
ja
pop
add
jecxz
hlt
mov
dec
xor
mov
mov
xchg
adc
xor
cmp
add
not
mov
add
sbb
popf
jp
out
xchg
aad
iret
cmp
js
jle
inc
jmp
out
pop
adc
lods
dec
push
add
dec
pushf
jne
push
add
and
sarl
and
add
lea
ret
add
xchg
pop
sbb
sbb
rorb
xchg
jl
adc
lods
clc
jne
jns
xchg
or
mov
es
shl
xor
gs
jne
mov
lods
in
jecxz
add
das
sub
je
or
cmp
popa
and
pushf
inc
lods
sbb
sbb
sub
pop
ret
dec
icebp
add
aad
jmp
cmpsl
mov
sbb
jp
cmc
sub
add
push
das
mov
and
mov
mov
add
sbb
sbb
add
fwait
bswap
jge
in
cmc
out
and
push
jbe
push
lret
and
loopne
or
add
call
dec
sbb
cvtpi2ps
cwtl
scas
cmpsl
jl
test
xchg
cmp
xor
scas
add
pushf
dec
mov
shrb
jecxz
repnz
jge
mov
icebp
in
ret
in
rclb
jbe
adc
dec
stos
and
js
mov
and
sub
movsl
dec
push
pop
shl
add
sub
pusha
pop
inc
cmp
mov
xor
jo
ss
cli
adc
repz
sbb
adc
add
xor
cmp
jo
js
cld
adc
jns
aaa
popa
jae
xlat
jmp
arpl
jno
or
jg
and
and
inc
jno
hlt
push
mov
xor
push
mov
sub
cmpl
add
mov
push
push
cld
pop
push
outsl
je
jbe
dec
fdivrl
add
and
jb
or
adc
mov
shl
add
mov
pop
fwait
xor
daa
and
add
pop
xor
push
mov
aaa
mov
pop
cmp
sub
push
ret
addb
and
mov
cmove
add
pop
outsb
pop
mov
sbb
aad
dec
ret
mov
pop
out
add
repnz
stos
mov
xchg
mov
stc
xor
mov
rol
jo
lock
pop
inc
scas
add
sub
loop
mov
xor
xchg
push
imul
sahf
rcrb
pushf
mov
cmp
push
subb
pop
push
je
jg
test
xchg
test
mov
jo
call
aad
push
lock
cli
das
add
in
jecxz
push
adc
shll
adc
aaa
cmp
mov
ljmp
mov
inc
js
push
xor
out
cmp
mov
cld
sbb
add
jecxz
in
les
and
add
fcompl
lock
std
mov
fs
repz
nop
xor
pusha
repnz
sbbl
movsl
shll
add
rcll
test
das
sbb
mov
sar
add
mov
in
shlb
es
lcall
sbb
lods
repz
inc
cwtl
les
pop
adcl
cmp
push
or
mov
rorb
jecxz
jne
push
ss
dec
add
mov
movsb
notl
ljmp
sbb
cmpsl
faddl
xor
jbe
jge
add
in
jmp
repnz
xor
sub
add
pop
jbe
sahf
loope
push
xor
das
adc
jge
add
stos
jnp
popa
call
js
fistpll
adc
cmp
jb
mov
and
dec
fimuls
add
jne
inc
aad
mov
fisubrs
xchg
cmp
orb
in
fcomi
lret
stos
pop
faddl
adc
loop
mov
cld
add
cmpsb
mov
xchg
repz
mov
ljmp
paddb
add
stc
xchg
nop
loopne
xchg
dec
cs
sahf
jno
or
mov
cmp
xor
pop
into
push
pop
jmp
inc
mov
lahf
or
filds
sub
jle
add
rclb
pop
in
push
and
adc
xchg
push
dec
movlps
cmp
int3
test
fs
clc
pop
lcall
out
pop
jae
dec
fs
or
dec
pop
mov
sbb
cmp
sahf
je
int
sti
or
ficompl
xor
out
add
jecxz
jns
sub
cmpsb
mov
inc
lock
and
mov
jg
leave
in
repnz
add
and
cmp
bound
mov
xchg
push
fisubrl
inc
xchg
es
sbbb
into
bound
sbb
ja
add
sub
pop
loopne
xorb
xchg
js
add
mov
ljmp
fadds
sub
ficomps
push
mov
test
jg
mov
pusha
mov
fstpt
aaa
popf
fdivrs
push
je
jae
xchg
cmp
adc
insl
cmp
push
xor
loopne
jno
or
pop
mov
xchg
in
mov
dec
mov
cmp
xchg
popa
add
or
jl
imul
add
std
jne
adc
outsl
mov
movsb
dec
pop
call
orl
inc
cmp
xor
add
and
loope
inc
add
icebp
das
movsl
pop
cmp
pop
cmp
loop
mov
push
mov
xchg
mov
or
fstps
fcoms
or
mov
rcrl
clc
mov
pop
fistl
xchg
in
inc
add
sub
insb
andl
lods
mov
scas
add
pop
sbb
xor
pusha
push
adc
or
loopne
cmp
pusha
out
cli
jg
or
adc
adcl
mov
shll
dec
mov
mov
popa
leave
fisttpl
inc
mov
xor
icebp
ja
mov
fs
imul
bnd
add
sub
push
mov
pop
shlb
daa
movsb
pop
sbb
pop
ds
jecxz
push
or
repz
fstpl
test
cmp
cmp
into
xor
loopne
add
xchg
rcl
sub
inc
ds
mov
call
mov
int
gs
cmp
add
pushf
add
popf
mov
mov
pusha
sub
and
push
jg
mov
and
test
les
jno
sbb
and
adc
push
xchg
pop
mov
mov
cwtl
inc
adc
cld
rol
xor
lock
rcrb
mov
sbb
mov
xor
andl
test
out
cmp
rorb
aam
push
scas
dec
sbb
filds
pop
add
cmp
dec
and
sbb
pop
insl
dec
xchg
cmp
fdivrs
pop
inc
cld
arpl
cmp
jo
xor
scas
mov
ja
push
add
inc
xchg
rorl
inc
push
and
lods
add
movsb
xor
mov
add
mov
add
xchg
and
adc
add
and
jmp
add
int3
mov
popa
je
out
test
pop
or
xadd
pop
mov
mov
aaa
pop
xchg
cmp
sbb
mov
sub
bswap
shlb
xchg
or
dec
xor
xor
fstpt
cli
fdivl
add
inc
inc
ss
js
testl
in
mov
xorl
jb
add
aaa
push
mov
dec
pop
pop
xorb
testl
mov
je
ret
dec
dec
jmp
xchg
cmp
roll
dec
sti
es
stos
addb
jo
paddusb
pop
xor
add
out
test
adc
popf
add
sbb
test
cli
repz
imull
cmp
je
jbe
out
add
dec
cmp
in
inc
sbb
xor
outsb
pop
repnz
jo
add
add
stos
jle
add
add
jns
pop
dec
jle
jo
sub
loopew
nop
add
mov
pop
data16
add
pop
dec
adc
jecxz
mov
mov
lods
xchg
xlat
pop
stc
add
mov
imul
mov
push
xor
movsl
and
imul
add
mov
push
das
pop
jle
cld
pushf
adc
mov
and
cltd
repnz
shlb
mov
mov
jns
sar
mov
add
repnz
sbb
cld
add
es
aam
add
pop
loope
push
mov
test
cltd
and
aam
leave
pop
ds
cmpsb
les
adc
inc
adc
add
or
sub
mov
or
ja
add
and
in
pop
lahf
add
mov
push
mov
data16
aas
test
js
daa
adcb
or
add
xor
in
imulb
jno
mov
popa
out
dec
pop
xor
int3
outsl
lods
andb
push
pop
stc
push
cmc
jbe
jnp
and
mov
add
iret
adc
rcl
pop
repz
mov
iret
add
and
add
in
inc
int3
pop
add
jno
test
ds
loopne
pop
cmp
dec
in
lretw
xchg
dec
add
mov
scas
loop
push
sub
adc
and
cwtl
add
out
add
cs
add
imul
gs
sbb
pusha
add
mov
pop
push
data16
add
mov
pusha
and
add
test
adc
js
imul
fadds
add
pop
cltd
add
aas
ror
aad
ja
inc
mov
jns
imul
fcmovnu
xor
lock
mov
add
icebp
dec
pop
mov
jbe
mov
inc
add
cld
inc
add
xchg
enter
sub
enter
xchg
dec
add
sbb
add
xor
scas
cmpsl
movsb
les
mov
out
pushf
jle
rcrb
ja
dec
fnop
cmp
pusha
lret
rorl
pusha
sbb
ljmp
negb
add
aas
xchg
adc
div
jnp
fucom
les
push
sbb
fsubs
sbb
loope
movl
fisttpl
mov
add
incb
mov
add
push
aas
jl
ret
jge
xchg
in
fisubl
sbb
jecxz
aaa
push
pusha
mov
clc
cmpb
jle
add
cwtl
pop
xchg
imul
cmp
testl
jns
push
jle
fstl
test
clc
les
aas
in
push
adc
mov
xchg
xor
add
jecxz
jnp
push
push
mov
mov
or
cwtl
xchg
pop
sbb
and
add
and
dec
mov
adc
xchg
xchg
jge
jl
jp
popf
jno
cmp
xchg
cmp
ja
in
mov
add
sbb
je
aaa
add
pushf
push
test
xchg
outsb
add
push
xor
jle
add
mov
sbb
jbe
outsb
rol
xchg
push
cmp
mov
jge
xchg
ret
es
sbb
sub
rcl
mov
xor
cwtl
and
add
sbb
lods
sub
add
test
pop
lret
sti
adcb
add
mov
icebp
jmp
dec
or
orb
pop
addl
cmp
outsl
add
ja
int3
add
pop
fadds
add
mov
add
jecxz
jne
dec
pop
loope
or
mull
dec
fstpl
rcr
out
scas
jl
add
cmp
outsb
add
inc
mov
dec
jge
add
cli
add
jg
add
xchg
adc
add
out
xor
dec
mov
cld
cmpl
mov
sub
add
adc
ret
jbe
aaa
les
add
add
in
leave
incb
loope
icebp
int3
dec
dec
push
fildl
pushf
sahf
dec
out
jns
push
mov
icebp
subb
sub
adc
jo
pop
and
and
push
gs
add
lock
loopne
cwtl
sbb
dec
out
fldcw
dec
jmp
mov
lock
add
xchg
add
testb
or
push
jle
add
mov
add
push
ret
mov
xchg
sbb
sbb
inc
mov
sub
mov
lea
push
aaa
pop
inc
arpl
mov
or
jb
push
fldt
add
jg
aaa
add
pop
mov
sbb
sbb
cmc
add
popl
mov
adc
mov
out
test
cmpsl
xchg
add
rclb
lahf
push
cmp
fnstsw
lock
icebp
dec
jmp
add
push
mov
imul
ret
sub
jmp
push
mov
out
add
jnp
loop
pop
or
in
cmpsl
pusha
cld
jmp
cmp
cli
jo
pop
in
paddw
sbb
mov
mov
push
add
je
int3
and
adc
mov
in
lcall
and
mov
xchg
addb
and
ret
jp
sbb
fldl
mov
push
int3
jle
mov
loopne
shlb
xor
adc
mov
or
lods
mov
test
jmp
adc
sahf
add
add
fiaddl
add
pop
mov
cmp
fisubs
add
lods
ret
test
cmpsl
lds
mov
call
test
push
xor
nop
test
jl
pop
lock
push
xchg
movsb
add
or
mov
fmull
mov
push
add
inc
jne
sbb
jl
push
jnp
pop
outsb
sbb
adc
clc
dec
and
mov
mov
cs
add
gs
fimuls
xorb
rolb
xchg
sarl
adc
sbb
add
and
add
aas
fdivr
cmp
add
sahf
stos
or
add
adc
mov
add
mov
add
mov
js
pop
xor
aam
sub
add
mov
sub
mov
fs
rolb
insl
lods
sub
add
sarl
or
cli
in
stos
xlat
inc
rcrb
jecxz
insl
mov
lock
cmp
insl
int3
roll
adc
lea
mov
pop
cwtl
in
in
mov
sahf
adc
popf
cmp
pop
into
sub
inc
sbb
adc
jb
jl
xor
mov
mov
mov
dec
cmp
loope
cmp
adcb
das
test
hlt
cli
cmp
jecxz
arpl
fcomps
or
push
and
sbb
sbb
sti
inc
nop
lock
movsl
add
jne
sarb
adc
inc
xchg
adc
xor
add
xlat
jg
rcrb
add
pop
into
adc
pusha
pop
xor
sub
sti
add
jg
fwait
ja
adc
push
xchg
sbb
mov
mov
shlb
popf
and
lret
and
and
adc
jle
ret
adc
and
inc
sub
pop
xorl
mov
add
jg
push
rcl
in
push
cwtl
add
xor
xor
adc
adc
xacquire
mull
enter
dec
shll
or
add
loop
mov
lods
add
in
js
arpl
flds
test
push
add
jmp
pop
jbe
mov
loop
filds
mov
mov
cmp
sub
pop
stos
or
imul
fnstenv
stc
adcb
jnp
sbb
add
loopne
fisubrl
dec
daa
add
inc
lds
stc
jb
sub
inc
add
and
dec
add
pop
xlat
pop
ret
inc
push
jo
scas
fucomip
mov
rolb
mov
xchg
loop
add
test
movsb
cld
add
ds
or
pop
mov
pop
repz
ja
xlat
mov
jp
or
sub
loope
adc
mov
jl
sbb
push
test
adc
pusha
scas
sub
mov
mov
jns
or
mov
scas
push
add
fs
inc
xchg
add
jle
add
rcrb
iret
gs
loope
push
inc
scas
adc
sub
sub
ljmp
scas
push
fldcw
adc
pop
add
repnz
out
jle
mov
shlb
icebp
movsb
inc
or
or
stc
dec
pop
push
mov
add
ja
dec
add
push
pop
aam
test
iret
fadds
jge
pop
xlat
loop
adcb
idivb
rolb
in
add
sub
pusha
mov
add
xchg
ja
in
daa
rolb
add
adc
stos
pop
aaa
sarl
adc
sub
pop
pop
mov
add
fcmovb
sub
xchg
ds
out
mov
mov
clc
push
or
add
dec
das
add
test
in
cmpsb
push
cmp
outsb
cmp
int3
cmp
dec
pop
mov
cmp
xchg
hlt
sbb
out
jns
adc
das
xlat
inc
lds
add
lods
inc
out
add
dec
in
ficoml
loopne
add
fnstsw
cmp
repz
and
or
xchg
and
in
add
loop
jg
lock
xchg
bound
sub
jnp
cmpsl
add
mov
dec
fmull
pop
pop
enter
xchg
pusha
xchg
push
scas
inc
and
je
sbb
xor
xor
mov
mov
cmp
add
mov
sub
xchg
subl
scas
mov
xor
xchg
rorb
movsb
add
jno
push
cmc
in
dec
or
jnp
sbb
add
into
add
sti
mov
rorl
mov
push
movl
rolb
xor
movlps
lock
lahf
sarb
inc
mov
pop
cmc
gs
popf
cmpsb
ss
and
andb
imul
jbe
or
aas
cmp
push
loopne
data16
push
add
shl
rcr
jp
add
and
loope
mov
sbb
ds
mov
outsb
call
sbb
add
lds
popa
je
add
xor
and
add
stos
adc
pusha
add
imul
call
inc
push
jne
add
push
popl
add
sbb
ds
adc
pop
and
sub
add
jns
gs
cli
xor
jg
add
and
lods
jp
and
dec
mov
xchg
inc
pop
cwtl
stos
sub
sbb
xor
add
jno
mov
inc
insb
mov
xor
fmull
push
jle
xchg
lods
scas
adc
jp
cmc
addr16
cs
adc
or
lahf
add
mov
pop
xchg
dec
cmp
and
xorb
mov
enter
or
repnz
es
sarb
or
add
and
and
int3
or
fwait
sub
jne
dec
add
data16
mov
shl
add
xchg
adc
inc
daa
rcrl
insb
aas
sub
sub
mov
mov
pop
add
inc
jg
cmp
std
xlat
mov
clc
mov
leave
andb
and
aas
ljmp
push
sbb
inc
lock
xorb
or
pop
and
fnstsw
aaa
pop
enter
icebp
mov
pop
push
mov
cmp
stc
psrlq
inc
and
inc
mov
jb
int
out
lret
outsl
sub
add
lcall
sub
ljmp
movsl
add
mov
fbld
pop
and
dec
xorl
inc
test
test
xor
cmpsb
add
sbb
fiadds
xchg
mov
mov
aam
in
adc
lds
filds
push
imul
les
add
pop
pop
push
nop
sub
dec
push
aad
lds
pop
xor
mov
mov
pusha
add
int3
enter
hlt
and
aam
mov
pusha
ja
mov
test
lea
add
shl
sahf
pop
sarl
jl
xor
dec
add
ja
cld
mov
pop
addr16
je
add
in
fwait
popf
ss
add
xor
aad
pop
jge
sti
xchg
mov
test
iret
cli
pop
testb
outsb
jmp
mov
pop
aad
imul
jne
jae
add
cmovg
cmp
cs
add
adc
push
ret
add
insl
push
jge
cmpsl
ret
add
xchg
stos
mov
add
sbb
mov
insb
outsb
or
daa
mov
push
aam
pop
bound
mov
ds
in
xor
clc
test
or
fnsave
pop
adc
fwait
mov
ds
mov
add
mov
loop
adc
and
dec
jle
mov
stc
rcrb
or
mov
pop
call
sbb
xchg
add
dec
repnz
cmp
pop
out
jge
add
xor
pop
imul
adc
adc
pop
cmp
mov
ficoms
js
push
loop
psubsb
dec
int3
sbb
jbe
add
fidivrs
add
pop
xchg
dec
mov
ret
mov
sub
add
je
fnstcw
aaa
push
xorb
lods
es
add
orl
mov
sti
push
xchg
in
sub
rorl
jge
mov
int3
xchg
jnp
or
dec
cmp
push
push
jne
mov
mov
add
cmp
fistpl
push
mov
add
lea
jo
push
push
jp
push
xor
mov
add
cmc
cmp
xchg
adc
popf
incb
lret
adc
test
iret
add
adc
sub
ret
inc
fsubr
add
repnz
add
mov
xchg
mov
xor
out
cmp
in
sub
and
adc
loopne
fsub
out
neg
add
fstps
or
dec
dec
lret
and
add
or
imul
pushf
pop
inc
orb
jl
lret
jecxz
repnz
inc
xchg
popa
add
mov
pop
in
add
pusha
aad
and
je
cmc
leave
or
nop
sbb
xor
push
xchg
mov
add
cwtl
loop
stos
popa
repz
add
rcrb
shrb
mov
aam
add
popf
mov
cs
dec
jecxz
add
or
push
pop
mov
cmp
cs
vaddsubps
dec
cmp
add
cmp
out
push
adc
jecxz
pop
push
sub
outsb
pop
jge
testl
mov
inc
aam
jb
aas
jbe
pop
mov
jmp
movl
xor
or
test
daa
mov
cmp
add
in
mov
add
push
dec
fldcw
or
ss
or
push
lea
lds
repz
js
add
cmp
fsts
and
faddl
pusha
dec
into
shll
ror
arpl
xor
orl
sbb
int3
data16
imul
or
nop
loope
mov
xor
xor
insb
add
pop
inc
xor
jb
add
push
shrb
mov
or
into
adc
lods
and
arpl
xor
or
dec
fdivs
push
lods
sbb
fiaddl
push
jo
push
test
adc
add
imul
lret
pop
sahf
dec
add
gs
mov
cld
pop
add
cmc
call
fwait
add
mov
insl
and
into
mov
mov
ss
flds
addr16
mov
cmova
sarb
cmp
call
in
inc
xor
jae
test
add
add
lock
add
or
and
mov
bound
dec
push
outsb
fwait
add
inc
data16
cmp
mov
mov
vpinsrw
or
test
xorb
lea
jmp
fistpl
nop
dec
pusha
lods
in
sbb
cmpsl
rorb
es
cmp
add
xlat
mov
imulb
add
jmp
out
add
add
jnp
jb
mov
and
adc
add
mov
mov
pop
out
leave
insb
add
and
movsl
add
push
rcll
loopne
and
pop
in
cmpb
sub
rcr
add
pusha
lea
cmp
mov
add
in
fadds
add
out
or
sbb
dec
sub
insb
aas
push
push
mov
and
cmp
mov
xchg
insb
add
lret
mov
fucom
pop
pop
repnz
pop
mov
dec
dec
xchg
add
push
or
push
arpl
repz
scas
shlb
sbb
out
dec
or
add
push
inc
in
fs
dec
cli
rorl
mov
add
cltd
xor
loopne
and
incl
test
scas
out
jecxz
mov
loopne
popf
les
mov
je
add
pop
and
xor
inc
mov
fwait
add
add
mov
add
xchg
adc
or
testl
hlt
sub
sbb
bound
sbb
push
adc
inc
add
out
fistl
popl
jmp
mov
xchg
imul
mov
cmp
mov
lods
aas
push
inc
sub
push
or
pushf
add
int3
sbb
popl
add
xchg
pop
jbe
in
add
cmc
imull
push
and
or
lret
insb
adc
imul
aas
sbb
es
fcmovbe
sbb
sbb
popf
add
lock
add
dec
jle
push
pop
arpl
or
push
in
into
add
mov
in
testl
jecxz
xor
loopne
shll
cmpsl
aam
or
dec
filds
movsb
push
cmc
cltd
and
fs
mov
outsb
lret
stc
cmp
xor
jae
nop
out
xor
and
jnp
dec
test
xlat
add
stc
loop
test
scas
adc
nop
std
add
xor
lods
add
mov
loop
lods
leave
pop
jb
add
lcall
jmp
push
rolb
cmpb
sub
fstps
cmp
fwait
out
cmp
dec
push
incl
pop
fmul
add
dec
scas
jl
or
in
mov
mov
inc
ljmp
inc
dec
repnz
or
icebp
sbbl
imul
movsb
fs
add
fisttpll
xorb
jle
outsl
dec
pop
test
lcall
add
push
loope
jp
sub
das
lock
cmc
sbb
rcr
mov
out
orb
popa
out
lds
and
movsl
dec
cmpsb
mov
insb
sbbb
push
add
add
mov
roll
in
aad
pop
out
add
and
jg
add
mov
xchg
fdivr
in
rorb
into
cmovae
sbb
push
mov
inc
sti
loope
jae
ss
movsb
sub
ret
clc
mov
cli
sbb
in
aaa
adc
and
adc
loopne
nop
jne
aam
xchg
or
dec
jbe
add
gs
mov
aaa
push
iret
nop
xchg
movsl
add
add
adc
jl
push
mov
sub
sbb
daa
leave
cmc
das
sarb
jmp
xorb
mov
xchg
cmpsl
popa
jno
add
sbb
dec
sub
int3
adc
add
inc
cmpsb
cmpsl
and
sub
push
sarb
pop
jmp
adc
out
sbb
add
xchg
test
xchg
fs
and
dec
and
inc
clc
into
cmp
pop
aas
inc
test
jo
in
inc
add
lds
bound
mov
add
test
add
jle
push
add
aaa
cmp
addr16
push
inc
mov
push
adc
sub
pop
adc
mov
jl
jo
pop
ljmp
add
not
add
cmp
push
mov
fsts
lea
aas
jge
add
pop
push
add
pushf
inc
enter
jno
lods
adc
jge
pop
xor
adc
inc
fwait
jns
das
addr16
out
or
cli
negl
mov
repz
add
sbb
out
dec
or
filds
add
into
daa
jle
push
lahf
lret
popf
pop
mov
rcr
xor
insl
jo
push
dec
dec
inc
mov
and
push
les
add
ret
daa
push
data16
inc
out
add
mov
aas
loopne
icebp
aam
adc
test
aam
and
pop
sbb
push
mov
arpl
push
loopne
add
aad
in
stc
cmp
adc
add
mov
or
test
int
add
aaa
rcll
loopne
test
xor
decb
pushf
jae
das
xchg
mov
add
in
or
push
sbb
inc
and
sti
adc
xor
mov
in
ja
in
in
add
bound
sbb
fs
ljmp
sbb
cwtl
mov
adc
add
test
repnz
shl
inc
cwtl
and
jg
pop
lret
xchg
sbb
add
stos
mov
pshufw
mov
xlat
add
lods
cltd
jns
pop
orb
loopnew
ret
mov
rorb
add
pop
mov
add
pop
scas
popa
inc
jp
jno
orl
pop
shll
sbb
shrb
xor
test
push
xchg
xor
dec
sub
xor
or
call
and
mov
lods
popf
sbb
jl
out
sbb
rorl
inc
outsb
ret
xor
fwait
jnp
pop
fwait
pushl
and
xchg
jae
sub
in
call
add
mov
xor
xchg
adc
out
mov
loopne
sar
pop
add
jl
xchg
sub
add
xor
and
mov
iret
and
in
es
in
enter
rcll
fstp
arpl
mov
xor
jo
cmp
inc
insl
loope
add
std
adcl
lods
or
adc
mov
push
repnz
das
inc
iret
ret
in
pop
add
xor
out
jns
fists
lret
xor
pop
sbb
mov
and
xchg
popl
mov
pop
mov
mov
lods
cmp
sub
mov
sub
into
push
pop
subl
add
scas
jo
rcr
pop
mov
jmp
and
sbb
and
test
mov
dec
ds
jb
add
xor
sahf
sub
and
aas
sbb
adc
lcall
out
sbb
mov
jbe
inc
cmp
add
mov
mov
out
sub
fmuls
in
mov
and
add
jno
fdivrl
mov
add
enter
fwait
js
add
pop
aam
and
je
pusha
inc
dec
sahf
mov
xor
scas
adc
cli
lea
aas
pop
sbbb
push
sub
rolb
addl
jg
repz
add
adc
and
adc
push
in
test
mov
fimull
inc
sub
fsubrs
clc
leave
outsb
inc
or
testl
fnstcw
bound
xor
icebp
adc
cmp
or
and
add
ds
dec
mov
jmp
cwtl
add
inc
xchg
pop
fstpl
pusha
rcll
jge
fldl
das
xor
or
xchg
cmp
jne
call
lock
jae
fstl
mov
int3
imul
loope
mov
add
sbb
adc
or
test
cld
adc
adc
mov
mov
mov
push
sub
rolb
xor
sahf
sbb
push
in
add
xor
out
pop
cmp
mov
xor
mov
pop
pop
mov
dec
je
cmp
inc
lahf
add
leave
adc
hlt
lret
bswap
scas
xchg
movsl
cmpb
sbbb
push
outsl
push
scas
xchg
mov
sbb
mov
adc
adc
fisubrs
xchg
addr16
inc
repnz
hlt
std
jmp
xor
cld
in
adc
cs
clc
bts
pop
lret
nop
xchg
sbb
xor
dec
cs
or
cmpsl
add
xchg
jecxz
sub
mov
aam
aas
pushf
cmc
movsb
decl
mov
pop
and
lods
xchg
jae
test
lcall
int3
mov
shlb
hlt
loop
push
nop
or
jae
add
cltd
cs
add
rcll
sbb
addb
es
pop
nop
pop
movsb
add
fdivrl
jp
add
jae
scas
xlat
push
jne
js
add
add
add
add
add
shl
pop
sarb
adc
mov
sbb
cmpsl
repz
dec
cmp
int
mov
pusha
lds
stos
jo
xor
shrb
jl,pn
add
push
mov
loopne
sbb
add
adc
loopne
mov
in
push
sti
in
jbe
icebp
lock
addl
gs
cmp
xchg
xor
jg
mov
adc
add
add
clc
faddp
inc
addl
fstpt
dec
xchg
jb
loopne
lock
cmp
or
xchg
dec
sbb
pop
out
xchg
lea
dec
and
stos
xchg
sar
sahf
sbb
add
cmp
or
outsb
stc
imul
in
mov
sub
inc
or
adc
hlt
les
das
adc
je
and
es
arpl
nop
in
rorb
outsb
ljmp
sbb
mov
or
adc
sub
rcrb
xchg
jo
mov
outsb
xchg
or
bound
test
xor
add
lods
jne
adc
insb
lds
push
test
shrb
pop
lds
mov
add
test
add
xor
adc
add
push
push
mov
mov
adc
loopne
and
push
add
and
insl
hlt
inc
add
mov
add
pushl
adcb
test
and
dec
add
xlat
add
leave
add
cmpl
sub
xchg
or
addb
mov
cmp
xchg
movsb
lret
nop
scas
sub
popa
mov
fstp
sub
add
adc
mov
out
out
add
lock
dec
pop
mov
inc
add
add
cs
push
movb
add
mov
pop
daa
or
je
xchg
sub
xorb
jg
add
clc
fisttpll
jae
add
mov
mov
stc
pop
movsl
imul
movd
stos
xlat
aam
shr
pop
mov
and
rclb
mov
aad
add
imul
outsl
loope
or
addl
mov
push
jo
mov
mov
add
xchg
push
push
jmp
subb
sbb
shll
cli
mov
mov
movsb
xorb
pop
sub
pop
sub
push
fs
xchg
out
divb
and
out
mov
das
add
jle
add
stos
sub
adc
jbe
aaa
outsb
scas
adc
or
int3
and
dec
sub
pop
lret
lahf
in
daa
repz
mov
or
cwtl
and
pop
jnp
bsf
sbb
cltd
push
add
rcll
pop
add
je
jns
pop
cmpsb
sbb
or
sub
push
jl
xorl
adc
shl
or
mov
imul
pop
insb
sbb
loopne
jle
sub
loop
add
jecxz
insb
xchg
jo
add
dec
out
addl
loop
sub
leave
aas
into
add
loopne
hlt
jno
cmp
mov
aas
popf
aas
pop
scas
push
rolb
add
aaa
ja
sbb
lock
std
adc
add
jne
add
and
pop
pop
sub
in
or
pop
mov
mov
lcall
ds
nop
xchg
cmp
jl
arpl
sbb
or
jmp
mov
adc
jb
sbb
stos
mov
add
add
mov
fmuls
cmp
and
mov
or
jp
inc
xchg
loopne
pop
mov
jl
fidivl
xchg
in
and
adc
inc
lahf
pop
xchg
int3
mov
test
or
push
add
fmuls
jecxz
out
mov
inc
or
addl
mov
xchg
rcll
sub
or
fcompl
loop
lahf
xchg
push
sahf
out
adc
inc
cmpsb
testb
xchg
in
push
insb
jns
cmp
pushf
add
xchg
add
add
arpl
adc
int3
fldt
std
imul
jns
xor
and
stos
xor
adc
adcb
or
fs
mov
dec
test
mov
jecxz
jns
icebp
pushf
mov
insl
or
add
icebp
fnstsw
cmp
add
push
mov
out
add
mov
mov
cwtl
lods
jmp
sub
jno
inc
js
in
cltd
mov
mov
fimull
push
aaa
inc
add
xlat
sbb
mov
add
dec
pop
mov
inc
adc
add
cwtl
and
and
add
mov
cli
add
pop
cld
xorl
inc
sarb
pop
xor
pop
incb
cmp
ds
mov
or
dec
jp
mov
add
insl
mov
lods
lods
test
push
leave
test
ljmp
adc
mov
aas
call
add
xor
adc
xchg
mov
nop
dec
leave
jo
or
push
imul
stc
add
fdivr
ja
cltd
enter
cmp
add
fwait
inc
add
mov
cmpsb
cmp
subb
fsub
fbld
adc
mov
leave
sbb
inc
add
lahf
popf
mov
xor
add
in
jnp
nop
jns
add
cli
pop
lret
leave
outsl
add
test
aam
js
ret
sahf
rdtsc
mov
ljmp
out
add
test
xchg
out
in
idivb
nop
bound
inc
pop
add
or
sub
loopne
pushf
jnp
add
pop
lods
lret
in
in
add
adc
mov
int
pusha
fldz
dec
addr16
pop
lret
mov
push
stos
push
or
sbb
push
add
roll
jns
call
mov
out
je
repz
shrb
sub
and
into
jb
ljmp
cli
outsl
dec
xorb
pop
or
lds
ss
pushf
fs
add
rclb
out
aaa
pop
push
jne
sbb
pop
jo
jg
add
out
mov
push
xor
cmpsb
add
bound
sub
dec
push
mov
es
imul
cmp
or
cmp
in
add
das
je
push
mov
movsl
adc
and
enter
add
mov
testl
mov
add
add
mov
insl
ja
roll
fnstenv
daa
pusha
add
add
jns
pop
mov
and
fcom
xchg
pop
mov
dec
lds
add
out
nop
and
fstl
jno
sbb
rcrb
mov
nop
mov
fcmovnbe
pop
mov
dec
aad
cmp
es
test
sbb
fstps
andl
in
xor
cmpb
loope
cld
addb
sub
in
pop
adc
add
ja
jns
and
shlb
jmp
data16
inc
pop
mov
aaa
add
popf
rcr
outsl
push
fsts
add
faddl
cwtl
pop
imull
repnz
push
mov
inc
add
and
pop
lret
jle
cltd
jmp
add
or
fistpll
cmp
adc
push
mov
es
in
add
mov
out
clc
jae
gs
add
stc
mov
pop
add
insb
test
sbb
call
or
xchg
dec
gs
hlt
jge
jo
pop
add
out
or
push
xorl
loopne
popa
stos
add
ret
inc
dec
inc
std
pop
dec
clc
jge
pop
pop
movb
lret
shrd
ud2
mov
sbb
aam
pusha
lds
loopne
add
imul
fstl
sub
xchg
ja
cmp
loope
xlat
push
ret
or
pop
repz
movsl
pusha
cwtl
out
pop
cmp
add
dec
pop
loope
mov
cltd
shlb
xor
add
scas
lods
add
imul
mov
and
and
movsb
push
cmp
clc
movsl
test
lahf
mov
aam
inc
cmp
mov
and
sub
add
lods
mov
test
pop
scas
add
shlb
bnd
sbb
fs
add
or
inc
inc
ret
xchg
mov
cmpb
xlat
add
ret
mov
out
clc
in
xor
push
mov
jo
dec
pop
mov
push
or
dec
mov
and
test
xchg
rclb
mov
or
cltd
std
mov
xor
xlat
cmpsb
in
dec
lock
add
jecxz
xor
push
dec
flds
push
mov
adc
out
cltd
jl
stos
sti
mov
inc
in
inc
push
cld
loop
add
std
mov
add
enter
push
stos
or
ss
jo
fs
jl
loopne
cld
push
dec
xchg
rcll
add
cmp
adc
in
xchg
adc
mov
out
xchg
fisttpl
fistpll
fiaddl
dec
mov
mov
add
pop
inc
dec
stos
mov
cmp
add
filds
pop
in
cmp
mov
or
add
aaa
mov
jmp
popa
mov
jb
pop
cmp
adc
ja
mov
cli
mov
mov
add
inc
xlat
adc
inc
imul
fldt
add
add
push
add
jno
cs
mov
and
pop
data16
outsl
pop
dec
xor
add
adc
jo
imul
arpl
mov
hlt
aas
mov
loop
ret
push
out
mov
adc
sub
cs
adc
and
in
xor
ds
out
or
aad
pop
sub
add
sbb
cmp
cltd
pminub
mov
lods
xor
daa
add
cmp
xchg
dec
int
call
inc
mov
repnz
add
imul
sub
les
add
and
push
jo
inc
add
in
repz
lret
inc
jg
ljmp
pop
rolb
push
add
push
aam
sahf
icebp
add
and
pop
add
loopne
js
pushf
mov
clc
add
pop
jbe
int3
into
idivl
xlat
addr16
cmp
insb
add
sbb
xor
push
mov
xchg
inc
data16
xor
mov
add
or
sub
cs
xchg
dec
mov
pop
loop
addl
sbb
sbb
or
cld
dec
es
jp
xchg
lock
xor
add
adc
dec
and
iret
into
add
or
lock
add
or
mov
sbb
mov
cmp
repz
loop
adc
insb
jbe
imul
adcl
add
add
pop
add
mov
repz
fldl
pushf
sbb
out
add
loope
cli
mov
fwait
mov
xchg
and
sub
aas
call
add
es
ret
adc
push
addr16
jg
push
arpl
shlb
dec
adc
adcl
in
roll
pop
sar
iret
movaps
sbb
mov
sbb
add
lahf
out
jmp
pusha
add
xchg
xchg
pop
add
mov
imul
xor
ret
sbb
push
add
xorl
add
into
mov
sbb
pop
mov
insl
je
cmpb
aam
clc
jnp
mov
out
jb
mov
dec
sbb
clc
mov
arpl
add
repnz
loopne
addr16
cwtl
lahf
scas
rorb
dec
mov
rorl
mov
xchg
daa
pop
pop
jle
inc
outsb
rcr
and
cltd
sub
xor
jmp
out
adc
add
mov
and
jg
push
cmc
aas
ror
in
fstps
mov
gs
jp
mov
test
movsb
cmp
jnp
sti
test
jge
mov
cmp
pop
jns
cmp
test
scas
push
rorl
add
addr16
add
inc
popa
movsl
in
int3
inc
mov
das
pop
rorl
mov
sbb
andb
xchg
mov
pop
test
loopne
cmc
cli
push
mov
mov
dec
push
std
dec
mov
pop
push
ret
enter
cmp
mul
test
incl
inc
adc
cwtl
add
jne
push
repz
sbb
loop
cld
cmpsl
loopne
leave
rolb
add
pop
test
jge
out
mov
dec
jle
testb
cmpsb
adc
jnp
add
outsl
cltd
inc
push
pop
imul
add
sbb
das
out
movsl
sahf
ds
adc
insl
jne
mov
pop
int3
add
fcmove
sub
subb
cmpsb
xorb
int
lea
dec
jne
inc
xor
jmp
sbb
popf
lcall
icebp
mov
jg
mov
add
add
dec
add
pop
scas
roll
cmpsb
mov
mov
push
jl
adc
push
out
clc
arpl
add
mov
xchg
pop
lds
shr
mov
cmp
loop
inc
fstpl
repz
push
test
jns
iret
dec
add
hlt
out
enter
sysret
lock
std
add
das
sub
flds
fiaddl
xchg
ret
add
inc
cmp
fmuls
add
and
cld
daa
add
jecxz
andb
xlat
add
std
add
add
cmp
cmpb
or
add
add
mov
adc
xor
scas
pop
xchg
cli
push
push
test
mov
pop
inc
loop
adc
xor
add
jg
fs
pop
add
mov
jnp
rclb
add
in
leave
test
aas
xchg
add
mov
cmpsl
pop
mov
iret
ja
mov
vpmulhuw
leave
push
or
or
sbb
stos
xchg
iret
add
pop
movsl
movl
sbb
pop
or
or
push
in
add
fs
aaa
cld
add
lds
sub
xchg
push
cmp
mov
cltd
adc
cmc
pop
les
outsb
jns
arpl
movsl
mov
ror
sub
mov
or
and
outsb
adc
jecxz
add
addl
call
mov
clc
add
push
pop
cltd
cmp
lar
int3
xchg
lret
pop
mov
and
mov
cli
cmp
push
jne
sti
test
sub
incb
cli
out
jb
add
int
xchg
push
lds
push
addr16
cmc
add
es
inc
xor
rcrb
sbb
pop
cmp
popa
fisubrl
add
jb
jbe
rclb
cmc
jl
addb
mov
xchg
mov
or
adc
cli
xor
add
adc
mulb
arpl
cmp
inc
jne
mov
data16
push
push
jno
pop
jnp
and
add
out
icebp
add
hlt
mov
push
cmp
hlt
add
mov
dec
mov
imul
mov
int
cli
add
jg
lahf
ror
popa
fcomps
pop
mov
mov
push
loopne
jg
jnp
mov
incl
movsl
jno
add
xchg
jmp
nop
out
add
int3
lcall
or
das
lret
rorb
pop
mov
test
out
or
mov
mov
push
aam
add
insl
add
aas
aam
pop
add
jl
mov
xor
add
fidivs
pop
add
shrl
mov
outsl
inc
add
stc
xor
add
in
divb
pop
clc
jne
fwait
inc
dec
adc
out
aam
and
mov
clc
cmpl
out
cmpb
rorb
xchg
add
push
les
jns
int
push
repnz
std
or
out
xor
adc
fsubrp
outsb
pop
scas
add
into
mov
add
cmp
dec
pop
sbb
cs
and
or
imul
sarb
push
sub
enter
shr
mov
xchg
movsb
sbb
jne
add
dec
push
push
lahf
fiaddl
inc
insb
out
cli
dec
inc
jg
adc
andb
std
add
sub
add
movsl
adc
adc
add
movsl
mov
lods
add
add
pop
repnz
push
mov
mov
mov
and
inc
adc
loop
mov
jae
pop
inc
pop
das
lock
dec
std
jmp
ss
xlat
adc
adcl
add
dec
xchg
nop
push
or
push
inc
lcall
jmp
in
clc
push
scas
ds
fwait
add
dec
mov
loop
aas
sbb
mov
mov
scas
adc
add
lea
pop
mov
test
add
pusha
sbb
repz
mov
les
dec
jge
xor
je
fldcw
rorl
imul
pusha
ret
cmp
add
mov
cmpb
add
shlb
out
add
insb
xchg
mov
mov
leave
mov
in
add
jmp
cmc
cmp
xchg
inc
xor
insl
add
mov
pop
xchg
dec
inc
cmpl
pop
or
psubusw
addb
sub
add
lods
mov
mov
jl
test
aaa
sarb
in
add
mov
sub
mov
shr
fisttps
xor
and
inc
add
out
aam
push
jl
ds
cmp
imul
rolb
lods
mov
inc
pop
lret
nop
xchg
push
push
jnp
push
dec
jmp
mov
and
fisttpll
xor
pusha
add
loopne
xchg
int3
cmp
sub
xor
pop
push
mov
int
add
mov
mov
es
xchg
sbbl
sbb
pop
cld
repz
cli
mov
push
cmp
dec
out
inc
rolb
xlat
insl
push
aad
add
xchg
push
adc
mov
testl
mov
sub
mov
xorl
addb
mulb
ja
stos
sbb
int3
bound
dec
cwtl
adc
lret
sub
lods
cmp
test
loop
dec
repnz
push
call
outsb
sbb
aad
mov
or
out
pop
xor
jmp
sub
mov
arpl
clc
dec
insl
ret
add
stos
push
ror
lods
aaa
les
push
mov
mov
add
mov
mov
loopne
mov
mov
sub
std
dec
push
leave
ljmp
push
rolb
xor
mov
pop
add
xchg
test
in
test
add
and
leave
and
gs
pop
xchg
or
jl
add
aam
push
push
or
imul
xchg
xchg
and
dec
add
inc
bound
mov
fcompl
loope
pop
sldt
frstor
mov
cli
xchg
nop
sub
adcl
cli
scas
add
jb
roll
lret
mov
leave
shll
mov
dec
jp
stos
inc
add
mov
sub
sbb
add
lock
in
or
dec
test
bound
js
loopne
insl
and
mov
repz
push
adc
rolb
inc
ljmp
scas
add
dec
bound
push
mov
mov
xor
push
imul
dec
add
dec
decb
add
dec
in
sub
xchg
or
cmp
and
push
add
std
stos
in
mov
mov
pop
outsl
pusha
cs
jb
cmp
adc
mov
mov
idiv
mov
stos
out
into
jo
dec
push
sbb
jne
stc
ljmp
add
andl
jno
ret
jmp
int
cmc
mov
insl
pop
cmp
cs
icebp
ds
int
cwtl
aad
xor
cmp
in
xlat
mov
fisubrl
mov
hlt
add
jo
cmc
add
loope
addr16
lods
test
fdivrl
push
mov
fdivr
sub
pop
and
dec
in
add
mov
movsl
incb
mov
sbb
push
jle
out
sarl
adc
fbld
jno
mov
mov
add
mov
fsubrs
jle
push
sbb
test
aaa
bound
add
adc
adc
xchg
or
add
fimull
mov
int
dec
add
or
add
dec
fsub
push
test
test
into
and
hlt
aam
add
xchg
cs
xor
xor
ret
add
data16
leave
add
mov
sbbb
stos
add
pushf
jno
fsubl
idivl
repz
cmc
push
xor
int
mov
sbb
jecxz
sub
mov
jg
add
dec
sbb
pop
pop
and
dec
ret
push
mov
idiv
shrl
mov
sbb
pop
icebp
lock
dec
add
push
mov
pop
add
mov
xchg
push
jge
add
or
sub
ret
jge
addl
pusha
cli
jo
pusha
lock
lods
cld
push
lcall
les
or
rorl
xor
add
out
mov
pop
add
and
mov
cmp
push
ret
add
or
dec
inc
decb
inc
iret
and
xor
add
mov
push
mov
in
push
fisubrs
push
and
inc
fwait
mov
add
push
lcall
push
fcmovne
mov
or
int3
xchg
add
scas
cmp
in
incl
clc
mov
inc
adc
xor
sbb
push
xor
enter
and
gs
dec
jg
add
push
lods
cmpsl
pop
mov
xor
lods
add
scas
xchg
test
xlat
clc
gs
push
fwait
lea
inc
add
arpl
test
nop
sar
jle
add
add
and
ljmp
imul
xchg
aaa
add
sub
pop
faddl
data16
repnz
cmp
cmpsl
daa
lahf
ret
inc
xlat
add
jl
shr
jle
add
inc
add
inc
rcll
fisttpll
jge
pusha
sbb
add
les
std
dec
fstpt
inc
push
sbb
fwait
daa
mov
jecxz
add
add
fs
ljmp
mov
seta
adc
push
mov
out
cmp
dec
js
rol
mov
xlat
std
aaa
jge
je
add
or
faddl
lods
cmpsl
movsl
mov
add
shlb
add
jecxz
mov
xlat
add
mov
pusha
pop
cmpsb
cltd
sub
sub
and
add
xchg
jmp
inc
jp
hlt
cmpsb
lahf
cmp
orl
leave
pusha
imul
fs
inc
rcr
inc
fiaddl
outsl
faddl
in
arpl
mov
cwtl
test
push
adc
pusha
adc
add
mov
add
pop
jae
sub
imul
clc
add
enter
lock
dec
push
and
rorb
mov
fnsave
test
pop
lret
les
test
pop
dec
enter
mov
or
rol
xchg
add
jno
hlt
sub
jge
add
jle
lcall
add
push
mov
outsl
jo
out
test
push
xchg
lret
pusha
daa
aas
add
adc
lahf
sqrtps
add
push
jmp
arpl
pop
cmp
dec
or
loop
add
movsb
addr16
add
mov
out
add
cld
adc
lea
inc
lcall
cmp
or
stos
aaa
out
lsl
mov
dec
mov
xchg
movsb
leave
in
add
adc
add
jne
inc
adc
mov
fistl
je
fidivrs
insb
int3
xlat
mov
loope
inc
dec
cld
fldcw
push
roll
outsl
lods
add
xchg
jge
cmp
or
sbb
and
and
xor
mov
sbb
mov
push
push
xchg
iret
add
add
js
pop
dec
das
subb
je
mov
push
ja
or
rorb
xchg
add
push
scas
call
or
fmuls
js
mov
or
inc
and
data16
xlat
mov
or
mov
negl
adc
jp
add
sbb
or
cltd
int
mov
jae
punpckhdq
inc
and
pop
loopne
ret
jo
cli
lret
movsb
xchg
ss
add
popa
fdivrs
outsb
repnz
jmp
sbb
lock
add
leave
cmp
outsl
xchg
cs
add
mov
add
mov
inc
rorb
add
mov
mov
add
sbb
pop
jg
inc
int
lock
sub
mov
in
and
add
aam
add
or
dec
mov
nop
add
pop
push
js
push
mov
testl
filds
inc
out
sub
add
test
dec
jge
add
cmp
jecxz
push
pop
cmpsl
leave
movsl
ret
add
mov
cmc
jmp
xchg
add
jle
and
push
cmp
pop
stos
mov
std
xchg
cmp
add
adcl
repz
sub
cmp
das
test
fistpll
stos
mov
sub
push
add
fldcw
js
sbb
pop
shll
mov
push
icebp
add
nop
addb
jno
or
jecxz
les
xchg
lock
xchg
ret
sbb
loop
je
mov
add
pusha
adcb
mov
pop
sub
mov
mov
pop
add
jbe
mov
sbb
je
shlb
pushl
adc
icebp
or
pop
xlat
mov
jbe
pop
mov
sbb
imul
shlb
add
lahf
xor
into
sbb
lods
pop
push
pop
add
jle,pn
clc
jl
aad
push
jp
mov
cmc
flds
xor
pop
xchg
push
sti
test
mov
add
int3
pusha
scas
repz
and
jne
jns
adc
mov
insb
push
push
mov
cmp
inc
mov
cmp
shr
pop
hlt
jb
adc
add
cmp
push
add
push
mov
ja
pop
shl
dec
pop
pop
pusha
pop
lahf
fldl
cmpsb
repnz
mov
xchg
add
dec
jl
dec
add
pop
mov
imul
mov
and
jg
jecxz
inc
mov
sysexit
adc
and
pop
inc
and
and
roll
insl
jbe
add
inc
mov
add
clc
hlt
mov
cmpb
pop
cwtl
lods
pop
call
cmp
add
mov
mov
aam
pop
lock
or
pusha
les
in
fisubs
push
lock
movsl
fwait
and
xchg
cmp
sub
fadds
enter
adc
mov
dec
add
in
sub
sbbb
or
popa
ret
inc
mov
push
and
stos
loopne
or
fimull
call
outsb
aaa
loopne
insb
scas
mov
xchg
or
cmp
mov
cs
mov
lock
hlt
test
dec
mov
or
rolb
fstl
test
adcb
mov
mov
dec
repz
jg
inc
sbb
pop
lcall
mov
jp
stc
mov
dec
sub
out
lret
mov
test
push
adc
sub
jecxz
cmpl
push
cmp
inc
add
je
pop
addl
cmp
jg
add
add
sahf
das
sub
shlb
add
es
test
bound
pop
outsl
jmp
ret
dec
add
fcmovnu
mov
enter
add
mov
xchg
cmp
mov
xor
and
lcall
fistps
mov
and
sub
das
cwtl
cmp
and
sub
sub
fdivrs
cli
add
cmp
pop
pop
repnz
adc
mov
rclb
js
cli
lods
es
inc
in
add
or
stos
sbb
push
adc
dec
mov
or
adc
rorb
out
add
jo
jnp
sbb
hlt
xchg
pop
sub
add
push
flds
mov
xor
xor
add
shll
mov
scas
mov
xor
dec
sarb
add
call
call
mov
add
rolb
mov
cmc
xorb
cli
add
sbb
add
daa
test
pop
aaa
testl
inc
lock
xor
add
mov
test
lsl
in
and
dec
fists
push
sbb
in
sub
arpl
mov
loopne
aad
lods
outsl
iret
sbb
mov
lea
cmp
or
sbb
bnd
cmpsw
jne
pop
insb
jl
out
mov
cmp
mov
xor
xchg
inc
jb
movsl
mov
add
xor
cmpsl
pusha
aam
roll
das
hlt
xor
sub
add
xchg
mov
leave
sub
addr16
add
add
push
cmp
pop
cmp
adc
inc
pushf
add
rep
mov
frstor
jmp
inc
add
jno
cmp
add
ds
or
sbbl
pop
das
nop
adc
cmp
xchg
and
add
ret
mov
cmp
add
or
add
jmp
xchg
add
inc
mov
lds
scas
iret
add
mov
into
mov
mov
inc
outsb
xchg
jo
jp
cmp
mov
and
adc
cmp
add
mov
push
push
or
and
loope
pop
subb
add
adc
inc
sub
fldz
push
loope
xor
xchg
sub
dec
push
add
push
add
movsl
cli
add
js
inc
add
lods
scas
mov
xchg
call
subl
ds
jbe
xchg
jmp
lcall
repnz
popa
push
cmp
pop
leave
add
push
fnstcw
cmpsl
inc
and
add
clc
mov
jno
push
in
add
ret
cmp
cld
das
imull
movsb
add
mov
mov
loopne
ret
fadds
mov
mov
xchg
lock
jecxz
jg
push
mov
cmp
pop
lods
mov
subb
mov
mov
call
je
mov
pushf
add
dec
inc
divl
add
xor
fsubrs
insl
xchg
out
stos
mov
and
ja
pusha
repz
shlb
int3
dec
aad
adcl
or
movsb
add
bound
mov
add
jbe
push
cmp
pushl
jg
iret
imul
mov
add
arpl
adc
push
outsb
add
aam
lea
out
arpl
scas
dec
xor
jno
cmp
add
mov
lcall
xor
pop
mov
add
fistpll
out
pop
add
xchg
int3
cmp
mov
je
add
xchg
cmpsb
pop
sub
xor
add
fstl
sub
push
jo
js
imul
ret
cld
ficoml
dec
add
cmp
pop
loop
cmp
inc
fs
mov
lods
jge
add
arpl
jp
leave
sub
adc
aam
cmp
add
imul
leave
xlat
adc
pusha
les
pop
arpl
sbb
dec
add
aaa
ret
jnp
pop
jp
jo
add
outsb
push
js
push
std
add
cmp
dec
mov
push
mov
push
ds
loopne
add
fcmovb
cmp
cs
mov
lret
jo
jg
sub
mov
out
xor
nop
sbb
lock
adcb
push
fwait
imul
fdivs
dec
xorb
pop
icebp
jecxz
add
mov
cli
repz
sub
and
xor
inc
mov
cs
inc
xor
addr16
add
jge
push
lret
out
push
cld
jl
push
xchg
test
xchg
lcall
jle
add
lahf
xchg
and
mov
xchg
jg
idivb
rclb
pusha
aas
mov
loopne
add
mov
ret
jnp
or
push
call
mov
add
jo
mov
iret
clc
add
shll
xchg
idivb
jae
push
out
or
pop
scas
test
add
outsb
hlt
jb
bound
add
push
shl
pop
cmc
inc
or
sbb
or
push
dec
in
mov
mov
icebp
roll
addr16
out
stos
pop
rolb
push
xchg
out
punpcklbw
ret
pop
cld
cs
or
repnz
sbb
sti
mov
gs
movsb
push
je
jae
cli
add
jp
push
add
and
aas
add
scas
daa
pusha
sub
das
lcall
add
ret
fsubr
xor
in
push
mov
sahf
add
xor
test
or
add
std
push
imul
sub
fiaddl
add
movsl
dec
pusha
xchg
dec
int3
ljmp
and
mov
iret
adc
popf
leave
shlb
push
pop
jnp
dec
inc
xor
negl
cmp
in
or
in
les
ret
sbb
xchg
xbegin
push
jne
inc
push
mov
fsubrl
mov
add
mov
in
hlt
shlb
std
push
sbb
and
test
xor
gs
push
and
mov
add
jmp
cwtl
stos
lret
add
sub
std
mov
sbb
je
insl
divl
cmc
add
xor
inc
std
pop
mov
mov
xor
scas
xchg
add
inc
les
pop
mov
add
divb
jo
orb
xor
mov
xchg
jo
mov
add
push
lods
xchg
hlt
test
dec
add
icebp
out
call
push
or
or
insb
outsl
nop
rolb
loop
push
insl
push
ljmp
fsubrl
std
xchg
and
stc
fldl
mov
jns,pn
cmc
maskmovq
testl
add
push
add
add
lret
cmp
jae
mov
mov
inc
push
lods
fsubrs
and
inc
sbb
rolb
es
repnz
sbb
shrl
test
xchg
pop
add
jecxz
scas
pop
xchg
push
je
push
xchg
orb
sub
xchg
mov
xchg
ja
es
pop
and
mov
into
mov
sub
xchg
std
adc
xchg
roll
sbb
or
or
add
jb
cmc
add
jno
fwait
jl
lods
jbe
sbb
lcall
or
repz
add
sarb
arpl
cld
dec
fwait
loop
ljmp
dec
sub
add
cmp
cmp
pop
in
xchg
add
or
dec
jnp
clc
imul
ds
ret
aaa
rolb
popa
cli
xor
pop
jl
push
loop
test
add
mov
cmc
sub
sub
xchg
imul
mov
mov
jg
dec
jecxz
add
iret
sbb
pop
ja
cmp
jne
add
push
cmp
outsb
mov
lds
xor
add
or
add
xchg
roll
lahf
imul
lock
dec
mov
pop
lds
push
pop
and
add
test
repz
dec
ss
adc
add
pop
pushf
in
movsl
ret
adc
add
mov
add
mov
daa
pop
sub
subb
sbb
repnz
aaa
sahf
xor
stc
movsb
add
subl
xchg
rorb
subps
and
push
add
outsb
or
jl
mov
clc
inc
imul
sbb
push
jo
pmulhw
mov
iret
push
or
mov
add
negl
jo
jns
testb
and
xchg
call
add
adc
adc
jp
dec
xchg
in
je
pop
push
push
aam
pop
rep
mov
test
out
sbb
fisubrl
div
das
rcl
idiv
xchg
add
xchg
pop
dec
mov
into
int
inc
out
inc
jns
inc
pop
cmp
or
andb
scas
sahf
inc
aad
or
jae
pusha
daa
aam
sbb
pop
cli
cmp
negb
mov
rolb
jne
adcl
psubusb
mov
add
lods
pop
les
mov
jnp
sarl
imul
out
inc
push
repz
add
and
dec
cmp
addb
add
xchg
ficoml
dec
pop
add
pop
mov
add
cmp
push
cltd
nop
andb
sbb
call
out
sbb
fiaddl
dec
test
mov
pop
dec
add
movb
call
and
pop
pusha
add
out
out
xor
xor
add
sahf
mov
int3
push
dec
inc
hlt
and
outsl
ja
xchg
xor
xchg
stos
sub
popa
xlat
insl
sbb
stos
fdiv
pop
int
jo
jecxz
or
dec
sbb
popa
mov
or
sbb
lods
inc
inc
imul
push
add
pushf
add
pop
inc
movsb
inc
xchg
roll
dec
xchg
push
jle
adc
jge
add
cld
add
add
push
mov
orb
int3
pop
int
imull
mov
sti
mov
push
and
adc
faddl
out
mov
inc
jns
add
add
addb
test
inc
mov
lods
dec
inc
or
lahf
add
lret
fimull
push
aaa
mov
xor
cmpsb
sahf
shll
add
inc
int
fistps
out
shl
divl
add
stos
fistl
rcll
das
adc
pusha
lds
jo
mov
xchg
clc
cmpsl
aam
cmpsb
es
insl
hlt
outsb
add
adc
mov
rolb
rolb
cmc
sbb
repnz
xchg
in
sub
add
xchg
sub
and
fidivs
adc
push
flds
cmp
ret
outsl
add
scas
jns
add
sbb
arpl
push
test
or
xchg
mov
enter
imul
cmp
in
push
out
sti
jns
cli
fnsave
push
movaps
sbb
movsl
mov
dec
test
sbb
jg
dec
xchg
jge
add
sub
mov
arpl
test
mov
sbb
adc
push
add
arpl
aas
mov
add
mov
imul
addb
movsl
cltd
push
lea
jns
lock
ss
add
scas
call
push
test
mov
fidivrs
cwtl
je
pop
sarb
sti
loopne
jg
inc
sbb
xor
push
fsubrs
sub
push
loop
and
cmp
dec
add
inc
jae
xchg
pop
xchg
es
cmpsl
sbb
in
rolb
or
fstps
add
sbb
sti
dec
cltd
add
add
adc
pop
cwtl
cli
add
out
pop
int
add
add
mov
push
add
mov
rolb
les
insl
jb
add
mov
out
add
mov
sbb
xchg
xor
xchg
lods
cmp
gs
or
add
aas
add
lock
mov
loopne
add
cmp
inc
xlat
ds
jecxz
add
lea
add
jne
ret
add
mov
ja
cwtl
movsb
push
into
jle
and
sti
les
sbb
mov
add
cmc
push
push
pop
pop
into
jg
stc
std
mov
add
mov
add
movsl
scas
dec
repz
and
push
in
add
sub
cwtl
divb
in
mov
push
sti
sarb
pusha
call
add
movsl
mov
add
jecxz
aad
int
loope
jbe
dec
pop
out
mov
lret
mulb
push
hlt
fsub
call
in
and
icebp
push
sbb
xorb
add
jae
or
add
mov
cmp
add
iret
shll
out
into
add
push
repnz
mov
add
fs
add
mov
jo
add
roll
add
cmp
int3
fidivrl
add
cmp
cmc
rolb
mov
fcoml
inc
push
inc
xorl
movsl
and
ljmp
mov
aas
aas
mov
pop
repnz
add
mov
sarb
add
stos
aad
mov
shlb
incl
sbb
pushf
fidivrl
in
add
int3
idivl
add
push
xor
add
aam
pop
mov
ret
in
stos
dec
loopne
sbb
icebp
ds
pop
mov
or
push
mov
sbb
mov
rcr
je
jne
aaa
fisttps
adcl
add
adc
gs
pop
shll
push
ds
add
sbb
push
xchg
add
inc
push
imul
mov
jecxz
cmp
or
or
testl
cwtl
xchg
mov
mov
lcall
jnp
mov
pop
pop
xlat
ret
sbb
sbb
cld
lods
add
inc
imul
insl
jecxz
test
or
inc
inc
mov
sub
mov
cmpb
test
mulb
dec
imul
fiadds
addps
jns
fs
xor
fcoml
test
and
push
mov
dec
jle
add
movsb
and
pop
adc
mov
mov
pop
and
rcl
sar
mov
dec
jno
loopne
add
cli
mov
xlat
repz
xorb
push
cwtl
jb
pushw
ret
mov
xchg
dec
pop
mov
pop
loop
in
push
dec
jb
pop
xchg
xor
adc
add
addr16
iret
xlat
mov
mov
fstps
addb
pop
andb
and
add
mov
daa
scas
enter
mov
test
bnd
lcall
or
add
bnd
push
pop
sti
or
mov
in
pop
cmp
xor
stos
ret
push
ds
cs
mov
cmpsb
fmuls
add
in
loop
add
dec
cmp
dec
leave
pop
js
lock
sbb
call
cli
test
sub
adc
dec
stos
sbb
cmovs
in
jne
jbe
push
lea
xor
pop
jge
mov
test
cmp
mov
pop
add
icebp
xchg
xchg
adc
pop
les
je
mov
popa
scas
hlt
loop
sti
ds
push
add
push
pushf
inc
push
addb
mov
pop
add
das
or
cmpl
mov
inc
push
jno
sbb
out
test
inc
jmp
mov
insb
lods
es
mov
popf
or
pop
cmc
dec
shlb
mul
lods
jle
add
sbb
dec
jmp
nop
daa
or
cmp
rorb
aas
adc
push
popf
test
adc
sbbb
jb
add
xor
push
fstp
enter
lods
mov
popf
shlb
inc
add
xchg
jmp
xor
shlb
mov
push
test
sub
add
cli
push
jbe
popf
aaa
or
adc
rcrl
inc
mov
pop
or
add
movsl
in
in
add
aaa
mov
bound
nop
ret
and
adc
sub
push
lds
shlb
push
shll
andb
xorb
push
mov
jecxz
cmpsl
shll
insb
xchg
ret
rolb
loopne
adc
push
mov
mov
or
add
aam
movsl
add
jbe
push
mov
or
xchg
in
mov
pop
fwait
mov
lret
jle
dec
push
lock
jno
pop
mov
add
ror
mov
jns
and
dec
jl
add
loope
add
mov
add
insl
mov
sbb
and
adc
xchg
push
gs
pop
jns
out
hlt
add
pop
jno
repnz
enter
pop
xchg
int3
or
in
mov
test
fnclex
testl
adc
push
cmp
ljmp
loope
sbb
mov
bound
nop
in
lds
push
mov
call
sbb
je
cmp
movsl
add
imul
mov
aaa
inc
xor
cltd
add
outsl
xchg
loop
pop
shr
mov
xchg
into
mov
inc
mov
or
mov
push
ret
inc
incl
clc
lahf
mov
or
inc
jo
out
iret
xchg
les
loop
mov
mov
insl
or
sti
in
add
ret
insb
cmp
mov
dec
sub
jns
and
adcl
add
shll
and
pop
cwtl
add
jbe
mov
or
sbb
dec
dec
mov
in
add
inc
rolb
lock
dec
pop
or
add
loopne
repz
fsubrs
mov
add
enter
inc
repnz
hlt
jne
imul
jnp
mov
xlat
mov
testb
popf
pop
rcr
add
xchg
int
push
or
enter
movsb
or
test
sahf
cwtl
in
inc
outsl
push
push
jle
jg
add
fdivrl
pop
repz
inc
add
lods
idivb
sahf
cmpsb
sub
fiadds
adc
mov
insl
cmp
outsb
sub
shll
cmova
loop
inc
add
push
loopne,pn
hlt
add
test
in
xor
add
outsb
mov
cmp
push
jo
test
add
mov
add
mov
adc
fidivrl
add
sub
cwtl
andb
cmp
addl
add
arpl
push
add
popa
xor
addr16
movsb
add
fidivs
sbb
rol
inc
aad
insb
xchg
inc
mov
hlt
add
sbb
xchg
faddl
mov
or
push
sahf
out
and
dec
shlb
test
add
pop
xchg
or
fnsave
negl
sbb
add
cwtl
add
shrl
mov
cmpsl
mov
repnz
js
cmp
pop
inc
pushf
pop
add
stos
sarb
dec
lock
add
xor
jo
mov
dec
jns
cmp
sub
add
mov
or
cmp
std
pop
sub
mov
mov
add
movsb
cld
cltd
or
shll
jge
xor
gs
rolb
imul
adc
ficompl
repz
jno
pop
dec
xor
pop
pop
mov
mov
cmpb
pop
pop
mov
dec
cmp
add
aam
mov
xchg
orl
jge
pusha
mov
outsl
lahf
cmp
add
mov
jecxz
fisttpll
out
mov
dec
add
lea
mov
add
inc
leave
imull
and
jmp
shrb
jg
mov
outsl
or
or
sbb
mov
and
cmp
push
xchg
out
mov
outsb
xchg
xor
add
mov
sbb
push
mov
add
push
push
mov
jmp
xor
je,pn
cltd
cmp
mov
jns
add
into
cld
push
mov
lods
call
fld
lea
lock
add
sub
ret
or
pop
fwait
cmp
insb
mov
cmp
rorb
or
add
sub
xchg
mov
mov
inc
aam
mov
in
ss
loopne
lods
sbb
add
sbb
sarb
pop
pop
icebp
bnd
rclb
pop
or
push
sbb
js
add
cmove
jae
call
push
fs
pushf
dec
pop
mov
ret
aaa
int
jno
add
sub
gs
mov
jmp
add
in
arpl
bnd
push
cmp
xchg
xorb
mov
mov
or
aam
add
iret
cmc
xchg
cwtl
mov
add
adcl
fimuls
cmpsb
mov
cs
inc
add
fwait
in
inc
or
lods
or
or
addb
lret
add
push
add
fmulp
and
mov
loope
sub
cmp
inc
imul
pop
mov
push
add
push
fidivrs
or
sahf
push
add
mov
inc
jle
add
jp
ja
cmp
xadd
lret
pusha
mov
scas
add
cmp
jle
sbb
repnz
stos
fbstp
dec
mov
mov
bound
push
mov
cs
pusha
lret
push
pop
mov
jns
add
pop
mov
xchg
cli
cmp
out
or
out
push
inc
push
add
dec
add
dec
gs
cmp
push
rclb
lods
mov
push
mov
add
add
xchg
and
mov
inc
push
push
xchg
lods
pop
jp
imul
daa
test
sub
sbb
lods
adcl
sub
mov
inc
shl
xor
xchg
add
push
in
sbb
pop
out
add
pusha
je
popa
aas
add
repz
cmpb
push
aam
add
jmp
mov
adc
xchg
jo
add
or
xlat
mov
mov
xchg
xor
add
ret
dec
std
push
add
pop
mov
in
mov
roll
jge
and
into
mov
popa
add
sahf
add
inc
hlt
cmp
jp
add
or
mov
cmp
aas
popf
test
test
cmp
jnp
add
push
ret
adc
push
addb
mov
mov
sbb
cmpsl
std
in
orl
lahf
sub
call
and
push
das
leave
sbb
pop
mov
add
mov
dec
sbb
fucomp
inc
pusha
jle
lret
pop
inc
lds
mov
xchg
dec
subb
mov
xchg
mov
divb
mov
mov
subl
inc
je
pop
push
out
xor
cmc
xchg
and
into
gs
mov
or
xor
rclb
movsl
xlat
pusha
mov
mov
or
call
mov
push
cli
cmpsb
cltd
ret
std
andb
ljmp
and
jae
nop
fbld
mov
dec
cmpl
in
sub
cmp
dec
sub
rcrl
push
cmc
sbb
faddl
mull
js
loop
and
call
enter
adc
fiaddl
gs
and
dec
cmp
and
scas
add
loopne
mov
scas
add
mov
or
add
cmp
addr16
add
mov
pop
add
or
push
scas
pusha
cmp
lea
or
dec
cwtl
push
push
sub
xor
leave
add
fmuls
xchg
or
fcompl
arpl
out
add
sub
jbe
mov
repnz
loop
mov
hlt
add
jp
into
ljmp
push
insb
pop
lea
lret
jp
pop
cmpsb
mov
pop
rolb
adc
lcall
call
test
jne
mov
sbb
mov
sbb
ss
les
bound
add
nop
sbb
mov
add
ret
jns
dec
add
push
xor
and
add
data16
mov
xor
adc
lcall
cltd
add
and
sub
outsl
dec
loop
punpcklwd
enter
adc
jge
iret
add
loope
mov
cmp
mov
pusha
jl
adc
fsub
insb
bound
mov
add
dec
lahf
mov
inc
mov
jecxz
rcrb
mov
in
cltd
pop
subb
cmp
scas
adc
push
dec
sbb
stos
add
sbb
sti
mov
fcoms
and
or
jp
lahf
push
cmp
jecxz
mov
aam
flds
jae
scas
test
xor
daa
clc
ss
xchg
add
or
or
out
in
add
outsl
mov
mov
jno
and
push
cmp
mov
leave
call
lods
mul
insb
into
incb
sar
mov
inc
in
addl
inc
cs
cmp
adc
pop
movsb
dec
fiaddl
mov
nop
and
xchg
xor
pop
dec
leave
add
sub
dec
add
add
xchg
add
mov
insb
pop
add
aas
sbb
rorb
into
jns
js
cmp
sti
gs
dec
xchg
push
in
addb
mov
add
out
pop
jl
add
mov
mov
cmp
test
pusha
test
cwtl
loopne
mov
dec
push
clc
add
ljmp
mov
push
push
push
shrb
fadd
xchg
and
jne
pusha
sub
add
ja
add
sbb
repnz
mov
dec
icebp
hlt
push
stos
int3
pop
push
add
inc
ret
inc
mov
add
ljmp
clc
adc
pop
cmpsb
stos
lahf
fidivl
cs
or
sub
cld
aas
ret
in
mov
push
pop
jp
aas
xchg
xchg
add
inc
mov
cmp
cmpsb
bound
in
aam
imull
shlb
xor
lret
mov
inc
add
adc
mov
les
inc
adc
filds
andl
test
add
cmp
mov
cmp
adc
add
cli
ja
aad
outsl
jae
add
or
add
cmp
scas
xor
ja
lea
xchg
rcrb
adc
pop
xor
nop
loop
js
shrb
insl
add
push
dec
test
stos
mov
push
js
add
mov
ja
cmp
mov
jecxz
xchg
adcb
test
xchg
xor
add
jo
ret
push
inc
adc
inc
ja
loopne
jp
pop
and
mov
imul
or
jns
adc
sarb
bnd
cli
mov
roll
je
xor
test
dec
divb
andb
scas
mov
out
repz
and
add
xor
jne
and
sub
xor
into
pop
addb
push
add
pop
outsl
pop
adc
mov
jno
or
pushf
push
outsb
add
dec
cmp
push
add
loope
add
mov
push
hlt
sbb
add
lds
jns
aad
sbb
sub
out
mov
xchg
fwait
xor
inc
rclb
cmpxchg
imul
push
mov
aas
adc
cltd
dec
aaa
adc
xor
xchg
repz
jmp
in
push
push
sti
jmp
push
mov
stos
ret
push
mov
popa
jae
add
scas
mov
jecxz
lcall
mov
test
insb
cmp
pop
push
shl
rolb
insb
stc
adc
call
ret
and
incb
jbe
mov
stos
or
arpl
lods
notl
movsl
rol
lds
jmp
or
adc
call
sbb
ss
push
mov
sbb
cwtl
fdivr
jmp
and
pop
xchg
xchg
push
rcl
add
movsb
push
repnz
cmpsl
in
adc
add
add
jb
sub
pop
jmp
push
sbbb
lods
xchg
ja
add
or
inc
add
pop
adc
add
aas
addr16
aad
add
scas
loopne
xor
popa
mov
add
mov
in
cmp
add
cs
xor
adcl
cmp
inc
pop
cmp
add
imul
mov
adc
cmpsb
pop
xchg
dec
fsubs
mov
add
std
scas
xor
jnp
add
stc
ja
inc
mov
ljmp
fadds
fs
sbb
add
movsl
cmp
lea
dec
and
mov
stos
push
rcl
andl
mov
popa
mov
pop
xorl
loopne
add
fs
into
push
outsl
lock
cmp
add
insb
popf
and
add
inc
and
add
dec
adc
arpl
cmp
push
int
inc
ret
in
inc
pusha
std
int3
les
leave
sub
mov
xor
pop
lods
xor
shll
push
pop
add
cmp
mov
or
lds
sbb
cld
mov
or
pusha
les
add
fistpl
jne
cmp
mov
inc
push
arpl
mov
dec
gs
ret
in
mov
add
aam
pop
mov
cmp
call
in
fwait
jb
fdivr
lock
add
das
push
call
leave
or
insl
ja
mov
dec
ret
push
int3
setne
adc
jecxz
cmp
std
jle
push
add
cmp
rolb
lea
sbb
add
hlt
popa
loope
nop
sahf
pop
push
inc
into
loopne
add
add
mov
call
add
mov
rclb
xchg
loop
pusha
mov
scas
xor
push
push
test
push
es
cmp
ja
adc
stc
xchg
ret
fldl
push
dec
lds
push
test
push
add
dec
cld
and
add
jne
push
jl
inc
xor
mov
stc
inc
add
outsl
add
rcrl
add
fld
add
and
addb
pop
or
arpl
dec
add
aam
clc
add
xor
test
jno
jns
mov
addb
shl
leave
js
cwtl
add
push
dec
xor
subb
xchg
ds
jbe
or
push
xor
mov
in
mov
test
sub
rcll
inc
mulb
or
xchg
add
scas
adc
into
dec
add
dec
push
xchg
add
pushf
repz
lret
cmpsb
inc
lods
sub
lods
jg
jo
mov
clc
enter
mov
mov
push
out
dec
push
mov
cmp
test
in
mov
mov
jmp
sub
sbb
shl
in
add
scas
push
lret
jb
mov
xor
int3
repz
add
mov
shl
xchg
ja
push
mov
andl
lds
mov
lods
sbb
aam
popf
push
sbb
enter
mov
iret
out
fdivr
test
cmp
cmpsl
add
aaa
lods
or
cmp
ret
cmc
lds
pop
pop
les
int
test
jecxz
add
push
or
pop
xor
inc
lret
pop
in
mov
xchg
push
nop
add
mov
pusha
ljmp
add
inc
popa
sbb
mov
jnp
rolb
xor
or
mov
dec
xchg
enter
push
aam
add
in
sbb
mov
xchg
fsubrs
fisubrs
loopne
or
sahf
testl
push
sti
sbb
push
add
in
fstp
imul
mov
add
mov
cmp
inc
int3
jbe
adc
insl
imul
pop
nop
sub
cs
mov
pop
xor
rorl
inc
add
leave
loop
mov
cs
jle
loope
loopne
fildl
into
out
pop
out
push
jns
mov
aad
dec
xor
daa
add
jno
pop
pop
jb
jl
repz
call
push
stos
iret
push
out
jno
and
dec
lods
jp
lret
add
out
sbb
pop
inc
or
pcmpgtd
ja
add
dec
ljmp
sub
mov
inc
or
add
into
mov
adc
pop
and
cmp
sub
in
push
imul
in
add
cwtl
es
push
andb
aaa
add
clc
or
add
sub
cmp
jnp
pusha
mov
push
sub
sbb
inc
pop
jle
xchg
mov
mov
scas
add
mov
jle
jne
sbb
inc
movsl
or
cmpb
add
fs
or
fbld
fst
hlt
andb
outsl
mov
mov
xor
decb
sbb
adc
stc
xor
mov
add
cmp
mov
push
out
push
add
or
mov
sub
scas
jecxz
cmc
push
fs
movb
mov
dec
pop
or
ss
xor
xor
add
add
jg
and
mov
add
xor
add
out
mov
jp
fwait
roll
ja
lret
push
js
adc
or
add
jb
add
push
cmp
inc
call
in
pop
add
dec
test
cmp
cli
nop
add
inc
sti
rorb
rolb
popf
add
mov
lahf
lods
pop
mov
mov
fwait
outsl
xor
push
hlt
jp
inc
aam
inc
add
aas
xchg
xor
ljmp
loop
in
cvtps2pi
xchg
repnz
push
sbb
xor
mov
xor
sub
out
mov
mov
mov
in
fldcw
xchg
or
fisttpll
adc
sbb
out
fsubs
imul
pusha
inc
bndstx
enter
cmpsb
aas
inc
add
orb
nop
adc
pusha
sub
mov
jnp,pn
xchg
les
or
ret
dec
sbb
sbb
and
xchg
leave
pop
mov
aas
fcomi
andb
pop
rolb
mov
mov
loop
imul
faddl
jbe
jge
call
lcall
mov
in
jae
add
and
cld
add
mov
jns
mov
mov
shlb
dec
pop
fdivp
add
out
mov
mov
jnp
sub
dec
scas
add
jno
aam
test
movsl
ret
or
das
cmpl
xor
inc
xchg
push
fnsave
call
out
ljmp
push
les
gs
jbe
xchg
sub
call
lods
scas
clc
add
insl
aad
add
pop
fnstenv
add
or
xchg
enter
and
outsb
pusha
cmp
sahf
cmp
in
mov
xor
push
aam
lds
push
add
clc
cwtl
lret
push
mov
or
shrb
cwtl
scas
cmp
sub
push
jae
cltd
dec
out
add
inc
ret
adc
cmpsb
add
js
aas
clc
mov
xlat
fsubrl
xchg
fadds
shrl
in
nop
jge
inc
add
dec
loop
insl
or
insb
ja
notl
fsubr
inc
xchg
loopne
shlb
jbe
lcall
ss
mov
add
push
cwtl
xchg
cwtl
movl
dec
mov
scas
sbbl
lods
sub
add
adc
mov
inc
orb
gs
dec
mov
sbb
mov
push
mov
pop
xor
lahf
jge
lock
mov
and
pop
sar
or
cmp
mov
cmp
aas
xchg
mov
adc
add
adc
scas
test
pusha
dec
jne
pop
pop
jns
out
bound
leave
andl
xor
popf
fnsave
jb
push
scas
sbb
pop
shrl
sub
ret
sarb
dec
movsb
and
cmp
data16
ja
add
add
outsb
jo
test
cs
inc
sbb
lock
ja
cmp
ret
aam
aaa
jecxz
cmpsl
nop
push
xor
div
mov
and
mov
ret
mov
add
bound
adc
stos
add
xor
add
add
and
lret
xchg
mov
push
pop
add
sbb
sub
push
sub
repz
in
add
xchg
repnz
leave
lret
sbb
sbb
mov
xchg
jne
nop
js
mov
aaa
mov
sahf
xchg
lret
clc
add
mov
lcall
adc
insb
add
xlat
dec
pusha
fldl
dec
dec
iret
push
sub
cmc
xor
add
ja
hlt
adcb
or
enter
es
std
cmpsl
jnp
daa
fiaddl
fadd
aaa
fwait
jb
shlb
add
lret
jp
mov
mov
aam
dec
xchg
aas
push
data16
addr16
jl
jae
adc
in
pop
lock
mov
xchg
xchg
inc
fimuls
pop
add
jae
aaa
fmul
rolb
test
ficomps
push
jp
push
cmpsb
filds
push
push
xor
ret
adc
loope
jne
xor
data16
add
movsl
scas
adc
imulb
call
lcall
add
les
scas
call
cmc
inc
add
sbb
lods
add
jl
inc
bound
adc
aad
cmp
mov
gs
mov
in
rorl
mov
and
fcoml
imul
dec
cmc
mov
adc
mov
stos
xchg
aaa
mov
call
jns
int
mov
roll
fcoms
cmp
xor
mov
cli
push
pop
out
push
ret
jb
call
sub
std
loopne
test
pop
mov
loopne
pop
jnp
inc
add
dec
push
mull
stc
pushf
iret
push
std
lods
dec
add
sbb
mov
cwtl
loope
pop
pop
ss
or
cmc
fs
scas
pop
inc
add
mov
js
inc
shlb
sarl
pushl
adcb
jne
lcall
out
les
push
int3
jb
aad
rolb
sub
or
jnp
add
dec
mov
sbb
push
mov
add
fcmovbe
sub
jp
jg
or
add
lock
das
add
inc
jl
xchg
sti
stos
test
and
cmp
mov
std
push
ja
sbb
sahf
repz
incl
clc
test
jno
into
mov
sub
cmpsb
jmp
mov
mov
sub
and
cli
mov
pop
ret
sub
rolb
test
or
packuswb
lea
cmp
sbb
pop
movsb
xor
gs
scas
in
sbb
dec
in
jl
sub
cmpsb
jns
push
popa
push
andb
dec
add
xchg
ret
add
rdtsc
pop
mov
and
xchg
filds
xchg
mov
scas
imul
sbb
xchg
ret
dec
add
sub
jbe
add
xchg
cmp
ss
push
add
jmp
adc
add
push
fisubs
jbe
mov
addr16
les
dec
scas
cmp
incl
ret
gs
loopne
in
stos
sub
and
mov
outsl
mov
sti
mov
fdiv
mov
incl
xchg
and
pop
addr16
pop
xchg
or
mov
mov
add
mov
or
inc
add
iret
xchg
mov
test
mov
xchg
pop
mov
xchg
inc
mov
nop
nop
push
cmp
popf
adc
sbb
push
lcall
imul
inc
or
aas
sub
mov
pusha
mov
pop
je
icebp
andb
scas
add
push
cld
pop
bound
push
add
sub
aaa
cmp
icebp
add
xchg
push
jb
sar
lret
pop
add
call
aas
daa
push
orb
sahf
inc
outsl
sub
xor
fsubl
sbb
iret
sub
push
imul
jmp
add
jns
mov
shl
sub
add
mov
cs
in
mov
push
popa
shr
int
dec
lahf
add
repz
add
out
hlt
sub
rcrb
mov
dec
iret
in
add
xor
push
push
mov
aam
and
add
sbb
lods
jmp
add
fs
inc
mov
loopne
xorl
add
xchg
mov
popf
push
mov
loope
cltd
test
sarl
jecxz
add
arpl
cmp
orb
sub
dec
outsl
scas
pop
addr16
adc
push
mov
loopne
mov
push
pop
cmpsb
test
pop
aas
jb
xchg
lcall
and
pop
add
popa
mov
rcl
mov
sbb
out
sbb
stc
add
pop
imul
inc
aaa
jo
nop
xor
mov
dec
out
mov
push
rorl
cltd
das
push
push
inc
mov
xchg
clc
repnz
ret
pop
push
mov
lea
inc
lods
pushf
lret
mov
addr16
xchg
cmp
pop
test
clc
std
fs
add
inc
push
pop
outsb
mov
lods
add
xchg
mov
mov
add
xlat
call
mov
call
pop
mov
lret
sbb
cmc
shrl
test
divb
adc
jno
push
dec
loope
sbb
cmp
jmp
cmpsl
add
roll
xor
jecxz
mov
add
popf
notb
or
adc
push
dec
cli
xchg
mov
gs
add
pop
inc
jmp
or
pushf
mov
test
cmpsb
jno
sbb
subb
movb
add
repnz
std
andb
mov
add
orl
dec
jle
lfs
movsb
adc
insb
push
fcomps
iret
popf
xor
sbbb
xor
adc
jae
add
mov
xchg
nop
sub
fs
leave
inc
dec
or
mov
mov
sub
add
dec
rcr
add
xchg
xor
stc
clc
add
out
lock
adc
pop
xor
shl
add
or
shl
sbb
insb
jne
incl
inc
loope
pop
fistpll
rol
fstpt
fldcw
add
testl
xchg
mov
out
int3
dec
add
lock
fimuls
cmp
and
adc
push
xor
leave
add
loopne
ret
xor
or
popa
jb
in
repz
mov
imul
addb
sti
mov
pop
inc
enter
je
add
mov
mov
leave
pushf
cmp
fidivl
fsubs
insb
ss
insl
lock
add
aaa
outsb
add
dec
fwait
xchg
loop
jle
pop
mov
add
cli
sbb
add
fcompl
sub
int3
push
pop
add
and
test
add
es
add
int
pop
adc
aaa
lea
jg
add
fcoml
mov
mov
stos
or
cs
jae
xchg
add
rcl
xor
nop
cmc
cmp
add
sbb
xchg
add
mov
out
or
mov
jns
pop
pusha
push
add
xchg
out
adc
mov
adc
jmp
sbb
cmpsb
add
sub
sti
lret
loop
xchg
push
shlb
movb
add
dec
jl
xor
fistl
jmp
push
add
add
dec
fistpll
sub
sbb
rcrb
mov
fstl
xchg
mov
pusha
dec
test
movsb
jmp
or
or
pop
jp
mov
add
mov
shrl
daa
add
add
lret
xchg
mov
loope
mov
subps
pop
xlat
push
adc
dec
addr16
rolb
pushf
push
dec
sbb
es
xchg
sub
int
pop
add
jg
js
cld
lock
mov
jecxz
fisubs
fidivrl
adc
push
andl
jmp
jne
rcrl
out
xchg
imul
pop
test
inc
into
sub
arpl
add
adc
xor
mov
icebp
setg
movsl
rcrb
stos
in
pop
popa
cmpsl
add
add
jle
xor
push
sub
and
lea
add
lock
sbb
cmp
lahf
je
dec
leave
aam
pop
shll
ja
push
pop
mov
mov
test
je
daa
mov
mov
add
scas
ss
and
sbb
add
stc
sbb
clc
xchg
mov
mov
sub
lret
roll
add
and
stc
sahf
xchg
xchg
add
lods
or
out
jae
cwtl
sti
add
mov
std
add
les
subb
mov
pop
arpl
cs
int3
inc
cld
lea
sbb
xchg
sub
push
sbb
xchg
out
rcrl
ds
outsb
cmpsb
xchg
ror
jl
mov
mov
bound
in
loope
add
xlat
decb
arpl
pop
xor
jb
pop
sub
lock
add
aas
push
add
mov
push
add
movsl
mov
loop
add
shlb
or
inc
test
push
mov
jmp
scas
mov
negb
add
adc
incl
xchg
shrl
mov
add
xor
xchg
or
push
fidivrl
nop
adc
aas
cmpsb
call
add
repnz
add
fadds
push
jg
aas
lock
hlt
add
pop
or
jnp
add
inc
pop
lret
pop
sub
test
fcomps
push
push
add
cld
and
cmp
pushf
xchg
out
push
add
mov
adc
insl
dec
add
cltd
and
aaa
test
int
cmpb
push
sbb
and
scas
data16
push
rclb
sub
incb
rorb
push
pop
jno
push
push
iret
lcall
repnz
cmp
add
sub
mov
add
stos
adc
adc
and
push
js
pushf
iret
adc
add
xchg
sub
xchg
jge
inc
bound
xchg
pusha
insb
aam
cwtl
mov
add
push
popa
cmp
subl
jae
mov
xor
in
lods
push
imul
cmc
inc
push
test
add
mov
push
insb
mov
push
adcb
ss
mov
push
jge
cmp
xor
xchg
pop
mov
mov
ds
pop
mov
push
inc
test
add
adc
mov
or
mov
test
mov
das
xchg
push
pop
leave
js
push
sub
repnz
fimuls
lock
sub
je
push
jmp
adc
js
in
roll
verw
arpl
sbb
sarb
sub
and
cltd
push
mov
iret
pop
jmp
inc
inc
sahf
int
add
dec
jb
pusha
adc
pusha
add
mov
adc
imul
mov
mov
add
mov
std
mov
repz
jp
test
scas
jb
add
or
mov
out
mov
xor
sbb
fdivl
stos
mul
cld
shrl
ja
adc
dec
cli
pop
inc
in
insl
add
add
add
xchg
ds
and
cmp
inc
mov
mov
data16
or
scas
add
lcall
add
bound
testl
push
push
lods
jmp
scas
add
fisttps
loopne
pop
adc
sub
loopne
js
jo
popf
pop
loop
ret
rorb
mov
push
cld
stos
xchg
fldl
ret
or
mov
mov
jl
cmp
xchg
call
push
inc
pushf
or
inc
adc
pop
push
push
sti
fsubrs
fimull
xchg
inc
lea
mov
aad
rorl
inc
fmul
jnp
movsb
stos
shl
lds
dec
nop
mov
add
cmp
faddp
pushf
je
add
dec
loope
cmp
xor
imul
sbb
adc
js
imul
jg
fnstcw
and
mov
lods
jecxz
add
arpl
add
fwait
incb
mov
fnsave
loopne
ljmp
aam
faddl
into
xlat
jno
and
movsl
sub
and
add
mov
and
pop
ljmp
pop
dec
push
out
jnp
and
add
dec
bound
sbb
mov
call
add
or
jl
mov
xor
out
lock
mov
iret
inc
cmp
pop
add
jbe
ret
pusha
mov
call
dec
adc
roll
adc
arpl
mov
jnp
and
movsb
fistpll
or
call
bound
icebp
cld
inc
pop
or
loopne
pop
inc
xor
scas
rolb
pop
and
mov
push
jae
inc
hlt
xor
xor
push
dec
adc
sub
add
fsts
ret
lahf
jo
insl
add
cld
inc
outsl
inc
aad
add
dec
sbb
mov
repz
call
test
sub
cmp
cmp
push
or
cmp
mov
adc
xchg
jp
mov
jecxz
dec
push
jo
ret
jae
add
je
jge
loopne
xor
push
fcompl
inc
in
inc
push
es
orb
mov
inc
xor
cmp
and
and
mov
mov
repz
in
cmp
cmp
xlat
add
and
and
mov
es
icebp
stos
add
pop
push
push
popf
call
jl
pusha
clc
add
and
negl
xorl
iret
fcmovnbe
inc
xchg
es
mov
xchg
xchg
bound
inc
fwait
repnz
sbb
adc
out
mov
hlt
add
cmpsb
mov
sub
js
scas
stc
cmpsb
mov
xor
out
pop
xchg
bound
and
lds
testb
mov
or
xchg
mov
leave
jne
inc
mov
jp
out
icebp
inc
loopne
add
jg
inc
add
in
add
lret
divb
fwait
test
sub
mov
cwtl
rolb
mov
aad
add
fdivs
xchg
xlat
inc
hlt
push
call
negb
sub
adc
outsl
xor
jmp
xor
xor
mov
aaa
fldcw
fcompl
imul
out
mov
xchg
add
jnp
in
push
in
leave
add
sbb
inc
cmpsl
jo
es
jg
adcb
add
call
mov
dec
xchg
add
add
mov
lock
jge
loope
adc
cwtl
aas
push
scas
mov
jecxz
and
es
pop
mov
pusha
xchg
adc
mov
fidivs
into
and
ffree
imul
fucom
ficompl
lods
shld
sub
js
pop
fmull
add
cld
rcl
out
cmpsl
add
leave
sbb
add
or
add
sub
add
adc
add
dec
fistpl
add
pop
pop
add
out
fwait
dec
add
sbb
cmp
sarb
movsb
cmp
or
sti
lahf
shrb
andb
inc
add
daa
sub
in
adc
jecxz
lods
dec
sahf
inc
xor
mov
lds
dec
repnz
mov
mov
fucompp
addl
or
cld
fidivl
push
leave
out
jns
inc
out
pop
icebp
push
sbb
mov
std
dec
js
idivl
jae
add
out
arpl
lahf
popf
pusha
adc
push
pop
mov
xor
jg
xor
inc
dec
adc
mov
in
xchg
mov
sub
fwait
out
sub
mov
mov
xchg
out
mov
mov
mov
push
xchg
and
pusha
iret
cmpb
repz
add
mull
inc
pusha
xchg
pop
bt
fxch
or
push
or
sbb
push
add
jle
cli
and
stos
mov
sarl
jae
mov
fstps
scas
add
rcrb
dec
jecxz
lock
movsb
xor
sbb
test
loope
or
add
popa
arpl
add
loop
mov
flds
repz
mov
into
xor
ret
add
loop
jns
test
pusha
dec
push
div
add
lcall
rclb
data16
movsb
xor
sub
es
inc
pop
aas
sbbb
inc
out
mov
jb
stos
push
sbb
scas
in
pop
add
loopne
mov
cli
inc
arpl
sub
xor
mov
xchg
cmpxchg
inc
add
add
lock
add
push
cmp
divl
cmpl
cmpsb
loopne
add
adc
test
in
xchg
adc
add
mov
leave
fldl
xor
sub
imul
aam
push
and
rorb
xchg
add
bound
adc
out
push
dec
clc
sahf
jle
das
dec
fdivr
inc
adc
inc
add
gs
cmp
mov
lods
outsb
stos
leave
sub
pop
data16
or
xor
iret
pop
movsbl
add
in
dec
mov
add
mov
xor
dec
add
cmp
pop
sahf
mov
cmp
std
or
mov
adc
push
pusha
inc
fdivrl
mov
outsl
hlt
in
lahf
iret
call
and
sarl
sbb
inc
popf
add
xchg
fbstp
cmpb
xor
mov
fwait
adc
xlat
dec
rolb
cmp
push
jno
mov
dec
out
pop
xchg
add
dec
testb
in
inc
push
adc
xchg
aam
mov
xor
sarl
and
jmp
icebp
or
or
shl
add
lods
out
scas
push
ret
loopne
jl
repnz
rolb
out
or
or
loope
out
cwtl
dec
sub
add
dec
clc
test
clc
add
push
sbb
dec
sbb
and
mov
scas
mov
sbb
pop
mov
je
add
sub
cmp
ror
mov
add
mov
dec
pop
cmp
arpl
add
dec
mov
aam
dec
stos
cld
inc
add
popa
bound
imul
adc
sub
push
add
inc
dec
clc
jne
test
cmp
stos
fs
cli
add
stc
out
addb
sbb
inc
add
pop
data16
popf
imul
cwtl
xor
add
push
icebp
push
xchg
push
sub
jp
stc
push
cld
xor
inc
pushf
xchg
fs
pop
mov
nopl
andl
int
adc
enter
adc
sarl
push
mov
inc
iret
out
mov
push
aad
imul
mov
loopne
or
dec
jbe
testl
mov
arpl
pop
adc
or
pusha
lahf
sbb
mov
xor
rcll
xchg
repz
mov
mov
xorb
fcoml
test
add
jg
add
sub
and
das
push
mov
or
or
movsl
add
cmp
jg
scas
popa
sub
ret
orb
inc
rcpps
sub
out
mov
pushf
enter
push
add
sub
fs
mov
jge
and
add
jmp
pop
add
movsl
arpl
and
cld
sub
xor
add
mov
add
jae
adc
xlat
add
mov
cmp
lea
pop
jle
add
push
rolb
and
in
test
nop
testl
loopne
stos
inc
mov
inc
mov
jl
push
lds
adc
gs
or
fcoml
cli
add
xchg
and
outsb
jecxz
mov
in
adc
and
lods
mov
ja
or
cmc
add
mov
ja
push
or
pop
shlb
insb
addr16
add
pop
push
push
inc
sbb
bound
add
lcall
leave
pushf
add
pop
sub
inc
popa
add
mov
adc
add
and
aad
add
adc
xchg
cmp
loop
sbb
push
or
sub
mov
push
pop
clc
ds
movsb
pop
jae
dec
adc
add
add
int
int
aaa
fisubs
xchg
add
leave
mov
add
push
push
sbb
and
jmp
pop
add
in
mov
push
add
fdivs
inc
rclb
pop
shlb
sbb
jp
std
and
test
or
sahf
or
test
jo
push
and
lret
in
add
pusha
jno
cmp
push
push
mov
and
sete
dec
add
push
lret
stc
sub
add
sbb
dec
sbb
pop
adc
add
js
xor
incb
shlb
xchg
lock
test
add
push
call
or
js
xor
pop
shlb
adc
incl
push
add
cld
mov
push
and
addb
dec
out
std
shlb
jo
fwait
push
mov
cmp
dec
dec
and
push
jg
adc
enter
shlb
push
lds
pop
orb
pop
stc
addr16
into
cwtl
fiadds
or
inc
inc
adc
cmc
and
add
add
imul
mov
add
xor
lcall
dec
add
out
mov
add
mov
cwtl
add
sub
lahf
loope
lock
add
mov
test
xlat
ja
mov
push
dec
jb
jp
scas
cwtl
cmp
scas
pop
fwait
lock
and
and
sbbb
mov
or
cwtl
insb
fcomps
bound
orb
jnp
addl
les
jbe
and
xor
jl
pop
sbb
neg
jb
adcl
pop
in
cpuid
les
add
fptan
lock
or
add
mov
and
push
sub
dec
add
jae
xor
out
jo
add
cmp
mov
fld
add
dec
je
lret
xor
test
jns
sub
lcall
or
insl
pop
xor
mov
lsl
sti
aaa
or
jnp
pop
cli
testl
pop
fbld
and
sbb
jle
inc
out
inc
test
fsts
and
adc
sahf
das
pop
push
andb
mov
jbe
add
pop
push
bound
sub
aaa
outsb
jl
movsl
and
mov
mov
add
js
sub
add
outsl
mov
add
int3
cmpsb
dec
inc
cmp
dec
lret
sub
mov
or
mov
mov
stos
adc
adc
sub
sbb
adc
jge
inc
fdivrs
call
mov
adc
pushf
dec
sbb
outsl
loop
add
das
lods
push
outsb
and
loopne
push
shl
add
push
xor
sbbb
in
sub
pusha
xor
movsl
das
add
pop
lret
lods
cltd
push
pusha
jne
and
inc
fadds
cmpsl
jbe
sub
jp
cmpsb
aas
xchg
flds
mov
sub
jmp
sbb
xchg
add
cmpsb
in
sub
in
cmp
sub
shrb
cmp
sbb
mov
lods
pusha
shlb
pop
and
jo
mov
andb
or
imul
add
loop
mov
add
add
adc
js
cld
xchg
and
in
add
cmpsl
and
imul
fldl
cmp
out
cmp
clc
stc
xor
xor
xor
mov
pop
cs
push
jl
ja
stc
push
and
add
movsl
adc
cs
inc
cmp
dec
addb
mov
mov
test
clc
dec
jae
jo
scas
rorb
pop
cli
or
or
out
cwtl
add
ss
adc
arpl
add
xchg
xchg
sub
pop
xor
stos
je
mov
and
push
inc
xlat
repnz
add
cmpb
in
sub
scas
push
movl
add
cmpsl
aam
add
dec
sbb
or
mov
cmp
addl
adc
hlt
add
jne
pushf
add
inc
pop
pusha
sbb
cltd
push
xor
pop
or
dec
mov
fwait
les
scas
xor
cmp
jge
jno
lret
mov
ror
adc
and
test
dec
xor
frstor
enter
lds
inc
js
xor
aas
shl
adc
sub
sub
cmp
dec
in
xor
dec
fucomip
inc
dec
sbb
das
sbb
hlt
outsb
add
mov
cmp
add
lret
xchg
jmp
bound
pop
adc
inc
add
xorb
filds
jo
out
lods
pop
aas
and
adc
ss
sbb
inc
lcall
or
iret
shl
ds
lods
inc
add
dec
rol
or
mov
mov
psubsb
adc
leave
cmpsl
add
jae,pn
xchg
add
push
dec
adc
pushl
or
outsb
dec
push
inc
daa
sub
mov
lds
jl
stos
nop
pop
movsl
stc
popf
cli
test
popl
jge
mov
adc
add
enter
sarl
pusha
je
adc
add
inc
test
inc
mov
mov
bound
adc
pop
out
add
jmp
nop
sbb
or
push
dec
mov
add
cltd
jp
jns
sub
in
jl
mul
cmp
sbb
xor
adc
iret
inc
into
ret
push
push
push
mov
add
sbbl
mov
add
aam
dec
mov
adc
shl
shll
in
xlat
lret
cmpb
roll
cmpsl
in
inc
push
sbb
sbb
addb
mov
rcll
push
movsb
fsubs
fldt
sbb
stos
loope
jg
mov
out
add
inc
arpl
fcmovnbe
imul
sti
add
sbb
dec
jmp
test
dec
or
xor
popf
add
xor
add
add
pop
in
add
test
lds
or
mov
or
into
pop
dec
add
sbb
dec
cmc
add
push
xchg
cmp
mov
add
cmpsb
xchg
roll
mov
fdivr
adc
xchg
popa
scas
rorb
push
mov
or
inc
movsl
pop
sbb
and
inc
ror
xor
shlb
cmpsb
cmp
popa
push
sub
mov
adc
xor
jne
sub
mov
xor
sbb
add
or
in
lods
lds
es
adc
xchg
adc
stos
adc
mov
and
adc
das
add
popf
pusha
adc
or
in
add
aaa
mov
dec
sbb
int3
ljmp
sub
loop
pop
out
loope
pop
lock
lcall
xchg
sub
imul
push
fdivrs
loop
daa
sbb
xchg
fstpt
int3
out
inc
inc
inc
and
scas
sbb
xchg
pusha
push
sub
fnclex
imul
xor
scas
inc
clc
or
lock
das
bndstx
aad
and
gs
dec
cmp
lret
adc
mov
shlb
mov
sbb
movsb
sbb
jae
add
jns
int
repz
and
inc
add
lcall
add
xor
roll
stos
ja
pop
stc
pop
adc
mov
ret
fldt
shlb
cmp
sbb
lds
cs
push
sub
adc
sbb
mov
push
xor
je
jbe
cmp
push
and
repnz
in
or
sbb
push
out
add
sub
sbb
dec
mov
push
ss
xchg
pop
push
mov
data16
movsl
shlb
jle
loope
std
add
sub
dec
cmp
push
rdtsc
xor
inc
push
aad
iret
enter
mov
push
scas
ss
mov
pop
mov
sub
pop
sbb
in
xor
push
mov
leave
xor
pop
adc
lock
add
inc
out
enter
dec
add
xor
push
sub
das
rolb
shlb
mov
imul
lods
out
arpl
add
ret
or
sbb
in
sarl
cmp
sahf
mov
mov
adc
stos
cwtl
ja
fs
pop
test
xor
popf
fyl2xp1
int
and
and
dec
and
dec
add
pushf
jge
imull
mov
push
movsb
add
mov
pop
cs
add
dec
fistl
fadds
xchg
pop
xor
ret
mov
xchg
push
pop
inc
pop
add
js
fsubr
inc
push
sub
adc
push
add
xor
aaa
xchg
decl
add
pop
fcoms
jnp
call
cmp
cmpsb
insl
push
frstor
enter
inc
sbb
push
enter
jnp
insb
pop
es
jge
jnp
add
sti
mov
push
getsec
cltd
cwtl
cld
std
call
mov
add
stc
or
adc
and
mov
push
aaa
inc
sahf
orb
stc
xchg
enter
outsb
add
add
jne
mov
or
popf
add
pop
push
pop
push
add
fcomps
xchg
pop
dec
ds
jecxz
add
aad
pop
mov
adc
mov
sbb
stc
add
mov
xchg
or
add
xor
cmc
rolb
and
movsb
fwait
cwtl
mov
push
call
push
jns
scas
add
and
add
lea
loopne
cwtl
and
mov
cli
movb
add
lock
sti
push
push
jo
sbb
insb
jl
rol
cwtl
outsb
push
rcll
jbe
lcall
hlt
pop
rcll
dec
cmp
add
push
and
adc
mov
sub
inc
jecxz
add
xchg
xor
dec
dec
daa
push
popl
inc
adc
int
push
xor
enter
mov
cwtl
and
decb
xchg
je
insl
mov
sbb
add
sbb
or
mov
mov
sbb
dec
add
test
add
cmp
xor
mov
shufps
push
test
or
push
xor
mov
repnz
inc
lcall
sbb
lds
popa
lret
inc
jle
add
lcall
stos
fldl
mov
add
cld
lret
pusha
xchg
test
push
cmpsb
lods
add
in
mov
mov
sub
aas
fdivl
shl
mov
or
push
add
cld
leave
rolb
je
or
add
lds
push
repnz
in
add
cld
sub
add
fisttpll
push
add
inc
mov
aas
adcb
pop
pop
mov
call
add
push
push
fs
lock
testl
out
je
jns
add
mov
pop
andb
dec
pop
sbb
mov
sub
pusha
fcoms
sti
js
jl
add
mov
rclb
xchg
or
in
add
dec
mov
sub
gs
xchg
dec
push
fists
js
aad
jl
push
xorl
sbb
add
cmpsl
jp
lret
push
bound
xchg
sahf
cltd
inc
or
push
inc
sbb
add
adc
mov
inc
sbb
inc
cmp
sub
xchg
loope
xor
int3
ficomps
testl
stos
dec
test
jge
push
testl
add
or
sti
xor
mov
inc
add
aad
or
push
inc
push
mov
add
inc
je
arpl
nop
mov
daa
pop
pop
ret
cmp
rorl
outsb
in
and
icebp
pusha
add
movl
add
lods
sahf
cwtl
xlat
sub
fmulp
push
cmp
lods
add
enter
add
out
fiaddl
xchg
int3
and
mov
cmp
pop
leave
popf
add
push
cmp
test
jns
aas
mov
fildl
push
hlt
clc
ja
add
sub
popa
pusha
and
add
cmp
sbb
lret
ja
add
xchg
std
stc
add
fisttps
jl
jmp
movsb
cmpsb
enter
adc
sub
lods
jno
imul
xor
xor
jge
les
insb
or
sub
xchg
lcall
jl
cs
jb
lds
mov
or
adc
outsl
fimuls
cltd
xchg
or
pop
push
mov
leave
jo
out
aad
add
cmp
adc
xchg
add
gs
mov
aam
cmp
add
lcall
add
mov
xchg
xchg
pop
xor
fsubp
jle
fs
in
stos
sbbb
jo
sbb
sub
sub
xor
in
addb
xlat
add
cmp
insl
out
cmp
mov
sbb
insl
mov
cli
add
out
test
lea
xor
mov
cmpsl
repnz
inc
les
daa
and
pop
dec
sti
pop
adc
rcr
inc
mov
sub
popf
jno
jbe
add
pop
push
mov
fmuls
notb
adc
adc
sub
jl
test
lods
pop
xor
add
pop
testl
loopne
sahf
mov
cltd
repz
cmp
loopne
mov
jbe
push
xlat
mov
dec
push
add
lret
aam
clc
jmp
js
mov
dec
or
repz
sbbl
pop
cmpsb
add
pop
xchg
push
sbb
or
adc
jge
not
sahf
inc
xchg
call
shrl
add
dec
fs
ss
or
outsl
mov
pop
ljmp
pop
or
es
mov
leave
lret
xor
push
imul
inc
pushf
add
jnp
mov
aad
jmp
shrb
cmp
add
shrl
filds
sbb
add
mov
sub
pop
popf
repz
add
push
cmp
push
and
add
jo
mov
pop
repz
movb
pusha
out
add
dec
clc
pop
loopne
jnp
mov
or
inc
dec
mov
push
lods
ret
cmp
inc
xchg
loopne
or
jns
lds
aaa
pop
cmpb
jo
add
imul
push
jl
sub
xor
add
es
out
mov
ret
aas
push
cwtl
lds
cmpsl
and
fs
dec
fcomip
imul
jb
jmp
add
leave
inc
adc
add
or
pop
hlt
cmpsl
xchg
lods
add
mov
cltd
mov
xor
roll
in
sbb
xor
or
in
lret
cmp
xchg
xor
or
mov
mov
repz
adc
push
in
sbbb
and
sti
movsb
jmp
dec
inc
ret
fs
cltd
sub
sub
jne
das
or
jg
jo
pop
pop
test
pop
sbb
or
pop
inc
mov
loope
sbb
pusha
cmp
in
dec
mov
test
pop
sbb
cmp
inc
add
loope
int3
cwtl
dec
ds
add
sarb
bound
dec
loopne
push
add
int
subps
pop
xor
jo
nop
push
mov
pop
ds
inc
xorb
sub
rorl
ret
inc
rep
leave
push
cmp
inc
push
sbb
dec
sbb
push
test
popa
pop
sbb
add
mov
out
sbbl
mov
out
inc
adc
cld
mov
add
inc
ret
sti
aad
or
push
pop
aaa
stc
loop
jns
mov
dec
sub
mov
mov
dec
ret
std
mov
sbb
or
add
test
in
add
jns
ret
pop
or
or
mov
addr16
cltd
sbb
inc
sbb
lds
mov
mov
mov
jp
jb
inc
xchg
inc
mov
shrb
add
iret
adcb
cld
into
imul
push
jge
push
add
dec
hlt
push
sarb
dec
and
and
adc
jl
add
push
cmp
add
dec
into
jo
loopne
mov
xor
stos
in
popf
add
xchg
cmp
adc
loope
pop
sbb
cltd
jp
mov
out
lret
jle
push
mov
mov
dec
mov
push
enter
movsb
sahf
test
ds
add
pop
loopne
pop
dec
sub
mov
jb
sub
mov
jnp
adc
push
add
xor
lret
adc
aad
int3
jae
xchg
lock
stos
pusha
xchg
inc
add
xchg
jns
or
aaa
add
cltd
and
in
push
jnp
push
mov
dec
mov
push
xor
int3
cli
sbb
out
jle
in
add
jg
insl
dec
rolb
add
fs
add
lock
adc
mov
cltd
jecxz
fadds
add
xor
adc
clc
push
sub
add
sbb
mov
pop
inc
into
sbb
and
add
insl
jl
mov
pop
sti
sbb
jmp
inc
mov
sahf
in
jne
jb
mov
mov
out
fcmovnbe
add
shl
notb
bound
insl
cmpsl
pmuludq
pop
or
repnz
rolb
loop
es
movl
adc
pop
add
out
pop
mov
push
icebp
push
test
orb
jo
dec
xor
pop
jb
inc
sbb
mov
fwait
add
lea
mov
arpl
pop
lcall
inc
mov
in
xchg
mov
mov
loopne
das
mov
jo
add
out
push
outsb
inc
mov
sbb
mov
sarl
pop
mov
aaa
jge
daa
lcall
fsubs
add
sub
add
jg
jnp
mov
jle
push
add
repz
aaa
in
and
lret
adc
lods
inc
je
mov
inc
ja
xor
cmp
adc
stc
into
jge
clc
shll
inc
hlt
dec
jl
add
loope
gs
jno
push
or
pop
xchg
inc
movsb
add
and
xchg
inc
rclb
xchg
mov
jg
mov
sub
fimuls
ja
shrb
add
xchg
sub
jge
sbb
xorl
inc
mov
and
mov
add
xchg
xchg
add
jns
jnp
xchg
sti
addb
pusha
je
push
shlb
cwtl
hlt
push
add
xchg
in
aad
push
cmp
and
ret
pop
stc
mov
insb
xchg
jno
add
ret
add
xlat
rolb
and
inc
xor
mov
jecxz
push
add
jne
mov
rolb
lods
in
fiadds
push
or
add
cwtl
inc
adc
cmp
sbb
jecxz
scas
in
insb
out
jle
add
mov
xor
jmp
push
or
adc
adc
ds
aad
pop
lret
pop
mov
fstpt
add
mov
sub
sbb
add
bound
hlt
cs
lahf
in
cmc
pop
or
push
mov
add
inc
imul
sbb
mov
mov
rcl
std
je
mov
add
push
ret
popa
add
idivl
int
push
add
js
clc
push
pop
test
push
dec
add
push
mov
mov
add
cld
rorl
and
pop
add
es
mov
faddl
adc
hlt
pop
and
mov
in
ss
addr16
pop
stos
rclb
test
sbb
add
addr16
movsl
andb
add
jo
xor
lds
iret
lret
mov
cmp
add
inc
cmp
inc
nop
rcrb
imul
dec
test
cwtl
and
adc
mov
clc
fadds
adc
xchg
add
cmpl
out
jp
sbb
ficompl
js
fmuls
rolb
mov
inc
xor
sbbb
loop
addr16
jge
add
pop
or
iret
xchg
jae
test
loopne
sti
sbb
lds
icebp
cmp
inc
sbb
jl
mov
cmpsl
cld
push
cwtl
sahf
rolb
xor
idivb
movsl
sbb
mov
add
inc
add
nop
int
add
mov
cmpsl
mov
jns
jno
mov
xchg
add
test
xchg
mov
ficompl
add
dec
lds
pop
stos
addb
aaa
out
sub
and
incl
pop
jmp
xchg
push
iret
call
jae
adc
cmp
push
mov
in
jle
in
jge
add
pusha
aaa
rolb
mov
mov
xchg
shll
or
cmp
fwait
lahf
andb
dec
incb
aas
push
addl
repz
push
fadds
pop
sbb
ja
lret
sub
xchg
sub
add
xchg
call
fnclex
daa
cmc
mov
cmp
adc
add
loope
inc
scas
jmp
imul
xchg
fsub
push
cmpsl
cwtl
add
fs
mov
inc
scas
out
pop
int
push
or
mov
push
add
cmpsb
pusha
imul
add
icebp
das
add
and
push
inc
xorb
xchg
nop
and
fwait
lret
out
jmp
dec
cmp
xor
test
int
cmp
jo
push
call
push
and
add
cmp
testl
inc
insb
mov
dec
jne
lret
mov
gs
imul
sbb
add
cmp
mov
mov
add
je
sub
push
cltd
rorl
xchg
cld
lods
pop
xor
push
int
xchg
test
mov
cld
fsubs
inc
loope
lahf
test
push
lret
add
cmp
and
mov
neg
iret
lahf
pop
add
cmp
cmp
pop
cmpsb
mulb
mov
xchg
int
rol
out
sti
cmp
sub
test
mov
in
and
mov
nop
insl
mov
push
jnp
xlat
popa
aam
scas
cwtl
ja
cmp
js
jge
and
aam
jnp
sub
outsb
add
loop
out
mov
add
je
sar
dec
push
xor
mov
fsubs
lahf
nop
dec
and
add
sbb
insl
mov
jge
out
std
stos
jns
add
xchg
mov
hlt
cmp
popl
lret
aad
pop
outsl
adc
or
dec
inc
sahf
in
in
add
xor
imul
das
decb
add
hlt
mov
into
insb
add
lea
add
jle
movsb
add
or
add
pop
and
fistpl
jge
mov
adc
jne
cli
add
inc
dec
xor
pop
shl
pushf
mov
and
pusha
xlat
mov
into
fcoml
lock
mov
cmc
xchg
lock
push
add
push
lahf
add
xchg
dec
jge
sub
ljmp
mov
push
dec
movhps
es
ficoms
push
mov
mov
lods
mov
add
lret
gs
mov
sbb
push
pop
xchg
add
jmp
push
mov
shrb
xchg
data16
stc
mov
in
add
sahf
subb
jge
add
and
jl
rorb
mov
pusha
dec
out
popa
jnp
push
iret
sbb
cmp
mov
stos
shll
sub
test
rclb
mov
or
and
sahf
cmc
cmp
roll
dec
add
jne
nop
call
sbb
and
xchg
add
push
sub
jns
ljmp
ds
add
inc
mov
push
inc
std
rolb
or
sub
jle
loope
and
adc
decl
test
clc
inc
add
aam
jns
jg
lock
das
inc
loop
inc
adc
popa
shlb
dec
scas
addb
in
data16
adc
clc
push
add
xchg
lds
and
addl
out
add
movsb
and
or
xlat
adc
add
out
and
mov
mov
scas
sbb
dec
andl
pop
lahf
and
jecxz
sbb
test
leave
loopne
repz
sub
testb
mov
push
add
cmp
xchg
sub
mov
clc
movsl
aam
imul
pop
adc
leave
inc
shr
add
fwait
cmp
jo
dec
add
stc
or
pusha
mov
xor
aad
xchg
in
xorb
add
lret
cmpb
pop
in
push
test
les
mov
xchg
cmpl
jo
loopne
shr
sub
push
test
rorl
shlb
mov
add
psubq
push
fs
add
cli
cmp
add
call
dec
inc
loop
xor
and
ss
aas
or
jl
add
xchg
orb
pop
pop
sub
aam
mov
jle
pushf
xchg
lcall
add
cltd
inc
jmp
push
test
sub
aad
sub
mov
add
fistpl
jge
call
test
test
mov
test
cwtl
mov
fldl
mov
rcrb
out
nop
iret
outsl
iret
push
jno
lret
cmp
pop
add
loope
sbb
add
mov
test
sti
or
cmpsb
or
and
add
bound
out
jl
add
adc
iret
sahf
jmp
fsubrl
cmp
rcrb
sub
dec
xor
sbb
es
in
dec
cmp
in
js
jae
mov
jle
fcompl
jmp
addb
mov
pop
jno
dec
cmc
cwtl
add
int3
push
add
dec
add
ltr
sub
xor
lock
mov
and
imul
push
fsubrp
je
add
cmp
shrb
cmp
xchg
scas
jg
mov
hlt
pop
leave
sahf
ret
add
cmp
sbb
in
cmpsl
mov
les
int3
pop
add
dec
ljmp
je
call
data16
adc
add
fsubs
add
inc
in
cmp
xor
xor
cld
loopne
jge
sub
jno
push
je
popf
pop
push
cmp
arpl
scas
push
nop
sbbb
repnz
push
add
push
or
adc
repnz
inc
ljmp
jge
sub
sub
add
inc
mov
fistpl
cmp
adc
mov
test
pop
fisubrl
cmp
add
pop
push
and
orb
ret
push
daa
mov
fwait
xor
bound
les
aam
add
sarb
dec
cmpsl
rolb
add
aaa
adc
cmp
into
sbb
icebp
add
xchg
xor
je
enter
outsb
aas
xchg
add
scas
and
xorps
leave
and
push
mov
js
inc
sub
add
push
shlb
xchg
andb
enter
push
xor
aaa
mov
add
or
shrb
aas
insl
or
sti
add
sarb
jecxz
mov
lea
pusha
adc
sahf
xchg
insb
out
and
inc
sub
pop
roll
lret
and
lods
mov
jge
add
pop
ret
add
inc
mov
rolb
into
jb
sbb
out
add
add
or
cwtl
add
insl
dec
popa
add
faddp
pop
mov
out
sbb
add
je
test
add
sub
loop
inc
sahf
pusha
pop
pcmpgtw
mov
ret
inc
nop
rcrb
adc
jae
push
cld
add
cmp
mov
fadds
je
jno
call
inc
xchg
pusha
and
loop
inc
push
add
std
loopne
ljmp
add
and
data16
aam
dec
mov
enter
inc
inc
scas
and
sub
push
mov
add
xlat
lea
or
add
jg
cmp
andb
fistps
push
jmp
or
push
cwtl
adcl
cmpsb
testb
ds
or
jp
scas
fiadds
loope
out
es
mov
push
or
cmpsl
sub
out
in
inc
mov
mov
jmp
roll
mov
adc
jbe
mov
lcall
sti
es
ret
sub
xchg
loopne
dec
js
push
push
loop
adc
rolb
clc
rorl
add
shll
add
inc
add
jae
lods
mov
loopne
and
clc
mov
sbb
andl
dec
mov
popf
int3
out
xchg
fmull
mov
pop
mov
sub
inc
cmpsb
js,pt
xor
dec
pop
pushf
fsubs
daa
and
aam
fcomip
mov
add
sub
push
mov
add
inc
xor
int3
sysexit
push
mov
adc
es
add
adc
cmp
or
sti
mov
xor
jl
jo
lods
out
or
btc
and
data16
lcall
out
adc
jns
or
adc
test
iret
mov
push
dec
shrb
insb
sbbb
mov
dec
je
loopne
test
mov
movsb
sbb
in
add
lods
mov
mov
add
iret
popf
dec
in
mov
xchg
scas
lods
out
into
xchg
cmp
ds
sub
push
mov
or
mov
pop
in
sbb
lea
adc
stos
aas
jns
jno
fnsave
data16
add
cmp
das
inc
xchg
jl
push
push
jne
lods
sbb
jbe
jnp
aaa
je
fildl
adc
and
fsub
enter
into
push
inc
arpl
incl
xor
cmp
add
test
xchg
aas
add
cmpb
dec
imul
inc
movl
jae
add
xor
shlb
sub
sbb
jmp
adc
cs
xchg
test
mov
inc
addb
lods
mov
inc
mov
add
fdivrs
pop
or
cmp
stos
js
add
sub
aaa
lcall
mov
jns
iret
add
out
sub
fucomip
into
jne
mov
shrl
adc
inc
clc
add
sbb
jbe
add
das
xchg
daa
push
es
add
fistpll
lret
cmp
gs
or
stc
sbb
xor
sub
arpl
call
divl
jmp
mov
cmpsl
out
lods
cwtl
and
lret
test
enter
pmuludq
mov
call
mov
jmp
leave
dec
mov
cmp
add
sbb
ss
mov
stos
lock
adc
mov
mov
pop
aaa
ljmp
xor
jno
pusha
in
pop
jecxz
xchg
mov
cld
js
mov
and
or
out
movb
jl
mov
mov
shl
cmp
jge
sub
subb
adc
loope
inc
leave
jo
add
bswap
lahf
push
sbb
jne
fs
je
add
pop
and
mov
xchg
dec
push
xor
pop
sub
imul
mov
push
mov
dec
push
push
add
adc
or
add
inc
stos
dec
mov
sub
movsl
sbb
push
mov
jb
negb
inc
lods
lcall
mov
js
scas
fnstenv
mov
cmp
xchg
add
call
sbbl
or
add
inc
sbb
dec
test
or
cld
jge
icebp
adc
inc
shlb
pop
aam
xor
dec
cwtl
sbb
sub
xor
loopne
xchg
movsb
add
adc
or
pop
adc
add
dec
in
sbbb
add
lock
sub
push
sbb
ja
or
call
cmc
mov
and
out
adc
inc
aas
cld
add
lahf
mov
xor
dec
bound
fdivrs
sbb
xchg
pop
and
jmp
lcall
popa
aam
sbb
adc
add
pusha
push
data16
addl
jp
push
mov
ss
int3
aaa
pop
cmc
and
imul
pop
push
add
push
fidivl
add
or
lock
lock
notb
int3
inc
int
xchg
mov
idivl
xchg
out
jnp
hlt
add
mov
orb
smsw
lahf
shrb
outsl
add
frstor
jb
or
cld
in
pop
cmp
jnp
maxps
add
insb
in
xchg
add
adcl
ret
lcall
jbe
mov
add
add
push
sbb
and
add
mov
mov
ljmp
add
je
sub
inc
sti
or
mov
sbb
sarb
add
push
orb
scas
ja
outsb
jae
xor
pusha
js
lock
mov
dec
scas
add
movsl
push
mov
fs
sbb
adc
inc
add
aaa
adc
pop
mov
xchg
xchg
call
lock
sti
jb
cwtl
dec
jno
pop
es
mov
ror
sub
lock
jae
in
dec
add
mov
loopne
out
or
aaa
int
andb
cwtl
rorb
out
iret
idivb
scas
inc
push
dec
add
sub
jo
mov
add
jle
sbb
pop
or
inc
add
repz
sub
and
or
jle
sub
jbe
jo
fimuls
gs
add
xlat
push
cwtl
aad
xchg
adcb
scas
xor
mov
popa
add
jb
add
pop
add
lods
mov
iret
repnz
sbb
push
hlt
and
gs
inc
sahf
add
ret
pop
repnz
cwtl
wrmsr
test
sub
daa
ret
iret
or
jg
je
cmc
js
fs
imul
popl
and
inc
pop
add
addr16
jl
inc
les
lea
pop
mulb
mov
jecxz
push
adc
xchg
call
imul
dec
push
add
bound
inc
ljmp
sbb
hlt
xchg
cmp
xor
les
out
jno
adc
dec
push
xor
xchg
jle
mov
or
mov
inc
or
jmp
loope
push
add
aad
sub
cmp
sbb
sti
add
xchg
push
push
shrb
xor
mov
hlt
pop
mov
cmpsl
loopne
jmp
idivb
and
movsl
clc
lea
jecxz
dec
adc
imul
push
mov
xor
add
sbb
imul
insb
cmp
faddl
xchg
fcmovbe
or
fldcw
add
pop
lds
ljmp
subb
and
add
divl
push
sbb
add
fdivp
lcall
rorb
fs
out
les
sub
sbbl
jl
loope
cmpsl
pop
jo
fwait
mov
adc
cmp
es
sub
sahf
movsb
in
pop
std
push
mov
ss
add
jge
movb
les
sbb
add
xchg
sahf
rclb
dec
in
sub
call
sbb
test
lock
add
mov
fwait
imul
gs
xchg
add
pop
ret
add
mov
mov
lcall
inc
fdivr
or
xlat
mov
jo
movsl
shlb
cmp
add
lock
nop
loopne
movl
outsl
dec
add
jae
push
jo
pop
inc
stos
jns
or
clc
lcall
adc
into
sbb
shlb
out
push
add
xor
dec
cmpsl
jns
add
mov
idivl
jecxz
iret
push
mov
je
push
out
lahf
pop
xchg
add
adc
jge
enter
dec
in
push
xchg
mov
jae
add
ficomps
add
out
jge
in
test
sub
add
or
gs
add
jne
jg
dec
mov
cmp
je
push
fcoms
xchg
inc
push
cmp
sbb
enter
repnz
lods
mov
add
inc
adc
and
xchg
sub
movsb
xchg
movsl
sbb
andb
add
sarl
push
jbe
jno
and
out
or
dec
push
dec
das
or
mov
test
ss
inc
shl
sbb
xlat
jmp
cltd
loope
xor
push
loopne
enter
cmp
je
add
adc
imul
dec
aas
test
call
subl
add
cmc
push
mov
xor
or
dec
fcmovbe
sahf
hlt
subb
pop
add
loope
rcll
lret
mov
add
push
inc
adc
imul
loop
mov
stos
xchg
add
xchg
mov
int3
add
sti
movsb
out
inc
sahf
cmp
add
fwait
popf
popl
push
mov
cmp
iret
imul
sub
pop
cmp
pop
mov
outsl
push
or
dec
inc
cmpb
je
mov
adc
cmp
or
mov
jbe
enter
add
inc
sub
ss
dec
inc
and
andb
ret
inc
mov
pop
push
xchg
stos
in
pop
xchg
pop
fadd
cmp
jmp
adc
dec
int3
adc
pop
jb
add
fdivrs
scas
mov
and
lret
cmp
mov
fldcw
and
sbb
ret
mov
lods
xor
fcomps
jns
jg
xlat
inc
and
mov
emms
fadd
mov
and
lret
lret
pop
paddsw
rcrl
jnp
push
mov
jecxz
jne
mov
jbe
xor
insl
jl
jnp
add
mov
and
pop
addl
int3
jno
nop
stc
incb
ret
hlt
add
imul
xchg
fisubrl
adc
out
rorl
fwait
das
add
inc
in
lds
imul
jb
add
fnstenv
push
xchg
mov
push
jmp
pop
loopne
or
ds
in
jo
addb
into
cmp
je
mov
push
fldl
lret
int
decb
leave
add
outsl
inc
clc
std
add
fimull
cmp
pop
sub
xor
push
mov
movsb
and
pop
scas
push
or
inc
test
mov
subb
jb
sbb
les
and
pop
pop
pop
mov
mov
push
push
sub
jl
xchg
fdiv
cltd
jl
out
push
ret
insb
xchg
inc
pop
xor
mov
shrl
jo
stc
out
or
cmc
jno
clc
add
sub
cmp
lret
cmp
mov
inc
inc
stc
push
xorb
sub
sub
jns
rorl
xchg
pusha
imul
sbb
sub
cwtl
cld
add
aaa
pop
shll
lcall
xchg
sub
repnz
sarb
out
dec
sbb
loope
out
jno
jns,pt
sahf
sti
mov
adcb
add
test
cmp
pop
lret
add
pusha
ret
xchg
testl
mov
jmp
mov
insb
pop
add
lods
jno
adc
sbb
mov
jmp
sub
jg
lahf
and
insl
and
pop
pop
ljmp
adc
mov
or
scas
loop
aad
lock
inc
cmp
add
clc
imul
cmp
sbb
inc
adc
xchg
in
fwait
sub
dec
inc
pushf
sub
call
icebp
out
pop
add
mov
sbb
dec
inc
hlt
add
mov
dec
pop
aad
xchg
hlt
arpl
fwait
pop
inc
or
push
loopne
cmp
into
sbb
xchg
dec
add
repnz
sub
adc
cli
orb
testl
adc
inc
shll
adc
xor
lds
movsl
fldpi
lcall
cmpb
popf
jle
pusha
mov
inc
add
loop
out
and
dec
pop
lcall
test
movsl
or
mov
inc
jmp
dec
std
push
dec
mov
movsb
movsl
jae
loopne
hlt
lret
add
jbe
jnp
push
dec
pushf
xor
mov
dec
push
inc
xchg
icebp
divb
inc
repnz
sbb
inc
cld
les
push
jl
jns
add
xor
inc
sbb
rclb
dec
ret
push
add
clc
push
cli
cmpsl
or
add
jb
fldt
and
dec
pop
add
or
popf
push
add
inc
dec
mov
inc
adc
add
fistpll
insb
fmull
dec
add
fldl
mov
mov
push
filds
cltd
jmp
cmc
rcrb
sti
xor
cwtl
pusha
inc
push
pop
lcall
popa
inc
sarb
mov
enter
pop
or
add
push
add
sbb
sbb
mov
jp
jecxz
je
andb
xchg
insl
ret
shrl
adc
and
loopne
fisubl
add
nop
ret
mov
cmc
and
add
les
das
sub
jb
add
adc
je
mov
mov
test
ljmp
dec
add
pop
stc
inc
in
xor
dec
sub
pop
cmpsl
mov
sub
jge
pop
cmp
pop
mov
adc
inc
test
add
xlat
mov
and
fcmovbe
or
aad
add
shlb
subl
cmp
mov
test
pop
cmp
and
push
add
sarb
cmpsl
push
push
movb
inc
inc
or
add
cltd
and
rorb
xor
inc
pop
enter
jne
ss
out
test
jo
cli
mov
fcoml
push
mov
aad
dec
lret
add
stc
add
cmp
int3
outsb
idivb
add
rcrl
test
es
add
popa
scas
lock
inc
jecxz
ret
mov
enter
push
es
pop
push
xchg
inc
jg
dec
and
sub
dec
pop
add
testb
push
xor
mov
stos
push
jns
popl
movsl
cs
insl
dec
cmpsb
mov
pop
imul
add
int3
adc
cmp
inc
add
ja
scas
add
popf
movsl
inc
imul
cmp
in
addb
ljmp
cmp
aam
aaa
nop
pop
call
cmp
lds
mov
pusha
pop
sub
adc
cmp
jns
xchg
aad
push
add
pop
cmp
in
add
cmp
push
and
pop
enter
in
mov
push
push
fmulp
xchg
mov
dec
sub
xor
cmp
cltd
jae
xchg
dec
add
xlat
ret
mov
popf
pop
repnz
pusha
mov
leave
test
jmp
pushf
insb
xchg
rorb
sbb
iret
pop
aam
sti
xchg
sub
ret
sete
movsl
in
sub
mov
push
cmpb
arpl
sbb
mov
pushf
add
jg
loop
frstor
mov
cwtl
es
add
cmp
sub
pop
bound
dec
push
add
les
xor
repnz
and
push
push
jno
add
pop
loopne
fs
add
icebp
pop
mov
adc
sbb
test
je
push
sbb
sbb
or
push
xor
test
xchg
sbb
add
gs
je
lfs
adc
mov
mov
mov
sarb
xchg
inc
add
sbb
xchg
sub
aam
or
or
addb
push
inc
add
sub
add
mov
jecxz
pop
fldcw
repz
insb
pop
inc
push
push
gs
add
add
fidivrl
add
lret
inc
in
incb
gs
add
add
and
insl
jmp
das
add
inc
fdivr
push
dec
add
push
cmp
loopne
and
rorb
add
add
or
push
stc
js
adc
imull
ds
out
jb
jl
add
aad
cli
loopne
sarl
cmpsl
mov
push
add
pusha
mov
mov
in
shl
loop
add
add
std
andl
pop
push
mov
dec
adc
ret
call
add
js
es
inc
add
les
sarl
add
int3
add
nop
mov
jmp
xor
xor
pop
jge
or
xchg
ja
add
andl
js
icebp
mov
mov
and
call
fmuls
lock
ficoml
add
je
xor
add
cmc
stos
xchg
call
sbb
out
sbb
aaa
ret
addr16
pop
ret
clc
xor
add
sub
push
add
fadds
push
add
mov
andb
ja
daa
jns
out
add
xchg
mov
data16
mov
adc
add
jmp
shlb
add
mov
push
xor
mov
push
cli
add
mov
gs
arpl
add
inc
dec
cmpsb
xlat
wbinvd
add
fdivrs
sbbb
xchg
or
jg
leave
mov
adc
imul
cmp
imul
rcrl
cli
xchg
sbb
xchg
lock
shl
pop
add
sahf
stos
jns
push
inc
mov
cmp
push
das
test
push
or
add
push
ret
cmpsl
shrb
nop
dec
push
aam
mov
shlb
sub
imul
hlt
add
inc
dec
aad
mov
call
stc
data16
mov
pop
mov
cmp
jb
add
push
subl
sbb
and
push
pop
cmp
leave
in
jno
sub
js
clts
fwait
lock
js
or
pop
cmpl
adc
sbb
or
cmp
dec
nop
and
add
iret
ret
jle
jno
je
adc
bound
jmp
mov
mov
mov
stc
xchg
jnp
gs
cmp
movsl
sarl
pop
add
call
push
push
lock
lods
cmp
pusha
stos
rcll
push
adc
mov
scas
add
jle
std
mov
push
mov
mov
pop
fimuls
imul
mov
pop
flds
xor
sbb
rorb
rclb
mov
das
mov
inc
pop
jge
pop
add
sahf
std
mov
sti
add
sbb
maskmovq
divl
rol
test
push
xor
push
jb
enter
scas
sarl
push
push
repz
cmpsb
in
aaa
mov
xchg
nop
and
or
push
lret
pop
movsl
fsubrs
jp
push
inc
jae
fnstsw
add
out
pop
pushf
fidivl
cld
mov
rcll
jp
push
lcall
push
cltd
xchg
sbb
xchg
adc
xchg
nop
add
mov
add
clc
ljmp
flds
pop
jnp
subb
jno
add
test
lcall
ss
addr16
add
jg
add
dec
ret
cs
pop
add
and
in
xor
pop
add
pusha
sbb
xchg
or
loope
insb
imul
hlt
add
pop
xor
dec
sbb
xchg
mov
fisubl
xchg
lods
flds
std
xor
adcl
xor
sti
jecxz
mov
and
mov
xor
fdivr
add
sub
jecxz
stc
pop
mov
int
add
inc
adc
mov
sub
and
mov
sbb
pop
push
lea
push
into
out
xlat
xchg
fwait
and
jne
xchg
js
pop
adc
mov
dec
push
shrb
adc
dec
sbb
fs
sub
lods
lea
jbe
xor
push
adc
mov
jp
add
add
out
les
loop
add
push
repnz
xor
add
or
add
ret
xor
dec
or
pop
add
xchg
xor
xor
add
push
dec
and
push
add
in
into
faddl
sbb
add
add
sub
add
test
fisubs
add
adc
lods
and
cmpl
aaa
xchg
and
les
add
xor
cs
mov
and
or
add
mov
hlt
cmp
and
repz
repnz
lahf
add
enter
or
add
es
test
bound
adc
call
add
adc
icebp
mov
add
push
hlt
ret
loop
inc
movsb
rcr
int3
jmp
je
decb
add
xchg
sbb
out
inc
pop
sarb
andb
inc
pop
dec
or
inc
orb
add
fxch
inc
add
pushl
cvttps2pi
or
nop
js
xorb
lret
jb
mov
jo
es
or
nop
inc
jp
add
xchg
sub
inc
mov
dec
in
add
xchg
mov
notl
mov
add
cmp
lahf
xchg
in
mov
sbb
sahf
int3
fmuls
in
cmp
das
add
jb
mov
call
cmp
xor
repz
test
adc
add
inc
out
enter
stos
add
and
sbb
movsl
daa
xchg
add
out
into
or
pop
push
or
and
add
push
dec
xor
aas
pop
xor
and
and
in
lds
mov
mov
mov
sti
orb
xchg
ret
or
pop
add
aaa
mov
orl
andl
hlt
sbb
pop
add
lret
test
push
movsb
lock
jmp
add
and
inc
cmp
das
dec
pop
in
mov
lea
int3
push
jo
cmp
jg
and
jp
pop
in
pop
aas
sarl
andb
incb
sub
mov
rorl
out
add
pop
repz
jecxz
mov
inc
xor
add
xchg
pop
and
inc
in
roll
outsb
jb
shlb
pop
das
stos
fldenv
sahf
mov
out
fidivrl
jg
mov
jo
or
or
dec
adc
add
test
outsb
fwait
pop
push
lods
cmp
shr
dec
add
in
mov
adc
daa
cwtl
inc
add
mov
mov
adc
fdivl
add
pop
aas
movsb
cmp
push
inc
cmp
pop
add
fsubs
add
outsb
or
jbe
sub
imul
xor
inc
xchg
adc
adc
add
imul
cmp
repz
push
gs
dec
cld
movsb
nop
inc
add
lds
dec
imul
divb
repnz
cltd
add
xchg
inc
xchg
adc
ja
pop
push
xchg
adc
jp
and
popl
and
push
mov
imul
iret
in
add
sbb
hlt
adc
push
mov
cmp
lret
sub
mov
in
popa
push
mov
jmp
fs
mov
loopne
divl
aas
movsl
push
mov
inc
mov
sub
in
mov
stos
bnd
add
xchg
leave
test
add
insb
pop
fsubrs
fmull
add
inc
jg
outsl
mov
sbb
xor
sub
mov
aad
pop
add
ds
in
int
divb
or
insl
push
stc
add
dec
aaa
mov
add
in
add
push
jge
aad
cmp
mov
and
outsb
push
jo
addl
nop
or
testb
mov
add
hlt
ret
mov
add
inc
and
out
mov
repz
xchg
incb
inc
shlb
push
inc
mov
lcall
or
mov
out
sti
add
mov
or
imul
ret
psubsw
xchg
popf
add
add
fcoms
pop
add
popf
inc
xchg
nop
cmp
inc
ret
push
xlat
xor
daa
add
push
xor
inc
shll
fdiv
push
cmpsb
sbb
rolb
hlt
add
sarl
movb
enter
es
and
push
sub
enter
sbbb
xlat
dec
adc
cli
ljmp
xchg
add
lcall
test
rol
rolb
or
xchg
mov
mov
outsb
xchg
xchg
add
add
in
mov
sarb
push
cmp
mov
mov
cmp
out
sahf
lret
cltd
shll
jp
pop
testb
pop
imul
add
iret
les
rorb
nop
add
out
add
mov
mov
pop
stos
test
outsb
pop
adc
xchg
mov
xchg
mov
cld
fmull
roll
adc
sbb
data16
cmp
jae
add
sarb
push
aad
jmp
and
add
dec
jp
cmp
and
test
jbe
fsts
outsb
nop
and
push
ret
adc
and
mov
xchg
pop
dec
xchg
mov
inc
fldenv
push
pusha
mull
inc
xlat
add
adc
push
add
xchg
sub
push
jns
shlb
ret
inc
cmp
mov
fs
cmp
cmp
mov
xchg
add
std
xor
or
mov
icebp
lahf
int3
cmp
adc
in
iret
inc
jge
xor
add
pusha
test
dec
and
mov
fwait
sub
outsb
loope
add
pop
loopne
pop
je
xchg
mov
dec
pop
push
jp
rcr
mov
jns
sti
and
clc
stc
sub
add
leave
xor
adc
imul
loop
and
stos
cmp
xor
cmp
and
cltd
outsl
fnstenv
mov
push
je
jne
loopne
dec
pop
cmp
in
xchg
scas
cmp
insb
icebp
add
pop
sbb
xchg
add
in
mov
pop
outsb
ds
dec
adc
int3
mov
and
cmpsb
cmp
sbb
adcl
and
arpl
test
stc
cmc
out
add
out
addr16
and
mov
shrb
jge
pop
cmpsl
cli
push
adc
cltd
push
iret
ds
pop
add
fs
gs
aas
add
sbb
out
leave
add
add
cltd
insb
xchg
add
mov
jg
sbb
js
cmp
mov
packssdw
add
add
fldt
jmp
dec
mull
shl
int3
add
add
out
int
push
sub
mov
mov
ja
fiadds
outsb
add
push
lret
test
xchg
add
or
lea
mul
jo
sbb
add
inc
mov
pusha
xor
pop
xor
fcompl
push
push
inc
mov
or
push
and
nop
pop
inc
popf
sbb
add
mov
fmul
inc
xchg
push
pop
loope
mov
dec
mov
xchg
in
or
mov
mov
add
or
out
sbb
sahf
pop
scas
cmp
pusha
xchg
adc
test
mov
push
and
outsb
clc
lds
roll
roll
pop
mov
cmp
and
and
jge
add
xor
and
sbb
pusha
add
cmp
xchg
xchg
and
and
in
add
add
hlt
imull
test
jl
fwait
je
scas
cwtl
shl
fisttpl
neg
xor
mov
fisttpll
sbb
pop
pushw
loop
subl
add
test
clc
lcall
test
sbb
xchg
add
insb
pop
xor
negl
jns
aad
pop
mov
test
scas
add
add
roll
pop
mov
push
cltd
lahf
dec
and
xor
cmpsb
aas
mov
add
xchg
enter
ret
imul
dec
cmpsb
aaa
adc
push
lcall
addb
and
movsl
push
mov
add
std
cli
mov
loope
pop
cwtl
add
into
stc
rcrb
enter
incl
push
outsl
sbb
add
pop
add
mov
or
lea
int3
std
xor
or
xchg
sahf
mov
loop
ljmp
rol
shlb
lods
push
or
mov
mov
jmp
push
pop
inc
inc
sahf
les
add
test
faddl
mov
push
mov
lods
js
jb
jnp
mov
mov
add
and
add
inc
sbb
xchg
idivb
sbb
dec
adc
cld
ficoml
fwait
jns
add
imul
xor
and
dec
or
xchg
adc
push
js
adc
cli
hlt
mov
and
adc
add
in
movsl
sbb
push
push
push
jp
add
in
or
loope
shlb
das
rcrb
xchg
add
rorb
fstpl
arpl
rcrb
pop
pop
cwtl
cmp
adc
add
icebp
add
int3
mov
cli
xor
add
jb
adcl
mov
adcb
or
test
popf
cmp
mov
mov
pop
shrl
inc
add
cmp
je
test
sbb
push
add
inc
dec
shlb
add
outsb
cmc
test
out
daa
add
bound
xor
cwtl
pushf
add
ficomps
jmp
shlb
sbb
cmp
inc
lahf
mov
cmp
lret
fadds
xchg
pop
push
lods
test
xor
push
sbb
sub
imul
iret
out
or
xchg
repz
mov
or
adc
clc
dec
cmp
adc
dec
and
loope
xor
cmpsl
add
add
push
or
xor
dec
mov
loop
jbe
fld1
add
add
pusha
lock
pop
loope
call
push
insl
les
repnz
add
push
mov
bound
ss
jg
or
lcall
cmp
and
adc
cwtl
push
push
and
cmp
or
addr16
sub
mov
insl
cmp
add
sbb
loopne
mov
pop
testb
inc
sbb
mov
mov
mov
pop
mov
inc
clc
shr
aas
dec
push
xlat
jg
sub
xor
in
jmp
mov
push
jo
xchg
cmp
push
jl
dec
mov
out
mov
jle
add
sbb
mov
add
push
push
xchg
dec
push
mov
cmp
mov
loop
and
dec
xchg
push
adc
mov
add
pop
ljmp
movsb
dec
ret
sarb
add
lret
into
sbb
adc
jns
and
jae
daa
add
filds
jg
or
add
js
pop
sbb
mov
scas
mov
and
ss
add
andl
mov
add
mov
loop
lret
add
or
jne
add
inc
aas
pop
fldt
in
lcall
push
nop
in
mov
sub
mov
sbb
adc
in
scas
adc
xchg
ja
inc
pop
add
dec
loope
mov
fsubr
aaa
push
cmp
cwtl
or
add
xor
jo
loopne
lods
insl
add
mov
cmp
xchg
mov
dec
sbb
add
fldcw
imul
add
dec
fistl
xlat
fs
lret
sarl
add
ss
test
add
and
or
jns
xor
xchg
or
dec
ret
mov
push
mov
mov
push
addb
inc
int3
lahf
jns
popl
roll
pop
add
sub
xor
push
clc
add
mov
pusha
dec
push
inc
dec
daa
pop
add
inc
push
jbe
adcb
and
out
jb
sbb
psubsb
addb
repnz
outsl
lock
mov
or
sahf
pop
imul
push
push
into
das
xchg
ret
push
pop
sbb
cltd
das
loopne
pop
jl
out
or
xchg
pop
add
mov
lahf
pop
cwtl
lea
lock
aaa
enter
fists
sub
add
xor
loop
jle
jl
xchg
lcall
loop
cwtl
push
sbb
push
decl
and
lock
and
xorb
fdivs
mov
and
xor
shrl
outsl
add
pushl
mov
scas
out
push
pop
push
loop
loopne
cld
add
mov
push
add
pop
insl
mov
dec
pusha
mov
push
xor
xchg
add
bound
ss
add
loope
loopne
and
and
call
add
jmp
je
test
and
in
sbb
push
movsb
add
outsb
out
add
call
sub
out
add
add
das
xor
aam
loope
push
out
mov
sub
aaa
out
adc
aas
and
dec
push
aad
or
jmp
sbbb
cltd
std
mov
cmp
mov
mov
add
jle
add
pop
adc
mov
incl
or
jb
add
or
rcll
sub
xchg
pop
and
outsb
out
shl
jno
gs
inc
int3
movsl
sbb
add
ja
mov
add
imul
cld
or
push
inc
mov
aam
sti
add
jecxz
xchg
mov
shrb
sbb
xchg
sbb
xchg
push
adc
addr16
cs
push
cmp
mov
push
ret
jno
adc
or
pop
lea
or
add
xchg
testb
mov
cmpsb
dec
push
or
lcall
mov
xor
add
inc
call
sbb
pop
mov
roll
ficoml
sbb
adc
sbb
and
push
clc
cmpb
cwtl
xor
into
shlb
cld
in
add
leave
rcll
out
add
test
xor
outsl
cmpsl
sbb
dec
shll
cld
pop
mov
jb
data16
xchg
dec
or
pushl
subb
loopne
fdivrl
lods
movsl
popa
insb
cmpsb
fwait
adcb
sub
xchg
add
icebp
stc
ss
adc
scas
mov
xchg
pop
loopne
jl
and
rclb
sub
mov
add
sbb
mov
xor
cmp
lods
pop
mov
add
xchg
shll
add
add
lret
out
sub
clc
fisttpl
test
add
rclb
xor
jp
add
insb
hlt
mov
mov
add
imul
add
inc
or
xchg
bound
add
test
mov
mov
sbb
mov
jno
str
sbb
mov
xchg
mov
testb
mov
out
xor
xchg
inc
pop
cltd
mov
jle
sub
jmp
ja
and
pop
sub
pop
pop
add
sbb
pop
cmp
pop
aad
dec
lods
sub
and
data16
inc
pop
pop
pusha
jae
and
cld
push
rolb
test
cmp
pop
setbe
in
and
dec
rclb
mov
push
jecxz
xor
out
cltd
and
push
mov
jae
inc
pop
jge
mov
sub
and
add
jbe
nop
xchg
cmp
cwtl
ds
and
lods
call
dec
cwtl
or
rclb
loope
addl
adc
loopw
pop
sbb
loope
inc
rol
xor
adc
xchg
mov
jo
stc
push
fcoms
jp
jns
jmp
cmpsl
and
pushf
or
add
lret
popl
test
idiv
or
pop
jle
add
mov
xor
add
fdivrs
lods
lods
push
scas
scas
add
and
outsl
add
psllq
es
xor
aas
aad
jne
insb
orb
xor
mov
xor
add
repz
outsl
sbb
std
cmpsl
bound
push
add
and
aam
pop
icebp
gs
add
cmc
cmp
jno
and
and
cs
sub
adc
add
mov
sub
insl
xor
add
sti
loopne
inc
push
pop
jns
xchg
mov
nop
add
mov
fwait
aam
mov
movsb
pop
add
cmpb
xchg
imul
test
adc
in
pop
sahf
inc
or
idivb
mov
cwtl
xchg
lret
cmp
rolb
sbb
cmp
nop
cmp
in
mov
adc
ljmp
or
cs
add
add
aas
orl
iret
cltd
dec
and
les
pusha
inc
sbb
call
sub
scas
sub
adc
scas
sub
fdivs
cmpsl
cmp
lds
jg
movsb
js
add
movsl
sti
xchg
xor
or
enter
aam
cmp
fistl
fyl2x
add
cmpsl
mov
loopne
lahf
lods
adc
repz
sarb
jbe
push
dec
push
adc
inc
les
loope
add
xor
adcl
call
mov
fcos
scas
pusha
cmp
sti
jl
enter
sub
pushf
xchg
xorb
add
mov
cld
jnp
add
xor
lahf
sbb
pop
and
add
xor
popf
pop
adc
rep
fidivl
sahf
inc
ss
es
xchg
shrb
insl
jb
push
xor
xchg
jmp
add
mov
add
push
or
push
stos
mov
pop
scas
xchg
je
mov
inc
data16
mov
bound
dec
jg
add
xor
test
and
cmp
mov
fcompl
mov
rorb
mov
add
outsb
iret
pop
sbb
fsubs
xchg
xchg
and
add
ss
cmpsl
call
rcrl
and
fildl
xor
lock
jo
mov
outsb
fwait
dec
add
inc
xor
xchg
loopne
mov
sbb
clc
call
push
pop
sbb
inc
jo
mov
cmpsl
dec
add
les
or
pop
push
mov
add
push
xchg
and
jmp
xor
sub
inc
fnstsw
pusha
or
sbb
loopne
shll
sub
in
cli
aam
jp
sbbl
out
and
lds
mov
inc
mov
subl
adc
shrb
sbb
pop
pop
movsb
mov
xor
dec
loope
pop
pop
test
es
add
lret
mov
adc
cli
test
sarb
and
rcrb
jecxz
rcrb
push
cmc
fdivs
jle
cmp
enter
mov
jge
in
repz
incb
xor
add
lahf
adc
fadds
jmp
sub
lock
les
aaa
out
xchg
sbb
mov
scas
aas
rcrb
outsl
jp
decb
add
into
sarl
jecxz
shlb
mov
push
pop
sti
fucom
shlb
fists
jo
and
mov
or
fisttpll
xchg
andl
and
mov
push
out
jecxz
pop
aam
in
lahf
sub
scas
add
pop
cltd
jno
jp
int3
ljmp
pop
add
in
hlt
in
leave
inc
or
lock
cltd
jmp
lea
mov
inc
mov
add
mov
clc
int3
and
xacquire
jb
mov
aas
adc
and
js
push
push
lods
loopne
inc
jno
outsb
xchg
cltd
add
sub
out
sbb
adc
xchg
adc
and
test
jno
xor
subl
sub
mov
adc
add
mov
les
lahf
mov
test
arpl
jl
dec
jae
mov
iret
clc
push
ror
xor
pop
fbstp
pop
cmp
jo
sbb
jae
loope
jge
add
ret
shlb
inc
icebp
jno
add
insb
iret
loop
movlpd
xchg
pop
xchg
test
cmp
add
lret
and
jle
mov
and
or
push
adc
add
test
push
aas
aas
and
aam
repnz
cmp
lret
add
jl
dec
pop
clc
inc
add
jns
icebp
cmp
call
cmp
jnp
mov
out
sti
push
movsb
xchg
jns
or
lret
xchg
sub
push
adc
mov
adc
mov
js
fildl
mov
jae
mov
cmp
enter
outsb
dec
xor
out
leave
cs
loopne
mov
clc
add
cwtl
mov
jnp,pn
dec
add
mov
add
cmp
xor
cmc
fiaddl
dec
ja
inc
imul
mov
push
insl
stos
dec
jle
add
mov
and
sub
fnstcw
xor
nop
push
dec
outsl
xchg
movlps
or
lret
fidivs
mov
xchg
lods
add
mov
jge
test
mov
or
xor
enter
inc
cmpb
push
js
inc
out
lock
gs
mov
cmp
push
out
dec
add
xor
enter
lret
pop
push
push
addl
lcall
test
push
test
mov
push
sbb
dec
cld
mov
rclb
sarb
je
inc
sub
sbb
ss
dec
dec
mov
or
add
cmp
cmp
dec
xchg
or
out
ss
imul
or
ret
and
mov
aas
repnz
add
lods
pushf
cmc
call
enter
pop
dec
sub
mov
add
out
and
fists
xor
sbb
jmp
mov
xor
sbb
add
cmc
pushf
andl
inc
push
mov
enter
xchg
xchg
xorb
ds
jmp
sbb
cltd
add
add
rcll
mov
adc
push
dec
in
arpl
jp
push
sub
pop
rclb
and
call
mov
imul
icebp
syscall
cmpsb
adcl
rolb
xlat
fnsave
lahf
jo,pt
push
in
bndstx
fimuls
enter
imul
pop
push
clc
add
int3
add
ljmp
push
inc
add
jo
hlt
popf
andb
inc
and
rolb
gs
cmp
add
sbb
jno
jo
pop
mov
lock
jmp
out
test
add
cmp
pop
add
mov
mov
ljmp
mov
add
or
in
mov
jnp
add
jb
addr16
or
and
fldt
in
push
add
in
pop
add
inc
dec
jmp
pop
out
jae
ss
ror
dec
xor
jne
mov
addb
arpl
std
cmp
aaa
sub
ja
inc
add
je
shl
mov
or
mov
xor
sbb
int3
cwtl
pop
xor
sub
mov
aas
insb
push
push
pusha
dec
sbb
or
js
movsl
shll
dec
mov
cmpsb
cmc
xlat
cli
call
in
test
push
nop
das
popa
es
cmpsl
out
mov
add
js
lahf
and
repz
add
insb
fiaddl
in
mov
leave
lret
push
mov
hlt
push
loope
and
mov
out
adc
add
adcl
inc
filds
and
add
mov
add
nop
xor
mov
ret
ljmp
mov
xor
jge
addl
insb
sub
pop
sub
mov
sti
xlat
movsl
or
pop
push
adc
bound
popl
mov
add
mov
arpl
andl
ficoml
jmp
rclb
gs
inc
fstl
in
aaa
or
xchg
jecxz
jle
cmpsl
add
push
cwtl
jle
jo
inc
or
fwait
jge
shlb
adc
into
int3
sub
add
push
cmp
leave
das
add
push
jae
push
shrb
shll
and
add
xlat
mov
mov
pop
shrb
mov
andb
jmp
outsl
xchg
mov
icebp
arpl
sbb
nop
scas
or
fsubrs
xor
addb
shlb
into
imul
pop
inc
mov
add
cmp
jnp
or
dec
ja
xor
in
jno
cmpb
jle
lock
das
jnp
add
out
nop
aad
sahf
mov
cwtl
lea
pop
xchg
test
jbe
andb
jp
sbb
ror
jp
sahf
dec
popa
inc
add
ja
jns
push
inc
and
xchg
sub
ret
push
pop
fisubl
jne
or
cmp
push
mov
fs
out
incb
sbb
adc
hlt
add
rcl
xor
pop
out
loope
and
mov
stc
pop
es
push
push
aam
or
fs
sub
pop
push
mov
cltd
jmp
cmp
shlb
push
and
pop
cli
inc
arpl
lods
clc
mov
mov
and
aas
repz
mov
enter
mov
je
xchg
arpl
popf
xchg
jae
bound
sub
test
xchg
jne
mov
rclb
xchg
and
xor
cld
push
adc
add
mov
fs
mov
hlt
sti
and
mov
inc
jecxz
imul
or
mov
xor
test
mov
cwtd
or
mov
repnz
sbb
adc
jns
or
adc
lds
and
gs
nop
js
fisubs
rcr
xchg
lods
add
jl
mov
pop
jno
cltd
lret
movsl
mov
adc
shrb
xorl
xor
or
loopne
dec
adc
jle
jle
push
xor
or
out
xor
and
sub
gs
inc
or
sub
sbb
adc
fs
or
push
add
mov
dec
lods
addb
xchg
mov
cmp
test
pusha
and
sbb
shr
rcrb
lock
add
outsb
jae
jbe
jnp
inc
pop
pop
or
scas
loop
add
push
mov
and
in
mov
in
loopne
sub
or
sub
sub
lock
out
add
cmp
ljmp
xchg
mov
xchg
js
inc
push
mov
and
imul
fmuls
mulps
iretw
fisubl
pop
inc
cmp
stc
push
sbb
pop
cmp
rcrl
mov
add
call
adc
add
arpl
sbb
ret
dec
lods
push
punpckhwd
pop
push
xchg
and
push
int
add
into
adc
cmp
lock
jnp
adc
int3
sbbb
cwtl
jo
dec
mov
sti
fldenv
add
mov
enter
cmp
inc
cltd
mov
add
dec
enter
sub
adc
or
inc
mov
int3
or
test
add
xlat
push
cmp
sti
dec
dec
loopne
cmc
or
or
add
mov
add
aas
pop
mov
pop
push
jnp
sbbl
addl
popl
mov
add
loope
bound
push
cmp
hlt
adc
outsl
adc
in
sub
pop
mov
mov
pop
insb
dec
adc
add
lret
lods
loope
add
dec
pusha
adc
call
test
add
test
mov
test
xor
and
lock
mov
shll
sbb
mov
sbb
in
pop
arpl
pop
ss
lret
xorb
insb
mov
dec
sbb
sub
imul
mov
sub
mov
popf
add
add
sbb
xchg
sti
xchg
adc
jmp
push
xor
push
cwtl
loopne
fistpll
fstpl
fcompl
jge
hlt
mov
add
cmp
sahf
fcmove
or
pushf
sbbb
add
fs
imul
dec
cmp
xor
cmp
pop
adc
mov
dec
std
pcmpgtd
scas
sbb
add
and
xor
add
pop
lock
popa
call
add
adc
add
loop
xchg
xchg
xor
push
mov
pop
fdivrs
dec
add
and
orl
pop
push
mov
jnp
out
ss
pop
out
sar
inc
iret
scas
push
sarb
hlt
xor
adc
and
jae
loopne
xor
pop
mov
cli
pop
adc
push
inc
push
inc
cmp
and
inc
xlat
pop
leave
push
mov
stos
cmp
jmp
in
add
insb
mov
xor
jecxz
ljmp
adc
sub
loop
pop
cld
in
add
aad
sbb
inc
or
hlt
and
rcr
clc
and
sbb
or
xor
enter
mov
inc
out
and
jb
int
addr16
testb
mov
mov
sbb
push
dec
or
xlat
aas
add
xchg
jno
subb
pop
lret
idivb
lahf
xor
mov
leave
pop
push
enter
xor
aam
pop
add
mov
and
iret
movsl
add
movsl
pop
jnp
add
add
test
jno
xor
cs
xor
adc
add
scas
or
add
jmp
adc
fsubp
dec
pop
jno
mov
or
push
sahf
pop
and
add
inc
mov
mov
insl
mov
add
inc
push
and
fcom
sbb
arpl
pushf
mov
jl
fisubrl
andl
inc
push
mov
rorb
add
xchg
pop
sbb
cwtl
test
adc
or
inc
jp
add
aam
add
add
stos
loopne
or
xchg
incb
in
jb
xor
clc
pusha
stos
packssdw
fmuls
push
jp
add
push
aad
in
add
test
add
xchg
push
rcr
xor
and
andb
and
nop
mov
testl
xchg
or
pusha
cmpsl
or
bound
push
mov
fs
jno
add
or
push
lret
dec
or
push
xor
adc
ljmp
lods
std
icebp
push
fwait
add
cmp
fmuls
rcr
pop
inc
mov
cwtl
setle
sbb
add
mov
xchg
psrlw
mov
lods
inc
xor
flds
cmp
mov
adc
insl
rorl
pop
jecxz
js
xor
loop
xchg
jno
push
es
inc
popf
mov
pop
and
mov
lret
push
data16
or
out
pop
add
adc
insb
cli
aas
dec
lret
aas
int
les
mov
gs
jmp
add
xor
push
jb
xor
mov
push
insb
sbb
pop
nop
mov
adc
dec
bound
add
pushf
int3
fidivs
add
add
dec
daa
cmp
xorb
stos
inc
jnp
mov
cmc
sbb
adc
add
or
dec
stc
fwait
add
rol
sub
je
out
test
inc
test
xchg
hlt
into
add
sub
fwait
cmp
mov
jge
sarb
movsb
cmp
pop
pop
scas
push
out
push
mov
out
mov
or
or
sbb
sub
cmp
les
cmp
popa
divps
xchg
or
xor
clc
mov
sbb
icebp
sbb
insb
cmp
cmp
es
fiaddl
jns
mov
ret
shrb
jle
inc
pusha
dec
aad
sub
xor
sbb
sbb
lods
adc
idivl
movsb
adc
mov
out
sbb
lret
cltd
cs
js
fcomi
adc
inc
cmc
sbb
push
add
mov
add
shrl
imul
jg
mov
cmp
cmpsb
cwtl
mov
sbb
or
sti
pop
mov
outsb
push
add
fistpl
mov
mov
or
pop
xchg
mov
aam
sbb
pop
push
lods
mov
push
mov
xor
mov
popw
into
mov
insb
sub
ja
mov
fs
add
mull
hlt
lret
shlb
adc
add
and
cs
sub
rcrl
adc
or
and
cld
je
dec
xchg
pop
inc
cwtl
cli
cmp
ret
adc
inc
repnz
push
dec
imul
lret
cmp
dec
mov
adc
dec
mov
jg
addb
push
and
mov
outsb
cmp
jo
xlat
rcrl
mov
enter
lock
jle
repnz
and
fsubrl
xor
cmc
adcb
inc
cld
imul
iret
cwtl
xchg
andps
xor
dec
xchg
ja
and
pusha
and
and
push
add
test
les
mov
xor
ret
and
push
mov
add
push
adc
cmp
mov
ret
dec
in
pop
push
mov
mov
rcrb
sarb
cld
cmp
mov
mov
andl
pushf
xchg
xor
sti
dec
xor
sbb
loop
xchg
sub
mov
inc
or
aam
addl
dec
add
mov
mov
popa
cmp
arpl
sahf
sbbl
icebp
xchg
xchg
out
pop
mov
dec
add
dec
pop
into
mov
and
mov
adc
mov
jbe
add
aam
or
adc
adc
inc
jle
add
sub
inc
xchg
cwtl
clc
mov
mov
xchg
add
bnd
fsubl
add
loop
hlt
aam
fdivs
adc
inc
int3
or
pop
into
loope
inc
cld
cmpsl
pop
mov
dec
mov
adcb
cwtl
or
out
arpl
icebp
sbb
cmp
daa
testb
pop
or
and
cmp
popa
imul
hlt
mov
daa
push
sub
inc
adc
js
dec
lret
fdivs
sub
inc
inc
jp
mov
movsl
test
dec
mov
cld
add
jbe
push
pop
pop
or
or
mov
movsl
sub
push
push
adc
jnp
int
mov
mov
iret
pushf
clc
xor
in
scas
pushf
jne
and
or
leave
sub
dec
dec
out
dec
or
insb
ret
negl
cld
insb
sbb
dec
mov
adc
in
and
and
or
and
mov
or
cmpsl
xor
mov
lea
add
out
pop
jge
andb
mov
adc
xor
loope
mov
imul
jg
or
stos
dec
pop
add
std
je
aam
pop
stos
mov
adc
sub
xchg
in
sbb
cs
fisubrs
or
test
fldcw
test
jmp
push
and
out
mov
std
cmp
and
sub
sbb
push
arpl
and
pop
sub
xor
nop
adc
cmp
roll
push
cmp
dec
jmp
jns
pop
rolb
push
add
fwait
jg
shlb
sarb
aas
push
sub
mov
shlb
mov
xchg
inc
add
jle
movsb
ja
cmp
mov
mov
shlb
lahf
orb
jns
xor
or
dec
rolb
jno
xchg
aad
inc
addr16
push
gs
jmp
in
pop
shlb
loopne
cmp
jl
mov
dec
push
popf
mov
sbbl
fadd
pop
cmp
insl
cmp
test
inc
xor
jbe
ret
punpcklwd
xchg
mov
adc
loop
jb
sbb
pop
dec
out
or
push
mov
xchg
addl
in
or
jp
jo
xchg
hlt
or
mov
push
test
adc
cmp
pop
add
das
push
xchg
xor
andl
aad
sahf
xchg
add
sub
in
sbb
mov
data16
lea
sti
add
loope
add
jp
cli
dec
mov
sbb
sub
lcall
jnp
mov
or
add
xor
pusha
mov
add
cltd
push
push
popa
jnp,pn
pushf
jp
outsb
jno
jb
add
and
xchg
in
into
clc
and
std
test
jae
mov
pushf
imul
mov
das
xor
xor
mov
movsb
add
aam
adc
sar
jmp
data16
xchg
xchg
test
int3
mov
or
out
mov
push
filds
sarb
mov
orb
sub
sbbb
jecxz
jb
jg
mov
mov
or
xchg
xor
or
pop
adc
loop
and
push
push
xor
inc
lret
adc
inc
dec
out
xor
mov
dec
and
cmpsl
cmp
pop
outsb
in
pusha
int
mov
or
adc
scas
out
dec
add
cmp
sub
fxch
pop
xor
cli
xchg
sbb
fcoml
sub
dec
mov
das
pop
jae
or
jbe
mov
rorb
add
sub
out
aaa
and
jbe
movsb
push
lcallw
push
in
mov
out
jl
sbb
test
orl
in
lcall
push
push
ja
cmp
mov
cmp
mov
pop
add
outsl
and
mov
xor
pop
lsl
ja
mov
xchg
sbbl
lahf
and
jge
mov
pop
mov
mov
pop
sbb
pushf
inc
add
xchg
pusha
jge
stc
sub
sti
adcb
icebp
or
add
mov
xor
add
clc
adc
fldcw
adc
push
push
cltd
lock
mov
or
mov
in
or
in
stos
and
shlb
mov
push
push
insb
movsb
pop
sub
cwtl
rorl
jae
stc
push
enter
int
dec
mov
xadd
or
cltd
lock
enter
adc
ret
cmp
mov
mov
push
test
mov
in
jge
dec
mov
test
fwait
lret
rolb
shlb
xlat
nop
dec
dec
pop
leave
movsb
jbe
add
cmp
mov
arpl
or
or
je
ja
add
mov
aas
adc
roll
xor
les
iret
add
jg
insl
pop
aaa
enter
dec
stos
mov
mov
sbb
movsb
jns
pop
test
push
inc
test
jmp
fistpll
inc
and
dec
push
loop
inc
or
sbb
daa
pop
mov
cmp
insb
sbb
jge
inc
add
and
dec
js
sub
enter
pop
out
cli
add
stos
jge
lods
jnp
add
adc
fwait
aas
call
push
push
neg
iret
dec
dec
fldl
sub
das
push
add
inc
and
aaa
push
and
jo
in
pop
lds
iret
daa
ja
cmc
add
xor
mov
xchg
std
mov
mov
sub
aas
scas
mov
iret
sbb
push
or
jne
lea
lea
out
jbe
add
jl
xchg
les
add
mov
lret
and
ljmp
sbb
xchg
loopne
sbb
sahf
pop
and
mov
lret
icebp
ss
je
xchg
sub
lds
pop
sub
mov
pusha
rcr
cs
pushf
iret
push
mov
int3
jp
lcall
and
or
xor
shl
outsl
xor
inc
fldl
fwait
ljmp
loop
clc
or
aam
add
lock
mov
mov
adc
xlat
nop
or
ljmp
test
mov
addb
into
xchg
and
mov
xchg
loope
xchg
test
idivb
ret
xlat
add
jo
mov
and
shl
sbb
add
leave
data16
jb
mov
cwtl
jg
or
add
ljmp
add
es
adc
sti
shlb
pop
inc
or
sub
mov
jo
and
iret
pop
and
push
xor
lods
cwtl
mov
jecxz
or
xchg
sti
adc
call
sbb
xchg
jge
lock
xchg
je
xchg
into
xchg
jo
sub
xchg
es
dec
jle
xchg
scas
mov
inc
out
stc
jno
sub
lods
outsl
sbb
and
fmul
in
and
jle
mov
nop
gs
scas
jno
or
data16
into
cmc
daa
test
notl
bound
sbb
xchg
jg
mov
jl
cmp
sub
jns
test
cmp
add
int3
xor
cwtl
jp
add
mov
dec
and
adc
add
int3
push
xchg
add
pop
adc
sub
divb
add
cmp
push
stc
out
filds
xchg
out
pop
adc
cltd
stos
cwtl
pushf
stos
cmp
cld
stc
adc
push
rcr
popf
hlt
xor
mov
shlb
or
shlb
aas
jb
mov
inc
fiaddl
loope
test
mov
add
push
xor
xchg
dec
dec
ds
adc
stc
and
lcall
rclb
testl
loopne
mov
add
stc
add
inc
mov
or
pop
cmp
pusha
sub
or
cmp
sbb
push
test
add
dec
int
popl
hlt
jae
inc
or
popf
xchg
and
cmpl
and
in
inc
push
jmp
add
mov
xchg
aam
jmp
and
add
mov
cmpsl
js
adc
and
out
add
jle
pop
ljmp
mov
push
add
jg
mov
dec
test
add
jae
sahf
daa
cmp
mov
xor
test
ret
pop
xor
outsl
lret
pop
div
mov
loopne
adcb
inc
dec
loopne
mov
lock
ret
jmp
mov
inc
shrl
insb
jle
mov
or
xchg
cmp
pop
test
mov
mov
add
daa
stos
in
addb
mov
mov
inc
pop
fcoms
ds
pop
bound
and
add
or
fsubs
stos
cmpsl
push
mov
jp
mov
push
add
ret
rcl
sbb
lea
sbb
dec
outsl
xchg
xchg
call
stc
pop
ja
mov
pop
pusha
sub
and
lds
andl
dec
stos
aas
sbb
sub
arpl
clc
xor
andb
scas
xchg
test
in
dec
sbb
cmp
shrl
jo
push
add
das
dec
cwtl
add
mov
pop
rorl
mov
add
bt
stos
xchg
cwtl
add
xchg
in
sub
jne
or
push
pop
rclb
stos
imul
add
pusha
dec
lahf
imul
pop
xor
add
addb
aaa
enter
ror
cltd
pop
rcl
inc
xchg
neg
call
insl
ss
adc
push
test
add
sbb
xchg
xchg
add
lret
or
mov
mov
or
add
popa
xchg
add
add
sahf
and
xchg
in
add
rcrl
in
mov
cli
cs
shl
lahf
xchg
sub
jle
dec
cmpl
pop
xchg
dec
mov
and
xchg
adc
xchg
mov
inc
jb
lahf
mov
mov
daa
push
outsl
ror
xchg
rolb
adc
sub
cmpsb
cmp
sub
fldl
bound
lods
in
dec
and
arpl
clc
aad
jne
push
addb
inc
ret
psubusw
cmpb
jecxz
jno
pop
test
mov
xchg
daa
xchg
incl
mov
out
aad
xor
stc
pop
add
add
add
cmpsl
inc
sub
inc
outsb
pop
xchg
test
and
jp
add
mov
fnstcw
or
scas
loopne
and
xor
mov
xchg
imul
rolb
mov
pop
lret
mov
mov
inc
lds
js
adc
fbstp
or
les
add
jbe
orb
add
push
outsb
jnp
aad
push
cmp
imul
add
adc
dec
or
call
add
repnz
cli
dec
lret
xor
xor
pop
addr16
mulb
xor
xchg
cmpb
push
addb
sbb
add
cmp
es
add
cmp
push
stos
fsub
inc
xlat
mov
sub
xor
xchg
in
mov
ret
sub
lret
lods
add
push
sarl
and
ja
subb
or
test
dec
daa
cmp
imul
add
sub
add
int
dec
jns
sub
mov
lret
sbb
pop
cli
les
lea
or
sbb
pop
fs
add
in
cwtl
xchg
lret
jge
cs
add
push
add
cmp
test
test
das
or
fucomp
imul
stc
push
mov
or
sub
sbb
xchg
jle
imul
pop
or
pop
lcall
adc
pop
add
xor
sub
fstpt
jmp
add
push
sub
dec
roll
shl
xor
lods
or
jp
lcall
in
jp
add
xor
movsb
lret
es
inc
dec
dec
jnp
or
mov
mov
maxps
fwait
lock
scas
xchg
shlb
lahf
jmp
adc
repz
and
lcall
xor
popf
add
shl
sub
inc
das
pusha
jge
mov
xor
rol
pop
sbb
lods
test
fwait
mov
xchg
mov
pop
orb
fiadds
cmp
enter
js
xor
sub
push
xchg
mov
je
lret
mov
gs
or
aam
add
mov
cmp
bound
inc
stos
in
sbb
push
adc
sub
js
mov
dec
mov
mov
jle,pn
jae
mov
ret
dec
fistl
addl
mov
in
sbb
fdivr
add
dec
movsl
inc
sub
pop
or
cwtl
inc
add
ja
mov
stc
dec
adc
mov
pop
loop
fcmovb
fxch
and
push
addb
push
fsubl
inc
cmp
imul
jp
dec
fimuls
dec
repnz
mov
movl
movsb
das
add
stc
nop
out
sbb
divb
out
fsubrs
or
leave
repnz
xchg
addb
add
cmpsl
test
mov
pop
xchg
sbb
fs
and
stos
movb
leave
add
pop
pop
mov
add
mov
aad
pop
or
pop
or
mov
dec
test
sub
mov
test
or
not
icebp
fldl
fs
pop
popa
and
or
mov
mov
dec
dec
cmpsl
imull
out
sahf
rorb
divl
or
xor
add
add
or
fucom
ret
push
jbe
add
xor
icebp
mov
cli
cld
call
mov
scas
inc
shr
push
psrad
jge
dec
or
jl
xchg
icebp
addr16
jmp
clc
push
cmp
mov
popa
inc
inc
pop
push
mov
adc
sbb
mov
rolb
shll
aaa
adc
sahf
addps
outsb
sti
lods
dec
add
in
pop
push
pusha
jg
mov
sbb
sahf
out
outsl
sub
adcb
jecxz
std
rol
sub
add
mov
add
lock
pusha
call
neg
call
lret
dec
addb
and
negb
cmp
mov
inc
push
xorl
add
lret
lods
ljmp
lcall
add
testb
aas
les
clc
add
mov
stos
loop
add
lahf
mov
mov
sub
sub
pop
push
mov
push
mov
out
jo
pop
sub
push
pop
mov
jo
pop
mov
or
mov
add
vaddss
insl
xor
jl
rcrb
or
in
hlt
and
mov
sub
sti
or
lcall
cwtl
add
adc
xchg
push
stc
add
inc
xchg
add
inc
js
pop
adc
adc
pop
jmp
adc
add
je
push
test
ficoml
sbb
shlb
mov
add
cmp
ljmp
sub
inc
jl
sbb
and
mov
push
outsl
testl
and
pop
mov
lahf
lret
cli
mov
out
cmp
cmp
mov
jb
cld
mov
mov
fsubrl
orb
fistps
adc
jo
jmp
loop
rcll
js
mov
dec
aaa
lret
xchg
xor
push
mov
out
and
int
add
and
adc
jns
in
fmul
stc
add
and
lods
xor
add
dec
pop
mov
jecxz
xchg
sub
mov
mov
sbb
add
jne
cli
movsl
pop
mov
cmpsb
lods
add
adc
pop
pop
pop
clc
std
daa
xor
cld
sub
sbb
ret
int
inc
stos
push
or
xor
dec
lahf
bound
outsl
or
add
repnz
mov
jl
add
outsb
jnp
cmc
add
cmp
dec
jb
and
int3
fnstcw
or
xchg
cmp
dec
sbb
lock
pop
xchg
sti
hlt
sbb
scas
push
xor
out
jne
add
and
leave
lgs
stos
out
dec
lods
das
lahf
mov
cmp
sbb
inc
mov
push
pop
fbld
xchg
add
mov
or
jle
push
add
loopne
movsb
test
cmc
mov
and
outsb
jno
and
push
add
mov
xchg
inc
ja
xchg
in
shl
repz
jb
xor
add
notl
xchg
push
cwtl
cmp
add
shrl
pop
cmc
add
lret
sub
pusha
mov
gs
enter
sbb
shlb
inc
ja
push
add
pop
arpl
call
aaa
in
xchg
cmp
cmpb
add
sub
sub
nop
mov
xor
aam
mov
dec
mov
out
lea
inc
inc
sub
jmp
inc
pop
mov
push
jo
mov
adc
rolb
xor
push
insl
sub
int3
out
sbbb
ss
pop
pop
add
cmpsl
add
xor
sbb
imul
dec
pop
stc
push
inc
jbe
movsl
dec
add
sbb
inc
jo
dec
add
dec
stos
jl
in
enter
nop
xor
cmp
andb
imul
mov
cs
testb
inc
imul
ds
inc
dec
jne
fsubrl
stc
outsb
stos
sub
int3
sub
shl
cmp
jne
xchg
cli
lods
mov
imul
sbb
shl
das
push
jg
sarb
dec
dec
add
je
mov
sbb
xchg
lods
test
xchg
das
and
add
popa
rcrl
mov
in
sbb
cld
add
faddl
daa
and
push
xchg
clc
in
sub
shl
ss
adc
add
mov
aas
orl
jno
lea
jmp
aaa
fucomip
inc
in
adc
fisubl
and
stc
add
outsl
add
mov
andb
out
in
dec
add
ljmp
push
scas
cmp
mov
notb
and
push
bnd
insl
xchg
sub
mov
sub
out
roll
mov
mov
sbbb
jge
insb
dec
test
scas
cmpsb
call
mov
pop
out
enter
add
jno
push
insb
add
cmp
iret
fcmovnb
xchg
inc
jge
or
xorb
push
push
into
testb
lods
push
fsubp
adc
ret
pusha
mov
cmpsl
add
daa
and
in
test
xchg
jno
insl
gs
hlt
xor
xchg
add
cmpsl
xor
test
mov
mov
addb
jg
mov
lods
jo
lcall
js
cmpl
adc
leave
push
sub
push
incb
and
add
jmp
mov
mov
in
dec
jb
mov
daa
in
push
rorb
mov
or
cmpsb
mov
cmp
lods
or
mov
cs
mov
int
adc
call
into
loopne
mov
add
ja
push
cmpsb
or
xchg
daa
lock
je
jno
cld
ds
sub
sub
mov
add
or
addl
in
add
sbb
nop
xchg
addr16
cmp
mov
mov
rclb
test
mov
adc
jns
loopne
in
pop
mov
sub
inc
inc
addl
loope
mov
pop
popa
rorb
popf
orb
call
xchg
test
dec
fnstenv
insl
sub
push
cmp
xor
repz
add
jae
ret
gs
je
jnp
mov
adc
daa
ret
dec
pextrw
jge
pop
imul
dec
fs
jno
sbb
sub
cmp
testb
mov
adc
mov
dec
sub
add
iret
xor
mov
xor
mov
cld
xor
arpl
ret
mov
mov
inc
jg
inc
pusha
push
divl
sub
lahf
lods
mov
and
aad
pop
mov
xor
jle
jno
fildl
aad
lock
adc
mov
ljmp
lds
loope
push
ja
or
data16
pop
mov
das
lcall
fmuls
add
jmp
inc
dec
mov
xor
cmp
xor
sub
pop
mov
jne
or
mov
cmpb
mov
pusha
ja
pop
lods
in
clc
clc
mov
inc
cwtl
and
icebp
popf
andb
dec
pop
mov
mov
mov
les
push
out
shrl
add
popa
sahf
nop
xor
not
addr16
sbb
adc
lea
push
movb
fcomip
sbb
push
fdivl
xor
mov
mov
add
fwait
lea
xchg
add
and
mov
adc
mov
lods
adc
loopne
add
out
adc
add
scas
pop
and
int
mov
rcrb
out
jle
sub
ffree
xchg
adc
mov
push
mov
bound
sub
divl
or
pop
pop
and
cmp
push
pop
je
adcb
mov
repnz
in
mov
adc
push
xor
lret
jge
mov
inc
xor
push
sbbb
inc
cmp
lods
adc
shlb
addb
adc
cld
lods
or
or
addr16
sbbl
fldcw
mov
loope
popa
xchg
or
or
mov
pop
add
shrl
leave
lahf
enter
dec
fdivp
add
test
mov
cmp
xchg
dec
pop
mov
adc
mov
pop
cmp
mov
aad
sub
xor
dec
imul
xchg
mov
adc
fsts
inc
pop
mov
xor
mov
dec
sub
and
insb
call
xchg
mov
pop
data16
sbb
add
xor
icebp
inc
jle
sub
int
adcb
nop
or
mov
dec
mov
in
mov
call
add
cs
pop
adc
cli
icebp
test
cmpl
dec
dec
mov
add
fdivrl
push
sbb
je
popl
sub
pop
cltd
test
pop
clc
pop
xchg
add
mov
mov
xor
dec
and
pop
orl
pop
add
daa
sarb
sbb
lea
inc
xor
cmpsb
sbb
mov
adc
mov
fimull
test
inc
push
mov
push
mov
ss
add
popf
cltd
pushf
mov
cwtl
and
test
fsubs
adc
xor
fmull
inc
js
rcr
in
lods
mov
sub
shl
dec
mov
jge
add
push
sbb
int
add
cwtl
pop
fsubl
enter
stos
add
sarl
and
cmpsb
xor
sarb
stos
gs
bound
jge
add
out
xchg
nop
add
adc
gs
cmp
sbb
jg
out
push
push
addr16
xchg
and
jmp
ljmp
aam
lock
mov
jo
sub
shl
or
clc
sti
jecxz
dec
push
dec
mov
xchg
xchg
inc
jl
sub
xor
xchg
fmull
cmp
out
xchg
stos
cmc
sub
adc
dec
add
ja
dec
push
xor
xchg
and
imul
imul
fcomp
lods
or
and
xchg
lret
lock
arpl
imul
sbb
push
loopne
lret
xor
inc
ja
mov
add
and
int
inc
adc
add
push
out
subb
ljmp
dec
xor
roll
inc
ja
mov
rcrb
lret
and
and
in
test
pop
pop
mov
or
rcr
add
ja
mov
xchg
cs
push
in
cmpsl
jmp
mov
add
ljmp
mov
pop
dec
dec
inc
dec
pop
es
add
jmp
les
sbb
adc
and
and
mov
xchg
push
ret
mov
cld
cmpsl
add
xchg
mov
mov
add
nop
adc
pusha
adc
jg
clc
popa
je
xchg
mov
xchg
dec
xchg
cmp
clc
jno
or
xchg
call
sbb
xchg
cld
and
lock
pop
pusha
pop
aad
ss
pop
dec
mov
add
and
add
pop
push
xchg
or
daa
repz
mov
or
aas
dec
jb
mov
jno
pop
cmp
cmp
sbb
mov
pusha
pcmpeqw
adc
and
mov
mov
js
shrl
inc
scas
push
add
fsubrl
pop
mov
testb
dec
dec
fdiv
dec
int
das
orl
inc
or
mov
push
sub
pop
jge
test
cld
inc
push
adc
and
ret
xchg
xorb
popa
xor
xor
cmc
pop
pop
add
dec
mov
adc
loop
pop
adcl
push
test
sbb
cs
sahf
adc
push
mov
push
mov
add
pop
out
sub
ds
andb
push
xor
add
enter
pushf
push
mov
fistpl
lmsw
or
or
mov
pop
cmp
jg
and
add
push
xor
out
cmp
or
jecxz
loope
push
add
lock
and
pusha
push
mov
or
xlat
and
rolb
ret
or
push
adc
dec
loopne
jns
jne
dec
cwtd
xchg
jne
pop
pop
add
inc
pop
loopne
add
pop
pop
pop
shl
and
dec
cltd
int3
and
nopl
dec
clc
in
jl
add
adc
jb
xchg
adcb
push
cltd
stos
push
lods
jp
xchg
subb
lcall
outsb
inc
fwait
inc
ljmp
test
lcall
inc
cwtl
inc
call
add
addb
inc
pusha
popf
xchg
xor
lock
cmpsl
mov
outsl
cmp
mov
loope
add
pop
fldl
sub
fsub
sub
int3
std
mov
adcl
jnp
test
inc
daa
pop
inc
movsb
cmp
sbb
ficompl
fdivs
test
mov
xchg
mov
xor
add
xchg
xor
or
loope
dec
or
mov
shll
jb
rcl
mov
stos
or
add
les
pop
push
ret
sarb
sub
js
inc
mov
mov
into
aad
and
adc
rcrb
mov
mov
pushf
jno
add
dec
cmp
and
stos
mov
cmp
fs
sub
and
js
ret
lcall
add
std
xor
add
stos
push
or
mov
mov
das
xchg
sub
in
push
out
or
mov
imul
xchg
pop
lds
or
popl
or
cld
cmpsl
pop
pcmpeqw
jecxz
add
lods
test
or
loop
mov
ret
mov
pop
inc
sbb
addb
in
sub
cmp
popf
loopne
out
pusha
push
pushf
xchg
jae
add
push
xor
adc
gs
loop
fs
mov
ret
jg
push
push
rol
lahf
ljmp
sahf
push
inc
xor
jae
sbb
cmc
loopne
pusha
mov
mov
xchg
shl
lock
std
ds
cmc
add
push
inc
lods
mov
add
jo
imul
push
mov
push
movsl
mov
cmp
cmpl
daa
fcmovnu
jl
ss
popf
jmp
dec
mov
ds
repnz
nop
push
push
inc
lds
ljmp
shlb
push
cmpl
sti
xor
jecxz
xchg
jo
mov
addb
pop
ljmp
inc
scas
movsb
or
push
add
lea
int
jg
pop
mov
cmp
addb
push
jle
sbb
nop
push
mov
ret
add
xchg
mov
push
insb
pop
movsb
adcl
dec
movl
bound
mov
jae
inc
das
jmp
jg
jecxz
and
push
push
lock
push
dec
or
aaa
inc
jnp
fsubs
xor
jecxz
jge
mov
jno
xchg
rol
push
mov
repz
sbb
jns
xor
adc
insb
sbbb
cltd
add
ret
in
push
add
push
outsl
and
cmp
pop
xchg
loop
push
jbe
push
adc
ljmp
lret
and
jg
jne
arpl
outsb
sub
mov
push
insl
shrb
out
adc
push
sub
mov
xchg
daa
add
shr
daa
test
push
or
ja
sub
push
sub
in
out
push
cmp
lret
and
jae
incl
fincstp
lahf
nop
sub
add
push
sbb
in
stos
dec
cmp
push
sbb
or
dec
push
push
pop
cmp
scas
pop
rol
icebp
adc
iret
sarb
push
add
dec
shll
add
push
sub
lock
fs
ret
add
xchg
add
sbb
roll
popf
sub
inc
lock
addb
insb
sub
iret
loope
add
jb
and
and
stc
pop
hlt
mov
adc
sbb
ss
add
or
sbbl
stos
jne
inc
pop
jae
cmp
data16
mov
loopne
jg
iret
das
cmp
rcrb
or
fldcw
lret
lea
fsub
fidivrs
lock
jp
sub
in
inc
aam
daa
call
xchg
sbb
dec
mov
pusha
sbb
pop
xorb
sub
aas
roll
push
pop
mov
sub
incl
sub
add
cltd
leave
push
jb
mov
xchg
sub
nop
xor
pop
imul
pop
pop
jnp
pop
popf
xor
xchg
pop
in
xor
mov
sbbl
mov
sbb
test
cmpb
and
decl
cld
add
and
cmp
adc
add
push
fisubl
pop
add
pushf
cwtl
hlt
add
lret
xchg
adc
cmp
bound
or
sahf
xchg
jle
mov
rcll
adc
or
or
arpl
bound
mov
aas
push
jno
out
ds
dec
sbb
and
mov
or
pop
loope
xchg
shlb
rol
cmp
daa
pop
pop
push
adc
jbe
shll
jo
loop
xchg
lods
ja
stos
hlt
inc
xor
into
xchg
aas
add
fldl
push
and
dec
or
and
arpl
outsl
aam
shrl
mov
add
into
inc
add
mov
pop
sti
out
add
aam
test
outsb
and
add
sbb
pop
jno
ror
or
testb
bound
mov
daa
dec
cmpsb
push
repz
rorb
pusha
test
jno
rolb
hlt
pushf
sub
shl
loop
cs
jnp
shr
sbb
mov
xchg
imul
jbe
push
loopne
inc
mov
lods
dec
lock
dec
cmpsb
xchg
inc
scas
sti
cmp
loope
cli
dec
pop
mov
xor
je
ljmp
mov
add
pusha
fwait
inc
movsl
and
mov
mov
add
push
or
inc
stos
cli
aam
adc
mov
in
add
and
repnz
or
push
lahf
or
mov
add
add
not
fmull
hlt
loop
insl
xchg
add
push
mov
and
pop
add
lret
pop
mov
bound
push
addr16
fdivrl
nopl
or
add
lods
push
inc
cmpsl
mov
daa
addr16
add
rolb
testb
jmp
idivl
pusha
repnz
push
call
fidivrs
stos
xor
jmp
push
shl
imul
pusha
in
mov
jne
popf
int3
mov
test
pusha
xchg
jg
loopne
add
imul
or
cmp
icebp
add
hlt
and
ret
add
sbb
in
push
mov
or
push
mov
cvtps2pi
or
aas
push
xchg
xlat
mov
xlat
cld
aad
popa
ss
push
scas
jb
adc
fisttpl
popf
mov
xlat
jmp
jle
das
dec
and
sbb
lahf
ja
add
adc
or
mov
jb
or
icebp
and
aas
ja
inc
jg
adc
out
mov
xchg
add
test
sahf
and
sub
xchg
pop
dec
fisubrs
lret
lahf
jmp
clc
addr16
push
repnz
idiv
or
cmp
sub
addr16
dec
xchg
cs
pushf
xchg
jne
in
andps
mov
pop
adc
sub
add
jno
inc
mov
mov
mov
stc
in
sbb
add
movsl
inc
insl
xchg
andl
jbe
pop
je
mov
inc
jg
pop
pop
add
stos
shl
fcmovnbe
mov
add
xlat
xor
sahf
and
lods
fmull
add
mov
dec
mov
add
repnz
inc
popf
add
push
ret
test
rorb
cwtl
mov
and
push
dec
mov
and
push
shll
mov
in
das
in
shr
add
add
sbb
movsl
out
data16
and
xorb
xchg
push
loopne
xor
into
daa
sbb
loopne
and
xor
mov
mov
das
add
outsl
cmp
inc
mov
dec
pop
xchg
fcmovbe
sub
icebp
add
xchg
je
add
cmp
adc
dec
pop
loope
jmp
jnp
xor
nop
popf
add
pushf
je
popa
mov
adc
pop
fisttpl
sub
adc
xchg
out
or
mov
daa
flds
in
sub
stos
mov
mov
cwtl
outsl
dec
push
addr16
jge
pop
sub
idiv
add
or
lcall
inc
jle
xor
dec
lds
and
cmp
pop
sbb
dec
movsb
test
sub
or
add
jmp
lock
das
push
adc
mov
je
addb
and
hlt
sbb
cmp
sub
inc
push
jle
push
lods
jne
push
addb
mov
dec
add
fstpt
add
aad
cmp
fsubrs
scas
clc
sbb
xchg
add
or
scas
fstl
ficomps
xor
mov
xor
movsb
addb
mov
add
or
lds
sahf
mov
cmpsl
and
push
pop
add
aam
jb
out
and
cmpsb
cmpb
and
scas
push
jo
mov
inc
push
or
mov
inc
rcrb
adc
jecxz
fsubrl
adc
in
fucom
add
ja
push
cmp
pop
jnp
stc
inc
mov
ja
adc
jo
pop
xchg
lods
adc
movsb
in
xchg
iretw
rolb
mov
scas
push
or
insl
loope
dec
cmpsl
cmp
daa
cmp
lret
icebp
shrl
jg
add
cmp
outsb
pop
es
fiaddl
mov
fadds
xlat
shll
je
add
mov
inc
jle
sarb
cmp
notl
xchg
shll
ficompl
and
pusha
inc
addr16
cli
adc
mov
lcall
sbbb
add
adc
mov
out
sub
xor
inc
scas
add
jg
pushf
xor
pushf
shrb
add
sarb
movl
enter
jbe
cmpsl
into
shl
pop
add
insb
xor
lret
lds
nop
xchg
jecxz
mov
sbb
mov
inc
insb
xchg
jbe
jne
add
dec
pop
mov
mov
mov
push
imul
mov
mov
add
lcall
jb
push
xor
cmpsb
adc
rcll
incb
ds
cwtl
test
pop
pop
mov
mov
rdpmc
pop
xchg
xlat
stos
add
sub
lock
sbb
int
sub
in
pop
xor
loopne
out
add
or
add
adc
xor
mov
cld
unpcklps
push
push
addl
lret
sub
in
push
xchg
std
add
cltd
sub
outsl
dec
jp
mov
push
adc
adc
mov
into
outsb
jge
jae
cmp
or
or
rolb
or
xchg
ja
dec
mov
add
leave
xchg
pop
daa
and
cli
inc
push
or
add
gs
add
ds
std
lahf
loop
push
xchg
imul
lcall
xor
mov
pop
mov
arpl
out
pop
push
mov
adc
js
lods
pop
pop
nop
mov
inc
pop
or
popa
pusha
add
cmp
lods
and
bound
out
cs
and
push
int
daa
or
ss
fs
jns
mov
mov
pop
push
enter
in
and
dec
push
in
mov
dec
push
adc
sub
in
mov
jl
jnp
mov
inc
inc
add
add
dec
test
js
enter
repnz
push
popf
xchg
imul
add
jnp
add
and
mov
rorb
mov
xor
rorb
addb
rcrb
sbb
jae
xor
pusha
mov
testl
xchg
aaa
int
out
dec
dec
fcmovnb
xchg
add
mov
or
aaa
and
sbb
jmp
mov
in
push
enter
adc
xor
jecxz
lea
xchg
sbb
jmp
rolb
dec
xor
cmp
scas
rcrb
testb
jg
lahf
fmuls
push
mov
cli
popa
push
gs
push
scas
push
and
add
pop
hlt
pop
imul
pop
xorl
pop
dec
mov
mov
add
pop
das
negl
sub
add
mov
test
add
or
adc
add
jle
cltd
push
pushf
and
sub
cli
aam
and
int3
jne
and
mov
jmp
mov
scas
pop
loop
inc
pop
mov
rolb
xchg
loopne
and
add
and
jecxz
outsl
or
xor
mov
fcomi
xchg
pop
movsb
roll
arpl
aad
out
in
pusha
and
pop
push
pop
cs
ja
jb
mov
xor
lret
add
icebp
leave
stos
enter
orl
or
push
push
out
add
push
out
xlat
lret
mov
cltd
mov
cli
loopne
sar
xor
sbb
lret
mov
xchg
sbbl
inc
fcoml
add
jo
jmp
leave
in
jmp
xor
mov
clc
int3
mov
cwtl
in
loopne
jns
dec
jmp
mov
lcall
mov
adc
xchg
push
jle
pop
cmp
pushf
lods
fstpt
leave
jge
ja
out
cmp
xor
idiv
rolb
xchg
int
and
cli
inc
add
mov
rclb
mov
flds
or
mov
add
push
dec
in
or
mov
adc
cmp
aam
mov
sbb
hlt
out
mov
int3
sarb
lock
mov
lods
push
add
outsb
das
je
mov
jb
inc
ficomps
lea
xchg
or
adc
icebp
mov
iret
les
ds
xor
jmp
xor
dec
loopne
push
cmp
adc
hlt
push
sub
jae
mov
fbld
adc
test
rcl
cmp
xchg
push
popa
out
rcl
stos
cmp
std
inc
pop
roll
or
push
xor
popl
pushf
or
push
adc
call
jo
fs
add
lahf
jns
sbb
das
adc
pop
cwtl
or
mov
int
and
mov
das
cmpl
add
cmpb
sar
ljmp
addr16
sbb
ret
sub
jecxz
add
shrl
lods
out
jge,pn
add
sbbb
popf
addl
inc
cli
xchg
push
mov
lods
or
stos
adc
or
fisttps
cmp
xorb
pop
push
inc
xchg
lods
arpl
aas
jne
adc
cs
xor
and
outsl
fs
les
pop
inc
push
mov
pop
cli
les
adc
add
mov
xor
inc
sub
and
stos
dec
insl
loop
cmc
or
dec
sarb
cmpsl
cld
and
adc
rcll
ja
or
cmp
push
sub
and
xchg
cmp
push
in
fwait
add
insl
test
enter
pop
outsb
xchg
clc
add
mov
sbb
rclb
lods
cld
stos
add
cwtl
es
xlat
or
pop
es
push
push
pop
sub
xor
mov
mov
shlb
add
es
or
push
inc
je
lahf
pop
dec
add
adc
inc
or
jg
repnz
pop
add
out
pop
insl
cwtl
mov
adc
mov
inc
pop
loope
and
int
adc
adc
mov
add
rcrl
adc
cld
into
add
sbb
stos
mov
mov
mov
addl
jp
mov
mov
scas
int3
pop
ljmp
mov
das
mov
pop
dec
into
add
jb
xorl
in
xor
dec
xchg
xchg
sbb
daa
add
gs
mov
ret
add
repz
jmp
cld
shlb
push
add
xchg
xor
divl
fiadds
cmp
adcb
add
jnp
cmp
adc
test
pusha
inc
clc
mov
xor
fcomi
push
jbe
and
dec
imul
aad
cld
hlt
adc
and
shll
pop
ret
sbb
rcll
negb
and
mov
cmp
jnp
daa
das
shlb
mov
mov
cwtl
dec
inc
clc
fadds
out
push
xchg
jbe
inc
sub
pop
shlb
mov
dec
aaa
push
pop
daa
jb
insb
pop
dec
pusha
iret
mov
repz
push
popa
pusha
mov
adcl
andb
sub
sub
xchg
mov
ret
push
faddp
movlps
adc
out
les
lods
in
icebp
sub
int
cmpsl
add
rorl
in
pop
xchg
pop
stos
pop
bound
push
in
xor
or
icebp
sbb
imul
pop
incb
dec
pop
jb
pop
push
imul
imul
or
push
movsl
pop
in
xchg
fimuls
loop
jmp
lret
pushf
sub
add
pop
or
fs
dec
push
scas
in
xorb
das
sarl
pop
mov
xor
jge
xorb
push
jnp
jmp
insl
aam
lcall
lahf
or
adc
mov
or
gs
jg
jns
insb
std
mov
cmp
pop
adc
and
outsb
scas
mov
je
outsb
or
mov
xchg
or
dec
loopne
insb
cmp
inc
clc
jg
negl
das
popa
and
add
mov
addl
es
stc
xor
or
fimull
sub
add
fisubs
push
jns
add
shlb
cli
mov
int
das
push
shrb
inc
es
imul
imul
dec
les
or
iret
lahf
mov
jecxz
pop
inc
es
cltd
shrb
xchg
dec
lods
mov
loop
imull
jmp
jb
fisttpl
sti
cli
imul
adc
jle
or
mov
out
movsl
push
xchg
fs
add
mov
fsubrs
std
in
inc
dec
jae
and
xor
and
jnp
push
cmp
aaa
mov
shl
iret
hlt
jo
adc
or
mov
call
das
enter
lahf
lret
jo
sub
test
or
sarl
imul
push
insl
mov
mov
scas
mov
lret
out
pusha
jb
syscall
push
dec
jl
out
and
lods
jg
sbb
lods
xor
andl
mov
xlat
mov
sbb
push
add
pop
push
adc
fs
jle
or
rcl
jns
xchg
lret
pop
cld
mov
mov
adc
pop
and
mov
jg
lods
push
add
cmpsl
jl
xlat
stos
add
sarb
sub
in
xor
add
adc
aam
or
sahf
call
inc
into
repnz
push
sub
negb
idivb
mov
sub
in
outsb
rol
jne
jl
orl
mov
mov
push
mov
daa
push
aam
sub
clc
push
out
xchg
loopne
jmp
mov
dec
movsb
scas
add
lahf
or
add
and
lahf
pusha
rclb
aam
and
cmp
jb
movsb
pop
push
inc
rcrb
aad
adc
cld
push
stos
add
fcmovb
imul
adc
jne
hlt
jbe
lea
imul
shlb
adc
sbb
repz
nop
repnz
hlt
std
sarb
pop
in
rol
popf
and
mov
jno
mov
pop
jmp
bound
in
sbb
daa
add
ds
clc
movsb
ja
daa
leave
cmp
add
pop
aas
and
dec
fmuls
mov
shrl
jns
rcll
mov
pop
sbb
jns
dec
inc
add
cmp
cmp
pusha
jp
add
cld
insl
jo
adc
dec
cmpsl
jmp
in
aam
cli
and
mov
inc
dec
cli
xlat
aas
out
mov
and
std
scas
add
mov
sub
adc
mov
pop
add
jno
xor
pop
mov
and
mov
or
sti
loop
leave
insl
js
dec
mov
pop
sbb
xor
fisubs
fstps
lock
sub
outsl
int3
jp
inc
aam
clc
mov
dec
jecxz
or
lahf
call
ss
inc
mov
rcr
jne
das
mov
add
mov
and
sbb
sbb
inc
int3
repz
sub
les
xlat
pop
xchg
pop
xor
xor
shr
jb
push
push
pop
add
add
scas
in
jl
inc
adcb
dec
cld
scas
insl
pop
pusha
jmp
pop
adcb
in
xchg
and
jno
pop
test
inc
mov
mov
add
xchg
xchg
ja
push
push
xchg
push
mov
fisttpl
scas
js
stos
xor
bound
fildll
add
orb
fiadds
adc
inc
lahf
add
mov
stos
loopne
mov
sbb
cmp
mov
xor
lcall
leave
push
or
adc
sub
pusha
gs
in
mov
shrb
cwtl
xchg
loopne
inc
mov
lods
jmp
inc
pop
pcmpgtd
ss
xchg
cwtl
sub
mov
stc
scas
sbb
push
cmpl
loopne
int3
sub
push
add
xor
bound
nop
xor
popf
add
idivl
adc
loopne
outsb
cli
bound
or
mov
inc
aam
pusha
sbb
sahf
and
lea
aam
iret
shlb
test
mov
daa
sbb
movsl
fdivrs
xor
out
and
adc
sub
add
repnz
les
add
shll
mov
xlat
andb
clc
xor
push
addr16
sarl
shlb
or
mov
movsl
fidivs
js
sarb
enter
inc
insb
test
mov
test
jp
dec
dec
xchg
out
sbb
mov
lock
adc
pushf
ljmp
jb
dec
imul
lods
cmp
ja
push
arpl
inc
jae
jnp
dec
lds
jge
mov
add
jg
mov
or
cmpsl
add
out
and
mov
push
mov
and
fisubrl
ja
je
aas
xchg
pop
mov
in
or
sbb
mov
jp
push
mul
insl
pop
lcall
cli
ret
stos
mov
add
mov
jo
adc
jbe
xchg
cmp
dec
std
pop
shrb
and
or
adc
lret
dec
cmp
mov
inc
pop
and
rcrb
cmp
mov
rcrl
push
loopne
imul
jle
add
int
fs
xchg
cs
pop
mov
sub
cwtl
test
or
xchg
lock
jbe
jo
ja
lods
ljmp
xchg
shll
add
ret
sub
movsb
into
popa
push
jo
adc
neg
jecxz
imul
aad
xor
add
test
jge
sti
sbb
or
movsl
pop
inc
shll
inc
stc
xor
imul
test
push
call
pop
adc
fsubr
push
rorl
inc
lock
pop
or
int3
pop
addr16
fisubl
fnsave
jo
dec
dec
loop
push
subl
jo
dec
dec
inc
or
pop
mov
lret
les
insl
add
fmull
adc
test
xchg
or
hlt
pop
mov
adc
stc
xchg
lret
push
inc
lods
cmpsb
push
and
shll
dec
loopne
xor
xor
call
fcoms
iret
mov
push
lods
or
cld
lods
mov
and
pop
fcomps
lds
xor
dec
inc
push
jmp
shll
mov
and
cmpb
pop
hlt
incl
jmp
dec
lcall
stos
inc
push
loope
ret
ret
ds
add
xchg
lock
gs
dec
push
fldcw
add
and
mov
shrl
aaa
lock
jle
lods
mov
les
inc
cmp
arpl
iret
orb
push
popf
ss
mov
lret
or
lods
adcb
sbb
int
cmpsl
mov
pop
insb
movsb
ds
add
std
ss
fcomps
and
sbb
fmull
cwtl
jmp
arpl
testb
es
subb
shll
cmp
pop
nop
daa
pop
test
fisttps
mov
xchg
xchg
enter
cmp
add
inc
xlat
in
rcrb
add
stos
add
push
ficomps
fisttpl
push
in
add
bound
xorb
jne
movsl
sbbb
dec
ss
push
jo
or
je
inc
or
test
fistpll
icebp
hlt
mov
add
push
mov
loop
sub
or
mov
enter
push
pop
repz
sysret
sbb
sti
shr
mov
lahf
and
jae
aas
xchg
jno
mov
pusha
in
mov
inc
push
mov
repnz
adc
in
pop
jo
add
pushf
adc
outsl
push
ret
add
or
xchg
and
lods
ret
push
mov
push
or
ljmp
or
pop
lods
dec
or
pop
or
cmp
adc
fwait
lods
mov
je
inc
mov
fdivrs
out
adc
sahf
xchg
pusha
mov
xor
xor
xchg
jno
stos
in
add
add
daa
pop
stc
call
lcall
dec
aas
in
dec
pop
out
call
lock
scas
sarb
xor
nop
test
xchg
mov
jb
push
pop
pop
mov
inc
dec
ljmp
in
xchg
dec
les
or
push
les
pop
mov
pop
cmc
in
mov
add
das
and
jmp
jno
sbb
mov
push
mov
bound
mov
sarl
mov
movsl
and
inc
and
pop
sub
add
xor
sub
push
jge
push
insb
add
and
fdivs
mov
addl
pop
push
inc
push
push
mov
pop
xor
pop
xrelease
outsl
das
in
lahf
push
sti
rclb
addb
arpl
inc
sbb
dec
add
mov
dec
call
std
add
insb
lods
dec
fs
cltd
mov
imul
aam
cmp
lret
out
inc
add
cmp
cld
add
and
and
negl
xchg
xchg
cmp
cmpb
lea
mov
and
sub
push
fmul
imul
push
dec
test
and
popa
add
daa
and
push
xor
cmpb
scas
pop
std
adc
inc
fsubl
and
stos
fisttpll
xchg
notb
sbb
popf
pop
and
mov
xor
add
xor
xchg
dec
es
add
mov
jb
in
lods
subb
fdivrp
mov
mov
jne
sub
lret
sbb
xorb
repnz
or
mov
outsl
incb
mov
inc
jne
insb
hlt
mov
cmpb
xor
addr16
imul
xorps
xchg
mov
pop
je
in
aam
in
jmp
push
fsubr
mov
add
aaa
inc
xor
jg
loop
rolb
adc
mov
setg
repz
jo
int3
add
ds
inc
iret
hlt
test
test
in
jo
ret
push
mov
popf
popa
dec
fiaddl
push
dec
dec
adc
int
ds
mov
cmpsl
mov
jmp
dec
ret
jbe
xchg
mov
sub
loopne
sbb
addr16
pushf
jge
mov
pop
or
push
hlt
add
jg
rolb
test
adc
mov
repz
push
or
mov
pop
mov
push
mov
dec
ja
cmpsb
pop
sub
jge
inc
sahf
add
movsb
icebp
sbb
inc
andl
dec
cmp
cmpsb
and
or
hlt
and
loopne
rclb
in
and
mov
repnz
mov
sbb
rcll
dec
shl
lret
inc
xor
repz
bound
sbb
je
sub
mov
in
call
int3
lock
cmp
jle
xor
cli
or
add
xchg
xor
bound
dec
movsl
push
mov
dec
inc
pop
inc
popf
and
mov
mov
test
out
jge
lcall
ss
rolb
mov
rolb
and
push
inc
push
aam
pop
call
scas
jno
test
and
sbb
flds
insl
mov
dec
nop
push
es
xchg
lock
movsl
mov
inc
add
and
mov
bound
xor
nop
outsl
je
lea
pop
adc
add
mov
jmp
fsubrs
jmp
shrb
enter
pusha
lcall
adc
add
add
push
fucomi
xor
cli
add
lret
pop
movsb
lods
in
or
sub
aas
mov
sbb
incb
pushf
lret
leave
sub
xchg
add
inc
jbe
clc
sub
pop
sbb
lods
xchg
rcl
lret
or
and
jp
les
mov
adcb
loopne
test
clc
hlt
or
aas
pop
push
sbbb
clc
add
inc
push
mov
out
fildll
dec
push
jge
dec
add
mov
push
xchg
lahf
xchg
or
aad
sub
mov
jns
xchg
or
push
xchg
push
lods
dec
mov
add
jl
push
sub
repnz
cmp
inc
xor
hlt
mov
stc
jl
fstl
clc
mov
cli
ds
and
lea
shl
add
mov
jg
in
mov
or
push
sar
aad
or
in
ret
aaa
rcr
mov
dec
in
adc
push
lret
lcall
or
or
int
mov
add
inc
shlb
xchg
mov
pop
mov
pop
int3
mov
xor
or
pop
mov
sub
out
repnz
cld
push
es
int
and
popa
mov
adc
rcll
fisubrl
shlb
shrl
adc
mov
add
dec
call
sbb
call
cmpl
or
leave
in
or
pop
dec
add
daa
sbbb
ret
out
add
lock
popf
ds
add
loop
sarl
pop
mov
mov
outsl
xor
dec
push
dec
mov
in
add
test
movsl
movsb
shl
fs
mov
jp
add
push
sbb
scas
sbbb
add
push
jmp
test
movups
repnz
mov
cs
test
pop
dec
nop
xchg
adc
cld
cmp
js
int3
in
stos
cmp
mov
inc
addb
pop
out
pusha
jne
cld
les
negl
push
dec
adc
jno
mov
test
stos
xor
fs
mov
js
fistpl
xchg
adc
fucomp
xchg
pop
inc
cmc
repz
dec
hlt
in
dec
mov
xchg
test
push
loope
adc
lcall
ss
loop
pop
lret
mov
mov
mov
push
mov
mov
test
xchg
mov
dec
push
leave
clc
rorl
jmp
repnz
cwtl
int3
lahf
rcr
icebp
pop
aaa
iret
adc
add
xchg
popf
cmpsl
cmp
or
inc
xor
xor
cmp
inc
ficomps
cwtl
sbb
andl
imul
and
dec
jns
inc
jb
inc
add
leave
mov
dec
lret
lds
shll
pop
daa
mov
jo
iret
add
mov
sbbb
and
or
clc
frstor
out
mov
dec
mov
int
insb
jg
push
mov
push
imul
or
push
sbb
out
sarl
inc
sarb
mov
loopne
xchg
mov
jbe
add
lods
and
rcrb
movsb
inc
jbe
scas
mov
add
cmpsl
and
outsl
nop
repnz
cmp
cmp
stos
and
stos
push
cmc
test
cmp
leave
lret
inc
repz
shlb
dec
jne
movsl
push
mov
rolb
mov
imul
xor
or
in
rorl
xchg
fnstcw
sbb
push
data16
cmpsl
loop
mov
loope
mov
xchg
cmpsb
fsubr
xlat
jb
or
mov
hlt
jecxz
shr
daa
test
push
pop
dec
in
je
and
daa
loopne
sub
int3
gs
mov
sub
push
xchg
lea
xchg
add
mov
in
adcl
sahf
movsl
pcmpeqd
adc
ljmp
inc
add
scas
xchg
in
clc
imul
fdivrs
sbb
jmp
mov
fnsave
add
push
and
add
out
mov
push
xchg
inc
lods
add
fldl
loopne,pt
jb
lea
mov
jo
cmp
loope
nop
jp
pop
mov
pushf
out
xchg
sarb
leave
jg
cld
and
rolb
mov
outsl
inc
pop
push
sub
cmp
mov
pop
adc
add
test
movsl
fidivrl
les
ret
push
pusha
cs
rclb
xor
xchg
push
mov
inc
xor
rolb
hlt
dec
lock
adc
cld
xor
and
xchg
mov
dec
dec
stos
ret
lock
cltd
pop
add
rol
imul
adc
cmp
rcl
nop
mov
sbb
sbb
sbb
mov
js
pop
andb
cmp
call
js
cmpsl
mov
xor
push
dec
addr16
pop
xchg
arpl
add
push
xor
and
adc
add
push
inc
lock
jge
mov
pop
test
add
xchg
into
jo
push
sbb
fdivrs
push
int3
inc
and
mov
aaa
xchg
sbb
adc
mov
out
bound
sub
add
and
or
adc
xchg
adc
add
jnp
cmp
and
or
and
pushf
cli
mov
xor
sub
scas
test
push
cli
dec
xchg
les
pop
aaa
add
aad
js
repz
sub
mov
add
mov
jg
movl
mov
add
pop
sti
xchg
scas
aad
in
push
sbb
fisubrs
repnz
add
push
lret
cs
push
or
xchg
jns
jl
lret
push
lds
inc
jno
imul
out
cli
add
sub
mov
inc
push
mov
and
xor
or
sti
sub
out
mov
mov
and
mov
dec
mov
arpl
sub
xor
cmp
test
in
or
shr
arpl
mov
pop
sub
pop
scas
test
fsubl
dec
push
das
push
sub
jno
cmp
addl
cmp
jns
mov
call
and
es
aaa
add
push
mov
sub
lret
mov
pop
pop
mov
jbe
in
shlb
shlb
in
not
xor
xchg
std
std
mov
adc
push
push
dec
clc
adc
nop
pop
or
sub
jl
and
jp
pop
inc
add
lret
mov
movsl
clc
adc
mov
add
pushf
add
mov
cmp
rcrb
and
fimuls
mov
add
jmp
dec
xor
dec
sbb
xchg
jecxz
fistpll
push
mov
dec
mov
xchg
inc
daa
js
pop
sub
pop
rcl
rolb
and
test
mov
adc
pop
pop
xchg
push
imul
sub
dec
dec
ud1
rol
jne
hlt
mov
push
mov
push
stos
fwait
ljmp
das
sbb
pop
ret
pop
add
jp
pop
scas
add
jmp
adc
adc
cmc
pop
outsl
adc
sti
or
mov
repz
mov
ljmp
push
pop
add
lahf
lock
test
jbe
mov
mov
repnz
xchg
mov
notl
es
or
ss
add
inc
push
push
pop
cltd
xchg
scas
shrl
sub
daa
cmpsb
iret
push
dec
or
push
adc
mov
adcl
movzwl
add
aas
adc
cmp
mov
adc
cli
or
jb
out
add
shlb
fcom
add
iret
aaa
scas
jo
adc
cmp
loope
icebp
push
push
pushf
hlt
add
add
or
vminps
cmp
fdivs
push
xchg
nop
andb
sti
out
shll
fcoms
xor
jle
pop
add
mov
push
pusha
cmc
push
adc
sete
or
roll
loopne
loopne
and
pusha
imul
es
inc
fstps
fisttps
lods
rclb
jecxz
sub
add
repz
or
pop
add
jmp
mov
aas
pop
push
out
xchg
clc
push
mov
rclb
cmpsl
xchg
test
scas
inc
iret
imul
fisubs
ljmp
pop
outsb
inc
sub
movsb
out
xchg
repz
js
push
mov
in
fisubl
mov
inc
adc
test
movsb
jp
add
pop
mov
int
dec
push
mov
push
sbb
test
add
jb
xor
cmp
mov
xor
sbb
dec
or
and
das
adc
add
stos
in
xchg
cmp
xchg
fidivl
jp
add
inc
xchg
jl
sub
mov
jne
in
or
adc
stc
xchg
clc
mov
fnstsw
insb
mov
fwait
add
pop
mov
pop
push
adc
pushl
rcll
dec
or
mov
cmp
sub
hlt
add
mov
fimull
sub
pop
inc
dec
push
iret
inc
pop
jbe
or
pop
jp
loope
xor
data16
out
lcall
add
loope
cmc
xor
jbe
clc
add
pushf
je
mov
and
sub
and
adc
add
decl
decb
repnz
mov
outsl
shlb
push
icebp
add
pop
jns
fucomip
mov
mov
pop
and
push
scas
fcoml
sbb
cmp
adc
imul
and
enter
mov
inc
pavgw
insb
ds
sub
jae
lret
add
mov
stos
or
test
pusha
inc
push
mov
in
push
dec
push
add
push
and
aaa
hlt
movsb
cmp
xchg
mov
fsubrs
loopne
dec
add
call
xorb
es
movsb
insb
outsb
adc
add
pop
fs
lock
mov
sbb
xchg
sarl
cmp
shlb
aad
push
roll
mov
mov
add
inc
xlat
mov
ljmp
push
rcrb
and
add
mov
pop
das
sbb
out
hlt
pop
inc
jl
add
cmc
fs
mov
fdivs
or
stos
jns
jae
jnp
push
scas
ds
inc
cmp
lods
ret
and
aam
cmp
cmp
lock
mov
xchg
dec
out
adc
mov
mov
mov
sbb
lock
jge
add
or
cltd
add
cmp
ja
mov
mov
adcl
or
and
or
jp
pop
jb
je
jno
popa
icebp
xchg
mov
push
sbb
cld
adc
rorb
jg
and
xchg
mov
repnz
test
mov
and
mov
push
orb
jp
fs
mov
decl
pop
incl
testb
pop
aaa
add
mov
dec
fwait
mov
jno
sub
mov
add
xchg
inc
or
movsl
in
punpckldq
jnp
lds
adc
mov
xor
mov
dec
pop
mov
and
ret
cmp
stos
add
xchg
or
add
push
push
adc
rolb
xchg
mov
cwtl
outsb
scas
add
enter
mov
mov
bound
sbb
pop
mov
add
fs
xor
cs
pusha
pop
xor
push
jns
cmpb
jmp
or
pop
mov
mov
cmc
jno
in
mov
scas
push
or
add
enter
inc
xor
xor
inc
arpl
enter
mulb
dec
xchg
or
pop
push
popl
scas
jne
push
lret
adc
add
xor
mov
mov
xchg
mov
xor
jnp
adc
adc
aas
jae
mov
push
stc
mov
adc
mov
and
sub
xor
jle
adc
add
daa
inc
dec
pusha
cltd
mov
fst
hlt
cmp
lea
gs
lret
xlat
psubd
xor
dec
push
out
lahf
cmp
or
xlat
cltd
test
adc
cmp
cmp
mov
and
sub
push
fwait
js
jne
fistpll
sarl
daa
mov
rolb
int
cmp
push
fisttpll
call
js
mov
pop
aaa
fidivl
inc
gs
std
rorb
filds
push
dec
sub
and
add
or
push
dec
jno
inc
insb
aaa
loopne
divl
cmc
add
mov
adc
xchg
push
das
mov
adc
add
ljmp
dec
add
push
cmp
arpl
shll
dec
and
adcl
push
insl
jl
andb
pop
cmovbe
mov
add
xchg
js
and
xor
dec
mov
push
add
adc
std
add
rorl
mov
mov
in
out
shrb
sub
daa
cmc
loopne
dec
sbb
xlat
adc
clc
pop
cmp
lods
stc
mov
jns
adc
or
and
lods
cmc
add
mov
push
or
sub
data16
push
pop
push
xor
dec
neg
xor
in
lret
add
jb
mov
pop
shl
shl
or
pop
sub
lret
sub
pop
pop
mov
ret
xchg
cmpsl
es
test
add
cmp
jmp
cld
ljmp
add
pop
leave
in
call
xchg
cmp
stc
cmp
cmp
and
xor
clc
add
add
sti
cmp
out
xchg
fsub
dec
loopne
sub
pop
push
repz
lock
pusha
stc
test
jecxz
jno
mov
xchg
push
sub
push
incl
push
dec
adc
cli
and
push
cmp
push
ret
jle
ret
sub
sub
cli
lods
xchg
sbb
mov
clc
popf
mov
inc
pop
dec
inc
mov
push
add
in
cmp
or
shlb
push
add
jnp
pop
push
push
out
dec
pusha
out
xchg
mov
sub
push
icebp
add
shlb
xchg
jmp
cmp
xchg
dec
mov
pop
cltd
xor
add
sbb
xchg
pusha
repz
dec
dec
incl
push
daa
push
fdivrl
xor
mov
xlat
mov
test
push
jle
xor
mov
icebp
pop
push
out
sub
push
jne
push
jp
pop
cli
push
shll
fmull
jmp
inc
addb
lret
sarb
pop
push
clc
cmpsl
add
push
lock
sub
loope
sbb
xor
dec
jno
je
jp
test
mov
pop
pop
icebp
arpl
inc
scas
fs
loope
cmp
ja
pushf
nop
pop
fstps
popa
clc
or
fidivrs
cmpsb
pop
add
loop
and
push
mov
lods
int3
and
cld
xchg
les
jae
mov
subl
imul
jno
push
test
pop
dec
mov
pop
loopne
and
lods
cld
add
xchg
daa
sbb
cmp
out
sbb
or
pop
lcall
xchg
xchg
jge
jb
cmp
cwtl
xor
cs
xor
pop
jecxz
and
xor
mov
dec
ss
lds
das
inc
add
push
and
dec
jae
sub
adc
movsb
and
fcmovnb
movsb
add
fwait
sbbl
int3
pop
pop
push
xor
repnz
add
fwait
and
xchg
jecxz
sbb
in
push
mov
test
cld
push
inc
leave
adc
adc
loopne
sbb
fcmovb
lods
pusha
ljmp
inc
jle
cld
cs
js
test
ds
pop
and
push
or
popf
push
push
lds
xchg
stos
stc
cmp
aaa
loopne
sub
pop
dec
stos
inc
shrl
jmp
data16
pushf
mov
daa
jae
aam
movsl
lock
xchg
sti
jp
out
and
repnz
and
pop
dec
add
pop
or
bound
rorl
xchg
inc
or
in
jp
or
xor
jae
shrb
dec
lea
xchg
mov
jb
cwtl
push
fsubrl
sarl
mov
imul
lds
push
mov
jecxz
cmc
mov
inc
cs
fwait
imul
stc
inc
mov
clc
add
sbb
sar
dec
add
pop
or
add
jae
insb
stos
dec
decb
jecxz
fldl
push
mov
xor
movsb
inc
xor
mov
lret
clc
outsb
mov
jle
push
hlt
push
cmove
ljmp
mov
mov
or
loop
push
add
xor
aas
push
add
xchg
sbb
std
inc
mov
mov
sbb
icebp
push
je
mov
pop
iret
divb
popf
mov
push
sbb
dec
ds
add
inc
mov
ljmp
mov
dec
jae
andb
scas
push
pop
jl
test
mov
pop
popa
push
adc
xor
push
shlb
cmpsl
test
loope
jge
orb
push
mov
test
insl
jbe
dec
ss
dec
repz
sub
test
mov
jmp
jmp
pop
pop
mov
adc
outsl
ret
sbb
enter
and
bound
inc
pop
sub
add
cmp
mov
adc
push
mov
pop
mov
lods
rorl
push
pusha
push
pop
mov
and
push
xor
scas
add
jmp
nop
fsub
pop
jl
mov
and
lock
push
and
adc
loopne
sarl
clc
push
adc
sbb
movsb
insl
daa
pop
int
adc
pop
fnstenv
js
out
inc
dec
jmp
test
sbb
jno
loope
orb
popf
xchg
push
pop
lcall
push
inc
jmp
rcrb
adc
ret
scas
inc
loope
loop
outsl
lods
mov
or
cmp
cmc
test
shlb
stos
shlb
pop
push
loope
xorl
and
dec
arpl
mov
out
sarb
filds
dec
cld
call
movsl
pushf
sub
adc
lods
push
out
inc
cltd
xor
test
rorb
popf
scas
add
repnz
lods
lds
jno
pop
xchg
in
mov
and
sbb
push
mov
shr
lods
mov
push
or
jo
aam
mov
jecxz
dec
dec
jmp
pop
xchg
jp
add
sbb
fisttps
data16
inc
jno
xchg
add
lods
addb
pop
inc
jae
cmpsb
in
adc
cmc
or
or
lret
divl
and
adc
add
jmp
pop
adc
arpl
inc
add
in
add
in
repz
in
jbe
or
add
shrb
jo
fcoml
sub
pop
in
push
pop
sbb
inc
sbb
shr
std
insl
push
dec
add
push
inc
stos
mov
or
testl
cwtl
jge
add
lahf
ja,pn
mov
add
jae
pop
les
cmp
push
mov
sbb
push
add
pop
push
arpl
movsb
out
rcrb
or
fimuls
popf
scas
pop
aaa
test
jg
loop
fistps
jl
enter
add
xor
mov
and
xor
lahf
sbb
mov
adc
add
idivl
adc
cs
stc
xlat
call
adc
jnp
clc
fs
idivl
sub
sar
pop
int
mov
mov
daa
fnstcw
mov
aam
shlb
sub
shrl
imul
mov
and
loope
cmc
mov
sub
pop
push
pop
jmp
shrb
lods
das
and
bound
inc
adc
mov
add
push
mov
jl
scas
incb
cmp
mov
pop
scas
sbb
pop
add
jp
pop
mov
xchg
pop
jb
cmp
lods
or
das
xchg
sub
add
or
add
sbb
sbb
ja
movsb
mov
cmc
cmp
sarl
test
ss
cli
addr16
add
xchg
add
stos
xchg
ficoml
retw
jle
add
mov
sub
cmp
imul
lds
ljmp
and
pusha
sahf
cmp
add
fisttpll
mov
cld
cmc
dec
shr
xchg
cmpsl
roll
jmp
lret
hlt
jo
jle
add
add
xor
mov
ret
out
pop
sbb
xorl
or
js
mov
dec
or
xor
add
stos
iret
mov
adc
movsb
cmp
cmp
nop
xlat
jb
sub
adc
sarb
pop
jno
fs
add
shrl
pop
push
out
ljmp
inc
xchg
lcall
add
imul
and
mov
jmp
xor
inc
pop
hlt
inc
movsb
cwtl
scas
pop
mov
stos
push
pop
mov
or
and
test
push
shlb
aaa
sar
ret
and
lods
subb
push
test
adc
negb
inc
jnp
and
loop
dec
aas
add
adc
mov
mov
mov
aam
ret
sub
mov
testb
loopne
cmpsb
and
and
pop
sbb
mov
vcvtss2sd
stos
fcompl
or
jo
jg
fisttpll
or
adc
jle
sbb
push
mov
or
pop
lds
lfs
sbb
imulb
movsl
pop
pop
jb
and
shlb
stos
loopne
add
xor
sbb
xchg
test
addr16
aaa
inc
jge
inc
xchg
icebp
or
or
sbb
cwtl
and
aam
mov
lods
sub
stc
dec
push
sbb
mov
insl
adc
repnz
dec
addr16
mov
lcall
jp
enter
mull
pusha
stos
pop
fbstp
adc
pop
loop
imul
inc
add
pop
psrad
or
and
dec
inc
push
xlat
add
es
incl
push
and
mov
popf
clc
sbb
add
xor
xchg
movb
xchg
mov
fbld
lcall
scas
dec
js
sub
adc
add
psubsw
stc
xor
int3
push
or
out
sar
rcr
ja
inc
xor
mov
shr
mov
scas
xor
lock
or
fxtract
loope
ss
mov
jmp
lahf
js
xchg
fdivl
or
push
jge
mov
or
iret
mov
dec
sarb
insb
dec
pop
add
imul
mov
mov
outsl
dec
adc
mov
cld
mov
sub
mov
imul
fdivrs
dec
adcb
add
dec
and
jecxz
mov
sbb
or
pusha
push
push
add
inc
push
mov
or
out
cmp
sbb
in
fadds
fbstp
pop
nop
jmp
stos
sahf
or
push
pop
push
out
push
push
or
mov
xchg
gs
xchg
push
sti
faddl
inc
and
adc
cs
nop
mov
lock
out
and
inc
and
in
push
rcrb
adc
push
and
mov
cmpb
jne
xchg
mov
add
out
xor
in
cwtl
push
dec
pop
mov
out
xchg
cltd
scas
pop
jae
andl
das
aad
mov
mov
xorl
jle
add
insb
jg
pop
xchg
jo
jno
mov
outsl
inc
jo
ret
test
insl
in
ds
daa
push
pop
stc
inc
cmp
stos
mov
push
dec
cld
add
pop
mov
pop
ljmp
and
adc
sub
imul
xchg
adc
subb
addb
inc
nop
jno
xor
and
cmpsl
or
mov
xchg
pop
mov
sbbl
sahf
xchg
jno
add
sub
outsl
push
aas
and
xchg
fcoml
dec
dec
cmpsl
ljmp
jmp
mov
sarb
outsl
xchg
arpl
fwait
sbb
xchg
pop
or
jnp
xor
popa
jle
icebp
and
push
lock
sub
cmp
addr16
loopne
xchg
jle
or
pop
adc
inc
repnz
jnp
adc
incl
imul
xchg
nop
addb
xor
jns
adc
inc
xchg
je
inc
in
cmp
mov
call
adc
or
into
cmp
mov
inc
fdivrp
mov
sahf
std
bound
mov
decb
sarl
scas
out
ret
sbb
jmp
dec
psubd
adcb
cwtl
and
add
test
pop
dec
fs
cmp
mov
shlb
xchg
dec
ret
add
subb
fsubrs
stc
daa
add
repnz
pop
pusha
insb
ss
sahf
mov
adc
lock
pop
push
or
add
jecxz
dec
and
mov
mov
jnp
ret
mov
int3
mov
xor
imul
push
lcallw
sbb
insb
xchg
or
or
pushf
fdivrl
xor
lods
mov
sbb
clc
testb
nop
std
fwait
into
pop
inc
jecxz
popf
shlb
or
inc
push
sub
enter
dec
push
stos
and
pop
popa
fwait
jp
int
mov
outsb
xchg
sub
add
scas
out
das
cmpsl
rcrb
sbb
pop
or
xor
negb
mov
icebp
pop
cmpsb
sub
jp
add
pusha
add
dec
cmp
add
shr
xor
or
rcll
jnp
daa
lods
mov
sub
mov
pop
xchg
xchg
jmp
or
or
add
ret
mov
gs
pop
daa
stos
pop
popa
iret
xor
or
push
dec
test
or
loope
icebp
cmp
lcall
fcmovnbe
js
out
and
aam
push
arpl
rol
or
pop
sub
xchg
rolb
arpl
and
outsl
pop
inc
push
mov
push
lcall
xor
rcll
out
jnp
incl
lock
or
push
cmp
fldenv
shr
mov
add
and
test
mov
fs
pop
or
dec
ja
popa
xchg
jp
dec
loopne
inc
shrb
xor
test
leave
xor
add
jae
push
pop
mov
mov
adcb
fcmove
fldl
mov
inc
xchg
out
xor
push
ret
pop
or
mov
flds
scas
push
pop
mov
xor
pop
push
jmp
in
sbb
aas
pop
cmp
push
loope
sub
ja
lahf
jp
lahf
push
pop
add
inc
jnp
sub
mov
repz
add
addl
xchg
pop
cmpsl
mov
bound
xchg
je
icebp
dec
jl
fadd
add
xor
pop
mov
adc
hlt
mov
xchg
dec
jge
ljmp
imul
xchg
add
or
subb
and
inc
jge
cli
or
int
mov
fsubp
orb
mov
sub
pop
jmp
cld
pop
mov
mov
push
mov
mov
add
iret
jl
dec
pop
mov
mov
add
in
mov
das
xor
movsl
js
adc
or
push
jo
dec
xchg
pop
lds
repz
push
add
sbb
mov
sbb
push
icebp
test
std
and
icebp
shll
arpl
and
dec
ret
push
loopne
fdivl
xor
sbb
sub
pop
lcall
and
scas
daa
mov
mov
ja
or
push
outsl
cmp
cmp
call
movsb
lret
orl
orl
imul
orl
inc
adc
sbb
call
testl
std
mov
adcl
xlat
iret
mov
aas
sbbl
push
shll
pop
push
jbe
xchg
add
push
pop
mov
inc
cmc
add
shrb
jp
jb
lahf
jb
adc
dec
movsb
xlat
or
sbb
mov
dec
outsb
add
mov
lahf
jp
cmp
fiaddl
jo
xchg
jne
bound
push
pop
icebp
test
test
pop
push
pop
add
daa
sbb
inc
dec
bnd
jnp
cmpsb
fldenv
mov
test
fsubr
xchg
or
lods
adc
rorl
lahf
jae
test
add
add
add
mov
inc
cmpsb
andl
insl
fwait
mov
jnp
and
out
lret
rdtsc
xchg
xchg
scas
repnz
xchg
pop
jbe
leave
cmc
in
push
lcall
je
lcall
mov
lret
xchg
pop
pop
mov
inc
test
add
rorb
cmp
jl
ljmp
jb
shll
cld
insl
rcll
inc
int3
aam
in
adc
xchg
cwtl
push
pop
lods
movsb
pop
enter
add
sarb
add
in
adc
add
mov
inc
pusha
push
clc
adc
repz
cld
add
and
adc
addl
add
cmp
outsb
inc
pop
and
bound
cld
int3
sub
pop
inc
push
push
mov
dec
test
subl
mov
arpl
subb
daa
rolb
gs
in
xchg
push
cmp
sarl
pop
sub
lcall
jns
pop
push
ret
and
mov
adc
adc
push
inc
mov
insb
jmp
add
jecxz
sarb
imul
jne
rclb
dec
icebp
hlt
add
jg
stos
jecxz
mov
sub
out
test
sub
dec
cmpl
daa
mov
or
pop
neg
inc
adc
dec
clc
jno
testb
pop
shl
into
bound
pop
push
sbbb
add
icebp
fimuls
push
push
add
sub
xlat
lods
fadds
add
xchg
fsubs
jbe
or
dec
mov
testb
sti
imul
ret
and
and
int3
fiaddl
adcb
sti
jge
insl
sub
add
pop
push
in
lock
cli
fiadds
jae
jle
mov
lahf
fmuls
dec
jle
mov
cmp
xchg
cmp
mov
push
inc
xchg
stos
dec
jge
scas
xor
aam
les
aaa
cltd
testl
sub
mov
mov
mov
add
mov
ret
pop
jge
sub
dec
ret
loopne
sub
add
jle
fbld
push
xchg
push
jg
popl
pop
or
mov
inc
jle
xor
xchg
and
enter
mov
adc
into
repz
xchg
clc
and
mov
sti
xor
jge
jp
mov
dec
inc
mov
stc
xor
or
faddl
jg
and
pop
outsl
mov
and
repz
mov
push
add
adc
or
mov
movsl
lret
jb
and
cltd
scas
jle
cmp
lock
inc
dec
dec
lods
dec
imul
xchg
add
inc
mov
inc
dec
imul
mov
xchg
daa
orl
mov
push
repnz
jb
push
mov
aad
lret
popf
push
imul
pop
pop
in
mov
mov
pusha
loope
sbb
arpl
adc
insb
mov
mov
push
push
lret
cmp
clc
stos
orb
pop
ljmp
dec
dec
mov
mov
insl
nop
sbb
stc
sub
sbb
mov
add
call
pop
xor
aam
pop
jmp
mov
mov
das
or
or
rolb
je
push
cld
fcoml
and
shll
stos
es
and
add
outsl
jge
mov
das
jle
add
cmp
sbb
pop
fmuls
call
aam
shlb
adc
adc
fiaddl
jge
lret
ljmp
pushf
add
aaa
mov
in
scas
mov
mov
sub
loope
push
movsb
call
sbb
cmp
sub
mov
bnd
mov
lods
outsb
sahf
addr16
xchg
imul
xor
cmpsb
in
and
add
enter
sub
push
enter
xchg
js
movsl
out
inc
mov
stos
push
sbb
insl
pop
cmp
push
das
or
lret
inc
sbb
rcrl
mov
sub
mov
cmp
sub
imul
mov
pop
popf
or
mov
dec
jmp
mov
adc
add
lods
jecxz
lock
and
pushf
and
push
or
xor
xorl
push
xsavec
cmc
mov
iret
xchg
fdivrl
jg
mov
xchg
testl
sub
dec
pop
in
and
dec
cmp
loop
or
inc
clc
pop
lahf
rcrb
pop
repnz
pop
dec
loopne
and
lods
inc
sub
ffreep
cs
push
mov
stos
dec
sub
push
andb
push
sub
in
mov
das
sbb
ljmp
xor
lds
test
mulb
repnz
add
adc
stc
cmp
xor
test
cltd
js
mov
in
lea
and
in
lds
sbbl
add
lea
ljmp
je
or
sbb
int3
mov
inc
mov
pop
shl
mov
dec
out
jge
pop
ja
or
sub
or
add
inc
xchg
cmp
cmp
cmp
mov
jg
jo
jnp
pop
ljmp
dec
mov
add
scas
or
nop
push
jge
das
xchg
shl
add
lea
addw
or
mov
adc
pop
mov
pop
dec
adc
push
dec
lods
xor
arpl
rcrb
jae
data16
insl
jae
mov
sbb
add
jae
das
mov
lret
int
sahf
imul
sbb
ljmp
sub
mov
out
ret
and
ljmp
lods
loopne
push
test
cmp
xchg
test
adc
js
sub
cs
loope
push
outsb
mov
ja
and
sti
ljmp
daa
imul
inc
dec
jg
dec
push
xchg
jb
and
pop
xchg
inc
inc
pop
push
adc
mov
or
fs
mov
je
sub
out
xchg
loopne
xchg
addl
js
cmpsl
inc
add
test
adc
orb
push
sbb
pop
das
pop
gs
push
idivb
sub
mov
je
mov
xchg
or
mov
jg
mov
dec
jbe
jmp
iret
lret
mov
or
or
mov
xor
or
rorb
mov
mov
in
lret
xchg
jl
loop
xchg
out
cld
jbe
nop
add
mov
jmp
inc
adc
pushf
sar
inc
inc
test
jbe
or
cmc
mov
adcb
push
mov
and
lea
das
inc
sti
inc
in
adc
pop
and
repnz
cmpsb
mov
mov
xchg
sbb
push
imul
lock
cld
gs
adc
test
mov
jmp
mov
xor
mov
push
mov
pop
pop
dec
movsl
addl
and
add
out
cmp
mov
cld
jg
orl
dec
inc
lcall
imul
lret
push
dec
adc
jmp
sbb
push
call
xchg
fwait
cmp
xchg
popf
adc
movsl
mov
dec
and
mov
insb
popf
fs
lea
jae
mov
aaa
add
or
mov
ss
mov
adc
or
ret
leave
das
fdivrs
pop
cmp
sbb
outsl
mov
sub
add
dec
arpl
inc
add
and
stos
loop
and
push
outsl
jp
hlt
add
dec
fdivr
jge
push
add
lret
test
mov
hlt
sub
or
popa
pop
cmp
mov
adc
push
rcrb
ds
aam
and
sbb
shrb
xor
fstps
jne
push
xlat
inc
ret
cmp
cmp
jmp
xchg
mov
inc
xor
sub
add
pushf
add
imul
repz
ds
outsb
les
loopne
cmpsb
sub
testl
jmp
outsl
gs
iret
add
inc
inc
ja
sarb
aad
je
leave
xchg
jo
cmp
pop
rcrl
movsl
jl
jmp
add
ret
icebp
js
add
push
mov
dec
out
aam
sub
jne
fs
and
inc
mov
adc
mov
sbb
icebp
daa
xlat
out
loop
shll
add
stc
ljmp
pop
mov
push
pop
es
adc
sub
cld
push
mov
jl
add
repz
rorb
clc
mov
cmc
lock
or
fcmovu
and
jbe
or
push
pop
pop
pop
mov
outsb
push
pop
inc
inc
jmp
in
std
xchg
pop
icebp
rclb
lret
and
ds
in
testl
loopne
adc
shll
scas
add
push
jne
je
pop
dec
mov
and
mov
shl
clc
mov
ljmp
pop
add
fildl
das
lock
fcomps
dec
pushf
mov
in
inc
add
mov
add
mov
lods
repz
insb
scas
add
pop
sub
add
xchg
in
test
in
loopne
pop
jo
push
shrl
in
jnp
stos
and
add
fisttps
xchg
sbb
pusha
inc
rclb
mov
callw
stc
adc
mov
dec
xor
sub
lea
andl
outsb
call
mov
and
add
adc
test
sub
insl
sub
xchg
xchg
rcrl
adc
in
stos
fs
scas
mov
add
xchg
mov
orb
into
dec
les
pushf
in
lods
hlt
pop
and
adc
sub
mov
stc
call
leave
adc
mov
jp
pushf
mov
mov
andps
add
aam
cli
push
idiv
cmp
ror
add
pop
out
pop
popf
shlb
adc
ficompl
pop
cld
mov
movsb
in
add
sub
popf
and
jnp
movsb
outsb
adc
ljmp
sbb
jge
pop
popf
push
sbb
and
push
bound
decl
test
mov
jo
xchg
or
filds
jmp
rcrb
fsubrs
mov
outsl
mov
xchg
mov
int3
mov
shlb
add
movb
jg
ds
mov
pop
in
adcb
sub
xor
push
mov
pop
aad
cmpsb
mov
enter
imul
mov
or
add
out
mov
mov
fwait
push
shll
jge
adc
mov
xor
das
in
aas
sarb
cltd
out
adc
push
mov
inc
arpl
in
jno
add
and
push
pop
js
shr
or
out
pop
cmovl
or
das
fidivrl
add
cmp
mov
daa
in
clc
sbb
xchg
jns
or
pop
cwtl
jle
rsqrtps
mov
push
das
push
stc
rolb
mov
or
or
push
jbe
aam
je
cmp
dec
les
out
xchg
in
cmpl
add
xchg
in
aam
xor
mov
dec
popf
rolb
movsb
xchg
fidivrl
xchg
rolb
pop
popf
mov
sti
dec
stos
mov
mov
push
daa
ret
pushf
push
jg
data16
jno
and
stos
subb
pop
pop
scas
push
in
adc
jae
jne
pushl
adcl
sbb
and
push
jbe
inc
push
cmpsl
ds
lods
in
fistpll
inc
jg
add
cmp
shl
mov
add
leave
sub
cld
or
jl
shlb
adc
xchg
hlt
loopne
lock
jbe
pop
out
mov
out
adc
imul
add
rcll
xchg
add
cmpsl
pop
add
or
dec
ja
das
sub
pop
insb
cmpl
push
popa
jle
cmc
movsb
jo
out
ret
jo
add
flds
das
ljmp
daa
test
in
mov
pop
and
push
pop
sub
addl
and
sub
mov
outsb
hlt
pop
imul
ficompl
outsl
jp
push
into
add
mov
sub
jno
xchg
dec
mov
xor
mov
fstps
mov
incb
push
push
out
mov
data16
xchg
add
pop
in
call
jb
or
mov
cwtl
sub
sbb
cmp
daa
adc
ret
test
out
push
inc
and
pop
push
inc
xor
add
push
out
mov
push
aas
or
adc
cltd
jo
cs
xchg
mov
test
lods
mov
mov
push
jne
shlb
sub
loop
pop
add
fnstenv
add
pop
out
shl
push
in
mov
ljmp
and
and
xchg
inc
mov
js
lahf
outsl
shr
jns
ss
repnz
add
fsubrp
adc
loop
sub
pop
mov
jp
mov
pop
dec
loop
test
or
imul
in
lock
cltd
add
mov
outsl
mov
sbb
mov
orb
cld
add
arpl
push
pop
int3
lock
nop
mov
imul
dec
or
fildll
mov
add
nop
sbb
mov
out
push
xor
orl
call
xor
test
mov
jmp
fistpll
jl
scas
add
pop
sub
cmp
inc
das
cmc
add
jae
fstl
mov
xchg
add
xchg
or
pusha
dec
and
sub
lcall
sbb
jo
pop
mov
push
or
out
insb
cs
cmp
ds
sbb
adc
andb
imul
adc
cltd
and
rclb
or
test
aas
lea
out
jno
xchg
pop
test
test
call
push
sbb
daa
roll
stc
divps
lret
mov
movsl
je
mov
sub
jecxz
inc
xor
and
movswl
mov
or
mov
sub
fsubs
xor
loop
daa
inc
xor
pop
idivb
fdiv
or
sbb
loopne
mov
add
push
inc
dec
lahf
add
insb
jae
mov
xor
mov
or
fcomps
lods
lahf
dec
test
loope
insl
dec
sub
add
repnz
mov
imul
loop
cmp
mov
adc
popa
add
dec
inc
dec
cmpsb
cmc
jnp
inc
cwtl
inc
xchg
movl
andl
mov
xor
test
stos
cmp
js
mov
cmp
fmull
adc
mov
push
xor
pop
or
dec
add
and
cmp
cmc
jbe
mov
mov
int
jge
rcrl
pop
roll
or
dec
arpl
push
and
jl
inc
or
jae
movsb
shrl
xor
pop
pop
push
push
pop
out
into
sti
pop
mov
aaa
pop
je
pop
jmp
mov
or
adc
cld
inc
pop
lahf
dec
daa
mov
adc
lahf
sub
sbb
xchg
mov
dec
or
push
rcll
inc
lock
push
dec
scas
movsb
mov
push
mov
sub
adc
mov
adc
inc
push
push
or
ss
lock
pop
scas
stos
push
pusha
and
fdivs
nop
jo
enter
inc
xchg
mov
xor
aaa
leave
jnp
arpl
add
cwtl
xchg
sahf
mov
or
ret
std
imul
ds
fsubrs
in
xor
leave
ret
cmpsl
sub
or
jle
faddp
add
repz
sbb
shl
js
das
xlat
cli
jbe
inc
pop
fadds
push
add
pop
cld
xchg
and
cmpsl
or
pop
testb
xchg
in
rcrb
jne
push
sbb
lds
pop
pop
arpl
inc
push
jmp
enter
jnp
push
or
add
icebp
sbb
aas
sbb
mov
sub
mov
push
mov
xor
add
sbb
pop
hlt
sbb
inc
sar
adc
pop
sub
dec
mov
or
lcall
pop
push
mov
dec
mov
test
mov
jae
jno
mov
push
jo
shll
call
ljmp
les
dec
cli
add
jmp
or
stos
aas
pop
test
aam
xor
inc
dec
jne
mov
lret
mov
xor
xor
add
adc
inc
pop
jecxz
inc
add
jns
into
or
add
icebp
dec
mov
or
mov
xchg
test
mov
xchg
add
mov
jmp
sbb
loop
das
mov
push
mov
xchg
mov
je
push
pop
or
xor
fsubrl
aam
mov
js
dec
nop
andb
sbb
jle
cmp
sbb
sahf
nop
push
shl
xor
addb
stos
data16
in
and
pop
in
jecxz
sub
popa
add
jl
add
repz
hlt
mov
dec
add
or
add
push
pop
jno
mov
add
icebp
lret
xchg
jo
stos
jb
jl
adc
imul
and
and
jne
cmp
sub
mov
mov
dec
out
aas
add
test
and
out
clc
outsl
daa
ds
test
cltd
negl
clc
or
cli
mov
stos
test
dec
sbb
mov
add
cmp
loopne
lret
cmp
popa
xchg
or
sti
adc
dec
xchg
mov
mov
xchg
sub
mov
sbbb
cld
add
ror
push
add
cmpsl
mov
inc
sub
addr16
nop
jnp
aad
les
pushf
das
pop
imul
or
clc
lret
movsb
lret
or
pop
pop
daa
stos
mov
add
jg
dec
std
xlat
into
inc
cwtl
dec
jne
add
sbb
mov
imul
fisubrl
push
or
add
jecxz
sarb
sbb
mov
or
out
aam
out
or
sbb
jp
mov
add
cltd
es
add
repz
sub
dec
lcall
popf
jae
xchg
in
and
pop
pop
dec
push
cmc
pushf
mov
addb
out
js
pop
ja
ret
and
push
clc
add
bound
ss
xor
out
cmp
mov
or
pop
jb
jge
gs
xor
cmp
jg
sahf
aam
lret
add
shrl
cltd
xchg
sub
adc
rol
cmp
sub
cmp
movsb
mov
dec
pop
sub
je
adc
movsl
mov
push
aam
stos
push
add
add
loopne
int
jnp
jno
ljmp
mov
mov
mov
xchg
mov
call
sbb
adc
mov
adcb
jl
mov
mov
cmpsb
xchg
xchg
dec
clc
xchg
add
aas
orl
test
add
pop
sti
adcb
xchg
das
loopne
call
jo
adc
adc
loopne
push
rcrb
cld
push
and
ja
xchg
sub
mov
cmp
cld
nop
lahf
or
cli
cmp
add
add
kxnorw
les
ljmp
fcomps
mov
bound
cmpsl
or
sub
push
pop
imul
stos
add
pop
inc
push
in
in
add
ss
xor
push
xchg
cld
pop
cmp
push
pop
jmp
push
push
imul
xlat
icebp
paddusw
pop
cmp
add
pop
sbb
sbb
in
adc
jp
and
fmull
cs
and
inc
sub
add
sub
add
aaa
pop
xchg
and
into
jne
lret
push
data16
fdivr
ljmp
enter
icebp
lcall
jecxz
push
divl
or
sbb
add
test
xlat
inc
mov
fdivl
or
pop
mov
loop
lock
movsl
shlb
das
cmpsb
lret
pop
shrb
enter
insl
pop
outsl
xchg
lds
ret
push
sub
sbbb
jge
fdivrl
add
cmp
insb
mov
and
pop
push
scas
add
bound
fcoms
nop
inc
jb
lcall
pop
repnz
pop
mov
or
out
jb
andb
mov
pushf
fdivrs
or
sub
andl
mov
or
mov
dec
xlat
ds
mov
sbb
call
bound
adc
sbb
testl
or
cmp
pushf
lds
dec
scas
cmp
pop
or
pop
loope
cld
hlt
clc
out
push
or
mov
inc
jmp
push
jle
adc
sbb
inc
pushl
cld
test
or
push
cmp
addl
xor
cmp
scas
shll
mov
mov
push
test
call
clc
jnp
add
stc
push
xor
mov
test
adc
rcrb
cld
sub
mov
add
out
cmpsb
mov
lods
mov
rolb
inc
inc
mov
dec
sarl
sbb
push
data16
cmp
out
xchg
rcll
jns
orb
add
mov
inc
pop
pop
sub
out
ret
xchg
mov
lods
ljmp
or
mov
subb
push
mov
loope
pop
add
xchg
push
ja
das
cmp
test
cli
in
cmp
or
xchg
or
fstpt
add
testb
and
inc
cmpsl
das
jo
popa
js
dec
arpl
scas
dec
cs
mov
push
inc
loope
pop
push
repz
mov
jne
or
popf
push
pushf
sbb
mov
fnstcw
movsb
inc
jnp
sub
sub
fs
xchg
aad
dec
push
dec
hlt
lea
mov
xor
jno
imul
lods
fldcw
pop
std
andb
pop
cmp
mov
daa
ja
dec
scas
xchg
add
jnp
adc
cmp
cmpl
sbb
add
jmp
dec
and
add
outsb
mov
lcall
and
lods
xor
or
ret
mov
add
out
movzwl
sub
adc
and
js
rcll
push
loope
jecxz
inc
pop
lods
push
nop
movzbl
mov
dec
nop
enter
mov
cmpsl
dec
daa
std
js
add
scas
in
mov
jae
sbb
sbb
or
pop
rol
adc
mov
inc
nop
lea
inc
mov
add
and
inc
mov
ja
hlt
scas
push
pushf
xchg
scas
lcall
sbb
xchg
pop
adc
testl
push
mov
or
jb
jb
mov
jne
fidivrl
mov
add
mov
add
mov
cmp
xchg
xchg
xor
pop
jmp
lods
out
leave
mov
add
lods
push
inc
lods
idivl
mov
jns
lea
das
jbe
fmull
jg
jb
push
pop
adc
xlat
adc
add
mov
shl
out
jne
call
jecxz
pop
adc
loop
pop
push
and
add
add
mov
push
jnp
mov
jns
cmp
push
push
lahf
sub
sbb
inc
jmp
add
mov
add
lock
imul
and
pop
out
push
xor
pop
test
adc
inc
dec
inc
xchg
ja
loop
and
fnstcw
jns
adc
test
cmp
test
push
sbb
daa
inc
jp
cmpsl
add
dec
outsb
dec
dec
stos
mov
cld
xchg
cld
add
xchg
cs
loopne
mov
cltd
jle
imul
add
loopne
add
into
mov
data16
add
push
jo
pop
inc
shlb
fwait
push
xor
dec
mov
add
push
push
lods
dec
cmpsl
and
bound
sti
daa
out
test
ja
cmpsb
inc
and
leave
dec
loopne
and
adcb
das
sbb
sub
insb
loope
bound
pop
sbb
stos
jno
jl
adc
xor
enter
lods
push
pop
mov
pop
cld
test
xor
jnp
sub
roll
jg
mov
push
data16
aaa
or
jp
mov
and
adc
popf
clc
imul
push
jl
adc
push
or
sub
fnstsw
mov
xchg
mov
pushf
btr
and
mov
das
or
cs
push
loop
fisttpll
mov
insl
jmp
pop
adc
mov
xchg
mov
cmp
repz
nop
mov
addr16
rol
shlb
add
lcall
lods
inc
push
daa
cmp
add
enter
pop
mov
scas
shr
lahf
notl
xchg
jae
sahf
call
fs
cmc
dec
test
pushf
mov
in
xor
add
cmpsb
cmp
xlat
pop
push
test
jns
xchg
pop
std
mov
jp
and
je
push
fldenv
pop
adc
ljmp
inc
and
sub
nop
pushf
xchg
and
adc
outsl
pop
add
push
adc
xlat
leave
movsl
or
call
scas
ss
dec
pop
xor
cld
popf
or
mov
add
call
scas
shlb
rcrl
inc
adc
cmc
sbb
pop
mov
leave
popf
pop
imul
fists
je
andb
sub
sar
add
push
or
lret
cli
push
jp
pop
cs
push
aaa
sub
push
imul
add
stos
sbb
sbb
or
dec
scas
and
pop
mov
sub
sub
and
mov
inc
cmpsb
jp
pusha
nop
jp
push
lret
sbbb
jmp
out
add
adc
dec
lcall
add
push
rolb
loop
lods
mov
mov
jbe
and
lods
pop
jnp
or
sti
jge
aam
clc
out
pop
outsl
stc
push
pushf
lcall
aas
andl
std
out
ror
inc
inc
test
test
jg
stc
or
mov
xchg
add
xor
aas
in
clc
and
mov
mov
add
out
xor
sub
addl
idivl
add
adc
lcall
push
mov
push
shl
not
sub
test
mov
sub
xor
inc
popl
jne
or
decl
adc
cs
add
negl
mov
adc
adc
lea
ret
mov
or
adc
fcomps
pop
add
push
add
aas
fldl2e
mov
test
or
lret
rcrb
arpl
fidivs
hlt
in
dec
out
add
ljmp
mov
add
in
add
mov
scas
clc
adc
push
push
cwtl
or
mov
loopne
jbe
pop
push
fmull
pusha
mov
sarl
xor
or
or
or
inc
popa
pop
jl
mov
insb
add
inc
or
or
add
ror
sub
lea
inc
lahf
shrb
xor
outsl
xchg
mov
jmp
xor
dec
daa
dec
jno
loopne
lock
add
fistpll
ficoms
nop
sub
dec
jl
mov
test
sbb
adc
shlb
cltd
aad
sub
add
jmp
pop
xchg
push
scas
xor
lods
jge
mov
sbb
adc
pop
loopne
jo
inc
das
mov
dec
enter
xchg
pop
dec
mov
notb
or
loope
xchg
lock
cmp
lret
dec
cmc
add
into
out
mov
inc
and
xchg
daa
push
stos
fisubs
movsl
andb
and
gs
mov
sbb
lret
or
mov
pop
pop
mov
or
dec
in
mov
mov
mov
mov
sub
adc
and
cli
or
inc
rol
adc
nop
subb
clc
jo
pop
xor
mov
inc
pop
mov
inc
sub
cmp
add
je
inc
enter
inc
xor
fldl
movsl
sbb
jno
aas
aas
ret
or
ret
lds
rcrb
or
arpl
xor
imul
jecxz
mov
daa
frstor
stos
push
cmp
loope
ljmp
fcoms
push
cmp
aam
push
pop
pop
popf
jno
shll
dec
pop
adc
mov
pop
aam
shlb
push
xor
notl
sahf
cmpsl
add
pop
add
arpl
and
movsb
xor
out
or
int3
loop
movsl
stos
out
add
in
shll
ret
test
inc
adc
in
cmpl
pop
adc
subb
pop
pop
mov
jge
mov
fsubr
pusha
sub
pop
add
js
and
outsb
shlb
addr16
push
mov
mov
iret
add
jns
add
shr
and
jle
mov
add
cmp
dec
fcmove
adcb
addr16
mov
test
lds
push
dec
in
rolb
pop
ret
pop
lret
sbbb
inc
sbb
pop
fstpl
cld
jno
out
subb
ret
add
jno
in
scas
push
add
jmp
adc
add
ljmp
nop
dec
scas
add
into
idivb
push
push
insb
xchg
jp
outsb
dec
mov
jbe
add
fdivrp
lods
inc
pop
js
das
mov
clc
rcll
pop
xchg
jb
das
mov
jne
lahf
sbb
jmp
bswap
cmc
adc
lcall
or
mov
xlat
les
in
push
mov
push
fiaddl
inc
das
testl
mov
mov
xor
mov
jge
xchg
mov
fs
pop
pop
jno
lods
mov
mov
fcmovnu
fnstenv
jl
mov
fbld
push
les
sbb
sbb
pop
in
push
js
mov
sbb
sbb
in
xchg
adc
inc
scas
movsl
pop
pusha
inc
push
push
add
jge
lds
add
pop
fsubr
mov
cmpsb
mov
dec
jp
mov
mov
pop
iret
or
aam
or
addb
mov
add
js
xchg
add
lret
shl
loopne
mov
jecxz
mov
jno
lock
sub
in
bound
sbb
cmp
mov
push
adc
mov
add
ret
xchg
mov
addl
int3
leave
sbb
cmp
jmp
iret
add
sub
lods
pop
cmp
dec
dec
faddp
rclb
nop
mov
adc
mov
push
adc
mov
or
rcrb
jge
push
sbb
or
js
mov
jbe
inc
adc
push
and
imul
and
insl
bound
xchg
cmp
shrl
imul
dec
ficomps
jbe
pushf
pop
gs
jno
into
int
or
aam
lret
mov
adc
mov
in
jmp
push
out
adc
xchg
cmp
mov
and
cwtl
cwtl
fisttpl
inc
sub
cltd
push
subl
mov
sarl
testl
cmp
lock
icebp
and
xchg
jno
add
mov
mov
pop
cld
data16
shlb
push
xor
push
nop
push
jne
adc
test
imulb
pop
lret
push
cmp
sbb
push
push
rclb
mov
shll
push
pop
adc
lods
dec
mov
aad
jl
test
mov
xchg
add
aam
sub
dec
lea
out
das
pop
fmuls
mov
add
repz
lock
pop
insb
jae
pushf
add
and
shll
popa
adc
icebp
and
repz
shll
jle
mov
das
inc
add
adc
imul
test
add
xchg
add
shll
jg
add
sbb
pop
jb
rolb
mov
add
mov
xor
ret
jge
lret
sarl
cmp
movsb
cmpsl
push
xchg
jnp
mov
add
mov
mov
pusha
mov
pop
test
sbb
insl
nop
mov
cld
push
or
xor
xorl
and
cli
xchg
xchg
rcr
pop
adc
add
je
and
inc
push
cmp
sub
js
popf
mov
jne
nop
fwait
xor
pop
repnz
push
jbe
jp
mov
rclb
cmpl
cmp
push
je
mov
mov
mov
daa
mov
xor
test
scas
rclb
sub
push
movsl
mov
cmp
subb
lahf
daa
mov
inc
and
fdiv
addr16
lret
in
or
loopne
jge
loope
xor
out
cmove
subl
mov
sub
repnz
fs
ja
adc
shld
add
mov
push
xor
cmp
xor
repz
int3
push
cwtl
cmp
loopne
sahf
xchg
mov
movsb
dec
sbb
sub
mov
inc
dec
lds
mov
or
mov
pop
fcmovnbe
pop
and
mov
xlat
sbb
mov
xor
pop
shr
push
mov
insl
xor
mov
shlb
push
add
popa
push
mov
dec
add
push
lock
stc
lods
sbbl
loop
jae
cmpsl
pushl
add
xchg
mov
in
adc
mov
xor
lret
cmp
es
xchg
adc
ror
sub
mov
cmpb
iret
sub
gs
mov
addb
shlb
add
dec
mov
ret
xchg
pop
scas
adcb
ficomps
add
nop
push
mov
pop
and
and
pop
icebp
lods
frstor
clc
adcl
dec
ljmp
dec
xor
cmp
mov
jge
ss
or
push
stos
add
adc
insb
ret
fimull
xchg
inc
xorl
dec
inc
mov
sub
cltd
repnz
and
loope
mov
push
inc
cmpsl
add
jp
sub
shlb
dec
jl
xorb
push
bound
mov
daa
mov
push
jge
shll
or
mov
and
rcrb
bound
cld
call
xchg
sbb
xchg
mov
loop
pop
orb
outsl
xchg
outsl
fwait
test
push
insl
cmpsl
aad
vmwrite
ja
and
inc
jno
pop
mov
sbb
add
xchg
scas
test
adc
lret
dec
dec
cmp
lret
and
mov
rorl
push
xor
push
out
rcll
dec
cmp
mov
repnz
iret
inc
jl
js
xor
add
in
xor
or
push
mov
mov
clc
xchg
pop
sbb
adc
xchg
stos
adc
je
mov
pop
out
push
pop
pop
mov
jne
mov
cmp
daa
mov
jae
adc
mov
add
pop
cmp
gs
test
pop
dec
scas
or
jle
jo
inc
add
sub
add
stos
cmp
in
add
fwait
push
mov
lds
cs
pop
add
and
jl
pop
rol
jae
add
jge
in
cs
gs
add
loop
jo
pop
push
add
ret
and
test
dec
inc
movsl
pop
scas
ret
pusha
dec
cltd
add
cmp
mov
frstor
dec
and
clc
pop
cmp
mov
xchg
cmp
sbb
lods
test
xlat
and
pop
test
imulb
jge
xor
adc
repnz
add
data16
call
jb
cmp
push
mov
jo
push
xchg
bound
stos
aas
pusha
test
stc
incb
fbld
sbb
xchg
test
jae
mov
loop
dec
lods
mov
xor
mov
int3
jecxz
mov
push
pop
push
add
out
outsl
push
sub
add
mov
sub
rcrl
pop
stos
jl
pop
pusha
push
test
das
push
sbb
dec
and
daa
mov
call
out
add
push
push
jnp
cmpsl
add
push
mov
and
add
cmp
pop
lcall
add
cmp
and
imul
jmp
mov
pop
out
xchg
push
loopne
js
daa
pop
sar
and
jp
test
mov
and
lahf
add
xor
pusha
sub
inc
fs
fnstenv
mov
inc
pop
or
sub
daa
fcmovnu
cmp
scas
add
push
data16
loopne
addb
mov
or
outsl
stc
cmp
jns
push
lahf
sbbb
push
mov
push
cltd
mov
insb
sarb
mov
pop
mov
push
sbb
mov
or
testl
pusha
add
pop
push
data16
sub
sbb
pop
jecxz
icebp
jns,pn
outsb
popa
push
in
mov
ret
xor
imul
push
pusha
inc
das
js
mov
xor
or
sbb
mov
arpl
and
fcmovbe
xor
pop
test
xor
call
push
add
add
pop
adc
test
fwait
xchg
sub
jg
aad
push
xchg
lea
jne
add
mov
stos
xchg
mov
fs
lcall
mov
in
pop
add
dec
test
arpl
mov
pop
xlat
cwtl
jno
mov
hlt
stc
pop
pop
mov
adc
inc
sbbb
sarl
adc
adc
shll
sbb
pop
andb
add
in
lahf
and
add
mov
xor
bound
cmp
xor
in
cld
dec
out
add
test
incl
xchg
and
stos
lcall
pop
xlat
pop
mov
push
jg
fimuls
sub
pushf
inc
dec
scas
cmp
test
xor
jg
imul
in
icebp
xlat
jmp
insl
push
cmp
push
ljmp
pusha
pop
dec
mov
data16
in
inc
xchg
sbb
ss
xor
push
xor
les
nop
adc
ret
xchg
hlt
adc
pop
mov
andl
into
lods
push
stos
dec
lea
inc
pop
repnz
test
add
jo
xor
cmp
lock
or
sub
popa
dec
jge
lea
loope
sbbb
mov
mov
es
xor
adc
ret
testl
pop
add
mov
imul
mov
and
andb
mov
inc
jb
push
roll
outsl
sub
xchg
cld
je
mov
ret
jp
nop
out
adc
hlt
loope
outsl
jno
jae
ja
jl
out
popa
and
cs
push
or
pop
cld
or
jno
sarb
xchg
add
push
insb
cmp
jp
mov
mov
push
jo
dec
ret
call
daa
and
psubusb
daa
push
or
add
push
inc
jb
repz
addb
sbb
dec
add
jg
pop
adc
xor
xchg
fcoml
decb
xchg
mov
mov
push
test
lock
dec
mov
or
loopne
mov
mov
out
push
jmp
lret
vmread
cmc
lahf
int
add
outsb
mov
push
mov
imul
xchg
mov
decb
movsb
aad
mov
orb
mov
cs
xchg
shll
fistpll
icebp
iret
mov
push
and
push
leave
and
sbb
inc
std
xor
or
jmp
out
in
mov
mov
out
idivl
sub
adc
mov
adc
xlat
ljmp
or
cmpsb
inc
cmp
pop
enter
popf
pop
mov
jns
fadds
mov
xlat
andb
pop
dec
lods
das
aas
test
dec
mov
push
add
xchg
pop
jl
adc
loopne
add
add
add
in
out
popa
push
xor
test
add
cwtl
push
outsb
push
dec
cmpsl
jmp
fadds
push
pop
or
lods
addr16
adcb
scas
push
dec
adc
and
sti
add
das
add
or
xlat
fwait
pop
add
and
fnstcw
push
addr16
inc
push
js
add
cld
adc
fiadds
fldcw
push
repz
shll
rol
or
and
loopne
es
test
dec
rolb
add
and
add
mov
jbe
adc
das
xor
movsl
jo
decb
mov
sub
inc
lock
imul
xor
out
xchg
popa
out
xor
jmp
fildl
les
js
mov
jp
add
inc
clc
loopne
xchg
or
inc
idiv
mov
das
jbe
daa
mov
lea
sti
btc
dec
inc
subb
aaa
sub
aas
psrlw
xchg
aam
popf
test
inc
outsb
adc
movsl
addr16
xchg
inc
xor
xchg
popf
idiv
add
orb
mov
xor
mov
repnz
ffreep
add
sub
daa
sbb
adc
es
sbb
ja
aam
mov
push
sub
fnsave
stc
pop
mov
pop
xor
cmp
repnz
jno
and
add
nop
cmp
inc
imul
sbb
push
cld
lds
lahf
xchg
push
jo
mov
xor
scas
adc
add
cs
rcll
mov
dec
mov
mov
fs
subl
dec
hlt
lods
inc
shl
aas
loopne
sub
mov
add
cmpb
insb
mov
adc
cmp
pop
jae
jno
pop
adc
jo
scas
fldl
cmp
mov
aaa
push
jne
cmp
faddl
inc
xlat
inc
and
dec
xor
enter
or
lock
mov
jae
inc
movsb
jle
jg
ja
shl
pop
xchg
mov
mov
cltd
jno
jmp
push
inc
pop
iret
inc
cmp
xorb
in
cs
or
adc
push
cmp
or
add
push
mov
add
adc
shl
jmp
add
push
xchg
call
xchg
push
xchg
xchg
gs
add
imul
outsl
popf
adc
loop
xlat
mov
hlt
add
jl
insb
roll
mov
popf
adc
and
and
fdivl
or
and
cmp
inc
gs
loopne
add
aaa
jno
push
sbb
mov
cmp
jl
push
ret
xlat
adc
xchg
adc
out
adc
out
xchg
scas
movl
dec
dec
mov
inc
inc
mov
lahf
pop
push
subb
add
fcmovnu
cmpsl
inc
xchg
adc
data16
adc
rorl
push
xchg
adc
std
push
dec
cld
sbb
outsb
inc
stos
leave
cli
cs
or
or
sqrtps
jmp
fmull
or
fstps
stos
lds
mov
and
movsl
add
rcrl
ja
sbb
xor
popf
jo
dec
lock
loopne
dec
daa
shrb
icebp
adc
int3
sbb
lods
bound
cmp
mov
push
clc
inc
stos
adc
les
or
pop
addr16
add
xchg
lahf
out
stc
scas
push
cs
rcrb
call
test
pushf
out
in
inc
pop
loope
add
clc
pop
xchg
cmpl
fdivrp
cmpl
mov
notl
add
inc
cmc
lea
push
mov
leave
push
lock
mov
popf
pop
adc
pop
inc
xor
fwait
and
pusha
daa
mov
sub
add
push
sbb
pop
add
xor
or
daa
add
rol
in
pop
fs
stc
mov
cmp
lret
leave
push
jbe
fsubl
cmp
xchg
fucomip
inc
xlat
imul
dec
sbb
out
icebp
cltd
xchg
insb
fsin
dec
cwtl
and
fisttpll
pusha
es
imul
mov
add
sarb
pop
push
aas
push
enter
and
dec
adc
add
loopne
mov
inc
sub
aaa
jo
jg
minps
cwtl
adc
push
pop
sbb
dec
jmp
fs
iret
flds
add
mov
mov
mov
add
fldenv
cmp
xchg
call
fs
mov
cmp
jbe
xchg
cmp
adc
scas
xor
and
mov
lock
mov
iret
addl
hlt
call
or
test
arpl
lahf
jb
sub
mov
xorb
test
pop
pushf
hlt
mov
std
cmp
jecxz
std
and
cmp
mov
aas
mov
enter
fisubl
ror
cld
je
outsl
xchg
cwtl
jo
cmp
push
fdivs
sbb
fildll
xor
jnp
fisubrl
pop
xlat
sbb
clc
scas
cmp
jne
pop
push
inc
pop
mov
out
push
or
js
and
adc
addb
adc
mov
mov
repz
push
ja
pop
mov
xchg
push
pusha
fwait
stos
aam
sti
xchg
lds
out
std
mov
ds
sub
dec
jne
shll
adc
or
mov
push
sbb
jne
mov
rolb
mov
inc
jne
es
cltd
jae
arpl
scas
addb
pop
add
push
jno
adc
fistpll
mov
push
dec
add
add
xor
addr16
sub
xor
mov
or
or
loopne
test
sub
jb
mov
xchg
push
mov
in
cs
adc
fucomi
js
cmp
mov
sbb
shrb
in
pop
jbe
and
cmc
or
pop
or
and
insb
repnz
call
pop
mov
pop
inc
neg
mov
xchg
xor
jbe
or
test
jecxz
add
sbb
add
imul
loop
inc
cmp
pop
lea
add
add
cltd
mov
mov
inc
mov
lea
mov
test
xchg
jecxz
inc
pop
or
dec
cmp
mov
cmp
dec
adc
les
dec
int3
mov
fmul
test
sbb
jbe
inc
push
sub
jns
test
sub
inc
jge
adc
test
mov
sbb
sbb
daa
push
mov
or
dec
test
loope
and
sub
lahf
push
push
or
test
movsb
push
test
gs
or
inc
lods
test
jmp
adc
sub
jns
fimull
adc
test
gs
or
adc
inc
mov
and
or
inc
shll
xchg
pop
test
push
and
xor
mulb
cmp
test
jge
mov
adc
jecxz
mov
and
inc
adc
cmovb
sub
test
mov
and
nop
bound
movsb
test
or
test
insl
and
sbb
pop
or
popa
add
in
mov
cmp
out
inc
inc
xor
orb
nop
mov
inc
fsubs
in
and
test
sub
sub
adc
jno
or
test
mov
insb
xchg
sub
adc
adc
sbb
mov
push
ja
pop
mov
loopne
xor
add
and
in
es
and
sbb
andb
push
ret
cmp
sbb
into
mov
xchg
pop
imul
fnstenv
bound
pop
jb
and
inc
push
ret
nop
arpl
popf
sub
imul
mov
add
mov
and
mov
adc
and
pop
ret
adc
je
mov
pslld
mov
pop
push
and
pmuludq
add
inc
or
pop
jle
adc
out
add
pop
bound
or
sub
pop
cmc
test
dec
out
fisttpll
daa
lret
decb
add
pop
pop
push
pop
ficompl
int3
ret
mov
add
mov
rcrb
daa
add
lods
mov
repz
sbb
add
sub
mov
add
cli
or
ret
shr
in
mov
sbb
lock
lcall
cmp
data16
fwait
popf
lcall
sahf
sub
stc
push
or
cmc
outsl
push
mov
ret
ja
fs
adc
inc
sub
mov
in
dec
test
lock
das
adc
lahf
sub
pop
pushf
push
adc
popf
sbb
cmp
lahf
nop
and
ds
or
adc
mov
sbb
add
sub
add
sbb
add
xchg
jnp
xor
stos
adc
int
je
sbbl
ret
add
pop
es
stos
inc
mov
push
inc
inc
ret
xor
sbb
iret
xchg
sub
sbb
js
lock
jne
outsl
adc
aam
lret
dec
add
push
lds
inc
pop
gs
pop
mov
sbb
lret
aaa
sbb
inc
jecxz
sbbb
mov
or
rcll
xchg
adc
into
sub
stos
pop
movsb
cwtl
adc
cs
jl
sbb
add
sarb
xor
inc
push
mov
add
inc
ds
sbbl
mov
movsb
push
cmpsl
ret
jecxz
adc
jb
jg
out
scas
dec
and
add
lods
adc
jmp
and
mov
dec
dec
leave
pop
sbb
mov
popf
fdivs
call
jns
ss
in
push
icebp
push
cmp
and
clc
decb
in
sbb
repz
mov
leave
pop
cld
and
fs
jbe
cltd
adcb
rcrl
sbb
mov
sbb
or
insl
iret
mov
add
mov
gs
nop
pop
stc
xchg
mov
sti
cmp
add
dec
loope
or
stc
loop
sub
or
ljmp
xchg
or
test
xor
or
stos
test
xchg
lods
add
repz
dec
loopne
mov
pop
ja
pusha
add
ss
mov
cmp
cmp
leave
add
scas
rcrl
add
lds
fistps
shlb
xor
add
xabort
add
push
push
ret
mov
test
mov
pop
or
orl
sub
dec
test
lret
mov
clc
push
mov
add
xor
push
add
icebp
insb
shrl
adc
add
or
push
push
int3
repz
push
rcr
clc
inc
add
les
inc
sarb
mov
sbb
push
xchg
xchg
or
push
push
jae
ljmp
add
stos
sbb
je
lock
jnp
out
js
ret
cmp
add
and
dec
sbb
mov
jmp
push
mov
out
inc
push
mov
adc
sbb
fs
adc
add
sahf
pop
aaa
scas
dec
faddl
out
pusha
add
movsl
dec
xor
pop
stos
jnp
push
test
call
mov
or
ljmp
mov
jae
cmpsl
sub
dec
flds
scas
lods
mov
hlt
add
loop
mov
fwait
xbegin
pop
hlt
xor
cli
popa
movsb
lcall
mov
xchg
je
addr16
outsb
add
test
add
jle
fisttps
mov
hlt
mov
inc
pop
sub
int
fwait
and
lock
push
test
cmp
clc
cltd
dec
sbb
add
sub
pop
cmpsl
xchg
add
mov
mov
enter
in
or
sbb
cld
cmpsb
sbb
stc
int
push
sub
push
dec
and
jno
leave
xchg
push
jle
mov
cmp
push
pop
mov
test
cwtl
aas
jb
inc
adc
mov
repnz
dec
cmpsb
insb
add
jle
sbb
fs
ja
lock
or
sbb
mov
and
in
loope
xchg
cld
push
mov
xor
add
sbb
icebp
test
repz
push
push
dec
clc
enter
pop
sub
and
dec
lcall
jbe
cmpsl
addl
cmc
pop
mov
add
push
mov
outsb
rolb
add
add
ffreep
fadds
je
aas
push
fwait
dec
add
mov
sub
lods
cmp
inc
repz
loope
addb
cmp
addb
loopne
add
mov
sarb
sahf
in
ja
adc
test
add
insl
aad
lahf
cltd
pop
add
add
push
sub
cmc
std
xor
pop
mov
add
out
or
stos
xor
sbb
pop
jo
mov
cmp
ja
inc
adc
insl
push
pop
imul
xchg
push
sti
pop
ret
fsubs
mov
test
call
mov
mov
mov
mov
add
fists
out
roll
outsb
or
mov
fwait
jl
add
cmp
jl
std
xor
out
inc
pop
cwtl
add
cmpb
loopne
lcall
add
enter
cmc
lret
xlat
out
pushf
rcrb
mov
aad
outsl
outsb
jne
ret
shll
rcrb
add
lret
scas
inc
cli
shlb
push
iret
inc
cmp
mov
or
cmpsl
lods
pop
cld
pop
mov
loop
pop
std
mov
outsb
shrb
pop
mov
and
sbb
outsl
arpl
sub
cli
ret
je
and
add
sti
cwtl
fldl
sub
cmpsl
stos
mov
hlt
add
fiadds
add
adc
push
jle
pop
cmpsb
lahf
jno
xchg
sete
push
movsb
pop
mov
xor
insb
mov
sbb
add
mov
outsl
jge
cwtl
cmpsl
add
xlat
push
or
or
pop
pop
fmull
pop
add
or
aaa
dec
out
jg
or
push
into
addl
jge
cmpsl
adc
in
inc
js
in
jb
cmpb
jbe
inc
sub
xchg
push
pop
fmuls
dec
pop
add
and
into
shl
add
inc
sbbb
fildll
fstl
push
xchg
shlb
sbb
xchg
cs
inc
enter
sbb
xor
fs
inc
inc
add
mov
out
lcall
in
jns
add
mov
add
mov
add
in
adc
or
repz
mov
nop
test
mov
sahf
imul
sub
ljmp
inc
mov
pop
add
push
out
cli
lods
pusha
rcrl
and
jl
fadd
lds
sbbb
cmp
sub
cld
outsb
cmpb
adc
inc
pop
ret
pusha
mov
inc
add
aam
xor
stc
inc
lds
pop
jl
test
aas
inc
sbb
loop
out
add
sub
cmp
adc
jne
fs
inc
shlb
pop
out
movsb
pusha
cli
dec
jmp
sbb
sub
adc
sub
mov
pop
pop
inc
xorb
ljmp
pop
leave
arpl
insb
stos
cwtl
adc
aas
add
pushf
adc
sbb
lret
dec
imulb
pop
add
stos
js
ret
pusha
add
push
gs
cmp
in
std
mov
repz
arpl
shrb
jns
ss
popa
xorb
sub
ja
das
add
xchg
ljmp
add
add
mov
scas
add
push
pop
ljmp
rolb
cmp
xchg
pop
pop
jecxz
inc
aam
movsb
xchg
xorb
mov
fwait
add
sub
lds
jno
add
xchg
or
fisttpl
movsb
sub
inc
dec
jae
push
add
mov
or
sub
cmp
adc
bound
or
add
and
jge
stos
movsl
sub
mul
xor
data16
shr
sbb
xchg
sub
xchg
pop
push
insb
aaa
rolb
or
mov
mov
lahf
cmp
and
jge
repnz
jnp
mov
iret
inc
pop
dec
pop
add
pop
mov
inc
xor
dec
push
loope
rclb
pusha
stos
cwtl
rcrb
xlat
xorb
add
mov
rcll
sub
aam
push
cld
jne
nop
jge
cmpsb
xchg
sbb
frstor
rolb
fs
mov
cltd
rcrb
je
and
push
pop
in
sbb
outsl
pop
add
or
adc
jo
add
mov
dec
pop
pushf
pop
lods
inc
fucom
mov
mov
hlt
xchg
jp
in
sub
and
add
fdivl
add
in
pop
sbb
in
out
mov
lods
pop
add
and
icebp
mov
lret
inc
in
lahf
inc
imul
insl
pusha
cmpb
dec
pusha
add
fstpl
lods
pop
add
pusha
sub
icebp
fwait
out
inc
mov
adc
push
add
out
jns
and
sub
add
mov
dec
add
lea
add
pop
int
mov
or
jle
mov
jb
sbb
roll
andb
sub
loope
xor
shrl
add
lret
add
popa
pop
rcrb
cmp
je
mov
lret
or
cmp
and
pop
sub
mov
pop
rcrb
cmp
and
jne
push
cmp
nop
data16
in
xor
aas
add
mov
insl
arpl
lods
mov
call
push
add
pop
int3
mov
add
mov
stos
fdivrl
add
rcl
adc
das
cmp
jae
inc
daa
add
mull
cltd
ljmp
adc
pop
dec
jb
stc
mov
mov
xor
js
ja
repnz
testl
pop
loopne
pusha
lea
sub
rolb
jge
add
imul
add
mov
jns
inc
clc
cmp
arpl
cli
rclb
adc
icebp
xor
nop
add
inc
mov
arpl
push
xor
cmpl
add
arpl
xchg
cmp
push
jl
add
ss
add
flds
nop
cmpsl
arpl
repz
xchg
cvtpi2ps
inc
or
jbe
data16
in
clc
mov
push
push
push
xchg
adc
or
add
cmp
insl
psllw
cmp
jg
pop
stos
hlt
mov
fdivs
or
xchg
out
pop
dec
loopne
push
les
jle
aam
mov
jp
les
loop
jmp
movb
xor
iret
movsb
dec
dec
and
jecxz
arpl
shrl
loop
out
add
leave
sub
aad
adc
xchg
cmp
mov
add
repnz
pop
push
ficoms
loopne
xchg
aam
or
andl
ljmp
mov
add
ffree
mov
ja
popa
add
inc
lret
mov
add
faddl
pusha
lds
adc
ljmp
mov
and
in
add
sub
arpl
add
jno
pop
dec
mov
add
fdivrs
inc
leave
sub
rolb
add
rorb
cmpsl
add
adc
cmp
xchg
popa
testl
add
movsl
loope
xor
movsb
ds
xchg
dec
pop
inc
add
add
stos
push
xor
add
mov
mov
jmp
pop
and
inc
mov
adc
popf
xorb
ljmp
mov
jne
mov
fsubrl
fdivrp
add
enter
scas
pop
jmp
mov
xchg
flds
xchg
or
jbe
add
sbb
pop
add
or
fbld
adc
call
add
loop
popf
std
rolb
sti
pop
leave
mov
fwait
lods
clc
inc
in
jmp
pop
inc
dec
add
cmp
insl
loop
rorb
scas
leave
jae
loopne
and
aad
add
pop
popl
sub
sbb
imul
jne
je
jp
add
cmp
out
das
test
aad
or
mov
movsb
loopne
sub
add
add
xor
movsb
mov
stos
lea
add
lret
add
pushf
lods
sbb
jns
cmpsl
mov
adc
xchg
sbb
hlt
shlb
xor
or
jmp
fildll
mov
je
nop
mov
xor
insb
xchg
nop
test
js
jl
add
adc
add
and
fistpll
xor
jnp
lret
insl
movsb
pusha
jo
mov
and
mov
add
addl
push
test
adc
mov
and
xlat
hlt
pop
inc
push
leave
mov
movsl
mov
fsubl
fistpll
nopl
imulb
dec
sbb
xchg
add
mov
jae
inc
cmp
adc
cs
push
loopne
outsl
in
pop
cmpsl
fdivrl
mov
data16
dec
add
sahf
test
add
add
insl
push
push
xchg
mov
sub
add
fcompl
mov
mov
imul
roll
jmp
sti
mov
hlt
jno
cmp
dec
adc
and
iret
add
push
jle
stos
xchg
jne
loopne
xchg
add
test
lcall
and
xor
pushf
sti
inc
add
mov
outsb
cmp
sahf
and
cmc
es
ret
ret
imul
jp
lock
cltd
mov
ret
lret
inc
repz
mov
scas
or
sub
call
push
adc
dec
pop
loopne
and
push
shll
push
mov
sbb
cmp
push
sub
test
pop
add
test
cwtl
sti
test
sub
rcr
roll
sbb
addb
or
lock
push
lock
inc
aaa
push
jp
add
in
xchg
dec
or
int
fsubrs
and
sub
outsb
cmp
roll
loop
add
xorb
lds
jmp
jo
pushf
mov
jnp
shlb
rcl
jl
push
mov
sbb
inc
testl
or
add
jge
pop
sbb
mov
mov
add
mov
test
mov
adc
test
fmull
cwtl
mov
rcrl
push
inc
shrl
adc
adc
insb
jl
push
mov
mov
cwtl
jl
out
push
xor
xor
movsb
shl
xor
xchg
push
sub
les
add
xchg
insl
fsqrt
lret
add
fwait
pop
sbb
scas
and
sbb
add
or
pop
adc
inc
mov
mov
ret
lret
xor
in
xchg
enter
xchg
push
and
and
xchg
loopne
mov
cmpsl
cld
cmpsl
xchg
pop
add
xlat
subb
in
les
sbb
fs
push
mov
push
mov
mov
adcb
int
add
dec
js
fdivrs
add
jl
mov
cmp
ret
xlat
or
add
adc
add
adc
mov
andb
imul
popa
in
jns,pn
xor
xchg
popa
fstpl
or
adc
es
add
shl
pop
jns
leave
xor
paddsb
popl
push
jecxz
nop
sbb
sbb
sbb
jae
cli
add
add
cltd
enter
movsb
xchg
movsl
ds
mov
mov
popa
clc
test
add
add
push
clc
xchg
inc
push
add
repnz
xchg
movsl
out
iret
pop
sbb
pop
in
add
dec
jp
dec
push
loopne
add
lcall
sub
das
js
bound
add
lret
push
mov
fwait
push
adc
int3
clc
fidivl
dec
xor
jb
jbe
add
scas
lcall
mov
cmp
mov
fmul
add
push
inc
push
hlt
or
call
movsb
mov
sarb
notb
mov
sbb
call
stos
fidivs
lcall
pop
repz
add
cmp
cmp
xor
dec
or
negb
inc
arpl
jmp
addr16
fstpt
add
cmpsl
dec
clc
pop
les
xchg
test
or
pop
pop
lods
mov
loopne
mov
sbb
add
jae
and
sti
jmp
adc
add
ret
repz
js
ror
repnz
lret
negl
fcomi
pop
sbb
or
out
and
ljmp
fbld
fdivr
add
mov
out
inc
and
leave
movsb
shlb
jbe
int3
jae
ret
adc
add
xor
fisubl
lea
je
sub
jnp
xchg
gs
and
rolb
insl
push
je
sub
mov
shll
fistl
addb
jge
lds
or
jns
adc
call
mov
mov
aas
jo
les
pop
cmovns
aam
push
cld
loope
clc
cmc
add
shll
pop
mov
mov
insl
mov
leave
ljmp
rcrb
pusha
std
and
imul
fwait
insl
cli
sub
in
add
push
mov
push
rorb
cmp
lahf
pop
in
jbe
sub
and
xchg
add
cmc
adc
mov
rolb
pushl
add
jecxz
pusha
jmp
xchg
add
inc
xor
fstl
and
addr16
mov
in
out
xchg
sub
out
pop
cmpsb
xchg
push
mov
loop
insb
out
xor
xorb
add
sbb
sbb
fs
push
mov
push
aas
sub
lcall
jns
into
inc
shll
or
cmpsl
mov
popf
lcall
rclb
test
pop
mov
push
fwait
stos
psllw
sahf
and
repnz
xor
cwtl
stos
jb
je
add
int3
inc
dec
das
sbb
aam
imul
adc
daa
fisubl
bound
rcl
and
fcoml
push
pusha
popf
dec
cmp
ret
add
add
sbb
stos
sub
ljmp
repnz
push
inc
push
or
and
pop
psllq
shl
adc
int3
and
add
repz
push
inc
adc
ss
cmp
or
sub
adc
xor
stos
or
xchg
jl
stos
dec
cmpsb
out
add
call
rcll
sub
sub
addr16
mov
jg
xor
dec
cmp
sbb
jbe
test
nop
dec
test
mov
push
push
add
stos
and
and
out
xor
outsl
or
and
testb
and
cwtl
fidivl
fs
adc
icebp
push
mov
sahf
cltd
stos
loopne
mov
lock
jae
adc
int
xchg
mov
jno
imul
cmp
pop
stos
sbb
and
adc
pushf
loopne
int3
xor
add
jb
test
popa
jl
push
mov
out
pop
push
and
pushf
sub
insb
inc
add
sti
icebp
jle
mov
xlat
pushf
stos
add
movsl
icebp
and
outsl
mov
sbb
dec
cmpsb
mov
js
es
test
pusha
ffreep
sub
cld
int3
add
lret
pusha
jbe
je
jae
stos
mov
adc
test
push
inc
push
adc
cltd
jl
lret
and
sub
test
pop
and
addb
cmp
push
shufps
add
add
es
xor
mov
in
pop
ljmp
jle
sub
pop
hlt
es
and
or
mov
lock
lcall
imul
or
into
inc
dec
popf
push
pop
subb
mov
sbb
jmp
add
dec
iret
adc
testb
hlt
lods
stos
stc
add
cmp
jg
enter
jb
andb
xor
hlt
jecxz
cmp
mov
lock
frstor
rcl
push
or
or
cmp
mov
scas
es
mov
bndstx
or
sbb
jp
cmp
cmp
jns
movsb
inc
shlb
jno
xor
lods
and
dec
repz
dec
lret
in
ljmp
cmp
sbb
aas
mov
js
insb
pop
nop
cmpsb
sub
out
mov
mov
add
imul
ja
sbb
xchg
gs
punpcklbw
mov
xchg
dec
add
psubsb
cmp
movsl
test
add
loope
sbb
mov
sbb
pop
mov
mov
int
and
arpl
jmp
sub
cmp
sti
sbb
push
add
push
xor
lea
into
addr16
cmp
and
incl
clc
gs
fwait
loop
jo
out
mov
dec
mov
imul
rorb
fiaddl
fidivl
fs
inc
dec
jecxz
cmp
dec
push
cmp
xor
adc
add
popa
mov
lcall
sbb
pop
repz
mov
pop
xor
mov
adc
cmp
pushf
or
bound
add
sbb
inc
call
mov
nop
inc
pop
ljmp
notb
push
xchg
fiaddl
sbb
add
xchg
pop
xchg
int3
repnz
xor
out
dec
mov
add
push
pop
cld
insl
add
add
movsl
mov
leave
shlb
repz
sub
mov
xlat
or
movsb
lds
lret
sbb
or
sahf
popf
adc
adc
or
test
or
ds
adc
sahf
popf
sbb
xchg
call
and
or
sbb
cmp
sub
and
andl
push
mov
add
sbb
adc
out
imulb
ror
cmpsl
sub
add
sub
sub
gs
jbe
add
xchg
out
jl
je
xor
jmp
shlb
stos
les
mov
add
insb
insl
and
js
std
fwait
jl
shr
mov
test
push
cld
sub
cmp
adc
jns
cld
add
add
xchg
lds
fsubr
pop
rclb
rcrb
add
push
jg
add
cmpsl
shll
add
cmp
imul
cmp
or
pop
jnp
and
push
mov
mov
jne
out
dec
incb
mov
test
das
add
mov
cmp
loope
add
push
mov
add
cmp
inc
sbb
sarb
xchg
ret
shl
inc
insl
and
add
sub
test
loopne
roll
jb
jmp
fisubs
outsb
xlat
add
or
pop
dec
lods
add
xor
out
push
loop
or
add
xchg
push
shlb
dec
push
in
lock
mov
adc
xchg
adc
scas
jo
mov
popf
pop
jns
lods
in
iret
gs
jge
leave
push
in
add
inc
sub
add
cmpl
jne
orb
xlat
adc
xchg
xchg
jge
xchg
lahf
add
push
pop
fcoml
push
out
sbb
or
xor
daa
pop
dec
icebp
repz
sarb
jnp
test
imul
ficoml
pop
add
cli
inc
popf
cmovg
fidivl
pop
outsb
lahf
cld
adc
ret
sub
test
add
dec
mov
in
out
and
lock
das
add
cmc
xchg
out
or
sbb
adc
cmp
mov
lahf
add
xchg
xchg
es
cmp
xchg
push
add
inc
cmp
dec
fcomp
mov
cmp
sti
xor
test
mov
leave
push
loopne
movsl
ja
inc
add
pop
divl
into
fdivrs
xchg
xlat
in
stos
add
hlt
movsl
repz
add
xor
jle
and
dec
pop
fdivr
fldt
mov
xor
xchg
in
cltd
enter
ss
adc
or
sbb
xor
xor
xchg
add
pop
pop
imul
sbb
jnp
add
stos
popa
mov
add
in
dec
cwtl
add
stc
out
inc
shrl
pop
pusha
sbb
and
add
repz
cli
mov
movsl
mov
cmpsb
fcom
fadds
jo
bound
cs
cltd
add
cmc
hlt
pop
xor
test
jne
rcll
jns
fsubrs
cmpsl
add
testb
cld
out
jp
push
pusha
in
mov
sahf
popa
test
mov
rcll
push
sbb
add
aam
pushf
jp
ret
xchg
add
inc
inc
pop
lods
xor
jae
add
jb
flds
lds
ds
shlb
sbb
jo
stos
cltd
arpl
decb
shrb
testb
xor
add
mov
or
rcl
jg
xchg
orb
jmp
enter
pop
xchg
and
jp
pop
adc
mov
mov
push
cld
lock
inc
mov
add
cltd
aam
mov
xor
push
in
jae
add
ja
iret
movsl
sub
xor
inc
or
sarb
lods
ficoms
outsb
jb
and
sub
push
stos
jno
mov
pusha
vpcmpgtd
pop
insb
dec
cmp
test
lock
xor
into
adc
js
dec
pusha
sbb
fimull
cli
xor
add
fistl
pop
aam
dec
xchg
pop
scas
jbe
test
fisubrl
lds
lods
test
out
and
inc
ja
add
or
leave
fisubs
xor
xchg
mov
mov
cs
add
fsub
addl
rorb
mov
nop
les
dec
xchg
rcrl
pusha
cmp
ret
push
xchg
mov
cmp
jnp
mov
imul
xor
or
sbb
mov
mov
test
mov
sbb
sub
fstp
jge
into
fsubr
loopne
gs
jle
pop
iret
test
imul
push
pushf
mov
in
and
pop
xor
pop
push
cmp
popa
jp
rorl
scas
sbb
inc
pop
push
add
das
add
push
divb
call
inc
pop
bound
hlt
and
sub
arpl
inc
pop
push
lret
add
jg
mov
jle
dec
lea
add
mov
clc
insb
dec
test
ret
push
addb
pop
mov
push
or
add
mov
xor
in
test
sub
mov
lods
dec
or
push
adc
pop
in
jg
inc
or
ficompl
fs
jo
ljmp
cld
cmp
fmul
cmpsb
sbb
jp
adc
pop
test
sarb
push
rclb
or
dec
cmp
shr
pop
sbb
mov
sub
sbb
push
imul
push
fsubrl
push
xlat
mov
add
push
orl
pusha
hlt
dec
pushf
push
push
add
mov
shll
enter
mov
push
sbb
mov
aam
xor
sbb
add
cmpsl
clc
cmp
jnp
mov
arpl
es
add
pop
pop
sbb
mov
nop
int3
mov
stos
lahf
cmc
test
mov
nop
mov
add
lcall
jns
add
call
icebp
rolb
insl
push
sbb
out
add
sbb
and
sti
mov
add
jb
pop
push
stc
add
cmp
incb
ljmp
and
imul
push
jo
sub
push
mov
ss
fbstp
sbb
adc
cmpsb
enter
add
rcl
inc
adc
shll
imulb
push
dec
subl
and
push
sub
dec
ss
mov
mov
sub
loop
jo
xorb
test
jecxz
ret
bound
adc
lods
cmp
mov
sub
movsl
fsub
fadds
dec
mov
icebp
xchg
xchg
inc
roll
test
cmp
pusha
fsubrl
test
leave
fistl
jmp
ds
ljmp
dec
je
rolb
sub
mov
rclb
movsl
in
xor
jp
pop
clc
push
inc
xchg
nop
out
imul
outsl
xor
in
out
stos
pop
adc
mov
shlb
imulb
pop
dec
jnp
loope
xchg
lahf
xlat
adc
add
push
add
and
sub
ja
pop
ret
inc
fsubl
cwtl
and
fisubrs
push
xor
je
dec
add
nop
ja
add
push
aas
sbbb
mov
cwtl
pop
jo
repnz
add
xchg
pop
push
jae
aas
mov
loopne
pop
cmp
fwait
shlb
pop
test
pop
and
xlat
cwtl
mov
add
jmp
out
push
cmp
test
mov
or
mov
pusha
mov
das
in
in
add
pusha
pop
ja
leave
jle
mov
out
stos
ds
add
fsubs
aaa
sub
dec
mov
inc
test
fimull
rcl
das
sbb
iret
mov
mov
or
stos
lcall
add
fdivl
add
dec
xorl
decl
jo
inc
dec
cltd
mov
xchg
popf
mov
add
xor
push
push
add
test
xchg
in
add
movsb
jge
dec
std
loope
test
adc
jmp
test
add
ficomps
pop
test
inc
test
sbb
frstor
std
cmp
stos
and
nop
lock
icebp
loopne
push
scas
subb
jg
jge
or
jmp
jecxz
add
dec
cs
adc
inc
mov
mov
movl
testl
inc
mov
ljmp
sbb
or
or
mov
cmp
leave
ret
dec
mov
ljmp
jae
dec
shlb
add
cmc
sarb
push
fldl
cli
fimuls
mov
pop
sbb
mov
fcoms
jmp
add
clc
ficoml
loopne
movsb
aam
dec
xlat
ror
inc
xchg
outsl
inc
or
cmovnp
inc
mov
clc
xor
jno
out
fdivrs
rcrl
dec
flds
adc
add
pop
dec
rolb
dec
cwtl
int3
xor
add
push
insb
sub
clc
xchg
mov
lret
test
mov
xlat
fists
stc
push
arpl
mov
sbb
dec
in
adc
mov
cmp
mov
dec
or
pop
rcrb
loopne
je
pop
loopne
mov
mov
pusha
mov
rolb
inc
xor
decl
pop
pop
insb
jbe
rclb
and
dec
push
jge
call
mov
pop
arpl
mov
pop
xor
adc
es
lock
sub
cmp
movsl
inc
ds
add
push
pusha
loopne
cmpl
insl
inc
fucom
mov
mov
cmpsl
fadds
nop
sahf
add
cmp
sub
add
lock
jo
shrb
popf
aas
jp
mov
enter
cmp
repnz
hlt
sub
dec
leave
cli
cwtl
outsb
add
fldt
adc
adc
mov
pusha
cld
in
jl
sahf
mov
les
dec
jg
mov
roll
in
out
xor
add
pop
repnz
add
test
popa
std
add
dec
addb
imul
mov
repz
cmp
into
pop
push
push
ljmp
mov
jne
inc
aas
inc
jae
cmp
lds
push
inc
xchg
repz
roll
repnz
iret
arpl
imul
js
rclb
add
aad
enter
out
cmp
or
or
inc
cmp
rolb
mov
lret
push
iret
add
leave
add
mov
aam
call
bnd
cmc
mov
rcrb
dec
shlb
sbb
lods
jo
or
inc
add
mov
pop
mov
sti
in
mov
add
out
or
rclb
mov
and
add
pop
jecxz
or
adc
inc
stos
lret
pop
hlt
add
adc
call
add
aad
fdivs
jo
aaa
add
popa
adc
in
dec
xor
ss
sbb
pop
paddsb
push
out
cmpb
aam
insb
pusha
mov
data16
popa
sbb
pop
mov
pop
test
inc
xor
sarb
push
pop
pop
lahf
ret
test
xor
or
xchg
and
mov
fimull
mov
loope
jb
pop
aaa
test
and
fsubr
test
push
or
or
sbb
test
std
adc
pop
mov
aam
roll
fdivl
sbbb
leave
add
aad
push
mov
jb
cmp
mov
xor
scas
or
cld
test
sbb
lret
enter
xchg
mov
add
cmpl
je
xor
jecxz
std
or
mov
jo
js
call
adc
or
sti
test
int3
test
add
aaa
mov
jo
loopne
add
xchg
jnp
out
icebp
add
push
mov
adc
mov
adc
fnsave
jo
js
repz
test
inc
and
add
pop
xchg
push
fstpl
sbb
dec
sbb
popa
adc
push
add
loope
mov
mov
pop
pop
imul
inc
lret
add
cmp
dec
add
pmaxsw
add
sti
cltd
sub
rclb
fwait
add
adc
andb
bound
lret
push
fisttps
loope
mov
lret
jo
mov
enter
lods
out
push
ljmp
sahf
aad
cltd
sbb
cmp
push
inc
pop
inc
je
adc
fst
add
out
and
dec
lds
rorb
adc
je
lods
jbe
hlt
sub
jge
int
lods
add
xchg
xor
jb
add
xchg
fcoml
sub
sub
xchg
xor
xor
inc
lods
jmp
cmc
and
sub
loope
jo
fisttpll
aam
xchg
cld
push
xchg
inc
inc
mov
dec
cwtl
lahf
adc
xchg
rcrb
into
add
sbb
dec
cmc
or
shll
xor
cmp
pop
gs
pop
mov
mov
and
mov
adc
mov
xchg
push
lods
jae
xchg
data16
mov
xchg
inc
add
xor
and
mov
test
hlt
pusha
int3
push
jg
push
pushf
stc
adc
cmp
rclb
xchg
mov
mov
mov
cld
test
fs
test
jb
incb
mov
bound
sarb
or
xchg
loop
or
add
fsts
aaa
out
cmpsl
and
pusha
xor
inc
call
lret
sbbb
xchg
push
xchg
sub
hlt
add
hlt
dec
sbbb
sub
xor
test
sbb
and
xchg
or
es
add
or
test
inc
arpl
and
and
ljmp
orl
xchg
adc
add
enter
rorl
sbb
pop
mov
fmuls
insl
sub
je
add
packssdw
xor
lahf
xor
nop
sub
cmpb
add
addr16
mov
cmp
jge
mov
fldenv
jmp
mov
dec
nop
sbb
outsl
sub
cmp
stc
or
es
or
pop
cmp
push
sbbb
mov
pop
loope
in
mov
jmp
mov
push
lret
mov
cmpsl
cmp
xor
sbb
sahf
std
mov
fisttps
aas
and
pop
rorb
loope
sub
xor
sub
lock
cmpl
in
gs
jnp
cmp
cmc
push
subb
adc
pop
sbbl
sar
dec
add
out
bound
cmovs
inc
push
sub
adc
mov
cmp
xor
or
push
fwait
sbb
ret
cwtl
js
push
cmp
pop
mov
roll
cwtl
adc
and
loopne
sbb
or
out
add
sub
mov
sbb
mov
fsub
test
loope
add
repnz
push
test
inc
mov
in
loope
arpl
dec
and
mov
mov
dec
jle
lea
dec
push
lret
xor
test
adcl
pop
js
loope
aam
or
adc
mov
xor
call
sub
sub
ja
and
into
adc
add
dec
pushf
mov
adc
jo
push
or
movsl
fstl
fmul
popa
mov
cmpl
scas
xchg
cmp
orl
xchg
xchg
or
sub
mov
adcl
inc
mov
xor
xor
xor
cmc
xor
inc
sarb
cmp
jg
push
scas
mov
and
mov
ret
or
aas
dec
mov
stos
movsb
push
xchg
xchg
add
jo
dec
shll
inc
hlt
lcall
inc
test
xorb
sub
jecxz
push
inc
mov
adc
mov
cmp
orb
testb
or
cwtl
inc
inc
jecxz
bound
or
jns
js
add
fs
lods
cmp
jae
or
lcall
roll
mov
insl
dec
sbb
dec
pop
xlat
loopne
addr16
fistps
test
cwtl
sub
sbb
lahf
mov
lea
add
cmpsb
mov
sub
cwtl
sbb
lret
mov
pop
add
dec
dec
add
dec
mov
data16
mov
push
dec
cld
or
xchg
sbb
sub
rcr
or
and
sub
fcomps
int3
xor
add
sub
in
loopne
sbb
dec
fisubs
sbb
cwtl
cmp
sub
testl
and
sbb
adc
pop
mov
xchg
push
inc
sub
mov
mov
outsl
sahf
mov
call
popa
pop
pop
aam
mov
and
xor
and
push
aas
xchg
and
inc
fcompl
mov
dec
xchg
cmp
sbb
or
jns
inc
push
outsl
insb
push
xor
dec
xchg
movsb
adc
fistpll
and
into
push
jne
and
add
cs
mov
add
or
xor
inc
aam
xor
or
inc
mov
ds
mov
daa
inc
ret
cmp
mov
mov
add
mov
pop
mov
push
or
sbb
test
rolb
fwait
divb
ja
shrl
and
dec
xchg
mov
add
cmp
in
mov
xchg
mov
jnp
or
or
hlt
inc
subl
ja
fs
loopne
test
mov
stos
jl
int
cwtl
cmp
mov
mov
mov
clc
add
xor
mov
mov
clc
push
call
js
mov
and
andl
and
cmpsl
pushf
xorl
adc
mov
les
sub
xor
add
jmp
pop
fimuls
adc
jnp
xor
insl
inc
inc
mov
jo
movsl
aam
dec
shlb
hlt
pushf
inc
inc
adc
mov
dec
and
lahf
dec
cmp
js
dec
inc
push
xor
xchg
inc
fwait
lods
inc
shlb
sbb
xor
pop
mov
fcoml
jbe
sbb
xor
ret
mov
pop
pop
or
aas
call
fcoms
pop
mov
xor
add
push
pop
lret
sub
dec
cmpb
iret
adc
mov
or
sbb
int3
push
sub
test
adc
nop
rcll
test
cmp
sub
mov
add
sbb
add
push
jo
enter
leave
movsb
push
jno
ja
jo
mov
loopne
leave
sbb
cld
push
and
stos
push
fs
push
inc
inc
and
mov
mov
lcall
jl
in
pop
sub
dec
and
cwtl
pushf
jo
loopne
mov
mov
add
mov
add
jl
dec
scas
xchg
xor
mov
sub
mov
repz
xchg
or
subb
mov
xchg
adc
sbb
mov
or
arpl
mov
push
cmp
addl
pushf
insb
adc
adc
lock
mov
gs
adc
xor
inc
add
cltd
aas
xorb
sbb
mov
or
lcall
push
std
rolb
mov
mov
xchg
mov
roll
pushf
ds
sbb
or
bound
add
jno
shrb
dec
pop
shlb
add
jl
mov
cmp
sti
nop
jb
popa
adc
cwtl
sbb
mov
loop
stc
in
pop
and
cmp
lret
add
jnp
fldt
or
add
and
add
insl
lods
mov
insb
pusha
fstpl
push
adc
xchg
or
pusha
lahf
and
movsl
add
fsts
repnz
in
add
mov
adc
les
pop
aas
pop
push
inc
sti
imul
or
dec
movsb
pop
test
or
pop
cwtl
sub
out
add
leave
and
call
ja
je
repz
pop
sub
pop
dec
scas
out
mov
fisttpll
add
ja
test
sub
add
and
out
add
idivl
mov
rcll
inc
ja
jbe
add
movsb
and
push
mov
jl
nop
mov
rorb
fldt
push
mov
or
xchg
adc
hlt
es
push
repnz
stos
inc
inc
pop
pop
iret
add
scas
pop
adc
mov
pop
hlt
cmp
and
loop
cld
mov
shl
aaa
lds
mov
nop
jle
jge
or
test
lds
in
add
jle
pop
or
cli
dec
mov
inc
dec
call
pop
push
push
pop
pop
push
inc
popf
pop
add
add
jo
add
xchg
pop
std
repnz
test
lahf
cltd
lods
aas
mov
mov
add
cmp
dec
mov
push
or
cmp
loopne
add
in
mov
and
gs
jg
dec
add
dec
sbb
shlb
pusha
mov
int
pop
cmp
and
test
clc
pop
push
das
add
mov
mov
push
je
add
xchg
mov
cmc
cmpsl
and
mov
test
repz
lret
stos
faddl
aam
lods
dec
inc
add
sub
and
jae
add
push
pop
cmp
cmpsl
xchg
add
mov
cmp
push
stos
push
mov
scas
xor
hlt
mov
lahf
outsl
rolb
sub
mov
and
test
rolb
jb
fs
sbbb
ss
xor
int
mov
lock
mov
sub
add
shrb
pop
clc
lods
scas
bound
ds
lea
xchg
les
add
mov
lret
xchg
fwait
or
pop
push
xchg
lock
sbb
jle
int3
mov
out
add
aam
mov
push
jecxz
cmpsb
insb
pop
mov
add
push
inc
xchg
mov
mov
test
jb
int3
mov
add
rorb
es
mov
out
shlb
add
sub
mov
add
aaa
push
dec
jo
add
xchg
add
lods
lock
lret
add
pop
stos
pop
shll
adc
add
xor
add
add
mov
push
add
nop
addr16
shrb
ja
stc
add
add
aas
shlb
jo
xchg
mov
cld
xchg
mov
inc
mov
jns
movsl
icebp
outsb
add
mov
dec
pop
sbb
fiaddl
sbb
nop
std
out
popa
lds
pop
mov
or
cwtl
xor
stos
mov
adc
in
in
push
fsts
adc
decl
add
outsb
idiv
add
sbb
jae
out
and
mov
repz
pop
hlt
fiaddl
lahf
subb
add
cli
in
jp
imul
push
ja
jo
mov
xor
cmpsb
add
es
ret
jl
mov
cmc
js
add
fstpt
mov
add
les
inc
stc
in
dec
add
jnp
or
sbb
pop
push
dec
adc
add
faddp
clc
mov
cmp
adc
add
cli
pop
lock
clc
loope
push
ficoms
aaa
add
push
mov
lods
add
cltd
cmp
mov
mov
scas
mov
xor
sbb
jo
dec
add
fsubrl
pop
add
loopne
xor
xchg
int3
or
and
loope
or
add
add
pop
movsl
scas
or
popa
add
imul
mov
loopne
pop
lret
add
lock
in
pop
bound
pop
popa
test
mov
idivb
cltd
enter
add
add
inc
fcoml
add
lahf
stc
pop
sti
test
jns
jecxz
ljmp
sub
mov
or
popa
jmp
sbbb
scas
js
sub
pop
push
hlt
push
sub
pop
faddp
lret
push
sbb
xor
add
addb
test
fs
rclb
es
add
pushf
mov
out
mov
adc
les
add
popf
push
add
cmc
imul
add
mov
insl
push
lods
xor
cmp
or
out
and
jnp
mov
jo
pop
add
mov
mov
lcall
adcb
jg
rclb
inc
out
jbe
outsl
repnz
fs
sahf
pop
push
ja
push
in
mov
cmp
popf
icebp
std
popa
push
sbb
imul
add
rorb
arpl
xchg
insl
lahf
inc
ja
mov
fisubrl
xor
adc
and
xor
scas
add
inc
or
dec
or
adc
sbb
mov
mov
mov
pusha
icebp
jns
push
add
fbstp
mov
add
sub
xor
fsubs
mov
fwait
adc
pushf
mov
or
loopne
not
cmc
pop
and
dec
roll
adc
add
push
stos
jne
mov
outsb
mov
test
sbb
xchg
push
jo
ficompl
in
in
data16
dec
aas
jbe
in
jp
jge
mov
fs
ja
sahf
cmp
dec
aam
push
push
ftst
iret
jmp
incb
aaa
cmp
mov
enter
cmc
lret
and
fimull
or
popa
add
dec
xchg
adc
add
movsl
roll
scas
push
enter
cmp
adc
cmp
inc
pusha
aas
leave
jmp
and
jecxz
xchg
add
js
ljmp
jl
push
fisubl
dec
or
out
sub
jg
stos
xor
dec
hlt
or
out
orb
aas
or
in
cmp
mov
lcall
jecxz
aaa
addb
jg
cmp
cmp
inc
adc
adc
add
jns
aas
loop
dec
out
nop
inc
es
cmc
dec
sub
sbb
adcb
cwtl
adc
add
xchg
xor
pop
dec
rcrb
cld
jge
les
mov
cmc
ret
push
add
into
xchg
insl
out
add
xor
sub
aad
adc
leave
push
jl
loopne
xchg
adc
cwtl
lret
add
insl
xor
jns
push
cmp
cmp
cmp
aam
mov
sbb
jo
imul
jp
aad
sbb
add
jg
adc
mov
add
imul
orb
sub
inc
xchg
insb
test
ds
and
xor
cmpb
add
movsl
xor
add
imul
bound
push
inc
push
mov
and
outsl
stos
int
mov
pop
mov
mov
lcall
cmpsl
and
or
lods
lock
das
add
push
outsb
dec
aaa
inc
add
add
jecxz
sub
adc
push
adc
mov
xor
sub
add
testl
fwait
adc
dec
sub
add
test
mov
add
add
lcall
xor
xchg
sbb
mov
mov
test
mov
xchg
push
lds
xor
xlat
nop
mov
cmp
push
ja
jp
les
pop
xor
lock
and
jecxz
add
add
xchg
pop
push
jmp
push
not
and
cli
addl
repz
mov
out
stc
dec
xlat
test
mov
jle
fldl
sub
jne
mov
dec
push
add
xchg
jp
movsb
scas
enter
inc
mov
cmpsb
jl
jecxz
inc
lock
hlt
cmpsl
enter
cmp
xlat
subb
jae
pop
daa
ret
movsb
insl
sub
add
mov
cmp
xor
popf
cs
add
mov
sbb
xlat
xor
adc
adcb
scas
test
push
add
push
roll
mov
testb
nop
sub
sbb
push
mov
call
cmp
pop
loopne
jb
pop
add
jl
mov
pop
push
add
mov
hlt
xor
jne
add
add
push
add
lea
ds
jmp
movsl
rolb
ficompl
cwtl
cli
in
jo
cmp
jno
push
stos
imul
pusha
sbb
pop
outsb
mov
andb
sbb
push
dec
shlb
pop
add
call
add
loop
lea
adc
cli
out
jo
add
pop
mov
fwait
int3
paddb
add
adc
xchg
pop
mov
xchg
test
addr16
sbb
add
pop
aaa
xor
mov
ljmp
gs
movsl
arpl
aad
aaa
jge
daa
mov
inc
mov
adc
addb
add
movsb
out
dec
dec
daa
dec
lods
cmp
add
std
xchg
insl
pmulhw
mov
and
or
js
outsb
clc
adc
add
in
rclb
dec
lret
rolb
mov
add
shll
iret
lcall
popf
adcb
testb
add
setl
dec
addb
arpl
faddl
loop
lret
cmc
in
lea
push
js
mov
or
pop
and
repz
add
aas
sbb
gs
push
fadd
add
xor
push
popf
addr16
or
push
mov
insb
pop
xchg
or
sbb
test
ret
dec
sahf
cmp
sarb
mov
cmp
gs
jnp
ljmp
mov
inc
shlb
add
loopne
mov
cmpb
faddp
mov
dec
inc
mov
and
aam
push
mov
sbb
out
stc
jmp
movl
arpl
stos
and
and
bound
push
jmp
mov
jle
int
add
lret
jg
cmp
add
jg
into
push
mov
dec
out
push
inc
inc
stos
filds
andl
push
add
push
adc
pop
int3
xchg
and
and
out
call
jmp
xorl
push
add
pop
and
andl
mov
adc
int3
add
lods
cmp
cmp
fiaddl
iret
mov
add
jl
xchg
sahf
or
jmp
aam
in
fcmovu
daa
mov
lahf
add
pop
sub
out
pop
jge
inc
and
pusha
roll
sub
in
xchg
and
add
dec
in
add
js
movsb
out
sub
test
rcl
or
nop
cmp
or
sahf
jge
mov
push
xchg
shrb
movsb
adc
out
xchg
and
add
xchg
mov
stos
ror
mov
xchg
jbe
aas
and
mov
in
add
pop
insb
or
incb
gs
inc
or
mov
idivb
add
or
xchg
test
divl
out
dec
fnstsw
add
cmp
imul
jecxz
mov
add
sbb
cmp
ds
std
fsub
ljmp
push
mov
punpckldq
movsl
add
out
test
or
jmp
push
aas
add
lds
lock
mov
mov
addl
out
or
push
lret
add
outsl
mov
inc
inc
or
test
faddl
mov
push
or
outsb
fnstenv
mov
js
or
add
xor
test
dec
andl
aad
roll
xchg
cwtl
jge
jb
fists
shll
or
mov
in
sbb
mov
dec
and
cmp
andl
test
sub
sbb
adc
mov
test
nop
sub
sbb
shrl
or
or
cmpsb
mov
imul
mov
push
cltd
adc
mov
scas
cmpsl
mov
inc
out
adc
xor
rolb
jbe
jo
inc
imul
sub
xchg
sub
or
mov
std
sarl
outsb
loope
sbb
daa
push
jo
ja
outsl
icebp
test
test
adc
mov
pop
sbb
xchg
mov
orl
test
aad
jecxz
mov
lahf
sub
jne
jp
lcall
mov
pop
xchg
sbb
gs
cmpl
and
xor
fnstcw
sqrtps
subb
daa
adc
lods
rorb
sub
xchg
add
loope
inc
rcrb
int
cmpsl
add
push
or
push
fists
add
push
lods
sarb
mov
in
mov
movb
daa
jge
cmp
push
add
stos
outsb
shrb
mov
add
jne
push
ret
roll
add
enter
add
arpl
xor
sbb
add
mov
push
mov
je
sub
ret
inc
adc
or
pcmpgtw
sub
jmp
jecxz
add
bound
pusha
push
sahf
mov
push
leave
rcrl
sbb
stos
xor
xor
xchg
inc
dec
pop
pop
add
inc
arpl
daa
mov
adc
and
jl
jb
adc
sub
sbb
jg
loopne
sbb
jmp
daa
add
mov
pop
mull
mov
push
dec
cmc
push
or
loope
sbb
mov
pop
loop
add
cmp
push
adc
push
sldt
pop
stos
jmp
mov
or
xor
add
pop
shr
fistl
mov
xchg
xchg
inc
xchg
push
or
fs
test
mov
pop
and
cli
mov
roll
xchg
inc
scas
popa
jno
dec
stc
mov
push
lea
pop
pop
push
sub
mov
jae
fimuls
mov
stos
and
add
mov
cmp
add
lret
outsl
testb
in
mov
mov
and
sub
push
pop
inc
loopne
xchg
xchg
push
fwait
inc
std
ret
or
cmp
xchg
push
ljmp
push
roll
pop
push
xor
add
dec
jb
jno
dec
pop
mov
in
notl
std
adc
or
cmpxchg8b
cmpb
inc
add
outsl
dec
out
cltd
add
push
xchg
dec
sub
pop
data16
lret
pop
inc
pusha
sub
pusha
adc
std
js
or
pop
jge
or
shl
test
xor
and
ret
enter
test
add
adc
jnp
test
stc
and
shrb
jno
add
jge
addr16
int
push
add
hlt
iret
xor
lahf
icebp
push
test
pushf
imul
dec
or
pop
and
xchg
sbbb
push
sbb
ljmp
mov
mov
ret
push
mov
iret
inc
push
jno
mov
js
push
mov
add
orb
je
sub
xor
cmpsb
pushf
dec
add
mov
in
add
pop
movsb
roll
xorb
std
scas
and
mov
enter
adc
dec
adc
push
inc
rcrb
pop
scas
adc
mov
mov
pop
jo
ljmp
add
sub
and
push
add
lds
nop
xor
push
lret
dec
orb
add
pop
inc
flds
mov
rolb
fisttpl
xor
rolb
push
mov
inc
arpl
xor
out
push
push
xchg
jl
sub
aam
ds
in
xor
sbb
jno
sbb
shlb
pop
add
aas
rol
es
add
xchg
ljmp
outsb
cltd
stc
inc
sarb
insb
pop
repz
fs
or
popf
fstl
dec
xchg
mov
and
xlat
xor
jno
pusha
jnp
add
pushf
xlat
dec
pop
or
mov
addb
xchg
or
rorl
sub
inc
daa
sbb
push
fstpl
int
lods
dec
cwtl
xchg
add
fmull
push
fildl
push
fcoms
out
dec
mov
sbb
add
inc
les
and
out
inc
add
loop
jno
pop
mov
loopne
xor
pop
add
pop
fs
add
push
lods
jnp
ficompl
and
add
and
icebp
js
push
push
inc
movsl
shlb
mov
push
fneni(8087
fdivs
push
sbbb
inc
cli
push
aas
add
daa
adc
into
icebp
hlt
popf
mov
sbb
xor
xor
scas
add
adc
jp
push
testb
pop
jle
mov
adc
mov
xor
out
add
xor
pusha
mull
and
arpl
pop
push
movsb
mov
cmp
xchg
or
cli
daa
add
in
ret
xchg
imul
mov
nop
and
in
add
inc
lods
mov
xchg
adc
mov
push
outsb
sbb
mov
shrb
xor
testb
popa
inc
test
cmp
das
lock
jb
cmp
sbb
imulb
push
call
sbb
rcrl
pop
in
fsubrs
shlb
je
jl
inc
adc
and
fwait
adc
cmp
call
nop
mov
and
in
inc
and
adc
popa
psubw
dec
mov
sbb
lret
adc
inc
int3
jmp
aas
xchg
shr
cs
lods
cltd
out
fidivs
add
mov
xchg
or
add
ljmp
fbld
in
rol
cmp
dec
out
add
add
je
add
mov
sti
clc
xlat
pop
pop
push
pop
sub
push
xor
mov
push
loopne
loopne
mul
add
jne
push
adc
jl
lods
push
add
sub
shlb
out
test
xor
sub
mov
sbb
xchg
lock
jb
xorb
insb
call
bound
xlat
ret
dec
add
lods
test
xchg
enter
pop
add
aas
push
push
dec
adc
add
insb
cwtl
dec
stos
aad
cwtl
fidivrs
cmp
dec
mov
scas
mov
pusha
je
loopne
push
add
rcrb
xchg
cmp
pop
dec
fldcw
mov
push
mov
push
adc
in
or
sahf
out
cwtl
sbb
popa
jb
pop
adc
lret
jmp
loopne
imul
aaa
xor
addr16
adc
or
or
inc
je
add
cld
fimull
gs
add
and
and
pop
adc
jge
idivl
add
adc
mov
or
push
push
xchg
push
movsl
rolb
mov
jb
popf
add
negl
inc
add
imul
in
and
inc
add
add
cmc
add
push
add
pop
add
jb
roll
lret
push
cwtl
inc
iret
insl
cwtl
mov
xor
test
aaa
int3
push
rol
add
jne
add
sbbb
jno
adc
scas
add
out
sbb
lods
ficoms
pop
insb
sbb
jge
or
repz
loope
sbb
int3
loopne
insl
and
xchg
mov
add
push
dec
cwtl
sub
jle
mov
and
pop
mov
add
lahf
and
out
andb
jl
inc
mov
fistps
pop
mov
or
add
add
repz
sbb
or
out
and
in
mov
paddd
jp
adc
mov
fnstcw
and
hlt
rolb
out
and
lds
adc
push
mov
movsb
inc
cld
pop
add
mov
add
arpl
add
jnp
pop
fldl
add
add
add
xchg
sbb
data16
and
aam
and
test
adc
inc
subb
pop
pop
and
jge
or
or
sahf
add
sbbb
and
pusha
fs
aas
cmc
xchg
and
in
cmp
scas
push
mov
pop
lret
push
xor
lahf
fstpl
mov
fs
in
pop
add
iret
jle
xchg
jno
addl
add
inc
or
xor
cld
loope
ja
push
nop
mov
cmp
shr
ror
add
xchg
adc
cmc
int3
test
insb
pop
cld
xor
xor
dec
jb
cli
jl
mov
out
mov
and
pop
popf
mov
aas
jno
out
jb
push
ja
sub
cmp
sub
xchg
push
gs
dec
adc
cmp
or
add
andl
hlt
or
shl
enter
mov
jae
es
cmp
or
cmp
loope
dec
add
add
mov
rcrb
xchg
leave
cld
outsb
add
xlat
aam
pop
and
xchg
add
add
add
xchg
mov
repnz
cmp
pop
mov
pop
out
ds
cld
adc
pop
in
idivb
enter
add
fsubrs
pop
sub
mov
xchg
call
inc
loopne
addr16
sbb
std
add
mov
lods
sbb
rorb
test
setbe
rcrb
fisubrl
insl
inc
mov
pop
push
aam
push
and
or
adc
hlt
xchg
jp
cmp
ja
bound
xchg
dec
pop
mov
clc
sub
enter
add
mov
push
xchg
inc
js
xchg
ja
scas
aas
push
pushf
jle
jmp
xchg
movsb
daa
pop
mov
add
sbb
fisttpl
cmp
jp
add
notl
mov
scas
inc
adc
or
pop
add
out
xchg
add
popa
and
add
adc
and
cmp
push
pop
cld
xor
mov
dec
mov
cmovs
add
enter
bound
adc
mov
clc
cmpsl
add
cmc
inc
push
in
adcl
push
add
or
mov
and
dec
sbb
xchg
jbe
iret
sub
add
xor
cmp
cmc
push
mov
nop
add
mov
push
inc
loop
inc
sarb
sub
adc
orl
sbb
jle
stos
repz
mov
fidivrs
adc
inc
adc
sbb
adc
es
push
dec
mov
cmc
popa
ljmp
fwait
jo
repz
call
xor
lods
sub
mov
icebp
add
iret
cmp
in
mov
dec
lods
adc
add
imul
push
sub
les
add
pop
nop
negb
dec
add
std
int
add
imul
sbb
mov
pop
into
fisubs
jmp
add
ret
xor
enter
rorl
jno
and
cwtl
out
sub
dec
mov
dec
xchg
stos
jl
pop
int
fs
inc
dec
roll
test
sub
mov
xor
pop
and
pop
adc
and
out
jmp
sub
sarb
nop
int
test
inc
imul
mov
call
xchg
sahf
pop
in
jge
push
xor
call
movsl
cli
xchg
push
add
test
subb
mov
jno
addb
loop
shrl
ds
add
fnstenv
pop
cmp
mov
test
mov
data16
das
cmp
pusha
fcoml
adc
xor
push
in
arpl
jne
mov
add
jmp
xorb
in
pusha
mov
call
clc
pop
cli
dec
cs
push
in
orl
add
inc
repnz
fwait
ss
mov
lea
jp
jg
push
repnz
pusha
sub
ss
add
push
loopne
adcb
sub
add
jge
and
movsl
add
daa
test
sbb
in
push
notb
add
adc
dec
lahf
add
scas
aam
mov
test
cwtl
ss
insl
loope
mov
inc
jo,pn
hlt
loopne
dec
dec
push
cmp
test
jb
out
add
mov
jle
ss
xor
repnz
jae
scas
add
roll
add
mov
subl
mov
mov
add
cwtl
sahf
add
add
sahf
mov
sub
xchg
movsb
xchg
movsb
cmp
push
add
mov
or
xlat
mov
aam
mov
xchg
sbbb
add
pop
and
sti
dec
cmp
push
jg
jnp
fistps
dec
inc
aaa
nop
mov
add
mov
adc
add
ret
add
pop
test
pusha
xor
outsb
test
push
cli
dec
xor
adc
je
xor
in
xchg
add
in
notb
jo
jbe
jl
add
push
xchg
pop
mov
sbb
fs
cmp
mov
lahf
sub
dec
imul
xchg
inc
add
ljmp
lods
adc
dec
mov
pop
mov
roll
in
push
rsm
lcall
out
loop
add
ret
test
in
adc
add
dec
xor
mov
adc
pop
nop
fdiv
pop
fists
rcll
inc
cmp
in
flds
aaa
cmp
dec
cmc
mov
sbb
test
outsb
or
bound
mov
add
mov
dec
jo
imul
inc
push
das
push
incl
sub
adc
loopne
jne
dec
daa
pop
and
push
ds
push
ret
enter
sarb
mov
call
or
out
test
test
and
loop
scas
sbb
aaa
jne
hlt
xchg
faddl
inc
lret
mov
nop
cmp
push
dec
xorb
fidivs
movsb
cmp
mov
add
sar
adcb
dec
cmp
loop
call
and
lds
stos
mov
mov
in
jo
subl
repz
jne
sbb
or
add
mov
xchg
sbb
rclb
mov
cltd
rolb
js
aam
int3
jg
and
cmp
mov
dec
mov
testb
ret
cmp
dec
pop
js
ficompl
fists
cmp
popa
int
int3
xorb
rcl
lea
dec
sub
mov
push
cld
dec
cmp
es
jbe
movsb
flds
stc
push
add
jl
cs
xchg
mov
xor
jbe
inc
jge
mov
pop
mov
or
mov
test
adc
sub
bound
mov
add
xchg
xorl
les
outsl
inc
add
cmc
mov
pop
je
add
lahf
cltd
xchg
mov
xor
push
cmp
adc
cmp
mov
xor
dec
xchg
test
dec
add
sub
leave
adc
stc
xchg
sub
lret
push
imul
sub
xor
cwtl
or
push
dec
daa
movsb
push
addr16
cmp
jbe
add
push
sarb
sbb
add
adc
xor
mov
sub
dec
jg
lcall
add
call
inc
pushf
add
jb
xor
add
sub
lahf
pop
add
pop
outsl
xor
add
mov
bound
subl
inc
adc
pop
andl
cmp
popa
or
xchg
out
nop
sub
gs
pop
pop
push
negb
xor
or
out
mov
add
sbb
push
mov
hlt
sar
xor
add
mov
sti
and
or
imulb
pop
test
and
outsb
lds
lods
mov
dec
adc
xchg
ret
sub
test
push
cmpb
bnd
insl
or
popa
cld
movsl
orb
out
imul
adc
mov
add
das
leave
fistps
push
into
push
rorb
movsb
mov
pusha
add
add
sbb
jbe
cmp
icebp
nop
pop
dec
popa
jbe
test
and
push
shll
dec
pop
xchg
in
inc
mov
rolb
iret
adcl
jmp
mov
add
nop
gs
xor
rcll
ja
insl
movsl
call
push
inc
outsb
mov
bound
inc
enter
add
add
or
push
add
xchg
jne
popa
insl
fistps
movsb
mov
push
jnp
inc
and
cld
aas
js
or
mov
test
repnz
push
sbb
push
outsl
sbbb
jnp
es
mov
sbb
inc
pop
in
xor
dec
add
andl
add
lret
and
jecxz
jl
or
nop
jnp
outsb
mov
adcb
add
aam
nop
add
or
jge
add
push
or
in
scas
xchg
and
lock
pop
inc
xor
mov
inc
push
xchg
rorl
mov
mov
data16
dec
cmc
lods
loopne
and
add
sarl
adc
inc
dec
test
aas
out
addr16
fs
pushf
mov
xor
mov
adc
int
flds
dec
inc
or
aaa
add
sub
mov
add
test
shll
into
cmp
cltd
sbbb
mov
fildl
xor
cmp
mov
mov
test
pop
sahf
dec
or
mov
jl
jns
pop
pushf
addl
xchg
sub
fsubr
out
cmc
push
mov
add
sbb
insb
or
cmp
add
jns
incl
clc
insb
in
xchg
push
aam
add
mov
mov
mov
pop
push
enter
jns
mov
emms
daa
cmp
adc
rcrb
adc
fucomi
bound
movsb
cs
and
clc
and
mov
xor
and
sbb
or
sub
mov
cmp
lods
fdiv
mov
add
pop
push
pop
fs
cmp
outsb
and
push
inc
aaa
xor
lods
das
adc
loopne
add
sub
into
cmp
sbb
pusha
ja
mov
pop
cmp
int3
call
sub
adc
push
enter
add
insl
mov
mov
pop
ljmp
add
in
les
xchg
hlt
rcrb
xlat
es
cmovae
pusha
jl
and
inc
addb
push
jno
mov
jg
mov
pop
roll
xchg
add
inc
pop
orb
nop
sbb
lock
cmp
adcb
mov
push
cmp
aaa
push
adc
cld
roll
push
jbe
jl
jno
or
popl
and
sbb
adc
andb
cwtl
adc
pop
mov
mov
test
xchg
adc
mov
and
shlb
repnz
pusha
add
add
pusha
cmc
jecxz
mov
jg
hlt
orl
and
imul
rcll
add
rolb
inc
add
mov
sahf
push
add
out
ja
xchg
mov
sbb
sbb
inc
mov
cmp
cwtl
xor
jle
test
xor
add
jp
addb
xchg
loopw
xchg
xchg
idivl
fisttps
aam
sub
lret
mov
cs
int
in
int3
loope
sbb
rep
in
or
les
lods
shll
out
pusha
dec
pusha
ficompl
test
pop
orb
sbb
bound
rclb
lods
push
int3
push
out
adcl
in
imul
sub
mov
jmp
hlt
loopne
mov
add
fnstenv
push
aam
stc
xchg
ds
rolb
cli
test
mov
out
icebp
in
add
sub
mov
sbb
add
dec
pusha
fmull
in
pop
add
sahf
cmp
ss
push
cld
mov
rolb
or
xor
stc
mov
js
mov
jg
cmp
inc
xchg
push
mov
xchg
pop
add
sbb
dec
or
adcb
cmp
add
jb
mov
lock
add
insb
lods
out
pusha
cmpsb
inc
add
xchg
xchg
mov
loopne
rcpps
pop
rolb
lahf
mov
add
cmp
out
add
cltd
lods
mov
ficomps
mov
cmp
mov
mov
xchg
into
add
stos
fadd
pop
mov
and
lcall
and
leave
fiadds
jns
fisttpll
push
cli
push
popf
outsl
loop
sbb
add
or
mov
outsb
cli
mov
sub
xor
pop
sub
add
loope
outsb
add
jb
movsb
pop
sti
pop
pop
lcall
pop
inc
inc
loope
call
aaa
repz
inc
js
add
dec
filds
jbe
inc
add
mov
scas
add
adc
gs
lea
imul
add
mov
js
push
stc
les
add
addr16
push
cmp
and
and
inc
cli
pop
inc
pop
pop
cmp
adc
cmp
jns
pop
mov
add
dec
hlt
adc
aas
icebp
jl
mov
stos
and
bound
out
jae
out
int
and
stos
add
dec
ss
add
das
xor
lods
shrb
mov
cmpsb
mov
lret
adc
cs
cld
in
xor
movsl
pop
sbb
aad
rcl
or
scas
aam
xchg
decl
mov
into
fwait
insb
add
sub
mov
or
pop
aas
pop
add
lock
test
jns
push
movsl
roll
rcr
repnz
cmp
mov
fsubp
xchg
and
add
pop
cmp
and
adc
add
shll
cmp
rolb
test
cmp
das
push
sub
dec
lret
add
cmp
pop
sbb
lahf
add
fs
test
rclb
pop
loopne
mov
mov
mov
add
mov
xchg
sbb
jae
mov
jl
add
ja
sbb
cmpl
clc
xor
repnz
lea
dec
mov
arpl
mov
add
out
sahf
push
dec
ss
add
ror
leave
add
outsl
jno
stos
nop
lret
addl
je
and
rcrl
cmpb
and
sub
out
mov
clc
dec
or
outsb
orb
arpl
add
fistps
lcall
jecxz
pop
or
fcmovnu
inc
pushf
enter
cmp
orb
cmovge
xor
add
mulb
aad
inc
ja
xor
inc
sbb
add
cmpsl
gs
add
add
mov
fldt
adc
pop
jo
xchg
add
jle
outsl
les
push
mov
sbb
jns
data16
mov
repnz
pop
mov
test
imul
sub
add
sbb
cwtl
dec
loopne
add
cmp
lret
xrelease
lahf
roll
xor
and
std
subl
xor
fmull
lcall
push
cmp
cld
add
fwait
pop
fsubrs
loope
jl
bswap
shll
dec
inc
shlb
jbe
add
inc
dec
sti
data16
lock
dec
xor
mov
popl
mov
lahf
push
fisttpll
xchg
mov
adc
es
add
and
test
pop
out
repz
es
je
sbb
sub
movl
mull
and
pop
push
filds
mov
stc
shrb
adc
out
ja
cmc
adc
add
add
xor
loopne
jno
add
ja
icebp
idiv
add
sbb
cmp
push
into
push
int3
add
cmp
out
stc
add
sbb
add
filds
push
mov
xlat
mov
mov
outsb
xchg
sub
or
pop
mov
sbb
ds
or
inc
fists
mov
and
add
push
push
fcmovb
mov
push
js
stc
ret
aas
dec
bound
jne
push
jnp
and
ror
pop
push
sub
or
add
mov
jo
into
push
cmpl
add
inc
cltd
lahf
iret
xor
mov
dec
and
flds
hlt
inc
in
inc
sub
loope
stos
jbe
adc
stos
cmp
ret
hlt
xchg
dec
std
sti
nop
test
cmp
push
shl
push
enter
xchg
add
inc
addr16
fbld
dec
inc
mov
mov
out
xor
add
stos
jmp
add
leave
pop
sti
jns
lea
dec
cmp
movsb
cs
mov
dec
and
rcr
filds
fdivrl
push
pusha
adc
lds
jmp
scas
or
jmp
add
jbe
and
je
push
cwtl
push
arpl
mov
sbbb
push
jo
fisttpl
xchg
adc
pusha
lea
cmpsl
pushf
adc
mov
into
dec
and
add
lret
in
test
and
inc
subl
sbb
add
sub
xchg
add
xchg
sbb
loop
cwtl
or
pop
xchg
loopne
push
pop
imul
inc
lcall
mov
xor
fsubrs
mov
and
fwait
dec
push
mov
or
cmp
pop
mov
add
pop
mov
out
push
jge
imul
sti
shll
and
sbb
mov
inc
addb
push
jmp
pop
lahf
xor
es
jnp
add
xchg
cmp
ljmp
roll
push
cli
mov
enter
bsf
jnp
xor
push
popf
add
shlb
roll
xchg
jmp
outsb
fisttps
mov
dec
mov
and
xor
ja
dec
mov
cmp
mov
das
daa
or
pusha
iret
outsl
add
stos
add
lock
pop
mov
in
and
push
sub
adc
pushf
push
enter
pop
lods
mov
adcb
sub
lahf
rolb
add
push
inc
rcl
adc
insb
add
jp
std
mov
in
shll
add
scas
movsl
cwtl
lret
andb
roll
push
ret
sti
add
pop
and
inc
sahf
inc
loop
cwtl
adc
mov
push
mov
insl
inc
mov
add
cwtl
dec
insb
pusha
enter
sahf
dec
sub
pop
xor
push
movsb
int3
jnp
mov
cmpsb
fnstenv
nop
xor
mov
dec
std
mov
rolb
inc
and
mov
scas
or
mov
into
and
xlat
adc
jmp
out
mov
ja
cmp
addr16
add
jmp
rcll
std
sbb
mov
sbb
ja
add
jge
aas
in
cs
cld
or
dec
addr16
or
and
jns
add
xchg
jle
xchg
pop
int
clc
jb
imul
and
jbe
fbstp
test
mov
jecxz
mov
and
addr16
adc
add
leave
xchg
dec
gs
icebp
add
clc
pop
cmp
imul
pusha
movsl
adc
sahf
push
push
inc
les
add
test
rcrb
fildl
mov
in
and
lahf
fdivrs
sar
sub
pop
lcall
movsl
jecxz
jge
loopne
pop
adc
lock
je
xor
inc
bound
inc
jb
add
je
fs
movsl
test
jecxz
sub
mov
mov
inc
enter
and
mov
je
sbb
adc
mov
popa
lea
das
mov
test
add
int
jns
insl
lea
js
pop
push
lret
loope
outsb
pop
gs
xchg
add
inc
ds
nop
mov
cld
hlt
in
lock
add
inc
sub
add
clc
dec
lods
out
jae
add
setne
iret
cmpsb
incb
add
sahf
jge
add
mov
mov
data16
and
add
enter
sbb
add
mov
arpl
sub
mov
inc
in
ss
sbb
data16
repz
push
stos
inc
aam
imul
inc
aad
lods
pusha
cmp
jecxz
clc
sbb
add
out
xor
xor
in
mov
dec
add
movsb
aad
pop
mov
movsb
mov
sub
xchg
jnp
cwtl
enter
and
scas
cltd
add
pop
cmp
jge
negl
add
cmp
fadds
jmp
imul
std
inc
in
sahf
mov
lret
sbb
add
rorb
sbb
imul
push
cmp
mov
mov
add
aaa
rorl
js
xchg
je
test
jbe
add
and
pushaw
jnp
ret
shrl
or
cmp
add
push
mov
mov
pop
inc
cmp
fbld
jnp
clc
sbb
loopne
lret
std
sbbb
adc
push
mov
pop
test
clc
rolb
test
icebp
loope
sub
shll
iret
xorb
pop
fiadds
push
fcomip
xchg
lea
imul
lret
mov
cmpsl
add
inc
fbstp
test
cmp
mov
out
add
sti
loope
lea
jp
mov
push
sbb
mov
popf
pop
lods
push
xor
movsb
add
in
faddl
push
sbb
sub
fisubl
mov
nop
add
xchg
jge
add
loopne
lea
pop
dec
cmp
xchg
aam
mov
fadds
xor
std
pop
push
mov
div
add
and
cmp
push
adc
xor
sub
dec
cli
gs
lods
cmp
mov
call
xchg
add
jge
and
jl
cli
and
push
push
nop
sbbb
adc
jge
add
int
popf
dec
xor
or
cwtl
call
iret
jge
loopne
mov
dec
push
int
sub
inc
jl
cmp
stc
jb
les
add
lods
and
ds
jl
fists
add
cld
or
jb
add
fidivs
cwtl
dec
sub
pop
fstpt
or
shr
pusha
jmp
xchg
negl
mov
aas
xchg
cmp
sbbl
mov
es
scas
mov
push
fdivs
inc
mov
add
dec
cltd
or
mov
f2xm1
cmpb
push
lock
test
insb
and
cltd
lret
sub
pop
pop
pop
sbb
cmp
sub
aas
rcrl
jns
jg
sbbl
jne
lahf
pop
movsl
in
shr
fsubrl
idiv
or
insb
and
add
shll
mov
out
push
and
mov
loope
add
sub
add
mov
imul
pop
or
or
ds
cmp
mov
xchg
lods
xchg
add
pop
xor
mov
jb
icebp
jno
mov
scas
lods
sbb
in
pop
inc
mov
mov
mov
dec
and
aas
pop
incb
xor
hlt
xchg
outsl
inc
insl
add
mov
in
jl
push
and
jb
mov
scas
pop
or
lcall
adc
sbb
cli
lods
add
xchg
in
mov
add
sbb
call
popa
push
js
pop
leave
add
repnz
rcr
movsb
mov
sbb
or
add
mov
lcall
pop
sub
divl
int3
add
and
cwtl
xchg
insb
add
and
in
pop
incl
jnp
or
test
outsb
movsl
fucomip
subb
xor
pop
add
movl
mov
andb
cwtl
add
xchg
adc
mov
add
popf
jae
jno
add
sahf
sbbl
dec
adc
add
rorl
es
outsb
add
mov
repnz
add
lds
aad
nop
stos
add
or
scas
out
call
xor
mov
add
add
push
pusha
mov
mov
pop
add
mov
jecxz
add
pop
xor
push
and
mov
jbe
dec
in
add
jecxz
or
xor
mov
out
mov
nop
sub
fs
and
das
pop
add
arpl
lret
xchg
bound
jle
in
mov
mov
inc
fwait
shl
stc
mov
ret
push
adc
mov
adc
xchg
ret
jl
add
inc
add
jns
mov
or
daa
ret
iret
arpl
shll
xor
mov
test
mov
repnz
and
inc
sub
adc
js
loope
mov
lret
xchg
pop
mov
mov
xchg
add
cmp
inc
adc
xor
dec
mov
jmp
add
dec
adc
out
sti
jno
push
cs
add
push
fwait
jbe
pop
in
add
int3
aaa
pop
mov
cmp
xchg
andb
add
shll
ljmp
adc
icebp
add
add
fwait
jo
adc
clc
xlat
sbb
call
xor
lea
or
fdivrl
sti
sahf
mov
out
pop
lcall
xchg
sahf
imul
add
xor
and
adc
push
mov
decb
add
sub
mov
int3
ja
add
in
mov
inc
jns
adc
lds
ret
or
add
cmpsl
adc
inc
ret
xor
or
add
xchg
jb
mov
adc
fnsave
add
and
add
stos
out
sbb
fwait
aam
mov
addr16
jmp
icebp
adc
dec
sub
loop
mov
or
xor
push
test
fwait
ds
testb
pop
mov
add
stos
rclb
cmp
add
das
xlat
gs
xchg
push
rcrl
andb
cmp
add
jge
imul
xchg
or
mov
mov
cltd
lods
aaa
enter
sahf
aad
add
push
mov
cmp
push
add
mov
pop
mov
nop
inc
pandn
cld
jo
stc
add
sahf
inc
dec
jecxz
sbb
adc
cltd
and
xchg
adc
outsb
test
ljmp
sbb
es
addr16
addb
push
jge
cmp
test
stos
inc
sbb
je
insb
call
nop
fcoml
mov
fdivrs
add
test
sub
imulb
mov
sbb
push
pop
mov
and
lds
cli
pop
test
mov
shrb
pop
ficoml
inc
pop
xchg
mov
add
lock
test
fbstp
icebp
lahf
cmpsb
or
das
add
stos
out
test
and
shlb
and
rolb
dec
sti
jl
xor
push
add
outsl
push
das
inc
mov
insl
mov
in
aaa
sbb
xchg
jecxz
jo
dec
pop
inc
add
nop
jecxz
jns
pop
int
es
outsl
dec
sbb
push
jmp
mov
dec
xchg
or
xchg
mov
mov
lea
adc
jle
dec
stc
cmp
or
mov
aas
arpl
lods
xchg
push
mov
jno
add
cmp
sbb
and
lods
stos
xchg
add
mov
clc
add
xchg
pop
push
je
test
imul
ffree
ficompl
pop
rcll
or
fmul
enter
pop
mov
or
stos
in
test
add
dec
mov
cmp
or
lahf
mov
add
sbb
jns
movsb
int
push
je
shrb
add
push
data16
fldcw
push
clc
fnstsw
pushf
cmp
cmp
test
push
push
fimull
jg
loope
cmp
adc
jle
sti
adc
arpl
mov
add
adc
ret
loop
jle
jge
pusha
arpl
lcall
movb
or
jne
mov
lock
mov
cwtl
mov
add
xor
add
call
mov
mov
pop
add
js
out
pop
pop
sbb
mov
sbb
or
cmc
push
add
daa
sbb
or
mov
imul
mov
jb
add
scas
mov
daa
add
cmp
or
imul
jecxz
jp
icebp
cmp
add
mov
pop
decb
mov
mov
popf
add
sbb
or
outsl
pop
pop
add
test
ss
adc
insl
mov
jbe
mov
cmpl
fcmove
push
icebp
jbe
sbb
inc
mov
cmp
cmp
cmp
iret
cs
mov
xchg
or
andb
mov
or
sbb
repz
sbb
idivl
add
pusha
mov
xchg
rclb
push
pop
inc
add
idivb
dec
lfs
outsb
mov
stos
push
test
in
lret
aas
and
in
or
test
pop
loop
dec
faddl
ficompl
mull
hlt
rolb
dec
mov
add
push
sub
fmuls
and
sbb
add
push
xor
je
push
fadd
out
mov
nop
addb
lock
and
inc
mov
lret
cmp
fwait
inc
xchg
ficompl
imulb
pop
cs
add
push
shll
sarb
cmp
add
add
adc
add
fidivrl
and
xlat
les
mov
jp
cmp
lea
and
dec
add
or
lock
scas
xchg
imul
inc
add
mov
loop
and
ss
adc
xor
out
insb
mov
clc
add
mov
xchg
sbb
inc
inc
dec
stos
in
outsl
into
jg
push
cmpsb
icebp
add
mov
popa
addr16
add
xchg
clc
sbb
mov
add
ds
jo
mul
mov
sub
in
mov
adc
and
cmp
pushf
int3
push
stos
scas
hlt
inc
cmp
cmp
jle
cli
adc
add
or
popf
divl
add
imul
das
pop
clc
jbe
pop
push
iret
and
clts
add
jne
jnp
mov
popf
pop
add
repz
into
imul
push
jecxz
xor
xor
add
mov
hlt
xor
ds
or
cmpsb
add
icebp
cli
add
outsl
xor
add
sub
fs
negb
ret
add
stos
mov
test
test
sbb
sub
push
leave
scas
lods
test
push
pop
fst
nopl
add
mov
lsl
fisttps
fldl
roll
jo
xor
testl
sub
xor
push
xor
and
mov
push
sbb
add
jbe
inc
or
cli
out
adcl
fdivrl
fiaddl
std
push
pop
and
pop
aad
test
cmc
add
pop
or
in
mov
mov
cmpl
test
out
inc
testl
mov
inc
cmp
mov
and
add
cltd
rcll
adc
sbb
cmp
in
lods
pop
ds
sbb
pusha
add
leave
loop
add
insb
pop
cmc
sub
stc
jne
pop
repnz
add
aam
in
mov
scas
add
rcr
adcb
push
pop
sub
sub
outsl
lret
mov
pop
adc
movsb
scas
mov
add
pop
mov
movsb
pop
stc
fwait
lds
imul
fcomip
mov
add
enter
dec
add
mov
mov
add
mov
mov
add
cs
fs
dec
data16
aad
lret
xor
shlb
mov
inc
xchg
jg
add
mov
add
iret
sub
jbe
jmp
pusha
adc
jno
add
and
add
push
mov
lret
pop
testb
mov
sbbl
adc
sub
mov
mov
adc
mov
inc
or
mov
cmc
enter
ficomps
rol
sbb
sub
popa
jmp
inc
incl
in
sub
mov
add
add
imul
or
pinsrw
cmc
xchg
xchg
push
jnp
xor
mov
pop
mov
call
adc
aad
cld
nop
and
rorl
loope
bound
push
mov
into
cmpl
xchg
popf
shlb
ja
cmp
xchg
cli
fsubrp
inc
enter
jo
pop
in
fisttps
cmp
and
cmpsb
add
hlt
and
dec
cltd
insb
add
xchg
pop
sahf
hlt
lds
lea
push
mov
xchg
enter
or
mov
loopne
lret
add
cmp
mov
repz
pushf
inc
lock
cld
xlat
add
hlt
add
mov
mov
push
lret
push
xlat
pop
xchg
jno
cmp
int3
fildll
add
mov
cmp
lret
mov
sbb
xchg
inc
mov
test
add
dec
push
xchg
cmp
ret
cmp
add
mov
mov
xor
in
test
mov
test
lret
jp
pop
mov
rcl
jb
xchg
ror
popf
jp
movb
rorl
sbb
lock
fcomps
sti
or
add
test
int
mov
stos
add
pop
add
nop
pusha
lods
jae
adc
in
xchg
adc
test
lret
test
fnstenv
mov
outsb
mov
jbe
xor
mov
fwait
call
add
adc
nop
mov
ficomps
inc
xchg
sbb
cmc
es
das
add
mov
mov
test
dec
iret
subl
xchg
xor
sub
xchg
out
insl
repz
xchg
ljmp
xor
inc
lock
out
mov
cwtl
clc
jp
mov
xchg
int
sub
and
add
and
or
push
test
loopne
jge
sbb
adc
fwait
xchg
fs
adc
sub
in
add
iret
mov
test
test
sub
add
ds
mov
sti
mov
icebp
and
ficoml
filds
cmc
mov
inc
sbb
push
les
sub
icebp
or
loope
lcall
jae
mov
mov
add
sbb
clc
je
dec
jmp
add
sub
xlat
std
rcrb
jne
add
jns
or
jmp
out
das
add
lcall
fwait
dec
add
in
fldl
imul
pop
ja
into
jge
adc
lods
mov
fcoml
lcall
es
loopne
jbe
in
roll
push
mov
rol
pop
pop
popf
scas
or
jmp
pop
sarl
imul
adc
js
loopne
syscall
dec
cmp
cmp
insl
lock
push
add
lods
mov
ret
inc
sarb
sbb
fildl
ficoml
add
add
jb
and
push
loop
imul
jnp
or
cmp
shlb
cmp
fwait
jl
jo
xchg
jnp
push
xor
leave
xchg
clc
sbb
cltd
add
mov
ret
mov
fidivl
rcrb
fwait
dec
fiadds
push
sub
xchg
orb
dec
cltd
insl
fsub
xor
popa
add
pop
loop
add
adc
sbb
jg
cmp
push
sbb
pop
add
cmp
data16
in
call
push
pop
inc
adc
or
cmp
add
icebp
add
shll
mov
and
scas
inc
mov
shl
mov
lahf
stos
push
int3
scas
lret
mov
adcb
pop
out
stc
adc
dec
inc
rcrb
push
adc
pop
fwait
clc
dec
pop
mov
sbb
imul
cltd
popf
xchg
push
dec
sbb
scas
add
lds
rcrl
mov
dec
cmpl
jg
test
sbb
pop
cmp
add
daa
adc
mov
mov
fdivrl
add
inc
lcall
lds
fadds
mov
rorb
test
adcb
mov
inc
mov
and
sub
xor
scas
cwtl
lods
xor
iret
cs
repz
xor
mov
adc
push
xor
ja
and
sub
xchg
subl
push
mov
movsb
js
clc
pop
add
mov
add
mov
test
test
fs
and
dec
xor
cmpsl
add
and
jno
ret
orb
cmp
imulb
jb
add
add
pushf
mov
jmp
push
pop
loopne
add
ljmp
sub
push
mov
mov
int3
xor
jp
mov
sub
loope
dec
daa
mov
cmp
lret
fnsave
repz
jbe
add
mov
jnp
scas
push
repnz
dec
mov
es
pusha
pop
js
out
test
push
inc
mov
sbb
movsb
pusha
xor
popf
mov
jl
xchg
ja
and
int
sbb
insb
pop
lods
pop
in
xchg
pusha
cmp
add
icebp
repnz
lea
adc
ficoms
push
clc
adc
or
inc
je
subl
add
popf
lods
push
loopne
es
sbb
jo
mov
and
add
jge
in
into
clc
jg
add
into
push
subb
lcall
daa
mov
mov
addb
ds
add
xor
jge
push
jns
and
mov
xchg
add
fistpll
iret
in
das
push
ret
xchg
shlb
movsl
pop
test
mov
mov
aas
or
add
or
stos
xchg
sbb
cwtl
add
pusha
and
outsb
fadds
cmp
mov
movsl
add
mov
enter
dec
pop
mov
sub
ret
add
mov
pop
cmp
push
xorl
jg
pop
adc
or
je
inc
or
fisubrl
mov
push
inc
mov
pushf
fadds
pop
orb
push
aas
cmp
xor
pop
add
or
add
rclb
cltd
mov
lock
xor
test
testl
cs
xor
inc
adc
add
cld
add
mov
out
add
imul
jb
pop
lock
fmuls
ja
daa
jnp
mov
lds
or
add
filds
mov
mov
sub
pop
adc
add
lods
adc
in
adc
and
ja
in
mov
aaa
push
aam
fiaddl
pop
jne
fsts
aad
jns
add
lcall
cmp
leave
cmp
mov
lea
pop
mov
inc
inc
stc
movsb
jl
testb
lods
dec
outsl
xchg
ds
sahf
add
cmpsl
mov
cmp
add
and
rclb
mov
aas
xor
dec
jne
rcrb
inc
sbb
je
leave
scas
hlt
das
xchg
inc
add
pause
dec
in
or
jo
in
addl
fwait
adc
push
dec
adc
pop
or
cltd
mov
add
xor
data16
sbb
sub
arpl
out
mov
or
add
test
push
push
cmp
dec
iret
sub
call
mov
push
push
les
pop
mov
dec
lcall
pusha
iret
push
stos
adc
sbb
add
repz
cs
push
mov
or
jne
mov
push
cmp
inc
test
sbb
inc
out
insb
lahf
shl
xchg
fidivrl
jmp
jl
dec
cmc
sub
add
in
push
cmp
xchg
pop
pop
or
imul
add
cmp
adc
insb
int3
pop
inc
cmp
sub
fldcw
pop
sbb
jo
mov
dec
mov
push
mov
inc
call
out
loop
je
add
push
das
xchg
add
aaa
dec
leave
jge
mov
mov
scas
xchg
repnz
xchg
shl
cwtl
sub
shrb
add
sub
push
sbb
xchg
fdiv
stos
add
pushf
shll
aad
and
test
movsb
outsl
inc
popl
and
dec
ja
cwtl
cld
mov
xchg
jl
sub
push
hlt
mov
in
or
lret
sarb
cmp
add
enter
sub
or
add
add
pop
add
xchg
test
sti
push
xor
push
popf
sbb
or
cmp
test
cmpsb
sarl
stc
scas
orl
jge
or
and
fwait
or
add
jne
mov
and
jmp
adcb
ret
sub
int
dec
stos
adc
add
fsub
clc
sub
je
adc
ficoms
pop
add
adc
and
dec
hlt
outsl
pop
cs
cmp
pop
popa
sub
jnp
sbb
ret
bound
sbb
scas
pop
movsl
pop
mov
test
test
mov
inc
push
and
jecxz
add
mov
push
add
and
sbb
jmp
jl
popa
das
repnz
push
rcll
in
popa
lret
cmp
cmc
adc
addr16
mov
mov
mov
lret
lret
add
outsb
icebp
or
sub
add
mov
loopne
mov
mov
enter
out
adc
lods
sbb
aad
inc
jne
mov
cmp
test
xor
and
inc
sbb
sub
rcl
jbe
sub
jnp
mov
pop
repnz
in
jl
push
add
fldt
enter
add
push
test
shl
pop
cmpsl
cmp
addr16
jle
push
ficoml
in
add
mov
pop
in
inc
adc
push
mov
cmc
inc
test
dec
cmpb
jge
lds
in
mov
call
leave
sbb
aad
xlat
cmpsl
cmp
cwtl
add
dec
jl
fiadds
dec
cmp
push
movsl
inc
sbb
mov
test
push
cwtl
or
ljmp
push
fsubr
cmc
mov
into
test
mov
cmpsl
sub
cmpl
das
sbb
shll
add
outsl
mov
add
sub
lea
stos
push
add
sbb
repnz
push
sub
push
adc
pop
sbb
jb
add
sbb
mov
push
cwtl
push
andl
into
adc
scas
cmp
rolb
sbb
pop
out
sarb
push
ljmp
mov
rclb
xor
mov
mov
xchg
inc
fwait
lret
xchg
test
sbb
clc
push
add
mov
outsl
iret
push
pop
cmpsl
add
push
add
xchg
xor
jg
or
insb
dec
dec
add
push
aas
and
add
loop
ret
cmpsl
dec
and
shll
fldcw
jnp
push
mov
mov
adcl
sar
ja
or
push
jmp
mov
dec
add
mov
sub
ret
ja
inc
jmp
gs
jb
cmp
loop
ret
and
int3
or
divl
inc
push
in
hlt
dec
sbb
sbb
lods
mov
cld
bound
ret
cli
imulb
xor
test
pop
dec
js
test
inc
cltd
add
rcrl
test
mov
or
add
jecxz
shlb
xor
sub
cld
inc
and
push
fwait
ss
xor
cwtl
insl
aam
cmc
lahf
loopne
lret
sbb
mov
inc
add
adc
enter
adcb
mov
or
lret
fiaddl
into
out
cmp
inc
add
test
repz
rcl
xchg
fcompl
jno
sub
cwtl
pop
jmp
sub
sub
cs
mov
add
mov
jo
mov
jl
fdivrl
fwait
mov
push
adcb
push
ds
out
or
loope
ljmp
add
arpl
jl
js
and
movsl
loope
pop
dec
or
add
cmp
loope
insl
loop
jg
sub
cmp
nop
sub
lahf
std
mov
jmp
repz
cwtl
add
movsl
arpl
pop
leave
cmp
in
mov
mov
inc
cld
xor
mulb
cmp
add
jns
or
mov
sub
jle
xor
add
push
stos
rorb
add
jle
pcmpeqb
jg
xor
arpl
or
dec
mov
and
jb
rcll
pop
mov
jo
xor
or
cmpsb
mov
inc
push
add
dec
jbe
pop
hlt
add
jge
cli
add
mov
xor
push
cltd
leave
push
dec
sti
nop
add
pusha
mov
add
imul
add
lods
dec
mov
and
lods
loopne
imul
adc
inc
xor
mov
push
pushf
cltd
ret
push
xor
inc
cmp
xchg
add
or
sbb
int3
inc
rorl
stos
mov
mov
repz
inc
mov
dec
das
add
nop
aaa
loopne
cwtl
and
jne
add
inc
push
pop
shll
addr16
xlat
pop
inc
dec
int
out
mov
add
pushw
push
sub
add
rcl
rolb
inc
stc
jle
dec
cmp
jnp
or
sub
mov
lcall
dec
loope
mov
int
mov
dec
pop
mov
sub
add
stos
jle
add
loop
xchg
adc
inc
add
enter
xor
out
push
movl
inc
cld
stos
ja
shl
data16
sub
pop
clc
insb
dec
ds
adcb
loope
nop
push
in
je
mov
jnp
lcall
add
sbb
ss
xchg
fs
into
cwtl
enter
mov
test
mov
or
adc
movsb
cmp
pop
fisubl
inc
test
adc
add
aas
jge
lods
cmp
fldt
das
or
dec
ret
pusha
xor
sub
mov
les
push
inc
dec
lcall
sbb
jbe
dec
lods
add
loop
push
inc
or
or
arpl
js
rcrl
push
jbe
sub
mov
int
xor
sub
addr16
jo
cmc
dec
pop
subb
stc
fidivs
enter
aad
dec
mov
das
push
mov
add
xchg
loopne
add
nop
pop
xor
out
sbb
sbb
inc
lods
add
jle
jg
jge
sbb
cmp
test
mov
int
mov
repz
mov
add
xchg
cmp
sub
addb
stos
das
push
and
add
push
rclb
cmpsl
sbb
in
sti
mov
xor
out
lcall
add
out
andb
addb
push
or
inc
ljmp
es
and
lret
and
add
out
rolb
push
scas
cmp
adc
inc
xchg
inc
aad
repz
xchg
mov
in
mov
xchg
or
lret
lock
xor
mov
jnp
dec
roll
sub
pusha
cld
bound
or
int3
mov
fstps
add
pop
inc
push
pop
test
or
loope
in
push
jnp
adc
add
add
mov
pop
testl
cmpsb
pusha
imul
jge
pusha
sbb
add
mov
enter
add
fsubl
push
jecxz
nop
xchg
aaa
shl
mov
orl
outsl
lcall
leave
jne
mov
popa
in
adc
enter
dec
nop
daa
pop
push
mov
or
add
push
pop
dec
and
cmp
add
sbb
adc
or
testb
mov
xlat
cmpl
add
frstor
pop
loopne
mov
popa
leave
ret
sbbb
adc
adc
add
push
mov
dec
mov
or
add
cmp
pop
push
jb
mov
aam
mov
ret
fisubrs
pop
les
adc
cmp
add
call
xor
stos
mov
dec
adc
in
inc
aas
and
dec
adc
jmp
push
add
push
test
add
xchg
xor
add
fwait
jb
or
insb
mov
ljmp
mov
sbb
scas
cmp
mov
jno
or
sbbl
jnp
jns
add
push
push
gs
xchg
flds
jne
into
xlat
push
sti
lds
or
xor
jge
mov
hlt
xorb
das
js
push
mov
je
mov
imul
in
add
jg
xchg
lea
sub
cmp
adc
cli
arpl
aaa
stc
int3
pop
loopne
cwtl
cwtl
jl
pop
lret
les
nop
adc
mov
dec
outsb
and
jns
add
jg
lret
incb
sbb
subl
jb
movsb
lock
jmp
add
xchg
mov
lds
jo
jle
fwait
jecxz
je
add
jg
push
add
inc
pop
jbe,pt
scas
cmp
cmc
add
add
rclb
adc
cwtl
insb
mov
in
sub
add
inc
mov
sub
mov
push
add
adc
add
jae
outsl
lods
add
and
jle
arpl
dec
test
jno
imul
and
aam
fcoms
sbb
adcb
icebp
mov
dec
push
inc
pop
mov
lret
roll
add
dec
adc
sbb
data16
pop
xchg
xchg
add
adc
cld
je
adc
andl
fwait
add
mov
push
and
arpl
lahf
cmp
cmc
icebp
jno
or
popf
jbe
push
sub
nop
pop
add
test
sbb
and
cmp
fisubrl
push
sub
ss
adc
rorl
mov
push
and
sbb
add
lock
jg
add
data16
mov
js
stos
or
lock
pop
shr
cmp
inc
test
xlat
lcall
add
inc
nop
shlb
arpl
pop
andl
adc
adc
cmp
pop
inc
sbb
cs
pop
and
mov
mov
mov
push
ja
clc
or
pop
sub
and
adc
fnsave
xchg
pop
shlb
push
add
popf
in
repz
pushf
out
nop
add
cmp
jp
add
leave
xchg
cmpsl
arpl
push
and
sub
sub
pop
lock
jo
inc
add
sti
mov
pusha
cmp
test
shrd
clc
sbb
sub
dec
shl
mov
fsubs
lret
jo
add
shlb
xchg
sub
add
jns
push
push
mov
rclb
movsb
inc
inc
jnp
push
dec
hlt
test
add
add
clc
xor
fisubl
mov
loopne,pn
sbb
dec
mov
jo
add
std
in
jne
out
add
xchg
add
out
out
mov
addb
sub
mov
rcr
test
push
lea
xchg
xchg
sbb
and
imul
mov
out
or
jbe
lock
mov
mov
stos
cmp
fadds
ja
xor
pop
loopne
push
inc
inc
imul
nop
jnp
add
sbb
les
stc
add
test
push
add
cmpsb
insb
sar
iret
dec
loopne
pop
add
xchg
nop
in
mov
enter
dec
add
push
jl
pop
mov
xor
add
roll
dec
dec
mov
add
sub
inc
mov
enter
xchg
gs
mov
pop
cmp
adc
fwait
scas
add
dec
stos
adcb
sbb
cmp
shlb
xchg
dec
mov
dec
loop
cwtl
mov
xor
je
loopne
xor
add
mov
addr16
ja
cmp
jbe
fistl
frstor
add
pop
or
sbb
fldenv
adc
lock
addb
add
sbb
ja
add
lret
aaa
pushf
pop
rclb
jae
subb
xchg
push
es
mov
sub
jg
es
pushf
mov
sub
mov
jmp
push
das
outsb
stos
push
insb
add
imul
sbb
cmp
sbb
xchg
dec
es
incb
mulb
jns,pn
pop
mov
add
push
bound
pop
jge
add
cmp
fwait
cmc
shl
imul
jp
movl
test
jg
mov
pop
mov
int3
sahf
pusha
add
sbb
dec
jp
add
lds
les
loopne
lea
sti
push
mov
loopne
mov
or
jns
pop
dec
and
mov
xchg
mov
mov
xchg
dec
push
rolb
fadds
in
mov
mov
mov
sub
loop
add
nop
cmp
jne
push
js
fildll
mov
mov
fidivrs
mov
mov
xchg
addr16
test
lock
out
ds
loope
loopne
mov
jp
cmp
mov
xchg
mov
add
in
jle
loope
iret
cmc
add
inc
cmp
mov
inc
cmpl
add
inc
push
mov
add
mov
cmp
jl
daa
test
inc
add
jg
into
sub
and
adc
int3
adc
and
xchg
pusha
adc
fcoml
les
into
push
fldenv
je
dec
test
dec
xor
jg
sbb
add
pop
xlat
push
scas
lock
adc
sub
ror
mov
or
loopne
add
mov
add
repz
filds
push
lret
cwtl
cwtl
testb
loope
movsl
in
add
pop
cwtl
pusha
or
push
adc
or
add
adc
outsl
push
add
push
cs
scas
mov
sub
cmp
pop
iret
pop
inc
rcr
xor
loop
andl
les
jmp
jns
outsl
pushw
rclb
inc
add
test
or
and
xor
xor
in
dec
adc
inc
add
mov
dec
ljmp
test
add
test
and
jo
add
fmull
fnsave
ficoml
jecxz
pop
repnz
enter
inc
int3
mov
sub
test
sub
mov
sub
mov
add
sbb
xor
jle
xchg
sbb
pop
adcl
subb
mov
in
xchg
incl
cmp
mov
nop
or
mov
push
xor
cmc
mov
or
xorl
mov
push
cmp
mov
mov
loopne
push
test
insl
in
or
jmp
sub
call
lock
push
enter
out
dec
lcall
cmp
add
cvtps2pi
adc
fistpl
add
ret
jbe
mov
jge
push
adcb
and
adc
imul
iret
scas
loopne
insb
or
xorb
insb
push
mov
add
dec
lods
xor
mov
fs
fsubrs
mov
mov
push
dec
aam
andl
push
add
mov
lcall
jo
repnz
sub
inc
test
jl
or
lret
sbb
jb
lods
add
add
sbb
jmp
or
xor
fwait
cwtl
movsb
add
add
jl
sub
enter
dec
andl
scas
or
and
fisubs
ds
pop
mov
roll
mov
inc
out
sahf
les
loope
jns
stos
pop
or
sbb
pop
push
cmc
sub
adc
or
adc
add
add
fisubrs
pushf
add
jnp
je
imul
pusha
xor
cmpsb
dec
push
jo
sbb
cmp
mov
in
push
in
outsb
push
sub
and
sbb
test
add
rclb
cmp
ficomps
stc
mov
mov
jg
dec
sub
mov
push
jmp
mov
sbb
jbe
pop
or
add
out
mov
sub
js
dec
or
sbb
ficoml
xlat
add
test
lea
add
mov
repz
sub
and
sti
into
imul
inc
fsubr
movsb
pop
dec
mov
cmp
xchg
dec
jne
or
sub
add
sub
ret
js
nop
std
add
sbb
out
add
repnz
push
mov
or
in
mov
bound
lret
xor
cwtl
xlat
enter
jmp
xchg
outsl
jp
jecxz
rorb
test
lock
jne
stos
or
cmp
xchg
add
jne
andl
in
jl
xchg
outsl
dec
cld
rclb
xor
test
mov
jecxz
sbb
imull
adc
push
lret
adc
xorl
and
push
add
jns
and
arpl
lahf
aas
jecxz
out
push
xchg
sbb
sti
aam
into
hlt
mov
sub
in
in
test
adc
and
insb
cmpsl
and
pop
stos
mov
iret
cmpb
xchg
add
push
ret
jmp
aam
adc
add
push
add
lret
or
sub
rolb
sub
fldcw
mov
popa
jne
jno
call
dec
and
dec
ss
lods
xchg
and
icebp
xchg
mov
push
add
fcomps
mull
mov
fs
loope
push
lcall
sbb
loopne
xchg
jb
arpl
mov
inc
je
cmp
int
push
mov
call
cmp
int3
cs
cmp
add
sub
push
loopne
arpl
outsl
xchg
ret
popa
adc
sub
pop
sbb
out
sarb
roll
jnp
jne
add
mov
dec
add
dec
stos
xlat
mov
pop
push
fs
mov
hlt
add
outsl
and
and
add
jmp
xchg
adc
shlb
and
push
lret
or
je
movsb
mov
sbb
shl
stos
dec
mov
dec
cmp
sbb
pop
movsb
and
add
adc
imul
jno
in
add
nop
ret
pop
add
pushf
inc
adc
sub
adcb
adc
mov
xchg
js
add
push
add
sbb
enter
add
jb
or
aaa
push
out
cmp
xchg
dec
shlb
cmp
mov
sub
pop
clc
pop
xchg
push
sti
addl
add
stos
sbb
or
out
es
adc
xchg
cwtl
add
or
xchg
and
arpl
adc
notb
loopne
xchg
xchg
sub
loop
das
inc
mov
push
fs
pop
sub
fnstsw
add
mov
and
inc
add
cmpsl
xchg
push
psubsw
xor
out
in
adc
push
mov
aam
cmp
and
loop
pusha
xchg
sahf
xchg
je
lret
jg
int
rcll
lcall
pop
pusha
mov
cmp
or
aas
js
pop
jae,pn
daa
pusha
push
nop
leave
dec
inc
and
adc
hlt
add
mov
add
jge
xchg
mov
popf
or
push
jb
dec
mov
scas
and
ret
mov
inc
cwtl
int3
pop
cmp
xor
mul
cs
lock
push
cwtl
push
subb
xchg
mov
xchg
or
jno
loop
mov
add
popf
jae
inc
mov
mov
int3
andl
mov
divl
add
jbe
add
mov
fisttpl
shlb
cwtl
or
add
jp
pop
jno
cli
adc
pop
sub
jae
add
pop
xor
pop
les
cmp
gs
pusha
dec
jmp
out
enter
je
sub
jle
in
dec
faddp
insb
lock
sbb
pop
sahf
jmp
sub
stos
lret
std
hlt
pop
mov
cltd
add
add
loop
lret
ret
add
jmp
shrb
add
orl
or
cmp
add
ret
rcrl
and
and
add
push
cli
adc
and
dec
or
inc
inc
nop
rolb
dec
cmpps
popf
jle
and
cmp
add
mov
xor
dec
ja
enter
mov
int3
adc
add
add
jnp
loopne
push
jo
jle
or
push
cmpsb
out
pop
ss
or
dec
add
dec
fisubrs
popf
cmp
inc
mov
push
or
pop
push
mov
lret
imul
jb
cmpsl
and
jnp
add
jp
lock
dec
ds
sub
and
ja
add
sbb
sbb
mov
pop
ret
push
mov
aam
hlt
or
add
aad
sar
mov
xor
rolb
fadds
scas
lcall
add
adc
adc
add
push
fadds
cmp
sbb
adc
shl
icebp
shlb
dec
mov
pop
xor
jo
sbb
sbb
inc
clc
test
inc
or
xchg
push
xor
mov
int
xchg
xchg
cmp
mov
in
jns
sub
cmpsb
sbb
xor
push
jb
outsb
mov
out
jmp
mov
lcall
loope
pushf
add
rorb
out
mov
xchg
dec
push
push
addb
add
lods
mov
and
cld
pop
pop
xchg
jnp
xor
xlat
push
fldt
addb
pop
add
xor
call
pop
sbb
int3
xchg
and
xchg
add
pop
or
ret
clc
add
loop
jmp
leave
dec
std
add
adc
rcrb
cld
cwtl
mov
lods
fbstp
cmp
jl
ret
out
shl
add
add
fisubl
push
je
sub
inc
aam
in
lea
sti
repz
adc
xor
mov
jge
adc
aam
pand
dec
scas
jg
sbb
cmp
jo
daa
pusha
push
mov
dec
imul
mov
xchg
roll
icebp
jmp
fmull
adc
sbb
mov
push
adc
ret
sbb
mov
jg
or
lret
adc
div
int3
mov
es
push
sub
in
adc
aas
jo
mov
jne
mov
test
sub
andb
test
xchg
mov
test
jmp
mov
repz
fidivs
hlt
ja
inc
push
mov
xor
in
mov
in
inc
adc
add
adc
testl
shlb
aam
pop
cmp
mov
push
sub
dec
enter
mov
in
and
inc
faddl
pop
jmp
daa
adc
adc
addl
xor
sbb
pop
xorb
and
cltd
cmp
jl
repnz
add
add
call
pusha
test
out
lods
ljmp
js
mov
sahf
fldl
add
insl
push
aad
jae
push
pop
call
adc
icebp
nop
in
ljmp
daa
jl
cwtl
lock
cli
das
mov
cmp
add
inc
lret
push
repz
test
add
repnz
lods
mov
dec
btc
add
mov
testl
add
cmp
jno
mov
jae
repnz
jg
jne
cmp
pop
cmpsb
and
out
dec
cli
dec
add
icebp
xchg
addl
inc
push
out
add
add
into
cmp
aam
pop
add
adc
addr16
ficoms
pusha
xchg
fsubs
jmp
add
xor
add
sub
pop
cmp
rcr
add
cmp
mov
inc
add
cmp
add
fdivr
cmp
inc
xchg
lret
push
movsl
sbb
popa
jns
or
outsl
pop
mov
and
fcomp
daa
xchg
add
idiv
mov
mov
loopne
fdivs
add
sahf
or
add
idiv
cmpsb
inc
push
cltd
outsl
enter
jae
or
push
ss
call
xlat
pop
and
sbb
inc
add
test
add
out
push
ss
add
sbb
mov
into
loopne
add
mov
das
cli
aas
adc
sbb
cmp
lahf
xchg
inc
pop
sbb
xorl
pop
loope
clc
add
stos
fimuls
cmp
in
add
xorl
shl
push
lock
lcall
mov
add
mov
push
jmp
aaa
popf
adc
jg
sbb
add
dec
mov
jmp
mov
jp
sbb
sub
mov
fdivr
ljmp
test
inc
adc
mov
adc
lds
in
dec
ja
add
arpl
shl
jno
add
outsb
xor
or
sbbb
sbb
faddl
pop
mov
fisubrl
add
lret
cmp
je
sbb
lahf
add
xchg
inc
repz
loop
and
xchg
sub
out
or
pop
jae
hlt
stos
sti
add
ljmp
rcrb
popa
cld
sbb
pop
test
fcmovne
xor
pop
js
orl
adc
push
out
loope
dec
mov
inc
js
adc
stos
add
xor
popa
movsl
and
add
jle
stc
cmp
or
inc
int3
xchg
sub
insb
outsl
push
or
sbb
cmp
jge
cmpl
cld
insl
aam
in
orb
mov
cmp
jne
and
push
test
daa
cmpsb
push
shrb
add
mov
faddl
fwait
stos
add
push
lret
shr
push
test
iret
or
xor
jmp
mov
add
cwtl
cmp
ret
mov
fdivs
pop
push
add
into
movsl
popf
dec
mov
mov
mov
ja
fsub
cmp
mov
in
out
aaa
sarb
pusha
jne
loop
add
faddl
aaa
shrb
sbb
xchg
jmp
repz
clc
sub
dec
or
subl
movb
inc
mov
xor
or
cmp
and
adc
enter
pop
loopne
xchg
rcrb
add
xchg
mov
dec
adc
push
dec
xlat
enter
jmp
pusha
bound
lea
xchg
aam
jecxz
flds
iret
roll
clc
mov
add
jno
xchg
xor
and
rcl
mov
arpl
push
dec
in
popa
and
or
cmp
pop
jo
jg
rolb
lods
sub
movsl
xor
or
test
f2xm1
push
fldl
jo
mov
pushf
test
mov
into
sarl
shll
mov
sbb
test
shlb
daa
mov
add
inc
or
xor
filds
std
decb
shl
mov
adc
adc
add
lcall
test
add
or
cmpsl
in
jns
fadd
adc
mov
sub
mov
fnsave
push
daa
mov
cmp
jmp
adc
les
mov
mov
jp
stc
cmc
sbb
in
subps
jo
shrb
movsl
mov
sub
das
daa
xchg
mov
jg
xor
lds
pop
add
cmc
or
loopne
jb
jo
pop
sti
fsub
adc
pop
jl
sbb
roll
pushf
push
inc
out
pop
ds
cld
mov
xor
xchg
pushf
adc
push
mov
sub
in
fnstenv
bound
enter
xor
add
inc
push
fdiv
xor
insb
scas
xchg
in
pop
mov
pop
daa
popa
pushf
sbb
add
adc
adc
mov
leave
sti
imul
add
cmp
and
push
cltd
adc
adc
js
add
cmp
adc
mov
adc
cmp
mov
jo
not
inc
sub
add
jb
aaa
popa
mov
add
cltd
scas
xor
pop
add
jle
cmc
aaa
inc
jb
xchg
xor
cmp
xchg
sub
sar
or
aaa
out
les
test
fcomip
dec
pop
pop
cmp
into
mov
cmp
pop
jge
sbb
add
insl
mov
pop
je
pusha
iret
repz
mov
jge
push
notb
sahf
aad
movsb
cltd
and
inc
loopne
or
mov
add
jecxz
or
cmpsb
scas
in
out
roll
mov
mov
movsl
repz
jg
int3
pop
jge
pmovmskb
call
mov
mov
or
dec
sbb
je
add
icebp
out
imulb
lret
leave
sub
das
ret
xchg
xchg
imul
mov
popf
fsubrs
jns
mov
inc
and
fimull
dec
xor
mov
fldl
call
xor
aad
fsubs
add
dec
pop
push
mov
add
enter
pushw
xchg
add
cmc
leave
mov
cmp
test
cmpsb
sub
mov
push
add
loopne
sbbb
adc
xor
inc
aam
dec
addr16
pop
std
add
outsb
fidivs
ja
mov
push
clc
or
pop
movsl
sub
je
add
mov
rolb
sarb
cmpb
loop
and
xchg
or
sbb
ret
enter
add
mov
cmp
pop
lahf
pop
xchg
test
dec
int3
xor
push
mov
cltd
gs
es
mov
cwtl
add
stos
aad
jmp
mov
inc
adc
inc
jecxz
jo
or
inc
cmp
mov
adc
jl
sbb
lcall
dec
negb
leave
enter
mov
add
add
sub
add
and
dec
pop
mov
es
pushf
pop
xor
mov
xchg
pusha
mov
cld
aam
mov
add
and
lahf
add
push
lds
andb
mov
out
dec
cmp
jne
mov
cltd
mov
push
push
and
mov
xchg
add
or
jne
add
push
jecxz
data16
mov
xchg
movsb
adc
xchg
popf
movsb
or
mov
add
sub
out
mov
inc
callw
add
out
or
add
rclb
cli
repnz
and
insl
dec
push
aaa
stc
lods
sbbl
rorb
xchg
dec
add
ds
negl
jb
dec
std
pop
add
sbb
adc
pop
divb
dec
add
in
adc
pusha
loopne
add
jmp
inc
outsb
dec
es
fsubr
ss
xchg
int3
push
push
mov
mull
push
push
add
add
push
fiadds
or
push
lret
sub
push
add
andb
push
hlt
pop
test
push
test
push
rorl
push
cmpsb
and
lock
les
mov
or
dec
test
leave
and
xor
and
int3
pop
movsl
and
jmp
mov
dec
imul
pop
rorb
sbb
aas
sahf
xchg
mov
jp
mul
lock
shll
ljmp
in
lds
push
adc
sbb
lods
std
in
mov
ljmp
or
or
add
pop
aam
out
add
aas
inc
add
and
cld
std
rcr
adc
test
jae
lods
decl
loop
sbb
xchg
or
xchg
xchg
inc
jnp
jecxz
lock
sub
iret
gs
call
jo
push
mov
pop
iret
xor
xchg
int3
insb
inc
inc
push
mov
or
fdivs
sarl
jne
out
pushf
pop
inc
insl
jl
cld
add
das
cltd
scas
std
popf
sub
jle
test
fiaddl
pop
sbb
or
sbb
push
lea
cmc
fwait
int3
ljmp
fisubs
cwtl
lock
scas
repnz
or
cmp
sub
repnz
dec
call
dec
pop
rcr
adc
scas
loope
lods
das
movsl
sub
dec
or
add
jae
mov
loopne
sbb
scas
jnp
in
or
stos
push
mov
imul
add
mov
xlat
popa
call
stos
or
mov
les
ja
fs
repnz
pop
dec
mov
add
push
popa
test
push
loop
inc
mov
jae
bound
mov
sbb
leave
jle
cmp
add
inc
addr16
pusha
ds
adc
dec
jo
mov
mov
cmp
loopne
pushf
ficomps
add
inc
mov
cmp
add
data16
scas
loopne
add
mov
sub
popa
inc
aaa
jg
loope
rolb
scas
push
roll
cmp
and
and
add
ds
jno
push
adc
dec
shlb
scas
pushf
sbb
ljmp
addb
add
pop
cli
leave
mov
xchg
mov
rol
dec
inc
stos
add
inc
xor
hlt
jecxz
sbb
int3
sbb
pop
es
adc
sahf
pushf
inc
mov
and
pop
add
aas
cmp
add
fneni(8087
or
add
jnp
cmc
enter
sub
add
out
mull
out
cwtl
add
fbld
arpl
adc
ret
inc
shlb
icebp
push
add
lcall
fcoms
xchg
movsb
lods
push
or
jp
sbb
test
inc
sbb
pop
clc
sub
jnp
pop
mov
lret
xchg
push
cli
add
js
bound
mov
sahf
fildll
rclb
cmp
mov
lock
movsb
jl
leave
mov
cmp
pop
push
xor
dec
out
addl
mov
lock
inc
ja
fdivr
cmp
and
into
div
aaa
pop
mov
mov
mov
or
jg
pop
loop
jo
leave
xor
lock
cs
mov
mov
adc
dec
out
in
andl
test
in
cli
lcall
clc
cmp
fisttps
outsl
das
aas
pmulhw
out
leave
and
sub
int
mov
add
sub
mov
mov
nop
xor
add
cmp
arpl
pop
mov
jo
add
xlat
push
push
adc
loope
mov
stos
jae
popa
incb
imul
fnstenv
pusha
je
jne
dec
xchg
add
rorb
movd
cs
sub
iret
int3
es
movd
add
sub
in
add
mov
mov
add
popf
inc
ss
inc
mov
add
incl
mov
add
dec
and
imul
push
add
loopne
stos
popa
in
xor
adc
pusha
add
pop
popf
imul
js
push
adc
ret
pusha
sub
xchg
add
adc
cmovnp
repz
or
add
sbb
add
ficoms
in
sbb
xchg
adc
push
ljmp
pop
addr16
arpl
add
nop
add
out
pop
mov
lret
jmp
mov
push
sub
test
xchg
pushf
pop
cmpsb
mov
sbb
or
fcoms
add
sbb
add
jo
push
xchg
arpl
add
es
cld
pop
call
stos
sbb
aas
add
in
dec
or
jns
ds
fimull
adc
jno
cmp
and
add
and
and
dec
pop
pop
mov
cmp
jnp
cs
mov
bound
movl
fs
xchg
pop
aas
sub
inc
add
mov
outsb
dec
pop
mov
fwait
ds
popa
sbb
add
gs
out
add
cmpsb
mov
pop
in
mov
lahf
lret
sub
bound
adc
add
mov
daa
mov
add
pop
dec
and
jmp
sbb
outsl
push
xor
adc
call
pop
pop
add
jle
out
cld
and
add
or
popf
cli
stc
inc
in
mov
push
mov
adc
mov
add
cmpsb
sahf
and
iret
enter
mov
lock
mov
cmc
xor
push
dec
add
popf
cmpsl
lock
cwtl
or
inc
mov
adc
mov
stos
lret
dec
adc
mov
pop
leave
fwait
pusha
xor
mov
jge
mov
cmpsl
mov
call
add
aad
xchg
jmp
adc
add
icebp
dec
or
add
shlb
mov
push
push
push
cmpl
sub
roll
pop
jo
sbb
push
repnz
sbb
dec
inc
cmp
stc
orb
aad
stc
pop
ds
add
mov
into
and
lock
add
outsb
jecxz
in
insl
push
icebp
mov
arpl
aaa
push
sar
jle
add
adc
sbb
icebp
out
aaa
add
repz
xchg
or
mov
adc
dec
rcl
cwtl
cltd
add
pushf
xor
jb
jl
cmpsl
push
out
cmp
imul
stos
add
push
push
rcrl
add
push
loope
sbb
xchg
add
xor
test
jne
xorl
jno
xor
add
in
push
shl
in
add
jle
stc
roll
dec
add
sbb
sbb
pop
jno
js
dec
add
ret
add
mov
add
pop
sbb
adc
in
jbe
sub
js
loopne
pusha
xor
add
ja
jnp
addr16
call
int3
fmull
cmp
jl
in
add
lret
push
pop
aad
cli
add
sbb
push
jp
lds
test
adc
shll
xorl
add
imul
cmp
clc
repz
pop
sbb
outsl
mov
pop
xchg
mov
inc
cmp
pushf
pusha
xor
movsb
mov
mov
mov
and
loopne
xor
into
bound
stos
shll
push
mov
outsb
fisubs
pop
pop
lods
pop
sub
dec
adc
dec
push
or
inc
enter
fnsave
add
mov
iret
dec
out
jns
jecxz
cmp
xor
lds
push
xchg
add
adc
sub
jbe
je
xor
inc
xor
mov
dec
pusha
pop
xor
mov
aas
inc
xchg
mov
pop
sub
pop
dec
add
xor
mov
add
and
push
add
pop
or
out
push
add
push
bnd
and
pop
pop
vcvtsi2sdl
inc
shl
bound
mov
pop
rorb
sub
adc
jno
filds
insb
xor
les
cli
mov
add
xor
jle
add
stos
inc
stc
add
ret
jge
rol
lock
lcall
mov
pop
add
inc
nop
popa
push
dec
movsl
add
and
lods
mov
add
pop
xchg
mov
cmp
testb
add
bound
sbb
and
adc
add
insb
push
dec
add
mov
aam
jbe
gs
in
pop
add
lret
and
loope
ffree
lret
mov
rcl
or
in
mov
sbb
out
add
divb
or
sub
sbb
mov
add
call
js
pop
mov
add
outsb
dec
repz
shll
xlat
adc
sbbb
mov
out
in
pop
loopne
pop
xor
push
jne
sub
adcb
push
sbb
loop
add
lret
popa
rolb
cmp
adc
adc
add
es
movsb
lret
ja
call
pusha
push
sbb
sarb
lea
scas
dec
xor
pop
stos
add
mov
and
pushf
ss
mov
in
jmp
or
mov
pop
and
ficomps
das
add
add
movsl
loop
add
mov
pusha
jb
repnz
dec
mov
pop
shrb
jae
sub
xor
adc
andb
add
sub
ror
and
add
in
icebp
jo
aas
insb
pop
xchg
lea
loopne
stc
jle
xor
add
ret
mov
mov
or
int3
es
jl
out
popf
pop
adc
lock
in
in
push
pusha
call
loop
mov
test
movsl
adc
push
lock
fwait
add
dec
pop
popa
push
dec
cs
add
je
int3
mov
adc
sti
push
and
cmp
popf
dec
inc
call
es
mov
fwait
cli
push
push
mov
xor
leave
sbb
add
lds
test
xor
lods
fcomp
sub
xchg
iret
add
repnz
push
mov
adc
jp
add
test
fistl
mov
xchg
sub
pop
imul
dec
repz
mov
ret
xor
cmp
add
in
lods
push
or
pop
pop
lahf
adc
icebp
cli
jb
mov
jnp,pn
negb
sub
and
add
mov
sbb
and
adcb
ret
mov
xchg
punpcklwd
mov
mov
fwait
adc
jp
add
xchg
mul
mov
repz
sbb
push
sub
add
das
les
add
sub
add
xor
and
lret
jo
jp
popa
add
mov
test
pop
add
lods
inc
fsubrp
and
mov
out
aad
pop
mov
and
lahf
movsl
pop
repz
cmc
pop
notl
pop
pop
jbe
pop
jb
mov
mov
add
insb
mov
sbbl
and
dec
int3
xor
rolb
fisttps
mov
add
pop
push
pextrw
lcall
xor
add
pop
pop
and
rclb
cmp
rcrb
push
or
jg
xchg
jnp
iret
loopne
shlb
push
add
xor
sbb
push
add
je
add
fbstp
xor
cli
rol
shl
mov
inc
stc
adc
cltd
jb
pop
add
cld
cmc
pop
xor
cli
and
fidivrs
in
xor
lock
push
xor
cmc
push
ret
loope
aam
imul
out
sub
add
xor
sub
es
add
lods
pop
and
loop
loopne
lea
sbb
add
jae
pop
push
cmpsb
dec
push
nopl
roll
jno
xor
push
add
jl
test
push
push
daa
mov
add
fwait
cltd
cmpsb
jmp
cwtl
out
or
push
mov
repz
jmp
sti
cmp
sbb
xchg
pop
sbb
inc
mov
insl
lea
test
in
push
bound
jp
nop
mov
add
jmp
dec
popl
adc
push
inc
nop
sub
daa
and
and
insl
and
imul
push
jl
push
or
pop
or
inc
in
mov
call
fwait
or
icebp
adc
lcall
int3
add
jo
jp
pusha
add
lret
ret
push
stos
add
imul
fucomp
jl
add
nop
lcall
pop
shrl
mov
mov
sub
ss
test
mov
into
mov
xchg
or
dec
mov
pusha
cmp
ljmp
scas
in
paddsb
aam
mov
inc
ret
ret
adc
pop
add
add
mov
mov
or
cmp
aas
pop
dec
rorb
sub
cmpb
mov
adc
cmp
sub
sbb
pop
cmp
movsl
add
mov
andl
testl
sbb
push
ljmp
add
jae
mov
add
push
sbb
imul
dec
jbe
loopne
movsl
sbb
cmp
mov
jg
jno
xorb
test
xorb
mov
sbb
jp
nop
push
rcll
arpl
int3
orl
mov
push
ret
pop
and
cmp
dec
mov
and
insb
faddl
pushl
mov
cmp
jae
subb
jbe
or
das
add
mov
jne
aad
mull
stos
mov
or
sbbb
mov
inc
stos
mov
jmp
add
push
add
icebp
mov
inc
adc
in
xlat
cmpb
sbb
mov
sub
out
lcall
pop
add
loope
inc
xor
jo
fxch
push
lret
andnps
xchg
mov
dec
xchg
and
sahf
sub
std
pop
cmp
dec
add
mov
push
jge
pop
lret
pop
jmp
jecxz
fiaddl
add
xor
das
add
test
cmp
clc
xor
or
lods
mov
mull
xor
adcl
insb
nop
cmpl
pop
adc
mov
leave
loope
clc
inc
or
daa
add
mov
mov
and
aaa
xor
cwtl
xor
mov
jne
add
pop
inc
clc
xchg
jmp
sbb
pop
call
inc
pcmpeqb
xor
fidivrs
push
nop
add
add
fidivrl
or
lods
sub
sub
jle
imul
hlt
and
mov
lret
add
mov
mov
int
popf
enter
divb
add
clc
sbb
inc
pop
jecxz
push
mov
mov
lods
ljmp
pop
sub
mov
add
mov
push
mov
add
cmpsb
mov
test
mov
test
jo
fldl
popa
adc
fiadds
inc
clc
pop
dec
and
loop
int3
fucomp
mov
add
ret
mov
adc
icebp
inc
shlb
mov
test
les
dec
push
cmp
push
and
cmp
insb
mov
movsb
fistpll
xchg
sbbl
jne
movsl
push
cmp
test
dec
add
or
cmp
out
incl
iret
imul
add
fistl
movl
enter
ds
add
in
ret
stos
and
add
aas
inc
notb
xchg
push
dec
data16
rolb
jo
fwait
hlt
add
inc
add
pop
cmpsl
sbb
or
jp
icebp
dec
jo
jae
cmp
add
mov
subb
movsb
add
fildll
pusha
in
push
int
add
sub
jbe
aam
pusha
and
aas
out
add
sub
pop
loopne
call
or
repnz
in
cwtl
in
fisubrl
mov
das
mov
adc
or
popa
ret
leave
in
jbe
int3
xchg
icebp
mov
jmp
add
loopne
xchg
adc
push
insb
int
in
imul
nop
add
jecxz
dec
push
or
in
enter
adc
and
movsl
jnp
jg
push
jne
fwait
add
inc
cltd
lea
and
sbb
dec
dec
mov
cmpsb
clc
sbb
jo
outsl
xchg
imul
les
add
adc
xor
jle
mov
jl
add
loop
xchg
adc
roll
push
or
pop
xchg
add
mov
add
cmpsl
push
xchg
mov
add
mov
scas
lret
mov
out
cmp
dec
dec
fs
xchg
hlt
jae
add
pause
jae
jo
hlt
add
js
test
into
cs
and
add
nop
mov
inc
scas
inc
ja
mov
push
ds
add
out
cmpsl
out
push
cmp
sbb
cmp
call
dec
and
arpl
pmaxub
or
pop
mov
aam
adc
dec
inc
call
sub
add
pop
push
call
outsb
or
mov
adc
fcmove
xor
add
dec
pusha
xor
or
adc
int3
lock
mov
jb
and
push
stc
imul
push
ljmp
pop
mov
inc
xchg
dec
cmp
push
inc
decb
into
je
xorl
les
add
sub
push
mov
verw
in
jle
out
sub
mov
xchg
dec
addb
test
xor
cs
loopne
xchg
sub
mov
xor
dec
sahf
sbb
or
cmp
aas
out
cmpsb
std
push
daa
mov
popf
or
mov
jb
outsb
pop
add
pushf
jle
sub
pop
sbb
adcb
cmp
sbb
and
cltd
cmp
movsb
inc
adc
lcall
push
mov
movsl
imul
lea
cmp
je
xor
test
or
mov
cwtl
outsb
xor
js
xor
cmpsl
sbb
add
in
pusha
insl
shlb
adc
aam
aas
pop
aaa
add
shlb
cmp
mov
loop
fs
test
push
pop
xchg
lods
add
sbb
cmp
addr16
add
call
loop
leave
lahf
testb
rol
jo
imul
dec
push
add
test
movl
and
xchg
stos
subb
pop
mov
mov
fwait
dec
or
data16
pop
bound
pop
clc
icebp
lret
push
adcb
mov
scas
outsl
dec
pop
hlt
jns
adc
cld
cli
add
loopne
add
mov
sbb
xlat
arpl
pop
add
in
fadds
mov
xchg
ret
mov
xor
add
mull
dec
push
in
cmp
adc
xor
imul
fwait
xchg
addr16
andb
into
and
stos
add
dec
push
pop
jae
lods
add
add
add
inc
popa
addr16
jle
ds
jg
daa
repnz
jbe
hlt
out
sub
les
dec
addr16
cld
sub
mov
sti
and
add
jo
mov
std
sub
inc
enter
pusha
add
xchg
inc
scas
xchg
or
pushf
cli
repz
add
xchg
bound
popf
imul
push
lds
push
cmc
shlb
lahf
inc
sbb
sub
nop
adc
cmc
pop
adc
add
jb
loopne
pusha
cltd
lahf
add
push
fstps
shr
pop
sub
stc
mov
cmp
push
pop
xchg
loope
push
lcall
popa
rcrb
push
pop
inc
addl
cltd
jp
sti
xor
pop
add
dec
aam
cmp
pop
adc
test
push
add
sahf
inc
sub
in
stos
dec
add
dec
popf
rorl
xchg
xor
jg
xor
das
xchg
ds
mov
cmp
cmp
inc
rorb
dec
nop
adc
xlat
ja
rcrb
sub
addb
rcrb
stos
fs
test
test
js
xchg
jecxz
push
xchg
or
fistps
pop
mov
cmp
loop
aad
cvtdq2ps
sti
shll
mov
mov
adc
lret
mov
lods
pop
stos
mov
mov
adc
clc
ret
subl
xchg
ja
xchg
xorl
das
or
test
pop
xchg
inc
add
decl
test
inc
fldcw
dec
mov
lock
ss
adc
add
inc
sbb
popf
add
mov
dec
movsb
popa
add
cmpsl
imul
daa
nop
mov
add
xor
push
push
push
movsl
inc
sub
cmp
sahf
jbe
aas
mov
mov
sbb
arpl
not
adc
inc
test
xchg
sbb
or
jg
shl
std
sbb
sbbb
cmp
movsl
dec
rorb
loop
add
push
inc
xchg
add
outsb
and
outsl
sbb
loopne
mov
out
add
or
add
jl
mov
xor
mov
pop
xlat
lock
push
sbb
push
es
add
mov
push
sub
addb
fmull
cmc
mov
out
sbb
fsubr
addr16
jle
dec
add
insl
loope
out
in
sbb
cmp
js
addb
sbb
mov
pusha
popa
add
mov
leave
add
mov
xor
sub
cmpsl
and
add
mov
and
test
xchg
sahf
popl
dec
stc
iret
xor
mov
or
add
pop
pop
dec
ss
call
jmp
mov
cmp
xchg
and
in
add
out
cltd
dec
push
gs
mov
jns
sub
mov
mov
cmp
pop
clc
cli
lods
adc
cmc
cwtl
mov
inc
xlat
add
scas
pop
inc
addr16
inc
push
xor
mov
repnz
mov
es
dec
nop
add
dec
pop
repz
jl
shrl
inc
fwait
add
push
inc
sbbb
inc
lret
imul
lock
incb
sbb
pop
xor
xor
dec
je
cmp
and
xchg
aas
push
and
fmul
add
loopne
out
inc
mov
in
or
stos
and
pop
dec
in
mov
inc
mov
rclb
cwtl
add
pop
sbb
jg
jbe
int3
push
call
fsubrl
adc
sbb
add
and
mov
inc
pop
lock
push
inc
addb
int3
popf
scas
pop
mov
shlb
jae
add
push
jmp
mov
sbb
aas
push
mov
mov
jns
dec
add
sub
rcrb
inc
pop
add
shlb
jg
sahf
ja
push
mov
mov
adc
pop
out
mov
mov
xor
inc
ud1
xlat
into
popf
add
cmp
xor
lods
inc
and
das
add
pop
or
lock
xor
push
ret
sub
incb
pop
insb
dec
jp
sbb
cwtl
daa
mov
sub
andb
push
add
xor
es
dec
cli
fs
fmuls
pop
xchg
call
popf
add
push
out
xor
pop
or
repnz
cwtl
inc
lcall
cmp
lock
jmp
xor
adc
cltd
cmp
test
jle
add
push
xor
mov
add
int3
icebp
adc
push
mov
add
inc
daa
lret
cltd
int
jg
add
ljmp
sub
inc
ficomps
popaw
cmc
add
fistpl
cmp
in
pop
loopne,pn
fwait
mov
mov
stos
push
subb
sbb
xor
jl
mov
add
dec
int3
aas
mov
cli
and
popa
arpl
jl
pushw
add
ret
aam
xor
dec
add
fwait
rorl
bound
inc
mov
aam
loopne
notl
lahf
inc
sbb
jl
push
js
mov
dec
mov
mov
shlb
pop
sbb
xchg
push
andb
fiadds
pop
xor
je
sbbb
mov
add
sub
nop
and
add
and
rorb
mov
xor
push
mov
xor
sbbb
mov
es
inc
push
jno
icebp
cmpsl
xchg
stos
add
xchg
faddl
xor
cmpsb
in
or
mov
sbb
ret
cmp
and
adc
test
fimuls
mov
test
push
ret
mov
add
cmp
orb
fistl
andl
fs
ret
adcb
pushf
xchg
xchg
mov
stos
inc
fdivr
sub
sub
push
cld
nop
les
xchg
test
sub
push
push
lahf
or
dec
add
shlb
mov
push
icebp
sub
mov
or
inc
shrl
add
in
call
or
mov
clc
pushw
js
rorb
js
mov
andb
mov
dec
jne
pop
test
jo
cmp
gs
loop
imul
popa
push
imul
pop
scas
ret
add
ljmp
icebp
and
loopne
outsb
pop
push
and
repz
popa
das
inc
sub
cmp
fwait
cwtl
sub
adc
dec
imul
pop
xchg
adc
aaa
mov
in
inc
shrl
leave
push
loop
add
shl
and
pusha
sbb
xor
push
test
test
js
add
cmp
lods
adc
inc
je
adc
sub
add
jo
movsb
sbb
testb
repnz
and
adc
hlt
jo
jns
das
add
testb
rolb
sub
mov
inc
mov
mov
adc
repz
jp
adc
add
js
mov
ja
pop
push
inc
in
adc
out
cwtl
sbbb
lods
aaa
add
arpl
loopne
push
add
and
xchg
shll
inc
mov
pop
or
adc
mov
mov
bound
shll
and
mov
and
cmp
test
mov
add
lods
ficomps
inc
add
cmpsb
mov
dec
mov
inc
insl
imul
cmp
nop
sub
dec
xchg
aaa
xchg
inc
in
jno
push
inc
cli
cld
out
dec
jae
addb
test
sub
mov
aam
or
test
mov
inc
out
xchg
cmp
test
sbb
push
rorl
xchg
loop
int3
jl
push
pop
fwait
nop
ficompl
movsb
shlb
inc
adc
hlt
sub
push
repz
outsb
adc
mov
add
cmp
pop
enter
add
cmpb
sbb
pushf
ret
adc
aam
mov
adc
lret
add
dec
jge
xlat
cmc
jp
es
hlt
pushf
mov
mov
xorb
add
out
xor
lds
jg
jns
add
push
out
fcmovu
mov
push
inc
sbb
add
xchg
test
mov
sub
xor
sbb
add
rorb
popa
gs
mov
pop
stc
inc
add
mov
push
dec
jecxz
add
lahf
add
jnp
jo
mov
add
out
sbb
js
nop
adc
ret
sub
icebp
shrb
inc
mov
dec
ror
cmc
sub
std
lret
in
hlt
shll
pop
and
adc
shll
push
and
or
dec
jne
push
lea
push
test
movsl
mov
adc
mov
adc
aas
pop
cld
xchg
rdmsr
push
and
dec
movsl
mov
cli
mov
maskmovq
testl
mov
dec
inc
test
lods
repz
cmp
addb
jns
or
mov
lds
fsubrp
pop
push
jg
bound
mov
movsb
test
jmp
int
iret
inc
jg
addr16
and
push
jl
or
ss
test
jp
jb
pop
push
sbb
shl
pushf
pop
inc
out
lret
or
mull
jo
pop
jns
and
ja
and
fiadds
test
daa
sbb
add
fldenv
mov
vpshlb
mov
test
ds
mov
aam
add
adc
pop
jnp
adc
cltd
sbb
divb
icebp
sub
imul
inc
mov
and
test
and
add
sub
add
js
mov
or
sub
das
pushf
scas
jp
pop
sub
ficoml
pop
lock
into
add
outsl
clc
iret
xorl
xchg
scas
adc
jg
add
into
loopne
pop
xor
pop
lahf
je
addb
pop
and
sarl
inc
mov
cld
xchg
les
push
push
adc
mov
mov
mov
xor
or
popf
fildll
pop
dec
sbb
test
sub
jl
add
pushf
mov
aaa
repnz
jl
pusha
mov
jo
push
inc
cmpl
sub
inc
fcmovnb
add
lods
in
imul
mov
jmp
int3
les
dec
jp
fldl
xlat
leave
add
sub
pusha
inc
adc
cmp
or
mov
addb
mov
lods
add
add
hlt
sub
adc
pop
dec
inc
and
adc
rcl
xor
pop
inc
sub
scas
fadds
jge
iret
inc
dec
sbb
jg
and
test
mov
adcb
xchg
or
dec
dec
mov
aas
push
mov
enter
and
int
mov
rclb
add
xor
mov
stos
or
popa
int3
xchg
rorb
mov
xor
dec
fsubrl
xor
sbb
fwait
sub
lock
rolb
rorb
or
jno
push
addr16
adc
add
idiv
pop
test
and
aam
movb
jae
cmp
out
daa
mov
shrb
push
inc
inc
stos
sub
in
cmpb
xlat
or
sbb
adc
xchg
lea
daa
test
roll
push
shlb
imul
sbb
inc
mov
dec
mov
jecxz
pop
lock
jnp
adc
jo
add
and
and
add
mov
pusha
add
jb
outsl
cltd
int3
and
ret
xor
add
rorb
pop
mov
add
adcb
mov
loope
sbbl
adc
and
push
and
sub
jle
add
push
sub
jmp
sahf
dec
inc
push
mov
sbb
scas
jecxz
mov
add
fstpl
scas
add
rolb
clc
rolb
sub
jb
sbb
or
loope
aas
cmp
movsl
xor
adc
insb
add
daa
push
lods
ret
or
pop
mov
inc
jns
mov
mov
push
insb
sbb
pop
leave
pushf
dec
test
pop
push
xchg
jns
and
fadds
cmp
vorpd
adc
xchg
dec
nop
sbb
inc
or
lahf
jne
lock
add
movsb
adc
push
adc
ss
test
push
aas
dec
pop
add
fdivs
cmp
xor
pop
sub
mov
fisubrl
push
out
imul
mov
pusha
fidivrs
int3
cmp
hlt
inc
daa
xor
push
jns
sbb
pop
mov
mov
cmp
aas
pop
xchg
push
pop
xchg
dec
and
jbe
or
ja
in
test
fwait
sbb
xor
push
cmp
xchg
dec
xor
cli
inc
in
xchg
pusha
bound
jno
adc
or
mov
imul
add
xchg
mov
and
lret
jbe
arpl
in
jmp
pop
inc
in
cli
or
or
jno
pop
rorl
adc
mov
adc
jne
je
add
bound
dec
push
jae
icebp
xchg
outsb
add
pop
ljmp
jg
pop
addb
bound
jge
arpl
lcall
dec
mov
or
ljmp
inc
bound
mov
xchg
outsb
sub
aad
mov
xchg
sahf
stos
jmp
cltd
inc
mov
jl
in
call
test
sahf
andnps
mov
leave
out
getsec
aas
inc
insb
add
push
push
fmuls
or
test
and
int3
adc
adc
pop
and
sub
mov
outsl
jp
mov
les
add
xchg
scas
sub
mov
push
jmp
loopne
adc
xor
in
cli
sub
fcoms
mov
out
and
cmc
cmp
inc
add
pop
adc
icebp
addr16
add
ljmp
jecxz
sahf
aad
call
lcall
loopne
push
sbb
jb
add
push
add
adc
jbe
sub
and
ja
inc
add
cmp
test
out
pop
hlt
add
bound
inc
and
in
loop
jae
push
leave
sub
stos
daa
push
mov
in
cmp
pusha
sub
test
bound
shrl
aaa
movsb
add
mov
out
popa
cmp
lcall
push
repnz
inc
add
xlat
inc
popl
repz
xchg
mov
sub
data16
add
pop
aad
lret
leave
in
xor
lods
nop
or
inc
add
pop
inc
lea
mov
or
shr
inc
jo
pushf
adc
pushf
xchg
mov
or
clc
pop
cmp
movsb
add
out
aaa
xor
inc
inc
fisubrl
or
movsb
jo
sub
sub
xor
xchg
xor
pop
pop
shlb
sub
ss
xor
pop
lock
and
mov
xchg
mov
pop
lret
xor
les
es
add
cmp
sub
and
or
inc
adc
fs
push
mov
or
pop
sub
mov
lock
cld
ret
leave
mov
sbb
mov
das
ss
sbb
add
stos
jbe
call
xor
add
mov
dec
and
mov
fxch
sub
js
repz
mov
cmp
pusha
int
and
in
arpl
movd
push
mov
or
cmp
rorl
pusha
test
and
sahf
xor
mov
cmp
lock
popa
add
jae
into
rclb
inc
in
push
mov
jo
xchg
xchg
and
shrb
sbb
and
jmp
shrb
xlat
pop
rolb
loopne
pop
or
dec
movsb
jo
dec
sbb
hlt
push
gs
in
sahf
inc
mov
adcb
loope
push
insl
les
inc
ficomps
sub
xchg
cmp
mov
inc
test
xor
add
mov
andb
push
imul
stos
inc
cmp
mov
pop
adc
mov
call
jp
js
pop
lret
cmc
fcompl
xor
xchg
mov
pop
pop
loope
add
lea
and
ret
mov
adcb
mov
cmpsl
test
and
test
inc
xchg
ficoms
sbb
mov
aad
or
xor
xchg
addb
inc
arpl
sbb
add
mov
mov
test
jnp
add
pop
xchg
daa
pop
dec
sbb
mov
lret
flds
es
mov
push
add
push
mov
popf
and
sub
mov
lods
jae
add
out
inc
mov
pusha
inc
and
add
cs
loope
pop
mov
jg
and
mov
mov
mov
std
arpl
icebp
shll
dec
adc
cmc
out
fs
lds
call
daa
lods
mov
sbb
rol
xor
loop
loope
push
or
mov
or
sub
enter
loope
bound
stc
push
dec
mov
mov
out
shll
cmc
xlat
mulps
ret
add
jmp
in
cwtl
pusha
fcoml
push
xchg
popa
filds
cltd
cwtl
mov
mov
hlt
cmp
push
xchg
pop
clc
mov
hlt
push
shl
sti
xchg
dec
cmp
rorb
lock
int3
xchg
push
in
test
daa
xor
pop
and
add
inc
mov
push
or
mov
clc
outsl
and
pop
sarb
rorb
je
add
mov
fisubs
sub
js
adc
inc
mov
pushf
loop
mov
add
fsubl
mov
in
jp
lock
or
add
xlat
in
cmp
dec
daa
enter
jo
adc
add
adc
mov
lock
sbb
outsl
push
sub
call
imul
test
pop
add
sub
pop
jo
dec
add
sub
jb
nop
das
imul
and
cmpsb
xlat
out
das
mov
ret
loop
subl
mov
push
popa
push
scas
adc
testb
ret
and
outsl
nop
out
jne
sub
xchg
add
push
loop
add
outsl
gs
lods
jbe
out
push
or
cmpsl
inc
fisubrs
aaa
sbb
test
addb
push
adc
pusha
xor
and
daa
popf
push
into
test
ja
or
int
lock
jl
adc
cs
inc
cmp
cld
dec
iret
in
add
lret
add
cmpsl
or
lods
sarb
xchg
aam
or
repnz
add
sarb
cmp
enter
mov
cld
push
jmp
rorb
pushf
inc
mov
dec
inc
and
mov
rcll
fs
aad
push
jo
add
in
sub
shlb
sbb
xor
rcr
incb
add
ret
dec
adc
and
sub
cld
jmp
shl
xchg
adc
and
mov
mov
xchg
pushf
mov
inc
mov
and
jnp
scas
add
xchg
add
jne
adc
xor
sub
push
sbb
adc
pop
inc
loopne
rorl
rcrl
lods
mov
add
mull
js
int3
add
xor
dec
test
add
xchg
inc
add
stos
xor
xchg
mov
adc
rol
mov
cmp
shlb
mov
sbb
les
ret
cmp
xbegin
fmuls
jae
push
xor
ret
aaa
adc
add
adc
push
cwtl
adc
add
das
or
shl
adc
dec
iret
add
mov
lods
xor
pop
push
add
imul
addl
or
rorl
inc
ss
and
xor
test
add
adc
icebp
sub
xchg
jl
mov
cmp
inc
xor
nop
mov
sub
mov
mov
into
popa
insb
test
lock
push
add
cmp
xchg
dec
or
out
xchg
inc
mov
aaa
inc
loopne
call
es
fldt
sbb
push
dec
insb
inc
jae
inc
xor
out
test
or
out
and
stc
js
mov
xchg
jl
loopne
sbb
lret
push
inc
inc
add
fs
or
and
sbb
insb
sarl
daa
sub
jge
js
xchg
cmp
add
aad
mov
popa
adc
add
cmp
pop
shl
cmpsl
sbb
test
pop
add
or
cmpsb
cmpsl
gs
stc
stos
add
pushf
inc
dec
xor
enter
mov
adc
imul
repz
pop
cmp
pop
sarl
adc
pop
pop
or
adc
and
add
sub
jne
std
and
popf
pop
loopne
fs
imul
mov
jns
icebp
push
decb
movsb
rolb
jge
add
movsb
sbb
int
sub
nop
mov
sub
sbb
adc
ja
enter
push
test
add
xchg
addr16
cs
adc
adc
xlat
pop
push
sbb
test
sbb
ficompl
mov
call
adc
adc
adc
fsubrs
stos
dec
pop
enter
jl
add
addb
adc
add
inc
add
jae
fnstcw
dec
adc
or
in
pop
cmp
push
xor
in
int3
mov
popa
lcall
jl
mov
mov
cmp
adc
inc
dec
mov
mov
imul
xor
add
dec
ret
lret
or
xor
dec
or
rolb
pop
testb
cltd
pusha
andb
add
ret
js
or
and
fmuls
sub
mov
loope
xor
subb
add
test
rcl
leave
inc
mov
xchg
test
loopne
mov
sarb
hlt
add
jbe
xor
sub
loopne
cwtl
pop
jno
pop
sbb
mov
popa
mov
pop
dec
add
ret
and
aas
fisttps
jg
push
push
jns
stc
notl
mov
mov
xlat
rol
lock
out
add
jmp
xor
lods
loopne
sbb
mov
sahf
add
mov
mov
add
xchg
push
xor
lock
repz
push
shl
jb
xor
add
pop
push
sarb
shrb
arpl
push
cmp
js
xlat
mov
outsb
pop
cmp
lret
in
mov
lea
or
pop
pop
jp
jge
add
into
cmp
js
or
mov
rcrb
ficoml
pop
xorl
jnp
lcall
outsl
add
xchg
pop
in
cs
dec
mov
sbb
rol
cmp
sub
adc
adc
filds
negl
inc
xor
lret
or
and
dec
out
pop
mov
aas
pop
cld
mov
int
cwtl
add
pop
push
aad
cmp
js
test
stos
jnp
cmpsl
mov
sub
pop
call
mov
add
add
cmc
imul
iret
add
insl
out
lock
lods
inc
jo
fildll
dec
repnz
adc
pop
in
fcmovbe
jg
inc
add
pop
push
jecxz
shl
pop
cmp
imul
in
adc
xchg
out
add
in
dec
cmpsl
add
imul
sub
inc
in
cld
add
push
shl
stos
mov
js
popa
dec
rcll
jno
sbb
loopne
add
adc
dec
cmp
mov
xor
shrl
xor
jp
mov
rcll
repz
inc
dec
inc
dec
mov
fs
dec
push
rolb
enter
mov
sbb
sub
mov
jb
ror
in
sti
mov
inc
add
mov
mov
add
adc
mov
adc
movsb
add
mov
jl
psubusb
std
and
and
xor
gs
and
cmp
pushf
cmp
lds
cmc
fldcw
xor
sub
or
jecxz
fidivs
nop
insb
aas
mov
push
call
mov
pop
mov
and
push
mov
pop
subl
ds
out
mov
call
dec
aam
inc
nop
loopne
mov
add
adc
dec
add
pushaw
mov
jne
xchg
rcrb
repnz
mov
bound
xchg
lock
and
mov
inc
mov
shlb
dec
inc
cmp
cwtl
cmp
rolb
popa
xchg
addb
outsl
jecxz
test
cld
dec
por
hlt
mov
pop
xor
movsb
or
sub
imul
push
call
cmp
fdivrl
inc
addb
jle
mov
and
cmp
das
adc
data16
fwait
push
rol
loope
add
pop
add
test
xchg
ficoml
clc
add
decl
cmp
aaa
jns
add
inc
leave
pop
cmc
cwtl
mov
pushf
xor
inc
cmp
loop
push
jbe
mov
std
add
icebp
sbb
arpl
push
xor
add
ljmp
sub
mov
pop
add
mov
xor
jae
pop
xor
pushf
or
pop
out
in
add
jge
stos
cmpl
aad
xchg
push
rolb
aad
int3
xor
xchg
lock
inc
fsubrs
addb
add
pop
pmulhuw
andl
cmp
mov
in
inc
pop
sbb
sbb
shl
mov
mov
clc
mov
add
in
je
jno
int
pop
mov
pop
cmp
pop
mov
mov
fst
or
xor
js
pop
cmp
test
insl
jg
loopne
test
cmp
add
add
js
lahf
xor
add
mov
dec
add
pop
xor
mov
pusha
add
movsl
aad
mov
sub
mov
jmp
inc
sub
loop
repnz
sbb
lcall
cmp
lock
or
adc
icebp
pop
inc
movsbl
xchg
jecxz
not
in
xchg
cmp
xchg
aam
push
mov
inc
ljmp
loopne
xor
iret
xchg
add
sub
lods
dec
mov
push
adc
add
inc
pop
add
dec
or
sahf
sbb
push
xchg
adc
pusha
add
dec
arpl
add
lods
cmc
mov
jo
lock
mov
add
hlt
lock
xlat
inc
test
sub
sub
inc
sub
xor
mov
cltd
sbb
jns
shr
loope
mov
pusha
in
add
lock
aaa
push
inc
xor
sub
iret
or
test
sub
push
fsubrp
adc
scas
xor
popa
cmp
aas
push
and
xchg
adc
js
addb
pop
mov
testl
aas
arpl
mov
pop
pop
loopne
inc
jo
push
dec
cs
add
dec
testb
shrb
shlb
push
cmp
or
dec
stc
sarb
cwtl
inc
add
aas
mov
push
arpl
fstl
imul
push
add
inc
dec
push
add
das
enter
aam
addr16
sarb
pop
pusha
cmp
mov
dec
inc
rorb
xor
dec
push
mov
jg
sbb
jle
add
xor
int
mov
call
daa
push
cmp
dec
jmp
hlt
cmp
aas
xlat
add
mov
xor
cwtl
inc
push
popf
sbb
sub
cmp
mov
add
xchg
push
pop
or
and
xchg
bound
jmp
inc
neg
push
jb
push
add
fstpl
jmp
xor
into
dec
mov
mov
ss
mov
fimuls
popf
inc
lretw
imul
mov
movsb
xchg
adc
mov
add
cld
ret
inc
mov
add
xchg
imul
out
nop
outsl
adcb
stos
pop
pop
divb
insl
sub
and
aas
inc
cmpsl
test
push
inc
dec
inc
pop
mov
jl
sti
inc
mov
jmp
clc
shlb
cmp
dec
or
adcb
cmp
and
xchg
ret
sbb
repz
sbb
mov
and
mov
pop
adc
and
add
cwtl
sub
call
cld
fmull
aad
cmp
hlt
fistpl
adc
ret
mov
pop
sub
imul
and
jmp
lahf
std
sbb
mov
dec
push
pop
pusha
jbe
add
add
fiadds
and
and
pop
mov
subb
mov
sbb
dec
xor
cmpl
cmpsl
and
mov
lea
jns
or
dec
xchg
sub
in
loopne
pop
xchg
andl
clc
add
test
cmpb
mov
cmp
rcrb
frstor
das
xchg
push
or
rorl
enter
hlt
aaa
add
cmc
stos
and
sbb
lods
add
mov
call
push
les
test
cmp
lock
push
btrl
lods
inc
jle
gs
push
movsb
bound
ret
cmp
push
mov
cs
add
jne
mov
fwait
and
mov
inc
mov
daa
xchg
push
pop
inc
jp
push
pushf
or
das
stos
out
adc
cmc
rorb
inc
popa
clc
mov
and
in
add
push
and
or
jge
aas
sub
push
xor
jo
xchg
mov
and
call
cmp
sbb
gs
into
cmp
call
or
add
push
fsubs
xor
xor
out
mov
sbb
mov
andb
pop
xchg
es
fdivl
adc
push
subl
maxps
pop
je
mov
mov
pop
das
push
aaa
add
pop
jns
sub
add
mov
or
xchg
call
ds
insl
or
pop
or
adc
cmpl
test
ja
push
ss
or
add
popa
sbb
repnz
pop
add
push
inc
mov
dec
addb
xchg
loopne
pop
add
push
out
mov
jbe
nop
inc
bound
jecxz
outsb
js
mov
pusha
or
adc
inc
test
pop
stos
inc
icebp
je
mov
pop
std
and
mov
mov
sub
enter
push
adc
pop
sbb
and
mov
mov
xor
mov
add
sahf
pop
inc
cli
mov
addb
mov
pop
push
pop
add
mov
jle
ds
pushf
cld
jne
fsubrp
xchg
inc
es
data16
lock
or
fnstcw
fiadds
xor
or
mov
mov
lods
jl
out
mov
mov
mov
in
add
dec
mov
movsb
fdivl
pop
pop
or
mov
push
orb
dec
cmc
inc
push
outsl
pop
jmp
cmp
jae
add
xchg
inc
outsb
orb
add
cmp
push
adc
sub
orb
arpl
int3
shlb
int
cld
or
sbb
addr16
add
roll
inc
xchg
and
bound
les
inc
loope
mov
mov
or
in
xor
mov
mov
fcoml
and
xorb
xchg
jecxz
pop
or
push
add
inc
xchg
adc
das
and
adc
out
jecxz
sahf
cs
mov
cmc
push
in
icebp
xor
mov
cmp
xor
xor
adc
and
in
xor
add
pop
js
pop
jp
sbb
sub
test
lret
jae
sub
dec
mov
xchg
clc
add
or
cmp
cmp
mov
cmp
arpl
jne
and
xor
call
ss
rorl
leave
lods
repz
or
fwait
mov
inc
fldt
hlt
int3
jnp
lds
stc
test
hlt
and
and
xchg
insb
jl
or
lds
orb
adcb
adc
fstpl
test
add
push
addr16
adc
cmp
xor
addl
sbb
pop
adc
add
mov
loopne
clc
mov
cmp
cmp
xor
roll
or
cwtl
daa
pusha
add
jo
and
out
xchg
sub
cmp
je
movsb
cwtl
add
jnp
or
xor
add
pop
mov
sbbb
stc
push
sbbl
sbb
roll
lods
les
test
add
outsl
cs
adc
out
call
dec
aaa
idivb
ja
call
in
clc
add
movsb
mov
mov
mov
sbb
sub
xlat
or
test
add
or
imul
outsl
mov
dec
add
jp
pop
pop
mov
mov
mov
xor
lahf
xlat
fwait
adc
imul
arpl
addr16
add
andl
and
mov
in
add
adc
xchg
mov
iret
stc
add
ds
loop,pn
xchg
pushf
mov
add
stos
lcall
xor
xchg
pop
pop
movaps
insl
pop
xor
and
cmpsl
clc
testl
mov
push
and
inc
jo
test
pop
stos
pop
add
mov
push
jmp
sbb
xor
movsb
aam
mov
xchg
push
sbb
inc
lret
loopne
or
ljmp
mov
leave
or
outsl
mov
add
lods
inc
sub
mov
mov
mov
add
mov
mov
or
test
add
and
jb
movl
sub
jl
fstsw
push
xor
mov
mov
enter
inc
movsl
xor
push
push
inc
jl
movsb
in
addl
shlb
add
cmpsb
clc
les
outsb
out
movsb
pop
cmp
mov
add
xchg
dec
mov
cmp
cmpb
pop
mov
and
mov
sbb
sbb
bound
sbbb
lock
dec
add
xchg
fbld
out
sbb
xchg
cmpb
mov
pop
ljmp
ficoml
add
lods
lds
xchg
int
decl
mov
aas
pop
ret
lcall
jmp
mov
add
shrl
enter
popf
mov
xor
adc
rolb
sbb
sahf
arpl
mov
jp
add
sub
scas
pushf
and
pop
ja
pop
jp
mov
add
dec
repz
sub
xchg
add
mov
sub
xor
cmpsb
and
repnz
mov
add
stos
push
lock
mov
mov
cmp
hlt
insl
push
adc
lods
nop
in
or
adc
outsl
test
repnz
add
push
mov
xor
add
mov
pop
pop
xor
ret
cmc
push
test
je
add
dec
mov
and
xor
mov
mov
and
das
pusha
or
fidivl
pusha
xchg
gs
xlat
add
dec
pusha
hlt
shr
pushf
xchg
adc
jns
mov
add
xchg
pop
adc
push
mov
sub
add
movsb
jmp
cmp
fdivrl
adc
mov
xchg
dec
rcrb
jmp
mov
sahf
lock
sti
addl
dec
mov
sub
sbb
jge
call
pusha
xorb
add
mov
test
shrb
sarb
push
andl
add
pop
cmp
aaa
inc
jne
data16
jp
dec
dec
sbb
stos
es
add
in
aas
call
xor
hlt
rorb
jge
popf
int3
push
add
leave
and
adc
add
push
test
inc
inc
hlt
jo
sbb
sbbl
xor
push
sbb
lahf
mov
add
int
bound
xchg
nop
js
aad
insb
push
clc
fwait
push
fisubrs
das
pop
iret
inc
in
add
or
xchg
push
push
and
pop
jo
sbb
pusha
nop
adc
insl
gs
lods
add
push
orl
mov
fsubs
lret
cmp
dec
sub
sbb
pusha
mov
jmp
incb
hlt
and
ds
in
jmp
rolb
mov
sbb
shll
repz
cmp
mov
push
xchg
xor
or
test
int
ss
inc
out
jp
adc
pop
jmp
dec
inc
daa
pop
nop
add
stos
add
xor
pusha
mov
mov
pop
stc
les
sbb
clc
inc
fwait
scas
movnti
push
adc
lea
and
add
fadds
dec
add
faddl
add
cmp
pop
cld
pop
push
mov
xchg
jno
adc
mov
lds
sahf
arpl
dec
fs
cwtl
add
inc
jge
ljmp
pusha
pop
pop
inc
imul
sub
test
jmp
mov
dec
shlb
std
subb
outsl
leave
pop
jl
call
scas
nop
jo
aad
js
add
adc
cmpsb
cmp
jg
scas
inc
fwait
adc
cmp
fdecstp
adc
add
cli
std
add
jg
push
push
xchg
jmp
mov
les
push
or
xchg
adc
cmp
add
dec
adc
rcll
adc
test
subl
pop
mov
ret
mov
inc
add
scas
cmpsb
or
add
mov
leave
in
inc
in
das
aam
mov
inc
dec
xchg
nop
adc
addl
mov
jmp
jp
mov
or
shll
lea
adc
push
add
pop
mov
out
insl
add
mov
repnz
jns
pop
shll
aam
mov
add
inc
mov
sub
jb
add
adc
sbb
add
inc
add
int
push
xchg
cwtl
add
add
mov
jns
sub
push
sub
fs
jl
sbb
lret
test
mov
cs
je
es
add
loope
pop
xchg
rorl
inc
fcompl
dec
add
test
adc
test
int
lods
enter
mov
and
push
sbb
cmp
pop
cwtl
and
insb
add
push
pop
or
insl
sub
test
hlt
xorl
xchg
push
and
push
pusha
lock
lret
nop
cmp
xchg
int
pop
movsl
jb
cwtl
clc
cltd
dec
or
pop
fdivl
sub
scas
adc
aam
aam
inc
jnp
mov
jbe
push
xor
dec
pushf
or
popa
cld
sub
out
jmp
add
lock
push
inc
cmc
fdivrl
pusha
push
popf
bound
xor
outsl
add
xor
rcl
div
mov
inc
mov
xchg
insl
addr16
retw
stc
add
sbb
movsl
rclb
outsl
cmp
xchg
or
test
mov
dec
jne
pop
andl
sub
jl
repnz
mov
mov
dec
ret
imul
and
rclb
sub
call
hlt
and
arpl
mov
jnp
movsb
loopne
adc
cs
ljmp
inc
pop
out
rol
lock
add
add
mov
mov
adc
cmp
shl
pop
aam
sub
jmp
sti
cmp
addl
insl
sbb
inc
stc
xchg
mov
add
inc
xor
nop
xchg
lcall
cmp
xor
pop
mov
dec
cmp
xor
adc
mov
scas
mov
jo
pop
imul
in
loope
xchg
adc
hlt
clc
lods
movsb
add
loop
jmp
add
inc
popa
cwtl
mov
mov
xor
testb
imul
dec
cmp
push
jp
nop
add
fwait
jno
add
xchg
in
imul
jmp
push
iret
jp
mov
and
pop
rcrb
test
je
int
js
add
cltd
push
inc
add
xchg
adc
in
add
mov
jecxz
push
mov
jg
dec
sub
loopne
addb
push
sbb
xor
in
sarb
sub
push
pop
mov
pop
frstor
popa
mov
mov
add
cmp
lahf
cmc
cmpl
add
jbe
sti
jno
ficompl
xor
shll
shlb
cmp
jl
and
outsl
loope
lahf
add
in
add
das
or
jns
xor
outsl
mov
lods
cmp
call
add
mov
dec
repz
push
sbb
pop
cltd
fildl
enter
pop
clc
push
push
or
loopne
xor
andl
adc
outsb
pop
insb
dec
fadd
pop
lret
ja
fldenvs
add
adc
push
cmp
rorb
xor
rcl
mov
cmp
arpl
popf
pop
shr
adc
fsubrs
rclb
xchg
and
mov
pusha
pop
xor
cmpsb
pop
mov
adc
add
adc
mov
mov
jb
cmc
pop
push
lcall
add
dec
inc
cld
test
stos
add
icebp
lahf
incb
pop
and
dec
cmp
je
arpl
jp
sbb
shlb
adc
dec
inc
fdivr
add
nop
xchg
cmpb
adc
mov
int3
aam
fucomip
add
mov
xchg
push
xor
cmp
popa
sub
inc
dec
cmp
pop
sbb
jns
adc
cs
mov
movsb
adc
xor
sub
cmp
pusha
and
jmp
cmp
psrld
int3
test
in
movsb
mov
dec
xor
rolb
xchg
fcompl
pop
cmpsb
sbb
and
or
loop
jno
clc
fadds
stc
shl
pushf
iret
add
test
inc
sub
stos
sub
mov
aaa
leave
add
hlt
xchg
mov
push
int
insb
clc
cld
xchg
jl
or
test
imul
mov
and
adc
cmp
mov
xor
mov
pop
fidivrs
fadds
sar
jno
pop
mov
or
mov
and
les
cwtl
add
add
movsb
dec
inc
dec
or
call
mov
add
iret
mov
enter
push
test
je
mov
mov
mov
outsb
in
das
inc
in
bound
cmp
adc
stc
test
aad
and
pop
fldl
mov
jnp
sbb
call
test
dec
mov
add
inc
lcall
shll
loop
add
std
sbb
jg
js
pop
or
mov
hlt
pop
das
cltd
call
cmpsb
jne
rorl
in
les
pop
lods
je
inc
addb
iret
es
ss
add
push
jns
dec
shlb
xchg
and
xchg
adc
rol
or
fwait
push
pusha
push
sub
cmp
ret
out
arpl
inc
inc
addr16
cmp
leave
adc
hlt
cmc
outsl
cmp
loop
pop
push
dec
lret
mov
bound
mov
cmp
add
push
fldcw
dec
add
xchg
inc
andl
add
xor
cmc
inc
mov
jo
xor
popf
rolb
mov
add
adc
push
shll
mov
xchg
mov
cmp
bound
repnz
sub
icebp
test
outsb
jne
inc
add
icebp
hlt
cmp
lcall
dec
sbb
jno
aas
pop
mov
sarb
push
push
mov
in
add
xchg
out
lret
cmp
fadds
sub
sub
repz
cmpsb
and
jbe
shl
dec
aam
mov
test
daa
gs
xchg
adc
pushf
fs
stc
out
mov
cmp
das
int
daa
xchg
and
mov
jmp
test
or
sbbl
mov
push
icebp
aam
push
orb
adc
mov
hlt
inc
mov
pop
cmp
scas
cli
inc
rcr
mov
xchg
dec
and
sbb
dec
fisubs
mov
push
aaa
or
mov
mov
pushf
mov
add
pop
paddsb
cmp
dec
xchg
xorb
sub
sub
mov
xlat
and
jl
iret
movsl
sarl
mov
insb
fsubl
xor
mov
mov
in
lock
xor
enter
sahf
inc
imul
cwtl
pop
jl
mov
inc
xchg
pop
add
out
sbb
fmuls
mov
xor
lret
add
das
mov
imul
jb
mov
aaa
orl
lock
push
insb
rorb
pop
gs
movsb
jl
clc
adc
inc
loopne
loop
add
pop
insb
cs
xor
add
inc
pushf
add
add
addr16
xor
and
notl
ss
lret
in
jp
push
cli
sub
add
loop
mov
fs
pop
cmpsb
sbb
or
xchg
in
add
push
sbb
adc
push
or
mov
stos
add
jo
test
mov
jle
xor
mov
fwait
adc
and
out
jno
pop
mov
xor
mov
lock
test
test
inc
sti
gs
dec
cmp
aam
ds
inc
push
xchg
xchg
pop
sbb
int3
xor
pop
out
and
daa
negb
sbb
push
es
push
and
mov
popf
jl
pushf
pusha
push
jne
bound
test
lods
test
les
mov
andl
addps
adc
lea
add
push
cwtl
scas
ss
pop
pop
jae
and
fistl
sub
rorb
add
add
jmp
push
mov
xorb
xor
addb
pop
sub
ret
xchg
or
test
rcrb
mov
push
out
or
add
or
mov
lods
in
shlb
fadds
inc
bound
pushf
mov
out
or
icebp
jo
test
pop
pushf
sbb
sbbl
inc
add
test
jl
dec
daa
movsb
cs
lcall
in
out
cld
fcmovnb
add
jecxz
sub
mov
lcall
dec
push
xchg
cmp
shlb
push
add
loopne
inc
jae
add
or
and
add
cmp
or
mov
xor
sbb
cmp
aaa
push
jb
jge
in
in
mov
sbb
add
inc
mov
dec
cltd
push
pop
or
pusha
fs
mov
xchg
mov
sarb
ss
mov
hlt
xchg
or
cmp
clc
in
or
mov
jb
xchg
add
sbb
test
test
loop
adcb
enter
subl
dec
enter
and
adc
xor
sub
mov
xchg
in
insb
adc
cmp
and
jl
xor
or
pop
xchg
fadds
add
add
dec
mov
cmp
mov
les
jns
pop
aas
out
repz
divb
lods
pop
inc
out
xor
or
ljmp
jo
push
cmp
cs
cld
stc
and
lock
ret
pop
sub
add
add
out
dec
rorl
push
adc
mov
insb
movsb
bound
scas
ja
icebp
cmp
cmp
sarb
les
jns
xchg
movsb
test
xor
add
jmp
or
xor
push
xchg
and
add
inc
loope
jae
push
ds
mov
popa
mov
nop
pop
inc
adcl
cmp
add
dec
inc
mov
mov
leave
mov
test
cmp
mov
adc
loopne
mov
push
test
xor
xchg
testb
add
fs
push
inc
mov
rolb
mov
mov
xor
cmpsl
and
sahf
mov
add
adc
rcrl
xchg
incl
bound
icebp
jno
or
cs
and
js
test
mov
aaa
mov
mov
xchg
adc
je
inc
mov
dec
sub
inc
fldenv
pushf
and
cmp
sti
pop
inc
adc
sbbb
add
js
xchg
xor
ficomps
mov
push
scas
and
stc
mov
push
pop
test
in
or
cltd
outsl
push
jns
add
ret
add
fwait
sub
push
ss
mov
arpl
pushf
inc
pop
add
out
xor
mov
pusha
push
push
inc
or
inc
fdivs
and
mov
xor
rclb
fmuls
faddl
add
cmpsl
stos
out
add
lret
cmc
shlb
dec
mov
icebp
dec
inc
scas
add
insl
mov
cmp
pop
xorb
nop
mov
imul
push
add
mov
xchg
sub
xchg
add
add
sbb
inc
lret
imul
fadd
scas
in
in
push
mov
jnp
out
addl
and
pushf
scas
enter
shlb
pop
sbb
repz
dec
into
imul
adc
icebp
xor
sbb
pop
and
jns
sub
adc
imul
push
push
hlt
cwtl
fldt
leave
fldcw
or
ss
pusha
and
jo
adc
inc
enter
inc
sti
mov
pop
add
loope
mov
dec
sarl
xor
fcmovne
pop
push
sbb
and
rcrl
xor
sbb
subl
push
loopne
xchg
cmp
sarb
mov
mov
mov
mov
je
cs
in
add
stos
add
and
inc
mov
sahf
das
mov
cmp
add
cmc
or
mov
xchg
imul
sub
pop
push
ret
leave
fiadds
pushf
mov
stc
ds
into
pop
mov
pop
adc
fbstp
mov
inc
test
mov
adc
lahf
mov
mov
cmp
xchg
ja
mov
inc
inc
xchg
int3
push
or
add
shrb
or
or
addl
in
adc
adc
leave
cld
and
shrl
sarb
popf
adc
fsub
add
aas
int3
ret
sbb
lock
mov
rolb
cltd
test
rcll
pop
jb
mov
cltd
inc
xchg
xchg
in
fsubl
insb
and
jmp
cli
jl
jecxz
jbe
or
push
pop
es
dec
add
call
xchg
sub
cmp
addb
push
mov
adc
dec
mov
and
jmp
adc
fsubrl
push
sbb
add
mov
fadds
lods
pusha
mov
inc
xor
ljmp
ds
xchg
sub
aas
mov
cmp
jo
add
aam
jae
dec
xchg
popa
push
adc
adc
shl
sbb
ja
sub
mov
fisttpl
sbb
lret
adc
push
fadds
imul
inc
sarl
push
jne
push
inc
pop
mov
push
lds
dec
cmp
shrb
fcoms
dec
rorb
cmc
jmp
pop
cmp
mov
inc
push
xor
jne
gs
imul
sub
add
mov
jae
rorl
filds
pop
cmpsl
pop
pop
and
add
arpl
pop
cvtps2pi
mov
shll
sub
outsb
sub
rcl
movsl
fs
add
cmp
jg
je
or
shll
loopne
mov
incl
sbb
test
sbb
lock
pop
or
icebp
aas
jmp
dec
lret
sub
inc
mov
sbb
lods
dec
sub
insb
shrl
add
mov
ret
in
sub
sbb
cmp
shl
ror
les
add
and
xchg
cmp
mov
xor
inc
fdivs
jg
adc
cld
ja
outsl
sub
sub
cltd
push
insl
pop
jns
sub
add
repnz
dec
neg
adc
mov
stc
les
add
cmc
fsubrl
pop
fmuls
fs
pushf
mov
clc
push
in
add
aad
add
and
add
imul
sub
add
push
push
enter
popa
dec
out
test
mov
mov
sbb
pushf
inc
shll
pop
data16
cmpsb
xor
repz
or
test
xor
xor
inc
push
icebp
lods
cltd
popf
add
nop
or
pop
add
push
inc
in
insl
fwait
cmpl
pop
aam
or
add
xor
xor
or
sub
xor
pusha
sti
mov
int3
add
mov
jb
sub
jp
and
lret
jg
std
pop
jae
icebp
fistpl
mov
sarb
add
push
testb
inc
adc
pusha
mov
pop
test
das
roll
je
xor
mov
add
imul
dec
les
inc
imul
push
push
sbb
vpshaq
icebp
stc
pusha
cmpsl
cwtl
jae
xchg
adc
inc
pop
lods
das
add
orl
jp
es
js
nop
lods
and
inc
sbb
sub
nop
sub
rol
inc
xor
dec
inc
push
or
roll
clc
ror
jmp
call
cmp
je
xchg
jge
push
jnp
sub
call
dec
mov
leave
adc
gs
mov
adcl
loopne
xor
int
loop
mov
jo
mov
xchg
mov
lret
inc
adc
mov
push
sbb
cmp
loopne
pop
cmp
push
jge
inc
inc
je
in
ljmp
rol
sbb
add
xor
pop
movb
out
js
rcll
or
cmp
mov
dec
movsb
fcompl
lret
and
add
xchg
and
lea
mov
or
adc
push
js
in
and
cmc
stc
adc
pusha
cwtl
fdivl
mov
and
bound
cltd
test
rorb
test
inc
adc
inc
or
push
js
pusha
je
std
mov
xchg
inc
add
mov
je
idiv
mov
imul
add
add
dec
testb
jnp
es
gs
movsb
fisubl
sbb
outsb
xchg
mov
js
inc
push
ret
ljmp
xchg
xor
into
jns
orl
dec
dec
sub
pushf
and
das
cwtl
adc
xor
sbb
adc
mov
or
data16
rcr
pop
jbe
mov
daa
mov
enter
add
push
and
mov
and
adc
inc
sub
arpl
pop
inc
js
lods
into
dec
cwtl
xchg
and
push
fistpll
stc
out
test
lret
test
outsl
nop
imul
into
add
call
out
incl
pop
push
repnz
in
lods
int
call
mov
or
stos
data16
arpl
inc
shll
in
sub
aad
jb
xchg
in
testl
add
add
and
or
mov
in
repnz
and
jb
pop
mov
fs
or
pop
pop
jge
int3
cmpsl
dec
mov
test
fiaddl
inc
jp
mov
je
add
mov
or
mov
pop
fsub
lcall
sub
jmp
or
cmc
dec
mov
add
dec
arpl
cmp
push
and
jle
test
push
out
push
mov
dec
jl
adc
cs
jg
sbb
lods
sbb
pop
xchg
xorb
fildl
or
jbe
daa
mov
pop
fmuls
and
daa
aam
test
repnz
adc
aad
stc
js
hlt
jl
sbb
fldl
cmc
add
mov
inc
enter
test
sbb
jnp
hlt
icebp
jns
scas
das
filds
insb
or
jnp
and
cmpb
in
sarb
addb
loopne
cmp
inc
sub
xchg
cmp
shll
in
jmp
adc
js
jnp
xor
mov
pop
push
scas
jo
dec
xchg
or
imul
clc
fmuls
ret
add
dec
ja
push
dec
push
insb
mov
data16
les
add
cmc
fcoml
add
dec
pop
mov
clc
pop
push
dec
imul
ffree
cli
push
add
mov
aad
in
aas
and
and
hlt
inc
sub
pop
fsubl
pop
mov
rcrb
and
dec
jl
ret
adc
mov
jno
mov
test
hlt
and
xor
jl
insb
add
mov
sarl
aas
dec
ret
sbb
repz
add
jns
aam
cmpsb
jp
and
mov
scas
pusha
outsl
imul
sar
jmp
jno
shrb
loope
xor
pop
inc
aaa
dec
mov
es
adc
aad
add
bound
add
lret
or
orb
mov
cmp
sbb
sbb
sub
inc
jle
sbb
xor
inc
add
cmc
cmp
inc
cmpl
sbb
and
lret
mov
mov
arpl
mov
in
cmp
or
shlb
es
jmp
pop
imul
loope
movsl
ja
sub
sub
xor
xchg
add
inc
ficomps
or
push
mov
push
push
into
mov
aad
add
xor
gs
adc
inc
jnp
mov
insl
nop
mov
test
in
mov
sahf
jl
pop
jg
adc
pop
adc
pop
cvtps2pi
shlb
dec
xchg
xor
adc
add
sbb
sub
int3
dec
lods
imul
ss
out
std
sarb
sbb
add
mov
cmpsb
lea
dec
dec
sbb
lcall
sub
jp
scas
fs
or
ret
jmp
sbb
mov
rorb
les
fiaddl
xchg
xchg
mov
addl
mov
sub
cmp
jbe
and
js
lret
js
lock
and
mov
fimuls
xlat
add
out
dec
adc
add
shlb
mov
pop
mov
in
dec
ds
jo
sub
push
js
shll
out
lock
sbb
push
xchg
sub
add
pop
bound
cmp
cltd
dec
mov
test
aam
xchg
dec
out
daa
mov
pop
cmp
sub
fdiv
lret
mov
or
imul
test
in
daa
add
test
add
jne
out
jle
les
push
cmp
mov
lret
xchg
jns
pop
out
in
notl
repnz
add
sbb
cmpsb
in
or
jl
add
ljmp
loope
push
dec
xchg
mov
sbb
adc
and
inc
xor
rcl
hlt
jo
add
push
cmp
scas
xor
add
pop
add
pushf
push
add
push
inc
rcll
cmpsb
cmp
adc
scas
ret
sahf
sbb
es
or
adc
push
xchg
dec
push
out
add
xor
out
stos
sbb
mov
sbb
cmp
addl
outsb
roll
dec
dec
inc
jns
mov
dec
add
rcll
cmc
repz
daa
fwait
pusha
idivb
mov
xchg
jmp
pop
pop
in
test
push
xlat
fiadds
cmp
dec
rclb
or
xchg
les
adc
cwtl
shll
dec
xor
imul
mov
and
fsubrs
ss
loopne
pop
xor
dec
sbb
hlt
jmp
cmp
pop
mov
adc
cltd
xor
inc
test
lock
dec
inc
jbe
nop
out
rcll
cmovbe
mov
adc
rep
les
inc
mov
loope
stos
inc
cmp
lds
xorl
fldcw
xor
and
add
mov
lcall
mov
push
cmpsb
fistpl
in
das
cltd
mov
add
aam
xchg
and
inc
sbb
add
aam
mov
lret
mov
sahf
add
and
add
popf
and
loop
xor
outsb
xor
add
add
and
andb
call
or
imul
or
in
push
sub
std
push
adc
or
cmp
scas
cmc
sbbb
loopne
or
dec
into
loopne
cwtl
xchg
popa
mov
cmc
adc
or
push
sub
jae
add
mov
pop
dec
sbb
pop
push
int3
jno
out
adc
pop
mov
adc
cmpsl
adc
int
xchg
inc
mov
add
and
mov
cmp
clc
pushf
inc
or
add
add
pop
fistl
mov
push
add
adc
mov
mov
pop
cmp
and
pop
jo
push
iret
add
pop
dec
orb
loopne
adc
pop
popa
or
test
or
repz
pop
adc
pop
imul
cmp
popa
add
es
fs
xchg
orl
dec
mov
add
sbb
rcrb
lods
cmp
rol
or
push
hlt
mov
push
push
lods
popf
sbb
outsb
jmp
rolb
jb
hlt
sarb
ljmp
sbb
pop
mov
adc
int3
fwait
sub
shll
adc
sbb
repnz
ljmp
push
js
mov
mov
orl
xor
test
add
fistpll
mov
sarl
pop
pop
sub
cmp
mov
ret
jge
shrb
orb
movl
out
push
andb
jo
sbb
mov
dec
mov
shr
mov
push
sub
repnz
adc
mov
xchg
cwtl
out
cmp
enter
pushl
cs
jo
sbb
outsb
add
rol
icebp
mov
loope
mov
testb
js
jmp
mov
arpl
inc
mov
fadd
inc
inc
adcb
or
mov
rolb
out
jp
add
inc
daa
enter
sub
and
add
and
mov
rcl
cltd
cld
xchg
mov
mov
jno
test
inc
jg
jp
or
dec
data16
loopne
push
inc
dec
rcl
test
cmc
ja
push
call
xchg
add
xor
fnstcw
data16
js
add
repz
rcl
mov
or
and
pop
insl
mov
test
and
push
mov
xchg
jmp
les
mov
call
sbb
ret
pop
adc
push
es
js,pt
fwait
adc
loopne
dec
aam
push
sbb
add
pop
inc
inc
call
and
fs
dec
sbb
mov
xchg
xchg
fxch
push
jnp
lods
or
and
pop
adc
je
cmp
inc
or
add
push
rorb
xor
cmp
xor
dec
add
orb
adc
scas
in
and
pop
push
iret
cwtl
xor
call
dec
add
push
push
or
mov
push
les
out
inc
inc
lds
repnz
jo
push
add
add
fdivl
ffree
mov
cltd
sub
add
inc
lret
xor
sub
inc
push
mov
js
imul
ljmp
mov
ja
nop
add
out
jb
xchg
mov
dec
mov
jmp
add
fsts
jge
inc
push
or
enter
sub
jecxz
fs
dec
jmp
lcall
xor
push
ss
stos
inc
mov
pop
add
push
es
int
mov
add
shr
jmp
mov
push
pushf
pop
add
popa
mov
inc
dec
in
mov
xchg
out
arpl
add
mov
add
fmull
ds
xchg
inc
adc
push
daa
adc
adc
mov
inc
jo
cltd
and
add
mov
mov
add
pop
addr16
clc
mov
adc
jmp
or
rorb
les
pusha
cmp
scas
xor
call
rcrl
mov
fucom
add
ret
das
cmp
dec
push
xchg
add
sbb
jge
mov
es
add
or
outsb
and
xchg
push
dec
inc
movsb
sub
mov
xchg
inc
fldenv
and
and
inc
xchg
sahf
lods
inc
shlb
int3
jo
ficoms
xchg
mov
and
test
shll
loopne
cwtl
dec
add
in
xchg
insl
pushf
jo
and
sub
clc
lods
pop
ds
mov
jnp
imul
cmpsb
xchg
sbb
movsb
dec
and
mov
mov
add
inc
mov
outsb
add
dec
fiadds
xor
jg
jnp
mov
mov
mov
std
push
sbb
pop
add
inc
scas
roll
pop
js
in
gs
mov
add
daa
shll
sub
in
shl
add
in
dec
add
out
out
sbb
inc
pop
add
xchg
imul
sqrtps
sub
adc
sbb
nop
add
mov
adc
sbb
sub
mov
add
aas
add
inc
stos
xor
add
jne
mov
roll
inc
adc
loop
add
fstl
icebp
push
adc
adc
push
pop
out
or
inc
loope
int3
xor
aam
idivl
insb
rolb
push
mov
in
hlt
add
add
jb
subb
aam
add
sbb
cld
add
mov
lea
ret
daa
rclb
xchg
mov
bound
mov
mov
addl
les
decl
nop
cmpsb
out
jge
ret
ljmp
pop
mov
jle
test
stc
incl
add
adc
in
data16
push
jnp
and
fadds
cwtl
sbb
hlt
dec
push
mov
ja
nop
mov
add
dec
int
push
sbbl
popa
in
xchg
es
pop
jge
adc
add
int3
cmpl
rolb
jae
and
pop
add
mov
adc
bound
pop
push
push
addb
popa
pop
shl
and
add
cmp
test
xor
sbb
shlb
and
adc
mov
fsubl
jns
add
jo
mov
pop
jb
mov
pop
pusha
pop
mov
aad
and
xor
test
mov
sar
cmp
loopne
ffreep
and
mov
fcmovnu
mov
add
mov
or
adc
in
pop
enter
loopne
add
int3
xor
scas
addr16
push
push
and
add
les
or
sbb
jns
adc
les
xor
inc
push
in
stc
push
cmp
or
sbb
fistpll
and
xchg
inc
inc
faddp
push
test
bound
push
loop
or
mov
aam
or
and
and
mov
add
aad
mov
jno
enter
ljmp
push
shrb
je
dec
add
rcrb
repnz
and
inc
ss
cwtl
data16
es
push
jg
sbb
popf
add
cmp
sbb
dec
push
add
add
or
pusha
out
mov
adc
mov
sbb
loopne
stos
loope
dec
add
lds
jl
jecxz
fdivs
lret
or
mov
icebp
xor
js
xlat
inc
stos
mov
xchg
and
jl
add
aam
sub
push
dec
adc
adc
in
pop
xor
les
jnp
and
mov
rorb
sbb
lret
mov
and
je
xchg
jne
mov
repz
enter
add
and
jbe
dec
addb
dec
adc
pop
adc
shrl
cltd
and
add
lds
push
and
or
mov
leave
inc
inc
ret
jl
sub
and
mov
and
add
cld
addb
data16
loopne
jnp
mov
dec
mov
lret
mov
sub
ret
add
mov
mov
pop
push
out
push
mov
pop
jae
add
lock
insb
adc
es
or
inc
mov
push
lret
fstps
iret
or
popl
mov
add
or
xchg
pop
add
out
adc
dec
and
dec
or
sub
in
add
add
xchg
pusha
inc
adc
or
rorb
jle
or
in
adc
adcb
ret
cmp
mov
into
add
mov
push
push
popf
loope
mov
repnz
inc
jo
js
clc
mov
ret
xor
jno
add
es
or
lods
mov
int3
xor
add
mov
idivb
pusha
dec
nop
mov
mov
shl
sti
or
push
jle
mov
adc
faddl
adc
adc
add
sbb
cmp
ja
sub
daa
cwtl
mov
test
rolb
repz
enter
arpl
cmpsb
test
sub
mov
rol
sub
les
xor
std
aad
add
lds
cmpsl
inc
rorb
adc
in
shll
cmp
mov
dec
mov
push
aaa
push
addr16
outsl
popa
push
or
enter
or
mov
jo
cwtl
dec
pop
ffree
pusha
or
inc
lds
loop
test
movsl
jno
mov
adc
dec
lods
or
jno
inc
ret
push
loopne
sbb
fsubr
cmpb
sub
add
repnz
clc
icebp
sub
jo
pop
dec
add
nop
jle
adc
mov
mov
or
dec
es
pop
js
inc
jle
mov
add
pop
pop
rcrb
scas
or
jp
dec
jnp
fmul
hlt
insb
fmull
xlat
out
clc
sub
inc
pushf
or
loopne
mov
lcall
dec
mov
inc
loope
cli
or
stos
pop
or
xchg
sbb
sarl
xchg
push
punpcklbw
or
cwtl
or
or
addb
jge
add
enter
nop
aam
jno
and
add
fwait
xor
shrb
pusha
add
and
add
aas
pop
and
shlb
mov
add
mov
xchg
push
pop
pop
stos
xchg
xor
fwait
and
in
loopne
cmp
in
addb
push
lods
inc
pop
flds
fimuls
cmpsl
adc
sub
mov
cli
push
add
fisubrl
mov
mov
mov
call
dec
ret
fs
lock
dec
ficoms
dec
dec
test
loopne
lock
mov
pop
cmp
mov
movsb
dec
sbb
add
and
rorl
and
and
pop
sysret
aam
daa
in
mov
popa
arpl
in
add
and
cs
sub
addr16
mov
fbstp
scas
or
adc
and
adc
mov
mov
fisubl
mov
dec
rcrb
pop
in
mov
addr16
gs
and
and
xor
jge
out
cmp
cli
push
and
dec
ds
and
mov
daa
push
mov
aad
fsts
cmp
or
adc
mov
jo
popa
mov
adc
cmpb
cmc
mov
push
lahf
lea
pop
test
rcl
sub
fcomps
jo
or
nop
adc
push
push
test
mov
test
std
cmp
cld
addl
jp
xchg
xorb
nop
cmp
cmp
and
cmp
adc
xchg
es
pop
pushf
push
push
testb
fdiv
or
in
jbe
sub
and
cmc
arpl
jle
pop
inc
leave
pavgw
inc
scas
dec
ss
fisttpl
sbb
scas
jmp
ljmp
push
or
scas
rclb
push
dec
hlt
pop
cmp
sub
movsb
xchg
sbb
cmp
xlat
adc
cmp
push
pop
cmp
repnz
push
sbb
fwait
pusha
add
repz
xchg
and
enter
pop
add
imul
jmp
or
scas
jb
fistpll
notb
pop
or
push
or
xlat
movsb
inc
shll
dec
add
cmpsb
inc
aam
ds
mov
add
loopne
inc
mov
and
adc
sbbl
jo
addr16
inc
lock
xor
pusha
pusha
daa
pop
dec
push
in
pop
addr16
dec
mov
push
out
jbe
pop
nop
popa
std
and
adc
mov
mov
cmp
xchg
ret
std
add
mov
clc
mov
andb
je
push
inc
pop
repnz
fucom
hlt
pop
mov
adc
call
cmpsl
add
pop
sub
rclb
pop
test
aas
or
add
ss
sarl
and
cmpl
pusha
cmc
cltd
xlat
and
cmpsb
jbe
xor
xchg
pop
lret
fdiv
faddl
mov
mov
jns
push
sti
jp
jl
add
mov
pop
cld
jmp
cld
jge
mov
mov
push
loope
mov
xchg
idivb
lds
mov
or
in
andb
mov
pop
jae
mov
add
aam
aas
int3
add
mov
pop
mov
mov
aad
mov
push
sti
js
js
das
cs
in
mulb
dec
arpl
or
bound
xor
add
cmp
push
xchg
aad
lea
lock
jbe
pop
fldenv
out
mov
fwait
or
mov
add
sbb
ror
pop
mov
push
addr16
add
mov
push
pop
and
and
add
sbb
fisubl
orl
adc
mov
dec
test
mov
or
push
rcr
test
add
dec
and
add
cmc
mov
or
ljmp
pop
sub
lret
fstl
insl
inc
aad
pop
fldenv
mov
movb
mov
out
add
mov
add
das
cmp
es
stc
mov
pusha
add
repz
fdivrs
add
test
sub
test
mov
in
adc
fwait
test
sbb
in
inc
cmp
push
jp
add
mov
dec
push
out
lods
xchg
aam
shll
or
add
pop
pop
mov
idivb
or
out
mov
dec
sbb
or
push
popf
fldcw
add
fs
mov
mov
add
jne
int
rol
xchg
mov
xlat
stos
push
add
xor
or
jns
xchg
leave
clc
fcom
jbe
and
mov
or
in
or
mov
push
lock
pop
sarb
add
movsl
sub
dec
pop
es
mov
fucomp
in
dec
dec
inc
push
in
jbe
jo
fisttps
dec
inc
xchg
mov
adc
faddp
cmpb
add
xchg
fnsave
add
sti
clc
jmp
loopne
ljmp
fwait
add
js
imul
ret
pushf
sub
outsl
cmpb
add
into
outsb
int
addr16
inc
cwtl
out
xchg
dec
or
xchg
lahf
mov
pop
adc
movsb
cmp
cld
pop
loopne
sub
cmp
inc
add
test
aas
push
jb
into
rolb
enter
int
cmp
mov
cwtl
lods
add
mov
loop
pop
mov
loopne
mov
insb
inc
add
sbb
adc
inc
add
cmp
pop
push
add
adc
jl
sub
jg
adc
lret
outsb
filds
fsubs
pop
sub
loopne
rcrb
dec
push
mov
adc
xchg
push
out
js
jnp
pop
mov
test
les
mov
roll
jp
daa
pop
inc
push
lods
xor
cmp
jb
lods
push
mov
inc
mov
sbb
inc
or
cmp
push
sub
adc
shlb
adc
fldl
mov
sbb
xchg
add
adc
xor
mov
xchg
inc
roll
pop
add
pushf
in
aad
xchg
sub
sbb
add
jecxz
addl
mov
dec
je
adc
call
sub
pop
mov
mov
xchg
nop
push
loopne
jge
js
cmovns
dec
movsb
inc
or
mov
sbb
jp
jp
adc
movlps
adc
adc
mov
shlb
out
jg
pop
jp
adc
adc
inc
jb
sbbb
ret
shlb
mov
lcall
ret
mov
in
inc
jo
out
mov
add
pop
jbe
xchg
rclb
push
cmp
shl
mov
mov
add
xchg
cmp
dec
push
and
jnp
sbb
fisubl
lret
mov
fisubrs
sbb
rol
inc
adc
pop
xchg
orb
dec
loop
add
mov
imul
arpl
dec
scas
fadds
or
daa
aam
loop
movw
pop
call
idivb
add
lea
inc
inc
or
adc
pop
rorb
fsubrl
adc
jle
mov
test
sub
push
add
cmp
add
aaa
xor
jae
or
fisttpl
mov
cwtl
addb
add
pusha
mov
add
push
xor
push
or
idivl
adc
add
push
mulb
out
mov
sub
andb
dec
jnp
xor
push
sbb
xor
and
imul
dec
push
pop
adc
sarb
and
aas
imul
jb
mov
sub
movsl
or
add
jnp
mov
mov
dec
xor
pop
pop
je
inc
faddl
movsb
inc
gs
test
shll
enter
cmp
add
lahf
outsb
adc
add
sbb
in
cmpsl
pusha
mov
pusha
nop
int3
add
xor
jo
and
and
cmp
sub
jp
xor
popf
pop
lock
add
sub
or
roll
xor
or
das
fucomp
or
cmpsb
loope
out
div
pusha
or
pop
push
add
iret
call
add
and
dec
xchg
add
jb
mov
dec
fidivrl
xchg
insl
rcrb
jno
dec
mov
add
out
cmp
xchg
adc
loopne
popa
adc
jle
mov
flds
add
mov
pop
test
inc
rolb
add
bound
addr16
ret
or
idiv
cli
pop
add
loop
or
fdivs
out
or
add
pop
or
aad
adc
inc
fsubl
xchg
jmp
push
adc
lcall
dec
int
cmpsl
add
jmp
call
hlt
mov
pusha
and
les
and
lcall
adc
sub
push
jp
or
dec
std
aad
bound
dec
mov
out
jb
fldenv
aas
bound
cmpsl
or
inc
sbb
shrl
aad
mov
repz
xchg
dec
adc
loope
pop
jl
mov
fidivrl
fstps
and
popa
push
fdiv
movsl
jp
es
aam
lcall
mov
xchg
mov
sbb
fmul
mov
out
jnp
pop
fs
and
es
ljmp
daa
or
add
data16
lock
push
xor
mov
lock
adc
data16
loopne
inc
bound
add
insl
aad
outsl
push
das
push
scas
addb
xchg
jecxz
adc
mov
iret
test
xchg
mov
mov
adc
dec
sub
ret
mov
push
gs
or
loopne
mov
add
test
scas
out
mov
pop
outsl
mov
idivb
adc
cmpb
and
adc
push
dec
imul
fdivl
sbb
dec
jle
rclb
adc
lret
in
dec
enter
fcoml
inc
leave
add
and
gs
xor
sahf
shlb
test
pop
jbe
fdivrl
inc
add
mov
jmp
xchg
scas
jle
sbb
xchg
in
call
or
mov
cmp
jg
adc
pop
sub
pop
and
test
adc
mov
jns
test
sub
cmp
adc
adc
push
push
fmuls
cmpsb
faddl
add
leave
mov
call
hlt
pop
mov
test
out
mov
cmc
pop
dec
dec
enter
adc
subb
sub
push
sub
dec
cmp
add
gs
mov
adc
jge
add
fsubl
inc
jle
rcrb
mov
pop
add
push
hlt
loop
add
pcmpeqw
add
shll
aam
jbe
add
jo
out
testb
dec
aad
mov
pop
pusha
add
dec
repz
inc
cmp
push
fsubl
fsts
inc
xchg
loopne
adc
or
adc
movsl
jnp
inc
sbb
sbb
bnd
xor
add
arpl
inc
in
lock
loopne
cmp
cmc
add
add
rolb
adcb
enter
add
shrl
cmc
adc
sti
or
pusha
std
je
push
lds
add
outsb
mov
rolb
xchg
nop
ret
pop
mov
in
push
fcomps
bound
sub
ficomps
ffree
pop
int
inc
sbb
push
jae
fmulp
xchg
fnstenv
xchg
out
faddl
rolb
aam
lret
sbb
int3
js
mov
lock
push
add
daa
test
add
pushl
pop
xchg
xchg
jmp
and
fiaddl
sub
cmp
mov
xor
rolb
hlt
je
push
icebp
jo
dec
enter
sbb
add
sarb
fucomp
sbb
in
cmp
out
cs
les
call
shll
fmulp
cmpb
add
inc
or
mov
repnz
xor
icebp
aad
inc
xchg
add
mov
push
mov
sahf
mov
or
movsb
add
or
and
pop
loope
repnz
jo
cmpsb
mov
in
mov
adc
add
mov
add
test
rolb
inc
in
pop
sub
out
add
ljmp
mov
push
jns
ret
xlat
xor
lds
and
mov
sub
in
mov
mov
push
arpl
cmp
add
and
or
pop
adc
fstpt
push
pop
lret
arpl
dec
daa
enter
jle
clc
add
lods
push
bound
ficoms
jno
cmp
jge
repnz
frstor
ja
call
add
inc
pop
jns
ror
mov
sub
and
push
or
mov
out
jbe
lock
rolb
inc
pusha
jbe
shrb
add
movsl
out
fsubl
enter
sbb
mov
fildll
cmc
xor
xchg
push
sbb
mov
or
sub
mov
cmpl
mov
loop
add
jbe
fdivl
testl
push
pop
xchg
and
add
add
ja
out
setne
and
add
adc
gs
outsb
mov
addl
sarb
cmp
mov
xchg
subb
enter
sahf
call
frstor
push
sbb
jnp
push
sarb
dec
jbe
enter
pusha
sbbb
lahf
sbb
les
pop
ja
and
or
fcompl
inc
test
loop
mov
jo
inc
xchg
adc
enter
or
adc
adc
movsb
mov
es
insb
add
aad
out
pop
inc
ftst
jb
and
popf
lock
cltd
pop
repnz
pusha
dec
addr16
rclb
xchg
in
ret
push
adc
ret
mov
in
or
mov
mov
dec
in
mov
add
movb
ret
pop
outsb
loope
movsl
add
jmp
insl
fmuls
inc
or
inc
adc
aad
add
idivl
daa
flds
pop
jmp
mov
fsubr
flds
mov
repnz
push
and
cmpsl
mov
and
nop
aam
dec
mov
add
jns
mov
inc
inc
lock
mov
fimuls
rolb
cli
sahf
pop
pop
andb
mov
mov
dec
add
jbe
adc
xchg
pop
add
clc
dec
rolb
and
jmp
mov
dec
add
repnz
or
or
add
test
or
adc
repz
mov
rclb
push
rolb
cli
test
ljmp
fcmovu
daa
jne
scas
dec
push
push
sti
pop
or
pusha
lahf
andl
ret
testl
fiadds
push
cmp
iret
pop
cmc
ljmp
jb
inc
cld
jge
enter
mov
mov
xor
lret
jae
add
pusha
add
and
in
cld
push
sub
or
cwtl
mov
scas
xchg
out
sbb
incl
loope
sub
cmpsb
orl
out
stos
jnp
or
test
jmp
sbb
push
rolb
clc
arpl
sbb
test
and
enter
jl
push
out
cwtl
add
sbb
jo
mov
xchg
push
fs
xor
out
cmp
add
mov
shrl
add
testb
or
jns
rolb
adc
stc
nop
lds
pop
popa
add
jmp
jge
scas
lcall
stos
jbe
cmp
ljmp
adc
repz
add
dec
into
push
fmuls
test
movsb
cmpb
add
aad
add
jle
cli
sti
lcall
jno
jbe
lock
add
jo
loopne
repnz
cmpsl
inc
add
sub
cwtl
add
flds
xchg
xlat
adc
cwtl
and
sub
and
pop
test
xor
popf
add
add
shrb
or
and
notb
jmp
sti
xchg
loopne
call
and
pop
out
pop
add
mov
push
pop
adc
lret
shl
xor
loope
or
in
aaa
push
repz
je
scas
subl
shlb
inc
testl
mov
pop
push
aad
pushf
or
das
les
pop
out
shl
push
xchg
hlt
add
add
sub
adc
aaa
add
insb
pop
adc
jl
add
lods
shl
stos
xor
or
loop
sub
aam
aad
add
jecxz
xor
rcrb
cld
sbb
add
sbb
movsl
push
sbb
repz
das
stos
inc
adc
add
pusha
dec
loope
push
lds
addb
xor
add
jecxz
dec
mov
sbb
cmc
jae
dec
pop
xorb
xlat
scas
int3
in
pop
imul
cld
mov
jae
adc
je
jnp
inc
and
push
fistl
sbbb
inc
lock
rcll
cmc
cwtl
inc
xor
addr16
push
jmp
sbb
xor
jp
adc
fsubr
stc
pop
scas
dec
sub
pop
add
sbb
xchg
ljmp
xchg
pop
fldl
in
cmc
xchg
push
pusha
sub
mov
add
mov
adc
lock
addl
mov
nop
je
lea
das
cmp
leave
adc
dec
popa
mov
xor
arpl
sbb
pop
in
mov
add
add
out
dec
adc
cmp
fstpl
test
inc
adc
or
sbb
xor
push
lret
push
cmp
push
dec
push
add
mov
pusha
dec
inc
outsl
adc
add
mov
cmp
test
mov
or
fsubl
pop
repz
ss
cltd
cmp
inc
lahf
mov
pop
stos
adc
cmpsb
xchg
adc
test
ds
cmp
icebp
mov
jmp
jle
xor
inc
push
fucomp
add
loope
push
add
add
mov
pop
stc
add
loopne
mov
cs
loopne
dec
xor
cmp
and
add
dec
mov
add
mov
dec
or
mov
mov
cwtl
movsb
mov
mov
out
sbbb
xor
jb
jg
and
orl
rolb
mov
pusha
in
jns
test
jecxz
jo
into
pop
or
lret
loop
enter
sarb
push
sub
sub
iret
shlb
cmc
aaa
test
cmp
add
imul
jl
pusha
loop
popa
out
pop
arpl
push
fs
icebp
in
repz
add
cmp
xor
push
pop
popa
ljmp
aad
mov
cmc
cmp
adc
leave
enter
mov
add
cli
push
aas
mul
push
xlat
add
sti
cmpsl
in
bound
push
jns
pusha
inc
sub
sbb
sbb
or
sub
push
add
aam
sub
mov
mov
xor
inc
pop
adcb
loopne
mov
mov
inc
js
dec
push
gs
add
mov
push
ficompl
lea
inc
jmp
mov
mov
dec
push
cmp
enter
nop
in
inc
xor
orl
add
out
cli
push
dec
mov
xchg
sub
jge
xor
out
pop
sahf
leave
push
dec
js
adc
mov
popa
jp
adc
popf
push
sub
push
int3
pop
jge
and
rcl
test
cwtl
jecxz
push
mov
pusha
cmp
adc
xlat
and
and
and
clc
xchg
jecxz
adc
inc
les
setg
test
mov
call
xor
inc
adc
enter
xorl
gs
cltd
add
out
and
xchg
imul
sbb
adc
push
int3
test
add
and
cwtl
pop
mov
cmpsb
add
cmpb
das
movsb
mov
movsb
pusha
xor
inc
ja
enter
dec
sub
add
shrl
push
cmp
pushf
mov
roll
or
cltd
or
into
lret
lods
scas
sti
popa
cmp
inc
aas
dec
add
hlt
and
sbb
sub
into
fsubr
jge
pop
sbb
aam
xchg
mov
fsubl
add
or
mov
mov
sub
mov
movsb
jg
mov
pop
adc
sub
cs
rorb
clc
bound
and
arpl
push
mov
rolb
push
loop
in
faddl
add
adc
sub
jl
stos
lock
scas
xor
jle
pop
sbb
and
pop
fdivl
add
test
sub
in
mov
xor
adc
ljmp
sub
sub
dec
addr16
dec
jnp
scas
xchg
test
cmc
ljmp
shrl
add
fcom
cmp
or
adc
cmp
inc
clc
pop
add
testb
mov
dec
mov
sbbl
adc
push
push
adc
add
and
fsubrl
hlt
push
jecxz
pop
in
and
cld
add
xchg
add
pusha
add
push
jbe
test
push
add
cmp
test
cltd
and
adc
mov
or
mov
add
lds
sub
inc
clc
xchg
xor
ss
mov
loopne
adc
mov
shll
push
cmpsb
fcompl
xchg
jl
pop
je
add
sar
adc
lcall
mov
icebp
into
sub
xor
inc
jecxz
nop
jo
test
sbb
outsb
or
in
or
or
xchg
enter
push
mov
lcall
push
std
jnp
mov
int3
jg
add
jno
movsl
fdivs
add
inc
loope
xlat
and
push
add
mov
stos
add
stc
cmp
push
inc
fsubr
mov
test
sbb
push
cmp
addb
int3
jo
jns
add
imul
jmp
addr16
and
addb
addr16
cmp
mov
inc
hlt
in
adc
xchg
stos
add
cmp
mov
add
pop
enter
imul
insb
pop
xlat
or
push
call
jnp
xor
mov
lock
nop
mov
outsb
dec
add
aad
js
int
fcmovnbe
add
jmp
in
cmpsl
repnz
push
xor
rclb
mov
push
nop
push
pushf
cmp
push
xlat
mov
add
mov
push
movsb
and
pop
add
and
pop
jnp
and
sub
mov
or
insl
adc
lods
mov
xchg
dec
paddw
das
mov
xlat
xchg
and
testb
mov
dec
cwtl
xchg
xor
loopne
sub
and
mov
shlb
cmc
sahf
xor
test
adc
mov
mov
pop
pushf
xchg
subb
movhps
cmp
cmpsl
add
inc
cmp
sub
push
mov
arpl
lods
pop
add
xor
push
sub
pop
inc
int
shrb
das
jb
enter
js
add
lcall
cli
cld
or
adc
test
inc
and
pop
adc
int3
add
arpl
push
clc
imul
xchg
repnz
xor
fbstp
es
xchg
aaa
and
and
int
aam
and
cmp
sarb
xor
test
call
and
addr16
mov
test
mov
rolb
mov
add
sub
aad
mov
movsb
int3
xchg
add
add
movsb
mov
clc
xchg
nop
jp
adc
xchg
and
outsb
pop
sbb
xor
sbb
add
mov
add
repnz
mov
pusha
jmp
ja
sar
popl
xor
mov
rclb
push
sub
mov
adc
je
sub
pop
adc
xchg
push
add
mov
mov
loope
adc
push
jg
add
xor
xchg
jo
sbb
cmp
js
in
test
and
pop
icebp
adc
addb
jbe
sub
aad
cmp
lret
push
sti
dec
push
xchg
and
xlat
fmuls
add
imul
out
in
jecxz
adc
xchg
dec
nop
cmc
mov
and
xchg
in
std
cli
loop
push
mov
rcl
dec
sub
loopne
test
mov
int
add
leave
andl
lret
les
adc
enter
cmpsb
push
push
mov
add
dec
mull
sar
int3
pop
nop
inc
nop
or
rorb
and
cmpsb
push
pop
adc
push
lea
lds
sbb
add
add
sub
sbb
and
add
dec
ss
les
xor
fdivl
and
inc
pop
mov
loop
add
test
cmp
mov
mov
add
add
test
xchg
js
loope
rcrb
cwtl
dec
xorb
shrb
popa
and
add
ljmp
xchg
adc
xchg
or
adc
sub
int
and
mov
inc
ja
sbb
cwtl
push
and
push
cmpsb
and
ja
ljmp
int
loope
imul
mov
xlat
adc
shlb
out
sub
test
xchg
pop
mov
jb
les
sbb
pop
sub
pop
enter
iret
stos
inc
aam
pushf
das
lcall
imul
bound
cld
xchg
and
shlb
pop
adc
inc
clc
jb
adc
mov
movsb
mov
insl
nop
int
cmpsl
pushf
std
jo
pop
cmp
movsl
loopne
sbb
mov
cltd
sbb
inc
xor
loope
outsb
addr16
test
xor
inc
add
notl
mov
int
nop
aaa
sbb
pop
push
cmp
incl
lea
cs
call
add
popa
movsb
insl
push
add
mov
test
mov
fadds
aas
push
fiaddl
pushf
mov
arpl
mov
scas
pop
or
lock
aas
jns
rorl
je
pop
cmp
sarb
and
jne
cmp
add
jnp
test
in
dec
pop
lock
sub
pop
sub
in
inc
mov
loope
mov
and
add
dec
sbb
out
xor
enter
sbb
pop
mov
popf
sbb
add
imul
cmp
push
clc
add
push
jno
sbb
sub
or
inc
jg
cmpb
enter
call
out
add
and
mov
and
pop
or
push
icebp
push
fisttpl
sub
out
add
inc
xor
mov
push
mov
or
sbb
int
dec
adc
incb
pop
mov
int
sub
fstpt
into
sub
adc
xlat
mov
xchg
dec
inc
sti
adc
adc
add
sub
sub
cmp
add
jns
in
mov
fstl
mov
dec
add
push
add
dec
subb
push
mov
fsts
mov
dec
mov
js
add
add
cltd
add
adc
inc
imul
sub
sub
clc
aam
cld
mov
adc
aad
stos
add
mov
loop
xchg
les
das
adc
inc
and
cltd
and
andb
fnstsw
jb
add
jnp
rolb
pop
push
sub
adc
orb
push
test
push
add
movsl
sub
xor
cwtl
sbb
cmp
add
pusha
testb
gs
dec
je
imul
mov
addr16
iret
ror
push
test
aaa
lcall
fistps
add
mov
add
add
jne
cs
jmp
mov
dec
movsb
xor
test
add
xor
cwtl
add
xchg
bound
push
insb
adc
andb
or
xchg
sahf
enter
adc
add
dec
xchg
enter
pop
mov
inc
jmp
repz
popa
add
jns
dec
ja
push
test
int
repnz
hlt
or
mov
jle
jl
fldcw
enter
sbb
sbb
add
and
sbb
mov
je
in
stos
rcll
mov
add
stc
rolb
and
mov
or
sub
fsubrs
push
jecxz
aaa
push
add
rorl
pop
hlt
adc
das
loopne
xchg
jbe
xor
or
add
inc
das
sub
dec
ss
sbb
nop
add
imul
mov
xor
mov
data16
or
pop
pop
cs
xchg
or
and
aam
shlb
addps
int3
lods
aam
js
shrb
push
cmp
ds
pop
pop
adc
ss
xor
add
inc
pop
ds
sub
adcb
aad
add
loope
repnz
xchg
mov
leave
mov
test
add
sti
xchg
movsb
xor
shl
sub
dec
mov
pop
xlat
pop
mov
lds
or
add
mov
add
inc
mov
add
push
adc
rorb
sub
jo
loope
and
and
ficoml
dec
stos
or
shr
movsl
push
add
insl
sbb
mov
mov
testl
and
lods
in
test
inc
inc
mov
push
test
inc
mov
arpl
in
out
lret
jp
jp
add
aam
add
jecxz
jecxz
mov
add
add
xchg
and
jp
or
out
lods
xchg
jno
or
jl
fcmovb
das
nop
rolb
mov
dec
mov
ljmp
add
in
sub
sub
pop
stos
inc
cld
add
loope
sbb
push
cmp
add
and
adc
xor
xor
cmp
addl
mov
push
aas
adc
je
outsb
add
test
bound
sti
aas
mov
bnd
add
xor
aaa
cmp
cmp
inc
sub
and
xor
std
xchg
addr16
mov
mov
xor
fs
mov
cs
pushf
pusha
and
int
imul
adc
int3
dec
add
push
jecxz
int3
pusha
inc
push
popa
nop
sub
scas
xchg
and
clc
and
cmp
dec
lods
scas
mov
add
stc
outsb
jo
loopne
xchg
movsl
int
pusha
loope
cmp
pop
mov
inc
sbb
adc
pushf
and
fidivs
testb
fst
stc
mov
jnp
push
mov
or
push
cld
sarb
inc
pop
pop
jo
pushf
adc
stos
lods
xor
loopne
jb
test
adcb
fistpll
push
js
xchg
es
or
in
popa
mov
push
xchg
sub
push
ja
clc
cmpsl
sbb
cwtl
adc
xchg
aad
out
pop
or
add
testb
pop
pushf
or
sbb
in
jno
sahf
mov
inc
push
xor
xor
shlb
inc
pushf
pushf
popa
adc
add
mov
test
xor
nop
mov
cwtl
in
mov
out
cmp
mov
jmp
add
mov
xor
sbb
fs
add
jmp
sub
push
jl
and
icebp
add
cli
lahf
push
sub
cmpsl
rcl
mov
adc
jo
pop
sbb
inc
jmp
add
mov
adc
nop
ficoms
push
lock
fsubs
adc
sub
scas
lock
dec
mov
cmpsb
push
cltd
js
add
mov
xorl
xchg
shrb
loope
add
jecxz
sti
mov
mov
movsb
cmp
or
loope
sub
daa
imul
aas
mov
inc
cmp
int
pop
push
loop
jns
cmc
call
adc
inc
xchg
cmpsl
leave
jecxz
movsb
adc
aaa
idiv
add
sub
insl
fisttps
scas
enter
test
cmc
or
pop
repz
icebp
inc
jns
cwtl
cmp
repnz
repz
inc
jae
push
push
shlb
push
test
in
jns
std
add
push
mov
adc
clc
xchg
mov
shlb
out
jl
jecxz
pop
ds
and
mov
cmp
or
shlb
pop
add
xchg
dec
jns
and
mov
jl
sti
test
pushf
sbb
enter
push
push
enter
popa
cmp
sbb
into
sub
xor
imul
fdivl
decb
loope
cltd
cmc
jo
and
jbe
cmp
cmp
lock
jle
sbb
ss
fsub
dec
data16
adc
enter
das
add
mov
lahf
add
jb
mov
stos
test
loopne
insb
js
cmpsb
adc
addr16
inc
add
test
aas
popa
mov
sub
push
das
pop
loope
cmp
xlat
or
repnz
mov
dec
inc
add
popa
cmp
jns
lds
or
adc
mov
sub
xchg
test
lahf
adc
push
hlt
cmp
andb
adc
mov
cs
add
xor
mov
and
xchg
frstor
xor
mov
add
push
sbb
mov
xchg
sbb
fs
add
add
xor
pusha
loopne
mov
or
pop
inc
jo
cmpsb
add
out
sub
push
mov
fcoml
sbb
push
xchg
subb
inc
ljmp
pop
cmp
pop
icebp
sbb
cs
aaa
test
je
inc
fmuls
out
mov
and
push
loopne
add
mov
dec
mov
add
gs
imul
push
jl
mov
nop
xlat
fsts
and
das
in
add
inc
pop
orl
xlat
add
fpatan
xor
pop
jne
mov
enter
arpl
lahf
in
fstpl
pop
pop
xchg
or
fcoml
jle
xor
idivb
adc
es
mov
dec
loope
cmp
ss
in
inc
imul
fsubl
lock
inc
lret
fldln2
mov
pushf
add
fbld
mov
adc
test
adc
loopne
sub
mov
pusha
or
cmp
test
sub
adc
es
std
sub
sbb
cmc
pop
and
call
popf
aas
mov
and
xchg
test
mov
lock
mov
dec
mov
inc
add
add
aaa
ret
adc
add
ss
daa
out
test
and
or
add
mov
add
xor
jle
ret
pop
jno
push
jo
insl
pop
insb
je
push
xor
sbb
ss
sbb
xor
lods
and
sub
je
sub
pop
and
mov
ror
in
cmp
inc
cmp
xor
cmp
outsb
cwtl
inc
xlat
mov
iret
add
push
jl
sbb
or
dec
stos
push
js
lret
dec
popf
push
or
ds
pushf
xchg
add
lret
add
add
cmpsb
fsubrs
jo
movl
xchg
jmp
mov
jnp
subl
insb
add
fbstp
dec
fcompl
add
idivl
call
test
out
add
inc
fsubrs
adc
lret
adc
aaa
cli
ja
jns
push
sti
xchg
scas
add
mov
sbb
lds
dec
out
dec
repnz
rcrb
int3
mov
pop
das
jo
outsl
dec
movl
mov
cmp
fwait
loopne
xor
add
lods
outsb
cli
xor
lock
push
data16
fnstcw
and
sub
adc
xor
inc
divb
mov
aam
in
mov
fcomip
xor
xor
mov
aaa
pop
cmp
add
or
psubsb
add
nop
pop
lret
cmp
sbbl
sahf
leave
push
hlt
dec
test
xchg
imul
nop
in
icebp
sub
or
pop
test
jo
xchg
pop
mov
popa
fidivs
add
test
inc
cmp
sub
pusha
sbb
mov
aam
add
and
sub
cmp
bound
ret
push
in
cwtl
cmpsl
inc
jne
ds
adc
mov
popf
mov
mov
aaa
cmpl
jp
pop
mov
mov
sbb
js
hlt
dec
add
arpl
popa
add
sahf
sub
mov
test
je
cwtl
pusha
or
rcr
add
and
add
jg
jo
addb
mov
imul
add
or
mov
call
sahf
xor
cmpsb
ds
dec
and
outsb
jno
add
jb
cwtl
xor
cld
mov
pop
pusha
lret
and
mov
movb
cmp
mov
cmc
das
daa
xlat
out
gs
sub
andl
in
movsb
jae
cld
xor
sahf
and
add
cli
sbb
into
add
or
push
ret
sub
mov
movsl
cmp
jo
cmp
add
lock
sbb
dec
out
add
pusha
out
shrl
pusha
mov
cmp
in
shl
sar
jg
add
inc
loope
rclb
push
ljmp
jg
and
xchg
add
add
or
add
mov
or
and
test
loop
adc
mov
jno
mov
sahf
jle
jmp
add
mov
add
push
jnp
sahf
imul
out
outsl
orb
outsb
out
loope
or
in
shr
add
std
dec
pop
fimuls
fistpl
adc
rcll
fsubrl
inc
out
adc
outsb
push
push
ficoml
xor
push
aad
mov
popf
cmp
dec
incb
jne
stc
lcall
add
in
push
jb
mov
pop
xchg
sbbb
test
add
inc
neg
movl
add
cmp
insl
ss
loop
add
lods
jl
punpcklbw
add
xchg
cli
jecxz
leave
js
add
jmp
mov
mov
pop
cld
push
mov
out
inc
test
mov
or
sub
in
and
roll
cltd
jns
adc
push
sbb
push
xor
jne
loopne
xor
sahf
mov
mov
push
xor
pop
or
pop
int
je
mov
pop
inc
pop
jp
adc
xchg
dec
subb
adcb
test
movsb
add
inc
dec
xchg
test
mov
jle
repz
jmp
sub
and
push
in
jl
addr16
jmp
pop
inc
fcomp
imul
pop
test
fistpl
cld
adc
pusha
mov
or
into
ja
pop
shrb
jmp
repnz
jns
jge
inc
xor
sbb
adc
inc
insl
cld
lock
or
clc
movsb
adc
cmp
and
addl
dec
loop
sahf
add
dec
mov
and
lds
pop
sub
idivb
ljmp
out
call
cmp
rcl
in
pop
mov
int3
add
mov
loop
add
xor
mov
shl
fldt
inc
aaa
shlb
add
repnz
add
in
adc
je
add
mov
or
add
scas
fs
add
int3
xchg
es
in
enter
jmp
addr16
nop
movsb
sbb
or
add
scas
pop
outsl
add
xchg
fadd
leave
jbe
add
and
push
jns
add
jmp
adc
add
jp
jecxz
push
out
jo
lods
cmp
add
mov
jmp
push
pop
cmc
out
rolb
out
pop
xor
or
ret
adc
lret
dec
repnz
add
mov
rcrl
dec
mov
scas
pop
aam
enter
int
fwait
and
xlat
add
pop
cmp
fildl
push
lods
add
stos
lcall
dec
dec
test
inc
add
cmc
lods
scas
cmp
pop
add
call
test
inc
int3
fiaddl
add
sub
xchg
sahf
mov
mov
ja
sbb
test
xlat
jae
subl
dec
inc
cld
loope
inc
or
fprem1
jo
mov
hlt
adc
repz
sbb
repnz
jne
jp
repz
jb
or
pop
xchg
stc
movsl
adcb
icebp
incb
lcall
xor
loopne
add
lock
pusha
add
add
je
test
outsl
lcall
xor
movsl
faddl
inc
xor
mov
aaa
add
out
xchg
movsl
sarb
pop
cld
arpl
shrl
jno
outsb
repz
cmp
es
les
add
inc
imull
cmp
cmp
push
daa
jno
xor
fwait
add
cmpsb
sbb
adcl
mov
xor
sbb
rcll
push
pop
add
jb
sub
movsl
and
mov
gs
test
aaa
xchg
popf
jl
sbb
pop
in
stc
jae
dec
aam
add
stos
mov
add
pusha
xor
pop
mov
pop
pusha
jno
add
jne
test
sub
jne
or
xlat
and
push
cmpsb
pop
push
mov
cmpb
scas
fistps
idivb
or
mov
xchg
cwtl
xor
add
fdivrl
movb
in
xorb
jle
dec
jle
add
rclb
inc
add
sbb
push
add
fnsave
sbb
mov
and
movsb
sahf
aas
xchg
pop
cmp
fdivrl
jo
fs
xchg
push
sbb
add
or
scas
cmpsl
shrb
leave
pop
sbb
and
jecxz
sub
daa
mov
add
push
mov
fildl
jb
bnd
add
mov
inc
int3
sbb
jecxz
and
xor
or
xchg
cmp
in
ja
iret
lock
js
incl
push
loope
insb
add
lcall
add
mov
movsl
inc
add
dec
add
jbe
add
ret
cmp
popf
inc
pop
testb
rcr
pop
dec
add
nop
popa
insl
outsl
add
mov
fstpt
in
inc
mov
push
lds
mov
adc
add
jae
or
mov
outsb
cmovl
xchg
add
int3
cmp
pop
loope
sbb
push
xchg
mov
leave
clc
xlat
mov
cmpl
fwait
add
mov
add
and
xchg
push
lock
lods
add
std
fmul
add
pop
cli
lods
jl
insb
popa
adc
add
scas
add
lret
mov
and
push
lock
add
inc
mov
pop
mov
test
iret
daa
and
sbbb
dec
adc
mov
inc
ljmp
jne
push
dec
stos
vmread
test
adc
loop
add
mov
enter
je
out
ror
xchg
repz
ja
xor
add
shlb
pop
mov
lahf
mov
scas
add
sahf
mov
popf
sub
and
sub
inc
movsb
xchg
sbb
lods
fcoms
test
shlb
mov
mov
test
xor
cmp
jecxz
xchg
add
insb
daa
jo
fwait
mov
add
lock
roll
adc
sbb
and
jl
mov
scas
pop
mov
inc
movsb
or
mov
test
cmpsl
data16
adcb
adc
inc
pop
xchg
ljmp
mov
incl
fstps
add
push
jb
cmp
sub
and
daa
andb
lds
adc
cmpsl
sub
jmp
addb
leave
pop
add
sub
nop
adc
fnstenv
sar
jne
push
addr16
call
sbb
xchg
fnstenv
inc
in
mov
dec
aam
or
cmp
adc
inc
add
adc
fcoms
popf
shrb
in
bound
add
push
neg
sub
cmpsb
loope
clc
push
xor
fwait
aam
rolb
cld
into
daa
stos
lahf
ds
add
cmp
fsub
cmpb
repz
cmp
lods
and
movsl
shrb
cmpsl
adc
mov
sbb
lds
shrb
add
mov
jae
push
mov
and
jl
jp
mov
inc
pusha
lods
ja
lea
enter
rclb
mov
ss
and
mov
mov
inc
add
xchg
inc
in
test
adc
hlt
push
add
xlat
das
mov
addb
or
or
add
shrl
jno
jl
xor
or
mov
xor
add
cmp
mov
nop
xchg
fdivrs
xlat
fimuls
jae
ja
mov
call
loopne
mov
push
xchg
loop
bound
inc
sbb
add
popl
call
lock
out
dec
xlat
add
imul
pusha
add
movb
adcl
cmp
jno
add
lods
sar
inc
mov
and
sbb
add
dec
mov
mov
mov
sbb
xor
orb
pusha
push
dec
add
add
gs
add
pop
in
cli
icebp
movsl
push
add
sti
stc
data16
or
add
ss
sbb
mov
add
aam
mov
add
lods
jp
lret
push
xor
add
cmp
mov
jae
xor
and
push
add
cs
in
add
nop
int
push
jl
add
jb
push
add
testb
or
and
add
add
jge
add
pop
loopne
enter
add
add
std
rorb
mov
mov
lahf
mov
test
xchg
add
pushf
cwtl
push
dec
xor
add
mov
shll
inc
add
roll
xor
sub
push
out
leave
jmp
dec
adcl
mov
mov
out
lret
ret
nop
push
ret
mov
bound
test
and
xchg
js
roll
and
add
add
push
aad
cltd
cmp
dec
lret
sub
pop
or
cmp
lods
loope
fwait
sbb
push
jp
lret
push
add
dec
dec
add
rolb
add
xchg
insl
ficoms
sbb
dec
aam
sbb
insb
lret
or
mov
sbbb
ltr
rorb
xor
jns
les
add
sarl
sbb
pusha
sahf
mov
incl
orl
push
sbb
popf
and
jl
fwait
mov
push
inc
push
pushf
jns
push
jne
add
in
dec
and
cmp
sbb
repz
insl
addr16
jmp
lret
shrb
xchg
daa
loopne
js
sub
mov
cmp
jne
fs
jle
lock
sub
fists
push
add
xor
lret
aaa
mov
scas
js
dec
bound
add
std
or
mov
cmp
aaa
add
in
rcl
jne
dec
fistpll
and
fwait
in
std
insb
pop
cli
or
mov
add
leave
ja
inc
lahf
mov
xlat
cmp
sbb
ljmp
fwait
pop
adc
mov
sarl
sub
nop
or
add
ds
add
dec
cltd
das
adc
push
jo
cmpsl
inc
jo
add
scas
mov
imul
push
nop
push
xchg
loop
in
or
mov
mov
mov
inc
icebp
inc
repz
rolb
int3
faddl
jge
push
mov
out
std
outsb
push
shlb
test
loop
outsl
inc
mulb
data16
jge
stos
dec
sti
pop
std
mov
dec
in
add
fisttps
shlb
dec
pop
scas
and
add
cmp
jmp
xor
push
mov
loop
call
ror
iret
pop
insb
in
pop
cld
out
test
rolb
sbb
push
xchg
call
mov
or
imul
outsb
int
rcrl
push
or
push
mov
cs
subb
push
inc
cmc
add
jae
lods
xor
dec
and
fcmovnbe
imul
iret
test
sbb
lahf
fwait
jl
xchg
mov
rorb
or
xor
add
add
or
push
es
xor
loopne
mov
fnstsw
or
ds
mov
lahf
sub
cmpsl
pop
mov
sub
adcb
inc
sbb
imul
ljmp
mov
je
sarl
xor
add
mov
out
fistpll
mov
testl
mov
ss
push
add
xchg
mov
insb
ljmp
mov
mov
cmp
xchg
add
push
jp
rcll
xlat
and
push
test
fdivl
sti
xor
pop
or
ret
xchg
jns
lock
inc
add
fdivr
inc
or
in
xor
and
mov
sbb
in
add
std
cmp
jb
add
sbb
jg
and
inc
add
inc
pop
push
or
cltd
add
push
sbb
inc
fsts
pop
add
xchg
inc
sub
and
sbb
ljmp
imul
imul
clc
shrb
dec
jns
sbb
sub
sbb
adc
inc
cmp
cmp
sub
add
je
iret
mov
xor
add
outsb
or
jne
ja
pop
add
lcall
add
mov
xor
insb
mov
push
and
add
adc
pop
sub
test
mov
adc
pop
adc
push
sbb
jb
cwtl
and
or
cmp
xor
test
addb
pop
hlt
sarl
cmc
jo
stos
mov
insb
popf
clc
xor
and
das
daa
repz
arpl
sub
inc
sbb
mov
lahf
popf
rolb
jb
mov
pop
push
cmpsl
mov
rcrl
adc
sbb
jle
sbb
and
push
cmp
adc
add
sti
lret
mov
fidivrs
sbb
cmp
push
arpl
fmul
nop
in
adc
xchg
ja
data16
call
pop
scas
ds
pop
addb
or
pusha
or
hlt
jnp
pop
pushf
in
test
jg
adc
xchg
dec
add
and
dec
add
add
jbe
pop
dec
cmp
cmpsl
cmp
ret
fucom
shl
lods
add
and
int
mov
xchg
orb
test
repz
fsubl
por
push
fistpll
add
push
inc
clc
pop
add
outsl
push
in
sbb
popf
js
mov
js
mov
mov
add
inc
outsl
add
xchg
xorl
jecxz
jae
add
loop
popa
iret
push
push
mov
adc
rclb
addr16
dec
jno
inc
pop
xor
add
add
outsl
add
jecxz
cld
add
mov
mov
filds
mov
add
mov
shll
xor
adc
cld
pop
push
hlt
dec
inc
add
xor
inc
cmp
rclb
adc
mov
add
nop
aad
dec
add
call
mov
jns
inc
jbe
je
scas
push
enter
and
add
cvtps2pi
add
ficoml
loope
insl
add
inc
mov
jp
dec
test
filds
cmp
call
mov
ljmp
sub
in
push
sub
inc
daa
mov
cmp
adc
and
fldl2e
les
and
cmp
push
shlb
roll
mov
pusha
cmp
das
add
cmp
mov
movsb
add
push
test
clc
bsf
dec
cmp
push
jnp
mov
pop
push
mov
inc
in
dec
jo
loopne
mov
cs
dec
mov
add
adc
lods
cmpsl
add
push
xchg
sahf
mov
nop
sub
add
scas
pop
insl
pop
outsb
xchg
aas
movb
xchg
mov
ficompl
sub
testl
pop
scas
lea
fildll
fldl
femms
addr16
test
mov
shlb
mov
in
mov
and
insb
and
lods
js
or
sub
jnp
adcb
pop
adc
sbbb
and
loop
push
and
stc
fs
add
test
jmp
pop
loopne
dec
insb
add
inc
xor
adc
add
sub
into
xchg
cwtl
aad
int3
jp
push
mov
out
push
nop
push
mov
js
and
pushf
loopne
add
jno
pop
inc
adc
xor
pusha
mov
xadd
es
mov
cmpb
xlat
jbe,pt
addb
fisubrs
jmp
inc
fs
add
sub
adc
out
lret
stos
repz
adc
dec
lods
cmp
add
out
adc
in
add
push
pop
jecxz
push
outsb
or
add
jbe
inc
mov
push
cmp
xor
call
xchg
loope
sub
int
sbb
imul
or
dec
add
ss
scas
adc
cmpsb
kortestw
mov
lea
push
push
imul
adc
lahf
mov
outsl
jno
inc
mov
es
add
test
and
sti
mov
jmp
shlb
aas
jbe
repnz
sbb
inc
jnp
fstpt
arpl
adc
pusha
mov
xor
dec
es
inc
adc
dec
rcll
cmp
in
cmp
ljmp
lahf
addr16
jmp
jg
pop
clc
incb
pop
test
scas
pop
add
repz
jae
repnz
mov
jbe
cmp
add
scas
fisttpll
add
push
push
loopne
adc
sub
xor
sbb
dec
in
adc
push
push
inc
lock
cwtl
mov
sub
ljmp
sub
mov
sub
cmp
movl
inc
adc
adcb
pushf
dec
js
out
add
aas
stos
test
jle,pt
cmp
jl
loope
push
mov
mov
sub
adc
inc
xor
add
pop
aas
jge
inc
cmp
cs
roll
fs
jmp
jb
mov
lcall
fabs
outsl
wrmsr
jo
sbb
pop
pop
stos
cwtl
repnz
inc
lea
xor
sub
lock
icebp
cmp
mov
jl
sub
and
pop
mov
or
and
add
fcomps
xchg
add
pop
sub
mov
cmpsb
ja
cmp
add
test
xchg
roll
outsb
adc
sbb
jo
add
nop
inc
enter
inc
dec
push
rcll
inc
rolw
sub
imul
fisttpl
pop
sub
mov
call
or
adcl
fsubrp
xchg
cmp
test
xchg
cltd
nop
dec
rclb
add
decb
mov
or
jp
ret
div
inc
and
roll
push
mov
adc
and
add
xor
fwait
add
out
in
je
out
outsb
jne
xchg
aas
fiaddl
cmp
mov
adc
sbb
stos
pop
mov
mov
xor
pushf
push
pop
sbb
nop
add
insl
xor
gs
adcb
pop
pop
jnp
jecxz
sub
xchg
pusha
jp
fildl
hlt
sahf
cld
and
and
mov
or
sbb
addr16
mov
fmull
je,pt
sbb
rcrl
mov
push
jg
es
add
xchg
mov
clc
or
push
xorb
out
xor
push
iret
cmpsb
or
andl
jp
test
push
add
jl
stc
jmp
or
add
fsubs
cwtl
pop
push
insl
add
and
push
mov
je
ljmp
lret
les
roll
decb
adc
imul
inc
adc
pop
dec
add
fstps
sub
sbb
pop
push
add
pop
dec
add
add
outsl
mov
aaa
pop
fldln2
nop
sub
test
sahf
inc
sti
mov
dec
dec
inc
mov
and
in
loope
adcl
adc
mov
inc
push
adc
jmp
test
xor
mov
addr16
pusha
mov
bnd
lock
and
sti
xchg
add
movsb
test
and
mov
sub
out
push
xchg
and
jmp
imul
negb
sbb
push
popf
cmp
aad
mov
mov
pop
push
rolb
add
into
xor
sub
testb
dec
xchg
jbe
add
vinsertf64x2
lcall
iret
mov
sub
push
or
mov
cs
add
popa
je
jno
mov
add
dec
jnp
sbb
test
cmp
cmp
popl
stc
lret
sbb
adc
or
add
call
fdiv
mov
add
shll
repnz
lahf
or
mov
push
in
sbb
enter
xchg
or
int
push
lcall
cmp
push
stos
add
sub
cmc
hlt
sbb
jge
arpl
add
mov
pop
iret
cmp
and
nop
cmp
push
xor
lret
push
js,pn
jne
mov
xor
pusha
inc
mov
add
sbb
cmp
dec
inc
pop
add
jnp
mov
push
popf
jmp
adc
and
lock
dec
and
out
movsl
mov
idivl
mov
outsl
cmp
push
dec
adc
xchg
lcall
mov
in
sbb
test
outsb
fisttpll
push
jg
sub
add
inc
dec
mov
add
adc
push
add
pop
stos
adc
cld
cmp
mov
mov
mov
cmpsl
add
out
test
fsts
mov
pop
push
aas
xchg
daa
adc
cmp
or
mov
je
test
add
mov
lock
add
outsb
sbb
jg
adc
pop
insl
lea
mul
rcrb
mul
scas
fsubrl
pushf
enter
imul
and
flds
or
push
mov
push
mov
mov
mov
setle
xor
mov
ss
jmp
mov
andb
fidivl
je
outsl
sbb
test
jae
xchg
roll
roll
orb
cmp
xchg
inc
cmp
mov
add
data16
enter
std
jl
lcall
ds
adc
daa
mov
add
icebp
mov
flds
fisubl
mov
sbb
cmp
inc
cmp
ffree
nop
cmp
sbbl
clc
das
mov
fsts
cmp
dec
add
jns
and
jb
clc
xor
add
add
rcl
int3
cmp
sub
sar
addr16
aaa
push
dec
in
mov
add
dec
add
enter
push
callw
xor
sbb
inc
sbb
pop
cmp
sbbb
sbb
js
sbb
xchg
shll
sbb
jae
and
or
std
test
addb
mov
xchg
or
inc
sub
sbb
add
imul
loopne
movsb
outsb
add
clc
mov
add
out
outsl
fistpll
das
pop
fwait
aas
inc
stos
sbb
add
mov
movsb
xor
andl
lahf
lock
add
jle
adc
int
cltd
leave
adc
addl
xor
push
jp
sbb
pop
add
push
test
pop
adc
jo
mov
movq
adc
clc
add
jnp
dec
out
fwait
mov
xor
dec
insb
adc
cmp
movsl
pop
pop
add
iret
push
out
cmp
sub
fstp
pop
or
cmp
sub
popf
mov
cwtl
xor
loopne
xorb
adc
mov
mov
add
fldl
pop
sbb
inc
jnp
mov
xchg
xor
nop
jge
mov
sbbb
mov
enter
pop
aaa
ljmp
neg
lds
imul
pop
cs
cmp
movsl
adc
in
add
sub
add
int
bound
pop
lea
ret
js
ja
mov
mov
call
sbb
add
push
mov
dec
or
pop
and
or
mov
push
sbb
add
lahf
pop
mov
jmp
mov
inc
push
cmp
sbb
call
loop
or
js
jno,pn
sub
frstor
add
stos
add
insb
adc
cmp
jle
xor
add
dec
jl
ret
jbe
push
loopne
in
sub
js
mov
pop
add
movb
cld
mov
xchg
add
mov
test
lahf
cmp
es
std
or
sub
and
js
clc
mov
pushf
lods
int3
sbb
cmpb
nop
mov
xor
cmp
jge
push
repnz
xchg
jle
movsl
flds
xchg
test
lods
or
mov
mov
or
test
mov
xchg
mov
add
sahf
push
xchg
std
add
push
xor
mov
pop
mov
cltd
push
xor
and
loopne
aas
pop
xchg
mov
mov
loope
test
push
mov
fldenv
inc
xor
outsl
bound
xchg
cwtl
xchg
mov
fmull
insl
sbb
adc
jmp
xchg
or
sub
fistps
push
or
mov
scas
add
sbb
add
cli
push
mov
ljmp
add
cmp
add
add
mov
fdivrl
push
pop
xchg
pop
cmp
cwtl
inc
decb
cmp
add
push
inc
test
addb
pushl
jo
inc
sbb
not
inc
dec
inc
or
add
mov
inc
ret
mov
cmp
pop
mov
mov
stc
stos
aas
lods
inc
mov
mov
add
mov
dec
push
inc
int3
imul
mov
inc
pop
add
fs
test
out
jge
adc
jne
push
add
add
add
add
and
xor
cmc
jg
add
cmp
jo
jo
cwtl
in
xchg
mov
add
push
shlb
pop
mov
rolb
lods
lahf
rol
xor
sbb
and
or
ljmp
std
inc
das
rcrl
xchg
es
or
push
push
nop
jb
add
add
rcl
mov
push
cmpsb
xor
int3
jo
cmpsl
in
adc
and
xor
or
movsl
mov
loopne
imul
imul
sahf
add
push
cmp
aad
in
lods
add
int
dec
jb
sbb
scas
sbb
push
jo
pop
mov
mov
roll
xchg
cwtl
jmp
cltd
push
push
jb
push
das
pop
cmp
faddp
cmp
add
addr16
add
test
fsubrl
iret
inc
lcall
push
add
dec
shl
int
scas
cld
adc
add
dec
test
mov
push
aas
inc
int3
fmulp
fsubl
mov
mov
das
add
sbb
cmp
xor
adc
adc
negb
iret
cli
jb
lret
cmp
xlat
repz
push
add
fsubl
cmp
aam
pop
add
jle
das
pop
outsb
jecxz
cwtl
movsl
add
and
sub
fistps
out
pop
lret
rol
shl
sbb
dec
sub
dec
add
ljmp
fsubl
clc
fstpt
cmpb
fiaddl
mov
nop
bound
mov
lock
push
and
add
sub
jl
xor
repz
leave
jns
xchg
add
sbb
movl
lods
lock
aam
repnz
xchg
xor
inc
neg
add
fsubp
jp
ret
cmovbe
nop
int3
sub
call
sbb
add
pop
sbb
xchg
cwtl
stos
mov
int3
mov
js
std
mov
mov
xor
enter
xor
dec
xcrypt-ecb
cmpsl
dec
cmp
filds
insl
scas
and
in
xchg
adc
add
or
ja
popf
das
add
xchg
sbb
adc
jecxz
pop
jns
add
push
dec
mulb
jecxz
add
and
inc
push
jae
lods
xor
push
jp
or
out
push
push
add
mov
xor
cs
add
in
adc
aaa
add
cmp
push
jecxz
cltd
add
xor
imull
adc
and
mov
mov
mov
std
test
pop
push
add
mov
push
push
mov
testl
fstps
pop
je
ss
js
pop
add
in
pop
and
lds
adc
insb
insb
adc
jae
insl
lret
xchg
hlt
lea
faddl
and
and
add
ror
rcr
ret
rclb
insl
scas
add
inc
mov
inc
iret
adc
fwait
adc
leave
orb
add
out
pop
in
lods
imul
rolb
test
and
add
addr16
sti
idivl
sbb
sbb
js
xchg
add
std
ds
fistps
lds
jle
clc
loopne
add
push
mov
cmp
mov
or
fisubs
mov
subl
int3
adcb
xor
add
dec
pop
cmp
jnp
add
mov
fistps
out
hlt
es
stc
movsb
pop
enter
push
aaa
in
inc
adc
mov
ljmp
mov
lret
push
pop
out
jl
out
xor
rclb
jge
adc
xchg
mov
push
mov
xor
xor
mov
fcoml
insb
push
xor
mov
mov
es
mov
in
xchg
and
iret
notb
add
mov
push
cmpsb
add
aas
xor
cmp
pop
dec
sahf
fwait
data16
stos
pop
gs
adc
mov
pop
cmc
shl
ret
add
int
pop
loope
out
add
push
add
inc
mov
sub
out
dec
add
mov
lods
mov
hlt
dec
in
add
dec
cld
add
int
scas
add
push
ficompl
andl
inc
leave
repz
mov
inc
add
shrl
outsb
std
add
arpl
jns
sbb
movsl
test
jmp
je
testl
mov
orb
xorl
sub
add
mov
incb
mov
jne
pop
adc
cmp
pop
test
dec
jae
jo
fs
cmp
popf
adcb
cmp
cmp
mov
add
or
fidivs
cmp
jne
jb
add
jecxz
loop
sarl
lcall
shlb
mov
pop
sbb
push
adc
inc
dec
test
jmp
js
rcr
loope
movsb
loopne
fildl
jbe
adc
xor
mov
clc
cli
testl
push
sbb
jb
mov
sti
add
sub
jae
inc
pusha
andb
mov
addb
pop
jo
mov
add
xor
and
xorb
shrb
fmull
inc
jo
bound
or
rolb
fstpt
sti
or
push
pop
push
push
ret
lret
add
cwtl
jns
shlb
pop
add
lods
mov
or
loope
or
sub
mov
incb
nop
sbb
insb
cmpsb
stc
add
sub
mov
lcall
ficomps
jg
push
inc
inc
dec
or
sbb
mov
add
insl
or
repnz
sbb
outsl
lock
in
mov
inc
out
das
mov
pop
addb
orl
add
call
and
dec
push
sbb
movb
or
push
nop
push
ljmp
sub
pop
dec
push
inc
jmp
loopne
inc
sti
enter
xlat
insb
cmp
leave
addb
push
push
cs
data16
dec
sbb
test
mov
add
xor
ljmp
sar
jne
mul
lahf
mov
xchg
dec
sbb
sbbb
subb
mov
jno
addb
mov
hlt
ss
out
mov
dec
dec
xor
pop
movsl
push
xchg
fmul
je
shlb
repz
add
mov
pop
aam
mov
cmp
popf
dec
ss
pop
test
repnz
incl
in
xor
add
test
ret
sbb
jg
stos
push
repnz
xor
cmp
cmp
lods
enter
in
add
popf
outsl
sbb
cwtl
fdivrs
adc
add
flds
jns
sub
cld
pop
dec
clc
lsl
sbb
out
mov
movsl
push
mov
decb
js
push
xchg
jne
nop
xchg
mov
push
mov
cmp
ljmp
or
pop
dec
cs
fcoms
sub
lea
inc
adc
sahf
adc
adcb
jns
pop
jmp
xchg
push
ljmp
mov
jge
add
sbb
repnz
shrl
js
and
dec
fists
or
xor
pop
popa
or
ds
sbb
add
mov
or
fisubrs
fisubl
das
rorb
fisttpl
scas
add
xor
add
add
push
lret
movsl
aas
jecxz
adc
jle
stos
lock
int
orl
inc
mov
mov
nop
dec
lahf
into
mov
testb
stos
mov
mov
pushf
std
or
es
sub
sbbl
mov
mov
inc
movsl
sbb
add
add
or
mov
jmp
cmpsb
test
aas
mov
xor
aas
inc
scas
int3
add
mov
add
or
out
pop
mov
add
xchg
lods
les
xchg
add
jbe
dec
xchg
jns
rcl
or
inc
cmp
dec
sub
cmp
mov
mov
call
jmp
jl
add
sbb
testl
inc
mov
aam
pop
add
inc
imul
loopne
mov
add
sbb
ret
mov
imulb
fildl
jo
jbe
pop
push
add
movsb
add
enter
cmpsb
out
push
fsub
popa
pop
push
pop
dec
outsb
andl
fmul
inc
add
call
bound
lret
testb
and
and
pop
gs
in
xlat
inc
leave
add
fcomps
lock
cmp
imul
popa
roll
dec
movsl
insb
orl
xchg
aaa
and
scas
aas
lock
inc
add
nop
clc
mov
cmp
or
sub
adc
adc
loope
fs
pop
rol
and
sbbb
in
dec
jno
out
mov
jnp
ds
add
shrb
in
in
sbb
adc
jmp
xchg
lret
pop
lock
out
outsb
movsl
sbb
cmp
adc
imul
or
in
mov
je
inc
cmp
imulb
fisttpl
or
fcom
and
push
cmovs
xor
cmp
loope
orb
dec
inc
and
xor
jns
ret
mov
outsb
sbb
pop
jne
gs
sahf
jmp
pusha
xchg
stos
xchg
shrb
fidivl
add
add
sub
insl
incb
sbb
inc
pushf
repnz
mov
mov
cli
and
clc
add
add
dec
pusha
mov
int3
in
ljmp
and
push
aad
loope
test
jb
lock
pop
movsb
dec
push
and
inc
test
xchg
daa
pushf
jne
movntps
cmp
xor
pusha
inc
mov
dec
bound
popa
pop
cmp
inc
mov
pop
je
cli
and
jge
flds
add
ljmp
es
or
test
test
pop
lret
cmp
mov
xchg
insb
add
cmc
sbb
stc
loop
bound
and
mov
nop
negl
and
adc
cld
xor
add
mov
into
xchg
sub
add
sbb
scas
repz
add
cmc
loopne
imul
push
int3
push
jecxz
and
jno
push
jmp
addr16
shld
jp
aaa
xor
jb
bound
inc
dec
ficompl
test
inc
jp
sarb
adc
jb
and
mov
div
xor
add
nop
push
sub
and
push
aas
xor
mov
aad
jge
xor
cli
jmp
mov
sbb
adc
mov
pop
jp
rolb
lcall
stos
or
repnz
xchg
mov
lret
lahf
or
pop
sbb
test
nop
cmp
pop
stc
add
cltd
mov
out
je
mov
pop
dec
mov
add
xchg
dec
xlat
pop
or
ja
xchg
and
pop
xor
daa
das
jp
adc
popf
lods
or
jo
push
int3
sub
loop
mov
sbb
sub
cld
xor
and
push
sbb
cwtl
push
and
icebp
adc
add
jne
xor
xor
and
hlt
xor
js
add
inc
dec
emms
mov
inc
push
or
add
out
xchg
fstpt
adc
sub
add
imul
test
mov
xlat
dec
mov
jg
jge
cmp
into
add
xlat
aaa
dec
sbb
shl
mov
testb
std
mov
pop
add
test
lds
sbb
test
mov
mov
add
int3
mov
ret
inc
xchg
add
push
in
add
data16
or
mov
mov
fmull
int3
pop
xor
jae
inc
aaa
bound
sbb
mov
mov
add
jp
aaa
andb
add
adc
int
mov
add
jns
inc
aam
jmp
sub
cmc
lret
xchg
sbb
mov
jge
mov
out
stos
aad
js
cltd
arpl
leave
or
jnp
add
movsb
out
push
lret
add
sbb
call
add
fptan
scas
add
aad
push
adc
fidivrs
or
jmp
test
add
or
stc
add
test
add
rclb
inc
lcall
ficoml
movsb
addl
aas
pop
shr
dec
fbstp
dec
fldenv
jns
mov
aas
ljmp
into
stc
and
iret
xchg
fldl
or
dec
mov
add
arpl
push
xor
jp
subb
das
lods
jle
adc
add
xor
movsb
ret
into
adc
add
pop
sarb
add
notl
push
outsl
sub
test
xchg
jge
dec
icebp
add
adc
mov
jecxz
cmp
sub
pop
cwtl
or
mov
test
push
xor
aam
ljmp
das
jmp
xorl
add
push
pop
idivl
mov
stc
push
xchg
cmp
cmp
faddl
sub
dec
pop
rorb
sbb
in
dec
add
push
fsubl
add
es
inc
roll
add
int3
jb
insb
add
dec
and
cmpsb
faddl
bound
fldl
cmc
xchg
cltd
enter
repnz
popf
cmp
fxch
inc
add
add
add
loop
add
fs
adc
add
mov
sti
fisubl
dec
dec
nop
inc
addl
mov
aas
pop
jb
cmp
mov
js
sahf
fstpt
fiaddl
and
sarb
pop
xchg
mov
in
sub
sbb
cli
xchg
leave
sbb
subl
shrl
popf
subl
and
cwtl
adc
dec
aaa
inc
push
stc
je
ret
data16
pop
movsb
or
adc
pop
jp
lcall
shlb
dec
add
jle
cwtl
popa
pushl
or
pop
add
ret
ja
scas
push
insl
mov
lock
dec
or
push
sbb
xchg
cltd
jle
jae
pavgb
xchg
xchg
loopne
mov
mov
loope
rclb
je
mov
lahf
jo
sbb
stc
cmp
or
daa
ss
push
popa
cwtl
adc
add
push
pushf
pop
shll
or
aas
clc
add
nop
imul
mov
sub
lock
add
js
outsb
and
mov
add
and
pop
xor
inc
call
popf
mov
push
push
sahf
mov
and
pop
jo
mov
or
add
lret
out
pop
add
stos
push
xchg
xchg
mov
jl
ss
mov
xor
cmpsl
shrb
movsl
addr16
ret
xchg
aad
int3
cmp
xchg
add
jle
jecxz
cwtl
mov
jae
add
int
scas
xor
cmp
xchg
push
aad
xchg
cmp
arpl
int3
sysret
cli
insl
in
mov
gs
out
add
add
dec
xchg
add
scas
lds
enter
pushf
mov
pop
pop
jge
push
lods
in
loopne
dec
sub
les
rclb
sbbl
ljmp
inc
ljmp
jle
push
je
jge
add
xor
add
xchg
cmp
inc
adc
jns
push
dec
jp
subb
fs
add
push
mov
dec
loopne
pusha
mov
test
push
sbb
push
testl
and
mov
and
mov
jl
jmp
ret
ret
pushw
fisubs
mov
sbbb
mov
mov
add
pusha
les
ret
aaa
mov
cmp
add
std
pop
popa
mov
shlb
mov
adc
push
out
imul
add
push
cwtl
or
xchg
inc
aam
movsl
enter
pusha
sbb
daa
lcall
pop
cwtl
shlb
rclb
les
aam
push
into
xor
and
jl
or
pop
jbe
adc
add
mov
jo
push
fwait
loopne
hlt
add
int
fisttpll
movsb
lahf
adc
mov
push
shrl
push
add
or
subl
add
sub
out
mov
popa
xchg
sbb
pusha
adc
sbb
add
clc
jle
dec
in
dec
jge
rcr
scas
loop
subb
imul
dec
mov
add
mov
add
fidivrl
xchg
sbb
pusha
lret
inc
das
dec
and
mov
pop
sub
cmp
mov
lods
fdiv
cmp
ja
adc
cli
xchg
add
aad
jo
mov
jo,pt
jno
insb
add
stc
dec
fdivr
fwait
sahf
add
push
vpshlw
pop
mov
scas
cmp
fucomi
cmp
add
in
xor
push
sub
xorb
rcll
mov
sub
mov
test
aas
inc
mov
rcrl
pusha
repz
inc
and
scas
test
pop
cmp
test
add
inc
cmpb
fwait
cmp
fstl
lret
out
mov
mov
lds
xor
push
jecxz
outsb
cwtl
mov
xchg
dec
jmp
add
cltd
xor
push
shrb
lahf
mov
in
and
add
pop
popa
add
shrb
clc
push
mov
dec
test
enter
mov
repz
lock
inc
mov
mov
outsl
add
and
in
sub
sbb
jo
aaa
add
adc
lods
add
inc
and
shlb
xor
sbb
cmp
and
pop
nop
shrb
lock
jae
cmp
mov
add
stos
in
dec
pop
cmp
pop
and
jge
cltd
sbb
cmpsb
lret
sarb
jmp
push
cmp
fsubrp
push
cmp
popa
lea
mov
push
push
or
push
xchg
or
std
iret
loop
push
mov
inc
dec
mov
adc
addr16
pop
adc
inc
pop
jp
enter
add
xchg
repnz
dec
and
add
rorb
xchg
mov
push
push
stos
xor
fsubrs
mov
add
inc
push
jecxz
negb
ds
pop
add
add
xor
hlt
xchg
insl
jecxz
add
insb
xor
cmp
outsl
sub
xor
jno
adc
popf
add
in
and
das
punpcklbw
inc
mov
subb
or
add
inc
push
stos
fimull
iret
out
movsl
dec
xchg
sub
ja
add
jne
das
add
push
xchg
mov
add
repz
add
pop
sub
aaa
mov
add
std
dec
add
cmc
in
subb
pop
jo
adc
popf
adc
test
repnz
xchg
stos
mov
loopne
ficoms
outsl
add
ljmp
subl
sub
add
cmpsl
out
and
and
add
cmp
cmp
arpl
cmp
fists
jp
stc
pop
sub
sti
pop
and
add
popf
call
mov
int
mov
lock
fwait
lock
cmp
add
mov
loope
lret
push
add
push
add
icebp
ftst
inc
out
inc
mov
les
add
mov
add
inc
sub
pop
je
add
imul
sti
xlat
jno
addb
dec
add
pop
dec
je
clc
xchg
push
test
cs
push
in
in
push
lret
addr16
add
adc
rorl
decl
psrad
pop
in
sbbb
jae
add
mov
mov
pop
cmp
icebp
push
mov
adc
in
xor
inc
mov
adc
add
xor
mov
xchg
aas
and
xchg
push
add
xchg
dec
loopne
jno
mov
inc
xorl
sbb
add
xorb
les
sbb
push
add
and
mulb
pop
pop
xchg
js
dec
stos
xchg
fldenv
mov
ss
pop
cmpsl
dec
add
repnz
ljmp
in
ss
jp
dec
gs
sahf
cwtl
rcrb
ds
nop
out
pop
out
mov
aaa
lahf
iret
rolb
pop
into
je
dec
dec
inc
dec
mov
les
nop
jo
xchg
mov
sbb
shlb
ret
cmp
cmp
push
dec
aaa
loop
mov
roll
xchg
out
xchg
dec
mov
pop
stc
loop
fisttps
adc
push
cmp
in
inc
fs
pop
jb
pop
inc
mov
or
lret
push
pop
dec
fsubr
loopne
addr16
stos
mov
lret
sbb
rcl
mov
inc
in
jnp
pop
push
mov
outsl
pop
arpl
out
jecxz
push
outsb
push
sub
sarb
xor
sub
testb
add
pop
outsl
or
aas
cwtl
dec
pusha
sbb
loopne
xchg
mov
inc
call
gs
scas
popa
cld
add
push
pop
jp
insl
add
pop
mov
jle
push
es
aam
cli
cmpl
jae
mov
pop
mov
cmp
adc
outsb
cmpsl
lds
scas
mov
add
lret
stos
cmp
addl
pushf
into
or
mov
jo
jge
sahf
rcrb
sbbl
xlat
ja
xchg
pushf
and
mov
push
pop
imul
int3
mov
fiaddl
ds
dec
and
add
enter
call
push
inc
mov
scas
andb
inc
nop
inc
dec
add
and
dec
daa
adcl
and
mov
imull
add
rcr
xchg
rorl
filds
lea
loopne
add
xchg
into
dec
xlat
jb,pt
mov
add
roll
cmp
scas
cmp
and
sub
les
sub
push
adc
add
dec
std
push
incl
sub
mov
and
clc
dec
add
sub
add
mov
addr16
mov
data16
rcl
cld
mov
lods
mov
pmaddwd
and
arpl
or
mov
adc
mov
mov
cmp
or
pop
rcll
fstpt
add
fwait
lods
das
sub
mov
cmp
lahf
movsb
sbb
pop
xchg
flds
test
jl
lahf
out
sbb
jbe
add
push
and
adc
adc
xchg
in
test
inc
lods
or
lea
sub
or
or
mov
sbb
xchg
mov
clc
or
or
stos
push
jb
xchg
add
lret
or
rcrb
adc
and
loopne
stos
add
push
flds
mov
xorb
adc
cmp
pop
add
in
xor
sti
in
xor
pop
xchg
push
subb
or
add
cmp
mov
push
jp
pop
push
mov
sar
jecxz
sbb
and
repz
test
shlb
clc
sbb
push
and
dec
jmp
sbb
mov
inc
mov
add
xchg
dec
cmpsl
fnsave
jp
inc
dec
rorl
or
cmp
fwait
sbb
cmp
rclb
adc
and
ds
push
add
jp
inc
inc
or
xchg
hlt
and
pop
sarb
adc
int3
push
or
sub
add
xchg
sbbb
lods
cmp
xchg
inc
test
insb
stc
sub
inc
add
inc
mov
in
inc
fwait
insb
mov
push
and
cmp
and
xor
fisubrl
in
xchg
pusha
inc
fisubs
add
sbb
test
faddl
scas
mov
cli
idivl
cmp
jbe
xor
sbb
xchg
adc
aad
std
les
or
mov
test
xchg
orb
hlt
dec
out
movb
adc
std
cmpsw
add
push
mov
dec
push
sbb
mov
adc
add
add
add
add
inc
mov
pop
scas
fsubrs
add
sub
jle
testl
pop
dec
add
out
jmp
pop
add
or
push
add
ret
add
mov
cmpsl
mov
jmp
pusha
mov
jbe
push
aaa
icebp
push
pop
mov
ja
daa
mov
aad
mov
dec
aaa
jecxz
add
dec
stos
inc
aam
push
pop
mov
lds
adc
addb
add
xor
add
mov
lock
add
sysexit
mov
push
gs
jle,pn
loopne
or
cmc
add
test
pop
xchg
jno
add
stos
outsb
push
adc
push
enter
lods
cmp
mov
loopnew
imul
sub
sti
add
ror
rcrl
fadds
aad
adc
jg
push
mov
or
pop
sbb
decl
dec
sub
inc
inc
add
jg
test
ljmp
pop
aad
adc
lods
xchg
pop
call
psubb
hlt
cmp
add
mov
loop
add
cwtl
sbb
add
movsb
dec
fimull
push
sub
mov
call
and
fwait
jb
xor
out
add
push
jmp
inc
sub
add
dec
mov
jns
cmpl
sub
pop
mov
pusha
or
add
push
dec
push
mov
pop
cmp
dec
add
jge
mov
pop
and
ds
add
pop
jl
inc
sub
dec
jns
outsl
es
xchg
int3
pop
test
mov
pusha
in
push
sub
add
cmp
std
lock
in
cmpsb
pop
xor
sbb
adc
xchg
rclb
add
lcall
add
insl
push
pusha
lahf
movsl
jno
add
sub
dec
xchg
cmc
test
sbb
cmp
iret
sbb
sub
xor
xor
xor
add
loope
fisttpl
ja
add
mov
pop
push
cmc
xor
mov
in
mov
rolb
adc
sub
add
xchg
jb
pop
dec
pop
mov
cmpsb
cmp
sbb
xchg
cmpsl
jb
adc
bound
adc
pop
pop
pushf
mov
adc
mov
cltd
adc
ror
mov
outsl
addr16
lcall
jmp
shl
fwait
imul
pop
cmpb
push
add
push
stc
add
lret
mov
xchg
scas
pop
add
xchg
mov
add
shrb
lds
jg
jne
stos
shrb
sbb
add
jmp
sbb
dec
add
dec
mov
inc
cmp
adc
cmp
lods
pop
js
scas
movsb
mov
lods
test
call
dec
out
imul
loope
nop
jo
incb
xor
aam
inc
sbb
add
add
xchg
mov
fisttpll
lds
push
subl
mov
cmp
push
xchg
adc
nop
mov
ja
lock
inc
aas
add
mov
popa
push
adc
push
add
ficompl
adcb
popa
ss
cmp
out
or
mov
xchg
icebp
fsts
lret
add
int
push
dec
mov
clc
testb
icebp
mov
movsb
inc
push
stc
adc
mov
add
inc
loopne
pop
jno
or
es
movsl
in
in
lods
mov
cld
or
xor
pusha
ss
push
sbb
push
inc
push
mov
inc
cmpsb
cmc
ret
add
popa
imul
in
add
insb
arpl
jno
ror
lahf
mov
or
scas
movsb
ret
mov
push
lock
sbb
add
rol
add
cmpsb
dec
dec
push
ds
or
mov
inc
rcrb
movsb
add
sbb
das
cmp
ljmp
jno
xchg
sarb
adc
cmp
in
dec
add
loop
inc
lods
jns
push
mov
inc
add
mull
push
mov
and
pop
movl
sub
cmp
push
fcomps
stc
pop
subl
aas
lds
shll
fistl
mov
sub
mov
mov
scas
adc
add
add
push
mov
mov
mulb
adc
adc
popa
cmp
jg
mov
push
out
add
mov
mov
pop
pop
inc
subb
adc
add
repz
mov
sar
ja
mov
push
sub
add
testb
outsb
adc
shlb
pop
or
xor
push
or
cmp
andb
pushf
and
mov
cmc
push
bound
pop
roll
add
subb
sbb
sbb
add
fsub
push
lock
jne
sbb
cwtl
inc
lret
and
and
pop
jns
hlt
push
ljmp
incl
push
aas
and
mov
push
pushf
stos
push
cmpb
jmp
loop
pop
push
mov
inc
js
and
pusha
add
call
fiadds
pop
data16
or
jmp
add
mov
arpl
xor
in
mov
mov
dec
ficoml
jp
xor
les
or
xor
fmuls
enter
push
inc
lret
mov
cmp
xchg
cmp
adc
mov
mov
or
cmp
lret
fisubs
stc
and
fs
pusha
pop
cld
xor
je
pop
rol
cmc
insb
push
push
cli
lock
shr
cmpsl
int3
mov
inc
enter
clc
fwait
xlat
lret
addb
adc
sub
call
xorb
xchg
test
sbb
mov
push
push
inc
inc
addl
sub
dec
stos
add
add
enter
push
daa
or
inc
jecxz
loopne
xchg
pop
sbbb
add
mov
sbb
lock
add
push
lds
dec
jg
adc
mov
cltd
add
shrl
lea
mov
or
adc
incl
es
out
dec
insb
or
sub
dec
lock
rcrl
inc
fadds
or
test
inc
push
xor
mov
lods
mov
mov
add
mov
xor
inc
mov
pop
inc
stos
or
mov
daa
hlt
mov
cltd
pop
mov
inc
aam
inc
popa
cwtl
orb
dec
xor
dec
cmp
lods
loop
negl
test
adc
jp
sarl
dec
gs
jecxz
out
cmp
sub
bound
dec
add
cmp
das
add
loop
jno
pop
inc
ret
add
mov
lock
mov
fcmovnb
sbb
add
lcall
sbb
inc
push
leave
loopne
mov
aaa
andb
sbb
subb
push
pop
push
xchg
ret
cmpsb
rorb
rcrl
pop
test
and
outsl
inc
je
mov
jb
jg
inc
xchg
mov
lods
dec
sbb
adc
add
dec
pop
lcall
mov
imul
push
cmp
mov
data16
jo
mov
shlb
dec
faddl
cmp
mov
sub
shlb
outsl
sub
push
in
cs
cs
shl
stos
push
pop
dec
lcall
fnstenv
xchg
lods
call
inc
add
pop
sbb
sbb
and
xchg
mov
faddl
mov
stos
jp
pop
jbe
dec
ja
add
adc
mov
shrb
or
mov
add
jns
cltd
addl
cmp
lret
adc
mov
les
dec
subb
jl
adc
add
loop
mov
add
and
xor
in
jnp
in
aas
cmpsb
dec
pop
cmp
add
jae
out
dec
lock
cmp
sbb
cmp
inc
adc
lret
push
jae
sbb
jg
rcrb
call
cmp
add
js
loopne
lock
fadds
or
movsb
pop
inc
adc
cmp
shll
ret
jno
out
pop
shr
jne
clc
add
mov
dec
cmp
push
cmp
and
adc
cmp
add
xchg
add
jns
cwtl
add
or
mov
imul
inc
mov
mov
dec
jle
add
push
and
push
pop
sahf
sub
xor
jecxz
mov
mov
int3
jmp
sbb
cmp
or
or
sub
cs
mov
and
or
xchg
and
pop
cmp
add
xchg
movq
mov
out
push
push
daa
inc
add
add
xchg
mov
outsl
push
mov
dec
lcall
xor
push
cmovbe
xchg
add
add
xorb
jno
add
mov
lcall
cmp
mov
ds
je
jns
ss
mov
inc
cld
add
add
int
imul
inc
adc
and
dec
mov
aam
dec
sbb
rolb
cmpb
enter
xchg
add
out
loopne
sub
jge
add
test
fbld
loop
mov
scas
inc
aad
adc
mov
stc
and
mov
jle
call
fwait
in
push
or
add
in
pop
or
jecxz
and
das
and
sbb
inc
in
xor
daa
xchg
call
sub
and
dec
sub
inc
je
mov
mov
outsb
and
in
lock
loopne
hlt
movsl
sbb
in
sbb
cli
int3
adc
bound
mov
fcompl
out
xor
or
add
cmpsb
lea
xor
mov
or
push
mov
cmp
pop
cmp
cmpsb
pop
jmp
cmpsl
in
js
gs
ss
mov
insb
repz
out
mov
xor
sbb
icebp
dec
mov
lods
hlt
out
popa
pop
cmp
js
jp
sbb
and
add
test
and
rorl
add
xchg
imul
inc
jl
pushf
out
mov
and
sbb
bound
add
ja
daa
push
add
rorb
insl
fistpl
stc
ja
mov
add
or
or
add
cltd
es
scas
adc
lods
fcmovnbe
jb
inc
pop
add
sub
xor
push
ficoms
xchg
ja
push
jmp
stos
add
mov
sar
pop
test
or
dec
adc
inc
icebp
and
dec
stos
mov
std
mov
lea
add
lock
cmc
jno
and
pop
sub
and
pop
dec
test
stos
es
call
f2xm1
adc
adc
lds
and
movsb
nop
fcomp
repnz
sarl
inc
push
dec
aam
ret
cmp
add
inc
and
cwtl
outsl
push
and
push
dec
jl
lock
inc
and
push
movsl
or
negl
in
add
sarb
add
mov
repnz
dec
mov
or
mov
xchg
lcall
andb
add
insb
inc
xor
add
push
lret
dec
subl
inc
mov
pop
aaa
xlat
dec
leave
push
int
sub
dec
testb
push
adc
add
xor
clc
je
push
cmp
sbb
int3
sbbl
jle
or
idivb
mov
push
add
mov
xlat
adc
and
cli
push
sub
shlb
leave
jns
mov
aas
dec
repz
fldt
je
int3
sbb
and
and
pop
outsb
add
and
in
int3
inc
adc
mov
xlat
jmp
sbb
and
push
fcoml
adc
test
rcrl
aas
and
push
into
mov
fs
inc
cmp
mov
add
add
push
or
dec
rolb
ds
sbb
add
repnz
push
sub
mov
pop
insb
lods
add
nop
pop
push
jns
sub
je
jne
add
fistps
add
stos
add
cmp
add
cmp
pop
add
and
inc
xor
inc
in
aaa
test
in
aam
and
add
pop
xchg
ret
popf
xchg
js
add
sbb
cwtl
xchg
popa
adc
into
pop
add
inc
inc
dec
lods
mov
ja
outsb
test
adc
hlt
add
inc
aaa
pop
inc
dec
std
mov
or
cli
mov
mov
test
push
sbb
shlb
addr16
add
cwtl
xchg
pop
bound
adc
in
mov
cmp
adc
cmpsb
add
int
lock
verw
ret
popf
mov
xor
es
jbe
pop
xchg
arpl
dec
hlt
sub
pop
shrb
mov
push
push
add
dec
incb
repnz
push
sbb
xor
sbb
add
add
data16
sub
jmp
mov
adc
ret
loope
in
jo
sbb
jb
sub
xor
ljmp
mov
adc
xchg
outsb
sub
push
inc
pop
pop
mov
shlb
add
movsl
cmp
xor
scas
clc
leave
add
or
pop
ret
jle
sbb
mov
das
pop
cmp
inc
jecxz
daa
decb
out
lock
xor
data16
out
hlt
mov
or
cmpsl
xor
loope
inc
adc
fmul
mov
pop
jl
add
jns
mov
repnz
mov
and
adc
into
das
add
sub
mov
scas
pop
and
add
pop
addr16
add
sti
lret
lods
dec
push
sbb
adc
je
push
icebp
mov
in
fists
hlt
stos
xchg
xchg
popf
push
mov
out
and
cmp
xchg
ficompl
call
or
ret
stos
xor
inc
mov
mov
mov
push
pop
loopne
mov
outsb
cmc
clc
ror
pop
xchg
fistpl
cmc
out
bound
push
mov
cs
sbb
dec
and
leave
rcpps
add
pop
xchg
lahf
or
dec
shll
out
cli
sub
lret
push
jno
sub
jne
jns
pop
or
nop
inc
and
jp
dec
pusha
enter
sub
add
fistps
mov
xlat
add
mov
pop
stc
outsl
adc
clc
out
dec
in
dec
dec
inc
mov
cmpsl
cwtl
fsubs
add
out
xor
sub
clc
mov
sarl
jmp
lock
cmp
mov
mov
rcl
inc
mov
notl
sub
mov
fiaddl
leave
pop
imul
dec
inc
xchg
add
pushf
dec
mov
adcl
adc
jmp
inc
mov
push
jae
std
push
push
clc
ja
xchg
in
ja
shr
pop
sbb
fildll
xor
jae
adc
addb
das
xchg
mov
into
ret
roll
shrb
mov
pop
mov
sub
cwtl
cld
and
jno
add
insb
dec
mov
add
test
add
xor
push
inc
add
fs
fistl
scas
add
mov
jo
push
pop
xorb
pop
addr16
mov
lods
das
cmp
out
in
movsl
add
sub
push
addr16
js
int3
push
sbb
mov
sti
fiaddl
add
sbb
in
in
js
pop
loop
dec
cmp
rclb
mov
inc
subb
shlb
es
lcall
into
adc
bound
inc
fiaddl
sub
fdivp
std
rclb
cmp
test
aaa
jo
and
mov
data16
mov
lock
pop
push
andb
rolb
or
rcll
repnz
stos
dec
mov
icebp
adc
stos
das
and
ljmp
cltd
lahf
fs
movsb
scas
push
roll
fwait
cwtl
pop
pop
push
dec
filds
enter
mov
xlat
sbb
pcmpgtw
scas
add
pushw
sarl
mov
add
stc
jnp
lcall
push
cs
push
rcr
add
mov
in
add
cwtl
mov
roll
or
sub
leave
cltd
push
rcrb
test
daa
lret
test
add
mov
jns
pop
push
insb
dec
add
pop
sub
hlt
mov
rolb
lods
or
mov
fadds
loop
add
jle
pop
cwtl
xchg
je
sbb
data16
sub
pop
nop
inc
pop
mov
in
ljmp
test
xor
daa
push
scas
add
xchg
sub
imul
ja
pop
mov
iret
pusha
mov
lock
sbb
push
adcb
cmp
add
xchg
mov
pop
loopne
cmp
add
lret
xchg
js
push
add
add
mov
inc
sub
rolb
inc
lea
add
lret
mov
jg
sbb
xor
sbb
loopne
sbb
add
mov
push
cmp
andb
cltd
ret
push
add
sbb
ret
stos
add
in
adc
sbb
icebp
aad
dec
pop
add
inc
in
and
push
out
sbb
jo
jno
out
test
retw
jbe
or
mov
xchg
dec
call
cwtl
rcl
mov
les
inc
add
pop
fildll
jbe
gs
push
les
jb
aaa
pop
sbbl
fwait
in
mov
aas
imul
leave
adc
gs
jno
pop
jns
mov
fsubp
out
mov
inc
add
pushf
add
or
cmp
add
adc
jno
mov
xor
fldl
xchg
bound
add
or
ret
sbbb
sub
repz
subb
pop
inc
add
cmp
sbb
add
sahf
mov
in
add
cs
jge
add
add
ret
imul
sub
icebp
cltd
xchg
sbb
out
xor
mov
aad
mov
jne
repnz
gs
xor
inc
jb
adc
jl
jg
mov
or
and
add
out
ror
mov
aaa
xchg
add
sbb
add
ret
pushf
lds
cmp
inc
les
mov
inc
sub
sahf
cwtl
out
jne
mov
dec
mov
inc
ret
imul
add
mov
lea
add
out
bound
sbb
inc
test
xor
fdivr
cmpsl
iret
jge
xchg
jo
add
add
mov
mov
into
cmpsb
add
addl
loop
add
dec
mov
mov
sub
mov
add
daa
or
nop
xor
adc
adc
add
cld
dec
rolb
and
fdivl
push
add
jo
into
mov
out
sbb
cmp
cmp
aaa
and
pop
rclb
cld
and
rcll
or
lret
xlat
xor
clc
jo
inc
sahf
adc
pusha
add
add
cmp
mov
xchg
adc
jb
inc
mov
into
push
jb
add
add
xor
es
in
and
scas
stc
add
test
notb
add
xchg
daa
imul
int3
add
leave
or
adc
or
adc
out
jnp
mov
lods
push
pop
or
sub
add
mov
sbb
xchg
mov
into
mov
adc
add
pop
inc
mov
imul
cld
add
push
mov
adc
push
flds
jmp
pushf
push
add
fidivs
or
jo
mov
test
adc
cmpsl
pusha
mov
cwtl
fcom
insb
add
cmp
pusha
push
fadds
enter
jnp
or
dec
mov
pop
ja
push
into
mov
inc
nop
incb
test
add
cwtl
xchg
push
and
mov
clc
add
dec
jp
int
jle
pop
jp
or
rorb
cmc
imul
rclb
mov
outsb
or
int
push
xor
push
cwtl
std
mov
add
data16
arpl
popf
inc
fdiv
scas
fbld
movhlps
imul
cwtl
cltd
sahf
pop
add
js
adc
jo
add
dec
fsub
push
mov
enter
mov
xlat
adc
addr16
add
cmp
pop
or
and
adc
add
fildl
jae
fcomip
movsb
in
repz
loope
push
xchg
movl
cs
test
out
pop
jecxz
mov
mov
pop
and
pop
testl
mov
loop
ficompl
cmp
jae
sub
mov
add
adc
icebp
add
in
mov
fadd
pop
iret
shll
or
add
xchg
sub
pop
insb
adc
xchg
dec
cli
ds
pusha
jg
jns
pop
jo
mov
mov
dec
addb
mov
pusha
mov
ret
and
add
jg
ljmp
lock
add
mov
and
and
sbb
add
mov
jg
dec
add
loopne
jecxz
mov
mov
xor
clc
enter
ljmp
aam
roll
jmp
sti
int
arpl
ja
push
repz
xor
pop
and
incl
js
push
cmpsb
aam
or
stc
flds
add
xchg
adcl
stos
sub
mov
or
add
inc
sub
movsb
neg
stos
add
cmpsl
aam
pop
jp
aas
pop
mov
ds
iret
sbb
rcrb
jbe
sbb
pop
in
add
xchg
ljmp
clc
sub
imul
cli
mov
push
test
cmpsb
xor
adc
push
inc
int3
int3
push
leave
mov
aad
aas
rorb
cmp
lods
mov
inc
pop
data16
and
popf
and
fmull
stos
jecxz
or
scas
push
imul
sbb
jge
dec
pop
js
nop
inc
clc
add
pushf
xor
xchg
xchg
sub
mov
in
dec
shl
enter
pop
ljmp
pop
in
pop
stc
fistpll
pusha
leave
shll
xchg
imul
and
hlt
add
dec
ljmp
aaa
add
push
insl
xchg
push
call
movsb
mov
add
add
jecxz
mov
js
lcall
and
add
push
aaa
gs
inc
cli
cmp
lcall
sarb
lea
lock
mov
lods
mov
je
fmul
add
les
xchg
fistps
pop
mov
or
mov
inc
xchg
nop
sub
jl
and
inc
lods
xor
xorl
mov
xor
out
xchg
xchg
mov
adc
pop
sub
push
inc
mov
idivl
and
call
xchg
cwtl
fs
or
mov
fwait
and
jle
or
iret
xchg
mov
ja
adc
inc
mov
inc
addb
cmp
aad
sbb
sbbb
sub
fwait
add
hlt
adc
pop
pop
movsb
push
lock
xchg
lods
push
arpl
inc
and
mov
pushf
popa
sub
mov
lret
aam
out
dec
add
cwtl
or
lea
or
xchg
mov
or
pusha
popf
jno
pop
add
push
mov
xlat
mov
add
fldl
push
pusha
push
and
inc
dec
sbb
rcrb
dec
sbb
add
push
pop
aad
jl
and
dec
pusha
or
fistps
andb
es
inc
inc
xchg
cld
in
in
inc
inc
pop
sbb
sbb
mov
sub
repz
subl
adc
pop
imul
call
add
test
inc
fmuls
std
pop
add
notb
sub
inc
jmp
outsl
in
out
jno
loopne
or
daa
mov
bound
test
mov
pextrw
xchg
loopne
and
mov
pop
outsb
inc
enter
lcall
inc
dec
mov
push
repz
punpckhbw
lds
add
sbbb
xchg
aaa
and
pop
popa
test
fdiv
sbb
mov
incb
imul
jne
xor
mov
xchg
shl
insl
repz
and
sub
mov
xor
pop
add
jecxz
cwtl
mov
clc
jo
lock
sti
cmp
sub
push
mov
jno
xchg
and
xchg
and
pop
mov
repnz
cmp
add
enter
mov
or
cmp
out
data16
push
mov
mov
mov
inc
mov
es
dec
cs
pop
sbb
fldt
xor
push
popa
mov
fcos
mov
ja
pop
mov
test
mov
sbb
and
and
mov
and
dec
fwait
aaa
fsts
scas
ljmp
jbe
out
push
mov
cld
aas
cltd
lret
sub
pusha
cmpb
jmp
push
jl
xchg
mov
add
adc
test
xor
mov
and
lret
loopne
rorl
aad
mov
pop
clc
fwait
xchg
arpl
cmpsb
dec
call
sub
add
andl
lods
data16
push
enter
pushf
pop
cmpsl
fmul
inc
mov
call
repnz
orl
push
add
lret
sti
test
or
and
and
dec
add
insl
outsl
lahf
pop
xor
pop
jl
bound
mov
sub
adc
jnp
add
mov
pop
push
nop
test
pusha
add
add
mov
add
sti
pop
enter
pop
sub
jmp
je
in
fsubs
sub
adc
dec
or
pushf
andl
mov
xchg
mov
movsb
pop
pusha
mov
sarb
lds
addb
out
jl,pn
jl
xor
adc
addb
imul
sbb
lods
and
add
mov
xor
add
mov
hlt
ror
mov
incl
stc
xchg
cld
and
jp
inc
or
icebp
inc
cmc
inc
lds
dec
mov
jge
cmpb
mov
pop
clc
add
push
adc
xchg
call
jo
cmpb
mov
outsb
loop
jne
or
dec
incl
fsubr
add
cld
sub
add
jns
stos
pusha
aam
jecxz
fcomp
outsb
pop
mov
push
dec
and
mov
lock
and
andb
sbb
insl
repnz
dec
xor
sbb
in
sbb
orb
shl
mov
dec
xchg
adc
mov
push
xor
loope
add
xlat
lahf
das
and
fxch
dec
lcall
int
mov
push
sub
cmp
testl
add
adc
cmpsb
adc
addb
add
push
jecxz
mov
mov
jb
cwtl
cli
mov
xor
mov
cld
dec
and
xchg
xor
fdivs
inc
xor
mov
add
pusha
aaa
dec
pusha
push
add
popa
push
mov
outsb
cmp
addb
pop
adc
mov
cmp
add
arpl
jo
pop
stos
add
ret
outsl
jne
or
shr
jns
icebp
xorb
pop
xchg
insb
in
repz
xor
mov
out
push
add
adc
or
add
inc
stos
imul
dec
out
mov
in
sub
nop
enter
lods
fwait
sub
arpl
gs
sbb
aaa
add
and
xor
loope
repnz
add
push
and
loopne
pusha
aaa
pop
push
hlt
sbb
into
jne
mov
dec
cmp
movsl
jmp
dec
adc
aad
mov
cwtl
mov
xor
mov
mov
inc
cmp
mov
lcall
add
pop
dec
cmp
mov
fsubr
cli
add
sti
lock
pop
xor
jbe
jge
test
adc
popf
dec
add
lcall
add
mov
jbe
pop
insl
add
sub
dec
testb
push
negl
add
inc
fdivrs
fldl
dec
cmp
jp
add
add
or
shrl
and
cmpsb
lretw
dec
add
aas
xchg
mov
outsb
pop
mov
inc
mov
shrb
inc
sbb
sub
shlb
fwait
add
ja
lock
sub
pop
add
fcmovb
jge
pop
dec
add
shlb
jbe
push
ja
push
pop
movsl
cmp
dec
daa
jb
pop
cli
xchg
repz
call
push
or
add
xor
add
jl
push
pop
pop
mulb
add
sub
inc
dec
imull
js
jg
push
out
imul
scas
sbb
xor
sti
add
shl
xchg
cli
pop
add
fwait
aam
add
adc
mov
scas
pop
add
inc
sbb
lret
add
stc
loope
jnp
test
add
sub
pop
add
lock
mov
test
pusha
push
or
pop
xor
sbb
jp
adc
inc
and
mov
push
jg
xchg
into
xlat
inc
mov
mov
mov
scas
jge
dec
fsubs
add
dec
add
jp
das
inc
shl
add
scas
cmpb
fs
xor
ja
jecxz
add
out
push
mov
or
xor
pop
and
jne
push
adc
jb
fucomp
pop
dec
cmpb
mov
cmp
jnp
push
hlt
pop
out
dec
cmp
pop
shr
mov
add
cmp
mov
jbe
pop
mov
push
movsl
xchg
inc
adc
loopne
add
test
out
jb
adc
sbb
je
mov
inc
cltd
add
mov
inc
add
adc
fisubrs
fbstp
jl
sub
sub
cwtl
and
call
xchg
iret
movl
imul
or
xor
push
add
mov
and
add
movsb
xor
das
orb
mov
and
cmp
subb
std
add
imul
loopne,pt
add
cmpsl
or
add
adc
lahf
add
adc
in
jp
pop
add
jg
sti
inc
popa
repz
fildl
and
std
xchg
sbb
jecxz
add
stos
push
into
push
pop
mov
add
sbb
or
iret
insl
sub
cmp
push
pusha
and
pop
std
mov
jp
sbb
loopne
sbb
mov
aad
adcb
in
insb
adc
add
aaa
dec
stc
mov
inc
mov
xor
in
and
fildll
xor
xchg
je
jbe
addr16
jle
fsubs
ss
xor
aam
movsl
pop
add
jnp
mov
add
rcrb
mov
xchg
mov
mov
je
fstpt
inc
sub
add
dec
sub
push
jge
pop
cmp
ror
stc
out
ret
add
and
cltd
add
lahf
cli
pushf
es
lods
push
sahf
in
jl
bound
mov
dec
cwtl
and
pminsw
add
xchg
adc
inc
sti
clc
call
lods
add
in
push
sub
dec
adc
inc
dec
rcrb
mov
or
cmc
lret
js
push
sti
pop
repnz
add
add
stos
push
mov
addr16
jl
or
fwait
out
pop
loopne
jo
add
pop
push
ja,pt
jl
shlb
sbb
add
shrb
cmp
sbb
push
imul
or
rclb
mov
inc
stos
sub
cld
nop
jbe
add
push
loop
cmpsb
scas
test
mov
dec
mov
call
lods
icebp
ret
loopne
sbbb
or
mov
das
push
add
icebp
sub
loop
pop
add
cltd
push
mov
add
das
push
add
scas
out
add
enter
add
insb
cmc
mov
ja
out
dec
add
sub
xchg
mov
and
push
pop
add
lds
mov
add
sub
test
xchg
adc
je
jb
pop
xor
add
xor
mov
cld
add
aas
leave
ss
mov
mov
add
add
jbe
mov
adc
mov
sbb
mov
addb
mov
test
mov
test
cmpsb
lock
mov
jmp
add
add
push
jae
mov
sbb
mov
add
mov
jo
pop
add
nop
and
mov
pop
pop
add
loop
cmp
mov
or
sub
rcrl
add
xchg
mov
xchg
sbb
in
repnz
add
push
fcom
jne
or
bound
and
hlt
jge
insl
adc
add
push
fnstcw
mov
repz
mov
or
or
xchg
sbb
sub
xor
movsb
sbb
add
dec
lock
fcmovne
imul
pop
sbb
xchg
pop
adc
rcrb
jbe
sbb
push
shlb
or
adc
jb
ja
push
cmp
cmp
dec
fnsave
daa
add
push
repnz
add
sahf
mov
pop
jp
arpl
shrl
push
jmp
mov
add
add
mov
push
cmp
pusha
mov
add
pushl
mov
dec
add
push
sbb
push
mov
adc
mov
loopne
or
roll
out
les
cmpb
lock
cmp
jb
mov
insl
mov
test
and
and
cs
dec
add
jp
inc
and
xchg
add
dec
sub
mov
pop
xor
add
addr16
cld
repnz
std
xor
inc
add
add
jnp
jb
call
rolb
sub
jno
mov
jo
or
pop
add
lret
movsb
add
mov
sti
pcmpeqb
sarl
add
add
dec
adc
xchg
add
jp
mov
pusha
pop
leave
fstpt
pop
adc
push
xor
in
jno
test
inc
add
or
aam
jmp
fildl
loope
and
mov
sub
push
clc
push
mov
cmp
lcall
sti
call
add
xor
push
addl
sbbb
or
lret
mov
shl
fisubl
inc
jecxz
stos
add
repnz
rcrb
enter
add
adc
add
daa
jno
cmp
mov
xor
pusha
lret
dec
fs
adc
push
and
addb
or
inc
mov
sarb
mov
add
stos
xor
dec
test
add
jge
xlat
dec
es
nop
fs
xor
lahf
fiaddl
jmp
mov
xorl
jno
adcb
xrelease
push
cmp
add
movsb
lcall
xor
and
and
negb
movsb
das
add
sub
jl
int3
xchg
or
in
cmpsl
loope
hlt
stc
fdiv
sbb
or
cwtl
jecxz
icebp
aad
and
add
sbb
dec
testb
iret
sbb
bound
ss
cli
shl
add
leave
jo
jmp
std
xchg
xchg
in
loopne
lahf
ss
push
mov
daa
sub
iret
sbb
popf
fs
xchg
or
mov
je
pop
mov
fcmovnb
add
cmc
adc
add
iret
sbb
xor
mov
jge
inc
jle
add
mov
push
xor
add
test
sbb
adc
jge
icebp
fimuls
dec
and
fchs
popa
stc
add
movsb
test
je
push
adc
and
sbb
sbb
mov
lods
sub
add
push
add
clc
mov
cmpsb
add
ret
mov
das
add
enter
xchg
jo
sbb
stc
test
out
add
push
mov
inc
dec
xchg
fsub
sbb
fsub
psubsb
cmc
add
mov
xchg
jp
xchg
jmp
frstpm(287
push
pop
and
pop
jge
add
dec
decb
bnd
das
nop
mov
fisubl
stos
xchg
mov
mov
add
cmp
cmpsb
out
xchg
cli
xor
in
fiadds
imul
inc
jle
add
lcall
mov
aaa
dec
iret
addr16
stos
sti
mov
xor
jge
pusha
jbe
add
sbb
dec
inc
lock
mov
dec
xor
jnp
adc
lds
or
scas
addr16
shlb
add
mov
add
pop
cmp
add
add
fidivrl
mov
jne
pop
mov
inc
ss
icebp
jp
xlat
andl
cli
jmp
cltd
add
lods
mov
xchg
ljmp
jl
dec
inc
cmp
in
add
xchg
dec
rolb
mov
lahf
jle
add
push
and
fwait
test
and
fdivs
or
sarb
sets
fiadds
and
add
cmpb
add
mov
cs
mov
sbb
xchg
lock
sub
adc
adc
jb
mov
inc
incb
cmp
iret
add
add
or
push
testl
xor
jno
inc
pop
and
mov
stc
sub
pop
neg
leave
sub
or
cmp
data16
jns,pt
inc
add
push
dec
push
fwait
mov
jp
add
loope
add
push
push
rorb
addr16
adc
jle
add
pop
jge
add
mov
shll
subb
push
stos
cli
ss
mov
lcall
add
jo
jb
pop
mov
add
xor
insb
xchg
add
inc
add
or
add
inc
rolb
xor
loop
add
mov
sub
aaa
dec
push
add
pusha
xchg
lret
jmp
sbb
sub
inc
repnz
and
dec
aam
lahf
lods
mov
ljmp
dec
inc
addb
mov
jnp,pt
xor
adc
adc
test
pusha
imul
adc
clc
lods
add
or
adc
push
fistpl
les
cmp
movl
xchg
es
inc
popf
mov
push
pop
test
push
pop
in
sbb
inc
mov
ror
mov
inc
mov
add
or
sbb
or
in
sahf
movsb
add
add
pop
leave
sbb
add
lds
pop
repnz
sbb
jmp
loop
add
sbb
xlat
add
push
add
nop
pop
inc
jne
xor
add
ficomps
xorb
leave
sbb
pusha
test
mov
add
xor
ja
pusha
arpl
sbb
movsl
add
mov
pop
addr16
cpuid
mov
dec
fildll
outsl
adc
ljmp
test
mov
das
jo
jg
xor
xor
je
push
xorb
push
in
push
dec
add
in
mov
xor
and
xor
idivb
popl
xor
xor
adc
pop
sbbb
mov
repz
push
and
add
fstpt
xchg
add
xchg
and
rcrb
cmp
aaa
or
and
in
stc
ljmp
fcoml
test
adc
pop
lds
cmp
repz
xchg
add
jno
scas
sub
nop
popa
push
fnsave
mov
jo
sbb
add
cmpsb
mov
imul
movsl
add
or
std
adc
xchg
js
shll
ja
je
xchg
push
rcrl
jo
or
jnp
out
add
adc
mov
das
in
jae
xor
enter
sbb
push
adc
or
fidivs
and
xor
dec
xchg
out
addb
orl
into
mov
mov
fldenv
dec
mov
xor
and
stos
xor
mov
loop
pusha
out
rcrb
movl
sahf
aaa
ret
inc
mov
roll
add
call
xchg
pop
and
out
inc
mov
das
cmpl
gs
cld
fucomi
add
mov
sbb
xchg
dec
fldl
inc
xor
sahf
pop
sub
sbb
fisubrl
sub
stos
popa
mov
movb
add
jp
and
xchg
sub
cmp
test
or
gs
pop
jb
data16
test
sub
fidivs
insb
int
cmp
in
sbb
jo
loopne
je
xchg
lock
lods
mov
cmp
dec
cld
sar
jg
test
mov
xchg
sbb
jle
pusha
mov
add
cltd
jae
addb
pusha
jns
or
inc
sbb
xor
adc
and
and
push
jmp
push
orl
inc
or
dec
cltd
sbb
adc
xor
fdivrl
nop
cmp
lods
or
shlb
sbb
add
iret
test
xchg
fsts
bound
adc
inc
imul
push
nop
jno
clc
orl
ret
addr16
add
aas
sbb
and
jae
bound
dec
push
xorb
pop
mov
xor
add
and
cmp
add
or
inc
pop
data16
cmpl
in
mov
jnp
add
pop
xchg
lods
pop
add
mov
jbe
mov
lods
shrb
jmp
cmpsl
lock
sbb
inc
mov
and
or
into
and
scas
lods
mov
add
testb
icebp
push
outsl
clc
mov
push
pop
and
lock
cmp
sub
je
xchg
lock
aas
hlt
sub
cmp
jge
mov
cmp
xchg
add
add
xchg
test
sti
iret
nop
inc
add
jns
fadds
mov
gs
pop
inc
mov
dec
mov
call
ret
std
gs
push
sub
or
imul
push
jo
pop
sbbl
xchg
xor
das
sub
push
xor
push
inc
nop
jmp
xchg
or
mov
loope
sub
pop
and
loopne
inc
fidivrs
loope
sti
lods
pop
inc
cld
cmpsb
and
shll
xchg
test
add
cmpsl
and
mov
jnp
aaa
inc
mov
adc
hlt
les
add
lea
push
add
mov
out
pop
add
fstpt
repnz
in
add
stos
les
and
mov
jae
sub
add
dec
inc
and
rcll
jb
lods
sub
add
pushf
cmp
add
sub
mov
or
rcrb
add
push
push
push
add
clc
dec
add
mov
jae
cmp
out
add
dec
test
add
jle
mov
add
jae
mov
pop
lock
shl
stos
and
or
push
roll
pop
ficoml
sbb
and
popf
loop
adc
push
push
dec
int3
into
lods
nop
add
sti
and
jle
cld
adc
shll
xor
mov
test
or
orb
fbstp
add
or
test
and
and
push
lret
adc
addb
xchg
xchg
jmp
xor
les
and
mov
arpl
aaa
imul
push
add
jno
jnp
cmp
std
xchg
stos
mov
add
adc
add
les
mov
repz
xor
jl
push
jns
es
inc
push
xchg
sarb
sub
or
add
add
popa
xchg
aam
mov
add
mov
dec
ffreep
rorb
loopne
or
loopne
idivb
jmp
fldt
nop
mov
pop
add
inc
inc
add
push
lret
push
test
xor
add
popf
pop
je
and
stc
arpl
or
add
mov
out
add
comiss
out
cmp
jle
jb
stos
lahf
shl
add
js
test
setl
lret
cmp
sub
add
adc
add
and
stos
xchg
mov
inc
mov
pop
aas
jns
jge
rcrb
add
cld
mov
hlt
loopne
nop
js
add
xchg
scas
adc
mov
push
add
jo
mov
icebp
add
pop
cmp
adc
push
fwait
push
ret
inc
sahf
lods
fsts
movsl
shlb
jno
enter
iret
add
inc
and
add
pop
push
jge
daa
testl
pop
andl
push
mov
scas
out
scas
cmpb
cmp
cli
jle
xchg
add
les
add
inc
shr
jbe
cli
adc
testb
repnz
xlat
jae
pop
out
pop
dec
mov
or
or
add
addr16
mov
sarb
mov
add
in
clc
addb
stos
pop
xlat
aas
aas
or
add
shll
add
pop
scas
int3
mov
push
mov
hlt
jmp
lods
addr16
jno
movsl
xor
sbb
idivb
js
cmp
add
les
and
xchg
sbb
loope
daa
add
cmpsb
inc
out
push
sbb
inc
jg
push
cld
inc
jmp
push
dec
xchg
add
loop
mov
xor
cmp
out
outsb
push
add
mov
nop
push
mov
lock
jno
adc
mov
add
or
out
push
add
ficoml
cmp
nop
pop
or
inc
inc
and
bound
leave
push
and
pusha
sub
imul
mov
and
xchg
xor
into
add
in
sbb
std
mov
scas
xor
xlat
xchg
sldt
ss
jecxz
cmp
ficompl
je
add
aas
pusha
dec
inc
adc
stos
push
cld
xlat
add
and
inc
xor
jmp
enter
sarb
sbb
or
decl
int
fadds
test
push
push
add
pop
mov
gs
lea
add
ret
subb
lds
ficompl
pusha
sub
add
ret
outsb
cmpsb
jg
cld
std
stos
pop
inc
sub
xchg
add
into
add
cmpsb
negl
cmp
jbe
add
inc
jno
rolb
add
cld
adc
mov
call
mov
push
fisubrl
dec
fwait
push
rolb
mov
fldl
or
mov
sub
jg
dec
mov
add
sbb
imul
mov
mov
std
mov
mov
fwait
xchg
add
daa
xchg
bound
int3
inc
ds
hlt
pushf
mov
sbb
sbb
or
inc
int
ljmp
inc
stos
xchg
fwait
push
lock
adc
mov
sub
fmuls
loop
mov
shrl
or
sbb
mov
and
add
sbb
hlt
into
xor
add
ss
xorb
jb
jo
inc
or
xchg
mov
add
cmp
cltd
and
sbb
mov
pusha
gs
mov
cli
cmp
mov
dec
test
dec
rcrb
or
jns
mov
jmp
aad
out
mov
add
mov
add
add
push
std
les
sbb
and
pop
push
add
aaa
pop
push
arpl
mov
sbb
adc
repz
xchg
dec
sbb
xchg
popa
push
cmp
fadd
jo
cltd
call
testb
pop
jne
imul
add
adc
idivb
repnz
mov
add
outsl
jb
aas
xor
cmpl
subl
scas
mov
mov
add
dec
adc
pop
subl
fimull
stos
inc
add
dec
decb
inc
and
push
and
and
add
or
add
add
fsub
aam
push
out
xchg
add
sub
push
cwtl
jnp
pop
jno
pop
lods
mov
rcrb
in
add
dec
jmp
add
inc
mov
es
cwtl
mov
pop
push
fistpll
add
mov
loopne
imull
xchg
cmp
jnp
stc
xor
mov
push
add
push
mov
stos
das
push
pop
sbb
xlat
push
jecxz
mov
out
sbb
sqrtps
ljmp
out
std
cld
add
ror
aad
pop
add
push
mov
daa
mov
sbb
subb
cli
out
pusha
add
and
aam
cmc
push
mov
xor
addr16
add
sbb
daa
mov
jle
adc
push
xchg
cmp
fisttpl
lret
xchg
orb
nop
pop
negb
popf
nop
or
pusha
dec
pop
sti
imul
add
dec
xor
or
add
ss
ret
jo
mov
adc
in
sub
imul
sbb
add
dec
rcr
jp
arpl
dec
pop
add
xorl
mov
js
es
cmpb
cmp
push
pop
sarl
fldlg2
mov
push
out
mov
hlt
cmpsl
jb
out
jns
cmp
mov
cltd
inc
add
inc
lahf
ds
aaa
or
inc
inc
ret
mov
lcall
jnp
and
cmc
testl
jecxz
push
arpl
stos
cmp
syscall
dec
pop
loopne
lods
ret
lock
dec
adc
cmc
add
imul
or
nop
pushf
add
xchg
in
mov
pop
pop
mov
mov
add
add
xor
and
add
in
lahf
add
rolb
sti
xor
adc
or
scas
mov
cltd
cmp
xchg
mov
test
shrl
popf
mull
inc
or
jge
sub
cmpb
add
andl
push
mov
loop
add
push
mov
fimuls
sbb
cmpsl
fs
add
iret
fcmovu
lfs
stc
loopne
mov
mov
add
mov
js
out
pop
xlat
add
lods
xchg
pop
lret
mov
data16
push
or
add
je
mov
add
add
jne
outsl
jg
mov
cmpsb
add
aad
outsb
sahf
mov
push
add
cmp
in
divb
or
jg
adc
rclb
mov
add
cmc
and
push
inc
test
mov
pop
test
aam
jno
add
or
add
push
into
testb
push
sbb
cmpxchg
mov
loope
cli
add
fmuls
stc
test
hlt
sbb
xor
stos
popl
mov
jno
or
mov
add
mov
pop
adc
test
mov
movsb
mov
cmp
pop
loope
fld
ja,pt
mov
cltd
adc
shll
push
sub
clc
dec
adcb
in
adc
and
into
or
out
lds
add
in
adc
pusha
repnz
aam
push
mov
push
jge
adc
iret
clc
push
push
aad
out
pushf
add
outsl
or
orl
nop
mov
cmp
jge
into
test
ljmp
sarb
cs
mov
and
or
notl
add
cmp
into
movl
sub
dec
cld
pusha
adc
add
lds
mov
or
out
adc
pop
jno
cmp
insl
mov
dec
add
icebp
loope
lock
sbb
lcall
neg
push
pop
cs
imul
jae
bound
push
in
insl
or
inc
nop
dec
stc
sub
xor
fmulp
pop
adc
xor
mov
pmulhw
pop
lcall
clc
aaa
int3
xor
pop
out
out
lds
addb
mull
push
sub
add
in
in
push
pop
cmp
cmp
pop
cld
les
repz
or
cltd
sub
inc
xchg
fwait
or
in
jp
xor
stos
sub
ret
test
fld
jl
cwtl
cli
ret
in
cmp
and
mov
add
inc
daa
stos
mov
nop
add
sub
in
adc
sbb
mov
mov
incl
addb
cmpb
xchg
cmp
add
call
or
add
push
insb
add
lea
bound
or
and
in
jle
ds
add
lret
and
pusha
mov
jae
dec
pop
js
mov
pop
xchg
jae
xor
fidivrs
or
push
fcoms
xor
hlt
add
imul
push
add
repnz
xchg
mov
sub
movsl
bound
into
cmp
in
push
das
sbb
shr
stos
xchg
add
xor
pop
and
int
push
push
xor
subb
xor
jns
arpl
sbb
insl
cwtl
cmpb
nop
call
and
cmp
jge
pop
adc
add
stc
cmp
dec
mov
add
pop
cmp
sarl
out
mov
jo
adc
cmpsb
dec
mov
enter
and
cwtl
mov
in
add
and
fcoml
dec
jnp
or
xchg
mov
mov
sahf
js
inc
adc
mov
pusha
xor
and
cmp
push
push
test
mov
pop
add
clc
push
dec
mov
test
insl
dec
js
nop
je
inc
mov
out
es
pop
dec
add
xchg
mov
add
cmp
lcall
inc
fldenv
mov
cmpsl
in
rcr
stc
fiaddl
in
sbb
movb
or
ficompl
pop
or
or
fwait
cmp
pusha
movl
ficoms
and
dec
imul
loop
insl
jl
cli
push
aas
call
xchg
loope
gs
test
jge
add
jns
inc
sti
mov
push
fdivrs
mov
inc
scas
dec
clc
out
add
sbb
pop
in
add
inc
in
int3
aad
loop
test
adcb
leave
sbb
negl
mov
pop
fwait
ja
rorl
cmp
clc
lret
subb
orb
adc
adc
cmp
dec
and
cmp
inc
jbe
mov
cwtl
imul
call
clc
jle
cmp
aad
push
fsubrs
bound
xor
and
test
jo
sub
fs
adc
jno
push
insl
es
sahf
je
aas
outsl
and
add
out
add
sub
add
clc
xchg
push
adc
cmp
ret
shlb
add
push
mov
cmp
test
jmp
pop
sub
hlt
mov
scas
inc
idivl
mov
or
test
mov
jge
ljmp
maskmovq
idivl
inc
adc
inc
jl
rcrb
pop
daa
push
xchg
dec
push
xor
jbe
mov
mov
add
gs
push
daa
movsb
push
movsl
add
jmp
pop
test
in
xchg
or
xor
add
mov
cmp
cmp
push
test
jne
pop
mov
mov
and
loopne
add
paddb
out
or
inc
add
and
nop
aad
mull
mov
push
popa
add
pop
xchg
add
pop
inc
dec
repz
sub
mov
and
in
add
or
mov
mov
mov
adc
sahf
popa
mov
in
jb
or
idivb
xor
and
fildl
xorb
sub
testb
inc
mov
xchg
pop
xor
lret
or
testl
pop
mov
ds
lea
cmp
mov
xchg
mov
or
sbb
sub
add
repnz
push
mov
or
ja
lahf
sbb
mov
fsubr
xchg
add
cmp
jecxz
xchg
jl
aam
cli
xlat
jnp
and
outsl
xchg
lock
out
test
push
loopne
adc
jle
dec
rorb
mov
mov
loop
ret
into
xchg
scas
roll
cld
sub
mov
add
sub
or
testb
mov
jg
movsl
cmp
jbe
mov
add
mov
or
adc
mov
repz
mov
jbe
xor
cmp
pop
mov
in
outsl
jae
daa
rorb
xchg
add
jns
lret
in
mov
fsubr
add
adc
cltd
imul
andb
fmuls
repz
jmp
je
movhps
outsb
pusha
xchg
rclb
dec
add
xor
fisttpl
fwait
push
adc
pop
add
mov
inc
pusha
movb
es
jb
add
call
pusha
mov
and
dec
sbb
adc
mov
test
sbbb
sbb
add
jp
nop
cmpsb
and
sub
outsb
mov
scas
xchg
xor
clc
sbb
mov
cli
inc
pop
sbb
jl
add
xor
cmp
fiadds
add
outsl
and
add
cmovp
fcomi
xorb
and
pop
leave
rorl
aas
outsb
jne
sti
sbb
ds
addb
shrb
in
inc
inc
mov
push
push
sub
push
add
mov
and
jae
sub
enter
leave
sarb
xchg
cld
xor
cmpb
lret
add
arpl
ret
add
repnz
mov
subl
dec
shrb
add
push
add
inc
or
les
imul
fs
and
and
xchg
aas
add
pop
inc
dec
mov
sbb
pusha
fwait
jp
xchg
or
rorl
mov
inc
add
mov
push
pop
jl
xlat
hlt
push
push
push
inc
adc
add
push
and
and
sub
jno
lock
mov
arpl
xor
les
imul
ret
xor
xor
add
shl
mov
pop
dec
add
pop
mov
sub
sub
mov
push
cmp
xchg
jo
xor
mul
xor
xor
aas
test
movsb
mov
insb
aad
push
adc
scas
xchg
rorb
cmp
lock
and
add
and
xor
inc
andl
dec
sub
into
notb
pop
jno
xchg
add
jbe
pop
subl
add
xchg
out
lods
outsl
mov
xor
sub
aaa
cli
cmpsl
pop
dec
and
jl
call
outsl
std
xor
insl
add
sbb
aas
xchg
or
fwait
int3
mov
nop
hlt
pusha
inc
sarb
and
dec
add
add
jbe
nop
movsb
push
sbb
add
dec
sbb
add
xchg
mulb
arpl
mov
mov
mov
mov
out
add
cwtl
lahf
mov
clc
jne
mov
js
cmpsl
mov
inc
xor
jl
mov
sbb
sbb
lret
outsl
push
mov
sbb
outsb
fcoms
sbbl
jne
ficoml
movsl
pop
dec
repnz
jbe
int
adc
cmp
std
test
shl
inc
xchg
or
or
test
rcll
clc
jbe
cmp
fpatan
mov
dec
insb
and
sbb
lds
mov
outsb
cltd
rclb
mov
jmp
mov
xchg
jno
and
fstps
sub
fiadds
xorl
add
inc
mov
lock
idivb
faddl
xchg
mov
mov
push
xor
data16
lret
mov
and
gs
rolb
pop
mov
hlt
shll
cmc
add
subl
into
add
gs
aam
push
cmp
add
sbb
mov
sbb
mov
aad
mov
jmp
bndstx
call
lret
push
mov
sub
xor
aaa
adc
fisttpl
scas
ffreep
jo
pushf
sbb
add
enter
dec
test
push
push
imul
push
add
or
loopne
sbb
faddl
dec
pop
dec
bound
sub
add
popf
pop
adc
pusha
aas
popl
in
sti
push
push
adc
mov
in
sbb
add
arpl
xchg
fmuls
xor
cmp
and
push
insb
pop
das
xor
dec
push
mov
movsb
and
mov
add
and
imul
cmp
lds
lcall
inc
push
movsl
enter
mov
in
inc
mov
sbb
jle
pop
hlt
xchg
cltd
hlt
add
fcomps
push
icebp
mov
add
les
ds
pop
jns
out
dec
lods
repz
mov
add
cmp
dec
jmp
mov
mov
pushf
xor
cltd
inc
loop
add
lock
aaa
cmp
mov
popa
adc
add
sbb
jb
pop
push
dec
pusha
lret
push
stc
ret
fiadds
push
cld
mov
loope
fcoms
add
cmp
popf
jmp
icebp
add
inc
xchg
cmp
and
fcmovb
pushf
inc
data16
ljmp
inc
in
hlt
lds
negl
nop
int
clc
jbe
sub
dec
mov
dec
pop
sub
jmp
sahf
xchg
inc
add
sbb
and
enter
or
shr
mov
inc
int3
lock
or
xor
add
xchg
sub
jmp
jge
pop
push
inc
xchg
sub
inc
add
mov
sub
adc
test
sbb
add
xor
sub
sub
in
jl
fwait
lods
dec
and
add
nop
dec
shr
lret
enter
mov
add
fiaddl
rcrb
add
and
xlat
nop
aaa
ret
cwtl
pushf
out
lock
inc
add
xchg
into
xor
mov
fwait
loop
cmpsb
rolb
inc
jae
jle
adc
jg
and
mov
rcrb
mov
add
fcompl
jo
loopne
jo
lods
icebp
aam
je
mov
pop
jns
dec
xchg
nop
mov
jne
jo
xor
sub
add
mov
fs
xchg
xchg
adc
xor
xchg
mov
or
mov
inc
sarl
fadds
dec
btr
nop
or
je
out
and
mov
add
jmp
pop
pop
movsb
add
jne
ret
enter
inc
sbb
cli
xor
lock
outsl
imulb
hlt
and
sbb
dec
movsb
and
jge
clc
mov
sub
add
insl
add
jl
sbb
faddl
fcmovnbe
fidivs
and
int3
sbb
imul
loop
dec
mov
rolb
or
mov
add
and
mov
sub
or
repz
testb
pop
sub
mov
xlat
xchg
jb
test
negb
repnz
lods
pop
pushl
sub
cwtl
jbe
pop
lret
or
andb
mov
dec
sub
and
aad
mov
insl
or
or
iret
add
int
mov
jecxz
xor
sbb
jbe
pop
add
insl
mov
or
pop
push
out
xor
add
push
test
inc
rclb
jp
lahf
xchg
lock
les
add
shrl
sub
mov
push
out
cmc
add
mov
mov
roll
lret
rclb
sbb
imul
test
add
inc
jle
inc
movsl
and
mov
pusha
xchg
mov
icebp
sbb
movsl
sbb
xor
int3
and
mov
xchg
dec
add
shr
call
and
out
mov
sbb
push
rcll
cmp
js
movsl
bound
imul
pusha
adc
jno
shrb
add
test
dec
aam
in
push
add
and
test
sub
push
add
jg
xchg
push
and
les
add
cmp
and
jnp
and
shrl
mov
cwtl
mov
call
push
arpl
xchg
and
add
icebp
lret
xchg
fs
add
das
push
mov
imul
jb
inc
daa
mov
orb
jmp
mov
imul
stc
sarl
aam
stos
xlat
jb
mov
test
inc
push
rol
imul
test
sbb
push
mov
mov
add
or
jle
push
mov
sub
sbb
mov
cmpsl
xor
movsl
ret
addb
sbb
jp
data16
add
mov
hlt
jmp
out
pop
leave
shlb
popa
call
decl
stos
enter
popa
cmp
test
roll
xor
cmp
mov
pop
outsb
sub
dec
ja
cmpsl
call
and
and
insl
cmp
sbb
cltd
clc
orb
sbb
in
inc
pushf
add
test
addr16
xor
adc
mov
inc
int3
jno
add
jo
pop
sub
aam
xor
lds
jo
inc
bound
fdivl
fwait
xor
xchg
into
sub
test
pop
pop
inc
les
call
pop
mov
and
mov
mov
xchg
fs
aam
xor
cmp
pop
add
scas
add
insb
and
or
fsubrs
out
subb
addl
fstl
and
xchg
nop
mov
repz
jle
xchg
adc
push
gs
cli
sub
pusha
sbbb
mov
mov
jns
add
mov
mov
push
sub
clc
jecxz
imul
lock
fs
sahf
in
add
adc
pop
cmpl
sbb
fnstsw
jo
push
xor
pop
sarl
push
dec
or
es
pop
xchg
cmp
insb
add
ffree
or
mov
movsl
mov
es
hlt
ljmp
sub
sbb
push
push
add
mov
loope
jmp
push
mov
inc
jns
mov
and
sub
inc
lods
mov
inc
adc
push
cmpsb
xor
adc
sahf
xchg
lret
adc
imul
xchg
fisubl
xor
xchg
xlat
add
cwtl
push
mov
dec
jle
add
dec
add
sbb
mov
xchg
adcl
add
xchg
stos
xchg
jle
add
aad
mov
fs
mov
add
rcr
out
add
pop
inc
fadd
mov
xchg
add
adc
fisubs
add
dec
sbb
out
rorb
xorb
pop
sti
adc
pop
and
inc
cld
jnp
clc
ss
dec
jno
add
pop
mov
incb
mov
adcb
imul
sti
sub
insl
xor
jae
lock
jp
ss
int3
inc
pop
xchg
rclb
cwtl
add
jb
rcl
ret
js
pop
add
mov
xchg
jo
popa
das
dec
pop
cmp
shll
lods
inc
fsubrl
cmpsb
bound
fs
lods
xchg
shll
or
mov
je
arpl
cltd
daa
push
pop
push
jbe
jne
mov
add
sub
shl
sbb
or
pop
push
shrl
inc
xor
cmp
loop
lea
or
add
int
xor
sub
dec
loopne
cmpsb
mov
pop
pop
dec
mov
push
popa
adc
scas
and
inc
sti
add
int
sbb
adc
jmp
pop
stc
cmpsb
stos
std
xchg
ja
pop
and
inc
mov
push
sub
fst
xchg
cwtl
cwtl
sbb
js
mov
enter
ja
mov
add
jl
aam
dec
pop
outsb
sub
stos
xorb
les
test
dec
add
popf
loopne
jge
idivb
mov
add
xlat
inc
pop
jne
nop
inc
dec
inc
add
lret
inc
mov
jae
dec
xchg
and
fbstp
push
mov
xchg
lea
test
mov
xorb
xchg
mov
or
aas
movsl
cwtl
pop
or
sbb
nop
cmpsl
sub
or
dec
pop
jecxz
inc
fbld
push
aas
cmc
push
add
ss
ds
cld
mov
fcoms
add
xchg
xchg
movsl
jno
add
adc
and
clc
nop
push
mov
gs
and
add
ja
push
in
mov
adc
push
sarb
je
mov
mov
idivb
pop
push
loopne
call
ds
push
push
push
sub
addb
sub
dec
mov
pop
lods
add
jo
lds
jne
pop
popf
xchg
out
lret
or
cmp
xor
outsl
jnp
xchg
repz
mov
push
hlt
sbb
rorb
xchg
int3
jmp
sti
lcall
and
inc
das
ljmp
sub
lret
push
rcrb
mov
imul
xchg
arpl
push
inc
add
lahf
push
mov
mov
push
mov
dec
adc
xchg
xchg
push
sbb
or
or
jl
jge
pop
in
push
add
xchg
jb
pop
cmp
mov
inc
adc
push
or
jb
fcoms
in
in
or
notb
lods
fildl
test
fcompl
scas
cltd
xchg
sub
sub
or
std
fsin
inc
adc
daa
sub
call
mov
mov
mov
test
add
std
inc
repz
jb
js
imul
nop
sub
xor
outsb
and
add
mov
pop
mov
xor
aam
and
fildl
cmp
jne
enter
fwait
arpl
mov
in
pop
push
mov
lcall
and
and
dec
adc
adc
jmp
movsl
fnstenv
dec
push
pop
leave
add
jbe
or
sub
jle
pop
out
mov
xchg
inc
out
xchg
sbb
xchg
mul
adc
fistpl
add
repnz
sub
add
or
dec
push
cltd
jecxz
out
add
push
aas
xchg
add
jae
ret
add
ffree
insb
mov
rclb
std
add
xchg
out
add
in
xor
clc
jae
pop
xchg
pop
sbb
add
addb
cmp
and
jg
pop
sbb
add
adc
or
xchg
in
cmp
into
adc
movsb
mov
and
sub
xor
and
mov
mov
inc
xor
leave
add
pop
ja
push
fcmovb
cmp
add
jns
mov
dec
flds
cmp
pop
cltd
or
push
pop
or
cltd
movsb
data16
scas
mov
mov
mov
push
pop
packuswb
fldcw
fwait
xchg
and
ljmp
mov
testb
pop
xor
loopne
push
xor
and
cmc
or
jg
xchg
push
aad
getsec
pusha
push
dec
pop
sbb
cltd
lock
sub
xchg
add
ret
add
or
aam
mov
mov
xor
adc
sti
pop
sub
mov
jmp
rclb
and
loopne
imul
aas
subl
out
xchg
jae
fiaddl
mov
cwtl
les
mov
jo
scas
test
add
les
add
ss
xlat
xor
flds
add
push
test
mov
cmpb
and
dec
outsl
movsb
pop
xor
test
mov
imul
ret
js
add
mov
jle
call
inc
dec
test
inc
int3
sub
cltd
xchg
shlb
fnsave
lods
push
push
leave
test
and
pop
jmp
cmp
js
xor
enter
lods
dec
dec
testl
stc
fistpl
pop
add
outsb
add
ret
jno
addb
cmp
mov
out
pop
push
in
mov
inc
add
shlb
adcb
push
je
cmp
sarb
imul
push
hlt
and
jae
cmp
push
adc
out
add
mov
in
mulps
nop
sbb
mov
mov
arpl
inc
fs
jne
mov
cltd
push
dec
pusha
inc
push
fstps
sbb
fidivs
jg
aaa
xchg
mov
lock
adc
sbb
jge
inc
pusha
call
dec
push
mov
stos
imul
dec
xchg
fcompl
or
push
jne
mov
mov
sbb
test
lret
leave
mov
test
das
fwait
inc
nop
test
fiadds
xchg
rol
pop
pop
icebp
add
cmp
cmpsl
xor
int3
out
in
ss
pop
mov
rolb
fs
add
sti
inc
gs
shl
dec
pop
sub
stos
sti
sbb
jle
add
mov
mov
mov
cwtl
pop
in
aam
fisubs
repz
sub
or
add
jecxz
rcl
add
stc
xchg
cmp
call
dec
pusha
sbb
lret
add
out
dec
andl
jno
cld
inc
mov
imul
jne
movsl
inc
in
mov
mov
jns
or
aam
and
or
ss
or
xor
icebp
xchg
mov
cmp
outsb
fdiv
jns
jno
fs
jecxz
cmpsb
cmp
lock
cs
lods
pop
ret
jne
lret
xchg
pop
mov
aas
push
aas
xchg
mov
pop
insb
pop
sar
jne
push
add
sub
mov
push
pushf
add
leave
mov
out
add
mov
add
fs
cltd
cmp
add
mov
ds
jecxz
shl
pop
movsb
and
add
clc
inc
inc
lods
les
jae
mov
add
mov
cmp
insb
aam
aaa
add
in
mov
add
adc
pop
jge
mov
and
into
loope
mov
mov
lret
adc
jo
push
sub
xchg
xchg
mov
fldt
mov
adc
inc
sub
sub
aam
or
ds
daa
cmp
adc
loop
add
popf
dec
aaa
ljmp
pop
and
mov
jge
test
rcrb
in
add
mov
sbb
inc
pusha
data16
insb
dec
pop
lds
in
lahf
pop
addb
and
pusha
add
and
in
mov
xor
add
xor
es
and
rolb
lock
inc
push
sbb
shr
add
cmpsb
loopne
add
stos
fs
add
movsl
pop
pop
pop
or
pop
adc
jo
cmpsb
or
fsubrl
rcll
mov
and
cmpsb
xlat
pop
mov
pop
push
pop
xor
and
pop
add
cltd
stos
testb
mov
out
sbb
pushf
mov
add
sbb
mov
aas
sub
add
xlat
add
and
mov
adc
mov
sbb
add
jecxz
and
int
outsl
sahf
or
add
push
scas
jne
mov
add
loopne
adc
imulb
mov
jbe
and
lret
aam
int3
push
lahf
inc
push
sub
adcb
cmp
clc
mov
xchg
jecxz
mov
add
aam
outsl
adc
xor
xchg
out
jne
add
push
xchg
fiadds
sub
jmp
orb
pop
pop
mov
sbb
fisttpll
sbb
sbb
push
pop
pushf
add
decl
add
fs
cmp
fmulp
movsl
inc
aam
pushf
test
insb
loopne
adc
or
add
inc
push
lods
pop
inc
out
xor
cmp
pop
lret
imul
bound
mov
inc
or
dec
int3
clc
in
pushf
add
push
sbb
xchg
push
ret
jno
add
stc
nop
adc
in
xchg
fwait
cmp
pop
and
es
jbe
sub
pop
cwtl
cmp
andl
push
add
lods
pop
imul
mov
jbe
into
add
sbb
mov
adc
and
or
test
rclb
inc
cwtl
cmp
dec
or
push
les
rcrb
je
adc
jmp
xchg
fimuls
and
dec
shlb
jl
outsb
xchg
push
add
inc
pop
jne
add
sub
pusha
mov
pop
mov
scas
adc
xor
cmp
pushf
pop
mov
inc
inc
fcmovnu
pop
pop
mov
sub
xchg
dec
add
je
ret
adc
lock
in
adc
andb
xchg
and
fwait
mov
xchg
inc
decb
test
add
mov
aad
orb
arpl
es
push
add
xor
xchg
push
test
mov
sub
sub
adcb
fdivrs
push
xchg
insb
stos
xor
dec
arpl
add
insb
test
jbe
pop
daa
push
mov
xchg
pusha
ret
mov
aad
popa
mov
mov
sub
xchg
inc
adc
mov
hlt
xchg
or
subl
dec
mov
pop
xchg
pop
pusha
add
in
jae
and
testb
cmpsl
movsl
jno
cli
and
jmp
or
dec
pop
pop
jp
and
jle
pushf
loopne
adc
mov
sub
lret
cmp
test
das
and
jecxz
scas
push
fbld
xchg
subl
push
std
jl
or
int
imul
jae
outsb
cmp
inc
or
imul
movsl
add
lods
xor
cmp
repz
inc
and
icebp
popf
pusha
shll
fwait
call
mov
fmuls
out
push
push
ret
push
mov
and
repz
loopne
nop
inc
add
or
sub
and
fistps
test
rclb
xor
popa
in
cmp
add
jge
call
sbb
or
add
pop
dec
or
shll
add
repnz
mov
push
and
lods
rolb
clc
add
dec
ret
mov
jno
adc
add
or
ss
nop
cli
inc
daa
push
dec
es
fwait
xor
mov
sbb
dec
call
outsl
fdiv
mov
in
iret
in
in
fldenv
repnz
pop
sbb
insl
loop
faddl
pop
mov
cld
add
dec
aam
or
fs
add
push
mov
call
inc
scas
jbe
mov
jl
sub
xor
xchg
add
push
aam
lods
inc
std
movsl
leave
ret
push
ja
push
add
in
out
sti
test
or
sub
movsl
xchg
push
add
insb
loopne
loope
cmp
stc
repnz
jg
arpl
add
call
pop
xchg
mov
jne
lods
popf
ret
xchg
add
pop
aad
cmp
inc
adc
cmp
add
xchg
repz
mov
jnp
pop
pop
rol
test
push
mov
arpl
ds
or
fisubs
loopnew
sub
and
in
jge
inc
add
adc
insl
shlb
push
pop
xchg
inc
push
xchg
xor
cmc
mov
mov
and
call
adc
daa
fwait
dec
daa
in
xchg
addl
stos
js
mov
push
hlt
sub
in
push
orl
push
int3
add
lock
sbb
or
insb
mov
jb
or
mov
imul
or
jge
add
xor
ljmp
mov
push
xor
in
xlat
add
jns
xchg
or
sbb
pop
cmp
cmpsb
fcompl
clc
cmp
or
pop
pushf
add
aas
daa
fcoml
nop
sbb
icebp
add
mov
and
add
cmpsb
push
sbb
cltd
test
shl
and
daa
sub
int
cmpsb
test
ret
adc
lods
add
sub
xor
mov
adc
jl
xchg
je
add
push
sub
add
sbb
cwtl
mov
jmp
cmp
jno
inc
push
lock
and
ds
inc
sub
mov
dec
in
das
sub
xchg
push
adc
add
pop
inc
sarl
add
xchg
aaa
xor
adc
lea
cmp
xor
mov
enter
in
lret
add
add
subl
inc
imul
mov
and
jge
jge
push
in
stos
cmp
xorb
test
sub
icebp
ret
neg
add
dec
jmp
cld
jae
cwtl
add
mov
xchg
xor
test
into
jne
cli
cli
loope
in
mov
inc
add
ficomps
stos
pop
frstor
mov
or
adc
cli
add
outsb
js
inc
popa
les
sub
rcr
cmpsb
pop
imul
mov
in
loop
cmp
xor
jne
jmp
mov
nop
call
and
jg
sbb
and
fcoms
sub
add
out
hlt
xchg
daa
movsl
cld
push
test
xchg
push
sahf
add
cs
xor
shlb
add
cmpb
hlt
scas
xorl
fistps
rcr
pop
call
adc
and
sub
mov
js
mov
and
mov
aas
or
out
jo
adc
es
pop
add
adc
lock
or
fdivp
ret
jae
movsl
test
outsb
and
les
js
mov
outsb
and
test
popf
and
out
rcrb
dec
sub
imul
mov
sub
and
shl
imul
push
sbb
pop
shr
add
dec
cmpsb
int3
sarb
sbb
and
push
jle
shrl
adc
fidivl
es
push
inc
sbb
test
adc
push
test
jp
mov
sbb
mov
mov
aad
mov
orb
pusha
ficoms
fwait
add
pop
inc
nop
in
adc
cmp
mov
cmc
ffree
or
mov
jno
add
icebp
lret
cwtl
add
or
jb
push
xlat
ljmp
inc
dec
div
hlt
mov
xchg
adc
insl
outsl
lret
pushf
dec
inc
int
jge
insb
scas
dec
add
arpl
inc
pusha
aam
cmpsl
xchg
cld
add
mov
faddl
movsl
out
movsb
jae
iret
add
in
shr
add
fnstsw
mov
adc
inc
add
mov
inc
ljmp
or
lret
ja
add
out
lods
inc
sub
xor
pushf
faddl
imul
int
add
in
les
cmp
sub
push
push
jb
jle
addb
cmp
ret
pusha
and
outsb
jno
push
cmpsl
dec
adc
push
add
mov
pop
push
sbb
fsubrl
stos
movsl
and
jo
cmp
in
add
inc
push
mov
and
add
call
cwtl
and
mov
sbb
push
jb
dec
inc
in
add
add
lahf
dec
pop
inc
inc
push
or
dec
popf
jo
add
jne,pn
mov
inc
sbb
adc
cmp
jl
adc
pextrw
mov
inc
cmp
add
mov
add
jmp
cmp
frstor
pop
inc
mov
adc
mov
outsb
loopne
add
test
addb
jecxz
dec
xor
xor
or
push
cs
dec
adc
aaa
jle
nop
inc
push
jle
add
in
cmp
ret
inc
push
xor
das
inc
add
pop
sbb
xchg
jg
cld
adc
sub
daa
data16
sbb
jmp
add
sbb
out
add
ss
or
xor
in
sub
jo
test
xchg
nop
push
sti
es
aam
jbe
cmp
add
adc
inc
sub
les
add
jl
ljmp
aaa
or
movsb
add
adc
push
xchg
psubsw
push
add
sub
add
add
or
aad
int3
hlt
lret
popa
fisttps
scas
xor
test
dec
sbb
push
aaa
jne
lods
sub
and
push
sbb
pop
add
cltd
int3
jg
jmp
and
call
dec
outsl
add
xchg
inc
popf
sbb
and
addb
clc
fstpl
rorb
mov
cli
cmp
fs
xchg
lds
add
das
jno
int3
add
int3
pop
pop
pop
test
imul
popa
cmp
es
ret
andb
mov
sub
addl
inc
int
fs
es
push
or
cmp
lea
dec
inc
or
adc
mov
mov
add
test
aas
das
bound
out
xchg
fwait
arpl
int3
add
aas
add
mov
xor
push
push
ret
xchg
inc
mov
popa
fldl2e
xor
adc
ret
fwait
cmp
rorb
mov
jnp
pop
pop
sub
lret
js
push
push
add
sbb
sub
mov
in
push
mov
orb
or
jmp
lret
fs
and
mov
cmpsb
dec
and
mov
inc
sub
push
dec
mov
xor
cld
sahf
jmp
add
das
cmc
fdivrl
adc
push
and
cwtl
into
mov
push
ret
les
mov
in
mov
int3
sar
or
and
pushf
movsb
call
inc
mov
cwtl
mov
xchg
les
mov
icebp
scas
sbb
pusha
fsubr
dec
fwait
add
jle
rol
std
mov
push
xorb
dec
call
and
inc
mov
out
sbb
cmpsl
pmuludq
jnp
mov
sub
jbe
add
xchg
add
rolb
add
inc
nop
movsl
xor
push
add
add
inc
push
mov
sti
adc
xchg
mov
in
dec
mov
add
xchg
jb
cmp
out
bound
aam
daa
mov
nop
adc
add
outsl
aaa
mov
cmp
das
pop
add
aad
lahf
dec
or
fcoml
je
lods
add
std
mov
es
mov
adc
daa
cs
dec
jl
push
dec
aaa
add
cmp
ret
lock
out
add
and
xchg
sub
mov
ret
std
mov
dec
ljmp
ret
or
fwait
nop
add
fsub
mov
and
into
cs
cmp
fwait
jns
inc
adc
add
outsl
in
popa
xchg
xor
lea
jno
leave
cltd
mov
jg
lods
mov
into
sub
add
fwait
dec
lods
pop
add
mov
stc
je
sbb
enter
mov
cmp
and
mov
xchg
ljmp
lret
jne
jno
call
in
xchg
pop
pop
add
rcl
aaa
add
fisubs
dec
pop
nop
lock
push
ret
mov
jo
sbbl
inc
add
or
mov
mov
and
mov
rolb
jl
test
pushf
loope
dec
pop
adc
inc
xchg
dec
adc
pusha
enter
repnz
cmp
push
inc
pop
add
adc
push
sub
or
push
ret
adc
pushl
rcrl
and
sub
aaa
xchg
add
sub
add
fstl
aam
loopne
inc
mov
xlat
and
cmpsb
lahf
mov
loop
add
pop
out
xchg
aad
jns
icebp
xor
pop
adc
std
stc
mov
sub
and
aam
xchg
add
sarl
pop
ds
mov
fdivrl
pop
pop
and
inc
jle
xchg
jo
xor
dec
or
pushf
inc
pop
xchg
mov
xchg
dec
mov
aam
scas
andb
xchg
adc
aad
cs
mov
pmaxsw
add
mov
cltd
in
clc
aam
mov
cmpb
and
mov
jmp
xchg
call
ret
add
scas
push
cmp
xorps
scas
popa
add
and
xchg
lods
movsb
repz
mov
jb
mov
jg
mov
arpl
sub
push
repz
test
mov
push
into
sub
cmp
xor
jnp
aas
lahf
add
hlt
mov
mov
adc
sub
orb
cwtl
push
mov
ljmp
mov
and
mov
sbb
inc
sub
add
insb
cmp
cltd
jnp
rclb
push
ja
mov
and
das
bound
clc
or
nop
movsb
sbb
mov
adc
lods
movsb
sbbb
xor
pop
test
add
outsb
adc
orb
jecxz
add
sbb
add
sub
loopne
cmp
out
mov
dec
dec
test
cld
adc
popf
insb
arpl
shlb
imul
int
repnz
lds
fs
stc
jl
fcompl
jae
adc
pop
mov
and
or
fadds
fiaddl
dec
or
ffree
mov
or
es
daa
jnp
cmpsl
add
mov
cmp
jns
dec
add
nop
jl
ds
mov
clc
xchg
nop
and
jae
lods
insl
sub
aas
mov
add
fisttpl
scas
icebp
sub
mov
das
push
scas
std
popa
add
inc
xor
sub
xor
or
cmp
js
add
movsl
outsb
and
dec
mov
aam
pop
sbb
xor
pusha
decl
cli
mov
test
pusha
dec
pop
sbb
or
out
test
insl
out
lea
add
movsl
int
adc
add
addl
fwait
dec
stc
rolb
rolb
push
mov
cltd
dec
and
jg
sbb
cmp
or
js
cwtl
push
enter
leave
sbb
dec
mov
and
mov
adc
add
inc
sbb
push
scas
imul
and
orb
mov
jge
add
je
pop
lock
in
add
ds
sbbl
lret
ja
shrl
lret
or
push
ret
pop
sub
lods
nop
dec
sbb
add
stos
and
sbb
mov
sub
pop
xchg
int3
subl
arpl
and
add
leave
loop
loop
add
inc
enter
inc
mov
jnp
add
js
mov
or
in
imul
cmp
mov
sub
aaa
adc
or
ja
or
xchg
add
das
xor
cmp
insl
loopne
cmpsb
add
mov
xchg
cld
xor
lret
cwtl
les
roll
push
in
fldl
xor
sbb
stc
jne
add
outsl
cli
inc
lods
test
adc
out
nop
movsl
clc
add
sub
dec
add
ret
cmp
fcompl
add
xor
loop
inc
add
movsl
add
ds
shlb
das
sbb
sbb
jle
add
cltd
dec
lds
out
and
add
add
xchg
in
add
je
out
ljmp
push
dec
jle
dec
sti
push
ror
pusha
sub
add
fucom
and
mov
stc
fldcw
xchg
mov
and
push
addr16
jle
adc
cwtl
xchg
sbb
sub
adc
add
cmpl
mov
mov
dec
pop
sub
xor
jp
dec
push
daa
push
sbb
pusha
jg
or
inc
dec
and
push
rcl
add
lods
add
jo
push
psubusw
jge
sub
adc
addb
out
in
jbe
cltd
jae
daa
mov
insl
mov
ret
dec
js
pop
add
out
adc
shlb
mov
add
clc
fisttpll
jb
mov
pop
movsl
ret
test
cmp
daa
rorb
mov
push
adc
or
xchg
add
inc
adc
xchg
mov
iret
cmp
ucomiss
mov
out
ds
add
fisttpll
pop
cs
pop
leave
loopne
sti
pusha
lahf
jo
aas
dec
mov
popa
add
mov
shrb
imul
test
xor
das
data16
mov
leave
xor
or
addb
pop
repnz
cmpsl
mov
fidivs
fs
pop
add
repnz
or
fisubl
sbbb
in
rolb
pop
shlb
repnz
loopne
xchg
and
and
cmp
dec
mov
jns
jb
aad
pushf
add
in
or
rolb
clc
int
cmp
leave
pop
dec
sub
nop
mov
popf
orl
loopne
test
jbe
jnp
lods
xor
cmp
fmull
pop
rcrl
push
push
addr16
sbb
aam
sar
out
cmp
add
fwait
lock
daa
dec
inc
sub
push
clc
inc
or
sbb
rcrl
psubq
dec
ss
xor
js
or
out
lret
sub
imul
push
cmpsl
push
pushf
daa
inc
jg
mov
xor
add
repnz
mov
scas
out
and
and
push
dec
or
jg
jl
inc
popa
dec
inc
and
sti
inc
and
cltd
jecxz
push
imul
dec
xchg
xor
xor
andl
cmp
and
add
test
mov
movsb
add
lret
in
insb
add
adc
or
dec
pop
aam
nop
sub
adcb
fdivr
add
push
jg
js
xchg
adc
les
test
push
mov
sbb
out
and
jae
or
sub
dec
mov
or
mov
shl
mov
dec
inc
loopne
scas
push
ja
movsl
or
sub
cmp
push
loop
les
cli
lock
pop
pusha
call
fwait
dec
jp
add
add
mov
or
aas
add
sub
dec
andb
inc
cmp
jge
mov
add
mov
cmpsl
iret
dec
stos
cld
jp
add
inc
jl
mov
ljmp
sbb
fwait
jle
enter
cmp
ds
push
imull
jno
and
jmp
mov
add
gs
shll
lds
or
pushl
js
cmp
jno
xchg
pop
xor
sbbb
and
xor
cld
cmpsb
add
dec
sub
pop
ret
out
cmc
ja
cmpsl
hlt
xchg
outsl
and
mov
add
cmp
and
xchg
rorl
adc
mov
iret
ss
mov
cltd
adc
and
or
inc
testl
adc
mov
pop
sub
push
inc
pop
aad
cmpb
idivb
cwtl
pop
push
cmp
test
sbb
leave
fdivs
jg
add
test
adc
lea
inc
inc
cmp
int
das
dec
pop
bound
popf
test
ja
dec
sub
pop
fs
data16
fsubs
fisttpll
mov
pop
jne
sub
icebp
lcall
dec
xor
mov
add
iret
mov
int
hlt
push
xor
push
pop
add
or
jne
pop
daa
xor
mov
test
cmp
std
cli
in
fdivrs
or
xchg
pusha
mov
mov
fwait
mov
pushf
fbstp
outsb
sub
and
adc
add
jecxz
or
push
mov
out
inc
add
cmpl
lock
mov
adc
adc
sbbb
test
mov
lods
js
imul
repnz
xchg
sti
sub
arpl
lock
mov
addr16
add
adc
cmc
cmp
add
ret
call
nop
rorl
xor
xchg
mov
push
popa
add
inc
add
push
jmp
lds
mov
test
nop
cwtl
add
push
jb
push
add
sbb
add
sub
lock
fwait
lods
fisubl
add
popa
in
faddl
addr16
xor
jae
pop
stos
sbb
movsb
add
push
and
jge
or
inc
mov
add
fldt
xor
and
lock
push
sti
push
movd
pop
mov
add
nop
dec
xchg
mov
mov
pop
mov
and
ljmp
inc
fsubrs
push
add
cwtl
mov
mov
mov
int
push
je
popa
fimuls
add
aad
or
xor
cld
mov
xchg
icebp
ja
sbbb
test
lock
sbb
loopne
sbb
push
jp
and
adc
adc
mov
insb
cmp
ljmp
add
sub
inc
icebp
xchg
pop
ficompl
and
xchg
sub
mulb
inc
lcall
cld
inc
out
rorb
xor
and
ret
add
lods
cmp
sub
pop
dec
and
sahf
mov
les
dec
push
dec
addl
cwtl
lods
or
cmc
xchg
aas
repz
mov
mov
sbb
addb
dec
sub
data16
mov
pop
adc
in
clc
in
mov
cltd
pop
or
xor
aam
or
sub
popa
ss
jae
dec
mov
test
dec
ret
jno
mov
push
add
adc
int
mov
mov
jg
add
jle
in
push
stc
jmp
jae
adcb
adc
add
adc
shrb
sub
add
aad
fs
xchg
cld
add
dec
into
pop
sahf
scas
flds
daa
mov
outsb
stos
or
dec
sarb
xchg
cwtl
add
aas
adc
fadds
and
jge
dec
add
cmc
pop
xchg
dec
add
or
push
cmpb
in
cwtl
cmp
push
or
mov
sbb
push
imul
jl
dec
xchg
pop
mov
pusha
and
rclb
int3
cltd
pop
mov
flds
adc
and
fisubs
test
add
xor
lea
sub
movsb
inc
dec
jae
shlb
cmp
cs
nop
push
add
pop
jae
mov
dec
pop
mov
test
lods
mov
loopne
add
fcompl
sub
movsl
inc
add
inc
jne
cs
or
rolb
dec
sbb
and
xchg
imul
add
daa
adc
push
mov
mov
cmp
add
fisttpll
fs
lock
mov
rcrb
mov
shll
xor
sub
jmp
sbb
stos
jbe
cmpsl
cmp
mull
scas
jmp
and
shrl
mov
or
clc
jl
or
jecxz
lods
cmp
adc
or
push
xor
pop
add
sahf
cwtl
andl
and
push
pusha
sub
addr16
pop
mov
xor
sbb
adc
sub
fwait
push
call
roll
fstps
idiv
ret
inc
dec
fs
and
ja
add
lods
lret
inc
leave
add
js
lock
orb
add
ficoms
sub
andb
out
mov
fwait
nop
dec
test
and
enter
iret
sub
and
jo
jne
test
loopne
subb
pop
sbb
push
pop
push
lds
lock
sbb
pop
inc
jmp
mov
xor
push
and
nop
mov
mov
lock
add
pop
arpl
mov
xlat
sub
clc
push
push
shr
pushf
cmp
add
and
push
arpl
pop
rorl
and
hlt
push
sbb
xor
nop
sbb
cmpsw
and
or
cli
jns
add
cwtl
jmp
add
mulb
hlt
sbb
xchg
pusha
mov
xchg
mov
pop
ja
jnp
mov
jbe
dec
add
in
addb
add
add
add
add
add
add
add
add
or
add
add
addb
add
addb
add
addb
add
add
fadd
add
lret
addb
add
add
add
incl
add
incl
add
incl
add
incl
incl
lock
incl
movsb
mov
incl
mov
incl
mov
incl
imul
add
incl
and
stos
incl
add
mov
add
dec
jae
add
push
add
jecxz
add
stos
incl
imul
add
push
incl
add
add
cmp
xchg
add
and
push
add
aam
add
mov
add
incl
dec
dec
incl
and
add
add
add
add
add
add
add
add
push
add
aam
add
mov
add
imul
jae
incl
push
and
incl
dec
add
add
add
add
add
lock
add
mov
add
mov
add
imul
mov
and
incl
xchg
add
add
mov
add
jae
xor
push
add
aam
add
mov
add
mov
add
imul
decl
add
and
incl
faddl
faddl
mov
add
add
push
add
aam
add
mov
add
mov
add
imul
decl
add
and
stos
add
add
add
add
push
add
add
aam
add
mov
add
mov
add
dec
jae
jmp
push
add
add
mov
add
add
and
add
aam
add
mov
add
mov
add
dec
dec
add
and
add
faddl
add
mov
add
add
add
push
add
add
jecxz
add
mov
ljmp
imul
jae
add
push
and
add
dec
add
mov
xor
add
add
push
sbb
add
lock
jmp
mov
call
mov
inc
imul
mov
and
add
xchg
add
mov
bound
add
add
push
xor
add
call
add
pushl
add
ljmp
decl
jmp
add
faddl
add
xchg
add
jae
add
push
push
add
lock
add
pushl
add
ljmp
mov
jmp
add
mov
add
dec
jae
add
push
add
jecxz
aam
pushl
add
decl
push
jmp
add
add
cmp
xchg
add
and
push
add
aam
aam
mov
mov
mov
mov
imul
add
dec
add
incl
add
faddl
add
mov
add
add
add
push
add
aam
jecxz
mov
movl
imul
add
jae
and
call
add
dec
add
mov
xor
add
add
push
sbb
aam
lock
call
add
movb
mov
add
ljmp
add
mov
bound
add
add
push
xor
aam
incl
mov
incl
mov
incl
imul
add
incl
and
incl
add
faddl
add
xchg
add
jae
add
push
push
add
repnz
out
add
fcmovu
add
into
into
add
ret
mov
mov
stos
stos
stos
add
xchg
xchg
add
jp
add
outsb
add
bound
push
push
push
add
dec
add
ds
xor
add
es
sbb
add
push
push
add
incl
call
lea
call
adc
add
incl
add
add
decl
call
lea
add
call
incl
add
adc
lea
add
adc
incl
add
decl
add
call
adc
adc
call
incl
add
and
and
adc
adc
incl
add
and
and
adc
incl
add
adc
and
adc
add
adc
and
adc
dec
adc
adc
adc
incl
add
dec
add
add
call
lea
dec
dec
dec
add
add
add
adc
lea
add
dec
dec
dec
add
add
add
decl
add
dec
add
call
incl
add
dec
add
add
adc
incl
dec
dec
dec
incl
add
add
dec
dec
dec
dec
adc
dec
dec
adc
add
or
add
or
or
ret
or
ret
and
sldt
add
adc
add
adc
add
push
pop
push
pop
push
sbb
push
sbb
sbb
sbb
incb
ud0
rorb
inc
ud0
sar
inc
incl
add
ds
cld
jle
clc
inc
push
inc
jmp
inc
inc
decl
aas
cld
jg
clc
push
jmp
inc
decl
aas
incl
add
add
add
and
add
add
add
jne
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
adc
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
xor
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
add
je
jae
add
or
jl
insb
lods
lods
mov
int3
mov
add
xor
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
or
jl
insb
lods
lods
mov
int3
mov
add
cmp
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
or
jl
insb
lods
lods
mov
int3
mov
add
cmp
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
or
jl
insb
lods
lods
mov
int3
mov
add
cmp
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
jl
insb
lods
lods
mov
int3
mov
add
xor
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
or
jl
insb
lods
lods
mov
int3
mov
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jl
insb
lods
lods
mov
int3
mov
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
or
jl
insb
lods
lods
mov
int3
mov
add
js
add
