push
call
ret
ret
jns
inc
adc
push
adc
cwtl
push
shll
mov
test
pushf
shll
mov
aam
mov
adcl
push
fldlg2
pushf
pop
mov
mov
dec
cs
insb
cmp
fcompl
mulb
loopne
xor
xlat
fildl
leave
or
repnz
inc
push
hlt
xchg
jp
dec
leave
push
lcall
mov
jp
adc
mov
adc
fdivrs
bound
mov
fs
pop
cmpb
cli
and
xchg
pushf
add
adc
push
out
dec
pop
outsb
hlt
mov
cmp
cmc
movl
les
pop
dec
cltd
js
fcompl
test
push
nop
mov
mov
std
mov
pminub
mov
pop
lea
adc
es
outsl
mov
xlat
test
or
pop
cmp
adc
jp
lret
icebp
imul
add
movsb
and
xchg
movsl
pop
ffree
jnp
js
lret
outsb
and
xor
test
pop
std
jge
ds
xchg
lods
adc
stc
test
ret
mov
ret
xchg
inc
adcb
dec
sarb
jge
stos
sub
cmp
and
sub
out
push
cmpsl
mov
add
fsubrs
push
scas
js
repz
enter
push
push
bnd
insl
mov
insl
xor
sub
jle
push
and
cmpsl
outsl
fidivl
mov
mov
sarb
imul
adc
icebp
dec
push
mov
pop
iret
pop
add
in
adc
sub
popa
movsb
lret
push
mov
pop
push
jns
ds
xor
cs
push
pop
aam
push
iret
sarb
jge
push
push
arpl
push
adc
decl
push
jo
or
push
inc
nop
ds
mov
inc
lods
xlat
in
push
faddp
mov
or
ret
add
iret
in
daa
ret
aad
jl
aam
test
notl
lcall
dec
and
std
xor
rcrl
adc
inc
adc
jbe
add
dec
cmc
loop
mov
push
mov
adc
jecxz
jecxz
dec
dec
cmp
nop
push
dec
pop
mov
push
icebp
add
cmpsl
dec
popl
lock
add
rcll
lock
mov
fldenv
mov
add
movsl
scas
mov
ja
sub
add
lods
lods
adc
add
adc
mov
push
stos
jmp
mov
out
push
mov
outsb
dec
fdivrp
jbe
mov
loop
mov
add
sbb
xor
adc
cwtl
sub
bound
and
mov
sub
lahf
loopne
fildll
in
rcrb
push
jmp
push
loope
dec
imull
ds
fs
sbbl
insb
mov
sub
daa
sub
cmp
xchg
push
in
test
fwait
xchg
int
jg
mov
aas
mov
sbb
les
enter
jno
cmc
popf
xor
jns
inc
aaa
shrl
lcall
jg
mov
les
and
or
sahf
clc
jg
fbld
out
sub
aad
cmp
stc
insl
fwait
outsl
push
loop
or
adc
stc
jnp
mov
pop
jle
jge
push
xchg
add
dec
aas
and
das
dec
inc
icebp
imul
addr16
sti
sub
mov
aas
inc
insl
cwtl
mov
pop
test
cmpsl
stos
xchg
iret
fwait
in
adc
test
scas
loope
mov
mov
lods
js
cs
sbb
or
mov
sub
pop
pop
sbb
imul
or
and
movsb
mov
fmull
scas
pop
dec
mov
adc
jns
and
call
mov
push
add
mov
push
push
mov
xchg
jle
jns
mov
outsl
ret
mov
sbb
into
mov
cmpsl
jl
push
test
paddb
cmpl
sahf
in
in
fs
ss
mov
add
clc
inc
push
sar
xor
int3
add
sbb
fwait
lds
je
stos
pusha
es
lea
cmpsb
js
jmp
cs
dec
sub
rcr
out
std
or
notb
ljmp
pop
xchg
and
mov
test
adc
pop
out
adc
add
adc
add
add
pop
add
jbe
or
sti
mov
xlat
sbb
push
sub
add
lds
stos
jno
dec
ljmp
pusha
pushf
push
push
mov
jbe
aaa
in
xchg
inc
out
xor
gs
cmc
in
das
sbb
mov
outsb
xor
stc
stos
mov
mov
and
scas
popa
rcr
lcall
jg
in
insb
mov
stos
xchg
paddsb
fsubl
in
jle
je
out
loop
mov
je
shrl
or
and
jnp
mov
sub
xor
adc
push
xchg
stos
pop
xchg
cmc
mov
imul
cs
fnstcw
jp
push
repnz
aad
xchg
mov
clc
mov
cmp
in
stos
inc
dec
dec
inc
gs
sbb
add
test
mov
add
imull
sbb
divl
scas
mov
int3
and
fisttpll
out
je
aad
testb
adc
dec
imul
test
out
push
jmp
arpl
cmp
lods
orb
push
fildll
jae
data16
insb
or
leave
push
pop
xor
aam
mov
leave
xchg
data16
push
lock
dec
push
jle
pop
mov
pop
fs
loop
imul
scas
push
clc
arpl
push
add
mov
andl
mov
push
aam
mov
sahf
mov
test
mov
lret
pop
push
push
shll
fidivs
fs
mov
adc
mov
ret
mov
aad
add
das
icebp
arpl
addl
push
test
fwait
jl
mov
fdivl
jecxz
xchg
inc
push
adc
sbb
xorl
dec
jp
xchg
sbb
arpl
mov
gs
test
clc
pop
add
cli
int
decl
arpl
int
lods
mov
arpl
out
mov
xchg
dec
bound
jmp
cli
pop
test
push
pop
hlt
xor
sub
cmpsl
adc
push
icebp
add
and
fisubrs
enter
inc
push
xlat
mov
mov
enter
fimull
adc
xlat
addr16
inc
xchg
cmp
dec
push
xor
repnz
rep
lods
mov
arpl
fwait
jl
pop
xchg
dec
lods
push
jo
in
mov
out
jp
or
ja
push
add
xchg
test
lods
insl
into
adc
jmp
test
add
divb
orb
icebp
ret
sub
cmp
adc
mov
add
xor
movsb
mov
in
addr16
xchg
jl
inc
and
jmp
rcr
sbb
loope
movl
sbb
std
and
jne
enter
cltd
inc
test
pop
inc
andb
and
ret
scas
in
incb
addb
pop
jns
pusha
pop
and
sub
xchg
int
into
push
push
popf
mov
jo
sahf
movsl
leave
jne
xchg
lods
pop
loopne
loope
enter
jne
mov
jge
pop
add
xchg
pop
clc
fs
popa
cmpsl
inc
sub
pop
jne
adc
shrl
stos
inc
mov
push
aas
sub
adc
or
leave
jecxz
jne
orb
loopne
sbb
push
into
idivb
fdivs
dec
popl
jo
push
sub
adc
insl
shrl
push
aaa
xchg
jp
cmp
pop
xor
insb
and
out
fwait
push
sub
aas
subl
dec
sti
jecxz
nop
fcmovnu
into
inc
mov
mov
dec
orb
scas
push
js
pop
ss
pop
jns
je
lahf
xchg
int3
mov
fisttpl
push
ret
mov
cmp
and
mov
push
adc
cmp
je
dec
pop
push
and
push
push
sbb
subl
adc
push
sbbl
adc
xchg
lods
mov
mov
mov
enter
adc
aaa
ficoml
or
sarb
daa
cmp
shrb
out
fildll
shr
dec
sbb
inc
out
adc
inc
xchg
in
pop
fstl
add
dec
or
push
loop
lock
in
out
orl
or
icebp
mov
push
test
inc
jmp
jmp
sub
jbe
sbb
cmpsl
push
std
pop
lahf
in
das
testb
or
xor
lahf
mov
mov
scas
fisubl
mov
sbb
mov
sar
push
pause
push
mov
lods
stos
mov
xor
das
add
bound
movsb
jns
add
insb
cli
imul
xchg
xchg
jns
push
call
inc
cmc
movsb
adc
and
jnp
push
test
js
mov
pop
xchg
mov
ja
stos
cvtdq2ps
lcall
je
xchg
mov
ret
xchg
sbb
ja
iret
fnstcw
push
inc
mov
lock
xor
fiadds
add
xor
xchg
dec
mov
adc
pop
fwait
sub
and
inc
pop
pop
pop
xchg
push
fdivrl
imul
fisubl
lcall
adc
xor
sbb
stc
jbe
or
rolb
push
repz
and
hlt
cmp
and
cmp
xchg
in
push
nop
push
cmp
push
xchg
fs
stos
sahf
imul
xchg
std
pop
jmp
pusha
inc
pop
mov
dec
pop
lods
adc
pop
sub
jecxz
sub
fs
dec
or
jae
cmpsl
xchg
dec
into
xlat
rcl
jno
js
mov
inc
jl
mov
or
movb
repnz
dec
jge
sbb
cmp
inc
stos
lock
fdivl
push
inc
outsl
xor
inc
sbb
sahf
mov
add
xchg
or
arpl
mov
push
mul
jb
sub
loop
mov
lcall
add
imul
adc
dec
mov
pop
loope
mov
fbstp
pop
mov
mov
mov
and
and
sub
in
or
mov
adc
arpl
lahf
iret
mov
or
xor
sbb
sbb
cmp
xchg
stos
pop
dec
int
mov
icebp
add
push
inc
cmp
sbb
fldenv
cld
mov
mov
push
enter
inc
test
lods
jp
add
xor
mov
inc
xchg
cmp
lret
lds
sbb
iret
movl
jge
lds
clc
pop
mov
testl
imul
dec
ja
mov
jge
adc
test
test
inc
mov
push
cmp
div
fdivs
divb
jno
xchg
jle
or
outsb
in
inc
dec
in
fwait
das
aaa
jge
movsl
in
enter
cmc
xor
addb
dec
lods
ret
in
das
jg
and
les
push
icebp
mov
stos
add
cmc
fs
lock
adc
loope
cmp
inc
out
pop
clc
dec
xchg
scas
jle
sarl
and
mov
sub
out
mov
dec
inc
mov
in
add
mov
jne
adc
jp
inc
cmpsb
arpl
clc
lahf
mov
cmpl
cmp
cwtl
fnsave
dec
inc
jo
dec
push
jg
add
ret
jb
mov
mov
xchg
repz
add
dec
je
add
cld
or
leave
inc
cmp
ljmp
arpl
jle
lock
jmp
sbb
pop
fsubr
je
aam
add
insl
or
jge
mov
insb
andb
pop
dec
xor
mov
lock
push
leave
daa
mov
dec
aaa
jnp
leave
sbb
iret
mov
jmp
xchg
les
pop
and
cwtl
test
xor
lret
inc
rcrb
xlat
and
sahf
and
xlat
sarl
sti
push
sbb
pop
pinsrw
fsts
lea
push
shrl
in
push
or
jmp
jmp
imul
jge
sbb
or
lea
push
mov
sbb
dec
push
in
or
cmp
pop
sub
mov
stos
imul
adc
scas
mov
aam
in
jb
mov
int3
sahf
xchg
js
lcall
push
fcomps
ja
lcall
loop
adc
mov
loope
push
jb
or
lods
jle
xchg
inc
lods
popf
or
stos
int
push
mov
mov
xchg
popf
arpl
xor
repnz
mov
repnz
push
mov
icebp
repnz
push
lea
add
jge
push
lods
push
rolb
and
dec
jge
mov
movsb
pusha
out
push
out
or
out
xchg
mov
lret
dec
nop
add
outsl
aaa
inc
add
pushf
jle
cmpsl
cmp
mov
test
jl
inc
mov
pmulhw
movsl
and
push
repz
xchg
push
shll
subl
test
movsl
cmp
inc
adc
sbb
mulb
in
xchg
jae
mov
cli
inc
xchg
out
int
or
movsb
xchg
cmp
xlat
nop
faddl
insl
les
xchg
jmp
mov
cs
adc
divb
stos
jne
sahf
cmp
outsb
orb
mov
adc
data16
movsl
inc
test
daa
push
cmpsb
cmpsb
or
gs
insb
jno
cmp
out
xchg
fiadds
mov
sub
test
pop
xor
xor
push
mov
bound
es
lods
in
push
insb
mov
push
xchg
mov
sbb
repz
int
rclb
mov
fidivl
popf
scas
cmpsb
push
test
mov
sbb
pop
or
aam
pop
xor
dec
out
sub
int
dec
sbb
cmp
push
sti
cmp
movsl
imul
jp
cld
mov
dec
push
dec
outsb
in
fisttpl
cmp
js
pop
push
ret
cmp
jge
push
clc
into
sbb
pusha
sarl
xor
jo
lret
pop
mov
xchg
fstl
push
pushf
bound
pop
sbb
and
mov
out
ds
in
jnp
xor
ds
push
lahf
lock
xchg
fimull
push
dec
mov
out
cmp
iret
in
js
dec
xchg
add
jg
mov
cmp
or
and
mov
loop
sbb
test
icebp
test
add
push
add
mov
or
cli
cmc
mov
dec
mov
nop
call
std
dec
addl
sbb
and
fsubrs
and
sbbl
cmp
pop
enter
xchg
lock
mov
xchg
in
push
dec
and
popf
mov
add
rorb
adc
js
cmp
sahf
sbb
sub
arpl
shll
insb
mov
pop
mov
imul
add
push
icebp
and
xor
dec
insb
push
ljmp
outsl
leave
or
cmp
pop
lods
mov
xchg
sbb
icebp
pop
mov
mov
incl
and
dec
adc
inc
push
sub
out
jno
fdivrl
push
mov
ret
shlb
push
bound
sbb
pop
mov
xchg
shlb
xchg
cs
addr16
fdivl
jae
mov
xor
dec
and
xchg
lods
movsl
cmp
inc
pop
sti
jg
sub
subl
xchg
push
addr16
in
movsl
and
adc
bound
mov
gs
jle
stc
jmp
push
les
push
jmp
mov
mov
xchg
mov
sbb
xchg
ret
outsl
add
pop
sti
sub
add
shrb
ret
push
and
xchg
add
ss
insb
lahf
sbbl
sub
popa
icebp
sbb
adc
test
cmpl
add
mov
cwtl
out
sbb
push
adc
and
xor
jo
and
fists
inc
lods
sahf
mov
jl
aam
aam
mov
pop
jno
sbb
cs
sub
pop
lcall
and
add
ja
pop
lahf
fdivl
cmpb
cmpsb
in
lret
ljmp
imul
push
inc
aad
push
push
pop
aam
out
xchg
lods
xlat
cmp
mov
mov
into
popf
in
jecxz
mov
cwtl
or
mov
add
cmp
mov
and
pop
cwtl
mov
loope
loope
mov
dec
or
adc
sar
push
clc
mov
sti
sub
dec
imul
fistl
adc
in
cli
mov
testb
rcl
inc
jmp
xlat
imul
mov
dec
inc
call
test
pop
mov
cmp
daa
dec
loope
out
sub
mov
xchg
outsl
adc
lock
out
sub
fadds
inc
mov
dec
pop
inc
pusha
bound
test
fidivrs
sbb
or
mov
mov
out
mov
mov
loop
jae
idivl
pop
pop
nop
xor
in
es
lods
xchg
in
xchg
roll
fisubs
outsl
test
gs
push
xor
lret
mov
mov
iret
int3
imul
ror
insl
negb
jge
lahf
jp
outsb
out
hlt
in
lods
adc
mulb
int
xchg
insl
and
pop
stc
fdivp
push
lods
or
ret
mov
and
cmp
pop
sub
sub
and
ja
mov
xor
lahf
inc
jge
fistl
mov
adc
roll
pop
js
mov
mov
lea
stc
test
inc
cmpsb
rolb
daa
lret
dec
push
mov
adc
or
cmp
dec
cwtl
xor
insb
mov
gs
sub
jne
iret
add
dec
test
lods
stos
and
test
cltd
pushf
popa
add
pusha
ds
dec
arpl
pop
test
jp
adc
mov
data16
or
pop
outsb
pop
movsl
call
mov
pop
ret
mov
lods
scas
cmpb
and
rolb
push
or
lret
sub
sti
xchg
aad
push
mov
or
sahf
sub
inc
js
jg
and
add
shll
nop
and
xor
cwtl
lds
add
mov
cmpsb
dec
inc
inc
fimuls
pop
pop
adc
rcll
test
mov
jmp
sub
into
out
rol
mov
mov
mov
flds
scas
mov
jge
into
ljmp
push
aam
jo
mov
repz
sti
andl
xor
xchg
stc
out
xchg
mov
xchg
gs
mul
outsl
mov
push
ret
fcomi
popa
and
rcll
pop
movsb
sahf
insb
aad
fwait
push
xchg
add
adc
jb
push
mov
in
jb
mov
cmpsl
mov
adc
out
jecxz
jae
in
xchg
add
push
adcb
inc
repnz
and
add
inc
xchg
adc
jbe
pop
loope
int
and
inc
idivb
fsubr
xor
fisttps
roll
aas
cmp
in
dec
lods
add
sbb
jns
inc
rolb
mov
add
mov
fwait
neg
rorl
xor
out
wbinvd
mov
lahf
dec
and
xlat
aam
or
ljmp
in
mov
in
jl
or
test
mov
stos
fdivrp
imul
arpl
mov
movl
cmp
adc
ret
or
inc
mov
lock
icebp
outsb
out
inc
leave
enter
dec
in
ljmp
ss
xor
inc
bound
popf
fwait
xlat
lret
repnz
stc
es
mov
fcmovnb
out
decb
pop
int
jle
jg
cli
or
inc
shrl
xchg
cmpsl
fdivrl
pop
out
inc
dec
mov
adc
or
inc
popa
jmp
adc
cld
sbb
leave
jae
into
cmp
faddp
jo
xchg
sbb
es
cwtl
insb
push
xadd
pop
or
jecxz
xchg
cmp
out
sbb
xchg
fnstenv
dec
das
adc
jmp
xchg
pop
repz
push
jno
xor
sbb
jmp
in
mov
aas
daa
cli
sbb
pop
mov
lahf
push
mov
rolb
xor
scas
push
cltd
adc
cli
popa
jle
cmpsb
lock
mov
sbb
mov
sbb
mov
imul
imul
fwait
push
aas
in
inc
jle
scas
aas
je
bound
loop
cmp
cld
imul
cmp
jecxz
jecxz
rclb
inc
ret
push
and
cmp
in
sahf
adc
aaa
xchg
xchg
xchg
xlat
stos
bound
fstps
cli
sbbl
mov
not
xor
std
inc
daa
fimull
int
shlb
cmp
sbb
rclb
sbb
push
popa
daa
push
popf
lods
outsl
pop
and
aaa
dec
push
inc
sbb
push
loopne
in
popf
or
sub
jo
lret
es
push
jo
xchg
lret
push
dec
adc
xchg
aas
xchg
out
dec
mov
bound
cmp
psubw
mov
cli
inc
sbbb
fsubrl
std
test
dec
test
jne
es
int3
adc
fsubrs
sbb
and
out
xchg
insb
cltd
or
sbb
idivl
fadds
mov
mov
pusha
subb
adc
xchg
push
mov
xor
repnz
mov
mov
bound
inc
arpl
mov
aas
xlat
add
nop
fwait
nop
mov
std
inc
lods
in
mov
mov
xchg
pop
imulb
xchg
adc
adc
or
or
or
popa
in
imul
mov
or
loop
mov
imul
fmull
jmp
mov
daa
mov
adc
jbe
xor
movsl
gs
movl
push
adc
jl
mov
and
and
in
clc
sbb
fdivr
pop
xchg
sbbl
gs
cwtl
sbb
push
enter
outsl
out
mov
je
mov
and
arpl
fidivs
pop
aaa
sbb
es
rcl
outsl
imul
add
icebp
ja
sub
mov
sbb
xor
pop
sti
inc
adc
andl
leave
fsubs
mov
mov
rcr
and
mov
jns
ja
test
mov
addr16
mov
xor
sbb
fnsave
aaa
nop
inc
in
gs
stos
aas
inc
jbe
mov
pop
cmp
or
or
and
stos
lods
jae
pushf
jp
mov
das
scas
rcrl
or
aad
fisubs
idiv
leave
sbbl
iret
inc
or
add
dec
test
sub
inc
orb
aam
nop
outsl
lock
sbb
gs
in
arpl
mov
outsb
dec
fmuls
sbb
mov
loopne
loop
xor
sub
outsl
clc
loope
jge
xor
jge
pusha
sbb
sub
sub
lods
xor
or
sub
hlt
add
sbb
sahf
sti
jnp
inc
in
push
mov
repz
xchg
cmp
mov
rcrl
adc
push
sbb
jb
inc
jmp
pop
sahf
ffree
leave
enter
sub
js
pop
stos
sub
sub
jbe
leave
je
sbb
ffree
mov
aad
lret
and
mov
cwtl
das
lds
fs
lods
je
icebp
cmpsb
pop
sbb
sti
mov
mov
dec
inc
aaa
loop
or
push
mov
hlt
push
jge
and
sbb
xchg
vxorps
mov
xchg
pop
push
cmp
pusha
mov
mulb
arpl
push
mov
jle
aas
add
sbb
jo
add
ljmp
aam
inc
cmpsb
adc
rcrl
mov
cwtl
adc
or
lcall
sub
adc
fcmove
test
movsb
or
jg
scas
push
decl
scas
inc
jg
sbb
push
mov
cld
lret
lock
xchg
cwtl
addr16
adc
stos
fs
inc
out
xchg
movsl
aam
in
add
cmpsl
sti
mov
push
iret
cld
jbe
push
mov
sub
xor
pusha
pop
xor
mov
leave
imul
insb
je
push
les
sbb
mov
push
mov
push
or
lcall
sbb
loope
flds
mov
imul
movsb
jne
push
sbb
mov
or
inc
jmp
xchg
pmaxub
mov
push
mov
insb
mov
cld
add
sub
std
push
fs
xor
mov
jnp
rol
dec
in
or
pusha
scas
mov
andl
shlb
lret
dec
push
gs
and
call
xchg
imul
sti
xchg
xchg
mov
test
add
loopne
sarl
sub
push
pop
add
stos
ss
pop
xchg
dec
mov
lods
add
mov
xchg
lods
dec
int
mov
mov
into
lret
lods
or
jo
xchg
dec
in
adc
icebp
push
jle
jge
imul
lcall
filds
arpl
fmull
adc
rolb
dec
adc
gs
test
dec
mov
imul
dec
pusha
mov
enter
into
add
xchg
lock
mov
fbld
jle
arpl
gs
push
aas
xchg
repnz
jne
mov
jb
les
mov
jbe
jnp
xchg
lods
push
cli
jge
xor
xor
dec
push
sub
push
inc
pop
rcrl
push
push
arpl
pusha
popa
insl
rorb
out
adcb
cmp
mov
fstpt
test
aas
jnp
jecxz
jo
inc
xor
cmp
shrl
cwtl
imul
fstpl
cli
jns
fmuls
mov
insl
aad
notl
sbb
xchg
xorl
jnp
xchg
pop
pushf
jge
push
pop
outsl
mov
mov
and
mov
jmp
arpl
lret
jl
push
std
iret
fs
cmp
sub
arpl
mov
ret
dec
pop
mov
jae
cmp
sbb
test
loope
gs
cmp
adc
in
pop
sahf
jns
lea
push
fwait
push
pop
sbb
test
cmpb
mulb
cs
bound
adc
repnz
adc
sub
mov
dec
add
les
push
test
fbld
xchg
jbe
and
add
or
loope
jmp
fs
mov
push
imull
xchg
inc
mov
jle
sub
ret
or
les
enter
push
push
or
jne
mov
sub
out
pop
lahf
xor
push
ljmp
and
and
sbb
cmp
xor
inc
dec
fiaddl
insb
inc
sti
lret
out
mov
ret
push
scas
stos
add
jns
mov
out
jecxz
xor
loopne
cmp
hlt
hlt
rorb
idivl
xlat
insl
mov
lcall
pop
or
inc
mov
push
rorl
out
adc
rcrl
je
cld
xchg
adc
out
out
sti
pop
jg
lahf
dec
push
pop
jge
imul
or
scas
pop
movsb
lock
jecxz
sub
fwait
xchg
jmp
popf
fwait
js
mov
jns
out
stc
movsb
dec
adcb
inc
test
js
and
rolb
in
lret
cmpb
hlt
es
fnstenv
hlt
ret
pop
jnp
aaa
fwait
lret
lea
jp
lock
in
ss
adc
sub
push
sahf
cmpsl
clc
sbb
add
loope
dec
je
cmp
adc
push
cwtl
dec
cld
cltd
fstl
mov
in
ljmp
in
mov
and
xchg
js
add
fnstcw
pop
pop
in
xor
or
inc
jnp
outsb
data16
xchg
xor
sub
xchg
or
iret
popa
jmp
lcall
shlb
daa
in
orb
clc
sub
xlat
jno
sarl
out
imul
pop
dec
cmpsb
loopne
out
out
stos
push
test
push
push
or
sbb
mov
out
sbb
add
or
movsb
adc
mov
iret
cmp
imul
cwtl
mov
adc
and
push
xchg
sub
adc
cld
je
cmp
hlt
imul
aad
add
popf
mov
aaa
and
fidivrl
add
pop
test
scas
sbb
nop
js
and
mov
loope
jle
and
ja
ret
imul
cmpsb
lea
xor
jo
adc
in
add
int3
xchg
arpl
pop
cmp
pop
sbb
push
int
fnsave
xchg
addr16
fwait
mov
enter
cs
aam
cmpsl
mov
les
jg
rol
cmpsl
add
sbb
setne
jne
sub
dec
pop
adc
aas
scas
pusha
push
mov
add
lods
adc
ljmp
nop
fiadds
sti
mov
shll
cmp
outsb
lock
push
fsubrl
ss
inc
add
shll
test
mov
push
adc
sub
mov
or
push
popa
mov
fsubs
insl
mov
jge
mov
js
notl
into
push
shll
mov
lea
stc
push
cltd
les
push
push
adc
int3
sbb
outsl
sub
mov
pop
fidivrs
lret
inc
movsl
sub
lods
mov
push
xor
push
adc
mov
test
popa
xchg
in
xor
aas
cld
shrl
jnp
sub
mov
pushf
mov
adc
xor
int
lret
cmp
mov
repnz
add
lahf
lahf
and
fwait
jmp
mov
test
je
sbb
push
xchg
dec
adc
pushf
xor
dec
add
push
inc
xchg
sub
or
scas
xchg
std
mov
rorl
pop
xchg
add
cwtl
pop
cmp
mov
adc
xchg
adc
pop
movsl
sti
imull
or
adc
push
mov
jae
xchg
add
cmp
jle
pop
pop
out
push
scas
popa
pop
sbb
sub
jbe
push
add
or
aas
xchg
cld
arpl
cmpsb
dec
add
mov
nop
iret
xor
sub
or
into
adc
cld
pop
filds
iret
jecxz
xor
fildl
lcall
je
pop
mov
addb
or
sbb
repz
das
mov
xchg
lret
cmpsb
daa
sub
mov
xor
mov
pop
cmpsb
enter
fwait
sub
call
int3
and
clc
outsb
test
loopne
movsb
fidivrs
xchg
in
pushf
ds
add
clc
inc
and
inc
push
ficoml
jns
and
test
fwait
addr16
ret
sahf
movsl
xor
jo
mov
mov
jb
mov
pop
in
mov
out
or
fnstenv
ret
dec
int
pusha
sti
es
cwtl
adc
push
cmp
sub
inc
fisubl
mov
pusha
cmp
dec
insl
and
lea
int3
mov
jmp
cmpb
sahf
lock
adc
jl
mov
push
xlat
ss
lods
and
xlat
xchg
dec
jbe
test
or
inc
mov
bound
or
jecxz
js
fwait
lret
sahf
xchg
hlt
xchg
xor
imul
repz
test
xchg
push
loop
jae
push
or
mov
sub
mov
nop
pop
pushf
sub
cmpb
pop
cli
sub
int3
ja
inc
adc
cld
sub
adc
int3
push
dec
aaa
rcrl
cmpb
jmp
push
sti
stc
cmp
jbe
sbb
cmpsb
add
mov
and
sbb
cmpsb
lret
jnp
mov
jnp
pop
inc
fnstenv
jmp
push
insb
aad
adc
pop
lock
mov
sbb
int
cli
lret
jl
mov
lret
addb
adc
hlt
lahf
rcrb
fstpl
inc
imul
fdivl
aaa
arpl
sub
ret
loope
iret
ret
sub
mov
push
int
ds
mov
jp
mov
sub
and
adc
or
test
sub
aaa
enter
push
mov
ds
iret
stc
xchg
sbb
fcmovnbe
and
xchg
sub
shrl
sti
mov
dec
loop
enter
mov
cmp
outsb
xor
jb
mov
jnp
jae
ja
jne
cmp
mov
mov
leave
pop
ds
sbb
pusha
jl
mov
and
xchg
and
dec
pusha
jbe
or
jge
push
jb
aad
cmp
roll
xchg
outsl
insb
mov
push
nop
fsts
sahf
cmpsl
pop
mov
aad
orl
addr16
jmp
shlb
sahf
outsb
orl
gs
dec
add
stos
fwait
loope
jmp
mov
popf
xchg
inc
pop
imul
add
imul
aas
push
mov
fs
add
mov
mov
sbb
push
dec
dec
out
mov
rcrl
pop
arpl
icebp
xchg
adc
imul
lock
movsl
pushf
std
in
rolb
cmpsl
xchg
mov
aaa
ja
jb
in
mov
adc
out
pop
sub
nop
mov
or
cmpsl
jecxz
push
stc
pop
rcll
mov
mov
imul
lods
movsb
stc
movsb
fistpll
jmp
xor
push
rcrl
xor
push
lods
sbb
sub
cs
fs
mov
aas
inc
dec
inc
add
es
rcrl
push
lds
out
out
cld
stos
nop
mov
and
fsubr
or
aad
roll
rcr
pop
test
or
xchg
mov
js
sti
push
xor
push
jge
push
cmp
sub
jo
sti
lret
daa
aam
push
and
aas
dec
movsl
dec
push
imul
call
into
dec
inc
cmp
inc
je
xor
cwtl
or
icebp
and
out
jge,pn
and
lds
shlb
je
out
mov
xor
fstl
sbb
imul
data16
negl
negl
mov
dec
jecxz
in
or
add
xchg
push
jno
or
jne
sub
mov
jbe
mov
mov
loope
pop
jp
movsb
inc
sbb
inc
cmc
pop
insb
mov
jl
lods
xchg
lock
xchg
leave
xor
stos
in
xchg
cmpsb
stc
mov
test
jge
rolb
in
mov
push
sarl
add
xor
sbb
fs
insb
sub
add
xor
jmp
push
inc
jns
dec
repz
clc
xchg
aad
test
adc
pop
pop
pop
call
push
sub
aam
xor
iret
push
mov
dec
outsl
aaa
sub
aam
std
sub
push
xor
jg
outsb
push
or
fdivs
pop
cmp
fcmovnbe
xchg
xchg
pop
or
filds
popa
shlb
in
out
mov
dec
movsl
jne
add
pushf
sub
add
jae
arpl
insb
push
xchg
mov
and
repnz
jnp
jnp
jle
cwtl
das
fwait
leave
sbb
repz
push
in
cmp
lds
xchg
xchg
in
lcall
xor
repz
ds
lods
cld
es
sbb
sbbb
data16
repz
xor
ss
jns
outsb
aam
rolb
cmp
lcall
in
lods
cmpsl
cmp
and
addr16
dec
fs
idivb
pop
and
bound
pop
push
aas
mov
divl
mov
movsb
aad
imul
xor
mov
push
adc
ret
data16
test
test
mov
ret
ret
mov
push
int3
fcompl
aad
loope
or
les
xchg
in
mov
cmp
pusha
jo
cltd
adc
mov
mov
pop
jbe
mov
popa
cmp
sub
mov
repz
xor
and
cmpsl
or
jp
into
imul
loop
lcall
in
mov
adc
push
push
notl
push
sbb
sub
dec
dec
in
mov
add
fisttpl
aad
xchg
mov
mov
lret
fcomps
out
adc
inc
and
rolb
mov
fistpll
and
arpl
sarl
mov
seta
add
sub
mov
movsl
mov
movsb
adc
subl
dec
iret
int3
adc
notw
popf
lods
and
daa
lret
fmul
out
cwtl
jmp
add
xchg
sbb
jg
xor
push
lock
and
jp
imul
sbb
lcall
adc
aad
or
mov
pop
push
popa
into
aaa
lock
pop
push
mov
fidivs
and
push
pop
repz
push
and
or
hlt
mov
or
pop
cmp
mov
daa
inc
xor
fwait
pusha
pushf
decb
cs
xchg
int
lock
sbb
inc
int3
rcll
lcall
sub
add
push
cmp
fdivrs
ret
cmp
out
mov
test
dec
stos
scas
pop
mov
xchg
cmpl
add
push
subl
sarl
inc
sahf
roll
cld
addr16
and
or
xchg
adc
jge
addr16
lahf
sub
cmc
out
fsubrs
sbb
in
and
mov
sub
push
inc
ret
dec
mov
lods
add
and
xchg
ja
mov
enter
arpl
pop
dec
ja
xor
sbbl
mov
sbb
jg
jge
lcall
test
cmp
sbb
mov
mov
pop
lret
xchg
mov
sub
lret
or
cli
cmp
lods
xor
adc
movsl
xchg
popf
scas
cltd
or
mov
aad
sub
in
pushf
add
push
cltd
out
sbb
bound
dec
addl
xchg
pop
xor
mov
xor
mov
add
dec
cmp
into
enter
test
fisttpl
aaa
jecxz
loopne
adc
dec
movsl
sti
push
and
imul
xchg
and
sti
cmpsb
push
std
aaa
mov
pop
adc
pop
and
mov
inc
adc
adc
and
fdivs
inc
lret
or
push
mov
cmp
inc
xlat
stos
sbb
add
lret
loop
iret
jmp
add
mov
adc
xor
addr16
dec
jns
pop
bound
jle
xchg
js
jle
lret
lods
mov
push
mov
scas
xchg
push
das
scas
mov
mov
jecxz
into
dec
mov
pop
stc
mov
push
jecxz
jmp
dec
int3
sub
outsb
mov
push
cmp
or
pop
and
pop
xchg
insb
cmpsb
dec
cld
outsl
pop
mov
xchg
adc
rcrl
mov
xlat
xor
out
notl
out
out
jecxz
aas
cmpl
sub
pop
movsl
cmpsl
sbb
mov
jl
ja
loop
and
in
inc
divps
fs
add
mov
mov
sbb
dec
lock
mov
jmp
in
stos
bound
pop
pop
mov
pop
xor
or
pop
and
jb
cmp
push
xchg
push
cwtl
and
icebp
clc
mov
or
in
movsl
nop
rcrl
adc
jns
lods
mov
dec
out
clc
pop
int
mov
jb
cmp
fs
rclb
mov
test
fcomp
inc
test
bnd
insb
fdivr
mov
xchg
call
stos
test
imul
jp
rolb
das
insl
xchg
sbb
out
ret
add
or
out
sbb
test
xchg
sbb
add
lahf
xor
ja
xor
inc
dec
mov
jns
les
fsubr
stos
or
sub
adc
mov
push
test
test
loop
xchg
pop
add
cmp
fbld
inc
and
inc
iret
outsl
dec
insl
cmp
inc
adc
fwait
js
stos
test
ljmp
les
test
mov
mov
jne
sahf
out
mov
jp
repz
cmpsl
fcomi
in
push
cli
stos
xlat
daa
arpl
cmpsb
lcall
pop
arpl
mov
inc
lret
xchg
stos
out
dec
adc
push
pushf
fcomi
vprotw
leave
jae
sbb
gs
mov
dec
and
adc
mov
sub
rclb
jbe
cmc
or
adc
dec
dec
xor
hlt
xchg
nop
mov
adc
clc
dec
inc
xlat
popf
mov
jne
add
adc
lret
into
push
test
sbb
pop
mov
inc
cltd
inc
and
ret
lea
cmp
xchg
test
icebp
xchg
and
mov
cmp
mov
sub
outsl
gs
add
adc
faddp
mov
xor
sbbb
xchg
adcb
xchg
sub
lcall
aad
cmpsb
mov
sub
xchg
pop
inc
insl
sbb
pusha
cltd
pop
lods
movsb
jo
sub
push
sbb
sub
in
push
addr16
out
or
clc
dec
scas
jo
cmp
jge
repz
push
shll
pop
xchg
movsl
jno
in
cmc
lret
pushf
rolb
cmp
lret
es
idivl
add
cmpsb
or
pop
.byte
push
and
ret
adcl
inc
stos
dec
add
jo
inc
imul
out
or
cld
cs
das
inc
pop
in
add
mov
rorl
imul
jg
mov
push
sub
outsb
mov
pop
fnstcw
dec
pop
push
subl
dec
insl
cmpsb
xlat
dec
inc
adc
dec
sub
fs
imul
xchg
rcr
pop
mov
gs
mov
xlat
negb
ffreep
pop
cli
nop
cmp
loop
mov
jg
loope
in
lods
or
shll
popa
cwtl
mov
js
jb
in
adc
clc
jb
je
ret
adc
roll
out
imul
lahf
repz
mov
jbe
xchg
jae
in
dec
fsubs
jmp
push
and
das
pop
mov
mov
fcompl
and
out
clc
and
pop
inc
mov
mov
xchg
inc
addr16
sbb
inc
sbb
xchg
mov
loopne
ret
mov
outsb
out
xchg
imul
cs
mov
mov
pop
clc
mov
jns
or
clc
jle
outsl
or
and
insb
jmp
jns
cmp
mov
jae
xor
mov
cmp
popf
pop
lahf
fcoms
adc
dec
sub
and
jmp
sub
fwait
outsb
lea
add
or
cmp
jp
incl
dec
sti
mov
adc
add
nop
mov
lret
fcomps
jl
sub
gs
in
clc
jmp
add
adc
outsb
mov
xor
inc
imul
aas
out
fisubrs
pop
lock
inc
pusha
rcll
sub
jmp
pop
lcall
xor
xor
add
xchg
negl
lret
enter
popf
push
sbb
and
mov
push
mov
cmp
cmpsl
xchg
mov
sbb
ss
jae
adc
cs
pop
inc
add
loope
push
in
test
pop
je
sbb
in
lds
cmp
mov
fwait
add
repz
sbb
icebp
repnz
pop
data16
ucomiss
push
imul
inc
inc
jae
and
cmp
adc
xchg
outsb
mov
mov
or
shll
gs
leave
dec
push
pushfw
sbb
outsl
pop
dec
mov
mov
ret
inc
mov
ret
imul
out
and
mov
test
arpl
out
push
and
stc
les
movsl
clc
jl
in
aas
jno
and
js
xchg
shl
pop
push
fnstenv
sub
add
add
outsl
lods
fcmovnu
lock
push
es
rcll
or
test
ret
sub
mov
mov
xchg
repz
push
cmp
push
in
rcll
inc
rorb
jo
inc
outsl
inc
cld
lods
push
mov
xchg
xchg
xlat
nop
adc
push
add
mov
daa
push
loopne
fsub
andl
and
sub
mov
aam
dec
rcrb
pop
subl
sbb
faddp
mov
fwait
add
adc
leave
pop
ja
dec
xchg
mov
mov
mov
jns
sub
fnstcw
lds
test
cmp
pop
ljmp
adc
sti
lcall
je
pop
test
inc
rcll
cmp
rep
dec
imul
xchg
in
out
mov
test
adc
mov
mov
fsts
mov
jl
inc
or
out
sarb
stc
xchg
push
adc
pop
mov
or
mov
in
pop
mov
stc
or
dec
jmp
adc
in
dec
ss
mov
add
sbb
adc
jo
jp
sbb
mov
fs
mov
mov
les
stos
loop
insb
cld
mov
add
ffreep
jl
pop
inc
or
daa
or
xor
lock
sbb
cmpsl
or
es
int
jns
pop
lock
pusha
jae
cmp
pop
mov
pop
xlat
jae
cmp
push
mov
pop
sbb
daa
gs
cmc
inc
es
xor
push
mov
push
and
pusha
jg
sbb
push
sub
outsb
fmull
pop
push
fimuls
dec
dec
mov
movsl
call
repnz
jae
shlb
popa
xor
sbb
mull
xchg
daa
xorb
sbb
pushf
xor
lret
dec
cmp
repz
call
xor
loop
outsb
mov
loopne
add
adc
repz
enter
pushf
add
sbb
cmpsb
ret
sub
sbb
mov
ds
mov
mov
jns
sub
out
pop
iret
and
pop
mov
jg
cmpsl
and
sub
xor
in
dec
mov
or
iret
push
int
je
rorl
mov
xor
mov
sbb
xchg
stos
rcrb
mov
pmulhuw
or
les
adc
rcrb
xor
pop
inc
push
fidivrl
pop
ss
nop
psrld
imull
arpl
push
jmp
jns
cmpsb
pop
aas
lds
imul
inc
jbe
.byte
add
inc
add
mov
add
add
add
add
add
add
sub
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
dec
add
sbbb
add
outsb
add
or
add
add
add
add
add
add
add
jle
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
or
add
add
add
add
in
add
add
add
xor
add
adc
add
in
add
add
add
inc
fiadds
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
in
add
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
pop
add
inc
add
dec
add
inc
add
push
add
jns
dec
add
outsl
add
sub
add
and
add
inc
add
add
add
add
add
add
or
into
xchg
xchg
lods
popa
pop
movsl
inc
inc
xchg
sub
movsl
dec
push
add
add
popa
arpl
add
xchg
add
xchg
add
mov
add
add
add
add
add
mov
xor
push
out
imul
jnp
scas
xchg
fisubrs
mov
add
add
add
add
and
lcall
mov
jmp
call
dec
lcall
add
add
or
mov
jns
jmp
call
call
ficoms
jns
movsl
dec
push
add
add
add
fiadds
pushl
dec
adc
sahf
dec
jmp
call
sbb
jne
pushl
push
arpl
add
add
add
push
add
push
add
push
add
push
add
dec
add
dec
add
pop
or
jns
out
stos
jnp
stos
xchg
movsl
inc
inc
mov
or
shll
push
add
lret
adc
stos
jae
popa
add
out
jmp
jns
push
arpl
add
add
add
pop
add
pop
add
push
add
push
add
push
add
dec
add
pop
or
popa
or
insl
sbb
lcall
push
mull
jmp
movsl
decl
dec
sbb
mov
jmp
out
arpl
insl
sub
jne
sti
imul
add
lods
inc
sub
popa
add
popa
add
pop
add
popa
add
pop
add
pop
add
push
add
pop
or
popa
or
popa
or
gs
xchg
notl
out
decl
dec
and
mov
jmp
push
jae
jno
jns
incl
add
add
add
insl
add
popa
add
popa
add
popa
add
pop
add
pop
add
popa
or
popa
or
popa
or
gs
gs
gs
jns
push
decl
dec
and
mov
jmp
push
jnp
jno
pushl
call
add
add
add
insl
add
insl
add
insl
add
popa
add
popa
add
popa
add
pop
or
popa
or
popa
or
gs
gs
popa
adc
xchg
push
call
call
cmp
mov
jmp
push
jnp
orb
add
call
add
add
add
jne
ljmp
ljmp
ljmp
ljmp
jmp
pop
or
popa
or
popa
or
gs
gs
popa
adc
jne
jmp
mov
xchg
jmp
into
pushl
call
movsl
mov
add
add
add
jns
jns
pushl
pushl
ljmp
ljmp
pop
or
popa
or
popa
or
gs
gs
dec
or
push
add
jno
pushl
pushl
imull
out
cmp
push
xor
inc
and
sub
mov
add
mov
add
xchg
lcall
mov
out
mov
fidivs
fisubs
fisubs
out
adc
dec
add
jmp
fdivrp
negl
iret
add
mov
add
mov
into
out
out
jmp
jmp
jmp
out
jecxz
jmp
fsubrp
mov
idivl
fisubs
out
adc
jno
inc
sti
idiv
idivl
roll
dec
add
mov
out
push
out
push
out
jmp
jmp
jmp
fdivrp
jecxz
idivl
idivl
fidivs
call
fistpll
dec
jmp
out
out
out
push
fdivrp
jecxz
inc
push
call
jnp
adc
add
out
push
out
push
out
push
out
jmp
jmp
jmp
fdivp
mov
idivl
idivl
mull
jmp
pushl
incl
divl
out
popa
cmp
dec
sbb
and
add
add
push
and
sti
idiv
repz
push
out
jmp
jmp
jmp
fdivp
mov
out
mov
out
mov
out
stos
jnp
gs
insl
add
not
ljmp
add
add
push
and
sti
idiv
jmp
cmpsb
inc
decl
out
mov
out
mov
test
idivl
notl
decl
out
xor
and
into
dec
inc
add
into
pop
and
mov
lcall
decl
incl
pop
or
mov
idivl
idivl
test
add
into
pop
and
stos
add
stos
add
lcall
add
mov
incl
mov
add
xchg
mov
out
mov
idivl
movsl
xor
add
into
pop
and
stos
add
stos
add
lcall
or
jns
divl
mov
add
add
gs
mov
out
mov
test
add
add
xchg
jne
out
or
insl
or
gs
gs
insl
sbb
gs
xchg
pop
mov
pop
mov
add
add
xchg
mov
movsl
cmp
add
mov
jno
mov
popa
adc
popa
or
gs
gs
insl
sbb
gs
cmpsb
xchg
mov
out
mov
sbb
add
sbb
mov
add
out
cmpsb
jnp
xchg
rcl
mov
into
pop
add
pop
or
popa
or
gs
jns
fiadds
mov
out
jmp
out
jecxz
xchg
imul
mov
dec
lods
cmp
add
fisubrs
out
jecxz
rcl
mov
jne
into
xchg
imul
test
mov
mov
mov
mov
out
jmp
out
jmp
out
jmp
out
mov
sbb
dec
lods
cmp
add
fisubrs
out
jmp
out
jmp
out
jecxz
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
jmp
out
jmp
out
jmp
out
jmp
out
jecxz
into
xchg
imul
dec
lods
inc
sub
add
stos
jnp
cmpsb
jnp
jecxz
out
jmp
out
jecxz
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
out
jmp
out
jmp
out
jmp
out
jmp
div
div
div
mul
mov
and
out
mov
out
cmp
xlat
into
out
jmp
out
jmp
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
div
idiv
push
imul
add
add
xchg
pop
out
jnp
jecxz
out
jmp
out
jmp
rcl
rcl
rcl
rcl
mov
push
out
call
mov
sahf
mov
add
add
mov
out
cmp
xlat
into
out
jmp
out
jmp
rcl
rcl
mov
out
xchg
out
xchg
push
out
mov
out
dec
out
xchg
out
jmp
out
jmp
xchg
imul
jnp
add
add
add
gs
jmp
jmp
out
xlat
into
out
xchg
xchg
gs
ficomps
add
out
stos
jnp
xchg
xlat
into
fiadds
add
jge
fiadds
into
gs
fiadds
out
dec
add
add
incl
loopne
clc
add
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
psubb
add
clc
add
clc
add
clc
add
push
add
inc
add
incl
add
incl
add
inc
add
push
add
jg
add
jg
push
add
lsl
jmp
cmp
aaa
mov
pop
fwait
cmp
add
add
or
add
add
push
inc
dec
dec
dec
inc
inc
add
push
push
jns
gs
add
push
jns
je
insl
add
adcl
je
add
outsb
imul
gs
or
push
imul
add
xor
add
clc
push
outsb
imul
sub
xchg
jne
sub
cltd
cltd
shlb
adc
push
inc
push
push
insb
pop
and
movsl
sbb
les
push
jo
adc
push
push
jno
push
xor
dec
insl
mov
jbe
mov
mov
dec
fstp
lcall
mov
or
mov
jle
lea
mov
pushl
or
ja
aaa
fucomi
jl
iret
jge
jl
xlat
idivl
in
xor
inc
dec
in
out
jno
xor
inc
push
cmp
mov
jle
jno
mov
mov
fucomp
aaa
mov
aam
mov
sbb
popf
xchg
test
push
nop
aad
and
push
xlat
enter
jmp
fs
out
mov
fldt
ja
jae
cmp
cli
out
jle
and
jb
lahf
and
push
mov
jb
jae
adcl
xchg
aas
into
fs
cmp
hlt
mov
subl
sbb
push
mov
xchg
ficomps
push
loop
mov
jg
inc
jo
jmp
pop
mov
cltd
rorl
int
cmp
xchg
pop
in
call
mov
push
scas
jnp
maxps
fildl
addb
out
cltd
sub
divl
sarl
pushf
mov
or
cmpsl
hlt
ret
mov
sbb
pop
clc
mov
mov
jmp
pop
dec
mov
jmp
fisttpl
in
sub
xchg
or
pusha
imull
xchg
ret
sbb
xchg
cmp
loop
in
arpl
lock
rcrb
mov
mov
data16
mov
cld
sahf
roll
stos
out
sbbb
or
inc
cmp
jle
push
pop
repnz
int
movhlps
sti
loope
addl
cwtl
jg
nop
cmp
pop
sbb
sbb
mov
imul
adc
cmp
lods
popa
hlt
xor
sbb
int3
aam
push
jle
sub
jb
sub
inc
addr16
imul
gs
xchg
fwait
movsl
adc
mov
sub
fdivr
popl
pop
imul
popa
imul
negl
xlat
inc
sub
fwait
lahf
ret
mov
jne
out
stos
sti
repz
mov
lret
sbbl
repz
leave
xchg
jo
nop
jg
xchg
push
push
stos
pop
lods
out
sarb
cmp
xor
pop
clts
test
xchg
adc
out
mov
sub
cmp
cwtl
cwtl
aad
ss
xorb
mov
cli
mov
xchg
mov
push
push
loopne
xor
push
pop
notb
sub
scas
xchg
adc
divl
adc
out
cmp
out
mov
sbb
cmp
mov
jnp
push
sub
xchg
icebp
outsl
jg
outsl
jbe
jnp
dec
jnp
push
mul
sub
cwtl
mov
ret
and
fsubrl
jo
mov
imul
outsl
jnp
mov
fdivp
sub
sub
mov
testl
outsl
je
jnp
mov
cli
fdivp
jmp
pushf
pop
fdivrp
sub
lods
out
in
outsl
outsb
push
imull
mov
test
xchg
pop
ficoms
jns
mov
fdivp
fdiv
lds
push
and
dec
ss
cs
adc
and
jnp
lods
and
lds
mov
out
sub
int
insb
push
fsubr
std
lahf
xchg
pop
cmp
loopne
jae
adc
int
insb
es
mov
lcall
or
dec
or
in
dec
push
cltd
in
and
mov
and
sub
imull
sbb
sbb
scas
dec
jns
lret
stc
add
js
nop
dec
cmp
xchg
mov
pushf
mov
sbb
test
jmp
outsb
dec
and
and
mov
jbe
sahf
rclb
call
sub
les
dec
mov
aaa
or
push
insl
in
adc
into
es
movsl
or
imul
in
out
mov
xlat
arpl
je
jp
sub
lds
lahf
sub
sub
mov
imull
gs
dec
outsl
jnp
mov
add
push
stc
fwait
jg
stos
outsl
jp
sub
push
fs
mov
rcr
inc
dec
dec
mov
in
cmp
xchg
test
and
rclb
fcomps
in
xchg
ds
cmc
sub
jno
add
addr16
mov
sub
add
imul
popf
mov
addr16
push
adc
stc
test
mov
lods
pop
push
sub
add
stos
sbb
aam
mov
adc
or
xlat
sub
and
pusha
out
or
in
je
jecxz
mov
mov
jecxz
imul
push
xor
mov
loopne
dec
jecxz
sahf
lock
and
xchg
pop
insl
into
rcr
mov
xchg
fnsave
push
test
jecxz
lcall
xchg
or
cmp
insb
ret
jl
shll
lds
sub
fldcw
pop
cmp
in
shrb
hlt
or
inc
jnp
ret
sub
insl
rorb
sub
call
push
mov
aam
adc
movsb
add
push
ljmp
les
xchg
push
mov
push
adc
xchg
aas
inc
outsb
outsb
dec
xorb
push
scas
push
push
test
fildl
add
in
pusha
call
and
pop
leave
outsl
xchg
rorl
sbb
xchg
insb
fcomps
dec
fs
cmp
enter
in
mov
adc
std
sbb
or
jp
out
ret
mov
aaa
xor
mov
mov
mov
inc
fsubrs
mov
lcall
cmp
mov
cmc
push
das
daa
push
cmp
add
out
inc
subb
jo
mov
popf
repz
test
insl
mov
enter
out
mov
mov
or
call
adc
and
pop
and
xor
jo
ja
sbb
ret
sbb
adc
sbb
mov
fsub
jl
mov
add
xchg
and
gs
js
fcomps
mov
loop
popa
inc
adc
icebp
mov
repnz
ss
jne
inc
int3
cmp
test
mov
or
bound
and
cs
mov
ret
mov
pusha
mov
xchg
movsl
bnd
insb
mov
inc
ret
rcl
push
roll
roll
dec
dec
jo
repz
lcall
xchg
or
push
jae
push
imul
or
movsb
jge
xorb
or
mov
cwtl
and
mov
test
outsl
xchg
pusha
aaa
xchg
insb
ret
add
aaa
clc
stos
mov
loope
mov
jne
movl
dec
sbb
mov
pop
cwtl
stos
into
adc
inc
add
arpl
push
int
jecxz
add
inc
xchg
fwait
sub
push
test
cmp
push
cmpsb
push
push
xchg
cmp
in
jne
popf
out
cmpsl
dec
cmp
dec
fnstenv
fs
sbb
lock
popf
loope
push
aam
inc
push
xor
ja
push
scas
in
leave
enter
imul
sub
xchg
jno
mov
js
sub
push
test
ss
add
test
test
pop
push
pop
sbb
xchg
daa
repnz
mov
mov
imul
dec
add
xor
jbe
mov
les
sub
dec
adc
lds
pusha
movsb
out
mov
movsl
xchg
imul
add
push
aas
addb
or
pop
mov
xor
cmp
fs
pusha
jne
scas
hlt
jmp
clc
bound
arpl
shrb
shlb
test
cmp
or
addr16
fisttps
sub
xor
mov
add
ja
int
add
insl
mov
mov
shll
leave
das
dec
leave
loopne
fdivs
or
mov
xchg
addr16
or
jne
jp
xchg
or
sbb
and
sbb
adc
or
ja
imul
pop
daa
or
test
mov
std
mov
jnp
mov
mov
xor
dec
cmc
dec
dec
and
xchg
loope
xor
aad
inc
push
jne
dec
je
out
push
pop
adc
mov
shrl
std
mov
gs
comiss
xchg
push
xchg
ret
xchg
push
mov
pop
pop
sbb
push
fisttps
xchg
push
dec
dec
mov
xchg
cmp
shrb
and
and
mov
nop
sbb
leave
pop
mov
mov
jp
adc
and
in
and
shrb
lahf
mov
xor
fs
call
andb
nop
xor
bound
scas
sti
push
mov
mov
pop
sahf
fsub
ret
test
loope
and
cwtl
xchg
jl
out
lds
cmp
popa
in
and
stc
fcomi
jnp
mov
aad
addb
push
out
adc
inc
sbb
call
in
ret
out
stos
incb
mov
outsl
cwtl
dec
test
sbb
pop
addb
or
cli
inc
pusha
addr16
pusha
or
pop
pop
dec
jbe
push
cmp
or
adc
pop
mov
inc
nop
and
pop
mov
dec
xchg
mov
mov
adc
xchg
jae
dec
dec
jp
movsb
repz
daa
movsl
xchg
stos
imul
or
push
bound
adc
cwtl
mov
clc
aad
cmp
pop
test
pushf
pushf
xchg
call
xchg
xor
inc
sti
mov
mov
inc
test
out
divl
insl
out
in
pop
xor
cmpsb
sbb
sbb
dec
arpl
sti
ret
xor
ds
divw
lea
push
dec
add
mov
fcmovbe
xor
push
movsl
bound
shrb
leave
mov
sbbl
das
stos
xlat
daa
mov
lahf
stos
mov
and
mov
and
fldcw
movsl
cmpsb
xor
cmp
and
cltd
or
repnz
pop
xlat
mov
fwait
cmc
repnz
aad
jne
out
pop
bt
mov
shlb
ja
rorb
sbb
push
mov
loope
mulb
fidivs
fistps
sub
and
lea
xchg
mov
scas
sbb
sbb
je
lods
rep
push
cmp
faddl
xor
or
test
mov
adc
cmc
fnsave
ja
loop
hlt
or
imul
stc
add
adc
idiv
aam
or
or
lods
nop
jmp
out
not
je
sub
pop
and
pop
mul
int3
adc
xor
sub
mov
cli
test
push
mov
cmc
imul
lock
out
popa
popf
repnz
mov
fcomi
add
outsl
mov
pop
fsubs
adc
inc
push
mov
cmp
pusha
div
or
jle
dec
adc
mov
inc
cmp
cmp
mov
cmpsb
mov
mov
imul
arpl
mov
cmpsb
jp
pop
xchg
mov
loope
insl
icebp
bound
sub
fs
out
or
bound
icebp
aas
test
sub
xchg
mov
xlat
divl
fbstp
cli
mov
lods
fists
mov
fcoms
sub
add
repnz
filds
jmp
lahf
mov
rcrb
mov
or
push
and
dec
addr16
ljmp
fistps
mov
dec
pushf
xor
leave
sbb
std
daa
stos
nop
int
push
loopne
sub
push
int3
jp
mov
add
dec
sarl
cli
pop
xchg
icebp
pop
push
mov
adc
outsl
and
push
stos
and
inc
stos
loope
xchg
add
pop
cmp
pop
xchg
mov
movmskps
sub
sbb
pop
pushf
mov
pop
subl
aas
mov
xchg
add
cs
add
cmp
jecxz
sbb
mov
clc
or
cli
test
js
mov
sahf
or
out
out
lods
add
adc
push
cmc
int
aaa
int3
sub
mov
or
std
data16
sub
inc
scas
jbe
add
add
call
push
in
sub
loope
xor
mov
fcompl
cwtl
das
sbb
popa
xlat
push
inc
mov
out
xchg
xchg
sbb
insl
mov
ret
add
shlb
addb
ret
mov
push
jbe
fsubs
nop
add
adc
aam
fbld
cmp
jp
arpl
mov
retw
mov
cltd
sbb
jmp
inc
int
adc
mov
loope
pop
pop
loopne
or
sub
push
popa
mov
aam
mov
icebp
ss
and
push
sbb
inc
outsb
fdivr
adc
arpl
and
pop
nop
cmp
mov
add
cmp
xor
push
rcll
addb
pop
sbb
jo
mov
outsl
adc
jg
dec
sub
adc
loopne
aas
or
cli
push
aaa
movsl
xchg
pavgw
sub
iret
mov
sub
and
or
loopne
xor
dec
and
dec
mov
out
fnstsw
inc
or
cmp
das
xor
outsb
sbbb
pop
jl
sahf
imul
lds
dec
rcrb
stos
mov
rol
test
push
dec
mov
pusha
lcall
sarl
or
mov
xor
outsl
aam
pushf
or
sub
les
or
jnp
mov
inc
xor
stos
mov
mov
or
push
sub
mov
or
jo
les
gs
shlb
addb
mov
mov
out
lret
incl
rclb
fildll
sbb
xchg
mov
jbe
std
popa
push
adc
lds
stos
std
rorb
xor
mov
jmp
pop
out
pop
mov
adcl
sbb
jnp
sar
or
icebp
sbb
push
jl
sub
jg
adc
mov
es
and
call
iret
pop
sub
push
mov
fcomp
or
std
and
inc
in
out
xchg
push
mov
ja
cmp
or
mov
and
sbb
popl
test
lea
icebp
xchg
sub
push
divl
cwtl
test
sti
push
mov
pop
ret
dec
out
into
dec
sub
sbb
cld
mov
jmp
mov
shl
xchg
imul
jp
rorl
es
out
not
mov
xchg
inc
ret
imul
adc
mov
pop
inc
pop
ficompl
insb
inc
loop
mov
or
lahf
ret
pop
or
pop
mov
mov
les
jmp
lods
int
or
xchg
in
inc
mov
and
lock
dec
cmpsl
addr16
shlb
jns
lea
fistl
loopne
in
movsl
pusha
or
xchg
jbe
sbb
mov
add
sub
pop
xor
jb
pop
inc
gs
mov
aad
cmp
inc
outsl
push
cmpsl
repz
jge
mov
mov
pushf
dec
add
les
aaa
mov
and
jne
pop
jl
jo
lahf
in
ret
dec
dec
insb
std
inc
popa
xchg
fildll
in
or
add
and
pop
xor
loop
dec
xor
jnp
mov
repz
in
mov
sbbl
pop
movb
scas
sti
arpl
std
add
orb
xchg
push
sbb
push
xchg
test
mov
sbbb
xchg
adc
xchg
jle
push
ja
xorb
rorl
or
lock
pop
adc
lock
call
jmp
addl
mov
enter
subl
xor
test
mov
pop
out
sub
ret
out
scas
adc
xlat
mov
jg
push
and
aad
and
popa
gs
sbb
ds
inc
or
leave
mov
popf
imul
ja
stc
lods
jns
int
mov
imul
jecxz
fwait
das
bnd
in
cmp
out
stc
add
dec
jecxz
fwait
push
stos
adcl
mov
sbb
xchg
popa
negl
mov
in
or
je
fdivs
mov
cmp
out
mov
out
enter
leave
dec
xor
push
inc
or
imul
shll
into
xor
add
xchg
adc
dec
adc
xor
xor
dec
jmp
push
inc
cld
mov
jmp
ja
sti
ljmp
push
sbb
dec
mov
push
pusha
xchg
adc
enter
push
inc
mov
sbb
xchg
jns
jp
sbbb
sub
out
inc
pop
test
mov
mov
add
sbb
sub
mov
sbb
xor
inc
std
cmp
mov
and
repnz
jno
mov
sbb
lods
cwtl
and
lcall
dec
sarb
test
add
nop
lahf
ljmp
daa
and
in
and
and
insb
push
jge
js
push
shrl
xor
inc
loopne
mov
ficomps
push
mov
lods
cmp
mov
jecxz
idivb
push
or
movsl
or
push
jg
mov
xchg
ljmp
pop
push
pusha
fdivl
or
daa
fs
lds
aaa
lcall
lods
fbstp
push
fsubrs
mov
sbb
dec
xor
hlt
add
dec
in
lds
jmp
test
enter
dec
ljmp
cmp
lret
ss
cmp
stos
ret
mov
xchg
xchg
mov
and
pop
dec
mov
outsb
mov
jno
lret
movsb
hlt
xchg
mov
xor
std
outsl
push
cmp
dec
dec
stos
sarl
push
shl
les
aad
cmc
loopne
adc
or
fiadds
not
pusha
sub
call
or
test
and
dec
jg
js
pop
add
cltd
mov
cmp
jb
push
fisttpl
push
sub
push
ljmp
cmp
sbb
lret
add
inc
imul
hlt
cmc
scas
sbbl
mov
jno
adc
test
jecxz
push
cmpsl
and
sbb
mov
lods
add
inc
xor
mov
pusha
fs
pop
cmp
xor
lcall
or
dec
push
cmp
loopne
imul
addr16
aas
movsl
into
mov
jmp
adc
cmp
pop
pop
sahf
std
or
and
jg
shrl
mov
mov
add
in
pop
mov
insb
dec
adc
repz
loopne
inc
fs
test
out
inc
dec
xor
or
fidivrl
nop
push
add
stos
jg
pushl
sarl
push
or
push
imul
shl
std
cmp
sbb
push
jns
inc
testb
add
jmp
das
fcoml
out
pop
test
push
nop
cmp
jp
mov
imul
fs
insb
xor
addr16
push
loope
sbb
pushf
dec
pop
cmp
ffree
ss
rcll
insl
ss
cmp
mov
sbb
addl
mov
sbb
int
sbb
sub
enter
add
cmp
subl
imul
dec
fpatan
pop
mov
mov
cmpsw
push
mov
test
push
or
popf
inc
xchg
pushf
sub
dec
out
xchg
rorl
or
xor
sbb
pop
dec
mov
xor
sbb
pop
out
test
mov
int
mov
push
dec
mov
movsb
ja
and
xchg
fwait
rolb
xchg
cmp
frstor
xchg
out
xchg
xor
sbb
test
or
fstps
and
scas
inc
adc
and
mov
adc
and
fsubrs
add
ja
push
adc
push
aas
cmpsl
sbb
adc
das
push
pop
dec
fs
mov
fisttpl
and
mov
inc
rorl
sub
jle
inc
xchg
test
inc
or
cmp
sahf
sahf
mov
or
push
mov
add
outsb
rclb
adc
mov
inc
inc
inc
sub
mov
shll
mov
xor
stos
in
dec
sbb
popf
lea
repz
jp
inc
xor
fs
cmp
jno
popa
inc
sbb
mov
cmpsl
or
ss
dec
adc
fwait
loopne
adc
fdiv
mov
adc
lock
out
frstor
dec
arpl
bound
std
cmp
into
bound
std
cmp
pop
das
xchg
fs
fsubr
xchg
add
sub
inc
js
in
mov
mov
or
enter
fidivrs
mov
sbb
lahf
dec
ljmp
shll
cs
stos
and
push
mov
sbb
lock
add
mov
in
xor
xchg
mov
mov
xor
ja
test
pop
xchg
enter
cmpsl
mov
sub
jne
fnstenv
int3
sarl
inc
push
movsb
or
jle
ret
hlt
push
push
fnstenv
fwait
pop
xor
ret
mov
jnp
adc
jns
inc
mov
jge
or
psubsb
dec
or
inc
push
in
or
or
cmp
fs
jns
pop
or
and
sbb
adc
and
repnz
cltd
xchg
call
pusha
gs
adc
sbb
rcl
push
roll
pop
mov
hlt
scas
mov
fidivl
fldenv
or
add
mov
mov
xor
mov
jmp
aas
adc
add
lret
pop
sub
mov
sti
and
lods
pop
inc
dec
adc
jae
sub
sahf
mov
js
icebp
add
cmp
dec
mov
int
test
dec
imul
dec
enter
jnp
or
push
add
or
fldt
add
cmp
std
mov
fisubl
dec
ljmp
inc
jo
ret
in
adc
inc
xor
into
push
dec
in
pop
ret
in
icebp
repnz
idivb
mov
xchg
cmp
jbe
nop
aaa
aas
fwait
lods
out
mov
inc
pushf
cmp
jo
cmp
movsb
xchg
clc
xchg
into
jne
roll
mov
sub
inc
stos
std
dec
dec
pop
dec
enter
mov
adc
jmp
in
stc
daa
rcl
mov
mov
popf
dec
sub
sbb
loop
jae
loopne
cmpsb
cltd
addr16
leave
add
mov
ds
sti
cmp
sub
adc
lahf
add
or
and
jb
mov
xchg
insb
orl
dec
lret
cmp
mov
jae
jb
aaa
xor
jo
push
jb
or
xorb
mov
xor
mov
jo
insl
mov
repz
iret
jp
pop
je
ret
pop
cs
mov
jnp
fcos
jle
xchg
in
xchg
mov
mov
hlt
addl
xchg
pop
jg
sub
mov
adc
cs
pop
push
xor
jb
shll
mov
dec
lret
cmp
fistpl
test
add
jbe
push
test
out
jns
push
cmp
mov
sahf
cld
popf
in
int
andl
cmp
imul
jns
test
dec
mov
sub
push
or
mov
lcall
inc
push
add
jns
cmpsb
js
mov
andl
cld
hlt
dec
loope
xor
roll
adc
scas
mov
fstp
jp
flds
out
hlt
jmp
xchg
lods
shlb
loope
cmp
dec
xor
mov
jecxz
data16
das
pop
sub
lods
pop
pop
push
loope
stos
inc
inc
fdiv
jno
ror
neg
dec
jp
outsl
xchg
decb
add
ljmp
repz
loop
or
mov
call
es
fnstcw
shrl
aad
sub
lret
or
jle
dec
or
out
sub
jge
icebp
pop
pop
or
pop
divb
sbb
lods
bnd
xlat
lcall
inc
ljmp
scas
lret
lret
les
out
jo
pop
mov
rol
loopne
lods
cmp
pop
lea
je
lcall
jle
iret
mov
shr
mov
loop
pop
leave
jg
xchg
out
imul
push
mov
xchg
mov
xchg
outsl
iret
mov
cmp
mov
mov
or
sbb
das
inc
cmc
out
mov
cld
cld
and
cmpsl
adc
out
das
lret
fbld
pop
dec
out
aas
jns
stos
jl
lods
idiv
or
jmp
mov
jg
test
pop
push
sahf
xchg
mov
lret
jb
repnz
in
jns,pt
pop
loop
cld
xchg
jmp
lahf
mov
mov
or
loopne
in
pop
ljmp
loope
xchg
popf
stc
ja
push
mov
lret
fildll
xchg
push
mov
xor
lahf
stos
int
fisttpll
lcall
pop
mov
fdivrl
jecxz
sub
insl
jecxz
jg
out
cmp
mov
xchg
cmp
jns
pop
leave
mov
mov
xchg
dec
das
mov
jns
fistps
xchg
sti
fnstcw
sub
jge
fidivrs
call
fucomip
mov
cld
in
pop
iret
negl
jp
mov
mov
iret
outsl
push
dec
jle
int
rorb
add
pop
dec
andb
mov
inc
das
pushf
and
fistps
lret
sub
out
pop
sub
outsb
dec
sub
pop
ljmp
stos
orl
xor
sarl
aaa
lock
add
aaa
rcll
fsub
cli
cs
jae
fmull
xchg
push
fstp
xchg
inc
je
ret
pop
in
mov
inc
call
inc
mov
ja
jl
shlb
std
cmp
push
mov
cmpsb
call
ficoms
aam
cmc
jp
lods
mov
fsubrp
addr16
mov
ljmp
xor
add
pop
push
sti
mov
cmpsl
inc
aas
scas
shlb
addb
in
in
and
ret
push
leave
fiadds
mov
lds
dec
cs
cmp
stc
or
mov
sbb
push
xor
stos
lock
mov
mov
and
stos
movsl
xor
enter
sarb
mov
xchg
scas
mov
ror
add
ret
lcall
adc
adc
aad
scas
inc
dec
out
andb
jno
test
jp
xlat
mov
leave
jmp
lret
repz
inc
and
in
loopne
lret
dec
daa
sbb
cmpsb
cmp
movsb
decb
nop
xchg
push
ficomps
sbb
ss
mov
mov
mov
sbb
mov
jbe
mov
or
loopne
or
dec
out
ret
lods
mov
out
lods
push
or
fidivl
dec
mov
shlb
xchg
dec
lahf
in
cmp
ljmp
cld
pushf
in
adc
mov
orl
in
fldenv
mov
mov
sbb
shlb
call
hlt
mov
jbe
test
xchg
jb
jno
and
shlb
pop
push
movsb
push
pop
inc
cld
sbb
xchg
dec
in
sti
addl
lcall
arpl
lock
xor
sbb
cmp
mov
mov
mov
mov
push
mov
mov
xchg
fcmovnb
add
jl
xchg
mov
ss
inc
aas
xor
pop
push
jb
or
sbb
sub
push
sbb
lock
outsb
popl
xchg
out
dec
lock
mov
xchg
scas
loopne
add
jp
daa
popf
fldt
out
aam
push
mov
add
mov
mov
push
dec
mov
push
push
pushf
xor
push
xlat
out
xchg
xchg
imul
dec
cmp
mov
mov
je
ret
push
call
cmp
dec
dec
sti
rclb
fdiv
cmp
call
xchg
and
dec
adc
adc
dec
aam
hlt
loopne
ficompl
outsl
movsl
xchg
add
dec
xor
mov
ret
ret
push
and
cmp
icebp
cmp
lds
cld
push
mov
leave
ret
loop
jb
or
cmp
mov
rcr
mov
fidivl
je
inc
or
dec
jecxz
daa
mov
jmp
incl
lock
scas
pop
push
lahf
sahf
mov
push
iret
inc
dec
out
fldcw
or
insl
mov
out
add
or
cmp
mov
pop
push
insb
xchg
sbb
push
xor
jge
xlat
and
test
mov
mov
sarl
repnz
fnsave
loopne
adc
and
movsl
repnz
inc
pusha
and
push
mov
mov
and
in
std
or
ja
stc
xor
pop
out
pop
rorb
iret
inc
lods
jb
mul
lcall
mov
push
or
fcmovnbe
cltd
pop
add
les
xor
aam
in
mov
cmp
popa
cmp
adc
jb
cmp
mov
ret
repnz
rcl
std
popf
pop
or
lods
ljmp
add
cwtl
cmp
stos
hlt
outsb
pop
or
cs
loopne
ss
lcall
ds
xchg
int3
jo
adc
or
xor
push
jae
or
xor
loop
hlt
sub
push
lret
lahf
push
dec
sbb
cmpl
movsl
repnz
push
jbe
sub
fmul
push
push
loopne
mov
dec
out
inc
int3
push
hlt
dec
imul
pop
mov
inc
int
cmp
stos
lods
addr16
xchg
pop
or
shrl
out
jo
loopne
xor
addb
jo
mov
pop
push
test
orb
and
in
fmul
pop
sub
rorl
fdivs
or
fld
cld
rol
cmp
pop
jo
ljmp
or
ret
xchg
cmpsb
das
movsl
cmpl
fimull
negb
add
inc
sbb
in
sub
dec
or
mov
xorb
sub
jl
je
les
ljmp
mov
jge
fidivl
mov
lods
rolb
mov
loop
jno
mov
cmp
rcll
mov
fisubrl
xchg
push
pop
scas
push
add
loopne
test
ljmp
daa
push
and
incl
sub
loopne
or
and
xor
pop
movb
add
jb
rcr
outsb
or
out
add
aad
mov
jbe
js
adc
fadds
idiv
out
and
daa
sub
rol
adcb
cmp
push
adc
or
pushf
xor
jb
xor
xchg
repnz
jbe
rorb
scas
cmpsb
mov
or
ret
imul
cmp
push
push
arpl
or
sti
lock
add
and
loop
or
testl
dec
xor
jno
inc
pushf
or
icebp
fdivp
das
push
inc
mov
ret
cmpl
je
and
bound
movsb
fiadds
rcr
imul
pop
bound
and
pushf
lods
movsl
jb
xor
stc
jg
and
push
fs
ror
clc
mov
dec
cmp
adc
mov
test
add
xchg
gs
push
lret
push
adc
aas
mov
or
loop
xchg
int3
in
mov
je
or
lods
mov
divb
jmp
icebp
pop
and
sbbl
lret
sbbb
jl
mov
jecxz
or
cmpsb
mov
ds
mulb
add
mov
jecxz
inc
lret
xchg
loopne
adc
pop
adc
mov
push
cwtl
push
push
xchg
scas
push
outsl
add
je
test
sub
and
mov
in
push
inc
jge
arpl
cs
fnstenv
xchg
ret
adc
outsl
cmp
cmpsl
mov
mov
nop
sahf
and
ret
fwait
call
xchg
dec
inc
jb
jae
cmpsb
or
jmp
nop
sbb
js
gs
ret
mov
ja
lret
push
jb
pop
xor
arpl
lds
test
xor
stc
dec
lcall
lret
push
ficoms
jae
add
mov
movsl
lds
roll
adc
fildll
or
mov
pop
adc
cwtl
mov
imul
cltd
inc
sahf
pop
mov
mov
cli
adc
xor
xlat
fcomi
sub
mov
sti
xchg
xlat
sti
and
negb
std
mov
xchg
push
js
cmpsl
insl
or
and
ja
mov
cmp
mov
test
mov
lods
es
fists
push
sub
leave
sub
jmp
cmp
dec
xchg
push
mov
push
push
or
outsl
inc
aaa
dec
test
jg
sbb
mov
mov
push
mov
insl
mov
pop
fidivl
std
popf
enter
push
pop
ret
fildll
or
aad
push
daa
nop
pop
out
and
or
stc
cs
mov
jp
sti
mov
ficomps
push
inc
dec
push
bnd
lea
jns
dec
test
cmp
inc
aam
ja
xchg
loop
and
fld
test
aad
sbb
sahf
jle
dec
outsb
test
pushf
xor
lea
inc
das
or
xchg
outsb
in
push
sub
sbb
test
lods
xor
mov
popa
insl
aam
leave
jae
out
sar
mov
mov
mov
cmpsb
jp
pop
sub
data16
pop
pop
mov
das
fs
aas
test
push
jo
fildl
push
mov
lgs
pop
xlat
and
ja
leave
enter
sub
test
push
mov
push
jge
sbb
out
int3
xor
or
xor
mov
and
mov
inc
cwtl
jno
iret
inc
subl
enter
xchg
xrelease
mov
cmpsl
add
add
call
mov
call
cmp
pop
loopne
adc
pop
xor
fildll
sbb
in
jp
jno
fs
movb
pop
das
sbb
nop
rorl
aam
fucomp
leave
adc
or
and
lods
hlt
stc
jge
mov
dec
movsl
int3
popf
enter
pop
ss
xor
out
sbb
movsl
cwtl
and
imul
push
sub
es
ja
stc
xlat
pop
cmp
push
int3
add
in
lods
xchg
pop
insb
push
popf
sub
fmul
aas
js,pn
push
xor
leave
xchg
flds
xchg
and
cmpsl
call
clc
popa
fildl
pop
xor
and
call
leave
cmp
mov
adc
adc
mov
cmp
pop
repz
mov
nop
call
cli
scas
push
imul
fidivs
ja
jmp
cs
sub
xchg
cmc
and
xor
bswap
stos
test
sbb
pushf
and
xchg
pop
mov
outsl
rcrb
repz
and
fstl
add
sub
sub
and
mov
dec
mov
mov
lods
jbe
lahf
pop
mov
jnp
add
fcompl
aas
scas
jmp
mov
mov
test
xlat
scas
lods
ljmp
les
mov
je
xor
mov
out
pop
xor
dec
in
lock
or
inc
clc
mov
xchg
xlat
lret
mov
loopne
sbb
pop
sbb
test
pop
dec
fbstp
outsb
add
lahf
int3
mov
xor
and
mov
mov
into
mov
adc
mov
fmull
mov
mov
cld
pushf
std
cmp
dec
push
mov
fs
repz
ss
mov
pop
stos
clc
fstps
xor
cmpsb
pop
js
aas
mov
negl
push
xchg
jne
mov
xlat
loope
cmp
xor
aad
hlt
add
dec
push
scas
sbb
ss
and
mov
push
clc
sbb
hlt
xor
sbb
mov
sub
add
cmpb
mov
mov
mov
push
add
andb
jp
shlb
inc
outsb
aad
sub
inc
orl
test
xchg
out
mov
or
add
add
lret
inc
push
fs
inc
das
call
mov
adc
or
ret
pop
inc
jge
sbbb
mov
test
cmc
popf
push
pop
out
push
loop
test
call
sub
std
and
ljmp
ret
xor
stc
xor
mov
fcomps
dec
or
cltd
xor
xor
in
xchg
pushf
sbb
nop
cmpb
inc
and
enter
mov
pop
sahf
inc
cmc
xor
cmp
add
roll
cs
cmp
dec
dec
rclb
ret
dec
out
sbb
je
test
scas
mov
loopne
pop
mov
lahf
fidivrl
dec
cmpsl
push
sub
test
push
lea
mov
repnz
mov
es
mulb
fcoms
or
insl
fnstcw
xorl
shll
adc
or
dec
addr16
jl
lret
mov
popa
pushf
mov
popa
jle
adc
or
addb
inc
ret
imul
push
inc
inc
mov
inc
sbb
dec
xchg
adcb
fnsave
jecxz
js
idiv
insb
inc
scas
sbb
repnz
add
dec
in
xchg
xor
lret
iret
push
sub
addb
out
mov
mov
push
xorl
xchg
out
lock
xlat
movsl
ret
pop
iret
mov
xor
scas
xor
rclb
add
mov
scas
cwtl
dec
sub
mov
push
mov
mov
xchg
ljmp
lods
fisubrl
leave
mov
loop
xchg
jno
sbb
ret
movsb
clc
or
test
and
decb
or
rcll
ret
stos
mov
lods
push
mov
jp
xor
mov
mov
test
and
inc
loop
cmpsl
xor
divl
mov
out
push
gs
xor
inc
push
rolb
gs
pusha
xchg
movb
es
fwait
and
mov
pop
outsl
cmp
xchg
sti
add
fists
lods
sub
out
jo
leave
jae
sbb
cld
sbb
dec
mov
fs
rolb
fsincos
pusha
xchg
rolb
add
mov
pop
xchg
lret
adc
xor
mov
inc
and
cld
add
lds
inc
xchg
fbld
shlb
int3
cmpsl
fcomps
int
stos
pop
iret
adc
daa
sub
pop
mov
dec
int
mov
scas
mov
adc
jmp
adc
sub
sti
test
shrb
aaa
or
xlat
pop
sub
lret
jle
lahf
or
mov
lods
mov
insl
loopne
mulb
mov
jb
push
popf
xor
lock
cmpsl
call
or
scas
rolb
call
in
mull
orb
mov
sub
les
push
adcb
nop
xchg
rcll
stc
inc
test
inc
add
mov
loopne
mov
shlb
out
xor
ja
out
test
mov
cmpsb
jo
pop
jae
mov
xlat
fmuls
fsubrs
xchg
sbb
push
rclb
mov
cwtl
jne
enter
loope
inc
or
shl
sbb
clc
add
cmp
das
adc
pop
sbb
sti
and
mov
test
push
sub
jl
call
jns
pushf
js
inc
push
lock
sbb
inc
nop
inc
out
pop
mov
mov
xchg
jle
xchg
mov
cld
dec
push
and
xlat
sbb
lds
daa
in
subb
xlat
mov
mov
icebp
bound
inc
iret
sub
lods
aaa
mov
jmp
sbb
xchg
in
push
cmp
add
xchg
mov
pop
daa
outsl
sub
or
mov
sbb
pushw
ret
sub
mov
xor
faddl
push
ror
movsl
adc
push
iret
xor
scas
mov
xchg
mov
push
insb
xor
mov
push
popa
dec
inc
and
popa
je
lds
lret
fwait
xor
fsubl
das
lcall
jmp
lret
mov
xchg
adc
inc
or
mov
icebp
int
mov
fildl
jecxz
mov
add
out
mov
inc
mov
movsl
lcall
push
dec
loop
adc
xor
outsl
xchg
and
pop
adc
push
cmpsl
pop
cmpl
popw
cmp
scas
dec
in
add
ret
jbe
cmpb
add
imul
xchg
repnz
adc
call
iret
sbb
and
mov
daa
adc
fldcw
jge
jo
inc
jecxz
in
push
xchg
incl
mov
jb
ja
or
push
aas
ret
dec
cmp
pusha
hlt
dec
cmpsl
es
xor
mulb
cwtl
or
sub
sbb
add
aam
pushf
mov
push
inc
daa
xchg
fimuls
and
std
adcb
mov
adc
sub
mov
aad
ljmp
lret
xchg
pop
in
cwtl
mov
ret
aad
jg
dec
adc
ss
or
mov
add
pushf
cmp
movsb
ret
jne
leave
or
push
rorl
dec
mov
aad
adc
daa
push
shrl
insb
pop
pop
add
sbb
rolb
ss
jns
cmpsb
fildl
pop
xchg
mov
lcall
hlt
sbb
subl
sbb
dec
ret
cld
sub
loopne
and
shr
test
cld
sub
push
jecxz
xor
sub
jne
movsb
mov
lods
fs
cmp
sbb
imul
mov
mov
ret
sub
mov
inc
mov
jbe
fwait
mov
cltd
sbb
js
mov
push
jns
pop
shlb
inc
inc
sar
lds
inc
sbb
lcall
aas
or
mov
xchg
lods
pop
fidivl
pop
and
adc
sub
jbe
leave
xchg
xor
notb
jmp
xor
xor
fsubs
cwtl
pop
mov
pop
fidivl
add
lret
lods
icebp
js
cwtl
ss
adc
adc
xchg
jge
cwtl
push
add
adc
pop
sub
or
int3
lods
mov
xchg
mov
test
insl
out
lea
inc
lret
sub
rorb
in
jle
les
div
fsubp
cs
int
aas
out
cmp
jns
daa
iret
aaa
mov
faddp
sub
dec
ljmp
mov
jle
insl
or
es
push
fcompl
std
shl
fwait
xor
jnp
sarb
xchg
dec
lret
and
pop
push
mov
roll
ret
add
mov
sub
mov
mov
idivb
inc
out
push
not
sbb
jnp
cmc
mov
mov
push
mov
mov
in
jecxz
mov
pop
clc
push
jl
das
or
sbb
clc
call
jbe
dec
ds
iret
movsb
mov
sbb
scas
sahf
out
jnp
jg
out
sbb
mov
repz
or
call
sub
mov
shlb
ds
adc
rcrl
mov
ja
jg
jge
jge
or
fdivr
mov
jb
xchg
jno
jb
pop
sahf
sti
ret
xor
inc
mov
sub
add
adc
or
adc
add
pop
shll
inc
and
mov
scas
ss
imul
mov
nop
xchg
pop
mov
adc
sub
es
bound
xor
and
push
orl
mov
xchg
lock
inc
sub
adc
fnstenv
out
push
pusha
fcmovnbe
hlt
fwait
repz
mov
in
cmc
daa
into
sub
iret
xor
add
roll
mov
mov
jo
or
das
push
rorl
add
arpl
mov
inc
imul
pop
jp
loope
sbb
mov
scas
lods
mov
mov
and
roll
arpl
add
pop
shl
aad
pop
rcrb
pop
mov
jno
sbb
daa
pop
xchg
jg
sub
dec
sysret
adcl
and
pop
pop
popl
mov
pop
cwtl
mov
lret
inc
pop
mov
push
gs
call
push
and
mov
cmc
mov
stos
pop
cmp
daa
pop
add
add
repnz
inc
pop
and
and
push
and
sti
test
in
sub
jbe,pn
lock
ss
test
jg
cmp
xchg
les
jnp
jmp
loopne
sub
dec
movsb
sarl
lret
cmc
xor
add
pop
sbb
sar
lods
mov
icebp
dec
lret
xor
pusha
rcll
pop
mov
loop
in
xchg
mov
xor
pop
mov
cmp
xor
pushf
mov
imul
fistpll
and
push
ret
xor
push
inc
lcall
sub
add
pop
test
mov
ss
push
mov
fdivs
push
mov
ficoml
push
loop
xor
mov
fisubl
shll
repz
add
adc
dec
inc
ljmp
scas
dec
mov
and
push
xchg
xlat
and
push
dec
push
scas
fnstcw
mov
push
push
lods
testl
pushf
xor
ds
mov
xchg
cmp
mov
in
and
jno
stc
addr16
lea
add
sub
xorb
imul
icebp
lret
add
das
inc
push
mov
fs
or
push
test
out
pop
mov
insl
dec
and
jmp
testb
rep
cmc
mov
iret
loopne
aad
and
dec
adc
sbb
pop
insb
jecxz
pop
push
mov
pop
or
out
sub
faddp
lock
shlb
outsl
push
add
adc
pop
xlat
jae
cmp
cmp
jle
cmp
pop
and
dec
das
add
cld
xor
das
dec
pop
clc
jp
pop
cmp
mov
vcmpss
pusha
ljmp
fcmovb
inc
or
mov
rol
push
xchg
mov
adc
pushf
push
ss
ret
ret
rcrl
mov
fst
cmp
inc
dec
in
inc
shlb
pop
cmp
fadd
outsl
add
test
movsl
push
jb
cli
jae
mov
pop
push
dec
movsl
lahf
push
das
add
sarl
inc
sar
adc
xor
into
ja
vmwrite
and
fwait
mov
pop
mov
xorb
pop
push
outsb
mov
or
mov
outsl
mov
sub
arpl
sub
loope
rorl
scas
adc
xor
mov
pop
jle
in
int
push
jo
ss
mov
gs
cltd
xor
xor
int3
jnp
pop
ret
in
xor
pop
loope,pn
sub
arpl
popa
jl
int
mov
xor
jne
out
je
sti
jge
rcl
or
jecxz
add
pop
fwait
mov
jb
pop
push
mov
mov
ret
mov
mov
jbe
xchg
push
pop
data16
xchg
bound
insb
xlat
pop
sub
ds
xchg
sahf
xchg
mov
imul
xchg
fwait
sahf
sahf
sbb
clc
xor
sub
cmpsl
jae
pop
cmp
dec
pusha
iret
jbe
std
push
mov
into
pusha
int
ret
mov
shl
mov
fldl
and
mov
adc
push
cmp
and
insb
punpckhbw
mov
repnz
js
pop
lcall
loop
mov
add
or
ss
ljmp
testb
ret
insb
out
cmpsb
imul
fdivl
jbe
sbb
sub
jecxz
sub
mov
pushf
nop
pop
add
mov
outsl
ds
xlat
aad
and
fcoms
aam
cmp
cmpsb
movsl
jno
ds
cmp
sub
jns
cmp
cmp
hlt
cmpb
mov
lock
enter
push
fiadds
mov
ds
jg
sub
mov
cs
pop
pop
push
sahf
cmpsl
lret
ret
lods
mov
sub
sub
cmpsb
aad
mov
jmp
or
inc
dec
mov
aad
scas
push
or
ficomps
stos
pop
fldcw
std
add
stos
outsb
arpl
pushf
mov
mov
ja
xlat
inc
push
mov
push
cmp
test
inc
int3
and
dec
xor
dec
sub
dec
sarb
mov
stc
sbb
fcomps
sti
test
shlb
mov
cs
add
icebp
inc
dec
fdivp
dec
adc
or
pop
popf
add
aas
mov
jmp
sti
mov
ret
movsl
mov
mov
fdiv
add
jecxz
addr16
nop
jno
movsb
lret
loopne
int3
or
iret
pushf
and
add
cwtl
and
mov
and
pop
mov
es
jge
xor
dec
adc
stc
sbb
insl
adc
and
mov
mov
pop
stos
xchg
push
xor
fildl
jae
mov
outsb
jae
mov
cmp
cld
lcall
adc
xchg
xchg
mov
push
popa
stc
nop
cmpsb
mov
mov
mov
mov
dec
sub
push
notb
xchg
sti
nop
mov
sub
mov
push
xor
push
add
fistpll
cmp
andl
fdivr
push
mov
adc
scas
adc
mov
xor
mov
lret
pop
dec
xchg
or
add
inc
sbb
push
xchg
xchg
inc
and
dec
and
cmp
leave
std
push
out
fadd
add
sub
mov
mov
inc
sti
imul
add
cld
jno
cmp
sarl
pop
xor
jae
pop
mov
or
jl
div
push
pop
repz
jecxz
scas
ret
gs
push
negl
out
mov
push
dec
cmp
or
xor
stc
inc
mov
fs
lock
int3
inc
sub
lret
leave
aaa
clc
pop
shl
jecxz
mov
into
xchg
push
lock
rcr
inc
push
test
mov
adc
in
fnstsw
in
ja
adc
lret
lea
inc
adc
xorb
cwtl
out
bound
mov
push
loop
mov
and
sbb
xchg
rcll
jbe
aaa
loope
std
andl
scas
and
push
jnp
mov
mov
push
shrb
cmp
ds
xchg
inc
mov
sub
inc
push
inc
neg
gs
stc
mov
testl
stc
lret
leave
push
jb
popf
lds
or
inc
xlat
aas
pop
and
xchg
jle
cmp
or
in
mov
pop
mov
inc
loopne
adc
das
lret
js
adcl
loope
cld
add
hlt
imul
ret
stc
outsb
fwait
hlt
jo
add
sarb
ret
xchg
movsb
push
cmp
loope
push
sbb
out
cmp
nop
stc
inc
or
sub
mov
push
les
lds
jno
xor
fwait
cld
xorl
adc
repnz
mov
mov
mov
pusha
cmp
sarb
iret
dec
aas
xor
jle
jg
ret
ja
outsb
cmp
xor
cwtl
push
je
jle
push
ja
movsl
je
inc
orl
mov
test
push
xchg
mov
int3
push
out
xchg
por
jmp
pop
xor
or
sarb
jge
movsb
js
pushf
imul
lahf
lea
rol
cmp
sbb
lcall
daa
out
gs
fistps
cmp
insl
mov
or
enter
js
aam
cmc
mov
adc
adc
dec
jmp
outsb
std
dec
and
fistps
lret
sub
xor
sti
mov
iret
inc
pop
or
hlt
sbb
gs
jno
xor
sahf
test
repnz
cltd
sbb
btc
jl
daa
out
sbb
sbb
fists
js
push
sarl
stc
push
movsl
fs
push
movsl
sub
sti
sahf
test
ss
jp
mov
test
in
pop
imul
fnop
jmp
push
test
add
rcrl
outsb
pushf
cmp
and
scas
pop
cmp
decl
cmpb
clc
sub
les
dec
sbb
loope
push
ret
stos
insb
and
ret
pusha
fldenv
sbb
js
ret
mov
pop
mov
les
popa
or
push
or
insb
and
add
push
sbb
fisubs
js
dec
ds
stos
std
xor
jp
inc
dec
mov
sbb
sub
js
fmulp
mov
push
jns
mov
popa
or
push
inc
sbb
add
push
xor
stos
xor
sbb
and
jle
inc
adc
ss
jno
rcrl
pop
clc
jle
sbb
inc
pusha
rcrb
inc
push
repnz
in
std
mov
or
jae
fisubl
cmp
imul
imul
cmpsl
imul
xchg
cmc
inc
xchg
rcrb
imul
pop
or
jnp
inc
xor
loope
sub
push
add
roll
fwait
sbb
loopne
sub
sub
or
js
inc
movsl
test
lds
pop
cmp
pop
out
stc
bound
inc
subb
mov
jbe
movsl
adc
push
aad
and
or
popa
dec
cmp
jns
ljmp
and
dec
inc
cmpsl
sub
je
popf
out
cmp
mov
cmp
loop
cmpsl
jge
out
daa
fldenv
jns
mov
inc
inc
cld
fsubrl
leave
mov
repz
add
xchg
cmp
adc
inc
or
mov
aaa
daa
cmp
cmpsl
icebp
jecxz
lahf
shll
jno
shrl
andl
push
loop
xchg
arpl
cmpsl
dec
push
lods
pushf
or
fdivr
dec
dec
cmpsl
pushf
sahf
in
xchg
ljmp
jns
lret
or
pop
iret
mov
jecxz
xchg
stc
dec
std
jb
jp
mov
fdivr
mov
cmpsb
test
jl
sbb
jae
stos
pushf
mov
gs
lcall
pop
push
lret
and
in
les
cmp
sbb
cmp
cmp
push
adc
es
sub
xchg
mov
ss
js
hlt
mov
mov
jl
cmp
inc
sbb
enter
mov
inc
mov
xchg
aad
in
enter
test
and
or
and
and
add
jb
push
ss
inc
jp
xor
cmc
fs
jae
jae
jp
cmp
lea
inc
xchg
and
and
mov
out
enter
test
ss
jno
js
cmp
sbb
sbb
sbb
sbb
xor
sub
mov
inc
jb
bound
imul
fs
shll
xchg
xlat
adc
xchg
out
dec
ljmp
aam
inc
jmp
adc
xchg
cmp
sub
jb
and
mov
loop
sarb
mov
xor
push
test
xchg
testb
bound
dec
sub
and
adc
or
adc
adc
mov
test
jno
jno
insb
or
xchg
mov
les
outsl
dec
out
dec
int3
inc
int
mov
in
ficoml
icebp
or
mov
and
repnz
aaa
inc
jnp
cmp
push
fmull
in
enter
inc
bound
inc
mov
cmpsl
and
inc
scas
and
push
inc
cmp
cmp
inc
cmpsb
and
enter
mov
in
push
ss
js
aaa
incb
inc
mov
in
inc
jne
outsb
mov
les
stc
sbb
lods
jb
push
inc
mov
cmc
enter
xor
dec
shlb
fcoms
jmp
xchg
rcll
jmp
shlb
aad
iret
adc
xchg
int
jmp
and
repnz
cmp
push
push
lea
mov
adc
or
adc
adc
mov
test
jno
jno
insb
or
xchg
mov
mov
ficoms
mov
pop
xor
fmull
les
mov
loopne
out
enter
adc
mov
enter
inc
jnp
aas
pop
and
mov
fcoms
jmp
outsb
inc
inc
inc
scas
and
push
inc
cmp
cmp
inc
cmpsb
and
enter
mov
in
push
ss
js
ds
mov
sbb
and
inc
xchg
ret
xchg
lds
les
sbbl
sbb
xchg
xor
repz
in
enter
test
and
or
cld
mov
mov
mov
cmc
enter
xor
dec
shlb
fcoms
jmp
xchg
rcll
jmp
shlb
aad
iret
adc
xchg
int
jmp
and
repnz
cmp
push
push
lea
xchg
daa
sub
je
arpl
mov
je
rcrl
ss
fstps
scas
hlt
lahf
sub
mov
aaa
dec
ljmp
add
test
mov
or
jecxz
int3
arpl
push
xor
push
or
lret
addl
fnstenv
clc
add
sbb
aas
push
push
xchg
aam
mov
outsb
rep
push
mov
pop
mov
stc
jno
ds
mov
loop
ljmp
sub
jp
test
ljmp
movsl
loop
jb
aas
lds
clc
mov
test
clc
pusha
lcall
pop
flds
cld
inc
fdiv
call
lods
sub
loope
int
mov
cltd
lods
fs
jge
pop
and
leave
pop
gs
push
movsl
subl
pop
data16
push
mov
fs
test
aam
ror
cmp
movsl
jp
dec
addr16
iret
jmp
rcrl
mov
imul
push
jbe
jl
and
jecxz
inc
sub
mov
inc
addl
mov
push
mov
fs
fs
add
jbe
sub
push
mov
jge
dec
scas
push
jb
sbb
inc
dec
dec
call
push
iret
rclb
push
lods
pop
xchg
xchg
mov
xor
lret
imul
xchg
adc
sysexit
cwtl
int
sub
sbb
test
sbb
loope
jne
test
cmc
idiv
ret
fimuls
jge
pop
pop
mov
jmp
jmp
scas
sub
push
xchg
test
add
inc
ja
ja
jg
mov
movsb
inc
shll
ljmp
movsb
jo
in
enter
pop
pop
xor
bound
pushf
mov
ja
jl
aaa
test
jg
pop
cmp
jmp
adc
xchg
lock
mov
and
fistl
repnz
and
and
sub
imul
fiaddl
inc
pusha
inc
mov
dec
clc
add
adc
faddl
adc
fs
jg
fcoml
out
dec
std
ret
push
in
mov
testl
mov
enter
cltd
pop
test
mov
std
and
test
xchg
sti
add
bound
aam
mov
std
fs
pop
mov
sti
sub
aaa
mov
nop
jb
repz
fimuls
js
jl
pop
push
cmp
jbe
out
orl
nop
out
pusha
mov
inc
or
stos
sarb
jne
loopne
or
sub
push
and
push
cmp
pushl
divb
dec
shrb
add
xchg
jbe
lcall
cmpsl
pushf
aad
test
aad
jns
pop
jmp
xor
scas
dec
std
cmpsb
js
jb
and
add
pop
mov
mov
sub
pop
jb
push
jge
stos
bound
fadd
mov
outsb
and
lea
cmp
cli
mov
inc
popf
in
dec
jae
aas
mov
andl
jae
mov
lahf
mov
jge
mov
pushf
mov
jmp
dec
testb
xor
daa
pop
ficoml
fisttps
not
scas
in
dec
cli
out
mov
xchg
orps
push
jne
fcoms
push
ljmp
and
mov
jae
adc
cmp
out
sub
adc
dec
push
pop
ret
rcll
std
mov
fldt
les
xchg
or
xchg
inc
bound
push
jg
arpl
rcl
sub
jno
sbb
fwait
call
arpl
lcall
cmp
les
add
jbe
ja
mov
out
mov
cmp
insl
addl
mov
mov
insl
push
fidivl
sub
jl
icebp
movsb
cmp
ss
or
cmp
std
cmc
xchg
mov
movsb
sbb
push
std
xchg
fadd
jns
mov
dec
jg
push
roll
cmp
mov
out
mov
or
jp
je
or
aas
mov
sbb
icebp
xchg
mov
add
jb
dec
fcoms
addl
subb
jg
aad
sub
jmp
jge
mov
xchg
lcall
stos
in
dec
jp
mov
or
mov
cmp
mov
mov
jnp
les
adc
out
xchg
add
js
dec
jl
lahf
fs
jmp
pop
or
adc
fadd
jge
fsubs
pushf
xchg
cmp
push
pop
outsl
fcoms
addl
lods
out
push
lods
mov
cs
cs
jns
add
xchg
mov
repnz
aam
push
test
or
decl
popa
add
inc
xor
lahf
loope
xchg
dec
sub
dec
out
xchg
iret
into
rorb
dec
out
ret
iret
mov
inc
clc
cs
push
inc
dec
and
dec
sub
adc
mov
les
scas
mov
shll
and
fmuls
pushl
pusha
jg
xchg
int
mov
jp
lods
add
cmp
add
xor
aaa
ret
mov
icebp
ret
pop
lock
aad
lahf
adc
lods
loop
push
push
xor
inc
xchg
jle
pop
adc
xor
push
and
fwait
push
and
add
pop
and
popf
mov
and
add
pop
pop
into
mov
jbe
mov
jge
ds
pop
cmpb
push
sub
lahf
fwait
mov
jg
das
loopne
xchg
xorb
and
inc
push
or
ret
mov
cmp
fdiv
dec
lds
mov
push
bound
cmp
cmp
test
out
mov
cmp
lcall
or
outsl
inc
push
xchg
leave
push
push
sahf
or
add
mov
fwait
inc
jmp
or
push
jmp
shlb
add
xor
push
mov
movsl
inc
fldcw
stos
or
leave
lods
pop
mov
sub
iret
and
clc
sub
std
repnz
fimuls
lods
andl
hlt
clc
shr
xchg
pop
mov
pop
out
arpl
pop
lds
jle
dec
sbb
mov
sbb
mov
xor
pop
push
xchg
fisttpll
jmp
jb
push
je
jmp
cs
data16
lock
std
push
lret
sbb
mov
bound
es
aaa
ljmp
sub
js
out
hlt
arpl
cmp
jecxz
insb
mov
cmp
in
xchg
in
ret
orb
incb
std
mov
mov
shll
dec
sbb
sti
add
mov
mov
pop
addr16
out
je
sub
gs
imul
sub
lods
adc
mov
ljmp
dec
mov
mov
repz
inc
je
and
gs
std
repnz
out
dec
pop
mov
jmp
push
mov
jge
cld
push
inc
ficomps
mov
dec
in
inc
sahf
lret
gs
insb
xchg
push
lock
scas
mov
in
or
call
cmp
mov
aam
int
in
fstpl
lahf
mov
nop
xchg
push
jbe
mov
pop
mov
pop
dec
sub
clc
sbb
or
int3
clc
jp
scas
adc
mov
arpl
ja
es
pop
mov
sub
aaa
mov
roll
fisttps
test
arpl
mov
mov
mov
lds
cmp
xor
jecxz
pop
sub
aas
subl
add
es
call
outsl
dec
mov
fwait
repz
movsb
sarl
jl
mov
mov
ja
ret
insl
push
jmp
rcr
sbb
jnp
inc
in
je
scas
notl
jge
out
inc
fidivs
inc
mov
imul
mov
inc
mov
push
mov
or
lds
popf
jg
cltd
insl
roll
pop
xor
cmp
sti
xor
jg
daa
jne
xor
rcrl
mov
lcall
sbbb
rcl
sbbl
pop
int3
xor
inc
scas
lret
inc
int
fcoml
ja
loop
jge
adc
rolb
lea
pop
pop
lcall
fwait
fs
inc
in
xor
xor
cmp
lret
xchg
mov
lods
int
mov
cmp
fldcw
mov
or
imul
fiaddl
mov
jb
dec
mov
xchg
jmp
lods
push
icebp
push
xchg
jo
aad
pop
xor
mov
mov
mov
ja
pop
jge
mov
xor
data16
jno
lds
ja
mov
movsb
in
dec
and
jge
in
je
push
shlb
mov
imul
arpl
sbb
sarl
mov
adc
mov
sub
xchg
enter
mov
fwait
icebp
or
notl
ljmp
mov
push
test
inc
scas
mov
cmp
jo
ret
inc
dec
out
sub
andb
fadds
add
testl
or
push
and
push
jp
je
jp
leave
inc
inc
scas
mov
or
cmpsl
push
gs
or
in
lahf
mov
nop
insl
lods
push
rcr
sbb
aam
or
pop
pop
mov
or
imul
adcl
cli
push
fistpll
bound
mov
loopne
mov
cmp
hlt
fistl
andl
stos
insb
das
aad
cmpl
lock
gs
adc
test
ret
fidivrs
mov
out
pop
lock
ljmp
jp
pusha
and
xor
xadd
outsb
movsb
or
xchg
test
aad
and
fwait
insl
int3
test
add
in
cmp
push
jecxz
cmpb
popf
in
inc
mov
push
fldenv
fisubl
fidivrs
add
xor
pop
adc
mov
std
ja
stos
sarb
inc
push
test
xchg
push
mov
push
inc
aas
sahf
cmp
jne
in
lods
rolb
in
xor
out
sub
mov
movsl
mov
bound
fldcw
xchg
ljmp
sub
or
rcrl
and
jb
stc
or
mov
xchg
jle
shrb
ljmp
pushf
outsl
loopne
jbe
out
jecxz
mov
xchg
push
xchg
jp
pop
mov
add
dec
loopne
add
mov
push
jge
lods
and
mov
mull
into
jbe
out
mov
ljmp
pop
inc
pop
pop
cs
daa
inc
xchg
fsubs
cmc
pop
mov
cltd
mov
pop
popf
push
xchg
movsl
pop
and
pop
sbb
lret
in
add
or
or
lods
pop
cmc
dec
ja
push
mov
sbb
lods
lea
and
mov
mov
jae
push
mov
cli
cmp
mov
rcrb
sub
popa
lock
push
lods
adc
xchg
jle
shll
in
cmp
push
outsb
icebp
lret
sbb
outsl
lds
inc
adc
push
xchg
jp
push
sbb
jbe
test
sarl
in
xchg
aas
sbb
and
repz
fisttpll
pop
sub
pop
movsb
sub
mov
cld
fistps
out
sbb
jo
lds
hlt
sbb
jbe
lcall
jbe
aaa
add
mov
insb
xor
outsl
movd
pop
lock
inc
lret
or
loopne
js
jo
in
push
sub
add
sbb
mov
xor
mov
aad
arpl
les
ficomps
inc
stc
movsl
add
mov
inc
ffree
lret
out
ds
fimuls
ret
aas
shl
push
das
sahf
sub
divb
jge
dec
inc
fildl
mov
mov
sbb
sar
cmp
add
stc
dec
inc
cwtl
inc
xor
cmp
mov
repnz
fstl
jae
mov
dec
and
sbb
ror
pop
mov
js
in
xorb
insb
sbb
les
xchg
jnp
sbb
push
mov
push
xchg
mov
sub
xor
mov
in
inc
out
mov
call
push
or
ljmp
pop
popa
pop
or
and
setno
mov
loop
add
pusha
inc
mov
mov
add
push
fdivrl
or
mov
cltd
cmc
mov
mov
pop
inc
std
jbe
push
xchg
jecxz
cmp
xor
int
mov
mov
aas
cmovg
xchg
push
or
jae
out
inc
inc
or
push
fmull
mov
add
dec
lret
pop
xchg
mov
insb
sub
mov
test
test
test
leave
int
jae
lret
lock
cld
clc
ret
fisubrl
ret
stos
loopne
test
push
hlt
push
lret
je
jl
shr
out
in
rcr
loop
and
rcr
arpl
xchg
jle
adc
or
sbb
ljmpw
push
jle
cmc
dec
sub
xlat
mov
in
insl
sub
repnz
movq
in
pop
iret
jecxz
pushf
push
xchg
iret
cmpl
pusha
stc
repz
je
inc
adc
ja
sbb
or
add
xchg
stos
addl
lahf
movsb
stc
hlt
mov
imul
xor
or
xchg
sar
aas
stc
cmc
jg
scas
lahf
fdivrp
out
xor
in
mov
sub
movsb
mov
stc
inc
test
rep
ret
sub
push
dec
les
push
xchg
cmpsl
rcrb
aad
cmp
addl
addb
stos
repz
xchg
das
add
sbb
mov
addl
shlb
push
popa
xchg
aas
sbb
pop
push
sbb
inc
fstl
es
ds
jmp
cmpsl
push
mov
or
sub
push
adc
imul
aam
aad
inc
loop
mov
cli
pushf
gs
mov
pop
push
sbb
insb
pusha
jno
in
outsb
dec
lret
fstl
add
sub
inc
shrb
int3
jbe
or
sti
arpl
xchg
xchg
fdivrs
pop
repz
adc
out
loop
jmp
sbb
ret
bound
icebp
popf
aam
sub
or
orl
jno
aas
jae
sahf
hlt
adc
fdivrs
stc
push
testl
sub
pushf
jl
scas
idivb
and
roll
add
lret
lahf
add
and
dec
adc
cmp
lods
dec
movsl
mov
lret
dec
stos
cwtl
data16
imul
cmp
in
aas
pop
lcall
out
jl
lods
xor
or
pusha
push
repz
dec
clc
leave
xlat
sahf
xchg
stos
dec
clc
shl
ja
lods
inc
pop
add
mov
xchg
faddl
clc
add
mov
sbb
lods
test
cmp
mov
dec
jp
icebp
test
popf
mov
popa
nop
loope
mov
gs
mov
out
popf
push
xchg
or
dec
loop
xchg
jge
mov
imul
repnz
jmp
test
adc
jmp
jge
jo
add
lret
add
insl
or
push
imul
add
cli
inc
outsb
add
sbb
test
mov
xchg
mov
lea
loop
das
jns
adc
sbb
mov
test
mov
scas
orl
jnp
shr
jmp
dec
jo
pop
mov
imul
cmpsl
add
xchg
or
mov
xchg
lret
or
xor
pop
out
push
lods
aas
cmp
xor
fmull
jmp
mov
sub
push
lea
fxch
sub
mov
arpl
out
arpl
and
enter
aas
mov
push
scas
adc
push
pop
decl
js
pop
insl
cltd
insl
jbe
in
pop
das
scas
ds
inc
or
dec
fs
cld
repnz
lods
mov
aaa
xchg
cs
repnz
or
push
fucom
lret
mov
lea
adc
jae
rorl
xor
mov
shlb
out
insl
adc
loope
or
pop
cmp
lods
lds
aam
mov
pop
add
popa
sbbb
xchg
insl
imul
mov
ja
push
aam
sbb
mov
test
push
fidivrl
out
cmpsl
dec
sbb
repz
mov
fwait
leave
adc
imul
add
daa
imul
or
and
jb
jmp
iret
mov
int
mov
or
mov
cld
mov
fisttpll
or
cld
jnp
push
out
add
subl
mov
cmp
cmp
psubw
add
movsb
mov
xchg
mov
lock
cltd
jle
or
lret
insl
ficoml
lahf
add
jle
add
negb
movsl
sti
ret
jmp
jg
data16
inc
cmc
jns
jb
add
jno
scas
jne
cmp
jmp
sar
cmp
fmull
dec
inc
std
sub
fisttps
std
mov
sbb
pop
les
cmp
scas
xor
imulb
mov
jle
mov
jle
and
mov
daa
mov
out
iret
pop
testl
inc
stos
shl
adc
jb
xlat
cwtl
add
ret
pop
mov
cld
mov
xchg
pushf
test
sub
out
popf
add
xor
xchg
addr16
bound
sbb
arpl
adc
add
push
cmpb
aaa
imul
frstor
std
das
add
jle
sub
or
mov
pusha
testl
add
sub
lcall
arpl
fmull
popl
nop
mov
arpl
push
jns
push
push
inc
hlt
js
mov
push
mov
sbb
xchg
hlt
dec
jmp
movsb
clc
add
adc
xchg
lret
xchg
or
shlb
push
jne
repnz
pop
jae
in
push
sbb
ds
shll
pop
add
andl
out
aaa
lods
jbe
cmp
add
sub
cmp
cmp
clc
jno
push
pushf
sub
push
testb
movsb
mov
mov
cmpsl
pop
lock
pop
or
shll
cmp
sbb
adc
fs
int
ficomps
push
in
mov
push
push
mov
add
or
ret
repz
sarb
mov
push
push
push
aad
mov
fstpl
pushf
fistps
leave
subl
sbb
das
pushf
outsl
or
push
pusha
pop
stc
jecxz
test
mov
dec
jp
cmpsb
mov
ret
clc
sti
aaa
xchg
adc
je
mov
mov
ja
lods
cmp
jns
adc
add
add
jle
dec
xor
mov
jge
test
insl
out
jge
rcrb
and
jb
std
lahf
cwtl
pop
in
dec
push
addr16
cli
jnp
loopne
test
into
xchg
idivl
arpl
fisubrs
push
insl
fildl
mov
lods
push
sub
xchg
ret
fdiv
mov
xorl
xor
frstor
adc
jne
aad
xor
cmp
jae
sbb
fucomp
pop
inc
mov
cltd
mov
pop
nop
add
insb
cmp
sbbl
dec
ffree
push
jo
mov
push
ret
loope
mov
ret
outsb
sub
adc
jg
xchg
inc
jmp
inc
xor
mov
sbb
mov
into
int
or
xor
and
xor
xchg
aad
test
sub
int
add
enter
fistpl
aad
pop
in
sahf
ja
rolb
mov
xchg
clc
dec
mov
scas
add
mov
iret
pop
or
insb
test
fnstcw
shrb
cwtl
aaa
nop
push
mov
and
xchg
push
xor
cwtl
cld
adc
dec
leave
mov
mov
lods
xor
pop
sbb
hlt
insl
inc
push
mov
insb
push
aam
adc
in
or
xor
sub
popa
es
test
fisubl
call
xor
xor
negl
out
and
sub
dec
mov
sti
push
fwait
mov
mov
inc
test
icebp
mov
jo
mov
or
jmp
test
sbb
aam
xchg
xchg
jae
xchg
xchg
fs
xor
mov
adc
jp
inc
sbb
shr
movsb
stc
jl
jb
ss
fwait
popa
enter
push
ss
icebp
dec
sbbb
pop
xchg
sub
cmp
or
pop
xchg
jno
adc
xor
adc
inc
push
sub
test
push
inc
pop
sbb
mov
scas
push
adc
sub
xor
out
mov
add
and
popf
mov
push
pusha
out
cmpb
jbe
or
pop
iret
mov
lcall
cmp
ss
fcmovu
in
inc
scas
out
or
addb
mov
xlat
leave
scas
inc
jecxz
add
mov
ss
dec
add
push
mov
call
clc
repz
add
mov
out
out
or
divb
pop
xchg
es
mov
inc
or
push
cld
jge
out
add
mov
scas
faddp
and
mov
jmp
sbb
imul
xchg
ror
jg
gs
stc
lret
test
jns
shr
scas
xor
jno
xchg
ljmp
jmp
sub
scas
lret
inc
cmp
add
cmp
fs
lock
push
and
subb
mov
lds
mov
mov
or
lds
outsl
push
test
jp
nop
cld
es
mov
xchg
divl
fsubrs
sbb
clc
push
and
mov
pushf
pushf
push
jge
ljmp
pop
int3
jge
inc
fnstsw
outsb
outsl
sub
mov
cmpsl
push
sub
lret
and
mov
xor
cmp
pop
popa
ja
popa
xchg
sbb
push
fstpt
mov
cwtl
insl
jb
pop
dec
mov
jno
add
add
fsub
fistpll
int
imul
repnz
leave
pop
test
lods
out
dec
add
mov
adc
imul
popa
xor
sub
subl
sbb
xchg
mov
aaa
rorb
stos
mov
lcall
pop
push
loopne
mov
xchg
dec
mov
mov
test
and
insb
ret
sub
sbb
xor
icebp
std
add
xchg
adc
lret
mov
push
push
cltd
adc
dec
popa
push
inc
cmp
sarl
jl
stc
mov
mov
pop
jbe
inc
adc
leave
cmp
insl
xchg
pop
add
jge
je
inc
aad
js
xchg
imul
sti
fs
je
pop
and
fcom
lea
test
xchg
cmp
pop
hlt
xchg
inc
popf
daa
add
push
shlb
and
loope
pop
jnp
sub
fwait
jne
inc
mov
mov
and
jmp
push
lcall
pop
leave
cmp
popa
mov
notb
fsubs
add
mov
into
mov
jle
call
mov
inc
mov
jne
insl
outsl
insl
mov
out
jbe
out
adc
leave
jnp
sub
hlt
mov
push
xor
xor
loopne
pop
insb
popf
addr16
ret
pop
mov
dec
xor
push
adc
divl
or
clc
ret
clc
test
shll
pop
movsb
mov
into
and
mov
inc
sub
dec
dec
xchg
push
movsl
and
aad
ljmp
cmpsb
cld
inc
sbbl
into
inc
add
sub
jl
stos
stos
inc
inc
stos
fs
pop
jle
outsb
fdivrl
jmp
ret
xchg
test
or
outsl
dec
movsl
push
lods
push
or
push
mov
mov
mov
sbb
jne
pop
inc
insl
es
push
gs
jge
stos
xlat
mov
push
aad
mov
sbb
add
inc
lock
cmp
stos
xlat
jnp
out
cwtl
das
dec
test
fimuls
inc
pop
mov
mov
ret
pop
jmp
jle
lret
sub
pop
loop
jo
dec
sti
mov
stos
cmp
movl
xor
out
sub
fnstcw
test
push
pop
movsb
sub
aam
shll
and
pop
in
aaa
cmp
add
ds
xchg
adc
pop
dec
ds
push
negl
mov
add
mov
aad
push
gs
sbb
mov
mov
xlat
xchg
cmpl
data16
mov
cmp
ret
sar
inc
imull
shlb
test
in
jno
mov
sub
push
out
dec
jae
cmp
iret
jg
xchg
and
pop
aam
inc
cmc
pop
pop
adc
ja
push
xlat
xor
jb
nop
outsb
push
or
pop
movsb
sub
mov
sub
rcll
fistps
insl
sbb
jbe
mov
push
inc
lea
mov
outsb
test
sbb
mov
sbb
xchg
push
addr16
push
push
sub
pop
mov
mov
cs
xchg
loopne
lods
and
std
push
push
mov
mov
fcos
nop
jp
push
mov
or
imul
jl
pop
int
pop
push
and
lcall
cwtl
or
imul
mov
call
dec
icebp
xor
insl
inc
test
sub
out
data16
cmp
mov
dec
dec
cmpsb
mov
loop
scas
es
jmp
inc
dec
mov
push
repz
add
je
dec
dec
shl
mov
pop
adc
test
inc
pop
cmp
dec
jae
mov
arpl
xchg
daa
mov
push
mov
sub
in
sub
lods
stc
cmpsb
pop
push
mov
adc
fcoms
cmp
or
fwait
and
in
pop
or
adc
push
testl
cmp
pop
and
movsb
sbb
fs
mov
notl
das
loop
pop
loope
dec
lock
pushf
jge
jno
push
into
sbb
inc
jae
rorl
cmc
cmp
in
xchg
aad
add
or
mov
xor
jbe
dec
pop
mov
das
popf
jmp
fistpll
adc
pop
fwait
imul
mov
iret
sub
sub
sahf
mov
cmp
jle
cmp
popa
in
in
sbb
stc
movsb
jns
mov
cmp
jge
nopl
push
inc
xchg
mov
pop
push
sub
or
push
repnz
or
filds
mov
jns
ret
es
lods
cmp
xor
out
mov
jns
call
ret
shlb
cwtl
subl
pop
ret
scas
imul
pop
xor
mov
jnp
or
cmc
xlat
xor
dec
enter
pop
inc
mov
outsb
and
push
adc
xor
mov
jae
repnz
xchg
shrb
mov
jp
and
aam
cmpsb
mov
xchg
test
clc
ret
fcomi
sub
pop
mov
or
loope
fidivrs
in
jg
xor
lds
xchg
imul
bound
lds
xchg
xchg
inc
inc
push
pop
or
pop
add
mov
insb
xchg
fldt
mov
test
push
dec
mov
mov
div
out
data16
out
fidivrs
cmp
popf
fistpl
pushf
hlt
cmp
out
icebp
bsr
lods
insl
leave
and
push
enter
aad
pop
nop
std
push
popf
and
test
enter
adc
mov
add
xchg
lock
ret
jns
cs
push
outsl
cs
hlt
jns
inc
out
hlt
dec
popa
or
xchg
or
fsubl
scas
and
mov
les
inc
jg
sbb
scas
or
jns
xchg
das
fwait
pop
test
mov
js
das
adc
fistps
movsl
dec
repz
jl
rorb
or
cmp
fcomip
and
sub
enter
ret
and
jg
xor
mov
lock
test
jns
push
mov
pop
repnz
sbb
cmp
aaa
test
dec
nop
out
mov
int3
stos
jl
stos
call
adc
push
imul
dec
add
es
mov
orl
push
fnsave
jnp
mov
ljmp
aad
push
adc
popf
mov
dec
adc
fildl
sbb
movsl
add
mov
cmp
xchg
out
mov
int
sbb
aam
imul
lahf
and
icebp
test
lcall
mov
fsubr
notl
push
xchg
test
lcall
mov
mov
mov
mov
pushf
inc
pusha
pop
mov
adc
shl
lock
xor
push
ficoms
fisubs
xchg
sub
jl
push
loop
jmp
ret
xchg
sti
movsb
xchg
jg
dec
mov
mov
loop
psrlw
std
jnp
stos
rorb
push
fcoms
sub
xor
call
mov
or
xchg
rcll
filds
and
sti
repz
mov
sub
pop
xchg
cwtl
xor
ds
adc
das
dec
sub
pusha
and
mov
lahf
push
mov
mov
cmp
and
ja
cmp
cmp
and
mov
cmpsl
or
xor
sbb
cmp
std
xchg
xor
fimull
cs
sub
mov
fadd
pop
mov
pop
icebp
jae
mov
and
or
out
imul
lods
lds
test
push
popa
dec
mov
push
rcl
cwtl
xchg
cmp
js
daa
add
jle
add
lahf
out
cmpsl
outsl
sub
adc
or
jns
pop
inc
xchg
cli
dec
push
push
data16
xchg
in
push
out
inc
push
frstor
mov
sub
jns
and
out
out
shll
and
leave
mov
adc
lret
sub
mov
inc
pop
mov
jg
icebp
add
imul
popa
loopne
jns
mov
lahf
adc
mov
sbb
loop
in
pusha
inc
and
fstps
cmc
mov
loope
cmp
test
in
fsubl
add
div
mov
xchg
or
inc
inc
icebp
sub
sub
rcll
push
mov
cmp
mov
hlt
test
add
nop
xchg
push
adc
in
cltd
cmpsl
lds
push
lea
xor
hlt
xor
sbb
and
xchg
das
and
cmpsl
or
inc
xlat
xor
xchg
cmpsl
lods
jb
test
cld
imulb
cld
sti
dec
cld
cmc
fadd
mov
or
cltd
xor
fstps
cld
mov
bound
nop
xor
sbbb
daa
sahf
movsb
movsl
jo
cmp
repz
stc
cmp
hlt
loope
leave
add
mov
imul
push
fsts
ret
mov
and
jge
dec
adc
popf
fidivrs
adcl
sahf
loopne
fisubrs
shlb
repnz
fnsave
icebp
jb
repnz
xchg
into
dec
or
jle
dec
xor
jns
rcrb
jp
out
sbb
inc
das
xor
jmp
adc
sub
pop
test
scas
lods
movsb
add
cmpsl
jb
push
addb
mov
insl
adc
cs
add
dec
jb
out
jge
mov
bound
inc
sub
in
push
push
outsl
jl
nop
mov
push
xchg
mov
cmp
mov
add
add
sahf
out
mov
mov
add
stos
movsb
shlb
or
js
cmp
and
dec
test
subb
push
out
js
inc
shrl
cmpl
pop
das
jle
mov
test
fsubrs
popa
andl
aam
movsl
sbb
movsb
xor
loopne
shrl
jp
xchg
lcall
nop
shr
mull
and
xor
jne
arpl
imul
jmp
mov
dec
push
push
pop
mov
mov
dec
clc
aam
imul
xor
mov
sbb
mov
stos
mov
stos
mov
sub
in
dec
push
imul
cwtl
inc
test
inc
and
testl
out
pop
loope
sub
and
stos
sarb
and
xor
clc
aaa
icebp
lods
mov
xchg
add
mov
orps
inc
in
lods
out
repnz
mov
cmc
mov
movsl
cli
push
in
pop
pop
adc
jl
lods
cwtl
es
dec
jae
cmpsb
xchg
jmp
mov
sbb
fidivs
jb
ljmp
jl
test
pop
into
outsl
in
mov
jge
int3
mov
jmp
dec
dec
bound
loop
aas
insl
fadds
iret
leave
cmpsl
roll
sub
lods
push
mov
mov
fsubl
add
shr
cmp
ficoms
xchg
mov
jecxz
add
push
imul
push
push
lds
loope
fistps
inc
enter
push
es
mov
lret
repz
pusha
les
cmpsb
xchg
aas
mov
xor
lea
xor
pop
pop
jecxz
mov
mov
jp
push
sub
out
jae
fidivrs
cmp
jo
mov
cmp
pop
dec
scas
mov
aaa
shlb
pusha
inc
rclb
xchg
fs
jge
dec
dec
and
pusha
inc
ror
int3
gs
inc
aad
or
jmp
sbb
out
xor
loop
mov
push
insb
or
out
repnz
xchg
push
jbe
adc
pop
rorb
pop
lock
int3
repnz
ficompl
jno
daa
daa
scas
sti
pop
sbb
push
mov
adc
jno
pop
outsb
lds
insl
repnz
icebp
add
xor
pop
leave
xchg
in
mov
xchg
mov
xchg
lcall
stc
es
ffree
jp
lds
fcoms
cmc
cwtl
aad
pop
push
ja
call
pop
shr
sub
lds
mov
mov
xchg
sub
pushf
test
pop
scas
ds
xchg
xchg
xchg
xlat
addr16
inc
mov
lods
jmp
add
ror
aam
lcall
mov
push
ljmp
add
mov
cmp
sbb
mov
rcr
push
loop
test
lock
insb
pop
cmp
in
mov
outsb
nop
fadds
sbb
dec
cmp
in
ja
mov
aaa
cmp
mov
je
shlb
mov
or
xchg
cltd
cmpsl
sub
cmp
punpckldq
das
xor
add
push
mov
loop
cli
dec
test
jmp
vorps
insb
lock
adc
sahf
sub
jle
adc
xchg
fwait
and
jmp
dec
or
les
and
idivb
ja
fs
ret
or
lret
inc
into
int3
into
jmp
enter
adc
xor
loop
gs
mov
dec
stos
jnp
inc
lret
cmpsl
pop
ret
mov
into
or
pop
adc
mov
shl
bnd
ljmp
jecxz
dec
std
pop
or
repnz
hlt
and
cltd
inc
fmuls
push
jge
lods
mov
push
mov
shlb
and
imul
out
imul
ja
cmp
xor
mov
out
sbb
leave
push
sti
mull
int3
jle,pn
inc
cmp
aas
or
pop
rcll
cltd
movsb
jno
aam
sub
dec
mov
jb
sbb
push
in
push
pushf
cmp
cwtl
lret
push
cli
and
fbstp
xor
jnp
adc
and
push
push
sarb
pop
mov
pop
xor
xor
adc
stc
and
inc
pusha
pop
xor
lea
sub
push
cltd
dec
inc
ds
dec
out
push
xchg
clc
ret
dec
je
jb
cmp
rcr
jne
mov
jl
bound
shlb
inc
daa
rcll
adc
mov
push
clc
dec
dec
mov
cmpl
in
cwtl
clc
add
iret
jne
xchg
imul
sbbb
out
push
pop
cli
dec
loope
dec
pop
loopne
stos
cltd
mull
xlat
xor
pusha
iret
imul
mov
pop
int3
out
int3
je
mov
out
ss
pop
mov
out
ds
xchg
add
lcall
daa
adc
or
cmp
mov
or
bound
push
repnz
add
push
aaa
sub
mov
sub
out
stos
cwtl
inc
pop
sbb
lret
iret
in
dec
add
xor
cmpsl
fmuls
cmp
test
pushf
dec
push
call
iret
jnp
add
addr16
xor
inc
cmp
mov
fsub
arpl
jne
sbb
lahf
pop
xchg
enter
dec
xlat
pushf
imul
popf
add
lret
mov
sbb
loop
xchg
inc
es
je
xchg
int
push
sbb
xor
jne
gs
lds
jno
test
cmc
mov
cmpsl
loopne
push
mov
push
cli
ret
xchg
out
mov
ret
pop
rcl
das
das
inc
push
fs
xchg
mov
xor
inc
loop
in
adc
push
mov
aam
mov
mov
inc
jmp
js
filds
faddp
in
adc
push
cmp
and
or
insb
mov
pop
call
xchg
lcall
js
imul
sbb
test
sub
out
ret
and
mov
mov
sub
jmp
xor
push
lods
int
xchg
iret
ss
mov
push
cmp
nop
loopne
xchg
xchg
movsb
jg
test
fwait
imul
mov
and
scas
nop
loopne
icebp
jbe
cmp
push
shr
pop
aas
ljmp
out
imul
pop
test
outsl
or
inc
aam
movsb
stos
xor
or
mov
pop
aad
mov
cwtl
dec
adc
or
cmp
dec
jmp
or
aaa
pop
fsub
loope
pushf
cmp
ljmp
inc
mov
gs
mov
adc
inc
repnz
inc
imul
xchg
lods
pop
and
aas
xor
xor
or
repnz
push
jecxz
in
pushf
xchg
stc
jb
fcompl
mov
sarb
ror
mov
test
inc
xor
in
loop
xor
sbb
pushf
sbb
loop
fisubrl
cmp
jae
add
and
push
test
popa
inc
jb
add
inc
enter
js
xchg
lods
insl
mov
jmp
mov
ror
pop
or
insl
pop
add
fsubs
inc
dec
cmp
push
scas
hlt
and
and
outsb
push
mov
mov
jo
cmp
push
mov
or
aaa
add
and
sarl
xor
pop
jl
mov
cmp
not
mov
or
ja
mov
sbbb
iret
mov
jne
pop
push
jg
jge,pn
test
pushf
lods
cmp
push
les
je
pop
xor
or
rcll
pop
push
js
lea
add
pop
jb
dec
sti
stc
inc
xlat
xor
fnstcw
lods
cli
into
sbb
js
sbb
daa
popf
inc
xor
or
add
xor
dec
das
cmpl
fists
ds
aaa
sbb
daa
xor
jmp
jmp
adc
addb
or
insl
pop
mov
or
dec
fmuls
adc
xchg
out
pop
jns
scas
fs
addr16
or
std
cmp
pusha
sub
nop
and
in
imul
inc
and
xchg
mov
les
sbb
xlat
frstor
xor
repz
mov
jmp
xor
nop
scas
lret
sbb
push
adc
stos
out
roll
or
outsl
mov
fildll
mov
mov
add
cmp
loop
and
dec
cwtl
in
push
push
mov
pusha
gs
push
mov
inc
mov
mov
xor
sub
sbb
and
adc
outsb
sbb
add
int
adc
rcr
call
lea
pushf
sysret
push
inc
sahf
mov
xor
inc
movsb
fwait
jae
inc
sahf
sub
movsl
testb
push
popa
adc
mov
mov
pmaddwd
mov
inc
push
jp
shr
sbb
inc
test
js
and
jge
mov
dec
mov
sub
cli
dec
into
push
cli
insl
inc
or
shrl
jp
jo
dec
scas
lcall
inc
test
xchg
jo
stos
imul
lcall
aad
scas
imul
ret
mov
cld
xchg
cmc
sub
cmpsl
add
cmp
xchg
cmp
rcrl
cwtl
xchg
aaa
ja
sti
cmpsl
shrl
outsl
push
cli
out
popl
decl
push
pop
andb
in
es
cli
popf
scas
push
stos
sub
mov
jge
push
sti
adc
push
fcomp
adc
mov
js
sbb
xchg
enter
das
mov
addr16
adc
in
out
fistps
ficompl
cld
lds
push
cmp
out
mov
cmp
cmp
sbb
in
pop
insl
xchg
jno
or
ja
and
xchg
jne
adc
push
push
cltd
loop
test
mov
pop
mov
scas
cmpsl
mov
pop
outsl
sar
pcmpeqd
lock
xor
mov
cli
xchg
insl
shl
push
lea
pop
xor
addr16
mov
mov
roll
mov
mov
int
mov
test
shlb
fsubrl
lahf
mov
cmpsl
xchg
imul
insl
int
jae
add
rorb
stos
shr
mov
jne
test
sub
xchg
sub
stc
fstpt
fstpl
jg
jne
pop
or
lahf
xor
and
xlat
jge
jb
dec
push
mov
mov
pop
and
hlt
mov
push
leave
inc
shr
cli
mov
iret
jle
mov
les
out
pop
inc
mov
xchg
cs
mov
push
rol
test
fnstenv
and
adc
lahf
adcb
fucomip
sub
mov
sahf
fsubs
add
popf
and
das
cmp
inc
mov
sub
jo
outsb
push
shrb
xor
xor
mov
mov
ret
or
cmp
mov
popf
mov
mov
movsb
cmp
sub
xchg
mov
ret
cltd
xor
sub
mov
adc
xchg
push
jge
arpl
loopne
iret
lahf
cmp
loop
mov
xchg
fs
outsb
push
inc
or
sbb
mov
cli
sahf
xor
sbb
and
cmpsb
in
cwtl
orb
fists
out
fidivl
arpl
cmpsb
sub
ljmp
nop
mov
loop
leave
pop
ror
iret
mov
andl
aad
popa
repz
sahf
and
pop
pop
inc
out
js
arpl
xchg
shrl
mov
mov
cmc
pop
adc
sahf
stc
les
hlt
adc
push
pop
shlb
movsl
data16
mov
pop
loopne
or
imul
ds
push
mov
leave
mov
push
int3
mov
cmp
loop
push
sub
sbb
aas
mov
pop
push
xlat
fsts
or
mov
outsb
push
mov
adc
stos
pop
mov
sbb
mov
pop
sbb
xor
adc
mov
push
jae
ss
je
fsubrl
mov
cmp
pop
fcomps
das
mov
int3
dec
popa
pop
push
dec
jb
jo
jno
pop
pop
cmpsl
into
cmp
lds
mov
xchg
mov
or
cmc
mov
xor
mov
push
movsb
movsb
fnstenv
jnp
push
imul
jne
lds
ss
pushl
pusha
jne
movsl
push
out
setg
sbb
and
ja
aas
xchg
and
and
jno
dec
mov
repz
adc
push
popf
jle
push
jae
lods
push
cmpsl
adc
bound
pushf
pop
jmp
push
ret
pop
xor
xchg
cld
pop
inc
pop
dec
jbe
dec
out
imul
fisttpll
imul
test
jne
sub
cmpsl
mov
pop
cld
fcomps
mov
or
je
adc
xchg
xchg
fisubs
push
fdivrp
jae
imul
sub
cmp
lds
dec
aad
mov
les
sbb
rol
ffree
sbb
fs
jno
xor
aas
fstpt
mov
fwait
in
bound
pop
sub
adc
insb
jbe
test
push
push
mov
and
in
push
sub
aam
decb
jo
popa
int3
dec
add
fistps
insb
and
push
adc
mov
aad
mov
je
test
mov
in
xor
add
outsb
pop
aas
mov
cmpsl
push
test
scas
rclb
sub
xchg
push
and
es
mov
das
xchg
sub
cmpsl
cltd
fimull
clc
orl
ret
out
mov
test
sbb
out
cmpsl
pop
jne
pop
adc
dec
and
movl
cmp
negl
mov
add
xor
popa
pop
mov
jno
dec
sbbl
aas
add
daa
inc
mov
sbb
and
sbb
test
adc
mov
insl
push
pop
loop
mov
ret
push
fistpl
add
adc
mov
lret
xchg
or
das
jl
cmp
daa
out
test
clc
xchg
jp
repnz
sarl
dec
out
push
int
push
fiadds
lahf
cmpsb
inc
cwtl
out
mov
in
fsubrs
ljmp
stc
inc
mov
loop
stos
push
loope
fnstsw
pop
fidivl
out
cmpsl
sbb
jecxz
daa
int
cmc
jmp
je
xchg
es
int
testb
fwait
jno
and
movsl
cmpsb
faddl
pushf
mov
add
mov
popf
sti
dec
jge
ljmp
popf
pop
inc
das
xchg
out
xor
inc
inc
xor
jae
fcmovnb
push
jae
out
imull
sahf
dec
stos
lret
lret
xchg
movsb
in
fildll
cltd
bound
mov
repz
sti
pop
outsl
mov
sbb
mov
jo
xor
ret
or
fisubl
sbb
pop
divl
cmpsb
inc
mov
sub
or
and
fists
add
mov
xchg
jle
imul
pusha
ret
inc
ss
and
adc
lcall
xor
lcall
mov
add
outsb
and
orb
sbb
pop
fwait
pop
jle
pop
jp
rcrb
andb
movsb
mov
ss
fs
cld
in
xchg
pop
push
jne
sbb
test
push
jmp
in
xchg
xor
add
adc
mov
jp
sbbb
mov
outsl
aam
insb
pop
repz
shlb
das
cwtl
jo
jno
vpaddd
pop
fnstenv
adc
pushf
pop
inc
xor
insb
jb
cmp
sbb
fcmove
ret
jmp
into
push
ja
mov
icebp
mov
sub
jae
imul
fsub
jmp
icebp
mov
loope
pushf
adc
xchg
lods
insb
stos
pushl
xchg
cld
inc
loopne
es
aad
andb
imul
aas
inc
int3
push
repz
mov
inc
ficompl
inc
pop
xor
cmp
cmp
addl
sub
pop
rcl
dec
enter
pop
dec
or
pop
pop
sub
ret
ror
movsb
xlat
inc
cmp
cmp
xchg
jb
test
out
out
mov
imul
dec
daa
cld
jmp
mov
mov
cmp
xchg
jns
shlb
xor
int3
loop
or
xchg
inc
loop
clc
aas
cmp
push
sub
cmpsb
sahf
je
and
xlat
lret
je
daa
icebp
dec
aas
popf
cmpb
neg
add
mov
jb
mov
fwait
bound
mov
xor
adc
cs
or
imul
sbb
imul
xchg
cmpsb
insl
pop
scas
mov
insl
dec
mov
icebp
popa
and
dec
das
jg
cld
loopne
fisttps
je
push
in
in
cmpsb
lret
mov
loopne
mov
xchg
jo
or
inc
leave
enter
sbb
adc
stos
dec
shrb
mov
aaa
stos
icebp
lret
daa
sub
xor
hlt
lahf
inc
insl
push
or
mov
or
cmc
popa
dec
mov
faddl
ss
out
mov
push
xchg
jl
xchg
je
inc
and
inc
ss
lds
xor
add
xchg
mov
mov
jmp
mov
jl
cmp
stos
sbb
divl
aaa
divl
cltd
lods
mov
mov
mov
jb
jnp
dec
add
mov
sbb
adc
adc
and
inc
cltd
adc
das
int
sahf
cs
jecxz
jge
mov
mov
lock
pop
dec
fisttpl
cmpsb
es
aas
add
dec
mov
dec
jae
rep
add
push
movsb
fcomps
lods
inc
xor
sub
cmc
cld
inc
shr
imul
jge
rcrb
and
mov
push
sub
pop
pusha
out
out
mov
dec
mov
and
dec
cmp
and
mov
test
arpl
adcb
fsincos
cli
iret
aas
outsb
sbb
mov
push
ret
cmp
fcmovne
cmpsl
popa
adc
mov
subb
repnz
mov
jle
inc
jle
repz
mov
xlat
adcl
sub
ds
and
les
sub
push
mov
sbb
pop
iret
ja
jae
and
jnp
iret
push
pop
popf
mov
out
xor
inc
add
add
inc
xchg
cli
or
mov
out
mov
stc
inc
xlat
mov
cmp
not
test
test
xchg
fstpl
jl
aam
popa
jmp
jnp
je
and
or
fs
movsl
sub
es
jp
imul
mov
cmp
dec
add
pop
insb
mov
push
cld
inc
adc
lea
rorl
aad
mov
jecxz
or
pop
cmp
es
stos
cmp
sbb
aad
pop
pusha
adc
insb
push
ja
dec
idiv
xor
lock
mov
and
jecxz
and
dec
dec
fcmove
cld
lock
clc
mov
loope
xchg
mov
jl
add
push
mov
inc
push
jge
mov
push
xchg
or
mov
inc
rcll
repz
xchg
pusha
mov
or
repz
fsts
sbb
ljmp
sahf
add
jmp
out
imul
call
and
cwtl
inc
in
adc
dec
xchg
xchg
in
in
mov
insl
shlb
out
or
rclb
lret
pop
mov
adc
movsb
mov
xor
and
lea
mov
shlb
and
bound
push
mov
and
test
fstps
int3
pop
push
pushf
ljmp
mov
inc
aad
xchg
into
fwait
mov
jnp
inc
cwtl
jle
mov
popf
xchg
scas
pop
ficomps
cwtl
into
add
sub
jo
rclb
addr16
mov
pop
outsl
shl
dec
mov
and
xchg
push
add
stos
iret
andb
jecxz
xchg
or
mov
iret
fstpt
subb
icebp
dec
push
popf
xor
pushf
xchg
mov
addl
xchg
sbb
add
xor
xor
loop
mov
ss
arpl
and
sbb
loop
adc
sbbl
cli
ss
shrb
push
aam
loope
daa
aaa
jb
aaa
ss
push
js
xlat
sub
mov
cld
sti
sbb
adc
sbb
in
pop
push
sbb
cwtl
popa
bound
fwait
cmp
and
test
mov
jb
jl
inc
in
pop
mov
out
inc
push
enter
cmpsb
mov
repz
mov
shlb
pushf
mov
scas
sbb
sbb
inc
ljmp
fs
dec
mov
test
or
push
mov
aam
push
sahf
add
jge
inc
jmp
adc
dec
mov
or
pop
add
out
push
cmpb
out
cmp
ljmp
add
push
inc
in
into
out
out
xor
lahf
sub
mov
xchg
out
leave
pop
add
fdivrs
bound
iret
rcll
adc
xchg
aam
sbb
jle
out
xlat
xchg
jle
cmp
and
and
inc
inc
into
push
mov
jae
lret
push
cmpb
aam
xor
out
aaa
ret
out
xchg
cmp
cmp
xor
push
enter
dec
sbb
mov
aas
and
xchg
mov
jl
lods
jl
pop
in
hlt
inc
jl
mov
lcall
ret
and
aaa
dec
inc
sub
jmp
pop
cmp
xlat
lods
dec
pusha
out
imul
pusha
dec
and
lds
push
mov
jae
cmpsl
pop
sub
xor
mov
jbe
adc
pop
inc
jno
adc
in
cmp
jl
jae
rcrb
adc
jno
cmpsb
clc
je
mov
addr16
mov
ja
repnz
and
aaa
imul
adc
stos
cmc
push
test
cmp
loope
out
xlat
out
adc
stos
pop
cmp
lea
mov
pop
push
pop
mov
out
xor
inc
add
test
mov
xlat
jne
cmp
popa
mov
dec
cmp
mov
ficompl
push
lea
mul
fidivl
aad
jmp
pushf
stos
mov
bound
in
test
loopne
mov
xchg
shrl
int3
pop
xor
fidivrl
pop
nop
iret
jg
mov
sub
xchg
jl
stc
jge
fsubr
clc
mov
fwait
pop
scas
inc
mov
xchg
inc
mov
out
loope
dec
mov
sbb
ret
and
cmpsl
lret
adc
bound
fisubrs
mov
jge
cmp
in
pop
ss
push
mov
add
or
gs
sub
dec
xchg
mov
dec
fistpll
outsb
ret
dec
movsl
mov
movsl
xor
sub
push
adc
pushf
loope
imul
push
add
loop
mov
lods
stc
mov
pop
repz
push
push
mov
les
pusha
adcl
pop
pop
push
scas
jb
shrb
sub
out
push
inc
rclb
pop
enter
aas
sub
mov
out
pop
aam
jp
jge
mov
mov
pop
push
push
cmc
jecxz
jg
mov
in
xor
and
push
jg
sbb
xchg
adcl
lods
inc
orb
movl
inc
xor
inc
sbb
fnstcw
outsb
mov
cmpsl
mov
dec
jp
xor
pop
fwait
pop
pop
push
sar
lcall
ja
xchg
fstl
pop
enter
cmpsl
push
insl
dec
xor
sbb
mov
jecxz
int3
lahf
and
loopne
inc
jcxz
pop
arpl
and
in
push
stos
sub
inc
jnp
insl
jns
nop
cmp
imul
jae
jns
xor
dec
lods
into
sub
subb
outsb
jnp
out
cld
sub
inc
dec
push
inc
addr16
lcall
adcb
mov
sub
jo
sub
sbb
pusha
pushf
ja
and
leave
mov
pop
insb
mov
cmp
push
ficoms
jmp
or
iret
pop
in
cmp
or
mov
out
decb
dec
push
or
sbb
jae
pop
pop
adc
push
mov
inc
cmp
xor
hlt
or
xchg
pushf
jecxz
adc
sub
loopne
imul
fs
ret
daa
leave
push
dec
mov
and
lock
mov
mov
les
stos
call
inc
mov
xchg
andb
in
sub
inc
ret
inc
jo
pop
pop
mov
mulb
mov
push
pop
push
cmpsb
dec
enter
xor
mov
mov
or
add
push
pop
lret
gs
outsl
fists
add
inc
stos
in
or
outsl
mov
in
push
dec
mov
xchg
in
insb
arpl
int3
js
sbb
test
ficompl
dec
lods
mov
daa
lods
dec
lods
jb
and
ds
cmc
loopne
mov
cmp
and
call
sbb
sub
and
cld
jg
dec
jo
ror
sbb
cmc
rcll
xchg
shlb
sahf
cmp
sbb
xchg
and
iret
shlb
cmp
mov
out
push
cmp
fisubrs
push
jnp
adc
popa
sbb
aam
jnp
or
fmulp
jnp
pcmpeqd
faddp
cmpxchg
mulb
jne
pop
cmp
out
mov
inc
fbstp
test
in
inc
mov
out
mov
jmp
test
push
cmc
inc
fmulp
pop
jge
idivl
out
mov
insb
inc
cmpsl
int
mov
pop
xchg
lret
popl
leave
mov
lret
pop
mov
xor
inc
or
sahf
and
jmp
les
jns
xchg
imul
adc
fldt
rorl
push
xchg
pop
jb
jg
rcll
lods
sbb
cmpsl
and
ss
sahf
cltd
arpl
fwait
add
sub
jg
mov
rorl
mov
fcoms
pop
outsl
push
mov
aas
and
pop
orl
lcall
adc
mov
adc
aad
clc
sbbb
mov
xadd
sub
nop
sti
icebp
dec
outsb
mov
pusha
cmpsl
sbb
repz
and
cmpsl
call
add
jo
mov
rcl
jnp
lods
fstpl
daa
pop
lea
pop
sbb
jg
mov
lfs
shlb
rcrl
sbb
mov
mov
jle
adc
fadds
leave
sarl
mov
add
ficompl
adc
movsb
inc
nop
inc
movsl
test
in
scas
std
jg
lds
xor
in
mov
rol
dec
cltd
divl
sti
inc
jp
adc
dec
adc
push
push
sub
xor
mov
inc
jbe
sbb
insl
adc
fisubrs
scas
data16
aaa
jg
push
aaa
aam
push
mov
inc
movsb
fsubl
fldt
ss
popf
mov
test
or
mov
lods
js
push
sbb
jecxz
pop
mov
lock
sbb
add
sbb
rol
push
shlb
comiss
testb
aaa
shll
repnz
gs
loopne
inc
test
orl
xor
adc
mov
mov
mov
into
mov
xchg
mulb
nop
cli
lds
sbb
and
jae
sub
push
ljmp
dec
jmp
cmp
pop
addr16
mov
sbbl
adc
jmp
xchg
lret
fwait
jle
pop
push
and
dec
cli
stos
negb
adc
sub
lds
jns
hlt
push
out
aas
jp
stos
test
scas
inc
leave
dec
scas
mov
pushl
lret
push
jmp
std
jle
notb
cmc
xchg
ja
push
sarb
scas
scas
cli
cmc
pop
pop
adc
jecxz
shrb
call
ds
test
xchg
iret
jmp
test
cmp
xor
dec
sbb
pop
jmp
int3
or
popa
mov
int3
bound
add
lahf
jp
mov
shrb
jne
xor
stc
in
flds
jl
push
sub
pop
mov
icebp
decl
sub
xchg
mov
mov
push
in
std
aad
jne
push
cld
dec
fsubrp
pop
in
scas
lds
gs
sarb
xor
sub
scas
rcl
cmp
ds
jle
stos
lret
cmp
addr16
jmp
jg
push
jl
sbbb
mov
stos
mov
test
sahf
adc
lods
out
fldcw
mov
add
adc
push
jb
pop
push
sub
cld
pop
sub
and
stos
daa
daa
leave
sti
jo
int3
xor
mov
cmpsb
repz
jl
fstpt
push
les
aam
mov
mov
mov
mov
sub
or
pop
sub
in
loope
movsl
and
mov
pop
pusha
inc
jg
test
mov
fadd
aam
or
mov
cmc
cmpsb
push
cmpsb
adc
or
cwtl
pop
dec
adc
or
inc
jle
mov
mov
ret
inc
jge
or
sub
das
add
loopne
sub
push
rol
dec
sub
pop
and
or
inc
sarb
test
sbb
add
push
enter
pop
rorb
mov
mov
push
push
insl
jp
adc
xchg
or
inc
pop
mov
mov
cmpsl
test
in
aam
in
enter
cld
cmpsb
push
fadds
fisubrl
test
xor
mov
dec
outsl
inc
push
cli
mov
repnz
ljmp
sti
xchg
outsl
fcompl
sti
xchg
shlb
out
and
sub
jge
dec
icebp
mov
test
cmpsl
out
dec
dec
test
cmp
pop
shl
ljmp
insl
adc
and
aad
negb
jg
cmp
je
leave
ljmp
in
add
mov
jp
add
sub
mov
mov
sarb
jmp
inc
test
jne
pop
or
jmp
loope
mov
lret
data16
cmp
out
sub
cmpb
cli
xchg
mov
dec
sbb
gs
sti
xchg
pop
jbe
xchg
xchg
xchg
add
mov
cmpsl
sbb
push
insb
jge
btr
in
dec
sti
xor
fdiv
sbb
and
std
mov
lock
cmp
fnsetpm(287
mov
lea
fisubl
sub
ja
std
inc
adc
lds
aaa
and
push
dec
xchg
inc
dec
xor
push
cs
xor
and
ja
or
aam
popf
popf
aam
in
daa
cmc
sbb
cld
test
int
outsb
movsb
sahf
cmpb
xchg
lods
mov
aam
pop
mulb
in
fwait
push
fisubrs
xchg
out
jne
ud0
pop
ss
push
fisubs
mov
dec
mov
shr
fnstcw
ljmp
cmp
jne
mov
lahf
mov
sbb
cmp
mov
sbb
ret
push
idivb
jp
ljmp
loop
add
enter
jecxz
sub
aaa
mov
add
sti
aam
jnp
cli
mov
lods
push
inc
cmpsl
aam
ljmp
pushl
pop
arpl
dec
mov
insb
lcall
std
imul
sbb
and
popa
cmc
cmp
inc
loopne
lds
clc
inc
xchg
les
mov
push
jb
scas
lock
inc
into
dec
lods
mov
ss
in
add
scas
push
nop
out
xchg
dec
cmp
or
loope
dec
dec
daa
xchg
fistl
fcompl
dec
and
jb
shll
loope
lds
adc
mov
mov
dec
push
data16
or
gs
sarl
mov
add
lock
cmp
mov
loopne
dec
out
imul
mov
mov
jmp
clc
fdivrp
test
lods
mov
sub
fbstp
xchg
xchg
mov
sarl
lods
lahf
cmc
mov
cli
pushf
mov
add
mov
in
fsubl
sbb
cmp
test
leave
sub
cmp
cld
leave
fisubs
test
push
jmp
sbb
aas
and
lret
xchg
or
sarl
shll
ss
cmp
sub
inc
imul
fists
repnz
loopne
enter
rcr
mov
cwtl
rcrb
repnz
add
test
mov
ss
out
into
je
filds
popf
mov
jae
jnp
adc
lock
faddp
pop
jno
cld
jge
and
pushf
mov
mov
xchg
mov
mov
xchg
mov
ja
fs
xchg
cmp
push
and
and
leave
jns
xchg
fmuls
and
leave
push
dec
scas
adc
adc
or
add
repnz
inc
mov
mov
sub
dec
push
dec
add
fdivp
or
jne
gs
push
and
in
dec
and
inc
mov
inc
fisubrl
mov
cmp
cmpsl
cmp
or
pushf
inc
lcall
lret
mov
pop
pop
mov
or
xchg
pop
dec
fs
cmp
shlb
and
pop
fisttpl
in
lret
push
shlb
cmp
mov
movsb
in
mov
lock
fcmovu
xor
lds
insb
push
inc
mov
out
scas
stc
pop
insl
adc
and
lcall
enter
cltd
lret
subl
lods
sti
lea
dec
and
cli
add
and
pushf
scas
inc
inc
cltd
es
rolb
mov
and
and
mov
push
inc
cld
cs
leave
sbb
cmp
and
ja
imul
into
into
call
loopne
jge
jecxz
test
scas
jo
or
cmp
arpl
insl
lods
xor
cld
adc
sub
push
mov
decb
lret
cli
lods
pop
jp
out
enter
cmp
pop
cli
push
dec
popa
dec
pop
inc
repnz
jl
pop
xor
rcll
adc
inc
mov
in
sub
fisttpll
ficomps
pusha
add
push
icebp
into
mov
cmp
jle
jp
scas
mov
mov
mov
xchg
inc
push
pop
lcall
movsb
xchg
inc
mov
jns
and
sbb
sub
stos
sub
inc
icebp
mov
leave
popf
daa
dec
ss
enter
dec
scas
test
aam
and
int
jo
and
cmpsl
in
in
lgs
ficoms
leave
push
jno
hlt
mov
paddusw
mov
gs
in
arpl
scas
mov
lcall
arpl
test
popf
push
pop
adc
mov
outsl
add
pop
xchg
adc
lcall
cmp
jg
or
xchg
jne
pop
mov
fs
vpmulhw
stc
orl
dec
xor
es
fs
cmp
mov
and
sub
xchg
leave
ret
xchg
sbb
jae
in
or
daa
add
mov
lds
loope
in
xchg
enter
fs
pop
inc
dec
inc
dec
and
inc
testl
ret
mov
xor
leave
mov
js
stos
push
imul
xor
mov
and
xor
sbb
fadds
lods
insb
enter
sbb
pop
stc
push
aas
mov
int3
rorb
sub
dec
push
or
adc
adc
popf
sti
push
testb
shr
or
dec
test
inc
lods
out
cmpsb
xlat
fucomp
outsb
js
insb
mov
adc
cltd
ljmp
dec
and
addr16
push
enter
cmc
adc
inc
add
sbb
adc
fwait
add
jmp
ss
pop
mov
dec
mov
and
subb
push
cmpsl
and
ret
mov
mov
in
inc
cmpsb
xchg
popf
dec
pop
std
jmp
test
pop
sbb
inc
mov
pop
enter
add
je
out
inc
adc
nop
mov
ss
sub
xor
sti
and
repnz
push
fnstsw
ljmp
mov
stc
shll
imul
dec
dec
xchg
jg
pop
test
xlat
mov
jb
test
xlat
mov
ja
inc
fcmovne
pop
aad
icebp
mov
mov
mov
push
push
xor
push
pop
xor
and
jae
scas
cmp
xchg
mov
pop
mov
lods
dec
jecxz
mov
inc
rep
sbb
scas
inc
sahf
push
sub
pushf
adc
stc
insb
sub
inc
jne
inc
rcl
add
pop
push
cli
mov
aas
pop
outsb
mov
xor
pop
mov
push
divl
or
mov
mov
pop
xor
xchg
pushf
jae
cmpsb
outsb
sbb
mov
jmp
mov
lock
ljmp
aad
dec
add
daa
adc
arpl
jo
pusha
pop
xchg
mov
push
mov
jecxz
push
mov
xchg
testb
adc
dec
jp
inc
jmp
pop
pop
pusha
out
inc
jmp
and
out
in
push
lds
jp
sbb
mov
jns
test
sbb
test
fsubp
jge
pop
push
jle
cmpsb
leave
xchg
sub
not
add
xchg
adc
sarb
rsm
stos
sub
sahf
idiv
out
and
xchg
pusha
inc
jo
sti
mov
outsb
fisubs
jecxz
mov
add
addb
adc
and
pusha
nop
nop
in
dec
out
mov
xlat
stos
xchg
sub
loop
inc
test
or
imul
in
push
sub
mov
out
sub
jnp
mov
sti
scas
jle
mov
mov
insb
xor
bound
jge
xchg
fs
ret
add
ror
sbb
push
add
call
add
sbb
adc
dec
lea
aaa
inc
cmp
push
xor
icebp
mov
out
pop
leave
lds
int
pusha
xchg
push
out
js
push
int3
outsl
lods
enter
int3
ficomps
ficompl
leave
sub
mov
mov
dec
or
fucomi
add
mov
aas
dec
xlat
leave
xor
scas
jg
mov
pushf
and
sub
test
sbb
jmp
fcompl
subl
lock
cltd
pop
xor
popf
lret
ljmp
jno
xchg
cwtl
pop
test
push
nop
add
add
outsl
dec
cmp
fidivl
or
bndldx
fildll
out
mov
sbb
in
mov
test
mov
xchg
pusha
push
loopne
ror
ret
sahf
dec
int3
jmp
imul
rcll
rcl
ljmp
lahf
andl
and
mull
push
add
insl
pop
dec
loopne
dec
clc
sub
jae
shl
loop
jmp
mov
push
lea
cmp
scas
xor
or
lods
push
rcl
notl
fdivl
mov
out
iret
sub
xchg
mov
adc
clc
scas
adc
cli
pushf
imul
jb
fdivrs
repnz
push
mov
outsb
outsb
es
and
inc
mov
add
dec
push
call
sub
inc
movsl
mov
dec
and
xchg
subb
jb
mov
inc
rolb
dec
cld
fincstp
incl
dec
movb
push
ljmp
negl
popf
adc
and
adc
and
push
mov
lock
test
leave
sbb
loopne
in
adc
mov
inc
mov
fcoml
mov
push
pop
mov
add
cmpsl
movsb
inc
pop
mov
jbe
lcall
js,pn
fisubl
int3
sbbl
in
mov
add
xchg
pushf
sahf
mov
mov
push
loopne
repnz
adc
and
shrb
push
call
adc
add
lahf
xor
jp
jno
shl
push
daa
addb
or
in
jo
jl
adc
and
pop
sahf
lret
push
adc
push
test
or
xchg
movsb
dec
jmp
adc
pop
dec
dec
and
testl
test
cmp
jmp
and
add
mov
inc
into
aam
loope
mov
cld
idivb
xor
adc
daa
xor
insl
test
cmp
in
xchg
and
mov
inc
lock
lret
cli
jge
stc
sub
mov
je
test
aad
inc
stc
es
dec
inc
jns
scas
push
addr16
cmp
push
repz
jne
xchg
test
jno
cmp
xchg
fcoml
es
sbb
es
xor
cmp
push
fnsave
imul
orl
icebp
scas
cmp
mull
dec
jns
roll
xchg
pop
push
into
std
jp
outsl
popa
addr16
adc
mov
jbe
clc
adc
mov
cltd
ficompl
imul
insb
adc
xchg
ficoms
mov
push
es
push
jb
mov
cmp
cmp
or
dec
inc
cmp
pop
rorl
sbb
inc
stos
mov
movsb
mov
mov
fmul
xor
stc
or
adc
mov
mov
mov
sbb
sbb
repnz
out
xor
fdivrl
sbb
cmp
and
dec
push
dec
sub
inc
push
and
outsb
loop
fs
pop
mov
adc
or
mov
repz
lods
push
orl
xchg
push
adc
adc
call
mov
inc
ficoms
test
push
std
cmc
scas
inc
fmul
or
mov
adc
or
xorb
push
xchg
andb
pop
in
sbb
sbb
xor
sbb
adc
shrb
xor
das
cli
lods
ljmp
jnp
dec
out
gs
mov
in
sbb
dec
or
rcrl
xchg
rclb
cwtl
xchg
fcoms
and
push
xchg
push
loopne
push
int3
push
ret
rcll
xor
xor
test
sbb
mov
in
stos
lea
cmp
ret
ret
cld
and
pop
jecxz
mov
push
cmc
bound
cwtl
push
adc
mov
cwtl
shl
mov
mov
push
enter
or
mov
xor
push
div
imul
sub
mov
cmc
lock
inc
xor
pop
or
adc
clc
sub
mov
pop
pop
adc
inc
sub
pop
or
pushf
push
jmp
inc
decl
xchg
dec
sub
add
mov
fldenv
pcmpeqb
mov
jns
or
sub
movsb
aam
add
mov
push
mov
jnp
and
add
mov
div
pop
dec
int3
inc
cld
mov
mov
add
aam
aam
mov
xorb
divb
adc
push
add
popl
push
xchg
jbe
push
icebp
mov
fdivrl
fwait
js
test
jnp
mov
mull
ret
mov
lods
dec
ficoms
fsubl
jne,pt
je
adcb
jp
outsb
xchg
xor
or
inc
into
ja
xor
pop
cwtl
mov
inc
or
cmp
std
adc
shrb
or
clc
jmp
dec
and
push
adc
mov
lods
push
aam
pop
push
pop
sub
xchg
std
sub
xchg
push
or
jge
insl
fists
lea
cmpsb
dec
loope
xchg
mov
stos
negb
cmp
dec
mov
add
aad
int
xchg
imul
cmp
inc
mov
pop
insl
mov
fsts
xor
popa
lods
mov
ret
mov
jecxz
sahf
dec
inc
in
stos
iret
mov
pop
ret
xor
pop
loope
ds
je
iret
js
mov
outsb
lret
leave
mov
out
mov
pop
lea
jg
sbb
mov
bound
test
insb
push
fsubs
int
outsb
push
pusha
daa
in
sbb
or
sarb
mov
lea
inc
pop
shrb
push
push
ljmp
in
notl
arpl
insl
ret
jl
aas
mov
in
into
mov
test
pop
xor
mov
insb
sub
out
pop
ret
pushf
jns
ss
shr
push
cmp
and
mov
mov
cmp
arpl
pop
das
push
inc
movsb
add
fadds
int3
jae
cltd
jb
out
mov
sbb
jnp
or
mov
iret
push
imul
lcall
cwtl
fisubl
mov
xor
test
push
cmp
jecxz
stc
jp
sub
into
jbe
jecxz
ss
inc
mov
das
mov
js
sub
addb
cltd
xor
cmp
test
stos
mov
aam
xchg
mov
inc
ss
dec
dec
inc
insl
lods
lcall
mov
fsubrs
pop
adc
mov
icebp
ret
movsl
stos
pop
out
sbb
mov
lea
cs
cmpl
rorl
fwait
enter
fucomp
andb
insl
fistps
dec
divl
bound
pushf
fcomps
out
fcoml
xlat
jae
mov
lods
cmp
xchg
aaa
or
inc
push
ja
dec
push
add
mov
mov
data16
mov
sbb
mov
mov
rorl
jp
scas
neg
fs
jno
push
js
mov
scas
jle
jne
pop
imul
mov
mov
aas
xchg
mov
hlt
xor
xchg
sbb
mov
jbe
mov
mov
jle
outsl
mov
mov
stos
clc
add
shrb
cltd
sbb
dec
pop
dec
xor
fmuls
pop
and
fnsave
icebp
in
shll
push
add
lods
fcompl
sbb
or
pop
rcrl
int
pusha
pop
sbb
not
shl
jmp
lahf
dec
xchg
icebp
pop
push
pusha
dec
fsubrs
mov
xchg
test
imul
rolb
out
insb
xor
mov
or
imulb
cmp
mov
por
push
ficoms
std
das
fldcw
xchg
cmp
inc
jnp
pop
sub
loope
sbb
repnz
loopne
ret
adc
adc
faddl
shr
pop
lret
in
loop
cs
push
pop
rclb
mov
js
sbb
dec
add
out
aam
xor
mov
outsb
rorb
push
lret
add
or
jbe
in
push
scas
or
mov
mov
aas
jnp
and
negl
jne
imul
std
movsb
mov
aad
pop
pop
fisubrl
cmp
pop
push
aas
mov
test
call
in
movsl
andl
inc
and
lea
adc
fcomip
xor
inc
daa
ja
push
add
xchg
cmp
push
cmc
sbb
push
jge
cvtps2pd
inc
ds
sub
xor
jae
iret
int
xchg
cmp
adc
jmp
pusha
pop
les
outsl
bound
test
loop
push
jp
lods
xchg
mov
ljmp
shlb
cli
add
scas
cmp
dec
xor
adc
insl
adc
lahf
or
je
shl
fbld
inc
pop
loop
cmp
cmp
push
jne
lret
aad
dec
loope
dec
test
dec
pop
adc
lret
adc
cmp
sti
jl
push
imull
jle
lahf
or
jne
sti
and
or
push
cmp
mov
cmp
sti
sahf
sub
push
aad
and
rclb
sub
inc
addr16
inc
mov
lds
test
mov
lds
mov
cmp
popf
mov
jle
fimuls
mov
mov
rolb
nop
cs
jb
pop
in
pop
rcrb
or
je
push
ret
dec
sub
cltd
nop
adc
std
icebp
aaa
mulb
fcoml
cmc
mov
cld
push
das
xchg
cld
rorl
outsl
icebp
push
outsb
sub
repz
inc
sub
mov
mov
inc
add
push
xchg
lds
dec
aad
imul
fidivrs
pop
mov
cmp
test
fbld
cmp
push
cltd
push
sub
add
mov
mov
and
push
shl
jl
pop
lret
pop
test
je
mov
and
stc
pop
xor
jnp
push
xor
imul
mov
pushf
outsl
xchg
paddsw
mov
je
dec
and
sub
mov
sub
pop
and
mov
mov
test
adc
daa
mov
jmp
neg
ss
sbb
sbb
dec
shl
push
sub
rolb
lret
scas
loope
mov
mov
sti
clc
push
cmpsl
push
xchg
cld
testl
hlt
mov
arpl
fs
cmp
xchg
jge
jp
jle
movsl
pop
mov
sub
sub
negl
inc
pop
pop
lea
inc
test
inc
shlb
call
add
cmp
cmp
loope
cli
mov
and
shlb
and
lret
lea
jg
rcrl
pop
and
lea
or
sub
inc
push
shrl
push
movsb
pop
imul
prefetch
inc
pop
cld
mov
sub
adc
clc
push
ljmp
mov
test
mov
pushf
push
pop
sub
movsb
xchg
mov
pop
push
lods
add
test
mov
icebp
insb
add
and
adc
cmpsl
test
mov
mov
mov
inc
fwait
jle
adc
jnp
fstpl
adc
or
loop
and
jae
nop
in
or
lock
xchg
mov
fwait
lret
ror
add
sub
and
ja
iret
inc
rcrl
sbb
out
and
xchg
insb
or
adc
mov
lods
dec
lock
xor
jp
repz
inc
xchg
dec
out
and
add
xchg
push
adc
hlt
inc
imul
pushf
push
stos
adc
lret
shrb
xchg
jae
mov
rclb
dec
xor
test
cmp
fucom
mov
jmp
mov
jmp
cmpsl
adc
ret
out
rclb
push
push
insb
push
inc
pusha
xrelease
fldcw
sarb
xchg
std
jp
out
or
sbb
pop
mov
loopne
outsb
adc
mov
es
sahf
ss
and
pop
in
mov
popa
es
inc
mov
adc
push
cmp
push
hlt
jbe
sub
xchg
sub
mov
mov
inc
jle
pop
in
xlat
stc
lods
aas
in
cs
fsubrs
jp
ret
mov
outsb
stos
dec
dec
test
in
lret
inc
jnp
push
sub
js
popa
jo
daa
pushf
je
mov
fs
into
test
or
loopne
mov
dec
lret
pop
sbb
lea
dec
aad
push
insl
insl
jle
mov
push
add
cmc
loope
loope
rcll
add
and
xor
mov
stos
inc
mov
mov
jae
jge
aad
dec
add
bound
pop
pop
mov
std
stos
stos
and
push
scas
lods
or
cmpsl
mov
cli
stc
hlt
test
fidivl
test
or
xor
aad
dec
push
sub
mov
repnz
adc
repnz
cmp
or
fstps
dec
xor
mov
xor
in
mov
dec
dec
shll
gs
push
stos
setg
lcall
mov
mov
inc
pop
xor
jbe
popf
lret
and
mov
fcomi
and
dec
std
fidivs
addr16
inc
mov
mov
pop
jg
aad
sub
in
sti
pop
lods
or
jb
test
filds
mov
fbstp
test
inc
scas
movsb
push
int3
adc
sub
or
lds
shrb
xchg
pop
jne
stc
push
nop
lods
mov
sub
xchg
mov
fucomi
enter
les
fcomi
xor
fildll
sub
cmp
bswap
mov
sti
das
pushl
test
ret
rcr
mov
pop
add
stc
xchg
jmp
mov
mov
push
mov
inc
aas
ret
pop
pop
xor
pop
xchg
inc
addr16
fldl
adc
mov
sub
ficomps
stos
sub
sub
sbbb
push
loope
cli
add
scas
hlt
xchg
xorb
push
sub
jmp
sti
call
push
outsl
out
or
jns
nop
aad
cmp
jle
cmp
decl
sbb
mov
scas
or
cmp
dec
aam
mov
jb
imul
hlt
cmpsb
push
cmpsb
cmc
pop
cltd
dec
jge
ljmp
cmpsl
push
cwtl
cs
out
insb
test
pop
sub
cs
leave
dec
xor
pop
sub
icebp
inc
dec
fs
lods
dec
dec
cmp
movl
loope
incb
mov
and
sbb
pop
xchg
je
aad
addr16
testl
dec
sub
ja
loope
decl
test
iret
or
mov
jne
or
cld
gs
les
sub
jnp
bound
rcrl
jg
xchg
jg
or
incb
jmp
add
pop
mov
adcb
aaa
shl
sbb
lods
pop
sub
loopne
adc
jle
mov
cld
xor
iret
dec
aas
add
movsl
sahf
subb
jg
cmc
xchg
push
loope
xchg
fadds
jp
dec
hlt
and
idiv
ficomps
arpl
shl
jge
dec
outsl
out
sub
add
push
adc
push
stos
mov
imul
push
and
dec
faddl
notl
jne
mov
inc
fcoms
fstpl
dec
or
cld
lcall
jne
mov
fmuls
outsl
lcall
outsb
inc
mov
repz
mov
cmpl
adc
leave
dec
or
into
divb
adc
mov
xchg
mov
xor
test
sbb
cld
mov
sbb
lcall
leave
xorb
xchg
xchg
mov
pop
popf
mov
stos
xchg
mov
out
push
fnstenv
int3
daa
jnp
xchg
daa
inc
stos
push
xchg
test
jmp
imul
daa
adc
test
out
lcall
cmpsb
stos
pop
lods
xchg
shrl
pop
mov
xor
stos
stos
lret
fidivrs
nop
push
out
cwtl
xchg
rcr
jne
mov
cmp
in
xor
je
sbb
clc
xor
cmpsb
and
je
das
mov
push
ds
push
mov
sub
inc
ret
jge
sub
push
test
cltd
sahf
fcmovne
dec
jbe
pop
sub
push
xchg
cmp
add
mov
xor
popf
dec
sbb
popa
and
addr16
das
pop
in
aam
sub
cltd
xchg
out
arpl
adc
imul
test
inc
scas
sbb
bound
stc
daa
xchg
lods
test
je
sti
std
push
in
xchg
adc
sub
pop
xchg
pop
adc
cltd
adc
inc
fcomi
enter
push
dec
mov
push
dec
jae
inc
adcl
mov
mov
aaa
jg
and
sub
jle
inc
hlt
pusha
into
iret
lock
inc
pop
dec
inc
outsl
ficoml
xchg
mov
mov
mov
inc
push
sbb
push
xor
cmp
push
mov
or
pop
in
repz
fadd
mov
mov
xor
mov
and
cmp
inc
ds
jg
mov
lods
xchg
pop
adc
push
hlt
test
mov
scas
test
and
mov
rclb
pop
loopne
jecxz
sub
cmpsl
adc
mov
enter
arpl
inc
push
jne
fcompl
push
add
xor
mov
cmp
loope
lock
mov
and
aas
lcall
inc
push
push
cmp
xchg
mov
push
jp
iret
adc
xchg
je
add
cs
dec
add
xchg
cli
mov
push
icebp
repnz
jae
iret
push
add
sbb
cmp
add
or
iret
sub
fimull
mov
pop
les
pusha
jmp
loope
pop
sub
int3
jge
xchg
add
loop
or
mov
loope
add
push
sbb
push
aaa
inc
push
test
sarb
clc
movsb
mov
jb
sub
pop
movsb
sub
cmc
in
add
lock
pop
push
clc
add
inc
sbb
xor
lahf
xor
dec
adcl
rcrb
push
into
dec
jo
adc
rcll
sub
xchg
jge
das
push
adc
addl
jge
lret
divl
xchg
fisttps
pusha
test
movsl
imul
jmp
mov
psubb
push
add
dec
sub
or
inc
mov
inc
sub
jne
pusha
loop
ja
ss
xchg
outsb
and
push
scas
int3
push
jb
fildl
jmp
fldenv
lret
iret
lock
aad
outsl
add
mull
pop
mov
cld
add
es
mov
adc
or
loopne
icebp
popl
mov
test
imull
in
dec
pushf
call
ficoms
jp
cltd
cmp
inc
push
int3
nop
call
lods
imul
dec
and
ret
ds
insl
adc
mov
cmp
ss
mov
sbbl
mov
ss
testl
sub
add
pusha
jnp
jecxz
push
mov
cmpl
sbb
icebp
or
or
pop
cmp
fcomps
rorl
or
icebp
mov
mov
sub
jmp
or
adc
inc
xor
out
inc
jl
jns
outsb
loope
out
xor
iret
insb
loop
bound
mov
jecxz
scas
xchg
push
pop
xor
in
in
add
jmp
rcrb
or
dec
andnps
mov
scas
inc
stos
sbb
and
add
leave
pop
cmp
add
sahf
xchg
add
out
stos
sahf
sahf
dec
or
lock
cmp
dec
push
fadds
cld
adc
adc
sbb
bound
pop
je
push
jmp
addb
in
adc
in
mov
xor
fisubrl
or
xchg
mov
scas
insb
rcl
in
repz
arpl
mov
push
lret
push
inc
mov
push
lret
fsubs
jno
stos
or
sub
insb
stos
clc
cmpsb
inc
jecxz
or
sbb
sub
and
jne
ret
xor
loop
gs
pop
adc
ret
lods
sbb
adc
jne
mov
xchg
dec
ret
adc
mov
pop
sbb
out
cmpb
push
jae
gs
push
push
aad
sti
fwait
ja
gs
push
gs
push
jnp
dec
loope
pop
inc
shll
lret
daa
jmp
lods
mov
je
jge
je
push
enter
sub
add
aad
mov
pop
in
jecxz
push
lods
mov
cmp
sbb
pushf
sub
push
js
lock
push
aaa
dec
jne
out
setge
aaa
lret
cmp
cli
sbb
xchg
insb
fisubrs
arpl
xchg
outsl
jb
pop
arpl
outsl
jge
pop
shlw
lret
sbb
fwait
rclb
stos
sbb
or
pop
and
push
std
xchg
push
aaa
ds
sub
cld
sub
outsb
sub
xchg
aam
mov
sub
or
rcrl
fisttpll
clc
inc
mov
subb
adc
ret
or
add
pop
iret
pop
and
aam
arpl
sub
scas
mov
insl
or
jne
pop
out
scas
cmc
pop
fsubp
ficoms
gs
insl
and
in
int
out
pop
mulb
mov
pushf
in
jne
mov
lods
outsl
push
fistpll
gs
jne
adc
arpl
push
aaa
fdivl
pop
dec
sub
arpl
sub
push
les
mov
mov
pop
addr16
test
aaa
mov
repz
movsl
xchg
jno
mov
push
aaa
mov
sti
push
mov
cld
mov
push
dec
inc
adc
mov
inc
gs
scas
mov
pop
je
insl
lret
and
sub
inc
and
pop
xchg
lods
pop
pusha
test
mov
dec
fisttpll
push
lock
daa
orb
jp
mov
mov
mov
mov
hlt
test
lret
sti
mov
aad
enter
div
adc
lcall
outsl
sarb
lods
icebp
sub
imul
loop
test
out
subl
xchg
mov
filds
mov
xchg
mov
lcall
inc
ret
xchg
push
mov
data16
mov
leave
cwtl
xlat
sahf
jmp
or
adc
ret
xchg
fists
in
icebp
mov
scas
cmc
lret
or
inc
sti
fcmovnu
inc
jbe
ss
enter
xor
mov
divl
mov
movsb
cmpl
sub
in
mov
orl
shlb
and
pop
ss
add
pop
fcompl
roll
jno
addb
pop
inc
outsl
mov
adc
push
jl
pop
ret
divb
or
mov
jb
ljmp
test
pop
outsb
mov
push
xchg
push
xchg
cmp
fcmovnbe
xor
les
mov
sbb
int3
arpl
repz
out
inc
xlat
adc
mov
cmp
inc
es
dec
sub
and
pusha
inc
xlat
testb
push
mov
pop
fisttpl
lea
lcall
les
inc
sarb
mov
mov
dec
fprem1
clc
iret
jmp
fistps
and
pusha
jle
add
push
adc
and
popa
bound
daa
mov
jb
fstpt
sbb
xor
das
addl
xor
cmc
pop
mov
scas
sahf
cs
decb
dec
mov
loop
push
inc
lret
inc
pop
xchg
xchg
jno
push
adc
xchg
dec
out
xor
add
and
xor
jl
call
dec
xor
stos
cmpsl
mov
fisubrl
sahf
or
std
jns
repz
cmc
fnstenv
xor
dec
and
mov
cmp
jno
or
roll
aad
cmp
lods
loopne
ja
sbb
lods
pop
ret
aas
fsin
pop
dec
and
mov
push
popa
bound
cmp
xor
in
lret
sahf
inc
mov
cltd
fnstcw
sbb
cmp
js
inc
sarb
fnstenv
push
addb
lock
lahf
popf
or
sbb
jbe
call
out
lahf
or
in
pop
sub
jns
mov
int3
fwait
cmp
mov
sbb
and
cmp
inc
shr
dec
adc
dec
and
adc
xor
hlt
mov
jno
fistps
push
rcrb
jle
insl
cmp
into
sbb
xor
and
mov
push
xchg
stc
enter
lods
add
jnp
movsb
sahf
cltd
pop
int3
xchg
rclb
xchg
xchg
jl
cmp
dec
mov
sub
jmp
cmpsb
pop
cmp
inc
mov
lret
pop
std
push
mov
add
dec
inc
cmp
aad
cmp
subl
sub
test
cmp
sub
or
lock
in
je
out
daa
std
mov
push
adc
add
test
pop
pop
or
aam
mov
pop
daa
inc
jae
cli
aad
cmpsb
dec
cli
sahf
leave
adc
ljmp
xor
out
mov
inc
cmp
jle
mov
jbe
mov
fisubrs
jns
rcr
mov
xchg
adc
pop
dec
jmp
mov
scas
daa
repnz
icebp
ret
test
int
mov
cmp
stos
mov
and
dec
cmp
aas
lahf
sbb
mov
flds
js
lret
xchg
push
mov
sub
lcall
lahf
sbb
fiaddl
or
add
out
adc
aam
mov
vfrczsd
pop
mov
hlt
dec
test
xor
int3
loopne
jecxz
sub
and
inc
gs
sub
sbb
daa
imul
push
loop
sbbl
sub
pop
mov
mov
lock
roll
lret
xor
or
addb
xlat
fs
icebp
gs
push
out
sbb
xlat
mov
jnp
adc
stc
imul
adc
lret
aaa
and
xchg
faddl
ret
push
aaa
mov
and
sahf
imul
ja
mov
movsl
xor
popf
mov
inc
add
xor
ss
or
out
std
mov
repz
xchg
loope
call
jmp
and
test
mov
cmp
push
sub
xchg
sub
mov
or
lds
pop
mov
pushf
sub
or
pop
rcll
mov
lret
mov
pop
fbld
add
push
xchg
mov
pop
and
cmp
or
std
imul
outsb
mov
push
and
dec
fisttpl
fldt
pop
pop
jno
out
lock
xchg
jmp
xchg
cmp
lahf
add
adc
jmp
rclb
roll
pop
and
adc
out
out
xchg
pop
lcall
mov
mov
xchg
scas
dec
pop
dec
dec
mov
adc
push
ja
mov
jmp
dec
or
jno
jp
fisubrl
pop
movsl
test
popa
xchg
out
jnp
jae
cmp
in
outsl
fnsave
mov
shrb
repz
cmp
out
not
aas
and
sbb
and
fsubs
mov
push
fwait
pop
xor
fsubs
lock
xlat
or
cs
push
jge
fbstp
pop
daa
add
nop
lret
xchg
dec
push
jge
add
sbb
inc
cs
lret
cmpsb
hlt
xchg
movsl
rol
inc
jmp
xor
mul
dec
pop
call
pop
jne
fistpl
mov
inc
mov
sub
or
jbe
fnstsw
sub
sbb
jo
add
int3
inc
cmp
lock
int
imul
iret
repnz
fwait
mov
push
testb
dec
push
jmp
add
cltd
fldenv
lods
sarl
ret
cmp
aam
sub
pop
cmc
nop
cmp
jge
rolb
shll
mov
sub
dec
addr16
loope
out
xor
or
sahf
loope
xor
xchg
push
inc
es
cmpsl
xlat
gs
jl
fstsw
jle
pusha
lock
les
repnz
test
shrl
add
mov
cmpsb
in
mov
xchg
pop
xchg
lret
enter
test
daa
xchg
popa
xchg
je
scas
cld
mov
les
xor
jbe
das
sub
push
ljmp
rclb
sti
cli
cmp
dec
pop
clc
sub
out
xchg
aas
call
es
xor
xchg
sub
pop
lret
lahf
fmul
dec
daa
and
rcrb
mov
jp
gs
mov
ljmp
test
pop
pop
sbb
pop
cmp
sub
jmp
ret
mov
jle
pop
jne
sub
pop
xchg
rol
idivl
pop
jge
popa
mov
popa
mov
ljmp
rolb
dec
xor
decb
arpl
push
daa
mov
aaa
pushf
dec
cmpsb
jns
pop
jb
movsl
addr16
out
jb
cmpsl
icebp
test
arpl
js
call
es
sti
icebp
or
outsl
arpl
adc
rolb
xor
sbb
mov
dec
sti
popf
loopne
fcmovnu
push
sahf
das
jle
inc
cmp
stc
ret
push
xorb
mov
xchg
cmp
cmpsb
adc
pusha
jge
fidivrl
dec
ret
jnp
repz
inc
xor
mov
cli
push
mov
mov
dec
mov
imul
dec
xor
stc
pop
mov
jns
test
push
mov
mov
scas
in
sbb
xor
aas
inc
pop
mov
outsb
orl
adc
jle
scas
bound
fucom
fmul
cmp
mov
mov
hlt
push
shll
pop
nop
pop
mov
mov
push
sbb
jbe
push
pop
jg
sbb
sbb
push
das
xor
or
and
icebp
pavgb
cli
shll
dec
inc
std
cli
pop
inc
ret
add
lds
pop
sub
jnp
jns
mov
pushf
repnz
fwait
pushf
ret
or
and
mov
mov
aaa
and
dec
sub
lret
mov
xchg
mov
insb
mov
mov
push
shrl
push
xor
cmp
push
and
aas
leave
xor
pop
decb
add
adc
or
int
push
xchg
push
push
scas
push
stos
adc
or
mov
data16
les
daa
fldl
mov
sub
xor
hlt
sbb
jo
sub
xlat
pop
cld
cli
mov
inc
cwtl
iret
out
mov
insl
pop
popf
or
clc
mov
mov
scas
aad
in
loope
dec
lret
out
cmp
ss
into
insl
imul
addr16
gs
loope
mov
xor
pop
mov
cmp
push
dec
out
add
mov
negl
inc
pop
loope
jns
call
jle
pop
lock
sbb
into
loop
into
and
es
orb
push
sbb
ja
push
fimull
cmp
pop
jnp
in
pop
pop
sahf
add
shl
rol
ret
sub
pop
aas
imul
bound
fidivl
lods
ja
clc
movsb
cmc
pop
andb
mov
mov
test
mov
pop
cmovle
xchg
scas
xor
xchg
cmp
adcb
push
jae
test
or
add
and
js
icebp
or
push
ret
incl
lods
mov
sbb
bnd
mov
push
sbb
add
or
repz
jbe
xor
or
shll
xor
popf
repnz
sub
lcall
xchg
pop
divl
jecxz
adc
push
cltd
jg
in
in
sbb
push
sbb
xor
xchg
mov
gs
iret
push
add
into
pusha
fistpll
iret
imul
mov
pop
scas
notl
es
mov
cmp
mov
insb
push
mov
scas
gs
xor
mov
push
jmp
or
or
mov
mov
mov
enter
pop
pop
xchg
bnd
dec
shlb
mov
sar
mov
in
cmp
xor
pop
xchg
jns
adc
jle
ret
mov
mov
or
and
negb
xchg
and
rol
jge
jmp
mov
xor
jbe
jl
pop
addr16
and
stos
mov
in
mov
mov
sub
call
xchg
cwtl
shr
mov
adc
sub
dec
pushf
outsb
std
or
int
sub
mov
cmp
xor
loope
repnz
mov
mov
sbb
shll
jge
adc
adc
xor
xchg
push
std
insb
mov
jb
sbb
mov
int3
das
iret
lds
out
push
rol
pushf
icebp
bound
rclb
mov
stc
lods
ja
movsl
dec
push
outsl
xor
pusha
jns,pn
cli
mov
ds
cld
cmpsl
dec
ljmp
popf
inc
ja
lods
icebp
loope
andl
cmp
cmp
mov
cmp
sti
xor
in
out
inc
int3
aas
fucomip
xchg
aaa
and
push
mov
nop
in
testl
stos
leave
xchg
and
pop
or
adc
test
push
or
cmpsl
leave
mov
cmp
ret
jmp
mov
xor
inc
cmp
sbb
mov
in
xchg
xor
mov
xchg
jecxz,pt
in
pushf
lds
in
test
js
sbb
stos
or
cmp
push
push
cmp
mov
outsb
cld
adc
and
and
dec
cltd
das
add
int3
lods
dec
xchg
repnz
notl
sub
imul
mov
out
xchg
cwtl
jnp
hlt
adc
into
mov
into
push
inc
sarb
outsl
xchg
sahf
and
in
xchg
dec
fsubrs
test
repz
loop
fdivl
mov
sbb
sbb
xor
fisubs
xor
test
int3
mov
xchg
xor
inc
xor
xlat
fwait
push
mov
jns
mov
or
pop
ret
xor
xchg
push
shlb
mov
and
in
jl
add
in
sbb
notb
or
mov
jmp
push
fisttpl
xlat
cltd
add
pop
mov
cmpsl
sahf
dec
adc
clc
cld
out
mov
ljmp
scas
pop
insl
mov
push
int
add
cmp
shll
stos
shrl
nop
test
loope
or
cmc
cltd
sahf
out
mov
popf
into
sub
or
imul
sub
insb
sub
xchg
sbb
sbb
popf
cmp
fldenv
aam
mov
dec
sti
lock
mov
fisttps
jle
jle
sub
icebp
shl
in
out
fs
mov
std
stc
dec
sti
dec
sti
cwtl
dec
fmul
jle
aam
mov
jp
std
test
lods
dec
jle
shl
stos
jle
leave
sti
pushf
dec
filds
out
mov
jb
sti
shll
daa
out
mov
jp
std
jmp
jbe
lret
sarb
cmp
rorb
pop
mov
cld
ljmp
xor
arpl
mov
mov
je
and
and
jecxz
lret
ret
inc
xor
addr16
jecxz
fwait
les
push
or
and
mov
sub
scas
pop
aaa
shll
cmp
into
sar
push
fldl
pop
jae
loopne
sbb
sbb
push
addb
xchg
int
and
ret
xchg
pop
mov
jnp
movsl
cmpsb
mov
adc
das
dec
jne
pop
cld
rolb
jbe
or
xor
mov
das
imul
mov
repnz
and
mov
jae
aaa
mov
xchg
pusha
shll
enter
push
fidivl
mov
imul
mov
popa
lods
push
dec
adc
fidivrl
mov
cmp
fs
movsl
push
push
shrb
lds
aaa
aad
jge
jae
sub
fbld
test
out
fs
clc
xor
mov
dec
repz
scas
adc
dec
scas
dec
jecxz
fidivl
pop
psubw
mov
int
inc
aad
mov
mov
xchg
mov
jecxz
into
lock
inc
mov
out
fcmove
mov
jmp
jae
mov
lods
jnp
cmpsl
xchg
push
lods
push
scas
negb
dec
jne
out
icebp
iret
cmp
push
jge
pushw
lcall
adc
fcmovnu
jbe
stos
sti
add
dec
decl
fildll
bound
inc
fisttpl
addr16
rcr
sarb
mov
ja
loope
sbb
call
xchg
les
mov
pop
mov
fsubs
mov
push
and
xor
adc
testl
xor
shl
neg
fidivrs
std
mov
sbb
inc
jge
and
mov
push
inc
dec
xor
ret
lods
jb
enter
sub
mov
ret
mov
mov
in
ror
stc
and
sbbb
xor
movsb
xlat
adc
cmp
jecxz
mov
fbld
inc
mov
stc
jns
or
pop
cmpsb
xor
lea
fidivl
shl
adc
push
faddl
cmp
jmp
xor
loope
scas
icebp
mov
pop
fldenv
adcb
dec
leave
push
rorl
lods
cmp
push
int
mov
repz
aad
sub
mov
cmp
adc
sti
cwtl
mov
or
outsb
lods
dec
xchg
mov
jp
lcall
and
das
mov
leave
mov
dec
push
xor
mov
push
out
insb
iret
je
xor
inc
in
cmp
xchg
xchg
aam
stos
mov
jmp
pop
mov
and
fsubl
into
cmp
xchg
insl
pop
sub
cmc
cmpsl
sbb
mov
adc
cmp
ret
cmpsl
push
sub
arpl
daa
in
jo
xor
repnz
sahf
ret
stos
icebp
pop
ret
jle
in
lret
subb
inc
pop
add
outsl
or
pop
into
push
repnz
mov
imul
sub
push
xchg
mov
leave
ja
stos
jbe
mov
insb
int3
rcl
mov
scas
lds
inc
push
adc
pop
mov
sbb
sub
sahf
or
mov
xchg
mov
mov
pop
jbe
rcll
and
jp
test
mov
add
sbb
mov
sbb
xor
push
fcmove
sbb
dec
lds
fwait
push
aas
and
jo
enter
fmuls
sub
and
cld
push
repnz
adc
adc
daa
leave
jecxz
push
dec
aas
jne
std
rcll
xlat
lds
pop
lds
inc
sub
xchg
fimull
and
xor
scas
mov
jle
xchg
fnstcw
loop
in
dec
mov
scas
and
mov
or
mov
sbb
inc
sub
cmp
aas
shll
js
pop
push
ret
fdivs
iret
decb
cmp
gs
lods
sbbl
inc
pushf
sub
mov
dec
outsl
push
imul
pop
push
xchg
test
jno
aaa
mov
or
jb
in
lahf
loop
stos
lret
in
inc
sbb
movsl
mov
add
or
imul
aad
mov
insl
pop
jecxz
outsb
mov
xchg
and
mov
sub
or
arpl
lea
lods
dec
push
mov
xor
aad
mov
stos
or
imul
fdivs
mov
int3
add
repz
cs
fistpl
mov
inc
sbb
test
dec
gs
loopne
cmc
ljmp
push
and
xchg
js
adc
dec
js
stos
dec
push
sub
add
push
les
adc
push
in
sub
push
nop
cmovo
hlt
inc
dec
pop
inc
rorl
dec
leave
mov
lret
stos
ja
lret
and
mov
sti
cmp
or
insl
test
shlb
ficompl
and
pushf
xchg
or
adc
jl
and
cmp
sbb
pop
ljmp
or
xor
cltd
sbb
sbb
mov
xchg
xchg
mov
add
mov
mov
adc
ja
adcb
inc
ja
pop
lea
jo
xor
leave
sbb
push
mov
jmp
mov
inc
inc
clc
jle
cmpsl
inc
mov
add
xchg
xchg
seto
jecxz
rclb
in
lds
dec
mov
add
add
daa
xor
sbb
adc
lcall
mov
in
xor
and
test
xchg
jmp
jb
or
pop
out
sub
jl
jnp
jg
cmp
mov
test
pop
jb
mov
and
cmpsb
pop
cmp
xchg
sbb
fimull
xor
in
fs
sbb
push
leave
fsubrl
jmp
call
test
or
std
mov
mov
lods
xchg
push
sar
loop,pt
fcompl
sti
mov
jge
pop
pop
aaa
adc
push
sti
sbb
jne
or
pusha
inc
std
ret
jb
out
sub
out
cmc
or
in
mov
test
and
mov
in
lret
aas
cld
push
jecxz
int
jb
xor
or
cmp
or
mov
pop
nop
mov
mov
insl
sub
popa
jb
incl
js
std
lea
inc
inc
int3
or
jg
pop
ljmp
es
notb
mov
repnz
sbb
lock
dec
addr16
or
and
xchg
and
xor
mov
mov
xorl
lcall
xchg
jg
vmptrld
dec
popf
adc
add
into
pusha
insb
mov
or
idivl
or
jno
out
fstl
aam
fwait
pusha
outsl
jg
jl
in
fildll
pop
sbb
mov
sbb
adc
cld
out
push
cmp
inc
and
icebp
in
mov
and
out
repz
push
jno
movsb
pusha
dec
notl
adc
out
shrb
ja
sbb
inc
inc
xchg
cmp
jle
jne
test
leave
and
divb
adc
cmp
cmc
xchg
loopne
repnz
jne
sbb
fmuls
cmp
sbb
sbb
xor
sub
pop
inc
or
ret
dec
notl
fiadds
inc
movl
mov
pop
add
outsb
std
sub
xchg
cwtl
aaa
jle
sti
in
mov
or
dec
cli
push
arpl
cmp
aaa
sub
shl
push
xchg
in
cld
jbe
and
outsl
in
inc
decl
push
pop
addb
out
cmp
call
xchg
pop
stc
in
push
movsl
inc
push
addb
jb
sbb
pop
bsf
sahf
addr16
cmpsb
adc
not
jns
ljmp
cmpsl
pop
fucomi
lods
mov
leave
in
inc
or
jge
lcall
mulb
sti
stc
test
jne
mov
fiadds
stc
xchg
jae
sbb
jbe
mov
arpl
cwtl
sti
pusha
ds
xchg
fistpll
arpl
xlat
push
or
bound
or
and
call
sub
iret
and
adc
pop
cmp
cli
pushf
test
mov
and
push
aaa
sub
and
call
adc
cwtl
imul
in
shrl
out
ret
mov
fsubrl
arpl
mov
sti
nop
mov
ljmp
pop
gs
aad
push
jp
repnz
dec
lods
call
inc
ds
inc
mov
lahf
dec
cmp
sti
gs
adc
fstpl
scas
pushf
mov
and
subb
aad
mov
add
out
push
inc
cltd
aad
test
js
cmp
adc
clc
rcr
arpl
xchg
pop
mov
insb
xchg
pop
jnp
push
pop
rclb
jge
arpl
cld
aas
stc
dec
repz
dec
sti
pop
outsl
sub
mov
out
pop
fisttpl
aad
andl
aam
stc
aaa
mov
fstp
imul
aas
jo
mov
inc
fimull
sar
jo
jle
jns
jnp
fcoms
jge
add
mov
rolb
das
mov
mov
add
cwtl
sti
push
std
xchg
aaa
sub
repnz
js
movl
shr
mov
imul
popf
dec
jp
rorb
mov
xchg
into
daa
jmp
and
jg
icebp
cmp
mov
fmuls
and
mov
mov
inc
lahf
cltd
pop
sbb
outsb
pop
fisttpll
jg
sbb
into
rcll
jmp
mov
pop
in
shlb
xlat
movsb
mov
js
lahf
jae
inc
fsub
call
cltd
out
mov
dec
icebp
rclb
jle
outsb
fildll
popa
add
push
xlat
sbb
fmull
dec
notb
push
fdivrl
repnz
lods
mul
mov
out
mov
and
insb
out
jge
pop
cli
enter
mov
mov
cli
leave
fdivr
fsubrp
cmp
cmc
loopne
or
push
icebp
push
jbe
sub
inc
sti
stc
inc
sti
out
dec
stos
pop
jge
imull
pushl
mul
pop
jle
divb
repz
adcl
sub
xlat
push
xchg
mov
mov
sahf
push
dec
sbb
imul
add
arpl
xchg
xchg
mov
dec
pop
dec
stc
test
and
mov
push
inc
fistl
fisubrs
inc
jl
ret
pop
fs
call
stos
xor
addr16
aad
mov
incl
inc
ljmp
mov
inc
test
adc
cmpl
jne
sbb
sub
das
mov
pop
cli
cmp
xchg
out
jle
jle
popa
rclb
cmp
mov
cmp
xchg
fmull
mov
jecxz
sbb
out
scas
icebp
jge
dec
in
test
or
jge
mov
les
mov
sub
in
adc
adc
lods
push
cmp
dec
cmp
inc
fsubp
mov
into
mov
push
adc
aam
inc
sub
sbb
xchg
sbb
sti
lods
data16
cli
insl
outsb
fidivrs
inc
mov
in
xchg
iret
out
pop
std
popf
lret
lock
fdivr
pavgb
mov
lock
jo
fnstcw
sub
sti
in
movswl
jge
mov
push
mov
bound
or
lret
negb
jl
push
lds
inc
dec
push
std
inc
cmc
out
imul
test
rcl
or
popa
or
jb,pn
or
mov
cmp
lret
cmp
jg
out
adc
fsubrl
shl
mov
imul
pop
cmp
sub
push
jmp
pop
and
cmpb
fimuls
add
psubd
pop
jge
test
mov
or
sbb
mull
add
daa
jp
mov
and
or
nop
dec
pop
fsubl
lret
out
dec
inc
adc
adc
sub
mov
cmp
fbstp
dec
neg
and
ja
andb
pop
push
xlat
mov
and
pusha
ds
imul
adc
in
mov
xchg
nop
mov
sti
cmp
repz
mov
mov
idivb
sti
add
xlat
and
shl
sbb
pop
xor
mov
in
aam
ret
jno
sahf
loop
outsb
or
and
jp
scas
pop
mov
addr16
test
ja
mov
dec
dec
inc
xchg
xchg
outsl
jns
repz
int
loop
dec
orb
or
stos
jg
fstpl
sti
sbb
add
mov
dec
jecxz,pn
mov
cmp
adc
rolb
xchg
cmp
test
push
es
push
mov
sbb
sub
mov
in
fwait
sbb
jl
adc
lret
out
jns
mov
mov
andb
out
sub
mov
push
pop
loop
and
in
push
pop
lea
popa
mov
dec
sbb
jbe
sbb
movsb
icebp
jne
iret
jl
push
jbe
add
mov
sbb
inc
imul
mov
ljmp
and
adc
lret
aas
in
fstps
pop
pop
push
mov
outsb
mov
int
xor
pop
push
dec
fdivrp
loopne
sbb
mov
sti
push
gs
cld
inc
arpl
adc
cmp
inc
js
sahf
sub
push
mov
addr16
cmp
loopne
loope
lahf
fstpl
cmp
dec
add
xchg
dec
cmpsl
add
mov
inc
pop
adc
lods
pop
stc
sbb
das
std
adcb
pushf
mov
sbb
in
ljmp
fwait
or
repnz
push
je
lret
mov
mov
mov
test
cmc
testl
aad
lcall
pop
pop
adc
xor
mov
fwait
xchg
das
int
pushf
mov
mov
lods
in
or
insl
xchg
call
pop
insl
and
push
aam
jno
repnz
not
mov
imul
mov
jb
in
inc
push
push
stc
push
and
xor
cmp
cmp
xchg
xor
or
mov
cwtl
test
or
pop
push
push
mov
sub
and
hlt
jg
lods
out
shl
and
ficoms
lea
push
ss
mov
js
dec
xor
sbb
subb
pop
mov
xor
or
rep
or
mov
int
ret
jne
lret
pusha
insl
lret
fiadds
dec
push
aad
sbb
jae
cmp
lcall
jp
push
mov
mov
fdivp
icebp
push
mov
in
out
negl
sub
int
sub
mov
scas
test
out
xlat
mov
or
cmp
push
aam
mov
pusha
out
loopne
push
mov
in
add
arpl
call
daa
pop
mov
cli
stc
test
inc
stos
sbb
shll
dec
aaa
imul
inc
int3
daa
mov
ret
push
fidivrl
jae
stos
pop
jnp
lret
cmp
and
sbb
popf
jecxz
add
dec
mov
push
mov
cwtl
cltd
inc
leave
lods
xchg
test
xlat
jl
sub
push
add
inc
mov
loopne
cwtl
add
dec
stos
lods
loopne
xchg
cmp
inc
notb
xor
andl
push
mov
int
scas
sbb
movsb
iret
mov
jbe
jno
sbb
inc
js
rorl
es
or
add
imul
dec
jle
inc
fimull
mov
into
dec
enter
decb
aam
adc
add
dec
or
push
pop
outsb
pmulhuw
xchg
cmp
mov
into
fistl
in
mov
jl
jb
push
dec
dec
inc
sbb
fidivrl
sub
add
cmp
cmp
ljmp
dec
lea
movsl
out
lret
jbe
xor
in
testb
xlat
add
stos
outsb
mov
adc
push
ret
fs
je
and
faddl
outsb
sbb
inc
pop
daa
lahf
loop
add
scas
loop
in
push
push
sbb
mov
xor
incb
adc
in
movsl
cmp
dec
xor
or
and
repnz
dec
dec
sub
or
in
cltd
push
aaa
adcb
ret
sub
scas
push
cld
sbb
out
mov
sub
or
xorb
jg
sti
mov
popa
movsb
scas
mov
sti
mov
xchg
mov
add
sub
aas
ja
std
inc
push
jae
rolb
fistps
subb
xchg
addr16
push
notb
cmc
in
in
adc
jb
lods
btr
cwtl
insl
dec
std
into
sbb
das
cmp
stc
add
mov
popa
gs
jecxz
pop
or
dec
mov
repnz
iret
inc
lods
movsb
fcmovbe
pop
fisubrl
cmp
pop
push
hlt
and
fisttps
mov
fdiv
xchg
call
in
add
sti
cltd
into
mov
in
cld
lds
daa
mov
sub
jb
xchg
add
outsl
dec
xchg
pop
mov
dec
shll
sub
pop
inc
pop
jle
lcall
xor
mov
pop
cld
ror
stc
and
daa
jnp
sbbb
mov
xchg
pop
imul
call
jb
bound
mov
dec
add
jbe
popa
cs
orb
imul
cmp
imul
inc
pop
sti
iret
mov
movsb
add
push
dec
in
jns
sahf
ja
push
test
lcallw
push
mov
andb
fdecstp
xor
cmpsl
icebp
jle
xor
cmp
xor
jbe
adc
aam
fistl
ljmp
inc
pop
subb
mov
jb
repz
cmp
xor
scas
mov
enter
sarb
or
and
jg
mov
ret
adc
cld
clc
sub
call
sti
jge
fbld
xorb
add
dec
sbb
popa
jae
dec
cmp
sub
sbb
dec
out
mov
mov
dec
add
mov
sti
jge
add
jl
jne
inc
jge
cmpsl
mov
lret
test
shrb
or
xlat
xor
xchg
xchg
enter
and
out
mov
in
xor
xor
jmp
jmp
mov
add
dec
adc
ljmp
ja
iret
xchg
shrb
sbb
dec
js
or
mov
data16
xor
jae
add
es
mov
flds
cmpsl
inc
and
bound
lcall
jecxz
das
dec
or
mov
or
pop
xchg
sbb
and
daa
inc
mov
add
sub
out
cmp
mov
mov
jno
movsl
mov
das
sbb
cs
xor
and
jg
mov
and
push
jle
add
pop
push
pop
add
sub
jmp
aas
mov
sti
jns
cmpl
xorl
pushf
fsubs
fidivrs
jbe
jo
jmp
or
in
adc
nop
adc
push
ret
aas
aam
movsb
and
pusha
and
js
push
aad
add
jno
jb
scas
sub
psubd
sarl
cmp
inc
sub
imul
data16
jno
leave
mov
pushf
repnz
mov
out
das
xchg
dec
push
xchg
loope
pop
add
fadds
or
sub
cwtl
xchg
call
mov
movsl
js
xchg
popf
stos
and
stc
mov
dec
insb
cmp
movzbl
push
fldenv
mov
lcall
into
jg
or
insb
inc
inc
mov
sarb
adc
xor
popf
xor
pop
mov
incl
rdpmc
imul
sahf
inc
ds
mov
adc
repz
jp
sahf
rcrb
mov
add
cmpsb
lea
insb
fisubl
aam
jae
inc
xchg
fdivs
cmpsb
adc
mov
in
stos
addr16
repnz
rolb
fwait
lcall
sbb
mov
mov
shrb
nop
mov
js
pop
mov
jbe
mov
lds
xchg
test
jl
loope
call
outsl
and
adc
push
sub
add
lret
mov
mov
jb
push
rep
ds
adc
call
fwait
mov
lahf
adc
aad
cmp
arpl
sti
ss
sub
mov
pop
filds
push
in
mov
mov
sbb
cmp
and
sbb
xor
sub
in
xor
mov
or
js
sti
cmp
dec
sbb
popf
pop
mov
xchg
or
mov
aas
sbbb
mov
sub
mov
mov
jecxz
arpl
xchg
out
in
std
shr
mov
push
or
aas
dec
pop
ljmp
out
dec
jno
xor
mov
lods
inc
dec
push
iret
scas
sbb
add
add
lock
mov
insb
jns
sub
test
mov
leave
xchg
out
insb
dec
pop
cld
mov
gs
lea
adc
fsubrs
and
mov
mov
stc
arpl
int
xchg
out
and
fisubrs
adcb
ljmp
dec
sbb
add
mov
xor
pop
cmp
mov
inc
and
sub
xchg
cmc
pop
cmp
test
pushf
ja
mov
lock
insl
gs
mov
loop
out
std
and
mov
ss
les
sbb
mov
outsl
pop
push
mov
imul
mov
in
push
xor
jnp
pop
inc
mov
jbe
out
push
jne
sbb
push
push
aas
dec
out
add
lods
add
inc
cwtl
sbbl
in
int
int
and
xor
mov
xor
gs
adc
dec
and
push
mov
add
adc
push
pop
add
and
es
insl
dec
into
xchg
cmp
ja
add
enter
add
add
data16
aaa
cmp
xchg
push
pop
ret
imul
cwtl
jbe
dec
mov
sub
push
loope
cltd
ss
fcomps
xor
popa
dec
xor
repnz
out
sbb
cmp
sub
mov
fcoml
ret
mov
stc
or
orb
sub
adc
aas
fwait
in
or
dec
nop
xchg
shl
push
inc
jo
jg
fdivl
and
mov
mov
bound
fcomip
and
movsl
aas
xor
int3
stos
or
jns
jnp
mov
inc
mov
xchg
ja
addr16
pop
lods
daa
jae
mov
adc
fistl
inc
sub
hlt
xor
imul
jno
mov
fwait
pop
mov
cli
mov
fistpll
sub
daa
pushf
std
cmpsb
ss
xchg
jg
push
pop
cmpsl
out
in
aad
push
adc
adc
fprem1
sbb
mov
into
pop
lcall
inc
inc
sarl
enter
pop
xor
adc
in
sti
nop
xchg
ds
nop
xchg
int3
mov
jge
cmp
in
xor
in
or
push
pusha
mov
es
lds
cld
test
enter
pop
popa
jmp
inc
repz
clc
mov
push
jo
and
in
mov
fdivs
xchg
jmp
mov
into
mov
sar
pusha
insl
jbe
jge
sub
aas
jae
or
js
out
outsl
jl
repz
pop
sub
xchg
call
daa
pop
inc
lret
and
popf
js
mov
sub
jno
decb
loope
sbb
inc
xor
dec
xor
enter
mov
loop
xor
bound
es
ds
test
pop
push
orl
push
cmp
lcall
in
fidivrs
xor
insb
mov
f2xm1
lock
fcomi
xchg
mov
nop
sub
sub
ret
dec
stos
ret
dec
fimuls
and
out
jl
mov
cmp
sub
out
cmpsl
xchg
xor
jae
or
repz
inc
jbe
sbb
je
outsl
shrb
cmp
cmpsb
fs
xchg
dec
push
dec
xor
mov
adc
inc
leave
and
cmpl
popa
adc
add
rcrb
aad
hlt
iret
lcall
mov
mov
jmp
or
in
stc
jge
xchg
inc
pop
dec
inc
fwait
push
push
shl
test
adc
xchg
jle
cmp
icebp
imul
or
inc
mov
jns
je
xchg
inc
xlat
jl
mov
lahf
pop
icebp
ret
mov
fsub
inc
pop
mov
cmp
nop
mov
adc
mov
pop
cmp
push
jle
push
std
lret
adc
adc
jge
pop
push
fcoml
inc
mov
mov
dec
icebp
pop
jmp
pop
sub
std
or
fdivr
pop
inc
mov
sbb
xchg
jns
fldl
pop
mov
xchg
add
add
sub
bound
pop
hlt
and
xor
mov
push
mov
jmp
pushl
out
loop
jmp
pop
mov
inc
xchg
mov
pop
fwait
imul
mov
movsl
fs
outsb
xchg
imul
mov
add
inc
pop
jg
leave
pop
jmp
adc
aam
int3
sbb
test
or
fadds
divl
stos
cmpsb
lods
dec
adc
and
fdivrs
mov
aam
push
ja
mov
adc
push
shl
mov
sbb
lock
mov
pushf
xchg
push
jne
and
shrl
out
push
mov
and
xlat
push
inc
pop
cs
inc
xchg
leave
sub
push
repnz
cmp
jmp
lcall
push
mov
jno
sbb
xor
rcrb
repz
sarb
pop
cmp
or
adc
iret
test
cmpsl
je
out
mov
sub
xchg
out
xor
lcall
mov
xchg
dec
add
push
test
addr16
fisubs
pop
je
cli
and
mov
push
push
add
adc
sbb
lret
out
daa
rorl
in
adc
sahf
iret
xchg
lahf
xchg
mov
cmp
imul
or
mov
cmp
ret
mov
outsb
xor
mov
cmp
mov
inc
mov
hlt
je
call
ja
fsubl
inc
cmp
xor
jae
ss
xchg
mov
nop
hlt
jl
jne
out
push
in
push
cmc
movsb
jne
lea
mov
cltd
add
call
jle
pop
cmpsl
fwait
pop
mov
test
xchg
notb
out
or
dec
sar
dec
rorl
mov
push
mov
lret
dec
xor
je
cmp
loope
pop
mov
xchg
shrl
pop
push
push
shlb
out
test
push
dec
shll
push
cmp
js
and
push
nop
pop
fcmovnb
mov
xor
push
mov
mov
jo
das
xor
mov
repz
leave
jno
test
pusha
dec
fmuls
adc
sbb
add
adc
outsb
mov
fisubrl
cmpsb
jns
xor
test
mov
outsl
loop
cld
pop
or
push
int
arpl
in
pop
mov
pop
dec
shrl
mov
cld
push
pop
sbb
mov
mov
iret
cmp
xchg
outsl
mov
xorb
fcomip
lds
adc
test
adc
fs
lahf
mov
lods
xchg
cmp
rcll
cmpsb
pop
and
jmp
jmp
pusha
mov
xchg
icebp
lea
xor
sarl
pop
movsb
lods
inc
mov
or
test
jne
movsb
fnstcw
xor
iret
aaa
inc
push
pop
xor
js
insb
adc
lods
psubd
jle
pusha
and
mov
lds
cmp
ret
and
pop
mov
jne
mov
mov
xchg
popf
inc
mov
mov
sti
faddl
cmp
pop
push
cmp
xor
dec
cld
xor
dec
inc
xchg
xchg
dec
std
and
mov
pop
xor
xchg
and
enter
or
push
sub
das
out
fdivs
sbb
mov
es
stc
sub
mov
adc
sub
mov
pop
es
dec
mov
cmpsb
or
notl
cmp
jno
mov
jb
enter
xor
lahf
inc
pushf
lds
lahf
xchg
jbe
cmp
jecxz
push
rorl
out
push
mov
xchg
pop
ret
pop
sub
pop
sub
push
xchg
loope
ljmp
enter
inc
inc
inc
test
push
pusha
fstps
mov
jnp
enter
jmp
in
push
mov
cmpps
xchg
cld
fnstcw
aaa
ret
xchg
pusha
push
outsl
incb
add
jb
mov
rolb
pop
ret
adc
cmp
rorb
aad
add
clc
jp
dec
lahf
cld
cmp
push
clc
sbb
sahf
or
decb
out
sub
sbb
push
mov
sbbl
clc
cmpsw
mov
lds
push
arpl
cmp
and
jbe
xlat
bound
aaa
out
xor
std
leave
scas
aaa
pop
fwait
repz
inc
cmp
push
push
in
lret
xor
sbb
sbb
loopne
adc
sbbb
push
jmp
cmc
pop
jg
cwtl
test
hlt
pusha
movsl
aaa
xchg
imul
roll
mov
das
mov
iret
mov
mov
dec
mov
stos
and
imul
inc
mov
dec
adc
aam
xor
leave
mov
rolb
jg
cmpb
push
xlat
mov
out
push
adc
push
lds
push
bound
or
jb
subl
clc
xor
add
test
mov
int3
dec
ret
cmp
sbb
mov
add
ds
scas
dec
adc
xchg
fcompl
adc
mov
fsub
mov
in
iret
push
push
ljmp
cmp
ds
loopne
mov
cwtl
xlat
xlat
pusha
ret
xchg
dec
jl
imul
aas
mov
lock
pop
outsl
pop
lahf
pop
aam
pop
lcall
ret
push
push
fbld
ss
cmpsb
jbe
scas
idivb
pushf
fmulp
and
add
rorl
mov
mov
ja
xchg
xchg
sbb
rcr
push
jno
and
cld
lods
shll
lret
push
loopne
mov
and
movsb
popa
test
xchg
sub
test
andl
mov
add
and
orl
movsb
out
addr16
js
popf
xor
jbe
lret
adc
mov
xor
inc
daa
sub
fdivl
cmp
jge
fldenv
xor
cmp
in
aam
cmp
mov
push
sub
mov
sahf
dec
xor
cmp
adc
jns
sbb
sti
outsb
pop
xor
inc
sub
cmp
loope
loope
mov
loop
jle
flds
scas
movsl
cmc
mov
ja
lock
into
ljmp
popa
out
xchg
cmpsl
cmpb
jae
call
adc
adc
test
push
dec
sub
ret
inc
rcr
and
mov
cmpsb
push
sbb
mov
xchg
rcll
dec
lcall
inc
mov
dec
sbb
push
loop,pn
repz
inc
nop
jge
sbbb
mov
out
add
mov
jmp
jmp
adc
mov
push
jle
test
out
or
lods
xor
mov
idivb
add
int3
pop
jnp
bound
mov
xor
outsl
inc
mov
lret
and
paddq
aas
into
push
movsb
enter
lds
jecxz
mov
add
pop
aam
scas
lods
dec
push
xlat
fs
loopnew
pop
mov
outsl
push
dec
mov
insl
bound
aam
sub
ja
lcall
push
mov
or
and
and
mov
in
fwait
adc
jg
cmp
enter
jnp
jb
cmpsb
movsb
mov
int
jbe
jp,pn
mov
jnp
fidivrl
in
xor
mov
pop
cmpsl
stos
jae
mov
dec
daa
es
jno
sub
push
xchg
mov
leave
scas
sbb
lods
mov
or
jns
ja
fwait
clc
sub
lock
cs
fistpll
xchg
sbb
xchg
test
lret
push
mov
cmp
mov
add
out
iret
adc
bound
inc
jg
pop
fiaddl
inc
pop
xchg
inc
add
mov
imul
cmpsl
ds
adc
push
jb
jb
ljmp
leave
int
mov
adc
mov
cld
fidivs
data16
inc
outsl
jle
and
mov
mov
xor
mov
lret
mov
xchg
shll
cli
add
test
and
rcll
inc
arpl
jp
dec
fsubl
mov
pushf
ljmp
jbe
fwait
daa
out
push
ret
xchg
or
xlat
in
add
fucomi
loop
scas
add
push
and
xor
push
xor
jl
mov
fidivl
fsubs
push
xor
jecxz
mov
icebp
rcl
pushf
jle
dec
divb
xlat
cs
je
cmc
adc
jne
adc
sti
cli
push
lods
xchg
fistl
fadd
aas
or
movsb
mov
je
mov
sarl
lret
mov
jle
dec
xchg
into
xor
dec
jnp
test
std
mov
ret
push
test
in
pop
pop
jo
ret
add
cltd
cs
cmp
sbb
jno
aas
mov
loop
add
fsubrl
enter
nop
aas
dec
mov
enter
xchg
inc
fsincos
pop
outsl
lcall
gs
clc
mov
inc
mov
lock
or
int
ja
mov
call
mov
adc
mov
out
cmpb
movsb
adc
loopne
imul
dec
or
mov
int3
push
lcall
cmp
sti
sbb
mov
ljmp
xchg
cli
ds
cmc
sbb
dec
push
mov
lahf
pusha
icebp
movsb
lcall
pop
fstps
outsb
js
cmp
dec
sahf
jp
pop
adc
test
sub
push
mov
push
and
fsubrl
enter
xchg
inc
js
mov
adc
imulb
jl
lea
or
lds
out
fdivs
jle
clc
push
xchg
lods
movsb
icebp
jne
pop
jns
stc
jbe
fcompl
xor
xchg
adc
mov
mov
pop
push
aam
pop
cmpl
outsb
insl
addr16
pop
rcll
mov
fs
sbb
pop
ret
xchg
sbb
out
xor
fbstp
rcrb
ja
push
mov
fstpl
test
hlt
xchg
sbb
int3
pusha
cmpsb
addr16
ffree
adc
ljmp
xorl
lret
insb
mov
mov
test
sbb
jne
in
idivl
mov
lds
mov
enter
aam
cmp
push
cmp
ror
mov
dec
out
mov
outsb
xor
push
repz
cmp
int
mov
ja
dec
enter
sbb
xchg
ljmp
mov
pop
lcall
in
mov
les
pop
mov
mov
mov
sub
xor
nop
mov
push
test
add
ljmp
jbe
rorb
inc
sti
mov
sarl
adc
ret
aam
int
insb
xchg
lcall
lahf
stos
or
sub
cwtl
mov
mov
into
sub
addr16
sbb
into
jbe
imul
daa
xchg
push
gs
mov
sub
and
adc
push
xlat
jp
rolb
das
fwait
push
ljmp
push
mov
mov
fsubs
and
mov
in
inc
push
sbb
insb
xchg
sub
in
pop
movswl
cmp
int3
fisubrs
mov
loope
xchg
outsl
push
mov
xchg
pop
jae
ret
movsb
sarl
mov
clc
je
push
jbe
cmp
je
cwtl
bound
add
xor
xor
ja
jo
mov
test
fiaddl
test
mov
push
adc
and
and
mov
or
cmc
mov
mov
aam
pop
test
fs
pusha
mov
sub
push
test
mov
xchg
lods
adc
out
out
outsb
sti
repnz
fsubs
cs
and
and
xchg
jae
in
loopne
fwait
leave
push
fucom
xchg
or
nop
fistpl
inc
sbb
loop
int3
fnsave
jge
out
xchg
leave
mov
pushf
js
xor
add
subb
xor
mov
insl
out
dec
mov
cmp
and
mov
icebp
mov
push
imul
lcall
shll
dec
mov
sahf
dec
leave
mov
jp
cmp
aam
cwtl
jae
add
dec
ss
popf
sbb
notb
or
jle
test
or
les
or
cmp
rorl
lods
inc
jg
sub
in
xchg
adc
cs
repnz
push
jno
js
fisubrl
sbb
popf
cmp
mov
dec
mov
les
and
fdivs
lcall
bound
jne
push
xchg
fnstenv
pop
lret
addr16
pop
cli
fwait
icebp
sub
pop
or
mov
movsb
mov
addl
jnp
test
ret
adc
adc
pop
faddl
adc
inc
jae
sub
das
inc
mov
loope
xlat
mov
jmp
cmpb
lds
js
cmp
in
cmc
add
stos
int3
mov
inc
sbbb
xchg
in
fsubr
pop
es
cmp
sti
aam
jbe
jg
mov
call
jmp
xchg
scas
fnstenv
or
push
ret
insl
or
push
je
orb
int3
cmp
xchg
push
sahf
and
xor
xor
fstpt
mov
bound
mov
das
sbb
cmpsl
out
mov
inc
filds
test
sbb
push
mov
aas
add
mov
out
mov
stos
inc
clc
fdivrl
or
movsl
mov
xchg
aaa
popa
pop
xor
mov
arpl
and
js
shll
push
push
imul
mov
sub
cmp
insl
push
and
push
hlt
xor
adc
add
out
fldt
inc
pop
sahf
mov
add
shl
shlb
outsb
cmpsl
outsb
and
dec
repz
ss
in
push
sub
inc
inc
pop
xor
in
cmc
in
ret
outsb
testb
data16
xor
xchg
or
push
mov
adc
aad
and
mov
xor
mov
sbb
sbb
aad
xor
sub
out
pop
jmp
xor
sbb
jp
shll
out
insb
pop
adc
mov
jp
mov
push
cmp
adc
xchg
add
ja
mov
jp
lock
cmp
adc
mov
and
or
repnz
mov
cld
ja
jmp
mov
sub
bound
mov
ss
jmp
jmp
scas
mov
bound
inc
ljmp
ljmp
js
pop
mov
loop
repz
sahf
mov
mov
sbb
out
xchg
jns
xlat
mov
mov
jmp
jl
movsl
mov
ja
xchg
outsl
mov
add
push
jbe
mov
and
inc
aas
dec
shl
and
dec
mov
cmpsb
loope
sub
xor
and
ljmpw
lods
loopne
mov
fcmovnbe
es
jae
rcr
cmc
imul
sahf
or
cs
in
jbe
push
addb
xor
xor
into
push
jns
jg
mov
cli
mov
push
sti
je
outsl
push
xor
sahf
xchg
subb
sub
inc
fidivrl
test
int
rcrb
inc
roll
shl
inc
pop
loopne
jo
popf
mov
jo
rcrl
bound
icebp
adc
je
and
in
repz
push
jge
jb
push
adc
dec
add
push
adc
cmp
inc
mov
push
sub
push
adc
jmp
push
inc
inc
in
push
pop
add
lret
mov
push
push
mov
push
mov
dec
mov
stos
add
cmp
ljmp
jnp
mov
lds
sbb
ja
lea
xchg
and
sbb
ds
pop
xchg
fsubrp
inc
mov
xchg
pop
mov
ficoml
ffreep
cltd
sub
push
aam
cld
adc
dec
and
rclb
xor
push
arpl
test
hlt
test
sbb
xchg
stos
testb
leave
xlat
call
les
fldt
inc
pop
jl
shll
sbb
xchg
push
pop
jnp
mov
test
into
bnd
mov
cmp
sbbb
jb
xlat
sbb
inc
lods
not
pop
push
fs
in
and
jnp
ds
shrb
inc
bound
in
je
lcall
incb
push
push
push
aaa
sbbl
loope
mov
addr16
jge
pop
push
lret
ja
inc
ljmp
mov
outsb
stos
jnp
xor
xchg
adc
mov
out
fsubs
nop
and
nop
xchg
mov
adc
dec
jnp
xchg
daa
inc
xchg
int
and
mov
xchg
adc
pop
ror
xchg
or
dec
jbe
lahf
int
shlb
xor
ds
add
lods
xlat
mov
xor
fidivrs
adc
dec
or
int
push
mov
lods
movsb
addr16
push
icebp
imul
loope
pop
inc
push
fwait
push
sbb
sbb
xchg
arpl
rclb
cmp
mov
je
rcrl
push
cmp
sbb
mov
pop
push
pop
outsb
das
pop
jg
movsb
sbb
sahf
movhlps
xor
mov
movl
arpl
xor
in
mov
cmpsb
push
es
fwait
lods
or
insl
js
fistpl
mov
mov
xor
notb
or
or
push
cmp
insl
cmpsb
mov
imul
inc
xchg
mov
shrl
adc
mov
int
lock
sbb
enter
or
fwait
jb
loop
movsl
aam
jmp
iret
pop
push
imul
push
cmp
pop
ficoms
stos
push
iret
ljmp
loope
or
mov
pop
inc
mov
and
fisubs
xchg
mov
cmp
test
mov
lcall
flds
mov
jnp
outsl
lods
imul
orl
fiaddl
push
adc
aaa
ret
mov
ds
fnsave
lahf
mov
jle
mov
in
or
int3
mov
in
pop
inc
push
mov
insb
pusha
iret
in
push
add
shlb
lahf
xor
dec
pop
jle
cmc
int
out
mov
ficompl
lret
sub
cltd
sti
ss
movsl
cmp
icebp
jp
leave
stos
push
mov
jb
enter
xor
aad
lret
int3
les
adc
jle
inc
idivb
in
dec
dec
pop
pop
es
mov
pop
pop
cmp
push
loop
mov
push
bound
mov
outsb
push
add
push
xchg
dec
add
daa
dec
mov
sbb
cli
adc
mov
pop
xor
add
push
and
jl
ss
outsl
cmp
pop
jns
mov
jle
and
bswap
arpl
loope
xchg
ret
xchg
lods
into
insb
gs
idivl
int
fidivl
and
cli
cmp
xor
notl
loopne,pt
fldl
mov
sub
sti
jmp
movsl
aam
mov
add
mov
test
dec
mov
mov
addr16
inc
cmc
ss
jo
jecxz
sub
jg
sti
add
mov
and
jb
mov
int3
and
aaa
push
cmc
cltd
mov
push
cmpsl
sahf
push
push
xor
cmp
in
mov
idivl
jae
and
dec
jl
add
mov
sub
pop
adc
mov
xchg
sahf
test
scas
pushf
and
cli
fwait
mov
mov
stos
shll
fldt
test
imul
sub
mov
ret
jg
pop
inc
push
sub
bound
dec
mov
loopne
int
inc
xlat
iret
in
or
mov
mov
addl
mov
xchg
outsb
dec
inc
mov
sarb
shr
sahf
enter
inc
mov
repz
mov
addr16
scas
fcmovnbe
jl
hlt
pushf
sub
fildll
rcll
mov
and
xlat
aaa
lods
addr16
and
pop
mov
xor
push
data16
test
shll
mov
ljmp
sbb
push
xor
popa
xchg
movsl
int3
cmpsl
repnz
inc
mov
je
pop
lret
and
out
call
lods
cld
cmp
in
movsb
data16
cmp
pop
mov
scas
shlb
fbstp
gs
or
sbb
adc
add
lea
aam
adc
andb
inc
dec
loop
jl
lods
pop
dec
fs
ds
add
or
xor
clc
pop
mov
sbb
dec
sbb
shrl
cltd
mov
bound
jp
xor
ss
mov
clc
xchg
add
aad
push
jmp
cmpsl
icebp
rclb
and
insb
or
sub
insb
nop
repz
mov
mov
mov
or
inc
mov
or
dec
imul
and
sub
xor
int3
push
stos
mov
push
rclb
xor
stos
sub
add
adc
push
test
xchg
jecxz
sub
mov
fildll
insl
mov
jne
inc
stos
push
imul
xchg
or
sti
jmp
iret
mov
out
out
out
cmp
out
cmp
mov
mov
out
xchg
rcll
rsm
mov
dec
movsl
cs
fstpt
push
jne
imul
or
add
xchg
out
cmc
std
fdivl
mov
push
sti
jge
inc
jnp
inc
mov
sbbl
sub
pop
adc
adc
subl
mov
add
mov
adc
jne
mov
pop
cmpl
mov
lock
mov
dec
inc
shrb
icebp
out
push
sti
pop
jbe
jae
fwait
sbb
std
testb
lods
or
xor
or
aad
sub
int
mov
sbb
dec
cmp
mull
pop
iret
jnp
add
mov
test
leave
add
sarb
push
movnti
inc
aas
in
dec
pop
mov
int
aam
lcall
add
enter
inc
clc
fsubs
mov
imul
xchg
xchg
adc
fucomip
dec
cld
frndint
movsb
inc
test
ror
lock
inc
pop
mov
mov
cltd
mov
fldt
lods
or
lret
push
cmp
mov
movsb
add
inc
pop
into
adc
mov
int
pop
mov
sti
pop
xor
jbe
mov
jmp
xchg
dec
ss
dec
imul
hlt
mov
shrl
daa
mov
sbb
jo
lock
pop
out
sub
hlt
inc
cltd
imul
pop
xchg
pop
xor
xor
rcll
leave
hlt
out
cmp
mov
or
rol
push
cmp
in
push
stos
adcl
sub
scas
in
sbb
jno
adc
inc
je
clc
jecxz
ljmp
xchg
loopne
loop
push
into
jp
cmc
inc
push
sti
jns
fdivrl
insb
mov
fildl
addr16
dec
sub
pop
and
push
inc
pop
jae
mov
cs
xchg
je
add
xchg
sbb
push
jae
and
fistl
aaa
loopne
lods
mov
pusha
xchg
int
or
fcom
jns
jl
cwtl
add
xlat
rcll
or
jge
jbe
cwtl
test
or
pushf
popa
into
inc
mov
xchg
enter
outsb
jae
mov
popa
lds
cmpsb
insl
movsb
mov
scas
or
or
dec
mov
dec
or
aad
jmp
testw
sub
jne
int3
cmpb
jo
dec
std
loope
das
psubusw
enter
push
js
mov
mov
jecxz
imul
cmpsb
cmpsb
into
int3
pop
push
in
mov
xor
cmpsb
dec
pop
clc
fwait
inc
jae
dec
jge
rorl
adc
xchg
icebp
inc
xor
into
adc
sbb
in
fimull
movb
movsb
jb
inc
add
pop
mov
mov
mov
dec
stos
inc
pop
popa
push
rcr
or
aas
add
fildl
shlb
xchg
push
add
in
jne
mov
out
jnp
out
movsl
outsl
sbb
dec
cmp
xor
push
add
fucomip
sbb
inc
add
in
ret
jne
sub
jno
int3
cmc
lods
sub
xchg
fmuls
xchg
add
fisubs
dec
pop
in
add
push
inc
mov
mov
inc
cwtl
test
js
je
push
les
ljmp
adc
fsts
xor
les
xchg
int3
inc
inc
pop
aas
loope
das
nop
cmp
mov
pusha
pop
gs
fisttpl
jb
inc
fidivrs
cmpsb
movsb
inc
or
jmp
adc
xchg
inc
push
push
test
dec
bound
cli
and
repnz
ficoml
fxch
cmpsb
xor
insb
idivw
adc
addr16
inc
add
sub
push
loope
xor
shll
mov
fld
in
push
movsb
xchg
push
ss
mov
xchg
and
addr16
rol
aas
loop
bound
push
int3
test
in
lcall
lret
into
push
pushf
fidivrs
repnz
jnp
pushf
shlb
mov
out
in
jns
adc
imul
add
push
repnz
sbbb
subb
sar
into
mov
setg
mov
dec
pop
sbb
das
ror
sub
lcall
or
adc
cli
mov
xchg
fsubl
push
sbb
sub
pop
mov
sbb
sub
inc
sahf
push
orb
or
jno
mov
add
and
pop
push
adc
test
in
cltd
jnp
rcrl
pop
comiss
inc
in
jp
fdivr
adc
loope
dec
cli
outsl
imul
mov
gs
movb
lods
cwtl
in
pop
test
xor
pop
inc
mov
mov
call
fwait
mov
scas
xchg
in
lret
jbe
sbb
jmp
pop
iret
lahf
xchg
mov
addr16
es
jae
xor
pop
lahf
loope
mov
mov
push
scas
arpl
mov
sti
jns
mov
in
inc
jl
add
jl
repnz
fsubs
sub
enter
stos
xor
sub
fidivs
movsb
jnp
int
dec
pusha
out
jmp
in
std
add
or
xor
stos
ret
adc
dec
cmp
dec
inc
mov
outsl
xor
lret
testl
out
mov
pop
lods
icebp
cwtl
cmpb
or
aaa
int3
pop
lahf
scas
adc
sub
fs
push
aaa
inc
sti
loopne
nop
pop
cmp
pushf
jp
cmp
mov
add
movsl
cltd
or
dec
xor
lcall
cli
add
test
sbb
mov
adc
pop
pop
inc
sahf
je
int3
xlat
pop
leave
push
mov
xchg
mov
fsubs
addr16
je
addr16
mov
in
pop
cmp
xchg
fs
sub
ret
mov
sub
jo
mov
adc
ret
out
into
or
sub
add
dec
xor
dec
mov
imul
popa
xchg
pop
rcrb
push
push
mov
shl
sti
cs
stc
add
fadds
mov
xor
pop
xor
mov
mov
cmp
jecxz
cmc
adc
xor
sahf
mov
mov
test
mov
xor
inc
push
pop
xor
cmp
cmp
push
push
pop
inc
sbb
inc
adc
sbb
adc
lret
pop
mov
test
xchg
or
sti
ljmp
ds
jl
or
stos
xchg
xor
clc
loope
cmpsb
mov
cltd
fwait
add
inc
test
ss
xor
aas
mov
or
cli
push
xor
dec
aas
mov
jno
mov
fdivrl
add
jb
cmp
mov
rcll
sbb
stos
fwait
cld
cmp
mov
movsb
in
push
add
fstl
push
push
lret
loop
mov
addb
pop
leave
xor
jl
dec
dec
sbb
xchg
adc
cmp
push
fwait
in
fwait
mov
nop
cwtl
mov
and
cmp
jne
into
jne
rclb
push
fistps
repz
xchg
sarl
cmpsb
mov
daa
mov
hlt
sub
mov
aaa
aam
repz
rol
push
outsl
ret
lret
jg
mov
int3
orl
inc
lahf
lcall
cmp
or
aaa
jno
and
cld
data16
out
mov
ljmp
or
cli
and
mov
sbb
imul
orb
into
mov
aas
loop
inc
cltd
sbb
dec
xchg
imul
ret
rcrb
xor
or
movsl
fwait
les
lahf
add
mov
inc
aas
xchg
sub
jle
pop
xor
mov
cmp
stos
repz
enter
popfw
xor
je
push
cli
mov
push
xchg
or
ds
mov
mov
cmp
outsl
sbb
mov
inc
pop
dec
mov
mov
mov
cmc
pop
nop
aam
test
mov
jle
lock
inc
fwait
lret
movb
pop
mov
repz
mov
fistps
pop
clc
scas
dec
fcompl
adc
xchg
shr
push
out
arpl
mov
sbb
jns
int
js
nop
popf
out
in
xchg
xchg
loop
dec
pop
cs
idiv
push
cmp
fstpl
xchg
push
xchg
hlt
ss
xor
inc
push
imul
movsb
xchg
mov
sub
adc
cmpsl
inc
neg
push
xchg
movb
enter
aaa
in
xor
sub
lret
push
ret
sar
ret
aaa
fidivrl
out
mov
fdivrs
aas
loop
lahf
int
dec
mov
xchg
aaa
mov
and
push
push
fldt
pop
leave
mov
cld
mov
insb
stos
cli
dec
xchg
and
push
jb
enter
mov
inc
pop
in
xlat
sub
mov
dec
fcomip
inc
dec
ds
lret
jnp
mov
sbb
push
int
add
jle
push
in
push
mov
outsl
push
fs
pop
scas
push
mov
jmp
cvtdq2ps
fcoms
or
mov
mov
out
jo
fcmovnbe
call
out
pop
aaa
dec
cmpsl
jnp
or
push
jo
jmp
fisubl
cmpb
or
cmp
xchg
aaa
mov
fadd
lahf
mov
daa
mov
outsb
and
test
jle
xor
xor
lret
xchg
into
push
and
out
mov
mov
mov
cmp
push
fsubs
lods
outsb
sarl
fistl
pop
inc
mov
inc
push
jle
cmp
adc
mov
push
pop
sub
mov
pop
int3
mov
arpl
outsl
jb
mov
out
in
sbb
or
aas
xchg
push
dec
push
in
bound
sahf
cmp
cmc
sti
out
xor
xchg
jp
icebp
sub
cli
xor
or
jae
lret
push
add
subb
fdivl
scas
sahf
cmc
push
cmp
and
fistpl
sarl
mov
in
or
mov
adc
idivb
mov
push
cmp
mov
or
in
pop
pop
mov
sahf
xchg
dec
sbb
inc
or
inc
jno
adc
lods
ret
mov
cmp
out
mov
mov
xor
mov
and
popa
test
out
adc
ss
aad
jl
stc
loope
leave
insl
js,pt
sbb
pop
dec
xchg
sub
dec
push
jecxz
xor
mov
dec
or
or
inc
lcall
std
jle
push
mov
sub
jo
je
mov
loope
stos
or
sbb
jecxz
leave
sub
dec
divl
jns
and
add
or
fmulp
and
cmp
push
nop
pop
push
test
push
fdivrs
mov
sbb
fmulp
or
out
movsl
jle
adc
xor
fidivl
xor
mov
pop
inc
mov
mov
addl
test
stos
aad
inc
push
cmp
push
mov
xchg
mov
dec
lods
es
jne
push
ret
mov
add
jmp
pop
mov
shrl
fnstenv
dec
mov
jle
popf
xor
cmp
sub
test
fimull
pop
dec
out
sub
ret
inc
pop
popf
push
push
les
cltd
ljmp
jl
jg
test
mov
sub
dec
jp
movsl
repz
jno
pop
int3
and
ret
dec
inc
int3
sti
sbb
mov
call
popf
arpl
pusha
inc
aas
hlt
addr16
or
hlt
std
iret
mov
xor
mov
xor
jns
mov
jge
or
pushf
xchg
jnp
push
mov
jle
int3
fwait
pop
scas
dec
test
jg
mov
and
cltd
int
mov
xchg
sbb
popf
dec
in
mov
icebp
cli
add
arpl
cmpsl
cmpsl
pop
call
imul
add
dec
cmp
push
mov
lret
cli
cmp
stos
and
jb
inc
imul
mov
add
inc
out
xchg
dec
xchg
pop
stos
out
pop
and
jae
sbb
inc
outsb
inc
xor
add
lret
sbb
mov
push
rorb
movsbl
or
xor
fdivr
ret
or
icebp
mov
mov
pop
test
arpl
fisttps
xchg
into
push
ljmp
push
fs
pop
repz
scas
jle
jo
sub
nop
scas
std
cmpb
icebp
sbb
inc
pop
rol
push
stos
inc
stc
inc
push
loope
xchg
arpl
sbb
mov
add
jns
fistpll
fdivp
mov
fdivrs
fidivs
scas
arpl
testl
ret
mov
mov
cmpsb
movsb
xor
xchg
loope
adc
addr16
sahf
inc
and
fcoms
lea
ljmp
inc
jbe
and
js
inc
shrb
call
cwtl
pop
subl
lcall
gs
push
rcl
js
or
or
or
test
addr16
dec
adc
xchg
mov
xchg
xor
inc
xchg
shlb
out
arpl
lods
out
pop
pop
fidivs
loopne
lds
cwtl
test
dec
push
mov
cli
mov
shr
mov
xchg
jbe
mov
xor
cld
orb
push
push
sbb
and
les
sbb
dec
pop
cmp
ss
push
imul
outsb
in
call
fwait
push
mov
ja
rdmsr
xor
sarb
xor
pop
test
lahf
push
pop
mov
cmp
idiv
dec
jmp
aas
mov
jg
jg
insb
dec
push
ret
fsubrl
xlat
push
xor
adc
sub
gs
jge
mov
jl
insl
mov
in
jne
pusha
mov
jno
out
in
pop
jbe
cmp
sub
sub
mov
aad
pop
xor
push
sysexit
je
push
in
inc
mov
push
stos
andb
cmp
dec
and
xlat
cs
dec
mov
les
pop
and
push
jnp
sahf
and
xchg
aas
scas
sbb
fwait
repz
dec
cltd
iret
push
pop
daa
and
cmp
stos
push
jecxz
pop
dec
in
mov
jns
cmp
aas
jno
pop
add
test
sub
cli
cmp
inc
icebp
repnz
negb
pop
lahf
imul
sub
push
stc
test
test
sbb
add
pop
and
pop
popf
sub
notb
add
imull
cmp
dec
mov
pushf
mov
loopne
push
cmpl
in
in
pushf
xchg
test
xor
adc
leave
adc
and
lret
into
mov
lret
mov
and
ret
xchg
mov
and
xchg
das
sbb
and
out
jecxz
inc
insb
mov
dec
push
pop
lods
mov
pop
test
jo
add
xor
adc
ficoms
push
je
cltd
mov
jb
test
outsl
lods
mov
mov
rep
sbb
aam
addr16
aaa
ss
repnz
push
cmp
pop
icebp
jnp
fdiv
sub
mov
mov
mov
test
icebp
push
fstps
sbb
into
outsl
test
pop
xor
scas
cli
jge
mov
clc
addl
fcmovnu
lahf
cmp
fldl
jnp
dec
adc
loop
imul
out
mov
aam
or
lahf
shrb
dec
jns
and
popa
pop
lcall
adc
repz
fwait
jmp
aam
sub
pop
or
mov
movsl
call
js
sbb
testl
or
roll
sub
testl
xchg
jecxz
inc
add
mov
std
add
fadds
push
lods
lahf
push
shrb
lahf
sub
add
cmpl
inc
push
sbb
inc
lock
cmpsb
mov
negb
push
dec
fstl
js
xor
call
lea
sbb
or
xor
xor
xchg
mov
or
fadds
xor
repnz
adc
mov
pop
popf
jns
inc
stos
mov
mov
xor
clc
filds
mov
mov
cld
ja
frstor
xor
dec
dec
mov
xchg
jecxz
gs
and
mov
insb
adc
fstl
out
cmp
out
out
mov
jns
jl
mov
ret
push
xchg
push
stc
out
mov
jae
nop
xchg
sbb
jge
lret
add
insb
push
sarb
int
in
jg
add
cmpsb
adc
imulb
push
sbb
sbb
dec
push
leave
mov
pop
mov
pop
dec
out
mov
dec
mov
jns
xchg
xor
popw
jb
mov
sti
test
pushf
adc
mov
push
jge
adc
adc
sti
jmp
stos
mov
repz
stos
sub
add
loope
fisubrs
idivl
mov
cltd
cmp
outsl
icebp
shll
mov
testb
pop
out
dec
adc
fsubl
mov
xchg
push
mov
lods
dec
jno
nop
ret
aad
and
pop
pop
cmp
mov
shrb
pop
dec
fcomps
test
push
push
inc
pusha
in
sti
jle
test
fcompl
sbb
out
sub
repnz
pop
add
fstl
cwtl
and
fcoml
daa
inc
cmp
adc
mov
call
imul
or
mov
and
dec
in
js
inc
mov
push
mov
fcom
fstp
mov
xchg
dec
out
jge
xor
cmp
add
jg
sbb
sbb
dec
adc
lock
pop
push
std
mov
cmp
mov
ds
cmpsb
call
mov
les
jno
les
imul
jbe
xchg
enter
call
call
xchg
dec
sub
rorl
testl
sbb
pop
cmp
scas
cmp
mov
popa
lret
cmpl
add
fdivl
and
cs
sub
mov
and
stos
lret
sbb
in
sti
or
pop
xor
scas
fildll
ret
pushf
xchg
into
pop
or
inc
in
repnz
and
xchg
sub
cmc
call
xchg
cmp
push
movsl
aaa
sti
mov
adc
xchg
pop
out
dec
sti
rclb
ficoms
xor
add
mov
mov
add
lret
and
gs
test
jecxz
aas
mov
scas
add
into
not
out
mov
xchg
pop
xlat
imul
sbb
push
das
add
shrl
xor
xorb
les
pop
out
or
mov
ret
cmp
lock
cmc
xchg
int3
call
inc
mov
jl
pop
cmp
nop
jecxz
xchg
in
cmp
sub
cmp
xor
pop
pop
xorl
push
int3
dec
push
repz
mov
add
jg
add
sti
pushf
sub
mov
dec
test
cmpsl
inc
out
out
xchg
sbb
or
repnz
cmp
sbb
js
loope
das
dec
and
and
popa
ss
mov
ja
jnp
jae,pt
scas
es
sub
fdivl
dec
fadds
scas
cmp
rcl
andb
xchg
xor
xchg
inc
fstpt
mov
adc
or
lock
mov
repz
dec
push
aaa
sbb
sub
jne
xchg
adc
cmp
mov
out
decb
in
das
sub
xor
in
imul
popf
cs
fists
cltd
adc
mov
mov
ja
pop
sti
lds
sti
pop
outsl
pop
fsubrl
pop
insb
xchg
out
push
lock
xchg
jno
and
call
int
sti
mov
cmc
scas
ret
lods
fs
ds
icebp
or
mov
adc
add
cmp
mov
mov
pop
enter
cwtl
movb
filds
rcl
push
jnp
pop
mov
dec
iret
dec
push
jle
lods
out
cwtl
cwtl
jg
push
jne
mov
adc
stc
pop
jae
ja
dec
dec
inc
xchg
xchg
insl
mov
movsl
xchg
js
aad
mov
pop
call
out
inc
hlt
pop
cld
sbb
pop
mov
dec
rep
adc
loop
pop
mov
mov
decb
stc
es
aaa
mov
mov
sti
and
xchg
dec
movsb
popa
jae
fs
loopne
popa
rol
inc
mov
xor
mov
pop
cld
paddw
repnz
mov
dec
mov
cmp
imul
jg
lds
test
lcall
sar
mov
insl
jecxz
cmp
jns
lret
sbb
std
cmp
notl
lahf
xor
test
push
lcall
and
add
xchg
fisttps
test
hlt
stos
jae
jg
cs
scas
push
sub
imul
pop
sub
and
dec
push
xlat
test
xor
mov
mov
in
fidivs
loop
mov
mov
xor
aad
or
or
adc
and
adc
add
push
xor
out
pusha
xor
lidtl
push
jae
mov
xchg
out
adc
cld
xor
repz
xorl
aas
jecxz
xor
jns
jae
or
jp
jp
repz
movsl
mov
mov
rclb
or
mov
mov
sarb
lahf
decb
cmc
lcall
insb
sub
push
ret
ljmp
xchg
subl
lods
jle
add
imull
lods
push
xchg
lahf
cmpsl
daa
fwait
sbb
xor
pop
mov
add
in
std
sahf
cmpsb
hlt
aas
scas
xor
xor
xor
ljmp
jp,pt
xrelease
sbb
les
lret
in
fwait
mov
inc
mov
xchg
push
jno
pop
lds
stc
hlt
xchg
inc
daa
out
daa
rolb
sti
test
out
xchg
lahf
fnstsw
push
jmp
xor
and
mov
cmpsl
stos
mov
dec
cwtl
push
sbb
scas
popa
sub
inc
sbb
lds
je
mov
cltd
int3
out
and
insl
cltd
insb
push
mov
xchg
sbb
outsl
in
push
inc
or
cli
jg
dec
jg
dec
mov
testl
popf
jl
scas
fwait
into
mov
pop
scas
sub
mov
out
fmull
adc
jg
fstps
dec
sub
xlat
lods
je
fidivrs
or
mov
stc
sbb
rol
inc
mov
jo
test
sub
std
dec
js
fcomps
js
sbb
mov
popa
dec
sbbb
hlt
flds
enter
test
mov
hlt
into
sbb
push
stos
lds
adc
inc
sbb
pusha
in
lret
xor
mov
mov
iret
loopne
push
jae
cltd
and
fdivs
xor
mov
cmp
lret
lods
or
andl
adcb
ret
insb
sbb
mov
test
xor
and
out
dec
fnstenv
adc
sarb
insl
adcl
sbb
xchg
ss
popf
lea
inc
sbb
cmp
push
lea
jbe
push
mov
lret
or
and
pop
xchg
xor
xorb
mov
sbb
mov
mov
mov
popa
push
sbb
addr16
dec
xor
into
fidivs
inc
cmp
xlat
cmpsb
inc
mov
fcmovbe
mov
sub
lods
xchg
jnp
add
mov
fs
js
cld
sbb
sti
xor
xchg
push
sub
aaa
and
and
xor
sbb
cwtl
nop
jg
pushf
push
je
add
loop
insb
das
or
or
pop
stos
xchg
and
test
fs
ret
jno
int
in
nop
xchg
imul
popf
dec
mov
repz
sub
ss
jns
sub
pushf
psubq
push
push
and
mov
outsl
xchg
cs
fdivl
sahf
mov
add
pushf
imulb
mov
xor
or
jns
or
or
adc
push
pop
popf
xchg
pop
mov
push
mov
loopne
add
leave
sbb
cmpsl
and
xor
mov
in
xor
scas
adc
std
adc
xchg
xor
int3
push
sbb
ret
fs
rcl
and
pop
inc
mov
ficoml
test
xchg
insb
and
rorb
ds
ds
or
mov
icebp
dec
and
fisttpl
shrb
pusha
cld
inc
dec
jbe
std
push
dec
dec
sub
nop
in
mov
xchg
cmc
cmp
push
out
sti
ret
mov
filds
mov
test
dec
hlt
jecxz
cmp
rolb
xorl
cmp
daa
xchg
mov
xchg
negl
fistl
sbb
repz
addr16
push
or
ss
pop
and
mov
adc
fnstcw
int3
pslld
mov
out
rol
enter
add
push
bnd
dec
dec
jg
hlt
nop
adc
jae
lds
mov
test
jbe
xlat
aaa
add
inc
sub
inc
mulb
adc
outsb
insb
cmp
inc
inc
mov
jmp
sbbb
fxch
leave
mov
cmpsl
outsl
mov
mov
repz
shll
cmpsb
mov
cltd
sahf
sub
int
jnp
dec
xor
pop
pop
ret
pop
cli
dec
ficoml
xor
mov
jae
imul
imul
add
in
test
push
dec
jbe
aam
and
jp
pop
movsl
jno
pop
sbb
cli
sahf
jnp
mov
add
repz
mov
adcl
push
inc
xchg
test
into
jae
lds
cmp
mov
or
shr
test
test
mov
addb
fsubl
dec
mov
outsl
call
pop
int
scas
xchg
sbb
and
repnz
mov
inc
pop
hlt
pop
xchg
arpl
and
mov
xchg
in
cmp
jmp
cmp
push
sbb
or
dec
add
fdivr
dec
jbe
outsb
test
lods
popa
sbb
inc
sbb
jns
enter
sahf
dec
enter
jmp
cld
arpl
add
ja
lret
lret
imul
mov
in
clc
mov
incl
repz
xchg
fldenv
fs
cmp
cmp
ds
mov
sbb
rorb
sahf
jo
lahf
iret
xor
imul
or
insl
mov
lret
arpl
or
out
out
fnsave
mov
lock
mov
pop
ret
xchg
addb
int3
sbb
pop
and
idivl
pop
sbb
dec
sub
jns
mov
aas
pop
push
mov
cs
and
arpl
jge
jle
cmpb
xchg
push
push
stos
push
sbb
mov
pusha
sbb
bnd
mov
mov
repz
cmp
push
aas
sub
movsl
clc
mov
test
add
pop
pop
int3
mov
rorl
outsb
cmp
pop
mov
xor
lods
sub
jp
and
cmp
shll
adc
andb
add
xchg
bound
in
lahf
mov
mov
in
pop
bound
arpl
pop
mov
popf
orl
paddsb
adc
mov
or
inc
mov
sahf
sbb
xchg
sbb
out
dec
jecxz
mov
pop
addr16
fwait
iret
daa
mov
enter
and
shl
leave
outsb
daa
xor
icebp
int
enter
xor
sub
outsb
xor
sar
out
mov
add
pop
shr
mov
sub
mov
int
call
add
inc
lcall
enter
mov
sub
cmpsb
lahf
push
push
mov
sub
js
push
adc
jnp
inc
daa
push
or
push
or
fsub
push
fsubrp
testb
pop
gs
mov
mov
push
mov
pop
adc
mov
push
lret
in
repnz
push
js
lahf
or
mov
xor
outsl
jno
shlb
es
cs
out
cmp
ja
lock
sbb
and
adc
addr16
mov
push
adc
add
rcl
push
cmc
lcall
incl
mov
addb
test
ds
xchg
scas
into
sbb
lret
in
jae
sahf
arpl
les
cltd
in
scas
mov
daa
push
mov
clc
inc
sbb
shlb
cld
mov
jns
js
pop
xchg
inc
mov
and
dec
addr16
cmp
in
outsb
repnz
popa
inc
aaa
cli
push
adc
call
enter
sub
cltd
daa
sbb
sbb
dec
mov
into
inc
dec
xchg
fs
pusha
fdivs
sahf
divl
data16
loope
and
sarb
jmp
sub
adc
xor
mov
dec
fmull
jne
xor
sbb
xchg
ds
popf
insb
adc
icebp
adc
js
fdivl
popa
movsl
xchg
pop
sbb
lret
fwait
clc
xor
xchg
jbe
and
pcmpgtd
int3
mov
rolb
cmp
aas
xchg
mov
ds
dec
sub
or
mov
in
ret
into
mov
mov
in
cmp
mov
lcall
adc
sarl
ja
loop
pop
scas
test
mov
jge
push
jo
test
pop
test
nop
mov
mov
xchg
adc
mov
loop
add
ret
lock
xor
mov
jb
or
inc
xor
xor
add
or
imul
cmp
sbb
jmp
inc
insb
lock
inc
shr
daa
push
scas
andl
cmpsb
pop
mov
dec
mov
lret
mov
cwtl
mov
mov
mov
fistpll
aad
inc
fildll
ds
add
lods
adc
dec
pop
mov
dec
add
cli
mov
push
je
call
je
scas
inc
ja
push
xor
rcll
pop
aaa
and
sbb
pop
inc
test
push
iret
aaa
insb
out
ja
xor
lds
sbb
sbb
and
aas
and
mov
and
popf
jle
in
dec
movsb
xor
jne
cs
sub
xor
jne
jbe
cs
mov
fidivs
push
test
push
pushf
in
fiaddl
inc
and
push
or
adc
sub
cmp
jno
jo
cmp
mov
xchg
ret
xor
inc
mov
outsl
and
xor
dec
int
pushw
movl
adc
jae
jge
xor
and
rolb
in
inc
ljmp
xchg
insl
mov
xchg
fstpt
popf
mov
jb
outsb
insb
cmp
mov
inc
jmp
add
shrw
lret
aas
outsl
cmp
fcmovne
test
imul
scas
repz
enter
adc
mov
nop
nop
push
mov
pop
pop
push
inc
xor
das
pop
or
inc
lret
xchg
fldenv
dec
or
hlt
jle
hlt
and
and
mov
nop
std
mov
je
insl
loop
ss
pop
iret
outsl
cmpsl
sbb
cmpsl
push
and
or
dec
jae
mov
hlt
jb,pn
adc
jmp
pusha
mov
and
icebp
mov
or
and
hlt
icebp
ror
mov
sub
cltd
testb
movsb
in
ds
call
sarb
mov
leave
jl
repz
shll
xorl
shlb
cmp
rcrb
daa
ret
fyl2xp1
mov
out
pushl
jp
lods
mov
jg
popf
cs
scas
sahf
xchg
or
daa
pusha
jne
mov
push
jb
pop
addb
push
push
push
jecxz
in
lds
aad
add
je
mov
call
popa
mov
and
sbb
jnp
mov
mov
cmp
push
test
lahf
movsb
mov
lods
and
dec
jp
les
dec
add
dec
subl
mov
inc
and
push
movsb
mov
xchg
insb
xor
inc
addb
add
pop
jne
pop
pop
stos
popf
jmp
clc
and
mov
jle
cs
fimull
cmc
movsl
add
pop
xorl
xor
scas
inc
push
push
frstor
mov
push
jecxz
and
mov
roll
sbb
ror
mov
dec
xor
aam
xlat
addb
and
jbe
xchg
mov
in
mov
movsl
add
push
arpl
loope
aas
mov
ret
push
mov
ja
push
push
fcoms
pop
jae
outsb
cmp
outsb
aad
test
pop
mov
inc
cltd
mov
or
or
cmp
xlat
cmpsb
add
sub
ret
ljmp
sbb
and
jecxz
jo
push
jmp
leave
and
adc
fists
mov
push
nop
sub
icebp
inc
out
or
mov
add
out
sub
push
data16
out
push
xchg
movsb
xchg
cli
pop
xchg
or
sub
xor
xor
push
and
enter
mov
pop
pop
shlb
inc
pop
jecxz
push
popa
xor
fstps
in
fidivrl
sub
push
jb
test
sub
repnz
mov
adc
and
inc
pop
test
insb
lea
push
add
mov
jo
je
stos
frstor
dec
mov
xchg
sbb
out
dec
nop
das
adcl
pusha
fildl
mov
mov
inc
xchg
jnp
cvttps2pi
sbb
jle
pusha
mov
les
cs
orl
pop
cmp
mov
adc
int3
bound
jae
sbb
addl
and
adc
insb
mov
sub
xlat
test
add
div
xchg
lods
dec
lock
add
clc
xor
dec
test
mov
pop
fisubs
xor
add
sarl
mov
push
aaa
sbb
xchg
mov
pusha
or
in
das
popa
xlat
sbb
dec
std
push
test
pop
or
sbb
add
cmpsl
jmp
lock
fmull
shll
adc
xor
repnz
std
addr16
loope
jno
cmc
xor
pop
sbb
insl
scas
arpl
jno
lea
cmc
pushf
inc
sub
jge
push
or
mov
add
xchg
inc
test
rcll
movsb
pop
mov
daa
cmp
jnp
or
pushf
popa
in
testl
or
shlb
rcl
xlat
leave
out
fs
jae
ret
inc
jmp
sub
sbb
daa
mov
out
add
call
inc
inc
pop
popl
pop
cs
sbb
mov
inc
nop
sub
add
roll
mov
subb
fdivl
dec
jmp
imul
mov
jg
fwait
mov
enter
pop
out
mov
add
and
jmp
xchg
cli
and
out
mov
loope
std
dec
mov
lds
xchg
pop
cmp
test
dec
push
or
add
andb
iret
dec
xor
int
xor
and
pop
test
in
push
inc
fs
outsl
aas
out
xchg
pushf
test
and
in
pop
int
lret
add
xorb
call
dec
jns
lahf
inc
pop
mov
xor
inc
call
jmp
xchg
sub
addr16
xor
push
sbb
cld
loope
and
prefetchwt1
or
xchg
popa
mov
xchg
out
push
xchg
cmpsl
or
dec
push
pop
cwtl
loopne
movl
pop
dec
stos
in
xor
pop
std
cwtd
out
scas
sub
fnsave
cmp
js
pop
xor
mov
data16
xor
sbb
popf
js
sbb
fiaddl
push
pop
sar
sbb
mov
test
pop
in
dec
mov
test
mov
orb
sbb
mov
nop
pusha
popf
clc
fs
and
jg
xchg
sarb
gs
cmp
jmp
iret
ret
mov
mov
scas
stos
fldenv
jae
loopne
pushf
out
iret
xchg
dec
test
mov
pop
fdiv
mov
mov
cmp
imul
mov
pavgw
mov
jnp
xchg
imul
in
mov
or
out
pop
outsl
and
insb
fcoms
bound
and
mov
dec
cmp
xlat
pusha
push
arpl
imul
xor
cmp
movb
cli
sbb
sbb
lea
in
es
xchg
nop
jle
cmp
dec
cli
add
lock
xchg
aad
pop
testb
mov
xchg
push
out
movsb
push
mov
popa
xlat
push
inc
mov
adc
mov
loope
lret
lds
sahf
mov
mov
add
mov
mov
push
or
fnstcw
ljmp
aad
mov
addr16
cmp
shlb
add
in
jecxz
imul
loop
mov
rolb
fadd
xchg
dec
jno
pop
or
adc
daa
outsl
mov
idivb
inc
xchg
xor
pusha
xor
jecxz
leave
mov
arpl
pop
out
jns
aas
cmp
outsb
xor
imul
or
sub
push
leave
mov
dec
fmull
insl
cmp
dec
mov
add
cmp
popa
sub
mov
sub
mov
dec
pop
push
jg
pop
sub
inc
dec
push
cmp
ret
pop
mov
aam
jmp
arpl
call
lret
sti
arpl
in
addl
add
jl
les
mov
cld
inc
jle
outsb
loope
mov
mov
jno
in
stos
mov
jmp
fs
mov
mov
mov
adc
js
fists
cmp
xchg
fcompl
iret
cltd
pop
ret
pop
mov
aam
push
mov
mov
xlat
mov
sbb
add
testl
pop
mov
jmp
pop
mov
inc
stos
hlt
dec
scas
inc
stos
jmp
jbe
sti
mov
push
stos
ljmp
scas
lods
push
jmp
sub
sti
xchg
push
in
shrb
push
out
pop
gs
out
pop
insl
push
out
pop
jne
out
pop
jge
call
enter
push
fstl
stos
mov
call
testl
mov
pop
and
push
push
jge
stos
cltd
push
jae
scas
mov
jge
stos
in
xchg
pop
inc
push
imulb
mov
jae
scas
jno
imulb
mov
mov
push
stos
in
pop
push
stos
cli
mov
sub
pop
stos
sub
mov
cmc
lret
stos
shrb
pop
mov
and
push
xchg
sbb
inc
cmp
cld
dec
jecxz
fsubs
lret
std
into
cmpsb
adc
sub
inc
mov
pop
dec
fidivs
cmp
push
sahf
mov
lcall
repz
rep
dec
div
stos
cmp
imul
jl
leave
aad
ret
in
sar
cmpl
push
hlt
pop
jge
insl
dec
push
push
ljmp
sub
mov
push
mov
icebp
mov
mov
xchg
dec
xor
and
rol
lods
cli
mov
jle
pop
aas
push
out
inc
imulb
insl
push
sahf
stos
inc
mov
pop
inc
push
stos
test
push
rcrb
test
lcall
mov
aas
jbe
cmp
push
mov
gs
adc
repz
xchg
pop
pop
adc
jmp
stos
sub
fidivrl
scas
out
add
xchg
pop
cmp
mov
lea
jns
jns
stos
out
sub
iret
pop
inc
ficoms
pop
call
dec
scas
fs
inc
sti
int3
nop
mov
mov
inc
and
out
jo
jge
je
xchg
repnz
lahf
inc
jecxz
pinsrw
jne
sbb
jno
scas
stos
cmpsl
test
roll
sub
jne
jmp
hlt
pcmpgtd
iret
push
call
xor
repnz
pop
pop
je
lods
shlb
call
pop
cmp
mov
mov
jp
out
icebp
ds
scas
xchg
and
jne
jp
stc
inc
cmpsb
std
cmp
js
ret
xor
push
mov
cli
nop
sbb
out
imul
push
cs
loop
pop
lock
mov
sub
dec
dec
fcomip
push
aam
cmc
pop
push
out
mov
jle
sarb
scas
push
gs
cmp
bound
pop
stc
cwtl
mov
jge
push
insl
xor
sti
stc
mov
xchg
pop
rcrb
jge
out
outsb
jae
mov
popa
insl
pop
insl
push
xchg
mov
pmaddwd
lods
insb
add
jo
adc
insb
add
sub
mov
push
jne
pop
inc
push
jmp
jg
bnd
fdivrs
aas
or
mov
faddl
xchg
jns
inc
test
cs
jecxz
jg
push
scas
pushf
sahf
xchg
out
xchg
lret
loope
iret
pushf
sahf
arpl
xchg
add
inc
adc
push
fiadds
adc
in
xchg
cwtl
pop
pop
and
scas
dec
flds
stc
mov
mov
rol
pop
shrl
push
fbld
pop
fisttpl
mov
and
es
sti
orl
xchg
adc
xor
mov
add
mov
inc
inc
add
xchg
mov
mov
popf
into
iret
pop
insl
outsb
mov
sbb
mov
mov
xchg
pop
mov
nop
xor
push
out
jge
xor
outsb
in
fdivp
out
repz
sbb
xchg
ret
rolb
les
xor
xchg
and
jne
jg
sbb
pop
inc
leave
mov
fadds
xor
push
insb
push
push
add
cmp
arpl
repnz
mov
sti
stc
inc
fidivs
in
das
jnp
pop
inc
in
jns
and
icebp
daa
hlt
movsb
mov
sbb
add
fsubs
dec
xchg
add
push
mulps
dec
xchg
leave
pop
add
or
rolb
mov
cmp
push
pusha
add
inc
jg
sti
stc
pop
jb
aas
incl
or
adc
lret
or
les
stos
and
or
sbb
or
bnd
or
dec
loop
and
sbb
ret
int
loope
je
pop
jg
jnp
std
lods
adc
sahf
filds
fs
and
js
xor
fmull
test
adc
lock
fldcw
push
lcall
mov
leave
jo
mov
pop
das
popf
hlt
nop
xor
cwtl
xchg
insb
andb
mov
xor
or
movsl
cmpl
ss
xor
cmpsb
lahf
ret
test
dec
js
sub
push
push
and
xchg
cwtl
js
test
cmpsl
dec
inc
pop
or
jae
push
lret
lahf
lea
jmp
push
sub
sbb
je
hlt
mov
sub
mov
dec
dec
inc
lds
cltd
mov
or
push
adc
sahf
pushf
cmp
push
ret
xor
cmp
push
adc
cmpsb
lock
xchg
notb
divl
mov
lret
std
imulb
aas
cmpsb
imul
lahf
xlat
cltd
ljmp
push
and
rorl
jmp
cmp
ds
sti
fwait
lahf
pop
sub
movsl
popa
mov
lret
imul
pop
insl
inc
scas
arpl
adc
ss
cmp
mov
sarb
sti
arpl
push
insb
movsb
adc
rolb
mov
mov
insl
loope
popa
push
sti
dec
sbb
jne
leave
mov
lods
orb
or
or
push
das
mov
outsl
test
xchg
lcall
js
cmp
jno
mul
incb
pmaxsw
and
sub
xlat
out
sub
enter
shrl
adc
aam
enter
xchg
loop
decl
mov
arpl
sbb
inc
mov
xor
ja
jns
dec
ljmp
addb
inc
divb
popa
sahf
push
and
sbb
cld
lret
nop
rep
sbb
mov
in
jle
jge
bound
lcall
loop
jno
cld
insb
int3
mov
cmp
popl
pop
jnp
out
xchg
jg,pn
insl
incl
pop
das
clc
sahf
sub
decb
clc
sti
dec
push
and
out
xchg
mov
leave
push
mov
and
repz
ljmp
mov
push
repnz
push
cmp
std
dec
add
loop
loopne
xchg
sbb
push
lahf
out
jnp
mov
in
add
in
out
imul
xor
pop
aas
sbb
loope
mov
std
xlat
fimull
jl
and
lret
lret
fcos
adcb
add
cmp
ret
repz
push
jmp
stc
orb
xchg
mov
repnz
push
jg
mov
icebp
negl
repnz
mov
sti
lahf
cmp
subw
mov
push
sub
jnp
mov
stc
pop
lcall
add
mov
and
stc
jge
outsb
addr16
xchg
pushf
push
stc
lahf
mov
into
pop
and
dec
xor
adc
decl
mov
call
popf
stc
nop
nop
insb
jge
push
lret
cld
xor
push
std
aas
push
adc
incb
stos
push
mov
icebp
sub
and
movsb
dec
dec
stos
fcompl
jne
loopne
cmpsb
loop
mov
fldt
notb
iret
imul
mov
cmp
push
dec
in
cmp
adc
nop
xchg
out
js
ja
movsl
test
test
cwtl
xchg
ja
push
or
xchg
insl
rorb
mov
push
icebp
gs
jmp
in
lods
dec
lds
xchg
mov
in
sbb
cmpb
lcall
mov
sbb
sub
cmpsl
xchg
cmpsb
call
push
out
inc
and
les
repz
andb
xchg
mov
inc
and
cmp
inc
xchg
lret
sub
xchg
xchg
repz
mov
repnz
scas
or
cmpsb
jl
dec
loop
in
jnp,pt
add
adc
xchg
inc
negb
dec
push
mov
jnp
stc
ret
inc
or
xchg
mov
mov
jecxz
rclb
mov
xchg
cltd
sti
push
fs
cmp
lret
mov
outsb
popf
icebp
add
dec
loope
popa
cmpsb
cmp
aam
pop
stc
stos
ds
rolb
addr16
inc
je
push
lds
lods
xchg
ja
cli
mov
jns
dec
sti
mov
jp
lret
inc
aaa
lret
lcall
rorb
push
pusha
adc
cld
push
pusha
out
xchg
fs
and
and
test
push
jae
lret
mov
addb
push
and
rorb
jmp
pop
outsb
push
sahf
outsb
sahf
ljmp
arpl
ffreep
aaa
stos
mov
sbb
in
and
inc
std
stc
add
test
mov
aam
adc
push
in
sub
rcr
pop
shr
lods
and
push
mov
xor
lcall
scas
sbb
mov
aad
aas
push
test
lea
dec
jle
arpl
out
push
mov
addr16
jb
xor
xor
fcompl
mov
gs
sub
pop
scas
shlb
xlat
gs
xor
pop
jle
bound
stos
int3
push
xlat
mov
cld
test
mov
adc
mov
jo
push
sbb
sbb
xchg
sbb
into
dec
cmp
and
outsb
adc
mov
inc
ret
repnz
ljmp
loopne
push
cmp
xchg
ret
pop
in
mov
cmp
mov
dec
mov
adc
ret
sahf
xchg
stc
in
cmc
mov
mov
cmp
mov
roll
rcl
jmp
xor
shr
daa
mov
aaa
push
ljmp
mov
shl
xchg
ret
rcl
clc
aam
sub
ret
adc
loope
jns
mov
mov
js
ss
aad
loop
out
sub
jle
push
cmpsl
sahf
ret
clc
scas
out
inc
repz
aas
mov
inc
mov
mov
adc
jp
in
mov
push
mov
addl
pop
ds
xor
xor
repz
push
cmpsl
pop
pop
push
push
cmp
loop
test
lahf
push
dec
inc
fcomps
scas
push
cmpsb
popf
fnsave
aad
mov
push
mov
dec
test
lods
mov
push
sub
pop
stc
lcall
or
add
lods
pop
aad
cli
jne
pop
push
pushf
dec
xor
jle
lcall
mov
adc
xor
mov
loope
jmp
movsl
pop
scas
pop
mov
xchg
xchg
adc
fs
jge
cmp
sub
cld
mov
xchg
or
nop
outsb
cltd
fldt
xchg
mov
or
lock
jl
clc
call
mov
fmul
aam
rcl
xchg
and
scas
adc
test
mov
xchg
call
lock
mov
sub
jnp
cmp
sub
loop
aas
push
dec
in
movsb
xchg
fldl
add
jecxz
mov
jnp
imul
lods
pop
scas
lds
ja
sub
pushf
pop
sub
add
mov
mov
in
pmaxsw
popf
shll
into
dec
int3
cmp
sub
pushf
mov
jle
jl
xchg
in
into
mov
xchg
pop
bound
test
into
lret
dec
idivl
out
je
mov
mov
pop
xor
ficoml
shrl
and
jle
arpl
mov
mov
out
cmp
ja
xor
in
jmp
out
pop
into
fisubl
int3
mov
addr16
std
js
movsl
jae
aas
push
cmp
adc
out
je
pop
stc
push
mov
mov
fidivl
push
lcall
cli
adc
xlat
les
sti
js
mov
cli
test
aaa
cmp
lret
push
and
shl
stc
ret
call
rcl
pop
inc
jns
dec
add
int3
or
icebp
xchg
dec
xor
mov
fwait
rorl
mov
stos
imul
fnstcw
cvttps2pi
mov
push
lcallw
dec
mov
jnp
shrl
xor
sub
clc
add
mov
cmc
inc
lret
push
fwait
and
sub
aad
sub
aad
cmp
in
cwtl
pop
loop
int3
xor
fldenv
xchg
pop
push
cwtl
icebp
imul
inc
pop
rclb
mov
pop
mov
scas
in
fsub
jle
decb
adcl
fldcw
arpl
arpl
lea
inc
xchg
rorl
sbb
or
jne
dec
jb
pop
std
mov
sbb
cmpsb
dec
aaa
mov
or
rcll
addl
out
sbb
mov
dec
jecxz
dec
xchg
repz
xchg
or
xchg
in
aad
lock
aaa
enter
add
outsb
arpl
xorb
fwait
js
pop
loope
insb
sub
jae
lds
xor
flds
cld
rclb
add
pop
xor
ja
test
and
repz
mov
add
pusha
xchg
adc
dec
xor
push
rorl
push
pop
adc
daa
xchg
add
pop
cmp
jmp
scas
sbb
mov
xchg
in
jbe
add
iretw
ficoml
sbb
icebp
sub
dec
add
mov
imul
inc
adcl
mov
xchg
mov
lds
vorps
adc
mov
mov
push
cmp
mov
nop
or
subl
fisubs
pop
lds
repnz
test
jmp
push
int3
dec
lock
inc
jns
adc
lahf
rcrl
mov
push
jecxz
dec
js
negl
movsl
pop
es
sub
push
popf
icebp
sub
mov
fucomp
dec
mov
ret
fdivrl
dec
or
stc
cmp
repnz
xchg
cli
xchg
jl
lods
shll
clc
flds
push
sub
gs
int
inc
xor
stc
or
xchg
daa
enter
push
or
and
fs
or
lds
in
icebp
sahf
aaa
dec
cmp
rolb
sbb
push
mov
jp
cmpsl
mov
sub
pop
int
mov
sub
test
loop
sub
shr
or
jnp
cmp
xchg
push
sub
cmp
mov
das
dec
push
pop
pop
es
sub
adc
arpl
push
stc
mov
negb
mov
mov
nop
vsubps
idivb
stc
jnp
test
lea
adc
xchg
insl
out
scas
rclb
mul
outsl
mov
xchg
add
sbb
xchg
cmp
mov
arpl
lret
xor
mov
es
sbb
pop
pop
icebp
mov
sub
mov
loope
lret
sub
mov
pop
mov
mov
outsb
inc
mov
xor
lcall
mov
div
cmp
fcmovne
inc
sub
leave
movsb
push
lock
lods
lock
ret
sub
sbb
jl
xor
pop
popa
adc
lcall
mov
clc
nop
rolb
jnp
sbb
mov
iret
cmp
cmp
or
pop
pop
movsl
fidivl
in
mov
addr16
decl
pop
lahf
imull
push
jg
sub
mov
subl
adc
jecxz
ficoms
cltd
in
mov
fistpl
sbb
fld
jmp
imul
fisttpl
outsb
mov
xlat
jns
pop
lods
dec
add
ja
test
mov
add
mov
pushf
ss
out
push
mov
jle
std
push
outsl
mov
mov
sbb
cmovnp
stc
insb
bound
jp
add
fistpll
out
jl
cmp
lods
mov
adc
dec
sbb
sub
sbb
in
data16
xchg
insl
pop
push
stos
out
jp
lcall
push
dec
jg
add
cs
lahf
lahf
add
mov
pop
sbb
test
pop
push
fs
inc
test
pop
rcrl
mov
cltd
jg
inc
push
lret
movsl
and
cmp
xor
cmpsb
pop
test
je
leave
filds
jae
lods
stc
jmp
aas
xor
or
out
mov
jbe
aaa
push
cmpsb
push
jmp
mov
lods
ljmp
mov
adc
test
xor
das
lock
jecxz
dec
or
jl
push
jecxz
imul
and
ja
stos
or
loope
fld
pop
into
jl
push
push
imul
addr16
mov
lret
pop
mulb
mov
mov
test
rcr
iret
xor
lcall
jmp
cmp
stos
aas
pop
popa
mov
ds
in
mov
push
cli
aam
call
popf
sarl
iret
hlt
mov
xchg
push
cli
xchg
sbb
or
add
mov
bswap
cli
or
sub
sub
bound
push
sub
inc
imul
lods
das
cs
xchg
into
stc
dec
dec
scas
fbld
je
arpl
push
and
movsb
dec
cmc
xlat
idiv
dec
fs
fcoml
sbb
dec
sbb
or
icebp
repnz
xlat
dec
xchg
mov
pop
ds
dec
div
pop
and
lcall
xchg
rol
mov
mov
adc
xor
imul
lea
fldcw
mov
inc
xor
adc
jae
push
in
mov
loope
add
jbe
jns
sti
pop
outsb
insl
xchg
pushf
fs
into
into
into
lea
aad
xlat
jg
scas
test
jnp
jle
mov
rep
je
aad
or
xor
push
int
pop
outsl
movsl
cmpb
incl
imul
mov
divl
pop
and
scas
enter
mov
iret
fidivrs
or
test
or
jecxz
or
and
xchg
xchg
inc
mov
cmp
fxch
dec
xchg
shll
fistpl
xchg
aaa
loopne
xchg
sti
aas
cmp
cmc
xor
int3
inc
mov
mov
push
rolb
xchg
insb
mov
dec
divl
pusha
out
push
mov
cmp
adc
sub
or
push
lods
xchg
sbb
lea
daa
in
inc
icebp
push
shr
fistpll
es
fiaddl
pop
jg
or
ja
loopne
xor
sub
pop
test
add
or
jo
or
pop
cmpsb
subb
bound
es
fnstcw
inc
adc
cwtl
xchg
out
iret
pop
scas
push
cli
loope
jmp
fcmovnb
nop
shll
adc
cmp
jmp
mov
push
rep
iret
xlat
xor
out
push
out
ret
lcall
add
mov
insb
fsubrl
mov
insl
es
test
and
add
push
lret
das
les
les
pop
inc
mov
sub
push
into
mov
aad
xor
int
mov
je
daa
push
fildll
sbb
inc
dec
mov
or
pop
inc
js
pop
push
pop
pop
mov
bound
je
nop
out
jmp
inc
ret
mov
sbb
or
into
daa
push
das
gs
test
push
pop
stos
bound
arpl
adc
lock
cmp
xchg
sbb
lods
mov
retw
in
or
add
xlat
stos
pop
push
dec
sbb
add
roll
andl
lret
into
xor
das
or
test
call
movsl
xor
cmp
addl
xchg
mov
inc
insb
imul
and
lret
pop
test
inc
bound
stos
cmp
mov
fs
dec
mov
push
mov
adc
jb
lods
or
test
jne
xchg
fs
sub
inc
push
neg
rcrl
rclb
and
mov
mov
cmp
adc
xchg
aas
or
jg
mov
xlat
cltd
inc
clc
icebp
movsb
xor
jo,pn
push
ja
mov
lahf
adc
sbb
fcomps
in
jnp
adc
fcom
push
test
into
insl
insl
xchg
mov
fstl
mov
fidivrs
mov
add
push
repz
push
shrl
mov
fndisi(8087
in
pop
jne
fstl
or
dec
jmp
adc
cwtl
xchg
insl
xorb
xor
dec
fsubr
out
pusha
add
scas
iret
xor
push
faddp
fidivs
adc
mov
pop
push
imul
mov
pop
int
cmpsl
aaa
xchg
sub
xor
imul
in
sti
roll
lea
fsubrl
and
test
arpl
pushf
andl
stc
rcrl
int
cld
cld
mov
mov
mov
shlb
stos
pop
cwtl
pop
test
sub
loope
shlb
enter
pop
xchg
data16
fisttpl
xchg
je
lods
mov
push
stos
push
out
stos
mov
sbb
test
mov
pop
jnp
adc
shl
movsl
out
sbb
lret
or
mov
dec
mov
shll
shlb
fwait
movsl
mov
cmpsb
push
push
adc
mov
sub
xor
lahf
aas
mov
fisttpl
cmp
and
pop
cmp
sbb
addb
scas
push
sahf
movsb
aas
cmc
add
pop
cmc
xchg
ds
cmc
icebp
loopne
fwait
xchg
push
jge
xor
xchg
out
inc
cmp
iret
out
push
xchg
and
sahf
loope
sub
mov
ds
mov
xor
push
mov
int3
scas
rcll
xor
sarl
mov
and
xchg
notb
push
shll
test
out
mov
jo
sub
mov
in
lods
sub
push
sub
or
xor
fistpll
push
jp
std
fwait
jecxz
dec
mov
pop
sub
mov
pop
push
sub
fisubs
mov
jmp
outsb
aaa
out
push
add
mov
dec
iret
cmp
mov
mov
add
lret
in
xor
adc
push
and
xchg
push
andb
xor
scas
aas
sub
out
pop
popa
jb
lahf
add
and
loopne
mov
mov
filds
cltd
not
push
ds
mov
iret
sub
leave
push
jmp
test
lcall
jp
cvtpi2ps
mov
sarl
pop
outsl
sbb
das
xchg
test
xor
mov
dec
mov
lock
jnp
push
xchg
push
sub
les
jbe
jle
inc
xor
sbb
mov
and
cmc
mov
pop
lret
aad
inc
add
loopne
sar
fsts
mov
mov
ja
add
lods
sub
fistl
std
into
cltd
sarl
ret
mov
loop
mov
xchg
jb
ja
xor
cmp
fisubrs
testl
and
loope
fs
sub
std
inc
jno
imul
pop
jl
mov
adc
dec
dec
and
mov
mov
add
lea
cltd
adc
loop
in
cmp
data16
into
and
push
and
mov
sbb
and
fcmovb
clc
out
leave
sub
or
dec
mov
ret
fldenv
pop
add
loop
push
dec
cmpsb
mov
cld
mov
dec
aaa
mov
push
in
call
add
or
adc
test
stos
xchg
jne
adc
ret
in
mov
pusha
mov
cs
add
push
jmp
inc
lcall
jb
dec
out
cmp
mov
push
mov
fsubl
imul
repz
rol
and
mov
loopne
mov
in
xchg
mov
xchg
pop
lods
lds
jae
sub
add
and
jmp
pop
and
or
js
inc
adc
fs
arpl
fwait
add
xor
popl
dec
stos
sub
lock
cmp
pushf
outsl
mov
into
cmp
cmp
xchg
dec
and
rcr
push
ja
jg
repz
sub
fsubrs
adc
adc
jb
jmp
jl
cmp
cmp
xchg
sub
push
xchg
in
dec
xor
lods
subl
mov
enter
push
call
push
call
or
test
pop
push
loopne
call
cmp
gs
shl
pop
shl
add
cwtl
les
int
leave
mov
or
inc
stos
stos
xor
clc
das
mov
lret
and
out
xchg
jg
aad
or
cli
cmp
ja
adc
pop
adc
lods
imul
jae
jb
adc
ficomps
lods
mov
sbb
jns
pop
aam
aaa
mov
jle
cmp
mov
sub
mov
clc
ja
add
mov
fisttps
pushf
je
addr16
mov
stos
mov
and
xor
cmp
sbb
psubusw
and
dec
fidivrs
popa
jns
or
addl
std
repz
es
sti
clc
xchg
xchg
xor
dec
fwait
mov
push
mov
mov
push
fsubs
in
in
stc
sub
ficomps
iret
leave
leave
ret
xchg
loope
sbb
mov
ljmp
mov
fld
xchg
shll
dec
insl
dec
jnp
loopne
repz
test
cmp
adc
in
xchg
mov
pop
lea
adc
out
or
in
sub
cmp
data16
shll
jns
sub
dec
jecxz
shll
ret
je
lret
loope
scas
stc
xor
push
xor
hlt
decb
mov
mov
and
out
push
ret
hlt
xchg
or
cmp
push
inc
sbb
rcr
dec
xchg
xchg
jbe
test
or
incb
pop
jae
push
cmp
jl
jmp
mov
or
dec
popa
xchg
jne
jg
mov
push
sbb
sarb
pop
out
test
lret
shrl
popa
les
fisttpl
stc
into
stc
adc
xchg
fisttpl
jb
jl
loopne
jmp
xor
sti
ss
pop
mov
aaa
jo
aas
in
leave
push
jg
and
push
shl
xor
flds
arpl
add
in
fisubrs
notb
mov
insb
jp
loopne
arpl
mov
cmpsb
jecxz
shrl
pop
jns
push
cmpsl
pop
jnp
inc
inc
out
sbbl
dec
adc
pop
xor
inc
mov
stc
bound
inc
mov
outsl
ret
loope
dec
pop
mov
popf
fdivl
mov
subl
sub
pop
outsl
in
aaa
xchg
lods
jnp
cli
fsubs
call
push
hlt
lahf
hlt
test
dec
call
xchg
push
mov
xchg
xchg
repz
ret
addr16
or
ja
xchg
pop
and
leave
pop
orb
pop
cmp
jmp
ja,pt
inc
iret
adc
insl
leave
rep
mov
clc
gs
iret
pop
mov
adc
sbbl
jo
pop
std
jbe
cmp
movsl
and
enter
add
xchg
or
xor
push
jbe
out
test
pop
and
xchg
dec
or
rcrb
loope
gs
cld
and
stc
sbb
mov
lret
mov
mov
xor
dec
dec
lcall
ret
fsubs
or
pop
cmp
sub
pop
loope
inc
pusha
subb
mov
pop
inc
loop
aas
mov
scas
xchg
xchg
cmp
lcall
test
dec
mov
sahf
ret
push
xor
loopne
int
sbb
mov
cmc
ret
adc
mov
pop
daa
jbe
adc
or
cmpl
pop
cmp
hlt
cmovp
scas
shlb
out
js
xchg
mov
enter
pop
sbb
lds
gs
enter
fmuls
sub
or
repz
movsl
pop
fnstcw
or
in
popf
fcoms
testb
mov
data16
insb
push
pop
fcmovne
jmp
sahf
xchg
loop
sub
mov
xchg
mov
mov
mov
rcrb
pop
out
xchg
pushf
xor
sub
enter
jb
sbb
cmp
lea
mov
hlt
mov
inc
mov
rcrb
shr
mov
mov
maxps
fstpl
add
pop
fs
sub
mov
lahf
dec
fidivrl
sub
dec
push
test
ss
sarl
mov
sub
mov
std
sbb
push
loope
test
mov
xor
in
daa
punpckldq
xchg
adc
mov
loopne,pt
xor
xchg
cmpsl
sbb
lahf
cmc
xor
adc
push
dec
bswap
jns
adc
shlb
jb,pt
cmp
cs
sahf
or
hlt
xchg
mov
or
jo
test
negl
lret
andl
out
push
lcall
leave
push
and
sub
pop
or
lock
xor
orb
je
push
and
xor
fxam
test
inc
adc
sub
cli
sbb
stos
icebp
dec
ljmp
sbb
bound
fs
lret
addl
jg
and
push
jb
out
js
push
stos
xor
mov
cmpsl
sbb
cmpsb
mov
lods
push
inc
scas
fwait
rcl
fdiv
push
mov
mov
int3
cmp
push
cmp
shl
leave
jmp
dec
pop
mov
dec
mov
test
cmpsl
and
mov
xchg
lret
push
sti
bound
push
pop
dec
in
mov
in
sub
dec
pop
jecxz
inc
xor
mov
ret
mov
sub
ret
pushf
push
lahf
stc
andb
fstl
sub
pop
dec
scas
or
mov
rcll
dec
mov
and
int
mov
inc
push
pushf
jb
pop
int
sbb
test
andb
cltd
jne
inc
push
mov
sub
fadds
or
nop
rcl
fstl
je
push
pop
adc
jns
cwtl
pop
xor
stc
popf
ss
pushf
repz
nop
dec
and
jbe
dec
fs
adc
fsub
or
daa
daa
mov
addr16
dec
sub
or
cwtl
pushf
adc
fstpt
sbb
arpl
push
insl
pop
sahf
sub
nop
js
cli
bound
scas
std
adc
inc
add
iret
test
xor
bswap
dec
les
out
inc
push
jmp
xchg
orb
lahf
adc
cmp
setae
xchg
fstpt
mov
ret
jno
or
fistpll
mov
sbb
bound
or
je
add
popa
push
dec
xor
and
jl
lret
loop
in
int
pop
int
mov
mov
cmp
in
daa
imul
mov
stos
sub
cmp
dec
jae
xor
mov
dec
popf
mov
dec
fcoml
pop
add
jecxz
cmc
repnz
inc
pop
push
or
inc
mov
shlb
std
movsl
adc
jbe
icebp
fsubs
imul
mov
xor
xor
lcall
mov
sub
fsub
dec
xor
sbb
loop
loopne
rclb
popa
sbbb
test
mov
cmp
add
xor
mov
mov
mov
cmp
notl
xchg
ss
cmp
adc
data16
sub
cmpb
pop
testl
jecxz
dec
jecxz
adc
cmp
add
aaa
stos
fstpt
pop
idivb
popl
sti
mov
mov
pusha
and
scas
push
pop
sub
xchg
daa
imul
scas
fstpl
push
movl
or
mov
pop
cmp
out
sub
mov
or
mov
negb
ja
mov
pop
fs
mov
test
mov
lea
xlat
ja
lahf
insb
mov
cltd
push
add
popl
pop
push
aam
dec
pop
cmp
sahf
jnp
mov
adc
dec
cmp
fistpll
aad
and
mov
fistpl
jne
adc
mov
jb
mov
push
sti
jge
cmpsb
inc
pop
cmp
xchg
lock
inc
push
sbb
inc
mov
imul
cvtpi2ps
lcall
dec
and
or
std
ja
and
cwtl
push
popf
xor
mov
test
test
aaa
push
outsb
dec
test
mov
sbb
mov
cwtl
mov
mov
std
and
lahf
mov
or
or
push
rcll
nop
and
scas
rorb
mov
mov
push
xchg
inc
sbb
lods
mov
imul
push
arpl
cmp
mov
sbbl
sbb
out
clc
mov
sbbl
sbbl
push
add
push
xchg
add
std
lret
mov
test
xchg
mov
bound
mov
xor
cmpsl
test
std
sub
jbe
and
lret
loope
mov
inc
sahf
pop
out
stos
mov
xchg
dec
sar
pop
repz
pop
aam
pop
sar
clc
insl
xchg
mov
cld
jb
insl
mov
fwait
dec
inc
push
cmpsl
aas
cmpsl
aam
inc
scas
repnz
clc
jle
mov
call
jo
in
int
add
mov
xchg
subb
mov
dec
pop
or
sbb
xchg
fidivl
cmc
in
xor
inc
ficompl
lea
xor
ds
cli
cmp
pop
inc
ja
loop
inc
lock
sbb
fs
aad
adc
xchg
mov
ret
fiaddl
popf
imul
jne
and
xchg
fistl
outsb
push
gs
mov
xchg
nop
imul
lret
stos
push
inc
mov
cmp
cmp
jle
mov
aaa
fwait
outsb
jb
std
dec
jbe
cmc
pushf
cli
lods
xchg
jb
and
mov
cltd
or
test
mov
sbb
and
ljmp
inc
es
mov
xor
cs
stos
addb
push
scas
mov
jnp
shrb
ja
fistps
fistps
fisttpll
add
dec
xchg
fdivs
pop
sub
data16
mov
les
pushf
ja
fs
scas
int
clc
or
imul
mov
and
mov
add
or
fisttpl
daa
cmpsb
gs
jns
dec
stos
out
push
rcr
sbb
ret
sub
inc
adc
ds
add
ret
jbe
xchg
je
mov
in
and
pop
add
fwait
cld
jg
add
xchg
or
lds
cmpsl
xor
movsl
jnp
leave
sti
cmp
jg
and
gs
inc
sub
pop
sub
ds
scas
add
adc
stc
fidivrl
push
lret
cmp
xchg
pushl
dec
sbb
push
loope
iret
push
shrb
stos
test
sub
mov
mov
mov
fisttps
xchg
push
outsb
loope
ss
or
push
jo
movsl
andl
xor
mov
jmp
int
cmpb
sbb
cmp
into
push
data16
rclb
lods
inc
sarb
dec
or
or
mov
pop
test
push
gs
inc
into
dec
cltd
stc
dec
lods
inc
call
sbb
or
xor
xor
jle
sub
pusha
into
add
in
add
jecxz
jmp
jae
push
mov
jo
loop
aam
jne
out
push
in
out
mov
adc
mov
mov
xchg
push
das
cmp
jno
dec
adc
shrl
repnz
test
pop
les
push
jle
mov
cmpb
push
inc
aaa
movsl
les
mov
xor
pushw
fiaddl
lds
mov
test
insb
xor
xchg
push
or
bound
fiadds
ficoms
and
gs
jg
test
in
mov
test
out
rol
dec
dec
push
xor
xorb
add
repnz
mov
movsl
lea
call
mov
sbb
pop
xchg
jns
inc
inc
fstpt
cmp
data16
mov
add
xor
fstpl
dec
cmp
loope
xchg
je
adc
clc
mov
add
sbb
jecxz
in
in
pop
test
repnz
shrl
imul
ret
or
std
cmp
loope
out
iret
loopne
mov
and
xchg
cltd
inc
test
addr16
adc
aaa
dec
inc
daa
adc
push
xchg
cmp
je
push
cmp
je
addr16
cld
add
nop
or
mov
mov
push
mov
jbe
int3
lds
lret
les
or
iret
xor
dec
sub
sarl
ret
xor
rcrb
int3
jbe
dec
cmp
shrl
subb
out
das
adc
pop
push
daa
lcall
aad
imul
mov
mov
call
xor
lock
popf
cmpb
sarl
fcoml
mov
fwait
xor
das
mov
idivb
push
sbb
push
jge
mov
adc
repnz
loop
mov
jne
mov
faddl
test
nop
dec
and
xchg
ja
cmp
loope
pop
loop
mov
mov
test
out
or
mov
dec
je
fwait
test
pop
dec
das
add
cmp
push
mov
sahf
jg
adc
xor
mov
fnstcw
sbb
push
dec
and
roll
add
adc
sbb
pop
std
or
mov
sub
andb
data16
cmp
cmpsl
inc
cmp
xchg
cmpsb
push
pushf
fwait
jbe
inc
fs
xor
pop
xchg
int
xor
or
and
xchg
xchg
jle
push
int
scas
xor
js
jmp
xchg
movsb
hlt
jle
xor
rcr
andb
insl
xor
xor
dec
ret
sbb
outsl
frstor
ficoms
outsl
mov
jecxz
sub
out
sub
testb
cmp
push
xchg
sub
lahf
fildl
jbe
insl
mov
sti
push
and
imul
adc
ret
sub
mov
enter
loope
jp
daa
rcrl
icebp
out
pop
mov
pop
jbe
cli
push
in
push
jecxz
xor
lea
jl,pt
dec
add
sbb
lock
insl
push
jmp
pop
sub
pop
fiadds
cmpsb
sub
inc
rcl
std
shll
mov
push
and
adc
mov
push
nop
xchg
xchg
pop
push
inc
add
bound
or
hlt
enter
shlb
jno
int
jp
popf
sub
add
dec
sub
sbb
mov
mov
jnp
iret
in
jmp
mov
cs
mov
pop
mov
pop
sbb
lods
sti
inc
ficompl
clc
jg
xorl
and
cmp
in
sbb
sub
push
xchg
push
lret
lret
lret
sub
and
repz
ffreep
rcll
sub
dec
pop
push
enter
movsb
mov
add
mov
push
out
jo
inc
jle
out
rorb
pop
inc
into
les
lds
cmp
cmp
pop
in
cmp
pop
and
dec
mov
xchg
mov
aad
or
pop
sub
inc
insb
and
sbb
push
adc
fsubrs
clc
jno
test
push
xor
movzwl
in
dec
fs
xchg
cli
dec
jg
mov
and
mov
push
pop
mov
sbb
sub
jbe
adc
aam
lret
mov
test
fdiv
daa
mov
xor
jl
jnp
shrl
fsubs
pop
adc
pushf
or
mov
aam
pop
jnp
sbb
lods
xor
inc
jle
std
out
adc
nop
fbstp
test
jle
xchg
iret
pop
jle
sub
pop
jae
lahf
add
dec
incb
sbb
fwait
xchg
fisttps
sbb
cli
imul
sub
lock
and
aaa
and
stc
jge
mov
cmp
jl
adc
das
xchg
inc
in
fstpl
scas
cmp
jno
cltd
jb
adc
testb
fdivrl
gs
add
jno
add
sbb
inc
adc
in
or
sub
movsb
jmp
pop
fs
mov
inc
loopne
push
inc
subl
sub
push
fcoms
repz
lods
inc
push
hlt
leave
lods
sub
adc
addr16
popf
jecxz
daa
lret
add
dec
aas
xchg
or
aas
mov
enter
fldlg2
push
mov
addl
xor
dec
sbb
mov
fimuls
jno
movsl
scas
cmp
dec
pop
or
cmp
xor
jle
int
sti
mov
out
enter
pop
loope
jae
les
cli
add
jne
out
jp
or
jl
mov
imul
add
xchg
nop
or
pop
add
aaa
lods
jle
push
and
test
clc
sub
mov
sahf
or
shlb
sti
mov
cwtl
fucomi
rolb
fildl
std
rcll
je
cmp
dec
push
fiaddl
shrb
jbe
or
subb
inc
test
mov
repz
lea
jno
mov
out
lods
in
push
cmp
clc
push
scas
inc
push
repz
push
addr16
ret
fsubr
roll
test
fwait
jge
and
xor
fdivr
and
push
jne
xlat
ljmp
ficompl
cmp
inc
and
adc
mov
lds
xor
mov
xchg
lds
sahf
lock
pusha
fnsave
cmpsl
arpl
fs
add
and
mov
jg
add
fwait
jmp
popf
out
sbb
imul
les
inc
cmp
mov
fiaddl
idivl
cmp
rclb
iret
mov
insl
sar
ret
jl
mov
fistps
sub
cmpsl
loop
int
sbb
dec
gs
mov
pushf
jae
das
push
mov
add
jbe
xor
cmpl
out
push
push
pop
push
ja
fcoms
cmp
adc
xchg
sub
push
fsubr
ret
ja
daa
out
mov
fdivs
addr16
shl
daa
test
jne
push
mov
jmp
fdivr
or
lret
xor
sbb
pop
jno
mov
pop
cmp
loop
and
mov
push
fidivs
or
jo
mov
push
outsl
jb
sub
bound
mov
loopne
push
stos
and
mov
adc
aam
push
push
jno
and
jno
mov
mov
and
pop
cwtl
sbb
pop
lret
push
cs
sub
cmc
les
arpl
add
push
scas
divb
cli
xchg
jge
insb
inc
sub
mov
xor
jae
lods
push
xchg
mov
inc
push
test
xchg
push
adc
or
mov
repz
int
icebp
testb
cmp
outsb
fldenv
lods
xchg
sub
sahf
cmpsl
into
inc
push
or
jns
add
pop
sbb
clc
xchg
int
clc
jmp
repnz
jp
xlat
fucomi
push
inc
pop
out
fcoml
cmp
xchg
incb
cld
ficomps
cmp
call
xchg
dec
aaa
cli
pushf
inc
mov
imul
xchg
test
loopne
pop
xchg
js
cwtl
mov
cmpsb
adc
fcomps
or
jmp
fisubl
movsl
adc
push
push
testb
mov
neg
add
pop
mov
hlt
jge
arpl
xor
testl
xor
out
dec
pop
push
mov
adc
out
inc
je
pop
dec
pop
int3
push
xor
stc
subl
lret
cmpsl
rclb
les
repz
xor
xchg
push
shll
cmp
psubq
jecxz
out
aam
xchg
stc
aas
jmp
jg
inc
sti
mov
pop
mov
sub
add
inc
fldcw
in
xchg
dec
mov
mov
sahf
cmpsb
icebp
cmpsl
test
call
push
mov
mov
aam
push
push
jmp
xchg
scas
fistl
lods
jp
jmp
daa
fmull
cmp
cli
push
pop
and
scas
push
add
aaa
cwtl
mull
adc
mov
mov
inc
fistpl
cs
lahf
jg
mov
jle
xlat
pop
repz
inc
xchg
mov
stc
xchg
shlb
xchg
icebp
imul
mov
or
test
cmpsl
cmpsl
lret
sub
enter
mov
mov
out
dec
push
test
xor
repnz
sahf
cmp
out
nop
mov
xchg
jmp
lds
lods
add
jg
scas
dec
sbb
push
lods
push
ljmp
or
dec
xor
mov
ret
jbe
ljmp
repz
xor
lea
or
and
fdivrp
std
jl
mov
mov
jo
movsl
test
ficoms
mov
jae
add
jno
push
push
sub
and
sub
xor
movsl
mov
ss
aas
cmp
dec
dec
push
push
push
mov
aam
mov
xor
cs
pop
xor
dec
push
xchg
mov
mov
fcmovne
ja
fidivrs
fsub
sahf
jae
push
test
and
fistl
in
inc
mov
sbb
outsb
xor
mov
stc
or
mov
lcall
into
lahf
mov
out
mov
paddsb
xchg
push
in
sub
cmp
or
adc
adc
add
jp
imul
cli
pop
xchg
cwtl
mov
mov
iret
xor
mov
and
inc
inc
pushf
sub
insl
test
test
or
imul
shlb
data16
lret
xchg
in
addr16
and
rol
sub
push
mov
into
inc
sbb
aaa
mov
push
cmpsb
loopne
rcrl
or
sub
pop
sbb
out
mov
into
mov
jmp
lods
aas
out
sbb
decb
sbb
sbb
test
scas
int
and
jmp
push
movsl
cmpsb
jmp
push
add
dec
lods
sbb
hlt
fisubrs
push
andl
mov
adc
cli
mov
and
mov
jne
push
mov
test
dec
ret
je
shld
in
mov
sarl
scas
push
arpl
hlt
cmpsb
adc
lds
mov
dec
xchg
repz
inc
jge
sbb
xchg
push
jge
movsb
fiaddl
dec
cmp
cmc
mov
and
outsb
call
xchg
jge
mov
mov
sbb
jge
cmp
lahf
jp
xchg
out
movsl
ds
imul
popa
test
jae
mov
lret
fmul
dec
xor
adc
das
pop
scas
je
cmp
test
mov
add
pop
scas
pop
xchg
mov
xchg
std
ret
jmp
adc
xor
insb
loopne
lea
and
inc
mov
xor
pushf
adc
inc
push
lods
inc
dec
mov
cmp
cmp
aad
sub
pop
aam
or
loop
add
jae
dec
adc
lock
inc
outsl
hlt
cmpl
shlb
and
cmp
adc
inc
loop
cld
sahf
ja
adc
xor
jnp
mov
repz
xchg
into
mov
insb
jo
lret
sarb
jp
sub
fistpl
xchg
outsl
imul
cmp
mov
jmp
add
dec
icebp
mov
add
psubusw
mov
xchg
xor
insl
inc
arpl
and
call
cmp
aam
dec
mov
add
in
xchg
push
mov
push
loopne
ja
loopne
int
lods
notl
xchg
enter
lret
inc
cmpsl
and
push
add
push
repnz
stc
dec
sub
leave
add
dec
jnp
pop
idivb
lret
daa
pop
imul
dec
loope
mov
mov
rcrb
cmpl
fwait
push
lret
cmp
cmp
cmp
mov
push
inc
orb
mov
xor
dec
in
or
jnp
mov
mov
in
xchg
push
mov
loopne
rcl
loopne
cs
mov
enter
test
and
jp
test
imul
sub
inc
xchg
outsb
push
mov
inc
jmp
fnstcw
mov
sub
adc
lret
aam
or
push
rep
arpl
stos
aaa
aas
loopne
jmp
inc
out
pop
mov
dec
xor
daa
orb
in
into
imul
je
sahf
rorl
jmp
pop
fsubs
xchg
nop
dec
lea
jg
stos
aad
stos
stc
repnz
cmpb
xor
js
jmp
ret
cmpsl
mov
pop
sbb
rcll
mov
dec
sbb
not
pop
ja
cs
cmc
and
out
push
mov
push
adc
imul
test
sub
fimuls
jb
aaa
xchg
cld
cmp
sub
and
ljmp
in
pop
fcomps
xor
lods
xchg
popf
mov
mov
mov
andl
cld
push
inc
lea
and
cmp
sarl
pop
mov
jb
rolb
mov
out
mov
ret
popf
ficomps
call
adc
dec
ficomps
cwtl
enter
mov
add
mov
xchg
lret
mov
nop
lcall
add
sbb
cmpsl
cltd
scas
add
add
repz
inc
shr
mov
int3
sahf
cwtl
mov
xchg
add
sbb
iret
pop
icebp
cmp
es
mov
and
dec
and
push
rcr
add
or
sbb
pop
jne
rcll
inc
pop
and
xchg
aas
out
lock
adc
test
jo
mov
xor
mov
call
mov
add
adc
ja
sub
aaa
mov
mov
mov
jge
adc
adc
out
dec
mov
push
bound
arpl
mov
cwtl
add
sbb
sbb
mov
mov
jno
pop
jns
push
xchg
and
jmp
push
add
imul
jmp
lea
push
and
aam
dec
add
or
scas
lahf
mov
popa
outsb
ret
adcl
fwait
les
sub
lods
fwait
or
sub
push
xchg
mov
sub
pop
leave
movsb
xchg
pop
cmp
ss
dec
xchg
leave
cli
iret
fs
cmpsl
in
push
test
push
dec
stc
lret
pop
sbb
fs
in
dec
push
fs
pop
jle
in
je
and
adc
fst
sbb
rcl
dec
adc
sbb
dec
sub
jge
lock
jmp
jecxz
ja
sbb
hlt
xor
and
jg
shrl
subl
test
and
in
mov
mov
and
int
mov
ret
mov
and
jo
pop
mov
push
inc
xchg
aam
jne
imul
cmc
jge
mov
lret
push
adc
xchg
jg
pop
mov
xchg
es
pushf
sbb
int3
and
test
movsl
xor
into
cmp
jl
jae
jmp
popa
jecxz
mov
out
data16
cmp
fldcw
fxch
jg
scas
or
dec
ljmp
or
pop
mov
jne
push
imul
xchg
inc
cwtl
les
jp
or
jns
cmc
rcll
popf
enter
shl
dec
jns
outsl
fsubs
mov
xchg
pop
jmp
mov
ret
xchg
inc
push
testl
sbb
jns
mov
adc
mov
test
jecxz
and
jl
mov
frstor
sbb
ss
cs
idivl
push
pusha
or
lods
iret
fwait
loope
test
dec
mov
add
lret
movsb
xchg
and
pusha
inc
ds
stos
cli
insl
xchg
lods
rcrb
mov
pop
add
aaa
mull
inc
and
pusha
outsb
xchg
jmp
sbb
rcrl
fisubs
std
mov
js
jb
push
mul
mov
jle
mov
fmuls
xchg
nop
or
adc
push
insl
mov
inc
push
add
xchg
push
lahf
int3
or
test
push
pop
xor
inc
push
and
popf
adc
dec
repz
inc
jge
sub
sbb
psrld
mov
sub
repz
push
jnp
roll
mov
inc
rcrl
cwtl
dec
rcrl
push
push
leave
or
add
out
adc
or
add
push
jp
imul
lods
cmp
adc
cmp
fistps
jo
cmpsl
xchg
int3
xlat
ss
cmp
stos
fwait
test
call
lcall
lcall
es
stc
dec
test
pop
xchg
in
xchg
ss
shll
fs
outsl
popf
mov
push
sbb
ret
lds
pop
pop
xor
in
jg
fildll
lock
scas
pop
call
mov
xor
mov
ja
push
loopne
stos
and
push
lods
mov
pusha
cwtl
test
add
int
xor
sub
mov
or
aad
dec
xlat
cwtl
or
pop
sbbb
push
dec
dec
rorl
cmpsl
sbb
ret
fs
cmp
inc
lret
cs
mov
pop
lods
push
adc
mov
jmp
and
lea
loope
sub
xchg
lods
jmp
and
push
rcr
andl
fs
daa
lods
xlat
mov
rclb
push
mov
or
push
xor
test
jecxz
sbb
inc
loope
jle
insl
pop
jg
insl
push
mov
mov
jno
and
ror
lahf
mov
in
test
jbe
mov
add
jge
cld
in
jle
insl
rcl
lods
inc
out
enter
aaa
call
mov
fsub
subl
push
ljmp
les
daa
mov
sbb
and
call
xchg
scas
scas
fnstenv
sub
cmp
js
or
xor
sbb
mov
sti
mov
pop
and
ror
mov
jb
ret
cmp
mov
dec
xchg
mov
leave
or
cmpb
lds
mov
cwtl
sbb
testl
cmp
nop
cmp
adc
adc
pop
ret
sub
cmp
mov
jp
xor
arpl
in
xor
pop
aad
and
inc
add
dec
jo
jbe
cmp
hlt
icebp
push
jle
cli
dec
jmp
adcl
cmp
pop
dec
bnd
inc
les
not
stos
mov
pushf
or
pop
inc
or
cwtl
adc
lret
ret
aam
cmp
or
xor
mov
jno
sbb
mov
xor
lcall
in
add
nop
adc
pop
cltd
scas
mov
scas
movsb
jmp
xor
arpl
outsb
dec
inc
stc
insl
add
out
jnp
lds
movsl
scas
inc
add
fs
cmpsl
data16
push
imull
loop
cmc
jp
stc
cmp
sub
clc
dec
cmp
sbb
mov
ret
pop
cmp
scas
mov
pop
das
pop
mov
ds
filds
pop
and
pop
loope
dec
sbb
rolb
push
call
lcall
push
lcall
lds
andb
xor
mov
xor
xor
fwait
sub
fmul
cmc
adc
push
popa
out
sub
int
inc
mov
mov
mov
sub
mov
mov
pop
stos
add
push
mov
push
fwait
ret
and
push
sub
shlb
ljmp
xchg
fdivrs
outsb
clc
dec
add
cli
jl
out
sti
call
fwait
mov
addr16
pop
hlt
adc
out
jecxz
stos
shl
jecxz
daa
dec
or
jge
adc
subl
lret
push
mov
mov
inc
mov
mov
inc
popa
sbb
or
shll
push
lahf
adc
mov
icebp
and
xchg
sbbl
xchg
je
add
dec
out
inc
or
shll
mov
jmp
mov
push
movsl
xchg
test
dec
mov
test
loop
jle
arpl
mov
pop
ret
push
sbbb
ljmp
push
fstl
sqrtps
lret
hlt
pop
or
ds
adc
xlat
in
dec
shlb
mov
cmpsl
repnz
adc
mov
cmp
leave
icebp
clc
jb
jp
xor
lahf
push
mov
clc
xchg
insl
fcmovnbe
or
mov
hlt
imul
pop
mov
mov
xchg
icebp
movsl
dec
add
mov
xchg
out
ss
xor
loope
lods
jbe
loop
xor
push
mov
and
dec
fldcw
mov
jnp
fwait
xor
mov
repz
in
adc
xchg
inc
movsl
xor
cwtl
adc
hlt
mov
push
pop
scas
call
loop
into
sbb
and
or
cmpsb
and
call
fists
das
and
xchg
sub
cmpsb
push
test
into
insb
push
jp
mov
ret
ds
mov
mov
and
sub
inc
into
xchg
or
cld
mov
dec
fisttpll
nop
loope
adc
clc
mov
add
in
xchg
xchg
inc
lea
dec
leave
mov
xchg
jg
xchg
shl
test
dec
push
dec
inc
ret
sub
jg
cmp
jae
push
insl
and
jg
cmp
xor
iret
es
dec
sub
push
fnstsw
lahf
mov
xchg
push
xor
mov
imul
mov
adc
fucom
popa
out
cmp
mov
movsl
inc
mov
loop
xor
orl
shlb
sahf
in
lock
add
mov
add
mov
mov
repz
or
jg
cmp
mov
mov
fiaddl
sub
cmpsb
je
sub
lock
jmp
mov
push
dec
push
push
sbb
pop
aam
push
push
sbb
popa
outsl
xchg
add
cmp
pushf
js
and
shrb
lock
leave
divb
mov
or
push
addr16
sub
ds
sub
mov
jg
cmpsl
inc
stos
add
push
je
sub
xor
or
jno
leave
jp
fsubl
dec
jmp
cmp
fwait
jnp
outsl
adc
xchg
pop
jg
jo
mov
jno
insb
cmp
jo
and
push
test
xor
pop
test
and
outsl
popf
mov
push
lods
fstps
outsl
ja
loopne
pop
xchg
pop
lcall
xor
xchg
jno
xor
in
insb
jb
push
shl
stc
call
shrb
and
pop
add
adc
and
mov
jnp
dec
push
inc
loop
push
cmp
sub
dec
fnsave
push
int
cmp
xchg
mov
xor
insb
adc
add
mov
pop
das
aad
adcl
sub
xchg
enter
inc
mov
mov
out
mov
xor
cmp
jnp
std
mov
in
xchg
pop
cld
sub
adc
jne
sbb
adcb
inc
sarl
ds
mov
addr16
cld
fld
mov
jecxz
mov
jo
daa
fdiv
leave
lods
cmp
aas
lock
sub
push
dec
ss
mov
iret
cmpsl
fadds
int
jns
hlt
push
fstps
das
scas
sub
cwtl
mov
pop
add
loope
movsl
sbb
fadds
mov
mov
scas
sbbl
lods
jae
scas
add
push
and
sub
push
clc
out
sarl
mov
fstpt
add
mov
sbb
mov
imulb
and
popa
in
xor
call
and
std
dec
pop
daa
push
push
fidivl
dec
daa
bound
push
repz
add
jl
push
je
pop
cmp
daa
mov
cmp
popf
or
into
xor
shlb
add
lods
cld
cwtl
popa
movsb
mov
adc
push
inc
clc
sbbl
outsb
jp
pop
adc
insl
rclb
xchg
shl
add
push
pop
ficoml
pushf
movsb
and
mov
mov
pop
adcb
and
pop
mov
inc
inc
xorb
xor
xchg
or
pop
pop
xor
into
cmp
sbb
pop
cmp
mov
sbb
mov
and
leave
lret
shll
lea
inc
push
push
xchg
dec
outsb
cmc
sub
mov
icebp
rcrl
push
outsb
xchg
pop
dec
mov
int
xchg
icebp
inc
add
scas
das
inc
out
push
cmp
jnp
push
or
cmc
inc
and
enter
out
sbb
imulb
aaa
fstp
mov
sbb
push
sub
addb
imul
cmc
scas
mov
in
in
jns
mov
out
nop
and
test
fnstcw
aam
shll
cmp
dec
cmp
pop
mov
cltd
jns
rclb
les
popa
mov
sahf
jecxz
test
cltd
out
inc
cmp
sub
xchg
mov
mov
pop
nop
aam
jae
add
push
shlb
imul
push
jmp
lods
xor
jmp
pop
adc
loope
and
mov
shl
popf
mov
cmp
cld
stc
inc
lods
push
adc
mov
outsb
scas
mov
adc
scas
jno
cs
jg
sahf
cmp
or
cld
test
mov
rcr
mov
mov
clc
xorl
dec
mov
loopne
addr16
orb
pop
fs
jmp
lods
inc
aam
ficoms
sub
movsl
mov
outsl
out
inc
loope
dec
mov
mov
stos
add
lods
add
rclb
mov
adc
pop
das
int3
outsl
imulb
mov
call
or
xchg
xchg
shlb
rcll
pop
aam
repz
sbb
mov
dec
call
mov
insl
lret
ja
pop
add
xchg
movsl
dec
je
jnp
out
pushf
adc
leave
imul
xchg
test
cmp
loop
mov
jge
movsb
andb
pop
outsb
push
testl
jbe
mov
push
and
lods
out
mov
or
add
inc
scas
and
dec
mov
cs
jno
addr16
mov
add
aam
inc
xchg
xlat
add
mov
mov
mov
imul
jp
cmpsb
comiss
icebp
inc
push
cmpsb
stos
lods
mov
mov
pop
add
lahf
hlt
in
pop
insl
dec
lcall
pop
jg
jge
pop
inc
vfnmadd231sd
jnp
mov
notb
lahf
fstl
and
ja
mov
std
out
pusha
bound
je
mov
test
imul
insl
stos
adc
mov
aad
sbbb
cwtl
xchg
cmp
pop
and
push
xchg
cmp
test
mov
and
push
push
aam
div
xlat
cmp
mov
scas
add
mov
push
jp
stos
mov
aad
jo
sub
popa
cli
das
cmpsl
cld
sbb
testb
out
jg
popa
jnp
adc
jae
daa
add
popa
mov
jbe
add
xor
stos
dec
lahf
mov
insb
and
add
mov
fistl
stc
aam
mov
or
mov
pop
bound
sysexit
es
cmpl
inc
sti
pushf
cmp
xchg
inc
repz
mov
cmp
iret
loope
xor
inc
mov
lods
xor
xlat
sahf
cmp
mov
scas
mov
dec
xchg
sbb
popf
int3
and
rcrl
jno
mov
jg
cmp
stc
inc
scas
fsub
or
loopne
cmp
fbld
adc
push
adc
sub
sub
mov
mov
dec
mov
repz
hlt
jae
daa
popf
inc
cmp
out
push
fidivrs
test
mov
lods
movsl
adc
outsb
lods
scas
jp
movsl
je
xchg
add
xor
movsb
xchg
and
inc
cwtl
movsl
int3
sbb
sbb
add
int
je
in
xlat
adc
stc
jg
mov
leave
filds
cmpl
in
xchg
enter
xor
insl
sbb
lcall
jo
cmp
hlt
hlt
xchg
sub
cmp
subb
sbb
xchg
sbb
in
cs
int
mov
outsb
outsb
lds
xor
mov
sbb
pop
fnstenv
leave
or
sbb
sbb
adc
jecxz,pn
iret
shlb
and
push
jecxz
sub
xchg
loop
clts
das
cmp
insb
sahf
inc
xchg
pop
pop
mov
jae
or
nop
xor
push
dec
mov
popf
adc
inc
fdivs
push
xor
pushf
daa
adc
push
cmp
xor
ret
repnz
aaa
roll
cmp
ret
xchg
xchg
sub
movsl
jp
popf
jae
lods
cld
xor
lods
xchg
xchg
jp
shlb
scas
adc
sahf
icebp
popa
enter
mov
into
insl
mov
ds
adc
dec
call
popl
lds
jb
xchg
mov
dec
or
iret
push
sbb
cmp
into
jns
js
or
mov
outsl
test
mov
mov
or
in
js
mov
lods
orb
push
out
movsl
sub
pop
pop
jp
inc
adc
xor
sub
add
aaa
add
mov
insb
adc
xchg
add
pop
insb
or
shl
jmp
loope
lea
jae
sbb
sub
movsb
repnz
cld
lcall
pusha
jecxz
mov
addr16
push
roll
sbb
cmpsb
fs
lock
dec
inc
adc
add
int
sarl
pushf
in
add
int
mov
pop
push
push
inc
push
cmp
cmp
push
adc
cs
xchg
inc
adc
push
pop
mov
cmp
rolb
fwait
xchg
jb
imul
jno
ss
mov
sub
jbe
lahf
bound
ja
ret
js
jp
sub
xor
push
ret
mov
xor
push
adc
rcrb
adcb
repz
xchg
repnz
ds
sbb
add
pop
cld
or
lea
lahf
sub
mov
ss
adc
das
rorl
stos
data16
xor
ljmp
ljmp
fsubs
jge
cs
shl
lods
adc
pop
lds
mov
lret
cltd
pop
pop
mov
inc
and
or
fsubrl
xchg
lret
xchg
mov
clc
or
mov
ret
cmpsb
dec
outsl
cli
pusha
xchg
fildl
xchg
cmp
inc
or
mov
mov
dec
into
xorl
mov
test
push
call
dec
xchg
cs
fsubrs
xor
xor
out
xor
sub
test
inc
into
gs
cwtl
ror
cmp
jecxz
ret
push
ffreep
push
bound
jg
lds
cltd
sbb
sub
inc
mov
jp
push
xor
rcll
adc
lds
push
test
aaa
ja
aad
add
xchg
mov
or
mov
sub
cli
mov
push
adc
out
ja
stos
mov
or
sub
cmc
int
sub
fs
xor
rorl
mov
pop
pop
outsl
fldt
arpl
ja
push
mov
xlat
xchg
fsub
lea
clc
divb
in
xor
gs
inc
mov
rcr
xchg
sbb
ret
out
aad
insb
cmpsb
pop
jle
cmp
clc
jecxz
sbb
in
int3
sub
lahf
fwait
jecxz
mov
mov
dec
div
scas
addr16
sarb
adc
sub
out
or
aas
mov
js
mov
scas
or
fisttpl
mov
mov
imul
int
jnp
jb
addl
dec
cli
ds
lock
sbb
cmp
gs
rcll
jmp
das
imul
addr16
sub
popf
aas
jmp
cld
mov
enter
iret
pop
mov
or
ss
pop
mov
call
mov
lods
pop
jne
lret
mov
into
cltd
push
lea
js
or
cli
jno
in
mov
andb
cmp
scas
outsb
pmaxsw
mov
imul
adc
aad
int
pop
pop
ret
jnp
pop
adc
jg
fmuls
sbb
mov
push
insl
xor
test
fs
push
dec
mov
or
das
addb
jb
sbb
cmp
push
push
movsb
inc
or
jge
ret
jbe
rolb
sbb
xchg
loopne
popa
sbbl
cmp
out
imul
pop
jae
sti
sub
je
lret
adc
jle
jmp
cmp
mov
addb
jg
xchg
xchg
pop
cs
xor
in
push
sub
ret
xorb
test
inc
xchg
in
push
jl
lea
jbe
mov
repz
mov
aad
leave
in
xor
sub
xchg
outsb
pop
push
adc
mov
jge
mov
addr16
xchg
add
in
adc
mov
repnz
pop
data16
ja
scas
bound
fwait
add
lea
push
sbb
jmp
roll
mov
jnp
scas
scas
fcoms
pop
in
adcb
mov
adc
mov
mov
imul
imul
js
push
mov
push
movb
cmpsl
or
jl
xchg
add
shl
xchg
pop
xchg
idivb
mov
xor
les
and
or
or
sbb
pop
jmp
and
stos
mov
cmp
dec
clc
rclb
mov
ja
mov
mov
mov
movsl
inc
insb
enter
adc
inc
pop
fimuls
aas
movsl
cmpsl
aad
push
test
mov
inc
mov
mov
add
adc
outsb
xlat
mov
std
add
mov
xor
aam
inc
lea
inc
data16
jle
mov
push
jecxz
pop
iret
or
nop
pop
xlat
ljmp
or
mov
stos
mov
dec
ds
outsl
fisttpl
cmp
jecxz
aaa
mov
into
mov
push
insl
call
out
pop
bound
clc
xchg
aaa
ds
and
or
lret
pusha
sub
mov
out
mov
mov
mov
xlat
jns
inc
repnz
std
scas
std
es
mov
sbb
dec
mov
adc
dec
jne
int3
mov
xchg
enter
decl
js
cmp
fcomp
out
pop
in
fildll
xor
cmpsl
fcomp
sub
push
mov
adc
fcmovu
scas
addr16
push
in
sub
movsl
inc
cmp
mov
fists
xacquire
or
jmp
cld
add
clc
sbb
or
push
mov
stos
xchg
push
scas
mov
idiv
cwtl
pusha
fisttps
xor
fsubrs
call
adc
pop
ljmp
push
jno
mov
clc
cli
or
xchg
aas
sbb
mov
push
mov
fstps
inc
lcall
cld
imull
ret
mov
daa
out
sub
test
sbb
mov
testb
fcompl
pop
scas
andl
mov
xlat
stos
fisttpll
mov
sbb
or
lret
lret
push
mov
ficomps
pop
lock
testl
xchg
push
mov
mov
pop
call
and
mov
leave
mov
in
xchg
loop
xchg
ret
cmp
mov
xor
aad
xchg
pop
nop
mov
jns
mov
hlt
mov
jns
mov
lods
ret
fadds
ret
mov
inc
dec
mov
scas
mov
fbld
mov
mov
push
push
sbb
push
adc
int3
lret
ja
test
dec
and
lret
dec
hlt
mov
or
push
mov
mov
dec
xchg
mov
ja
movsl
int
pop
shl
xor
sub
pushf
ljmp
xchg
xor
js
stos
sub
popf
xchg
bswap
divl
out
jecxz
testl
arpl
addl
pop
push
lods
mul
ja
jae
incb
inc
sbb
insl
or
je
xlat
jns
rcrl
cwtl
ja
int3
in
movsb
bound
xchg
cmpsb
insb
pusha
data16
iret
int
mov
enter
ja
mov
add
idivb
jnp
xchg
jecxz
not
daa
dec
pop
repz
push
leave
adc
push
cld
in
and
adc
xor
ljmp
sub
cltd
test
add
mov
pop
pop
sub
pushf
movsl
in
xor
sub
jbe
jl
ja
fldenv
adc
cwtl
and
push
ficompl
and
adcl
stos
sub
or
pusha
inc
imul
je
mov
sbb
mov
mov
push
and
push
popf
sub
mov
jecxz
popf
div
add
cmp
mov
aam
cli
add
andl
adc
push
enter
out
sbb
ljmp
adc
js
cmp
cmp
outsl
dec
push
negb
sub
sahf
sub
push
pop
jl
push
mov
cmc
cld
xor
cs
pop
jle
sbb
lret
push
push
xor
popa
xchg
notl
fs
cmp
or
movsl
mov
jns
push
mov
jp
cmp
dec
cmpsb
jo
xchg
cmpsb
test
mov
pop
in
mov
cli
insl
mov
js
sub
sti
lret
jb
mov
mov
xchg
xor
icebp
fxch
push
and
jg
es
cmc
cs
stos
bound
iret
in
bound
jno
scas
jno
mov
or
mov
mov
dec
cmp
push
cmpsb
lds
jg
incl
popf
insl
outsl
notl
aam
dec
cmpsl
adcl
bound
or
aad
sub
pushl
rorl
inc
lahf
lret
pop
jmp
inc
lock
lret
sbb
dec
pop
and
test
ret
sub
mov
scas
imul
add
mov
imul
and
mov
and
jg
xor
cli
pop
aas
adc
call
add
test
icebp
in
leave
aam
in
mov
popf
lahf
mov
xchg
cmp
sbb
std
bound
xchg
subl
push
xchg
dec
imul
ljmp
sbb
and
scas
fcompl
dec
aad
rclb
out
mov
pop
ja
fs
cmp
scas
inc
decb
mov
and
adc
jmp
xor
cltd
and
loopne
enter
test
mov
sub
mov
and
aas
cmp
and
jbe
xchg
or
out
not
xchg
jmp
cltd
xchg
pushl
scas
cltd
out
xchg
inc
dec
sbb
fistpl
outsl
or
sub
iret
mov
xchg
jle
push
jl
cltd
xlat
enter
out
adc
out
add
xchg
xlat
flds
inc
into
xor
out
pop
push
pop
push
jne
pop
fst
pop
dec
add
les
xor
test
push
addr16
popf
cmp
xchg
aam
dec
sti
mov
ficoml
lahf
int3
daa
outsl
lret
lcall
out
clc
mov
pop
jns
pop
xor
xchg
cmp
push
vcvtdq2pd
sbb
nop
sub
addr16
sahf
testl
das
test
pop
jae
decb
xchg
stc
sub
arpl
pop
arpl
mov
ss
xor
sbb
out
test
stos
std
jmp
xor
jecxz
and
cs
sub
mov
mov
out
scas
fidivrs
or
out
mov
popf
scas
out
leave
mov
xor
xchg
mov
das
add
outsl
sub
rcr
mov
jge
outsl
imul
push
or
mov
jge
mov
leave
mov
out
fdivrl
pop
pop
stos
bsr
sti
loope
mov
out
cwtl
les
lock
push
sbb
les
stos
push
add
scas
dec
xor
sub
pushf
test
stos
mov
jae
mov
daa
fldenv
xchg
jae
add
sbb
lods
jne
xchg
cmp
xor
cs
or
int
fistpll
mov
xchg
fnstsw
jg
mov
loop
nop
sub
xor
cmpsl
lret
jnp
add
mov
clc
pushf
out
imul
cmp
test
pop
push
add
adc
jle
ss
iret
jecxz
addr16
outsb
insl
popf
push
pushf
aaa
shrl
dec
lds
lahf
mov
sub
add
adc
xchg
mov
xchg
cmp
andb
ds
xchg
outsl
aas
dec
sbb
cli
dec
push
lret
stc
mov
mov
jnp
cmpsl
cld
gs
adc
in
mov
outsl
cmp
fmulp
inc
gs
lods
daa
sub
cmp
int3
push
stos
cmp
out
out
xchg
cmpsl
rcr
das
arpl
and
xchg
cmc
inc
cmp
scas
cmpsl
mov
dec
cmpsb
enter
inc
jbe
lock
mov
cmp
cmp
mov
xorb
not
push
push
mov
mov
and
fldlg2
push
add
jne
push
fidivs
sub
dec
insb
jge
sbb
shll
jecxz
mov
cmp
out
jae
cmp
ja
in
arpl
popf
sti
mov
sub
sbb
mov
loope
mov
inc
popf
push
cs
in
xor
mov
dec
sti
sbb
sti
addr16
mov
mov
inc
adc
inc
into
mov
popf
lods
dec
cli
dec
adc
mov
aas
push
out
sub
lea
mov
inc
mov
cs
outsl
sbb
xchg
xor
jae
shr
jmp
mov
pop
mov
jmp
sbb
xor
inc
sysenter
fcompl
scas
fs
sub
out
scas
xlat
push
orb
xchg
mov
stos
lcall
vrcp28sd
outsb
or
stc
loop
rcr
stc
rep
cmp
mov
xchg
mov
std
sub
sub
out
push
pop
cmpsb
push
out
cmp
jns
dec
ret
mov
xchg
pop
push
cmp
add
or
cli
pop
shr
pop
scas
cwtl
mov
fistpll
movsb
xor
ds
gs
rcrb
daa
test
xor
mov
stc
pop
add
pop
int
call
sbb
outsb
mov
in
and
cmc
push
dec
mov
xchg
jle
ljmp
add
cmpsl
repz
inc
mov
loopne
test
sub
sub
call
cmp
test
test
mov
adc
ret
pop
push
ucomiss
sub
adcb
out
not
jae
decl
jns
jle
jp
mov
cmp
dec
xorb
rorb
mov
push
pop
sbb
fadd
int3
test
jo
fs
lahf
fs
push
clc
pop
or
test
pop
add
jbe
lret
test
scas
xchg
adc
xchg
outsb
jl
sbb
clc
add
push
fs
add
repnz
mov
mov
into
inc
inc
popf
dec
dec
shl
lret
jns
gs
sbb
jae
rcll
pop
lds
ja
sti
arpl
sbb
cmc
jbe
cmp
lods
or
fsubp
add
adc
lods
jb
ficompl
adc
push
adc
out
sbb
pop
sbb
pop
or
add
or
pop
clc
sti
and
or
fdiv
cmpsl
pop
adc
jecxz
das
cmp
cmc
sbb
ja
cmpl
push
mov
int
and
ret
js
xchg
sub
mov
mov
popa
fildll
jmp
andl
or
fidivrl
rcll
xchg
xchg
and
inc
dec
mul
inc
mov
dec
cmc
push
gs
or
dec
fisttpll
mov
push
repz
jo
scas
push
popa
push
in
mov
push
cmp
lods
mov
fdivrs
clc
mov
in
adc
dec
in
jecxz
mov
xor
or
push
loopne
fisttpl
and
or
add
adc
loopne
jb
addl
and
aas
arpl
rolb
inc
jbe
mov
rclb
or
popf
inc
movsb
mov
je
cmp
mov
sub
mov
sti
xchg
push
leave
decb
decb
cmp
out
or
mov
xchg
mov
loope
cmp
push
cmpsb
push
cmp
inc
xor
cmp
jecxz
adc
negb
rorb
int
jne
pop
inc
insl
lods
dec
adc
xchg
jns
rcrl
push
ja
sub
in
and
xchg
cwtl
xlat
sahf
fs
add
mov
add
lds
xchg
add
je
xchg
add
cmp
flds
fidivrl
imul
cld
cmp
notb
sysenter
jnp
mov
mov
insb
jae
hlt
leave
fdivrs
and
stos
in
and
mov
js
mov
xor
sahf
pop
xor
ds
pop
ret
jo
xor
fs
mov
dec
sbb
icebp
gs
std
stos
mov
mov
sbb
cmp
xchg
lcall
scas
xchg
scas
push
mov
xchg
sbb
shll
out
and
std
in
mov
call
mov
mov
fisttpl
jb
jno
mov
xchg
mov
test
push
pop
test
insl
stc
cmp
pop
inc
enter
cmpl
and
cmpsb
data16
jecxz
and
xor
mov
adc
leave
pop
fcompl
sbb
dec
sarl
lahf
push
cld
clc
inc
fidivl
ljmp
fldt
leave
aaa
scas
push
sar
lret
fimuls
jb
cli
cwtl
jp
sbb
sti
aas
or
jle
xchg
xchg
cmpsb
xchg
scas
mov
popa
xchg
cs
hlt
aas
outsl
cmp
inc
jnp
movsb
xor
or
add
push
lock
and
repz
lds
mov
daa
setnp
clc
jbe
add
stos
or
sub
sub
push
push
sub
stos
sub
lret
jmp
movsl
pop
rcll
sbb
notl
pop
cmp
mov
xlat
sbb
ljmp
push
jne
js
xorb
xchg
stos
mov
pusha
xor
pusha
sub
push
pop
xor
sbb
add
add
pop
dec
add
add
xchg
arpl
scas
and
mov
push
add
add
inc
js
dec
mov
mov
or
sub
mov
mov
imul
inc
js
or
inc
pop
int3
neg
mov
jl
jg
cltd
test
fldcw
and
insb
mov
mov
call
out
xor
lret
fwait
test
cmp
scas
jecxz
in
mov
in
rcrl
idiv
xor
idivb
aas
cmp
jbe
sbb
jge
or
repnz
xchg
pop
fsts
mov
pop
fadds
xchg
push
cmp
scas
call
mov
test
cmp
je
sti
pop
arpl
cmpsl
je
lods
mov
in
addr16
mov
mov
into
lret
repnz
daa
mov
fistpl
sbb
int
jmp
scas
fdivr
mov
push
sbb
pop
cmp
cmp
dec
sti
mov
cmpsl
pop
sarb
pop
insl
cmp
je
sbb
jp
clc
fdiv
and
inc
mov
xchg
sar
pop
pop
iret
dec
add
mov
mov
mov
push
rorb
ja
aad
nop
xchg
pop
and
daa
imul
jne
mov
shrl
int
std
pushf
aad
neg
std
shlb
sub
pusha
fwait
fs
movsl
popa
add
add
adcl
adc
cmp
sahf
mov
push
test
cmc
jno
cmp
or
and
mov
pop
adc
jl
rcl
scas
scas
mov
inc
xchg
in
jmp
es
mov
push
jg
push
inc
roll
pop
sub
mov
xor
loopne
cld
outsb
sbbl
sbb
xchg
rorb
jg
push
shl
jmp
jae
push
addr16
imul
jmp
fldt
rclb
out
out
mov
jle
mov
dec
or
hlt
or
aas
pop
mov
repnz
push
inc
jg
sbb
dec
push
mov
loope
mov
cltd
roll
dec
fsubrl
dec
push
xlat
xchg
ret
xchg
xor
subl
mov
stos
mov
cmpsl
dec
lods
dec
jge
xchg
jmp
lahf
pop
cli
cmpsl
mov
mov
lods
xchg
jge
shr
push
mov
stos
in
fsubl
mov
fs
pop
in
mov
scas
or
daa
xlat
or
nop
lahf
push
leave
cmc
outsb
lahf
push
or
jb
pop
test
fs
mov
jge
dec
cmpsb
leave
hlt
fnstsw
mov
movsb
adc
inc
movsb
xchg
ljmp
ds
jo
pushl
mov
mov
iret
mov
jmp
cmpsb
testl
cs
mov
pop
xchg
pop
sub
inc
shl
jne
imul
mov
mov
mov
mov
scas
pushf
stos
aam
dec
mov
gs
out
xchg
mov
push
cmp
xchg
js
aad
pop
push
and
mov
mov
mov
lds
cmp
mov
mov
jp
mov
sub
fwait
sbb
mov
xor
stos
push
pushf
lods
dec
popf
dec
sub
repz
sub
jmp
push
mov
mov
and
std
add
mov
and
stos
push
mov
lods
ja
into
dec
lods
jge
mov
mov
push
mov
push
into
stos
xchg
arpl
xchg
mov
je
bound
jmp
stos
sbb
and
cltd
pop
lock
jnp
cmpsb
sbb
xchg
push
adc
lods
dec
mov
subb
arpl
push
pop
les
lods
jle
pusha
mov
add
mov
and
out
mov
mov
mov
mov
mov
cmp
and
xchg
push
and
push
stos
xchg
arpl
adc
and
sbb
stos
inc
pop
out
les
jb
bound
jmp
stos
push
mov
dec
inc
call
loope
les
cmp
mov
sub
cmp
or
mov
adcl
out
imul
dec
lods
mov
test
ja
imull
xchg
not
out
push
push
pusha
sbb
push
mov
leave
inc
mov
xchg
add
pusha
mov
xchg
or
or
bound
cmp
dec
out
daa
data16
jmp
jecxz
out
sub
popf
or
lea
cmp
mov
mov
ret
and
push
iret
xor
add
jg
jns
negb
out
xlat
scas
sti
push
mul
das
mov
out
insl
fs
leave
and
scas
out
mov
movsb
pop
dec
idivb
adc
push
cmc
inc
mov
faddp
movsl
out
call
cmp
cmp
aad
and
subb
shlb
jno
fistps
lret
mov
je
stos
rcll
push
sub
or
je
mov
sbb
inc
adc
xor
xor
sbb
jae
xchg
jno
dec
pop
push
outsl
dec
dec
and
mov
dec
arpl
xchg
jecxz
or
idivb
fwait
push
lcall
mov
jno
pop
pop
pop
dec
loopne
mov
popl
pop
ja
stos
imul
mov
jo
mov
push
popf
mov
aam
outsb
pop
popa
popa
pop
jp
xchg
push
mov
sahf
sarl
mov
inc
mov
mov
xor
cmp
lcall
test
aaa
adc
insb
mov
fstpl
addr16
mov
lret
xor
out
cmp
out
cmpl
push
jns
push
adc
inc
pop
inc
sti
and
inc
lret
mov
push
adc
sbb
jne
xor
mov
shr
les
inc
jmp
pop
or
aas
cmp
adcl
lds
sarb
lret
fsub
test
push
stos
mov
fs
inc
and
and
fadds
inc
jno
pop
lret
pop
sbb
pushf
mull
cmc
add
xchg
dec
cmpsl
mov
int
jmp
fsubrs
dec
xlat
push
stos
lea
inc
jge
push
out
mov
std
adc
lret
out
push
or
adc
repz
in
push
std
sbb
repz
xchg
faddp
pop
sahf
cmp
test
xchg
imul
pop
imul
inc
sbb
mov
vpshufhw
cmp
pushf
out
cmpsb
pop
jo
outsb
xchg
mov
or
mov
adc
sub
aas
hlt
inc
pop
mov
pop
lret
push
adc
push
push
movq
mov
lock
incl
repz
cld
loop
cmp
hlt
fadds
xor
xor
rol
pop
test
mov
sbb
out
cmpl
mov
cmp
ja
int
pop
push
push
dec
loope
push
inc
retw
scas
shll
and
repz
adc
inc
dec
lcall
in
sbb
add
mov
leave
mov
fisubs
mov
loop
push
jnp
push
hlt
inc
xlat
std
adc
push
sti
cmp
adc
lods
pop
or
inc
mov
mov
loopne
and
xchg
sub
adc
xchg
mov
shl
scas
pop
or
test
in
pop
mov
add
int3
xor
xchg
add
pop
mov
mov
rcl
sbb
sti
pop
insb
adc
inc
mov
inc
mov
ljmp
adc
mov
sbb
imul
out
or
push
repnz
daa
lods
mov
aas
pop
jne
xchg
fdivl
loope
and
mov
mov
test
imull
cld
stos
xchg
std
push
movsb
fidivrl
js
sbb
faddl
sub
cmp
sbb
push
push
push
or
fmull
push
loopne
add
cmp
lret
stos
lock
clc
sti
out
fbstp
sub
bound
mov
les
add
mov
jns
push
cltd
or
movsb
cmp
push
jle
enter
dec
dec
dec
movsl
lret
lahf
xchg
repnz
scas
cli
pop
mov
xchg
cld
push
dec
rcl
xchg
and
adc
sbbb
daa
es
push
fs
jle
xor
jae
mov
push
std
rcl
or
loop
mov
push
jp
cmp
imul
push
and
mov
lret
xchg
hlt
lret
stc
sti
std
mov
add
ja
sti
ss
int3
lea
stos
pop
dec
push
pusha
cmp
call
mulb
leave
pop
xor
push
leave
clc
out
push
popf
mov
aaa
fimuls
jae
jbe
inc
dec
out
mov
cmpsb
mov
daa
inc
jl
inc
movsl
jg
inc
movsl
add
mov
xor
int
dec
int
int3
int
mov
jns
and
aas
mov
sbb
or
mov
fisubs
data16
das
mov
iret
lahf
test
push
mov
sbb
adc
ds
loopne
xor
lock
add
cwtl
enter
outsl
je
incl
pop
int3
sarl
lcall
and
shlb
sub
inc
lock
insl
stos
push
call
pushf
call
fmul
mov
gs
leave
outsl
test
fisubrs
push
popl
mov
mov
fidivrs
or
cltd
add
pushf
outsl
push
add
xorl
int3
jae
or
jo
rcrb
push
mov
fstp
jnp
sbb
sbb
outsb
das
dec
add
xor
jecxz
outsb
loop
sbb
inc
pop
mov
cs
pushf
pop
mov
xlat
dec
jg,pn
adc
and
not
aad
fwait
adc
stc
popa
sti
or
inc
sbb
xlat
cld
popa
sbb
cld
cmp
pop
pop
pop
or
xchg
or
dec
int3
and
sbb
aad
js
popa
stc
sbb
jge
mov
imul
or
daa
fsubrp
pop
mov
mov
sub
mov
pop
ljmp
pop
sahf
insb
lea
jl
mov
in
or
mov
mov
leave
daa
loop
push
pop
shl
stos
jne
fdiv
jnp
data16
faddl
push
xchg
popf
movsl
ja
ret
ja
in
or
fistpl
or
sub
mov
test
in
ja
js
notl
pop
sub
add
jge
inc
mov
lods
inc
and
jns
in
pop
pop
add
or
jl
pop
lock
fdivl
out
cld
pop
inc
mov
mov
std
mov
mov
cmpsl
mov
mov
movsl
mov
add
sub
fs
inc
cmp
add
shl
jne
mov
inc
pop
sahf
add
outsb
xchg
iret
std
xchg
sbb
enter
sbb
shr
dec
lock
fwait
loope
cltd
aas
lret
lock
stos
mov
testb
stos
sub
cs
jne
arpl
out
call
fimuls
fimuls
pop
dec
fnstsw
dec
ficomps
addr16
cli
cli
outsl
daa
out
cmp
inc
insb
jae
dec
ficomps
fcomps
mov
nop
scas
dec
xor
sub
or
jmp
in
or
mov
std
push
cmc
and
adc
cld
mov
inc
popf
inc
sbb
and
test
hlt
cmc
pop
call
pop
call
in
insl
int
bnd
xor
pop
movsb
push
je
lret
ds
mov
cmp
xor
imul
addr16
or
std
push
mov
dec
push
pusha
pop
xchg
push
stc
jecxz
cmc
mov
mov
sbb
shll
jo
fidivrl
dec
dec
fnstcw
ret
out
sbb
xchg
mov
ja
cmp
sbb
jbe
cmpsl
push
frstor
jbe
mov
or
scas
sbb
ficompl
out
mov
push
mov
or
cmpsl
mov
adc
push
xchg
dec
out
clc
jle
adc
sar
sub
rcl
lret
mov
dec
jecxz
push
std
cmpsl
scas
sub
out
xor
lahf
scas
xchg
and
and
or
cwtl
pop
pop
push
pushl
aad
pop
aam
inc
pop
adc
out
jg
inc
mov
inc
movsb
lods
movsl
insl
push
lods
repnz
imul
cmpl
lcall
xchg
movsl
jl
lcall
call
push
cli
mov
setbe
leave
adc
aas
adc
pop
mov
aaa
out
xor
std
dec
sbb
stos
enter
aas
fsubrl
cld
inc
inc
or
jmp
in
in
xlat
insb
lcall
mov
popa
xor
jge
arpl
rcrl
test
push
or
jne
sbb
subl
sub
pop
pop
mov
or
inc
push
lods
mov
pop
xchg
mov
subb
cmp
mov
xor
jl
out
push
rclb
cmpsl
cmpl
repz
push
fsubl
cld
rdmsr
out
popf
enter
jb
jno
or
scas
mov
mov
fdivrs
call
popf
dec
ljmp
lods
cmp
movsb
loope
and
loopne
xchg
test
jg
mov
push
xchg
inc
imul
jno
jb
pop
add
loope
ret
push
or
mov
cmp
xor
dec
mov
xchg
xor
lock
dec
sub
jbe
fnsave
mov
inc
int3
or
push
arpl
iret
imul
push
mov
push
sbb
fdiv
lock
aaa
fistpl
ja
cs
mov
shlb
mov
scas
jecxz
sub
push
jl
or
dec
cmp
add
mov
popf
jecxz
imul
js
insl
int3
xchg
in
out
lahf
popf
pop
outsb
jo
test
xchg
dec
mov
mov
jne
leave
sub
pop
into
cld
sti
cmp
fcoms
movsl
mov
add
jno
pop
pop
out
shll
push
mov
scas
das
arpl
pop
lahf
fldt
mov
int3
pushf
das
and
xor
mov
jnp
das
sbb
stos
shr
aaa
xchg
pop
cmc
outsl
push
lret
push
aam
mov
sbb
pop
xor
xor
mov
loope
pop
icebp
push
ljmp
out
inc
mov
das
pop
sub
lds
sbb
lock
sub
aad
push
cmpsl
sbb
outsl
jecxz
call
lock
push
push
popf
push
sbb
pop
lea
std
adc
xchg
sub
jne
out
loopne
mov
out
jae
adc
enter
inc
ds
repz
aam
lret
xchg
in
jnp
push
mov
in
insb
mov
icebp
jb
jnp
xlat
pop
test
outsb
gs
fwait
or
aaa
mov
in
repnz
adc
std
or
in
rolb
into
jle
jb
xor
test
push
dec
sbb
xlat
dec
cmpsl
push
jp
imul
sub
mov
xchg
imul
dec
cmc
and
or
mov
and
sub
cmp
loope
mov
jl
fucomi
and
fsubl
mov
ss
mov
insl
mov
lcall
jno
dec
in
clc
and
aas
xbegin
cmpsb
mov
xor
frstor
cwtl
xchg
xchg
mov
out
dec
ja
out
dec
mov
mov
fistl
jae
addr16
xor
inc
pop
jge
or
cs
xchg
sub
push
dec
mov
mov
cmp
cmpsl
ja
mov
adc
lahf
sbb
mov
dec
xlat
inc
or
je
add
in
pop
fbstp
mov
xchg
jae
adcb
push
movsl
aas
sbbb
xchg
cmpsb
add
xor
and
outsb
xor
pusha
pop
push
sub
pushf
insl
ja
lcall
pop
in
mov
xchg
or
cmpsl
xlat
or
out
inc
fimuls
fucomip
fisttps
aam
mov
cmp
mov
pushf
mov
fmull
aaa
ja
data16
mov
push
jns
sti
cli
and
inc
ja
jnp
ljmp
push
pop
adcb
repnz
mov
push
xchg
adc
es
dec
dec
fstpl
xchg
shll
push
dec
xchg
ss
dec
lea
add
sub
jp
aaa
pop
or
inc
sbb
insl
sub
dec
sbb
in
jne
or
cli
jl
dec
aaa
adc
insl
cmp
loope
sub
sti
imul
add
stos
or
pop
add
lods
mov
and
jne
pop
push
sub
mov
add
aad
jmp
gs
mov
pop
mov
sub
or
sbb
or
in
inc
mov
leave
xor
leave
cld
rcrb
inc
aad
pop
or
cmp
mov
loopne
xchg
sub
scas
mov
lock
lea
dec
sti
sets
pop
pop
pop
mov
sbb
fmul
in
fwait
movsl
inc
adc
xchg
or
outsl
sbb
adc
in
sarb
movsl
jo
add
mov
inc
dec
sub
stc
mov
cmpsl
mov
dec
out
xchg
ror
popf
scas
cwtl
xor
neg
inc
gs
out
imul
mov
push
test
lret
sahf
ljmp
push
test
insb
fstpt
call
in
pop
faddl
addr16
pop
fiadds
sub
clc
dec
sbb
xorl
jg
sbb
cmp
pop
or
dec
xorl
sbb
xor
xor
mov
nop
inc
lds
pop
fisttpll
xchg
or
pop
add
xchg
int3
push
mov
xor
je
cmpsl
or
dec
shll
mov
adc
mov
fcoml
xor
rol
jecxz
imul
add
sbb
data16
insb
jecxz
or
movsl
and
sub
inc
fsave
sub
imul
in
push
loopne
pop
add
xor
popa
mov
outsl
mov
jge
jns
add
lds
mov
adc
or
ss
imul
mov
mov
sahf
or
subl
and
pushf
aas
add
add
testl
xorb
stos
addr16
pop
aaa
leave
mov
rol
pushf
jg
add
lea
shll
pop
mov
insb
ret
mov
adc
enter
lcall
imul
notl
or
pop
out
jge
arpl
dec
pop
adc
jecxz
enter
cmc
orl
rorb
sub
leave
sbb
loopne
jge
xchg
cmp
xor
jle
and
inc
or
mov
xor
out
or
jmp
cmp
xor
lds
push
cmp
push
mov
into
mov
mov
test
xchg
pop
pop
push
arpl
lods
push
xchg
sub
mov
xchg
xor
mov
fldl
insl
aam
adc
pop
aad
pushf
adc
cwtl
ret
or
mov
popf
and
push
shll
and
adc
fcomps
mov
cmp
adc
scas
pop
add
lahf
add
push
pop
dec
pop
bound
lods
lahf
outsb
out
cmp
push
in
fsub
and
or
fidivl
and
add
xor
add
cmp
insb
rorl
sub
cmp
mov
inc
xchg
jne
fsubs
inc
sahf
lds
popa
push
orb
add
aas
cmp
out
mov
lods
jp
push
or
ror
paddw
imul
mov
in
or
xor
jb
imul
xchg
aam
jo
push
add
cmp
outsb
movl
rcrl
aad
in
dec
xlat
popf
shll
iret
dec
pop
cmp
sbb
fisubl
nop
imul
adcl
cltd
pop
stos
mov
push
jns
sahf
jecxz
insb
outsl
es
fs
std
out
dec
sub
aaa
and
mov
mov
mov
jle
fisubrl
popf
insl
xchg
xor
jle
or
mov
pop
dec
lahf
stc
mov
ret
push
call
lock
mov
jo
decb
or
push
dec
inc
lret
jae
inc
and
rclb
xchg
ror
add
pop
cmpsl
mov
ret
imul
xchg
rcrl
mov
scas
fistl
cmp
adc
mov
scas
dec
mov
scas
dec
insb
push
and
add
pop
js
cmc
test
pop
lcall
loope
aaa
sub
push
and
sbb
ret
inc
sbb
cmc
aas
jne
xchg
pop
and
cmp
inc
dec
mov
mov
ret
and
sub
repz
push
pop
xchg
pop
sbb
out
leave
shll
push
inc
mov
cmp
bound
insl
cltd
cmp
mov
mov
mov
cltd
in
pop
in
rep
fisttps
dec
test
or
pop
lods
daa
sub
scas
or
add
sbb
jnp
jb
mov
sbb
cs
iret
mov
inc
xor
loope
dec
xchg
pop
subl
jl
push
dec
lods
add
std
mov
std
cmp
daa
xor
or
call
dec
push
arpl
shl
push
push
mov
and
outsl
in
test
mov
fs
mov
jge
clc
inc
mov
ljmp
cwtl
pop
mov
daa
pop
insl
cmp
jae,pn
mov
test
cltd
sbb
pop
mov
into
jbe
mov
testl
mov
insb
dec
cmpsl
rcrl
xor
dec
sar
or
mov
jno
out
xorl
pop
xchg
push
popa
andb
lahf
adc
arpl
mov
mov
jno
ja
inc
mov
ret
and
cmp
xor
inc
stos
das
jbe
sarl
sub
lods
add
or
enter
pop
movsb
inc
push
sahf
cmp
fnstcw
stos
loopne
loop
cltd
iret
fs
daa
lea
test
sub
pop
jns
xchg
dec
push
mov
insb
jmp
pop
scas
push
push
pop
push
jl
lahf
xorb
cmc
fldcw
mov
lock
rcll
pop
js
inc
jno
stos
outsl
pushf
sub
xchg
rcl
mov
popf
mov
lcall
xor
es
mov
mov
mov
cmp
rorb
aas
pop
jp
loope
lret
pushl
sub
js
mov
ja
xor
stc
cmp
call
out
lea
fildll
push
cmp
in
xchg
sahf
inc
jp
sbb
cmpsb
sbb
inc
and
jno
je
iret
sahf
jecxz
cmp
loop
add
inc
fdivrs
dec
pop
cmpsl
fsts
sbb
rcr
cmp
in
test
sahf
mov
xchg
pop
lea
testl
push
jo
lock
push
int3
or
sub
xchg
mov
xchg
out
mov
negl
jns
fcompl
xor
lahf
jne
daa
mov
push
int3
std
das
jnp
sahf
popf
and
cmpb
mov
sbb
inc
jae
lahf
in
inc
jnp
in
ret
in
xchg
cltd
aas
xor
int3
sahf
jl
movsl
sub
lods
jae
xchg
add
jns
rclb
lods
push
notl
jmp
mov
fists
push
mov
xchg
add
enter
pop
mov
into
test
loope
inc
mov
fistps
imul
add
mov
jbe
filds
inc
shrl
in
dec
into
xor
jo
arpl
push
add
out
pop
jae
data16
inc
test
dec
aas
aaa
pop
add
enter
imul
xor
in
inc
clc
push
and
lcall
hlt
ljmp
pop
sub
dec
sbb
daa
xor
mov
mov
jmp
test
ljmp
adc
cltd
push
rol
lods
sbb
mov
mov
mov
push
push
push
mov
cwtl
sub
repnz
pop
repnz
aas
cltd
push
push
cmpsb
mov
cmp
fildll
test
shl
sub
mov
add
out
lods
pop
lock
ds
cld
or
lods
pop
les
xor
mov
pushl
push
insb
imul
push
mov
lea
inc
enter
pop
add
add
and
mov
les
inc
inc
int
repz
xor
insb
and
or
loop
popa
pop
adc
adc
les
or
adc
add
and
clc
inc
rclb
les
push
loopne
mov
add
jbe
cmp
sbb
dec
and
test
bound
loope
rorb
adc
or
cmpb
sbb
mov
and
lea
enter
jecxz
imul
test
pop
stos
les
cmp
lds
in
inc
jp
call
icebp
pop
inc
inc
int
repz
cwtl
lcall
cwtl
mov
cwtl
stc
mov
loop
sbb
arpl
cmp
and
sbb
mov
arpl
bound
sub
cmpl
ja
ljmp
test
jb
fs
pop
cmpsl
sti
ret
mov
mov
loop
out
stos
mov
push
pop
cwtl
and
xchg
mov
mov
pop
imul
push
mov
daa
idiv
test
xchg
ror
jle
jns
xchg
cmp
mov
sbb
in
stc
mov
mov
jbe
sahf
mov
int
sahf
cmpl
jp
pop
fiadds
xor
fsubrl
xchg
sbb
xchg
inc
cmpsb
repz
push
adcb
jae
test
out
jg
cli
lar
cmp
loop
cmp
jmp
movsl
mov
rcl
sub
fs
into
sub
sahf
pusha
dec
loope
into
pop
dec
mov
lahf
cmp
push
dec
cmpsb
pop
push
push
dec
fildll
fyl2x
fadd
mov
fs
cmp
cmp
out
push
cmp
fsts
lahf
push
js
xchg
sub
sub
cmp
addr16
mov
mov
add
in
or
jge
lock
das
dec
sti
js
mov
scas
mov
inc
aad
popa
and
movq
fidivrs
jg
std
dec
out
add
jp
sahf
adc
popf
ret
bound
push
adc
sahf
jle
scas
sbbb
cltd
iret
dec
aas
xor
loopne
out
mov
xchg
ja
aam
xchg
push
call
aas
and
push
jnp
pop
sti
mulb
loopne
adc
mov
iret
inc
ret
mov
inc
sub
xchg
pop
scas
jne
scas
fsts
pop
xor
mov
fisubl
cmc
into
push
icebp
jae
outsb
sbb
or
lret
scas
mov
mov
or
mov
or
lahf
push
or
jno
in
dec
dec
addr16
mov
fidivs
jno
sarb
dec
sbb
xlat
push
pop
mov
or
out
ss
mov
scas
fmuls
stc
neg
test
mov
cmp
jecxz
add
mov
inc
dec
lret
or
scas
lahf
fldcw
fistpll
mov
mov
pop
sbb
dec
push
pop
mov
popf
shll
mov
addl
insb
xchg
orl
mov
sub
shlb
in
pop
or
hlt
push
jb
jne
pop
add
cli
ljmp
ds
fdivr
rcll
repnz
les
sbb
inc
inc
push
sbb
xor
stos
mov
and
pop
sbb
xchg
cld
push
cmp
sub
adc
cmc
cmp
shlb
aad
aam
sbb
fcomps
enter
fwait
lcall
pop
sub
xor
fdivr
xlat
sahf
mov
fs
xchg
pop
sub
faddl
pop
inc
or
rolb
jbe
lcall
mov
mov
jle
cmp
addr16
add
insb
mov
add
jle
adc
lds
lods
jg
mov
sub
lods
add
adc
mov
ret
push
sbb
cmc
sbb
pop
jp
jmp
jns
add
jnp
push
outsb
jo
jno
cmc
cmp
push
add
shlb
jbe
adc
jg
push
cmp
orl
pop
daa
idivb
push
arpl
or
mov
push
dec
sbb
loope
cmp
add
ljmp
push
dec
imul
mov
sbb
in
push
repz
int
ds
repz
inc
out
mov
xchg
mov
in
aaa
dec
inc
and
mov
dec
std
cmp
outsb
or
push
loope
ds
adc
dec
sahf
jmp
mov
pop
pop
mov
cwtl
pop
imul
out
insb
sub
push
std
inc
cli
mov
sub
or
mov
jge
mov
adc
xchg
inc
and
inc
subl
les
aad
out
cltd
movl
jge
pop
cs
jnp
stc
jle
pop
enter
push
jae
push
xchg
push
xchg
in
repz
xor
pushf
js
cmp
mov
pushf
ss
and
and
xlat
loop
fsubrs
lahf
mov
test
mov
cs
adc
es
and
int3
in
and
xchg
out
stc
jbe
shlb
adc
test
or
push
mov
cs
in
xlat
inc
movsl
ljmp
xor
in
xor
in
into
ljmp
imul
adc
xor
fwait
jns
arpl
mov
cmp
pop
xor
dec
mov
push
test
pop
mov
push
adc
rcl
lock
sbb
arpl
adc
adc
jge
pop
inc
mov
cmp
nop
pop
inc
mov
pop
ds
pop
fs
xor
push
jge
ds
mov
in
movsb
mov
pop
jp
aad
and
test
mov
clc
pop
mov
jle
ljmp
pop
mov
test
adc
in
jnp
xchg
mov
cmp
lea
mov
dec
cmp
mov
out
cld
jnp
pshufw
adc
cmovnp
jp
test
gs
negb
xlat
stos
inc
inc
scas
jno
inc
leave
pop
or
adc
sbb
push
adc
bound
adcl
push
push
xorb
bound
push
jge
push
push
sbb
xchg
sub
in
or
rcr
xor
push
add
cmovnp
add
movsb
out
dec
gs
or
push
or
push
inc
test
lret
lods
add
mov
inc
mov
cmp
xor
sub
mov
dec
jmp
daa
dec
xor
inc
push
in
icebp
push
jb
mov
mov
push
ficoml
mov
aas
push
mov
mov
push
sbb
xlat
xchg
cmp
xor
movsl
in
and
adc
xor
cmp
clc
fcoms
jmp
jnp
lcall
fs
imul
sub
inc
pop
cmpsb
aam
scas
loop
dec
in
fnsave
xchg
mov
dec
cld
inc
inc
jmp
add
jnp
scas
dec
fwait
lcall
stos
icebp
push
xchg
dec
jg
push
ja
adc
das
rcrl
daa
add
jecxz
jmp
mov
and
jnp
addr16
mov
mov
jno
in
inc
inc
cmc
cmc
push
test
out
jl
and
ret
xor
sub
and
lea
aad
test
lods
sbb
cmp
add
sbb
test
les
dec
fisubs
hlt
and
sbb
fmuls
xor
aas
push
xchg
xchg
cli
or
iret
ja
push
pop
stos
adc
imul
fimuls
cmp
inc
leave
cmp
push
aaa
bound
subb
inc
movsb
cli
and
mov
imul
loope
jmp
push
cltd
mov
mov
jnp
push
add
sub
bts
adc
nop
and
jecxz
fadd
outsl
and
inc
ss
in
pop
jae
and
imul
sub
push
or
dec
mov
in
mov
add
cmc
lods
push
stos
push
decb
fstl
in
fcom
and
divb
fmuls
adc
push
out
rorl
xchg
out
int
cwtl
xor
clc
push
dec
int
out
imul
xchg
std
test
fldl
ret
jge
cld
stc
mov
xor
push
out
incl
arpl
cmove
arpl
or
testl
inc
adc
divl
mov
adcl
std
xchg
pop
inc
aad
cwtl
push
std
rol
pushf
jnp
bound
sti
adc
jbe
mov
popa
add
ss
mov
sbb
fisubs
and
push
xor
negb
push
fisttps
pop
sbb
push
lret
xor
ss
add
sub
dec
call
inc
nop
cmc
jns
dec
inc
xlat
bound
inc
out
sti
adc
call
jmp
pop
popa
pop
cmp
cmpl
ror
xchg
jle
sbb
loope
rcl
push
jne
sbb
test
ret
call
mov
mov
movsl
arpl
orb
jo
int3
popf
fstpl
adc
xor
loop
sahf
cld
in
rcll
addl
push
outsl
inc
push
loopne
xchg
outsl
xor
jo
add
jo
cld
fs
mov
mov
jmp
mov
pop
into
addb
mov
fwait
and
xchg
dec
adc
out
mov
cmpl
cmp
mov
xor
push
arpl
xchg
push
cmc
xchg
enter
lods
inc
mov
add
mov
dec
sti
mov
pop
push
aaa
jno
sub
nop
add
popa
mov
nop
mov
xorl
mov
pop
push
cmp
mov
dec
xorb
push
xor
movsb
xchg
insb
mov
dec
out
pop
je
aaa
stos
xchg
lret
int
pop
or
sarb
lret
out
or
cmc
in
fdivrs
lods
and
xorb
std
push
dec
rorl
pop
adc
pop
push
add
mov
jb
mov
iret
sti
inc
daa
pop
adc
inc
icebp
into
andb
pop
outsb
int3
add
or
js
repz
xor
jge
arpl
dec
idivb
test
movsl
movsl
insl
push
test
in
enter
cld
sbb
sub
call
add
js
bound
and
push
lods
cmp
add
fwait
mov
cmp
xor
in
bound
push
ljmp
mov
int3
je
dec
sbb
push
xchg
mov
xchg
add
int3
sbb
mov
xchg
clc
xor
mov
out
adcb
ret
movsb
arpl
sub
movsb
shlb
inc
pusha
sarl
cmp
jnp
mov
jne
and
stc
insb
adcl
scas
mov
xor
mov
inc
cmp
pop
cwtl
mov
popa
and
adc
ficompl
and
shlb
xchg
add
mov
cld
push
ds
sbb
loopne
jno
insb
int3
lcall
jae
insl
sti
cli
into
mov
mov
fucomi
sbb
das
mov
mov
mov
dec
xor
mov
and
in
pop
and
pop
mov
ficoml
add
mov
lret
shlb
dec
loope
shlb
arpl
or
sub
outsl
add
dec
mov
mov
xacquire
xchg
pop
adc
mov
xor
mov
lock
pop
loop
adc
jmp
cmp
nop
pop
and
in
pop
lcall
inc
testl
icebp
les
sbb
stc
cmpb
adc
fldl
xor
cmp
mov
xchg
mov
fldenv
jl
lods
or
xor
fdivrl
test
lahf
insl
cld
pslld
sbbl
faddp
mov
leave
mov
fstpt
pop
jle
andl
mov
mov
fcos
scas
insl
idivb
movsl
jnp
aam
cmp
mov
bound
cmp
jle
out
fsts
jmp
pop
mov
loop
rcrb
jo
arpl
or
icebp
jp
mov
jno
es
repnz
pushf
imul
test
test
sahf
xor
pop
lds
adc
xlat
sub
xor
leave
or
in
js
cmp
mov
in
mov
mov
int3
sarb
cs
rol
es
sbb
ja
cmc
xchg
lret
adc
fstps
fcoml
inc
jle
lea
in
push
pop
push
adc
arpl
leave
mov
push
inc
data16
ljmp
out
lods
dec
mov
test
xor
inc
inc
dec
mov
inc
testl
shlb
cltd
lds
dec
xor
or
jns
dec
mov
pusha
int
cmp
movsb
dec
jno
aad
pop
xchg
and
dec
lcall
cmp
stos
and
xor
inc
int
mov
sub
lods
stos
test
cli
xchg
xor
decb
mov
aad
in
lahf
push
push
lret
sbb
addb
stos
das
cmp
and
int3
movb
fsubr
xchg
jo
push
jb
std
fs
sbb
sub
std
dec
jb
mov
in
sbb
xor
dec
jb
pop
clc
inc
xchg
mov
and
cmc
and
jg
das
in
stos
pop
stc
jg
inc
pushl
add
cmpb
add
mov
inc
popf
add
rorb
fcoml
mov
mov
mov
clc
add
add
sub
insl
pop
ss
scas
and
add
sbb
mov
adc
jg
sub
jle
inc
repz
mov
scas
sbb
lock
negl
jnp
pop
cmpsl
loopne
cld
daa
sbb
inc
push
add
jecxz
adc
mov
sbb
jno
fbstp
xor
jge
imul
jg
mov
jmp
aaa
repz
lea
jmp
xchg
xchg
jb
fldenv
sub
movsb
add
dec
sbb
mov
into
cmc
stos
xor
stos
cmp
sub
aaa
int3
mov
dec
push
sti
jbe
jae
mov
mov
scas
int3
mov
movsb
push
jo
in
sub
adc
imul
loope
and
pop
cmp
ret
inc
dec
cmc
loop
aaa
sbb
sub
and
cmp
jbe
aaa
lcall
xchg
sbb
cltd
in
in
push
pop
mov
jle
pop
dec
int3
mov
and
or
popw
dec
mov
sbb
xor
jnp
or
adc
stos
xchg
and
pushf
adc
ljmp
sti
cmp
fistpll
mov
jo
std
cmpsl
aad
dec
popf
xchg
cltd
add
or
mov
lret
push
mov
dec
and
out
in
scas
push
inc
stc
out
test
push
mov
push
push
movsl
cmp
fidivrs
lods
xchg
or
dec
nop
pop
inc
addr16
outsb
pushf
pusha
mov
call
push
subb
sbb
jnp
out
std
test
cmp
das
rcrb
pop
pop
jl
xlat
imul
pop
dec
inc
xchg
dec
lods
jb
xlat
xchg
sub
push
cmp
lods
imul
xchg
rcrb
data16
fsts
loope
xchg
push
test
lret
cli
outsl
mov
scas
out
or
mov
adc
adc
add
jl
aas
xchg
scas
test
inc
jle
stc
sbb
adc
movl
sub
sahf
jle
adc
jae
sub
xor
pop
xchg
leave
jb
jp
mov
imul
cmp
push
gs
orb
push
add
mov
sub
sbb
imul
push
add
pop
sub
mov
and
in
sahf
mov
lea
out
jb
pop
les
out
lock
inc
mov
lea
inc
fcompl
outsb
xor
sub
out
mov
jno
daa
lea
jb
adc
dec
popf
mov
mov
pop
mov
ds
mov
adc
xor
sarl
mov
cmpsl
fwait
jae
mov
mul
test
scas
pop
mov
mov
scas
xor
movsb
pop
adc
jbe
sbb
jo
rcr
mov
xor
pop
data16
pop
xor
mov
push
fucomi
sarb
push
arpl
dec
sbb
mov
mov
push
add
aaa
pop
lods
daa
mov
shrb
stos
stc
das
pop
outsl
xchg
pushf
enter
stos
mov
sub
loop
popf
jae
sti
sub
or
mov
push
call
inc
ljmp
push
jmp
imul
pop
jno
out
shrb
lock
xor
dec
aas
push
popf
sub
hlt
lcall
mov
insl
std
sbb
pop
inc
inc
in
cs
inc
cmc
mov
in
in
mov
jno
mov
or
divl
sub
mov
mov
iret
ja
popf
mov
ja
js
cmp
inc
mov
stos
test
inc
pop
insb
sub
jle
mov
add
lcall
dec
andl
inc
dec
or
mov
and
inc
pushf
push
iret
inc
and
xchg
add
pop
mov
xchg
lcall
xchg
or
lea
sbb
repnz
jg
push
out
in
fnsave
sbb
cs
cs
mov
push
cmpb
pop
push
test
mov
mov
xchg
fbstp
fsub
xor
lret
dec
mov
inc
sbb
xor
testl
push
inc
jmp
clc
jp
std
push
shr
jne
ds
gs
cli
ds
push
jno
pop
push
lock
sbbb
icebp
add
pop
aaa
lds
movsb
cwtl
xchg
inc
push
inc
xchg
enter
mov
xchg
mov
inc
xor
test
pop
mov
ret
mul
mov
push
mov
add
lret
fldt
or
pop
idivl
fdivp
ds
mov
jle
sti
jmp
sbb
jmp
jge
pop
xor
mov
adc
inc
dec
mov
inc
or
mov
sarl
adcb
loope
outsb
pop
sub
out
fimuls
xchg
sti
inc
lahf
arpl
sub
ds
jns
dec
jo
in
cltd
push
and
loopne
loope
lcall
pusha
test
push
xor
stos
sbb
and
mov
mov
outsb
pushf
mov
mov
mov
adc
jae
sbb
mov
pusha
cmpsl
loope
pop
iret
inc
pop
mov
sub
arpl
xchg
jecxz
call
push
aas
lret
in
push
jae
popf
sbb
cmovg
pop
imul
ljmp
cmp
aam
inc
cs
rol
iret
jb
mov
cs
pop
xchg
xchg
cmc
push
loopne
mov
imul
inc
sub
push
test
xlat
cmp
and
hlt
mov
mov
test
out
lahf
lret
sbb
call
fisubrs
cmp
cmp
das
adc
mov
xchg
jle
push
mov
pop
js
inc
sub
test
inc
hlt
cld
mov
jecxz
insl
push
sarl
sbb
lahf
dec
push
test
sub
mov
cwtl
pop
pop
sub
adc
std
gs
mov
filds
cmp
jecxz
aam
dec
add
sbb
dec
ljmp
not
in
pop
fndisi(8087
movsb
xor
test
clc
aad
loop
mov
dec
stos
xchg
shl
and
out
pop
sub
ret
fbstp
mov
cld
jb
ret
add
sbb
mov
jge
sub
cmp
int3
add
jge
xchg
dec
dec
or
out
xchg
repz
mov
scas
out
jae
fdivr
lock
out
jg
lret
sti
jle
idivl
xlat
and
cmp
sbb
and
mov
shrb
sahf
ret
ljmp
dec
out
popa
jmp
mov
cld
fcompl
ret
fdivrl
ret
xor
arpl
insb
es
int3
jle
xor
scas
dec
cwtl
fidivl
mov
pop
lret
push
xor
shrb
jl
ljmp
aam
xor
notl
data16
xchg
clc
lret
sub
ret
or
cwtl
dec
js
cmp
filds
cmp
jo
inc
test
repnz
call
xchg
mov
imul
out
adc
lea
lret
inc
jns
sub
jne
pop
iret
in
movb
xor
cmp
movl
je
and
fiadds
pop
hlt
dec
adc
xchg
and
sub
fldt
lods
dec
iret
sub
and
mov
adc
xchg
lahf
jg
dec
and
and
xchg
push
cli
fs
adc
xlat
fbstp
sub
in
or
add
xor
xchg
mov
fsubrs
pop
or
lds
dec
add
add
nop
loopne
xchg
push
lods
cmp
or
pop
mov
mov
ss
mov
pop
dec
push
pop
push
stc
mov
test
adc
std
neg
cwtl
or
out
jae
repz
repz
mov
shr
lods
fildll
rcrb
outsb
add
into
push
loope
cmpsb
cmp
mul
push
cld
ret
fcoml
out
loope
incb
jmp
mov
mov
sti
mov
loope
adc
ja
cmpsl
das
sub
xor
jmp
pusha
cmp
jb
pusha
shl
ljmp
out
rclb
mov
cmpsb
pop
inc
pop
dec
push
mov
out
ds
cltd
mov
and
cmp
dec
nop
xchg
mov
push
mov
cmp
ds
mov
int
out
in
and
add
and
loop
imul
jno
mov
xor
xor
mov
push
pop
cmc
xor
jo
jp
push
push
shrl
movsl
outsl
lds
mov
sbb
inc
cli
pop
sahf
cmp
or
testb
pop
and
loop
adc
data16
sbb
hlt
nop
pop
out
xchg
adc
popa
mov
jp
test
lret
mov
movsl
and
add
pop
dec
adc
lcall
xor
repz
rcll
dec
aam
push
xchg
dec
jge
dec
lret
sti
adc
les
out
lret
jecxz
sub
arpl
les
data16
adc
xchg
pop
lahf
mov
sahf
dec
and
pop
imul
cmpsb
nop
aaa
mov
mov
pop
push
inc
and
mov
mov
mov
repnz
cmp
pop
or
adc
dec
fstl
pop
imul
lods
test
sub
adc
push
inc
xor
daa
jg
in
or
aad
xor
pop
add
fsubrs
popf
or
or
mov
or
mov
jnp
and
or
sti
mov
aad
cmc
and
daa
sbbb
mov
int3
cmc
jecxz
out
addr16
inc
ss
lock
push
clc
int
aam
mov
mov
icebp
mov
jae
mov
lea
js
lahf
cmp
divb
pop
fistps
lea
insl
rcrl
addr16
ljmp
adc
leave
pop
mov
sbb
mov
mov
lret
mov
sbb
dec
fwait
xor
push
sbb
popa
mov
outsl
in
jecxz
mov
jl
cs
in
mov
inc
and
inc
inc
xor
std
lea
jae
push
sub
mov
out
dec
and
push
in
cltd
pop
scas
sub
inc
scas
pop
mov
ljmp
push
pop
notb
jp,pn
push
adcl
inc
andl
push
fldcw
sbb
push
mov
mov
test
jge
pop
aad
dec
xor
mov
push
cmp
cmp
cwtl
mov
insl
inc
leave
in
push
sub
pop
dec
sub
div
dec
sub
enter
pop
xor
fstps
cmpb
cmp
and
pusha
and
mov
cmpl
repz
enter
ffree
lock
jle
stc
mov
mov
mov
rorl
aad
sbb
mov
addb
mov
icebp
push
daa
dec
fdivrl
loope
jp
je
cld
fmulp
xchg
dec
loope
cmp
loop
int
mov
push
fwait
loop
and
push
push
or
mov
in
stos
jae
mov
adc
imul
sarb
mov
mov
test
orl
add
es
fwait
pop
xchg
inc
adc
ret
push
pop
pop
jae
pop
jg
scas
test
cmp
adc
leave
sbbb
in
test
leave
cmp
dec
cmp
jle
dec
std
push
leave
scas
dec
or
jne
or
cmp
cs
inc
pop
divb
and
shrl
test
or
mov
sub
lret
jl
sarl
push
bound
cmp
shrb
lahf
fbld
xchg
xchg
push
mov
xchg
inc
and
cmp
stc
pop
mov
sub
sbb
mov
sub
repnz
mov
mov
jl
sub
push
pop
cmp
sub
insb
aad
cmc
ljmp
out
push
pushf
mov
inc
pop
pop
sub
jno
rcrl
test
call
push
pop
push
adc
js
add
dec
adc
dec
mov
push
inc
fs
test
mov
insb
lret
adc
pop
mov
mov
sub
lods
fidivl
pop
xchg
pop
xorl
jp
dec
inc
fwait
iret
xor
cmp
psllq
decb
enter
imul
xor
mov
insl
sbb
jge,pt
cmpsl
xchg
jmp
fldcw
iret
dec
xor
in
mov
inc
test
cmpsb
sub
notl
push
lahf
mov
add
shl
adcl
lods
je
fisttpl
cmpb
movsl
mov
xchg
shrb
push
pop
iret
push
je
fstps
push
adc
iret
std
movsl
adc
das
and
iret
xchg
mov
mov
sbb
cmpsl
push
sbb
in
sub
lret
scas
xchg
sbb
sbb
je
xchg
push
in
pusha
aam
rcrb
lcall
cld
test
push
stos
jle
aam
movsb
mull
mov
xchg
outsb
sbb
or
mov
xor
popa
xchg
inc
xchg
xchg
daa
incb
outsb
lds
mov
adc
out
pusha
xor
jnp
pop
adc
cmp
inc
mov
cwtl
ret
dec
int
adc
xorb
cli
nop
ret
jnp
cli
jbe
andb
cmp
fdivrl
arpl
mov
jno
call
outsl
dec
push
xor
xchg
sub
or
inc
fs
xchg
mov
in
dec
xorl
xchg
jmp
popa
dec
pop
xchg
sbb
stc
stos
push
lret
mov
cmp
loopne
mov
mov
adc
adc
fndisi(8087
inc
inc
mov
hlt
leave
dec
cltd
adc
loope
fstp
jne
mov
or
add
push
clc
inc
push
mov
shl
pop
lahf
outsl
popf
mov
push
mov
lods
push
mov
in
mov
sahf
push
stos
fistl
pop
outsl
lret
mov
out
lret
sbb
cmpsb
stos
ljmp
sbb
sbb
rcl
out
xor
insl
stos
sub
aad
and
imul
push
cmpsb
movsl
adc
pop
xchg
push
outsl
pop
xor
mov
mov
shll
jle
out
sbb
inc
filds
push
mov
fidivrs
mov
push
push
mov
in
mov
jmp
outsl
pop
mov
test
aaa
cmp
add
das
fcoms
cmp
mov
adc
mov
sar
or
stc
test
jo
popa
push
hlt
add
and
fwait
movsl
sbb
or
insl
icebp
pop
push
loope
jbe
sub
adc
and
fdivs
stc
or
cwtl
mov
jns
movsl
add
xchg
push
test
outsl
mov
sarb
test
or
add
in
add
mov
imul
pop
aad
cs
das
sub
ds
aam
add
adc
ss
sahf
xchg
jl
repnz
mov
inc
js
adc
xchg
repz
in
adc
iret
pushf
push
sti
out
sahf
mov
push
or
into
addr16
ss
icebp
mov
jmp
loope
sahf
cmp
lret
xor
into
ficoms
scas
sahf
rolb
jno
jae
insl
jl
dec
in
vpshufd
pusha
pop
loopne
in
int
loopne
inc
lea
push
sub
in
mov
mov
loope
adc
mov
or
sub
jnp
subl
xchg
xor
cwtl
cmpsl
mov
loopne
lods
pop
sti
icebp
mull
mov
test
jno
sub
pusha
lods
add
lods
push
pop
dec
cmp
lods
data16
rol
add
cmp
mov
jo
in
adcb
add
daa
mov
dec
fidivrl
jge
imul
add
jno
aas
push
jae
sbb
dec
jl
jl
loop
jne
insl
cmp
push
sbb
dec
aaa
or
push
pop
xor
jecxz
fwait
lahf
inc
xchg
sbb
int3
nop
mov
xchg
imul
dec
fcmovnbe
sub
mov
cmpsl
ret
jno
dec
push
setge
jmp
lods
lods
lret
call
cmpsl
subb
inc
mov
dec
xchg
aam
cmc
rol
xor
push
icebp
mov
dec
xchg
lret
adc
pop
dec
imul
rorb
mov
mov
pop
pop
scas
aam
test
int3
xor
scas
pop
mov
xchg
xchg
int
jno
mov
imul
jae
js
dec
or
fwait
dec
jb
stc
pop
cmp
je
mov
pop
loop
jle
sub
mov
pusha
sub
clc
xorb
mov
lret
test
inc
sbb
lcall
cmpsl
and
pop
xor
jne
sbb
sub
ret
or
push
inc
nop
ret
stos
addl
xor
jmp
pusha
adc
loop
push
and
inc
iret
shr
add
mov
nop
mov
cmp
dec
push
inc
xor
inc
gs
insb
and
cmpsb
sahf
mov
mov
add
ljmp
xchg
ret
push
out
sbb
mov
mov
mov
mov
outsb
ja
cmp
dec
jbe
lahf
scas
lods
xchg
imul
test
lea
lods
cmpsl
jl
pop
and
mov
aam
cmc
ljmp
push
dec
mov
loope
fwait
cmp
std
mov
sahf
jle
push
lods
outsl
pop
test
cmpb
out
add
mov
mov
bound
jmp
aad
movsl
jmp
imul
lods
lods
cli
mov
sub
idivl
rcrl
jbe
call
dec
pop
sbb
and
mov
adc
imul
mov
dec
or
inc
data16
ficompl
imul
pop
call
jg
leave
inc
and
ret
fcomps
cli
pop
aas
in
call
std
loope
xor
sbb
sbb
adc
call
aad
push
and
fnsave
lahf
pop
mov
aad
xchg
inc
dec
push
aad
imul
mov
dec
mov
jnp
add
in
cmp
add
dec
popa
sahf
sbb
aad
outsl
inc
xor
mov
lret
test
and
shr
xor
mov
pop
sbb
loop
xor
adc
iret
sub
inc
push
cmp
mov
xor
adc
sbb
cmc
adc
mov
sbb
lods
sbb
xchg
xor
outsb
in
fisubl
push
inc
ja
cmp
hlt
outsb
lock
fdivs
push
pop
xchg
push
data16
incb
add
dec
dec
push
std
into
xor
pop
cltd
sbb
jp
imul
dec
lods
adc
push
ljmp
mov
add
sub
imul
in
sti
out
xor
pop
clc
mov
and
cmpsl
mov
lods
imul
lret
pop
subl
in
and
mov
push
pop
nop
aas
or
lret
imul
roll
fisttpl
loopne
jge
mov
pop
mull
rorl
inc
out
repnz
ss
lock
pusha
jnp
es
xchg
insb
and
sbb
mov
testb
jno
clc
lahf
js
jle
xchg
out
inc
mov
loopne
clc
adcb
and
decl
insb
jnp
and
sahf
jg
fisttpll
popf
inc
fs
mov
mov
xchg
or
xor
js
imul
out
in
cmp
mov
xchg
ja
ja
jbe
fidivrs
aas
cmpl
cmpsl
dec
leave
sti
leave
sti
test
sti
shl
sar
aam
leave
sti
dec
sti
sub
or
jmp
cmc
push
mov
lahf
cmpsb
lahf
or
std
and
or
sub
leave
out
shl
adc
sar
adc
rcr
daa
mov
jp
rorb
pop
shr
dec
push
fs
shr
call
mov
out
aam
js
xchg
std
and
jp
jp
cmc
or
jnp
add
and
andb
dec
sub
insb
inc
mov
and
mov
stc
add
ret
cmc
lea
popf
jl
pop
sti
mov
outsw
pop
fucomi
add
clc
cs
xchg
je
aam
and
jle
testl
clc
add
and
lahf
ljmp
xchg
je
sub
es
push
mov
mov
sti
nop
daa
roll
lods
mov
cld
roll
mov
cmc
clc
ror
sti
insb
push
lods
rcrb
xchg
cmpsl
jmp
push
clc
pop
fisttps
jb
in
neg
icebp
dec
ljmp
mov
mov
inc
ss
icebp
addr16
add
mov
nop
ds
sbb
mov
sbb
test
out
iret
jge
test
nop
nop
scas
pop
or
or
adc
dec
pop
into
mov
jg
and
xchg
sbb
add
fstpt
mov
movsb
cli
gs
xchg
adc
jo
sub
push
add
fcomps
repnz
pop
and
subb
shrl
xchg
out
mov
sbb
mov
popa
pop
jae
test
sub
pop
pop
out
sarl
push
cmpsb
mov
cmp
icebp
pop
daa
aas
cltd
sbb
sti
dec
jle
lret
cli
out
xchg
ret
adc
inc
xchg
incb
push
cmc
das
insl
dec
xchg
lret
cli
add
mov
cmpsl
cmp
shlb
out
repz
imul
sbb
fsubrp
gs
popf
pop
popf
cmpsl
xchg
sub
sbb
fistpl
inc
std
mov
or
xor
push
pop
sbb
push
sub
shlb
or
into
push
xchg
cltd
cld
pop
sahf
aam
xor
inc
dec
mov
in
jne
lods
jge
lods
dec
xchg
loope
aam
xor
filds
mov
in
or
fiadds
jl
jmp
mov
add
sub
and
pusha
or
mov
mov
ret
xorl
and
mov
test
jbe
jne
fs
or
adc
sub
mov
enter
xor
ret
mov
in
mov
call
or
sbb
mov
xor
xor
into
loop
les
les
in
cmp
mov
fidivrs
aaa
es
aaa
outsl
test
aam
ljmp
cmp
outsl
xor
in
lret
cmp
mov
mov
pop
aam
xchg
mov
cmp
out
sarl
in
dec
je
cmpsl
sbbb
cmp
and
or
inc
jae
xchg
repnz
xchg
repnz
repnz
cmp
adc
inc
cmp
jmp
pop
inc
lods
xchg
dec
inc
lods
cmp
push
inc
mov
fidivs
xchg
mov
arpl
pcmpeqd
lds
cmp
pop
and
pop
fstps
push
daa
filds
fldlg2
mov
sbb
cmp
aam
sbb
popa
lock
jl
jmp
in
mov
xchg
xor
fistl
jmp
out
in
cwtl
mov
sub
cmpsb
xor
cmpsl
inc
cmp
mov
mov
fisttps
jp
pop
icebp
mov
dec
push
cli
jecxz
jno
jmp
and
out
test
loopne
aas
addb
cwtl
dec
adc
pusha
lea
loopne
mov
sarl
inc
mov
add
nop
mov
sbb
xor
cltd
lret
adcb
mov
loopnew
mov
adc
les
orb
sbbb
cwtl
cmp
cmp
pop
inc
mov
aaa
popf
lret
das
push
mov
inc
or
mov
and
testb
mov
push
enter
cmp
cmpsb
stos
push
test
lahf
push
idivb
jno
lods
movsb
ret
cmpsl
dec
cmp
inc
cmc
mov
lea
lret
std
fincstp
mov
pushl
lcall
pusha
ds
ss
int3
loopne
jbe
jle
out
and
cld
xchg
pushf
loop
jge
test
push
testb
lods
out
jg
sub
cld
push
fisttps
call
pop
out
sbb
sti
mov
mov
xchg
cli
sub
rcl
js
aad
sub
das
inc
xor
push
loop
in
mov
pop
dec
movsl
cli
loope
sub
xchg
pop
mov
es
insl
icebp
loopew
rorl
xchg
sahf
outsl
fdivrl
icebp
clc
dec
pop
jbe
sti
hlt
push
sti
fucomi
iret
not
and
cltd
pop
notl
lret
test
push
cmpsb
dec
push
movsb
xchg
js
xor
aam
mov
mov
jbe
push
cmpsb
addl
out
mul
add
in
xchg
nop
idivl
cmp
mov
movsb
pop
pop
or
rcl
cmp
cld
mov
cwtl
icebp
xchg
and
test
xlat
ljmp
leave
push
dec
jle
xchg
sbb
and
aaa
and
jle
es
dec
xchg
push
daa
pop
leave
in
or
ds
scas
xchg
fs
or
jg
inc
lahf
fmulp
xor
dec
add
jge
jb
bound
pop
mov
pandn
lahf
lahf
jne
jg
mov
or
mov
mov
dec
shlb
test
cmp
in
push
cld
rolb
inc
movsb
aad
sahf
xor
cmp
sbb
adc
call
mov
lods
jge
fstpt
ret
subl
mov
in
outsb
shll
shrl
clc
sub
push
test
jge
xchg
pusha
test
out
je
mov
or
out
lret
ljmp
stc
mov
in
in
jo
xchg
xchg
shlb
mov
cmp
aad
lret
sbb
sbb
rol
clc
test
or
mov
int3
adc
mov
mov
leave
pop
call
sahf
dec
shlb
lcall
inc
aas
aas
mov
outsb
add
add
mov
gs
push
dec
fisubrs
sub
jae
aad
lcall
jmp
stos
out
jmp
mov
xor
or
jge
or
lock
push
in
stc
clc
jp
jo
ljmp
pop
sahf
int
in
int
shrb
mov
cmp
lds
dec
aad
and
mov
out
test
push
jge
adc
aas
lahf
popf
mov
stos
mov
test
stos
fcmovbe
repnz
les
mov
in
inc
ucomiss
mov
adc
rcrb
bound
sub
gs
scas
aas
inc
inc
xchg
sub
das
push
fcmovu
push
pop
pop
in
inc
add
movsl
je
test
cmpsl
mov
xchg
hlt
xor
xor
jle
cwtl
pop
inc
fxch
lret
pop
cmp
psubw
sbb
xlat
pop
cltd
xstore-rng
cmpsl
inc
ss
pop
sbbb
icebp
scas
xor
rclb
pop
and
in
les
sbb
scas
int
xchg
rorl
xchg
jnp
test
insl
sbb
jle
int3
sub
or
sbb
or
xchg
mov
rep
pop
rcr
add
ljmp
fucompp
rolb
jnp
imul
scas
jecxz
inc
imul
inc
cmp
push
pop
mov
std
adc
adc
sahf
cmp
fbld
int3
dec
lock
mov
and
or
gs
popa
ljmp
sub
adc
fistl
icebp
addr16
push
cli
cmp
mov
mov
and
mov
and
sti
cwtl
jp
insl
rcrl
into
mov
jno
icebp
fisttpl
sbb
jp
push
ds
cmc
loope
pop
punpcklwd
and
mov
fwait
in
lret
mov
pop
pop
jg
pop
add
push
sub
pop
data16
imul
not
lret
popf
test
test
bound
loop
mov
xor
pop
sbbb
clc
mov
arpl
xchg
cld
push
out
repz
or
adc
sub
inc
xchg
fimull
data16
sbb
mov
gs
xchg
mov
pop
mov
xchg
jno
xchg
mov
jp
push
pop
xor
and
movsb
sbbb
sub
mov
push
lret
dec
inc
mov
daa
sub
mov
push
sub
ds
sahf
add
dec
loop
xlat
cli
sbb
pop
and
mov
hlt
rcll
aas
fidivrs
rcll
popa
cmp
pop
lahf
dec
xor
out
idivb
jo
mov
ds
xchg
mov
or
xchg
cmpsb
jae
xchg
ds
inc
inc
fisttpll
cmp
xchg
icebp
enter
sbb
cs
mov
int
lods
pop
and
negl
cmp
xor
pusha
cmpsb
jmp
xchg
insl
and
xor
js
sub
out
lods
aaa
xchg
imul
mov
mov
mov
push
adc
sub
mov
cmpl
shr
es
movsl
jmp
inc
mov
push
mov
movsb
aad
rolb
mov
xor
pop
fwait
cmc
je
enter
sbb
and
sahf
sbb
xor
pop
push
insl
repnz
movsb
fisubrs
fcmovbe
push
add
lahf
ds
push
and
push
shll
jmp
iret
scas
addb
js
pop
stos
hlt
lock
les
out
mov
jle
or
subb
and
or
and
mov
lahf
mov
call
jg
arpl
push
sub
xchg
std
xor
xor
dec
dec
mov
repz
sahf
jle
jbe
icebp
and
jno
push
mov
mov
test
dec
mov
xor
jb
icebp
sub
sbb
xor
sbb
sub
mov
rorl
xchg
dec
jle
or
pop
pop
xor
lds
iret
jae
mov
mov
mov
xchg
lods
mov
hlt
or
mov
stos
call
add
inc
adc
jmp
mov
mov
cmc
push
push
daa
mov
add
flds
test
lcall
movsb
xchg
mov
mov
add
jb
fcomp
adc
mov
adc
push
in
or
add
push
and
les
lea
out
sub
into
shrl
xor
mov
push
addr16
push
inc
ljmp
aas
imul
rorl
lret
dec
adc
adc
add
aam
insb
aam
push
loop
fnstenv
fsubrs
imul
cli
leave
outsl
push
or
dec
js
ss
xor
mov
dec
loopne
test
call
jne
xchg
sub
lret
jns
out
es
xchg
mov
adcb
ret
jle
ret
sbb
mov
dec
sub
mov
sbb
insl
cwtl
ret
or
ror
mov
cmp
xor
push
scas
sbb
aad
adc
ret
sahf
sub
add
or
dec
rcl
icebp
push
dec
fsubs
jbe
xchg
dec
mov
int3
imul
sbb
or
es
jne
andb
xchg
jae
mov
mov
sbb
sub
cmp
fwait
nop
pop
idivb
arpl
pushf
mov
into
jno
fdivs
inc
push
add
xorl
dec
pop
cmp
sbb
idivl
sub
dec
movsb
dec
mov
jp
cltd
ficomps
sbbl
push
cmp
nop
push
sbb
rorb
or
lahf
push
das
xchg
stc
jns
punpckhwd
mov
out
imul
imul
inc
add
mov
inc
hlt
mov
pop
scas
and
cmp
sarl
push
or
pop
xchg
repnz
jecxz
int
push
push
jae
jle
popf
jecxz
popf
lods
data16
dec
fcoml
cwtl
sub
in
pop
add
dec
sbb
sarb
sbb
adc
lea
mov
adc
imul
sbb
sub
fstpl
jae
out
sub
mov
push
ss
es
mov
test
cld
imul
fidivl
sbb
gs
mov
mov
and
test
testl
in
nop
inc
aad
orb
insb
cmp
xchg
repnz
inc
fs
xor
xor
jbe
lods
add
icebp
bound
int3
test
xlat
std
mov
sub
enter
pop
push
je
lret
in
scas
in
sbb
fildll
sub
or
mov
andb
insl
stc
push
pop
dec
out
aam
pop
xor
mull
ja
adc
sbb
test
sbb
movsb
dec
popf
repnz
adc
adc
lds
mov
and
je
nop
or
pusha
lret
push
ret
cmp
cltd
cmp
addr16
insl
stc
imul
pop
test
mov
fsubr
sub
fimull
loop
jb
sbb
xchg
sahf
loopne
and
mov
or
call
dec
aam
push
mov
push
sub
adc
aaa
or
loop
out
clc
addr16
jecxz
jns
test
int3
mov
pusha
pop
jne
inc
push
xchg
jnp
leave
mov
mov
add
lcall
sub
push
lret
xchg
mov
xlat
cmp
cmpsl
xchg
mov
jae
jge
cltd
xlat
mov
xor
jnp
mov
jl
js
negl
fbstp
test
mull
lods
xchg
dec
popa
das
jns
pop
jge
lds
mov
movsl
and
lea
dec
mov
or
rorl
dec
or
mov
xor
mov
in
mov
aad
data16
in
stos
xchg
mov
push
in
lea
and
cmp
lds
push
dec
enter
sbb
pop
movsl
mov
add
out
push
push
outsl
adc
mov
out
xor
incb
mov
lds
pop
loopne
pop
mov
ret
shll
scas
mov
sub
jp
sbb
movsb
xor
lods
movsl
ret
or
inc
hlt
xor
lret
imul
and
inc
mov
xor
cs
hlt
ret
sub
and
adc
xchg
stc
mov
xor
arpl
push
adc
out
outsb
repnz
jp
gs
fmull
loopne
adc
les
iret
fistpll
popa
insb
lret
test
mov
lods
mov
pop
jns
movsl
sbb
insb
xor
pop
test
mov
and
lahf
out
fists
mov
cmp
lret
dec
test
inc
mov
jne
adcb
or
sub
xchg
lds
or
mov
jno
mov
sbb
xchg
sti
xor
sbb
mov
pushf
mov
dec
mov
adcl
and
in
in
je
pop
scas
dec
mov
lods
add
sbb
push
pop
or
mov
cmp
stos
ljmp
xor
and
xchg
mov
imul
hlt
lock
or
jb
sbb
movsl
jge
sub
orb
imul
or
cmp
or
ret
cmpsb
test
pusha
pop
lret
sub
ret
add
out
dec
movsl
cmp
or
pushl
sub
or
xchg
xor
ds
push
xor
call
sbb
mov
add
jmp
dec
enter
pop
inc
data16
mov
mov
adc
pushf
sbb
adc
insl
mov
mov
orl
or
dec
xchg
sub
cmc
sub
inc
pop
loopne,pn
cmp
orb
pop
jmp
cld
inc
xor
aaa
push
sub
mov
shl
inc
test
clc
inc
into
sbb
mov
and
xor
pop
sub
fwait
scas
xchg
xor
scas
inc
stos
inc
mov
sbb
adc
cld
xor
gs
ret
sub
dec
cmp
lds
out
outsl
mov
adc
cmp
jne
leave
sub
insb
xchg
fmul
movsl
fsubrl
and
push
in
mov
addr16
in
push
mov
sub
cmp
js
es
jb
jge
sti
arpl
movsl
std
mov
xor
lods
push
in
lods
jb
push
pop
inc
xchg
sub
xor
fiadds
or
mov
mov
repnz
lret
es
mov
lds
mov
and
push
gs
sbb
xchg
pop
sub
mov
xor
xchg
loop
lea
movsb
mov
repz
jo
sub
movsl
cs
pop
dec
out
dec
fnstcw
adc
in
push
ja
scas
xchg
popf
aad
jmp
dec
sarl
xor
mov
push
gs
jecxz
inc
mov
mov
xchg
test
dec
inc
push
dec
pop
mov
mov
pop
mov
ret
dec
lds
lea
cs
mov
xchg
fistpll
adc
ret
push
into
push
xor
xor
and
jmp
mov
daa
pop
sub
pop
pop
mov
hlt
or
sub
in
inc
mov
outsb
or
repz
repz
cmovs
int
adc
call
les
rol
pop
push
mov
push
stc
cmpsb
sbbl
adc
sub
inc
cli
adc
bound
inc
stos
push
jae
addr16
cmp
sahf
jo
sub
rorb
push
dec
imul
cmpsl
scas
cmp
loopne
movsb
sahf
int3
int
lea
or
inc
push
shlb
stos
mov
mov
mov
imull
xchg
push
jg
mov
inc
pop
push
outsb
mov
fwait
and
sarb
push
sub
stc
sti
ss
adc
push
mov
mov
pop
repz
lds
fistps
mov
cmp
outsl
xchg
out
fmul
lret
or
jno
dec
aam
pop
lret
cmp
outsl
shl
mov
mov
inc
or
add
es
jne
sbb
xchg
mov
sbb
jno
jnp
stos
dec
fs
pusha
and
dec
int
sub
jp
dec
iret
rcrb
icebp
jae
lar
pop
push
cmpl
movsl
push
sbb
loop
mov
xchg
dec
sub
xor
xor
jbe
les
rclb
pop
sbb
adc
jl
push
xchg
pusha
int3
dec
lret
mov
adc
jo
dec
adc
fcmove
outsl
mov
mov
outsb
dec
add
das
push
jns
ret
lea
nop
roll
cltd
ficompl
shlb
out
loope
push
outsl
xchg
jbe
cmp
lock
clc
push
cwtl
push
mov
pusha
pop
sub
jg
or
mov
and
sbb
and
test
enter
sub
and
inc
dec
stc
dec
jbe
stc
lea
sbb
add
fcomi
jecxz
jbe
icebp
loopne
pop
jno
sub
inc
aam
adc
dec
popf
mov
and
popf
ret
mov
inc
pop
xor
cmc
mov
stos
pop
insl
clc
decl
dec
sub
jecxz
sbb
loopne
push
sub
pusha
mov
repz
jnp
dec
les
dec
pusha
mov
sub
pushw
stos
push
add
pop
pop
add
lods
mov
mov
pop
mov
pcmpgtb
test
rclb
adc
shrb
nopl
loop
inc
stos
add
mov
sub
pop
or
out
push
sbb
incb
sbb
mov
mov
mov
inc
cmp
leave
jmp
and
movsl
sti
mov
cmc
dec
and
cmp
dec
dec
cmc
jb
jb
cmpsl
ljmp
pop
inc
and
jmp
scas
test
enter
ror
out
scas
gs
cmp
cmpsb
outsl
leave
mov
jo
test
pop
adc
in
mov
cmc
fsts
jl
dec
mov
xchg
or
cmc
insb
xor
sbbb
sbb
jle
arpl
fnsetpm(287
fnstcw
jecxz
test
or
xor
push
mov
inc
ret
jl
jno
push
out
aam
inc
adc
insb
jo,pt
ret
in
cli
adc
mov
xor
cmp
pop
outsl
int
sub
dec
push
pop
add
xor
xor
enter
cmp
or
int
hlt
dec
add
jecxz
std
lcall
inc
or
cmp
fsubs
dec
in
xor
bound
sub
lods
jge
aas
cltd
add
xor
pop
int
mov
xor
push
inc
fiaddl
mov
ficomps
jno,pn
adc
jb
mov
jl
fistpll
cltd
lcall
cltd
mov
std
sbb
fs
dec
sbb
pop
pushf
sbb
mov
mov
add
inc
shl
pop
mov
push
jle
pop
xchg
mov
fs
in
imul
ficomps
xchg
pop
leave
lock
xor
cltd
jb
cmp
dec
mov
xor
mov
adc
mov
fistpl
mov
out
add
jne
sbb
inc
dec
mov
dec
rorl
sub
cli
push
lock
stc
or
mov
ret
ja
dec
ret
or
mov
pusha
and
test
mov
mov
jns
lock
mov
cld
test
icebp
fmull
in
dec
les
loop
sahf
jno
sbb
fisubs
mov
pop
gs
cwtl
push
ret
mov
in
pop
jns
repnz
pop
cmp
das
push
repnz
scas
and
scas
sbb
xchg
sub
loopne
xchg
loop
aaa
gs
or
inc
sbb
into
das
test
lock
push
sub
xor
mov
jecxz
lahf
xchg
cmp
pop
mov
sub
sub
add
jl
jns
cltd
jmp
lret
inc
mov
orb
jb
shrl
and
mov
fnstsw
xchg
movsl
lea
mov
repz
insl
cltd
clc
mov
adc
fwait
out
inc
push
adc
xchg
ja
scas
test
or
xchg
mov
out
inc
sub
xchg
js
jnp
into
cld
pop
fwait
jo
scas
fstpt
add
in
jmp
add
test
mov
je
ret
es
pop
jbe
jnp
cmpsb
dec
or
pop
daa
xchg
ljmp
xor
adc
lret
fistpl
fldenv
inc
inc
pop
leave
sbb
rep
jmp
inc
adc
xor
pop
sub
sbb
enter
fisubrs
or
adc
adc
gs
fdivs
add
pop
mov
mov
sbb
mov
xlat
push
pop
scas
mov
fcmovb
cmc
push
xchg
dec
adc
sub
inc
lds
xlat
xchg
mov
sbb
xor
push
das
popl
dec
adc
mov
call
jae
shr
decl
dec
jge
fmul
push
mov
and
shl
mov
jle
arpl
stc
and
lock
pushf
xchg
es
imul
jg
xor
fsubrl
imul
mov
stos
ljmp
aam
pushf
ficompl
mov
push
shrl
cld
jo
adc
in
cmpsl
leave
xchg
dec
mov
sbb
push
pop
mov
or
mov
push
jnp
fsubr
insb
sub
lock
std
fistl
add
sub
cmp
sahf
push
adc
sti
movsl
fisttps
sub
mov
fincstp
int
in
test
pop
pushf
ds
mov
and
lcall
aad
imul
mov
sar
mov
push
cmpsl
cli
movsl
into
xchg
jge
loop
fucom
adc
sbb
rcrl
dec
rcrb
inc
mov
jae
dec
clc
inc
pop
jmp
dec
in
pop
mov
popf
cmp
rorl
lret
xchg
pop
aam
push
movsl
cmpsl
push
jmp
cmpsl
imul
inc
lret
mov
jb
adcl
xchg
mov
lods
xchg
sbb
out
fcompl
adc
or
loop
dec
jbe
adc
cmc
int
and
iret
xor
jmp
mov
inc
outsb
int
mov
ja
fistpll
ja
lcall
cmp
push
lcall
addb
and
jmp
stos
aad
je
popf
shrb
pop
js
adc
cltd
mov
daa
outsb
fxam
mov
in
jns
sub
adc
sbb
and
dec
cmpsl
repnz
ja
sbb
arpl
mov
xor
orb
ror
push
and
insl
push
lret
pusha
pop
jecxz
xor
jl
cmp
jno
daa
in
inc
adc
mov
mov
lcall
xchg
mov
lea
mov
pop
adc
movsl
rolb
scas
mov
and
or
lock
aaa
mov
sub
mov
sub
mov
push
vmwrite
mov
mov
sub
inc
mov
repnz
dec
or
cmp
std
ret
int
sti
test
sub
mov
and
test
jl
jg
lret
addr16
push
out
mov
data16
je
dec
push
adc
and
mov
mov
inc
mov
or
pop
cmp
mov
mov
incl
adcb
dec
mov
mov
inc
orl
aaa
les
mov
mov
mov
push
ja
push
movsb
sahf
fs
inc
inc
jne
nop
sbb
xchg
rol
stos
pop
cmpsl
push
mov
movsl
jg
add
adc
or
mov
rcrl
jns
sbb
dec
insb
jne
jecxz
push
fcompl
mov
out
pop
aaa
mov
or
xchg
lcall
jbe
enter
loope
mov
pushf
fucomi
sub
mov
add
add
pop
ja
push
movsb
mov
les
mov
btc
ja
lock
mov
adc
cltd
jge
jle
pop
test
hlt
loop
scas
xchg
dec
jl
jmp
mov
sbb
fs
and
mov
scas
popl
and
add
dec
pop
adc
call
pop
ljmp
fnsave
fiadds
pop
leave
mov
lds
popa
mov
xor
fucomi
movsb
std
adc
negb
iret
xchg
pop
xor
pop
enter
sbb
jmp
mov
pop
sbb
clc
inc
xchg
xor
out
pop
rol
sub
fsubrl
jp
lcall
hlt
repz
and
mov
inc
add
or
xchg
pop
andl
gs
fcmovne
test
out
in
adc
pushf
idivl
sti
jecxz
and
in
or
movsl
cmp
iret
ja
inc
shld
pop
dec
divl
jecxz
test
dec
or
xchg
xchg
jmp
out
push
dec
xchg
mov
dec
jbe
dec
pop
inc
mov
iret
out
push
add
fs
jne
mov
inc
daa
sbb
shll
push
jmp
cmp
xchg
popa
mov
dec
mov
lcall
lods
mov
xor
pop
lods
inc
hlt
dec
add
sahf
adc
jnp
outsl
repnz
mov
or
adcb
cld
sub
cmp
imul
outsl
jmp
sub
rolb
push
sub
mov
mov
xor
add
mov
dec
pop
dec
pop
out
and
cmpsb
pop
xchg
mov
dec
mov
xor
dec
pop
xchg
sbb
loopne
push
pop
cmpsl
pop
jo
mov
or
ss
nop
mov
sub
fmull
mov
jbe
mov
shlb
mulb
pop
sbb
lock
mov
filds
fisttpll
cltd
mov
jae
jge
andb
mov
and
jmp
or
cmp
es
test
mov
cmpsb
push
shlb
filds
push
push
js
pop
mov
lock
jp
es
and
xchg
pushf
loop
dec
sbb
ret
dec
rol
fsubrs
imul
hlt
mov
jb
jae
mov
jmp
sub
std
repz
ret
sbb
pusha
xchg
mov
ror
imul
mov
loopne
cmp
ss
inc
adcb
popa
stc
pop
xor
aam
shr
xchg
dec
mov
mov
mov
mov
push
loopne
lahf
mov
jae
adc
pop
inc
popf
xchg
jae
jge
cwtl
scas
cs
outsl
jecxz
dec
rol
inc
jg
daa
fimull
sar
and
cs
imul
repz
cltd
pop
adc
roll
inc
and
xchg
inc
fcomip
mov
sbb
js
cmp
pop
xchg
mov
mov
insb
cmp
mov
pop
cmpsl
push
aad
leave
stos
mov
repz
test
shr
sbb
jnp
das
mov
inc
mov
mov
mov
mov
mov
or
lret
jl
inc
lods
daa
frstor
inc
dec
pop
push
cmp
mov
dec
push
sbb
xchg
mov
insb
sub
push
push
push
jne
stos
shll
mov
inc
xchg
shlb
inc
adc
popa
mov
data16
and
add
ret
xchg
and
adc
lret
jne
fimull
inc
push
inc
adc
or
inc
stos
mov
jno
xor
jmp
iret
mov
idivl
idivl
rcr
test
mov
fildl
or
jno
invd
mov
xor
xor
test
popa
loopne
dec
repnz
aas
mov
add
jmp
outsl
push
outsl
popa
loopne
or
lret
pop
fmuls
mov
fisubrl
push
in
fwait
adc
iret
cmpsb
jge
cmp
cwtl
inc
andb
xchg
fs
add
ds
xchg
dec
inc
jl
test
and
filds
mov
mov
xor
push
pop
iret
sarb
shr
subb
fadds
out
mov
jnp
sti
push
rcll
sbb
xor
xor
pop
jo
add
xchg
dec
stos
mov
cmp
fsubr
or
or
cmpl
lods
sahf
inc
insl
loope
sbb
push
mov
fimull
fwait
cli
mov
mov
and
fistpl
out
or
mov
mov
std
pop
mov
adc
je
dec
mov
loop
jne
xor
testb
xlat
stos
fmuls
xor
out
sbb
test
rolb
ja
or
jmp
pop
push
sbb
sbb
js
pop
and
add
testl
mov
ret
inc
icebp
xor
insl
cmp
mov
pop
es
mov
scas
xchg
int3
xlat
mov
mov
insl
dec
rcr
jns
sahf
fsubl
mov
xor
jno
adc
sub
lahf
push
cmpsl
xlat
cmpsb
jbe
insb
mov
push
jecxz
jl
fnstcw
negl
negb
jl
mov
icebp
mov
xorl
js
mov
int3
outsb
iret
sbb
push
jb
data16
xchg
xchg
and
jge
mov
int
adc
addr16
add
push
fstps
adc
lret
lods
in
int3
lods
into
push
stos
cltd
cmp
adc
clc
loope
mov
cmp
xor
xor
and
stc
fs
in
les
int3
icebp
shll
mov
js
insl
inc
xlat
sbb
pop
daa
fmull
sub
shlb
imul
jmp
jno
leave
xor
or
fs
aad
arpl
dec
pop
mov
push
je
sbb
loop
pop
mov
xor
jge
jbe
cli
std
aam
aas
xchg
in
cwtl
xor
cltd
movsb
jb
inc
jnp
call
pop
xchg
mov
jmp
and
fistpll
sub
repnz
ret
lahf
mov
inc
popf
arpl
lret
mov
rcll
nop
sub
in
mov
pop
sahf
sbbb
adc
in
mov
push
cmpsl
js
dec
xchg
icebp
pop
insb
jo
push
mov
jg
push
or
pop
inc
mov
or
sbb
mov
shl
in
int
mov
lods
xor
andl
and
iretw
dec
in
jnp
rcrl
cmp
cmp
push
push
dec
mov
cltd
or
repnz
xor
or
lods
add
sahf
push
dec
mov
adc
shll
push
pusha
out
ss
xchg
int
xchg
int
mov
jns
je
arpl
jg
sbb
popl
jne
lret
test
pop
xchg
cmpsb
mov
je
sti
or
cmp
or
pop
add
pop
test
lods
push
cmp
add
mov
xor
mov
xor
scas
xor
cmc
mov
into
das
dec
cmp
sarl
loope
pop
scas
repz
mov
testl
mov
aaa
popa
sbb
add
out
dec
xor
mov
rolb
dec
fldcw
mov
and
inc
cmp
je
enter
mov
mov
sbb
adc
jns
cmp
out
pusha
jns
cmp
lock
add
mov
ja
jmp
sbb
lea
push
sti
mov
dec
ljmp
xor
mov
int3
xor
mov
aas
adc
mov
xor
das
fs
push
push
lcall
out
add
scas
outsb
decl
or
fnstsw
mov
sbb
push
orl
jb
cmp
cltd
push
push
iret
div
std
sub
popf
dec
sahf
xor
xor
lds
or
mov
loope
in
cld
inc
inc
xchg
mov
add
xchg
and
popf
stos
cmp
mov
data16
neg
mov
aam
xor
rcrl
cs
lock
js
cmc
jecxz
ret
push
push
jo
lods
xorb
add
xchg
sahf
jecxz
inc
test
push
fwait
cmpsb
adc
js
xchg
jns
out
cmpl
popa
insl
subb
mov
hlt
xchg
sub
pusha
adc
xor
test
jne
ds
fisubrs
mov
mov
je
ret
scas
decb
test
pushl
lds
push
jge
sahf
sti
in
jl
addb
out
mov
scas
and
ljmp
pop
icebp
xor
icebp
scas
pop
mov
dec
mov
and
mov
or
and
jp
icebp
cmp
lea
xchg
mov
mov
pop
mov
inc
test
add
cmp
jecxz
ret
lret
mov
stos
iret
test
cmp
mov
jbe
push
repz
lea
mov
push
or
popa
and
shlb
in
xor
frstor
and
xor
sbb
es
in
jnp
pushf
jl
scas
adcb
or
clc
jl
add
pop
adcb
sbb
ror
shlb
btc
dec
jno
lret
pop
pop
dec
xchg
jae
ja
enter
repnz
cmp
icebp
test
out
adc
sbb
or
and
in
sub
stos
sbb
dec
pop
jmp
xorb
sbb
add
fdivrl
xor
jge
out
fwait
les
imul
sub
out
sub
mov
in
imul
or
imulb
lahf
and
xor
loop
xchg
cmp
push
mov
stos
ret
fadds
xor
data16
xor
shr
ret
iret
xchg
test
sbb
sub
popa
insb
dec
sub
out
aad
cwtl
hlt
addr16
and
mov
ljmp
cmpsb
mov
out
jb
xlat
jg
mov
jecxz
clc
and
fistpll
sbb
inc
add
test
xchg
testl
push
adc
sarb
jmp
fdivl
imul
xor
mov
add
push
je
push
adc
hlt
mov
lock
xchg
int3
scas
dec
adc
sarl
cmpl
std
test
mov
sahf
setbe
clc
cmp
lahf
fists
fsubr
push
in
jno
dec
out
js
pushf
xchg
push
pop
repz
and
mov
hlt
repnz
jp
ljmp
aad
lret
nop
mov
xor
andl
pop
jle
fwait
dec
or
pusha
test
fildl
jmp
sbb
repnz
aas
jne
jmp
jle
sbb
add
add
sti
inc
push
adc
jno
das
mov
ds
xlat
sub
mov
ja
adc
jb
add
xorb
sbb
and
lods
add
inc
and
mov
rclb
add
pop
or
pop
pop
push
lock
push
jl
jo
sbb
mov
xchg
and
mov
cmp
jne
add
mov
adcl
dec
test
sub
lds
mov
xor
cs
aas
jnp
lock
inc
in
sbb
sbb
clc
mov
in
mov
les
xor
pop
cmc
fmull
push
push
lods
clc
push
mov
aad
pop
cs
and
fdivrs
xchg
mov
pop
fnstenv
shll
cs
jb
push
fstp
repz
je
jae
xor
shlb
sbb
orb
and
fwait
imul
add
incl
jno
test
or
mov
idivb
adc
xchg
cld
jmp
add
outsb
fnstcw
insb
lock
lds
sub
enter
ret
xor
jmp
xchg
in
stc
cwtl
add
ror
lods
fdivs
push
jno
or
popa
test
pop
popa
stos
lds
scas
cmp
mov
popa
sbb
mov
pop
jno
inc
cmpsb
shlb
das
pop
xor
fcmovnb
fwait
add
adc
xor
jle
mov
bound
decl
lret
das
jae
cmp
inc
faddl
sbb
std
dec
pop
mov
xlat
leave
inc
into
cmp
data16
jmp
lds
repz
in
loop
sbb
and
cs
push
pop
mov
test
scas
inc
jo
mov
push
and
add
cwtl
out
in
push
leave
insb
xor
xor
adc
mov
push
pop
or
ret
push
sti
push
pusha
scas
mov
jns
push
pushf
adc
mov
stos
lods
sub
xor
cltd
test
adc
xchg
inc
ds
xor
in
arpl
or
jae
inc
xor
incl
xchg
rol
loopne
test
xchg
pop
jb
push
mov
ss
stos
dec
sub
sub
sub
iret
ret
jl
pop
aas
mov
inc
inc
sub
mov
popf
in
or
cmpsl
push
sbb
cmpsl
punpckldq
mov
notl
xchg
adc
test
mov
jge
mov
gs
adcb
clc
xor
lock
dec
add
push
mov
dec
jecxz
xchg
inc
dec
mov
stc
or
jmp
sbb
push
push
push
and
jae
or
pop
push
loop
out
test
out
orb
hlt
mov
movsb
mov
roll
cmp
nop
popa
lea
outsl
into
fistl
and
popf
data16
pop
adc
orl
imul
pop
add
mov
mov
mov
sbb
cmpsl
sub
sbbb
cmc
or
jmp
imul
mov
loopne
xchg
sub
pop
in
xchg
push
hlt
mov
cwtl
and
test
popf
leave
cmc
xchg
mov
outsb
adc
divb
lock
xor
sub
xor
push
cmpl
adc
rorl
xchg
add
fldenv
add
or
sbb
pop
cmc
jp
ret
cmpsb
jne
mov
divl
stos
mov
scas
gs
jbe
jb
jp
fwait
out
mov
push
pop
xchg
bound
push
leave
mov
mov
or
sbb
pop
cmp
xchg
test
hlt
pop
inc
in
push
das
sub
mov
sub
scas
sbb
lahf
xor
stos
in
fs
loope
jl
inc
cmpsb
ljmp
dec
mov
les
and
dec
xlat
add
fs
outsb
or
jo
mov
jo
xchg
movsl
xchg
mov
xchg
ds
xchg
data16
push
inc
testl
inc
cmp
xchg
xchg
xchg
sbb
push
lret
jnp
xchg
insl
dec
and
cwtl
adc
ret
or
fisttpl
sub
rcl
xchg
dec
in
sbb
sbb
insb
or
std
add
inc
sub
xchg
inc
mov
cltd
loope
lret
inc
mov
sub
icebp
push
fsubrs
fnstcw
ror
add
sbb
jp
mov
outsb
or
add
xor
adc
xchg
push
jmp
sub
xchg
xchg
pop
scas
cld
stos
test
mov
or
adc
in
pop
pop
das
fcmovne
adc
sbb
push
fsubrs
lcall
push
jp
cmpsl
adc
idivl
icebp
push
and
les
or
movsb
mov
adc
adc
xchg
pop
scas
fnstenv
rcl
mov
xchg
jl
rclb
lcall
jmp
jns
push
cmpsl
repnz
xlat
mov
cmp
aad
int3
push
mov
pop
push
add
jb
mov
shr
inc
stos
cltd
push
outsb
lds
xchg
es
xor
sahf
sbb
loop
push
repz
and
mov
push
loopne
sbb
pop
inc
enter
aad
adc
cwtl
adc
dec
fwait
dec
subl
push
aaa
movsl
pop
sub
sub
inc
pop
cld
insb
adc
icebp
or
sbb
push
sbbl
mov
mov
and
mov
gs
xchg
jl
xlat
jl
outsb
mov
xor
mov
or
adc
cmc
mov
sti
adc
mov
rcl
or
mov
push
test
roll
outsb
test
sub
aaa
icebp
movsb
inc
cltd
add
cwtl
inc
rcll
xchg
pushf
mov
xchg
out
rcr
mov
test
push
dec
xor
ret
in
pop
js
or
imul
hlt
popa
iret
xchg
adc
mov
adc
inc
add
sti
fwait
ds
xor
leave
jb
sbb
mov
or
mov
cmp
mov
mov
or
outsb
and
lds
xchg
sbb
push
int
cmp
hlt
or
cmp
mov
mov
pop
mov
aas
push
jns
pop
inc
popa
loop
in
fdivrs
idivl
cli
movsl
rcl
pushf
popa
sti
cmp
and
sub
ss
xlat
sbb
stc
cltd
das
mov
iret
js
mov
insb
jae
imul
cmpsb
mov
sub
gs
mov
and
pop
mov
add
adcl
divl
fnstenv
aaa
gs
cmpsl
mov
xor
lods
and
out
inc
fstl
sub
aaa
fwait
sub
outsl
jmp
loope
sub
cld
add
pop
idiv
pop
and
push
pop
pop
mov
mov
inc
mov
movsb
ljmp
cld
xchg
roll
pusha
les
call
cltd
test
push
call
into
pop
aad
dec
inc
lret
add
sbb
jecxz
or
jp
mov
xchg
fnstenv
int
mov
jb
sub
adc
mov
sbbb
dec
mov
push
fs
hlt
gs
movsb
cli
aaa
cmc
mov
lahf
push
mov
jno
jmp
adc
xchg
test
scas
cltd
and
outsb
popa
xchg
aaa
pop
push
sub
es
js
aas
add
daa
push
jno
mov
outsl
mov
sub
cmp
jg
sahf
lds
stc
jg
xchg
pop
fldpi
out
lock
movsl
mov
int3
pop
mov
lret
sbb
dec
sbb
les
enter
cmp
cmp
in
sbb
sahf
pop
and
les
jmp
inc
je
in
into
or
call
in
push
jbe
xchg
fdivrs
loope
cmp
das
aad
mov
clc
dec
push
fcompl
pushl
mov
shrl
push
push
add
call
lcall
test
roll
repnz
dec
push
inc
cld
adc
mov
xorl
or
insb
pop
movsl
add
and
shl
cli
in
jb
push
sub
cmc
cmp
insl
orb
mov
cld
mov
lods
pop
repz
cs
scas
std
out
sbb
gs
out
pop
call
insl
sti
shr
push
sti
mov
insb
sahf
add
test
cmpsl
jo
in
add
and
dec
cmp
out
adc
inc
and
mov
mov
mov
inc
push
bound
sub
aaa
lods
out
mov
insb
movsb
push
das
mov
aad
sub
movsl
shufps
lcall
xchg
jno
or
js
vmptrld
mov
sub
xchg
pop
ss
xor
sub
loope
call
sti
adc
push
shl
cmp
scas
pop
inc
mov
sub
adc
cmp
cmp
popf
xor
insb
mov
xchg
pusha
jo
sarl
dec
cmp
sub
cmpsl
xlat
testl
sbb
xor
jmp
adc
cld
scas
nop
push
repnz
xor
and
movsb
int
sub
adc
xor
mov
sbb
inc
push
std
push
int3
and
cmp
cltd
mov
daa
mov
sub
add
loope
pop
movsb
pop
dec
std
mov
ljmp
clc
xchg
outsl
in
dec
popa
pop
mov
movsl
push
push
mov
std
aas
fcoms
xor
xchg
xlat
push
jecxz
sbbb
enter
imul
clc
outsl
xchg
and
sbb
jb
adc
or
fiaddl
lock
insl
mov
mov
push
push
jb
std
and
div
jl
push
and
stc
sahf
jns
das
cld
cld
jecxz
jb
and
mov
repz
orb
nop
test
lods
mov
push
cld
js
mov
test
inc
or
mov
cbtw
xchg
out
and
gs
dec
in
jne
pop
adc
mov
sub
aas
mov
cmc
loopne
pop
inc
lret
sub
mov
xchg
mov
jns
je
loope
pushf
mov
jns
add
cwtl
gs
mov
push
in
rclb
add
out
xchg
xchg
fwait
adc
push
dec
mov
insl
or
fdivrs
pop
shl
xlat
add
js
xor
ret
dec
and
inc
sub
cmc
adc
or
pop
roll
push
jle
jmp
lock
xor
enter
jge
ljmp
ss
imul
cmc
outsl
jl
add
orb
test
pop
mov
imul
cmp
and
aaa
add
mov
cmp
xor
daa
mov
nop
test
lock
adc
mov
adc
inc
inc
jg
mov
dec
pop
sti
pop
orps
aam
lods
inc
out
cmp
pop
rcrl
dec
in
inc
js
jmp
sub
outsb
push
fsubrl
push
jle
lods
mov
lahf
sahf
inc
add
sub
leave
xlat
adc
fnstcw
nop
cli
mov
into
je
add
dec
adc
shl
popa
sbb
mov
lds
pop
xor
test
rclb
dec
jnp
mov
push
lahf
cld
sti
icebp
jmp
fistpll
jge
jmp
jmp
fisubl
and
fidivrs
outsl
mov
jle
in
ljmp
repz
push
cld
jmp
nop
xorl
mov
sub
inc
imul
inc
pop
ljmp
mov
inc
fcomip
add
inc
or
push
mov
inc
mov
lahf
mov
sbb
jge
inc
test
mov
shl
rcr
fistl
adc
mov
add
imul
aam
nop
pop
test
mov
add
shlb
mov
xchg
rcr
mull
mov
insw
std
fisttpl
sbb
divb
jb
push
push
add
add
insl
test
ljmp
mov
pop
repz
loopne
lds
xchg
jnp
out
mov
xchg
stc
incb
adc
dec
jecxz
test
adc
rcll
cltd
out
sarl
cmp
enter
jbe
xor
gs
jno
mov
mov
push
shrl
stos
dec
imul
lods
jnp
out
sub
push
notb
mov
cmp
cwtl
cmp
mov
test
jo
jb
les
xchg
cld
leave
inc
sarl
xchg
adc
push
or
inc
mov
jno
add
jmp
cs
xor
pop
lods
or
das
cmp
mov
hlt
cwtl
ljmp
inc
addr16
push
rolb
or
pop
stos
data16
inc
repz
sub
xchg
mov
imul
aas
sbb
sub
mov
sbbl
fstpt
sbbb
ss
outsb
adc
outsl
stc
mov
pop
mov
js
adc
mov
hlt
inc
or
pushf
sub
mov
enter
xor
mov
push
sub
adc
js
push
pop
xor
jge
pop
stos
test
xor
sub
mov
sub
int
imul
push
jae
adc
out
jge
loopne
ja
cmpb
cmc
cmp
mov
lock
push
popf
jge
mov
lock
ds
cmpl
or
cmp
mov
sbb
pushf
and
cmpsb
add
or
mov
add
int
fstpl
xchg
jb
adc
cmpsb
aam
mov
adc
xchg
dec
mov
int3
mov
imull
jge
pushf
out
adc
jbe
jbe
data16
test
xchg
xor
dec
xchg
push
fsubs
jo
ficomps
pop
out
fidivs
sarb
push
aaa
cmpsb
leave
test
out
sbb
es
imul
hlt
inc
addr16
in
sub
add
push
cmpsl
or
mov
jecxz
adc
adc
fwait
mov
or
push
jge
sbb
ja
movsb
sbb
pop
fists
inc
cld
add
dec
and
or
adc
jne
push
test
arpl
pop
outsb
dec
inc
cs
dec
jnp
aam
inc
jb
xchg
mov
xchg
inc
push
call
fcompl
adc
mov
ljmp
movsb
or
lcall
pop
bound
mov
daa
inc
mov
pop
push
mov
dec
std
and
add
popf
negb
push
fnstsw
imul
sbb
lret
data16
push
stos
mov
add
imul
ficompl
jo
pop
xor
je
mov
inc
inc
lock
sti
in
mov
mov
xchg
out
mov
lods
icebp
int
dec
adc
sub
in
sbb
adc
jmp
inc
arpl
es
sahf
call
cmc
pop
sbb
cmp
pop
or
icebp
add
or
pop
aam
inc
sahf
jl
insb
mov
mov
inc
xchg
test
adc
pop
cmp
inc
cltd
out
stos
and
cwtl
clc
jns
push
in
jo
mov
pop
mov
mov
inc
repz
jmp
push
pop
cmp
cmpb
mov
pushl
push
jp
decl
in
xor
push
data16
inc
mov
fidivs
jl
mov
in
inc
mov
std
and
pop
mov
loope
hlt
int3
xor
cmp
cmovg
aas
dec
aas
inc
cmp
jp
outsl
int3
or
ja
cmp
mov
mov
xchg
sub
jmp
mov
mov
fisttps
jle
out
and
xchg
jle
pop
idivl
pop
test
xlat
sub
mov
lods
out
cmc
add
jbe
ficoms
pop
and
mov
shll
fcmovne
mov
pop
jmp
aas
dec
mov
lcall
ficompl
xchg
std
dec
loop
jno
pushf
cmp
icebp
inc
add
push
mov
pop
or
int
lret
das
or
ds
mov
neg
or
adc
cmc
sti
mov
repnz
pop
inc
je
cmp
dec
andl
call
inc
jno
sahf
mov
push
mov
fldenv
cs
mov
stc
imul
inc
je
imul
mov
push
and
xor
dec
divl
jge
in
int3
pop
dec
mov
cmp
in
mov
femms
loope
stos
push
xchg
push
call
or
out
cli
aas
xor
cmc
es
fildl
call
into
jge
enter
loope
mov
fcomip
jmp
lahf
dec
xor
adc
fcmovbe
iret
lcall
cmp
mov
adc
mov
lret
push
cwtl
and
mov
test
cmpsb
cwtl
and
adc
stos
or
pop
stc
movsb
int
popa
add
push
dec
inc
mov
and
add
adc
and
dec
fistpl
sarb
sbb
mov
outsl
jo
mov
or
sub
outsl
push
mov
jg
mov
sbb
cmp
or
dec
cmc
mov
loopne
std
add
push
sarl
cmp
mov
sbb
fisubrl
scas
and
adc
fdivl
push
stos
jns
mov
test
or
inc
call
sub
xchg
jp
mov
or
hlt
ds
sar
fisttpll
jecxz
pop
hlt
aas
xchg
add
sbb
jb
leave
arpl
mov
iret
push
out
mov
in
cli
and
jmp
les
out
pop
push
scas
adc
xchg
push
testl
lret
aam
stos
inc
popf
jno
push
and
and
push
fmul
out
cltd
mov
mov
xlat
int
imul
pop
shll
out
in
xchg
bound
adc
mov
push
sti
push
lcall
and
sub
jae
dec
pop
movsb
loope
fnstenv
imul
mov
lods
and
pop
inc
mov
mov
mov
scas
sbb
lahf
into
rclb
outsb
call
push
xchg
fstpt
mov
test
outsl
xchg
jo
and
add
in
pop
ror
out
loop
mov
outsl
pop
sbb
jg
adc
shlb
xor
pop
shlb
emms
mov
xor
ret
and
repnz
lea
leave
mov
popa
push
sub
mov
stc
xor
repz
xchg
push
dec
pushf
dec
imul
sahf
insb
adc
xor
mov
jg
bound
jb
ds
pop
aad
adc
test
mov
xor
scas
stc
mov
and
sub
xchg
aad
xor
jecxz
cmpsb
icebp
pop
testb
cmpsl
cmp
or
xchg
pop
or
sbb
jp
mov
out
aam
inc
je
push
in
jle
insl
cld
add
fidivl
adc
scas
fidivrs
xchg
cmp
cmp
xor
addr16
xchg
push
or
lcall
mov
push
dec
push
imul
stos
xchg
dec
cli
mov
sti
das
adc
jmp
mov
test
cli
xchg
cs
cmp
add
ss
dec
mov
ficoml
cwtl
popa
lret
cmp
pop
xorb
fstps
dec
sbb
xchg
out
loope
out
pop
in
dec
sbb
sbb
call
sbbb
insb
clc
cli
std
push
aad
ds
popa
stc
divb
jl
testb
fnstsw
xchg
mov
inc
or
hlt
xchg
pop
movl
imul
je
xchg
and
scas
adc
dec
cwtl
push
das
adc
push
xchg
mov
in
fwait
addr16
xchg
out
dec
int
cs
out
pop
add
ljmp
mov
jl
jb
cmp
xchg
dec
xor
outsl
mov
and
lcall
insb
lods
push
aad
jg
mov
jle
out
xchg
sub
inc
xor
bound
pop
and
mov
roll
sarl
jo
mov
xchg
xchg
mov
jg
add
or
jo
xchg
mov
das
mov
fistps
xlat
mov
int3
and
out
das
sarl
sbb
imul
add
mov
shrb
dec
and
sbb
into
pop
sub
cmpsb
and
ret
pop
push
rorb
cmc
and
mov
push
pop
and
xor
sub
cmc
cwtl
push
cli
ds
jo
push
cmpsl
mov
xor
lds
sub
add
jnp
sti
cli
rcr
jge
scas
jb
or
xor
push
add
xor
inc
sbb
fisubs
mov
xchg
int3
ret
aad
jne
add
jle
and
dec
xor
enter
in
loopne
shlb
pop
jl
cli
aad
rcr
outsl
popl
addr16
out
incb
cmp
xor
ret
cli
mov
xchg
movsb
xor
pop
decb
xor
fistpl
test
adcb
nop
shrb
je
jbe
inc
lcall
out
mov
cmp
adc
or
sub
bnd
test
nop
push
outsl
sub
jb
outsl
fmull
imul
daa
sub
ds
mov
jae
dec
push
mov
shlb
popf
adc
xchg
stos
aad
out
adc
ret
or
pushf
mov
pop
mov
sub
add
inc
sbb
fldenv
adc
daa
adc
mov
outsl
mov
inc
lret
cmp
xchg
pop
repz
push
mov
fcompl
push
pop
lahf
mov
lret
mov
adc
pop
jl
repnz
cmp
sbb
mov
aaa
dec
mov
je
jmp
mov
inc
sub
dec
sbb
mov
pop
add
jge
out
pop
push
mov
outsl
loope
add
add
in
cld
adcb
cltd
jb
jmp
inc
add
fsubrs
cmpsl
mov
jmp
stos
sub
xor
jle
sbbl
xchg
pop
shrb
xor
lods
push
push
daa
lret
cmpl
out
xor
mov
aad
cmp
cmp
popa
cmp
lahf
out
aas
push
mov
xor
lcall
lret
shlb
aas
sub
push
push
mov
addr16
mov
ds
out
xor
pop
mov
xlat
mov
gs
or
or
test
cld
inc
mov
dec
insl
sahf
adc
loopne
test
pop
stos
lret
pop
lcall
fst
int3
lret
or
call
sahf
sbb
hlt
cs
clc
dec
add
sahf
dec
das
inc
inc
or
sbb
pop
popf
ja
mov
insb
xor
mov
pop
adc
bound
dec
repnz
jmp
and
mov
ret
lret
movsl
mov
sbb
repnz
xor
lock
fcmovbe
in
outsb
xchg
xor
pop
push
cmp
mov
pop
mov
mov
push
testl
mov
inc
adc
jge
mov
imul
ss
call
sub
jne
out
jge
mov
sub
mov
ds
inc
shll
pop
sbb
jne
fldt
xor
dec
mov
mov
cmp
lods
popa
lds
inc
sbb
push
push
mov
dec
subl
sub
cmp
push
test
xor
lds
mov
inc
scas
push
sbb
xor
mov
iret
repnz
repz
cltd
inc
push
or
or
push
mov
jge
push
push
sbb
movsl
lods
mov
repnz
cmp
test
xchg
imul
or
test
xchg
shrb
push
cmp
hlt
cmp
mov
into
jno
xlat
pop
mov
cli
faddp
inc
daa
lock
pop
dec
jg
jle
jmp
rorl
subl
ss
push
test
gs
in
sar
fsts
mov
xor
and
push
test
out
adc
and
jp
cltd
fcmovne
ret
incl
sarl
sbb
mov
adc
iret
inc
loop
outsb
pop
xor
test
adcb
fnstcw
decl
test
adc
dec
mov
cmp
push
andl
inc
mov
xchg
jl
out
insb
and
lods
out
fmuls
xor
sub
bound
rcrl
pop
mov
imul
movsb
dec
andb
aas
popf
dec
adc
aas
xlat
and
aas
mov
mov
xchg
loope
add
cwtl
iret
cmc
and
insl
xchg
cmp
fnstsw
ret
xchg
shrl
loop
inc
cld
pusha
int
push
sbb
dec
or
adc
bswap
lret
cmp
sete
sbb
pop
mov
or
xchg
cmp
push
mov
mov
int
push
out
enter
push
mov
pop
mov
jle
ret
clc
jmp
sbb
push
pop
rcl
mov
mov
xor
pop
mov
mov
inc
cmc
repnz
mov
pop
inc
ja
arpl
sub
lds
es
popf
addr16
cwtl
xchg
ljmp
or
or
jae
or
cld
cmc
stc
push
std
cmpsb
cmc
xor
push
adc
jb
js
in
clc
cmp
sbb
bound
jne
dec
xchg
push
jp
pusha
outsl
inc
sub
mov
jae
fistps
or
out
cmp
repnz
cmp
pop
shll
addr16
aas
mov
dec
xchg
xchg
sahf
arpl
jne
jmp
and
push
inc
hlt
roll
je
add
repz
fidivrs
pusha
ja
sbb
push
test
in
dec
int
push
sbb
popw
jl
cmp
lods
mov
sbb
pop
adc
outsl
xor
mov
cwtl
adc
loop
shlb
sub
adc
loope
add
in
in
fwait
cmp
cmp
or
jp
sub
lock
mov
adc
mov
pop
inc
jg
sbb
cmpsb
pop
sbb
sbb
popf
cmp
popf
ret
xchg
bnd
imul
movsl
in
jmp
mov
add
lods
or
and
lret
test
jo
mov
add
and
enter
stos
cld
iret
shlb
inc
push
add
inc
arpl
sub
jge
lods
mov
aam
or
push
xor
scas
mov
pop
data16
sub
xorb
int3
filds
dec
pop
rcrb
add
mov
adc
push
sub
scas
cwtl
test
imul
cli
jle
xor
cmp
or
repnz
shrl
ficompl
mov
or
mov
scas
push
sahf
jno
aad
fildl
sub
shr
cmp
aam
fistl
sbb
dec
fsub
inc
xor
xor
jp
jbe
icebp
push
mov
push
or
mov
or
pop
sti
sbb
nop
push
push
and
roll
and
sub
adc
repnz
jp
adc
repz
ss
loopne
and
mov
xchg
adc
in
xchg
inc
inc
stc
fs
and
repnz
das
jmp
sub
fs
jne
loope
jecxz
push
and
shll
mov
dec
mov
les
dec
nop
cmp
xchg
sub
dec
int3
imul
xor
cmp
arpl
fsts
dec
mov
inc
in
ficoms
pop
and
fnstcw
dec
ljmp
fistl
popa
push
xorl
push
adc
push
loope
shlb
nop
cmp
sub
call
ss
mov
call
fbld
pop
jbe
inc
in
test
pop
xchg
pop
test
jge
dec
imul
pop
jge
scas
stos
sarb
shll
stc
pop
mov
mov
mov
cltd
mov
jmp
jg
icebp
mov
iret
mov
orl
fwait
adc
sahf
int3
into
pop
stos
bound
pop
push
out
adc
and
push
or
mov
add
pusha
pushf
icebp
enter
minps
pop
in
push
inc
mov
shrl
rol
xorl
lock
push
cs
add
outsl
lea
xchg
xchg
leave
adc
add
lods
aad
sub
lcall
insl
stc
xor
sahf
out
push
sub
aad
mov
and
cltd
mov
add
jecxz
filds
sub
cmp
jl
mov
mov
movsl
and
lcall
out
mov
aaa
movsb
dec
push
rcll
jp
or
mov
adc
adc
mov
sub
xor
mov
mov
adc
dec
pop
inc
mov
das
cwtl
adc
mov
jp
lahf
push
je
cli
xchg
adc
test
inc
xor
icebp
and
sar
pop
sub
pop
push
bound
mov
repz
mov
pushf
dec
push
xchg
lret
ss
and
mov
inc
in
faddl
dec
pusha
cli
xchg
fimull
jp
movsl
jno
sub
lcall
ficoms
roll
pop
mov
scas
and
bound
and
jle
rcr
add
sub
or
aad
mov
add
xchg
jmp
and
push
in
testb
stos
cli
dec
push
cltd
les
hlt
call
out
add
cs
add
add
ret
filds
lahf
push
jp
cltd
js
jnp
rcr
data16
mov
and
mov
and
pop
lods
mov
pop
mov
xlat
ds
cmp
iret
nop
int3
in
repz
call
cmp
mov
adc
sbb
xchg
je
sub
xchg
addb
adc
pop
push
and
stos
push
inc
xchg
ja
sbb
push
insl
enter
mov
out
ret
ljmp
out
push
mov
scas
jmp
dec
mov
push
hlt
mov
in
imul
fcoms
mov
inc
add
cwtl
pop
fs
mov
and
cmp
dec
pop
loope
dec
shrb
fisttpl
loop
jns
mov
mov
jno
jcxz
mov
xor
xor
pop
push
or
mov
test
mov
sar
inc
mov
sarl
mov
loopne
hlt
or
sbbb
pop
testb
imul
cmp
idiv
sti
mov
jge
nop
andl
cmp
notl
mov
insl
int
roll
daa
xor
and
jnp
mov
lahf
push
lea
out
test
aam
xchg
xor
gs
enter
xor
xchg
stos
aad
test
cs
js
cmpsl
xlat
cmpsb
jbe
aam
rorb
push
add
pop
jmp
mov
cmp
mov
and
push
stos
cld
adc
xchg
xor
push
scas
pop
into
in
mov
in
xchg
adc
push
mov
imulb
insl
punpckhwd
ss
sub
aaa
xchg
jbe
ret
add
and
ret
mov
fsubl
jo
fmull
xchg
sbb
inc
lea
xor
fistl
add
movl
pop
in
add
xchg
stc
xchg
bound
add
push
push
loopne
pop
sti
adc
in
les
test
xchg
fdiv
jns
mov
sub
test
push
hlt
inc
xchg
pop
sub
scas
notl
dec
pusha
in
test
adc
cmp
sub
sub
ret
mov
loop
adc
jbe
and
popa
cmpsl
pop
int3
enter
push
bound
movsb
movsl
jnp
mov
sbb
test
shlb
xchg
ss
sar
mov
shlb
jnp
xor
mov
in
xchg
xchg
fs
dec
mov
mov
and
push
xchg
pop
aam
push
push
rcrl
cmc
ret
imul
les
sarb
jcxz
and
fwait
inc
dec
bt
mov
and
in
inc
rcrl
push
dec
push
xor
sbb
shrb
cs
sub
test
push
aaa
mov
push
jno
xchg
push
inc
test
sub
dec
insb
andb
pop
mov
mov
inc
sahf
dec
imul
mov
jbe
nop
test
push
xchg
je
lea
cmpsb
icebp
xor
or
cli
insb
lods
jne
lcall
iret
mov
sarl
ljmp
stos
sub
fcmovnb
popf
std
sbb
hlt
lcall
mov
sbb
sub
add
jmp
movsb
iret
xchg
mov
stc
push
cmc
shlb
jnp
jb
das
push
cmp
hlt
cld
adc
pop
mov
lods
jmp
jmp
jns
mov
std
sub
gs
cmp
xor
popf
jle
xchg
mov
sbb
jnp
cs
ds
cmp
ds
ljmp
cli
mov
mov
sbb
movnti
mov
mov
jbe
xchg
mov
add
les
call
dec
fs
rcll
sbb
fs
pop
mov
inc
jne
test
xor
lods
mov
cmc
cwtl
jnp
loope
add
add
cmpsb
fcoms
mov
inc
gs
jae
push
xor
add
jbe
push
push
insb
icebp
and
or
mov
cld
in
mov
jl
mov
mov
or
cmpsb
xorb
push
into
movsl
test
xor
outsb
ficoms
xchg
loop
stc
jno
mov
enter
push
pushf
inc
ss
int3
call
pop
sub
jle
push
cmp
lds
mov
loope
adc
test
mov
pop
jns
mov
in
fsubrp
cli
mov
mov
pop
push
xor
mov
adc
ret
mov
xchg
mov
in
out
xchg
addr16
mov
sub
xchg
ss
sahf
bnd
shl
subb
jae
pusha
push
pusha
and
popl
jp
cli
test
ds
shll
pop
mov
ret
pop
ds
pop
shlb
jl
int
movsl
into
adc
jmp
pop
or
pop
pop
and
dec
cmp
in
sbb
js
in
repz
lea
dec
sub
dec
inc
call
insb
mov
daa
fsub
shlw
nop
xchg
popa
and
movsb
add
push
mov
mov
adc
sub
xchg
mov
lods
dec
xchg
add
push
sub
sbb
push
cmp
jb
mov
movsb
sbb
mov
add
jge
push
test
and
mov
jae
sarl
out
out
add
test
xchg
enter
cmp
mov
pop
cltd
pop
call
adc
lock
cmp
test
xchg
rclb
rcll
lcall
mov
mov
test
jl
xchg
pop
popa
xor
imul
lds
pop
xchg
cmp
pop
fsubrl
add
sbb
int
jns
in
aas
jns
adc
jmp
push
push
sub
lods
ds
push
mov
mov
lahf
fs
adc
push
test
test
xor
movsl
inc
iret
fs
xchg
out
add
mov
std
mov
jne
pop
gs
pop
sbb
and
sub
idiv
pop
dec
adc
pop
pusha
into
pop
lods
cmp
jmp
xchg
stos
cltd
scas
cmpsl
cmp
mov
stos
pop
mov
inc
xor
mov
sahf
repnz
insl
cmpsl
fisubs
push
push
jle
dec
dec
dec
adc
cli
call
ret
jbe
arpl
outsl
pop
mov
mov
scas
fistps
mov
inc
cmp
pop
mov
sub
scas
mov
movsl
mov
scas
mov
ror
and
or
aaa
into
bound
je
das
inc
movsl
adc
in
cmp
aad
push
nop
pop
inc
out
jbe
sub
outsb
sbb
push
adc
sub
nop
mov
xchg
enter
jl
insb
sub
push
popf
pop
jne
cld
repz
shlb
add
or
sbb
rorl
lret
xchg
test
inc
shl
in
notb
xchg
sbb
je
sbb
je
leave
mov
mov
lea
sbb
and
and
or
add
sbb
addr16
ret
insl
pop
loopne
cmp
cmp
fildl
sbb
loop
divl
rcr
mov
leave
pusha
jns
dec
mov
cmp
add
sti
adc
stos
mov
in
adc
adc
mov
inc
jmp
cld
adc
adc
jae
repnz
dec
cmp
xor
out
pusha
stc
loope
pop
and
inc
mov
popa
push
jge
sbb
test
stc
mov
cmp
fs
adc
das
dec
pshufw
mov
add
jne
int
push
cmp
jb
inc
stos
and
repnz
fimuls
movsl
jmp
xor
push
js
xchg
sub
dec
mov
das
xchg
bound
iret
out
xchg
inc
or
aas
cmpsb
mov
cmpsl
js
push
repnz
xor
jns
loope
std
insb
dec
aad
addr16
or
mov
push
xchg
lods
loope
inc
imul
dec
jecxz
push
out
sbb
jg
xchg
adc
inc
mov
jl
ljmp
push
inc
push
icebp
mov
shrl
xor
adc
jo
mov
mov
mov
mov
or
mov
cld
aam
pop
push
adc
aam
or
sub
pusha
popf
jle
sbb
fwait
sahf
imul
sbb
jg
xor
push
jo
dec
cld
lret
or
test
or
aas
and
xchg
mov
lret
shlb
mov
js
xchg
pop
sub
cmpb
loope,pn
mulb
jmp
cmpsb
insl
mov
dec
ja
xor
dec
shlb
jo
ficoms
push
add
push
cmc
cmc
mov
imull
jo
fwait
and
pop
mov
pop
inc
mov
xchg
mov
sub
out
dec
data16
bnd
xchg
pop
loop
xor
fisttpl
stos
fmull
xchg
fwait
js,pt
shrb
in
shlb
pop
and
orl
or
out
test
add
or
and
xor
and
inc
fstpl
or
inc
test
cli
aaa
push
cmpsb
arpl
or
lea
push
inc
cmp
xor
loop
pop
aas
mov
sbbl
movsl
sub
idivl
movsb
shl
mov
jg
xlat
xlat
xor
addr16
mov
fcom
je
imul
cmp
iret
cmp
iret
mov
mov
sbb
cmc
std
scas
cld
scas
or
push
or
mov
sbb
push
mov
push
jp
ud0
cmpsl
cwtl
mov
mov
test
into
pop
push
add
and
ss
sub
imul
ds
not
enter
out
mov
loop
pop
int3
adc
jl
repnz
shlb
inc
inc
pop
loop
push
jo
xor
fwait
test
or
ds
insl
mov
pop
sbb
pop
adc
loop
xchg
cmp
cmp
clc
rol
jg
mov
lret
add
pushf
xchg
mov
mov
mov
lea
movsb
mov
xchg
sub
das
nop
xor
mov
mov
stos
outsl
mov
mov
push
or
pop
mov
imul
push
mov
and
fdivrl
or
mov
xchg
mov
pop
insl
incb
mov
mov
test
faddp
xchg
cmc
int3
jbe
push
test
dec
fisubl
mov
inc
xorb
aad
int
adc
insb
bound
sti
out
mov
mov
dec
pop
sbb
jne
cmp
xchg
popf
dec
xchg
mov
repnz
add
jl
popf
jo
xchg
inc
pop
dec
mov
mov
mov
loopne
push
cmp
out
lret
mov
mov
inc
jl
stc
inc
cmc
add
push
mov
cmp
insl
inc
test
out
scas
imul
nop
mov
push
mov
pop
or
inc
int
lcall
mov
push
ljmp
test
inc
iret
in
mov
mov
adc
out
test
frstpm(287
mov
dec
stos
ret
add
outsb
lods
test
scas
hlt
lods
dec
rcll
pop
dec
sub
and
cmp
and
cs
cmp
out
lret
xchg
inc
jl
mov
adc
xchg
sbb
in
iret
cmp
iret
movsb
stos
aas
dec
jnp
ja
sub
mov
sub
scas
cmc
add
dec
fstpl
cmp
push
imul
testl
lret
loope
mov
adc
sbb
std
rolb
sbbl
rcr
dec
jae
lahf
movb
xchg
bound
cmp
jg
dec
dec
fucomp
cld
lret
xchg
dec
or
push
xlat
punpckldq
jle
insl
sti
leave
inc
xor
xchg
lcall
cmc
sbb
insl
inc
pop
push
cs
cmpsl
jb
out
pushf
jb
and
push
or
adc
pop
dec
loope
and
inc
rorb
incl
mov
fwait
leave
into
add
stos
sub
or
sti
arpl
lds
pop
cli
addl
mov
rcrl
cmpsl
cli
sub
dec
xor
xchg
sbb
xchg
leave
outsl
dec
or
mov
xchg
sbb
pop
aas
and
jl
jae
push
adc
pop
orb
mov
jge
mov
pushf
enter
scas
fdivrs
insb
jle
push
flds
xor
mov
daa
cmpb
jle
fistpll
aas
imul
push
fidivrs
xor
into
testb
movsb
dec
pusha
cltd
pop
and
and
je
add
cld
int3
sbb
mov
loope
aad
xor
jne
xlat
lret
sti
scas
jns
out
jns
mov
das
xchg
or
mov
dec
xor
js
jne
add
push
pop
dec
loope
mov
dec
sub
addl
inc
adc
dec
jnp
icebp
dec
push
inc
adc
jno
add
push
jle
aad
dec
fwait
sbb
out
add
repz
mov
mov
push
jecxz
jne
and
lods
or
shlb
push
sbb
pop
mov
pop
add
aad
inc
xor
mov
test
mov
outsl
lock
mov
dec
stos
popf
mov
push
sbb
mov
adc
shlb
loop
sbb
inc
jne
pop
mov
fstpl
das
push
lods
shll
cmp
jno
push
sbb
xchg
sub
and
jno
xor
scas
inc
mov
xchg
jo
adc
outsb
lret
lea
push
movsl
imul
xor
cwtl
xchg
dec
shll
xchg
cmp
orb
nop
mov
into
xor
jns
mov
and
adc
or
cmp
insb
and
inc
sarb
bound
jle
fiaddl
push
imul
cld
push
jno
mov
lahf
lods
std
subb
mov
xor
std
pop
lret
cmp
mov
inc
les
les
imul
popf
in
mov
push
cmp
sbb
inc
imul
out
gs
mov
xchg
mov
mov
jl
sbb
push
jo,pn
add
mov
mov
jmp
xchg
jmp
aad
out
faddl
inc
sub
pop
out
xorb
les
push
xor
shlb
or
stc
pop
popaw
outsl
and
xchg
mov
jecxz
mov
fldcw
outsb
xchg
mov
sbb
leave
xor
xlat
clc
mov
adc
cwtl
sbb
jg
bound
cmp
adc
sbb
pop
fs
addr16
jg
popa
roll
push
sub
call
cmc
and
shrl
mov
add
rcl
or
lock
add
dec
dec
jae
repz
cmp
sub
jo
mov
jb
cmp
mov
fisttpll
std
jle
int3
cmpsl
int3
fists
cmc
cltd
mov
pop
lahf
testl
dec
dec
ret
or
mov
leave
inc
cli
xchg
fstl
dec
std
aas
or
lahf
jmp
mov
cld
out
dec
fwait
inc
mov
pop
mov
fs
sub
mov
out
jb
push
int
ret
fldl2t
sbb
mov
mov
leave
cmpsl
inc
js
jge
ds
cmpsb
sbb
sti
xor
daa
mov
ret
push
test
sbb
sbb
andl
sarb
in
ret
ret
int
hlt
ret
xor
cli
shlb
scas
es
jne
ja
sbb
lods
push
daa
ja
jo
outsb
shll
fdivrp
pusha
pop
push
add
push
push
mov
scas
jbe
int3
insb
test
mov
sub
pusha
arpl
sbb
sarl
loope
pop
les
lcall
jb
cld
loop
test
lcall
cmp
aaa
rorb
aas
pop
rorb
enter
jg
add
cmc
add
sti
dec
or
jb
push
xchg
mov
imul
fists
and
sbb
out
jmp
adc
inc
test
lea
fsubrp
push
mov
or
lods
adc
push
mov
popa
daa
movl
sbb
sub
add
mov
stos
cli
cmp
inc
pop
xor
aas
mov
ret
fmuls
pop
imul
xchg
jg
pop
test
movsb
notb
mov
mov
sub
lock
adc
xor
sub
and
xor
jno
in
and
scas
jno
rcrb
push
jb
mov
andb
push
adc
std
sar
repnz
stc
lods
dec
or
cmp
in
cmpsl
cmc
mov
mov
rorb
xchg
test
cmp
lock
mov
push
pushf
xor
adc
and
decb
xor
pop
lods
push
pusha
aam
int
test
mov
adc
pop
les
popaw
adc
push
push
dec
fdivs
or
in
addr16
push
arpl
nop
outsb
in
addr16
int3
lods
adc
and
jns
jg
jo
xchg
xchg
push
inc
mov
and
int3
xlat
xlat
in
push
adc
or
pop
jg
scas
sub
lret
jmp
mov
add
adc
pop
ds
jbe
push
scas
ret
sub
cvtps2pi
sbb
stos
pusha
fnstsw
sti
mov
repz
roll
lahf
sarb
dec
xchg
pop
inc
in
cmpsl
stc
xchg
je
or
and
pop
jmp
cmc
test
jp
nop
inc
jnp
test
cmp
repz
mov
dec
push
stos
arpl
loope
into
int3
clc
and
int3
into
mov
pop
and
cs
mov
rcrb
icebp
dec
in
stc
repnz
mov
ds
mov
xchg
add
ds
dec
inc
call
stos
into
xchg
and
jns
aam
xchg
cmp
gs
scas
addr16
sub
es
mov
addr16
je
inc
sub
jne
or
jmp
movsb
enter
jecxz
mov
jne
mov
mov
ja
cs
loopne
xchg
mov
jno
sarb
push
scas
out
ds
int3
jecxz
aaa
xlat
cmp
sub
mov
push
repnz
mov
xlat
lahf
fcom
aas
loop
hlt
outsb
stos
fnstsw
test
lods
je
stos
jb
popa
pop
test
leave
fcmovu
dec
cmp
cmpsl
dec
push
xchg
pop
mov
lods
sbb
pusha
push
pop
test
adc
sbb
fiaddl
adc
icebp
int3
fs
ljmp
mov
leave
dec
sbb
repz
nop
les
arpl
testl
xchg
jae
dec
mov
icebp
test
mov
xchg
xchg
push
inc
dec
mov
or
jp
inc
div
dec
stos
and
insb
add
sub
lea
and
inc
in
push
adc
js
aaa
fwait
sub
adc
rclb
dec
push
ljmp
scas
sub
movsl
pop
jb
outsl
pop
inc
push
stc
adc
into
test
pop
mov
dec
inc
pop
sar
cwtl
subb
aad
and
movsl
push
pop
push
lret
sarb
adc
inc
scas
mov
cmp
push
lahf
pop
cs
pop
sarl
pop
pop
test
aas
loopne
sbb
jecxz
lock
adc
shrb
nop
jo
test
jge
adc
xor
mov
pop
pop
inc
sub
das
lods
aam
fistpl
ja
ficoms
nop
jl
clc
dec
cmc
sub
stos
data16
addb
push
xchg
fsubrs
mov
xchg
fnstsw
fiadds
jb
repnz
hlt
mov
dec
lret
xchg
dec
hlt
ss
adc
lock
jo
dec
sub
stc
xor
add
push
cmp
jge
idivl
cmp
mov
ret
mov
daa
movsl
and
mov
es
mov
mov
inc
std
mov
adc
adc
jo
push
repz
mov
in
pop
pop
les
inc
mov
pop
sbb
mov
push
sub
les
pop
mov
int3
sti
jbe
mov
pop
add
xchg
gs
test
mov
cmp
data16
pop
aam
or
loopne
xchg
sub
sub
mov
sbb
sbb
inc
sub
stc
mov
or
inc
out
dec
int3
cwtl
pop
dec
loop
cmp
xor
cmp
cmp
pusha
movsl
fs
jmp
inc
movsb
push
daa
mov
lock
nop
addr16
jle
or
dec
push
imul
jo
jns
fsub
rclb
mov
mov
fdivl
sub
adc
sbb
push
movsb
inc
cli
nop
xor
leave
push
add
ffree
in
jnp
pop
fsubrl
mov
cmp
cmpsl
xchg
cli
stos
js
adc
mov
test
lds
icebp
jl
xchg
hlt
mov
or
rcrl
xchg
or
fdivl
insb
push
cmp
test
insb
aad
pushl
data16
sbb
mov
jg
not
cld
push
or
sub
jmp
fsubrp
xor
hlt
fcomps
xor
cmp
fidivl
xchg
dec
ds
dec
mov
ja
subl
push
rclb
inc
stos
mov
jb
out
cs
testl
push
jp
stos
jo
movsb
push
rcll
pop
jp
das
mov
repnz
dec
or
xchg
xchg
inc
out
xchg
cwtl
repz
pop
in
mov
add
loopne
mov
aas
frstor
data16
add
sub
lods
stos
adc
push
aam
lds
cmp
ret
in
aaa
dec
and
adc
or
mov
pop
xor
xor
push
icebp
xchg
xchg
mov
arpl
xchg
enter
inc
push
sub
icebp
imul
push
pop
push
inc
icebp
dec
dec
push
jo
sbb
fists
cwtl
leave
in
or
sbb
leave
fucomi
add
xchg
cmpsl
inc
push
or
push
pop
add
push
xchg
xchg
add
movsl
imul
les
leave
fsubp
pop
mov
push
negl
mov
pop
rorb
gs
xor
cmpl
movsb
push
xchg
sub
lods
stos
jno
jecxz
and
notl
xchg
gs
shrb
jge
push
sub
loopne
push
aam
lret
fsts
mov
xchg
arpl
sahf
xorl
call
in
fldl
je
lods
xor
push
cli
add
jge
in
add
or
cmpsw
mov
and
testb
sub
loope
xor
int3
xchg
out
jne
int
addl
cwtl
loop
ss
pop
mov
jge
sub
pop
jge
mov
pop
mov
loopne
es
mov
mov
jl
leave
mov
out
xor
aad
das
dec
jne
cli
jge
sub
inc
gs
fstpl
popf
mov
in
dec
xchg
jo
test
in
mov
fnstenv
inc
outsb
pop
jbe
xchg
sub
cmp
fs
sahf
nop
pop
jmp
sbb
sbb
orl
jmp
imul
pop
mov
xchg
xlat
dec
jle
pop
push
outsb
push
clc
xor
cmp
cmp
add
xchg
xor
pusha
in
xlat
out
es
popa
mov
sub
insb
or
arpl
gs
dec
sarl
icebp
xchg
add
out
cmp
xor
dec
fsts
imul
hlt
stos
push
dec
imul
test
mov
out
setp
push
adc
movups
add
sub
jo
jae
sarb
inc
mov
icebp
pusha
push
add
sahf
lods
sbbl
repnz
out
pop
ret
inc
jb
inc
mov
push
dec
xchg
clc
jnp
aam
into
mov
int
fnstsw
push
call
loope,pt
dec
xor
out
sub
cmp
jge
sbb
or
leave
repnz
xor
jl
xchg
fwait
mov
adc
inc
mov
lret
icebp
sub
xchg
into
mov
loope
mov
sub
mov
cmpsl
jae
cs
fs
mov
pop
into
faddl
jnp
sbb
in
inc
dec
insl
pop
mov
xchg
stc
mov
dec
fucomi
or
sub
sbb
mov
push
ret
cmc
add
mov
adcl
test
addl
icebp
jecxz
jo
lods
pop
dec
jae
add
push
fists
cmp
clc
push
sub
lahf
ljmp
and
clc
mov
mov
cmp
cmp
push
ret
pop
fld1
js
lret
and
fldt
cmp
test
and
mov
xchg
mov
je
dec
and
mov
flds
sbb
sub
fisttps
mov
or
dec
leave
cli
outsb
and
sub
mov
ss
mov
jg
test
mov
dec
pop
rcll
not
xchg
and
mov
pop
call
pop
dec
mov
pop
lods
dec
hlt
std
sti
mov
jbe
loopne
mov
fistl
push
icebp
mov
stos
push
clc
jo
int3
outsb
mov
mov
push
int3
fwait
sub
stc
mov
loopne
push
popa
inc
nop
cld
adc
jmp
aad
or
or
into
dec
cmp
insl
jge
ret
xor
xchg
fcmovnb
mov
push
and
loope
movsb
mov
sar
cmp
xor
pop
test
mov
out
sbb
adc
repz
mov
in
jp
xchg
pop
or
insl
cmpsl
lret
mov
mov
mov
leave
pop
shlb
dec
jecxz
lea
or
ds
loopne
cmp
adc
movsl
lock
fidivs
cmp
and
cwtl
add
sarl
push
nop
cmp
dec
xor
incb
cmp
pop
cmpb
mov
add
aaa
sbb
lock
out
adc
jl
mov
sub
mov
cmpsb
and
sub
enter
hlt
std
stc
cmp
dec
jmp
ds
in
sub
and
out
inc
push
and
sub
push
dec
das
sbb
rcl
aad
fbld
mov
mov
pop
dec
rcrb
sbb
mov
adc
xlat
mov
ja
jae
jb
pusha
imul
add
bound
pop
test
aas
negl
pop
bound
or
jne
enter
jno
push
dec
jne
xchg
sbb
shrb
jp
push
mov
pop
xchg
xor
test
jg
iret
cmp
fadds
das
pop
fdivl
adc
mov
das
cltd
inc
out
fs
sbb
jle
fnstenv
dec
cmp
jb
enter
fwait
sarl
push
cmp
bound
lret
popa
in
mov
out
int
jb
ss
stos
add
xchg
mov
push
add
fstps
xor
push
cwtl
shrb
les
repnz
into
jne
movsb
or
cvtpd2ps
fdivrs
outsl
insb
xchg
aad
int
lea
pop
push
cli
repz
std
cmp
push
xchg
idiv
out
scas
je
mov
es
into
jbe
test
mov
jo
loop
mov
rcrl
pop
mov
cli
loope
cli
test
adc
in
dec
lret
add
out
xchg
add
push
cmp
jp
xchg
fsts
out
and
mov
or
ss
sub
mov
mov
xchg
dec
fldenv
mov
dec
inc
aam
xchg
lret
mov
mov
das
jnp
popf
cltd
jge
out
mov
mov
enter
xor
shl
and
ja
and
push
notl
sar
mov
inc
fcmovbe
add
mov
shl
fsubrs
dec
inc
or
test
jmp
mov
add
mov
dec
adc
and
cmc
sub
dec
xor
in
xchg
cmpb
xchg
lods
jnp
lods
insl
xchg
mov
mov
adc
and
jbe
inc
lea
insl
outsb
shl
mov
lods
inc
mov
cmc
addr16
sub
rorb
jp
fsubrs
jmp
rorl
jle
and
daa
push
test
insb
out
ja
call
mov
xor
pop
push
ljmp
mov
mov
sti
scas
arpl
jmp
mov
lods
mov
cmpsb
xchg
icebp
popf
sub
pop
mov
xchg
out
inc
les
xchg
inc
in
adc
jns
lret
mov
mov
test
cmp
shr
dec
xchg
xor
lcall
pop
loope
sub
loope
or
xchg
xchg
pop
inc
iret
xor
push
std
jp
in
test
fdivrs
cmp
aaa
xorl
mov
mov
aad
addb
orl
xchg
cmp
ljmp
ja
dec
ljmp
push
jno
mov
aad
aas
push
jnp
add
jbe
jge
aaa
mov
fisubl
mov
mov
popf
mov
pop
xchg
int
in
sub
adc
cmp
sub
mov
fdivs
jb
lret
hlt
sub
adc
add
mov
out
icebp
lret
mov
pop
arpl
mov
add
mov
mov
jp
cmpsb
mov
pushf
je
xor
adc
lea
subb
fwait
jb
cmp
mov
aad
pop
lea
jns
loope
jmp
add
inc
stos
aaa
out
jne
mov
adc
test
xor
bound
into
jae
xchg
push
xchg
add
loope
insb
insb
jnp
imul
pop
dec
lret
sub
xchg
mov
pop
mov
mov
in
add
lret
jecxz
mov
dec
dec
pushl
xchg
test
stos
test
inc
cmpsl
xor
cld
add
stc
mov
mov
mov
cmpsb
push
or
push
push
lods
rclb
pop
inc
lods
or
lds
dec
xchg
push
lods
inc
arpl
dec
sar
xchg
cmp
and
idiv
cmp
jae
mov
cmpsl
mov
jcxz
adc
aaa
mov
jmp
ljmp
fistpll
inc
pop
fsub
dec
fs
movb
das
push
mov
jo
mov
fs
cmc
xor
ljmp
mov
out
mov
cmp
mov
push
add
xchg
dec
xchg
dec
pop
mov
clc
or
adc
pop
push
push
xor
or
mov
xchg
fldcw
push
pushf
test
xor
xor
xor
nop
cmc
into
sti
lea
nop
divl
pushl
movsl
adc
cmp
rorl
and
dec
or
pop
mov
icebp
hlt
out
arpl
dec
aad
add
stos
cmp
pop
adc
adc
arpl
leave
mov
addr16
pop
mov
jge,pt
ret
sub
pop
test
lahf
cmp
and
test
inc
xchg
mov
jmp
cmp
std
xchg
test
dec
push
loopne
add
cmp
jne
lret
icebp
ljmp
pop
mov
cmpsb
sbb
div
jno
xlat
jecxz
and
repz
sbb
jbe
cmpsl
sub
sbb
inc
ja
cmpsb
adc
cwtl
push
sub
cmpsb
std
sub
pop
divl
mov
xchg
aam
pop
mov
data16
add
test
mov
enter
mov
mov
cwtl
mov
inc
push
adc
pop
lcall
sti
lret
in
mov
repnz
out
aas
or
jne
imul
mov
inc
inc
ljmp
loope
jmp
mov
add
lock
jnp
xchg
push
icebp
sub
mov
mov
mov
shl
orl
cmp
pushf
mov
arpl
push
aam
outsb
or
and
ja
xchg
jae
xchg
dec
insl
cmc
sbb
imul
gs
sbb
mov
int
mov
insl
sbb
dec
insb
inc
mov
ds
scas
in
clc
xchg
loope
enter
add
pop
into
into
adc
outsb
dec
js
repz
loope
aaa
push
out
cmp
testl
lock
cmp
mov
out
mov
mov
lahf
push
bswap
and
int
push
cltd
lea
add
push
popf
inc
stos
cltd
or
xor
sbb
dec
xor
or
icebp
add
orl
pop
fsubr
pusha
fildll
ja
scas
shrb
fnstenv
loope
out
sub
rol
cmpsb
cmpsl
addl
jmp
lcall
pop
mov
in
out
imul
leave
repnz
rolb
pop
mov
adc
jl
cmp
into
test
inc
es
mov
sbb
mov
divb
jnp
sbb
movsl
cmpsl
test
or
pop
rcll
dec
or
jbe
test
es
xchg
inc
addr16
sbb
test
pop
xchg
mov
pop
pop
popa
sti
adcb
mov
pusha
pop
mov
xchg
sub
ljmp
xor
inc
jmp
jbe
lock
mov
sbb
loope
dec
jmp
push
mov
jnp
addr16
push
fsubp
jp
dec
push
nop
int3
in
xchg
fs
lahf
inc
sbb
pop
fstl
sub
and
sbb
lahf
and
ret
jns
call
imul
or
cs
mov
push
loopne
es
aas
repnz
lret
les
cltd
xor
popa
xchg
popa
xchg
cmp
inc
push
dec
ss
mov
pop
loopne
pop
decb
and
adc
jne
xchg
pusha
or
jp
add
dec
sub
ljmp
cmc
stc
mov
jle
cmpsb
mov
push
mov
fdivs
dec
bound
cld
add
adc
cltd
mov
xchg
lcall
pop
cwtl
cmpsb
or
mov
hlt
jnp
xchg
mov
add
mov
push
jecxz
loope
subl
and
mov
xchg
rcrl
ss
pop
loopne
lods
cmp
jmp
sub
cmp
cltd
mov
pop
xor
aam
out
in
push
push
lods
daa
sbb
or
inc
mov
cmc
mov
cltd
lds
xchg
stc
sti
or
cmpb
notb
pop
lahf
mov
adc
test
push
int
mov
xchg
jo
mov
stos
call
ss
jnp
shr
jns
int
jno
stos
aas
and
je
push
and
lret
cmp
push
xchg
jo
jae
adc
ret
in
jmp
xchg
cmpl
dec
faddl
repnz
scas
or
repnz
std
adc
lcall
hlt
out
dec
lods
nop
lahf
mov
cmp
dec
mov
mov
mov
dec
stc
adc
mov
pop
pop
mov
iret
icebp
jl
push
jecxz
jge
leave
cmp
cmp
dec
les
or
test
ja
insb
mov
int3
adc
sbb
pop
inc
inc
dec
shrb
in
or
les
out
movsl
sub
dec
gs
push
mov
insl
xchg
imul
jo
pop
cmp
dec
call
pushf
out
mov
dec
sub
xor
and
cli
push
add
rolb
mov
cld
add
pop
pushf
mov
adc
movsb
cmp
fnstsw
add
adc
push
out
je
in
loope
ficoms
push
cli
jle
xor
clc
xor
je
int3
jecxz
add
sti
movsb
cmpsb
and
rorb
push
cmp
rcrl
das
xchg
mov
push
das
xchg
mov
arpl
fisubs
arpl
and
jge
pop
fucomip
call
xchg
jne
xor
incl
loop
in
inc
cwtl
or
sbb
inc
xchg
mov
or
stc
gs
out
hlt
pop
push
xchg
xor
and
sub
fildl
cmp
lds
inc
push
xchg
scas
dec
lret
pop
jge
push
jmp
mov
fwait
sub
jp
aas
pop
inc
cmpsl
dec
and
adc
pop
stos
xchg
lret
fwait
test
or
fidivrs
mov
je
movsl
push
mov
inc
and
les
cmp
add
lret
mov
add
xchg
mov
mov
inc
ret
cmp
add
movsl
daa
vmread
add
daa
sahf
push
add
stc
adc
shrb
mov
inc
xchg
sbb
sbb
cld
je
xchg
or
fidivrs
xchg
inc
nop
cmp
mov
outsl
sub
sahf
test
xor
or
jno
or
sbb
mov
inc
or
out
lock
imul
sahf
call
dec
inc
sbb
cmpsl
mov
aaa
cmp
xor
cmp
cmp
mov
es
add
icebp
pop
pop
stc
push
nop
imulb
adc
mov
and
popl
adc
cmc
mov
jge
inc
inc
fsubp
sub
adc
sub
aam
arpl
lods
shll
cld
cmc
inc
aam
sti
xor
ds
jmp
dec
push
jne
out
lock
cmp
ret
xchg
jmp
and
lea
rcl
in
decl
daa
add
push
aas
pop
cmp
jne,pn
out
sbb
mov
in
cld
lds
popf
push
lcall
add
cwtl
mov
pop
stc
sbb
sub
cmpsb
push
outsl
int
fimull
imul
lret
pop
adc
adc
imulb
je
mov
sub
add
movsl
mov
fsts
shll
jmp
xorb
jl
push
pop
xor
sbb
pop
add
mov
daa
sbb
xor
out
mov
fistl
pop
inc
jbe
mov
sub
loope
scas
test
xchg
push
out
pushf
imul
scas
push
int
imulb
in
dec
shll
jecxz
sub
dec
pop
cmpsl
call
out
cltd
xor
jbe
jmp
pop
out
mov
in
dec
xchg
inc
mov
dec
and
push
mov
xchg
out
stos
sbb
and
pop
sti
xchg
leave
fcompl
xchg
sbb
fdivl
xchg
cmpsb
lods
pop
ret
or
mov
int
add
fwait
test
jb
and
cmp
add
or
dec
sub
bound
push
cltd
ret
and
aam
jne
loope
es
cli
cmp
jo
jne
movb
in
int3
mov
sub
aam
pushf
ror
mov
dec
sub
ret
mov
inc
add
pop
and
xchg
int
fdivs
fs
pusha
notb
icebp
lret
lds
jmp
cmpsl
push
xchg
aas
cltd
mov
inc
inc
pop
or
inc
adc
push
insl
ja
dec
sub
jecxz
sbb
sbb
scas
aam
test
negb
sahf
fisttpll
jae
mov
adc
mov
lret
aad
es
mov
mul
fmull
inc
mov
dec
push
mov
sbb
mov
mov
repz
or
and
into
xor
sarl
inc
adc
sbb
repnz
inc
mov
pusha
pushf
xchg
jb
xchg
mov
decb
shll
fnstcw
out
std
lret
stos
inc
dec
iret
jg
les
jb
mov
mov
adc
gs
mov
and
xor
cmpsl
jb
iret
enter
test
and
cmp
mov
leave
fs
push
xor
iret
pop
lahf
popa
sub
jbe
lods
js
inc
sub
mov
sub
and
xchg
repz
aaa
cltd
push
lret
bound
and
fcoms
jns
je
arpl
or
xchg
jp
dec
shl
xor
fs
mov
or
je
xor
and
adc
and
inc
aad
sbb
loope
mov
mov
stc
cli
int3
lock
sbbb
pop
out
mov
push
sbb
inc
in
cltd
mov
icebp
sbb
popa
aaa
sbb
mov
and
sbb
dec
sbb
insl
out
aaa
cmp
adc
sub
cmp
in
and
adc
mov
and
les
jne
inc
pop
or
dec
jbe
je
jle
rorl
in
scas
or
aam
fs
mov
fsubrp
push
cli
xor
lods
dec
xchg
mov
cmpsb
enter
mov
push
sbb
cld
andb
pusha
fsub
and
mov
adc
add
into
jp
push
push
xchg
jne
inc
xchg
add
daa
jle
mov
adc
jle
mov
pushf
or
imul
cli
or
ds
fdivrs
aas
fisttpll
aaa
gs
scas
scas
add
add
or
mov
ret
sub
jmp
scas
lcall
inc
lcall
mov
bound
sub
mov
negl
mov
mov
mov
aam
repnz
les
jmp
push
ret
jae
sub
testl
xchg
mov
cmp
xchg
adc
cld
mov
push
dec
cmpsb
add
mov
pusha
mov
mov
and
lods
mov
or
push
pop
push
adc
lcall
mov
jo
xchg
inc
fisubrs
sahf
pop
inc
inc
ds
popf
cmp
scas
push
mov
rol
inc
pop
dec
lcall
push
in
cmp
sub
in
stos
ja
xchg
mov
push
and
jno
or
movsb
pop
insl
ret
mov
mov
jbe
sbb
je
mov
push
mov
adc
negb
cli
sarl
or
test
xor
dec
out
jno
dec
add
aaa
add
clc
sbb
loopne
pushf
jmp
sbb
dec
adcb
push
popf
or
sub
push
shrb
and
mov
shll
je
in
test
fstps
test
adc
jns
mov
add
imul
add
or
sbb
pop
inc
in
int
cmp
cltd
adc
push
test
sub
in
sub
clc
push
sbb
push
xor
out
cmp
lock
js
movb
ficompl
xchg
cmpsb
or
stos
xor
jmp
sub
gs
dec
xchg
cmc
xchg
xchg
inc
sahf
iret
xor
sub
cwtl
dec
ret
adc
int3
adc
loopne
fsubr
pop
sub
aad
mov
mov
out
hlt
cltd
mov
addr16
aas
cs
sub
adc
jnp
and
rclb
fwait
loop
arpl
xchg
ss
mov
add
mov
fdivr
mov
inc
push
mov
enter
add
inc
sbb
sbb
inc
push
mov
push
shrb
push
outsl
jbe
test
movsl
and
rolb
jecxz
jecxz
sbb
and
jge
pop
sub
cmpl
pop
int3
push
or
cmp
sub
scas
and
cmp
pop
jg
jg
aad
jns
je
clc
loope
cli
inc
jne
jle
mov
outsl
in
adc
add
xor
pop
cmp
addr16
dec
xor
lcall
std
cltd
jno
scas
dec
popf
mov
xchg
xchg
push
dec
call
sti
jecxz
push
aaa
cmp
or
mov
mov
repz
xchg
bswap
adc
aaa
pop
pop
cmp
xchg
mov
mov
push
mov
stos
push
jmp
push
or
icebp
mov
cmp
cltd
mov
loop
add
dec
dec
cmp
jnp
xor
sbb
sbb
pop
dec
out
jecxz
push
mov
movsb
sbb
cmp
inc
xlat
xlat
or
adc
xchg
loopne
cmpsl
or
push
shlb
les
outsl
push
push
pop
jbe
xchg
fucomi
dec
outsl
ja
das
daa
cmpsl
and
aas
push
stos
into
push
push
sub
sub
push
aaa
xchg
mov
sub
add
push
rol
in
fnstsw
and
cltd
adc
rcll
mov
sbb
pop
enter
inc
ret
pusha
das
divb
cli
jns
outsl
jb
scas
add
or
xlat
pop
add
xchg
insl
jb
out
dec
xor
mov
mov
mov
or
or
sbb
sub
push
jno
mov
jae
cmpsb
inc
insb
inc
mov
dec
data16
push
dec
xchg
dec
add
sub
int
pop
jb
repz
sub
ficomps
pop
sarb
and
in
std
cmc
dec
mov
xor
pushf
xchg
push
testb
in
in
pushf
xchg
mov
orl
push
loopne
dec
es
jmp
and
xchg
push
nop
mov
sub
fs
dec
xchg
add
xadd
mov
fcompl
sbb
inc
xor
dec
dec
sub
xor
sub
and
mov
sbb
ja
dec
or
dec
push
lea
add
lret
lret
jo
xor
iret
xor
sub
dec
and
out
es
into
mov
sub
pusha
add
add
sub
cltd
sub
or
les
in
pop
xor
daa
insb
in
lret
repnz
adc
add
adc
jge
cmpsb
dec
xchg
xchg
mov
jmp
add
daa
nop
jecxz
adc
adc
dec
dec
pop
int3
mov
std
push
scas
aas
inc
decb
in
mov
lret
lea
inc
lahf
scas
outsl
mov
sub
cmpsb
dec
xchg
pop
fmull
inc
and
lret
movsl
ret
shl
cld
mov
fistl
and
fisubl
xchg
neg
inc
jnp
inc
aad
xchg
ja
shlb
fisubs
sbb
out
inc
cmpsb
repz
cwtl
fbld
lods
ret
mov
int
mov
sbb
xchg
mov
out
add
mov
loop
insb
loopne
jb
imul
sbb
push
push
shr
lcall
and
in
out
loopne
es
jno
rcr
xchg
cmp
and
dec
jae
int
mov
ret
xchg
dec
xchg
iret
inc
mov
jno
negl
xor
lahf
mov
xchg
lds
les
inc
fists
push
cmpsb
iret
mov
lock
in
mov
dec
shrl
es
in
in
rolb
icebp
mov
lret
jb
or
and
ret
aam
daa
es
and
pop
and
js
cs
jl
std
cwtl
call
cmp
dec
test
dec
lahf
scas
mov
rorl
xor
and
nop
cltd
jecxz
pop
xchg
adc
cli
repnz
popf
leave
inc
inc
sarl
and
fcoml
dec
push
ja
jl
cli
pop
enter
aaa
clc
fisubrl
in
mov
fincstp
clc
scas
sub
int
insb
mov
add
ficoml
call
add
inc
aaa
xchg
in
in
cwtl
sbb
pop
popa
lods
mov
push
xchg
or
loopne
cld
dec
ret
loopne
and
imul
les
lcall
repnz
gs
mov
fwait
insb
add
ljmp
mov
inc
and
ret
inc
jge
mov
stos
sub
mov
mov
jb
push
ss
inc
mov
out
pop
mov
aas
xor
or
sbb
sbb
lahf
imul
add
add
pop
pop
xor
push
adc
add
movsb
push
lods
or
bound
push
lods
imul
sbb
test
push
push
cmp
xchg
add
idiv
out
fisubs
xorl
xlat
jl
idivl
out
out
mov
dec
fldt
or
add
scas
jne
sub
or
sub
cmp
cmp
lea
xchg
xor
loope
scas
jno
mov
xchg
mov
flds
xchg
xor
pop
aaa
jo
insb
rolb
out
add
jge
imul
call
push
add
inc
out
and
sbb
jmp
pop
dec
ds
mov
shll
hlt
adc
setl
xchg
ds
int
lcall
sarw
scas
xchg
mov
jg
dec
lea
mov
cmp
sbb
mov
and
mov
mov
aam
pusha
nop
cltd
dec
mov
dec
sbb
aaa
sbb
lock
sub
push
xor
fbld
or
bound
add
sbb
add
push
push
lret
xor
aaa
xor
dec
popf
pop
push
sbb
sbbl
dec
rol
aam
jle
stos
pop
inc
pop
ljmp
add
icebp
xchg
xchg
insl
mov
popf
jmp
sub
inc
mov
mov
sub
cmp
jg
sbb
lcall
xchg
xor
cmp
push
dec
cmpsl
inc
inc
jo
mov
ja
cltd
ret
cmpsl
fidivrs
xchg
roll
push
cmp
cmp
outsb
or
mov
je
sub
mov
sarl
or
add
push
sbb
test
and
push
xchg
dec
pushf
inc
pop
ja
xchg
dec
jmp
push
inc
mov
dec
dec
mov
xchg
cmpsl
xchg
aad
sahf
xchg
daa
daa
jns
iret
and
stos
push
jns
shr
inc
adc
subb
int
cmpsl
xlat
and
cmpsb
scas
mov
push
popf
loop
xchg
jp
jl
int3
adc
xchg
sbb
out
jns
insb
dec
inc
loop
jecxz
sbb
into
cmc
xchg
mov
pop
ljmp
pop
mov
pop
loopne
or
mov
cmp
clc
iret
pop
push
icebp
pop
dec
jmp
inc
inc
loope
gs
sbb
jecxz
lret
dec
ljmp
gs
je
cwtl
mov
je
repnz
xlat
addr16
out
movsb
pop
jno
in
mov
lods
fadds
les
jmp
push
pushf
and
inc
enter
mov
or
and
jmp
add
dec
lods
or
loopne
pop
mov
push
ss
jecxz
sbb
es
inc
add
or
sarb
movsl
movsl
jo
adc
into
xlat
adc
dec
xbegin
or
pop
sbb
and
mov
mov
scas
popf
inc
cmp
les
jae
xchg
fsubr
dec
add
test
inc
lret
icebp
pop
dec
adc
mov
mov
inc
je
push
icebp
push
ja
pop
xchg
pop
insl
test
test
mov
or
sbb
cmpsl
fdivp
stc
clc
leave
pop
pop
mov
add
add
sbb
test
push
cmpsb
xchg
popf
test
test
jnp
sub
mov
movsl
mov
push
nop
mov
push
mov
mov
sbb
repz
sub
cmc
jl
jecxz
jl
iret
mov
or
inc
outsb
das
je
lahf
mov
xchg
xchg
cltd
sub
decl
xor
add
out
test
rolb
sub
xor
clc
sbb
out
pusha
mov
xor
rolb
leave
dec
push
insb
fdivs
outsl
push
test
rolb
lds
xchg
repnz
cmp
or
ss
push
mov
leave
push
loop
xlat
dec
movsb
sub
popf
jl
les
mov
inc
aad
jmp
fs
ljmp
ds
in
push
popa
mov
sbb
outsl
fdivrs
or
or
pop
nop
arpl
adc
addl
jl
push
cmp
mov
xchg
into
xchg
lret
daa
xchg
repnz
mov
mov
or
faddp
mov
xchg
xor
push
push
xchg
cmp
and
mov
lcall
jne
push
ja
mov
push
data16
or
dec
mov
push
iret
xor
mov
dec
sbb
cmpsb
call
or
in
sub
out
dec
jecxz
pop
mull
dec
inc
mov
mov
mov
test
insb
test
rcr
mov
bound
inc
sbb
sub
notl
sbb
sbb
inc
or
mov
test
cwtl
and
add
adc
out
cmp
mov
aas
and
mov
test
xor
les
and
push
scas
stos
mov
test
loop
dec
shrl
inc
mov
fs
sub
lahf
repnz
ds
movl
mov
push
pop
jb
sub
insb
shlb
test
in
cmp
inc
icebp
imul
inc
and
popf
outsl
scas
inc
inc
imul
mov
scas
adc
pop
add
ja
leave
dec
outsl
je
mov
push
xor
xor
add
add
int3
xchg
add
xchg
adc
cmc
cmpsl
iret
repz
mov
nop
mov
dec
pop
dec
sub
neg
out
push
and
adc
aas
sbb
sbb
push
sub
inc
push
stos
dec
inc
stos
xor
or
aad
stc
sbb
cmp
mov
mov
pop
lahf
mov
inc
push
jbe
push
out
add
ss
xor
repz
sub
movsl
pop
mov
jmp
ja
mov
hlt
sahf
sbb
or
adc
xchg
data16
ret
mov
imul
loop
fcompl
das
fs
or
dec
and
pop
pop
call
push
inc
ds
mov
aam
or
ljmp
cltd
ss
dec
xchg
lock
mov
stos
fbld
shlb
insb
dec
out
inc
shll
xchg
mov
dec
gs
gs
popa
xchg
mov
and
adc
cmc
mov
sarb
pop
scas
mov
pop
in
test
lods
pop
sbb
mov
rorl
shlb
lods
imull
repnz
mull
cmpsl
sbbl
incl
inc
push
sbb
push
int
xor
pop
add
sub
jnp
mov
into
cmp
cltd
mov
es
out
jb
mov
mov
mov
jl
mov
xor
sub
pop
and
sbb
rcrb
fcoml
cmp
sub
in
mov
fsubp
dec
mov
mov
shll
mov
shrb
mov
insw
inc
pop
cld
lret
into
dec
test
jg
push
cmp
adc
popf
push
lock
dec
out
mov
push
lahf
inc
hlt
pushf
push
push
xor
push
mov
and
int3
scas
adc
xor
cmp
jb
sahf
sub
dec
imul
inc
xchg
aaa
pusha
sbb
push
std
push
imul
cmp
and
pop
pop
cmp
subl
insl
jmp
aam
lods
fbld
xor
mov
pop
sub
andb
orb
bound
xchg
in
shrl
push
push
adc
mov
clc
pop
pop
clc
test
push
addr16
or
add
adc
enter
adc
and
daa
mov
nop
add
dec
sbb
repnz
rolb
enter
inc
mov
adc
ss
and
daa
xchg
inc
sub
and
add
and
dec
int3
xor
cmpsb
cmpsb
mov
or
jo
push
test
xchg
or
hlt
jbe
and
stc
mov
outsb
popa
mov
cmp
xor
inc
test
jp
in
cmpsl
push
cmp
lea
cs
push
xchg
imul
sarl
pusha
out
sahf
xchg
mov
fdivrl
jb
lret
lock
jp
lds
dec
fdivr
shl
insl
sub
xor
mov
aam
jp
inc
mov
lds
insb
test
shlb
inc
aas
fldcw
lea
mov
out
jecxz
add
mov
add
push
in
sbb
daa
outsl
xor
push
mov
or
push
add
test
push
test
aas
jge
popa
adc
bound
out
cmp
jnp
test
cli
pop
jne
jl
mov
mov
ficoms
lods
sub
lea
inc
pop
std
out
mov
repnz
push
lock
js
negb
in
sub
cmp
mov
loope
stc
and
loope
cmp
add
sti
cmp
test
jmp
jmp
inc
jp
mull
add
test
rclb
rcrl
jns
dec
pop
dec
pop
ja
mov
xor
push
ljmp
cmc
sub
xor
rcll
jmp
arpl
arpl
fstps
inc
adc
into
addr16
xor
movsl
xor
addr16
clc
push
xorb
jp
ret
dec
push
js
ss
xchg
or
sahf
mov
getsec
cmpsb
sub
mov
add
ret
mov
pop
inc
mov
mov
xchg
jmp
loop
add
in
ds
aas
sbb
jp
push
cmp
sbb
sbb
push
sbb
or
outsb
mov
mov
sti
gs
mov
aaa
cmpsl
fs
lahf
inc
ds
xor
push
cmp
push
mov
jnp
add
pop
or
mov
adc
sbb
fiadds
mov
add
outsb
push
dec
mov
pop
mov
sbb
dec
xor
pushf
andl
shr
out
jb
movsb
dec
cs
cmc
jo
jecxz
cmp
cmp
scas
sbb
rcr
ja
dec
sub
aaa
int
ds
xchg
jae
xor
rorb
mov
mov
jmp
ja
sub
jne
mov
push
inc
cmc
pop
xchg
push
mov
mov
ret
xor
mov
test
jg
xor
iret
cmc
xor
sbb
jae
jg
xor
mov
sti
rcrl
mov
dec
mov
cmp
ret
shll
jns
dec
jo
movsl
adc
mov
movsl
push
imul
movsl
pusha
mov
xor
mov
fsubs
movsl
mov
in
or
xchg
repz
sbb
push
sub
xor
cvtpi2ps
jecxz
mov
lahf
mov
sub
mov
jl
ljmp
jp,pt
mov
jne
dec
sarb
scas
and
ret
out
inc
mov
bound
jb
rcl
mov
push
ret
popa
ret
push
jmp
xor
sub
sub
pop
sti
and
bound
not
push
jnp
xchg
push
inc
xchg
xchg
push
stc
test
es
cmp
in
add
sbb
ja
loop
sub
xor
inc
out
cli
icebp
push
shlb
nop
pop
jp
jmp
mov
push
in
add
cmp
mov
lds
fs
insl
lock
jne
mov
loopne
jp
or
data16
in
mov
mov
jno
neg
jg
sub
xchg
sbb
cmp
adc
hlt
sbbl
dec
mov
movsl
mov
cmpsl
call
bound
mov
test
cmc
cld
mov
mov
dec
subb
xorps
xchg
mov
push
stc
mov
insb
mov
mov
imul
pop
jns
in
cwtl
leave
in
add
mov
sub
xchg
fs
push
jecxz
ret
or
shl
repz
cs
push
fldenv
in
lds
shr
subb
mov
jo
shr
xor
jnp
aaa
addr16
aaa
push
ss
jo
outsl
inc
clc
leave
loopne
xor
mov
pop
jo
jl
int
popa
xchg
out
inc
mov
and
movsl
xchg
insb
clc
pop
and
inc
repnz
push
pop
aaa
test
outsl
ljmp
aas
add
enter
push
into
emms
and
add
nop
testl
shrb
divb
int3
jnp
cmp
jbe
fistps
jnp
push
ja
fucom
not
push
out
inc
mov
rcrl
xchg
fistps
inc
push
test
test
and
xchg
adc
add
or
rorb
pop
sub
jo
mov
dec
fsubrl
push
int
icebp
push
bound
mov
push
data16
mov
loop
roll
add
sub
jo
sub
dec
fldl
sbb
stc
popa
aam
or
in
sar
mov
lahf
cltd
test
cmpsl
sbb
push
jb
mov
fcompl
cmpsl
rcrl
cmp
cmp
mov
js
jmp
int3
aam
repnz
cmp
cs
cmpsb
fadds
pushf
or
push
mov
adc
cld
fcompl
jle
imul
mov
lods
cld
xchg
pop
in
mov
js
cmp
and
or
jo
mov
jmp
in
outsb
mov
xor
outsl
dec
xor
and
push
das
je
ret
arpl
bound
sub
iret
jo
aas
mov
jb
xchg
out
std
les
repz
jle
mov
mov
pop
test
mov
add
sbb
div
cmp
sbb
inc
xchg
loopne
inc
pop
movsb
in
mov
jecxz
insl
insl
sbb
int3
push
stos
xchg
or
xorl
out
repz
mov
xor
push
pop
pop
cmp
jp
or
test
inc
push
push
and
fldenv
adc
out
and
frstor
fildl
cwtl
inc
rcrl
mov
jnp
sbb
orl
xor
cmpsb
or
mov
lds
inc
inc
pop
jne
test
imul
in
sbb
pushf
sbb
repnz
mov
adc
dec
inc
adc
sbb
lea
adc
push
add
inc
xor
test
inc
aam
fs
in
enter
mov
pusha
cmp
fbstp
jae
lcall
shrl
movsl
xor
jns
xor
loope
test
sbb
mov
xchg
lahf
sub
fstpl
shlb
xchg
ret
inc
sub
aad
aad
es
push
mov
jb
jno
ror
xchg
push
in
adc
pop
mov
jbe
cmp
xchg
mov
repnz
das
adc
shrl
mov
fsubrs
mov
cmp
mov
mov
aas
adc
mov
sub
mov
mov
jb
xor
movsl
sahf
and
iret
icebp
sub
mov
xor
xchg
cld
push
pop
outsl
cmp
shlb
cmp
imul
mov
push
mov
pop
stc
popa
mov
inc
icebp
subl
adc
lods
movsl
jmp
push
repz
mov
mov
add
or
fidivl
fistps
icebp
push
out
pop
cmp
push
xchg
pop
xchg
sti
rol
loopne
pop
mov
xchg
outsl
testl
xchg
add
and
icebp
mov
outsb
das
test
jge
jmp
fcomps
cmp
lcall
sbb
loope
lret
sub
ja
and
in
mov
dec
mov
in
mov
divl
mov
push
lret
icebp
scas
push
cs
ljmp
mov
in
cmpsl
xchg
mov
scas
insl
inc
sub
out
test
fwait
shll
pop
jp
test
push
aam
xor
push
push
fst
insb
mov
aad
xchg
pop
loopne
shr
xor
stos
repz
xor
icebp
out
inc
inc
push
dec
xor
dec
push
movsb
adc
push
add
cmp
fwait
pushf
xor
fcomps
popa
mov
dec
sbb
jle
fwait
jmp
negl
sbb
inc
jo
lea
or
pop
es
inc
sbb
out
lea
pop
repnz
hlt
and
stos
mov
dec
sbb
je
stc
lds
ds
gs
sahf
or
mov
jg
and
mov
sahf
xchg
cs
fisubrl
out
mov
dec
sub
jmp
pop
push
mov
dec
pop
mov
jns
fbld
mov
bound
mov
sarb
call
lahf
push
dec
out
adc
gs
and
enter
ret
popf
push
and
lock
idivl
in
sti
xor
jo
dec
notl
jle
mov
pushf
push
push
push
xchg
movsl
cmp
push
int
les
pop
dec
add
pop
xchg
mov
pop
adc
sbb
call
jb
and
pop
mov
dec
xor
out
loop
push
jns
or
jae
xchg
xchg
mov
cmpsb
stos
dec
imul
inc
test
jnp
xchg
imul
or
repnz
int
jle
mov
and
xor
ffreep
pop
std
pop
or
dec
push
mov
sti
mov
add
lcall
cwtl
pop
in
or
mov
in
or
pop
mov
lock
jb
pop
in
adc
je
out
sbb
adc
cs
mov
fisttps
mov
jmp
hlt
mov
lock
jmp
cli
xchg
mul
addb
dec
pop
clc
inc
pop
scas
inc
cmp
shrl
sbb
push
sbb
add
mov
cmp
cmp
dec
test
adc
mov
les
stc
popf
rol
in
ja
repnz
push
jne
or
fcoms
inc
sbb
push
lcall
insb
dec
aad
out
pusha
dec
mov
mov
adc
mov
mov
insl
daa
push
or
data16
int
dec
in
mov
xchg
cmp
mov
add
test
call
inc
movsb
cwtl
add
movsb
aam
fisubrl
imul
imul
sarl
test
jmp
push
cmp
pop
ds
mov
inc
mull
inc
je
cs
jecxz
dec
sub
or
clc
lret
scas
mov
dec
pop
xchg
jns
rcl
faddl
insl
inc
mov
into
mov
xor
push
mov
mov
roll
pushf
mov
adc
in
mov
sub
and
xor
test
in
cwtl
ljmp
push
push
mov
jns
stos
push
les
jns
ret
test
ja
xchg
add
push
mov
pop
cmc
ror
repz
sbb
lcall
mov
ja
mov
addr16
push
mov
inc
ss
test
and
xor
data16
mov
in
je
shrb
xor
cmp
mov
cmp
jae
dec
jge
dec
lret
push
subl
add
sbb
out
negl
int
mov
aaa
inc
sahf
sbb
pushf
and
cmp
cmp
test
and
sbb
lods
daa
pop
pop
cltd
jg
clc
lock
lahf
scas
stc
pop
pop
push
push
test
and
xor
out
inc
or
and
mov
xor
xchg
pop
arpl
ja
gs
dec
cld
adc
aaa
stc
xchg
or
jns
jns
or
es
in
leave
jmp
ja
or
inc
jg
jle
lahf
fld
shlb
into
rol
dec
movsb
jl
popf
adc
xor
sbb
dec
push
les
pop
out
adc
mov
jbe
mov
loopne
test
clc
jo
insb
int
mov
movsb
adc
push
push
add
push
mov
mov
leave
sub
add
stos
push
push
in
cs
sbb
lret
daa
out
inc
out
sbb
cmpl
stc
add
cmp
sti
jne
aaa
icebp
or
pop
popf
ss
ljmp
cs
imul
mov
mov
in
test
out
xor
xchg
loope
push
into
in
aam
push
jbe
fnstsw
lret
jl
pushf
jno
imul
stos
sub
xchg
fiadds
mov
aaa
lret
mov
shll
es
rolb
arpl
idiv
pop
cmp
lahf
mov
xchg
xor
jecxz
mov
push
and
test
jo
arpl
popf
sbbl
lea
add
mov
push
cmp
scas
rcrl
sbb
mov
push
leave
sub
test
ds
jne
adc
mov
jp
clc
sbbb
jnp
mov
jecxz
mov
popf
add
ret
add
hlt
sub
add
xchg
cmp
push
pop
xchg
sahf
sub
dec
inc
push
int
stc
adc
call
xchg
jge
out
test
push
add
mov
mov
cli
leave
mov
xchg
and
outsb
jno
mov
cmpsb
call
cmp
dec
jecxz
mov
cmp
stc
lock
and
cmp
jns
lahf
data16
icebp
jecxz
shlb
fnstcw
xorb
xchg
cmp
xor
push
mov
pusha
jb
mov
les
pop
xchg
lods
adc
sbb
fs
pop
nop
into
mov
adcb
lods
xor
leave
das
ss
fldl
fisttpll
arpl
mov
jmp
push
pop
fidivrl
cwtl
mov
ficoms
cli
jns
int
pop
sbb
cmp
sahf
sbb
mov
sahf
mov
cmp
shl
adc
dec
in
clc
ja
cmp
pop
mov
aas
cmpsl
jg
in
int
sbb
and
jle
mov
or
sbb
cltd
mov
ret
dec
shlb
popf
and
xchg
cli
js
nop
or
and
xor
ficomps
jnp
ljmp
call
add
or
inc
in
xor
sub
mov
outsl
sub
lods
nop
ja
pop
les
jmp
dec
inc
bound
adc
leave
sahf
test
mov
mov
fstpl
aad
add
imul
pop
pop
addr16
lock
pushf
fsubrs
test
and
mov
out
xchg
mov
fucomi
xchg
out
pop
frstor
pop
inc
loop
lds
or
mov
and
jp
loope
test
xor
pop
mov
out
mov
es
push
xor
inc
xlat
pop
sbb
adc
xchg
xlat
cld
xchg
lret
aam
in
adc
ds
inc
push
sub
push
jl
add
jo
lds
mov
mov
int
xchg
jmp
mov
sub
xor
pop
jl
pop
add
dec
pop
add
jae
pop
jp
fsubrl
rcrl
je
sarb
xchg
movl
divl
and
outsb
rcrl
outsl
push
lret
ret
jbe
popa
lods
jmp
lahf
sahf
mov
popa
jp
xchg
jbe
and
sub
in
cmp
mov
fisubl
or
push
popa
lock
pop
fwait
mov
inc
jge
xchg
insl
inc
pop
fiaddl
leave
ret
xchg
repz
adc
lret
sti
mov
cmp
mov
sub
mov
icebp
mov
xchg
shll
sbb
aam
mulb
inc
clc
xchg
push
imul
push
mov
rep
jle
cli
mov
fcmovb
sub
or
mov
call
push
inc
fildll
add
dec
movsb
mov
jle
mov
lcall
push
xlat
enter
mov
fists
mov
or
imul
stos
arpl
ds
mul
push
fsubl
outsb
mov
outsl
add
fists
shll
outsb
push
inc
ss
pop
mov
pop
push
sahf
loope
outsb
sub
roll
push
test
mov
jo
inc
push
sbb
jmp
out
movsb
jl
jae
js
rclb
leave
out
pop
cli
test
cmpsb
jl
and
call
inc
xchg
in
fstp
xor
xor
jmp
xchg
ror
stos
pop
xor
and
rcl
mov
movsl
inc
inc
lods
ds
add
xchg
or
jne
mov
fldl
negl
cld
mov
adc
fs
test
data16
loop
mov
push
fcomps
xchg
js
pop
jmp
ljmp
sub
sbb
mov
sub
pop
fstl
dec
stos
inc
sub
in
or
jae
mov
lcall
sbb
data16
jns
stos
mov
ljmp
movsl
mov
and
lret
push
imul
addr16
jmp
inc
mov
sub
cmpsb
test
pop
mov
ds
xchg
insl
dec
cmp
in
pop
inc
loopne
sbb
xchg
mov
push
cltd
push
pop
cwtl
sbb
cmp
lret
fistpll
or
imul
sbb
out
sbb
jne
scas
cmp
ret
jae
movsl
mov
jle
fidivs
xor
sbb
enter
cmp
or
das
xchg
lahf
hlt
inc
test
cmp
inc
and
test
paddq
in
int3
sbb
sbb
jns
adc
xor
add
scas
psubd
or
jns
mov
push
inc
dec
hlt
int
cmc
daa
js
repnz
repz
lds
fldl
xchg
sub
xchg
inc
cmpsb
movsl
out
mov
movl
je
add
sub
dec
in
in
mov
rclb
insl
xchg
ret
fidivl
outsb
sbb
in
mov
leave
adc
jb
jg
pop
push
xchg
fucomi
xchg
jecxz
out
xor
in
or
xchg
jge
ficompl
sub
dec
imul
aaa
cmp
lret
push
push
arpl
fidivrl
pop
neg
sub
xlat
pushf
fldcw
xchg
int
push
adc
ja
inc
mov
dec
inc
jg
movsb
lahf
push
mov
jecxz
cltd
idivl
mov
mov
test
cwtl
mov
adc
addb
cmpsl
and
add
lahf
dec
jg
daa
xchg
lret
ret
or
aas
adcl
cmc
sbb
scas
or
mov
mov
add
jecxz
adcl
shlb
dec
pop
loopne
jb
and
pusha
or
adc
jl,pn
sbb
mov
mov
xor
dec
add
rcr
mov
mov
std
dec
push
sub
idiv
gs
aaa
jge
xchg
cmp
cwtl
dec
mov
push
add
lret
xorl
sub
xor
pmullw
outsl
jns
dec
cwtl
out
mov
mov
add
dec
xor
idivl
rol
fidivs
inc
sub
pop
lds
pop
mov
pop
frstor
mov
cld
popa
mov
leave
pusha
inc
mov
mov
mov
inc
pop
sub
stc
ds
push
arpl
xchg
stc
loop
or
es
outsb
leave
adc
fsubrl
jecxz
jnp
aad
clc
sarl
sub
mov
fidivrl
shll
pop
mov
lds
arpl
adc
ljmp
mov
add
sub
arpl
std
xchg
jo
loopne
ret
std
ficomps
jp
adc
sahf
inc
sbb
fbstp
sahf
out
movsl
cli
aam
xor
lods
jecxz
inc
mov
scas
loope
mov
jns
mov
cmp
cmpl
or
mov
xor
push
and
lahf
xchg
subl
cld
outsl
mov
jno
fdivrl
loopne
inc
in
mov
clc
test
xor
mov
lcall
and
mov
je
mov
outsl
fsubrl
mov
mov
sub
inc
testb
fs
jne
jbe,pt
cmp
mov
out
pop
dec
cmp
cltd
jbe
sbb
pop
ror
xor
leave
mov
sbb
cmc
aas
loope
lcall
fdivl
adc
ret
or
pop
pop
mov
aam
jge
cmp
mov
negl
cli
pop
cmp
jnp
push
and
cmp
or
pop
jne
daa
dec
push
fsub
or
push
inc
fcoml
cmpl
xchg
scas
movl
lahf
dec
int3
sub
add
sbb
xchg
push
xchg
jl
movsb
inc
or
icebp
mov
cltd
xchg
stos
cwtl
adc
mov
clc
in
bound
out
ja
adc
out
repnz
adc
daa
push
xor
and
push
lock
jmp
mov
addl
popa
push
xor
bound
ret
cmc
lds
mov
stc
jae
jmp
idivl
and
jnp
mov
popf
cmp
xor
insl
es
push
inc
enter
inc
decl
and
sbb
jg
fstl
jle
adc
loope
ds
je
fbld
dec
rcl
and
outsl
shr
xchg
xor
adc
jmp
jne
aam
dec
jge
ffreep
repnz
test
jb
mov
pop
int
test
dec
pop
push
lods
mov
dec
les
int
jbe
mov
mov
aaa
and
pop
push
mov
lret
lahf
testl
iret
stos
sbb
cmpsb
jnp
popa
push
and
xor
mov
mov
fildll
cmp
or
setns
mov
lods
hlt
mov
fidivs
sbb
in
jle
imul
loop
dec
mov
lcall
icebp
or
cltd
fstl
add
es
dec
fwait
movsb
mov
sbb
and
rcrl
xchg
sbb
test
xor
sbb
push
and
cmp
sub
push
out
cwtl
scas
dec
ljmp
popa
aaa
cmp
test
cmpsl
mov
pushf
into
shll
mulb
jae
mov
mov
jnp
cmp
les
jno
pop
inc
push
mov
test
cmp
je
sarb
mov
lcall
enter
lds
add
sub
fwait
lret
adc
int3
lock
popf
dec
lret
push
stc
into
int
popa
inc
scas
sbbl
mov
jecxz
jae
dec
ljmp
fsqrt
sbb
call
mov
or
out
push
inc
fwait
ljmp
test
pop
sub
inc
dec
cmp
pop
mov
mov
pop
jmp
inc
cmpsl
popa
stos
popf
cltd
popf
mov
xor
sbb
adc
add
mov
xchg
push
pop
xchg
push
jbe
jle
jge
mov
sbb
orb
js
out
pop
add
inc
rcll
sbb
lods
jnp
push
lret
mov
int
xchg
push
cmpsl
push
cmp
gs
jnp
cmp
mov
pop
fbstp
push
dec
es
sub
negb
xor
fstpl
call
jge
push
xlat
popl
scas
fwait
adc
xor
sar
push
jl
add
fstpl
aas
or
or
stos
cld
jg
daa
iret
bound
pop
divb
dec
cmp
or
push
sub
xlat
nop
int
dec
dec
mov
xor
or
sub
stos
jbe
shrb
xor
xorl
cwtl
test
out
inc
cmp
fidivl
sub
repnz
jbe
cmp
mov
and
push
std
lock
les
lds
pop
xor
jnp
pusha
dec
or
sub
cmp
adc
mov
popa
scas
dec
sbb
notb
xchg
push
push
jle
adc
lods
mov
iret
cmp
imul
gs
imul
and
popa
popf
out
shll
sub
mov
mov
xorb
adc
mov
sub
jle
jmp
push
adc
loop
pop
push
int3
hlt
fcoms
push
pushw
test
and
cld
cmpsb
dec
mov
cli
pop
filds
data16
jne
adc
ljmp
mov
mov
inc
mov
popf
rcll
sahf
outsb
sub
push
sub
and
pop
lcall
movsl
xchg
dec
mov
sbb
adc
push
addl
sub
lds
fadds
jnp
lret
mov
jecxz
call
dec
adc
push
mov
in
mov
jbe
sub
jp
jp
nop
mov
jo
dec
cmp
inc
xchg
fiadds
lds
leave
shl
mov
lds
mov
mov
test
call
xchg
movsl
popa
push
aam
shrl
xchg
test
push
mov
mov
scas
or
dec
fsubs
add
jb
bnd
inc
xchg
mov
jae
and
fsubs
lock
mov
test
adc
cmpl
mov
int
mov
test
mov
inc
sbb
repz
mov
insb
pop
testb
push
add
xchg
inc
jl
int
nop
pop
push
test
jl
in
test
mov
sub
push
mov
sti
xlat
sbb
mov
sbb
cmpsl
or
lds
jmp
fidivs
ret
xor
push
mov
inc
pop
fisttpll
shlb
add
mov
insl
scas
shrl
and
cs
pop
mov
mov
ret
cmp
mov
sti
roll
int3
mov
nop
fiaddl
mov
aad
orb
sub
imul
adc
adc
and
or
pop
movsb
jno
sbb
sbbb
cmp
mov
shr
mov
cmp
icebp
sub
in
mov
adc
pop
sbb
or
xchg
add
addr16
lods
or
dec
sub
psubusb
pop
flds
into
out
mov
mov
xor
mov
push
clc
jbe
jmp
push
dec
cmpsl
dec
inc
std
subl
and
push
sahf
cwtl
mov
push
inc
lcall
push
rclb
jmp
ror
and
iret
lahf
mov
adc
lahf
in
mov
rclb
movsb
xchg
movsb
sbb
hlt
subb
je
call
xor
mov
xlat
popa
push
pushf
xchg
mov
test
jb
lock
std
cs
decl
cmc
std
mov
popa
in
mov
adc
pop
cs
add
push
cs
and
inc
dec
jns
std
jmp
jge
pop
fadd
pop
in
les
fcomip
xor
rcrl
mov
mov
sti
sbb
sbb
popf
ficompl
mov
jg
ss
mov
mov
roll
xor
mov
psadbw
xor
int3
int
adc
jo
cwtl
pop
or
adc
xchg
movsl
out
cwtl
xchg
mov
insb
cmp
mov
add
adc
xchg
mov
outsb
in
jnp
inc
scas
mov
mov
adc
push
icebp
cmp
movsb
fcomps
fildll
pop
fiaddl
movsl
jg
xchg
fnstcw
mov
push
fmull
pop
dec
hlt
cli
stos
add
xor
dec
push
cmp
repz
stos
inc
stos
lea
pop
pop
xor
repz
out
fmull
out
in
add
add
in
dec
xor
and
lods
loopne
mov
cmp
jns
fiaddl
or
or
adcl
imul
inc
dec
pop
inc
mov
lahf
push
outsl
jae
fisubrs
cli
or
lea
jecxz
stos
mov
movsb
jmp
mov
in
scas
lahf
ret
and
mov
inc
add
mov
cmp
loopne
mov
ficoms
das
ficompl
cmpsl
ret
pop
and
or
insb
iret
xor
jns
inc
outsl
cmp
ret
mov
adc
inc
pop
scas
roll
adc
jp
enter
fldenv
or
pop
aad
push
and
gs
fdivs
scas
rclb
xchg
test
out
lret
jle
insb
jnp
loopne
xchg
jbe
inc
push
xlat
shlb
mov
out
idivb
sti
dec
in
jbe
mov
test
inc
lds
xchg
mov
fnsave
aad
mov
inc
or
mov
adc
adc
or
mov
adc
adc
test
sbb
fcmovnb
or
notl
rcll
movsl
addr16
nop
cmp
clc
xchg
aam
out
cs
flds
lret
mov
xchg
or
cmp
inc
jne
mov
adc
das
adc
pushf
inc
dec
sti
ficoml
or
mov
or
push
dec
add
or
outsl
sbb
loop
imul
sbb
pop
xor
cs
and
dec
pop
jbe
rclb
xchg
ja
sbb
jno,pn
xor
andb
int3
bsr
mulb
pop
and
xchg
fsubl
mov
ss
sbb
lock
pop
cmp
mov
jns
test
sbb
jle
jl
jge
mov
mov
jecxz
mov
mov
push
leave
cli
test
out
jle
and
test
mov
stc
push
loopne
and
loopne
repz
and
dec
shll
stos
jnp
mov
dec
jg
pusha
nop
call
stos
mov
sbb
imulb
repz
pop
xor
popf
pop
aas
in
dec
insb
pop
mov
ja
lret
add
inc
daa
rcll
lret
jg
lret
xchg
idivb
int3
fucomp
dec
ds
mov
add
pop
lods
ret
sbb
fwait
mov
xchg
xor
inc
sahf
popa
jge
dec
and
sbb
lret
fadd
adc
or
lret
in
fsubrp
jge
dec
push
mov
pop
ficoms
das
add
inc
maxps
mov
push
ja
xor
jns
cmpsl
jb
pop
inc
jo
mov
jne
cmp
ret
mov
and
add
xor
and
dec
fs
shll
cmp
xchg
sbb
mov
bound
mov
pop
add
jp
cld
gs
cmp
pop
mov
ljmp
pushf
addr16
out
add
adc
test
shl
mov
push
dec
fstpl
jbe
mov
out
or
out
lret
or
sub
outsb
adc
dec
outsl
xchg
adc
dec
jnp
insl
js
jg
inc
jle
jno
mov
sub
pushf
inc
push
xchg
cmp
fstl
aam
jno
mov
leave
std
sahf
int3
fildll
loopne
cltd
mov
push
and
movsb
nop
clc
es
xchg
fiadds
lcall
mov
cmp
leave
in
adc
mov
mov
jl
mov
dec
outsl
ljmp
push
sub
mov
fisubrl
dec
pop
fcmovbe
lahf
arpl
fwait
cmc
add
sarb
xor
daa
stc
add
jl
inc
mov
xchg
int
jne
cmp
outsb
push
in
stos
stos
inc
xor
int
cmp
cmp
loopne
out
push
push
mov
push
fstps
dec
mov
imul
divb
cli
stos
lods
cmp
or
out
fs
stc
repz
aad
push
pop
cs
and
mulb
adc
loop
testl
add
cmpl
dec
jmp
sti
jo
mov
inc
mov
add
cmpsb
les
and
xor
xchg
or
icebp
stc
cmp
cli
sahf
mov
shr
loopne
xchg
lock
fistpl
rorb
pop
and
cld
lcall
mov
pusha
mov
jnp
fmuls
pop
in
dec
mov
push
mov
xchg
pop
mov
xchg
xorb
stos
mov
sbb
pop
or
inc
mov
mov
jns
push
repz
packssdw
les
enter
push
shll
xchg
mov
jbe
bound
fsubrp
sbb
aas
add
fstp
sti
fs
scas
lds
mov
iret
fnsave
xchg
xchg
out
pop
xchg
ror
jno
dec
pop
sbb
je
mov
xchg
ficompl
shlb
jp
hlt
xchg
lds
in
dec
lret
mov
roll
sub
int3
inc
mov
inc
mov
mov
sbb
inc
xorb
mov
or
lds
fcomp
aas
xchg
jmp
mov
push
or
sysenter
push
dec
xor
jne
sub
mov
stos
mov
pusha
sahf
jge
add
inc
pop
inc
lcall
jge
scas
sbb
imul
int3
sti
mov
sub
adc
push
out
pop
cmp
jp
inc
add
push
icebp
sbb
mov
and
cli
notl
push
ljmp
clc
ljmp
mov
mov
dec
push
jb
fstp
scas
arpl
ret
pop
mov
leave
and
pop
mov
pop
stc
pushw
ret
lret
pop
jmp
adc
xlat
cmp
pop
xor
mov
jecxz
or
sbb
lods
sbb
in
jl
mov
mov
nop
icebp
add
cli
mov
mov
test
adc
ss
out
sub
push
sbb
dec
sbb
mov
sub
push
add
mov
stos
add
out
mov
mov
js
inc
shrb
mov
push
shrl
fisubrs
and
push
iret
neg
push
and
cmp
pop
sub
jb
mov
mov
subb
add
xchg
inc
inc
test
jno
inc
inc
loopne
ret
in
lods
push
sub
pop
sbb
push
lret
dec
sub
adc
xchg
jle
lea
in
pop
mov
sti
pushf
adc
idivl
ja
out
fwait
out
mov
jns
call
sti
sti
call
lods
out
in
fs
ss
push
adc
test
pop
xor
test
mov
adc
pop
mov
cltd
mov
iret
mov
sbb
push
jo
or
xchg
fcoml
mov
repz
sbb
xor
gs
sti
adc
sbb
jno
paddw
jb
sbb
mov
stos
and
fsubrs
add
fisubrs
or
push
jle
fsubrl
addb
push
push
lret
mov
ficomps
daa
into
sub
gs
inc
jae
mov
and
adc
aaa
roll
and
dec
inc
mov
pop
je
ljmp
hlt
scas
pop
dec
fmul
mov
mov
jbe
imul
xchg
push
dec
pop
mov
push
dec
xchg
mov
inc
ret
jo
mov
mov
enter
fbstp
lock
or
sarb
jne
aad
aaa
test
dec
movsb
cld
test
aaa
sub
mov
lods
xor
data16
test
push
leave
dec
push
push
xchg
neg
outsb
sbb
xchg
jle
push
fmuls
in
mov
outsl
push
test
divl
pcmpgtd
pop
xor
rclb
inc
mov
js
push
lods
xlat
jno
roll
rcll
out
outsl
insb
or
aas
mov
mov
outsb
fwait
clc
pop
popf
out
pop
fstpt
mov
enter
int3
mov
shrb
ret
lods
mov
mov
int
cmpsb
fnsave
push
jns
loopne
jno
in
aam
call
aam
push
aas
pushl
loop
cmpsl
sbb
add
std
iret
leave
jp
mov
cmpsb
aam
mov
mov
inc
and
mov
sbbb
mov
xor
fs
out
cmp
xor
call
inc
cld
mov
mov
fdivs
ds
stos
fdivs
in
inc
inc
cmp
pop
clc
mov
inc
lods
fs
cmp
mov
ret
popf
inc
jb
and
push
pusha
int
cmpsl
out
stos
jecxz
cmp
into
fcomps
inc
mov
repnz
fadds
dec
movsb
ja
loopne
ret
test
fmull
lock
push
add
push
mov
inc
xchg
or
jno
dec
std
fsubrs
shrb
ja
out
adc
jmp
sub
push
push
and
imul
pop
cmpl
int
or
cld
push
cmc
mov
out
or
fsubs
adc
pop
sub
inc
mov
bound
add
aam
inc
pusha
mov
std
pop
mov
and
fidivs
sub
sub
ret
cs
mov
xchg
aad
insl
cwtl
cld
in
xchg
rol
push
ret
jecxz
and
ljmp
jecxz
ret
inc
iret
mov
stc
jmp
jecxz
stc
push
ljmp
xor
iret
je
pusha
cs
js
and
negl
push
jle
inc
mov
lods
or
adc
repnz
push
sbb
rolb
or
lcall
dec
xchg
movsb
sub
sarb
shrb
or
push
or
ds
cmp
test
pop
arpl
pop
or
int3
outsl
scas
sub
dec
sahf
push
cmpl
bound
test
stc
push
fistpl
mov
mov
out
cld
push
leave
xor
jmp
stc
fstps
cmp
inc
dec
adc
std
and
mov
jmp
and
test
outsl
rcrl
lock
pop
add
movsl
mov
pop
mov
xchg
lahf
stos
adc
out
pop
dec
and
mov
and
xlat
incb
dec
fwait
loopne
mov
lds
push
push
data16
sub
into
in
lods
xlat
dec
pop
stos
xchg
add
sbb
lods
mov
cwtl
and
mov
mull
test
fisttpll
sub
cmp
xchg
mov
loopne
daa
cmp
pusha
lods
pop
sti
and
and
stos
jo
pop
xchg
jp
rorl
imul
and
sbb
jnp
shrb
movsl
fldl2e
outsl
ret
cmpsl
fwait
lods
shr
mov
jne
pop
into
fbstp
add
int
xor
mov
cli
lds
imull
cmp
mov
stos
push
inc
push
lods
sub
inc
rorl
pop
shl
xchg
jg
cmpsb
pop
pop
cs
xor
jl
stos
lods
inc
sub
arpl
das
fdivs
sti
adc
lods
lods
in
clc
mov
mov
push
call
lret
loop
xchg
js
lcall
cmp
xchg
xchg
int
dec
aaa
or
sub
inc
sub
jmp
dec
mov
in
les
add
data16
lock
enter
test
adc
pop
loope
jle
ret
lds
mov
es
pop
sub
flds
xchg
lea
inc
outsl
in
push
inc
lret
pop
adcb
pop
stos
inc
mov
mov
mov
lea
shl
gs
mov
inc
jmp
xchg
adc
ret
mov
aad
jnp
xor
stos
es
jno
scas
cmp
or
xor
ret
jp
add
sbb
mov
insb
lock
ret
mov
in
aad
sbb
out
add
leave
push
mov
lcall
pop
sti
pop
scas
out
or
aas
jb
das
add
mov
and
bound
dec
xor
and
imul
in
or
sub
imul
or
test
lret
enter
inc
lret
lods
push
pop
in
cli
mov
ja
insb
lock
aaa
pop
pop
and
clc
scas
push
mov
imul
idivb
insb
idivl
ds
dec
out
lcall
add
lret
mov
and
lahf
iret
je
add
jl
cmp
inc
jecxz
pop
insl
test
out
xchg
dec
adc
pop
jb
rcrl
mov
ljmp
mov
or
sbb
leave
int3
or
jae
mov
neg
aas
cmp
jnp
les
fidivl
lock
push
xchg
fwait
mov
sub
pop
lret
xor
mov
jno
push
sbb
aaa
shrb
into
lods
mov
mov
test
aad
scas
xchg
loop
neg
mov
cmc
dec
sub
lock
rcll
fisttpl
ret
std
mov
bound
outsl
push
jb
ljmp
dec
repnz
adcb
jg
gs
jl
out
mov
sub
inc
xor
dec
adc
add
sbb
adc
push
cld
fldt
xchg
and
frstor
leave
or
inc
inc
lods
addr16
mov
mov
andb
push
lret
and
outsl
outsl
ljmp
sub
jb
in
mov
mov
pop
movsl
mov
aas
push
cmc
clc
jns
sub
mov
mov
mov
call
iret
in
loop
dec
jno
cld
bnd
jmp
les
xchg
cmp
fldln2
inc
lcall
andb
leave
popa
push
hlt
jg
in
push
iret
mov
push
add
idivb
mov
popa
and
dec
xor
xchg
ja
sbb
aas
hlt
fs
cmp
out
pop
sar
or
jg
add
dec
jl
mov
stos
std
dec
mov
mov
imul
clc
mov
fwait
out
fiadds
xchg
scas
pop
jp
lret
sub
lock
fcmove
pop
iret
ljmp
jg
and
pop
out
fs
ljmp
aas
rcll
test
mov
push
fs
pop
call
pop
mov
sbb
or
sti
sbb
gs
inc
inc
repz
outsb
pop
mov
insb
test
and
adc
or
outsl
jg
enter
xor
cmpl
xchg
jbe
xlat
xor
mov
lret
lcall
jne
xor
cld
jl
out
pop
or
enter
sti
and
cwtl
nop
aad
in
int
mov
add
decb
incl
jg
enter
jmp
jo
icebp
jl
pop
cld
cltd
jmp
nop
cld
out
xchg
dec
sub
out
aas
mov
aad
incb
arpl
clc
jge
sbb
loopne
or
xchg
pop
ret
xor
pop
aas
out
fs
stos
jg
nop
sti
mov
mov
push
pop
ss
sbb
hlt
das
divl
fs
test
aas
hlt
imul
jae
ficomps
or
sub
jne
mov
in
ljmp
notl
dec
data16
leave
sub
sbb
test
inc
mov
jbe
lea
lahf
repnz
leave
cmp
out
mov
jae
scas
push
adc
or
push
aaa
cs
bound
push
adc
push
xor
lods
stos
sbb
mov
daa
xor
cmc
pop
push
test
movsl
adc
push
mov
jge
xlat
lcall
or
dec
into
lods
in
popf
insb
lret
negl
int3
cli
insl
insl
ljmp
addb
ja
sub
push
sti
div
icebp
cmc
lods
jge
aad
rclb
sub
fdivs
fwait
dec
es
repz
mov
iret
mov
lret
mov
fcmovu
fdivr
inc
in
inc
int3
fwait
insb
push
push
imul
scas
pushf
shlb
push
icebp
add
daa
jo
in
or
fwait
popf
cmp
stc
ficomps
dec
pop
add
aad
mov
fstl
jno
jbe
hlt
roll
add
jo
enter
sbb
xchg
lock
les
notl
stos
sarl
push
adc
pushf
push
icebp
push
mov
jne
js
pop
repz
jmp
mov
hlt
xchg
or
xchg
push
arpl
sbb
jmp
pop
sbbb
inc
popa
adc
mov
test
mov
mov
popa
mov
sub
and
fistl
add
dec
sbb
adc
push
int
push
cli
scas
and
ret
cmp
jmp
out
and
push
xchg
dec
jecxz
jge
inc
pop
dec
arpl
mov
inc
mov
cwtl
mov
fs
mov
push
push
pop
mov
pop
add
sbbb
push
loop
sbb
stos
fnstcw
mov
fsub
xchg
rolb
cmpsb
js
cmp
push
fisubs
sbb
cltd
mov
aad
push
cmp
lods
inc
sti
add
out
mov
xchg
cmc
js
fnsave
pop
test
push
pop
aas
fs
daa
icebp
cmpsb
and
sub
out
jmp
cmpsl
pushf
dec
and
out
mov
mov
arpl
cmpsl
out
cmpsl
fildll
mov
dec
cmc
push
pop
sbb
sbb
stos
cmp
jno
xchg
fdivr
jle
or
cs
cmp
jne
shrb
stos
lret
jne
mov
fiaddl
rclb
std
sbb
adc
jo
fstps
or
mov
loopne
out
inc
lret
push
loop
mov
es
xchg
or
or
xor
or
jecxz
pop
jecxz
or
outsl
jns
fld
mov
loopne
int3
in
jnp
sub
in
jp
cltd
shll
lods
mov
rcll
xchg
dec
ja
or
dec
push
repnz
xor
adc
mov
lea
pop
leave
testl
addr16
nop
pop
or
aam
test
inc
add
lock
pop
lahf
lods
cmp
dec
shrb
add
mov
add
icebp
in
call
xor
sbb
cmp
outsb
lahf
lods
sub
cmpsb
sub
mov
scas
pop
cmp
mov
shrl
pmaddwd
push
ss
inc
movsl
in
aaa
out
and
push
shrl
stos
mov
dec
psubusb
push
mov
cmpsl
or
in
fisttpll
mov
cmpsb
insb
fnstenv
jp
mov
mov
in
ljmp
clc
in
sbb
adc
fwait
xor
lahf
push
inc
in
sub
add
mov
into
mov
adc
and
push
test
lea
push
push
add
push
and
mov
ds
jg
data16
arpl
rorb
adc
adc
mov
dec
shll
aam
jns
lods
pop
test
jno
dec
dec
andl
ds
sbb
imul
mov
or
gs
mov
xor
test
test
xor
mov
push
movsl
aas
push
xchg
inc
lret
cmp
sub
je
push
inc
add
sahf
xor
dec
stos
fstpl
movb
int
xchg
jno
jg
jl
cmp
add
push
ss
das
push
adc
mov
inc
mov
jo
jno
dec
fdivrl
cld
movsl
cld
out
stc
in
pop
jle
or
pop
cwtl
xchg
add
dec
js
cmpsb
aas
dec
addl
push
sub
pusha
mov
mov
decl
ss
into
cmp
stos
orb
push
cltd
cmp
xor
leave
out
dec
cld
inc
cwtl
lods
in
or
stos
sub
into
aas
sub
or
into
jmp
dec
test
mov
sub
xor
hlt
sar
pop
adc
pop
mov
icebp
fists
loop
mov
mov
push
xchg
push
add
dec
out
push
and
leave
dec
movsb
loop
cmpsl
ja
cmp
jo
rorl
sbb
dec
adc
and
or
sarl
into
ja
cmpsl
mov
and
idivl
sub
outsb
adc
push
xchg
and
scas
out
xor
movsb
push
dec
mov
outsb
insl
fmuls
mov
lock
hlt
in
pop
aas
and
out
mov
mov
repnz
std
cmp
fstps
in
or
addr16
lcall
icebp
iret
xor
mov
xchg
push
pop
sbb
fstps
xchg
push
mov
loop
dec
cmp
ds
ljmp
cmp
sti
ret
icebp
mov
sti
rorb
jecxz
xor
inc
inc
xor
in
inc
cmp
rorl
and
or
mov
test
lods
jecxz
jecxz
pop
jge
nop
out
inc
push
stos
jns
out
xchg
inc
pop
sbb
sub
push
sbb
dec
mov
and
and
add
adc
cmp
dec
out
shlb
jmp
insl
adcl
push
inc
jl
insl
cltd
mov
fcmovne
movsl
jns
mov
out
dec
mov
dec
sub
call
lods
nop
mov
lahf
aaa
lea
icebp
movsl
xor
sar
fbld
cmp
nop
mov
inc
push
lods
shrb
dec
mov
adc
xor
or
dec
dec
xchg
and
out
mov
or
ret
jle
adcb
xchg
out
pop
jo
lds
dec
loope
lock
xchg
ret
mov
sub
cmpsb
cmc
adc
fcmovnu
pop
imul
addr16
inc
mov
rcll
jecxz
jne
push
inc
mov
mov
hlt
js
push
lret
jns
mov
cmpxchg
dec
loope
jge
sbb
push
jmp
frstor
arpl
xchg
int3
into
push
pop
aad
pusha
lods
leave
dec
push
and
push
dec
mov
push
je
iret
jp
fwait
popf
dec
shlb
dec
and
es
int3
rcrl
adc
iret
test
jns
subl
ds
pop
out
ljmp
loop
and
mov
loopne
in
and
jl
cmc
push
fsts
or
mov
cmp
outsb
mov
add
cmc
and
ret
sub
add
dec
ja
xchg
xchg
cmp
mov
les
cmp
inc
inc
mov
sbbl
clc
lahf
mov
mov
out
in
sti
idivb
cld
lahf
fistpll
in
mov
sbb
fnstcw
ds
xor
pop
pusha
adc
sub
in
test
adc
cmpsl
mov
add
ss
and
outsb
je
in
into
sub
ja
je
imul
addr16
add
xor
dec
ljmp
xchg
shl
lret
or
sbb
sahf
sub
xchg
cli
fdivrp
xchg
enter
roll
cwtl
into
ja
pop
mov
cmp
cmpsl
xor
scas
sub
ja
sub
stc
push
aam
das
jmp
arpl
lea
int3
dec
lcall
mov
or
and
int3
xchg
mov
lahf
lock
test
and
xor
vmovntps
pop
fcoms
out
sti
shlb
fistpll
out
xchg
jno
jmp
dec
cld
cmp
sbb
ret
jecxz
jge
seto
push
loop
push
mov
outsl
mov
push
dec
mov
xor
shlb
fs
jbe
lar
lret
jge
sbb
jno
loopne
mov
aam
xlat
inc
add
ret
jge
pop
loopne
mov
sbb
ret
daa
cwtl
mov
jg
mov
xor
add
mov
mov
shrl
fldt
jecxz
stos
adc
leave
cmc
push
mov
leave
in
ja
push
dec
cmp
or
jbe
imul
insb
data16
inc
icebp
cmp
jb
mov
mov
loopne
test
push
shrb
lds
loope
lcall
bound
jge
clc
stos
push
jno
pop
aam
popa
jle
xchg
ja
test
rclb
mov
xchg
bound
jnp
jmp
adc
cmp
xchg
jne
out
or
dec
je
lock
ficompl
lret
lahf
cmc
fnsave
std
aad
dec
rep
std
pop
cmc
aas
shlb
push
movsl
mov
movsl
lods
popf
dec
pop
cmp
jne
shll
movsl
lea
cld
adc
mov
sbb
and
pop
shll
sbb
movsb
lret
push
push
lods
int3
xchg
and
gs
push
mov
cltd
loopne
and
in
mov
js
pop
push
xor
cmc
jo
nopl
movsb
jmp
scas
dec
cli
movsl
stos
bound
pop
nop
mov
or
pop
sub
decb
mov
sbbl
mov
lcall
ja,pt
inc
test
in
xor
mov
gs
push
fsubr
mov
xchg
push
mov
int
mov
in
sub
out
push
jae
ret
dec
push
jl
das
jmp
and
adc
ret
fstl
jae
cmp
or
mov
test
mov
addr16
out
pop
int
bound
aaa
jmp
in
cs
int
shrl
lock
in
jge
gs
push
pop
cmp
insb
test
mov
push
sahf
push
movups
push
repz
pop
and
cmp
leave
xchg
jne
pop
iret
xor
pop
ret
rcl
in
fbld
mov
and
ljmp
loopne
fcmovnbe
leave
loope
sbb
filds
lcall
psubb
sar
inc
ret
and
jno
push
jle
loopne
mov
xchg
dec
cmpsl
dec
les
or
popa
jle
dec
sub
jmp
test
test
mov
or
pop
inc
cwtl
push
pop
and
ficoml
add
dec
xor
sub
cld
loopne
arpl
fwait
adc
ror
jns
adc
in
popa
or
inc
std
fsubr
iret
inc
sub
repnz
inc
ss
cmp
scas
mov
xchg
mov
sbb
dec
out
loop
push
leave
out
mov
push
fs
pop
cld
mov
xchg
sub
push
roll
cmp
add
jge
adc
cmp
cmp
mov
inc
mov
mov
lea
push
fldl
call
bound
mov
push
loopne
sbb
sbb
outsb
xchg
pop
xorb
jo
andl
sbb
xchg
shll
cmp
xchg
xchg
fiadds
popa
std
repnz
jle
xchg
inc
jmp
clc
and
push
leave
ficoms
das
in
ja
pop
int3
aam
stc
inc
adc
out
mov
mov
idiv
fldl
addr16
repnz
test
inc
sahf
xor
or
or
mov
lret
pop
fdivrl
xchg
repnz
vphadddq
gs
lahf
mov
icebp
or
adc
fisttpll
scas
stc
push
int
xchg
std
fisubrs
negb
mov
je
jge
sub
mov
cmpsb
sbb
push
cmpsl
inc
jnp
out
bnd
or
inc
inc
jbe
cmpsb
push
stc
pop
inc
jno
sub
insl
lret
inc
in
xchg
mov
jl
dec
inc
xlat
pop
pop
mov
test
sub
popf
cmc
xchg
sbb
fcom
add
fists
and
jmp
jne
sahf
push
stc
fnstenv
jbe
mov
loope
arpl
fbstp
xlat
and
aad
pop
pop
lcall
mov
mov
rolb
or
inc
out
and
dec
sbb
lods
push
insl
dec
adc
sub
xchg
pop
clc
loop
push
xor
fldl
mov
lcall
enter
mov
out
je
jo
out
pop
push
ror
sbbl
fstpl
add
lods
in
sub
inc
data16
adc
fwait
lods
jmp
imul
mov
cs
inc
mov
mov
sbb
push
jb
lods
dec
cmp
inc
mov
or
in
adc
lds
xor
jbe
int3
sbb
add
insb
xor
or
xchg
xor
sahf
in
push
xor
or
push
int3
sub
mov
ficomps
inc
in
mov
inc
pop
and
out
dec
jmp
flds
shrb
cltd
xor
mov
xlat
fistpl
pop
cmp
data16
and
fwait
inc
daa
fcmovne
cmpsl
mov
adcl
daa
cmpsl
jae
aad
es
call
mov
add
sbb
imul
dec
loop
rcrb
out
dec
imul
fcom
xlat
cmp
add
popf
nop
mov
andl
inc
test
push
out
adc
jnp
jge
adc
cmp
insl
cs
and
outsb
sbb
mov
jmp
or
sub
loop
jp
jne
xor
imul
ds
jae
int
ja
jp
cmp
sbb
jecxz
repnz
inc
lcall
rorl
inc
xchg
int
push
xor
icebp
sbb
add
aam
pop
imul
push
mov
push
inc
dec
daa
subl
cmp
dec
pop
mov
xor
das
loope
dec
mov
and
aaa
fistpl
mov
sub
test
imul
sub
mov
test
adc
addr16
js
mov
lahf
clc
daa
sbb
push
jno
mov
dec
adc
ja
add
arpl
sahf
dec
insb
inc
inc
jg
sub
scas
mov
mov
sbb
cmp
loopne
scas
pushf
loopne
adcl
movsb
popa
pop
jmp
rcrl
inc
das
pop
add
dec
scas
jecxz
mov
mov
rclb
or
popf
lods
and
mov
xchg
push
add
and
inc
add
loopne
push
inc
punpcklbw
pusha
pushf
imul
adcb
insb
repz
jmp
sahf
mov
jb
xchg
xchg
mov
add
enter
imul
int3
andb
stos
add
and
mov
jbe
or
lret
ljmp
aam
fstpl
das
sbb
pop
push
stos
and
in
and
icebp
int3
das
in
in
lods
shrl
jge
pop
mov
sahf
push
jne
push
cwtl
outsb
aaa
test
fstp
add
mov
into
push
popf
loope
outsl
jl
xchg
inc
fcoml
scas
sahf
jne
lret
push
lret
ljmp
sbb
xchg
fidivl
cmp
pop
mov
inc
loop
mov
xchg
jmp
jns
push
pop
je
lea
repnz
in
fiaddl
xor
sub
dec
mov
pop
cmp
jecxz
sub
xchg
cltd
or
pop
out
cli
clc
call
and
rcr
out
nop
nop
andb
call
mov
mov
nop
push
imul
cmp
xor
push
inc
bound
and
cmpsb
and
lock
repnz
mov
mov
jmp
pop
mov
adc
push
cwtl
mov
mov
loopne
pop
push
push
inc
data16
push
and
ret
push
in
ret
fmull
aaa
int
mov
mov
int
xor
out
xchg
inc
cmpsb
hlt
push
ret
cmp
ljmp
stos
lea
aas
sahf
ja
adcl
rcr
or
out
ret
sub
stos
ss
das
inc
insb
aam
in
cmp
out
mov
sti
mov
int3
pop
dec
xchg
sbb
or
movsl
lods
sbb
gs
cltd
jmp
push
mov
nop
das
push
xchg
push
cs
or
cmc
jbe
mov
mov
dec
pop
mov
jmp
ret
or
push
sbb
xchg
in
lods
jnp
inc
cmp
les
or
or
add
xchg
push
bound
adc
inc
mov
test
sub
cltd
cltd
mov
fiadds
rorb
fstps
xor
mov
sub
loop
jg
insb
inc
aaa
fmuls
ljmp
movsb
jg
add
jecxz
cmpsl
in
xchg
lret
shlb
push
int3
repnz
sbb
std
cwtl
push
push
mov
and
mov
call
or
pop
hlt
xor
in
int
sub
push
daa
ljmp
mov
test
leave
movsb
ret
mov
dec
and
fimull
and
popa
mov
imul
test
int3
or
xchg
jecxz
sbb
jle
dec
pop
movsb
sbb
inc
std
or
movsb
stos
and
leave
fwait
pmulhuw
adc
and
leave
fwait
mov
adc
sahf
push
adc
addr16
mov
test
hlt
mov
call
jb
nop
ror
mov
dec
stos
lods
int3
lret
xchg
jp
cmpb
es
outsl
das
aaa
shrl
jae
loop
leave
mov
lcall
pop
push
or
sbb
lock
or
adc
mov
popf
orb
sub
out
pop
and
inc
jg
push
adc
int3
and
stos
loopne
cmp
out
cwtl
insb
outsb
negl
sub
repz
scas
mov
or
xchg
fstl
ja
movsb
jle
outsb
jb
jne
mov
adc
int3
mov
jae
dec
and
ret
mov
in
cs
jae
mov
fdivs
scas
cltd
js
jo
lret
cwtl
cmp
mov
push
out
sbb
add
mov
fs
stos
cmpsl
sub
int
daa
test
push
pop
test
sub
out
stos
les
pop
movsb
fidivl
insb
imul
mov
repnz
pop
mov
fmulp
mov
fcoms
jbe
lcall
in
add
shlb
jbe
inc
ss
xor
xlat
push
mov
dec
cs
lcall
xorl
stc
roll
rol
mov
sbb
in
xor
dec
cs
mov
push
mov
stos
lds
addr16
mov
sbb
adc
std
js
test
jmp
fldt
and
jecxz
dec
push
test
dec
in
aam
and
jl
jbe
lret
imul
jns
inc
sub
mov
push
movsb
ret
pop
insb
fsubrl
dec
stc
adc
fnstsw
cli
adc
lcall
jno
loop
imul
lock
test
inc
pop
dec
fwait
pop
fwait
push
mov
push
int
dec
inc
jo
fwait
adc
mov
das
mov
add
shl
mov
sbb
ss
mov
rcll
popf
jmp
nop
and
in
inc
pop
sub
jno
dec
loope
mov
test
in
iret
pop
sub
fnstsw
pop
clc
lods
cmp
icebp
mov
stc
je
stos
and
loopne
mov
pop
ret
or
mov
xor
fsub
pop
iret
lds
push
xchg
cmp
sti
aad
das
in
mov
inc
iret
sbb
fbld
mov
xchg
mov
sub
dec
outsl
sbb
movsb
or
cmp
lds
sub
sbb
stc
adc
and
add
push
lcall
sbbl
or
sbb
rclb
or
mov
stos
vmovss
adc
pop
in
push
repnz
out
enter
into
adc
inc
std
or
sahf
xor
or
inc
out
sti
divb
cmpsb
xchg
test
sbb
addr16
iret
pop
add
mov
dec
xchg
in
adc
and
in
repz
ret
xor
mov
in
or
stos
push
mov
aas
movsl
pop
push
fnstsw
dec
add
mov
insb
push
sub
pop
loop
enter
lods
dec
mov
pop
xchg
cltd
cmpl
addr16
jge
xor
dec
xchg
lods
lock
sbb
jmp
negb
sub
popa
jns
jns
popa
inc
mov
jnp
in
pop
jl
jle
lahf
xchg
int
jb
push
mov
ds
xor
jl
jle
push
es
jle
out
adc
push
jno,pn
dec
push
orb
mov
test
jbe
inc
inc
sti
mov
push
mov
in
mov
mov
push
daa
fcmovu
or
pushf
lret
sarl
inc
sbb
push
pop
mov
imul
jbe
ss
mov
push
jle
stc
adc
or
ret
es
sbb
lret
pop
pop
jge
mov
notb
dec
and
cwtl
mov
fcomps
packsswb
and
xchg
fnstenv
push
cmp
sub
cmp
fdivs
add
fscale
add
pop
mov
js
int
cs
ret
push
je
dec
in
stos
out
sbb
push
sub
mov
add
notl
test
aas
sbb
testl
sub
daa
arpl
mov
in
adc
push
clc
es
add
sub
into
ds
push
add
mov
loopne
loop
dec
mov
inc
xor
addr16
lods
add
push
cmpl
cltd
cltd
clc
outsl
push
jge
push
test
mov
xor
push
lahf
sub
adc
pop
in
cmp
stos
movsb
popf
jns
rorb
push
xlat
mov
loop
dec
lds
xor
daa
sub
cmp
je
pushf
dec
hlt
repnz
pushf
mov
insb
mov
push
mov
mov
imul
cli
out
mov
cmp
adc
jb
sub
clc
add
mov
mov
stos
xchg
add
dec
and
inc
sub
popa
cli
mov
pop
pop
dec
in
daa
icebp
pop
aas
add
cwtl
pop
pushf
xlat
mov
fmull
lock
lar
mov
cmpsb
cmpsl
incb
jno
jae
inc
and
push
mov
add
scas
push
add
dec
inc
rolb
or
jge
cld
das
icebp
jge
mov
into
movsb
scas
push
jge
jmp
fldcw
mov
jle
test
add
jl
xor
dec
add
arpl
clc
jne
sbb
mov
pop
shlb
nop
adc
and
mov
cmp
sub
sub
xchg
decl
push
fsubrl
ret
das
inc
mov
pop
xor
repz
xor
in
and
jne
dec
out
fildll
fcomps
xlat
repz
mov
pop
add
inc
lcall
push
mov
cmp
pop
rorl
inc
ficoml
in
int3
dec
data16
int3
les
inc
daa
xchg
xchg
je
inc
decb
dec
arpl
mov
sti
fwait
or
loopne
test
enter
popf
adc
repz
sub
pop
mov
jnp
and
xor
inc
and
mov
push
jbe
cmp
mov
faddl
jne
sub
xchg
inc
mov
dec
and
push
mov
jg
lock
ljmp
in
or
shld
in
stos
je
dec
cld
push
inc
stos
outsl
loope
pop
dec
mov
mov
cli
and
rcrb
ja
push
sbb
lods
fbld
mov
std
addr16
cmpb
sbb
outsb
lcall
ss
out
add
jb
sbb
xchg
xchg
inc
lods
xor
xor
insl
flds
xor
sub
inc
and
xchg
inc
pop
iret
dec
daa
mov
imul
sub
scas
inc
mov
or
in
xchg
sub
adc
or
pop
filds
test
shlb
push
loope
mov
repnz
sbb
mov
daa
ja
and
mov
ljmp
cmp
mov
stos
push
jno
mov
lret
mov
jecxz
mov
mov
mov
out
dec
jmp
or
dec
sbb
std
ljmp
aaa
pop
movsb
ficomps
jno
inc
mov
mov
imul
test
lret
push
or
cmp
movsl
mov
pop
iret
sub
add
pop
xor
mov
mov
cmp
push
mov
insl
pop
sub
out
ja
jnp
push
stos
hlt
popf
test
fwait
pusha
pop
out
mov
ret
cli
mov
mov
mov
add
fs
jbe
icebp
or
aas
push
xchg
cmc
dec
push
cwtl
outsl
pop
lahf
test
or
les
loopne
orl
cmp
jl
jbe
repz
mov
mov
inc
cwtl
sbb
daa
ljmp
fstl
es
in
imul
mov
sub
dec
jno
sahf
cmpsb
lahf
movsl
push
stos
sbb
lahf
mov
shl
or
insl
or
pop
mov
hlt
mov
lods
pushf
orl
shll
push
mov
push
mov
rolb
aam
repnz
dec
call
push
or
dec
pop
xchg
test
sub
sarb
mulb
pop
mov
divl
sub
lret
xlat
inc
mov
out
mov
pop
cmp
out
pop
cmp
movsb
jnp
push
jmp
jmp
outsb
pop
sbb
sbb
in
loop
cli
in
arpl
add
inc
outsb
xchg
test
dec
mov
movsb
pop
inc
cmp
mov
lcall
jns
mov
dec
int3
push
jl
enter
jmp
xchg
mov
push
inc
stos
popf
int3
mov
ds
mov
stos
add
cmp
fnstsw
movsb
push
scas
lods
add
loop
sahf
lods
pop
js
popa
outsb
mov
ljmp
loopne
push
hlt
lcall
cmp
sub
mov
push
inc
mov
test
sbb
pop
jb
sti
mov
pusha
dec
push
or
pop
push
mov
fimuls
mov
xor
jns
sbb
cmpl
push
iret
xchg
fwait
sti
adc
repz
adc
and
flds
fsts
imul
xchg
xlat
arpl
mov
rclb
clc
ljmp
shll
scas
inc
and
and
xor
fadd
mov
jb
cmp
cmp
xchg
mov
dec
cmp
xchg
dec
adc
scas
mov
xor
push
out
xchg
push
lcall
pop
insl
fistps
stos
aam
cmp
test
adc
mov
mov
mov
push
outsl
inc
mov
add
and
test
mov
pop
das
adc
aam
pop
iret
in
in
movsb
cmpsb
mov
pop
and
inc
dec
fwait
repz
mov
ljmp
mov
sbb
into
adc
adc
dec
dec
fidivrs
sarl
insb
insb
adc
xor
insb
jo
mov
mov
push
das
fstpt
lock
inc
int3
dec
mov
cs
rorb
dec
divb
je
sbb
push
mov
fidivrs
movsl
jg
push
push
push
addr16
loop
xchg
arpl
cltd
mov
lret
mov
outsl
add
pop
outsb
fmuls
jns
sub
xor
add
push
test
dec
mov
fs
mov
pop
jns
in
jg
or
inc
lahf
cmpb
or
push
xor
inc
sub
mov
dec
leave
mov
xchg
add
shrl
jnp
mov
repz
mov
cmpsb
mov
mov
pusha
data16
dec
and
ds
xor
lock
lret
cli
mov
jo
dec
adc
bts
mov
lea
jge
out
sbb
xchg
lock
pop
and
pop
ret
push
xchg
ror
loopne
mov
inc
fnsave
aad
jno
in
cmp
movsl
mov
lcall
mov
cmp
fcomps
repnz
orl
ret
mov
xchg
aam
in
sub
in
and
sbb
inc
xchg
dec
pop
mov
fisubl
dec
push
mov
loop
pop
movsl
adcl
pop
andl
dec
mov
pop
mov
add
push
cmp
dec
sub
into
and
imul
jno
inc
dec
ja
xchg
inc
bound
pop
adc
orl
and
mov
push
das
mov
out
addr16
popf
xchg
sbb
mov
add
dec
subb
inc
aas
dec
xor
inc
andb
add
jae
icebp
movsb
xor
push
push
mov
popf
aad
pushf
orb
and
clc
loop
test
xchg
xlat
in
mov
push
pop
gs
lods
adc
pop
pusha
lock
pop
mov
jg
outsl
xor
jbe
mov
sub
scas
in
mov
push
mov
fimuls
xchg
lret
xor
xor
sahf
dec
movsb
std
add
push
ds
jp
sbb
ja
mov
cmpsb
xor
aas
subb
or
stc
sub
inc
cwtl
mov
out
jmp
cmpsl
push
push
xor
movsb
test
and
xor
push
shr
xchg
push
xchg
pop
mov
sahf
push
popa
fs
cs
sbb
dec
push
adc
dec
jp
lds
js
hlt
inc
dec
sub
fucom
pop
fcoms
js
sbb
sub
mov
add
je
mov
push
pop
push
ficoml
xor
scas
xchg
or
mov
push
mov
sbb
lock
das
popa
addr16
jmp
mov
push
mov
ffree
dec
push
push
sbb
xor
jp
mov
add
jge
mov
outsb
sbb
xchg
xchg
inc
inc
dec
outsb
mov
dec
dec
push
ljmp
imul
lock
ss
inc
cmc
sub
pop
movsl
add
xchg
dec
lods
sub
mov
or
sbb
pop
and
mov
test
pushl
xchg
iret
ror
call
ror
push
mov
push
mov
inc
jbe
shll
arpl
mov
rorl
jne
adc
adc
repz
xor
fstpl
add
sub
int3
lret
jbe
mov
fstpl
loope
or
ret
dec
adc
pop
cs
dec
push
mov
out
cmp
dec
insl
mov
into
xchg
pop
push
mov
cmc
add
test
jmp
fisttps
cmp
jg
add
or
inc
mov
jle
xor
popf
aas
jnp
int
hlt
std
in
mov
shll
andl
push
aas
jno
xor
out
shll
fcomps
leave
sti
jp
std
test
push
mov
sbb
in
mov
rcrb
sub
fs
inc
inc
dec
fsub
out
daa
out
imul
mov
stos
push
cwtl
xor
movl
mov
jno
sti
inc
xor
icebp
shl
sub
xlat
mov
add
ret
fstl
push
fs
or
sub
cmp
out
cltd
je
bound
adc
xchg
push
or
xchg
es
sti
add
cmp
or
add
mov
fwait
or
xchg
ret
mov
jnp
adc
fdivs
mov
mov
test
enter
sbbb
cmp
ss
jnp
pop
test
xlat
push
andb
popl
test
jge
in
stos
in
pop
pop
push
push
sti
push
loop,pt
insl
stos
pop
jne
in
dec
push
test
inc
pop
jge
pop
push
and
test
sbb
sti
lcall
fwait
jo
jae
popf
dec
sti
cmpsb
jmp
enter
in
push
pop
mulb
out
lock
xchg
pop
jp
mov
out
movsb
jge
arpl
nop
add
xchg
sbb
enter
jo
inc
fidivs
sti
lods
add
pop
fmull
ljmp
enter
add
sub
aaa
movsb
rcll
add
and
mov
xorl
cmc
fistpll
in
xlat
jl
xor
pop
mov
out
std
xchg
jle
inc
imul
jg
inc
or
idivl
test
cltd
dec
fucomp
inc
sub
out
inc
fs
imul
inc
icebp
add
arpl
out
jmp
mov
push
orb
fs
xchg
jnp
insl
adc
add
pop
idivl
dec
push
lret
jle
push
add
xchg
orl
inc
adc
xor
popa
or
jbe
es
xor
lods
and
in
test
repnz
mov
inc
mov
ret
jns
int3
jne
sbb
add
arpl
sti
int3
out
pop
sbb
inc
ja
idivl
dec
pusha
bound
push
or
sub
xchg
xor
add
lods
mov
outsb
fs
dec
arpl
fstps
mov
stos
dec
mov
outsl
jbe
mov
inc
push
dec
lds
jbe
push
xor
daa
aas
jg
mov
fdivp
out
mov
sahf
stc
out
daa
fisttps
jnp
lods
jb
fisttpl
addb
enter
jbe
or
nop
or
lcall
mov
sub
lods
mov
xorl
pop
xchg
xchg
add
dec
lock
or
xchg
pop
mov
shrb
leave
rclb
push
in
adc
pop
pusha
je
mov
mov
orb
xorb
xchg
cmpsb
xlat
xchg
shrl
mov
push
add
cmp
add
jg
push
out
mov
adc
jne
dec
add
enter
cmp
ja
lock
sub
sub
mov
inc
jp
shr
outsl
push
jle
inc
sub
or
and
dec
iret
addr16
or
leave
js
mov
jb
jmp
int3
sbb
mov
or
insb
jnp
out
lods
fsubrs
jmp
jno
std
pusha
lods
adc
in
ret
je
nop
sub
pop
pop
inc
push
leave
movsb
shlb
loopne
cmp
into
mov
rclb
pop
fsubl
ja
mov
pop
orb
push
shl
imul
or
insb
or
jno
jmp
mov
xchg
cmp
sub
mov
adcb
add
das
xchg
sbb
xchg
xor
sub
repz
jns
lret
and
inc
mov
and
repnz
es
cmc
imul
aam
repnz
pop
movsl
dec
push
xor
aaa
add
paddusw
enter
xor
out
lea
imul
in
test
int
push
into
jae
adc
push
jb
sbb
xchg
add
xchg
cmc
mov
push
fucompp
jge
adc
push
mov
dec
pop
add
cmp
ds
add
dec
and
lds
xor
push
xchg
pop
sbb
fldt
push
mov
dec
push
jmp
ret
aam
push
ja
push
cmpsl
subb
lea
add
jae
cmpsl
jne
pop
rorl
dec
pop
jmp
es
adc
scas
add
icebp
sub
inc
push
inc
adc
cltd
mov
int
push
xor
push
ljmp
xchg
daa
mov
inc
sahf
xor
cmp
mov
in
in
push
push
lea
stos
in
push
sub
sbb
xor
test
call
negl
rorb
roll
mov
test
add
fldt
xor
imul
and
adc
enter
push
mov
cmp
fs
popf
adc
ja
dec
sub
aaa
xchg
lea
jns
adc
xchg
das
fcomi
dec
int
mov
test
xchg
inc
movsl
inc
push
das
pop
in
clc
das
push
imul
out
and
scas
sbb
push
mov
add
push
lock
aad
dec
push
lcallw
iret
imul
cmp
imul
nop
loop
sti
jle
sub
xor
mov
ss
pop
mov
sahf
ss
cli
sub
add
lea
sub
int3
jle
arpl
in
insb
xor
insb
or
adc
inc
jnp
lahf
mov
shll
inc
lods
pop
mov
scas
sbb
pop
cmp
pusha
dec
std
add
add
add
inc
lahf
adc
es
add
dec
jecxz
test
add
jno
or
pop
inc
dec
push
aam
add
xchg
pop
jno
xlat
push
loop
and
add
adc
call
xchg
fwait
xor
push
inc
stos
lock
subl
xchg
in
adc
inc
addr16
or
or
gs
ss
insb
add
mov
xor
setb
stc
cmp
outsb
dec
stos
and
push
add
orb
and
add
aad
mov
add
ss
fstpt
add
insb
add
and
pop
pop
and
bnd
mov
std
ds
xor
loope
cwtl
add
shr
sub
mov
dec
lock
sbb
test
adc
sub
rcrb
cmp
xor
push
in
jae
mov
sub
mov
push
pop
pusha
sbb
pusha
push
in
add
imul
aam
loopne
rcrb
dec
lret
push
addr16
mov
xchg
ret
faddl
sbb
repz
push
sub
aas
mov
cwtl
pop
repnz
pop
jae
jmp
imull
jmp
cld
dec
push
and
jg
pop
test
jmp
in
ja
xor
mov
pushf
and
sarl
std
stos
add
js
mov
jae
xor
pop
dec
adc
pop
xchg
dec
jg
pop
cmp
add
jne
jg
mov
sahf
sub
and
fistl
in
xchg
lret
pop
sub
pop
push
shl
xorl
out
mov
jg
bnd
xorl
das
movl
sub
jmp
movsb
push
leave
jp
repnz
jns
pop
sub
pop
push
mov
dec
sbb
cmp
iret
adc
inc
inc
clc
sbb
jnp
pop
push
pushf
jns
mov
sbb
push
stos
shlb
mov
stos
les
jecxz
or
iret
jp
lds
out
jns
mov
into
push
roll
or
out
xchg
jne
mov
fists
inc
flds
jl
inc
clc
cltd
dec
mov
pop
xchg
pop
daa
outsl
js
dec
sbb
into
movsb
jo
pop
imul
sub
subb
mov
mulb
push
ja
add
ficoml
jge
pop
jl
outsl
and
push
pushf
stos
mov
mov
mov
pop
push
outsb
sbb
vandps
xor
enter
dec
mov
push
into
sbb
push
enter
adc
cmp
pop
lds
lea
push
stos
ljmp
push
pop
ret
inc
xchg
cmpsl
mov
rorb
mov
push
addr16
xlat
sbb
dec
mov
xchg
cmc
xchg
sub
xchg
and
int3
divl
insb
fwait
jecxz
pop
inc
sti
fwait
cld
gs
pop
enter
in
lret
das
scas
lret
push
lea
test
in
test
cli
gs
jno
mov
ljmp
xchg
test
fwait
xchg
jl
addr16
xchg
stos
pop
mov
insb
cmp
lahf
add
and
xor
xlat
repnz
repz
push
and
cmp
out
jecxz
dec
lret
popf
push
mov
aaa
lcall
add
cmp
sahf
in
sar
popf
sahf
mov
or
clc
cmpsl
mov
cmc
mov
xlat
sbb
std
jecxz
stos
mov
or
xor
loop
jge
pop
pop
aam
push
cwtl
jge
dec
mov
insl
pop
or
sbb
sbb
sbb
stos
push
iret
cmp
xchg
sahf
shr
sub
aad
sbb
jno
jae
in
rclb
int
aaa
loop
lahf
cmc
fsts
rorl
dec
test
sti
xchg
dec
mov
dec
or
xchg
leave
lods
cmpsl
enter
lds
cmp
sub
rorl
pop
int
xchg
lods
aam
test
int3
cmpb
pusha
ror
clc
data16
mov
inc
adc
leave
icebp
aam
stos
pop
or
push
popf
xor
lock
lods
pop
cmc
dec
adc
inc
push
jnp
int3
xchg
popf
xor
dec
ret
mov
xchg
int3
js
aas
push
add
cld
mov
push
loop
in
xchg
stos
mov
or
dec
xchg
xor
push
ljmp
push
push
adc
mov
scas
cmpsb
fstpl
lahf
cmpl
pushf
inc
clc
inc
pop
dec
mov
push
xchg
push
xor
loope
jne
int3
cld
and
jb
jecxz
jle
pop
adc
or
sbb
xchg
jno
int
mov
popa
xor
dec
mov
aam
jbe
xorb
test
scas
push
jge
jmp
test
jle
xchg
cmp
and
push
jl
imul
jns
fwait
xor
fsubs
shrb
or
mov
push
sub
test
mov
jnp
dec
xchg
insb
std
into
cli
cmp
jae
cmp
out
gs
lods
int
pop
fisubrl
mov
mov
or
inc
jb
and
mov
or
mov
pop
rcl
mov
in
fildl
shrb
cmp
out
mov
mov
jmp
test
sub
scas
aaa
cltd
inc
imulb
pushf
cmp
popa
pop
dec
aaa
data16
mov
cmc
xchg
mov
xor
int
mov
lcall
gs
xlat
js
jns
sub
ljmp
xor
mov
push
ss
out
cwtl
jne
pop
push
arpl
adc
push
inc
sbb
xor
test
sbb
mov
adc
cs
sahf
xor
mov
cmp
inc
dec
enter
dec
in
lea
adc
lret
add
inc
daa
dec
push
clc
xchg
or
cmp
gs
xchg
xchg
neg
dec
ss
pop
fistpll
xchg
mov
xchg
xchg
inc
sti
inc
ret
xor
xchg
pop
jns
lock
in
add
or
mov
data16
mov
clc
inc
dec
dec
mov
mov
es
xchg
and
lret
and
mov
vminss
gs
pop
gs
sub
popa
adc
fisttps
sub
fistl
fildl
icebp
add
fs
divb
jbe
in
scas
cs
sub
hlt
and
jle
movsl
in
xchg
mov
call
repnz
aas
mov
loopne
lcall
clc
adc
in
mov
fninit
popa
clc
ret
rcrl
fdivs
ret
iret
ret
push
push
push
fdivl
scas
push
sbb
ja
arpl
dec
xor
in
push
call
jne
xchg
mov
scas
mov
loope
mov
ret
and
xor
mov
fisttpll
inc
aam
add
jne
mov
pop
xchg
and
ret
ror
jl
sbb
arpl
ror
sti
push
cmp
push
es
or
movsb
test
lods
pop
inc
push
jno
jmp
loopne
inc
les
jp
jne
std
loopne
inc
lret
jbe
lret
cmp
testb
add
jne
aas
inc
rorl
cwtl
mov
push
test
insb
mov
xchg
sbb
add
scas
add
int
ss
push
push
pop
sub
and
jmp
in
outsb
adc
mov
jo
das
or
sahf
in
mov
mov
jae
or
fbld
pop
push
mov
stc
jmp
add
ds
aam
mov
insb
mov
mov
pop
mov
pop
rol
xchg
xor
pushf
fwait
stc
mov
push
cmp
out
and
pop
pop
fdivr
ret
std
jno
aaa
mov
push
outsl
ss
pop
xor
add
cwtl
std
lods
popf
shll
mov
jle
and
or
inc
shlb
mov
imul
jmp
arpl
inc
loop
mov
fs
mov
icebp
sub
cmp
pop
xchg
mov
pushf
mov
lock
sub
lds
push
call
aas
mov
aas
inc
pop
inc
or
aam
cmp
lea
outsb
adc
mov
fldenv
lret
in
or
push
jo
add
mov
sub
iret
sbb
std
in
pop
je
jmp
je
adc
iret
je
enter
push
mov
repnz
push
fcmovnb
push
jmp
aad
js
or
neg
pop
mov
imulb
sbb
push
aas
ja
idivl
push
mov
pop
xchg
and
shll
cmp
xchg
cmp
leave
and
jp
cmpsb
test
nop
and
inc
add
mov
add
sbb
fisubs
mov
cltd
cmc
jb
repnz
ret
rolb
xchg
lahf
sbb
pop
and
lcall
mov
adc
xchg
pop
pusha
arpl
nop
adc
jge
xor
xor
sbbb
jbe
rorl
cmp
xchg
lds
xlat
jl
ds
fdivr
cmp
xor
sahf
or
or
jnp
push
jb
lret
cmpsl
mov
sub
inc
sub
loopne
sub
add
sahf
push
lods
int3
mov
push
add
cld
scas
adc
cltd
xor
addr16
pop
or
inc
mov
insl
cld
ret
icebp
xchg
mov
iret
loop
lods
jbe
shlb
repnz
ja
lock
mov
fs
add
loop
cmp
fnstenv
aaa
xor
popa
fnstcw
leave
fisubrl
enter
lds
in
lret
pop
and
hlt
lock
das
add
cmp
add
jnp
lock
push
imul
dec
push
repz
fwait
pusha
in
stos
lds
ja
shlb
imul
cmp
pusha
mov
jns
cmp
dec
cmc
cmp
jns
xor
mov
icebp
aam
push
int
aad
jnp
adc
cmc
gs
pop
movsb
fstpt
cmp
mov
inc
nop
data16
cmp
push
dec
pop
pushf
jns
jae
and
test
shlb
cld
arpl
mov
mov
jp,pn
mov
pop
jle
add
out
lods
add
bound
push
inc
movsl
mov
push
movsb
pop
xor
add
jo
and
and
popf
add
cwtl
inc
pop
das
mull
push
aad
or
and
pop
add
mov
popa
addb
ja
outsb
subb
outsb
rol
jns
jl
mov
or
or
xchg
pop
roll
pop
jge
sbbl
mov
sub
pop
test
xchg
punpckhdq
sub
mov
hlt
and
aas
push
dec
dec
or
movsl
and
push
cmc
fdivr
nop
add
flds
dec
lock
mov
mov
jne
movsb
inc
arpl
je
add
push
movsl
pop
mov
shl
mov
stc
jle
cld
aas
add
jp
rcrl
scas
cld
xor
adc
jbe
sbb
jb
adc
push
or
mov
dec
sbb
aam
push
mov
subl
xchg
inc
push
mov
fwait
xor
cmp
dec
lods
in
enter
sub
jb
iret
jl
jae
sub
mov
pop
mov
xchg
inc
mov
int3
jecxz
lcall
mov
dec
push
mov
jo
hlt
mov
pushf
enter
pop
adc
mov
aaa
divps
sub
in
mov
lret
cmp
add
jg
dec
dec
aam
fisubrs
jge
dec
sub
pop
xlat
mov
sahf
dec
fldl
daa
push
fcoml
addb
stc
inc
mov
or
sub
add
jl
and
call
in
mov
out
and
in
lods
das
push
push
cmp
push
in
or
xchg
push
ret
int3
aas
or
adc
mov
out
and
sbb
in
xchg
into
push
push
cmp
mov
mov
out
stos
sbb
nop
adc
pop
ja
inc
jecxz
sub
xor
filds
xor
xlat
jnp
push
mov
rolb
hlt
jns
xor
pop
pop
sbb
sahf
cmpxchg
push
fdivs
das
xor
jnp
insb
jg
add
stos
mov
push
loop
mov
push
xchg
sarb
in
or
push
orb
les
ja
add
popl
mov
add
and
xor
fwait
mov
std
dec
negl
mov
jbe
pop
jmp
adc
sarb
xchg
jns
pop
sub
jbe
cmp
lret
adc
ret
sbb
add
xchg
shl
out
xor
das
push
jg
and
aam
push
pop
lock
xchg
stos
mov
out
lret
push
adc
inc
mov
push
pop
mov
call
push
jb
push
jno
stc
xor
subb
lcall
mov
fisubrs
add
xor
dec
adc
call
mov
arpl
push
dec
push
scas
mov
pop
ljmp
push
add
xor
fistl
mov
jae
in
mov
mov
loopne
inc
sub
in
add
std
push
stos
js
test
inc
icebp
xor
pop
mov
add
aas
out
sub
es
xor
push
daa
or
mov
sbb
pusha
inc
imul
cmpsb
insb
cmpsb
lcall
pop
xchg
cmc
push
call
lods
aam
lret
lds
mov
enter
mov
jmp
or
loope
xor
adc
sysenter
adc
add
mov
addr16
pop
lods
jp
jge
shlb
ds
pop
add
subl
add
andl
shrl
add
out
mov
ja
cmp
sar
mov
cmpsb
gs
push
scas
jg
xor
push
mov
lret
push
add
dec
fdivrs
jp
ljmp
jl
aaa
loop
sbbb
std
inc
sarl
sbb
pop
jnp
pushf
dec
roll
push
les
je
push
test
call
aas
xor
jge
ja
aaa
mov
test
hlt
xor
test
mov
addr16
out
popa
stos
push
fmul
fcmove
rorb
mov
in
jae
xchg
sbb
push
movsb
jmp
lahf
arpl
bnd
je
pop
icebp
adc
mov
pusha
mov
lahf
mov
mov
xchg
jmp
xchg
stos
cli
fisubs
mov
pop
test
mov
dec
hlt
in
stos
ret
je
mov
jmp
cmp
icebp
ds
sub
mov
push
sub
push
movsl
pop
xchg
cmp
repz
stos
cld
cmp
aad
xor
clc
or
aaa
mov
adcb
cmp
pop
xchg
inc
jge
pop
mov
dec
xorb
push
insb
jb
mov
push
insb
invd
rolb
cwtl
sub
mov
cltd
dec
cmpsb
mov
testb
push
das
imul
in
in
pop
cltd
dec
pop
cmp
lretw
aad
cmpsl
inc
aad
inc
pusha
out
lahf
movsb
neg
pop
adc
and
jecxz
cmc
xchg
mov
into
inc
ds
imul
iret
in
mov
xchg
imull
pop
mov
outsl
mov
scas
bound
mov
mov
mov
ljmp
inc
push
cmp
jnp
mov
mov
loop
addb
test
mov
and
pop
sbb
gs
popa
fs
xchg
sbb
out
pushf
xchg
sub
fdiv
push
insb
fcomip
nop
adc
fidivrs
gs
fldt
fmull
and
movsb
and
in
add
cltd
ljmp
xchg
mov
inc
out
pop
daa
data16
popf
imul
cmpl
pop
pop
loope
dec
mull
pop
out
lods
sub
and
stos
ss
lcall
jge
das
es
scas
and
test
lahf
lret
cmpsb
subb
ret
or
jo
sub
jp
mov
ret
rcrl
movsl
stos
in
outsl
add
or
out
adc
cmp
mov
pop
jp
cmp
add
pop
fists
cli
cmp
call
mov
pop
add
sub
lret
jge
pop
stos
push
lret
mov
jp
clc
jle
ret
adcb
sahf
sbb
outsl
push
cmp
scas
pusha
pop
enter
cmp
lock
call
mov
fists
inc
xchg
ficompl
lret
inc
icebp
jl
imul
sbb
and
jle
cmc
insl
in
mov
movsb
into
daa
cltd
popa
repz
or
jnp
xchg
add
outsb
fucomp
int
test
out
aaa
lret
mov
gs
xchg
inc
xchg
repz
pushf
mov
pop
int
popa
pop
lock
in
xlat
out
call
scas
push
cs
les
and
jns
xchg
add
inc
mov
subb
pushf
push
arpl
mov
xor
mov
scas
mov
add
cld
pop
push
add
cmp
rcrl
mov
mov
rclb
cmpb
push
push
roll
fs
lods
xchg
mov
mov
push
push
mov
sbb
xchg
fs
sbb
test
cmp
mov
orb
insb
addb
out
enter
in
adc
or
add
sbb
lock
and
sub
movsb
mov
ficoml
xor
adc
sub
pop
pop
lahf
cmp
xchg
push
mul
jne
push
add
ljmp
mov
push
popl
cmc
ror
adc
leave
push
dec
shll
xchg
inc
sahf
pop
and
cmpsl
jmp
div
push
negl
jnp
push
imull
mov
faddp
cmp
mov
repz
lock
dec
xchg
cwtl
stos
call
inc
xchg
shrb
or
popa
sub
aad
dec
ds
bound
pop
jl
icebp
xlat
movl
cmpsl
mov
ja
or
mov
outsb
push
jns
mov
sbb
xchg
xlat
aam
cwtl
pop
out
loopne
adc
les
das
test
inc
aas
mov
push
inc
pop
fidivs
stos
sub
cmp
je
mov
push
clc
push
mov
xchg
mov
xchg
sahf
cltd
dec
cmp
cmp
out
mov
adc
sti
sub
aad
pop
cld
pushf
scas
cmpsb
pop
jnp
xchg
mov
jecxz
mov
xchg
push
mov
xor
dec
andl
jle
shr
lds
fwait
stos
hlt
gs
loope
mov
stos
aas
dec
or
jne
stos
inc
push
hlt
das
sub
push
in
mov
js
push
push
mov
repnz
inc
inc
xchg
xchg
scas
dec
or
push
arpl
push
mov
fcomip
dec
and
jmp
cmpsl
cs
inc
push
xchg
xchg
dec
lret
aaa
dec
xor
or
pop
push
hlt
andb
repz
dec
push
xchg
lock
push
adc
repnz
jmp
mov
mov
ret
add
add
lea
clc
inc
shrl
iret
jp
push
ss
pushf
adc
cmp
and
in
inc
pushf
rolb
and
cmpsl
cld
xchg
ja
xor
pushf
iret
dec
cmp
jae
stos
fnstsw
jp
pop
xchg
scas
pop
add
test
imul
out
push
add
arpl
js
xchg
mov
repnz
pop
add
cmc
or
push
or
sub
cmp
pop
inc
call
in
jmp
or
call
pushl
sub
jmp
ss
and
add
jbe
data16
out
cwtl
lret
adcl
push
sub
xchg
cmp
and
fwait
cld
call
mov
fsubr
pushf
mov
xchg
ret
into
mov
jae
mov
in
cmp
xchg
mov
sahf
mov
pop
fcoml
mov
ret
into
negl
or
arpl
dec
inc
mov
mov
adc
mov
ffree
cli
cmp
aad
aam
inc
jl
mov
cmp
mov
lods
adc
xlat
mov
inc
mov
and
das
es
inc
dec
repnz
sbb
xchg
lcall
sub
ror
ret
mov
dec
pop
and
andl
push
std
shll
scas
push
pop
lea
stc
push
fst
push
fxch
push
lcall
inc
movsl
lahf
push
push
movb
push
ss
test
cmp
xchg
loop
divl
push
ret
aaa
ja
scas
clc
inc
add
xor
push
mov
or
pop
jmp
adc
pop
lret
mov
mov
daa
div
les
sub
dec
and
jecxz
scas
sub
pop
insl
and
dec
push
xchg
leave
in
repz
xchg
add
mov
xor
movsb
mov
imul
int
sub
sub
cld
inc
push
outsb
loop
fst
mov
pop
sub
inc
repz
fwait
jmp
xchg
pop
sbb
in
jg
jns
aam
testb
daa
call
dec
mov
hlt
test
jno
mov
sbb
in
dec
add
loope
mov
pop
sbb
outsl
pop
mov
ficoml
jbe
sbb
jns
or
imul
push
push
test
ljmp
shrb
mov
cmc
addr16
push
je
shrb
mov
cli
sbb
in
xorb
scas
xlat
jbe
and
sub
dec
aaa
xchg
add
add
repnz
push
sub
shll
outsb
sub
repz
enter
and
mov
loope
dec
jl
enter
inc
call
arpl
cmc
loopne
in
imul
fs
test
cmp
sub
fisubrl
notb
sbb
std
or
out
sub
xchg
adc
or
adc
mov
xchg
pop
jno
gs
loopne
arpl
lods
push
cmp
imul
insb
jecxz
mov
fnstsw
sub
out
mov
or
lock
or
lock
loop
pop
cmpl
pop
mov
xchg
sahf
push
lcall
iret
or
int
in
or
xor
inc
divl
push
jg
xor
shlb
pushf
mov
xor
mov
leave
mov
add
push
adc
mov
movsl
or
inc
ficoms
bswap
ja
jno
cmp
popf
aam
and
inc
mov
mov
mov
mov
stos
xor
push
imull
xchg
xor
rcr
stos
cltd
add
in
adc
loope
stos
xchg
dec
jns
and
xchg
mov
pop
inc
sbb
bound
mov
mov
scas
xchg
xor
or
sub
xor
xor
adc
cs
cmp
cmp
ds
dec
mov
ficoml
jnp
out
fs
sub
in
leave
ss
fwait
push
out
jnp
dec
xor
lret
sub
xchg
lock
addr16
mov
je
cmp
shll
arpl
push
xchg
ja
pop
icebp
adc
addr16
add
xchg
shl
je
lret
iret
push
push
dec
scas
testl
loop
imul
add
jo
xchg
push
adc
popa
movsl
jmp
insl
cmc
jo
ret
fisubl
aas
inc
gs
add
addb
pusha
add
loope
push
and
jecxz
bnd
dec
ret
inc
out
or
push
mov
stos
in
xor
cmp
fstp
and
adc
arpl
mov
push
inc
cmpsb
xor
stos
mov
xor
ficompl
and
fcomip
and
jmp
pop
mov
outsl
and
das
leave
ror
ljmp
push
shrb
sbb
push
add
popa
aas
push
pop
pop
lea
dec
sub
cmc
jae
pusha
xchg
in
mov
jp
mov
cmp
pop
cmp
mov
xchg
in
mov
xchg
or
aaa
adc
les
scas
add
dec
sub
push
lret
dec
nop
jne
xchg
aaa
cmovb
inc
into
cmpsl
incl
int3
fwait
adc
mov
lahf
in
jo
jbe
out
cmp
jae
jp
pop
cli
pop
xchg
mov
mov
stc
or
or
xchg
arpl
adc
aaa
push
push
lds
and
mov
out
or
adc
fldcw
aad
xor
je
dec
test
pop
pop
xchg
add
test
pusha
test
mov
xchg
nop
inc
mov
ror
out
or
jecxz
xchg
fdivrl
cmp
scas
mov
or
cmpl
aam
mov
xlat
mov
cmp
push
mov
or
sbb
xorl
pop
aas
ret
fstl
movsb
or
loope
loope
lret
or
pop
icebp
data16
mov
push
out
js
imul
mov
inc
movsb
sub
pop
sub
jge
lahf
movb
mov
in
leave
test
icebp
stos
enter
pop
pop
xor
out
mov
xchg
out
and
loop
fwait
push
xchg
dec
ja
outsl
push
mov
jl
data16
sbb
xor
mov
xchg
icebp
push
sub
scas
or
add
pop
repz
cmpsl
testl
jno
jb
movsb
cs
icebp
hlt
xchg
or
mov
lret
add
cltd
movsb
pop
test
ljmp
dec
xchg
into
cs
jbe
add
xchg
lds
mov
jne
aad
jb
and
jae
mov
or
cltd
pushf
popf
stos
clc
outsl
inc
xchg
sbb
sbb
aad
jns
mov
movsl
jg
stos
fcoml
sub
push
test
xor
insb
push
xchg
fcoml
out
lret
cmpb
dec
std
mov
cmp
repz
sub
mull
das
pop
bound
sarb
loope
xlat
icebp
cmp
daa
mov
xchg
jg
iret
stos
jecxz
lret
mov
pop
xor
xchg
bound
jns
pop
lcall
pushf
xchg
mov
push
xchg
mov
scas
sbbb
mov
into
mov
enter
jbe
loop
mov
aam
test
jno
call
lods
push
add
icebp
pushf
jb
cltd
vpaddb
and
jl
and
inc
cs
loope
pop
mov
std
loopne
sub
stc
jns
lcall
sub
sub
hlt
or
mov
lods
mov
cmpsb
je
mov
stos
pop
pop
sbb
mov
push
dec
sbb
fisubrs
lea
cmc
movsb
orl
out
mov
push
cmp
cwtl
hlt
inc
sbb
mov
ret
sti
sbb
in
cli
xlat
dec
call
aad
jecxz
inc
push
gs
repnz
push
inc
push
sub
popf
imul
out
mov
pand
sub
push
test
jne
out
dec
cwtl
lds
xor
addr16
sub
mov
movsb
xchg
loopne
out
aam
xchg
dec
mov
shrl
leave
cmp
test
inc
pop
into
int3
aad
or
sbb
cmp
cmpsl
pop
push
mov
mov
mov
psllw
xchg
mov
mov
enter
daa
stc
cmp
adc
repz
mov
push
ret
add
push
sub
mov
imul
inc
xchg
jne
test
popf
cltd
add
mov
xor
or
cli
aam
popa
es
xor
add
cmp
stc
jae
mov
adc
ljmp
lcall
nop
lcall
push
je
mov
mov
out
mov
jnp
imul
jno
mov
pop
imul
shrb
pop
mov
xor
or
lahf
or
ds
popa
lret
jne
inc
mov
in
xor
jp
inc
adc
mov
subl
or
adc
mov
loop
mov
push
dec
insb
xor
mov
jmp
cmp
sarl
sub
cmp
fs
fstps
add
imul
pop
jge
leave
sbbl
xchg
sub
es
jg
jge
mov
daa
mov
lock
mov
imul
imul
jp
std
sbb
ja
xchg
xor
in
inc
jo
cmpsl
out
fisubrs
pop
mov
outsb
sbb
xor
bswap
daa
pop
mov
xlat
mov
ret
mov
in
mov
mov
hlt
dec
lds
inc
lret
mov
mov
or
andl
cltd
push
loopne
fstl
mov
test
dec
xchg
mov
orl
cmc
dec
movsb
daa
adc
or
sbb
sbb
repnz
xchg
int3
idivl
dec
stos
mov
das
push
fnstcw
fwait
mov
test
in
push
icebp
scas
dec
out
stos
aam
pop
testb
cltd
push
mov
push
jge
mov
cmpsl
divl
in
cmp
sbb
cmp
jle
mov
addl
and
jl
mov
push
out
mov
ret
mov
and
mov
mov
sbb
sub
add
xchg
je
subl
rolb
in
icebp
addb
or
xchg
push
cmp
xchg
push
movsb
out
sahf
lock
call
mov
inc
pop
movsb
mov
xor
jns
push
xchg
xlat
or
sbb
das
gs
inc
add
loopne
inc
ss
jno
push
repz
les
fdiv
xor
imul
fbld
cmp
imull
pop
addr16
stos
push
ja
xchg
cmp
push
xchg
repz
mov
idivl
daa
jg
sub
xchg
cld
out
jmp
popa
mov
fwait
sbb
aad
sti
jmp
dec
fnstenv
mov
rcr
loop
cs
loop
inc
push
lods
roll
outsl
test
ds
adc
xor
jbe
les
push
lock
push
adc
xchg
pop
push
push
or
jbe
ret
cmc
std
xchg
sbb
xchg
mov
pop
or
pop
push
inc
icebp
cld
jbe
fs
push
pop
cmpsl
or
aad
cli
outsb
jp
incl
jl
add
xorb
cmc
ret
lea
and
dec
jmp
loopne
and
xchg
cmc
cmp
fldl
xchg
std
lret
mov
loopne
adc
movsb
push
pop
nop
cs
iret
mov
pop
sub
shlb
arpl
inc
pop
lahf
pop
push
jg
ret
mov
mov
cmp
inc
aas
mov
popf
das
test
sub
ret
stc
dec
out
and
pop
dec
jnp
sub
pop
insl
or
jle
cmpsl
leave
mov
pushf
inc
sub
dec
add
cld
inc
push
adc
aaa
fwait
xchg
inc
mov
dec
inc
xchg
lea
sub
sub
mov
int
leave
lea
jo
dec
mov
scas
sbb
xchg
xor
adc
addr16
fisubrl
push
stos
sbb
xchg
mov
inc
or
insl
cwtl
bound
das
repz
dec
cmp
mov
scas
lods
add
cmp
pop
int
jne
adc
into
dec
mov
call
and
pusha
cmc
add
inc
fprem
outsb
sti
fdivs
fs
cld
insl
and
mov
push
fisubrl
leave
adc
test
push
sub
and
mov
popf
testl
lret
pop
jge
dec
sti
mov
mov
xor
jnp
push
movsl
or
inc
fldenv
popa
sti
xchg
lock
subl
xor
adc
jecxz
jb
xor
xchg
pop
icebp
mov
add
jne
cmp
mov
add
xorb
sbb
jns
xor
mov
ja
sub
cmp
cmpl
mov
adc
cmpsb
and
ret
lret
into
push
adc
in
movsl
clc
xchg
cmp
jp
sbb
mov
popa
push
sbb
or
cmp
out
cld
or
xchg
test
hlt
addr16
scas
push
jns
int
pop
mov
es
lock
and
mov
in
call
and
mov
ret
pop
in
hlt
and
subl
js
push
xchg
ret
pop
dec
xchg
out
shlb
mov
xchg
lods
lock
mov
popa
sbb
push
jmp
pusha
shlb
mov
ds
mov
jle
add
cmpb
fwait
out
xor
mov
loopne
imul
jg
lahf
mov
dec
jmp
xor
mov
xchg
xchg
mov
mov
lds
sub
rorl
mov
imul
mov
jnp
aad
mov
sbb
popa
dec
rol
xchg
nop
mov
mov
and
fstps
mov
or
xor
fs
or
movsl
ret
mov
ja
roll
cs
mov
sub
cmp
xor
xor
sbb
addr16
pop
cmp
sahf
jp
mov
push
dec
aam
inc
mov
aaa
sub
jecxz
gs
mov
xchg
push
sub
dec
popf
rorb
pop
loop
pcmpeqw
rcrb
xor
push
xor
leave
ss
jp
sub
pop
pop
in
mov
ja
pop
test
dec
sub
pop
test
test
test
clc
int
xchg
inc
jns
jo
push
add
push
movsb
out
movsb
fs
sahf
xchg
mov
movsl
sbb
jne
mov
fdivl
out
rclb
in
adc
les
inc
xor
xchg
sub
and
outsb
push
pop
xchg
fwait
xchg
and
or
or
cmpb
cld
gs
repz
cmc
mov
out
je
sbb
jns
jmp
or
sub
in
cmpsl
add
rcll
push
imul
mov
xchg
data16
loope
ret
scas
sbb
push
xchg
push
xlat
push
pop
mov
hlt
inc
test
icebp
inc
inc
pop
xlat
or
xchg
dec
cmp
jmp
dec
nop
mov
cmp
xor
mov
pusha
test
inc
int3
movsb
mov
or
mov
mov
and
fiaddl
mov
cli
lds
cmp
mov
in
inc
lods
icebp
push
ljmp
cmpsl
loope
jmp
sbb
test
pop
movsl
std
cld
mov
test
mov
daa
dec
mov
mov
js
cmc
and
push
mov
dec
inc
pop
sti
push
xchg
in
sarl
testb
movsb
enter
fldl
out
incl
int3
inc
filds
out
jbe
and
fs
push
sub
add
ficoml
adc
pop
mov
jl
pop
pop
pusha
jne
add
out
cmc
pop
flds
jge
inc
push
lods
scas
or
es
jmp
outsb
clc
inc
cmp
push
fucomp
push
push
testb
mov
enter
cmc
fisttpll
xor
sahf
sbb
cmpsl
test
fidivrs
mov
or
ljmp
mov
cmp
sub
enter
js
inc
loop
adc
push
jns
dec
xchg
fwait
lock
test
fldcw
mov
dec
leave
cmp
mov
inc
repnz
movsl
mov
loopne
mov
mov
std
jge
add
icebp
dec
shlb
scas
les
xchg
sbb
fimuls
jne
push
and
or
pop
sub
add
test
testb
lahf
xor
mov
das
or
jg
mov
add
jne
outsb
and
jae
mov
aas
lock
jmp
push
adc
push
cmp
inc
adc
loop
add
jo
cwtl
in
or
ss
neg
xor
jp
or
or
push
mov
mov
push
aad
dec
test
jae
adc
xor
pop
add
sahf
and
ljmp
cmpsb
fs
or
pop
add
sbb
mov
bound
xchg
imul
jg
mov
mov
jp
jmp
mov
mov
push
cwtl
dec
xchg
hlt
jecxz
aad
nop
push
loopne
aad
sbb
loopne
in
adc
add
xor
es
dec
inc
jne
fdivrp
imul
mov
test
repnz
push
sub
mov
in
mov
sbb
insb
out
sbb
call
mov
jle
js
mov
mov
gs
jp
pop
adc
push
ret
and
mov
jne
jge
scas
int3
xchg
jo
cmp
inc
addr16
imul
cmp
out
pop
iret
ds
lcall
pop
ret
jo
rorl
mov
adc
popa
pop
pop
and
fldcw
out
in
cmp
testb
mov
icebp
xchg
sub
dec
fidivs
lret
and
xchg
fdivl
jae
adc
mov
or
add
ffreep
add
jo
insl
jmp
sub
push
mov
or
pop
jns
mov
lock
cmp
lods
jnp
pusha
js
movsl
sbb
cltd
jno
test
sbbl
cmp
into
std
bound
lret
js
shl
mov
leave
lods
sub
f2xm1
cmpsl
sub
jp
mov
into
int3
cmp
push
xlat
fisubrl
push
push
cmp
sahf
mov
xor
scas
std
inc
fcoml
leave
fstpl
xor
dec
sbb
pop
rolb
dec
subb
cld
loop
cmp
push
fwait
xchg
pop
mov
inc
stos
jecxz
outsl
loope
dec
iret
clc
aad
prefetch
mov
adc
adc
cmp
push
inc
sbb
mov
ret
clc
and
ret
cmc
mov
push
lods
loop
cmpb
std
out
addr16
aaa
jg
push
dec
leave
adc
xchg
mov
loope
pop
sub
or
scas
aaa
add
insl
int
mov
xchg
pop
in
push
pop
in
pandn
aaa
xchg
sbb
lret
mov
cmp
push
jp
fwait
pusha
jns
movsl
call
scas
cmp
inc
inc
adc
xor
je
lock
test
cli
mov
jp
jbe
sub
testl
sub
lret
push
ret
popa
adc
dec
push
adc
int3
jno
lret
in
jno
lret
fcmovu
lcall
stos
fs
jecxz
cmp
cmpsb
movsl
xchg
xchg
fwait
xchg
scas
filds
add
sti
div
jge
or
lahf
cmp
out
inc
out
out
out
out
scas
into
loope
leave
and
stos
scas
cmp
mov
xor
lret
mov
lea
push
xchg
insb
xor
test
addr16
xchg
push
es
push
xchg
mov
fsub
loop
push
fs
std
xchg
push
inc
fs
call
fs
sbb
push
inc
sub
lret
lock
test
fmuls
imul
stos
imul
dec
mov
cmpl
xchg
inc
sub
mov
xor
test
lods
ficomps
ret
push
pusha
pusha
stos
add
cmp
mov
push
outsl
dec
mov
cmp
jno
xchg
in
sbb
lods
mov
fs
test
push
jae
inc
mov
in
inc
ljmp
push
es
fistps
aaa
xor
orl
push
push
test
aad
lods
mov
mov
mov
lock
fists
in
xchg
aaa
push
sub
mov
and
mov
popa
xchg
aam
push
mov
and
or
movsb
mov
lea
push
xchg
inc
nop
faddl
roll
and
fsub
movd
mov
cmpb
xchg
dec
dec
lods
mov
add
cmp
fisttpl
test
pop
add
xor
pop
push
loope
ja
fsubl
adc
loop
stos
fadd
mov
jnp
mov
xchg
mov
outsb
xor
xlat
mov
sub
push
fs
dec
lcall
and
int
push
insb
sbb
psrld
lahf
inc
psrld
int
loope
ret
pop
into
jle
mov
and
dec
fidivs
and
aad
cmp
sarb
addr16
adc
fidivs
loop
rol
inc
jno
inc
rolb
sbb
mov
xlat
fisttpl
pop
loopne
inc
jge
dec
cmp
mov
pop
fcomip
cmpsl
rorb
sub
push
and
daa
and
pop
mov
je
andb
sbb
es
or
in
pop
jo
lcall
lcall
adc
test
push
mov
lea
in
cmp
add
sbb
adc
push
mov
je
fiaddl
sbb
push
mov
push
jo
lcall
inc
loopne
sti
subl
add
sbb
int
aaa
fldt
adc
cmp
out
ss
ficomps
xor
add
adc
jge
aas
aas
das
lret
movsl
aam
and
popa
in
lret
and
ret
dec
lock
mov
stc
jns
stc
and
xlat
enter
sbb
mov
xor
push
inc
lret
aaa
loope
cltd
test
cmp
lahf
adc
xlat
sub
jno
addr16
ss
fidivrl
adc
cmp
aad
adc
outsb
jl
mov
cmp
fwait
jle
push
pop
stos
icebp
lret
lea
jmp
subl
lods
lahf
gs
enter
pop
repnz
ret
test
adc
mov
inc
lahf
js
fwait
push
lret
jo
hlt
scas
sarl
inc
and
shlb
cmp
lahf
push
and
scas
dec
mov
add
hlt
dec
ljmp
outsb
push
es
stos
out
sbb
jno
adc
dec
outsl
and
and
pop
push
daa
mov
mov
es
addr16
shl
mov
jae
mov
nop
or
bound
mov
mov
mov
in
cmp
mov
outsb
dec
and
pop
lret
xor
inc
cs
jmp
les
dec
ret
dec
or
idivb
inc
clc
ss
mov
xchg
pop
add
jp
sbb
ja
adc
push
hlt
dec
add
xor
scas
js
pop
pop
insl
push
js
imul
fidivl
in
or
jns
sub
mov
inc
mov
lock
scas
mov
ffree
cmp
adcl
mov
imul
xor
jge
mov
push
lods
lret
cmp
es
pop
out
rcll
loop
rclb
pop
cs
mov
mov
adcb
sub
push
jnp
mov
repnz
pop
fistl
mov
lods
mov
sbb
or
sub
lods
or
adc
adc
push
sbbb
mov
adc
jp
ret
jb
mov
jp
movsb
fisubrl
jne
jmp
adc
adc
divl
xor
pop
jb
out
cltd
outsl
lods
pop
movsl
mov
enter
sub
xchg
sbb
imul
cmpl
or
pusha
lods
into
mov
xor
fs
mulb
mov
ds
push
dec
ljmp
push
jno
cmpsl
inc
leave
xlat
cmp
ss
test
mov
adc
loope
testb
lcall
jne
jo
in
sbb
cmp
push
cmp
mov
addr16
cmp
orb
lock
push
out
add
fsubrl
mov
pop
sbb
lahf
push
ffree
sub
repz
mov
xchg
roll
subl
mov
not
test
negl
daa
adc
cwtl
mov
nop
das
stos
out
xchg
sub
adc
and
out
push
inc
push
fcompl
push
outsb
scas
jl
sbbl
pop
push
daa
xor
push
mov
push
push
mov
test
inc
repnz
push
pop
or
jbe
jg
add
addr16
movsb
lods
mov
jmp
in
lahf
loopne
sub
mov
jmp
mov
jge
aam
mov
pop
in
adcl
mov
fmulp
xchg
ds
adc
leave
xlat
cli
mov
rcrl
and
push
xor
fsubrl
in
mov
sub
inc
jb
or
shl
push
adc
imul
cmp
push
or
xor
sbb
dec
stos
adc
in
xor
enter
pop
mov
cmp
call
jnp
xor
bound
and
push
ljmp
cltd
adc
xchg
add
fwait
xchg
jae
push
xchg
jmp
lods
imul
push
pop
lret
out
and
push
cmp
out
test
enter
ret
rol
sahf
das
or
icebp
or
jmp
pop
xor
jne
pop
xor
testb
bnd
pop
int3
ss
mov
aaa
sub
dec
sbb
ds
fadds
or
cmp
fldcw
int3
lds
xor
xor
mull
jno
test
bound
test
lods
in
inc
jg
jns
or
push
test
mov
xor
fsubr
mov
or
les
lods
mov
mov
outsl
inc
push
int3
pushf
or
fwait
lods
add
push
jns
inc
dec
shr
jne
inc
push
xor
lock
xchg
cld
pop
cmc
and
sbbl
jnp
mov
mov
stos
addr16
push
rorl
mov
jg
xchg
sub
pop
loop,pt
cmp
mov
in
inc
fmull
jb
rcrl
sahf
mov
cwtl
ds
sti
cmp
xchg
pushf
sahf
call
mov
and
inc
push
scas
outsb
dec
gs
mov
jmp
pop
jge
stos
in
aas
ljmp
andl
daa
mov
rolb
in
xlat
mov
imul
push
sbb
aad
les
sub
cmp
mov
sub
fdivr
mov
sbb
cmp
aaa
cld
inc
dec
xor
push
cmp
cld
and
mov
lods
jge
in
push
sbb
std
cmp
adc
xchg
cwtl
adc
mov
std
xchg
pop
std
jae
out
cld
lret
xor
dec
leave
sbb
sub
push
xchg
call
cmp
aas
inc
data16
jle
ret
js
xor
sub
or
mov
inc
adc
inc
rorb
mov
daa
xchg
sbb
rcrl
cmp
stc
and
or
pop
push
divl
and
xor
cli
jae
jecxz
sub
fldcw
mov
push
fiadds
daa
push
inc
movsl
test
jno
lret
aad
lahf
mov
mov
inc
repz
call
stc
fldl
xor
int3
push
fidivrs
imul
shlb
pop
sbb
dec
push
insb
aas
fsubrs
cmp
out
cwtl
dec
push
xor
push
pop
mov
daa
inc
sub
repnz
xor
mov
fldcw
mov
lret
sub
inc
pop
ss
and
insl
mulb
xchg
ret
lret
mov
sbb
push
cmp
pop
sbbb
inc
out
popa
imul
sti
in
mov
push
pop
test
ljmp
cli
rcl
ret
popa
sbb
sub
jo
orl
out
xchg
push
scas
pop
js
adc
fwait
push
xchg
mov
jbe
js
sbb
adc
mov
sub
mov
mov
dec
and
rcrb
stos
push
sbbb
adc
mov
aas
mov
xchg
pop
out
pushf
rcll
and
in
or
sub
pop
xor
dec
sbb
and
mov
movl
inc
nop
cld
ja
and
cwtl
bound
stc
push
xchg
lods
lods
mov
jbe
repnz
subl
out
add
mov
jbe
sbb
fildl
outsl
lock
out
nop
push
fmuls
sahf
xor
or
call
out
js
repz
lods
jno
jmp
test
xchg
andl
ret
cld
pop
mov
cmp
fs
and
dec
xor
inc
sahf
jecxz
imul
filds
pop
cld
pop
cli
add
or
xchg
mov
stos
in
shlb
jnp
addr16
lahf
std
sub
sbb
sub
inc
enter
movsb
jle
aaa
repnz
dec
jbe
aas
andb
loopne
loopne
lret
es
cmp
lcall
cmp
pop
jge
in
inc
cmp
cld
sbb
sbb
shrl
or
scas
mov
stos
aas
or
mov
adc
xchg
mov
adc
imul
arpl
mov
cwtl
cmp
add
das
lock
pop
lock
cmc
sub
test
popa
sarl
mov
mov
aam
mov
jecxz
cmp
ret
inc
int
into
adcl
add
mov
fimuls
aas
aaa
inc
adc
ljmp
dec
and
lea
cli
push
xlat
sahf
test
std
scas
push
iret
mov
mov
lcall
jns
mov
and
sbb
outsl
ret
sbb
push
and
cmp
repnz
mov
std
and
pop
jmp
xchg
or
jo
and
fimull
mov
cmp
and
mov
loope
jg
cmp
sub
jno
ret
ds
inc
enter
jmp
inc
mov
push
xor
push
or
inc
js
in
inc
adc
test
add
into
hlt
or
test
mov
jmp
in
push
out
mov
xchg
mov
jl
fisttpl
jb
ret
test
and
and
cmp
jns
dec
jecxz
inc
jne
daa
jle
orb
xchg
cltd
mov
arpl
cs
sbb
xchg
repz
fs
mov
sub
pop
adc
xchg
push
sub
push
sbb
lods
roll
scas
sub
sub
outsb
jb
shll
mov
aaa
mov
xchg
sub
movsl
out
push
call
add
lcall
push
mov
cmp
enter
mov
jmp
cmpsb
pop
cmpsl
or
daa
cmpsl
cmp
sbb
cmp
je
scas
fmull
neg
test
aas
adc
leave
cld
push
ret
fnsave
sub
xchg
sub
loop
cmp
dec
pop
shll
jb
push
daa
and
mov
enter
dec
icebp
dec
in
leave
lcall
outsl
sub
aas
subb
mov
push
aaa
notb
popf
nop
and
in
shrl
rsqrtps
aaa
jle
and
xor
and
cltd
lds
test
mov
aas
std
outsl
std
por
pop
pushl
inc
jge
xchg
xor
or
mov
xor
xorl
cmp
int3
cmc
jecxz
xor
popa
movsb
cltd
mov
add
pushf
mov
lods
push
mov
imul
lahf
out
adc
mov
insl
mov
pushf
and
into
scas
sub
push
aas
daa
inc
push
mov
repz
in
cmp
jbe
cmp
cmp
inc
pop
jb
jge
xchg
loope
hlt
mov
fisubl
sub
xchg
mov
bound
cmp
lea
std
fiaddl
jg
xor
adc
fmuls
and
sbb
out
jle
out
fmull
mov
and
cmpsb
leave
pop
out
inc
ss
pop
das
jmp
jbe
cmp
sub
mov
test
mov
push
int
loope
jo
pop
fucomi
cmpsl
add
add
sbb
xor
jmp
repnz
fstl
fdivrl
mov
sbb
adc
cmp
mov
popa
dec
xor
mov
push
mov
lret
dec
ret
jg
or
sbb
sub
mov
add
jno
dec
out
or
cmc
movsl
xchg
sub
lahf
fisubl
inc
cmc
cli
fistpll
bound
sbb
sti
inc
push
fsubr
call
cli
mov
ljmp
sarl
sbb
push
fcompl
xchg
loopne
fimuls
push
icebp
addb
ffree
sub
inc
scas
add
xor
mov
cmp
pop
repz
push
add
lock
and
cmp
out
or
or
aas
loop
adc
xchg
fcmovne
adc
xchg
loopne
movsb
mov
jp
push
sbb
in
fimuls
and
dec
icebp
jl
or
adc
xchg
lea
js
inc
iret
cltd
inc
cmp
pop
dec
sub
push
jge
sub
or
popa
notl
call
push
xor
dec
mov
pop
push
pop
daa
loope
mov
in
pushf
fdivrs
sbb
andb
mov
in
imul
pop
clc
push
adc
lods
ror
sub
sub
les
push
roll
test
clc
jp
fnsave
inc
sub
out
inc
xchg
push
push
sti
sbb
mov
loop
test
insl
mov
incl
pop
dec
sub
cltd
lcall
mov
lret
jno
jl
add
jae
arpl
jmp
loop
jae
add
sbb
or
xor
push
scas
xabort
insb
adc
and
sub
xorb
std
adc
out
mov
push
in
mov
xchg
pop
int3
fisttps
ret
jle
mov
aad
lahf
jne
call
xchg
push
ret
test
push
pusha
dec
push
jbe
hlt
dec
rolb
cwtl
fsubs
or
dec
jp
jle
mov
inc
pop
cmc
stos
int
ja
mov
aad
jg
cmp
dec
fisubs
out
jbe
inc
sub
mov
lret
jl
pop
idivl
jne
jb
jne
push
enter
or
jnp
hlt
inc
mov
pusha
xor
ljmp
cmp
arpl
test
pop
inc
cmp
movsl
inc
mov
mov
mov
xor
cmpsb
stc
xchg
jl
push
mov
xchg
push
fildll
gs
mov
xchg
and
dec
and
add
mov
lea
test
lcall
add
xor
stos
jecxz
sbb
sub
xor
in
pop
xchg
inc
sub
inc
fs
jns
enter
adc
add
int
mov
lret
mov
inc
xor
xor
xor
out
jge
lcall
jns
sub
xlat
loop
test
xor
lods
std
xor
insl
mov
pushl
int
jp
mov
jne
inc
lret
dec
lods
outsb
dec
inc
mov
and
jp
pop
test
ja
movsb
fcomi
inc
mov
arpl
pop
pop
mov
in
aas
insl
jnp
xchg
inc
xlat
mov
std
mov
jnp
out
cmpsb
sbb
imul
and
cmpsb
push
xchg
lcall
sub
test
out
xchg
ljmp
inc
mov
sbb
je
lahf
lahf
mov
sbbl
fstpt
jbe
mov
jg
ljmp
stos
or
test
xchg
icebp
or
call
pop
xchg
cmp
in
test
loopne
frstor
jge
imull
xchg
icebp
push
cmpsl
negl
aam
and
mov
or
hlt
pop
scas
push
add
lods
lahf
in
andb
dec
xchg
inc
dec
add
scas
mov
pop
and
pop
and
repz
mov
pop
jmp
mov
mov
xlat
push
jns
cmp
pop
cmp
jae
mov
icebp
scas
out
xor
add
mov
sarb
aam
cmp
lods
repz
enter
mov
sub
cmpsb
lods
push
dec
push
dec
dec
sub
pop
push
out
mov
cmp
push
jle
push
lods
push
add
jecxz
mov
pop
xchg
push
pop
sahf
dec
out
jne
sub
pusha
jnp
ljmp
imul
popa
xchg
out
icebp
es
jge
dec
cmp
jmp
and
pop
and
stos
cmp
pop
sbb
push
stos
and
mov
or
mov
push
cmp
mov
push
shl
inc
dec
addr16
inc
or
pop
xlat
cmpsb
mov
iret
push
and
dec
and
out
lea
sbb
lea
lret
xchg
scas
outsb
mov
movd
dec
mov
push
out
xorb
jo
xchg
mov
push
jae
sbb
pop
xchg
pop
ret
push
frstor
mov
fstpt
jle
cld
pop
mov
sub
cmp
cs
push
pop
or
xchg
popa
push
xchg
fstl
and
mov
or
popf
mov
or
xchg
andl
jl
mov
jb
cmp
xlat
jae
rolb
sbb
pop
mov
mov
ss
adc
cmp
jnp
pushf
or
test
cmp
lret
in
scas
sti
xchg
sbb
xor
mov
nop
rcll
movsb
sbb
pop
add
faddp
add
outsb
add
push
mov
mov
cmp
movsl
mov
jnp
xor
jb
xchg
mov
inc
repnz
lds
ret
iret
orb
fs
cmp
loopne
mov
sbb
fcmovnbe
ja
ds
mov
fwait
out
sbb
cmp
add
int
pop
call
mov
jle
lret
pop
mov
xlat
dec
loopne
sub
xchg
insb
je
mov
jmp
adc
sub
mov
test
jge
push
mov
mov
dec
je
filds
xlat
ja
push
inc
fucomp
sub
jne
mov
xor
jge
idivl
mov
sub
aad
jns
sub
push
mov
push
mov
push
cmpsb
add
mov
jp
bound
or
or
fwait
adc
sahf
jl
mov
fisubl
mov
ljmp
int3
test
stos
xor
dec
aad
ret
pop
lahf
filds
into
test
mov
push
mov
push
mov
pop
cli
repz
fucomip
adc
jnp
jg
jnp
mov
std
xchg
test
or
xor
add
dec
call
xor
push
add
test
fcomps
scas
inc
popf
dec
xor
push
inc
stos
adc
mov
sti
je
ret
xchg
xor
sbb
mov
sub
push
je
xchg
push
ret
lahf
jl
pop
int
repz
bound
push
and
cmc
cmp
in
rcl
dec
out
sub
or
jge
pop
pop
or
fnsave
dec
aaa
ljmp
sbb
in
lods
test
scas
jmp
mov
add
ja
push
xchg
jbe
pop
shlb
loope
ror
mov
repz
loopne
imulb
pop
push
adc
sahf
sbb
or
sarl
and
cmp
pop
sti
test
or
daa
push
lret
mov
cmpsl
sub
push
ss
fwait
andb
mov
xchg
fwait
sbb
mov
jb
mov
dec
cmp
outsl
out
les
fneni(8087
enter
aaa
mov
loopne
scas
sbb
dec
ret
out
or
mov
push
in
add
pop
dec
cmp
arpl
dec
pop
in
pop
push
mov
insl
and
fsubrl
sbb
stc
xor
sub
lock
push
out
stc
filds
movsl
jl
fsubrl
jns
jae
scas
out
ds
rorl
mov
leave
push
fst
leave
dec
in
push
ja
sbb
je
push
clc
and
xchg
jo
adc
aad
lret
testl
cmp
cmp
sbb
enter
push
or
cli
fidivrl
xor
add
ret
stos
lds
xorl
push
fildl
shrl
jns
mov
and
pop
mov
jnp
adc
fld
inc
sub
loopne
inc
fdivrs
pop
sub
loope
sub
push
pop
ss
push
ss
scas
sbb
test
das
push
mov
cmc
insl
sub
xchg
pop
mov
mov
daa
add
pop
cmp
int3
shrl
imul
mov
into
sbbl
inc
cmp
inc
add
jecxz
pop
inc
ja
mov
in
push
pushl
jg
inc
pushl
fildll
mov
in
push
sbb
ficoms
xorl
sub
mov
mov
dec
shr
popf
mov
lcall
sub
aad
insb
int3
bound
bound
jmp
out
test
addr16
xlat
mov
es
outsb
out
int
jno
inc
loop
xchg
xchg
fldenv
or
lock
mov
outsb
adcl
push
std
insl
sub
jnp
fs
jns
fwait
mov
dec
das
mov
jo
mov
pop
es
aam
out
sbb
lock
out
movsl
push
and
in
xchg
mov
add
iret
mov
pop
dec
mov
imul
js
lea
loope
push
mov
loopne
rdmsr
ja
mov
jg
fstps
cli
mov
dec
mov
std
sub
mov
into
mov
sbb
dec
insb
inc
push
mov
out
inc
aad
movsb
and
or
push
cmp
mov
lcall
push
and
fwait
xlat
jbe
dec
pop
insb
pop
and
sbb
inc
in
adc
and
loope
mov
cwtl
mov
ja
mov
sar
cld
test
outsb
mov
xor
js
or
mov
les
xchg
sbbb
mov
jmp
int
out
mov
sbb
shll
ss
lret
sub
add
cmp
and
jle
popa
jl
scas
add
or
inc
jo
addr16
loop
and
insb
stc
mov
sub
add
mov
in
and
push
dec
xor
cmp
lret
cmp
pop
dec
sub
fisubrl
mov
inc
mov
arpl
outsb
or
outsb
les
push
gs
leave
jbe
rcrl
bound
push
subl
lds
mov
rorl
sub
mov
adc
mov
sbb
cmp
lods
mov
xor
mov
lea
push
xor
popa
pop
rorl
add
dec
or
sbb
or
push
push
std
mov
rolb
addr16
dec
pop
cmpsb
inc
add
xchg
or
dec
stc
pop
mov
push
pop
or
aaa
call
push
adc
jno
repz
data16
mov
mov
pop
sbb
and
or
pop
lcall
into
scas
lock
fs
cmp
loopne
cmc
int3
out
dec
in
xor
int3
pop
mov
fs
fsubrl
pop
repnz
mov
xchg
iret
sbb
jbe
enter
outsb
cmp
mov
insl
xor
jne
stc
xor
mov
fisttps
and
xchg
pop
fs
fadds
mov
or
loopne
jb
cwtl
sti
jecxz
mov
or
sub
enter
enter
cmp
out
hlt
and
mov
movups
lea
iret
add
jns
add
push
stos
arpl
repnz
int3
shl
inc
add
in
aam
cltd
aam
scas
jmp
lea
dec
cltd
mov
nop
sbb
xchg
sti
add
ds
adc
stc
lods
in
inc
add
push
adc
imul
sbb
mov
mov
fldt
mov
pop
jl
cld
loopne
pop
push
rorl
dec
cmp
sarl
inc
inc
pushf
pop
mov
jnp
or
ficoms
pop
jns
cltd
xchg
mov
test
cmp
fbstp
lret
mov
and
into
and
cwtl
cli
out
add
mov
scas
lds
cmp
mov
xchg
push
pop
cltd
dec
pop
leave
sub
stc
xchg
adc
cmp
mov
mov
xchg
aad
pop
mov
int
enter
cmpsb
lods
xchg
pop
into
adc
out
jg
push
movsb
enter
in
mov
xchg
push
sub
adc
fcmovnu
ss
js
sbb
xlat
or
add
addr16
popa
push
int3
aaa
xchg
jnp
jle
orb
push
adc
arpl
inc
arpl
ret
lea
push
stos
sub
mov
in
lods
sbb
adc
add
movsb
adc
insb
lds
sub
dec
add
ds
inc
shrb
bnd
mov
add
or
pop
xor
in
mov
inc
mov
test
pop
iret
inc
pushf
sahf
inc
pop
in
pushf
in
shlb
repz
popa
in
cmp
loop
push
dec
out
mov
pop
xor
mov
popf
xor
hlt
daa
enter
jp
pop
lahf
insl
cmovns
xlat
mov
jle
fnop
push
pop
jmp
dec
fadds
xchg
sub
jmp
dec
cmp
push
cmc
in
lret
imul
call
test
fidivl
das
aaa
mov
xor
xor
mov
cmp
fdivrl
cli
xor
outsl
cli
mov
test
out
or
nop
pop
jnp
push
iret
lds
pop
enter
pop
sub
mov
jo
jb
mov
rcr
das
xor
adc
xor
cli
adc
add
test
mov
sbbl
mov
jle
test
push
or
sub
mov
adc
dec
cwtl
fmull
sub
std
jmp
mov
mov
mov
jnp
nop
sub
and
popf
dec
mov
neg
mov
push
stos
in
mov
pop
mov
outsb
leave
cmc
cmpsb
dec
subb
cmp
or
iret
add
jns
enter
or
mov
mov
fiadds
cmc
sbb
movb
push
push
nop
movsl
ljmp
pop
aad
aam
out
push
mov
xor
in
shlb
push
and
or
aaa
dec
mov
xchg
jecxz
hlt
test
and
mov
adc
push
repnz
in
fst
push
push
sbb
mov
orb
into
sahf
xor
cmp
xchg
push
sub
mov
dec
cmpsl
push
faddl
dec
fiadds
adc
fdivrs
les
dec
mov
hlt
sbb
rcrl
or
xor
data16
in
push
pop
push
xchg
insl
push
pop
sub
pop
addb
mov
cltd
clc
inc
and
les
arpl
mov
pop
mov
shlb
xor
in
dec
adcb
in
ret
mov
mov
cltd
loope
inc
pop
test
cmp
inc
repz
bound
rcl
loopne
push
ja
fisttpll
dec
inc
sub
mov
and
das
arpl
in
rcrb
divl
cmp
mov
sahf
jecxz
push
and
rcll
mov
pop
mov
xor
je
xchg
pop
and
out
lcall
shll
movsb
shlb
subb
push
mov
pop
mov
aas
xchg
gs
cmp
adc
shll
cmpsb
iret
jmp
mov
and
leave
lea
dec
mov
push
lds
dec
mov
cmp
insb
mov
nop
cs
or
lods
fcomi
fst
xchg
and
push
xchg
mov
dec
mov
xchg
cld
out
sub
push
lahf
addl
mov
les
pop
rclb
jg
cmp
xchg
aaa
call
outsb
sub
xlat
add
jle
inc
cmp
dec
out
in
stos
pop
add
dec
imul
lods
push
or
push
add
xchg
jmp
pop
push
xchg
ds
mov
sarb
pop
jg
je
jl
fidivrl
scas
mov
out
fmuls
xor
add
jle
push
nop
aas
or
xor
push
and
cmc
into
push
mov
inc
loope
push
push
dec
mov
xchg
dec
mov
stos
lcall
jmp
push
cwtl
sahf
mov
loopne
mov
cmp
add
dec
insl
mov
lret
jb
dec
int
push
sub
pop
inc
add
cwtl
fwait
icebp
fnstcw
mov
cmp
mov
jne
push
dec
cmp
lods
in
scas
lock
sar
push
in
or
push
adc
andl
mov
cmp
jae
cld
pop
icebp
mov
fstps
loop
testb
sub
pop
jg
aam
xor
push
sbb
repnz
mov
xchg
ss
dec
shl
fs
and
adc
icebp
addr16
popf
add
dec
push
insl
and
je
data16
jno
mov
sbb
pop
sbb
push
lds
push
sub
pop
cwtl
ret
test
cltd
add
ljmp
dec
sub
adc
das
lcall
adc
push
clc
lods
ds
pop
xor
inc
pop
jge
dec
sub
inc
adc
pop
mov
test
lea
sarl
fldcw
xorl
xchg
rcr
popf
add
into
xchg
pop
add
out
or
push
lcall
in
shll
xor
push
cmpsl
fs
and
iret
jae
aam
sub
xlat
das
clc
roll
fwait
stos
stos
mov
out
xchg
out
mov
or
mull
sub
cmp
mov
subb
pushf
out
imul
xchg
push
in
stos
lock
jecxz
dec
mov
inc
cmp
jl
mov
cmp
push
sti
or
outsb
inc
lea
pop
movsb
cld
xor
cmp
lahf
mov
loopne
in
out
add
mov
stc
adc
loopne
repz
dec
or
sbb
mov
push
lea
cmp
int
cmp
xor
inc
movsb
mov
loope
mov
into
popa
mov
mov
or
sti
mov
push
incl
outsb
lds
xor
mov
bound
lods
lods
sbbl
cmp
mov
cmp
iret
je
lahf
scas
mov
rcrl
inc
dec
addr16
pop
mov
xchg
test
in
sbb
xchg
punpckhwd
lahf
pop
cli
add
jge
inc
out
nop
jmp
push
mov
lds
mov
out
data16
mov
push
push
dec
xor
stc
sub
jb
cmpsl
jmp
inc
pop
js
das
or
jbe
xor
nop
xchg
gs
pop
insb
pop
xchg
outsl
scas
test
push
xchg
and
lock
mov
insb
cli
adc
or
jecxz
adc
push
cmp
adc
jne
scas
into
popa
pop
lahf
or
das
pop
aam
ret
stos
popf
movsb
sub
and
loopne
cmp
push
push
stc
lock
jb
adc
or
dec
jle
bnd
fildl
outsl
mov
rclb
mov
sti
jle
mov
andnps
sti
cmpsb
lea
leave
aas
and
adc
pushf
push
jle
jp
lret
jnp
adc
or
xchg
insl
inc
imul
push
inc
dec
cwtl
jns
inc
loopne
xchg
mov
jmp
xchg
jmp
out
xbegin
push
mov
pop
xor
fists
aas
xchg
daa
das
xchg
and
xchg
fld
cmpsb
sub
fistps
push
mov
cmp
xchg
imul
push
xchg
orl
xchg
cmp
cli
cmove
mov
in
mov
dec
inc
cli
lret
rcrl
or
mov
mov
in
mov
jl
xor
lea
xchg
mov
pop
adc
sbb
push
mov
test
lcall
push
sbb
inc
mov
lret
xchg
xchg
in
loopne
mov
hlt
dec
shl
int3
inc
jecxz
outsl
push
mov
cmp
sbbb
in
pop
inc
orl
xchg
and
ds
enter
adc
je
mov
push
mov
lret
popa
add
sbb
dec
mov
int
pop
pop
sti
imul
add
mov
push
or
fstpt
movsb
clc
lret
mov
xchg
pop
xlat
jo
arpl
icebp
in
pop
clc
add
cmp
mov
inc
dec
ss
psubb
fcoms
inc
ret
sahf
fst
sub
sub
and
or
insl
jg
or
dec
cmp
cmp
insb
iret
xchg
cli
scas
imul
repnz
and
add
mov
stos
insl
roll
js
loopne
test
lds
sbb
loop
mov
test
mov
xchg
out
cs
das
les
and
xchg
add
arpl
sarb
sub
jge
xchg
push
sbb
sub
jp
mov
xchg
sarb
shr
jge
adc
stos
add
iret
das
pop
or
fistl
push
pop
ficoms
pop
sbb
shl
xchg
and
inc
lea
daa
mov
std
adc
inc
mov
stc
jge
imul
insb
aam
mov
cmp
sbb
mov
lahf
cmpsb
or
cmp
mov
mov
lea
adc
insl
mov
sub
cmp
and
dec
nop
dec
cmp
add
and
hlt
adc
xchg
in
stc
sub
add
out
xchg
jp
xchg
rcll
mov
dec
out
xchg
shlb
jns
inc
aas
out
cltd
mov
scas
ss
es
addr16
decl
jecxz
and
mov
outsb
cmp
loope
add
pop
dec
popa
jecxz
mov
mov
jge
stos
push
xor
pop
arpl
push
in
jnp
call
daa
or
aaa
cs
or
jle
loop
fcmovne
adc
mov
sbb
imul
repz
clc
push
cmc
pop
mov
dec
aam
lret
rcll
mov
mov
and
and
testl
dec
dec
cmp
testl
mov
outsb
les
pop
repz
int3
xchg
pop
out
cltd
mov
sub
xor
push
popa
jns
inc
por
fldcw
ja
push
iret
lea
bound
jg
mov
loope
lods
fisttpll
jecxz
loopne
xor
mov
xchg
xchg
arpl
jbe
popf
adc
mov
adc
pop
xor
out
ss
mov
mov
mov
inc
add
test
pop
and
mov
xchg
movsl
shll
hlt
dec
adcb
mov
ja
inc
shlb
mov
lcall
adc
lahf
and
and
je
pop
add
or
repz
mov
lds
ficomps
pop
test
sub
sub
stc
int
in
stos
dec
sti
cmp
aad
add
inc
lds
shrb
add
hlt
mov
mov
adc
push
cmp
nop
lret
outsb
mov
mov
inc
jne
jbe
cmp
add
jmp
outsl
xchg
mov
shl
lods
ficoml
lahf
or
stos
xor
lods
frstor
fldl
fsts
jb
shl
or
inc
pop
jl
jmp
popa
ljmp
adcb
sbb
inc
inc
inc
add
jno
xor
mov
mov
into
mov
xlat
jns
cld
hlt
xchg
lcall
inc
scas
call
and
mov
xchg
je
inc
movsb
sarb
dec
push
jp
mov
jno
or
shll
mov
push
sbb
cmpsl
mov
pop
pop
outsb
dec
push
in
inc
pop
inc
jle
xchg
mov
and
mov
aas
dec
rorl
js
neg
jl
cwtl
movsb
mov
cld
xchg
adc
cs
mov
in
sub
push
movsl
push
jae
mov
dec
push
sarb
ficoml
insl
dec
sbb
hlt
pop
bound
adc
jmp
add
mov
cmp
fnstenv
pop
aam
pop
aaa
loope
push
idiv
pushf
popa
and
lar
or
pop
mov
lock
cmpsb
popf
push
mov
lods
int
ss
rcrb
jno
mov
pop
inc
rcrl
sbb
outsl
das
mov
outsl
jle
xor
std
cmp
in
xor
jae
in
adc
cmp
pop
cli
movsb
cmc
xchg
mov
mov
jmp
testl
jnp
sahf
xchg
jbe
scas
xlat
cmp
cmp
jb
jnp
adc
sbbl
aam
add
adc
mov
jmp
cmpsb
decl
hlt
das
cwtl
es
imul
dec
sbb
mov
fwait
add
mulb
test
mul
inc
xchg
dec
jle
or
pusha
mov
and
ljmp
mov
dec
push
sbb
add
or
pop
adcl
sbb
pmaxub
fmul
sti
xchg
imul
mov
inc
jle
dec
nop
cld
bnd
xchg
lock
jg
xchg
rorb
mov
std
mov
mov
pop
lock
rcll
ret
sbb
test
daa
and
lret
scas
inc
push
es
mov
stos
decb
rclb
loop
sub
xchg
cmpsb
sahf
pushf
xchg
popa
jge
imul
repz
cs
notb
and
nop
inc
mov
mov
jecxz
sbb
push
out
leave
cwtl
imul
test
inc
mov
push
stc
and
cmc
loope
insl
mov
mov
in
ror
test
jno
adc
xor
scas
inc
jnp
negl
cmp
jbe
aam
cmp
enter
ja
in
xlat
xchg
pop
mov
push
sbb
addr16
loopne
fsts
xchg
add
fstps
fwait
adc
xor
aad
lods
push
test
scas
jb
cmpsb
or
rorl
stc
loop,pt
fstl
or
test
pop
popf
pop
mov
imul
movb
sbb
push
cmpsl
mov
jno
xchg
insb
mov
mov
test
mull
fwait
into
or
inc
sahf
sbb
dec
shll
fcomps
and
sbb
jo
in
cmp
andb
imul
sti
fbld
cmpsl
call
and
sahf
out
mov
rolb
outsl
hlt
cmpsb
lahf
and
fsubr
mov
sti
test
in
add
inc
mov
out
mov
sub
imul
mov
fistps
mov
push
jecxz
cli
mov
xor
icebp
cli
addb
xchg
outsb
cmp
push
lss
repz
and
cmc
mov
pop
repnz
in
cmp
cwtl
int
mov
fs
int3
mov
xor
mov
repz
daa
sarl
leave
mov
xchg
das
aas
test
aad
dec
mov
loope
cmpsl
add
jecxz
btr
push
incl
in
in
sahf
cmpsl
icebp
push
into
mov
jnp
jmp
add
pop
pop
out
fst
jle
xchg
mov
cmp
and
mov
out
sbb
dec
incb
ficompl
mov
dec
mov
cmc
lret
insl
xor
cmp
pusha
mov
mov
dec
inc
repz
pop
cmp
inc
pop
roll
and
xchg
js
das
cmpsb
das
push
push
xchg
and
enter
mov
push
cmp
loopne
scas
in
xor
jg
cmpsb
cmp
pop
lds
xchg
mov
mov
adc
mov
rcl
sbb
inc
fnstenv
scas
mov
add
mov
std
push
jns
adc
sub
filds
or
ret
in
push
jp
dec
fsubrl
outsl
cmp
jmp
add
std
test
add
fwait
in
cmpsl
xchg
jns
subb
inc
cltd
adc
jo
push
add
cltd
mov
push
lods
lea
jns
xchg
xlat
adc
add
and
roll
data16
adc
push
es
mov
sahf
push
rcll
xor
shrb
sbb
dec
loope
scas
movsl
test
scas
and
out
fbld
dec
pop
in
mov
int
stc
ffreep
mov
sahf
outsl
fwait
mov
fdivrl
push
and
mov
pop
fsub
mov
push
out
xchg
out
xchg
fwait
pop
test
pushl
lcall
sub
push
dec
adc
mov
out
xchg
dec
mov
ret
data16
pop
adc
jle
jne
data16
jle
jecxz
jmp
test
push
jb
or
rorb
cmp
aad
loope
aaa
sub
dec
fbstp
sub
and
jno
push
jo
cmp
pop
scas
mov
cmp
pushf
push
in
adc
add
dec
loope
testb
insb
pusha
push
lods
or
mov
inc
and
js
fstpl
mov
push
mov
xchg
ss
cmp
fdivs
cmpsl
or
jmp
dec
mov
inc
std
pop
inc
fcompl
lods
ret
popl
pop
stos
loop
mov
pop
xchg
ljmp
jno
ss
test
cmp
lret
jecxz
test
push
push
inc
and
xchg
dec
inc
sub
stos
mov
outsl
or
jmp
xchg
xchg
xchg
movsl
cmp
mov
add
dec
jl
fucomi
popa
xlat
jp
or
push
fisttps
lods
ss
sub
cmc
test
cmp
out
dec
rol
cmp
pusha
cwtl
mov
bound
mov
adc
mov
aaa
outsl
loopne
dec
xlat
pop
pop
or
and
iret
xor
ds
in
sub
andb
push
xor
mov
push
add
or
les
data16
out
ret
mov
rcll
xchg
xchg
push
das
cmp
stos
into
mov
repz
mov
sub
ja
cmp
aam
scas
mov
sub
or
test
in
into
adc
cmp
xchg
dec
add
icebp
jp
pushf
ja
xchg
xor
add
and
test
das
add
fs
and
mov
jbe
enter
adc
ss
add
daa
jge
jl
push
mov
orb
cwtl
push
loopne
repnz
jbe
lret
cmp
or
mov
test
push
lahf
clc
jnp
add
inc
xor
xchg
mov
pushf
lret
lcall
test
test
xor
xlat
cmp
stos
loopne
dec
call
cmp
imul
mov
fdivrs
add
xchg
in
loopne
scas
or
cs
aaa
and
pop
xchg
push
shr
add
jecxz
jne
lret
jmp
clc
sub
shll
xor
jnp
loope
pop
loop
pushf
and
cltd
cmp
mov
lcall
mov
rorl
sbb
addr16
sarb
pusha
je
mov
adc
lods
or
xor
sti
inc
cmp
mov
fcmovbe
into
pop
shll
fsubl
scas
adc
mov
pop
lea
add
cs
lods
bound
sbbl
inc
fs
cmpsl
mov
cmpsl
lock
loope
jae
sub
pop
fsub
or
sub
dec
sub
popf
out
call
out
adc
xlat
sub
mov
xchg
aad
cmp
lds
sbb
and
mov
push
lcall
cltd
push
xor
popf
movsl
or
movsb
arpl
pusha
les
int3
xchg
mov
js
roll
adc
xor
xchg
push
push
movsl
cmp
mov
sbb
push
pop
push
jb
scas
cli
mov
push
cmp
xchg
dec
sbb
mov
pop
data16
and
add
mov
sbb
xchg
push
and
pop
inc
bound
test
xor
xor
jnp
add
leave
adc
mov
fdivs
cmc
mov
mov
scas
mov
sub
imul
jmp
lret
sbb
sub
repz
push
jb
bound
sbb
ror
push
xchg
add
popf
loopne
hlt
ja
cmc
mov
adc
xor
adc
xchg
xchg
add
arpl
xlat
test
shl
push
adc
and
and
xchg
inc
outsl
xor
mov
jmp
fisttps
jne
sbbb
push
cwtl
jbe
in
sub
sub
cmpsb
ficoms
outsl
mov
lret
xchg
scas
dec
dec
ds
popa
mov
fwait
adc
jl
pushf
mov
rcrl
outsb
mov
push
sub
jg
inc
std
lea
decl
jle
and
sub
aad
pop
sarl
lret
add
hlt
or
js
movsb
movsl
pop
imul
push
pop
add
scas
call
lods
insl
data16
mov
aaa
fcoml
daa
jp
jge
push
sti
sub
ljmp
jo
pop
js
xchg
fiaddl
scas
or
add
xchg
daa
inc
push
lods
mov
je
xchg
adc
sbb
popa
lods
inc
mov
xlat
sub
into
push
jb
push
mov
cmp
mov
push
call
stos
xlat
mov
imul
stos
pop
popa
test
mov
das
xchg
sub
mov
add
mov
inc
push
mov
mov
add
out
addb
add
loopne
inc
test
orb
das
lahf
jno
incl
pop
outsl
movsb
or
insl
sarl
je
sub
cmpsl
sti
andb
sub
inc
xor
cmc
insb
sub
or
mov
lock
fdivrl
lds
jg
cwtl
mov
stos
cmp
mov
daa
daa
mov
cmpl
push
mov
loop
xlat
pop
fdecstp
pop
insl
push
jnp
movsb
jmp
fsin
push
jbe
int3
jg
cli
pop
addr16
jecxz
sub
pop
cmp
imul
js
or
rolb
lahf
mov
clc
xchg
adc
or
mov
into
xor
fisttpll
arpl
cmpl
imul
sbb
outsb
jmp
lret
push
out
shll
outsl
leave
divl
stos
mov
in
scas
inc
dec
shrl
mov
mov
or
cmp
push
rcrl
jg
xchg
lcall
cmp
lcall
xlat
add
stc
test
or
jmp
repz
cltd
mov
ret
jae
sub
std
js
xorb
cld
mov
mov
jg
sbb
adc
xchg
psubw
lret
pop
fwait
pop
sbb
pop
jg
pop
adc
pop
popa
mov
into
subb
imul
cli
iret
mov
and
cmc
sub
sub
or
inc
mov
bsf
fwait
mov
jg
xor
les
and
repnz
xchg
adc
cmc
ja
mov
insb
mov
fwait
mov
mov
pop
jmp
decl
pop
icebp
push
loop
pop
push
xchg
test
test
cwtl
lret
fmuls
ficoml
scas
or
ja
insl
xchg
push
sarl
inc
cmp
aaa
jnp
push
or
cwtl
mov
pop
cmpsb
fbstp
mov
cli
add
data16
ljmp
bnd
mov
nop
scas
leave
ret
add
push
les
mov
xchg
scas
xor
pushf
or
sbb
aaa
shlb
lcall
lret
aam
or
xchg
add
movsl
rol
add
int3
dec
sbb
xor
arpl
scas
adc
fwait
dec
sbb
jbe
jp
sbb
pop
cmp
loopne
dec
mov
xchg
adcl
xchg
hlt
or
add
lea
push
push
out
pop
lods
cmpsb
fbstp
dec
jnp
add
lds
fisubrs
cmpsl
sub
shufps
xor
mov
mov
loope
ret
nop
test
inc
dec
adc
and
testl
sub
es
xor
sub
or
rcll
xchg
adc
dec
ja
test
push
pop
push
and
jb
sbb
push
scas
mov
push
shr
mov
lcall
cmc
pop
movsl
push
mov
ljmp
mov
adc
lods
jg
test
pop
add
push
popa
loope
pop
mov
mov
add
aaa
mov
mov
loop
mov
add
xchg
popa
lcall
mov
outsl
and
adc
sbb
cltd
or
rcrl
pushf
adc
sbb
fucomi
push
add
xchg
mov
sub
imul
xchg
sbb
ljmp
cmovb
shl
pop
sub
sub
dec
mov
test
jg
into
pop
int3
lahf
outsl
mov
mov
leave
jl
test
inc
loopne
mov
in
daa
mov
add
cmp
loopne
or
mov
movsl
rcl
pop
ret
ss
jmp
fs
mov
aad
mov
jne
jge
adc
cmp
dec
pusha
test
push
adcb
fwait
mov
insl
out
push
lock
sbb
sub
and
push
and
jl
mov
xor
mov
es
rcrb
lahf
sbb
sbb
mov
mov
les
mov
push
cmp
xchg
out
adc
mov
xor
mov
adc
sbb
mov
jmp
jne
idivl
jmp
bound
cli
insl
imul
lea
sbb
cmpl
cmc
movsl
cmc
pop
lds
adc
in
stos
loope
subb
jmp
push
dec
xchg
xchg
enter
gs
fstpl
jmp
lea
fucomp
stos
cmp
scas
in
cltd
sbb
leave
ficoms
movsb
sub
dec
mov
adc
rclb
or
in
lock
jo
sub
xor
adcb
in
jo
mov
push
mov
add
loope
test
push
sub
pop
nop
movsl
or
dec
xchg
lods
push
je
pop
cmp
imul
mov
mov
out
sbb
int3
jnp
rol
hlt
xchg
xor
in
or
bnd
or
aaa
stc
sbb
xchg
cwtl
std
cmovo
aas
sub
adc
aas
test
xor
dec
jl
stos
inc
movsl
out
cmp
sub
mov
pop
ret
push
cmp
fisubrl
test
pop
nop
mov
add
sub
mov
pop
lea
lods
dec
call
clc
ja
faddp
push
lock
nop
stc
inc
mov
movl
xor
out
push
notl
insl
lods
cs
mov
imul
aas
mov
les
dec
aam
push
fisttps
or
popf
cmp
pop
cmp
insl
leave
inc
xchg
clc
sbb
inc
js
mov
lds
mov
cwtl
push
rolb
je
mov
lock
sub
out
fs
push
mov
int3
cmp
inc
add
add
ja
test
add
adc
sbb
arpl
sub
and
out
mov
sub
loopne
sub
sbb
and
icebp
aaa
adc
fwait
cmp
inc
fisubs
mov
mov
js
es
es
xchg
es
call
roll
gs
add
or
fstps
jecxz
dec
jecxz
mov
jp
xchg
xchg
lods
fs
shrb
push
cmp
jns
lret
loopne
lock
out
cmp
inc
add
sti
aas
ficomps
pop
addr16
add
pop
cmpsl
jg
xor
inc
aas
add
and
mov
ret
popa
mov
aas
fdivrs
fdivrs
pusha
cmc
push
sbb
insl
inc
sbb
push
lock
sub
mov
add
jge
fildll
push
ja
xchg
inc
repz
out
jl
xor
xchg
or
push
jmp
pop
jae
mov
in
les
push
je
mov
jecxz
pop
aas
xchg
notl
adc
push
dec
inc
inc
mov
shl
xor
mov
sbb
inc
out
pop
sti
and
mov
lock
imul
cli
test
xor
fcomi
aam
jb
push
jnp
ficomps
lock
mov
add
or
mov
repz
and
sbb
sub
cmc
or
icebp
mov
sarl
ds
daa
inc
xor
ljmp
add
ds
clc
add
mov
dec
xchg
sub
mov
add
jp
aam
insb
psubb
call
inc
imul
mov
mov
das
into
push
loope
shrl
lods
mov
popa
aad
adc
pop
popa
scas
mov
stos
lock
jb
mov
sahf
test
mov
sub
or
mov
mov
cs
fwait
jge
lahf
fwait
loope
outsb
test
insb
or
sarb
iret
call
out
nop
push
ds
out
sbb
shlb
pop
jp
enter
jne
in
ret
mov
enter
into
jns
mov
punpcklbw
rcrl
inc
xor
scas
jbe
jmp
lret
add
jmp
nop
xor
mov
push
mov
mov
push
xchg
xor
insl
lea
jns
push
pop
lahf
mul
idivl
aas
hlt
testl
jne
ja
mov
add
mov
pop
adc
adc
cmp
pop
jp
and
in
xchg
out
push
cmp
inc
xchg
fsub
je
dec
add
sub
dec
adc
push
mov
or
insl
sbb
add
arpl
mov
push
scas
pop
mov
movsl
aam
push
dec
pop
clc
and
movsl
lods
sub
sub
pop
push
add
ret
cmpsl
nop
stos
out
notl
jb
scas
insb
fcmovnbe
pop
test
clc
and
mov
sti
int3
jmp
cld
inc
out
stc
addr16
jo
test
lahf
fcoms
adc
push
sbb
mov
lea
stos
cmp
xchg
or
sub
cmc
push
out
js
xchg
xchg
nop
jo
mov
out
test
out
pop
scas
sbb
and
testl
cli
ljmp
out
repnz
shll
popa
push
pushf
mov
lcall
stos
mov
or
cltd
das
jnp
bound
add
lret
fimull
mov
adc
push
mov
jmp
xchg
js
xchg
sub
out
iret
mov
aaa
add
cmc
out
dec
in
push
jp
add
mov
inc
mov
das
pop
jmp
mov
subb
mov
push
pop
mov
arpl
dec
or
add
xchg
hlt
mov
dec
dec
mov
mov
fbld
in
or
inc
and
insl
test
into
stc
pop
mov
lods
dec
leave
testl
cmp
pop
or
pop
hlt
lcall
or
mov
fwait
sbb
or
sbb
adc
xor
lcall
jno
jae
sbbb
jge
ret
gs
movzbl
test
cmpsl
in
andl
in
add
jp
pop
and
add
bts
testb
bound
inc
sar
jbe
loop
or
sar
pop
adc
jno
add
cmp
xor
push
subl
and
add
sbb
xor
stc
addr16
or
adc
mov
ret
orl
add
and
cmpsb
adc
push
add
adc
push
mov
aaa
enter
std
sub
mov
ja
adc
stc
mov
push
cmpsb
sub
lcall
add
sub
shl
jae
xor
pusha
jnp
sub
fisubrl
mov
es
ror
int3
mov
mov
mov
xor
std
int
mov
push
xor
sub
and
out
dec
mov
cmp
push
hlt
jl
pop
sub
in
jge
ja
or
js
dec
popa
push
fsubl
add
scas
mov
das
out
pop
rol
pop
sbb
repz
ja
fistps
dec
cmp
mov
iret
mov
push
xchg
stos
push
cld
cmc
xchg
fcomps
repz
jmp
imull
cmp
addr16
rcrl
out
test
addr16
cs
in
xchg
sti
inc
dec
hlt
mov
jbe
and
gs
call
jl
mov
insb
sub
or
ret
sub
sbb
lods
out
mov
inc
outsl
addl
push
fbld
insb
sarb
mov
or
mov
in
mov
enter
stc
ja
in
xchg
sarb
fildl
sub
addr16
sbb
out
ljmp
mov
dec
pop
mov
incb
mul
fmuls
loope
add
shl
or
clc
in
loopne
jl
and
inc
add
aad
popf
pop
shl
push
xchg
pop
xstore-rng
cmpsl
xchg
jp
cmpsl
cli
sbb
jge
sub
sbb
int3
ss
shr
addr16
mov
sahf
fwait
pushf
into
jecxz
aas
mov
mov
movsb
divb
fstl
dec
push
fstl
lcall
in
push
insb
ja
jo
sbb
dec
sub
push
jno
push
pusha
shlb
inc
sti
sbb
xchg
add
jo
adc
jns
inc
popa
daa
sub
clc
jnp
inc
in
leave
push
aad
push
lods
inc
pop
xor
paddusb
rorb
mov
push
test
mov
ficoml
je
push
lahf
inc
fidivrs
push
dec
shr
and
adc
loope
movsl
and
nop
rorb
inc
sbb
pop
lcall
loope
icebp
mov
cmpl
push
sub
and
mov
or
out
xchg
sbb
iret
into
test
or
stos
sub
daa
icebp
lock
pop
add
sti
out
mov
lret
xchg
mov
pop
mov
cltd
inc
in
je
push
jp
lahf
fisubl
cmp
iret
mov
push
jle
or
sub
push
and
frstor
lcall
adc
fwait
mov
jae
mov
cmp
add
push
inc
mov
pushf
sub
xchg
xchg
jbe
ss
test
cmpsb
xor
fsubrs
sbbb
mov
rolb
int3
dec
imul
hlt
inc
in
popa
or
lahf
adc
mov
fwait
ret
push
jle
daa
and
add
ss
leave
pop
outsl
pop
shr
stos
dec
xchg
fsubs
daa
and
pop
orb
or
xor
and
jbe
repnz
jecxz
insl
or
enter
or
fcmovnbe
add
jbe
test
and
mov
cmp
or
dec
arpl
push
out
imul
addr16
lods
rclb
mov
cmp
inc
inc
xchg
or
pop
inc
stc
ret
outsb
pop
nop
push
adc
adc
addb
inc
jo
cmp
jo
jp
jo
rcrl
cmp
or
iret
negb
es
cmp
mov
inc
int
mov
jae
cmp
push
add
pop
in
imul
out
mov
int
rorb
dec
jp
sub
cmp
xchg
sbb
nop
insl
pop
mov
shrl
sbb
pop
adc
and
pop
stos
subl
mov
push
nop
sub
sti
pusha
push
loopne
sub
push
xor
adc
in
ret
lcall
mov
inc
test
mov
imul
fs
xchg
and
fildll
mov
jle
cmc
fldenv
jmp
push
loopne
cvtdq2ps
add
enter
jnp
xchg
mov
and
jg
jge
xchg
adc
in
pop
and
test
xchg
test
dec
push
push
jmp
inc
bnd
cli
push
or
jg
into
push
sub
sbbb
sbb
sarb
dec
pop
adc
sub
les
je
hlt
xchg
test
xchg
and
enter
sti
std
jb
xor
pop
lret
cmp
pusha
imul
pop
adc
stc
pop
adc
adc
fldenv
lock
cs
jne
cmp
xor
push
mov
adc
ja
dec
mov
xchg
sahf
and
sbb
mov
sbb
outsl
mov
sbb
xor
inc
mov
dec
lods
imul
jo
mov
sbb
pushf
inc
loop
or
cmp
loope
adc
push
sub
pop
and
les
mov
sub
loop
pop
lods
adc
roll
mov
push
cwtl
inc
jecxz
or
cmpl
shlb
pop
add
mov
icebp
add
sbb
repnz
push
add
in
push
aam
jge
add
out
sub
or
sbb
jns
ret
inc
fcomps
movl
add
popa
add
inc
lds
pop
and
jge
and
or
mov
pop
or
rcrb
inc
jbe
push
mov
sbb
mov
xchg
orb
cmp
push
push
mov
push
cli
in
xor
hlt
fdivr
push
andb
cld
lock
inc
xlat
inc
sub
inc
lahf
pushf
sahf
into
subl
fidivrs
lods
in
in
out
int3
in
dec
jle
push
mov
lods
lret
inc
ljmp
fcmove
push
mov
jle
ror
push
jp
loopne
push
sti
mov
dec
lock
aas
lret
dec
sub
lea
xor
inc
lods
jg
aaa
jl
aas
push
or
or
push
and
mov
jmp
cmpsb
mov
mov
fcomip
dec
jle
rolb
adc
lock
idivl
jbe
sti
fcompl
mov
imul
sbb
fcmovnu
xchg
outsl
dec
add
mov
pop
push
mov
xor
sbb
dec
repz
pop
xchg
aas
fistl
std
in
notl
jecxz
testl
iret
notl
jg
push
loop
testl
aas
std
ret
pop
in
imul
std
mov
mov
sti
mov
fnsave
dec
mov
and
out
sar
mov
push
cmp
jle
call
pop
aas
test
jmp
cmp
and
push
mov
xchg
pop
aas
hlt
fdivr
in
ret
fdivrs
loope
gs
xor
sbb
adc
add
inc
lods
call
shufps
loopne
xchg
testb
inc
fdivs
sub
pop
dec
out
es
std
bnd
daa
jmp
push
sbb
out
hlt
jl
lret
pop
mov
enter
jl,pn
pushf
add
jns
jae
call
ret
jmp
xor
cmp
repz
into
push
dec
fwait
shrl
jns
cltd
xchg
je
loope
lahf
lahf
iret
mov
push
push
fiaddl
addb
cld
jne
je
mov
jle
cmp
and
sub
push
xor
dec
sbb
sbb
stc
imul
add
daa
out
ret
int
out
shlb
mov
cmpsb
ds
shrb
mov
or
mov
add
mov
cltd
cmpl
pop
inc
scas
push
imul
cld
jbe
mov
imulb
or
xor
out
mov
mov
ficoms
jmp
cmp
mov
push
shlb
sarb
clc
sub
out
pop
divl
mov
mov
mov
inc
daa
mov
in
push
inc
sbb
popa
xor
idivl
adc
xor
cmp
sub
roll
mov
add
mov
dec
or
or
enter
scas
and
stos
mov
mov
dec
xchg
dec
cli
scas
mov
jl
add
pop
mov
out
sti
rcrb
jecxz
push
mov
loope
adc
add
adcl
lds
loope
cli
jb
mov
adc
jle
adc
mov
out
sub
lahf
test
fidivs
insl
rcll
cmp
lahf
cmp
push
cld
mov
pusha
jg
psubd
xlat
jae
inc
sarb
inc
decb
fs
scas
leave
push
aad
clc
icebp
xchg
pinsrw
scas
mov
std
sbb
push
sahf
inc
or
mov
and
xor
enter
repnz
pop
mov
pop
pop
cmp
shlb
stc
rcl
jp
bound
out
sub
jecxz
iret
idivl
xor
mov
or
stc
sbb
or
js
jno
lret
rcr
movsl
ficomps
pop
lret
push
fs
loopne
inc
push
cmc
dec
xor
sahf
and
jmp
pusha
gs
mov
xor
imul
cmpl
inc
sub
push
fsubs
loope
lea
stc
pusha
repz
nop
pop
pop
sbb
stc
cwtl
dec
or
jecxz
testl
mov
jbe
and
ficompl
dec
or
mov
ja
cmpsb
clc
xlat
mov
divl
cmp
jae
pop
and
lock
lock
add
lds
std
loope
das
lock
xchg
cmc
ja
cli
xor
ret
mov
iret
enter
aas
std
mov
inc
arpl
das
loop
and
pop
and
sub
addb
add
xchg
fidivl
mov
sbb
das
stc
sbb
mov
pop
in
add
adc
xchg
push
pusha
lock
subb
add
stos
js
test
adc
or
std
adc
push
xor
pop
loope
hlt
push
xor
cmpsb
dec
loope
test
sahf
lahf
jle
sbb
fucom
push
mov
inc
xor
jns
jb
fsubrs
adc
jns
ret
rorl
sbb
mov
pusha
adc
pop
lret
fbld
inc
movsl
aas
xchg
aam
andb
lret
iret
or
adc
outsl
mov
xor
jb
rclb
pop
test
mov
fcomps
jno
xchg
pop
les
sbb
fucomi
fistpll
std
mov
jp
mov
dec
mov
shll
dec
mov
xchg
fildll
inc
xchg
test
mov
out
lret
pop
xor
test
in
lret
inc
xchg
xor
lock
cli
sahf
mov
xchg
popa
aas
je,pn
push
popf
and
and
iret
mov
cmp
repnz
lret
dec
sbb
sbb
adc
pop
sbb
sbb
int3
es
xor
xchg
jge
or
loopne
jmp
sahf
sbb
sub
call
jmp
rorb
clc
xchg
shlb
lret
iret
sub
cmp
lods
inc
add
or
adc
popa
xorl
movsb
xor
inc
pop
cmp
xchg
iret
pop
lods
dec
outsb
subl
addl
cmp
dec
and
xor
popa
adc
fdivp
push
sbb
stos
mov
ret
out
add
js
mov
repz
inc
ja
pop
dec
decl
pop
negb
mov
fdivrl
sbb
sbb
icebp
xchg
dec
cmp
jmp
stos
add
test
imul
adc
test
cli
mov
or
repz
jmp
lods
adc
xchg
xor
dec
in
mov
push
cmp
pop
fsubs
lods
mov
orl
xchg
out
adc
inc
int
movsb
ret
pop
sbb
pop
sbb
push
jl
into
or
xchg
mov
mov
xor
outsb
xchg
stos
mov
leave
lea
sub
xchg
movsl
sbb
inc
xchg
cli
iret
pop
idivb
mov
mov
and
add
xchg
or
xchg
jle
in
loope
mov
push
sub
xchg
pop
mov
pop
dec
jecxz
mov
adc
push
mov
jmp
shrb
mov
xor
cld
or
pop
loop
xor
mov
sub
and
out
push
fimull
sub
in
daa
pop
int3
dec
or
adc
sub
xor
iret
push
dec
dec
in
in
data16
sub
jg
je
lahf
push
jmp
outsl
repnz
adc
movsb
jbe
lock
adc
std
fnstsw
es
sarl
pop
mov
negl
mov
insl
push
adc
push
pop
mov
mov
sarb
xor
leave
xchg
ret
sbb
xor
cmp
mov
push
stos
fucomi
push
xlat
add
cmp
aam
jno
enter
mov
es
dec
cmp
mov
leave
fs
lret
bound
ret
mov
in
mov
sbb
push
xchg
adc
mov
scas
push
ficoml
pop
stos
imul
adc
push
fistpl
insb
xchg
and
cmpsb
cmp
cmpsb
in
inc
mov
push
or
out
mov
pusha
mov
cli
mov
mov
imul
fimuls
sarl
gs
andl
mov
dec
cmp
mov
in
test
inc
xor
mov
push
out
sub
jmp
outsl
loopew
in
adcb
stc
mov
cmpb
shl
imul
and
mov
dec
out
dec
test
dec
cmpsb
xlat
stos
push
mov
es
mov
sbb
stos
rol
push
mov
jno
popa
jg
jecxz
insl
scas
xchg
and
je
bound
enter
push
imul
addl
into
mov
cmp
xchg
mov
mov
stc
or
idivb
and
addr16
or
frstor
popf
fdiv
add
les
js
or
in
pusha
or
arpl
popa
pop
ss
sub
xchg
or
cmpsl
dec
fisttpl
inc
arpl
or
clc
cli
js
gs
rcl
cmc
mov
mov
leave
das
in
or
outsl
mov
call
or
gs
add
xlat
add
xor
mov
or
mov
pop
push
mov
xor
xor
xchg
repnz
or
xor
adc
cmp
les
jno
repz
aaa
fidivs
xchg
or
dec
inc
pop
or
mov
je
stos
test
cmp
sub
mov
pop
jno
sbbb
sub
subl
pop
andb
inc
in
popa
inc
loop
out
and
arpl
sbb
lock
cmp
pop
sub
push
or
fdivrp
in
push
pop
int3
sbb
dec
stc
push
mov
push
and
add
dec
pop
adc
lods
out
and
pop
mov
pop
xchg
cmc
shlb
mov
in
roll
cmpb
sub
pop
sub
cmc
cmp
sub
sbb
and
out
and
mov
pop
jns
or
test
pop
ja
rorb
xor
orl
mov
std
stos
loope
xchg
rorb
and
add
addl
popa
mov
lds
sub
adc
aam
lds
push
xor
pop
les
sbb
xchg
inc
dec
mov
dec
lods
movsl
sub
mov
pop
ret
cmpb
shlb
xchg
and
shrl
add
aaa
dec
std
movsb
mov
add
or
cltd
xor
jb
inc
xchg
test
sahf
and
jne
cmp
sub
js
aaa
gs
leave
jmp
lods
inc
cmp
inc
jg
mov
daa
dec
add
enter
das
aas
xchg
sbb
rcl
out
jns
out
jae
push
neg
cmp
fwait
in
shrl
pop
ficoms
lods
jg
xlat
or
cmpl
mov
les
ficompl
dec
lds
in
adc
xor
ficompl
out
sbb
pop
scas
xor
stos
and
mov
inc
mov
shlb
add
push
mov
lret
sub
jb
lock
imul
les
repnz
loopne
in
and
clc
pop
and
jp
xlat
push
mov
push
dec
clc
jnp
shl
in
and
adc
dec
int
mov
mov
sbb
jae
cmp
and
les
adc
dec
je
pop
and
cli
outsb
enter
les
sub
mov
outsb
dec
inc
cli
dec
nop
and
jle
lock
cmp
add
push
mov
imul
pushf
xchg
add
push
or
inc
decl
xchg
and
gs
cmp
xchg
jae
and
dec
and
cli
add
add
mov
xchg
cmp
xor
cs
cwtl
cmpsl
jecxz
dec
call
les
pop
push
push
ds
aas
push
lock
negl
cmp
loope
test
mov
xor
les
and
cmp
inc
movsb
js
stos
in
in
out
sbb
dec
xchg
sub
ret
mov
push
fsubl
xchg
xchg
add
mov
mov
and
in
dec
sbbb
mov
imul
inc
mov
dec
xchg
arpl
adc
or
inc
cmc
jle
out
and
ljmp
mov
xor
inc
mov
scas
pop
or
int
arpl
inc
mov
dec
sub
cmp
movsb
fsubrp
aam
push
sbb
int3
add
fmull
push
aaa
pop
test
mov
lock
arpl
dec
cmp
inc
inc
and
cmp
add
pop
mov
ds
repz
push
mov
rorb
add
fistps
xchg
lcall
inc
push
rcrb
jo
dec
mov
iret
pushf
insb
jg
jns
mov
adc
push
push
push
add
das
idivb
push
xor
jp
sahf
aaa
sbb
push
xor
pop
pop
clc
int
jecxz
repz
add
mov
dec
xor
xchg
nop
ss
push
std
addr16
sub
inc
mov
lds
outsb
outsb
mov
sub
pop
pop
popl
mov
and
add
ja
cltd
push
mov
movsl
cli
xor
jp
rolb
cmp
int3
rolb
jne
icebp
inc
icebp
pop
lret
repz
jae
cltd
push
add
jno
leave
add
push
xor
sub
xchg
repz
fwait
cmp
mov
xor
adc
iret
mov
orb
adc
sbb
jb
comiss
push
mov
call
loopne
outsl
jp
add
setle
jno
mov
cmpsl
dec
subb
pushf
aad
cltd
sub
jo
or
adc
xchg
push
insb
arpl
push
mov
lods
sub
ret
pop
ja
insb
and
sbb
pop
mov
mov
stos
jb
push
icebp
lret
push
aam
mov
dec
sti
int3
add
js
push
xchg
aas
sub
bound
fdivrl
int3
add
addr16
push
xchg
add
cmp
jae
sti
out
call
int3
in
std
adc
and
sbb
popa
int
sbb
jbe
cmpsl
dec
es
pop
xor
xchg
imul
inc
ret
jo
std
ljmp
xor
outsb
sbb
jbe
mov
inc
jnp
rolb
in
jp
mov
fisubrs
mov
out
mov
rcll
mov
pop
push
out
lahf
xor
xor
imul
adc
lods
and
push
pop
adc
push
inc
das
inc
loope
mov
xor
test
enter
mov
and
push
sub
lods
out
ret
lcall
push
and
push
popa
nop
pop
dec
aad
push
push
mov
imul
mov
dec
stos
sub
jg
xor
fidivl
push
gs
minps
jle
dec
pop
in
cmp
in
aas
cwtl
arpl
sbb
adc
inc
loope
loope
jg
xchg
fdivl
mov
inc
pop
lret
out
mov
mov
int
cmp
pusha
imulb
fiaddl
iret
xor
in
sbb
fstp
and
push
test
lahf
mov
add
push
xchg
cmpsl
test
add
xor
inc
inc
lods
mov
movsl
push
push
ret
xchg
dec
cltd
icebp
fcompl
pop
add
lret
out
cmpsl
sbb
jle
out
pop
mov
movsl
sbb
pop
mov
outsb
xor
aas
push
mov
bnd
push
hlt
pushf
or
loopne
pop
scas
aam
push
dec
push
xchg
xchg
out
test
sub
aas
mov
fsubr
cmp
lock
scas
adc
into
icebp
push
mov
mov
xor
in
lock
add
mov
ss
mov
mov
rcll
stc
mov
pop
inc
dec
enter
in
sbb
out
or
sbb
push
and
xchg
sbb
int3
rcrl
inc
and
stos
and
push
xor
or
insl
popa
inc
cmpsl
cmp
inc
data16
lcall
and
jmp
xchg
clc
lods
jge
xchg
or
fstpl
jg
mov
lds
testl
sub
xchg
mov
ret
aam
sbb
cmpsl
imul
inc
loop
xchg
dec
xlat
xlat
inc
repz
push
sti
fnstenv
insb
ds
in
push
cli
dec
das
mov
stc
or
push
std
pop
adc
push
repz
pushl
pop
fisttps
push
clc
rcrb
push
repnz
push
mov
scas
int3
adc
mov
mov
fisttps
mov
jno
repnz
xchg
pop
xor
or
xor
ret
xor
andb
jbe
test
push
adc
test
out
mov
pop
push
cmpsb
pop
roll
loopne
or
xchg
hlt
adc
shll
inc
lret
sbb
mov
insl
jg
aaa
outsb
fisttpl
sbb
push
mov
adc
adc
cs
jno
add
aad
mov
mov
mov
sub
popa
push
mov
add
dec
mov
sub
inc
repz
add
adc
jl
lret
jl
jne
sbb
xchg
mov
in
in
and
pop
or
mov
mov
and
sub
jle
pop
and
outsb
or
sti
push
mov
mov
inc
iret
push
cltd
cmp
loopne
jne
xor
push
sbb
popa
xchg
or
add
push
pop
outsb
inc
dec
cmp
push
sahf
ja
mov
sub
or
add
add
in
rorl
scas
push
insb
pushf
or
int3
cltd
jmp
sysret
cmp
in
pop
cmp
sub
mov
mov
cmp
xchg
pop
jmp
fidivrl
cmp
in
pop
push
push
scas
inc
mov
push
xchg
xchg
movsl
call
loope
andl
xchg
xor
fdivrl
mov
or
pop
shlb
xor
int3
inc
stos
mov
push
dec
push
sbb
sbb
movsl
jmp
loopne
jo
mov
xchg
aam
sbb
cmpsb
mov
mov
push
mov
pop
ret
sbb
jge
movsl
aas
cmp
cmp
push
cmpsl
or
js
or
cwtl
pop
jae
call
dec
and
jne
movsl
movsb
dec
add
cltd
and
shll
shrb
cli
pop
xor
popa
push
loope
mov
fs
pop
arpl
cmp
jns
push
add
enter
sub
jnp
fsts
icebp
test
sbb
cmp
movsl
gs
ficoml
scas
es
pushf
fistl
mov
jmp
inc
enter
push
cwtl
cmpsl
std
sub
es
mov
jo
xchg
leave
int
leave
jle
adc
cmpsb
push
popf
rcll
in
lcall
mov
out
hlt
je
sub
push
xchg
push
test
dec
aad
xchg
fsts
mov
aas
loopne
mov
dec
notl
addr16
aas
dec
inc
addr16
push
fisttps
mov
mov
mov
cmpsl
in
pop
ljmp
xchg
jge
mov
iret
jmp
sbb
xor
add
fwait
std
out
in
repz
test
lahf
jnp
jge
sbb
sahf
mov
cs
xchg
xchg
andb
leave
sub
scas
mov
cli
and
cmc
loope
mov
dec
loope
fcoms
adc
leave
mov
dec
xchg
hlt
call
pusha
xchg
ljmp
int3
sub
adc
xor
outsb
push
lock
push
inc
fwait
arpl
decl
es
lds
mov
and
jl
mov
fbstp
sub
orl
cwtl
cmp
rclb
pop
dec
out
js
fiaddl
xchg
cmc
test
sub
sub
cmp
cltd
icebp
sub
jmp
int
mov
pop
outsb
rorl
xorl
leave
mov
in
xchg
div
insl
hlt
popa
push
cld
ss
xchg
hlt
cmp
loope
jo
nop
fadd
lcall
outsl
insb
or
shll
cmp
int3
inc
mov
mov
ss
aam
jbe
and
cwtl
add
cmp
ljmp
and
mov
scas
add
cmp
movsl
push
pop
cmp
andl
nop
imul
adc
in
jb
js
negl
pop
rcll
jnp
pop
ficoml
add
ds
shlb
fs
mov
xchg
test
push
xchg
dec
stos
andb
test
daa
dec
push
dec
aad
mov
popf
daa
mov
adc
stos
adc
shrb
sbb
jnp
movsl
push
dec
mov
sub
fs
ret
xchg
aad
cwtl
int
stos
jno
inc
sbb
dec
dec
sub
cvtps2pi
or
movsb
andl
fsubs
and
inc
xchg
pop
loope
inc
outsb
inc
lahf
jb
mov
xchg
mov
clc
mov
mov
pushf
out
ds
pushl
out
jae
pop
xor
sahf
mov
mov
add
cmp
mov
ds
in
push
mov
inc
outsb
sbb
pop
mov
xlat
adc
xchg
js
es
mov
mov
sub
or
out
push
jns
jp
sub
ja
mov
push
mov
jp
jae
cwtl
dec
xorb
xlat
sbb
outsl
push
mov
outsb
mov
xchg
add
add
push
pusha
push
out
mov
mov
lds
outsl
inc
popa
mov
sbb
movsl
test
xchg
dec
daa
pop
loop
cmpsb
sub
push
rsqrtps
cltd
nop
rol
mov
inc
jmp
xor
and
xchg
int3
int3
xor
ficompl
popf
lret
jecxz
insl
aam
push
cmpsb
pop
movsb
or
out
in
adc
mov
xchg
xor
out
xor
sbb
sub
jp
add
mov
mov
iret
sbbb
lret
addl
repz
dec
cmp
mov
mov
mov
mov
xchg
mov
test
dec
les
mov
mov
testb
mov
cwtl
mov
mov
push
sub
lods
enter
andb
or
mov
push
arpl
lret
cmp
cmc
fwait
movsl
stos
out
mov
out
aad
mov
mov
or
mov
out
sti
add
inc
mov
sti
out
mov
jns
ja
out
pop
mov
into
fsubp
mov
ja
icebp
scas
sar
js
jmp
xchg
ja
mov
jmp
pushf
pop
sub
int3
or
pop
jb
in
xchg
cmpsl
xor
inc
out
pmaxub
aaa
pop
in
add
cmp
testl
fs
shll
mov
nop
jle
repnz
inc
mov
lret
cmc
mov
xchg
sub
sbb
jo
mov
jle
bound
xchg
sbb
or
and
fcmovnbe
push
and
dec
sti
sub
xchg
pop
gs
lret
cs
int3
rcrb
les
inc
in
in
pop
lcall
into
push
ss
xchg
xchg
scas
add
test
inc
rorb
jecxz
jb
mov
sbb
pop
fldl
sbb
dec
rol
mov
test
aam
pop
lahf
das
push
add
push
mov
and
pop
xchg
bound
jecxz
mov
cmp
add
sub
add
arpl
xchg
mov
and
lea
ss
dec
adc
jecxz
push
add
pop
sbb
xor
xchg
mov
cmp
sub
mov
lcall
inc
mov
mov
mov
xchg
or
xchg
icebp
jp
in
pop
or
cmpsb
into
divb
clc
xchg
adc
arpl
and
icebp
jb
add
test
jp
outsl
sahf
in
into
mov
nop
js
mov
ret
call
cmpsb
adc
out
lcall
incb
mov
sub
push
stc
cltd
icebp
sbb
xchg
out
pop
pop
pop
loope
xor
test
les
cmp
and
push
inc
adc
push
clc
cmpsb
and
jge
int3
aas
add
push
hlt
jnp
jae
jo
call
aaa
xchg
out
ss
cld
repnz
mov
in
xor
mov
pusha
cwtl
adc
fcoms
dec
pop
ret
fdiv
or
test
push
aaa
pop
in
mov
pop
mov
push
xchg
push
js
clc
loopne
dec
in
lds
xor
inc
jns
dec
and
dec
jg
mov
xor
mov
in
rol
test
inc
fidivs
push
pusha
mov
lret
sti
cmc
lret
mov
jbe
jno
push
adc
rclb
mov
mov
mov
push
int3
movsl
fistpl
fistpl
cltd
push
adc
lods
insl
jecxz
adc
mov
int3
xor
loop
lods
imul
sub
leave
fmul
jecxz
mov
mov
nop
fwait
or
nop
loopne
cld
dec
adc
les
andb
xchg
fcomp
jbe
and
in
mov
sbb
jle
push
fcompl
push
add
sbb
jnp,pn
loop
add
repnz
inc
aaa
push
jmp
out
fsubr
int
xchg
jns
les
dec
cmpb
sbb
stc
xchg
pop
fmull
incb
in
std
adc
xchg
lret
sub
push
xor
or
pop
mov
scas
mov
adc
mov
insb
outsb
mov
mov
insb
inc
stos
decb
xchg
jns
test
in
mov
xchg
popa
das
aam
sub
loopne
out
cs
hlt
jmp
repz
sbb
out
add
scas
out
inc
jmp
faddl
loope
orb
ret
ss
cmp
js
ja
jno
sarl
imul
sub
leave
nop
mov
xorl
inc
lcall
loop
cmp
adc
or
pop
add
jge
jbe
shlb
cmp
jge
shll
loopne
dec
dec
or
sub
add
iret
loopne
add
mov
and
lahf
or
pusha
mov
out
or
add
mov
dec
cmp
test
sbbl
scas
and
in
sub
nop
imul
imul
xlat
xchg
rclb
cmp
inc
pop
mov
aam
dec
adc
lods
subl
fiaddl
inc
es
mov
in
inc
add
mov
or
xor
push
int
in
adc
int
dec
pop
adc
xor
cli
movsb
mov
jl
adc
mov
pop
sub
adc
adc
testl
sbb
mov
in
movsb
mov
in
scas
nop
es
cmp
push
cmp
xchg
movsl
sbb
in
movsl
sub
mov
jb
fistps
jo
lods
push
outsl
lods
cmp
mov
pop
out
test
mov
decl
cmp
movsb
js
mov
cmp
mov
inc
roll
mov
mov
fs
scas
inc
loop
negl
push
test
enter
xchg
add
addr16
xchg
adc
adc
xchg
lock
jl
out
inc
js
and
in
mov
xchg
ja
and
inc
cmc
das
insb
jge
jge
xchg
fcmovnb
aam
sub
lock
pop
imul
push
pop
sub
shll
push
negb
pusha
lods
aas
cmc
arpl
pushf
xor
jns
faddp
dec
lcall
or
mov
test
xchg
shl
jecxz
bound
jmp
push
sbb
loopne
scas
jecxz
inc
lret
repnz
pop
pushl
jle
movsl
mov
jbe
xor
xor
gs
out
ret
sbb
push
push
into
xor
adc
rcll
push
add
jae
xor
jns
lcall
pushf
out
rcll
jb
lcall
adc
cmpsl
adc
xor
loop
mov
cmp
shlb
mov
test
xor
sarb
or
outsb
sbb
test
dec
mov
mov
and
aas
and
icebp
adc
mov
iret
shll
cmpsb
addr16
lds
cmp
and
xor
or
push
and
scas
fwait
xchg
jae
inc
xchg
mov
iret
mov
adc
mov
es
jecxz
ljmp
sbb
mov
jge
insb
or
fisubl
xor
pop
sbb
dec
or
addl
dec
mov
popa
push
and
xchg
sub
cmc
in
fstl
xchg
or
in
fidivrs
dec
xchg
mov
xchg
inc
mull
test
data16
pushf
js
int
ss
pop
and
or
lret
push
add
mov
cmp
xchg
lock
adc
mov
dec
aaa
add
dec
mov
xor
insl
mov
xchg
popf
shr
andb
xor
add
inc
jo,pn
push
mov
test
shrl
loopne
push
mov
add
insl
sbb
test
int3
pusha
pusha
arpl
xor
ss
into
daa
mov
nop
les
adc
jns
xchg
sub
movsl
jge
stos
clc
pusha
adc
das
adc
or
out
testb
push
adc
push
inc
xor
cwtl
js
and
adc
xchg
bound
mov
insl
dec
jl
push
pop
and
mov
xor
add
push
stos
push
sbb
cmp
repnz
cmpsb
aad
das
mov
in
cs
leave
in
xchg
and
js
enter
jno
out
adc
cmp
xor
inc
lods
add
or
dec
xor
js
adc
popa
sahf
or
pop
inc
mov
mov
pop
push
movzbl
pusha
push
push
fimuls
dec
sub
cmpsl
xchg
mov
aad
rol
and
adc
stos
adc
add
movsl
int3
cld
mov
cmp
jge
pop
sbb
leave
outsb
test
clc
fs
xor
push
mov
inc
xchg
iret
ljmp
enter
inc
jge
cmp
test
ficomps
sub
push
sub
sarl
cmpsl
push
add
stos
pop
sub
es
fldcw
insb
sbb
cmp
loop
ds
sbb
add
sar
incl
sahf
out
mov
pop
push
inc
outsb
data16
in
stc
pop
add
inc
sbb
or
rcl
dec
add
or
and
inc
mov
mov
jg
ss
sti
pushf
xorl
loop
ljmp
adc
fwait
ljmp
or
pop
add
push
and
or
decl
in
nop
inc
push
mov
add
dec
sub
sbb
fimuls
mov
mov
pop
pop
mov
lods
nop
jmp
cmc
push
sbb
jne
push
nop
cmp
ror
lea
insl
pushl
shll
insb
add
inc
sub
and
push
arpl
out
sbb
aam
movsb
testb
or
dec
int3
or
adc
ds
pop
fsubr
inc
cmp
ret
pop
cmp
push
pop
ret
pop
mov
sbb
add
xchg
push
jne
lret
loop
cmp
enter
aam
add
cmp
inc
cmp
aam
pop
mov
and
ficomps
add
int
mov
cli
cmpsl
inc
cmpsl
fcompl
jae
ja
sub
mov
cli
add
into
mov
xor
testb
pushf
push
not
jne
adc
imul
les
push
xor
rcrb
ja
push
mov
scas
lods
mov
add
lret
inc
pop
and
shrb
pop
xor
lods
mov
test
movsb
mov
js
out
mov
test
jno
jno
push
out
mov
fistpll
icebp
jecxz
xor
xchg
and
fbld
incl
das
movsl
out
out
mov
jb
imul
push
jp
mov
add
test
and
call
dec
fwait
mov
cmp
jb
pop
repz
lahf
add
cmc
int
cwtl
jle
jae
mov
dec
je
into
xchg
push
outsl
in
out
mov
rorb
xor
add
cs
mov
lds
mov
mov
ja
mov
test
jl
arpl
bound
imul
xor
aas
dec
dec
push
xchg
push
js
mov
in
bsr
fdivs
subb
push
int
add
jmp
xchg
call
jmp
stc
or
sti
scas
pop
mov
jg
call
fwait
jno
pop
outsl
sti
mov
mov
mov
ss
fadd
hlt
outsb
adc
iret
mov
loop
sub
add
je
xor
or
mov
adc
xchg
mov
mov
xchg
scas
jno
push
adc
loopne
push
shl
inc
or
mov
outsl
int3
sub
mov
loope
roll
sahf
imul
int
and
leave
jmp
mov
fisubl
mov
rcl
shl
icebp
mov
in
or
jecxz
adc
fistpll
mov
rcr
jbe
ja
xor
push
lahf
fs
push
iret
sub
cwtl
push
cmp
xchg
imul
or
xor
bts
mov
and
push
push
xchg
xchg
test
pop
daa
mov
cmpsl
mov
push
movsl
mov
rcr
jge
pop
lret
adc
jno
jmp
pop
imul
ret
adc
lods
in
clc
cs
fidivl
insb
mov
sbb
aad
ljmp
jno
xor
aas
std
pusha
inc
sarb
cmc
popa
or
xchg
cld
outsl
roll
jne
repz
xchg
xor
pop
push
lahf
xchg
mov
shlb
adc
jno
fistl
js
jae
inc
jmp
mov
cs
or
push
in
and
ljmp
cs
and
mov
sub
xor
or
lods
ljmp
push
mov
mov
fimuls
push
xchg
or
pop
ret
fnstenv
cmp
stos
dec
bound
movsl
jl
hlt
scas
jmp
adc
xor
addr16
imul
mov
lret
fstpt
daa
lods
clc
movsl
dec
out
iret
mov
popf
lcall
in
or
je
adc
push
cmpsb
scas
hlt
add
dec
cli
inc
add
push
xchg
push
pop
ljmp
in
push
mov
xacquire
mov
xchg
lds
pop
mov
rcr
fstpt
jno
icebp
sub
jecxz
pop
data16
dec
test
push
fildl
test
in
xchg
mov
or
jle
cmp
loop
jmp
arpl
rorl
cli
and
loop
call
call
bound
mov
dec
es
stos
xor
ja
dec
pop
ss
xor
icebp
testl
jbe
movsb
test
jnp
psraw
cmp
adc
clc
repnz
xchg
std
cmp
icebp
sar
repnz
int
mov
out
cmpsl
mov
mov
push
ja
ficomps
mov
and
in
loop
jae
xchg
mov
mov
push
cwtl
jge
popa
in
pop
or
cmc
jne
adc
jb
mov
cwtl
xor
push
popf
inc
jne
rcll
imul
pop
lret
call
loop
xor
call
cmc
mov
pop
push
push
xchg
adc
xchg
sub
push
adc
adcb
sbb
lods
pop
cmpsb
jecxz
dec
mov
out
pop
mov
mov
lea
orb
mul
mov
popa
lods
popa
enter
cwtl
inc
adc
outsl
add
sub
jno
push
push
ss
sub
psubq
aam
testl
dec
pop
mov
jno
cmpsl
pop
cmp
adcb
adc
shl
jmp
mov
lahf
mov
jno
fisubrl
mov
adc
push
call
lock
aaa
lret
out
pushf
out
ret
and
orl
scas
push
mov
mov
mov
xor
pop
int3
lock
mov
ret
or
fsubrp
movsl
rolb
inc
jl
and
pop
adc
cmpb
and
rolb
jmp
rcrl
negb
pop
mov
lods
filds
mov
fucomi
loop
fdivr
mov
shlb
inc
test
int3
out
out
inc
jmp
aaa
mov
std
mov
mov
lcall
pop
sub
mov
test
push
sbb
mov
outsl
inc
mov
or
out
jno
mov
sbbb
inc
je
sarl
ret
push
test
in
sub
bound
jp
add
cmp
imul
imul
pushf
sub
cmp
gs
jge
cltd
inc
es
shlb
lods
repz
sbb
add
movb
xor
sub
test
in
push
insl
inc
xchg
sbb
adc
sub
or
adc
add
jnp
adc
daa
addr16
push
js
sub
addr16
cli
mov
cmpsb
dec
mov
popf
xchg
adc
xchg
test
pushf
jne
loop
xor
add
xorl
outsl
xchg
and
mov
pop
cmp
int3
out
xor
in
pop
shll
cmp
add
adc
popf
pop
sub
dec
cmc
outsb
test
add
xchg
jbe
fdivrl
aas
mov
test
loop
out
das
aaa
popf
cmp
cld
mov
enter
mov
mov
ss
dec
mov
sbb
push
cmp
xor
int
jno
pop
test
pop
mov
cltd
push
ret
and
addr16
and
lock
mov
rcrb
scas
xor
mov
or
and
ds
repnz
stc
aaa
cmp
lds
cld
cld
cmpsb
pop
push
out
xor
push
push
xor
aaa
cli
jnp
mov
pushf
scas
psubsw
lea
pop
mov
fistpll
xorl
in
or
xchg
cmp
test
jl
sub
cltd
pop
pop
mov
mov
push
aad
shlb
sbb
ds
cli
je
push
mov
sbb
lods
xlat
mov
pop
sbb
or
add
cld
inc
clc
sbb
jns
inc
add
or
mov
mov
lret
ds
gs
aam
test
inc
loope
clc
andb
jbe
test
outsb
pop
xor
pop
in
push
jecxz
das
ja
out
or
das
les
fisubs
rcl
xchg
lret
adc
cld
arpl
shufps
cmpsb
add
push
adc
iret
mov
xor
js
outsb
push
cmpsl
pop
sarb
sub
add
adc
jmp
les
js
shl
pop
cli
loope
inc
mov
popa
shlb
ds
jnp
outsb
lds
loopne
ljmp
sub
aam
push
out
lret
dec
out
inc
rclb
je
jp
pusha
cmp
dec
push
dec
test
clc
imull
xor
jb
sbb
jns
jns
loop
dec
mov
in
add
mov
fmull
jo
xchg
in
stos
sti
lods
sub
out
shlb
or
cmp
shrb
xor
cwtl
push
mov
mov
testb
fmull
jg
dec
adc
xchg
wrmsr
bound
dec
dec
push
rorb
test
out
bnd
mov
icebp
cltd
pop
add
pop
push
cmpsb
cmpsl
xlat
or
pop
mov
pop
shlb
cmpl
pop
xor
shr
push
dec
push
xor
ds
inc
mov
arpl
mov
inc
push
adc
in
dec
in
imul
mov
pop
test
test
pop
pop
xor
mov
out
inc
adc
jg
add
mov
inc
xchg
adc
pop
push
push
push
mov
xchg
aas
adc
inc
popa
js
mov
jb
fdivrs
lcall
cmp
test
arpl
pop
pusha
out
insb
xor
in
push
arpl
push
push
cmp
mov
shlb
push
hlt
mov
scas
dec
aad
fwait
jle
ds
adc
xchg
aad
maxps
jl
xchg
push
sbb
mov
outsb
idivl
sbbl
movsb
lds
cmp
mov
ss
out
mov
sbb
hlt
jge
or
mov
push
enter
jne
sub
out
sub
insb
ds
and
movsl
mov
adc
fmuls
adc
and
cmpsb
cmp
hlt
into
xchg
sbb
fstl
inc
xor
es
repnz
outsl
test
adc
sbb
loopne
add
mov
clc
xchg
sti
mov
sti
push
insl
or
movaps
jae
push
imul
insb
mov
sbb
mov
in
xchg
jns
clc
cmp
mov
lods
pop
dec
xchg
sbb
sbb
cwtl
arpl
or
pop
inc
push
inc
pop
xor
repz
ss
fdivl
daa
out
mov
adc
fcompl
in
scas
push
xchg
pusha
xchg
out
and
xor
fdivrp
mov
ficomps
lcall
inc
push
push
add
rorl
or
xchg
adc
pop
jb
sbb
ret
and
cmp
sbb
cmpsl
ljmp
cli
mov
add
push
dec
xchg
mov
aam
in
mov
std
addb
and
add
ficompl
jo
in
fcoms
sbb
and
loop
inc
sahf
push
push
cld
xor
cli
jmp
mov
jmp
adc
fsubl
sbb
adc
iret
fwait
rorb
lret
jl
aas
xchg
pop
or
loopne
neg
addb
sbbl
or
mov
je
js
sbb
pop
or
jne
inc
xchg
cmp
jns
mov
out
es
shrl
push
shrl
ljmp
jo
mov
stos
data16
cld
jge
xor
divb
ljmp
dec
xor
ds
cmpsb
mov
mov
push
push
jmp
repz
add
ret
inc
xlat
bound
repnz
cmp
mov
mov
push
adc
pop
les
push
pop
xor
mov
lcall
mov
shrb
xchg
push
mov
jl
dec
jno
repz
clc
add
imul
out
mov
mov
adc
push
fsubrs
dec
insl
sti
mov
xchg
ja
mov
xor
jle
fwait
outsl
cld
mov
xlat
mov
shl
test
std
rcrl
dec
inc
shll
jae
or
xchg
pop
sub
inc
clc
pop
mov
xor
and
scas
mov
xlat
push
jmp
mov
or
mov
jns
jp
movsl
arpl
dec
xor
sbb
mov
lahf
clc
out
xchg
dec
test
lods
or
cmpsl
and
xchg
cmp
out
push
stc
jns
cmpl
fildll
sub
jae
test
push
add
mov
ljmp
test
cmp
test
lar
fsubs
adc
inc
or
sbb
out
shll
filds
push
mov
aam
jnp
loop
lods
pusha
sub
add
inc
bswap
imul
mov
or
sbbb
mov
mov
jnp
push
xor
decb
push
inc
mov
cs
ret
mov
out
mov
inc
mov
aam
cmp
mov
sahf
cmp
stc
aam
jae
cwtl
jno
enter
out
cmpl
ja
js
mov
mov
sbb
or
fs
int3
mov
cwtl
sub
sbb
mov
mov
clc
icebp
mov
sub
cmpsl
int3
repnz
push
mov
scas
mov
cs
mov
sarb
mov
outsb
aad
xor
xchg
out
sbb
push
test
clc
or
push
stos
arpl
jecxz
cli
repz
mov
add
push
adc
sti
xor
fwait
mov
pop
mov
inc
mov
add
push
mov
lock
sbb
dec
xchg
pmaddwd
fwait
push
xor
jecxz
out
in
ror
mov
jns
mov
cmp
xor
jecxz
cmp
in
inc
sbb
add
add
xor
loopne
jmp
xor
xor
mov
mov
jmp
xor
ss
pop
xchg
sbb
inc
xor
sbb
cmpsl
push
pop
cmpsl
leave
jne
jge
das
call
inc
jno
repnz
or
pushf
mov
inc
xor
adc
mov
ja
outsl
pusha
add
jb
push
scas
and
cmpsb
cmp
je
cmp
or
jecxz
sub
dec
rolb
aad
xchg
mov
pop
cmp
lret
xchg
sub
xchg
adc
je
daa
neg
sub
outsl
push
jns
notb
clc
fs
jmp
loope
fcoms
jecxz
xchg
jb
lods
or
pop
xor
xchg
xchg
push
test
lea
in
test
repz
mov
xchg
shl
xchg
lea
in
ds
pop
in
ja
clc
outsl
loop
loop
ds
adc
or
mov
inc
cmpsl
adc
sbb
fdivrl
movsl
cmpsl
or
insl
pushf
and
cmp
sbb
movsl
or
mov
out
ret
push
lret
iret
xor
int3
cmc
mov
cltd
loop
mov
pop
jb
push
xor
xchg
dec
jo
icebp
aad
hlt
popa
add
xchg
mov
aaa
lds
jg,pn
mov
stos
call
shll
mov
js
jne
mov
test
cmp
rolb
xchg
scas
dec
sub
loope
sub
xchg
scas
mov
jmp
iret
adc
cmp
insl
int3
push
cld
das
or
out
jns
lds
icebp
jnp
jp
xchg
dec
cli
imul
movsl
das
pushf
ss
outsb
sahf
ret
add
adc
cld
js
bound
sbb
jae
sub
pop
fistl
pop
add
push
jne
lret
inc
and
xlat
sbb
pop
stos
clc
push
lods
adc
push
cmp
cmp
cmpsl
add
leave
stc
push
pop
push
insb
and
jge
dec
shrb
push
mov
nop
out
pop
xor
movsb
push
cmp
xor
pusha
push
outsb
dec
adc
adc
shrl
shlb
daa
mov
pop
movsl
jl
insl
jb
dec
jmp
fs
mov
adc
or
popf
lret
lahf
adc
stc
xchg
or
add
stc
mov
pusha
or
push
inc
loope
cld
adc
sub
cmp
jl
scas
inc
call
mov
sub
and
fildll
xchg
xorb
cmpsb
call
scas
pop
cmp
lret
add
loopne
and
sub
jl
ljmp
xor
jmp
std
push
push
xchg
mov
imul
addr16
push
push
and
pop
arpl
lahf
insb
andb
movsl
hlt
scas
mov
push
int
aaa
rorb
jne
fadds
mov
les
sbb
jae
sbb
lahf
ja
aad
clc
sbb
int
jae
fbld
loope
shrl
dec
and
jbe
xchg
test
stos
and
pushl
ret
and
daa
outsb
jae
jb
rcl
cmp
fiadds
out
inc
enter
inc
xor
sub
iret
test
ljmp
mov
sarl
flds
test
aaa
hlt
sbb
xchg
loope
shll
dec
movsl
adc
push
pop
lea
lods
inc
dec
mov
pop
xchg
imul
mov
sbb
and
xchg
clc
adc
subl
stos
imul
cmp
mov
es
into
aam
cld
sarl
dec
dec
aam
mov
ja
sbb
fstps
sti
sbb
add
jge
fld
xorl
in
in
cmp
jne
in
js
jl
std
dec
cmp
int
imul
sub
out
push
adcb
cmp
or
lcall
aam
js
mov
xchg
mov
dec
jo
jb
mov
lock
test
enter
aas
cld
aam
mov
lret
push
dec
adcb
lcall
cwtl
cli
xchg
out
lcall
cmp
add
in
lahf
push
cmpsb
inc
cli
add
dec
imul
shl
mov
xor
mov
mov
les
rclb
loopne
jb
inc
test
inc
faddl
scas
xchg
in
push
imul
adc
dec
cmp
and
cmp
or
paddsb
inc
mov
je
int3
lock
mulb
jmp
sbb
sbb
arpl
inc
ffree
insb
fsubrs
shll
and
cs
mov
and
jmp
aad
movsb
xor
push
adc
push
pop
es
cmc
fstps
negb
mov
dec
jp
push
inc
popf
test
movsl
mov
or
and
add
jg
dec
cmc
pop
cwtl
popa
test
outsl
jmp
xor
push
add
dec
dec
sub
stc
push
popf
mov
xor
mov
in
lds
movsb
mov
aad
cli
mov
sbb
loopne
imul
adc
in
sbb
mov
jg
jmp
pop
and
push
popa
stc
call
jae
inc
lahf
ds
xchg
push
mov
sub
lea
nop
std
adc
cmp
out
popf
test
iret
mov
aas
xorb
bound
mov
shll
jno
aaa
call
jge
sub
sar
add
dec
and
test
lock
aas
add
or
pop
mov
les
pop
adcl
pop
jl
sbb
int3
mov
or
int3
sub
lock
nop
mov
jl
mov
insl
cltd
lock
out
mov
mov
iret
or
sub
or
cmp
sbb
clc
clc
sub
enter
jbe
push
or
mov
mov
dec
mov
dec
mov
xorb
lahf
lcall
scas
adc
jne
mov
jecxz
pop
movsl
lcall
imul
dec
cmp
inc
scas
mov
pop
icebp
lock
dec
leave
loop
arpl
xchg
adc
fiaddl
das
xor
rol
sub
xor
pop
ds
dec
pop
popf
mulb
push
pushf
in
sub
and
jecxz
pop
add
ja
clc
push
lret
and
xchg
test
sbb
jbe
ret
add
fwait
nop
es
popa
mov
jmp
add
test
inc
fwait
lahf
ja,pt
push
cmp
jns
test
mov
les
pop
push
cld
popf
dec
inc
fstpt
cli
mov
xchg
inc
ficoml
adc
cli
inc
mov
idiv
loope
add
out
push
inc
push
mov
je
jecxz
and
pop
cld
pop
lock
pop
xchg
movsb
mov
cmpsl
insl
aas
fcoml
push
mov
cmp
ds
add
push
push
int
cmpsl
hlt
mov
fidivrl
movsb
pop
mov
ret
icebp
and
jg
dec
mov
jg
push
out
rcrb
add
outsb
xchg
lret
mov
sti
ret
js
xchg
call
hlt
xor
movsl
fistl
mov
mov
ss
insl
aas
push
pop
fidivl
jg
or
and
leave
shr
out
test
out
push
push
mov
es
inc
cmp
pop
mov
mov
cmp
jno
mov
dec
inc
movsl
addr16
dec
dec
dec
lea
dec
dec
negl
movsl
cwtl
and
pop
sbb
push
sbb
in
sub
pop
push
pop
ss
and
shr
pandn
shrl
iret
mov
fcomp
mov
and
popf
out
fmul
outsb
stc
lret
push
or
hlt
imul
cmp
mov
lds
push
and
idivb
jg
out
adc
pop
cmpb
or
lcall
fsubl
mov
inc
shlb
gs
into
ds
movsb
and
fs
cli
movsl
movsl
xchg
sub
out
push
push
xchg
mov
loopne
adc
cmp
popa
mov
hlt
mov
daa
cli
inc
cmp
mov
popf
xor
cmp
or
std
imul
cmc
adc
mov
out
xor
xchg
bound
test
lods
out
lret
movsb
sub
jge
mov
insb
loop
mov
adc
aaa
sahf
iret
shll
cmp
sbb
mov
lds
dec
rclb
jmp
fdivrs
orl
fmul
push
imul
mov
in
jmp
sub
mov
jg
in
xchg
movsb
shrl
xchg
pop
cli
ficoms
jns
stc
cli
pusha
nop
nop
lahf
adc
hlt
inc
jecxz
divl
ret
in
mov
pop
lock
int3
xor
cltd
insl
pushf
and
movsb
stc
cli
jno
sub
sbb
lock
sahf
pop
mov
faddl
fildll
stc
push
daa
lods
xchg
mov
sti
shrd
je
iret
pushl
xor
mov
cs
ja
movsl
pop
cmp
sbb
repz
xchg
xor
mov
std
sar
testl
out
test
inc
test
clc
xchg
lds
mov
std
jmp
sti
lods
aas
mov
fnstsw
fcomps
fildll
testl
sti
testb
aas
mov
divl
cld
jecxz
repz
out
outsb
jg
cmp
pop
fstpl
out
pmaxsw
jmp
jle
std
out
out
lds
mov
mul
lahf
jmp
sar
repnz
leave
aas
mov
sti
std
divl
jg
cld
ret
sti
stos
aas
mov
std
jmp
out
pusha
jg
adc
cld
idiv
iret
out
fs
in
jg
decl
clc
xchg
addr16
out
cmc
repz
ljmp
stos
pop
mov
dec
clc
mov
lds
xchg
and
iret
jae
aas
mov
sti
popf
pop
sub
and
mov
cs
arpl
cmp
lahf
cwtl
cmc
and
rcrl
cld
fmuls
repz
addl
popf
and
xor
in
push
cmp
gs
shll
aam
push
not
cltd
dec
scas
add
or
mov
mov
insb
xor
pop
rolb
subl
xor
sbbb
or
jns
inc
add
sub
jnp
popa
andl
cmpsl
adcb
int
add
pop
xor
pop
pushf
or
insl
test
popf
cli
pop
add
push
xlat
pop
cmpsb
mov
xlat
aad
xor
lret
call
or
stos
fwait
inc
lods
jb
push
sub
mov
inc
imul
xchg
pop
cmpsl
push
mov
jnp
xlat
in
push
mov
xlat
mov
movsl
add
cli
sub
adc
aaa
in
push
mov
xlat
pusha
inc
cli
mov
in
stos
pop
add
mov
bound
aad
adc
cli
mov
and
stos
pop
cmpsl
and
pop
clc
and
aad
push
inc
cli
mov
add
test
stos
pop
test
xor
aad
test
std
pop
clc
push
aas
aad
aad
lods
js
aas
aad
aad
lods
jle
cmc
imul
jg
pop
xor
cmc
imul
call
sbb
cmc
imul
jg
pop
adc
mov
repnz
loop
scas
fcoms
lods
jle
cmc
imul
call
sub
call
fs
cli
mov
test
pop
mov
std
pop
clc
sarb
aad
sbb
cli
mov
enter
cmp
call
push
or
push
mov
dec
stc
add
aad
xchg
and
pop
repnz
stos
pop
and
cli
mov
bound
aad
fistl
jg
pop
dec
cmc
imul
lods
jns
aas
aad
enter
mov
std
pop
in
or
push
mov
in
call
dec
cmc
lret
and
pop
stc
inc
aas
aad
cs
cli
mov
or
push
mov
mull
stos
pop
mov
xchg
and
pop
repz
stos
pop
push
xchg
lods
jns
aas
aad
xchg
and
pop
rep
jg
pop
xor
mov
mov
fstl
pop
ljmp
fstps
ljmp
jmp
adc
lods
jns
aas
aad
lahf
and
pop
cli
add
aad
ds
cli
mov
adc
lods
jp
aas
aad
ficoms
lods
jbe
jg
pop
test
dec
call
jp
cli
mov
mov
push
mov
rcll
aas
aam
cmp
jp
int
or
push
sbb
addr16
inc
xor
ret
or
test
in
sti
into
sub
cmpsb
mov
insl
outsb
imul
dec
xor
xchg
cmp
test
xor
call
push
push
sarl
outsb
cmp
idivb
cli
data16
dec
dec
es
imul
push
outsl
dec
mov
test
jmp
pop
fpatan
cli
push
aam
inc
stos
xchg
aam
rcr
xchg
xchg
xchg
cltd
ret
push
push
pop
dec
xor
ror
fadds
ss
pop
jp
daa
push
mov
dec
daa
inc
add
or
pushf
mov
cmpsl
sub
rorb
push
mov
movsb
cmc
adc
jge
push
addb
sub
dec
xlat
subl
xchg
enter
sbb
outsb
movb
and
mov
push
xchg
jmp
int
jae
mov
shrd
dec
sub
and
jmp
and
cwtl
inc
cmp
loopne
fs
mov
mov
lea
xlat
push
ja
pushf
cmpsl
cmp
insl
rorl
fxch
sahf
int3
jb
xchg
jmp
add
pop
add
mov
in
sub
movsl
and
ljmp
push
jecxz
xchg
movsb
mov
inc
xor
cmpsl
push
fs
push
aas
mov
xor
lods
sub
cwtl
sub
sbb
aas
mov
jmp
mov
cmp
cmpsl
cmp
xor
sbb
scas
mov
lock
out
es
push
add
jge
gs
push
fwait
movsb
cmp
pop
jns
dec
xor
xchg
inc
fstpt
sub
stos
insl
and
cmp
je
add
imul
in
mov
dec
pop
hlt
push
lcall
ja
cltd
cmp
or
hlt
mov
rorl
test
data16
xchg
pop
idivb
ret
dec
jmp
and
cmpsb
std
pushf
jns
and
arpl
jp
push
repnz
mov
or
adc
orb
cmp
iret
dec
xor
cwtl
dec
mov
clc
repz
in
pop
mov
add
cltd
into
out
loope
out
inc
out
insb
sti
mov
xor
mov
mov
cli
and
jecxz
int
dec
pop
in
fmuls
mov
into
fstpl
movsl
into
out
pop
mov
xchg
imul
int3
out
mov
lahf
sbb
cmp
mul
mov
xor
fs
mov
pusha
mov
pop
mov
jp
movsb
xor
hlt
dec
aaa
in
jo
inc
lcall
push
rcl
stos
adc
aam
push
cli
addr16
stos
repnz
jns
lcall
add
fisttps
jmp
dec
cmp
lret
js
outsb
data16
nop
push
xor
adc
mov
fstpt
cmp
sbb
iret
lcall
lods
in
out
daa
sub
jns
inc
bnd
in
mov
leave
push
sub
sahf
and
push
ds
mov
mov
mov
push
add
pop
pop
inc
inc
jno
shrb
in
or
int3
sbb
adcl
jl
jbe
sbb
out
icebp
pop
xchg
fs
xchg
repz
lock
and
xlat
cmpsl
imul
push
and
test
add
sbb
adc
or
cld
rolb
mov
jecxz
push
loop
xor
jecxz
insl
shl
mov
cmp
sub
data16
repz
into
out
jne
cmp
and
aaa
testb
sbb
icebp
mov
call
jmp
add
mov
adc
iret
xchg
call
adc
lds
inc
lcall
cmpsl
dec
addr16
movsl
sbb
movsb
xor
jns
repz
sub
adc
mov
cwtl
push
inc
out
daa
mov
mov
add
rorl
push
lds
xor
js
sti
cs
lret
inc
pop
out
adc
out
mov
leave
sbbl
js
arpl
out
iret
xor
and
ja
fimull
hlt
out
insb
pop
cmpsb
ret
push
das
sbb
cmpsl
or
clc
adc
rcr
mov
mov
cmp
sub
repnz
cwtl
xor
sbb
cmc
iret
and
fldln2
sbb
movsl
les
add
out
fcomip
loope
andl
dec
stc
and
jns
cmp
and
mov
mov
xchg
sub
stc
lods
mov
out
push
jl
shlb
aam
test
nop
mov
imul
call
or
in
repz
or
mov
pop
sbb
fwait
pusha
push
xchg
mov
push
inc
int
xchg
movsl
mov
test
push
movsb
mov
dec
fisttpll
negl
adc
int3
xchg
sbb
sti
push
pop
in
mov
pop
mov
mov
or
fnstcw
xchg
adc
lret
or
outsl
test
mov
mov
push
adc
std
sbb
push
popa
int3
repnz
shll
cmp
test
ljmp
xchg
scas
into
mov
cmp
movsl
pop
mov
out
mov
std
fisubs
sti
xor
andl
insb
jge
or
inc
cwtl
and
pop
jo
cs
cmpb
lods
icebp
sbb
push
cmp
pop
pop
pusha
adc
test
mov
enter
xchg
and
push
xchg
mov
addr16
cmpsl
mov
inc
test
and
mov
mov
sar
out
test
test
int3
pop
and
adc
mov
outsl
cmc
xchg
orl
dec
xor
mov
repz
push
add
scas
int
ret
insb
mov
scas
inc
lret
mov
or
insb
mov
push
arpl
imul
sbb
add
adc
mov
in
mov
push
or
in
jge
push
fildll
cmp
jb
ja
fsubrl
shrb
pop
sahf
jns
push
mov
movsb
arpl
test
inc
mov
push
fnsave
sbb
lods
mov
dec
dec
fimuls
push
call
test
xchg
mov
repz
lahf
sbb
pop
xor
iret
mov
adc
cmc
out
insl
push
push
pop
pop
fmull
sub
inc
or
sub
push
or
movsb
mov
cmp
pop
pop
mov
movsb
xchg
mov
mov
jae
xor
dec
mov
in
lret
dec
and
bound
xor
pop
push
jmp
test
es
out
out
jge
out
jge
or
out
mov
addr16
repz
out
idivl
jecxz
icebp
sti
cli
xchg
jnp
lods
outsb
inc
fistpl
lret
cmp
adc
lret
dec
cmpsb
into
adc
pop
outsb
ret
dec
pushl
xorb
xchg
jg
xchg
inc
dec
icebp
jle
dec
stc
mov
dec
ret
xchg
mov
xchg
sbb
pop
cmovb
xchg
fs
ds
sub
test
inc
pop
data16
push
jge
xchg
push
or
out
jg
cli
pop
sti
pop
fcoml
inc
inc
gs
fnsave
mov
mov
jb
sbb
push
hlt
frstor
inc
and
xor
bound
mov
in
icebp
xchg
sbb
addl
shll
dec
cmp
popf
ror
adc
mov
inc
xlat
fdivrl
fdiv
mov
sahf
xor
sub
mov
es
push
mov
jbe
ljmp
xchg
sbb
fucomi
pop
add
insb
sbb
rcll
ds
dec
inc
add
repnz
rolb
pop
mov
xchg
or
xchg
pop
loop
mov
and
mov
insl
or
loope
jle
xchg
or
xchg
fwait
lock
popf
add
fmuls
outsl
mov
dec
xor
push
ret
mov
pop
maskmovq
mull
data16
mov
cwtl
fbstp
xchg
cmp
nop
cmp
cli
mov
fs
lret
popa
scas
pop
imul
inc
jecxz
shl
stos
push
in
ljmp
arpl
jg
jb
test
test
or
ds
mov
rcll
adc
mov
mov
ret
pushf
dec
pushf
or
sbb
mov
cmp
or
mov
test
jp
and
mov
sahf
jbe
and
mov
mov
dec
mov
mov
push
ss
fwait
movl
fnstsw
movsl
mov
ffreep
jb
cltd
cld
dec
sahf
inc
ret
out
or
in
dec
jbe
jmp
push
out
sarb
test
out
mov
decb
das
fimuls
testb
xchg
icebp
fsubrs
pop
and
xor
ds
je
cmpsb
add
lret
lock
xchg
lods
fsubp
das
js
xor
imul
xchg
es
dec
mov
mov
daa
and
cmp
lret
mov
insl
fwait
or
ljmp
pusha
leave
and
divb
repnz
xchg
popa
out
addb
adc
out
aas
or
es
pinsrw
in
movsb
mull
test
jae
cmp
adc
sub
pop
sub
xor
into
mov
jmp
les
xor
sbb
and
sahf
mov
sbb
jns
cmp
mov
cmp
fistl
inc
sub
and
push
sarl
and
test
add
inc
inc
jbe
daa
sub
sub
adc
xor
out
sbb
sub
adc
sbb
inc
jns
bound
push
in
daa
mov
xchg
jb
mov
lcall
push
mov
je
gs
jg
or
sub
aam
sbb
sbb
lods
enter
pop
add
lcall
pop
mov
scas
pop
ds
jnp
mov
sbb
in
sbb
repnz
mov
ja
mov
and
loop
lock
mov
pop
mov
mov
stos
ds
insb
cld
out
je
jecxz
or
scas
in
dec
cmpsl
std
mov
test
mov
lret
mov
or
outsb
jne
mov
fstl
mov
mov
mov
roll
pop
or
pop
dec
loopne
lea
cmp
dec
jbe
mov
cwtl
js
mov
arpl
in
adc
xchg
mov
sbb
pop
scas
or
mov
inc
daa
insb
adc
in
outsb
adc
mov
or
popa
test
outsl
fbld
inc
repz
add
xor
cmc
jle
aad
xchg
jg
imul
inc
out
fldl
sahf
lahf
icebp
mov
mov
lahf
shl
in
aas
jl
cmp
nop
iret
es
in
fmull
xlat
dec
push
inc
ds
inc
sub
and
cmp
jo
rcr
mov
test
mov
mov
dec
icebp
push
mov
push
sahf
pop
lea
jae
inc
dec
cli
xchg
add
sahf
pop
mov
xor
test
xor
inc
hlt
xchg
xor
daa
xor
icebp
nop
fisttpll
sbb
dec
jp
xchg
jnp
push
shr
jp
and
jb
mov
inc
loopne
outsb
inc
push
out
aas
pop
into
ret
mov
testl
mov
jb
icebp
mov
mov
push
std
pop
aam
xor
js
add
into
int
adc
jo
hlt
push
lock
sub
push
dec
std
in
pop
inc
insl
or
adc
fdivrs
add
mov
fwait
mov
xchg
loop
icebp
pop
xor
jne
ja
adc
mov
push
mov
sbb
jno
mov
std
sub
ret
and
mov
sub
pop
pushf
loopne
outsb
roll
sub
lds
dec
fwait
jecxz
sub
sarb
stc
cmp
mov
in
repz
lahf
pop
into
pop
lret
ja
jns
repz
jecxz
mov
jno
pushf
mov
xchg
in
sbb
dec
xchg
out
pop
stc
enter
iret
scas
ss
inc
jecxz
into
scas
push
out
mov
cmp
gs
jg,pt
test
inc
insl
mov
and
int
cmp
nop
int3
mov
sbb
push
jbe
popf
sbb
sbb
sbb
cltd
popa
arpl
sub
jbe,pn
mov
cmp
rclb
jp
sbb
std
je
daa
cld
orl
push
xchg
inc
shll
cmp
clc
lods
in
sub
jnp
or
push
cmp
mov
cmp
dec
lea
out
std
jg
es
jo
ljmp
sub
iret
in
test
sbb
fdivrp
loopne
loope
sbb
mov
int
jge
xchg
push
stos
adc
sub
push
pop
clc
popa
outsl
sbb
xor
cmp
iret
and
andl
cwtl
lahf
fildll
cmpsb
adc
test
mov
outsl
sbb
jmp
cmp
daa
cmp
fidivs
aaa
cli
loop
repz
cld
dec
add
add
clc
adc
iret
cld
adc
testb
and
mov
jge
jp
sti
push
xor
mov
adc
jp
and
ja
xchg
shlb
bound
sbb
mov
mov
ret
ljmp
jo
xchg
notb
icebp
out
ret
adc
dec
out
mov
in
push
mov
test
cmp
push
sahf
scas
shr
lods
fwait
jns
ficompl
sbb
fs
bound
push
sbb
sbb
inc
mov
add
mov
lcall
cmp
mov
sbb
outsl
push
in
adc
mov
xchg
cmpsl
xchg
dec
xchg
sub
cmp
jae
sub
int3
inc
dec
aaa
xchg
sub
out
cmpps
add
xchg
inc
and
sbb
js
cmpsb
in
mov
pop
out
popa
insl
in
lret
adc
repnz
lret
dec
xchg
dec
scas
mov
lcall
repnz
fnop
push
data16
add
sub
and
bound
inc
das
mov
std
xorl
adc
inc
sbb
pushf
jno
out
das
js
loop
dec
rdtsc
mov
xchg
dec
scas
popf
es
les
mov
fmuls
adc
inc
and
xor
dec
ljmp
push
mov
mov
cmp
mov
insl
jg
adc
mov
add
in
mov
ficoms
test
arpl
cmc
rol
test
add
stc
pop
inc
add
push
mov
push
fisttpl
popf
inc
sti
sti
cmp
push
sbb
jns
xor
lahf
les
xchg
pop
lcall
stos
cmp
scas
divl
sbb
mov
fldenv
jle
mov
sbbb
sbb
iret
cmpsb
mov
sahf
imul
in
psllq
inc
ja
std
mov
ret
int
idivl
xchg
lret
cmp
pop
nop
sub
loopne
stos
push
addr16
inc
aas
inc
popf
jl
cmp
dec
jg
fdivrl
lds
cltd
fxch
mulb
imul
push
xlat
std
out
stc
xor
lock
out
fsubl
push
sbbl
loopne
mov
mov
fsub
mov
shrl
pop
push
dec
cmovne
mov
adc
lahf
les
jmp
inc
testl
fsub
cltd
cmp
pusha
repnz
into
sahf
dec
mov
mov
movsl
imul
mov
in
shl
roll
pop
mov
jbe
sub
or
shlb
and
xchg
jo
ljmp
in
adc
jg
das
xor
and
fistpll
pop
scas
mov
push
jle
nop
ljmp
leave
imull
push
adc
es
stos
inc
cmpsl
mov
sbb
js
lret
imull
push
les
mov
out
in
xchg
inc
cltd
dec
fucom
test
push
jne
or
stc
and
push
xor
scas
lock
leave
fdivs
add
shll
mov
cmp
scas
xor
xchg
mov
lret
add
add
sub
inc
es
lahf
sbb
dec
fs
adc
decb
sub
push
mov
fs
xor
mov
lock
hlt
xchg
daa
arpl
mov
js
aas
sub
jg
and
jl,pn
adc
aaa
mov
xchg
lahf
push
iret
aam
loopne
iret
mov
inc
out
adc
xchg
pop
fadds
adc
pop
fidivrs
jecxz
js
out
fldl
out
mov
out
mov
lock
fists
scas
adc
cmc
ret
in
jo
lea
or
scas
pop
fstl
sti
pop
incb
dec
or
xchg
sub
inc
push
sarl
outsl
and
adc
xor
mov
roll
pusha
je
shl
dec
fistps
cmp
pusha
push
adc
adc
sbb
lds
mov
shl
add
mov
pushf
cmp
cmc
xchg
adcl
call
int3
mov
fs
dec
adc
mov
and
test
inc
mov
pusha
rolw
ror
add
and
sub
les
enter
sbb
outsb
jp
addl
adc
pusha
pop
and
xchg
pop
adc
add
imul
jp
rcrb
jb
and
mov
push
pop
out
add
or
adcl
inc
add
inc
jmp
pop
mov
mov
cmp
mov
inc
into
push
mov
repz
push
dec
ficoml
aas
jg
scas
jecxz
mov
inc
ficoms
adc
jmp
pop
and
hlt
lret
or
add
repnz
mov
cmpsb
pushf
lods
ret
jmp
mov
dec
iret
fnstsw
sbb
ljmp
mov
scas
jns
mov
or
repnz
dec
add
xchg
loop
sbb
out
sahf
aas
insb
pop
push
pop
aas
push
aas
cmpsl
mov
fiadds
jno
adc
es
test
add
mov
rorb
cs
inc
test
pop
jge
sub
jae
xor
scas
pop
test
sti
movsl
inc
leave
jecxz
and
pop
aas
jp
xor
xchg
pop
loope
cmp
mov
ljmp
cmp
fimull
das
jne
inc
je
pop
or
into
sbb
jge
jo
mov
rorb
and
repz
and
cmp
sub
mov
repz
and
bound
addr16
adc
adc
cmp
insl
mov
rcll
andl
lock
leave
sarl
testb
push
adc
or
jg
bound
jl
mov
test
sub
mov
in
mov
bound
enter
out
inc
mov
add
adc
or
sbb
mov
cwtl
push
loopne
lods
shrb
loope
pop
xchg
mov
in
inc
pop
aam
negl
jno
mov
push
or
ds
stc
xor
nop
scas
adc
aaa
fldenv
xor
xor
cmp
push
mov
loop
xor
xchg
imul
jnp
mov
sbb
test
in
cwtl
push
mov
bound
call
sbb
push
adc
or
repnz
rolb
aas
sub
xor
fwait
testb
cltd
add
stos
insl
stos
or
mov
push
cmc
test
lods
sub
ret
adc
mov
arpl
scas
ret
fildll
push
stos
je
jl
cmp
mov
and
test
outsb
test
fistps
push
inc
inc
inc
jns
xchg
sub
lods
mov
shrl
jnp
rcr
sub
sbb
cld
clc
orb
push
or
aaa
jno
aas
lret
fs
pop
xchg
add
stos
sarb
incb
scas
mov
xor
repnz
daa
cmp
pop
mov
dec
out
mov
mov
mov
cmp
cmpsl
std
fidivl
addl
sti
sub
and
ja
pop
insb
stc
jnp
xchg
rcrb
mov
out
mov
je
mov
jle
fidivrl
add
mov
daa
mov
sub
xchg
adcb
sbb
enter
mov
rcr
repz
jb
iret
je
and
mov
mov
loopne
ss
clc
push
outsb
inc
push
mov
in
xchg
xchg
pop
insb
mov
out
jge
xor
call
or
sti
out
jno
mov
fmul
mov
dec
loopne
jnp
push
dec
sar
cmp
rclb
jae
dec
cmp
fdivl
loopne
in
adc
sub
sub
sub
and
jge
lea
mov
jb
adc
sub
or
dec
sub
movsb
int
pop
sbb
cli
sbb
sbb
loopne
sbb
and
or
loope
pop
sbb
aam
jns
int3
jmp
adcl
mov
imul
pop
or
fdivr
push
insl
mov
mov
jp
bound
jl
sahf
mov
movsb
cmp
mov
scas
cmp
fs
xchg
bnd
cltd
imul
push
imul
mov
pop
bound
xor
sub
adc
out
imul
jne
bound
mov
xchg
xorl
mov
nop
sub
or
cld
xchg
das
lods
mov
scas
mov
mov
jmp
fs
adc
sbbb
movsb
sbb
mov
jg
mov
pop
movsb
pushf
pusha
pmulhuw
lds
or
cs
lret
in
js
mov
or
push
pop
adc
bswap
fistl
popf
jns
jmp
push
adc
jg
jmp
into
mov
adc
xchg
loope
adc
push
cmpsl
fstpl
sub
jp
stc
fdiv
in
outsb
or
dec
jle
jns
inc
jns
fiadds
cmp
lret
fdivrl
cs
jp
sbb
mov
jp
cltd
ljmp
and
imul
push
adc
or
and
outsl
je
cmp
cs
repz
pusha
and
sbb
xchg
rclb
iret
fcomps
add
adc
dec
and
mov
shrb
call
imul
movsl
cmpsb
pusha
cmp
out
push
daa
mov
jecxz
xchg
cmpl
mov
repnz
jnp
rolb
xchg
sti
add
dec
sub
xor
add
repz
mov
daa
roll
and
or
dec
out
nop
pop
jle
mov
ds
adc
or
call
sahf
shrb
mov
fidivs
xchg
repz
mov
xor
nop
adc
pop
fnstsw
test
mov
stos
dec
mov
jecxz
cwtl
call
pop
pop
xchg
gs
sahf
inc
sbb
shr
outsb
push
stos
insl
je
popf
fsubs
pop
pop
mov
mov
pop
outsb
stc
jne
loopne
xchg
test
lret
repnz
mov
stos
outsb
jp
cmp
jp
icebp
scas
aam
and
jb
loope
das
ds
pop
cmpsl
movsl
mov
xlat
cwtl
ja
cld
les
dec
cmp
mov
cmc
notb
adc
push
daa
cmp
rcl
es
rcrl
int
mov
xor
std
jnp
or
jge
insb
jo
icebp
jecxz
mov
pop
test
mov
in
dec
jnp
mov
je
faddp
popf
rclb
ss
cs
inc
sbb
mov
pushf
push
into
movsb
inc
push
cmp
lea
inc
push
iret
sbbb
pushf
xchg
inc
aaa
ds
or
xchg
enter
insb
repz
push
push
jnp
jle
dec
cmp
mov
jmp
test
mov
mov
test
xchg
dec
or
and
and
and
test
fmuls
push
ret
sbb
daa
sbb
arpl
call
test
movaps
sbb
push
mov
sahf
xor
xchg
sbb
sbb
dec
push
dec
jbe
arpl
out
jp
es
or
divl
jno
imul
jle
bound
cwtl
std
loop
sarl
loop
shl
push
shl
xor
test
mov
scas
popa
inc
imul
lcall
jle
cmp
xor
std
push
into
fdivl
mov
hlt
popa
in
xor
inc
in
dec
and
fadds
das
rsqrtps
fidivs
or
push
xlat
xchg
stos
inc
push
std
xor
and
or
in
and
loopne
mov
push
pxor
out
xorb
sub
stc
pop
shl
stos
loope
out
or
cltd
loope
jb
in
loopne
fsubl
adc
push
mull
mov
out
push
shrb
pop
aas
mov
push
mov
mov
daa
mov
push
add
test
xor
ljmp
xor
xchg
pcmpgtw
cmc
fsub
pop
fsubrp
xchg
xlat
push
jns
mov
cli
sbb
lods
leave
scas
push
addr16
out
and
daa
xchg
aaa
cmpsl
pop
adc
std
cmc
mov
loope
xor
test
cltd
sahf
int
sbb
sar
incb
cld
cltd
fists
and
int3
dec
lods
push
es
fdivs
and
dec
mov
mov
xchg
sbb
fcmove
lcall
xchg
push
aam
adc
in
or
mov
pop
or
movsl
xor
push
punpcklbw
inc
cwtl
cltd
and
stos
insl
and
lods
fwait
in
cmpsl
xchg
subb
push
out
out
sub
fwait
adc
stos
sbb
pop
stos
add
push
adc
xchg
mov
lds
jle
lds
dec
enter
mov
jnp
ljmp
push
xchg
jge
fcompl
je
jge
fwait
push
stos
insb
loopne
fimuls
out
lret
jo
sbb
jnp
jo
sbb
xchg
out
dec
lock
rcl
clc
jecxz
loopne
inc
sub
cmpsb
mov
pop
cmp
push
cs
xchg
jp
or
jo
in
xchg
dec
sub
dec
sbb
movsl
frstor
in
pushf
stos
aam
dec
insl
imul
jg
jl
je
or
insl
mov
or
cld
mov
fs
lds
cwtl
adc
ret
cmp
inc
les
aas
or
shlb
inc
xchg
add
add
xchg
push
div
iret
fwait
jge
stos
daa
jg
push
aas
xchg
jge
cmp
cld
mov
pop
mov
jmp
negl
mov
push
imul
cli
adcl
mov
addr16
je
call
mov
pop
mov
mov
cmp
lret
jae
mov
push
cli
js
fdivrl
mov
inc
incb
cmp
mov
jno
jmp
in
in
jecxz
sub
in
jecxz
xchg
ret
cltd
add
call
or
mov
popa
cs
adc
stos
mov
lea
mov
jp
push
shrb
out
imul
out
test
mov
inc
movsb
hlt
mov
sbb
xor
dec
mov
mov
xor
mov
in
push
push
or
or
jg
jmp
mov
test
icebp
xchg
std
test
jecxz
mov
sti
sbb
mov
mov
lds
mov
andb
mov
lcall
sbb
ret
sub
in
push
test
push
je
in
push
leave
ret
and
cs
leave
ret
sbb
xchg
out
fldcw
mov
daa
insl
popa
repnz
sbb
cmp
jno
pop
push
jecxz
sbb
clc
add
push
addl
sub
mov
add
lahf
mov
xchg
or
jmp
cmpsl
insl
pushf
dec
ss
mov
mov
mov
movsb
loop
cmc
sub
xchg
cmpsb
incb
xor
addb
out
sub
xchg
mov
stos
or
dec
xchg
push
fwait
cwtl
sahf
mov
shl
sbb
push
mov
sarl
aad
jo
cmp
adc
mov
scas
or
or
jns
into
outsl
lods
sbb
mov
xchg
cmp
cmpsl
xor
dec
loopne
in
aam
arpl
sub
daa
out
xchg
out
aad
out
stos
dec
jmp
nop
lret
cmp
lock
std
pushf
test
popf
jmp
fidivrs
xchg
mov
lods
imul
mov
incb
sti
push
arpl
data16
cmp
popa
push
psllw
sub
pop
fcompl
sub
or
test
cmpsb
inc
add
test
cmc
call
mov
adc
mov
pop
xor
out
sub
pop
enter
mov
js
aad
sbbl
stos
ja
leave
arpl
mov
jo
into
test
xchg
lds
or
addr16
inc
sbb
jmp
push
and
je
push
mov
popa
not
mov
mov
fcom
gs
or
in
and
sbb
push
mov
mov
js
lret
lret
sub
add
mov
int3
ds
dec
sub
rclb
push
rorl
mov
adc
lret
sub
popf
lock
bswap
std
mov
ret
ja
test
mov
push
xchg
into
popf
push
xor
mov
movsb
xor
xchg
pushl
jge
pop
push
sub
lods
hlt
test
arpl
or
dec
add
les
mov
jno
int
scas
adc
sbb
sub
les
jbe
test
mov
sar
xchg
aad
int
sarb
mov
xchg
mov
int3
hlt
pop
out
xchg
scas
or
out
jns
stos
push
lock
pop
mov
add
les
xchg
out
sub
in
pop
dec
filds
and
lahf
dec
mov
inc
cmpsl
or
hlt
mov
loop
sahf
pop
mov
cli
xchg
loopne
js
add
inc
cmp
xor
or
pop
jne
sub
inc
mov
cmp
test
ja
jb
xchg
push
mov
out
xchg
nop
dec
mov
dec
loop
adc
ret
xor
cmp
pushl
sub
mov
jb
add
pushf
xchg
and
add
mov
jecxz
ret
aas
or
ret
aas
ja
sub
jne
arpl
rclb
in
mov
call
lcall
add
insl
and
mov
jmp
iret
fs
jl
scas
notb
cwtl
aaa
das
push
icebp
push
ret
inc
bound
out
movsl
sub
pop
loopne
add
dec
cwtl
push
add
push
lret
lea
and
push
adc
jo
xchg
shr
stos
cltd
enter
loope
pushf
xor
cmpsl
mov
mov
mov
push
add
mov
pop
repnz
jecxz
sub
testb
add
sub
jb
push
dec
lret
cmp
push
adc
xchg
cmp
rcll
loope
push
mov
aas
mov
cld
xor
mov
adc
pop
or
pop
push
or
push
jnp
add
mov
mov
pop
inc
mov
mov
inc
pop
icebp
or
sub
aaa
in
hlt
lret
mov
cmpsb
push
push
xor
int3
repz
jno
adc
dec
jle
mov
cmpsl
xchg
dec
test
push
xchg
mull
jle
dec
hlt
mov
mov
jp
jns
add
xchg
xchg
cs
imul
or
sub
jb
xchg
xchg
icebp
pop
mov
push
aaa
push
movsl
adc
leave
ja
push
pusha
movb
or
push
mov
add
stc
push
fcmove
sub
mov
pop
fsubrl
jmp
mov
loop
aad
out
loope
stos
mov
cmc
push
sub
fidivrs
sbb
pop
or
fimuls
out
dec
das
mov
jle
jg
dec
xchg
adc
sub
jp
and
cmp
add
das
xchg
loopne
mov
stc
repz
mov
add
test
sub
push
daa
pop
adc
adc
sbb
push
xlat
pushf
sub
in
lea
ret
jecxz
out
jae
adc
hlt
xor
cmp
in
pushw
leave
cli
sbb
mov
test
pop
scas
xlat
pop
cmc
jns
push
out
mov
lcall
xlat
lahf
mov
into
jne
fldl
mov
rcl
mov
jmp
push
shlb
fs
iret
loopne
pop
outsl
pop
iret
ret
push
ja
in
pop
rol
fdivp
and
or
scas
mov
fwait
adc
fsubrs
dec
test
lock
addr16
fsubrs
adc
xchg
or
ljmp
push
add
out
mov
fdivl
mov
test
mov
ljmp
icebp
jae
lret
dec
fwait
testb
xchg
mov
and
sub
jb
repz
add
cs
cmp
cmpsb
inc
mov
mov
jg
clc
xchg
adc
mov
jno
jp
jb
lret
lret
pusha
sub
mov
mov
das
daa
pop
inc
sbb
fwait
inc
decb
test
mov
daa
mov
or
ss
sub
js
int
test
xor
scas
push
jne
sbb
scas
mov
jne
jecxz
out
sbb
negb
pushf
cmp
pop
pop
daa
inc
mov
cwtl
out
or
mov
je
sbb
insb
push
jle
adc
xor
cmp
jmp
push
fs
mov
xchg
jg
adc
add
dec
pop
and
test
pop
jb
or
mov
les
hlt
jnp
mov
fdivrl
rorb
mov
jns
ja
sub
fwait
js
scas
lret
fdivrl
lahf
rorl
adc
movsb
ret
sti
push
addr16
lret
xchg
jmp
dec
stc
aas
sub
push
mov
xchg
inc
inc
jns
je
adc
ficomps
pusha
jge
test
adc
push
sub
pop
jmp
enter
mov
add
adc
adc
shlb
xchg
add
popa
mov
cwtl
mov
add
mov
mov
fadds
push
mov
subl
adc
push
std
clc
xchg
enter
push
lahf
cmc
push
iret
jmp
or
mov
inc
jnp
mov
scas
inc
push
pop
fwait
gs
lret
les
mov
xchg
in
imul
mov
pop
insb
mov
cmp
jp
cwtl
push
jbe
dec
fs
fneni(8087
jnp
ret
jbe
loope
ja
cmp
adc
outsl
pop
in
test
xchg
mov
es
xchg
xor
cmp
push
in
sbb
push
popf
mov
push
andl
ret
add
test
xor
mov
test
cmp
mov
and
arpl
mov
mov
cmp
arpl
mov
scas
test
push
sbb
int
filds
hlt
xchg
pop
mov
lods
and
inc
enter
cli
add
out
xchg
out
daa
std
aas
mov
in
leave
in
jg
jb
mov
ds
shl
jnp
loop
sub
cld
push
cli
in
add
inc
nop
sbb
add
loopne
push
sbb
push
std
lea
aas
dec
in
into
or
cs
es
dec
sub
scas
or
aas
xchg
pop
pop
and
pop
push
push
add
jns
adc
pop
mov
insb
test
lods
lcall
ds
clc
in
daa
aaa
loop
sub
fmul
cmp
enter
sbb
xor
sub
clc
mov
xchg
sbb
and
pop
xor
imul
sub
push
enter
mov
and
rorb
pop
jns
lds
push
sahf
int3
lea
dec
mov
lret
xor
sub
cltd
fistl
and
mov
outsb
rcrl
addb
pop
cmpsb
and
or
pop
cmc
pop
mov
lock
pop
ss
jl
mov
dec
mov
addr16
jo
rolb
std
bound
div
add
cmp
adc
aad
ds
testl
das
cmc
adc
ljmp
or
jp
or
lcall
jb
sahf
xor
sub
adc
cmpb
adc
jnp
into
adc
and
roll
or
ljmp
lret
data16
stos
clc
xor
pushf
aad
jns
xchg
adc
sarl
mov
outsb
push
ret
or
xchg
push
mov
cmpsl
add
test
mov
xchg
sub
push
inc
aad
push
mov
fbld
xchg
or
imul
fists
or
xor
xlat
int
sub
ljmp
aam
pop
inc
mov
test
xor
sub
jns
scas
dec
jns
mov
cli
mov
mov
das
dec
js
cwtl
cmp
sahf
lock
ret
mov
jp
ret
mov
jns
mov
int
das
jge
fcmovb
ret
push
mov
into
sti
test
into
stos
sbb
mov
pusha
mov
push
rorl
mov
mov
add
mov
imul
sahf
out
mov
fimuls
shl
jg
add
pop
fs
mov
loop
int3
out
dec
in
and
pop
mov
cmp
mov
mov
shll
xchg
pushf
xor
lret
roll
gs
pushl
fstpl
fs
pop
jp
out
mov
popf
jae
pop
loop
pop
fsubrs
mov
mov
sub
inc
cli
xchg
cwtl
mul
fildll
xchg
pop
cmpsb
mov
cwtl
adc
in
scas
test
push
pop
cmc
test
cli
add
or
push
xchg
mov
lods
iret
bound
sbb
cmc
aam
mov
mov
das
fbstp
out
sti
sbb
push
jns
jne
jmp
mov
loop
and
jb
scas
ficoms
rorl
orb
mov
pop
daa
mov
mov
int
out
fiaddl
negb
xchg
push
std
mov
cmp
jle
fwait
in
mov
push
dec
lods
mov
inc
xchg
cli
cmp
enter
test
outsb
adc
pop
sbb
inc
jne
or
jbe
outsb
out
loopne
ljmp
nop
stc
cmpl
shr
dec
call
fists
out
cmc
xchg
push
idivl
int3
in
dec
cwtl
sbb
push
xlat
jp
jbe
and
pop
rcl
pop
lods
mov
mov
stos
hlt
sbb
push
jmp
inc
mull
emms
add
shlb
or
sub
pop
inc
cmp
dec
outsb
fwait
xor
cwtl
mov
lods
out
cwtl
mov
xor
cmp
clc
add
cli
mov
inc
push
cmp
mov
add
mov
lods
call
jg
scas
ror
shll
pop
mov
shlb
mov
pop
push
outsb
push
cmp
pop
loope
daa
sarb
aad
pop
hlt
outsl
in
sub
subb
cwtl
daa
push
jb
jo
cmpsl
xchg
out
or
sti
cmpsl
dec
dec
sbb
jg
addb
or
push
jne
and
dec
mul
cmp
and
les
pusha
mov
cmpsl
in
fs
mov
movsl
pop
mov
mov
fmul
mov
fstps
das
into
mov
mov
sub
mov
lret
jns
inc
neg
lret
das
mov
gs
out
int3
cmpsb
pop
jo
jecxz,pt
push
cmp
mov
shll
popf
dec
sbb
mov
movsb
test
jnp
mov
incl
hlt
push
push
inc
jge
dec
pop
jecxz
mov
jle
aam
cmp
mov
addl
scas
cmp
jmp
mov
pop
mov
jmp
rcrb
and
movsl
mov
cmp
inc
pop
ljmp
je
cmp
push
ja
pop
hlt
aas
imul
jmp
mov
pushf
push
ljmp
pop
pop
push
push
xor
dec
cmp
and
shll
xchg
mov
mov
hlt
clc
push
je
inc
push
sarl
mov
in
add
fistps
push
mov
loope
shrl
sbb
cmp
cli
insb
hlt
daa
mov
mov
and
lds
xor
add
das
pop
and
jecxz
arpl
inc
dec
jb
pop
jge
push
push
and
daa
out
sbb
inc
leave
xor
adc
pop
insb
push
loope
test
adc
xlat
pop
iret
pop
push
sbb
adc
inc
scas
not
sbb
outsb
not
sbb
sahf
xlat
sbb
daa
outsb
push
dec
and
xlat
jp,pt
jae
pusha
jne
mov
loopne
mov
cltd
fdivrl
mov
mov
fldt
push
iret
mov
popf
pop
add
jl
jb
dec
adcb
adc
addr16
jp
shrb
mov
and
flds
pop
test
imul
test
in
fldt
mov
stos
shll
out
mov
jecxz
stos
popf
cli
je
jmp
jp
and
mov
sbbb
jle
mov
je
imul
inc
mov
sub
cltd
fimull
bnd
cmpsb
hlt
sub
inc
xor
in
lock
sarb
roll
push
pop
test
push
data16
fisubrs
adc
mov
cli
pop
mov
mov
clc
push
lahf
fisttpll
cmp
repz
gs
cmp
push
packssdw
add
lock
in
mov
notl
ljmp
shll
scas
pop
sbb
loop
xchg
notl
inc
out
xchg
push
notb
jae
or
push
mov
inc
mov
or
clc
push
inc
ror
dec
arpl
lea
daa
inc
cli
fwait
jno
in
stos
insl
lret
fmuls
repnz
daa
xor
pop
jle
imul
push
stos
sbbb
stos
lea
dec
dec
aaa
aaa
sahf
int
fwait
ret
out
pop
pop
dec
pop
ss
jp
repnz
xlat
in
icebp
rcrb
int
test
in
xor
push
push
sub
shlb
nop
test
or
orb
inc
add
mov
jmp
dec
and
sub
pop
jge
lock
adc
jae
pop
xchg
jae
jns
loopne
adc
or
incb
sub
inc
std
mov
add
dec
pusha
push
add
fbstp
cmp
or
lock
sahf
lcall
icebp
fucomp
popa
jecxz
lret
loope,pt
fbld
inc
cmp
sbb
adc
loop
jno,pn
mov
movl
arpl
iret
mov
aaa
aaa
daa
xor
sbb
cmc
imul
repz
into
and
mov
ficomps
fldcw
xchg
fstp
pop
mov
push
lret
aas
decb
sti
dec
divl
rorl
mov
mov
ljmp
sarl
lds
push
xchg
mov
pop
or
or
xorb
sub
push
shlb
aaa
adc
movsl
les
scas
push
filds
fldl
lcall
adc
sbb
sub
scas
or
stos
iret
jo
jl
adc
shrl
notl
cmpsl
ficoms
sub
or
loop
cmp
fs
pop
insl
mov
sub
inc
js
daa
aas
mov
cwtl
sbbb
push
cmp
sub
in
mov
jle
lcall
push
gs
cmc
lods
es
mov
adc
mov
pop
cli
adc
mov
lahf
clc
cmc
movsb
scas
inc
sarb
xor
popf
xorl
cmp
cmp
daa
mov
mov
ja
jnp
jle
call
inc
es
jecxz
sbb
pop
movsl
sub
cld
jno
mov
lock
in
jnp
add
pop
test
jl,pn
mov
imul
xchg
xchg
push
stos
neg
imul
push
pop
push
mov
shrb
roll
stc
mov
cmp
les
dec
xchg
pushf
pusha
and
pop
sti
push
ljmp
jnp
push
cs
ja
pop
ss
inc
gs
mov
cmp
mov
lods
lea
and
out
xchg
xchg
dec
shll
xor
jge
cmpsl
mov
dec
cmpsb
js
or
lea
mov
test
add
ret
add
mov
mov
mov
out
ss
fisubs
lea
repz
ret
or
push
cmp
stc
inc
mov
fwait
pop
and
add
out
push
imul
cmp
mov
cltd
inc
sahf
cmp
mov
cld
pop
enter
and
mov
xor
pcmpgtw
mov
pop
lret
mov
jb
inc
dec
lods
out
fisubl
adc
leave
dec
cmp
hlt
loope
or
stos
cltd
cmp
cmp
sbb
push
mov
les
and
cmpsb
in
stos
push
jo
out
aas
jne
pop
pusha
sahf
sbb
xor
xor
dec
stos
jbe
pushf
push
mov
cmpsb
xor
pop
mov
jbe
mov
inc
mov
lea
out
daa
mov
pop
addb
pop
pop
das
test
icebp
aad
jle
shl
pop
push
ss
sbb
push
xchg
loope
cmp
inc
test
push
lods
inc
out
cltd
xchg
sahf
adc
mov
sub
jmp
and
loopne
mov
in
cs
sub
aam
pop
inc
aam
sub
jno
cmpsl
push
dec
imul
fs
out
int3
and
repnz
dec
adcb
mov
aad
repnz
jnp
fldenv
mov
cmp
fldcw
pop
pop
push
xchg
sbb
push
and
add
cmp
leave
cltd
mov
nop
inc
aad
in
xor
cli
lock
and
push
lahf
pusha
gs
in
popl
out
mov
push
sub
mov
mov
cmp
sub
jne
ret
cmp
inc
mov
fs
jno
adc
mov
mov
ljmp
lds
xor
mov
aad
jno
xlat
cmp
shlb
adc
fcoms
sbbb
mov
popl
je
fisttpll
sbb
dec
dec
enter
pop
shrb
sbb
mov
mov
dec
out
mov
mov
loope
enter
xor
dec
out
rsqrtps
mov
xchg
cmp
je
out
adc
cmp
daa
negl
aam
inc
loope
test
inc
ret
fmull
insb
in
aad
jbe
test
lret
fs
push
sbb
cmp
sub
leave
xor
les
mov
xor
push
lcall
ds
mov
imul
cltd
fistl
jmp
cmp
cmpsl
jbe
add
cmpb
fwait
sbb
arpl
je
dec
mov
xchg
sub
sahf
sbb
mov
rep
adc
shll
fcoms
xor
pop
fst
movsl
shll
mov
dec
nop
pop
je
arpl
idivb
or
pop
xchg
sbb
dec
pusha
mov
cmp
inc
stos
incb
out
rorb
and
adc
pop
xor
inc
or
cmpsb
mov
int3
lods
enter
jns
fldt
pop
mov
das
pop
lods
pop
mov
testl
dec
sti
adc
mov
lea
jae
in
inc
loope
jge
clc
jno
add
aas
out
pop
cwtl
sar
and
push
pop
mov
push
out
enter
jae
mov
cmp
iret
inc
cmp
test
cmp
daa
mov
fabs
adc
ja
xchg
mov
push
mov
mov
and
aad
and
mov
jbe
daa
and
cwtl
inc
add
sbb
adc
or
leave
outsb
lret
push
adc
or
mov
xchg
xor
add
adc
dec
mov
clc
ret
jne
sahf
fstl
mov
mov
inc
adc
pop
stos
or
or
jg
jge
fsts
in
in
mov
ja
sahf
jbe
jp
jmp
idivl
call
xchg
jno
dec
loop
mov
gs
sub
xchg
adc
or
nop
arpl
call
mov
repnz
in
dec
push
sub
mov
pusha
out
shrl
xor
xchg
cmpl
jbe
dec
repnz
and
fisubrs
ret
xorb
jg
sub
sub
inc
rorb
mov
cmpsl
js
out
mov
arpl
sbb
pop
test
jo
repz
dec
adc
jbe
sbb
ds
add
jp
adc
cli
sbb
pop
xor
ds
lea
lods
sbb
inc
jns
add
pop
xchg
push
leave
ret
test
sub
clc
and
xor
lods
xchg
shrl
data16
lcall
js
in
xchg
stos
clc
std
cs
mov
sahf
inc
sbb
and
push
pop
sub
jmp
adc
push
sbb
dec
cs
mov
or
cmp
gs
in
fs
push
push
xchg
pop
loope
insb
ret
pop
push
fdivl
or
into
sbb
and
fdivp
mov
int
cmc
sub
test
push
xchg
outsl
ja
push
lds
mov
cmpsb
dec
inc
dec
call
test
dec
xor
icebp
test
shl
je
dec
jnp
jo
fistpll
mov
stos
in
sbb
xchg
xchg
pop
loope
jle
pop
rcr
add
mul
enter
or
push
or
test
and
xchg
cmpl
lock
arpl
push
xor
loop
sub
icebp
mov
dec
xchg
jmp
push
repz
cmp
pop
in
mov
std
xor
inc
mov
add
adc
or
jl
mov
jne
pusha
mov
push
mov
adc
or
adc
loop
test
xor
adc
lcall
jne
out
and
add
fbld
je
mov
insl
shlb
jne
or
xor
push
cli
sbb
cs
inc
xchg
lret
movsb
mov
lret
lcall
icebp
sahf
sub
std
cmp
pop
xor
mov
xchg
pop
fisubl
testb
mov
inc
cmp
cmp
add
inc
cmpsl
push
and
rdpmc
jle
pop
mov
icebp
pop
xchg
sahf
mov
pop
in
push
mov
mov
inc
inc
out
xchg
lock
fcomps
iret
xor
shrl
arpl
out
repz
ffree
outsl
jl
push
sbbl
popa
das
adc
insb
cmp
lods
notb
mov
and
adc
pop
xchg
lret
shlb
pop
push
push
test
mov
mov
pop
jmp
mov
popa
scas
sti
fdivrs
cli
push
and
mov
test
add
mov
insb
push
inc
ficomps
iret
pop
aas
test
xor
arpl
dec
aas
std
popa
jmp
adc
xchg
and
repnz
out
test
iret
fdivrl
xor
mov
pop
and
xlat
or
push
adc
popa
ret
fcomip
cmp
adc
in
out
in
dec
inc
std
or
scas
xor
mov
in
mov
in
lods
mov
mov
xchg
sub
repnz
jne
std
pop
push
cld
pop
scas
inc
pop
pusha
lea
adcb
sbbb
nop
ja
aaa
aaa
dec
pop
cmpsb
jmp
lods
out
loopne
fisttps
mov
push
in
ds
fisubrl
pop
mov
fisttpl
add
xchg
mov
leave
mov
lahf
xlat
jo
call
aam
adc
dec
minps
leave
sahf
pushf
addr16
repnz
fwait
cltd
hlt
lods
ds
into
inc
and
add
loop
xchg
pop
bound
xchg
out
dec
pop
inc
mov
inc
pushf
stos
cmp
adc
pop
push
mov
xor
xor
sub
sbb
test
dec
loope
mov
insl
adc
fwait
sti
dec
and
or
in
dec
inc
adcb
mov
addr16
lret
mov
ficoms
sbb
mov
leave
aas
mov
nop
aas
xchg
sub
sbb
icebp
mov
jnp
pop
fstpl
mov
stc
arpl
cmp
mov
jnp
ret
fldl
data16
xor
xchg
or
dec
ds
mov
dec
pop
mov
movsl
ja
call
pop
je
jnp
mov
mov
pop
dec
dec
xlat
aam
aad
pop
mov
mov
push
inc
lret
iret
enter
test
cmp
fildl
xlat
jecxz
pop
xchg
bound
lret
repz
jb
ficompl
jae
fimull
inc
pop
add
sub
imul
ret
shrl
pop
int
jge
fistl
sub
cmp
imul
cli
xor
sbb
imul
or
pop
outsb
push
cmp
push
adc
popa
fwait
push
xorb
dec
fwait
cwtl
lea
pop
xor
adc
push
outsb
ljmp
or
arpl
sub
leave
pop
pop
ljmp
push
nop
es
push
arpl
iret
popf
push
loope
daa
xchg
or
es
inc
sbb
jmp
pop
xor
loopne
xchg
xchg
mov
mov
lock
lea
xchg
lahf
je
out
push
adc
sub
push
lcall
mov
fwait
sub
jle
jmp
cli
scas
iret
loop
sbb
mov
pop
jmp
in
add
and
hlt
stos
jbe
jle
fsubl
clc
ljmp
jp
les
inc
xor
jp
daa
dec
jecxz
or
mov
notb
fwait
in
pop
out
cmp
rorb
dec
push
rol
std
xor
mov
test
cwtl
add
scas
push
push
mulb
dec
push
push
mov
jl
in
mov
cmc
or
ret
add
xchg
inc
and
js
vxorps
lds
pop
sbb
pop
adc
xchg
sub
lods
sti
xor
shlb
jno
lret
leave
shlb
test
test
mov
sub
or
lods
dec
jae
xchg
sarb
dec
mov
out
mov
jmp
addr16
jb
jb
pop
es
shlb
sbb
lds
js
push
mov
jo
pop
and
mov
jp
aam
jmp
push
xchg
mov
inc
loopne
mov
mov
out
dec
adc
push
stos
cli
mov
xor
popa
pop
mov
ss
in
fcoms
pop
jo
push
imul
movsl
inc
cltd
loope
mov
jmp
and
pop
dec
push
mov
adc
push
xchg
inc
push
lods
push
dec
push
int
dec
scas
icebp
mov
push
xchg
pop
loope
out
ljmp
mov
cmp
stos
pop
cmp
xchg
stos
lea
jbe
shll
insb
out
loopne
jp
jge
xlat
pop
ljmp
xor
ss
test
test
jno
in
xchg
shrl
fidivl
cmc
adc
lods
mov
xchg
shl
push
dec
das
jbe
lahf
adcb
lock
stc
rolb
lret
xor
test
push
jle
sub
cld
mul
jmp
pop
loop
sub
sbb
dec
push
shlb
xchg
push
sub
xchg
repnz
mov
fdivl
jecxz
aas
push
imul
clc
cs
das
rcl
les
ret
jp
dec
pop
je
js
jg
push
push
push
mov
in
sub
sar
mov
mov
and
mov
negl
scas
xchg
ret
or
jmp
cmp
out
lods
push
fcomps
cld
jmp
jge
idiv
pop
fidivs
fsubr
aas
sar
fsubp
ja
jmp
outsb
rcll
pop
repnz
cld
pop
out
xlat
mov
lcall
push
out
adc
loopne
div
movzbl
mov
jg
pop
pop
sbb
jle
in
pop
xchg
lds
fiadds
push
or
lret
aam
in
jns
ret
fisubrl
sbb
mov
loop
xor
insl
outsb
jbe
lahf
mov
lret
dec
popf
add
pop
iret
sarl
add
jle
lds
fsubp
push
call
sbb
push
iret
aad
jns
aam
js
decb
mov
sub
push
or
pusha
or
fildll
pop
fisttpl
es
or
mov
jb
adc
repnz
sub
cmpsb
pop
sub
imull
mov
cmp
lods
dec
inc
out
imul
insl
adc
aam
jae
in
out
es
pop
out
adc
sbb
out
incb
mov
inc
jmp
pop
cmp
rcll
std
mov
mov
popa
int3
test
cs
pop
aam
mov
add
xchg
cli
repz
leave
dec
fsubr
shll
lahf
mov
pusha
aam
cmp
xchg
sub
jge
ds
out
repnz
jno
bound
loop
mov
adc
scas
sbb
shl
ret
or
icebp
cmpsl
jae
push
and
adc
pop
jg
ja
adc
jmp
push
and
fistpll
outsb
fistpll
jbe
mov
push
push
aas
cmp
adc
test
xchg
dec
sbb
or
loope
jg
ficoms
daa
cld
cli
js
lahf
mov
daa
aam
cmc
mov
negb
inc
sti
repz
pusha
mov
xor
cld
or
jbe
rclb
jne
das
loopne
pop
mov
pop
into
ja
out
xchg
xor
or
scas
dec
in
fcmovb
pop
in
jnp
xchg
test
inc
xor
sbb
xchg
xor
dec
sbb
fmulp
mov
add
inc
incb
and
sbb
push
push
ja
xor
popa
out
divps
subl
negl
mov
mov
fwait
pop
cmp
xchg
shl
cld
insb
enter
xchg
jb
out
jbe
movsl
out
call
cmpb
sti
pop
pop
jne
lret
jmp
or
or
cmp
cmp
leave
lods
mov
clc
cltd
xlat
inc
dec
mov
andb
pushl
cmp
push
cs
push
lahf
das
xchg
sbb
repz
gs
cld
loopne
jmp
sti
sub
je
fisttps
inc
imul
xchg
jp
lcall
fidivrl
loope
xlat
ret
mov
je
sub
pop
cmp
dec
cmp
pop
rclb
js
push
push
out
sub
daa
sub
mov
dec
mov
pop
into
mov
leave
repnz
into
call
aam
int
sahf
jne
cld
pop
into
inc
push
mov
cmc
adc
lret
xchg
ficompl
repnz
ljmp
jecxz
addr16
cs
cwtl
pop
enter
dec
adc
xchg
or
fstps
inc
mov
dec
add
sbb
mov
movsl
sahf
pop
mov
or
sbb
sbb
fsubrs
mov
cmp
pop
sub
sti
lahf
dec
lret
lret
das
into
mov
lcall
dec
pop
arpl
dec
pop
aam
lock
int3
bound
xchg
dec
jecxz
loope
ja
inc
jg
cmpl
push
push
rcl
push
push
ror
rcl
add
pop
mov
out
mov
inc
push
mov
insl
push
xor
push
pop
aaa
push
mov
jne
xchg
dec
enter
push
add
xchg
pop
add
or
sub
mov
push
movsl
push
mov
sub
xor
mov
push
xchg
pminub
aam
iret
ret
ret
ret
daa
xorl
pop
pop
mov
mov
leave
xor
adc
mov
movsb
jae
mov
insl
pop
movsl
outsl
cmc
bsf
sbb
jmp
lret
hlt
adc
lret
mov
xchg
aam
test
in
pop
js
jo
push
test
ljmp
jno
movsb
xchg
repnz
aas
lea
mov
inc
in
jb
fmul
sti
ret
int3
cli
fcoms
ss
loop
add
ljmp
xor
loopne
shr
xor
clc
stos
les
xor
mov
test
pop
inc
mov
retw
jno
stc
movb
jle
jg
and
in
mov
mov
push
pop
pusha
mov
ljmp
addr16
mov
xor
jecxz
out
call
adc
pop
ss
cmp
pop
mov
in
andl
sbb
xchg
out
add
add
mov
sub
cmc
add
sub
and
and
cmpb
push
and
pop
cmpsl
or
nop
inc
hlt
cmpb
and
sub
or
adc
adc
inc
sbb
dec
movsl
add
jle
push
adc
sbb
test
xor
call
add
movsb
adc
jo
jp
jle
inc
jle
jns
icebp
add
movsb
adc
xchg
mov
sbb
inc
aas
and
adc
mov
aaa
negb
or
stos
adc
negb
ja
data16
fisubl
adc
ret
dec
push
add
out
mov
aad
and
adc
or
mov
adc
cmc
dec
or
mov
loopne
pop
divb
data16
lret
jl
cltd
popf
sahf
sbb
xchg
xor
pop
cltd
fwait
push
nop
addr16
leave
adc
in
xchg
shrl
jno
jecxz
fdivs
or
outsl
insl
mov
adc
cs
adc
daa
cmp
fldl
jl
int3
outsl
dec
dec
inc
dec
inc
push
test
sub
in
call
mov
jp
daa
pop
mov
rcl
shrb
les
repz
jp
or
call
push
fimuls
sub
ljmp
cmp
mov
cli
push
mov
arpl
aas
outsl
movsl
mov
xchg
or
rcl
repnz
fcmovnbe
rcl
jle,pt
push
out
or
movsb
aam
push
rcll
push
inc
std
cmp
sbb
jmp
je
loopne
test
mov
sbb
or
mov
xchg
jecxz
jg
pminsw
pop
sbb
add
mov
out
mov
jge
mov
ret
je
hlt
pop
test
loop
sub
call
mov
lods
lret
mov
mov
in
jle
jmp
aad
aas
pop
inc
adc
dec
pop
adc
stos
sbb
cli
xor
sahf
movsb
jge
lcall
imul
aam
pop
scas
push
rclb
sub
sarb
aad
push
xchg
mov
inc
inc
lds
movsb
push
hlt
adc
mov
mov
jae
dec
test
dec
dec
dec
fistps
mov
ljmp
mov
inc
insb
fistl
jb
cmpsl
jne
out
cmp
push
xchg
stos
xor
jge
repz
aaa
xor
xorb
lret
sarl
stc
inc
jo
xchg
in
mov
loope
or
ja
push
int3
lds
ds
int3
lahf
adc
lock
push
add
and
addr16
dec
mov
mov
cwtl
or
je
mov
push
and
lahf
test
xchg
add
mov
add
push
inc
mov
push
notb
push
push
adc
fmuls
mov
jp
subb
and
pop
inc
stos
nop
xor
pop
leave
mov
pop
movsl
push
pop
inc
cmp
insl
lods
in
iret
inc
fisttps
mov
std
or
cmp
sbb
dec
cli
iret
int
pop
ret
xchg
cld
les
rcll
mov
xchg
sbb
movsl
rorl
fildll
mov
out
xor
loope
ss
int
inc
cmp
xor
xor
loope
adc
cld
or
mov
bound
mulb
fisubl
jp
ret
mov
pop
pop
pop
out
xorb
adc
cmp
mov
fwait
stc
add
stc
cmpsb
dec
sti
bound
jecxz
ss
xchg
add
xor
lahf
sarl
loopne
dec
mov
popl
aam
iret
jecxz
xor
mov
pop
push
hlt
sub
mov
mov
rclb
lods
inc
sahf
inc
pop
fwait
and
jg
xchg
pop
mov
sub
addr16
inc
gs
pop
cltd
inc
cmp
mov
jo
dec
sub
jne
mov
adcb
cwtl
insb
shr
popf
jb
int
push
ds
or
subl
xorb
jo
leave
das
ret
lret
lcall
mov
pop
popf
fildl
pop
aaa
and
insl
mov
cmp
nop
mov
xor
aad
lret
push
jb
adc
shrb
dec
xor
xchg
xchg
out
pop
push
or
stos
stos
cs
push
jae
rol
cmp
js
aaa
mov
push
cld
mov
pop
jne
sub
xchg
jge
lret
mov
xchg
mov
xor
test
das
xor
push
and
jecxz
incl
jmp
imull
cmp
jecxz
repnz
shlb
int3
loope
mov
dec
mov
push
rcl
popf
out
outsl
xchg
out
neg
mov
aam
imul
divl
pop
mov
cs
mov
leave
ja
mov
fisubs
inc
cmpsl
outsb
pop
cmp
imul
xlat
xor
js
xchg
sbb
pop
lea
dec
dec
in
ret
lret
mov
shr
sbb
adc
adc
in
adc
cmp
cmpsb
mov
enter
rorb
mov
js
lahf
pop
push
popa
mov
lret
xchg
sbb
jecxz
jnp
xor
mov
fisubrs
lods
jns
fldl
fisubs
or
aas
repnz
fbstp
jne
loop
jns
adc
lahf
lods
lahf
mov
xchg
pop
test
push
sub
add
cmp
pushf
inc
xchg
cmp
add
mov
testb
mov
pop
cmp
je
add
daa
sub
outsb
inc
xchg
stos
xchg
aaa
adc
and
outsb
jb
imul
lds
outsl
or
ds
jmp
mov
sub
pusha
jns
pop
in
add
movl
adc
jmp
dec
push
sbb
mov
std
mov
cmpsl
mov
dec
lock
pavgw
es
inc
sbb
call
cmp
into
xchg
xchg
stc
in
stc
adc
mov
push
sbb
in
push
cmp
sub
stc
out
and
mov
mov
dec
cmp
jbe
pop
push
jnp
push
iret
hlt
mov
sub
xchg
sub
mov
aam
cli
lds
jo
pop
mov
dec
test
or
sbb
push
stos
xchg
dec
and
push
mov
mov
xchg
pushf
mov
and
filds
mov
push
jg
and
icebp
xchg
jle
jae
push
inc
aas
inc
jecxz
sub
leave
and
cmp
repnz
mov
xor
xchg
outsb
loop
mov
cmp
mov
xchg
lahf
les
inc
ljmp
loop
push
mov
js
sahf
dec
cmp
call
sbb
iret
test
mov
adc
cmpsb
int3
mull
pop
idivl
stc
sub
push
or
bound
test
xchg
pop
xor
aas
dec
lea
daa
fadds
mov
push
fisttps
mov
dec
rol
rorb
es
sbb
mov
jmp
fs
push
pop
pop
push
repz
sub
or
pop
sub
out
push
orb
adc
adc
jle
fistl
aad
jnp
in
aas
dec
addr16
xchg
cmp
dec
pop
sti
sbb
cmp
popf
xor
loope
fsubl
add
cwtl
setg
jmp
lds
popa
and
std
and
jle
ficoms
scas
outsb
ljmp
sti
push
and
jge
cs
dec
push
clc
movsl
jbe
jl
aas
mov
pop
push
stos
cmpsl
pop
xor
and
mov
push
and
jg
scas
mov
jmp
and
movsl
inc
dec
stos
pop
movsb
enter
jp
fisubl
sub
sti
pop
adc
xorb
out
push
mov
xor
fdiv
js
cpuid
movsb
rorl
mov
xor
xchg
jbe
cmpsl
mov
nop
sbb
jmp
cmp
test
outsl
fisubl
sub
xor
test
mov
xchg
mov
hlt
rcl
pushf
xor
leave
push
or
mov
mov
jge
js
testl
fidivrl
adc
lcall
loope
ljmp
icebp
test
int3
out
rcrb
ja
mov
push
in
out
stos
inc
push
cmc
push
data16
lock
cmp
add
push
sub
movsl
and
xchg
mov
sahf
std
jno
mov
nop
lret
xchg
mov
pop
fmul
daa
mov
arpl
mov
pop
cmp
mov
push
lret
aas
dec
int
xor
mov
test
dec
jb
ret
mov
fisttps
sub
repnz
add
jp
cmp
test
jmp
mov
sbb
insl
mov
fdivrs
aad
adc
xchg
aas
lret
repnz
add
jmp
movsl
mov
icebp
in
fidivrl
lods
mov
sbb
and
clc
mov
inc
addr16
jecxz
push
or
mov
std
addl
out
cmp
jmp
mov
and
fmul
mov
adc
arpl
push
xchg
push
adc
jns
sti
dec
bnd
in
daa
rcr
and
pop
adc
jno
jns
mov
and
mov
hlt
jmp
cs
dec
and
into
pop
and
mov
loop
call
and
popa
dec
shll
mov
and
cmpsl
push
mov
movsb
pop
mov
je
xor
inc
lret
mov
insl
lock
loopne
or
loope
nop
test
test
pop
mov
push
in
ss
fsubp
rclb
adc
mov
addr16
popf
and
cld
dec
mov
jae
mov
xor
push
push
jl
xacquire
imul
pop
jl
or
scas
mov
adc
int
insl
lock
fcompl
pop
push
mov
dec
sbb
shl
mov
lret
mov
jl
pop
or
psrlq
aam
adc
gs
mov
pop
aaa
push
sbb
scas
ja
sub
testb
filds
sub
dec
push
sti
arpl
jnp
pushf
pop
scas
or
jo
sub
mov
push
pop
or
or
mov
sub
scas
or
roll
fstpt
push
loopne
dec
inc
ror
divl
add
and
jmp
clc
jne
mov
das
push
and
cmp
jecxz
divb
iret
xor
push
inc
pop
in
cwtl
stos
xchg
xchg
sahf
imul
lret
xchg
int3
mov
movsb
inc
ljmp
ljmp
cmpsl
pop
push
xor
scas
dec
adc
dec
mov
hlt
loope
scas
cwtl
inc
pop
std
leave
mov
scas
pushf
xlat
xor
push
loopne
sti
insl
mov
faddl
fists
sarb
repz
iret
push
pop
or
push
test
pop
mov
cltd
mov
test
sub
and
and
jp
xchg
sti
scas
rclb
pushf
mov
jp
or
sahf
cltd
mov
cmp
mov
lods
movsl
sarb
sub
cmpsb
jns
pushf
adcb
lret
push
xchg
jg
mov
sbb
ja
pop
mov
and
sub
lods
or
sarl
cmp
popl
ret
xlat
dec
pushf
js
add
shlb
xor
push
scas
inc
gs
js
pop
addr16
lret
inc
lds
jbe
cwtl
jno
xchg
mov
inc
lods
stos
fisubrl
cmc
bound
adc
lods
imul
stos
push
jo,pt
mov
push
mov
push
or
mov
adc
jae
dec
mov
sub
ficompl
jb
inc
sarb
jne
xchg
or
repnz
sbb
imulb
add
push
fisttpl
mov
leave
sub
das
and
sub
int3
or
shr
addr16
pop
xchg
jae
mov
sti
inc
leave
in
cmpb
mov
out
cmp
and
enter
sub
insb
lret
push
sub
test
xchg
lea
jbe
adc
imul
fnclex
pop
mov
dec
push
lret
sub
mov
popa
arpl
out
pop
xor
je
dec
pop
jle
mov
in
stos
xlat
sub
or
into
mov
pushf
and
mov
mov
mov
das
pushf
bound
pop
xchg
inc
lods
int3
lcall
jns
outsw
sub
sbb
testb
js
in
fisubrl
ret
pushf
sbb
mov
fistpl
pop
enter
push
out
inc
jo
fbstp
or
push
ret
stos
jle
push
adc
nop
test
cmpsb
movsb
int3
xor
gs
and
xchg
lcall
dec
pop
mov
mov
icebp
mov
pusha
xchg
lods
sbb
fsubrl
xchg
fnstenv
lea
fiaddl
dec
dec
dec
pop
mov
insb
gs
repz
into
addr16
sbb
lods
shlb
fdivrp
loop
mov
cld
ret
fwait
int3
jae
aam
dec
lcall
pushf
xchg
outsb
or
mov
cmpsl
jb
int3
test
ret
das
xor
sbb
repnz
lea
xor
cwtl
xchg
ss
or
inc
xchg
stc
mov
addb
mov
mov
imul
adc
push
js
dec
xchg
push
sbb
loopne
out
cld
and
mov
inc
jecxz
mov
jns
lods
in
push
sbb
fstl
push
popa
xor
xor
jno
jmp
adc
popf
xchg
xorl
and
jge
cmpsb
stos
sbb
cmpsb
rclb
xor
mov
sbb
push
jns
push
addr16
mov
add
sbb
pop
mov
jnp
fcomps
enter
test
cmp
sahf
xorl
les
test
and
sub
jo
mov
add
shrl
and
fnstcw
sbb
push
les
xor
or
and
bnd
xchg
mov
lods
mov
test
push
loop
xlat
mov
inc
shlb
jno
into
and
or
sbb
dec
cmp
sbb
roll
xchg
mov
cmp
in
jl
push
fildl
pop
mov
xchg
in
andb
sbb
mov
popa
outsb
out
or
push
adc
shll
dec
sbb
cwtl
xchg
or
jle
jbe
pop
xchg
aaa
fwait
sbbl
pop
jle
mov
mov
mov
icebp
xchg
insl
sub
sub
xchg
mov
push
ss
xchg
push
out
pushf
insl
nop
out
lcall
xor
cmp
mov
dec
lods
xor
mov
push
inc
push
cmp
or
inc
xchg
out
cli
and
adc
arpl
daa
arpl
cld
xor
dec
mov
rcrb
sbb
ss
adc
ret
sbb
cs
iret
xor
call
test
notl
int3
in
ds
std
lahf
mov
pop
dec
lcall
fdivl
add
inc
sub
into
test
sub
xor
xchg
sbb
adc
push
inc
shlb
ret
add
or
mov
movsb
adc
or
push
push
loope
enter
lret
popa
or
lds
sbb
dec
je
dec
pushf
subl
rclb
mov
popa
cmpsl
add
and
mov
mov
mov
or
shlb
inc
rclb
and
xchg
ret
pop
adc
inc
or
mov
in
xchg
arpl
sbb
aas
ret
sbb
sbb
pushf
sbb
mov
jl
mov
add
or
rcll
aaa
pop
cmc
xchg
xor
mov
data16
push
or
fs
adc
test
lods
clc
popa
lahf
xchg
xchg
loop
push
cmp
xor
mov
lret
jno
xchg
and
iret
es
sbb
adcb
in
dec
push
xor
sbb
inc
repnz
cmp
data16
pop
inc
test
pop
jbe
insb
leave
clc
push
filds
pop
jo
dec
sbb
jmp
fdivl
push
leave
outsl
sub
fsts
shrl
in
out
lret
sbb
fwait
cmp
imul
xor
ret
mov
xor
cmp
inc
adc
lock
mov
cmp
andb
subl
jb
lret
push
fadd
iret
jmp
pop
add
stos
xchg
scas
add
fwait
stc
and
addr16
ja
fnstenv
vphaddbq
cmpsb
test
ljmp
cli
gs
sbb
jb
jae
pop
mov
arpl
fcomps
dec
add
pop
xlat
stc
or
out
xor
and
xchg
cwtl
es
sti
mov
inc
into
pop
xchg
jb
mov
in
cltd
stc
in
push
mov
imul
or
fdivrp
sti
inc
adc
int
and
mov
inc
push
and
incb
xchg
inc
jnp
xor
inc
dec
test
cmp
adc
xchg
aas
leave
fmulp
stos
adcb
cmp
scas
imul
mov
lea
jge
mov
jmp
fidivs
aam
les
xchg
jb
aaa
sub
jne
ret
stos
and
inc
cmc
loope,pt
pop
jo
dec
out
jb
cmp
push
fstp
inc
aas
cmp
and
mov
xchg
jl
sbbl
push
sbb
cmc
add
inc
push
inc
push
pop
pop
inc
addr16
outsb
mov
stos
cmp
cmp
and
adc
cmpsb
mulb
push
sub
jno
das
sbbl
cmp
rcrb
pushf
mov
lods
dec
add
rol
push
sbb
rcrl
push
pop
inc
sbb
sbb
cmp
or
adc
pop
xchg
outsl
or
insl
das
mov
jnp
jp
dec
sbb
xchg
cmp
push
mov
push
jle
mov
cmp
sarl
adc
not
mov
pop
insl
aas
push
sbb
cmp
leave
xlat
aam
cmc
imul
in
pop
out
in
fsubp
sarb
sub
push
lcall
das
cmp
pusha
xchg
push
jmp
xchg
testl
enter
cli
xor
cmp
cmpsl
in
sub
inc
repnz
dec
movsb
scas
ds
pop
ror
pop
xor
push
or
roll
js
cmp
push
xor
out
sub
js
fs
sub
mov
xchg
popa
test
dec
sub
fnsave
mov
jno
shll
adc
repz
cmc
jmp
sub
les
data16
je
test
xchg
inc
mov
bound
fs
nop
sahf
mov
jnp
aaa
addr16
imul
or
xchg
push
pop
xor
dec
add
and
or
sbbl
cmp
jns
in
subl
in
std
lret
es
and
dec
xor
out
add
jnp
sub
nop
ret
mov
test
dec
loopne
mov
les
cltd
repz
cli
out
xchg
or
stc
daa
test
aad
xor
sub
mov
dec
loopne
inc
daa
faddl
push
cltd
stos
xchg
cmpsb
xchg
sbb
cltd
cmp
xchg
mov
lods
push
pop
adc
adc
mov
push
rol
dec
mov
xchg
xor
add
dec
and
xchg
mov
sarb
push
sub
add
lcall
loopne
dec
dec
push
inc
cmp
outsb
push
jns
sbb
push
out
pop
das
iret
pusha
mov
out
pop
cmp
push
fxam
xchg
inc
insl
repnz
stos
inc
push
into
xor
mov
or
sbb
pop
mov
and
mov
mov
sbb
inc
fmull
jmp
addb
xor
xchg
push
jb
pop
btc
add
mov
popf
adc
xor
xor
repnz
jl
mov
push
dec
das
xchg
jno
mov
push
jbe
loop
in
cmp
insb
or
mov
mov
fcomps
and
xchg
push
in
ret
xchg
sti
push
xor
ds
inc
mov
mov
lret
add
je
cmc
pop
dec
push
sub
test
pop
pop
inc
mov
into
xor
add
jo
sahf
leave
mov
mov
sbb
es
ret
in
add
mulb
push
fnstenv
and
fisubs
xlat
inc
mov
iret
mov
or
dec
push
xor
push
jg
in
ljmp
in
test
imul
xlat
cltd
mov
sti
lret
int
cld
lret
into
fwait
andb
jge
push
xchg
lea
sbb
xor
inc
lahf
add
outsl
pusha
insb
or
inc
xchg
outsl
lods
pop
in
xor
push
test
mov
adc
into
movsb
jns
aam
pop
aam
push
out
adc
push
adc
jnp
icebp
cmp
dec
sbb
mov
sub
sahf
mov
adc
push
rdtsc
cld
inc
xlat
loopne
inc
or
aaa
mov
in
mov
fidivrs
dec
nop
gs
das
rcll
test
test
push
cli
sub
out
xor
loop
scas
test
inc
pop
sub
mov
test
out
cld
fwait
scas
jmp
dec
and
or
push
mov
cld
mov
fcomps
les
jle
adc
mov
push
ss
jg
jbe
aas
xchg
fsubrl
repz
add
sti
or
dec
cltd
sbb
out
xor
mov
inc
test
gs
mov
pop
jnp
add
adc
fs
add
aad
adc
out
jbe
xlat
push
notl
outsl
sbb
xor
and
in
sub
or
icebp
push
aam
fdivs
subb
or
xchg
rcrl
outsl
notb
insb
mov
popf
pop
dec
es
sub
sbb
lret
jmp
cmpsl
dec
insb
out
xor
lret
call
cmp
adc
aad
lahf
sub
cmovo
hlt
rcll
cmp
mov
in
mov
jo
cmp
stos
shll
leave
lcall
data16
nop
push
stos
lods
lock
mov
and
push
fwait
xchg
aaa
and
pushf
sub
pop
mov
cmp
mov
sub
sbb
or
or
or
dec
mov
addr16
xor
movsl
lods
cwtl
popf
outsb
testb
mov
cmp
add
push
pop
ret
pop
mov
fiadds
xor
imul
and
gs
cmp
ds
out
pusha
mov
in
cmp
mov
fstps
pop
inc
pop
pop
enter
je
fadds
dec
es
sti
pop
jns
jns
mov
push
test
or
nop
js
rcrl
jne
jecxz
lret
enter
pusha
sahf
mov
iret
orb
mov
iret
mov
push
cmpsl
mov
xchg
lret
lea
push
int3
push
repz
mov
divb
jb
push
jle
aad
sbb
jbe
addl
lods
ljmp
xor
dec
sbb
call
cmp
loopne
cmp
xchg
jb
inc
cmp
into
aas
add
and
divb
cmpsl
ljmp
out
mov
int3
push
inc
je
iret
clc
sub
push
xchg
push
ret
incl
push
scas
bound
outsb
push
or
outsl
jg
sbb
dec
inc
push
das
fiaddl
mov
movsb
mov
mov
mov
cmp
adc
push
aam
std
jmp
jg
xchg
cld
push
sahf
repnz
push
daa
mov
mov
movsb
cmpsb
shlb
xchg
push
out
pop
movb
pushf
aam
jns
mov
dec
lods
int3
lods
cmp
push
cmp
mov
cmpsb
lods
rcrl
sub
lods
push
sbb
push
stos
je
loop
sbb
hlt
fdivrp
hlt
inc
jae
jmp
ljmp
lods
fwait
mov
push
inc
repnz
mov
lcall
incl
sub
lock
dec
pop
cld
jmp
push
out
enter
mov
loope
inc
gs
popl
mov
aam
pusha
xchg
pop
mov
xorl
jl
cmp
dec
test
std
xor
jae
test
movsl
dec
jg
lds
push
decl
shrb
cmp
adc
lea
inc
aas
and
dec
push
dec
mov
aaa
push
jle
bound
mov
mov
ret
in
dec
daa
mov
adc
int3
enter
lcall
and
imul
int3
sub
sub
adc
or
insl
push
sbb
dec
xchg
mov
add
and
sbb
addr16
mov
jle
jl
in
dec
repnz
pushf
mov
pop
loopne
fistpl
iret
dec
push
ret
sbb
ret
bound
pop
pop
pop
xchg
xorb
pop
arpl
scas
mov
xorl
and
hlt
int
adc
jbe
dec
jg
sbb
cmp
cmp
out
rcll
cmp
jg
test
das
js
lret
movsb
push
aas
push
aam
cli
aam
inc
imul
call
jp
repnz
lods
inc
jl
fs
gs
and
in
xchg
mov
xchg
orb
pop
jp
mov
pushf
out
pusha
ds
sbb
or
popa
cwtl
insl
arpl
adc
pop
pop
test
cmp
cmp
jle
call
mov
gs
mov
xor
scas
mov
dec
sbb
add
jno
pop
jo
jo
movsb
xchg
xchg
jno
je
jle
sub
outsl
push
sbb
cmp
xchg
push
sbb
xor
std
sub
sbb
xor
insl
push
mov
and
data16
lock
pop
orb
and
jecxz
push
les
mov
negb
sbb
outsl
xchg
jmp
cmpl
jo
xor
rclb
sbb
mov
mov
add
pop
lcall
insb
mov
mov
inc
and
pop
push
sbb
cmp
jns
ror
ret
aam
jne
iret
and
pop
pop
xor
adc
les
cwtl
xchg
insb
cmc
jg
sbb
icebp
cmpsl
lock
or
iret
gs
xlat
xor
mov
inc
je
cmp
cs
adc
jbe
je
test
loop
mov
call
dec
int3
pop
cmpsl
sub
mov
in
andl
and
jle
clc
in
inc
pop
es
loope
add
pop
cmp
xchg
push
sbb
cmc
lds
iret
sub
cltd
sbb
xchg
jle
in
xor
sbb
leave
add
pushf
loopne
and
add
jo
ficomps
mov
xchg
sub
int
inc
and
clc
lods
or
stos
cmp
testl
mov
and
lods
dec
mov
clc
or
repnz
lcall
inc
mov
mov
pop
mov
push
pop
adc
aad
stos
sbb
and
mov
pop
scas
xlat
test
decb
mov
inc
cmp
out
sub
push
mov
mov
inc
mov
add
pop
push
loop
jbe
dec
sbb
add
test
mov
add
pcmpgtb
sub
cmpsb
or
negl
cld
loope
pusha
subl
adc
daa
jmp
mov
roll
out
lret
repnz
popa
fs
add
out
in
mov
mov
sub
popa
sub
loope
mov
lock
dec
fmulp
mov
or
enter
int
rclb
sub
adcl
xor
adc
ficoms
sbb
in
rolb
movsl
push
in
incl
pop
out
addr16
scas
or
cs
lods
fnstenv
notb
sbb
shlb
cmp
mov
fcomps
mov
in
pop
lock
and
scas
pop
pop
faddl
pop
out
adc
mov
pushf
dec
or
fsubrp
inc
mov
xchg
jg
pop
les
push
mov
inc
sbb
mov
lret
scas
mov
or
repz
int3
adc
add
sub
lods
and
mov
or
roll
daa
in
lcall
hlt
enter
cmp
mov
lret
test
lahf
pop
cli
imul
jo
int3
inc
push
jo
jmp
adc
stos
add
mov
in
mov
mov
mov
jns
mov
insb
jmp
mov
jnp
mulb
out
jne
lret
mov
out
inc
push
pop
sbb
ja
popf
out
sbb
daa
fisubrs
push
arpl
mov
mov
mov
xor
pop
sub
xchg
movl
ss
push
fbstp
mov
inc
sti
xor
inc
pushl
mov
dec
in
cmp
pushf
addr16
fcoms
push
sbb
jne
add
jmp
stc
fwait
or
cmpsb
ret
pop
cld
sbb
sub
push
lods
jbe
xchg
xor
enter
and
or
scas
in
cs
pop
aad
push
mov
pop
std
sub
jl
aam
pop
cld
mov
int3
xchg
js
dec
pop
mov
push
iret
out
push
mov
sub
pushf
jle
jge
jne
repnz
inc
mov
inc
inc
imul
xor
es
dec
rorl
sbb
jne
xor
imul
cmp
jno
sbb
mov
dec
sub
jae
sbb
add
pop
and
add
mov
add
je
mov
testl
pop
add
sub
in
mov
out
pop
mov
cmp
sbb
fsubrp
jnp
xchg
fstpt
mov
inc
imul
scas
arpl
push
mov
in
mov
mov
mov
mov
add
iret
notl
sub
pushf
mov
sti
in
ljmp
cmp
sub
xlat
jmp
cmp
mov
paddsb
call
cmp
adcb
les
outsb
adc
pop
mov
jle
aad
mov
jmp
cmpsb
xchg
test
clc
pop
test
pop
xor
iret
inc
and
jmp
icebp
or
jns
subb
adc
push
add
cs
or
adcb
adc
mov
fimuls
and
jmp
stos
xor
stos
jb
dec
cmp
scas
xchg
fistpl
cmp
cmp
scas
pushw
and
enter
jb
aad
fs
pop
int3
or
rol
push
loopne
popf
data16
dec
xor
addl
rcll
jae
shl
in
test
or
jg
inc
adc
pop
fisttps
pop
jl
bswap
xor
js
pushf
jo
pop
fisttps
in
fildl
icebp
and
dec
data16
shl
jnp
mov
adc
pop
loope
enter
stc
insl
cmp
into
mov
adc
xchg
and
sub
cmp
add
cmc
dec
lds
stc
lcall
stc
sahf
adc
std
jno
dec
roll
jb
popw
rcll
adc
sub
dec
push
mov
clc
cld
rorb
lret
mov
invlpg
inc
dec
js
xchg
lret
cmpsl
mov
notl
scas
and
out
fcmovnu
ds
dec
sub
psubsw
sbb
popf
rorl
int3
mov
jns
xor
xchg
and
lea
adc
aad
aam
xor
popa
in
xor
jle
insb
clc
cli
xchg
inc
or
mov
or
adc
xchg
insl
int3
icebp
push
enter
fcmovnbe
mov
and
cltd
cli
sarl
scas
sbb
push
sti
adc
jne
xchg
adcb
aaa
xor
inc
dec
jmp
fwait
inc
inc
jle
mov
or
xchg
mov
push
mov
jp
push
pop
movsb
or
and
js
sub
shll
int3
xchg
lds
pop
xor
push
fldenv
push
pop
and
lods
movsl
cld
pop
xor
inc
inc
sub
lock
jo
and
rorl
lods
and
aaa
inc
popa
sub
jno
xor
loop
pop
adc
shlb
dec
call
adc
sub
add
cmp
and
movsb
sbb
cwtl
fdivr
lods
pop
pop
push
lea
dec
push
jle
xlat
push
cmp
aam
lds
dec
mov
in
outsl
inc
dec
push
sbb
inc
pop
xchg
aam
pop
xor
loope
cltd
and
and
xchg
inc
repnz
dec
clc
mov
stc
scas
adc
cmp
lret
add
mov
sub
jg
cmc
xchg
shrb
and
adc
adc
push
xor
jl
xor
fstpl
icebp
pop
pop
mov
push
hlt
mov
inc
mov
pop
aaa
jle
idivb
fldl
mov
fistl
leave
mov
das
jle
repnz
cmp
inc
insl
nop
jge
sub
sahf
mov
aaa
push
insl
dec
mov
inc
dec
or
in
pop
adc
inc
insl
sbb
pop
cli
mov
enter
in
mul
dec
outsb
ja
sbb
hlt
adc
xorb
test
pop
mov
mov
fidivs
imul
pop
or
adc
xor
rcr
call
jecxz
shrb
xchg
je
icebp
jns
mov
mov
mov
add
mov
incb
cmp
lahf
add
mov
lds
loop
ret
ficoms
sub
and
cli
or
add
repz
sub
movsb
lea
enter
cmpsb
add
jmp
js
ljmp
orb
ds
das
push
xchg
std
loop
je
iret
idivl
and
clc
jge
and
scas
arpl
out
mov
flds
push
arpl
inc
or
jno
dec
out
fnstsw
push
fs
fdecstp
les
scas
add
mov
clc
and
push
xchg
pop
sub
sti
repnz
adcl
xchg
inc
mov
mov
mov
arpl
sbb
sub
rorb
ret
shll
dec
data16
and
mov
cmc
int3
pop
sbb
sub
xchg
lods
inc
popf
fwait
jl
stos
jg
leave
xor
push
rol
lock
ljmp
pop
cli
add
pop
aad
xchg
pop
jae
std
js
adc
mov
sbb
pop
jl
out
cmp
mov
insl
in
mov
cli
push
jb
lods
dec
jae
and
fsubr
or
fildll
sub
fucomip
xor
mov
push
in
stos
out
mov
into
movsl
imul
fisttpl
loop
lock
mov
dec
bound
sub
fidivrl
fs
mov
xchg
cmp
adc
mov
inc
lahf
push
cmpsb
dec
fstp
pushl
and
cmp
pop
mov
fs
pop
push
int3
pop
imul
stc
push
push
sbb
mov
daa
les
test
add
test
cs
jl
into
and
je
int3
or
jge
mov
dec
vmread
push
fstps
jns
out
dec
push
or
or
leave
js
jg
cmpb
pop
fcmovnb
push
mov
scas
jbe
and
push
xchg
lret
jne
notb
and
mov
out
pop
mov
push
enter
shld
daa
mov
xchg
xor
adc
sub
sbb
insb
dec
xchg
scas
loope
mov
dec
repnz
js
lret
cmp
cmp
sti
pop
sbb
stc
push
pop
push
inc
lods
loope
xchg
jb
jne
in
xor
and
push
lods
pushf
sbb
xchg
mov
mov
dec
lods
subl
mov
insl
push
push
int3
sbb
pusha
nop
jo
cmp
mov
jo
fnstenv
add
add
and
xchg
sub
or
sub
inc
loope
scas
jo
mov
xchg
lcall
cmp
xor
rorb
test
jecxz
fs
pop
jae
inc
imul
out
push
or
and
pop
cmp
ret
mov
mov
mov
xor
sub
cltd
imul
pop
sbb
jno
aaa
ds
xlat
insb
jge
mov
int3
addr16
mov
cmc
lcall
psubq
cmp
out
aam
cltd
and
cltd
push
jecxz
aad
mov
sub
mov
dec
pop
adc
jmp
xor
test
adc
loope
and
out
std
inc
into
lcall
inc
xchg
add
out
js
cmp
sbb
inc
add
jo
lret
mov
xchg
hlt
mov
push
sub
clc
inc
in
mov
cld
js
lock
fld
dec
push
dec
sub
sbb
xchg
pop
inc
cmp
lds
jmp
lock
lea
out
outsl
mov
dec
mov
loop
add
push
and
fbstp
mov
js
dec
push
leave
cmp
ljmp
leave
jne
lods
aaa
stos
out
mov
out
sub
mov
sbb
lods
movsl
xor
movsb
pop
fwait
sub
les
pop
lahf
fcomp
bound
sbb
add
push
pop
lock
mov
mov
ja
icebp
add
xchg
stos
aad
std
or
shll
mulb
xchg
inc
adc
add
or
outsl
push
jl
clc
stc
std
jo
ret
mov
pop
push
repz
clc
in
inc
lcall
dec
aad
bnd
cmp
push
push
lock
mov
cli
xlat
ffreep
out
shll
add
cwtl
xor
mov
sbb
leave
negl
mov
shrl
xlat
dec
xor
lock
rorb
xor
imul
mov
imul
icebp
clc
notl
fsubp
fs
jmp
decl
ret
cmp
and
lret
cli
lcall
rorb
fisubl
and
aam
ja
negb
push
repnz
lcall
inc
icebp
std
into
outsl
shl
sti
mov
dec
pop
filds
outsl
push
fst
decb
and
xchg
inc
xchg
pop
ds
inc
lahf
ja
cmpsb
dec
stos
xchg
dec
dec
xchg
aam
out
jmp
mov
mov
sbb
adc
jbe
mulb
ret
loop
mov
rclb
push
std
sar
sbb
add
dec
xchg
mov
stc
aas
xor
pop
add
out
push
stos
jmp
pusha
inc
sub
data16
dec
insb
into
or
mov
js
loop
inc
pop
xor
pop
mov
mov
dec
int3
aad
push
sti
sahf
shll
mov
mov
lret
insb
data16
imul
jecxz
ds
pop
stc
outsb
pusha
mov
movsb
mov
aaa
repz
inc
mov
inc
fstp
fidivs
ja
cmp
xchg
cs
mov
adc
rclb
push
xor
jo
fiadds
ret
mov
mov
jecxz
pop
in
xor
lds
ret
xchg
cmp
aam
test
fimull
sbb
lcall
cltd
mov
icebp
lds
add
outsl
mov
in
movsl
fcmovnb
ret
ret
daa
mov
and
mov
aas
bnd
aam
sbb
push
ss
jp
in
fs
aaa
out
sub
cmpsb
mov
inc
iret
subl
or
fnstenv
and
push
sub
cld
sbb
std
ljmp
lahf
ja
popf
mov
mov
inc
enter
fisubl
into
push
ficompl
mov
int3
in
jmp
mov
lods
insl
test
sub
or
xor
fucomp
jmp
int
gs
jp
outsb
shlb
cmpsb
push
or
stos
or
fnsave
sahf
jns
pop
mov
push
pushf
je
sub
add
out
sahf
cmpsl
in
cvtpi2ps
cs
cmp
in
mov
leave
data16
xor
sbb
rcr
mov
ja
push
movsl
inc
movsb
xor
cmpsb
ret
mov
pop
out
loope
lcall
dec
jno,pn
jae
mov
jns
mov
enter
mov
movsl
xchg
and
pop
pop
scas
fistps
jge
mov
inc
test
clc
fs
fadds
inc
mov
adc
inc
decb
dec
xchg
add
dec
js
inc
loope
in
sarb
ss
cmp
and
negb
fs
insb
aas
jl
push
lea
roll
xchg
in
pop
stos
ret
ret
jne
mov
insb
mov
adc
test
xor
sahf
pop
aam
push
push
jo
jp
mov
jecxz
jecxz
icebp
mov
ret
jbe
xchg
aas
aas
pop
jbe
iret
mov
cmpsb
dec
xchg
scas
lahf
pop
loop
icebp
and
scas
out
aam
sbb
insl
push
add
js
xchg
es
int3
adc
push
or
fmuls
mov
aaa
mov
insb
inc
jo
mov
jecxz
mov
outsb
pop
outsl
jb
adc
add
in
dec
jmp
test
jg
xchg
adc
and
ret
mov
add
lahf
or
mov
sti
and
lret
js
in
out
jno
or
test
outsb
test
int3
pop
lret
push
movsb
ljmp
push
fstpl
push
sbb
or
bnd
outsb
subl
mov
iret
out
or
cmpsb
daa
test
in
lret
out
sub
fdivp
xor
cmp
cmpsb
sarb
cli
imul
insb
jp
cmovae
fistpl
out
sub
inc
jno
dec
pop
gs
test
or
or
lea
cli
inc
idivl
xor
popf
xchg
add
popf
lods
insl
aas
cmpb
jbe
cmp
sub
mov
fnstsw
xor
bound
xor
cmp
sbb
add
lret
mov
add
pop
inc
rclb
add
and
lods
lea
dec
pop
shr
fsubrs
aas
bnd
ret
notl
fadds
ret
psllq
in
pop
inc
cmp
lcall
out
xor
frndint
daa
push
int3
je
xchg
xchg
or
ja
sbb
cmp
add
add
push
xor
fldt
das
divb
lcall
sarb
and
iret
cmpsl
dec
or
sub
xchg
enter
fs
jl
push
dec
inc
scas
lret
outsb
sahf
jle
test
pop
mov
std
popa
aas
loop
in
scas
jle
clc
ds
stc
lods
arpl
mov
scas
leave
sub
mov
ror
or
jecxz
mov
sbb
outsb
ljmp
mov
jb
xor
cmp
sbb
jge
lods
pop
in
loopne
lea
test
das
pusha
movl
adc
cmp
imul
sbb
lods
adc
push
hlt
sbb
and
insl
and
dec
call
test
pushf
js
fnsave
popf
stos
mov
inc
shll
test
mov
cwtl
daa
imul
sub
clc
mov
pop
jne
je
fnstcw
sub
insl
add
adcb
add
testb
adc
insl
sub
in
jecxz
aas
add
push
call
popa
outsb
push
lcall
dec
jmp
sbb
scas
fdivrs
jg
cmp
xchg
sbb
lock
xchg
xchg
lcall
sbb
and
cwtl
cmpsl
imul
ret
loopne
mov
repz
popa
sbb
add
sbb
int3
add
inc
add
in
outsl
rclb
dec
and
and
cltd
adc
pushf
pop
cld
push
fsub
fstl
paddusw
cmp
mov
arpl
iret
xchg
data16
in
lock
sbb
movsb
inc
pop
divb
push
or
stos
jp
jno
out
ja
dec
add
mov
mov
sarb
xchg
dec
mov
loopne
icebp
mov
out
mov
add
add
adc
popf
dec
repnz
scas
lcall
and
out
loop
nop
in
push
int
in
cs
and
xacquire
adc
ret
in
in
lcall
int
test
cmp
jae
and
or
pop
jl
sahf
pop
mov
jg
mov
sarb
cli
and
mov
fimull
mov
adc
inc
int3
mov
inc
cmc
fstps
cmc
icebp
mov
push
dec
pop
leave
loope
cmpsb
mov
mov
rdmsr
lcall
xchg
pop
mov
addr16
into
hlt
mov
sbb
inc
popa
rep
mov
mov
loopne
fstl
mov
mov
sub
adc
jnp
idivl
mov
dec
fs
xchg
cmpsb
sub
and
cmpsl
pusha
pop
jns
adc
inc
es
jle
dec
sarb
mov
pushf
cwtl
sti
daa
sbb
lds
sub
adc
jge
in
daa
mov
pop
push
sbb
stc
add
bound
pop
dec
add
daa
sbb
lods
imul
cmpsb
lret
sub
aad
add
jbe
clc
or
xchg
ljmp
dec
sub
cld
sub
out
movsl
popf
jno
inc
into
clc
push
out
push
pop
roll
push
xlat
pop
aam
jge
imul
out
mov
into
leave
in
lds
and
sub
add
cmp
lds
pop
jp
jns
mov
into
inc
insb
js
movsl
fcmovu
out
test
pop
jb
out
lret
jne
outsb
xlat
mov
jmp
aaa
mov
imul
mov
dec
clc
lea
dec
stos
scas
xchg
aaa
jb
push
xchg
mov
pop
cmp
xlat
add
xlat
mov
dec
out
out
sub
movsb
sti
xor
in
ljmp
mov
pop
gs
insb
std
xchg
sahf
repz
xchg
xor
ret
cmpsb
inc
dec
or
or
fld
mov
push
hlt
in
shlb
push
out
lret
ds
add
loop
mov
jle
lcall
cmp
setnp
mov
negb
bound
xchg
fdivrp
mov
jne
push
mov
xchg
addr16
mov
stos
cmp
lcall
push
push
cld
add
xor
ret
arpl
sbb
mov
loopne
mov
out
inc
or
lcall
xlat
scas
pop
jg
mov
xchg
lret
sarl
jecxz
loop
inc
xchg
jae
mov
cmp
ss
sbb
fidivrs
outsl
jb
or
ljmp
fnstcw
mov
and
pop
mov
xlat
inc
pop
sub
xchg
mov
xchg
ss
xor
hlt
lret
aaa
xor
sti
testb
in
test
in
mov
andl
xor
jl
push
xchg
out
loop
cwtl
lcall
icebp
pop
push
xchg
iret
lods
inc
cmp
ja
sub
cmpsl
mov
addr16
cmp
addr16
and
or
sub
cmp
xchg
cmp
fidivrl
mov
gs
mov
jb
das
mov
shlb
sub
lret
ds
cmp
pusha
push
lock
pusha
jge
mov
ret
mov
dec
rorl
shr
pop
ret
movsb
pop
adc
leave
mov
and
adc
icebp
mov
mov
mov
cmpsb
pop
jge
inc
loop
lret
add
adc
dec
fildll
push
mov
cltd
mov
and
jge
out
or
test
push
shll
int
xor
mov
mov
xlat
insl
fstpl
or
icebp
arpl
mov
test
xor
aam
popf
jl
fs
pop
adc
mov
add
cmp
xchg
or
cmp
cmp
bound
imul
sbb
mov
scas
lret
mov
je
jl
and
inc
ljmp
push
nop
pop
mov
xor
pop
inc
or
adc
aas
xorl
imul
jge
aas
sub
inc
jb
pop
mov
jbe
cltd
jle
insl
rolb
out
lock
bound
cmp
mov
adc
je
pop
mov
sbb
andb
mov
sbb
ficoml
push
inc
lcall
dec
sahf
xchg
mov
cmpsl
test
pushl
lods
fiaddl
inc
test
push
sub
push
mov
push
mov
dec
xchg
push
inc
mov
dec
scas
mov
iret
imul
inc
out
or
dec
pusha
ret
xchg
out
fcomps
test
fmull
int3
lret
jp
pusha
or
das
inc
ja
je
js
jmp
xchg
jnp
pop
xor
pop
jbe
out
jg
test
sar
adc
jmp
add
mov
popf
movl
lods
pushf
adc
mov
cld
push
sarb
xchg
in
push
pop
xchg
in
xor
fwait
test
mov
xor
pusha
aaa
or
mov
mov
imul
je
ret
xor
hlt
shll
inc
xchg
inc
addb
popf
hlt
movsb
ret
mov
fldcw
mov
sbb
jnp
cltd
mov
push
lds
adc
pop
dec
and
insb
jno
sub
shlb
rclb
or
imul
jnp
ret
sbb
test
insb
pop
ret
ja
jge
test
inc
cmpsl
pushf
adc
jecxz
jp,pn
mov
or
mov
jmp
gs
sbb
add
lahf
ret
push
bnd
push
dec
int3
xor
bswap
std
jecxz
js
pop
test
mov
inc
and
loope
push
call
dec
pop
xor
sub
imul
roll
mov
into
pop
add
fdiv
sti
add
push
sub
xchg
or
jnp
push
ret
popa
stos
mull
or
xchg
adc
vpsubb
mov
push
jge
scas
sbb
push
and
aaa
or
sbb
and
dec
mov
jno
mov
push
es
jmp
in
inc
call
ljmp
xor
scas
or
daa
stos
add
idivb
cmp
xchg
push
and
fidivrs
dec
and
push
cmpsl
rorl
mov
loopne
pop
mov
ja
inc
pop
popf
pusha
jae
or
movsb
xchg
rsqrtps
loope
cmpsl
xchg
mov
pop
loop
push
outsl
pop
push
cmc
and
inc
sbb
xchg
call
nop
leave
mov
push
int3
dec
mov
pop
mov
sbb
adc
xchg
pop
imul
push
adc
mov
popf
inc
fldcw
adc
mov
repz
mov
lea
out
lods
adc
and
stos
aad
lock
dec
iret
push
in
adc
gs
insl
aad
and
jge
arpl
dec
xor
ds
mov
scas
inc
call
movsl
in
popf
sub
push
aaa
mov
push
fstps
cmp
add
sbb
popf
mov
mov
jae
popf
cmp
shlb
fisubrs
subb
sub
std
cmp
pop
and
pusha
cltd
insb
idivl
mov
add
gs
loop
inc
jne
dec
test
inc
imul
mov
andl
mov
sbb
sbb
mov
je
call
mov
jmp
call
daa
and
inc
push
or
dec
jnp
sahf
cli
dec
xchg
adc
mov
cmc
bound
jecxz
and
lret
xchg
pop
pop
mov
repz
cs
sbb
pop
int
scas
or
adcb
sbb
add
stc
mov
movsb
mov
pop
xor
mov
sub
popf
mov
cmp
xor
addr16
push
sahf
mov
sub
cwtl
lahf
fsts
dec
inc
dec
int
adc
jmp
dec
jbe
inc
imul
arpl
outsb
xchg
divl
jo
mov
mov
dec
js
push
in
xor
out
push
in
dec
inc
dec
lods
repz
dec
or
in
cmpsl
mov
sahf
mov
stos
sub
adc
xor
cld
push
fdivl
inc
mov
xchg
pop
inc
mov
sbb
pop
push
ljmp
fld
and
xchg
add
sub
cmp
cmc
xchg
pushf
test
push
fbld
push
add
lods
adc
mov
xor
jg
push
jl
lret
xor
push
iret
jge
cmc
jb
jmp
sub
notb
hlt
loopnew
addr16
xchg
xchg
stos
ret
and
stos
gs
scas
or
or
popa
mov
fisttps
bound
cmp
cmpsl
es
xchg
mov
push
aad
stos
push
sub
js
out
jge
and
jg
xchg
push
mov
cmp
into
stos
rcl
or
mov
shrb
xchg
mov
sub
lods
pop
pop
fisubs
xchg
ret
out
in
cs
add
push
mov
imul
sub
sbb
sub
std
out
add
stos
cmp
nop
lock
pushf
push
inc
mov
inc
push
loope
lea
mov
jg
jnp,pn
mov
xchg
jo
fwait
lahf
inc
push
jge
cmpsl
in
cld
add
das
sbb
xchg
or
icebp
lret
adc
or
enter
sbb
nop
icebp
sub
test
inc
push
pop
cltd
cmp
or
mov
jle
push
cmpsl
mov
adc
push
sub
xor
mov
mov
push
adc
dec
sbb
inc
lods
cmp
mov
push
call
std
cmp
fnstsw
inc
pop
adc
lock
xchg
cltd
jne
and
cltd
sub
stos
add
mov
daa
cmp
mov
lock
lea
mov
testl
sub
lea
movsl
sub
mov
incb
repz
cmc
inc
loopne
sub
mov
stos
push
stos
daa
mov
es
push
sahf
fisttpl
sbb
in
add
jae
mov
addr16
jmp
lret
xchg
mov
dec
jnp
repz
xchg
mov
je
int3
ret
dec
cli
movsl
xor
inc
stos
push
push
jne
daa
sbb
test
pop
shlb
leave
orb
or
push
or
jbe
sub
in
jns
xchg
std
pop
cmpsl
popf
push
imul
cs
stos
or
mov
xor
ja
stos
bound
jp
mov
dec
xchg
or
popl
push
ss
or
call
dec
fnstsw
subl
mov
xchg
xchg
out
in
int3
clc
orl
dec
xchg
aad
data16
cltd
icebp
jge
lahf
jle
xchg
imul
sub
xor
xor
mov
or
incb
jb
inc
test
int3
jno
les
lret
pop
cs
pop
cmp
fwait
lret
fstps
pop
sub
jb
xor
mov
fmulp
xchg
push
dec
shrl
mov
faddl
arpl
push
mov
sbb
push
andl
adc
mov
add
int
sub
sub
fcomps
adc
cltd
dec
push
jo
pop
dec
test
fnstcw
mov
add
sub
movsl
jne
scas
cld
sar
xchg
flds
xor
pop
xchg
aas
sbb
cmp
sub
fnsave
mov
jmp
dec
movsl
incl
out
jge
jb
lods
decl
lcall
sti
jg
sub
push
mov
jns
cmp
jb
cwtl
pop
dec
xchg
mov
inc
adcb
or
pop
lock
jge
aaa
push
dec
pop
lret
adc
xchg
and
xor
sbb
mov
pop
nop
xor
aas
imul
test
jp
jmp
cli
shr
lret
adcl
cs
enter
orl
jbe
sub
clc
push
sti
ds
test
rcr
jnp
push
hlt
sbbb
sbb
or
stos
inc
mov
popf
xor
push
sarl
sub
xchg
xor
jecxz
cmp
stc
xchg
clc
jnp
sub
dec
lret
cld
std
ljmp
cmovg
pop
xchg
xchg
ljmp
das
sub
mov
xchg
ret
jmp
dec
cmc
push
test
xlat
cmp
and
fwait
mov
fiaddl
cli
cltd
shrb
jmp
aam
jnp
das
lods
roll
fmul
inc
ja
out
push
stos
pusha
popf
shll
idivb
es
mov
push
inc
cmp
cmp
mov
mov
repz
in
xor
sub
push
dec
cs
xor
int3
sbb
push
xor
mov
dec
insb
and
loope
xchg
cmp
sbb
or
fs
jne
mov
mov
jae
jecxz
cmp
enter
pop
das
imul
clc
sub
popa
push
dec
dec
movsl
sbb
jb
movsb
repnz
bound
cld
mov
cmpsb
sbb
xchg
adc
jbe
aam
xchg
movsb
mov
outsb
fcompl
shlw
push
mov
in
and
push
xor
data16
inc
pop
insl
lcall
ljmp
jecxz
ds
ja
loope
mov
mov
xchg
adc
popfw
cmc
sub
or
jae
int3
mov
jge
jecxz
lea
pop
pusha
lcall
cmpxchg
mov
and
cmp
inc
movsl
cmp
push
cmpb
inc
pop
cmp
dec
push
movsl
add
xchg
jns
dec
mov
gs
inc
nop
test
xor
repnz
enter
stc
lds
inc
mov
stos
cmp
mov
test
es
lods
sub
shr
test
or
shll
cmp
xor
push
push
dec
mov
push
stos
lcall
leave
andl
dec
notl
mov
out
add
adc
sbb
fbld
int
jae
mov
lods
inc
mov
in
pushf
icebp
mov
pop
roll
xchg
xor
lcall
dec
mov
xchg
scas
and
lret
or
xor
mov
outsb
lret
mov
lret
push
sbb
adc
lods
sbb
mov
mov
iret
movaps
jno
mov
test
shrb
bound
lcall
lods
mov
mov
sbb
ljmp
and
scas
cmp
inc
sub
imul
and
mov
xchg
push
fstl
inc
push
ja
push
leave
scas
negl
sub
int3
hlt
in
mov
out
dec
mov
shl
push
mov
inc
dec
jle
stos
sub
lahf
adc
je
or
shrb
pop
aas
adc
das
insl
cld
inc
push
mov
dec
ficomps
test
fwait
push
mov
xor
loope
mov
adc
and
add
xchg
shlb
mov
dec
int3
xor
out
addr16
ljmp
xchg
dec
dec
add
jbe
hlt
mov
dec
hlt
push
pop
cld
mov
shlb
insb
jnp
lds
sahf
mov
pop
push
lea
arpl
outsb
push
outsl
aam
fwait
cmp
imulb
bound
sbb
hlt
loop
scas
add
dec
xorl
inc
dec
lods
jmp
loope
dec
xchg
fucomip
sahf
mov
or
loop
cwtl
dec
jle
pop
pop
sub
xchg
sub
xchg
dec
decl
shr
sbb
jns
pop
mov
add
mov
subb
push
push
lcall
pop
xor
loopne
das
cmc
fnsave
loopne
push
or
xor
push
ret
shll
cwtl
fisubs
loope
jle
xor
mov
mov
dec
push
push
sbb
xlat
aaa
lcall
bound
fisttps
push
xlat
adc
movsl
fs
mov
popa
int
or
jbe
adc
mov
adc
je
mov
push
stos
outsl
mov
fwait
lock
push
cltd
add
mov
xlat
in
loopne
inc
std
xor
and
cmp
rolb
lret
sub
ds
shlb
push
mov
sbb
sarb
add
aam
addb
mov
push
mov
insb
mov
cli
or
sti
jl
push
lds
shll
popf
xchg
mov
imul
bound
dec
jge
fwait
sbb
shlb
inc
adc
hlt
xor
pop
insb
xchg
pop
inc
mov
cmp
pop
into
xchg
inc
sub
cmpsl
pushf
lods
jp
in
mov
fcomps
adc
mov
mov
push
cmp
sbb
cmp
sbb
dec
ja
push
sbb
in
jg
pop
fsub
ja
data16
or
enter
xchg
mov
mov
pushf
faddp
pop
mov
sub
rcll
mov
sub
out
shll
inc
aam
ror
mov
sub
xchg
lea
ds
add
and
fcomps
mov
fcomps
rcrb
cmp
dec
insb
jbe
out
mov
out
jnp
dec
mov
adc
sar
test
xchg
inc
sbb
inc
push
shlb
jmp
dec
out
sub
stos
mov
mov
dec
push
repz
cmp
filds
jp
out
int
jbe
push
push
add
lds
lods
and
inc
aam
in
test
pop
fnstenv
int
or
daa
rorb
pop
lods
lret
jle
dec
repz
mov
cmp
cmpsb
mov
lcall
insl
sbb
sbbl
jle
fdivl
mov
xor
mov
int3
pop
cli
sub
push
into
jmp
xor
in
xchg
mov
aad
out
xor
inc
push
jnp
inc
pop
loop
leave
push
out
adc
das
mov
xchg
mov
mov
mov
scas
into
pop
imul
dec
leave
ficompl
cli
push
cmpsl
push
xor
jecxz
mov
loope
xor
push
push
es
arpl
rcr
cmp
fucomip
cmp
jnp
xchg
imul
jo
inc
in
test
jge
mov
fwait
xor
das
add
notb
fidivrl
dec
in
sbb
aad
cltd
cmpsl
mov
sub
cvtps2pi
fldl
lods
pshufw
cmp
sub
insl
stos
out
rorl
xor
cli
inc
lods
mov
mov
daa
cmp
or
inc
push
lods
dec
outsb
xchg
test
sbb
xor
movsb
clc
mov
insl
scas
insb
push
pop
imul
inc
and
cmpsl
mov
daa
test
arpl
fisttpl
push
bound
shl
jbe
icebp
add
pop
int
xchg
push
cwtl
inc
test
dec
push
pop
jmp
adc
pushf
cmc
push
xchg
cs
filds
bound
xlat
cld
ss
fdivs
inc
cmc
out
lods
aas
fwait
pusha
imul
dec
arpl
dec
mov
movsl
push
test
push
es
cmp
xchg
cmp
out
cwtl
gs
imul
lcall
xor
xchg
and
adc
in
imul
popa
int
mov
aad
pushf
out
sub
xchg
or
and
in
dec
sbb
stos
push
mov
sub
int
mov
movsb
pop
jb
dec
mov
mov
mov
out
rol
xchg
cmp
inc
jbe,pn
idivl
pop
dec
dec
inc
cmpsl
lahf
add
lret
sub
mov
icebp
mov
lea
inc
xor
dec
loop
lods
ficoml
xor
xor
add
inc
shl
and
fcomp
xor
pop
xlat
dec
xorb
inc
pop
das
mov
sbb
fidivl
lods
sub
stc
clc
int3
jmp
lds
and
mov
fstpt
movsl
aam
and
loop
sbb
pop
push
sub
outsl
sbb
cmp
scas
or
push
xor
pop
pop
test
push
shlb
cmpsl
lahf
add
cs
or
push
mov
add
adc
cs
jae
sti
test
lods
outsb
jle
es
ljmp
repnz
and
lret
lock
pop
shl
fadd
sub
into
inc
sub
fsubr
jecxz
xchg
sub
fdivrl
loope
dec
add
rorl
cmpsl
mov
push
dec
mov
add
idivl
nop
enter
fcomps
rol
arpl
ficompl
pop
jl
jb
lea
aad
insb
sub
addr16
ss
mov
add
insb
xlat
jo
mull
mov
int
xor
pop
sbb
fdivl
sub
loope
cmp
lret
aad
xchg
or
fs
cmpsl
test
in
mov
loope
pop
icebp
jb
jle
jno
inc
xor
or
or
idivl
dec
mov
or
aad
xlat
push
mov
pop
out
scas
or
cmpsb
and
repz
cmp
dec
js
idivl
rcll
ficoml
in
adc
or
xchg
mov
hlt
inc
xor
int3
and
pop
add
xchg
xor
fchs
jle
outsl
test
xor
int3
cmc
ret
xchg
cmp
faddl
xor
push
hlt
mov
push
push
mov
adc
sarb
or
ss
repnz
jmp
mov
les
push
leave
ficomps
dec
xchg
and
push
xchg
fs
mov
jno
jmp
aam
inc
test
push
fwait
mov
mov
inc
movsb
gs
fcom
and
fcmove
bound
insb
jbe
fisubl
and
jp
jo
nop
sub
xchg
lea
inc
sbb
fstl
add
pushf
in
outsb
dec
movsl
ss
add
iret
push
int3
push
mov
inc
inc
ficomps
push
stos
add
test
notl
mov
cmp
stos
adc
dec
push
movsb
lcall
mov
jp
and
leave
mov
inc
in
sub
cmp
fwait
cwtl
and
pop
ffreep
movsl
outsl
or
outsb
mov
xchg
aaa
outsl
xorb
aam
xchg
jge
mov
mov
jge
dec
iret
add
imul
test
jb
cld
lret
rcll
sti
jmp
lds
icebp
ds
jae
add
pusha
jp
add
fs
cmp
out
aaa
scas
and
mov
xor
inc
mov
arpl
lahf
andl
idivb
lods
aas
jae
sub
xor
adc
adc
pop
jecxz
or
data16
fnstenv
cmpsb
and
mov
dec
inc
cmc
daa
push
inc
xor
test
dec
sbb
outsl
pop
xchg
and
pop
lret
daa
adc
xchg
test
repz
jmp
mov
mov
jbe
cltd
jecxz
iret
cmp
pop
sub
cmc
ret
jno
mov
ret
fincstp
or
les
adc
dec
ja
test
insl
repz
loop
xor
lods
filds
int3
mov
inc
pop
lahf
cmp
iret
mov
imul
mov
inc
push
and
xchg
inc
aas
je
xchg
jae
inc
push
xchg
sahf
inc
int
xchg
mov
or
mov
mov
sarb
cmc
je
dec
repz
cld
jne
mov
sbb
dec
jmp
inc
in
dec
add
inc
pop
lcall
movsl
push
lea
adc
dec
adc
jne
pusha
cmp
push
leave
mov
scas
mov
dec
ret
rcrb
pop
jns
movsl
in
pop
repnz
loopne
fsub
inc
daa
mov
bound
jnp
mov
lods
call
loope
ss
dec
loop
xchg
sub
push
mov
dec
mov
test
pop
test
jns
pushf
ss
pop
sub
enter
xchg
pusha
mov
lret
and
jmp
aam
cmpl
xor
daa
leave
pop
into
sbb
mov
aad
adc
popf
lahf
inc
je
push
ss
cld
mov
jae
test
mov
daa
or
jns
and
and
fists
dec
mov
stc
in
rol
icebp
and
xchg
pop
mov
cmp
pop
inc
pop
dec
dec
mov
xor
jecxz
push
aam
sub
lds
cmp
cld
jo
pop
cmp
adcb
imul
sub
cmpsl
jl
enter
adc
and
clc
les
scas
loopne
test
ja
inc
repz
addr16
shl
test
subl
icebp
jle
mov
scas
rcrw
mov
icebp
shrb
jl
inc
push
rorb
sbb
mov
xchg
mov
cs
mov
or
add
mov
dec
loopne
push
shll
push
shll
mov
mov
lods
pop
adc
push
pop
push
movsl
out
adc
test
or
cmp
xchg
cmp
fwait
mov
mov
pushw
adc
cmp
jle
mov
and
repz
mov
imul
sbb
movsb
inc
add
mov
sbb
test
or
jb
movsl
and
mov
jo
loope
aas
js
mov
or
lret
in
push
fstpl
mov
xchg
fdivl
stos
hlt
andb
scas
jo
das
inc
xlat
xchg
mov
and
lods
fcomp
insl
enter
bound
insl
filds
shlb
in
dec
fcompl
mov
add
jge
gs
aaa
push
cmp
ss
lcall
adc
pushf
and
shrl
lea
das
cmpsl
lea
and
cmp
add
jecxz
call
sub
xchg
loopne
int3
adc
xor
dec
sub
aad
sub
mov
fidivrl
lahf
add
arpl
clc
mov
push
mov
push
into
testb
aaa
jp
mov
test
fxtract
ds
data16
push
ja
mov
jbe
inc
outsl
pop
out
pop
insb
sub
mov
out
mov
ror
push
lds
jb
xchg
jl
inc
dec
rcll
aas
pop
aam
nop
emms
mov
lret
cmovo
into
test
outsl
shll
pop
mov
es
inc
mov
jmp
repnz
adc
cmp
out
cmp
sub
pop
adc
shl
cmp
bound
mov
dec
xchg
pop
mov
cmp
mov
in
cwtl
jl
xor
testl
jae
adc
push
lret
and
scas
daa
push
xlat
mov
lea
imul
js
push
cmp
cmpsb
push
into
pop
rcl
xchg
or
dec
loop
or
imul
insl
icebp
inc
cmc
enter
cld
les
mov
adc
push
jle
cmpsl
stos
testl
imul
jle
movsl
lahf
and
and
jl
sub
fidivl
sahf
mov
insl
push
mov
cmp
mov
in
sub
cmp
xchg
pop
rorb
pusha
in
outsl
or
int
cmp
popf
mov
lcall
enter
pushf
ss
into
repnz
pop
enter
sub
sub
and
mov
mov
mov
add
hlt
and
into
ret
gs
push
mov
and
movsb
push
insl
pop
aaa
imul
xlat
sti
xchg
jle
aad
loop
sub
std
pushf
jnp
leave
ret
mov
push
xlat
mov
out
push
jnp
dec
addr16
adc
loop
and
sbb
jo
push
imul
push
xchg
nop
jno
push
insl
push
cltd
inc
cs
and
mov
stos
lret
dec
add
push
and
jnp
testb
xor
icebp
jne
pop
xor
mov
dec
imul
cmp
jbe
jmp
xor
xlat
dec
jp
adc
push
insb
adc
inc
movsl
lret
and
sbb
outsl
or
test
pop
push
cmp
add
test
arpl
push
fwait
and
test
jge
mov
aaa
daa
imul
adc
push
mov
cmc
lods
stos
push
cmpsb
rorl
faddl
mov
shl
outsb
into
enter
dec
dec
mov
lret
cli
and
or
cmp
jno
mov
pusha
aam
fsubl
sub
xor
and
pop
push
outsb
dec
dec
fiaddl
pop
out
sti
in
nop
test
fucomp
cld
sbb
jnp
idivl
loopne
mov
mov
push
jb
xor
and
lods
and
imul
loopne
dec
cmp
lret
scas
mov
push
mov
push
pusha
adcl
outsl
or
pop
pop
sbb
inc
enter
das
adc
lcall
fdiv
ret
xchg
pop
inc
sub
add
sbbb
enter
sti
add
pop
rcr
enter
sub
jne
lret
enter
icebp
and
aam
into
cmpsl
addr16
sbb
cmp
mov
xor
clc
sbb
xchg
push
pop
shlb
stc
imul
jno
in
push
cmp
int
sbb
xchg
out
aaa
addl
xor
dec
cmpsb
gs
add
add
pop
mov
xor
call
in
out
cmp
push
in
test
out
and
das
xlat
sbb
je
movsl
add
push
loope
add
movsl
dec
add
sbb
movups
jl
or
inc
jecxz
fidivs
out
pop
adc
stos
jle
adc
push
jl
test
cmp
adc
xor
sbb
lods
cli
inc
loopne
scas
push
xchg
xchg
adc
mov
js
add
pop
xor
scas
fisubl
inc
push
addl
or
or
or
ret
hlt
movsl
mov
push
ret
push
icebp
jnp
xor
leave
lock
jbe
imul
cli
sub
fimull
dec
into
subb
xchg
sbb
stc
lock
xchg
aas
mov
push
and
xchg
mov
outsl
lods
sbb
subl
jmp
loop
cmpsb
inc
or
sti
loope
and
or
in
int
push
add
sbb
fadd
cwtl
pushf
jl
pop
popf
lods
inc
jecxz
loopne
enter
mulb
bound
lock
sahf
jge
ret
in
stos
movsl
std
push
xchg
and
lods
je
push
jmp
jl
sti
jns
mov
or
jle
mov
xchg
adc
xor
enter
movb
cmp
aaa
std
xor
xor
mov
lcall
and
xchg
jmp
call
shlb
sbb
mov
inc
push
push
inc
mov
and
fsubrs
pop
testl
xor
cld
jmp
add
in
jge
jmp
sbb
hlt
mov
fldl
mov
or
lret
aad
cld
repnz
sbbl
jecxz
push
xchg
jecxz
bound
out
es
jge
cmp
mov
and
mov
mov
and
test
lds
insb
jbe
leave
push
int3
adc
stc
dec
dec
dec
jmp
sbb
popf
inc
xor
or
push
andb
fstpl
or
addr16
call
andl
mov
pop
aaa
into
cmp
lahf
xor
pop
pop
and
lods
sub
scas
inc
in
sbb
mov
ja
xchg
in
das
incl
xchg
xchg
sbb
mov
test
mov
loope
iret
xlat
js
xlat
pop
cli
aad
xor
stos
sub
jge
mov
mov
mov
xor
cltd
sub
in
mov
movsl
xlat
add
jbe
mov
outsb
inc
scas
bound
cmova
js
scas
mov
or
pushf
mov
cld
adc
loope
jge
xlat
negl
push
fldcw
test
xorb
das
or
push
mov
in
mov
adc
fadd
into
pop
popa
jae
ret
aam
and
cmp
jae
mov
loopne
fsubrl
movsb
div
cmp
jnp
pop
mov
rorb
aam
mov
mov
pop
jmp
mov
imul
mov
inc
and
jge
inc
mov
jmp
mov
scas
icebp
or
mov
enter
jnp
cmp
sub
push
mov
mov
mov
jg
pusha
or
mov
or
mov
out
adc
int
sub
cld
and
leave
xchg
jle
pop
pop
mov
sub
sbb
sbb
ror
popf
sti
in
stos
mov
gs
out
lods
xchg
push
cld
or
fildll
out
aad
jae
push
mov
sub
or
xor
aad
in
xlat
loop
scas
pop
les
loopne
aad
add
adc
in
and
push
dec
outsb
and
ds
out
jg
mov
xchg
xchg
mov
sub
sub
fisttpll
test
push
insl
pop
push
repz
push
xor
pop
lods
adc
jo
mov
xor
lret
pop
jle
dec
cmp
out
js
jae
cmpw
ja
insl
add
inc
insb
mov
cltd
add
mov
sub
jo
outsb
repz
mov
mov
ds
xor
dec
lods
pop
aaa
imul
fwait
lds
or
inc
and
push
mov
std
or
loopne
inc
aaa
or
push
xor
xchg
mov
xchg
adc
mov
inc
sub
push
xchg
pop
mov
mov
addr16
cmp
add
sarb
movsl
and
jge
addl
insl
mov
imul
fdiv
dec
lods
fldt
sub
cltd
shlb
mov
jl
loope
push
pusha
arpl
adc
sub
jge
scas
add
xor
add
mov
movsl
pushf
xor
dec
push
jmp
push
aad
or
and
in
aam
mov
mov
cmpsl
into
push
sub
filds
imul
ss
adc
sbb
icebp
jo
test
in
jno
orl
xor
xor
push
fiaddl
jno
orl
dec
jmp
push
subl
and
adc
into
insb
clc
sbb
test
in
cmp
xor
test
or
ret
cmp
rcrl
je
insl
cmp
stos
push
popf
cmp
repnz
iret
fmull
pop
notb
push
negl
inc
leave
in
pop
mov
lods
or
jge
push
outsl
testb
xor
jo
and
in
mov
out
dec
mov
mov
jmp
adc
fiadds
add
or
cmp
call
jne
test
pop
mov
loope
and
aad
push
push
fisubrs
add
je
enter
push
adc
aam
scas
push
pop
push
arpl
loope
xchg
pop
push
push
movsb
sub
lock
or
es
iret
adc
cmp
inc
jl
push
js
mov
xor
lahf
add
sub
popf
push
insb
cmp
mov
sub
xchg
into
movsb
jns,pn
jae,pn
mov
and
and
xlat
push
repz
mov
dec
lods
pop
and
mov
sbb
jmp
enter
into
js
lret
mov
pop
iret
into
clc
xor
mov
daa
xchg
push
push
mov
and
fucomip
mov
lock
sub
fucom
sub
push
cmp
add
sub
std
cwtl
scas
mov
cs
mov
imul
stc
in
or
sbb
outsl
xchg
fsubrp
fldcw
std
stos
xor
mov
imul
dec
mov
fsubr
fldenv
test
out
mov
ljmp
decb
loope
push
mov
push
lea
jge
xchg
jns
dec
out
cld
jp
cli
adc
imul
scas
fcomi
js
jle
cmc
mov
xor
insl
out
lods
fs
call
cmp
cmp
mov
dec
out
xchg
jmp
pop
push
daa
stos
fistpl
push
pushf
pop
push
sbb
lahf
arpl
cs
sbb
js
xor
mov
and
jle
loopne
adc
push
loope
add
mov
push
das
lds
jno
sub
xor
mov
add
dec
inc
loope
push
cmp
lock
pop
and
test
cmpb
sbb
mov
cld
mov
lahf
add
jmp
xor
mov
mov
mov
xor
ds
xchg
mov
test
aam
mov
mov
add
adc
push
in
or
hlt
in
jne
popa
or
xchg
jb
add
ja
push
xchg
inc
stos
sahf
lods
repnz
jb
xchg
jg
out
dec
add
rcrb
test
xchg
mov
jno
faddp
add
data16
les
subb
stc
sub
xchg
cmp
pop
leave
cwtl
add
enter
notl
rcrb
xchg
aad
mov
insb
rcl
push
mov
scas
cmp
mul
lahf
iret
jnp
mov
sbb
insb
outsl
lret
jmp
das
cwtl
mov
out
mov
call
idivb
sub
mov
inc
in
dec
mov
cld
pop
sarb
mov
add
inc
sahf
lods
das
mov
call
loope
cli
jle
call
push
jns
cmp
cld
shl
push
cli
mov
out
popa
xor
cmp
sbb
lcall
jmp
fadd
and
or
je
cs
mov
loopne
add
fnstcw
dec
call
fisubrl
mov
push
dec
subb
addr16
sbb
pop
or
call
int3
jle
lret
addb
cwtl
test
push
daa
fisttps
mov
in
cli
push
fs
push
dec
popf
mov
int
in
dec
arpl
test
mov
jns
and
and
sbb
and
mov
incl
ljmp
test
push
lahf
xchg
dec
cmp
popf
cmp
cmp
scas
fiadds
mov
aam
mov
lods
mov
push
js,pn
clc
jb
fs
xchg
mov
cli
test
jp
or
push
xchg
jp
loope
out
mov
cmpsb
inc
popa
xorl
mov
sbb
mov
push
lods
push
push
jb
lahf
sub
into
jl
mov
fisttpll
fisubrs
fiaddl
mov
leave
xchg
dec
sub
icebp
cwtl
add
inc
cmp
shl
enter
cmp
sbb
or
xchg
repz
and
pop
xchg
inc
jmp
test
shll
fstp
push
pop
aaa
and
sahf
fcmovu
fdivs
dec
inc
push
hlt
ret
jb
sub
push
out
dec
jne
jb
insl
inc
pushf
outsb
mov
test
fldcw
mov
jmp
jo
jmp
mov
xor
sub
je
loopne
push
in
nop
test
and
in
xor
sbb
xchg
insl
idivl
ss
push
es
push
les
push
xorl
orb
loope
jp
fmuls
add
movsl
dec
cmpsl
dec
sub
in
push
clc
jl
data16
add
sarb
pop
mov
in
mov
out
addl
and
sub
data16
push
and
mov
xchg
mov
xchg
pop
hlt
aam
ret
pop
test
cld
imul
sbb
stc
fstps
pusha
mov
push
dec
imul
out
push
repz
inc
andl
mov
aad
lcall
and
mov
cmc
mov
push
or
lock
inc
lods
in
xor
cltd
arpl
xor
insl
and
xchg
into
jne
je
dec
xchg
inc
push
xchg
mov
mov
xor
nop
inc
je
lahf
adc
or
cmp
loop
hlt
lret
out
fbld
dec
daa
sub
outsl
data16
mov
add
test
ljmp
cld
xor
cmp
xchg
std
adcl
lock
test
adc
popf
add
enter
pushf
pop
test
mov
xor
jl
add
xchg
cwtl
or
push
mov
es
hlt
int3
xor
imul
push
into
inc
and
cmp
dec
jecxz
rcll
pop
mov
mov
lcall
xchg
dec
xchg
rorl
in
add
lods
aas
and
adc
cmc
aam
adc
mov
sbbb
jnp
sbb
mov
cld
adc
int3
mov
and
sbb
movsl
outsl
mov
cld
xor
jnp
popa
rolb
ret
dec
repz
cmp
xor
jg
pop
sbb
jp
jo
pop
jle
outsl
popf
das
add
add
pushf
ret
adc
mov
mov
mov
movsb
fs
stos
out
add
cmpsl
dec
cmp
mov
int3
xchg
rclb
outsl
lea
or
insb
and
cltd
orb
jno
add
xchg
lret
stc
pop
imull
or
adc
outsb
adc
xchg
into
xchg
or
mov
jge
in
in
mov
pop
into
clc
cmp
sbb
or
popf
cmpb
jl
jmp
out
stos
outsl
popf
jnp
das
push
scas
add
adc
iret
jge
lahf
out
sbb
pop
jb
std
cli
std
xchg
xchg
loope
or
fstpl
outsl
aas
push
stos
pusha
mov
jb
pop
je
and
dec
test
adc
ret
add
dec
pop
pop
cmp
sub
push
push
rcll
mov
or
pop
cmp
sub
push
mov
cmp
adc
pop
xchg
aaa
mov
push
cmp
mov
lret
adc
xor
cmp
pusha
mov
jecxz
mov
mov
push
xchg
mov
mov
inc
cltd
push
incb
inc
lcall
and
enter
mov
adc
cmpsb
or
sahf
dec
xchg
test
xchg
jge
pushf
cmc
aas
and
mov
gs
jl
ds
fisubrl
nop
lcall
jno
lods
ja
dec
lahf
adc
sbb
jno
insb
loopne
sbb
xchg
pushf
outsl
daa
shll
mov
bound
ds
bound
pop
pop
es
push
inc
in
mov
adc
and
fildl
or
add
push
and
push
push
out
push
lret
mov
loopne
inc
sbb
cmp
sub
cli
shll
lea
lods
stc
insb
inc
loop
push
pop
cli
movsl
and
pop
pop
sub
inc
movsb
jp
mov
fs
dec
pop
adc
sbb
ret
movsl
lds
xchg
mov
sbb
aas
xor
test
mov
loopne
out
cwtl
out
lock
cmpsb
fcomps
data16
xor
adc
dec
cmp
mov
sbb
inc
or
rclb
or
push
sbb
cli
dec
xchg
stc
dec
aas
xchg
mov
mov
jnp
pop
push
adc
lock
insb
jnp
cmp
xchg
xchg
and
popf
clc
sub
cld
adc
and
outsl
mov
inc
sub
negb
cmpsl
fnstenv
iret
dec
lods
fnstsw
iret
push
addr16
pop
pop
and
xchg
in
xor
push
call
iret
aas
test
sbb
add
ds
loop
outsb
ret
cmp
test
sti
out
jecxz
cli
lret
cmpb
popa
push
das
orl
repz
add
ror
jns
mov
sarl
movsl
es
mov
sub
push
add
outsl
inc
jge
xor
loope
mov
mov
add
test
outsl
inc
mov
push
jp
dec
stc
mov
xor
adc
sbb
pop
test
cmp
adc
pop
cmp
mov
and
fdivr
and
scas
lds
xorb
or
pop
or
sti
in
sbb
push
pop
xor
or
or
or
push
cmp
mov
loop
lock
jbe
int
mov
loope
jno
pop
clc
cmp
jno
daa
xchg
jne
fimull
dec
fisubrl
int3
pop
mov
in
sbb
sti
into
push
ljmp
cmpsl
loop
int
xchg
popa
je
and
shlb
sbb
lahf
xor
in
cmp
push
cltd
or
insb
insl
push
loop
shrb
mov
cltd
rorl
fldt
sti
fstl
mov
lret
loop
mov
mov
decb
fdivrl
cltd
jmp
mov
pop
aaa
xorb
bound
scas
xchg
xchg
pop
cmp
dec
mov
cmpsl
mov
dec
into
adc
int
dec
mov
mov
jae
mov
mov
mov
push
pop
mov
add
negl
inc
jg
test
pop
fidivs
or
pop
xor
dec
pop
out
add
inc
test
inc
inc
cld
shrl
pop
stos
dec
lds
xchg
fstps
inc
cld
jb
or
das
xor
xchg
sbb
pop
hlt
adc
in
jnp
sbb
inc
xchg
xchg
sub
dec
jbe
jl
pop
pop
cmp
int
scas
lret
mov
divl
out
in
adc
cmp
paddusb
out
std
inc
xchg
jns
or
rcl
enter
adc
fidivs
adc
aam
xchg
int3
imul
test
push
stos
mov
sti
jmp
fs
scas
pop
xchg
mov
fmuls
dec
cmp
mov
int
dec
dec
pushf
jnp
in
sub
lcall
movsb
mov
mov
adc
cmp
in
iret
cmpsl
sarb
out
push
out
lods
push
mov
dec
lods
aad
aas
cli
aad
cmp
mov
lods
pop
js
push
in
pop
jb
push
mul
nop
enter
stc
rcll
push
dec
rcll
cmpsb
gs
pop
aam
mov
xchg
in
dec
addr16
mov
icebp
push
lcall
sahf
add
insb
cmc
rcrb
clc
push
cld
negl
into
iret
out
outsl
in
push
jns
adc
movsl
clc
cli
cmp
aas
divl
in
push
xchg
rcl
loop
dec
mov
mov
loop
cmp
jg
cld
mov
repnz
int3
mov
movsb
mov
sub
loop
test
inc
jecxz
enter
push
inc
outsb
rorl
and
scas
mov
in
lods
lea
fbstp
xchg
je
and
rclb
mov
call
iret
ss
push
addb
add
arpl
cltd
sub
xchg
add
sub
inc
stos
popf
ror
icebp
mov
xor
mov
insl
cltd
mov
push
rcrl
jnp
jecxz
jg
ret
repnz
push
outsl
add
daa
mov
ret
or
es
and
dec
jp
ret
aas
mov
mov
push
or
xlat
inc
mov
mov
jo
dec
loope
dec
mov
mov
ss
adc
jmp
jbe
imul
and
insl
mov
pop
pop
addr16
mov
ret
jbe
js
pop
inc
push
mov
dec
les
ret
test
ja
sub
imul
cmpsb
add
mov
dec
inc
jmp
cmc
inc
dec
mov
rcl
jle
aas
sub
ljmp
xchg
ds
mov
lcall
or
repz
lods
dec
testb
into
aad
sbb
pop
push
rorb
jnp
dec
call
and
cmpl
xor
lea
mov
lds
les
fnstcw
enter
pop
sub
inc
mov
push
push
cmp
rol
mov
imul
dec
jae
push
sbb
cmp
inc
sub
dec
sub
int
push
sub
or
enter
dec
or
les
cmp
add
sub
inc
insb
movsb
es
ja
in
sub
lds
push
push
add
dec
sbb
ljmp
mov
imul
je
sub
adcl
mov
xchg
jg
xor
mov
lcall
loop
sbb
push
scas
jb
sub
jg
cmp
subl
lahf
icebp
pushf
sbb
stc
cmpsl
pop
push
test
mov
iret
mov
std
mov
outsl
imull
out
loop,pn
int3
lret
mov
subb
jb
mull
mov
out
sti
push
mov
push
mov
loopne
mov
test
xor
mov
mov
lret
jo
les
or
pop
xchg
jp
notb
fcomps
outsb
addr16
loop
xchg
pop
jg
lret
add
adc
push
sbb
xor
push
mov
and
out
into
jno
mov
or
cli
ret
push
aad
jnp
fbstp
jge
mov
das
push
mov
pop
fdivrl
add
mov
cld
xchg
jle
scas
arpl
in
repnz
mov
fxch
pop
ja
lret
cmp
jnp
push
mov
add
data16
cmp
std
adc
dec
sbb
mov
leave
rcll
inc
arpl
cmp
and
hlt
mov
lret
dec
jbe
imul
sbb
mov
ret
insb
sub
lahf
stos
pop
movsl
hlt
push
xor
xor
lock
push
jb
cmovl
sarl
mov
push
lods
jp
sbb
outsl
daa
out
cltd
cwtl
and
lods
sti
fstpt
and
sub
pop
sbb
cltd
push
test
mov
push
dec
jge
push
aas
adc
into
pop
mov
fsubrl
fxch
aad
xchg
jne
sahf
cmp
pop
and
sub
adc
pushf
cs
es
cmp
push
cmp
cmp
insb
icebp
ss
iret
inc
push
icebp
hlt
xchg
insl
insb
popf
mov
scas
mov
cmc
arpl
jbe
jl
adc
les
xchg
mov
push
jo
bndldx
or
insb
lcall
fildl
jecxz
xor
push
loopne
dec
mov
inc
push
iret
and
mov
scas
lea
stos
mov
sub
fsubrs
jo
fisubrs
pop
orb
adc
call
dec
xchg
pop
mov
shlb
push
pop
sub
cwtl
lods
imul
out
dec
out
testl
fs
cmp
inc
mov
pop
or
sbb
adc
push
lret
push
out
sbb
loop
les
push
push
sub
xchg
fistpl
iret
inc
push
and
push
and
test
push
popf
test
pop
mov
pop
shl
lret
loop
mov
jle
and
mov
clc
in
lcall
mov
jb
lret
out
mov
call
call
inc
or
jle
xlat
mov
jmp
xchg
cmp
or
hlt
xchg
fcomps
xchg
xlat
pop
jno
or
lods
or
xor
jl
push
clc
add
jno
insb
cwtl
push
pop
aas
aad
xor
pop
fwait
xchg
jbe
xchg
sti
sahf
imul
pushf
jb
mov
push
repnz
dec
cmp
fidivl
add
loope
xchg
stc
xor
xchg
mov
inc
push
cmc
lret
shll
ds
pop
jge
jns
lret
xorl
sahf
adc
adc
lock
jns
mov
jbe
push
in
xchg
xor
or
add
stos
in
mov
cwtl
add
scas
imul
push
icebp
pop
out
mov
test
sub
in
sbb
mov
or
cli
sbb
mov
cld
mov
dec
jno
bound
xorl
or
dec
jne
cmp
pop
add
mov
sarb
divl
or
push
rol
insl
mov
hlt
clc
adc
push
sub
mov
sbb
test
nop
xchg
mov
mov
jnp
mov
andl
ret
sbb
cli
xchg
xlat
xor
mov
data16
inc
sahf
in
int3
jmp
adc
and
push
pop
sbb
ret
in
test
add
imul
ljmp
or
ficomps
mov
xchg
xchg
pop
mov
js
dec
jnp
pop
inc
xchg
stos
das
jmp
sbb
and
lock
cmp
mov
cmp
xchg
rcrb
sbb
scas
lret
icebp
xchg
dec
lcall
xor
test
xor
loopne
filds
and
scas
mov
push
imul
mov
inc
add
leave
lahf
or
dec
push
nop
cmp
jmp
sbb
or
adc
shlb
sbb
or
rcrb
rclb
aad
add
fiaddl
fistpll
into
add
cli
sub
outsl
out
push
xor
jmp
mov
setae
jp
pop
xor
cmp
pop
rclb
inc
xchg
sub
add
pop
jnp
or
dec
adc
jle
mov
out
movb
and
xchg
js
pop
xchg
xor
cmp
insl
xchg
sbb
cs
cmpsl
dec
pcmpgtw
mov
ficoms
stc
xor
hlt
gs
adc
addr16
dec
lret
in
sbb
pop
mov
mov
int
jl
pop
pop
insb
add
loop
sti
bound
int3
jmp
inc
cmc
mov
cmp
testb
popf
adc
das
mov
outsb
adc
out
xchg
mov
call
push
fildl
les
push
pushf
jne
nop
xchg
ja
bound
push
mov
inc
sbb
cmp
inc
arpl
jp
push
icebp
sbb
mov
lret
add
out
cmp
cmp
loopne
dec
lds
mov
in
add
mov
ret
mov
sub
add
or
cmp
mov
mulb
or
pusha
dec
movsb
cmp
push
push
std
jg
leave
push
mov
cmp
lret
lret
in
adc
lds
lods
cmp
insb
imul
sti
mov
push
int3
icebp
jp
or
data16
int3
int
gs
jno
adc
and
popa
adc
out
xchg
xchg
neg
sbb
mov
and
sub
scas
out
test
mov
je
add
fists
and
call
int
jno
push
movl
fstl
jmp
and
sub
pop
jns
adc
js
xor
and
sub
int
push
shll
xor
mov
out
outsl
mov
pop
stc
test
mov
jl
push
int
out
insb
test
inc
jmp
adcl
or
rcrl
or
push
mov
scas
push
sbb
sbb
aas
xchg
cmpsl
dec
push
imul
xor
rcr
dec
dec
bound
sti
sub
xor
push
jmp
lret
sub
sbb
test
mov
repz
leave
jp
xor
cmp
add
pop
xlat
pop
pop
insl
xor
push
mov
pop
adc
cwtl
cmpsl
and
setns
lods
xor
insl
xchg
jb
and
insb
mov
nop
stos
pop
imul
test
int3
shrl
xor
inc
push
jecxz
push
mov
mov
dec
faddl
stos
das
adc
mov
sub
xchg
je
lahf
int3
push
out
add
pop
sub
outsl
and
mov
sbb
pushf
in
ror
rclb
adc
and
sub
pop
ss
cmp
pop
jmp
popa
adc
popf
mov
mov
in
add
pushl
loop
div
mov
or
cmp
push
test
sbb
aad
shll
jno
rorl
adc
push
movsb
pop
mov
fldl
xor
cmp
lret
cs
jb
aam
xchg
cmp
lods
cmp
stc
pop
cmp
pop
push
xlat
sub
ss
xor
push
xchg
cli
repz
inc
push
mov
jo
popa
outsb
push
xor
xor
ljmp
aaa
enter
fs
cld
add
dec
enter
mov
aaa
push
sahf
out
addr16
popa
pop
aaa
stos
dec
lahf
adc
mov
insb
mov
xchg
inc
rcrb
stc
push
add
sbb
movsb
icebp
mov
subl
insl
das
mov
stos
call
jbe
fcomp
pop
nop
push
int
sahf
sbb
clc
mov
in
add
pop
sbb
push
cmp
je
and
rorl
cmp
daa
mov
xor
imul
fdivrl
add
sub
pop
enter
pop
pop
daa
loope
ds
sbb
std
imul
scas
outsb
mov
mov
jmp
cmp
insb
enter
inc
xor
dec
je
inc
push
out
jne
cli
mov
les
jp
mov
mov
das
dec
es
jg
lret
dec
in
adc
inc
data16
mov
popf
adc
adc
pop
jl
imul
add
dec
mov
cltd
add
fwait
shl
pop
jmp
adc
mov
sti
stc
daa
pop
xor
adc
pop
repz
push
lods
mov
mov
push
pusha
jl
xchg
mov
repnz
sub
icebp
mov
gs
lret
dec
or
test
shll
add
mov
out
cmpxchg
mov
jae
std
cltd
sbb
ret
jmp
ret
adc
daa
imul
shlb
cs
mov
sub
lret
ficomps
and
imul
sti
jg
sub
mov
ror
lock
fdivl
adc
pop
or
cmpsl
adc
das
xchg
mov
or
dec
jmp
in
mov
mov
xchg
push
push
lods
jb
mov
inc
in
sub
jl
xchg
jmp
cltd
pop
sbb
mov
sbb
dec
cwtl
pop
push
aaa
ss
xor
repnz
jge
fldt
jo
xchg
fdivrs
pop
sub
lds
roll
dec
mov
jmp
leave
in
jnp
inc
roll
mov
inc
inc
call
xchg
add
push
in
sub
push
jne
cltd
pop
push
mov
lock
fimuls
and
mov
fistps
adc
mov
aas
mov
roll
adc
and
out
xchg
adc
sahf
add
xor
mov
xchg
pop
push
fs
xchg
xchg
mov
adcl
add
les
adc
add
iret
adc
pop
pop
inc
pop
mov
mov
push
dec
out
outsl
jmp
pop
lcall
cli
lods
out
xor
and
pushf
mov
fistpl
xchg
sbb
jp
jae
and
mov
ret
jmp
adcb
imull
aad
mov
jmp
xor
ljmp
addl
adc
cltd
mov
faddl
add
fimull
insl
mov
and
add
arpl
hlt
loopne
les
cmp
fcoms
inc
sarb
sub
or
sbb
xor
test
and
outsl
ficomps
pop
sbb
fmul
dec
mov
outsb
or
call
jp
or
sahf
mov
int
jmp
mov
addl
fsubr
push
xchg
aam
dec
fs
xlat
jbe
jg
and
jno
mov
dec
vpmullw
stos
sub
movsb
push
sbb
fsubs
ss
xchg
mov
add
js
ja
cltd
adc
icebp
adc
into
fdiv
xorb
jae
jmp
pop
dec
mov
push
repnz
or
jmp
cwtl
aam
mov
pop
decb
loopne
mov
inc
cmpsb
leave
in
popa
jecxz
add
lds
int
cli
ret
leave
push
mov
or
and
fstpl
jno
ss
insl
sti
cld
rcrl
flds
mov
dec
addr16
pusha
out
sbbb
in
jb
jle
lahf
clc
jae
mulb
push
in
mov
in
sbb
pushf
shll
dec
lahf
dec
fstpt
ja
testl
pop
or
or
adc
inc
push
mov
push
bnd
outsb
iret
mov
shl
std
adc
out
gs
aas
pop
stos
pop
mov
pop
sub
xchg
pop
sub
pop
fldt
fsts
add
jb
sbb
jno
pop
jno
popa
leave
or
pop
mov
fimull
xchg
mov
pop
sub
out
rcrl
out
or
sbb
sbb
or
mov
sbb
mov
xchg
xlat
xor
inc
mov
ljmpw
lea
add
stos
sub
decl
leave
addr16
out
addb
sub
ret
jecxz
lret
mov
rolb
call
cmp
xchg
repnz
bound
in
pop
imull
cmp
xchg
inc
dec
cmc
ret
jle
mov
das
dec
adc
lret
cltd
scas
shlb
icebp
xchg
lret
bound
cmp
jge
mov
xor
inc
into
push
fstpl
mov
sti
fistpl
lahf
sbb
xor
addr16
xchg
in
in
mov
scas
mov
subb
shlb
lods
xchg
aaa
ss
jg
out
ficoml
jo
loopne
and
cmp
fistps
inc
pop
inc
sbb
int
das
push
mov
cltd
cltd
icebp
outsl
ret
xchg
into
push
and
or
and
les
mov
mov
mov
and
je
fbstp
mov
or
fisttpl
sbb
inc
pop
push
push
int3
jmp
lahf
push
mov
sti
int
or
sub
daa
mov
cmc
loop
outsl
and
adc
sbb
movsb
add
pop
inc
cmp
sbb
pop
jb
push
jno
addr16
int
cmpsl
mov
cmp
xlat
xchg
lcall
sbb
adcl
mov
nop
pop
xor
push
insl
imulb
xchg
mov
mov
jb
dec
mov
sub
test
mov
mov
jle
js
push
test
sub
insl
movsl
mov
das
ret
ss
cmp
jmp
test
jecxz
mov
mov
dec
or
das
inc
push
cwtl
or
push
inc
shlb
fwait
pop
loopne
xchg
lcall
jae
decl
lahf
mov
shr
pop
aaa
fdivrl
cmp
pop
fwait
sbb
mov
ret
inc
decl
mov
jg
push
push
out
xchg
and
mov
lret
xor
mov
push
inc
das
mov
dec
fsubr
mov
shl
shr
mov
leave
into
gs
shrl
bound
dec
popl
sahf
fwait
sbb
pop
add
inc
subl
fsubrl
addb
icebp
imul
fmul
mov
out
adc
ljmp
cmpsl
push
dec
ror
sub
pop
and
rcrl
push
adc
mov
das
mov
lods
xchg
movsl
cwtd
sub
mov
ss
jbe
sub
outsb
loope
adc
scas
dec
cli
pop
sub
aaa
fst
mov
add
outsb
push
pop
pop
dec
mov
push
bound
imul
es
sub
out
push
dec
push
push
sub
cs
fiaddl
sbb
mov
xchg
add
daa
nop
xchg
stos
jmp
insb
orb
stc
push
mov
cs
inc
into
adc
stos
sub
rorl
outsb
or
push
in
or
rolb
xor
cmpsl
dec
insb
es
cmp
sub
lret
ret
mov
sub
shll
mov
sbb
mov
sub
add
xchg
adc
frstor
push
or
push
lret
mov
stos
sub
xor
mov
popa
sti
adc
xchg
test
iret
jo
test
push
bound
jecxz
sahf
pop
cmpsl
std
mov
les
mov
and
push
or
mov
clc
dec
or
gs
ds
inc
inc
push
popa
dec
xchg
push
inc
sarl
mov
pop
mov
and
mulb
xorb
outsb
cmp
mov
pop
fcmovnu
adc
popl
jo
subb
fildl
jecxz
aaa
pop
xor
inc
jmp
add
test
jb
in
adc
sbb
mov
aaa
bound
dec
jmp
push
inc
test
fs
cs
movsb
movsb
sub
adc
and
or
xchg
outsb
insl
daa
xchg
fmull
dec
aam
cmp
xchg
data16
dec
in
and
mov
fmuls
jmp
or
adc
pop
and
jae
mov
inc
mulb
cld
movsb
popf
shll
or
fmuls
and
arpl
pusha
aam
test
adc
adc
mov
aas
mov
sti
sbb
sahf
jae
icebp
jb
mov
mov
pop
mov
dec
cmp
popf
mov
and
enter
lds
push
cmpsl
sub
xchg
mov
jno
adc
jmp
sbb
or
xor
jmp
iret
addb
mov
push
jo
dec
test
sarl
cli
data16
cmc
or
loop
scas
add
mov
push
add
push
negl
pop
dec
movsb
in
xlat
fistpl
add
ss
mov
dec
xchg
negb
outsb
fwait
idiv
and
push
dec
imull
lret
pop
jge
fistpl
and
and
and
sub
es
out
pop
jo
repz
outsb
mov
mov
inc
cmp
stos
jge
xchg
adcb
adc
mov
and
rorl
inc
push
mov
sub
fwait
pop
mov
or
test
repz
rcrl
push
insb
in
movsb
pop
mov
mov
fcos
inc
cmc
push
imul
pushf
dec
in
push
jge
lret
xor
sub
lods
cld
daa
sarb
jge
push
sarl
mov
out
add
push
xchg
cmp
pop
adc
or
xor
divb
push
int3
mov
mov
rorl
hlt
nop
std
lds
add
or
push
in
std
inc
mov
mov
stos
inc
js
mov
pop
xchg
or
mov
mov
incb
out
stc
sti
imul
and
movsl
in
sbb
mov
push
and
imul
call
mov
adc
sarl
imul
jp
js
xor
pop
lods
mov
inc
sbb
mov
dec
rclb
subb
add
mov
xor
mov
mov
push
sub
sub
jb
pop
mov
cs
ja
enter
and
fidivrs
shll
jo
sbb
sahf
ror
rclb
enter
addb
or
and
mov
inc
es
xlat
scas
fnsave
pop
mov
xlat
push
dec
inc
inc
cmpsb
and
jae
fldenv
xchg
mov
cmpsl
addr16
cmp
stos
or
xchg
fstpt
fdivs
adc
call
in
test
addb
inc
jo
xor
clc
mov
daa
add
pop
test
pusha
cmp
xor
fisttpll
push
pop
cmp
mov
push
insl
and
cmpsl
in
push
mov
jl
mov
add
inc
maxps
push
pop
imul
lea
ja
and
mov
lahf
add
mov
jle
push
adc
mov
mov
aam
pop
mov
clc
adc
insb
in
cmp
in
fistl
js
lret
pop
bound
arpl
inc
jno
scas
mov
mov
xchg
cmp
movsl
stos
adc
es
push
push
lea
xchg
xor
jg
js
stos
push
shll
pop
fistpll
push
popf
test
movsb
mov
stos
aaa
jno
cmc
je
xchg
insb
jbe
push
pop
xchg
dec
test
imul
mov
jae
mov
into
cwtl
negl
xor
aas
mov
push
xchg
fbld
and
into
out
sti
jae
cltd
xor
and
insb
data16
sub
jno
cli
arpl
add
test
fabs
mov
xchg
pushl
mov
or
ds
fucom
popa
or
lret
lods
cmp
stc
std
jae
fildll
insl
adc
sub
ljmp
dec
into
rclb
jp
mov
imul
mov
mov
insb
mov
cs
std
into
mov
in
jge
imul
ret
jmp
xor
call
pusha
xor
inc
movsl
pop
rcrl
fstps
negb
xchg
xchg
outsl
sahf
icebp
adc
or
dec
cmp
xchg
lock
mov
insl
mov
mov
es
push
in
sbb
mov
mov
into
adc
arpl
mov
inc
xchg
stos
mov
mov
jbe
jp
rolb
xor
fdivp
mov
mov
cmp
out
adc
into
or
icebp
inc
ljmp
adc
add
test
adc
adc
push
divl
enter
adc
mov
jg
mov
push
add
xorl
testb
in
push
mov
int
popf
rclb
push
ret
fsubrs
pop
sub
fisubl
jbe
mov
push
sbb
sbbl
fsubl
test
adc
mov
or
sbb
mov
adc
lcall
mov
push
and
xor
in
int
ss
cmp
test
xlat
inc
inc
sbb
xchg
in
mov
inc
rorl
xchg
fistl
sbb
bound
inc
adc
test
sbb
out
mov
cmp
xchg
mov
sbb
mov
in
ljmp
scas
gs
mov
dec
xor
pop
imul
jmp
pop
xor
in
add
mov
jmp
jbe
daa
and
inc
or
add
cmp
and
in
and
push
inc
adc
sub
aam
push
lods
rcll
inc
and
pop
mov
hlt
cld
bound
jne
in
fucomp
out
push
mov
push
nop
xorl
mov
dec
outsb
inc
and
aas
mov
inc
outsl
popf
mov
out
repz
jnp
out
lock
mov
inc
fldt
test
add
xor
mov
sub
inc
les
jnp
and
mov
dec
cmpsb
or
sbb
xchg
xchg
arpl
cld
push
repz
or
push
out
pushf
stc
fcmove
or
xchg
into
pop
aaa
jl
into
sahf
insl
sarb
dec
out
ljmp
sub
cltd
xor
dec
inc
adc
mov
call
jbe
mov
aam
icebp
std
jns
test
push
push
cmp
sub
loopne
call
ret
sbb
aad
jle
arpl
fmulp
push
cwtl
aaa
fwait
lret
scas
and
adc
jle
outsb
dec
xlat
pop
dec
imul
in
add
xor
out
mov
jnp
lods
in
jp
fildll
mov
mulb
or
xchg
and
xor
cmpsl
dec
inc
imul
inc
fistps
or
cmp
add
lds
scas
or
mov
jp
sub
adc
pop
adc
push
outsl
adc
sub
push
xchg
pop
test
jp
popa
adc
lahf
xchg
movsb
cmp
inc
inc
es
cs
mov
out
jb
add
rorb
jno
int3
arpl
iret
xlat
dec
lret
mov
jnp
add
push
movsb
push
lods
icebp
pop
ljmp
xorl
and
aam
jae
popa
rorl
mov
mov
imul
xchg
mov
inc
call
xchg
fidivs
xchg
fmul
test
ss
jne
test
call
lods
lea
popa
jo
clc
jnp
push
sbb
shll
outsb
jno
jo
movsb
or
dec
lock
pop
insb
lcall
andb
stos
cmp
rcr
mov
or
sbb
xchg
jb
gs
mov
insl
cltd
pop
fsubrl
adc
jb
sti
push
sub
jecxz
in
xchg
jne
in
sbb
lods
push
ljmp
xchg
dec
pop
nop
mov
scas
jle
sbb
and
inc
popa
iret
pop
mov
and
mov
inc
scas
pop
xchg
dec
mov
pop
cmpsb
mov
dec
inc
dec
fdivp
in
test
mov
aaa
cmp
mov
dec
fstps
mov
jp
nop
cmp
ret
dec
js
mov
ficoml
cwtl
imul
ljmp
cmp
in
adc
out
ja
ljmp
imul
mov
leave
adcl
bnd
cmp
icebp
mov
les
dec
data16
fmull
popf
or
sub
adc
in
sbb
pushf
push
fldt
push
and
dec
mov
iret
or
cs
sahf
inc
in
ljmp
jne
cmp
fldln2
js
jge
fwait
sub
loopne
mov
imul
shll
push
mov
add
mov
test
out
imul
add
and
ja
pop
cmp
mov
ja
cli
add
and
push
shlb
insb
aas
mov
and
lock
mov
jno
add
divl
push
cmp
icebp
inc
stc
dec
clc
jmp
out
cmpb
mov
test
cs
mov
xchg
out
jmp
mov
pop
inc
cmpsb
xorl
cmp
std
mov
push
popf
std
fsubrl
lock
lock
or
jo
and
mov
xchg
and
xlat
outsl
loope,pn
mov
loopne
and
cmp
loopne
lret
ret
inc
mov
xlat
jne
adc
jmp
aaa
lock
clc
out
jo
lock
in
outsl
bswap
repnz
pop
add
pop
jne
cmpl
adc
jne
lock
or
pop
push
insl
mov
xchg
insl
jecxz
mov
mov
lods
push
add
push
icebp
hlt
pop
xchg
adc
stos
iret
fldt
cwtl
sub
loope
dec
cmp
pop
daa
shlb
addb
adc
repnz
mov
clc
or
and
sbb
loopne
incb
adc
pop
orb
mov
scas
jecxz
mov
push
jp
jmp
roll
aas
addr16
fisttpl
fstl
pop
mov
inc
inc
xchg
jbe
js
xchg
aad
adc
sbb
js
or
lret
int
pop
jno
mov
xchg
loopne
push
or
sub
ret
mov
incl
adc
fstpl
add
sarb
or
lods
daa
push
push
lahf
lahf
fwait
cltd
les
dec
fnstcw
push
bound
setnp
insl
outsb
inc
jg
pushf
fldenv
movb
popf
xor
mov
scas
stc
mov
dec
xlat
xchg
xchg
dec
jo
sbb
xor
push
test
xchg
jge
jne
sbb
and
jg
fldt
imul
jmp
imul
mov
xor
dec
adc
int3
pop
mov
cwtl
cs
dec
push
mov
imul
cmp
repz
fmuls
ja
mov
mov
aas
adcl
lock
lret
icebp
pop
cmc
adc
lahf
sub
jne
pop
das
dec
add
add
xchg
fidivrl
sti
outsb
jg
les
pop
xchg
or
ja
mov
mov
jle
lock
add
add
fwait
and
push
jecxz
inc
pushf
add
stos
cmp
and
pop
and
inc
xchg
cmp
les
jle
add
daa
addr16
jb
test
jnp
stc
cli
call
mov
scas
mov
jnp
add
test
fdivrl
adc
popf
cmpsb
jl
cmc
clc
mov
mov
aas
ret
inc
inc
loop
or
or
sti
or
fldl
bound
enter
ja
shrl
jecxz
stos
aas
mov
out
mov
mov
jmp
mov
jb
inc
mov
sub
les
or
cli
in
in
mov
movsl
jbe
ja
jl
clc
movsb
add
jl
and
sub
dec
popf
add
inc
std
sub
rclb
sbb
cmp
add
imul
aas
or
lds
fsubrs
pop
mov
sub
popf
leave
cld
fcmovu
mov
test
cmp
stos
pop
repnz
push
sbb
scas
mov
pop
leave
mov
mov
mov
in
xor
data16
xchg
lret
sub
xor
dec
mov
cmc
out
pushf
sahf
dec
sub
cmp
sbb
mov
loopne
jmp
jb
test
push
mov
loope
xchg
push
sub
popf
jno
cmpsl
jno
stos
jnp
repz
sbb
stos
das
rolb
stos
fcoml
outsb
ss
or
imul
xor
fndisi(8087
jecxz
insl
xor
pusha
fisttpl
jae
push
xchg
sbb
pop
add
xchg
pop
enter
pushf
jns
cmp
pop
mov
inc
pop
mov
fmul
xchg
inc
ret
xor
in
or
aam
sti
and
xchg
je
pop
loop
adc
sbb
pop
jmp
sbb
data16
and
aas
orl
mov
pop
roll
mov
cmpsb
cmp
scas
jl
pusha
pushf
dec
ja
aam
pop
cmpsb
add
cmp
fmuls
push
xchg
out
test
js
rcll
movsl
mov
and
mov
loop
sar
into
lds
cmpsb
xchg
cmc
mov
pop
outsl
outsb
cs
iret
mov
scas
aas
pop
ficompl
jb
leave
lcall
cwtl
inc
mov
jae
jg
xlat
and
subb
jge
add
push
push
sarb
das
pop
and
test
std
js
lcall
cmc
hlt
mov
icebp
ds
pop
ja
sub
cmc
rclb
addb
add
mov
icebp
scas
iret
add
insl
sub
std
lods
hlt
test
mov
test
or
add
cs
pop
aam
inc
lret
mov
sub
das
inc
cmp
loop
or
cmp
jecxz
or
mov
sub
inc
mov
stc
jne
mov
mov
das
xchg
je
inc
inc
push
and
xor
fcomps
stc
jge
pop
lret
into
movsb
xlat
mov
inc
movsl
mov
scas
xor
mov
lret
push
js
dec
jge
imul
xchg
stos
adc
rcll
shll
aad
jmp
xor
xchg
mov
push
popf
js
inc
sbb
xchg
xchg
fwait
push
jle
cmc
dec
push
sub
ss
hlt
test
push
mov
jo
stos
dec
test
pop
ja
jp
pop
mov
frstor
dec
xor
es
aad
mov
sbb
sbbb
sub
and
mov
cmpsb
inc
fs
fidivs
ret
push
sub
xor
xchg
cmpsb
imul
jns
int3
and
fs
loop
pop
aad
pop
lahf
in
stos
addr16
bnd
popa
les
add
xor
lods
fstpl
sbbb
loopne
into
mov
aaa
repz
pop
cmp
cld
push
iret
mov
out
jbe
add
shlb
inc
dec
xlat
js
sarl
aaa
or
jb
or
shll
mov
ret
out
dec
xchg
sub
lahf
and
imull
inc
mov
push
cmp
mov
dec
stc
rcrl
dec
xchg
push
jg
push
xor
andb
fs
fsubrl
cld
aas
jl
loope
gs
xchg
jnp
or
add
addl
pop
fdivs
das
fisubs
daa
adc
push
fisubrl
loope
scas
clc
insl
xor
sbb
and
shl
pop
nop
xchg
movsl
sarl
dec
popf
jo
mov
ret
mov
adc
int
jb
int3
inc
mov
out
mov
addr16
xlat
jne
mov
push
mov
inc
mov
jbe
ds
movsb
insl
insb
scas
mov
adc
xor
aad
fiaddl
sub
mov
fbstp
mov
inc
mov
push
test
sub
orb
jmp
lret
jo
lods
sar
add
pop
test
cmpsb
test
sub
mov
in
cmpsl
incb
lds
je
leave
stos
movsl
sahf
xchg
pop
stos
movsl
mov
lods
rol
pop
icebp
jnp
xchg
aas
add
lods
cmp
dec
out
lods
rcr
xor
or
inc
jbe
jnp
xchg
fcom
mov
push
cltd
lds
hlt
push
shll
adc
lods
mov
mov
xchg
or
fisubs
and
repz
into
cli
mov
test
xchg
pop
insl
into
push
fcmovnu
int
and
outsb
jle
jmp
add
repnz
aas
pop
cmp
outsl
int
pop
pop
aaa
add
es
dec
repnz
sub
in
mov
cmp
mov
repz
jle
jnp
xor
inc
aam
repnz
and
and
je
ja
rorb
rorl
loopne
xor
shl
xchg
add
add
cwtl
dec
or
movsl
xchg
inc
out
lods
xchg
dec
sub
dec
dec
test
aad
xor
xor
repz
lret
or
scas
out
pop
dec
lods
push
lret
dec
mov
xlat
adc
mov
ss
rorl
pop
xchg
mov
faddl
adc
stc
dec
push
das
cwtl
repz
lea
push
push
rcl
mov
push
pop
fnsave
popa
dec
pop
adc
pop
sbb
imul
fsubrl
or
dec
std
popa
adc
lret
push
sub
sarb
shrl
dec
sub
lcall
test
mov
movsl
dec
bound
sbb
adc
test
mov
inc
lahf
movsb
fisubl
ss
jnp
pop
iret
test
sub
enter
sbbl
mov
iret
popf
or
repz
lods
scas
cmp
iret
jecxz
add
mov
in
js
in
gs
xor
dec
mov
mov
xor
out
jecxz
dec
jne
out
ffreep
popf
adc
xchg
imul
in
pop
adc
cmc
adc
dec
or
mov
pusha
stos
cwtl
mov
lahf
or
mov
jae
mov
jns
insl
nop
fptan
lcall
add
fdivrs
jne
stc
mov
lcall
lods
push
adc
jp
addr16
fnsave
imul
cmp
je
lret
mov
mov
test
enter
mov
ret
cmp
pop
cmp
fwait
lcall
in
jnp
jnp
sbb
int3
fdivrl
dec
loope
sti
fildll
jecxz
xor
lret
shrl
mov
js
pop
in
fdivl
aas
or
xchg
mov
add
inc
adc
xor
in
or
movsl
mov
cs
xchg
sti
pop
jp
dec
lret
xor
mov
outsl
or
popf
push
je
jl
inc
cmp
sbb
and
imul
inc
fbstp
jl,pt
cmovnp
push
stos
mov
push
ljmp
out
aam
pop
aas
lods
lock
mov
jmp
pop
mov
xor
test
jle
fcoms
mov
pop
jnp
dec
pop
out
pop
ja,pn
dec
push
push
push
loop
scas
mov
subl
popaw
sub
add
mov
fwait
stos
sbb
rolb
xor
lock
ljmp
lock
sub
dec
or
jo
adc
daa
add
hlt
pop
call
shll
sahf
addr16
call
cltd
sahf
andl
cli
or
mov
or
mov
insl
ja
js
inc
mov
in
xor
test
xchg
push
or
xchg
daa
pop
lods
cmpsl
cmp
xchg
mov
xor
and
cli
mov
mov
pop
mov
pop
test
cmpsl
mov
sbb
daa
inc
cmp
xor
mov
push
pop
out
lahf
fadds
pop
push
call
fmul
mov
push
xor
xchg
rcl
popf
cld
inc
mov
ja
mov
inc
xor
push
mov
push
inc
mov
xchg
cmc
sbb
out
mov
or
jne
fsubs
cmpsb
jb
into
jo
daa
cmp
test
hlt
out
jp
pop
jg
shlb
cmpsb
sbb
xchg
fsubs
push
cmc
addr16
jl
rorb
cli
lret
idivb
in
add
mov
subl
mov
scas
or
jmp
or
jecxz
movsb
leave
xor
aad
xchg
pop
rorl
inc
fidivrs
loope
sbb
mov
ja
pusha
shll
dec
fdivs
dec
dec
cmp
adc
outsb
mov
xchg
dec
aas
pushf
mov
or
inc
std
inc
out
call
mov
rcrb
mov
xchg
or
push
movsb
mov
sub
lret
mov
or
out
stos
or
fdivrl
test
pop
loopne
adc
and
sbb
jns
push
shrl
mov
aad
rorl
sbb
divl
and
movsl
inc
xchg
add
sbb
push
or
jmp
in
repz
mov
dec
mov
fadds
call
xchg
fisubrs
push
fucomip
add
mov
rcrl
dec
insl
inc
pop
jns
add
add
push
pop
popa
into
arpl
xchg
inc
jge
int3
andl
movsb
pop
int
scas
out
cmpsl
icebp
inc
add
pop
mov
mov
fcomps
popa
and
inc
test
jne
xor
test
cmp
xchg
int
popa
clc
mov
pop
lahf
mov
push
fwait
mov
lcall
loope
mov
fwait
mov
cmp
jp
lods
ds
ret
inc
push
mov
addl
stos
jns
pop
cmp
hlt
imul
xor
jg
sbb
lock
mov
xor
test
js
dec
clc
scas
push
cmc
and
mov
cmp
movsl
mov
fcom
add
icebp
pop
and
out
adc
js
xchg
ss
in
add
fcmovb
jno
pop
pop
shld
lahf
cmp
addr16
outsb
cmp
mov
sub
cwtl
adc
cld
ja
filds
je
sbb
neg
cmp
insl
test
xchg
jecxz
iret
lds
pextrw
inc
jecxz
mov
mov
test
scas
push
test
push
sar
mov
mov
in
sahf
jmp
leave
int
leave
sti
lahf
push
dec
pop
inc
mov
add
inc
stc
das
outsb
ljmp
in
stos
lods
push
xchg
call
outsb
cmp
cmp
dec
insb
lret
jg
xor
pextrw
mov
cmp
imul
call
mov
cmpsb
fwait
or
shrb
and
data16
pop
adc
cmp
cwtl
repz
cmp
adc
xorb
add
pop
dec
cwtl
jl
cs
ds
mov
shrb
inc
mov
mov
mov
ret
or
add
inc
addr16
dec
popa
sahf
cmp
dec
pusha
jle
scas
out
popa
mov
xor
js
cltd
int
pop
cmp
loop
lahf
fst
sbb
in
addr16
int
or
aam
mov
push
loop
cmpsl
sbb
gs
aad
dec
dec
and
adc
out
mov
dec
xchg
dec
pop
push
hlt
fnstenv
mov
jge
lcall
jnp
ljmp
push
jp
repnz
add
jb
adc
fildl
lea
popf
add
push
pop
sbb
insb
fwait
dec
movsl
mov
dec
mov
pop
dec
stos
je
data16
aaa
shlb
testb
mov
inc
jp
mov
daa
mov
mov
mov
repnz
cmc
ljmp
in
in
mov
mov
jmp
add
push
mov
push
mov
test
movsb
push
in
rcrl
mov
sbb
mov
xchg
and
cmpsb
rolb
shl
inc
sbbb
add
pop
adc
das
jmp
sahf
push
pop
jle
fidivs
pop
cmp
xchg
or
fstps
xchg
int3
outsl
pop
or
enter
xor
jne
in
xor
mov
and
jmp
pop
jo
pop
xchg
inc
mov
lcall
fisttps
cmp
fsubr
sbb
outsb
push
ljmp
push
filds
arpl
and
iret
stos
jae
insb
dec
adc
scas
xor
leave
les
ds
clc
aad
idivl
mov
add
adc
inc
inc
push
inc
cmp
adcl
lds
and
or
iret
xchg
sub
test
pop
scas
push
scas
pop
dec
imul
outsl
and
add
push
clc
lcall
adc
cltd
lods
cmp
test
mov
jno
mov
movsb
fldl
xchg
ret
out
lret
and
test
outsb
mov
jge
mov
sbb
test
daa
pushf
mov
adc
dec
icebp
movsb
xchg
mov
mov
and
xor
xchg
xchg
daa
mov
cmp
pop
clc
aad
push
lods
jno
dec
scas
mov
int3
ljmp
xchg
sbb
cmc
xor
push
je,pt
sbb
xchg
es
push
mov
fmuls
icebp
in
jmp
sti
mov
lcall
fwait
shl
xlat
pusha
xchg
hlt
adc
and
mov
mov
stos
add
lea
cmc
mov
jmp
jns
push
mov
in
jbe
loopne
sbb
jne
pop
cltd
or
add
fs
cmc
iret
adc
pop
mov
mov
out
iret
adc
cld
in
ljmp
pop
imul
sub
popa
stc
cli
leave
or
pop
adcb
sbb
dec
pop
mov
pop
ss
in
cld
jae
outsb
mov
loopne
icebp
and
push
jle
loop
or
jo
jb
adc
int
fsubr
sti
pop
pusha
xchg
sbb
or
pop
hlt
push
pop
cmp
lods
cli
jne,pn
or
popf
insl
push
push
jno
jo
cmp
das
lret
je
jl
xchg
mov
lods
cmpsl
dec
cwtl
xchg
mov
mov
outsl
lret
push
orl
test
pushf
ret
inc
jb
das
mov
iret
test
fldenv
dec
mov
mov
mov
ds
out
mov
pop
out
outsl
pop
cld
mov
jmp
adc
jnp
test
xor
fildll
je
rolb
fsub
pop
fisubs
and
xchg
and
sub
dec
inc
xchg
fstp
enter
std
fstps
inc
xor
arpl
imul
ss
cltd
xchg
into
jecxz
arpl
test
push
cwtl
pop
fs
dec
or
xor
sbb
xor
ljmp
push
mov
push
jle
movsl
jb
add
repnz
cli
sub
xor
daa
psubq
psubd
lock
popl
into
mov
adc
cmp
pop
sbb
int3
push
sub
inc
dec
negb
mov
pop
rcl
xchg
gs
jle
xchg
push
sub
rcl
int3
xlat
in
inc
sub
fdivr
jnp
adc
mov
stc
mov
jo
dec
lea
ret
jbe
add
mov
movsl
fcmove
sbb
and
sub
push
xchg
sbbb
lcall
xor
lods
out
loop
inc
popf
subb
push
sarl
nop
lock
ss
sbb
ja
mov
data16
mov
lea
cs
add
in
in
mov
loop
test
leave
stos
mov
stos
xlat
cwtl
mov
push
mov
jmp
mov
out
in
inc
arpl
push
adc
mov
clc
mov
rorl
or
xorb
mull
dec
mov
pop
inc
fld
cli
mov
add
add
mov
in
jno
sub
pop
and
mov
popa
leave
xchg
fidivrl
insl
xor
scas
cmp
jb
mov
add
inc
insb
jl
stos
adc
jne
pop
in
xchg
mov
lods
sub
outsl
mov
add
sti
cltd
inc
cld
testl
orb
mov
jb
inc
jmp
fdivl
not
test
aaa
loop
fwait
cmp
xchg
lahf
add
cltd
ret
adc
mov
or
fcomip
in
sbb
mov
inc
ljmp
fsubrl
push
mov
pushf
ja
push
lret
pop
fisubrs
xchg
dec
and
xchg
cli
inc
pop
or
dec
mov
cmpsl
adc
add
sub
jge
addr16
jg
fcoms
sub
mov
dec
or
lea
inc
lcall
adc
daa
add
jp
pop
das
nop
xchg
idiv
fdivl
sub
cs
subl
mov
nop
mov
js
or
mov
push
cmpsl
mov
movl
pop
cmp
gs
push
inc
cmp
or
mov
pushf
lods
addr16
lock
jae
pop
lahf
lea
xchg
cmp
cltd
movsl
dec
lea
movsl
jnp
sub
sub
testb
movsl
gs
dec
push
jne
xor
insb
push
jnp
lock
mov
call
test
ja
jmp
popf
mov
dec
nop
sbb
out
shlb
jns
in
jno
push
mov
rcl
add
and
stos
sub
mov
sbb
movsl
xchg
lret
fucomip
lret
cs
mov
test
jne
pop
pop
inc
stos
xchg
ljmp
push
js
dec
lds
les
fstpt
pop
movsl
lret
enter
pxor
aad
cltd
mov
cmp
mov
dec
lcall
mov
inc
jl
xor
or
pop
or
sahf
inc
sbb
mov
or
sbb
jne
pop
lret
jmp
repz
mov
lds
sub
and
add
mov
ljmp
mov
clc
ror
cmp
negb
pop
sbb
mov
fisubl
dec
loop
cmpl
fst
test
out
mov
dec
sbb
jmp
imul
es
cld
mov
nop
int
pop
push
fwait
xchg
or
lock
lcall
add
or
iret
sahf
mov
add
jbe
in
mov
inc
jl
ficoms
sbb
outsl
addr16
push
jecxz
insb
data16
adc
ljmp
or
mov
mov
mov
insl
rol
or
xchg
mov
mov
pop
lods
xchg
xchg
inc
mov
pusha
add
jle
fsub
and
mov
nop
stc
cmpsb
adc
xlat
push
sbb
out
shr
sub
pop
rclb
pop
push
aas
or
xchg
sub
and
ss
lods
pop
push
stos
sub
cltd
adc
loop
or
lea
xchg
cltd
cmpsb
jl
and
out
inc
testb
jmp
cwtl
sub
or
test
cmp
ret
jecxz
lahf
cmp
inc
popa
sti
inc
xchg
hlt
xchg
mov
and
subl
mov
and
adc
pusha
jl
mov
jae
lods
push
or
cmpsb
lea
mov
hlt
aad
add
std
loop
mov
cli
mov
add
fcmovne
cmp
mov
stos
lret
pushf
mov
fcoms
jge
mov
mov
cmp
xchg
and
mov
test
mov
pop
ja
sbb
icebp
and
fnstcw
add
sub
xchg
pop
push
imul
lods
cmp
divl
inc
idivl
fsts
sub
lret
ljmp
cld
mov
les
jb
xchg
stc
mov
adc
push
mov
enter
lret
adc
fistl
fsubrl
mov
loopne
xchg
mov
rorb
lret
dec
popa
pop
jb
xor
aaa
push
add
sub
push
jmp
push
fincstp
bound
pop
hlt
in
outsb
push
arpl
ss
xor
adc
out
mov
xchg
inc
cwtl
ds
jmp
sbb
push
out
jle
aaa
xchg
and
rolb
xor
pop
cmp
and
inc
cmp
mov
and
mov
mov
mov
pop
mov
adc
out
aam
popa
xor
adcl
xchg
mov
jmp
lods
pop
or
fsubrs
pusha
push
aaa
jle
bnd
adcl
add
mov
push
cs
or
xor
mov
jb
ja
daa
test
scas
repz
and
push
or
fnsave
sbb
stos
lret
lods
cltd
ret
dec
mov
xchg
push
mov
test
mov
inc
sbbb
mov
icebp
inc
pop
xor
jecxz
mov
pop
cmpsb
iret
cmp
jp
orl
cli
mov
lahf
mov
imul
mov
mov
jnp
dec
test
addr16
enter
lea
sbb
add
mov
adc
into
jmp
sub
sub
jecxz
and
stos
pop
les
mov
sub
aad
lret
sbb
js
sub
lret
and
sub
mov
ret
fwait
mov
dec
lds
xor
imul
jmp
or
imul
sbb
arpl
mov
data16
dec
std
push
pop
pop
jnp
xchg
icebp
mov
mov
push
jno
xchg
mov
sub
sbb
lcall
ss
cltd
int3
add
inc
or
pop
cld
loope
cmp
jb
jge
cltd
cmpsb
cltd
mov
in
jmp
push
mov
pushf
clc
repnz
iret
setae
mov
jecxz
cmpsl
adc
inc
into
popf
stos
sbb
enter
mov
or
repz
vpslld
push
loop
outsl
daa
lcall
add
js
insb
out
adc
jg
out
ds
dec
test
shll
rorb
loop
jmp
adcb
xchg
repnz
pop
fldl
push
xchg
ds
outsb
jb
sbb
mov
and
and
cmp
out
sbb
cli
mov
cmp
loope
or
out
cmp
adc
fildll
dec
jb
mov
roll
stos
ja
or
cltd
push
repz
data16
jge
in
mov
xchg
jle
stos
jle
stos
xor
adc
push
jns
xchg
imul
or
adc
inc
call
incb
jg
sti
xor
scas
jne
ror
nop
add
fldt
sub
imul
xor
mov
and
xchg
cmp
insb
enter
sub
cmp
xchg
cmpsb
xor
inc
cmp
rcrl
subb
cltd
movsl
pop
test
icebp
push
mov
dec
movzwl
test
outsb
mov
scas
and
sub
stos
fmuls
xlat
cld
and
mov
jns
in
adc
xlat
stos
ljmp
mov
add
adc
sub
loope
xchg
or
pop
lahf
cli
mov
pop
adc
daa
out
icebp
or
and
cli
fdivl
in
shl
iret
jp
insl
popf
fwait
sbb
add
imul
insb
dec
cs
mov
jb
mov
dec
xchg
cmp
lods
mulb
aad
pop
mov
mov
fildl
dec
imul
jge
lret
mov
xlat
pop
pop
test
ret
loope
jg
push
ret
mov
push
mov
ss
pushf
xor
fsubs
mov
or
bound
sbb
hlt
sub
mov
pop
stos
sbb
ficoml
das
add
dec
pusha
insl
scas
cmp
adc
hlt
cmpl
and
in
mov
dec
aas
cmc
fdivrs
jnp
icebp
dec
scas
stos
cmp
dec
adc
leave
xchg
lahf
and
mov
cltd
push
xor
push
cmp
inc
mov
mov
sti
push
and
pop
scas
pop
outsl
sub
mov
push
adc
inc
insl
popf
loope
xchg
loopne
orb
ljmp
lds
push
sti
xchg
xor
test
mov
xchg
mov
mov
sbb
jnp
enter
outsl
sub
mov
adc
out
imul
add
mov
dec
dec
dec
jmp
lock
mulb
ret
mov
xor
jnp
cmpsl
xchg
loop
movsl
arpl
jns
mov
dec
les
mov
adcl
push
lea
push
cmc
push
sahf
mov
sub
cmpsb
movsl
xor
push
in
scas
xchg
mov
dec
cmp
test
cmp
jp
sahf
xchg
fwait
sub
jb
loop
dec
sbb
pop
inc
push
out
sbb
test
jp
sub
pop
pop
outsl
clc
pusha
mov
ja
jo
into
push
sbb
movb
cltd
mov
in
adc
dec
aad
sbb
and
sbb
mov
or
in
pop
arpl
xlat
clc
cmp
dec
cli
lds
xor
pop
push
jb
jbe
adc
mov
iret
std
mov
pushf
adc
mov
loope
out
dec
sub
jne
xor
popf
inc
jmp
or
pop
call
mov
sbb
lahf
leave
mov
or
ret
pushf
xchg
jmp
aaa
frstor
sub
pop
jnp
lret
hlt
and
dec
popa
sbb
mov
daa
rolb
xor
adc
xor
iret
shll
fisubrs
stos
jns
jno
gs
jge
push
push
mov
sbb
lods
inc
aam
mov
add
push
push
nop
clc
pop
ret
pop
jle
dec
int3
cmp
mov
inc
or
cmp
lcall
dec
outsb
jle
int3
scas
push
test
call
scas
fimuls
jbe
das
imul
out
cmpsb
in
insl
lods
faddl
cwtl
inc
bound
jne
jmp
lods
arpl
jg
lods
push
push
jmp
lods
mov
mov
loopne
pop
outsb
pop
pop
sbb
insl
out
das
adc
in
popa
sub
mov
insb
stos
insb
in
xchg
sub
and
inc
aas
inc
adc
inc
add
xchg
mov
inc
mov
insl
xchg
movsb
stc
xlat
pop
popf
xor
popf
and
mov
sub
mov
sbb
jnp
lock
loope
insb
push
cmp
mov
mov
add
lahf
fstpt
push
mov
repnz
sbb
std
xchg
mov
pop
cmp
and
aam
sahf
test
je
out
mov
cli
xchg
out
or
inc
lahf
ds
maxps
pop
in
xor
stc
gs
push
sub
in
mov
lahf
lock
data16
fs
dec
addr16
cmp
xor
out
cltd
or
int3
xor
pop
aad
lcall
or
xlat
jnp
jns
fdivrs
dec
leave
and
mov
jp
iret
jb
mov
push
or
into
cmp
jnp
push
sbb
sbbl
mov
push
sbb
gs
xchg
adc
and
push
xacquire
mov
sbb
pop
push
aam
es
movsl
jg
sbb
ds
je
and
test
jbe
sarl
inc
and
in
mov
insb
pop
fsts
ret
lods
roll
sbb
test
sti
mov
hlt
stc
or
add
push
movl
mov
sbb
push
sub
shlb
stos
icebp
cmp
daa
movsl
imul
test
xchg
jne
or
out
mov
pop
cwtl
scas
dec
mov
xchg
or
ss
mov
mov
les
in
mov
addb
rcrl
and
xor
mov
push
push
add
push
call
mov
movsb
lds
mov
push
in
pop
mov
sbb
icebp
out
mov
addl
leave
push
dec
lods
fdivrs
dec
xor
sub
sub
dec
stc
mov
scas
dec
mov
stos
jns
xor
clc
test
mov
cmpsb
movsb
push
cmpsl
jp
push
loope
pop
push
movsl
mov
lcall
sbb
out
lea
xor
cld
jae
fnstsw
fcmovb
data16
mov
sbb
cli
push
mov
dec
data16
mov
inc
sbb
xor
lods
jo
mov
int3
sbb
inc
jo
repz
leave
sub
in
mov
mov
xchg
ss
push
xlat
ja
fsubrs
rcrb
jecxz
push
push
mov
repnz
scas
subb
sarb
xchg
mov
cmp
les
jecxz
in
fs
xchg
jo
mov
les
add
push
cmp
sbb
imul
cmc
xchg
pop
insl
xchg
or
xor
shlb
test
xchg
and
adc
cmp
adc
insl
push
mov
or
jns
stc
out
por
lock
sbb
jno
pop
ljmp
aas
inc
xchg
sub
movsb
jns
movsl
inc
scas
loope
or
aas
movsb
lret
mov
addr16
or
mov
inc
pop
sbb
orl
int
inc
mov
inc
xchg
and
scas
add
lret
shrl
xchg
xchg
clc
sbb
fadd
aad
jge
cmp
mov
ljmp
scas
sahf
negl
scas
sahf
or
sarl
in
lock
ds
cwtl
leave
or
out
decb
insl
fadds
popf
and
jp
addb
aam
mov
lea
push
mov
loop
call
cmp
stos
cld
mov
ja
ret
mov
xchg
in
imul
mov
mov
mov
sarl
xor
imul
cmp
jle
popa
sub
pop
push
pop
add
jno
pop
adcl
jae
loope
dec
aas
imul
loopne
mov
mov
mov
cmpl
cld
dec
dec
pop
mov
jns
ret
mov
cmpsb
pop
lds
repnz
ret
popf
jne
inc
cmp
or
movsb
inc
sbb
inc
inc
daa
lea
aam
ret
inc
cmp
add
das
cltd
fidivrl
ss
lock
faddl
cmp
movsl
add
hlt
aam
lock
and
dec
js
adc
mov
imul
sub
in
addr16
sbb
ficoml
jmp
mov
stos
pop
pop
ret
jg
sub
mov
addr16
lahf
dec
das
cwtl
dec
xor
mov
inc
scas
xchg
imul
fadds
mov
lret
das
xlat
xchg
cltd
cs
inc
sbb
sahf
orl
push
mov
jb
loopne
repnz
adc
addr16
fcomp
xchg
lea
rolb
push
push
cmpsl
dec
sbb
lock
jns
gs
fdiv
pop
outsb
pusha
mov
sarl
bound
and
mov
or
add
push
push
fsubrl
inc
xchg
dec
negb
rcrb
lahf
negb
inc
stc
pop
lret
lds
dec
add
xor
mov
imul
test
xlat
and
dec
adc
aad
leave
dec
sbb
inc
fisttps
xchg
jmp
mov
xchg
xor
jns
sbb
xchg
gs
lds
mov
or
adc
xlat
mov
hlt
pop
push
push
gs
pop
movsl
ljmp
roll
lret
cmpsl
sbb
mov
xchg
in
push
mov
test
adc
pop
mov
cmp
add
cmp
jns
insl
sub
sbb
inc
sahf
stos
mov
scas
rcll
cmpsl
je
adc
pushf
outsl
lret
pop
push
mov
push
mov
addl
int3
and
adc
lea
cld
arpl
xchg
into
mov
es
push
cmpsb
dec
cmpxchg
cmp
adc
lds
mov
push
dec
das
rep
ret
push
pop
js
ds
dec
js
rcrb
dec
das
pop
fsub
push
ljmp
bound
jmp
loopne
xchg
and
sbb
xor
adc
mov
xchg
bound
sahf
in
mov
cmpsb
jbe
mov
cmp
push
sbb
sub
cmp
clc
and
mov
dec
lret
adc
test
jl
mov
cmp
jmp
xor
sbb
loopne
or
inc
xchg
adc
outsb
orl
pop
movsb
bound
pop
idivl
jge
arpl
pop
and
rcll
bound
xor
stos
jo
dec
xor
dec
idiv
ror
cltd
inc
fmul
xor
cmp
divb
lret
je
sub
sub
jmp
lcall
popf
cmp
mov
adc
int
and
aaa
or
popa
dec
stos
mov
or
fs
lcall
or
ljmp
cs
inc
lcall
add
add
mov
jp
jns
jle
das
dec
aad
pop
adc
mov
dec
rclb
adc
push
xor
inc
push
insl
insl
mov
ret
bound
dec
icebp
mov
loope
mov
aad
test
cmp
dec
push
mov
sub
popf
mov
adcb
mov
outsb
test
lea
leave
cli
xchg
jno
cwtl
adc
mov
xchg
add
icebp
push
mov
mov
sbb
push
dec
movsb
addb
pop
outsb
enter
add
ret
dec
leave
lea
xchg
and
push
sub
push
cmp
adc
out
movsb
and
mov
cmp
add
rolb
and
inc
fcoms
in
push
xor
push
shl
jns
jmp
hlt
add
repnz
or
push
stos
and
sti
cli
out
sbb
mov
mov
adc
bound
xchg
pop
sti
or
out
data16
mov
pusha
stc
test
pop
xchg
add
sbb
dec
std
shlb
stos
aam
pop
ret
xchg
pop
les
cmp
mov
fcoml
les
sub
lods
xchg
sbb
rcr
pushf
push
pop
in
loop
insb
xor
jae
dec
test
add
sbb
cmp
lods
xor
pop
leave
bound
shrb
das
rcl
sbb
xchg
push
mov
pop
stos
push
add
sarb
jmp
aas
cmp
cmp
insb
rorl
shll
mov
sahf
call
arpl
mov
mov
add
or
jmp
movsb
hlt
loopne
mov
outsb
jp
dec
lahf
sub
shlb
and
movsb
jmp
aad
mov
jno
adc
or
adc
aas
test
out
fcomi
mov
jle
in
stos
cmpsb
das
inc
lods
mov
add
or
ret
push
sub
mov
pop
das
pop
and
in
sbb
and
in
sub
in
cmp
repnz
mov
das
mov
addb
stos
sub
inc
and
jle
inc
xchg
fidivl
das
lahf
aad
inc
test
push
or
lods
rorb
call
pop
negl
jb
adc
sbbl
lea
and
xchg
jb
inc
or
pop
add
inc
pop
xor
and
add
inc
dec
shrl
inc
mov
stos
pop
add
and
inc
adc
inc
jbe
and
and
jg
std
out
xor
cmp
fstp
fstp
fstpt
dec
mov
jl
jge
cli
popf
clc
adc
rolb
xchg
and
mov
out
popa
jnp
nop
test
clc
xchg
sbb
outsl
mov
ficoml
inc
pop
jbe
mov
lret
dec
rcr
ljmp
pusha
add
adc
pop
movsl
aam
sbb
pop
cltd
inc
push
dec
sti
push
sbb
gs
sub
in
outsl
dec
ljmp
inc
aas
cmp
mov
in
or
lods
cs
sbb
call
mov
xchg
pop
jge
out
sbb
pop
sbb
sub
out
cmpsl
lret
shrb
xchg
push
es
mov
push
sub
stos
pop
mov
stos
dec
jno
pop
mov
stc
pop
fcomps
cmp
mov
imul
xchg
or
jno
aas
adc
mov
adc
bound
sub
mov
outsl
mov
cltd
sub
repnz
xchg
loope
push
test
enter
ss
mov
and
mov
ret
jo
out
out
cmp
push
dec
mov
js
fisttps
sub
push
sbb
lahf
arpl
and
push
imull
outsb
shlb
test
faddl
pop
fdivs
mov
daa
and
dec
pop
movsb
dec
dec
inc
mov
cs
shl
stc
jb
mov
arpl
cmp
mov
movsb
sbb
xor
dec
rorb
cld
lea
add
xor
ficoms
xor
filds
mov
pop
mov
cmp
mov
scas
and
outsb
mov
incl
pushf
fsubrl
cmp
cmpsb
mov
or
jecxz
mov
pop
in
sbb
fwait
aad
xchg
int3
xor
mov
mov
push
fimull
xor
sbb
jmp
in
addl
mov
push
das
jae
int
mov
dec
ret
in
push
lret
mov
xor
or
jae
push
xchg
imul
push
sbb
adc
mov
data16
sbb
ss
sub
jle
js
sbb
xchg
loope
mov
or
pop
rorl
xlat
push
outsb
js
cld
sub
inc
mov
mov
xorb
mov
and
dec
jb
into
shl
enter
mov
mov
mov
adc
cmpsb
sub
enter
dec
and
cltd
aam
inc
sti
cmc
sahf
mov
push
lds
jmp
in
cmp
mov
jp
pop
push
mov
push
data16
cltd
ljmp
push
xchg
xor
cwtl
xchg
jno
jecxz
xor
pop
jno
aam
lock
dec
add
mov
rorb
mov
outsl
mov
test
adc
mov
xlat
aaa
add
insl
sub
rcrb
jecxz
adc
pop
jns
mov
mov
testl
shrb
in
sub
add
jp
data16
pop
push
push
test
lds
dec
mov
mov
mov
sub
inc
push
xlat
mov
dec
xor
adc
pop
lods
aas
xchg
push
jo
fnstenv
dec
int3
arpl
adc
and
pop
in
bound
mov
mov
aad
push
push
icebp
push
cmp
lock
xchg
loop
sub
aaa
inc
mov
xlat
in
enter
into
dec
or
enter
arpl
push
mov
xor
sahf
adc
loop
or
and
fisubrs
xor
insl
repnz
into
push
addl
cs
sbb
cmp
nop
xchg
dec
scas
pop
and
jnp
dec
jl
lods
in
or
dec
inc
adc
push
rolb
and
push
lret
sbb
dec
jo
or
pushf
pop
je
and
xchg
das
dec
pop
inc
lret
out
and
jbe
subl
mov
push
dec
je
mov
push
sbb
add
scas
movl
push
sbb
loopne
xchg
enter
cs
cmpsb
and
insb
dec
imul
pop
sbb
push
pop
and
iret
inc
testb
and
ds
divb
fisubrl
pusha
rcrb
fwait
cmp
add
fwait
repz
mov
aaa
or
jecxz
lret
rcl
jnp
cli
inc
cmp
scas
cmp
add
mov
xchg
pushw
add
add
or
pushf
pop
and
inc
je
xchg
sbb
ret
int3
pop
icebp
or
popa
rolb
lods
sub
dec
pop
out
xchg
dec
and
and
pusha
test
outsl
add
movsb
icebp
sub
cmp
imul
dec
push
divb
test
nop
jmp
pop
push
fwait
push
ljmp
leave
shll
pop
xchg
js
adc
imul
sub
pop
imul
adc
scas
data16
lods
in
fldl
test
add
mov
mov
or
xchg
in
adc
sbb
dec
pop
out
mov
imul
cmp
cmp
outsl
fimuls
cmp
stos
pop
mov
push
test
lods
clc
cmpsl
push
insb
push
stos
jbe
rcr
cmp
movsb
dec
add
push
lcall
stc
sub
cmp
jnp
stos
outsl
pop
pushf
insl
es
xchg
push
xor
popa
shll
jae
xlat
lock
stos
jbe
and
aad
out
cmp
and
push
push
mov
cltd
push
rcrl
je
mov
dec
or
outsl
mov
xchg
xlat
sbb
xor
loopne
inc
je
inc
daa
test
in
xchg
inc
dec
ljmp
mov
cmpsl
in
popf
shll
daa
jecxz
pop
clc
in
fnstsw
xchg
aad
sar
mov
add
fldl
mov
insl
lock
mov
daa
rorl
cmp
jbe
aaa
mov
imull
sub
xorb
sbb
rcl
in
mov
push
fisubrl
xor
outsl
daa
cmp
pushl
mov
aad
and
push
inc
cmp
bound
into
push
repz
int3
pop
outsl
ss
xor
fldt
stos
mov
inc
int3
loopne
sets
cld
xor
stc
enter
inc
cmp
add
jo
inc
nop
cs
cmc
xor
adc
and
dec
and
inc
data16
dec
sti
xchg
inc
aam
sti
incb
mov
out
xchg
fldt
in
cwtl
xchg
push
mov
out
inc
mov
cmp
nop
pop
sti
xchg
outsl
arpl
mov
popf
or
dec
and
lcall
faddp
lret
enter
mov
fnstcw
jns
cmp
out
pop
cmp
lahf
mov
lret
inc
clc
pop
xor
imul
out
add
mov
pop
pop
cmpsl
daa
xchg
mov
sub
lea
incl
push
movsb
sbb
rolb
clc
test
jo
call
ja
addr16
sbb
dec
fwait
add
xorl
lcall
les
mov
movsl
cltd
sbb
stos
push
or
cmp
subb
pop
loop
fbld
jg
leave
cmpb
int3
jae
jle
push
jmp
in
sbb
call
mov
shl
loop
push
mov
xor
fwait
pop
into
aam
stc
mov
sbb
or
mov
mov
aam
cmpsb
ret
mov
bound
pop
sbb
loop
outsl
aas
fsub
icebp
jg
out
pop
out
stos
out
add
push
filds
xchg
mov
popf
and
je
xchg
aaa
jo
adc
add
cli
shlb
add
pop
mov
aam
lods
fwait
mov
aad
enter
roll
loop
xchg
add
sbb
fdiv
das
in
mov
dec
es
scas
adc
push
js
jmp
lock
lea
mov
enter
sub
out
push
inc
pop
loop
add
mov
mov
pop
lahf
mov
int
lret
insb
jns
inc
sub
mov
out
pop
bound
jne
js
sbb
and
decb
jbe
adc
jge
mov
int3
push
xchg
pop
fstl
gs
xor
mov
xchg
or
mov
or
sbb
rcl
test
dec
testb
and
fisubl
adc
mov
popf
mov
sub
test
loop
sarb
jnp
icebp
xchg
lea
lods
jle
test
cmp
push
jbe
jo
jmp
add
inc
sub
and
mov
sbb
outsl
jbe
inc
cmp
pop
iret
add
xlat
mov
jecxz
decl
and
ljmp
sbb
jns
popf
arpl
mov
ja
and
out
andl
mov
push
push
bound
fsubrs
push
cmc
and
lock
out
sub
loope,pn
repnz
fisubrs
sahf
xchg
stos
test
push
cmp
jmp
ds
je
dec
mov
dec
ret
ljmp
push
jl
xlat
xchg
mov
repnz
int3
adc
cmpb
leave
sti
idivb
xchg
je
xchg
fisttpl
jne
pop
xchg
loopne
jbe
mov
jb
movsb
lds
daa
push
and
daa
int3
mov
jle
dec
divl
call
call
scas
jmp
jecxz
and
or
cmp
inc
mov
ret
stos
addr16
jae
and
test
test
xor
or
xorl
mov
test
push
loopne
pop
xorb
orl
lock
arpl
mov
mov
div
jb
lret
cmp
mov
jmp
js
pop
rorb
scas
rcl
xchg
arpl
jo
dec
cmc
sub
ja
fcom
negl
adc
pop
fldl
jne
insl
cmpl
lock
add
push
daa
jnp
test
shrb
imul
or
jp
cmpsb
in
adc
sub
sub
jno
out
push
jg
or
inc
ds
cwtl
jbe
das
push
sbb
and
push
xor
jae
push
sub
popf
or
fisubs
inc
test
inc
sbb
jp
inc
jge
add
loope
push
mul
sub
movsb
dec
and
jbe
mov
loope
xorb
rol
xchg
int3
ret
addl
jo
cmp
push
sbb
scas
fldl
mov
call
lcall
adc
sub
cmp
sbb
jp
xor
mov
mov
mov
dec
stc
loopne
arpl
and
push
in
mov
mov
mov
stos
jle
test
lock
or
push
roll
mov
mov
mov
add
mov
and
ret
mov
or
mov
js
neg
sub
lock
jae
mov
adc
daa
inc
inc
mov
jo
mov
cmp
push
jo
pop
mov
inc
arpl
mov
mov
xor
rclb
testb
adc
loope
and
inc
push
psubw
ss
cmpsl
dec
xchg
mov
pop
loope
out
and
push
lea
orl
mov
shlb
sub
jle
shrl
mov
adc
lcall
jmp
dec
scas
into
adc
push
fwait
push
jo
mov
iret
lods
adc
xor
pop
push
adc
mov
addr16
xor
shlb
fwait
push
stc
fucomp
pop
ja
push
sbbl
les
mov
mov
into
sarb
mov
adc
cmp
xchg
and
xchg
insl
xor
adc
mov
sbb
inc
cmp
out
ja
and
pop
les
adc
pop
inc
adc
loopne,pn
xchg
cmp
shlb
ljmp
mov
scas
hlt
ret
sub
mov
outsl
inc
jmp
fs
test
pusha
sti
test
scas
cmc
lcall
insb
js
cmpsb
mov
xchg
sbb
and
cld
cwtl
and
jg
xchg
insb
mov
mov
dec
add
jecxz
es
inc
inc
and
loope
mov
dec
inc
fwait
mov
fs
and
stos
outsb
pop
std
jns
jle
cmp
repnz
sub
sahf
in
mov
or
or
jl
or
or
xor
sub
arpl
jecxz
sti
cmp
mov
sub
inc
iret
jmp
out
lds
dec
cmp
pop
mov
sarb
sarl
cmp
hlt
stos
rcrb
icebp
xchg
movsl
repnz
pop
popf
negl
mov
sbb
dec
pop
lods
push
scas
cltd
scas
push
test
mull
mov
lret
int3
jl
push
insl
repz
push
xchg
das
add
cli
shrl
mov
dec
movl
sti
mov
out
mov
push
addl
xor
mov
push
jbe
cmc
cmp
rcrb
jmp
adc
ljmp
dec
imull
mov
stos
das
rcll
xchg
push
testb
loopne
cltd
pop
or
jge
xlat
sub
lds
xchg
xchg
icebp
imul
dec
mov
data16
mov
lods
push
add
sub
mov
adc
mov
xchg
sbb
jmp
ds
dec
stc
adc
push
push
dec
in
dec
shlb
pop
ja
adc
mov
add
jl
push
aas
push
add
mov
int3
or
aam
imul
jbe
xchg
rcrb
and
ret
xchg
cmp
dec
lcall
inc
cli
sbb
cmc
call
cmp
popf
and
or
and
mov
in
lahf
cmpsl
mov
cmp
loopne
mov
sbb
push
pop
in
test
loop
loop
inc
dec
cmp
test
leave
sar
cmp
push
subb
xchg
dec
popa
mov
fildll
xor
fsts
mov
push
or
idivb
and
sub
cli
ret
mov
cltd
xchg
adc
jnp
rorl
outsb
add
inc
xor
push
xor
mov
or
repnz
mov
clc
push
fnstsw
jbe
rolb
or
add
ret
or
mov
les
add
mov
cld
add
in
int3
cmp
fcomp
xlat
jge
sub
subl
ret
js
fcmovu
push
sbb
sub
outsb
mov
cmp
lea
jmp
xor
mov
jp
ret
stc
lret
sti
lret
inc
cmpsl
and
xor
test
dec
hlt
adc
shrl
mov
mov
cli
xor
stos
arpl
jle
js
arpl
cli
xor
imul
mov
mov
mov
sti
aad
enter
mov
loope
in
clc
lret
sbb
sahf
pop
push
or
sbb
pop
jns
aaa
stos
sbb
inc
jmp
pop
les
sbbl
js
cld
aad
adc
mov
adc
lret
loopne
or
mov
xor
xchg
adc
and
pop
xchg
xadd
inc
gs
pop
aam
push
mov
pop
inc
mov
sub
pop
mov
daa
cli
jecxz
mov
pop
repnz
test
nop
faddl
jle
pushf
scas
mov
fwait
and
testl
mov
inc
dec
xor
cli
dec
mov
jp
and
imul
outsb
push
jecxz
es
movsl
in
mov
lods
out
mov
mov
in
xchg
or
inc
enter
jmp
pop
out
subl
divl
cmp
shl
test
js
popl
xlat
push
incb
xlat
sahf
mov
xchg
mov
or
or
sub
aas
js
sub
mov
inc
outsb
sub
aam
test
in
push
sbb
xchg
adc
xlat
daa
jb
outsl
stos
dec
dec
aam
fisubl
mov
pop
stos
sbb
idivl
lods
test
dec
cmc
inc
pop
pop
xor
mov
aas
mov
int3
clc
scas
mov
mov
stos
mov
jmp
push
push
stos
push
incb
xchg
jge
pop
cmpsb
ljmp
cmp
xlat
nop
out
jle
inc
jns
pop
sbb
dec
out
mov
lea
lcall
jae
dec
cmp
sbb
div
in
stos
outsb
repnz
fdivrl
cld
pushf
dec
jno
iret
pop
sti
test
lret
mov
sub
loopne
scas
pop
out
aad
dec
cwtl
lret
outsb
imul
fcoml
lea
sbb
mov
sbb
sbb
mov
lock
mov
in
xchg
clc
and
ds
cltd
jp
xorw
cmp
inc
and
mov
in
shl
push
nop
mov
xchg
xchg
mov
mov
dec
lock
loope,pt
arpl
push
lahf
rcr
bnd
lea
lods
mov
sarb
pop
xlat
mov
popa
cmp
test
xchg
aaa
pop
pop
std
in
fucomi
outsl
fmull
xchg
rcr
repnz
xor
shll
mov
fldenv
adc
cs
jo
adc
pop
icebp
lret
xor
ds
inc
leave
adc
and
iret
fstpl
sbb
xchg
aam
mov
mov
push
jo
mov
and
cmp
test
popf
mov
in
test
loopne
mov
cmpsb
mov
in
fisttpl
lret
or
lcall
int
scas
adc
sbb
push
or
mov
insb
sub
test
lock
mov
fwait
and
loop
pop
sbbb
mov
dec
adc
sub
jl
les
mov
outsb
adc
pop
mov
jge
rolb
insl
jnp
stos
movsb
jno
pop
lret
mov
fsubp
add
test
jnp
or
fsubrp
and
inc
fimuls
aas
add
fdivs
rcll
fwait
push
data16
es
xchg
mov
bnd
push
cmp
inc
repnz
dec
insl
loop
cmp
mov
bound
push
add
sub
pop
movsb
push
sbb
ret
jae
dec
aam
sub
mov
push
jne
sub
add
clc
mov
xchg
cmp
push
adc
clc
loopne
das
sarl
cmp
and
imul
ret
bound
xor
in
rolb
add
adc
xchg
pusha
enter
xchg
into
inc
out
inc
inc
hlt
cmp
inc
mov
mov
and
xor
mov
test
aad
jnp
in
cmpl
adc
mov
daa
ficoms
fisttpll
or
aam
pushf
mov
js
popa
or
mov
mov
iret
xchg
sbb
mov
xchg
or
je
lock
pushf
shll
mov
loope
test
inc
xor
fwait
push
rol
mov
lcall
hlt
je
cmc
dec
push
pop
test
dec
xlat
push
shll
cld
adc
cmp
sub
add
jnp
dec
mov
pop
mov
int
xlat
sub
sbb
sahf
pop
cwtl
xchg
jb
fildll
aas
xor
push
push
test
cmp
adc
jnp
xorl
icebp
inc
stos
sub
mov
out
and
adc
push
popf
insb
push
sub
incl
lea
jnp
pushf
hlt
push
and
decb
sbbl
fisubl
inc
es
das
adc
cmp
sub
fwait
out
adc
sub
popa
clc
and
ja
and
test
jecxz
mulb
testl
pop
dec
rcrb
out
adc
fisubs
ds
inc
outsb
jnp
enter
popf
pop
pop
sti
into
pop
sarl
pop
jno
mov
repnz
cli
scas
inc
xor
imul
repnz
scas
mov
pop
data16
mov
lret
inc
jb
outsb
xor
loope
aam
lahf
aad
cmp
movsb
int
and
push
push
or
shlb
std
mov
sub
pop
popa
jp
jle
arpl
pop
mov
xchg
inc
pushf
popf
in
pop
js
inc
dec
cmc
jne
xchg
std
jo
insb
sub
pop
dec
addr16
pop
cmpsb
arpl
add
pop
filds
xchg
decl
ljmp
enter
fwait
icebp
sbb
stos
je
daa
popa
mov
fisttpll
mov
into
jae
jg
popf
js
xlat
push
pop
mov
out
sarb
insl
inc
cmpsl
jne
popl
cli
lock
cmp
mov
mov
xor
dec
fildll
cmp
scas
pop
pop
enter
mov
xchg
push
ss
rcll
outsb
xchg
or
sbb
test
lret
push
inc
pop
std
movsl
xchg
mov
cmp
and
fcomp
in
inc
js
adc
pop
pop
or
iret
or
dec
xchg
lods
cmp
push
sub
fsubrl
into
pushl
les
or
xchg
in
testl
jle
cmp
jl
jle
pop
xchg
cmp
fwait
in
shll
jmp
repz
push
pop
sti
xchg
popa
push
pop
in
sub
add
fidivs
js
mov
std
mov
mov
idivb
lahf
sub
in
clc
xor
testb
bound
stc
pop
xlat
and
enter
loop
sbbl
mov
inc
sbb
pop
jns
das
xchg
cmpl
aaa
jbe
insb
cwtl
loope
loopne
sub
cmp
mov
repz
repz
lods
test
or
mov
pop
jb
dec
je
sub
ss
cltd
insl
repz
lods
loop
test
mov
dec
and
mov
jbe
and
xor
xchg
ss
ljmp
ss
cmp
mov
jmp
push
pusha
jge
cli
adc
sub
in
push
pop
jg
xchg
outsl
dec
loop
int3
repnz
dec
cmp
loop
xchg
int
call
sbb
sub
mov
jo
std
int3
adc
sbb
dec
mov
jle
shrl
adc
mov
icebp
out
dec
lds
cmpsb
mov
and
mov
lahf
or
mov
loop
add
xor
out
je
repz
cmp
mov
mov
pop
pushf
js
sbb
inc
pop
testl
dec
and
jno
cld
test
push
pop
pop
stos
pop
icebp
out
jle
mov
push
mov
sbb
fcompl
and
clc
icebp
cmpl
icebp
and
ror
xorl
scas
and
ret
inc
fs
mov
rcrl
xor
mov
push
xchg
xchg
xor
xor
cltd
les
dec
pop
inc
mov
xchg
pop
fldt
rclb
adc
cmp
lods
mov
rcll
hlt
repz
hlt
push
or
or
and
repz
hlt
push
and
mov
hlt
mov
stc
ss
push
cld
gs
xor
jae
sahf
mov
mov
mov
dec
jne
sahf
sub
cmpsl
inc
repnz
jl
dec
jbe
popf
xchg
in
and
imul
sbb
jns
popf
stc
test
dec
jns
jp
fidivrl
push
add
jb
jge
je
add
pop
shlb
and
call
jb
popf
jbe
stos
dec
outsl
mov
ljmp
or
ja
nop
lods
das
repnz
arpl
bound
rol
inc
outsb
jecxz
mov
inc
outsl
insl
cmp
dec
out
into
repz
movsl
pop
jecxz
xchg
jae
jbe
dec
mov
xor
or
push
leave
push
shrb
pop
mov
sub
rcrl
cmpsl
jne
lahf
xlat
add
imul
pop
cltd
cmpb
dec
je
adc
lret
adc
lods
mov
loope
int3
repz
daa
push
addl
cmp
mov
mov
faddl
xor
inc
enter
push
les
mov
mov
push
push
imul
dec
jne
enter
jecxz
popf
movsb
mov
mov
aaa
out
add
int3
push
ja
sub
pushf
xchg
cmp
jle
sbbl
cmc
addb
jle
push
fsts
in
add
pop
xchg
jg
jmp
loope
cmp
scas
adc
gs
fisubs
mov
loope
add
rorl
aad
aaa
pop
test
push
cmpsl
out
loopne
aas
fdivrs
cmp
loopne
daa
mov
call
gs
mov
call
mov
lds
and
jecxz
fldt
adc
inc
fistpl
or
add
push
dec
mov
cmp
cltd
push
dec
dec
fsubrs
fbld
adc
xchg
ds
cmp
aam
push
aam
cmp
or
fstl
push
xchg
sub
sbbb
pop
fwait
shlb
push
mov
hlt
mov
lods
jmp
bound
mov
push
loope
rorl
ss
aam
xchg
rcrb
dec
and
dec
ss
push
loope
arpl
push
arpl
sub
dec
push
mov
push
pop
enter
cmp
dec
push
ljmp
insl
pusha
testb
arpl
enter
cwtl
push
shll
call
jg
jne
xchg
out
sbb
es
mov
orb
sub
push
rcr
xor
stos
jle
sahf
dec
int3
out
adc
jecxz
jns
xchg
pop
add
add
sbb
jecxz
inc
or
lahf
addb
jno
dec
sahf
xchg
stos
insl
mov
push
stos
sub
out
ds
sti
cmpsl
pusha
dec
xchg
inc
cmp
call
gs
cwtl
call
cmpsb
lahf
add
xorb
scas
mov
dec
call
xchg
dec
lds
push
aam
in
jno
nop
hlt
lret
push
add
sub
pusha
les
std
xchg
cmpsl
dec
jo
mov
mov
fcompl
es
mov
insl
popa
push
jo
xchg
or
fadds
pop
push
in
cmc
mov
lds
pop
sub
fstp
jg
mov
mov
sti
in
arpl
pop
dec
es
pop
adc
dec
xor
inc
pop
scas
cmp
sbb
lods
mov
lcall
push
aad
lcall
push
out
push
mov
loope
test
stc
mov
sti
or
scas
or
int
adc
aas
lods
addr16
push
enter
outsl
pushf
fs
sub
jae
sub
inc
mov
cmp
in
mov
dec
mov
std
jb
fsts
lock
es
out
or
data16
mov
cld
movsl
add
test
xor
sahf
fcmovne
aas
daa
or
push
movsl
mov
out
mov
inc
call
add
dec
or
call
and
xor
or
rcr
out
pushf
xchg
fwait
pop
adc
or
xor
xor
iret
mov
adc
aaa
dec
jne
pop
mov
push
adc
shll
push
int
mov
xchg
sbb
das
dec
loop
lods
adc
fwait
cmp
mov
mov
mov
loop
cmpsl
adc
mov
mov
int3
mov
adc
dec
repnz
test
cmp
cld
aad
push
and
push
repnz
cmc
push
mov
pop
push
jb
stos
sbb
jl
push
add
dec
mov
insl
and
jp
outsl
test
cmp
push
std
aas
cmp
stc
add
adc
and
or
xchg
mov
movsl
test
xchg
std
shll
fcompl
lret
jg
je
shlb
aad
cmp
pop
xlat
or
repz
or
bnd
testb
hlt
inc
inc
outsl
sbb
inc
dec
xchg
xor
insl
sahf
cmc
pop
sbb
push
icebp
xchg
fs
loope
test
add
and
and
cld
cmc
push
adcl
std
mov
push
push
xchg
mov
push
and
inc
cmp
fldpi
rorl
dec
mov
sbb
imul
scas
sbbb
cld
test
pop
jmp
addb
outsl
cmp
ret
inc
mov
push
cld
stos
aam
in
std
pop
sbb
fsincos
rcr
inc
rcll
ror
repz
mov
call
mov
rcrb
dec
and
xor
adc
and
sub
lods
xchg
adc
fistl
cld
ficoms
mov
sbb
outsb
mov
and
je
repz
mov
stc
outsl
mov
adc
cmp
adc
jl
cmpsb
fdivr
insb
outsb
test
mov
dec
mov
push
fucomi
aas
pop
sti
scas
imul
pop
rorl
lret
int
int3
stos
popa
mov
xor
rorl
mov
fisubl
jg
and
scas
sub
xchg
inc
roll
mov
inc
cmpsl
in
fildll
xchg
mov
and
jge
xchg
mov
cmpsb
lods
inc
lret
cmp
adc
enter
icebp
mov
mov
jbe
cwtl
adc
imul
xor
movsb
xchg
movsb
jp,pt
ret
gs
push
mov
mov
nop
mov
out
sbb
mov
sub
hlt
and
sti
outsl
fildll
xchg
in
lret
mov
sbb
call
enter
inc
lcall
dec
mov
xchg
ds
repz
ret
fdivrs
ret
adc
imul
xchg
pop
xchg
sub
adc
pop
lret
inc
push
and
fnstenv
shlb
dec
jecxz
lret
push
cmp
push
mov
jns
push
inc
movsb
xchg
js
imul
jb
vpunpckhqdq
ds
loop
ljmp
cmpsl
divl
js
jbe
or
sbbb
into
data16
mov
lock
stos
fdivrp
ret
pop
xor
adc
mov
or
adc
mov
jp
adc
int3
data16
xor
mov
xlat
sub
mov
dec
or
adc
inc
adc
out
xchg
divl
mov
and
xchg
sti
mov
mov
stc
jge
or
out
lods
into
mov
adc
mov
pop
mov
pop
or
cmp
ret
or
pop
mov
call
btr
out
ret
push
cwtl
sti
mov
sti
adc
cmp
lods
lds
dec
cli
jnp
jne
push
xchg
sbb
mov
shl
cli
std
sub
insb
aas
incb
scas
xchg
cli
out
hlt
aas
sbb
push
mov
mov
jl
repnz
mov
in
nop
iret
out
fs
push
xor
cmc
sbb
push
imul
stc
fadds
push
push
mov
xchg
test
jnp
dec
jmp
subb
mov
fiaddl
ror
pusha
test
scas
sub
or
aaa
fdivrs
ds
inc
sti
push
outsl
jl
mov
jp
outsl
pop
pusha
btc
jg
pop
pop
add
lea
xor
inc
in
adc
mov
cmp
rcrb
pop
pop
fdivp
jmp
icebp
lahf
ss
shrl
icebp
or
xor
rclb
mov
mov
aad
push
xchg
xchg
aam
aam
mov
dec
push
sti
mov
imul
ljmp
mov
inc
test
jge
fisubrs
mov
stos
mov
mov
mov
loope
aaa
sbb
push
adc
cmpsb
stos
test
sbb
iret
jmp
adc
inc
frstor
mov
cmpsb
mov
pop
pop
and
sti
aas
push
cli
and
dec
lea
and
iret
andb
pop
push
cli
data16
cwtl
jnp
out
mov
std
and
or
out
push
dec
mov
push
cmp
jne
inc
subl
adc
mov
mov
js
mov
hlt
dec
mov
push
fisubrl
iret
out
xor
inc
rcl
movl
pop
imul
mov
cld
clc
or
out
cmp
xchg
jnp
mov
pop
dec
jg
jl
loope
sbb
xchg
daa
cli
push
cmc
fildll
push
xchg
jg
movsl
mov
movsl
out
aas
sbb
xor
sbb
sbb
imul
inc
jns
add
aam
dec
mov
enter
imul
sbb
xchg
arpl
xor
mov
mov
inc
into
jmp
xor
mov
push
bound
les
jb
mov
ds
imul
cmc
xchg
push
lret
inc
jbe
out
mov
cld
cwtl
pop
adc
adc
xchg
aad
and
pop
dec
sbb
dec
or
xor
mov
fmul
int
xor
enter
jae
push
adc
xchg
push
dec
push
inc
fs
or
lret
bnd
adc
movb
into
xor
shr
jp
mov
or
into
scas
les
lea
pushf
cmp
xor
jge
ljmp
fists
xchg
jge
in
icebp
test
daa
mov
cli
jae
int
test
xor
fdivr
pop
pop
jg
stos
cmpsl
pop
scas
stos
or
jb
je
and
cwtl
xchg
fs
sbb
outsb
sub
mov
sbb
je
enter
and
xor
cmp
sti
mov
pop
out
adc
fs
inc
mov
sarl
jns
sarb
xchg
scas
cltd
rcrb
mov
arpl
fnstcw
pop
in
xchg
dec
pop
jg
push
and
cwtl
mov
lahf
inc
dec
sub
sub
push
jne
xor
sbb
repz
iret
dec
mov
dec
test
xchg
jecxz
arpl
call
popf
mov
ficomps
push
hlt
jno
inc
cmpsl
mov
mov
popf
sub
cmp
dec
pop
push
push
xchg
rcr
push
sbb
push
repz
cmp
lret
je
lods
test
je
clc
aas
pop
stos
sub
lock
fwait
mov
inc
jge
sub
pop
push
adc
repz
imulb
in
jg
sub
imul
and
inc
aas
xchg
aas
lahf
lret
int
ret
pusha
int
dec
nop
cmp
mov
xor
push
push
or
cmp
rclb
mov
pop
int3
xchg
frstor
mov
stos
cmp
mov
bound
test
xchg
stc
les
jne
pop
mov
mov
dec
lahf
push
push
and
sub
out
adc
lahf
xchg
call
lea
out
jnp
xchg
cmpsl
xlat
mov
into
testl
sahf
rol
push
cmp
dec
push
sbb
dec
sbb
add
mov
jmp
jmp
xchg
jo
sahf
fnstcw
out
test
mov
cmp
xlat
jge
mov
push
stc
hlt
xor
mov
pop
xchg
xor
xor
mov
sbb
cltd
push
mov
testl
int3
sahf
test
push
adc
stos
lahf
sub
ja
jmp
inc
mov
cmp
test
sub
scas
cmc
inc
int
ja
mov
out
mov
jp
mov
stos
rorb
mov
daa
mov
rcll
and
xchg
in
mov
mov
jmp
cmc
fsubl
fisubrs
das
and
xchg
jae
fcomps
xchg
fldenv
jb
sub
xchg
inc
push
insl
mov
dec
dec
mov
je
movsb
call
sub
mov
aas
lock
shl
lods
sbb
lock
pop
dec
mov
aas
out
inc
xlat
mov
sbb
shlb
push
int
fs
dec
inc
iret
sbb
pop
mov
adc
popa
hlt
jb
push
lock
sub
lock
xchg
inc
out
dec
out
lret
xchg
clc
ljmp
cmc
cwtl
inc
mov
in
shr
mov
pushf
dec
andb
ret
xchg
add
daa
jnp
fucomp
out
sbb
adc
jo
xchg
xchg
mov
aaa
xchg
pop
in
or
test
xchg
es
sub
ficomps
fwait
jno
in
notb
xchg
stos
aas
das
mov
push
repz
pop
mov
pop
mov
out
mov
push
out
cmc
bound
xchg
jmp
dec
add
cld
sub
inc
in
push
or
clc
push
movsb
std
or
fidivl
je
out
test
rolb
aam
stos
xor
cmp
imul
leave
adc
dec
add
sub
sbb
sub
mov
adc
xor
nop
outsb
shrb
scas
sub
xor
push
out
pop
add
daa
jl
inc
outsl
pop
dec
or
add
clc
or
mov
outsb
xor
ds
and
mul
mov
insb
popf
repnz
lret
jns
xchg
lahf
push
mov
ret
repz
mov
adc
inc
bound
adc
xchg
mov
faddl
cmp
pop
cwtl
jno
push
push
sti
mov
xchg
pop
jne
enter
jmp
lock
mov
nop
movsl
lock
dec
fidivl
lahf
je
iret
scas
jecxz
iret
mov
xor
jl
mov
imul
mov
cmp
js
fisubl
cmc
jmp
idiv
and
mov
ret
jecxz
sti
jo
and
mov
push
adc
jge
and
mov
pop
fdivrs
sbb
jle
inc
and
inc
jl
inc
jnp
cmp
push
push
jmp
add
nop
and
outsl
cmp
lahf
adc
int3
cmpsb
shrl
xchg
mov
mov
daa
sub
xlat
pop
adc
cli
mov
pop
data16
gs
je
pushf
fndisi(8087
cmpl
pop
adc
sbb
leave
lock
loope
rcr
shlb
mov
sahf
je
pop
inc
cmp
aad
fistl
mov
movsl
push
sti
inc
inc
imul
xchg
dec
das
jae
rcrb
pop
xchg
je
das
fcmovb
mov
mov
out
pop
mov
movsl
fwait
out
sbb
bound
sbb
dec
add
mulb
dec
jb
aam
push
fsubr
fistpl
lret
loope
sub
and
push
jecxz
xchg
fisttpll
mov
mov
pop
lcall
push
std
testl
mov
jns
cmc
sarb
dec
xchg
xchg
xorb
mov
sbb
pop
jmp
loopne
sarw
dec
push
mov
mov
ret
pushf
fildl
ljmp
cld
stc
hlt
mov
cmp
mov
mov
dec
aad
loopne
xchg
clc
int
movsl
push
enter
fimull
stos
out
xchg
movsl
aaa
or
mov
cmp
mov
sbb
push
mov
mov
repz
outsb
mov
jecxz
fdivrl
dec
ja
push
mov
pop
aad
cmc
push
stc
dec
daa
sub
jbe
or
xchg
ljmp
mov
push
mov
into
push
mov
jo,pn
insl
insb
shlb
ss
mov
pop
into
ret
push
push
sub
pop
clc
mov
fsts
loopne
lahf
pop
adc
push
and
dec
out
jb
push
push
andl
push
xor
jbe
jmp
mov
xchg
and
hlt
imul
push
or
jl
idiv
push
cwtl
lret
dec
and
outsl
sbb
repz
arpl
pop
mov
mov
cmp
push
popf
fs
push
xchg
and
sub
aas
lea
mov
dec
sub
js
lret
inc
stc
popf
std
inc
mov
repnz
dec
jne
inc
push
push
ficoms
and
movsl
mov
ljmp
stos
mov
cwtl
adc
rcll
mov
jne
lret
out
in
jecxz
lcall
pop
cmp
fs
loope
lea
sahf
pop
lcall
enter
leave
insb
dec
xlat
pusha
sbb
cmp
js
xchg
test
jle
cmc
jmp
aad
sahf
mov
mov
xchg
push
ja
jp
bound
loop
or
xor
icebp
dec
out
hlt
jecxz
mov
stc
fldcw
pop
and
aad
add
xchg
xchg
and
test
dec
fistps
jne
sbb
mov
stos
pushf
rclb
or
clc
xchg
jp
sub
out
inc
inc
mov
add
out
jae
xor
testl
adc
jecxz
addl
ret
lods
repz
cmp
xchg
xchg
aad
xchg
xorb
cmp
inc
je
fisttpl
lret
pop
and
cmpsb
mov
bound
jp
adc
push
hlt
jp
xchg
sub
aas
mov
xchg
bound
cmp
stos
in
dec
in
jne
adc
add
mov
jne
stos
jp
lahf
shl
push
popf
push
icebp
dec
scas
pop
push
out
sbbb
test
cmpsb
cli
fbstp
in
mov
popa
pop
mov
push
ss
or
hlt
and
ret
mov
jo
add
xchg
mov
xchg
daa
rcrb
or
testb
pop
movsl
mov
fs
sub
in
sbb
cmp
popf
sahf
lock
bound
add
test
sbb
pop
outsl
mov
pop
mov
hlt
fsubl
and
cmpsb
push
adc
adc
xor
push
jne
movsl
insb
shll
cmp
xor
loopne
cmp
jbe
push
fcmovnbe
mov
mov
aam
jge
pop
ds
daa
push
mov
dec
lods
fcompl
cld
pop
lods
ds
sbb
xor
mov
les
pop
add
fs
mov
mov
mov
std
cmc
jecxz
cmpsb
les
dec
mov
add
popa
xor
mov
fistpll
pop
pop
pinsrw
xlat
shll
push
ja
fsts
fwait
push
pusha
testl
enter
pop
mov
sub
stos
outsb
mov
scas
add
jle
jge
outsl
sub
lahf
add
mov
pop
mov
popa
lahf
scas
pop
jo
rcrl
or
inc
pop
pop
pop
adc
clc
push
pusha
xor
pop
gs
push
fdivr
in
nop
test
int3
xchg
ss
cwtl
add
inc
je
icebp
sbb
xchg
je
and
mov
pop
xor
fldt
push
cmp
lret
or
or
data16
mov
pusha
cwtl
jno
ss
popf
test
xchg
cltd
aam
push
push
adcb
test
test
ret
push
jns
mov
shlb
test
out
std
cld
pop
repz
cmp
sbb
paddusw
imull
fnstcw
insb
inc
adc
cmp
mov
rorl
cmp
je
in
ret
xchg
ja
popf
hlt
push
xchg
xchg
inc
lods
sbb
jl
adc
add
lds
out
xor
mov
jmp
jecxz
sbb
mov
add
pop
push
mov
jo
mov
push
fs
stos
ret
popf
loope
loop
push
es
lret
xorl
xchg
outsl
sahf
xor
push
sbb
push
push
scas
xchg
mov
stos
les
ss
sbb
scas
push
sbb
adc
shrb
fisttps
insb
xchg
imul
daa
sub
das
push
jge
cld
mov
adc
adc
sbb
fs
xor
hlt
jno
fistpll
push
lcall
mov
jo
cmpsb
mov
pop
fisubl
movsl
ficoml
push
pop
mov
insl
mov
inc
and
add
sub
inc
xchg
push
sbb
cmp
out
enter
pop
sbb
pop
push
enter
jbe
testb
adc
test
inc
cli
sar
aam
imull
insb
sarb
sbbl
jns
cmp
mov
jb
into
popa
out
sub
or
aam
adc
cld
xor
lahf
add
lods
xor
fwait
mov
pop
mov
cmc
jo
inc
pop
fs
mov
pop
mov
pushw
jecxz
js
or
dec
xor
jl
xor
push
loop
cmp
fwait
jle
xchg
clc
stos
fwait
push
jnp
aad
data16
jg
mull
jmp
stos
adc
adc
insb
fs
movsl
test
mov
cmp
mov
mov
dec
daa
shl
mov
xchg
aam
scas
sbb
cmpsb
mov
fcompl
jmp
pop
push
mov
mov
add
into
insl
jmp
inc
jmp
pop
into
lds
jecxz
iret
repz
addr16
out
xor
mov
sahf
xchg
leave
aad
aam
push
clc
sub
adc
jg
fdivrl
imul
out
add
push
jne
push
call
sti
arpl
fsubrs
mov
mov
cmpsb
and
and
add
test
rorb
notb
fisttpl
or
cltd
cmp
mov
lods
add
fimull
push
lods
in
loopne
in
add
push
or
jg
out
sbb
lods
shlb
sbb
sub
adc
clc
out
pop
repnz
pop
ror
add
stc
jne
stc
xorl
pop
fwait
jns
inc
add
push
or
dec
sahf
dec
ds
inc
cld
aaa
mov
int3
cltd
imul
dec
xor
xchg
or
dec
fmul
icebp
mov
inc
jl
push
or
out
add
aam
sbb
cmp
add
xor
push
xor
lods
ficomps
cmp
mov
sbb
out
adc
cmpsb
test
or
add
lcallw
fldcw
fnsave
daa
pop
sbbb
pop
scas
jmp
adc
jnp
jmp
mov
mov
pop
xchg
sbb
daa
jecxz
cmc
push
push
mov
icebp
ljmp
int
add
inc
cmp
shr
cmp
in
ret
test
ret
mov
ror
lods
ss
pushf
push
lea
stos
in
rclb
sub
ja
push
ss
rcl
nop
shll
sbb
imul
lock
sub
cli
push
inc
in
mov
loope
pushl
ljmp
adc
shrb
popf
cmc
jb
push
imul
push
push
cmc
pop
ror
pop
out
mov
popf
dec
gs
mov
call
sub
adcb
xchg
adc
inc
push
lds
imul
or
cld
ret
fstp
lea
test
repz
scas
sbb
dec
mov
into
or
repz
ds
xlat
les
fwait
push
or
mov
daa
arpl
ret
dec
jne
xlat
xor
lods
push
xchg
ss
filds
pop
jge
scas
icebp
mov
cmc
test
enter
cltd
xor
aaa
pushf
sbb
test
aad
adc
bound
popa
dec
out
pushf
cmp
cmpsl
dec
cmp
mull
mov
dec
incb
fwait
dec
or
rcr
out
and
inc
sbb
xor
mov
sahf
repz
mov
mov
lods
sti
les
sub
push
xor
mov
testb
aad
adc
clc
aas
insl
call
out
pop
lods
push
add
test
lret
test
push
jnp
sub
dec
dec
inc
jp
pop
shll
lret
ja
cmp
or
leave
das
mov
or
add
call
or
add
mov
xchg
sbb
mov
inc
jbe
sub
jbe
es
xor
xor
mov
pop
mov
jne
inc
xchg
jbe
cmp
sahf
jmp
xor
movsb
gs
cmc
inc
xchg
xlat
jb
sub
and
mov
call
and
xlat
call
out
push
mov
roll
rolb
outsl
inc
popa
imul
lea
cmp
or
jns
cmpl
loop,pt
mov
popa
test
push
pop
outsl
nop
cmpsl
sbb
roll
outsl
dec
xor
dec
adcl
jne
mov
bound
xchg
mov
lock
jo
aas
dec
lods
test
inc
popa
dec
shll
insl
sub
aad
jae
bound
negl
push
andl
test
jnp
jnp
stos
out
add
lret
mov
repz
idivl
pop
mov
sub
cmp
push
popf
mov
in
pop
filds
xchg
test
cmp
sbb
arpl
adc
xchg
pop
mov
pop
pop
shlb
push
adcl
cmp
mov
out
jns
arpl
xchg
icebp
movsl
cltd
divb
adc
push
push
mov
mov
cmp
addr16
sbb
mov
into
mov
inc
or
cmp
jnp
fstl
pop
xlat
sti
call
iret
je
jl
xchg
sub
out
pushf
pop
es
pop
jp
jge
ficomps
jl
js
mov
pop
jg
dec
mov
pushl
dec
aas
xor
sub
add
cmpsb
dec
in
mov
fldl
scas
test
jecxz
ljmp
xchg
sbb
ljmp
cs
popf
pop
dec
xor
ds
jp
inc
xor
out
cmp
jmp
test
xor
inc
rorl
jo
dec
mov
sarl
pop
pop
mov
dec
mov
and
xor
sbb
jnp
and
fdivrl
jmp
jns
std
adc
adcb
xchg
cwtl
xchg
cmp
in
movsl
je
aas
rcr
out
or
jb
xlat
xor
imul
inc
out
xchg
aad
cmpb
nop
pop
cmp
push
jg
je
or
add
fisubl
outsl
pmulhw
inc
lcall
lahf
add
dec
inc
add
arpl
push
push
mov
xor
cmp
mov
mov
sub
ret
mov
rcrl
jb
leave
xchg
decb
jb
insb
cmp
dec
xchg
incl
iret
jmp
loopne
pop
test
lahf
stc
das
in
call
jle
jbe
je
and
out
dec
pop
sub
scas
lret
xchg
gs
or
add
pop
lock
xlat
mov
nop
jle
test
or
ljmp
inc
cli
test
xor
dec
cld
jg
sbbb
nop
mov
mov
inc
sbb
adc
or
push
push
or
jle
pop
sahf
iret
into
pusha
xchg
and
add
repz
test
push
insl
and
or
mov
cli
in
ret
testl
in
dec
fdivrs
jmp
add
scas
inc
and
pop
xchg
adc
jb
ret
into
mov
enter
nop
fcompl
inc
insl
lds
sbb
and
out
sbb
jmp
push
in
fisttps
xchg
xchg
stc
popa
out
js
movb
mov
std
jecxz
sti
xchg
and
xor
rorl
fsubs
or
cmp
jl
in
cmp
xor
or
movsl
addr16
cmp
add
repz
in
mov
xor
dec
aam
in
popf
or
jns
shl
cmp
jbe
adc
sbb
leave
mov
sub
fidivrs
js
lock
xchg
adc
add
xor
xchg
cmpsb
sbb
pop
jecxz
and
std
add
hlt
scas
add
mov
xor
lahf
add
adcl
xchg
rcll
xchg
xlat
mov
pop
fnstenv
aad
sbb
test
or
mov
or
mov
out
lock
test
pusha
xor
sub
push
adc
sarb
push
jbe
and
popf
pushf
sahf
adc
add
or
sbbb
jmp
xor
cli
popf
push
pop
xor
jns
lea
in
sub
loopne
add
cmp
push
test
pop
test
mov
pushf
lcall
call
int
es
push
arpl
shlb
and
or
jb
push
pushf
inc
adc
jb
sbb
pop
mov
icebp
and
pop
inc
repz
cmp
pop
add
dec
mov
pushf
push
jecxz
or
outsl
inc
lock
xlat
mov
es
add
fadds
inc
push
test
cmp
mov
and
jg
or
dec
cmp
dec
add
pusha
and
hlt
and
ljmp
pop
adc
mov
xlat
cmpl
xor
and
jl
fldenv
jg
fwait
int3
into
xor
shlb
lcall
mov
add
xchg
mov
aas
push
movhps
shlb
or
adc
push
jg
xor
sub
and
xor
pop
adc
inc
das
rcl
jno
sbb
add
lods
fcoms
sbb
pushl
insb
in
shrb
sub
mov
adc
sbbb
push
sub
rcrl
jno
rorl
jns
stc
cmpsl
mov
inc
push
testb
imul
adc
rorl
loope
jg
adc
jae
gs
add
mov
mov
sub
push
mov
mov
adc
jae
jns
mov
dec
cmp
fdivr
mov
jnp
push
iret
xchg
repz
mov
paddsb
into
adc
pusha
shrl
mov
gs
xchg
std
inc
aaa
push
iret
inc
ret
mov
scas
jns
fsub
stc
mov
dec
in
ret
xchg
dec
dec
jmp
ja
push
rorb
test
sub
iret
jg
dec
sub
fisubs
push
cmovg
dec
scas
pop
imull
cmp
ret
movsb
scas
pushf
push
jns
add
mov
aad
mov
adc
iret
cmpl
sub
add
mov
shll
jmp
fdivrp
push
cmc
hlt
mov
lds
xchg
mov
push
mov
or
cld
xor
jmp
fsubrl
clc
test
mov
inc
fcomps
mov
sub
pop
push
sbb
out
or
cli
leave
xchg
test
inc
je
aas
jg
std
push
fcoml
dec
daa
dec
sub
pop
pusha
enter
cltd
jbe
push
mov
fsubrp
cmpsb
popf
pushf
cli
rep
das
movsl
ret
jae
xchg
imul
popf
hlt
iret
sub
push
cmp
jp
movsb
mov
dec
rep
xchg
add
pop
clc
cmpsl
es
push
push
push
pop
ret
mov
addb
mov
jmp
jg
xchg
mov
ret
push
fwait
inc
pop
in
loope
or
xor
ds
repz
push
les
cwtl
rolb
push
ss
insb
cmp
inc
jge
iret
jmp
jge
and
sbb
stc
xchg
xchg
pop
nop
ss
fldl
test
lea
xchg
iret
jb
ss
scas
pusha
and
xchg
sub
pop
push
arpl
adc
punpckhwd
mov
insl
sbb
push
pop
inc
test
jne
jl
lds
mov
gs
outsb
add
jno
push
pop
mov
nop
and
fcompl
and
aaa
fnstenv
adcb
add
push
movsb
ss
cmp
in
jp
jb
cwtl
mov
push
inc
mov
sbb
mov
test
cmc
and
dec
xor
add
dec
test
rorl
mov
ja
adc
or
mov
lock
mov
add
cmpsb
ret
les
imul
outsl
push
icebp
push
mov
or
push
xchg
lcall
cmp
and
rclb
pop
and
lock
mov
movsl
mov
call
inc
mov
into
ret
enter
ss
stc
aas
sub
sbb
pop
sarl
jg
dec
loopne
lea
test
and
pushf
into
ss
sub
das
into
test
jo
js
xor
sub
filds
fst
rcrb
lea
dec
jbe
ss
cmp
sbb
jecxz
or
jle
pop
push
cmpsl
pop
xchg
and
rorl
push
mov
sarb
int
jne
jg
movsl
or
mov
ds
adc
jns
loopne
adc
mov
sarl
negb
mov
xchg
inc
dec
cmovo
leave
hlt
add
rorb
cmp
movl
or
ds
ss
xchg
and
ja
mov
das
push
cwtl
inc
sbb
cli
xor
in
pop
mov
cs
cmp
add
xor
add
clc
aaa
jle
mov
nop
pop
fnsave
and
gs
fisubrl
out
imul
adc
mov
js
sbb
mov
cmc
cmp
mov
int
mov
mov
cmc
scas
push
and
add
add
sub
xchg
ss
mov
sbb
mov
addr16
aaa
add
fwait
push
test
pop
pop
js
nop
es
fidivrs
cmpsl
subb
dec
pop
mov
and
add
imul
mov
nop
pop
jge
sbbl
lock
test
xor
jne
gs
out
faddl
pop
pusha
rorl
scas
dec
mov
cmpsl
mov
in
das
dec
jbe
mov
push
pop
out
rcr
add
repnz
pop
addb
fstpt
mov
and
push
fcmovnb
push
jbe
lret
test
lods
or
fidivs
mov
les
jns
add
inc
or
jno
sub
out
outsb
pusha
aas
pop
adc
lea
mov
cmp
lea
repz
adc
dec
cmc
jle
dec
sbb
std
mov
loope
iret
or
loop
add
fwait
xchg
sbb
add
je
mov
hlt
adc
pop
push
int
lods
adc
rcrb
or
or
scas
dec
mov
cltd
xchg
bnd
xor
out
leave
xchg
jns
lods
sbb
jl
xor
pusha
cli
mov
stos
aam
push
mov
inc
ficoml
add
outsb
xchg
in
fdivl
cmp
cmp
and
lahf
lret
xchg
mov
insb
xor
mov
mov
and
fldt
aaa
stos
ss
test
and
popf
rclb
pop
xchg
repnz
out
les
adc
mov
dec
mov
or
in
movsl
mov
xlat
xchg
jmp
fbstp
out
cmp
cmp
jg
xchg
popa
mov
pop
jl
push
cmp
inc
daa
adc
mov
mov
sbb
sub
dec
jmp
sbb
mov
pusha
add
xor
cwtl
jnp
push
cmpsl
push
mov
jb
adc
push
push
push
or
std
test
dec
cmpsl
std
lret
or
sub
xlat
test
or
rcrl
in
fsubl
lret
adc
push
sub
fstl
sbb
stos
fnsave
imul
popf
xchg
or
sub
aas
and
jns
or
movsl
push
aas
sbb
jl
push
scas
push
dec
je
pop
popf
fadds
sbbl
cltd
arpl
pop
pop
adc
les
pop
insb
sbb
or
lods
sub
inc
sbb
or
cmp
xchg
mov
and
and
cs
leave
movsb
test
imul
iret
cmc
leave
dec
sub
int
pop
ja
and
pop
dec
stc
scas
pop
fwait
movsl
fimull
mov
cmpsb
jne
sbb
cli
hlt
pusha
ror
rcrb
add
mov
lahf
add
test
in
inc
pusha
pushf
push
insl
outsl
push
adc
xchg
in
sbbb
in
lods
icebp
jecxz
loopne
push
mov
stos
mov
and
mov
jae
or
adc
mov
aas
dec
lods
xchg
stos
jle
cmp
or
add
popf
cltd
rorb
in
mov
mov
lcall
outsb
push
cmp
aad
daa
push
xor
mov
push
hlt
mov
rclb
add
pop
add
push
mov
mov
loop
cld
mov
in
ret
sub
dec
sbb
pusha
xchg
popa
aaa
cmp
sbb
and
data16
loope
sbbl
loopne
or
push
jl
jmp
cmc
add
sub
jae
movsb
mov
jp
or
fistps
fwait
mov
dec
fistl
mov
mov
mov
and
jecxz
into
fs
inc
mov
pop
sub
adcb
lret
arpl
jecxz
scas
xchg
pop
cmp
inc
push
cwtl
jo
pop
mov
pop
mov
cmp
pop
or
or
mov
into
xchg
stc
pop
push
aam
pop
ror
mov
lret
loopne
jo
les
out
ds
jnp
push
sbb
mov
dec
pop
mov
cmp
lcall
xchg
mov
xlat
xor
pusha
out
xchg
out
or
dec
sbb
push
mov
es
in
stc
or
mov
dec
mov
add
push
or
mov
adc
rcll
inc
insb
cmp
shlb
aaa
repnz
mov
xchg
adc
xor
xor
imul
scas
out
sbb
adc
push
loopne
push
scas
sbb
mov
cmc
popa
incl
pop
lods
movsb
mov
jge
sbb
sub
jns
test
cmpsl
adc
ret
daa
pop
loopne
add
in
outsb
les
mov
sbb
adc
xchg
test
jns
out
lds
sbb
or
push
pop
test
ret
dec
adc
shrb
jp
inc
in
int
jae
inc
out
xchg
popf
xor
sbb
aam
push
and
pop
inc
aad
xchg
or
movsb
movsb
cmp
cmp
jge
mov
imul
add
dec
xor
stos
lods
repnz
mov
test
pushl
xor
lret
sub
loopne
in
inc
inc
sbb
add
jno
in
jg
xorl
pop
and
fimull
int
arpl
jg
shll
popf
lahf
inc
and
movsb
ds
push
inc
xchg
xchg
xchg
or
jnp
jge
xchg
push
imull
arpl
mov
push
pop
jnp
xchg
mov
in
mov
ds
inc
cld
in
add
ret
idiv
ljmp
js
int
mov
out
std
xchg
mov
adc
mov
inc
bound
xchg
adc
cmc
sbbl
or
mov
testb
les
xchg
stos
and
das
insb
lret
or
sbb
in
nop
mov
adc
mov
push
movsb
stos
rorb
sti
fiadds
imul
sti
sub
in
sbb
lahf
jo
cld
or
jne
lret
mov
in
mov
std
mov
shlb
fstps
mov
mov
mov
mov
mov
aas
mov
jae
ja
push
out
popf
jbe
repz
pushl
mov
cmp
mov
ficomps
pop
adc
test
arpl
sbb
xchg
cld
in
mov
xchg
sub
mov
sub
mov
lcall
and
data16
pop
inc
fists
fisubrs
sub
call
and
mov
stos
pop
mov
aas
jl
mov
jae
dec
sti
sub
xor
lock
outsb
add
loope
test
ja
loopne
jge
xchg
push
inc
les
mov
or
xchg
cmp
pop
and
adc
dec
lods
mov
xchg
fisttpl
jl
push
popf
dec
outsb
pop
or
xchg
add
jo
cwtl
rcr
mov
sub
out
sbb
in
or
aam
mov
or
test
push
dec
in
jae
icebp
outsb
xorps
add
adc
xchg
mov
test
cs
sbb
mov
inc
ror
inc
fwait
jmp
fs
dec
xor
adc
ja
dec
sbb
seto
sbb
xchg
cmp
fistl
inc
cmpsb
scas
jp
sub
aam
xor
leave
xor
pop
std
gs
push
insb
dec
adc
sbb
mov
insl
roll
cmp
fistl
xchg
sub
cmpsb
js
test
pushl
and
loopne
negl
fnsave
lds
mov
test
cmp
sbb
rcrb
dec
shr
ds
pop
scas
pusha
cltd
adcb
mov
sahf
xchg
push
aaa
dec
outsb
mov
add
mov
cltd
jg
fildl
cmp
mov
and
pop
ret
adc
mov
cmp
cmp
sbb
pop
xor
cwtl
fwait
out
subl
push
pusha
mov
cmc
aad
push
sub
lea
lods
arpl
xchg
xor
insb
push
sbb
lock
xor
cmpsl
xchg
enter
frstor
fiaddl
stc
xchg
test
shrl
filds
mov
divb
pusha
xlat
mov
movsl
sbb
xlat
add
pop
push
ret
mov
jmp
inc
cmp
sar
mov
mov
nop
out
or
and
xor
and
imul
dec
dec
and
cli
inc
sub
sarl
jecxz
fisttpll
push
cmp
mov
xchg
mov
lock
jne
mov
insl
add
fdivrs
cmp
std
ret
pop
jmp
cmpsb
addr16
xlat
lods
movsb
cmc
les
shrl
mov
mov
mov
jl
pushf
mov
daa
pushf
cmp
test
mov
ret
cmp
sub
mov
stos
pop
fildl
mov
jge
aad
mov
outsb
jle
dec
outsb
push
mov
outsl
cltd
pop
imul
je
push
mov
out
dec
dec
jno
insb
imul
mov
push
pop
mov
iret
jno
sahf
pop
sub
pop
xor
mov
enter
lea
dec
stc
cmpsb
das
or
mov
cwtl
test
push
shl
sub
insb
mov
dec
xchg
inc
or
stc
pusha
pop
xor
sbbb
scas
in
dec
push
inc
cmp
mov
or
mov
pushf
das
mov
in
movsb
inc
and
ds
mov
jg
test
jg
lahf
cld
inc
fnstcw
ret
jbe
test
or
roll
push
aad
jb
mov
mov
aas
es
adc
testb
in
adcb
mov
sti
or
ret
orb
push
mov
xchg
hlt
inc
test
xchg
jp
call
xchg
mov
push
mov
jmp
in
dec
mov
and
fistl
xor
ss
lahf
mov
sbb
sbb
data16
pop
adc
int3
dec
fnstcw
and
mov
dec
dec
or
jle
out
fdivr
jle
incl
inc
insl
cmp
mov
push
mov
cmpsb
push
and
inc
in
fwait
sub
pusha
test
add
fs
in
cmp
popa
mov
cli
push
scas
in
sub
loop
jnp
inc
pop
lret
arpl
in
add
icebp
dec
push
jecxz
rclb
xor
xchg
xchg
inc
pop
mov
out
bound
daa
in
lods
cmpsb
aaa
lret
sbb
cmp
cwtl
mov
imul
inc
mov
movsl
inc
push
fldt
iret
jns
jnp
inc
sbb
fistl
and
dec
bound
xor
mov
gs
dec
ficomps
inc
ror
mov
or
icebp
push
push
dec
out
movsb
outsb
jnp
stos
adc
cmp
adc
and
cmpsl
push
jb
call
fs
mov
sbb
dec
and
fcomi
out
mov
enter
jge
lods
xchg
dec
jmp
sarb
adc
dec
jo,pt
cmpb
or
pop
pusha
push
push
jmp
es
cmpb
inc
outsb
cmp
outsb
and
icebp
xchg
or
push
leave
xor
mov
and
mov
daa
jno
xchg
pop
stc
fcompl
cltd
fwait
push
jb
xchg
pop
rcr
mov
inc
orb
gs
cmpsb
mov
adc
mov
jo
adc
jbe
out
loop
shrb
inc
notl
add
sahf
lods
xchg
xor
imull
aam
cmp
cs
push
popa
sub
dec
push
mov
mov
aaa
ss
cmp
into
sarl
ret
xchg
nop
in
dec
jl
push
sbb
inc
jbe
adc
aam
sti
lret
add
adc
sub
dec
dec
or
rcl
shrb
mov
movsl
xor
test
sub
add
adc
addr16
cmpsb
add
pusha
xor
scas
push
add
pop
sbb
sub
lahf
xor
inc
sbb
aam
adc
sbb
push
mov
cmpsl
push
cwtl
cmpsb
aam
popa
imul
or
or
aad
jno
or
insl
test
enter
insl
sahf
lock
adc
jb
outsb
dec
fnstcw
or
and
or
inc
mov
push
pop
or
xor
stos
adc
call
mov
ror
leave
jb
jb
sbb
pop
cltd
pushf
test
mov
ret
nop
into
inc
lds
xchg
sahf
push
adc
sub
xor
leave
cmpsb
adcb
js
fnstenv
out
movb
popa
adc
cmpsb
std
xor
add
test
sub
rorl
les
jns
adc
push
jmp
out
jle
dec
nop
push
jmp
pop
pop
aas
adc
shl
idivl
rep
pop
sbb
mov
push
daa
scas
mov
mov
pop
clc
cmp
jmp
hlt
sub
aas
pop
hlt
sbb
pop
mov
push
adc
dec
jno
hlt
out
lock
scas
es
scas
jge
jl
hlt
out
jmp
pop
push
ja
aaa
mov
cltd
mov
fildll
pop
je
mov
std
lret
aam
jg
push
ds
add
adc
and
cmpsb
fimull
xor
mov
mov
test
pusha
sbb
xor
out
push
imul
mov
and
or
jp
xorl
push
jo
ret
jbe
mov
out
sahf
jno
mov
xor
out
xchg
mov
aaa
jl
mov
ja
fiaddl
adc
push
sbb
inc
rol
sbbb
sub
jnp
jae
mov
sub
xor
jns
leave
pop
imul
cltd
push
mov
rcll
jle
lock
dec
push
dec
loope
lods
inc
cld
xor
or
or
jae
pop
push
in
push
icebp
repz
arpl
pusha
aas
push
pushf
xorb
fsubrs
cmp
sbb
mov
fildl
sub
in
fbld
js
ret
sbb
pop
nop
xor
or
cmp
imul
or
inc
fstpt
std
mov
adcb
enter
aad
addr16
pop
pop
xchg
and
jne
fbstp
mov
lret
lods
jle
inc
ficomps
jb
xchg
jnp
cmpsb
jno
aas
add
rcl
pop
fidivrl
push
mov
xor
loop
jns
lock
cmc
addr16
jmp
jle
inc
in
mov
xchg
movsb
shll
or
dec
and
mov
shll
or
dec
mov
inc
or
mov
data16
mov
mov
movl
filds
mull
inc
mov
test
mov
adc
mov
pushf
imul
hlt
adc
iret
mov
in
sti
push
xchg
xchg
pusha
icebp
cmc
lods
pop
test
aam
fsub
ret
mov
sti
repnz
jl
push
idivb
fldcw
inc
out
xor
scas
mov
nop
and
mov
scas
xchg
int
jl
mov
bound
xor
mov
fwait
add
mov
mov
dec
jae
pop
fldenv
xchg
xchg
addr16
mov
shrb
nop
fsubr
pop
mov
stos
je
rcll
xor
mov
push
movsb
xchg
pop
inc
push
pop
daa
xchg
insl
xchg
add
sbb
sbbb
insl
xchg
add
lahf
lea
mov
fcmovnb
sub
cltd
add
stos
adc
imul
mov
ficoml
or
ret
rorl
fnstcw
mov
sahf
sbb
outsb
test
ret
insb
jbe
or
rorl
jns
sti
test
jge
loop
ss
test
push
lret
fcompl
pop
pushf
dec
lds
adc
into
shrb
push
jne
repnz
hlt
sbb
add
sbb
imul
push
nop
and
jae
pop
mov
xor
mov
or
mov
repz
add
pop
jge
sbb
ljmp
or
inc
add
lods
xchg
cmp
pop
jae
cli
cmp
xchg
push
popf
add
jl
loop
push
in
add
je
push
cld
test
out
pop
jns
pop
jno
aaa
mov
sbb
pop
mov
dec
push
xchg
es
xchg
fdivl
push
in
je
repnz
cmc
mov
and
cltd
gs
sbb
adc
mov
pop
and
jl
sbb
je
ss
and
cmc
lods
dec
mov
xchg
dec
scas
clc
adc
shlb
out
pop
lcall
idiv
dec
sub
rcr
and
inc
push
dec
adc
popf
outsb
sub
cmp
stc
scas
imul
inc
rcl
ficoml
mov
jg
sbb
mov
fldenv
mov
dec
stc
ret
lret
and
daa
pop
rcr
test
lds
aaa
outsl
cmp
daa
imul
fidivl
sub
int3
loopne
mov
cwtl
test
cmp
rcr
xor
sbb
jae
loope
sub
sub
xchg
rcll
cmp
cs
ljmp
into
mov
mov
pop
lods
sbb
or
outsl
mov
push
fcmovu
add
pop
mov
adc
pop
icebp
add
imul
cltd
lods
bound
mov
push
inc
pop
dec
lock
add
cmp
and
adc
cmp
add
mov
push
push
imul
sahf
fdivrl
jmp
add
adc
insb
sub
inc
push
dec
sub
push
rorb
cwtl
enter
int
loope
cmpsb
scas
aas
xor
loopne
mov
jmp
jnp
ret
cmp
test
cli
xchg
add
mov
cmp
cmp
scas
ffreep
pop
xchg
int
jns
sub
mov
cmpsl
xor
jns
pop
bound
or
iret
mov
mov
call
sub
xchg
push
arpl
inc
outsl
packsswb
mov
fmull
push
sub
inc
cmpsb
loop
adc
notl
test
loop
mov
imul
outsl
xor
jns
data16
imul
sahf
mov
dec
clc
out
mov
mov
sub
insb
push
mov
pop
mov
in
inc
mov
enter
out
and
sti
sbbb
loope
mov
insl
into
mov
repnz
sbb
cltd
cwtd
stc
push
mov
pushf
mov
mov
xor
scas
fs
mov
pop
imul
rorl
pushf
mov
mov
lcall
inc
cmp
adc
dec
xor
jo
jl
shrb
mov
cwtl
adc
pop
fdiv
add
mov
repz
bound
inc
push
xor
push
xchg
repz
popa
pop
push
adc
je
dec
adc
push
mov
cmp
mov
dec
popa
out
das
adc
dec
dec
push
jb
cli
xchg
mov
push
xor
aaa
pop
cmpb
and
adc
sbb
or
lret
repnz
xorb
clc
out
push
out
mov
push
in
ljmp
push
enter
into
mov
imul
push
dec
out
and
div
mov
adc
cmp
push
popf
mov
pop
sahf
stos
faddl
xor
add
jg
or
dec
aad
mov
pop
cmp
sbb
dec
cmp
dec
fnstenv
test
popf
shrl
and
dec
mov
cmp
fisubrs
jg
imul
cli
ds
mov
outsb
sub
outsl
clc
in
cld
into
sub
stos
aaa
pop
sti
sub
fbstp
popf
insl
in
js
scas
and
enter
xchg
in
out
cmpsl
pop
jecxz
jg
in
ds
cli
mov
push
mov
repnz
xor
insb
jne
hlt
clc
xlat
imul
jl
sub
cmp
push
mov
or
arpl
stos
loop,pt
xor
mov
fisttps
sahf
xor
sti
mov
hlt
and
fistl
xlat
inc
dec
sahf
add
sbbl
in
fdivrs
push
int3
ss
movsl
mov
mov
gs
testl
in
xor
xchg
push
and
outsl
add
xorb
xor
inc
outsl
adc
hlt
cmc
stc
mov
sbb
mov
clc
xchg
push
ffreep
nop
jbe
sbb
mov
xchg
dec
jge
roll
sbb
shll
sbb
insb
and
sbb
mov
fistl
or
sub
orl
xchg
jp
push
in
cmp
ljmp
stc
das
xchg
in
les
negl
dec
and
outsb
repz
pop
push
add
xor
adc
mov
js
dec
sub
pusha
fimull
mov
ss
add
jns
jae
mov
mov
shll
inc
sub
movsb
push
mov
call
fwait
xchg
pushf
inc
cmpsl
out
jns
fs
mov
jecxz
push
sbb
enter
mov
in
sti
xchg
and
xor
int3
cwtl
shlb
push
dec
popa
inc
call
pop
inc
lret
push
icebp
lds
outsl
inc
xor
test
and
stc
add
add
mov
mov
leave
aaa
stos
icebp
mov
lret
mov
addl
popf
dec
clc
loop
xor
jmp
jns
lods
sarb
mov
mov
ja
fidivrl
jle
outsl
mov
xchg
in
rol
jmp
sti
test
out
pop
pop
imul
mov
das
dec
cld
shrb
rcl
dec
push
mov
stos
inc
fst
push
loope
inc
or
loopne
cmc
push
xlat
push
inc
je
std
fstl
scas
or
in
mov
mov
test
icebp
cmp
js
cmp
inc
mov
push
jge
jno
sub
icebp
pop
pop
ss
xor
sbb
lahf
xor
jg
sub
lods
add
dec
fiaddl
lcall
enter
mov
sti
mov
ds
pop
sarb
mov
push
xchg
or
in
inc
in
ret
jp
stc
jecxz
iret
sbb
aas
daa
popa
jg
nop
repnz
or
popf
clc
jae
or
test
js
inc
out
clc
inc
leave
cmp
cli
or
inc
mov
mov
xchg
mov
addr16
pop
shl
in
mov
jb
sub
xor
lock
cmp
arpl
ss
cmp
and
xchg
pushf
sub
mov
dec
lcall
adc
dec
or
shlb
lahf
jle
dec
inc
jp
or
loop
cwtl
cmp
js
jae
dec
mov
dec
fldcw
pushf
sub
sub
push
push
ret
xchg
in
dec
andl
out
adc
cld
mov
lock
mov
loopne
xchg
pop
push
gs
jb
pop
test
fadd
sub
js
test
das
jp
rcrb
cmp
out
jns
xchg
insb
sahf
mov
loopne
ret
fldt
in
je
mov
jne
adc
sar
lds
loopne
test
jp
mov
outsl
loope
mov
jns
and
jnp
sbb
in
dec
inc
imulb
popa
das
push
into
cld
sub
xchg
test
or
bound
cmp
test
clc
xchg
andl
cmpsb
inc
add
addr16
dec
adc
movsb
lea
sbb
outsl
xchg
call
or
pop
fnstenv
and
dec
inc
fwait
cmpb
pop
add
push
repz
add
pop
or
cltd
xchg
pop
xor
or
mov
jl
arpl
pusha
shll
mov
nop
shll
push
and
jecxz
popf
btcl
adc
mov
sbb
scas
dec
pop
mov
scas
int3
mov
adc
mov
push
xchg
sub
mov
popf
fmul
cmp
xor
lret
add
cmp
mov
int
out
adc
sbb
repnz
lods
lods
jl
add
jp
sub
mov
dec
push
mov
pop
enter
jae
xchg
dec
push
inc
dec
pop
testl
xchg
or
loopne
xlat
mov
test
out
cwtl
push
arpl
xor
out
add
push
jmp
outsl
into
mov
loop
pop
aas
sub
push
cwtl
dec
mov
push
adc
fnsave
leave
xchg
stc
test
test
pop
xor
pop
out
mov
out
and
mov
jbe
jle
out
icebp
lods
int3
in
push
push
jl
iret
rcrl
and
mov
jo,pt
mov
sub
movsl
pop
xchg
imul
movb
pop
stos
jmp
pop
jp
mov
push
fwait
into
out
ljmp
and
push
pop
xchg
popa
push
rcr
popf
dec
cmp
and
mov
out
ds
andl
xorb
je
mov
xchg
clc
pop
mov
fwait
hlt
mov
jmp
pop
inc
sbb
addb
scas
iret
push
mov
mov
rorl
repnz
pop
in
dec
pop
in
pop
pop
xchg
cli
adc
or
ljmp
fistl
push
test
in
adc
mov
insl
jl
call
aad
xor
std
cmp
rolb
notl
and
xchg
mov
jl
mov
out
cltd
or
add
sbb
es
cltd
push
test
jmp
or
fsubrp
dec
mov
stc
loope
cmp
mov
decl
repz
sahf
and
scas
mov
pop
daa
mov
xchg
cwtl
fwait
or
out
xor
xchg
hlt
movsb
push
cmp
jl
cmc
fidivrl
fstpl
pop
bound
jns
test
push
insl
out
ljmp
sub
dec
sub
pop
int
scas
or
divl
mov
push
mov
xlat
ds
mov
jmp
pop
clc
dec
incl
decl
fbstp
sub
fnsave
js
mov
adc
and
sbb
leave
inc
int
cmp
or
jp
dec
test
mov
push
sbb
stc
inc
sub
movsb
popa
jne
jmp
insl
aas
dec
int3
mov
jle
pop
movsb
sub
cmp
push
rcrb
fs
cld
scas
fwait
outsb
push
clc
fdivl
addr16
fdivrl
lcall
jno
inc
mov
dec
lret
out
inc
jno
int3
pop
outsb
cmp
out
mov
inc
xchg
out
adc
in
inc
sahf
lcall
shll
mov
adc
cmpsl
cmp
aaa
pop
pusha
xor
inc
sahf
pusha
enter
xor
pusha
loopne
mov
push
fwait
mov
dec
pop
cli
pop
aam
mov
test
mov
pusha
test
jp
mov
scas
adc
enter
in
popf
jg
push
loopne
arpl
mov
imul
mov
les
cmp
enter
in
xchg
push
adc
sbb
test
movsl
or
test
jg
je
ret
and
js
jbe
jecxz
hlt
andl
pop
outsl
push
outsl
cmc
or
jl
cmpsb
sub
xchg
lock
mov
out
mov
mov
xchg
fdivl
repz
aam
repnz
or
lods
dec
jmp
sub
mov
sbb
jo
lcall
mov
adc
add
loope
and
rcrl
repnz
pop
jmp
dec
adc
dec
sub
sti
repz
push
aas
jle
sahf
mulb
ret
fbld
fst
add
jo
ja
insl
int
ficoms
push
mov
psadbw
xor
mov
ret
int
ljmp
xor
outsb
adc
mov
arpl
push
inc
add
sub
mov
cmp
mov
outsl
jge
iret
xorb
out
cli
xchg
push
inc
hlt
gs
sbb
shr
leave
push
and
mov
filds
or
sbb
push
adc
gs
push
adc
pop
adc
gs
dec
add
test
adc
inc
or
pop
scas
xor
fwait
jne
lods
inc
xchg
bound
push
pop
xchg
fidivl
cltd
shrb
inc
and
dec
lahf
jae
bound
fcmovne
out
jae
out
sahf
jae
out
out
mov
call
push
out
mov
cli
sbb
rcr
out
aaa
and
mov
push
sub
into
push
das
push
fnsave
pop
and
outsb
lahf
cmp
inc
pop
hlt
or
inc
inc
imul
arpl
int3
dec
loope
popf
xor
cli
cmp
cli
jns
sub
mov
and
out
into
inc
call
inc
adc
mov
fldenv
jg
dec
sahf
mov
fcomps
adc
iret
mov
into
pusha
and
dec
adcb
pop
mov
fsubrl
fdiv
into
cmpl
xchg
xchg
pop
lret
push
cmpsb
ss
mov
jo
popa
mov
testb
out
loope
dec
fld
int
aam
punpckldq
mov
jo
sub
mov
and
xchg
jo
mov
cli
pusha
fnstenv
cwtl
repnz
lcall
add
movsb
shrb
add
out
test
lods
int3
or
fiadds
dec
dec
add
mov
fwait
insb
mov
mulb
mov
leave
lds
push
out
and
in
sbb
cvtps2pi
push
arpl
repz
jl
cmp
xchg
or
dec
adc
cmc
pusha
mov
add
mov
lds
fdivrl
imul
adc
dec
pop
loope
rcll
cs
pop
cld
push
incb
mov
loop
xchg
leave
cwtl
test
daa
stos
lock
stos
mov
shlb
ja
mov
bound
push
dec
xor
push
out
jg
in
scas
mov
add
cmpsl
push
sbb
int3
dec
push
movsb
xchg
leave
add
sti
call
or
mov
iret
cmp
mov
lea
add
xchg
sbb
sub
adc
pop
jp
mov
or
xchg
roll
fcompl
push
and
movsb
repz
lods
mov
sbb
sub
inc
shll
subl
outsl
mov
mov
test
and
xchg
std
ret
dec
inc
push
sbb
mov
shl
cs
movsb
and
jb
dec
sahf
insb
xor
in
test
xor
dec
aaa
movsb
jmp
pop
pop
xchg
sub
out
mov
pop
mov
mov
stos
xchg
or
pop
repnz
jle
rcrl
fwait
xorl
xchg
cwtl
pop
fs
mov
stc
dec
in
incl
rorb
es
push
xchg
popa
popf
dec
sub
gs
mov
jl
negb
jb
pop
cmp
iret
pop
mov
mov
popf
sbb
jbe
cmp
sbb
out
mov
into
fisubl
out
and
and
idiv
pop
pop
mov
xchg
sub
sbb
xchg
inc
fcomps
adcl
ret
inc
notl
rcrb
xor
fsubrs
jg
jnp
fdivp
ss
data16
or
pusha
call
movsb
mov
dec
lahf
jnp
dec
cmc
push
ds
xlat
fdivrs
stos
pop
int3
or
xchg
orb
jnp
clc
aas
test
sbb
jns
jns
push
mov
clc
icebp
ss
mov
pop
push
adc
pop
xchg
add
mov
sub
pop
ja
fsub
dec
jne
push
repz
and
or
push
lahf
aad
push
imul
xchg
insl
push
sahf
nop
out
xlat
scas
sbb
popf
push
and
xor
mov
aas
sub
add
pop
xchg
fdivrl
push
adc
xor
subb
stos
add
adc
testl
and
push
push
cmpsl
jo
jecxz
imul
and
pop
xor
addb
and
xor
inc
je
inc
add
movb
stos
cmp
and
jle
movsb
sbb
xor
mov
mov
scas
cmp
les
fisubs
inc
cmp
popf
inc
std
adc
rorb
enter
xchg
or
mov
ret
nop
jbe
jg
je
in
xor
repz
lock
lahf
enter
dec
fisttpl
cltd
pop
int3
xchg
enter
mov
mov
xor
adc
rolb
cmpsl
test
push
aad
pop
jp
insl
push
insb
or
adc
test
cmpsb
cltd
dec
test
leave
push
dec
fsubrs
dec
xor
lret
and
lahf
xor
pop
pop
sbb
mov
push
push
popa
gs
mov
sub
cmc
push
cmpsl
movb
fcoml
test
pop
aam
ljmp
cmc
jg
mov
and
stos
loop
xor
adc
lcall
pop
fcomi
dec
push
pop
roll
adc
xchg
hlt
sbb
ss
pop
int
xchg
dec
sub
lods
xchg
sbb
int
add
xor
mov
in
xchg
ss
vminps
adc
inc
nop
fcoms
push
xchg
jb
xchg
je
popl
xor
lock
lahf
xchg
dec
fs
jns
push
loopne
mov
cltd
xor
xorb
sarl
hlt
loopne
jae
mov
movl
rcr
or
jne
out
cmp
pop
pushf
adc
lcall
enter
adc
inc
scas
inc
jae
pushf
rcl
jmp
lock
lds
mov
cmc
mov
xchg
mov
out
or
sbb
jo
enter
popf
mov
lret
in
sbb
ret
mov
mov
lock
ja
inc
fstps
or
data16
rcr
jnp
pusha
mov
outsl
adc
repz
or
ret
or
lods
sahf
stos
pop
push
push
enter
jo
sbbl
mov
sar
mov
sbb
mov
mov
icebp
out
fdivs
in
xchg
sti
jmp
xchg
add
aaa
dec
sbb
lret
cmpsb
cs
sbb
or
pusha
adc
enter
shl
push
push
pop
int
shrb
inc
inc
cmpsl
shrb
ret
cmp
jnp
lret
imul
inc
jnp
mov
nop
sahf
into
lods
lcall
out
test
rcr
fists
imul
jecxz
es
shrl
mov
pusha
shlb
jns
shlb
mov
sbb
jns
and
rcrb
mov
push
xchg
or
mov
into
outsb
nop
pop
push
loopne
and
pop
inc
mov
lret
pusha
arpl
cwtl
loope
push
icebp
ds
mov
jmp
inc
les
fs
mov
sub
rcrb
add
mov
insl
sub
pop
jg
mov
jl
roll
mov
cmp
das
sub
ret
or
repz
cmp
aas
cmp
mov
lret
fildl
push
enter
xchg
mov
or
shll
test
test
mov
fwait
int
fxch
push
mov
data16
add
rorb
imul
ret
clc
add
pop
inc
or
imull
nop
popa
mov
inc
fdivrl
jo
stc
mov
fs
pop
pop
xor
mov
xlat
adc
adc
test
testb
loopne
xchg
add
xchg
xchg
pop
scas
loope
imul
xchg
cmpl
imul
call
push
push
in
leave
in
andl
test
repz
stos
addr16
lods
shlb
push
dec
shlb
je
imul
adc
dec
nop
jno
cmpsl
mov
pop
xor
cmpsb
lahf
jae
push
jle
dec
dec
inc
loopne
lcall
adc
cmpsb
nop
fildl
jl
pop
jae
stos
cmp
push
cmp
lret
sti
jb
push
pusha
cltd
jbe
mov
testl
jb
jl
adc
clc
in
scas
cmp
in
movsb
push
or
into
push
pop
push
fs
lcall
xchg
ffreep
adc
xlat
fisttps
ja
xorl
fimuls
mov
fisttpll
jns
pop
gs
cmpsb
pop
cmpsl
aam
lds
enter
fsubrl
mov
mov
sti
rclb
lret
aam
loopne
addr16
inc
xchg
ss
inc
hlt
jmp
outsb
pop
mov
fsub
fimull
add
lret
and
rolb
cwtl
or
push
movsl
mov
adc
sbb
leave
dec
jns
jle
daa
cltd
cmp
and
mov
inc
jno
pop
cmp
rcl
push
jmp
cmp
push
cli
pop
icebp
cmp
iret
test
clc
pop
adc
adc
mov
pop
fwait
jge
lock
addr16
mov
pop
out
outsl
fcomps
popf
add
cmp
xchg
push
es
fstl
test
jg
and
fsubrp
pushf
or
inc
es
stc
dec
fcoml
shll
jge
mov
scas
loope
pop
ret
inc
aas
sbb
stos
loop
pusha
push
cli
jne
bound
or
xorl
add
sarb
fimull
scas
pusha
lahf
inc
and
dec
repz
fmuls
cld
jno
sbb
sub
stc
or
xchg
push
push
dec
jno
aam
sbbb
imul
gs
lahf
fwait
or
cwtl
sub
loopne
lcall
movsb
or
inc
out
pop
mov
ret
sub
test
lods
shlb
pusha
insb
outsl
sub
mov
mov
mov
adc
in
and
inc
pop
or
or
and
test
add
retw
mov
scas
jle
inc
fsubs
fs
or
cmp
cwtl
sub
pop
or
sub
jge
test
add
cs
pop
dec
ret
outsb
pop
clc
inc
mov
sub
adc
sahf
mov
xchg
adc
cmp
mov
popa
std
xchg
add
mov
outsl
jns
loopne
call
jo
hlt
xchg
fsubrp
jb
add
fistpll
loop
sbb
push
fmull
cmp
xorb
dec
cwtl
imul
data16
into
adc
mov
or
or
cmpsl
mov
jo
pop
mov
into
sbb
int
jo
sbb
arpl
in
je
xchg
aam
out
cmp
xchg
xlat
rcrb
mov
aad
pop
pop
xor
test
cmp
or
lods
xchg
shl
inc
mov
sbb
stos
sbb
outsb
mov
pop
add
test
shlb
ja
adc
shll
in
cmp
or
cmpsl
nop
cmp
mov
mov
cmp
mov
or
push
jecxz
fdivl
mov
mov
xchg
xchg
jle
shrl
outsl
aas
pop
lret
mov
lds
jno
xchg
dec
lods
lea
adc
add
aas
mov
in
movsl
dec
mov
pusha
das
sbbl
int3
lods
movsl
lahf
popf
sahf
push
fldl
test
push
lahf
into
cmp
jge
and
pop
cmp
xchg
mov
daa
jl
les
sti
xor
test
push
dec
lfs
inc
sub
out
in
xchg
sub
or
inc
test
test
cli
and
sub
jp
in
fldl
out
cmp
loope
idivb
xchg
pop
das
sbb
add
stc
mov
lods
mov
cli
mov
push
inc
inc
hlt
into
xor
outsl
in
cltd
loop
in
xor
into
addr16
pop
cmp
test
inc
push
outsl
mov
aam
cmp
mov
rcrb
sub
cmp
cmp
mov
push
sub
cmp
test
push
fs
dec
sbbl
ljmp
cmp
xor
arpl
decb
xchg
lods
clc
dec
pop
push
in
ret
lret
clc
xchg
pop
dec
test
int3
sahf
jg
fld
adc
cwtl
jne
out
cld
aaa
add
test
xor
in
inc
aas
lods
addb
mov
scas
into
jge
sbb
imul
aad
lock
mov
lock
adc
add
decl
and
cld
aaa
jg
ds
pop
ret
int3
add
lahf
sti
mov
insl
jae
pushl
sub
mov
push
mov
fildll
arpl
fnstenv
pop
pusha
leave
pop
jecxz
mov
aam
fwait
xchg
stos
out
and
xchg
call
fidivrs
lds
jb
scas
fcmovnu
maxps
jns
pop
jg
das
pop
fistpl
dec
mov
pop
imul
cli
movl
sub
xchg
xchg
jle
xchg
inc
out
mov
jnp
test
mov
into
das
add
fistl
pushf
insb
xor
test
xor
mov
mov
ja
jecxz
jo
call
psubsb
scas
iret
xchg
cmp
repnz
dec
push
adc
fdivs
and
sub
and
imul
ds
es
fldl
and
fsubl
xor
xchg
dec
or
popa
sti
cs
scas
rolb
add
sbb
js
dec
in
mov
xor
pop
pop
clc
dec
or
roll
pop
mov
mov
sahf
pop
push
repnz
lods
test
adc
xchg
out
addb
enter
stos
scas
pop
mov
lods
xchg
mov
push
dec
scas
mov
mov
sbb
mov
in
sbb
in
outsl
shrl
fs
popa
rcrb
push
iret
lods
ficoms
xchg
inc
jecxz
inc
dec
sahf
into
xchg
cmpsl
and
test
add
xchg
out
aas
je
pushf
fucomip
jbe
fcom
xor
orl
dec
in
in
or
cmp
js
mov
xchg
sub
push
dec
xchg
in
rolb
jle
mov
sbb
sahf
mov
insb
mov
xchg
gs
out
incl
xor
add
jg
cmp
mov
push
aaa
outsb
jb
out
in
aam
dec
push
aas
push
push
ljmp
repnz
lret
cmp
aaa
loope
sbb
mov
push
repnz
mov
jno
aam
sub
adc
repnz
fwait
aas
sbb
adc
adc
mov
jbe
cmp
call
je
sub
xchg
jbe
jge
stos
shrl
fnsave
loope
in
movsl
cmpsl
or
sub
repnz
das
ss
xchg
sar
xchg
mov
cmp
jg
sar
insb
aas
jge
inc
popa
decb
inc
mov
fdivs
movsb
leave
xchg
cld
cmp
lods
pop
shlb
insb
cmp
push
add
popa
shl
or
pushf
dec
repz
sahf
push
in
ficoms
adc
mov
fsub
push
cwtl
mov
adc
pusha
xchg
mov
pusha
insl
mov
pusha
test
cld
xchg
inc
mov
jge
pop
imul
dec
pop
fcmovnu
mov
jae
adc
pop
loopne
ljmp
pop
add
or
scas
lcall
xor
out
or
imul
and
lods
clc
in
test
loopne
inc
mov
mov
dec
jae
pop
std
aas
push
cmp
xor
mov
insb
add
lea
sbb
aas
ret
xchg
jp
cmp
ret
imul
enter
sub
outsl
repnz
int
jmp
lods
pop
movsl
jo
xchg
pop
xchg
push
ficoms
sub
sti
loop
lret
loopne
sbb
icebp
addr16
push
sbb
je
lahf
sub
push
fs
sarl
xchg
push
pop
pop
nop
pop
lock
lcall
sbb
adcl
pop
stos
fstpl
cmp
inc
cmpsb
gs
inc
lret
mov
push
cmc
and
aaa
nop
fsubs
pop
aas
push
inc
sbb
adc
lea
test
popa
fstpt
push
push
mov
shlb
sti
mov
popw
outsl
orb
mov
push
mov
aam
out
movsb
stc
sub
dec
dec
push
push
addr16
dec
and
sub
testb
sarl
fidivrl
xchg
nop
mov
jno
mov
jo
xchg
adc
rcl
sahf
and
jne
xor
mov
lods
pop
insb
lcall
addb
add
sbbb
push
fmull
pop
or
sbb
shlb
sbb
jbe
int
insl
xor
and
jno
xchg
add
sub
ds
inc
call
rcll
fcoml
and
cmp
xchg
cmp
nop
out
dec
bnd
push
outsb
jmp
lea
mov
jnp
stos
insb
inc
test
lret
push
push
lods
gs
jp
imul
icebp
call
mov
insb
in
ljmp
ds
mov
pop
out
add
loope
sbb
push
rolb
dec
nop
xor
jp
pop
sub
xchg
pop
int
fs
xor
pop
cmp
test
mov
stos
mull
data16
push
lds
dec
ret
fdivrp
bound
fmull
imul
dec
lds
pop
pop
repz
popf
scas
dec
xchg
push
cltd
pop
icebp
push
add
xchg
call
inc
dec
out
mov
mov
sub
and
cmp
lcall
cmp
push
sub
pop
hlt
fstpt
mov
int
in
jae
ss
dec
shl
sub
add
xor
daa
lock
sbb
in
sub
shrl
mov
js
out
xor
mov
mov
jo
sub
xchg
das
scas
xchg
movsl
xchg
in
subb
outsl
in
in
int
mov
pop
dec
aas
or
xlat
sbb
pop
xchg
push
insb
and
mov
pop
mov
rsqrtps
insb
das
bound
fbstp
mov
leave
mov
mov
xor
sub
in
sub
ficoml
mov
adc
push
ds
int3
adc
mov
sub
fisubrs
adc
xchg
jg
push
cli
rolb
sub
rclb
push
jl
stos
dec
dec
addl
add
push
push
sub
adc
xchg
sbb
pop
jp
mov
nop
push
xchg
push
push
pop
int
clc
dec
fnop
mov
mov
sti
test
push
enter
push
jmp
fcmovne
js
repz
icebp
mov
jb
and
mov
ret
movsb
pop
and
cmp
and
jecxz
and
inc
mov
out
inc
jg
cmp
adc
popa
icebp
stos
inc
jno
loop
xchg
aas
lods
cli
gs
sbb
pop
fimull
cmp
sub
cmpsb
cmp
lahf
test
repnz
out
mov
dec
push
mov
push
cmp
ficompl
js
pop
push
ds
fistps
jno
scas
mov
mov
pusha
sbb
xor
or
cmp
cmpsb
icebp
daa
daa
cmpsl
push
into
movsl
inc
incb
jb
xchg
fiadds
mov
sbb
xor
dec
roll
xchg
addb
in
enter
xchg
push
adc
ret
and
movsb
out
pop
in
cmp
dec
ljmp
je
sbb
mov
jne
jge
faddp
mov
fmull
inc
fsubrl
adcl
pop
pop
aad
add
sub
mov
mov
sub
and
loope
jne
or
xchg
mov
adc
cmc
aam
sahf
add
imul
push
outsl
jnp
jb
in
pop
xorb
lret
jb
mov
call
xor
xchg
repz
sub
push
jne
ret
cmpsb
or
jp
je
mov
add
lret
addr16
mov
fs
addb
or
aas
test
movsl
sub
jp
jae
int
lcall
mov
mov
imulb
orb
push
inc
fidivs
test
cmp
daa
loop
loop
adc
xor
call
int
mov
mov
cmp
jb
adc
add
jmp
jp
add
fwait
jmp
push
dec
dec
cmpsb
int3
dec
clc
xchg
lcall
out
push
je
movsl
mov
cmpsb
mov
ds
and
fnstsw
ret
cmpsl
mov
mov
jne
cmp
repnz
std
dec
push
xchg
jge
leave
fimull
jge
in
add
xchg
shr
addr16
adcb
dec
loope
adc
cld
and
sar
add
faddl
fs
jns
mov
movsl
push
shll
mov
clc
inc
repz
sbb
int3
jge
out
push
pop
mov
add
repnz
in
int
jl
mov
test
dec
cmp
cmp
or
jb
sbb
mov
push
jno
adc
add
popa
add
add
test
push
add
mov
lcall
xchg
loope
or
xor
add
mov
insb
mov
push
mov
cltd
xor
mov
xchg
adc
cmp
stos
nop
mov
mov
push
aam
mov
fs
repnz
dec
or
sub
icebp
cs
hlt
pushl
leave
add
and
shl
stos
sub
ds
ss
sub
push
add
enter
pushf
push
fwait
movsl
xchg
adcl
scas
pushf
idivb
lods
gs
int3
out
leave
cmc
add
xor
or
xchg
xor
lahf
jns
fcompl
push
sub
leave
adc
adc
dec
loope
movsb
loope
clc
xor
sbbl
inc
and
andb
aas
push
xor
rorb
xchg
mov
jge
and
notl
in
pop
sahf
jp
dec
cmpsl
jmp
and
sub
adc
xchg
enter
push
out
pop
pop
aas
ljmp
sbb
sub
and
mov
jnp
loop
pop
lret
cmp
repz
faddl
dec
lret
xchg
stos
call
arpl
mov
pushf
adc
roll
inc
cltd
jo
fists
jo
and
jmp
inc
fisttpl
mov
call
aad
loop
push
loopne
sub
push
dec
jns
fistpll
and
sub
mov
stos
out
pop
fadds
cwtl
lahf
adc
mov
jle
int3
mov
and
mov
les
shll
adcb
or
test
sbb
fwait
pop
mov
jg
pop
movsb
nop
mov
insb
pop
out
xchg
cmp
jle
dec
cmp
push
mov
ja
jbe
js
push
nop
sbb
mov
pop
inc
aaa
inc
adc
fsubrl
push
add
or
int
jl
mov
mov
jecxz
cltd
or
xchg
push
push
rol
cmp
lods
sub
inc
test
push
aaa
pop
int3
push
xor
jecxz
outsb
imul
sbb
popa
jo
test
lock
push
lock
aas
and
bound
in
mov
push
xor
ss
loopne
cmp
xlat
or
and
push
or
add
idiv
add
add
test
jp
mov
xchg
fldl
addb
das
into
push
test
outsb
enter
lods
mov
add
cwtl
aaa
xchg
int3
comiss
mov
xchg
femms
decl
pop
jp
push
enter
xlat
pop
repnz
or
sbb
and
shrb
leave
mov
lret
jnp
inc
dec
imulb
rolb
sar
jbe
cmp
sbb
mov
es
roll
stos
lods
ds
in
aam
and
cmc
std
daa
int3
mov
mov
jnp
sti
pop
or
dec
in
add
hlt
pushf
mov
ret
in
pop
fdivs
mov
aad
add
out
or
mov
fildl
cmp
or
out
sti
add
outsl
popa
divb
ret
enter
imul
das
cmc
mov
das
mov
ret
dec
movsb
adc
mov
shl
mov
enter
xchg
dec
cmp
cmp
push
jne
and
inc
notl
pop
mov
xor
scas
addl
icebp
aam
lds
push
adc
test
jg
enter
xor
pop
xor
sbb
push
pop
xor
les
jne
pop
inc
lret
jnp
inc
out
incl
rorl
xor
cmc
mov
pop
lods
out
push
mov
shlb
sub
jns
push
cmpsl
pop
pop
mov
mov
loopne
push
hlt
xor
push
mov
shl
sti
push
in
test
pushf
or
adc
fisubrl
xlat
aam
loope
or
sub
hlt
clc
cli
xchg
sub
cld
pop
stc
mov
lcall
cmp
add
sbb
stc
popa
divb
in
pop
fisubrs
jge
mov
pusha
jge
add
fdiv
jle
pop
adc
cmp
lods
adc
cmp
push
pop
and
xchg
or
lea
nop
stos
mov
lods
leave
mov
inc
scas
sub
adc
mov
call
push
cwtl
test
call
cwtl
xor
call
xor
inc
scas
or
or
arpl
movsb
pop
fidivl
mov
jle
ret
jmp
xchg
in
cmp
decb
sub
das
mov
mov
mov
mov
push
ficoms
imul
test
mov
cmp
aam
mov
lods
sarb
cwtl
sub
ret
in
jo
lret
xchg
and
movsbl
cld
inc
not
movsbl
jge
pop
fnstcw
xchg
mov
or
call
inc
into
hlt
sbb
outsl
subl
movsl
shlb
or
mov
subl
fsubs
dec
push
addr16
mov
loopne
fnstcw
cltd
mov
stc
mov
sbb
mov
rcr
add
sti
xchg
inc
push
jmp
mov
and
inc
mov
jns
pop
icebp
inc
jge
adc
les
clc
fcomps
sbb
leave
adc
sbb
xchg
sbb
imul
dec
mov
mov
add
out
std
jmp
repz
shrb
jns
idiv
sbb
mov
jmp
clc
frstor
call
scas
mov
push
xor
xor
jmp
mov
mov
in
xchg
stos
popf
lock
sbb
mov
lret
hlt
add
adc
dec
cmp
imul
orl
pop
push
xchg
mov
xchg
pop
ljmp
ljmp
arpl
loope
mov
sbb
and
rcr
in
xorb
cmp
pop
adcb
fcomip
add
jg
popa
jg
pop
xor
lret
pop
leave
insb
dec
lahf
sbb
hlt
xchg
mov
lods
outsb
inc
js
pop
ss
notb
dec
popa
pop
xchg
subb
stos
jbe
mov
push
jo
insl
and
nop
popf
iret
in
add
sbb
fldt
mov
in
dec
aam
ss
mov
cmp
sub
sub
adc
push
sbb
lea
lret
adc
outsb
mov
test
jae
add
jmp
push
outsb
idivl
je
subb
mov
push
and
sub
mov
sub
inc
aam
mov
shll
stos
int
push
xchg
sbb
stc
jl
movsb
jmp
dec
test
clc
imul
std
inc
out
sbb
inc
dec
mov
out
mov
pop
ss
repz
inc
mov
call
clc
mov
imul
das
cmp
in
loopne
and
das
insb
stc
and
lock
shrb
loope
dec
adc
pusha
das
gs
or
sahf
sub
adc
sub
addb
loopne
cmp
xlat
inc
add
mov
add
mov
rol
jno
rcll
cmp
xchg
adc
fdivs
fnstcw
movsb
adc
test
mov
pop
sbbl
icebp
mov
ljmp
orl
xchg
inc
lahf
or
sub
jecxz
jge
ret
out
xchg
sub
or
aam
pop
je
mov
mull
dec
mov
lds
jl
das
clc
pop
sbb
mov
add
cmp
mov
into
mov
ja
xor
aam
add
mov
fsts
cmp
ja
cmp
sub
scas
mov
jge
ficomps
mov
lock
imul
call
add
pop
popa
dec
jns
cmpsb
push
xor
pop
fwait
jnp
loopne
mov
int3
mov
mov
dec
adc
xchg
dec
movsl
lahf
cmpsb
cmpsb
sub
decl
jg
andl
xor
jmp
idiv
out
pop
rolb
ss
jle
lahf
idiv
fimuls
mov
cmp
jae
scas
mov
idiv
dec
rorl
in
mov
and
jb
push
sub
arpl
push
xchg
mov
inc
in
and
cmp
adc
icebp
test
or
and
jle
and
and
js
in
add
scas
xor
xor
cltd
mov
clc
or
push
add
jp
xchg
jo
lret
pop
out
sub
xor
jno
movsl
inc
adc
mov
rorl
sub
mov
inc
pop
push
or
shrb
mov
je
and
lea
and
sub
inc
xchg
jns
adc
push
inc
inc
push
inc
aam
adc
or
fisubrl
in
push
inc
ret
data16
mov
rorl
cmp
jge
mov
in
fildl
mov
pushf
mov
cmpl
dec
jl
jo
xor
popf
shll
imul
adc
add
rclb
das
clc
push
push
mov
rcll
out
inc
mov
jbe
ss
sub
cmp
fstpt
mov
push
imul
sub
push
dec
aad
push
lret
adc
out
and
repnz
push
fsub
mov
int3
push
and
lret
sbb
out
mov
fisttpll
sbb
out
loopne
and
loop
push
data16
sbb
jl
pop
xorl
or
cwtl
or
mov
or
add
mov
loopne
dec
fildl
or
lahf
dec
adc
bound
pop
rcrb
mov
or
jne
add
dec
push
push
stos
pop
jns
lock
outsb
icebp
fdivl
hlt
addl
dec
out
outsl
mov
subb
and
sbb
add
aam
rorl
push
pop
lods
inc
pop
int3
inc
int
pop
inc
add
mov
sub
cwtl
pop
cli
add
loopne
aaa
xchg
roll
in
cmp
jbe
outsl
inc
xchg
cmp
mov
cwtl
pushf
daa
rsqrtps
mov
dec
loopne
pop
mov
icebp
xor
dec
pop
js
jb
jge
mov
or
adc
ljmp
jb
test
sub
int3
push
add
pushf
into
sub
int3
into
dec
dec
sub
and
cli
in
mov
inc
xchg
mov
mov
xchg
es
add
pop
xchg
int3
sbb
data16
push
pop
bound
mov
dec
leave
cmp
js
out
enter
push
push
fldt
push
repz
dec
test
mov
xchg
add
sti
jno
aad
xorb
pop
idivl
cmp
inc
repnz
sbb
lock
xchg
jns
loope
cmp
xchg
dec
dec
leave
ds
rol
bound
jecxz
cwtl
loope
xor
mov
test
cmp
jecxz
mov
frstor
repnz
std
add
pop
ret
test
ds
adc
and
or
fimull
xchg
jnp
add
and
dec
stc
mov
dec
mov
pusha
arpl
loope
les
pop
fisubrs
fdivrs
pop
fbstp
pop
cmpsb
pop
imul
loope
cmpsb
out
mov
ret
fisttpll
push
test
sahf
rol
mov
ret
pop
movsl
push
lock
negl
add
and
daa
mov
jecxz
inc
in
mov
insl
mov
and
test
xchg
dec
jge
test
mov
lret
pop
sub
ret
inc
fidivs
icebp
test
sbb
fisttpl
xor
es
xor
in
fsubs
lds
pop
fcoml
adc
push
mov
iret
push
adc
jle
mov
add
jmp
jmp
fdiv
testl
push
sarb
iret
ja
or
push
cld
adc
lcall
sbb
cmp
push
pop
incl
jae
mov
aad
jg
jne
adc
mov
xor
add
pop
enter
mov
xchg
adc
inc
mov
ret
pop
or
sub
or
xor
or
or
data16
pusha
and
fdivs
mov
cwtl
and
lock
jnp
addb
push
xlat
mov
gs
sub
and
push
jecxz
sbb
bound
cld
testl
mov
scas
aam
ja
adc
data16
mov
inc
sbb
xchg
mov
idivb
xlat
mov
jnp
lret
in
in
test
loope
rcrb
lret
add
cmp
bound
pop
jge
lds
lret
inc
cmp
int
jge
push
es
and
jno
jmp
cmp
mov
stc
add
das
cmpsl
cmpb
lcall
or
push
jns
or
mov
loopne
icebp
fildl
pop
push
js
call
inc
mov
jnp
aas
das
scas
xchg
ds
cmp
sbb
sti
out
pop
fbld
ret
ljmp
mov
add
and
icebp
adc
inc
fnstcw
sbb
std
push
push
sti
dec
repnz
push
cmp
mov
test
ret
jnp
inc
call
push
test
lock
mov
fstl
xlat
jmp
xor
lds
fimuls
xor
pop
icebp
and
daa
call
inc
mov
jne
cs
adc
dec
orb
fisubl
ret
xor
jae
loopne
or
xchg
or
test
mov
inc
adc
rolb
in
or
jnp
lret
lahf
push
arpl
or
xor
and
mov
xor
add
xchg
adc
push
and
test
jp
cs
and
jmp
or
sbb
xchg
test
jnp
leave
xchg
dec
push
call
out
xchg
xchg
fimull
in
sub
jnp
lret
inc
faddl
lahf
pop
outsb
pop
stos
es
pop
pop
adc
xchg
ret
mov
pop
mov
xor
in
fstpt
mov
push
das
or
or
ret
mov
add
aam
bound
sti
aaa
push
mov
repnz
xchg
into
aam
dec
sub
stc
fmull
pop
mov
les
stc
loop
repz
dec
adc
push
addr16
sbb
decl
in
mov
test
xor
push
dec
imul
outsl
jecxz
out
aaa
cltd
aas
push
xchg
inc
outsb
dec
add
and
mov
mov
cmp
sub
icebp
cmp
aam
mov
xchg
negb
or
jae
cmp
xor
test
out
test
and
sub
mov
lret
or
jb
hlt
jb
fs
fsts
mov
rcll
clc
leave
test
mov
ljmp
xchg
shll
out
negl
das
sbb
add
sti
jmp
inc
jae
inc
xchg
hlt
pop
dec
cwtl
stos
mov
sbb
pushf
lock
add
xchg
jo
add
leave
pop
and
mov
add
adc
jge
nop
pop
fstpt
adc
xor
pop
stos
mov
pop
clc
rorl
mov
sub
mov
mov
adc
fiaddl
insb
cli
mov
adc
pusha
lret
pop
call
jo
mov
fiaddl
push
loope
mov
xchg
jle
sub
push
mov
mov
fcom
int3
xchg
mov
sbb
pop
fwait
loop
jne
push
fwait
lcall
mov
mov
je
lock
cmp
data16
push
add
icebp
xchg
xchg
xchg
or
lret
inc
fwait
mov
push
xchg
xchg
mov
push
jb
sub
fs
je
into
mov
add
in
fcomip
shll
aaa
push
jmp
push
rcrb
push
sbb
ss
test
pop
add
jno
testl
stos
in
push
lret
pop
xchg
mov
cmc
inc
add
fldenv
and
xor
rcll
xchg
shrl
movsl
call
xor
jno
dec
pop
pop
xor
fsubrs
ret
imul
adc
nop
ss
inc
gs
xor
dec
mov
js
imul
test
in
fs
and
push
pop
mov
ds
sahf
xchg
sti
adc
repnz
loope
enter
and
movsl
cld
cwtl
mov
inc
das
mov
rcl
neg
mov
mov
ds
in
cmpl
xchg
adc
xor
inc
mov
adc
pop
sub
into
pop
pop
xchg
mov
mov
lcall
mov
cmpsl
fiadds
or
loopne
inc
popf
dec
jp
add
jo
mov
popf
insb
push
in
push
cmpsb
jbe
xchg
jp
xchg
adc
bound
sbb
incl
adc
xor
test
sahf
mov
mov
test
and
popf
and
sbb
movsb
add
pushf
pop
jecxz
dec
enter
add
lret
pop
stos
inc
ja
mov
repnz
pop
aas
xor
xchg
std
mov
inc
out
jb
jns
in
mov
aad
xchg
ss
pop
and
fisubrl
push
jbe
jnp
adc
push
dec
outsb
aad
sbbl
pop
test
fadds
cmp
sub
std
mov
int
mov
mov
ret
push
fists
ja
lods
jnp
es
mov
xor
mov
insl
ljmp
xchg
pop
cmp
jle
bound
ss
xchg
insl
sub
call
inc
lcall
add
ret
jp
dec
mov
dec
shll
mov
rolb
rcr
incb
dec
pop
ja
xchg
test
push
jnp
icebp
fdiv
inc
je
inc
mov
adc
gs
and
lea
fcmove
js
mov
rol
mov
mov
mov
sub
pop
popa
cs
cmp
cltd
cwtl
daa
push
sbb
nop
cmc
shlb
mov
adc
xor
stos
scas
gs
rcl
add
repnz
sbb
int
fildl
adc
sbb
movsl
mov
movb
mov
push
out
or
pop
lods
push
jp
lea
shrb
dec
or
popa
iret
jge
mov
ss
movsl
xlat
inc
jne
xlat
fdiv
fwait
xor
ja
gs
inc
xchg
data16
pop
push
aam
fadds
loope
mov
mov
and
and
inc
inc
jb
xor
cmp
imul
or
xchg
sub
or
and
xchg
ljmp
push
ss
scas
and
push
push
lret
jmp
cmp
and
pusha
fiaddl
or
pop
pusha
lock
mov
inc
mov
jp
dec
addr16
loope
mov
cmpsb
movsl
sub
xchg
or
push
mov
adc
xor
xchg
or
mov
test
stc
scas
sbb
pop
pop
inc
mov
pop
and
push
sub
push
in
dec
and
or
scas
aaa
or
pop
test
jo
sub
lcall
xor
stos
pop
sbb
push
pop
sbb
inc
aam
add
aad
inc
or
sbb
adcl
mov
addb
jg
push
sbbb
mov
mov
bound
xchg
gs
lea
rcr
arpl
pop
dec
insb
mov
fs
sbb
out
push
or
call
std
add
aas
lcall
adc
ds
xchg
rorl
xchg
in
test
popf
es
sbb
add
xchg
mov
push
cltd
jecxz
mov
int
and
pop
lods
pop
fs
adc
push
addr16
lock
jns
mov
filds
or
loope
dec
icebp
outsb
lock
lcall
lds
jmp
ja
hlt
lret
pop
adc
jb
cs
cs
xlat
jne
xchg
leave
jne
jo
xchg
xchg
jae
fdivrl
and
xchg
mov
int3
leave
pop
wrmsr
add
test
mov
int
mov
jne
out
pop
lds
clc
scas
dec
addr16
adcl
repz
add
stc
test
jns
cmp
dec
jle
lds
adc
sahf
cltd
jbe
daa
lahf
mov
and
jne
mov
rorb
dec
stos
les
mov
xlat
cmp
lret
mov
insb
outsb
std
adc
mov
pop
test
adc
pop
or
sbb
lret
sbb
lock
mov
and
sbb
test
inc
gs
loop
mov
adc
daa
xchg
js
mov
mov
and
jnp
addr16
sti
or
imul
mov
mov
mov
pop
aas
lea
rol
fs
pusha
lds
pop
sbb
nop
lcall
push
xor
and
inc
or
cltd
jnp
imul
cmp
sbbl
imul
push
dec
fadd
or
inc
add
xchg
sub
pop
xlat
or
lret
jl
inc
mov
fstl
call
aam
subl
cmpsl
adc
enter
int3
adc
mov
icebp
add
jns
add
add
sbb
das
jae
sbb
insb
mov
mov
sub
push
adc
pop
negl
lcall
movsl
fdivs
fstps
push
movb
xchg
xchg
pushf
add
ror
popa
push
bound
sub
push
es
mov
sub
test
loope
bound
sti
idivl
pushf
into
jae
adc
out
jnp
lahf
ja
out
mov
jbe
fmull
aas
aam
push
out
mov
stos
push
jmp
sahf
jb
inc
pushf
sub
out
xchg
pop
mov
repnz
pop
or
pop
and
incb
das
fildll
out
pop
mov
mov
std
inc
inc
iret
shl
rol
cs
push
cmp
lds
jle
xchg
in
int3
push
and
mov
inc
fisubs
pop
jbe
sbb
or
clc
xchg
xor
out
xchg
clc
orb
or
adc
add
or
arpl
inc
adc
push
fbld
nop
push
sub
push
xchg
push
pop
add
or
dec
ja
push
addr16
xorb
leave
movsl
out
jnp
mov
aaa
pop
pop
push
call
xchg
es
sbb
pop
push
notl
inc
add
dec
popf
or
push
fcmovbe
pop
jno
out
movzbl
adc
mov
mov
sub
fidivl
movl
arpl
jl
adc
rcrb
rclb
jmp
lret
jl
xchg
scas
out
pushf
pop
sub
cs
mov
mov
aad
cmpsl
cltd
imul
sbb
dec
adc
movb
cmp
add
popa
lret
mov
ret
punpckhbw
cmp
inc
in
imul
fucomi
sbb
jnp
ss
fcom
fisubrs
mov
in
push
std
fdivr
movsb
and
in
cmpsl
roll
loope
aam
inc
bnd
sbb
or
xchg
in
adc
in
out
int
pop
add
pusha
push
jnp
cmp
sahf
xor
cmp
sbb
lods
popf
and
loop
sbb
jmp
out
xchg
pop
inc
negl
ffree
mov
insb
and
mov
mov
fucomip
shll
mov
mov
mov
or
mov
cmp
repz
popa
inc
xor
hlt
imul
cmp
rorl
movsl
cmpsl
jmp
je
ficoml
pushf
pushl
stc
test
int
decb
mov
repz
pop
mov
clc
popa
pop
mov
cmp
mov
rcr
insb
cmp
mov
fists
sub
pop
bound
and
jecxz
mov
mov
pop
cmp
das
and
xor
adc
mov
loopne
lret
add
movsb
cmp
xchg
loopne
arpl
cmp
and
mov
mov
or
lds
xor
fs
enter
mov
push
and
jne
sbb
push
movsl
sbb
mov
inc
pop
add
gs
cli
test
lret
push
mov
test
and
fstpt
inc
lcall
bound
inc
jne
jle
sub
mov
int3
cmpl
lods
xlat
cmp
dec
push
mov
add
popf
pop
push
in
cld
arpl
pcmpeqw
test
add
mov
xor
es
inc
mov
xchg
mov
xor
cmp
mov
imul
xchg
jge
cltd
ds
mov
lds
mov
inc
push
mov
inc
fcoml
adc
movsl
push
pop
or
cld
pop
insl
add
adc
xchg
scas
dec
test
aad
mov
xchg
arpl
lods
mov
inc
dec
es
mov
and
xchg
push
rcrb
outsb
pop
outsl
fisttps
inc
data16
xchg
fcoml
mov
mov
fucomip
add
mov
loopne
outsb
jmp
mov
mov
aas
or
call
movsb
jmp
in
mov
xor
mov
subb
scas
cmp
mov
adc
mov
jge
add
inc
idivb
loopne
push
push
cmp
sub
cmp
push
mov
dec
out
cld
jnp
adcb
out
pop
ja
enter
mov
or
cmp
xor
pusha
or
sub
dec
mov
ss
push
ljmp
mov
lds
movsb
xor
ds
dec
pop
orb
pop
sub
call
lcall
push
clc
in
icebp
not
xchg
cmp
push
sub
movsb
inc
nop
ficoml
int
psrlq
out
dec
mov
inc
inc
cmpl
pop
test
scas
push
out
test
daa
and
jecxz
mov
pop
sbb
or
into
lds
aam
push
out
pop
aas
xchg
das
or
pop
out
jnp
out
mov
outsl
data16
iret
div
outsb
jns
fimuls
lahf
mov
pop
test
pop
insb
into
rorl
xchg
fcmovnbe
pop
outsl
imul
sbb
jns
fdivrl
mov
lret
icebp
jae
cmpsb
jp
int
push
dec
negb
je
sub
inc
cmp
mov
jae
out
xor
mov
mov
adc
clc
push
mov
dec
adc
fbstp
mov
cli
push
push
lds
xchg
scas
out
or
imul
mov
jns
inc
sahf
es
cltd
push
pop
cmc
psubw
rcl
mov
push
sub
popf
inc
hlt
and
or
sti
or
ret
xor
in
sbb
imul
cmp
sub
mov
add
push
or
mov
hlt
mov
add
call
ja
in
out
push
jno
loopne
inc
outsl
push
gs
sbb
xchg
fildll
jmp
jae
dec
or
repnz
sbb
mov
mov
xchg
rclb
ret
sbb
fstps
pop
pop
lods
test
leave
sub
imul
fxch
addb
lea
std
loope
sbb
add
xchg
xor
movsb
imul
test
aam
mov
xor
mov
mov
push
test
std
push
and
int
fcoms
adc
movsb
pop
cmp
xor
jge
sbb
adc
inc
and
les
add
movb
push
fsincos
dec
or
pushf
sub
pop
sub
xchg
lret
loopne
insb
aam
sub
sbb
pop
and
aas
test
inc
xchg
inc
cwtl
cmpsl
adc
in
outsl
xor
adc
sarl
pop
jmp
pop
cld
jl
pop
jmp
sub
fisubl
xchg
stos
inc
les
scas
sbbl
stos
gs
shl
rcll
add
shll
mov
xchg
shll
sbb
dec
push
mov
adc
shr
mov
mov
out
shrl
js
outsb
or
cmp
push
mov
nop
or
daa
add
adc
cli
dec
mov
adc
ds
or
cltd
pop
cmpsl
addr16
sar
pop
rcrb
xor
adc
cmp
lock
dec
mov
push
daa
mov
imul
clc
fwait
dec
xchg
mov
movsl
mov
addr16
and
jno
xchg
sub
andb
in
iret
xor
rclb
and
dec
xor
adc
add
push
hlt
jbe
pop
movsb
inc
pop
sbb
push
push
mov
sub
add
mov
fidivl
and
dec
dec
mov
inc
addb
cmp
jae
call
lcall
push
adc
loope
lods
mov
sub
pusha
cli
bound
test
xchg
jnp
mov
pop
imul
cmc
hlt
ret
fsubs
in
fisubrs
cmp
in
enter
or
loope
sub
push
mov
repnz
testb
rcr
mov
shrb
push
pop
divl
pop
fsubrs
add
fs
call
jmp
rcr
mov
sbb
mov
shlb
test
and
in
lods
lret
xchg
loop
das
in
fisttpll
repnz
jge
jne
imul
xchg
ror
lods
scas
pop
dec
ljmp
les
xor
dec
in
dec
ret
inc
fstpt
mov
test
dec
jle
pop
push
iret
cmp
inc
insb
repz
or
roll
cli
push
inc
mov
inc
arpl
xchg
sbb
dec
outsl
xor
sbb
lcall
mov
add
cs
fs
scas
xor
xchg
mov
mov
aas
fnstenv
pop
dec
cmpsb
cs
mov
push
lcall
push
sub
hlt
push
mov
inc
ss
mov
mov
cmpb
inc
cmc
testb
insl
arpl
add
test
xor
frstpm(287
lods
cmpsb
mov
test
xchg
sbb
dec
mov
xchg
ss
call
fs
xlat
dec
shl
lret
push
rorb
cmp
inc
mov
mov
add
shlb
push
adc
xor
loopne
rol
xchg
mov
jbe
subb
shlb
push
pop
sbb
push
int
stos
jns
sti
and
sub
pop
aam
or
sub
mov
daa
inc
stc
and
out
popf
or
leave
lock
xor
ftst
inc
adc
aam
push
in
out
and
mov
pop
inc
in
insb
sbb
inc
aas
ljmp
subl
stc
cmpsb
lret
push
push
pop
ret
pop
or
pop
nop
subb
mov
test
sbb
fwait
push
mov
jae
add
adc
push
fimuls
addb
jo
jg
leave
mov
movb
pop
icebp
and
adc
adc
and
jns
mov
cltd
mov
mov
es
pop
or
xlat
lahf
hlt
lret
mov
cmpsl
cwtl
push
adc
imul
into
xor
daa
cld
jl
and
push
xor
pop
rolb
arpl
jo
pop
jmp
fsub
rcrl
adc
adc
sbb
add
mov
in
jne
push
jb
ret
bound
xchg
inc
inc
in
xor
test
lret
sbb
or
subl
xor
xchg
ss
enter
push
insl
fildll
xlat
cmpb
outsl
sub
or
push
sbb
mov
sbb
adc
in
jmp
and
xchg
das
repz
rclb
xor
sahf
xchg
cmpl
cmc
xchg
pop
push
fchs
xchg
pop
or
loop
loopne
mov
int3
mov
add
lea
mov
in
pop
cmp
add
or
pop
inc
pop
cs
mov
test
add
int
jbe
movsb
inc
ljmp
test
movsb
jo,pn
frstor
cs
int
ss
add
xor
mov
test
pushf
mov
or
jp
sub
lods
sarb
push
xchg
pop
stc
outsb
pop
popf
sti
sbb
pop
bound
cltd
sub
sbb
sbb
xlat
aad
mov
stc
lea
xor
and
shlb
inc
jns
popa
mov
mov
aas
sub
mov
pop
aad
mov
mov
out
add
std
or
hlt
inc
in
push
fisubl
jge
sarb
mov
shrb
xchg
stos
cs
lock
lds
adc
stos
jge
dec
jle
movsl
mov
sub
cmpb
mov
push
daa
and
push
and
mull
sahf
and
fbstp
movsb
andb
lods
test
mov
xchg
push
mov
xor
outsl
pop
or
lahf
in
or
test
rcl
orl
or
rorb
xor
and
lret
mov
and
and
repz
push
inc
xor
inc
das
lret
and
jecxz
adc
push
popa
or
jle
push
mov
test
fistpl
ret
stos
adc
or
fs
jge
jg
xor
mov
fisubs
test
daa
xchg
jo
pop
sub
cmp
aad
test
inc
das
mov
pop
ret
ljmp
xchg
jnp
jne
fsubl
xchg
fs
outsb
pop
cld
push
clc
push
mov
and
sub
std
iret
push
scas
repnz
shlb
push
xchg
hlt
adc
jns
sub
out
cmp
mov
cmp
fldcw
aas
jne
lea
test
daa
repz
fs
mov
sti
mov
out
pop
out
aas
jge
jae
push
xchg
dec
inc
incb
sbb
test
and
cli
es
jmp
out
rcrb
push
jle
mov
mov
push
mov
adc
test
rcrl
lods
cmp
jmp
repnz
mov
pop
outsb
insl
xchg
pop
fs
movaps
lods
mov
cwtl
push
cmp
jae
loop
dec
scas
jo
les
lret
mov
mov
or
pop
loope
and
and
xlat
stos
cmpl
add
cmc
and
movsb
pop
scas
out
pop
lock
pop
mov
and
push
cmp
in
adc
jno
xchg
cmp
js
add
mov
scas
mov
mov
mov
sarl
out
mov
lahf
inc
mov
insb
in
icebp
stc
inc
lds
dec
int
pop
and
test
clc
push
aam
pop
push
add
xchg
or
movsl
enter
mov
nop
adc
outsl
mov
mov
mov
cmp
scas
mov
inc
cli
sbb
jecxz
icebp
fcoml
or
add
outsl
lock
push
and
stos
mov
movsl
int3
mov
aad
mov
or
push
out
pop
push
es
mov
lret
cltd
movsb
scas
clc
mov
xor
add
or
repz
jl
mov
loope
mov
sub
mov
movsb
dec
cmc
xchg
jg
cmpsb
lahf
fcomps
pop
movsl
mov
jb
mov
jmp
repnz
test
aaa
inc
sahf
mov
jp
iret
xchg
cmpsl
jo
aad
mov
cld
jge
pushf
sub
mov
sbb
mov
cwtl
mov
cli
jle
jnp
imull
and
xchg
cmc
sub
jl
and
add
cli
dec
mov
lds
popw
sarl
xor
repz
loopne
int3
add
sbb
xchg
push
sti
adc
in
jp
push
mov
xchg
dec
or
sbb
mov
cmpsl
and
xor
jb
pushf
mov
cmp
dec
fwait
repz
or
add
lret
mov
push
ret
clc
pop
fs
pop
or
sahf
inc
mov
sub
outsl
test
es
das
lret
std
cmp
shr
xchg
imul
clc
cld
jecxz
movsb
xchg
dec
or
rorl
push
into
sbb
fdiv
mov
stos
add
ljmp
jl
arpl
or
xchg
data16
xchg
mov
inc
loopne
push
xor
out
pop
xchg
data16
add
jmp
push
cs
call
sub
popa
and
push
jge
or
sti
test
lcall
enter
dec
sub
lea
loope
mull
mov
or
mov
cmp
loope
hlt
std
orl
lds
inc
sbb
sbb
inc
mov
icebp
sarl
sar
pop
aam
pop
inc
jge
dec
jp
scas
hlt
mov
and
push
xchg
mov
movsb
add
add
inc
jge
jmp
fdiv
cmovp
pop
add
ds
mov
dec
fwait
push
push
pop
bound
rolb
push
xor
cmpl
xor
nop
cmp
ror
and
mov
movsb
leave
repnz
xchg
inc
push
rolb
shlb
sbb
sub
shll
sub
pop
and
loop
adc
std
outsl
nop
mov
sub
or
ds
mov
ffreep
pop
xchg
pop
scas
orb
sbb
mov
adc
mov
mov
stos
or
xchg
sbb
mov
sbb
and
xchg
outsl
in
push
xchg
jne
xchg
dec
out
jl
add
cmp
jle
js
fs
mov
mov
xchg
dec
sti
scas
lds
pushf
and
shl
cmc
jo
call
adc
andb
pop
xor
and
lds
clc
out
cmpsl
mov
dec
add
out
ds
lcall
jg
mov
cli
add
pop
fdivrs
arpl
sbb
sbb
ftst
cwtl
sbb
jbe
mov
or
mov
aaa
and
mov
mov
jnp
movsb
cmc
mov
inc
in
jae
cmp
sbb
das
and
xchg
int3
mov
mov
pusha
fs
xchg
outsb
adc
out
das
out
pop
or
jae
in
icebp
mov
bnd
xchg
jns
and
shl
xor
popa
in
pop
cmp
push
xchg
rcrl
xchg
out
and
sub
lret
and
stos
or
sub
hlt
test
fldl
mov
shll
and
sbb
std
mov
mov
fstl
xchg
int3
xchg
jno
sub
pop
mov
rclb
pop
sbb
hlt
addr16
das
fnstcw
sub
jo
xor
ljmp
lea
pop
dec
hlt
inc
push
cwtl
jne
fcoml
mov
aam
xchg
int
inc
push
mov
stc
jle
dec
pop
lods
ja
jne
insb
add
divb
dec
lahf
cld
jne
pop
push
mov
arpl
cld
xchg
jle
mov
cmc
pop
cmp
test
mov
jecxz
jmp
iret
xchg
adc
insl
sahf
inc
dec
arpl
pop
or
rcl
add
xchg
movsl
jae
push
add
pop
jg
push
mov
sbb
in
lds
adc
mov
xor
mov
int3
cmp
aas
sub
divl
shl
sahf
in
cmpsb
cmp
fnstenv
push
jb
test
xchg
mov
test
ss
and
cmpsb
dec
xchg
add
mov
movsb
ja
bound
xchg
jp
inc
int3
jnp
outsb
into
movsb
rcrb
ficoml
jl
mov
cmc
inc
cmpsb
jecxz
jp
xor
pop
add
xchg
fsubr
js
xchg
arpl
dec
push
popf
and
div
aad
pop
xchg
add
pop
sub
jb
mov
cli
into
cli
or
mov
ret
daa
jae
jno
inc
arpl
jns
push
push
mov
js
push
sbb
fiadds
hlt
jo
in
and
imul
sarl
add
cmp
and
or
sub
int
xchg
test
fldl
pop
ret
mov
pop
scas
ja
pop
pop
test
push
cmp
pushf
ja
mov
add
inc
imul
dec
loop
daa
cltd
jecxz
stos
mov
push
sbbb
mov
xor
jmp
fildll
sbb
test
cmc
push
rcrb
push
fmul
gs
es
mov
adcb
or
shr
xor
fwait
test
push
push
mov
or
and
or
jno
addr16
je
iret
movsl
mov
dec
decb
insb
imul
xlat
icebp
jnp
fisubrl
rol
imul
cmp
aad
pop
adc
adc
test
hlt
mov
shlb
repnz
cmpsl
les
mov
insl
pop
push
mov
cltd
xchg
xchg
test
xor
aaa
or
stos
push
dec
cld
psadbw
mov
push
addb
dec
fwait
test
xchg
jo
pop
push
push
scas
test
pop
insl
stos
mov
sub
dec
pop
sarb
lret
lea
pop
adc
jo
je
xchg
xor
addr16
scas
mov
inc
and
lret
adc
fsubr
aam
adc
call
sub
mov
mov
lret
dec
insl
and
gs
cmc
lods
pop
jbe
push
aam
icebp
adc
cli
mov
or
pop
xor
outsl
sbb
repz
xor
sarb
jae
int3
mov
mov
movsl
add
ss
ret
cs
out
icebp
mov
sbb
push
and
mov
movb
cwtl
loop
mov
aaa
call
in
mov
in
jp
shl
jmp
xchg
ret
mov
add
add
lret
push
in
sti
mov
das
push
out
pop
mov
pop
test
lock
push
lods
inc
cwtl
insb
jbe
inc
and
xorb
gs
das
pop
dec
ret
and
mov
xchg
cmp
lds
cmpsl
iret
jo
bound
ret
scas
sbb
xchg
aad
enter
jb
std
or
pop
orb
imul
xchg
mov
rorl
push
fldt
aas
lcall
sti
pop
loope
shrb
mov
add
lods
pop
cs
mov
mov
jnp
cmp
mov
fidivs
mov
fisttpl
es
in
int3
mov
sbb
lods
imul
cli
dec
sbb
and
movsb
lods
out
sub
and
adc
outsl
inc
shrl
aas
jmp
sub
es
mov
push
pop
dec
xchg
scas
mov
push
add
cmp
dec
jmp
pop
jae
xchg
jmp
mov
clc
xor
sub
stc
mov
rolb
or
xchg
loop
cltd
out
or
mov
rorl
mov
je
adc
fisubs
cmp
shlb
ficoml
xor
pop
fcoml
out
test
stos
cmc
sub
loopne
adc
push
mov
test
jbe
bound
rolb
test
call
pop
shll
adc
repz
nop
inc
xchg
cmp
int
in
fdivrs
cvtpi2ps
mov
xchg
inc
rolb
cld
ret
lcall
ja
clc
imul
out
xchg
mov
idivl
or
mov
mov
cmp
and
cmp
xor
insl
aam
inc
movsl
jbe
fwait
outsb
cmpsb
mov
fninit
sbb
inc
mov
add
rcrb
shll
mov
push
xor
adc
jl
or
add
jnp
mov
pop
mov
sbb
inc
shr
pushf
dec
fistl
repz
sbb
adc
pop
jle
jns
out
hlt
lds
fists
cltd
mov
mov
push
mov
jl
or
sti
sti
loopne
shrb
cld
daa
adc
pop
hlt
iret
mov
sbb
ljmp
addr16
mov
xchg
popa
lods
aam
pop
push
mov
mov
cld
pop
mov
pop
stos
mov
pop
sub
cmp
in
dec
push
pop
fdivl
gs
jecxz
pop
repnz
fstl
cwtl
pop
jl
xchg
dec
or
pop
das
mov
mov
pop
outsb
mov
push
sub
aam
out
or
mov
push
shlb
xlat
pop
push
imul
clc
push
mov
adc
outsl
inc
das
lds
fcmovnu
add
adc
psrad
xlat
data16
add
lock
neg
and
add
std
test
test
scas
push
xchg
mov
roll
sub
push
int
hlt
ret
clc
imul
orl
add
add
sub
jl
scas
stc
dec
add
aas
xchg
loop
sti
outsb
or
cmp
xchg
xor
or
lcall
hlt
rorl
or
imul
and
xchg
sub
sub
mov
push
add
mov
aaa
out
cmpsb
or
dec
call
push
jno
test
xor
nop
outsl
insb
push
outsb
dec
dec
dec
aam
nop
sbb
mov
mov
jp
loop
add
push
pusha
into
and
rcrl
mov
lret
adc
xchg
enter
les
sbbl
cmpsb
notl
outsb
lock
adc
pop
out
in
mov
xchg
push
jnp
or
les
and
mov
dec
push
out
das
cmp
mov
imul
sub
inc
inc
and
pop
enter
push
push
or
mov
repz
pop
cmp
mov
mov
cmp
aaa
cmp
or
xorl
imul
mov
nop
leave
leave
add
insb
jecxz
sub
dec
into
dec
lods
lcall
stc
aas
sub
test
jae
dec
jmp
sub
lods
incb
mov
lcall
push
imul
jnp
fcomps
shl
out
movsl
xor
or
sbb
movsl
fsub
test
mov
push
out
fs
iret
xchg
dec
and
mov
jp
loope
lgs
jp
loopne
nop
fmuls
movsb
cmp
idivl
lret
inc
repnz
mov
and
cli
lods
fcompl
sbb
xor
loope,pt
xor
ret
loope
jle
rorl
test
sbb
xchg
push
lahf
push
cmp
mov
inc
mov
or
insb
push
in
jge
std
ljmp
sbb
outsb
pop
and
fwait
xchg
fwait
and
shll
mov
mov
lods
dec
ret
sub
mov
xchg
ds
push
fstl
inc
sub
pop
test
jbe
push
pop
cli
imul
xor
not
lods
jae
out
adc
mov
pop
dec
daa
repz
in
clc
ljmp
mov
pop
xlat
std
iret
int3
cmc
insl
pop
ds
mov
jp,pt
popf
mov
movsb
fidivrs
jecxz
or
dec
stc
aam
xor
inc
mov
out
and
int3
xorb
and
mov
iret
xor
mov
jns
dec
in
out
mov
lods
mov
fsubl
mov
push
adc
push
xor
mov
out
mov
jl
lock
out
xchg
or
xor
mov
stc
pop
mov
hlt
add
int3
and
in
cltd
movb
xchg
repnz
nop
mov
dec
jb
and
jnp
insb
sarb
in
enter
mov
int3
xchg
add
std
sub
fildl
fs
inc
loopne
stc
mov
lret
cmp
jecxz
mov
jl
xor
addb
xchg
pop
test
mov
mov
incl
cmpsl
mov
jbe
cmpsl
int
fimuls
pop
inc
add
shl
arpl
repz
out
mov
mov
cltd
xor
jns
in
jg
iret
pop
dec
xlat
inc
insl
aas
jp
ret
cmpsb
fdiv
adc
jl
loope
cmp
cli
stos
cmc
push
in
sti
mov
jp
and
rclb
dec
jb
adc
inc
and
add
clc
mull
int3
mov
out
fs
popf
push
xchg
and
pop
xchg
out
andl
push
dec
js
ret
sbb
fildl
dec
and
mov
xchg
inc
mov
dec
lss
outsb
mov
jl
clc
xor
mov
out
testl
sahf
int3
in
xor
jno
mov
sbb
call
nop
cmp
cwtl
xor
xchg
push
add
xor
inc
push
dec
int3
push
test
sub
adc
pushf
inc
push
sbb
jg
and
push
jle
imul
xchg
sub
popf
add
lea
jle
pop
adc
ljmp
fidivrl
push
inc
test
and
cmpsl
add
push
mov
sub
mov
movsb
ds
add
push
mov
and
pop
mov
cmp
lahf
cmp
xchg
push
mov
xchg
ror
shrl
xor
int3
pop
pop
shl
mov
movsl
adc
aaa
ficomps
or
mov
into
decb
int
bt
ljmp
pop
lods
dec
enter
nop
inc
jle
lea
orb
inc
inc
rclb
orb
arpl
mov
jle
adc
addb
or
negl
and
fsub
mov
rclb
test
fdivrl
out
dec
das
push
hlt
stos
sbb
inc
xor
outsb
lea
fwait
aad
fcmove
jg
pop
js
mov
or
inc
ret
adc
sbb
xchg
mov
mov
sub
int
sahf
or
inc
lds
bound
pop
fmull
aam
fnsave
mov
adc
sbb
movsl
ss
fnstenvs
out
enter
and
push
or
rcrb
data16
mov
or
pop
test
cmpsl
xchg
mov
sub
jmp
sbb
sbb
jge
hlt
jbe
sub
ret
jge
mov
adc
xor
fstl
pop
std
je
notl
lret
test
cmp
mov
lret
cwtl
or
pop
fists
dec
fnstsw
out
mov
hlt
leave
pop
mov
stos
cli
sub
dec
xor
insl
jne
jnp
insb
mov
jl
clc
or
out
push
aam
mov
pop
mov
orb
lods
ret
push
pushf
cmp
dec
dec
lahf
sbb
or
cltd
mov
jp
ljmp
sbbb
ret
xor
adc
leave
mov
shl
bound
pop
faddp
jmp
adc
aas
stos
jo
or
jnp
xchg
sub
push
sbb
push
out
sbb
ret
add
xlat
push
or
fidivrl
fcomps
lea
mov
pop
adc
fadds
add
mov
push
cwtl
test
stos
mov
inc
mov
mov
mov
inc
ds
mov
mov
movsl
les
jo
adc
fsubrs
and
nop
mov
or
iret
int3
or
xchg
and
testb
cld
or
jmp
adc
lds
xchg
fwait
xor
adc
and
lds
push
adc
mov
fldcw
sbb
shll
rolb
jae
xchg
pushf
jecxz
outsb
jns
pop
shl
or
test
sbb
icebp
adcb
xchg
jmp
movl
dec
test
mov
inc
or
mov
pop
fidivrl
pop
popa
or
mov
xchg
lahf
jnp
loope
icebp
enter
ret
fstpl
rolb
xchg
insl
adc
mov
mov
popf
or
dec
xor
jge
shrl
out
adc
mov
mov
jae
insl
mov
incl
adc
sub
pop
add
adc
pop
add
aad
add
insl
cmp
nop
mov
roll
mov
lahf
push
or
nop
rclb
testl
lods
int3
mov
jns
or
loopne
jne
and
jp
lods
pop
aad
pop
jo
or
cwtl
xor
cld
fistpl
xor
cmpsb
in
add
les
cwtl
pop
ds
popaw
daa
push
sbb
lods
sub
xorl
pop
cwtl
add
jns
and
pop
popa
add
mov
inc
fnclex
shll
sbb
mov
jp
mov
add
cmp
xor
push
mov
adc
lret
out
mov
lcall
fsubrs
adc
and
sbb
out
ret
dec
dec
or
not
jo
dec
fmuls
jo
and
stc
xor
insl
add
xchg
xchg
inc
cltd
cmp
mov
mov
push
sbb
lret
ror
cld
add
test
push
sahf
jnp
int
add
aas
movsl
fldcw
pop
fst
outsl
loopne
mov
aam
lcall
cltd
in
aaa
negl
clc
push
mov
mov
xor
loope
rorb
cltd
out
cmp
xchg
mov
jne
or
stos
xchg
mov
adc
dec
adc
lret
mov
outsb
les
mov
outsl
into
test
or
sbb
jecxz
lods
notl
into
fstpl
adc
adc
ret
pushf
push
fisubrs
mov
test
sub
fildll
sahf
adc
in
sub
fwait
jle
mov
rcrl
inc
or
xchg
or
adc
or
jb
bound
xor
add
jmp
xor
dec
or
lods
fwait
cwtl
pushf
inc
pop
or
in
ret
int3
data16
push
rolb
fdivrl
lods
jns
js
and
or
jae
adc
pop
or
mov
test
cmp
pop
and
pop
in
sbb
imul
cmp
test
out
sbb
stos
dec
lods
dec
push
pop
sbb
jns
sti
xchg
cmpsb
ds
pushf
popa
jnp
test
xchg
dec
fisubrs
mov
lret
out
sub
jge
jnp
pop
jp
lcall
out
mov
aas
cld
jb
lahf
adc
sti
popf
jp
jae
call
rclb
cwtl
arpl
orb
loope
push
sub
sub
mov
scas
or
test
cmp
popa
mov
lahf
sbb
mov
pop
in
jg
mov
xor
andb
int3
jae
lock
or
lret
sub
cmp
xchg
and
or
sbb
adc
dec
aaa
pusha
stos
inc
bound
mov
mov
and
inc
cltd
call
rol
notl
adc
jae
mov
sti
xlat
xchg
cmp
jp
and
loopne,pn
push
sbb
int3
enter
out
mov
lahf
rolb
sub
adc
mov
movsb
lods
mov
sub
push
pop
cmpsl
aas
das
dec
mov
pop
int3
inc
int3
push
jle
xor
mov
jnp
jle
pop
bound
pop
gs
aam
shrb
xor
jb
and
mov
out
lock
lahf
into
ds
pop
pop
sti
mov
out
mov
push
add
aas
sub
mov
mov
inc
jecxz
in
sbb
pop
push
cmp
clc
jl
dec
and
cs
and
int3
inc
ret
scas
leave
and
mov
mov
inc
out
mov
enter
hlt
inc
fstpl
inc
idivl
nop
mov
daa
pop
js
or
nop
int3
inc
bound
cmpsl
xor
outsl
xchg
js
adc
decb
inc
ljmp
out
clc
cmpsl
lcall
orl
mov
call
in
fmull
mov
jmp
test
fists
push
inc
fimuls
pop
adc
pop
sub
adc
insb
fldenv
pop
push
mov
mov
sbb
sub
sbb
outsl
in
in
fwait
loope
js
jmp
sub
inc
ss
aas
pop
push
lret
inc
negl
lds
sbb
push
scas
adc
and
loopne
clc
jns
cmp
mov
sbb
cmp
data16
inc
inc
inc
inc
mov
in
adc
adc
jb
pop
leave
or
push
xor
iret
insb
xor
imul
pop
fdivs
in
mov
pop
sub
jmp
jp
adc
leave
in
adc
mov
int
add
or
inc
sahf
and
push
jle
push
cmp
nop
jle
mov
shll
mov
push
adc
out
outsl
fdivrl
pop
adc
shlb
jnp
nop
mov
mov
push
and
xor
shlb
fxch
push
inc
pop
mov
aas
xor
inc
je
cmp
mov
adc
mov
nop
shrb
xchg
mov
add
pop
popa
sbb
cmp
pop
and
dec
dec
xchg
jae
sarl
hlt
pop
scas
jmp
icebp
aad
jo
hlt
pop
ds
jge
mov
lock
mov
mov
or
roll
mov
pop
push
dec
mov
add
adc
or
sti
in
scas
jge
push
outsl
mov
inc
mov
sbb
cli
lea
add
sub
lcall
cmpsb
mov
adc
or
adc
ds
jno
adc
loope
aam
pop
or
mov
jle
push
push
mov
shrl
loopne
outsb
pop
jnp
lods
scas
add
push
lret
cltd
inc
jne
mov
addb
jl
jnp
xchg
fimuls
add
icebp
jno
rcl
dec
xor
xchg
mov
ret
mov
xor
popf
and
adc
push
and
icebp
pop
xor
ja
push
popf
loopne
addr16
or
out
lock
sahf
push
loope
out
aam
idivl
xchg
cmp
dec
insb
cmp
cmp
clc
call
dec
pop
cmpb
xlat
sub
sub
mov
cmpsl
add
or
add
add
shrb
loopne
inc
cmp
pop
mov
pmulhw
pushf
popf
imul
ja
clc
pop
jo
in
pop
movsl
test
and
scas
xchg
nop
es
stos
ja
jp
jp
bound
lds
scas
leave
fs
ret
fnstsw
mov
sub
sbb
data16
dec
enter
and
mov
addr16
movsl
xlat
int
scas
lret
scas
mov
cmpsb
popf
cmp
mov
mov
pop
xor
mov
jecxz
pop
xchg
cmp
xor
cwtl
jb
mov
out
iret
lret
notl
mov
jp
xchg
ss
dec
xchg
stos
aas
sbb
sub
dec
adc
dec
mov
xor
dec
cltd
mov
popf
sbb
cld
jmp
js
xchg
cmp
cmp
popf
mov
imul
add
cmp
push
arpl
rcrl
out
loopne
out
cmpsb
jecxz
sub
ret
mov
xchg
mov
xor
fdivr
stos
add
sbb
sbb
loopne
sar
pop
sub
fcom
es
jno
pop
addr16
in
decl
sub
or
in
out
pop
push
ret
cmpl
push
add
dec
push
orl
jno
sbb
jo
pop
mov
icebp
pinsrw
mov
scas
jns
mov
pop
jns
std
test
fstps
cli
fistl
pushf
test
xchg
ds
adc
sbb
xor
add
adc
sub
dec
pop
out
jg
cmp
sbb
loop
xor
scas
nop
icebp
xor
mov
lea
vmovaps
inc
movsb
mov
inc
cli
out
or
add
xor
stc
es
adc
js
mov
cwtl
pop
push
mov
jb
mov
mov
ror
ljmp
dec
stc
cli
mov
sbb
in
cltd
repz
in
ret
push
mov
cltd
aam
pop
data16
pop
sub
lret
fstps
push
inc
int
dec
js
or
jnp
push
loop
cmp
add
in
sbb
jmp
cltd
mov
jl
cmp
lds
repnz
or
push
aam
out
test
mov
mov
lea
scas
mov
jge
ffree
dec
stos
add
arpl
sbb
movsl
jne
imul
ss
mov
jo
or
in
pusha
fcoml
arpl
mov
movsb
in
or
icebp
mov
arpl
xchg
movsb
sub
lods
fsubrs
sub
ret
xor
lds
insb
xchg
sub
mov
je
int3
ss
fnstenv
xor
testl
jg
sub
outsb
pop
inc
gs
sbb
jnp
lret
adc
cmpl
repnz
test
ret
sbb
sbb
sahf
push
sub
or
repz
insw
testb
lret
cmp
jecxz
mov
xor
cmp
movsl
xor
xorb
mov
and
sbb
dec
dec
outsb
inc
sub
repz
ljmp
daa
jg
pop
sub
pusha
xchg
pop
aam
jle
std
sarl
dec
scas
xor
sbb
xor
push
ss
lcall
inc
sub
inc
and
cmp
lea
add
add
mulps
roll
js
orb
sbb
add
sbb
loopne
ds
and
pop
loop
sbb
and
mov
loopne
scas
push
cmc
into
imul
cli
movsb
push
push
xor
xlat
sbb
mov
push
pusha
rcrl
and
push
mov
aad
sub
movsb
and
jae
fs
mov
xor
push
xor
lcall
mov
enter
inc
je
mov
jae
out
les
shll
cli
xor
adc
addr16
sub
mov
mov
movsb
pop
rcll
cmpsl
in
and
test
xchg
shrl
adc
sbb
jg
ljmp
in
movsl
sub
cmp
scas
mov
cmp
rcll
movb
out
adc
dec
add
stos
adc
xchg
adc
push
xchg
popa
ja
mov
arpl
dec
aaa
out
sahf
scas
inc
repnz
incl
mov
cs
pop
push
pop
push
cli
ljmp
stc
lods
aas
iret
xor
xor
das
xchg
scas
xchg
and
fnstsw
mov
rol
adc
mov
cmp
popa
in
mov
lea
mov
push
or
sub
dec
jbe
jbe
xchg
adc
xchg
sbb
mov
movsb
adc
dec
mov
xor
and
repz
mov
filds
jns
es
aaa
filds
fnstenv
int
js
push
push
pop
mov
lret
dec
xchg
js
das
in
fsubp
in
sar
scas
and
xor
notb
mov
imul
xchg
ret
sbb
pop
pusha
lret
push
push
repnz
or
xor
push
rcrl
cltd
and
addr16
test
pushl
mull
lret
xlat
test
test
pop
and
inc
pop
push
cmp
test
mov
xchg
dec
mov
dec
aam
cmp
dec
push
or
xor
das
outsb
lea
inc
pop
into
pop
xchg
jmp
std
inc
cmpb
leave
adc
out
pop
lcall
xor
insb
daa
mov
lods
add
clc
or
addr16
daa
imul
sarb
pop
push
mov
imul
or
fsubrp
inc
ret
and
sbb
imul
mov
movsb
fimull
mov
sbb
aad
inc
pop
push
hlt
or
xlat
mov
sub
mov
shrb
dec
cmpb
testl
std
into
push
lods
push
out
into
mov
das
stos
sub
push
out
ficomps
dec
mov
sbb
cmp
fstpl
mov
xor
mov
dec
shl
jp
imul
sar
inc
scas
xor
jecxz
push
stos
push
sbb
loop
or
outsb
clc
mov
jle
arpl
sbb
cwtl
fcoml
cld
and
jno
jae
das
pop
xor
mov
fsubl
std
dec
xlat
pop
and
outsb
mov
sub
popf
int
fistpl
gs
jb
insb
sub
jl
jge
cmpsb
and
test
push
mov
pop
inc
mov
orl
pop
cs
adc
add
negl
push
mov
inc
mov
or
lcall
or
jmp
mov
or
imul
enter
cmp
in
inc
fcomps
cmp
pop
cmp
call
fsubs
test
int3
enter
ljmp
pop
mov
test
xchg
pop
pusha
pushf
pop
rclb
adc
cmp
push
scas
push
sub
lds
pop
flds
jle
inc
jecxz
mov
shl
xchg
and
pop
repnz
shrb
lock
add
ret
pop
push
lcall
and
inc
mov
stos
sbb
inc
test
testb
loopne
loopne
cmp
aad
lds
xor
bound
scas
sbb
xlat
jl
xlat
pop
fisubrs
inc
movsl
in
adc
and
adc
and
cmp
adc
lds
and
fdivl
mov
arpl
adc
ljmp
adc
jne
outsb
dec
jecxz
inc
out
in
repz
call
and
mov
and
push
jne
aas
cmp
pop
mov
adcl
pusha
aam
pop
mov
pusha
imul
jmp
dec
jecxz
jb
dec
jbe
pop
leave
or
jmp
or
xor
cli
insl
fsubrp
and
sub
inc
lret
jbe
cmp
xchg
lcall
lcall
pop
dec
dec
mov
mov
mov
push
push
mov
cmp
pusha
je
dec
sub
and
movsb
xchg
pop
and
xchg
pushf
and
jl
data16
sub
mov
push
inc
add
pop
pop
jae
dec
or
xchg
mov
dec
pop
mov
sub
add
shll
sbb
popf
lret
insb
push
movsl
push
cwtl
or
push
xchg
lods
into
pop
les
sbb
mov
movsb
pop
dec
insl
rol
jo
fwait
mov
jecxz
or
into
or
jge
dec
adc
lods
mov
movsb
push
mov
adc
jbe
int
sbb
std
mov
mulb
jle
imul
loop
add
ffreep
cmp
adc
sbb
adc
add
aad
dec
xor
xor
rep
add
mov
ja
repnz
in
leave
adc
lcall
outsb
pop
cli
pop
adc
jne
fidivrs
sti
pop
push
out
insl
ficoms
xchg
in
movsl
push
pushf
sub
aaa
push
repnz
sub
adc
cltd
push
lock
addb
movb
pop
cmc
lret
inc
sti
pop
icebp
xchg
mov
je
mov
addr16
and
dec
aas
mov
cmp
stc
insb
xchg
xchg
fmuls
push
cmp
out
das
mov
arpl
xchg
lret
pop
mov
gs
in
push
cmp
sbb
xchg
pop
cmpsb
loope
pop
mov
test
int3
ror
xlat
popa
inc
pop
cmpsb
pop
cmp
hlt
lret
movl
into
adc
ret
std
leave
gs
sbb
bound
adc
mov
ret
pop
in
les
jmp
mov
mov
ja
repnz
daa
fldcw
push
out
loop
loope
mov
call
fstl
or
pop
imul
in
ret
ja
sbb
xchg
xchg
jne
incl
loope
mov
jl
jmp
dec
lods
cld
imull
jmp
cld
unpckhps
mov
dec
lods
xlat
dec
in
push
int
sub
outsb
jbe
pop
adc
dec
lods
bound
cmpsl
xor
fldenv
outsl
jae
lds
xor
lods
or
ret
jle
mov
repnz
mov
mov
xor
das
fldcw
call
shrb
hlt
int3
loop
or
leave
ret
out
adc
dec
pop
aam
imul
pop
movsb
pop
je
adc
push
or
pop
sbb
les
lods
inc
das
dec
jge
jecxz
xchg
dec
repnz
ljmp
lcall
ret
inc
insl
fistpl
cs
push
js
andl
add
dec
sub
mov
and
mov
jns
adc
mov
sub
aam
imul
mov
jg
adc
mov
jae
loope
popf
js
jbe
mov
ds
sbb
mov
addr16
push
shlb
int
mov
das
sbb
pop
jecxz
lds
fs
inc
pop
jno
int
jmp
mov
mov
sub
mov
mov
das
cmp
fistl
push
mov
aad
imul
cmpsb
jns
cmp
imul
jnp
sti
rcr
in
dec
add
and
cmpsl
dec
inc
or
je
idivl
in
mov
iret
popf
adc
adc
xchg
jmp
mov
mov
add
mov
movsl
xor
rclb
lea
lea
xor
lods
sub
movsl
aas
gs
jbe
and
sahf
stos
sub
xor
adc
rcll
xchg
ljmp
jae
sbb
adc
mov
cmp
pop
jb
repz
lcall
jg
inc
sub
adcl
mov
cmp
jp
loop
fsubrl
adcb
adc
xchg
or
scas
lds
orl
add
pop
hlt
push
ret
icebp
push
xchg
in
xchg
mov
mov
mov
sub
fs
dec
data16
fs
xchg
adc
test
sub
bound
fadds
stc
out
lret
or
fs
daa
fwait
cmp
and
sti
lods
and
faddl
inc
int
out
add
jp
cwtl
add
je
bound
and
aam
out
in
inc
jnp
pop
leave
xchg
pop
dec
mov
test
inc
rclb
sbb
adc
push
mov
dec
sahf
dec
call
ret
jae
jo
add
jmp
jp
pop
mov
out
dec
push
dec
lahf
or
subb
js
mov
push
and
das
push
mov
mov
pop
movsb
sub
inc
jo
cmpsl
rcll
aaa
cli
push
and
ss
out
out
sub
jne
push
inc
int
adc
lds
push
lret
or
lret
aaa
dec
lea
dec
jmp
mov
dec
jle
pop
inc
xor
ja
shlb
sub
fisttpl
inc
popf
popa
xchg
aaa
ljmp
sbb
insb
xchg
jae
gs
mov
int3
mov
mov
sbb
out
jns
repz
mov
push
int
pop
add
pop
and
xchg
or
shll
sub
and
xchg
jp
in
rol
mov
ret
in
call
scas
movsl
lahf
scas
out
sbb
mov
cld
xor
pop
mov
mov
daa
into
or
jge
xlat
hlt
mov
sub
movsl
mov
clc
mov
mov
push
push
jno
in
loope
inc
adcb
and
dec
sub
or
imul
divl
mov
imul
adc
cmpsl
lods
aaa
aas
scas
lods
ret
sahf
mov
xlat
lods
shll
stos
insb
mov
jne
mov
pop
lods
adcl
in
xchg
movsb
inc
and
mov
stos
jne
jns
not
fmulp
test
xchg
scas
jecxz
jo
mov
div
add
or
lcall
in
movsl
pop
sub
ljmp
mov
mov
out
add
outsb
mov
xlat
in
rcr
jge
addr16
dec
push
mov
daa
jmp
insb
ds
pop
push
sub
and
mov
xchg
lret
jmp
mov
mov
xor
push
lret
cmpsl
pop
fcoml
clc
dec
dec
stc
sub
fsubrp
xchg
sbb
nop
push
ljmp
lret
aas
jb
mov
jns
push
cli
push
mov
jl
mov
sbb
out
aaa
fwait
push
sarb
mov
cmp
lret
sbb
add
addr16
repz
or
iret
dec
dec
sbb
das
jle
std
cli
and
sahf
push
jns
aam
xor
lea
jo
fwait
pop
pop
pop
jl
push
idivl
jno
jne
and
lahf
int3
inc
cmp
shll
jp
cmpsb
iret
adc
iret
sar
pop
andl
pop
sub
push
int
ss
xchg
shlb
ss
pop
add
pop
lds
arpl
outsl
push
mov
movsl
xor
xchg
insl
hlt
int
pop
push
in
dec
add
add
mov
clc
mov
insb
sbb
jp
jmp
out
jmp
pop
lea
int3
xor
add
icebp
js
repz
mov
inc
rcll
data16
pop
adc
cmp
es
movsl
cmc
gs
popf
mov
aas
push
pop
push
jne
dec
clc
aam
aad
mov
repz
in
icebp
addr16
mov
stc
scas
inc
out
dec
adcb
and
das
push
sbb
lahf
mov
out
movsl
push
test
cmp
test
push
push
mov
nop
push
cmp
enter
pop
imul
lock
loopne
mov
enter
imul
rolb
add
or
dec
sbb
xor
stos
jecxz
dec
fsubrl
aas
aaa
jecxz
cmpl
adc
cwtl
es
inc
movsl
mov
pop
jne
sahf
iret
mov
mov
dec
hlt
into
lock
sub
pop
ret
jnp
xor
dec
dec
fs
dec
fidivrs
xor
cvttps2pi
fstl
mov
sub
pop
push
inc
adc
push
sub
mov
aas
je
and
ss
in
adc
dec
test
incb
clc
iret
arpl
or
cmp
stos
mov
mov
mov
mov
insl
lds
jo
movsb
sbb
negl
xor
cmp
jo
lahf
jl
loop
sbb
nopl
lock
jnp
add
ret
aas
mov
movsl
mov
sub
je
xor
cmp
popf
aad
out
jne
repz
cmp
push
pop
mov
pushf
cwtl
popf
out
push
cmpsb
addr16
xchg
into
int
push
add
ljmp
repz
mov
repz
stc
cltd
cmp
push
ficoms
neg
fldl2t
cltd
int3
das
dec
aaa
not
je
addl
into
jl
fadds
mov
push
cmp
idiv
cltd
leave
mov
xor
call
leave
push
or
fsubs
ret
cmpsl
sbb
fs
pop
fcoml
cld
inc
pop
fisttps
cmpsb
xchg
dec
inc
lahf
xchg
mov
mov
aam
cmp
mov
adcl
push
and
sahf
call
repz
xor
jne
flds
mov
push
jnp
dec
leave
jae
rcll
dec
dec
es
jp
dec
leave
jae
adc
mov
push
jns
dec
leave
jae
xchg
and
mov
or
push
js
dec
leave
jae
je
std
dec
leave
cmp
stc
adc
and
nop
sahf
scas
ficompl
xor
mov
pop
mov
lods
dec
gs
rclb
inc
push
sbb
inc
push
lret
call
xor
xchg
jbe
jge
mov
cmp
negb
loop
das
mov
frstor
or
cmpsl
cmp
in
cmp
add
mov
leave
cld
dec
mov
repnz
push
jb
lea
lahf
aaa
ss
inc
movsl
loopne
leave
fmulp
and
xor
shll
int3
xchg
insb
repnz
test
rclb
loop
xchg
dec
mov
inc
lret
adc
fwait
testb
mov
mov
inc
outsl
jo
hlt
out
inc
fsubp
push
call
adc
fwait
pop
mov
rcl
cmpsl
pop
mov
jns
gs
js
scas
mov
pusha
push
cmp
push
sbb
mov
testb
adc
jl
movsl
jb
cmp
pop
push
test
or
out
add
lret
jg
dec
xchg
xorl
adc
imul
cmp
push
mov
jecxz
out
outsb
shlb
adc
mov
xchg
in
lcall
push
aam
test
pop
stc
pushl
sub
mov
sub
call
jmp
cmp
xchg
dec
jl
mul
mov
in
mov
mov
ljmp
mov
push
pop
outsb
xchg
adc
and
or
pop
leave
cli
imul
aas
mov
std
pop
int
out
ljmp
sti
xchg
out
or
lods
cwtl
in
or
mov
or
mull
sbb
jge
dec
scas
sbb
into
testl
and
sahf
rol
fsubs
sub
jo
or
mov
jb
xor
xlat
icebp
js
jmp
out
dec
stos
les
sbb
xchg
mov
icebp
xor
cmp
and
dec
into
mov
or
repnz
jmp
mov
adc
fld
mov
inc
daa
pop
in
sub
mov
xchg
sbb
int
sahf
mov
scas
clc
mov
push
mov
sahf
cmp
pop
fistps
lods
shrl
js
add
fnsave
sbb
jns
insb
scas
xchg
std
fcoml
dec
ja
cmp
shll
jb
mov
inc
xor
xor
hlt
aaa
call
in
inc
and
js
subb
sti
dec
xor
or
lahf
repnz
add
into
icebp
roll
bound
loope
popf
out
xchg
cmp
je
popf
das
shll
cwtl
push
mov
mov
out
cli
dec
mov
shlb
cmp
pusha
mov
dec
sub
push
mov
jbe
fdiv
test
push
mov
pop
xlat
pop
loop
pop
and
loope
mov
ret
dec
std
cmp
and
in
inc
add
scas
out
addl
inc
cmp
cmp
test
leave
mov
mov
rcrl
jl
mov
or
xor
cld
ds
test
sbb
mov
mov
sarb
pusha
dec
inc
pop
fiaddl
xchg
cld
in
inc
mov
lea
xorl
rcr
mov
stc
push
pop
sub
in
push
xor
repnz
mov
jmp
mov
jnp
push
xlat
popf
ds
push
mov
mov
sub
push
mov
dec
push
cld
mov
rcl
xor
ss
jns
cmp
push
xor
pusha
mov
cli
jmp
andl
jnp
mov
outsl
cmp
fwait
int3
ret
repz
mov
aad
addr16
in
dec
jb
mov
iret
cmc
cmpsb
cmp
push
and
or
push
sub
sub
jp
sti
lods
fstpt
xchg
mov
movsl
ret
dec
dec
xchg
pop
mov
rcrb
stos
ret
dec
arpl
xchg
pop
jle
rorb
cmp
pop
or
je
js
sub
dec
xchg
xchg
xor
push
ds
aam
push
clc
fwait
mov
div
jp
lods
idiv
insb
mov
std
outsb
dec
rcll
scas
sbb
inc
add
inc
outsl
js
cmp
aas
adc
xor
adc
sub
sbb
cmp
pop
lods
inc
pop
sti
jmp
push
or
int
xchg
mov
cmp
movsb
cmp
repz
enter
cli
into
mov
cmp
rclb
mov
mov
ret
test
negb
mov
sub
rcl
adc
inc
movsb
mov
jo
scas
xchg
cmpsb
jns
call
xchg
nop
insb
pop
or
into
push
inc
mov
mull
std
leave
xchg
cwtl
mov
mov
cmp
mov
stc
xor
mov
pop
dec
push
orb
or
ljmp
xchg
scas
mov
pop
jns
subl
mov
xchg
xor
and
insl
test
jmp
jg
push
sahf
movsb
jl
xlat
pop
xchg
xchg
dec
xlat
mov
pop
lods
push
push
scas
or
loope
icebp
jns
test
cmp
pop
fidivrs
xchg
mov
mov
pop
stc
push
mov
cs
sar
imul
paddw
call
jecxz
and
roll
jmp
dec
fwait
sti
je
adc
int
jecxz
sbb
xchg
pop
pop
sub
ja
adc
aas
xchg
xor
ja
dec
in
xchg
ljmp
cmpsb
push
pop
das
inc
jl
ss
sahf
cwtl
inc
xchg
gs
pop
cli
outsl
mov
cld
or
jnp
mov
mov
pop
xchg
jp
mov
mov
call
or
ljmp
hlt
pop
dec
subl
lods
push
push
cwtl
fistpl
dec
adc
sub
and
jge
rorb
imul
daa
mov
test
sbb
sbb
shrb
push
jecxz
fisubrs
lods
sub
cli
aad
push
test
dec
mov
pop
popf
mov
xor
jnp
mov
loop
movsb
ja
mov
mov
mov
push
inc
adc
aam
inc
in
cmp
push
out
popa
imul
dec
loopne
xor
mov
xchg
pop
arpl
cmp
fnsave
push
and
icebp
or
mov
movsl
int
adc
idivl
inc
int
and
gs
pop
lcall
int
repz
inc
dec
push
xor
pop
pop
sbb
imul
mul
sub
imul
mov
cld
mov
fdivr
imul
notl
js
xchg
xor
jp
rol
cmp
xchg
xor
inc
div
inc
idivb
dec
aas
or
lret
mov
or
jl
mov
mov
dec
xchg
dec
jns
cmpsl
fldcw
loopne
add
test
sbb
inc
pop
test
cmp
popa
jl
repz
fimull
or
out
icebp
push
insl
or
inc
sub
mov
stos
cmp
bound
sub
mov
mov
insb
mov
gs
lds
inc
aas
decl
mov
push
movl
lods
in
xor
insl
pop
pop
xor
push
cmp
dec
xchg
repz
pop
ret
ja
ds
outsb
mov
xchg
inc
movsl
mov
mov
arpl
push
mov
movb
loope
dec
decl
std
stc
cmp
aas
mov
mov
rorb
scas
xor
lret
jg
lea
inc
fwait
gs
mov
jns
les
pop
pop
push
mov
cmp
inc
dec
bnd
jg
or
mov
out
shlb
or
stos
inc
push
adc
inc
iret
aaa
lds
in
es
enter
and
dec
lds
ja
dec
aaa
int3
in
pop
mov
unpckhps
gs
inc
xor
push
sbb
mov
add
es
mov
rcll
xor
jle
in
das
fimull
push
dec
lret
sub
jge
mov
mov
xlat
outsb
movsb
aad
pop
dec
int
es
xorb
push
jne
jle
in
jecxz
mov
jl
lret
cmp
frstor
mov
adc
mov
dec
enter
test
mov
inc
and
add
daa
xchg
js
popa
push
out
adc
das
inc
push
sub
int
orb
push
xor
lahf
push
cmp
xor
jle
jae
pop
adc
cmp
cltd
aad
sbb
sub
jb
js
stos
xorb
and
cld
jo
add
insb
sub
or
arpl
shr
pop
mov
or
jns
mov
ret
or
sub
pop
and
inc
ret
subb
sbb
decl
sti
ret
jle
xor
adc
xchg
add
lods
lods
mov
push
fldenv
pop
adc
jg
push
sbb
je
outsl
push
jge
mov
cmpsl
ficomps
test
xchg
lock
and
mov
sbb
movsb
mov
mov
mov
fisttpll
enter
jp
jl
popl
popf
pop
nop
ljmp
mov
push
bound
ja
push
or
mov
and
les
out
mov
add
and
mov
mov
xor
push
mov
push
je
mov
pslld
push
int
sub
data16
je
sub
sub
cld
imul
sbb
loop
sub
xor
cmpsb
dec
scas
xor
mov
repnz
pop
pushw
fcomps
orl
sbb
repz
mov
mov
pop
cmpsl
mov
mov
mov
xchg
loope
cwtl
repz
sarb
pop
aas
xchg
and
ret
cmp
or
orl
push
vphadddq
int
ret
jp
jle
out
pop
sahf
in
sbb
adc
js
scas
jmp
or
xor
icebp
ss
lret
push
push
test
pop
adc
lret
mov
aas
mov
mov
mov
mov
jmp
sahf
xchg
repnz
stc
fs
addr16
lahf
stos
cmpsl
push
jl
insl
inc
sbb
adc
clc
idiv
dec
fs
sub
mov
or
jnp
pop
cs
lods
inc
mov
rclb
mov
and
jbe
cmp
push
push
rcr
xor
inc
insb
sbbb
pushf
xlat
jo
pop
cmp
sarb
jecxz
lcall
nop
ret
add
cmp
fs
in
hlt
in
iret
and
aaa
lea
clc
cs
sub
add
sub
dec
mov
pop
cmp
pop
jl
adc
jmp
xor
cwtl
test
mov
xor
imul
add
and
xor
cmp
aaa
jae
add
sahf
setg
add
ss
imul
jno
pop
mov
sbb
add
hlt
push
mov
pop
and
inc
lcall
and
sti
enter
jle
loop
jno
push
imul
cli
adc
add
sub
mov
mov
xor
xchg
icebp
cmpsb
sbb
lcall
sub
jne
push
data16
shll
in
pop
out
lds
xorb
pop
subb
inc
ret
adc
dec
in
mov
jno
lea
or
inc
dec
cld
add
mov
pop
scas
push
sbb
js
mov
imul
cmp
test
idivb
xor
add
or
daa
js
sbb
xor
js
dec
andl
adc
imul
inc
sbb
in
adc
stos
movsb
and
xor
pop
lods
imul
pop
cmpsl
subb
sbb
gs
int3
add
jns
mov
out
add
dec
cmp
shrb
add
push
mulb
aad
bound
les
mov
repz
adcl
rcl
cltd
jo
out
fisubs
ja
pop
xchg
add
mov
cmp
jno
in
pop
xchg
add
out
lds
filds
imul
xorl
push
push
bound
shlb
andl
cli
inc
flds
fildl
inc
rol
sbb
mov
push
mov
mov
dec
and
push
push
mov
sub
push
xor
rcrl
cmc
sub
inc
ds
imul
inc
test
pop
add
outsb
jge
mov
mov
xchg
add
xor
push
jo
mov
mov
int
sbb
pop
stc
rol
int3
add
mov
push
fidivs
lcall
mov
mov
out
cmp
add
adc
subl
shrb
popa
daa
add
and
xor
or
orl
sbb
adc
js
rcrl
push
xchg
dec
icebp
andb
fisubs
jg
leave
mov
fs
mov
mov
fists
popf
dec
cli
add
sbb
ret
dec
popf
fldl
sbb
test
testl
stos
cwtl
ret
ljmp
pop
cmpsb
rcrb
inc
pusha
call
in
out
int
shl
jbe
push
push
cmp
enter
jge
jecxz
hlt
bound
mov
and
mov
idivl
xor
push
lret
mov
jb
jnp
jp
jmp
jmp
pop
mov
imul
test
stc
adc
jne
push
dec
ja
pop
sbb
sbb
jg
in
loopne
std
add
push
jno
out
pop
jg
hlt
outsb
loope
fcmovnbe
scas
xor
add
nop
push
into
shl
shll
stc
in
jbe
fmulp
cs
outsl
cmc
sbb
jp
shlb
xchg
call
xchg
popa
arpl
add
pusha
xor
push
add
sbb
add
add
sbb
imul
xorl
outsl
inc
pushf
or
rcrb
sbb
sub
rol
jp
test
sbb
jns
shrd
xor
fstps
cltd
xor
iret
mov
sub
sub
je
mov
xor
xchg
cmp
xchg
lret
dec
das
cwtl
cwtd
out
push
aas
cmpsl
iret
jmp
xor
and
aam
cmp
jnp
lods
icebp
pusha
imul
inc
xchg
push
fwait
pop
aaa
shll
mov
leave
gs
out
jbe
repz
addr16
ds
in
mov
mov
out
stos
pop
lods
hlt
iret
dec
test
mov
dec
test
cmp
js
js
dec
adc
hlt
flds
lods
sbbb
ret
xchg
rcrb
pop
or
sbb
inc
imul
add
add
add
or
sbb
imul
shufps
xchg
xor
loopne
lock
lcall
addr16
xchg
xchg
sti
pop
daa
fs
popf
mov
leave
in
fdivrs
sub
sub
aad
xchg
add
push
mov
inc
adcl
xchg
adc
sub
mov
repnz
or
push
lods
inc
add
mov
xor
sub
xchg
xchg
pop
mov
std
and
cmp
sbb
and
xor
push
daa
testl
push
xchg
and
add
xlat
sbb
inc
xchg
fdivrs
mov
test
add
mov
ds
sarb
lods
xchg
call
jo
pusha
sbb
inc
sbb
pop
adc
into
test
inc
loope
lret
and
ljmp
ret
mov
sarb
in
std
sub
ja
test
dec
adc
sub
sub
fwait
pop
pop
push
xor
dec
pusha
pop
lahf
pop
bound
iret
add
orl
shrb
push
inc
shlb
xor
in
add
lds
sbb
cmp
mov
mov
mov
xor
or
popf
fldt
or
mov
adc
mulb
xchg
btc
cmpsl
pop
icebp
shr
cld
shr
jb
out
xchg
pusha
mulb
mov
loopne
xchg
outsl
js
push
pmuludq
mov
pop
ja
and
mov
mov
push
cmp
in
pop
test
mov
mov
dec
dec
filds
mov
lret
jl
in
fwait
push
dec
inc
rol
test
inc
mov
pop
jnp
test
or
cmpsl
in
xchg
ss
cld
pop
lods
xorb
fdivrp
roll
add
fisubs
sub
xor
imul
add
in
call
jnp
aaa
mov
jle
pop
fcomps
adc
pusha
push
subl
xchg
loop
aam
cld
pop
pop
bound
mov
xor
inc
xor
inc
xor
ljmp
add
xchg
fs
loop
lcall
leave
shlb
xchg
cmp
xchg
adc
adc
xchg
cmp
mov
mov
inc
repz
or
pop
xchg
test
lret
pop
sub
imul
pop
repnz
aad
add
push
inc
or
xor
push
add
ficoms
or
xorl
in
cmpsl
pusha
push
insl
imull
loopne
cs
xor
add
xchg
add
push
mov
loopne
subb
add
sbb
das
iret
ret
roll
inc
or
push
add
aad
scas
jle
inc
lret
popa
loopne
mov
insb
aad
adc
adc
jb
pcmpeqw
mov
fdivrs
arpl
mov
cld
add
jbe
xchg
shl
fildl
icebp
mov
ljmp
fdivrs
adc
and
push
movsb
pop
jmp
scas
pop
sub
sub
nop
jnp
jg
pop
or
out
push
stos
or
shl
lock
loopne
xor
adcl
dec
ficompl
test
push
adc
aad
lret
sbb
pop
jb
imul
aaa
mov
inc
push
cmpsl
mov
xchg
pushf
sub
cmp
popf
push
iret
sub
js
movsb
push
aad
outsl
arpl
aam
mull
mov
jb
out
xchg
push
mov
jnp
jmp
dec
loop
inc
lock
lods
aam
into
adc
or
cmpsl
movsw
sub
cld
mov
adcb
sub
xor
out
push
inc
cmc
dec
out
movsb
js
adc
pop
pushf
push
sti
push
lods
fiadds
jo
sbbb
add
and
leave
push
pop
mov
into
xchg
push
rorb
aas
push
pop
pop
xchg
ret
pusha
push
vcvtss2sd
sbb
lret
adc
add
sub
or
xor
push
adcl
add
or
sbb
sub
roll
mov
in
mov
repz
les
adc
jmp
insl
inc
jb
cmp
popf
enter
adc
test
add
ret
xor
inc
loope
mov
or
dec
clc
es
adc
or
add
test
add
test
and
cld
adc
ret
ss
xor
push
sahf
pop
daa
push
adc
inc
jnp
pushf
dec
dec
les
push
adc
add
inc
ja
cmp
jp
lods
or
add
add
inc
insb
add
or
ret
jo
cmp
popf
sbb
dec
shlb
or
add
dec
lret
cmpb
jns
lock
xchg
pop
stc
push
lock
clc
daa
outsb
push
cld
es
js
cld
daa
push
shrl
adc
adc
insb
daa
jb
test
mov
fldl
add
cmp
daa
js
xchg
or
andb
lcall
cmp
lcall
or
insb
push
cmp
mov
or
xlat
mov
jo
or
cmp
xor
pop
insb
rorb
pop
dec
and
push
adc
nop
or
test
xorb
adc
daa
add
mov
add
popf
call
fsubs
or
mov
lcall
loopne
jo
cmp
lcall
or
mov
stos
in
add
loopne
imul
xorb
jo
push
or
add
add
and
lock
mov
daa
es
cld
daa
bound
xchg
or
add
test
inc
jb
cmp
call
dec
mov
orb
insl
adc
cmp
daa
add
sahf
sub
adc
ret
dec
ret
js
dec
ret
xor
cmp
pushf
lock
movsb
stos
pop
dec
nop
dec
je
mov
aam
jmp
cltd
test
inc
jne
cmp
test
les
pop
adc
and
rcrb
fsubs
aam
jp
aaa
pop
xor
adc
orl
and
test
xorb
rcrb
pop
es
daa
adc
dec
mov
sub
or
or
test
aam
cmp
add
inc
je
pop
mov
aas
jb
stos
push
out
inc
jne
pop
cmp
adcb
xchg
mov
jo
dec
pop
adc
lret
lds
dec
mov
fwait
sbbb
jo
dec
push
cld
lods
daa
add
repnz
xor
push
add
rorb
outsl
add
dec
rol
test
pop
pop
add
add
add
add
add
mov
mov
or
stc
loopne
out
pop
sbb
add
orl
inc
cltd
push
pop
pop
pop
adc
and
push
mov
stos
imul
dec
pop
xchg
and
push
in
call
movsb
dec
mov
sbb
inc
cmp
dec
aaa
lcall
addr16
aaa
test
sub
dec
int
sbb
pop
fwait
into
out
mov
jb
sbb
xor
jae
xor
je
cltd
test
stc
fdivrs
sub
sub
inc
stc
lret
jp
pop
xchg
in
cmp
orl
out
sbb
jge
shrb
lret
cmp
fsubrl
mov
outsb
add
cmpl
sbb
andb
rol
filds
mov
sbb
roll
xor
adc
pop
fiadds
dec
pop
mov
cmp
into
add
pop
jmp
sbb
sbb
lods
add
sub
sarb
xor
jo
test
mov
out
or
add
add
sub
lea
xor
cmpb
add
enter
test
shl
leave
add
inc
cmc
loopne
pusha
jae
jl
xor
pop
adc
pushf
bsf
testl
repnz
stos
add
or
cmp
sarb
rcrb
xor
jo
ljmp
pop
cmpsb
cmc
add
sarb
push
sbb
pop
testb
xor
inc
in
add
loopne
add
add
cmp
xor
jle
cmp
pusha
gs
and
sbbb
aas
push
call
and
push
fmull
into
pop
sahf
add
add
add
add
sbb
inc
repz
out
sar
jns
jns
jle
aas
sbb
sbb
sbb
iret
pop
repz
call
mov
and
xchg
pop
pushw
int3
pop
scas
pop
jmp
std
pusha
jg
pop
cmpsb
pop
jmp
repz
xlat
add
xor
sarb
pop
ret
pop
lock
jle
pop
mov
movl
jg
pop
roll
out
sar
jl
jl
jl
ds
insb
movzbl
rolb
in
cmp
clc
cmp
jge
ds
in
stc
inc
stc
mov
insb
pop
roll
inc
sti
xor
pop
fildl
test
mov
add
pusha
jle
pop
mov
loopne
add
jge
ds
mov
in
add
cmp
jle
pop
cmpsl
pop
repz
sarb
sarb
pop
jmp
add
pop
movb
add
add
lock
pop
lods
pop
jmp
clc
add
add
pop
mov
pop
add
or
pusha
inc
scas
add
js
xor
rorb
push
xor
push
push
adc
rcrb
xor
add
and
shlb
jp
ds
sbb
jp
lret
dec
sbb
push
outsl
addl
mov
lock
push
je
adc
lahf
lahf
add
paddsb
pop
in
mov
and
mov
xor
jecxz
imul
cmpsb
scas
stc
and
leave
pop
fwait
or
jnp
and
cmp
push
mov
jmp
jne
pop
xchg
sbb
adc
add
sub
adc
int3
xor
adc
inc
add
xchg
add
mov
movsb
sub
add
push
adc
add
and
iret
mov
idivb
imul
mov
sti
popa
fst
jg
mov
ret
or
pop
fnstsw
add
sahf
mov
sub
mov
fnstsw
xlat
mov
xlat
in
cli
les
jbe
scas
div
and
mov
xor
loope
cli
aas
jnp
sbb
push
push
jo
or
dec
dec
or
int3
leave
lea
scas
repz
push
push
push
push
adc
mov
pop
lret
dec
mov
mov
xor
adc
and
cld
shll
into
push
push
inc
push
orb
loopne
outsb
movq
cld
inc
idiv
cmp
or
out
sar
rcll
out
insl
xchg
and
insl
mov
sti
jo
mov
aas
enter
fcomip
nop
jnp
and
and
jmp
dec
sti
mov
and
aas
lods
push
adc
jne
out
pop
sbb
fistpl
and
mov
negl
and
ljmp
add
pop
xchg
push
icebp
mov
in
aaa
sbb
mov
cs
ret
xor
mov
stos
stos
ja
enter
scas
pushf
jne
adc
mov
push
dec
jae
in
push
fcmovu
test
scas
divb
sub
pop
lret
pop
lret
mov
jb,pn
adc
out
or
cmp
push
stc
lods
jns
push
imull
and
xor
jnp
add
fmul
sti
adc
daa
add
adc
adc
lds
movsl
es
adc
xchg
fistl
repz
dec
aam
movsb
push
les
jge
mov
das
sub
xor
iret
cmp
pop
adc
pop
test
xchg
imul
ljmp
out
stos
movsl
xchg
data16
or
xchg
mov
sbb
pop
dec
sahf
leave
cltd
in
cltd
cmp
sbb
mov
cmc
sbb
pop
loopne
outsl
ljmp
adc
mov
pop
adc
cmpsl
push
cmpl
add
push
mov
sub
jne
add
outsl
pop
mov
jno
lods
push
stos
pop
rcll
out
adc
in
adc
jg
xchg
xlat
outsb
cltd
scas
jl
mov
test
test
pop
and
loop
dec
iret
roll
addr16
add
push
jnp
popa
icebp
sub
push
ret
and
fisubrl
pop
cltd
push
xlat
mov
sarl
cmpsb
push
std
push
dec
loop
xchg
jb
aam
test
movsb
dec
push
shl
cmpsl
repnz
mov
test
mov
sbb
mov
out
lret
lret
fidivrs
inc
ret
sub
insl
test
mov
cmp
pop
cltd
in
mov
mov
ror
xchg
je
arpl
xor
cmpsb
or
mov
nop
jg
add
jg
scas
sub
mov
adc
out
sbb
add
jns
test
mov
rcrl
out
pop
pop
inc
inc
fdiv
in
insb
xor
jno
mov
xor
push
pop
pop
imul
mov
dec
cwtl
dec
inc
pop
or
vmaxss
add
aaa
pop
sbb
jae
xor
push
std
imul
ja
loope
das
je
mov
nop
jge
mov
pop
xor
dec
inc
sub
xor
push
jbe
sub
mov
fisubl
scas
in
add
dec
loopne
adc
icebp
jns
push
or
fsubr
dec
xchg
jl
mov
mov
stos
mov
loope
inc
push
push
jp
inc
out
mov
mov
mov
lods
mov
inc
out
jno
int3
das
cs
loope
xor
jne
std
into
dec
adc
outsl
dec
xchg
lea
enter
jge
cmpsl
cmp
jp
xor
cmc
sub
xor
ficoml
and
ret
cmp
das
xchg
cli
fstpl
pop
mov
adc
insb
sub
adc
adc
sbb
mov
fdivl
xlat
test
dec
cltd
cld
inc
mov
pop
add
or
cmc
xchg
mov
mov
mov
outsl
xor
test
dec
jge
pop
xchg
adc
insl
lds
pushl
pop
jecxz
mov
mov
in
fimull
dec
push
lods
xor
mov
lcall
scas
sub
jne
and
mov
leave
fnstcw
xchg
push
fmuls
bound
xlat
push
bound
cmc
in
jo
cmp
fmull
cli
pop
les
cmp
jnp
jecxz
dec
push
cmp
mov
jge
out
xchg
inc
xchg
dec
incb
adc
jnp
and
fdivl
sti
xchg
jle
in
mov
inc
pop
repnz
int
fchs
inc
test
rclb
imul
lcall
dec
pop
inc
jge
xchg
pop
mov
stos
out
mov
xchg
insb
ljmp
jne
mov
shrb
xor
jle
cmpsb
xor
stos
shl
enter
fsubrp
test
cmpsb
mov
loopne
inc
pop
cmc
xchg
movsl
lret
cmp
lcall
aaa
cld
pop
in
cli
and
lret
dec
mov
xchg
mov
push
add
or
sbb
je
or
dec
sti
sbb
xlat
imul
adc
popa
cmpb
lret
jb
movsl
pop
divb
outsb
inc
mov
pop
and
movsl
jo
decl
sub
and
xchg
stos
scas
test
ficompl
clc
test
pushf
mov
popf
sub
and
xlat
pop
in
sarl
cwtl
adcl
ror
outsb
data16
inc
cmp
jp
mov
push
inc
push
fwait
jne
outsl
lret
push
pop
mov
push
mov
adc
sahf
out
insl
cmpsb
xor
jb
jl
pop
adcb
xchg
into
aam
rcr
xor
lret
dec
xchg
rcrl
repnz
fists
dec
mov
pop
sbbb
mov
cmp
iret
subb
in
imul
stos
xchg
divb
sub
and
sub
cmp
repz
jbe
hlt
movsl
rcll
mov
lods
or
insl
inc
scas
popa
or
jle
popf
xchg
subb
dec
mov
jns
aad
jo
out
leave
adc
push
mov
ffree
stos
mov
movsb
repz
js
cmp
int
sub
addr16
mov
addr16
or
lds
testb
lds
testb
cmp
cmp
fstps
mov
in
std
cmp
hlt
sahf
scas
sar
xlat
xlat
cmp
cmc
jbe
jl
stos
cwtl
xchg
mov
nop
aaa
adc
movsb
fcmove
cwtl
enter
clc
imul
lahf
cmp
inc
mov
xchg
dec
fldenv
dec
in
test
ss
jmp
addr16
negb
mov
pop
and
mov
push
mov
bound
movsb
xchg
pop
roll
cltd
cmovnp
mov
push
lfs
mov
dec
mov
insl
push
jecxz
pop
sub
aam
jnp
scas
push
or
cmp
inc
call
and
add
mov
mov
mov
in
and
cmpsb
int3
call
inc
ret
or
fs
fnstsw
xor
pop
jns
pop
in
xor
ja
or
sti
bound
adc
imul
mov
pop
jbe
pop
sub
pusha
fidivs
fwait
cs
into
int3
sbb
cmp
mov
enter
fiadds
sub
outsb
inc
imul
gs
pop
imul
inc
iret
lret
shl
push
sbb
pop
dec
cltd
adc
and
jo
stos
jne
out
imul
dec
ljmp
mov
mov
iret
xchg
push
push
pop
adc
xchg
out
std
inc
rol
cltd
loop
adc
sahf
mov
lahf
adc
mov
popa
push
inc
add
push
aad
pusha
sub
pop
jb
jge
xchg
xor
iret
jecxz
mov
outsb
lret
cwtl
jecxz
or
in
aad
fimull
adc
adc
sbb
cli
add
icebp
subb
mov
mov
std
test
dec
out
push
jg
mov
sti
loope
lret
inc
cltd
shlb
lahf
ror
add
inc
fists
sub
repz
sbbl
pop
push
stos
pusha
movsb
cmpsl
cmc
pop
and
or
push
scas
push
outsl
popa
daa
push
data16
or
or
dec
sahf
cmpsl
inc
xlat
xor
bnd
pop
out
es
clc
cmp
mov
cmp
push
popf
add
je
ficomps
lcall
jns
push
xchg
mov
mov
jnp
push
dec
aam
jnp
hlt
jae
clc
sbb
xchg
shlb
cld
jl
sahf
out
rcrb
arpl
cmp
cmpsb
push
jg,pn
inc
repz
ret
repz
mov
rorb
ds
fldcw
inc
jp
fiadds
addr16
push
lcall
xorb
fprem1
cli
jp
or
dec
clc
mov
sbb
push
rcl
scas
mov
jle
cmpsl
and
fisubrl
mov
dec
in
scas
push
xor
das
imul
test
stos
sub
mov
jno
mov
pop
cmp
popf
cs
ja
jl
je
test
sub
mov
sarb
dec
imull
mov
jle
mov
into
mov
pop
pop
pop
in
push
jl
xor
dec
lret
pop
pop
inc
jmp
jo
pop
mov
sbb
jno
imul
movsl
xlat
aam
mov
mov
xchg
jae
ret
jnp
pop
lds
movb
rol
int3
mov
inc
jl
mov
cmp
xchg
mov
iret
sub
aaa
leave
lret
cmpl
enter
arpl
insl
call
cmp
outsb
mov
sbb
push
in
insb
repz
sub
scas
and
pushf
fldcw
dec
int3
mov
icebp
cld
cld
int
jg
or
into
les
scas
mov
xor
pusha
jle
sub
jne
shr
cmp
push
xchg
sbb
nop
mov
cmp
test
pop
jecxz
mov
imull
jle
gs
stos
shlb
insb
popa
sub
aad
jmp
iret
js
push
aam
xlat
pop
fbstp
shlb
mov
cmpsb
ror
jmp
int3
xchg
mov
je
lret
mov
sbb
mov
dec
sbb
das
dec
ljmp
popa
stc
push
nop
hlt
js
xchg
jle
or
push
iret
das
adc
pop
lret
cmpsb
ror
inc
fadd
rcrl
ja
imulb
jmp
shr
dec
std
stos
sarb
pop
out
xchg
xchg
fwait
pop
sub
aaa
dec
imul
pop
mov
and
lods
mov
jmp
jns
out
dec
loopne
divl
sarl
jmp
xchg
jb
jge
push
inc
xchg
arpl
push
daa
mov
aam
sub
push
mov
mov
fisttpll
sbb
pushf
sub
fwait
and
test
push
gs
mov
popf
xchg
stos
inc
pushf
notb
jl
das
fistpll
sbb
repz
jp
xchg
mov
cwtl
iret
into
cltd
push
and
arpl
test
xor
ret
in
das
je
dec
pop
lods
dec
divb
int3
jo
xchg
inc
call
cs
fnclex
test
nop
out
ljmp
jbe
adcl
mov
cwtl
out
insb
cs
inc
ja
cmp
xchg
jg
out
xor
fisubrs
scas
xchg
xchg
fstl
or
or
pop
scas
cli
movsb
jne
jnp
and
mov
xchg
mov
mull
imul
out
cwtl
jne
int
sbb
sbb
mov
xlat
hlt
xor
outsl
xor
je
xchg
pop
inc
cmpsb
leave
jg
jns
adc
xchg
sti
mov
xlat
iret
add
pop
cmpsb
adc
add
xchg
sbb
loop
mov
cwtl
out
rcrl
pop
je
dec
cmpl
push
dec
loopne
jae
or
dec
mov
mov
nop
xor
sbb
sub
out
jge
jecxz
pusha
jge
pushf
stos
cwtl
mov
cli
test
dec
mov
push
ficompl
sbb
jle
sub
stos
mov
pop
mov
lds
inc
mov
jmp
imulb
push
xchg
leave
sti
xor
leave
lds
sahf
jmp
or
dec
outsb
ret
mov
outsl
iret
cmp
cmc
iret
fs
je
popa
pop
std
add
stos
jae
cld
mov
mov
inc
cmp
movsl
scas
mov
push
push
or
int
xlat
mov
lock
pop
cli
pushf
test
aaa
mov
mov
mov
lret
push
bound
test
ljmp
aam
movsb
sub
data16
divl
ds
sti
mov
icebp
loop
mov
mov
test
data16
fbstp
sub
xor
pushf
loop
aad
call
aas
scas
mov
mov
jne
popf
jmp
inc
out
adc
push
mov
pop
jecxz
insl
xchg
xchg
and
lods
ljmp
out
inc
mov
dec
mov
xor
insl
xor
sarb
ja
mov
mov
jns
push
mov
jns
mov
cld
mov
icebp
pop
mov
cltd
pushf
stos
lahf
xchg
orb
outsb
divl
mov
mov
pop
or
lcall
jns
hlt
dec
mov
stc
sbb
and
test
mov
outsl
add
test
or
fwait
iret
or
pop
cmp
loop
mov
jb
shlb
push
cmp
in
cmc
lret
insl
fwait
test
push
loope
inc
and
stos
dec
inc
adc
push
mov
pop
std
mov
je
mov
addb
int3
sub
in
gs
enter
outsl
and
dec
stos
cmpsl
jae
loope
push
pusha
jns
stos
xchg
dec
mov
in
lea
lret
xchg
mov
jl
pop
cmp
roll
cli
lahf
mov
ja
pop
cmp
stos
jb
mov
fwait
outsb
push
mov
scas
jmp
out
cmc
mov
mov
lret
cmp
dec
jmp
ljmp
sahf
outsl
cmpsl
pop
scas
sbb
xor
fstl
cmp
stos
js
push
loope
sti
jge
push
pop
shlb
outsb
movsl
xchg
sbb
xor
stos
scas
cli
ja
popf
in
dec
sbb
jecxz
mov
loope
nop
sub
ret
jecxz
std
out
jbe
dec
lret
ds
lcall
jbe
insb
push
mov
ss
adc
cli
push
int
fiadds
push
sti
jmp
mov
mov
out
in
and
ja
jbe
adc
outsl
mov
dec
cmpsb
or
lock
popf
and
les
ss
or
rol
loopne
aam
divb
jne
cmp
adc
adc
lds
or
out
test
mov
daa
push
cmp
shll
xchg
fisttps
enter
cmp
jnp
rcl
cmpsb
movsb
outsb
imul
je
rcrl
mov
lods
sbb
sub
pop
aaa
mov
sbbl
inc
test
or
mov
sti
mov
jp
xchg
lods
push
xchg
jge
push
ret
mov
and
mov
leave
xor
imul
insb
pop
imul
sub
lods
pop
sub
loop
int3
push
sub
mov
fstpl
jne
mov
pop
push
jmp
movsb
fnsave
stos
xor
jnp
pop
int
in
dec
jecxz
jg
lret
or
push
ja
push
jne
or
dec
pop
inc
sbb
xchg
int
push
lret
sub
rcll
data16
mov
das
fwait
jns
adc
into
or
cld
inc
jle
ss
pop
popf
rclb
dec
fisttpll
push
lods
push
dec
dec
mov
int3
test
sbb
pop
imul
and
sbb
je
stos
sub
outsb
jbe
lret
insl
imul
aas
jbe
and
outsl
adc
fsubrs
xor
jns
xchg
sub
hlt
sbb
xchg
jp
sbb
dec
inc
or
jb
xor
adc
pop
out
pop
dec
repz
ffreep
mov
test
or
ficoms
leave
pop
lcall
mov
aam
lock
repz
adc
xor
pop
dec
jne
or
adc
push
and
pop
mov
test
pop
lds
push
push
in
mov
aam
pop
pop
jnp
xor
jnp
sbb
or
in
cmp
and
ds
test
inc
out
push
push
rcll
fs
repz
aad
push
cmc
shr
xchg
cmpsl
or
out
adc
fisubl
fisubrl
or
stos
add
sarl
xchg
outsb
popa
push
pop
mov
das
adc
shrl
pop
xchg
shlb
sub
mov
mov
popf
xchg
jg
xchg
mov
push
cmp
mov
sbb
xor
mov
xlat
inc
sbb
jge
cltd
fistpll
popa
vshufpd
xor
cs
or
popa
jns
iret
xchg
xchg
das
jge
lret
icebp
lcall
jno
adc
imulb
or
stc
out
pop
mov
xchg
ss
testb
insb
mov
mov
gs
ds
int3
pusha
nop
xchg
dec
rcr
imul
mov
rol
mov
loop
mov
xor
xchg
adc
lds
xor
movsb
cmp
or
adc
mov
sahf
test
push
stc
lea
lock
int
addr16
jnp
add
lea
sarl
ljmp
cmpsl
jle
mov
xor
mulb
mov
das
push
lods
jg
fcomps
push
imul
arpl
mov
cli
cld
lret
lds
test
mov
insb
mov
mov
pop
jo
out
pop
pop
mov
lcall
xor
call
loop
lret
rcrl
test
in
data16
mov
stos
or
mov
push
sbb
repnz
cli
or
mov
inc
push
xchg
icebp
cmp
push
push
ret
shlb
fildll
ds
daa
iret
mov
push
mov
dec
insb
jle
out
and
nop
shll
or
scas
and
mov
mov
xlat
iret
int3
mov
ljmp
ror
shll
adc
and
iret
in
xlat
lods
or
or
aad
sub
pop
mov
stc
cmp
test
pop
push
mov
inc
jmp
sbb
fistpl
pop
jmp
push
shll
or
arpl
lods
test
das
subl
pop
inc
lods
popf
jge
ror
enter
fdivrl
mov
mov
dec
push
and
lret
lods
mov
cmp
push
lods
cli
adc
jns
popa
ja
fdivr
jae
xor
fnstsw
dec
push
gs
shr
xchg
out
push
aad
dec
pop
dec
lahf
jecxz
sub
fwait
lods
jg
into
in
push
dec
cmpsl
push
dec
push
jle
loope
ljmp
pop
jecxz
xor
negb
in
mov
jp
in
add
insb
sbb
loope
std
cmp
mov
mov
or
fs
shl
inc
pop
fidivrl
mov
imul
out
adc
jb
dec
mov
mov
dec
mov
test
mov
rcl
es
mov
insb
ds
imul
scas
mov
lods
jg
sti
dec
stos
pop
add
add
mov
cltd
mov
jmp
mov
gs
outsb
add
addb
test
cmp
mulb
pop
and
fnsave
scas
enter
movsb
and
xchg
aaa
test
mov
icebp
fdivl
popf
jl
xor
cld
xchg
not
and
ud0
stos
xchg
call
xchg
je
sbb
cs
std
mov
cmp
das
dec
cmc
cli
fnstenv
xorl
mov
mov
fwait
outsl
push
pop
or
ret
inc
xchg
popf
das
movsl
xlat
mov
lahf
mov
in
mov
sub
loopne
divb
or
cli
insl
push
cld
pop
xchg
mov
jmp
cmp
pop
and
std
outsb
xor
sub
push
hlt
sub
fidivrl
xchg
sarl
push
dec
pusha
inc
xor
add
xchg
push
adc
test
or
mov
jl
arpl
aam
cmp
mov
in
jge
outsl
addr16
sub
imul
bound
jp
pop
xchg
outsl
dec
xchg
fisubrl
dec
sub
push
inc
xchg
loope
pushl
icebp
xor
ror
call
mov
and
pushf
ja
shr
fsts
cmc
sbb
mov
xlat
fidivl
push
stc
fwait
cmp
into
fstl
inc
int
mov
scas
mov
dec
cmpb
sahf
pop
jne
adcb
loop
inc
and
lods
fiaddl
push
imul
in
scas
mov
sub
pop
aas
addb
cld
sub
xchg
inc
fnstsw
sub
cmc
or
sub
fisttpll
inc
lds
int3
iret
stos
loop
es
leave
cmp
jg
scas
pop
and
jmp
mov
out
fisubs
test
sub
add
in
idiv
scas
in
js
mov
lock
mov
arpl
les
sbb
cmp
add
popa
in
pop
mov
xor
cmpsb
test
cs
sub
and
xchg
and
call
xor
loope
mov
shlb
inc
imul
divb
loopne
out
sbb
fs
cmpsb
out
adc
mov
test
pop
lret
pop
pop
leave
fnstcw
les
movsl
mov
push
sub
pop
jae
or
ficoml
and
xchg
in
repz
scas
mull
or
dec
mov
into
pop
pop
cmp
sub
cmp
cltd
pushf
xor
lea
xchg
ljmp
mov
int
mov
test
push
call
push
mov
add
or
pop
push
cld
stc
xor
jnp
hlt
insb
out
sahf
clc
icebp
lods
aaa
dec
je
arpl
xor
or
test
icebp
jle
jmp
hlt
and
add
add
mov
mov
mov
push
xor
test
push
xchg
jecxz
adc
xor
dec
je
push
lock
dec
test
xlat
inc
mov
jmp
sbb
inc
jne
jbe
shll
mov
inc
inc
cmp
hlt
cmp
push
pop
insl
mov
nop
xchg
push
mov
sub
ljmp
mov
jno
inc
shl
out
inc
xlat
mov
mov
cld
int3
inc
popf
mov
std
icebp
cmp
jns
int3
out
idivl
pop
insb
inc
out
xchg
push
cltd
andl
inc
jp
pop
int
jle
inc
popl
cmp
lret
and
clc
scas
sbb
mov
pop
pop
addr16
fsubr
dec
nop
scas
xor
sahf
cwtl
in
ds
xchg
imul
push
les
popf
mov
fucom
idivl
jecxz
lds
popf
ja
cmp
sub
ja
std
adcl
push
rorl
loop
sti
cmpsb
xchg
lods
jnp
imul
pop
adc
inc
rep
sti
add
ds
in
lock
dec
cmp
test
sub
ljmp
push
lods
jg
mov
cmp
bound
push
int3
in
xor
xor
popa
call
int
dec
inc
sub
test
lret
repnz
jecxz
push
jmp
mov
mov
ss
jmp
xlat
loope
loop
sub
enter
js
xlat
sub
sarl
shrl
cli
xor
in
data16
and
jle
mov
daa
ss
ss
lds
stos
cmc
and
sub
fstpl
pop
fcmovbe
mov
sbb
sbb
sub
adc
in
xlat
fcmovbe
sub
pop
and
pusha
mov
sub
loope
jne
lock
ljmp
cmp
ja
jnp
mov
cwtl
loopne
dec
mov
push
pop
movsl
shll
int3
xchg
fmul
sti
inc
pop
in
cmp
out
fisubrl
dec
sarb
cmpsl
or
or
jp
mov
hlt
dec
sub
jl
jge
add
scas
adc
cmp
lea
jp
or
mov
xchg
dec
cmp
mov
dec
push
xchg
sbb
cmp
notb
adc
repz
aaa
push
ds
dec
sbb
pop
lret
dec
mov
pop
gs
xor
lret
xchg
out
imul
jnp
movsl
inc
sbb
int
sahf
mov
cmp
pop
xchg
sub
xor
in
fcmovnb
cmp
shl
mov
bound
adc
aam
xor
jmp
jne
mov
stos
push
xlat
mov
mov
sub
mov
xor
lods
aas
repz
repnz
int
jle
cltd
jecxz
out
daa
cmpsl
jge
mov
stc
cmpsb
int3
repz
or
cli
mov
pop
dec
bound
addr16
xchg
out
push
fdivrs
mov
mov
dec
addr16
mov
xchg
imul
add
jg
scas
std
or
xchg
push
imull
test
mov
dec
out
movl
ja
push
pop
loop
loop
mov
aaa
movsl
repnz
arpl
xor
cmp
icebp
cmp
jecxz
insb
test
lods
adc
ds
jbe
lock
or
aad
sbb
push
in
jl
rorl
shrl
rcrb
xchg
mov
push
mov
into
out
lock
xlat
xchg
imul
fdiv
call
sbb
loop
ja
cwtl
loopne
lea
hlt
mov
fimull
repnz
sahf
pop
repnz
mov
mov
and
mov
fs
jl
mov
jge
pop
hlt
xchg
icebp
lods
or
jl
lea
int3
iret
mov
xchg
stos
adc
scas
jge
dec
pop
lds
stos
sub
dec
jne
out
ljmp
hlt
pop
imulb
iret
push
in
cmp
shlb
mov
jmp
xchg
mov
or
jae
icebp
fnstsw
push
inc
pushf
and
sub
mov
out
cs
jns
out
xchg
fidivrs
inc
pop
mov
cmc
jne
jle
dec
test
jne
cmpsl
jae
icebp
ljmp
push
dec
std
bts
pop
lret
push
popa
dec
stos
jg
push
cs
fdivrs
sbb
sbb
jne
cld
dec
bound
decl
mov
push
xorl
jg
dec
mov
fisubrs
inc
cld
adc
ja
push
adc
movsb
and
icebp
in
fisttps
xchg
mov
sbb
dec
int3
outsl
push
lea
pushf
mov
push
fs
sahf
cmp
and
push
fisubrl
cmpsb
loop
jmp
mov
jl
out
movsb
and
pop
fidivs
inc
icebp
es
int3
cmpsb
movsl
or
xchg
sub
shlb
aas
adc
sahf
jbe
aam
aad
push
inc
out
outsl
jae
mov
push
cmp
pop
scas
call
lock
push
insl
outsb
scas
dec
fidivrs
pop
mov
clc
mov
ds
mov
xchg
and
outsb
xor
adc
jecxz
lret
pop
dec
movsl
loope
repz
insb
inc
jns
pop
ja
mov
pop
pop
aas
dec
es
fiaddl
sub
add
push
roll
jne
dec
pop
call
xchg
in
mov
test
mov
dec
leave
jl
xor
mov
mov
adc
int3
addr16
push
fwait
out
pop
sbb
andb
xorl
add
sbb
dec
outsl
and
mov
pop
rolb
fwait
iret
and
pop
pop
movb
mov
xor
fnstenv
push
into
push
fstpl
sub
xor
add
gs
imul
iret
cmp
sub
lock
aam
inc
mov
push
int3
dec
jg
push
popl
arpl
ret
das
stos
test
mov
lcall
mov
out
cmpsl
frstor
test
xchg
fldln2
cmpsl
cmpsb
es
push
cltd
sub
mov
cmpsl
mov
in
xorl
push
or
adc
fisttps
std
into
pop
jae
divb
mov
fldl
in
loop
iret
cmpsb
sub
loop
push
popf
mov
jmp
and
jbe
mov
repz
inc
jle
mov
xchg
call
cmp
cltd
rcll
fimull
mov
test
push
scas
ffreep
aas
jg
or
mulb
mov
mov
push
add
das
add
push
rcl
mov
xor
pop
push
cmpsb
and
outsb
xchg
push
aas
das
or
jns
jg
inc
adc
jns
xor
sarb
mov
mov
mov
pop
add
push
dec
xchg
mov
fadds
pop
lock
push
and
out
mov
jecxz
or
dec
or
mov
xchg
or
pushl
jne
roll
and
cmp
mov
inc
sbb
imul
fcmovu
inc
lcall
inc
mov
faddl
xlat
pop
jle
push
adc
pop
rolb
xor
loop
jnp
shll
cwtl
shr
jge
sbb
imul
sub
mov
mov
jbe
dec
mov
test
inc
icebp
adc
dec
int
loope
hlt
and
jmp
jo
jb
outsl
adc
adc
stc
sub
imul
jno
gs
mov
movsb
addr16
push
std
adc
push
jp
adc
enter
pop
dec
pop
test
das
mov
call
es
jno
mov
inc
emms
orb
lret
inc
xor
sti
int
mov
jb
dec
fistpll
push
xchg
jg
and
push
lahf
pop
test
jns
aas
sub
pushl
jne
mov
popf
cmp
inc
jmp
insl
sahf
imul
xchg
xor
sbb
or
mov
mov
es
out
inc
popa
lock
rorb
push
ret
loop
mov
xor
lds
xor
cmp
inc
iret
cld
stos
jmp
jmp
push
push
shr
mov
fsub
push
or
push
shr
xchg
es
bts
mov
pop
xor
fadd
aas
mov
mov
test
mov
loop
jbe
and
inc
sti
dec
scas
fwait
scas
jae
int
push
test
call
push
repz
xchg
and
mov
pop
push
or
rcrb
fcoml
or
xor
bound
ja
movsb
add
add
nop
and
xor
add
adc
push
inc
adc
loopne
inc
push
or
mov
mov
mov
push
sbbl
mov
adc
push
rcll
adc
loopne
out
cmp
comiss
jecxz
fcmovnbe
xor
addr16
mov
aam
in
mov
ret
repz
shlb
cmp
fildll
jge
dec
pop
add
fwait
jbe
es
dec
mov
jnp
cmpsl
outsl
pop
leave
dec
icebp
jbe
jb
ja
pop
mov
lock
ss
hlt
or
sbb
in
fsubr
mov
in
out
pop
sub
mov
repz
jae
mov
rcrl
mov
push
aaa
cmc
pop
fcmovnb
xorl
pop
popa
imul
std
mov
mov
or
dec
or
outsb
mov
sub
sub
fimuls
insb
sub
jnp
pop
rorl
push
stc
into
mov
or
cmp
mov
sbb
sahf
xor
add
mov
in
mov
mov
mov
mov
jae,pt
fdiv
xlat
out
or
lods
xor
inc
pop
daa
mov
ficoml
idivl
adc
pop
sbb
sbb
inc
dec
push
xchg
mov
cmc
fstpl
pop
fistps
pusha
loope
fs
repnz
fists
fucomi
clc
aad
xlat
and
dec
or
arpl
bound
pop
cmp
movsb
stos
jp
lods
fstpl
mov
in
loope
pop
dec
mov
bound
mov
sbb
sarb
and
mov
enter
mov
sbb
aas
jmp
push
mov
fcompl
ljmp
fcoml
out
push
shrl
std
push
lret
int3
cwtl
fdivrs
inc
mov
fistpl
inc
adcl
rclb
adc
and
rcrl
mov
adcb
adc
hlt
rcr
or
pop
adc
jns
adc
push
pop
adc
pop
adc
ud1
jbe
pop
adc
add
enter
lods
or
mov
les
mov
pop
jp
cs
js
inc
pop
imul
mov
mov
xchg
pop
std
and
rolb
sub
cwtl
pop
loop
lahf
adc
imul
out
sub
pop
inc
push
jo
xchg
or
xor
pop
enter
out
or
add
call
and
sub
ret
push
cmp
adc
fimull
push
pop
ds
cltd
push
cmp
shll
jo
mov
sarb
nop
mov
add
or
fwait
pop
or
jns
xchg
cmp
test
push
sub
mov
ret
das
cmpsl
pop
fmul
push
call
lahf
and
sbb
cmp
ret
push
ja
nop
shlb
in
adc
mov
loope
stc
mov
out
cmp
sub
popf
cwtl
pop
push
sahf
add
fcmovb
sahf
fs
xlat
xchg
addl
and
or
pop
mov
jp
js
enter
shlb
pop
adc
loope
mov
sti
inc
ljmp
clc
add
pop
and
xchg
mov
sbb
aas
cmp
push
ret
xchg
lock
es
push
sbb
sub
inc
mov
mov
fincstp
and
push
cltd
in
lret
int3
or
pop
adc
add
fwait
sub
mov
lret
cmc
loope
aad
mov
pop
mov
sbb
mov
lahf
test
dec
in
in
les
xchg
sub
adc
add
add
xor
sbbb
jp
iret
mov
fisubrl
pop
ljmp
or
ds
data16
mov
inc
xchg
add
in
popa
and
or
or
or
popa
mov
and
stos
push
subl
push
cmc
add
orl
lock
add
int3
or
or
mov
inc
xchg
sti
test
jge,pn
movsl
loope
inc
gs
test
push
out
out
fcoms
sbb
and
or
test
lods
aam
jbe
jno
jbe
sbb
ret
push
pushf
cmp
jo
arpl
adcb
ficoml
dec
mov
mov
sub
ficomps
pop
es
in
pop
add
xchg
out
std
add
cs
xor
jb
mov
loope
in
and
mov
jo
mov
in
mov
jne
into
int3
sbb
sub
and
adc
and
or
dec
in
push
xchg
jecxz
pushf
xchg
or
movsl
rolb
mov
sub
add
or
rcrb
fs
push
sbb
push
clc
push
rolb
ljmp
cmpsl
les
cmpsl
xchg
call
dec
mov
cmp
or
inc
mov
inc
mov
or
arpl
push
dec
mov
push
sub
scas
adc
in
cmp
orl
push
or
xor
out
test
mov
sub
dec
dec
ret
pop
mov
aas
cs
adc
orl
add
and
cmp
pop
int3
cmp
inc
scas
pop
sbb
inc
push
faddl
and
cli
inc
pop
gs
int
aaa
orb
imul
sbb
adc
mov
pop
pop
xchg
shrl
xor
push
lcall
jecxz
or
lock
into
adc
das
pushf
adc
popa
pop
cmp
ret
inc
xchg
jmp
aaa
or
nop
pop
out
inc
mov
sub
pop
jmp
mov
or
mov
in
shrb
xchg
jo
push
cmp
jno
adc
dec
or
in
leave
jbe
dec
into
jns
ror
ja
sbb
jo
insb
rcl
adc
rcll
pop
hlt
inc
lods
out
aaa
xchg
pop
sbb
pop
out
inc
aas
data16
and
fsubl
call
hlt
push
push
pusha
pop
jae
lahf
clc
add
pop
pop
loopne
les
cli
sbb
dec
stc
xchg
loopne
popf
pop
sti
leave
icebp
add
cld
xchg
push
fwait
mov
fists
leave
repz
stc
daa
rorb
cmp
and
and
mov
loope
mov
cmc
jg
popf
add
aas
xchg
jne
xlat
cld
lret
jle
xchg
lret
cmp
mov
daa
hlt
or
jg
lahf
scas
adc
sahf
push
test
and
adc
leave
pushf
add
xchg
repnz
adc
in
push
dec
call
dec
sar
xor
data16
lock
fs
pop
in
loope
int
pop
jg
mov
add
adc
test
nop
je
flds
sub
inc
loopne
add
mov
out
dec
sbb
andl
ljmp
push
sub
mov
in
add
add
rcrl
rol
out
or
mov
add
nop
pop
sarl
mov
aad
mov
jle
fadds
in
mov
in
icebp
in
aam
ret
sbb
jbe
gs
and
and
sub
push
cmp
clc
xor
cli
add
adc
xchg
mov
stc
test
xor
lds
push
adc
dec
add
pusha
mov
je
ret
pop
ljmp
inc
lock
push
add
pushf
pop
pusha
pusha
rorl
lock
orb
aas
orb
adc
add
loopne
add
sbb
push
mov
and
and
cmp
lock
mov
repnz
push
enter
sub
or
test
fiaddl
mov
push
adc
mov
sbb
add
test
fisubl
sarl
inc
stos
cmpb
xor
or
flds
jp
rcrb
and
inc
rcrl
lret
add
mov
mov
cli
xorl
iret
div
test
or
ds
add
sbbl
sub
or
mov
xchg
or
xor
sbbl
mov
inc
imul
add
mov
xor
or
or
testb
or
push
or
inc
pushf
fs
or
add
xor
lock
pop
cmp
pop
add
sub
xchg
pop
pushf
or
xor
aam
pushw
pop
mov
fnstcw
add
bound
rclb
js
nop
pop
mov
nop
cmp
add
nop
aaa
loopne
add
lock
rcrl
sub
mov
addps
inc
jl
add
push
clc
sbb
jle
xchg
pop
cwtl
mov
add
add
or
add
add
enter
add
xor
outsb
rorl
adc
pop
mov
xor
aad
jo
and
and
sub
or
push
hlt
adc
sub
xor
test
mov
enter
xorl
shlb
js
mov
cmpsl
add
repz
xchg
inc
pop
add
fadds
je
mov
xchg
popa
xchg
or
sub
mov
cld
or
xor
roll
add
xchg
loop
mov
add
lods
add
or
xchg
push
jo
inc
insb
add
add
pop
xor
shlb
loopne
int3
sbb
add
or
add
adc
test
mov
adc
sub
push
mov
sbb
lock
inc
loope
int3
or
lock
rcll
inc
fldl
loope
jns
sub
stc
jecxz
xchg
cld
rcr
fdivrs
out
inc
add
and
sti
sti
sbb
and
lock
add
mov
lods
adc
adc
mov
cmp
mov
cmp
daa
fcmovnb
jg
mov
fcmovb
jl
adc
loope
xchg
mov
xor
push
js
inc
lcall
std
mov
in
mov
insb
hlt
sbb
jae
push
out
mov
jne
or
loopne
xor
out
and
pushf
sbb
jge
faddl
xchg
dec
aas
and
xadd
sbb
add
js
inc
dec
and
std
fistpll
jle
aad
pop
fnstenv
loop
jl
dec
lahf
out
sahf
cmpsb
jecxz
idiv
adc
xor
xchg
adcl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
or
mov
fistpl
adc
mov
mov
cmpsb
and
adc
fisttpl
mov
dec
and
ljmp
push
cwtl
cmpsl
jno
push
pop
mov
push
or
push
mov
adcl
sti
mov
or
push
data16
pop
or
push
push
mov
mov
nop
das
xchg
sub
js
and
jecxz
enter
loope
ds
pop
push
mov
korb
xchg
mov
sbb
add
xor
roll
lds
enter
loopne
mov
mov
xor
sahf
mov
arpl
dec
jne
mov
ss
push
mov
jno
in
aad
mov
xchg
xchg
fwait
push
sahf
adc
aam
push
dec
push
or
push
stos
push
push
mov
pop
push
lret
inc
pop
xchg
fisttpll
pop
jp
testb
faddl
popl
jg
jl
cli
cmp
xchg
into
push
push
cmpsb
data16
lcall
cmpsl
or
jmp
push
loope
cmp
push
dec
dec
sbb
cmp
inc
cmp
sub
add
adc
and
mov
and
and
mov
mov
stos
add
cmpsb
mov
push
les
adc
stc
cmp
movsl
xor
call
pop
repnz
mov
in
adc
addl
or
fidivl
inc
jb
jb
ja
cmp
cmp
cmp
cmp
jne
test
jmp
ds
cmp
inc
mov
fs
cld
or
rcll
test
sub
mov
mov
mov
testb
arpl
aam
adc
adc
adc
cmp
nop
or
in
dec
jae
je
push
adc
add
sbb
test
or
jo
jle
cwtl
popf
test
mov
add
mov
add
jmp
pop
fs
cli
push
sbb
pushf
aas
stos
aas
mov
cld
mov
xchg
jmp
ljmp
and
sahf
loopne
icebp
xor
rcr
push
popf
and
add
push
sub
mov
dec
inc
roll
fsts
lcall
lret
ret
xor
push
cmp
cmpsl
push
cmpsl
insl
daa
mov
xor
xchg
mov
push
push
loop
adc
push
out
sub
dec
test
test
sub
push
test
sub
push
popa
sbb
enter
arpl
jge
adc
mov
push
pop
push
insb
push
jo
jne
mov
test
test
sub
xor
dec
test
mov
ret
sbb
cmpsl
cltd
jbe
mov
xchg
or
adcb
mov
iret
mov
out
mov
int3
orl
dec
add
push
mov
inc
adc
dec
push
adc
push
xchg
xchg
push
xchg
inc
push
adc
pop
test
decl
lret
lret
lret
lret
jns
jnp
ja
out
jnp
jae
std
mov
mov
insb
cmp
divb
xlat
jge
divl
fcmovb
xchg
inc
or
inc
stos
dec
pop
pop
mov
test
pop
lea
ficompl
test
mov
addr16
and
jg
les
sub
js
push
xchg
icebp
xchg
mov
jb
lret
pop
adc
lods
xor
call
push
sub
adc
outsl
leave
pop
sub
jae
paddsb
inc
jge
testb
jmp
cmpsb
fidivl
aad
lods
jnp
sub
loop
iret
imul
cmpsb
loope
icebp
sbb
mov
outsb
in
fcoml
lock
mov
outsl
mov
cmp
dec
fwait
daa
ss
outsl
sbb
jb
into
imul
inc
or
loop
cmp
lea
push
bound
dec
adc
bound
lea
outsl
enter
mov
aad
adc
call
mov
insb
xor
sbb
mov
movsl
dec
dec
movsb
xchg
pop
sub
dec
jbe
mov
inc
push
aam
inc
mov
leave
dec
movsl
sub
test
movsl
stos
dec
pop
xor
insb
xchg
icebp
sub
test
out
rorl
xchg
fidivl
dec
aad
test
xor
xor
in
or
push
mov
xor
push
cmp
jns
cmpb
rcrb
mov
cmpsl
inc
xor
cmpsb
lahf
gs
mov
mov
test
test
sub
pop
adc
test
stc
dec
xor
xchg
std
inc
aas
js
cli
xchg
sub
jmp
pop
bound
stos
adc
mov
mov
xchg
push
sbb
lds
aad
stos
lods
push
fs
fstps
mov
shrb
gs
mov
or
pop
nop
movsb
mov
xor
mov
fimull
jecxz,pn
in
jecxz
xchg
es
cltd
ret
cmpsl
lods
lcall
xchg
in
daa
xor
xor
divb
jne
push
mov
mov
roll
dec
lods
sub
test
lods
stos
pop
pop
mov
insl
mov
fprem1
test
out
rcrl
mov
hlt
aad
test
je
xor
and
mov
es
dec
out
mov
push
shrl
leave
jge
sti
mov
jle
out
insb
push
sbb
mov
cwtl
mov
insl
in
fisttpll
mov
arpl
popa
mov
sbb
xor
push
mov
arpl
mov
sub
mov
arpl
test
les
mov
ja
clc
mov
xchg
cs
and
or
lret
lods
cs
or
pop
adc
dec
shrl
fs
data16
sbb
fs
popa
scas
jbe
pop
dec
jb
jecxz
lcall
ss
adc
stos
ss
and
mov
int
dec
push
lret
push
jbe
pop
mov
dec
int
fwait
inc
ss
popa
inc
cltd
repz
xlat
cmp
push
mov
outsb
mov
int3
fcoml
insl
fcmovu
mov
mov
int
fcmovne
aaa
xchg
outsb
pusha
push
out
cltd
mov
mov
outsl
je
add
hlt
fwait
jmp
orl
jb
les
cmpsl
and
mov
sbb
adcl
lds
ret
lcall
int
fwait
cmpsl
cmp
push
cmp
jae
out
les
push
outsl
scas
enter
mov
cmp
popa
sbb
or
xor
mov
or
xchg
cwtl
pop
sub
jae
inc
jae
adc
les
cmc
roll
in
adc
xchg
dec
test
movl
cmpsl
out
cmp
add
sub
ss
adc
xor
mov
adc
jb
jecxz
leave
cmpsl
xchg
dec
pop
cmp
daa
cmpsb
add
bound
dec
shll
xlat
add
aas
sub
mov
movsb
bound
push
cmp
xchg
push
pop
dec
ljmp
aam
xor
cmp
cmp
outsl
pop
sbb
cld
stos
cli
mov
shrb
lods
jecxz
pop
enter
dec
pop
adc
sub
data16
push
bound
loop
fistl
pop
jg
add
dec
add
xor
sbb
lret
and
and
je
add
xchg
es
xchg
and
and
ss
rclb
dec
or
test
add
mov
push
pop
adc
pop
and
or
mov
dec
sub
inc
imul
in
dec
outsl
xchg
loopne
les
adc
dec
shrl
les
icebp
imul
shrl
mov
pusha
shl
add
jns
dec
xor
jl
add
repnz
out
iret
pop
push
and
bound
test
xorl
lock
clc
out
or
fmul
xor
shlb
add
pop
cmp
arpl
insb
and
rclb
push
sub
test
or
pop
add
pop
push
pop
xchg
int
insb
mov
sub
xchg
add
cltd
clc
iret
out
xor
lods
xchg
jecxz
and
pop
or
mov
imul
push
push
inc
dec
add
sub
xor
int3
and
int3
ret
mov
arpl
xchg
data16
int3
xchg
cmp
gs
xor
sub
int
cmp
lds
xor
les
push
jge
lock
scas
lahf
lds
out
xchg
push
push
clc
arpl
pop
push
jl
repnz
leave
adc
or
insb
mov
aam
push
in
pop
sbb
int
mov
aam
push
movsb
lcall
or
movsb
push
insb
xorl
in
mov
and
and
lds
out
iret
sub
test
or
dec
andl
dec
jb
or
adc
aas
cli
stos
rcr
addb
movsb
add
mov
popf
inc
notl
rolb
stc
pop
xchg
in
orl
push
xchg
pushf
xchg
xor
cmpsl
and
stos
pop
mov
je
test
notl
xchg
mov
outsl
and
inc
fisttpll
push
pop
aaa
xchg
outsb
jmp
bnd
loopne
in
mov
xchg
adc
cmp
jp
mov
roll
push
rorb
mov
or
or
cwtl
lcall
jge
mov
js
mov
pop
push
mov
mov
adc
fmull
cs
mov
fiadds
fisubs
push
pop
mov
add
xor
data16
cltd
hlt
cmpsl
aad
cmpl
neg
add
fdivr
jnp
cli
adc
push
xor
xor
cmp
jl
scas
loopne
testb
cs
nop
lahf
xchg
sahf
sbb
je
test
aam
test
inc
pop
loopne
cmp
outsb
sbbl
in
pop
loopne
sahf
xor
inc
mov
sbb
ret
sbb
and
mov
sub
mov
dec
data16
pop
fiadds
mov
in
daa
mov
cmp
sar
xchg
sahf
fcom
int
sbb
mov
inc
aaa
push
outsl
sbb
mov
push
clc
push
jbe
inc
je
psraw
clc
dec
clc
mov
mov
in
xorb
push
xchg
gs
jmp
xchg
mov
icebp
aam
sub
sub
pop
xor
jmp
in
rclb
push
mov
cltd
sub
lods
sbbb
pusha
and
cmp
mov
xor
dec
out
adc
cltd
inc
mov
lock
push
out
dec
and
push
cmpsl
sub
lods
ret
into
cmpsl
and
cmc
addr16
adc
jo
cmp
jl
aaa
int3
aas
or
mov
test
inc
fcom
jbe
shll
imul
add
loop
mov
sbb
mov
xorl
loopne
repz
add
mov
jb
lds
out
fdivrs
repz
inc
addl
pop
or
rcrb
jne
out
sar
push
ljmp
out
and
jg
dec
loopne
xchg
std
xor
mov
or
ljmp
add
add
aas
mov
pop
and
xor
cwtl
ficomps
pushf
push
orl
mov
xor
movsb
aaa
scas
scas
iret
insl
xchg
push
cli
ja
mov
jge
iret
or
ret
sahf
and
popf
push
mov
test
add
push
loope
sbb
enter
mov
push
call
pop
inc
jge
cmc
daa
cltd
cmp
out
cmp
out
cmp
sar
and
add
loopne
mov
add
inc
or
sub
add
mov
add
pop
data16
arpl
pusha
xor
cwtl
sub
push
mov
loopne
inc
xlat
and
jmp
lods
mov
or
lods
cmp
aad
pusha
and
or
fistl
lret
cmp
mov
faddp
mov
mov
sbbl
test
jae
jno
sbb
in
enter
pusha
fcoml
iret
pop
int
inc
push
mov
xlat
aaa
add
hlt
jae,pn
jmp
xchg
and
and
mov
sub
loop
fs
mov
mov
jne
mov
adc
loopne
fdiv
cmp
jns
cmp
movsl
aas
test
or
cmp
jle
xchg
push
insb
ljmp
cld
adc
sbb
int3
leave
int3
adc
daa
mov
fisubs
ret
movsb
faddl
add
add
pop
mov
pop
adc
js
pop
xchg
mov
mov
insb
add
sub
jg
mov
adc
mov
mov
loopne
xor
lods
rorb
out
sub
mov
lret
push
lock
mov
xor
sbb
fidivrs
or
icebp
clc
add
movsl
mov
xchg
adc
xchg
cmp
fs
jl
nop
cs
inc
loope
sub
pop
jno
mov
jns
test
pop
call
insb
xor
mov
add
fisttps
add
mov
and
dec
pushf
mov
sbb
roll
in
mov
aas
lret
xor
sbb
fidivrl
xchg
jnp
xchg
jo
inc
mov
push
in
ja
daa
repnz
in
mov
aaa
inc
xlat
xor
xchg
mov
out
ret
ja
push
xor
and
fwait
lret
mov
outsl
fldt
outsl
out
insl
inc
sub
pop
pop
cmp
mov
xchg
loop
cmp
pop
add
addr16
push
add
sub
xor
and
shl
adc
and
daa
pop
or
sarb
into
daa
mov
mov
sub
push
pushf
sbb
push
push
push
mov
pop
push
stc
inc
sub
cmp
aaa
adc
jae
inc
cli
int
aaa
fisubrl
mov
lcall
pop
lock
pop
push
int3
pop
fldl
pop
inc
jp
push
dec
pop
inc
mov
mov
sbb
aaa
jecxz
addr16
jb
in
jns
ror
sub
lret
xchg
xlat
cmp
movsb
mov
loope
incb
dec
std
push
xor
faddl
jmp
inc
xor
and
imul
es
adc
mov
dec
push
push
test
push
push
stos
movsl
popa
dec
rclb
mov
push
ds
dec
xor
jmp
lods
adc
cmp
inc
or
out
daa
nop
push
pop
leave
and
xchg
mov
jl
cmp
add
shrl
or
aad
xor
push
lds
mov
std
sbb
popf
push
jge
jmp
xor
popa
xchg
jb
les
repnz
lea
int3
fwait
aas
pop
loopne
jno
inc
out
icebp
stos
enter
pop
add
mov
xchg
mov
xchg
cld
ss
pop
out
mov
lcall
push
scas
shl
and
cmp
mov
out
jae
out
inc
test
aaa
les
rcll
and
stos
lea
insl
jno
repnz
add
stc
les
test
ficoml
jl
js
nop
cmp
fisttpl
add
ret
ret
loope
xor
clc
js
sbb
xchg
push
daa
rorl
adc
shll
mov
faddl
js
adc
scas
sub
ja
mov
movntq
out
jae
insl
sbb
loopne
jns
jg
jp
pop
lret
das
mov
lret
test
out
jmp
fdivs
mov
shll
decl
mov
lods
flds
mov
enter
les
jecxz
add
cmp
mov
jno
ret
ds
stc
xchg
or
mov
mov
in
int3
push
insl
lcall
add
out
adc
pusha
fstps
addr16
adc
fs
lea
imul
xchg
or
dec
pushf
xchg
fmuls
fisttpll
cmp
aam
or
shrl
popf
jno
bnd
jbe
aam
je
sub
test
sub
push
psllq
pop
rcrl
loop
int
fdiv
inc
xchg
jle
stc
adc
cmc
push
int
icebp
std
test
bound
cmp
cli
decl
call
lcall
ljmp
mov
sarb
mov
mov
mov
or
pop
mov
pop
mov
jg
jae
or
in
ficomps
cmp
insb
cmp
add
notl
push
jg
clc
jae
mov
stc
inc
in
ljmp
incb
out
dec
cmc
add
call
outsl
mov
jno
cmpsl
sub
push
fsubl
jb
or
mov
jne
or
sub
repnz
adc
hlt
loopne
cmp
mov
add
mov
out
sbbl
outsb
mov
pop
js
jl
xchg
or
mov
nop
mov
es
loopne
daa
scas
lods
loope
leave
movsb
adc
push
mov
sbb
imul
pop
adc
ja
fadd
mov
inc
push
cmp
out
pop
sbb
repnz
ficomps
aaa
fs
push
pop
les
mov
rol
test
into
push
sbb
fcmovne
mov
repnz
cmc
adc
lahf
push
fsts
and
notl
in
or
lret
or
pop
mov
jl
sbb
mov
fmuls
adc
inc
or
adc
xchg
into
in
xor
mov
outsl
pop
fld
mov
pushf
mov
aad
sbb
nop
enter
loope
lock
inc
movsb
xchg
push
adc
jbe
cmp
mov
js
jne
mov
push
mov
mov
outsb
cmpsl
add
enter
inc
xchg
pop
pop
or
stos
outsl
adc
and
stos
loopne
loop
ljmp
add
or
adc
mov
icebp
das
dec
enter
roll
xchg
inc
mov
xchg
xchg
add
sub
addr16
dec
pop
data16
pop
ror
jns
cwtl
jnp
mov
dec
cmp
mov
cld
xor
or
ss
jbe
mov
xlat
movsl
mov
out
xchg
inc
adc
xchg
jae
mov
sub
sbb
pop
stc
repz
daa
ljmp
call
or
les
mov
popf
jae
and
add
mov
ret
jne
notb
jnp
shll
stos
stos
and
push
dec
pop
adc
test
xchg
pop
fiaddl
mov
bound
and
jmp
je
aaa
repnz
lods
sub
aas
rclb
sbb
test
sub
std
popa
pop
adcb
mov
jg
sub
mov
mov
add
jmp
call
scas
out
out
adc
ret
push
inc
ret
cmp
lods
imul
pop
inc
mov
pop
sub
mov
orb
and
or
and
sbb
cld
and
or
jp
adc
iret
sbb
js
out
inc
dec
jns
inc
xlat
mov
jle
out
lods
aas
xor
popa
xchg
mov
cwtl
cmc
cmpl
or
push
repnz
jmp
dec
push
or
xchg
fcoms
icebp
dec
outsl
adc
xchg
adc
cmp
addr16
jae,pn
fstl
jl
leave
cld
adc
stos
cmpsb
pusha
fidivrs
push
in
mov
jl
cmpsb
or
fbld
push
insl
add
jp
mov
ret
mov
sub
pop
lock
pop
stos
adc
stc
inc
pop
inc
shl
popf
pop
sbb
pop
stc
inc
cmp
bound
insb
pop
sbb
sbb
xchg
mov
outsb
mov
push
ja
xlat
jg
pop
outsl
out
mov
or
mov
in
mov
in
mov
mov
pop
mov
jl
adc
and
push
iret
adc
rorl
imul
not
sub
add
imul
mov
sub
inc
dec
arpl
sub
mov
les
movsb
das
xorl
outsb
adc
mov
jecxz
pop
stc
push
dec
push
fs
call
shlb
out
fs
sub
call
xor
push
push
or
cmp
add
sub
sbbb
push
fistpll
je
aam
lret
int3
adc
and
cmp
push
sbb
adcb
mov
or
gs
add
into
cmpsl
mov
jns
sarb
mov
and
addl
xchg
and
test
mov
push
fisubs
scas
push
inc
pop
xor
inc
fstl
cli
lcall
loope
and
xorl
stos
xor
mov
test
loope
aas
call
adc
add
loop
adc
xchg
cmp
push
xchg
daa
lods
or
pop
repz
hlt
orl
mov
iret
lret
aas
decl
imul
cmp
sbb
sbb
mov
aam
inc
int
jo
aas
je
jnp
or
cld
and
nop
pop
inc
inc
lahf
and
stc
loope
dec
shrl
jmp
adc
or
or
add
jns
stc
pmaxub
icebp
nop
or
sbb
mov
imul
mov
sahf
loop
movsb
cmp
mov
pop
add
xchg
js
inc
mov
addb
jl
add
sbb
or
sarb
repz
lods
inc
or
adc
test
mov
pop
pop
les
hlt
adc
outsl
std
push
xchg
jb
sbb
loop
cwtl
lcall
in
scas
in
push
lds
call
mov
arpl
imul
add
data16
mov
add
in
sub
push
push
mov
push
mov
iret
imul
test
aaa
or
sub
cmp
xchg
mov
add
cmp
jmp
jo
mov
inc
mov
mov
xor
mov
lret
add
insb
inc
or
xchg
imul
sub
fs
ds
push
cmp
dec
bound
aad
out
dec
sti
ret
data16
mov
mov
insl
mov
aaa
leave
push
push
cmpsl
xor
pop
add
fwait
test
add
fisttpl
orl
sub
dec
jns
xor
push
push
sub
jge
xor
andl
mov
push
clc
in
ret
mov
lret
and
cmpsl
adc
scas
push
adc
dec
push
sbb
mov
push
leave
pop
pop
cli
sub
dec
adc
out
mov
cmpsl
pop
ret
mov
and
ret
mov
popa
fwait
cmpsl
data16
negb
pushf
lock
jge
push
hlt
cmc
icebp
jo
nop
dec
xchg
pushf
adc
ljmp
mov
jnp
pusha
loop
aaa
dec
dec
dec
and
sbb
js
jns
jbe
aam
dec
dec
xor
pusha
or
pop
hlt
mov
jl
in
inc
dec
mov
push
push
loope
int
xchg
push
xchg
sub
notl
or
out
push
or
test
int3
test
int
fcmove
mov
ja
cld
roll
fildll
mov
movsl
jmp
fidivl
or
lock
inc
lods
dec
xor
aas
push
dec
shrl
fdivs
jl
jo
jl
pop
pop
and
test
mov
sarb
jp
iret
jg
outsl
and
dec
sbb
sti
mov
sub
adc
jb
jecxz
mov
xor
out
add
lock
mov
jp
xchg
push
rorl
cld
jno
out
pop
xor
loop
and
push
hlt
xchg
jns
dec
pop
ret
dec
movsb
mul
mov
subl
jb
dec
ja
out
leave
fiadds
ja
mov
xor
js
lock
adc
lret
inc
jbe
mov
mov
lods
pop
rol
in
jmp
sub
pop
test
iret
gs
mov
test
aam
fistpll
mov
inc
imul
mov
dec
js
rolb
cmc
adc
push
aas
mov
push
out
jnp
pop
push
iret
repz
test
mov
out
out
mov
sub
dec
mov
int
cli
in
xchg
pusha
cmp
test
jnp
enter
cli
or
add
add
xchg
insl
dec
in
daa
push
push
lds
inc
jae
push
add
add
cmp
addb
clc
adc
mov
cmp
jl
sbb
cs
mov
cmp
xchg
sbbb
mov
adcl
xchg
test
jbe
stc
test
clc
sub
inc
sbb
movsl
jns
cmc
push
lock
lret
pushf
sahf
sarb
mov
sbb
mov
mov
push
not
sub
xor
loop
hlt
jno
sub
xchg
fwait
arpl
shlb
fdivl
in
xchg
fistpl
dec
mov
sahf
sub
xchg
rcrl
in
mov
clc
int3
ficompl
adc
and
mov
mov
enter
ret
bound
cltd
inc
add
inc
xor
aas
mov
outsl
hlt
test
fadds
pushf
jae
daa
loopne
mov
pop
dec
fwait
jbe
jge
mov
repz
inc
xorb
pop
cwtl
idiv
sti
cltd
loope
rol
jg
int3
mull
out
nop
mov
call
hlt
and
repz
and
mov
lea
mov
adc
xor
jg
stos
sub
inc
jb
popa
nop
jle
arpl
les
out
xchg
loopne
cmp
sub
sbbl
jp
mov
ja
leave
fcmovb
xchg
jecxz
or
mov
incb
imul
jmp
out
aas
int
pop
mov
add
pop
mov
gs
iret
sub
loopne
push
out
push
loope
cmpsl
jp
add
and
sbb
aas
aad
bnd
add
fiadds
lds
incl
mov
insb
jns
insb
repnz
imul
addr16
insb
lcall
jne
xor
dec
or
roll
scas
lcall
dec
icebp
test
jecxz
or
incl
clc
dec
les
sbb
mov
mov
addr16
jno
xor
nop
inc
mov
fisttpl
or
cmpsl
mov
in
inc
xorb
xor
sbb
loopne
fisubrl
mov
popf
movsl
idiv
pop
popl
sbb
mov
shll
adc
sbb
inc
mov
test
insl
into
or
cmp
push
jl
pop
cld
sbb
add
push
cmpsl
or
insb
adc
addr16
scas
iret
or
loop
gs
addr16
imul
mov
xlat
sbb
lods
mov
bound
xchg
push
lcall
add
insb
pop
fldt
loope
fdivrs
fs
pop
fcoml
fst
xchg
or
lea
loopne
outsl
in
jecxz
mov
lret
mov
jl
lods
cmp
dec
fwait
pop
ss
and
mov
in
dec
hlt
fstpt
mov
jne
div
jnp
sbbl
imul
pop
mov
jmp
dec
scas
cwtl
das
dec
clc
adc
test
fimuls
add
loope
mov
push
ja
inc
mov
pusha
mov
loopne
in
xor
aad
push
cmp
xor
dec
sti
insb
ror
xchg
add
std
xchg
ljmp
shll
and
decb
mov
imul
add
pop
lea
ds
sbb
dec
rorb
jge
xor
push
sub
fmuls
fidivs
add
lret
std
mov
cwtl
lods
mov
sub
jnp
pop
fcmovb
mov
xchg
out
lods
imul
xor
in
or
std
pop
add
and
dec
jnp
adc
dec
and
sbb
adc
in
push
push
addr16
adc
stc
add
fs
lds
inc
outsb
rcrb
loop
mov
xor
and
mov
add
jmp
mov
lock
leave
sbb
loopne
sbb
lcall
dec
pop
cwtl
sub
dec
sub
ret
cmp
and
mov
mov
outsb
aam
out
adc
pop
jae
and
jnp
pop
outsb
and
enter
xchg
insb
jne
sub
xchg
cli
mov
add
push
in
insb
sub
sub
fadd
loop
imul
pop
ja
jg
dec
aas
xchg
fstl
int3
frstor
or
out
xor
pop
rolb
mov
hlt
jl
jl
lock
scas
test
out
test
out
sbb
add
pop
sti
fadds
dec
cld
sub
inc
repz
lock
cmc
out
repnz
jle
push
stc
je
imul
jge
sub
test
test
scas
ljmp
add
pusha
lret
pop
xor
cmp
dec
cmc
xchg
pop
or
lods
sub
xchg
aam
fisubs
adc
cmpsl
bound
xchg
imul
push
imul
lods
or
roll
in
lcall
adc
cltd
jmp
pop
cmp
fadd
and
aam
dec
fcmovb
hlt
testb
icebp
mov
aam
lods
add
jae
sub
cltd
jnp
in
inc
jle
sub
inc
sbb
inc
xchg
filds
sub
mov
subl
inc
mov
shr
add
cmc
mov
dec
add
movsl
outsb
dec
cmp
mov
outsl
roll
inc
repnz
not
fists
pop
pop
jno
inc
hlt
lea
or
cmp
add
pop
push
and
not
sub
fildll
lods
scas
fisubrs
or
cltd
scas
pop
xchg
jo
add
inc
das
sub
mov
inc
push
popf
sahf
fidivs
sahf
jge
adc
sbb
push
int
jg
sbb
mov
stos
testl
loope
xor
mov
mov
mov
and
adc
ret
lea
hlt
mov
add
lahf
push
outsl
icebp
subb
lea
in
fmulp
mov
imul
fwait
sbb
pop
xor
sbb
in
div
push
in
adc
or
addr16
xchg
repz
negl
mov
dec
push
jl
inc
or
test
int3
push
xchg
aas
adc
mov
js
and
cmp
xlat
and
push
and
repnz
mov
xlat
sbb
inc
sbb
dec
cld
mov
int
mov
ja
adc
les
call
or
inc
jp,pt
test
push
out
pushf
jo
pop
inc
adc
idivb
adc
loop
or
xchg
call
clc
pop
push
jo
mov
mov
dec
loopne
pop
mov
rcrl
lret
fwait
cmp
hlt
decl
addr16
dec
negl
lock
sub
scas
shll
std
mov
mov
or
xchg
jmp
xlat
fistl
rorb
mov
fisubs
sbb
mov
fsubrs
cmp
loop
fs
fistps
mov
jge
je
sub
insb
cmp
lret
testb
cmp
test
ds
stos
lea
pxor
test
pop
push
mov
adc
sahf
pop
dec
sbb
xchg
rcrb
je
mov
push
add
or
gs
xor
js
loope
mov
cmp
sahf
ja
scas
and
pushf
adc
stos
cld
inc
ds
loope
cmc
add
in
add
clc
add
nop
mov
test
ja
hlt
dec
inc
test
and
addb
add
adcb
loope
leave
rcrl
aaa
loop
rcll
aad
mov
loop,pt
xchg
ficoms
xchg
int3
sub
sub
lods
rcrl
xor
shl
cmc
ljmp
mov
mul
adc
lds
mov
lret
push
jnp
gs
rcll
mov
add
pop
popa
inc
icebp
pop
sbb
ja
or
sbb
xor
daa
out
andb
add
sub
mov
rol
pop
roll
pusha
adc
dec
push
mov
stos
lock
xchg
adc
mov
in
mov
sub
test
clc
inc
jbe
lods
push
fwait
lock
pop
mov
bound
mov
dec
mov
pop
inc
sub
pop
jo
or
and
and
lea
mov
sub
gs
fs
xchg
cmp
xor
sbb
inc
push
jmp
add
imul
movsl
in
cwtl
inc
cmp
xchg
cmpsb
mov
iret
jecxz
aas
jecxz
or
pop
push
repnz
pop
dec
jle
sub
mov
sbb
dec
jecxz
xor
sub
jg
xchg
out
xor
hlt
lahf
shl
jle
outsl
and
mov
xor
pop
jo
jne
pop
mov
adc
add
xor
add
ss
jp
jbe,pt
add
lds
jl
fyl2x
pop
pop
or
push
sahf
jo
jmp
dec
jp
jnp
ja
insl
clc
insl
lods
aaa
pop
cmp
cld
sub
or
jo
xchg
ficompl
ror
insb
and
dec
insl
sbb
lea
dec
cs
daa
lcall
shrl
in
loope
mov
repz
pop
push
dec
push
ljmp
mul
mov
xchg
lahf
inc
push
loop
cmpsl
andb
push
fisubl
cltd
xchg
adc
sub
bound
stos
insl
adc
adc
cmp
sub
adc
psubd
adc
fsts
or
pop
push
and
notb
pop
pop
jne
push
sub
popf
adc
std
and
test
jno
and
out
mov
repz
lahf
testb
xchg
pop
mov
pop
dec
and
jp
push
dec
inc
jo
mov
out
popa
in
das
sub
sub
popa
sub
xor
pushf
imul
fildll
das
lahf
fadds
sti
mov
lods
inc
rcrb
je
dec
mov
fldl
or
daa
mov
ds
dec
rorl
pop
add
test
js
call
and
addl
stos
aad
stos
arpl
xchg
pop
fisubs
cs
cld
call
inc
leave
adc
or
push
jg
pop
je
sahf
mov
stc
adc
xchg
cwtl
and
cmp
fwait
into
divl
cmp
sub
in
jbe
cmp
out
mov
aad
rcr
mov
stc
mov
cli
test
mov
bound
in
js
jb
xchg
sub
pop
mov
iret
nop
dec
mov
pop
stos
cmp
dec
leave
leave
ficomps
clc
push
or
subl
mov
loopne
mov
mov
sub
addl
jmp
ret
add
insl
jnp
mov
insb
mov
mov
hlt
imulb
xor
mov
jo
stos
lret
mov
or
je
popa
testb
cli
pop
out
xor
cli
popa
push
or
addr16
mov
imul
addl
dec
xchg
adc
decl
jne
and
push
repz
pop
fwait
mov
outsl
mov
fwait
daa
ss
pop
cmp
lahf
adc
mov
das
shll
out
iret
mov
and
xchg
imul
mov
mov
inc
shlb
flds
insl
dec
fistl
and
test
es
mov
push
xor
cmp
add
out
es
adc
int3
dec
cli
in
add
loop
testl
icebp
push
sahf
call
scas
mov
imul
or
scas
out
les
pop
out
or
jl
stos
lds
test
ss
mov
and
push
insl
ja
mov
fldl
aam
inc
lcall
scas
push
mov
flds
pushf
shll
xchg
cltd
mov
sbb
fadds
jns
out
xchg
inc
addr16
aam
dec
test
mov
mov
cmc
cs
sbb
sarb
in
lock
xlat
mov
leave
call
nop
jecxz
add
xor
cwtl
in
outsb
out
jns
mov
ret
cs
mov
add
loop
loop
movsb
sub
adc
jg
mov
cmpsl
mov
dec
xorl
pushf
ljmp
loope
adc
jle
repz
cltd
sti
and
arpl
mov
sbb
adc
add
inc
xchg
adc
fcoml
add
int
stos
js
lcall
mov
mov
into
mov
mov
sahf
or
xchg
movsl
xor
pop
out
lret
xchg
push
or
orb
inc
adc
add
aad
xor
rcll
movsl
jns
jnp
aad
push
mov
sub
or
mov
jnp
xor
jae
int
and
mov
lea
pushf
jnp
push
mov
jl
ret
je
inc
movsb
and
push
jg
mov
fstl
iret
stc
fsubr
clc
lods
cmc
loope
lret
mov
scas
bnd
jmp
jge
pop
sub
cmpsb
cmp
mov
mov
sbbb
pop
pop
cmp
xor
xchg
outsl
mov
pop
in
push
xchg
sahf
or
lahf
sbb
inc
mov
sub
dec
jg
cmp
mov
add
add
and
add
int3
fcomps
lea
mov
clc
cmpsl
xchg
push
cld
shll
or
cmpsb
loop
sbb
inc
js
rolb
xor
les
sarl
mov
push
dec
loopne
outsb
adc
das
rolb
sbb
mov
outsl
ljmp
xchg
ja
in
xchg
sbb
out
insl
sub
jg
jg
push
ret
decl
lock
rep
mov
test
pop
pop
repz
inc
in
cli
loopne
push
push
cmc
inc
loopne
cmp
outsl
out
mov
pop
jmp
mov
in
loopne
mov
inc
pop
int
xchg
in
pop
lahf
xchg
js
cmp
dec
xor
xlat
cs
repz
std
and
sub
mov
iret
loope
xor
stos
xor
popa
xchg
xchg
mov
or
addb
and
repz
or
filds
arpl
in
roll
cwtl
xchg
adc
repnz
cltd
arpl
dec
xchg
sbb
mov
sub
imul
cld
decl
lea
pop
mov
jb
stc
dec
mov
es
sub
inc
ss
cltd
shll
dec
int
out
mov
inc
pop
out
lahf
fistpll
ret
sbb
lea
add
clc
into
pop
ficoms
pushf
push
mov
cmp
xorb
cltd
push
xor
cmp
mov
and
jge
push
icebp
fst
rcrb
add
jle
sarl
mov
sarb
ret
rcl
stc
cmp
repz
icebp
sub
pop
mov
hlt
repnz
in
sbb
repz
xchg
shlb
imul
jne
in
xchg
fldenv
adc
mov
clc
leave
shlb
inc
ds
add
enter
sub
push
adc
test
pop
dec
lret
inc
loop
mov
test
adc
push
fcoml
sub
out
movsl
call
mov
dec
push
xor
stos
pushf
jp
and
jmp
rcr
or
push
xchg
add
mov
mov
jno
mov
push
lret
mov
jns
jae
inc
jl
xchg
jo
repnz
lcall
lret
repz
mov
ja
fists
dec
rorl
lahf
inc
push
out
ret
sub
push
mov
mov
pop
xor
fs
jnp
arpl
mov
mov
arpl
mov
mov
inc
testl
fbstp
jb
out
shll
pop
mov
mov
or
dec
mov
aad
pop
sbb
or
lods
push
adc
fiaddl
mov
enter
lret
jp
clc
or
push
loop
lea
cmp
and
dec
cwtl
adc
or
pushf
pop
jecxz
cs
dec
pop
sub
sti
cmc
testb
int
data16
pop
push
ret
in
insl
icebp
out
adc
out
sub
jg
mov
fldenv
mov
xor
es
shll
into
sbb
test
mov
xor
inc
icebp
mov
jbe
cmp
jbe
xlat
das
cmp
popf
clc
out
out
cmp
loopne
scas
mov
lock
adc
cmp
fs
mov
imul
insb
sti
adc
sti
inc
mov
pop
push
and
cmc
jns
xchg
mov
inc
stos
shll
pop
mull
loop
call
dec
and
adc
inc
pop
dec
mov
sti
icebp
mov
sub
push
test
test
fimull
movsl
cld
add
int3
add
sub
inc
insb
nop
dec
int3
mov
add
sti
fcmovu
lds
in
adc
push
cli
ret
test
xor
xchg
add
push
jno
xlat
sahf
nop
aad
stos
mov
or
lcall
fists
out
sbb
xlat
ret
hlt
arpl
icebp
inc
loope
cmp
les
popa
outsl
sub
adc
and
test
and
sbbl
xchg
in
add
push
mov
push
lock
movsb
dec
ret
and
es
and
aas
mov
je
and
out
enter
cmpsl
cwtl
add
cmp
push
adcb
insl
sub
leave
notl
pop
mov
mov
clc
mov
lea
dec
xor
shr
add
out
lods
es
mov
ja
scas
mov
loope
mov
pop
xchg
fisubs
lea
addr16
nop
clc
loop
flds
or
lahf
fisubrs
leave
push
jbe
mov
in
inc
pop
mov
xor
lahf
sbb
mov
jle
mov
jns
inc
repz
sbb
in
add
es
aaa
lods
insl
and
into
fstpl
aaa
xchg
arpl
pop
cli
iret
push
sbb
pop
mov
sarb
mov
les
scas
loope
push
and
iret
adc
test
repz
push
shrb
test
sub
sub
shrl
leave
lods
in
stc
lods
cmc
dec
push
sbb
xor
dec
fisttpl
fbld
adc
outsl
mov
fnsave
jl
imul
inc
mov
divb
sub
cmp
push
push
repnz
test
sub
inc
aam
scas
out
and
pop
adc
cld
jnp
aaa
xchg
jnp
in
cmp
jno
pop
data16
mov
or
add
pop
stos
stos
push
sbb
xor
cmp
icebp
or
sti
xor
and
dec
cmp
add
bound
mov
out
fwait
push
outsl
jo
icebp
mov
aaa
enter
xor
rcrl
mov
fcmovu
push
inc
mov
outsl
andb
mov
ficompl
push
mull
mov
add
or
xchg
pop
mov
push
test
lods
rcrl
and
or
cli
dec
shlb
clc
pop
pusha
mov
add
je
push
mov
xchg
in
xchg
jbe
sub
adc
into
mov
inc
push
cli
and
cmpsb
dec
fnstenv
and
xchg
fsubrs
cmp
push
mov
sbb
aas
bound
and
jmp
mov
sub
inc
test
imul
stos
mov
lahf
insl
jp
adc
jmp
cmp
fcmovu
mov
imul
xchg
or
jbe
jl
mov
aad
pusha
cld
cmp
stc
pop
sub
jmp
sbb
ljmp
mov
cli
aam
stos
repnz
hlt
stos
mov
fsub
test
rclb
and
rclb
vmulsd
or
js
arpl
shlb
jae
push
out
cs
loopne
inc
mov
or
in
or
and
shl
test
fcmovnbe
xchg
xor
cltd
pop
pop
mov
lock
push
test
mov
push
ret
pop
and
pop
push
cmp
sbb
pop
aam
inc
push
je
std
sub
test
rcrl
lods
mov
add
frstor
xor
cmp
push
addb
out
popa
roll
cmp
adc
popa
cmp
fmull
push
mov
je
mov
pop
add
and
mov
notb
fdivl
or
aam
orl
clc
mov
pop
mov
push
and
xor
shr
ret
fcoms
mov
ja
shll
adc
cmp
incb
adc
sub
lea
or
push
lret
dec
lahf
jno
mov
dec
aam
arpl
stos
pop
or
mov
leave
and
adcb
pop
pushl
jns
add
xchg
fistl
mov
les
dec
push
cld
adcb
sbb
or
cwtl
mov
jge
cli
jne
mov
jle
ljmp
adc
xor
sub
jne,pn
jbe
or
cmp
mov
in
inc
xor
popa
pop
div
mov
iret
push
jnp,pn
adc
in
add
mov
add
das
cmp
addl
pusha
cmp
dec
cld
addr16
sbb
pop
clc
jle
ret
sti
xchg
jae
ss
lret
jmp
inc
je
adc
push
adc
and
scas
adc
subl
mov
xor
xor
int3
and
int3
ret
mov
lret
lret
add
dec
ficompl
in
aas
call
ljmp
repz
xchg
ret
or
repnz
testb
lret
scas
adc
incl
es
add
sarb
daa
mov
pop
ljmp
rcr
mov
sarb
mov
pop
xorl
out
cmc
mov
mov
lods
insl
add
push
daa
dec
sub
aaa
lahf
xchg
push
mov
or
jo
mov
int3
popa
addl
add
add
mov
mov
inc
add
pusha
add
add
inc
and
inc
add
add
dec
add
andb
add
or
std
daa
mov
mov
jge
stos
stos
jp
jnp
ja
pop
fisubrl
std
mov
mov
jge
mov
cmp
sbb
les
pop
decl
enter
push
sbb
sbb
adcl
icebp
or
movsb
stc
add
jno
insb
adc
movsl
repz
xor
mov
sbbb
sarb
jp
adc
sbb
sub
xchg
sbb
sbb
cltd
mov
xchg
lods
sahf
cmp
punpcklwd
nop
loope
pop
pop
scas
cmp
jg
pushl
sbb
stc
adc
xor
fs
sahf
pop
xor
sbb
mov
pop
adc
push
xor
mov
pop
jle
or
cltd
test
mov
lahf
sub
js
xor
sub
or
andl
xchg
test
adc
xchg
iret
and
lahf
mov
lods
cs
push
xlat
aad
jl
pop
xchg
mov
push
fwait
jnp
and
orl
inc
jns
xor
imul
adc
test
push
imul
dec
lahf
xor
mov
outsl
rorl
sub
lret
imul
or
add
jae
lock
xchg
or
int
mov
mov
dec
push
shrl
pop
xchg
imull
inc
xor
or
mov
call
add
out
fstpl
xchg
lret
ja
insb
mull
movsl
out
push
fisubs
enter
fwait
ja
mov
mov
stos
sti
xchg
outsl
leave
mov
jg
pushl
incb
aas
fidivrs
iret
adc
mov
orb
sbb
xor
xchg
or
test
mov
xchg
jno
call
inc
je
into
inc
jmp
jno
loope
xchg
mov
mov
das
mov
out
sub
push
lret
stos
push
outsb
add
shrb
adc
or
push
cltd
xor
lret
outsb
iret
insl
lcall
mov
iret
sbb
popf
rcr
mov
mov
leave
stc
jecxz
push
inc
cmp
jns
insl
sbb
xor
in
xor
cmp
xchg
xchg
pop
imul
xchg
fsts
xor
xchg
jg
movsl
fiadds
jge
sub
sbb
pop
clc
dec
sub
mov
dec
leave
cmp
lret
push
xor
out
push
roll
arpl
arpl
loopne
movsb
aam
cltd
mov
gs
cmp
mov
jl
loop
stos
scas
in
jmp
loope
idiv
test
pop
aam
pusha
jnp
xchg
test
sbb
in
popa
stos
mov
cmp
jbe
hlt
pop
jmp
jecxz
int
add
mov
das
lret
pop
repz
outsl
xor
push
outsb
jecxz
inc
incb
shl
lahf
fldl
outsl
ret
or
cmc
jns
jns
out
shll
mov
push
sub
push
aam
scas
xchg
xor
fidivrs
ss
ret
cmp
test
imul
sar
mov
in
cltd
dec
push
and
adc
adc
xor
inc
jp
scas
loop
iret
or
das
pop
xchg
pop
sub
pop
pop
enter
xchg
loop
std
in
movsl
imul
or
mov
xchg
addr16
jae
outsb
sbb
popl
mov
xor
arpl
or
xor
int3
imul
int
hlt
into
mov
flds
pop
addr16
out
int
mov
pop
lcall
hlt
or
orl
shrb
push
arpl
mov
mulb
jg
enter
shrl
lds
mov
jne
outsl
dec
fdivrp
mov
add
mov
lret
xchg
imull
jl
loopne
repz
mov
push
scas
push
lods
popa
push
ret
mov
cmp
fistl
add
cmp
jg
getsec
mov
lock
bound
ret
add
out
js
sbb
cld
ret
sti
daa
mull
fmuls
stos
out
sti
in
mov
les
sbb
negb
xchg
fimuls
mov
inc
sub
add
call
test
aam
outsl
cld
sbb
ljmp
outsl
inc
push
mov
mov
ljmp
adc
shrb
inc
ja
xchg
aaa
test
das
jo
pop
jo
loop
shl
aad
stos
xchg
push
xor
jns
or
mov
adc
jp
ja
bound
and
and
push
out
stos
sub
imul
push
jmp
int3
fwait
mov
std
pop
pop
or
xor
clc
sbb
stos
lret
adc
addb
jl
cmp
adc
dec
mov
daa
pop
in
mov
jge
jge
jne
in
cmp
mov
xor
jp
insl
cmpsl
and
fs
icebp
scas
xchg
pop
xchg
add
mov
jns
adc
sti
jnp
sti
mov
sub
pop
stc
outsb
jns
push
lds
push
iret
repnz
dec
jl
jge
ja
mov
in
push
fucompp
mov
mov
xchg
adc
jnp
cmpsl
jle
arpl
mov
cmp
adc
repz
stos
mov
cmpsb
cld
divb
mov
das
imulb
jl
jge
jae
out
mov
and
cmp
mov
dec
rcr
sub
insb
adc
insl
rcrl
add
jae
std
add
jne
adc
enter
inc
rcrl
inc
cwtl
inc
fs
sbb
scas
in
es
mov
jbe
xchg
in
or
mov
push
out
aas
jmp
loop
not
fistpl
aas
out
int3
call
dec
loope
mov
xchg
inc
mov
push
test
ss
int3
call
ja
or
ret
jbe
std
adc
sbb
inc
jecxz
mov
int3
div
push
jmp
cmp
outsl
out
ss
es
out
mov
mov
fwait
sbb
xor
dec
xchg
movsb
rcrl
sbb
popa
in
and
out
xlat
addr16
fdivl
or
push
test
sarl
popa
mov
cmpsl
jg
sbb
xchg
xor
subb
dec
fimull
pop
xchg
cmp
sahf
xchg
cmp
mov
mov
dec
cmpsb
fmull
fimuls
in
pop
rcrb
mov
outsl
add
pop
in
rcr
pop
cmc
or
inc
push
les
and
jl
xor
mov
mov
movsb
cld
mov
inc
adc
in
fs
adcb
out
lods
jns
sbb
movsl
jmp
cld
sub
shlb
fisubl
dec
mov
imul
or
push
mov
mov
outsb
and
sarl
ficoml
mov
add
jle
dec
sahf
and
adc
out
loop
call
jbe
insl
push
sbb
rcrb
add
mov
fdivl
call
mov
sbb
xchg
lea
xchg
cmp
sti
mov
leave
jns
ss
or
fldl2e
ret
roll
cwtl
pop
pop
dec
or
cmpsb
add
xor
xchg
xchg
sub
and
fdivr
fnsave
adc
repz
cmpsb
xchg
and
notl
not
adc
push
test
int3
add
sahf
std
inc
mov
test
mov
push
std
pop
icebp
cmpsb
sarl
loopne
cmpl
jno
cli
js
and
sub
rol
mov
xchg
icebp
in
pop
push
addr16
shr
dec
lret
xchg
scas
popa
inc
dec
cld
out
push
lar
popl
repz
pop
or
repz
xchg
ja
pop
popf
stos
inc
jnp
sub
stc
sti
add
mov
mov
add
xchg
xchg
daa
ss
bound
jae
jbe
jge
push
jnp
popa
sti
jecxz
mov
cmpsl
add
insb
imul
notl
xchg
lcall
cltd
push
cld
ljmp
mov
sub
pop
aaa
mov
cmp
or
lahf
sub
std
fstpl
xchg
mov
lods
sbb
lds
jns
and
dec
cwtl
popf
inc
cmp
mov
sbb
adc
cmc
es
popa
jp
pop
mov
imul
mov
scas
scas
mov
mov
pop
cmp
outsl
add
icebp
dec
gs
mov
adc
cwtl
outsl
pusha
out
xchg
mov
in
mov
pop
xchg
cmp
les
iret
shll
rcrl
xor
sub
mov
inc
push
push
pop
pop
sub
je
ret
orb
mov
pop
sub
jge
pusha
rcrl
xor
cmp
aam
lcall
push
out
lods
in
pop
pop
cmp
pop
fisubrs
dec
pop
pop
fidivrs
mov
fistpll
fsubl
inc
scas
in
mov
pop
mov
cltd
scas
fnstenv
dec
je
data16
icebp
lea
xchg
and
data16
push
lret
movsb
loope
sbb
iret
push
test
and
gs
cmp
repnz
cmp
lcall
jnp
imul
int
sbb
mov
add
jae
in
fsub
filds
scas
rcr
ret
loope
cmpsl
cmpl
push
jns
popf
cmpb
mov
adc
sbb
push
ja
les
adc
sbbb
inc
jl
call
out
or
fadds
imul
shrl
xchg
std
mov
or
cli
icebp
loope
jae
in
mov
ljmp
clc
dec
jnp
shr
loopne
add
in
inc
dec
into
and
aas
pop
decb
inc
adc
xlat
xchg
mov
jp
decl
xor
inc
movsl
cmp
or
dec
repz
jb
xchg
adc
popa
push
notl
cmpsl
cltd
in
xchg
xor
je
ret
push
jae
pop
sti
dec
xlat
fadd
cmp
call
sti
xchg
fdivs
mov
scas
negb
pushf
inc
mov
mov
cltd
dec
sarl
lds
xchg
or
sbb
shll
jno
push
cmc
inc
mov
inc
dec
std
adc
jo
clc
repz
add
lods
or
add
fwait
jne
sub
outsb
pop
mov
push
push
aas
push
dec
fiadds
or
cwtl
imul
sti
lret
mov
outsb
jmp
gs
mov
dec
aad
neg
or
in
xchg
ret
ds
pop
loope
leave
out
in
addl
bound
mov
xchg
cld
ror
mov
sub
mov
inc
push
lock
icebp
nop
lret
arpl
dec
lcall
fstpt
xor
adcl
mov
test
in
fistpll
fadd
mov
arpl
js
int3
lock
test
inc
sbb
bnd
cmp
cwtl
mov
flds
push
sbb
ficomps
pop
cwtl
popa
mov
or
dec
jge
lret
sub
mov
dec
bound
push
add
mov
inc
add
inc
mov
addr16
mov
push
rsqrtps
repz
fidivl
jl
in
inc
imul
mov
loope
outsb
stos
pop
push
sub
mov
aam
scas
push
adc
ja
jno
mov
mov
testl
adc
pop
pop
or
cmp
loopne
popf
test
inc
sub
fsubrs
rcll
sbb
jl
stc
dec
cwtl
pushf
subb
gs
mov
movb
out
jecxz
jecxz
xor
cli
mov
jb
mov
movsl
test
mov
fldenv
bound
cli
out
jp
idivl
add
xchg
pop
pop
sbb
inc
dec
int3
cwtl
outsb
sahf
cmp
jbe
add
std
jno
jge
jnp
mov
inc
mov
push
outsb
xchg
les
aaa
ds
adc
test
push
enter
or
decb
rclb
imul
scas
mov
fucom
add
mov
mov
push
filds
mov
mov
add
xor
or
data16
push
sbb
inc
adc
cmp
int
ror
mov
outsl
in
ja
push
push
cmp
popa
ds
sbb
inc
jmp
push
or
or
jmp
push
xor
ja
mov
push
inc
mov
cmpb
mov
adc
out
les
notl
adcb
dec
je
pop
or
and
cs
sub
jae
xor
rcl
test
hlt
std
add
inc
dec
repnz
test
ds
cmpsl
loope
pop
mov
mov
ficoml
or
mov
popf
std
jne
sbb
insb
jno
sub
outsl
subl
gs
dec
stc
movb
and
xlat
cmp
or
xchg
outsl
sbb
cmpsl
es
call
test
mov
les
adc
jp,pt
cmp
fisubrl
xchg
lahf
pushf
lahf
mov
sahf
add
push
mov
out
subb
mov
mov
fisttpll
icebp
subb
push
test
push
add
addr16
es
push
dec
and
loop
out
sti
outsb
out
fisttpll
insb
lods
pop
fdiv
adc
xor
mov
jl
aad
fstpt
adc
and
xchg
iret
adc
movsb
cmpxchg
cmpsl
mov
sbb
push
push
sahf
mov
and
iret
or
xor
pop
out
movsb
outsl
mov
loope
fists
lret
inc
outsb
test
clc
je
push
sbb
test
adc
or
xorb
subl
test
cmp
mov
cmp
sub
push
pop
clc
mov
add
loope
scas
clc
xchg
cmpsb
and
mov
push
mov
shll
dec
je
cmc
cmp
je
call
mov
inc
mov
inc
mov
nop
or
cmpsb
sahf
add
jp
and
mov
sub
cli
sub
lods
test
loopne
mov
pop
call
ds
int
mov
push
fisubrl
sub
pop
sub
cmc
movsb
mov
and
fs
rolb
jecxz
arpl
sti
icebp
inc
mov
test
nop
jo
ljmp
inc
mov
push
mov
xor
mov
jbe
or
cmp
cltd
push
push
push
sbb
mov
rorb
testb
push
inc
or
pop
inc
mov
lcall
sahf
shl
outsl
mov
sbb
ret
sahf
fwait
pop
imul
insl
rcr
mov
mov
pop
jl
xchg
cli
lods
lret
cwtl
iret
mov
in
fisubrl
dec
js
test
aas
mov
ja
sbb
jae
cmp
jbe
cmc
or
sahf
pusha
xchg
popf
push
inc
in
and
fwait
rcrb
xchg
cmp
into
and
jg
jo
or
push
adc
js
cwtl
lahf
jno
popf
or
and
push
mov
inc
ljmp
xor
push
in
push
nop
dec
mov
rcrb
jb
pop
cmc
mov
push
notl
nop
pop
sahf
push
std
pop
jp
loopne
imul
repnz
out
repz
nop
rcrb
sub
lds
xor
dec
inc
sub
inc
outsb
mov
cwtl
jecxz
add
dec
retw
negl
cltd
jnp
imulb
jmp
push
and
fdivrl
clc
sbb
mov
add
cmp
imul
cmp
jae
jae
jno
jl
daa
stc
and
cmpsl
jge
xor
mull
adc
jns
mov
push
divl
jmp
stc
test
jne
enter
cmp
push
gs
inc
push
test
cld
sub
mov
add
out
outsl
and
xchg
les
xchg
test
push
lock
je
cwtl
xchg
push
sub
nop
stos
mov
je
in
loope
jne
in
adc
sbb
jmp
mull
adc
rorb
pop
dec
clc
jmp
jo
cmp
sbb
mov
mov
or
rcrl
test
and
mov
jno
sub
lcall
orl
add
mov
mov
fmuls
lds
fisttpll
push
sub
outsb
insb
dec
dec
xor
mov
and
cld
pusha
stc
fwait
mov
ffreep
insl
cmp
add
fldl
stos
cmp
jo
fwait
mov
push
adc
push
or
bound
jmp
add
or
cmp
jo
mov
push
jg
in
ja
hlt
inc
daa
repz
lcall
sbb
jg
xchg
int
ja
push
xlat
push
jb
pop
push
mov
or
pop
sbb
jns
mov
jg
mov
add
icebp
sbb
mov
lds
fmul
in
cmp
int
icebp
dec
add
dec
push
hlt
or
mov
cltd
jg
arpl
mov
nopl
mov
shll
add
xor
ja
inc
idiv
xor
and
xchg
shlb
in
and
jo
pop
jge
add
jno
sbb
mov
test
sahf
popa
sbb
inc
jae
cmpsl
push
idiv
test
and
dec
pop
mov
xchg
add
xchg
ja
je
push
xchg
nop
mov
mov
ljmp
mov
push
push
inc
xor
ljmp
add
outsl
mov
jb
xlat
je
push
in
pop
out
ret
test
rcrl
pushf
lock
and
cld
inc
pop
test
pop
mov
xchg
push
stos
inc
and
mov
mov
orl
cmp
adcb
test
dec
ret
sub
add
sub
outsb
cmc
shl
mov
and
fidivrl
pop
rcrl
cltd
and
or
sti
cmp
in
pop
mov
mov
jp
xlat
sbb
sbb
je
sub
insb
rcrl
mov
xlat
nop
xlat
cwtl
fs
aad
mov
mov
int
pop
hlt
sbb
leave
outsb
ds
add
fstpl
mov
nop
notl
jmp
inc
xor
fcomps
cmc
pop
cmc
test
pop
lahf
rorb
call
and
push
icebp
fmull
loopne
cmc
push
sahf
sti
les
mov
jmp
popa
cmpsb
inc
pop
mov
shlb
xor
dec
test
andb
aad
xchg
fiadds
orb
pop
cli
dec
lretw
test
add
ret
mov
pop
outsb
fcomps
pop
pop
repz
mov
ret
movsl
dec
dec
insl
mov
gs
jge
jb
dec
cld
sub
popf
mov
cmp
popf
sbb
mov
push
jns
cmp
jbe
test
int
inc
fstpt
sbb
fdivrs
mov
jmp
test
dec
lock
ret
push
pop
test
popf
sbb
sbb
fldl
std
xchg
mov
and
mov
pop
mov
cld
shl
rorl
mov
clc
sti
sub
jecxz
std
movsl
sti
imul
out
addr16
pop
loopne
ret
leave
sahf
imul
fnsave
cmp
cmpsl
nop
sbbb
clc
call
pop
pop
jmp
xchg
daa
mov
xchg
cmp
jmp
in
enter
stc
test
jnp
das
mov
ljmp
sbb
cmp
or
aas
push
xchg
dec
xorb
dec
ret
mov
cmc
stos
adc
lcall
not
mov
add
push
pop
fmull
pop
sbb
mov
sub
insl
jne
or
rcrl
fcmovu
lock
push
sub
dec
sub
jmp
xchg
outsl
fs
cmpsl
jo
in
mov
loope
sbb
sub
pop
test
pop
jb
in
sbb
mov
gs
jecxz
into
ret
xor
push
pop
and
jnp
iret
pop
fmulp
cmp
adcb
mov
jae
div
xor
cwtl
sub
add
call
push
push
sub
pushf
aas
in
jl
cmp
ljmp
mov
inc
mov
mov
leave
iret
int
lds
pop
xorb
inc
jmp
xchg
subl
mov
lock
std
sbb
stos
stos
rcl
lods
popf
mov
leave
ret
or
lret
cmpb
test
repnz
mov
cmp
dec
cld
repnz
lcall
and
mov
sbb
pinsrw
inc
jb
mov
mov
xor
inc
xor
jo
mov
mov
cmpsb
movl
addr16
or
in
cmc
mov
dec
in
clc
mov
push
push
fdivl
clc
sbb
cmp
jae
in
cmp
mov
ficoms
fcomps
pop
testb
outsl
jae
data16
ds
cltd
push
xor
in
mov
mov
ss
mov
in
cltd
movsl
pop
pmullw
ret
data16
jae
mov
ss
ss
ss
ss
sbbl
rcrl
fstps
dec
lock
sbbb
adc
sti
leave
dec
rcrl
push
cmp
out
cld
jnp
cmp
test
or
mov
jbe
andb
into
xor
repz
sub
pop
cwtl
cmc
or
in
shll
lods
and
ret
and
push
mov
loopne
getsec
jmp
dec
in
test
out
add
leave
xchg
iret
push
inc
mov
cmpsl
subb
sbb
push
lock
sti
mov
rolb
out
aam
jbe
or
sahf
or
rcrl
std
movsl
idiv
xor
jbe
mov
insl
or
push
sbb
push
mov
notl
es
rorb
bswap
mov
ja
and
jmp
push
call
popf
je
pop
pop
push
mov
inc
or
push
cmp
nop
mov
inc
xchg
push
xor
mov
divb
ret
adc
pop
jmp
mov
cld
cmp
cmpl
push
repnz
shl
subb
add
mov
mov
cltd
aad
dec
bt
mov
sub
arpl
jb
in
push
mov
lret
notb
insl
scas
fisttps
dec
out
rclb
jns
scas
push
mov
scas
call
lahf
out
pop
inc
mov
sbb
mov
scas
dec
sbb
in
sti
dec
mov
sahf
xchg
out
leave
insl
xor
aam
ret
pop
and
inc
pop
mov
addr16
ret
xchg
out
leave
dec
call
fstpt
pop
jb
pop
cld
pop
popa
in
movsl
xor
adcl
out
jne
bound
inc
push
pop
dec
cmp
sub
mov
and
pop
or
shll
mov
movsb
adc
xor
push
in
aaa
repz
jbe,pt
push
out
jbe
les
sub
notb
por
xchg
rcll
add
sub
mov
add
imul
cld
and
jae
jne
sub
call
rorb
loopne
shl
xchg
mov
outsl
pop
fidivl
xor
inc
adc
pop
es
fadds
jns
popa
push
mov
pop
and
dec
mov
jae
in
clc
fildll
inc
push
hlt
pop
dec
pop
mov
push
cmc
adc
ds
negl
mov
gs
jle
jo
and
mov
pushf
push
or
push
dec
mov
and
cmp
pop
cmp
xchg
add
sahf
push
push
mov
out
add
lret
std
arpl
stc
es
push
jo
cmpsb
sub
je
mov
jae
mov
xor
mov
push
ss
int3
cmp
call
cld
xchg
icebp
dec
xchg
cmp
mov
aas
jae
and
out
sub
and
icebp
in
sti
mov
pop
stc
or
testl
dec
mov
pop
jno
cmp
add
bound
lcall
js
psllw
in
sti
xchg
shll
jb
and
mov
leave
adc
jg
inc
cli
loopne
loop
stc
xor
into
mov
and
xchg
repnz
popf
lahf
sbb
xor
enter
lret
icebp
add
inc
mov
lea
cltd
mov
cmp
rcrl
test
and
negl
cmp
pop
addr16
lds
jae
pop
mov
cli
int
pushf
cld
sbb
jb
int
ret
enter
mov
jmp
push
jl
dec
mov
cld
mov
inc
push
test
das
sub
mov
sti
insb
dec
iret
mov
fdivrl
popa
push
mov
adc
mov
dec
loopne
cmp
mov
cmpsl
stc
cli
call
sarl
inc
jle
mov
stos
lods
bound
mov
cmovs
pop
in
imul
cli
or
rcr
lahf
shr
mov
aam
sub
scas
lds
test
mov
mov
je
sbb
xor
mov
imul
cli
add
repz
pop
fs
hlt
jp
or
iret
xor
push
outsb
scas
out
test
xchg
in
adc
xchg
sti
ret
repnz
mov
jno
repz
adc
xlat
pop
in
das
and
pop
mov
lea
lcall
dec
mov
imul
inc
inc
adc
fistpl
packsswb
lahf
roll
add
iret
jbe
mov
or
sbb
dec
int3
ret
pop
aam
jl
shrl
sub
insb
dec
fdivl
cmpsl
cmpsb
pop
outsb
faddl
pushf
lods
or
cld
sbb
push
lret
insb
lods
out
xchg
xchg
mov
push
das
pop
ljmp
ficoms
inc
jp
sbb
out
mov
jmp
dec
xchg
jmp
mov
mov
jg
cli
sbb
jle
inc
pop
lret
push
das
cs
nop
xchg
cmc
sub
mov
cmp
xchg
push
test
xor
insw
lods
gs
push
lret
sub
enter
imul
out
sahf
pop
out
test
imul
xchg
repnz
push
fcoms
push
dec
lea
jae
shll
imul
insl
popf
sbb
jb
mov
mov
pop
push
hlt
fmulp
adc
sarb
lahf
pop
test
mov
xlat
mov
jo
sbb
cmp
mov
inc
es
jbe
jecxz
ret
sub
mov
add
adc
int
mov
test
es
ja
imul
out
test
cmpsb
stc
stc
out
mov
jg
inc
or
lea
or
fbld
add
repz
xor
sbb
cmp
subb
jge
inc
mov
push
mov
and
pop
pmaxsw
push
lds
pop
push
adc
mov
xchg
lock
jne
ss
stc
je,pn
movsl
stc
push
mov
push
xchg
xor
mov
dec
cmovns
jbe
cmp
pop
das
rolb
jb
lods
or
pop
lret
addr16
inc
pop
insb
iret
ror
dec
ret
insb
mov
cmpsl
fs
aam
and
adcb
pushf
incb
fldl
or
out
and
and
out
popa
adc
xchg
xchg
int3
cmp
enter
jne
int3
jae
cmp
pop
adc
and
jl
inc
jge
negl
mov
mov
outsb
xor
lods
call
dec
test
iret
popa
dec
fwait
ret
fwait
shrl
adc
test
aam
mov
jnp
imull
out
add
mov
inc
fs
aas
jle
aad
aaa
push
call
mov
aam
in
push
inc
push
ficoml
ret
ficoms
jns
movsl
add
mov
push
cmc
mov
incl
rol
jg
xchg
inc
dec
mov
sahf
test
sbb
int
jb
jne
stos
jnp
mov
inc
adc
lret
fisttps
xchg
out
scas
fwait
pop
ret
push
mov
or
pop
stc
fsts
in
xor
loope
cmpsb
in
add
loope
das
out
sub
jg
cli
and
out
jo
xor
dec
push
mov
ret
sbb
fidivrl
ret
lods
mov
addr16
dec
aas
inc
cmp
jp
std
loope
mov
sub
and
test
cmp
in
xchg
dec
notl
sub
jl
fidivrs
lret
push
rcrl
idivb
rcr
mov
outsb
data16
jl
mov
pop
lcall
in
pop
add
and
lcall
sbb
lcall
push
popa
fmull
gs
loope
sbb
hlt
and
clc
push
mov
fs
into
lcall
stos
std
push
inc
sti
fs
data16
rcrb
into
jge
pop
pop
sbb
mov
outsl
mov
or
pop
fs
xor
cli
hlt
mov
adc
jo
addr16
das
sahf
or
aas
mov
cld
pop
jmp
inc
data16
es
movsl
cld
mov
mov
repnz
stos
iret
mov
or
pop
xor
fucom
aad
decb
or
in
sub
push
int3
mov
cmp
push
xchg
push
cmp
leave
movsb
sub
pop
jp
fnstcw
adc
and
fcmovb
cmpb
lahf
push
pop
sbb
je
imul
sub
sbb
xor
lds
das
bound
sub
pop
hlt
cwtl
int
mov
mov
xor
mov
xchg
iret
mov
cmp
mov
mov
mov
mov
jl
call
lret
mov
scas
sub
adc
je
add
fs
dec
mov
push
dec
js
decl
pushf
fdiv
int
pop
loop
adc
and
xor
les
pop
xor
xor
xor
das
sub
js
aas
mov
cmpsl
mov
scas
xor
test
lret
xchg
xchg
rcrb
ljmp
orb
std
push
lock
loop
jg
push
stc
loope
sti
sub
mov
loopne
sbb
aaa
in
jo
and
shr
movb
inc
sub
sub
pop
repz
pop
sti
aam
sub
sbb
pusha
and
sti
insl
fstps
fadds
xor
lds
imul
scas
dec
push
fs
into
std
xor
test
cmpsb
clc
add
and
cld
push
imul
cld
out
push
fnstenv
pop
sub
jmp
xlat
bound
ret
lds
lcall
sbb
or
dec
sti
mov
jg
fucom
mov
out
xchg
addr16
lods
not
mov
mov
mov
data16
xchg
jle
rclb
les
xor
hlt
push
and
xor
jecxz
mov
xrelease
fnstcw
mov
outsb
cmp
repnz
cwtl
cmp
push
jge
adc
xor
scas
stc
adc
mov
jne
xor
dec
jae
stos
mov
cmp
fndisi(8087
popa
outsl
mov
or
rcrl
daa
jge
mov
mov
mov
faddl
jnp
sbb
xor
mov
sub
xchg
mov
jns
pop
and
pop
les
daa
lods
dec
ljmp
mov
dec
je
inc
cltd
mov
jns
aam
push
das
add
inc
pop
data16
cmpsb
cmp
mov
idivl
push
xor
xchg
outsb
push
pop
stos
cmp
outsl
je
jae
cmp
pop
lahf
dec
cmc
mov
and
dec
pop
or
sbb
daa
push
dec
int3
push
filds
jb
ds
in
cmc
xchg
scas
inc
pop
jl
imulb
in
scas
aad
scas
cmp
mov
hlt
inc
popf
ja
out
fnclex
aaa
iret
outsb
xor
mov
cmp
jo
jnp
insl
xor
pop
xchg
mov
adc
jnp
add
mov
mov
sarl
hlt
ret
jmp
repz
lock
dec
cmp
and
pop
sbb
lds
xor
push
fcoms
mov
insl
add
call
jmp
arpl
and
stos
shll
rolb
push
jg
pop
out
cmpsb
popf
xor
scas
insb
add
stc
inc
test
fstl
data16
xor
enter
lret
mov
cmp
cld
bound
push
pop
xor
jne
out
test
adc
sbb
pop
out
ret
into
adc
cmp
and
js
clc
sbb
imul
inc
insl
push
adc
hlt
outsl
and
aas
out
aam
in
fcomi
dec
js
sbb
jae
and
enter
pop
and
outsl
inc
add
add
xor
iret
sub
or
js
gs
or
adc
bound
imul
mov
and
fimull
in
mov
xchg
jp
repnz
mov
jmp
loopne
mov
xchg
outsb
sbb
mov
not
push
mov
inc
push
pop
aad
test
inc
lcall
outsb
add
push
lea
lcall
sub
xchg
test
or
add
enter
adc
mov
cmp
jg
roll
and
pop
cltd
cld
pusha
movl
inc
mov
les
in
mov
call
push
add
mov
xchg
cmp
int3
adc
adc
aas
mov
ret
mov
rcr
mov
xlat
mov
nop
add
in
mov
test
call
test
fxch
sbb
cmpsb
movsl
jbe
cmpsb
cmpb
push
jns
push
or
loop
adc
test
mov
lret
loop
aam
mov
pushf
movsl
add
add
stos
aad
stos
movsl
stos
insb
stos
pop
add
ror
push
fsts
sbb
scas
xchg
pop
xor
jns
or
push
cmc
sub
lret
jmp
fsubrs
mov
jo
and
bnd
xorl
lret
arpl
push
xor
fimull
mov
ret
mov
xor
pop
dec
mov
xchg
jp
pop
sahf
pop
jg
das
filds
fs
and
stos
scas
into
iret
movsb
into
jns
dec
xlat
cli
pop
cmp
inc
xchg
mov
mov
outsb
into
adc
fistpll
xlat
addr16
ss
mov
imul
mov
loopne
ret
mov
jnp
cmc
je
jno
push
cmpsl
mov
mov
jle
movsb
jl
imul
es
sub
call
dec
outsb
lock
pop
sarl
mov
sub
scas
cs
cmp
mov
movsl
sahf
imul
cmpsb
jle
popf
mov
addr16
popf
mov
jecxz
push
fldcw
jae,pn
imul
mov
xchg
cwtl
std
sarb
or
jg
cld
enter
pop
jge
or
jmp
jl,pn
sbb
aaa
jo
mov
push
leave
repz
jo
push
inc
neg
shl
or
rcl
and
inc
dec
mov
push
sub
pop
adc
test
fsubr
fildll
xchg
sub
stc
lret
pop
loop
stos
out
stos
rclb
popa
insl
add
dec
xor
loopne
decb
loopne
lret
pop
mov
movsb
push
dec
or
xor
add
ss
cmpsl
insb
cld
pop
pop
aad
dec
aas
jp
xor
in
loopne
jmp
jmp
add
stc
mov
aaa
int
sahf
pop
ss
pop
int
je
mov
sbb
xorb
jp
mov
push
les
sti
mov
or
xor
shll
push
int
movsb
sub
push
inc
out
dec
pop
inc
in
arpl
fdivl
sub
push
jbe
ds
ja
mov
sbb
jg
or
shlb
jl
dec
into
mov
jmp
cwtl
xor
xor
es
div
add
ja
jno
out
mov
sub
jne
mov
mov
pushf
leave
test
pop
sti
mov
cld
mov
subb
inc
outsl
pushf
mov
gs
je
les
dec
scas
popa
sub
xchg
cmp
pop
xchg
jg
insl
mov
lea
lock
mov
push
mov
stc
iret
and
rorb
cli
and
adc
mov
sub
xor
xchg
cmp
push
sbb
adc
jbe
lcall
stos
dec
fistpl
mov
int
sbb
xchg
cmp
jno
sub
sbb
outsb
in
mov
inc
lods
std
mov
pop
out
das
popa
sahf
fnstsw
xchg
jle
jge
adc
pop
sub
cmp
aaa
mov
cmp
jb
mov
jae
sub
arpl
add
jecxz
cmp
mov
sti
movsb
push
scas
jp
xor
fmull
mov
sti
ret
pop
ds
inc
ja
pavgb
pop
sti
or
in
push
sbb
outsl
adc
adc
scas
out
data16
je
lods
int3
out
dec
pop
mov
sbb
add
mov
mov
dec
jmp
iret
rolb
ficompl
testb
pop
test
sbb
xor
sbb
ds
cmp
mov
dec
mov
rorb
stc
shr
leave
out
shl
cmpsl
push
pop
mov
mov
movsl
add
ds
stc
pop
push
push
pop
fidivl
mov
inc
repz
aad
adc
or
mov
jp
fisttps
adc
je
outsb
std
mov
sub
xchg
or
lahf
pop
pop
sbb
mov
out
jno
aaa
repz
jl
jne
sti
lcall
aaa
into
outsl
stos
xor
je
jbe
out
int
xchg
pop
jge
jo
insb
jb
and
and
xchg
jns
jge
dec
fbstp
ja
aas
sbb
in
inc
xchg
mov
imul
in
mov
jg
bound
test
dec
jle
adc
ds
xor
dec
lods
mov
or
cmp
imul
ficoms
mov
mov
or
stc
testb
push
leave
das
mov
ret
push
inc
ds
sub
jecxz
mov
insb
dec
jecxz
neg
shlb
out
sahf
rcll
imul
push
xchg
imul
negb
pushf
sbb
jae
in
out
lods
fdivr
mov
out
sbb
pop
lahf
aam
icebp
aas
push
add
adcl
xor
push
hlt
pop
rcrl
bnd
mov
arpl
pop
jmp
cli
jp
test
aad
xor
daa
pop
clc
adc
mov
std
mov
enter
stos
int3
bound
mov
xor
fsts
dec
lret
imul
mov
cli
mov
gs
dec
xchg
pop
dec
rcrb
loop
xor
dec
xchg
xchg
addr16
xchg
mov
lcall
add
lds
dec
xchg
mov
dec
xor
js
test
xchg
sbb
dec
test
sbb
dec
cmp
es
pop
aam
shrb
jp
notb
testl
outsb
mov
pushf
dec
dec
adc
movsb
sub
testb
push
jo
repz
sbb
les
pop
fsubrp
and
insl
and
jle
push
hlt
test
test
inc
push
stc
push
imul
shrl
movsb
pop
push
and
fsubrs
dec
cmp
shufps
stos
mov
in
fcmovnu
mov
aaa
shll
cli
mov
sbb
fst
push
lahf
and
int
fsubrl
mov
nop
mov
fnstcw
cmp
add
jle
loope
data16
pop
enter
enter
sbb
xlat
fbstp
lods
add
leave
push
lods
cld
imul
popf
jnp
stos
loopne
fdivrl
xlat
pop
ret
mov
and
cmc
mov
xchg
arpl
in
int3
arpl
roll
loopne
xchg
out
inc
mov
dec
and
mov
dec
scas
xchg
push
je
xor
cmp
ss
je
jmp
popf
iret
cmp
add
push
xchg
std
push
and
and
mov
std
dec
lret
loopne
sbb
aam
adc
fisubrl
outsb
xor
cmpsb
adc
addr16
fiadds
inc
sahf
xchg
sub
mov
push
das
sbb
inc
sbb
jl
ds
sti
inc
push
mov
imul
sbb
clc
push
push
out
push
stc
push
cli
push
ljmp
aad
cwtl
enter
jmp
cltd
adc
scas
cmpsb
pop
dec
jge
out
push
inc
cld
loope
mov
fdivl
xor
dec
ljmp
push
call
idivl
and
push
repz
mov
push
fisttpll
in
and
mov
sub
xor
jb
add
lods
pushf
inc
scas
mov
das
testl
fidivs
mov
sbb
cmpsl
mov
repz
cld
xor
out
push
call
jmp
add
or
loop
jg
insb
scas
mov
fs
jns
and
inc
repz
es
addl
adc
inc
or
or
xor
push
scas
or
ds
cmp
jno
std
repnz
sub
leave
in
rcr
mov
dec
push
inc
and
mov
push
mov
push
fidivs
sbb
lahf
mov
adc
cmp
addb
sbbl
push
adc
and
dec
je
jg
push
xchg
adc
pop
negl
xchg
and
popl
jg
push
sbb
rorb
inc
rcl
inc
movsb
mov
mov
out
and
push
in
popf
inc
and
out
addr16
mov
test
out
pushf
inc
jmp
sub
push
mov
mov
push
mov
or
jae
push
in
sub
test
shr
push
mov
fs
das
mov
pop
enter
push
leave
ret
loopne
das
adc
popl
mov
pop
cmp
int
and
push
inc
data16
rcl
mov
fisttpl
fisubs
ja
dec
addr16
pop
lahf
fs
into
dec
jle
sbb
std
jb
sub
push
les
jb
xor
adc
push
and
inc
cmc
mov
jb
dec
cltd
insl
imul
or
enter
push
hlt
fmuls
aaa
jae
repz
outsl
subb
insl
xchg
pushf
lcall
data16
nop
mov
stos
push
rcll
sub
subb
xor
in
adc
mov
mov
add
inc
aam
adc
and
or
in
mov
test
add
adc
add
or
push
lds
inc
push
dec
stos
ljmp
sti
ljmp
out
sti
addr16
out
scas
out
fdiv
mov
iret
imul
mov
jnp
fwait
sbb
addr16
insb
jae
lcall
outsb
mov
int
jle
repz
mov
sti
fisttpl
mov
cmc
cmc
popf
ja
jle
sub
ljmp
dec
push
xchg
adc
pop
call
iret
inc
dec
daa
mov
popa
inc
scas
mov
call
daa
js
mov
popa
xchg
sub
bound
data16
inc
stos
xchg
insl
sbb
mov
mov
int
outsb
lock
lds
xchg
cmp
dec
mov
loop
out
pop
mov
loop
ljmp
pop
scas
sub
sarb
hlt
js
xchg
jo
mov
cmc
cmp
hlt
gs
adc
inc
sahf
pop
in
sub
test
call
ret
and
xchg
ss
in
imul
call
out
jmp
es
stc
call
cmp
jp
cli
cmp
sar
sub
rorl
push
sub
enter
push
rorb
movsl
lods
sub
insl
iret
int
lret
sbb
adcl
jecxz
sti
cmp
in
lahf
jle
insl
inc
push
add
clc
ja
int3
adc
mov
loopne
cmp
xlat
push
xlat
push
or
ljmp
scas
mov
pop
es
dec
mov
mov
std
cwtl
mov
cmp
and
pop
sar
jmp
insb
mov
fiadds
sub
mov
push
call
xor
sbb
popf
xor
xchg
add
cmc
rcrb
ljmp
dec
pusha
xor
pop
inc
cmpsl
sbb
mov
repnz
cmp
rorl
aam
dec
movsl
or
xchg
ss
scas
lcall
aam
mov
cli
push
lahf
jo
in
dec
jle
dec
mov
inc
dec
adc
testb
and
pop
push
out
sub
sub
and
push
mov
inc
mov
sbb
mov
mov
shll
fldl2t
mov
push
loopne
arpl
clc
enter
movsl
aam
pop
inc
movsl
and
rcrb
jns
popf
pushf
cmpsl
cltd
sub
lret
lahf
jo
int
cld
ret
dec
cli
push
into
adc
inc
cmp
dec
test
mov
or
popf
insb
cmpsl
mov
and
lret
test
dec
push
mov
stc
dec
dec
push
xchg
cmc
add
push
test
ljmp
pop
cmpsl
lcall
notl
lahf
inc
push
ja
out
mov
iret
enter
repnz
rcll
gs
aam
popf
xchg
xchg
popf
dec
cmpsl
adc
xor
fs
xor
into
mov
imul
sahf
js
adc
imul
inc
repz
sub
mov
dec
sbb
test
cmp
push
in
mov
and
pop
push
out
aas
js
mov
mov
jle
pop
lods
xchg
test
sub
jns
mov
cmc
in
ficoms
inc
mov
push
int3
xchg
cmp
in
imul
pop
cwtl
xchg
cmp
push
out
jmp
sub
hlt
mov
xchg
cmp
mov
push
int3
xchg
cmp
in
imul
pop
cwtl
xchg
cmp
push
out
jmp
sub
or
sub
movnti
jmp
js
addr16
nop
sub
aad
pop
and
inc
icebp
add
fcmovnbe
jnp
cmp
test
imul
pop
frstor
xor
mov
xor
or
cld
std
cmc
jl
push
jnp
cmp
sahf
jmp
cmp
jo
jnp
mov
push
jnp
jns
sahf
jmp
stos
iret
jne
shlb
sti
rcll
in
xlat
into
ficompl
mov
adc
mov
fwait
jmp
testl
and
cli
fiaddl
and
sti
out
fistps
mov
shlb
sub
lock
push
std
imul
les
inc
out
mov
movsb
negl
test
in
fildll
hlt
xchg
mov
cli
xlat
add
nop
mov
push
sbb
dec
add
adc
fcoms
add
lahf
xchg
mov
mov
jmp
add
mov
dec
lcall
dec
mov
jmp
cmpb
mull
test
repnz
sti
and
fdivrl
fistpll
test
rolb
mov
fidivs
loope
xchg
out
pop
push
jnp
cld
cmp
repnz
cmovle
lret
rclb
test
and
mov
int
mov
andb
popa
add
mov
inc
clc
xor
adc
fmull
push
aas
adc
push
push
sbb
sub
and
rclb
ret
inc
loopne
and
test
and
rcll
add
in
or
scas
xor
add
test
ret
add
add
add
mov
repz
mov
sarb
int3
push
andl
dec
dec
jnp
sub
cmp
mov
pop
lahf
jg
and
ja
sub
popa
mov
mov
jl
sbb
push
movsl
hlt
adc
or
inc
outsl
add
inc
inc
repnz
lea
inc
pushf
call
pop
adc
inc
xor
pop
aam
jle
rcrl
icebp
adc
inc
jp
xor
insb
neg
lcall
cltd
xlat
mov
add
dec
jmp
in
push
xor
ds
mov
xchg
negb
fmuls
and
and
hlt
xchg
gs
mov
jbe
cwtl
jl
shrl
test
inc
mov
sbb
add
stos
mov
xor
jle
xor
and
in
push
daa
push
jge
mov
shll
mov
data16
pop
jmp
imul
mov
xor
arpl
jbe
xor
pop
int
cmp
filds
push
pop
lds
stc
and
xor
sub
sub
or
adc
push
ror
and
nop
loope
ret
rcrb
jle
int
add
daa
xchg
test
adc
insb
sub
xor
pop
sarl
pushf
loop
rdtsc
cmp
mov
pop
repnz
push
push
mov
and
push
mov
adc
call
push
or
lock
lahf
hlt
imul
inc
fstpl
or
imul
pusha
out
out
das
xor
out
mov
xlat
out
mov
and
push
inc
mov
jae
sti
or
std
cli
xor
cli
lods
int
lahf
out
mov
jno
pop
adc
sti
mov
lock
or
movl
and
mov
jmp
ret
repnz
jns
sbb
fs
or
adc
mov
mov
bound
into
pop
xchg
fmuls
sub
jg
icebp
mov
pop
das
pop
js
mov
mulb
lea
movsl
push
shll
mov
pop
and
jnp
mov
fwait
xor
repnz
sub
imull
mov
jnp
mov
daa
inc
or
jmp
fimull
mov
and
std
pop
stos
sbb
mov
mov
rcl
push
mov
in
js
pushf
push
ret
and
or
xchg
aam
add
jns
pusha
fs
popa
xor
adc
add
adcl
push
cmpl
mov
xchg
sbb
hlt
adc
push
jge
cmpsb
jge
bound
es
fcmovne
xor
xor
dec
out
xchg
xor
add
cmp
pop
cli
fisttpl
mov
in
imul
jp
or
sub
push
push
mov
lods
ret
dec
push
shrb
add
pop
movaps
pop
cmp
add
lods
in
in
mov
jl
and
inc
sub
loop
sbb
movl
sti
jg
and
adc
sub
push
in
jne
lcall
mov
push
pop
das
xor
std
jno
add
push
iret
ret
and
lods
lds
loopne
leave
sbb
adc
pop
add
sbb
xchg
and
mov
sbb
push
mov
ljmp
hlt
xchg
sti
jae
in
fcos
lret
fmull
inc
adc
or
pop
dec
jno
mulb
and
sub
gs
sbb
mov
shl
jne
add
pop
cmp
pop
push
xor
fwait
xchg
cmp
or
push
out
dec
inc
inc
js
scas
pop
dec
push
or
xchg
or
adc
daa
mov
pop
decl
mov
shlb
mov
int3
sbb
rol
push
mov
rcll
mov
lds
push
fiaddl
jp
stos
test
shr
outsb
xor
sahf
mov
cli
fstl
inc
xchg
sub
cmp
movl
pop
cmp
ror
cli
xchg
jp
xor
insl
sub
pushw
pop
xor
xchg
sti
xor
loop
adc
inc
or
fidivrl
inc
mov
push
push
pop
fsts
test
fcomps
mov
mov
rclb
xchg
out
enter
or
js
out
cmp
shl
aaa
cltd
dec
cmp
mov
or
sub
push
fidivrs
push
mov
repz
cmp
jns
aad
mov
or
or
call
pushf
ret
call
lcall
mov
int
xor
sbb
mov
stc
push
mov
addl
je
and
aaa
inc
jp
pop
push
xchg
mov
stos
outsb
les
into
adc
inc
mov
or
cmpsl
xor
or
sti
outsb
jle
jne
sbb
mov
icebp
js
testb
pop
ja
adc
add
cmp
dec
push
in
iret
lret
pop
add
mov
lret
outsl
adc
in
test
or
mov
sbb
enter
fwait
ja
ds
fwait
ja
mov
jae
lods
std
icebp
dec
fstpt
inc
int
inc
andl
pop
add
or
cltd
adc
adc
mov
es
xor
fiaddl
insl
fistpll
and
pop
mov
cmp
push
filds
xorl
sti
in
or
clc
pop
pop
sbb
adc
or
jmp
jmp
enter
aad
mov
cmpsb
xabort
dec
lea
cmpsb
push
mov
out
cmp
sarl
jnp
aad
pop
mov
xchg
lods
rclb
sub
mov
lds
push
jnp
inc
rclb
cmp
lret
or
adc
repnz
outsl
sub
movsl
pushf
ja
lods
std
pop
call
call
insb
sbbl
addr16
pop
repnz
and
lret
mov
es
les
push
into
mov
jle
into
fdivrs
ficompl
xchg
arpl
dec
test
inc
mov
bound
cmp
jne
adc
pushf
outsb
pop
pusha
and
mov
aad
cwtl
mov
fwait
xchg
add
es
mov
xchg
ret
mov
jno
cmp
adc
lea
addr16
inc
sbb
in
fistpll
push
inc
int3
enter
mov
add
int
cld
outsb
mov
add
cmpsl
cmp
and
out
cs
jmp
and
sub
fucomip
sahf
lcall
adc
xchg
lea
mov
dec
lods
and
xchg
sub
cmp
insb
loope
mov
ret
outsl
push
or
sub
xchg
aaa
mov
ret
subl
and
and
jnp
shlb
imul
out
xlat
push
jae
mov
sbb
in
aaa
sub
jmp
mov
out
add
ret
lret
xor
gs
ret
nop
lds
mov
xor
ja
mov
jmp
jbe
imul
lods
pop
sbb
jmp
fadds
inc
cmp
in
icebp
in
addb
pop
push
divb
add
imul
ds
loopne
data16
add
daa
popa
or
cmp
dec
popa
sub
sbb
cmpl
jecxz
sarb
sub
test
jo
in
xor
push
and
imul
push
add
or
ljmp
outsb
add
fwait
mov
push
push
psubd
test
mov
mov
push
movsl
jo
pop
test
sbb
mov
add
mov
adc
fucomi
and
ljmp
cmp
xor
dec
mov
add
fwait
push
sbb
scas
sub
or
bound
mov
dec
and
cltd
faddl
jne
and
mov
subl
dec
cmp
mov
out
mov
rcl
mov
xorl
or
push
mov
popa
add
stc
lret
or
jbe
imul
leave
inc
jo
movd
cmpsl
filds
dec
cmp
xor
push
fcomps
jbe
inc
cltd
loopne
ret
ja
or
pop
ret
jne
incb
cmpsb
js
add
mov
and
add
ret
and
cs
mov
fs
rolb
rclb
adc
cltd
add
mov
cmp
inc
in
repz
cmc
test
cmp
hlt
mov
outsb
lret
inc
pop
pop
cvtps2pd
sbb
and
sbb
mov
lods
add
lcall
mov
adc
sub
or
lods
mov
aam
test
inc
sub
add
call
cmp
add
inc
in
fldt
into
loopne
outsb
cmc
loope
call
sarb
cmp
mov
mov
repz
outsb
adc
sahf
sbb
sti
cltd
mov
and
cmp
int
aaa
rcr
add
sahf
les
movsl
mov
dec
negb
test
push
iret
inc
cmp
ja
rolb
add
inc
mov
rorb
mull
pop
pop
cmpb
add
iret
or
punpcklbw
and
das
xchg
add
out
leave
jne
fs
inc
gs
ret
cld
adc
cld
adc
add
or
mov
sub
inc
sbb
add
scas
adc
fs
data16
orb
js
mov
push
xor
nop
cwtl
cwtl
cwtl
or
lods
sub
add
inc
cmpsb
sahf
xchg
aas
ret
out
scas
jb
pop
stc
ljmp
in
mov
fwait
pop
lods
es
sub
inc
mov
out
repnz
hlt
hlt
hlt
xchg
xchg
xchg
gs
notb
ret
shlb
out
fcompl
idivb
inc
hlt
in
movsb
movsb
xlat
outsb
cmp
fnstcw
cs
and
imul
mov
push
mov
mov
lock
mov
jg
ss
data16
outsl
mov
mov
pop
dec
push
dec
adc
into
into
mov
cmp
xchg
lret
loop
and
mov
repz
xlat
lret
fistl
sub
fucomi
cmp
add
cmp
sbb
xchg
pop
cwtl
sbb
sbb
cmp
mov
out
lods
push
pop
shr
dec
clc
pop
mov
xor
pop
pop
mov
xchg
push
cmpsb
out
scas
and
mov
xchg
pop
and
pop
std
sub
aaa
cmp
ljmp
add
mov
jb
jns
out
dec
cwtl
mov
cmp
fnstenv
pop
lods
das
arpl
icebp
mov
out
pop
les
icebp
out
pop
mov
mov
ja
pop
ret
mov
cltd
lods
jl
fnstenv
push
jae
xchg
push
stc
daa
cmpsb
imul
sub
insb
push
cld
adc
push
scas
cmpsl
cmpsl
push
adc
mov
jno
adc
and
dec
push
jne
dec
aaa
xor
idivb
imul
fcmovu
cmc
mov
jne
andl
pop
xor
xor
nopl
add
or
aad
dec
cmp
inc
inc
out
data16
jle
pop
pop
out
jp
in
or
rcrl
ljmp
pusha
sub
das
sar
sar
cmpl
rcrl
addb
sub
idivb
rcll
inc
lock
in
pop
add
rol
in
daa
daa
out
out
pop
mov
xchg
inc
lods
rorb
sub
cmp
arpl
add
pop
shlb
push
mov
inc
ret
vmovss
subl
mov
in
negl
mov
cli
and
push
push
push
inc
repnz
lahf
loope
loop
int
ret
stc
jno
pop
daa
loope
mov
jl
jnp
jl
jae
lds
cld
mov
dec
lods
lea
idivl
nop
mov
ret
mov
enter
out
mov
mov
lahf
std
repnz
or
ljmp
out
aam
sbb
inc
fdivs
mov
aad
jo
sarb
into
pop
stos
imul
lock
mov
sbb
mov
scas
xchg
xor
lods
test
xlat
jmp
xchg
into
test
fcoml
xchg
lock
sub
fldenv
push
fs
jns
pop
stos
mov
mov
push
jl
jbe
sbb
lods
mov
xor
shlb
xchg
out
das
loope
jge
xchg
xchg
push
pop
mov
arpl
aas
adc
hlt
mov
cmp
mov
fisubs
hlt
cmc
iret
clc
in
test
cmp
sub
inc
mov
movsl
out
fnstsw
jg
inc
push
lret
nop
mov
notl
lock
or
stos
lret
jmp
jge
mov
nop
xchg
xchg
inc
push
out
fs
jge
xor
adc
xor
pop
mov
dec
movsb
xor
movsb
das
mov
popa
cmp
aam
sub
outsl
inc
sub
ret
sbb
ret
jne
or
add
pop
aam
mov
and
shll
outsl
cmp
mov
mov
outsl
mov
shll
lds
cld
sub
dec
test
fmuls
xchg
clc
fdivl
mov
std
in
dec
push
lods
movsb
sahf
lea
outsb
gs
shrb
cmpsl
add
cmpsl
mov
cmp
cmc
into
mov
dec
sbb
aam
popf
xor
js
push
mov
in
repz
cld
jmp
pop
cmp
lds
jne
mov
jecxz
mov
lret
outsl
xor
test
mov
cmc
ds
mov
cmpb
and
add
mov
jne
adc
ljmp
mov
test
popa
fsubr
popa
les
push
inc
mov
sbb
sarb
fwait
jg
pop
fldt
js
rolb
loope
pop
mov
mov
pop
xchg
std
insb
cmp
jae
push
rol
sub
mov
dec
loopne
lret
jb
jbe
nop
in
arpl
inc
cmp
in
or
scas
pop
mov
mov
outsb
and
adc
mov
push
xchg
mul
sub
inc
mov
icebp
mov
iret
jle
jns
adc
sbb
lods
popa
call
aas
pop
or
and
adcb
stos
loope
stos
push
or
mov
dec
out
xorl
lcall
dec
test
dec
ljmp
fisttps
add
add
push
fmull
fsubr
nop
inc
jl
and
jb
adc
push
adcb
mov
fiaddl
adc
test
cld
adc
sbb
sti
mov
jnp
or
and
gs
mov
cmp
fnstcw
faddp
jne
nop
cmpsl
rcr
inc
mov
orb
aas
add
inc
sub
dec
stc
inc
in
mov
imul
loope
loope
sar
rclb
int3
dec
aas
out
popa
fisubrs
or
cmp
cmc
cwtl
lock
cli
push
ret
dec
sbb
fadds
clc
mov
int
rcrb
mov
mov
or
sub
cmp
movsl
push
jmp
pop
rclb
sbb
loopne
jp
inc
insb
pop
jle
jg
mov
inc
leave
arpl
xorl
ds
adc
xchg
sqrtps
arpl
add
mov
xchg
iret
js
xchg
fdivr
loope
mov
and
xchg
add
mov
pop
mov
cmp
leave
in
jl
inc
insl
lcall
divb
loope
ret
cwtl
add
xor
insl
xor
cmc
sub
cmp
mov
sub
push
add
dec
rcll
adc
hlt
sbb
aas
ds
xchg
fnstenv
leave
push
test
lcall
std
xchg
jo
jno
shl
out
ret
int
fadds
scas
les
stc
jnp
out
orb
or
fiaddl
divl
popa
jmp
fcompl
or
jl
mov
loopne
arpl
popf
mov
roll
jmp
xchg
std
addl
jg
mov
pop
leave
or
bnd
add
std
sbb
dec
push
nop
mov
in
mov
iret
dec
lret
inc
mov
dec
inc
xchg
into
icebp
lds
scas
lock
adc
clc
add
dec
jg
iret
dec
iret
dec
inc
or
sarb
ret
sub
dec
jl
dec
lret
sti
dec
ret
jecxz
mov
cwtl
enter
add
int3
add
test
rcll
cld
mov
dec
daa
out
sub
add
pop
jbe
outsb
push
icebp
mov
sarl
bound
icebp
std
cmp
xor
sahf
ja
dec
repz
loopne
lret
aaa
fnsave
add
mov
fistps
xlat
dec
mov
cmc
xchg
ss
cmc
fisubs
inc
int
loop
js
add
cmovae
imul
sbb
aad
ret
pop
push
push
pop
jne
mov
xlat
jnp
xchg
clc
jne
inc
in
stos
mov
shlb
mov
ss
mov
int3
mov
push
inc
ds
pop
adc
fdivs
and
mov
pop
imul
test
fdivs
pop
pop
sarl
mov
repz
std
adc
jmp
out
cmp
arpl
cltd
imul
daa
lds
push
int
lods
ret
mov
adc
out
mov
sub
push
sub
inc
out
out
insb
cmp
jecxz
jnp
cmp
mov
dec
mov
jl
pop
bound
cmp
push
push
cwtl
or
shl
stos
mov
xchg
stc
jle
push
imul
mov
aaa
jmp
ljmp
push
push
mov
add
loop
pop
out
jnp
dec
add
dec
ret
push
outsb
jl
and
pop
push
pop
fwait
mov
fcmovne
movsl
push
push
jecxz
andb
stos
pop
fdivrl
push
stos
pusha
ret
push
push
push
mov
aas
js
aad
mov
fnstsw
jno
out
pop
loop
test
pop
mov
lock
pop
pop
mov
sub
stc
mov
mov
mov
dec
icebp
dec
inc
movsb
insl
jg
xor
mov
xchg
movq
dec
mov
push
push
mov
arpl
faddl
outsb
sub
mov
enter
mov
xor
loop
enter
and
hlt
pop
in
jg
cltd
cmp
pop
xchg
sub
cmp
inc
inc
jmp
out
mov
pop
ljmp
ds
lock
repz
or
fnstsw
jle
loopne
jmp
in
icebp
jmp
xchg
inc
repz
xor
adc
push
sub
leave
pushf
xor
and
ret
jns
push
shrb
insl
test
sub
lds
jb
sub
mov
rclb
cmp
addr16
mov
or
cltd
loopne
out
pop
inc
xor
int
push
add
pop
mov
movsl
cmpsl
jge
xor
nop
jns
dec
and
mov
lock
mulb
sbb
mov
enter
add
ljmp
js
idivl
mov
xor
cmc
jae
outsb
imul
xchg
or
pop
insb
mov
xchg
test
pshufw
sahf
add
cli
andl
nop
cmovae
scas
imul
roll
push
std
mov
pusha
mull
pop
stc
addb
enter
sarb
sub
stc
inc
push
mov
or
orb
inc
sbb
xor
xchg
ss
in
test
arpl
jle
push
inc
mov
push
ret
xchg
mov
sub
arpl
push
jge
fs
xchg
lahf
scas
or
mov
and
aad
xchg
adc
pop
mov
inc
cmp
xor
xor
mov
into
ss
loop
add
or
add
mov
ret
mull
addr16
maxps
lret
xor
xor
or
jns
cmc
cmp
in
mov
orl
inc
js
mov
int
push
mov
mov
xchg
inc
sarl
adc
jle
push
dec
stc
ret
sub
and
sbb
xchg
mov
mov
sub
add
leave
jnp
out
inc
adc
je
addr16
dec
pop
cwtl
push
ret
jne
dec
mov
sub
out
psubusb
fimuls
jns
sub
push
test
sub
sub
shlb
scas
add
jge
inc
dec
and
or
test
jns
subb
bound
test
mov
cwtl
js
cmp
iret
arpl
add
stos
mov
imul
push
inc
jne
or
dec
xchg
jae
outsl
and
loopne
sbb
mov
lds
jns
outsb
orl
add
repnz
sbb
pop
mov
test
testl
jb
fnstenv
jno
bound
aad
lahf
mov
mov
rolb
movl
add
pop
insl
sahf
cmpb
test
pop
scas
adc
andb
nop
cmpsb
cli
clc
add
and
xor
roll
or
push
loopne
xor
andb
arpl
sahf
mov
data16
cltd
and
adc
add
lods
sbb
adc
call
add
insl
mov
jns
stos
add
push
js
adc
xor
mov
dec
or
sbb
std
sub
addl
popa
jb
inc
or
add
addr16
mov
int
or
je
imul
push
or
lods
cwtl
xor
mov
lods
mov
sbb
cltd
and
jno
adcl
rorl
push
test
inc
xchg
adc
push
push
xor
jge
and
mov
sbb
rolb
jno
add
adc
rol
xor
xor
jns
cmpsl
lock
sbb
movsl
shl
outsb
mov
in
sbb
in
pop
hlt
pusha
mov
lods
mov
mov
les
jg
jmp
pop
std
pop
pop
jmp
loope
mov
pop
or
jge
xchg
arpl
mov
lcall
ret
fwait
clc
mov
pop
sub
lds
repz
mov
int
rol
jnp
stos
dec
fcmove
xor
jnp
movsb
in
sub
dec
fstpl
pop
push
and
out
shr
lahf
pop
xchg
push
and
and
fucom
dec
ret
icebp
jbe
aaa
pop
adc
mov
int3
int3
dec
imul
insl
add
xchg
scas
xlat
andl
sti
addr16
fdivp
insb
lret
or
je
enter
and
in
xchg
mov
sti
push
sub
add
les
or
test
xlat
jb
out
pop
jae
fists
into
roll
nop
sub
ja
pop
dec
jnp
ja
aad
xchg
in
out
testl
ljmp
mov
sub
jecxz
ljmp
loope
adc
aad
adc
adc
lods
insl
xchg
xchg
inc
shr
mov
adc
mov
clc
lods
shl
lods
inc
jno
sti
jbe
mov
cmp
outsl
pop
xchg
int
jae
jg
mov
js
int
inc
xlat
imul
scas
push
mov
test
push
pop
pop
cwtl
cwtl
clc
mov
cmpsb
pop
rorl
jae
pop
in
push
mov
adc
fsubrl
dec
shlb
mov
push
and
inc
inc
inc
xor
mov
popf
in
icebp
xchg
xchg
xor
sti
push
xchg
dec
lds
sub
push
test
mov
data16
popf
shlb
sub
or
adcl
mov
cmp
scas
dec
into
mov
inc
mov
fcompl
sbb
jmp
dec
iret
dec
rclb
fisubs
imulb
pop
repz
jp
fsubrp
aaa
mov
aad
xor
add
add
lahf
jecxz
cmp
mov
sbb
pop
mov
xlat
test
out
push
popa
jle
xor
stos
ja
scas
cmp
je
xor
sub
enter
push
push
push
bound
mov
push
scas
push
stos
in
mov
push
aam
xchg
bound
lret
xor
jmp
mov
mov
js,pt
jp
ljmp
sbb
or
call
sti
loope
out
fsubl
repnz
in
push
sbb
add
negb
repz
call
aaa
frstor
inc
adc
aas
mov
dec
pop
mov
pop
push
push
stos
sahf
pushf
icebp
in
jg
out
jb
jmp
bnd
fucomp
fildll
cmp
in
dec
dec
ret
ds
dec
sub
adc
xchg
inc
aas
jp
leave
fists
mov
jmp
mov
push
pop
xor
dec
cwtl
stos
stos
loope
dec
cld
sbb
mov
loopne
pop
jge
sbb
sub
jno
outsl
or
pop
push
std
pushf
and
and
mov
xchg
sbb
out
pushf
pop
shlb
xchg
add
push
pushf
adc
cmpsb
and
mov
cs
xchg
pop
sub
jns
mov
fwait
mov
and
daa
les
ljmp
push
out
out
inc
loope
fmull
pop
push
in
cmp
mov
jecxz
add
nop
mov
cmpsb
dec
repnz
xchg
subb
pop
push
fnstcw
lahf
lods
mov
adc
inc
lock
mov
mov
cmp
mov
ja
mov
pop
scas
mov
push
lds
fs
add
inc
out
xchg
fiadds
cmp
inc
arpl
and
fnstenv
sbb
mov
dec
cmc
mov
cmp
movl
inc
mov
jo
mov
and
ljmp
jo
andl
lea
ljmp
add
sub
xchg
lock
lock
repz
cwtl
and
jge
shll
add
and
loopne
in
mulb
cmpps
push
out
jbe
xchg
inc
repz
out
add
jne
roll
punpcklwd
pop
and
fldl
pop
sbb
cmc
fiadds
inc
xchg
or
mov
cmp
sub
jno
icebp
outsl
andb
lret
adc
clc
dec
xchg
mov
dec
dec
mov
rorb
addr16
sbb
inc
jbe
jl
xchg
sbb
rclb
jge
inc
in
stc
inc
sub
cmp
dec
mov
or
fcom
lahf
out
sahf
xchg
clc
out
mov
jg
bound
adc
rol
insl
pop
loope
outsb
push
dec
cmp
inc
inc
jbe
loop
nop
repz
lcall
movl
mov
stos
fbstp
or
push
in
mov
and
repz
lods
insb
xchg
scas
stos
sub
dec
jmp
xlat
fistps
shrl
fcom
xlat
pop
scas
cltd
cmp
fdivp
in
out
aad
shrb
test
pop
mov
add
sbb
push
sarl
imul
out
jl
jge
pop
daa
dec
outsb
or
mov
jmp
loopne
push
fdivl
lret
js
es
outsb
fs
cmp
push
fildl
ja
mov
ds
dec
stos
fldcw
pop
mov
xor
in
into
shll
fldcw
sbb
mulb
out
mov
imul
out
loope
insb
pusha
push
shlb
fcomps
add
mov
sbb
out
pop
cmpl
pop
dec
and
mov
jg
mov
imul
fdivrl
outsb
adc
stc
repz
iret
insb
cli
lods
ss
jb
popf
mov
imul
mov
shrb
scas
int
incb
clc
aaa
pop
xor
cmpsb
cmp
jb
in
insl
xchg
jno
cmp
xchg
push
jp
xchg
push
pop
in
mov
xchg
ret
imul
mov
ljmp
push
pop
ss
xor
pop
inc
mov
cmpsl
xor
bound
adc
insl
push
psubw
ja
xor
popa
adc
fdivrs
bound
and
data16
mov
cwtl
add
and
fwait
test
adc
das
cli
adc
mov
adc
pushf
gs
jl
cmp
inc
jmp
mov
cltd
les
and
and
and
std
cmpsl
xor
push
or
std
xchg
lahf
push
repz
and
and
adc
inc
xor
mov
inc
push
mov
pop
inc
xchg
fcompl
pop
sbb
mov
repz
out
push
xor
call
flds
mov
mov
lods
xor
test
loopne
and
cmc
out
cmpsl
cmpsl
push
jnp
outsb
jae
ret
lock
mov
pop
dec
cmp
cmpsb
lret
push
fildl
sub
cmp
gs
sbb
inc
push
pop
pop
add
pop
inc
mov
cltd
loop
xor
cltd
xchg
mov
mov
loop
pop
sub
into
lahf
out
outsb
test
xchg
aas
mov
call
xchg
mov
mov
and
sbb
pop
pop
dec
jge
gs
jae
xchg
sub
pop
lods
in
xchg
cli
cmp
jg
lea
xor
fistpll
repnz
xor
cmpsb
inc
movsl
xorl
fucom
fs
ret
mov
push
inc
lcall
addr16
or
daa
in
sarb
cs
mov
shrl
pop
cmpsl
les
jl
jl
cltd
aam
xor
or
rol
jle
insl
rorb
icebp
xlat
sub
leave
fwait
ss
xchg
mov
jl
in
pop
jno
sbb
lcall
icebp
ret
dec
pop
sbb
js
and
sbb
idivl
lods
cltd
repnz
xchg
xchg
repnz
xchg
inc
and
sqrtps
mov
mov
sub
call
das
pusha
pop
push
popa
dec
fs
and
mov
mov
mov
jb
jnp
cs
iret
push
cmp
pop
addr16
bound
xchg
ja
ret
cs
out
test
ficomps
aas
xchg
pop
xchg
and
pushf
mov
sub
adc
call
cmp
cmpsl
sub
inc
arpl
sub
shll
pop
loop
mov
out
cs
xor
dec
push
loope
jae
in
or
push
outsb
pop
imul
std
jo
test
lret
xor
fbstp
daa
stc
add
or
int3
xchg
dec
mov
dec
scas
or
lret
into
dec
aam
mov
mov
fs
dec
aas
int
push
pop
jmp
enter
jmpw
inc
cmp
in
and
sbb
ret
cmovg
pop
arpl
icebp
dec
imul
pop
and
xchg
dec
xchg
bnd
popf
pop
adc
adc
inc
lods
dec
lret
sub
dec
int
mov
fmuls
xchg
and
mov
popw
mov
or
aaa
lahf
jecxz
pop
popf
add
cmp
cmp
daa
icebp
ret
adc
mov
popf
cmc
les
test
lods
repnz
sub
js
cld
jmp
ss
test
aas
sar
imul
in
and
cmpsb
sub
call
mov
and
clc
ljmp
jnp
lahf
sub
in
pop
into
lahf
lock
jl
xchg
jns
mov
sarl
and
lea
and
imul
push
mov
aad
push
inc
xchg
push
std
xchg
outsb
or
xor
jg
and
mov
fimull
aas
roll
icebp
cs
and
enter
aaa
repnz
stos
sbb
pop
lods
movsl
out
push
imulb
ret
xor
and
mov
xor
dec
stos
popf
lcall
addr16
cltd
setbe
repnz
test
jle
pop
inc
repnz
cmp
xchg
and
mov
out
mov
jmp
test
arpl
aad
sbb
gs
fimull
mov
sahf
xchg
ljmp
divl
jae
or
hlt
inc
dec
mov
and
sbb
xchg
sub
paddq
leave
dec
jmp
cmc
test
sarb
sbb
aam
mov
lret
aas
stos
sub
leavew
out
enter
inc
jo
in
imul
divb
jge
repz
test
out
jmp
adc
enter
push
cmp
insl
aaa
loop
pop
sbb
stc
xor
dec
jge
lret
mov
dec
testl
cmp
mov
nop
mov
jecxz
lret
jecxz
add
mov
jge
mov
push
mov
cmc
dec
stc
xchg
dec
lahf
repnz
daa
xor
and
in
jl
call
in
lock
int3
push
push
in
repz
mov
das
daa
push
mov
add
cli
std
daa
sub
jge
inc
inc
push
pushf
out
jo
fcmovnb
rorb
imul
and
xchg
aas
aaa
into
movsb
xor
and
mov
mov
aam
std
repz
daa
cld
test
dec
out
adc
mov
jns
mov
aaa
xchg
sub
xorl
ret
adc
pop
inc
pushf
sub
xchg
pushf
out
int3
fs
das
sub
dec
jle
and
shr
inc
in
pop
dec
ss
cld
ror
mov
xchg
pop
pop
mov
out
popa
jecxz
faddl
loop
cmp
insl
addr16
pop
cli
xchg
decb
daa
hlt
add
daa
test
aam
mov
and
pop
sbb
jo
cmp
mov
dec
xor
and
pop
push
push
adc
dec
and
movsb
std
test
movsl
divl
xor
enter
mov
or
mov
xchg
mov
call
js
into
rcll
mov
or
cmpsb
sub
mov
in
mov
mov
leave
inc
popf
cmp
or
xchg
ja
dec
fnstenv
xchg
pop
inc
insb
mov
xor
into
int
lds
and
mov
xchg
mov
pop
stc
adc
dec
cmp
inc
xchg
mov
jl
mov
stc
xchg
sti
sbb
rclb
inc
pushf
aas
or
cmp
mov
int
data16
xchg
aaa
push
push
lret
cmp
ret
adc
pop
mov
popf
mov
sub
mov
xchg
inc
mov
push
push
shrl
fs
xchg
or
iret
in
jle
lcall
imul
stos
mov
xchg
iret
sub
sbb
push
sbbb
jle
xchg
aaa
popa
lcall
out
icebp
mov
jne
ret
outsb
outsl
movsl
mov
push
mov
adc
das
mov
fcomps
jmp
lock
sub
fld
mov
fildll
and
mov
jge
inc
mov
outsb
add
arpl
inc
call
testl
stos
enter
scas
insl
sub
push
mov
jg
and
enter
aas
bound
pusha
mov
dec
lock
icebp
dec
cmp
popl
mov
mov
inc
mov
loope,pn
idivb
xor
push
pop
cmp
ds
xchg
jp
or
xlat
fwait
and
or
iret
clc
jp
lds
in
dec
cli
or
aaa
iret
outsb
fdivl
xchg
sub
mov
out
jb
in
or
pop
sub
test
sbb
imul
and
jo
imul
fwait
and
jnp
jp
pop
das
inc
jmp
out
dec
aas
out
ljmp
and
or
stc
mov
mov
fildl
dec
pushf
pop
pop
and
fs
push
push
out
aas
popf
xor
pop
dec
pushl
and
xchg
aas
lret
push
out
inc
push
xchg
mov
adcl
daa
call
xchg
xchg
shll
repz
shlb
add
xor
fcomps
sti
mov
std
aaa
push
mov
fwait
mov
sarl
add
mov
inc
lcall
into
stos
bts
das
outsb
lret
sub
stos
cmp
popl
int3
outsb
sbb
or
pop
insl
jno
pushl
pop
shr
int3
mov
mov
push
push
aaa
inc
pushf
xor
pop
xor
xchg
int3
in
push
js
out
mov
push
daa
ret
mov
rcl
mov
stos
sarl
lret
cs
adc
adc
jg
mov
jno
pushl
fld
fsubrs
mov
cmc
repz
mov
push
sbb
shll
xchg
icebp
lds
daa
and
leave
xor
call
ljmp
aam
push
push
inc
repnz
xor
xor
popf
lock
mov
icebp
cs
daa
in
sti
dec
into
sbb
out
loope
shr
hlt
mov
fucomip
pop
push
dec
cmp
je
sahf
sbb
stos
out
dec
dec
pushf
xchg
push
loope
cmp
dec
shll
loope
xlat
loope
jno
cli
cmc
xchg
loope
rcrb
mov
std
jmp
push
rol
clc
cmp
adc
adc
rcl
ret
clc
into
aam
lret
xchg
scas
sbb
int3
in
fwait
rorl
pop
clc
popa
mov
xor
jae
aas
sub
xor
sub
lcall
iret
cli
shl
mov
and
and
popa
inc
lret
push
xchg
mov
lcall
aaa
inc
jbe
outsl
mov
mull
gs
pop
jle
call
out
imul
cmp
pushf
cwtl
xchg
insb
pop
shll
inc
bswap
cld
xor
aas
pop
stc
adc
jno
cmp
sub
xchg
repnz
aam
adc
push
push
lret
lret
lret
popf
jno
cltd
aaa
testl
mov
mov
adc
lahf
sub
iret
cli
sar
out
sub
mov
ljmp
cli
adc
ja
cmp
idivl
add
stc
icebp
fcomps
push
cld
pop
cmc
rcll
insl
and
inc
xchg
add
das
lahf
outsb
cmpsb
cmpsb
xchg
je
push
nop
imul
jo
adc
mov
push
fimull
jle
scas
data16
cli
cs
push
or
int3
xchg
rcll
or
frstor
push
sub
imulb
ja
push
idivl
or
and
aas
filds
inc
nop
or
add
add
add
push
push
and
inc
sbb
and
inc
jmp
cltd
lahf
popa
lahf
dec
and
sbb
push
sbb
mov
add
add
mov
andb
mov
pop
jg
fistpll
xor
and
inc
mov
scas
test
fbstp
mov
outsl
vmread
sti
clc
pop
mov
cs
sbb
in
and
fbstp
in
xlat
cli
sbb
outsb
dec
pop
push
cmp
repnz
push
in
inc
popa
jmp
test
fdivs
loop
sub
das
addr16
hlt
pop
fwait
inc
ljmp
jmp
mov
call
jno
dec
jbe
dec
sti
xor
sbb
in
pop
leave
push
pop
mov
mov
pop
aas
daa
lahf
cmp
gs
cltd
lahf
mov
lock
les
lods
sti
into
mov
xchg
popf
mov
pop
lcall
jmp
sti
sahf
fwait
int
addr16
out
mov
and
cmp
pop
out
sti
and
mov
ret
test
fdivrs
pop
aas
xchg
movsb
ljmp
add
jno,pt
data16
push
insb
int3
jno
pushf
sbb
test
ds
in
idiv
mov
mov
dec
jecxz
add
les
cmp
repz
xchg
jno
jg
shll
xchg
test
and
out
sti
pushf
aas
test
xchg
sub
movl
mov
sbb
xor
pushf
hlt
jo
out
xchg
sti
js
stos
out
outsl
fldenv
pop
jg
adc
ret
inc
jno
rclb
cmp
push
cli
std
lahf
cs
fnstcw
mov
inc
sti
pop
in
por
pop
call
and
arpl
mov
out
sbb
pop
ds
jns
jg
fwait
out
adcl
lods
jb
call
pop
ja
mov
rorl
mov
in
mov
mov
ja
ss
mov
cwtl
cmp
out
inc
mov
adc
adc
mov
sub
out
mov
mov
call
dec
aam
mov
sahf
out
pop
fcompl
jb
idivl
aam
stos
push
inc
andl
jne
das
push
push
lret
sbbl
neg
pop
pop
test
int
fmuls
clc
cmp
xchg
out
aaa
stc
add
sbb
or
adc
cli
sub
mov
adc
enter
popf
enter
and
lods
and
in
mov
imul
mov
inc
in
and
mov
or
in
lods
and
ja
xor
cmp
in
fs
or
repnz
or
ds
pop
clc
pusha
lds
in
cmp
jg
xchg
adc
push
push
and
inc
dec
xlat
mov
adc
repnz
inc
sahf
add
mov
out
mov
mov
mov
clc
or
divl
mov
into
mov
aam
icebp
jo
aas
lahf
or
lock
xchg
loopne
int
inc
mov
int
cmp
dec
adc
push
outsl
mov
jo
inc
add
mov
fidivrs
popaw
cmc
mov
jg
jb
dec
repz
fists
nop
add
sub
cld
daa
ret
xchg
adc
cmp
xchg
pop
jns
mov
repnz
mov
inc
xbegin
loope
cld
ret
incl
aas
daa
pop
dec
std
ficoml
in
repnz
inc
dec
inc
jg
sub
pop
dec
insl
paddsb
out
cmpsb
pop
es
push
lea
leave
lea
xchg
outsb
insb
test
mov
int
fsubrl
sbb
mov
in
dec
mov
jle
dec
rcrl
xlat
insb
jge
aam
sbb
ljmp
jg
inc
js
jae
add
sbb
repz
dec
inc
sets
jmp
pop
movsb
lea
sahf
pop
push
dec
rcr
outsb
mov
cltd
out
jae
popa
loope
ret
sub
mov
in
mov
mov
js
fucomi
dec
sarl
ficomps
mov
mov
lcall
scas
mov
bound
jmp
sub
sbb
aas
imul
imul
imul
dec
sti
push
inc
imul
in
lret
rcr
imul
sub
or
jmp
pop
mov
in
add
leave
hlt
add
mov
imul
aas
popa
aaa
cltd
jg
dec
jnp
rol
fmuls
ret
repnz
dec
loope
orl
mov
fwait
ret
imul
cld
mov
fistpll
and
mull
iret
xchg
popa
inc
push
pop
in
mov
aas
cmc
xchg
fbld
gs
xchg
and
push
mov
xor
inc
cmp
int3
in
inc
jns
stc
out
add
leave
dec
test
ret
jge
or
pusha
decl
add
add
lds
add
addr16
mov
imul
popf
int
into
xor
xor
jnp
fbld
addr16
fdivrl
idivl
andb
pop
push
push
js
mov
mov
je
xlat
loope
xchg
lods
push
pop
sbb
pop
call
push
pop
sbb
mov
lret
shlb
adc
popa
pop
lods
mov
decb
js
fsubl
in
mov
lahf
imul
loope
testl
test
jo
test
mov
dec
mov
xchg
inc
sarw
or
dec
and
mov
jae
aas
sbb
sub
pop
sti
loopne
sti
fildll
repz
jg
dec
push
or
add
lock
in
jmp
xchg
jmp
aas
hlt
jo
das
pop
imul
es
scas
pop
out
cli
sbb
inc
mov
ficomps
dec
push
hlt
mov
xchg
daa
jnp
mov
rorb
int
std
shll
jg
enter
sub
cmp
sbb
pop
mov
repnz
dec
ja
fdiv
push
and
imul
lret
mov
mov
ljmp
and
pop
dec
mov
push
xchg
je
std
fmuls
mul
mov
cmc
je
sub
mov
push
in
mov
aad
nop
sahf
lock
adc
popa
and
mov
cmc
fisttpll
jp
xor
scas
xchg
es
and
andb
ret
jmp
fidivs
push
movsb
daa
mov
repnz
lea
sbb
gs
inc
mov
loope
push
mov
jp
push
ljmp
es
popa
incb
mov
lods
in
jno
xlat
push
in
add
cld
hlt
in
dec
jecxz
jns
rclb
idiv
lcall
loop
push
adc
or
scas
push
jns
aad
mov
clc
lcall
xlat
adc
icebp
mov
jnp
shll
fsubr
fistpl
dec
pop
add
incl
inc
mov
sub
aaa
fwait
int
and
shll
mov
sarb
jb
jnp
outsl
dec
fistpll
aad
aas
repz
lret
push
dec
test
loope
xorl
andl
xchg
dec
push
andl
or
lcall
xlat
inc
call
sbb
mov
mov
jo
lahf
xor
sbbb
shr
hlt
in
jne
xlat
inc
les
jo
fsubr
hlt
push
fcoml
nop
adc
add
aam
mov
leave
ret
sbb
call
cli
outsl
ja
in
xchg
in
std
ja
jb
inc
push
dec
adc
or
pop
leave
ret
fsubr
xchg
pop
xchg
sahf
sti
push
jmp
arpl
test
aam
adc
inc
and
das
std
popa
loope
xorl
int3
and
popa
cmp
in
std
xor
mov
sub
add
adc
jo
aas
movl
jg
ret
orl
jnp
push
sub
xor
loopne
xor
out
insb
xchg
jo
scas
add
mov
cld
cmpsl
or
mov
aad
cmp
cli
add
adc
mov
mov
mov
popf
jns
push
stos
add
jp
shlb
add
lcall
sahf
pushf
testl
xor
daa
mov
mov
jnp
movsb
mov
jno
pop
xor
notb
ds
xor
push
jbe
adc
jecxz
ss
jmp
xchg
ja
dec
fidivrl
sar
js
scas
inc
rcrl
loopne
or
mov
enter
cmp
addr16
pushf
add
push
movsl
mov
jg
hlt
xor
adc
out
mov
mov
addr16
sbb
or
adc
cmp
mov
xor
jb
rcr
fwait
mov
jae
loope
xorb
xchg
push
addr16
xor
push
push
sti
fimull
jg
jmp
aaa
mov
out
loop
mov
imul
or
cltd
and
xchg
sbb
mov
adc
out
sub
out
pop
mov
out
pop
shl
dec
vpsignw
enter
popa
adc
push
rcrb
xor
sahf
pop
add
dec
xchg
xchg
fsubrs
ds
nop
imul
data16
arpl
push
mov
lock
push
inc
push
jmp
add
jno
in
cli
inc
loop
std
adc
loope
xor
jo
idivl
xchg
or
push
jne
mov
or
mulb
jb
scas
xor
xchg
jmp
bnd
mov
sti
outsb
fadds
jle
pushf
lcall
inc
or
jp
clc
sub
stos
repz
aam
xor
fnstenv
xor
aaa
int
jp
dec
fwait
jg
jl
mov
pop
sub
mov
mov
std
dec
adc
mov
in
mov
sub
jns
gs
sarl
fsubr
pusha
lret
fcomip
cmp
ljmp
psraw
scas
push
mov
scas
mov
outsb
jmp
fs
cmp
jns
add
mov
jg
mov
nop
jns
mov
mov
mov
icebp
xlat
jg
sarb
fcmovbe
int3
adc
jbe
fucomi
xor
cmp
xor
add
loop
not
in
xchg
bound
mov
sbb
int
repz
jecxz
adc
cli
dec
cmp
outsl
sbb
or
pop
mov
or
mov
xor
stc
inc
std
push
jg
cmpb
inc
mov
adc
mov
rolb
sub
xor
inc
fimull
cmc
xchg
fbld
inc
pop
ds
cwtl
enter
sbb
xchg
adc
pop
and
call
xor
mulb
xor
movb
cld
xchg
inc
push
sub
and
push
add
xor
ret
test
push
mov
pop
daa
sbb
fucomip
push
or
add
sbb
movzwl
cmp
sarb
adc
sti
inc
stos
nop
pusha
jecxz
mov
cltd
jb
jmp
xchg
mov
inc
insb
rcrb
cmp
arpl
add
ficoms
cltd
loop
jp
mov
enter
roll
lret
jno
xor
clc
cmpsl
push
mov
push
and
adc
sub
xor
xor
pop
popa
roll
leave
ja
pusha
cmp
test
nop
fucomip
scas
popa
jo
push
pop
mov
pop
sysret
xchg
popf
outsb
add
inc
sbb
push
out
shrl
ljmp
je
xorb
mov
adc
ror
adc
movsl
fidivl
mov
mov
sub
cmp
inc
ljmp
aad
jp
loope
mov
das
loope,pt
lea
jmp
inc
ljmp
inc
cmp
ret
out
hlt
loopne
pop
frstor
xchg
nop
loop
or
xorl
out
adc
cmpl
inc
iret
mov
ror
fistl
push
into
xor
in
lcall
js
mov
jle
out
sbb
call
jne
loopne
adc
mov
nopl
inc
out
stc
lret
xchg
call
push
iret
scas
lahf
push
ds
xor
xchg
dec
cwtl
mov
sbb
sbb
ja
inc
and
icebp
mov
subb
lods
inc
dec
or
sahf
insl
jl
iret
rorb
push
push
dec
lds
es
pop
or
mov
int
add
adc
addl
test
stos
push
inc
stos
inc
jecxz
jbe
sub
jg
loope
dec
out
out
subb
lahf
lock
lea
in
gs
arpl
add
push
sub
mov
js
cltd
rcrl
cmp
scas
iret
jl
push
aam
xchg
sub
cwtl
mov
popa
movsb
mov
call
dec
out
shrb
mov
mov
mov
adcb
xor
mov
outsl
fidivrs
cmp
dec
lea
pop
subb
mov
pop
cmpsl
cmp
sub
clc
shlb
add
repnz
mov
cmp
push
adc
fstpl
addr16
pop
int
mov
fwait
jbe
mov
repnz
lcall
adcb
aas
lret
and
cmp
cwtl
idivb
mov
loopne
mov
push
mulb
aas
loopne
imul
jge
mov
fsubrl
inc
and
test
cli
push
cmc
pop
cmpsb
mov
mov
pop
and
or
adc
jge
dec
lret
insb
sbb
cwtl
cltd
int
mov
jbe
adc
incb
dec
mov
in
push
aam
dec
shrb
stc
push
aaa
adc
fldpi
push
dec
test
push
xorl
flds
sbb
cmpsb
int3
xlat
les
push
fwait
mov
cs
in
push
adc
data16
push
lods
movsb
pop
and
enter
jb
stc
lahf
out
pusha
add
mov
adc
daa
adc
popf
rcl
push
jg
fsubrl
sahf
dec
or
add
sbb
adc
notb
mov
lcall
pop
fimull
fstps
xchg
andb
movsb
push
fs
push
cs
out
cmp
push
lea
incb
cld
push
je
mov
out
push
jp
sbb
es
mov
cwtl
fidivs
fstpt
sub
shll
xor
xor
mov
hlt
cltd
ja
sub
xor
roll
sbb
mov
repnz
fstl
or
scas
add
xchg
push
in
or
inc
mov
inc
out
scas
stc
scas
cmp
mov
dec
cmp
cwtl
shlb
push
add
ja
lock
shr
push
push
dec
loopne
arpl
mov
ljmp
inc
sub
mov
sti
mov
sbb
scas
add
sbb
pop
fisubrl
jbe
add
rorb
xor
xchg
arpl
mov
inc
insb
lret
das
mov
push
sub
xor
inc
std
mov
mov
jo
lods
loopne
jbe
dec
mov
pop
sarl
ss
mov
mov
mov
insb
int3
rcl
pop
shlb
idiv
lret
mov
mov
ss
fst
inc
ja
jecxz
lods
subb
enter
and
mov
inc
scas
mov
decl
jns
mov
adc
cltd
adc
rorb
cmp
sti
in
pushf
mov
dec
cmc
cli
mov
imulb
mov
mov
les
fs
mov
inc
jmp
data16
sub
xchg
adc
into
jle
push
mov
jge
pop
push
add
or
out
push
aam
mov
mov
inc
fcoms
push
cmp
insl
test
es
pop
inc
push
and
inc
mov
xor
push
inc
rcrb
pop
inc
lods
test
cmpsb
scas
mov
and
adc
jno
stos
push
lret
xor
das
sahf
stc
mov
stc
jle
push
movsl
cmp
lea
outsl
cmpl
mov
scas
insb
mov
sbb
cmpsb
loop
add
rorb
mov
mov
or
adc
bswap
cmc
test
in
push
in
push
push
jmp
push
xchg
stos
dec
popa
in
fwait
push
sbb
and
sbb
inc
and
push
ret
outsb
js
stos
test
sub
das
mov
cmp
or
cld
dec
je
roll
and
les
push
push
lods
test
and
leave
pop
fidivl
add
mov
fcoml
push
out
js
stos
mov
or
sub
js
mov
mov
mov
mov
rcl
stos
inc
out
pop
mov
stc
lea
int
jne
icebp
loope
xchg
sub
adc
mov
push
sub
lods
bsr
and
push
fdivrp
scas
mov
sub
outsb
pop
inc
push
js
int3
xchg
mov
xor
xchg
mov
lret
fsubl
push
fdivs
imul
and
int3
fcmovnb
xchg
outsl
jbe,pn
in
mov
jae
cmp
xlat
lea
lea
out
cmp
mov
push
jecxz
adc
popf
cmc
stc
mov
data16
aam
les
mov
out
mov
add
inc
mov
push
xchg
cli
fstl
jno
fmull
pop
js
pop
xchg
lods
out
loopne
lret
outsb
sti
aaa
or
lcall
jns
mov
sbb
inc
cld
inc
repz
dec
sub
jge
mov
ret
insb
xor
out
ret
repz
sub
insb
sbb
rorb
test
add
mov
outsb
cmp
sub
jae
repz
in
sub
xchg
in
ds
mov
mov
adc
lds
xor
mov
sbb
sbb
movsl
fmull
pop
mov
scas
lcall
sub
cmp
cmc
int
scas
xchg
push
aas
imul
insl
cmpsb
shlb
fldcw
jg
cmp
test
add
shlb
es
adc
pusha
dec
mov
mov
xor
mov
push
sbb
xchg
imul
xor
add
lahf
sti
add
dec
mov
adc
dec
mov
xchg
adc
mov
stos
out
pop
or
mov
adc
mov
stc
test
push
nop
imul
adc
add
scas
push
cmp
scas
lods
fiaddl
inc
lcall
push
sar
bound
xchg
jmp
scas
xchg
mov
aas
dec
sub
mov
test
adc
mov
in
xlat
roll
fisubl
push
outsb
inc
lds
mov
outsb
ljmp
add
mov
fisttpll
dec
xor
mov
shlb
cmpsb
cmp
pop
test
popf
call
imul
test
clc
push
insl
jbe
xchg
lods
xchg
stos
push
sub
cmpsb
sub
pusha
lcall
nop
jmp
mov
push
out
mov
and
inc
je
mov
dec
sbb
pop
mov
jmp
bound
xchg
sub
push
xlat
sub
or
outsl
mov
jbe
loopne
fnsave
loope
mov
subl
or
sahf
daa
cmp
mov
jb
scas
daa
lcall
or
nop
mov
sbb
loopne
stos
cmp
cmpsb
jge
in
repz
push
imul
sub
pop
add
iret
push
les
xchg
ljmp
pop
dec
dec
push
movl
popa
shlb
testb
popl
not
cld
jo
scas
lret
cs
push
hlt
and
gs
iret
sub
xchg
xor
aaa
rcrl
push
lea
stos
stos
test
sahf
or
cmp
push
stc
sub
or
aad
pop
inc
sub
mov
push
mov
pop
mov
ret
push
mov
lcall
or
pop
int3
aad
mov
xor
mov
cmpb
fnstsw
arpl
cmp
mov
adc
lret
outsb
jb
loopne
aaa
out
ret
cmp
or
cmp
xor
or
cmc
mov
mov
pop
fs
aaa
mov
inc
lret
push
mov
ja
jns
add
add
push
faddl
clc
pop
cmp
or
iret
dec
pause
popa
and
das
scas
aaa
into
lods
sarl
or
in
sbb
and
jae
lods
push
pop
decl
rcll
jle
imul
sti
jbe
cmp
rep
push
cmp
cmp
stc
pop
mov
jb
jmp
mov
stos
or
sub
and
jmp
lock
sub
pop
dec
xchg
test
sti
in
ficoml
negb
pop
sub
scas
dec
sub
mov
jecxz
stos
sbb
stc
xor
mov
aaa
fldt
mov
lret
pop
cmp
sub
repz
push
das
pmaxub
xor
shlb
data16
pop
lahf
fbstp
cmc
jno
rcrl
loopne
aaa
int
add
mov
insb
add
lcall
std
push
push
fldl2e
ror
stc
adc
dec
stc
mov
pop
insl
fmull
lods
cmp
test
xchg
mov
xor
mov
pop
jp
lods
enter
call
and
and
push
fwait
add
xor
loop
or
scas
addr16
add
sub
lods
push
xchg
fsubrl
hlt
fwait
gs
ja
ret
dec
mov
inc
cmp
int3
or
repz
pop
insb
cmc
fdivl
insl
lods
pushf
inc
mov
test
pop
mulb
and
or
cmp
frstor
sub
mov
nop
cmpsl
dec
popf
pop
rcrl
pop
cli
sub
scas
fiadds
leave
jp
pushf
push
into
arpl
lock
jg
and
push
pop
movsb
mov
mulb
lret
and
std
into
aaa
mov
mov
ja
aam
cmp
movsl
lret
ljmp
fs
mov
push
aam
out
jge
mov
loopne
imul
cli
mov
lcall
push
mov
shrl
stos
mov
or
jle
push
incl
sbb
jne
pop
icebp
insb
sub
mov
jbe
push
push
sub
sub
ja
sbb
imul
push
loope
cmp
fisttpl
repnz
dec
sub
push
mov
or
push
in
pushf
push
ret
mov
pushf
inc
lods
stc
test
inc
cli
jb
fstpt
in
adc
push
xchg
test
lret
add
or
das
out
ds
insb
push
xorl
sbb
lea
mov
and
add
scas
dec
cmp
xchg
call
jmp
mov
xchg
call
cli
pop
testb
jmp
and
pushf
icebp
pusha
fmull
push
sub
jo
sub
sub
add
sbb
mov
jecxz
add
pop
sub
xchg
mov
xchg
dec
sub
mov
push
stc
shlb
xor
mulb
mov
cmpl
pop
int
inc
in
add
popa
cmp
jno
dec
sbb
stos
sbbb
sbb
sub
sub
adc
in
xor
sbb
lock
ljmp
lods
movsb
pop
mov
jb
pop
jb
pop
jb
pop
jb
push
movsb
xlat
sbb
xlat
sbb
jns
out
add
and
popf
sbb
cmp
divb
andl
pop
sbb
shrd
dec
or
push
dec
cmp
jmp
test
fildll
adc
pop
pushf
mov
adc
dec
js
data16
pop
aad
sti
in
ss
mov
ds
cwtl
movsb
out
loop
out
dec
or
xchg
pushf
jo
or
mov
fst
cld
ljmp
inc
cs
push
mov
cmp
stc
mov
icebp
mov
pop
lret
gs
sub
out
mov
jno
fcmovb
pusha
out
xor
jmp
out
scas
daa
shll
add
or
fimuls
addr16
xor
mov
add
sbb
imul
mull
fld
gs
xlat
insl
pop
out
loopne
jb
pusha
mov
repnz
push
cmc
push
outsl
repnz
jp
loopne
mov
jno
lahf
jae
mov
mov
push
mov
aas
movsl
cmp
das
popf
loopne
into
stc
dec
mov
cmp
mov
mov
out
pushf
jne
fcoml
into
mov
sub
push
popa
movsl
leave
xchg
popf
pushf
push
jnp
ret
xor
jnp
aaa
dec
xorl
mov
jmp
outsb
mov
cmp
js
mov
jns
mov
sti
lea
pop
inc
bnd
aad
arpl
in
xrelease
loop
push
data16
sub
imul
and
fs
fwait
and
sub
out
push
xlat
or
repnz
cmc
shll
jle
notl
sbb
es
jmp
sbb
xchg
aam
cli
pop
or
xorb
sbb
in
xchg
mov
add
add
daa
dec
cld
lret
int
aad
fadds
and
fldt
sub
mov
add
add
pushl
das
mov
int3
push
dec
pop
mov
je
and
adc
lcall
mov
jae
sahf
or
mov
or
outsl
stc
add
mov
sub
mov
xor
sbbb
cmp
cmp
lea
aad
adc
lcall
dec
xor
and
and
cmpsb
jae
lcall
cmp
xor
pop
push
pop
movsb
and
mov
sub
ror
aaa
inc
inc
or
gs
push
add
dec
add
js
mov
in
mov
dec
cmpb
andb
xor
test
push
cmpsl
adc
jne
inc
dec
mov
sbb
and
mov
mov
xor
in
mov
ret
cmp
xor
sbb
movsb
rorl
mov
xchg
xchg
dec
ret
subl
subb
jb
das
fdivs
inc
cmp
add
adc
cmp
cltd
imul
lret
in
add
pusha
push
mov
pop
pop
dec
nop
pop
sub
int
rclb
cmp
cmp
mov
fdivrs
mov
daa
push
div
insl
xchg
outsb
popf
adc
inc
sbb
movb
orl
repz
mov
xor
add
adc
movsb
sbb
outsl
cs
nop
loope
add
popa
jle
inc
jmp
mov
add
rolb
xor
fcomps
aam
push
or
xor
xchg
push
fbstp
mov
add
mov
add
cmp
mov
push
sbb
push
or
xchg
ja
insl
xchg
cmpsb
add
enter
jns
sbb
inc
jp
mov
pop
xchg
les
clc
add
dec
jle
adc
push
sbb
adc
pop
xchg
inc
sub
rcll
xor
xchg
mov
add
and
fldenv
mov
inc
mov
or
adc
movsl
cmp
pushf
push
sub
arpl
or
or
ret
ss
popl
xchg
inc
dec
mov
popf
ret
movsb
fsubs
cmp
push
xor
mov
mov
lcall
xchg
pop
es
ss
inc
lret
in
sgdtl
pusha
popf
movsb
xchg
xor
pop
adc
lods
movsl
cmp
add
sbbl
shlb
push
insl
pusha
add
mov
mov
pusha
aad
dec
es
fildl
sbb
das
arpl
pop
or
fisubrl
sbb
sbb
mov
push
test
jb
insb
pop
mov
xchg
or
push
scas
int3
shrl
in
shll
mov
add
or
lret
rorl
sarl
aam
pop
xor
sbb
or
sub
mov
dec
jo
pop
push
or
ja
jecxz
in
test
or
ss
xor
es
mov
test
movsl
mov
jmp
cmpsl
push
adc
loope
rcr
into
je
or
push
lds
leave
and
jecxz
inc
mov
fs
push
jp
mov
adc
hlt
aam
test
inc
sbb
aam
mov
sbb
test
mov
mov
jbe
dec
xchg
hlt
inc
mov
pop
xor
sub
es
xor
jmp
loop
jbe
inc
dec
adc
jo
stos
sub
jbe
cmpsb
data16
rcrb
or
mov
mov
sub
push
jbe
mov
dec
mov
mov
sub
movsl
adc
shlb
popa
mov
sub
jb
or
sub
ss
push
ret
mov
repnz
test
mov
into
or
pusha
adcl
push
daa
xchg
xor
push
insb
xor
pop
cmp
dec
in
lods
mov
pop
inc
out
dec
movsb
test
loop
adc
jo
mov
lahf
xor
ljmp
sbbl
adc
pop
pop
inc
fstps
movsb
iret
bound
stos
mov
gs
ficompl
adc
mov
push
test
bound
in
jns
mov
sarb
mov
addr16
sbb
fmull
adc
out
popa
rorb
lods
xchg
jmp
mov
test
pop
aaa
inc
mov
dec
xchg
adc
adc
mov
fcoml
add
fstl
enter
rcl
add
jbe
sbb
mov
dec
ret
mov
cmp
orl
jmp
mov
xchg
repnz
outsb
push
fucomp
rol
or
icebp
inc
loope
pop
push
lcall
pop
add
mov
mov
mov
push
shlb
push
imul
or
mov
cmp
adc
leave
outsl
in
push
inc
ret
xor
jmp
or
fsubp
gs
inc
frstor
mov
inc
subb
scas
rol
int3
cmp
fcomps
outsb
nop
mov
nop
in
inc
cs
jnp
lret
mov
push
add
dec
lds
test
rol
xor
pop
scas
mov
bound
int3
cmp
paddsb
bound
inc
and
inc
ds
sub
xchg
mov
mov
push
inc
push
lea
sub
and
inc
add
add
fisttpll
loop
pop
cmp
or
movsb
scas
cli
dec
xor
mov
pop
push
mov
push
inc
mov
add
loope
pop
inc
cld
or
popf
jg
mov
adc
mov
jno
in
cmp
cmp
stos
sarl
nop
lock
ret
push
cs
bound
rcr
or
push
loop
sbb
pop
pop
push
insb
dec
aas
fwait
adc
pop
into
push
cmp
outsl
sti
jnp
loop
mov
jge
aaa
fdivr
sbb
bound
xchg
pop
fsqrt
pop
sti
popf
aas
mov
push
scas
into
pop
gs
ficomps
mov
test
mov
stos
into
in
or
popa
rcr
in
jle
mov
pop
pop
fistpll
mov
mov
movswl
into
xchg
jns
xlat
fbstp
sti
das
push
jae
divb
cmp
outsb
lods
lods
aam
pop
mov
dec
xor
imul
fnclex
out
mov
mov
cmp
rorl
rclb
insb
lret
out
ss
iret
gs
lret
ja
aam
jo
or
daa
addr16
cwtl
mov
adc
fildll
xchg
je
mov
lock
mov
or
daa
mov
jne
pushf
dec
lea
ss
ja
mov
fstl
dec
mov
divb
jb
sti
fimuls
lods
pop
jl
scas
jns
out
jcxz
test
jecxz
push
mov
dec
fdivr
mov
jge
addr16
inc
fdiv
push
mov
fsubrp
xor
outsl
fldenv
dec
orl
loopne
push
jbe
sti
iret
push
jno
cwtl
mov
pusha
mov
pop
stos
jl
cmp
fldl
das
sbb
divl
out
mov
stos
mov
mov
outsb
jnp
das
aad
out
cmp
lods
lret
jns
cltd
pop
sub
xlat
out
insl
out
jecxz
js
out
dec
mov
in
mov
cmp
mov
loope
jo
pop
popf
jne
ljmp
push
inc
mov
clc
mov
sbb
cmp
inc
inc
iret
dec
fidivrs
addr16
ljmp
push
push
imul
jle
inc
arpl
out
jno
ja
fisubrs
sub
out
imul
in
movsb
scas
shrl
sub
scas
cmc
ljmp
pushf
enter
out
mov
bound
mov
cmpsl
out
out
leave
jmp
es
loope
mov
dec
lcall
mov
imul
and
imul
cltd
insl
cmp
cltd
lret
js
cld
jecxz
add
sahf
jnp
push
cmp
xchg
push
push
ds
push
sub
xchg
out
in
fnstcw
jp
ja
push
jnp
shl
fisttps
dec
xchg
repz
aaa
adc
repz
aas
adc
icebp
sti
cmp
jne
mov
outsb
mov
loopne
cltd
push
shll
xchg
push
out
fistpll
test
push
mov
pop
add
das
rcrb
xchg
mov
cmp
jge
jl
ret
fprem
mov
aam
adc
imulb
push
fisttpl
js
popl
xorl
aam
fiadds
cmp
lea
cmp
aad
fsub
ja
out
ja
hlt
fmul
cmpsb
jg
in
jnp
pop
cmpsb
loopne
fisttps
dec
fisttps
xchg
int3
pop
jbe
stc
sbb
lcall
xor
mov
sar
mov
loope
repnz
ds
test
aaa
lret
je
jg
ret
jnp
and
into
jmp
data16
mov
xchg
lods
divb
jmp
jmp
cmp
dec
mov
negl
aad
mov
repz
lret
movsb
sub
in
repz
fcompl
xor
int3
loopne
fimuls
mov
fdivl
das
jae
cld
pop
fdivl
jae
cs
sub
or
into
std
jnp
fcomps
aaa
int
mov
mov
out
jnp
cs
jg
out
stc
mov
jns
gs
inc
mov
nop
cld
iret
jg
mov
sbb
arpl
call
add
jb
jge
xchg
enter
sahf
add
mov
cmc
pop
push
add
xlat
loopne
loop
insl
xor
call
rcl
mov
movsl
int
gs
xor
jbe
sbb
cmpsl
movntps
in
cmp
sahf
xchg
sub
lret
dec
jmp
dec
adc
scas
ret
aas
leave
test
lock
sbb
arpl
in
xor
in
fidivrl
fcmovne
ja
insl
mov
scas
or
fnstcw
popf
push
pop
fstl
jl
mov
movsb
sarl
stos
sbb
pop
cmpsb
jg,pt
dec
jecxz
ja
lock
neg
lret
jle
or
mov
mov
cmp
mov
loop
mov
pcmpeqd
xlat
cmp
sbb
dec
outsb
scas
inc
repz
mov
jmp
jle
faddl
push
nop
gs
sahf
popa
mov
xchg
test
call
mov
out
lods
addb
outsb
subb
dec
mov
pop
outsl
cwtl
and
sbb
hlt
xor
mov
sar
imul
cmp
movb
popa
call
inc
or
jl
sbb
mov
leave
xchg
mov
loopne
jmp
inc
sub
inc
dec
test
js
roll
sbb
xor
dec
mov
mulb
pop
hlt
pop
sbb
add
pop
jnp
push
int
decl
jecxz
mov
cld
xor
loopne
lock
xor
jns
int
push
push
test
rorb
pushl
fwait
xchg
inc
add
cmpsl
jmp
in
ja
or
jl
sti
lock
out
ret
insl
roll
shlb
psubd
fcmovb
mov
gs
mov
push
mov
pop
or
sar
cmpsl
or
and
jns
add
push
or
mov
shlb
adc
add
or
out
int3
mov
pop
arpl
cmpsb
dec
mov
cmpsb
push
addr16
jge
xor
mov
jbe
mov
push
sti
push
int
es
push
fisubrl
ljmp
xor
cmp
mov
mov
stos
mov
int3
xor
ds
mov
pop
push
jbe
sub
outsb
fcmovbe
or
enter
or
lock
or
mov
int3
addb
fmuls
leave
leave
sar
sahf
pushf
popf
add
mov
mov
mov
shl
repz
mov
fisubrl
daa
ret
add
jbe
jecxz
cmpsl
scas
notl
sbb
aad
jp,pn
sub
push
repz
pop
sahf
sahf
popf
pushf
lahf
popf
popf
sahf
mov
push
dec
fildll
push
dec
dec
into
dec
iret
pop
call
cmp
rcll
das
add
jns
addr16
xor
leave
and
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
pop
mov
in
add
xlat
or
push
fsubp
adc
pop
nop
inc
aas
popa
xchg
hlt
mov
mov
cmp
fs
ljmp
mov
imul
mov
xchg
adc
int3
addr16
push
push
sub
es
xchg
in
mov
push
xor
sub
mov
fs
push
sub
mov
popa
jnp
push
sub
mov
jbe
jbe
cmp
inc
cmp
sbb
pop
pop
add
cmp
into
dec
dec
dec
iret
into
add
call
sub
cmpsl
ret
out
jp
jp
jbe
jb
sub
cmpsl
dec
lea
lahf
popf
add
pop
and
ret
out
sub
call
xchg
jle
call
xchg
jle
call
xchg
jle
call
xchg
jle
call
xchg
jle
call
xchg
rclb
jo
jne
out
adc
stos
hlt
sbbb
notb
imul
stos
pop
push
xor
mov
mov
gs
xor
push
repz
xchg
sbb
push
dec
cltd
dec
mov
xor
leave
fwait
ss
and
cltd
xchg
cld
sub
add
hlt
hlt
loope
rcll
das
cld
stc
jle
daa
cmpsl
daa
addr16
pop
je
xchg
push
shll
sbb
jns
sbb
fld
hlt
in
loopne
lahf
sahf
inc
jno
and
lahf
inc
or
sub
jmp
mov
loopne
aaa
dec
inc
ss
xor
xor
jb
fimull
jbe
or
imul
jbe
push
xchg
push
daa
aad
icebp
repnz
xchg
jb
dec
es
sbb
cmp
or
dec
andw
mov
icebp
movsl
sbb
cmc
and
ljmp
cmp
sahf
or
and
cmc
daa
jne
cltd
and
cmpsl
jecxz
lods
and
lea
aam
push
mov
imul
or
dec
rolb
in
dec
es
mov
mov
mov
cwtl
pop
xor
imul
sbb
in
insb
insb
sub
jbe
in
push
inc
into
push
cltd
test
test
sbb
mov
je
push
push
push
jbe
outsb
decb
xchg
leave
and
mov
jb
jnp
cmc
lods
mov
and
push
dec
cmp
mov
jp
sub
jmp
popa
frstor
stc
in
cltd
and
mov
shll
fimuls
cmc
lret
enter
add
addl
xor
inc
stos
sub
inc
fistpl
xchg
xchg
add
icebp
inc
and
xchg
push
xor
push
mov
leave
add
inc
xchg
insb
fisubrl
jnp
xchg
loopne
push
scas
and
push
add
mov
push
scas
stos
lret
rcll
repnz
in
push
mov
mov
xor
pushf
mov
cwtl
ret
mov
test
xchg
aad
cmpsb
ret
loopne
cmpsb
loope
insl
xchg
mov
movsb
fst
jae
je
cmp
fisttpll
mov
push
mov
cmp
call
jae
lcall
inc
fdiv
dec
shll
jo
ds
into
mov
outsb
imul
push
je
aam
dec
pop
xchg
imul
pop
mov
mov
cmpsb
cmp
mov
add
aaa
xchg
inc
fldpi
int3
push
cmp
adcb
xor
jo
test
and
dec
dec
xor
lds
pop
dec
outsb
testl
cmp
xchg
cs
jo
pusha
mov
aad
mov
pop
xchg
dec
push
adc
pop
xchg
pop
pop
pop
add
cmc
insl
out
and
es
in
or
stos
inc
cmpsl
pop
sbb
cmp
mov
and
push
mov
sarl
xchg
je
jmp
in
mov
sbb
cld
dec
in
sti
and
mov
jbe
dec
xchg
add
mov
nop
add
jbe
xchg
in
dec
dec
dec
cmc
aaa
ret
test
lret
icebp
andl
sub
sbb
sbb
adc
call
jns
testb
push
mov
aas
lods
push
mov
bound
xor
sub
or
push
push
mov
jmp
lea
push
sbb
rcll
lea
and
add
test
sbb
mov
adc
xchg
test
jmp
insl
dec
xchg
imul
movsl
mov
fwait
mov
mov
sub
outsb
adc
flds
push
push
push
in
gs
push
adc
arpl
pop
sub
rol
dec
dec
test
push
fnstsw
daa
cld
sahf
rorl
int
sahf
mov
ja
push
pop
mov
sbb
mov
cmpsl
in
lcall
and
aad
pop
mov
mov
pusha
xchg
jbe
push
loopne
or
xchg
mov
int
inc
xor
bound
xchg
mov
or
xorb
push
inc
and
sbbb
aad
loope
push
stos
fiaddl
clc
fsubrs
imul
inc
cld
stos
hlt
das
lods
lods
push
movsb
mov
xor
xor
and
insl
bound
pusha
pop
dec
ret
fisubl
in
push
call
pop
adc
cmp
iret
sub
jnp,pt
lods
loope
jo
mov
mov
pop
fs
dec
mov
dec
adc
mov
enter
sbb
add
movsb
ss
test
push
lock
and
ficoml
data16
ljmp
xchg
or
adc
and
fldt
add
in
arpl
push
mov
loop
xor
xor
push
push
and
push
push
dec
adc
sbb
push
shll
icebp
into
das
mov
xchg
mov
or
imul
mov
sbbb
cs
cmpsb
pop
pop
jnp
push
mov
icebp
adc
cmp
stos
mov
fisttps
push
fmull
fistl
inc
cld
lods
sub
pusha
ret
je
push
fwait
sub
mov
jecxz
mov
and
push
outsl
ret
cli
cmp
les
mov
out
mov
scas
or
stc
mov
fcom
sub
aam
test
call
and
mov
xor
lock
das
imul
jbe
xor
roll
mov
pop
dec
mov
sub
add
rcrl
xchg
sahf
popf
mov
loopne
inc
sbb
stos
push
into
ficompl
out
insl
mov
int
and
xlat
add
jae
cmc
data16
ret
bound
ffreep
ror
jbe
mov
test
insl
int3
outsb
jge
mov
dec
sub
mov
push
ret
pop
xlat
xchg
jge
xchg
gs
lcall
clc
mov
rcl
mov
add
pop
xchg
dec
enter
cmp
shrl
sub
das
jnp
jb
mov
mov
aad
jbe
nop
inc
mov
loope
xor
xor
mov
pop
push
ss
hlt
ja
ss
fstl
insl
push
sub
out
aaa
push
sbb
imul
mov
hlt
je
xor
ljmp
test
ret
cs
jp
rolb
mov
sbb
daa
fs
sbb
mov
or
mov
push
movl
fstps
call
cld
fs
lcall
shll
jo
mov
mov
in
jp,pn
xor
test
mov
adc
aam
in
adc
lock
test
xlat
hlt
gs
sbb
sti
mov
adcb
mov
stos
sbb
lods
fstl
xchg
sub
jmp
popa
cmpb
xor
adc
aaa
cmp
and
add
fbld
adc
push
mov
lcall
and
mov
cmpsl
add
sub
xchg
sub
sub
dec
ds
pop
aad
pop
mov
dec
test
scas
mov
xor
adc
dec
pop
out
std
loop
mov
ret
out
mov
mov
test
push
dec
and
ja
loopne
mov
ss
xchg
cwtl
add
jp
or
inc
jno
jo
clc
cmpsb
call
icebp
push
movsl
xor
scas
orb
push
add
mov
roll
hlt
leave
lock
in
aas
adc
adc
repnz
push
adc
stos
sbb
loope
insb
push
shrl
dec
cld
sub
roll
movsl
xchg
movsl
xor
pop
cmp
sub
or
inc
icebp
test
cmp
adc
sbb
inc
testb
sti
ret
and
mov
xchg
mov
fwait
cli
insl
xchg
fildll
xchg
push
jmp
fnstcw
or
outsb
ss
sbb
hlt
nop
cmp
mov
pop
dec
mov
iret
lods
jno
xchg
lahf
and
in
ret
dec
push
xchg
add
mov
add
pop
push
mov
xchg
add
mov
stos
into
clc
ret
inc
mov
mov
and
mov
jb
in
cli
loope
add
scas
ret
in
and
jge
sub
adc
scas
lods
and
mov
jae
mov
sahf
sub
pushf
pop
andl
filds
arpl
sbb
stos
jl
scas
loop
imul
mov
and
add
xchg
mov
incl
pop
clc
mov
push
loop
testl
cmp
int3
fidivrl
xbegin
icebp
iret
dec
sbb
xchg
push
dec
bound
lret
pop
sbb
or
and
pushf
fwait
pushl
addr16
dec
and
gs
int
jp
xchg
out
in
out
jo
dec
xchg
addb
in
xchg
mov
push
rorl
enter
mov
aad
mov
inc
push
vprotw
ret
cltd
aaa
mov
testl
or
xchg
fucom
pop
shr
adc
push
stos
shr
rcr
out
into
pop
stc
iret
inc
or
mov
sbb
loop
lds
lcall
push
iret
aaa
mov
inc
sbb
sub
repz
dec
sub
dec
pop
sti
mov
sbb
lods
mov
inc
call
dec
shlb
data16
cmp
sbb
xchg
pop
mov
mov
ds
mov
add
fcmovbe
pop
mov
sbb
jae
pop
in
movsb
pop
jge
add
test
out
mov
mov
movsb
enter
ja
cmp
jmp
ds
jns
lahf
nop
ss
push
leave
dec
jge
xchg
sub
mov
lods
cmpsb
jge
lret
dec
mov
loope
lods
xchg
sti
add
aam
ds
ljmp
dec
fimuls
incl
cmp
js
jbe
pushf
mov
adc
mov
dec
stos
xor
js
push
lock
outsl
outsb
dec
sbb
jecxz
sub
xorb
jmp
mov
xchg
sub
xorb
nop
das
push
mov
push
cmp
dec
fdivrs
adc
rorb
stos
dec
ljmp
inc
movsl
testb
inc
add
and
scas
xchg
xor
push
lss
mov
sbb
jb
xchg
rorl
fstpt
push
in
inc
scas
aas
add
mov
pop
adc
sub
sbb
cs
push
ret
outsl
adc
and
insl
adc
aad
imul
cmp
pop
loope
cld
adc
cld
xchg
jmp
mov
lock
and
cmpsl
xchg
dec
fnstcw
dec
testl
fs
outsb
jnp
inc
outsb
ret
inc
jp
pushf
pop
scas
shlb
dec
movsl
stc
jbe
in
ljmp
add
lcall
jge
mov
xorb
fists
push
aas
ficomps
and
push
lahf
test
testb
fwait
cmp
adcb
push
xchg
arpl
pusha
cmp
pushf
popf
mov
cmp
call
in
outsl
sbb
cmpsl
aas
outsb
ds
jg
mov
add
add
and
sbb
add
add
test
add
add
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
adcb
test
or
add
addl
mov
pop
add
adc
mov
mov
pushl
mov
pop
adc
add
jmp
fstpt
mov
and
inc
push
nop
mov
ljmp
filds
bound
mov
jmp
xchg
test
xor
imul
push
movzwl
sub
mov
dec
dec
and
dec
jne
push
pop
jmp
outsl
jl
pop
mov
es
mov
cmpb
inc
dec
cld
adc
jbe
jmp
mov
scas
dec
fsub
mov
inc
je
adc
fildl
subl
test
shlb
add
pop
scas
cltd
add
adc
subb
xchg
inc
sbb
jg
les
subl
push
push
xor
fmuls
adc
mov
mov
je
sti
ret
imul
add
fildl
subl
gs
xchg
aaa
pushf
dec
aas
cmp
or
jno
and
fisubrl
xorl
subl
ja
jmp
imul
xchg
ret
push
subl
jo
jae
jle
xchg
mov
subl
cmp
mov
cmpsb
sub
dec
cmp
or
sub
ljmp
pop
xor
inc
or
fistl
jo
mov
cmp
cmp
cmp
dec
cmp
lret
daa
jg
jbe
push
xor
inc
into
xor
adc
sbb
test
xlat
sahf
pop
addb
and
pop
out
mov
jle
jmp
lds
aaa
vcmpss
push
push
ret
popf
repnz
inc
push
in
push
loopne
pop
lds
jb
in
fistps
fistpll
jmp
adcl
jno
cmp
sub
repz
pop
lds
xchg
jo
test
ja
mov
mov
mov
adc
ljmp
xor
leave
repz
mov
mov
mov
jae
aad
call
xor
movsl
fbld
sub
aam
test
sub
add
push
fisubs
xlat
add
and
outsl
fidivl
aaa
jmp
pop
ds
outsb
fisubs
inc
arpl
cmpsb
add
add
insl
jns
aaa
pop
xchg
adc
loop
pop
or
sbb
ss
inc
hlt
or
jecxz
pop
inc
inc
sbb
jns
notl
imul
movsb
inc
pop
fwait
add
adc
mov
cmp
dec
cmp
pop
xor
add
sbb
stc
xchg
push
out
xchg
xor
jle
andb
xchg
pop
sub
insl
fwait
add
ljmp
mov
dec
in
int3
dec
cmpsl
xchg
cltd
jbe
mov
and
mov
push
out
movsl
fisubrs
mov
inc
push
push
jg
sub
cmp
adc
xchg
adc
and
clc
dec
imul
cmp
fdivrp
lcall
adc
pop
fwait
jns,pn
jno
add
ret
lock
mov
out
mov
bnd
imul
inc
lock
addr16
cmp
ret
sub
mov
jo
jo
vpsrlq
lock
imul
push
lock
ljmp
lret
sbb
and
lock
dec
or
cld
or
mov
inc
lock
dec
add
bound
ret
add
gs
fisubrl
ret
jnp
pop
inc
lock
ljmp
notb
inc
lock
sub
cmpsl
or
and
pop
jmp
adc
push
adc
out
ret
out
adc
mov
adc
sub
lock
out
mov
pop
cmp
mov
aam
out
mov
inc
mov
out
cmp
ret
mov
pop
ds
mov
and
lock
pop
adc
lock
push
insl
sub
xor
ret
imul
cmp
ret
ljmp
cs
push
mov
mov
mov
pop
mov
inc
lock
pop
das
lock
xor
call
test
jmp
hlt
sahf
clc
adc
push
mov
daa
out
lea
insl
sub
lock
pop
jb
inc
lock
push
lret
inc
gs
adc
std
out
imul
inc
lock
shrb
repnz
mov
lock
push
insl
sub
outsb
add
inc
in
ret
fs
aam
jo
adc
and
ret
sbb
adc
xchg
ret
adc
ret
lock
push
adc
stos
out
rolb
dec
xchg
mov
in
cmp
mov
or
push
mov
data16
mov
scas
stc
daa
lods
jmp
or
push
adc
push
jnp
pushf
scas
push
cs
xor
mov
in
jg
sbbl
cmp
sub
jmp
or
push
aad
mov
dec
test
nop
dec
adc
lock
cmp
sub
jmp
or
push
pop
lods
push
inc
adc
lock
cmp
sub
jmp
or
push
ss
ljmp
call
fiaddl
lock
sahf
xor
mov
in
jg
mov
jg
movsl
jo
sub
adc
ret
lock
and
stos
dec
xor
mov
push
or
adc
mov
jo
sub
push
add
divl
mov
push
or
xor
mov
movsl
out
out
adc
ret
or
push
inc
lock
dec
cmp
ret
and
adc
lock
sbb
scas
sub
rol
adc
sahf
jbe
cmp
ss
inc
rol
adc
mov
adc
cmp
movb
adc
jmp
adc
ds
cmp
lds
lods
in
push
pusha
insl
xor
ds
push
mov
pop
or
clc
adc
or
insl
ffree
add
jmp
push
cmp
iret
dec
test
pop
sub
mov
sbb
shll
in
cmp
xor
push
push
cmp
jbe
xchg
lock
aam
push
jg
dec
arpl
movsl
out
nop
mov
push
sbb
sbb
sbb
or
enter
scas
add
clc
adc
ret
lock
lock
lock
lock
lock
lock
lock
cmp
adc
sarl
lock
lock
xor
popa
pusha
cs
fstl
out
ret
lock
lock
lock
lock
lock
push
push
xchg
test
outsl
movsl
in
xor
les
mov
fdivrs
lods
jecxz
pop
fsubrs
int
jns
and
testl
test
mov
xlat
xchg
cmp
mov
add
mov
call
dec
ss
mov
nop/reserved
xor
sbb
jnp
adc
fiaddl
scas
adc
lret
out
sub
inc
enter
dec
call
out
lret
mov
dec
lods
jge
dec
insl
xchg
jae
int3
cld
pop
in
add
cltd
imul
dec
sub
xchg
out
mov
es
sbb
lods
sub
cs
or
pop
test
stos
into
lret
inc
loopne
pusha
push
dec
push
or
xor
and
test
sub
dec
out
xchg
xchg
mov
mov
leave
lahf
and
fdivr
fsubr
int
icebp
cmp
scas
cmp
or
fldcw
cmp
push
xchg
dec
cmpsb
das
cmp
aad
mov
shlb
push
jmp
adc
daa
add
cltd
scas
cmp
test
cmp
imul
adc
push
sbb
xchg
fdiv
stos
movsl
mov
aas
iret
xor
int
mov
mov
mov
jb
and
mov
xchg
xchg
or
jecxz
idivb
and
mov
jmp
push
jo
push
test
fcoml
jmp
cmp
data16
sbb
sbb
imul
out
jle
mov
rol
pop
adc
ja
add
jb
lods
lds
in
mov
cmpsb
xor
jb
xorb
and
pusha
ja
movsl
sti
rol
mov
pop
cmp
addb
mov
insb
cmp
adc
out
ret
add
adc
movsl
dec
cmpsl
leave
std
out
pop
scas
lret
jbe
sarl
aam
cwtl
fstps
push
and
loope
push
and
xchg
cmp
mov
jmp
idivl
jnp
or
test
lret
out
cmp
paddd
ret
push
dec
das
or
je
cs
jmp
mov
mov
jl
sub
rcr
jmp
jg
adcb
into
jns
sbb
rcll
sbb
sbbb
push
mov
sahf
and
ljmp
jp
movsl
sbb
dec
push
insl
push
mov
mov
or
sbb
test
sbb
add
xchg
icebp
mul
into
add
je
ret
mov
ret
out
sbb
aad
pop
and
in
sub
add
xor
add
add
add
or
add
add
inc
add
mov
add
cmp
add
cmp
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
cmp
add
cmp
add
cmp
add
cmp
add
fistpll
add
cmp
add
in
cmp
add
cmp
add
stc
cmp
add
cmp
add
push
cmp
pop
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
cmp
add
dec
cmp
add
pusha
cmp
add
jo
pop
add
add
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
sbb
add
add
add
lahf
adc
add
ficoms
lcall
dec
jbe
sub
add
jg
push
fstl
test
addb
fstpt
repnz
xor
jecxz
test
lods
and
sti
jo
loopne
mov
popf
sbb
andb
mov
shlb
jge
int3
jns
or
pop
mov
sub
sbb
mov
pusha
in
xor
fcom
jecxz
js
mov
and
pop
aaa
mov
xor
stc
ss
test
sarb
movsl
cmpsb
stc
pop
xor
lods
add
js
aas
xor
jmp
sarl
xor
cmpsl
xor
cmp
xchg
xor
mov
lea
push
aam
add
leave
les
mov
loop
cmp
mov
pop
dec
inc
add
in
out
or
push
xchg
jmp
int3
add
pop
mov
data16
fildll
jmp
cmp
pop
pushf
mov
bound
test
sbb
mov
lods
test
dec
idivl
jns
adc
divb
enter
das
andl
leave
cmp
pusha
idivl
fistps
cltd
in
inc
adc
mov
adc
and
mov
cmc
sub
enter
nop
or
daa
push
stos
loope
xchg
adcl
mov
xchg
mov
adcl
sar
adc
ljmp
dec
sub
shrl
frstor
div
shrl
add
gs
aas
ret
setne
loope
jbe
dec
scas
dec
and
mov
sbb
aas
mov
in
lahf
jp
mov
lea
pop
out
mov
loope
xor
mov
fsubr
sti
mov
add
jg
sahf
xchg
mov
sbb
fsubl
and
push
ret
loop
add
mov
movsl
xchg
jl
and
xlat
movl
and
cmp
xor
cmp
xchg
pop
arpl
aad
adc
ret
fnstsw
hlt
jae
and
je
das
lahf
lea
dec
push
call
rcrb
cmp
inc
sub
push
pop
ds
mov
xor
stos
cmpsb
dec
fcompp
mov
lods
mov
mov
sbb
loop
ljmp
sub
fwait
mov
scas
insl
xchg
enter
ljmp
xor
mov
lods
mov
pop
mov
pop
xor
cmp
push
imul
mov
dec
sbbb
cmp
pop
adc
mov
or
mov
ret
rcr
mull
xchg
fildl
mov
icebp
repz
stc
jns
ja
and
enter
jmp
push
leave
jle
jns
pushf
sbb
xchg
mov
aam
sahf
pop
out
in
cwtl
mov
pop
push
sbb
jae
lea
cli
pop
add
sahf
inc
sub
test
inc
subb
and
or
gs
xchg
pop
pop
and
cltd
jg
jnp
cwtl
es
or
cwtl
mov
sub
add
add
or
and
out
imul
xorl
jne
mov
sbb
pop
mov
ja
notl
nop
jne
add
mov
repnz
sbb
test
test
inc
cltd
into
cltd
pop
jne
ljmp
sub
cmp
scas
out
les
movsb
and
pop
mul
inc
iret
adc
add
in
cmp
repnz
outsb
mov
lcall
mov
in
xor
pushf
js
xchg
ljmp
pop
sbb
in
pusha
xchg
xchg
sub
xchg
mov
cltd
lret
push
xor
push
repnz
lods
sbb
enter
test
outsl
rolb
push
sahf
mov
pop
data16
inc
push
loopne
dec
out
pop
addr16
sbb
xor
rcrb
dec
fld
add
sub
sysexit
mov
sub
pop
icebp
insl
scas
or
or
mov
ljmp
pop
loopne
sbb
or
mov
mov
and
ficompl
fwait
xchg
bound
mov
adc
cmp
xor
add
push
push
mov
add
loopne
imul
je
mov
fldenv
and
push
xchg
xchg
jecxz
test
dec
icebp
xor
fwait
mov
out
jne
shll
mov
daa
cmc
cmpsl
xchg
rcrb
fwait
mov
out
or
lea
lcall
sbb
pop
hlt
adc
js
mov
jmp
jmp
cmp
mov
add
and
mov
cmp
push
aam
jne
push
or
loopne
movsb
lcall
add
aam
lods
sbb
cmp
shll
mov
push
and
pop
sub
sbb
lahf
data16
mov
or
and
icebp
jo
xchg
mov
xor
test
mov
std
inc
mov
or
sbb
pop
mov
cmp
dec
outsl
pop
sahf
jp
inc
movsl
idivb
nop
inc
fwait
stc
xorl
dec
push
rolb
idivb
rcr
les
cmp
adc
out
loope
dec
mov
nop
repz
adcl
cld
enter
cltd
sub
dec
loopne
jno
dec
jmp
adc
insl
push
fsubrl
lods
stos
cltd
sti
pop
addr16
repz
xlat
in
enter
cmp
fcoms
jmp
mov
or
popf
jmp
sbb
pop
adc
sub
mov
or
ljmp
notl
xor
inc
lods
stos
loope
dec
xlat
jo
not
mov
pop
int3
in
jnp
movsb
push
aam
je
loopne
cltd
adc
push
inc
rcll
mov
mov
call
cwtl
scas
decl
nop
cmp
add
mov
push
test
xor
call
lds
mov
test
pop
add
push
sahf
addr16
push
cmp
lds
lds
add
sub
jmp
pop
add
out
repnz
xor
rclb
xchg
scas
fs
xchg
jmp
adc
dec
add
xchg
lret
sub
lea
test
dec
adc
jle
mov
pop
sbb
and
cmpb
cmp
adc
mov
dec
fidivrs
add
mov
fwait
sti
sti
sbb
xchg
out
dec
mov
pop
push
xor
push
or
jl
mov
stc
push
shlb
mov
push
mov
lahf
das
fiaddl
test
lahf
repz
ja,pn
jle
push
aas
dec
pusha
or
push
xor
push
cmp
xor
lea
pop
inc
iret
sub
mov
cwtl
testl
jne
icebp
xor
repnz
and
add
jno
cltd
pop
les
sbb
lahf
adc
dec
insb
push
or
dec
rclb
xchg
into
and
cmp
daa
xlat
fadds
add
add
js
push
into
incl
stos
loope
xor
out
and
or
cmpsb
aad
sub
xor
lret
jl
sbb
ficoms
or
or
ja
pusha
ds
sub
mov
xor
push
cmp
test
je
loope
mov
cmpsl
sub
sti
or
and
cmpsb
add
js
or
ficompl
call
dec
push
adc
dec
xor
movsb
movsb
jp
mov
mov
and
mov
xlat
pop
ret
mov
ret
mov
inc
sahf
xor
push
pop
mov
mov
repnz
mov
in
loopne
mov
in
dec
test
int
xlat
jl
mov
aaa
add
stos
mov
push
fdivrp
cwtl
nop
pop
mov
int3
rol
xchg
loopne
mov
stc
mov
jecxz
jge
aaa
gs
lods
in
andl
or
push
nop
sbb
mov
push
dec
mov
jecxz
mov
aas
mov
sub
gs
das
and
loope
into
sbb
rcll
cmp
mov
mov
shrl
icebp
jmp
mov
add
push
je
lret
xchg
push
or
cltd
fnstenv
cmc
ficomps
fcomip
gs
sub
inc
cmpsb
mov
repnz
bound
xor
test
dec
outsl
cltd
xor
stos
pop
mov
jmp
and
pop
jns
pop
jnp
mov
or
inc
inc
mov
inc
adc
adc
out
js
iret
cmp
adc
inc
js
pop
subl
jns
add
mov
pop
xor
daa
dec
mov
jne
not
call
divb
test
mov
mov
hlt
mov
pop
ljmp
inc
and
addl
sbb
dec
enter
flds
rclb
jge
adc
adc
push
test
mov
and
lods
xor
xor
xor
inc
dec
jmp
cs
dec
inc
pop
clc
mov
pusha
xor
enter
addl
xor
stc
xor
cmp
pop
and
push
sub
fbstp
pop
inc
stos
out
dec
mov
pop
inc
adc
arpl
xchg
xchg
inc
dec
mov
aaa
stc
pusha
shrb
add
out
inc
outsb
jp
ljmp
push
or
aas
insb
into
adc
bound
cmp
sbb
mov
and
shll
lahf
xchg
and
push
push
pop
ret
jae
jp
xor
jno
cli
jl
mov
sbb
lods
pushf
adc
dec
cmp
adc
inc
mov
orl
sbb
aas
add
push
sub
out
jle
fwait
sub
sub
jns
insb
push
call
cmp
or
icebp
inc
xchg
dec
popf
movsl
pop
push
dec
mov
adc
adc
inc
out
xor
mov
mov
mov
lods
sbb
xor
jo,pn
in
adc
icebp
sub
pop
rcrb
push
movl
jne
mov
sub
jp
jmp
pop
int
scas
sti
xchg
mov
xor
mov
jns
mov
cltd
in
jg
push
jmp
xchg
sbb
movb
shr
pop
clc
lcall
mov
dec
dec
inc
lahf
jae
mov
std
pop
jne
fidivs
push
cmp
mov
stos
mov
xchg
xor
sub
dec
loopne
sbb
jecxz
cltd
cmc
stc
pop
sbb
push
dec
mov
test
mov
xor
arpl
adc
ljmp
xchg
jl
mov
xor
popa
jnp
and
scas
imul
mov
scas
mov
dec
sahf
test
in
lret
or
mov
mov
cmpsb
or
lods
pusha
mov
imul
pop
and
jmp
fs
jg
fwait
je
dec
and
cmc
sbb
cli
ljmp
dec
push
jns
aaa
fldenv
adc
xchg
lods
pop
dec
jge
es
inc
push
rcrl
push
push
outsb
aam
jmp
scas
test
lds
loop
lret
lcall
jb
mov
dec
add
fistl
inc
imul
cmp
xchg
jecxz
push
out
mov
push
int3
lock
and
in
jge
pushf
shlb
jae
dec
jg
test
das
daa
lods
insl
ret
push
movq
outsb
inc
sbb
push
filds
in
aad
lea
adc
ss
xor
test
jp
js
and
ret
cmc
insl
pop
sub
fwait
adc
bound
push
mov
scas
mov
or
pop
cltd
test
jnp
jno
out
jl
lock
and
jl
lock
sub
mov
or
and
ret
lret
mov
inc
inc
push
xchg
xor
jp
inc
cmp
cmp
xorl
out
cmpsb
test
popa
add
xor
cmc
sub
jmp
mov
push
pop
sbb
inc
lahf
push
inc
lcall
mov
mov
inc
dec
out
cmp
fists
mov
test
movsl
pusha
mov
mov
mov
cmp
setge
and
in
or
cmp
xor
pop
jno
shlb
adc
push
je
sbb
cmpsb
pop
idivl
add
adc
inc
lret
mov
cmp
fwait
and
outsl
xchg
enter
sarb
jg
cwtl
es
out
inc
je
movsl
fisttpll
mov
imul
inc
pop
jle
lahf
jecxz
adc
inc
mov
mov
out
mov
add
lcall
sbb
lods
xchg
sbb
sub
fwait
pushf
fisttps
int3
sti
sbb
mov
xlat
cmp
cmova
iret
testb
mov
sub
jno
fmul
leave
pop
and
mov
das
imul
leave
mov
mov
rcrl
pop
add
int
cmp
sahf
inc
arpl
adc
hlt
cmc
loopne
mov
ja
insl
xlat
lret
outsb
xor
dec
sub
roll
hlt
fadds
pushf
mov
popa
pop
sbb
cwtl
out
xlat
mov
jecxz
pop
in
sti
out
pop
push
pusha
inc
push
outsl
push
sub
fisubl
mov
sti
shrl
enter
cmp
cmpsb
mov
ret
pop
cltd
sub
cmp
sub
pop
dec
adc
jl
xchg
cmp
popa
cltd
insl
shrb
and
push
je
incl
movsl
jle
mov
or
inc
ret
jns
pop
iret
adc
in
mov
sub
into
inc
mov
outsb
push
push
cmpsl
aaa
insb
rcrl
fildl
lds
cmp
rorb
movsb
das
inc
fucom
and
adc
add
std
mov
add
dec
push
jno
cs
sbb
outsl
xor
cmp
inc
lahf
pop
xor
imul
pop
orb
jne
push
dec
cmpsl
sub
test
sub
hlt
shl
sarl
pop
cmp
pop
popa
lea
shlb
cld
mov
fildl
sbb
jle
pop
add
cli
pusha
add
sbb
inc
movsb
je
mov
outsl
inc
xor
push
lods
fistpl
into
lret
add
js
test
insl
or
hlt
test
fucomi
shll
inc
lods
out
fs
fisttpl
mov
xchg
push
pop
jbe
sub
mov
popf
in
sbbb
jae
hlt
ja
xor
sahf
imul
and
rolb
subl
mov
cld
bound
loop
js
cld
push
adc
sti
jg
xchg
pop
sub
jb
aam
push
pop
dec
mov
ret
xor
fisttpl
arpl
fisubrs
xchg
popf
mov
in
and
push
xchg
mov
fucomi
aaa
movsb
xor
jb
movsb
push
xchg
mov
ja
lods
lret
fstpl
in
fsts
imul
pop
hlt
cmp
adc
or
in
mov
cmpl
jle
add
out
or
xor
addb
pop
rcll
addl
dec
pop
lahf
fiadds
mov
cmpsb
loope
mov
imul
aad
mov
loop
mov
xor
lods
xchg
jmp
or
dec
push
mov
fcoms
add
insb
cmp
mov
enter
cwtl
stos
icebp
lret
lock
ss
sub
orb
loop
movsl
aas
mov
xchg
int
add
lock
push
fistpl
enter
and
dec
xor
ja
shr
cmp
pop
ret
pushf
std
sub
or
xchg
jno
les
or
add
add
dec
add
ror
jae
and
and
leave
adc
jns
in
lahf
jae
test
and
push
cmp
clc
add
add
sbb
lcall
xor
leave
dec
aas
pop
mov
rorb
or
cld
lahf
out
push
and
jecxz
xor
push
mov
pop
pop
dec
inc
mov
shrb
mov
adc
mov
and
push
mov
lahf
psubq
mov
inc
imul
sarb
fstl
cmp
pop
jl
bswap
mov
sub
jnp
add
push
mov
sbb
cmovle
mov
es
push
mov
pop
and
mov
adc
mov
and
sbb
pop
stos
cmpb
rcll
divb
js
dec
sbb
mov
inc
dec
test
cmp
cwtl
in
cltd
fcmovne
lahf
push
or
push
xlat
cmc
adc
push
lock
fsubrs
xlat
filds
add
pop
lret
adc
pop
mov
xor
daa
dec
out
inc
dec
mov
jecxz
data16
mov
xchg
ss
cli
jg
lahf
test
pop
mov
pop
sub
loopne
outsb
sub
stos
jnp
stos
jbe
mov
jo
or
loope
pop
gs
pop
adc
and
and
call
sbb
jecxz
xchg
add
movsl
clc
dec
rcl
in
jle
int
out
aad
push
mov
enter
iret
mov
adcb
outsb
out
fstps
adc
lods
leave
and
adc
jmp
dec
mov
xchg
mov
imulb
nop
popf
clc
xorl
enter
jmp
push
mov
fmull
sbb
sbb
sub
mov
pop
int3
xchg
les
adc
jecxz
iret
rcrb
stos
push
adcl
pusha
jns
jb
push
sbb
sbb
xchg
pop
sbb
stc
div
into
gs
pop
jle
iret
pop
push
cmpsl
cmp
sbb
in
cmp
sbb
movsb
adc
pop
xor
adc
test
xchg
lret
and
lods
cmp
hlt
mov
imul
pop
push
jns
add
nop
std
jmp
mov
or
mov
mul
sub
shll
cmpsb
clc
adc
outsb
iret
xchg
xor
xchg
push
jae
pop
fnsave
adc
sub
adc
and
xor
pop
shlb
sub
push
mov
inc
cmp
test
push
mov
sub
ja
test
ljmp
stc
loop
ret
daa
adc
incb
dec
movsl
movb
mov
push
fucom
inc
aad
mov
and
mov
pop
mov
loope
dec
inc
pop
adc
pop
jl
sub
or
nop
xor
addb
inc
loopne
cwtl
push
shrl
data16
fnsave
call
loop
fsts
mov
mov
push
fidivl
pop
leave
cltd
insl
xlat
add
cmp
maxss
ffreep
push
push
push
mov
fnsave
cmp
pop
cmp
mov
shll
or
jge
jb
jne
pop
xor
in
mov
inc
das
out
xchg
dec
cld
sbb
test
dec
cs
push
jb
imul
push
dec
gs
insb
mov
std
das
xchg
sub
cmp
enter
xchg
enter
in
inc
mov
mov
clc
adc
andl
imul
cld
fsubrs
subb
fcom
jno
cmc
xchg
sar
fxch
pop
rcrb
dec
xchg
push
add
dec
push
stc
dec
arpl
sub
dec
push
in
ds
xor
int3
push
test
xchg
cmp
add
push
nop
ret
add
mov
aas
cltd
js
lret
outsl
insl
clc
mov
mov
cltd
and
push
sahf
inc
dec
das
outsb
or
xor
lret
nop
mov
push
xor
cmp
mov
cltd
inc
mov
jnp
rcr
cmpsl
push
aad
mov
xlat
push
dec
adc
sub
xchg
ret
cmp
ljmp
movsl
mov
xchg
jl
mov
sbb
rolb
lock
dec
fidivl
xor
adc
xchg
mov
test
pushf
loope
add
out
or
shrb
dec
aas
pop
xchg
popf
pop
lahf
daa
ss
cmp
inc
inc
push
mov
adc
insb
outsl
movsl
pop
lock
daa
cltd
scas
fisttps
sar
in
in
dec
mov
into
adc
icebp
inc
popf
and
adc
ds
sub
xor
push
jg
lret
cmp
inc
ljmp
mov
out
imul
mov
add
arpl
push
jns
in
call
fnstcw
cmp
adc
into
sti
popf
popf
xor
shrl
or
fcmove
popa
int
fistl
mov
movsl
test
add
decb
pop
sub
je
pop
stos
sub
mov
out
imul
adc
aad
aad
xchg
mov
adc
movb
mov
add
pop
xchg
xor
cmp
add
filds
outsl
or
out
add
jo
ja
mov
fs
dec
mov
imul
pusha
add
hlt
inc
adc
push
mov
sti
fs
xor
aaa
pop
jmp
pop
jl
aaa
or
dec
jae
imul
fbstp
mov
or
adc
xor
pop
es
into
adc
mov
cmp
pusha
dec
xor
mov
push
iret
cwtl
lcall
enter
pushf
orb
mov
add
mov
inc
lret
js
repnz
lret
inc
stos
cmp
incb
push
adc
mov
dec
xor
inc
xchg
addb
dec
xorb
fisubrl
lret
sub
mov
add
mov
sbb
dec
les
jge
hlt
and
cmp
idivl
out
decl
pop
mov
shrb
pop
dec
sub
dec
xor
outsb
sub
cli
test
imul
jecxz
lea
shlb
add
push
fisubs
mov
pop
cld
imul
clc
sbb
insb
sub
stos
in
add
dec
fs
cmp
les
gs
jg
inc
js
in
dec
test
inc
mov
sbb
and
inc
call
flds
jbe
fildl
pop
xchg
subb
call
jo
xor
stos
jecxz
or
and
mov
out
emms
out
push
adc
jmp
dec
adc
shll
int3
and
or
jle
pop
pop
inc
sub
and
pop
xchg
push
push
stos
rep
lock
xchg
into
push
pushf
mov
mov
mov
mov
jmp
add
push
test
push
jno
stos
adcl
push
push
mov
cmpsl
je
adc
imul
fwait
and
lods
cmp
rcrb
sub
mov
inc
inc
and
ret
jmp
pop
hlt
out
pop
xchg
cmpsb
imul
gs
cmp
xchg
and
aas
les
cli
add
mov
mov
jne
dec
addr16
jb
lret
rcl
push
mov
ljmp
dec
xor
mov
pop
loop
cs
stc
and
dec
es
in
leave
imul
push
mov
stc
cmpsb
lods
int3
cmp
dec
xor
mov
xchg
xchg
lret
popf
jge
subl
leave
iret
aaa
imul
icebp
jns
fmuls
and
aaa
add
cmc
iret
inc
jno
scas
cmp
leave
mov
lods
xchg
fisubrl
repnz
fadds
arpl
es
adc
testl
ds
inc
aam
aam
out
push
pop
mov
or
push
mov
icebp
jecxz
lock
or
sbb
iret
in
xor
xor
aad
scas
leave
stos
ljmp
push
push
sti
mov
dec
xchg
leave
shrl
mov
push
or
push
in
push
dec
movsb
enter
test
mov
sbb
sbb
fisttpl
fldt
lcall
icebp
adc
fistps
scas
mov
mov
je
scas
aaa
adc
lahf
mov
mov
push
xchg
mov
mov
and
loop
std
sub
jbe
addl
scas
lret
or
sub
pop
push
mov
cmp
lods
pop
xor
pusha
sub
mov
xchg
cmp
addl
xlat
sbb
mov
sbb
insl
lahf
push
pop
push
adc
int3
int3
xlat
jg
mov
mov
shl
adc
sbb
mov
insl
daa
dec
cmp
inc
cli
pop
sbb
mov
shl
cmp
cwtl
iret
push
call
hlt
stos
jne
ds
mov
mov
dec
mov
sbb
pop
aaa
pop
jne
jmp
inc
je
or
jmp
leave
insb
xchg
push
les
mov
jmp
push
dec
mov
inc
push
dec
push
fisttpl
out
fildl
popf
fwait
xchg
arpl
inc
push
dec
mov
inc
cmp
push
jge
icebp
test
cmpsl
std
ss
pop
or
insl
jecxz
rolb
pop
daa
sub
in
out
popf
outsb
xor
cmpsl
sbb
xor
lcall
outsb
enter
mov
add
pusha
sub
jge
sub
int3
jecxz
rsm
dec
dec
and
jns
lret
add
mov
xor
repnz
inc
xor
pop
and
scas
lret
iret
mov
add
insl
jle
xchg
mov
sti
push
mov
and
dec
sti
mov
nop
lret
jmp
sbb
mov
add
inc
iret
cmp
icebp
sbb
dec
scas
cmpsb
pop
std
mov
push
dec
push
push
outsb
fidivrs
push
ss
je
mov
push
cli
jmp
out
jp
mov
arpl
push
mov
leave
int
mov
inc
add
es
sti
jb
dec
fldcw
nop
cs
xchg
rorl
out
lret
jne
add
lods
cld
push
jp
addl
sbb
out
jno
insl
iret
movsl
push
mov
lcall
mov
je
icebp
loope
sub
in
xor
into
ficompl
sbb
lods
mov
aam
push
push
imulb
mov
jne
imul
pop
push
mov
fs
in
mov
aam
or
cmp
xor
addr16
or
lret
mov
sti
pusha
sub
sbb
adc
outsb
sti
lds
js
scas
fwait
imul
xor
hlt
fwait
aad
fimuls
jle
test
xchg
adcb
les
mov
clc
rorl
sub
stos
imulb
iret
xlat
adcb
std
push
add
adc
lret
pop
ss
addb
mov
pop
inc
mov
movlps
movsb
loope
cmpsb
mov
cmp
xchg
loope
dec
inc
xchg
ss
cld
dec
mov
out
pop
lret
cltd
inc
addr16
pusha
fnop
cwtl
es
adc
push
scas
adc
xor
sbbl
dec
in
pop
iret
fsubrs
jnp
js
push
ret
shl
pushl
sbb
gs
jmp
pmaxsw
rcll
cmp
lcall
int3
pop
mov
sbb
movsl
and
dec
mov
ss
cwtl
in
add
ds
push
add
dec
in
push
sti
and
cld
into
pop
mov
out
cli
and
stos
mov
and
in
shrb
out
mov
cmpsb
pop
aad
jge
pop
xor
push
push
outsl
or
insl
xchg
push
xchg
jb
mov
cmp
pop
xchg
pop
lods
popa
sub
faddl
out
in
adc
mov
push
pop
rorl
sub
xor
mov
fucomi
lcall
int
cmp
out
or
data16
sbbb
mov
jae
shr
push
push
fldpi
iret
adc
cmp
pop
xor
shll
jecxz
mov
inc
xchg
out
lcall
mov
jns
jb
adc
aam
cmp
adc
mov
mov
mov
mov
lahf
pusha
mov
lock
pop
stc
scas
dec
cmp
mov
fcomip
das
mov
inc
call
clc
out
mov
and
push
mov
gs
xor
test
sub
in
stos
lods
mov
jecxz
ss
push
lret
orl
push
ja
lds
add
das
jae
stos
add
out
lahf
adc
dec
sti
aaa
rclb
int3
js,pn
inc
test
std
aam
mov
outsl
push
adc
mov
adc
out
rcl
pop
enter
dec
push
xor
dec
stc
push
lret
push
mov
and
sub
add
cs
xor
push
cmpsl
mov
adc
in
add
adc
lahf
inc
inc
mov
inc
std
mov
pusha
add
imul
sub
daa
inc
insl
adc
cli
push
dec
xchg
out
dec
inc
shlb
cmp
mov
dec
aaa
xchg
push
jg
test
add
dec
and
sub
push
adc
test
ret
cmp
in
mov
fadd
mov
adc
sbb
fnstcw
imul
push
popa
dec
cmp
sub
add
test
call
ret
clc
xchg
testb
test
clc
xor
sbb
shlb
xchg
and
pop
dec
xchg
mov
mov
mov
push
sti
daa
add
xor
movl
and
stc
pop
sbb
xchg
rcr
or
adc
cmpsb
lock
cmc
mov
dec
sub
jmp
lock
out
ret
ds
cmp
dec
ljmp
stos
test
inc
xchg
imul
sbb
xor
pop
sub
out
xor
sbb
dec
lods
sub
and
rclb
and
add
pushf
dec
push
movsl
dec
dec
push
enter
pop
aam
lahf
ret
aad
cmpsl
add
dec
jo
test
scas
test
je
ja
int
mov
adc
pop
jb
mov
and
mov
xor
add
mov
sbb
dec
dec
adc
pop
pop
sub
dec
ljmp
jnp
inc
mov
xlat
popa
mov
sti
ret
jnp
mov
sbb
push
xchg
xor
or
ja
mov
cwtl
std
xchg
mov
jmp
add
sub
int
rolb
push
pop
or
pop
xchg
sti
pop
arpl
scas
dec
bound
std
out
gs
es
sub
dec
imul
rol
movb
pop
and
push
add
cmp
pxor
sbb
in
or
into
or
mov
imul
dec
mov
leave
and
test
ss
jae
mov
pop
mov
ds
pop
es
mov
cli
sarl
and
adc
add
mov
sarb
and
jnp
arpl
cmc
gs
pop
add
pop
inc
inc
and
mov
es
sbb
or
pop
cmpsl
fldcw
fildll
dec
cmp
ja
ror
ret
jmp
or
daa
repnz
imul
into
and
fldenv
pop
push
pop
add
sub
pop
orl
dec
adc
mov
imul
dec
xchg
dec
jb
jp
dec
stos
pop
mov
add
add
cmp
insb
pop
ds
jecxz
mov
adc
mov
pushf
jmp
jae
cltd
inc
push
enter
das
ret
jl
cmpb
add
cli
loope
pop
pop
and
loopne
jb
sahf
sti
and
cs
xchg
mov
mov
aaa
push
mov
dec
jo
scas
mov
jnp
ret
mov
add
and
cmpsb
push
into
push
sbb
pop
cmp
dec
sarb
dec
add
mov
and
dec
pop
push
lret
dec
lcall
icebp
ja
fwait
pop
fwait
pop
in
jae
sarb
nop
dec
iret
fldt
xchg
loopne
int3
fidivrs
xor
out
int
mov
dec
mov
lea
pop
inc
clc
xchg
test
push
push
aad
sub
cltd
ljmp
adc
or
sahf
dec
mov
inc
xchg
inc
xchg
je
mov
xor
lods
dec
push
push
inc
in
arpl
hlt
test
notl
into
pop
lds
mov
inc
dec
push
xchg
xchg
xlat
lcall
cld
xor
test
xchg
sbb
jae
dec
arpl
scas
adc
xchg
test
xchg
mov
std
xchg
sbb
aas
rcl
lcall
push
mov
lcall
mov
stc
iret
and
cs
jb
dec
inc
andb
outsb
inc
test
push
xchg
fistl
dec
shlb
add
jg
les
stos
and
inc
int
rcl
fisubrs
jae
xchg
sbb
call
sti
add
sub
and
jne
xchg
cmp
popw
jg
cli
or
pop
mov
lods
fsts
sbb
or
insb
lock
test
push
mov
add
lahf
int3
mov
or
adc
or
mov
fldl
js
jl
jl
cltd
xchg
cmpsl
sbb
push
cmp
adc
out
insb
inc
dec
enter
or
or
xor
lahf
jo
xchg
lock
jno
popa
xor
sub
test
fdivl
jae
js
mov
or
cmp
stos
xor
jmp
hlt
cmpsl
xlat
in
cs
ret
test
dec
jo
nop
xchg
out
fwait
sti
sbb
cmpsb
add
inc
sti
sti
add
mov
pop
adc
xchg
cltd
popf
push
add
ljmp
jecxz
fstpl
out
jo
in
mov
outsb
mov
out
das
cltd
or
bound
xlat
mov
ret
rorb
jge
xchg
adc
hlt
outsb
jne
sub
out
xchg
rorb
push
addb
iret
push
pop
lods
pusha
loope
subl
pop
mov
js
fbstp
jae
jnp
and
jg
imul
xor
mov
mov
repnz
dec
sub
mov
and
inc
lret
sbb
jns
add
sub
add
mov
pushf
f2xm1
jnp
adc
sbb
inc
xchg
jb
jb
and
adc
imul
xchg
ret
jmp
in
movsb
add
xor
aas
inc
cmp
int
cmp
sbb
loop
sbb
je
out
into
ret
shlb
and
lods
call
movsl
pop
fstpt
lods
movsb
dec
lret
stos
mov
inc
jmp
dec
push
adc
xchg
sbb
aaa
aam
pop
mov
mov
inc
scas
jae
jmp
in
es
mov
je
xor
sahf
mov
push
or
push
shll
mov
in
in
std
push
repz
sub
mov
push
sub
fsubrs
in
xchg
popa
in
jle
mov
adc
mov
sbb
mov
clc
shll
mov
lods
fistpl
rcrb
pop
loop
push
or
mull
rcl
fisttpl
xchg
sti
dec
arpl
mov
mov
mov
popl
data16
fwait
dec
ss
dec
nop
jb
lds
adc
jno
int3
or
pushf
mov
lcall
push
sub
sub
inc
andb
xor
cli
scas
lods
xchg
icebp
push
lret
fsubrl
jecxz
dec
cld
push
mov
out
and
leave
cli
fildl
mov
flds
lret
fistpll
ja
loopne
repnz
leave
jecxz
in
lret
xchg
sub
loopne
sbb
add
std
arpl
aas
sbb
pop
sbb
jo
sbb
mov
xlat
add
add
fistpll
push
dec
aad
sar
sub
xor
cmpsl
mov
push
dec
dec
pusha
pop
rcrb
hlt
cltd
cmp
or
pop
cmp
js,pt
mov
xchg
inc
fsubrp
jp
sbb
aam
imul
or
add
outsb
cmp
sub
test
dec
adc
or
je
mov
in
pop
movsl
mov
ds
cmpsl
clc
roll
loope
mov
loopne
xchg
call
std
aas
nop
jb
in
adc
push
dec
imul
fistpll
push
push
and
stos
mov
inc
loopne
stc
mov
push
lret
mov
outsl
or
and
stc
jecxz
loopne
cmp
jg
jecxz
jge
push
inc
loope
sbb
adc
xor
inc
mov
cmp
cmpsb
dec
mov
add
cmp
xchg
mov
push
jae
cs
leave
xor
jns
push
xchg
push
push
leave
fstpt
pop
out
push
and
adc
addr16
jbe
inc
xor
xchg
mov
xchg
clc
cmpsl
inc
cld
outsb
or
pop
dec
xor
sub
inc
decb
cli
sbb
lds
sub
mov
jg
jae
mov
cli
lahf
mov
xor
jmp
push
push
sub
data16
test
repnz
mov
out
insb
sub
roll
stos
icebp
xchg
adc
add
out
xchg
sahf
sub
lcall
sbb
pop
cmp
call
leave
push
lock
pop
pop
cltd
jno
dec
pop
mov
lret
pop
out
adcb
jns
imul
or
adc
jl
fistpl
inc
dec
testb
push
sbbl
cmp
dec
jmp
mov
mov
mov
cmp
sahf
out
jno
mov
adc
daa
sub
add
rorl
mov
stos
dec
jmp
and
ds
jp
call
mov
ffreep
imul
fildll
stos
sub
jbe
sub
stos
ret
and
in
addl
arpl
std
dec
das
or
cmp
mov
cld
ja
pop
fildll
pushl
rorl
lea
sub
or
adc
xor
es
xchg
cmp
push
sub
test
in
sti
lods
movsl
sbb
stos
aam
ret
fimuls
and
xlat
jno
insl
cmp
inc
or
sub
call
push
clc
stos
xor
dec
ss
insl
clc
or
mov
leave
add
shll
xor
inc
leave
adcb
sbb
nopl
sub
mov
cld
jmp
jae
push
shll
xchg
mov
or
mov
lock
push
jno
ss
mull
sbb
ss
jge
xchg
stos
xchg
loop
mov
mov
dec
insl
jns
cmp
push
xor
sub
ja
push
mov
mov
jb
push
fldl
dec
mov
mov
orl
pop
ja
or
xlat
jp
and
jp
mov
insl
inc
mov
sub
cli
xor
or
jne
and
outsb
xor
sub
xchg
adc
in
lea
pop
xchg
and
mov
test
jecxz
mov
add
cmp
call
lahf
mov
leave
sbb
jecxz
push
jb
push
test
mov
and
adc
das
dec
out
aas
ret
inc
pop
les
or
push
movswl
addl
invd
dec
add
pop
scas
push
shl
lods
cs
lret
iret
sub
fnstcw
stc
gs
mov
mov
mov
mov
int
repnz
pop
and
cwtl
sbb
add
xchg
imul
ret
sbbb
nop
imul
mov
mov
dec
call
test
outsb
push
pop
jbe
fcomp
xchg
pop
jmp
fisubl
orb
das
adc
bound
adc
pop
sub
mov
jae
xor
sub
push
pop
mov
lret
jmp
push
xchg
inc
sbbl
pop
and
test
in
cltd
ds
imul
sarl
into
add
gs
clc
dec
jb
xchg
xchg
jbe
inc
add
jo
insb
adc
in
jecxz
or
sub
sbb
ror
subb
xor
clc
in
movhps
mov
xor
push
xchg
fs
das
cmp
push
faddl
jle
jg
out
pusha
orl
xorl
fnstcw
je
mov
mov
int
jp
jg
pop
shlb
in
in
shlb
jp
push
ds
rcrb
mov
imul
subb
xor
int3
xchg
mov
xchg
out
mov
ds
adc
cld
sbb
push
jle
outsb
mov
dec
clc
ret
mov
aaa
mov
jns
loope
lea
sahf
hlt
and
push
sarl
outsl
paddsb
push
xlat
lret
insl
jne
and
les
sub
add
add
inc
inc
mov
xor
jne
fsubr
mov
pop
cmpsl
cmp
inc
mov
push
xor
xchg
jmp
cmp
mov
lods
fsubs
xor
push
movsl
pop
xor
mov
stos
cmp
xchg
mov
scas
rcl
mov
ret
push
jmp
mov
xor
and
push
lret
data16
scas
jle
cmc
mov
sbb
shrl
push
in
push
dec
sub
rclb
or
xor
cmp
lock
or
jnp
fmuls
pop
test
ret
jmp
stos
cmp
xor
cmp
inc
aam
imul
and
int3
cmp
mov
ss
les
jg
test
mov
xchg
aad
mov
or
scas
bound
cli
xchg
fiadds
lahf
or
pop
cmp
mov
ja
push
mov
gs
ret
xor
fchs
or
dec
mov
xchg
inc
or
loopne
dec
stos
fs
jne
or
mov
mov
je
lock
xor
xchg
lret
sahf
mov
hlt
lcall
js
aam
cmp
aad
loopne
xchg
and
jg
push
mov
sti
fldl
mul
repz
pop
out
dec
aad
jno
bswap
movsl
subb
sub
fists
mov
rep
rol
cltd
push
negb
push
add
pusha
mov
fwait
mov
mov
adc
in
je
adc
adc
out
fwait
aaa
imul
mov
pop
pop
jmp
iret
dec
inc
inc
add
scas
add
test
js
sbb
xchg
add
shll
mov
notb
or
mov
mov
add
xchg
popf
mov
adc
pusha
dec
adc
jns
jbe
inc
add
or
xor
lods
jnp
add
int3
mov
lahf
into
sub
sub
lods
push
xchg
repnz
pop
or
out
mov
lret
sub
js
lock
sbb
push
les
cmp
mov
repz
mov
and
adc
pop
sbb
andl
enter
shll
jo
lret
jge
arpl
xor
pop
in
xchg
cld
inc
inc
popa
mov
xorb
mov
dec
or
mov
insl
xchg
inc
cmp
or
xchg
fdivrs
sub
fs
jmp
jmp
mov
scas
or
jb
imul
sbb
or
xlat
xor
in
fildll
test
repnz
addl
dec
daa
cmp
test
xor
call
sti
jno
lahf
sahf
sbb
daa
mov
ss
dec
ret
sbb
cmpsl
pop
je
in
cwtl
ja
xor
jp
sub
inc
mov
icebp
imul
pop
into
push
sahf
push
push
popf
xor
push
lret
push
jbe
xchg
adc
mov
mov
xor
add
movl
in
mov
ror
adc
pop
jo
ja
cmp
fdivp
dec
fildll
cmp
xor
mov
je
jg
xchg
sbb
in
jle
in
gs
mov
lds
mov
mov
pop
sub
popf
cmp
and
inc
mov
jb
mov
adcl
mov
xorl
mov
add
adc
cwtl
jae
xchg
scas
jae
pop
mov
push
xchg
call
das
push
adcl
lret
pop
repnz
iret
stc
imul
sub
sub
repz
les
or
stos
jnp
js
hlt
imul
add
fnstenv
push
pop
ret
cmc
cmc
dec
jns
scas
inc
stos
int3
dec
shll
popa
bound
push
jmp
xchg
into
sahf
and
mov
lods
andl
sbb
lock
pop
push
inc
movsb
stc
lods
xchg
rcrb
fmull
test
push
sub
jae
push
mov
xchg
jg
mov
pusha
pop
adc
push
nop
jae
mov
dec
pop
rcrb
cmp
dec
mov
bound
cmpsl
pmaxub
and
lar
ret
insb
scas
jns
lret
movsl
pop
sbb
arpl
test
mov
xchg
lahf
sbb
mov
jg
mov
add
pop
nop
pop
insb
or
fstpt
adc
in
push
mov
addr16
mov
int3
cmpsb
cmp
add
test
rcrb
push
or
repz
cld
dec
stos
and
ficomps
jbe
jns
push
enter
inc
and
push
xor
or
clc
fstpt
mov
imul
mov
dec
je
push
aas
divl
ja
xchg
int3
sbb
mov
push
push
leave
jne
fs
push
dec
pop
dec
setbe
push
pusha
jnp
lahf
dec
adc
icebp
testb
mov
sti
lock
insb
and
bound
push
rolb
fldt
ljmp
mov
jnp
nop
out
stos
and
sbb
ljmp
pinsrw
sbb
fisttps
shll
sbb
scas
das
daa
cmp
data16
cmp
dec
daa
pop
adc
out
jmp
sbb
inc
xchg
and
mov
sti
aam
ud0
outsb
jnp
or
nopl
loopne
cmp
das
dec
xchg
stc
sbb
pop
mov
shl
call
divl
incb
adc
ljmp
dec
dec
adc
pop
add
mov
loope
mov
outsl
scas
adc
jae
insb
jmp
mov
icebp
fdivp
mov
mov
cmp
fsubrs
mov
mull
add
inc
popf
pop
popa
test
popa
aad
loopne
scas
cmp
or
cltd
inc
sub
lea
ret
mov
mov
cltd
mov
jae
loopne
loopne
out
movsl
dec
or
cmp
jle
dec
cltd
das
jmp
insl
inc
fwait
lods
add
ret
inc
lahf
pop
inc
mov
fisubrs
inc
jg
stos
inc
aas
dec
xlat
adc
ret
xor
lret
adc
jns
sti
xorl
cmc
xchg
add
mov
loopne
paddb
pop
mov
lret
mov
dec
push
aaa
sahf
outsb
xor
scas
ficoms
xchg
or
xlat
fcomps
in
push
push
adc
mov
mov
lret
jne
ljmp
mov
and
push
leave
fidivrs
movsl
or
mov
ja
and
mov
rorl
lods
and
movsb
hlt
fstl
jae
mov
fildll
jbe
js
js
push
arpl
xchg
fsubrl
cmp
sub
lds
pop
in
loope
or
dec
fs
lods
fwait
aam
pop
aad
push
jb
inc
call
vphsubwd
mov
mov
cs
ret
clc
or
dec
mov
mov
icebp
pop
testl
mov
aad
or
pop
jle
pop
imull
jo
dec
mov
mov
sub
ret
push
std
cmpb
mov
mov
paddb
aad
adc
jo
jnp
add
push
stos
inc
mov
sarb
rcl
gs
push
xor
xchg
pop
mov
cmp
mov
cmp
dec
mov
scas
pop
aam
fs
ja
add
dec
rcrl
mov
fs
icebp
mov
inc
push
adc
cmpsb
arpl
popl
test
test
xor
mov
cmp
pop
mov
pop
aas
stos
outsb
imul
and
mov
mov
push
lea
cmpsl
pop
pop
pop
stos
lods
rorl
jb
roll
outsl
shrb
xor
inc
mov
outsb
push
enter
cmpsl
inc
sbb
xorb
pop
mov
sub
daa
daa
sbb
mov
and
popf
mov
dec
xchg
xchg
addr16
or
cmp
lahf
movsl
imul
in
xor
fimuls
pusha
xchg
outsb
xchg
pop
mov
mov
mov
mov
inc
scas
enter
dec
sarb
fldcw
aad
aad
gs
pushl
je
test
or
leave
imul
into
push
pop
cmp
mov
cltd
jecxz
jg
jmp
sbb
fdivrs
mov
xchg
int3
jae
icebp
mov
xchg
pop
push
shlb
insl
addr16
or
or
push
test
insl
jl
and
pop
leave
jne
rol
sahf
xchg
cmp
clc
push
dec
shll
add
add
and
and
lods
stos
fs
call
ficompl
lahf
loopnew
sub
jp
sti
xchg
scas
shll
inc
jmp
js
adc
popf
push
mov
adc
pusha
lcall
jge,pt
pop
call
dec
inc
mov
out
mov
bswap
inc
ja
gs
ja
insb
dec
rorb
fstps
xchg
mov
call
data16
addr16
cmpsb
mov
push
mov
push
sarl
mov
clc
cwtl
dec
inc
cli
xor
rolb
sub
sbb
aas
mov
mov
int
sbb
pmulhw
xchg
insb
push
dec
nop
in
push
xor
push
andl
push
dec
and
adc
jp
mov
sbb
mov
orps
xchg
jmp
in
lahf
sbb
shrl
add
movl
testl
pop
add
test
imul
and
fisttps
imul
lret
sbb
fwait
jg
or
fistpll
nop
push
stc
xorl
and
std
mov
in
stc
ds
mov
fnstenv
add
mov
or
test
push
xchg
add
loop
test
mov
icebp
jns
push
movsl
sub
sub
push
adc
cmp
sbb
ljmp
add
rorl
imulb
scas
inc
xchg
ljmp
xchg
sub
loopne
das
insl
clc
test
in
xor
mov
imul
push
out
int
out
jmp
mov
inc
insl
push
sub
test
mov
std
data16
shl
gs
or
fwait
and
insl
dec
outsl
dec
inc
pop
addb
push
mov
cmp
cmpl
ret
pop
test
add
jge
mov
cld
loope
stos
stc
mov
adc
xchg
repz
icebp
stos
aas
pop
jge
rolb
adc
inc
xchg
lea
sbb
jb
cmp
aas
ds
mov
jne
int3
mov
push
mov
fisubrl
dec
loopne
jb
lods
and
jo
xor
add
jne
sbb
inc
dec
mov
jg
es
and
xchg
and
popa
dec
push
sub
ret
sahf
ss
sbb
dec
cmp
outsl
rcll
add
nop
rcr
sub
mov
xor
movsb
jbe
jne
sub
xchg
lahf
sbb
jno
in
aas
imul
dec
lea
push
scas
xchg
dec
xor
daa
faddp
jg
les
jo
out
mov
xor
xor
mov
dec
jp
rcll
mov
stos
andb
jno
add
imul
inc
xchg
and
xchg
push
aam
jmp
int
xor
cltd
nop
loope
push
pop
push
nop
pop
cmp
decb
std
je
aad
adc
das
sub
test
cmp
pushf
and
inc
xchg
jnp,pn
mulb
push
push
sub
in
cld
std
pop
pop
jbe
in
jp
fwait
cmpl
add
ljmp
scas
imul
scas
in
push
gs
cs
cltd
xor
test
push
inc
sbbb
repnz
inc
cli
addl
dec
adc
jecxz
inc
push
xorl
jg
or
dec
ja
xchg
subl
fstl
outsl
loop
ret
imull
cmc
data16
or
jne
sbbb
jno
xchg
jae
jnp
sub
cltd
push
ret
shll
mov
cmp
pop
sar
gs
xchg
jnp
adc
jbe
fsubr
stos
into
lcall
mov
jle
subb
mul
in
es
sub
outsl
xchg
fucomp
lock
je
fsubp
dec
and
or
leave
arpl
ss
push
lods
xor
flds
lahf
not
mov
out
or
add
xor
cld
leave
leave
inc
pop
ss
repnz
popf
push
cmp
cmc
pushf
or
jp
mov
jne
add
aam
ljmp
cmp
gs
cmp
fidivrs
add
xchg
jmp
xchg
cmc
aam
xchg
push
pushw
dec
aaa
jns
rorl
in
add
pop
and
mov
pop
dec
cmpsl
cwtl
add
push
xchg
lock
cmp
sbb
pop
dec
jne
xor
push
stc
arpl
xor
clc
inc
adc
lcall
mov
mov
mov
add
sub
jne
stos
mov
aaa
inc
xor
data16
nop
lods
pop
cltd
mov
inc
mov
lret
cltd
cmp
in
mov
dec
mov
cmp
push
push
pop
and
push
popa
jg
sub
aam
imul
xor
and
aaa
mov
shlb
repnz
dec
mov
or
xchg
or
jecxz
add
addb
mov
inc
mov
ret
mov
imul
out
dec
fst
outsl
mov
jb
xor
push
mov
inc
jnp
cmp
xchg
cmp
adc
sbb
mov
in
jbe
outsl
push
mov
data16
push
inc
sub
and
imul
outsb
icebp
xchg
nop
xchg
cwtl
hlt
lret
add
movsl
rolb
mov
jnp
dec
mov
insl
mov
mov
std
add
or
sbb
les
ljmp
and
lahf
scas
jno
arpl
js
and
lret
mov
push
mov
pop
lret
loop
pop
data16
mov
movsb
lret
inc
sub
push
pop
add
idivb
sbb
pushf
xchg
xchg
je
out
fsubl
lods
cwtl
inc
push
test
mov
aas
sarl
add
pop
xchg
in
jmp
lea
push
lea
inc
test
into
and
xor
in
adc
xor
cmpsb
popf
lret
es
aad
jl
bound
movl
mov
dec
mov
or
out
mov
dec
andb
dec
jp
pusha
ret
test
push
rol
and
lea
adc
shrb
cmp
adc
xchg
pusha
bound
loopne
mov
push
out
fadd
in
push
adc
inc
add
pop
ror
ret
cmpsl
and
dec
and
cld
inc
cmpl
lahf
icebp
in
mov
popf
lods
lock
or
mov
xor
adc
push
and
mov
pop
cmp
xchg
or
sub
sbb
std
pop
unpckhps
mov
jmp
or
inc
sahf
xlat
aaa
fisubrl
xor
lock
xor
lret
pop
pop
pop
fisttpll
sbb
es
jne
aam
push
mov
push
scas
ret
adc
ret
outsl
jo
xchg
out
cmp
test
stos
pop
xchg
mov
test
or
fists
cmp
push
or
lahf
lods
aas
cmp
xchg
fwait
ja
addl
push
lods
stc
adc
sub
inc
push
add
push
mov
and
and
xor
pop
mov
movsb
dec
and
fists
addl
fisubs
out
loope
push
popf
push
xchg
or
xchg
out
adc
jl
jbe
or
jle
into
inc
dec
push
jae
sbb
js
bound
inc
imul
push
dec
decl
hlt
mov
push
shl
cwtl
out
cli
or
leave
sti
push
ja
mov
dec
inc
shrl
fsubrs
cmpsl
xchg
in
or
cltd
int
jno
xchg
or
and
in
adc
adc
lcall
clc
xchg
sarb
xchg
xchg
push
sub
cmp
sbb
leave
sbb
insb
xchg
lods
mov
xchg
mov
jl
xor
mov
cmp
pop
pop
push
pop
jmp
iret
mov
fisubl
jns
test
jo
push
pop
pop
movsb
sti
adc
insb
sub
xchg
push
jae
mov
add
call
ja
mov
adc
sub
loope
testb
in
cmp
cltd
jle
out
fs
ljmp
mov
add
xor
das
js
icebp
cmpsb
mov
jns
in
adc
inc
pop
adc
cmp
fcomps
push
daa
jecxz
aad
sbb
lret
or
jle
daa
ret
dec
ja
ret
mov
or
pop
outsb
mov
mov
dec
pop
mov
pop
push
fistpl
adc
iret
sub
pop
ret
xor
fidivrs
call
xorl
mov
xchg
jmp
sahf
inc
and
enter
ds
xor
mov
cmp
adc
loope
add
xchg
mov
jmp
fs
rol
orb
xor
test
fisubrs
mov
ret
imul
pop
lret
mov
inc
lret
pop
dec
sar
das
adc
xchg
pop
inc
add
test
popa
cmpsb
gs
dec
pmulhw
stos
push
js
call
ja
in
ja
xor
xchg
xor
pop
movb
pusha
push
or
rorl
mov
addl
repnz
xchg
ficompl
xchg
add
imul
inc
iret
sbbb
dec
dec
icebp
mov
leave
xor
fisttpl
popa
push
outsb
mov
dec
or
es
sub
sub
push
push
imul
mov
insl
or
sub
outsl
jns
sbb
lods
repnz
mov
insl
sub
rcrb
shrb
cld
xchg
jmp
ret
les
lods
pop
shrl
aaa
cmp
jo
push
xchg
scas
push
add
add
cmpsb
xchg
icebp
jle
fiadds
cs
xchg
jle
mov
idivl
jb
ss
sub
stos
adc
xchg
mov
jg
jne
mov
jle
les
mov
aas
loopne
push
fisttps
dec
and
adc
rol
jno
adcl
mov
push
push
and
rcrb
mov
jae
xor
cmp
inc
add
lock
pushf
adc
push
cmp
call
and
fisttpll
aaa
jnp
aas
add
push
sub
inc
inc
mov
xchg
cwtl
cmp
pop
pop
inc
push
adc
add
xchg
pop
pusha
dec
negb
aaa
and
mov
outsb
dec
imul
ljmp
sbb
lret
popa
mov
pop
arpl
mov
mov
mov
out
push
add
adc
popa
test
dec
clc
stc
push
xor
jg
sbb
sub
jle
arpl
movsb
dec
or
lods
rorb
mov
add
mov
mov
push
loopne
cld
jecxz
pop
addb
call
mov
aad
xor
scas
mov
sbb
scas
xchg
push
mov
add
paddq
inc
or
pop
sbb
xchg
imul
jo
movsb
shl
jge
je
cmp
in
ja,pt
cmpsl
repnz
mov
dec
addb
arpl
or
mov
push
mov
sbb
jle
mov
lcall
add
pop
aad
movsb
push
mov
jp
pop
sbb
in
mov
xchg
mov
pop
adc
fldcw
mov
sub
inc
inc
mov
movsl
mov
sbb
sbb
pop
cmpl
dec
cwtl
xchg
ljmp
jge
out
scas
test
addl
and
jmp
dec
in
xchg
mov
lods
in
mov
aad
push
and
sub
or
jmp
mov
xchg
ret
inc
loop
pusha
aad
xchg
xor
data16
jp
inc
mov
or
jmp
cmp
das
daa
jo
jo
dec
push
cld
fsubs
les
sub
cmpsl
push
and
push
xlat
ret
cld
mov
ljmp
fidivrs
dec
add
lock
mov
leave
fdivl
jmp
and
aas
dec
jmp
dec
add
inc
xchg
inc
inc
cli
pusha
add
and
inc
out
mov
clc
rcpps
lahf
test
push
pushf
pop
hlt
jge
inc
pop
fisttps
mov
hlt
sbb
mov
and
pop
jo
call
xor
fcompl
inc
clc
ljmp
cld
push
and
cmp
das
or
push
pop
adc
push
js
dec
jmp
mov
pop
cltd
int3
mov
popa
dec
and
mov
add
stos
lods
pop
in
and
pusha
jbe
dec
ja
fldt
and
hlt
shll
aad
movsb
scas
mov
int
mov
cmp
and
push
sarl
addr16
mov
jb
mov
mov
xchg
add
fcoms
or
xchg
fstpt
pop
scas
nop
ret
xchg
fists
es
mov
xchg
lea
mov
jne
cmp
into
aad
xor
lret
xor
leave
in
sub
sbb
push
mov
popf
icebp
stos
mov
push
xchg
orl
int
mov
or
add
cmp
mov
stc
add
jb
sub
loop
cmpsl
mov
mov
sub
push
mov
outsl
pushf
pop
xchg
mov
es
cmpb
lods
mov
in
ficomps
mov
jne
mov
push
cld
inc
je
ss
sbb
ret
xchg
mov
push
jae
pop
lods
dec
in
or
test
cmp
cltd
sub
insb
push
mov
sub
mov
push
push
inc
xchg
fcompl
es
and
sbb
stc
std
mov
and
fstps
jns
enter
jo
or
mov
push
ficomps
addr16
jge
fs
dec
jnp
mov
outsl
outsb
scas
cltd
cmp
lods
lods
fistpll
pop
xor
mov
jl
jae
mov
cld
sub
div
outsb
mov
cwtl
cmpsb
testl
insb
xchg
out
inc
xchg
mov
rcl
jb
adcl
adc
bnd
fcmovnb
repz
sbb
mov
lods
sbb
loope
into
lret
pop
std
sub
insb
add
sarl
jne
das
test
mov
loope
xlat
test
pop
mov
loope
push
mov
jae
xchg
pushl
adc
and
movsb
sub
or
cs
call
push
cltd
bound
cmp
mov
dec
nop
or
xchg
push
push
pushf
push
and
jmp
push
and
push
fimull
lret
js
xor
xor
dec
or
adc
sbb
cmp
jbe
add
ficompl
sub
lods
ret
ret
sub
rclb
rep
jmp
pop
mov
ret
sub
lret
lds
ficomps
test
mov
leave
test
cmp
adc
mov
pop
xor
sbb
mov
or
dec
add
mov
mov
or
outsl
out
dec
push
aas
sbb
mov
jl
leave
dec
dec
sub
data16
lods
rclb
mov
sbb
cmc
dec
iret
in
rcrb
imul
jmp
sub
jb
xchg
jge
push
sub
cld
dec
pop
jmp
mov
pop
ds
mov
and
hlt
pop
adc
push
das
int3
mov
out
xlat
sarl
out
out
pop
out
pop
jecxz
xor
push
loopne
cmp
lea
xor
dec
movsl
lcall
mov
add
ret
sub
aaa
cmc
push
bound
xor
int3
add
sub
ret
cmp
mov
mov
sub
lcall
inc
out
aaa
out
aad
cmp
and
call
mov
fsubrl
call
lock
testl
and
push
icebp
lea
pop
and
jb
sbb
xchg
mov
add
cmp
push
mov
jne
sbb
add
fwait
mov
jo
push
ret
xor
test
scas
lods
mov
lods
or
leave
jecxz
imul
add
je
or
mov
into
test
push
push
out
add
loope
pop
add
in
sbb
xchg
arpl
cmp
jno
cld
lock
push
ret
xor
dec
cld
pop
pop
hlt
jecxz
push
loope
cmp
and
mov
jmp
nop
ficoms
xchg
xchg
enter
pop
dec
lds
mov
out
outsl
inc
xchg
dec
cmp
xor
lea
mov
jl
out
rcll
sbb
js
or
in
mov
dec
dec
push
pop
rcrl
mov
push
sbb
push
adcl
filds
pop
mov
push
jno
jbe
jmp
cld
out
mov
das
xbegin
jb
dec
jge
call
jno
je
shll
jecxz,pt
adc
jb
sub
hlt
roll
and
mov
sbb
jno
cmp
repz
fisubrl
pop
inc
and
cmpsl
xchg
js
in
popa
mov
sbb
jnp
aam
and
mov
add
mov
sbb
pop
push
push
in
and
addr16
push
ja
xor
into
add
inc
repnz
lret
sub
jle
fistpll
int3
mov
jmp
popa
xchg
pop
and
lret
cld
xchg
mov
shll
arpl
icebp
xor
scas
cmp
cmp
in
scas
repz
push
add
cmp
xchg
mov
mov
cwtl
jbe
nop
xor
pop
popa
and
mov
loopne
shrl
add
and
add
and
insl
push
ja
rcl
adc
lods
push
in
cli
mov
arpl
lods
mov
std
lcall
daa
cs
push
cwtl
jmp
sub
mov
pop
insb
test
out
or
inc
cld
or
gs
or
pop
cli
in
and
push
add
aaa
mov
jge
movsl
dec
stos
xchg
lds
push
jmp
mov
mov
loop
in
mov
xchg
popf
dec
and
stos
dec
rclb
dec
sub
adc
mov
inc
aas
outsb
out
sub
les
mov
jmp
pop
lods
addl
inc
popf
push
jnp
or
loope
jecxz
xor
aas
fs
adc
cmp
repnz
inc
jbe
push
mov
ljmp
push
push
ret
movsl
test
in
mov
mov
pop
inc
sbb
rcll
sub
adc
push
mov
icebp
loop
repnz
pop
add
adc
gs
cmp
lret
lahf
in
xchg
push
cmc
stos
adc
xorl
mov
das
pop
les
mov
test
xor
jl
mov
lcall
mov
jmp
or
int3
pop
lock
cmp
sbb
ud2
push
jns
test
push
adc
or
mov
cmp
add
cmpsl
js
iret
cs
movsb
pop
ds
ret
sub
jecxz
xchg
roll
jne
inc
fcmovu
arpl
mov
pop
shlb
ficoms
mov
or
jno
push
sub
and
out
in
or
mov
pop
sub
xor
xor
out
jp
shll
pop
or
push
outsb
pop
shll
xor
jne
jnp
sbb
into
test
jnp
mov
fiadds
lds
loope
mov
out
sti
push
cmpsl
int3
pop
je
jnp
stos
jns
data16
mov
mov
add
iret
int3
jmp
mov
rcrl
push
mov
push
jo
in
mov
loop
pop
adc
jge
bound
sarl
xchg
xlat
lock
inc
fldenv
mov
push
mov
outsl
inc
add
or
fs
dec
push
shll
sbb
fs
adc
out
movsb
lods
pop
jmp
cmp
sahf
cmp
sub
int
imul
notl
mov
sbb
lcall
jo
imul
xchg
mov
stos
cltd
sbb
xchg
and
fsubrl
mov
inc
lahf
test
mov
xor
dec
mov
xor
scas
test
xlat
add
dec
mov
and
or
cs
adc
push
or
mov
into
and
cld
fwait
je
pushf
jne
mov
enter
push
cltd
aaa
push
sub
mov
add
jno,pn
and
add
outsb
int
xor
mov
dec
lock
mov
imul
add
popa
movsl
jnp
lea
dec
cmp
insb
mov
inc
insb
shl
enter
ficomps
iret
outsb
out
cmp
flds
out
ljmp
jmp
push
nop
mov
xchg
loop
fmul
mov
aas
shrb
inc
movsb
mov
or
in
mov
fs
mov
xchg
iret
inc
iret
inc
nop
int3
add
scas
sub
cwtl
xchg
mov
xor
leave
arpl
mov
outsb
mov
lcall
mov
pop
add
inc
push
lret
jmp
les
mov
aad
int3
into
sub
jbe
mov
ljmp
add
cmp
out
les
lea
xchg
or
lods
adc
jl
mov
dec
enter
es
push
popa
lea
jne
test
push
loope
sti
fdivs
pslld
xor
mov
pop
outsb
nop
add
bound
ficompl
test
lahf
bound
fcoms
shlb
adc
inc
int
into
and
popf
jg
push
xchg
daa
cwtl
pop
sbb
popa
lods
adc
rcrl
and
xor
lds
xor
mov
pop
push
or
sub
fucomip
movsl
cmpsl
xor
mov
inc
adc
frstor
jns
lds
sub
inc
and
xchg
lahf
mov
das
lret
mov
call
dec
dec
inc
push
mov
stc
fsubrs
in
sahf
cmpsl
jno
lods
jae
pop
adc
test
filds
adc
out
fnstenv
sub
into
mov
or
pop
lret
push
mov
orl
inc
dec
insb
lret
lock
xchg
cmp
sub
jmp
daa
cmp
xchg
aad
lahf
ret
xchg
xor
mov
notb
or
shll
fidivs
hlt
push
addr16
xchg
test
jp
push
inc
sub
mov
in
stos
adc
out
xchg
and
sahf
imul
sbb
lcall
stos
mov
jo
dec
adc
xor
dec
xchg
mov
shl
mov
dec
in
sbb
stos
movsl
shlb
fdivrl
xor
and
push
jns
or
cmc
dec
add
xor
push
sub
test
daa
shrl
sbb
xchg
sbb
push
insb
test
cmpsb
or
sbb
dec
lret
mov
push
movsb
or
xor
fcoms
mov
inc
in
fdivr
cmp
jmp
mov
aad
lcall
ficoml
sbb
add
out
jp
sub
jg
push
test
cwtl
das
push
push
imul
mov
jno
or
sub
sbb
push
ret
insb
hlt
add
mov
fwait
jae
rcll
and
dec
icebp
dec
lret
xchg
cmp
push
int
lods
andb
std
out
cmc
es
insl
sbb
adc
push
inc
push
dec
je
mov
xchg
cld
into
adc
test
shlb
sub
pop
lock
or
inc
ror
ss
loop
std
pop
push
jge
clc
stos
cmp
mull
outsb
jo
push
cmpsl
dec
or
out
mov
xchg
ss
xor
shl
lds
push
addb
jo
std
pop
xchg
enter
jns
dec
ds
mov
push
jge
mov
pushf
pop
mov
lret
xlat
ret
pop
ret
rcl
jecxz
jmp
ror
sbb
jb
jg
mov
mov
cmp
movsl
in
lret
dec
insb
pop
dec
popa
aad
repnz
inc
cmc
data16
or
test
fldl
loope
jae
std
pop
mov
dec
inc
jmp
mov
stc
fidivl
xor
push
test
enter
ljmp
out
scas
xchg
daa
loopne
stos
cli
popa
stos
pop
leave
jge
mov
add
or
sbb
xchg
pop
jmp
xchg
outsl
movl
or
sub
mov
mov
sub
cmp
push
sub
ret
xchg
mov
out
sbb
xor
sbb
lods
lret
sbb
lret
stos
cbtw
sub
orb
add
shll
xchg
subb
or
imul
push
mov
pop
adc
icebp
in
out
stos
add
testb
outsl
push
mov
repnz
sbb
fsts
adc
arpl
inc
lods
mov
inc
inc
cli
ljmp
add
and
stos
pop
jge
out
and
push
nop
test
mov
loopne
rcrl
adcb
shrb
addr16
sbb
ret
jmp
ret
xchg
or
mov
negb
repnz
in
lods
lods
dec
test
ds
xor
sub
ja
push
int3
push
ds
sub
test
insb
sbb
jecxz
imul
xchg
cmc
mov
sbb
mulb
sub
mov
pop
xchg
cmpsl
popa
fwait
inc
sbb
ds
ds
ds
int3
dec
enter
cmp
xchg
stc
mov
pop
xchg
out
cltd
xchg
nop
cmp
into
jo
aad
scas
mov
push
aaa
push
nop
sbb
cmc
xchg
push
icebp
mov
mov
rclb
dec
pop
mov
mov
jb
xchg
adc
repnz
mov
clc
pop
jbe
stos
lock
mov
out
cmp
inc
cmpsb
popa
add
call
push
mov
mov
pop
mov
jmp
test
mov
cmp
stos
not
sub
in
fs
not
fmull
cwtl
ss
out
aas
mov
push
push
add
stc
push
mov
cmp
bound
mov
mov
jbe
mov
mov
push
ss
xchg
jmp
xor
jmp
leave
rcr
sbb
pop
xchg
mov
lcall
test
scas
js
or
pop
fbstp
adc
movsl
xor
jns
dec
mov
adc
scas
jnp
negl
ljmp
fimull
adc
shrb
mov
jmp
scas
fnstsw
pop
jnp
push
test
pop
aad
dec
jnp
xor
cmp
pop
scas
cmpsb
cmp
pop
popl
mov
out
test
mov
mov
das
cld
jl
cld
cmpb
xchg
out
cs
rcll
add
xlat
je
ljmp
stos
test
cli
outsb
cltd
test
sub
scas
sub
rclb
ds
jno
iret
or
and
rcrl
inc
jbe
movl
pop
dec
daa
mov
xchg
mov
rcll
xchg
out
int
push
cmp
imul
and
push
and
mov
ret
inc
test
pop
add
push
shl
sbb
jmp
sbb
das
and
pop
ss
sti
xchg
xchg
vpunpckhwd
jmp
test
pop
push
lods
rorb
cltd
pop
dec
adc
in
cmpsb
sbb
out
cmp
cmpl
gs
pop
rorb
insl
sub
xchg
stos
fwait
jb
ja
icebp
popa
les
push
xor
sub
inc
mov
sbb
dec
add
push
icebp
mov
sbb
pop
inc
in
stc
shrb
aad
xchg
xor
xchg
js
push
and
aas
push
mulb
stc
daa
xchg
nop
sub
dec
cmp
icebp
fnstenv
ljmp
sub
aaa
lock
addl
in
pop
cmp
xor
mov
and
in
sub
in
adc
test
mov
xchg
das
cmp
fildll
sbb
loopne
xchg
ljmp
or
loope
enter
dec
or
xchg
in
adc
ret
loope
out
mov
addb
cmp
in
ret
stos
adc
adc
xchg
imul
pusha
pop
pop
ret
pusha
jmp
xor
mov
inc
out
mov
pop
push
pop
xor
inc
ljmp
scas
idivb
xchg
push
popa
test
mov
cmp
int3
pushf
leave
push
cs
cmpsl
pop
and
addr16
jns
mov
add
dec
sbb
cmpsl
fstps
and
lea
adc
ret
fs
mov
gs
jp
jnp
sbb
mov
mov
sub
icebp
and
xchg
dec
dec
and
xlat
in
ja
imul
xor
cmp
fdivrl
or
pop
jl
jb
int3
bound
loope
icebp
in
adc
inc
addl
out
cmp
addr16
mov
inc
xchg
gs
xchg
outsl
and
or
xor
mov
jp
aaa
or
mov
aas
jle
mov
dec
or
adc
xchg
jbe
pop
or
outsl
cmc
add
pop
cli
mov
arpl
sub
push
sub
imul
out
int
mov
sub
std
cli
sbb
push
dec
aam
or
mov
mov
pop
or
inc
lret
dec
in
adc
iret
bound
dec
push
xor
fnstcw
loopne
push
mov
jg
jg
xor
loop
or
fs
mov
xor
in
icebp
push
push
cmpsb
dec
mov
aam
push
std
mov
stos
sub
cmpl
sub
mov
call
clc
push
std
mov
xor
sbb
xor
movsb
ss
xrelease
dec
mov
iret
xchg
gs
adc
jmp
push
in
add
jns
adc
xor
sbb
daa
jmp
daa
inc
loopne
or
inc
push
dec
sbb
mov
cmp
das
ja
pop
hlt
loope
bound
icebp
movsb
xor
shl
gs
sub
sub
jle
add
out
lcall
and
sbb
push
faddl
lds
mov
dec
mov
call
ljmp
add
inc
lcall
jno
shrb
jmp
rsqrtps
cmp
cld
pop
jnp
gs
xor
js
dec
push
cmpsl
in
adcl
std
cwtl
js
mov
mov
mov
call
cs
inc
xor
pop
nop
fsubl
pushf
popf
aas
aaa
sub
mov
scas
addr16
or
popa
or
fsubp
add
dec
aas
xor
jg
push
lods
aaa
cmp
cmovg
xchg
out
sbb
sbb
cmp
jo
adc
xchg
and
jns
mov
out
or
mov
ds
and
and
repz
push
or
clc
sbb
push
lret
jge
je
xor
ja
nop
fdivl
cmp
pop
sti
inc
add
int3
in
jp
jp
test
call
out
add
es
stos
push
rcrl
pop
mov
je
jne
lahf
in
outsl
into
inc
jge
jns
out
nopl
dec
push
flds
stc
lret
sub
mov
dec
scas
jmp
insb
imul
je
sub
dec
movsl
fildl
cmp
js
ficomps
arpl
ret
test
into
enter
cmpsb
movsl
pop
mov
adc
push
xor
fisubl
mov
add
scas
add
testb
jb
push
les
inc
out
adc
shrl
dec
mov
ret
jmp
adc
loopew
and
lea
mov
insl
lret
stc
mov
out
push
in
popa
in
ja
fnstenv
xor
jge
out
cmp
cmp
sbb
pop
test
add
jge
jp
inc
mov
or
rcrl
std
xchg
add
mov
adc
shlb
cmp
xchg
sub
xchg
dec
in
push
or
popf
out
es
fiadds
mov
pusha
add
out
push
mov
mov
xchg
inc
inc
sbb
xor
inc
dec
je
cwtl
pop
mov
out
pop
inc
jmp
dec
bnd
adc
insb
js
movsb
or
stc
xchg
sub
xor
stc
in
or
xchg
movsl
fistps
loopne
mov
xor
jp
shlb
inc
cmpsb
or
cmpsb
and
xchg
xchg
pop
enter
mov
pusha
outsb
sbb
push
inc
lahf
stos
dec
mov
aam
ret
xchg
inc
mov
rcr
pushw
rcll
frstor
sbb
xor
pop
in
cld
inc
pop
cs
push
jo
dec
lcall
sbb
loop
std
dec
xorb
jle
outsb
in
pop
cmpsb
andb
fmul
bound
xchg
lahf
sbb
dec
dec
dec
push
or
dec
cmp
arpl
aam
test
test
insl
add
mov
cmp
mov
fiadds
cmp
push
je
mov
mov
fisubs
or
jmp
cmp
mov
cmp
ret
cmp
imul
push
mov
jecxz
lret
enter
bound
push
je
test
add
jae
nop
fwait
repz
pop
mov
stos
das
and
cmove
rcrl
call
mov
pop
stc
xchg
loop
cmpsb
sub
xor
insl
lret
adcl
inc
cmp
test
pop
push
dec
fimuls
xlat
mov
das
inc
jae
xor
je
push
fdivrs
xchg
mov
daa
scas
jl
xchg
lods
mov
lcall
stos
jnp
push
xchg
fisttpll
popa
and
adc
lahf
sbb
adc
mov
xor
dec
xchg
inc
cmp
je
lods
lock
mov
xchg
nop
xchg
ficoml
push
mov
dec
sbb
out
push
adc
xor
cmc
out
mov
jbe
and
and
adcl
mov
push
xchg
imul
add
roll
leave
in
fistpll
clc
imul
out
fucomip
out
repz
repnz
inc
mov
add
mov
cwtl
mov
rcrl
push
ljmp
xor
mov
jno
popa
pop
sbb
mov
mov
xor
or
or
scas
into
scas
add
mov
xor
and
lea
xor
pop
loop
arpl
repnz
incb
xchg
inc
xchg
jmp
inc
sti
xchg
inc
cmc
push
rcr
imul
int
shl
test
loop
push
mov
lods
in
xchg
or
es
rclb
cmp
jo
bound
xor
inc
add
xchg
loope
bnd
jmp
cmpsb
sub
test
or
jmp
lcall
enter
mov
and
adc
add
out
jmp
and
pop
sub
testl
xchg
imul
xchg
cli
pop
sbb
lods
xchg
in
inc
fidivl
and
pop
inc
xor
mov
int
cwtl
in
shrl
push
sub
push
rorl
pop
iret
movsb
xor
xchg
popw
pop
imul
arpl
in
mov
ss
bound
insl
mov
int3
sub
fstp
pop
leave
lods
mov
fisubrl
rclb
call
fidivs
mov
iret
mov
sbb
test
loope
and
pop
mov
sbb
aas
mov
out
mov
sub
scas
pop
pop
xor
fisubrl
ret
cmp
and
push
inc
lods
push
mov
mov
sbb
test
sub
adc
lcall
ficomps
lock
pusha
int
sub
je
push
inc
and
mov
cmpsb
sub
cmp
fstpt
cmp
loop
xchg
hlt
loope
mov
or
xchg
jno
scas
pop
cwtl
push
insb
mov
xchg
cs
pop
sbb
pop
add
sti
cmp
imul
inc
shrd
push
sbb
dec
pushl
bound
es
xchg
mov
push
movsl
lods
leave
orl
fisttpll
adc
insl
pop
repnz
cmp
push
xchg
dec
jle
jecxz
add
movsl
ficoms
or
data16
loopne
clc
jg
loop
mov
jge
pop
dec
dec
jl
scas
mov
pusha
test
lcall
jle
jge
ljmp
out
fisttpll
dec
and
xchg
or
and
cld
xchg
inc
inc
push
jo
imul
sub
adc
push
push
imul
test
mov
push
in
dec
xor
xor
divb
addb
mov
pop
rorb
hlt
or
sti
mov
cmp
sub
mov
adc
push
pushaw
mov
fiaddl
rcr
sbb
scas
and
mov
sub
das
inc
ret
addr16
xchg
or
insb
dec
jp
pop
xchg
push
push
in
jecxz
cmpsl
in
sbb
jnp
push
xchg
jle
rep
rorb
adc
adc
fisttps
adc
and
xor
cmc
sub
sbb
insb
int3
test
dec
in
aas
mov
sbb
loop
and
pop
lret
xchg
addr16
jae
ret
xor
mov
mov
loop
sti
dec
insl
shr
gs
rorl
sbb
mov
clc
call
sbb
fnstcw
dec
sbb
dec
jb
or
scas
cmc
jae
int3
push
pop
ret
mov
stos
and
out
hlt
dec
inc
ret
push
pop
test
jae
outsl
xchg
and
jecxz
sub
sub
lea
mov
cmpsb
cmpb
inc
out
sbb
loope
pusha
repnz
push
xor
mov
gs
push
std
stc
sbb
xchg
mov
push
add
shlb
pop
pop
sbb
add
dec
or
pop
jno
xchg
fnstcw
aas
addl
xchg
mov
fbld
pop
out
xor
bound
xor
jnp
mov
sti
mov
jmp
addl
mov
cmc
sbb
movsb
mov
sub
mov
cmp
inc
mov
add
in
push
movsb
aam
lret
movl
lods
jle
sub
sub
or
lcall
sub
cmc
sub
enter
push
fsubrs
ficoml
adc
ret
add
iret
jo
push
sub
pop
adc
jge
fbld
aam
mov
adc
mov
inc
cltd
out
lods
test
add
fistl
xchg
fstps
jns
add
inc
dec
popa
xorb
ret
movb
push
mov
cmc
cmc
sarl
push
stc
push
call
les
inc
fdivp
sub
sbbl
dec
aad
mov
and
adc
fwait
pop
ljmp
add
ljmp
roll
ret
cmp
adc
mov
out
pop
lock
sarb
int3
xchg
xlat
lods
arpl
add
frstor
mov
pop
cmp
or
dec
xchg
sub
push
imul
scas
in
test
movsl
popa
add
int3
nop
sbb
mov
aam
ss
jle
sbb
sub
pop
cmpsl
fildll
sbb
inc
jecxz
mov
pusha
dec
xchg
xchg
aas
lcall
mov
mov
fidivrs
push
xor
mov
mov
sub
cmc
pop
lds
fiadds
xchg
in
test
push
cmp
sub
test
xchg
rclb
das
jl
mov
jge
icebp
cmc
adc
cmpl
adc
dec
and
mov
insb
movsb
test
mov
arpl
in
in
fidivrs
ds
and
xchg
xchg
int
mov
mov
roll
repz
mov
into
jmp
std
outsl
xlat
outsb
pop
jmp
fcompl
outsb
ffree
sub
lcall
fistl
dec
cmpsl
js
lods
ffreep
xchg
fnstsw
ss
lods
or
out
xchg
mov
clc
pop
mov
xchg
dec
stos
mov
les
xchg
push
call
jb
push
dec
lock
fisubs
or
dec
dec
iret
add
les
pop
scas
daa
mov
cmp
or
lahf
sub
dec
iret
inc
fwait
add
jnp
push
mov
lds
pop
xor
push
mov
cmp
dec
xchg
mov
or
ja
add
notb
cs
dec
cmp
andb
addl
test
repz
mov
shrl
rcl
adcl
jl
xor
sbb
out
out
pop
jb
xor
loope
xor
or
cmp
sbb
repz
cmp
ja
mov
loope
repz
xchg
das
cli
pop
mov
cs
arpl
mov
jae
push
addl
pusha
shrl
scas
fiadds
shrb
loope
loope
and
dec
ficomps
es
adc
jle
aas
push
jo
jge
mov
push
xor
ret
sbb
clc
loope
push
pushw
daa
insb
xor
xor
mov
imul
negl
jl
push
cmp
inc
xor
xchg
pop
sbb
test
inc
loopne
mov
xor
rorb
mov
xchg
outsl
or
test
push
xchg
mov
nop
ss
jae
mov
outsb
adc
adc
into
inc
and
pop
push
ss
imul
add
shrb
pop
jne
std
mov
js
loop
sub
dec
push
ja
ffreep
pop
xchg
stos
icebp
inc
fsubrl
jmp
in
push
mov
enter
fcoml
sub
cld
mov
lds
int
mov
addl
dec
nop
ds
sbb
or
dec
decl
in
push
shll
mull
mov
push
js
fsts
rorl
sbb
int
sub
dec
mov
add
sub
cltd
adc
subb
ret
pop
adc
aam
xchg
insl
jle
sbb
mov
mov
test
movsb
mov
push
das
sti
mov
cmp
insl
mov
xchg
test
rcrb
xchg
ja
fxch
xchg
cmp
fidivrl
lods
push
dec
mov
es
jnp
mov
xchg
cmpsl
adc
icebp
mov
push
sbb
xor
int
int
pop
cmpsl
lods
mov
adc
mov
inc
fnsave
ljmp
in
inc
or
dec
frstor
inc
xor
insb
je
mov
push
arpl
inc
mov
sub
fsubp
mov
inc
sub
mov
out
setge
or
nop
mov
pop
loope
rorb
cld
mov
jnp
cmp
cltd
pop
lcall
addr16
test
cltd
aaa
leave
repz
jbe
sahf
mov
fisttpll
lcall
sbb
push
and
imull
sub
in
scas
push
lret
shll
jl
shrl
dec
testb
jo
pop
arpl
cmpsl
sub
inc
jne
inc
or
push
jbe
dec
loop
daa
xor
subb
ljmp
ret
cmp
leave
insb
rcr
cwtl
jl
push
and
jns
popa
lods
fstpl
jae
jnp
cmp
jecxz
pop
and
and
inc
dec
sub
mov
sbb
cmp
fmul
add
mov
jp
jbe
imul
push
push
mov
sbb
dec
pop
fimull
pop
sahf
cmpsb
test
push
inc
inc
pop
dec
call
push
xchg
mov
negl
xorb
daa
imul
adc
dec
mov
pushf
mov
push
fnstsw
gs
push
sbb
shl
push
jp
inc
jnp
movsl
jmp
cmp
addl
test
loope
pop
add
pop
mov
je
es
xchg
mov
test
mov
inc
and
mov
sbb
dec
jo
xchg
shrl
js
dec
cld
adc
mov
jp
cmc
fs
lock
fldcw
cmp
out
mov
bound
mov
add
sub
mov
jmp
fs
out
imul
fidivs
mov
mov
sbb
movsl
mov
jl
js
inc
lret
data16
and
popf
jmp
fs
cmpsl
les
cmp
cmc
outsl
inc
test
shrl
cmp
and
sbb
pop
jnp
xchg
sbb
lods
and
xor
cwtl
jg
cmpsl
inc
mov
jp
cmpsb
cmp
filds
jmp
add
test
aas
or
mov
add
cmp
and
adc
sbb
mov
add
xor
push
aaa
mov
test
push
ret
aaa
in
cmp
push
xchg
ja
fcompl
xor
and
lret
mov
les
pop
mov
adc
frstor
ljmp
mov
sti
or
imull
cmc
inc
dec
xchg
cmpsb
leave
xor
in
inc
push
xchg
mov
stc
das
pop
outsb
rorl
pop
mov
cwtl
cmp
cmp
push
push
mov
and
xor
dec
sbb
clc
je
inc
addr16
icebp
fwait
imul
repnz
sub
fildll
out
fisttpl
and
sbb
mov
cwtl
call
mov
ret
in
xor
movsl
xor
outsb
mov
sarb
pop
xchg
jp
xor
decl
xor
test
sbb
call
andl
pop
sarb
xchg
sub
daa
xchg
das
dec
push
add
sbb
cmp
adc
stc
xchg
decl
fstl
rorl
subb
leave
pop
mov
sbb
xor
add
adc
mov
pusha
adc
in
mov
dec
insl
add
aam
mov
pushl
dec
in
xchg
push
arpl
cmp
shrl
out
jmp
std
push
xchg
subb
push
movsl
cltd
mov
inc
fcoms
mov
cli
clc
loopne
xor
cmp
stos
xchg
imul
jg
test
out
lods
lcall
dec
out
aaa
imul
sti
ret
inc
call
aaa
test
movsl
scas
out
push
push
ja
shlb
int3
adcl
test
push
sub
lds
push
push
aas
fists
add
sub
shl
mov
sbb
sub
out
mov
jo
repz
loop
sub
xor
jmp
pusha
cmp
inc
xor
adc
loop
rcrl
jne
sahf
stos
dec
cmp
xchg
test
and
adc
pop
mov
std
popf
call
and
lahf
mov
push
and
push
stos
out
xchg
xchg
aad
fdivs
dec
arpl
pop
pop
push
lcall
lcall
jnp
jnp
es
repnz
repnz
mov
js
cmp
fimull
inc
enter
subl
lea
movsb
mov
mov
inc
int3
sti
push
aas
jge
scas
mov
les
add
lods
xchg
mov
push
pop
dec
repz
dec
outsl
cltd
cmpsl
jecxz
xlat
dec
aad
iret
jle
outsb
adc
ds
xor
call
lcall
push
dec
push
sub
bound
push
aam
ret
sub
pop
xchg
sub
mov
outsb
jge
mov
cwtl
sub
cmp
popf
push
pop
jo
mov
in
lret
add
pop
dec
mov
in
sbb
loopne
push
cli
push
fisubs
sub
pop
enter
mov
xchg
sub
aaa
test
mov
mov
aad
pop
out
sbb
fistpl
aam
sub
and
dec
dec
pusha
cmp
adcl
mov
jno
ss
xchg
cmpsl
js
ficompl
adc
cwtl
dec
or
addr16
sbb
push
add
aam
adc
leave
cmp
xor
mov
xor
mov
arpl
mov
mov
cmpsb
out
into
jns
xchg
or
pop
pushf
cmpb
pop
icebp
loopne
pushf
mov
jno
imull
aaa
push
inc
dec
es
dec
imul
enter
inc
push
and
xor
test
inc
or
movsb
pop
lods
aas
add
mov
inc
cmpsl
add
and
mov
nop
xor
sub
mov
and
subb
lret
lea
pop
dec
sbb
mov
jge
inc
cmpsb
test
push
mov
inc
dec
ds
fiadds
and
lret
imul
decl
xchg
lods
inc
out
mov
ljmp
mov
cmc
and
xlat
flds
add
popa
inc
push
add
xor
lock
mov
mov
adc
xchg
cmp
loope
mov
aam
loopne
push
xor
fst
sbb
js
lods
rclb
sahf
jne
lret
cmp
jp
jo
imul
cltd
pop
ds
cmp
mov
test
jmp
xor
jmp
movsb
jecxz
stc
inc
mov
push
outsl
xor
pop
cli
push
push
jmp
test
loop
out
adc
push
sbb
push
imul
mov
lods
and
or
mov
add
cmc
sbb
push
push
in
fisttps
push
cmp
mov
cli
test
push
pushf
stos
bound
xor
mov
popf
les
jbe
jg
xchg
clc
pusha
pop
out
xor
cmpsb
arpl
mov
imul
aad
mov
mov
xchg
lods
jae
ss
fildl
mov
in
add
call
outsb
jp
or
cmp
lds
mov
sbb
pop
loopne
xchg
stos
jne
rcr
call
outsb
mov
lds
pop
xlat
dec
or
shrb
movsl
negl
pop
jg
add
inc
push
imul
leave
jmp
ret
sahf
repz
test
jae
jns
cmpsl
push
jl
push
mov
cmc
daa
push
mov
fiaddl
enter
push
loopne
sti
loopne
addb
sub
inc
data16
sbb
xor
mov
aad
adc
rol
clc
or
jns
ja
iret
movsl
xchg
ds
insb
mov
push
das
mov
mov
lcall
jns
jp
pop
push
cli
addr16
das
push
test
xchg
stos
lret
xor
adc
scas
pop
xchg
and
repnz
sbb
push
xchg
std
mov
popa
ffree
aas
add
data16
sbb
dec
cmc
sub
jnp
jg
lods
lret
leave
jbe
or
orb
jno
in
sbb
fldl
mov
cmp
sti
pop
fwait
cmp
ror
and
sahf
mov
cmc
arpl
fs
and
pop
cs
scas
cli
pushf
shr
sbb
sbb
ficomps
pop
and
mov
shl
and
pop
mov
inc
mov
out
loop
lods
loope
stos
jg
push
test
push
arpl
xlat
out
sub
xchg
lds
sub
iret
sub
fyl2xp1
and
lock
push
icebp
sahf
out
loope
loope
sbb
bnd
das
pop
out
aas
je
aam
sbb
out
and
jnp
loop
inc
mov
sbb
sbbb
bound
std
dec
jp
scas
xchg
and
test
push
es
push
std
jmp
pop
xchg
xchg
xor
adc
flds
mov
fcompl
lret
xchg
pop
add
shll
jg
subl
xor
adc
test
orl
dec
push
mov
push
ljmp
outsb
fs
mov
mov
daa
push
or
pop
xor
fwait
dec
push
pop
cmp
idiv
or
and
mov
xchg
subl
popf
lcall
mov
cmc
incl
popf
fstpt
xchg
daa
jp
setge
pop
sbb
test
xlat
js
jae
sarl
repz
js
mov
cmpsl
push
sub
jp
and
sub
popa
jp
jecxz
pop
loop
lea
je
jl
adc
pop
jnp
push
lods
jne
mov
pop
repz
in
push
or
stc
orb
outsl
fs
aad
shll
or
xor
cmc
divl
mov
repz
inc
sarl
sub
cmpsl
xchg
sub
je
mov
repnz
fs
cmp
movsl
inc
inc
mov
cmc
pushf
aas
sub
jns
pop
or
pop
adc
mov
ficomps
jns
jbe
lahf
xorb
inc
outsb
xor
jp
inc
xchg
mov
filds
movsb
push
push
outsl
call
incb
arpl
push
into
sbb
add
jo
push
cmp
or
cltd
sub
push
mov
xor
mov
jb
ja
add
mov
push
sti
push
sar
int
add
fistl
repz
ljmp
loopne
lret
popf
orb
jne
ds
lcall
mov
hlt
push
imul
lret
leave
pop
ja
mov
sub
or
mov
cmp
jmp
and
and
aaa
mov
loope
fdivl
movb
ds
dec
mov
les
mov
mov
scas
repz
xchg
jmp
and
mov
inc
bound
mov
cmpb
jg
outsb
mov
lods
xchg
jns
ret
pop
jns
repnz
xchg
int3
xchg
adc
mov
lret
scas
jne
int
in
fimull
movsb
mov
enter
push
int3
outsl
jle
mov
and
sub
lahf
mov
stc
adc
inc
cmp
cmp
or
xchg
adc
jmp
add
ret
es
dec
pop
out
adc
xchg
jne
jns
fdivrl
push
sub
cmp
sub
sub
cmp
sbb
les
addb
xor
scas
lock
cli
mov
fwait
clc
popl
jge
sub
pop
cltd
add
dec
fstps
movsl
pop
mov
mov
scas
cmp
and
inc
add
flds
inc
call
cmp
mov
shl
xchg
mov
lcall
xchg
sti
jns
xchg
or
repnz
cmp
aad
clc
test
xor
xchg
add
popa
scas
jmp
and
dec
pop
outsb
lods
rolb
push
or
cli
out
sbb
stos
sbb
rcr
mov
bound
std
mov
je
cmp
in
dec
push
imul
int
ret
or
fstl
mov
arpl
jnp
dec
jle
clc
div
lret
lret
ds
outsb
into
push
pop
sbb
insb
adc
aad
cltd
bnd
sub
loop
sub
jbe
push
xchg
aaa
ljmp
adc
cwtl
mov
test
psllq
jl
jae
mov
imul
arpl
mov
sub
sbb
int3
cmp
push
mov
in
cmp
repnz
ljmp
pop
ret
scas
decb
xor
mov
rcrb
jne
fcoms
push
psrlq
xor
jp
push
xchg
shll
scas
push
lcall
sarb
aad
add
in
mov
dec
inc
dec
cmp
or
mov
or
cs
cmp
add
jbe
jns
and
loopne
or
adc
push
ret
xchg
fucom
inc
sbbl
imul
mov
loopne
xor
fidivs
mov
int3
inc
ss
add
xor
lods
imul
pushf
mov
mov
push
outsb
sub
movsl
sahf
xchg
jne
cmpsl
subl
mov
lahf
dec
sbb
std
sub
and
cmp
shl
ss
mov
adc
cmc
push
cld
push
out
mov
in
pushf
and
and
xchg
int
fnstcw
sbb
and
mov
pushf
adc
jp
jbe
ret
mov
inc
adc
and
and
or
std
movsb
cmp
bound
cmp
movsl
fs
mov
aas
push
scas
mov
add
shlb
push
imul
fcoml
movb
adc
push
stos
divb
add
inc
in
pop
lret
push
jnp
and
and
pop
and
push
sub
aad
mov
dec
push
xor
pop
frstor
loope
hlt
movsl
lea
lock
sub
pushf
out
cmp
je
mov
mov
or
cmp
les
icebp
sahf
aas
lea
push
repnz
sarb
clc
ret
jb
add
xor
cltd
sarb
inc
mov
arpl
imul
movsb
scas
push
jne
das
cmpsl
xchg
scas
subl
mov
mov
insl
testb
mov
pop
push
push
in
cmp
cmpsb
xchg
je
sbb
xor
hlt
mov
dec
insl
jnp
cltd
outsb
push
add
cmp
scas
fdivrs
sbb
mov
and
xor
xchg
cs
scas
xchg
outsb
fwait
mov
inc
inc
xor
pop
inc
mov
mov
inc
jne
pushw
pop
rcpps
test
dec
popf
inc
pop
inc
pop
loop
xchg
jno
jbe
pushf
addr16
repnz
inc
fisubrs
jb
xlat
outsl
jb
test
rolb
icebp
dec
sub
pop
bound
xor
loop
dec
cmp
mov
and
pop
ret
push
or
pop
cmpsb
andb
es
lcall
pop
dec
ret
mov
aas
test
insb
das
push
inc
js
pusha
nop
or
lcall
xor
or
cmpsb
lret
xchg
loopne
xchg
repz
cmp
jl
mov
and
jns
lcall
pop
xchg
mov
gs
and
push
jb
jge
add
and
xchg
inc
adc
jp
dec
repz
xor
jbe
mov
dec
movsb
dec
adc
daa
inc
bound
mov
stos
stc
jns
sbb
or
les
into
cmp
aaa
hlt
mov
mov
xor
pop
scas
dec
fimuls
cmpl
scas
mov
mov
cld
xor
out
outsl
pop
lret
inc
pop
add
popa
mov
mov
sub
jmp
inc
lahf
movsl
pop
xchg
cmpsb
mov
in
pop
mov
mov
and
test
push
popa
adc
sub
popf
mov
aam
popf
push
xchg
xchg
mov
inc
pop
and
or
dec
mov
xchg
xchg
adc
mov
lods
loop
cwtl
lcall
cmp
sbb
pushl
fwait
loop
and
daa
cmp
jecxz
ret
mov
adc
stos
imul
adc
sub
pop
sbb
sub
test
movsl
mov
and
ja
stc
stos
push
cmp
mov
rcll
sub
aad
test
sti
xor
push
mov
xchg
pop
mov
adc
movsb
or
sbb
xchg
push
sbb
mov
lds
sub
mov
xor
imul
cmp
push
and
scas
sahf
mov
jmp
mov
dec
data16
hlt
sbb
cmp
leave
insb
dec
dec
xchg
mov
pop
test
push
movsl
test
hlt
jno
pop
push
rolb
sub
fildl
pop
xchg
jge
inc
fbstp
test
loope
das
in
idivl
arpl
adc
and
out
pop
arpl
dec
dec
mov
dec
jbe
lret
jbe
sub
inc
repnz
das
scas
push
mov
cmp
push
jno
insb
pop
jl
stos
pop
push
loop
bound
jmp
or
scas
or
cmp
cld
int
cmp
test
lret
inc
es
mov
scas
adc
fmuls
xchg
shl
xor
inc
fs
leave
arpl
adc
aaa
outsb
call
push
pop
push
imul
cmpl
roll
arpl
inc
xchg
xor
xchg
cmp
xchg
sub
lret
fs
fistl
cmp
es
fistl
dec
fistpl
mov
pop
inc
scas
lock
daa
outsb
pusha
jg
movsl
das
hlt
mov
ret
mov
adc
imul
or
repnz
mov
or
test
mov
xchg
std
daa
aas
sub
push
pop
cwtl
mov
repz
lcall
daa
sti
jb
dec
add
xor
mov
inc
xchg
add
dec
addr16
xor
jo
and
cmp
jne
dec
lret
xlat
adc
mov
out
add
sbb
ficoms
lods
jge
in
sahf
push
cmp
outsb
mov
or
push
adc
fwait
ljmp
div
hlt
je
push
addb
pop
lds
dec
ss
cmpsb
mov
adc
jle
pusha
mov
aaa
cmp
sti
jns
in
test
adcl
xchg
add
add
imul
fmuls
pop
mov
loope
mov
cltd
lds
mov
dec
pop
hlt
or
dec
xchg
testb
aaa
pop
aam
fisttpl
adc
cld
xchg
mov
mov
lods
mov
fdivl
mov
ss
push
and
add
cmpsl
cmp
je
es
aas
js
inc
imul
mov
xor
in
xchg
mov
mov
pop
add
mov
push
mov
mov
mov
rcr
mov
lods
xchg
add
imul
push
imul
inc
adc
sbb
stos
push
add
cmp
and
xor
adc
mov
lahf
sbb
push
mov
cmp
pop
cmp
out
hlt
lods
das
xor
arpl
push
and
add
push
pushf
mulb
dec
mov
imul
dec
mulb
sbb
adcb
nop
je
sbb
addr16
loopne
add
mov
jle
movsl
call
push
leave
xchg
cmp
jbe
push
in
xor
stos
push
rcr
movnti
push
push
aas
insl
dec
adc
mov
mov
sahf
xchg
xchg
mov
int3
mov
test
sub
inc
fidivrs
leave
inc
lods
stos
xor
out
jge
add
mov
popa
jl
push
pop
mov
rcrl
sbb
aam
push
xchg
or
lahf
sti
add
ds
jo
test
int
loopne
rcll
in
sub
jns
push
fcompl
pop
cmc
insl
divl
mov
nop
dec
cmp
jge
pop
scas
fs
arpl
xchg
xchg
dec
inc
jno
scas
sub
cmc
or
stos
in
out
nop
cmpb
push
inc
sub
or
adc
test
xchg
popf
pushf
pop
cld
cwtl
shll
sbb
test
cld
fwait
mov
sub
mov
aas
call
xchg
addr16
popf
jecxz
iret
rcrb
adc
push
orl
movsb
pop
or
add
sbb
sub
scas
jno
add
xor
push
insb
add
pop
fcmovne
mov
inc
sub
or
cmp
je
push
loop
std
cs
nop
sbb
aaa
in
xor
leave
and
je
sbb
fisttps
lds
sub
jecxz
sbbl
ds
movsl
sub
jbe
jecxz
insb
push
pop
push
push
pop
sbb
xchg
sub
nop
jb
fistpll
sub
rol
mov
jge
mov
das
jns
les
fstl
in
lahf
or
dec
int3
int3
and
sbb
imull
incb
jb
hlt
test
pushf
lret
cmp
test
add
lea
add
xor
addb
sbb
outsb
jae
xor
xor
das
pop
pushf
fdiv
and
out
mov
mov
mov
jge
rorl
push
mov
xchg
outsb
mov
addb
mov
or
dec
jp
popa
push
xor
sub
addr16
lock
cld
les
cli
sahf
call
les
sub
addl
in
stos
add
adc
push
popa
sbb
cmp
aam
jp
cmc
mov
test
mov
add
or
popa
sbb
fstps
imul
dec
out
enter
lea
pop
sbb
jge
test
iret
mov
jle
sbb
sbb
adc
inc
cmp
fmull
jbe
xor
push
mov
add
sub
add
mov
sbb
rorb
inc
and
mov
test
or
ret
int
mul
pop
popf
cmp
cmp
cs
ret
xor
loope
and
insb
outsl
imul
adc
aam
xlat
jb
push
out
pop
mov
gs
push
std
mov
loop
mov
pop
in
inc
and
mov
cmp
clc
popf
or
sub
mov
testl
add
mov
mov
xchg
jnp
mov
scas
mov
inc
insb
push
sub
cmpsb
das
mov
mov
data16
dec
pop
xchg
mov
sbb
int3
cmp
fwait
push
sub
xchg
mov
xchg
adc
mov
clc
das
push
flds
pop
xchg
cmp
sbb
sub
and
hlt
xchg
insl
stos
add
mov
in
jl
dec
pop
sbb
xchg
out
lods
add
cmp
iret
sti
out
push
lock
and
in
jge
ljmp
or
pop
dec
xchg
arpl
lds
mov
dec
and
add
mov
in
leave
int
mov
dec
xchg
add
loope
jg
lods
xor
sub
xor
and
dec
pop
adc
dec
rol
sbb
push
push
aad
pop
dec
jbe
sbb
lds
jbe
jnp
lret
adc
ret
fistpll
pushl
pop
jae
sbb
sbb
ljmp
iret
dec
push
lods
mov
sub
mov
test
shll
popf
push
xchg
cltd
push
pop
leave
xchg
cltd
in
icebp
rolb
fstl
inc
pop
loopne
scas
jo
lahf
dec
clc
cmp
pop
in
scas
lea
adc
fs
insl
fs
pop
push
xchg
fldl
inc
xchg
leave
in
insl
xchg
add
dec
jg
cmpsb
mov
dec
dec
xor
or
sub
or
inc
decl
shll
pmaddwd
gs
ret
sub
into
insl
xor
jecxz
sar
mov
addr16
pop
lret
lahf
int
imul
xchg
test
mov
bound
dec
mov
jb
sbb
into
cltd
mov
test
jb
mov
add
xor
int
popl
lret
mov
xor
push
rcrl
xchg
insb
pushf
adc
pop
rorb
ret
mov
outsb
repz
cmpsl
sub
loopne
push
ficomps
pusha
pop
sti
sbb
scas
loope
sub
lods
mul
into
xchg
sub
pushl
sahf
push
bound
addr16
stos
jmp
shlb
lret
scas
inc
test
push
push
inc
inc
xchg
adc
outsb
pushl
stc
nop
mov
xchg
scas
jmp
std
lahf
mov
inc
cmpsb
cld
das
cltd
xor
scas
cs
sti
pop
int3
or
inc
push
sbb
test
or
outsb
shl
mov
or
inc
and
jnp
aaa
jnp
aas
or
sbb
and
pop
cltd
iret
xchg
test
stos
adc
mov
cmp
jp
cmpsb
shl
dec
loopne
add
ficoml
lods
js
dec
fwait
movsb
ffree
std
sbb
cmp
cmpsl
cs
cmpsl
stos
ficoml
sbb
js
sbb
popf
es
pop
push
jbe
mov
data16
push
and
jne
outsb
fstpt
fdivp
sbb
cmc
xor
xchg
cmp
mov
repnz
dec
stos
aam
jnp
lds
sarb
ret
shr
or
iret
jmp
hlt
jle
lret
clc
add
push
mov
mov
or
mov
fldcw
adc
es
cmp
xchg
vmovaps
aad
out
les
cmp
push
mov
mov
fstl
fcomps
mov
aas
insb
xchg
mull
xchg
push
mov
push
push
sbb
sti
sbb
xchg
and
loop
push
sbb
imull
scas
out
cld
cmp
mov
sbb
sub
lods
push
jae
imul
jno
pop
and
mov
cmc
push
std
push
sbbb
adc
pop
and
or
int
not
pop
cld
data16
dec
dec
je
out
js
pop
mov
les
pushw
jbe
rcrb
scas
fldenv
mov
ret
aam
jp
mov
add
jo
mov
add
pop
lds
stos
roll
clc
pop
movsb
std
inc
js
test
shll
nop
sbb
call
fimull
ror
pop
mov
movsb
and
adc
inc
mov
imul
in
pop
maskmovq
out
inc
test
or
sub
outsl
pop
shr
ja
push
push
pop
xor
add
inc
out
popa
inc
js,pn
sbb
fmuls
jmp
jnp
push
jae
dec
push
pop
pop
stos
fnsave
mov
flds
sub
rcr
mov
rol
or
inc
ffree
dec
iret
pop
pusha
cmp
bswap
es
in
jmp
mov
sub
in
stos
js
orl
scas
lods
mov
in
dec
mov
sub
dec
sbb
adc
or
lret
sbb
add
xlat
shrb
rolb
push
dec
add
in
push
mov
pop
mov
pop
cmpsb
lahf
ja
cld
mov
jo
cmpsl
pop
inc
insb
ljmp
lock
dec
in
mov
push
cmc
shlb
ljmp
rorl
or
or
inc
cmc
inc
add
stos
notb
mov
into
pushf
jne
sub
pushf
in
inc
fnstcw
mov
sbb
pop
filds
and
jge
fists
jle
jmp
lds
xchg
js
fiaddl
push
mov
adc
test
arpl
mov
and
mov
stos
adc
xlat
pop
adc
dec
adc
xchg
popf
daa
into
fsubr
mov
subb
dec
mov
cmp
push
data16
jb
or
sbb
dec
std
dec
js
jns
push
lods
ja
cmp
inc
jnp
test
shr
add
ljmp
dec
add
lods
mov
lahf
add
outsb
arpl
push
adc
mov
ja
mov
nop
xchg
pop
add
lcall
dec
sbb
ret
cmp
jle
mov
lret
sbb
and
movsl
xor
push
insl
dec
in
mov
imulb
dec
lods
mov
mov
adc
nop
and
add
mov
adc
sahf
stos
scas
out
ror
sbb
or
push
rcr
push
jp
or
mov
sbb
add
call
xor
inc
cmp
inc
jge
jnp
mov
mov
ljmp
inc
jmp
dec
xchg
cmp
pop
push
out
dec
mov
fiaddl
jno
mov
sbb
push
mov
out
sti
bound
dec
push
enter
push
dec
dec
jns
push
out
sub
ret
or
je
push
dec
mov
mov
hlt
xlat
scas
pushf
call
jnp
sbb
out
add
int3
sub
mov
sbb
sahf
add
pushf
and
lods
pop
sbb
sbb
xor
outsl
cwtl
mov
adc
ret
scas
add
les
or
bound
dec
adc
mov
push
idivb
xchg
mov
lods
pusha
cmpsw
push
int
xor
adc
push
sar
and
fsubrs
mov
arpl
jne
adc
sub
cmp
pop
xor
clc
lcall
mov
push
mov
or
dec
fs
xchg
pusha
fstpl
dec
or
idivb
xor
outsl
das
in
push
aam
mov
pop
stos
and
mov
dec
add
mov
mov
mov
and
popa
mov
push
sbb
mov
adc
jo
or
lea
dec
lea
or
fstpl
jge
xor
mov
push
and
sti
roll
cli
and
or
sub
popf
jo
adc
incl
inc
sbb
and
sbb
test
jno
sbb
cmp
int
sbbb
push
cli
jg
pop
movsl
cmp
push
bound
test
popa
sbb
xorb
mov
push
push
xor
gs
xchg
prefetchwt1
or
jns
ljmp
inc
jne
jle
push
ds
dec
adc
mov
shll
push
icebp
rcll
xchg
shrl
inc
add
hlt
mov
and
pop
out
and
or
xor
jge
mov
cwtl
sbb
xchg
test
rolb
int3
das
adcb
nop
ja
jb
test
mov
cmp
sub
push
jp
pushl
add
xorl
pop
jns
out
out
jp
cwtl
fdivrs
neg
out
in
mov
cmp
call
out
mov
push
inc
adc
arpl
ljmp
das
outsb
lcall
cwtl
xor
xchg
pop
scas
cs
andb
pop
pop
stc
jbe
addr16
lea
push
mov
mov
xchg
pop
hlt
sbb
sbb
jno
inc
popl
xor
push
push
outsl
loop
mov
leave
test
ret
call
adc
aad
bound
mov
or
inc
mov
xor
sahf
je
pop
dec
int3
loop
sub
in
out
fimuls
fadd
or
mov
ds
or
dec
inc
psubq
xor
testb
jno
cmpsb
mov
sbb
in
cmp
or
lcall
mov
or
xor
mov
jmp
shll
xchg
call
mov
pop
sbb
push
inc
jne
dec
pop
push
mull
scas
rcl
mov
roll
in
jecxz
push
es
mov
ljmp
mov
mov
loop
gs
mull
mov
aam
adc
shll
jo
inc
ficoms
ret
jo
stc
int
adc
mov
lahf
or
sar
pop
in
sbb
lret
in
popa
arpl
mov
cmp
adc
enter
adcl
aaa
mov
ffreep
and
push
loopne
xchg
push
pmaxub
idivl
add
jns
loop
icebp
add
pop
fcomi
psubq
in
fcom
push
jno
pusha
mul
mov
jp
mov
cmc
add
addr16
dec
push
mov
cltd
push
dec
adc
xchg
sbb
pop
movb
aas
jne
jecxz
push
ds
xchg
add
push
or
xor
push
add
pushf
enter
xchg
cmp
xor
fdivrl
add
push
fsubs
pop
mov
mov
sbb
inc
dec
fwait
in
jle
call
sarb
pop
mov
xor
ljmp
cs
mov
pop
dec
push
inc
xchg
shrl
inc
jecxz
int3
int
push
inc
jnp
mov
xchg
mov
popf
sbb
jl
mov
mov
loope
cmp
int3
orl
pusha
outsb
mull
mov
or
fdivs
xlat
ret
mov
pop
test
push
das
ljmp
xchg
out
cmp
mov
mov
dec
std
andb
pop
push
xor
sub
cmp
mov
mov
cmp
test
xchg
test
mov
jmpw
mov
cmp
es
lret
sub
cs
xchg
mov
pop
push
dec
fstpl
xor
ss
push
dec
int
cmp
jb
or
cmp
adc
and
xchg
xchg
xor
test
repnz
test
mov
mov
mov
add
ret
insl
sbb
test
insb
dec
js
mov
les
push
repnz
gs
inc
es
dec
cmp
cmp
into
data16
cltd
or
mov
fnsave
push
imul
jmp
push
enter
sbb
sub
nop
dec
inc
gs
inc
mov
adc
push
divl
call
fmull
pop
hlt
inc
push
mov
sbb
aad
rorl
js
pop
jno
and
repnz
sbb
cmp
push
incb
mov
dec
jno
andl
pop
movsb
inc
mov
mov
les
icebp
push
push
push
push
xchg
ds
mov
or
rorl
dec
into
test
push
scas
stos
mov
imul
fadd
sar
xor
jg
adc
imull
push
mov
pop
xor
cmpsb
je
dec
adc
mov
shlb
lods
push
outsb
and
jb
fisubrs
adcl
xchg
adc
push
sub
dec
dec
pop
mov
ss
test
je
jl
iret
addr16
jne
push
xchg
xchg
pop
add
push
das
cmp
loopne
mov
icebp
pop
mov
xor
popf
push
es
dec
adc
inc
adc
sub
jmp
cmpsb
pop
scas
inc
sbb
cmp
imul
imul
aad
aam
sub
cmpsb
jp
dec
repz
xor
stos
rdpmc
mov
es
adc
xchg
int3
popf
divb
pop
mov
push
adc
adc
add
or
out
movaps
movsl
lret
rclb
push
fisubrs
inc
pop
adc
adc
mov
cmp
sbb
in
mov
sbbl
ret
fwait
or
add
bound
add
mov
sub
xor
fwait
and
lods
aaa
std
xor
cltd
xchg
mov
lock
dec
inc
inc
dec
call
sbb
movsl
outsb
add
stos
or
int
loope
pop
outsl
jne
repnz
xor
or
std
mov
cmp
out
sbb
push
or
lds
lods
inc
mov
mov
sbb
lret
mov
jecxz
or
and
mov
mov
pop
ja
rclb
pop
inc
add
les
xchg
sbb
sbb
add
mov
add
scas
xor
jle
mov
pusha
dec
test
outsl
add
jne
iret
stos
jle
xchg
out
fmull
mov
in
cmp
in
dec
int
aaa
sbb
jb
pop
dec
fistps
push
fldenv
push
lret
sti
sbb
jecxz
push
xor
adc
std
adc
cmp
push
or
xchg
lods
and
push
xorl
sbb
xchg
xlat
jle
push
sbb
sti
pop
les
add
or
or
dec
or
sbb
jg
loopne
js
inc
fisubrs
fsts
push
fisubs
sbb
testl
jnp
inc
sub
sarl
scas
push
cs
test
in
cmp
out
setb
mov
jnp
into
sub
jmp
jp
dec
jge
push
mov
dec
mov
fcmovu
pcmpgtd
xchg
lcall
jo
int3
je
add
pop
mov
mov
jne
vfrczsd
sti
fwait
add
jge
aaa
jns
add
jge
pop
jnp
jbe
mov
cmc
aam
pop
xor
fstps
mov
and
xor
inc
shlb
pop
mov
repz
sbb
jno
rcrl
js
loope
ret
jns
es
push
daa
les
pop
repz
push
add
sbb
dec
pop
outsl
jae
and
mov
stos
xchg
inc
enter
adc
repnz
cli
xchg
inc
pop
scas
cmp
lods
mov
dec
sbb
dec
rolb
mov
push
outsb
leave
or
lods
pop
add
imulb
int
adcb
lods
mov
pop
pop
cmp
jle
divl
stos
push
and
xor
scas
mov
mov
cmp
rep
cmp
dec
pusha
xchg
and
cmp
test
mov
decb
cli
jp
mov
sahf
aaa
jp
pop
sub
movsl
test
sbb
mov
and
into
pushf
lcall
xlat
sbb
mov
out
sbb
xor
es
test
cmp
stc
or
xacquire
pop
lock
or
lahf
fistps
out
iret
sub
movsb
cltd
icebp
ljmp
sti
push
nop
or
iret
dec
and
pop
ljmp
xchg
nop
movsb
push
arpl
cmp
out
cltd
push
push
mov
jge
fcoml
lret
aas
xchg
push
cmp
mull
cmp
adc
test
push
pop
cwtl
aas
popa
pminsw
out
xchg
inc
inc
cmp
add
andb
inc
clc
or
lahf
addl
fisttpl
pop
mov
je
inc
test
lods
outsl
sub
dec
clc
inc
ss
in
outsl
ret
mov
cmp
xor
insb
jl
test
pushf
jecxz
cmp
jg
rorb
inc
insb
mov
lret
ror
aaa
jne
sub
mov
and
push
push
test
rorb
pop
arpl
ror
add
pop
into
sbb
add
daa
mov
cmp
xor
inc
clc
mov
outsb
stc
add
icebp
orb
add
lret
push
loop
jno
add
sbb
sbb
mov
xchg
cmp
hlt
enter
pop
sbb
in
sbb
mov
fisubs
mov
jmp
push
std
insl
lret
dec
ror
jg
out
inc
rclb
adc
rcr
addr16
mov
cltd
fwait
xchg
dec
insb
out
scas
sbb
fnstcw
mov
in
xchg
inc
fisttpl
outsl
sub
std
xchg
cmpsl
sti
out
push
push
xchg
xorb
cmp
mov
out
jp
adc
pop
enter
test
push
test
or
enter
adc
jmp
mov
pop
fisubrs
add
test
mov
jo
and
outsl
insl
leave
push
and
cmp
rorl
pop
sbb
rol
sbb
xor
dec
aad
movsb
adc
push
jne
sbb
mov
mov
test
rorb
dec
clc
mov
test
sarb
xlat
shl
adc
cmp
or
sbb
fninit
fisttps
adc
fmul
mov
push
dec
mull
mov
jl
sub
cmpsb
cmp
outsl
popa
ja
mov
xlat
lret
pop
sti
stos
lods
div
jecxz
push
inc
adc
xchg
inc
xor
call
cmp
dec
pop
repz
loope
or
rcrl
repnz
orl
rcrl
std
sub
test
mov
js
dec
ret
cmpsl
sub
test
mov
insb
lea
dec
ss
dec
push
gs
fcmovbe
cmp
sarb
sub
aaa
xchg
int
icebp
mov
push
loop
jbe
xchg
addr16
and
clc
fcompl
and
scas
iret
xor
aad
js
fidivl
xlat
jmp
inc
lahf
test
and
and
test
mov
add
sbb
inc
cmpl
out
xchg
in
aas
push
mov
sub
dec
lret
lret
mov
mov
lret
xchg
dec
jp
lds
mov
inc
adc
fcomip
adc
divl
das
jo
scas
imul
mov
testl
testb
jns
xchg
ret
loopne
iret
aam
pop
pop
push
scas
shlb
aas
push
call
sbb
out
cmp
in
fldcw
das
sti
or
pop
mov
movsb
mov
sbb
roll
in
xor
push
push
pop
mov
pop
ficoml
scas
cwtl
jb
test
sub
cld
filds
test
inc
pop
inc
rcr
outsl
js
pop
push
xor
inc
jno
scas
mov
mov
je
adc
xor
lcall
mov
gs
mov
cmp
inc
div
push
mov
dec
mov
test
repz
xchg
push
jne
or
ret
adc
pop
int
sarl
leave
pop
pop
inc
ret
mov
dec
nop
dec
mov
imul
sbb
push
pushf
call
loopne
pop
out
adc
cltd
or
shrb
inc
pop
jp
je
ja
repz
fsts
adc
arpl
cs
cmp
dec
and
cmpsl
jae,pt
cmp
jmp
pop
into
js
xchg
pop
fisubs
je
fcomip
xor
lods
mov
xchg
cli
mov
clc
into
mov
and
lods
adc
dec
inc
sti
fidivrl
mov
in
lahf
das
pop
xchg
jmp
push
cmp
push
les
sub
clc
jge
negl
mov
lret
enter
cltd
test
add
stos
xor
lods
in
dec
popa
mov
cmpsl
out
lea
or
rolb
dec
movsl
jb
out
mov
rcrl
jnp
loopne
shrb
insb
mov
or
enter
cmp
dec
outsb
or
sahf
scas
sbb
sti
inc
inc
dec
dec
cli
rclb
mov
xor
sbb
xlat
stos
cwtl
inc
push
push
xor
adc
ret
dec
adc
insb
punpcklwd
in
mov
stos
stc
xor
mov
sub
repz
pop
ds
shll
and
xchg
jb
insl
xlat
fdivrp
and
and
sbb
add
push
dec
fmuls
push
test
mov
pop
mov
cmp
sbb
add
adcb
orl
lds
mov
in
dec
mov
add
mov
cmp
jmp
inc
aas
pop
sti
data16
jns
mov
lods
in
xchg
jns
mov
shl
popf
push
jae
movsl
fs
pop
push
in
jb
mov
ja
push
push
pop
mov
data16
mov
adc
cwtl
mov
mov
xchg
dec
mov
xor
ffreep
jg
pop
test
repz
movsb
icebp
or
push
sub
xchg
jno
inc
stos
loop
outsl
dec
sbb
loop
mov
push
and
iret
shll
add
ja
gs
mov
adc
add
push
jmp
inc
enter
and
out
and
xchg
push
pop
popl
movsl
outsb
dec
iret
in
jo
sbb
jb
sbb
dec
into
add
mov
cmp
cli
xor
ret
sub
lret
movsl
jge
cmp
loope
dec
mov
pmaddwd
subl
repz
sbb
push
xor
pushf
adc
fsubrl
sbbb
mov
repz
popf
mov
jo
push
pop
rorb
xchg
add
cmpsb
dec
jmp
gs
jmp
mov
outsb
lds
and
jle
jbe
lahf
hlt
mov
jle
inc
dec
out
mov
cmp
cmp
sbb
pop
jge
or
adc
stos
pop
cwtl
pop
mov
pop
jbe
insl
int3
pop
lret
fcmovbe
mov
jl
adc
pop
and
lahf
test
cwtl
ljmp
sbb
jns
xor
in
pop
add
or
cli
inc
aaa
adc
addr16
sbb
test
mov
sub
daa
lret
test
stos
pop
jp
cmp
pop
jo
pushf
mov
aad
sbb
popf
mov
inc
xchg
mov
hlt
jne
dec
clc
and
and
mov
xchg
rorl
jg
mov
nop
mov
push
iret
test
dec
sbb
lahf
xor
xchg
nop
dec
pusha
mov
push
fists
es
dec
push
repnz
clc
mov
mov
pop
test
xchg
movsl
popa
sub
cwtl
and
inc
das
repnz
xlat
outsb
repz
add
popa
or
xor
incb
into
popf
xor
aaa
push
insl
mov
aaa
and
aaa
es
icebp
cmpsb
cmpsb
es
fcoms
js
add
jae
inc
jp
cmc
dec
or
hlt
mov
shlb
cmpsb
movsb
imul
mov
sbb
xor
out
int3
orb
lods
lret
imul
icebp
in
popa
int3
mov
nop
push
lcall
inc
repnz
fstpt
or
stos
sbb
pushf
insb
jno
xchg
lock
js
clc
test
outsb
fmuls
mov
jp
jbe
stos
fisubl
mov
stos
mov
xor
fmul
or
jmp
imull
mov
xchg
adc
xorb
jo
hlt
and
push
and
mov
sub
icebp
lods
xchg
lea
es
lea
shlb
lahf
sbb
sbb
jb
fidivrl
mov
xor
cmp
push
int
jno
xchg
dec
mov
insl
rclb
add
xchg
inc
mov
test
loopne
arpl
jno
add
mov
and
sub
adc
xchg
pop
mov
out
dec
inc
leave
jl
sti
inc
in
lret
jge
pop
dec
stos
push
lahf
cmp
xor
mov
mov
jecxz
scas
cs
jg
pop
scas
jg
imul
dec
jb
dec
push
add
movsb
pcmpeqw
sarb
jno
fistps
ficomps
mov
daa
push
pop
push
cmp
push
jmp
int
mov
addr16
dec
and
or
subb
adc
ds
push
inc
mov
pusha
cwtl
push
les
repnz
xlat
iret
and
mov
dec
mulb
and
xor
lods
mov
mov
sub
jb
xor
lock
loop
xchg
popa
cld
int
lods
inc
js
cltd
in
push
ja
pop
sbb
push
inc
int
cmp
push
iret
xor
push
cmp
cmpsl
push
lcall
pop
daa
ret
loope
shl
int3
pop
lds
xchg
sub
jno
sahf
pop
jecxz
cmp
adc
in
ds
sub
fstpl
pop
je
fcomps
jge
add
pop
inc
mov
cld
xchg
pop
iret
dec
shlb
test
push
inc
sub
and
add
jmp
loopne,pn
push
or
inc
loopne
xchg
lea
inc
ds
push
aad
lods
push
cmp
fnstsw
lcall
ja
es
cmp
dec
test
sti
dec
mov
xchg
sub
and
jb
dec
add
lret
mov
and
pop
aad
gs
cwtl
push
divl
fdivl
adc
lds
frstor
xlat
sbb
addr16
and
jnp
jge
adc
or
xor
inc
sub
mov
xchg
adc
push
add
cmp
stos
pop
push
leave
jbe
repz
sbb
movsl
jb
fs
rcrb
cmp
ljmp
sub
mov
nop
cmp
jns
mov
mov
mov
jle
jmp
jnp
jmp
loopne
bound
punpcklbw
jnp
and
std
sti
mov
in
fistpll
int3
jl
mov
push
push
add
and
scas
add
add
jno
ds
rorb
jnp
mov
add
dec
adc
in
das
mov
stc
xchg
ficompl
adc
jnp
xchg
add
add
mov
xor
movlps
rcl
lret
jbe
sahf
movsb
jae
sbb
or
inc
bound
or
dec
push
inc
repnz
imul
xchg
pushf
aad
jp
xchg
sbb
and
shlb
pop
pushf
cwtl
inc
jno
lret
aad
fldt
add
andb
xor
mov
dec
pop
jns
and
pushf
int3
fnsave
sub
dec
xchg
jbe
cwtl
dec
popw
inc
xor
add
mov
dec
pop
fisttpll
stc
dec
push
mov
push
pop
sub
popl
addr16
int
cmp
xchg
pop
adc
mov
or
pop
and
mov
cmp
fisttps
mov
test
adc
fsub
lret
xchg
cmpl
into
push
pusha
pop
jmp
les
out
mov
shlb
lods
lcall
stos
lods
aad
int
roll
sub
movsb
pushf
adc
stos
xor
mov
cmpl
push
cmp
loop
adc
jp
fisttpll
shll
sbb
jae
adc
xchg
jg
fdivr
imul
aaa
sahf
inc
xor
xor
mov
or
jo,pn
pop
cld
xor
adc
rolb
aaa
and
daa
std
lods
in
int3
dec
test
das
jp
stc
sbb
out
mov
rcll
fistpll
icebp
repz
mov
imull
cmp
adcl
push
push
test
cmpsb
je
xchg
xor
andl
pop
jno
lods
shl
push
test
jmp
imul
xor
into
andb
rorl
pop
sub
pop
add
outsb
hlt
pop
sbb
repz
push
push
out
loop
dec
jp
mov
dec
inc
imul
mov
dec
or
js
stc
bound
sbb
xchg
add
hlt
aas
jbe
push
mov
cmp
jg
pop
mov
std
cltd
xor
xor
loopne
leave
pop
jns
cmp
pop
mov
push
mov
in
sub
or
sub
dec
call
js
popa
jg
xchg
divb
ja
outsb
ds
sti
imul
xchg
negb
stos
push
mov
lods
mov
sbb
pop
test
dec
jp
push
inc
sub
stc
jbe
sub
xor
mov
sbb
sub
push
mov
add
inc
loopne
dec
xchg
ret
out
add
mov
push
icebp
dec
mov
cmc
pop
and
scas
out
mov
negl
ret
jp
adc
dec
jge
sarl
jge
add
mov
mov
mov
cmpsl
pop
cwtl
mov
sub
pop
and
or
mov
sbb
fisubrl
les
into
xchg
rcrl
mov
xor
into
pop
dec
push
iret
in
jno
adc
aam
gs
cli
pop
adc
push
lret
inc
movsl
aas
bound
out
leave
pop
in
std
insl
inc
xor
sub
jae
testb
movsl
int
ss
cmp
pop
aaa
ret
movsb
lods
shrb
push
pop
daa
mov
and
out
aaa
mov
imul
and
lcall
adcb
icebp
scas
ret
sub
hlt
jg
or
ss
jge
outsb
dec
adc
dec
or
xchg
imul
int3
outsb
leave
cmpb
rcrl
push
int
mov
pop
mov
mov
push
notl
pop
jo
enter
pop
pushf
fisubs
sbb
adc
sub
fimuls
ljmp
jae
mov
lret
or
adc
jmp
pusha
sub
sub
mov
push
fildll
dec
add
scas
loopne
into
adc
sbb
int
sarb
shrb
sbb
push
jecxz
push
or
xchg
lcall
mov
or
xor
rorb
xor
dec
dec
mov
sub
fmull
aam
adc
xchg
arpl
aam
adc
sub
sub
ljmp
and
xor
xor
jle
mov
mov
sub
popf
rolb
cmpsl
dec
imul
push
aad
nop
mov
fidivrs
mov
call
lods
and
mov
pop
mov
sub
popa
fcmovbe
lods
stos
cld
and
push
std
push
outsb
jnp
loop
test
outsl
or
add
push
jno
adc
cld
xor
stos
inc
in
scas
adc
aad
add
add
fmulp
jb
mov
test
lds
and
mov
andl
cmp
mov
loope
mov
pop
imul
imul
mov
mov
mov
and
adc
scas
movsl
jae
and
jge
outsb
jle
je
xor
je
stc
mov
push
pop
mov
push
or
fstpt
out
xchg
sbb
pop
sub
or
push
jmp
mov
ss
inc
jg
mov
push
sbb
int3
leave
inc
mov
push
mov
push
int3
and
jg
mov
push
std
cmpsl
push
adc
pop
xor
dec
fs
pinsrw
cwtl
sahf
pop
sub
sbb
nop
dec
sub
outsb
xor
pop
lods
addr16
in
or
es
pop
sbb
sahf
inc
dec
xor
xor
mov
imul
sbb
testl
pop
rcl
scas
sub
jge,pt
repz
aad
insl
sub
push
cmp
xor
fidivrl
jno
fistpll
inc
test
push
stc
fwait
xlat
mov
mov
nop
xchg
adc
popf
mov
dec
pop
xor
and
cmp
notb
mov
pusha
add
cmp
jno
xchg
inc
adc
int
cmp
cld
aad
push
jnp
in
xchg
rol
sbb
aas
and
xor
and
jmp
sub
dec
jbe
mov
pop
xor
pop
xchg
xchg
sub
pushf
movsl
push
push
mov
pop
pop
or
inc
js
les
adc
fnsave
or
dec
stos
call
cmc
je
dec
inc
or
mov
sarl
mov
inc
lds
cmp
xchg
and
rclb
test
clc
cmpl
xor
lahf
pop
std
movsl
adc
gs
adc
outsb
in
cmp
in
sbb
rcll
bound
sar
sub
andb
iret
lock
test
push
mov
outsb
jb
pop
lea
sbb
dec
adc
push
clc
dec
or
jecxz
mul
mov
mov
sbb
mov
sbb
addr16
nop
test
mov
pop
out
aaa
mov
and
push
sub
mov
push
pop
mov
cmp
sbb
sub
and
sub
mov
out
in
andl
add
xor
leave
mov
cwtd
xor
lret
xor
std
int
imul
aaa
jae
xchg
dec
mov
mov
cmpsb
lock
push
popf
jnp
inc
mov
add
fisubl
sub
jns
and
mov
and
jl
ss
std
dec
mov
lock
xor
mov
cltd
fldl
xchg
mov
inc
lea
xor
cmpsl
scas
fimull
dec
enter
xor
cmp
adc
add
jecxz
insb
out
inc
movsb
loopne
mov
jg
jno
cmp
sbbl
addr16
test
fucom
and
pop
sarb
cmp
inc
jbe
pushf
or
lret
das
mov
sub
xchg
push
call
repz
lods
out
loopne
pusha
ficoms
pop
sub
arpl
xor
lret
mov
cmpsl
sbb
cmp
jmp
popa
imul
adc
lods
add
mov
sub
loope
les
lds
mov
nop
icebp
pop
bound
cmp
lods
movsl
mov
loopne
je
adc
jae,pt
daa
out
cmpsl
out
jmp
pop
inc
ret
mov
adc
sub
mov
adc
sbb
cmpsl
jne
sbb
inc
mov
mov
iret
or
jg
ficompl
lods
mov
leave
je
lea
jp
cmp
icebp
pop
aas
jl
jnp
imull
pop
adc
xor
pop
mov
mov
and
inc
mov
cmp
xor
sub
or
mov
cmp
decb
lret
lret
pop
mov
sbb
dec
xchg
shrl
xchg
jmp
sbbl
xor
push
mov
mov
jb
pop
pop
fidivrl
push
lods
out
fmull
pop
jbe
inc
shl
or
add
mov
dec
cmpb
sub
mov
push
xchg
pop
pop
cmpsl
sbb
ret
punpcklbw
out
sub
push
push
xor
ljmp
xchg
or
add
cmp
lahf
gs
push
add
inc
jb
adcl
popf
push
inc
lock
popa
movaps
sbb
stc
xor
mov
adc
cli
push
or
movsb
mov
sqrtps
sub
xor
dec
adc
dec
add
adc
mov
jnp
sub
int
cmpsl
mov
clc
rorl
pop
pop
orb
mulb
mov
ret
dec
and
mov
jae
xchg
push
insl
lds
stc
sbb
cmpb
push
jno
inc
arpl
mov
and
adc
add
out
or
mov
daa
cmp
lock
fs
push
lahf
mov
jne
pop
and
push
xchg
add
insb
pop
adc
mov
xor
in
mov
xchg
arpl
lahf
sbb
ss
popa
xor
shll
fstps
rcrl
rorb
jbe
sub
stc
sbb
jbe
aas
lcall
ds
fisubrl
pop
dec
cmp
cmpsl
jmp
cmpsb
mov
inc
inc
orb
xchg
fdivrs
adc
adc
dec
sbb
cmp
dec
in
mov
inc
mov
xchg
mov
add
dec
int
jmp
sbb
data16
jge
lret
pop
dec
adc
fstl
push
icebp
iret
sbb
loop
fiadds
sti
imul
inc
int
aas
jno
movsl
out
dec
dec
mov
cmpsb
in
sbb
pop
andb
lcall
push
pop
loope
sub
mov
xchg
loop
mov
das
nop
aaa
cmp
insl
ror
xchg
push
push
jl
stos
xor
dec
add
in
xchg
jae
add
out
xorb
add
mov
lahf
adc
ds
aad
in
icebp
test
ljmp
jno
loop
adc
and
inc
out
out
popf
lds
scas
test
and
jo
psubsw
mov
sub
loope
repz
jb
push
mov
fisttpll
fdivrl
add
push
mov
jl
and
in
mov
xor
mov
sub
shl
pop
shll
push
std
int
inc
nop
lcall
mov
push
pop
pop
pop
gs
loope
cs
mov
fldcw
filds
pushf
stos
mov
mov
dec
cmpsl
mov
add
jmp
std
adc
xor
or
shl
sub
cmp
push
cmpsl
sub
addl
insb
fxch
xor
subl
mov
lret
xchg
cmp
xchg
movsb
lret
ds
in
push
ss
push
and
nop
lret
jecxz
aad
je
xchg
and
test
pusha
cmp
fcmovbe
nop
xchg
pop
pop
nop
pop
inc
ffree
push
mov
push
xchg
fwait
xchg
mov
das
fisubl
bnd
hlt
lea
sbb
pop
daa
movsb
push
xchg
imul
push
dec
mov
pop
cwtl
sbb
cltd
jecxz,pt
aas
and
push
notb
mov
jmp
dec
rep
stos
aam
pop
int3
outsb
dec
pop
mov
out
dec
jl
iret
cmc
xlat
and
enter
rolb
push
int
sub
jno
ret
and
dec
mov
and
pop
icebp
inc
mov
cmp
lret
push
adc
clc
add
lahf
lret
gs
inc
dec
dec
jp
sbb
shrl
lahf
mov
push
imul
or
loopne
rolb
dec
sbb
dec
mov
and
lret
stc
adc
out
adc
dec
sbb
jge
dec
push
jge
loope
xchg
enter
xor
xor
ljmp
and
and
not
gs
rorb
jb
inc
inc
pop
sbb
mov
call
inc
mov
xchg
add
mov
jns
popf
test
xchg
jecxz
loopne
fstpt
sti
sbb
es
fldl
or
push
inc
sbb
push
sub
fisubrl
enter
int3
sahf
mov
shrl
test
es
pop
std
add
out
stos
xchg
mov
push
mov
push
inc
sbb
lods
sbbb
iret
fcoml
xor
cmp
scas
inc
adc
test
jo
and
or
test
arpl
mov
xchg
cmp
and
xchg
mov
xor
imul
in
testb
push
leave
push
jg
pop
gs
fdivrl
lret
mov
xor
add
sub
mov
fcmovnbe
leave
jmp
inc
mov
or
dec
js
outsl
pop
loope
fcoml
inc
aad
xorb
xchg
enter
cld
jge
push
jle
out
sub
xchg
mov
sbb
addr16
lods
ljmp
sahf
sahf
ret
xlat
fdivl
clc
or
push
mov
lret
mov
out
xchg
jmp
pusha
rclb
xchg
stos
mov
test
inc
scas
push
pop
pushf
cltd
adc
lods
jne
ja
repz
mov
dec
aas
push
dec
mov
negl
mov
sub
xor
dec
stos
jmp
push
mov
mov
test
popa
outsb
rcll
mov
adc
dec
add
fisttpl
jbe
sbb
jmp
dec
add
out
or
mov
dec
cmc
push
test
ds
sub
iret
ror
leave
insb
into
inc
or
orl
pop
xchg
or
filds
mov
dec
pop
dec
arpl
xchg
in
inc
mov
pop
aad
call
hlt
sbb
cmpsl
ljmp
outsl
dec
and
fstps
or
cmpsb
adc
push
call
adc
jg
sbb
popa
lods
les
dec
jae
cltd
inc
lods
in
cld
adc
ljmp
fstps
aaa
xchg
imul
mov
adcl
es
je
ret
mov
lret
push
cmp
push
mov
lock
xor
mov
jle
sahf
cmpsl
cltd
out
jb
sti
stos
inc
dec
sub
imul
push
dec
invd
jbe
pop
shrb
fwait
adc
jb
cwtl
cmp
or
cmp
sub
push
pop
stos
into
jl
sbb
pop
fiaddl
mov
sarl
xor
mov
daa
lods
adc
push
loop
aam
inc
mov
popa
test
cmpsb
jnp
fwait
or
pop
rcrl
out
aaa
addb
jo
mov
ret
cmp
add
xor
hlt
pop
fwait
stos
pop
enter
mov
xor
ljmp
daa
pop
arpl
xchg
sub
out
add
pushf
in
cmp
add
xchg
xchg
xchg
xchg
push
test
movsb
mov
or
jge
xchg
push
test
xlat
push
and
xor
mov
divb
or
xchg
iret
add
sbb
cmp
insb
cwtl
sub
or
pop
daa
je
jb
mov
and
dec
sbb
dec
cmpsb
rcl
xchg
push
sub
push
adc
ss
jnp
sbb
or
gs
sbb
and
dec
xchg
jno
lret
faddl
xlat
jmp
imul
clc
loope
jl
aad
imul
push
jne
cmpsb
xchg
xchg
pop
mov
xor
mov
repnz
orl
jmp
push
cwtl
mov
mov
xchg
and
cmpsb
jne
sbb
enter
enter
and
rorl
pop
jnp
or
or
hlt
jo
lds
pop
sub
pop
ja
sub
push
out
cs
mov
and
divl
mov
pop
mov
cmc
fnstcw
adc
mov
loopne
push
stos
stos
int3
pop
mov
out
inc
mov
and
xchg
xchg
cwtl
or
inc
rcrb
stos
and
clc
push
sub
into
outsb
sbb
push
sub
xor
nop
dec
lods
dec
sub
mov
rolb
sahf
adc
mov
loop
jae
push
aas
lret
test
cmp
cmpsl
jne
mov
hlt
outsb
aaa
imul
pop
out
push
cltd
dec
mov
mov
cs
mov
jno
pop
push
shl
pop
in
cltd
lahf
out
out
ljmp
shlb
jl
xlat
roll
or
pop
stc
adc
pusha
and
xchg
xchg
pop
sbbl
lock
pop
pop
xlat
sub
std
out
mov
push
in
testl
test
out
sahf
daa
out
jne
int3
jb
mov
jno
jl
lock
ffree
shr
mov
sbb
push
data16
fdivrl
push
fdivrl
pop
jbe
pop
adc
sub
add
repz
leave
add
jmp
mov
dec
inc
out
int3
daa
cmp
jecxz
sbb
in
and
or
imul
mov
add
ret
xor
enter
xor
push
sbb
rcll
repnz
pop
and
or
pop
mov
ret
rcll
inc
cmp
jns
das
jp
adc
iret
jns
adc
mov
fwait
std
pop
popa
dec
test
lock
testb
sbb
push
mov
and
cmp
push
hlt
fcompl
lret
dec
mov
sbb
add
push
fbstp
in
int
sub
jle
int3
and
cmpsl
sbb
outsb
lods
push
mov
scas
stc
js
jmp
or
pop
cmp
out
sub
lods
mov
iret
pop
and
xchg
popa
xchg
xlat
out
and
sub
ret
in
adc
and
dec
es
push
pop
dec
pop
icebp
or
mov
fstl
xchg
sub
mov
ljmp
repnz
frstor
sarl
push
imul
outsl
cmc
sbb
mov
sti
movsb
xchg
adc
lcall
sahf
fcoms
xor
dec
pop
pop
push
popf
rcrb
ftst
inc
or
jl
hlt
daa
icebp
fidivrl
xor
xor
xor
sbb
xchg
push
dec
test
sub
dec
mov
pushf
mov
stc
out
dec
xor
fwait
sub
outsb
xchg
loope
shll
popa
int3
push
adc
push
adc
jg
xor
inc
sub
xchg
inc
or
lock
rol
rolb
enter
or
ret
dec
not
lcall
rcrl
sar
sbb
push
nop
lahf
pop
jne
das
xchg
cmpsl
pop
stos
mov
jge
mov
vpmullw
movsb
cmp
enter
add
mov
push
sahf
test
inc
ret
mov
jge
cmpsl
mov
mov
mov
testl
push
outsl
test
cmp
sbb
ret
lret
cmp
loope
add
mov
ret
xor
mov
sbb
shl
out
jp
aas
imul
iret
push
shr
out
adc
jmp
jp
ret
push
cmpsl
inc
sahf
das
mov
sbb
cmpsl
sub
fistpl
push
xor
jmp
adc
outsb
movsb
or
inc
jmp
stos
testl
fcmovnb
out
adc
pusha
fistl
push
stos
lret
pop
cmp
shrl
mov
push
mov
push
xor
dec
lcall
fldl
add
push
pop
sbb
adc
push
shll
mov
lods
jle
mov
test
cmp
sbb
shl
popa
xor
jg
sbb
push
xchg
xchg
enter
sbbl
pusha
or
lcall
stos
dec
mov
packuswb
fnstenv
mov
imul
insl
mov
xchg
jmp
add
dec
xor
hlt
loop
dec
in
xlat
cmp
cmp
jb
sti
dec
jbe
pop
or
adc
mov
add
lcall
jg
sub
imul
dec
push
daa
sub
mov
cmp
or
cld
push
or
fcmovnu
pop
xchg
pop
mov
shlb
jb
xor
lcall
pop
testl
lock
daa
dec
mov
out
repnz
out
pop
inc
aas
add
sbb
xchg
roll
sbb
out
jb
dec
adc
cmpsb
fiaddl
inc
mov
nop
stos
aad
inc
jg
mov
decb
test
sbbb
mov
je
pop
cld
mov
mov
ret
pop
les
xchg
clc
loope
jbe
xor
mov
adc
scas
leave
mov
jmp
mov
fnstsw
mov
ret
cmp
fdivl
cmp
clc
xchg
mov
add
sbbb
pop
adc
out
sub
popf
xor
xchg
cmp
out
or
or
movsb
and
inc
es
cli
mov
cmp
inc
add
jbe
daa
pop
ds
sbb
adc
in
adc
push
test
mov
cmc
push
sub
xlat
fwait
popa
cmpsl
sub
lds
sub
jno
fisubrs
lahf
xchg
add
adc
inc
in
adc
inc
daa
pop
push
pop
jmp
xchg
sbb
rorb
test
dec
int3
dec
movsb
repnz
sbb
insb
pop
cmc
add
mov
aam
push
repnz
push
aas
or
sub
lods
lods
lock
je
cmc
jae
adc
shll
sbb
mov
inc
mov
add
shl
insl
xor
daa
in
aaa
bound
dec
lock
mov
mov
inc
fcompl
sbb
push
xchg
cmpsb
scas
jno
das
test
imul
add
arpl
sar
scas
and
and
out
push
and
stos
jb
jb
ja
sub
cmp
pop
mov
or
push
sbbl
cmp
adc
dec
adc
imul
hlt
paddsb
mov
lods
incl
jne
mov
mov
ja
rcl
jl
mov
fs
mov
enter
insb
loopne
fbstp
pop
aad
jl
aam
fwait
sub
mov
xor
mov
pusha
mov
fsts
icebp
pusha
addb
mov
cs
cmp
or
xor
lahf
mov
clc
test
pop
jbe
and
dec
ret
mov
loopne
xchg
nop
inc
iret
xchg
xor
pop
dec
mov
fisubrs
hlt
cltd
push
lea
push
in
lret
sbb
cwtl
cwtl
add
mov
icebp
cmp
or
xor
pop
mov
inc
xor
fimull
mov
add
inc
push
pop
int
mov
mov
es
sti
cmpsb
icebp
ss
pop
xor
push
jbe
mov
dec
fisttpll
mov
daa
xchg
cmpsb
ficomps
mulb
add
sub
xchg
test
adc
data16
insl
imul
mov
push
push
dec
push
cld
xor
call
test
nop
scas
dec
stc
xor
nop
pop
jne
dec
clc
fwait
dec
inc
sub
jg
push
push
mov
bound
dec
pop
or
leave
pushf
push
stos
rol
dec
sub
cmp
je
mov
mov
inc
lea
or
cmp
cmc
iret
push
pop
sub
push
lods
cmp
add
gs
movsb
adc
lret
ficompl
pop
decb
sub
out
jae
cmpsl
add
xchg
and
aaa
push
push
push
lahf
lahf
and
inc
adc
pusha
inc
push
sahf
mov
in
xchg
ficoms
push
adc
jge
scas
adc
jmp
lret
sub
lahf
dec
and
and
xchg
add
aaa
je
adc
adc
jp
leave
popl
cmp
and
movsb
jns
cs
push
in
lcall
cli
je
incb
dec
mov
mov
test
ljmp
pop
jmp
or
and
imul
sbb
cmp
cltd
mov
cs
inc
push
stos
jne
sbb
mov
push
push
mov
inc
stos
push
mov
xchg
and
add
mov
xchg
inc
cmp
add
test
jl
inc
ja
repz
outsl
sbb
aam
adc
jne
xchg
mov
dec
fs
lret
xchg
lods
notl
pop
fsts
mov
test
mov
and
jp
push
pop
subl
pop
xchg
call
sbb
repz
ja
cwtl
stos
push
pusha
xchg
cwtl
xor
mov
xor
out
or
iret
hlt
mov
lock
lret
and
inc
lret
gs
mov
aaa
scas
insl
and
push
arpl
mov
clc
in
mov
sub
xchg
xchg
aam
inc
mov
mov
dec
jbe
sub
iret
cli
add
jecxz
mov
jae
jl
sysret
and
les
mov
scas
test
xor
int3
xchg
pop
sbb
ss
jmp
xchg
es
fsubr
mov
lcall
out
lcall
mov
mov
dec
jg
iret
xchg
cs
cmp
xor
adc
fdiv
mov
das
dec
push
xor
pmaxub
test
test
mov
mov
fwait
repz
dec
cld
inc
ss
lock
fs
lea
dec
jne
mov
jl
dec
leave
push
out
pop
push
inc
out
or
nop
push
xlat
adc
adc
leave
test
shlb
or
sahf
shrl
faddl
aas
xor
imul
xchg
mov
mov
or
loope
pop
xor
jno
outsb
ds
sub
jnp
dec
push
adc
mov
xchg
xchg
in
lret
lea
out
jg
fstpt
jb
or
inc
add
nop
mov
aam
aam
data16
pop
popa
decb
sub
js
mov
pop
jnp,pt
stos
dec
mov
xchg
stc
dec
mov
inc
scas
sbb
loope
int3
jae
xchg
sbb
in
pop
loopne
pop
aaa
jae
xlat
adc
or
dec
adc
insb
xchg
and
ja
pusha
mov
mov
adc
push
dec
int3
mov
ffreep
or
test
imul
sub
push
add
clc
dec
inc
cli
inc
cmp
and
sub
fwait
add
cmp
sti
mov
lret
xor
mul
shrb
mov
rolb
les
pop
idivb
cmp
mov
lcall
inc
mov
mov
lea
bound
mov
sub
adc
in
dec
push
ret
fwait
lahf
xor
in
xchg
inc
mov
rolb
jmp
pop
sub
mov
cmp
in
sub
int
stos
rcr
fs
jecxz
and
in
push
mov
push
mov
addl
and
sbb
push
cwtl
or
stos
rcrb
mov
orl
cmc
movsl
rclb
sbb
xor
lcall
aad
inc
pop
mov
mov
mov
sub
pop
pop
push
sbb
shl
sub
int3
or
xchg
out
fmul
shl
jle
repnz
sub
jb
lock
pop
jae
dec
lret
ljmp
add
mov
outsb
fs
bound
addr16
cmpsb
fisubrl
repz
xlat
adc
mov
mov
xchg
inc
fwait
sahf
or
mov
filds
mov
out
ljmp
fisubs
mov
inc
int
xlat
sbb
aad
popa
lret
and
std
lcall
rol
cltd
popf
add
and
clc
rcl
loopne
or
dec
repnz
xchg
xchg
inc
pusha
test
sbb
xor
mov
mov
and
jmp
mov
xor
imul
jnp
push
lock
lret
out
test
mov
addb
mov
mov
adc
xchg
dec
mov
addl
dec
addb
in
pop
fadd
mov
ss
les
pop
insb
add
dec
inc
out
push
inc
outsb
mov
cmp
daa
mov
mov
xor
lods
pop
dec
stos
xor
adc
or
out
xchg
fcoml
test
ret
int3
sub
sub
jnp
xchg
jbe
xor
repnz
out
jae
xor
fwait
std
xchg
call
lret
outsb
movsb
and
pop
add
xchg
mov
adc
or
xchg
sub
xor
add
xchg
jmp
xor
hlt
pop
lret
andb
repz
out
cmpsl
ljmp
adc
pop
icebp
mov
jmp
push
cmp
sahf
cmpsl
movq
mov
sbb
call
inc
and
in
add
js
mov
dec
ljmp
jp
xchg
pop
in
sarl
pop
fsts
addb
xchg
and
mov
add
shrl
push
daa
xor
mov
call
loope
mov
mov
outsb
adcl
lods
mov
jb
lock
xor
mov
jmp
jns
arpl
push
pop
push
out
fcomp
int3
icebp
dec
jne
in
andb
cli
popa
cltd
pusha
pop
inc
push
out
push
adc
ja
rcll
fcom
dec
jmp
dec
punpckhwd
shl
mov
xor
cmc
cwtl
pop
shll
dec
lds
cmp
push
movsl
xchg
cmp
ret
jns
xchg
push
and
fcomps
push
js
mov
test
psrld
pop
xor
push
addl
cmp
sahf
dec
push
push
add
or
pop
ffree
mov
inc
fnstsw
pop
and
adc
sahf
add
inc
adc
arpl
add
jae
adc
push
aam
fcomps
in
jbe
jno
cmp
es
iret
push
ljmp
out
imul
and
sbb
dec
sbb
xchg
int3
insl
xchg
mov
cmc
das
icebp
jle
pop
xchg
roll
xor
enter
stos
into
and
push
mov
adc
aam
fwait
mov
and
mull
aaa
jge
push
mov
adc
fmuls
mov
mov
fs
xor
mov
push
out
jns
repnz
test
inc
and
dec
lds
and
jbe
dec
pushf
lahf
cmc
push
ror
fldl
xchg
inc
adc
repz
xor
cltd
mov
icebp
mov
mov
push
cwtl
adc
add
and
adc
clc
aad
push
lods
add
shll
inc
push
enter
mov
xor
cmpsl
std
shll
adc
roll
mov
out
push
push
xor
movsl
jne
insb
mov
cmpsb
sub
arpl
xor
cmpsb
cmp
jns
sub
pop
push
sahf
es
pop
gs
out
sti
dec
aad
jecxz
daa
mov
fistpl
xchg
pop
inc
cld
dec
dec
or
loop
popf
aas
test
mov
mov
loop
xchg
loope
sbb
xor
mov
jg
hlt
add
call
sbb
sub
das
testl
add
xor
sbbl
cmp
jno
mov
fcoms
ficoms
and
jle
sahf
aas
dec
sti
std
sbb
iret
imul
loop
loop
sub
sahf
pop
leave
and
jb
add
xor
mov
xor
cmp
mov
pop
arpl
out
es
mov
arpl
pop
jns
cmpsl
cs
mul
mov
sbb
jo
sub
inc
cltd
jns
out
adc
insl
dec
shrl
pushf
mov
les
iret
add
and
pop
xor
fildl
mov
lods
stc
hlt
mov
adc
jb
xchg
bound
cltd
push
ret
add
sbb
sti
pusha
mov
insl
cli
lea
sbb
es
aas
repz
fstpl
sbb
mov
inc
cltd
push
pop
popa
mov
pop
xchg
jns
xchg
mov
lods
adc
push
pop
inc
sub
dec
push
jecxz
shll
scas
xchg
and
pop
jp
jno
and
dec
cwtl
sub
sub
xor
fs
xchg
mov
add
push
stos
mov
mov
outsb
jbe
inc
xor
test
addr16
shll
insl
lea
mov
sub
add
and
filds
add
shr
lret
fnstsw
das
pop
sub
mov
das
or
mov
mov
fstpt
ss
imul
pop
push
bound
mov
sbbl
or
sarb
rcrl
mov
and
dec
lods
sub
das
fwait
pop
mov
je
push
movsb
and
mov
inc
jp
movsl
mov
iret
lahf
xor
adcl
jae
scas
jle
mov
add
sbb
xlat
xchg
adc
add
test
jge
pop
jp
mov
sub
or
adc
sbb
xor
fsts
aad
in
push
cmp
push
push
push
xchg
push
dec
icebp
mov
imul
and
adc
dec
mov
push
cld
mov
mov
rcl
loopne
imul
enter
out
xlat
stc
push
dec
daa
addr16
fcoms
adc
jle,pn
out
push
jb
xor
stos
inc
imul
stos
cmp
shll
or
movsl
stos
xchg
popf
xchg
stos
addr16
inc
or
mov
pop
mov
aas
or
stc
mov
mov
mov
pop
push
icebp
and
inc
mov
mov
and
jo
out
add
decl
sub
mov
in
or
xor
aaa
push
call
loope
jno
and
cmp
adc
sub
and
clc
jge
enter
jp
mov
push
inc
fsubs
sub
pop
mov
sbb
inc
adc
mov
xchg
in
mov
xor
fidivrl
arpl
xchg
fnstenv
movsl
fcoml
inc
add
aad
xchg
lds
rcll
lods
je
push
push
push
pop
pop
push
lahf
jae
inc
cmp
scas
aam
shll
dec
out
pcmpeqd
mov
add
bnd
jb
xor
sub
imul
add
stc
inc
ljmp
das
leave
or
std
inc
cmp
cmpsl
adc
cmp
sub
jl
fstpt
mov
divps
pop
subl
xchg
test
mov
cmp
mov
std
cs
ljmp
out
adc
gs
cmp
es
test
iret
and
pop
sahf
test
dec
pushl
jge
popa
cli
iret
clc
mov
dec
xchg
jae
cmp
dec
sub
mov
push
icebp
in
xor
outsl
xlat
push
xchg
adc
sub
out
imulb
repz
cmp
daa
daa
mov
xchg
pop
or
inc
je
adc
lock
gs
sub
xchg
js
pop
push
mov
arpl
aam
fdivp
in
fsub
loope
ret
push
inc
jne
mov
outsl
mov
xorb
mov
negl
testl
push
stos
adc
cs
imul
les
fdivl
les
gs
pop
nop
push
stos
and
inc
push
mov
in
pushf
inc
mov
andb
cmp
and
leave
imull
sti
push
insb
mov
into
xchg
fs
push
sahf
add
jge
push
sti
orb
push
xchg
clc
hlt
push
imul
mov
dec
sti
or
shll
repz
cwtl
lods
mull
push
sub
sbb
and
pop
jecxz
xor
loopne
dec
jns
inc
mov
rolb
cmp
jno
rorl
adc
jns
jmp
sbb
or
mov
roll
lahf
or
sahf
fidivs
cmpsl
and
fbstp
cmovae
push
mov
jo
jl
adc
adc
sbb
data16
adc
stc
mov
insl
cmpsl
jmp
test
adc
int
dec
adc
lods
push
cmpsl
jne
sub
pop
arpl
loopne
fwait
shlb
add
ret
subl
pop
add
dec
xor
lds
in
repnz
fcmovbe
sti
rcrb
cli
inc
mov
lret
es
mov
popf
xor
int
jp
push
jecxz
pop
fadds
mov
or
nop
imulb
imul
jns
testl
sub
in
leave
push
or
lcall
jge
pop
popf
inc
mov
std
mov
stos
dec
mov
mov
xchg
jne
data16
sbb
sti
jp
pop
loope
add
lahf
adc
neg
add
jne
loope
fsts
xchg
int
leave
adc
lock
xor
push
fldl
loop
ja
xchg
jl
movsl
adc
lds
push
adc
hlt
cmpsb
daa
mov
dec
ss
add
push
push
lock
inc
fwait
test
aas
lret
fsubs
stos
mov
jecxz
push
sub
ljmp
pop
mov
dec
jle
sahf
and
adc
in
test
jo
mov
je
fstps
adc
dec
xor
dec
dec
mov
or
ror
sbb
fisubrs
mov
imul
push
mov
jge
cmp
adc
pop
or
cmp
sub
rolb
mov
inc
fs
sub
jge
mov
cwtl
dec
cmp
jl
sub
clc
out
je
divl
andb
ss
xor
lods
fldt
mov
mov
mov
pop
mov
ret
mov
push
jle
pop
mov
sbb
addr16
xor
aad
sti
loopne
pop
adc
push
mov
mov
jl
mov
inc
cmp
adc
fcoml
sub
cli
iret
cmp
cmpsl
mul
in
jp
iret
pop
cli
bound
repnz
jb
das
inc
movsl
lcall
test
pop
jbe
dec
and
jp
xor
add
outsl
add
and
out
cmp
and
dec
je
push
sub
flds
xorl
and
in
imul
or
sub
ja
cmp
pop
sti
jns
xchg
rclb
push
iret
sbb
loopne
sub
xor
mov
je
sbb
lea
outsb
xchg
iret
hlt
pop
xchg
addr16
enter
cmc
enter
push
cmp
dec
repnz
test
arpl
outsb
push
jl
or
push
xchg
stos
std
ljmp
sub
sub
pop
cwtl
lea
push
jle
sbb
insl
lcall
int3
lahf
adc
inc
frstor
cltd
test
and
xor
into
xor
mov
pop
lcall
mov
push
or
out
out
dec
xlat
fidivrs
mov
dec
movsl
mov
outsb
jb
xchg
push
mov
xor
ljmp
or
and
mov
test
push
dec
dec
aaa
mov
test
or
pop
cwtl
pop
sti
sub
xor
scas
test
adc
sub
jns
cmp
sub
popa
leave
cmp
push
bound
rclb
mov
movsl
adc
pop
push
sahf
das
inc
lods
iret
push
ss
adc
inc
call
std
imul
shll
test
sbb
adc
or
rcll
mov
or
sub
inc
cli
mov
push
js
dec
mov
jl
pop
cmp
inc
mov
sub
sub
pop
sbbb
push
mov
es
inc
js
mov
out
rep
xchg
rolb
or
xchg
das
fs
data16
mov
push
adc
ret
dec
or
pop
sahf
std
lock
inc
movsl
xchg
jbe
and
repz
shr
push
jae
cmp
out
add
lods
outsl
loopne
mov
out
imul
and
jb
push
dec
mov
ret
pop
cwtl
fnstcw
into
inc
cwtl
add
mov
imul
sub
out
mov
or
scas
jne
into
sarb
andb
scas
popa
mov
out
cltd
mov
push
movsl
loope
push
loop
inc
mov
mov
mov
out
push
xchg
cmp
dec
dec
mov
xlat
push
mov
je
sbb
xchg
and
div
jg
add
xchg
shrb
mov
mov
loopne
scas
pop
sbb
adc
mov
mov
mov
ja
or
xchg
push
mov
push
mov
push
pop
xchg
fcompl
fdivl
lret
aad
sub
push
cmp
sub
aad
push
aas
jmp
addr16
pop
mov
ljmp
imul
mov
int3
jg
and
adc
test
xchg
aaa
mov
mov
es
jbe
mov
aam
pop
adc
cltd
add
sbb
pop
push
std
push
mov
dec
mov
insb
add
fstpl
outsl
jmp
mov
shll
test
xchg
daa
gs
jle
nop
call
jge
mov
pop
push
mov
sub
inc
ret
mov
outsb
xchg
jecxz
cmc
xlat
gs
mov
cmp
movsb
push
ret
adc
push
in
aaa
fnsave
mov
or
mov
add
xchg
stos
xor
push
test
cmp
sbb
cmp
dec
in
repz
aad
stos
into
mov
adc
pop
cmp
dec
lods
cwtl
mov
fsubl
rol
cmp
test
add
in
push
rcrb
jb
lcall
and
or
xchg
jae
mov
mov
mov
pop
xchg
or
jb
xchg
lret
inc
lock
push
stos
add
out
jae
hlt
pushf
push
testl
lret
mov
sti
insl
and
pushf
js
xlat
jne
push
jo
and
add
mov
push
xorl
scas
sub
imulb
or
lcall
xchg
pop
cmc
jno
mov
dec
jp
inc
xchg
pop
stos
imul
lods
mov
insb
cwtl
or
frstor
fsub
add
xorl
adc
mov
pusha
lahf
mov
cmovg
or
cmp
into
dec
jmp
or
pop
loope
insl
cli
pop
in
mov
dec
insl
dec
arpl
imul
in
push
pusha
arpl
pop
clc
push
dec
mov
inc
insb
pop
xor
arpl
lds
inc
movsl
mov
and
sarb
cltd
cmp
mov
gs
and
pop
xchg
push
and
jno
ljmp
xor
sbb
xchg
mov
test
or
lcall
adc
jl
lods
ja
jmp
mov
pusha
mov
lods
push
push
mov
aaa
fwait
or
ror
cs
cltd
push
stos
repnz
imul
inc
lock
mov
cmp
pop
dec
and
loopne
ficoms
cwtl
leave
fmull
and
and
imul
dec
arpl
push
jg
mov
mov
shrl
jae
sbb
jg
mov
loope
out
das
adc
xchg
fidivs
shr
fstl
xlat
lea
outsb
push
push
arpl
sub
jns
mov
jne
cmpsl
sbb
cmp
sbb
xchg
outsl
in
bound
mov
leave
push
insb
rcrl
dec
adc
dec
xchg
pop
mov
or
pop
ljmp
xor
push
mov
cltd
fmull
sti
mov
mov
dec
inc
test
dec
inc
lahf
int
ss
cwtl
movsb
shlb
aam
cmpsl
jae
mov
out
xor
pop
xchg
lods
adc
inc
jns
xchg
popf
dec
lret
jp
push
mov
push
mov
fisubrl
loope
sub
adc
ds
inc
or
inc
cwtl
hlt
cmp
add
push
popf
pop
push
movsl
add
lods
rol
lock
outsb
jnp
int
jge
jo
sbb
push
mov
dec
inc
push
das
adc
and
push
test
sbb
add
cli
mov
cmp
pop
insl
arpl
scas
inc
pusha
iret
xor
mov
mov
mov
fucom
outsb
sbb
loope
bound
mov
ds
rolb
loop
cmp
cmpsb
jmp
es
pop
cmpsb
aam
cmp
pusha
scas
cmpsl
and
enter
cmpsl
lods
adc
mov
mov
pop
fwait
dec
adc
jne
mov
lods
insb
gs
daa
aam
xchg
or
mov
stos
or
adc
test
out
fcomps
notb
adc
lods
lods
and
stos
movsl
jg
pop
jns
or
dec
xchg
fnsave
push
jb
push
aaa
mov
aad
ss
xchg
cmp
jno
and
xor
rcll
pop
add
imul
sti
cmc
test
xchg
mov
xchg
test
xor
mov
jmp
divl
pop
je
gs
ja
inc
dec
lock
inc
dec
adc
add
mov
mov
test
into
jl
cmp
xor
imulb
aaa
mov
mov
jbe
jns
inc
mov
mov
mov
lea
mov
mov
loopne
lods
sub
das
mov
outsb
call
jo
bound
scas
popf
mov
repz
adc
jne
lea
jecxz
mov
loop
sarl
adc
lret
aad
sbb
loopne
push
movsb
cmp
pop
lds
adc
fists
adc
push
cmpsb
mov
inc
ljmp
out
inc
in
js
aad
stos
leave
mov
ret
lods
imulb
push
scas
push
mov
scas
add
cld
xor
add
sbb
sub
stc
stc
test
xchg
outsl
gs
es
out
cmc
shrl
mov
sbb
xchg
andnps
out
jns
mov
and
cli
jnp
fistpl
mov
fisubs
aas
fs
test
xor
mov
mov
push
out
fwait
push
sar
xlat
push
jmp
fdivrl
mov
shl
divb
or
adc
and
ss
mov
adc
jge
mov
jmp
aaa
insb
arpl
into
lea
adc
rcr
sub
pop
add
xchg
push
jmp
xor
scas
in
inc
hlt
mov
and
aas
xchg
adc
icebp
mov
sahf
scas
hlt
mov
lahf
push
cltd
bound
dec
sub
inc
insl
dec
in
insl
and
inc
mov
mov
jne
rorb
adc
mov
jl
out
rol
or
inc
jo
adc
icebp
or
imul
sub
mov
push
or
mov
pop
mov
push
int
ror
adc
adc
add
jge
dec
mov
js
push
sub
sbb
movzbl
jno
add
adc
dec
daa
jo
ret
out
dec
jne
sub
in
sbb
adcl
push
dec
enter
notl
test
scas
clc
shrb
mov
pop
jne
or
mov
idivb
cmp
jbe
jge
xchg
imul
imul
cmpsl
and
jp
fs
pop
lahf
jle
fs
add
lock
mov
cmp
outsl
mov
xor
jecxz
test
fidivrs
aam
les
fnstsw
push
jo
icebp
push
repz
xor
shrb
sbb
mov
sbb
inc
inc
pop
pop
lret
pushf
into
inc
jmp
mov
xchg
xchg
gs
jae
loopne
or
stos
mov
popa
mov
outsb
dec
adc
add
fcoml
xchg
flds
dec
xor
jmp
jb
jno
iret
roll
loopw
sub
jmp
shrb
jecxz
xor
sbb
bound
js
loop
mov
mov
push
mov
lods
mov
cs
push
popf
inc
mov
mov
jp
icebp
sbbb
ret
outsl
fisttps
not
xchg
and
lret
mov
rcll
ret
pop
sub
in
cld
les
das
dec
cmp
dec
ljmp
cli
cmpsb
pop
es
pusha
inc
inc
mov
adc
mov
inc
mov
sbb
test
rclb
mov
dec
ss
insl
adc
dec
ja
mov
push
pop
mov
in
ja
push
cmp
sti
mov
into
dec
test
xlat
pop
and
inc
push
cmp
and
xchg
adc
xchg
jp
mov
loope
lods
mov
test
jnp
pop
rorl
loopne
cli
je
lret
mov
popf
mov
sbb
out
pop
shrl
sub
sbbb
sahf
xchg
or
mov
aas
out
mov
xchg
inc
xor
dec
sbb
arpl
dec
out
pop
xchg
pop
test
ret
ds
incb
nop
scas
mov
negl
aaa
lds
aas
cmc
mov
and
loop
sbb
sub
popf
jp
push
inc
fsubl
lds
jecxz
jp
lds
xchg
lods
add
sub
jno
push
int3
sbb
mov
and
shl
frstor
cmpb
adc
hlt
sub
push
push
jnp
loope
and
xchg
aam
pop
inc
insb
sti
in
jnp
jno
nop
sbb
mov
dec
xchg
aam
pop
dec
jno
out
jle
adc
outsl
add
add
sbb
rcrb
sub
dec
nop
mov
imul
lret
xchg
fmul
push
jbe
xor
mov
inc
popa
in
mov
dec
sti
mov
or
bswap
lds
addr16
sbb
orb
pushf
nop
push
mov
inc
adc
lahf
mov
das
inc
mov
push
fnsave
hlt
pushf
data16
popa
sub
fbld
mov
sbb
push
out
stos
les
dec
out
xchg
aam
lea
popa
mov
jecxz
inc
and
jne
mov
iret
mov
loopne
lock
cmpsl
mov
repnz
jae
sub
cmp
pop
lret
aad
in
push
shlb
push
into
mov
jno
cmpsb
sub
pop
sbb
clc
mov
imul
aad
fs
ret
pop
popa
mov
bound
stos
fs
xorl
pop
sbb
add
ljmp
mov
xor
gs
mov
cmp
push
sbb
cmp
dec
jb
dec
xchg
push
loope
mov
mov
ret
cld
ss
mov
mov
jge
insl
rcr
ret
popf
and
xor
mov
mov
mov
int
pop
adc
in
mov
pusha
lods
inc
xchg
jmp
xor
lock
outsl
inc
fnsave
jae
or
add
or
rolb
ds
adc
aaa
sarl
and
jnp
bound
outsb
sub
sub
rcrl
adc
xchg
imul
jo
test
mov
repnz
hlt
jmp
dec
mov
mov
dec
adcl
pop
std
mov
pop
jg
pushf
cmpsb
mov
cmpsl
or
xor
imull
mov
push
push
test
scas
pop
nop
adc
mov
and
ljmp
jmp
fiadds
pop
adc
push
xlat
faddp
nop
insl
test
loopne
or
xor
xor
push
mov
xor
std
icebp
int
in
testl
pop
push
cmc
aad
and
in
sahf
lods
mov
imul
mov
cmp
imul
ret
xor
test
xchg
arpl
cmc
pop
cmp
stc
rcrb
jmp
cmp
or
dec
loope
dec
lock
add
imul
in
in
dec
jae
and
mov
sbb
xchg
push
addl
push
movsl
jl
push
stc
sub
cmovo
push
cmp
mov
xchg
dec
xor
and
shlb
push
pop
cmc
popa
pop
enter
sub
inc
shlb
jns
pop
add
clc
sar
jb
xor
and
sarb
jp
pushf
aad
mov
sbb
cmp
and
xlat
sbb
enter
push
lods
stos
sub
arpl
insl
shll
mov
mov
dec
or
xchg
aad
loopne
jne
scas
inc
jmp
scas
add
insl
aam
sub
and
mov
inc
jo
cmpsl
outsw
pop
out
lcall
pushf
adc
js
cmp
jge
iret
loop
sub
sub
inc
and
mov
mov
enter
in
add
cmp
rcr
or
mov
sub
push
imulb
xchg
add
ret
ds
sbb
aas
inc
push
add
add
and
ret
xor
aad
cmp
sub
or
dec
dec
jg
jl
xchg
push
les
pop
xchg
outsb
seta
or
sbb
or
test
daa
shll
out
and
inc
and
jl
lods
loope
mov
daa
divb
sub
lods
out
or
xor
ds
enter
push
inc
sarb
inc
les
dec
enter
stos
mov
out
jl
aad
bound
iret
push
out
setl
sub
cmp
mov
mov
ret
nop
sahf
xor
les
pop
jne
push
add
enter
hlt
and
add
lds
jbe
xor
pop
or
sarl
inc
xchg
lock
push
outsb
fs
movsl
jnp
xlat
cmp
mov
dec
rclb
call
loope
push
hlt
je
or
pop
xchg
rol
insb
imul
ja
fsubl
cltd
pop
push
das
mov
aaa
pop
out
xchg
sub
adc
dec
repz
and
seta
mov
mov
les
sbb
int
lret
pop
inc
stos
and
ss
jae
xor
push
pop
stc
les
mov
push
jle
sub
bound
jge
ud0
jp
loope
jne
push
add
dec
outsl
call
dec
or
test
jne
daa
xor
mov
pop
add
cmp
imul
jge
dec
pop
scas
xchg
cmc
mov
or
aam
js
mov
xchg
lock
aad
loope
hlt
mov
push
mov
cmc
sub
cwtl
pop
out
leave
pop
pop
in
ss
shl
ficoms
sbb
out
outsb
push
cmp
push
push
inc
popf
int3
fildl
cwtl
testl
xor
cmp
sub
xchg
mov
sti
and
aam
jno
xlat
int3
dec
cmp
add
das
loope
xlat
mov
lods
sub
rcll
leave
outsl
xor
and
jl
mov
das
push
fs
adc
adc
mov
sub
inc
shrb
dec
popa
nop
in
stos
inc
ljmp
cld
push
xchg
das
loopne
insl
push
jno
jecxz
and
jmp
jb
testl
inc
sbb
sarl
push
push
shlb
in
xor
aas
xor
lahf
int
jle
pop
lea
pop
loop
popa
aad
pop
loope
or
stos
test
or
test
push
xchg
lds
mov
mov
lahf
fwait
js
mov
mov
ljmp
fcmovbe
push
jo
shlb
hlt
jne
xor
out
inc
dec
xor
std
or
inc
xor
in
rcrl
dec
xchg
push
adc
or
ficomps
iret
repnz
das
dec
adc
or
es
sbb
mov
dec
add
mov
mov
push
xor
pop
or
inc
out
std
jns
mov
add
mov
mov
jmp
stc
arpl
mov
sbb
or
jg
rorl
mov
ljmp
and
dec
and
bound
push
mov
jecxz
sbb
adc
xchg
fwait
jae
imul
cs
push
dec
mov
or
sti
inc
xchg
shlb
pop
insb
push
imul
cmp
inc
inc
push
mov
aas
leave
pop
cmpsb
add
cltd
daa
mov
ret
pushl
fcomip
mov
add
and
int3
pop
mov
mov
xchg
add
jmp
add
adc
adcl
arpl
dec
leave
into
rol
out
mov
mov
jge
movsl
jb
lea
push
mov
jmp
jl
arpl
jb
add
iret
mov
fs
and
lock
pop
sub
dec
fdivs
lds
scas
push
push
adc
fsubrs
fidivl
out
cmp
clc
inc
push
xor
push
jns
adc
insl
inc
icebp
jb
inc
popf
lods
xchg
add
out
dec
fcmove
icebp
mov
imul
aam
pop
aad
or
or
outsb
inc
es
jns
dec
fiaddl
sbb
stos
aaa
ret
add
cmpl
pop
movsb
subl
push
mov
enter
aam
imul
jg
pop
test
lds
inc
push
ficomps
adc
loopne
cs
je
test
pop
cs
push
cmp
arpl
repnz
dec
push
xchg
jo
pop
stc
lock
loopne
pop
pop
push
push
fcomps
ss
push
iret
testl
fldenv
lret
add
dec
cli
js
sbb
pop
mov
mov
or
outsb
hlt
or
hlt
push
adc
clc
add
mov
xchg
xchg
in
xor
push
das
ret
aas
lds
cmpsl
dec
fiadds
stc
imul
inc
cmp
xchg
mov
push
mov
adc
ret
dec
xchg
insb
dec
jp
je
inc
pushf
aas
lahf
xlat
aam
jnp
enter
cmp
jge
cs
daa
in
cmp
call
ds
jno
test
stc
jp
imul
xor
fcmove
outsl
leave
xchg
cmpsb
xor
and
mov
or
mov
ljmp
sbb
xor
mov
sbb
and
stc
dec
std
mov
daa
cmpsb
jmp
push
push
sbbl
lock
int3
lahf
daa
insl
bound
sti
ficoms
loop
stc
xchg
ret
add
ret
aas
push
bound
fwait
pop
mov
xchg
sti
mov
mov
lahf
adc
jmp
dec
jmp
mov
xchg
ljmp
xor
inc
lods
add
jbe
cs
test
mov
xchg
jbe
fdivr
sub
cmpb
xchg
mov
scas
imul
std
andl
cmpsl
dec
xor
mov
jno
xor
addr16
inc
add
inc
out
dec
sub
pop
jmp
xor
dec
shrb
mov
sbb
in
rcll
test
pushf
andb
imul
fistpl
push
shll
or
aad
add
mov
lret
mov
pop
push
stos
xor
rcl
cmc
jns
sub
into
in
loopne
pop
sub
je
adc
sub
fdivl
adc
cltd
mov
xor
inc
push
shrl
push
xor
imul
dec
int
fldenv
popf
jge
mov
cmp
xchg
es
xor
and
imull
rolb
sub
scas
dec
daa
enter
mov
mov
les
push
add
pop
enter
iret
popf
js
sub
xor
xchg
fs
into
das
and
ror
aaa
cli
jecxz
nop
cs
addb
sbb
dec
push
insl
add
xchg
out
cmp
movsl
adc
push
mov
or
jno
mov
dec
je
ja
fbld
ds
ds
pop
dec
push
lcallw
icebp
ret
or
imul
notl
ljmp
xchg
daa
xor
icebp
daa
sti
shr
push
out
mov
push
mov
and
lods
lods
push
push
mov
xor
jo
jns
mov
out
shlb
jo
dec
cmp
lea
fistl
pop
icebp
fwait
mov
outsb
pop
jmp
dec
stc
in
mov
lret
pop
addb
inc
fdivl
call
dec
dec
sbb
out
add
xchg
lods
pop
je
arpl
adc
push
inc
adc
sarl
rorb
dec
mov
imul
test
sbb
adc
add
mov
mov
jne
cmp
fsin
popf
repnz
scas
int
xchg
jnp
xchg
incl
xlat
pop
nop
mov
fs
xchg
pop
or
jg
mov
mov
bound
xchg
adc
mov
mov
mov
push
sbb
out
sbb
fwait
cmp
int
ret
fyl2x
bound
fdivp
push
xor
inc
out
out
add
vmovapd
aaa
dec
push
fwait
or
gs
xor
xor
pop
sub
jns
sbb
adc
mov
int
sbbb
setnp
insl
mov
loop
rorl
pop
rorl
xchg
push
cmp
shlb
icebp
imul
push
add
adc
adc
imul
or
ret
cld
and
mov
data16
mov
mov
hlt
sub
rcll
mov
nop
popf
mov
xor
pop
addr16
sub
icebp
inc
daa
jnp
xchg
xchg
adc
add
mov
icebp
sbbl
push
in
mov
mov
sar
ret
mov
enter
pop
inc
cltd
push
mov
cmp
adc
sub
scas
mov
dec
jbe
mov
adc
outsb
cmpsl
pop
stos
push
decb
andb
dec
jnp
cmp
lds
pop
mov
stos
push
sbb
xchg
fadds
mov
outsl
sti
inc
dec
inc
lret
dec
out
adc
sbb
ds
dec
pop
dec
add
mov
in
dec
cmp
xor
mov
or
lea
fstps
push
in
std
or
dec
in
test
daa
dec
fwait
shl
insb
cmp
lahf
jbe
jae
ror
loopne
push
xchg
fldl
dec
push
ficoml
push
and
inc
add
js
shll
ffree
fs
mov
lcall
sub
dec
sbb
pusha
fdivrl
jbe
sbb
mov
push
adc
mov
dec
sub
cmp
or
sbb
mov
test
into
lea
je
addr16
iret
fists
mov
adcb
dec
dec
shll
sarb
mov
mov
dec
pop
fildll
iret
jne
notl
stc
rcll
inc
fnstenv
aam
mov
hlt
testl
insb
pop
xor
inc
dec
or
addr16
shlb
arpl
sub
rclb
add
xor
cli
mov
jmp
mov
and
pop
add
push
adcb
cmp
pop
mov
jno
loopne
cltd
je
jb
mov
pop
adc
mov
int
mov
or
mov
es
xchg
rcrb
fsubrl
rcr
and
jb
sub
mov
add
and
loope
mov
mov
jae
movsw
test
pop
dec
mov
enter
cli
addr16
jge
pop
rol
cmp
cld
fimull
and
jge
cmp
sahf
push
pop
int
push
or
test
outsl
outsl
imul
pusha
cmp
push
hlt
xchg
mov
mov
pop
add
scas
or
icebp
xchg
pop
inc
mov
xchg
stos
mov
addb
dec
data16
pop
mov
insl
dec
sub
loopne
inc
xchg
cmp
pop
cmpsb
add
lods
mov
iret
cltd
addr16
cmp
lcall
ds
movsb
into
push
xchg
repnz
fildll
scas
ret
imul
repnz
lds
daa
ficoms
not
popa
mov
pop
ret
jbe
arpl
fst
icebp
adc
mov
pop
int
scas
xlat
mov
ss
in
cmpsb
fdivl
xor
pop
nop
out
dec
ja
lret
into
inc
fcmovnu
das
xchg
xorl
mov
push
dec
lods
mov
xchg
xlat
ja
movsl
push
xor
subl
mov
xchg
jmp
mov
nopl
xor
add
push
xor
aam
es
add
das
mov
cmpsb
jecxz
inc
dec
cs
or
add
pop
push
in
jge
pop
inc
dec
xchg
sub
mov
or
mov
lods
and
jmp
xchg
int3
in
jecxz
mov
xor
cmpsl
les
jp
cmp
adc
popl
pop
imul
add
fldcw
loope
fsub
pop
jmp
dec
pop
rorb
or
or
or
pop
leave
adc
ret
mov
imul
inc
jno
cmp
or
loope
push
repz
and
push
loope
pop
jnp
push
jns
shl
rorb
aaa
push
in
adc
inc
xchg
sbb
jae
imul
jne
mov
and
fdivrs
movsl
scas
or
ret
xor
jge
addr16
push
or
loope
popf
dec
mov
xor
out
mov
sbb
fwait
je
int
adc
push
out
shlb
adc
sub
fildl
lods
jp
inc
mov
sbb
sbb
scas
pop
jl
clc
test
popf
mov
hlt
or
imul
lods
fwait
pop
push
mov
outsb
mov
in
pop
scas
ss
sbb
ljmp
pop
outsb
xor
cmp
add
xchg
lahf
imul
adc
stos
lods
lods
imul
push
or
mov
notb
loope
mov
jg
lods
pop
and
mov
es
nop
adc
clc
repnz
mov
jle
cwtl
lcall
mov
cmpsl
jecxz
adc
and
je
in
sub
jmp
jbe
mov
sbb
subl
mov
cmpsl
iret
lret
xlat
and
fwait
jns
adc
outsb
push
sbb
and
mov
mov
push
cmp
sbb
psubusw
jle
cmpsb
mov
xchg
shrl
add
jmp
adc
dec
nop
sar
push
fdivrl
jmp
inc
shlb
and
out
int
mov
adc
xor
pusha
fidivs
sbb
in
lods
xor
add
jo
popa
lds
mov
dec
pop
sqrtps
mov
xor
imul
rcll
mov
divb
push
loope
xchg
inc
xchg
aam
push
clc
or
arpl
add
pop
shlb
jbe
out
clc
inc
pusha
push
jae
cmp
push
lods
jae
clc
in
pop
sbb
cmp
movb
sub
pop
sbb
mov
mov
dec
movsl
lret
aam
in
jmp
rolb
jae
jmp
xchg
xor
xchg
jp
aas
jno
ret
pop
movsl
bnd
adc
push
std
inc
xchg
adc
fwait
test
dec
imul
or
xchg
mov
test
xchg
dec
ret
mov
mov
rcll
aam
jnp
cmp
pop
daa
push
sbb
add
xchg
xchg
lods
sub
mov
mov
xchg
push
aad
mov
xor
movsl
out
inc
mov
add
xchg
mov
push
push
nopl
shl
loop
lret
or
jmp
inc
xadd
insb
xchg
xor
int
xorl
jmp
jae
adc
adc
push
lret
jnp
or
pop
pop
jg
dec
xchg
sti
orb
fsubl
jne
in
ljmp
jnp
dec
xchg
mov
loop
mov
inc
jl
inc
push
jbe
push
pusha
cld
pop
scas
inc
imull
cmovle
inc
xchg
xchg
lods
mov
ret
mov
stos
mov
imul
jno
js
cmpsb
std
es
addr16
jnp
mov
pop
les
pop
std
jns
xchg
imul
mov
sub
push
aaa
shlb
lcall
repz
xor
mov
pop
dec
mov
cmp
push
test
sub
jmp
ljmp
bound
lods
or
sub
je
js
adc
movsb
sahf
ret
jmp
or
popa
mov
mov
dec
or
cmp
imul
cmp
inc
pop
movsb
mov
mov
jmp
xor
leave
rcll
nop
xchg
pop
mov
and
aas
xchg
push
dec
outsl
jg
dec
outsb
pop
jbe
push
mov
insl
subb
or
stos
jg
jo
mov
loopne
shrb
jb
sub
fildll
inc
cltd
push
xor
lock
lahf
loope
mov
xor
cld
adc
cmp
mov
push
repnz
in
xchg
fwait
insb
mov
or
inc
mov
popf
jge
shrb
lock
stc
clc
xchg
mov
imul
mov
sarb
les
sub
movsl
add
mov
or
aam
ljmp
mov
js
mov
inc
repz
nop
push
incl
mov
rol
dec
dec
adc
xchg
fistpl
mov
lock
jno
push
imul
pop
pop
repz
test
test
movsl
icebp
add
ror
shl
dec
popa
test
test
and
daa
mov
pop
inc
rorl
pop
jge
and
mov
loope
sub
cmp
das
imul
cmp
sbb
in
inc
ds
push
shll
xchg
ret
cs
sbb
ret
mov
and
pop
roll
jge
cmpsl
dec
sub
rorb
jae
in
stos
and
mov
or
mov
inc
lret
mov
mov
stc
adc
ret
inc
jae
dec
sub
jp
adc
and
stos
in
mov
mov
dec
stos
jo
in
cli
jbe
fisubrl
mov
scas
stos
arpl
out
cs
xlat
ret
das
jno
test
cwtl
mov
aam
sti
xchg
popa
and
adc
mov
adc
fldt
pusha
ja
adc
pop
mov
repz
add
sub
mov
bound
mov
fs
lahf
pop
scas
mov
pop
adc
mov
aas
movsb
adc
xor
lahf
and
aad
and
popf
fstl
loop
pop
bnd
pop
and
push
lods
mov
cmp
or
sarl
cmp
call
call
icebp
bnd
les
mov
mov
out
stos
rcrb
push
outsl
push
cmp
xchg
cmp
jg
jnp
mov
adcl
dec
jmp
jno
dec
loopne
lds
mov
pop
movsb
pushf
pushf
mov
mov
lods
pop
out
mov
mov
out
insl
push
cwtl
cmp
insl
or
jne
mov
shlb
jb
or
std
lea
loopne
push
test
lret
lods
mov
pushf
pop
mov
dec
js
adc
push
cmpsb
jecxz
ss
jmp
mov
push
imul
inc
push
pop
shrb
cmpsl
ret
mov
outsb
push
jbe
movsl
mov
push
cli
outsb
pop
rclb
dec
sub
in
xor
dec
loope
cld
fs
push
jge
push
daa
lds
mov
mov
fs
mov
jno
and
cli
pop
loop
aas
mov
and
adc
mov
dec
xchg
out
xor
xor
jge
loopne
dec
jno
repnz
xchg
or
out
sti
stc
cld
mov
adc
ja
arpl
cmp
push
roll
xlat
dec
or
cmp
mov
push
add
shl
data16
loope
dec
lods
add
lods
fidivl
pop
push
jl
imul
mov
pop
les
mov
mov
std
adc
lea
test
jge
or
imul
pop
lds
dec
dec
push
aaa
pop
outsl
in
add
xchg
popa
popa
push
loope
inc
stos
cmp
xchg
dec
mov
fcmovb
icebp
mov
fcmovu
lods
and
cmp
sub
cli
mov
xchg
arpl
arpl
je
push
ljmp
aad
inc
notl
mov
jnp
cmp
xor
dec
repz
add
sub
and
adc
jns
fs
negl
shrb
xor
rolb
push
stos
cs
cmp
fistps
popf
loopne
call
inc
pop
stos
add
sub
cmpb
movsb
enter
fildll
sbbl
ficoms
ss
into
int3
or
loopne
dec
dec
lahf
push
outsl
xor
add
iret
mov
mov
rcrl
push
inc
test
les
jmp
pop
call
sbb
das
inc
in
fidivrs
mov
xchg
inc
xchg
clc
xchg
xor
cmp
aaa
add
cwtl
gs
adc
sbb
pusha
ja
je
mov
mov
sbb
sub
fwait
movsl
movsl
sti
subb
jecxz
and
das
jecxz
jae
je
jg
enter
or
ret
sti
movsl
fisubs
or
inc
ja
xor
inc
and
fsubr
cmc
addr16
jb
inc
imul
or
cmpsb
or
movsl
jne
mov
mov
mov
jae
push
rcll
mov
lea
in
sub
ficoml
add
mov
lret
sqrtps
push
push
mov
add
lea
xchg
stos
cli
jg
dec
jns
in
arpl
mov
jae
jecxz
mov
add
lret
inc
xor
mov
str
dec
icebp
and
xor
and
cmp
or
push
paddd
add
pop
dec
movsl
aad
shlb
ffree
das
cld
inc
data16
mov
js
jge
dec
lea
insb
sub
mov
mov
pop
movsl
mov
les
jb
mov
cmp
scas
jbe
loopne
dec
pop
inc
mov
cwtl
pop
cwtl
push
cmp
and
mov
fiadds
jl
stos
in
cli
xor
shl
movsb
adc
xor
jmp
decl
fwait
enter
nop
call
jge
mov
dec
call
aas
andl
popl
clc
cmp
scas
jmp
xlat
ss
or
cmp
sub
cmpsl
mov
mov
push
and
fnstcw
mov
dec
movsb
arpl
push
inc
cmp
mov
cli
nop
and
cmpsl
xor
cld
xor
adc
pop
lock
fndisi(8087
mov
fcomip
or
jne
jp
dec
scas
dec
push
pusha
outsb
clc
cld
cwtl
loope
fldcw
cld
mov
test
xchg
push
add
dec
popa
dec
insl
sahf
pop
sub
shlb
inc
sahf
bound
or
out
bound
cmpb
and
pop
jge
xchg
cltd
jge
mov
jge
push
test
mov
movsb
repnz
mov
jg
mov
outsl
adc
sbb
call
shlb
andl
mov
jp
inc
pop
pop
or
xor
jbe
dec
add
cmp
iret
sub
pusha
in
or
cmp
rorl
mov
cmp
mov
lret
pop
add
inc
jae
test
stc
sbb
cmp
mov
pop
jmp
mov
stc
inc
fld
out
mov
push
xlat
sbbl
decb
out
outsl
xorl
mov
mov
pop
mov
test
dec
scas
fisubs
mov
add
ja
cmp
enter
push
and
pop
rcl
gs
addl
test
adc
bound
mov
pop
mov
adc
hlt
xchg
jmp
xor
pop
shlb
sub
mov
repz
rcl
cwtl
pusha
pop
mov
f2xm1
jno
dec
int3
insl
pop
mov
pusha
xor
or
push
outsb
pop
cmp
cmp
and
mov
mov
enter
std
push
dec
sub
mov
or
xchg
add
jge
push
dec
xlat
cwtl
scas
jl
iret
jg
cltd
aam
outsl
aad
les
push
aaa
sbb
aad
xchg
mov
cmc
cmp
or
jnp
xchg
mov
push
and
dec
testl
xchg
out
pop
dec
mov
lods
fmull
sahf
add
mov
jge
outsl
mov
dec
je
xor
pop
inc
xchg
in
cmp
xor
jmp
arpl
mov
xor
andb
test
test
mov
stos
imul
add
jl
lods
add
das
xchg
mov
ss
xchg
loop
mov
mov
test
outsl
aaa
pop
cld
mull
insl
xchg
push
jb
xor
movsl
mov
xlat
add
xchg
and
jp
cmp
inc
mov
xor
dec
or
pop
jae
push
lock
scas
cli
imul
xchg
inc
jbe
shlb
cli
fisttpll
mov
std
add
inc
push
out
fxch
ret
ud0
mov
inc
xchg
xor
or
popf
lock
popl
mov
dec
mov
sti
inc
push
and
ja
xchg
push
out
dec
mov
adc
xor
out
push
dec
pop
outsl
xchg
inc
xor
jb
push
mov
or
es
outsl
mov
mov
addl
aas
add
pop
fwait
and
adc
idivb
adc
out
jp,pn
adc
orb
outsl
xor
add
xor
aas
rcrl
dec
movsb
aad
rcrl
int
cmc
sbb
orl
lea
push
pop
and
push
dec
shll
sbb
mov
lcall
mov
and
mov
pusha
or
leave
push
data16
rol
jle
mov
out
cmp
xchg
mov
dec
or
sbb
dec
pusha
arpl
loope
mov
jns
xor
mov
hlt
incb
cli
pop
loop
imul
and
arpl
cmp
and
movsb
sahf
adc
out
sub
add
aam
cld
pop
xchg
cmp
add
xor
or
or
shl
leave
jge
or
adc
les
iret
icebp
mov
jne
es
dec
arpl
mov
mov
xor
dec
xchg
outsl
mov
jmp
and
xchg
out
sbb
jge
push
mov
lahf
xchg
mov
push
icebp
out
or
xchg
outsl
push
mov
test
inc
cltd
mov
subl
add
jno
cmpsl
in
mov
jo
cmp
mov
out
dec
pop
cltd
daa
dec
push
cs
push
add
aaa
ja
test
jae
mov
in
insb
sbb
xchg
repz
fucompp
out
out
lods
shll
sub
int
push
inc
inc
mov
inc
aaa
dec
ds
xchg
mov
std
jle
repz
inc
scas
cmp
sub
mov
into
outsl
clc
pop
dec
test
cmp
mov
inc
push
movsl
out
scas
rcrl
jno
aas
stc
addr16
mov
cltd
jo
ret
repz
movsl
data16
jo
std
in
out
insl
push
jg
push
and
push
push
fld
js
sbb
invd
xor
xchg
gs
push
fisubl
push
sub
out
add
jl
imul
jbe
or
stc
hlt
pushf
sub
sbb
jle
pop
rcr
mov
popf
xchg
clc
mov
pop
js
lret
sub
cmpsl
dec
cwtl
sub
xchg
inc
pop
adc
movsb
sub
mov
jo
and
adc
lahf
cld
jp
mov
adc
jl
adc
into
popa
pop
lcall
lret
imul
shl
lahf
repnz
mov
pop
fwait
sahf
jae
test
mov
mov
jg
dec
inc
fsubs
out
push
xor
push
add
inc
bound
adc
add
sbb
and
out
test
xchg
add
pop
xchg
or
push
xchg
les
imul
cmp
inc
push
nop
pop
test
add
out
push
cli
xlat
mov
add
fcomi
lods
stos
cmp
pop
and
pushf
call
lea
loopne
inc
cs
roll
adc
cvtdq2ps
and
lea
out
jns
lock
mov
xor
je
scas
adc
mull
sbb
fisubs
das
aad
int3
sbb
mov
push
mov
sbb
incb
or
lods
stos
call
std
xchg
adc
mov
decb
xchg
fimuls
mov
or
mov
cmp
cmp
call
addr16
push
loopne
ret
out
int3
cmp
mov
call
out
xor
stos
lods
push
pop
xchg
sub
arpl
mov
xchg
movsb
lods
cmp
stos
lods
sbb
add
dec
jo
shll
jns
shl
push
cmp
sahf
in
or
nop
mov
add
popa
lcall
pushf
leave
cmp
aaa
sub
xor
mov
outsb
cmp
inc
cmp
scas
cmp
jmp
lods
mov
sub
xchg
gs
xor
fcoml
filds
and
xchg
jge
cmpsb
outsl
xchg
outsl
jecxz
fwait
push
insb
sbb
leave
and
and
sbb
xor
mov
jne
push
pop
fdivl
addr16
mov
xor
add
mov
leave
test
out
icebp
test
lret
inc
mov
pop
jb
les
push
dec
les
xchg
aaa
lds
sbb
push
push
mov
xchg
in
jns
out
push
out
call
test
jnp
add
sub
sub
push
xor
outsl
ret
nop
nop
jg
or
hlt
je
in
gs
int3
push
pop
std
mov
mov
adc
push
pop
cmpsl
mov
inc
mov
stos
in
call
pop
add
fnstenv
push
test
aas
cwtl
scas
pop
cmp
sbb
filds
add
mul
sub
ret
in
mov
ljmp
inc
lahf
repnz
xchg
sub
lock
jl
xchg
arpl
lds
insb
xchg
in
mov
mov
dec
pop
dec
dec
enter
jmp
xor
inc
int3
fwait
stos
ret
fidivrs
or
add
xchg
xchg
adc
and
sub
arpl
jmp
call
ret
or
lock
fcoms
sub
incb
jle
aas
ret
js
bound
arpl
decb
fs
ljmp
adc
or
clc
ret
xchg
xor
pop
xchg
test
mov
xchg
in
xor
cwtl
sub
adc
push
sub
fistpll
cs
ret
add
dec
in
xlat
les
jp
and
daa
lret
add
cmc
sub
repz
jge
or
in
ljmp
scas
sbb
pop
mov
mov
mov
cmp
or
jno
mov
xor
push
jo
movsl
pop
sbb
aas
ja
jne
mov
enter
std
mov
mov
imul
lds
cmp
ds
and
xchg
jmp
jmp
aam
dec
les
ss
xor
rorb
jne
les
xor
dec
nop
jmp
jb
aaa
xchg
outsb
and
cmp
cmp
es
mov
mov
int3
lcall
xor
mov
xchg
mov
push
add
mov
xchg
sbb
testl
cwtl
rcl
push
in
pop
lahf
loop
sbb
push
mov
pop
lret
scas
mov
in
mov
cld
sbb
stc
jg
push
cmp
nop
pop
sahf
mov
test
and
repnz
mov
insb
cmpsb
xor
jl
jp
cwtl
cmp
popf
jg
call
lds
fs
in
roll
rcll
ss
clc
xor
xchg
mov
add
cwtl
dec
pop
inc
push
xchg
es
lock
or
lret
add
mov
nop
or
xchg
insl
add
cmc
pop
push
jae
push
jbe
add
jno
cmpsb
addr16
lret
xchg
sti
cmp
sbb
cmp
ficoms
and
cmp
out
cs
adc
int3
sbbb
jle
fistps
add
mov
and
in
leave
out
dec
and
les
mull
mov
int3
mov
adc
aaa
pop
sub
mov
add
fiaddl
cmp
sahf
das
jle
jns
movsl
lret
std
push
mov
sub
and
add
lret
cwtl
ret
pushf
pop
dec
aam
inc
std
inc
cmovle
arpl
imul
jo
lret
cwtl
xorb
mov
cld
cmp
cmp
stos
into
fldl
nop
ja
jns
xor
sbb
push
push
cmp
sub
jns
loopne
clc
loop
leave
cld
or
arpl
andl
sub
mov
dec
or
and
jno
lret
dec
jmp
mov
arpl
cmp
push
lock
jl
sbb
popa
test
jae
mov
dec
repnz
divb
mov
mov
mov
das
adc
ret
insl
shll
ret
ficoml
push
stc
ret
mov
mov
ja
cmc
scas
loop
pop
data16
and
xchg
aaa
lahf
sbb
test
push
test
rolb
push
dec
ss
dec
dec
jg
pushf
pop
cmp
pusha
or
insl
mov
outsb
push
push
clc
pop
dec
lods
jns
push
xlat
sbb
jp
jmp
leave
in
lds
add
mov
mul
stos
xor
inc
sub
stc
adc
sbb
jge
xor
push
cmpsb
pop
popl
gs
out
cmp
fnstenv
loope
mov
pop
mov
mov
pop
add
sub
mov
inc
jae
call
out
inc
out
pop
imul
adc
xchg
int
adc
xorb
inc
push
movsb
dec
cmpsl
sbb
pop
or
fs
cmp
bound
mov
mov
push
stos
sbb
pop
lods
lahf
test
mov
jne
pop
in
cmpsb
mov
idivb
push
push
xchg
mov
aaa
out
sbb
pop
xchg
inc
mov
fucomp
std
inc
inc
and
xlat
fmuls
enter
cmpsl
pop
pop
inc
push
fxch
pop
outsb
cmpsl
mov
xchg
push
js
add
in
lods
mov
push
jnp
xlat
movsl
cmp
movsl
jmp
stos
loopne
orl
in
scas
daa
leave
flds
pop
sbb
in
hlt
cmp
mov
sub
inc
xor
imul
pop
jge
aaa
xor
dec
loop
popf
icebp
cs
lahf
xchg
xor
mov
xor
sub
int3
mov
int3
lretw
scas
lahf
mov
sbb
push
leave
clc
cmpsl
stos
ret
push
negb
les
cwtl
jns
ja
lret
stc
out
les
jbe
xchg
xor
mov
xor
dec
adc
ror
xchg
fnsave
stos
and
inc
gs
push
movsl
mov
inc
lods
xor
mov
or
sub
inc
cmp
ret
aam
dec
or
push
jno
add
outsb
mov
lcall
pop
mov
jl
lds
ret
sbb
mov
nop
add
movsb
push
stc
stos
je
dec
into
ja
add
imul
fwait
lods
mov
or
loopne
repnz
or
or
xor
fcoms
sti
ss
popf
add
test
push
push
lds
push
xchg
inc
lea
lcall
cmp
int3
inc
dec
in
mov
lea
idiv
fwait
rcl
mov
push
mov
stos
push
pop
and
sbb
test
dec
test
push
pop
enter
out
popa
xchg
test
enter
mov
jl
leave
mov
cmpsb
or
jg
cmpl
into
fbld
daa
out
cmp
mov
lods
scas
lret
das
sub
cmp
xchg
rorb
orw
jb
sub
xchg
push
out
jg
and
adcl
lock
inc
xchg
pushf
lods
push
movsl
fnstenv
mov
sbb
add
push
push
cli
push
push
outsb
mov
scas
gs
mov
lods
mov
clc
jle
lods
loopne
inc
ja
enter
out
add
test
repz
jmp
in
mov
les
dec
push
leave
stc
loop
test
sbb
dec
xor
adc
sbb
repz
and
cmp
or
psllq
add
fcmovb
sbb
pop
aad
lods
inc
sbb
jae
sbb
dec
pusha
cmp
decl
jae
xchg
jae
mov
jp
movsb
pop
add
popa
xchg
or
fwait
cmp
mov
sbb
lds
sbb
xchg
call
loop
and
pop
jno
push
xchg
pop
cmc
mov
sub
in
rolb
imul
leave
ss
loopne
movsb
fisttpll
sti
fcomi
dec
cmp
js
aam
lock
inc
movsl
cs
sarl
xchg
xchg
mov
scas
leave
or
mov
roll
sub
repz
rcrb
xchg
in
jp
outsl
int
or
rorl
xlat
js
andl
orl
dec
inc
imul
jno
mov
push
sub
xchg
leave
xchg
ss
cmp
je
sub
mov
test
pop
cmp
fdivl
push
popf
xor
loop
push
fistpll
test
loope
dec
sub
loop
pushf
mov
test
mov
fwait
stc
mov
xor
int3
outsb
jbe
test
cmp
sub
sbb
inc
subb
div
xor
sar
sub
ss
sub
jecxz
jb
fwait
and
punpckldq
scas
push
ss
ja
cmp
cmp
into
fs
xchg
xchg
xor
lret
xor
xchg
insb
push
int3
les
push
movl
in
ret
imul
lds
mov
pop
inc
fldl
in
sub
bound
cmpsb
les
ja
scas
fsubr
inc
sub
test
aam
cmpb
jbe
std
mov
xor
push
pop
add
cmp
or
stc
lds
mov
ds
mov
mov
push
icebp
out
jl
ret
xlat
test
arpl
imul
xor
or
rorb
jns
pushf
test
hlt
push
notb
mov
add
and
add
fsubr
int
inc
dec
bound
xor
std
or
or
mov
sti
fcomp
jmp
test
adc
cmp
adc
out
and
les
add
daa
xor
pop
dec
fwait
inc
in
es
sahf
xchg
sub
jne
jbe
or
push
popf
xchg
pop
and
test
dec
push
das
inc
pop
in
jo
cmpsl
lcall
mov
jb
mov
cmpsb
outsl
int3
ss
cmp
cmp
inc
pop
mov
fsubrs
daa
sbb
xor
push
mov
pushf
jns
pop
adcl
and
mov
cmpsl
les
out
mov
push
ret
pop
sub
add
push
or
pop
jno
leave
push
add
xchg
push
xchg
mov
cmp
outsl
test
call
outsb
ljmp
push
icebp
push
cld
sbb
out
outsl
aad
insb
test
stc
xor
mov
in
cwtl
xchg
xchg
loopne,pn
push
inc
fmul
sub
adc
cmpb
xchg
sub
jo
decl
lock
mov
push
mov
clc
imul
testl
xor
jns
sbb
sub
rclb
fstpt
adc
lds
lret
addr16
and
xor
xchg
mov
out
pop
or
cmpsl
outsb
adc
psubusb
scas
stos
ja
insl
clc
arpl
out
dec
inc
and
xchg
pop
fdivrp
sbbl
sahf
xchg
ja
mov
jnp
pop
push
or
popf
mulb
loop
jbe
pushf
xor
lods
adc
adc
add
or
rcl
leave
cmc
in
jnp
xchg
jnp
push
lods
addr16
xor
lret
adc
repz
testl
mov
pop
popa
xchg
outsb
mov
addr16
out
pop
xor
dec
cwtl
mov
sahf
aam
sub
imul
stos
hlt
sub
jecxz
mov
cmp
lods
and
jbe
ja
inc
inc
add
aad
divl
fildll
imull
push
movl
jo
test
fstpl
xchg
lock
cmp
inc
push
push
jb
mov
jno
or
popf
xchg
int
pop
cmp
aam
inc
addr16
das
outsb
pop
add
cmc
loope
cmc
or
fdivl
cmp
test
arpl
add
ja
lahf
sahf
imulb
or
mov
jo
fwait
cmp
lret
or
mov
rcrb
or
in
cmp
xlat
dec
rcl
jp
mov
push
js
lock
cs
sub
sub
adc
shll
out
inc
adc
push
test
aad
leave
lods
pop
mov
mov
jg
int
test
rcl
jb
insb
jp
outsb
or
pop
outsb
xchg
pusha
mov
or
popa
mov
mov
popa
cld
adc
nop
or
dec
adc
test
cmpsb
repz
mov
shlb
mov
stos
sbb
jnp
enter
pop
adc
dec
loopne
shr
inc
cmp
sahf
testb
jae
je
inc
pop
int3
icebp
cmp
push
sbb
lds
fidivs
sub
inc
mov
fcmovnu
mov
insb
jg
xchg
pop
fidivs
or
jae
jbe
daa
outsb
add
sbbl
jle
and
mov
xchg
mov
add
push
bound
ss
jae
stc
cwtl
hlt
ss
add
xor
xor
xchg
inc
mov
cmp
loopne
lcall
push
push
loopne
adc
fisubrs
sub
test
inc
mov
clc
mov
dec
daa
or
xchg
inc
movsl
push
mov
add
fsubp
aaa
pop
or
into
mov
jg
mov
push
dec
adc
aad
fnstenv
out
dec
pop
jmp
mov
adc
outsl
xor
sub
pop
scas
aaa
sbb
cmp
lcall
jmp
std
cltd
jns
adc
pop
outsb
cli
outsb
pop
into
or
cmc
fists
shrl
jne
sub
mov
add
popf
push
rorl
push
outsl
pop
ds
jp
add
pop
add
clc
repz
cmp
mov
cmp
loop
add
leave
jmp
out
scas
out
inc
or
sub
push
pusha
mull
loope
ds
cmpsl
xor
test
lret
fcoml
dec
add
mov
cld
outsl
inc
scas
pop
fwait
xor
cwtl
pop
push
loope
mov
push
push
scas
cmc
xchg
jle
loop
mov
hlt
dec
jmp
aad
xchg
test
jecxz
lret
and
cmp
inc
xorb
pop
jns
rolb
stos
repnz
rcr
mov
pop
out
fimull
mov
sarb
popa
jbe
jle
push
ljmp
pop
jl
notb
cmp
xlat
pop
pushf
pop
mov
sbb
lahf
inc
push
sub
addr16
push
negb
dec
jae
shlb
push
ljmp
lods
sbb
pop
hlt
cmc
inc
ljmp
fbld
jg
cltd
xor
push
jns
notb
or
test
push
add
xchg
test
call
movsl
jp
and
sub
inc
lret
inc
icebp
aad
repnz
sub
add
sbb
jnp
mov
add
movsl
cltd
fistps
fiaddl
mov
add
add
enter
jns
filds
lods
pop
insl
sbb
mov
and
mov
scas
xchg
xor
or
pop
cld
xchg
es
push
je
and
or
add
rorb
cli
rcrl
bound
out
jnp
lret
inc
idiv
sbb
jge
or
jne
fstl
jmp
mov
loop
data16
and
fwait
and
movsb
repz
bound
aas
push
fs
test
fsubr
ret
imul
sar
push
mov
sub
push
jmp
lock
push
subb
std
mul
pop
mov
data16
outsb
gs
jo
pop
mov
pusha
mov
cmpsl
cmp
push
fs
lock
and
cltd
pop
jmp
sbb
leave
imul
fmuls
popa
loopne
test
pop
inc
pushf
fdivs
lds
mov
dec
or
mov
stos
mov
cmp
xchg
push
sti
in
mov
loope
cwtl
mov
dec
orl
jl
sahf
mov
pop
gs
sbb
pop
add
mov
inc
jae
jae
dec
push
out
adc
push
imul
mov
mov
into
cmp
or
adc
xchg
mul
scas
push
shrb
shl
and
adcb
aam
ret
xor
push
in
hlt
mov
xchg
inc
inc
and
popf
and
sub
sarl
lds
push
repz
add
loopne
daa
clc
pop
lds
int
sarl
sarb
inc
js
ret
into
aad
aam
repnz
jl
inc
xor
or
rcl
aam
mov
aam
push
push
popf
inc
add
add
mov
jns
and
dec
mov
jecxz
cwtl
gs
call
jae
in
jo
in
shr
push
in
dec
jge
xchg
insl
mov
imul
int3
data16
jecxz
xchg
rcl
mov
nop
pop
mov
sbb
pop
call
and
mov
addb
in
jmp
lds
cwtl
jb
ret
lret
pushf
inc
icebp
arpl
adc
out
iret
xchg
fsts
mov
lahf
xor
xchg
clc
ja
shrl
and
xchg
add
daa
mov
pop
es
cmp
cltd
loopne
ffree
mov
mov
bswap
popa
nop
push
loopne
pop
mov
lods
or
xchg
pop
cmp
mov
loopne
cmpsl
fisubl
ljmp
sbb
xor
xchg
xchg
add
mov
push
into
inc
sub
popf
add
movsb
addr16
fisubrs
adc
jl
scas
jno
outsl
inc
aad
out
sub
out
popf
xchg
jl
inc
scas
in
sbb
loop
cmp
mov
pop
lea
cmp
add
adc
sbb
xchg
mov
out
cmp
cmc
sub
fiaddl
leave
fists
cmp
loope
xchg
daa
mov
lods
mov
fmuls
movsb
mov
adc
test
stos
imul
push
inc
xchg
push
lahf
and
iret
mov
aam
nop
mov
push
lea
dec
cmc
jmp
dec
cmpsb
mov
cltd
pop
add
sbb
pop
lcall
popf
mov
cmpsb
je
in
int3
pusha
push
arpl
xchg
jno
out
mov
mov
mov
int
cli
mov
pop
fidivl
push
push
idivb
inc
lds
adc
dec
test
sti
ss
xchg
stos
adc
int
std
mov
or
fwait
xor
jge
pop
out
fdivs
gs
dec
mov
xchg
inc
clc
outsl
mov
je
pushf
xchg
mov
repnz
xchg
fadd
jno
mov
leave
adc
push
add
adc
in
jb
or
ja
lret
mov
push
mov
pop
sub
mov
mov
stos
ret
aam
adc
mov
xchg
xchg
nop
aas
call
lret
cmp
jg
roll
push
inc
inc
movsl
push
mov
outsl
xor
jmp
gs
cmpl
pop
or
mov
dec
jns
inc
aad
cmpsb
lret
ret
pop
and
jl
test
and
cmc
rol
roll
lcall
lock
scas
dec
jne
repnz
shrl
sub
xlat
and
or
jmp
jbe
icebp
xchg
popa
icebp
mov
stos
push
jae
andb
add
cmpsl
inc
fs
adc
xchg
mov
subb
mov
lods
out
adc
aaa
xor
into
mov
jl
lea
jbe
xlat
mov
popa
push
js
xorl
pop
mov
lods
lret
idiv
or
rol
lock
push
ret
push
xchg
into
pop
add
cmp
pop
adc
xchg
mov
in
dec
into
mov
push
dec
pop
popa
sti
int
mov
mov
scas
scas
inc
in
sahf
out
pop
sti
mov
daa
addl
mov
jp
adc
lods
cmpsb
mov
sbb
lods
inc
daa
mov
movsb
xchg
insb
decl
int
loopne
out
and
cwtl
inc
nop
jne
rdtsc
cltd
ss
int
pop
fs
test
cmp
mov
popf
adc
jae
ret
xor
out
add
pusha
and
loop
fadds
push
int3
or
insb
rolb
inc
jle
arpl
movsb
roll
or
mull
xor
jg
lea
sbb
fnsave
in
out
movsl
xlat
xchg
pop
scas
es
and
adc
mov
mov
fimull
xchg
adc
clc
testl
ss
gs
xchg
mov
inc
jnp
xchg
fldcw
mov
arpl
in
or
rcrb
pop
sub
or
jbe
push
push
mov
pop
add
pop
dec
mov
pop
push
and
dec
lods
push
insl
xchg
shll
nop
cli
ret
jl
fdiv
push
scas
mov
fmuls
idivb
out
xchg
mov
outsb
in
dec
adc
out
xor
jno
xor
adcl
mov
fnstenv
out
outsl
in
mov
fwait
lcall
cmp
test
mov
rorl
xlat
sahf
mov
inc
sbbl
lret
pop
cmpsb
xor
nop
mov
loop
mov
lret
or
add
pop
dec
ficoms
fldt
inc
fdivrs
rcll
mov
mov
leave
inc
pop
pusha
lds
leave
sub
bound
fstps
les
mov
pop
ss
subl
aaa
sub
inc
mov
insl
in
adc
push
sti
scas
dec
jo
vaddsubpd
cmp
cmp
insl
out
bound
jno
and
jmp
sub
add
les
dec
jae
rcrl
aam
sbb
jl
add
ds
mov
cltd
lods
mov
in
je
inc
jne
sbb
pop
notl
push
dec
or
pusha
xor
or
or
leave
jb
movsb
xchg
pop
mov
in
stos
jmp
enter
dec
int3
daa
test
or
xor
in
sub
and
lods
dec
call
lcall
repnz
dec
jb
das
mov
pop
sbb
lds
mov
bound
mov
js
jnp
pop
or
shrl
nop
in
sub
ds
dec
lret
lahf
pop
jnp
iret
insb
xchg
cmpsb
sub
call
pop
adc
hlt
and
or
ss
xchg
xor
mov
fwait
jl
inc
mov
push
mov
sbb
inc
pop
lret
mov
mov
shrl
nop
mov
push
cmp
shl
out
outsb
aas
jl
loope
inc
js
mov
leave
stos
and
xor
add
imul
mov
fadds
ds
int3
data16
fdivl
int3
stc
jbe
inc
sbb
cmp
and
lcall
mov
xor
mov
or
sub
daa
add
xor
adc
xchg
je
cwtl
push
dec
clc
sbb
pop
push
lods
or
sub
fadds
lret
push
aaa
dec
push
aam
mov
rolb
inc
dec
pop
out
fwait
notb
dec
lahf
xchg
rol
mov
inc
aam
dec
into
jg
mov
mov
pandn
cmp
test
outsl
mov
test
jae
cld
popa
sti
adc
lret
mov
ret
sbb
loop
push
adc
jnp
dec
push
sti
sub
es
pop
xor
out
cmpsl
popf
jg
leave
jmp
mov
rol
mov
or
mov
fcomps
push
icebp
pushf
pop
pop
insb
and
ljmp
icebp
jmp
xor
lcall
repnz
adc
mov
shrb
nop
mov
add
test
leave
fwait
xor
into
fstp
repnz
xchg
pop
stos
test
pop
and
in
cli
imul
nop
das
ror
cmpsb
test
jg
xorb
sarb
repz
push
psrld
pop
sub
push
add
cltd
sarb
cwtl
lds
adc
std
mov
jl
jno
or
mov
sbb
adc
ror
es
mov
mov
mov
xor
sarl
cs
mov
insb
xchg
lahf
cld
arpl
test
sbb
movsl
or
mov
dec
dec
outsl
or
cmp
and
mov
int3
cli
shlb
insl
inc
mov
cmp
or
xor
mov
mov
add
add
adc
cmpb
xchg
xorl
sbbl
cmp
adc
inc
jo
sub
in
sti
inc
add
into
incl
sbb
loop
add
jns
jo
cmp
mov
scas
and
ret
push
add
hlt
mov
addl
ret
scas
andl
andl
push
push
fldenv
xchg
pop
mov
testl
in
sbb
dec
in
sub
outsl
sti
aad
jmp
insl
sbb
and
xchg
xchg
in
mov
pop
addl
push
lahf
iret
sti
jae
leave
xchg
xchg
loopne
or
mov
inc
push
out
push
push
sbb
pop
push
movsl
clc
sub
jge
or
mov
adc
nop
stos
sbbb
jmp
mov
movsb
roll
dec
jne
mov
stos
inc
popa
adc
and
data16
test
lds
pop
nop
xorl
loope
decl
stc
add
inc
cwtl
clc
iret
ds
sti
mov
insb
add
hlt
xor
xor
lds
insb
andb
push
adc
xchg
xor
daa
icebp
mov
pop
sub
rcrl
fdiv
or
push
je
out
enter
xchg
push
bnd
inc
pushf
dec
cmp
stc
testb
enter
fwait
scas
fsubrp
mov
sti
movsl
lock
pop
rcrl
lock
xchg
into
jmp
push
xchg
push
push
insb
fists
push
cmp
and
in
cltd
les
sbb
out
clc
or
pop
cmc
dec
xor
mov
push
aad
imul
mov
pop
imul
add
clc
rorl
and
mov
stos
xlat
aaa
enter
xor
addr16
jge
push
in
mov
in
mov
je
js
inc
mov
inc
mov
pushf
loope
xchg
test
shll
and
mov
push
xorl
les
out
push
jmp
xor
mov
ds
sub
push
cmp
pop
mov
test
mov
stc
xchg
sbb
fdiv
bound
test
outsl
insb
mov
ljmp
data16
fldt
jo
andb
pop
inc
xchg
repnz
imul
pop
stos
shl
popf
fsubl
xor
mov
std
mov
xchg
pop
fmuls
je
aaa
xorl
mov
jmp
aad
or
in
cmovp
fsts
pusha
inc
or
aaa
xor
in
push
ds
divb
xchg
daa
sub
jg
jl
jp
sahf
aaa
push
mov
sti
jge
in
inc
mov
mov
inc
inc
mov
or
push
orb
inc
push
invd
in
sbb
or
or
push
adc
cmpsl
jne
hlt
jno
push
mov
jl
mov
add
lahf
xor
xchg
or
pop
je
stos
test
sub
std
cmc
jns
push
notb
ficomps
bound
nop
repnz
out
inc
add
test
jge
mov
jmp
sub
sbb
xor
in
inc
shll
sbb
mov
inc
cmp
insl
cmc
or
push
mov
sub
cmp
movsb
rcl
pop
and
imull
in
fdiv
lret
jecxz
cmp
add
mov
and
cmp
lods
push
lods
lret
inc
or
inc
and
stos
push
inc
aas
cmpxchg
in
adc
mov
fs
sti
inc
push
sti
pop
pop
push
stos
adc
lret
push
xor
jge
push
add
shrb
push
xor
outsl
jns
je
ret
sub
jb
push
cld
jnp
scas
in
jb
jb
movsl
xor
lds
sbb
xchg
add
std
into
es
dec
in
cwtl
pop
adc
ds
fnsave
ds
xchg
mov
mov
xor
xchg
mov
push
sti
cli
inc
pop
cs
int
pop
int3
test
movups
pop
add
cmp
ret
push
jo
out
mov
mov
inc
xor
dec
les
loope
and
ss
popf
xchg
jmp
loop
nop
sbb
push
xchg
lods
roll
sub
lea
sub
fidivl
mov
fcmove
or
jl
mov
sbb
lret
test
xor
xor
int3
das
inc
cmp
fcomip
mov
sbb
xchg
gs
sub
insl
iret
testb
std
mov
xor
push
dec
loopw
cmc
int3
dec
adc
dec
inc
rcl
dec
dec
and
gs
ss
cmp
mov
popa
inc
xchg
pop
pop
push
subb
ret
xchg
dec
lock
pop
ljmp
dec
in
lea
jge
js
inc
test
sbb
rorb
xor
test
cmpsl
lahf
adc
or
inc
in
cmpsb
xor
shl
xchg
pop
xchg
outsl
mov
adc
add
icebp
pushf
insb
sbb
dec
loope
imul
add
mov
and
xor
in
loope
push
xchg
mov
push
iret
inc
sbb
test
imul
pop
inc
ja
cmc
imul
pop
sahf
insl
std
test
ja
hlt
arpl
or
cmp
leave
adc
clc
push
add
push
cmp
mov
scas
mov
cmp
mov
cmp
mov
adc
aaa
lods
std
scas
mov
ljmp
dec
push
movsl
loop
and
jae
gs
andl
rcrl
dec
divb
and
xchg
sub
inc
push
add
xor
push
ja
cmp
std
inc
xor
test
dec
jae
jp
cmc
dec
out
mov
sbb
mov
shr
mov
add
xlat
nop
mov
mov
scas
sub
cmp
pop
sbb
xchg
sbb
push
ret
popf
mov
vmovntps
faddp
gs
adc
xchg
cmc
adc
jb
push
test
push
ret
mov
add
jno
lret
jbe
lret
pop
pop
mov
cmp
sbb
sahf
insl
xchg
pusha
imul
mov
push
fimuls
mov
data16
jb
push
out
mov
mov
test
das
in
test
add
push
aaa
out
push
adc
in
lret
cld
dec
xorb
jae
jno
jle
pop
lret
icebp
xchg
outsl
mov
push
or
pop
mov
les
inc
popl
jne
ror
jge
flds
jo
ljmp
cmp
xlat
or
int
or
pushf
call
mov
pusha
adc
cmp
mov
leave
mov
and
sarl
lods
xor
push
cltd
clc
fldcw
or
mov
or
or
push
mov
cwtl
pushf
rclb
rolb
xchg
negb
call
cwtl
fcoms
jnp
ljmp
fcomip
sbb
and
pop
das
pop
sbb
adcb
and
clts
test
cmpsl
scas
jg
jg
scas
icebp
or
enter
fadd
rcr
fbstp
dec
dec
insl
hlt
xor
in
xchg
inc
js
lea
jg
test
pop
jnp
fildll
add
pop
jmp
push
add
ds
adc
nop
xchg
das
lcall
imul
fists
and
bound
cltd
sti
mov
lcall
or
xor
lock
enter
addr16
or
arpl
xor
push
divl
xchg
sbb
cltd
int
jno
outsb
push
pop
hlt
jp
nop
in
xchg
aaa
xchg
iret
lea
daa
lret
pushf
fdivr
repnz
pop
inc
call
jns
jg
mov
cmp
les
aam
pop
sub
adc
xchg
shl
aaa
dec
sahf
popf
clc
and
out
ss
jmp
mov
pusha
xchg
add
les
xchg
mov
test
push
sbb
fmull
rorb
mov
pop
pusha
mov
and
sub
add
and
adc
mov
cmc
dec
mov
addr16
fidivs
outsb
xchg
mov
testb
mov
mov
test
aad
mov
imul
lods
sub
outsl
orl
pop
div
fcomp
cltd
sbb
jb
mov
lret
cmpl
push
lods
out
mov
enter
ja
inc
inc
adc
push
insb
fistl
push
pop
das
shl
dec
or
insl
sbb
into
inc
mov
inc
sub
lret
inc
jne
sbb
es
mov
cmpsb
fistpl
imul
mov
pop
xchg
hlt
ds
iret
lret
dec
mov
cmp
add
out
aad
insb
lods
and
or
or
faddp
out
scas
imul
mov
fldcw
cwtl
or
jns
fistpll
lea
rcrb
js
movsb
mov
inc
pop
mov
mov
sbb
mov
fildl
insb
adc
incb
fiaddl
and
mov
sbb
mov
frstor
jge
nop
add
cmpsl
jl
mov
jle
push
sbb
push
sub
test
jae
and
push
jl
pop
push
cmp
fwait
hlt
call
pop
in
xchg
imulb
sub
rorl
fistl
in
jmp
sub
lret
sbb
popf
ja
cmp
and
mov
nop
int3
pop
jecxz
jg
stc
fsubl
test
and
in
cmpsb
xchg
mov
xchg
sbb
xchg
and
xor
mov
fiaddl
pop
xor
pop
loopne
lcall
xor
adc
push
ja
int3
cmp
and
outsl
loopne
js
fdiv
mov
mov
leave
test
cmp
add
jge
and
dec
ds
in
dec
ret
jo
cmp
out
mov
dec
push
cmc
pop
ljmp
aaa
lret
mov
xchg
addb
fistl
js
sbb
aaa
jp
sub
and
push
inc
and
mov
idivl
stos
xchg
loop
test
xlat
sarb
ja
pusha
aaa
mov
cmp
cmp
fstpl
movsb
pop
xlat
add
test
lret
ja
in
ljmp
out
cmc
or
pop
rclb
mov
sub
add
int3
int3
push
mov
lods
cmc
addr16
and
sub
cmp
enter
fs
inc
es
mov
xor
xchg
rol
xchg
loope
out
cmp
ret
ljmp
xchg
and
fsubrp
ret
das
cmc
mov
out
lret
xor
test
clc
insl
fwait
popa
shr
fwait
inc
aas
xor
mov
sbbb
lret
fwait
and
jle
jl
adc
nop
jb
inc
pop
std
xchg
mov
or
lahf
cmp
mov
les
repz
sub
sub
and
xchg
xchg
dec
push
sub
aad
data16
xor
push
cmp
push
jge
mov
inc
fs
loopne
sbb
sbb
cld
icebp
xchg
std
cld
add
lock
add
sub
or
xlat
mov
test
mov
pop
cwtl
jae
sti
add
xor
in
pop
xchg
clc
insb
mov
pop
mov
mov
ret
push
xchg
cltd
enter
dec
mov
pop
mov
cltd
add
push
push
sahf
decl
jp
in
sahf
dec
out
pop
idivb
pop
inc
dec
icebp
mov
sbb
js
leave
and
xor
cltd
mov
sub
lahf
in
fdivp
mov
nop
imul
stos
insl
mov
clc
jne
jle
movsb
call
push
sub
and
push
mov
xchg
push
push
sbb
idivl
inc
pop
jae
sub
mov
das
jp
int3
dec
fsubp
mov
insb
in
pop
fs
addr16
lea
xor
mov
add
mov
push
jns
cmp
xchg
add
mov
mov
aaa
ds
jg
inc
cld
pop
xor
insb
in
das
jne
out
add
out
movsl
lea
hlt
sub
adc
sbb
repz
sbb
mov
add
adc
cmp
mov
jmp
jo
lahf
cmc
movsb
fnsave
xchg
mov
jmp
data16
in
mov
sub
shlb
dec
add
sbb
mov
cmpsb
js
ret
repz
pop
sbb
dec
jb
pusha
jmp
out
pushl
xchg
and
lret
lret
or
or
stos
pop
cmpsb
sub
push
add
adc
fisubl
adc
ljmp
xchg
aas
int
cmpsb
push
mov
xchg
ret
xchg
push
lods
ret
repz
sbb
dec
add
call
mov
jno
fcmovu
popa
mov
add
xor
inc
mov
jge
add
divb
mov
or
mov
cmp
mov
lret
ret
jae
cmp
mov
mov
aaa
xor
jbe,pn
add
mov
add
daa
mov
xchg
jl
mov
pop
push
mov
outsb
std
dec
clc
pop
push
sbb
inc
push
inc
movsb
inc
test
cs
inc
adc
frstor
fists
inc
jo
pop
lcall
mov
adc
cmpsb
inc
mov
pop
pop
lock
or
xchg
mov
sbb
addr16
mov
pop
xchg
sbb
pushf
aas
and
xor
add
sub
or
mov
sbb
pop
pop
in
out
mov
icebp
add
andl
outsb
mov
xor
mov
mov
popa
dec
jne
jge
lods
idiv
dec
push
xor
js
xor
bound
out
cld
fidivl
mov
out
mov
fmull
mov
sub
xor
in
jg
cltd
mov
cmp
enter
inc
pop
jnp
addr16
push
sub
sbb
repz
jmp
push
add
lahf
out
scas
outsb
mov
subl
lds
xchg
movsb
push
pop
xor
mov
pop
pop
dec
ror
sti
pushf
dec
sub
cwtl
les
xchg
mov
int
gs
cmp
mov
jnp
fldl
aad
std
xchg
shlb
pop
outsl
aad
mov
int3
add
sub
pusha
aad
mov
cmp
out
pop
sti
sarb
fsubs
lret
xchg
jae
jp
fwait
adc
sub
ja
mov
adcl
stc
sub
stos
ja
mov
test
dec
lea
jmp
jg
cmp
sub
or
movsb
adc
lods
jne
push
pop
jns
cli
and
inc
fisubs
xchg
and
std
pusha
lret
repz
insb
xchg
sub
xor
pop
loope
pop
push
notb
xor
mov
mov
icebp
cltd
ficomps
pop
lock
mov
adc
xor
pop
sub
or
mov
cmpsb
mov
andb
movsl
adc
inc
push
xchg
xlat
sbb
pop
xchg
jne
cmp
mov
push
in
xor
loope
outsl
int
adc
fnsave
add
pop
or
add
les
seta
push
sbb
xlat
lods
push
out
sbb
jae
jecxz
xor
das
jge
outsl
gs
mov
and
pop
jecxz
sar
ret
stos
add
hlt
lock
mull
dec
or
into
pop
ds
sarb
mov
cs
push
movsb
scas
clc
xchg
jno
lods
sub
xor
icebp
std
sub
movsb
xchg
loopew
adc
push
push
mov
add
movsb
jne
inc
and
daa
push
fldl
cltd
jmp
je
cmpsb
cltd
fldcw
leave
int
dec
dec
popf
mov
cmp
and
pop
icebp
push
pop
daa
add
enter
cmc
call
jno
jle
ss
jno
jge
data16
es
cmp
add
imull
cmp
mov
out
addr16
cmpsl
pop
or
ret
xchg
xor
js
mov
scas
fsqrt
das
rcrb
into
shll
fistl
das
inc
push
push
call
add
mov
or
dec
mov
push
jb
xchg
jae
movsb
ret
sbb
xchg
call
and
or
nop
ljmp
dec
andb
enter
daa
nop
dec
xchg
jmp
or
dec
xchg
ljmp
mov
pop
pop
push
loopne
push
and
mov
mov
int
push
xor
fistl
jne
ja
les
inc
outsb
clc
rorl
xor
jmp
cltd
pop
mov
aad
or
out
sub
fcomps
xchg
ret
adc
mov
and
jnp
pop
push
out
ja
and
es
jg
sbb
daa
lret
fptan
rep
adc
sarb
data16
hlt
pop
ret
mov
cs
aas
pusha
pop
les
mov
cmp
cmp
dec
test
dec
mov
imull
mov
outsb
dec
call
aaa
pop
sub
jmp
add
insb
sub
movsl
js
jne
sbb
sarb
ja
adc
push
pop
jae
mov
data16
bound
loopne
pop
subl
pop
out
xchg
cwtl
js
pop
pop
cltd
lock
mov
sarb
dec
frstor
jmp
inc
cmpsl
or
lock
xchg
cmc
mov
rcrb
pop
lods
mov
sahf
or
mov
shr
enter
xchg
jmp
jmp
sbbb
and
dec
pop
xor
test
fisubl
pop
cmp
or
mov
push
stos
jmp
mov
pop
int3
jb
cli
or
mull
cmpsl
jmp
adc
xchg
mov
repnz
jns
push
mov
jnp
arpl
lret
jb
adc
cmp
es
push
dec
test
mov
or
pop
popf
cmc
fadd
pop
mov
sub
jo
xor
cmp
sbb
cmpb
pop
push
icebp
add
and
cmp
xchg
mov
push
ss
and
add
push
and
mov
mov
mov
aas
int3
shlb
jle
mov
and
mov
add
sub
add
jl
dec
mov
fwait
push
mov
pop
sub
pop
pop
and
testl
in
shrl
adc
cmp
in
jo
aas
jge
inc
out
fs
cli
sbb
mov
loopne
stc
imul
loope
loope
or
jno
push
repnz
arpl
clc
adc
jno
ljmp
loope
and
mov
mov
fwait
mov
addr16
dec
je
clc
and
mov
push
out
ljmp
jne
pop
dec
xchg
addr16
or
testl
js
lret
and
stc
arpl
jle
xor
cmpsl
lds
xchg
lcall
xchg
inc
and
sub
jl
xchg
inc
lods
fdivs
test
push
iret
inc
xorl
inc
stos
cmp
fsubrs
and
int3
leave
push
outsl
mov
and
and
fidivl
add
fs
int
divb
fdivrl
testl
das
jne
and
stos
stos
xlat
pop
pusha
rol
popa
mov
mov
popa
or
arpl
fbld
bound
ret
mov
arpl
fst
mov
into
mov
je
out
aad
cmpsb
inc
stos
call
out
adc
scas
mov
std
fldl
loop
push
in
or
inc
in
mov
mov
adc
sub
outsb
xchg
dec
nop
into
push
jp
xor
stos
ret
aas
dec
mov
popa
loope
in
xchg
repnz
push
cwtl
xorl
lods
imull
pop
xchg
bound
xchg
imul
jae
inc
enter
jb
mov
outsl
andb
aas
mov
loopne
add
in
mov
icebp
mov
call
cmp
jg
scas
xchg
cmp
and
mov
pop
mov
stos
and
dec
sbb
cmp
inc
and
or
stos
stc
out
sbb
mov
loopne
cmp
call
lods
loop
ss
jb
xor
xor
push
mov
enter
loopne
push
xchg
fsts
nop
in
lock
or
icebp
xor
stos
cmp
push
subb
test
adc
ret
mov
mov
push
clc
sbb
cs
xor
add
pop
scas
leave
push
mov
and
mov
cwtl
sbb
test
lock
sub
repnz
mov
call
cmp
and
leave
test
pop
mov
loopne
sub
in
pop
aaa
jnp
cli
sub
push
ss
scas
push
jl
add
lods
cld
xchg
data16
adc
out
pop
repnz
adc
in
test
clc
adc
or
or
aaa
sub
xor
inc
fs
out
push
aas
xchg
popf
shll
add
cmp
sbb
cld
cmp
pop
scas
sub
test
loop
out
mov
imul
adc
pusha
sbb
push
dec
inc
insb
pop
mov
mov
and
xchg
jnp
pushf
xchg
cltd
daa
sub
mov
sub
mov
in
hlt
js
xor
xchg
mov
icebp
mov
lds
lret
xor
nop
sti
fistps
addl
imul
out
xchg
jge
ret
rorl
and
xchg
fstps
xchg
mov
outsb
and
mov
mov
xchg
in
inc
add
sahf
popf
jp
std
loop
adc
inc
jo
xorl
std
lds
or
movsb
fimuls
sub
inc
adc
xor
mov
xor
rsm
pusha
mov
or
lcall
mov
xor
mov
and
jno
adc
dec
push
and
mov
les
sbb
xor
imul
mov
xorb
mov
or
pop
push
xchg
mov
xor
lahf
xor
and
dec
mov
push
insb
inc
xchg
xchg
inc
pushf
jnp
inc
cmpsb
lds
mov
xor
rcr
popa
add
push
rcrl
ja
es
pop
jg
lcall
in
jne
mov
lds
loopne
mov
imul
ret
test
out
sbb
inc
mov
dec
xchg
inc
pop
dec
push
mov
xchg
test
addb
arpl
mov
adc
xchg
and
pop
mov
mov
sahf
pop
jp
iret
ret
cmp
dec
sarl
ss
cmp
sbb
xchg
nop
pop
dec
cmc
dec
packuswb
xor
fwait
shlb
fadds
push
inc
cmp
pop
lret
cmc
aas
pusha
out
adc
mov
inc
inc
scas
test
jge
gs
pusha
repnz
jle
jecxz
cli
in
cmp
jne
add
cltd
add
in
inc
int
cltd
mov
adc
mov
fdiv
pop
js
jmp
jb
mov
fisubrs
pusha
cmp
inc
cld
inc
pop
pop
popf
outsl
adc
repz
pop
jmp
inc
pop
fucomi
xchg
sbb
in
adc
outsl
lret
mov
sub
mov
add
adc
mov
mov
pop
fs
adc
push
data16
jp
popa
popa
xor
jp
repnz
decl
push
dec
jle
iret
jb
mov
mov
cmp
cmp
jecxz
test
ja
cs
std
xchg
pop
lcall
add
movsb
sub
sbb
loop
sub
xchg
mov
jbe
dec
sub
iret
mov
fs
mov
test
test
mov
orb
aas
add
ret
mov
cmp
jle
stos
xchg
out
js
movb
mov
jo
ret
rolb
sbb
jae
dec
sub
mov
icebp
xchg
aaa
and
inc
bound
sarl
and
or
test
bnd
insb
sub
ret
out
push
repnz
addr16
popa
inc
loop
cli
ja
or
fdivs
push
dec
scas
arpl
in
mov
test
inc
mov
in
inc
cmp
mov
xor
and
mov
cmp
adc
insb
cltd
pop
xchg
mov
mov
outsb
stos
dec
movsb
mov
movsl
mov
sbb
push
nop
popa
insl
fcoml
sub
sbb
mov
inc
shll
js
or
add
dec
fucom
mov
scas
data16
cmp
push
in
or
sbb
fdivl
mov
add
xchg
lds
add
cwtl
cmp
inc
aaa
sub
pop
mov
push
jle
sbb
fcoml
pop
mov
cmp
mov
push
fadds
fcoms
imul
leave
xor
jnp
inc
fists
pushf
ret
jnp
andb
out
jno
jae
or
jp
cmp
xchg
jnp
sbb
gs
sbb
add
sub
xchg
shll
push
fs
inc
xchg
or
ljmp
dec
xchg
sahf
aam
pop
rcrl
stc
outsl
and
add
sti
sbb
and
and
sub
push
popl
js
jns
data16
sahf
sub
dec
push
je
int
pop
xchg
clc
xlat
lret
je
loopne
in
ss
and
xchg
pop
imul
aam
pop
fnsave
ficomps
ss
sahf
cmp
xchg
dec
das
fisttps
stc
testl
aas
mov
stos
pop
xor
cmp
pop
add
stc
mov
mov
xor
aas
jg
jecxz
loope
mov
in
jg
mov
and
aad
movl
shr
mov
setae
mov
jo
pop
cmc
push
nop
mov
sub
xchg
js
nop
jmp
es
or
hlt
add
sbb
ds
cmp
or
cmpsl
test
push
xchg
pop
pop
repz
xchg
add
jne
clc
nop
pop
call
jb
cmpsl
mov
push
ret
mov
pop
xor
arpl
adc
cmp
sub
mov
bound
shrb
pusha
outsl
adc
pop
repnz
jg
xor
test
dec
sbb
add
out
stos
and
movsl
loope
sub
xor
mov
and
xchg
push
xchg
iret
mov
sbb
mov
je
addr16
stos
movsb
out
cmpsl
cmpb
sub
repnz
arpl
jg
cltd
mov
test
ss
xchg
pop
ss
cmp
shrb
jae
mov
orl
loope
jle
and
test
aad
aas
adc
inc
adc
das
adc
lods
xchg
fldt
aas
jns
arpl
push
mov
or
sub
lods
or
cmp
dec
sbb
fwait
push
add
cmp
xchg
out
xor
je
inc
enter
inc
andb
push
mov
gs
aam
jecxz
test
lods
sbb
hlt
sub
add
cmp
mov
and
cltd
fnstcw
jmp
xor
scas
popf
push
jno
jb
ficomps
push
imul
add
mov
sbb
cmp
mov
jno
pop
cmpsl
cs
jne
ds
icebp
cmp
jecxz
icebp
mov
or
jmp
imul
ret
push
ss
dec
shrl
sbb
mov
lods
inc
inc
insb
xchg
mov
push
jle
xchg
outsb
arpl
mov
aam
mov
xchg
mov
dec
jge
hlt
mov
push
arpl
dec
sbbb
jl
mov
aaa
call
stc
pop
adcb
in
js
jge
jle
mov
sub
jae
fdivrl
xor
loope
dec
mov
in
push
sbb
scas
xchg
jno
out
mov
in
fsubrl
ret
push
imul
push
add
pop
add
jp
ljmp
mov
pop
push
cli
push
pop
and
outsb
add
fstpl
jbe
aad
pop
int
mov
pusha
inc
imul
and
stos
iret
mov
pop
ljmp
pop
push
cmp
xchg
aam
ret
lret
dec
int3
rorb
addl
test
add
enter
int3
insl
push
fistl
or
out
loopne
jl
rcrl
cli
cld
xor
sub
flds
pop
dec
test
mov
jno
mov
xlat
sar
inc
pop
push
lods
icebp
out
stos
mov
adc
les
push
mov
nop
fisubl
pop
cmpsl
push
mov
imul
notl
jle
push
sub
mov
xor
femms
lds
into
lods
shlb
dec
in
fdivrs
div
test
dec
lock
fnstcw
popa
lcall
adc
adcl
popf
cmp
push
jne
push
imul
mov
pop
sbb
sub
mov
gs
push
inc
jp
inc
nop
stc
jae
addr16
push
out
and
outsl
jmp
adc
cmpsb
add
sub
imul
xchg
mov
ds
dec
mov
rep
push
mov
mov
or
xchg
pop
aad
xchg
dec
and
inc
cwtl
in
sub
insb
clc
movsb
cmp
mov
mov
pop
add
lahf
popa
adc
and
rcrb
pop
and
sbb
rcrl
imul
shll
into
xor
xor
or
xchg
shlb
nop
je
dec
jbe
fcompl
xchg
cmp
mov
aaa
lahf
and
mov
xchg
out
mov
jno
mov
sbb
xchg
or
cs
test
mov
dec
fsubrs
mov
xlat
scas
mov
sub
adc
adc
adc
int
mov
pop
or
sub
fcomps
mov
pop
lahf
fwait
push
push
mov
lods
push
xor
xchg
repz
js
ficoms
xchg
fldl
aas
jae
push
call
je
and
push
test
pop
fsts
adc
cmc
pop
and
jbe
mov
or
inc
lahf
push
testb
and
aaa
daa
dec
and
or
mov
movsb
lea
fidivrs
int3
stos
pop
pop
mov
push
scas
pop
in
mov
test
les
cmp
mov
sub
out
or
push
outsl
sbb
cmpsb
sub
inc
idivl
popf
lock
repz
or
sahf
mov
fistpll
test
jl
adcb
or
and
sbb
dec
xchg
mov
lds
or
push
xchg
cmp
mov
hlt
add
insl
inc
dec
into
pop
pop
push
add
mov
dec
pushf
lock
cmp
cwtl
mov
adc
movsl
mov
push
ljmp
aas
and
push
dec
pop
stc
loopne
das
test
call
jecxz
sbb
or
ds
fcoms
jg
ret
sbb
dec
jbe
pop
insb
sub
xor
sub
and
rcl
push
xor
or
in
cmpb
out
es
rcrb
mov
xlat
jg
in
bound
mov
les
fldt
leave
outsb
jg
jbe
sub
inc
jo
or
push
or
int3
test
popf
adc
jns
jle
and
cs
xchg
pop
fstp
mov
sub
inc
test
push
gs
xor
cmpsl
mov
loop
lret
insl
xor
inc
popf
imul
xchg
pop
rorb
push
cmp
cmp
and
pop
test
ret
stos
clc
and
xchg
or
add
into
popf
pop
adc
adc
push
adcl
add
stos
lcall
fists
cld
and
add
fisttpll
roll
xor
loope
clc
mov
jbe
sbb
ljmp
movsb
shrb
inc
and
xchg
inc
shll
mov
pop
pop
cmp
mov
lods
seto
data16
adc
arpl
fwait
repnz
std
stos
adc
cmpsl
or
sbb
es
fadds
scas
mov
ljmp
das
test
mov
push
push
xorb
test
xor
outsb
cmpsb
xchg
mov
add
cltd
and
sbb
sahf
pop
ror
les
or
jne
sub
jle
scas
mov
movb
dec
rcr
daa
roll
pop
mov
jno
fiaddl
out
mov
adc
rcrb
inc
mov
das
aas
sub
nop
jecxz
pop
adc
loopne
into
stos
mov
fbstp
jle
mov
dec
jecxz
xor
inc
jge
push
sub
jno
pop
stc
insl
aad
xor
jns
fsubrl
sbb
cwtl
xchg
mov
mov
dec
pop
cltd
pusha
imul
outsl
jl
push
cltd
subl
cmpsl
std
push
lods
pop
add
xchg
push
dec
fneni(8087
stos
pop
xor
shlb
and
test
popa
sub
adc
into
inc
cmp
pop
fs
adc
out
dec
mov
int3
xor
popf
mov
add
add
imul
and
lods
xor
push
or
sbb
test
jae
aad
cmpsb
jno
mov
movsb
mov
sbb
stc
jne
mov
repnz
jmp
mov
mov
outsl
xchg
xor
lods
dec
mov
push
push
dec
cli
cmp
test
test
xor
imull
jno
stos
cmp
sbb
cmpsb
pop
sub
and
mov
cmp
leave
dec
jl
ret
stos
mov
mov
dec
test
mov
mov
and
mov
ss
testl
dec
imul
mov
testl
iret
add
cmpsb
mov
xchg
mov
faddl
dec
stc
dec
fdivrp
dec
jnp
aas
or
xchg
mov
imul
rorl
or
cmp
pop
xor
loop
sbb
lock
daa
add
insb
out
xchg
jp
mov
scas
or
out
sti
push
xchg
push
bnd
aam
pusha
jo
add
pop
cmpsb
leave
pop
adc
jne
mov
loopne
iret
jmp
inc
dec
into
sahf
pusha
mov
insl
adc
push
mov
imul
test
in
fwait
jl
dec
xor
cwtl
imul
cli
call
popf
or
hlt
sbb
std
loopne
add
pop
inc
leave
rolb
inc
sbb
sbb
ds
ja
lret
cmpl
jl
mov
mov
and
mov
and
cltd
stos
roll
xchg
shr
outsl
cmc
sbb
xor
jbe
je
sub
inc
mov
out
ja
iret
lea
clc
stc
fcmove
pop
ja
inc
int
outsl
outsl
fstps
jb
mov
mov
xchg
xchg
rcrb
or
push
shlb
push
inc
cmp
addr16
sub
pop
cmp
mov
push
xchg
fnsave
xchg
sbb
dec
dec
add
daa
or
ret
jns
lods
sbb
add
imul
mov
adc
push
jg
bound
mov
cmp
stc
cli
aaa
inc
or
jp
subb
pop
xor
add
xchg
std
loop
ret
popa
push
int3
xor
pop
mov
adc
jg
sub
pop
rol
sbb
scas
or
jae
and
cmp
mov
jecxz
and
lds
jne
sbb
mov
push
xor
sahf
jns
cwtl
mov
mov
xchg
jbe
icebp
add
cmc
jge
out
pop
test
jbe
sti
andl
ds
cltd
cmp
aaa
add
mov
subb
arpl
rorb
fimuls
pop
ljmp
add
popf
test
jns
js
insl
dec
inc
pop
scas
icebp
ljmp
loope
shl
ds
dec
cmp
push
mov
outsb
and
add
and
dec
cmp
stos
mov
jge
push
mov
dec
and
add
mov
sti
xchg
xor
dec
sub
stc
and
in
and
ds
in
sti
or
or
in
jg
shrl
cs
and
ja
lods
push
add
nop
jns
fiadds
xchg
mov
dec
add
imull
mov
dec
inc
pop
mov
cmpsl
push
sub
ret
cltd
mov
jno
aad
jecxz
add
inc
xchg
and
inc
repnz
mov
imul
fs
hlt
dec
pop
jo
mov
xor
pusha
xor
cmp
pop
es
out
pushf
scas
mov
jl
jmp
mov
dec
jge
inc
jns
fildl
das
stos
in
or
scas
test
lods
push
or
dec
inc
cmp
mov
xor
iret
cld
jp
into
loopne
popa
int3
mov
imul
or
mov
into
aam
pop
into
fsts
andb
sbb
test
cli
push
in
dec
xchg
sbb
fs
stos
or
mov
xchg
jno
mov
mov
jp
es
test
rcrb
adc
ss
rcrl
enter
dec
negl
pop
insb
jno
dec
fwait
imulb
out
mov
adc
sub
into
sarb
mov
daa
cmpsl
push
das
pushf
push
or
xchg
addl
aam
cld
stos
addb
in
xor
stc
aas
add
jge
pop
mov
push
mov
mov
mov
aaa
and
shrl
dec
div
xchg
mov
push
push
xchg
dec
inc
jb
inc
stc
xor
loope
add
shr
mov
ja
int
rsqrtps
pusha
inc
mov
stos
adc
dec
xor
sub
sbbb
and
jecxz
and
lock
adc
xchg
mov
aaa
imul
inc
outsl
jge
in
cmpb
jp
sti
in
into
jl
outsl
repnz
jge
add
jb
mov
push
clc
add
mov
mov
imul
ja
xor
sub
lret
imul
fiaddl
dec
jmp
ret
cld
int
push
cmp
hlt
xchg
ljmp
inc
xchg
or
pop
testl
xchg
pop
xchg
and
in
mov
push
cmp
or
mov
xorb
jnp
sub
xor
les
jb
xor
adc
xchg
mov
push
cmp
je
das
mov
test
mov
pop
jnp
sbb
inc
lock
cld
push
into
ret
inc
mov
andnps
loope
adc
dec
adc
clc
dec
sub
and
ja
sbb
std
andl
mov
push
xchg
sbb
pop
mov
pop
xlat
popf
or
push
je
out
rol
xchg
shrl
and
fildl
inc
xor
test
outsl
loopne
ret
ss
inc
cld
push
fistl
mov
jnp
mov
scas
push
rcl
pop
xor
out
lock
fsub
lret
repz
cmp
sbb
inc
sub
jle
bound
js
cmc
mov
mov
dec
push
dec
mov
cwtl
inc
cmp
sub
or
xchg
xor
adc
pop
loopne
sbb
inc
mov
and
xchg
sub
fildl
xchg
jmp
mov
in
pop
shr
mov
adc
ss
sub
out
jg
cwtl
scas
lods
iret
add
pop
or
jbe
dec
outsl
fstpl
add
or
mov
sbb
jne
dec
insb
arpl
ffree
pushf
cmpb
cmp
push
mov
fidivrl
push
addb
leave
nop
xor
jle
xchg
cmp
or
mov
test
mov
cmp
push
cmp
iret
cmpsb
lret
push
inc
inc
xchg
aam
mov
push
out
fcomi
ljmp
int3
cmp
imul
arpl
insl
shlb
lods
mov
fxam
fadd
mov
or
shrl
cmc
adc
jle
xchg
popa
lret
test
jmp
fadds
and
fstp
scas
and
mov
sub
and
les
inc
aaa
push
nop
mov
sub
pusha
call
and
mov
fmulp
dec
popf
mov
xchg
dec
cmpsl
je
aam
outsb
pusha
mov
adc
js
aam
dec
add
push
in
dec
lods
into
pop
and
inc
jp
mov
aas
or
btr
push
sub
out
imul
ficoml
pusha
daa
mov
mov
or
push
xchg
insl
mov
stc
inc
sarl
dec
push
repz
add
leave
popf
xchg
jl
lahf
dec
rorl
push
mov
mov
test
imul
imul
test
inc
sbb
rol
in
repnz
ljmp
mov
pop
adc
scas
dec
lret
mov
mov
jl
cmp
push
enter
lea
sti
incb
nop
xor
in
inc
jns
icebp
pop
sbb
adc
sbb
lahf
insb
addr16
push
sbbb
fldt
ret
adc
xor
xor
cmp
jecxz
push
add
fisubl
lods
xor
fiaddl
dec
daa
sub
sub
dec
sub
and
jge
and
icebp
arpl
mov
fxch
mov
fld
int3
adc
int3
data16
rclb
dec
push
insl
xor
rorl
pop
std
xchg
testl
push
das
repz
adc
xchg
iret
pop
xor
iret
bound
sbb
or
fnstsw
ss
addr16
mov
imul
mulb
gs
xor
outsl
ljmp
fildl
cmpsb
imulb
xacquire
xchg
loopne
insl
jns
nop
push
mov
mov
push
mov
sti
jne
dec
pusha
dec
jae
mov
aad
dec
fmull
loopne
pop
dec
xchg
push
inc
and
outsb
adc
call
sub
fcoms
sbb
cltd
xchg
rep
cltd
adc
xchg
scas
mov
xor
add
js
cli
dec
and
out
inc
fadd
and
or
addr16
sbb
in
popf
jl
mov
or
ret
imul
sub
pop
ret
add
dec
mov
out
xlat
test
cs
adc
sub
cmp
push
iret
dec
mov
fnstcw
push
or
mov
ljmp
jno
cmpsl
sbb
leave
in
sub
dec
pop
adc
and
jp
pop
mov
sub
xor
xchg
in
inc
inc
test
les
gs
push
jg,pt
mov
jne
push
and
stc
pop
mov
lcall
add
pop
loopne
cmp
nop
faddp
pop
push
inc
xchg
pop
push
and
mov
jmp
cmpsl
jle
cmp
scas
roll
cmp
xlat
in
sub
testb
lahf
sbb
sti
inc
mov
xchg
jns
int
test
popf
in
cmp
xchg
sbb
cmp
enter
push
jg
or
dec
outsl
std
ret
mov
pop
imul
and
xor
pushl
and
cwtl
jl
enter
negl
sbb
cmc
push
icebp
add
ljmp
pop
dec
icebp
jno
roll
cltd
lods
dec
fistpll
sarl
inc
popa
jmp
jns
add
mov
mov
repnz
arpl
push
arpl
dec
pop
call
xchg
dec
fisttpl
jae
pop
ds
lods
adcb
or
ss
or
dec
jae
rcrl
shll
jnp
aad
fisubs
push
sti
stos
xor
xorb
ds
mov
push
int
outsb
mov
in
mov
test
stc
popf
clc
mov
push
jnp
call
xor
adc
xor
repnz
push
les
loope
es
aas
adc
or
outsl
hlt
mov
dec
mov
clc
pop
outsb
xchg
sbb
push
jns
mov
fcmovnbe
xor
cmp
inc
lret
push
lods
push
mov
ret
push
push
shl
inc
mov
mov
andb
clc
scas
loop
lods
add
out
outsb
aas
xor
xlat
mov
sub
mov
sub
cmp
dec
loope
les
push
es
fldt
test
mov
add
ret
movsl
add
dec
outsl
popa
pop
sub
loop
mov
pop
adc
pop
mov
icebp
sti
fdivs
add
lea
cmpb
outsb
sbb
jecxz
cs
sub
fsubrp
pop
test
xchg
jmp
cmpsb
and
ja
pushf
lret
fbstp
das
aaa
pop
es
jmp
aam
dec
pop
or
push
sbb
mov
jmp
lret
mov
mov
and
or
arpl
jle
inc
mov
pop
jns
dec
xlat
cmc
loopne
jmp
dec
cs
xchg
repz
push
pop
pop
clc
mov
pop
repz
xchg
popa
fidivrs
andl
repz
fisubl
test
ds
jge
add
pop
ljmp
inc
orb
insl
sub
iret
xor
shll
out
inc
xor
hlt
movsl
imul
sbb
add
inc
outsb
lret
popa
movsb
xchg
adc
stc
dec
out
sti
add
subb
or
jno
aam
cli
xchg
mov
sbbb
and
sub
je
clc
fs
lds
push
and
push
xchg
inc
xchg
jecxz
pop
sbb
cwtl
sub
enter
and
cltd
ficompl
ficompl
push
mov
xchg
divl
xor
fidivs
xchg
pushl
jecxz
adc
je
adc
dec
imul
out
daa
fscale
into
jg
sahf
jecxz
push
roll
out
sub
or
test
ss
pop
jle
dec
stos
push
icebp
cmp
popf
or
xchg
outsb
fiaddl
arpl
push
jl
fs
out
popf
mov
pop
dec
sbb
mov
out
pop
mov
mov
pop
adc
sahf
mov
cmp
or
rorl
dec
cs
fdivrl
cmp
add
mov
add
arpl
sbb
mov
gs
test
loope
je
pop
mov
rcll
das
mov
jbe
iret
adcl
mov
jmp
loope
mov
jb
xlat
fstenv
sbb
sbb
data16
mov
lahf
into
loopne
test
dec
movsb
dec
sub
icebp
cmp
mov
test
mov
jmp
push
ret
inc
into
and
or
inc
push
jmp
pop
cmc
lret
dec
sbb
sbb
lahf
pop
fsts
inc
pop
loop
xor
nop
mov
lds
imul
test
mov
lret
lds
rep
add
dec
jl
xlat
push
cld
les
pop
dec
popf
test
and
aaa
mov
aas
pop
mov
scas
or
pop
mov
or
mov
testl
test
push
adc
push
and
call
xchg
outsb
aas
addr16
xchg
loop
ljmp
inc
or
inc
xchg
and
mov
jg
push
push
xor
insb
lea
jbe
shrb
stc
mov
lcall
std
hlt
jbe
js
add
mov
clc
sub
mov
icebp
mov
std
mov
and
jmp
ljmp
mov
scas
lcall
lds
adc
or
dec
xchg
push
cmp
adc
in
xorl
lret
and
test
mov
cmp
loop
jle
into
mov
loopne
incl
fsubrs
cmp
mov
imul
push
mov
xchg
iret
test
enter
insl
aam
mov
js
cs
inc
sbb
push
cmp
pop
sti
sub
mov
and
mov
xor
out
pop
mov
inc
lcall
cmp
aaa
push
add
imul
into
add
lods
xlat
test
mov
lods
xor
jae
sbb
int3
aas
ret
ss
pop
loope
push
dec
fnstcw
push
fwait
xchg
sbb
dec
lcall
pop
adc
pop
clc
stc
add
cs
popf
or
inc
js
mov
and
jmp
inc
jns
sarl
outsb
stc
inc
es
pop
shll
mov
fs
pop
cld
mov
mov
cmpsl
push
mov
negl
test
das
inc
std
ja
cmpsl
cmp
divb
insb
mov
fstps
pop
shlb
int3
mov
pop
cmc
ret
in
pop
xadd
jecxz
add
pop
pop
je
fdivr
push
sub
nop
cwtl
cs
ror
stos
cmp
or
pushf
adc
adc
jnp
fcom
mov
fimuls
popf
cmp
into
insb
out
add
in
popf
gs
pop
mov
sub
lret
addr16
sub
add
push
pop
mov
jnp
shlb
mov
or
fwait
xor
inc
pop
mov
test
push
inc
ret
ret
shr
je
jne
loope
into
repnz
push
or
cmp
or
mov
fstpl
mov
pop
cld
icebp
inc
xorb
xchg
ret
fildll
lret
adc
sahf
mov
stos
out
cwtl
dec
pushf
sbb
push
jae
add
push
dec
cwtl
mov
lcall
insb
in
cmc
inc
mov
fcmovb
sub
jmp
sbb
repz
cmp
jge
clc
insb
add
in
push
jle
addb
out
push
add
cmc
fwait
mov
addb
dec
test
adc
dec
mov
out
stos
fistl
fs
fiaddl
xchg
aaa
adc
push
sarl
sbb
or
mov
cmpsb
and
mov
mov
mov
and
addr16
xor
adc
xor
jnp
adc
pop
rol
xchg
scas
pop
or
ds
jmp
push
push
sbb
pop
popf
pop
mov
sahf
jno
pop
ss
mov
outsl
pop
pusha
nop
call
je
aaa
mov
xchg
fildll
push
out
dec
cmp
clc
mov
cmp
xor
push
inc
xchg
or
repnz
sbb
clc
mov
dec
cli
cmp
jo
aad
inc
mov
dec
push
outsb
mov
adc
adc
lock
bound
jno
inc
fwait
sbb
push
decl
test
cmp
dec
jmp
insl
adc
ret
sbb
jmp
jne
mov
lds
sar
ficoms
jecxz
popa
or
fsubrl
cmp
popf
push
int3
out
xchg
ret
lods
in
test
xlat
adc
pop
fldenv
fdivr
leave
push
lcall
rorl
pop
scas
inc
shl
mov
jle
push
inc
negl
vpsraw
sti
enter
push
rcrb
insl
iret
movsl
pop
push
test
int
and
pop
push
rorb
sbb
test
push
xchg
out
jle
sub
insl
fmul
mov
mov
insl
hlt
inc
mov
outsl
andb
int3
or
sahf
xor
jg
pop
ja
lret
mov
jae
jmp
aaa
rol
jo
add
mov
pop
dec
icebp
shll
movsl
mov
jecxz
cli
jbe
int3
or
push
mov
and
ljmp
sub
mov
jg
adc
fisttps
pop
mov
ljmp
mov
sub
aaa
cwtl
iret
bound
push
ret
int
dec
jne
inc
pusha
cs
jg
addr16
mov
imul
rorb
iret
fistpll
lret
push
aas
movsb
fimuls
jle
xor
xor
pop
dec
je
fnsave
xchg
sti
mov
push
mov
jno
clc
mov
mov
push
or
shlb
and
jbe
pushf
and
jmp
sbb
cld
adc
jl
sbb
cmp
and
add
cmp
inc
ljmp
hlt
xchg
fsts
inc
sbb
hlt
adc
out
pop
push
inc
dec
adc
mov
jl
mov
enter
push
jae
ret
add
dec
xlat
jge
mov
sub
pop
jl
push
adc
push
mov
fcomp
lods
pop
sub
arpl
add
adc
inc
add
ds
jge
mov
sbb
dec
or
sub
mov
and
xchg
mov
js
rclb
add
pop
stc
in
or
cmp
mov
or
hlt
data16
stos
les
loop
popa
icebp
xchg
sar
pushf
or
outsl
sub
add
lds
or
lea
jmp
loopne
hlt
stc
jg
sbb
out
insl
rcll
mov
outsl
adc
in
dec
xchg
inc
lcall
add
pop
and
ror
scas
xchg
mov
out
rcll
mov
int3
jo
out
mov
shl
sbbl
je
out
fbstp
jns
mov
xchg
push
sub
sub
sub
hlt
ss
adc
adc
xor
mov
adc
stos
dec
jbe
bound
mov
cmp
cltd
pop
test
mov
pop
leave
sbb
mov
dec
repnz
add
mov
pop
mov
out
lahf
jnp
mov
cmp
or
ret
xlat
mov
fldenv
fisubl
mov
push
add
roll
nop
fidivs
mov
pop
out
pop
fwait
pop
mov
sub
push
mov
pop
cwtl
xor
adc
mov
ja
cmpsl
fidivrl
nop
insb
sub
test
outsb
adc
jno
stos
adc
out
inc
cmpsl
fcom
ja
push
cwtl
sbb
or
lahf
jmp
push
pop
in
or
cwtl
push
dec
jae
ret
in
adc
add
sti
cli
mov
mov
jae
jecxz
lret
stc
cmc
jb
or
cmp
rcr
sbb
push
ffreep
cmp
xlat
lock
stc
pop
lret
cmp
loop
test
into
pop
and
mov
clc
cmpsb
sub
in
pop
lods
mov
push
hlt
mov
mov
adc
cmpb
adc
fcoml
clc
inc
das
dec
fcmovnbe
imul
adc
lahf
dec
mov
push
call
inc
add
xchg
mov
jnp
lret
pusha
pop
bound
icebp
mov
jns
lret
inc
dec
pop
push
call
hlt
and
pop
in
xchg
xor
loope
stos
ds
ss
hlt
push
cmp
dec
nop
lods
sub
imul
lcall
js
ss
in
xor
push
jp
fwait
sbb
xor
cltd
xchg
mov
mov
cs
jbe
sbb
pop
inc
push
mov
loop
and
les
lret
lret
xor
punpckhbw
and
mov
push
cmp
xchg
ss
jle
stos
ror
scas
lods
arpl
incl
or
pop
push
jb
push
repz
mov
outsl
mov
inc
pop
sarb
xor
std
xor
scas
hlt
sbb
mov
inc
fstps
mov
sub
lods
cltd
xor
ret
inc
jecxz
inc
push
adc
iret
bound
ljmp
xchg
mov
sub
inc
test
enter
arpl
inc
jns
roll
push
mov
jns
std
imul
or
scas
sub
mov
ret
nop
sub
xor
mov
enter
push
jo
lea
shll
imul
adc
xchg
jb
lds
inc
dec
adc
lea
leave
add
xchg
add
inc
jnp
push
popa
adc
ja
rolb
outsb
into
stos
loope
jl
es
ret
and
push
mov
sub
pop
stc
pop
popl
or
lock
in
sti
popa
pop
sub
cmp
ds
or
std
insl
pop
cmpsl
mov
pusha
data16
dec
cmc
stos
jb
xchg
lcall
out
mov
mov
adc
in
lods
sti
nop
jo
mov
prefetch
or
out
xchg
add
pusha
or
xchg
lods
xchg
mov
mov
testb
popf
fs
mov
test
mov
mov
outsl
loopne
jb
icebp
add
and
dec
xlat
pop
sub
cmc
aas
xchg
jl
sbb
add
jnp
stos
add
repz
popa
mov
xchg
xchg
push
movsb
xchg
fiadds
adc
mov
sbb
das
inc
add
push
add
scas
xchg
lcall
sbb
add
inc
mov
mov
cmp
mov
popf
addb
sti
icebp
mov
rorb
xchg
mov
cli
test
inc
fiaddl
dec
cmp
inc
fs
loop
incl
jmp
rcr
add
and
xchg
jae
and
dec
iret
shll
incl
sarl
rclb
ret
or
sub
sub
pop
push
ret
or
cwtl
pop
imul
ja
ret
xor
popf
loope
loop
nop
xor
adc
xlat
jb
mov
clc
xchg
push
sbbb
gs
fcom
addr16
or
push
cmp
dec
ret
mov
gs
pop
in
jecxz
inc
dec
mov
adc
fldt
xor
sahf
fsubrl
fdivrl
mov
sbb
cltd
or
js
sahf
imul
mov
cmp
cmp
cmc
je
mov
orb
and
add
mov
aas
mov
sub
mov
and
arpl
pusha
lret
xchg
shl
xchg
push
shrl
nop
mov
mov
mov
jae
and
fcoms
jb
inc
xor
out
lret
inc
cs
mov
movsl
adc
mov
xorl
clc
cwtl
leave
out
and
mov
mov
cmp
ds
sub
faddp
mov
leave
push
outsb
fcomi
cmp
add
pushf
mov
pop
xchg
ffreep
push
in
or
pop
call
dec
pushf
fisttpl
and
loop
push
xor
mov
stc
mov
sub
push
mov
stos
loopne
mov
adc
jecxz
lcall
xchg
jae
jnp
imul
insl
js
test
mov
add
scas
cli
xor
pop
sbb
adc
or
mov
add
xor
fwait
sub
ficoml
cmp
dec
xor
pusha
mov
bound
cmp
shl
or
dec
xchg
inc
lret
sbb
mov
mov
lahf
lahf
test
xchg
pop
std
ljmp
dec
sub
shl
lods
popf
inc
cld
pop
loopne
mov
cltd
jae
add
lds
cmp
lods
mov
pusha
inc
add
xchg
dec
add
add
stc
scas
sub
psadbw
xchg
jnp
bound
in
cmc
mov
stc
pop
cvtdq2ps
pop
orl
jl
insb
cmp
push
cmp
mov
out
pop
in
dec
and
dec
dec
xchg
aam
shl
cltd
push
mov
sahf
and
cmp
push
je
or
inc
nop
inc
mov
add
fdivrs
push
shrl
outsb
ljmp
mov
sub
push
dec
pop
dec
jnp
inc
cld
xor
sub
fnstenv
add
jno
sub
arpl
jmp
push
rorb
ss
es
in
jne
mov
fmuls
test
out
out
xchg
cmpsb
mov
pop
mov
iret
sub
add
dec
jp
enter
fadds
mov
movl
aad
lret
test
jno
adcl
add
or
or
sbb
add
sub
cmpsb
add
hlt
mov
mov
add
jle
aad
push
fidivs
mov
adc
xchg
insl
repz
aas
loopne
add
mov
pop
test
pushl
outsl
lods
cmp
cmp
mov
ja
inc
mov
push
mov
ja
shrl
ja
hlt
sbb
notl
loopne
adc
dec
lock
pop
xchg
cmpxchg
mov
xor
push
adc
into
leave
push
mov
add
fdivrl
mov
cmp
fisttpl
jb
jns
jge
or
fsubl
cmp
mov
stos
ljmp
scas
enter
add
test
mov
pop
std
sti
stc
lds
mov
imul
xchg
cmp
test
flds
clc
adc
hlt
imulb
test
aad
or
inc
pop
xor
imul
pop
cmp
inc
inc
in
cltd
and
inc
cmpsb
push
mov
adc
aas
jns
or
fmulp
adc
add
loopne
jecxz
fucom
int3
sbb
ljmp
adc
fwait
xchg
mov
sbb
popa
hlt
loope
shll
es
std
adc
push
test
inc
or
inc
insl
mov
add
push
inc
lds
xlat
lds
mov
aam
push
mov
fcoms
push
and
mov
es
or
dec
loopne
pusha
and
dec
std
adc
aam
lods
lods
jae
mov
rcl
lret
inc
loopne
sbbl
and
mov
scas
loope
xchg
push
adc
or
mov
mov
mov
iret
test
cmp
sub
test
ja
imul
outsb
inc
and
sarb
shrb
or
mov
out
js
xor
sub
jl
cli
sahf
loop
xchg
popf
out
das
sub
cmpsl
movsb
mov
fwait
inc
xchg
and
or
sub
ret
es
xchg
xor
jge
adc
mov
or
cld
sub
xor
lret
xor
stos
xchg
cmp
push
dec
movsl
gs
xor
mov
push
jno
out
xchg
cmp
dec
lock
sahf
push
repz
pushf
pop
inc
cmc
pusha
jmp
mov
jle
jb
push
ljmp
xor
pushf
das
jle
orl
mov
inc
add
jle
or
or
bound
sub
xor
outsb
mov
inc
insb
sub
jnp
movsb
in
inc
add
push
clc
shrb
or
mov
icebp
adcb
mov
push
movsb
xchg
pop
xchg
pop
add
outsl
rorb
push
test
repz
movsl
fisttpl
addr16
in
pop
fstpt
scas
pop
pop
popa
jmp
lahf
jp
xchg
pushf
mov
aam
mov
adc
and
push
bound
das
js
into
mov
lret
mov
push
jbe
shll
xor
testb
pop
or
xchg
cmp
lds
jo
pop
repz
std
push
lods
pushf
aas
loope
out
andb
xchg
out
lcall
xor
push
adc
pop
mov
or
lahf
pop
mov
push
xor
add
jg
jnp
push
mov
mov
ljmp
pop
and
test
xor
cmp
int
or
xchg
rolb
and
cwtl
sbb
mov
pop
scas
adc
sbb
adc
jecxz
mov
ficoms
leave
and
xchg
sbb
mov
jmp
out
into
loope,pt
inc
shrl
and
dec
negl
cmpl
mov
xchg
pop
out
mov
imul
das
xchg
je
dec
jno
xor
dec
xchg
cltd
push
sub
mov
int3
ds
sar
xchg
pusha
jns
mov
and
sbb
aas
nop
out
out
cmpsl
mov
sbb
lahf
cwtl
push
shll
mov
js
or
popa
xorb
ljmp
adc
mov
es
jnp
idivl
xor
cmp
std
vpaddusb
sbb
pop
mov
and
rolb
testb
das
xlat
mov
xor
cld
mov
mov
inc
movsb
mov
pop
or
scas
test
call
adc
daa
shlb
adc
fmull
xor
dec
aaa
push
mov
subl
inc
scas
jb
aaa
mov
into
xchg
sbb
push
clc
dec
cmp
cmc
and
jl
cmp
stos
les
out
jmp
lahf
test
fidivl
jmp
mov
sbb
loopne
stos
adcl
jge
pop
mov
call
push
xchg
mov
or
push
adc
rcrb
cs
jl
add
aad
cmpsb
xor
adc
jae
out
shlb
std
cmp
into
fs
mov
sub
pusha
sti
lock
jmp
lret
mov
insb
mov
test
pop
lods
out
push
loope
pop
dec
dec
out
orl
and
push
scas
scas
push
sarb
mull
filds
and
and
inc
xchg
iret
fs
scas
out
xor
aaa
aam
imul
in
clc
cwtl
or
outsb
stos
iret
or
cmpb
mov
xor
loope
outsl
inc
sub
pop
add
ficoml
mov
or
and
lea
sahf
pop
xchg
gs
pop
sbb
jp
iret
or
test
jmp
cmpsb
sbb
pop
push
test
sbb
sahf
insb
jl
test
and
enter
fdivrs
push
repnz
xchg
in
sbb
mov
sbb
push
cmc
call
adc
fisubrl
ds
loope
xchg
xor
push
loope
push
mov
xlat
mov
inc
inc
mov
jge
stos
adc
gs
es
xor
sahf
jmp
mov
sub
iret
xchg
dec
je
je
adc
add
or
lods
scas
fcomi
out
dec
or
pop
imul
jae
hlt
daa
sbb
mov
loopne
cmp
lods
popa
and
lods
hlt
sub
test
es
xchg
mov
test
in
lods
call
lods
jge
lret
jno
into
and
filds
inc
pop
sbb
add
xchg
push
sub
mov
arpl
in
arpl
cmc
loopne
and
or
lea
push
sti
dec
push
pop
into
push
sub
add
sbb
out
stos
dec
int
pusha
cs
sub
pop
ret
jne
cltd
lret
cmc
jnp
fists
sub
xchg
outsl
shlb
or
aad
lret
filds
mov
lret
scas
push
xor
mov
push
and
leave
lahf
movsb
adc
sub
and
jno
push
ds
lods
jp
fs
lahf
sti
lahf
xor
mov
imul
lcall
mov
sahf
ret
das
jae
dec
pop
xor
xchg
pop
jb
movsl
and
and
jge
pop
in
lret
cwtl
subb
ljmp
cmp
push
sti
add
sbb
xchg
push
loope
mov
rol
xchg
push
icebp
xor
jns
dec
out
sahf
imul
dec
push
pusha
mov
inc
mov
arpl
mov
cmp
push
jno
mov
test
cli
ficompl
cmp
push
sarb
or
lret
cmpb
rorb
mov
and
xchg
and
push
jp
adc
outsl
inc
hlt
data16
enter
movsb
or
lds
in
mov
aaa
lds
add
jle
adc
data16
test
sbb
shll
xor
pop
scas
ljmp
outsl
inc
push
addl
mov
or
mov
in
aad
mov
aam
sub
sbb
push
mov
jp
iret
dec
pop
out
inc
cwtl
call
aaa
sbb
sub
ds
sub
and
popa
arpl
mov
push
add
fidivl
fsub
sbb
out
shll
mov
cltd
mov
popf
scas
push
test
dec
pop
adc
enter
lock
inc
pop
loope
jge
sbb
xor
or
or
xor
cmp
push
xor
pop
cmpsl
fisttpll
nop
fisubrl
and
pushf
stos
mov
icebp
out
out
jmp
pop
pop
xor
sbb
loope
xor
mov
out
push
shrl
and
jp
clc
into
or
mov
jae
cwtl
out
addr16
push
iret
pop
pop
or
mov
mov
movsb
loopne
mov
sbb
es
fisttps
mov
in
popl
dec
or
push
inc
xor
sti
stos
mov
dec
adc
js
xchg
divl
daa
jbe
dec
fists
xchg
es
aaa
xor
inc
lcall
ret
xchg
sub
movsb
fstl
sub
aaa
mov
xor
flds
or
sbb
insl
mov
out
mov
cmpsb
je
fisttpll
jb
in
sbb
adc
into
jp
mov
mov
and
xchg
xor
cwtl
push
pop
arpl
mov
stos
dec
in
jbe
add
test
cmove
inc
rorb
xchg
lcall
add
mov
xor
sub
jo
jg
mov
sbb
mov
push
jne
pusha
stos
sub
xor
xor
not
pop
pop
in
fmull
push
mov
mov
sbb
cld
mov
jb
fstp
mov
cltd
cmc
test
fnstcw
xor
cmpsl
daa
push
jne
rorl
lcall
or
mov
in
dec
insb
int3
nop
mov
mov
jmp
push
stc
cmc
jae
and
and
aad
ss
or
sub
inc
cs
mov
xchg
aas
popa
xor
mov
and
mov
xor
pop
in
mov
mov
xchg
inc
sahf
lods
mov
push
test
daa
xchg
popa
push
jb
mov
push
jne
push
ret
popa
cmp
jo
daa
mov
mulb
add
push
test
xchg
iret
fwait
dec
movsb
inc
lcall
aam
in
addb
into
pop
cmp
movsl
lcall
xor
pop
fwait
push
or
push
inc
jg
mov
xchg
shrb
xchg
sti
dec
loopne
fdivrl
mov
fisubrl
out
pushf
mov
add
fcmovbe
push
xchg
jno
pushf
cmpsl
or
test
cwtl
xor
cmp
aad
dec
popf
stc
push
shrb
andb
add
std
scas
fidivrs
adc
in
fiaddl
bnd
sub
xor
xor
aas
data16
pop
xchg
mov
mov
and
addb
mov
pusha
pop
imul
sub
jge
or
subb
fstpt
daa
aaa
jl
push
popa
mov
adc
lret
mov
and
add
mov
stc
xchg
out
addb
or
xor
cli
or
pop
lds
jp
test
pop
mov
enter
push
ss
sub
mov
mov
jnp
test
adc
adc
push
fimuls
nop
stos
mov
pop
sub
paddd
ret
xor
xor
mov
jecxz
pushf
push
dec
popf
fidivrs
xchg
push
jns
inc
arpl
pop
rorb
jle
and
decb
fsubs
cli
mov
pop
and
lods
dec
inc
mov
js
mov
gs
sbb
mov
sbb
call
repnz
fidivrl
jb
or
mov
js
sub
ficompl
ljmp
jge
and
pop
dec
aaa
mov
xor
dec
scas
xor
sub
and
stc
xchg
roll
add
and
xchg
addr16
fldt
xchg
fnstsw
or
mov
lcall
outsb
mov
mov
shr
inc
jp
jns
inc
movsl
lds
pop
dec
adc
enter
andl
shlb
rorl
inc
sbb
xchg
ljmp
xchg
dec
cmp
shlb
mov
dec
sub
pushl
popf
icebp
lods
dec
dec
pop
scas
xor
insb
jb
test
cmp
jl
mov
lea
repz
push
jb
out
xor
sbb
sub
ja
sub
test
adc
dec
das
mov
out
into
shr
test
btc
test
jle
jle
jecxz
scas
sbb
push
inc
lods
cmp
inc
sbb
mov
push
pop
and
mov
int3
stos
roll
loop
je
popf
loopne
push
fdivs
in
xchg
fisubs
pop
xchg
out
mov
xlat
jle
lret
add
add
push
pop
jbe
xchg
or
ds
scas
stc
cmpsb
dec
movsl
mov
insb
cli
add
and
das
pop
push
cli
testl
sbb
fwait
mov
mov
jo
dec
add
jae
aaa
xor
out
cmp
inc
ret
push
dec
notl
and
adc
sub
loope
jne
xchg
xor
jo
test
je
adc
xor
adc
xor
sbb
mov
adc
fstpt
std
leave
iret
xor
add
data16
push
add
pop
ja
clc
fildll
mov
or
jmp
aas
loope
lea
jp
sbb
fst
mov
cltd
test
cmp
mov
jle
decl
xorl
imul
mov
sub
jmp
cli
cld
jp
scas
arpl
ljmp
repz
pusha
loopne
lds
mov
aas
jae
xlat
lret
xchg
mov
mov
pop
or
mov
clc
jo
jb
adc
repz
pop
mov
outsl
fsub
adc
daa
fs
pop
inc
cmp
insb
rorl
adc
fisttpl
pop
shll
stc
enter
test
je
lods
mov
xchg
divb
pop
cli
ja
sbb
cltd
and
cmp
push
in
rcl
xor
hlt
outsl
mov
cs
xchg
subl
subb
jle
dec
mov
pop
cmp
fiadds
mov
fidivrl
push
mov
lock
rcr
and
push
ret
jbe
mov
lods
cld
and
xlat
das
mov
lret
pop
adc
repnz
out
mov
mov
movsb
mov
lods
or
and
cmpsb
test
sub
fldl
adc
pop
int3
push
mov
jle
dec
lods
loopne
sarl
cmp
jo
jo
sbb
adc
lret
xchg
sub
aas
jne
xchg
shll
or
mov
rcl
push
add
bound
and
push
jne
jge
push
int
mov
jp
cld
jle
fiadds
lea
mov
push
outsb
fwait
pop
fisubl
sub
inc
add
jge
movsb
and
rclb
mov
inc
sbb
insb
add
hlt
xchg
or
jg
mov
fwait
test
or
or
insb
cmc
xchg
enter
mov
icebp
mov
repnz
mov
push
jecxz
push
arpl
out
push
jnp
sub
and
add
sbb
pop
mov
lcall
jmp
push
pushf
cmc
or
dec
sbb
adc
icebp
fadds
and
add
fidivl
push
ss
or
jl
push
clc
adc
dec
pop
repnz
xchg
cli
adc
adc
pop
adc
xorb
mov
jg
gs
cmp
idivb
cmp
outsl
mov
rcll
gs
lret
mov
add
std
xor
push
inc
mov
andb
dec
push
and
sbbb
pcmpeqb
mov
outsb
jb
xchg
je
lods
imul
shll
aad
fst
cmp
loopne
fidivrs
ret
into
ja
fistpll
fstpt
loopne
repz
mov
xchg
and
cmpsl
xor
mull
orb
and
or
mov
loope
cmp
cmp
insl
loop
clc
in
adc
pop
xor
int3
adc
mov
fdiv
xchg
std
mov
outsb
adc
ljmp
ljmp
rcll
lds
xchg
jge
push
fsubrl
xchg
fadd
cs
popf
cmp
push
push
sti
repz
int
in
mov
dec
iret
or
xchg
push
pop
out
rcll
jb
cmp
adc
ret
lds
cld
idiv
add
rorb
out
and
popa
xchg
mov
mov
jge
push
mov
icebp
fldcw
jge
jp
aaa
dec
out
xchg
mov
addr16
insl
les
mov
sbb
loopne
aaa
sub
imul
pushf
or
test
adc
push
dec
test
and
jmp
sub
dec
push
aas
lcall
addb
mov
xchg
aam
lods
sarb
test
pop
mov
ret
cmc
xor
test
or
aaa
decl
xor
jno
pop
movsl
pop
sti
clc
stos
ja
or
jg
add
cli
inc
xor
loop
insb
popa
sysret
mov
negb
mov
push
sub
sub
xchg
xchg
cmp
stos
gs
pop
lods
sbbl
mov
xchg
push
ss
pop
cs
call
xor
repz
popa
pop
scas
pusha
sbb
dec
push
pop
jae
xchg
dec
mov
adc
ds
sub
outsl
sub
jnp
push
pop
adc
cmc
sub
adc
jne
movsb
adcl
jg
data16
mov
cmp
inc
or
rcrb
push
sub
sub
xor
lcall
std
jmp
mov
mov
mov
insl
add
movsb
fnstsw
std
cmp
or
push
mov
aad
pop
pusha
sub
data16
nop
jle
notb
pminub
add
cmovo
fwait
dec
and
push
adc
push
sbb
call
aad
les
and
pop
das
in
aad
mov
cltd
cmp
arpl
xchg
hlt
rorb
cmp
and
leave
push
mov
mov
cs
cmp
mov
pop
int
test
push
pop
insl
sbb
xchg
clc
push
aaa
inc
cmpsb
mov
dec
lret
cli
mov
gs
push
jno
into
aad
mov
lock
adcl
jno
lds
lods
in
lea
movsb
int3
fs
sahf
push
mov
daa
or
cmp
or
add
aaa
repz
jl
lcall
call
mov
mov
and
adc
xchg
sub
xchg
mov
sbb
inc
xor
lahf
sub
imul
jge
in
push
add
divb
out
mov
mov
cld
adc
jb
loop
aaa
pop
aaa
pop
cmp
test
pop
lea
pop
and
xchg
cwtl
inc
mov
imul
lcall
daa
popf
inc
js
icebp
int3
pusha
inc
xchg
sub
aad
divl
orb
xchg
fbld
sbb
shl
jbe
push
lea
inc
dec
test
jecxz
adc
icebp
pop
stos
scas
jg,pn
jmp
lret
les
adc
sbb
dec
adc
mov
lret
scas
pop
mov
sub
sahf
ss
push
push
int
mov
aam
jl
in
idivl
ror
sti
mov
je
ret
repz
adc
xor
push
sub
lods
cmp
inc
arpl
sub
daa
cmp
outsb
push
push
adc
jecxz
adc
xchg
add
into
loopne
lock
mov
addr16
sub
fidivl
cmpsl
jmp
mov
jge
push
es
mov
mov
or
add
icebp
pop
ret
sub
mov
mov
stos
daa
jge
mov
aas
xor
ljmp
or
js
mov
xchg
xchg
cltd
sbb
mov
jnp
inc
pop
dec
add
mov
out
or
iret
lret
sbb
inc
iret
fmulp
das
lock
add
out
cmpb
xchg
adcb
dec
adc
fildl
clc
push
push
out
loop
add
shlw
pop
sbb
mov
xchg
int3
in
mov
add
pop
pushw
dec
stos
fdivp
pusha
cmpb
xchg
cmp
out
test
mov
outsb
push
and
cs
add
or
xor
push
push
xchg
dec
rcrb
fwait
sahf
sti
scas
xchg
insl
push
cmp
inc
scas
dec
xchg
xor
push
lahf
cltd
push
aas
lahf
inc
mov
push
xchg
shlb
arpl
loope
in
jne
cmp
xlat
and
scas
sub
cli
xchg
ret
imul
test
loopne
or
xor
or
lds
xchg
jecxz
pop
adcl
xcrypt-ofb
cmpsl
sub
mov
sub
stc
sub
popf
aam
dec
or
adc
out
jge
mov
ljmp
outsl
stos
int3
hlt
sbb
into
test
or
in
loop
inc
and
mov
jecxz
std
rcll
mov
sub
stos
push
std
add
ret
add
ret
std
and
popf
add
dec
pop
xchg
pop
test
xchg
ret
xchg
jl
jle
fwait
insb
add
into
cmpsb
addb
int
mov
push
popf
mov
adc
mov
dec
pop
pusha
jo
inc
repz
je
jl
jbe
cmpsb
sbb
cmpsb
test
push
int3
or
mov
mov
xchg
mov
enter
jp
int
insb
xor
insb
addr16
and
mov
or
or
int3
xchg
add
aaa
and
hlt
popf
mov
xchg
push
jmp
push
pop
xchg
movsb
push
dec
sub
popa
dec
inc
in
inc
pop
dec
jne
and
xor
xor
ldmxcsr
sub
test
mov
pushf
cmp
jg
mov
test
xchg
adc
mov
sbb
push
xor
movsb
pop
dec
mov
xchg
pop
pop
mov
lds
pop
fldenv
cmp
outsl
adc
jmp
mov
xor
divl
jge
xchg
push
sbb
std
jecxz
jl
or
addl
xlat
fs
jns
lret
fdivrl
mov
stos
mov
in
mov
in
sub
adc
cmp
dec
or
lea
pop
adc
sub
scas
add
iret
xlat
mov
hlt
pop
fsubrp
orb
mov
mov
nop
test
clc
addr16
iret
or
cmpsb
sti
out
pop
sub
dec
add
cmp
dec
xchg
mov
and
sub
loope
xchg
push
or
roll
hlt
hlt
daa
mov
inc
xchg
adc
xchg
xchg
pop
int3
cmc
mov
test
push
xchg
es
adc
jns
flds
inc
and
fistl
pop
aad
cwtl
or
adcb
mov
ror
dec
in
in
fcomip
cmc
cld
mov
mov
mov
mov
jo
push
mov
leave
dec
adc
in
mov
sbb
sbb
into
shl
sarb
push
and
mov
notl
and
enter
inc
inc
sti
shll
rolb
hlt
pushf
lods
mov
lret
lret
or
mov
sub
jbe
and
xchg
mov
inc
mov
fwait
pop
dec
adc
push
mov
sub
mov
inc
in
and
xchg
imul
adc
xlat
add
lret
cmpsb
xchg
xchg
push
addr16
jge
xchg
or
and
jbe
out
adc
sbb
pop
cmp
add
gs
addr16
test
rcl
pusha
outsb
mov
into
or
pop
push
cmp
repz
adc
shlb
mulb
aad
cmp
pop
div
or
and
mov
push
mov
dec
loop
push
and
test
cmp
push
std
lock
xchg
mov
test
in
xchg
push
out
mov
out
mov
jge
pop
jns
inc
add
daa
pop
gs
inc
das
mov
mov
push
mov
hlt
mov
mov
cmp
xor
mov
add
in
subb
ret
pop
cmp
call
mov
sbb
jns
mov
ds
jmp
daa
push
pushf
leave
add
imul
adc
xlat
imulb
gs
xor
sti
jne
mov
mov
xor
xor
push
jbe
push
adc
sbb
call
inc
mov
mov
jp
push
popf
in
pop
mov
test
push
jae
pushf
or
cltd
insb
jno
push
pop
mov
jo
sub
pop
outsl
mov
xchg
push
mov
cli
leave
and
mov
scas
adc
inc
ss
pop
sbb
or
cmp
and
sub
std
push
mov
mov
lock
bound
cmp
enter
fcomps
pushf
aas
popa
cmpl
cld
add
sti
pop
sub
xorb
repnz
jne
xor
mov
mov
pop
jl
mov
lea
sub
aas
mov
lods
sub
xchg
ja
mov
mov
mov
arpl
dec
rol
fisubrs
push
call
jae
mov
rorb
cmc
xchg
and
pop
outsl
pop
bound
xchg
cmpsl
sbb
repnz
sbb
xchg
lahf
fstps
xchg
in
sbb
fwait
mov
std
jge
cld
push
sub
int3
adc
es
sbb
cmc
arpl
adc
das
lods
inc
enter
imul
dec
arpl
push
sub
iret
push
pop
jp
push
mov
test
stos
push
cltd
sbb
in
cli
in
cmp
fwait
sahf
mov
sbb
cmp
repnz
push
int3
scas
mov
fidivrl
inc
add
dec
insl
mul
push
in
dec
jns
sub
mov
inc
ds
jo
cmp
testb
dec
inc
push
rcll
scas
movsl
xor
adc
mov
mov
test
gs
notb
orl
pop
dec
test
sub
enterw
fiadds
and
pop
mov
imul
pop
iret
imul
cmp
ret
aas
pop
cltd
insb
xor
roll
sbb
insl
mov
jmp
mov
mov
test
imul
and
in
aam
dec
pop
pop
xlat
leave
or
out
roll
mov
pop
mov
subl
outsb
test
sbb
popf
loopne
inc
jmp
daa
arpl
cmp
addl
cmp
lahf
xor
scas
and
cli
sbb
inc
xchg
stos
shl
cmpsl
pop
int
xor
mov
outsb
das
or
out
pop
movsl
pop
subb
pop
cs
mov
mov
pop
dec
or
mov
movsl
push
sub
or
call
pop
rclb
or
outsl
movsb
or
and
inc
mov
nop
mov
fistpl
addr16
notl
out
push
push
cmp
xor
outsl
xchg
fisttpll
and
out
adc
push
ret
cld
pop
mov
inc
dec
xchg
aaa
dec
cs
scas
mov
pop
sbb
icebp
ret
mov
scas
cmpsl
lahf
std
jno
je
mov
mov
pushf
or
cltd
lcall
ret
jnp
mov
sarl
cmp
inc
sbb
or
xchg
xchg
push
test
adc
add
sub
dec
cmp
sbb
inc
movsb
in
cmpsl
ds
xor
aad
jb
mov
out
js
data16
test
pop
mov
lods
jle
sub
inc
pop
jb
movzbl
movsl
fwait
push
inc
lahf
mov
mov
or
ss
mov
ror
jae
adc
mov
mov
and
pop
ljmp
enter
mov
jbe
xor
jp
push
out
scas
repnz
adc
cmp
imul
cs
inc
mov
out
aas
stc
dec
and
adc
leave
or
inc
pop
sbb
push
jns
xor
lahf
scas
jns
pop
pop
jno
rcr
repz
loope
mov
lods
xchg
movsb
rolb
ret
pop
sub
sti
flds
jae
or
ret
pop
enter
repz
in
sti
push
sahf
nop
lret
ret
xor
std
jmp
pop
sbb
push
xchg
xchg
mul
pop
fucomp
das
sub
pop
and
outsl
cli
pop
mov
loope
inc
pop
aaa
mov
jl
xor
jecxz
mov
imul
xor
out
inc
aaa
pop
lds
pusha
mov
sub
jecxz
test
rcrl
fldl
jno
xchg
mov
inc
jns
sbb
ss
nop
out
shlb
aas
xchg
push
jo
orl
outsl
cmp
int
loop
cmpl
pusha
push
or
xlat
or
stc
pop
lock
jo
faddl
add
repnz
rclb
push
leave
jnp
mov
popf
loop
mov
iret
jne
daa
jle
rorl
jmp
mov
mov
cs
push
pop
push
mov
ret
fs
les
mov
outsb
xor
jno
mov
inc
lret
fldt
jge
inc
inc
leave
cmp
movsb
fbstp
or
mov
xchg
popa
and
push
pushf
and
xor
mov
sti
popa
aam
sub
mov
mov
push
js
sub
dec
jg
xchg
dec
mov
out
sub
stos
in
imul
aaa
and
xor
jno
ficoml
add
inc
movsl
sahf
setl
add
xchg
mov
out
xchg
sub
sbbb
adc
test
dec
sbb
pusha
icebp
dec
and
mov
mov
testl
clc
aas
mov
lahf
scas
and
jmp
mov
xchg
push
xor
dec
fbld
sarb
lea
out
adc
shll
xor
addl
and
fs
or
cmp
aaa
outsb
in
pop
rclb
cwtl
rep
push
cmpsb
jnp
sub
mov
jp
jae
jle
in
lds
mov
mov
add
insb
int
fimull
test
loopne
inc
pop
and
movsl
xor
cmpl
add
inc
push
jecxz
dec
push
pushf
scas
hlt
push
xor
imul
or
push
and
xor
xor
push
or
mov
lret
mov
ljmp
hlt
ljmp
sub
testl
mov
dec
push
pop
fldl
icebp
fs
insl
xchg
sbb
xor
pop
inc
ficoms
inc
fldl
mov
ret
jb
jbe
icebp
pop
fdivrl
lods
les
mov
icebp
jmp
sub
xor
inc
lcall
movsl
xchg
sbb
lods
dec
out
cmpsl
popa
cld
mov
call
inc
jne
sub
leave
orl
or
mov
rorb
dec
aaa
in
pop
add
inc
cmp
out
loopne
lret
jne
mov
inc
repnz
jmp
or
lock
shrl
inc
jnp
jno
jnp
std
cmp
or
push
test
stos
xor
aaa
cmpsl
inc
sbb
mov
lahf
in
push
push
fwait
add
mov
jle
cmc
rol
mov
pop
mov
shll
fnstenv
ss
cmp
xchg
shl
imul
xor
jecxz
add
cmp
cmp
sbb
pop
fnstsw
dec
scas
rcll
shlb
ljmp
pop
cld
sti
cmp
dec
cmp
mov
outsl
data16
loop
or
loope
js
arpl
ja
mov
testl
iret
push
lods
sub
ja
or
inc
mov
rclb
adc
ss
cmp
mov
fwait
inc
xor
rorb
adc
pop
mov
mov
xchg
out
ror
or
fsubl
push
push
mov
test
push
xor
jo
addr16
clc
in
xchg
in
into
add
mov
jg
test
adc
popf
cmp
out
xchg
bound
xor
xchg
cmp
into
cmpl
mov
lock
xor
pop
push
lcall
and
mov
push
popf
addr16
mov
pushf
cmc
pop
sbbl
dec
fs
shlb
xchg
or
aam
out
pop
dec
inc
jo
clc
add
add
push
fisubl
arpl
movsb
pop
mov
test
int3
sub
jmp
sarl
push
sti
sbb
hlt
fists
cmp
inc
jnp
xor
stc
add
pop
ljmp
pop
aas
mov
rolb
call
and
mov
inc
add
pop
push
iret
pop
mov
or
fnsave
or
pop
fnstsw
cltd
jle
dec
dec
repnz
inc
push
dec
aad
pop
in
xchg
cmp
jmp
cwtl
jbe
dec
adcb
jmp
ja
jmp
cmc
dec
mov
cmp
into
lret
lret
es
xor
jle
and
scas
mov
xlat
fdivrs
shlb
fnstcw
ret
std
scas
scas
or
sarb
mov
xor
cli
cmp
cmp
out
sub
ja
push
sub
loopne
aas
xchg
jl
cmp
ljmp
das
je
test
dec
sbb
mov
std
mov
pop
jo
icebp
fwait
pop
popf
xchg
enter
dec
cltd
scas
mov
mov
pop
pusha
sbb
xchg
jmp
jge
cmpsl
sub
and
jmp
daa
sbb
into
mov
popa
sub
or
sbb
roll
jg
call
sbb
push
cltd
in
ja
sub
adc
fsubrl
cmp
mov
mov
inc
pop
orl
xchg
mov
xchg
ss
repnz
pop
sbb
adc
inc
loop
cltd
mov
inc
push
andl
push
jae
pop
sub
call
stos
cld
jg
cwtl
push
cwtl
scas
pop
fmuls
inc
inc
nop
sub
pop
ret
call
sub
add
in
adc
push
cmp
sti
sub
xor
inc
das
push
xor
pop
jl
cmp
xor
stos
xchg
jb
pop
js
call
sar
out
and
push
iret
iret
repnz
add
mov
jle
push
push
cmp
stos
outsl
adc
dec
popf
fldl
das
div
or
out
xchg
add
jl
ret
fnsave
inc
xor
mov
mov
mov
sbb
inc
sub
inc
loop
xchg
add
push
dec
inc
lods
mov
mov
lds
decb
xlat
inc
sub
test
outsl
xor
dec
ud0
pushf
ret
in
adc
mov
clc
push
and
push
jae
arpl
ret
or
jl
adc
push
mov
repnz
out
add
into
cwtl
adc
and
imul
pop
or
push
loopne
adc
adc
sub
pop
add
adc
push
sub
dec
xor
sahf
dec
test
insb
push
mov
and
jg
rcrl
mov
in
push
ljmp
test
or
dec
arpl
test
negl
or
cli
xchg
loop
cmp
idivl
jmp
add
jnp
or
rcrl
fimull
out
xlat
shlb
jbe
mov
outsb
ds
sbb
stos
dec
lret
mov
fs
cmp
or
pushf
dec
sarb
mov
iret
add
or
lcall
stos
sbb
pop
fnclex
mov
dec
adc
and
sub
push
aam
cwtl
push
aad
ss
mov
adc
xchg
cmp
lcall
stc
lea
insl
cld
fwait
loope
xor
into
push
add
int
sub
outsb
mov
add
mov
je,pt
dec
dec
dec
jle
inc
xchg
push
insl
push
cmp
mov
jbe
jmp
jmp
cmpsl
in
es
lea
imul
and
subb
xchg
rorb
packuswb
push
enter
in
orb
add
adc
loop
dec
cmpps
and
or
dec
or
jb
jnp
push
push
jno
test
pop
lods
jmp
xchg
adc
movsb
pop
scas
call
sbb
sbb
int
cmp
or
ja
sbb
sbb
pop
lea
jp
cltd
push
adc
mov
sbb
sbb
clc
pop
inc
in
jmp
xor
movsb
cmp
insb
out
fisttpl
mov
inc
mov
subl
jae
push
xchg
fs
in
test
push
fnstcw
mov
aad
std
sub
adc
fdivl
ds
pop
dec
hlt
call
and
fcmovb
adc
dec
movsb
pop
mov
hlt
xor
ja
ret
or
gs
push
cli
out
or
dec
cmp
push
mov
insl
je
push
daa
inc
out
outsb
adc
rcrl
mov
jl
dec
pusha
fisubrl
rcrl
push
mov
ljmp
mov
stos
bswap
dec
or
ljmp
mov
leave
cld
or
sub
shrl
add
push
outsl
cwtl
cmpsb
rorb
dec
push
adc
jl
jbe
mov
mov
jo
js
adc
mov
movsb
push
loop
ret
adc
mov
lds
pop
rcr
leave
loop
ret
pop
pop
jl
aas
aaa
adc
xchg
subl
push
mov
xchg
and
out
inc
jl
adc
jl,pt
and
push
clc
loop
fnstsw
mov
mov
fidivrs
sbb
adcl
add
cld
xor
fneni(8087
sub
xor
rcrb
scas
inc
mov
test
addb
stc
mov
inc
loop
pop
cmp
mov
andb
dec
es
data16
xor
jge
add
shl
xor
xchg
sbb
dec
or
out
push
lea
subb
xor
je
roll
sti
cli
push
ja
sub
push
mov
shlb
mov
pop
or
xchg
cmc
pop
das
js
in
arpl
pop
imul
jmp
addr16
mov
je
sub
stos
xor
sub
fildl
cmp
into
or
insl
negl
xor
in
fnstcw
sti
or
sbb
push
pop
xor
stc
scas
aaa
aas
daa
es
jle
adc
enter
pop
jnp
movsl
ds
and
adc
xorl
xor
das
fstpt
dec
adc
mov
loopw
fwait
mov
aaa
stc
mov
pop
ljmp
in
imul
or
sbb
push
insb
push
rcrl
orl
push
dec
push
cs
outsb
nop
mov
xchg
lea
fs
or
jbe
sbb
shlb
adc
xor
xor
test
loope
imul
daa
pop
enter
mov
mov
inc
xchg
mov
imul
fists
xchg
mov
stos
adc
cmp
mov
stos
fstpt
int
pusha
sahf
push
test
shll
add
ret
pop
or
sub
and
out
ja
divl
cmp
jns
ja
movsl
xchg
rcrl
push
pop
sub
adc
sub
ret
hlt
mov
mov
into
lret
add
pop
lret
mov
adc
js
mov
and
inc
lahf
js
and
lahf
add
mov
inc
xchg
xchg
push
or
mov
out
cmovo
jnp
xchg
mov
ljmp
repnz
lahf
jmp
jbe
xchg
pop
into
pop
mov
out
mov
stc
scas
pop
test
roll
test
les
add
pop
sbb
fmull
dec
inc
and
mov
push
repnz
mov
int3
nop
pop
aaa
xchg
cmp
inc
mov
mov
stos
popa
mov
dec
adc
mov
dec
mov
sub
and
push
pop
int
lcall
sub
iret
xor
xor
stos
dec
in
push
lcall
lock
sbb
test
insb
jo
push
or
lret
pusha
enter
mov
dec
adc
mov
lahf
and
and
push
mov
jnp
imul
dec
dec
sub
ficoms
add
mov
push
push
mov
mov
cmp
inc
outsl
inc
xchg
je
repz
mov
das
inc
imul
lock
pop
cld
lret
iret
cmp
inc
test
push
aad
movsl
insl
cmp
lock
test
mov
call
ljmp
lea
mov
inc
mov
lcall
mov
outsb
cmp
sub
sbbl
cmc
xlat
sti
dec
lods
mov
jecxz
push
jecxz
sub
add
pop
data16
dec
dec
sbb
rcrb
outsb
fistps
and
mulb
hlt
pop
insl
push
cmp
inc
pop
stos
inc
lods
repz
out
inc
outsl
in
sbb
rolb
and
sbb
pop
std
adc
jg
jnp
mov
fs
imul
mov
push
xor
xchg
fnsetpm(287
pop
mov
stos
sbb
adc
aaa
xchg
mov
mov
daa
clc
and
shll
xor
xor
lock
pop
pushf
xlat
test
mov
cmp
dec
and
push
xchg
jb
fstpl
cwtl
jecxz
test
into
mov
sub
cmp
push
dec
out
dec
movsl
mov
pop
mov
xor
enter
and
xchg
and
xor
out
int
add
add
ss
push
shll
jp
or
insl
test
sub
push
aaa
jp
enter
inc
insb
pop
bound
xor
inc
hlt
dec
outsl
adc
repnz
inc
in
inc
pop
xor
mov
dec
stos
add
ljmp
mov
push
jg
jle
inc
xor
sub
iret
mov
in
popa
xchg
in
lds
test
filds
ss
hlt
and
inc
adcl
cltd
testb
mov
lret
lret
outsb
leave
imul
mov
int3
or
hlt
jl
xchg
insl
repnz
jo
dec
ret
popa
pop
into
sub
mov
fisttps
fistpl
std
mov
fs
adc
jo
jne
xor
mov
sub
sti
popa
xchg
dec
jnp
pop
jae
xor
lea
xor
sub
setg
movsb
push
icebp
and
addb
gs
out
insl
or
mov
je
mov
pop
xchg
fs
xchg
and
lods
call
neg
mov
mov
pop
out
jae
pop
sbb
push
fdivl
inc
lahf
fsubrl
cmp
push
mov
pop
pop
hlt
and
xor
mov
jb
loop,pt
or
pop
out
in
mov
push
call
lahf
andb
xorb
add
jecxz
jmp
insb
push
scas
ss
push
test
repz
dec
mov
dec
adc
fimull
das
dec
inc
lods
cmc
ljmp
stos
lock
in
and
les
jne
jmp
push
sbb
pop
outsl
pop
cld
inc
push
cmp
insb
in
aas
out
add
cmpsb
int
mov
ret
popf
mov
test
push
sub
loop
out
dec
loopne
or
push
sbb
push
push
adc
lods
fcmove
mov
popa
push
adc
popl
aam
and
in
cld
mov
aam
sbb
and
stos
inc
mov
sbbb
sub
pop
je
pusha
loop
mov
fcomps
hlt
jp
mov
mov
dec
ret
sbb
or
add
xchg
mov
and
dec
lock
mov
sbb
scas
jne
fstpt
jbe
repz
fcmovnbe
fcoml
mov
mov
sub
mov
outsl
je
out
test
pop
rorl
mov
mov
imul
cmp
stc
inc
ret
mov
sub
adc
jae
xchg
ljmp
jbe
ja
jg
dec
mov
mov
std
push
xor
xlat
daa
mov
sub
roll
cmpsl
pop
add
fldcw
jbe
sub
dec
dec
mov
jae
fcmovu
mov
jne
inc
outsl
and
jge
dec
scas
out
push
inc
shll
mov
add
int
and
scas
decb
dec
jb
xchg
enterw
push
xor
jno
or
inc
fiadds
les
sbb
pusha
sbb
pop
dec
inc
or
in
mov
adc
jae
es
imul
and
xchg
mov
pop
fstl
ss
std
add
imul
mov
rclb
jecxz
fwait
mov
sub
sahf
cmpsb
mov
in
iret
push
xchg
push
arpl
insb
cwtl
dec
jl
jae
addr16
xchg
adc
jns
fcmovne
mov
pop
clc
dec
into
stc
cmpsl
cmp
loope
clc
lret
mov
test
add
int3
mov
aam
sbb
inc
loop
scas
test
icebp
mov
std
fstl
test
loope
cwtl
imul
add
xchg
call
ret
in
pop
fldl
pop
mov
sub
lcall
test
andb
cmp
hlt
test
lret
gs
aas
lea
inc
clc
testb
inc
push
fucomi
test
adc
dec
pop
xor
fidivl
dec
ss
std
xchg
cld
push
add
rcrl
mov
out
clc
fsubrs
lods
or
pop
push
jno
popa
lods
and
xlat
sbb
push
xor
fs
jno
inc
xchg
add
jmp
cltd
jle
les
lret
scas
insb
xor
sbb
loopne
push
negb
aam
sar
insb
add
repz
and
and
xchg
lods
push
xor
loop
faddl
sub
sbb
jns
insb
popl
js
cld
addr16
les
xchg
shr
test
mov
ljmp
push
inc
outsl
mov
movd
rcll
add
or
int3
nop
inc
xchg
orl
push
insb
mov
and
gs
nop
inc
sub
or
aas
push
sbb
sbb
iret
push
or
push
dec
cmp
dec
fsubp
sbb
aad
sub
jne
push
sub
jno
jo
jecxz
mov
xchg
incb
mov
adc
mov
inc
mov
insl
repz
shlb
sub
jae
push
scas
imul
sub
sbb
ja
fists
outsl
push
and
sbb
int3
movsl
push
loope
enter
cmc
or
insl
cli
clc
pusha
test
pop
insl
inc
adc
dec
push
mov
ret
aam
test
scas
push
test
roll
or
xchg
outsb
adc
stc
mov
xlat
stos
xor
cmp
sti
and
mov
repnz
lock
mov
aaa
and
ret
pop
sub
xlat
out
adc
cltd
mov
mov
jmp
dec
cld
dec
test
call
fildll
fwait
adc
sbb
popa
hlt
or
loopne
jb
leave
in
divl
inc
sbb
push
mov
es
dec
adc
incl
mov
mov
push
cmpsb
mov
adc
dec
fwait
imul
scas
inc
in
call
movl
pop
or
adc
imul
ret
jbe
add
pop
and
shl
and
xchg
mov
repz
in
xchg
lea
mov
loop
fwait
mov
incb
push
or
mov
mov
push
daa
jle
inc
inc
arpl
aam
icebp
scas
jl
cld
mov
pop
inc
add
sbb
or
inc
cwtl
pusha
stc
adc
mov
lea
xchg
add
and
scas
int
jo
or
pop
xor
fs
clc
ja
fstps
dec
dec
lds
call
lret
xor
jns
mov
loope
push
mov
andl
negl
pusha
xor
xor
popa
push
add
cmpsl
out
daa
inc
push
fimull
xor
mov
pop
jo
lret
and
cmp
xor
dec
aam
sub
cli
or
pop
mov
pop
cli
xchg
or
mov
not
roll
sub
dec
fmull
rclb
pop
inc
inc
sub
pop
mov
and
mov
fldenv
mov
ja
clc
mov
xchg
scas
rclb
fcomps
sub
aaa
shrb
mov
mov
nop
mov
cmc
cmp
xchg
mov
xchg
mov
push
adc
xchg
mov
bound
xchg
test
push
rcrl
mov
stos
add
mov
mov
loop
out
sbb
sti
and
pop
xor
push
outsb
out
adc
pop
adc
push
add
xor
jbe
sub
mov
out
fimuls
xchg
test
cmp
pop
sti
cmpsl
xor
mov
cli
jle
pusha
xchg
lret
sub
mov
and
fisubrl
sub
jne
nop
rcr
add
add
xlat
enter
push
sti
fwait
sub
sahf
adc
imul
jl
xchg
in
mov
in
pop
in
mov
adc
sub
clc
pop
inc
subb
push
idivb
imull
lods
cmpsb
filds
fsubl
pop
inc
popf
push
les
pusha
jge
adc
cmpsb
pop
loope
dec
in
loopne
negl
dec
outsb
mov
es
shlb
lods
mov
inc
push
or
nop
mov
rcl
adc
insb
jle
sbb
xor
sub
or
xor
out
sbb
lods
xchg
mov
mov
or
jnp
lahf
jmp
sbb
data16
setge
js
sbb
ja
loopne
push
pop
jns
adc
jns
lods
lods
in
je
sub
sbb
aam
test
sarl
xor
pop
testl
dec
sbb
aaa
mov
mov
adc
mov
es
test
pop
dec
jno
inc
outsl
pop
add
lret
inc
mov
xchg
lea
dec
mov
out
sahf
jbe
jecxz
jne
mov
lods
shll
out
cltd
adc
data16
push
sub
mov
pop
lcall
enter
pop
in
sbbb
filds
insb
insb
in
pushf
into
pop
xchg
daa
push
dec
push
xchg
add
pop
jo
icebp
aas
mov
orl
je
into
ja
sbb
xor
fistpl
in
test
jns
jle
sub
push
pop
xor
and
daa
mov
sbbb
insl
fidivl
insb
aam
mov
scas
out
xor
dec
es
call
ds
lods
sub
lahf
push
or
in
sub
out
xchg
pusha
pop
pop
subb
ficoms
pop
pop
mov
pop
movsl
ja
dec
lods
rcl
jmp
decl
outsl
adc
pop
xchg
cltd
dec
sti
call
mov
jno
sahf
hlt
jb
das
and
lods
mov
push
ret
jg
adc
rorb
es
loopne
inc
jl
hlt
outsl
leave
mov
je
sahf
std
mov
popa
mov
cmp
cli
test
mov
mov
test
pop
cmp
sub
out
jae
jae
xchg
pushf
cld
cmp
lock
scas
jbe
xorb
stc
mov
jno
shr
fs
cmp
mov
lahf
jne
sar
mov
pop
sbb
movl
test
rcr
in
pop
push
faddl
mov
inc
in
push
push
repz
lds
ds
aas
inc
or
addr16
push
dec
sub
push
lcall
cwtl
push
jecxz
psubusb
xchg
lds
rcrb
push
stos
clc
push
mov
je
xchg
xor
cli
aaa
psrlq
xchg
jmp
ja
decb
aam
cmp
mov
insl
lods
sbb
movsl
adc
cwtl
inc
popf
cmp
xchg
adc
je
add
out
call
icebp
aad
aad
push
fsubs
shll
inc
les
mov
addl
mov
lods
push
cld
jns
pop
pop
push
and
mov
call
xor
stc
inc
mov
push
pop
sti
cmp
push
movsb
push
jns
or
sbb
or
fnstenv
or
ficoml
out
in
mov
pop
ret
push
add
dec
shlb
cmp
pushf
xor
add
outsb
das
int
xchg
jle
mov
cmp
ds
mov
bound
jmp
outsb
daa
mov
imul
sub
mov
cmp
lahf
fisttps
out
inc
or
dec
notl
outsb
rcll
fcomps
xchg
imulb
cmpsl
test
imul
inc
or
out
iret
hlt
jbe
stos
les
rcrl
sub
in
outsl
lea
mov
cmp
xor
cmp
mov
int
cmp
sub
add
popa
cs
mov
mov
movsl
nop
xor
popf
dec
add
sbb
mov
fsubl
cmp
cs
cmp
and
fists
stos
jno
loopne
aam
outsb
mov
mull
out
scas
int
in
mov
sub
stos
push
sub
dec
adc
inc
sbb
dec
cli
cli
aaa
sar
fistpll
int3
mov
lods
push
push
push
aad
loopne
and
cmp
mov
add
mov
rcl
pop
sti
xchg
and
inc
stos
mov
lods
popa
scas
scas
dec
adc
stos
inc
jge
adc
lods
lahf
in
ret
xchg
outsb
mov
mov
push
int3
jo
orl
xlat
sub
xor
dec
pop
stos
enter
and
fcoms
loope
aas
push
dec
icebp
ja
lret
mov
jecxz
lret
stos
xchg
stc
sti
jp
je
shr
sbb
jb
sub
pop
aaa
sbb
jbe
sti
std
cld
push
aas
jp
push
dec
mov
adc
dec
dec
mov
mov
xor
loopne
jecxz
xor
sub
scas
cmp
nop
inc
cmp
jle
cld
rorb
andb
out
mov
mov
add
xchg
sbb
ljmp
imul
sub
imul
inc
bound
dec
movsl
mov
notl
cmp
jae
sub
int3
inc
pop
roll
outsb
insl
cmpsl
sbb
xchg
and
pop
daa
movb
inc
pop
xchg
jns
notl
in
mov
stc
outsb
ja
mov
xlat
jge
xor
push
pop
push
and
imul
cmp
cmpsb
mov
xchg
pop
xchg
dec
in
mov
fsubs
jp
inc
cwtl
pusha
push
shl
sbb
clc
ret
outsb
xchg
mov
mov
add
scas
out
jp,pt
in
xchg
sub
sub
inc
push
fistps
in
sti
in
xchg
xor
fnsave
lcall
sbb
clc
in
mov
push
jp
insl
enterw
lret
in
stos
nop
in
mov
dec
movsl
in
and
jmp
dec
fcmovnu
fisttps
test
iret
jg
cmpsl
dec
shl
aam
repnz
push
out
push
outsl
stos
xchg
jbe
idiv
rcr
inc
adc
jecxz
ss
inc
cwtl
imul
lret
lcall
ret
hlt
cmp
mov
cltd
mov
pusha
or
inc
dec
test
lds
inc
js
inc
leave
jne
arpl
dec
or
add
mov
cli
pop
test
aaa
push
pop
shlb
mov
loopne
mov
adc
sarl
adc
shl
push
sti
sub
inc
test
inc
jnp
jns
mov
loope
mov
movsl
jmp
xchg
cld
ja
mov
lcall
inc
sahf
jp
sahf
mov
mov
lea
fnstcw
xor
mov
sbb
aas
sbb
popa
ds
cmp
xchg
xor
sbb
dec
push
dec
push
xor
popa
push
bound
mov
rclb
aas
or
add
sbb
cwtl
cmp
cmp
lods
push
das
repnz
inc
cltd
and
jecxz
fs
cmc
xchg
or
lods
sub
mov
sub
push
inc
push
push
shrb
sgdtl
stos
sti
and
sbb
int
sub
ror
mov
push
in
faddp
push
cltd
pop
jl
jb
sahf
mov
mov
push
push
xlat
adc
inc
inc
adc
mov
cmpl
sub
xor
mov
test
icebp
mov
notb
mov
xchg
sar
cmp
cli
cmp
add
pop
pop
stc
pop
fisubl
or
cmpsl
add
in
sarb
xchg
sbb
adc
push
or
mov
stc
xorb
inc
inc
lret
push
pop
test
jbe
cmp
jmp
out
xchg
add
test
stc
adc
sub
adc
mov
rorb
ret
cltd
mov
dec
in
mov
inc
and
lahf
mov
jg
cmp
cmpl
in
dec
xchg
pop
ljmp
ss
mov
pop
popf
cmc
movsl
jge
sbb
fiadds
int
out
clc
sarb
adc
ds
push
pop
xchg
iret
mov
and
jb
out
icebp
lahf
lahf
mov
lahf
mov
outsb
into
sub
lods
clc
adc
rorl
mov
push
stos
dec
insl
jle
push
adc
add
and
pop
xchg
lcall
hlt
rclb
inc
add
leave
loop
fistps
imul
and
mov
dec
sub
and
ror
push
cld
lock
lret
das
lret
repnz
jmp
mov
jne
jmp
aad
pop
lret
movsb
and
push
add
int
cmp
popa
mov
imul
xchg
dec
aaa
std
fisubs
push
mov
fiadds
fwait
xchg
mov
movb
shlb
jbe
jne
pop
jb
aam
rolb
ret
adc
bound
movsl
aaa
fstps
fstp
cmp
inc
mov
xchg
lret
mov
sbbb
inc
inc
sbb
and
sbb
in
push
push
insl
int3
adc
xchg
sbb
pop
cwtl
enter
xchg
test
jge
sub
push
psubw
add
jecxz
rcll
test
cli
push
dec
jno
ja
fildl
xchg
ret
jle
aas
sub
data16
iret
cmp
xor
fs
and
aad
inc
mov
aaa
mov
and
push
es
fwait
dec
mov
cs
and
int3
mov
add
push
xor
adc
arpl
xchg
cltd
mov
jp
add
jne
in
mov
imul
adc
repnz
fidivl
dec
mov
and
lcall
and
adc
icebp
aad
pop
dec
into
xor
sbb
hlt
cmpsl
cld
adc
out
lret
mov
jg
out
inc
lods
mov
leave
sti
cltd
push
lcall
sub
push
adc
xchg
xor
bound
inc
out
or
inc
add
int3
mov
fisttps
sbb
sbb
push
std
jae
add
jno
push
arpl
xor
push
push
lret
or
fdivrl
pusha
sbb
fcmovnb
insb
push
add
loop
add
push
inc
inc
jl
adc
jne
push
dec
jnp
push
push
jle
getsec
adc
jns
mov
ret
adc
inc
fwait
repz
das
or
mov
xor
dec
ss
sub
jmp
jb
int
movsl
scas
das
dec
sub
adc
pop
push
cvtdq2ps
lods
adc
js
pop
je
add
cmc
imul
or
popa
jbe
mov
loop
and
mov
adc
sub
sub
push
out
mov
int3
and
add
cli
in
jns
aam
rorb
icebp
xchg
mov
push
mov
movsl
pop
inc
mov
inc
inc
push
xor
paddb
shrb
cmc
push
cwtl
scas
sub
je
jo
cmc
pop
pop
mov
jle
testl
pushf
hlt
lods
in
popa
jecxz
adc
lods
inc
sti
lods
in
in
ffreep
outsl
jo
insl
mov
mov
mov
xchg
out
out
rol
pop
loopne
iret
jmp
push
iret
xchg
cltd
lea
xor
in
jl
inc
test
jns
jp
xchg
mov
ret
aaa
jp
test
jecxz
movl
std
loop
test
push
push
mov
data16
inc
pop
lods
ljmp
or
mov
jmp
lret
push
popf
pop
movsb
xchg
fwait
sub
mov
cltd
lods
jmp
or
testb
rolb
or
inc
push
lret
pop
dec
sbb
mov
out
dec
in
adc
loopne
or
jnp
push
xor
es
hlt
popa
or
loope
pop
mov
lock
mov
jecxz
lcall
ret
xor
rcrl
or
in
xor
lret
movsb
jmp
les
or
mov
prefetch
or
cltd
pop
repz
lock
ja
outsl
jl
jg
arpl
scas
sarl
pushf
push
mov
scas
push
xchg
push
pop
jnp
arpl
lret
filds
add
dec
call
inc
add
mov
mov
test
shl
testl
andl
popf
ja
int3
out
iret
imulb
shl
cwtl
mov
add
rol
and
mov
ds
pushf
mov
xor
cmpsb
pop
adc
mov
enter
pop
push
mov
jb
xor
andb
or
xchg
int
dec
sbbl
mov
repnz
inc
jle
lds
xor
and
pop
jmp
add
fisttpl
pop
mov
push
call
js
fcoms
push
xor
out
add
in
xor
push
mov
pop
popl
push
jmp
add
outsb
popa
aaa
icebp
hlt
sarl
pop
loopne
xor
scas
add
inc
xchg
clc
dec
jnp
loopne
mov
sub
mov
outsb
mov
pop
xchg
icebp
popf
pop
cmp
fs
insl
xlat
xchg
enter
mov
xor
fistpl
outsb
jge
in
push
sbb
or
lret
cmpsl
jmp
xor
repz
sbb
jmp
loope
das
aaa
and
mov
mov
stc
inc
sub
mov
pop
add
inc
xchg
sub
test
pop
call
pop
nop
fdivl
push
adc
jp
push
mov
sbbl
jns
sub
mov
cmp
add
dec
lds
adc
test
add
jge
adc
xchg
mov
sub
dec
mov
mov
js
mov
push
scas
movsb
sbb
cmp
andl
inc
cwtl
xchg
sahf
push
or
ljmp
divl
js
mov
pop
rclb
mov
imulb
or
jbe
jp
push
push
pop
push
aaa
jae
push
dec
std
sub
ljmp
bound
xor
push
call
jns
adc
xor
inc
popf
std
mov
jp
xchg
xor
clc
jbe
xlat
mov
sub
xchg
nop
daa
outsl
and
add
push
jns
and
fsubrs
rcrl
les
test
icebp
push
jl
les
cmpsb
jmp
push
pushl
push
out
or
pop
pop
and
xchg
out
and
sub
mov
loope
dec
push
pop
into
jnp
add
cmc
jmp
out
popf
inc
ret
and
add
push
push
mov
ljmp
adc
idivb
cmp
in
pop
pushl
insl
mov
push
fmuls
jne
xchg
and
aas
and
push
xor
dec
scas
mov
insb
sub
xchg
out
movsb
notl
dec
dec
pop
pop
jg
dec
arpl
pop
arpl
int3
stos
jne
pop
cmp
lret
push
inc
lods
adc
mov
xchg
lea
add
xor
pushf
into
mov
xchg
mov
push
mov
adc
mov
test
sti
jae
or
mov
dec
mov
addr16
xlat
mov
int3
aad
push
pusha
imull
pop
lods
and
xchg
fimuls
adcl
rol
jmp
scas
push
hlt
mov
popf
pop
mov
add
scas
jae
mov
in
add
lcall
mov
nop
push
jbe
out
lock
push
repnz
popf
icebp
lea
adcl
clc
push
icebp
jbe
xor
sub
xor
mov
add
sbb
leave
xor
outsl
into
in
addr16
lret
in
aaa
add
je
outsb
lahf
fdivr
adc
xchg
add
mov
pop
cld
and
and
aaa
push
inc
jnp
insl
decb
jg
dec
out
jmp
cmp
xor
daa
in
xchg
loope
aad
into
add
test
pop
cs
xchg
xchg
jnp
sub
scas
mov
mov
cmpsl
repnz
inc
movsb
add
xchg
xor
lcall
ljmp
aam
pop
movsl
cmp
add
dec
mov
rcl
rolb
ds
lahf
cmp
lods
mov
scas
xchg
xchg
aad
pop
es
or
sar
scas
fcomip
add
sbb
sub
shlb
push
les
icebp
cmpsl
iret
gs
push
aaa
nop
mov
movsl
mov
fldenv
out
pop
jl
dec
inc
shrl
shrb
or
pushl
mov
inc
pop
xor
adc
pop
push
jl
jl
xchg
inc
loope
push
lods
and
movsl
fidivl
add
xor
xlat
sbb
push
adc
cmpsb
fsubrs
shrl
cmpsl
mov
test
outsl
fmulp
arpl
rol
jbe
adc
xchg
cmpb
dec
cmc
jno
dec
lahf
sbb
out
inc
inc
icebp
xor
push
ret
dec
push
movsb
test
aad
dec
xor
add
test
xor
je
sahf
bound
mov
icebp
inc
adc
jae
icebp
pop
inc
jg
mov
adc
pop
sbb
pop
xchg
sbb
mov
negl
test
popf
test
cmp
fs
in
jp
fcmovnu
pop
fdivl
rcrb
hlt
js
dec
sub
push
in
lock
jbe
push
mov
stos
add
adc
cwtl
or
idivl
rcl
loop
movsl
mov
mov
jae
rcrl
sti
xchg
push
cwtl
lret
lods
pop
xor
xor
ljmp
call
test
jmp
daa
pop
aaa
icebp
imull
xchg
jae
push
cmpsl
sbb
lock
sub
movl
mov
cmp
data16
roll
test
mov
cld
loopne
test
iret
mov
out
jnp
repnz
sarl
daa
hlt
mov
cld
xchg
pop
add
mov
int
js
repnz
mov
push
sbb
inc
pop
inc
cmc
inc
jge
call
or
pop
fldl
mov
mov
adc
adcl
stos
push
lods
xchg
mov
lcall
loop
icebp
mov
or
xchg
aaa
add
outsb
sbb
idivl
int
pcmpgtd
sarl
xchg
pop
stc
xor
inc
lods
jge
sbb
mov
out
ret
adc
cmpsb
dec
cmp
jg
gs
pop
mov
fadds
loopne
repz
adc
scas
pushf
sbb
sub
shlb
mov
cmpsl
mov
pop
and
sub
insl
mov
mov
push
push
data16
out
push
cmp
nop
repnz
xchg
push
sub
mov
cmp
int3
cmpsb
mov
adc
repnz
push
dec
jne
and
iret
or
addb
flds
jl
aaa
lds
ret
xor
lret
fdivr
and
inc
movsl
stos
adc
mov
push
cmpsb
dec
cmp
repnz
ret
mov
in
test
sbb
fs
push
inc
jl
dec
jmp
dec
inc
push
mov
pop
mov
jns
jg
lods
pop
lods
sti
mov
in
ds
jns
and
lods
xor
inc
mov
cld
or
or
sub
xor
jno
cmc
cmp
inc
pop
sbb
push
xor
je
inc
xchg
sbb
lock
mov
push
sub
pop
push
inc
push
jns
add
dec
pushf
jp
mov
pop
add
xchg
dec
inc
pusha
mov
add
sbb
pop
dec
dec
loope
jl
cmp
mov
out
stc
testb
push
jl
mov
inc
or
out
jecxz
and
pop
clc
testl
stos
ret
and
cs
and
aas
lea
and
inc
fcomi
aaa
mov
sti
je
cmpl
and
xchg
inc
into
mov
push
sub
stc
in
mov
int
cwtl
jp
mov
adc
dec
push
mov
sub
leave
add
pop
test
mov
jb
ret
inc
mov
inc
out
sahf
dec
movsl
jl
pop
sbb
pop
repnz
inc
out
and
mov
repnz
in
mov
imul
push
lods
out
mov
or
add
and
or
adc
sbb
dec
push
enter
or
orb
outsl
xor
iret
xor
push
fdivl
inc
cmp
jns
and
fwait
les
shlb
enter
les
push
mov
shrl
sub
sub
mov
jb
cmp
lcall
cli
cmc
mov
imul
adc
mov
push
jno
push
ret
sub
push
adc
xor
ds
push
add
daa
test
adc
icebp
mov
mov
jns
repnz
jbe
arpl
movsb
mov
or
daa
dec
and
fwait
pusha
int3
inc
in
movsl
icebp
ficomps
cmpl
mov
stos
jnp
and
aaa
sbb
mov
adc
rcrl
fsubr
sbb
aas
xchg
push
xlat
mov
das
stc
popf
jb
cmp
pop
sub
pop
loope
or
jl
and
aaa
sub
lret
loopne
aad
jo
mov
ffreep
mov
enter
push
out
push
std
add
dec
push
test
in
fisttpll
inc
cmp
lods
adc
mov
mov
ret
les
sahf
mov
fsubrl
enter
jmp
pop
add
add
outsb
and
cwtl
pop
push
in
mov
jp
dec
add
inc
nop
out
cwtl
xor
lret
inc
fwait
nop
mov
xchg
mov
adc
pop
mov
inc
dec
mov
test
insl
nop
outsb
mov
mov
mov
insb
xlat
frstor
je
mov
ds
es
push
push
push
pop
fs
add
in
inc
cmp
add
xchg
mov
push
xchg
aam
push
inc
sbb
insb
push
aas
out
mov
dec
mov
mov
xchg
mov
ret
cmpsb
loopne
cld
or
jp
add
jle
orb
xchg
adc
xchg
pop
fimuls
dec
rcrb
adc
xor
dec
xchg
arpl
push
inc
pop
imul
push
out
jmp
ss
jg
in
push
clc
dec
push
and
xchg
adc
test
pusha
cmc
repnz
inc
pushl
ja
mov
push
or
sub
pop
and
mov
sub
jns
out
rep
dec
into
xor
inc
daa
sbb
insl
adc
pusha
jl
or
cltd
dec
in
cmp
daa
jbe
test
lahf
jns
mov
repnz
repz
negl
clc
push
inc
movsw
fildl
stc
dec
rorl
xor
push
lods
mov
test
addr16
repz
jmp
mov
jle
xchg
xor
ja
push
dec
es
jo
leave
adc
lods
sub
shlb
dec
repnz
xchg
or
lret
inc
fidivrl
popa
dec
stos
mov
enter
adc
stc
jmp
out
lods
das
mov
into
les
out
outsl
mov
scas
jae
pop
jg
cmc
lock
ja
pop
xor
add
cltd
repnz
push
or
mov
cmp
out
hlt
jle
lods
cmp
xor
ret
sarl
push
ss
xchg
cmp
jl
mov
sbb
mov
cmp
cmp
push
imul
mov
xchg
lea
mov
push
or
sbb
mull
hlt
jno
push
stos
mov
xor
or
movsl
fistps
xor
loop
enter
add
mov
outsb
jge
xchg
sbb
xor
cmp
mov
and
rol
add
lods
adc
dec
add
add
sti
rcrb
les
mov
xchg
mov
adc
xchg
ret
clc
insl
lahf
lcall
mov
pop
inc
xor
out
test
push
sbb
add
mov
stos
push
cmpsb
fwait
sub
or
test
sub
out
fcoms
xor
stos
lcall
leave
cld
sub
xchg
pop
lods
push
mov
sub
push
int3
push
push
cmp
jns
loopne
pop
fsubp
loopne
and
push
shl
mov
in
xchg
call
sahf
adc
sub
cmp
cltd
adcb
cwtl
jnp
xchg
dec
popa
jnp
dec
movsb
repnz
mov
and
js
and
push
lock
bound
aad
je
jge
test
sbb
mov
pop
add
xchg
cmpsb
das
cld
add
adc
mov
outsb
movsb
dec
sbb
push
xchg
mov
pop
sbb
jnp
in
ret
cmc
int
flds
jnp
data16
movsb
jge
mov
loopne
popa
cmpsl
ficomps
xor
xchg
loop
lock
std
adc
pusha
dec
jnp
xor
inc
lods
mov
adc
lahf
adc
andl
mov
jmp
scas
lods
inc
push
dec
aam
insl
or
mov
xor
daa
ret
mov
mov
jo
push
test
mov
scas
iret
dec
adc
fld
jbe
or
repnz
xor
xor
lods
mov
pop
mov
fnsave
sbb
jmp
jbe
mov
dec
outsl
loop
stc
or
pusha
cmp
lea
mov
mov
dec
inc
sbb
xlat
add
mov
popf
popa
cmp
incl
loope
ja
pop
and
popf
inc
icebp
shrl
mov
sub
orb
inc
icebp
pop
shl
cmp
mul
mov
push
mov
pop
xchg
jge
in
cmp
adc
outsb
test
jb
or
add
movsl
push
pop
out
xchg
cli
mov
add
jns
sbb
sbb
jb
sub
test
ss
cmpsb
mov
jecxz
add
out
dec
mov
int3
idivb
mov
out
outsl
add
and
xchg
jl
cld
cmp
mov
cmp
test
lahf
test
mov
loop
stc
lds
fdiv
push
loop
arpl
shrb
sub
mov
dec
loop
jle
push
call
push
test
jae
ret
daa
adc
ljmp
mov
add
fsub
je
adc
xorl
or
xor
jnp
add
cmp
dec
jecxz
and
repz
pop
cmp
stos
mov
mov
ljmp
fimuls
fwait
push
unpcklps
pop
sub
add
add
mov
mov
xchg
xor
push
push
fs
stos
mov
cltd
outsb
in
cmp
scas
lds
sub
popf
cmc
test
test
cmp
sti
es
enter
mov
ret
pushf
mov
add
les
inc
sub
mov
out
mov
add
cmpsl
cmp
addr16
push
cmpsb
std
fcoms
pop
lcall
outsl
jmp
rcrb
or
sub
repnz
adc
xor
aad
sahf
sub
jne
test
fstpl
or
leave
subb
fisubrs
imul
int
jmp
add
mov
ret
rclb
sahf
les
sbb
sti
push
pop
dec
sub
sbb
das
mov
outsl
jb
pop
ja
je
pop
mov
inc
sbb
fwait
add
add
xchg
pop
shrl
ret
cltd
imul
jnp
adc
jg
leave
add
inc
sbb
add
dec
mov
sub
sub
pop
jg
and
sbbl
push
and
mov
xor
stos
or
rcrl
push
insl
dec
gs
push
imul
mov
popf
cmp
pop
cmp
pushf
and
sahf
repz
test
mov
pop
es
mov
mov
sbb
and
les
dec
push
sbb
jae
mov
mov
and
mov
out
sub
jbe
hlt
rolb
cmp
jbe
xchg
loopne
add
lods
adc
xorb
pop
and
and
imul
jmp
movsb
inc
or
mov
pushf
lds
pop
bnd
mov
pop
jne
es
mov
and
cltd
mov
scas
cli
ss
jae
pop
sbb
scas
hlt
mov
push
in
dec
test
add
sahf
aaa
push
adc
mov
jno
das
adc
cmpsb
xchg
adc
ds
push
xchg
out
rorl
pop
inc
shlb
push
xor
jge
dec
sbb
push
sub
inc
or
inc
dec
push
into
mov
mov
aaa
sarl
xchg
int3
pop
xchg
xchg
leave
fisubrl
jge
sub
outsl
cs
mov
inc
inc
lock
cmp
push
xor
in
or
outsl
jge
mov
add
mov
adc
enter
xchg
push
mov
dec
inc
dec
test
inc
stos
sarb
fnstenv
add
stc
sub
sahf
adc
movsb
sub
jbe
push
test
frstor
int
mov
loope
or
jecxz
jmp
cmp
xor
sar
cmpsl
push
jl
and
dec
dec
jecxz
enter
push
arpl
inc
xor
jb
es
je
mov
testl
stos
xor
iret
adc
mov
pop
imul
adc
and
cmp
push
pop
int3
mov
or
jp
pop
mov
push
push
cmpb
mov
sbb
mov
aaa
in
push
push
rdmsr
movsb
lods
xor
cltd
out
pop
cmc
fwait
lahf
rclb
in
rcrl
mov
frstor
orb
mov
inc
popf
or
pop
mov
cmp
dec
ss
arpl
or
push
sub
cmpsb
cmp
mov
xchg
fbstp
jo
scas
fs
and
xchg
dec
cmp
fwait
pop
xchg
mov
push
daa
inc
jl
enter
or
cli
fs
cli
fistps
jb
pop
push
icebp
mov
mov
sbb
add
mov
push
push
jmp
or
cli
cmp
nop
and
sarb
push
or
sub
idivb
mov
xchg
sub
adc
addr16
test
fstpt
jo
inc
add
out
fcmovnu
out
sub
movsl
pop
nop
insb
mov
call
mov
pop
in
or
dec
bound
and
mov
xor
mov
jl
adc
cmp
jp
mov
xor
data16
mov
mov
push
cmp
sbb
int
inc
xor
outsb
lcall
sub
stc
dec
sbb
push
mov
adc
dec
nop
sahf
aaa
frstor
cmp
or
icebp
addl
mov
inc
sub
test
mov
xchg
mov
jle
mov
pop
pop
jns
jecxz
jecxz
test
cwtl
jno
add
push
mov
xchg
adc
mov
sbb
jbe
adc
jne
rcl
loopne
dec
and
push
repnz
and
xlat
pop
and
stos
hlt
insb
repnz
incl
lods
clc
jo
add
lods
pause
nop
in
call
scas
std
pop
jg
hlt
lods
rorl
mov
xchg
and
hlt
or
push
sbb
lret
clc
jb
jbe
icebp
inc
mov
add
stc
mov
aam
lret
lods
push
cmp
pop
std
les
ds
andl
sub
mov
push
aaa
fsubrl
add
icebp
mov
js
cmpb
mov
pop
add
addl
in
or
xchg
sbb
pop
clc
clc
ror
inc
lahf
sbbb
cmp
and
mov
push
add
mov
fildll
mov
and
insl
jmp
es
push
hlt
jb
xchg
adc
adc
arpl
cs
sbb
or
push
push
clc
sub
sbb
mov
push
gs
addl
dec
test
jae
jmp
mov
mov
pop
lea
movsb
lea
int
mov
loop
enter
xlat
fistl
add
xchg
push
aaa
in
stos
dec
ret
orb
add
sbb
push
jns
gs
sahf
jecxz
cwtl
sbb
js
and
push
or
sarb
jge
pop
jbe
popa
mov
sbb
mov
les
sti
dec
aam
mov
daa
xor
repnz
adc
idiv
dec
or
xchg
in
mov
cmp
stos
fwait
push
aaa
and
sub
popa
movsb
xchg
dec
adc
lock
sbb
pop
ret
mov
mov
fsubp
cmp
mov
leave
mov
cmp
out
cmpsl
shll
push
shlb
jmp
loopne
jns
adc
mov
sbb
pop
popf
hlt
xchg
in
xchg
xchg
and
or
xor
repnz
jg
in
stc
insb
pop
push
jb
je
cmp
call
jns
movl
bound
push
pop
or
cmp
aas
stc
sub
popf
loop
popf
fstl
inc
mov
push
out
mov
push
add
pop
mov
popa
sti
mov
cld
xchg
jo
cmpsb
daa
jmp
push
rcr
add
mov
jne
lea
icebp
jle
decl
std
aam
inc
mov
ds
fs
bound
mov
xor
fiaddl
push
push
bound
dec
cmp
loopne
mov
or
dec
imul
xchg
pop
jg
cmp
dec
mov
mov
dec
stos
push
adc
and
shll
sub
jmp
push
xchg
pop
push
clc
xor
inc
adc
xor
outsb
hlt
popa
and
lahf
les
aad
jl
adc
fcmovb
cmp
jmp
ljmp
jne
addr16
and
mov
sti
adc
and
in
or
and
clc
jp
push
push
es
in
mov
fwait
testb
outsl
pop
and
dec
cwtl
mov
shl
enter
adc
int3
insb
mov
and
dec
dec
adc
sbb
je
jle
xlat
push
insl
push
out
jne
push
xchg
sarb
and
aad
mov
shll
mov
push
mov
movsl
movsl
lock
pop
int
loope
test
enter
stc
into
shll
movl
push
ret
or
mov
jne
fmull
btc
mov
sub
nop
push
or
in
inc
fisttps
mov
imul
aad
ret
push
sbb
nop
xchg
ret
sub
mov
test
adc
inc
pop
jl
ja
adc
je
inc
inc
pop
rcrl
add
addr16
jne
int3
push
fadds
jle
mov
insb
sbb
fwait
psraw
jns
pop
sub
daa
popf
sub
fstl
nop
jle
mov
mov
pop
cld
cltd
loop
dec
sbb
lds
add
js
sub
mov
ss
dec
mov
or
stc
lock
iret
adc
add
jbe
or
cld
and
sbb
push
loop
ja
int3
cmp
pusha
mov
nop
xchg
cld
ficoml
sub
mov
jbe
cmpsl
sbb
jo
jae
jno
adc
outsl
push
ret
divl
stos
push
jne
push
and
shll
or
jge
dec
push
xor
dec
loopne
repnz
inc
pop
dec
xchg
jle
lret
outsl
xchg
push
in
sbb
les
cmc
ja
outsb
call
mov
adc
ja
adc
je
loop
jae
jecxz
ss
inc
pop
ret
xor
int
or
enter
ss
sbb
jns
cmpsl
fisttpl
jo
jne
aam
inc
ja
cmp
mov
in
or
rcll
pushf
fcmovnb
ret
push
enter
ja
jo
jno
xchg
pushf
movsb
xor
mov
insl
pop
pop
and
xor
imul
ljmp
jl
jg
mov
adc
out
dec
jle
dec
or
mov
pop
or
insb
lock
nop
push
into
xchg
jne
out
icebp
mov
push
and
cmp
cmp
out
adc
inc
jno
inc
stos
mov
rcrl
in
es
sub
pop
imul
mov
stc
call
aas
mov
cmpsb
pop
stos
lods
add
pop
std
xor
xchg
push
mov
sti
jle
cmpsb
sub
add
cmpsb
lods
adc
stc
pop
push
enter
or
test
jns
lahf
ljmp
popf
fs
rorb
dec
popa
mov
pushf
popa
sbb
and
ficomps
cmp
pop
inc
inc
std
add
cmp
dec
or
iret
mov
mov
mov
shl
push
sahf
mov
call
ds
andl
ret
dec
jge
sub
cmc
fcompl
aam
add
jecxz
andl
fldt
movsb
mov
mov
sbb
jg
xchg
in
or
xchg
mov
or
hlt
jg
cld
dec
aas
gs
sbb
gs
inc
enter
lods
lret
pop
mov
mov
adc
xor
inc
test
imul
aad
test
push
rorl
xchg
inc
and
xlat
xor
pop
sbb
inc
in
orb
js
jnp
mov
cmpsb
or
fs
fildl
test
mov
loope
out
fs
out
mov
xor
rcrl
movl
fnstcw
in
sbb
jmp
add
add
jmp
sar
cmp
mov
data16
shlb
lods
cltd
mov
pop
mov
dec
popf
xor
cwtl
cwtl
and
aaa
out
adc
adc
push
adc
lahf
xchg
dec
xor
and
dec
popf
xchg
data16
aaa
ds
pop
dec
test
xor
push
ja
js
and
aaa
mov
lea
adc
xor
fsub
movsl
xorl
clc
xchg
push
stos
xor
mov
xor
jae
loop
dec
sub
nop
loop
orl
or
mov
dec
xchg
aad
pushf
sub
outsb
popf
jmp
int3
daa
sarb
mull
xchg
iret
dec
mov
stos
cmp
push
lret
jge
add
xchg
mov
xchg
jge
scas
mov
add
dec
pop
pop
and
out
inc
push
shrb
cmpsl
lock
bnd
xchg
mov
mov
fs
mov
pop
lods
fsubrs
mov
fs
popa
pop
adc
xchg
or
cmc
les
dec
daa
xchg
loope
cwtl
push
lcall
and
test
fcmovne
pop
adc
push
xchg
push
push
ss
mov
fwait
sub
inc
in
movsb
sbb
jge
dec
imul
lods
inc
dec
ret
js
loopne
inc
sub
dec
jne
cld
mov
inc
push
cld
push
push
mov
cwtl
das
and
and
lock
in
and
into
xchg
cld
pop
xchg
dec
ja
fnstcw
jecxz
lret
push
pop
push
inc
jmp
or
imulb
mov
idivl
test
push
add
push
outsl
mov
cli
cmp
sub
push
call
mov
xlat
in
pop
add
outsl
cmp
bound
cld
cltd
adc
aad
cmp
lret
das
cmp
cmc
shll
das
lcall
add
addr16
inc
cmp
and
mov
femms
mov
push
stos
add
xchg
push
out
mov
inc
sar
cmp
jp
sub
subl
iret
push
out
mov
shl
jnp
ret
ljmp
xlat
dec
or
xor
mov
inc
into
ljmp
xchg
stos
dec
test
orb
pushf
pop
outsl
lea
pop
test
out
pop
jne
cmc
int
mov
mov
outsb
jl
lods
ret
adc
notb
jp
push
pop
pop
dec
stos
mov
data16
std
aad
gs
lahf
pop
cmp
gs
pop
test
repnz
and
popa
mov
xor
dec
dec
mov
movlps
push
orl
dec
sub
into
int
cltd
xchg
cs
xchg
xor
jo
call
ja
roll
add
xor
lods
sub
mov
out
es
dec
fadd
sti
in
lret
clts
push
inc
push
mov
out
call
push
and
aam
jns
or
ljmp
cli
push
mov
xlat
pop
dec
dec
sub
fsub
mov
sub
daa
dec
push
out
mov
dec
pushl
sub
stos
sub
mov
daa
inc
jbe
cmp
loope
repnz
scas
adc
pop
inc
fwait
insl
mov
das
mov
dec
mov
ss
mov
fidivrl
ror
in
mov
push
jl
es
loopne
adc
sbb
jmp
popa
outsb
jnp
repnz
pop
clc
sahf
fdivp
pop
imul
insb
je
in
pop
dec
lods
mov
lds
scas
push
mov
ror
test
and
dec
push
stc
pusha
cmp
mov
pop
lcall
inc
out
mov
push
pop
ljmp
push
into
mov
dec
sbb
and
push
outsb
pop
subb
or
ret
loopne
leave
mov
mov
ds
movsb
in
pusha
dec
sbb
mov
dec
dec
rcrl
dec
icebp
orl
mov
xchg
shll
test
test
cmpsb
sub
addr16
stos
popa
mov
mov
inc
xor
pop
aas
in
fbstp
mov
jl
xor
in
mov
xchg
pop
fldl
cltd
sti
adc
xor
out
mov
repz
pusha
push
bound
sbb
mov
mov
and
js
or
roll
repz
sbb
ficomps
dec
jns
out
pop
cmp
fwait
in
push
dec
cli
stos
aam
mov
or
cmp
or
repz
or
repnz
jle
loopne
sub
dec
fidivl
rcr
scas
in
ret
add
and
sbb
lock
arpl
shll
sbbl
imull
dec
xor
push
push
push
outsl
pop
xchg
jae
mov
ret
push
lea
jp
xor
mov
sti
sti
mov
iret
xchg
test
and
fsubl
lea
cmp
repnz
imul
repz
push
or
ror
ds
push
dec
outsb
popl
mov
adc
xor
mov
lahf
clc
add
xor
cmp
sbb
imul
xor
pop
adc
popa
cmpsl
movsb
mov
mov
nop
lcall
xchg
mov
leave
pop
test
cwtl
push
iret
and
mov
ja
dec
js
aaa
add
jmp
or
push
xor
xchg
sbb
test
sbb
mov
aas
movsl
mov
sbb
cld
push
jnp
jmp
add
xor
jle
adc
out
adc
mov
outsl
or
push
movsl
sbbb
jno
int
cmp
cmpsl
emms
cmc
sbb
movsl
stos
push
cmpsb
sbb
jne
push
inc
scas
jmp
or
xor
pop
in
sbb
shl
adc
in
xchg
enter
sahf
sub
inc
inc
jg
adc
out
dec
popa
test
sbb
push
ds
mov
mov
inc
movb
pop
lock
pop
loop
sahf
lods
xchg
push
xor
js
push
cmp
or
sbb
pop
fdivs
push
dec
lcall
jmp
jno
and
ja
cld
mov
sub
test
xor
or
and
jbe
push
repnz
imul
or
adc
mov
pop
xchg
ss
xchg
lcall
stc
adc
inc
insb
lock
pop
je
add
repz
mov
push
mul
rcl
xor
fcmove
adc
imul
mov
sti
sub
push
jmp
push
pop
shlb
js
sub
pusha
cmpsb
arpl
pop
std
push
stos
mov
jl
mov
shll
xchg
clc
lock
pop
sbb
pusha
xchg
add
dec
xchg
loope
int3
subl
pop
mov
dec
rolb
shlb
out
lret
sbb
call
adc
or
push
dec
fstpl
sbbb
cmpsl
jge
sbb
outsl
movsb
adc
ja
leave
mov
rcrb
clc
dec
sbb
dec
add
cmp
pop
lahf
aas
popa
lahf
dec
mov
or
or
hlt
push
xor
in
rol
jnp
sub
mov
test
ret
xlat
out
or
daa
test
clc
or
mov
out
mov
mov
shr
jae
push
mov
adc
bound
cmc
sahf
cmp
xor
xchg
fs
lods
sbb
fwait
aam
and
jmp
subb
mov
or
js
outsb
xchg
cmp
shll
int
cwtl
mov
loop
in
cmpsl
mov
add
jle
sarl
in
mov
imul
nop
in
xlat
popa
mov
jg
dec
in
dec
pop
cmp
sbb
cld
dec
lret
outsb
adc
xchg
add
jp
fwait
aam
rcrl
nop
mov
and
xchg
enter
cmp
and
xor
ds
sub
pop
adc
jmp
push
adc
cs
repnz
dec
mov
mov
xor
pop
sarb
and
fldl
adc
inc
add
xor
ljmp
aad
adc
lret
jns
rorl
pop
lods
cmp
xchg
popa
iret
cmp
movsl
jecxz
lcall
rorb
xchg
int
push
mov
xor
xchg
aas
and
pop
push
ret
xchg
xchg
xor
lock
mov
xchg
jb
sub
add
in
das
xor
jnp
mov
add
mov
inc
and
adc
cmp
ret
mov
sub
push
jecxz
mov
fmuls
or
gs
test
sbb
xor
xchg
jbe
pop
shrb
enter
imul
sub
mov
sahf
mov
iret
adc
add
out
mov
adc
ror
dec
fisubrs
in
pusha
mov
dec
loopne
stos
xor
jmp
mov
js
imul
les
add
jae
mov
stc
and
or
ss
dec
pop
jno
or
dec
fcompl
in
adc
enter
mov
out
fcomps
xor
xor
add
loope
nop
popa
repnz
sub
roll
inc
orl
xchg
enter
fdivrs
push
icebp
mov
dec
clc
gs
ljmp
repz
pushf
insb
addr16
leave
out
cmp
add
data16
ficomps
push
lcall
cmpsl
mov
sbb
xor
push
or
jb
popf
in
cmpsb
jns
xchg
pop
inc
insb
mov
test
mov
xor
sbb
inc
sub
xor
outsb
or
roll
ficompl
aas
and
imul
fwait
pop
jns
dec
mov
jns
ljmp
ret
stc
out
fimuls
add
mov
add
sbbl
mov
or
test
sbb
outsb
cmp
andb
cmpsl
jnp
inc
add
pop
loope
add
or
mov
icebp
fidivl
imul
push
jecxz
push
ljmp
or
inc
cld
data16
ret
inc
pop
movsl
cmp
xchg
ds
dec
int3
into
xor
fsub
add
daa
adc
push
dec
cld
pop
mov
inc
jl
repz
fsubl
sbb
loopne
add
push
mov
and
mov
or
hlt
data16
sub
jbe
mov
cmp
jle
mov
into
jecxz
push
stos
add
jp
mov
movsl
push
push
add
repz
iret
inc
mov
lea
ret
jnp
add
mov
adc
test
out
movsb
lcall
aam
inc
push
jne
lahf
xchg
push
inc
adc
adc
lds
add
test
testb
inc
out
fdivrl
out
subps
push
js
out
out
xor
or
repnz
subl
mov
movsl
pop
and
lahf
nop
dec
ficomps
adcl
and
lea
inc
mov
xchg
jecxz
add
lock
or
arpl
mov
dec
leave
push
push
mov
dec
mov
stos
mov
pop
dec
add
cmc
mov
sahf
mov
jae
sub
mov
mov
inc
dec
div
adc
les
lea
mov
ret
inc
scas
ja
mov
neg
inc
jb
mov
fsubl
xor
jp
pushf
push
stos
sbb
jno
cmp
pop
jae
insb
xlat
mov
sub
cli
scas
inc
pushf
scas
mov
mov
in
je
sub
in
adc
xchg
es
pop
clc
inc
ds
out
mov
xchg
pop
insb
out
dec
mov
mov
lcall
push
stos
sbb
pop
mov
xchg
dec
cmc
test
push
cltd
dec
sub
push
mov
into
mov
addl
sub
js
mov
repz
mov
mov
lods
js,pt
scas
xchg
and
or
cmp
and
lods
cmp
popfw
fucomi
jg
sbb
aas
jmp
jmp
or
cmp
cmp
enter
idivb
fsubrl
jmp
and
lcall
insb
lds
jmp
cmp
out
add
lahf
add
pop
xor
or
mov
adc
push
in
push
xor
mov
sub
dec
jbe
inc
add
adc
icebp
mov
push
mov
pop
adc
jae
mov
cmp
in
xchg
adc
jnp
data16
push
push
nop
iret
in
mov
sahf
jg
adc
je
add
inc
js
dec
push
xor
out
unpcklps
mov
jg
and
push
sbb
call
imul
push
add
int3
push
test
int3
js
ret
fsubs
push
jl
clc
addl
icebp
sub
mov
aam
daa
push
xchg
std
imul
inc
in
je
cmp
mov
andl
imul
xchg
cwtl
mov
cmc
sbb
dec
lahf
jmp
nop
rdmsr
aaa
pop
sti
jne
cli
ds
in
add
push
jae
or
sub
xor
pushf
push
in
adc
inc
pop
adc
dec
xchg
xlat
aam
lea
cmpsl
and
cmp
mov
in
inc
sbb
sbbl
inc
out
cmp
dec
cmc
jne
std
es
add
stos
mov
int
mov
cmp
popa
scas
sub
lods
fmul
jecxz
push
jp
add
outsb
push
mov
push
leave
test
fidivrs
daa
mov
xchg
mov
aas
movsl
sub
or
popa
push
xor
pop
dec
rcll
outsl
ret
xor
nop
sub
cltd
getsec
add
sbb
scas
xchg
xchg
xor
cli
aam
mov
jae
icebp
adc
pusha
aaa
cmc
gs
cmp
loopne
pop
stos
in
cmp
es
and
pmaxub
dec
pop
inc
ljmpw
and
jns
mov
push
push
sub
dec
xor
and
fldcw
push
adc
stc
pop
out
mov
popa
jmp
mov
movsl
in
shrl
push
mov
insb
mov
adc
mov
loope
leave
out
ror
stos
jmp
push
lods
iret
jns
loop
addb
cwtl
jne
sti
popf
dec
mov
xor
sbb
dec
pushf
es
mov
fcmovnb
pop
cmp
loopne
dec
test
cwtl
or
sahf
insb
pop
pusha
imul
cmp
xor
xchg
je
cmp
push
inc
aam
adc
fcmovne
outsl
jmp
adc
imul
cli
mov
icebp
xchg
cmp
mov
mov
xor
pop
sbb
fmul
movsl
lds
into
pushf
sbb
pshufw
int3
xchg
int
lcall
push
inc
sahf
out
insl
jb
sbb
scas
repz
xorb
in
xchg
xor
cmp
cwtl
dec
and
or
loop
jb
sub
lds
mov
adc
mov
xchg
cmp
fistpll
movsb
adc
xchg
in
add
insb
dec
and
js
jmp
inc
xchg
xchg
std
lret
lcall
mov
mov
outsb
ret
sbb
mov
dec
shrb
xor
push
ret
or
push
scas
sbb
dec
out
scas
addr16
in
bound
mov
inc
add
hlt
rolb
pop
pop
push
sub
fisttpl
inc
mov
sub
fst
xchg
cmpsl
push
hlt
roll
arpl
xchg
dec
inc
dec
cmp
sub
xor
lret
lahf
inc
cmp
js
adc
mov
cmp
loope
dec
jb
or
loopne
out
xor
jnp
jg
pop
jp
movsl
mov
pop
mov
test
out
mov
sahf
jo
inc
jecxz
cmp
repnz
bound
int3
pop
jnp
insb
mov
or
les
ficompl
dec
jg
dec
sbb
rclb
les
and
mull
pop
loope
or
out
push
pushf
insb
add
js
incb
xor
pop
in
lds
mov
jmp
mov
cmp
inc
sbb
rcl
lret
shll
push
xlat
dec
inc
cmp
test
push
adc
mov
rcl
insl
mov
outsb
fisubrl
mov
mov
shll
mov
es
in
leave
sub
mov
and
sti
jns
pop
xchg
or
mov
inc
aad
dec
mov
mov
lods
push
gs
xlat
and
sbb
loop
xchg
and
loop
mov
pop
xchg
dec
sahf
jge
ret
add
enter
cmp
shlb
or
aam
pop
fsub
xchg
cmpsb
rcrb
lds
jmp
es
jecxz
sbb
mov
push
and
mov
dec
xchg
outsl
jo
sbb
in
iret
mov
fsubr
out
je
push
into
pop
pop
sbb
xor
mov
cld
jmp
jbe
jbe
pop
aam
insl
inc
insb
sub
cld
jge
ds
xchg
or
ds
enter
xor
add
sahf
jnp
loop
int
or
push
and
cmpsl
adc
push
movsl
inc
push
orl
int3
or
and
push
xchg
lret
jb
add
adc
mov
or
sahf
cld
in
jo
addb
cmp
loopne
dec
sub
or
or
mov
lcall
cli
cmp
shll
xchg
jne
sub
call
insl
dec
dec
adc
jecxz
or
xorps
sbb
lret
or
out
xlat
adc
xchg
adc
xor
mov
jmp
das
ficoml
lea
iret
sbbl
xchg
inc
jno
add
inc
xlat
test
sub
out
lea
daa
outsb
pop
xchg
push
in
repz
fistpl
repz
outsb
xchg
out
loopne
in
cmc
xor
vmwrite
cmp
cmpsb
dec
mov
lds
jbe
xor
sbb
jns
sub
mov
jp
push
jg
push
ds
cmp
call
jo
aad
lret
shll
daa
xor
js
xchg
fdivl
mov
sub
dec
das
scas
repz
sbb
lds
push
enter
dec
fstps
jp
jb
rcrb
fadd
jmp
jae
lods
xchg
mov
pop
loopne
movsl
xchg
mov
je
in
clc
cmp
cmp
pop
sbb
xor
cs
pop
aas
push
aas
mov
adc
cmp
xchg
adc
sbb
in
inc
fs
push
inc
mov
ds
adc
or
or
hlt
test
and
in
cld
xor
xor
sub
or
push
pop
cmp
imul
in
loop
into
es
imul
mov
pop
add
mov
inc
test
enter
cltd
and
mov
test
pop
xlat
or
sbb
sub
xchg
cmp
sahf
sub
out
lahf
jns
xchg
xchg
sub
xchg
cld
add
sub
pop
enter
xchg
jno
and
enter
jnp
xchg
in
cli
sub
sahf
cmc
cmp
ret
fs
sahf
nop
sub
popf
mov
mov
movsb
jmp
fistps
mov
jns
push
data16
test
insl
add
mov
sbb
cmp
push
dec
rep
mov
arpl
jg
je
and
cmp
or
inc
cltd
xor
repz
scas
mov
pop
or
pop
sub
leave
sub
push
dec
xor
fistps
aad
dec
hlt
fstpt
add
add
rcl
mov
mov
or
sahf
jle
or
fnstsw
xor
pop
add
arpl
jg
mov
out
push
inc
jmp
sarl
rolb
je
test
in
loope
mov
adc
push
shr
imul
push
popa
mov
jns
push
adc
push
int3
sbb
rcrb
xor
rcrb
xor
stos
popa
pop
cmc
cld
xor
mov
jno
and
cltd
mov
adcb
jle
aam
adc
repz
jp
mov
push
ds
negb
fstpl
in
cmp
shl
lds
pop
xchg
sub
cmpsb
jae
cmpl
mov
ret
fisubrl
iret
pusha
xorb
in
mov
fstpt
adc
cs
out
pop
push
push
out
xchg
sub
pop
pop
mov
icebp
out
xorl
imul
jmp
mov
scas
inc
jle
fstpl
popf
mov
and
fdivrs
sahf
test
sbb
push
in
push
shlb
sub
jmp
int3
les
push
fsubp
in
jbe
pop
pop
in
cmpb
filds
daa
mov
pop
pop
jecxz
stc
pushf
imull
mov
in
xchg
dec
cli
inc
mov
jmp
push
xor
inc
inc
mov
jo
cli
cmp
mov
hlt
stc
cmp
div
aas
pop
pop
xchg
sbb
xchg
mov
and
lods
xchg
add
popf
repz
inc
push
fimuls
inc
mov
push
fdivl
in
xor
stos
flds
clc
into
das
mov
movsb
xchg
xor
divb
divl
jecxz
decb
sbb
adc
leave
pop
add
fsubl
out
adc
mov
sarb
inc
push
lods
andl
sahf
inc
jnp
test
mov
incb
setno
add
push
rcrb
cmp
jno
in
lock
pusha
js
jns
dec
inc
mov
ret
inc
pushf
adc
fwait
shlb
xor
or
mov
cmc
test
cli
clc
fisttpll
and
cmp
test
adc
sahf
out
jecxz
jb
movsl
pop
push
pop
sub
iret
mov
sbb
inc
imul
mov
dec
fld
stos
sbb
ret
enter
xor
inc
shrl
cwtl
xchg
out
std
xchg
pop
mov
lcall
add
imul
sbb
xchg
mov
int
addr16
mov
mov
inc
andb
lret
mov
and
dec
aaa
in
jle
in
mov
or
popa
ss
sti
pop
mov
xor
mov
jne
insl
cmpsb
xchg
push
xor
daa
popf
roll
clc
scas
jmp
add
dec
jo
test
scas
rcr
icebp
data16
rcll
loop
jo
sub
sbb
stos
sbb
ret
int
mov
xchg
cmp
jo
in
mov
cmp
cmp
mov
aaa
in
popf
pop
jo
or
jne
push
dec
dec
xchg
aad
or
xchg
test
int3
sbb
stos
cmp
rcr
gs
inc
pop
cmp
mov
or
icebp
or
cmp
push
or
cli
mov
test
push
pop
and
push
xor
and
push
stos
rolb
ss
popa
lret
ret
leave
dec
sti
das
test
or
sti
jg
mov
inc
mov
mov
or
notl
js
dec
mov
mov
popa
dec
mov
and
jne
ret
jae
cmp
xchg
mov
out
movsl
push
push
sub
sub
test
dec
add
sbb
mov
int
data16
sbb
les
insb
add
push
int3
repnz
jg
cmpsb
mov
aam
mov
xchg
add
call
es
sub
les
icebp
mov
adc
pusha
mov
insl
push
pusha
pop
movsb
push
jo
add
xor
pop
test
bound
mov
adc
data16
out
jge
xchg
push
add
xor
lea
adc
push
repz
scas
mov
sub
sub
stc
adc
sub
or
ds
sub
dec
sahf
fisttpll
xchg
push
ljmp
aad
mov
daa
sbb
or
and
test
insl
stos
outsb
div
xor
ljmp
push
fstpl
lods
aam
test
cmc
adc
loopne
into
dec
mov
popa
jmp
test
inc
out
sbb
adc
sbb
sbb
jp
jle
sahf
enter
std
push
mov
inc
or
fstl
jns
dec
dec
std
add
decb
fdecstp
and
adc
sbb
mov
mov
and
lret
jmp
fstpt
push
adc
cmp
mov
cmpsl
dec
mov
jo
imul
ds
mov
pop
scas
scas
add
jg
mov
pop
ja
dec
push
into
and
sarb
in
sahf
cld
ret
mov
ja
jb
es
jno
and
xchg
add
lods
dec
sub
inc
fsqrt
aam
jecxz
fiaddl
ffree
pop
rolb
stc
scas
cmp
stos
pop
out
pushf
js
andb
ret
inc
cmp
lcall
pop
mov
and
push
xorb
and
ljmp
fisttpll
ss
inc
cmpb
mov
sbb
sub
jmp
push
cmpl
cmpsl
or
sbb
pop
mov
into
xchg
sub
stos
repnz
out
cwtl
aad
or
jl
mov
and
lods
pushf
jmp
pop
cmp
dec
or
les
cmpsl
and
icebp
cltd
sub
and
push
or
hlt
lock
push
fbld
aam
inc
inc
pop
std
jge
subl
les
xor
cs
dec
xchg
out
aaa
cwtl
push
addb
cwtl
test
rol
push
xor
push
xorb
shlb
mov
pop
sar
inc
fdivrs
test
aam
in
mulb
push
in
xchg
movsb
lds
repz
mov
sbbb
mov
sub
xlat
inc
leave
or
mov
arpl
lret
pop
dec
mov
popf
xchg
xor
jnp
movsl
sbb
jne
dec
sub
jg
test
xchg
fdivs
cmpsl
xor
mov
ret
add
jae
mov
xor
movsl
xchg
lods
mov
stos
or
cmc
out
inc
or
mov
cld
mov
dec
mov
cmpsb
icebp
sbb
aaa
ret
dec
dec
sbb
mov
pop
in
push
or
ret
xor
enter
fwait
push
push
mov
lock
sti
pusha
inc
inc
stos
xor
fmull
xchg
popf
fistpll
sbb
inc
pop
xchg
sbb
mov
hlt
sahf
mov
mov
push
icebp
and
inc
mov
or
mov
scas
pop
fwait
mov
mov
mov
mov
out
ss
dec
ds
jmp
out
jg
mov
mov
and
xchg
mov
test
icebp
push
push
jns
mov
xor
aam
sarl
jae
mov
pop
xchg
movsl
out
push
sti
or
sahf
popf
push
loope
push
sub
push
jl
test
inc
lods
insl
xor
sbb
push
sub
inc
inc
jmp
out
xchg
stos
leave
fsubrl
popf
or
scas
jl
xor
sbb
scas
and
in
into
jle
inc
xchg
inc
lahf
mov
imul
xor
mov
mov
stos
sbb
xor
out
jge
fbstp
jp
pop
pop
cld
ficoms
mov
arpl
and
nop
push
in
dec
sub
test
outsl
pop
adc
jmp
stos
xchg
mov
cmpsl
xor
lahf
aas
loop
pop
xlat
jns
or
jecxz
cmpsl
cmp
mov
mov
and
cs
add
add
ret
ljmp
les
out
ds
pusha
roll
sarl
adc
repz
stos
mov
jmp
popa
adc
mov
mov
fnstcw
and
inc
jnp
pop
sub
and
mov
aad
mov
addl
or
xor
fwait
and
push
push
xor
rorb
mov
out
sbb
imul
xor
jg
jns
sets
inc
mov
xlat
push
testb
out
test
jo
fbstp
inc
xor
dec
arpl
fbld
and
fldl
inc
mov
mov
adc
orb
int3
negl
sub
or
in
mov
sub
sub
xor
dec
pop
or
in
outsl
in
dec
cmp
popf
inc
inc
sahf
xor
pop
mov
pop
or
pop
mov
scas
and
in
dec
cmc
push
cltd
loopne
imul
outsl
lret
cmp
rolb
std
inc
push
xchg
shrl
cmc
lea
loope
cmp
push
call
test
lock
sbb
popa
lret
fcoms
in
in
in
sbb
insl
mov
jnp
dec
mov
cmc
adc
mov
pop
shl
sub
add
ucomiss
das
lret
mov
in
mov
jp
fdivs
mov
mov
stc
dec
or
ljmp
push
jo
mov
nop
xchg
rorb
push
mov
popf
push
mov
sbb
shll
ret
and
mov
ret
mov
int
int
jno
xlat
adc
repz
inc
adc
aas
or
jnp
shrb
aad
pop
or
scas
mov
fldenv
pushl
das
dec
jo
sbb
lret
mov
bound
sarb
or
or
push
lods
mov
mov
shr
je
add
pop
sahf
call
jno
push
scas
in
xchg
rol
pop
push
and
leave
pop
inc
and
pop
sub
cmp
lds
adc
shlb
nop
pop
adc
push
ljmp
fistpl
arpl
stos
push
lret
test
xchg
xor
in
push
test
mov
sub
push
iret
xchg
mov
test
push
les
add
je
cmp
in
pop
aaa
and
cli
dec
rcr
rcrb
or
or
shll
bound
inc
inc
call
iret
xchg
sub
mov
mov
repz
orl
jne
cs
push
push
rcrl
pop
call
mov
inc
loopne
sub
addr16
outsl
and
xor
es
negl
mov
xlat
in
lcall
cmp
mov
and
mov
imul
add
outsl
xchg
add
lods
mov
adc
dec
dec
push
lods
adc
dec
jl
loope
jb
mov
jmp
mov
or
lods
scas
es
fidivrs
lahf
popa
adc
stos
out
push
cmp
pop
das
inc
fistpl
subb
cmpl
mov
insb
mov
dec
pushf
lods
stos
xchg
lods
lods
inc
imul
and
inc
and
outsl
mov
jno
std
xorl
mov
pop
add
scas
xchg
iret
enter
repz
lods
shrb
xorl
fiaddl
ret
xorb
sub
std
notl
pushl
das
inc
incb
inc
mov
ds
add
mull
lret
jmp
imul
das
push
movsl
mov
jbe
sbb
sbb
pop
adc
lods
push
je
mov
sub
add
movsl
inc
aas
jecxz
rcl
bound
sahf
shrb
xchg
rcrl
mov
call
or
xor
aad
movsb
inc
dec
xor
ljmp
push
push
pop
fstl
sbb
mov
pop
sub
enter
test
jbe
out
out
inc
mov
insb
sub
neg
insb
call
movsb
fcmovbe
xor
mov
sub
ret
push
jmp
scas
lret
fldenv
lock
in
imul
mov
sub
add
pusha
dec
std
jmp
loopne
cmp
jb
jne
arpl
int3
ret
cs
mov
insb
cmp
xlat
mov
out
pop
cmp
or
mov
mov
xor
xchg
jne
aam
mov
aaa
cmc
push
sbb
repz
stos
mov
sbb
scas
dec
sahf
cli
adc
or
ljmp
or
xor
pushf
pusha
push
push
fwait
cmpsl
iret
lahf
lahf
lds
hlt
adc
cmp
cmp
scas
sub
sbb
into
mov
pop
leave
dec
or
adc
sbb
and
sub
lods
jge
pop
sbb
add
clc
hlt
insl
repnz
push
cmpl
andb
int3
dec
sub
out
scas
sub
push
mov
cmp
jg
xchg
hlt
xchg
das
and
sbb
insb
sarl
emms
cli
sbb
fldcw
push
outsb
leave
inc
lret
addr16
shll
mov
loopne
outsl
add
ror
cmc
jecxz
jp
mov
test
fwait
mulb
xchg
push
xchg
sbb
add
inc
hlt
mov
mov
sbb
dec
pop
fisubrs
pop
mov
clc
out
ljmp
es
cmpsb
jl
testl
jle
fs
inc
jo
aad
inc
je
and
pop
aas
xor
sbb
push
jcxz
pushf
pop
xor
lahf
mov
cmp
push
test
xor
call
xchg
lods
ffree
in
mov
jno
pop
sub
in
jns
mov
lea
push
mov
cmp
pop
xlat
fs
mov
add
jg
cmp
andb
mov
cmp
aad
mov
imul
pavgw
xor
sbb
pop
loope
jno
and
fucomp
sub
inc
pop
cmp
inc
call
inc
mov
jl
cmpsb
dec
stos
lret
test
cmp
mov
enter
out
in
repz
nop
pop
sahf
fsts
pop
cwtl
pop
outsl
adc
xchg
adc
mov
mov
push
jae
jmp
add
mov
test
and
mov
ret
jnp
popa
lss
mov
mov
fildll
xchg
mov
ja
call
mov
mov
fxch
popa
lods
int
mov
xchg
testb
dec
sub
xor
fstps
cmp
sti
call
inc
nop
cmp
dec
addr16
mov
or
mov
or
push
dec
lret
sahf
mov
cmpb
lahf
lcall
lahf
jge
sbb
daa
les
out
sbb
sarb
push
cli
inc
pop
roll
mov
adcb
loop
stos
jns
into
fcoml
mov
test
rolb
jmp
jmp
das
adc
sbb
xlat
test
add
into
js
in
mov
mov
lds
mov
jg
jmp
adc
repnz
push
mov
push
fdivr
popl
jmp
or
xchg
into
xor
or
sub
cmc
out
scas
pushf
cltd
loope
enter
mov
cwtl
push
pop
fwait
iret
jmp
das
repnz
call
mov
stos
lcall
sbb
shrl
xlat
fcomps
js
out
or
cmp
push
movsl
fdiv
clc
mov
add
jp
arpl
xchg
outsb
cmp
mov
fneni(8087
mov
cmpsl
mov
xchg
gs
jmp
push
in
shr
pop
fisubrs
push
dec
dec
lret
lahf
mov
sub
sahf
movhps
test
mov
into
jns
mov
adc
add
lock
push
jb
enter
std
nop
jbe
cmpb
mov
cmp
lcall
and
inc
ss
sbb
testl
sbb
xchg
addl
daa
push
cmpsb
fwait
cmp
or
cmp
mov
mov
in
pushf
xchg
mov
shl
sahf
add
addr16
jae
mov
mov
clc
rol
and
push
mov
mov
movsl
ss
mov
lahf
xor
add
icebp
js
frstor
orl
xchg
pusha
or
pusha
scas
lea
jnp
insb
mov
insl
adc
cli
fcom
xchg
pushl
cmp
and
sarb
add
lea
push
cld
cmp
pop
ret
fisubl
push
push
loop
mov
xchg
mov
push
pop
xor
mov
sbb
jae
icebp
lahf
out
fcmovne
sbb
movlps
mov
in
mov
pop
mov
loop
or
jno
les
adc
ret
jecxz
mov
xor
mov
lea
scas
movsb
outsb
xor
mov
cltd
pop
jp
int3
aas
pusha
mov
mov
jae
lcall
adc
les
jns
inc
push
push
fs
rclb
or
mov
or
repnz
jmp
push
jne
dec
pusha
mov
ficoms
hlt
push
lcall
push
insl
aad
adc
test
jno
das
lds
push
in
test
hlt
loopne
xor
outsl
sti
cmovae
addr16
xchg
push
insb
mov
sbb
in
orl
inc
xor
ret
cmp
test
mov
lock
lods
test
inc
cmp
cmp
es
and
in
or
jg
adc
mov
or
lds
iret
or
adc
int
fstpt
fwait
add
dec
in
mov
vphadduwd
mov
pop
pop
iret
out
mov
pop
xor
mov
std
lods
push
outsb
pop
int3
pop
xor
fisttpll
mov
mov
rcl
mov
scas
jmp
mov
push
mov
push
jnp
push
test
lds
lock
insb
callw
das
jae
jo
xor
mov
bound
mov
pop
cmp
mov
or
sbb
lret
mov
andl
lahf
and
sahf
stos
frstor
lret
xor
lods
mov
adc
mov
in
stos
mov
outsl
dec
fildll
xor
test
repnz
and
stos
sub
rcll
mov
xor
push
sbb
push
mov
cmpsl
addb
add
pop
mov
xor
enter
js
or
fwait
xchg
mov
je
mov
mov
inc
cmp
sbb
je
shlb
inc
or
ret
nop
ja
fwait
mov
sub
push
push
cmc
js
scas
fs
xor
andb
jb
sbb
ffree
push
inc
inc
cltd
inc
aad
sub
push
push
jp
jp
dec
xchg
es
add
cmp
fisubrl
insl
out
ret
imul
loop
jp
icebp
or
sbb
es
jl
xchg
sub
xchg
in
xchg
mov
enter
push
les
push
outsb
js
scas
aaa
cmp
roll
mov
xchg
push
mov
or
sub
mov
push
dec
pop
mov
cmp
and
insb
push
pop
mov
mov
inc
lock
push
jae
mov
out
cmpsb
mov
add
out
ret
jae
ja
xor
sub
dec
imul
mov
imul
mov
lret
mov
xlat
out
jg
sub
inc
inc
cmpsb
sub
nop
jle
xchg
and
mov
cmpsl
xor
inc
and
cmp
adc
mov
pushf
sub
add
in
inc
cmp
mov
ljmp
je
sub
shlb
sub
lahf
out
mov
mov
and
or
test
and
jbe
std
popa
mov
divb
jnp
fistpl
sahf
adc
cmc
insl
mov
xor
cmpsl
and
js
mov
and
xor
subb
xchg
xor
inc
mov
lcall
icebp
shr
add
lea
test
fcmovbe
sbb
and
insb
imul
push
xchg
icebp
push
add
pop
call
jecxz
pop
icebp
sti
test
call
jbe
mov
hlt
mov
xchg
pushf
dec
popf
or
and
adc
aas
inc
or
repnz
in
xor
iret
jle
loope
iret
stc
cmpsl
push
leave
fsubl
fldenv
dec
dec
adc
lahf
and
test
pop
rcrl
adc
ror
adc
out
dec
pop
inc
or
repnz
sti
cmp
jno
ret
sbb
stc
jbe
cmp
iret
aam
repz
int3
push
xchg
and
sub
lret
cmpsl
movsb
iret
mov
xchg
pop
fsubs
pop
mov
inc
dec
push
jae
mov
sbb
inc
lds
xor
push
mov
add
scas
mov
in
inc
jecxz
ret
popfw
push
push
cwtl
into
lret
popa
inc
jl
test
inc
jb
mov
shlb
add
adc
lds
jae
jle
call
xchg
pop
cmp
and
movsl
xor
xlat
xchg
inc
add
popa
scas
mov
psubq
push
sub
push
gs
jp
gs
mov
cmp
sbb
iret
ret
jae
mov
sbb
sahf
out
sbb
idivb
and
sub
xchg
popf
stos
jmp
sub
mov
test
xor
xchg
loope
adc
ficoms
lahf
jp
dec
mov
fcompl
dec
pop
inc
popf
or
jnp
or
inc
push
mov
jge
addl
out
dec
inc
inc
push
mov
pop
xorl
jp
jbe
mov
lock
pop
repz
xor
inc
mov
push
test
loopne
mov
jnp
test
imul
es
iret
mov
shr
test
push
mov
mov
inc
mov
cmp
or
out
lcall
xor
mov
mov
pop
ds
sbb
pop
jecxz
data16
call
loope
cld
into
push
aad
dec
jp
sub
cmc
lds
stos
or
jnp
mov
mov
and
out
pop
pop
in
fnstcw
push
push
push
sub
mov
ret
add
xor
sbb
cltd
fsubrl
lcall
mov
stos
lds
loopne
pop
mov
movsb
stos
jae
mov
js
and
dec
divl
cmp
pop
fwait
adc
repnz
inc
pop
xor
jmp
and
addr16
call
dec
xorb
cs
push
add
pop
cmc
cmp
test
push
int
add
cwtl
pminub
dec
sub
push
pop
jmp
js
dec
arpl
andl
jns
aaa
out
arpl
sahf
in
insl
adc
xor
push
jae
shrb
push
or
dec
lock
xchg
jge
cmpsl
out
sub
out
push
mov
leave
mov
add
jno
jbe
or
addl
mov
inc
and
mov
pop
or
dec
mov
mov
jnp,pn
test
stc
ficompl
push
cmp
adc
enter
xor
add
dec
cld
jne
insb
mov
mov
sub
inc
mov
ljmp
enter
and
xchg
insl
gs
cwtl
adc
dec
scas
lods
xchg
ljmp
cmpsb
mov
jne
imul
adc
sub
or
cmc
dec
jge
and
jae
push
sub
repnz
pop
lods
mov
adcb
adc
mov
test
lret
xor
mov
push
xchg
testb
stc
xchg
lock
push
sbb
lds
and
push
js
jne
xchg
jne
stos
cmp
add
jb
mov
dec
inc
xor
xor
ds
cmc
and
jnp
adc
dec
push
fisubl
je
lahf
dec
adcl
mov
pushf
cmpsl
pop
pop
xor
daa
hlt
adc
jae
rcrl
sbb
dec
sbb
aaa
lcall
cmp
icebp
addr16
push
sbb
scas
adc
loope
dec
imul
in
pop
loope
mov
das
mov
mov
fimuls
addr16
xchg
push
xchg
jno
mov
movsb
adc
divb
ja
mov
sub
imul
daa
adc
iret
fcoms
stos
sarl
sub
insl
inc
or
or
cmp
lcall
push
into
mov
and
fimull
xor
cmp
rorb
hlt
cmp
cmp
lods
pop
dec
add
mov
and
lods
mov
push
movl
add
push
sub
dec
jo
mov
dec
cmp
pop
xor
dec
cmp
dec
aaa
jg,pn
mov
xchg
jns
cmp
mov
xor
loopne
cltd
setl
jne
mov
fnsave
push
sbb
pop
cmpsb
pop
int
adc
lret
jne
mov
or
sbbb
clc
cli
ljmp
sahf
sbb
or
push
add
inc
cmp
pusha
or
or
sti
dec
insl
jno
imull
adc
cltd
jbe
pushl
test
or
mov
shll
fdivl
jecxz
cmp
js
cmp
xchg
std
mov
push
test
cmp
sahf
add
sub
push
push
mov
pop
jo
sbb
test
xchg
push
movsl
pop
mov
xchg
leave
cmp
lds
add
fnstcw
es
mov
fmul
sub
aad
and
mov
mov
cmp
cmc
xchg
inc
testb
cmp
fildll
inc
stos
lods
sub
sbbb
inc
dec
ljmp
jbe
stc
test
es
sarl
mov
pop
aaa
imul
lcall
jne
cmp
inc
fwait
int3
fistl
cld
push
gs
push
nop
lahf
shrl
adcb
cmp
jl
and
mov
in
mov
or
pop
jae
int
jne
in
push
rcrl
sub
sub
ficoml
cmp
push
imul
adc
jb
xchg
shll
jle
es
addl
test
loope
and
add
mov
rclb
aam
xchg
adc
daa
insl
jbe
jl
rclb
sub
xchg
sub
push
xchg
pop
insb
arpl
add
dec
adc
adc
xchg
mov
jnp
or
adc
add
roll
dec
aad
push
push
imul
aaa
shlb
pop
orb
data16
push
xchg
dec
cmpsl
push
cld
call
dec
mov
imul
dec
ret
jmp
stos
gs
aas
iret
ret
sarb
sub
test
pusha
jb
cmpl
cmp
orl
pop
mov
dec
xlat
push
negl
xor
shlb
or
les
cmp
fidivs
enter
mov
cs
push
push
subl
xchg
inc
or
out
inc
sbb
dec
adc
jecxz
and
mov
mov
loop
mov
dec
je
xor
mov
xor
int3
xor
inc
sarb
xor
pushf
lcall
cmpsb
mov
fs
sub
decb
inc
jno
dec
psubq
mov
add
repz
adc
xor
shrl
push
cmpsb
fiaddl
pop
imul
mov
nop
push
mov
add
nop
cmpl
pop
mov
cmp
jg
lret
inc
arpl
or
push
adc
in
cmp
jb
repnz
neg
mov
xlat
leave
cld
rol
pop
pop
aas
int3
scas
add
adc
mov
repnz
push
xchg
mov
shrl
fstpl
cmp
arpl
outsb
push
fcmovu
popf
scas
or
cmp
mov
cmp
mov
add
adc
dec
mov
mov
push
xchg
mov
fbstp
adc
and
or
outsl
mov
cmp
negl
frstor
inc
sbb
fcom
push
mov
out
adcb
sbb
inc
and
xchg
cltd
ror
push
and
pop
dec
adc
inc
cmp
jno
mov
pop
mov
xchg
mov
dec
vcvtpd2ps
xlat
sbb
xlat
outsb
mov
cmpsb
and
jno
and
and
jns
mov
dec
shlb
out
pop
inc
jnp
out
popa
cld
cli
or
push
add
int
cmp
sub
jb
mov
jmp
neg
scas
mov
mov
sbb
shll
and
mov
cld
test
unpckhps
xor
aas
mov
mov
xor
call
popf
cld
ds
aaa
cld
into
out
into
pop
in
iret
mov
mov
lret
mov
std
scas
mov
pop
xchg
fwait
pop
dec
ret
cmc
jns
adc
jecxz
xor
pop
mov
dec
lret
sbb
mov
mov
jno
jb
jae
mov
out
sub
add
aas
mov
mov
rolb
call
popl
xor
xchg
pop
in
pop
xchg
jns
push
in
dec
pop
fisubs
stc
rorl
popa
sbb
cmp
xchg
xchg
mov
fs
nop
xor
nop
push
mov
add
jb
cs
push
push
inc
cli
push
xchg
pushf
std
imull
cmp
dec
cli
xchg
imul
jge
cmp
push
imul
imul
aam
rcrl
pop
aas
pop
mov
into
test
gs
xor
add
pusha
mov
adc
lahf
jbe
inc
inc
sub
xor
push
test
sbb
sub
dec
sahf
daa
mov
or
lcall
jne
mov
mov
movsb
dec
rcrl
pop
gs
add
arpl
xor
xor
mov
fcoms
lods
dec
cmpsl
pinsrw
fnstcw
push
jbe
and
cmc
mov
jl
inc
andl
lret
and
stc
aam
lock
xchg
jmp
push
xchg
inc
mov
dec
sahf
and
leave
inc
or
movsl
dec
pop
lcall
repnz
mov
push
dec
movsl
stos
pop
xchg
and
frstor
push
jno
les
test
jp
ja
mov
in
hlt
scas
mov
stos
xor
daa
popf
mov
test
push
lcall
xchg
loopne
jne
dec
hlt
inc
push
icebp
out
mov
std
sbb
mov
jbe
xchg
and
sti
shll
bound
dec
iret
sub
aad
fistps
mov
aam
xchg
pop
aad
mov
or
push
inc
dec
pushf
fs
les
inc
xor
ret
lock
dec
popf
sbb
lret
mov
movsb
fisttpl
mov
testl
and
mov
cmp
sti
mov
cmpb
mov
insl
xchg
and
or
gs
lret
aam
in
int
cmpsl
lcall
add
repnz
fs
push
dec
repnz
outsb
imul
mov
lea
loop
and
cmp
mov
cld
mov
mov
std
jl
jo
mov
sbb
xor
stos
rcl
out
leave
das
mov
jnp
mov
push
pop
lret
scas
push
shrb
or
add
cld
cmp
mov
cli
rcl
int
aas
push
jg
jo
push
in
int3
inc
movsb
push
or
and
fwait
shll
lds
scas
jo
pop
jno
enter
jg
ds
cltd
push
mov
xor
clc
jg
lcall
mov
mov
ljmp
inc
cmp
push
cmc
dec
mov
test
xchg
mov
lock
bound
shll
sub
test
xchg
nop
shll
rclb
daa
push
cmp
xchg
mov
push
xchg
lret
sub
int
jge
lcall
das
nop
sub
cli
in
add
mov
and
std
sub
adc
cld
aas
je
adc
decb
out
scas
mov
jae
sbb
mov
adc
je
pushl
adc
out
out
inc
inc
test
xchg
int3
stos
sub
mov
mov
cmp
scas
int
cmp
pop
fistps
inc
ror
out
xchg
pop
sahf
pop
ret
clc
inc
cmp
fisubs
and
cmp
xor
aam
mov
dec
rcrl
aam
xor
mov
out
xor
popa
jbe
gs
loop
cmp
xor
cli
ds
shl
cmp
clc
xor
or
jge
mov
loop
mov
in
adc
mov
jmp
inc
repz
xchg
test
push
outsl
push
sub
mov
or
nop
or
cmp
xchg
jbe
test
and
out
clc
mov
inc
out
add
movsb
mov
or
arpl
and
rcrl
xor
ret
out
aad
outsl
mov
push
mov
icebp
outsl
fsubl
xchg
xlat
jae
jl
ret
jnp
fsts
sbb
inc
aad
dec
pxor
test
stos
cwtl
ret
pop
nop
lret
gs
add
xchg
mov
subb
imul
push
test
imull
lcall
and
adc
pop
ja
xchg
js
inc
lods
xchg
mov
fldl
les
shrl
dec
cmp
mov
repz
js
push
jmp
mov
aaa
test
sub
adc
dec
cltd
sub
dec
xchg
mov
mov
mov
add
pop
mov
add
dec
testl
inc
sub
dec
xor
lret
pushf
mov
jg
mov
aad
inc
inc
mov
mov
sbb
sbb
iret
movsl
pop
jle
sbb
imul
sub
lea
ss
test
xlat
imul
adc
lock
xchg
movsl
adc
pop
bswap
xchg
sub
clc
push
int
add
vmwrite
jmp
nop
mov
ja
inc
adc
pop
cs
popf
cmovnp
pop
pop
sti
inc
cwtl
enter
insl
pop
push
das
jbe
cld
cmp
mov
inc
cwtl
mov
sbb
jle
pushf
mov
sarl
pop
push
shll
pop
int3
or
pop
push
inc
jg
bound
and
es
inc
mov
inc
push
clc
lea
inc
adcl
lea
xor
or
dec
xchg
xchg
adc
loopne
or
mov
mov
push
call
popa
out
lret
ljmp
dec
xchg
pop
or
mov
adc
inc
mov
mov
adc
jnp
mov
rolb
xor
cmp
jle
dec
ror
mov
jl
jl
mov
push
sbb
jmp
je
mov
push
addl
inc
loop
mov
or
xchg
lds
shrl
in
mov
dec
jne
out
mov
sahf
cltd
push
fadd
aaa
and
es
add
jg
xchg
dec
ja
lret
repz
jbe
cmp
lods
les
mov
loope
cmp
es
or
test
aad
out
fsubrl
push
mov
cmp
popa
mov
outsb
adc
mov
filds
mov
pop
roll
xor
fisubrl
xor
mov
es
shll
rol
mov
sub
add
fwait
inc
dec
ljmp
and
outsb
xor
lea
fwait
jno
mov
jno
aaa
sub
push
fisubrs
fnstcw
push
cmpsb
rclb
cld
add
outsb
sub
pushf
scas
sbb
cmpsl
mov
fmuls
pop
pop
scas
sahf
aaa
mov
lret
lods
addl
mov
push
mov
dec
push
adc
test
mov
ss
xlat
ljmp
push
ja
repnz
xor
rolb
repz
les
orl
lea
or
cmp
xchg
inc
xor
xchg
int3
sub
mov
in
inc
and
mov
add
push
ds
shlb
mov
mov
in
xchg
jecxz
in
loopne
mov
jbe
sub
fstpt
pop
in
cli
pop
test
jno
jno
insb
aad
xchg
dec
jnp
mov
testl
iret
push
or
and
or
mov
daa
ret
and
dec
cltd
fbstp
or
xchg
adc
adc
popf
pop
push
dec
push
push
mov
mov
sub
neg
jl
test
out
mov
pop
dec
fldl
es
int3
movsl
jg
cs
pop
push
inc
cmp
loop
inc
add
mov
aas
js
outsb
popf
sub
sub
std
cli
movsb
mov
aad
aad
jle
push
icebp
dec
sbb
or
push
test
pop
sarb
jmp
adc
xor
out
addr16
pop
leave
stc
insb
adc
test
aas
jns
fimuls
inc
sahf
shl
jnp
xor
out
push
mov
pop
jg
pop
not
data16
push
call
push
mov
cli
mov
scas
addl
mov
sbb
push
xor
sub
ja
or
gs
mov
mov
and
fwait
subb
pop
pop
fidivl
jae
sbb
loop
dec
popf
inc
add
iret
jno
les
inc
sti
push
jg
mov
ret
in
test
pop
das
rcrb
xchg
dec
cmp
add
mov
pop
cmpsl
lahf
jne
inc
lahf
lea
or
rcl
aas
dec
add
xor
inc
inc
cld
cmp
int
sbb
lahf
push
and
into
test
sub
test
lahf
sbb
jns
das
adc
inc
iret
pop
jp
in
daa
imul
push
gs
and
pop
fsts
inc
mov
pop
jo
lcall
mov
insb
mov
lock
hlt
aam
jmp
cmp
or
clc
push
adc
cli
arpl
xchg
imul
xor
mov
sbb
xchg
jnp
cmp
mov
ret
adc
mov
mov
adc
adc
and
je,pn
pop
cmp
and
adc
fsubrl
mov
cmpl
sbb
outsl
decb
dec
lahf
fstl
adc
popa
add
fdiv
test
rcrb
mov
jecxz
mov
imul
sub
pop
cld
push
test
gs
xlat
pop
add
dec
mov
adc
aaa
add
fwait
aad
in
mov
pop
pop
inc
push
loope
lds
fldenv
jns
pop
aam
sbb
jle
inc
mov
sub
jecxz
shlb
push
daa
push
mov
mov
and
hlt
subl
cld
test
fwait
sub
push
in
ss
or
icebp
dec
ret
or
imul
mov
fnsave
cmp
lock
push
repnz
jle
icebp
cmpsl
and
fistpll
mov
sbb
cmp
sahf
xor
add
mov
loopne
sbb
sti
test
rcr
push
cmp
inc
mov
push
das
dec
pop
jbe
lret
pop
faddp
stc
cmp
jae
lahf
out
jb
daa
xchg
xchg
aas
int3
mov
out
push
jp
and
jmp
mov
or
push
sahf
mov
add
test
call
lahf
fcompl
cwtl
in
add
dec
xchg
das
xchg
push
jle
push
insb
dec
leave
scas
bnd
test
xchg
mov
outsb
rep
repnz
and
pop
mov
mov
adc
loop
testl
ficoms
push
insb
lods
and
outsb
mov
out
xchg
and
push
into
or
divb
push
iret
sub
mov
ja
mov
fiadds
fs
adc
stos
dec
test
mov
mov
scas
sub
jmp
dec
cmpsl
add
bound
shl
adc
incb
pop
test
js
gs
sub
adc
pop
in
lret
or
psllw
sbb
xor
jg,pn
lock
sub
pushf
icebp
mov
jae
and
and
aad
les
lret
loopne
dec
dec
fists
pop
lock
add
ja
cs
xchg
lods
mov
sub
inc
loope
notl
xor
mov
xlat
sub
insb
and
das
adc
imul
inc
lods
pop
mov
jno
scas
in
ds
sub
inc
pushf
mov
movsb
add
not
push
push
addr16
or
cs
sbb
mov
sub
das
inc
repz
negl
loopne
aad
cmp
sub
jl
cmc
lods
inc
mov
in
cld
bound
push
int3
add
add
and
mov
pop
xchg
loopne
and
push
add
es
movsb
jmp
bound
sbb
aad
and
cmp
hlt
addl
mov
push
pop
xor
inc
ljmp
adc
inc
add
fiaddl
sub
loop
xor
mov
jmp
adc
in
xor
pushf
mov
pop
sub
lahf
pop
clc
pop
sbb
cmp
cmp
repnz
out
mov
cmpsl
dec
dec
rolb
lcall
pop
mov
dec
js
push
shlb
je
lea
adc
and
mov
jge
dec
push
aad
mov
movsb
pop
lret
movsl
xchg
popf
add
mov
shlb
add
jb
and
inc
mov
adc
test
fucom
inc
xor
cwtl
dec
sub
outsl
add
out
out
cmp
pushf
in
repnz
xchg
lret
and
adc
std
add
es
lods
outsb
mov
mov
inc
cmpsb
jb
sarb
xchg
pop
ljmp
dec
inc
and
cld
stos
xchg
lret
in
hlt
mov
jmp
inc
cmpsl
pop
int
aas
and
dec
push
sub
mov
sbb
push
bound
mov
jo
cwtl
xor
push
mov
xor
adc
mov
dec
sahf
cli
std
fldenv
add
adc
inc
cmp
or
mov
lods
pop
sub
xchg
pop
xchg
out
test
das
fiadds
mov
mov
dec
mov
dec
pushf
dec
dec
fisubl
mov
mov
jns
mov
jmp
add
rorl
mov
mov
cmp
and
out
jp
jbe
gs
mov
push
std
dec
dec
aaa
xlat
mov
lcall
add
jg
dec
push
arpl
lcall
repnz
les
pop
jmp
test
pop
jb
inc
jno
cmpsb
inc
ret
sub
push
iret
jns
mov
lds
jp
xor
jo
test
je
dec
dec
imul
jmp
xor
cmp
cmp
and
mov
add
dec
out
mov
sub
inc
int3
and
sub
jmp
add
imul
xor
out
in
pop
jle
cmp
pop
or
pop
test
icebp
dec
das
lahf
out
loop
push
cwtl
jmp
inc
push
in
adc
sbb
cmp
pop
jmp
add
cmpb
lcall
add
fwait
pop
test
push
push
aad
cs
pop
and
nop
mov
jg
arpl
out
and
sbb
jecxz
sub
cmc
push
push
aaa
adc
push
mov
pop
fldl
gs
cs
inc
push
popf
lods
xlat
pop
mov
js
scas
mov
rcrb
pushf
fbld
jle
inc
inc
mov
pop
out
scas
es
call
mov
in
into
add
clc
repnz
in
xlat
lcallw
ss
dec
xorb
mov
sub
push
jnp
adc
aaa
jne
jns
cld
add
xor
xor
out
notl
lock
stos
add
mov
sbb
out
dec
clc
in
mov
sub
mov
fldt
scas
inc
or
jo
roll
mov
mov
loopne
sbb
xor
push
xchg
loope
aas
mov
mov
pop
mov
adc
loope
mov
in
xor
stc
pop
rorl
shll
add
sbb
cwtl
out
roll
fisubrs
sub
mov
inc
sub
mov
sbb
test
inc
ret
mov
mov
sbb
pushf
mov
mov
int
aas
mov
jnp
ss
addr16
sub
push
adc
mov
fiaddl
jge
add
sbb
inc
push
xchg
testl
shlb
pop
lret
in
sub
fidivrs
and
cld
jbe
push
mov
inc
pop
and
adc
and
loop
mov
xchg
int
cmpl
cmpl
scas
jge,pt
test
pop
xchg
mov
xchg
dec
jecxz
adc
sbb
sub
pusha
mov
lods
cmp
adc
mov
add
out
push
cmpsb
cmpsb
sahf
adc
lret
fistl
pop
sahf
dec
sbb
call
inc
xchg
hlt
insb
hlt
push
push
out
ret
mov
mov
ss
cli
pop
pop
out
jns
test
fucomp
punpckldq
rcl
pop
add
pop
stc
test
shlb
pop
fs
and
lods
mov
aad
mov
sbb
lock
fstp
and
xor
sub
or
lock
les
test
add
xor
xor
rol
and
ss
cmp
sub
mov
roll
sbb
imul
mov
add
add
inc
int
adc
inc
inc
dec
dec
mov
and
aam
lret
inc
mov
pop
cwtl
adcl
and
subb
sbbb
dec
mov
sbb
cmp
dec
int3
dec
movsb
xchg
movsl
es
sbb
stos
and
aaa
mov
mov
popf
mov
or
dec
stc
pop
inc
shlb
shl
jmp
ja
cmpsb
cmp
mov
and
adc
jl
lahf
lock
dec
cwtl
es
movsl
icebp
pop
fldl
inc
out
ret
push
and
add
icebp
stos
cmpsb
in
imulb
cmc
std
inc
test
add
or
rol
push
je
mov
push
mov
jle
sbb
rcrl
in
jae
push
sarb
icebp
xor
mov
sub
popf
dec
sbb
inc
dec
jmp
xchg
pop
daa
sbb
cmc
inc
stos
fsts
xchg
ljmp
push
mov
insl
jb
enter
xchg
mov
push
les
icebp
in
int3
sbb
add
sbb
out
adc
jle
mov
arpl
nop
cs
push
jno
pop
scas
notl
dec
jp
mov
xchg
int3
mov
mov
rolb
adc
add
mov
jb
xor
mull
imul
pop
subb
mov
scas
sti
and
mov
cld
xchg
std
clc
xor
lret
mov
add
jns
cmc
push
dec
add
fisttps
sub
xor
leave
pop
jbe
int
lods
xchg
dec
xor
mov
xchg
jecxz
xor
rorl
loope
pop
ja
pusha
aaa
js
pushf
xor
mov
nop
movsl
add
jmp
fiaddl
ljmp
repnz
into
ds
mov
sti
mov
sub
cld
out
idivl
xor
add
and
push
out
data16
int3
cltd
jge
pop
add
enter
dec
scas
out
push
bound
dec
les
dec
aas
inc
jp
movsb
das
outsb
stc
jp
in
jle
dec
mov
movsb
fdivs
aad
push
clc
push
push
sub
lcall
scas
xor
ja
cmc
jbe
or
and
push
arpl
or
cmp
lahf
fisttps
stos
mov
adc
stos
xchg
push
call
lock
cmpsb
imul
lods
jl
rclb
out
out
xor
popf
xchg
mov
stc
sbb
enter
mov
arpl
inc
push
es
je
mov
cli
pop
into
shrb
mov
popa
rcr
scas
fsubs
iret
stos
mov
hlt
lcall
clc
pusha
push
fistpl
mov
in
xchg
out
add
mov
bound
adc
mov
adc
and
and
xlat
cmp
std
jg
je
das
cmpsb
xchg
out
lea
pop
cmpsl
push
jle
lcall
jp
sbb
stos
movsb
adc
iret
xchg
adc
loope
shl
and
dec
stos
stc
cs
xchg
das
pushf
sub
or
das
push
mov
pop
rol
imul
ficompl
loopne
dec
pop
and
popf
or
jnp
or
jnp
hlt
rolb
jl
mov
pop
into
addr16
lock
pushf
repz
jp
mov
sub
jae
aaa
int3
movsb
cli
mov
sub
xor
xchg
xchg
xlat
pop
or
mov
es
mov
repz
pop
lcall
in
enter
mov
mov
clc
jnp
adc
gs
pop
push
and
imul
das
cmp
xor
lds
jmp
mov
out
call
and
jne
insl
inc
mov
lea
mov
ds
imul
in
loope
icebp
or
jo
mov
and
out
sbb
arpl
inc
rorb
or
mov
popa
xchg
jl
jae
popa
loope
lret
sub
mov
push
cltd
fs
and
pusha
sub
cmp
das
dec
dec
cmp
xchg
ss
mov
jl
pusha
stos
sbbl
sbb
inc
and
hlt
ret
add
or
js
xchg
mov
add
rclb
push
in
idivb
fdivl
imul
pop
jo
js
int3
pusha
cmp
push
xchg
js
aam
xchg
popa
outsb
adc
enter
dec
retw
lahf
lds
push
cmc
mov
mov
pop
pusha
aas
inc
mov
adc
push
jle
jno
pop
dec
push
push
or
call
repnz
xchg
cwtl
xchg
test
ss
loope
inc
test
xchg
adc
mov
bswap
cmpsb
stc
jle
push
and
jb
pop
push
fsubrs
pop
mov
loopne
xchg
adc
add
aad
mov
je
sti
lret
ss
jo
adc
sbb
push
scas
idivb
mov
cmp
adc
arpl
sub
xchg
xor
ret
into
mov
sahf
add
into
insl
xor
sbb
xchg
mov
xchg
and
iret
shlb
inc
inc
mov
fidivs
aam
add
leave
aam
in
outsb
sbb
add
addr16
out
mov
or
add
cmc
push
xor
mov
pop
cltd
xor
stos
orl
or
fcompl
sbb
cmp
fucom
or
mov
sbb
test
leave
movsb
int
sbb
movsl
mov
xchg
jmp
pop
lock
adc
icebp
or
icebp
nop
cmpsb
es
mov
xor
push
fimuls
test
push
cmc
push
adc
dec
xchg
jp
loop
insl
movsb
daa
dec
roll
sbb
adc
popf
lods
insb
mov
scas
or
fildl
shlb
loopne
les
inc
imul
ja
mov
outsl
mov
jae
sbb
dec
jmp
mov
test
rcr
cmp
ret
jae
mov
xchg
mov
movsl
fsts
mov
repnz
sub
jmp
xchg
lret
shl
mulb
mov
inc
pop
xor
adc
lods
adcb
pop
push
jne
rol
js
rol
mov
std
push
or
es
repz
lock
leave
mov
mov
test
mov
cmp
or
dec
jl
pop
push
mov
movsl
xlat
sub
pop
cmc
or
enter
pop
lods
ljmp
push
mov
pop
lea
dec
psubusb
outsl
rolb
aas
sbb
out
out
aam
pop
pop
push
adc
push
mov
jae
cmp
jns,pt
lahf
dec
or
subl
rcll
inc
lock
xchg
shrb
or
repnz
add
mov
and
test
mov
roll
loope
jb
jb
xor
push
in
pop
rcll
ss
out
loop
jo,pt
mov
xchg
les
into
dec
shll
and
outsb
movl
sub
mov
mov
pushf
sahf
call
mov
pop
rcrb
xor
aam
inc
mov
cmp
lods
roll
clc
xchg
rclb
jp
mov
mov
aad
mov
cmp
decb
lea
frstor
shrl
mov
out
fbstp
int3
sub
dec
jg
cmp
mov
pusha
mov
fs
cmp
sub
push
in
push
pop
std
int3
iret
push
adc
pop
test
mov
popa
add
aaa
or
and
out
sbb
bound
lea
mov
xchg
xor
mov
or
pusha
enter
test
out
or
pop
push
and
pop
or
pop
adc
push
add
cmp
notrack
pop
iret
out
add
mov
xchg
movsb
dec
insb
push
in
xor
lds
lods
mov
and
test
out
pop
sti
stos
insl
pop
dec
jo
push
jecxz
inc
dec
cmp
mov
inc
add
sub
push
shll
nop
pop
dec
add
inc
pop
hlt
negb
popf
mov
inc
mov
jp
xlat
push
adc
adc
jge
clc
lods
stos
pop
jb
fisttpll
shlb
js
clc
dec
and
inc
ret
dec
push
insb
aam
cwtl
mov
inc
test
loopne
in
fcomp
push
jno
mov
idivl
dec
icebp
xor
int3
andb
dec
rclb
scas
aam
jg
lods
test
shrl
xchg
jle
dec
loope
in
pop
xchg
idivb
push
or
call
stos
lahf
pushf
out
pusha
gs
cmc
idivl
ds
pop
cs
inc
cltd
aad
xor
imul
fcomps
or
inc
and
adc
mov
push
out
push
repz
iret
incb
fwait
add
xorb
sub
mov
int
push
rolb
pop
lcall
into
clc
lea
and
cmp
imul
xchg
ja
adc
pop
leave
movsb
xor
xor
rolb
jbe
push
push
mov
test
fmuls
cwtl
fsubrs
inc
pop
sahf
or
add
jmp
je
mov
dec
mov
fwait
aam
cwtl
ficomps
outsl
cmp
icebp
mov
push
or
sub
mov
pop
sbb
mov
jnp
aam
mov
xchg
inc
mov
mov
popl
push
fsubs
dec
into
ljmp
test
cmp
lahf
imul
std
inc
js
and
movsb
inc
nop
out
cmp
mov
jb
jp
jecxz
cmc
add
fwait
leave
add
out
pop
ja
cmpsl
cmp
jg
pop
in
inc
sbb
aas
loopne
in
notl
int
addb
adc
mov
add
addl
out
cmp
add
cltd
out
ljmp
mov
popf
xchg
aaa
xor
sar
lret
jb
jg
mov
lahf
jl
mov
std
mov
enter
fstl
cwtl
sub
mov
hlt
inc
cwtl
sti
adc
sub
sahf
xlat
pop
jnp
ds
mov
jbe
push
lods
lret
push
fwait
and
sbb
xchg
shll
adc
pushf
daa
inc
notl
sub
sub
addb
or
adc
pop
ljmp
push
mov
adc
sbb
scas
push
in
push
movsb
lcall
outsb
adc
lea
insb
mov
int
inc
adc
xor
test
das
and
or
cmc
cmp
push
clc
insl
xor
loope
lret
pop
cmp
rorb
xchg
push
add
pusha
cs
push
xor
imul
sbb
inc
dec
sub
pop
add
xchg
repz
mov
les
loopne
add
push
iret
jns
cmp
arpl
dec
test
xor
popa
sbb
hlt
outsb
push
push
inc
rolb
inc
test
cmpb
out
adc
lret
push
jmp
inc
xor
xchg
rorb
leave
fistl
push
icebp
scas
test
adc
ja
pop
cmp
mov
add
shlb
or
add
xor
fsubl
push
mov
pop
sbb
pop
test
out
data16
test
addr16
fmuls
or
push
and
inc
inc
js
jmp
jbe
testb
sub
push
insl
pop
push
xchg
pushf
mov
xchg
stc
mov
pop
mov
lcall
adc
add
cmpsb
int
cld
les
loope
jbe
lds
jae
movsb
imul
cmp
daa
cmp
imul
adc
movsb
mov
sbb
sahf
xchg
loop
cmpsb
enter
rolb
xchg
inc
inc
lcall
add
xchg
insb
pop
inc
mov
and
jg
pop
jmp
cltd
sbb
add
adc
lcall
pop
cli
mov
pop
jge
mov
xchg
jle
enter
ljmp
xor
pop
jg
dec
cwtl
mov
sbb
pop
rolb
pop
or
pop
mov
loopne
cmpsl
ret
xlat
clc
mov
jns
mov
pop
movsb
lret
fsts
out
sbb
mov
test
lock
push
jno
cmp
push
cmc
dec
mov
jnp
outsl
mov
jp
lods
iret
mov
pop
test
dec
mov
enter
out
pop
fildl
or
fadd
inc
add
int3
xchg
fadds
mov
xchg
adc
mov
mov
dec
cmc
pop
sub
pop
repz
negl
add
jo,pt
mov
fstp
push
add
es
sbb
lret
xchg
cmp
add
inc
sbb
bound
std
xchg
cmp
hlt
insl
repnz
lret
add
push
cltd
pusha
push
push
pop
push
and
ror
mov
sbb
jns
jl
inc
sbb
adc
decb
xchg
or
push
stos
sbb
mov
fnstcw
shr
jmp
mov
in
and
rcrl
jge
and
mov
mov
in
xchg
cmp
rorb
cmc
or
or
push
xor
pop
jnp
je
cmpsl
mov
and
dec
mov
xor
dec
mov
or
in
sub
insl
test
jmp
push
ret
and
mov
shlb
pop
mov
pop
in
inc
adc
jecxz
dec
sbb
jnp
rcl
pusha
xor
rolb
lcall
call
push
or
mov
push
arpl
sbb
pusha
pusha
dec
test
divl
or
pop
call
std
loop
cmp
cmp
out
addb
jno
inc
pop
xchg
mov
mov
xor
gs
mov
mov
mov
aaa
sbb
pop
pop
or
incl
mov
mov
addr16
test
test
jmp
loop
adc
mov
aad
inc
filds
icebp
stos
and
fcoms
pop
xor
jbe
fs
pop
add
inc
stc
cmp
test
xchg
scas
sbb
lret
jo
pop
jg
cmpb
int
xchg
xchg
fsubl
and
cli
gs
fisttps
mov
es
pushf
rcll
pop
or
add
mov
andb
in
or
xor
pop
stos
imul
or
pop
ficompl
pop
cmp
stos
push
push
adc
mov
pop
mov
push
insl
ret
sbb
jle
adc
push
mov
and
pop
das
lahf
mov
jae
lret
and
inc
xor
pop
jmp
ret
or
in
gs
shrb
dec
inc
icebp
jp
xlat
mov
shll
ljmp
mov
call
mov
int
in
stos
xchg
ficompl
cmp
or
lret
lret
and
jbe
pop
test
cmp
arpl
std
icebp
jnp
nop
sbb
dec
xchg
cmp
ret
push
int
add
and
mov
loop
add
push
loopne
jl
loopne
sarb
fidivs
dec
mov
aaa
xchg
dec
and
jb
lock
add
push
int
mov
cmp
fsubl
dec
dec
xor
push
fwait
mov
orl
jmp
push
int
xchg
mov
mov
rcrl
sub
xchg
push
or
cmp
cld
mov
stos
jns
stc
addb
imull
sarl
push
aad
and
inc
add
fmul
loope
push
inc
cmpsl
xor
jno
stos
xchg
mov
push
xor
add
jge
and
inc
scas
test
popa
mov
imul
test
sub
call
dec
cwtl
inc
data16
icebp
test
mov
jge
sti
sub
push
adc
mov
pop
es
loope
ret
and
inc
mov
in
loope
aad
js
xor
push
iret
js
mov
adc
push
add
arpl
mov
sub
mov
sbb
push
rcrb
add
cmpsb
addr16
negb
inc
pop
lret
dec
jno
add
loopne
scas
dec
pop
fidivs
shrl
arpl
test
mov
inc
xchg
fsub
cmp
mov
cli
push
inc
jbe
pop
lods
repz
mov
addb
pop
dec
scas
push
add
ffree
ljmp
mov
in
and
inc
jmp
dec
push
push
push
lea
test
stos
ss
cld
stos
push
or
jecxz
inc
add
scas
imul
rcr
sub
addl
outsb
dec
or
push
mov
dec
inc
imul
in
sub
mov
cli
int3
cmp
movsb
xchg
push
outsl
outsl
dec
pop
xorl
jl
and
das
fsubrl
push
dec
pop
jae
bound
mov
movsl
adc
xchg
lret
loope
cmpsb
push
sub
das
and
ja
xchg
enter
xlat
call
add
shll
test
or
nop
lock
mov
add
mov
cmpsb
pop
mov
pop
jecxz
imul
jb
adcb
jge
adc
std
jle
sub
in
cwtl
cmpl
inc
xor
cltd
inc
xlat
rorl
and
leave
rorb
mov
in
lahf
sarl
pop
lds
cld
xchg
push
and
mov
and
lahf
stos
sbb
movsl
cmp
shll
adc
mov
push
mov
jge
dec
push
pop
pop
aaa
push
pop
out
jmp
imul
jmp
or
ljmp
cli
sti
daa
leave
jle
gs
in
ljmp
pushf
jmp
test
addl
xchg
test
aad
sbb
dec
sbb
sub
scas
mov
pop
call
jo
jae
jmp
push
sarb
popa
sarb
lods
std
pop
jg
dec
or
test
movl
sub
loopne
mov
or
xchg
sub
add
hlt
mov
pop
mov
mov
loopne
cmp
lcall
or
mov
enter
cltd
lcall
pop
movsl
idivl
add
mov
mov
mov
ret
scas
push
dec
pop
das
cmp
sub
scas
and
daa
sbb
sub
mov
loope
push
fs
cmp
ja
sar
sbb
ret
test
mov
mov
add
jnp
mov
mov
aaa
shrl
xchg
pusha
or
scas
jge
clc
xor
dec
rol
es
inc
or
dec
push
mov
imul
cltd
jmp
imul
add
leave
cmp
pop
pusha
movsl
in
sahf
and
sub
nop
pop
push
das
pop
xchg
and
stos
scas
xchg
xor
pushf
mov
sub
and
pop
mov
rol
push
or
xchg
xor
push
ja
aad
int3
sub
jnp
imul
inc
cmpsb
sbb
push
pushf
bound
scas
pop
aaa
sti
dec
cmp
test
aad
in
add
out
lahf
in
xchg
jle
rorl
fstp
and
xor
sti
sbb
out
or
and
xchg
pop
test
in
inc
adc
cmpsl
sub
ret
push
je
jns
imul
out
xchg
sarb
jmp
in
imul
test
adc
dec
cltd
loop
daa
or
jb
pop
xor
xor
mov
and
mov
stos
push
jbe
inc
or
inc
or
pop
or
aad
mov
jle
fs
clc
mov
xorb
adc
inc
sahf
jo
xor
push
mov
inc
push
movsb
xor
hlt
and
mov
mov
jnp
mov
sub
lea
in
jecxz
pop
sub
ljmp
mov
pop
xchg
push
or
sub
or
faddl
or
out
and
cmp
popa
fimull
std
fcompl
int3
adc
cmpb
or
inc
frstor
add
jo
mov
into
loope
cmpsb
fnstenv
xchg
mov
mov
pop
push
and
xchg
daa
orb
stc
cmpsl
movb
test
add
push
rcr
sbb
cmpsb
mov
test
mov
xor
enter
or
fs
sub
xor
nop
aas
stos
pop
mov
clc
es
adcb
jmp
mov
jnp
icebp
jne
or
push
inc
out
push
mov
fidivrl
test
push
jp
loop
ret
dec
shlb
je
pop
add
lea
fmulp
fsubl
das
xchg
cmp
aam
jl
jle
jbe
rorl
fimuls
jge
jp
cli
mov
call
xor
aas
loope
dec
add
pop
and
adc
lods
adc
inc
add
cmpsl
dec
push
mov
and
data16
dec
stc
jne
fdivl
inc
insl
mov
cmc
daa
inc
es
add
rol
mov
popa
insb
loopne
adc
mov
rolb
xchg
incb
push
jge
mov
outsl
lods
adc
adc
push
cli
test
decb
jbe,pt
aam
inc
gs
cmc
xor
xor
xchg
icebp
fists
enter
jmp
pop
sub
jae
dec
aas
pop
outsl
sub
cmp
adc
mov
fsubrs
mov
xor
pop
push
jns
and
xor
cmp
or
jmp
cwtl
into
cmpsb
fadds
push
xchg
jns
sbb
mov
pop
lahf
shrd
add
mov
sub
movsb
outsl
mov
xlat
add
loope
inc
arpl
movsb
cmpsl
repnz
int3
cmp
jne
pop
inc
push
push
push
mov
jl
xlat
in
repz
ljmp
outsb
sub
aam
hlt
pusha
fsubrs
in
or
cmp
scas
out
push
push
sahf
sti
hlt
ja
pop
aam
fdivs
push
cmc
ficompl
out
addl
cmpsl
add
or
push
lcall
jns
stos
pop
mov
cmp
xchg
mov
scas
pop
pop
pop
jbe
and
jb
out
jmp
outsb
lods
push
dec
into
test
cmp
cmp
das
cltd
pop
xchg
dec
lods
repz
sub
xchg
rcrb
js
test
mov
sbbl
sub
aaa
out
shrb
mov
jp
mov
push
fnsave
sub
add
js
dec
test
sahf
or
pop
jno
test
mov
jne
add
cwtl
test
add
add
sahf
mov
jmp
sbb
movsl
lods
and
inc
es
lds
fbstp
popa
pop
add
and
in
push
cmp
mov
xchg
pop
xchg
hlt
push
in
pop
add
movsb
jmp
pop
jge
adc
movsb
pop
pop
outsl
mull
call
pop
sti
insl
dec
aam
push
cmp
push
adc
xor
enter
mov
sub
pop
outsl
scas
aad
pop
sub
outsl
scas
fs
out
popa
mov
inc
xchg
xchg
mov
mov
sub
push
mov
gs
cmp
or
mov
adcl
aam
out
add
mov
dec
icebp
fmulp
sbb
sub
fildl
insl
jl
iret
sub
push
sbb
and
fs
loope
adc
addr16
ja
in
inc
sub
mov
xchg
jb
mov
push
addr16
cmp
mov
push
shll
hlt
clc
outsl
and
loope
fs
pop
dec
inc
or
sbb
cli
lds
xchg
out
cld
movl
jp
push
stc
je
mov
imul
lret
divb
cltd
mov
cmp
dec
in
pop
out
ja
and
outsb
lahf
nop
fists
adc
fildll
jp
call
das
sub
sub
push
cmp
add
mov
iret
lret
jge
mov
sbb
stc
stos
ja
cmpsb
sub
mov
mov
aad
out
ljmp
sbb
xor
call
jno
mov
mov
stc
mov
inc
and
xchg
aam
shlb
repnz
sub
cmp
lea
jae
cli
xchg
or
lods
pop
ror
imul
les
jge
movsl
xchg
add
out
into
rorl
jne
jg
flds
out
bound
ret
pop
dec
in
int3
mov
ret
sub
jp
ljmp
fucomp
push
cmpsb
leave
sbb
push
test
sub
sbb
cltd
scas
fidivl
not
aaa
ret
push
dec
jle
mov
mov
mov
sub
and
add
cmpsl
lods
das
push
sub
out
mov
jg
mov
pop
mov
xchg
push
mov
loopne
adc
push
pop
mov
push
push
dec
test
enter
push
mov
hlt
out
cmp
or
sbb
or
or
scas
cmpsb
repnz
int3
pop
cli
addr16
clc
out
pop
mov
jmp
out
out
or
pop
mov
in
pusha
cld
push
lods
cmpsl
sub
out
sub
jo
dec
movsl
nop
mov
xchg
and
lret
or
test
xchg
fdivrl
inc
mov
xor
in
stos
sahf
pop
inc
adc
shll
pushf
adc
push
mov
fiadds
and
dec
xchg
in
and
sahf
adc
leave
pusha
xorl
xchg
mov
inc
xchg
cld
push
xchg
ljmp
pop
imull
jo
lods
mov
enter
push
lcall
repz
jns
insb
xchg
adc
fisttps
ja
cmpsl
aad
clc
rcrl
pop
ds
mov
jo
mov
cmp
xor
sub
enter
popa
xor
mov
outsl
in
mov
pop
add
pop
xchg
cmpsl
xchg
mov
rcll
scas
pop
scas
sub
sub
inc
jbe
jmp
jo
mov
dec
push
rolb
pop
outsl
es
addr16
sub
lret
insb
fisubrl
sbb
fiaddl
mov
mov
sub
xchg
in
aaa
jno
fcomps
xor
in
cmp
mov
cmp
mov
insl
jge
mov
mov
sbb
sarl
loope
xor
das
fcmovb
sub
mov
pop
cmp
cmp
xor
mov
out
or
add
out
pop
dec
or
clc
xor
lret
andb
push
pop
dec
mov
iret
sbb
arpl
lods
mov
mov
xchg
dec
popf
pushf
mov
mov
in
outsb
sub
push
push
fbstp
movsl
shlb
imul
ret
fs
in
sbb
dec
iret
cmpsl
inc
xchg
lea
aam
adc
mov
cmpsl
ja
js
adc
add
aas
testl
sub
cltd
aaa
cvtps2pd
sub
xor
pop
pop
add
push
or
clc
movsb
and
fbld
pop
ja
stos
and
fdiv
nop
cmp
loope
sub
push
in
mov
ljmp
mov
sti
sbb
inc
sub
push
cmp
pop
insl
push
dec
rclb
jb
aad
les
mov
fcoms
inc
mov
jns
cmp
pop
arpl
push
push
jb
scas
xchg
inc
cmp
inc
sub
stos
jecxz
sbb
mov
or
nop
scas
mull
jno
sbb
or
cmp
pop
inc
popf
dec
testb
adc
cli
jmp
mov
pushf
out
xor
mov
cmp
bound
ss
xchg
stc
std
insb
push
xorb
dec
push
pushf
inc
ret
jmp
sbb
mov
mov
fldenv
cs
cmp
pop
pop
cmpsb
adc
or
scas
or
or
xchg
mov
enter
test
mov
xor
idivl
sub
mov
push
mov
xor
jg
jge
das
in
xchg
nop
lcall
mov
dec
inc
fisubrs
je
fdivrl
loope
add
pop
sub
xchg
sub
ss
ss
iret
inc
sub
scas
xchg
iret
outsb
ret
dec
cmpl
jno
xchg
mov
movsb
jbe
cmp
lods
sub
movsb
pushf
mov
sar
add
stos
mov
test
sub
mov
into
fwait
push
ret
pop
push
repz
negl
adcb
inc
arpl
inc
cmc
sbb
xchg
lds
jp
icebp
imul
insl
or
cmpsl
push
inc
aad
adc
jno
add
testb
mov
pusha
fwait
addr16
jmp
pop
imul
jb
ljmp
jbe
dec
mov
fsts
loope
nop
mov
iret
pop
jae
xor
mov
jl
mov
loopne
cmpsl
icebp
inc
push
xor
xchg
inc
push
pop
lods
ja
aam
jmp
and
and
imul
push
in
mov
add
gs
in
int
sbb
mov
stc
cs
in
enter
mov
test
sbb
cli
mov
push
adc
cmpsl
adc
fistpl
sbb
shr
inc
je
inc
int
xchg
pop
cmc
mov
or
jbe
mov
xchg
ds
cwtl
cltd
mov
inc
xor
bound
sbb
push
shl
sub
jge
mov
ljmp
popa
call
ds
aam
cmovns
inc
push
loop
sbb
push
add
jb
clc
sbb
xchg
in
test
rcll
jp
and
push
mov
imulb
mov
rcll
add
push
xchg
mov
test
cs
mov
cmpsl
pop
jmp
loope
scas
add
movl
popa
or
sbb
pushf
test
insl
inc
adc
loopne
and
shr
sbb
out
int3
jmp
fstpt
insl
shr
mov
cmp
repnz
xor
push
pop
add
push
pop
ficomps
outsb
inc
daa
push
fs
sbb
mov
shlb
sbb
jo
sbb
adc
lret
xchg
scas
int3
mov
fisubl
push
dec
dec
push
push
mov
jno
adc
outsl
sub
addr16
mov
insl
mov
sub
xor
cmp
pop
push
push
ret
repnz
aaa
int
call
fs
sbb
dec
add
aaa
or
adc
xchg
lods
xchg
cmp
subl
pop
cmp
cmpsl
xchg
inc
xchg
ljmp
or
call
pop
cmp
popl
sub
test
dec
sbb
ret
and
hlt
in
sbb
cwtl
sbb
jno
sbb
div
mov
sub
mov
int3
and
or
ds
add
stos
outsb
test
decb
add
push
data16
in
mov
fistl
bound
xchg
scas
out
loop
mov
dec
pop
fs
mov
aam
mov
push
mov
mov
repnz
nop
daa
adc
fdivr
jae
jl
dec
jbe
cmp
sbb
pusha
push
and
sbbl
dec
pop
in
xor
push
aaa
sarl
pusha
pop
sahf
leave
pop
addb
cmp
sbb
jmp
movsl
pushf
sub
test
cltd
test
cwtl
insl
mov
aad
imul
mov
lahf
mov
dec
inc
add
rcr
aam
pop
call
stc
push
lret
test
push
jne
cmp
clc
es
pop
imul
int3
cmp
into
cmpb
inc
mov
arpl
out
push
lahf
push
xor
pop
mov
movsb
jne
outsl
xorb
pop
mov
cmpsb
lret
cmpsl
adc
cltd
ret
pop
add
test
rol
ret
inc
cmp
or
out
fisubrs
syscall
insl
jmp
xchg
hlt
fnstsw
push
jg
in
adc
push
movl
cmpsb
pop
or
fsubrs
mov
xchg
ja
or
lret
into
leave
mov
fidivrl
test
arpl
testl
add
je
inc
push
ljmp
in
push
aas
jae
cwtl
icebp
imulb
test
ret
ja
sub
shll
mov
xchg
insb
je
test
sub
xchg
push
xchg
inc
pop
inc
xor
jo
jge
in
movsl
pop
shlb
lret
mov
daa
jno
inc
mov
pop
push
and
xchg
in
mov
es
std
xchg
lret
icebp
into
add
fs
lock
call
insb
pop
lods
inc
mov
pop
xchg
sbb
push
cmp
push
popf
loop
sub
cwtl
dec
sahf
sbb
cmc
dec
icebp
addb
aad
cltd
dec
pop
sub
jg
orl
es
jmp
cli
loope
test
call
flds
mov
int3
xor
out
test
mov
and
cmpsb
push
sub
sbb
into
negb
mov
push
mov
jns
stc
or
or
sbb
out
push
aas
pop
inc
dec
stos
fwait
adc
adc
lretw
cmp
std
add
jl
mov
cmp
outsb
mov
lods
data16
dec
xchg
mov
xchg
pop
test
mov
or
sub
dec
sbb
and
lret
in
jb
ljmp
cmp
push
jns
popa
lods
lret
movsb
jmp
js
jns
push
stos
dec
or
pop
pop
push
sbbb
cltd
movsl
sub
sti
sub
in
mov
pop
fnstenv
mov
enter
icebp
sbb
push
shr
pop
xchg
ds
aad
push
sahf
xchg
jne
mov
adc
mov
lahf
cmp
into
adc
sbb
pop
aaa
push
jg
outsl
test
inc
mov
mov
inc
or
and
mov
aam
adc
loope
xlat
mov
dec
cmpsb
cmc
pop
lods
jl
push
sbb
jg
test
dec
add
or
mov
push
stos
aaa
push
daa
push
imul
sarl
iret
fsubrs
mov
js
out
xlat
es
add
std
and
add
cmp
mov
xchg
repnz
into
repz
inc
sub
into
xor
xchg
adc
jb
pop
test
shr
xchg
gs
je
fdiv
cmpsl
sbb
dec
nop
ja
gs
cmp
inc
repz
mov
lods
push
add
push
push
int
push
adc
loope
mov
orb
mov
adc
push
test
jge
nop
push
stc
mov
popa
test
mov
xor
xor
movsl
stos
mov
imul
outsl
sti
je
lcall
xchg
clc
mov
in
test
ret
xchg
adc
pop
mov
mov
iret
or
and
inc
insb
or
xchg
es
sbb
xchg
outsl
sbb
addr16
loop
daa
cmp
mov
mov
push
lods
loopne
mov
push
bound
stos
scas
add
xor
imull
fwait
jge
outsb
sub
add
mov
ja
adc
pop
pusha
loope
in
int
lods
cmpsb
es
imul
arpl
sub
fimuls
aam
jecxz
lcall
cmp
dec
xchg
cltd
addr16
fwait
pop
ds
daa
add
test
jge
sti
lret
cli
and
js
adc
lret
fwait
shrl
inc
mov
and
test
loope
add
sarl
outsb
lea
shll
lret
fwait
dec
iret
inc
gs
sbb
rcl
dec
push
aam
cld
push
jne
mov
sti
std
inc
loope
add
inc
cmp
sbb
adc
repnz
lods
mov
ss
xlat
aam
ficompl
dec
push
jg
jno
mov
mov
test
pop
mov
xchg
movsl
sti
fwait
test
in
cmp
fcomi
mov
fstp
loope
mov
push
imulb
in
mov
push
jb
sub
imull
push
pop
jmp
dec
call
dec
rcr
mov
pop
popf
jne
jle
les
cmp
sub
hlt
ret
daa
push
lcall
jle
mov
xchg
jo
push
dec
aad
inc
mov
xor
cmp
pop
dec
mov
addl
fsubs
leave
push
xor
test
inc
adc
sbb
push
inc
leave
xchg
xor
jo
pop
movsb
xor
xor
in
or
std
fistl
mov
push
orb
inc
jg
movb
dec
mov
movsb
adc
cli
in
out
jno
in
cwtl
shrl
xor
dec
fdivs
xchg
inc
and
loope
test
or
fwait
mul
rcl
jne
add
faddl
push
pop
nop
je
dec
cmp
pop
sbb
push
xor
mov
movsl
pushf
fistpl
ret
mov
mov
test
cmp
push
mov
mov
mov
sbb
shl
jl
mov
push
add
stos
pop
or
mov
dec
fs
mov
and
xchg
call
sbb
mov
sbb
push
lods
xchg
push
and
imul
fdiv
into
call
cli
aad
movsb
test
mov
push
or
or
and
xor
sub
mov
mov
dec
or
mov
inc
dec
pop
test
sbbl
rorl
loope
out
push
add
push
cmp
fmulp
clc
xchg
jne
shrl
mov
adc
jo
inc
dec
inc
aas
fwait
cld
addb
ret
int
pop
movsb
inc
nop
mov
int3
ja
aaa
fisttpl
cmp
mov
sbb
mov
push
shlb
inc
cmp
sbb
shll
test
push
mov
sbb
or
add
adc
xchg
jo
and
jo
fs
dec
inc
dec
cmc
stos
js
dec
xchg
inc
xchg
jno
jae,pt
outsl
loope
lds
cmp
pop
add
fwait
dec
scas
cwtl
mov
jno
jne
sbb
pusha
hlt
mov
je
int
jle
flds
inc
pop
mov
notb
imul
jmp
sti
loop,pt
jecxz
mov
mov
cmpsb
and
fisttps
adc
ljmp
fistpl
ret
dec
jne
lods
and
pop
clc
or
adc
rol
inc
fiaddl
mov
jmp
push
mov
movsl
lds
xor
bound
gs
fadd
or
and
or
xor
jne
out
sarl
ljmp
into
adc
mov
lret
lds
cmc
inc
aaa
mov
out
mov
jo
push
xor
inc
cmp
fiadds
push
in
int
push
out
test
int3
push
jne
test
mov
cmp
das
movsl
adc
cmp
pop
dec
es
cmp
mov
imul
leave
xchg
dec
add
jecxz
xchg
pop
add
popa
xchg
jmp
sub
mull
push
adc
lds
push
jnp
xor
mov
or
push
sbb
rorl
add
or
mov
sbb
jno
scas
les
mov
fs
inc
push
clc
lods
loope
sbb
lods
xchg
push
push
jbe
add
sahf
xchg
in
lret
sub
cmp
jno
imul
push
pop
jecxz
xchg
xchg
stos
cmp
imul
dec
stos
lret
aaa
dec
scas
adc
insl
lds
lock
pop
xor
das
negb
js
mov
mov
mov
dec
dec
pop
dec
mov
jne
cs
mov
or
ret
push
cli
mov
push
and
jge
and
or
jo
inc
ds
mov
dec
stos
insl
mov
sub
clc
repz
mov
push
jno
insl
xchg
sbb
scas
cld
add
ret
inc
sbb
aad
imul
fidivl
lret
mov
xchg
pop
pop
push
js
les
fwait
mov
je
ljmp
jmp
mov
dec
outsl
scas
in
lret
aam
testb
ja
xchg
aad
lods
adc
lods
popa
pop
loop,pt
xchg
sub
insb
das
cmpsl
and
mov
or
in
jbe
stc
sub
inc
daa
dec
mov
clc
into
sub
mov
adc
addr16
or
lods
jp
push
inc
and
cmp
jmp
js
push
mov
outsb
mov
push
sbb
fs
adc
insl
and
mov
iret
mov
popa
pop
or
dec
outsb
sub
ja
outsl
pop
or
mov
jle
dec
and
es
pop
insl
xor
andl
int
and
xchg
lock
inc
test
pop
inc
test
xchg
jecxz
push
jno
or
pusha
inc
xchg
int3
repnz
add
adc
push
adc
add
cmpsb
addr16
mov
call
and
aaa
ljmp
mov
adc
clc
push
scas
aam
pop
cmp
adc
das
mov
lret
negl
lcall
push
aam
roll
outsl
cmp
mov
mov
mov
shll
and
je
enter
int
mov
xchg
cmp
mov
das
lret
adc
pop
add
push
xor
in
sti
xor
push
cmp
and
je
cwtl
jo
inc
lock
ljmp
aas
push
jl
cmpsl
test
pop
inc
fisttpl
push
repnz
mov
shlb
int
mov
shl
loopne
mov
mov
or
popa
inc
push
mov
adc
xchg
addr16
fidivs
leave
push
mov
jns
adc
lea
add
pushf
lea
mov
adc
popa
and
lahf
cmc
xchg
fildll
lds
aaa
xchg
inc
sbb
or
insl
xor
xchg
test
mov
jae
lods
pushf
fwait
repnz
or
out
xchg
cld
inc
jp
cmp
jge
inc
inc
out
pop
mov
or
add
add
mov
adc
dec
test
xchg
jge
clc
adc
mov
loop
mov
cwtl
out
lret
ja
push
xchg
cwtl
ret
sub
mov
xchg
daa
loopne
std
js
sub
bnd
xor
fdivr
and
iret
outsb
jns
movsl
pop
addl
jmp
xchg
nop
aam
xchg
dec
lock
push
adc
ds
mov
jmp
pusha
shlb
stos
daa
pop
inc
movsl
xorb
mov
stos
les
jb
pop
hlt
pop
sbb
cmp
ljmp
xchg
adc
push
mov
loop
sub
adcl
jnp
cmpb
insl
cs
adc
sbbb
mov
xchg
nop
mov
inc
mov
lret
dec
jno
push
jge
out
mov
lock
ja
xchg
int3
test
pop
xchg
pop
bound
call
int
xchg
mov
xor
and
dec
inc
inc
add
iret
xor
loope
inc
mov
mov
imulb
inc
out
and
jnp
push
pop
test
cmp
popf
fcoml
in
ret
decb
ror
dec
mov
insl
mov
and
or
or
repz
jae
xor
sbb
stc
loope
cld
adc
adcl
mov
mov
dec
scas
xchg
or
dec
jecxz
add
push
inc
pop
aam
jge
and
add
sti
sub
mov
sbb
repnz
dec
xor
sbb
xor
mov
cmp
push
xor
mov
add
inc
pop
in
sbb
inc
and
add
imul
cwtl
dec
sti
rcr
or
or
add
es
daa
xchg
sahf
xchg
insl
sahf
add
test
cmc
push
out
into
icebp
les
inc
push
cmpsl
test
fiaddl
iret
xlat
push
sbb
cmp
inc
push
fistl
mov
sub
xor
fsubl
push
mov
mov
pop
mov
xchg
repz
mov
data16
int
jne
lea
push
ror
mov
cmpsl
push
int3
adc
jle
jge
test
push
mov
repnz
and
enter
ja
js
fsub
inc
jo
je
cld
aam
adc
or
pusha
lea
les
pop
mov
mov
arpl
sbb
add
pop
dec
pop
in
pop
ficomps
dec
sbb
fists
dec
out
aaa
pop
add
mov
loopne
out
add
lret
ror
push
mov
sub
stos
ljmp
bound
stos
or
es
test
pushf
popa
inc
push
jmp
repz
xor
jle
and
lods
adc
cmp
icebp
sub
mov
xlat
and
sub
and
ret
cmp
adc
inc
enter
fs
cmp
push
jno
push
jns
push
lea
xchg
andb
cli
sbb
andl
je
jo
pop
fsts
lcall
dec
mov
pop
mov
pusha
test
pop
mov
mov
adc
push
fsubrs
cmp
lcall
stos
repnz
rcl
cmp
sbb
add
jne
jmp
mov
insl
or
stos
iret
fnstsw
fnstenv
lahf
decb
xor
add
lret
loopne
pop
rcr
sti
sbb
push
or
add
pop
adc
aad
jb
and
cmpsl
push
jl
push
aas
aad
push
mov
in
jmp
cmp
or
cmp
pop
xchg
xchg
gs
in
lock
fstpt
xchg
xchg
aad
std
test
pop
adc
sub
mov
dec
mov
adc
push
adc
imul
cmp
mov
jb
inc
les
movsl
push
lret
sub
inc
test
insl
movsl
sub
cltd
ja
test
mov
mov
mov
andl
sub
out
test
sbb
aam
xchg
shlb
and
inc
xchg
cld
testb
jbe
fwait
mov
fmuls
test
push
fwait
pusha
push
lods
mov
sub
xor
sti
into
inc
aam
jl
jmp
das
popa
fildll
dec
addr16
cmp
push
pushf
nop
mov
pop
stos
incb
push
test
cltd
mov
adc
cltd
and
mov
out
in
sarl
scas
out
adc
xlat
xchg
mov
fwait
lea
sti
sub
adc
cld
mov
fldenv
insl
xchg
aam
dec
dec
jecxz
shr
faddl
ss
jne
loope
adc
dec
sbb
ss
dec
inc
jmp
mov
into
dec
dec
jp
adc
mov
jne
inc
jecxz
stos
imul
mov
push
mov
pop
push
xchg
enter
mov
cld
pop
push
mov
filds
xor
jne
mov
sub
std
shrl
je
mov
rclb
insl
ja
adc
jb,pn
adc
test
cmp
fdivl
pushf
das
mov
aad
adc
push
pop
fsubrs
cmc
add
lahf
shrl
xchg
arpl
ljmp
push
and
rcl
sahf
xchg
pop
mov
fdivl
add
add
jmp
jg
xor
add
mov
test
lock
ss
orl
inc
rcl
stos
cwtl
andb
aad
imul
jae
and
aam
mov
ljmp
mov
dec
popf
ja
out
pop
mov
mov
and
fxch
pop
stc
sahf
jb
pop
mov
sti
push
mov
jae
mov
fs
add
or
lock
pop
js
cmp
lcall
or
mov
mov
pop
dec
pop
inc
nop
mov
daa
push
fstpt
dec
dec
inc
push
push
pop
cmpsl
dec
add
pop
push
aas
mov
add
loope
mov
jns
test
sbb
cmp
xchg
adc
out
mov
mov
or
cmp
adc
sub
sub
outsl
xor
gs
xor
dec
iret
push
mov
stos
xlat
inc
xor
cld
test
aaa
pop
xor
dec
bound
imul
lock
dec
mov
les
xor
cmp
inc
in
mov
mov
loope
cmpsb
pop
fistps
mov
test
fiaddl
push
pop
mov
adc
mov
cmp
mov
mov
xor
inc
push
push
enter
push
jb
xchg
test
call
mov
mov
push
dec
xor
outsb
gs
je
sub
lea
std
stos
dec
enter
cmp
xchg
sbb
xchg
push
cltd
inc
cli
pop
popf
lods
dec
out
stos
filds
xor
outsl
ret
sbb
fucomi
leave
loop
lahf
sbb
idivl
adc
iret
xor
add
lock
loopne
jl
push
sub
add
icebp
icebp
inc
clc
mov
mov
add
leave
popa
hlt
sarb
jae
lds
das
mov
mov
scas
add
push
imul
pop
pusha
adc
inc
inc
sbb
into
sub
mov
pop
add
pop
mov
outsb
mov
call
xchg
pop
or
pop
in
sub
ljmp
cld
data16
ljmp
out
loope
imul
mov
cs
xchg
and
pop
lock
dec
aam
mov
inc
leave
test
cs
inc
dec
lcall
push
or
out
xlat
lahf
das
stc
lea
jl
nop
in
std
push
mov
imul
fptan
pop
or
test
mov
xchg
cli
insl
adc
fidivrl
test
dec
cli
mov
test
adc
or
mov
int3
negl
add
push
dec
cltd
jo
jge
outsl
std
fstps
mov
add
pushf
out
sub
inc
lods
mov
mov
aas
push
sub
add
lods
outsl
jecxz
imul
addr16
out
sbb
pop
dec
scas
xor
cmpsl
pop
sub
jg
dec
int
sbb
cmpsb
dec
fisttps
insb
mulb
repz
cmp
mov
ds
bswap
inc
sub
popa
sub
aas
daa
cli
leave
dec
pop
mov
sub
lret
cli
push
inc
cmp
call
repnz
lock
xor
cwtl
sbb
mov
cs
sarl
rcrl
aaa
cmp
inc
daa
adc
gs
out
pop
sub
push
ds
repnz
enter
mov
cs
jl
add
adc
pop
xor
stos
sbbb
dec
out
pop
std
pop
push
sub
cmp
sbb
xor
xor
dec
xor
xchg
mov
rcrb
movsb
fisubrs
in
sti
cmp
xlat
arpl
stc
mov
jno
mov
das
outsl
lea
fildl
lods
pop
xchg
in
shrb
xorl
push
cmp
sbb
jnp
mov
std
int
push
in
ret
cwtl
add
lcall
sub
xlat
xorl
mov
dec
dec
test
sbb
push
sbb
jle
sbb
inc
je
scas
repz
jno
mov
call
add
in
imul
popf
xorl
leave
pop
inc
fs
mov
mulb
gs
iret
adc
inc
dec
adc
call
pop
jno
cmp
aaa
push
push
push
cmc
outsb
and
flds
mov
cmp
rcll
outsl
mov
inc
fwait
cmp
sarl
fs
aad
sbb
cmp
mov
or
jmp
push
or
xor
sbb
mov
mov
fs
mov
lahf
nop
push
add
mov
mov
loopne
cmpsl
mov
pop
jl
ja
ss
fstps
pop
xchg
popa
out
cmc
push
in
and
stc
and
cmpsl
xchg
addr16
out
scas
into
or
jg
and
sub
add
out
out
stos
mov
cltd
mov
mov
sbb
incb
sbb
bound
pop
std
mov
push
adc
pop
lods
shrl
dec
sub
loope
jle
fisubrs
dec
hlt
jnp
or
sub
hlt
push
adc
mov
cmp
lods
xor
mov
add
and
inc
jb
dec
sahf
out
inc
inc
push
dec
ds
iret
sub
hlt
gs
sub
fcoms
rol
es
jo
sar
aas
jno
inc
xor
pop
mov
loop
scas
jbe
mov
adc
add
fldenv
nop
and
testl
fdivl
outsl
inc
fisubl
push
mov
xor
dec
fisttpl
push
aaa
inc
jbe
icebp
inc
rclb
mov
clc
jb
sub
mov
addr16
dec
push
fcomp
das
jle
fstpt
mov
mov
push
cmp
mov
lds
iret
sbb
or
xchg
arpl
ret
jp
out
xor
and
std
add
incl
mov
andl
call
pop
sub
add
sub
push
les
sbb
push
mov
xor
sub
cmpb
mov
sub
xchg
icebp
cmp
ret
lret
jo
inc
push
test
pop
pushl
pop
cmp
pop
mov
push
mov
cld
daa
arpl
or
sbb
cmpsb
daa
dec
mov
cmp
sub
jecxz
call
outsl
sti
add
lods
cltd
stos
out
add
or
and
sub
test
movb
lahf
stos
jg
fiaddl
push
lahf
mov
negl
dec
pop
mov
je
fadds
aas
hlt
outsb
jmp
fwait
mov
loop
imul
and
popa
xor
push
and
fwait
and
xchg
ret
sub
mov
adc
popa
jge
out
inc
push
or
imul
cmp
scas
and
lret
jnp
sub
push
xchg
adc
daa
fistpl
mov
in
xchg
lea
jae
loope
pop
addb
mov
orb
jge
jg
jne
imul
mov
inc
or
sub
xor
jno
es
sbb
test
pop
mov
sub
stos
xlat
sbb
pusha
fcompl
push
adc
pop
enter
inc
dec
xchg
enter
dec
aad
cld
inc
in
insl
xor
lret
stos
scas
movsb
push
mov
cli
jmp
xchg
out
push
dec
stos
mov
xorl
rcrl
pop
imulb
pop
add
push
sbb
je
sbb
xchg
cmp
repnz
mov
insl
into
mov
enter
lahf
adc
adc
sub
fstps
xor
push
inc
sbb
ret
push
pop
or
or
jbe
enter
pop
sbb
lods
sbb
cmp
push
call
lock
in
dec
and
rcrl
mov
jge
jnp
fnsave
aaa
sbbb
xor
adc
jae
xchg
push
xchg
push
add
cmc
shll
push
je
testl
xchg
cld
mov
push
xor
xchg
mov
shl
adc
xchg
jnp
mov
cli
arpl
sub
pop
enter
mov
dec
dec
in
xchg
stos
jnp
dec
lods
push
and
pop
mov
insb
std
lret
mov
dec
fdivr
popa
call
cmp
cmp
int3
shl
sbbb
ret
movsl
fsts
loopne
push
cmp
jecxz
insl
cmpsb
push
pop
or
xchg
xchg
add
pop
mov
inc
mov
mov
mov
push
fs
pop
or
leave
jecxz
add
pusha
mov
shl
adc
mov
jecxz
in
xchg
lods
lds
jno
jae
lods
jne
dec
test
ror
inc
lcall
enter
bnd
rcl
push
ds
lret
arpl
push
cmp
inc
dec
sbb
mov
mov
inc
test
xor
in
xchg
cmp
push
cld
add
xchg
adc
push
mov
lods
xorl
xchg
jp
jbe
fstpt
jg
xchg
pop
loop
push
out
xchg
xlat
xchg
insl
enter
sbb
push
inc
bound
insb
mov
mov
and
mov
and
pop
sbb
xor
arpl
movsl
data16
push
aam
fmull
adc
xchg
inc
idiv
adc
sbb
in
mov
mov
mov
adc
inc
ret
pop
test
scas
add
fstps
inc
add
xor
inc
dec
mov
pop
les
fsts
leave
pop
aas
lock
sub
pop
mov
mov
or
dec
nop
and
inc
test
lcall
jecxz
pop
pop
xor
add
push
lcall
fsubl
shrb
xchg
push
scas
repnz
lea
jmp
outsb
ss
lods
jp
test
mov
push
dec
ret
xor
sbb
test
fwait
insb
add
jecxz
xchg
or
testl
mov
test
cld
and
jecxz
test
leave
mov
aam
dec
and
pushf
mov
cmp
xor
cltd
aad
pop
mov
push
dec
inc
addr16
add
or
dec
data16
nop
mov
sub
scas
insb
je
add
xor
push
inc
xchg
mov
dec
movd
jae
mov
lret
dec
lret
in
fnsave
xor
arpl
fmuls
fs
pop
sub
cwtl
add
mov
sahf
mov
lods
mov
sbb
mov
fs
mov
clc
push
pop
mov
cmc
xor
mov
ljmp
mov
mov
lcall
cmp
lret
push
cmpsb
shll
adc
fsubrs
and
pop
icebp
je
push
sub
aaa
or
push
popf
pop
jo
or
orl
jle
ljmp
scas
fwait
iret
sbb
mov
mov
sub
insl
arpl
push
jne
insl
pop
xchg
into
sub
sbb
icebp
cmp
adc
xchg
mov
mov
iret
jmp
xchg
inc
xchg
mov
fnstsw
lds
repnz
aam
das
jb
xchg
repz
fidivl
dec
and
ljmp
lret
xchg
xor
outsb
daa
xchg
mov
loopne
addr16
jae
std
test
lret
xchg
lcall
xchg
movsb
dec
mov
shl
mov
ljmp
lahf
inc
daa
adc
add
push
jg
inc
jb
addb
stc
rolb
mov
jae
pusha
fs
xchg
or
cmp
jge
push
push
mov
loope
and
inc
js
psrld
add
push
adc
stos
mov
enter
mov
mov
adc
and
cmp
mov
repnz
dec
mov
add
pop
shl
pop
clc
or
dec
mov
cmp
cli
outsb
lret
mov
cmp
ret
or
push
dec
mov
jns
mov
sahf
adc
mov
adcb
lock
enter
mov
lahf
jo
sub
jecxz
mov
cmp
dec
imulb
popl
lods
push
inc
bound
leave
jg
test
loop
mov
dec
ret
imul
sbb
jns
adc
or
xchg
mov
fwait
rorl
gs
sub
xchg
mov
adc
push
sub
std
inc
popf
adc
loope
push
lods
cmpb
push
dec
and
cmp
mov
pop
icebp
out
cltd
imul
dec
divb
xlat
gs
or
xor
push
or
cmp
inc
aas
out
mov
pop
mov
loopne
dec
out
fsts
test
add
adc
into
pop
mov
mov
mov
add
aas
mov
mov
notl
testb
dec
jo
pop
pop
push
xchg
lahf
xorl
lds
leave
mov
imul
leave
enter
scas
flds
xchg
xor
adc
out
inc
xchg
or
adc
push
and
enter
inc
call
in
push
dec
pop
shll
insb
lahf
ja
pop
add
cmp
jge
mov
pop
dec
mov
fwait
pop
repz
jo
ja
mov
clc
rolb
xor
idiv
aam
inc
loop
sti
icebp
inc
je
add
loopne
mov
push
int
out
mov
jo
fwait
jge
mov
test
and
push
push
sahf
imul
mov
mov
das
fldenv
inc
push
push
xchg
mov
ficompl
fimuls
sub
repnz
cld
cmpsb
push
popf
out
push
popa
movsl
sahf
mov
push
add
fmuls
jns
shlb
xor
dec
pop
gs
cli
dec
sbb
xor
out
loope
lods
sub
push
ss
test
les
inc
js
in
pop
inc
push
mov
xchg
js
cltd
push
and
aam
mov
sub
lret
pop
xchg
pop
mov
ds
jno
push
mov
int3
arpl
mov
jl
icebp
push
lret
shl
cs
movsl
nop
pop
inc
mov
push
xchg
mov
sahf
mov
leave
lret
push
jl
sub
mov
sti
fwait
out
xchg
lods
jle
jbe
sbb
xchg
push
mov
xchg
mov
sub
xchg
xchg
mov
xchg
dec
dec
jo
repz
jecxz
cli
jg
mov
inc
add
rcll
movsl
pop
in
adc
imul
mov
pop
mov
sub
add
inc
cmpsb
outsl
stc
inc
mov
xor
jb
cmpsl
sub
and
jecxz
mov
xchg
dec
les
xor
ss
xor
jmp
sarl
jb
cmpl
insl
add
jnp
mov
pop
dec
sbb
arpl
btrl
in
sub
and
adc
fsubl
arpl
push
pushf
dec
sbb
rorl
add
mov
lea
and
lret
xor
popf
or
cwtl
sub
std
cs
sub
xor
cmp
mov
and
xchg
jl
repnz
and
sub
xchg
push
int
shlb
sbb
cmp
adc
adc
pop
jp
fcoms
aam
sti
ss
mov
into
cmpsl
mov
pop
inc
int
cs
inc
aas
push
les
mov
into
jae
xor
cmpsl
push
sub
ljmp
mov
mov
out
mov
or
push
inc
lea
xchg
xor
inc
mov
pop
cld
nop
pop
push
jae
cli
leave
std
push
add
inc
cli
inc
adcb
into
inc
orb
push
out
mov
lods
xchg
in
lret
loop
pop
stos
jne
pop
andb
xor
movsb
lcall
pop
add
push
or
aad
mov
movaps
pop
aaa
loopne
cmp
sbbl
dec
lods
fimuls
andb
xchg
loopne
in
mov
jge
js
inc
test
pusha
xor
fsubr
push
outsb
stos
mov
filds
cli
sahf
xrelease
pusha
mov
in
adc
xchg
cltd
sub
rcll
inc
inc
jle
mulb
sbb
decl
and
loopne
movsl
push
mov
pop
lcall
cmpsl
sub
mov
sub
or
leave
out
dec
xchg
mov
jp
lods
ss
orb
mov
js
mov
jns
js
cmp
leave
push
insl
sti
das
pop
push
int
ljmp
roll
adcb
daa
and
addr16
cmp
gs
mov
mov
pushf
pop
cmp
lahf
inc
mov
mov
bound
je
cmp
in
and
arpl
adc
mov
aas
jae
jae
cmp
sahf
insl
jle
cmpb
xor
cmc
ljmp
pop
mov
ljmp
in
testl
fadds
out
push
jno
mov
aas
push
mov
enter
dec
add
xor
adcl
adc
aaa
cwtl
sub
or
xor
addb
stos
ja
mov
iret
or
inc
push
das
push
dec
add
cltd
add
leave
mov
ljmp
pop
je
sub
pop
je
cmpl
cmpsl
repz
pop
pop
add
jo
sahf
into
xor
mov
shr
mov
insb
inc
mov
leave
popa
mov
push
mov
fstpl
mov
cli
movsb
mov
loope
adc
inc
inc
xor
icebp
loop
pop
xchg
add
jne
sub
sub
cmp
or
stos
mov
rolb
jo
cmp
pop
xchg
cmp
sbb
xchg
mov
mov
scas
ror
fistpll
jo
in
inc
pop
push
sahf
push
cltd
leave
sbb
mov
and
xchg
adc
pop
and
out
hlt
pop
aad
mov
sbb
cltd
jns
cmp
dec
mov
mov
mov
inc
mov
addr16
mov
mov
xor
cmc
iret
and
xchg
xchg
push
xchg
adc
in
adc
push
scas
mov
sbb
es
mov
add
aam
jnp
enter
cmpb
and
dec
aaa
or
mov
movnti
mov
jp
cmp
xor
cmp
pusha
mov
cmp
add
fs
mov
fcmovne
mov
cmp
sub
in
icebp
push
into
mov
xor
push
fbstp
pop
add
ja
adc
mov
pop
pop
adc
cli
pop
inc
rcll
add
cltd
sub
sbb
hlt
aaa
mov
mov
int
mov
and
or
ljmp
cmp
add
ret
xchg
pop
ret
cli
test
push
aaa
jne
pop
adcl
mov
test
rcr
test
jmp
inc
and
test
fildl
test
nop
decl
fdivrs
sub
push
jmp
mov
or
mov
repnz
push
dec
fwait
adc
mov
aas
fwait
xchg
repnz
sub
xchg
mov
sahf
mov
cmp
push
out
ficoms
push
dec
adc
xchg
cli
addl
inc
dec
faddp
mov
push
orb
mov
jne
cmpsb
out
scas
test
mov
fucomi
dec
mov
loopne
je
dec
pop
sbb
dec
jecxz
rclb
inc
cwtl
loopne
or
mov
arpl
aad
adc
xor
call
mov
les
inc
inc
mov
call
test
xchg
ljmp
push
dec
sbb
addr16
jle
out
cmp
cltd
mov
lock
insb
aam
ret
movb
mov
jmp
add
andb
mov
mov
les
jg
mov
sub
dec
dec
roll
ljmp
and
lods
imul
push
push
inc
arpl
out
decl
push
pop
cmp
cld
mov
aam
mov
in
cmp
dec
sbb
push
fxch
push
adc
fstl
adc
and
push
mov
loop
out
std
dec
lods
scas
sti
es
imul
xchg
icebp
and
lea
mov
pop
fucom
int3
mov
jge
push
or
leave
add
add
mov
dec
mov
xor
fs
add
mov
mov
loope
jae
movsb
sbb
ljmp
rep
lret
adc
xor
mov
lods
cld
in
sub
adc
mov
shrl
cwtl
mov
out
pop
insb
mov
js
outsb
jb
lret
pop
out
mov
sbb
lret
xchg
lcall
xchg
dec
pop
hlt
push
popf
imul
cmp
lret
dec
sbb
mov
popf
ficoms
test
pop
sbb
into
out
xchg
dec
aas
xchg
movsb
cmp
xchg
jecxz
repnz
jle
inc
out
jge
pop
das
fmull
mov
pop
inc
jecxz
out
pop
cmp
and
in
push
inc
lods
cmpsl
test
imul
push
clc
xchg
or
pop
lods
jle
idivl
cmp
stos
and
cli
inc
out
jecxz
mov
jmp
or
loopne
xchg
mov
insb
or
and
push
insb
les
lcall
pusha
out
std
pop
mov
loope
adc
inc
push
jge
mov
sub
fwait
mov
fwait
inc
lods
sbb
cmp
adc
fs
loop
test
and
test
lahf
sub
mov
test
jno
mov
shlb
dec
sbb
out
mov
mov
or
inc
aam
enter
pop
adc
mov
jne
popa
dec
pop
orb
pop
sahf
test
adc
sbb
fistl
push
add
lcall
repz
and
lds
popf
cmp
xlat
out
adc
into
cmpb
cs
out
fidivl
repz
cmp
push
popa
sub
adc
xor
je
mov
push
lcall
or
movsl
out
push
mulb
pop
clc
mov
clc
stos
nop
inc
aam
adc
and
mov
roll
pop
roll
mov
mov
or
pop
mov
sub
cs
and
je
jmp
cmp
mov
mov
pop
test
and
sub
ss
pusha
addr16
sbb
das
jg
jle
sub
loopne
test
mov
mov
add
imul
pop
fisttps
and
fwait
hlt
loopne
addb
xchg
std
mov
xchg
loopne
inc
push
sti
push
jg
mov
xor
rolb
mov
inc
pushf
lods
fld
xorb
mov
add
push
fnstenv
pop
arpl
sub
popf
push
or
das
adc
inc
popa
pusha
jno
dec
repnz
adc
addr16
cmp
pop
cmp
jno
adc
cmp
or
stos
jne
push
sti
xor
das
gs
mov
cmp
pop
adc
xorl
cmp
in
dec
js
xor
in
daa
movsb
mov
ret
mov
int3
dec
mov
sub
mov
icebp
iret
lods
adc
sub
xchg
add
pop
jns
aam
add
lcall
mov
insb
sti
add
mov
add
jne
sbb
leave
pop
xlat
adc
xchg
in
in
arpl
sbb
dec
sub
push
ret
and
cli
add
imul
and
cmc
xchg
cmp
mov
pop
dec
mov
dec
sub
out
jge
or
pop
fistps
sub
mov
pop
push
test
out
inc
sbbl
pop
push
xchg
cmp
jae
inc
int
fucomp
inc
lods
jns
push
dec
pop
shlb
test
fidivs
scas
fsubrl
arpl
cmp
fistpll
int3
mov
pop
out
dec
sub
sub
and
pop
std
inc
jg
and
lods
test
pop
push
lret
mov
xchg
pusha
lods
mov
es
mov
push
add
inc
jne
fcoms
or
xor
xorl
adc
cld
lcall
mov
jp
nop
sbb
mov
jbe
test
sbb
jno
aad
ret
lock
xchg
sbb
sub
rcrl
add
mov
idivb
insl
push
sbb
mov
jo
std
adc
jb
dec
in
rolb
xlat
mov
adc
jnp
out
cmp
dec
xchg
xchg
inc
or
icebp
test
js
inc
inc
rclb
pop
jae
xchg
mov
out
loopne
lret
mov
mov
mov
lods
les
xchg
pop
sub
loopne
jo
xchg
movsl
adc
xor
mov
arpl
hlt
xor
sub
mov
ljmp
popf
mov
mov
lods
clc
jns
lods
push
pop
jle
neg
sub
cmp
adc
popa
cwtl
les
jne
cld
das
dec
ljmp
cmp
cmp
sbb
mov
lret
aaa
mov
xchg
lcall
mov
pop
pusha
mov
inc
test
mov
or
shll
xor
cmpsb
std
pop
dec
cs
outsl
mov
mov
arpl
inc
sahf
mov
or
sbb
movsl
jmp
sub
xchg
and
jmp
jge
mov
lcall
es
adc
push
pushf
fisubs
subl
cmp
add
adc
or
dec
xchg
jmp
adc
cmp
or
lods
xor
push
loope
aas
sbb
iret
lds
push
icebp
insb
push
fadd
mov
mov
ret
xor
xchg
or
cmp
cmpsl
jne
shrl
and
mov
rcrl
sti
xchg
cltd
fistpll
ss
es
and
pushf
imul
fldenv
mov
mov
sbb
and
orb
mov
cwtl
std
pop
fs
fxch
push
sub
lea
popa
mov
test
dec
or
test
xor
cmc
int3
orl
aad
in
js
movsl
lcall
dec
cmp
cld
insl
add
push
arpl
inc
pop
xchg
sub
mov
mov
mov
jo
int
or
mov
aas
dec
std
mov
je
dec
mov
inc
xor
push
lcall
mov
xchg
sbb
lock
push
and
pop
jnp
cltd
aas
mov
cwtl
sub
xor
ret
add
sub
add
stos
fiaddl
or
arpl
frstor
adc
inc
clc
xchg
cltd
xchg
push
lods
mov
xchg
js
es
mov
xlat
das
jmp
mov
cwtl
mov
fucomip
sbb
popa
adc
cmpsb
negl
pop
fcomp
inc
add
sbb
xor
xchg
int3
enter
stos
mov
sub
add
test
add
adc
dec
xchg
jo
lock
xlat
mov
mov
xor
cmp
imul
into
xor
ret
dec
jae
push
mov
cmp
aaa
idiv
loop
add
lds
or
icebp
jge
and
dec
mov
mov
lods
xor
sub
pop
lcall
ret
sbb
adc
andl
dec
cli
push
hlt
mov
push
lahf
insb
inc
call
bound
outsl
push
xchg
mov
leave
shlb
stos
jle
lods
hlt
pop
das
out
pop
push
sub
insb
gs
es
sub
push
jno
pusha
jmp
sub
inc
stos
mov
bnd
subb
idiv
lods
adc
imulb
cli
lea
xor
stc
cmpsl
repnz
mov
mov
rorl
fdivr
lret
dec
loop
lret
bound
lahf
ja
int
mov
xchg
mov
cmpsb
sti
mov
mov
dec
inc
push
add
mov
jmp
push
aam
inc
mov
mov
jne
cmp
lahf
dec
in
out
fstl
test
in
and
dec
inc
insb
dec
dec
loop
push
xor
ja
pop
pop
popa
leave
popa
scas
or
ret
lods
mov
xchg
add
sahf
lahf
dec
and
imulb
jno
lcall
pop
cmpsl
sti
add
fsubrl
dec
or
jnp
or
sarb
repz
inc
call
test
add
cmpsl
push
and
outsl
and
sub
and
loop
insb
in
mov
mov
and
push
in
lahf
jno
pop
in
pusha
ret
lods
pop
adc
inc
cltd
xlat
sar
dec
sti
jno
pcmpeqd
and
adc
pop
ss
fisubrs
mov
into
push
dec
sbb
jg
push
pusha
push
jge
or
mov
stos
cmp
inc
rclb
orl
rcrb
sub
cmp
pusha
push
push
call
daa
jge
nop
scas
cmp
in
jne
cmpsl
add
cmpsl
repnz
push
dec
test
cmp
sbb
scas
dec
lods
and
xor
inc
push
add
orb
addl
mov
rorl
dec
clc
movsl
or
inc
nop
lock
cmp
lds
cmp
in
adc
mov
dec
jecxz
fsubp
mov
jle
mov
mov
pop
dec
jnp
cltd
pop
movsb
xchg
in
in
out
cmp
mov
cmp
cmp
jmp
sub
iret
mov
sub
je
cli
or
pop
out
imul
push
xor
push
mov
mov
dec
sbb
out
pop
jg,pt
dec
dec
mov
push
imul
xor
push
test
sub
outsl
jmp
xor
jp
or
outsb
mov
or
mulb
jle
xor
cmp
lock
aam
sti
sub
out
call
fstpt
add
dec
ret
mov
imull
sbb
lods
std
push
inc
std
std
loop
cltd
lret
dec
mov
xorl
in
push
mov
stos
inc
mov
xor
sti
addr16
mov
sub
or
and
in
mov
xor
jno
sub
shlb
add
mov
fadds
xchg
sub
dec
sub
popf
sbb
mov
add
push
and
dec
inc
pop
xchg
jb
push
adc
ret
pop
inc
test
test
ja
ss
lahf
dec
in
dec
push
insb
mov
xchg
mov
mov
mov
pop
adc
dec
mov
aam
sub
stos
cwtl
bound
and
in
mov
cmpsl
popa
leave
dec
or
cs
mov
jle
stos
enter
dec
scas
xor
lea
xchg
adcl
jne
les
decl
or
mov
aam
and
fildl
pop
addr16
popa
mov
insl
push
js
ret
mov
inc
das
iret
movsb
push
pop
lods
flds
push
mov
cld
loop
fcomps
dec
xchg
cmp
leave
add
lock
mov
shlb
das
sub
sub
stos
jae
nop
jl
adc
add
adc
mov
mov
outsl
xor
loop
and
jmp
stos
ret
in
mov
pop
sbb
sbb
ljmp
fdivrs
push
lcall
push
hlt
xchg
fcom
aas
dec
ret
mov
subl
call
adc
fs
loope
fneni(8087
mov
cmpb
outsl
pop
mov
lret
xchg
rcl
pop
jmp
shlb
add
and
call
sub
jns
pop
mov
out
in
push
xchg
jmp
xchg
adc
pop
xor
ficompl
rorb
add
mov
stos
aas
out
pop
jge
mov
push
xor
cmp
ret
sbb
add
das
dec
dec
or
or
paddq
nop
jl
ja
js
jae
sub
jle
outsb
mov
rcrb
pop
jne
or
loope
lods
testb
cmc
xchg
mov
sbb
in
sbb
jg
aam
loopne
pop
shll
outsl
fidivl
call
sbb
xchg
repnz
jne
out
add
out
sub
leave
inc
pavgw
push
call
lea
scas
sti
movsl
mov
inc
repz
fcoml
int3
inc
xorl
pop
vmovddup
mov
iret
mov
or
call
pop
in
scas
test
jecxz,pt
xor
ja
ja
or
pop
in
gs
sbb
push
mov
movsb
cmpsl
mov
aad
out
ds
out
mov
adc
scas
xchg
ds
aaa
pop
sti
dec
or
fiaddl
inc
fldt
test
xor
test
std
xlat
cmp
xchg
stos
cmp
pushf
push
rcll
sbb
insl
add
mov
jno
push
push
jne
or
inc
lds
inc
push
or
movsb
xor
jnp
pop
inc
lret
adc
or
cmp
aam
push
jnp
push
fcoml
scas
and
cmc
scas
js
lds
cmpsb
imul
cs
shrb
mov
xchg
je
movsb
sub
mov
push
adc
mov
mov
ret
test
sub
popf
adc
and
shlb
or
insb
cwtl
int
idivb
out
pop
ror
xor
sub
and
adc
add
push
xchg
test
mov
sbb
cmpl
test
mov
mov
mov
or
movsl
push
pop
idiv
pop
and
stc
sarb
push
sahf
dec
jecxz
call
aad
or
fucom
xchg
mov
cmp
ficompl
sahf
xor
or
jae
test
fwait
lahf
mov
xor
add
jae
or
inc
add
ficomps
sbb
stos
movsl
mov
arpl
jmp
insb
cs
in
ss
inc
sbb
ret
push
sub
inc
dec
mov
xlat
je
fiadds
scas
cmp
test
out
popa
cmp
and
jge
rcrl
clc
dec
and
dec
add
cmp
cmp
cltd
and
imul
stos
test
in
push
test
inc
sti
push
jle
inc
mov
loop
mov
lret
jns
inc
cs
mov
rorl
jns
fmulp
repnz
xlat
les
pushf
leave
stos
inc
les
fidivs
rorl
and
jle
addr16
push
ljmp
dec
loop
mov
inc
jl
dec
icebp
loop
adc
adc
push
or
xor
lock
or
pop
hlt
mov
push
insl
fimuls
push
fldenv
shl
insl
mov
pusha
or
cli
add
inc
mov
or
std
mov
mov
call
add
mov
cmp
orb
jl
mov
xor
mov
ret
sub
cltd
incb
fistl
inc
adc
outsl
cmp
xchg
repz
fs
or
sbb
push
ret
mov
mov
xchg
mov
xor
imul
push
jo
hlt
dec
subb
inc
aam
pop
leave
sti
sahf
sbb
dec
push
add
dec
stc
fistl
or
cltd
cltd
lock
cmpsb
push
dec
dec
test
push
pop
loopne
and
sub
dec
jge
sbb
cmp
cli
xor
sub
mov
and
mov
les
dec
or
push
mov
outsl
lds
popa
sub
je
stos
sbb
adc
push
lods
push
mov
repnz
mov
enter
xor
pop
adc
mov
mov
jp,pt
add
stos
push
cmpsl
or
out
push
xchg
adc
add
xor
ret
les
mov
add
mov
ja
data16
shlb
mov
sti
inc
ja
in
and
mov
rolb
mov
sub
cs
aad
jns
outsl
js
lock
sbb
in
and
loop
jns
or
jmp
mov
sbb
inc
sub
cmp
cwtl
pop
cld
xchg
xchg
lods
cmp
dec
dec
mov
popl
lods
xor
inc
in
fistl
or
jmp
xchg
jecxz
loope
clc
xor
mov
lahf
in
sbb
mov
and
jns
pop
jo
lea
inc
push
and
sbb
cs
mov
xchg
mov
shrb
jp
sbbb
std
mov
xchg
fdivrs
loope
sub
and
or
cmp
sub
mov
add
icebp
aam
sub
std
mov
sbb
xchg
insb
cld
add
int
adc
test
xchg
cs
pop
inc
push
add
movsl
add
and
into
rclw
incb
inc
mov
or
subl
fs
dec
dec
jg
push
lea
cmp
adc
ljmp
xor
xor
les
les
push
or
imul
pop
adc
push
jg
data16
cmc
fldenv
cmp
inc
mov
out
aam
lret
mov
stc
jl
push
fcomps
adc
hlt
push
push
sub
xchg
sub
fisttpll
leave
adc
sti
push
and
outsl
pop
sti
int3
sbb
mov
cwtl
pop
adcl
jnp
jmp
sbb
lea
xor
add
aaa
aam
andb
jecxz
scas
imul
xor
out
std
scas
inc
jmp
inc
mov
cmp
mov
adc
test
icebp
xchg
sbb
lret
fbld
adc
es
je
xchg
insb
inc
sti
aas
dec
cmpsl
loope
scas
xor
lds
and
jp
roll
or
shl
outsb
mov
dec
dec
mov
push
sub
xor
pop
xchg
out
xchg
add
daa
sub
arpl
xchg
cmp
repz
inc
fwait
cmp
bound
xor
out
shl
lret
xchg
dec
or
lcall
aam
and
out
push
out
out
sub
movsb
rcrb
xor
in
xor
loop
aaa
pop
outsb
push
les
mov
pop
jmp
fcom
stos
rorb
jns
outsb
xchg
lods
push
jno
icebp
mov
jne
xchg
add
adcb
loop
push
or
movb
jl
shrb
negl
pop
push
mov
scas
xchg
inc
sbbb
push
rolb
jne
outsb
cli
loop
sti
loope
fs
test
jb
clc
jp
rorb
jnp
mov
js
mov
cmpsl
xchg
subl
aad
decb
cltd
fucomi
addr16
add
test
xor
ret
jmp
pop
int
mov
sbb
jl
xchg
mov
adc
pop
push
notb
jnp
enter
ja
mov
sbb
push
xor
repnz
or
push
ss
rcr
rcrb
cmp
add
fs
dec
mov
inc
sahf
adc
jb
mov
movsb
sub
mov
arpl
out
and
imull
pop
movsl
mov
out
aas
sub
fwait
jno
adcb
fcoms
rclb
das
push
mov
ret
and
out
aam
pusha
pop
arpl
and
call
mov
mov
pop
mov
push
mov
mull
or
sub
xchg
stc
out
cmc
mov
inc
xor
push
cmpl
out
notb
cmp
push
pop
pusha
dec
mov
test
mov
add
jl
push
cmpsl
outsl
sahf
inc
sbb
push
ret
popf
jns
out
sub
adc
jmp
push
push
mov
movsl
imulb
add
imul
sbb
add
lods
adc
adc
mov
fwait
imul
dec
out
imull
pop
je
test
pusha
inc
lods
test
lock
lahf
cmp
sbb
jbe
mov
push
loop
inc
shlb
dec
repnz
cltd
cmp
mov
jmp
mov
push
jns
add
jl
pushf
test
sub
lods
push
ret
push
ret
loopne
leave
sahf
push
xchg
andb
adcb
sti
cmpsb
movsb
push
jle
xlat
or
fld
sbb
xor
ficompl
cmp
push
sub
cmp
daa
daa
sub
out
mov
leave
dec
pop
xchg
lahf
mov
pop
idiv
xchg
jo
insb
adc
or
lods
ja
jmp
sar
lea
cpuid
daa
ds
lahf
pop
sbb
sti
arpl
std
mov
jne
in
inc
mov
fwait
scas
fsubrs
fwait
adc
sub
lahf
jp
enter
cmp
shl
xchg
dec
js
movsl
popa
dec
adc
std
imul
adc
dec
mov
dec
mov
pushf
sti
xchg
push
xor
xor
pushf
aaa
jp
mov
mov
stc
aam
mov
and
insl
fwait
xchg
add
loopne
pop
add
cmpsl
mov
js
je
fdivrs
rorb
out
mov
loop
xchg
lret
repz
xchg
cmpsl
or
cmpsl
xchg
sub
add
dec
mov
mov
insb
xor
stc
pop
jns
sahf
mov
xchg
mov
jp,pn
clc
jno
in
pop
icebp
rcr
jmp
stc
leave
loop
jae
and
sbb
jge
sub
rorl
xlat
pop
jo
ja
jle
push
arpl
mov
sub
outsl
les
push
mov
shll
fs
aam
jle
testl
popa
cmp
in
and
pop
xor
xor
outsb
cmp
mov
jo
lahf
int
cmc
mov
xor
push
mov
and
es
or
mov
sahf
sbb
shrl
stos
out
rclb
jnp
mov
insb
sarb
inc
sbb
mov
inc
ss
mov
pusha
out
push
jl
push
inc
xchg
in
push
cltd
push
hlt
fcoms
incb
xor
adc
inc
mov
in
mov
ja
mov
insb
inc
and
and
leave
sbb
xor
daa
or
or
jbe
addr16
dec
and
jl
mov
cld
jb
jne
mov
jmp
mov
outsl
jb
lock
ja
xchg
mov
dec
notb
add
xchg
fildl
mulb
xchg
dec
xchg
jmp
inc
fldenv
cltd
xchg
dec
mov
lods
shl
dec
adc
sbb
clc
push
mov
or
inc
int3
in
or
mov
testb
mov
js
stos
orb
mov
clc
or
inc
cmpsl
adc
and
and
xor
xchg
loopne
int3
loope
rclb
out
jno
andb
mull
mov
mov
es
pop
or
clc
mov
pop
sahf
lahf
lea
lock
pop
rcr
mov
aam
jno
lcall
filds
stc
xor
test
jmp
or
leave
sub
fmuls
jmp
adc
shrb
add
sbb
test
push
pop
jae
movsb
in
test
xchg
push
mov
rcl
aas
mov
cmpsl
mov
popa
daa
pop
jp
pop
stc
enter
mov
lods
mov
jmp
inc
sub
daa
mov
push
cmp
icebp
loope
ss
mov
push
fcoml
notl
jo
out
rolb
mov
leave
pop
insl
ss
pushf
or
jecxz
in
push
jbe
movsl
push
sub
int3
mov
push
out
dec
lahf
sub
mov
push
mov
mov
add
popa
pop
mov
not
mov
dec
cmpsb
fwait
sub
mov
mov
lds
jne
addr16
es
lock
fisubrl
pop
jmp
popf
pop
in
cltd
repnz
pop
pop
sahf
mov
shl
ss
das
inc
popa
cli
mov
faddp
dec
in
or
aaa
push
js
sbb
sti
xor
int
jne
jnp
fwait
cltd
in
les
stc
out
sbb
popf
sub
iret
push
aaa
lahf
xchg
stc
pushl
pop
jle
add
dec
inc
push
push
mov
scas
out
push
rcl
cld
mov
lods
lock
push
or
lods
add
clc
mov
lret
pop
jl
mov
adc
cmpsl
or
fsts
fs
movsl
cmp
subl
inc
push
cmp
or
in
xor
movsb
js
ret
leave
arpl
cltd
fidivl
xor
pop
xchg
sbb
mov
leave
sahf
and
mov
and
ret
xchg
inc
adc
jnp
and
mov
mov
test
rolb
mov
icebp
bsf
add
xchg
or
mov
inc
pop
std
insl
and
notb
sub
mov
and
xchg
loopne
inc
pop
jmp
and
test
adc
scas
xchg
les
pushf
xor
aas
stos
mov
add
mov
or
xchg
add
jns
arpl
inc
mov
lret
xchg
inc
push
lahf
ja
mov
adc
sub
sub
fisubrl
lret
push
fistpll
int
arpl
xor
xchg
popf
ljmp
cmp
mov
sti
lods
dec
push
pop
lods
test
pop
xor
cld
jno
jbe
adcb
adcl
outsl
cmp
aas
or
icebp
cwtl
mov
mov
or
dec
pop
push
nop
xchg
iret
imul
fcoms
push
leave
cmp
push
out
aaa
pop
test
fs
lds
mov
mov
fldl
sbb
scas
in
or
repnz
scas
nop
loope
sub
jle
lret
pop
or
out
inc
fsubs
add
int3
adc
lret
add
mov
sub
addr16
test
lcall
push
imull
mov
lds
xchg
push
sti
mov
adc
stc
push
divb
scas
mov
adc
sub
pop
ror
cltd
xor
aas
and
xor
lods
aam
ljmp
inc
aam
fwait
cmp
add
or
jo
inc
xchg
loopne
xchg
emms
inc
xchg
mull
jo
fbld
and
aad
nop
int3
sub
insl
cmp
arpl
jecxz
lea
sahf
adc
cmp
sbb
stc
cld
loopne
or
mov
inc
lahf
adc
pusha
cmp
cli
jmp
pop
inc
sbb
xor
outsb
pushf
pop
pop
stos
ret
sbb
ret
testb
or
pop
lret
sbb
dec
test
loopne
jns
js
sti
addl
mov
adc
sub
out
out
push
shll
xchg
adcl
sub
jae
and
popa
add
test
jp
je
sub
mov
or
pop
pop
gs
sbb
cs
std
push
xchg
jnp
mov
jp
imul
bound
shll
sahf
dec
leave
or
jne
les
repnz
xchg
add
xchg
hlt
mov
stos
les
hlt
inc
sbb
loopne
int
dec
mov
lods
fcompl
lock
scas
pop
mov
and
sub
pop
xchg
mov
in
xor
ja
scas
ja
leave
imul
sbb
mov
scas
push
sbb
lcall
fimull
out
xchg
push
fstl
inc
fidivs
aam
icebp
movsb
sub
divb
lcall
mov
mov
xor
xchg
loop
push
cli
pop
jge
out
and
pmuludq
inc
fs
push
sub
xchg
inc
mov
pop
inc
lcall
jg
outsb
in
pop
insl
loopne
jecxz
add
adc
and
jo
mov
test
adcb
loop
nop
cltd
cmpl
jno
test
pop
or
or
and
pmaxub
in
aas
xchg
stc
xchg
std
jno
sub
add
cs
ret
jmp
lods
js
push
adc
xchg
mov
inc
and
scas
and
sub
dec
icebp
add
adc
sbb
mov
sbb
mov
sti
add
mov
addr16
or
std
adc
dec
mov
rolb
cmp
ss
cmp
cmp
ds
push
xchg
jg
bound
pop
sbb
cld
dec
push
fstps
xchg
ret
sbb
jne
sbbb
adc
outsl
sahf
or
dec
jno
jb
leave
sub
mov
scas
push
ds
repnz
sarb
pop
and
ret
frstor
inc
in
xchg
stos
or
add
xchg
outsl
repnz
mov
jge
sub
aam
cld
push
cmpsb
pop
shl
adc
push
movsb
jecxz
xchg
loop
mov
into
xor
jp
das
push
pop
repnz
dec
adc
subl
jbe
aas
daa
jecxz
xorl
and
mov
mov
pop
mov
cmc
and
inc
lock
cmp
outsb
imul
inc
mov
leave
pop
mov
mov
mov
lret
packuswb
push
jbe
int
or
xchg
mov
mov
repnz
mov
pop
movsb
and
outsl
negl
test
cmp
int3
aaa
ja
mov
aas
pop
call
push
cmp
dec
sub
fbstp
gs
jecxz
jmp
push
pusha
dec
sub
in
les
into
hlt
fwait
lds
dec
mov
xor
jo
sti
inc
sub
imul
shl
and
sbb
fs
lcall
je
bound
mov
cld
adc
and
jo
xchg
xlat
mov
out
mov
sti
test
inc
popl
lods
and
ret
imul
jp
nop
lcall
xor
mov
fbstp
push
insl
inc
xchg
or
mov
xlat
cmp
loop
aam
outsl
dec
minps
and
pusha
xor
rcr
xchg
sbbl
inc
or
pop
dec
mov
cltd
xor
fs
cmp
clc
mov
cmp
push
int3
cltd
cmp
fldenv
inc
push
int3
test
dec
and
sbb
test
xchg
add
cmp
xchg
test
fwait
pop
in
jge
inc
xchg
xchg
ss
addl
dec
int3
aad
sbb
sbb
xchg
push
add
pop
lea
in
pop
jne
loope
xchg
sbb
lea
stos
adc
insb
imul
pushf
mov
pop
je
or
negb
shrb
push
mov
jno
xchg
or
subb
fwait
pop
pop
movsb
leave
adc
arpl
addr16
xlat
mov
lret
ret
pop
into
outsl
pop
jle
into
sbb
ret
push
int3
sbb
adc
push
mov
xchg
pop
push
add
jb
inc
nop
adc
push
push
fsin
adc
dec
pop
sub
test
loop
dec
jg
ja
lock
cmpsl
push
insb
cmc
inc
push
aam
xchg
xor
jo
push
leave
push
xor
mov
data16
lahf
sub
mov
in
sbb
push
mov
push
dec
xchg
adc
mov
inc
int
fwait
or
dec
xorl
ja
in
xchg
xor
sarl
push
sarb
outsb
sub
xor
test
outsl
pop
mov
ficompl
fldt
jmp
cmpsl
ja
cmp
lret
inc
rcrl
fsubrl
push
test
mov
jb
aaa
add
xchg
mov
shll
add
xlat
lods
inc
sbb
pop
in
add
xor
mov
pop
mov
xor
cmp
aad
sub
sbb
sahf
hlt
iret
sub
mov
and
scas
cmc
xchg
jl
orl
xor
xor
bound
fdivl
lods
mov
inc
stos
loop
jle
or
int3
ja
orl
sub
mov
xchg
dec
cmp
mov
shll
ret
and
mov
popa
push
stos
cmp
push
mov
sub
icebp
adc
and
movsb
mov
ss
jp
pop
xchg
add
jle
imul
lcall
es
pop
inc
add
pop
rcll
in
scas
dec
push
aad
ret
ret
push
int
mov
scas
fprem1
bound
movsl
rorb
lock
adcb
jne
adc
call
mov
and
add
in
mov
divl
ret
adc
push
jne
shll
push
jbe
fldlg2
or
jmp
mov
shlb
pop
test
mov
das
inc
xchg
cltd
cmp
jmp
adc
in
lods
lret
sbb
dec
in
mov
scas
loop
out
adc
jp
dec
popf
outsl
cmc
push
dec
push
jb
xor
xchg
jge
pop
std
mov
cmc
jne
sbb
ss
mov
and
push
pop
push
aad
mov
cmp
das
jae
roll
adcb
js
xchg
cltd
rcrl
and
mov
out
mov
rcrl
fsubl
dec
out
pop
mov
sbb
mov
cltd
je
out
stos
fcmove
popa
or
in
call
dec
fists
mov
es
or
mov
bound
jo
xor
iret
aaa
or
sbb
enter
jge
std
mov
dec
xor
popa
mov
push
lods
je
leave
test
fldcw
lods
xor
add
lea
jne
scas
imul
incb
gs
mov
aas
add
and
dec
rorl
and
mov
mov
or
mov
stos
daa
dec
pop
jne
fistpl
divb
lcall
sub
dec
mov
dec
inc
mov
xchg
mov
popa
or
xchg
dec
or
cs
je
insb
int
mov
clts
and
add
inc
fbstp
sub
mov
pusha
cmpsl
stc
push
or
pop
inc
sbb
jmp
dec
push
push
mov
jne
in
or
and
push
cs
test
jecxz
std
imul
sbb
lret
jge
push
xchg
cltd
mov
adc
xor
xor
ret
out
pop
push
xlat
dec
add
sub
lods
pop
repz
xor
pop
jbe
cmpsb
fldt
ljmp
cmp
jge
or
add
rclb
pop
sbb
and
mov
add
jg
dec
or
dec
mov
bound
pushf
test
mov
inc
cmp
scas
jmp
mov
stos
dec
mov
jae
xor
cmpsb
xlat
test
xor
push
inc
push
jns
lods
jb
test
dec
das
iret
push
pop
or
dec
sbb
jg
push
icebp
mov
add
int
cmp
sti
mov
stos
xchg
mov
push
sahf
out
mov
mov
lahf
xchg
push
sub
dec
pop
adc
sti
mov
push
xor
xchg
or
bound
shl
cli
in
leave
mov
daa
pop
je
dec
adc
mov
movsb
lcall
filds
outsl
aam
inc
cmp
adc
scas
xchg
pop
sbb
xor
mov
popa
fcmovnu
jge
ljmp
ss
testb
jg
cwtl
cmp
movl
outsl
repz
sti
aam
std
ss
dec
cmp
xor
mov
dec
loope
lds
mov
or
stc
cmp
repz
cmp
leave
push
cmovnp
outsb
in
imull
js
push
add
sbb
adc
and
shrl
rcl
or
xor
xchg
lock
dec
mov
sbb
insl
cmpsb
jp
out
ja
subl
popa
push
dec
int
mov
sub
and
xchg
add
jg
push
jp
cld
test
sub
cmpsb
xchg
les
or
or
jge
jle
inc
pop
mov
outsb
jae
push
mov
xor
push
push
sub
aas
ljmp
and
cmpsb
loope
cmp
mov
jmpw
pop
psllq
mov
pop
outsl
enter
inc
adc
dec
sbbb
xchg
pop
add
push
out
jle
mov
shlb
xor
int3
pop
mov
idivl
adc
add
cmpsb
fsubr
add
int
nop
dec
out
frstor
mov
enter
or
xchg
cmc
leave
add
scas
and
cwtl
push
mov
push
mov
insl
dec
push
testb
pushf
add
js,pn
scas
inc
cmp
push
pop
adc
lahf
mov
xor
bound
outsl
lock
sbb
and
ficoms
push
xchg
inc
or
bound
pop
shr
cmp
pop
ja
push
mov
sub
pop
in
stc
push
jecxz
cmc
fidivl
dec
jge
sbb
lea
inc
cltd
jmp
lea
cmp
stos
inc
aad
movsbl
or
dec
mov
cmp
out
scas
jne
in
daa
dec
mov
push
cli
xlat
lcall
pushfw
push
adc
fists
shlb
and
scas
cmp
fwait
cmp
ret
xor
mov
sub
cmpsb
mov
int3
add
aad
mov
pop
pop
aam
outsl
sahf
xchg
jns
push
dec
push
daa
and
out
enter
insb
fmuls
jle
jmp
and
push
sarb
add
ljmp
inc
outsb
sarl
scas
aaa
mov
or
mov
mov
test
add
inc
pop
mov
movsb
inc
add
dec
cli
pop
lods
mov
dec
test
sarl
popf
mov
das
lds
mov
pusha
cld
rorb
sub
mov
cli
loopne
mov
cltd
push
mov
cli
rorb
jbe
scas
loopne
stos
jge
das
jle
repnz
pushf
xor
js
inc
add
mov
shl
lahf
xchg
cmpsb
pop
mov
add
inc
cmp
es
pop
sahf
push
shr
loopne
mov
dec
inc
movsl
mov
fsubrl
mov
lcall
mov
imul
inc
fiadds
sub
mov
fcmovne
inc
test
dec
add
push
push
cmp
pop
inc
inc
aas
leave
sbb
js
rcll
nop
mov
add
inc
dec
ds
ds
xor
hlt
fmuls
jecxz
dec
jle
out
bound
movsb
add
sub
sub
pop
cmp
jae
mov
fwait
hlt
stc
jo
sbbb
enter
mov
pcmpgtd
shld
xchg
sbb
stos
loop
mov
push
mov
aam
push
and
mov
adc
sub
mov
js
or
jno
xchg
jo
mov
xchg
mov
mov
push
xchg
or
xlat
jo
fildl
lods
mov
popa
js
fwait
push
sar
jle
scas
adc
push
js
mov
fcoml
shr
into
mov
mov
pop
nop
dec
adc
insb
jmp
popa
xchg
movsb
es
mov
or
test
outsl
and
add
lock
mov
ds
jns
mov
ja
jb
cmp
xchg
cwtl
pop
pushf
pop
rclb
pop
add
jle
pop
fimull
fdivs
lcall
insb
lret
mov
mov
jmp
mov
dec
shrl
dec
mov
mov
xor
inc
out
addr16
in
cmp
mov
xor
movsl
mov
je
mov
inc
or
pop
and
repnz
pop
movsl
and
les
xchg
shlb
mov
or
push
sub
test
notb
push
inc
in
repnz
mov
repnz
sahf
jno
int3
roll
sub
outsl
xlat
inc
hlt
loope
dec
push
push
mov
mov
sbb
jecxz
mov
sbb
inc
enter
and
push
adc
das
shll
mov
pop
out
mov
or
or
imul
ja
stos
jno
ja
mov
dec
pop
pop
mov
ja
dec
cmpsb
push
cmpsl
mov
push
inc
lods
xor
je
aam
cmp
gs
ja
sbb
sub
ss
sahf
jle
sub
hlt
fstp
mov
test
cmp
shufps
clc
test
xorb
sub
sbb
cmp
inc
inc
mov
cmp
shll
sbb
mov
cmpsb
or
xor
cmp
pop
inc
mov
clc
daa
ror
test
stos
jo
in
adc
jnp
ds
imul
jne
nop
inc
sub
fiadds
jb
mov
sub
pop
cwtl
pop
dec
or
ds
repnz
sbb
pop
push
ljmp
repz
inc
inc
outsl
inc
mov
hlt
arpl
icebp
push
into
or
repz
test
pop
sub
repz
sar
clc
jb
dec
lea
jmp
ljmp
rol
sub
hlt
jb
mov
or
adc
or
sbb
xchg
mov
xchg
in
adc
push
add
add
xchg
test
push
add
into
cmp
push
jb
loop
lret
push
call
roll
and
jmp
fsubr
mov
pop
inc
mov
cli
filds
adcb
push
test
idivl
or
icebp
ja
movsb
lret
cmpsl
je
dec
jbe
nop
enter
mov
ds
imul
sub
sarb
data16
mov
and
ja
outsl
mov
mov
cmpsb
jmp
scas
push
and
mov
mov
inc
dec
jbe
mov
mov
pop
push
lds
fcom
jp
dec
cmc
cltd
pop
jl
rcrl
push
and
pusha
ret
and
xchg
mov
out
xchg
dec
clc
pop
xor
icebp
add
and
mov
mov
xlat
push
test
aaa
loope
enter
push
shrl
fdivp
adc
inc
cmp
test
mov
xchg
mov
gs
xchg
mov
repnz
pusha
hlt
pop
js
dec
jno
pop
repnz
mov
call
jg
test
adc
mov
pushf
into
add
icebp
or
sbb
rclb
popa
es
cmc
dec
lahf
test
mov
xchg
pop
in
ret
inc
dec
mov
cmp
mov
push
popf
ljmp
bound
xchg
pop
imul
push
nop
add
and
dec
lcall
add
xlat
shl
xchg
mov
push
imul
out
inc
cmp
add
or
mov
cld
gs
adc
loopne
arpl
cwtl
mov
jbe
mov
in
pop
push
inc
jae
dec
mov
icebp
or
lods
pop
mov
adc
sub
shl
ret
ljmp
cli
and
lret
dec
mov
icebp
loope
push
xchg
pop
mov
in
jle
dec
nop
fcmovnbe
rol
sbb
pop
xchg
add
cli
sbb
inc
imull
fwait
mov
das
xor
pop
hlt
xchg
cld
add
sub
push
or
pop
adc
mov
mov
push
mov
movsl
mov
pop
loop
pusha
inc
lock
push
dec
pop
ds
ds
cs
dec
lods
fwait
cmpl
cmp
add
adc
sub
mov
imul
test
test
dec
xchg
in
cmpsb
movsb
mov
aaa
mov
ljmp
pop
mov
imul
sar
push
adc
jl
lret
cmp
addr16
xor
mov
cmp
push
rolb
int
dec
lcall
ss
rorl
xor
dec
xor
sbb
or
addr16
jb
js
arpl
mov
cmp
clc
dec
and
pop
jns
call
test
mov
add
lcall
and
mov
mov
inc
or
movsb
imul
jmp
xchg
push
pushf
pop
mov
loop
pop
rorb
mov
adc
push
outsl
pop
and
stos
ljmp
ret
addl
add
hlt
gs
xchg
flds
mov
mov
mov
pop
mov
outsb
mov
or
mov
addb
ss
sub
cli
xchg
sti
mov
dec
cmp
sarb
sub
jmp
leave
cmp
xor
ds
outsl
push
mov
imul
pop
sub
fcoml
lods
stc
fwait
pushf
and
xor
rcr
pusha
test
das
add
pop
mov
jmp
mov
xchg
mov
les
mov
xor
add
mov
arpl
mov
jno
pusha
pop
jecxz
pop
lock
mov
cs
jb
loopne
popa
push
push
shl
sbb
mov
sub
sbb
xor
mov
rcr
out
imull
xchg
pop
sbb
das
daa
lea
test
cmp
sbb
cmp
mov
pop
or
sbb
leave
xchg
xchg
ljmp
stc
js
clc
inc
imul
xchg
test
jae
cmpsl
test
jp
es
icebp
add
outsl
and
nop
sbb
jnp
dec
pop
aad
movl
or
push
xchg
adcb
insb
lds
outsl
sub
xchg
xchg
xchg
adc
push
or
pop
mov
mov
in
fnsave
cmc
ljmp
cmp
cmp
call
or
rorb
jns
mov
loop
mov
icebp
in
xor
xchg
adcl
adc
decl
js
cmc
sbb
call
and
mov
mov
xor
sub
add
and
stos
mov
fadds
sbb
out
cmp
andb
dec
arpl
mov
add
adc
ret
mov
jbe
test
testb
mov
jne
jno
or
movsl
enter
push
push
divl
or
cwtl
imul
push
testl
ljmp
cli
lret
jmp
mov
or
sahf
lret
or
inc
dec
popf
mov
aam
test
dec
dec
pop
aas
push
aam
pop
sub
and
lock
adc
stos
sub
gs
gs
mov
add
adc
mov
mov
push
push
inc
jl
cmpsb
imul
adc
stos
cmpsb
leave
or
jnp
mov
test
jmp
mov
cmp
stos
nop
dec
or
adc
fucomi
push
shlb
jne
push
push
jle
and
ja
test
jnp
addps
push
insb
daa
lods
loop
ret
mov
shll
es
push
add
adc
addb
jmp
insl
ja
adc
dec
xor
gs
sti
ja
sub
adc
adc
mov
movsb
pop
sahf
shr
call
les
in
sub
popf
lock
pop
jp
mov
cs
dec
and
dec
jns
cld
int
loopne
cmc
mov
mov
pushf
add
or
pushf
lcall
xor
popf
and
sbb
shr
jg
inc
imul
rcrb
aaa
call
popa
js
mov
add
xor
out
jle
addr16
jl
lods
int3
call
outsb
scas
out
leave
add
adc
pop
in
out
rcrb
and
aaa
mov
mov
ss
jbe
jbe
rcrb
cmp
loop
call
str
rol
lcall
test
mov
jno
mov
sbb
fstpt
insb
dec
cmp
push
xchg
push
xchg
fs
div
sub
gs
xlat
enter
xor
andb
fs
loope
shrl
xlat
shll
sbb
fistpl
aam
push
into
dec
push
add
addb
pop
mov
scas
xchg
cmp
lds
mov
mov
mov
inc
inc
in
jns
repz
daa
pop
testl
cltd
xchg
icebp
divl
imul
dec
lock
add
mov
hlt
stos
nop
adc
insl
cld
cs
fdivs
add
adc
sbb
cmp
sti
out
js
loopne
and
add
mov
sahf
sti
out
sarl
xchg
xchg
popf
xor
add
xchg
sti
jl
sbbl
je
mov
testb
push
dec
lods
add
jecxz
jae
sbb
inc
andb
scas
addl
add
mov
lods
sub
lcall
push
stos
int
lret
cmp
repz
or
jp
rcrb
in
add
mov
enter
rclb
mov
mov
push
xor
jae
pop
mov
lods
sub
inc
test
xchg
sarl
push
cmp
enter
int3
sub
stos
int3
mov
fdivrs
movsb
scas
imull
jle
fsubrl
out
add
int3
test
rcll
fcmovnbe
jne
in
out
add
mov
mov
rcrl
pop
mov
inc
push
out
scas
loop
xchg
jge
rcrl
pop
stos
adc
adc
mov
dec
aam
inc
das
xorl
or
sti
hlt
xlat
repnz
in
mov
out
xchg
popf
cmpb
and
test
adc
out
sarl
fbld
sbb
sub
arpl
pop
leave
dec
cmp
xchg
or
dec
cmp
xor
mov
mov
and
mov
lock
cmp
ficompl
dec
cmp
lds
ret
in
popa
push
mov
jmp
aas
daa
xor
push
repz
cld
xor
mov
shlb
cmp
dec
fstpl
fsin
loop
lds
scas
add
pop
cmpsb
outsb
mov
cld
jecxz
xor
xor
xchg
jl
mov
in
xlat
loope
ss
sbb
push
out
mov
shrb
hlt
enter
cwtl
mov
ja
in
mov
adc
inc
dec
into
jbe
test
fldt
mov
daa
loope
fldl
in
sbb
insb
xchg
or
fdivl
push
shll
lcall
mov
mov
xchg
jecxz
mov
insl
jne
call
pop
sub
and
push
lods
mov
sub
push
dec
mov
icebp
push
js
iret
imul
sbb
addl
sets
adc
test
addl
nop
bnd
imul
out
xchg
and
out
jl
xchg
sarb
sub
pusha
fwait
mov
movsl
fwait
push
jmp
das
icebp
sahf
fstpl
scas
xchg
xchg
push
nop
scas
mov
or
xchg
push
movb
inc
xchg
mov
jl
cmp
mov
add
adc
gs
mov
daa
mov
fldl
push
xor
jmp
popf
shlb
dec
jl
pop
jae
lea
ret
mov
imull
cwtl
ret
jno
jae
sbb
scas
cltd
cmpsl
pop
lock
cmpsb
push
lea
adc
mov
mov
int3
pop
or
adc
fcmovnbe
fdivs
xchg
mov
pop
fisubrs
insb
mov
ja
mov
es
push
out
jbe
cltd
lret
outsl
ljmp
scas
fstl
fs
mov
ds
movsb
jne
iret
gs
aam
lret
in
mov
enter
cwtl
call
fstpl
xor
mov
int3
pextrw
push
add
mov
mov
sbb
repnz
or
mov
dec
jnp
xchg
jb
sbb
mov
js
mov
mov
push
aaa
jg
sub
mov
sarb
adc
mov
shrl
xor
jg
out
or
int3
push
mov
inc
push
push
leave
mov
stos
call
outsb
mov
jno
sbb
movsb
je
cmpsb
or
popf
xchg
cmpps
mov
das
cmp
icebp
sub
lcall
cld
inc
dec
xchg
inc
xchg
sub
test
add
mov
mov
aas
lea
movsb
nop
pop
sbb
adc
lods
xor
lods
and
jbe
sub
jecxz
pop
xor
iret
stos
pushf
add
repnz
xchg
out
mov
dec
call
xor
insl
sbb
outsb
xor
or
pop
roll
pushf
dec
shr
push
adc
lds
cwtl
inc
mov
hlt
clc
dec
push
dec
push
lahf
ret
jle
int3
mov
cmp
or
pop
pop
and
dec
push
xor
jo
js
add
jge
stc
cmc
mov
mov
dec
into
jle
stos
dec
popa
and
lcall
mov
mov
adc
add
cs
out
jge
cltd
push
sarb
mov
cld
pusha
cmp
cmp
xlat
xchg
fstpl
into
sub
jl
lea
out
leave
push
in
es
fidivs
out
mov
leave
mov
lock
popf
fisubs
and
mov
ds
int3
icebp
inc
lahf
jo
aaa
xchg
daa
xor
mov
gs
stos
insb
xchg
xlat
pop
daa
cmp
xor
and
adc
xor
push
add
sub
popf
sub
add
repz
mov
jns
mov
loopne
push
out
pop
push
mov
jge
jne
adc
ret
inc
xor
sbb
dec
incl
sub
fs
mov
xor
jmp
adc
cli
xor
jne
add
pusha
test
sub
inc
or
push
rcll
mov
adc
aaa
jae
es
add
fistpl
dec
lods
lret
cmp
in
ljmp
mov
dec
sbb
pop
sub
xchg
js
xchg
mov
loop
push
test
cltd
je
xchg
cmp
pop
popf
das
popf
push
add
repz
cmp
cli
pop
jbe
gs
lret
pop
sbb
and
jl
ret
cwtl
cwtl
out
and
mov
xchg
cli
sbb
lcall
out
jno
push
lds
inc
or
lods
cltd
mov
jge
pop
popa
or
cltd
shr
push
add
and
es
mov
xchg
stos
sbb
cmpsl
rcr
jp
popa
mov
test
mov
mov
mov
push
push
xchg
dec
push
xor
mov
mov
sbb
pushf
fwait
dec
movsb
cmpsb
bound
push
xchg
test
lds
adc
aas
cli
movsb
sub
cmp
cld
cmp
mov
arpl
or
mov
pop
sbb
pop
popa
sub
mov
inc
inc
pop
jmp
aas
outsb
pop
lret
dec
push
or
js
cmpsl
add
std
adc
jge
mov
cwtl
pop
je
int
sti
pushf
inc
xchg
mov
es
xor
pop
icebp
stos
cmp
dec
xchg
clc
fcom
mov
pop
push
dec
mov
fildl
push
pop
fstp
enter
and
call
in
jne
cwtl
lret
cltd
or
sbb
xchg
and
mov
dec
out
js
sbb
mov
inc
scas
pop
mov
scas
sahf
mov
xor
push
fcmovbe
icebp
das
push
cmp
lds
lret
xor
pop
add
icebp
dec
leave
jle
ljmp
andb
std
pop
ficoms
or
push
push
dec
outsl
test
mov
test
ljmp
push
leave
mov
sub
imul
jle
push
push
mov
xchg
je
jno
pop
je
and
pop
pop
jns
test
sub
fcoml
pop
xchg
inc
pop
dec
lcall
adc
mov
push
push
dec
push
sidtl
ljmp
iretw
add
cmp
loopne
loop
adc
pop
pop
push
iret
gs
adc
xchg
sbb
popf
pushf
dec
add
inc
inc
iret
les
shr
mov
fucomp
push
xor
mov
mov
jp
outsl
push
jbe
pop
jmp
rclb
and
shlb
gs
xchg
xor
jae
mov
push
aas
inc
jecxz
lcall
loope
xor
icebp
aaa
bound
push
xor
mov
mov
loop
int3
xor
xor
ret
xor
stc
jbe
pop
cld
dec
dec
dec
es
sbb
into
xlat
cmp
push
subl
or
mov
pop
xchg
push
stos
std
movsb
je
pop
mov
movsb
inc
daa
add
push
push
and
jp
sub
jb
push
stos
imul
loope
icebp
dec
cmpsl
xchg
test
mov
cmpsl
or
inc
daa
sub
mov
pop
dec
xlat
adc
sahf
mov
push
insl
mulb
test
cli
mov
loop
jge
mov
out
sbb
outsl
jge
sub
sub
sbb
xor
mov
inc
aad
popa
inc
add
dec
pop
pushf
mov
and
cmp
scas
cmpsl
repnz
mov
leave
mov
fwait
cmp
sbbl
inc
rcrl
lahf
movsb
add
aad
lahf
adc
flds
mov
icebp
sub
loop
adc
jo
fidivl
mov
outsl
xchg
xchg
out
inc
sub
rclb
repz
mov
jns
fisttpl
test
ss
mov
mov
in
mov
pop
lret
adc
arpl
jl
lret
add
daa
enter
adc
pop
mov
in
cmp
pop
pushf
das
shlb
jl
scas
inc
in
add
outsb
jp
lods
idivb
xchg
lret
aaa
pop
fstp
mov
rorb
sbb
mov
and
adcl
jg
pop
loope
mov
int
rcrl
pop
or
inc
imul
mov
add
dec
adcl
shl
xor
int
call
pop
pusha
jg
adc
in
ret
xor
sbb
test
dec
jle
jne
sbb
mov
fs
stos
ja
pop
cmp
add
adc
adc
cs
jae
xor
add
push
aas
aad
jle
cmp
sub
jmp
dec
xchg
fbstp
outsb
xor
imul
mov
push
ja
stos
jno
gs
mov
mov
insl
mov
and
jle
std
xor
pop
mov
fwait
mov
pop
addb
sbb
or
cld
xor
sub
movsl
xchg
add
negb
in
fnstsw
pop
cmpl
cs
test
imulb
push
mov
repz
cmp
mov
gs
xchg
pop
jle
ja
ret
xchg
cmp
cld
dec
pop
mov
pop
mov
mov
popf
movsb
xor
shlb
jb
out
sbb
mov
iret
dec
aaa
sbb
add
mov
jo
sub
xchg
dec
lods
dec
cmpsl
cmpsl
mov
mov
fiadds
bnd
pushf
cmp
fwait
xchg
addr16
int3
push
rorl
push
pop
test
mov
test
xorl
lods
daa
ds
add
fstl
ja
jne
push
movsl
jmp
push
xor
call
out
jne
leave
mov
add
inc
jle
nop
jno
fstps
hlt
fiaddl
push
ja
dec
jge
add
mov
fld
push
call
addl
and
dec
or
mov
icebp
inc
cmpsb
mov
sub
sbb
decl
rcrl
out
inc
adc
push
dec
add
subl
pop
gs
js
add
xchg
jb
adc
jl
pusha
mov
sbb
xchg
and
movsl
mov
into
test
or
shlb
shl
mov
cmpsb
jecxz
pop
mov
pop
mov
ret
lds
clc
negl
inc
clc
daa
in
mov
aad
mov
adc
xlat
cltd
int3
jle
loope
mov
cmpl
enter
dec
repz
gs
icebp
shlb
jp
mov
sbb
adc
scas
sbb
dec
pop
cmp
scas
leave
mov
fimuls
lods
pop
cmp
add
call
aaa
sbb
mov
mov
int
dec
jle
gs
in
or
fsubl
je
das
and
jmp
sbb
cli
into
int
std
fptan
and
sub
shll
mov
aaa
mov
push
imull
and
mov
mov
test
dec
lret
orb
andl
je
ds
mov
pop
ss
xor
jmp
stos
push
xchg
scas
mov
sbb
dec
dec
add
fadd
inc
test
popa
mov
arpl
aas
mov
mov
add
push
and
loopne
fnstcw
les
sbb
filds
add
dec
xchg
shrb
in
mov
lea
std
pushf
inc
in
scas
and
xchg
mov
inc
lods
shr
nop
gs
stos
jp
pop
push
fisubs
jne
scas
or
or
into
fsubs
js
mov
lea
dec
xchg
test
xor
push
jmp
in
into
jge
daa
ljmp
push
lret
cmp
outsb
pop
aam
pop
and
mov
dec
and
arpl
lock
inc
mov
pop
xor
sbb
test
and
jnp
xor
jo
mov
sub
adc
loop
dec
push
fsubp
popa
or
or
push
push
xchg
sbb
xchg
mov
out
jmp
push
push
cwtl
cmpsl
fwait
test
js
ret
push
sbb
test
call
cmp
sbb
sbb
fdiv
push
leave
mov
fwait
push
sti
push
ds
shrb
push
inc
sbb
lds
sub
je
in
push
je
jge
inc
push
decb
sbb
jg
push
pusha
js
cmpsb
shlb
lcall
xchg
mov
push
mov
data16
scas
shll
or
mov
and
int
mov
xor
adc
push
scas
add
xchg
imul
pop
mov
lds
rolb
mov
ds
call
jae
mov
adc
mov
outsl
mov
dec
dec
add
jmp
inc
test
pop
mov
call
scas
aam
imul
pop
cli
pop
pop
mov
push
adc
adc
sbb
shrb
andb
mov
icebp
mov
fidivrl
mov
repz
aam
add
jl
jbe
xchg
xchg
stc
roll
test
inc
inc
xchg
adc
dec
inc
imul
xor
ret
es
and
and
clc
cld
js
