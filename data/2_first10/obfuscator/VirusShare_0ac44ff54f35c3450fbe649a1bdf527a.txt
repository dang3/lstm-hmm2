push
call
ret
ret
push
adc
rcrl
in
mov
in
push
sbb
addr16
das
sbb
cltd
mov
mov
inc
lret
cmp
in
jnp
insb
adcb
mov
mov
push
repnz
pop
aad
mov
add
hlt
fidivrl
ficoml
mov
insl
pop
push
in
xor
ds
inc
or
imul
push
push
sub
push
push
mov
add
sub
sbb
testb
or
mov
sbb
bound
sbb
pop
mov
xchg
imul
repnz
dec
sbb
lcall
insl
mov
jo
mov
inc
mov
daa
inc
xor
es
in
arpl
jns
js
jge
test
push
xchg
fs
movsb
cld
in
sbb
or
mov
mul
rclb
add
jbe
js
ret
pop
xchg
and
fldenv
ljmp
jecxz
dec
call
lods
call
iret
adc
ljmp
adc
shrl
movsl
mov
hlt
ret
add
mov
popf
addr16
data16
cmp
cmp
lcall
or
daa
sti
popa
arpl
daa
loop
mov
lret
xlat
mov
dec
test
stos
and
push
in
in
push
mov
push
notl
mov
jbe
cmc
in
cmpsl
sti
add
or
jne
fsubs
testb
lock
mov
sub
or
cmc
movsb
push
adc
and
hlt
outsb
and
push
stos
fs
pop
daa
jnp
mov
mov
movsl
call
mov
test
cli
enterw
adc
inc
inc
push
ljmp
test
mov
mov
das
ljmp
aam
pop
sbb
dec
xchg
imul
mov
enter
sti
adc
sbb
cmp
insl
icebp
movsb
inc
andb
mov
pop
ficoms
out
inc
mov
daa
imul
repnz
jg
push
mov
cmp
mov
add
mov
xor
sub
cmp
push
mov
add
cld
lret
cmp
adc
cwtl
inc
sub
lds
inc
jbe
clc
xor
shrl
outsb
inc
and
xor
fs
add
loope
jecxz
cmp
sbb
xchg
xor
sbb
or
push
push
cli
or
and
ljmp
pop
stos
ss
in
shll
movsb
movsb
pushf
sub
dec
jns
xchg
loopne
jge
mov
js,pn
add
ds
neg
adc
push
aas
add
add
cmpsb
cmc
sahf
adc
pusha
ret
adc
arpl
jb
adc
testb
stc
push
mov
insl
push
dec
repz
mov
mull
sub
and
prefetchw
sub
pusha
fnsetpm(287
fdivrl
mov
jl
fsubl
sub
mov
hlt
insl
sub
mov
xchg
jp
pop
or
pusha
add
popa
jmp
and
js
in
and
cltd
jb
out
or
rolb
sub
push
es
lock
cmp
sub
std
pop
sub
sti
xchg
dec
fldcw
cmp
pusha
dec
xchg
dec
call
pop
lds
push
inc
pop
cld
stc
sti
jbe
push
enter
mov
inc
ja
jb
sub
out
out
adc
rcll
jecxz
subb
popa
adc
jl
mov
xchg
mov
repnz
mov
jmp
in
pop
xchg
outsl
fwait
push
imul
rorl
or
movsb
call
icebp
lcall
mov
jo
cmp
sti
jno
icebp
sbb
dec
sbb
mov
or
test
stos
add
sti
pop
sub
mov
xchg
fldenv
inc
mov
pop
je
sbb
and
jge
and
mov
std
fisubrl
bound
or
leave
rcll
or
std
test
mov
sub
les
adc
inc
outsb
mov
out
xchg
das
push
mov
movsl
out
mov
inc
movsl
xor
int
push
mov
mov
scas
sahf
aad
int
insb
and
repz
lods
jo
enter
out
icebp
mov
sub
or
daa
lea
loope
push
or
icebp
mov
jb
fistl
mov
push
out
iret
mov
repz
dec
xlat
jg
mov
jecxz
push
stc
outsb
mov
fdivp
fldcw
mov
out
enter
idivb
test
dec
sahf
out
push
lahf
gs
test
and
stos
push
sbb
push
lods
stos
jmp
popf
daa
mov
xor
hlt
mov
std
dec
mov
inc
inc
add
sti
push
jle
ja
cmpsl
repz
xchg
inc
stc
ficompl
data16
sarl
cmp
mov
jno
pop
roll
adc
mov
out
pop
push
ror
pop
icebp
out
daa
fsubrs
nop
dec
adc
sub
inc
or
sbbb
jbe
sub
movsl
sub
adc
pop
cltd
mov
js
dec
jb
jge
insl
mov
dec
push
dec
or
xor
mov
pop
push
push
fisubrs
test
fisubs
int
push
fwait
dec
out
and
scas
adc
pop
mov
es
sub
fildll
push
inc
lcall
leave
add
push
pop
fdivs
mov
clc
pushl
sbb
xchg
jl
repz
xchg
outsb
mov
je
leave
mov
ss
movsb
or
test
inc
into
in
mov
and
and
cwtl
stos
and
pop
mov
mov
or
das
ja
cmc
push
insb
les
adc
sbb
stc
call
iret
sti
das
loop
jmp
bound
outsb
sub
aas
pusha
popf
mov
cmpsl
fcomps
lahf
push
adc
or
lahf
and
call
divb
in
pushf
sub
decl
adc
xor
and
push
cwtl
jns
sub
add
js
loop,pt
and
jbe
gs
into
shl
xchg
ror
andl
push
sbb
cmovo
fcomp
pop
jmp
aaa
jmp
or
lret
call
popf
add
mov
std
aam
xchg
ret
jno
out
xor
pop
cmc
jns
cs
out
and
sti
mov
adc
mov
test
xchg
dec
adc
mov
bound
pop
push
lods
push
inc
ljmp
mov
ds
out
cmp
push
jg
mov
and
dec
lahf
fstps
ret
popl
in
add
dec
shrb
mov
test
push
push
cmc
sub
test
cli
dec
jno
jle
push
jo
lds
std
mov
arpl
movsb
fiadds
mov
cmp
dec
sbb
scas
jns
popf
add
lods
ja
sarl
xchg
sbb
ds
lcall
fcmove
add
ljmp
pop
mov
adcb
mov
mov
ljmp
mov
lds
dec
rcr
pop
roll
adc
sbb
mov
xchg
mov
loope
cs
push
mov
stos
ds
daa
mov
push
loop
jnp
xor
adc
jl
ret
add
inc
push
enter
adc
pop
pop
add
xchg
mov
fisubl
cbtw
roll
jl
xlat
fldcw
out
pop
xchg
pop
add
fisubrl
lahf
sbb
negl
test
sbb
gs
mov
movsl
pop
xchg
push
movsl
mov
lea
rcrb
xor
bound
ss
fwait
test
xchg
mov
int3
ret
xchg
mov
jmp
xor
xlat
sbb
cmp
fwait
jmp
lods
pop
aaa
add
sbb
dec
out
aam
jge
nop
xorb
push
and
jmp
mov
in
push
add
dec
and
fsubrl
push
or
add
or
call
and
iret
inc
jp
lea
shll
mov
incb
cs
sbb
pop
pop
fbld
cmp
gs
mov
mov
rorl
xchg
lods
xchg
addr16
mov
xchg
dec
scas
fisubs
push
in
push
push
aad
pop
dec
jb
test
sub
iret
sbbb
leave
adc
cltd
dec
jg
out
jge
loop
cs
sub
lock
fs
mov
jle
or
fcmovbe
inc
sbb
fnstsw
stos
pop
jnp
jl
or
lods
mov
andb
lds
popf
dec
cmp
push
movsb
stos
stos
cmp
popf
mov
lock
adc
movsl
enter
mov
pop
xchg
aam
pop
cld
cmp
shr
push
push
lcall
mov
jmp
dec
outsl
jge
sub
xor
sub
and
sbb
push
add
dec
fldenv
and
and
xor
loop
add
int
gs
fistpll
out
mov
sbb
inc
adc
addr16
cmp
add
lods
xlat
add
mov
psraw
aaa
xchg
mov
mov
jg
pop
nop
pusha
mov
negb
lea
pop
js
imul
jmp
stos
cmp
dec
or
mov
sub
aaa
sbb
icebp
aaa
cmp
gs
pop
dec
xor
ret
andl
not
out
aam
pop
scas
ja
idivb
setge
shl
push
xor
push
pop
jmp
loope
lods
pop
and
push
cs
xor
frstor
sbb
shrl
push
decl
imul
sbb
pusha
adc
mov
adc
adc
mov
std
call
movd
sbb
sbb
push
scas
mov
popa
lods
xchg
js
lds
push
fiadds
cmp
mov
daa
shl
lahf
or
add
jmp
add
bound
enter
incl
shl
ret
aam
inc
arpl
lods
and
jg
mov
push
popf
cmp
cld
xchg
sbb
shlb
and
test
jecxz
pop
daa
cwtl
and
inc
cwtl
imul
mov
mov
mov
test
gs
jg
fstps
lahf
cmp
fldt
push
stos
and
add
dec
nop
mov
mov
sub
pop
or
mov
movsb
xchg
sub
add
mov
lret
jbe
xor
mov
mov
out
lock
sub
cwtl
cmp
nop
insb
jge
in
mov
shr
jnp
jae
clc
sti
xor
cmc
jmp
xchg
push
sbb
loope
sub
cmp
into
cld
jno
sbb
jle
inc
lahf
xor
push
mov
iret
test
lods
aaa
pop
add
lahf
mov
jecxz
in
jbe
mov
cmpsb
incb
fisubrl
mov
cmp
mov
adc
mov
add
pop
sub
hlt
fwait
loop
mov
inc
ds
roll
int
dec
es
add
out
addr16
sbb
inc
mov
sbb
pop
into
popf
jns
pop
aas
add
cltd
fcoml
in
lcall
gs
sbbl
mov
fwait
inc
sbb
fwait
gs
add
mov
mov
or
adc
cmp
and
hlt
add
push
cmp
mov
popa
xor
ret
dec
cmp
je
fwait
loopne
aas
out
jne
in
add
fsubrl
fimuls
leave
cmp
repz
mov
and
jp
xor
adc
adc
pop
xor
sub
jmp
jae
aam
xor
dec
adc
sbb
pop
test
lret
std
test
cmpsl
imul
and
fistpll
and
mov
cmp
xchg
ss
data16
aam
sub
divb
movsl
cmpsl
cmp
mov
inc
sbb
dec
cmp
andb
inc
jge
cmp
push
bound
leave
call
rcl
xor
scas
fsubrp
or
mov
fimull
sub
pushf
scas
or
add
jg
jmp
adcb
mov
cmp
pop
inc
mov
mov
mov
sub
es
mov
in
int
or
cmp
test
imul
stc
adc
dec
mov
jb
and
test
aad
push
rcrb
loope
or
mov
sbb
pusha
loop
in
mov
dec
daa
fcmovnbe
loope
push
cmp
jbe
stos
ret
jmp
dec
dec
adc
push
cmpsl
cmp
sub
jg
cmpsb
in
sti
dec
inc
push
add
xchg
cmp
push
hlt
in
cli
clc
xchg
push
pop
mov
pop
mov
and
cmp
outsb
xlat
dec
pusha
fisttpll
ret
pop
push
xor
mov
pop
and
or
shrb
jecxz
or
fisttps
xorb
adc
arpl
fidivrl
xor
mov
lahf
sbb
pusha
sti
push
adc
loopne
fimull
xchg
xchg
xor
inc
rolb
lea
mov
insl
push
call
mov
cli
jae
lods
adc
sbb
xchg
cli
sbb
fisubl
push
iret
or
add
push
or
bound
sub
outsl
xchg
fwait
xchg
pop
fsubs
jns
push
fst
jae
cmp
mov
stos
dec
call
mov
stos
push
jne
jns
and
adc
in
sub
jle
addb
cmp
inc
sub
dec
jb
test
int
jl
test
push
push
and
xchg
jbe
fmull
lock
dec
adc
push
inc
lret
pop
mov
outsl
lahf
pop
rolb
les
xor
adcb
pop
jnp
fsubl
add
sbb
jo
xor
pop
mov
imul
in
popf
xchg
mov
jmp
fs
les
inc
or
pop
mov
jmp
add
jne
mov
pop
mov
ret
jg
outsb
xor
inc
adc
jns
shll
rclb
dec
sbb
xor
mov
jne
shlb
push
sbb
inc
out
jno
ja
push
xor
aam
mov
mov
sub
fdivrp
repnz
fwait
sahf
xor
sbb
lcall
test
xor
push
mov
cmp
push
mov
dec
pop
movsb
jg
xor
test
mov
je
push
outsb
mov
repnz
aaa
imul
hlt
jo
imul
popf
or
dec
xor
lock
sbb
mov
push
gs
jbe
shr
pusha
lds
pop
and
pop
mov
ljmp
push
ljmp
lods
xor
shll
inc
gs
fisubrl
inc
flds
cmc
mov
dec
imul
adcl
sti
or
xor
push
inc
fnstcw
jns
cli
push
popf
inc
and
lcallw
loop
in
jb
jecxz
test
xchg
fistpll
lahf
lret
int
cmp
mov
ljmp
xor
inc
and
ja
in
lea
sub
dec
and
imul
inc
call
sbb
jle
lods
loope
outsb
cmpsl
out
stos
movb
fstl
dec
popa
push
lods
adcl
push
inc
mov
ss
je
mov
inc
or
mov
jp
pushf
inc
imulb
gs
clc
push
pusha
aad
mov
nop
and
sub
cmpb
negb
push
mov
mov
mov
push
mov
jg
fwait
push
push
mov
pop
adc
push
jg
in
data16
outsb
jo
lods
jg
xor
inc
add
stos
inc
dec
dec
out
mov
dec
pop
pop
mov
int3
bound
fdivrs
pop
mov
test
jnp
push
cli
xchg
and
mov
xchg
pusha
js
sbb
mov
into
inc
pop
or
xchg
je
adc
push
jnp
jne
adc
fdiv
pop
and
aad
lahf
mov
cmp
aam
ret
jecxz
iret
jne
dec
int
jecxz
push
pop
sbb
and
insl
mov
jecxz
xor
ss
push
dec
sbb
or
lcall
pop
jae
shrl
pop
mov
es
xchg
lcall
stos
xchg
shll
hlt
pop
fnstenv
xchg
mov
es
mov
push
mov
cwtl
mov
or
cmp
or
mov
clc
jb
or
pusha
movsb
mov
popf
fiadds
lods
aam
stos
pop
mov
mov
aad
inc
insb
or
je
push
stos
test
sub
push
pop
adc
insb
mov
adc
mov
shlb
loop
fsts
outsl
pop
into
fists
push
and
ds
shrl
scas
daa
ret
lods
inc
aaa
mov
sbb
cmpsl
cmp
loope
aas
aas
mov
mov
pop
data16
push
cmpsl
jge
mov
cmp
clc
fcompl
dec
cmp
in
in
fdiv
int
mov
mulb
pop
outsl
mov
pop
das
jb
push
mov
jle
sbb
imul
icebp
std
add
mov
jl,pn
add
or
xor
call
clc
push
inc
sub
add
outsl
pop
int
and
orl
xlat
push
mov
lret
std
out
xor
pop
outsb
sub
xacquire
rcrb
pop
xchg
mov
pop
jg
pop
stos
scas
cmp
push
int
pushf
icebp
out
int
inc
out
or
or
cmp
adc
sbb
cmp
push
incb
fnstenv
arpl
int
test
ljmp
xchg
mov
movsl
lcall
xchg
jecxz
arpl
push
pop
inc
insb
in
arpl
cmp
sti
mov
fidivs
push
outsl
add
out
jp
sbb
and
xor
js
and
sub
push
imul
mov
popa
inc
test
sarb
jbe
rcl
out
fsubs
mov
sub
adc
shrb
xchg
test
cs
sbb
int3
punpckldq
cmc
test
bound
imul
jns
pop
sub
or
pusha
sarb
andb
push
sti
cmp
inc
cmpsl
mov
loop
ffree
xchg
dec
scas
jns
xchg
xchg
and
imul
mov
in
cmpsb
add
pop
push
push
rorb
cli
scas
std
pusha
or
les
and
pop
jae
jp
out
sub
negb
jmp
shl
xor
rorl
out
or
and
iret
pop
cmp
jecxz
mov
bound
lret
jns
movsb
jns
test
test
sti
jne
aad
mov
inc
lock
aaa
in
out
insl
mov
or
scas
mov
xor
pop
ljmp
sub
jno
negb
xlat
or
lds
push
shlb
xchg
std
push
fsubrs
sbb
push
movsb
adc
pop
xchg
insl
mov
outsb
mov
and
in
js
jbe
fstpt
inc
nop
xor
fiadds
add
xor
sub
aas
ja
nop
cs
adc
dec
cmp
pusha
xor
mov
pop
and
and
js
notl
lods
lds
cld
jp
mov
cmpsb
sti
push
push
push
adc
fbld
sub
mov
aaa
std
neg
shrb
shl
icebp
out
movsl
repnz
imul
dec
lods
pop
stc
divl
clc
jecxz
and
xlat
inc
fisubrs
lea
mov
loopne
sbb
dec
jo
jmp
rcr
or
outsl
mov
add
jnp
adc
xor
mov
sub
cmpsb
lea
cmc
addr16
fimuls
js
into
leave
adc
mov
and
dec
xor
mov
jp
fadd
and
sub
shr
test
lret
xchg
hlt
cld
pop
outsl
les
lret
leave
add
mov
jo
ficoml
gs
sbbb
cmp
inc
cmc
or
xchg
popf
outsb
aam
mov
ja
adc
or
jmp
insl
jle
cmp
sub
mov
mov
pop
inc
lods
push
add
sub
ds
mov
add
xchg
aam
inc
aad
xchg
mov
fdivrp
xchg
fcomps
xchg
stos
ret
into
adc
adc
pop
lret
rorb
pop
or
rclb
icebp
sub
notl
or
pop
out
xor
sahf
cmpsl
mov
add
mov
xorb
mov
cmpsb
bound
mov
lret
addr16
roll
or
les
add
rolb
cmp
sbb
negb
cli
hlt
sbb
or
add
or
jle
pop
ljmp
jg
ret
arpl
sahf
jo
add
inc
leave
xchg
aam
mov
in
mov
cmpsb
inc
inc
xorl
mov
xchg
xchg
pop
add
or
push
rcl
out
into
movsb
enter
cmp
and
or
mov
xor
popf
jns
inc
jno
orl
adcb
outsl
push
push
sub
js
movsb
stos
sub
sbb
out
mov
ret
cmp
inc
sbb
adc
cltd
push
xor
add
dec
xor
or
dec
push
out
iret
sub
sbb
mov
scas
xor
sbb
mov
movsl
das
std
pop
je
jg
dec
lret
les
mov
hlt
dec
dec
push
sub
addr16
push
shll
das
sbb
mov
ss
repz
xchg
jne
pop
lret
dec
das
pop
scas
dec
mov
aas
add
jno
movsb
jnp
hlt
movsb
fisubs
int3
and
mov
mov
enter
arpl
imul
repnz
inc
jbe
mov
scas
fmuls
inc
or
xor
loopne
xchg
out
sub
leave
xchg
call
ret
inc
inc
mov
pusha
movsb
add
imul
scas
ret
pop
mov
mov
pop
or
roll
inc
icebp
pop
movsb
push
mov
mov
push
mov
sbb
add
and
xchg
sbb
fmuls
cltd
jp
jno
sbb
cmp
adc
shrb
xor
icebp
add
call
fstps
repz
cmp
cld
mov
sub
push
push
mov
sbb
xchg
shrb
inc
fpatan
aaa
movb
cmp
pop
pop
nop
rol
cmpsl
lea
cmp
jns
cmp
pop
cld
jge
or
push
mov
pop
jo
and
sbb
enter
mov
cmp
mov
int3
or
js
mov
orl
jbe
inc
aam
pop
pop
andl
xor
mul
push
mov
push
jo
mov
xchg
out
lret
insl
mov
lock
add
repz
pop
mov
jecxz
or
ja
mov
sahf
stc
or
mov
hlt
sbb
inc
cmpsb
andl
fwait
mov
xor
pop
ljmp
in
les
inc
xlat
xchg
mov
loope
fwait
insb
xchg
subl
adc
and
pushf
je,pt
mov
aad
mov
out
push
dec
fcomps
stos
arpl
lock
ficompl
dec
and
pop
jmp
loopne
jno
outsb
or
pusha
xor
jecxz
push
clc
and
loop
rol
jo
pop
addr16
punpcklbw
push
pop
mov
pusha
hlt
sbb
or
cmp
pop
or
cmpsb
repnz
ja
pop
dec
pop
or
xchg
jp,pt
jo
or
bsr
jbe
pop
imul
orl
rolb
mov
adc
sub
sbb
fs
push
in
ds
dec
xchg
mov
mov
lret
shlb
mov
mov
test
jo
cmp
add
in
add
mov
dec
into
shlb
mov
xor
adc
lcall
jp
les
pop
cmpsb
in
into
movsl
sbb
fcmovnb
les
bound
shll
in
sub
sbb
fbld
jge
and
mov
mov
sbb
ljmp
pop
hlt
iret
xor
fs
or
outsb
jns
push
sub
repnz
sti
cmp
or
mov
jle
sbb
or
and
push
xor
jle
ret
push
mov
inc
mov
out
adc
cltd
sbb
scas
adc
and
adc
xchg
scas
aad
enter
fstpl
out
mov
jb
popf
xchg
jae
mov
lds
test
shll
dec
inc
stc
jo
ss
sub
fsubrs
push
outsb
xchg
in
jne
inc
push
pop
sub
sub
mov
mov
scas
sbb
inc
xchg
xchg
les
scas
out
int3
add
jle
aaa
inc
out
outsl
jae
loopne
push
ret
bnd
stc
mov
jg
push
ret
mov
std
cmp
aad
int3
mul
testl
orb
mov
scas
mov
or
fldt
cmpl
cmp
insb
mov
cmpb
cmp
jbe
xorl
add
dec
out
stos
and
lret
inc
xchg
outsb
and
inc
test
jle
fistpll
lods
int
subb
sti
sbb
jnp
bound
push
xor
push
sarl
imul
in
add
push
and
popa
xor
jo
mov
test
fimuls
imul
sbb
cmpb
nop
push
xchg
xorl
pop
call
dec
test
cmp
mov
cmp
and
dec
adc
fidivl
push
sbb
mov
mov
mov
dec
test
add
cmp
out
test
mov
out
push
inc
into
pop
pop
aaa
lret
loope
out
out
mov
in
push
or
test
jle
pop
jle
mov
jo
sahf
jnp
pop
mov
xchg
cs
sti
jp
shrb
dec
out
insl
addl
fstpl
adc
outsl
sub
and
das
fadds
movsb
rclb
jno
aas
jae
fwait
outsl
shl
sbbb
sbb
nop
cmp
dec
pop
dec
add
push
in
and
xchg
insl
es
add
pop
pop
das
xchg
dec
push
cmp
mov
jnp
adc
ds
ffree
aas
cmp
push
repnz
shrl
scas
out
mov
push
loop
ljmp
aas
xor
outsb
sahf
cmp
jno
pop
jp
mov
fcomps
adc
cmpsb
test
add
stos
enter
in
push
test
movsb
jae
movsl
or
and
sbb
rclb
mov
mov
pop
jns
inc
jo
pusha
jb
adc
lcall
push
js
jne
xchg
fcoms
jbe
aam
imul
mov
scas
fcmovnu
enter
jne
mov
dec
lods
idiv
je
inc
adc
out
cmp
mov
inc
pop
mov
dec
cmp
ret
fisubrl
imull
rclb
das
fisubl
push
out
mov
cmp
ret
mov
cmp
aad
cmp
inc
divl
lds
dec
negb
push
cmc
lret
mov
cmp
pop
movsl
cmpsb
push
testl
and
out
xchg
subl
jns
cmp
cmp
sbb
jnp
inc
imulb
push
xor
add
fwait
in
dec
pop
outsl
push
out
insl
add
ficomps
xor
sub
inc
pop
stc
adc
mov
out
ljmp
sbb
insl
push
push
mov
aas
cli
insb
mov
fwait
sahf
pop
aad
push
add
lods
repz
adc
xchg
pop
mov
gs
cmp
outsb
iret
jle
mov
sbb
fwait
lret
lret
and
clc
and
adc
dec
data16
icebp
js
pushf
out
sub
fs
sbb
xchg
lds
xorb
push
jmp
sbb
or
les
lahf
mov
ljmp
mov
negb
js
push
sub
mov
ret
mull
mov
gs
xchg
pop
fsubl
push
cmpsb
loop
push
xor
imul
or
push
mov
xor
push
push
push
aaa
jno
adc
notb
dec
sbb
out
push
push
mov
inc
gs
mov
pop
or
sub
adc
js
sbbl
shll
pop
mov
insl
icebp
test
addr16
outsl
rcr
cmp
and
fcmove
add
inc
inc
js
sbb
xchg
hlt
xor
cmp
rcll
ljmp
cmp
jo
out
xor
mov
adc
jmp
push
mov
dec
test
insb
and
fnstenv
leave
shrb
dec
clc
in
imul
lahf
scas
ret
addb
sbb
xor
jno
sub
addb
mov
ss
jno
jbe
incl
in
in
sub
into
push
cli
aad
sub
sbb
pop
pusha
xchg
imul
outsb
ss
xchg
xor
or
push
lgdtl
ret
lahf
ficoms
fbstp
mov
test
xchg
inc
psrld
adc
adc
xchg
inc
pop
jecxz
xor
fdivr
xchg
jl
mov
rorb
mov
mov
cmp
xor
ds
xchg
mov
decl
in
popf
imul
pop
pop
fstpl
loop
mov
fwait
sar
insl
xor
dec
mov
mov
movsb
and
adc
xchg
inc
adc
mov
pop
gs
fwait
inc
or
cld
test
inc
mov
push
popf
les
mov
mov
xor
pop
sbb
addr16
std
and
mov
cmp
xchg
int3
and
mov
lods
xor
mov
inc
mov
cmp
popa
inc
mov
mov
movsl
call
fs
insl
cmpsb
lahf
push
xor
fwait
insb
imul
rolb
jb
cmc
adc
imul
ja
sub
andl
xchg
jecxz
scas
outsl
call
mov
rorb
xchg
dec
push
fbstp
sbb
xor
dec
scas
inc
lcall
mov
icebp
xor
or
nop
sbb
xor
rcll
les
jb
ret
adc
adc
leave
movsb
inc
jmp
aas
push
jg
ds
es
xchg
mov
divl
faddl
stos
les
mov
cmpb
test
cld
sbb
push
jb
test
inc
mov
adc
pop
sbb
mov
lret
add
in
loope
push
cs
jl
out
fldcw
sbb
sbb
push
mov
and
fstl
sbb
cmp
scas
loop
int
and
std
dec
jo
in
sbb
aam
adc
jnp
mov
jmp
js
fdivl
jae
push
jb
int3
push
xchg
ret
lock
int3
pop
cld
push
int3
adc
jmp
adc
test
lds
dec
in
mov
mov
and
jo
sub
sbb
mov
inc
mov
aad
arpl
pop
cmp
sub
ret
pop
dec
ljmp
outsl
cmp
xchg
pop
loopne
lahf
lcall
mov
or
adc
fs
int3
fmulp
lock
fiadds
and
mov
jnp
pushf
fisubrl
pop
pop
or
lock
ret
pop
orl
int3
testl
pop
icebp
sub
adc
mov
xchg
jb
in
mov
nop
das
xchg
data16
jo
inc
push
cltd
inc
dec
cmp
xchg
popa
jno
sbb
hlt
aaa
xchg
fadds
nop
cwtl
imul
mov
pushf
lcall
mov
jp
repz
xchg
fwait
adc
jmp
stos
ret
push
dec
jecxz
or
aaa
pop
or
cmp
js
adc
add
jecxz
mov
sub
cwtl
xchg
popf
cwtl
cmp
mov
in
test
stos
jecxz
push
mov
imul
xchg
dec
jge
outsl
mov
jnp
roll
in
and
push
mov
adc
pop
sbb
aaa
jb
fsubp
in
push
sarb
jae
mov
sbb
scas
stc
jnp
out
jns
icebp
push
hlt
jne
sar
push
dec
int3
or
sbb
mov
jmp
out
popa
fists
jl
adc
mov
fwait
jb
aaa
jp
adc
scas
sub
pop
loope
jmp
adc
mov
or
int3
pusha
jne
jle
in
push
std
stc
inc
and
sbb
arpl
jl
rorl
gs
dec
cmp
lock
add
and
adc
xchg
lahf
rcr
icebp
adc
idivb
imul
lret
pop
xchg
inc
cmpsb
dec
std
movsb
movsb
mov
mov
push
dec
or
inc
fdivrp
je
das
mov
popa
loop
xor
fidivrl
loopne
out
nop
jo
fsts
loopne
loopne
xchg
sub
mov
stc
lods
fcmovnu
fs
cmp
iret
daa
or
cmpsl
pop
dec
sub
repz
enter
mov
pop
inc
sbb
jo
pushf
fnclex
gs
mov
fistl
jbe
mov
jge
mov
fwait
out
cs
enter
mov
dec
loopne
ds
outsl
mov
mov
stos
sbb
pop
push
out
mov
xchg
into
fs
ds
std
fildl
xchg
pop
jl
add
mov
stos
in
and
in
xchg
lds
cmpsb
test
sub
adc
dec
xor
pop
movsl
jne
sub
mov
push
and
addl
fstpt
dec
into
lods
scas
cmpsb
push
insb
mov
push
inc
push
in
sar
cltd
lock
xchg
lahf
cli
movsl
repz
movsl
adc
inc
pop
dec
lret
add
aad
out
inc
in
mov
sbbl
andl
and
xor
xchg
sti
popf
shlb
lahf
sub
fldpi
fmul
mov
in
mov
enter
into
pop
outsb
ja
dec
xchg
bound
add
sub
sub
jae
inc
out
rcll
xchg
xchg
push
sub
sub
cltd
mov
daa
push
movl
or
push
push
mov
dec
mov
and
scas
cltd
dec
inc
cmc
addr16
ret
jo
dec
roll
cmp
cmp
pusha
mov
mov
bound
and
fldl
mov
inc
insb
es
lea
xor
jbe
or
dec
test
fwait
pop
mov
movsb
xchg
cmp
lock
pop
sbb
int
mov
sbb
int3
aas
les
cmp
out
mov
pushf
xchg
into
mov
push
enter
jo
mov
sbb
in
or
sub
and
and
and
ds
cmp
fwait
inc
test
or
or
lcall
and
stos
cmc
and
cmp
sbb
mov
outsb
test
xchg
xor
mov
pop
insb
mov
cltd
mov
cltd
shr
mov
push
mov
sbb
adcb
jl
xchg
out
cwtl
jb
out
in
mov
int
mov
test
imul
loopne
sbb
dec
pop
in
or
les
enter
mov
xlat
sbb
mov
dec
cmpsl
mov
imulb
push
test
xor
mov
cmp
and
popf
mov
shrb
sub
dec
popa
outsl
xchg
std
test
pop
je
dec
mov
and
cmpsb
or
setle
mov
sub
out
into
js
test
push
lcall
inc
jns
stos
jecxz
sbb
aad
ficomps
movsl
hlt
and
pop
push
and
pop
mov
lret
jbe,pn
add
xchg
scas
xchg
xchg
mov
mov
icebp
and
int3
jnp
movups
scas
outsl
cli
daa
sti
je
ja
arpl
xchg
xor
mov
mov
xor
and
ret
push
hlt
sub
ljmp
js
int3
jge
xor
fnstenv
popf
push
adc
xor
pop
icebp
pop
repnz
enter
xchg
cwtl
addr16
xor
outsl
imul
mov
in
add
cmpsl
pop
pop
test
cmpsb
add
xor
mov
lret
mul
mov
idivl
bnd
sbb
into
movsb
lret
fwait
lock
or
pop
out
sub
xor
mov
sahf
or
popf
mov
imul
addb
mov
xchg
pop
lds
fbld
in
or
in
dec
sbb
xchg
cmp
jo
jns
nop
push
cmp
cmp
aam
addb
adc
dec
xor
dec
scas
xlat
xchg
mov
or
mov
sub
std
mov
stc
test
in
xchg
xor
cmc
xor
dec
mov
dec
rclb
outsl
aam
fbld
sti
ret
fisttpl
push
clc
je
pop
xor
js
test
push
mov
cmp
ror
jge
imul
scas
lock
or
popa
loop
fmuls
mov
xchg
test
or
cmp
fsts
cltd
push
es
sbb
je
add
into
push
xchg
aas
push
dec
outsb
rcl
aas
jns
dec
and
andb
hlt
jecxz
sub
pop
jmp
shll
push
loopne
sub
test
xchg
loope
jmp
push
xchg
popa
jp
jno
insb
dec
pop
add
outsb
sbb
push
lds
movsl
pop
xchg
mov
repz
push
adc
test
scas
fdivs
shrl
cmp
push
dec
cltd
sub
lcall
aad
outsl
cmp
pop
rcll
jl
icebp
test
ds
mov
push
xor
clc
dec
fsubrl
jle
clc
dec
outsl
xor
adc
pop
xor
inc
ftst
push
pop
push
mov
xor
into
clc
sahf
aas
pop
ja
aaa
ret
imul
lahf
push
push
shll
icebp
ljmp
aas
mov
and
push
mov
jmp
out
ja
popa
mov
insl
es
sar
sbb
sqrtps
or
ss
fucomip
xor
int
insb
xchg
xchg
das
dec
xor
leave
push
scas
std
ret
test
out
mov
push
cmp
andb
mov
test
repz
lret
jno
xor
or
cs
jp
jae
testb
inc
into
xor
test
dec
int3
push
adc
scas
mov
push
pop
dec
push
pop
jp
pop
dec
mov
sub
mov
mov
xor
sub
push
jbe
sub
out
jno
mov
bound
sub
push
out
mov
pusha
mov
test
scas
add
js
xor
mov
cmp
bound
and
movsl
xchg
shlb
dec
xor
mov
ja
scas
mov
getsec
xor
inc
sub
xchg
sub
xchg
test
stos
lds
lods
xchg
rolb
or
daa
jl
dec
jno
pop
push
mov
jl
mov
cmc
jmp
jne
jne
sbb
push
scas
push
xor
test
imul
jb
ss
push
sbb
movsl
les
fxch
sub
imul
test
cltd
sti
cmp
jne
add
out
pop
out
inc
mov
sub
stos
les
lret
clc
cmc
mov
int
mov
imul
test
add
subl
push
mov
cltd
sbb
or
pop
mov
jne
shlb
xchg
outsl
fisttpl
push
imul
movsl
mov
jns
pop
jae
jle
scas
out
sbb
sub
add
jecxz
enter
push
fisubs
outsb
or
xor
cmp
fwait
push
sbb
xor
cmp
adc
push
fldt
es
test
xchg
std
loopne
mov
sub
add
xchg
cs
mov
mov
add
mov
notb
lcall
in
push
jp
out
sub
jnp
ds
out
scas
xchg
bound
fdiv
inc
sub
inc
xchg
xchg
mov
in
imul
es
inc
fdivrl
stc
test
pop
popf
xchg
je
nop
xor
cwtl
xor
ss
sub
call
inc
xchg
dec
ljmp
push
inc
lcall
pop
or
loopne
jns
fdivs
loopne
cs
int
cld
push
ret
jae
enter
lods
add
mov
mov
les
imul
push
xchg
jge
dec
testl
call
les
pop
cli
and
fcmovu
call
loopne
out
sti
cwtl
jecxz
adc
cmpl
adc
pop
lods
sbb
iret
rorb
mov
clc
lds
dec
inc
stos
loop
nop
sub
jecxz
inc
mov
fistl
push
mov
mov
mov
pop
adc
lods
jbe
fsubrp
xorl
pop
push
pop
adc
jb
and
adc
sbb
fimuls
pop
jl
xchg
imul
mov
out
repnz
movl
cld
push
push
inc
inc
stc
jg
loope
jo
icebp
outsb
rcll
mov
das
adc
inc
xchg
or
dec
out
ss
jns
pop
and
xchg
dec
fstps
lods
adc
push
sub
push
repz
or
and
bnd
inc
frstor
rcr
sbb
rorb
push
xchg
shrl
out
sbb
cmp
push
popa
sbbb
lret
pusha
pop
mov
sub
dec
xor
jl
enter
addr16
outsb
push
sbb
int3
imul
stc
lret
ret
jae
addr16
xor
stos
insb
inc
sub
dec
add
mov
sbb
addr16
dec
or
cmc
cmp
mov
mov
inc
nop
push
insl
inc
adc
mov
ds
inc
jbe
rorl
fimuls
xor
adc
sub
inc
int3
inc
jne
in
dec
xchg
out
jmp
mov
popa
pop
rolb
sub
mov
fcmovne
repz
leave
push
aam
aas
ljmp
mov
push
inc
cwtl
into
movsb
loopne
jle
stos
mov
jo
roll
push
arpl
aas
or
push
jle
das
aaa
mov
out
mov
push
sahf
jmp
add
push
cmp
fstpl
push
mov
out
cmc
push
sbb
loopne
scas
lret
sub
insb
mov
clc
in
push
sbb
push
mov
mov
cmpsb
lret
sahf
pop
scas
aad
mov
movsb
in
sub
cmp
scas
inc
cmp
mov
and
cmp
loope
adc
cwtl
ds
es
mov
mov
subl
cmc
imul
roll
mov
imull
aaa
mov
push
mov
fildl
in
xchg
insl
push
sbb
ljmp
push
mov
rcrl
adc
test
addr16
mov
push
or
test
cld
cmp
ss
cmpsb
in
mov
and
bound
xchg
sbb
mov
sbb
inc
insl
fldt
out
xor
dec
cmp
inc
dec
xchg
xchg
push
stos
addr16
pop
mov
popf
dec
xchg
test
dec
jae
ret
push
inc
std
pusha
and
xchg
js
lcall
mov
jecxz
inc
leave
adc
fildll
dec
mov
enter
pop
sub
lahf
js
jle
rcll
lcall
mov
push
mov
sahf
mov
js
call
sub
cmp
sbb
mov
dec
mov
fld1
stos
int3
xchg
lods
xchg
movsb
dec
and
popa
ret
ret
repnz
cmp
mov
stc
int3
outsl
imul
lcall
jp
ret
mov
mov
mov
movsl
dec
push
lret
test
lods
adc
fsubrs
js
push
pushf
mov
mov
jnp
jo
cmp
mov
push
pop
lea
and
xchg
icebp
mov
inc
ds
outsb
outsl
xchg
push
into
jbe
cmpsb
pusha
fs
push
test
repnz
and
push
cmpsl
in
jnp
js
mov
into
fistl
mov
fsincos
xor
test
fnstenv
or
xchg
mov
out
daa
lods
inc
push
aaa
mov
testb
in
dec
or
pop
inc
test
imul
in
lret
jle
test
mov
push
scas
dec
pushf
pop
xchg
stos
fwait
mov
xchg
je
mov
mov
arpl
and
sti
mov
outsl
fdivrs
and
xlat
push
enter
xchg
sti
cld
mov
jo
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
cmp
dec
loope
hlt
sbb
clc
xchg
popa
sub
pop
pop
call
scas
mov
shll
std
repnz
sar
lahf
in
mov
fdivrs
add
add
out
sbb
cli
stos
pop
pop
pop
add
call
sahf
jg
xchg
stos
fwait
cmp
jbe
in
add
pop
push
jle
push
add
pop
pop
mov
pushl
push
mov
pop
pop
jmp
inc
je
adc
loopne
pop
aas
or
sub
ja
sub
add
jmp
das
cmp
sbb
inc
out
aam
jb
inc
jns
pop
insb
xor
enter
cld
sbb
pop
add
add
pushf
movsl
mov
pop
popl
adc
sub
sub
jne
mov
int3
loope
stos
hlt
pushw
push
and
mov
jl
xor
mov
ret
les
dec
repnz
test
pusha
and
mov
cmp
data16
push
fstpl
jbe
add
fisubl
jo
cmpsl
fistps
pushf
jno
imul
dec
sub
xor
lods
lock
pop
mov
pop
mov
pop
out
push
in
js
xor
mov
push
sub
jge
inc
xchg
faddl
in
dec
sub
mov
inc
mov
dec
sbb
xchg
sbb
push
xchg
pop
jge
sub
inc
mov
dec
sub
mov
scas
stos
push
pop
jns
sub
xchg
jle
mov
ljmp
lea
pop
push
in
movd
xchg
dec
sbb
gs
addr16
fldcw
outsl
pop
rcrl
dec
fs
pop
jo
mov
cmpsb
inc
push
subb
pop
xchg
jae
and
loope
xchg
xlat
outsl
pop
sub
mov
push
and
repnz
sub
insl
jae
sub
adc
add
dec
sub
push
lds
sub
pop
xchg
iret
lods
rclb
xor
push
add
dec
sub
mov
cld
cltd
jns
push
jne
pop
mov
inc
xor
pop
fldl
in
imul
add
popa
lret
jae
adc
es
cmp
inc
fwait
sahf
sbb
add
imul
push
data16
xor
cmp
std
or
push
cmp
jne
test
inc
icebp
xor
cmpsb
js
fidivs
icebp
xor
jmp
loopew
and
mov
mov
lods
jb
js
inc
pushl
outsl
xor
mov
dec
cmp
jo
outsl
mov
divl
test
test
sti
cmp
js
aam
iret
xchg
pop
icebp
xor
mov
or
orl
daa
roll
daa
sbb
arpl
ljmp
cmp
ja
sub
pop
inc
mov
aaa
rcrb
lea
enter
add
sbb
lea
xor
mov
aaa
add
shl
testb
imull
test
aaa
add
mov
push
mov
popa
pusha
xor
jl
jnp
push
push
aaa
add
insb
add
add
ficompl
aaa
add
in
push
mov
lods
pop
mov
ljmp
aaa
add
loopne
aaa
loop
pop
bound
in
aaa
sbb
das
inc
add
mov
jne
aas
int3
or
in
xor
jecxz
aaa
add
jecxz
push
idivb
jmp
sbb
add
jecxz
cmp
loopne
aaa
add
ficompl
aaa
mov
jecxz
call
pop
fdivrl
pop
aaa
add
jecxz
mov
push
adc
popf
add
in
aaa
test
mov
aaa
add
call
xor
in
jbe
arpl
test
aaa
add
push
sbb
shl
aaa
hlt
js
aaa
add
jmp
fadds
call
imul
cltd
flds
sbb
imull
inc
scas
push
push
aaa
add
jecxz
aaa
cmp
aaa
push
imul
into
jmp
sbb
and
sbb
push
and
jl
push
mov
test
mov
aaa
add
nopl
add
or
push
not
jl
loopne
xchg
or
test
dec
xor
add
in
clc
mul
sbb
add
imul
test
or
fisubl
xor
insb
adc
mov
orl
cmp
and
out
cmc
push
mov
orl
add
jecxz
cmp
and
pop
or
xchg
dec
inc
imul
push
pop
div
push
mov
orl
bound
aad
fiadds
and
sbb
add
imul
cmp
xor
ds
aaa
add
imul
cmp
xor
inc
lret
jl
fstpt
xor
scas
sbb
in
or
xchg
dec
inc
dec
out
imul
push
cmpsb
shlb
test
and
in
aad
test
lret
jge
fldt
fwait
arpl
pusha
push
cmp
push
je
loop,pn
outsl
add
stos
push
into
cmc
or
into
into
push
je
xchg
shr
popa
add
ficoml
in
aaa
add
mov
aaa
sub
ss
in
aaa
lahf
pop
fdivl
outsb
and
pop
sbb
add
cwtl
sbb
loope
pop
movups
cmp
loope
aaa
subb
add
test
aaa
add
in
nop
insb
mov
mov
xchg
mov
pop
aaa
add
test
xor
add
aad
dec
je
mov
insb
mov
iret
push
fs
inc
aad
sub
aaa
ret
in
arpl
inc
nop
pop
icebp
sub
icebp
jl
hlt
cmp
fistpll
cli
icebp
dec
cmpsb
std
dec
add
rcrb
fdivrl
mov
movsb
xor
loope
cld
icebp
bound
in
aaa
add
in
aaa
add
in
aaa
add
in
aaa
add
popf
adc
aaa
add
in
aaa
add
in
aaa
add
in
aaa
add
in
aaa
add
in
aaa
add
pcmpgtb
push
movsb
call
mov
scas
incb
mov
push
sub
jnp
or
cs
or
in
lea
pop
ror
ljmp
sbb
jno
adc
shll
dec
pop
cmp
enter
and
mov
xchg
pushf
dec
mov
in
mul
popf
ds
loop
or
xchg
lds
push
iret
arpl
arpl
test
add
jmp
loop
sub
unpcklps
cld
inc
outsl
sbb
ds
sbb
aaa
xchg
adc
sub
ds
int
pop
xchg
pop
sbb
out
nop
call
mov
jb
adc
mov
pop
lock
push
das
or
test
or
dec
inc
pop
push
into
push
imul
sahf
ret
test
mov
test
xchg
out
pop
push
sahf
divl
out
cmpsb
sahf
ljmp
test
mov
mov
orb
cltd
adc
pop
pop
shll
leave
inc
pushf
mov
mov
xor
lods
jp
mov
shrl
clc
cmpsb
arpl
outsb
pop
dec
imul
cmp
adc
jae
mov
jnp
cli
pop
adc
pusha
pop
or
popa
jl
xor
or
mov
push
lret
es
mov
add
and
mov
testb
adc
sbb
xchg
mov
and
in
or
pop
pop
or
or
scas
xor
add
dec
dec
enter
jp
out
mov
mov
mov
sbb
jecxz
ss
xchg
out
scas
loop
sub
push
push
adc
nop
mov
jg
pop
sub
mov
lock
jmp
push
int3
dec
repnz
int
inc
xchg
mov
into
bound
cmc
mov
mov
pop
bound
fnstenv
jo
mov
fists
jae
js
aas
mov
mov
les
sub
arpl
xchg
xchg
loope
mov
mov
pop
and
adc
dec
adc
inc
cs
push
cmp
gs
ds
out
pop
and
ds
popa
xchg
insb
mov
dec
pusha
cmc
and
jae
leave
jmp
fildl
cmp
repz
mov
dec
fimuls
push
mov
nop
add
ret
mov
inc
xor
pop
out
lds
sub
leave
or
addl
add
add
add
or
add
adc
faddl
add
faddl
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
faddl
add
fildl
add
faddl
add
add
pop
fldl
add
add
adc
add
pop
fldl
add
fldl
add
fldl
add
add
xor
fldl
add
add
jg
add
jne
gs
xor
fs
insb
add
xor
cs
insb
add
insb
ja
jo
cs
insb
add
jbe
jb
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
stos
fldl
add
add
add
add
add
fldl
add
add
add
fldl
add
add
add
fldl
add
add
add
add
jae
push
push
dec
gs
popa
addr16
add
add
inc
jb
popa
je
inc
jne
add
add
jb
push
add
fs
jae
pop
imul
inc
insb
outsl
jae
push
gs
imul
insb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
add
add
add
inc
repnz
adc
mov
sbb
cmp
fucomi
loopne
insl
sub
jno
in
dec
rol
mov
inc
mov
adc
andb
das
push
and
push
stos
fs
insl
es
push
lret
dec
push
sbb
insb
stos
or
in
cmp
cmp
out
ret
in
jp
call
mov
mov
inc
cltd
loop
bound
mov
aam
loop
xor
inc
test
pusha
in
repz
jl
cli
shll
ss
pusha
sub
repnz
or
into
xor
leave
or
xchg
test
into
mov
lret
mov
aaa
jle
lret
mov
dec
in
add
ret
dec
adc
xor
loope
leave
aam
or
bound
arpl
cmpsb
lock
pop
xor
ret
sti
push
aad
ss
int
or
loope
sbb
inc
inc
nop
subb
and
mov
in
jbe
mov
cmpsb
jno
mov
or
pop
data16
push
or
fldcw
insl
jo
push
outsb
ret
fldl
sarb
jo
mov
ss
push
and
cmp
add
nop
add
or
dec
pop
add
cwtl
fnsave
aaa
test
push
push
sbb
mov
ja
push
mov
add
cmp
xor
cmp
cmp
jmp
int3
lds
adc
mov
fisttpl
fsubs
mov
scas
cmpsl
inc
cmp
sub
jnp
idivb
adcb
inc
add
push
add
xchg
lea
cmpl
add
loope
xchg
pop
xchg
mov
mov
out
loopne
dec
add
push
xchg
pusha
mov
les
data16
adc
in
imul
out
fsts
cli
adc
pop
and
stc
popa
jbe
hlt
add
ret
mov
lret
movsl
rol
or
mov
xchg
inc
cld
xor
or
push
add
adc
arpl
push
mov
xor
xchg
add
mov
adc
daa
jnp
dec
aam
fdivr
push
movsb
xchg
clc
icebp
lahf
dec
enter
and
mov
es
mov
gs
mov
movsl
jmp
pop
std
and
or
push
mov
enter
mov
jnp
mov
xchg
add
lahf
mov
push
mov
fists
sub
jecxz
int3
xchg
mov
xlat
push
xchg
add
lods
mov
cmp
lock
jl
xor
mov
push
aam
mov
xor
sahf
cmp
int
adc
rorb
push
fwait
and
aad
jne
jmp
push
imul
mov
sbb
push
daa
out
movsl
xlat
add
push
mov
movsb
mov
cmp
dec
divb
xchg
mov
lcall
shlb
sub
das
movaps
xor
xchg
ds
sbb
jl
stos
xchg
dec
pop
pop
pop
adc
enter
push
insl
sbb
hlt
test
cli
popl
pop
add
sahf
mov
add
dec
ss
movsb
adc
pusha
mov
orl
mov
andb
clc
sub
push
mov
xchg
sbb
dec
mov
imul
call
dec
in
out
push
gs
fs
jne
adc
jp
dec
adc
mov
sbb
das
andl
push
push
lret
in
inc
sub
mov
notb
dec
bound
or
psllw
dec
xchg
push
xchg
cmp
movsl
das
pop
out
jp
les
jp
test
xlat
insl
push
and
cmp
sub
xor
xchg
pop
imul
lahf
popf
ror
push
jmp
add
out
lret
xor
fneni(8087
fadds
jge
pop
sarb
psubq
adc
cmpsl
pop
xor
fidivl
es
jno
push
xchg
cltd
ret
subb
sbb
dec
sahf
push
mov
adc
push
imul
mov
xchg
cmpsl
sarl
sub
js
sahf
dec
dec
in
push
and
lret
inc
out
adc
or
sbbl
and
mov
decl
movsl
mov
outsb
mov
or
lods
push
pop
mov
icebp
test
add
stos
add
dec
test
lret
cmp
adc
fsubs
shlb
xor
shlb
in
add
std
or
jnp
mov
or
jecxz
jns
xchg
push
xor
bound
sbb
dec
repz
cmp
lret
addr16
dec
mov
aam
mov
xchg
xchg
xchg
je
bound
mov
lea
jnp
adc
inc
in
lcall
lcall
cmpsl
in
shrl
notb
mov
pop
mov
lods
push
cmp
or
push
dec
add
xchg
es
pop
mov
imul
cmp
mov
add
and
xor
adc
push
cmp
test
cltd
push
jp
aam
cmc
jl
fiaddl
push
mov
fcomps
mov
mov
pushf
xchg
js
out
lret
jle
scas
rep
push
push
cmp
adc
push
xchg
add
sbb
imul
pop
lods
xchg
shr
or
imul
outsb
sarb
push
jno
mov
shrl
roll
or
cltd
mov
ret
jns
mov
clc
mov
push
daa
addl
add
filds
imul
aas
push
push
xchg
repnz
sub
cmp
pusha
push
arpl
xor
in
xor
mov
fidivl
jge
fst
js
mov
pop
push
or
les
inc
fsubs
arpl
loope
cmp
incb
cmp
je
rcr
xlat
push
cmp
push
ja
insl
aam
call
into
outsb
jae
xchg
jg
jp
ss
sbb
jp
movsl
push
add
mov
sub
xor
inc
and
xchg
adc
jbe
or
pcmpeqd
xchg
sbb
inc
push
imul
inc
lods
pop
andl
outsl
mov
lods
xchg
fs
repz
jb
inc
ret
fmull
cmp
fsub
mov
sub
pop
mov
adc
shll
and
fsubp
test
dec
mov
sarb
push
sub
andb
cmpsb
out
mov
mov
into
jo
ret
sti
xchg
xchg
loopne
std
mov
enter
fwait
mov
out
and
int3
xchg
and
or
jecxz
xchg
or
pushf
shll
andl
mov
cltd
pusha
or
lea
push
and
push
imul
sbb
sub
int
shll
lret
push
inc
mov
dec
roll
test
mov
lret
das
out
out
dec
aaa
inc
pusha
bound
xor
lea
outsb
sub
sub
push
adc
push
int3
jne
fmulp
cmp
or
jo
mov
hlt
push
mov
lea
lds
jge
int
push
sbb
inc
jno
or
outsl
jae
add
sbb
fidivs
dec
dec
imul
pop
mov
dec
jnp
mov
je
das
pop
push
hlt
jge
rcr
data16
xchg
jecxz
cs
cmp
rcrb
in
in
cs
mov
mov
je
pop
jno
adc
push
fldlg2
es
push
adc
aas
jle
incb
mov
pop
vphaddbd
jne
aas
xor
sahf
movsl
es
jge
jge
fcmovbe
add
pop
xor
jecxz
les
dec
push
cmp
inc
popf
imul
cmpsl
cmc
mov
sbb
ljmp
add
inc
jae
movsl
stos
mov
aam
popf
out
mov
adc
rcll
sbb
cmp
aaa
in
nop
icebp
jp
hlt
or
fbld
mov
or
lock
xor
adc
mov
fldl
xchg
aam
cmp
jl
aad
mov
test
pop
adc
push
xchg
add
mov
xorl
mov
lcall
jb
dec
inc
shlb
pop
sarb
arpl
loopne
mov
sbb
mov
push
xor
adc
mov
sub
dec
ss
push
sub
xchg
pusha
out
dec
sti
push
hlt
sub
outsb
xchg
in
pop
jp
out
pop
cmp
mov
into
jp
test
push
pusha
and
or
mov
pop
in
jl
or
ljmp
push
inc
rclb
jns
lcall
adc
int
lea
call
cmp
es
mov
push
aam
jl
dec
sarb
mov
or
cli
mov
lcall
gs
fisttpll
add
adc
stos
insb
nop
xchg
stc
test
inc
negb
ja
or
xchg
xchg
push
cmp
lcall
ja
mov
mov
aad
mov
in
test
adc
lahf
fcmovnb
enter
ret
sldt
testb
iret
mov
out
gs
xchg
push
pop
sarl
aam
outsl
mov
stc
iret
jle
and
shll
stc
pop
sldt
mov
lret
ja
push
xor
cwtl
and
cli
cmp
call
lcall
mov
fisubrs
scas
xchg
push
jp
xlat
jp
sub
or
inc
ret
and
inc
and
mov
mov
jae
add
dec
mov
pop
mov
test
imul
pushf
sub
xchg
jl
hlt
pop
xor
popf
mov
popa
js
jnp
add
jnp
test
push
shlb
loopne
xor
jo
jb
subb
jmp
or
inc
mov
jg
movsl
shlb
push
jmp
incl
clc
adcb
pop
sub
call
add
ja
test
scas
sub
out
or
jno
xor
mov
mov
test
mov
add
aas
push
add
jne
pop
call
test
and
mov
out
idiv
push
stos
or
dec
pop
sbb
xor
sub
rolb
pop
mov
outsb
xchg
mov
cmc
dec
mov
lea
test
bound
notl
sub
add
lcall
cmp
stc
push
or
xchg
sub
movsb
jae
in
vdivsd
or
clc
xchg
ss
or
lret
push
and
icebp
aad
jns
out
out
insl
pop
dec
cmpsb
stos
testl
add
lcall
mov
jmp
scas
jns
mov
es
sbb
adc
sub
and
xor
xchg
jge
mov
lods
pop
in
sbb
push
das
repz
loopne
hlt
or
in
lret
push
cmpsl
mov
xor
push
jecxz
lret
sbbl
sub
mov
jmp
inc
sub
popf
cmpsl
enter
vpaddsb
or
push
adc
movsb
call
push
xchg
popa
mov
sbb
add
rcl
es
cmpsl
jle
jecxz
frstor
xchg
fistpl
outsl
subl
js
or
and
add
ret
fimuls
xor
mov
cs
out
aam
je
cmp
into
xchg
test
es
xlat
xchg
mov
xchg
fbld
arpl
out
or
xor
je
leave
gs
fidivrl
cmp
iret
mov
or
lods
xor
imul
ret
xchg
xchg
cmpsl
push
adc
mov
lods
je
aaa
data16
jbe
cwtl
jecxz
push
adc
popa
repnz
sub
cwtl
sahf
rcrl
inc
jge
pop
mov
fcomps
push
xchg
aad
push
xchg
arpl
mov
dec
push
sub
cmp
dec
pushf
rolb
clc
sar
mov
repz
push
lret
outsl
lds
test
loope
cmp
lds
es
jle
mov
cmc
add
cmp
mov
je
push
adcb
scas
mov
mov
lods
cmp
mov
dec
loopne
sahf
lret
sub
mov
shlb
ds
push
ret
and
bound
pop
outsb
leave
scas
hlt
outsb
sub
mov
inc
dec
lods
jno
push
out
mov
fimuls
pop
cmc
xchg
loope
push
cmc
and
popl
sbb
mov
subb
and
clc
xchg
sbb
fs
pop
stos
int
pop
mov
pop
mov
std
jno
or
mov
adc
inc
ja
add
outsb
sbb
es
nop
sub
pop
pushl
cmp
ret
cmc
mov
dec
jno
mov
stos
int
clc
jle
cli
jae
rcl
push
lods
mov
sbb
or
int3
pop
mov
add
mov
cli
xlat
inc
mov
cmpb
lret
lcall
xchg
sbb
adc
addl
add
aad
cmp
dec
sbb
jnp
mov
data16
cli
add
mov
shlb
push
and
roll
shr
jmp
jmp
sahf
xor
dec
out
cmpb
int
stc
sub
hlt
push
push
sbb
add
popf
sub
scas
add
fwait
xchg
movsb
jmp
inc
in
jle
push
dec
xorl
sbb
inc
ss
jo
jae
push
inc
inc
out
or
fsqrt
sbb
testb
jl
je
lret
sbb
adc
mov
arpl
les
fstpl
cmpb
loope
loop
repz
xchg
jl
push
lahf
stos
or
mov
inc
mov
lods
xor
std
ror
fwait
pop
pop
les
into
adc
cmc
inc
aaa
insb
data16
xchg
ds
fadds
repz
aam
shll
adc
fprem
ret
xor
ficoml
add
cli
sbb
mov
repz
xchg
mov
cmp
cmpsl
add
gs
sub
call
mov
dec
adc
loopne
mov
lock
pop
push
aad
pop
jns
dec
sbbb
addr16
push
call
cmp
or
and
push
movsl
mov
imul
fs
orl
xchg
inc
jmp
sahf
je
adc
in
add
inc
inc
test
repz
stos
cmp
mov
inc
outsl
dec
in
movsb
lret
xchg
cmp
push
fists
icebp
test
push
das
ret
loopne
inc
mov
and
lods
sub
mov
push
sarl
nop
xchg
fnsave
mov
cs
push
cmp
jb
jmp
push
sub
movsl
lret
repz
insb
lret
cmp
or
out
popf
mov
push
stos
or
pop
xor
jg
fidivrl
aad
dec
cmp
fisttpll
push
stos
cmp
pusha
jnp
inc
or
xchg
in
xlat
push
cmp
mov
es
sub
push
sub
je
mov
dec
inc
sub
scas
popa
pop
xor
dec
and
repnz
jnp
out
dec
xor
push
fstps
inc
pop
dec
mov
and
add
sahf
mov
pop
repnz
scas
and
fidivs
loope
cmp
add
or
mov
xchg
cld
dec
ss
imul
divps
enter
dec
jb
dec
into
arpl
push
xchg
mov
jp
test
les
ss
xor
sub
ficoml
fwait
jl
lods
bnd
hlt
arpl
imul
stc
or
out
push
jecxz
into
ja
movsl
arpl
js
pop
dec
es
je
adc
aaa
add
loop
and
push
xchg
sub
lea
jle
nop
ret
call
push
push
sbb
shlb
mov
lahf
scas
sub
inc
fistps
fstpt
add
adc
xchg
add
loope
jb
jge
gs
fsubrl
gs
dec
adc
add
daa
adc
subl
mov
push
popl
stos
dec
roll
jge
clc
imul
out
xchg
jnp
ja
lea
xchg
popa
adc
scas
aas
insl
iret
add
push
inc
popa
or
xchg
leave
repz
pop
faddl
in
mov
add
mov
sbb
push
cmp
xchg
and
mov
jne
pop
sarl
and
rcll
or
daa
loope
or
ss
adc
ljmp
ja
dec
fisttpll
mov
mov
jbe
bound
lcall
cmp
test
ret
out
pusha
xchg
filds
test
clc
cli
jp
jno
fwait
repnz
add
or
xchg
fwait
clc
roll
jb
mov
adc
out
push
or
dec
lret
out
sbb
in
dec
int
lods
sbb
mov
pop
xchg
push
pop
out
xor
fbstp
jo
cs
jg
cmp
dec
and
push
int3
xchg
and
mov
das
jns
js
fstps
rcl
xchg
cmpl
mov
frstor
pusha
popa
scas
test
inc
mov
enter
nop
adc
dec
movsb
rcl
inc
fstps
adc
jp
push
lcall
enter
decb
cmp
pop
shll
test
enter
xor
insl
dec
mov
mov
cmp
and
inc
fcmovne
fsub
movsl
sub
xchg
xor
repz
addl
enter
adc
inc
and
mov
dec
aad
lret
sub
das
and
test
cmc
pop
addr16
pop
lock
mov
lret
out
out
pusha
in
outsl
aad
mov
xor
and
popf
rorb
xchg
pop
clc
fwait
mov
subl
inc
or
push
mov
jge
popa
jb
sti
push
movsb
and
xchg
add
jno
jp
movsb
xchg
fwait
and
mov
cmpsl
ja
or
push
sub
movsl
push
loop
movsl
adc
movhps
cmp
ds
cmp
fimull
fdiv
nop
sub
mov
xor
inc
cmp
push
mov
xchg
sbb
daa
xor
ja
sbb
rep
dec
mov
and
loop
fdivl
jns
pop
stc
cmp
movsl
andb
mov
jp
adc
fdivl
aaa
and
loope
mov
adcl
push
iret
aad
lods
jo
sbb
pushw
js
xor
cmp
sar
in
hlt
push
xchg
rorl
pop
push
aam
jo
loope
add
jge
outsb
sub
das
add
ds
xor
xchg
mov
addr16
inc
and
mov
and
jl
or
stc
icebp
dec
divb
ficoml
push
aad
xor
loope
js
xchg
dec
sub
icebp
cmpsl
xchg
sub
sahf
pop
sub
dec
push
mov
pop
fnstenv
daa
je
pop
mov
jg
pop
fsubr
test
lds
sbb
shl
icebp
loope
xor
aam
das
and
testl
jae
pop
jg
scas
lock
mov
fstpl
int
and
adc
shlb
shrb
into
in
stc
add
add
rorb
orl
pop
lods
das
xchg
mov
cmp
iret
mov
out
or
sbb
push
ret
in
jg
cmp
stos
pushf
pushf
fistl
sti
xchg
inc
int3
out
fistl
push
and
dec
and
sbb
jae
pcmpgtw
sbb
add
repz
test
mov
xlat
subl
mov
loope
xchg
or
dec
out
dec
push
dec
in
or
push
test
adc
push
ret
jecxz
popa
add
and
test
int3
jle
leave
sub
dec
push
jl
cmpsb
xchg
push
or
mov
imul
orb
xchg
out
xchg
outsb
xor
and
loopne
out
scas
das
push
aam
adc
aam
xor
dec
scas
xchg
add
and
in
or
adcb
hlt
leave
mov
push
test
pop
sub
add
fldcw
jecxz
adc
idivb
rcrl
lea
call
ret
enter
pop
jne
add
mov
dec
push
push
and
fadds
cmpsb
ss
or
xor
add
mov
loop
arpl
xchg
dec
pop
add
in
test
loopne
and
sub
loopne
fadds
jns
mov
inc
mov
incb
daa
push
mov
rol
jno
xor
jb
inc
mov
push
jnp
mov
psadbw
xor
mov
aad
or
outsl
or
sti
mov
jae
mov
jmp
frndint
jbe
dec
data16
xchg
ss
ss
add
lret
inc
xchg
lds
mov
outsl
cmp
fsubrp
adc
rorl
and
lret
shr
add
inc
roll
add
push
ja
insl
sbb
dec
mov
js
insb
gs
mov
addr16
mov
lret
ljmp
sbb
sbb
pop
and
enter
mov
ds
sbb
cmp
les
or
add
adc
filds
icebp
ljmp
jmp
dec
dec
xor
insb
mov
jmp
sbb
pushf
cmp
mov
pop
arpl
fwait
and
int3
mov
mov
jae
lods
out
xor
inc
cs
mov
dec
sub
mov
xchg
push
jl
loope
cmpsb
or
jge
in
lahf
in
fstpt
inc
daa
out
sub
mov
pop
ljmp
aad
jp
rcrb
ja
pop
lcall
inc
pop
inc
insb
je
sbb
cltd
adc
mov
xor
cmc
pop
daa
mov
inc
adc
or
aaa
xchg
pop
push
xorl
clc
clc
xor
sub
icebp
mov
out
pop
iret
rcl
adc
mov
popa
push
into
shl
ret
imul
push
fsubrl
aam
hlt
loopne
pop
sbb
fidivl
dec
push
sub
cltd
lods
adc
mov
cmc
pop
jg
iret
add
xchg
movsl
cs
pop
jnp
push
rcl
dec
cld
lahf
sub
xor
xchg
lds
pop
xorb
pusha
adc
stc
xor
stc
adc
fnsave
shll
xor
sbb
lods
pmuludq
cmp
mov
mov
ficoml
jns
call
mov
xor
call
jbe
sub
test
in
sbb
mov
pushf
jne
and
loope
loope
add
imul
mov
rol
cs
imul
js
dec
jle
pusha
jno
mov
fnstenv
adc
loope
in
add
push
rcll
xchg
popf
call
inc
push
push
cltd
movsb
cltd
jnp
cmp
clc
inc
sub
das
out
jno
add
add
jg
mov
lahf
cmpsl
jns
test
rorl
cmpsl
ds
std
xlat
xchg
xlat
xor
inc
cld
or
idivl
push
xchg
stos
pop
rorl
leave
fs
sub
ja
aaa
dec
mov
nop
jns
push
or
iret
dec
cltd
ret
icebp
sbb
xor
lret
cmp
std
sarl
out
shl
push
mov
push
hlt
jnp
pop
sub
xchg
aam
jo
sbb
stos
fsubr
and
push
lods
inc
push
jns
cli
cli
fildll
outsb
mov
out
add
xchg
into
mov
inc
fcmovnb
lods
sub
sarl
sbb
les
sub
loopne
mov
push
js
xor
lds
adc
mov
fld
mov
fldlg2
push
mov
mov
rclb
push
mov
adc
push
jle
sahf
aaa
mov
test
jnp
add
popf
push
movsl
sbb
or
mov
jo
pop
aas
movsb
dec
sub
repnz
push
jmp
push
cltd
add
int
stos
pusha
and
mov
jl
idivl
xor
dec
dec
adc
sub
aam
sbb
jecxz
rcll
movsb
xchg
shlb
aaa
cmp
push
adc
stos
jb
dec
aam
cli
ficoms
jno
mov
mov
fisubrl
fs
push
iret
mov
cmpsl
xlat
sub
or
aas
in
or
jb
jns
dec
aad
jne
scas
mov
mov
push
mov
cmpsb
sbb
popw
lret
shll
or
sub
xchg
out
es
jnp
push
add
imul
sub
cmp
push
push
pushf
and
cmp
jns
in
test
xor
shrb
out
dec
sbb
adc
pop
mov
add
lock
sub
orl
sub
inc
test
lahf
cld
adc
inc
and
xchg
push
or
dec
mov
push
mov
js
dec
or
lock
mov
xor
aas
xchg
inc
cmp
push
xchg
je
add
adc
pop
mov
mov
mov
mov
push
shll
xor
push
test
inc
fdivrs
xchg
push
int
jg
sbb
dec
inc
sbb
pshufw
adc
inc
pop
push
sbb
push
xchg
sbb
mov
xchg
insb
cld
ja
test
out
dec
pushf
outsb
insb
ret
ss
mulb
inc
or
aas
xor
clc
add
mov
mov
dec
mov
mov
insb
movsl
nop
aad
cmpsb
scas
inc
xor
cs
mov
pop
xchg
rclb
or
mov
hlt
mov
addr16
mov
mov
mov
test
ja
pop
fldenv
inc
cmpsl
fsts
ffree
into
mov
mov
xchg
xchg
daa
add
push
mov
lods
adc
inc
jge
xchg
jg
rclb
mov
dec
inc
in
pop
jnp
lea
xchg
dec
loop
test
lock
cltd
aad
scas
xchg
icebp
mov
arpl
inc
cltd
stos
fiaddl
sbb
dec
call
xchg
xchg
or
int3
por
adc
xchg
xchg
mov
das
andb
inc
loop
ss
nop
mov
stos
in
mov
cmpsl
jbe
js
fwait
insb
jecxz
mov
shl
xor
rol
mov
and
lahf
pop
adcl
ds
adc
std
es
call
ds
push
out
sub
or
sti
sahf
std
js
repnz
cmp
mov
pop
mov
jecxz
filds
mov
mov
fsubs
jae
xchg
aaa
mov
popa
mov
pop
cmp
aaa
pop
stos
sar
out
sbb
jg
or
and
cmp
js
xorb
push
aaa
clc
test
mov
test
sbb
in
fiadds
pop
or
jecxz
lods
mov
test
dec
loope
clc
mov
fsubs
push
xchg
pop
movsb
pop
xchg
add
jns
or
mov
and
rcr
loopne
push
movsb
push
or
jno
lahf
es
jno
sub
inc
and
mov
flds
test
ljmp
mov
imul
mov
daa
scas
aam
adc
outsb
enter
pop
sub
div
mov
sub
inc
sub
shr
enter
pusha
jl
dec
jne
imul
pop
imul
dec
xchg
xor
add
out
sbb
push
fisubs
fnsave
pop
movsb
test
loop
adc
dec
test
mov
mov
xor
mov
in
or
pop
clc
jle
lea
inc
cmc
jnp
movsb
xor
test
les
fstpt
negb
xchg
stos
push
mov
jne
mov
rorl
test
ret
daa
add
nop
lods
pop
iret
add
adc
cmpl
aad
mov
jle
or
iret
outsb
sarb
ja
xchg
or
mov
lret
cmp
cli
mov
inc
jno
sbb
imul
loop
pop
test
jp
add
adc
lret
jmp
or
dec
pop
loope
inc
mov
lea
dec
pusha
add
test
outsl
fists
xlat
in
out
das
ds
rorb
xchg
pop
cmp
mov
mov
sub
fbstp
xchg
lret
sbb
addl
dec
rclb
add
sbb
add
pushf
inc
ja
mov
mov
movsl
or
das
ret
popf
mov
clc
mov
gs
mov
sub
adc
jle
xor
lea
int3
dec
mov
call
shl
pop
mov
push
pop
je
sub
inc
adc
mov
adc
ds
lds
xor
jmp
and
mov
ja
sub
pushf
xor
test
insl
pusha
testl
dec
rcll
fdivp
filds
test
jns
shrl
and
fildll
push
push
sbb
lea
aad
lret
xchg
push
adc
dec
dec
imul
fstpt
popa
lret
divl
push
and
data16
rol
sti
add
clc
xchg
rorl
xor
cmp
mov
cmpsb
aaa
out
push
lret
xchg
pop
aaa
fmull
mov
mov
scas
into
cwtl
test
popf
sarb
imul
xor
mov
xchg
push
xchg
push
mov
sub
pop
sahf
popf
in
adc
scas
jae
mov
pop
sub
xor
pop
push
pop
add
jb
aas
test
out
jo
and
xor
rorl
shlb
mov
pop
gs
xchg
xchg
test
cmc
outsl
insb
pop
mov
sahf
cmp
push
fbstp
rorl
or
sub
mov
fsubrl
dec
xor
icebp
pop
jecxz
sti
xchg
fistpll
pushf
cltd
hlt
sub
or
ds
test
jmp
mov
ds
shrl
addb
jmp
outsl
push
std
sbb
xchg
or
and
mov
dec
pop
push
mov
es
jmp
push
adc
mov
push
aas
xor
pop
sbb
push
mov
pushf
adc
cmp
xchg
popa
add
test
hlt
and
inc
adc
daa
mov
lods
mov
pop
mov
cli
cli
mov
push
xor
sbb
xchg
jecxz
xor
mov
pop
lods
subl
dec
and
ja
xor
scas
movsb
lahf
or
adc
add
mov
int
out
sbb
pusha
lahf
outsb
xchg
mov
adc
pop
add
cld
mov
mov
aas
mov
out
or
sahf
pushf
and
icebp
pusha
aam
inc
stc
jne
and
mov
jmp
rolb
cmp
rcll
xchg
inc
insl
jae
xchg
jae
ss
xor
fstpt
lods
or
push
ja
or
or
ds
mov
pop
and
int3
arpl
mov
je
jl
hlt
stos
fisubrs
mov
icebp
lcall
pop
push
loope,pn
inc
popa
idivl
xchg
push
sbb
sbb
pop
jno
cli
shlb
lahf
dec
and
jmp
mov
add
push
cmovae
rcrb
ljmp
cld
std
or
aaa
sbb
les
sub
mov
and
mov
aad
and
add
in
nop
scas
add
mov
std
adc
pop
int
jbe
mov
add
or
push
in
mov
pop
push
lahf
je
push
sbb
clc
movsl
fdiv
cs
push
or
mov
jp
jo
sti
xor
jecxz
ja
sbb
leave
and
int3
push
movsb
jmp
and
and
and
mov
or
cmp
insb
shrb
call
jne
jmp
popf
pop
mov
mov
cmp
pusha
push
bound
mov
sbb
in
popf
aas
pop
xchg
inc
or
movsl
jecxz
in
xor
inc
push
fldl
outsl
and
out
enter
and
and
sbb
xchg
mov
xlat
incb
mov
pusha
pop
sbb
jnp
push
push
mov
pushf
loopne
in
inc
lods
ss
stos
stc
inc
frstor
and
enter
inc
jb
outsl
xchg
enter
mov
test
mov
mov
das
pushf
clc
out
jl
push
repz
sti
jle
mov
inc
outsl
stos
int3
or
mov
sub
cld
mov
fdiv
sbb
popf
fistpll
test
cmp
leave
mov
and
aad
mov
xor
xor
loopne
enter
loope
in
in
mov
xchg
push
dec
pop
cmpsl
xor
std
sub
stos
xor
fdivp
xchg
xchg
in
inc
jno
sub
xor
test
mov
nop
fs
mov
xor
les
icebp
or
xor
mov
aam
ljmp
outsl
gs
mov
out
js
and
mov
aam
int3
jecxz
adc
addr16
jg
sub
push
add
aad
outsl
lret
lret
lahf
push
pmulhw
xor
xchg
mov
and
mov
dec
push
jo
dec
jmp
sub
jns
imul
mov
jnp
xchg
cs
mov
mov
inc
insl
jl
imul
xchg
popf
icebp
mov
ss
cmp
xor
cmp
mov
pop
mov
out
fidivs
jo
int3
cmpsl
mov
pop
sbb
mov
adc
mov
pop
in
mov
inc
lcall
sbb
mov
lods
loope
pop
ret
xor
mov
leave
sub
test
inc
rclb
mov
shll
iret
xor
rcrl
mov
or
sbbl
mov
cmp
push
inc
dec
clc
shrb
mov
jnp
dec
pop
jmp
jecxz
sahf
out
or
pop
popa
pushf
sbb
sub
je
in
repnz
int
or
outsl
test
sbb
mov
dec
adc
repz
movsl
inc
test
dec
pop
roll
jmp
pop
jecxz
sbb
adc
adcl
mov
adc
lea
aas
pop
aam
addr16
mov
dec
cld
ljmp
mov
push
xor
ja
sbb
ja
jmp
lahf
adc
imul
jae
jmp
inc
repnz
ret
fstpt
frstor
dec
cmp
and
sbb
adc
negb
jg
pop
and
pop
add
loopne
cmpsl
xor
mov
or
mov
subl
stc
push
test
sbb
push
movsb
sub
out
mov
xchg
imul
pusha
xor
cmpsb
js
lods
push
mov
or
filds
adc
mov
mov
push
in
fs
sub
test
jp
loopne
cmpl
shl
les
hlt
mov
cmp
imul
out
aas
repnz
sbb
loop
or
repnz
popf
leave
mov
sbb
mov
sbb
sbb
or
outsb
push
mov
dec
jno
lret
xlat
xchg
loopne
add
dec
dec
or
sbb
repz
cwtl
lea
lea
out
lds
int3
out
sahf
outsl
cmp
sub
dec
lock
mov
mov
mov
in
ja
sbb
movsl
outsl
xorb
cmp
xor
or
mov
ds
push
jecxz
lods
adc
sub
daa
lahf
mov
rcrl
daa
fld
sbb
mov
xchg
sub
std
xchg
xchg
testl
fdivl
stos
jno
sti
out
cli
mov
fwait
adc
out
mov
dec
clc
icebp
mov
push
adc
cmp
es
cmp
cmpl
cmpsb
hlt
or
xchg
int3
fisttps
jno
mov
mov
movsl
js
mov
fldenv
std
shrl
imul
divb
jo
repz
mov
cmp
aam
loop
test
add
or
sti
dec
mov
out
ss
loopne
xchg
mov
push
mov
or
test
sub
ljmp
and
sub
cli
dec
mov
mov
pop
xor
je
pop
mov
aas
in
mov
mov
jae
inc
js
cmpl
lods
aam
mov
into
mov
push
xor
jp
and
mov
stos
pop
clc
add
push
pop
mov
inc
test
pop
enter
xor
aaa
mov
imul
nop
mov
mov
andl
loopne
stos
sub
js
mov
icebp
pusha
and
das
pop
xor
xchg
mov
sbb
popf
call
xchg
xor
and
lods
xchg
inc
mov
ds
and
add
adc
insb
in
adc
inc
repnz
push
stc
sbb
jecxz
clc
stos
mov
cmp
std
inc
cmp
movsb
dec
out
xor
jge
jo
pop
cld
push
ss
inc
xorb
sbb
fidivrl
cmp
cmp
sub
adc
aaa
ds
xor
mov
int3
ret
cmp
repz
pusha
test
mov
add
lds
nop
mov
out
add
pop
aam
push
data16
xor
jbe
mov
icebp
rorl
popf
popa
mov
scas
data16
movsl
mov
hlt
dec
jns
cmp
dec
jns
push
lods
pop
push
jle
pusha
jecxz
mov
hlt
push
xchg
das
shll
lock
int3
pop
les
and
insl
inc
mov
xor
mov
dec
mov
push
sbb
mov
inc
and
fstpt
aas
cmp
in
pop
xor
popa
aad
cltd
push
ljmp
shlb
cmp
iret
arpl
xor
loope
jbe
xlat
or
jb
mov
lods
add
repz
adc
sub
mov
std
data16
pop
mov
ret
fsubrs
insb
out
outsl
insl
sub
lcall
push
or
lret
and
popa
mov
jg
int
dec
push
cs
loop
adc
jns
mov
push
leave
xor
fsubrs
mov
push
jns
das
in
lods
xchg
mov
jg
mov
sbb
pushf
cmp
push
mov
jbe
push
xchg
ret
addr16
push
dec
aas
nop
sub
xchg
mov
jle
mov
pushf
jp
out
in
pop
ds
cmp
cmp
test
inc
aaa
sbbb
sub
stos
push
xchg
dec
lret
outsb
addr16
ljmp
xchg
mov
adc
mov
cmp
adc
mov
mov
sub
cmpsl
lea
xlat
adc
mov
fbld
add
mov
mov
add
add
mov
lcall
sbb
xor
mov
cmpsb
mov
aam
ja
in
push
jae
mov
out
jmp
loopne
mov
push
mov
ret
add
movsl
nop
pop
movsl
pop
lret
sub
sbb
push
aad
mov
sti
or
notb
xor
imul
jmp
jne
pop
in
mov
nop
add
repnz
pop
jecxz
arpl
cwtl
mov
flds
or
mov
in
mov
repz
mov
jae
test
sub
mov
lret
jg
lret
pop
sbb
test
shl
jl
or
push
xchg
data16
in
mov
dec
jg
mov
test
sub
mov
xchg
loopne
sarl
pop
push
pop
mov
push
or
inc
and
mov
pop
subl
or
clc
mov
int
fcmovnu
imul
mov
mov
and
fstl
xor
movsl
lcall
mov
pop
movsb
fdivrl
cmpsb
mov
dec
xlat
ljmp
inc
or
fnsave
pop
adc
leave
xchg
cwtl
sub
push
out
xchg
mov
aaa
sub
lock
push
xor
stos
push
sub
cwtl
arpl
mov
sub
xor
cli
lret
cli
cmc
out
fdivr
mov
popa
pop
push
cltd
mov
rorl
pop
popf
xchg
or
ljmp
mov
mov
stos
pop
push
aas
sub
add
nopl
mov
mov
push
gs
shl
icebp
fnstcw
dec
dec
gs
repnz
and
push
arpl
insb
xchg
add
rcrl
lods
push
clc
out
aaa
xchg
inc
mov
jle
jae
add
sbb
lods
test
jmp
iret
nop
test
xchg
movntq
out
movsb
inc
in
test
stos
inc
movsl
mov
stos
cmp
cmpsl
xlat
orb
mov
mov
cmovno
add
in
push
mov
sti
xchg
shll
sarb
fwait
mov
lds
add
add
test
sbb
inc
cmp
lods
cmpsl
iret
in
mov
adc
shll
in
cvtps2pi
das
js
pop
ja
mov
add
stos
stos
jo
sbb
fisubrs
pop
addr16
and
mov
pushf
xchg
icebp
nop
stc
or
push
push
mov
pushf
add
sbb
jbe
lret
inc
lock
shr
in
and
popf
dec
jb
xchg
or
mov
sahf
xchg
push
aaa
popa
push
testb
jge
jb
jg
or
sbb
iret
testb
sbb
into
jbe
repz
sub
mov
aad
and
jns
mov
jno
add
adc
or
stos
and
cld
dec
mov
xchg
outsb
stc
aaa
popf
push
xchg
mov
adc
cli
loop
cmp
push
and
ds
loop
sti
xor
xor
push
hlt
imul
insb
sub
ss
stc
xchg
add
pop
popa
push
cmpsb
aaa
fimull
es
sbb
sbb
clc
vmptrst
push
or
outsb
lret
pop
add
sti
pop
push
je
lds
jb
inc
pop
xchg
sub
lds
mov
mov
in
push
nop
mov
mov
scas
mov
pop
and
pop
inc
cmp
test
fcmove
sub
adc
adc
arpl
fsts
dec
jg
pop
jo
push
notl
xor
jmp
sahf
enter
incb
outsl
mov
lock
je
mov
add
cmp
mov
push
mov
clc
jns
pop
gs
xlat
cs
scas
fadds
xor
jb
adc
add
outsb
pop
ja
mov
test
or
mov
mov
add
ret
cmp
stos
xchg
into
push
sbb
push
mov
xchg
iret
dec
mov
aas
cmpsb
sbbl
mov
rclb
in
mov
adc
push
andl
sbb
push
icebp
mov
dec
jns
inc
out
sub
aad
sahf
cmpsb
lds
imul
in
inc
xchg
push
xor
xchg
jle
mov
pop
aaa
sub
sbb
jmp
mov
mov
fucomi
adc
jp
insl
push
repz
test
xchg
xchg
ret
cmpsl
adc
mov
sub
fndisi(8087
pop
and
add
ret
in
lahf
fwait
pushf
mov
inc
dec
inc
xor
in
loope
int3
ror
jne
pop
ret
lds
adc
loop
xchg
pop
pop
dec
out
xchg
lret
test
and
pop
adc
jae
or
or
lock
jnp
insb
push
cwtl
mov
cmp
adc
pushf
movsl
xor
mull
jb
mov
xor
cmp
add
clc
push
lods
cmc
jecxz
in
mov
outsl
lea
or
popa
std
mov
rol
fmulp
cs
push
mov
sbb
in
sbb
jle
mulb
inc
xor
dec
or
cmp
or
jp
scas
rolb
inc
outsl
sbb
fwait
mov
repnz
xchg
push
ret
int
daa
data16
mov
add
push
add
ss
sub
push
stc
xor
and
and
lret
rclb
add
dec
stos
out
pop
fldt
inc
xchg
nop
push
xchg
add
mov
mov
xchg
adc
fsubr
outsl
std
sub
negl
cmp
push
nop
and
xor
xchg
pop
inc
roll
jmp
aad
enter
jg
sbb
inc
push
lods
jg
sbb
pop
shll
inc
xchg
ljmp
cmp
std
xor
inc
sbb
add
xor
xor
cmp
ficompl
stos
in
xchg
add
fmull
and
arpl
mov
les
sub
fistl
push
push
popf
dec
movsl
mov
dec
pushl
pop
cmpb
dec
test
pop
or
sub
lret
and
xchg
add
fmul
in
cmc
cmc
inc
or
leave
mov
fdiv
push
jne
gs
and
sbb
lret
push
iret
pop
sub
iret
xor
in
mov
call
jo
es
pop
xor
xor
into
and
sbb
hlt
cmp
fisttpl
jb
js
mov
adc
push
adc
popl
inc
fadds
jmp
and
pusha
call
nop
lahf
xor
imul
lea
call
sbb
lds
leave
mov
test
jle
into
inc
add
and
jg
ds
test
sub
data16
xor
sbb
xchg
push
mov
cmp
addr16
iret
cltd
clc
lahf
loope
jae
dec
cmc
push
jp
out
push
das
bound
sub
mov
mov
cmp
pop
ss
fmuls
mov
addl
inc
je
out
and
xor
imul
mov
sarb
nop
jb
mov
cli
js
data16
add
dec
iret
lret
jbe
xchg
jecxz
nop
jbe
in
sbb
bound
jmp
jae
xchg
into
fs
icebp
fs
mov
jnp
jmp
rol
rolb
dec
sbb
push
incl
mov
push
rcrl
jl
or
add
out
cmp
jge
rcll
jno
or
push
les
or
mov
sahf
stos
mov
test
insb
jl
ret
movsl
dec
mov
rcll
jp
or
scas
xchg
arpl
jmp
shll
add
mov
fidivs
sbb
out
xchg
out
je
xchg
push
call
xor
lret
inc
out
jg
or
lods
fcomi
out
cmp
pop
fwait
out
add
int
jne
js
jae
cmp
lods
fbld
mov
repz
mov
test
lods
mov
sbb
in
mov
aaa
aas
les
sub
in
repnz
insl
cmp
aad
add
adc
mov
push
mov
push
repnz
dec
aas
push
out
mov
sarb
stc
add
jmp
push
cwtl
fdiv
incb
jns
mov
pop
xchg
in
lahf
js
jmp
push
dec
ss
or
inc
push
iret
add
sub
fistps
push
sbb
add
ficoml
xchg
xchg
inc
stos
outsl
pusha
jp
mov
insl
and
sub
mov
pop
xchg
shlb
subl
jg
cmp
push
mov
loop
mov
cmp
inc
std
adc
pop
stos
adc
sbb
inc
xor
and
test
out
add
hlt
pop
scas
pop
inc
divb
or
inc
loope
sar
sub
leave
xchg
fwait
push
push
iret
imul
mov
stc
fsubr
adc
adcb
das
jbe
cmp
push
in
je
pop
dec
sbb
int
and
mov
xlat
outsb
fisttps
and
xchg
insl
enter
insl
pop
gs
fbld
stc
clc
lea
mov
cli
inc
int
xor
shlb
lahf
pop
adc
dec
xchg
repnz
aaa
mov
rcr
dec
add
rorb
sarl
xchg
dec
jp
and
sarb
cmp
sbb
mov
icebp
in
idivb
shrb
outsb
jle
mov
xchg
addr16
mov
push
mov
mov
std
loopne
daa
push
pop
out
adc
push
mov
popa
dec
mov
lds
adc
lcall
outsl
jle
data16
test
pop
mov
sub
and
shlb
lret
xchg
xor
shlb
push
pop
in
adc
push
ret
repnz
xchg
xchg
and
dec
jg
add
sti
aad
inc
and
lods
lret
fs
push
stc
push
sbb
scas
dec
dec
push
mov
les
xor
cwtl
mov
adc
mov
sub
xor
jl
jmp
push
cmp
adc
push
sbb
hlt
pop
cmpsl
idiv
inc
fmuls
pop
sahf
jmp
test
mov
mov
adc
pop
mov
pop
mov
test
mov
sub
fldt
das
dec
adc
mov
fs
aaa
iret
cmpsb
pusha
sub
call
mov
xchg
shlb
xor
mov
dec
inc
rclb
lcall
nop
jl
pop
mov
or
popa
cs
fisubrs
cmp
out
mov
dec
add
sub
std
pop
loope
cmp
cmp
push
jo
push
xor
push
inc
ds
test
bound
dec
mov
rorb
adc
dec
jnp
or
outsl
ss
pop
pop
push
andl
mov
push
enter
shll
insl
imul
sti
xchg
mov
pop
push
sarb
xchg
pop
fcompl
mov
loop
adc
jo
mov
and
jmp
scas
pop
dec
std
popf
stos
jne
add
cmp
dec
pushf
std
shll
mov
sarl
cmp
out
out
pop
mov
inc
add
aam
inc
dec
repz
sbb
or
addr16
mov
adc
add
inc
jg
stos
lcall
adcl
sahf
jne
ljmp
jno
divl
je
rcrl
popa
insb
mov
out
adcb
fwait
sub
out
add
sbb
push
lret
adc
insl
movsl
je
mov
pop
aam
cmp
mov
mov
push
add
flds
hlt
sbb
xchg
shll
arpl
adcl
add
mov
xor
fsts
test
mov
cmpsl
int
pop
jno
push
stos
shlb
push
push
icebp
rorl
pop
adc
mov
mov
das
jns
push
iret
sbb
fiadds
sbb
adc
adc
or
sbb
xor
std
je
sbbl
sbb
lret
pop
xchg
into
mov
mov
test
sub
adc
mov
daa
fldenv
mov
jmp
loop
gs
aam
lods
repz
push
lods
cmp
mov
jmp
push
mov
ljmp
cmp
ds
cmp
dec
fucomi
test
popa
lahf
loop
lcall
iret
sbb
pop
lods
ljmp
inc
sbb
push
ja
pop
pop
ljmp
lret
fstpl
pop
push
mov
inc
adc
and
xchg
repnz
rcr
mov
cmpl
ffreep
or
in
dec
rcrb
mov
lret
dec
jle
jne
pop
das
insl
fsubrs
cmpsb
xor
mov
mov
loop
test
adc
ss
mov
mov
pop
push
icebp
fsts
add
xchg
inc
loopne
jne
pop
std
iret
je
jns
pop
or
mov
xchg
mov
stos
pop
pop
movsb
mov
je
add
sti
adc
jg
mov
mov
xor
cmp
into
imul
add
fimull
cli
pusha
call
jne
negl
cld
push
fadds
inc
cmp
mov
cld
pop
xor
stos
push
cld
push
xor
or
and
push
and
rcll
push
jle
fwait
mov
add
popf
out
add
dec
inc
dec
or
dec
adc
xor
sbb
test
mov
lret
cmpl
mov
fsubl
stc
push
call
mov
xchg
dec
test
pop
out
xlat
pop
mov
cmpl
adc
cld
pop
jnp
sbb
inc
cmp
mov
repnz
idiv
mov
push
sbb
push
in
int
test
loope
cmp
add
pop
xlat
pop
es
cmp
cmp
cltd
ds
insb
adc
pusha
jg
sub
and
jle
mov
inc
push
iret
test
test
rcl
sub
out
push
js
inc
inc
sub
xlat
cmc
ljmp
xchg
xchg
jne
in
aam
adc
dec
and
popf
rclb
sbb
lahf
sub
push
shr
mov
xor
or
xor
loope
and
pop
imul
fdiv
outsl
push
cli
insl
repz
ljmp
jp
cmp
xchg
sti
pop
and
jp
adc
shr
or
jecxz
push
hlt
rorb
push
fwait
rclb
jl
sbb
push
and
mov
xchg
mov
xor
and
fldenv
jecxz
mov
pop
xor
xchg
testb
inc
stos
push
inc
int
ljmp
mov
mov
test
cmpsb
sarl
fstl
cli
xchg
jle
cld
sbb
outsb
mov
scas
adc
sti
push
call
or
jp
cmp
mov
sbb
xor
sbb
clc
pop
pop
lods
outsb
xor
pusha
adc
cld
dec
push
outsl
cld
add
mov
xchg
fdivrs
aad
push
aaa
daa
mov
cmc
inc
aam
xchg
fnstcw
mov
test
testl
dec
dec
pop
lea
inc
inc
mov
imul
fldpi
xchg
pop
dec
decl
push
inc
mov
sbb
mov
shlb
cmp
pop
dec
iret
in
outsb
adc
sub
shlb
outsl
fmul
nop
dec
into
or
lods
int3
adc
iret
dec
mov
mov
data16
loope
sub
mov
enter
dec
test
test
dec
sarb
sbb
jmp
inc
mov
and
dec
sbb
ret
mov
iret
test
enter
fs
cmp
ret
addr16
sbb
dec
adc
and
lock
subl
and
mov
leave
or
je
and
mov
sbb
add
xor
push
call
aam
orb
arpl
pop
insl
cmpsl
or
xlat
mov
dec
push
xor
loope
inc
int
cwtl
cmp
cmp
fists
jge
popa
cmp
jne
test
mov
std
sub
in
iret
in
cmc
add
cli
sbb
sub
mov
data16
or
out
cmp
repnz
cld
xor
gs
sbb
arpl
cltd
mov
mov
lcall
mov
mov
pusha
xchg
lods
and
stc
leave
daa
xchg
pop
sarb
lret
lret
popa
cltd
pop
add
mov
scas
xor
adc
lret
cmp
sub
sbb
mov
xchg
mov
sbb
push
pop
test
mov
lcall
adc
mov
adc
add
mov
adc
incb
jge
xor
mov
mov
pop
mull
addr16
ffreep
sbb
fsubrs
scas
fnstenv
xchg
dec
or
xchg
or
add
pop
push
mov
dec
int3
add
test
test
mov
cltd
mov
sbb
adc
mov
add
pop
sarl
jge
cmp
mov
movsb
cmp
arpl
icebp
dec
stos
inc
dec
mov
cmp
push
subl
mov
xchg
popl
mov
xor
aaa
xor
pop
shll
add
mov
int
dec
out
add
pop
xchg
or
cltd
push
cli
test
pop
pop
std
dec
or
inc
pop
push
into
insl
cmp
sub
dec
xor
xchg
imul
fdivrs
mov
mov
inc
out
movl
mov
leave
repnz
jmp
mov
adc
jb
in
into
cld
push
sub
ret
push
pushf
fisubrs
into
lret
adc
ficompl
jecxz
fs
iret
pop
in
push
mov
in
push
ss
dec
or
mov
bound
iret
es
int
sub
es
aaa
std
lock
and
cmpsl
and
inc
xor
dec
xchg
call
fdivrs
lods
or
push
rorl
repz
ljmp
or
ja
and
dec
adc
out
shlb
jmp
xor
mov
sbb
iret
mov
push
arpl
in
loope
fs
adc
push
fnstcw
and
scas
clc
cmc
out
insl
repnz
fldenv
cmp
xchg
inc
mov
scas
fstpl
adc
mov
cmp
jecxz
inc
mov
jns
pop
movsl
or
clc
mov
nop
mov
cmp
mov
rcrl
sbb
mov
dec
cmp
mov
pop
into
pop
fucomi
cmpsl
ret
push
and
jb
fistl
xchg
xor
xchg
test
mov
sbb
jecxz
cmp
in
xor
cmp
jnp
pop
fsts
dec
push
test
jae
popf
cltd
aam
in
adc
jmp
adc
pop
xor
rclb
dec
ret
lock
mov
xor
mov
mov
std
or
cltd
jg
mov
push
sub
inc
adcb
imul
lret
xor
mov
mov
cmc
mov
fidivrs
stc
mov
push
fisubrs
hlt
jmp
pop
mov
or
pop
clc
push
stc
mov
cmp
loopne
mov
xchg
fs
mov
lahf
adc
outsb
xchg
dec
adc
lret
mov
test
mov
jns
daa
xchg
mov
scas
test
adc
adcl
into
mov
sbb
mov
das
mov
lcall
dec
xchg
inc
pop
mov
pop
mov
push
addl
adc
movsb
xor
jns
xor
jb
loopne
cmpsl
inc
cmpb
adc
daa
inc
mov
mov
xchg
out
mov
filds
jae
imul
or
xlat
push
insl
loope
pop
mov
leave
ljmp
xchg
in
jge
ds
jmp
mov
stos
cltd
or
and
mov
insb
ss
fnsave
in
test
rcrl
test
insl
ret
lahf
or
adcl
xlat
es
xchg
sti
pop
repz
and
shlb
xchg
jg
pop
lcall
aad
aam
cmc
leave
negb
xor
ss
inc
push
jo
mov
lea
aas
adc
jb
lods
clc
outsl
sbb
fisttpl
mov
addr16
sbb
inc
in
push
mov
or
cmp
shrb
ror
xor
cs
and
shr
neg
mov
xlat
jo
mov
scas
xchg
inc
adc
jl
dec
movsl
enter
lahf
pushf
pop
xor
add
inc
mov
jb
fidivl
cmp
xchg
sbb
push
xor
add
or
inc
sahf
scas
add
sbb
mov
lock
and
push
push
inc
push
jnp
xchg
andl
test
mov
loop
fcoms
push
fildll
sti
dec
nop
out
xor
fwait
out
and
or
fs
add
fwait
jle
or
xchg
mov
out
mov
mov
sbbl
add
add
sbb
jbe
lods
jp
rolb
dec
bound
sbb
frstor
or
in
lret
inc
inc
movsb
mov
leave
mov
push
gs
pop
outsb
arpl
fs
sub
movsl
xor
push
sbb
std
mov
mov
adc
lret
jbe
mov
fcomps
xchg
mov
mov
xorl
and
mov
jne
pusha
pop
pop
add
jmp
data16
jp
imul
xchg
pop
in
sahf
arpl
xchg
and
xchg
jmp
fnstenv
adc
mov
mov
push
xor
movsl
rcr
fcoml
lea
imulb
int
dec
test
cmp
or
insl
and
ret
aas
push
aaa
movsb
jge
push
inc
inc
out
je
addb
jge
or
xchg
push
mov
sub
dec
testl
push
lcall
iret
mov
xchg
std
pop
xchg
push
sub
divb
xchg
imull
adc
fadds
jb
cmp
out
sahf
sub
sti
cmp
jecxz
push
iret
sbb
shlb
push
push
jmp
push
jo
xor
jae
jle
arpl
loope
lods
fistpll
jae
and
mov
fsubl
push
dec
lock
ret
or
les
jns
out
mov
imulb
pop
fildll
mov
and
mov
repz
mov
pop
jecxz
je
lock
outsl
xchg
sbb
jb
dec
insb
out
cmpsb
aad
popf
mov
or
xor
jecxz
pop
sbb
int
in
negl
je
xchg
inc
mov
adc
xlat
xchg
out
lcall
popf
lret
stc
and
and
fldt
aad
cmp
and
sbb
xchg
push
pop
jp
je
or
repnz
cltd
into
mov
push
dec
inc
pop
addr16
fistpll
scas
or
ror
imul
fisttpl
cmc
or
jns
mov
lahf
movsb
out
xor
mov
sbb
push
cmp
int3
mov
ja
adc
mov
mov
clc
mov
adc
cmp
inc
jns
sub
cmp
in
scas
inc
and
pop
int3
inc
xchg
clc
cmp
ret
push
in
adc
jae
out
push
or
sub
aam
inc
xchg
jle
stc
push
sbb
fcmovu
inc
pop
imul
mov
pop
cmp
scas
int
xor
push
add
sbb
xchg
sbb
fildll
mov
ret
mov
mov
decb
fbstp
cmc
push
sti
xchg
enter
es
dec
xchg
pop
mov
jbe
pop
jle
lods
and
sbb
fisttpll
test
dec
or
and
lods
icebp
or
roll
leave
push
add
jle
jge
push
sub
pop
loop
mov
stc
push
je
cmp
dec
sbb
jbe
fiadds
or
dec
adc
sbb
scas
lret
fisttpl
inc
mov
test
mov
fwait
pop
mov
inc
int3
int3
ja
or
cmp
mov
sub
jne
push
fnsave
mov
test
cmp
sbb
xor
cmpsl
rcll
push
sbb
jno
fcompl
shll
jb
ja
mov
cmc
out
add
popf
xor
pop
loope
ret
sti
add
dec
popa
jl
xchg
sub
xchg
in
and
call
mov
xchg
mov
rcl
jle
xchg
popf
lock
outsl
fidivrs
cmp
es
loope
inc
daa
fstps
mov
cmpsb
dec
sub
int
add
pop
in
push
es
and
repnz
pop
dec
lock
dec
sahf
fs
movsb
xchg
popf
and
inc
sbb
xor
fmulp
or
in
mov
nop
sbb
loope
pop
cmp
inc
popa
sbb
dec
push
mov
scas
mov
add
mov
xchg
test
iret
int3
ljmp
es
add
push
das
in
shlb
mov
dec
insb
adc
mov
xlat
or
xor
ret
xchg
adc
out
inc
lods
xor
push
lods
mov
insl
xor
mov
add
mov
scas
mov
lret
xor
out
pop
repz
mov
sbb
mov
icebp
shrl
cmp
and
push
fsubrs
sti
fxtract
push
mov
xor
in
int
out
or
mov
jg
pusha
pop
adc
scas
xlat
aam
aad
add
adc
mov
mov
pop
xor
lea
sub
mov
mov
ljmp
pop
repnz
pop
in
leave
ljmp
pop
outsb
inc
xor
and
lds
rorb
adc
lds
jne
or
lahf
ror
ds
mov
push
loopnew
inc
bnd
and
mov
leave
shrb
fldl
push
xchg
push
inc
or
or
jne
xchg
push
dec
sbb
in
xchg
mov
xchg
push
call
mov
ja
sarl
mov
and
jmp
or
cmp
jae
lods
or
movsb
push
jmp
dec
xchg
adc
sub
sub
fldcw
adc
xchg
cmp
push
dec
ret
push
add
jle
lahf
push
jb
fnstenv
pop
sti
push
aaa
inc
imul
sub
xchg
jb
mov
stos
jle
iret
movb
stos
sti
push
inc
repz
das
add
out
mov
mov
mov
insl
ret
and
xor
adc
mov
shrl
int3
inc
cmp
fsubrl
rorl
push
data16
pop
fmuls
in
insl
adc
popa
repz
sbb
pop
push
xchg
inc
mov
xor
mov
rolb
daa
cmp
insb
fisubrl
adc
sub
shll
cmp
popf
jp
std
mov
ljmp
rolb
rcrl
inc
mov
ljmp
cmp
cmpsb
sbb
lds
into
mov
in
sbb
sarl
mov
sahf
rcl
pop
jmp
jb
xchg
fcoms
stos
and
fmuls
lds
cmp
pop
arpl
out
cmp
cs
and
push
jb
push
pusha
or
leave
adc
scas
out
mov
cmp
add
mov
enter
mov
call
jbe
std
and
and
subb
inc
inc
out
fadds
push
test
jns
cwtl
cmpsl
test
stc
push
mov
nop
cmpsb
enter
dec
add
or
pop
mov
nop
test
jbe
ja
sbb
mov
mov
mov
and
inc
std
mov
and
lret
pop
mov
lcall
clc
sbb
or
popw
cmp
mov
push
and
in
and
daa
hlt
dec
push
and
xchg
icebp
mov
clc
fcoml
test
pop
loope
sub
dec
rorb
pop
and
dec
adc
dec
jge
int3
test
push
pop
cmp
out
insb
push
inc
aam
xor
decb
sub
mov
sbb
xor
and
js
jmp
pop
fcompl
add
bound
shl
jle
inc
movsb
subl
xor
dec
jbe
push
andb
into
inc
inc
pushf
or
adc
mov
sbb
pusha
std
gs
dec
repnz
push
cmp
ja
or
orb
push
pop
cmp
fidivrs
mov
enter
pop
repz
dec
cltd
pop
and
sbb
xchg
dec
mov
xor
add
inc
xor
xor
scas
and
in
in
mov
jno
out
mov
push
insl
movl
shlb
dec
lcall
stos
or
das
js
jmp
or
lcall
out
jae
or
test
jb
bound
inc
mov
sahf
push
push
dec
cmp
inc
or
adc
push
sbb
stos
outsb
dec
movsl
int3
add
mov
add
int3
addr16
jb
jge
or
loop
cmp
pop
in
ja
push
jae
ret
iret
scas
aad
push
xor
test
push
loop
roll
push
repz
pusha
test
out
adc
mov
pop
in
lahf
push
rcll
cltd
ficomps
push
loopne
outsb
fistps
das
pop
mov
repnz
mov
stc
js
jmp
pop
pop
sarb
into
lret
test
addr16
in
mov
ss
outsb
add
adc
lods
or
jle
xchg
mov
push
mov
gs
cmp
adc
mov
mov
inc
arpl
jbe
aaa
add
xor
mov
popa
lds
repz
insb
jns
imul
test
dec
mov
leave
divb
fildl
lea
sbb
sbb
push
pop
dec
outsb
sub
mov
mov
mov
push
mov
jbe
lret
jge
int3
jle
push
stos
mov
test
xlat
mov
sub
jmp
inc
adc
sub
pop
outsl
mov
mov
out
test
xor
testl
jne
lods
xor
cmp
push
fistl
or
in
test
mov
pop
dec
pusha
rolb
mov
fdivrs
jbe
jge
mov
add
fwait
dec
pop
dec
cmp
stc
lcall
dec
and
sub
mov
mov
inc
fidivrs
test
insb
stos
in
imulb
scas
or
add
sbb
loope
movsl
pop
insl
push
cmp
mov
mov
pop
jmp
jo
sbb
ret
jae
dec
movl
in
inc
pop
mov
xor
mov
pop
jg
rcl
int3
dec
mov
pop
jno
add
mov
jo
cmp
jo
fisubrl
int
cmp
mov
insl
gs
inc
pop
aas
xchg
ret
inc
push
lret
sub
jnp
push
cs
jmp
ret
sbb
cmpsb
pop
cltd
dec
outsl
xor
mov
dec
jnp
lcall
push
jne
arpl
adc
mov
aaa
aad
not
mov
push
mov
adc
push
inc
insl
scas
mov
sbb
push
jno
inc
pop
mov
adc
stos
repnz
mov
les
fstpt
loopne
mov
call
push
push
aaa
fcom
arpl
or
movl
cld
sti
cmp
je
and
aas
ffreep
movsb
pop
fs
xor
movsb
lea
std
cmpsb
sbb
sub
mov
mov
les
aam
push
push
xor
xlat
sbb
inc
add
push
dec
cltd
and
and
movsl
fidivrl
test
xchg
pop
pushf
mov
das
notl
xchg
aaa
rorb
push
dec
cmpsl
jbe
out
inc
stos
jb
pusha
cld
aam
call
pop
and
rclb
fstpt
repz
fadd
and
jo
and
dec
jo
and
mov
or
unpckhps
add
xchg
rol
movsb
enter
outsb
lods
loope
push
inc
lods
dec
sahf
test
hlt
orb
xor
xchg
mov
divb
xchg
enter
mov
fisubs
faddl
outsl
xchg
stc
mov
lds
bound
out
pop
jmp
ficompl
push
outsb
rcll
jno
mov
mov
gs
frstor
sarb
outsl
cmp
outsl
inc
dec
xlat
adc
push
push
mov
clc
adc
adc
mov
mov
sarl
xchg
cld
aaa
mov
inc
inc
mov
lods
pop
cli
or
xchg
idivb
inc
adc
cmc
xorl
cmp
nop
fisubrs
mov
add
xor
in
arpl
jb
loope
test
mov
mov
add
xchg
popf
shl
xchg
dec
push
jmp
repnz
push
pusha
sbb
fsubrp
outsl
ret
xorl
pop
test
movsb
sub
jg
stc
xor
aaa
ljmp
jne
xchg
ds
jno
lahf
out
popf
cli
cmpsb
adcb
jp
add
orb
cld
mov
dec
adc
push
loope
movsl
mov
pop
pop
popa
dec
cmp
rorl
xor
sahf
out
sbb
bound
or
lret
in
mov
sub
aam
inc
xor
fidivrs
adc
hlt
cmp
cld
jno
pop
aaa
imul
xor
in
stos
and
mov
jmp
mov
cld
popf
rclb
pusha
push
cmpl
jmp
push
xchg
popa
and
cmpsb
or
xlat
mulb
divl
or
add
cmc
adc
fsub
xchg
push
addr16
insl
inc
outsb
mov
xor
push
xchg
addl
ret
int
es
icebp
mov
out
imul
test
jg
mov
test
pop
xchg
pop
xor
sub
mov
scas
rol
jo
jle
or
pop
push
mull
and
pop
pop
shr
and
sub
push
sbb
fnsave
mov
lahf
ljmp
cmpl
std
fisubrl
mov
sub
jecxz
mov
pop
mov
sub
xlat
out
dec
add
ret
add
addl
andl
dec
jle
sub
es
std
iret
mov
ja
pop
in
xchg
xchg
movsb
inc
inc
xor
ret
and
pop
cmpsl
mov
test
cmpsb
insl
adc
mov
fstl
xor
stc
sub
sti
xchg
or
push
je
dec
aas
test
sub
es
mov
ljmp
das
pop
bound
movl
cld
dec
sbb
repz
mov
cltd
adc
ja
rclb
test
fwait
out
aaa
int
nop
mov
js
xchg
sub
pop
jmp
repz
mov
and
loop
daa
test
lds
clc
dec
sti
out
notl
mov
stos
xchg
aas
call
mov
arpl
nop
pop
enter
imul
jge
jne
outsb
adc
out
mov
mov
dec
mov
cltd
fistpll
jmp
pop
test
aad
jmp
nop
rolb
cld
xor
aam
xor
cmp
test
fadds
or
in
mov
mov
test
mov
jnp
out
lods
cmc
hlt
xor
dec
cltd
aas
fisttps
imul
ljmp
in
in
pusha
xchg
sbbl
mov
or
or
in
scas
mov
push
sub
mov
and
mov
movsb
sub
push
xor
shlb
inc
mov
pop
mov
into
mov
mov
mov
cli
cmp
idivl
adc
dec
lods
test
add
fdivr
sarl
rcrb
movsb
add
sti
add
sbb
xchg
sbb
or
daa
or
push
in
jp
and
insl
or
pushf
xor
ficoms
sub
test
xchg
sbb
dec
mov
int3
or
movsb
and
in
iret
fidivs
jbe
bound
adc
sub
test
fs
int3
jnp
or
mov
dec
cmp
sbb
xlat
sub
aad
fnstenv
fiadds
inc
popf
outsl
outsl
sub
stos
sub
insl
pop
pop
test
shll
inc
cmc
scas
test
repz
imul
aaa
pop
stc
dec
movsb
rorb
faddl
add
inc
lds
in
sbb
mov
adc
push
lret
sahf
in
lea
xlat
leave
mov
test
test
pop
cld
cmpsb
rcr
and
inc
lcall
mov
dec
cmc
dec
dec
jns
push
push
inc
out
lahf
aas
clc
fstps
outsb
dec
push
add
xchg
cmpsb
lea
jg
loopne
or
and
jns
mov
pop
daa
adc
rcrl
rcr
daa
loop
or
push
fwait
out
out
jp
in
add
pop
sub
push
cwtl
pop
jb
push
sub
out
rcr
icebp
scas
xor
lret
inc
cld
cmpsb
ja
stc
add
out
dec
fadds
jb
sub
stc
lahf
add
insb
adc
xchg
dec
ret
aas
daa
in
std
nop
shl
push
push
aaa
xchg
shlb
mov
and
orb
xor
sbb
shll
mov
or
ret
mov
in
js
outsl
adc
stos
xor
repnz
pop
or
addl
lret
leave
jmp
outsl
in
cli
jge
push
lret
pop
adc
mov
cmp
adc
and
cwtl
adc
xor
dec
imul
sub
mulb
nop
xor
test
lret
dec
cli
jne
ret
push
shll
shlb
outsb
add
loope
fs
dec
data16
outsb
sbb
insb
cmpsb
xchg
xor
push
invd
mov
xchg
lret
nop
sub
adc
fsubrs
push
rcr
std
sar
test
jmp
dec
test
add
xor
fwait
sbb
fs
in
imul
or
je
mov
jns
ja
push
xor
jp
ss
jp
dec
and
pop
setae
and
adc
sbb
mov
mov
jbe
pop
addb
mov
out
fwait
jecxz
add
movsl
mov
adc
cs
mov
mov
adc
push
ljmp
fadds
mov
aas
clc
std
mov
jecxz
ss
std
call
icebp
cmp
jle
jb
add
and
ljmp
adc
stos
mov
inc
cmpsl
or
enter
push
nop
adc
into
or
daa
bound
xor
push
gs
fisubs
addr16
add
or
iret
push
jno
fs
xchg
cmp
fs
fnstcw
bound
sti
push
int
xchg
pop
fnstsw
mov
inc
stos
jl
and
test
push
iret
in
arpl
lods
mov
lds
fistpl
mov
mov
fdivrl
xchg
outsl
insl
loope
fcom
adc
lods
push
outsl
xor
shl
pop
scas
ror
sbb
dec
mov
rcr
adc
xchg
das
push
sbb
cwtl
xor
pop
mov
sub
mov
das
push
jge
mov
imul
pushf
orb
dec
jne,pn
mov
leave
out
or
rcl
bound
push
popf
aam
mov
xchg
xlat
rcr
xchg
movsl
jmp
mov
pop
xchg
inc
mov
negb
daa
scas
test
hlt
repnz
push
jns
jns
adc
dec
sub
inc
into
mov
popf
mov
sub
ret
add
filds
addr16
and
pop
in
xchg
cli
cltd
xchg
and
jp
jmp
cmpsl
cli
daa
xchg
insl
cld
mov
je
cs
bound
sbb
scas
add
jbe
and
les
xchg
and
cmc
push
inc
push
and
out
mov
or
push
in
adc
push
jmp
xor
push
fsubl
mov
pop
mov
push
mov
sbb
inc
mov
mov
repz
push
in
cmc
in
aam
movsl
dec
cli
clc
jmp
std
mov
cmp
pop
cmp
pop
jnp
inc
dec
leave
fildl
lds
mov
pop
andl
cmp
insb
orl
stc
insl
lcall
icebp
jns
xchg
xor
pop
and
jecxz
sbb
movsl
adc
mov
or
loop
add
or
aad
push
sbb
fadds
adc
lahf
pop
cwtl
jp
jg
push
in
mov
fcomps
xor
cmp
cld
sub
lret
ret
pusha
jns
cmp
fisttpl
push
jo
jle
sar
jmp
jmp
jae
inc
cld
jno
repz
adc
lahf
xor
mov
aas
jbe
dec
jecxz
roll
and
imul
dec
sbb
rcl
fs
repnz
sub
incb
push
mov
dec
push
dec
hlt
jno
jno
xchg
mov
mov
xchg
jae
pminsw
aaa
clc
out
or
sbb
test
xchg
adc
inc
pop
adc
mov
scas
je
pop
js
add
adc
cmpsl
jb
push
lret
testb
or
sub
iret
lods
pop
rclb
push
les
fistl
mov
xchg
mov
cli
push
mov
cmc
or
mov
or
scas
add
lods
push
call
cltd
xchg
lods
imull
dec
jno
pop
cmp
aad
mov
ljmp
push
lods
sbb
adc
xchg
xor
in
sub
mov
xor
sbb
fbstp
divb
jge
mov
cmp
push
sti
test
push
repz
fiadds
cmp
popa
lock
mov
add
dec
cmpsw
ljmp
xchg
mov
cmpb
push
lock
into
push
scas
cld
mov
lods
push
or
cltd
mov
mov
jl
inc
int
and
sbb
aam
lret
in
test
cmpl
xchg
pop
dec
cmp
xor
fistpl
xchg
push
js
push
imul
mov
mov
cli
ret
loopne
xor
out
decl
test
ljmp
les
lock
cmc
cmp
pop
notb
xchg
push
int3
xchg
mov
stos
movsl
pop
negl
lods
adc
loopne
sbb
mov
aam
mov
push
dec
sbbl
sub
sti
dec
adc
cmp
bsr
stos
mov
and
mov
or
fisttpll
sti
popf
cmp
push
pop
xchg
in
and
mov
xchg
sub
popf
fldt
sbb
mov
mov
pushf
mov
adc
mov
adc
and
cmp
xor
pop
stos
sub
out
cld
ret
mov
mov
add
pop
xchg
xchg
jno
arpl
shlb
int3
fwait
sbb
push
cmp
pop
shll
jle
das
nop
loopne
inc
sbb
and
push
rcrl
int3
jmp
imul
and
cmp
lods
test
jp
mov
out
lods
cmp
cwtl
and
xchg
mov
cmc
aam
hlt
push
xor
mov
jae
sub
fwait
cmp
inc
std
or
loopne
das
pop
push
jg
xchg
ret
mov
mov
xor
out
and
bts
xchg
rcrl
inc
dec
scas
mov
add
dec
add
push
lock
jmp
sub
and
push
aaa
aas
mov
clc
and
adc
out
movsb
std
iret
xchg
cld
aaa
mov
mov
sbb
loop
rorb
push
fnstsw
insb
push
fisubs
mov
sub
mov
fdivs
mov
xchg
popf
push
push
pop
popa
in
mov
jecxz
jbe
into
popf
and
dec
pop
xchg
rcl
mov
cltd
sub
ds
pusha
loopne
xor
fwait
cmpsb
mov
aad
decl
adc
mov
or
daa
add
pusha
std
jp
xchg
test
ja
pop
jnp
pushf
pop
pop
es
scas
pop
push
ljmp
insl
push
movsb
mov
jmp
mov
fwait
push
cmp
outsl
hlt
testb
sbb
and
ret
cmpsb
fisubs
cmp
xor
push
sbb
movsb
and
insb
xchg
and
in
mov
add
mov
adc
xor
mov
fisttpl
and
rcl
jnp
mov
call
in
and
cmp
test
push
subl
jno
jge
lahf
dec
lods
or
push
fnsave
sub
pop
ror
out
das
lds
scas
repz
ds
lds
sahf
pushl
xchg
push
push
cmp
adc
xchg
call
popf
stos
loope
les
xor
pop
push
cmp
mov
out
fnstsw
faddl
std
cmp
pop
adc
xchg
lea
pop
xor
lea
mov
lock
cmp
fwait
inc
inc
dec
push
aad
mov
cwtl
push
shrb
loop
shll
add
fsubrs
jg
push
sub
outsl
sbb
fbld
clc
ja
into
pop
iret
and
mov
dec
ret
sub
out
arpl
jle
pop
scas
or
aas
ljmp
dec
shlb
mov
add
pop
mov
sbb
test
popf
imul
push
mov
popa
lods
push
mov
lret
inc
inc
adc
loope
add
push
ret
sub
stc
fstp
andb
push
scas
fimuls
push
out
or
sbb
clc
cmpb
add
iret
sbb
mov
inc
sub
pop
dec
cmp
xor
and
jne
sub
jmp
ja
hlt
fdivr
add
dec
inc
sub
mov
and
sbbl
pop
mov
xchg
dec
sti
sub
xor
cmp
dec
sub
push
stc
lret
nop
sub
or
js
repz
sub
inc
test
insl
mov
dec
jge
push
lods
je
sbb
rcrl
lods
pop
xchg
sbb
mov
add
sub
lds
mov
push
outsb
inc
or
mov
pop
icebp
fisubrl
sbb
lods
mov
rcrl
arpl
jecxz
jns
or
imul
lret
add
rcrb
push
push
xchg
cmpsl
adc
sarl
popf
or
pause
lods
lock
push
push
out
pop
push
test
sub
in
fisubrs
sti
or
rorl
push
sub
fdivp
enter
push
cmp
add
sbb
das
lock
rcll
dec
fmuls
dec
lods
rcrb
fistpll
aad
mov
testb
mov
cli
sbb
enter
in
enter
cmp
addl
push
or
in
xchg
or
lds
add
out
cld
je,pt
pushf
xor
aas
xchg
xchg
out
mov
in
sbb
add
shrl
es
jl
js
pop
mov
pop
je
add
push
fisubl
xchg
jb
test
fidivs
movsl
in
inc
incb
pop
dec
out
dec
lcall
loope
jno
push
je
and
and
jne
imul
push
mov
out
cs
idivb
mov
stc
mov
sub
sbb
or
mov
xchg
inc
and
mov
fsubr
and
push
dec
addr16
jns
cmpb
mov
fldl
lock
out
jbe
push
cld
rcrl
or
sub
or
mov
push
and
sbb
mov
and
push
dec
and
jb
push
push
mov
sar
dec
inc
add
in
test
or
aaa
pushw
lahf
arpl
jle
clc
lds
outsl
add
fiadds
addr16
jbe
mov
lods
fadds
xor
cmpb
add
and
ds
add
ds
cmp
push
mov
fldl
lcall
rcl
xor
sbb
or
push
lea
shll
xor
repnz
repz
lea
sbb
popf
jge
pop
psubw
movsl
xchg
sti
push
inc
dec
jo
adc
sub
idivb
dec
dec
sbb
dec
inc
iret
sbb
push
popf
int3
fildl
mov
ja
pop
mov
fdiv
gs
lahf
lret
mov
std
jge
push
add
test
pop
add
sub
pop
and
ss
pop
mov
mov
xor
sbb
mov
test
test
jge
mov
stos
mov
jne
sub
pop
subb
push
sub
xchg
pop
loopne
mov
push
leave
add
dec
or
mov
dec
std
push
ss
imul
outsb
pushf
and
mov
clc
jg
cmp
and
add
int
inc
imul
jne
jbe
int3
pop
pop
and
or
cs
sbb
dec
and
aas
int3
in
adc
adc
adc
cli
xor
daa
xchg
cli
rcl
mov
leave
cmp
je
push
fisubrs
pushf
cmpl
jle
cwtl
cmp
icebp
xchg
xor
push
fnstsw
add
dec
xor
xchg
add
mov
xchg
int
ljmp
inc
jp
mov
or
imul
mov
dec
xor
loop
sub
shlb
pop
call
aaa
cli
js
mov
shrb
in
jl
or
mov
outsl
lods
or
add
push
aad
jecxz
sbb
aas
subl
shll
cmp
sarl
xor
test
mov
mov
cmp
and
fists
test
jp
mov
mov
imul
and
or
pop
pop
jne
hlt
insl
or
dec
sbb
mov
add
mov
push
or
int3
xor
xchg
popf
and
push
sub
inc
call
popa
dec
inc
pop
in
xor
dec
outsb
xor
scas
jg
sbb
sarb
adc
shrl
lods
push
lods
ja
jg
lcall
call
cmp
fs
fst
rorl
and
pop
mov
movsb
mov
pop
out
stos
mov
cmpsb
pop
decb
sub
scas
xchg
lds
int3
mov
xor
cld
push
daa
pop
dec
cld
stos
shll
cmp
pop
cmp
scas
in
stos
roll
ret
lret
mov
shlb
fcoms
cmp
jbe
mov
cltd
jecxz
scas
pop
ljmp
call
cmp
das
js
mov
stos
in
sub
mov
lret
inc
pop
xchg
push
outsb
test
icebp
lods
das
test
ja
add
subl
shl
lock
push
scas
stos
fiaddl
xchg
clc
in
dec
movsb
clc
lods
xor
sahf
add
push
xor
arpl
es
rclb
popf
lods
push
adc
mov
xchg
xlat
ret
or
cltd
rol
incb
enter
xchg
pusha
fnstenv
inc
es
loop
sbb
xchg
outsl
sbb
cltd
sbb
cmp
mov
lods
and
ja
aas
das
push
xchg
push
ret
notb
sahf
push
mov
jbe
xchg
mov
bound
and
mov
add
lds
push
mov
subl
movsb
push
add
dec
imul
push
ss
xchg
jl
fs
xchg
xchg
inc
idiv
ror
mov
mov
orb
pop
dec
pop
in
scas
movsl
inc
sub
sub
dec
or
loop
stos
insb
insb
jg
leave
out
xor
pop
sub
mov
cld
out
xlat
mov
sub
mov
shrl
jo
loope
inc
mov
out
add
jnp
cmp
push
xor
xchg
push
mov
int
mov
mov
imulb
test
int3
testl
sbbb
cwtl
call
mov
arpl
rcl
in
add
aaa
in
cmp
mov
cmpsl
lea
fidivrl
pop
sbb
pop
call
xlat
mov
or
sbb
dec
imul
pop
inc
push
frstor
dec
stos
pop
jbe
adc
test
mov
add
mov
das
pop
jno
dec
sbb
sub
lods
fs
cmp
into
shrd
dec
inc
ljmp
cli
push
sarl
stos
clc
aas
dec
je
or
xlat
aam
jp
pop
push
imul
inc
sti
mov
call
and
stos
pop
xchg
adc
add
notl
add
and
mov
dec
cmc
cmp
mov
lret
loop
xchg
cmpsl
mov
adcl
and
and
mov
aas
sub
cmp
add
aaa
add
or
and
add
jecxz
mov
stos
jmp
stos
push
loope
push
add
adc
jo
mov
adc
test
lret
dec
inc
pop
adc
sbb
add
inc
adc
and
xchg
mov
or
fistpll
xchg
bnd
mov
push
fisttps
stos
dec
addr16
jmp
fsts
int3
lret
mov
je
cs
adc
or
and
adc
mov
das
mov
out
arpl
imul
mov
sub
pop
inc
call
mov
insl
outsb
mov
xchg
push
xor
push
jns
int3
call
or
pop
or
nop
sub
or
adc
xor
call
test
jnp
iret
fnstenv
pop
aas
jg
stc
jb
mov
ret
and
sbb
sahf
sbb
add
mov
ds
nop
xor
inc
idiv
ds
xchg
or
aam
xor
push
cli
fists
stc
and
sub
dec
lds
aaa
pop
mov
je
mov
fiaddl
movsb
jecxz
leave
fscale
test
add
jb
or
cvtpi2ps
pop
popf
mov
and
mov
adc
push
xor
sbbb
hlt
dec
out
loop
popf
rcll
aad
mov
shlb
mov
cmpsl
iret
push
adc
movsl
push
in
jnp
aas
push
xor
mov
xchg
push
pop
ja
gs
fmull
mov
das
mov
push
test
sbb
lcall
xor
out
imul
sub
lcall
inc
mov
sbb
pushf
jb
repz
push
pop
fidivl
sbb
push
mov
sub
push
jmp
cli
int3
push
popl
jmp
xor
push
xchg
subb
nop
bound
jmp
jns
stos
out
lret
cmp
hlt
push
mov
out
div
sbb
or
xchg
int3
loop
pop
mov
sbb
popf
je
movsb
sbb
fcmovu
jb
decb
mov
vcvtps2pd
push
loope
rclb
and
xchg
imul
imul
in
fisttpl
lahf
mov
js
lods
popf
call
mov
jae
push
ds
add
mov
pushf
data16
xchg
jo
cmp
pop
sahf
lahf
inc
repz
mov
mov
mov
clc
lret
mov
mov
aam
mov
stos
xchg
outsb
faddl
inc
rorb
iret
mov
add
mov
or
mov
pop
xor
push
les
aad
out
mov
or
cmpl
popa
or
push
sti
sub
push
push
lods
lret
pop
xor
mov
cwtl
negl
movsl
mov
lods
cmp
xchg
loope
or
sub
cmpsb
rorl
cmp
jge
int3
inc
iret
and
test
fmul
dec
or
inc
call
leave
inc
or
push
jb
dec
sbb
stos
idivb
xchg
push
out
fistps
lock
hlt
fldcw
sbb
lret
xchg
dec
mov
call
mov
inc
fsubl
insl
cld
das
mov
addr16
bound
xchg
or
push
add
fwait
jle
clc
ja
fcoml
cmp
cltd
lahf
sysret
mov
xchg
stos
leave
mov
add
leave
jge
in
ljmp
sub
pop
aas
pop
fsubl
jb
xor
stc
jl
sbb
jl
out
int
sub
ret
loope
sbb
in
leave
inc
jp
in
leave
test
aam
inc
add
repz
mov
add
fwait
push
ds
out
dec
add
xchg
bnd
nop
adc
dec
pop
sub
dec
xor
fs
outsb
jns
in
loope
test
adc
xor
pop
mov
aam
addr16
cltd
jae
inc
fsubl
popa
fists
js
imulb
lods
dec
popf
lahf
cmp
lock
or
call
in
cld
mov
das
dec
fisttpll
loop
add
add
fwait
out
std
jo
dec
add
and
int
shr
call
inc
jnp
sub
enter
mov
imul
hlt
push
imul
push
insb
stos
lds
mov
aas
popl
roll
cmp
xor
shlb
ja
mov
or
cli
aas
sbb
mov
mov
notb
jg
inc
adc
sub
inc
add
mov
dec
mov
pop
out
mulb
sahf
adc
mov
xchg
pop
or
daa
cltd
lea
hlt
popf
adc
scas
xchg
xor
xchg
mov
mov
or
pop
pop
jg
aas
mov
in
mov
xchg
jmp
dec
cmc
leave
mov
sub
cmp
movl
mov
mov
clc
aam
sub
adc
xorb
pop
sti
add
push
or
jg
or
mov
inc
lahf
adc
xor
test
iret
or
push
cs
flds
push
lods
mov
fs
das
daa
repz
push
ds
and
rorl
mov
mov
dec
and
test
mov
adc
aas
xor
push
jl
cli
or
cmp
pop
push
pop
mov
add
mov
cmp
mov
push
cwtl
in
daa
into
mov
xor
repz
sub
cmp
jnp
data16
loop
insb
jno
and
test
cli
ret
arpl
and
dec
jecxz
cmc
into
stos
in
shlb
fwait
pop
out
inc
xor
mov
nop
xchg
ss
popa
xchg
in
out
or
daa
pop
fdecstp
and
in
addb
mov
jnp
out
fucom
mov
jle
ja
enter
mov
adc
sub
jl
cmc
sbb
cwtl
dec
cmp
nop
pop
test
or
sbb
repnz
das
add
adc
jne
add
cmc
inc
xor
fsub
jg
xor
call
out
das
repz
aas
pusha
pusha
or
ljmp
imul
dec
leave
inc
mov
inc
adcb
sub
inc
loopne
aaa
or
orl
icebp
movswl
xchg
movsl
mov
inc
add
je
mov
inc
in
sub
es
dec
fbstp
cmp
imul
pop
mov
test
movsb
stc
in
in
repz
fiadds
cmpsb
in
loopne
cmp
xor
lock
inc
jecxz
testl
or
jbe
cmp
and
adc
aas
ficomps
sub
mov
cmp
push
xor
add
xor
jbe
stc
sbb
ror
adc
mov
sbb
xchg
push
mov
dec
popf
notl
sbb
pop
dec
pop
cltd
dec
mov
enter
shlb
or
xchg
lea
test
cmp
cmp
das
loop
xor
jb
sarl
adc
aaa
xor
xchg
mov
insb
loopne
adc
or
adc
and
iret
dec
fwait
loope
dec
fneni(8087
int3
mov
and
pop
cmpb
and
addl
lcall
and
cmp
scas
inc
jmp
dec
pushf
lcall
sbb
lret
popf
adc
cmpl
jne
pop
orl
add
dec
pop
lahf
or
pop
sbb
frstor
and
mov
rcl
hlt
repnz
push
pop
icebp
arpl
out
insb
movsl
inc
insb
sub
shll
xor
cld
adc
push
data16
xchg
mov
ss
sbb
cmpsl
push
dec
enter
xor
jnp
cmp
adc
or
sarb
adc
je
stos
push
inc
fistps
add
and
adc
cmp
loop
aad
mov
mov
push
mov
or
movsl
gs
imul
dec
adc
and
and
xor
aam
in
scas
push
insl
push
out
ret
cmp
or
addr16
arpl
mov
repz
add
lock
jnp
xchg
xchg
jle
stc
push
jmp
stos
sbb
lcall
sub
sub
in
fsubr
stos
xchg
mov
mov
loop
push
sbb
in
gs
scas
jecxz
mov
mov
pop
xchg
jmp
mov
mov
add
lods
xchg
mov
rcrb
call
xchg
shlb
or
jae
sbb
xlat
cwtl
jne
movsb
stc
or
inc
inc
or
aad
pop
push
sbb
loope
sti
or
repz
out
push
leave
lahf
dec
inc
add
mov
add
mov
dec
jg
int
les
add
incb
inc
fisubs
xchg
test
or
out
fs
add
inc
imul
dec
cmp
out
repz
sbb
rcrl
xchg
add
andl
daa
jmp
rcll
mov
mov
jnp
popf
bound
xor
adc
jno
loopne
cwtl
sub
movsb
sti
cli
mov
dec
mov
pop
jb
icebp
adcl
icebp
cmp
sar
aad
hlt
faddp
out
mov
mov
jno
sbb
pop
or
xchg
or
in
xchg
sbb
jle
pop
xchg
lahf
mov
or
inc
mov
in
gs
add
orb
push
mov
jae
sti
inc
mov
repnz
push
lock
rcll
mov
and
stos
adc
test
push
in
jecxz
sub
or
stos
push
fadd
cmc
push
cs
neg
xor
stos
lahf
inc
inc
test
and
xchg
mov
sub
or
enter
jb
pop
icebp
rcrl
xchg
cltd
test
jbe
daa
mov
ja
dec
cmpl
icebp
outsb
adc
pop
sbb
sti
out
cmpsb
fwait
call
adc
out
push
pop
cmpsl
mov
cmp
flds
jge
ds
mov
icebp
mov
inc
xchg
cwtl
or
xchg
or
xor
ret
sbb
add
mov
sbb
js
shrb
mov
ss
xchg
mov
push
adc
mov
add
adc
inc
push
push
shlb
push
push
pop
cmp
mov
outsb
lea
mov
pop
and
pop
inc
xorl
sbb
or
push
cmpsl
sub
jo
mov
jmp
xor
ljmp
xchg
cmp
sbb
and
sbb
stc
mov
orb
inc
jae
xor
cmpsb
stos
and
shlb
enter
and
mov
inc
arpl
push
mov
or
jl
adc
mov
xlat
jl
out
fimuls
jno
cld
sub
repz
out
je
hlt
popf
pop
stc
cmp
xor
movsb
test
add
xchg
mov
push
mov
into
nop
cmp
aam
push
into
xchg
dec
in
jle
and
roll
jno
xor
fistpll
stos
sub
imul
mov
dec
in
clc
enter
add
loope
mov
cmp
sub
sub
repnz
out
xchg
pop
pop
inc
sub
test
orl
cmpl
in
mov
sbb
out
movsl
js
mov
push
cli
xlat
pop
push
nop
enter
les
scas
repz
sub
push
lcall
jmp
int
aam
inc
sbb
adc
push
add
insl
arpl
hlt
imul
daa
sti
ja
mov
notl
xor
pop
xor
jge
cmp
je
sub
ret
call
mov
mov
imul
hlt
pop
cld
pop
shll
std
test
adc
mov
std
xchg
push
fadds
jo
xor
rcr
sarb
loopne
sub
push
and
dec
xor
inc
push
mov
stc
daa
aaa
cmpsl
out
aas
dec
pusha
ljmp
adc
mov
fisubs
adc
lcall
fldl
lods
dec
ret
sub
dec
adc
xchg
push
inc
push
out
roll
and
pop
pop
jg
repnz
rcll
ljmp
mov
lock
bound
cmp
jmp
xchg
mov
xor
inc
lea
test
lods
push
movsb
dec
add
pop
arpl
ss
lahf
add
mov
cli
popf
mov
pop
stc
jle
mov
fwait
or
cld
mov
and
sahf
mov
stos
adc
push
aaa
add
fwait
insb
mov
arpl
cmpsb
outsl
xchg
xor
loope
mov
and
xlat
je
mov
mov
pop
xchg
popf
shl
hlt
xor
push
clc
cmp
mov
sub
push
pop
fstl
lret
mov
aam
jbe
into
movb
mov
dec
enter
cs
and
xchg
iret
or
enter
gs
sahf
out
pop
fildll
xchg
cmovb
ret
pop
mov
push
sbb
mov
lcall
mov
nop
or
imul
aaa
lret
aam
cmpsl
lcall
adc
adc
fst
jnp
lea
add
jb
lret
call
flds
leave
push
lahf
dec
cmpsb
push
fstpl
testb
jne
dec
pop
subl
repnz
cs
out
dec
out
hlt
push
and
es
inc
pop
xchg
sbb
fwait
dec
fsubrs
in
mov
insb
ret
pusha
insl
and
cmpl
in
dec
cmp
subl
lcall
jmp
test
xor
adc
xor
mov
mov
rclb
mov
adc
and
sbb
out
fs
sbb
std
inc
sub
fwait
lret
les
into
mov
and
cmc
add
inc
lods
pop
push
pop
lods
ds
loopne
add
jb
pop
cltd
inc
idivb
pop
jns
test
push
mov
adc
sbb
iret
cmpsb
int3
mov
inc
inc
into
out
into
ss
adc
mov
sub
jle
cmp
adc
fs
daa
inc
push
or
out
cld
and
insl
xchg
pop
int
mov
scas
xchg
cmp
mov
inc
pmulhw
out
ficomps
mov
jo
mov
dec
inc
fwait
xlat
pop
adc
int
ret
inc
xchg
mov
cmp
scas
push
pusha
xor
sub
enter
das
jnp
sub
pop
stos
jns
nop
pop
js
lds
jno
inc
cmp
cmc
in
out
repz
xchg
lret
cmpsb
pushf
jp
adc
clc
mov
push
mov
ret
mov
pop
mov
rolb
inc
lods
adcb
pop
out
repz
loopne
xor
gs
pop
ret
push
mov
push
or
pusha
jbe
lret
arpl
ljmp
orb
data16
imul
loop
in
jns
adc
push
xor
jmp
int
adc
clc
cld
in
mov
test
xchg
jo
out
nop
stos
sbb
fstps
cld
stos
gs
rcrl
jecxz
xchg
dec
loopne
xchg
dec
cmc
and
xor
inc
int
pusha
or
jns
jp
adc
mov
cmp
aaa
out
pushf
push
inc
push
shll
mov
aaa
fwait
pop
inc
outsl
xor
mov
fwait
sub
jne
imul
stos
repz
sub
mov
xor
pop
popf
sti
mov
add
jne
fwait
jge
sbb
xor
arpl
loope
pop
aad
mov
mov
sbb
pushl
jp
or
insl
lret
inc
add
dec
fmull
outsb
mov
sbb
mov
int3
fwait
adc
fwait
push
jbe
push
or
pop
sub
lds
mov
andb
cwtl
lahf
int3
pop
jp
loop
mov
aaa
push
mov
xchg
mov
pop
movsl
push
test
test
pop
out
cltd
mov
add
test
lea
xchg
popa
mov
fsubrl
pop
pushf
mov
mov
xchg
pop
int
cwtl
mov
lods
adc
jmp
and
jno
daa
out
aaa
push
mov
in
xlat
push
pop
aad
cmpsb
pop
cld
ret
sti
mov
daa
fldt
mov
std
out
fmuls
imul
insl
test
or
or
mov
cwtl
mov
or
push
pop
stc
or
nop
fdivrs
or
sbb
loopne
lahf
loope
and
popa
inc
js
fildl
aam
lock
clc
inc
rcrb
and
push
xchg
arpl
int3
out
data16
or
sbb
adc
js
push
mov
std
mov
cmpb
repz
adc
mov
rorb
pop
dec
mov
lea
test
jo
jp
inc
movsl
stos
dec
jg
testl
inc
gs
push
inc
sbb
mov
adc
sarl
inc
mov
imul
dec
icebp
js
fwait
xorb
rolb
sbb
xchg
movsb
shl
inc
gs
cmova
mulb
mov
ret
aam
push
inc
sub
cmc
cli
movsl
jbe
mov
inc
nop
jg
enter
cmovge
pop
and
fs
jcxz
inc
and
loop
sbb
jb
cmp
cmp
lcall
cltd
and
lds
dec
dec
mov
out
addr16
push
sbb
sbb
inc
sbb
xchg
cld
jmp
xor
xchg
sub
repnz
jecxz
pop
sahf
push
repnz
dec
push
jae
mov
cwtl
clc
xor
mov
mov
adcl
inc
cmp
stc
rcrl
adc
pop
shl
rcll
pop
popf
dec
mov
int
sahf
sub
repz
jmp
test
lret
lods
fimuls
popa
jge
adc
add
jb
loop
movsl
outsb
mov
ret
mov
cmp
in
cmpb
test
loop
loope
aaa
jns
cltd
dec
xor
mov
adc
cwtl
call
rcrb
adc
jb
jg
stos
lahf
test
inc
fistpll
cwtl
popa
shlb
jle
dec
push
test
xchg
cwtl
pop
fwait
gs
jmp
cmpsl
mov
repnz
push
adc
add
test
and
lods
cmp
sbb
jmp
dec
in
adc
test
fnstsw
int
icebp
sbb
add
pushf
jl
mov
inc
push
rolb
aaa
in
scas
xchg
pop
andb
out
lea
xor
xor
imul
pop
mov
fldenv
dec
out
sbb
hlt
sbb
pop
imul
ljmp
or
int
sarb
add
call
pop
in
data16
pop
ss
sub
mov
or
sahf
inc
or
jo
pop
je
push
fnstsw
cltd
adc
in
iret
scas
dec
in
icebp
std
mov
dec
sub
movsl
fiaddl
jnp
lds
movsb
es
pop
add
adc
jns
add
pop
sbb
cmc
lret
int3
dec
ret
push
fadds
incb
cmp
mov
jmp
add
xor
mov
sahf
fcompl
ret
cltd
movsl
mov
pop
adc
mov
add
pop
xchg
cmpsb
mov
repnz
mov
inc
push
inc
ss
cli
push
js
mov
mov
inc
shlb
movsl
and
int
pop
or
int
mov
inc
xor
lds
sub
push
mov
subl
and
divl
icebp
leave
sub
cmp
xchg
and
in
inc
sbb
mov
popf
dec
mov
jno
xor
xchg
mov
sub
xchg
addr16
lock
lods
xchg
sbb
cltd
add
xor
dec
cmpsb
jnp,pn
jl
push
sub
jns
sbb
push
mov
fstps
call
scas
push
test
jmp
stos
popf
sti
mov
mov
adc
out
xor
ret
loopne
mov
shll
lret
stos
bound
or
outsl
shl
test
mov
jb
imul
aaa
or
mov
mov
xor
adc
ljmp
or
pop
and
xor
lock
call
std
cltd
push
dec
lods
or
je
mov
mov
mov
movsl
cmp
jnp
aam
xor
push
lahf
adc
bound
mov
imul
push
mov
xchg
pop
xchg
and
testb
loopne
cmp
mov
dec
stos
mov
int
scas
push
jae
xchg
addr16
inc
stc
add
mov
xor
inc
sti
adc
xchg
xor
jo
pop
jae
lret
and
into
testb
inc
mov
sub
push
push
inc
mov
sbb
xchg
push
dec
mov
dec
adcl
jae
test
mov
sub
pop
cli
dec
nop
inc
and
clc
add
dec
cli
out
cmp
fcoml
dec
iret
scas
test
sbb
xor
push
xor
xor
jnp
sub
or
jmp
test
outsb
loopne
mov
data16
sbb
mov
pop
and
pushf
ljmp
out
outsb
repz
xchg
jmp
jl
jg
and
inc
andb
add
bound
ret
std
mov
push
lea
test
cmp
mov
jne
inc
jno
fisubrs
cmpps
mov
jno
lods
add
push
or
push
adcb
mov
das
inc
or
sub
mov
fnstenv
sbb
enter
stos
lret
mov
mov
or
cmp
mov
in
push
bound
jne,pn
int
iret
cld
or
and
push
lahf
add
sti
add
adc
dec
pop
xchg
pop
repz
scas
cmp
dec
xor
sti
out
xchg
push
lock
repz
stos
cltd
ljmp
pop
bnd
xchg
faddl
xorl
and
repz
hlt
aas
out
out
or
or
pop
mov
lahf
fimuls
xor
jp
icebp
push
xor
mov
mov
test
rol
or
lret
add
cld
pop
fwait
out
sub
push
push
mov
dec
pusha
lcall
inc
jo
shrl
or
and
jl
mov
sub
xchg
pushf
cld
pop
mov
dec
push
mov
sbb
ss
insb
xchg
mov
cmp
sti
cmpsb
add
out
add
mov
xor
dec
xchg
arpl
jns
push
xchg
mov
stos
pop
push
daa
mov
loope
andl
dec
sbb
arpl
xlat
hlt
cmp
and
and
mov
jp
sahf
pop
imul
jbe
orb
fiadds
or
jg
aaa
leave
xchg
inc
test
pop
loope
mov
jnp
or
sbb
sbb
push
jle
insl
push
popa
pop
data16
cmp
gs
adc
jo
sub
sbb
mov
dec
xlat
lcall
xchg
adc
gs
lcall
mov
inc
fwait
out
fs
icebp
stos
xor
add
insb
sbb
mov
outsb
pushf
and
jge
cmove
mov
lods
push
and
mov
jns
fistpl
testl
pop
jp
and
mov
popa
xlat
stc
rcr
test
ss
push
adc
sbb
fadd
nop
sub
cli
or
jp
stc
inc
cmp
jmp
adc
jno
sbb
fstps
jg
lret
xchg
cltd
xor
sub
out
mov
xor
lods
hlt
nop
leave
dec
ret
fidivs
divb
out
movsb
into
fildll
fwait
aam
idivb
cmp
int3
mov
lahf
cwtl
xchg
push
xchg
jle
cwtl
repnz
outsb
jl
inc
mulb
sahf
xor
mov
xchg
dec
loopne
xor
mov
pop
sub
es
sub
xor
jnp
stos
ss
xor
dec
sbb
jb
rcrl
xchg
aad
and
ret
push
xchg
out
xorb
imul
mov
xchg
fwait
insl
pop
leave
leave
js
mov
call
in
movsl
push
loop
cmpsb
mov
and
dec
push
pop
sub
sbb
lret
xchg
xor
mov
faddl
adcl
jbe
data16
jbe
cmp
mov
stc
repnz
ret
or
insl
pop
push
test
mov
cmp
inc
pop
test
popf
or
jmp
jb
int
jo
xchg
pop
out
or
adc
or
jg
daa
stos
aaa
or
mov
leave
mov
mov
xchg
adc
push
mov
or
xor
lcall
xchg
mov
int3
pushl
call
enter
addr16
cmp
test
xor
cmp
jbe
sahf
xlat
jo
xorb
and
sbb
push
ja
mov
ss
add
push
in
or
mov
lods
ja
out
sub
sbb
and
jge
inc
jae
aad
mov
jae
jmp
arpl
push
outsb
jge
gs
popf
jno
xchg
lds
inc
sub
outsl
cmp
ljmp
cltd
sbb
xchg
push
stos
cmp
mov
jecxz
inc
mov
insl
dec
shl
icebp
sbb
inc
fcoms
jl
jbe
sub
cmp
pop
push
xchg
repnz
sbb
dec
lods
jne
xchg
mov
mov
stos
jo
add
stc
lock
dec
xchg
xchg
jmp
mov
pop
faddl
and
sbbb
sbb
push
shlb
fld
pop
sub
mov
mov
je
test
mov
mov
jl
or
mov
mov
mov
adcb
dec
mov
jl
cs
inc
jmp
or
sbb
jmp
sbb
std
sahf
jb
addl
mov
rcrb
in
das
mov
das
lcall
xchg
enter
repz
out
jg
sub
out
mov
loopne
or
jecxz
xchg
sbb
aad
or
pop
push
ror
movb
mov
xchg
cmp
jo
or
mov
mov
xorl
ja
pushf
call
dec
mov
adc
pop
out
fwait
push
and
and
clc
mov
or
div
pop
cmp
movsb
imul
into
xchg
xor
popa
xor
xlat
and
add
and
std
or
mov
data16
repz
incl
dec
outsl
mov
xchg
cmp
mov
jo
test
iret
out
xlat
jl
push
xchg
mov
movsl
mov
dec
push
xor
subl
sahf
scas
jle
notb
xor
jne
jb
addr16
sub
imul
dec
hlt
sti
xchg
shlb
cmp
inc
push
xor
dec
jl
lock
mov
xchg
and
jno
fisubs
shlb
adc
adc
pop
cmp
fadds
pop
popa
shll
loopne
testb
popf
xchg
cmp
xor
stos
push
pop
and
nop
xor
push
setne
stos
mov
xor
cmp
test
fdivp
icebp
xor
int
mov
mov
roll
loopne
xchg
mov
mov
adc
sbbl
orb
cmp
xchg
scas
mov
fldenv
stc
out
jae
xchg
movsb
cltd
adc
sti
test
inc
fiadds
sti
sbbl
xlat
sbb
xchg
jle
or
lahf
test
stos
out
cmp
ret
inc
sbbb
ss
or
dec
jns
cmp
popa
ja
imul
addl
push
fidivrs
mov
rorl
lods
scas
ret
shlb
or
ret
aad
lret
mov
lock
push
jg
inc
sar
lea
into
loope
push
xchg
pop
jmp
mov
pop
int3
mov
inc
sub
jg
cmp
adc
add
xor
adc
fistpl
repnz
repz
scas
pop
lea
divl
and
fsts
clc
roll
cmp
icebp
daa
sti
mov
cmp
mov
pop
outsb
pop
jl
cmp
jo
fs
sbb
ds
mov
fidivrs
mov
mov
sub
mov
sub
jbe
stc
stos
pop
stos
adc
xor
cmp
cwtl
ret
fwait
push
cli
or
xchg
mov
jmp
push
scas
pop
and
fadd
jns
sbb
into
movsl
je
ficomps
ljmp
sub
xchg
mov
xor
and
lret
cs
insb
ds
push
push
dec
jge
xor
mov
cli
jae
xchg
xchg
or
mov
sub
cmp
mov
lret
int
sbb
dec
jle,pn
mov
ret
fcmovne
add
ss
int3
into
jle
out
or
icebp
dec
in
mov
cmp
mov
inc
and
jecxz
out
testb
inc
out
push
pop
add
jnp
iret
inc
mov
dec
push
pusha
mov
addr16
idivb
lret
aas
jno
inc
jo
or
mov
sbb
mov
int3
pushf
loopne
dec
jmp
cwtl
and
aas
daa
mov
lahf
jae
xchg
xchg
mov
scas
pop
pop
shrl
sbb
dec
mov
xchg
pop
xchg
pop
xchg
cmp
sub
sbb
mov
divb
or
popa
inc
adc
push
clc
adc
pop
lret
imul
lahf
jae
xchg
mov
jp
add
js
pushf
loopne
add
jecxz
fidivl
testb
or
or
mov
mov
xor
adc
sub
popa
adc
lahf
dec
cmpl
stc
nop
mov
test
bound
icebp
in
lea
add
sbb
mov
dec
dec
imul
mov
xor
and
xlat
dec
fwait
outsb
mov
dec
dec
mov
push
mov
cmpsb
ja
xchg
dec
cmp
gs
lods
inc
shlb
shlb
out
sub
mov
mov
xorl
rclb
adc
pop
pop
xchg
push
fstpl
iret
sub
gs
pop
pusha
popf
add
add
inc
rol
adc
data16
in
shl
and
mov
jns
mov
inc
pop
push
dec
aas
es
inc
mov
shll
adc
jle
push
fnclex
js
hlt
lea
push
inc
and
scas
sub
jmp
bound
pushf
mov
inc
jb
icebp
xchg
mov
enter
xor
cmp
idivl
sbb
enter
push
pop
mov
pmaxub
jecxz
pop
pop
jo
or
mov
test
or
inc
bound
lods
movsb
lahf
aam
or
stos
mov
pop
test
mov
pop
mov
pop
xchg
push
icebp
mov
pop
fistpl
inc
cs
mov
lahf
mov
incl
and
add
in
jl
popa
jg
xor
hlt
ds
nop
fmuls
lcall
mov
cli
cs
mov
xlat
dec
out
insl
mov
add
inc
pop
adc
fists
rcl
aam
icebp
enter
mov
sbb
mov
aad
adc
jg
incb
out
push
add
cs
pop
fnstcw
mov
push
jmp
filds
inc
hlt
imul
inc
cmpsl
xor
iret
dec
lea
xor
jnp
stos
sub
xchg
jge
sub
mov
popf
dec
shlb
xchg
pop
divb
data16
mov
mov
mov
out
pop
xor
loop
push
dec
xor
lea
repz
imul
rcr
sbb
and
sbb
cli
int3
jnp
daa
and
dec
popa
cmp
rcrb
lret
pop
add
lods
ret
nop
pop
sub
test
adc
clc
mov
sbb
or
mov
fsubl
xor
dec
test
mov
scas
dec
test
mov
lcall
xor
shlb
pop
stos
int
les
push
ret
xor
sbb
dec
sbb
jle
in
cmc
fiadds
jmp
scas
ficoms
shrl
inc
addr16
add
mov
out
mov
ret
xor
ret
jecxz
insl
sbb
add
fnstenv
jp
dec
sbb
stos
lods
fbstp
sarb
fwait
xchg
lea
cmpsb
subb
out
mov
jbe
push
cmp
add
roll
xchg
adc
xchg
pop
out
cmp
adcb
inc
dec
into
mov
mov
sub
lods
lahf
cmpsl
push
fwait
insb
adc
inc
leave
add
subb
jo
jp
sbb
mov
dec
cmp
adc
cmp
add
sub
add
pop
bound
push
jg
shrl
push
out
repnz
bound
push
jnp
mov
enter
ret
mov
sub
mov
data16
sbb
and
pop
int
nop
rcl
inc
idivb
pop
sti
lods
dec
loopne
jp
mov
mov
insb
mov
lcall
fldenv
insl
adc
cmp
adc
xchg
mov
push
shrb
in
pop
leave
repz
jno
xchg
and
pop
aad
mov
std
adc
pop
xor
cs
add
inc
cmc
and
addr16
mov
pop
pop
dec
mov
and
lea
cmp
add
in
sub
cmp
lret
shll
xchg
lock
fwait
loope
inc
test
sbb
lea
dec
lods
cmp
inc
nop
xor
mov
xor
add
aaa
dec
or
push
lret
push
mov
jae
imul
sub
mov
mov
mov
int
pop
dec
xchg
mov
clc
loop
int3
lock
mov
pop
mov
fistpl
dec
repz
ja
iret
sti
xor
test
cmc
push
sub
sub
fidivs
lock
pop
loop
inc
or
sub
pop
movsb
push
rorb
cltd
mov
and
lcall
mov
xlat
fucomp
mov
mov
adc
cmp
lcall
outsb
jmp
gs
xchg
lock
loopne
xchg
aas
pop
ss
xchg
lcall
ret
cmp
adcl
fld
jbe
jnp
pop
and
lret
movsb
daa
adc
adc
push
sub
sub
scas
scas
pop
test
lret
lret
jle
adc
movl
inc
loope
ja
je
test
repz
jle
repnz
fidivrs
dec
sbb
pop
jg
imul
push
int
pop
pop
in
mov
jae
shl
notb
jns
adc
je
jbe
out
jecxz
shrb
sbb
sbb
or
ljmp
mov
test
out
sbb
push
push
lods
dec
mov
icebp
mov
or
and
inc
in
push
push
add
xchg
sbb
mov
mov
adc
pop
mov
xorl
mov
push
out
xchg
xchg
frstor
adc
push
sub
test
faddl
out
add
jp
pusha
cli
or
ja
nop
div
push
in
dec
cmp
mov
inc
fs
dec
icebp
inc
daa
lods
inc
jae
hlt
stos
mov
mov
popf
dec
out
stos
incl
pop
sub
ficomps
adc
negb
cmp
icebp
out
fwait
xor
adc
mov
jo
movsb
and
outsb
std
fisttps
and
mov
fdivrl
sahf
pushf
fiaddl
sub
js
lret
mul
jecxz
insb
ffreep
mull
sub
nop
sbb
daa
mov
insl
js
sbb
jmp
out
jo
inc
jmp
stc
push
loopne
out
cmc
push
insl
aaa
mov
rcrl
fwait
cmp
xchg
push
js
js
fidivrs
pop
pop
ret
addr16
jle
lds
cmp
mov
dec
jecxz
sbb
sbb
mov
cs
mov
push
test
idivl
pop
mov
push
addb
hlt
jae
lcall
out
test
inc
and
xor
push
lods
leave
daa
push
ljmp
loopne
popf
or
mov
sub
loope
push
les
push
stc
mov
add
mov
lods
pop
je
xchg
xor
inc
in
fwait
pop
push
aas
jne
ret
jp
pop
arpl
mov
xor
sbb
pop
inc
rcrb
xchg
xor
pop
test
icebp
dec
xchg
pop
aad
pusha
xchg
xchg
popf
int3
sbb
cmc
repnz
sarb
jge
jbe
in
subl
loopne
iret
mov
aad
inc
and
or
push
pop
sbb
and
iret
push
dec
in
mov
adcl
adc
cmp
sbb
xchg
divb
push
mov
dec
push
cmc
mov
jne
mov
js
mov
mov
xchg
fsubrl
push
cmpsb
or
movsb
cmp
jo
rcrl
pop
subl
fmull
stos
xor
imul
pop
fcomps
out
jle
push
repz
push
mov
push
xor
into
sub
cmp
into
ja
mov
sahf
mov
cld
xchg
cld
mov
mov
mov
jmp
test
add
shrb
sub
rorl
mov
daa
mov
scas
or
mov
jne
rorb
aam
dec
aam
inc
dec
in
lret
jbe
jae
sbb
lds
jmp
adc
and
pushf
popf
or
jge
push
lcall
insb
lret
jmp
stc
cmp
rolb
out
xchg
stos
popf
lcall
movsb
stos
or
push
jl
xor
pop
cmc
xchg
jno
loopne
cld
test
je
imul
test
mov
add
leave
inc
mov
add
and
lds
cli
mov
ret
push
out
cwtl
jmp
cltd
jns
mov
inc
fcmovbe
aas
xorb
inc
sbb
cli
dec
mov
movsl
xchg
fst
cmc
mov
push
popa
lahf
outsb
dec
test
xor
mov
push
dec
ret
xchg
mov
mov
xchg
rolb
jno
inc
push
outsb
add
pop
mov
pop
push
roll
sbb
nop
dec
xor
fisttpl
xchg
cld
jns
lcall
xchg
orl
cltd
xorl
jg
adc
push
dec
sbb
out
mov
jno
cmp
cmova
adc
clc
mov
mov
aad
scas
or
lea
or
mov
sbb
and
dec
pop
dec
mov
addr16
sub
jecxz
jp
icebp
sarl
sahf
mov
test
daa
sbbl
pop
cwtl
fisubrs
push
push
je
inc
in
cld
dec
dec
scas
push
jo
and
xor
lods
inc
cmp
sub
stos
add
adc
ljmp
mov
insl
xor
cs
push
mov
pop
sub
int3
gs
repz
popa
loope
sub
sbb
xchg
inc
jns
scas
and
out
pop
lret
add
inc
in
pop
jp
fldenv
pop
sahf
add
stc
orl
test
out
gs
lds
rcrl
scas
icebp
push
pop
out
and
dec
or
mov
xor
pop
mov
loopne
mov
gs
inc
lock
sub
mov
adc
xor
mov
pop
jmp
mov
pminub
mov
cmp
repnz
push
pop
arpl
xlat
in
push
push
jp
mov
cli
jge
and
sbb
data16
mov
xchg
fsubrl
cs
pop
stc
pop
mov
rcll
mov
cmp
sbb
outsl
das
jns
jns
dec
xchg
lcall
outsb
divb
sbb
data16
adc
std
adc
mov
push
push
cmpsl
outsb
gs
ss
or
or
cmp
fisttpll
pop
xchg
aad
mov
sbbl
pop
je
xchg
mov
outsb
loopne
xchg
sub
cmp
dec
xchg
pop
pop
pop
xchg
xchg
mov
aad
sub
daa
pop
dec
jg
adc
add
push
mov
addr16
cli
mov
mov
cmp
or
loopne
cmp
sar
daa
data16
sbb
movsl
mov
in
repnz
popa
call
data16
mov
and
jbe
dec
lss
mov
mov
popf
dec
xor
add
mov
sbb
xor
add
xchg
push
dec
xchg
xchg
mov
mov
xchg
std
int3
daa
pop
shll
fcmovnu
sti
xor
inc
xchg
add
jp
inc
bound
sbb
fiadds
mull
inc
mov
lcall
push
jmp
sbb
inc
dec
sbb
xor
jnp
cmc
xor
ljmp
mov
and
dec
inc
lods
data16
lea
cltd
jbe
outsl
wbinvd
xor
test
inc
inc
adc
cmp
mov
pushl
data16
sub
push
mov
jp
scas
aam
adc
inc
jne
pop
cmp
add
rcr
enter
js
lods
psrlq
and
push
adc
push
mov
cmp
add
and
jb
ds
mov
fmul
ret
push
mov
cmc
inc
and
push
loopne
leave
cld
and
pop
cmpsb
jae
andb
xchg
rol
mov
les
xchg
push
idivl
cmp
mov
mov
cli
cmp
loope
lods
ss
sub
sbb
sub
insl
insb
aad
lea
or
push
xchg
mov
mov
mov
or
lret
jno
dec
push
insb
nop
xchg
inc
int3
test
in
imul
in
xchg
push
in
popf
lods
cmp
inc
fildl
sbb
pop
pop
jecxz
nop
push
std
add
mov
rorb
jg
cmc
xchg
fucomp
adc
mov
fcomps
inc
gs
or
imul
mov
push
push
scas
jns
sub
cld
jns
xchg
sbb
dec
cmc
cld
mov
cltd
jl
leave
jmp
test
in
mov
sub
ja
xchg
mov
cmp
pop
jne
fucomp
rcrl
repnz
lea
jle
cmp
ja
iret
sub
ficompl
ds
pop
cmp
sbb
pop
xchg
sbb
mov
aas
stc
ficoms
les
rcl
xchg
pop
jg
notl
cmp
jle
pop
das
mov
fs
cmp
lahf
or
cli
or
jle
fsubr
add
cmpl
shll
stos
aas
mov
sub
adc
imull
xchg
xchg
mov
mov
push
in
xchg
mov
xchg
xor
out
shrb
sub
pop
sbb
movsl
lret
andl
enter
push
and
dec
in
dec
jecxz
xor
negl
and
jp
data16
cmp
in
dec
dec
in
fildll
js
xchg
add
daa
loopne
pop
or
mov
ss
stos
adc
lret
cmp
lds
dec
mov
or
adc
out
adc
xchg
cwtl
fsts
out
or
sarl
test
ficoms
insb
pop
shll
xchg
xchg
xchg
pop
mov
data16
jl
push
mov
mov
pop
and
adc
mov
test
into
adc
jge
test
sbb
shlb
fdivl
lret
aaa
daa
rclb
pop
pop
xchg
dec
dec
cli
cmp
nop
imul
clc
mov
mov
movsl
pop
nop
push
rorl
mov
pop
pushf
andb
jg
lds
and
add
pop
inc
or
xlat
lret
xchg
sarl
shll
ja
mov
popf
cmp
incb
push
and
sbb
jecxz
pop
lahf
dec
cmc
adc
pop
pop
jne
std
bound
push
lea
push
and
mov
push
data16
mov
inc
dec
xchg
and
fs
ror
jmp
dec
addl
and
xor
add
loope
mov
test
dec
cmp
shlb
fcomps
rol
jp
push
lcall
jle
mov
arpl
adc
and
test
inc
nop
repz
sbb
jo
jnp
loope
in
clc
bound
rcl
push
and
adc
lds
das
fimuls
ret
pop
add
add
jmp
in
imul
shlb
sbbb
dec
add
fs
lea
cs
jge
inc
sub
test
popa
mov
hlt
cmp
mov
negb
xchg
std
mov
push
hlt
stos
inc
inc
test
pop
ret
jne
and
imul
push
cmp
push
pop
repz
xor
inc
pop
enter
aas
insl
aam
outsb
xchg
ljmp
stc
jns
ss
ret
xchg
aaa
inc
loop
add
inc
mov
jbe
adc
imul
outsb
pop
sahf
fildl
xchg
shl
cmpsb
outsl
adc
aas
inc
cmp
cwtl
lea
loopne
data16
pushf
mov
lods
or
decb
xlat
imul
jnp
cmp
mov
aad
lcall
mov
cmp
iret
jmp
pop
loopne
add
lock
dec
mov
pop
aaa
negb
cmp
dec
adc
xor
rorb
xor
ljmp
sahf
ss
xchg
es
push
push
mov
decl
clc
aas
inc
jecxz
pushf
xor
cmpsl
inc
loopne
push
xor
mov
cmpsl
xchg
icebp
or
stos
dec
adc
jge
aaa
push
and
sbb
mov
sub
mov
adc
or
adc
sub
cmc
cmp
ljmp
lea
loopne
xchg
in
test
xchg
push
sbb
into
mov
mov
push
xchg
mov
imul
ss
mov
hlt
xor
iret
loopne
push
push
in
aam
in
sarb
xchg
mov
fistl
mov
in
mov
push
mov
cwtl
xchg
jbe
and
xlat
xchg
mov
movb
mov
and
outsl
insb
jae
movsb
and
and
fistpll
sub
cmp
stos
xchg
dec
mov
push
in
cltd
ficomps
cli
out
mov
stos
iret
mov
dec
sbb
popa
stc
mov
jecxz
lahf
mov
notl
fcomps
cmc
xchg
dec
sahf
shlb
mov
or
rolb
gs
outsb
adc
xchg
dec
lods
fldt
pop
popa
add
dec
stos
pop
ret
mov
cs
xchg
ret
leave
ljmp
fucomp
imul
add
push
cmc
cmp
inc
mov
out
sbb
sub
out
pop
shrb
es
test
pusha
sahf
add
faddl
loopne
ret
and
dec
cmp
and
mov
test
clc
add
inc
jb
ret
and
jne
jno
outsb
mov
movsl
mov
inc
mov
cwtl
aas
adcl
and
scas
mov
fcoml
xchg
ja
mov
mov
pop
ljmp
add
mov
inc
ret
loop
add
cmp
das
fildll
pop
mov
sub
inc
sbb
insl
push
pop
push
xchg
fbstp
pushf
arpl
repnz
nop
mov
sti
dec
mov
in
cmp
movl
insb
ljmp
add
insl
xchg
pop
cwtl
out
jno
lahf
push
xchg
int
outsl
pop
popf
das
aad
std
mov
jl
fildll
dec
int3
cmpsl
outsb
jno
stc
sub
sub
dec
push
andb
aas
sub
sbb
push
pop
jbe
ja
jns
in
inc
mov
in
scas
pop
xlat
lods
int
xor
mov
mov
movsb
roll
test
mov
in
cli
adc
iret
adc
shrl
xor
push
pop
add
stc
shll
lcall
pop
adc
xchg
xor
inc
ljmp
mov
dec
in
fisttps
mov
push
out
mov
lds
adc
dec
iret
imul
jne
arpl
lahf
les
dec
push
std
test
ds
jge
cmpb
xchg
or
add
fimull
hlt
lods
inc
push
movb
xchg
xor
cmp
xchg
dec
inc
sbb
aad
loope
hlt
xor
jne
mov
sar
lahf
gs
loopne
adc
loop
jno
test
jmp
pop
cmp
push
cs
xor
rcrl
cmpsb
std
movsl
mov
mov
dec
mov
cltd
inc
mov
clc
fs
sbb
aam
jae
stos
movsb
sub
iret
fcoml
or
popf
push
addr16
pop
cltd
dec
hlt
insl
dec
add
push
stos
lds
xchg
pop
scas
icebp
jo
push
dec
dec
jecxz
and
jno
jne
arpl
xor
rcrl
cli
shlb
fucomip
mov
mov
sub
sub
inc
or
test
xchg
mov
adc
stc
enter
test
dec
mov
jno
lea
bound
or
adc
push
lds
sub
pop
mov
aad
idivl
cwtl
mov
push
jg
pop
or
push
adc
leave
jp
lret
xchg
scas
es
in
push
xor
cmc
jo
lahf
testb
mov
movsb
pop
push
mov
add
dec
int
pusha
sbb
push
mov
xlat
pop
lcall
or
in
cmc
pusha
mov
call
inc
add
sub
or
sub
pusha
inc
jecxz
in
xchg
enter
inc
xor
mov
or
cmp
in
xor
xchg
jo
jnp
pop
xchg
add
les
dec
xchg
mov
cmp
cwtl
ljmp
int
sbbb
out
xor
jg
enter
popf
pop
nop
jecxz
inc
pop
call
stc
mov
push
adc
arpl
ficomps
and
movsl
xor
cltd
mov
enter
fmul
iret
nop
inc
lods
xchg
sti
ljmp
testb
dec
outsl
aaa
pop
leave
data16
lahf
or
dec
pop
cli
arpl
xor
aaa
out
push
jbe
outsb
and
movaps
or
xorl
test
xchg
add
and
jp
xchg
xchg
repz
cmp
xchg
pop
push
xor
adc
push
mov
lret
sub
int
pop
popf
and
movsl
insb
xchg
xor
orb
mov
push
fwait
lock
dec
and
pop
sub
int3
cld
fldcw
fsts
jmp
and
add
std
repz
in
in
adc
into
shll
lock
jb
inc
push
jl
xchg
arpl
mov
dec
jns
das
fsubl
cmp
mov
jg
clc
sbb
dec
sbb
aas
sub
fwait
xchg
ljmp
mov
adc
outsb
lds
mov
dec
pop
mov
test
cld
cld
hlt
dec
push
or
aaa
fimuls
jg
mov
xor
cmp
jge
push
lods
or
ljmp
pop
mov
push
cmp
jne
sbb
fidivs
out
lcall
in
ja
addr16
inc
add
xchg
or
sbb
outsl
adc
shr
ljmp
loopne
lahf
imul
cwtl
sbb
and
mov
ljmp
stc
xor
pop
insl
adc
mov
loope
cli
bound
stc
stc
sub
lods
lds
testl
inc
push
movsb
sbbl
dec
push
aam
enter
lock
loopne
enter
aas
add
cli
sub
out
test
repnz
jecxz
inc
pop
jns
cmc
pusha
jp
inc
and
test
pop
loope
ja
test
fimuls
dec
inc
ljmp
stos
and
sahf
mov
push
lcall
scas
pushf
pop
clc
push
movsb
mov
cs
mul
es
aad
adc
pusha
xor
outsb
mov
add
fcomps
sbb
pop
dec
pop
jns
nop
sarb
cs
jne
jge
sub
mov
insl
or
xor
xchg
add
es
lock
into
leave
adc
push
push
movsl
push
imul
lahf
jecxz
lock
xor
shlb
pop
je
jp
lods
mov
fs
jo
das
push
cld
lods
sub
xchg
cli
jmp
cld
fbstp
or
xchg
cmp
sub
push
or
in
sahf
ljmp
inc
inc
ja
pop
mov
fs
testl
movsl
gs
sbb
and
cmp
mov
arpl
xor
lock
mov
movsl
xchg
xchg
loop
xchg
mov
test
mov
pop
aad
cmpsl
cmp
xchg
out
out
xchg
sub
rcll
hlt
sub
in
sti
and
adc
inc
clc
push
push
or
je
leave
inc
lock
mov
cmp
pushf
in
cmc
scas
inc
and
jno
add
leave
or
jecxz
xchg
or
repnz
sbb
aad
ret
xchg
xor
lods
out
sar
adc
rorb
call
fidivs
push
cmp
add
in
cmp
xchg
pushf
cmc
insl
cmc
lahf
ja
dec
addr16
sbb
aam
jmp
scas
ja
in
rolb
mov
repnz
std
add
scas
movsb
ljmp
xor
fwait
add
push
popf
jns
jle
or
bound
sub
add
cwtl
xchg
lcall
mov
inc
cmp
xchg
sub
cmpl
faddp
adc
pcmpeqb
loop
pop
jge
adc
stos
sbb
cwtl
lea
clc
mov
in
gs
fsubrs
rep
push
stc
aaa
or
mov
xchg
fwait
adc
xor
inc
xor
dec
in
imul
scas
sub
out
outsb
and
add
cltd
sbb
mov
xchg
xchg
in
jmp
xor
pusha
push
test
adc
fldt
inc
out
push
cwtl
or
xchg
imul
sub
sahf
popa
loopne
stos
cmpsb
pop
xchg
sbb
int3
int3
leave
jns
push
inc
fnsave
add
sahf
outsb
cmp
clc
fdivrl
mov
rcrl
sahf
repnz
pop
daa
pop
icebp
mov
cmp
aad
push
insb
xor
push
stos
inc
push
push
in
fs
mov
aas
dec
pop
into
testl
adc
cs
and
jge
jmp
jo
fnstenv
and
mov
test
cli
mov
mov
and
arpl
xchg
push
fidivrl
into
xchg
jno
nop
insb
cmpsb
add
dec
and
scas
fisubrl
std
insl
pop
shrb
cld
call
insl
aad
les
or
test
mov
data16
insl
mov
adc
outsb
add
push
int3
push
leave
aaa
and
sub
div
scas
adc
insl
fcomps
fdivrp
cmp
pop
lods
sub
arpl
in
jno
dec
je
das
shlb
or
pop
int
mov
push
mov
dec
lret
fmul
inc
dec
ljmp
sub
aaa
cmpsl
shll
roll
mov
out
pop
adc
sub
pop
insb
inc
push
ret
mov
enter
hlt
int
ljmp
scas
je
in
rorl
dec
hlt
clc
imul
scas
mov
jp
mov
popf
mov
inc
pop
xor
ds
in
or
arpl
add
lret
popl
cmpsb
nop
add
cmp
cwtl
subb
sub
dec
add
sarl
push
rolb
pushf
nop
adcl
jp
imul
mov
clc
rorb
ss
pushf
inc
iret
xor
or
in
ss
pusha
mov
sub
cmp
in
add
out
mov
call
js
pop
jns
mov
xchg
jae
adc
enter
xor
jb
lds
jns
jecxz
xor
adc
mov
fidivrs
pop
insb
xlat
aas
pusha
and
decb
cmp
sub
pop
inc
jg
sub
scas
sbb
testb
push
or
mov
loopne
leave
push
insb
xor
dec
jmp
jg
hlt
scas
pop
and
xor
jmp
mull
adc
jmp
movsl
inc
cmpsb
test
fcoms
xchg
mov
mov
sub
sub
mov
mov
mov
aaa
jb
pop
or
stc
cmp
push
inc
jnp
push
adc
lds
bound
jbe
leave
adc
cmp
je
pop
in
dec
fldcw
push
and
add
movsl
cmpsl
and
ljmp
ret
push
or
std
adc
iret
sahf
mov
cmpb
xchg
ficomps
outsb
cltd
cld
adc
sub
inc
mov
test
mov
and
mov
or
fmuls
sar
jb
mov
lea
pop
mov
pop
inc
xchg
pop
dec
push
pop
je
inc
xchg
sub
inc
inc
shrl
mov
adc
shrb
mov
jge
cmc
xlat
shufps
jg
xchg
push
fs
bound
jl
imulb
inc
stos
sbb
mov
and
in
xchg
cmp
xchg
inc
pop
mov
test
arpl
dec
rcl
pop
inc
jo
mov
shll
fiadds
mov
dec
out
dec
lods
bound
mov
cmp
stc
shlb
pop
inc
xchg
and
pop
cmp
dec
rcl
sub
push
outsb
shrl
jle
int
mov
icebp
sbb
jo
xor
pushf
aaa
ret
les
rorl
aad
sub
clc
fildll
add
out
inc
mov
sbb
les
fdivp
xchg
hlt
incl
xchg
mov
or
sti
or
add
out
adc
dec
and
jmp
cs
cmp
sbb
stos
push
cltd
jbe
pop
mov
ret
aam
ret
sub
or
cli
arpl
fisubrs
inc
scas
outsb
xor
add
leave
inc
cmp
popf
es
xlat
movsb
fimull
and
or
jnp
mov
in
inc
lahf
fs
mov
daa
loop
mov
xor
cmp
mov
cmp
outsl
cmp
jmp
callw
imul
jmp
stos
fcomps
mov
xchg
jne
jge
in
mov
subl
mov
sub
and
ja
push
fnstcw
lahf
mov
sub
filds
int
xor
movsb
mov
push
sarb
jge
int
and
and
cli
popf
add
dec
sub
fwait
pop
xlat
stc
and
int3
cmp
addr16
mov
mov
jg
icebp
dec
stos
popa
outsb
add
inc
push
pop
lcall
xchg
pop
jns
mov
fistpl
vmovhpd
push
dec
xchg
jns
sahf
mov
shll
les
pop
insl
shrl
jb
lret
pop
test
jl
sub
pop
repnz
adc
enter
push
movsb
cld
aad
arpl
outsb
push
sbb
shlb
clc
fimuls
xchg
xor
iret
mov
stos
pop
test
std
mov
dec
gs
mov
sti
fmull
test
mov
es
dec
stc
aas
xor
add
rcrl
lret
push
cmp
pop
mov
inc
leave
not
cmp
aam
out
andb
stos
mov
xlat
test
mov
add
fst
fdivrp
xor
arpl
in
mov
nop
push
mov
xchg
or
xchg
mov
imul
xchg
dec
mov
inc
ljmp
lods
push
hlt
out
in
fistps
sti
mov
clc
jge
xor
aad
xor
sub
mov
scas
push
xchg
sbb
sub
cmp
jns
or
lcall
mov
out
or
dec
push
popf
sub
punpckldq
push
fnstcw
adc
push
mov
mov
push
pusha
in
pop
jmp
faddl
mov
cmc
out
out
insb
xchg
std
pop
push
pop
adc
adc
push
add
add
mov
scas
xchg
mov
sub
fstpt
cmp
adc
imul
nop
in
loope
jae
fs
js
dec
imul
dec
insl
inc
xchg
push
mov
arpl
xlat
xor
push
nop
push
es
cmp
jbe
push
xchg
dec
jno
and
pop
pop
clc
rcll
popf
fisubrl
and
gs
in
out
sub
out
mov
mov
lea
test
in
mov
cmp
sub
xchg
fisubrl
mov
lock
cmp
xchg
enter
jae
jno
repz
out
mov
xor
loope
hlt
mov
xor
mov
pop
jnp
insl
and
shrl
xchg
aas
sub
mov
inc
sbb
pop
stc
jp
pop
aas
es
jno
popf
das
mov
xor
mov
cmp
cmp
out
lahf
add
pop
sub
mov
jmp
mov
mov
add
mov
mov
stos
je
adc
jb
ficompl
dec
xor
inc
mov
jne
mov
inc
pop
add
mov
xor
in
fwait
sbb
out
cmp
sar
fisubrs
int3
nop
and
fadds
fstpl
mov
rclb
shlb
jae
hlt
test
jp
or
xchg
sub
stos
iret
aam
insb
fucom
cli
rcr
iret
mov
movsl
add
xchg
addr16
cmp
insl
mov
jge
fiadds
inc
fistl
mov
in
sbb
add
cmp
fisubrs
nop
push
ret
cmpsb
cmp
cmc
push
pop
imul
and
jbe
cmpsb
mov
fistl
icebp
aaa
jbe
das
div
loop
mov
outsl
jecxz
pushf
in
push
mov
bound
and
shl
jp
scas
sub
sarl
mov
add
lahf
cmc
stos
mov
mov
repz
sbb
stos
mov
out
movsb
mull
mov
ljmp
sub
pop
mov
xor
pop
sbb
xchg
xchg
and
mov
int3
cmp
sbbl
sahf
pop
fcomp
push
mov
in
mov
inc
mov
jp
mov
ljmp
aaa
lds
push
sbb
push
sbb
xor
sbbl
xchg
push
lds
notl
repnz
inc
inc
or
sub
test
mov
jb
int
or
lock
push
cmp
dec
movsb
mov
adcb
imul
adc
lock
les
and
mov
pushf
mov
push
das
and
ret
test
jns
loop
inc
xchg
mov
js
dec
add
lock
fucomip
ljmp
shll
pop
imul
mov
mov
jg
hlt
mov
jno
xlat
dec
mov
xor
xorb
addb
rorl
or
push
jnp
stos
ss
imul
fidivl
test
jne
in
insb
cmpsl
and
pop
pushf
xchg
pop
std
adc
in
sarl
insb
data16
test
push
jo
iret
addr16
jge
xchg
lcall
test
add
mov
imul
fcomps
mov
xor
stc
pop
sbb
mov
cmpsl
cli
shlb
push
jl
in
inc
mov
or
ret
xor
pop
ja
js
daa
das
or
mov
xchg
int3
push
xor
inc
mov
mov
pop
add
push
xor
or
loope
fisttps
testb
aam
nop
jae
test
loope
lcall
das
sbb
push
orb
in
xlat
cmp
jae
dec
mov
push
int
pushl
stc
ret
fstps
in
gs
jbe
mov
lahf
or
cmp
pushf
add
sbb
push
add
addl
dec
sbb
sarb
xlat
xor
pop
pop
xorl
popa
lcall
pop
stos
dec
fs
mov
or
scas
push
stos
mov
inc
scas
cli
cmpsl
js
inc
mov
lea
pushf
xor
adc
fwait
fwait
sbb
lock
inc
imul
pop
mov
push
cmp
push
nop
daa
sub
mov
movsb
enter
cs
jne
dec
mov
jmp
mov
jae
popf
jle
shll
ret
xlat
xor
pusha
sbb
sub
and
cld
test
pop
push
fidivrl
scas
ret
cmp
cmc
jle
cmp
stc
jp
sub
cmc
cmovle
dec
mov
xor
and
roll
inc
dec
mov
sub
or
jl
xor
adc
cmpsb
push
les
mov
repnz
mov
sub
and
test
into
jae
pop
cmpsb
scas
arpl
bound
repnz
pop
clc
mov
or
loopne
addr16
fisubrl
out
sub
mov
jns
adc
lret
jnp
pop
pop
idivl
cs
inc
inc
pop
push
xor
cmp
test
inc
jmp
lea
loop
and
push
aaa
jl
lods
adc
repz
leave
mov
jge
push
xorl
mov
pop
cmp
lret
scas
mov
push
out
xor
push
mov
jmp
lods
repz
cmpsb
adc
not
xchg
dec
dec
cli
or
fldl
sbb
dec
mov
ret
mov
loope
pushf
adc
push
mov
inc
fwait
jge
popf
mull
into
xchg
flds
xchg
clc
mov
xchg
into
repz
jge
dec
lods
adc
std
xlat
push
cmp
loopew
inc
stos
orl
pop
jge
in
add
leave
xchg
and
cltd
mov
jge
rcrb
mov
push
dec
enter
adc
loopne
fs
call
or
fidivrl
xor
inc
mov
repnz
pusha
mov
xor
loope
pop
push
lds
scas
inc
jg
dec
jle
mov
sbb
sub
xchg
sahf
inc
xlat
xchg
mov
addr16
xor
dec
sbb
add
jbe
pextrw
pop
hlt
shl
dec
pop
ss
outsb
pop
aad
cmpsl
pusha
cmp
mov
mov
outsl
call
ljmp
push
aas
add
adc
sbb
in
pop
pop
lea
out
dec
aas
es
and
sub
repz
fdivrl
ljmp
out
jg
adc
push
in
sub
ja
call
ret
fistpl
scas
jnp
and
ret
xchg
xor
mov
lcall
fcomps
sahf
and
aas
mov
jbe
sbb
cwtl
mov
leave
lods
jo
xchg
xor
inc
loopne
xor
sar
insb
xor
ljmp
mov
push
dec
pop
jno
mov
sub
iret
sub
test
fstps
loopne
inc
notb
inc
js
kmovw
push
bound
mov
push
mov
gs
movsl
jecxz
lahf
cmp
sbb
inc
mov
lods
mov
repnz
mov
jmp
enter
es
sub
ljmp
xchg
clc
ja
push
out
aam
sti
daa
fiaddl
inc
imul
cmp
js
sub
cmp
mov
sbb
pop
test
xor
cmp
dec
cmc
xchg
enter
outsl
test
data16
adc
inc
shll
pop
lret
in
mov
pushf
push
jae
andb
sub
mov
and
insb
aaa
sahf
es
fcmovb
aad
mov
shlb
fsubl
iret
mov
jns
rolb
aaa
jmp
mov
sbb
push
adc
jb
pop
jmp
out
addr16
mov
in
pop
movsb
into
jmp
pop
fsubl
popf
mov
xchg
jp
xor
mov
push
mov
repz
and
pop
aas
inc
add
push
and
je
inc
push
gs
xor
cmove
imul
jne
insl
movaps
mov
stc
dec
pop
fisubrl
je
jnp
shlb
cmp
lods
adc
ret
cmpsb
push
jle
rcll
aas
fistpll
les
fucomip
cltd
cmp
ja
push
mov
mov
sub
xchg
lods
inc
mov
jbe
push
add
out
ljmp
js
push
nop
cmp
loope
jmp
call
hlt
jae
int3
imul
adc
mov
ret
lods
std
shll
pop
cltd
jbe
push
sbb
lds
cs
andb
out
rolb
push
call
in
fildl
movl
in
dec
loop
add
and
adc
inc
test
ficoms
push
sub
pop
lods
ljmp
cmc
add
or
cwtl
neg
jno
out
les
testb
out
cwtl
adc
push
outsb
xor
sbb
xor
inc
mov
add
cmp
dec
push
mov
mov
and
xchg
push
movsl
dec
inc
sub
jg
arpl
repz
jae
and
scas
push
sbbl
ljmp
push
in
repnz
das
sbb
xor
push
xchg
fisubl
es
rcrl
pop
sbb
inc
pop
mov
xchg
rcll
cltd
sbb
out
adc
in
popa
mov
stos
push
xchg
pop
xchg
add
sub
inc
aas
fmul
pop
add
mov
nop
in
scas
in
cmp
push
ds
adc
insb
xchg
mov
into
jmp
sarb
push
or
cmc
inc
adc
scas
and
push
stos
adc
dec
out
and
and
xchg
pop
add
test
mov
push
adcl
sub
mov
lds
sbb
icebp
insb
adc
dec
xor
lods
fwait
dec
pop
pop
cli
push
sahf
mov
inc
out
shl
out
rcll
pop
std
gs
cmp
ja
jne
jbe
mov
or
bound
push
mov
adc
mov
je
loope
mov
bound
or
fdivrl
ljmp
int3
and
sbb
cltd
push
rcrl
cmc
out
pop
inc
push
xchg
cmp
stos
mov
aas
bound
test
jns
test
mov
sub
cmpsb
lret
or
jl
pop
sbb
pop
je
push
push
fs
mov
jo
mov
insl
cld
sti
and
push
adc
loope
adc
gs
pop
out
sub
push
movsl
out
push
std
movsb
push
add
xor
jo
dec
cmp
push
push
aaa
out
xor
es
lds
loopne
lahf
into
xor
fisttps
sahf
jb
jae,pt
imul
pop
push
repnz
scas
cli
add
outsl
insb
ret
jg
cmp
jmp
rcrb
addr16
cwtl
in
dec
ficoml
out
iret
dec
dec
cmp
dec
decb
xchg
xchg
add
mov
xor
jb
xlat
out
sub
fbld
stc
out
mov
std
fists
hlt
inc
push
out
int3
cmpsb
sub
test
stos
hlt
in
jg
mov
rcll
or
pop
movsl
xor
jmp
fdivs
jecxz
mov
lcall
pop
ja
cmp
or
sub
rorb
dec
and
lahf
xor
negl
dec
cmpb
es
imul
sub
pop
mov
push
insb
xchg
xor
inc
adc
test
data16
popa
xchg
fidivrl
pushf
mov
inc
mov
scas
in
inc
lahf
rclb
fadds
add
stc
cltd
add
pop
adc
xchg
mov
push
add
pushf
popf
or
dec
mov
push
or
fiaddl
cltd
mov
jne
xchg
out
out
setb
lds
ds
and
push
pop
mov
mov
mov
ret
and
in
xchg
leave
xor
inc
lea
mov
xchg
inc
mov
mov
push
sub
and
popf
out
push
add
push
xlat
es
jmp
or
jecxz
mov
dec
out
orl
dec
push
gs
les
push
mov
dec
and
push
mov
add
xchg
cwtl
mov
daa
lock
std
pop
xor
test
cmpsl
ficoml
fisttps
lds
pop
out
std
mov
sub
dec
xor
inc
jmp
dec
cld
adc
pop
mov
rcrb
xor
js
lret
pop
xchg
jae
xchg
cmp
adc
imul
sub
mov
outsb
nop
jl
ljmp
push
out
arpl
dec
lcall
mov
aad
mov
sarl
sarl
pop
inc
stos
call
loope
stos
arpl
dec
stc
stc
or
jb
adc
loope
roll
xchg
das
push
cmc
lret
add
out
pop
nop
pusha
cmpsb
out
sbb
mov
push
jecxz
mov
fbld
xchg
lds
inc
iret
addr16
lods
adc
mov
loop
ja
jg
call
lods
data16
jle
lock
jle
pop
jne
cld
cli
shll
mov
jbe
mov
stc
cmp
mov
sub
inc
jnp
adc
pop
dec
xor
add
test
push
pop
movsl
sub
add
inc
mov
pop
xchg
jb
mov
and
out
test
pop
in
fwait
stos
ret
mov
shll
dec
lret
lds
inc
push
test
xchg
and
pop
test
cs
clc
call
xchg
push
lcall
push
fiaddl
movsb
fnsave
inc
loope
cmpsb
dec
insl
lods
add
fwait
jbe
adc
mov
jbe
sub
lods
ss
sbb
fnstsw
sarl
push
or
dec
or
pop
xchg
rclb
movsl
add
rolb
mov
or
xlat
pusha
subl
cmp
stos
or
inc
pop
test
sbb
cli
dec
stc
fwait
out
add
xchg
dec
jae
gs
aas
mov
cmp
mov
mov
ja
mov
and
xor
or
pop
jmp
les
xor
ljmp
pop
iret
lds
int3
xchg
jp
repz
lock
push
ret
sbb
xchg
sbb
outsl
out
jno
call
out
scas
mov
test
sbb
and
in
gs
repnz
cmp
pop
inc
repnz
and
push
push
pusha
mov
mov
hlt
enter
pop
cmp
lods
jge
mov
rcl
cmp
pop
push
push
fdivr
je
pop
fisttps
xchg
aam
popa
xchg
int
mov
mov
mov
orb
xor
imul
lock
jge
xor
mul
mov
pop
adc
rcrl
dec
sub
gs
jge
fnstsw
mov
xchg
imul
or
or
ret
inc
add
pop
test
xchg
aad
xchg
outsl
cs
push
mov
pop
cltd
pop
fldt
ss
push
testb
or
fisttpl
rol
xor
orl
in
adcb
fimull
inc
scas
push
js
dec
jle
xchg
pop
and
jp,pn
pop
push
js
addb
xlat
mov
dec
gs
xor
xchg
inc
enter
popf
jl
fnstenv
hlt
ss
push
dec
cmp
jle
push
xor
test
or
sub
ret
xorb
insl
std
dec
xor
bound
rorb
adc
inc
loop
push
loopne
push
movsb
lret
pop
in
scas
or
es
shl
shrb
in
pop
sahf
pop
out
sub
enter
imul
inc
cwtl
adc
inc
fidivs
push
loope
out
cmp
cld
mov
aam
mov
sbb
out
test
daa
lock
add
mov
dec
inc
movsb
imul
nop
jp
leave
rolb
movsl
ja
push
xlat
dec
mov
sbbb
insb
in
jmp
push
pop
loop
aaa
cmp
and
sahf
btsl
push
jecxz
adc
sti
xchg
outsb
pop
jns
jno
lods
cs
xchg
sahf
daa
jno
add
bound
das
fs
insl
dec
mov
or
aaa
ds
out
mov
cwtl
cs
bound
out
fwait
cmpsl
loopne
xchg
xlat
xchg
dec
push
jns
sub
xchg
xchg
int
lahf
or
mov
lret
sub
inc
dec
jns
mov
and
sarl
test
ret
xchg
push
cmp
lods
inc
pop
push
sbb
mov
sahf
jnp
daa
dec
add
xor
dec
dec
add
inc
xlat
fs
sbb
jge
push
lret
dec
leave
outsb
mov
mov
sarl
xchg
xorb
outsb
mov
xchg
ja
aam
insb
ljmp
jae
shrl
jbe
xor
mov
lahf
pop
add
sar
inc
pushl
lods
pop
mov
inc
scas
jno
fisubrs
push
sar
mov
adc
push
mov
lahf
cmpsl
jno
cld
mov
arpl
out
mov
arpl
out
out
lods
xor
push
sub
cmp
fldenv
push
popf
inc
mov
or
cmpsl
fistpll
test
mov
pop
jb
dec
mov
fsubl
sbb
mov
adc
and
xchg
push
outsb
int
jp
mov
and
das
lds
lock
jae
ljmp
in
xchg
mov
cmp
lahf
movsl
cmp
shrl
dec
xchg
idiv
xchg
xor
jle
daa
stc
fldl
ss
hlt
mov
or
scas
outsb
dec
call
pop
inc
push
lods
mov
dec
dec
repnz
into
xor
rolb
mov
mov
or
pop
jne
cmc
outsl
in
sub
xor
fcomp
arpl
pop
or
scas
jl
pop
and
mov
add
sub
jg
bound
ret
cmp
cmp
das
lret
sti
fistpl
rcr
lcall
mov
int
outsb
das
in
sub
imul
decb
fs
negl
rorl
cli
mov
shll
mov
jns
adc
jle
push
push
push
sbb
iret
dec
cmpsl
ficoms
mov
mov
icebp
stos
push
sahf
ret
imull
and
xor
out
dec
push
fldcw
lods
mov
rcr
pusha
out
enter
outsl
sbb
das
xchg
jmp
pop
cmovnp
fisttps
xor
and
mov
adc
push
pusha
dec
imul
stos
sbb
xlat
sbb
xchg
adc
adc
into
jnp
sub
adc
shlb
adc
and
mov
inc
and
clc
pusha
cld
pop
dec
movsl
jp
cmp
cs
icebp
pop
push
lock
jg
in
pop
in
xor
mov
arpl
les
stc
xchg
jecxz
sub
lret
mov
mov
ss
das
mov
das
sub
cmp
and
and
add
mov
lret
sbb
test
mov
es
fs
sbb
add
add
jecxz
xchg
push
popa
add
mov
sub
sbb
insl
shll
mov
aaa
aad
mov
lret
lahf
jg
arpl
inc
int
movsl
stc
xchg
scas
push
rcrb
je
jge
pop
inc
outsl
push
jmp
aam
cmpsl
hlt
leave
inc
shrb
cli
jne
mov
cmp
imul
in
fwait
outsb
xlat
mov
xchg
mov
sbb
mov
mov
add
push
add
ss
aas
or
test
adc
xor
or
popl
shrb
adc
mov
jmp
xchg
das
pusha
jae
mov
sbb
pop
jo
outsb
mov
call
in
jo
mov
xchg
ljmp
dec
out
mov
pop
dec
das
jmp
inc
mov
cmpl
mov
lahf
jg
adc
in
pop
sub
arpl
push
xchg
mov
xchg
pop
test
pop
outsl
jmp
cmp
push
fnstsw
int
popa
roll
mov
aas
adc
mov
jnp
sub
xor
fidivl
mov
test
add
mov
insb
xor
mov
pop
push
cmp
js
cmp
lock
das
dec
add
mov
pop
stos
int
mov
push
in
mov
hlt
lret
xor
scas
pusha
xchg
mov
stos
or
shll
mov
fneni(8087
test
loop
insl
xchg
pusha
notb
mov
les
pop
xor
mov
mov
xor
mov
push
jno
mov
das
fs
scas
imul
add
frstor
add
jmp
mov
jo
dec
lods
adc
cmp
lods
push
je
leave
leave
add
add
pop
out
movb
push
mov
movaps
push
scas
mov
and
hlt
mov
jne
shl
imul
sti
pop
enter
popf
lret
jmp
jns
xchg
push
cmpsl
jne
jmp
daa
stos
jns
push
popa
pop
dec
jnp
mov
div
inc
bound
decb
jae
mov
sti
jmp
inc
jg
stc
jno
pop
and
sbb
push
iret
into
enter
sbbb
dec
mov
mov
lods
cli
push
push
aad
xor
xchg
in
insl
xchg
sub
mov
ja
adc
cmpsl
mov
jecxz
or
orb
and
andb
lahf
dec
jecxz
add
fdivrl
sub
jge
push
push
jg
push
gs
add
das
xchg
sahf
inc
push
in
aaa
jl
jae,pt
mov
test
xor
mov
push
mov
lret
adc
out
mov
shlb
jbe
push
cli
pop
mov
decl
out
loop
xchg
pop
add
dec
loopne
mov
mov
div
or
xchg
roll
adc
inc
call
mov
jl
cli
xchg
mov
mov
out
in
leave
jns
nop
mov
mov
arpl
fistpl
cmpsb
adc
xchg
idiv
inc
mull
xchg
std
jge
popf
pop
dec
lock
adc
push
sub
inc
movsl
adc
int3
in
ret
dec
jb
in
shlb
lret
lret
daa
cmp
push
cmp
xor
push
inc
jno
lahf
in
adc
imul
es
inc
lcall
sti
mov
sbb
lods
jle
push
xchg
add
mov
cmp
mov
xor
inc
sbb
adc
sub
sub
sbb
int3
and
mov
inc
mov
cli
adcb
adc
jecxz
fcoml
mov
pop
ss
cwtl
cmp
xchg
nop
stc
mov
add
fdivr
sub
ret
adc
popa
sub
js
push
lds
inc
pop
shl
mov
sbb
cwtl
int3
imul
fstps
push
cmp
into
stc
push
mov
pusha
xchg
ljmp
jno
or
cmp
xchg
stos
fnstenv
outsl
fcompl
jecxz
and
adc
or
cmp
add
fisttpll
xchg
out
into
lds
fbstp
cltd
push
jbe
cmpsb
sbb
or
int3
fs
loope
icebp
loop
popf
and
es
cmp
ffreep
das
shrb
cmp
sbb
or
mov
mov
lds
xor
cltd
jnp
dec
inc
into
xchg
xchg
divps
cli
pop
inc
push
xor
icebp
pusha
jne
pop
mov
mov
mov
inc
inc
cmp
cmpb
push
ret
jecxz
test
jo
xor
rolb
pop
fbld
test
jp
fildl
insb
mov
das
pop
add
adc
aad
lret
inc
or
movsb
pop
add
push
inc
fisubrl
daa
add
xchg
push
mov
dec
js
icebp
cmp
lock
in
xor
push
xor
pop
lret
jne
clc
ret
stc
lea
daa
movsl
mov
iret
xchg
iret
sub
sub
js
cs
idivb
jl
jge
add
ljmp
addr16
jmp
pushf
rcrb
xlat
sub
add
dec
movsl
loope
sar
or
lds
aaa
and
sub
inc
xrelease
lea
adc
dec
pop
test
mov
mov
adc
xor
aaa
jl
cmp
sub
xchg
mov
sbb
cmp
testb
aam
xchg
pop
imul
inc
addps
inc
call
xchg
inc
cmpb
test
es
sbb
sbb
arpl
cmpsb
dec
ret
fdivrs
jecxz
jmp
xor
hlt
mov
rorl
aas
sub
pop
popf
dec
mov
jl
mov
cs
stos
jmp
out
mov
push
popw
mov
mov
push
or
xchg
stos
fildll
lret
push
or
icebp
insb
lods
cltd
out
jg
mov
ds
jp
ret
jp
movsl
shl
dec
jne
iret
pop
inc
sub
and
std
mov
dec
jae
ret
imull
out
pop
cmp
inc
xor
mov
cltd
xor
outsl
cmp
sub
and
mov
pop
adc
hlt
add
adc
test
in
insl
rcl
mov
call
orl
sarb
je
mov
imulb
js
je
dec
mov
ljmp
mov
mov
mov
cmp
scas
std
pushf
xchg
popf
and
push
lock
out
lret
into
inc
jp
sbb
add
add
test
dec
cmp
dec
out
push
outsb
push
sub
jb
mov
cld
push
cmp
pop
pushf
insb
cmp
fsubs
xchg
ret
or
fsubs
aas
inc
adc
pop
fcoms
call
mov
mov
jecxz
faddp
test
outsb
sbb
dec
mov
cmpsl
jge
jg
mov
xor
mov
push
or
jne
aad
cwtl
adc
sbb
jae
dec
mov
add
push
in
xchg
shlb
scas
cmp
mov
lcall
iret
fs
lods
gs
aaa
shll
bound
movsl
outsl
les
aam
dec
push
or
in
sbb
mov
and
push
jae
call
rorb
out
rorl
and
fldt
repz
lcall
sbb
pop
mov
das
jp
aaa
cmpsb
cmp
std
push
adc
mov
pop
pop
out
pop
cltd
xchg
jae
mov
scas
dec
push
and
xor
jno
out
jle
daa
aam
sub
push
inc
sbb
cs
jo
mov
mov
insl
movsb
cmp
rcr
sbb
cmpsl
adc
fcmovnb
jno
fwait
push
cmc
mov
push
push
cmpsb
lock
or
lret
rorl
jle
fwait
lret
inc
cltd
cli
jmp
push
sahf
enter
mov
je
outsl
push
out
outsb
clc
inc
in
jp
aad
outsl
mov
inc
daa
mov
out
ret
xor
cwtl
icebp
rorb
loopne
inc
ret
and
punpckhwd
lcall
jmp
lock
pop
aam
cmp
negl
clc
enter
mov
mov
mov
sub
add
push
inc
cmp
push
pushl
inc
imul
loope
push
mov
lock
pop
xor
outsl
idivl
stos
fsubrl
test
adc
js
pop
push
call
add
outsb
pusha
pushl
ret
add
xchg
xor
icebp
mov
insb
or
add
cmp
xchg
jle
or
test
pushf
cmp
mov
pop
and
fucom
js
fnsave
ja
or
ja
enter
sahf
pop
sub
fmuls
xchg
call
lea
jge
adc
mov
mov
sbb
mov
sub
std
lods
mov
int
jne
arpl
add
push
sbb
mov
dec
mov
daa
mov
mov
jle
mov
neg
add
mov
mov
mov
in
pop
mov
lahf
inc
sbb
xchg
leave
sbb
rorb
xlat
xchg
cmp
dec
ficomps
subl
jl
ss
in
rolb
loop
jb
orb
jb
xchg
insb
rcl
xchg
mov
xor
sahf
push
cld
inc
sbb
xchg
imull
push
jecxz
lods
fsts
pushf
daa
pop
outsl
sub
lods
inc
inc
pmullw
in
mov
jmp
inc
loopne
into
inc
test
lcall
arpl
std
imul
mov
add
dec
push
ret
push
pop
rorl
jae
ds
inc
push
sbb
mov
imull
mov
sbb
testl
pop
sub
xor
call
push
enter
pop
mov
mov
xchg
outsl
lahf
aas
push
pop
cld
fcompl
sbb
out
rorw
and
or
cmp
aas
push
ss
sub
push
sarb
mov
jmp
call
pushl
aam
mov
jl
jecxz
frstor
mov
je
shll
mov
sub
fdivr
lret
push
pop
mov
sub
loop
negl
lds
enter
negl
mov
insb
ret
push
fwait
dec
add
ds
dec
fsubrp
lret
xchg
clc
sbb
ljmp
jnp
out
mov
ja
sbb
subb
mov
fistl
bound
mov
adc
push
cmp
rolb
mov
or
jb
mov
in
in
fstl
pop
or
in
pop
add
stc
jnp
pop
notb
jge
leave
test
sbb
push
push
fsubs
cmp
mov
aas
movsb
pop
pop
xchg
or
pop
imul
popa
mov
aaa
mov
repz
out
frndint
int3
lods
mov
jmp
dec
aam
dec
jbe
or
icebp
mov
and
xor
jl
loop
stc
add
adc
jmp
sub
bound
jb
inc
les
stos
cmp
fildl
nop
push
pop
jae
std
sbb
lods
pop
inc
add
sti
jp
test
stos
jns
mov
int
leave
mov
or
nop
aad
fnsave
xor
and
add
mov
mov
add
sbb
mov
out
pushf
dec
mov
and
add
push
jg
add
mov
orb
leave
out
je
mov
mov
push
pop
inc
scas
fstl
aad
xor
mov
sbb
mov
pop
test
add
cltd
inc
lret
sti
cmpsl
jl
js
or
lahf
enter
lea
lds
insb
cmp
insb
or
jnp
dec
inc
fisttpl
sbb
aad
dec
mov
pop
test
nop
xor
addl
aad
pop
clc
lret
xlat
dec
les
mov
imul
inc
dec
sub
scas
stos
inc
mov
es
sub
cmc
mov
mov
mov
pop
call
les
mov
cwtl
shlb
add
stc
jle
das
les
insb
ficoml
push
mov
stos
mov
rcll
sub
dec
rolb
mov
jbe
pop
rol
popa
shrl
cli
xor
sub
sub
aam
and
xchg
shr
or
movsl
dec
adcb
lock
inc
jge
xor
inc
dec
inc
int3
mov
xchg
dec
cmp
ret
sarb
push
hlt
hlt
xor
sarl
inc
mov
dec
mov
mov
mov
addl
aad
ret
xchg
mov
inc
xchg
aad
pop
aad
shrl
sub
or
dec
repz
or
cmp
cmpsl
call
sbb
adc
add
jge
insl
loope
popa
mov
stos
sub
rorb
pushl
push
and
or
enter
xchg
sub
loop
cmp
dec
mov
insl
mov
loopne
test
jo
jmp
mul
mov
inc
stos
mov
sbb
push
movsb
nop
mov
popf
add
scas
into
cmp
ss
xchg
pop
mov
fcomps
mov
mov
and
ja
add
fcomip
mov
mov
mov
cmpsl
push
mov
sub
jg
or
sbb
pop
loopne
add
inc
jae,pn
mov
sti
pop
rorb
jo
shll
ret
popa
pushf
aam
pop
gs
pop
jp
imull
fldl
xchg
dec
iret
inc
fiadds
mov
lcall
inc
mov
cli
inc
icebp
push
xchg
pop
sub
imul
mov
dec
jmp
mov
ja
cltd
repz
xlat
in
push
pop
inc
jle
dec
mov
insl
in
popa
dec
lds
test
push
mov
mov
bound
dec
cmp
shr
mov
adc
arpl
mov
popf
dec
leave
icebp
lds
xchg
mov
pushf
mov
jns
mov
xchg
xor
xor
out
pop
call
loop
adc
clc
xchg
jp
xchg
inc
and
jp
movsb
repnz
je
popa
outsb
and
jbe
or
mov
icebp
xor
mov
rcrb
fsubl
mov
or
es
pop
out
mov
dec
in
mov
push
xor
inc
jmp
xor
jae
sbb
popf
lods
or
sbbl
call
std
or
outsl
cmpsl
dec
and
pop
cmp
sbb
mov
imul
fs
iret
inc
sarb
pusha
cli
es
ljmp
scas
mov
shl
std
sub
and
mov
xchg
leave
sub
mov
add
in
imulb
lret
push
das
rcll
iret
js
in
push
or
call
stc
fbld
adc
test
cmp
add
jno
data16
push
stc
xchg
mov
mov
push
shrd
mov
js
adc
sub
jns
shrl
xor
cmp
xor
mul
std
jae
dec
ja
and
loope
lods
arpl
mov
js
test
fwait
xchg
xor
and
cmpsl
and
pop
and
ds
mov
cs
icebp
or
mov
xor
jmp
mov
es
fs
xor
lahf
scas
testl
movsb
stos
jnp
ss
pusha
inc
xlat
stos
pop
into
xchg
xchg
lcall
cmc
add
dec
out
mov
fisttpll
lods
imul
add
add
in
popa
int
mov
int3
aas
push
mov
mov
mov
popf
and
lret
mov
shlb
jmp
scas
js
mov
cmpsl
push
push
fildll
pop
dec
rolb
das
pop
repz
fdiv
mov
enter
mov
and
push
hlt
ret
mov
inc
ret
aaa
ljmp
outsb
mov
mov
pmulhuw
inc
sbb
sub
sub
lret
test
push
rclb
out
inc
jo
dec
fisubrs
or
dec
and
clc
aaa
aam
out
mov
shll
pop
inc
ret
pop
jno
or
loopne
mov
add
push
nop
mov
push
mov
cli
inc
inc
pop
pop
cmc
dec
lahf
cmp
push
add
add
jno
fprem
mov
sbb
sub
push
add
ret
outsb
push
pop
rorb
rorl
rcrl
dec
jo
fnstsw
xor
mov
push
pop
or
lahf
cltd
movsl
std
push
xor
and
in
jmp
jmp
andb
movsb
xor
gs
mov
scas
sub
adc
bsr
xchg
ja
fldt
sarl
sbb
lret
ret
jnp
jns
mov
mov
in
and
ror
imul
pushf
gs
xchg
jnp
inc
cs
clc
mov
sbb
popl
pop
cmp
nop
push
xchg
dec
sarl
cmp
fstp
xchg
gs
or
xor
xor
ljmp
xor
jne
repz
cmp
into
mov
movsb
out
pop
js
mov
xchg
mov
push
mov
mov
xchg
stos
jle
test
push
pop
mov
and
xchg
sbb
icebp
mov
add
out
cld
aad
mov
enter
adcl
push
cli
xchg
pop
popa
rcl
mov
insb
xor
pop
js
bound
cmpsb
push
sti
add
and
int
xchg
or
add
pop
into
mov
stc
jecxz
pop
xchg
sahf
pop
aas
pop
jmp
enter
out
arpl
int3
aam
adc
pop
aad
mov
xchg
jecxz
flds
dec
push
xlat
and
mov
cmp
jmp
push
inc
push
daa
dec
fwait
cmc
test
pop
mov
push
sub
jbe
dec
fwait
add
lret
push
stc
fdivr
sub
scas
lret
test
xchg
das
add
push
dec
leave
mov
aaa
push
add
cli
mov
jb
mov
jbe
aad
dec
push
lahf
test
adc
xchg
sbb
std
cmp
mov
dec
pop
ret
out
sub
ja
ret
ds
mov
add
test
dec
imul
sub
dec
pop
xchg
subl
call
mov
shrb
xor
sub
jno
or
insl
lea
bound
hlt
xchg
push
testb
xchg
testl
in
fisubrs
clc
shlb
ja
sbb
push
xchg
pop
push
mov
add
fdivs
mov
sti
scas
scas
sub
and
fistpll
movsl
push
inc
aad
mov
enter
ja
call
das
pushf
or
inc
or
cwtl
push
mov
imul
push
jns
or
sbb
jg
mov
pusha
test
push
bound
pop
add
cmpsb
mov
stc
rorb
or
or
adc
popf
pop
mov
dec
adc
in
into
cmp
mov
and
pop
jbe
inc
add
enter
cmp
sub
pop
or
jg
out
push
cmc
shlb
or
insb
sub
cmp
pop
cwtl
inc
ficomps
in
dec
dec
dec
ljmp
imul
out
push
mulb
ds
mov
fildl
out
sbb
jg
cltd
jecxz
arpl
mov
push
orl
rolb
adc
inc
jns
outsb
adc
xor
pusha
push
inc
pop
inc
add
and
insl
imulb
dec
pop
out
xor
movsb
xor
xlat
rcll
jle
adc
adc
or
lcall
inc
sti
push
push
movsb
gs
jecxz
dec
push
cs
cmp
movsl
or
shlb
mov
stos
clc
rcrl
mov
lea
movsb
js
and
jl
adc
adc
push
mov
fstpl
mov
inc
xchg
leave
cmp
daa
or
cmp
notb
ss
xor
lcall
fimuls
push
xor
pusha
and
fidivs
cwtl
pop
jmp
mov
std
idivl
mov
imul
stc
push
inc
mov
mov
scas
mov
sub
hlt
inc
or
xlat
jg
pusha
mov
movsl
in
out
jo
negl
xchg
out
scas
stos
lds
movsl
mov
orl
or
mov
jno
push
jno
ret
cld
xor
loopne
jg
mov
sub
pop
xchg
and
lods
mov
popa
sub
jns
push
mov
push
jl
jnp
mov
gs
int
pop
nop
inc
push
pop
xor
cwtl
dec
cltd
outsl
cmp
dec
aad
jns
or
dec
inc
add
iret
fiaddl
inc
cmp
shlb
out
sbb
jo
pop
lds
addb
jle
and
push
mov
sahf
test
push
add
out
cmpsb
xor
mov
or
mov
pusha
rorb
lcall
fisttpll
ret
pop
in
mov
add
test
cltd
jl
sub
adc
mov
sub
ljmp
mov
daa
cli
mov
jne
jnp
push
sub
xor
data16
repnz
repz
aad
mov
imul
lods
fisttpl
cltd
sbb
pushf
xchg
adc
xchg
jle
jns
xchg
inc
mov
dec
mov
pop
fiaddl
in
mov
flds
aad
or
xor
test
inc
lea
or
je
sbb
aam
dec
fisubrs
call
sbb
cmp
add
repnz
lahf
ficoml
jne
or
lcall
push
popa
or
mov
mov
and
add
and
repz
jnp,pt
stos
cwtl
inc
mov
pop
jnp
and
and
outsb
pop
test
fdivl
and
fldenv
enter
aas
add
scas
adc
inc
icebp
pop
mov
das
adc
imul
loop
repnz
add
call
xchg
daa
or
jnp
mov
imul
test
pop
adc
or
into
sahf
adc
inc
jg
fs
sbb
cmp
iret
xor
mov
inc
jae
push
add
xchg
pop
es
xchg
jp
stos
sub
xlat
cmc
inc
mov
aaa
cmp
jge
push
cmp
jbe
jp
push
mov
add
jns
cmp
adc
xor
lds
pop
mov
xor
notl
rcrl
es
ficompl
add
int
in
dec
stc
dec
lea
test
push
fistps
adc
xorb
pushf
fcoms
xor
push
mov
fs
lret
test
or
and
push
xor
stos
mov
mov
pop
inc
and
jl
adc
push
cmpsb
inc
cmp
push
cmp
repz
adc
lock
mov
pop
out
and
xor
add
stc
cmp
jl
inc
dec
subl
ret
pusha
sub
push
fisubrl
xor
shlb
aad
pop
push
cmpsb
push
dec
xchg
pop
xchg
aas
orb
push
jne
adc
jp
mov
mov
rcll
jle
mov
ss
sub
dec
xlat
inc
mov
jns
mov
ret
rcrb
scas
adc
cltd
into
shl
pop
lret
popa
adc
call
pop
inc
pop
cwtl
push
in
inc
push
adc
and
xchg
mov
fisttpll
cli
cmp
test
and
xorl
or
shlb
xor
movsl
or
out
xchg
xchg
xor
dec
or
push
mov
inc
stos
jl
and
je
sub
scas
adc
cwtl
xchg
movsb
xchg
mov
mov
stos
dec
mov
pop
push
and
xor
lods
leave
scas
cmpsl
gs
mov
xchg
pop
adcl
loop
pop
add
fsubs
int
sbb
int3
jmp
and
jo
and
adc
insb
adc
adc
adc
add
stc
ret
mov
adc
ljmp
roll
cmp
push
fs
mov
sub
aad
fistpl
test
and
clc
mov
push
mov
imul
nop
inc
pop
push
dec
inc
add
shlb
fwait
lahf
rcrb
mov
mov
xchg
ret
jns
je
pop
inc
cmp
aad
add
notl
sub
dec
hlt
call
inc
dec
in
int3
xlat
or
xor
movsb
jl
sub
aaa
add
xchg
lret
mov
cs
fldl
mov
jns
mov
mov
xchg
push
sarl
cmpsl
out
dec
xchg
xor
gs
inc
fcmovnu
pop
repz
insb
rcl
sbb
sbb
mov
pop
fistl
cli
lea
scas
les
mov
fistps
or
scas
loope
stos
sbb
push
mov
imul
mov
adc
in
or
cmp
stc
xlat
jg
mov
push
inc
nop
sub
cmp
sub
cs
add
pop
and
dec
in
cmc
fidivs
insl
push
fidivrl
mov
mov
add
push
adc
pusha
rep
lret
jg
add
test
add
mov
lds
xchg
sub
adc
add
repz
loop
ds
xlat
adc
fs
iret
dec
mov
and
xchg
adcl
jp
xor
cmp
dec
int
loope
mov
in
lcall
mov
pop
jl
mov
jb
push
pushf
fildll
pop
jp
add
jmp
xorb
jnp
leave
pop
lods
les
stos
out
rcrb
and
add
and
stos
lahf
mov
in
inc
pop
andb
cli
dec
in
ud0
mov
lock
jge
les
fdivl
notl
lods
or
test
jl
repnz
mov
daa
adc
gs
aaa
xchg
sub
dec
cmp
mov
mov
cmp
aam
negl
jae
mov
enter
popf
mov
stc
add
ret
out
pop
mov
outsb
movsb
cmc
imul
mov
sub
lahf
movsl
cmpsl
mov
and
sub
push
aas
fwait
sub
sub
hlt
mov
sbbl
cs
inc
mov
nop
jo
bound
pop
rcrb
ret
insl
xchg
js
or
in
or
and
jbe
jmp
fdivrl
mov
ret
xor
sub
push
sbb
pop
daa
jae
sbb
or
pop
push
and
pop
mov
xor
jmp
cmpsb
push
push
out
mov
dec
dec
out
pop
repnz
mov
sbb
push
in
adc
into
xchg
mov
movsl
or
cld
ss
aas
jg
ljmp
pop
bnd
jnp
inc
loope
jmp
mov
sub
jnp
sbb
ds
add
stos
rcr
mov
xchg
pop
fbstp
lea
test
iret
rcrb
roll
sbb
push
cs
pop
jge
sub
add
insb
pop
aad
xchg
jecxz
adc
adc
dec
pusha
bound
push
xor
fdivs
movsb
xchg
or
fs
add
shl
jmp
int3
push
icebp
fbld
stos
sub
inc
push
sbb
dec
popa
popa
rcrl
cmp
movb
rolb
mov
sub
jae
mov
aas
jl
sbb
loop
adc
int
leave
xlat
push
imul
lret
pop
gs
mov
arpl
cld
andl
sahf
lret
bswap
mov
icebp
xor
enter
ja
fsubrs
cld
cld
xor
xchg
or
mov
or
ja
popf
add
outsb
xchg
mov
cmp
fmuls
imul
adc
xchg
sahf
mov
ss
jmp
adc
dec
imul
cltd
cmp
pop
push
jo
pop
push
nop
dec
cmp
add
callw
loope
rcll
enter
push
jle
mov
int3
dec
inc
add
push
mov
insb
jne
clc
int3
clc
test
out
insl
insl
aad
and
inc
sbb
or
jp
jmp
cmp
sbb
push
dec
stos
xchg
xchg
inc
push
cmp
fmul
cmp
insl
lock
aaa
mov
mov
jl
cmp
lea
sahf
out
sub
icebp
pop
mov
jg
mov
sub
or
jg,pt
aas
ja
inc
cmp
loop
loope
sahf
int3
push
xchg
sbb
pop
outsb
das
xchg
add
mov
cmp
xor
dec
jno
dec
dec
rcrb
in
into
mov
inc
pop
and
mov
outsl
pop
fistl
jl
xchg
bound
lods
rorb
in
sub
ja
cmp
scas
bound
loop
sub
sbb
leave
and
movsl
pop
mov
imulb
dec
dec
lcall
fcomps
insl
pop
shlb
call
imul
mov
jbe
aaa
and
sbb
shrb
sbb
fdivrl
ret
and
mov
in
mov
xchg
dec
xor
movsl
adc
icebp
mov
jns
adcl
data16
pushf
fcoml
dec
nop
lds
mov
aaa
push
lea
mov
xchg
push
fidivs
dec
call
mov
cmpsb
scas
push
lret
add
lcall
or
je
stos
gs
xchg
in
test
ljmp
ficoms
pop
pop
shrb
ret
inc
mov
test
dec
xchg
xchg
pop
nop
gs
jns
sti
sbb
xchg
mov
mov
xchg
js
push
or
cvttps2pi
adc
ficompl
cmp
fisubrs
add
hlt
sahf
icebp
stos
aad
aas
das
sbb
and
sub
aaa
and
dec
xchg
jecxz
repnz
cmp
lea
xchg
push
pop
je
mov
adc
or
adc
pop
into
fwait
cmp
inc
xlat
sarb
into
sub
xchg
sub
and
outsl
sub
xchg
pop
adc
jb
pop
add
mov
mov
shrb
fmull
lock
inc
sti
pop
pop
and
lock
push
mov
adc
or
test
lods
adc
scas
inc
sub
dec
mov
cli
ret
cltd
jb
int3
lods
push
pop
mov
push
frndint
aaa
inc
cltd
test
sbb
and
test
cmp
sbbb
pop
mov
or
adc
call
push
push
and
lret
ret
jge
xchg
inc
mov
addr16
popf
clc
mov
adcb
fidivrs
loopne
lahf
arpl
nop
inc
lcall
icebp
test
mov
inc
and
lods
jle
and
stc
sbb
sbb
cmp
loop
das
in
dec
jae
icebp
pop
or
hlt
cmpsb
lods
mov
dec
lods
cmp
aad
pop
test
nop
xchg
rcll
ret
lret
aad
add
andl
and
divb
jne
lret
mov
or
std
mov
xchg
or
imul
lods
adc
mov
mov
pop
lds
int
jg
or
test
je
aaa
jns
stos
insl
cmp
sbb
cmp
or
jg
xchg
push
sub
inc
jecxz
add
out
mov
cmp
pop
or
jae
cmp
sbb
and
hlt
cld
push
mov
add
out
push
in
and
pop
outsl
sub
and
cmp
dec
xor
mov
iret
adc
jae
jno
add
inc
mov
mov
jae
or
repz
ja
enter
dec
jmp
add
stc
jo
pop
in
push
loopne
pop
int
out
fadds
mov
in
cmp
lods
ds
or
xchg
dec
ds
and
fidivs
int3
mov
sbb
ror
jl
lock
push
icebp
subl
stos
out
movsb
js
xor
lods
shlb
push
pop
jecxz
or
inc
lea
and
cmc
enter
xchg
jbe
mov
sbbl
out
stc
addr16
in
adc
fs
sub
dec
mov
mov
jg
mov
xor
mov
dec
cltd
pushf
dec
xchg
sub
jno
cmpb
adc
sbb
mov
mov
mov
insb
cwtl
add
out
pop
mov
lea
mov
pop
add
rorb
sub
in
inc
mov
mulb
mov
xor
xorl
or
sbb
or
popa
inc
insb
mov
out
fildll
jbe
jae
ret
mov
enter
cli
insb
mov
and
and
add
mov
lret
jg
fidivrs
es
pop
shrd
and
jo
aaa
dec
pushf
notl
or
ret
int
out
or
jmp
loopne
ret
xchg
adc
dec
sub
shl
and
test
out
icebp
das
pop
or
jmp
push
addr16
setbe
sarl
xor
aam
lcall
push
dec
std
insb
xorb
inc
and
dec
or
jbe
and
stos
testl
push
jmp
push
int3
sub
test
inc
nop
stc
jmp
dec
popa
frstor
adc
sbbl
mov
mov
insb
push
int
aaa
and
fwait
in
dec
sbb
insb
addl
mov
outsb
fwait
xor
jo
testb
adc
and
loop
lcall
xor
mov
popa
imull
repnz
addr16
jp
test
jo
loopne
adc
test
repz
xchg
push
push
andb
stos
push
pusha
and
push
call
cmc
sbb
push
pshufw
mov
data16
cmc
nop
ljmp
jae
nop
sub
in
or
ja
push
popf
cmp
stos
mov
cs
xchg
lock
cmp
mov
pop
std
sub
fidivl
in
iret
mov
add
sbb
int
jbe
sti
pop
mov
out
push
or
inc
jae
popa
cmp
sar
out
pushf
mov
add
cltd
jmp
clc
fidivs
loopne
mov
mov
jl
inc
ljmp
mov
and
mov
ret
push
sub
std
pop
xchg
jl
sbb
shrl
and
test
xlat
push
out
xchg
lret
sub
and
mov
push
push
and
imul
mov
dec
ljmp
or
pop
std
sub
inc
jge
sub
mov
or
sub
fstps
mov
movsb
jne
sbb
add
mov
pop
cltd
add
aam
popf
icebp
push
das
inc
mov
mov
sahf
xchg
sub
nop
sbb
pop
shr
sbb
testb
xchg
addr16
xchg
repz
icebp
call
adc
cltd
shr
pop
cmp
cmp
inc
mov
add
inc
xor
cmp
xlat
stos
andb
cmpsl
rcrb
int
and
add
sub
inc
popa
arpl
pop
sub
out
mov
loop
jg
gs
jle
sbb
rcrl
adc
mov
xor
imul
iret
dec
test
movsb
or
push
cmpsl
dec
out
add
fildll
mov
into
sub
xchg
popa
fisubl
jg
popa
and
inc
cs
cmpsb
mov
pushl
dec
rcll
or
mov
repnz
or
cli
push
ljmp
into
sbb
inc
sub
cmp
dec
pop
add
fs
pushl
mov
shrl
in
jmp
sub
dec
fwait
dec
jge
xor
xor
lock
push
outsb
stos
jp
sub
mov
sahf
inc
push
mov
ffreep
fbstp
loopne
call
cmc
stos
push
test
out
lock
aaa
dec
push
aas
xorb
push
push
sbb
cmc
sarl
clc
sub
pop
stos
pop
pop
rcr
add
ss
fwait
mov
int3
jl
mov
out
jg
sti
ds
or
test
cmc
lahf
andb
mov
mov
xor
stc
and
mov
pop
divl
movsb
clc
rorl
mov
movsb
cld
pop
add
push
popa
xchg
add
inc
addl
sub
mov
outsb
mov
adc
cmpsb
dec
mov
jno
pushf
mov
push
fistpl
inc
mov
pop
add
cmp
add
mov
in
cmpsb
jmp
inc
mov
push
imul
xchg
lods
inc
das
divl
in
mov
dec
sarl
nop
test
mov
mov
incl
call
loop
mov
roll
pop
jl
inc
jl
es
orps
scas
push
fnstcw
fwait
add
rclb
les
lods
dec
out
cmc
sub
int
mov
loope
out
sbb
xchg
cwtl
inc
loopne
or
mov
adc
jo
cltd
xor
pop
test
sub
push
xchg
sbb
xor
or
push
sub
xchg
or
fsubrs
inc
aas
cmc
and
inc
add
aad
pop
shll
pop
iret
mov
lahf
or
ret
mov
mov
es
or
hlt
push
leave
addl
addr16
rcrb
pop
sahf
loope
push
fdivrl
push
jecxz
fwait
add
iret
ja
clc
mov
sarl
mov
dec
xchg
call
scas
cmpsl
into
dec
aaa
jp
testl
jle
dec
into
cmpsb
ss
xor
in
xchg
dec
loop
loop
xor
lcall
movsb
lahf
jl
out
jmp
inc
pusha
jno
mov
or
loopne
and
sbb
or
add
dec
or
insb
mov
dec
dec
xchg
pop
lret
or
and
loop
mov
pop
adc
pop
pop
xchg
cmp
lea
fisttpl
in
out
xor
or
in
inc
ffree
out
addr16
pop
mov
sahf
push
pop
pusha
fxch
lds
mov
sbb
ror
stc
int
mov
repz
lock
push
adc
xchg
jno
xor
rorb
dec
clc
and
mov
push
sar
mov
sbb
dec
leave
and
test
scas
mov
out
popf
std
in
mov
cmp
mov
sbb
dec
andb
sub
inc
pusha
lds
push
mov
sbb
rclb
stos
sbb
or
push
mov
repnz
jo
jmp
in
mov
cmp
inc
adc
daa
xchg
cs
cwtl
jno
out
into
das
xchg
loopne
push
jp
test
cltd
fwait
movb
add
pop
int
jmp
jnp
xor
and
incb
mov
dec
adc
push
mov
mov
push
cli
aas
xchg
xchg
jecxz
sbb
jb
fisubs
pop
leave
mov
mov
dec
jb
out
xchg
push
add
push
or
out
sub
push
push
dec
mov
xchg
sti
ret
mov
ss
push
lret
add
out
adc
fistps
xchg
cmpxchg
sub
clc
push
mov
insl
les
dec
test
mov
dec
xchg
jle
jle
decl
mov
gs
mov
cltd
orb
lret
jmp
ror
and
lock
and
inc
xorb
lretw
repnz
jns
add
inc
xchg
xor
lret
in
jno
fs
js
add
push
push
inc
rorl
mov
sbb
inc
mov
dec
mov
cs
out
mov
push
push
fidivrl
popf
lds
das
cmp
test
mov
adc
sbb
cs
ds
sbb
inc
mov
push
sbb
repz
mov
xchg
test
call
out
cmp
push
scas
fwait
decb
dec
dec
jle
push
mov
arpl
popa
movsl
dec
popa
and
mov
push
frstor
es
cmp
and
fs
mov
mov
add
ja
out
rcrl
jecxz
inc
cmpsb
dec
mov
pusha
mov
jae
sub
mov
pop
xor
out
jne
aad
dec
and
sbb
mov
mov
es
scas
mov
pop
sbb
jle
out
mov
push
inc
adc
cmp
std
dec
scas
outsl
dec
add
imul
cmpl
inc
jmp
out
or
push
insb
daa
shlb
nop
dec
dec
loope
inc
rcrl
shrl
daa
mov
cwtl
lods
mov
adc
jecxz
ja
in
aaa
mov
sub
repz
lds
dec
outsb
test
xchg
cltd
popf
jbe
cwtl
inc
push
adc
pop
sub
out
subl
in
outsb
and
jbe
fcoml
icebp
xchg
add
sub
or
pusha
inc
adc
inc
cmc
pop
and
movzbl
addl
das
sub
arpl
add
ret
loopne
into
lret
cld
push
push
into
jmp
mov
sti
fbld
pop
xor
test
sahf
dec
or
outsl
sbb
xor
fiadds
cmp
lods
fcmove
adc
and
cmp
stos
dec
push
dec
xchg
mov
mov
inc
jle
xor
lea
or
sbbb
jb
aas
push
in
std
and
pop
pop
fdivrs
arpl
inc
outsb
ficoms
adc
loope
cmc
and
stos
push
shll
addr16
sahf
mov
jmp
add
decb
and
jmp
sarl
rcr
xchg
xchg
inc
xchg
shlb
outsb
dec
mov
stc
jb
cmc
outsl
arpl
xor
inc
ret
std
push
mov
popa
imul
dec
jb
je
sti
jmp
pop
mov
jne
xchg
sub
lret
fistpl
and
jg
push
xchg
cmp
add
ss
jecxz
cmp
int3
lahf
jle
add
sbb
fsubl
pop
hlt
lcall
pop
pop
mov
add
cwtl
lods
daa
and
fabs
mov
mov
fldt
je
loopne
pop
imul
scas
iret
pop
or
popa
rorb
loope
fisubrl
js
sbb
lods
push
inc
adc
out
pop
sbb
jl
add
out
add
inc
xchg
cld
adc
push
push
cli
sub
sti
cmp
cs
xchg
inc
das
sahf
imulb
mov
scas
scas
or
stos
enter
aam
jns
pop
pop
xor
dec
mov
push
push
mov
pop
out
add
test
les
lret
mov
jp
lds
mov
jb
push
push
cmp
jno
and
xlat
xchg
mov
sbb
jmp
jecxz
jge
xchg
inc
cmp
and
dec
std
add
pop
loope
and
lock
xor
lret
xor
leave
push
push
mov
lahf
xchg
xor
lret
adc
mov
push
ret
adc
ljmp
pop
loopne
out
ret
fs
pop
add
xor
mov
in
test
aaa
cmp
mov
aas
insb
das
inc
mov
add
and
jno
js
pop
mov
and
in
es
aad
inc
mov
outsl
mov
lahf
push
xchg
cld
fdivl
mov
lea
jns
pusha
xor
repnz
hlt
pop
dec
cwtl
fmuls
stos
sub
int3
mov
scas
push
inc
test
mov
sti
ds
jp
sbb
outsl
lret
scas
test
ja
push
int3
addr16
push
aas
aas
add
dec
push
inc
in
adc
pop
lret
push
in
and
mov
mov
mov
pop
pop
adc
cmp
adc
jmp
in
xor
inc
fmull
cli
int
and
pop
pop
imul
fwait
push
sub
clc
xchg
test
jle
das
mov
test
adc
test
inc
lds
and
pusha
jmp
add
cwtl
dec
subb
adc
xchg
repnz
dec
dec
mov
ret
fnsave
fldl
scas
loop
cmp
fistpll
sub
or
cltd
fs
and
cmp
mov
push
iret
pop
adcl
sub
scas
jae
test
add
pusha
sub
push
int3
sbb
push
cmp
pop
rcr
xchg
jne
jne
daa
mov
mov
divl
loopne
das
pop
and
sets
pop
jg
pop
or
arpl
adc
push
cli
test
stos
cmp
push
enter
xchg
jmp
loop
push
mov
cmpb
xchg
dec
add
mov
fnstsw
test
testb
pop
dec
sub
jno
dec
and
mov
or
arpl
xchg
push
daa
push
push
insb
lret
and
imul
sahf
in
pushl
dec
inc
in
push
add
roll
jo
jecxz
xor
push
push
lea
pusha
xlat
xor
xlat
xlat
divl
mov
mov
jmp
psubusw
in
bound
divl
neg
outsl
insl
fwait
rorb
mov
inc
es
outsl
push
and
ret
jnp
aam
ljmp
sbb
pop
xchg
stc
nop
js
push
mov
jmp
inc
int3
sub
add
dec
rdmsr
pop
mov
sub
dec
out
push
orl
dec
push
addl
cli
cmp
sbb
mov
xor
pop
loope
cmpsl
pop
jb
push
push
mov
stos
stc
jbe
sbb
into
and
ljmp
std
inc
dec
out
or
mov
mov
cmc
push
fisttpll
std
sarb
loope
sub
loop
adcl
pop
fsts
mov
out
scas
fdivr
in
sbb
sbb
jae
cmp
mov
pop
ret
sti
cmp
mov
sub
bound
xchg
cmp
inc
out
and
jno
testl
pusha
adc
inc
sbb
push
and
and
sub
inc
repnz
add
xchg
clc
lods
fildl
sahf
test
mov
jnp
push
push
out
cltd
xchg
das
iret
adc
mov
je
mov
push
cmovne
pop
sub
add
jns
xchg
test
jbe
sbb
lret
movsl
mov
mov
mov
mov
cmp
cmp
mov
pusha
pusha
in
jbe
push
leave
stos
dec
jnp
push
mov
in
dec
dec
sbb
in
cmp
pop
mov
cmc
iret
add
mov
testl
es
fcoms
cmp
insb
fdivs
ret
mov
inc
jecxz
dec
dec
add
sub
scas
mov
sbb
test
mov
xchg
cmc
ret
add
stc
dec
push
inc
call
sbb
nop
sbb
outsl
rcll
cmp
jns
mov
inc
cld
out
clc
ficoml
cmc
call
push
inc
ds
jl
adc
cmp
jnp
js
insl
imul
pop
or
push
mov
sbb
outsb
push
mov
sbb
mulb
sub
sbb
cmpsb
test
mov
sahf
lds
mov
orb
lock
jae
fadd
add
lahf
jne
jb
fstps
mov
mov
mov
jecxz
lds
incl
mov
je
mov
push
jl
pushf
cs
int
testb
das
mov
in
in
nop
inc
sub
les
dec
sub
into
cltd
mov
outsb
cs
mov
dec
lock
xchg
lods
aad
jle
pushf
lret
xor
xorl
jno
dec
pushf
nop
inc
mov
adc
iret
pop
sbb
mov
aaa
cmp
mov
test
mov
out
scas
ficompl
dec
sub
icebp
jnp
ficoms
shlb
jo
xchg
mov
call
sbb
out
xor
into
mov
cltd
sbb
push
pop
das
mov
mov
mov
aam
dec
cmp
jbe
or
push
add
call
mov
mov
out
push
sbb
sbb
fldl
mov
mov
mov
push
xchg
test
fld
jp
cs
out
ud0
jnp
enter
loope
inc
outsl
test
sti
xchg
xor
pop
jp
call
xchg
repnz
and
iret
jmp
popf
fbstp
push
mov
xor
fs
mov
xor
cmp
inc
mov
addr16
movsb
adc
test
xchg
repnz
mov
mov
decl
or
fdivs
fisubl
shrb
fwait
jecxz
out
sbb
jmp
mov
push
cmp
mov
mov
sbb
in
or
test
in
mov
lods
push
and
adc
cmp
xor
jge
movsb
sbb
lahf
inc
xchg
and
lock
sbb
ds
das
iret
pop
mov
xor
inc
rcr
mov
sub
outsb
lcall
push
dec
jo
loopne
fyl2x
mov
lret
outsb
pop
xor
fwait
jbe
mov
ds
jge
adc
and
lods
in
push
lret
iret
sub
in
lock
in
dec
out
int3
aaa
dec
jne
sbbb
inc
and
adc
sub
adc
inc
stc
decb
dec
leave
or
fdivs
cltd
jg
or
adcl
pop
jmp
add
mov
adc
aas
popa
xor
popf
je
cmp
sahf
jns
scas
mul
xor
test
inc
outsl
jo
pop
stos
pop
pop
xchg
cmpb
insb
push
mov
pop
lods
outsl
movsb
and
cli
add
adc
jecxz
or
sarl
pushf
out
adc
inc
popa
mov
fs
inc
xchg
dec
xchg
imul
cs
mov
jnp
popf
scas
fadds
or
sub
fwait
into
rsqrtps
mov
repz
mov
jnp
push
sahf
fst
adc
pop
mov
addr16
cmpsb
popa
popf
xor
loop
cmp
in
cmp
sbb
and
scas
out
movsl
into
in
dec
bnd
mov
adc
sbb
inc
cld
cmp
aam
testb
aaa
cmp
add
clc
pop
xlat
mov
or
push
fcomi
jge
adc
or
mov
mov
fcomps
in
cltd
pop
add
xlat
push
aad
pop
loope
push
push
sub
addr16
dec
add
pop
mov
pop
jns
xchg
outsb
mov
push
pushf
addr16
imul
xor
cli
sbb
les
sub
jo
sahf
push
stc
add
adc
mov
addl
imul
add
inc
fwait
xor
dec
dec
popa
lea
sbb
inc
out
mov
imul
shr
and
push
add
in
fsts
dec
sbb
insb
out
cmp
cmp
gs
pop
jb
sub
inc
mov
and
sub
xor
int3
insb
ret
insl
das
mov
out
cld
jge
mov
pop
jmp
push
mov
fisubrl
test
test
stos
out
mov
out
jmp
sub
aam
in
cld
or
aad
insl
add
jbe
and
xor
je
jb
xchg
mov
xor
loopne
movl
inc
pop
stc
mov
enter
push
mov
mov
andb
cld
sbb
aas
mov
pop
loope
test
ret
lds
sbb
inc
insl
push
jl
cmp
adc
repnz
mov
mov
test
cmc
movsl
mov
cmpsl
mov
dec
mov
test
or
mov
cmp
and
fmulp
lea
jb
jnp
pop
fld1
outsb
inc
ret
pop
inc
std
dec
aam
xor
and
insb
cmp
xchg
fdivrs
js
xor
imul
notl
push
ds
lret
repz
push
stos
movsb
int
xlat
pop
or
ljmp
mov
outsb
xlat
pop
repz
add
or
iret
in
push
mov
out
fidivrs
nopl
repnz
iret
testb
cmpsb
mov
or
aad
mov
cmp
insl
sbbb
shl
jnp
or
or
or
lahf
pop
lock
gs
cmp
jb
mov
xchg
sub
pop
jecxz
pop
int
movsb
les
aad
repnz
lret
xor
out
and
mov
sahf
pop
pop
outsb
pop
adc
cld
jge
cld
repnz
xchg
sub
cmp
inc
fs
sbb
adc
cmpsl
aaa
scas
pop
lock
aas
mov
ljmp
enter
in
xlat
mov
pushf
sub
test
loope
xchg
arpl
ret
aad
jo
lret
mov
mov
pop
jg
cmp
mov
in
mov
dec
arpl
scas
dec
lods
xlat
push
xchg
mov
xchg
adc
iret
push
fsub
aad
cmpsb
out
aam
adc
jle
pop
scas
cltd
fistps
or
dec
cmp
xchg
icebp
testb
and
stos
sarl
mov
mov
cs
cmp
popf
add
push
dec
and
sahf
mov
mov
lds
cli
scas
jno
push
mov
sub
mov
cwtl
sub
jle
adc
addr16
push
ror
dec
mov
inc
and
mov
inc
mov
push
test
push
sahf
cwtl
orb
add
sub
dec
shlb
inc
push
je
jp
adc
sti
xor
cmp
and
adc
cmp
jne
push
int3
mov
dec
cmp
pop
rclb
adcl
nop
and
lret
stos
jp
shlb
pop
push
dec
aas
or
popf
je
out
fsubrs
or
inc
jge
jmp
test
popa
ds
mov
das
cmpsb
xor
movsl
sti
cmpb
scas
sub
sub
lea
jle
in
mov
inc
pop
pushf
nop
pop
pop
add
ja
sbb
das
jno
in
lret
sarb
mov
push
mov
es
inc
jg
rorl
inc
or
sbb
push
ja
push
xchg
sbb
jmp
dec
add
outsb
jg
mov
push
adc
and
jb
and
add
icebp
adc
cmpsl
fiaddl
insl
inc
mov
mov
jne
out
push
and
push
in
xchg
je
lock
inc
pop
shrb
pop
lea
sbb
push
add
gs
jecxz
xchg
aad
dec
test
sbb
fstl
mov
hlt
ss
inc
rorb
jnp
and
repnz
dec
mov
ss
pusha
cmp
jp
out
bound
lock
inc
scas
mov
std
adc
mov
cmpsb
adc
test
sahf
gs
popf
movhlps
dec
test
orl
mov
stos
sti
lds
jg
int3
xor
xchg
or
mov
or
aaa
rorb
popf
inc
aas
gs
in
out
repnz
xor
rolb
cmp
xchg
jmp
push
jne
mov
jp
mov
lock
or
xchg
fbstp
int
cmp
xor
cmp
jno
pop
rcrb
mov
xorb
push
push
rclb
or
push
push
mov
add
repnz
mov
or
xchg
dec
fwait
mov
loope
lock
fiadds
popf
add
loopne
popa
fsts
jne
cld
inc
cltd
mov
push
mov
or
jge
xchg
jae
adc
dec
leave
mov
push
cmp
mov
mov
test
les
js,pt
pop
imul
je
adc
mov
jb
dec
xor
stc
fsubrl
fdivr
xchg
enter
jb
inc
mov
sub
aam
daa
in
daa
lods
jl,pn
jnp
push
mov
sysenter
jb
inc
js
xchg
aaa
daa
icebp
lods
test
into
gs
std
or
fnsave
aaa
or
shll
cs
arpl
ss
push
inc
int
mov
dec
stc
imul
xchg
inc
rclb
mov
pop
pop
adc
out
push
cs
nop
mov
bound
pop
fsubs
sub
std
dec
stos
lahf
es
test
mov
pop
xchg
nop
inc
lret
mov
push
jnp
fs
test
mov
inc
in
inc
push
repz
push
inc
push
or
xchg
mov
adc
movb
adc
push
test
adc
loopne
sub
aas
pop
out
shr
scas
jge
sbb
cmpsb
xchg
cmp
and
adc
dec
jmp
push
pop
jl
ret
addr16
sbb
mov
fdivr
sub
mov
jp
repnz
jbe
popa
stos
or
in
mov
dec
add
jle
mov
mov
xor
mov
sti
loope
js
jmp
ja
cmpsb
mov
pop
stos
and
mov
mov
imul
mov
push
jo
adc
and
loop
mov
jb
inc
rclb
dec
mov
mov
sbb
and
mov
inc
fs
dec
daa
lds
ss
fdivs
mov
xchg
fisubl
dec
sub
pop
inc
mov
fisubl
lret
xchg
das
js
imul
leave
xor
nop
dec
cs
mov
out
jae
popf
hlt
xor
data16
enter
test
mov
pop
push
mov
pop
cmc
nop
fwait
xchg
sub
xor
pop
sbb
das
lods
out
lods
std
push
xor
mov
push
mov
cltd
imull
adc
lds
out
loop
or
xor
jne
das
mov
fidivl
loopne
rclb
sbb
pusha
aas
out
and
dec
lea
shrb
aas
mov
popf
aas
mov
jnp
mov
lods
cmp
imul
icebp
cltd
mov
into
sarb
jecxz
push
into
out
popa
xchg
aad
push
stc
mov
sbb
outsl
cmp
divb
jl
movsb
loope
rorb
cmc
cltd
xlat
or
fwait
lret
divb
ss
xor
fs
or
xchg
movsb
sub
jno
xchg
push
pop
arpl
mov
repz
insl
dec
lret
popa
mov
cld
int3
fwait
dec
ljmp
dec
and
xor
pop
ret
sub
iret
je
mov
cwtl
mov
push
cmc
jmp
mov
sbb
fwait
push
sbb
shlb
sub
mov
sahf
std
mov
xchg
mov
jb
faddp
enter
aad
push
adc
jo
dec
sahf
loope
dec
pop
outsl
sti
sub
adc
mov
in
scas
pushf
mov
movsl
xor
pop
adc
rol
jb
mov
dec
std
mov
inc
pop
out
frstor
inc
adc
xorb
push
and
sbb
push
xchg
pop
jns
xchg
mov
rol
scas
xchg
dec
pop
xchg
xchg
loopne
xchg
jne
jp
mov
cmp
push
inc
jecxz
pushf
jp
in
lcall
mov
cmp
xchg
mov
rolb
dec
pop
sbb
or
mov
lcall
in
sbb
pop
push
cwtl
pop
add
and
mov
xor
lcall
jae
cmpsb
outsl
orb
or
fisubrs
add
inc
leave
sbb
mov
fidivrs
je
std
mulb
push
cmp
fwait
sub
sti
rcrl
push
sub
xor
sbb
cmpsb
cmp
xchg
test
popf
mov
jle
mov
es
or
mov
sub
or
stos
adc
orb
ds
push
jp
scas
popa
daa
inc
xchg
pop
dec
push
ret
inc
pop
lcall
xchg
sahf
mov
fdivrl
imul
out
xlat
dec
loope
movsb
ja
scas
cltd
daa
clc
inc
mov
and
mov
rorb
adc
pop
xor
cmp
or
or
ret
or
mov
lock
sbb
push
fistpl
mov
mov
jg
in
test
mov
imul
out
sub
xchg
mov
data16
mov
test
out
test
shl
push
fisttpll
rcr
push
lods
sahf
jp
pushl
dec
push
add
jae
sahf
xchg
dec
xchg
das
fs
and
jmp
mov
sub
push
xchg
mov
cli
pop
cmp
fwait
mov
mov
xchg
xor
pop
pop
jmp
adc
mov
inc
sahf
in
sti
movsl
mov
js
cs
imul
jge
mov
xor
stos
sub
push
pop
mov
test
lret
scas
sti
push
push
mov
jno
jo
inc
xor
pop
push
lahf
clc
cs
mov
orl
out
testl
push
jmp
xor
js
sbb
mov
jl
adc
mov
or
lahf
pop
movups
cmp
or
inc
xchg
and
jo
pop
sub
fmull
xchg
sbb
mov
sbb
aaa
inc
shrb
mov
mov
mov
xor
out
inc
sbb
push
sub
shrb
out
or
hlt
xchg
inc
adc
arpl
aam
xor
pop
lahf
test
sarl
xor
lret
lods
xor
xor
sbb
arpl
sbb
repz
add
and
cmp
or
sar
aad
popf
test
out
stos
arpl
fstps
sub
pop
std
or
or
xchg
add
pop
sub
add
arpl
in
shlb
repz
xchg
mov
pop
and
call
adcl
xchg
xchg
cmp
out
xchg
ds
cmp
push
jge
out
stos
adc
sub
mov
mov
test
pop
lock
jecxz
pop
cmp
imull
mov
mov
imul
shll
mov
call
add
xor
and
rcr
xor
mov
iret
or
orb
sub
fists
test
cltd
fadds
pop
or
pop
enter
outsb
inc
and
jmp
cmp
sbb
jl
loopne
fistpll
jmp
sub
cld
cli
aas
imul
sub
scas
stos
in
cmpl
jnp
out
jmp
push
push
arpl
xor
dec
mov
je
ljmp
sbb
imul
movsl
and
pop
inc
mov
addr16
sbb
adc
sbb
andl
ret
ds
add
cmc
fwait
dec
mov
data16
rorb
jns
fstpl
xchg
cmp
mov
push
add
scas
lods
push
xchg
mov
test
loopne
inc
mov
fisttps
filds
les
sub
mov
and
sub
ljmp
jb
loop
js
repnz
and
xchg
fimuls
adc
test
shll
repz
push
jns
insl
mov
cs
mov
adc
cmp
rcrb
mov
pusha
dec
pusha
in
mov
cli
sub
popa
push
dec
mov
cmpsb
lahf
or
insb
rcrb
jne
mov
cmpsb
jae
jg
repnz
data16
scas
in
pop
test
ficompl
pop
ljmp
movsb
jecxz
insb
push
imul
pop
mov
ja
xchg
xchg
scas
in
mov
cli
and
xchg
mov
fldenv
sbb
test
jb
sub
cltd
and
bnd
cld
push
dec
and
or
into
movsb
scas
xchg
dec
add
mov
push
and
or
fstl
mov
jge
lock
push
loop
cmp
inc
push
push
pop
mov
test
dec
in
pop
mov
lock
pusha
lahf
repz
or
xchg
adc
pushf
jnp
loop
std
jge
std
sarl
mov
jnp
in
loopne
sub
xchg
mov
dec
add
in
ret
jo
xchg
jns
inc
enter
inc
les
mov
pop
sti
js
je
xchg
or
sbb
add
xchg
mov
xchg
dec
pop
mov
jo
adc
push
and
pop
lret
sarb
push
lret
test
jne
mov
or
rolb
sub
clc
enter
xchg
jg
inc
mov
xchg
cli
xor
pop
xor
mov
popf
aaa
adc
incl
aad
mov
add
fisubrl
testl
lahf
adc
jg
push
adc
inc
pop
push
add
in
hlt
cmpb
je
fcoml
add
ss
xchg
mov
dec
mov
inc
or
cs
or
adc
out
rorb
dec
mov
jns
lret
movsb
addr16
shl
xlat
std
push
imul
stos
loope
adc
lahf
jno
stos
jnp
fcoml
popa
push
arpl
push
divl
sub
subb
cmp
inc
mov
sbbb
rol
psubsw
mov
inc
push
pop
jp
mov
xchg
mov
push
out
jb
jns
cmpb
out
test
jb
ds
sbb
add
jmp
mov
inc
out
addr16
xor
dec
movsb
jnp
inc
jnp
dec
mov
inc
push
pop
jl
iret
cmp
cmp
test
add
jno
pop
cltd
sbb
pop
xchg
dec
loopne
sbb
mov
shlb
lock
jg
mov
sub
out
push
leave
in
pop
dec
pop
sbb
mov
stos
repnz
xchg
dec
das
in
push
mov
cmp
lret
mov
cmp
ficoml
in
mov
or
aas
push
fcomi
shll
push
loop
xchg
mov
mov
sbb
mov
lret
xchg
lret
push
or
and
jg
int3
mov
lret
mov
push
inc
mov
adc
in
rclb
idivl
outsl
bound
inc
jecxz
dec
clc
push
pop
dec
es
out
pop
mov
bound
mov
inc
lea
jo
call
cltd
and
popa
and
insl
xlat
test
outsb
dec
outsb
add
sub
adc
pop
and
leave
cmc
fwait
mov
lahf
cltd
lahf
cmp
cltd
jae
out
adc
cwtl
mov
push
adc
pop
fdivr
xor
cmp
fcomp
jg
cli
jg
pop
push
mov
lods
mov
sub
xor
nop
mov
in
add
cmpsl
shrl
jecxz
pushf
push
nop
fcmovbe
push
cmpsl
inc
mov
jns
insl
jne
stc
push
xchg
xor
lret
pop
or
popf
mov
add
mov
and
pushw
push
das
inc
movsb
jo
into
mov
adc
fnstenv
mov
lods
and
rcrl
dec
aas
or
fs
sbb
cmc
out
clc
push
mov
sub
pop
pop
lcall
cs
cmp
insb
jns
pop
faddl
dec
outsb
testb
jle
andl
movsb
lcall
insb
and
out
imul
dec
jbe
fsub
adc
xor
and
xchg
cltd
mov
sbb
mov
mov
in
nop
lcall
out
adcb
mov
inc
or
xor
mov
fcoms
scas
popf
mov
idivl
dec
pop
cli
sub
mov
or
push
sub
cld
push
lds
cmpsb
jle
movsb
push
ljmp
fldenv
pop
cmp
pop
inc
or
or
test
fcompl
and
pusha
push
pop
int
gs
push
repnz
bound
xchg
and
aaa
sbb
sub
loop
add
mov
mov
mov
or
pusha
add
push
bound
cli
dec
daa
sbb
sub
out
cmp
jae
call
xchg
mov
jmp
nop
sbb
cmpsl
insl
pop
popa
push
call
shll
std
shrl
mov
ret
call
test
jp
xor
sub
cmp
rcll
dec
lret
sbb
cs
add
add
inc
xchg
jae
out
jbe
insl
sbb
jmp
jmp
into
adc
or
xchg
sti
xor
inc
dec
dec
jl
repnz
add
xchg
mov
lret
mov
insl
movsb
mov
stos
adc
test
test
inc
lcall
test
sub
cmp
and
dec
adc
sarb
iret
sbb
adc
pop
push
dec
xchg
in
push
jg
inc
xchg
clc
mov
addr16
inc
fidivrl
push
cmpl
mov
out
inc
out
aam
inc
push
orl
xchg
lods
pusha
pusha
xlat
and
or
arpl
and
rcll
dec
cmp
pop
loop
mov
in
jo
push
fstpl
cmpsb
xchg
sub
in
lds
sub
test
add
xchg
test
popa
cmp
mov
mov
mov
bound
lret
inc
push
xchg
xchg
push
in
lcall
test
xchg
jl
bound
mov
sbb
daa
insl
jmp
popa
add
mov
cli
lret
xchg
jno
xchg
mov
xchg
pop
add
mov
xchg
and
ljmp
movsl
adc
xchg
jmp
fldl
rcl
cmp
lods
ja
pop
xor
or
add
xchg
into
out
int3
enter
jne
adc
mov
aas
or
xor
call
push
dec
pop
repz
ja
xor
inc
jo
jge
dec
daa
das
addr16
cmp
test
push
and
std
push
sub
imul
icebp
pop
mulb
inc
adc
dec
and
push
das
mov
out
movsb
pop
jecxz
push
daa
data16
out
out
xchg
loopne
or
stc
pop
xchg
fisttpl
adc
aam
test
xor
mov
sbb
push
lds
push
or
jmp
cmp
adc
es
hlt
sahf
adc
cmp
pusha
inc
lods
fs
and
fsubl
sbb
int
sbbl
ljmp
pop
shrl
fstp
insl
or
les
sbb
enter
nop
js
js
int3
ficoms
rep
stos
pop
lds
add
repnz
xor
cmpsl
outsb
xchg
mov
sti
popf
stos
pop
ret
insb
lret
push
es
xchg
call
daa
jnp
adc
mov
scas
sub
bound
mov
aad
xor
jns
sbb
ds
filds
pop
icebp
js
loop,pn
xlat
insl
scas
sbb
mov
pop
cld
push
gs
xor
shll
andl
stos
int
dec
xor
in
sbbl
jno
cmp
rcrb
cld
cmp
sub
sahf
cmp
ljmp
lahf
dec
int
xchg
stc
mov
cmp
test
insl
imul
xor
dec
cmpsl
cmp
inc
cltd
ds
or
or
out
sti
decb
cmp
loopne
mov
push
test
and
pop
jo
adc
pop
dec
push
ret
xchg
pop
fistps
cs
mov
xlat
in
pop
push
jmp
xor
or
lcall
lret
xchg
daa
repnz
out
shr
push
xor
adc
mov
sbb
adc
xchg
stos
push
jp
jne
js
call
pop
add
bound
xlat
nop
xor
movsb
mov
jns
sub
ret
sbb
mov
cmp
cmp
stos
sbb
push
dec
sbb
sub
mov
ds
hlt
lods
aas
sahf
mov
add
mov
rcl
pop
scas
jp
push
call
cmp
std
dec
testb
sbbl
and
xor
add
out
ret
or
nop
inc
test
cmp
cmp
mov
xchg
out
lea
cmpsb
xor
xchg
lret
dec
mov
scas
cmp
lcall
mov
lea
in
sahf
mov
test
aam
inc
loopne
mov
out
xlat
inc
out
xor
cld
ss
pop
sbb
out
xor
adcl
mov
sub
loopne
ret
js
repnz
lods
cwtl
mov
fdivrs
lea
into
cwtl
inc
js
fimuls
pop
in
movntps
repnz
shlb
into
push
xlat
scas
aas
xchg
xchg
enter
mov
arpl
es
fstl
scas
lcall
inc
sub
negl
ret
mov
stos
aam
lahf
mov
cmp
hlt
ret
fisubrs
int
cltd
and
movsl
cld
dec
sub
outsl
ss
aam
xchg
jle
cli
add
inc
iret
sub
xchg
or
xchg
dec
filds
out
cwtl
sub
fwait
je
xchg
add
jg
fisubs
xor
mov
jmp
fsubrs
adc
mov
stc
icebp
inc
jecxz
jne
and
jge
dec
test
stos
icebp
ret
mov
lods
pop
xor
dec
mov
add
sbb
sbb
int
sub
insl
mov
mov
aad
mov
inc
jo
jo
shll
xchg
ds
and
jmp
ficoms
lret
adcl
or
mov
mov
mov
cmp
mov
add
sub
sub
test
xor
jge
shrb
cmp
sub
stos
loop
mov
sbb
push
and
loopne
jns
adc
imulb
lea
mov
push
shrl
pop
cmp
xchg
push
push
adc
rcl
and
push
cmp
gs
rol
aam
jp
mov
pop
lods
mov
idiv
adc
inc
mov
push
loop
loope
inc
mov
push
sub
mov
sbb
mov
int
cmp
xor
mov
or
dec
stos
pop
xchg
mov
aaa
sbb
mov
pop
or
jo
mov
jp
jg
bound
gs
mov
pop
and
cs
iret
hlt
mov
ss
in
clc
pop
lret
dec
sbb
xchg
pop
pop
mov
mull
xor
std
jns
outsl
loop
fwait
mov
rorl
outsl
mov
outsb
add
div
cmp
pop
or
fidivl
cmp
or
leave
out
call
xlat
pop
push
cltd
test
insb
fs
push
or
movsl
fidivs
int
mov
and
lcall
cltd
inc
ds
or
shrb
push
cltd
ret
in
mov
mov
mov
mov
xchg
fsts
mov
jle
in
insb
shrb
mov
and
js
aas
push
imul
xchg
outsb
aam
and
ret
mov
adc
dec
add
fstpt
add
cwtl
inc
jecxz
and
in
jo
outsb
pop
cmp
movsl
push
imul
push
mov
mov
jmp
out
aad
int
fcmovbe
dec
popf
cmp
loop
pop
dec
fidivl
in
aaa
xchg
int
mov
or
iret
push
mov
mov
mov
es
imul
dec
cmp
mov
jae
fstps
nop
or
aam
cmp
lods
push
dec
cmp
inc
lret
xor
jle
imul
es
dec
lret
pusha
mov
cmpsb
sub
xchg
outsl
flds
loop
lret
push
pop
cmpsl
packsswb
fmull
xchg
mov
mov
cmp
mov
push
outsb
inc
jg
enter
out
imul
movsb
mov
mov
xchg
aad
push
out
cmp
ficoms
lret
push
pop
push
and
pop
add
test
sti
pusha
scas
insb
pop
shr
push
adc
sbb
or
fnstenv
mov
sub
pop
cmpsb
arpl
js
and
pop
int
ljmp
out
dec
cld
dec
adc
pop
push
and
adc
mov
jge
cmp
adc
cmc
push
cwtl
repnz
cmpsl
pop
jg
mov
inc
imul
fdivrl
lret
cwtl
mov
aam
mov
jo,pn
cmp
mov
pop
sbb
pop
lahf
jno
push
and
and
mov
inc
xchg
jne
xor
loop
push
inc
icebp
cwtl
mov
dec
fs
pop
jp
jg
dec
sbb
xchg
mov
mov
mov
xor
mull
and
dec
mov
insb
mov
fs
out
or
inc
insb
mov
cs
in
add
leave
aam
mov
or
mov
test
aas
out
lret
mov
sbb
xchg
sub
das
mov
jnp
int
repnz
ficompl
in
push
sbb
push
add
add
sub
sti
cld
gs
movsb
loopne
stos
mov
ret
push
mov
mov
mov
je
notl
jo,pn
imul
push
rolb
jo
jne
pop
dec
dec
sbb
cmpb
xchg
mov
fucom
sbb
jg
imul
jl
xor
loopne
xchg
out
mov
add
iret
imul
and
pop
test
shlb
xchg
int3
sti
cwtl
mov
popa
pop
mov
adc
jge
mov
incb
shll
dec
scas
cs
movsl
shlb
les
adc
in
adc
sub
popa
push
sub
insb
les
pushf
pop
into
pop
sbb
lods
jo
sti
jmp
roll
addr16
sbb
test
arpl
movsl
or
sub
nop
dec
mov
jecxz
mov
adc
mov
jno
aam
outsb
jnp
in
add
mov
inc
push
or
xor
fbld
or
test
icebp
js
cmp
dec
cmpsb
push
aas
sbb
mov
shlb
roll
push
pushf
std
mov
stos
xchg
mov
mov
sub
fnstcw
adc
pop
mov
mov
into
inc
pop
lds
ss
xor
adc
sbbb
nop
inc
enter
ljmp
pop
aad
pop
xchg
mov
push
mov
push
mov
inc
leave
clc
mov
test
jl
iret
imul
xchg
lds
mov
fiaddl
mov
sub
mov
and
inc
mov
jo
out
pop
mov
outsb
cmp
dec
loop
lds
xchg
inc
mov
adc
movsb
and
into
xor
ljmp
push
jl
mov
jbe
aas
outsb
cmpsb
aaa
jmp
dec
or
mov
daa
imul
sbb
pop
push
ss
mov
add
xor
js
jbe
xchg
lea
fcmovnbe
pop
aaa
push
adc
adc
xor
hlt
mov
sub
ret
pop
pop
fistps
push
fisubs
mov
fdivl
in
std
pop
jbe
mov
andl
test
fistpl
inc
jo
push
mov
jnp
and
mov
xor
ja
cwtl
rcl
jno
aaa
xchg
pop
out
popa
or
or
cmp
lret
les
pop
loop
or
testl
mov
aad
xor
sti
and
dec
sbb
add
ljmp
out
mov
mov
out
test
or
add
cmp
xchg
jecxz
add
inc
push
xchg
lds
mov
or
cmpb
sbb
mov
xor
cmp
inc
inc
add
iret
sarl
mov
lret
jbe
inc
add
xchg
jno
add
insb
cmp
mov
jns
jo
add
outsb
into
call
dec
inc
test
xor
movsb
in
in
stc
xor
sbb
xchg
outsb
adc
lahf
inc
xor
jb
sub
addr16
sub
jb
movsl
pop
mov
xlat
call
sub
pop
jns
incb
or
push
es
pop
sbb
cld
call
or
clc
add
imul
js
test
pop
mov
test
ja
cmp
mov
pop
stos
out
aas
jo
imul
idivb
jge
test
jb
xor
lret
mov
add
mov
popaw
shl
push
jge
lock
lds
dec
cmp
adc
mov
dec
ljmp
sahf
cmpsl
sub
gs
lahf
fcoms
pop
adc
and
jmp
subl
dec
xchg
jmp
mov
mov
outsb
ss
ja
add
scas
lcall
clc
adc
stos
clc
xor
sbb
jb
mov
mov
push
mov
dec
mov
cs
mov
repnz
outsb
sti
sbb
out
andb
mov
and
inc
pop
lahf
mov
mov
mov
xorb
lcall
aad
fistps
mov
mov
fstl
arpl
das
and
in
dec
push
xor
test
sahf
inc
and
jl
mov
mov
int3
push
cmpsb
cmpsb
fists
popa
pop
xchg
cs
sub
pop
loopne
inc
sub
xor
in
adc
push
insb
pusha
loope
or
std
jne
out
les
push
pop
xchg
leave
sbb
stc
inc
ret
push
cmp
mov
xor
and
and
rol
jle
dec
mov
and
jge
xchg
inc
inc
test
jnp
movsb
sti
pop
sub
sar
jmp
pop
test
repz
mov
out
jmp
mov
out
cmp
pop
hlt
mov
lret
mov
in
ficoms
dec
jo
push
inc
nop
jl
adc
sub
in
addb
cld
mov
xor
jnp
das
add
lcall
inc
ds
ljmp
call
test
push
dec
insl
push
add
cwtl
cmp
loopne
dec
jp
loopne
pop
jmp
xchg
adc
movsb
loop
in
mov
mov
shll
insb
gs
jmp
add
dec
aas
xor
in
jg
mov
xor
mov
mov
lahf
cltd
rolb
push
xor
sbb
dec
xchg
outsl
lahf
sub
mov
mov
in
add
aas
add
call
imul
mov
into
mov
push
ret
movsl
mov
jae
fldenv
arpl
sub
repnz
mov
push
movzwl
scas
packssdw
mov
mov
sbb
bound
lods
or
int3
or
sbb
ss
loop
inc
loop
dec
lock
and
add
lea
jbe
in
and
je
fwait
mov
out
add
jmp
lods
je
fisttps
fidivs
ret
shll
icebp
int
mull
jle
icebp
mov
cmc
neg
cmp
mov
cmpsb
das
push
andb
ret
sub
into
mov
mov
mov
adc
iret
mov
popf
mov
add
lock
xchg
cmpsl
aaa
jo
pop
lea
add
lcall
movsb
mov
push
sbb
out
add
dec
fnstcw
xor
sbb
aam
js
pop
leave
add
lods
xchg
pop
inc
sbb
cmp
mov
mov
pop
inc
in
lret
push
mov
xor
xchg
lcall
add
inc
call
addl
and
adc
fstl
add
mov
fldcw
cli
cs
cwtl
test
ftst
mov
inc
inc
sub
shll
outsl
pusha
je
shlb
jp
sbb
jnp
mov
loop
mov
cltd
out
loope
sub
int
dec
data16
add
xchg
out
cmc
iret
lea
jbe
sarl
repnz
mov
in
mov
mov
push
pop
mov
pop
lret
outsl
inc
jo
lret
dec
scas
mov
mov
scas
movb
shr
aaa
push
adc
cmpsb
push
jns
stos
movsl
mov
push
lea
mov
xor
jae
gs
mov
sbb
lock
dec
pop
jb
xchg
pop
jmp
nop
cltd
pop
rolb
adc
out
movsb
adcb
sub
add
or
ljmp
jno
in
std
push
adc
js
je
aad
jne
mov
aad
daa
into
repz
call
mov
fmul
jp
lret
dec
sti
fidivrl
jae
rorl
or
dec
mov
test
adc
les
adc
mov
scas
inc
jbe
mov
lret
cmc
cmp
mov
out
sub
xchg
dec
xor
in
add
mov
and
xor
fwait
or
aam
into
ljmp
mov
loop
roll
les
lds
cmp
out
popa
mov
mov
mov
mov
data16
dec
mov
sahf
jne
cmp
nop
test
in
mov
adc
pop
shl
iret
in
aaa
jle
out
lret
ret
pop
enter
lcall
sahf
mov
test
mov
sub
imul
movd
mov
sub
dec
cmp
jbe
mov
mov
jmp
xchg
out
out
dec
mov
inc
cs
push
mov
or
test
pop
test
fs
jecxz
test
fsub
scas
inc
js
dec
ja
adc
ljmp
and
cld
inc
and
mov
ret
test
test
cmpsb
jmp
adc
mov
lretw
jge
lods
shll
adc
es
sahf
fdivs
dec
jmp
dec
fs
and
out
or
pop
les
push
dec
xchg
scas
sbbl
shl
sarb
insb
leave
jb
movsb
mov
jae
mov
ss
xchg
and
jmp
dec
mov
pop
mov
xchg
loopne
and
mov
int3
in
mul
and
in
mov
sbb
mov
test
sbb
iret
lock
sahf
sbb
pop
mov
and
je
and
out
inc
cmp
pop
cmp
sub
cwtl
push
and
and
scas
xchg
mov
int
add
sub
out
adc
addr16
ss
xchg
cmpsb
je
stos
mov
shr
inc
stos
fwait
mov
xor
enter
fldpi
sarl
push
inc
sbb
and
stos
addb
cmc
inc
loope
aas
test
scas
stos
mov
xchg
xchg
add
jnp
xor
popf
scas
pop
out
add
mov
nop
addl
jb
jns
cli
aad
pop
or
xchg
insb
jbe
and
fisttpll
hlt
sbb
fs
dec
add
mov
shll
sbb
and
or
xchg
lods
popf
gs
out
fnstsw
jae
mov
fmull
leave
mov
push
fildll
jne
cmpsb
jle
pop
jl
xchg
subb
or
xor
ja
mov
imul
movsl
or
jno
pop
das
aaa
pop
repnz
aas
jbe
or
push
insb
out
sahf
scas
add
das
add
xor
cmp
push
fwait
andb
aaa
xchg
je
cwtl
fisubrl
pop
mov
sub
fcmove
sti
jo
in
jnp
push
popf
push
adc
cmpsb
out
jg
std
mov
inc
lods
dec
jmp
pop
push
fisttpl
in
sahf
aas
out
fsubr
mov
lahf
out
inc
sbb
repnz
inc
rcrb
in
test
and
pop
mov
jle
sbb
ret
lret
roll
lcall
inc
xchg
out
test
rorb
cltd
divb
orl
inc
cmc
mov
popf
aaa
cmpsl
jecxz
mov
sbb
add
loop
mov
int
in
test
nop
fadd
pop
and
lcall
mov
stc
mov
inc
repz
imul
sbb
inc
pop
sahf
test
adc
cmp
mov
shlb
ret
jns
cmp
xor
and
imull
insl
in
dec
adc
clc
xor
fldl
xor
aaa
xchg
inc
lock
jg
scas
lods
sub
or
das
or
cmp
mov
inc
and
sub
dec
dec
jnp
inc
push
pop
push
arpl
outsl
shll
nop
fsub
add
ud1
dec
aad
cmpsb
leave
push
and
and
xlat
notl
lret
lods
out
les
or
arpl
pop
inc
push
xchg
repz
add
pop
fcomi
cmp
movsl
or
sbb
cmp
lcall
jle
adc
movsb
mov
xchg
aam
inc
jmp
fs
mov
fcmovu
sub
in
or
push
pushf
mov
push
lret
mov
mov
xor
mov
js
or
sbb
js
mov
cld
in
push
js
mov
aaa
and
xor
daa
lahf
xor
sbb
das
ss
iret
xor
arpl
lds
mov
jnp
dec
dec
cmp
inc
lock
and
and
pop
xchg
push
ret
rcll
or
lods
call
adc
jecxz
jbe
push
cltd
stos
jge
or
jg
mull
mov
cltd
dec
fwait
call
imul
int3
mov
cld
mov
pop
loopne
shr
push
dec
loope
adc
push
adc
imul
jecxz
cmp
aaa
je
sti
push
dec
mov
inc
pop
mov
cmp
hlt
jl
dec
nop
cmc
lcall
pusha
push
dec
pop
cmp
icebp
cmp
mov
lds
and
bnd
imul
dec
dec
pop
lret
out
ret
lret
popf
jno
leave
mov
cmp
sbb
mov
vpsrlw
sbb
jae
push
in
push
in
dec
push
enter
int3
idivl
nop
lret
ss
mov
xlat
insl
mov
sub
pop
std
jle
dec
insb
dec
fwait
sti
or
xchg
fwait
inc
inc
fs
add
pop
fnstenv
xor
icebp
mov
in
lock
mov
push
adcb
pop
out
cmp
or
test
loop
dec
adc
mov
xchg
mov
xchg
cwtl
adc
lret
repnz
dec
js
mov
bound
test
cs
gs
sbb
jno
xchg
mov
lods
in
ss
cltd
test
jae
add
int3
xchg
idivb
into
cwtl
or
movsw
mov
cmp
mov
and
push
mov
aam
sbb
scas
jb
out
push
leave
in
mov
mov
or
mov
out
add
testl
cmpsl
or
cld
sarl
sbb
jmp
in
aas
cltd
push
stos
jno
and
adc
lret
xchg
mov
mov
lcall
rep
push
mov
cmpsl
push
push
lds
test
jb
dec
pusha
mov
aaa
lahf
xchg
mov
incb
daa
mov
mov
in
push
lret
es
js
popf
pusha
dec
ret
sub
fstpt
bound
fcmovbe
movsb
jnp
cwtl
std
xor
and
into
xor
inc
test
sbb
mulb
jnp
lret
inc
jns
fbld
loope
sub
sub
xor
pop
jb
mov
subw
cmp
daa
push
jnp
xchg
mov
test
sub
loope
jl
mov
bound
mov
xchg
outsl
inc
lods
je
add
js
loop
and
outsb
mov
loop
bound
mov
fstp
cmp
and
add
jo
out
and
sbbl
inc
add
call
add
sbb
pop
jg
ss
testb
negb
aaa
loop
push
popf
pop
mov
pop
fsubrl
lret
jp
add
fucomp
insb
addr16
xor
mov
cmpsb
xor
cwtl
popf
aaa
mov
in
ljmp
out
dec
pop
sub
les
sbb
out
stos
cmpsb
out
js
jmp
sbb
mov
test
cmp
test
and
andl
fsubs
jo
push
outsl
jmp
je
pop
loopne
inc
insl
clc
jb
out
int3
int
in
repz
mov
xor
js
lock
mov
push
daa
add
movsb
fwait
mov
aad
or
push
sbb
push
sub
addr16
mov
lahf
pop
sbb
aam
filds
cld
outsl
or
fwait
stos
lret
fwait
daa
loop
jle
xchg
pop
iret
fsubl
aas
mov
sbb
dec
frstor
aaa
push
lods
std
insl
aaa
mov
or
mov
shlb
cmpsl
sbb
mov
push
pop
push
data16
or
pop
out
lahf
stos
inc
cmp
and
mov
iret
inc
aam
call
fs
and
lcall
test
lea
mov
lea
push
popl
pop
jbe
sti
mov
cmp
fistpll
pusha
sub
fwait
mov
pusha
insb
jne
cmp
clc
arpl
ret
les
rorl
dec
hlt
xchg
xorb
outsl
nop
xchg
adc
je
xchg
adc
loop
jnp
out
or
cmc
push
jb
dec
jmp
fwait
xchg
je
mov
mov
lock
cwtl
mov
das
in
enter
jl
jb
leave
std
push
mov
adc
loope
xorps
cmp
outsl
inc
add
or
mov
inc
adc
cmpsb
in
fwait
cli
repnz
push
out
mov
aas
mov
mov
aam
jl
rorl
dec
push
imul
jmp
addr16
sub
pushf
movsl
push
xchg
in
pop
sub
adc
and
xchg
out
jg
mov
ror
loope
es
push
aam
mov
fistps
rcrb
or
std
arpl
fcoms
les
inc
loope
add
sbb
jo
push
arpl
lcall
enter
xlat
out
inc
ds
imul
sti
adc
sub
int
dec
notl
mov
lret
int3
mov
out
les
dec
repz
mov
adc
mov
icebp
rorl
xchg
xchg
iret
fdivrs
andl
ljmp
or
push
xchg
je
inc
hlt
pusha
rclb
leave
sub
jmp
pop
inc
mov
add
push
cld
stos
fmull
in
das
lods
enter
movsl
lods
inc
arpl
jle
xlat
xor
pop
das
push
fadds
xchg
ss
out
outsb
pop
stc
in
sbb
jo
sbb
push
add
and
test
les
or
aas
movsl
int3
js
cmp
push
aas
add
bound
aam
fmull
mov
mov
lcall
mov
cmp
adc
inc
out
das
fiaddl
into
nop
sbb
imul
pop
fwait
pop
ficompl
movsb
fadds
ret
add
imul
inc
sub
xor
scas
fildll
loop
lret
scas
js
mov
adc
int
xchg
loopw
loopne
jbe
enter
aad
std
mov
push
cmp
and
mov
out
incb
movsb
cli
push
mov
jmp
test
sbbb
cmp
and
ror
mov
dec
test
dec
add
cltd
popa
icebp
dec
inc
in
imul
bound
cmp
into
aad
lods
or
cmp
push
cmp
dec
movsb
jbe
xchg
mov
dec
es
insb
imul
push
mov
fnstenv
sti
xchg
push
ss
sbb
inc
xchg
push
call
mov
sbb
and
leave
dec
sbb
sahf
push
fidivrl
xchg
ret
sub
sub
aam
lret
fidivs
dec
add
push
inc
arpl
icebp
mov
and
push
cli
scas
enter
pop
mov
mov
shrl
leave
imul
sahf
cmp
sub
movsl
out
sbb
mov
push
rorl
dec
fbld
dec
adc
addr16
lds
adc
cmpsl
cli
mov
out
and
sbb
jnp
cmp
xorl
shll
cmpb
mull
cli
pop
fsubrl
mov
js
push
adc
fs
imul
or
xchg
jecxz
mov
mov
mov
pusha
or
mov
out
cmp
or
lods
movsl
int3
inc
aaa
insb
aad
out
xor
xchg
pop
inc
int
lret
lret
pop
pop
xchg
lods
clc
stos
dec
ss
mov
outsl
or
pop
jo
daa
adcb
xchg
mov
fstl
add
inc
cli
cmp
lret
call
push
and
dec
cli
push
shrl
aaa
and
xchg
stos
mov
addb
jb
mov
fstps
popa
fcmovnu
mov
in
pop
cltd
sub
jb
cmp
outsb
mov
jns
jge
insb
testb
jnp
and
cmp
jg
cmp
add
push
sub
cmp
loop
iret
clc
stos
mov
mov
gs
scas
mov
mov
addr16
cmp
xchg
loope
jg
pusha
icebp
lock
xor
iret
add
popa
pushf
rcr
or
shll
cmp
jl
pop
pop
xchg
dec
add
call
enter
pop
cmp
cld
aam
push
movsb
out
dec
or
and
cmc
data16
lods
fstpl
lret
jno,pt
test
rcll
fsubr
mov
outsl
xchg
inc
hlt
daa
je
xchg
je
and
adc
pop
fistl
outsb
sub
lea
xchg
and
into
jne
xchg
sub
popf
in
pop
imul
jnp
icebp
and
pop
dec
loopne
jg
push
push
and
jbe
fiaddl
aam
sub
xchg
cltd
jmp
xlat
cs
inc
pop
je
or
in
repz
aam
xlat
aad
ss
push
leave
xchg
mov
test
leave
add
push
fcompl
bound
insl
mov
push
je
adc
clc
mov
data16
dec
ss
cmp
cmp
sub
mov
loop
aaa
mov
jp
xlat
pop
cmpsl
adc
je
mov
xchg
jne
pop
jo
dec
mov
and
xchg
aas
inc
loop
xor
cli
add
add
outsl
add
fisubrs
mov
rol
das
adc
jecxz
bound
addb
jno
push
adc
ljmp
or
test
or
lret
dec
stos
mov
fwait
inc
lods
jge
mov
inc
sbb
imul
cmp
addl
sub
jbe
cli
adc
sahf
jb
lock
insb
aad
jno
sbb
dec
je
mov
aam
pop
jo
dec
nop
call
adc
inc
lret
loop
and
sub
xchg
jmp
clc
icebp
push
jecxz
jno
pusha
lahf
imul
rol
aam
icebp
mov
scas
or
repz
out
xor
cmp
jo
addb
sub
repz
dec
sub
sub
clc
xchg
or
frstor
std
in
jne
adc
jns
add
shlb
jno
test
or
cmp
mov
mov
mov
mov
popa
push
sub
ror
repnz
fimull
mov
in
rcll
ret
jns
in
adc
lret
fcmove
dec
loop
pop
rcr
clc
cmp
and
push
xchg
and
pushl
jmp
cltd
bound
rcll
sub
mov
fwait
shll
adc
bound
stos
jmp
fmuls
sbb
and
orb
movsb
aad
js,pn
jnp
xor
sbb
aam
inc
mov
push
out
jmp
xor
mov
mov
ss
lock
dec
sahf
in
lock
fs
inc
pop
sbb
xchg
add
int
push
sub
stc
jl
sub
xchg
jmp
pop
clc
dec
into
fwait
and
shl
nop
movsb
xor
jp
inc
fstpt
repz
clc
sbb
popf
dec
xchg
jl
icebp
add
lods
fstl
sub
mov
rorl
xor
sub
sbb
and
push
addr16
or
lock
int
lahf
cmp
xor
dec
add
cli
daa
imul
jo
adc
or
mov
out
jo
mov
pop
loopne
mov
sub
add
insb
lods
xor
fisttpll
lods
jb
mov
mov
add
inc
subb
nop
xchg
mov
ljmp
add
add
dec
dec
imull
repz
int3
jb
sbb
lods
mov
jle
and
repz
movsb
pop
fcmovne
lods
sub
jle
pop
or
xchg
shll
adc
cmp
or
jne
in
cmp
or
mov
xor
faddp
inc
xchg
lea
jl
gs
adc
loope
push
fnstsw
sar
int
push
jb
in
and
lcall
adc
lock
shlb
or
push
push
loopne
mov
in
loope
ja
jp
out
mov
js
ds
cli
and
in
mull
lcall
loop
pusha
adc
push
test
xchg
fisttpll
daa
mov
or
and
adc
mov
dec
or
jg
and
rolb
lods
ss
out
and
push
pop
mov
pop
flds
mov
into
mov
mov
adc
mov
test
pop
loope
sub
mov
push
xchg
mov
pop
je
mov
push
xchg
inc
push
inc
adc
fs
pop
inc
xor
mov
mov
add
cltd
add
lods
or
mov
test
daa
cmc
hlt
cmp
cmp
sub
inc
inc
fcomi
xor
testb
and
in
push
mov
lea
movsb
cwtl
insb
dec
pop
scas
sbb
mov
or
scas
push
insb
out
jo
dec
or
daa
dec
or
push
int3
jge
mov
pop
pusha
shl
xchg
ret
pushf
adc
addb
dec
imul
call
inc
fwait
ds
jbe
stos
into
xor
cmp
movsb
dec
jmp
xor
insl
or
test
jmp
sub
mov
mov
xor
std
mov
mov
add
mov
sti
xor
sub
add
insb
test
repz
mov
xor
hlt
cli
jb
aaa
inc
adc
xchg
sbb
mov
adc
sbb
lea
rcrl
mov
ret
xchg
and
dec
mov
xchg
ret
sbb
call
lret
shll
filds
push
insb
xor
adc
or
pop
inc
cmpb
push
mov
cltd
test
xchg
lret
fsubrs
inc
fisttps
daa
pop
faddl
cwtl
cltd
fisttpl
jl
loop
lock
mov
cmp
pop
mov
mov
test
xchg
inc
aad
dec
roll
lcall
jmp
jbe
push
inc
int3
mov
out
popl
repnz
pop
lahf
enter
adcb
popf
clc
lcall
sub
push
popa
mov
ja
das
les
xor
test
daa
into
jne
enter
or
mov
pop
push
ret
lahf
mov
insl
clc
and
jns
enter
test
mov
cmpsb
lods
pop
push
mov
popf
xor
call
insl
jb
lahf
cmp
push
jns
insb
pop
imul
fistl
mov
push
add
rcrl
push
mov
fmuls
imul
mov
xchg
lahf
push
insl
ret
xor
dec
sub
push
mov
aas
adc
in
mov
imul
add
mov
pop
add
nop
aaa
loope
xchg
mov
test
jg
shlb
sbb
fidivrs
dec
out
xor
mov
push
aaa
outsl
or
jge
insl
popf
xor
inc
mov
popa
imul
repz
pushf
dec
xchg
cmp
jno
push
leave
sub
pop
mov
bound
xchg
inc
xchg
dec
out
pushl
imul
movsl
dec
jg
xlat
or
inc
mov
dec
mov
insl
clc
test
out
mov
xchg
fildll
sti
pop
fisubs
ja
mov
out
inc
roll
mov
mov
js
mov
data16
sbb
mov
cmpsb
lock
cmpsl
cld
filds
fsubrs
xor
jg
mov
pop
iret
add
lods
sbb
aad
sub
sbb
or
sbb
push
movsl
fadds
repz
inc
inc
daa
mov
out
jb
or
ljmp
cmp
mov
dec
and
in
jo
fisttpl
jne
jnp
and
push
and
push
jp
dec
xchg
aad
jl
jbe
movsl
test
js
mov
xchg
arpl
xor
add
movsl
push
pop
jb
inc
ret
int
mov
pushf
adc
sti
gs
add
icebp
fldt
adc
loop
mov
push
imul
sbb
mov
insl
and
ror
push
sahf
std
enter
lea
pop
loop
mov
mov
mov
das
rcl
fsubrl
mov
or
mov
sub
dec
mov
xchg
fisubrl
mov
jns
pop
cmp
and
adc
loop
popa
push
in
fistl
fstl
mov
or
test
pop
aam
into
fs
shr
pusha
push
mov
inc
pop
loop
imul
in
movsl
shlb
push
jmp
outsb
rcrb
mov
lcall
out
add
cmp
mov
adc
outsb
sbb
inc
in
push
jnp
shlb
jmp
cwtl
shlb
pop
aaa
movsb
ljmp
adc
mov
aas
int
shl
sbb
mov
jge
js
fs
scas
add
ja
data16
add
push
cmc
arpl
je
roll
push
test
clc
repnz
inc
dec
mov
movsb
cmpsl
lret
xor
inc
test
sub
cli
aas
into
adc
push
inc
ficompl
jbe
push
test
icebp
jmp
push
or
adc
adc
mov
shrb
push
jbe
inc
xor
mov
or
push
repnz
cmc
push
add
cwtl
cltd
pop
sbb
aaa
stos
push
pop
mov
insb
and
jecxz
in
xor
es
pop
adc
inc
dec
cld
lcall
jle
call
incl
loopne
out
add
nop
mov
xor
dec
push
mov
mov
out
dec
mov
jae
jno
mov
les
sti
xchg
mov
or
into
call
mov
add
test
arpl
paddd
in
mov
pushf
add
rcrl
xchg
into
jg
in
xor
stos
mov
cmpsb
loop
popa
push
scas
and
mov
dec
mov
adc
mov
and
and
and
fadd
lcall
aad
xchg
mov
jbe
add
cwtl
pop
lahf
lret
notl
in
and
mov
loop
or
xor
mov
xchg
jmp
xor
xchg
dec
lods
sbb
inc
stos
xor
int3
and
add
and
push
repnz
jnp
mov
das
cltd
ljmp
mov
inc
int3
add
dec
push
dec
insl
mov
inc
add
xchg
js
iret
or
add
adc
shll
je
mov
test
xchg
bound
or
sti
sub
insl
or
pop
jo
sub
xchg
mov
xorb
pushf
pop
test
mov
xor
xchg
and
iret
movsb
xor
lret
outsb
adc
push
fdivrl
adc
mov
popf
out
jns
xor
push
jl
cmp
fidivrl
cli
insb
test
enter
icebp
cmp
js
ja
and
stos
into
ficompl
dec
pop
mov
lea
adc
jo
and
xor
pop
xchg
pop
rcrl
popl
imul
call
pop
mov
sub
xchg
pop
scas
cmpsl
call
sbb
loop
or
pop
ret
daa
pop
jmp
sbb
testb
leave
popf
jmp
mov
loop
sbb
lds
and
xchg
ds
cmp
cwtl
or
das
xchg
in
jns
aam
pop
addr16
push
addl
int
fistps
jmp
jecxz
jnp
mov
xor
fsubs
and
sub
lahf
in
mov
dec
sbb
int3
out
mov
xorl
or
lea
xor
mov
icebp
lods
arpl
shrd
stos
lods
aad
add
enter
imul
cmp
pop
mov
mov
sti
jle
inc
addr16
lret
pop
dec
cmp
mov
add
inc
test
pop
fidivrs
pop
sbb
push
lret
inc
ds
push
dec
imul
lcall
xchg
mov
pop
pop
in
clc
arpl
inc
mov
adc
call
mov
dec
js
call
jmp
sarl
mov
mov
in
mov
jb
std
adc
fistps
inc
fst
mov
cmp
inc
scas
cli
cmp
icebp
or
ret
dec
or
dec
inc
fbld
pop
and
lock
jne
sbb
testb
aas
xchg
fisubl
mov
adc
mov
or
imul
mov
dec
xchg
aad
add
dec
decb
or
pusha
popa
xor
fldcw
cld
cmp
cmc
push
pop
repz
aam
pop
dec
fisubrl
push
jp
jle
inc
push
inc
stos
dec
divl
sbb
lock
lods
loop
xor
loop
push
lahf
fisubrs
fs
cs
leave
push
cmp
es
xchg
aas
inc
push
bound
sub
das
shl
fwait
sub
sti
stos
hlt
pop
push
mov
push
xor
lcall
xchg
scas
add
repz
ficomps
inc
cmp
or
pop
ret
test
out
arpl
add
push
test
loope
jbe
jno
push
push
cmp
int3
lds
das
hlt
rcl
xchg
addr16
lret
leave
data16
dec
fstpl
shl
hlt
inc
out
dec
hlt
mov
lock
xchg
push
inc
idivb
imulb
fscale
sub
and
hlt
cwtl
rorl
popf
inc
in
xchg
inc
add
fnsave
insb
mov
adc
xor
js
ret
pop
jle
mov
xchg
aam
sub
dec
pop
jb
and
in
lods
pop
fsubs
adc
cs
in
jmp
ss
xchg
lea
add
int3
call
out
add
icebp
mov
stos
decb
jg
into
sbb
dec
arpl
stos
dec
mov
cmp
ss
inc
leave
push
mov
mov
pop
inc
movsl
jns
xchg
xchg
mov
sub
sahf
shll
insl
hlt
mov
out
add
out
adc
jno
out
int3
sbb
adc
imul
and
std
push
movsb
testb
push
movsl
pop
jns
out
sarb
popf
and
pop
loopne
inc
in
pop
xor
mov
cwtl
iret
jnp
and
cld
outsb
hlt
sarl
movsl
filds
mov
add
in
mov
les
cmp
sub
sbb
cmc
repnz
jae
loope
arpl
mov
add
xor
mov
popf
test
or
mov
add
jbe
xchg
in
test
imul
lock
or
sbb
cmpl
add
xchg
pop
mov
or
sbb
outsl
gs
jl
jle
mov
fisttps
aaa
data16
in
in
mov
jge
push
push
aas
repnz
mov
xchg
push
inc
ret
daa
data16
rol
jp
ss
pop
inc
pusha
mov
sti
push
jle,pn
cs
ss
sahf
push
sub
or
lcall
xchg
mov
jne
jo
or
popa
movsl
inc
jae
mov
daa
lret
push
movsl
cs
sahf
mov
add
xchg
mov
pop
jo
stos
cmp
ljmp
sbb
sub
xchg
dec
add
inc
sbb
icebp
cmpsb
pop
iret
movsl
stc
cwtl
bnd
in
xchg
stc
loopne
lock
sub
das
out
jg
push
mov
sub
sbb
test
cmpsb
mov
xchg
mov
adcl
int
mov
xrelease
xchg
mov
cwtl
cmp
mov
jle
cmpsb
push
and
push
cmpsl
aas
adc
fidivrl
cltd
clc
dec
clc
inc
roll
rolb
pop
stos
jne
out
xor
jp
aas
leave
and
push
jge
mov
pop
mov
mov
in
scas
or
cmp
dec
jno
xchg
lea
sbb
mov
into
imul
cmc
fwait
das
inc
dec
aas
data16
mov
fs
jmp
orl
inc
call
jge
insl
push
mov
lock
cmp
cmpsb
ror
loopne
ficoml
sbb
mov
rcll
cmpl
insl
dec
mov
add
into
sub
outsb
and
push
dec
push
cltd
ljmp
hlt
xchg
insl
add
pushf
imul
and
add
push
popa
leave
ret
sbb
testl
pop
xorl
in
xchg
out
lods
mov
aas
outsl
cmc
int3
fnsave
mov
pop
mov
into
sahf
rclb
jbe
adc
rclb
pop
mov
xor
loopne
inc
mov
mov
mov
ror
sbb
testl
xchg
mov
or
ds
pop
stc
mov
fucomp
ret
jmp
jo
mov
dec
cld
cs
inc
adc
imul
dec
outsl
inc
aam
inc
dec
pushf
test
pop
call
in
inc
lods
lods
popa
or
xchg
adc
std
jmp
pop
popf
pop
and
notl
mov
mov
cmp
push
xchg
and
lds
adc
clc
ljmp
scas
icebp
bound
shrb
iret
cmp
sub
xlat
pop
shll
cmpsl
shlb
sub
notl
jb
dec
stc
jmp
mov
add
inc
sub
mov
add
mov
adc
push
xchg
cmp
ja
faddl
aas
insb
shrl
ror
ret
js
aad
and
mov
int
fcmovnbe
adc
add
cmpsb
adc
movsl
dec
bound
dec
ljmp
mov
mov
sbb
xchg
inc
dec
aaa
ljmp
jne
pop
in
div
push
jo
mov
xchg
jp
sarb
stos
adc
push
adc
xchg
sub
arpl
cmpsb
cmp
lods
ss
mov
sti
inc
imull
jmp
adc
add
out
into
mov
aaa
sbb
add
inc
fisubrl
loopnew
mov
data16
xor
dec
mov
daa
xchg
aad
pop
push
pop
stos
mov
xchg
ds
xor
not
xchg
pop
imul
cmc
pop
je
popa
mov
cli
jno
adc
in
std
inc
cmp
xor
sub
jo
jmp
mov
loopne
test
repz
outsb
subl
push
sbb
add
mov
or
jo
jp
xor
sbb
add
sbb
push
shlb
int3
sbb
or
popf
into
jb
test
xchg
push
daa
xchg
dec
dec
cmp
loope
xor
and
es
mov
cmp
sarl
mov
lcall
and
fstl
jl
mov
inc
notl
sbb
in
mov
sti
xor
and
je
mov
aas
push
imul
add
xorb
mov
cltd
daa
mov
mov
jbe
std
out
dec
jno
adc
sub
cwtl
icebp
sbb
mov
out
sub
jmp
rclb
imul
sub
into
stc
jns
mov
push
xor
scas
pop
ja
sub
sti
and
cs
mov
jnp
test
mov
jnp
sub
fs
add
mov
xchg
incb
push
hlt
call
lds
icebp
pop
cmpsl
add
jbe
cld
popa
je
aaa
aam
dec
nop
sub
cld
inc
es
jbe
data16
in
lods
test
iret
adc
into
jae
push
push
jmp
pop
mov
repnz
call
push
lret
jae
xor
imul
sub
mov
sub
xor
fidivrs
or
filds
aam
clc
add
pop
mov
out
pusha
pop
push
mov
lcall
je
int3
sub
mov
push
lret
test
adc
xchg
hlt
fistpl
in
pop
push
adc
cmp
or
xor
sub
add
outsb
pop
xor
sbb
lea
nop
push
inc
mov
mov
movsb
mov
pop
or
dec
jle
stos
mov
jb
test
popf
xor
jne
mov
cmp
scas
loope
mov
pop
xlat
ss
jns
mov
mov
push
sub
xchg
fistpl
fisttpl
mov
das
adcl
pop
popf
or
pop
and
or
add
in
sub
xchg
xor
pop
xor
mov
lds
sahf
sbb
mov
pusha
loop
test
daa
out
pushf
add
jmp
rcr
adc
mov
jle
insl
push
xchg
aam
mov
cs
mov
outsb
and
test
cmp
xchg
testl
mov
sti
sbb
enter
add
dec
enter
clc
mulb
mov
push
cmp
sub
divl
in
push
outsl
bound
scas
in
scas
xchg
lahf
push
shl
mov
sti
xlat
int3
push
aam
push
adc
sahf
cmp
sti
mov
add
popa
pop
jge
arpl
cld
leave
das
in
and
fbstp
rcl
inc
xchg
outsb
push
mov
sub
xchg
aad
daa
mov
subl
or
mov
add
dec
in
iret
pop
cld
test
push
mov
mov
test
adc
repz
sub
push
insl
outsl
or
stos
es
sub
xlat
cli
push
mov
mov
clc
inc
mov
pop
or
push
jg
adc
inc
movsl
leave
lds
or
lret
push
aad
inc
push
jg
in
push
out
inc
cmp
jecxz
sbb
pop
outsb
fidivrs
xor
xor
fcoms
jg
pop
std
mov
mov
fsubrs
ljmp
ficoml
negb
push
inc
sub
js
xchg
sti
sahf
loop
jno
iret
jecxz
outsl
inc
or
out
popf
inc
ja
cli
rolb
test
test
popf
sub
dec
inc
jmp
jo
mulb
movsb
cmp
out
adc
fdivl
jl
lock
aam
mov
out
insl
push
call
sti
mov
shrb
in
push
and
in
pop
xchg
cli
cmpb
inc
inc
cs
mov
mov
sub
jl
sub
mov
xor
pop
mov
jns
jp
push
add
gs
js
pop
call
or
fiaddl
neg
dec
ficomps
packuswb
in
icebp
dec
rcrb
orl
lahf
mov
mov
test
xor
and
inc
sub
daa
nop
add
push
mov
ja
test
jmp
jp
xor
das
js
xchg
pop
int
mov
mov
and
orl
jbe
je
aam
scas
cmp
cmp
mov
push
test
outsl
cmp
es
sbb
call
out
aas
popf
adc
push
sub
outsb
mov
xchg
andb
jno
and
push
lcall
daa
xchg
xchg
pop
pop
movsl
mov
out
lods
mov
incb
leave
das
mov
mov
ret
cmp
jno
add
and
insb
fwait
loop
adc
push
andl
jmp
jle
rcl
roll
xchg
out
or
je
mov
pop
dec
ss
xor
test
mov
int
jge
dec
add
in
orb
lds
icebp
addb
stos
jg
int3
inc
mov
movsb
cli
cmp
cmp
lahf
outsb
push
decb
ljmp
fwait
fs
dec
nop
sbb
pop
xchg
loop
mov
xlat
inc
mov
dec
mov
push
push
sbb
fisttps
dec
popf
add
outsb
cmp
icebp
mov
push
f2xm1
imul
jb
inc
jo
sbb
mov
ss
movsl
fs
jbe
loop
mov
mov
jae
mov
int
lret
insb
cwtl
mov
inc
lahf
mov
cmp
in
or
pop
cmc
aaa
push
insl
or
lock
inc
into
ficoml
pusha
cmp
add
jne
mov
cwtl
inc
shlb
insl
jbe
fucomp
mov
mov
ss
or
mov
gs
fs
test
fisubrs
jecxz
cmc
sub
mov
jmp
cld
inc
xchg
sahf
add
fnclex
pop
clc
fldcw
jmp
push
dec
movzwl
test
nop
fwait
jl
lret
cmp
scas
sbb
gs
dec
xchg
mov
xor
mov
mov
jmp
aad
xor
xchg
sbb
xchg
inc
pop
pop
orb
testl
hlt
test
mov
cli
mov
mov
mov
push
push
sbb
flds
sahf
fsub
jbe
sahf
in
ja
repnz
push
inc
mov
int3
fldenv
imul
jno
sahf
jmp
sahf
fsubl
xor
jns
pop
fcoms
mov
jecxz
ret
mov
pushf
sub
pushf
into
popa
lock
or
push
test
sbb
cs
inc
lods
lods
shrl
sahf
dec
stos
dec
pop
sti
pop
das
pop
pop
adc
movsb
or
push
xchg
adc
cmpsl
scas
dec
push
pusha
orb
popf
xchg
popa
mov
xor
jb
das
jae
jae
adc
loope
add
lds
cld
add
push
insl
cmpl
clc
mov
fimuls
pop
push
pop
mov
in
scas
cmp
pop
or
mov
and
xorb
mov
mov
arpl
mov
sub
dec
ljmp
and
inc
stos
stc
inc
insl
push
lock
xor
insl
mov
ret
out
add
xchg
sbb
movsb
mov
std
jns
jbe
int3
lret
cltd
rcl
ret
mov
ljmp
pop
mov
add
shrl
mulb
scas
xor
aam
lock
aaa
mov
test
mov
in
out
cmp
jb
jbe
test
push
or
add
mov
lret
test
xchg
push
cmp
iret
xchg
xchg
adc
mov
loop
lret
mov
es
mov
dec
inc
xor
xchg
loope
insl
adc
inc
xchg
mov
jmp
frstor
daa
lcall
das
aaa
and
push
add
inc
sbb
insl
xchg
push
jns
out
test
push
aad
rcll
out
invd
cld
jecxz
push
add
jns
loop
push
dec
add
call
pop
xchg
dec
xchg
add
aaa
enter
fs
mov
and
sahf
jbe
sarb
fucomi
jl
adc
xchg
ja
and
adc
sbb
xorl
not
and
dec
shlb
in
fsubl
int
mov
mov
enter
push
stos
cmp
sti
pop
das
push
pop
aad
push
enter
hlt
cltd
xchg
dec
dec
xchg
sub
into
sbb
or
xor
addr16
sub
mov
jg
push
lods
xor
fwait
fwait
mov
mov
fs
into
arpl
or
cmp
test
repnz
jl
mov
mov
pop
rorl
mov
mov
xor
pop
rorb
aaa
fsubrs
jmp
add
push
mov
or
jnp
push
xor
cli
bound
out
hlt
sbb
fwait
repz
lahf
ljmp
repz
cmpsb
xor
addb
push
push
sti
jmp
jge
mov
mov
mul
test
popa
dec
ror
rcll
fisttpll
mov
fidivrs
mov
push
repz
bound
mov
aad
fldt
xor
jecxz
loope
mov
adc
daa
enter
dec
xchg
inc
adc
pop
rclb
and
mov
xchg
fmuls
add
loopne
cmp
lods
stc
shlb
mov
xchg
cmc
adc
push
adc
lret
aad
mov
dec
call
xchg
mov
dec
mov
movsb
or
adc
mov
fldl
std
lret
int
sbb
jnp
into
addr16
loope
jnp
cmpsb
jmp
cmp
or
repnz
jo
daa
and
add
pop
xchg
adc
mov
int3
fildll
loop
pop
loopne
mov
fistl
xor
xchg
sub
sbb
repnz
gs
add
push
pop
aad
sbb
pushf
addr16
push
add
adc
sub
inc
test
xor
jb
dec
lds
sbb
push
out
stc
xor
mov
pop
push
mov
push
test
adc
or
inc
jb
jmp
ror
jp
push
mov
idivb
ja
cmp
aam
clc
push
shrb
push
sub
pop
mov
mov
dec
lds
sub
xchg
sarb
xor
sarl
test
pop
sbb
jnp
or
test
xlat
and
xor
imul
imulb
xchg
or
pop
cwtl
xchg
inc
jge
jle
scas
movsb
xchg
add
ror
shll
mov
mov
daa
aad
jae
mov
divb
rorl
xor
push
mov
push
inc
pop
in
rcll
pop
popa
add
icebp
add
push
ss
popf
pop
out
push
cmp
pop
fidivl
mov
fwait
testl
pop
sbb
cmp
test
movups
add
fsubs
hlt
or
push
fstps
idiv
js
mov
mov
sti
inc
jg
out
mov
mov
iret
leave
sub
daa
loopne
outsb
pop
enter
pop
sbb
lahf
or
jl
gs
into
push
rcll
mov
jno
inc
and
sub
imull
mov
xchg
and
xor
outsl
jne
or
push
sub
adc
test
jp
sub
cmp
cmpsb
pop
lret
fistpll
jmp
subps
jae
and
cmp
pop
xor
mov
dec
pop
cmp
cltd
jl
lret
and
mov
mov
inc
xchg
daa
and
leave
aaa
dec
push
dec
imul
aad
mov
xchg
jb
lods
jno
sub
add
lret
cld
addl
cmpsb
mov
xor
jae
pop
mov
mov
dec
imul
add
and
pop
lahf
push
mov
push
divb
mov
cld
in
int3
in
pop
flds
mov
mov
cld
in
cwtl
ret
rol
or
adc
pop
push
arpl
lds
scas
std
scas
mov
sub
mov
cmp
out
mov
sub
jge
les
or
and
sbb
in
inc
test
aas
lcall
mov
cmp
sub
sbb
ljmp
nop
dec
adc
imul
out
inc
xor
push
les
xchg
and
andb
insl
sbb
mov
or
and
jnp
xor
rcrl
cmp
xchg
cwtl
jno
fbstp
mov
orl
adc
xchg
pop
add
test
das
pushf
mov
aad
add
xor
es
adc
mov
sub
imul
lock
mov
icebp
dec
lods
ljmp
lods
popa
in
dec
push
out
dec
cs
jno
and
push
lods
fidivs
nop
cmp
lods
popf
lret
std
inc
cmpsl
or
mov
cmc
lds
fnstsw
in
mov
cltd
repnz
push
inc
xchg
mov
cli
jb
mov
sub
fcomip
add
dec
inc
pop
and
jl
or
xor
push
pusha
add
aaa
aad
test
cwtl
xorl
or
mov
int
pop
pop
inc
adc
push
jo
sub
in
fistpll
aam
fists
push
mov
cmp
pop
add
xor
xchg
and
ja
push
test
jbe
xor
lahf
lahf
add
movsb
repnz
imul
jmp
add
xor
fcmove
jno
rolb
add
adc
mov
push
mov
adc
dec
cmp
jl
int
fistl
mov
mov
fsubrs
lahf
call
ret
je
popa
hlt
clts
dec
mov
call
iret
inc
jg
dec
cwtl
jge
rcll
cmp
out
in
sub
push
jge
es
or
sub
aaa
and
or
insb
shrl
xor
lcall
sub
es
and
loopne
inc
test
jge
push
sbb
push
and
xlat
push
ljmp
test
mov
std
xchg
adc
jge
test
inc
out
jb
ds
mov
mov
rcrb
sub
mov
xchg
scas
mov
cmp
arpl
ret
add
mov
lea
mov
fimuls
out
sbb
cwtl
adc
inc
nop
stos
ds
lds
aaa
js
mov
mov
in
cmc
mov
or
out
lahf
jge
inc
xorb
daa
andb
lds
pushf
stc
sbb
cmp
fmull
fidivrl
xor
mov
xor
xor
dec
sbb
cmp
hlt
mov
jg
inc
cmp
orl
mov
jecxz
jo
insl
dec
inc
test
dec
mov
jg
stc
cmpsb
and
in
pop
lcall
jne
mull
and
xchg
mov
stc
cmp
xchg
and
popf
aaa
imul
rorb
shrb
push
mov
mov
ljmp
jne
pop
fadds
jbe
mov
push
sti
xor
xchg
into
jp
sub
mov
out
sbb
into
sbbl
sub
in
cltd
or
push
push
or
ds
sub
jb
shrb
push
js
push
pop
frstor
gs
jl
hlt
push
sbb
lods
mov
adc
xlat
dec
pop
push
inc
pushf
nop
add
popa
outsb
add
inc
sub
pop
js
shll
cli
out
cmp
dec
outsl
fidivs
into
sbb
add
loop
or
loop
ds
push
sub
cltd
imul
cs
mov
mov
xchg
pop
mov
push
xor
cld
xchg
and
ja
std
hlt
dec
fsts
sub
jns
in
mov
mov
xchg
outsl
out
xor
pusha
lods
mov
idivb
mov
rclb
outsb
sbb
add
xchg
jg
lods
mov
in
ja
or
out
xchg
inc
iret
das
sbb
and
and
sub
jecxz
andb
fbstp
pushf
sahf
mov
icebp
inc
jbe
in
ja
enter
push
popf
mov
and
dec
out
pushl
xlat
loopne
xchg
loop
cmp
xchg
imul
sbb
popf
sbb
lock
push
ljmp
jl
out
mov
push
filds
adc
sub
xor
xchg
mov
sub
adc
pop
call
adcl
inc
sbb
xor
aam
call
dec
into
jmp
xorb
repnz
arpl
jns
sub
and
mov
sbb
inc
aaa
inc
lods
xchg
arpl
cs
sub
cmp
aas
dec
enter
xchg
stos
out
das
int
add
subb
pop
mov
wbinvd
mov
shl
sti
xor
int
xchg
stc
xor
or
sbb
cli
push
icebp
inc
sti
pop
daa
push
xchg
dec
push
test
sbb
fistps
les
mov
jmp
jne
jge
jno
idivl
sub
stos
insb
dec
cmpsb
mov
inc
into
je
jns
cmp
jl
sbb
xor
aas
sub
cmpsb
ret
or
insl
loope
adc
shlb
ss
jl
cmc
out
jbe
push
xchg
in
pop
xchg
jo
aam
mov
add
and
aas
lcall
xor
mov
xor
dec
pushf
pop
jb
mov
int
iret
or
ret
push
dec
dec
sti
arpl
nop
push
push
mov
shll
cmc
push
inc
pushf
cli
in
fists
xchg
sub
mov
arpl
mov
mov
testb
mov
jecxz
push
outsb
into
loope
imul
jmp
lret
test
out
lahf
xor
cli
jnp
xchg
rcrl
mov
mov
jno
sub
inc
push
mov
movsb
xor
out
and
pop
add
mov
decl
xchg
aaa
into
lods
cmpsb
stos
fmull
xor
jl
out
add
pop
scas
xor
mov
xchg
iret
mov
inc
sbb
and
iret
mov
cmc
add
add
fwait
clc
cmpb
pop
pop
adc
jmp
jge
mov
mov
pop
mov
fnsave
lret
cmp
xchg
loop
jne
fisttps
scas
xchg
pop
sbb
fdivrs
outsl
pop
xchg
cltd
sbb
or
mov
shrl
int3
pop
pop
cmc
sbb
adcl
daa
and
pop
sbb
xor
jnp
movsb
mov
mov
aas
negb
sub
jnp
push
add
inc
fcompl
and
pop
test
outsb
push
mov
cmp
in
xchg
sbb
addr16
jp
adc
or
stos
mov
loopne
add
scas
mov
ss
dec
and
and
addr16
xchg
add
mov
add
jge
in
push
dec
push
fcoms
bound
lods
pop
jo
push
and
movsb
cwtl
cmp
aas
xor
push
adc
dec
pop
pop
int
mov
dec
test
mov
repnz
pop
push
add
out
fwait
cmpsb
cmp
xor
jne
cmpl
sbb
cmp
dec
xchg
push
pop
cmpsb
imul
popa
out
fidivrl
push
out
xchg
jmp
jnp
rorl
in
ljmp
in
and
push
mov
xlat
sub
push
xchg
test
jle
lret
or
mov
inc
imul
mov
dec
xchg
data16
sub
cmpsb
orl
mov
xchg
cmp
bound
sahf
mov
pop
push
cmp
jmp
mov
push
and
pop
cmp
lret
int
fwait
sub
or
jecxz
and
mov
adcl
jae
in
xor
outsl
dec
mov
and
add
pop
xor
add
fsubs
pop
test
jle
xchg
lahf
cwtl
cmp
cmpsl
popf
pop
int3
mov
ret
pushf
push
mov
jmp
push
fnstsw
cltd
insl
adc
push
ljmp
cmc
movsb
pop
and
movsb
push
iret
nop
mov
dec
lods
xchg
push
hlt
or
add
sub
aaa
add
and
arpl
mov
jp
or
xchg
mov
adc
test
bound
push
popa
mov
clc
dec
mov
mov
stc
aad
in
xchg
jns
enter
sub
mov
lods
push
jbe
or
dec
jl
dec
ret
stos
in
jge
bnd
lahf
lds
in
fldcw
jb
scas
in
cmpsl
add
add
enter
dec
dec
sbb
xchg
fnstsw
fisttpll
and
fs
add
push
pop
push
pop
dec
out
cmp
dec
push
call
inc
add
mov
shrl
inc
std
into
lcall
lret
mov
cld
imul
stos
push
jnp
in
cmpb
scas
adcb
push
divb
jle
cmc
inc
mov
in
dec
les
pusha
add
push
ss
les
aaa
push
insl
test
xchg
push
sub
dec
clc
mov
fsubl
ljmp
jae
push
push
inc
loopne
mov
lods
add
rcrl
imul
movsb
daa
push
dec
pop
sbb
inc
dec
jbe
stos
or
movsl
adc
push
ljmp
jl
test
mov
cmp
and
dec
inc
mov
sbb
cmp
or
inc
or
sbb
xor
jae
sbb
mov
push
xor
fsubrl
mov
inc
pusha
ds
and
nop
sbb
push
icebp
aaa
idivl
cmp
inc
sarl
aaa
into
inc
push
sbb
cs
or
mov
dec
and
in
cmp
fcom
inc
adc
pushf
push
aam
push
cmc
call
xor
cli
mov
lret
aam
dec
jmp
push
inc
aas
jns
rcrl
mov
pop
pop
inc
sub
sti
ret
mov
lods
fwait
pushf
arpl
or
add
imul
push
jl
int3
pop
inc
enter
jns
jne
or
xchg
movb
sti
inc
fsubl
and
jg
mov
test
inc
frstor
popa
shlb
sub
fucomip
xlat
push
jmp
pusha
mov
idivb
aaa
outsl
bound
repnz
jbe
mov
das
int
in
int3
push
pop
inc
mov
cld
lcall
das
sub
mov
cmc
xor
jae
dec
in
lret
mov
or
adc
das
mov
daa
pop
cwtl
test
and
jmp
mov
xchg
shlb
xchg
sub
sbbl
inc
sub
hlt
dec
and
sar
pop
adc
or
sub
and
pop
inc
pop
imul
sbb
rclb
sti
adc
addl
add
add
push
lret
test
cmp
loope
mov
sub
mov
imul
punpcklbw
mov
push
mull
or
inc
xchg
adc
sub
scas
lods
out
lea
mulb
clc
sti
adc
ja
mov
ror
js
pop
xchg
dec
xchg
mov
subb
sub
out
enter
test
push
aaa
dec
xchg
imul
in
pusha
pop
test
cmpsb
sbb
xor
mov
fisubl
mov
int
mov
int3
adc
fwait
psubd
cmp
loop
lods
cli
add
or
fimuls
mov
xchg
or
jp
mov
sub
and
jge
cmpsl
add
sub
or
xchg
push
mov
inc
cmp
iret
cmpsb
push
dec
call
mov
push
add
sub
ja
pop
mov
cli
add
mov
or
push
jp
push
mov
jb
mov
or
icebp
lea
pop
sbb
adc
rol
clc
push
dec
cltd
iret
and
mov
adc
cs
shl
or
outsb
xor
in
cmp
rorb
mov
movsl
mov
mulb
adc
fwait
sub
test
mov
push
insb
out
xchg
push
mov
stc
mov
sar
ds
gs
test
sub
test
repnz
push
ss
sbb
jno
stos
pop
inc
adc
xchg
pusha
fistpl
pop
jl
xor
inc
xchg
stos
xor
mov
addr16
out
adc
xor
and
cmc
fbld
iret
int3
and
fwait
les
adc
aaa
jmp
lret
cmpsl
je
lds
out
cmp
in
out
pop
adc
adc
notl
xor
pushf
mov
push
pushf
sbb
rcl
jb
cmp
out
or
xchg
enter
stos
cld
fs
xor
cmp
xchg
and
cmp
adc
mov
mov
ret
mov
aad
mov
dec
sub
xchg
xchg
xchg
push
xor
push
ds
mov
mov
scas
stos
pop
push
inc
xchg
cmp
movsb
shrb
cmp
add
lcall
cmp
sahf
sbb
dec
addr16
sub
not
dec
pop
fldl
fistpl
leave
dec
out
jecxz
cwtl
xor
xchg
popa
cmp
or
fsubl
sbb
cmc
push
sti
loope
sbbb
js
cmc
filds
scas
popf
push
and
xchg
or
test
ja
jb
dec
out
sub
out
xchg
push
movsb
andl
movsb
jmp
push
dec
in
push
ret
mov
sbb
cmp
cmp
nop
std
js
div
in
arpl
xchg
cld
out
add
jecxz
addr16
mov
out
jo
mov
adc
imul
data16
and
cmp
mov
xor
lds
push
xor
sbb
test
loope
xlat
scas
les
out
mov
rcll
mov
add
dec
fs
push
mov
mov
push
into
xchg
insb
lods
jg
test
scas
mov
push
add
jb
dec
xlat
and
out
fdivrs
and
dec
lods
adc
xchg
mov
inc
stc
xchg
adc
lds
pop
jae
sbb
mov
jle
gs
xor
or
and
mov
ljmp
lahf
sbb
aaa
loope
ss
repnz
jnp
mov
clc
imul
xor
inc
div
mov
sbb
cmpsb
andl
mov
mov
mov
jo
dec
push
mov
push
lahf
stos
cmp
mov
in
sub
cwtl
cmp
shrl
jmp
xchg
push
data16
adc
addl
mov
jo
adc
xchg
test
in
or
xchg
push
aas
pushf
xchg
movsb
movsl
lret
pushf
out
push
sbb
and
mov
jo
fistpl
outsl
neg
dec
add
repz
cmp
icebp
daa
pop
in
shrl
inc
cmp
call
shlb
push
das
test
xor
call
sub
std
jl
jp
int3
pop
mov
data16
push
mov
mov
sbb
cmp
dec
repnz
dec
test
xchg
push
addr16
mov
cmp
test
jne
sbb
scas
cltd
jge
cmp
int
mov
repz
fists
addr16
lret
in
xor
push
add
lods
mov
jp
push
inc
or
addr16
mov
lcall
add
lea
add
leave
pop
lock
jl
testl
fsubrs
cwtl
add
out
js
out
xor
sub
pop
cmc
sbb
xor
adc
in
fmulp
clc
jae
or
xor
pop
mov
insl
xchg
fdivl
mov
sub
hlt
js
xchg
or
clc
gs
jmp
xchg
icebp
sub
sub
notb
and
push
mov
jns
inc
dec
es
movb
jmp
fisubrl
mov
divl
cs
pop
jbe
js
xor
test
pushf
scas
push
and
fs
inc
and
sub
sub
mov
jle
push
lea
pop
xor
in
sbb
jle
iret
mov
mov
std
inc
push
insl
cmp
add
inc
add
jno
out
push
jp
add
mov
lds
pop
sbb
je
jb
jns
push
mov
repnz
stos
nop
mov
sub
dec
and
pop
xor
adc
sbb
xchg
scas
sahf
test
sub
shlb
rcll
insl
dec
test
add
xor
stos
aam
mov
loope
popa
cmc
cld
add
mov
mov
leave
cmc
fnstsw
int
add
pop
add
outsb
dec
ret
cmpb
cmpsb
mov
sub
test
dec
std
sbb
addb
ljmp
pop
mov
mov
sbb
insb
add
outsl
rolb
dec
aam
xor
jge
ds
fimuls
jge
xor
mov
cmp
cld
dec
imulb
mov
sub
clc
cmc
inc
inc
pop
fdivs
mov
cmc
ret
cmovno
in
mov
lcall
enter
fstl
or
testb
xchg
push
xor
jg
in
pop
mov
jb
inc
jbe
rcr
les
stos
mov
cmp
aaa
or
push
mov
mov
fucom
or
pusha
popa
adc
stc
pop
test
ret
dec
mov
push
fcompl
sbb
push
and
cmp
or
arpl
out
scas
jle
stc
xor
rclb
and
lcall
fs
pop
xor
loopne
and
sbb
dec
jge
sarb
pop
dec
sbb
jg
jo
setle
jmp
xchg
xor
lea
out
push
jno
pop
rorl
xor
in
lret
je
test
xor
cld
mov
push
mov
jg
out
jmp
xor
icebp
jae
mov
in
ficoml
pop
push
stc
pop
lds
out
sti
sbb
pushf
or
idivb
mov
cmpsl
insb
dec
cmp
das
xchg
fmul
push
in
icebp
xor
jb
xor
add
repz
jae
cmp
imul
stc
jp
push
in
and
fnstsw
pop
mov
iret
iret
test
orl
mov
sub
sub
stos
movsl
cmp
jae
test
xchg
xchg
cs
cs
cli
pusha
pop
push
jmp
cmp
inc
outsb
mov
jle
movsl
inc
fcoml
push
and
mov
gs
mov
inc
sub
ret
inc
fnsave
mov
jb
les
cld
sub
sbb
adc
int
sar
sub
jmp
inc
cmp
dec
sahf
inc
push
mov
outsb
ficoml
fisttpl
cmpsb
ficoms
sub
sbb
mov
xchg
lret
cmp
les
and
push
jb
xchg
rclb
pushf
shlb
sbb
jae
jnp
xchg
xor
inc
sahf
mov
and
rorb
movsb
pop
clc
stos
aaa
mov
dec
cwtl
lret
dec
adc
inc
sti
xor
repz
pop
dec
sub
mov
ficomps
inc
mov
mov
or
fwait
or
jecxz
les
test
cld
out
jle
popf
xlat
adc
xchg
sub
hlt
fnstenv
jo
test
ja
mov
inc
add
push
xchg
dec
xchg
ds
mov
inc
inc
dec
lods
dec
stos
cmc
mov
insl
std
dec
push
mov
cmp
test
lcall
inc
loope
ficoms
add
mov
nop
pop
jns
dec
inc
push
out
jne
outsb
out
inc
adc
or
sub
fcmovb
outsl
in
xchg
sub
mov
jl
ljmp
mov
fwait
xchg
into
sbb
pop
inc
in
xchg
lock
adc
movsb
sub
mov
dec
inc
bound
ds
or
aas
into
cmp
addr16
lret
jle,pn
repnz
mov
jne
add
test
enter
push
adc
out
outsl
enter
aas
sub
stos
mov
sub
mov
mov
inc
aam
insl
repnz
jns
mov
mov
iret
lcall
stos
int
stos
xor
iret
cmp
and
dec
addb
cli
or
cmpl
mov
ljmp
adc
rclb
dec
pop
lahf
sti
enter
rcl
xchg
xchg
scas
repnz
out
mov
mov
out
jecxz
push
ja
testl
pop
iret
dec
fisttpl
ficomps
inc
dec
mov
xchg
or
push
fcoms
dec
adc
leave
repnz
mov
push
hlt
push
xchg
in
lahf
rolb
pop
pop
nop
push
in
popf
mov
cwtl
clc
ja
insb
xchg
mov
out
jnp
out
push
mov
sbb
xlat
cmpsb
cmpsb
mov
xor
ret
or
sbb
sahf
add
dec
sbb
subl
jge
cmpsl
cmpsl
aas
inc
push
jmp
stos
jbe
add
lock
mov
mov
pushf
inc
insb
jo
andb
and
leave
mov
in
mov
fsubp
cli
ja
aaa
lds
push
mov
xlat
bound
in
or
jle
mov
ss
xchg
mov
push
nop
cmp
popf
pop
out
insb
jecxz
xchg
mov
dec
fbld
mov
and
and
xchg
xor
stc
addr16
imul
loope
or
push
mov
add
cmpsb
xchg
cwtl
sarb
lret
mov
inc
sub
leave
in
ret
xor
add
les
mov
xchg
pop
add
cltd
mov
cmpsl
jmp
push
cmpsl
cmp
lock
sbb
mov
pop
outsb
js
xor
imul
into
dec
mov
daa
jmp
and
testl
rorb
stos
add
jns
cmc
sbbl
jge
lea
out
xchg
fsts
fs
test
pop
pusha
outsl
mov
xchg
mov
dec
das
loope
pop
add
cmp
iret
pop
outsl
cmpsb
nop
jae
push
lds
cmc
and
xchg
xchg
les
test
insb
loope
cltd
fwait
rcr
fdivrp
fwait
push
mov
dec
mov
in
and
stc
enter
out
push
int
or
jne
cmp
jo
inc
mov
push
lods
fstps
jnp
std
adc
les
fnstcw
lods
int
sub
pushf
jge
adc
inc
jnp
sbb
cmp
push
fcoml
jp
fistl
cmpsb
push
mov
jnp
mov
scas
addr16
aad
jbe
popf
and
inc
aad
cmpsb
rcrb
pop
jo
jg
int
or
add
jmp
cmp
sahf
pop
or
push
sbb
xor
adc
and
sti
popaw
repz
push
xchg
sti
push
cwtl
and
shrb
cmp
cs
sbb
scas
mov
int
pusha
out
mov
pushf
iret
xor
in
or
loop
lahf
repz
mov
push
test
sub
mul
xchg
xchg
jae
sub
mov
jo
pop
cmp
call
push
mov
fsubrs
push
nop
pop
and
in
in
movsb
push
inc
hlt
or
fisubs
in
lret
nop
xchg
daa
add
add
lahf
add
xchg
movsl
pop
addr16
cmp
movsl
inc
push
cli
std
sarl
fs
and
leave
sahf
jl
movsl
sub
xor
jecxz
loop
inc
jns
mov
imul
inc
mov
imul
jb
push
nop
out
inc
mov
call
aaa
movsl
lahf
out
lods
sahf
push
pop
xchg
sub
push
pop
idivb
dec
int
inc
popf
loop
jb
xchg
inc
inc
inc
mov
pushl
sbb
mov
push
or
bswap
sub
xchg
mov
in
out
iret
inc
jecxz
xor
or
hlt
loopne
mov
sbb
nop
mov
fdiv
rol
push
lret
adcb
xchg
insb
icebp
dec
xor
mov
into
nop
push
aad
mov
sbb
mov
in
pushf
mov
rcll
ret
dec
sar
cmpsb
andb
and
fisttps
mov
mov
repz
jge
sbb
lds
cmp
stos
pop
test
mov
xchg
enter
popf
daa
lea
and
iret
jg
bnd
enter
sarl
in
test
mov
xchg
mov
dec
pop
adc
cwtl
xchg
dec
ljmp
scas
dec
shl
sub
and
sbb
loope
shlb
sbb
dec
mov
mov
xlat
push
cmpb
jg
mov
cltd
js
add
and
sbb
pop
cli
mov
cmp
fiadds
jp
sub
xor
sub
in
adc
inc
jo
or
add
jl
data16
fs
mov
loope
fisttps
push
sub
push
into
out
fdivrl
mov
enter
mov
fsubrp
icebp
mov
xchg
fwait
and
push
andl
fdivp
cld
cmp
xchg
js
jno
mov
and
fistl
mov
xchg
stos
or
mov
adc
inc
bnd
mov
xchg
pop
or
call
add
add
xchg
scas
clc
push
or
dec
jae
or
xchg
jge
cmp
xchg
sbbb
add
or
neg
insl
xor
into
adc
cltd
sub
mov
shlb
pop
pop
enter
mov
outsb
rcrl
mov
xor
out
fdivl
xchg
or
adc
add
test
sbb
dec
adc
pop
ret
mov
movsb
and
adc
shll
xor
imul
fxch
mov
and
or
je
cmp
xor
in
mov
or
rclb
rclb
sarl
jle
fstp
jg
push
dec
cli
pop
fsts
lret
mov
push
mov
mov
das
mov
lahf
add
pop
and
xchg
bound
lock
lods
jle
xchg
cmp
xor
jmp
out
xlat
mov
loope
aas
inc
xchg
push
xchg
aam
fstpl
rclb
dec
repz
aaa
ja
jmp
stos
jmp
mov
xor
lds
pop
mov
inc
idivb
pop
push
adc
rclb
out
insb
adc
iret
nop
and
add
mov
cli
xor
xor
hlt
dec
jbe
mov
insb
das
and
inc
or
cli
mov
data16
rorl
in
dec
push
push
leave
les
es
mov
scas
or
fimuls
les
and
scas
loop
out
enter
imul
shll
cwtl
mov
push
mov
fimull
stos
push
jae
int3
cmc
lea
mov
mov
or
sub
mov
dec
push
in
adc
fadd
dec
or
mov
sbb
mov
dec
or
or
inc
push
xchg
cmp
outsb
jb
jmp
in
scas
jp
xchg
xor
insb
sarb
inc
mov
jne
jle
leave
aad
fnstcw
mov
adc
inc
xor
imul
or
fs
sbb
int3
jmp
sbb
mov
mov
fldcw
inc
jno
aad
test
xor
roll
add
mov
scas
sub
jb
xchg
scas
sbb
fwait
push
faddp
jmp
test
add
xchg
fisttpll
push
paddsw
lods
and
inc
and
iret
jne
pop
mov
out
ja
cmpsl
dec
mov
clc
push
sahf
xor
xchg
mov
sbb
fldcw
jae
les
push
mov
add
stos
cmp
jbe
mov
mov
sarb
stos
daa
test
lcall
mov
xchg
ja
or
nop
pop
lret
inc
mov
cmp
push
and
mov
repnz
or
psraw
sub
mov
jg
test
sbb
xor
adc
hlt
fcmovu
jb
sbb
push
push
imul
std
jo
push
or
jnp
pop
cmp
pop
popa
mov
orl
jp
ja
pop
in
fsubr
incb
mov
orl
shll
in
push
movsl
jle
and
push
or
clc
push
adc
out
pop
mov
jb
cmp
ja
cmp
cmp
leave
je
nop
add
push
jae
xor
test
xchg
mov
out
adc
mov
xchg
sub
stc
push
sub
push
lcall
push
pushf
pusha
push
adc
jo
cld
aam
mov
jo
out
sbb
pop
and
sub
push
out
divl
sbb
inc
push
fwait
clc
ret
and
mov
sub
test
inc
jmp
shll
push
adc
inc
mov
test
js
sub
movsb
jo
dec
test
mov
sub
jb
pop
daa
add
push
lock
mov
sub
pop
arpl
cwtl
sub
pop
jno
mov
or
lds
push
aam
pop
aas
jbe
or
add
inc
clc
or
in
xor
mov
jno
or
jmp
mov
cltd
push
repz
out
lcall
stos
push
cli
cmp
inc
outsb
and
sub
cmp
ja
addl
sbb
and
add
daa
rcr
xchg
fsub
cmp
ds
push
sbb
push
cmp
add
jbe
adc
and
notl
cltd
jno,pn
fldl2e
mov
stos
or
mov
sub
jge
lds
pushf
cmp
les
push
clc
pop
out
inc
gs
mov
and
jle
pop
call
idiv
dec
cmp
jp
mov
adc
sahf
mov
mov
pushf
in
ljmp
xchg
push
sti
push
xlat
sbb
and
mov
aad
mov
imul
pop
cs
pop
pop
mov
ss
lea
xchg
cmp
push
xchg
es
mov
inc
push
ret
pusha
fs
xor
push
fcomps
xchg
pusha
rclb
loopne
stos
cmp
clc
jno
fsts
es
aad
mov
add
mov
sbb
sahf
mov
and
hlt
adc
leave
test
pop
mov
jmp
pop
push
sarb
leave
in
jmp
insb
fldl
cmpsb
push
lds
lock
adc
dec
mov
mov
xor
dec
das
enter
add
mov
rorl
xor
iret
sahf
xor
inc
imul
je
icebp
jmp
push
pop
push
movsl
mov
mov
cmc
fcmove
mov
xchg
testb
and
xchg
dec
push
call
mov
mov
outsl
orb
outsl
pop
pop
mov
xchg
shr
testl
nop
pushl
push
xchg
lods
arpl
shll
sti
rcrl
inc
je
arpl
lret
mov
cmp
es
rcr
push
sahf
pop
fistl
jp
xchg
outsb
mov
std
fnop
cmc
lods
repnz
nop
nop
and
jnp
or
cmp
or
mov
sub
xchg
push
jne
mov
loopne
mov
inc
xchg
into
icebp
xchg
mov
imul
push
imul
mov
and
test
repnz
movsl
mov
jge
cmpl
je
sbb
bound
jge
lahf
jbe
lods
sub
mov
mov
mov
dec
movsl
ret
scas
pushf
stos
xor
xchg
push
jg
dec
mov
bound
and
cmpsb
adc
hlt
mov
cmc
xor
rcrl
sub
rol
add
add
stos
jg
dec
cmp
inc
pushf
pop
dec
jl
out
aad
fbstp
inc
adc
dec
mov
jno
outsl
aas
push
add
xchg
fdivrl
sbb
adc
dec
dec
xor
shlb
test
daa
aaa
dec
xor
xor
mov
and
add
xchg
shll
cmp
jbe
pop
out
aas
out
and
fsub
sub
fildll
and
imul
aad
fwait
inc
nop
js
pushf
cmp
sub
sbb
xchg
push
ss
xchg
out
mov
jae
cmc
jbe
or
mov
into
aaa
adc
push
jno
cmp
cmp
repnz
jl
mov
cmp
adc
sub
adc
js
cmp
pop
mov
or
in
add
lea
mov
pop
enter
xchg
xchg
push
inc
stos
adc
xchg
sbb
push
or
or
xor
cmp
rorb
pushf
add
jb
mov
sbb
cld
movsl
xor
lret
cmpsb
pusha
cmp
pop
rcr
shr
loope
sub
outsl
xchg
inc
jo
push
fisubl
and
jge
int3
imul
adc
sub
sti
lods
xchg
in
je
in
movsl
jp
push
adcl
cmpsb
dec
sub
outsl
push
fwait
mov
jle
and
test
andb
dec
inc
pop
pushf
and
lock
xor
xor
jmp
mov
lea
fbstp
mov
popf
rcrl
cli
cmp
push
adc
cwtl
cmp
ljmp
cmp
in
insb
sub
ljmp
and
mov
push
xor
sub
movb
pushf
mov
xlat
pop
ficoms
and
xchg
in
test
ficoms
imul
jl
lea
inc
pop
rcr
clc
addl
int3
repnz
sub
sarl
add
lahf
insb
imull
mov
pop
lods
cmp
mov
or
jle
mov
pop
lock
aas
dec
inc
lcall
xchg
adc
out
popl
imul
add
jbe
add
push
jle
addr16
mov
shrl
push
add
xchg
push
es
int
or
and
and
add
stc
sar
ficompl
add
js
ja
cmp
mov
pop
xchg
xor
sub
inc
out
jo
push
push
cltd
arpl
push
xor
call
lds
xlat
in
fcomps
js
int
stc
dec
mov
push
jp
aas
or
xlat
test
cwtl
dec
lds
xchg
dec
pop
pushf
or
mov
push
imul
outsl
mov
pop
test
shrb
lods
mov
gs
mov
push
push
xchg
jmp
inc
fstl
test
jge
iret
xchg
icebp
sahf
mov
hlt
test
imul
mov
dec
jecxz
pop
pop
icebp
test
addr16
rorb
xor
mov
shrb
fsubp
inc
xchg
mov
lods
pop
sub
cmc
cwtl
adcl
fstl
call
stos
jle
popa
inc
popa
addr16
test
sbb
fs
cmp
xlat
mov
adc
test
sbb
daa
ljmp
scas
mov
xor
mov
pop
mov
push
flds
sub
hlt
sbb
cmp
jmp
scas
je
mov
sti
in
int
shr
add
jmp
mov
lahf
push
movsb
xor
dec
andb
lea
dec
add
fmuls
popf
outsl
lret
or
outsl
cmp
inc
lret
dec
popf
cmpsb
jecxz,pn
in
inc
daa
xchg
shr
and
cmpl
push
aaa
repz
jge
xlat
and
ljmp
dec
cmp
int
xchg
jecxz
cmp
sub
xlat
ds
sbbl
pop
push
mov
mov
aad
dec
pusha
in
add
fs
mov
and
ds
mov
sub
rolb
dec
aas
push
shll
adc
push
xor
mov
mov
fcmovnb
jo
jle
imull
inc
ds
pop
push
mov
cli
popf
dec
pop
cmc
cmc
jb
orb
add
add
es
sar
dec
iret
or
push
dec
xor
js
test
cmp
add
sbb
cmp
xchg
and
inc
dec
orb
jne
cmpsb
jl
nop
cmp
mov
mov
adc
push
loopne
out
cmp
shll
add
xchg
orb
mov
test
popf
mov
aas
call
sbb
in
insl
fmuls
ljmp
mov
adc
adc
pop
push
maskmovq
mull
cs
sub
dec
sub
sub
xchg
push
mov
jae
mov
das
fstpt
jle
push
aaa
jbe
mov
iret
add
ss
or
dec
loopne
insl
mov
mov
mov
sarl
scas
xchg
jns
ds
imul
movsb
mov
movsb
pop
mov
test
ss
test
je
shl
pop
shl
inc
push
jecxz
lds
add
pop
jl
loop
push
test
xchg
pop
imul
lcall
or
pop
adc
push
mov
shrb
aas
sub
in
cli
jge
fcmovu
in
ret
lods
mov
dec
rcrl
mov
mov
dec
mov
xchg
shlb
int
mov
std
sbb
aaa
adc
repz
movsb
out
xor
adc
in
into
xor
push
ret
push
push
cld
xchg
mov
mov
xchg
pushf
add
push
mov
je
aaa
lock
mov
call
lds
mov
imul
add
jbe
mull
and
testl
shll
inc
dec
mov
jno
bound
outsb
xchg
int3
xchg
fidivrl
mov
xor
data16
gs
mov
adc
pushf
pop
adc
in
cmc
mov
das
mov
scas
js
jne
icebp
rorl
add
loope
lcall
outsb
lea
leave
out
pop
sub
mov
imul
pop
sbb
sbb
cld
and
inc
sbb
in
sbb
sahf
cmp
push
ss
jnp
ss
bound
mov
daa
jae
xchg
pop
inc
sub
dec
nop
sbb
sbb
mov
je
aam
xor
incb
jne
rcrl
jb
mov
js
pop
pop
outsb
pop
insl
sahf
lahf
inc
xor
sti
repz
mov
mov
fmuls
mov
mov
xchg
mov
fiadds
es
dec
inc
push
xorl
jae
jne
jmp
gs
dec
lods
lahf
pop
in
mov
or
cmpsl
sbb
jmp
cmp
push
jbe
pushf
mov
pop
sub
mov
daa
fsubr
adcb
push
out
xchg
or
out
ficompl
pop
cli
fisttpll
mov
xchg
push
jne,pt
das
test
xor
xchg
jmp
push
bound
sub
sub
repnz
scas
rclb
jbe
dec
lods
sub
mov
add
in
inc
xor
loop
inc
mov
pushf
inc
jno
adc
in
dec
inc
push
sub
nop
std
lea
push
jl
xlat
add
mov
in
in
cli
add
push
or
push
out
cmpsb
jb
add
adcb
dec
pop
cmpsl
mov
and
enter
xor
lock
mov
xchg
sbb
mov
jle
xchg
enter
mov
shrl
cmc
cmc
loopne
add
sbb
add
repnz
popf
jb
push
dec
fmull
pop
inc
sbb
fcompl
pop
leave
xor
popf
jo
cmp
aaa
fildl
rcr
add
bound
int
mov
and
adc
xchg
out
loope
pop
add
push
xlat
mov
add
les
push
or
jge
inc
fdivs
imul
scas
dec
xchg
sub
pop
cmpsb
lret
sahf
jecxz
shl
push
inc
arpl
pop
push
mov
subl
inc
adc
cmp
data16
mov
jmp
das
iret
push
ljmp
fistpll
out
int3
mov
repnz
sub
imul
test
mov
jge
add
mov
jb
es
mov
lds
testb
dec
dec
popf
cs
and
xlat
inc
fsubs
out
ret
jl
xor
jno
int
mov
mov
inc
or
aam
lods
sub
aam
cmpsl
fcompl
insl
imul
mov
push
cmp
fstpt
cli
push
shlb
xchg
fs
sahf
sbb
pcmpeqb
adc
out
out
cli
les
fmuls
mov
cmp
inc
fsubr
pop
out
ret
and
xor
mov
enter
add
push
out
cmp
add
pop
xor
jb
pop
insb
shlb
aad
push
sbb
insl
cmp
mov
xchg
pop
push
and
clc
add
sbb
cmp
or
dec
test
push
ds
std
fstl
addl
les
rcrb
sahf
mov
into
test
aaa
mov
adc
lods
pop
test
mov
pop
je
ficomps
push
scas
test
mov
fsubs
js
lret
lds
inc
in
push
mov
kmovd
decb
jbe
mov
outsb
cmp
or
scas
mov
insb
adc
push
mov
jge
bound
dec
arpl
enter
xchg
fyl2x
scas
sub
lahf
stc
les
ljmp
es
xchg
enter
imul
insb
jmp
and
sub
bnd
and
fiaddl
push
enter
push
or
test
dec
addr16
hlt
shl
inc
adc
jle
fisubrl
sub
jle
dec
jno
inc
mov
and
inc
shll
sub
test
aaa
and
push
mov
cmp
pop
test
dec
testb
shr
cmp
cmpsl
cld
pop
dec
jns
sub
or
adc
mov
push
js
xor
sbb
mov
adc
sti
and
cmp
cs
sub
xor
push
mov
imul
jge
cmp
and
pop
xor
dec
icebp
or
in
es
test
imul
stc
add
pop
jl
int
lods
xchg
mov
stc
mov
fldenv
lret
xor
in
movsb
mov
test
ljmp
arpl
mov
mov
xor
push
sub
je
popa
rorl
mov
push
or
or
and
nop
pop
fists
xchg
lods
icebp
shll
lds
inc
pop
cmp
cmp
out
adc
fsubs
and
add
mov
pop
pop
add
out
cmp
xchg
adc
mov
loop
cmp
jge
sub
mov
movsl
cmpsb
insl
movl
sub
jmp
push
cmp
inc
pop
leave
cld
inc
sub
xor
push
iret
fsts
mov
shl
or
mov
adcb
add
insl
stos
mov
mov
shrb
jecxz
mov
setne
repz
pusha
fdivp
jecxz
mov
jle
mov
popa
add
mov
lcall
xor
nop
hlt
or
cmp
mov
mov
sarl
hlt
mov
shlb
adc
xchg
and
xchg
mov
rcl
cmp
sahf
insl
cmp
jno
cmp
sbb
sbb
repnz
lahf
cmp
add
std
adc
hlt
in
hlt
leave
and
ret
and
cwtl
je
xchg
jg
xchg
lcall
ret
push
add
cmpsb
pop
lahf
movsb
sbb
jmp
call
out
daa
cmp
jno
xor
pop
iret
loopne
and
xchg
mov
or
dec
cld
daa
or
addr16
or
pop
arpl
out
cmp
push
inc
test
mov
mov
add
mov
je
or
jp
mov
in
xor
push
cld
sbb
xlat
shlb
cmp
repnz
adc
sub
sahf
jmp
pop
xor
dec
arpl
int3
mov
out
iret
ret
mov
inc
into
vrsqrtss
popa
fs
jae
xor
adc
data16
andb
xor
es
lret
mov
popf
out
outsl
int3
cld
sti
dec
xchg
push
jecxz
cmpsl
sub
nop
dec
lahf
or
std
insb
xor
add
xor
ret
rcrl
and
aaa
je
popf
jp
repnz
lcall
adc
in
idivl
daa
cmp
xchg
addl
repnz
cmp
lods
int
inc
and
ljmp
popa
iret
in
mov
xor
movsb
lock
je
inc
cmp
adc
lock
add
dec
sbb
sbb
cmp
fwait
lret
push
stos
cld
or
lea
lret
inc
jb
out
pushl
sub
and
push
fucomip
xor
and
fdiv
in
push
aam
jne
bound
and
push
add
mov
rorb
cmc
gs
mov
in
jb
jg
dec
mov
notb
sbb
inc
jecxz
aas
ja
inc
cmc
stc
cmp
arpl
mov
popf
cmc
and
aaa
hlt
cmpsb
add
sbb
pop
repnz
repnz
daa
out
or
sub
ds
dec
add
jns
ficoml
les
stos
repnz
shrb
and
int3
ret
or
push
fists
xchg
addr16
jecxz
pop
jno
outsb
mov
xor
inc
mov
jle
and
push
cmpl
sbb
stc
sahf
fmuls
or
clc
shrb
jbe
mov
adc
std
dec
inc
xchg
sbb
gs
outsb
push
lods
dec
cld
xor
mov
popa
cmpsb
shll
cmpsl
cwtl
es
push
adc
sbb
in
jno
jp
inc
in
cld
andb
cmp
mov
fstpl
aaa
dec
pop
stos
push
and
xlat
or
popw
xchg
out
fisttps
loop
idivb
cmpsb
je
in
push
mov
imul
mov
pop
pop
or
rcrl
lret
lea
sbbw
xor
popf
movsl
std
cmp
add
mov
or
inc
sbb
pop
lcall
mov
lret
cwtl
lahf
push
jecxz
xchg
repz
pop
mov
mov
jg
sub
xlat
push
pop
gs
sbb
adc
fstps
cmp
loope
pushf
comiss
int
loop
sub
xchg
cmp
into
sbb
dec
out
stc
repz
dec
mov
add
mov
aaa
in
mov
jne
shlb
xchg
mov
aaa
add
outsl
into
push
loopne
stc
jbe
decb
js
or
ljmp
fidivl
push
xlat
test
loope
xor
dec
jnp
decb
arpl
popa
push
aas
sub
sub
sbb
scas
jae
jp
jb
aad
test
movsl
je
out
negl
subb
iret
popf
pop
sbb
mov
sub
mov
add
pop
jne
scas
jg
mov
fcoms
bnd
adcl
std
xor
mov
int3
adc
lods
stc
icebp
fabs
ret
test
inc
jo
and
adc
push
xchg
mov
lods
stos
inc
es
sub
cld
jno
or
or
inc
cmpsb
inc
ja
icebp
inc
cmp
fisttpl
into
jno
cmpsb
adc
xchg
jmp
jmp
leave
xor
ljmp
add
mov
cmp
push
pop
jo
lods
push
inc
mov
nop
xor
popf
popa
fadd
or
ljmp
ja
pop
mov
sub
daa
insb
mov
lahf
xchg
adc
mov
call
and
jne
push
sub
add
xor
pop
test
adc
cld
popa
mov
xchg
xchg
xlat
lods
movsb
sbb
ja
into
push
testl
test
loope
imul
jecxz
mov
addb
cli
xchg
lds
and
sbb
shlb
push
cli
into
fdivrs
dec
dec
jge
jmp
sub
pop
adcl
jg
aam
cmp
imul
mov
scas
mov
mov
ret
push
enter
sbb
scas
cmpsl
cmp
cmc
push
cmp
or
outsl
add
push
into
in
nop
into
add
negb
inc
jp
jo
mov
fcmovnbe
mov
aaa
inc
stos
add
in
ja
nop
sbb
mov
mov
fs
arpl
dec
mov
sbb
adc
mov
outsl
loopne
aad
fwait
cltd
push
and
ret
jb
jae
xchg
lcall
icebp
sti
or
mulb
add
stos
push
ror
cli
test
mov
dec
es
lret
push
mov
sbb
icebp
adc
pushf
iret
inc
sub
xor
jnp
ds
xchg
push
movsb
out
inc
aas
cmc
out
dec
mov
push
add
add
xor
or
xchg
pop
fsubrp
data16
jb
mov
dec
mov
out
popa
in
js
xchg
movsl
dec
fdivs
jbe
aam
loopne
pop
inc
lds
push
mov
mov
push
add
mov
and
inc
mov
inc
mov
out
cmp
pop
outsb
add
dec
aad
and
arpl
pop
fwait
nop
aad
and
add
ds
mov
out
mov
fmull
xchg
adc
inc
mov
or
mov
ds
jne
mov
cmp
mov
icebp
cmp
jg
divl
shlb
jae
pop
lret
pop
jmp
pusha
hlt
lods
dec
testb
jp
outsb
jle
addl
sub
fmull
pop
sbb
insl
cmp
push
ficoml
aam
mov
mov
mov
mov
dec
roll
mov
cmpsb
push
inc
pop
loope
pop
test
ja
push
loop
dec
outsb
fsubrp
js
or
sub
sub
mov
repnz
enter
das
hlt
movsb
xchg
out
fldenv
cmpsl
or
dec
lea
jle
mov
jne
inc
mov
inc
xchg
add
cmp
jo
lea
push
push
aad
and
mov
std
call
mov
pop
addr16
out
js
movsl
sub
cltd
gs
sub
lds
push
out
fs
add
pop
subb
cmc
cld
fcomps
jg
cli
test
ret
sarl
dec
inc
bound
push
popf
ffreep
ja
je
sbb
push
out
sbb
mov
dec
sub
rolb
cmp
clc
mov
jae
scas
out
xor
in
xor
jmp
mov
neg
rorb
nop
xchg
push
xchg
cmp
lret
sub
push
pop
sub
adc
call
stc
out
or
push
cmp
aam
pushf
outsb
push
aad
adc
nop
lret
fcompl
mov
pop
in
in
pop
inc
cltd
jae
sahf
push
and
mov
lret
rcrl
push
adc
inc
push
sarb
xor
xor
push
push
push
repz
andnps
popf
movsb
mov
cld
push
test
or
in
cli
jb
and
aad
adc
idivl
inc
jp
cmp
and
push
outsb
cmp
mov
and
scas
pop
sbbl
out
sbb
jmp
daa
xchg
dec
jns
pushf
mov
fbld
and
jmp
xor
scas
leave
add
hlt
mov
dec
leave
mov
fcompl
insb
add
cmp
mov
or
or
mov
pusha
dec
push
fnstsw
sub
jg
popf
shll
subl
in
hlt
dec
xorb
lret
daa
mov
ficoml
jae
daa
xchg
mov
subl
add
push
mov
ret
sub
movsl
jg
mov
xlat
xchg
mov
mull
cmp
bound
mov
mov
shl
sti
outsb
iret
in
cmp
test
fidivrs
fwait
stos
lret
cltd
out
sub
pop
pop
imul
push
mov
sbb
mov
mov
pop
stc
add
sbb
jno
fwait
sub
or
push
sbb
cli
inc
pop
cmp
aam
lds
pop
add
fsubrl
js
test
adc
mov
dec
mov
jnp
mov
insb
dec
test
push
sahf
sub
xor
mov
push
cwtl
lods
shrb
mov
push
outsl
or
sbb
fisubrs
mov
xlat
jne
lret
cli
shll
sbbb
jl
ljmp
dec
cmp
add
push
or
xor
xchg
jmp
inc
test
out
xor
std
stc
loope
adc
xchg
jmp
jle
icebp
pop
imul
pop
or
xor
ljmp
rcll
cmp
cmp
lahf
lahf
xor
lea
loopne
push
xorl
sbb
cs
shlb
pop
aas
loop
pop
and
fisubs
or
call
rep
iret
dec
xor
bound
mov
loopne
pusha
ficompl
jle
test
inc
pop
fcmovnb
xchg
adc
sbb
dec
xor
mov
mov
inc
fidivrl
mov
inc
xlat
mov
call
mov
or
sti
add
les
arpl
adc
pop
xchg
add
cmp
mov
jne
push
or
cmp
dec
push
adc
popa
xor
dec
or
cmp
push
cltd
cli
aaa
imul
int
cmp
mov
mov
cs
sub
outsl
or
aam
lcall
ja
mov
xor
cmpsb
lret
dec
sub
mov
btr
inc
push
out
cmp
mov
push
cmp
movsb
cmp
add
push
ret
lahf
mov
mov
aas
dec
int
xor
aam
xchg
jl
insb
lahf
mov
fisubl
int
lcall
out
cmp
or
xor
scas
out
jge
mov
cmpsl
cmp
mov
inc
rclb
add
and
popa
mov
mov
xor
dec
jne
sub
mov
push
fwait
pushf
mov
scas
sub
push
loope
cwtl
iret
sbb
mov
mov
bound
and
mov
pop
xor
addr16
push
or
mov
jecxz
call
test
inc
or
fimuls
jbe
pop
std
lea
gs
xchg
or
lret
dec
jmp
sub
insb
lea
imulb
or
sub
adc
in
mov
lods
push
insb
mov
jle
fwait
sub
fdiv
pop
movsl
cmpsb
les
rolb
mov
fstps
pop
sarb
imul
enter
je
mov
sub
pop
lods
stos
xchg
negl
data16
int
inc
dec
int3
add
scas
inc
xor
int
mov
and
in
push
ja
dec
xor
jmp
jns
jle
in
pop
push
nop
in
fstps
mov
mov
mov
pop
lahf
out
xchg
lods
cmp
inc
hlt
xchg
sarb
mov
jbe
cwtl
jb
test
dec
out
loopne
mov
mov
mov
jnp
testb
fidivrs
out
or
aad
mov
scas
sbb
and
or
xlat
rorl
sub
ja
jnp
decb
push
nop
xchg
or
sbb
adc
xor
ret
jns
les
cmpsl
lret
jnp
lcall
lods
push
inc
mov
pusha
jnp
push
sub
jg
jmp
cwtl
in
aam
movsb
inc
shlb
push
pop
pusha
shrb
outsl
xor
mov
es
xlat
call
or
call
mov
repz
ja
ljmp
mov
call
mov
data16
popf
enter
mov
pusha
and
jp
push
roll
and
insb
js
ds
shr
sbb
sbb
fmull
dec
push
mov
jns
xor
jae
faddl
out
mov
jo
and
orl
xchg
mull
aaa
pop
in
sbb
cmp
mov
sarb
xor
cmp
lea
mov
ljmp
xchg
jnp
popl
xchg
and
flds
or
lahf
mov
mov
push
dec
enter
push
mov
movsb
push
dec
pop
pushf
nop
jge
arpl
and
sahf
lret
ret
mov
into
idiv
pop
negb
mov
jecxz
cs
les
mov
and
aaa
pop
xchg
dec
mov
push
adcl
mov
repz
dec
push
popf
mov
mov
add
sbb
cmp
hlt
push
cmpsl
sbb
and
adc
xor
lret
popa
fs
adc
loopne
xor
xchg
fists
mov
jbe,pn
and
mov
mov
cmp
push
inc
mov
mov
xchg
xor
loopne
push
mov
mov
sub
jge
sub
mov
popa
stc
or
addr16
in
aaa
and
adcb
jge
pop
and
push
loope
lcall
push
ds
jmp
stos
les
mov
jno
mov
in
jnp
mov
scas
mov
mov
ret
repz
inc
cld
iret
cmp
cmpsl
add
mov
jae
popf
mov
push
fwait
imul
xchg
icebp
sub
cmp
push
push
push
push
in
fldl
mov
fmuls
leave
nop
inc
push
shlb
fisubrs
xchg
jno
mov
mov
aad
dec
dec
push
and
jecxz
jo
popa
loope
stc
popa
iret
rcll
cwtl
lahf
dec
lret
jns
cld
sub
sub
jmp
sub
xchg
cli
lahf
xchg
in
dec
add
cmp
mov
sub
inc
pop
rorb
test
cmp
clc
pop
fnsave
test
push
imul
pop
push
xchg
rcrb
jg
outsb
stos
mov
jl
jne
cld
xor
leave
cmp
ja
mov
xchg
rol
dec
or
mov
cmc
dec
inc
repz
fwait
aam
dec
arpl
or
sub
xchg
cmp
jg
lcall
adc
call
dec
pop
cwtl
cmc
lret
jnp
adc
adc
mov
cmpsb
bound
push
enter
push
int3
daa
movsb
stos
lret
push
addb
mov
sub
xchg
out
roll
jmp
sub
sub
roll
movb
and
nop
mov
jl
mov
call
std
xor
or
jb
data16
adc
mov
push
test
out
call
lret
jge
pop
dec
inc
popa
jge
int
lock
fnsave
mov
fadd
cmpsb
dec
mov
iret
pop
test
ss
jl
movsl
mov
aad
xor
repz
out
jbe
bound
fbld
pushf
or
mov
sti
jb
jnp
inc
dec
dec
aad
leave
jo
cmpsl
mov
ret
stos
push
pop
ss
adc
mov
pop
xor
hlt
cmp
cmp
lods
jp
pop
or
ljmp
adc
sbb
xchg
cmp
pop
ss
xor
xchg
std
cmp
or
sbb
inc
lahf
pop
cmp
int
pop
push
or
inc
sub
test
inc
fldt
adc
shrb
out
cld
cmp
ret
xor
push
es
in
lret
mov
stos
sub
push
inc
xchg
sub
mov
les
jmp
lds
shlb
testb
imul
mov
out
pop
inc
aas
mov
sub
push
jmp
and
inc
icebp
inc
dec
lods
or
arpl
cmp
shl
inc
rcrb
adc
or
dec
jbe
aad
jbe
xor
push
shlb
jo
push
lahf
js
mov
mov
and
xor
shlb
push
fstps
sub
das
xchg
rorl
lret
dec
aam
inc
popl
push
into
stc
adc
lock
int3
sbb
xchg
mov
inc
rcrl
pushf
int
data16
divl
insl
enter
dec
hlt
jb
sbb
insl
sti
jle
cmc
jle
popaw
test
jg
jae
ret
fadds
mov
mov
int3
inc
jno
aas
mov
les
jecxz
enter
je
div
lods
rolb
inc
outsl
xor
mov
jae
lret
ret
sub
pop
push
fisttpl
mov
test
cmp
lds
xor
std
adc
stos
cli
cli
aam
cmp
in
out
sub
xor
gs
gs
aaa
mov
out
or
sti
fwait
scas
cmp
sbb
sbb
push
pop
paddusw
inc
jle
mulb
adc
add
mov
data16
jne
xchg
je
aam
in
faddl
pusha
adc
aaa
pop
addr16
or
sbb
mov
cmp
fmull
shrl
repz
push
fcoms
push
cmpl
adc
sub
movsb
cmpb
add
fsts
mov
inc
lahf
jg
inc
pop
std
divl
adc
jae
fxch
mov
pop
dec
shll
jmp
movsb
and
jle
movsb
inc
sar
adc
aam
aad
push
test
movb
xor
cltd
cmp
pop
pop
cwtl
fisubrs
roll
xor
negb
shll
xchg
xchg
sub
rorl
inc
testl
imul
ret
add
dec
mov
decl
in
and
cs
add
push
fstpl
mov
out
lret
les
bound
sahf
dec
mov
in
mov
jg
jge
je
ljmp
loope
ret
loopne
out
cmpsb
jge
push
add
mov
push
popa
cld
out
fwait
jns
mov
mov
mull
jmp
fcmovnu
jecxz
mov
data16
cmp
xchg
int3
addl
rorb
jae
mov
jno
sahf
jb
and
in
pushf
not
in
mov
inc
bound
dec
mov
in
mov
stos
dec
inc
mov
cmp
cmp
in
inc
sub
lds
pop
xor
mov
popf
mov
jb
dec
ds
out
or
test
xchg
daa
andl
sbb
ds
ret
popa
xor
dec
loop
fsubrs
aad
iret
stos
xchg
xchg
mov
fsubrl
mov
or
cmp
movsl
pop
int3
leave
sub
enter
jno
push
sub
xchg
cwtl
adc
loope
icebp
aam
sbb
pushf
aad
sub
adc
call
test
iret
jle
out
popa
push
les
pushf
mov
cmp
jns
fstpt
dec
and
mov
mov
subb
outsl
das
mull
ss
xor
jl
pop
pop
push
pop
into
btc
fdivr
sub
xor
loop
cltd
js
pop
add
ljmp
mulb
test
inc
push
fs
ss
ljmp
scas
sub
mov
hlt
xchg
pop
mov
mov
jmp
sub
adc
adc
pushl
subl
scas
push
inc
push
cli
sub
hlt
mov
daa
jecxz
cmp
push
out
int
bound
jno
push
inc
popf
jle
into
loopne
push
sar
jb
je
movsb
out
mov
xor
cs
xor
scas
inc
cmp
bound
jo
repz
xor
or
cld
clc
mov
mov
pop
dec
imul
jnp
mov
mov
lret
sbb
loop
adcb
daa
enter
mov
or
repnz
add
push
pop
cld
rcl
jbe
addr16
jns
xchg
adc
mov
pop
inc
cld
repz
mov
hlt
clc
and
lahf
mov
hlt
adc
bound
es
lret
sub
mov
pop
mov
jp
mov
xor
mov
mov
sub
adc
jb
je
pushf
shll
fs
jg
call
dec
in
fbld
xor
sahf
shlb
std
cwtl
je
push
into
jmp
sahf
add
out
pop
stos
xchg
cmp
loope
mov
in
cs
inc
mov
insb
mov
mov
mov
xchg
out
dec
or
push
jecxz
popf
mov
jo
ret
ret
fildll
loope
xchg
sti
inc
imul
xchg
adc
cmp
jmp
lds
inc
cmp
xchg
pusha
add
enter
jbe
scas
dec
nop
xchg
hlt
sub
pop
pop
je
shlb
jns
in
mov
mov
cmp
cmp
dec
pop
add
cmpsb
or
enter
inc
sub
hlt
call
shrl
cmp
cs
lea
push
movsb
mov
xor
shlb
pop
pop
cmp
cmp
sti
add
lret
pop
inc
and
mov
mov
cmp
and
push
imul
cmp
and
lea
dec
cmpsb
fstpl
sbb
fmulp
jecxz
push
mov
out
jns
add
sbbb
pop
sbb
jns
ss
mov
pop
mov
fildl
adc
dec
ficompl
mov
inc
jg
mov
inc
push
call
xchg
ficoms
arpl
addr16
stos
push
xor
jecxz
test
roll
lea
or
sbb
lcall
cmp
xchg
es
pop
xchg
pusha
mov
pop
adc
xlat
cmp
notl
out
push
fcomps
xor
fwait
mov
jle
dec
repnz
mov
adc
jbe
sbb
fidivs
lods
fstps
pop
loop
push
pop
shll
and
mov
sub
and
push
popa
cmpsl
lock
xchg
and
add
jg
pushf
jno
sub
fnstcw
stos
adcl
add
or
dec
pop
pushf
out
adc
in
loop
pop
add
xor
xchg
push
cmp
add
lea
jecxz
lods
sbb
sub
sti
ss
sahf
fidivl
xor
adc
andl
inc
sub
sbb
jmp
test
ja
sti
lea
push
inc
mov
jns
lods
mov
fimuls
mov
mov
fimuls
sbb
orb
or
hlt
je
cltd
cmpsl
outsb
or
jae
push
add
adc
add
lea
inc
in
mov
lret
xchg
adc
in
sbb
sti
dec
add
call
aad
inc
pop
in
push
and
push
mov
mov
cmp
xor
sub
out
imul
or
xor
push
xor
testl
lods
or
inc
or
inc
insb
mov
pop
and
out
nop
in
jb
adc
jle
pop
jns
or
out
jp
movsl
push
mov
fisubs
stos
sub
mov
sbbb
into
cli
cli
je
sbb
rcr
cmpsb
jbe
pop
inc
jle
xchg
xor
cmc
sub
jbe
es
nop
je
jecxz
cs
dec
punpckhbw
dec
loope
mov
lahf
addl
push
test
fcomi
test
subl
xchg
outsb
sub
or
sbb
imul
mov
insl
mov
cli
cmp
add
xchg
dec
hlt
xor
mov
insl
clc
inc
mov
es
cmpsl
sub
jb
and
pushf
push
xchg
mov
loope
xor
pop
xchg
mov
iret
fcmovne
fstl
add
cmp
or
js
roll
iret
dec
stos
andl
push
mov
add
ret
push
pop
das
xchg
rcl
xor
dec
adc
push
jno
fimuls
ret
sub
dec
repnz
test
mov
inc
pop
mov
popa
jo
clc
cmp
mov
fmul
dec
stc
in
xchg
pop
pop
mov
push
jp
outsb
xor
pop
jae
sbb
xlat
xchg
std
xor
sub
add
push
int
dec
mov
inc
loopne
sbb
or
mov
fdivp
jae
sub
jbe
push
or
jl
mov
jne
lock
jle
shll
push
in
shrb
push
clc
mov
ljmp
dec
push
test
pusha
push
adcl
inc
test
call
lret
movsb
inc
movsl
push
cs
dec
inc
cwtl
mov
mov
jle
loope
test
and
jg
xor
enter
movsb
ds
div
pushf
decb
sub
push
fistl
xor
cmp
xchg
lock
inc
dec
out
sub
arpl
inc
fwait
loopne
mov
aaa
mov
xor
sbb
or
xchg
or
imul
outsb
gs
lods
sbb
shlb
adc
and
mov
es
test
and
sbb
jne
push
add
mov
add
and
lods
xchg
pop
out
out
and
mov
lods
pop
add
adc
jno
in
sub
insl
mov
daa
sbb
mov
incl
cmp
add
jae
pop
jno
shll
mov
shl
jecxz
es
adc
jo
lock
mov
into
pushf
mov
rcll
push
pusha
mov
inc
aam
mulb
call
les
dec
mov
push
dec
popf
repz
adc
push
and
lods
dec
sbbl
cmp
xchg
jno
enter
jg
in
xor
ret
inc
shr
loope
mov
pop
inc
js
shll
subl
shll
ret
inc
push
or
fcmovbe
mul
in
sahf
and
mov
fnsave
xor
aam
repnz
add
cmpsl
pop
lods
sbb
fcomip
cld
add
aad
mov
mov
inc
je
pushf
sbb
ljmp
jno
sahf
pop
aam
inc
jg
rcrb
fadd
and
sbb
dec
push
jg
std
jne
pop
or
aam
imul
mov
aad
inc
push
rcrb
cmpsl
jl
loope
sub
cwtl
cs
cwtl
sarl
ljmp
jmp
or
jns
xchg
and
push
int3
sar
jne
pop
and
or
mov
mov
mov
sahf
lret
clc
adc
pop
movsb
insb
mov
into
push
movsb
test
or
es
lcall
popf
cmc
dec
inc
sahf
jg
inc
inc
xor
fdivl
push
push
loop
ss
or
repnz
imul
jb
mov
subb
aaa
adc
movsl
faddl
xchg
paddusb
xchg
mov
xor
cmc
aad
or
push
aad
test
cmp
add
adc
push
pusha
adc
mov
inc
test
pop
mov
hlt
faddl
in
jns
sub
xchg
insl
add
decl
dec
repnz
aas
iret
imull
aad
xlat
stos
cld
cmpl
mov
dec
push
mov
dec
lret
add
mov
ja
or
lock
xor
pusha
shl
cli
jge
cltd
push
clc
popa
mov
lret
test
cmp
scas
aas
mov
in
and
in
in
iret
jp
int3
rorb
add
stos
xchg
or
ds
push
scas
fwait
lcall
fnstenv
xchg
test
cmpsl
stc
jl
xchg
sbb
cs
scas
add
cmp
in
cmpsl
pop
inc
stos
test
pop
out
lahf
cmpb
sbb
fdivrs
xchg
aam
scas
or
in
jge
jl
jae
aas
and
pusha
shlb
xchg
icebp
and
cmp
mov
pop
mov
mov
test
push
mov
pusha
lea
mov
cs
sub
xchg
sbb
int
and
mov
imul
aaa
sbb
outsb
insl
xlat
pop
jnp
leave
mov
into
mov
sub
lahf
sub
mov
inc
add
push
sub
dec
mov
mov
sbb
xchg
push
xchg
dec
and
mov
dec
mov
sbb
sahf
test
push
xchg
testl
jo
arpl
movsl
jb
xchg
lret
test
stos
test
mov
mov
int
mov
jp
dec
add
xchg
jmp
imul
enter
in
xor
mov
xchg
cltd
sbb
pushf
inc
push
int3
inc
add
outsb
imul
and
push
sbb
ss
or
pop
fimuls
aaa
mov
sahf
movsb
push
and
and
insb
xor
pop
js
xchg
shll
adc
mov
daa
out
lea
test
test
push
mov
les
out
roll
push
mov
movsl
mov
mov
pusha
pop
jl
adc
pop
jmp
pop
clc
add
push
mov
inc
test
jmp
popf
jnp
inc
mov
add
sub
mov
inc
negb
loope
mov
mov
push
sbb
push
or
cmp
pop
dec
fsub
fcoms
jbe
fs
test
push
cwtl
mov
or
or
dec
sbb
pop
add
sti
pop
idivb
sbb
jmp
mov
fists
xor
push
out
mov
push
push
cmp
adc
mov
pop
ret
pop
and
mov
nop
inc
pop
decl
xchg
fcompl
cmpsb
loopne
jle
push
mov
and
cmp
addr16
sub
roll
int3
add
aad
sub
icebp
imull
cmp
call
scas
in
sub
ljmp
jge
pop
xchg
push
loopne
xchg
movsl
cmp
xchg
sarl
out
jmp
xchg
dec
and
in
push
xchg
cmpsb
xor
dec
mov
int
out
adc
or
or
and
out
jmp
movl
shl
jg
cs
movsl
xorb
sbb
lcall
sahf
sbb
add
sub
jne
xlat
sahf
aam
fdivrl
add
mov
lock
jbe
jl
dec
add
pop
cltd
sbbb
subl
ds
lds
xchg
aaa
lahf
std
fcmovnu
imul
adc
lods
scas
mov
loop
and
loop
or
mov
push
fwait
pusha
imulb
rcll
inc
mov
nop
add
not
add
imul
arpl
jae
popa
xor
loope
inc
out
xor
orb
fs
jo
adc
test
insb
and
dec
adc
in
scas
mov
push
sbb
or
ss
adc
push
jecxz
out
ja
lcall
jge
lds
mov
sbb
push
sahf
repz
xchg
cmp
ss
push
push
push
jns
xor
mov
cmp
xor
movsb
sbbb
sbb
inc
push
inc
pop
push
xlat
mov
in
jl
sub
ljmp
loopne
jne
pop
cmp
imul
add
push
and
test
int3
pop
popa
js
je
clc
test
add
or
mov
dec
adc
jbe
cli
lahf
hlt
call
mov
add
jb
outsl
xchg
xchg
in
push
comiss
stos
int
adc
or
jns
jg
cmpl
cmp
lret
test
pusha
movsb
cmp
inc
cmp
mov
cmp
mov
fists
mulb
mov
lret
cmp
inc
jns
cltd
jmp
bound
push
cmpsl
jp
xor
cld
stos
dec
push
mov
test
stos
aaa
pop
adc
or
cmp
adc
in
call
in
mov
inc
pop
sbb
es
out
testb
loope
pushf
sahf
enter
jp
das
xchg
ja
add
pop
lds
add
pop
mov
roll
fidivrs
fcoms
out
arpl
or
in
ret
popf
inc
mov
mov
fnsave
fwait
mov
in
or
loop
mov
out
arpl
or
pop
in
jno
pop
push
dec
xchg
dec
push
jo
mov
mov
pop
adc
repz
dec
or
push
pop
mov
dec
int3
movsl
inc
cs
jmp
out
test
into
fsts
mov
test
stos
add
aad
and
mov
inc
je
inc
mov
push
lret
inc
push
cmc
or
adc
enter
cmp
test
in
leave
push
in
pushf
push
sub
insb
popa
add
iret
es
ja
dec
lds
bnd
adc
scas
pop
aas
loopne
mov
cmp
movsl
and
jecxz
mov
sub
lods
jns
pop
les
xlat
or
pushf
addr16
inc
jg
sbb
adc
sub
in
pop
jge
mov
xor
imul
test
iret
pop
jecxz
rol
jmp
and
or
mov
or
xchg
aad
cli
pusha
jecxz
add
fcompl
pushf
sub
outsb
push
and
sbb
loop
cmp
cmc
cwtl
dec
imul
cmp
mov
lahf
push
cmpsb
or
addb
lret
push
pop
int3
jecxz
jge
sub
mov
mov
sarb
fwait
jns
cld
jns
mov
push
call
mov
mov
ret
enter
pop
cmp
cmp
cld
xchg
arpl
ja
sarb
xor
iret
xchg
imul
push
adc
and
ja
fcompl
inc
in
sbbl
into
outsb
jne
lock
sub
les
nop
outsl
jmp
cmc
aam
mov
mov
or
dec
cld
mov
jl
mov
iret
or
pusha
xchg
shll
movsb
push
push
addb
dec
fidivrl
mov
out
lods
sarb
dec
js
sahf
ret
mov
das
bound
sub
jg
jecxz
adc
and
movsb
add
lret
cmc
sbb
cli
dec
cmp
ret
mov
add
mov
in
repz
clc
insl
jbe
adc
movsl
shrb
jne
mov
nop
outsl
jge
sub
in
ret
int3
in
stos
inc
out
mov
mov
xchg
icebp
stc
lods
mov
add
icebp
inc
jp
sbb
mov
cmp
lcall
mov
cmc
adc
lds
add
in
inc
jo
ret
enter
daa
clc
jne
fwait
arpl
mov
cwtl
stos
add
imul
bound
and
imul
xchg
insb
push
leave
pushf
mov
inc
fnstenv
dec
push
mov
rorl
cmpsb
jle
add
mov
imul
loop
ljmp
pop
jl
in
test
sub
inc
notl
mov
and
into
imul
fisttpll
xchg
cmovae
repnz
mov
sti
out
and
out
enter
cli
push
pop
xchg
idivl
in
mov
jns
dec
nop
fstps
imul
xlat
add
adc
or
addb
cmp
lea
lock
push
cwtl
movsl
xor
outsl
sub
pop
sbb
cmp
xor
shr
mov
pop
andl
mov
add
loop
cmp
sbb
ret
or
lea
xor
add
mov
in
vzeroupper
cld
jb
ret
imul
add
pop
pop
orb
pop
loope
adc
outsl
cmpsb
addr16
mov
mov
mov
lea
jg
push
les
cwtl
hlt
and
fldenv
adcl
dec
push
jle
xchg
jge
pop
pop
dec
testb
mov
enter
dec
mov
push
in
adc
aam
call
and
pusha
cmpsl
mov
ret
loope
or
cmp
push
jnp
test
dec
negl
imul
push
and
out
je
adc
jge
inc
test
sbb
cmp
out
shll
xchg
aaa
enter
daa
and
xor
dec
popf
loop
in
xchg
cmp
mov
sbb
arpl
ss
in
cmp
popa
outsl
ljmp
xchg
xchg
inc
popa
pop
fistpl
js
fiaddl
xchg
jle
lret
push
sub
cmp
fcomi
or
sbb
dec
inc
pop
adc
xchg
jno
sbb
dec
mov
lock
mov
jg
xchg
cld
dec
jbe
lods
fstl
jnp
or
dec
or
or
or
cmp
negl
pop
pop
add
andl
cmp
mov
out
and
adc
sub
daa
std
stos
mov
out
and
push
pop
push
xchg
cmpsb
inc
cmc
adcb
xor
loopne
imul
cmpsb
scas
gs
pop
cmpsl
mov
in
repnz
fsts
inc
jmp
and
loopne
mov
inc
arpl
and
ret
mov
fimull
cmp
add
cmp
lods
sbb
fbstp
xor
stc
mov
mov
dec
mov
jle
je
jle
test
aad
and
test
dec
mov
xchg
notl
push
fistpl
test
xchg
cmpsl
decl
mov
lret
pop
in
xchg
xor
out
ret
int
fnstcw
jne
lods
push
or
jnp
test
jp
and
xchg
jmp
pop
out
std
aas
or
jmp
sub
leave
lret
rorl
mul
imul
mov
jns
daa
outsl
mov
das
sysret
subb
ss
sbb
repnz
pop
outsl
subb
jge
xor
lds
sbb
inc
sub
repnz
das
es
sbb
pop
cmpsl
scas
lret
or
ss
jge
bound
jnp
cmp
cmp
add
repnz
aam
loope
fs
sahf
add
clc
add
xchg
push
dec
repz
jg
inc
pop
xorl
mov
mov
insb
pop
insl
mov
cmp
fistl
sub
enter
loope
xchg
ficoml
and
sub
sub
dec
daa
pusha
addr16
insl
inc
pop
sarl
push
shlb
mov
addr16
cmp
xor
out
and
or
out
cmpsb
nop
movb
shl
jo
lds
xor
int
daa
push
call
jl
inc
stos
out
jno
out
xchg
add
movsl
mov
add
sbb
jp
xchg
mov
mov
aaa
sub
mov
inc
popa
ror
ds
push
loope
nop
mov
insb
mov
dec
sbb
and
and
repnz
lcall
repnz
jns
mov
mov
dec
sub
enter
insb
pop
shrb
jns
test
fs
das
xor
js
cmpsl
push
pop
out
jnp
ds
dec
rcl
pop
ljmp
jbe
push
inc
fistpll
jge
or
push
int
shll
fdivrl
pop
mov
loopne
mov
stos
repnz
jl
push
mov
das
inc
push
repnz
mov
pop
and
daa
lret
push
or
sub
insl
adc
shlb
push
sbb
inc
push
neg
test
or
mov
aas
sti
mov
push
inc
and
cmp
sti
cmp
daa
push
call
or
cmp
push
jne
inc
daa
std
aam
dec
sub
ds
xchg
fstp
xlat
mov
push
pop
jbe
dec
jg
adc
movsl
and
leave
fdivrs
sub
test
cld
and
cmpsb
xor
and
cltd
pop
push
push
add
enter
lds
imulb
testl
xchg
sbb
jecxz
dec
cmp
fs
out
push
cwtl
mov
mov
mov
daa
in
imul
test
cmpl
andl
enter
or
js
lahf
pop
jmp
sbb
lret
in
ficomps
testl
orl
dec
sarb
lea
mov
push
push
fsubrl
push
cmp
call
push
push
leave
fidivl
cmpsb
sbb
jmp
orl
mov
mov
or
cmp
push
jne
out
mov
add
push
aam
fnstsw
mov
dec
cmp
pop
repnz
int3
mov
scas
add
xor
out
bound
push
mov
or
sbb
cmp
pop
mov
jmp
popa
ja
jnp
mov
pop
sub
mov
xor
mov
cmp
jo
add
pop
dec
jns
popa
mov
clc
shrb
push
arpl
inc
dec
jb
sbb
xor
icebp
mov
sub
addr16
test
je
mov
fbld
adc
cld
aad
popf
cltd
cli
dec
mov
fs
outsb
ja
push
cld
jb
jns
mov
popl
repnz
sub
aam
push
mov
icebp
es
adc
and
mov
div
push
dec
sti
cwtl
inc
sub
dec
aam
shrb
int
inc
lods
repz
not
rcr
xchg
inc
inc
cmp
repz
sbb
test
mov
xchg
push
dec
push
andl
push
mov
loopne
ljmp
and
cmp
call
inc
and
je
std
popa
pop
add
fwait
mov
mov
in
inc
inc
movsl
xchg
xchg
insl
and
jb
xor
mov
lea
outsl
mov
cli
ret
sub
jbe
xchg
sub
sbb
pop
lods
jb
mov
loope
mov
jecxz
stos
add
ss
inc
jnp
add
jnp
fidivl
cmp
jecxz
push
insb
sbb
dec
sub
sbb
fsubrs
movsb
fiaddl
push
shll
test
repz
cs
ja
negl
dec
das
cld
dec
xor
fiadds
mov
cmp
mov
out
inc
int3
ficoms
jb
nop
push
mov
clc
pushf
adc
lds
jns
into
hlt
lods
insl
in
push
cmp
mov
cmp
add
scas
jno
jecxz
nop
jbe
pop
mov
adc
and
fs
arpl
and
dec
fcmovne
or
jb
ljmp
xchg
jae
out
jmp
dec
popf
movl
ret
or
hlt
arpl
xchg
mov
scas
jmp
inc
or
pusha
mov
fnstsw
push
jp
fisttps
xor
pop
sbb
lea
es
xchg
jge
add
xor
mov
fnstsw
xor
scas
push
call
xchg
cs
les
jg
arpl
fildl
lret
test
pop
popf
mov
pop
xchg
or
loopne
dec
pop
lcall
mov
xchg
mov
sub
add
jo
lcall
push
repnz
mov
inc
inc
sub
ja
ss
das
out
pop
addl
xor
push
or
push
mov
xchg
xchg
adc
fsubrs
scas
enter
cmp
mov
mov
cmc
popf
ficoml
mov
imul
pop
fnsave
xchg
sbb
xchg
xchg
mov
out
push
aas
lret
pusha
pop
jae
mov
push
dec
andl
and
lods
mov
fnstenv
hlt
dec
or
push
js
pop
sbb
pop
sbb
sub
addr16
inc
mov
out
jne
adc
add
push
stos
mov
les
movsb
push
lahf
enter
push
adc
fisubrl
push
and
scas
repnz
loopne
mov
fistl
push
sti
lock
inc
or
inc
pop
cld
or
clc
hlt
stos
pop
xor
les
mov
push
sti
fisubrl
imull
inc
fisubl
mov
adc
outsb
adc
jne
inc
inc
xchg
push
sub
addr16
js
xchg
cmp
roll
dec
orl
jle
push
movlps
fcoml
pop
adc
xchg
outsl
jge
lods
mov
aad
sub
repnz
xlat
mov
lods
repnz
mov
xchg
rcrb
mov
pop
fadd
repnz
inc
add
lods
mov
test
out
xchg
fnstsw
movsb
jmp
push
mov
mov
inc
and
mov
out
add
xchg
iret
dec
push
and
jbe
shr
and
ljmp
ljmp
jbe
jno
das
loopne
and
fmull
into
into
fistpl
cmp
adc
popa
mov
xchg
xchg
cmp
and
mov
icebp
mov
mov
es
mov
and
xchg
insb
into
fs
push
rcll
cwtl
add
or
push
flds
mov
push
shlb
stc
mov
jmp
mov
cwtl
push
pushf
loope
arpl
push
adc
cmp
sub
jns
roll
scas
outsl
aas
sbb
pop
icebp
xor
jb
xchg
xchg
jge
sub
ret
jns
out
sub
pop
mov
adc
out
fwait
scas
push
outsl
stos
movsl
daa
dec
add
rcr
fcompl
pop
shll
mov
scas
imul
sti
push
mov
and
cmp
inc
shr
sub
and
shll
dec
outsb
icebp
jl
mov
mov
scas
jne
sbb
jae
mov
popf
ljmp
push
outsl
and
mov
ficompl
andl
lea
jbe
scas
sub
addr16
pop
adc
repz
in
or
xor
lods
xorb
xchg
xchg
mov
or
xor
aas
push
pop
js
test
dec
cli
xchg
xor
lods
ffreep
adc
testb
adc
mov
scas
inc
lret
mov
repz
aam
and
mov
sbb
mov
lcall
xchg
sub
xchg
mov
ficoms
ss
divb
jo
je
jg
mov
sub
cmpsb
loop
pop
scas
std
adc
movsl
stos
std
jb
jo
out
shrb
out
std
jne
outsb
ljmp
xor
stc
push
out
jg
sub
lcall
inc
mov
mov
outsl
loope
ss
jae
dec
push
ja
mov
test
ret
push
ljmp
mov
cwtl
mov
cltd
pop
or
ljmp
enter
jo
hlt
movsb
mov
lods
push
mov
mov
scas
jae
xor
cmp
add
outsl
sub
or
push
push
rol
ljmp
cmp
stc
xor
mov
lock
imul
outsb
stos
int
lret
fldl
movl
ss
add
jo
roll
pop
sub
mov
cmp
cmpsb
outsl
push
ljmp
outsl
mov
popa
jmp
pushf
and
fwait
add
jle
imul
fstps
add
gs
pop
jo
jne
sbb
aas
je
popf
movsb
push
vmovhps
sub
sub
push
xchg
add
add
push
mov
mov
sbb
test
cmpsl
add
add
orl
sub
pop
push
popl
mov
lahf
testl
jbe
inc
add
push
out
loopne
lock
jl
shl
cmpsl
push
in
in
repnz
jmp
jmp
popa
inc
adc
imul
fwait
std
xchg
mov
fxch
cmp
aaa
sarb
out
cs
leave
int
into
jae
jl
out
pop
add
xchg
dec
scas
sar
pop
sub
sbb
aam
pop
test
mov
outsl
dec
shr
inc
pop
insl
hlt
pop
ficoms
ret
aaa
push
aas
out
fistl
imul
or
cmp
imul
push
cmp
push
or
pop
cmp
mov
jae
hlt
or
cwtl
shlb
jecxz
mov
mov
dec
jp
pop
mov
jb
xor
push
push
mov
hlt
cmovle
adc
add
jnp
stos
aam
sti
shll
cmc
mov
rolb
push
ret
mov
rclb
loope
out
int
jle
dec
testl
and
sub
dec
mov
ss
jne
int
test
adc
data16
xor
sub
mov
ret
add
dec
int3
pop
std
mov
jl
mov
pop
mov
nop
sub
lods
popa
mov
cmpsl
cmpsl
outsl
addr16
jg
inc
mov
mov
lods
or
inc
mov
movsl
jge
aad
outsb
cmp
adc
jne
stc
and
mov
inc
dec
add
mov
adc
mov
dec
xor
inc
hlt
popa
fimuls
shlb
adc
icebp
scas
add
cltd
pop
mov
cmp
decl
mov
pop
jo
push
mov
mov
pop
in
xchg
mov
add
in
jle
push
pop
add
sub
lods
imul
inc
repz
lds
inc
fwait
sbb
jle
rorl
fadd
dec
cmp
mov
stos
sbb
mov
movsb
push
ret
pusha
movsb
xlat
mov
loope
mov
call
insl
inc
pop
outsb
add
shrb
add
dec
mov
addr16
add
add
cmpsb
std
lds
into
jns
outsl
pusha
xchg
fsubr
notl
mov
test
lea
data16
mov
jno
cld
hlt
add
pop
jmp
mov
lea
sarb
and
ljmp
cwtl
dec
sbb
pop
shll
xor
fneni(8087
mov
push
stc
test
fwait
jmp
and
insl
sahf
ds
jge
add
rolb
pop
cli
cmp
xchg
jae
sahf
lea
jno
pusha
xchg
pop
cwtl
pop
pop
arpl
mov
xorb
lock
enter
and
jp
dec
or
fimull
les
repz
imul
xor
pop
pop
jnp
sarb
decl
push
fnsave
jmp
fidivl
inc
mov
cld
pop
or
test
ret
pop
add
push
mov
lock
mov
push
es
push
lods
addr16
outsb
cmp
add
js
xor
das
or
inc
sbb
xor
imul
or
dec
mov
jmp
push
mov
inc
lods
xor
mov
xchg
and
rcl
xor
jne
inc
fsts
mov
jbe
sub
addr16
lret
fsubl
dec
pop
subb
aam
jge
fsubl
xchg
in
jge
sahf
aas
outsl
cmpsb
dec
loop
sub
sub
popf
fldenv
pop
in
xchg
sar
xorl
lahf
shrl
cmpb
imul
pop
ss
or
ret
fisubrs
dec
cmp
pushl
add
cltd
dec
mov
or
inc
insl
xchg
clc
push
mov
enter
rcr
test
loope
sti
shlb
repz
cmpsl
test
adc
add
lods
mov
cmpsb
imul
push
and
fsubrl
ret
add
pushf
xchg
testl
out
loop
gs
cltd
add
dec
popf
push
jge
jecxz
fwait
cmp
rorb
xchg
push
pusha
sbb
dec
mov
push
xchg
insl
dec
pushf
arpl
leave
jbe
pushf
jmp
and
aad
iret
repz
pop
jns
mov
int
sub
les
cli
lods
mov
adc
out
or
dec
into
rcr
pop
daa
loope
andb
movsb
fidivrs
sahf
test
clc
push
nop
scas
pushf
ss
pop
pop
mov
jb
and
cs
stos
mov
jle
or
pop
std
loopew
push
outsb
and
inc
mov
rcrl
push
stos
jnp
insb
mov
push
mov
mov
or
js
mov
xchg
jle
adc
add
pop
jbe
lret
xchg
out
ret
in
dec
dec
adcl
sbb
insb
mov
aad
cmp
cs
pop
sub
pop
inc
mov
pop
jp
aad
xchg
es
pop
cmp
fwait
add
jp
jecxz
leave
jne
es
jge
ret
cmp
insb
iret
add
dec
lods
shlb
push
xchg
xor
ljmp
aad
repnz
add
shll
sbb
cmp
shll
sub
push
aas
rcrl
lea
std
lret
push
test
and
stos
das
aas
mov
rolb
jle
cltd
dec
mov
test
push
loope
leave
push
jns
das
sub
and
add
mov
pop
cmp
jp
ljmp
xchg
shl
ret
mov
mov
or
outsb
dec
loop
lds
addr16
add
cli
fidivl
out
mov
in
aas
jmp
mov
into
lcall
inc
mov
mov
sub
push
sub
iret
cli
mov
cwtl
sbb
adc
cld
dec
mov
loop
arpl
push
fxch
dec
cmp
out
orb
add
insb
xor
cmp
inc
xchg
fcomip
xchg
dec
insb
jmp
gs
fucomp
cltd
movsb
or
daa
rcl
lods
mov
and
mov
pop
mov
lds
cmpsb
mov
fstpt
push
inc
cmpsl
call
cmp
cli
pop
das
lahf
sarb
stos
test
rcrl
leave
imul
inc
cmp
aaa
cmpl
lahf
cli
in
enter
fstl
sbb
ret
xor
or
iret
jecxz
lods
push
icebp
es
andl
repz
mov
inc
fwait
sahf
test
or
gs
pop
clc
add
pop
and
std
sbb
leave
cmp
add
sub
jae
add
xchg
push
jp
or
and
xor
pop
mov
ds
sub
test
ret
arpl
adc
pop
in
mov
mov
outsb
adc
ljmp
mov
psrlw
sahf
in
dec
mov
mov
test
xchg
repnz
ret
ret
jle
imul
cmp
daa
movsb
arpl
int
adc
sub
mov
aad
jl
xchg
aaa
jecxz
jae
mov
outsb
loope
lock
pop
mov
jns
ljmp
add
int
andl
aas
mov
loope
aam
sub
push
fwait
vphaddubd
pop
es
mov
dec
push
push
mov
jmp
xchg
pop
fistpl
ds
out
xor
and
and
sbb
iret
mov
mov
loop
dec
adc
imull
mov
mov
stc
into
jno
push
inc
out
cld
mov
add
sbb
cmc
xlat
in
adc
mov
sub
push
rorl
lcall
in
lcall
or
setne
xchg
xor
adc
out
les
mov
mov
call
testb
push
inc
loope
rcll
xor
stos
fwait
dec
jp
in
sub
popf
sahf
pop
lods
and
aaa
pop
popf
cmp
imul
aam
mov
push
push
cmp
loopne
mov
fisubs
xchg
pop
sub
sbb
pop
stos
test
daa
pop
out
data16
jae
sbb
sbb
mov
leave
fcom
mov
loopne
icebp
cwtl
sbb
ret
mov
ds
dec
pop
mov
ret
movsb
pop
imul
lcall
out
inc
iret
insb
or
push
mov
mov
inc
mov
and
push
insb
aam
mov
xor
xor
jns
in
nop
scas
in
lret
divl
mov
jge
sahf
sbb
insb
out
dec
pop
xchg
faddp
mov
movsb
pop
stc
out
jns
add
adc
dec
pushf
mov
cmc
outsl
mov
add
jp
ss
pop
and
jge
std
xchg
pop
ss
call
mov
clc
es
adc
inc
push
scas
imul
mov
adc
inc
mov
mov
inc
pop
mov
out
cmp
xchg
jg
in
push
xor
jmp
inc
dec
fstl
adc
cld
fnstsw
fstpl
and
out
mov
test
outsl
jbe
pop
ja
inc
sahf
pop
and
ror
sub
aam
lret
dec
and
cmp
and
stos
mov
cmp
dec
ret
test
dec
xchg
loopne
movsl
mov
xchg
sbb
ret
mov
mov
lret
xor
arpl
in
js
push
mov
dec
add
repnz
and
cmp
sub
xor
int3
pushf
out
dec
lds
mov
xchg
jg
pop
gs
out
mov
insb
push
insl
mov
or
push
ds
dec
gs
insl
loop
lock
cmc
and
nop
les
fldenv
or
cmp
in
xchg
mov
ret
loop
and
xchg
mov
pop
stos
pop
xchg
inc
add
divl
das
push
popa
fisubrs
mov
scas
test
cmp
frstor
or
lahf
dec
sti
daa
jp
push
cmp
inc
xchg
cwtl
bnd
cmp
and
push
or
pop
jns
inc
mov
leave
cli
repnz
neg
mov
rol
inc
mov
mov
push
dec
pop
stos
cli
je
dec
nop
mov
xchg
test
jae
add
xchg
push
xchg
push
add
add
in
imul
mov
push
dec
mov
stos
sub
push
cmp
daa
bound
sti
add
push
mov
mov
xor
data16
mov
arpl
pop
sbb
pop
in
mov
xchg
stc
jge
jge
daa
sbb
lods
dec
in
pushf
xor
or
ja
out
test
lds
mov
add
adc
pusha
push
fwait
add
push
push
jbe
pop
lods
lret
mov
sbb
xor
mov
in
inc
pusha
adc
jge
shll
ret
pusha
or
mov
or
add
icebp
dec
pushf
xor
jle
mov
inc
adc
fidivrl
test
js
out
sub
or
mov
push
xchg
movsl
lods
dec
aaa
mov
xor
jp
aas
adc
mov
stos
icebp
jmp
cs
mov
fisubl
and
push
aam
xchg
inc
aam
das
pop
inc
std
add
js
ret
xchg
lcall
stos
sub
cltd
cmpsl
cs
jne
or
push
xchg
xchg
jbe
in
adc
ljmp
push
and
inc
mov
xor
fcompl
mov
mov
div
in
or
pop
add
jb
fwait
and
aad
push
ljmp
jo
and
ds
pop
jbe
add
pop
gs
push
push
pop
in
cmpsb
dec
lahf
outsl
ja
xor
mov
add
mov
out
mov
repnz
fsubl
mov
mov
adc
iret
push
inc
adc
inc
dec
jne
insb
xchg
adc
jle
mov
push
stos
dec
cmp
lock
test
mov
dec
dec
and
lahf
mov
fistps
out
jns
dec
xchg
out
mov
insl
imul
lahf
push
cld
pop
sub
push
jb
bnd
push
call
xchg
inc
jno
adc
imul
pop
and
nop
mov
lods
out
push
push
stos
shl
sti
sti
mov
pmaxsw
cmovg
repz
push
inc
dec
loop
inc
mov
add
cmpb
push
out
sub
subb
fists
imul
cmpsl
les
ret
icebp
sub
cmp
ds
call
adc
xor
insl
addr16
sub
xor
jle
sbb
fsub
dec
or
nop
mov
stos
xchg
out
cli
inc
sbb
popa
add
pop
mov
xor
enter
out
dec
shlb
cmp
xor
arpl
adc
loop
ret
call
sbb
mov
mov
bound
dec
and
sub
xchg
fidivl
dec
push
int3
stos
clc
push
and
call
jne
leave
adc
mov
cwtl
pop
icebp
mov
cmp
and
push
into
jge
adc
xchg
pop
mov
repz
and
or
pushf
push
push
adcl
adc
dec
push
scas
les
jg
sub
inc
in
test
pop
xchg
cmovs
pop
imul
dec
ret
fsubs
jecxz
push
dec
in
and
jmp
jge
push
outsb
sub
divl
xlat
loop
mov
inc
cmc
jno
dec
dec
push
add
mov
sub
push
jo
shl
lock
les
jecxz
mov
bound
mov
push
add
movsl
mov
insl
add
push
or
jmp
cmpsl
cmp
fidivs
push
xchg
mulb
dec
mov
cmp
jae
lcall
andb
je
xlat
in
les
out
adc
pushf
aas
ret
inc
fidivs
mov
outsb
mov
pop
inc
mov
daa
arpl
lock
idivb
cmp
mov
jbe
movsb
rcll
mov
fimull
scas
inc
cmp
das
pop
add
jnp
adc
inc
sbb
nop
cmp
xchg
sbb
sbb
popf
je
jae
ss
and
aad
aad
inc
push
movsl
ret
pop
pop
lret
inc
call
mov
sub
dec
push
adc
or
lea
data16
popf
and
and
add
popa
movsl
inc
mov
xchg
dec
mov
pop
les
dec
std
loope
pushf
add
jbe
pusha
pop
and
dec
cmp
shl
dec
xor
xchg
mov
dec
mov
out
mov
lds
arpl
mov
fnstenv
push
sub
cmp
pushl
cs
add
mov
xor
fs
paddb
outsl
fimull
fsubrp
or
popf
scas
fs
mulb
aam
adc
or
sbb
cli
negb
xor
loopne
cltd
fcmovu
xor
outsl
popa
ss
add
in
push
leave
mov
and
jp
outsb
cld
xchg
cmp
aad
push
mov
and
in
mov
fildl
rcrl
loope
hlt
sub
cmp
lock
mov
or
shll
cli
lcall
dec
es
popa
insl
inc
addl
xchg
sub
mov
fs
imul
push
bound
inc
xchg
or
dec
push
hlt
fstl
in
mov
sahf
xor
je
stc
insb
enter
add
das
lds
mov
xor
mov
push
stc
sbb
rcrb
jp
xor
insb
add
pusha
leave
lods
mov
or
jns
cltd
dec
dec
mov
dec
ffreep
ljmp
rclb
ja
mov
in
adcb
shrb
repnz
push
jb
jle
mov
fwait
xchg
jb
test
daa
add
cli
sbb
push
cmp
push
jb
or
jno
outsl
outsb
ljmp
out
nop
repz
movsl
out
mov
push
mov
dec
mov
popa
rorl
cld
mov
xchg
sti
lahf
in
mov
push
ret
popa
movsl
leave
int3
lods
cwtl
pop
and
adc
dec
movsl
fsubrl
xchg
adc
lcall
in
pop
inc
sub
mov
in
xchg
push
sbb
ret
mov
push
lret
enter
aas
inc
inc
push
cmp
jne
jns
or
push
inc
pushf
ss
lcall
flds
adc
data16
nop
jl
pusha
fistpl
lea
and
and
cli
inc
testb
cmpsb
outsl
add
dec
outsb
xchg
jno
pop
adc
dec
lock
hlt
pop
mov
out
inc
xchg
xchg
pop
shrl
adc
xchg
push
pushf
sbb
mov
adc
mov
cmp
pop
pop
pushf
sbb
int
mov
inc
sub
nop
loopne
push
ret
xchg
je
xchg
cmp
adcl
and
neg
inc
or
adc
divb
ret
test
add
sbb
and
xchg
dec
cli
pop
jns
insb
sub
push
cld
pop
sahf
bound
mov
jb
pop
push
test
pop
push
jo
add
push
jne
xchg
cmp
clc
and
dec
pcmpgtw
jp
push
leave
pop
ret
adc
xor
fdivrp
sub
sub
add
stos
mov
dec
test
clc
icebp
lret
cmpsl
dec
mov
cmp
imul
ja
sti
adcb
cmpsb
xor
mov
inc
mov
fildl
das
nop
adc
push
pop
lahf
rcrl
jb
popa
sbb
xchg
cmpsb
dec
add
xchg
push
dec
fists
mov
ret
inc
clc
std
out
jmp
fdivrs
xor
outsb
adcb
iret
rorl
mov
movsb
cli
fbld
lret
sbb
inc
jno
add
mov
test
xor
mov
mov
pop
xchg
jge
test
ja
inc
jo
aad
xchg
jg
push
idivl
sbb
adc
mov
ret
lods
xchg
aas
inc
dec
mov
lock
jne
inc
dec
repnz
jmp
shrb
fmuls
and
sub
sbb
scas
cmpsb
aad
fwait
out
sub
xchg
sub
frstor
dec
rorb
pop
dec
iret
mov
cwtl
pop
xchg
ret
rcrb
sub
push
and
lods
add
mov
mov
fidivl
cmpsl
imul
std
jle
adcb
mov
jbe
add
mov
pop
cli
adc
add
ja
fiadds
and
fstpt
jg
inc
pop
frstor
fidivrs
test
je
or
or
pusha
mov
aad
aas
insb
mov
cs
or
call
ja
dec
xchg
xchg
or
dec
inc
inc
imul
pushf
xchg
fs
sbb
cmp
aaa
adc
inc
xchg
inc
add
loopne
cmp
jmp
pusha
mov
push
push
sub
lret
dec
in
inc
push
int
imul
sub
loopne
call
imull
inc
dec
and
movsl
cmc
jo,pt
adc
cs
movl
mov
fbld
mov
pop
movsb
orb
fcoml
icebp
lea
inc
stos
negb
jp
and
mov
out
add
sub
and
insl
mov
paddusw
and
xchg
sbb
dec
pop
sub
push
push
dec
imul
andl
cmp
icebp
cmc
inc
and
and
and
insl
push
push
xchg
mov
fcmovnb
jge
mov
filds
mov
add
daa
movsl
inc
add
inc
jg
ss
sarl
adc
clc
cmp
and
or
fwait
dec
lcall
pop
ja
dec
pusha
jbe
loopne
xorl
stc
ss
jmp
pop
or
loopne
scas
jbe
les
sub
ret
decb
jne
xor
mov
jo
pop
dec
mov
cmpsl
sub
sbb
or
aaa
orl
push
xchg
jle
lcall
ficoms
lods
adc
fnstsw
sbbb
mov
push
sahf
test
js
and
cmc
loop
mov
movsb
pop
xor
fmull
add
sub
and
xorl
dec
jae
xchg
dec
sahf
mov
in
call
iret
mov
sub
test
cmp
xor
outsl
data16
push
inc
inc
sub
dec
add
loopne
mov
shl
ficoms
cld
mov
repnz
scas
push
jg
xchg
fsubrl
or
mov
int3
movsl
or
aam
fisttpl
movsl
hlt
xor
dec
jmp
dec
jl
pusha
pop
aam
loop,pn
jbe
bound
xor
int
pop
fstl
and
and
xchg
sub
push
xor
mov
mov
lahf
test
mov
imul
or
sbb
jg
push
push
push
dec
xchg
icebp
xor
mov
popa
mov
aam
mov
xlat
xchg
xor
pusha
lods
mov
mov
test
sbb
jns
movsb
xchg
int3
sbb
fcmovne
jecxz
mov
or
in
jns
xchg
inc
mov
add
les
jp
mov
xor
shlb
mov
dec
mov
inc
sbb
outsl
pop
mov
mov
jge
rol
ja
jbe
out
out
test
mov
std
stos
pop
push
repz
lods
jecxz
push
les
jne
pusha
in
test
ljmp
xor
and
dec
mov
xor
xor
rcrb
outsb
cmp
subl
mov
mov
adc
out
shl
xchg
fildl
lock
cmp
push
sub
push
shrd
push
rcpps
dec
shr
aad
dec
stos
add
or
inc
push
neg
loope
int
movsl
scas
movsl
repnz
xchg
js
nop
clc
pop
iret
sbb
ds
dec
mov
jmp
mov
inc
lea
or
lahf
lods
or
jle
pop
adc
sub
xchg
xor
movsb
dec
sub
add
push
nop
jo
out
pop
cmc
and
pusha
cmc
scas
mov
cmp
test
es
add
movsb
pop
fwait
and
push
out
movsl
jo
push
xchg
mov
das
fsts
dec
mov
pushf
pop
inc
or
mov
xchg
popf
lahf
jne
aad
add
adc
in
mov
mov
loop
cmp
and
rcll
cmove
sbb
cmpl
dec
js
push
aam
imul
push
push
test
sub
push
jb
push
out
notb
aam
mov
cmp
addb
shrd
popf
dec
jge
out
out
fcompl
rorl
dec
mov
mov
sbb
mov
stos
mov
jecxz
mov
arpl
out
outsl
xor
stos
adc
jne
sub
out
xchg
xchg
shll
jno
cltd
hlt
cmp
and
dec
pop
stos
mov
inc
sti
sub
in
dec
out
fbld
stos
mov
push
aas
push
inc
lods
add
and
mov
fnstsw
sbb
stc
pop
jns
mov
push
sbb
fwait
sub
adc
std
aaa
xor
or
aam
mov
add
jbe
mov
dec
sbb
sti
notl
xchg
pop
fcom
repnz
xor
out
sbb
xchg
mov
cwtl
adcb
fistl
mov
sbb
orl
sbb
adc
push
clc
icebp
mov
loopne
xor
ja
sbb
jb
out
dec
stos
loop
sbb
push
mov
dec
cmp
cwtl
jb
hlt
out
lods
scas
iret
pop
popf
sbb
in
stos
fs
add
mov
lea
data16
das
mov
sbb
ret
sub
and
sub
and
dec
cmp
adc
ss
push
pushf
repz
jns
cmp
movb
data16
mov
dec
sub
into
xor
aad
insb
fs
add
jbe
jae
pop
gs
cmp
popa
jne
lcall
jp
insl
adc
mov
mov
popa
popa
xlat
pop
lds
stc
xchg
jnp
pop
push
pop
lahf
mov
fdiv
jns
dec
aad
mov
add
shlb
push
mov
callw
mov
insl
xor
lock
jp
loope
xchg
push
outsb
mov
push
xchg
mov
xor
shll
stos
cld
mov
out
xchg
sub
pop
lret
dec
cld
in
push
jl
and
sub
push
push
sub
sub
xlat
mov
clc
aas
jo
dec
test
jp
aam
rcll
xchg
cmc
mov
jae
cmp
outsb
pop
sarb
pusha
ss
sub
fistpll
pop
out
out
lods
fistpll
jo
xchg
pop
or
out
mov
cltd
dec
xchg
js
addl
sahf
dec
jecxz
out
pusha
xlat
cs
test
inc
push
and
or
insb
jno
clc
incl
jns
es
inc
lret
test
pop
inc
adc
push
or
xchg
mov
sbb
iret
and
cmpsb
pop
dec
mull
push
aaa
mov
mov
mov
inc
xchg
jnp
mov
hlt
addr16
push
push
fsts
int3
js
fistl
inc
mov
ret
push
cmpsl
shl
xor
mov
rcr
mov
push
arpl
data16
insl
in
stos
mov
sbb
fisubl
ss
fisttpl
aam
pop
pop
xchg
ss
aas
stos
xchg
pop
xor
fmulp
int3
inc
std
cld
mov
adcl
dec
outsb
inc
or
aad
leave
push
lcall
lds
sub
jns
inc
sbb
sub
xchg
test
pop
mov
mov
and
mov
sbb
lcall
jp
xor
fnsave
sbb
fbld
adc
es
jl
mov
sbb
inc
adc
mov
enter
mov
cwtl
add
sti
es
push
push
mov
jnp
cs
mov
xor
cmp
cmp
push
movsl
outsl
cmp
ja
or
sahf
rcll
inc
xor
aad
scas
inc
adc
sub
xchg
jge
mov
jle
std
mov
pop
iret
fxch
mov
or
adc
mov
ficompl
mov
sub
out
dec
pop
cld
in
imul
push
sub
mov
adc
inc
ja
stos
inc
xor
fidivl
fwait
push
nop
loope
pop
push
in
sub
lcall
test
xchg
adcl
mov
dec
xor
es
cmpsb
fmull
out
xchg
jne
sub
or
add
es
sahf
cmp
mov
sub
push
mov
out
scas
stos
sbb
ficoms
sub
jecxz
push
mov
mov
lock
out
cmp
ffree
leave
inc
jno
pop
int3
dec
imul
cmpsl
test
cmpsl
adc
xor
push
popf
push
lcall
in
mov
dec
ja
pop
lret
xlat
jl
insb
pushf
add
or
add
sbb
push
inc
pop
push
scas
xor
push
test
gs
movsl
cmp
out
hlt
fadds
testl
test
aaa
test
mull
xchg
sahf
call
push
mov
stos
ds
push
dec
sub
mov
pop
rolb
mov
fcoms
mov
arpl
push
and
test
and
push
jo
push
push
lret
loopne
movsl
lea
leave
imul
lock
in
ja
pop
xlat
cs
cwtl
mov
jo
xor
out
aad
mov
aas
jle
cmp
mov
fsubl
fwait
adc
fcmovbe
out
jp
lock
dec
repnz
xor
xor
mov
pop
stc
sahf
cs
and
enter
in
aaa
sbb
and
paddsb
dec
mov
cmp
sub
sub
cmp
push
in
loopne
leave
addr16
mov
in
ret
jno
sti
decb
lret
insl
xor
int3
mov
dec
dec
xchg
add
or
push
jl
fldl
sbb
push
sub
je
fidivl
and
loop
mov
mov
add
outsl
popf
jg
mov
mov
in
dec
jnp
pop
pavgw
popa
stos
sti
dec
lock
xchg
mov
sub
pop
lcall
lcall
cmp
jmp
sbb
fimull
test
dec
ss
pop
out
ljmp
xor
fwait
test
cli
push
cwtl
jo
sti
cmp
leave
jmp
fcmovnbe
into
pop
mov
js
push
cld
outsl
add
mov
mov
aam
jl
in
sbb
push
jl
adc
push
sahf
push
jb
fwait
enter
inc
jg
xor
and
xchg
lret
push
mov
xchg
cld
fwait
mov
lret
xor
loop
iret
jnp
test
das
test
aaa
popf
or
or
pop
pinsrw
idivl
arpl
bound
sub
rcl
mov
xor
roll
push
mov
or
loopne
pop
push
cmp
push
fs
lahf
js
incb
insl
daa
inc
dec
insl
sti
dec
xor
daa
inc
addr16
fwait
dec
jmp
in
scas
mov
xlat
insb
mov
xchg
movsb
jl
push
je
or
fwait
dec
jmp
fisttpl
into
and
push
fstl
iret
push
cmp
push
cmp
mov
mov
push
sub
addr16
sahf
dec
mov
jp
mov
jle
sti
xor
fwait
mov
icebp
and
push
and
inc
xor
std
or
rorl
dec
ret
imul
ss
dec
das
push
dec
aad
sbb
call
movsb
cmp
and
dec
jmp
pop
or
and
sub
bound
jecxz
ret
gs
sub
add
loop
enter
add
mov
mov
mov
lock
and
cld
dec
mov
cmp
sbb
xlat
and
push
sub
sahf
ja
aaa
mov
xchg
divb
ds
xchg
lahf
fistpll
push
fisttpll
mov
xor
adc
repz
dec
aaa
aam
mov
or
jg
cli
or
arpl
popf
aad
xor
dec
cmpsb
push
cwtl
dec
inc
sbb
xlat
sbb
jnp
push
les
cwtl
push
dec
push
dec
mov
imul
mov
sbb
js
je
daa
adc
cltd
sti
or
fldcw
jo
mov
xchg
jo
stos
mov
out
cs
daa
cmp
mov
out
mov
xchg
lea
aad
or
xchg
lret
mov
sbb
jle
in
cmp
cwtl
or
mov
mov
push
sub
lcall
inc
sarb
dec
push
bnd
push
inc
repz
mov
lock
mov
movsl
mov
idivl
pop
cld
aaa
or
int3
add
out
push
cmp
pop
or
mov
loop
or
pop
push
mov
sbb
pop
xchg
std
notb
mov
and
inc
cmp
adc
les
cmp
push
and
xchg
aam
fwait
jge
and
ds
or
stc
nop
mov
idivl
inc
adc
jnp
push
dec
ret
cs
and
jle
and
mov
cwtl
sti
jg
daa
jo
fsts
inc
mov
cwtl
or
rorb
shl
xor
jl
in
outsb
xlat
out
lahf
enter
xorb
push
std
jecxz
call
addr16
xchg
add
and
and
jo
mov
int3
mov
inc
out
push
outsl
push
inc
in
mov
add
push
add
jp
push
mov
in
pop
xchg
mov
je
sub
or
outsl
push
mov
sbb
repz
push
push
push
pop
fsubrp
jecxz
andl
lret
sbb
pushf
dec
mov
mov
repz
mov
hlt
add
pusha
adc
mov
inc
mov
lret
loope
xchg
xchg
or
add
outsb
sahf
inc
push
mov
add
jno
adc
repz
psubw
aad
push
push
xlat
jo
test
fsubr
ss
cli
scas
cmp
push
and
icebp
jns
dec
or
push
or
xor
or
xchg
sbb
sahf
incb
int
or
jnp
mov
sbb
xor
ss
into
mov
dec
inc
clc
jle
cmc
pop
jno
popf
inc
popa
das
mov
sbb
test
repz
jmp
xchg
xor
push
mov
or
xor
cltd
lods
es
stc
rcl
loope
mov
sbb
cmp
and
outsb
ljmp
outsl
inc
stos
orl
fisttpl
std
jp
push
dec
std
shll
test
popf
fdivrl
adc
xchg
sbb
or
mov
mov
jae
mov
sub
mov
jno
mov
jb
inc
jecxz
clc
ss
xor
and
cmp
inc
and
ficoms
repz
out
xor
jecxz
cmpsl
je
div
push
sbb
cmp
dec
js
sub
inc
cmc
lea
shll
orb
xchg
add
push
or
ljmp
or
dec
mov
and
insl
cmpsl
add
add
stc
mov
cmp
scas
dec
ja
sbbl
cmp
mov
rolb
mov
ret
pop
shrb
mov
gs
les
dec
inc
lcall
and
arpl
mov
test
adc
jp
jp
lock
cmp
pusha
xor
scas
in
stos
and
xchg
or
cmp
jns
out
xlat
nop
pop
jo
sbb
fadd
lret
je,pn
mov
mov
hlt
pop
es
lods
jb
cwtl
jle
call
out
aaa
fidivs
xor
data16
scas
in
push
push
enter
cmc
negl
loope
jnp
mov
mov
hlt
xchg
sbb
test
push
pop
aad
dec
mov
push
jne
adc
aam
mov
dec
enter
push
cltd
jae
dec
jecxz
pop
mov
inc
push
mov
je
faddl
pop
jmp
imul
leave
inc
inc
jae
xchg
pushf
xchg
xor
bound
scas
test
ja
mov
xchg
xchg
add
insl
lahf
fwait
shl
jns
mov
pusha
dec
mov
and
bound
push
jmp
pusha
or
repnz
pushf
gs
jecxz
fs
data16
inc
sti
push
sbb
outsl
xor
cmovae
pusha
loop
cmpsb
aam
sbb
push
pushf
adc
add
test
mov
cltd
push
xor
hlt
sbb
les
add
add
jno
les
cmpsl
sbb
add
xchg
out
hlt
cmpsb
inc
outsl
pop
mov
or
mov
xchg
xchg
adc
adc
add
ds
ret
mov
sbb
xchg
inc
movsb
push
inc
sub
ds
xor
lret
out
aas
dec
adc
into
outsb
mov
mov
adc
cmp
rcl
xor
sbb
stos
xchg
dec
dec
fsts
outsb
loope
mov
roll
mov
ret
lds
xchg
xchg
mov
jg
cli
inc
or
out
and
push
aaa
add
adc
cmp
out
sbb
sub
hlt
ficoms
out
and
and
lods
xchg
jnp
fmulp
jge
pusha
push
fiadds
pop
adc
ss
in
ret
mov
jmp
into
lods
mov
sarb
movsb
push
rcr
pop
sub
xor
lods
lods
test
rcll
xchg
test
push
call
test
int
pop
and
sbb
rcrl
push
insl
out
imulb
call
dec
ss
jbe
inc
jnp
xchg
or
loopne
ficoms
loop
add
mov
rep
cmp
leave
jnp
sbb
dec
mov
and
int3
das
leave
pop
dec
mov
mov
scas
repz
lcall
mov
int3
lock
dec
sbb
cmp
out
xor
sbb
sub
dec
cmp
cwtl
rcll
xchg
and
push
testb
sub
jp
pop
mov
dec
xchg
hlt
sbb
jo
xchg
dec
push
mov
lock
insb
inc
call
in
mov
stos
add
xchg
xchg
les
sbb
aad
ja
or
add
ror
cmp
js
adcl
gs
pop
mov
jmp
adc
or
push
mov
mov
fnsave
push
sub
and
jmp
fistl
jne
aas
subb
pop
movsb
mov
mov
jle
in
or
mov
andb
test
mov
subb
nop
and
push
lret
popa
ret
jne
cmp
bound
mov
daa
nop
and
xorl
jnp
add
and
cmp
lret
jle
lret
jle
ljmp
out
sub
mov
push
mov
mov
int
dec
inc
jns
ret
incl
aad
mov
xor
imul
dec
xor
repnz
mov
mov
loope
pop
jno
fwait
addr16
mov
dec
and
xor
aaa
mov
clc
pop
aaa
into
lahf
xchg
movsl
cmpsb
adcl
push
in
sub
orb
in
xchg
lcall
fisubrs
inc
orb
mov
adc
sbb
loope
mov
push
xor
jbe
into
cwtl
jb
insl
push
lahf
and
push
adc
or
es
dec
rcrb
fisubs
sbb
test
sbb
mov
aam
out
and
xor
sbb
mov
mov
jo
js
pop
hlt
mov
or
or
xor
sbb
loop
mov
andl
mov
fildl
adc
cs
cs
sbb
movsb
hlt
ds
lods
add
ds
adc
add
shll
xor
mov
cmpsb
in
or
mov
leave
sub
jbe
lret
dec
aad
adc
lods
fdivs
or
cmp
movsl
or
push
jecxz
xchg
xor
xor
xchg
outsl
jae
mov
imul
out
stc
add
sbb
sbb
rorb
mov
mov
or
adc
pushf
jns
stos
inc
fdivrl
ficompl
daa
aad
in
ret
mov
and
lds
jnp
rcrb
insb
cmp
push
sub
mov
pop
mov
ljmp
cmp
push
mov
mov
std
xchg
mov
xor
push
cmpsl
pop
xor
xchg
lods
mov
lahf
mov
mov
inc
ljmp
ss
std
pusha
mov
cmpsl
sub
add
inc
pop
inc
mov
ja
insb
dec
out
dec
cmpsb
jbe
inc
stos
shr
inc
insl
dec
xor
test
dec
dec
ret
fmuls
push
push
movsb
and
js
lds
fstpl
inc
ficomps
fidivrs
cmpsb
cmp
inc
pushf
inc
gs
ljmp
or
ds
add
sbb
stos
mov
dec
aad
in
inc
test
cmpsl
jae
mov
rcrb
test
in
jae
mov
rcl
aas
push
push
and
mov
stos
mov
xchg
jp
mov
and
sbb
cmpsl
push
adc
stos
add
loop
test
stos
or
inc
aas
shlb
out
mov
dec
xchg
stos
dec
mov
lret
mov
scas
push
jmp
pop
xchg
sub
jb
cmp
loope
mov
and
or
in
dec
stos
jnp
jne
xchg
push
arpl
adc
inc
add
fsubrs
shlb
inc
xchg
loope
and
fcompl
pusha
imul
xchg
xor
pop
sub
push
fcoms
movsb
pop
nop
repnz
mov
dec
inc
into
pop
pop
int3
lods
mov
pop
repnz
aaa
pushf
movsl
jl
pusha
xchg
xor
inc
mov
loopne
xor
mulb
leave
add
and
adc
scas
arpl
fsubl
push
mov
mov
shr
int
pop
inc
sbb
jae
test
loope
fnstenv
incl
mov
out
movsb
dec
sahf
jnp
sbb
loopne
mov
mov
nop
pop
std
pop
adc
inc
push
pop
inc
xchg
aas
sbb
push
cmpsl
sub
xchg
or
push
scas
xor
dec
cltd
mov
incl
enter
xchg
and
cs
addb
xor
int
push
jp
pop
fcoms
stc
push
mov
dec
ja
xabort
push
push
mov
and
sti
xchg
test
loopne
push
xchg
cmp
rolb
xchg
jbe
inc
pop
enter
imul
call
lea
pop
imul
iret
xchg
jl
aam
aas
call
cmp
xchg
dec
pop
add
inc
mov
pop
sub
xor
scas
xchg
mov
leave
jecxz
das
sub
cwtl
cmp
gs
repz
sub
in
or
es
enter
fidivrl
scas
dec
xor
lret
fistps
pop
mov
gs
or
test
adc
cmp
popf
scas
nop
notb
adc
sub
subb
mov
ss
cs
jmp
negl
aas
repz
push
sub
pop
cwtl
fucomi
arpl
orb
fadds
test
test
sub
out
bound
js
mov
jbe
jns
pop
bound
pop
lret
or
mov
fisubrs
jg
and
jb
hlt
fmulp
jge
aaa
or
stos
sbb
sahf
call
mov
das
repz
lret
dec
sub
jle
out
pop
loopne
mov
inc
dec
leave
iret
in
mov
push
push
movsl
push
fwait
or
or
loope
mov
icebp
cltd
inc
mov
xorl
fldz
pop
push
add
fnstcw
icebp
insl
xchg
outsb
bound
iret
call
ret
add
aas
sbb
frstor
into
xor
inc
ret
sub
cmp
out
mov
jbe
dec
xchg
xchg
mov
pop
sbb
and
lea
mov
dec
and
fadds
cwtl
sub
mov
xchg
rclb
mov
xchg
out
or
cmp
xchg
ds
push
jnp
pushf
jae
mov
push
and
mov
lods
in
push
push
pop
cwtl
mov
stos
in
std
sbb
adc
push
into
sbb
push
fs
sub
cmpsb
adc
aaa
fwait
pop
mov
neg
scas
dec
sbb
jmp
xchg
pop
or
or
add
ret
pusha
ficomps
jmp
mov
test
data16
lcall
jo
dec
adc
add
xor
pop
dec
pop
adcl
sub
pushf
leave
xchg
test
loope
aaa
adc
das
je
fmul
out
shrl
xchg
cmp
pop
jae
fisubs
lahf
lcall
lret
adc
or
clc
mov
mov
loope
cmp
aaa
pushf
out
xchg
mov
mov
leave
inc
inc
enter
push
popf
mov
ljmp
xchg
scas
ret
sarb
imul
cltd
and
jge
xor
lds
mov
inc
inc
cmp
sti
jns
aaa
jg
mov
hlt
adc
mov
jbe
pop
mov
das
fnstsw
xor
jmp
xchg
jl
jo
inc
inc
and
idivl
adc
xor
jge
scas
shrl
out
dec
push
les
repz
xor
mov
jmp
cmc
inc
fistpll
and
mov
sbb
daa
ret
loop
std
test
ljmp
shld
clc
sub
fmulp
outsl
jbe
mov
pop
xchg
pop
test
shll
xchg
ret
push
aas
aam
lea
sub
mov
cmp
jmp
inc
rcrl
mov
sub
clc
mov
mov
rcll
repnz
jl
adc
cwtl
setl
xor
fwait
jle
enter
cwtl
jmp
sub
ficompl
and
and
out
push
addr16
cmp
inc
scas
daa
imul
bound
sbb
lret
mov
mov
jl
add
xchg
adc
mov
xor
and
fmuls
mov
clc
mov
cmc
ficoms
cli
jmp
adc
sub
stos
sti
das
push
stc
ss
jp
pop
pop
pop
or
pop
hlt
and
jbe
lock
imul
rcrl
aad
mov
and
repnz
cld
stos
push
sub
lock
mov
cld
outsb
fmul
push
cli
data16
mov
nop
lods
sbb
inc
mov
jmp
sub
ja
pop
cmpsl
sub
aad
mov
movsb
inc
data16
cltd
sbb
gs
hlt
daa
dec
out
xchg
sti
rcrl
cmpsb
test
pop
mov
mov
stos
pop
sahf
pop
ret
lcall
or
pop
sbb
scas
or
add
or
sbb
aaa
push
add
jbe
sub
fdivrl
inc
xchg
jb
mov
ja
shlb
or
popf
fstl
inc
xor
push
stc
mov
clc
add
xlat
mov
pop
rcrb
push
lods
dec
out
dec
dec
imul
dec
dec
push
mov
sub
lcall
add
fstps
cld
sbb
lcall
or
divb
fbstp
mov
mov
fwait
shll
std
shr
mov
jne
out
lds
clc
std
mul
cmp
mov
push
std
data16
adc
out
push
in
les
int3
ficoms
js
mov
mov
fadd
and
adc
fmuls
je
mov
imul
fisttpll
ja
fs
inc
sbb
jne
cltd
aam
push
repz
mov
testl
add
xchg
push
add
inc
dec
mov
out
and
pop
mov
cmpsb
mov
lret
insl
adc
out
mov
and
test
sbb
imul
pop
cltd
jg
push
in
fwait
xchg
xchg
or
into
fildll
cmpb
fwait
repz
arpl
pop
enter
stc
movsb
jmp
call
cmp
sbb
fs
push
add
push
pop
mov
cmc
cmpsb
cmpsb
imul
cmp
xchg
jmp
stos
mov
repz
xchg
in
and
fldt
int3
cwtl
mov
sub
inc
orb
rcll
adc
insb
mov
mov
movsb
in
mov
int3
sbb
repnz
cli
jl
movsl
or
mov
pop
lods
or
lahf
add
push
enter
pushf
cltd
cmpl
push
icebp
push
pop
clc
cmp
lock
sub
cltd
pop
dec
jo
mov
mov
mov
sbbb
inc
rcll
pop
jo
mov
icebp
jnp
mov
mov
xchg
test
fisubs
add
sbb
mov
or
jae
sbb
jg
ds
sbb
xchg
mov
lds
fcmovbe
scas
add
das
popa
inc
and
fsub
jmp
jbe
fisttpll
stc
out
inc
outsb
jbe
sbb
ds
data16
arpl
ret
loope
mov
out
mov
rolb
cmp
stos
lret
lret
loop
and
rorb
in
icebp
pusha
addr16
mov
mov
into
cwtl
adc
inc
cli
std
xor
pop
bound
mov
sbb
jg
in
sbb
inc
or
rcll
adc
cs
fstl
pushf
cmp
mov
sub
jbe
mov
mov
push
daa
in
loop
or
fsubrp
outsb
fisubrl
lea
pop
into
je
fnstsw
jge
xchg
ljmp
scas
push
std
leave
movsb
shrl
sbb
adc
mov
incl
lock
push
es
negb
pop
mov
roll
add
pop
pmovmskb
jecxz
inc
mov
or
cmpsl
repz
repz
enter
fmul
je
lcall
sahf
pop
mov
xchg
sub
or
pop
fiadds
mov
ds
xor
fwait
mov
ret
xchg
inc
ret
rclb
dec
out
cmc
and
add
imul
pop
cmpsb
push
ja
cltd
lock
out
fs
movsb
mov
sarb
push
dec
mov
adc
xchg
xchg
lods
pop
test
ss
test
das
pand
aam
jno
jne
test
out
mov
in
lcall
mov
xchg
push
scas
test
push
xchg
jae
movsl
jns
and
loop
xchg
fisubrs
or
push
mov
ljmp
nop
xlat
repz
xbegin
jge
jp
pop
mov
add
jmp
inc
xchg
leave
pop
inc
popl
ror
inc
mov
pop
mov
push
push
fstpt
mov
dec
xor
mov
pop
push
daa
aas
mov
push
or
test
inc
and
ret
movsl
movsb
add
cmpsb
dec
notb
stos
xchg
push
insb
jge
dec
pop
inc
int
inc
xchg
jns
clc
insl
fsubs
nop
inc
pop
xchg
xchg
inc
cmp
pushf
jge
xchg
shlb
mulb
push
push
daa
call
pop
mov
test
mov
and
jp
and
loope
inc
lea
add
push
xor
subb
inc
xchg
pop
add
es
insb
or
shl
add
pop
add
mulb
int
mov
push
jmp
mov
mov
cmp
neg
sub
out
stos
xchg
sbb
popa
inc
and
dec
cmc
repz
xor
ds
es
add
or
add
dec
incl
sbbl
lock
cmpsb
or
sbbb
push
cmp
xor
notl
pop
movsl
fs
sbb
sub
xchg
mov
mull
xchg
cmpsl
jae
pusha
loop
hlt
sahf
push
add
mov
mov
pop
xchg
imul
push
mov
in
inc
cmpsl
fisttps
mov
push
cmp
ljmp
lods
in
daa
es
cmp
add
cmp
aam
pusha
js
scas
scas
data16
cmp
fsubrp
adcb
or
lahf
test
insb
mov
pop
cwtl
imul
divb
pop
fdivr
fdiv
aaa
cmp
imul
ret
or
cld
std
int3
ret
pop
mov
stos
fnstsw
in
arpl
ficomps
inc
mov
test
iret
pop
fstpt
aaa
insb
repz
dec
sub
shlb
repz
fistpll
sahf
leave
inc
pop
sti
mov
push
pop
cs
fistpll
test
loope
fistpl
jge
xchg
add
test
loop
inc
and
dec
fmulp
dec
icebp
shr
add
jae
pushf
sarl
imul
pop
pop
lret
xchg
xor
inc
mov
push
add
sub
out
repnz
loope
cmp
insl
adc
aas
out
mov
fimuls
inc
pushf
sti
mov
cs
mov
daa
outsl
sahf
cmpb
push
sub
inc
clc
rcll
das
and
int3
xchg
xchg
sub
mov
shrl
xor
mov
dec
adc
xor
js
test
insl
push
negb
dec
out
inc
xchg
mov
in
imul
xorb
pop
hlt
fwait
xor
dec
and
rolb
pusha
int
mov
aad
xchg
push
enter
cmpl
aad
ds
clc
in
jne
xor
les
pop
xor
dec
cld
cmp
loope
push
xchg
mov
fcomp
cmc
jmp
in
mov
pop
out
fiadds
push
jae
popl
jnp
lods
xor
cltd
data16
add
movl
dec
add
mov
cmpsl
add
das
and
test
aaa
mulb
enter
xor
pop
and
test
jo
xor
jo
imul
cmp
jb
lods
jno
mul
jmp
pushf
mov
push
cwtl
sbb
mov
add
dec
ret
in
jne
xor
xchg
pop
dec
add
dec
push
mov
sub
jmp
cmp
adc
and
xor
lahf
adc
loope
aaa
jge
ret
lahf
loopne
repz
or
mov
aam
lods
xchg
orb
mov
inc
enter
sub
sbb
stos
inc
sub
sti
mov
movb
cwtl
mov
int
inc
das
mov
js
pop
mov
imul
idivb
lea
stos
pusha
into
dec
stos
pop
lret
pushf
pop
inc
lea
pusha
sahf
pop
mov
outsl
dec
push
lret
rcrb
cmp
lods
cmp
cmpl
shlb
lods
lcall
push
xor
push
in
lret
dec
mov
adc
lahf
imul
mov
jle
mov
fidivl
inc
cwtl
xchg
push
insl
rorl
lret
outsl
jmp
xchg
fstl
push
lret
or
xchg
outsb
insl
jmp
cmp
mov
adc
lock
rolb
pop
ror
insb
push
dec
mov
push
insb
popa
and
mov
lock
imul
test
inc
mov
jbe
add
xchg
inc
and
push
aad
jne
dec
jg
insl
mov
sbb
cmp
mov
cld
loop
adc
outsl
or
scas
testl
and
arpl
push
test
repnz
loopne
sarl
jbe
jne
loopne
or
mov
sbb
push
inc
fbstp
in
dec
hlt
je
fsub
mov
jns
push
xchg
sbb
and
loope
out
mov
shl
xchg
xchg
sub
fsubl
pop
mov
cmp
or
pusha
push
fdivr
cmp
pop
lret
in
xchg
loopne
imul
iret
in
inc
lcall
shlb
push
push
js
xchg
fdiv
sti
repnz
mov
ds
cmp
es
incb
inc
ret
loope
movsl
scas
lock
jns
inc
and
sahf
into
jp
test
fiadds
lahf
jns
pop
sub
xchg
fld
repnz
cs
inc
lcall
and
out
leave
add
dec
bound
mov
add
mov
jg
jae
jmp
test
es
hlt
pop
data16
andb
push
push
push
push
loopne
jl
sub
daa
or
lds
push
ljmp
sbb
cmp
or
sarb
mov
lret
lds
push
jb
call
mov
fcoml
fsubrs
ret
int3
lea
adc
out
test
mov
inc
xlat
add
rcr
sub
movsl
bound
andl
inc
loopne
rclb
and
outsl
mov
pushf
jle
mov
cmp
xchg
lret
loop
mov
adc
and
ss
les
dec
ja
add
and
call
arpl
xor
mov
or
lcall
xor
addr16
jp
push
clc
ret
fistps
rcll
mov
jno
push
mov
pop
out
repnz
in
and
insb
push
call
std
sbb
dec
mov
cwtl
xor
in
mov
mov
not
sbb
int
movsl
jg
lods
mov
or
out
cmp
in
push
sub
fisttpll
and
ss
mov
pop
call
adc
inc
outsl
enter
lcall
sub
xor
js
inc
shr
cmp
mov
cwtl
pop
aad
inc
std
ficoms
lock
sbb
das
es
stc
cmp
mov
cli
fcoms
inc
or
cwtl
and
arpl
cltd
mulb
push
push
pop
or
jg
pop
pusha
jns
inc
fmuls
cmpsb
sti
and
out
and
dec
xchg
into
inc
imul
pushl
aas
fwait
push
rolb
movsb
cmp
cmpsl
ja
jmp
adc
cmp
push
stc
lods
xchg
adc
loop
push
lods
stc
and
pop
adcl
filds
sub
jg
lcall
inc
cmp
je
xchg
popf
in
mov
dec
sub
and
movsl
daa
push
fcoms
cmp
add
sti
ljmp
mov
fs
cmc
inc
test
xchg
adc
inc
xchg
and
hlt
lahf
inc
jp
inc
fwait
inc
mov
mov
push
add
aas
mov
call
mov
rorl
fnsave
push
cld
es
xchg
iret
jo
outsb
cmpsl
std
add
pop
sbb
mov
pop
ret
out
out
or
arpl
int
shlb
repz
adc
adc
and
addr16
divb
jp
into
and
pushf
and
add
insb
jmp
jp
hlt
mov
or
mov
out
cmp
sarl
or
cmp
fsub
cltd
cmc
pop
insb
sbbl
ret
lods
mov
fldenv
inc
add
bound
outsb
cmpsl
mov
lcall
add
push
roll
lret
cmpsl
fimull
inc
xchg
push
scas
popa
call
xchg
scas
mov
sub
mov
pop
push
call
cmp
mov
insl
js
add
jbe
je,pt
push
add
shl
loop
bound
icebp
mov
mov
and
dec
jno
xor
jns
stos
push
jns
cvttps2pi
insb
sbb
xor
lds
int3
pop
outsl
test
or
bound
cmp
jmp
loope
call
test
lods
dec
lds
cli
bound
push
ret
enter
xlat
rcrb
std
add
dec
inc
dec
and
jmp
mov
push
enter
sbb
ja
and
jge
xor
mov
add
orb
xchg
movsb
and
adc
rclb
xor
sub
icebp
cmp
and
movsl
pushf
and
pop
aad
jle
insl
push
mov
stc
jge
aad
rcrl
sub
sbb
outsl
fdivs
test
adcb
inc
mov
mov
pusha
or
jns
mov
cld
stos
ljmp
jp
in
xor
push
cli
les
jge
cmp
out
and
cmp
aaa
add
cmc
mov
fadd
sbb
test
outsl
pusha
sar
es
pop
sar
mov
pop
cmc
sbb
push
jmp
pusha
adc
clc
xchg
cs
popl
mov
mov
push
jmp
outsl
adc
or
push
icebp
test
and
shl
mov
push
push
mov
dec
shrb
cmpl
xchg
push
mov
push
mov
jge
push
xchg
adc
mov
jl
inc
cmp
std
xorl
sarl
fcoml
and
pop
push
dec
adc
cmp
rcl
pushf
imul
dec
or
ficomps
inc
pop
addr16
fimuls
ficoml
rcl
adc
xchg
sub
ja
int
jb
pop
hlt
clc
jnp
pop
dec
incl
mov
xor
xchg
hlt
shl
test
aad
sbb
xchg
fsub
dec
in
std
aaa
dec
pop
cmp
jae
lock
lods
xchg
lock
mov
icebp
sarl
sub
xchg
adc
std
call
fisubrs
in
fidivs
movb
mov
cld
jne
push
xchg
test
xor
je
sub
or
xlat
sbb
and
loop
mov
jo
insb
xor
mov
loopne
rolb
and
dec
fnstsw
bound
into
mov
push
dec
mov
push
and
mov
js
sarl
andb
xor
in
dec
push
mov
inc
insl
ds
jle
xor
popf
jecxz
fimuls
push
mov
addr16
rcrl
lcall
imul
mov
push
dec
mov
cmp
mov
mov
mov
in
xlat
lock
xchg
arpl
cmpsb
cs
push
nop
push
fistps
rolb
jno
mov
lock
shrb
pop
cmp
mov
cltd
repz
xchg
mov
int
mov
xor
subl
push
int
pusha
sbb
cmc
add
add
or
push
out
jb
mov
mov
loop
inc
outsl
jne
cltd
inc
mov
lcall
mov
push
lock
sbb
mov
out
movsb
pusha
lahf
mov
jg
and
cmpsl
xor
rclb
fcompl
cmp
rcrb
jo
or
ljmp
pop
sbb
dec
add
mov
mov
les
loope
ja
jp
dec
roll
push
sub
and
push
jg
sbb
mulb
adc
adc
inc
sbb
js
lret
lcall
loope
push
mov
icebp
push
sarb
lret
dec
mov
mov
pop
gs
mov
int
addr16
mov
jbe
inc
fcompl
jno
daa
test
push
andb
ja
jl,pt
jns
xchg
test
adc
jno
and
adc
int
stc
xchg
or
dec
aad
data16
dec
lods
mov
jo
cmp
adc
test
xchg
cmp
jb
in
insb
ficoms
andb
sbb
push
mov
ds
cmpl
orb
inc
lods
xchg
add
imul
mov
mov
mov
ror
xor
mov
mov
mov
xchg
cmp
push
and
sbb
cmp
in
cld
add
cld
in
popf
aad
test
stos
or
dec
jae
or
test
je
cmpsl
cs
mov
scas
gs
dec
push
dec
in
insb
xchg
aam
jecxz
and
xchg
movsl
pop
nop
clc
xor
mov
cmp
xchg
test
and
inc
sub
pop
sbb
sbb
pop
test
adc
fdivrs
ja
dec
clc
cmp
nop
in
nop
xor
xlat
imul
outsb
sti
stos
cmp
xchg
popf
stos
lret
in
cmc
xchg
outsb
fistl
adc
scas
imul
xor
bound
rcr
scas
fs
dec
mov
push
clc
in
aas
mov
dec
inc
ljmp
xor
xor
les
pop
adc
outsb
jbe
push
arpl
lahf
mov
mov
dec
jb
push
adcb
std
ljmp
addb
or
fwait
mov
mov
adc
into
cwtl
xlat
push
test
push
scas
enter
dec
scas
jns
mov
inc
xor
fildll
push
pushf
jle
popa
fistl
xor
loope
push
jle
cli
popl
dec
lods
not
ret
sarb
outsl
jno
scas
fisubl
push
add
aaa
movsl
cmp
xchg
lcall
xchg
std
cmp
mov
pusha
pop
cld
or
xchg
xchg
es
cmpsb
xor
ds
gs
mov
jbe
mov
inc
and
mov
enter
mov
dec
mov
pop
les
cmpsl
cld
sub
cwtl
push
out
insl
popf
dec
inc
stos
out
push
movsl
pop
dec
sbb
test
mov
cmpsl
add
orb
add
mov
stc
jle
jb
cwtl
mov
dec
mov
imul
jnp
movsl
mov
cmp
in
in
and
push
xlat
mov
adc
push
int
sti
adc
pop
call
js
fcmovnbe
and
rcrl
xor
mov
cltd
and
xor
cmp
sar
jne
xor
mov
cltd
push
adc
int
imul
cmpsl
mov
in
aaa
add
xor
jle
and
notl
and
pop
aaa
push
leave
push
movsb
add
or
test
es
das
jp
lds
mov
setne
mov
stc
xor
mov
mov
cmp
sbb
icebp
daa
pusha
adc
jge
mov
pop
jbe
mov
xchg
rol
push
clc
push
jbe
cmp
fsts
jecxz
pop
aaa
or
stc
in
lock
clc
mov
inc
sbb
movsl
jmp
xor
push
push
leave
xchg
push
ss
sbb
and
repnz
or
mov
jno
adc
dec
insb
xchg
fs
aam
add
pop
push
push
or
pusha
std
addb
cmp
inc
dec
jp
aaa
or
fsubl
das
movsl
fisttpll
cltd
aas
mov
xchg
mov
outsl
stc
jnp
cld
and
movsb
idivb
shr
xor
mov
push
or
ja
repnz
add
lret
sti
cld
lea
xor
xor
sub
or
popf
dec
lret
lea
pushf
adc
call
stos
mov
add
cmc
in
xchg
fisubrl
mov
cmc
outsl
stc
call
addr16
inc
mov
arpl
fnstcw
or
cs
mov
jecxz
jbe
jecxz
sbb
or
int3
stc
cmp
insb
insb
pop
pushf
xchg
cmp
out
addl
aas
xlat
pop
or
pop
data16
jae
aaa
loopne
mov
xor
in
adc
push
dec
adc
stc
cltd
jbe
in
jne
push
pop
daa
dec
inc
inc
pop
mov
sub
sbbb
push
cmp
mov
and
mov
xchg
push
imul
ds
outsb
in
lcall
divl
hlt
inc
adcl
in
and
frstor
mov
mov
mov
test
in
fsts
mov
mov
mov
adc
jae
mov
dec
sbb
mov
mov
ja
pop
pop
outsb
adc
or
xlat
and
repz
iret
mov
adc
cmovnp
ret
rcrl
pop
sbb
lret
mov
addl
inc
sahf
aas
lret
insb
in
adc
or
xor
cmpsl
push
pop
push
inc
and
add
jo
out
inc
cltd
xor
sub
or
mov
pop
fimuls
mov
rolb
fcompl
and
test
pop
iret
xchg
mov
add
lock
adc
inc
push
dec
std
enter
adc
mov
sbb
jle
call
sahf
clc
cmpl
orl
call
xchg
sub
lret
push
inc
sbb
mov
jae
cmp
push
icebp
pop
ret
push
mov
adc
xchg
fidivrl
call
mov
in
jl
into
jbe
cmp
push
pop
inc
pop
and
imul
sbb
pop
out
es
dec
mov
push
xchg
cmp
in
adc
push
jne
jge
mov
pop
push
out
push
hlt
dec
addb
test
fldt
jne
mov
and
call
cli
lahf
sbb
cmp
sarl
sub
mov
call
cmpb
xor
sbb
ror
jbe
lahf
test
mov
fdivrl
jecxz
add
repnz
and
lods
ds
jo
out
jle
sub
sbb
and
mov
mov
arpl
repnz
add
jmp
xorb
pop
mov
adc
inc
inc
fistps
js
push
loop
int3
inc
push
subl
jp
add
int
sbb
roll
fistl
test
lods
loope
jns
xor
fbld
insl
loop
stos
mov
int
movsb
push
pop
xchg
loope
insl
call
icebp
xor
mov
sbb
inc
and
daa
pop
sbb
push
jmp
add
out
sub
xchg
imul
pop
data16
je
mov
dec
stos
push
jle
xlat
std
jge
mov
cmc
ss
ss
jae
leave
loop
bound
into
popl
scas
or
pop
rcl
jb
inc
jge
lret
nop
pop
jb
fisttpll
lret
stos
sub
jge
sbb
cmp
sbb
loopne
popf
in
stc
rorb
xchg
push
pusha
dec
stos
jmp
lods
xchg
pop
adc
out
loop
cli
sarb
xor
jle
cltd
push
mov
xor
pop
cs
jno
gs
fidivl
fs
pop
xor
nop
push
bound
les
jmp
sub
xor
in
inc
insl
lods
cmc
inc
xchg
iret
lods
xor
push
sbb
adc
inc
add
test
and
in
fidivrs
pop
psubw
pop
insl
popf
fs
xlat
aas
data16
inc
aas
jbe
mov
insb
mov
in
cmp
es
fidivs
xor
pop
fmull
fcmovbe
jl
std
mov
mov
cmp
mov
stc
pop
mov
xor
and
sbb
pop
ja
push
scas
mov
adc
lds
push
icebp
scas
aaa
xchg
jae
pop
and
cwtl
int3
mov
adcb
jo
es
jnp
dec
enter
inc
mov
adc
sbb
sbb
jns
pop
xor
adc
jl
xor
push
rcr
adc
cmp
lea
cmp
adc
insb
add
xor
cmpsl
stc
dec
push
scas
pop
sbb
es
les
pop
sub
pop
cmp
push
xlat
fbld
lods
push
mov
add
sbb
sbb
fcmovu
cld
fnstenv
jmp
push
aam
dec
xor
adc
inc
sbb
mov
stos
ror
pop
andb
jns
inc
sbb
sub
cmp
ffreep
push
dec
dec
imul
mov
icebp
sbb
mov
pop
loop
cmp
sub
ds
mov
inc
enter
ret
mov
dec
ret
ja
xor
imul
aaa
and
xchg
outsb
sub
int3
sti
aad
adc
je
or
xchg
mov
ret
test
test
rorl
sub
xlat
mov
insb
movsl
fdivr
pop
and
dec
dec
outsl
mov
pop
popf
es
movl
icebp
xor
outsb
repz
mov
push
pushf
jmp
scas
pop
dec
je
and
lahf
mov
sbb
adc
fcomp
and
inc
jne
aas
mov
out
push
adc
stc
add
ss
pop
cmp
jecxz
movsb
into
xchg
arpl
lods
shll
add
jb
jo
lods
popf
mov
fwait
sahf
orb
mov
mov
xor
rclb
pop
imul
and
jmp
insl
mov
popf
xlat
and
mov
mov
lahf
stos
bound
cmp
ja
stos
mov
dec
add
orb
stc
or
xor
and
jecxz
mov
rorb
fisubl
and
push
dec
lds
push
and
test
sub
clc
xchg
inc
push
imul
mov
mov
out
jle
and
jo
adc
int
fisubrl
cmp
inc
jecxz
stos
push
xchg
aas
bound
inc
lcall
out
adc
rorl
xchg
in
cwtl
sbb
jo
dec
arpl
fcmovne
mov
data16
push
jae
pop
pop
shl
inc
xchg
sub
push
jmp
push
xchg
xchg
scas
ret
movsb
movsl
imul
es
fistpl
jmp
movsb
adc
outsb
fidivl
or
push
fdiv
jno
outsb
push
inc
popa
icebp
sbb
sti
fdivrl
popa
adc
stos
xor
dec
jmp
jle
jnp
cmpl
mov
pop
and
push
lods
mov
mov
ds
scas
push
jb
in
inc
jbe
stos
cmp
out
or
and
movsl
push
les
mov
cmp
xchg
repz
int
ficoms
mov
rcrl
sbb
jns
sbb
movsl
and
push
dec
jns
out
adc
dec
add
outsb
xchg
inc
insl
insb
jle
xchg
arpl
sub
jb
test
and
adc
aas
pop
enter
inc
pop
add
jge
les
mov
push
jmp
mov
mov
sti
leave
rcr
mov
insl
jae
inc
pop
outsl
push
dec
cltd
enter
push
aas
jns
adc
adc
sahf
xchg
inc
sahf
push
push
jne
cwtl
ss
push
push
imul
and
push
lods
pusha
in
cwtl
mov
imul
incb
loope
movhlps
lea
or
mov
cmp
cmp
sahf
jmp
mov
cmp
stos
jnp
mov
xchg
jae
jmp
mov
xchg
out
lret
test
mov
imul
ljmp
sub
xor
test
xor
jae
and
test
push
lock
cmpsl
cltd
adc
pop
or
sbb
ss
push
dec
pop
out
mov
out
push
mov
sbb
sub
insl
ret
xor
inc
jecxz
xor
mov
and
push
mov
xor
pop
hlt
push
lock
pop
add
add
push
cmp
cmp
cltd
bswap
cmpsb
arpl
sahf
out
shrb
loopne
sbb
mov
in
imul
jp
push
adc
add
xchg
sub
inc
ds
mov
dec
and
addr16
mov
fisttpll
mov
aas
dec
or
loopne
and
fimuls
out
inc
inc
mov
jnp
test
jo
iret
out
jecxz
cmp
push
add
dec
push
rcrb
push
sub
test
fmull
pop
push
sbb
mov
dec
xor
jb
xor
out
mov
iret
xchg
xor
dec
imul
fistpll
sbb
in
push
ds
jae
xor
repz
pushf
jmp
ret
inc
les
dec
pop
inc
loop
cmp
add
leave
out
in
adc
sahf
sti
out
dec
dec
pop
in
adc
jecxz
das
dec
loopne
repz
mov
dec
jmp
popl
sub
fsubrs
outsl
push
in
fisttpl
pop
push
shrb
pusha
dec
int
lods
popa
mov
add
fs
test
flds
aas
popf
rolb
dec
jb
mov
inc
push
inc
xchg
xchg
pop
ret
repz
mov
mov
sahf
inc
inc
mov
imulb
add
insb
gs
in
sbb
fnstsw
or
in
mov
imull
adc
sub
arpl
test
sub
xor
out
xor
mov
cli
jae
pop
jo
cmp
adc
fldcw
pop
test
loopne
sbb
and
mov
jg
adc
cmp
lahf
xchg
dec
iret
add
out
int3
fildl
popa
sbbl
lds
inc
cmp
jo
add
cmc
cmp
scas
xlat
ret
pop
aam
dec
dec
cmpsl
push
scas
adc
ret
mov
jge
or
cmp
in
ja
loop
in
out
les
jle
test
fstpl
fcmovne
out
sahf
push
pop
dec
mov
cmpsl
mov
xor
xor
pop
data16
repz
push
sub
jecxz
push
mov
loopne
hlt
sub
jge
clc
push
jo
ss
sub
sbb
add
in
xor
testl
fdivrl
mov
ret
decb
inc
push
inc
testb
je
mov
push
out
cmp
push
lods
movsb
mov
mov
mov
mov
movsb
xchg
dec
shll
add
jg
stos
lcall
add
xor
arpl
adc
dec
sub
pop
jb
mov
and
pop
in
call
sub
xchg
lahf
adc
imul
ret
cmp
fnsave
gs
adc
mov
js
iret
daa
je
aaa
cmpsl
scas
pop
xor
ret
sbb
mov
jg
xchg
call
movsb
sub
shrl
cmpsb
push
mov
and
into
aam
loop
push
jl,pt
xlat
adc
mov
mov
push
and
jae
and
mov
in
test
lock
enter
pushf
push
jno
push
mov
adc
fdiv
sahf
cld
sbb
lcall
and
ljmp
fiaddl
loopne
xchg
inc
or
pop
dec
jge
addr16
and
lds
outsb
loopne
inc
push
xor
aas
push
test
adc
jb
and
pop
cmc
lods
pop
movsb
and
mov
pop
inc
dec
orb
das
cmp
xchg
sarb
cmp
xor
push
pop
push
push
jo
inc
cmp
cmp
ret
call
cwtl
jno
pop
roll
or
sbb
mov
push
rcl
mov
mov
out
std
mov
mov
stos
mov
test
mov
cmc
mov
test
repz
jl
ret
mov
lods
daa
dec
fisttpll
lcall
ss
fninit
shll
cwtl
out
mov
lahf
int3
pop
xchg
lret
out
shll
outsb
in
jg
sbb
outsb
pop
mov
xchg
jae
mov
jo
mov
ficompl
mov
mov
mov
sbb
divl
jmp
mov
pop
and
in
cmpsl
out
sub
xchg
pop
rcr
sbb
les
aad
shlb
orb
out
nop
je
mov
movsb
scas
fiaddl
decl
xchg
jo
mov
xchg
and
inc
cmc
or
dec
ljmp
dec
cmp
outsl
cmp
xchg
jb
in
ret
call
push
fwait
cmpsl
into
arpl
push
movsb
or
xchg
lock
pop
pop
jbe
std
jb
pusha
jo
call
jo
cwtl
mov
andb
rcr
mov
repz
xor
mov
jg
aad
jg
mov
push
insb
bound
flds
adcl
jne
mov
mov
push
adc
pop
sbbb
shll
pop
push
and
push
fidivs
mov
inc
imul
add
pop
inc
sub
loopne
mov
neg
inc
xor
push
dec
xor
gs
push
bound
inc
aas
xchg
mov
arpl
mov
and
or
sahf
sub
cmp
fwait
inc
inc
loopne
jmp
sbb
cld
loope
inc
repnz
test
dec
cmovne
or
jbe,pt
cmpsb
imul
subb
or
adc
jo
sbb
push
ret
xchg
lret
negl
sahf
stos
movntq
xor
push
adc
ret
movsb
fistl
xor
push
out
aam
add
shrl
mov
mov
adc
mov
mov
jb
lods
mov
scas
rolb
faddl
push
into
jns
loopne
hlt
mov
push
insl
adc
subl
sub
mov
lods
je
repnz
dec
inc
rcr
in
sbb
insb
in
or
or
mov
dec
mov
stos
testb
dec
inc
mov
aad
es
clc
cmpl
cmc
adc
xchg
push
mov
push
in
or
addb
adc
testl
push
jo
movsb
arpl
sbb
adc
fistl
lock
push
add
or
test
ret
arpl
inc
mov
mov
js
xchg
mov
loop
xor
cmp
enter
or
mov
lret
shll
out
xchg
and
mov
shll
mov
mov
xor
in
loope
pop
pop
sub
mov
nop
pop
lret
and
cmp
sbb
lcall
popl
out
sbb
pushw
push
jno
push
inc
mov
inc
jmp
mov
ljmp
sub
inc
lret
lods
cmp
xchg
adc
cmpsl
and
mov
or
push
jmp
out
push
xor
xor
cmpsb
mov
and
jmp
mov
rorl
cmpsl
stos
fstps
mov
xor
cmp
pop
xchg
mov
shl
scas
xor
psllq
mov
push
xchg
gs
xchg
test
arpl
mov
xchg
bound
imul
andl
leave
ret
cmp
mov
pop
mov
imul
push
lahf
movsb
jl
or
cmp
arpl
test
ljmp
adcl
insb
or
aas
mov
mov
fnsave
cmp
in
jmp
cmp
sub
ds
add
sbb
in
pop
xchg
mov
jecxz
dec
push
pop
sbb
xchg
sbb
xor
push
push
add
aas
add
outsb
mov
insl
mov
fs
in
mov
add
mov
or
push
pop
sub
mov
mov
cmp
stc
jae
xor
push
enter
mov
jb
push
lods
inc
push
mov
test
xchg
es
inc
imul
sbb
aam
jg
sub
mov
add
out
cld
fbld
xchg
fs
stos
aam
push
arpl
pop
ret
notl
mov
xor
push
je
addr16
andl
fidivl
out
dec
mov
dec
inc
or
in
mov
mov
hlt
push
int
out
jecxz
adc
ret
or
mov
mov
pusha
pop
pusha
mov
mov
out
mov
jle
mov
xchg
mov
xor
outsb
xor
add
and
iret
dec
sub
aas
inc
push
shr
mov
and
dec
adc
flds
inc
mov
xchg
fdivs
mov
xor
test
scas
fnstsw
and
xadd
adcb
in
cmp
fidivrs
sub
adcl
jle
sbb
pop
adc
fisubl
xchg
repnz
lcall
cmp
scas
sbb
mov
jns
add
xor
jbe
sahf
aas
addr16
movsb
add
xchg
lock
mov
jle
mov
or
pop
ja
cmp
movsb
dec
sub
xor
std
xchg
aaa
loop
dec
jmp
ljmp
aad
push
pop
cmp
hlt
cmpsb
icebp
popa
repnz
inc
out
mov
adc
aaa
add
push
ds
lods
cmp
sbb
mov
mov
jl
movsl
stos
jo
fnstsw
insb
icebp
clc
stos
and
outsl
in
stos
xor
aad
push
insl
jae
imul
sub
sbb
ljmp
jnp,pn
xor
xor
mov
inc
and
sbb
or
and
in
cmp
mov
mov
fstpt
fwait
fs
xchg
sbb
fwait
ret
ds
push
mov
mov
or
into
fmulp
or
add
add
aad
push
sbb
pop
daa
cmp
jne
in
sti
mov
adc
push
mov
mov
subb
add
mov
cmp
push
inc
pop
and
sbb
scas
fwait
adc
cmc
aaa
inc
fadds
xor
sub
stc
sbbb
hlt
or
xorl
ja
adc
sahf
pop
out
jns
ljmp
xor
jecxz
adc
inc
outsl
lds
mov
shr
mov
insl
enter
cmp
sub
cmp
push
aam
scas
sub
sbb
jne
dec
jl
sub
sbb
loop
insl
adc
jecxz
push
repz
cltd
xchg
fdivrs
inc
adc
scas
outsb
xor
lea
repnz
jle
adcl
bound
cmp
or
adc
dec
push
sbb
add
icebp
lods
addr16
movsb
mov
add
add
dec
rolb
mov
pop
cmp
add
insb
inc
rclb
cmc
xorb
fcoms
cmp
push
leave
pop
xchg
lods
sub
les
clc
sub
ja
shrl
jp
inc
xchg
inc
callw
roll
lea
sarb
adc
cmpsl
out
mov
les
jecxz
in
lock
cmp
nop
lcall
cs
cltd
fistpl
xor
aad
cmp
pop
sbb
push
sbb
movsl
popa
add
mov
ljmp
pop
out
outsl
fcoms
pusha
cld
or
or
in
mov
clc
push
lds
push
push
gs
sbb
test
mov
shll
out
daa
sbb
xchg
mov
icebp
sbb
xor
push
xor
cwtl
nop
movsl
testl
aam
lahf
out
and
pop
dec
lock
mov
dec
pop
sbb
lods
inc
mov
jb
jnp
mov
test
fsubrs
inc
in
cmp
mov
test
mov
pop
cld
stc
ret
mov
jnp
mov
bound
outsl
scas
xchg
test
add
stos
mov
iret
dec
aam
jb
push
or
jp
pop
or
and
js
jbe
adc
xor
ljmp
mov
mov
lret
fildl
add
sub
and
adcb
mov
out
push
imul
icebp
jno
mov
and
cmc
add
sub
fwait
mov
or
cmpsb
fdivr
orl
adc
adcl
in
xlat
dec
adc
mov
mov
adc
loop
mov
mov
in
mov
ret
in
mov
arpl
add
sub
leave
mov
jo
jno
insl
and
inc
shlb
add
out
adc
movsb
lds
scas
sar
lock
mov
mov
sub
imul
aas
jecxz
push
sub
andl
jb
sub
iret
stos
ret
repz
fists
es
pop
inc
sub
cli
mov
iret
lods
rolb
test
popa
mov
xor
cmpb
test
inc
lock
adc
fdivrl
mulb
dec
data16
jbe
xchg
mov
scas
xchg
idivl
ret
in
and
xorb
sti
xchg
in
mov
shlb
stos
add
jbe
fnstsw
add
dec
adcl
test
push
dec
adc
stos
sbb
xor
and
mov
or
sbb
int
iret
or
shlb
dec
push
push
sbb
mov
das
cltd
dec
mov
int
or
mov
in
fists
xor
insl
jne
jmp
mov
and
int3
adc
sub
xchg
lock
push
dec
cld
xchg
xlat
add
lds
pusha
aad
dec
sbb
push
adc
out
xor
stos
inc
vphaddubd
jnp
cltd
fstpl
xor
loope
sarl
sbb
mov
aam
ret
mov
inc
fnstcw
repz
loop
in
xchg
and
mov
push
fadds
std
adc
or
std
out
ds
cwtl
cmp
lods
fdivrl
push
fsts
sbbl
cmp
sub
mul
into
xor
or
lds
es
pop
mov
stos
xchg
addr16
aas
and
adc
xor
nop
xchg
cmp
popf
or
jl
inc
xorb
dec
pop
jge
push
mov
jae
jge,pn
lea
jp
test
cli
push
add
pop
mov
cmpsl
daa
ja
xchg
shll
lods
ds
ljmp
jo
mov
cmp
cmp
sub
rorb
das
pop
jae
add
stc
out
inc
movsl
jmp
pop
popf
rorl
and
imul
stos
repnz
movsb
pop
fcomps
sbb
push
pop
int3
pushf
daa
pop
xor
xchg
mov
cvtps2pi
mov
pslld
int
adc
mov
ficompl
pop
jecxz
adc
pop
dec
jg
rcl
outsb
das
push
out
lock
xor
fwait
outsl
push
or
jo
nop
push
aaa
subl
data16
mov
inc
roll
pop
inc
scas
js
xchg
test
sbbl
mov
es
in
aaa
push
or
sbbb
mov
xorb
dec
test
imul
add
fcomps
arpl
lcall
aaa
jmp
jo
fwait
mov
adc
in
in
add
out
and
and
xor
test
sarl
lret
popa
jg
xchg
stos
mov
xor
dec
jecxz
sti
ss
xor
insb
or
sbb
nop
arpl
mov
mov
jmp
notb
push
mov
xor
dec
or
movsb
dec
inc
frstor
add
fnstcw
sbb
int
add
rclb
popf
cmc
xor
lods
pop
fistpl
cmp
dec
data16
jmp
add
cmp
mov
and
outsb
cmp
sub
push
sub
scas
jno
in
xor
lcall
push
sbb
in
sbb
cs
div
mov
jg
xchg
lods
nop
mov
daa
jp
adc
leave
ficompl
adc
xor
and
cmp
sub
ss
stc
jae
pop
xchg
add
stc
inc
sub
test
shlb
js
add
cli
in
mov
js
bound
xor
mov
inc
inc
lds
lds
or
cmpsl
xchg
jmp
test
gs
mov
ljmp
dec
testl
gs
pop
lds
push
fstps
jle
pop
nop
jle
test
loop
mov
cli
mov
cmp
loopne
bound
mov
stc
jl
fsts
push
orb
xor
jmp
sub
push
sub
popf
mov
jle
pop
cld
cmp
cld
rcll
xchg
fs
rcl
add
adc
push
push
add
and
inc
push
push
inc
popa
inc
or
push
pop
repz
ret
out
out
sub
test
jmp
stos
jo
sub
dec
dec
pop
popa
jb
jne
or
aaa
pop
imul
mov
imul
jp
push
loopne
xchg
adc
and
imul
lret
in
out
jnp
dec
xchg
mov
jmp
sub
mov
shll
imull
imul
les
dec
out
mov
xor
cmc
xor
int
out
cmp
lea
fdivrs
push
out
mov
and
iret
xchg
or
xchg
jbe
sbb
xchg
repz
inc
mov
pop
das
cmp
ret
nop
rcrb
in
pusha
mov
into
pop
lods
iret
push
pop
sbb
loope
jge
jl
xlat
push
cmpl
cwtl
sub
data16
ja
arpl
mov
cmpl
andl
xchg
xor
mov
out
test
mov
mov
lret
loop
cmp
loopne
inc
push
inc
pop
xor
fldl
in
push
add
jle
and
lods
or
pop
mov
mov
and
cmpsb
sub
rolb
sbb
sti
sub
fistl
pop
aam
jg
jb
int3
cmp
stos
pop
stos
inc
imul
jg
daa
faddl
xchg
daa
or
mov
fcompp
cmp
gs
mov
cs
std
fmul
mov
repz
mov
mov
int
mov
dec
out
repnz
push
add
cld
xchg
jo
ja
pop
dec
sbb
iret
add
and
sbb
cmpl
aas
pushf
add
outsl
fucomip
push
pop
jnp
scas
dec
add
inc
shrl
into
push
scas
fbstp
pop
pop
in
int3
aad
pushf
adc
adc
xor
lock
mov
je
mov
mov
addl
mov
inc
fwait
xlat
ret
daa
jb
pop
movsl
xor
aaa
dec
ficoml
movsb
rol
push
mov
lahf
and
adc
push
daa
push
fldt
mov
push
xor
cld
sub
or
adc
pop
pop
cmp
inc
pop
fwait
rdpmc
fmulp
jmp
cmp
cmp
mov
or
test
sub
or
sbb
jo
add
cmp
cld
sbb
je
pushf
jmp
pop
in
jg
add
push
fwait
int3
fistps
inc
mov
xchg
rorb
mov
add
mov
cmpsb
pop
xchg
xor
sbb
lret
mulb
pop
cmp
push
push
adc
and
lea
es
std
push
je
stos
cmp
cltd
fld
or
mov
enter
pushf
popa
inc
cmp
add
xchg
mov
mov
cld
leave
lea
mov
lret
push
sbb
jle
in
mov
push
in
jle
hlt
cs
cmp
pop
data16
mov
jl
aas
xchg
subl
mov
fnstcw
push
xchg
pop
mov
mov
mov
cmp
hlt
lret
shrb
popa
shlb
push
jnp
bound
pusha
fcoml
mov
push
pop
sub
inc
std
lds
push
out
cmp
js
cmc
sub
rcrl
nop
psrlw
add
adc
out
or
xlat
aam
or
xchg
sub
fmull
popf
divb
jmp
adc
cmp
add
push
stos
gs
lods
aaa
mov
cmpb
pushf
call
mov
stos
adc
loopne
mov
push
in
daa
push
decl
push
add
pop
mov
dec
stos
rcrb
in
mov
movsl
mov
xchg
jge
cmpsl
mov
decl
mov
inc
pop
inc
ds
and
and
imul
sub
pushf
adc
push
add
push
iret
xor
jne
cmp
mov
mov
fsub
sbb
jns
push
jg
sarl
xorb
cmp
jg
stc
mov
sbb
addl
push
mov
imul
scas
push
idivl
xchg
dec
popa
sub
sbb
pop
daa
pop
setno
cwtl
mulb
insl
aam
les
jbe
mov
or
pop
cld
or
sarb
mov
cmp
pop
imul
inc
dec
addr16
pop
pushf
fbstp
sbbb
cmp
xchg
adc
add
loop
jno
pop
out
rcl
mov
je
inc
je
xor
push
dec
inc
jp
iret
jecxz
push
scas
out
sar
into
dec
jecxz
daa
cmp
sub
fwait
mov
cmp
inc
jns
or
cmp
inc
std
jns
jb
and
dec
pop
in
aam
push
pop
roll
es
popf
into
and
pop
es
test
scas
push
into
push
leave
imul
jo
pop
scas
ret
xlat
call
les
rorl
outsl
loop
iret
cmp
std
cmp
push
stos
aaa
lock
notb
cmc
int3
adc
adc
xchg
xor
cmp
cmp
push
imul
stos
insb
fnstsw
imul
push
push
loope
stos
push
inc
stos
std
mov
mov
shrl
add
xchg
imul
sar
movsb
inc
das
das
shrl
inc
xor
addb
pop
popf
jmp
cmp
cmp
pop
lods
stc
jne
jecxz
int
call
aas
ja
dec
inc
sahf
scas
sbb
lahf
jp
and
sti
cmpsl
pop
xchg
push
and
mov
dec
or
mov
in
mov
add
insl
pusha
dec
scas
fs
inc
pop
stos
add
imul
sub
jo
mov
in
shl
negb
insb
jmp
movsb
js
xchg
stos
pop
jge
loopne
in
or
and
das
leave
fldenv
jo
ljmp
fisubs
pushf
sbb
aad
in
sbb
test
icebp
push
push
mov
or
inc
inc
stc
orl
push
mov
adc
and
les
pop
cmp
stos
push
xchg
lods
pop
fbstp
sub
mov
jge
sub
mov
dec
cmc
inc
lock
lds
in
ds
mov
sub
imul
xor
imul
push
int
or
or
loopne
mov
add
sub
addr16
out
inc
jmp
and
jae
shll
je
pushf
mov
xchg
jae
aam
mov
cmp
clc
and
lcall
hlt
xchg
loop
fists
out
subb
rclb
adc
ret
mov
les
loope
insb
cwtl
arpl
aad
fnstcw
shll
sub
push
stos
and
pushl
jns
scas
repz
adc
aad
lods
insb
jae
cmpsl
pop
mov
push
arpl
pushf
adc
mov
pop
pop
sub
mov
rcl
ficomps
jnp
int
dec
mov
push
std
shlb
ja
add
iret
xor
cmp
loopne
pop
dec
cs
mov
mov
xchg
fisttpl
mov
and
push
scas
cmpsb
adc
xchg
in
mov
sbb
pop
sbb
loop
fbstp
das
push
and
sarb
bound
insl
push
ljmp
cmpsb
adc
xchg
adc
mov
ljmp
xor
insb
sbb
inc
xor
push
pop
dec
mov
jg
jge
add
pop
cli
out
jg
out
idivl
mov
inc
xor
dec
adc
inc
mov
jl
lock
mov
xor
mov
or
push
add
loop
inc
test
push
sub
mov
and
inc
sub
cmp
inc
insb
rcrl
jbe
adc
test
cmc
xchg
jne
into
fnstsw
jne
fstpt
daa
iret
hlt
jl
faddl
fwait
jg
rcll
xchg
push
pop
xor
xchg
repnz
sbb
hlt
mov
push
es
cld
pop
lret
icebp
popa
jbe
rcrl
pop
xor
loope
test
mov
pop
scas
scas
pop
shrb
push
call
cmp
fcoms
sbb
mov
adc
lods
or
movsl
add
cmp
leave
std
mov
or
jbe
in
cmpsb
cmp
incb
xchg
icebp
cwtl
cli
pop
mov
jp
pop
xor
lods
aaa
jne
inc
das
insb
loope
pop
inc
or
inc
sarl
mov
es
or
data16
imulb
pop
out
xorl
and
aaa
test
stos
inc
cli
jno
addr16
gs
test
and
lcall
ljmp
mov
pop
jns
pop
das
dec
imul
mov
lret
out
mov
ficomps
out
ret
mov
shl
lret
outsb
cmp
xor
je
dec
idivl
sbbb
push
or
jecxz
cld
sbb
out
mov
ja
xchg
jmp
inc
xor
dec
and
mov
xor
cmp
int
inc
xor
pop
dec
rcrl
ja
inc
push
jno
test
repz
inc
cmp
into
add
stos
sub
sub
mov
xor
xchg
ja
mov
sbb
or
jge
stc
sbb
jne
nop
and
mov
lcall
cmp
xchg
dec
int
xchg
subb
pop
xlat
fdivrl
sarb
push
mov
xor
mov
popf
xlat
xor
or
test
lock
dec
mov
xor
cmp
rcrl
sahf
xchg
test
scas
and
adc
nopl
inc
and
adc
jmp
lock
subb
jecxz
mov
sbb
cwtl
push
loop
call
gs
inc
sub
push
cli
adc
arpl
sbb
dec
dec
push
aam
mov
jo
out
pop
push
jne
dec
xchg
or
jae
pop
fisubrs
sbbb
into
cmp
jl
sub
outsl
scas
push
or
adc
mov
push
xor
lods
outsb
xchg
or
pop
cmp
scas
int3
in
dec
lret
xchg
sbb
xchg
test
sub
jns
sbb
mov
or
add
sub
fs
mov
je
xchg
cmc
jle
mov
pop
aad
push
stos
dec
stos
mov
repnz
dec
inc
push
fistpll
sarb
mov
xlat
cmp
in
sub
cwtl
enter
shrb
out
sti
pop
fidivl
jmp
xchg
out
mov
call
movsl
mov
lods
mov
dec
les
dec
arpl
add
mov
add
jl
jo
xor
jle
les
mov
cmp
mov
nop
cld
xor
inc
sub
filds
clc
fisubl
xchg
sbbb
jp
subl
mov
xchg
mov
bound
mov
dec
xor
xor
mov
push
lahf
movsl
jae
cld
adc
les
sbb
arpl
pop
gs
jns
fcomps
xor
xor
lock
sbb
jle
ljmp
jge
popf
addr16
sbb
ds
xlat
and
popf
sar
test
xchg
sbb
sbb
cld
ja
jnp
add
sbb
or
loopne
mov
inc
inc
pop
inc
stos
pop
sub
mov
int
imulb
push
cli
fsubrl
jp
lret
loope
dec
pop
scas
lds
das
pop
add
pop
stc
cwtl
int3
popf
dec
sti
sub
int3
xchg
mov
add
int3
fs
mov
int3
fstps
mov
rorb
test
shlb
pop
scas
xchg
dec
mov
scas
push
mov
mov
push
mov
sbb
sub
pushf
xchg
imul
inc
cltd
mov
cmpsb
xor
ret
pop
cmpsb
mov
test
je
push
hlt
push
lds
adc
dec
add
shlb
sti
and
out
inc
mov
mov
outsb
mov
idivb
add
dec
enter
pop
rorl
testb
and
add
test
add
pop
jg
dec
push
or
pop
push
cmp
in
sub
addr16
stc
push
fwait
jo
lret
cmp
jecxz
inc
les
dec
mov
xchg
jecxz
into
fstpt
cmp
daa
sub
adc
mov
pop
lock
hlt
leave
sub
dec
pop
js
jg
adc
outsl
cmp
frstor
stc
mov
sarb
mov
push
inc
shrl
adcb
or
mov
fcmovnb
cwtl
inc
outsl
inc
mov
fst
shl
jns
loop
sbb
fwait
push
notl
sbb
ljmp
adc
loop
jg
add
xchg
rorb
leave
sbb
sbb
scas
in
scas
bound
imul
mov
fsubrl
jle
jmp
aaa
jg
inc
fstpt
or
xorl
mov
dec
xchg
jne
mov
pushf
sbb
dec
in
test
mov
inc
sbb
jge
push
add
fldl
mov
mov
sbb
aas
lods
pop
dec
imul
arpl
aad
repz
xchg
and
xor
mov
scas
xor
scas
int
cld
add
movsb
popl
jp
outsb
les
push
push
out
or
push
cmp
dec
pop
pop
mov
push
mov
sbb
faddl
test
jmp
andb
leave
popa
stc
repz
mov
or
clc
movsl
fistpll
pop
pop
mov
shlb
and
adc
jbe
sbbb
jne
aas
aad
push
cmp
xor
inc
add
mov
das
out
sarl
ficoml
fimull
test
inc
into
out
cmp
stos
data16
insb
daa
add
mov
outsb
xor
mov
outsl
into
pop
xchg
jg
movsl
cltd
inc
das
xor
pop
push
jnp
inc
fisubrl
stos
int
dec
pop
jge
mov
stos
fidivs
shlb
sbb
jb
pop
scas
ds
and
int
sub
fwait
shrl
mov
out
or
xor
inc
cmpl
ja
aam
call
xchg
pop
int
cmp
loop
jecxz
sbb
repnz
sub
xor
push
scas
arpl
pop
dec
dec
test
arpl
dec
cmc
xchg
mov
add
cwtl
inc
add
mov
repnz
test
or
iret
leave
lods
lret
aaa
mov
mov
fisubrs
sti
push
add
jge
icebp
or
out
push
xchg
mov
cltd
xchg
sbbl
mov
in
adc
xlat
cmp
fwait
dec
or
push
cs
lahf
icebp
fisubrl
xor
or
add
pop
iret
aaa
dec
les
add
mov
pop
and
mov
lds
inc
ja
dec
fs
jb
sbb
xchg
sub
xlat
jle
push
xchg
cmp
push
sahf
call
fsts
cld
pop
pop
lods
js
shlb
and
hlt
push
std
dec
and
dec
std
jmp
lods
push
rcll
imul
mov
out
shrb
out
dec
loopne
xorb
out
xchg
enter
aas
divl
jbe
jns
aas
cmp
jbe
notb
test
scas
or
lret
xchg
mov
cmp
push
fmull
imulb
insl
imul
mov
jns
cmp
xchg
cltd
mov
inc
xor
jl
outsl
aas
dec
aas
loope
mov
push
xlat
xlat
scas
int
xchg
sbb
sub
jl
lea
adc
xchg
dec
push
adc
pop
lock
xchg
int
mov
cltd
test
aas
mov
shr
pop
test
lock
scas
jg
bound
xchg
inc
sbb
xchg
adc
aam
ss
xchg
mov
push
mov
mov
xor
outsl
mov
fdivl
aas
mov
out
inc
aam
mov
xchg
pusha
add
xlat
fcomp
mov
js
ljmp
sbb
jae
inc
stos
push
xchg
dec
jp
xchg
push
mov
xchg
xchg
rorl
orl
mov
stos
shll
ror
aaa
jl
jae
aaa
sub
sub
cmp
mov
sbb
int3
mov
in
inc
and
push
mov
js
cmp
jmp
into
mov
or
lcall
sub
nop
and
icebp
jns
aad
outsl
xchg
fwait
sub
test
cmpsb
outsl
jmp
pop
or
fstpt
adc
mov
fwait
or
pop
lret
mov
outsb
stos
jo
aaa
mov
cs
hlt
push
and
mov
pop
push
or
pop
cltd
push
ljmp
fdivrl
dec
lret
sub
pop
out
sbb
cmp
nop
jbe
mov
mov
mov
or
nop
hlt
sub
cmpsb
mov
jg
jne
enter
pop
cld
rcrl
int
movl
cmp
int3
fwait
aas
jmp
xchg
jns
test
xor
nop
fstpt
mov
cld
sarb
inc
ret
xchg
ja
adc
jecxz
mov
sub
add
out
mov
bound
xchg
loope
out
outsl
outsl
inc
fimull
xor
xor
fs
fistps
xchg
into
xor
or
pop
aas
mov
pop
mov
mov
call
out
cs
icebp
test
cli
mov
xorl
cs
outsl
or
inc
push
iret
sbb
jl
cmpsb
cltd
inc
sub
mov
lret
subl
xor
imul
in
pop
cmp
fcmovb
aam
das
and
es
popa
and
sub
inc
mov
sub
fs
cltd
out
cmp
fwait
mov
iret
push
xlat
and
jge
sbbl
aaa
jbe
inc
sub
rorb
cld
dec
or
ficomps
mov
or
test
nop
shlb
icebp
cmp
mov
push
xor
or
ds
into
sti
mov
cmp
xor
sete
mov
jns
dec
data16
jb
mov
pop
adc
insl
frstor
ljmp
jp
or
out
fldt
pop
pop
dec
lret
mov
fldenv
add
ss
mov
or
xrelease
fnstsw
adc
sbb
cmpsb
cli
jb
out
xchg
mov
int
cmpsl
leave
imul
fisubs
pop
xor
lret
test
test
ds
add
clc
push
lods
cmc
scas
lods
xlat
mov
and
inc
push
mov
jno
ss
jge
fwait
push
loope
mov
loop
cmp
dec
push
mov
daa
mov
xor
pop
andl
mov
push
rorb
adc
push
les
pop
push
out
ss
push
push
xlat
in
les
roll
aas
or
jge
and
mov
mov
add
fs
out
add
mov
xor
inc
xor
and
stos
and
js
push
cmp
dec
mov
outsl
and
dec
rcrb
sbb
jle
jle
pop
and
sbb
mov
les
dec
int
or
jp
imul
or
addr16
add
mov
or
push
sub
and
push
scas
jle
loopne
push
rorb
xchg
xor
fwait
scas
fbstp
int3
in
adc
jb
lea
aam
enter
push
clc
pop
push
dec
mov
je
cmpsb
icebp
test
hlt
jmp
outsl
out
shrl
test
aas
popf
pop
cmp
jno
cli
mov
je
mov
pop
and
inc
adcb
dec
cmp
es
fildll
sbb
xor
xchg
aas
shl
cmp
and
fmulp
fnstenv
popf
lret
push
fiaddl
pushf
enter
and
pop
scas
mov
mov
pushf
incb
aad
scas
lahf
sbb
aaa
fldcw
stc
adc
inc
insb
sub
mov
cmp
adc
aam
dec
add
lds
mov
pop
jle
fs
cltd
sub
adc
jmp
jbe
call
lret
rorb
in
xor
insb
sbb
cmp
mov
cmp
fcoms
sub
mov
add
call
rorl
iret
jl
adc
mov
sti
pop
push
push
inc
xchg
repnz
or
jmp
cwtl
add
call
les
int3
pop
mov
lcall
mov
dec
pop
sbb
inc
popa
scas
loope
mov
sbb
mov
fnstcw
insl
lock
xchg
loop
ja
cmp
pop
jnp
into
sahf
pop
out
imul
inc
or
cmovle
leave
ljmp
jno
cmpsl
int3
ja
adc
mov
pop
and
and
jp
rcrb
movb
add
jmp
push
popa
add
sbb
les
mov
xorl
push
mov
cmp
push
inc
push
leave
or
jnp
test
scas
dec
aad
mov
mov
jmp
sub
lods
enter
es
shll
lea
mulb
and
sbb
push
cmp
push
out
push
cmp
mov
lock
test
fcomps
mov
pusha
shrb
test
aaa
xchg
mov
pop
sti
jmp
inc
shl
sar
insb
jmp
rcll
aad
mov
xchg
call
insb
or
fwait
mov
jl
xlat
movsb
push
clc
cltd
je
mov
dec
mov
add
ficoms
adc
xchg
push
fsubs
shll
mov
out
cmpsb
loope
repnz
fwait
jp
xchg
mov
push
sbb
xchg
imull
sbb
hlt
push
inc
xchg
xchg
mov
popa
mov
test
out
inc
mov
ret
loope
push
dec
mov
ljmp
jge
es
ss
lock
mov
and
sbbb
sub
or
test
jmp
mov
inc
mov
sub
sbb
lods
sub
mov
bound
pop
xor
addb
adc
lcall
mov
push
mov
jne
aad
xor
xchg
rclb
push
imul
testb
fmulp
mov
in
rep
xchg
xor
aas
cmp
xchg
sbb
pop
imul
in
push
mov
pop
push
les
insb
sbb
lock
xor
xor
daa
xchg
scas
mov
imul
inc
push
pop
jecxz
daa
adc
mov
fnstenv
xor
fistps
adc
mov
rcll
sbb
xor
adc
push
dec
mov
mov
out
in
daa
jg
push
xor
mov
pop
jmp
dec
mov
and
jns
xchg
pop
loope
stos
mov
icebp
mov
cltd
inc
push
pushf
mov
lock
aas
jmp
test
mov
push
sbb
mov
xchg
cmp
xchg
test
loopne
inc
mov
dec
out
insl
and
mov
addb
pop
lcall
jle
and
mov
mov
xor
push
inc
in
mov
lret
sbb
clc
adcl
cld
faddl
mov
pushf
push
fistps
mov
adc
pop
js
and
mov
mov
push
out
adc
mov
add
jns
jae
xchg
mov
mov
in
fs
mov
test
out
dec
clc
fcomps
pushf
leave
das
adc
sbb
cmp
int3
out
gs
or
xchg
mov
push
je
mov
xor
sbb
xlat
jmp
into
adc
insl
ret
stc
sub
out
cmp
mov
dec
loop
test
push
mov
ss
insl
dec
mov
jb
dec
es
leave
aam
inc
and
or
pop
dec
popf
jno
lret
movsb
adc
fsubl
fwait
pop
or
pop
scas
jecxz
or
outsl
ja
cmp
mov
mov
pusha
add
cmpsb
subl
mov
outsl
jmp
leave
sub
popf
sbb
js
arpl
bound
push
dec
add
or
aaa
push
loope
orb
xchg
mov
icebp
mov
loopne
sarl
stos
xor
in
and
in
mov
insl
idivl
mov
in
aas
mov
dec
add
push
mov
ljmp
insl
mov
loope
rcll
xor
push
in
push
jnp
dec
mulb
je
es
or
sub
lods
and
jns
xor
sub
pop
leave
stc
xor
test
sbb
iret
pop
nop
outsl
ficoms
inc
or
andps
sahf
in
outsl
fdivs
push
xor
nop
xorl
lock
repz
addr16
stos
mov
push
sti
push
xor
fsubrl
xor
js
hlt
jp
dec
outsb
in
cmp
test
mov
sub
inc
loop
insb
inc
pop
into
fmul
ret
pushf
decb
dec
or
and
lods
jnp
test
push
jp
iret
push
imul
pop
mov
jbe
orl
jg
clc
mov
dec
dec
jb
out
shl
add
ja
std
dec
or
cld
xor
out
or
push
push
leave
in
lret
dec
cmc
add
mov
shrb
enter
adc
or
cmp
push
or
mov
dec
cmp
pop
mov
insb
stos
xchg
sarl
int
daa
jecxz
pop
mov
xchg
mov
ficoms
fiadds
cmp
fnstenv
mov
je
jle
pop
jno
out
pop
out
lret
testb
out
lods
sbb
inc
mov
lods
push
std
cs
cmp
shl
imul
gs
test
cmp
int3
in
add
pushf
sub
ss
jp
inc
out
cmp
movl
sbb
mov
mov
psubsb
bound
or
cmp
jmp
jne
push
or
or
cmc
pop
sub
stos
push
int3
push
adc
or
dec
adc
mov
xor
stc
cmc
sub
in
and
mov
cmpsb
sub
je
jecxz
adc
cmp
mull
aad
jo
outsl
and
repz
add
mov
inc
mov
xchg
dec
xor
inc
shll
or
mov
xchg
stc
sub
cmp
inc
rclb
pushl
daa
inc
faddp
out
lcall
sbb
xor
stc
pop
enter
fstps
sub
jne
adc
cltd
or
xchg
icebp
jne
sarb
aas
outsb
mov
pushf
jp
int
inc
jg
mov
sub
jmp
add
sbb
adc
cwtl
sub
movsb
imul
sub
cmp
daa
pop
sbb
pop
shrl
cmp
repz
or
mov
cmp
fstl
andb
push
sti
mov
mov
push
fs
sub
jb
lret
dec
add
push
into
cmp
into
or
push
dec
enter
push
mov
pop
je
and
sub
and
cmp
mov
sbb
xchg
rolb
lods
sub
sbb
jbe
push
jb
aad
scas
and
cmp
je
clc
xchg
dec
daa
mov
push
lds
rorl
add
daa
jns
mov
cmp
sub
sub
push
mov
mov
std
or
dec
push
popa
sub
scas
inc
cld
inc
mov
mov
int
repnz
xor
mov
cmpsb
std
addr16
addl
mov
push
in
int3
and
sub
mov
sti
push
mov
dec
cld
pop
or
pop
aaa
out
int
out
shrb
push
and
xor
enter
pusha
ja
xorl
sbb
into
push
xchg
xchg
into
cmp
or
push
and
pop
and
inc
loope
cmp
mov
mov
push
mov
sbbl
mov
jle,pt
imul
adc
fcomp
or
test
adc
enter
push
sahf
jp
outsl
mov
push
shlb
rorl
inc
pop
lret
mov
loopne
enter
sub
mov
mov
xlat
jl
jns
adc
fbstp
ret
test
mov
paddusw
cmp
es
sbb
mov
push
push
and
cld
jl
sti
insl
js
xchg
add
mov
movsb
jl
add
scas
std
iret
aaa
push
add
xchg
jns
test
lret
imul
cmpsl
mov
sahf
cli
sub
pushf
lret
test
popf
fstpl
push
cmp
std
add
cmp
mov
inc
faddp
jno
lods
ds
add
adc
sti
sbb
push
push
icebp
lods
bound
inc
dec
mov
popf
addb
jle
adc
mov
fs
arpl
and
daa
insb
pop
mov
xchg
fbld
shr
sbbb
test
out
loopne
icebp
jge
dec
popa
aam
hlt
stos
dec
repnz
or
jecxz
test
clc
mov
add
stc
int
ret
outsl
add
rolb
std
xor
add
xchg
ss
xor
inc
es
jno
movsl
pop
jo
popa
aam
hlt
inc
cmp
test
fildll
bnd
or
inc
pop
aas
jle
das
cmp
xchg
adc
out
sub
sti
adc
mov
cli
or
mov
inc
inc
push
xchg
lcall
adc
or
and
sbb
mov
sub
and
push
shll
popa
mov
fadd
popf
repnz
jl
inc
scas
sbb
add
or
xor
sub
pushf
xor
jnp
mov
in
push
pop
aam
cld
or
adcl
xor
sub
pop
xchg
call
add
out
insl
shll
stc
push
sarb
test
jb
cmp
and
popa
add
mov
mov
clc
popa
xlat
cmp
popa
xchg
dec
inc
aam
inc
or
mov
adc
lock
sub
adc
loopne
add
rol
in
lods
mov
inc
jecxz
movsb
je
int3
adc
push
pop
insb
cli
sbb
outsl
dec
cmp
mov
pop
xchg
xor
lcall
leave
test
sub
pop
enter
leave
cs
sub
shl
cmp
ljmp
xchg
xchg
inc
mov
mov
mov
jbe
orl
and
mov
sub
aad
jb
xchg
or
leave
std
sub
or
push
lret
sti
pop
gs
js
pop
mov
pop
sub
push
les
mov
inc
jno
js
xor
mov
ret
shrl
clc
jno
jbe
das
fsts
sbb
mov
movsl
dec
lods
add
or
xor
loope
cmpsl
aad
insl
mov
or
out
test
ja
jb
imul
mov
adcb
and
std
sbb
dec
xchg
or
inc
dec
aaa
jge
pushf
aad
out
mov
sbb
test
and
repz
mov
scas
add
push
decb
mov
enter
cmpl
jae
pusha
adc
aam
pop
repz
sbb
pop
push
jp
arpl
mov
and
jbe
loope
sbb
repnz
lds
jnp
inc
ja
insb
cmc
scas
pop
sbb
int
scas
cwtl
mov
test
push
pop
jo
in
xchg
cmpsl
sub
add
in
push
inc
les
int3
leave
jmp
mov
sub
mov
mov
push
push
test
xchg
out
cmp
adc
adc
sbb
jg
mov
das
shl
jb
xchg
imul
adc
inc
mov
xor
pop
jl
dec
aad
push
mov
xchg
in
pop
loopne
into
push
lock
xchg
and
pop
mov
ret
xchg
lcall
scas
inc
mov
xor
mov
and
inc
pop
dec
mov
leave
push
repz
fsubrs
push
sahf
loopne
add
es
fbld
gs
push
jb
mov
xchg
push
dec
add
jnp
test
out
push
lods
cmp
pop
data16
iret
xor
add
insb
aad
xor
cltd
insl
popf
adc
out
test
scas
out
js
mov
fsubp
and
stos
fisubs
pop
clc
jno
repnz
popa
mov
dec
in
push
pop
sub
or
fidivl
cmp
fisubl
mov
sub
gs
xchg
in
push
in
push
cld
mov
stc
xor
sub
mov
imul
scas
popa
sub
lods
xor
xchg
cmp
iret
add
leave
mov
add
inc
imul
push
fnstcw
addr16
icebp
push
jle
add
mov
push
dec
cmp
push
cmovl
fwait
xor
or
pop
leave
cmp
xchg
mov
jecxz
add
cld
popa
push
mov
std
dec
icebp
mov
add
in
shlb
in
pop
adc
js
fbld
adc
fcmove
cmpsl
xor
pusha
push
fcmovnu
inc
xor
sbbb
addr16
fisttpl
adc
jo
dec
or
xchg
fmuls
mov
xchg
pop
sub
xchg
fisttpl
lds
and
or
fs
adc
in
cmp
cli
inc
mov
or
and
mov
cmpsl
fcmove
mov
jne
sub
and
or
cli
pop
jae
arpl
rcll
push
stos
rorl
pop
jg
push
dec
gs
pop
push
fidivs
or
jb
cmp
cmp
push
loope
jecxz
jg
xor
repz
lds
out
mov
xchg
mov
add
mov
jg
xchg
test
in
pop
and
mov
popa
xchg
and
imul
sub
cli
nop
outsb
jp
in
or
or
xchg
decb
mov
mov
inc
xorb
aaa
int3
int3
inc
sbb
sahf
and
mov
ja
sbb
inc
xchg
cld
mov
push
inc
in
movsl
lret
aam
xchg
fistl
push
outsb
jge
and
rolb
dec
pop
push
sub
inc
jecxz
sarl
lods
sbb
push
pop
dec
xchg
sub
push
push
lods
jae
sub
fldt
loopne
jecxz
dec
jle
fcompl
mov
lahf
je
mov
mov
in
mov
jp
push
in
outsl
xchg
stos
imulb
dec
xchg
ljmp
mov
and
pushf
jp
pop
jnp
addl
push
jo
push
adc
mov
adc
in
xchg
inc
sbbl
popf
movhps
out
scas
idiv
jne
mov
lods
or
and
fstpt
dec
sub
dec
pop
push
inc
loope
mov
sub
dec
add
loope
daa
rorl
mov
add
in
mov
cmpsb
xlat
jl
xchg
stos
push
adc
mov
ljmp
les
cmp
push
test
lcall
cmp
mov
repz
sub
into
lcall
mov
aaa
cmc
call
mov
aad
lea
mov
sahf
push
adc
insb
inc
mov
mov
cmpsb
dec
push
pop
das
inc
inc
leave
mov
mov
ss
adc
imulb
push
sbb
pop
lcall
push
out
dec
stc
push
jbe
int
mov
xor
rcrl
fcomps
sub
push
pop
iret
imul
rcr
mov
fdivl
notl
xchg
cs
pop
or
mov
dec
fdivrp
test
mov
or
dec
sub
xor
sub
fwait
pop
pusha
or
outsb
in
and
push
push
or
or
mov
popf
jl
ffreep
mov
xchg
in
inc
js
or
cs
push
mov
xchg
sub
dec
pop
imul
cmp
jb
loop
mov
aad
mov
cmp
ss
dec
sbb
repnz
ficoms
adc
push
out
adc
decb
les
in
cli
sbb
mov
dec
sti
cs
sbb
repz
pushf
cmpb
push
movsl
xlat
xchg
or
ffree
xchg
jo
adc
cld
fcoml
sub
dec
push
sbb
mov
sbb
aas
cs
sub
loop
leave
push
inc
mov
stos
xchg
xchg
mov
jbe
testl
dec
vmovsd
andl
test
jl
sub
fmuls
pop
std
lods
or
and
fisubs
pop
sahf
or
jb
sarl
lds
ficoms
jge
lds
jg
jmp
sbb
icebp
js
cmp
adc
ljmp
mov
aas
add
cltd
movsl
jmp
pop
negb
adc
add
jl
cmp
dec
sub
jp
xchg
idivb
fdivrl
xor
cmp
das
cltd
mov
jo
fistpl
cld
in
mov
ja
push
ljmp
outsb
push
mov
xor
aad
das
mov
stos
sbb
add
stc
lock
shlb
dec
inc
das
push
std
shrl
cltd
jmp
mov
ja
addb
adc
sub
sub
test
inc
sub
push
in
shl
rolb
bound
cld
lea
jge
and
cmp
inc
outsl
xchg
ficoml
mov
cmpb
mov
and
sarl
sub
push
dec
adc
lret
bound
pop
cmp
test
pop
lds
jns
lock
add
lea
insb
rcrb
mov
or
and
or
test
pop
cmpsl
xchg
les
add
push
gs
xchg
bound
aam
mov
lock
arpl
lds
jne
cwtl
mov
js
outsl
add
ss
jb
fnstsw
outsb
pop
into
leave
aas
jl
xchg
push
push
sub
je
sbb
inc
xchg
ja
movsl
mov
push
adc
stc
sub
fidivrl
inc
stos
pop
cwtl
scas
iret
mov
and
adc
sbb
test
movsb
fldl
clc
lcall
mov
aaa
dec
pop
sahf
mov
sub
xor
adc
sub
inc
push
rclb
push
pop
out
aas
out
in
fidivs
inc
ffree
mov
jae
inc
les
outsl
push
sti
aas
mov
jbe
mov
scas
mov
dec
add
es
dec
aam
or
add
mov
or
xchg
cmp
lret
sbb
lods
bound
xchg
aaa
mov
lods
fisubrs
cmp
out
stc
out
and
daa
addb
jp
iret
inc
push
cmp
das
jae
mov
add
adc
shll
in
insl
sub
hlt
sub
or
pop
jb
dec
xor
jmp
stos
repz
movsb
sahf
pusha
pop
or
repz
ds
xor
outsb
adc
jns
cmp
mov
or
sub
jo
sub
sub
aad
dec
inc
pusha
arpl
jge
dec
cli
lods
shlb
mov
adc
add
clc
push
ds
or
hlt
imul
fs
inc
mov
or
sbb
pop
aam
sub
push
sub
out
sub
fwait
idivb
xlat
outsl
sahf
sub
push
push
test
jns
fisttpll
aas
pop
jecxz
popf
or
loop
jge
cltd
ljmp
ret
xchg
fwait
popa
jp
xor
sub
dec
and
ljmp
sti
and
shrl
jns
fwait
testb
or
imul
inc
add
sarb
movsb
mov
adc
fsubrs
repnz
xchg
lahf
fwait
push
push
push
dec
dec
mov
imul
xchg
icebp
cs
outsb
shll
pop
or
test
mov
mov
aaa
mov
ss
and
add
dec
je
lretw
mov
dec
insb
je
icebp
sti
lret
in
xchg
dec
mov
es
cmpsb
mov
not
push
sub
or
sarb
or
mov
add
repnz
and
fistpll
int
enter
fs
aad
jle
sub
loope
mov
xchg
scas
and
shl
aam
in
push
shl
jnp,pt
aaa
negl
mov
lcall
add
dec
xchg
loop
or
je
rcrb
adc
mov
adcb
adc
cmp
push
jne
cmp
fldcw
xchg
cmp
xchg
cmp
jge
push
mov
out
mov
xchg
mov
add
mov
mov
call
fsubrl
shrb
mov
out
or
cli
cmp
js
stc
iret
jmp
mov
cmp
sbb
mov
inc
ud0
push
pop
sahf
inc
push
out
outsl
gs
push
or
xchg
cwtl
cmp
xor
into
pop
pop
dec
jb
repnz
jne
xor
loope
xor
insl
mov
sub
sti
push
jle
lods
jne
lds
test
mov
popl
sti
imul
mov
ret
mov
cmpsb
pusha
sub
or
sarl
adc
scas
sbb
aam
sub
push
push
sub
fmull
movsl
outsl
inc
movsl
enter
mov
push
shr
sbb
jp
je
js
jns
popf
mov
cmpsb
push
aas
loopne
xchg
inc
repnz
pop
push
add
stc
std
jae
jmp
imul
outsl
divb
pop
imul
adc
fistl
pop
push
push
add
dec
dec
jbe
mov
shrb
push
and
les
imul
pop
sarb
or
lret
in
jo
jns
loop
fisubrl
xchg
repz
daa
sahf
fisubrs
int
inc
sar
xor
lcall
cmp
clc
add
iret
popa
pop
push
cmp
push
push
test
mov
stc
mov
jbe
xchg
cmpl
inc
repnz
test
js
test
popa
scas
stc
sbb
xor
dec
fnstenv
sbb
int
mov
test
repz
test
add
jmp
add
add
push
mov
add
sub
or
adc
mov
jle
fsubl
xchg
imul
in
mov
jecxz
add
into
out
cmpsl
nop
mov
hlt
xchg
inc
test
jae
stos
push
xchg
pushf
nop
shll
jbe
aad
dec
pop
add
xchg
sti
or
sub
pop
jno
int3
sbb
cwtl
jmp
ljmp
push
jecxz
mov
lret
cmp
aas
sbb
cltd
icebp
jbe
mov
into
imul
jecxz
push
mov
out
xor
rcll
jae
aam
loope
sti
add
or
pop
loope
cmp
sub
push
mov
enter
or
or
add
mov
dec
in
test
xchg
dec
cwtl
fsts
imul
cmp
addl
subb
xor
sbb
xchg
mov
hlt
popa
jecxz
in
out
ror
push
add
cwtl
adc
push
push
loope
cmp
es
push
vpandn
inc
or
mov
fs
or
mov
in
test
mov
jae
adc
dec
jbe
or
in
lods
bsf
push
xchg
push
pop
lcall
lock
cmp
cmp
pop
movsb
sbb
xchg
jnp
push
outsl
jmp
test
push
ds
nop
addr16
stos
subps
and
and
clc
or
rcrl
les
mov
add
inc
cmpsl
mov
test
repz
movsb
cmpb
jmp
fwait
movsl
pushf
adc
mov
stc
lock
das
fidivl
cltd
inc
fsubrs
jl
xor
es
and
jne
xchg
adc
pop
sbb
dec
lods
xorl
cmp
and
fs
into
push
nop
xlat
ljmp
cmp
jo
pop
adc
nop
cld
xor
adc
xor
lret
adc
lretw
out
xchg
fwait
dec
or
inc
mov
iret
stc
and
push
jb
lret
gs
int
push
sbb
pop
jp
add
iret
into
fmull
jne
sub
sbb
cmpsb
imul
lock
out
mov
jo
sahf
mov
xchg
mov
in
pop
jne
popf
inc
fwait
jbe
ljmp
jbe
dec
ljmp
sbb
mov
and
mov
mov
or
cmc
mov
ja
ret
insl
mov
push
insb
sarl
pop
punpckhwd
ljmp
sub
pop
aas
pop
dec
cmc
in
js
push
add
dec
xchg
lea
sub
adc
jmp
xor
xchg
or
divl
jnp
les
adc
in
pop
jns
xchg
add
or
jne
test
imul
fwait
push
xchg
mov
lods
mov
xor
jle
dec
out
roll
mov
stos
cmp
add
add
les
mov
out
cmpb
sar
xchg
sahf
repnz
or
pop
data16
cld
iret
mov
pop
insb
div
stos
mov
out
pop
and
sub
and
pop
pop
scas
lods
push
mov
mov
cmp
scas
add
cmpsb
and
xor
mov
and
repnz
sahf
aad
mov
ficoml
cmp
movsl
pop
loope
hlt
in
loope
add
imul
scas
cmpsl
and
dec
aaa
and
xor
push
test
imul
insb
sbb
push
and
cmpsl
push
je
inc
sbb
out
sbb
inc
jmp
xchg
mov
cmpl
mov
call
ljmp
stc
and
lock
and
or
int
inc
mov
jne
sbb
cmp
je
pusha
pop
xchg
gs
jle
pop
sbbl
lods
rcrl
mov
clc
lods
bound
repnz
cwtl
lods
sbb
shll
sbb
sub
mov
clc
add
sub
into
in
sub
mov
mov
cmpl
lods
jo
xchg
lock
jns
jge
sub
adc
outsl
sti
and
sub
cmp
xchg
lret
sbb
movsb
test
lcallw
mov
fisubl
push
jno
xlat
js
pop
jmp
test
sahf
fadds
out
sbb
sbb
cmp
hlt
push
cmp
ds
nop
int3
push
jg
jnp
xor
jb
xorl
cmp
cltd
sub
loopne
pop
pop
out
xchg
loopne
movsb
es
fisubl
sbb
imul
jbe
mov
in
fldl
jbe
mov
push
adc
subb
push
or
mov
vpsubd
aas
lret
in
ffreep
mov
sbb
test
ficompl
xlat
dec
add
adcb
push
sarl
or
xor
je
sub
ja
add
loop
seta
incl
es
test
leave
push
push
test
pop
repz
and
jg
pusha
mov
loopne
mov
jbe
adc
or
inc
fldcw
xor
push
rcrb
sub
aaa
test
sahf
jo
cmp
jg
cmpl
cmp
addr16
push
and
mov
sub
cmp
sub
adc
lock
aaa
xchg
cld
int
xor
lds
and
rclb
cld
pushf
cmp
push
scas
inc
add
mov
test
je
push
imul
or
or
icebp
xchg
pusha
mov
mov
push
out
mov
in
xor
sbb
js
sbb
xor
mov
imul
clc
xor
fnsave
and
or
addb
push
stos
dec
fcoml
out
sub
xor
pop
cmpsl
or
pop
movsl
jae
and
push
mov
or
repz
and
adc
mov
insb
mov
mov
push
add
shll
movsb
gs
jns
cmp
lret
push
mov
sub
pmuludq
mov
jp
lret
cmpsb
xchg
leave
insl
js
and
pop
nop
movsb
jg
cld
mov
or
mov
lret
sarl
sbb
std
xor
mov
dec
xchg
lret
xchg
into
dec
stc
inc
cmp
add
popf
sti
or
into
sbb
inc
jle
call
xchg
cmp
jge
stos
mov
cmpsb
and
xchg
leave
sti
cmc
or
je
mov
pop
js
mov
fsubr
into
inc
shll
xor
push
idivb
push
xchg
mov
push
sbb
cmp
sbb
ja
rcrb
adc
pop
cmp
jge
not
cmp
pop
jnp
mov
lock
rcl
inc
lods
neg
mov
and
out
nop
shlb
xor
sbb
stc
jnp
movsl
pop
mov
aaa
mov
mov
push
jl
pop
std
inc
xchg
popa
fsub
pop
arpl
stos
arpl
push
imul
lock
inc
cmp
aaa
jbe
jge
test
lock
shl
icebp
jge
aas
dec
in
mov
jp
mov
fwait
stos
popa
mov
and
xorb
sub
xchg
dec
lcall
test
icebp
xor
lock
jmp
jb
sub
fs
imul
loopne
mov
pop
and
scas
out
sub
pop
or
test
adc
imul
jo
mov
movsb
lock
jo
mov
sub
and
mov
sbb
xchg
in
xor
jp
jge
repz
movsb
pop
ljmp
push
xchg
loope
pop
js
push
movsb
jbe
sahf
int3
mov
cmpsl
insl
adc
sub
out
mov
data16
xor
call
ljmp
repz
mov
sub
mov
adc
test
in
pushf
mov
push
jmp
dec
mov
pop
call
movsb
push
repz
imul
ljmp
je
in
lahf
sub
repz
adc
popf
ud1
jp
cmp
leave
scas
aam
xchg
mov
jg
sbb
xlat
adcl
jb
loopne
insl
push
lcall
xor
into
cmp
pop
les
adc
inc
push
xor
ljmp
mov
nop
xor
dec
test
imul
add
stc
jbe
or
xchg
rorb
push
aaa
sub
pushf
inc
dec
jmp
ljmp
lock
sub
dec
je
cs
fs
bound
lea
mov
jmp
inc
repz
xlat
daa
sahf
push
shrl
sarl
sbb
lock
or
lretw
std
imull
fwait
jge
mov
mov
dec
das
inc
cmpsb
arpl
stc
inc
popl
xchg
push
js
pop
arpl
ljmp
mov
movsb
sub
mov
lea
repz
outsb
cmp
scas
xchg
dec
jb
repnz
call
mov
push
gs
movsb
inc
jae
es
shl
scas
in
insl
xchg
stc
mov
push
aaa
jmp
out
jmp
lret
fcompl
push
xchg
outsl
mov
sbb
mov
push
sub
or
out
mov
jae
add
cmp
nop
insb
xchg
imul
add
and
sahf
sub
testl
cmp
movsl
xlat
out
les
cmp
cld
jno
dec
mov
jecxz
push
pop
shlb
std
xchg
in
xchg
jl
cmp
roll
or
inc
pop
jecxz
sbb
xor
lret
pusha
xchg
mov
repz
jge
mov
sbb
mov
or
test
pop
push
adc
dec
popf
or
lds
cmc
into
popa
imul
cwtl
or
and
adc
jmp
push
outsb
pop
das
sbb
mov
xor
jbe
cmp
je
xchg
mov
arpl
ljmp
sbb
test
and
jns
adc
fs
dec
mov
les
jle
ss
aad
jb
sub
arpl
dec
dec
add
mov
pop
pop
adc
in
rcrl
inc
jl,pt
movsl
lret
push
cld
add
mov
pop
cld
mov
mov
pop
pop
xchg
pusha
sbb
decb
cltd
push
and
jne
push
push
sbb
fcomip
push
das
in
dec
add
out
mov
adc
xchg
pusha
dec
or
jnp
into
jno
negb
in
enter
mov
jne
and
xor
sub
pop
fs
call
sub
dec
lds
fidivs
fcoms
sbb
cmpsb
cmp
sarl
sarb
ds
mov
lds
cmpsl
push
xor
mov
andl
rcl
xlat
and
jns
and
cmpsb
sub
jmp
sbb
and
jg
adc
adc
pushf
jo
and
daa
push
out
cwtl
xlat
hlt
mov
push
lret
jns
flds
sti
xor
js
test
fs
loop
and
mov
pop
sbb
iret
xchg
push
lds
inc
push
repz
cmc
fildll
repnz
pushf
in
push
cmpsl
mov
pop
pop
push
lods
ja
jnp
adc
int3
pop
push
loop
dec
jl
pop
push
jae
lods
std
mov
rcll
mov
inc
mov
aad
das
popa
push
clc
les
outsl
and
cmp
mov
andb
out
adc
sbb
dec
sub
jecxz
xlat
xor
in
cli
test
push
mov
dec
push
test
xchg
mov
mov
sub
out
ret
nop
lods
sbb
in
push
movsb
fstp
fs
loope,pn
fisttps
push
cmp
bt
out
xlat
cmp
xor
std
aas
sahf
ja
dec
daa
mov
pop
lods
or
sbb
cld
pop
cli
cmp
test
mov
aaa
mov
push
out
cmp
fnstsw
xor
dec
inc
jl
pop
ja
fst
add
dec
mov
pop
inc
imull
cmp
and
bound
mov
fdivr
pop
pop
clc
repz
add
xor
aaa
sub
movsb
jg
cmpl
dec
xchg
jae
mov
popf
or
negb
pop
or
lcall
xchg
mov
cmp
push
sbb
dec
cmpsl
repz
movsl
mov
sbb
cmpsl
repz
push
je
movsb
fisubl
in
xchg
je
jecxz
pop
pop
add
or
gs
inc
test
pop
jg
mov
inc
fsubs
or
or
push
mov
sbb
out
mov
iret
popa
das
jecxz
cmp
push
fldt
mov
xor
cmpsb
sahf
cmp
mov
mov
clc
loop
sahf
push
dec
mov
pop
jo
insb
inc
ret
in
inc
inc
in
cld
roll
mov
mov
jg
xchg
pmaddwd
mov
cmc
cmpl
insl
xchg
arpl
jl
jge
test
cmc
mov
loope
pop
pop
nop
jno
repnz
ja
adc
lods
sbb
dec
dec
das
mul
sbb
out
jo
push
cli
push
xchg
scas
and
divb
imul
xlat
lods
mov
pop
int
scas
cmp
mov
and
and
pop
sbb
lods
and
mov
lret
shll
mov
mov
mov
inc
out
add
int3
stos
and
iret
jne
mov
mov
adc
cmp
mov
push
cltd
pop
subb
cmc
mov
repz
cmp
inc
lret
sub
cltd
rcrl
push
dec
add
movsl
xor
xor
pusha
subl
nop
xchg
fcmovne
adc
cwtl
lods
cmp
mov
push
mov
dec
es
pop
inc
sbb
jl
mov
xchg
fbld
addr16
ficomps
addr16
pop
pop
out
sub
sti
idivl
loope
sar
pushf
mov
cmpsl
nop
sbb
mov
loopne
mov
test
or
aam
jne
mov
cmc
popf
pop
xlat
jae
or
lret
mov
shll
test
test
int
and
scas
inc
fmuls
fcmovne
int3
cltd
add
or
pop
ja
inc
xor
dec
mov
adc
mov
sbbl
sbb
pop
add
shrl
cwtl
or
fsubrl
movsb
daa
sahf
sbb
loopne
xchg
mov
rcrb
mov
cltd
push
dec
in
mov
cmpb
aas
sti
andb
lods
lods
mov
sub
testb
adc
hlt
and
mull
mov
jmp
adc
cmp
push
and
adc
dec
and
hlt
inc
inc
cs
inc
mov
aad
sub
enter
dec
sbb
inc
mov
mov
fldl
push
or
xor
ret
idivl
lret
out
xchg
enter
fwait
mov
mov
or
orl
or
loopne
sbb
or
jg
ja
aaa
or
cmpsb
gs
jecxz,pt
mov
daa
mov
arpl
dec
clc
mov
mov
mov
inc
add
bound
pop
sub
mov
rcll
loop
sbb
cmp
loopne
mov
out
cwtl
xchg
aas
inc
fdivrs
add
cmp
adc
pop
xlat
push
cltd
rclb
addr16
test
movsb
cmpsb
pop
adc
movsl
jp
cmpsb
xchg
pop
subb
mov
mov
shrb
xchg
fcomi
repnz
adc
fistpl
adc
fistps
arpl
nop
add
dec
gs
sarl
xchg
out
mov
loopne
push
dec
lea
cmp
inc
lods
xchg
lods
lcall
cmp
shlb
cmp
jne
pop
lock
out
out
scas
adc
popf
pop
pop
xor
pop
test
imul
xchg
inc
loopne
xor
test
mov
dec
push
les
and
push
pop
jae
dec
sbbb
mov
imul
cs
ret
jmp
fsub
adcl
adc
int3
ror
xchg
inc
push
aad
jmp
mov
mov
or
pop
hlt
loope
sub
jae
push
xor
cltd
inc
jns
mov
fisubs
adcb
pop
movsb
jns
jle
sti
hlt
and
pop
cmp
sub
dec
icebp
cmpsl
daa
je
das
out
adc
insl
es
pop
xor
cmc
xor
cs
inc
and
inc
sbbb
roll
pop
pop
cmp
pop
jno
inc
sub
aam
push
mov
inc
dec
pushf
enter
mov
imul
scas
aas
jnp
js
test
iret
xchg
jbe
cld
xor
shll
ja
aam
outsb
dec
add
js
mov
lods
xchg
inc
push
jp
sub
out
loopne
jae
mov
lahf
sub
lret
jle
push
push
push
mov
gs
mov
mulb
push
push
mov
mov
ret
mov
jne
les
out
mov
addb
adc
ret
mov
pop
mov
loope
adc
add
popa
aas
jmp
jns
mov
sbb
repnz
xor
stos
or
jge
and
or
out
call
in
jecxz
stc
cs
cmc
lds
jne
dec
packsswb
push
mov
cwtl
fildl
jno
sbb
xor
xchg
movsl
imul
rcl
and
pushf
sbb
xor
cmp
pop
movd
int3
fdivrs
and
into
mov
dec
jge
ret
jl
mov
inc
ljmp
popa
enter
adc
push
xor
xor
xchg
sub
mov
jecxz
orl
adcb
dec
int
aad
and
adc
adc
jae
mov
push
add
popf
into
dec
adc
lret
aas
sti
int3
or
out
loope
jge
es
bound
dec
mov
mov
ficoml
dec
pop
jp
in
loope
jecxz
into
mov
mov
sti
shlb
lcall
shlb
pop
jp
and
mov
mov
mov
xor
or
dec
out
ret
dec
mov
test
cmp
lahf
and
mov
mov
push
cwtl
adc
inc
xchg
pop
bound
dec
pop
pop
mov
fwait
xchg
jmp
adc
sub
and
es
push
fsubrs
dec
test
cmp
daa
repz
push
mov
mov
sub
into
cmp
jno
cmp
push
xor
stos
or
xchg
insb
and
mov
sahf
std
dec
inc
outsb
sbbb
push
clc
neg
sbb
xchg
sub
dec
andb
mov
nop
rcll
enter
sarl
push
push
or
cmp
test
les
ret
mov
shll
xchg
jge
ret
daa
add
push
jecxz
lret
push
jp
jp
adc
lcall
cli
dec
ret
in
ret
xchg
push
insl
aam
jbe
mov
push
popf
inc
aas
movsb
mov
mov
cltd
xor
and
cli
push
sbb
cmpsb
pop
cmc
pop
dec
in
jle
stos
or
mov
test
loop
das
pop
jl
push
add
mov
jge
dec
adc
jmp
shrl
xchg
lods
xor
sbb
mov
mov
das
adc
xlat
shlb
daa
pop
sbbl
pusha
push
jb
dec
test
rcrb
shl
inc
ret
mov
mov
pop
insl
push
imul
aad
inc
divb
push
insl
outsb
mov
xchg
xor
sarl
sbb
call
in
cli
pop
arpl
out
mov
mov
cmp
add
jno
xor
push
call
add
out
mov
xchg
pop
scas
mov
pop
pop
je
add
std
out
xlat
je
push
scas
sahf
ret
xchg
jg
pop
leave
push
cmp
push
inc
lahf
mov
daa
mov
lock
hlt
pop
jl
inc
pop
xchg
int3
std
orb
cmp
loop
outsl
icebp
add
push
shlb
push
ret
mov
cld
or
fs
add
cmp
das
pusha
add
and
jl
pusha
sbb
sbb
and
pop
cmp
test
test
add
test
xlat
inc
decb
cmp
or
xor
popf
andb
aam
mov
repz
cmp
mov
in
cld
lods
and
arpl
mov
xchg
inc
or
dec
adc
js
jne
xchg
int3
es
inc
sbb
adc
dec
jle
xchg
aaa
push
push
cmp
add
mov
sbb
pop
out
leave
fdivrl
inc
fistpll
xchg
sar
ds
inc
js
aad
stos
xor
add
sbbl
bound
dec
jmp
pop
loope
outsl
sub
stos
xchg
adcb
dec
push
jns
int3
fnsave
scas
xor
jecxz
movsl
sbb
add
xchg
push
ds
imul
mov
stc
adc
shrl
in
push
jg
sbb
enter
dec
cltd
addl
or
inc
pusha
popf
mov
cli
or
mov
xchg
jmp
jmp
xchg
ret
inc
cmp
movsl
push
and
data16
mov
pop
cltd
test
pusha
divl
ficoms
sub
loope
and
outsb
dec
inc
mov
dec
js
fwait
xchg
inc
xchg
sarl
mov
xchg
into
std
adc
rcrl
sub
fisttps
or
inc
lea
inc
jns
cs
or
popf
inc
mov
xchg
ror
inc
jnp
cmp
aaa
mov
sbb
push
or
int
ret
ror
cmpsl
lea
add
jl
ss
pop
sbb
pop
xor
and
test
mov
xchg
inc
or
loope
xchg
cmp
jae
fdivrl
out
mov
add
jno
arpl
and
sub
pushf
loop
xor
pop
and
js
subb
jno
add
popa
adc
andl
int
push
sub
mov
sbb
adc
test
cs
jl
popf
pop
popf
mov
lret
jae
js
and
xor
fldt
add
test
pop
inc
jmp
repnz
stos
xor
ss
ret
scas
mov
outsb
inc
or
fs
les
stos
lsl
in
and
dec
aaa
out
bound
cmp
inc
mov
add
lahf
push
xor
jne
adc
jns
jmp
ret
cwtl
xchg
inc
xchg
pop
out
ret
sbb
mov
bound
jnp
adc
into
mov
sub
cmc
sbb
mov
hlt
xor
xor
notb
scas
loope
cld
mov
std
insb
cmpsl
rcr
aaa
cltd
mov
dec
or
mov
f2xm1
sub
je
inc
into
rcrl
lock
pop
iret
and
popa
daa
mov
icebp
sub
mov
mov
ja
xchg
pop
dec
cmpsl
mov
in
xor
lea
es
ss
mov
lret
arpl
cld
das
mov
adc
and
mov
jmp
lahf
dec
loope
push
add
push
test
sbb
movsl
mov
addl
cltd
mov
cmp
push
sub
xchg
iret
sbb
scas
inc
jle
xchg
xor
mov
cld
jns
sbb
and
call
dec
dec
xchg
sbb
test
or
sti
push
out
sbb
mov
aad
dec
mov
mov
xor
popa
mov
xchg
xor
imul
icebp
daa
push
out
test
test
push
mov
out
fists
mov
or
repnz
ljmp
sahf
cmp
fwait
mov
stos
iret
pop
mov
xchg
in
mov
mov
sub
mov
fldt
clc
sub
ud2
mov
xchg
sbb
in
aam
je
inc
dec
jp
mov
insl
sbbl
adc
gs
pushf
dec
fldenv
xor
test
push
clc
jg
rolb
pop
sti
xchg
adc
xchg
testb
push
push
aam
in
imul
and
stos
es
aad
jnp
xchg
xchg
jae
mov
xchg
push
inc
aas
mov
movsb
push
imul
sbb
in
pop
mov
mov
data16
movsb
in
push
add
cmpsl
fdiv
rolb
pop
push
pop
xchg
adc
mov
cmp
arpl
xor
xor
jne
push
jae
subl
push
xor
jp
fwait
stc
test
sub
test
rcrb
and
dec
in
int
add
jne
xchg
les
dec
aad
sbb
xor
add
cmp
lea
aaa
iret
jmp
xor
stos
mov
mov
mov
mov
sbb
das
cmp
push
int
jmp
inc
shl
mov
in
jnp
sub
sbbb
mov
xor
inc
pushf
out
mov
fisubrs
or
das
adcb
out
jae
mov
cmp
sub
jbe
test
push
push
inc
mov
jecxz
jne
add
mov
hlt
or
push
ret
rcrl
mov
pop
dec
mov
mov
xchg
jecxz
dec
cmpsl
and
in
mov
shll
ss
jne
or
mov
mov
rcl
xorl
scas
pop
lock
fdiv
push
les
push
and
fimull
jecxz
cmp
mov
sub
push
add
jle
repnz
cld
flds
jg
fdivrl
mov
push
or
jl
and
aam
xor
aam
lea
xchg
mov
bound
js
push
lahf
push
mov
inc
or
and
pop
imul
adc
fs
add
in
scas
mov
push
push
js
movsb
gs
es
movsb
inc
and
leave
xor
pop
insl
insl
insl
jecxz
pop
lret
clc
push
repz
ljmp
cmp
enter
xlat
out
shll
out
jecxz
test
roll
xor
scas
inc
stos
push
xchg
xchg
pop
mov
out
cli
jg
push
addr16
jnp
push
leave
enter
xchg
jnp
loop
iret
pusha
stos
hlt
push
leave
xchg
fmuls
test
mov
jb
xchg
push
mov
mov
bound
mov
or
jg
lcall
mov
adc
lods
clc
push
shll
xchg
push
arpl
es
push
iret
pop
inc
or
pop
mov
nop
insb
js
xor
loopne
mov
fwait
in
jno
es
stc
jne
mov
xlat
inc
sbb
in
fs
pusha
aam
xlat
fiadds
lods
jbe
test
cltd
push
les
adc
aaa
hlt
cmp
in
shlb
cmp
sbb
orl
dec
add
test
mov
insb
add
pop
push
loop
jne
jbe
pop
pop
rcrb
push
andb
scas
scas
add
outsl
jno
cmc
cltd
mov
mov
dec
scas
jo
loop
repnz
push
mov
xor
shrl
fidivs
stos
stc
xchg
por
sbb
arpl
loop
and
repnz
das
cmp
in
jl
rcrb
test
dec
cmpsb
adc
jp
mov
cmpsl
les
xor
jbe
lcall
push
imul
gs
inc
add
jnp
push
mov
push
inc
dec
decb
iret
movsl
mov
aam
in
loope
mov
fnsave
hlt
sti
decl
jecxz
push
rorl
or
ds
cmp
lahf
adc
mov
stos
push
fs
imul
popf
je
jmp
mov
data16
cmc
mov
test
sbb
int3
daa
cs
mov
push
dec
into
scas
cwtl
in
mov
mov
cmpsl
shl
mov
cld
in
aam
sub
mov
cwtl
andb
loopne
out
negb
lea
leave
lea
adc
in
adc
push
arpl
aaa
sbb
fsts
xchg
in
mov
pop
mov
fwait
push
dec
testb
xchg
ret
xchg
sti
mov
jae
ds
xor
arpl
push
lock
out
rolb
enter
jle
int3
add
mov
testl
pop
insl
fdivrl
push
push
jo
js
xchg
xchg
adc
lret
es
test
mov
pushf
movsb
sarb
jp
dec
adcb
jmp
push
ljmp
sub
arpl
jecxz
scas
inc
xchg
push
sbb
dec
jmp
pop
or
xor
inc
dec
cmc
jae
inc
shrb
in
push
cmp
pop
inc
mov
adc
fisubl
ljmp
or
pushl
jb
enter
jle
leave
out
enter
stc
lret
cld
mov
popa
lcall
jne
sahf
jno
jo
inc
jge
pushf
ljmp
pushf
mov
push
fistpl
pusha
xor
lret
cmp
movsl
je
adc
out
out
jmp
inc
push
mov
cs
xchg
sbb
xor
data16
and
mov
xchg
aam
inc
stc
and
insl
in
outsl
lods
mov
jns
xchg
sbb
stc
sub
lret
push
jno
push
jle
je
and
addr16
push
jmp
or
popa
cmp
fs
inc
les
xchg
subl
push
ja
lock
std
adc
jns
xor
mov
mov
addr16
icebp
fdivp
ficoml
ret
sub
xchg
mov
fdivl
push
inc
dec
sub
add
sub
sbb
xchg
or
cld
jmp
fcom
cmp
pusha
movsb
push
out
in
fs
jle
clc
adc
inc
and
xchg
nop
adc
adc
jns
or
push
out
dec
lods
xor
cmpsb
fdivrs
sbb
sub
add
and
loopne
js
pusha
mov
inc
jle
and
and
and
mov
and
es
xchg
mov
ret
inc
add
mov
scas
inc
ficoml
mov
jo
or
pop
in
jno
sbb
dec
push
xor
xchg
push
mov
iret
or
xor
out
outsb
sub
lcall
and
outsl
add
les
out
and
mov
fldenv
loopne
mov
xchg
bnd
rorl
add
push
or
les
sub
into
jecxz
cmpsl
xchg
fcomi
addr16
jmp
pop
dec
cli
ror
dec
pop
xor
and
loope
push
cltd
xor
inc
jg
dec
jp
sub
xor
jbe
lahf
int
fstps
sbb
imul
mov
sub
ss
outsl
enter
ljmp
dec
das
out
sub
repz
das
and
je
xchg
mov
lret
cwtl
das
pop
sub
sub
popf
out
popa
mov
or
aad
ret
mov
aam
leave
fildll
dec
and
cmp
les
mov
rcl
lods
jo
sbb
loop
stc
mov
adc
lea
mov
aas
enter
loope
mov
pop
pop
ret
inc
shrb
test
pop
fisttps
ret
ret
adc
or
xor
sbb
jae
add
mov
shll
add
xchg
loopne
popf
jle
mov
or
pop
iret
gs
roll
inc
ss
or
or
inc
cltd
inc
hlt
out
jg
dec
out
and
dec
popf
mov
inc
sti
out
jb
inc
jns
cmc
and
lret
sarb
out
ds
stc
aad
push
insb
shlb
sbb
in
push
imul
popa
xor
lret
xor
cs
stc
scas
cmpsb
test
and
adc
mov
jne
lret
or
fistpl
cmp
test
mov
test
sbb
shlb
les
fdivrs
imul
std
jnp
push
adc
mov
in
js
sub
imulb
push
lret
mov
lea
in
imul
push
adc
mov
add
pushf
shlb
mov
arpl
in
lret
cmp
sub
or
mov
mov
iret
mov
dec
xchg
cs
ja
ja
mov
rcrl
shll
jmp
adc
daa
jecxz
mov
xchg
call
jp
enter
sub
cmpsl
iret
push
sub
repz
cmpsl
inc
cwtl
pop
cmpsb
mov
mov
mov
mov
mov
mov
push
mov
mov
daa
sti
cmp
dec
sbb
lea
inc
cmp
sub
push
sbb
dec
or
ljmp
lds
sbb
xchg
mov
sub
cli
dec
pop
jne
rolb
push
ljmp
cmc
out
jmp
sub
sbb
cmp
testb
push
mov
in
and
shlb
mov
ja
dec
pop
test
sarl
jmp
fidivrl
xchg
lret
sbb
mov
or
das
in
pop
xor
sbb
jle
pop
mov
inc
dec
mov
pop
imul
cmp
subb
sbb
cmp
add
mov
call
jo
jno
popa
mov
mov
cltd
cmp
mov
mov
out
xorl
sub
frstor
cmc
lgs
cs
outsl
negl
inc
add
jno
fcomps
out
sbb
xlat
mov
outsb
mov
outsl
fnstsw
fistl
mov
stos
stos
imul
mov
and
fisttpll
cmp
pusha
xchg
inc
mov
imul
inc
and
sahf
mov
cmp
jmp
adc
test
push
pop
xor
jne
pop
cmp
dec
sbb
cmp
or
xchg
sub
test
jb
enter
in
adc
stc
jns
xchg
inc
mov
sbb
imul
cmp
cs
push
adc
cmp
cvtps2pi
jecxz
push
mov
fs
mov
lds
pushf
fs
inc
mov
push
imul
icebp
mov
mov
sub
je
push
jg
add
adcb
xor
shl
pop
mov
stos
push
lcall
mov
push
out
sbb
push
cmp
mov
imul
cld
iret
imul
test
pop
add
mov
movl
jecxz,pt
add
in
test
movsl
aad
inc
xchg
ss
or
cwtl
mov
out
pop
cmp
into
outsl
repnz
mov
fadds
add
ret
shrb
jecxz
stos
mov
call
ret
xchg
add
repz
adc
add
pop
repz
test
es
sti
addl
xchg
and
scas
scas
movsb
adc
or
lahf
or
sub
mulb
adc
test
inc
mov
push
xchg
stos
cwtl
mov
jo
dec
movsl
or
cmc
sub
lret
insb
or
fcoms
imul
adc
dec
lahf
and
ret
jo
cli
add
xor
iret
roll
sub
dec
mov
xchg
xor
xor
stos
lea
and
xor
mov
in
nop
mov
xchg
out
mov
sbb
or
pop
push
or
int
hlt
fisubs
push
push
mov
in
mov
sub
xor
loopew
shll
fidivl
bnd
addl
jo
std
fdivl
stc
pop
jne
push
inc
sbb
jnp
pop
xor
dec
mov
loope
test
dec
pop
mov
add
sbb
adc
out
jnp
sub
inc
ret
fdivl
jne
sub
dec
fcom
dec
int3
icebp
fs
or
icebp
mov
or
nop
imull
and
ret
repz
lahf
aam
rolb
jecxz
mov
push
mov
fcomp
ss
test
xor
mov
sbb
cmp
nop
mov
outsb
mov
inc
pop
mov
pop
push
jns
mov
push
dec
adc
stos
mov
mov
imul
and
repz
pop
ja
pusha
pop
sbb
xchg
fadd
fsubl
mov
xor
cltd
adc
int
jmp
scas
lahf
add
sub
loope
mov
mov
subl
rcr
xchg
out
imul
mov
cltd
sub
pop
sahf
fs
das
fs
dec
aaa
pop
jae
aam
jle
push
ret
xor
insl
sbb
fwait
mov
mov
xchg
scas
or
std
fldt
xor
nop
jne
xchg
mov
inc
aaa
sti
in
shrl
rolb
xor
lock
in
es
insl
push
jge
sbb
movsb
out
rorl
fisubrl
sub
adc
sbb
dec
dec
xchg
insb
pop
mov
daa
and
test
fldcw
les
jge
cwtl
add
je
lidtl
test
or
lahf
movsb
xlat
lock
dec
jnp
inc
sbb
orb
pushf
push
jns
pop
add
mov
ljmp
daa
les
or
lock
jne
push
xor
cli
js
cmp
rol
push
stos
cmp
or
int3
stos
jo
push
scas
jns
fwait
mov
repz
push
inc
jae
imul
lcall
mov
push
sub
mov
jg
cmpsb
ds
repnz
lahf
lods
das
inc
jg
cmp
arpl
ljmp
push
mov
cmpsb
sub
aaa
cmc
jl
dec
mov
push
inc
jle
cltd
fbld
xor
pop
pop
push
add
addb
rorl
pop
xor
pusha
shlb
out
popf
arpl
out
sahf
mov
push
mov
or
imul
popf
popa
xchg
sub
lahf
push
mov
pusha
adc
push
loopne
mov
aam
popf
psllq
imul
add
ja
sub
or
sar
mov
dec
cmp
dec
fdivrp
sub
aaa
add
or
out
pop
add
add
dec
inc
in
push
shrl
cmpsb
int3
outsl
xchg
push
jecxz
mov
jge
add
xor
mulb
jae
es
jns
stos
sub
flds
adc
xchg
push
or
pop
outsb
lahf
lods
aaa
outsb
sub
lds
xchg
aam
add
xchg
cmc
sarl
fwait
xor
pop
flds
imull
in
lods
fsubr
inc
scas
jbe
fnstenv
adc
and
push
aam
lcall
push
aaa
mov
int3
adc
push
or
mov
mov
scas
xor
flds
or
inc
xchg
sbb
iret
lock
arpl
loope
add
push
lods
adc
dec
push
or
cmc
mov
pop
addl
mov
or
in
std
jo
popf
ficompl
xor
es
dec
xchg
mov
les
rcrl
loope
adc
pop
scas
fidivrs
loop
pop
dec
jecxz
add
pop
xchg
jp
dec
dec
push
or
aam
cs
aaa
or
imulb
hlt
imul
in
lret
jne
mov
stc
sti
mov
std
dec
xchg
loopne
out
jp
cmp
xor
cmp
clc
xor
and
loop
mov
dec
test
dec
pop
fnstsw
daa
sub
add
dec
push
fldcw
lret
ds
sti
loop
and
fildll
mov
insl
iret
pop
xorl
pop
xchg
inc
andl
incl
mov
xchg
sub
push
cltd
das
mov
cmpsb
push
js
ds
data16
loope
shlb
sbb
lods
add
inc
xchg
stc
and
sti
ljmp
push
ret
nop
out
xchg
xchg
jns
test
push
mov
add
cwtl
mov
clc
insb
fwait
js
rorb
add
pop
add
push
dec
dec
popa
inc
out
mov
out
mov
xchg
pop
xchg
dec
cwtl
and
out
cmp
jmp
lea
push
cs
cltd
in
ds
leave
mov
push
xchg
xchg
adc
sbb
xchg
and
xchg
pop
sub
lock
out
scas
test
and
mov
jle
scas
lea
mov
or
movsl
inc
iret
cvtdq2ps
out
pop
les
std
repnz
pop
mov
jb
jg
fcoms
jecxz
xchg
inc
cmp
ds
push
mov
inc
jnp
cmpsb
cmpb
rcl
pandn
dec
movb
jae
xchg
inc
clc
jns
sub
sub
fisubs
push
addr16
xchg
shrb
jb
dec
call
push
scas
repnz
inc
adc
mov
fs
adc
mov
xor
xchg
scas
popf
out
mov
lcall
inc
into
cmpsb
push
fisttpll
push
mov
adc
pop
dec
lret
shld
sti
adc
add
xchg
cld
or
jl
mov
push
repnz
fs
push
jl
sub
and
out
ss
cmp
push
lods
dec
lret
bound
imul
xchg
jne
sub
shrl
add
jg
sbb
sbb
add
in
stc
es
lret
jge
or
scas
mov
cmp
imul
or
iret
outsl
mov
lods
pop
int3
cmpsl
ljmp
imul
cmp
jmp
mov
dec
pop
ja
loope
mov
pop
ficoml
aaa
orl
pop
sub
push
or
jo
xchg
mov
mov
push
or
sbb
fdivs
sbbl
jns
jg
jg
popa
mov
inc
loope
jg
cwtl
ret
popf
ljmp
inc
gs
ds
cmp
inc
cmpl
inc
lods
insl
and
xchg
add
push
movsl
mov
pop
mov
pushf
test
jmp
jb
ffree
adcl
stos
ret
rorl
and
inc
sbb
inc
insb
mov
in
pop
jbe
notl
pop
pop
jg
into
pop
pop
push
and
mov
pop
ret
cs
loope
mov
nop
adc
leave
ss
jo
daa
je
or
mov
notl
dec
imul
movb
scas
mov
sbbb
cmp
inc
test
lcall
xlat
pop
mov
push
bound
mov
sub
pop
xchg
mov
cmp
andb
mov
in
pushf
mov
icebp
mov
fs
repz
mov
cmp
shl
into
cmp
addr16
dec
push
lods
fstp
call
cmp
pop
gs
mov
mov
xchg
add
test
jb
int
dec
or
std
add
aad
add
mov
add
out
jmp
jo
fisttps
bound
lcall
mov
fsubrs
cmpsl
scas
hlt
iret
rcrb
roll
fnsave
insb
and
xchg
lret
jno
mov
xchg
fidivs
subl
out
xchg
test
jb
add
mov
jmp
xor
mov
enter
fbstp
or
hlt
int
jge
gs
cltd
call
or
sbb
pop
pop
mov
sub
mov
pop
sub
sbb
lahf
test
nop
pop
cmp
lcall
add
js
jg
popa
cmpsl
push
or
test
or
xor
jo
lcall
mov
xor
stos
pop
int
push
insl
ret
inc
icebp
enter
xchg
aad
jbe
cld
cmpsl
jo
pop
shrl
je
mov
pop
lock
adc
xchg
mov
inc
mov
dec
push
pop
test
jns
jnp
loop
lcall
daa
add
aam
fmuls
icebp
icebp
outsb
mov
pop
out
rcrb
pushf
sbb
adc
jns
mov
jae
jb
dec
je
dec
xchg
mov
push
jne
pushf
repz
aaa
cmpsl
loopne
lret
adc
loop
je
in
dec
subl
push
lret
mov
repz
iret
xchg
cmp
sub
fnstenv
call
adc
mov
addr16
inc
insl
clc
dec
outsb
outsl
mov
int3
insb
in
jne
cmc
dec
jmp
sub
cmp
je
loope
pop
sub
cmp
fucomi
cs
repnz
cmp
push
imul
xchg
fisttpl
orb
and
and
pop
bound
scas
hlt
dec
sub
push
cmp
add
les
pop
lahf
call
push
js
cmp
cmp
add
mov
and
cmp
sbb
adc
mov
xor
notl
jae
out
and
sub
insl
sbb
movl
fcmovnu
cld
mov
popf
cs
mov
test
sahf
dec
popl
repz
ja
lea
cs
sbb
pop
mov
sbb
sub
outsl
mov
repnz
jbe
cltd
in
jmp
sub
sti
and
mov
addr16
int
xchg
mov
jb
cmp
fstpt
mov
push
adcl
arpl
orl
aam
insb
insl
pop
in
adc
mov
ret
or
mov
mov
mov
jmp
push
jo
sub
inc
push
std
lcall
std
loop
sbb
fnstenv
fimull
xor
mov
lret
popa
xchg
mull
stc
mov
int3
sub
xchg
or
jp
cwtl
xchg
in
cli
data16
sarl
sbb
shrb
cltd
sahf
or
sbb
subl
xchg
jae
push
dec
xorps
cs
cmp
mov
mov
cld
jno
stos
mov
xchg
in
and
cmpsl
mov
leave
stc
mov
dec
xchg
cmp
pop
xchg
dec
push
sti
cld
adc
pusha
and
xchg
fidivl
push
lret
int3
pusha
adc
imul
cmp
push
leave
popf
and
or
push
xor
outsb
loop
movsb
ja
dec
add
xchg
push
adc
xor
shl
sarl
popa
xchg
gs
jbe
and
btr
out
std
jno
fwait
stc
xor
out
xchg
push
add
int
push
mov
jle
inc
mov
adc
adc
pusha
das
mov
xor
mov
cmp
sbb
adc
xor
aaa
pop
jecxz
out
push
dec
mov
lds
inc
shrl
cmp
or
mov
dec
adc
outsb
repnz
test
mov
jo
cmpsb
xor
add
and
loopne
in
fimuls
cwtl
and
cmpsl
imul
into
mov
mov
pop
cmp
inc
lods
and
cmp
or
jmp
dec
jbe
mov
mov
push
in
xchg
xor
enter
std
cmp
jno
test
lahf
xchg
.byte
.byte
